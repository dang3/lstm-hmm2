push
sbb
in
cmpl
pop
call
push
push
add
fucomi
cmc
pusha
add
sbb
pop
jo
pusha
add
push
mov
push
add
out
lea
cld
dec
pop
inc
call
ds
rorb
sub
cmp
les
jle
clc
jp
add
xor
call
push
push
xor
inc
sbb
push
push
jne
adc
or
or
xor
and
or
mov
leave
ret
lret
cwtl
push
rcll
je
rcrb
add
lds
mov
sbb
inc
inc
sub
pushf
jne
adc
or
adc
xchg
out
repz
mov
sub
ja
add
xor
inc
cmp
push
prefetchnta
dec
cmp
or
cwtl
je
xor
inc
movsb
cltd
adc
cmp
mov
push
mov
push
push
mov
mov
push
xor
cmp
add
jp
data16
pop
adc
fs
push
mov
adc
mov
inc
adc
cmc
loopne
jns
sbb
xor
pop
call
sbb
add
sub
sbb
xorb
and
and
push
mov
cld
std
and
mov
push
adc
pop
sub
and
lds
sub
mov
cld
inc
enter
aam
pop
outsl
inc
dec
xchg
mov
dec
sub
leave
xor
pop
cmp
mov
je
xor
movsb
pushf
sbb
adc
out
xchg
adc
outsb
nop
test
jle
nop
test
push
sbb
movsb
loopne
movl
adc
inc
loope
int
adc
or
mov
les
sub
mov
ljmp
nop
dec
int
cmp
and
mov
dec
and
sbbl
and
mov
push
out
inc
push
js
adc
out
push
ljmp
and
push
and
push
inc
adc
jae
cmp
mov
adc
orb
or
fmull
dec
add
mov
lea
xor
sub
adc
sbb
lcall
and
pop
or
dec
popa
mov
or
lock
mov
sub
pushf
loopne
imul
push
dec
pop
sub
icebp
push
add
jbe
dec
stc
adc
push
or
sbb
ds
push
cs
lret
inc
fmul
call
sub
adc
mov
sahf
push
pop
push
push
cli
into
ljmp
ss
push
inc
clc
cld
xor
cltd
inc
mulps
xor
xor
jno
lock
dec
fists
movsl
push
orl
pusha
or
sbb
rcrb
clc
adc
aam
cld
nop
push
fisubrs
filds
loopne
or
and
clc
popl
pop
sbb
mov
js
and
fstpl
push
add
cld
or
lods
test
jne
popf
outsl
and
ja
xor
add
call
xchg
adc
mov
push
push
xchg
sub
bound
in
jecxz
sbb
aam
sub
mov
push
scas
and
decb
push
sbb
jge
mov
adc
push
popa
adc
push
mov
xchg
adc
pusha
fdivrs
sti
setg
pop
dec
pop
jb
mov
adcb
imul
mov
aam
adcb
xor
inc
fcoms
inc
fildll
call
pop
imul
dec
int3
push
jne
cmp
adc
dec
repz
dec
je
xchg
and
pusha
pop
or
or
xchg
mov
bound
les
repz
je
and
push
adc
pop
rorb
enter
call
xchg
xor
mov
sub
fildl
push
push
aad
xor
xor
xor
mov
push
cld
push
test
pop
ljmp
add
cmpb
add
pop
call
std
push
xchg
adc
mov
push
vpinsrw
repz
pop
mov
stos
xchg
and
xor
loopne
pop
add
mov
orb
or
and
test
fwait
int3
adc
adc
test
les
xor
dec
pushf
push
ror
adc
cwtl
mov
das
inc
imul
lret
insb
sahf
push
shrb
les
sbb
pop
or
jmp
push
dec
push
pop
push
inc
push
and
int3
add
mov
sub
pop
lcall
inc
mov
fs
enter
aam
dec
pop
in
and
push
adc
inc
movsb
dec
daa
cmp
out
inc
adcb
add
jne
mov
outsb
push
mov
fs
or
jne
mov
mov
pop
inc
pop
xor
sub
pop
test
mov
les
jno
lret
xor
adc
and
and
or
add
pushf
aam
xor
mov
movsb
aaa
or
enter
xchg
adc
dec
pop
push
jl
les
fwait
push
add
jae
rcrl
inc
mov
add
imul
call
les
dec
jne
cmpsb
adc
mov
adc
sahf
sub
mov
add
jmp
cmp
dec
jo
sub
mov
adc
or
xchg
mov
rol
pop
mov
xchg
adcl
in
mov
push
cltd
mov
nop
push
into
rcl
and
dec
inc
mov
or
es
lea
stos
fcmove
xor
inc
xchg
lds
or
outsl
mov
les
pop
push
flds
ja
jmp
xchg
jne
stc
dec
out
add
andl
movsb
mov
sub
ds
add
gs
push
lds
xchg
sti
xor
testl
push
imulb
sahf
cmp
push
call
pop
fnstenv
jl
loope
lahf
xchg
lea
or
adc
cmc
iret
and
add
pop
or
jg
push
xchg
sub
mov
cmp
adcb
xor
xor
and
sbb
push
push
fstpl
cmp
inc
push
test
mov
add
mov
adc
les
test
mov
and
or
add
out
or
push
test
sub
cmp
mov
mov
cli
add
mov
inc
bnd
scas
mov
and
orl
or
icebp
pop
subl
mov
mov
decl
adc
pop
mov
mov
add
fwait
jl
cmp
dec
and
push
mov
push
jno
or
inc
add
push
push
xchg
sub
loop
jne
les
mov
xor
and
add
sub
cltd
xor
mov
test
int
push
lea
das
lock
sbb
aaa
xor
add
adc
cmp
mov
push
push
inc
jae
or
mov
inc
push
out
pop
jmp
xor
push
adcl
orb
ffreep
pop
shll
xorl
jns
or
out
cmp
jge
xchg
mov
pop
sbb
adc
add
pop
insb
pusha
je
push
scas
jbe
push
jb
push
aas
push
mov
or
popf
inc
call
testb
fdivrs
xchg
push
pushf
std
mov
inc
cli
loopne
push
push
xchg
rorb
push
nop
mov
mov
adcl
ret
movb
pushl
fnstenv
pop
loopne
push
popa
loop
je
xor
push
test
push
mov
cmp
push
or
mov
sub
sarb
or
xchg
fst
xor
xor
call
mov
push
mov
push
sbb
decb
push
loopne
test
fs
or
or
hlt
sub
sbb
sbb
ja
in
sbb
daa
mov
xor
enter
cmp
sub
lcall
sbb
test
push
lock
push
xchg
dec
es
xor
and
sub
loopne
mov
xorb
push
nop
adc
xor
add
push
incl
adc
scas
enter
push
push
mov
stos
sub
jg
adc
mov
repz
sti
sti
sub
push
sbb
fsub
jge
lock
dec
clc
imul
hlt
or
jmp
sarl
add
xor
cmp
add
push
ficoml
pop
aas
sub
mov
inc
mov
repnz
loope
jne
or
xchg
and
lods
aaa
mov
add
cs
shrb
xlat
enterw
dec
sbbb
add
lea
test
push
xlat
dec
insb
jl
sub
mov
adc
xor
push
out
movsb
push
sbb
sub
adc
imul
in
nop
mov
cmc
loopne
xor
jmp
cmpsb
or
outsl
and
mov
or
js
mov
or
dec
iret
test
enter
jne
movsb
push
jmp
int3
aam
jg
je
inc
mov
push
adc
inc
add
xor
cmp
ret
jmp
rclb
sub
push
pop
loopne
push
xlat
and
mov
sar
in
sub
and
inc
cs
sub
call
mov
inc
clc
je
inc
adc
sub
adc
repz
push
pop
jmp
xchg
adc
dec
push
push
pop
and
push
call
dec
adc
iret
cmp
jg
das
mov
mov
sbb
cmp
xchg
inc
or
orb
and
and
in
sub
sub
mov
push
jno
cmp
inc
dec
sbb
sub
pop
repnz
lret
call
int3
bound
cmc
pop
imul
adc
and
dec
cld
movsl
xor
cld
sbb
popa
aam
testb
push
adc
repz
sub
xchg
stc
mov
mov
pop
gs
jns
or
mov
fs
add
dec
and
jo
test
mov
cmc
pop
mov
sub
pushf
add
inc
sbb
les
cmc
push
and
int3
mov
push
aam
or
dec
push
cmpb
xchg
pop
adc
xor
adc
sbb
push
dec
inc
ds
jbe
push
lods
and
inc
sbb
inc
or
sub
adc
add
test
bsr
nop
dec
je
push
mov
or
mov
or
push
mov
loop
inc
das
xor
jbe
enter
and
fsubs
sub
movsb
cmp
xor
data16
les
or
add
pop
jb
sti
cmp
and
enter
mov
jo
lock
nop
push
xor
push
test
mov
xchg
data16
fiaddl
lds
fcoms
push
or
call
das
dec
adc
and
sbb
dec
or
adc
pop
cld
fdivrl
push
popf
sbb
sbb
in
dec
or
mov
stos
inc
add
adc
and
out
push
repz
xchg
jmp
dec
adc
push
inc
das
daa
sub
cmp
lea
inc
dec
cmpb
mov
mov
inc
push
inc
add
xchg
push
loope
mov
mov
jp
jb
sbb
out
inc
add
daa
and
xchg
lock
dec
jne
pop
pop
pop
repnz
not
ret
lock
fistl
cld
bound
js
and
or
test
push
pop
sbb
incb
sub
inc
or
adc
inc
pop
call
test
sub
adc
or
call
adc
mov
push
push
rorb
and
push
addb
test
inc
in
jl
fidivs
cwtl
pushf
clc
test
cmp
or
adc
mov
xor
aaa
dec
adc
mov
mov
repnz
or
adc
sub
and
je
mov
inc
or
xchg
adc
adc
mov
rcll
pop
fsubs
cmp
shrb
dec
inc
rep
loop
push
in
mov
push
or
inc
aad
aam
pop
cmp
das
jne
sbb
push
jb
inc
faddl
xor
sub
jge
dec
xor
inc
sbb
xchg
add
xchg
inc
mov
dec
out
test
pop
repz
adc
pushf
js
push
cmp
clc
leave
fidivrl
and
test
push
adc
repnz
insb
adc
pop
arpl
inc
xor
nop
adc
dec
idivb
inc
adc
push
addl
and
clc
push
or
js
je
test
addr16
addb
popa
cmp
cwtl
cmp
jno
and
ret
loop
inc
ss
xor
loope
dec
push
sarl
add
push
inc
insl
and
mov
aas
add
cld
cwtl
xchg
ret
daa
les
dec
cld
jge
call
jae
jmp
js
push
xchg
add
cmpsl
call
sarb
aam
pop
mov
and
jnp
cmp
out
mov
js
mov
push
shlb
push
sbbb
pop
mov
mov
jne
push
add
add
mov
cld
stc
and
add
pop
jbe
push
dec
stc
sbb
inc
jb
daa
push
adc
mov
xor
fiaddl
movsl
dec
jecxz
inc
xor
dec
cs
cld
leave
push
mov
cs
mov
pop
popf
in
inc
cld
std
pop
scas
xchg
push
add
test
repz
add
adc
dec
and
inc
inc
adc
cld
enter
cmp
mov
sbb
cmp
iret
jmp
popf
cmpsl
push
out
and
push
inc
push
lods
xor
in
bound
jmp
in
into
cmp
dec
xchg
cmp
mov
les
leave
movsl
push
inc
mov
imul
cltd
sbb
test
xor
pop
pop
loope
movl
cmc
and
stos
repz
sub
and
mov
loopne
sbb
outsb
sub
sbb
mov
xchg
mov
jl,pn
sar
push
cs
add
push
adc
sbb
adc
int3
inc
xchg
out
or
or
test
orl
sub
xor
xchg
test
inc
test
je
popa
jne
leave
and
cwtl
push
dec
pop
lcall
es
push
cmp
cwtl
dec
dec
pop
and
ret
movsb
fsubs
pop
call
fdivrl
adc
popa
push
aas
pop
faddp
cwtl
out
mov
inc
inc
enter
mov
adc
lret
dec
sahf
arpl
inc
test
fistpl
push
pop
les
xchg
jo
and
pop
test
mov
insb
dec
inc
and
and
push
in
dec
mov
xor
xchg
and
adc
inc
push
es
inc
inc
and
lods
dec
ljmp
jae
mov
loopne
dec
dec
inc
in
and
mov
imul
adc
out
sbb
adc
jmp
addb
sub
test
mov
dec
lea
lcall
mov
cmp
jge
xchg
adc
push
or
jge
hlt
push
addl
daa
sub
cwtl
orb
insb
sbb
push
test
adc
xchg
push
dec
pusha
testb
cmp
adc
jecxz
push
scas
push
in
and
dec
loope
cltd
push
xchg
pusha
and
jnp
dec
mov
sub
inc
dec
or
pop
in
mov
mov
les
bound
mov
dec
fsubr
push
or
pop
lea
add
push
mov
jns
add
lds
or
mov
add
mov
lods
sarl
rclb
adc
stos
repz
mov
inc
mov
sbb
repz
rclb
push
push
icebp
xor
fstps
inc
shrl
pop
shlb
clc
push
add
test
mov
adc
pop
shll
enter
enter
sbb
int3
jae
or
jmp
ror
pop
sbb
cli
es
mov
adc
jecxz
loop
adc
loop
fldenv
in
pop
fs
loop
xlat
movntq
push
xor
in
es
push
mov
mov
dec
dec
daa
insb
out
pop
or
loopne
dec
jno
add
adc
pop
adc
mov
pop
mov
adc
stc
dec
jge
add
iret
loopne
loope
mov
add
jmp
or
mov
xor
mov
sub
and
add
mov
inc
push
xchg
insb
shrl
lahf
and
mov
cltd
pop
idiv
orl
or
inc
mov
mov
inc
dec
js
inc
xchg
push
mov
pusha
je
xor
mov
mov
xor
enter
add
pop
cwtl
adc
mov
and
inc
popf
mov
adc
xchg
movsb
and
insl
cltd
or
out
add
and
mov
sbb
pop
cwtl
dec
xor
ja
adc
stos
xchg
xchg
pop
insb
repz
inc
sub
jno
push
push
cmp
adc
cmp
cmp
js
outsb
enter
shlb
cltd
sub
sarl
pusha
and
jl
and
add
mov
and
jp
inc
jl
mov
fs
ljmp
int3
fisubs
test
test
inc
push
call
add
push
into
outsl
xchg
stos
sub
push
push
and
xchg
mov
ljmp
pop
sub
adc
mov
test
push
sbb
jne
int3
push
outsb
inc
push
call
shll
inc
mov
mov
inc
cld
push
inc
push
cmp
fistl
and
bound
cmp
cld
sub
push
jns
mov
stc
stos
gs
push
mov
sbb
scas
mov
pop
jmp
imul
or
lcall
dec
les
xchg
mov
mov
and
dec
cmp
lock
add
jg
mov
dec
pusha
cmp
rolb
adc
addl
cmp
lock
push
sbb
push
xchg
push
sub
sub
sub
out
mov
push
and
test
mov
xor
xchg
inc
sti
sbbl
adc
adc
repnz
sbb
pusha
lea
clc
or
pop
mov
and
fbstp
or
mov
cmpsl
insb
and
inc
sbb
push
mov
ds
lea
push
mov
dec
add
mov
lds
jne
push
jmp
push
daa
cmp
jl
sbb
jmp
and
ss
pop
gs
lods
cmp
sub
sub
inc
sub
inc
aam
stos
jb
jmp
push
inc
adc
popa
pop
int3
std
adc
cmp
js
pop
or
fists
mov
and
nop
dec
add
outsb
adc
pop
dec
stos
push
and
dec
fs
dec
loopne
and
popf
js
adc
mov
cmc
or
pop
ss
inc
test
sub
or
push
pop
jl
xor
push
mov
add
in
mov
out
jg
jl
adcb
out
adc
ds
in
push
pop
hlt
std
or
add
adc
jo
or
inc
cmp
adc
mov
push
dec
sbb
rcr
incb
add
movsl
xor
test
outsb
in
adc
sbb
and
cmpsl
addr16
loopne
add
jg
and
popf
dec
rorl
or
outsb
movsb
int3
cwtl
pop
xchg
mov
repz
push
pop
sbb
dec
push
mov
sbb
inc
add
imul
and
xor
mov
lret
test
xor
mov
adc
dec
lret
dec
lods
jno
divl
adc
into
or
add
sbb
aam
or
push
int3
sbb
push
fcompl
cmpsb
je
femms
mov
cltd
mov
stc
push
nop
sbb
sbb
adc
push
adcl
call
mov
add
push
inc
lret
jmp
push
and
stc
mov
mov
push
hlt
sub
inc
add
ficompl
rolb
mov
jno
js
bound
dec
cli
xchg
dec
dec
sar
adc
sub
cwtl
xor
aam
sbb
and
xorl
push
divl
jo
lret
outsl
cld
scas
mov
jmp
call
in
in
popf
cmp
out
xchg
iret
adc
dec
sbb
stc
iret
mov
pushf
in
lret
and
fsubrs
mov
xchg
push
pop
xchg
das
xchg
add
mov
leave
push
mov
call
pop
leave
jno
mov
hlt
js
test
fidivl
mov
and
push
mov
nop
pusha
enter
and
push
inc
pop
cmp
mov
sub
xchg
insb
mov
rcll
in
ja
imul
les
inc
adc
jge
add
jg
jl
in
sbb
jae
jmp
rolb
lret
or
inc
xchg
andl
adc
sbb
loope
addr16
scas
bound
adc
ret
jmp
loopne
and
jo
loope
adc
loopne
dec
inc
ds
lods
pop
sub
adc
cmp
sub
inc
push
inc
cmpsb
push
cmpb
lea
insl
ss
outsb
pop
add
dec
call
lcall
add
stos
out
dec
inc
xor
xchg
cs
loop
xorl
add
lods
sub
sub
call
and
nop
and
js
mov
sub
sbb
or
lock
and
or
popa
inc
rclb
lock
mov
mov
std
fs
inc
xor
inc
cli
adc
cs
es
jns
fsubrp
jmp
pop
enter
ss
aas
adc
in
push
inc
cmp
addb
push
fldenv
and
stc
jle
mov
int3
je
mov
insl
iret
add
mov
pop
xchg
or
out
and
and
sahf
jbe
repz
push
fisubrs
sti
adc
jnp
jge
scas
jno
add
dec
cmp
pop
add
call
pop
out
and
or
jmp
adc
push
mov
das
mov
add
addr16
inc
imul
shrb
je
fnsave
lods
xorb
call
aad
pop
lods
jmp
das
sbb
data16
inc
dec
sub
xor
xor
inc
jmp
icebp
sbb
mov
mov
inc
adc
jo
mov
aam
add
repnz
pop
pop
mov
test
mov
mov
xor
nop
popa
repnz
push
adc
addr16
or
cmp
insl
cmp
push
jge
fcompl
or
sbb
data16
push
test
sbb
sub
dec
jg
movsl
inc
enter
fisubrl
and
dec
dec
scas
adc
pop
jmp
or
imul
inc
mov
mov
pop
test
cmp
inc
fldl
jp
mov
inc
xor
and
push
jecxz
and
and
mov
test
adc
inc
add
mov
and
mov
lahf
adc
sbb
cmp
jne
mov
dec
or
cmp
dec
rcll
cld
inc
sub
aam
sbb
lds
lret
and
pop
ror
pusha
aam
sub
xchg
and
lods
loopne
add
dec
leave
loopne
or
adc
add
adc
inc
cmp
and
fwait
ja
add
lret
cmp
inc
sbb
rorl
mov
xor
add
push
es
divb
and
or
cmc
jo
inc
inc
inc
or
add
xor
shll
mov
daa
je
push
sbbl
jne
pop
cltd
idiv
test
add
push
sub
jmp
dec
mov
lea
cmp
jb
mov
mov
inc
jmp
andb
mov
inc
add
xor
sti
sub
sbb
syscall
push
mov
mov
movsb
push
mov
or
xchg
inc
enter
enter
out
push
inc
lock
cmp
mov
adc
xchg
push
or
icebp
jp
sarb
fs
test
cmp
movsl
aam
push
cwtl
add
js
int3
push
mov
jge
mov
dec
insb
lock
enter
adc
lock
push
hlt
enter
and
xchg
mov
push
mov
fstl
test
cmpsl
push
xchg
repz
and
dec
xor
and
cwtl
and
or
push
push
adc
call
in
das
fsts
dec
repnz
call
push
push
pop
jmp
mov
xor
xor
in
sbb
ds
push
sbb
pusha
repnz
xor
push
xor
adc
push
lret
or
in
insl
leave
dec
pop
aas
daa
adc
or
mov
adc
jle
xor
xchg
out
imul
incb
sbb
or
sti
cmp
mov
xorb
mov
and
or
cmp
push
pop
and
xchg
push
cld
mov
sub
fcoms
sbb
insl
sub
mov
adc
mov
mov
xchg
cmp
jge
xorps
nop
adc
pop
clc
negl
mov
stos
arpl
leave
inc
bound
xor
cmp
fwait
je
or
int3
pop
pusha
dec
in
pop
adc
pop
add
or
pop
dec
popa
cmp
shll
jbe
and
xor
sbb
lahf
jne
mov
movsb
and
movl
fcomps
add
fwait
enter
pop
xlat
sbb
sbb
lods
add
aaa
sub
cmc
mov
and
and
movsb
pop
fcomps
rcrl
adc
xor
movl
and
mov
push
push
adc
pushf
add
xchg
inc
cmpsl
and
cwtl
fs
push
int
jnp
push
popf
sbbb
add
xor
cld
mov
pop
and
cmp
push
pop
push
in
add
fs
mov
test
shll
pop
nop
lret
test
pop
daa
mov
loop
pop
fwait
push
rcll
mov
cld
inc
arpl
push
sbb
loop
test
push
sbb
aam
cltd
dec
sbb
push
push
add
mov
mov
cmpsl
mov
in
mov
jno
cmpsl
sbb
mov
jne
adc
mov
ss
or
cs
cmp
jp
insb
sbb
lds
xchg
adc
fwait
or
pop
cltd
sub
sbb
jp
and
mov
fs
xor
sub
mov
mov
jmp
lds
push
in
sub
xor
cli
bound
adc
dec
push
push
movsl
xchg
mov
add
xor
icebp
cli
test
mov
inc
pop
call
xor
je
and
mov
and
daa
mov
pop
daa
call
je
push
and
push
loop
arpl
fisubrl
or
nop
sbb
pushf
ret
adc
movsb
sbb
mov
mov
mov
mov
mov
push
repnz
sub
push
jge
jns
mov
adc
sbb
pop
call
add
sub
sub
sahf
push
mov
dec
inc
out
and
mov
int3
sub
push
xor
inc
incb
cmp
ss
loopne
pop
and
sub
stos
and
sbb
out
mov
mov
jmp
adc
sub
negb
test
lahf
inc
lret
jns
xchg
mov
and
test
lret
mov
sbb
and
xor
add
es
adc
and
or
cmpb
call
in
push
pop
push
mov
ret
pop
lcall
lea
sbb
adc
push
mov
xorl
shr
sub
sbb
aas
fstpl
pushl
adc
add
jnp
add
lods
adc
aaa
inc
mov
icebp
lds
cmp
push
jge
lea
cmp
or
div
cmp
mov
mov
add
cld
push
xchg
xor
mov
call
lods
push
ret
std
xlat
xchg
jbe
xchg
pop
sbb
adc
xchg
mov
int3
cmp
insl
fwait
das
cmp
sbb
mov
inc
addb
mov
push
sbb
jb
lods
popf
aaa
ficoms
jmp
ja
test
fs
outsl
and
lock
cmp
test
push
jnp
adc
xor
dec
xor
xor
mov
lret
js
clc
sbb
xchg
add
or
std
jg
pop
shll
jmp
push
mov
jne
jae
dec
repz
add
test
cmp
test
push
and
adc
aam
pop
int3
sub
clc
mov
xor
sub
inc
inc
stos
xor
or
out
fstpt
sbb
sub
call
adc
test
loop
sbb
add
cmp
jae
jmp
dec
das
jle
and
xchg
xchg
sub
fcompl
xor
and
add
mov
or
call
mov
insb
adc
mov
mov
push
sub
aas
addb
pop
addl
aas
add
inc
mov
and
lock
das
jge
sub
nop
dec
sub
cmpsl
movsl
lods
push
into
and
xchg
pop
mov
mov
sarb
xorb
and
fcoms
xchg
je
je
mov
ds
in
mov
sarb
in
dec
push
sbb
push
es
xlat
mov
jo
andl
pop
sub
adc
mov
sbb
and
xchg
repz
imul
sbb
pop
je
jp
jle
cmp
jmp
xchg
mov
add
cmp
aam
sub
nop
adcl
xchg
mov
xor
cmp
out
inc
pop
sbb
dec
mov
push
mov
lret
pop
jmp
pop
xor
cmp
lea
sbb
lahf
lods
jo
and
mov
xor
or
leave
push
call
add
nop
cli
adc
rclb
push
stos
out
lea
or
rolb
call
push
aaa
cld
aad
lret
push
and
in
and
jne
or
xchg
mov
mov
cmp
inc
xor
pop
test
in
call
pop
sub
hlt
mov
sub
xor
movsb
xchg
inc
mov
mov
cmpl
je
add
push
pusha
out
adc
jne
mov
and
dec
jge
sub
or
cmc
xor
cmp
push
jb
dec
xor
movsl
out
sub
sub
sbb
inc
xchg
sbb
xorl
in
jo
movsl
loop
les
dec
jne
pop
adc
jge
shrb
ljmp
testb
hlt
xor
daa
imul
roll
jl
dec
xor
add
mov
jmp
xchg
adc
mov
mov
add
push
je
shl
hlt
mov
push
rorl
mov
push
call
mov
xorb
push
jno
shl
iret
add
loopne
or
pop
rclb
leave
cltd
loop
cmp
cmp
imul
andb
out
sub
push
mov
fwait
and
adc
mov
loopne
mov
test
pop
and
xor
or
xchg
push
xchg
cmp
mov
nop
add
inc
xchg
in
imul
call
test
inc
or
mov
popf
ret
inc
jmp
fmull
mov
ja
mulb
sbb
mov
pop
les
cmp
mov
pop
add
and
add
add
xchg
inc
cmc
xor
xor
push
call
std
mov
in
lcall
adc
repz
and
testb
cltd
mov
test
mov
leave
mov
and
jbe
xor
add
push
cmp
ss
mov
in
xor
div
and
sub
push
lock
push
or
clc
and
dec
jge
pop
fucompp
pop
and
es
sub
push
popf
cmpsl
sbb
sbb
fmull
inc
rcr
jecxz
inc
mov
jbe
xor
add
inc
add
mov
lret
or
sbb
insb
or
or
push
fs
jecxz
movd
in
lret
dec
repnz
jne
adc
cmp
aas
movsl
jp
jne
fistpl
xor
lods
sub
mov
les
leave
cmp
adc
lea
add
inc
add
cmp
inc
push
jb
dec
or
push
cmpl
test
sub
test
cmp
push
push
push
pop
shr
fs
mov
or
xor
jg
mov
sbb
jbe
inc
and
je
add
add
jb
jmp
es
push
jae
lea
inc
mov
xchg
xor
aaa
jb
aad
mov
sub
mov
mov
pusha
nop
mov
add
sbb
inc
cs
rorl
scas
push
push
rorl
and
test
sbb
or
inc
and
add
loope
fiaddl
dec
rorb
dec
int
and
xchg
sbb
shlb
inc
and
jmp
mov
cmp
adc
mov
inc
push
mov
and
sbb
es
fmuls
mov
push
repz
data16
out
dec
mov
mov
mov
ja
pop
into
and
sub
add
decl
mov
por
inc
and
cmp
cmp
sbb
loopne
pop
and
add
or
cmp
test
test
cmp
adcl
xor
cmpb
adc
push
push
sbb
dec
adc
mov
dec
in
push
xor
pop
ja
or
adc
sbb
out
cwtl
adc
rclb
mov
lcall
and
shll
das
pop
pop
loop
jb,pt
inc
pop
pop
sub
sub
push
sub
xor
mov
mov
adcl
add
push
xchg
sbb
sti
push
mov
call
jle
notl
xchg
lds
jmp
enter
ficoms
xor
jne
test
push
lahf
adc
leave
call
mov
shr
xchg
xchg
insb
shll
dec
mov
adc
loope
iret
mov
jl,pt
xchg
mov
lock
sub
aam
jle
hlt
sub
pushl
mov
or
adc
das
xor
sub
ret
adcb
sahf
cld
ds
fwait
cmpsl
lock
repz
cmp
popa
and
push
pusha
roll
shrl
and
cld
jg
sub
daa
cmpsb
mov
adc
cld
push
xchg
out
cmpb
call
popf
and
lock
jb
fistpl
mov
adc
in
lods
add
fisttpl
xchg
mov
jecxz
cs
dec
aam
mov
push
pop
fisubrs
push
and
hlt
sub
outsl
xchg
test
adc
stos
lods
xchg
pop
mov
sub
jg
cmpsb
enter
dec
clc
dec
ss
mov
int3
dec
popf
enter
sbbb
jl
cmp
push
imul
add
stc
sub
ds
mov
stos
or
inc
sub
inc
sub
push
and
popa
arpl
pop
pop
movsl
popf
cmpsl
push
sti
inc
adc
int3
into
shrb
lea
adc
ret
lret
jb
push
or
ret
jae
pop
mov
mov
pusha
int
xchg
jge
fldl2t
inc
das
adc
xlat
sub
jl
repz
and
es
js
and
sub
jg
jb
adcl
jmp
je
mov
mov
filds
enter
movsl
sbb
popf
enter
pusha
push
cmp
jb
dec
lods
lahf
xor
sbb
scas
dec
sub
insb
ret
jmp
stos
sbb
dec
cltd
ljmp
add
jns
push
xor
mov
lret
test
cwtl
pop
dec
movsb
adc
and
dec
add
add
addr16
push
sbb
pop
daa
sbb
sub
sbb
movsb
das
daa
push
sbb
and
xor
jns
dec
stos
or
push
outsl
andb
call
ret
inc
push
daa
lret
and
aas
leave
ficoms
sub
or
icebp
jmp
aas
ja
jmp
jge
test
adc
cmc
and
rol
mov
sbb
adcl
lea
popa
pusha
lods
adc
xor
dec
mov
add
sbb
mov
jbe
out
inc
cmp
dec
dec
xchg
sbb
mov
jg
les
push
adc
mov
adc
mov
jne
push
movsb
sbb
sbb
sub
test
adc
jecxz
adc
mov
lcall
out
push
pop
icebp
das
fmuls
mov
mov
or
dec
gs
jno
fsincos
push
mov
stc
inc
adc
and
sub
pop
push
mov
adc
cmp
or
out
dec
inc
inc
jnp
cmp
pop
mov
push
and
mov
cmpl
cwtl
int3
aad
or
jne
pop
push
pop
mov
cmp
and
inc
rorb
adc
mov
xor
dec
xor
pop
out
inc
rclb
sbb
mov
sbb
pop
sub
aam
hlt
xchg
adc
orl
clc
mov
popa
adc
jl
dec
enter
add
pop
sbb
cwtl
pop
mov
adcb
das
je
jae
hlt
push
cmp
cmp
cmp
ljmp
int3
xchg
orb
cmovae
es
xchg
xorl
inc
orb
cmp
and
cs
mov
jne
adc
sbb
mulb
xor
push
sbb
addl
cs
outsl
add
adc
and
pop
inc
out
dec
push
inc
call
cmp
pop
jb
mov
mov
bound
adc
pop
mov
xchg
xor
adc
hlt
adc
mov
adc
aam
mov
push
pop
jmp
push
sub
movsl
pop
std
add
cmp
dec
popf
cmp
push
clc
cwtl
call
and
push
pop
addr16
outsb
rolb
stc
inc
call
fists
outsb
push
js
mov
inc
mov
sbb
lea
sar
xchg
jo
lds
jmp
ljmp
decb
add
xorl
outsl
xor
add
mov
push
cld
xchg
sar
cmp
cmp
push
mov
lds
push
sub
adc
rcrb
ja
fld
pusha
aam
mov
pop
shll
mov
int
mov
sbbb
cltd
jne
pop
lea
leave
adc
xchg
icebp
push
dec
and
add
aad
aam
push
cmp
mov
mov
testl
aam
imul
mov
mov
insb
cli
inc
push
pop
arpl
push
clc
call
jge
xchg
ficomps
inc
mov
and
mov
mov
xchg
dec
pop
and
std
dec
mov
adcb
fld
adc
mov
pushl
sbb
pop
pop
mov
xor
pop
pop
fnstcw
push
push
pop
push
fs
xor
sub
push
pushf
xchg
mov
sub
out
adc
xchg
nop
dec
pop
popf
or
test
push
xor
dec
xor
dec
dec
sbb
dec
lcall
jg
and
mov
test
push
jl
addr16
je
push
pusha
push
cmpb
daa
jl
dec
jne
inc
push
cltd
xchg
mov
mov
cmpsb
movsb
sub
clc
jns
aam
scas
leave
adc
in
mov
js
fwait
loop
std
pop
jle
inc
push
test
pop
push
push
out
dec
mov
push
push
and
mov
push
in
mov
sub
lret
imul
pop
mov
and
push
dec
lret
fidivs
cmp
mov
xor
clc
loopne
jbe
push
or
adc
mov
add
push
adcl
repz
xchg
not
int3
adc
jns
add
mov
and
sbb
sbb
bound
push
adc
out
xlat
sub
cmpsb
xchg
inc
leave
push
and
add
cmp
inc
fs
jmp
jl
xchg
adc
jl
jge
aaa
clc
pop
sbbb
fcoms
adc
push
pop
cmpsb
adc
sub
sub
rclb
cmp
cs
cld
pop
adc
adc
fmull
xchg
sbb
adc
mov
int3
mov
jb
jmp
or
mov
xchg
call
mov
pop
fwait
arpl
jnp
shll
negl
adc
adc
push
in
stc
pop
or
inc
adc
adc
xchg
xchg
out
sbb
dec
fdivr
dec
pusha
jns
dec
dec
and
test
es
and
adc
ret
fwait
push
loope
adc
inc
nop
jno
addr16
insb
pop
or
out
je
mov
xor
fmul
cmp
shrl
xor
sti
fnstenv
pop
fs
cld
and
xor
cmp
and
xchg
bound
jo
sbb
sbb
dec
xchg
pop
add
nopl
mov
adc
repnz
push
sub
loope
sub
sti
jmp
jbe
xchg
mov
jge
or
insb
push
push
addr16
scas
rorl
pushf
sti
sbb
or
fsubrs
sbb
mov
jle
sbb
push
sub
sub
bsf
popa
cmp
leave
loop
mov
out
pop
xchg
mov
or
test
lds
mov
cmp
pop
jne
jb
in
das
add
push
mov
shlb
jmp
or
adc
sbb
pop
fcoms
push
push
mov
inc
sbb
sbb
push
inc
mov
xchg
subb
jo
dec
sub
movsl
add
push
mov
dec
lock
lahf
mov
and
push
setbe
enter
cli
or
stos
cmpsb
push
adc
or
pop
fs
bnd
stc
mov
cmp
call
into
dec
das
or
push
adc
pop
fidivs
add
dec
adc
repnz
or
mov
pop
pop
or
sbb
pop
cmpsb
sub
rep
scas
dec
push
pushf
lods
fldlg2
loop
pop
push
insb
push
scas
fmuls
or
ret
cltd
or
faddl
push
xchg
sbb
call
cwtl
mov
mov
mov
pop
scas
mov
and
xchg
pop
mov
loop
dec
std
test
push
xchg
xchg
add
lret
mov
mov
jne
jns
mov
jg
and
les
mov
xlat
xchg
aas
subl
inc
and
aam
mov
mov
push
lea
or
cli
add
out
into
pop
inc
xchg
addr16
jo
xchg
inc
adc
adc
sti
bound
div
cmp
rorb
xchg
fcmovb
jle
lahf
or
je
enter
mov
sbb
pop
dec
fcoms
orb
fiaddl
xor
adc
sti
inc
arpl
jecxz
and
and
push
repz
fmull
pop
jmp
out
in
sbb
loop
lret
daa
js
lock
adc
mov
add
stc
mov
ss
in
fwait
pushf
lock
xchg
out
ljmp
mov
pop
inc
push
push
dec
or
sub
mov
in
imull
or
jmp
cltd
xor
inc
dec
push
push
test
adc
xchg
push
call
sti
or
jle
cmp
inc
les
inc
jne
pusha
push
mov
mov
jne
or
adc
cmpl
aam
mov
adc
xchg
test
adc
cmp
cmc
xchg
sub
daa
pop
sbb
or
jmp
sbb
dec
pop
cmp
imul
adc
daa
xlat
sub
bound
mov
xor
lock
psubd
insb
imul
lock
daa
test
cld
mov
cli
movsb
or
lret
jo
inc
xchg
adc
add
je
mov
cli
sbb
xchg
xchg
cmp
lock
out
cltd
les
xchg
insl
stos
lahf
and
push
lcall
sbb
loop
mov
mov
not
mov
jne
adc
pushf
ret
call
and
mov
aaa
shlb
notb
mov
dec
sub
gs
xchg
push
jge
adc
or
mov
and
test
sub
push
jb
and
jbe
mov
xchg
mov
jp
and
adc
stos
lods
cmp
es
inc
daa
inc
jbe
inc
xor
inc
in
lods
inc
test
lahf
subb
mov
push
call
in
lcall
xchg
test
sub
daa
jb
sub
push
lea
jbe
and
sub
or
pop
arpl
inc
movsb
inc
sub
adc
fimull
and
dec
sbb
movswl
in
int3
js
lcall
xorb
adc
mov
insl
dec
pop
shrl
sbb
cmpsl
lods
adc
adc
test
jmp
jno
and
jge
cs
add
cmp
adc
or
sbb
add
xor
lea
setbe
sub
fimuls
pop
push
jne
push
jg
roll
cwtl
or
clc
jnp
arpl
cmp
jbe
xchg
dec
push
jmp
rcll
pusha
pop
scas
shl
aas
repz
popl
rclb
jo
ret
addr16
push
js
add
cmp
cltd
je
or
aad
add
rolb
cmp
pop
das
test
rcl
mov
jno
subl
cmpl
mov
inc
cmp
aam
inc
sub
sbb
inc
icebp
daa
pop
push
xor
sub
fsubrl
mov
dec
cld
and
xchg
std
sbb
xor
loope
inc
or
fsubs
enter
xor
xor
xor
push
xchg
clc
aas
nop
cmp
sub
sub
pushf
sbb
xchg
mov
or
call
pop
push
daa
cmp
sbb
jge
xor
xor
xor
push
jae
sub
sub
and
pushf
or
or
xor
call
dec
scas
xor
movl
fwait
in
sub
fs
cs
pop
push
test
jmp
in
data16
mov
xchg
enter
dec
clc
xor
inc
js
lods
mov
mov
or
inc
or
xchg
faddl
insb
lret
inc
pop
xor
dec
or
sti
add
mov
je
lock
and
mov
inc
ret
xor
jae
les
hlt
test
cmp
jp
sbb
or
adc
leave
enter
loop
mov
and
adc
mov
mov
and
or
in
xor
addr16
mov
mov
and
pushf
mov
or
mov
push
inc
or
xchg
cmp
cwtl
popf
or
or
inc
ret
xor
inc
mov
xchg
cld
mov
or
mov
sub
pop
nop
adc
dec
inc
popf
jecxz
xor
and
and
adc
out
jp
xchg
sbb
add
jl
lock
fsubl
xor
ror
xchg
and
pop
cmp
adc
xor
jl
repz
mov
and
shlb
sbb
cmpsl
mov
je
mov
inc
movsb
dec
mov
mov
js
dec
cltd
sbb
xor
js
inc
dec
and
cmp
pop
inc
xor
or
sub
sbb
hlt
aas
addr16
call
pop
jo
mov
cld
or
xor
push
js
sub
or
xchg
icebp
inc
sbb
inc
aas
mov
cltd
loope
ljmp
or
out
movsl
add
and
lahf
adc
or
aam
dec
xchg
sbb
or
movsb
or
adc
mov
cwtl
or
mov
enter
aam
fs
mov
insb
sbb
sbb
pusha
xchg
and
mov
pusha
les
jl
or
xchg
and
or
push
pop
daa
and
adc
jnp
or
and
or
sahf
inc
or
lock
inc
xchg
jl
sbb
sub
in
inc
and
mov
stc
movsb
icebp
adc
adc
push
and
add
sbb
and
fmul
in
shlb
sbb
cmp
test
xchg
mov
inc
mov
enter
dec
or
sub
sbbl
aam
pop
sahf
sbb
nop
or
hlt
and
add
pop
add
and
adc
dec
add
rorb
mov
in
sub
adc
sahf
pushf
lret
push
hlt
adc
loop
jo
xchg
cld
inc
aas
and
sbb
cwtl
pop
or
or
gs
or
mov
jnp
mov
or
incl
cld
aas
adc
inc
adc
xor
and
and
cmp
lds
xor
hlt
cmp
scas
jmp
push
xor
xor
in
shll
test
sub
das
mov
pop
pusha
cli
popf
xchg
and
cmp
sbb
cmpsb
mov
mov
in
arpl
mov
loope
inc
or
and
sbb
or
in
arpl
dec
xor
or
or
xchg
lods
mov
bound
movsb
sbb
clc
pushf
adc
je
pop
or
xchg
les
test
fwait
mov
and
lods
and
mov
adc
xchg
test
nop
sub
and
mov
mov
cwtl
xchg
push
inc
mov
or
sub
jo
and
dec
lret
out
push
and
dec
mov
jge
pop
push
push
xor
sbb
aam
adc
int3
xor
fwait
test
fs
adc
int3
in
bound
push
loopne
xchg
pop
adc
notb
loope
mov
jl
push
xchg
nop
jg
mov
andb
lock
repnz
dec
scas
fdivr
or
adc
enter
and
dec
mov
sbb
xchg
js
inc
pop
loop
sbb
enter
pop
in
mov
jo
das
cmp
add
je
jmp
loope
imul
mov
adc
mov
scas
and
and
jo
xorl
fptan
push
inc
popf
mov
out
or
or
adc
inc
sbb
xchg
hlt
movsb
inc
jno
and
sbb
fsubl
cmp
adc
sbb
rcrb
or
int
jb
cmp
cmp
push
cltd
or
and
sub
mov
mov
sub
xor
pop
xor
and
cmp
pop
sbb
or
std
in
jb
cmp
jnp
inc
add
inc
and
and
shl
or
push
xchg
or
popf
push
inc
popa
mov
cmp
inc
mov
sbb
aam
inc
inc
cmp
sarb
adc
adc
push
leave
lcall
mov
scas
faddl
test
cmc
mov
cltd
fiadds
jge
in
push
hlt
mov
jae
pop
push
movsl
cmpb
mov
outsl
loope
mov
lret
adc
xchg
testl
pushf
push
imul
enter
daa
jno
repz
and
sbb
pop
enter
call
insb
xor
or
adc
and
popf
jns
xchg
pusha
mov
fcmovb
pop
add
jae
push
loope
scas
dec
inc
sub
clc
xchg
adc
pop
add
xor
jmp
rolb
mov
add
pop
cmpl
mov
mov
pop
das
lock
pop
adc
push
fidivrs
faddl
dec
xor
repz
sbb
addl
sub
pusha
pop
out
adc
push
stos
xor
loopne
and
adc
ja
and
cld
int3
xchg
sub
out
mov
push
push
push
add
jnp
and
add
or
loopne
call
and
and
jle
mov
mov
inc
decb
jno
jns
pop
dec
push
cltd
sub
sbb
xor
sbb
test
cmpsl
or
xor
imul
and
or
mov
sub
jo
loope
cs
mov
loopne
lea
fnstenv
and
inc
in
out
add
cmpsl
xor
enter
jp
push
out
xor
push
push
sub
inc
scas
and
cltd
adc
sti
inc
push
call
enter
fs
sbb
jbe
mov
push
xor
cld
adc
in
mov
dec
jbe
popa
push
push
mov
or
mov
jnp
cmp
xchg
or
lods
sub
les
in
lock
lds
sub
movb
mov
and
mov
cs
pop
adc
out
inc
in
add
mov
push
push
push
pop
push
shrl
std
movsbl
mov
dec
mov
hlt
in
push
sti
je
ljmp
jmp
inc
push
sub
mov
les
sarb
imul
daa
in
sub
mov
ret
in
sub
in
mov
pop
push
sbb
ss
xor
dec
jo
subb
test
pop
xor
or
inc
xchg
adc
in
sub
add
xor
sub
dec
test
cld
cld
mov
and
or
iret
jo
mov
jmp
aam
cwtl
push
push
inc
mov
inc
lds
shll
jo
nop
or
inc
fildl
push
pop
jg
cwtl
mov
loopne
dec
lds
push
cmpsl
pop
sub
mov
int
cmp
xor
jb
pop
test
roll
sarl
cmpsl
rcrl
mov
lock
mov
int
bound
xchg
push
cwtl
mov
enter
adc
mov
push
dec
cmp
jb
xor
push
and
test
les
fiadds
sub
sbb
mov
or
cmp
repz
rclb
sub
and
and
mov
pushf
and
in
pop
fwait
movsb
leave
je
aas
mov
xlat
in
mov
scas
xchg
fnstsw
test
jne
xchg
pop
nop
or
shlb
inc
cmp
jne
adc
jno
cmp
insb
push
or
int3
fwait
push
xchg
xchg
fucomi
xchg
in
call
cmpsl
or
movl
pop
enter
jo
es
outsb
adc
out
or
cwtl
and
and
or
pop
rorb
xchg
wrmsr
mov
xchg
mov
add
pop
ds
std
es
pop
and
clc
xor
shrl
mov
outsb
out
push
ret
jge
ljmp
add
cli
push
mov
xor
or
or
lock
enter
rclb
cmp
aad
sbb
cmp
sbb
cltd
add
dec
orb
push
cmp
or
add
inc
cmp
jl
add
pop
je
mov
insb
inc
test
es
sub
adc
mov
rep
lea
test
pop
push
mov
sarl
mov
inc
mov
inc
testl
dec
cmp
jle
pop
test
ret
xor
add
imul
jb
popa
pop
jl
test
jg
leave
sub
addb
inc
or
or
mov
fcoml
xchg
dec
lods
jecxz
fildl
pop
shlb
out
mov
dec
fsubrl
std
xchg
call
dec
mov
nop
popf
and
jp
mov
or
rcrl
or
cmp
idivl
test
jno
push
hlt
std
test
add
xor
lock
sub
xchg
lea
dec
mov
sbb
push
clc
std
lods
inc
dec
fs
dec
push
shll
adc
jmp
mov
add
out
aaa
inc
add
mov
mov
lret
push
sbb
mov
pop
clc
mov
pop
mov
push
cmp
jg
or
or
inc
jge
dec
dec
jecxz
sbb
sub
sbb
or
jl
das
dec
addl
mov
add
mov
and
bound
shll
rorb
and
sub
sbb
sbb
xlat
add
pop
inc
cld
mov
adc
or
pop
mov
sub
cmp
je
enter
lcall
or
inc
mov
mov
mov
or
pop
mov
fdivs
out
inc
in
pop
movsl
jmp
jle
sub
xchg
setp
sti
xchg
addr16
stos
sub
add
xor
in
and
lcall
fsubl
jmp
add
xor
aad
outsb
xchg
mov
dec
mov
cs
inc
adc
nop
mov
sbb
or
sub
aas
enter
ss
jmp
rcrl
jmp
int3
loopne
mov
lock
ljmp
push
inc
mov
mov
pop
and
jmp
je
outsw
and
pop
scas
or
xchg
scas
jl
pop
aam
repz
mov
test
push
mov
mov
inc
mov
cmpsl
pop
mov
cmc
dec
jno
xchg
and
inc
push
jecxz
popf
inc
sbb
sbb
sub
jo
pop
lods
push
dec
push
call
movsl
mov
std
xchg
jp
dec
test
pop
popl
and
mov
and
pop
out
inc
aam
jne
and
pop
push
mov
and
xchg
adc
xchg
scas
subl
mov
adc
or
xlat
sub
xor
ss
inc
adc
loop
aas
test
or
or
push
out
daa
cld
mov
mull
andl
mov
ljmp
shlb
mov
inc
dec
adc
sub
inc
mov
in
ret
pop
add
ds
les
call
fstps
xchg
or
or
dec
in
popa
sbb
push
test
and
test
clc
jecxz
adc
push
insb
mov
out
or
mov
xor
inc
dec
pop
ret
xor
movsl
sbb
fwait
pop
andl
or
adcb
cmpsb
inc
clc
cmp
push
xor
ss
dec
iret
jecxz
pop
pushf
add
push
push
mov
pop
sub
push
push
enter
int3
push
sti
or
jne
mov
mov
jmp
jmp
mov
or
add
add
xchg
data16
hlt
mov
pop
mov
in
jno
push
movsb
nop
xchg
lock
fisubl
dec
stc
insb
inc
jecxz
mov
jge
pop
repnz
mov
push
adc
cli
shrb
jne
mov
xor
push
fsub
jbe
cmp
ds
xchg
inc
in
adc
sub
jp
leave
mov
push
jl
push
or
push
jno
nop
jb
ret
clc
mov
insl
jge
data16
fs
das
jne
out
fdivl
dec
sbb
push
mov
pop
mov
sub
pop
popa
dec
repnz
dec
or
aad
test
mov
inc
push
cs
imul
test
test
pop
mov
push
cmp
jle
mov
add
jge
jg
pop
sbb
loop
xchg
ror
addr16
adc
test
ret
incl
sbb
loope
or
lock
push
arpl
lea
add
push
jo
and
lahf
insb
adc
jg
cmpl
push
cmp
lods
in
push
jle
sbb
push
int
push
and
test
add
lret
and
decb
fs
pop
test
mov
push
mov
pop
mov
mov
sub
xchg
pop
punpckldq
adc
shr
es
sub
push
lock
fstps
lods
mov
or
in
movsb
push
sub
cld
inc
inc
inc
add
in
push
mov
or
xor
pop
in
mov
jno
call
dec
lret
nop
in
and
enter
mov
or
dec
sub
push
cld
iret
cmp
push
es
enter
mov
push
push
lods
test
je
jb
cmpsl
dec
and
cld
js
pop
mov
aad
xor
xchg
sbb
push
fsubl
xchg
adc
push
icebp
dec
xchg
rcll
test
xchg
cmp
les
lds
fsubrl
dec
push
xchg
cmp
insl
mov
adc
pop
mov
int3
movsl
pop
hlt
lea
inc
fldt
enter
fsubrl
mov
mov
addr16
mov
lds
je
and
cltd
push
jbe
and
inc
int3
xor
sbb
push
fsubl
pop
cwtl
sub
cli
mov
sbb
icebp
sub
mov
add
push
xchg
adc
adc
dec
dec
adc
push
ljmp
imul
cli
test
push
inc
add
mov
popf
xchg
mov
std
dec
sub
push
and
lahf
rcll
ss
or
das
aam
stos
movsb
xchg
adc
pop
lret
adc
shrl
sti
jae
cld
dec
rclb
pusha
ljmp
je
rclb
sub
sbb
push
jp
push
inc
les
jae
mov
and
jo
pop
pop
and
rolb
gs
push
xchg
xchg
sbb
fcompl
xor
and
xor
sub
jae
cmp
shll
push
call
add
and
push
pop
mov
or
test
movsl
push
jl
inc
es
test
xor
jmp
mov
stos
gs
scas
xchg
push
xchg
jge
int3
push
xchg
adc
sub
sbb
je
and
jne
adc
out
pop
mov
mov
push
xchg
clc
hlt
das
inc
mov
xor
push
jnp
lahf
sub
les
xor
push
cmpb
xorb
mov
fsts
mov
mov
ljmp
jo,pn
mov
add
es
xor
insb
call
sbb
pop
jp
cmp
mov
inc
sti
inc
in
sub
inc
adc
jne
divl
daa
lock
inc
push
jl
inc
xchg
subb
pop
jae
icebp
xor
cmp
push
int3
xor
ret
push
stos
test
push
add
push
jmp
les
and
jp
insb
add
fcompl
cmpb
ds
mov
cmp
inc
mov
jae
jne
add
lea
shr
mov
loope
aam
cwtl
sub
aaa
cmp
add
add
data16
and
push
inc
add
push
add
pop
loop
add
inc
icebp
enter
repnz
inc
movaps
cmp
add
idivb
add
xor
movsb
jns
xor
out
jbe
sub
inc
mov
mov
test
add
pop
inc
cmp
in
jb
mov
jbe
dec
sbb
rcr
mov
pop
loop
sbb
loope
pop
cmp
sub
or
cmp
and
dec
std
icebp
sub
lods
int
push
nop
push
push
dec
fmul
mov
push
sub
ss
mov
pop
and
pop
inc
dec
pop
and
xorb
add
xlat
sub
mov
aad
mov
stc
inc
adc
xchg
test
inc
xchg
xor
xchg
xchg
decl
inc
sbb
and
lea
cwtl
test
xor
popf
clc
push
sbb
cmp
cltd
roll
call
pop
cmp
enter
je
jne
or
sub
lods
mov
ret
cmp
aad
and
push
pop
lods
inc
out
aas
in
cmp
push
push
push
sub
mov
push
add
cltd
fsubl
shll
inc
frstor
sub
jb
adc
mov
mov
sub
sti
jno
outsb
enter
mov
ret
lds
add
mov
sti
cmpsb
in
cmpsl
cwtl
inc
iret
add
jbe
pop
mov
adc
sti
adc
in
inc
dec
add
lret
mov
sub
aaa
decb
sub
and
jbe
iret
pusha
mov
out
popf
fwait
cmpsb
mov
shrb
push
mov
dec
fwait
je
icebp
adcl
push
jne
mov
orb
test
sbb
mov
sub
data16
push
fbstp
dec
adc
negl
inc
lcall
or
xor
or
lods
sbb
pop
sbb
sbb
movzbl
jbe
lret
orb
call
pop
popa
mov
pop
cli
arpl
outsl
in
sbb
ljmp
pop
lods
mov
scas
sbb
adc
imul
rclb
loope
bound
dec
test
enter
out
cmp
ret
ja
call
xor
adc
and
call
or
je
movsb
xchg
pop
push
xorl
fcmovnbe
sbb
xor
loope
lahf
rcrl
or
inc
sbb
xchg
std
hlt
out
adc
aaa
test
dec
xlat
cmp
pop
test
inc
cmc
stc
cmp
jae
stos
inc
outsl
stos
lcall
sub
cmpb
ret
dec
dec
or
push
jecxz
iret
icebp
jmp
add
dec
push
mov
jmp
and
jg
lock
js
loopne
add
js
jae
nop
push
lret
dec
call
loope
inc
repz
dec
or
dec
mov
cltd
incb
call
push
xor
cs
mov
add
mov
ja
push
int3
xchg
push
inc
int
mov
aas
jecxz
pop
pop
ret
repz
push
and
enter
add
xor
cmp
and
inc
cmp
ret
mov
cli
jne
dec
push
mov
dec
cli
dec
fnstcw
xor
adc
adc
test
out
gs
push
jecxz
pop
nop
cmp
cmp
jae
lods
into
jo
mov
add
jae
push
and
fistpll
addl
scas
jle
adc
sbb
cli
aas
data16
push
hlt
pusha
mov
pop
push
call
adc
or
and
sbb
ret
and
das
stc
je
sbb
ds
xor
jecxz
or
inc
or
mov
mov
or
xor
dec
sub
cmc
dec
sub
dec
add
movsl
add
xchg
adc
mov
sub
lret
adc
popa
test
iret
mov
hlt
repz
or
icebp
arpl
iret
pop
xchg
insl
cmpsb
out
pop
lock
jbe
mov
addl
mov
and
jp
fisttpll
sbb
and
add
sbb
xorl
flds
mov
jbe
push
xchg
scas
je
push
addr16
movsl
inc
ja
aam
mov
jl
lcall
push
andb
pop
xchg
ja
sti
and
sbb
xor
jmp
mov
loope
sbb
cltd
add
lret
pushf
xchg
jl
jp
add
testb
jne
pop
orb
push
call
aam
nop
add
adc
xor
ds
shl
or
mov
mov
bound
inc
dec
ret
sub
mov
sub
mov
cmp
pop
xchg
push
sbb
xor
inc
lret
sbb
adc
adc
shll
push
dec
sbbl
lods
cli
dec
scas
push
sbb
dec
hlt
and
mov
jne
lahf
mov
fsubr
notb
push
inc
push
sub
adc
inc
lock
xchg
add
or
adcl
push
jg
mov
push
int3
dec
jl
jmp
push
sbb
xor
pop
sbb
pop
adc
dec
int
loop
push
and
pop
fldl
movsb
sub
mov
rorl
movsb
testb
sti
and
pop
je
mov
mov
ljmp
push
and
jl
pusha
adc
and
test
mov
clc
ret
xlat
or
or
int
hlt
rcll
adc
or
scas
adc
movsl
mov
add
and
adc
inc
and
cmp
jge
pushf
pop
jle
inc
dec
aas
outsl
and
xchg
mov
insl
je
lea
stc
adc
cmp
jle
and
adc
push
mov
pop
pop
ss
pop
mov
mov
pop
jle
inc
adc
and
mov
aas
sbb
mov
adc
or
loop
mov
imul
scas
adc
or
sub
ret
sub
mov
and
dec
cmpsl
xchg
mov
lret
scas
mov
pop
add
add
add
aad
mov
add
push
or
test
mov
je
jmp
adc
inc
hlt
incb
ret
sbb
cmc
adc
adc
cld
or
sbb
cmpsb
jno
xchg
fnstcw
add
in
dec
cld
inc
adc
cmp
mov
xor
imul
fwait
xchg
aad
dec
je
push
cmp
das
add
or
adc
and
mov
mov
xor
xor
xor
xor
lods
js
call
pop
adc
and
movsb
mov
aas
cmp
push
movsb
and
movsb
mov
inc
mov
add
mov
cmp
aad
xor
shlb
mov
sahf
adc
negb
dec
aam
out
lret
cmpsb
das
test
lea
out
mov
jecxz
shrl
dec
mov
adc
cmp
popf
pop
ds
or
push
add
add
ja
ret
adc
into
sbbb
push
test
dec
adc
xor
pushf
and
test
xor
pop
pop
and
adc
ret
int
sbb
pop
ret
mov
cmp
or
jb
push
loopne
mov
push
mov
cmp
sbb
xlat
out
add
dec
inc
add
lock
mov
pop
mov
jb
pushl
xor
inc
maxps
mov
sarb
pop
inc
pop
jle
push
adc
loopne
jmp
adc
sbb
popf
icebp
mov
gs
push
and
in
pop
lcall
jne
mov
std
movb
xchg
push
insb
rolb
into
cmp
inc
test
cmpsl
dec
hlt
js
add
or
or
or
push
push
sbb
xchg
aam
dec
mov
mov
sub
sbb
aam
cltd
add
pop
das
sub
adc
mov
adc
sbb
xchg
xchg
and
jno
lock
and
push
lock
or
dec
test
in
push
dec
pop
enter
cs
call
sub
xor
mov
cmp
into
xchg
mov
loope
jmp
aam
andb
je
das
lock
jo
lea
gs
xor
js
push
xchg
sbb
inc
pop
mov
pop
and
sub
push
or
cmp
enter
xor
arpl
push
jl
xchg
lods
out
xchg
lods
xchg
mov
cmp
ds
mov
add
scas
xlat
dec
js
dec
sbb
sub
add
jmp
sbb
test
inc
push
test
dec
jp
test
add
cli
adcb
dec
sbb
sub
or
lret
or
adc
in
dec
daa
dec
decl
int3
push
cltd
and
push
and
dec
sar
and
outsb
dec
mov
icebp
mov
fadd
add
lahf
es
mov
in
jge
popa
mov
and
or
call
call
imul
xchg
stos
and
ret
push
jnp
test
adc
jle
test
fs
adc
or
xor
mov
mov
inc
cld
sbb
jns
test
inc
and
in
fadd
test
jl
mov
js
subb
aam
lds
mov
jo
cltd
xor
or
mov
sub
inc
repz
enter
mov
ja
adc
in
xor
adc
outsb
dec
adc
push
add
adc
sub
dec
ljmp
enter
les
adc
fs
pop
sub
fwait
and
xchg
sbb
push
gs
js
jo
push
inc
and
inc
nop
subl
sub
pop
sub
sbb
sbb
or
std
notb
add
jb
cmp
push
sub
pop
sub
fcompl
mov
sub
ja
adc
enter
and
cmp
mov
pop
or
mov
xchg
ret
mov
and
rol
mov
and
in
stc
test
fs
icebp
jle
push
add
pop
pop
jmp
lret
inc
sub
jo
mov
mov
push
or
dec
xor
lods
inc
or
stc
dec
les
add
data16
insb
mov
stc
rcl
lods
sub
xor
cmp
sbb
clc
sub
cli
shll
add
mov
cmp
sub
lret
or
add
repz
adc
ret
xor
adc
cs
xor
imul
jbe
push
je
call
inc
and
xchg
push
and
inc
and
clc
and
add
pop
adc
ret
sub
sub
mov
lds
das
jge
push
xchg
sbb
or
xor
xor
mov
sbb
push
cmp
dec
fdivs
pop
in
push
push
mov
and
fiadds
and
or
mov
clc
jnp
pop
je
popf
push
add
jmp
and
xor
or
dec
push
jmp
adc
or
inc
enter
or
mov
movsb
mov
je
sub
sbb
or
rolb
mov
mov
inc
mov
jle
sub
pop
ja
hlt
movl
daa
sub
push
dec
test
push
or
xor
xor
push
and
ljmp
pop
sub
lahf
addb
sub
into
notb
lods
pop
or
lock
and
push
sbb
mov
or
rcl
mov
call
mov
sarl
push
or
call
dec
in
dec
push
or
or
xchg
mov
adc
xor
cld
pop
pop
sbb
cmp
out
dec
adc
and
xchg
cmp
lret
mov
push
daa
and
nop
push
sub
mov
sub
sub
sub
test
dec
pop
or
jg
jg
into
push
push
sbb
sub
inc
ret
xchg
lea
pop
push
and
test
je
add
shl
mov
pop
adc
push
mov
dec
fstps
aad
and
sub
xchg
mov
jmp
push
sbb
or
pop
push
sarb
add
lret
or
out
adc
ja
xor
in
int
dec
js
fcoms
and
aad
mov
mov
aam
nop
bound
mov
or
imul
cmp
push
dec
and
dec
add
test
int3
mov
push
push
push
add
jbe,pt
lea
cs
movsb
addb
sbb
ds
clc
imul
rol
mov
mov
sbb
pop
lcall
movzbl
repz
bnd
or
adc
dec
sub
repnz
jle
jb
fs
xchg
push
mov
jle
loopne
shr
jmp
neg
xor
movzwl
add
jne
pop
jmp
and
test
and
rorl
mov
adc
sti
sti
call
rcrb
push
and
scas
sub
jno
adc
mov
cltd
dec
jmp
js
stc
mov
les
sbb
mov
cmp
je
cmpl
cs
jbe
dec
mov
or
push
pop
fdivr
adc
sbb
decb
out
adc
iret
mov
nop
cld
test
imul
rolb
mov
mov
fs
or
imul
adc
jmp
inc
cld
push
lock
push
pusha
add
leave
xchg
inc
cmpsl
mov
inc
call
sarl
imul
loopne
pop
shlb
cmpsb
std
popa
xchg
push
mov
cld
pop
in
pushf
push
cltd
jns
fisubs
inc
pmulhuw
into
loop
sbb
mov
lea
xor
loop
aam
push
mov
jmp
pop
ja
pop
std
xchg
mov
push
leave
add
mov
sub
cmc
out
pop
xlat
out
xchg
jmp
scas
jne
test
test
mov
fiadds
cmp
push
stos
xor
in
dec
rcr
adc
test
xchg
loopne
cmp
push
test
mov
pushf
fdivl
nop
xor
call
mov
aaa
inc
push
cmp
std
mov
jp
stos
stos
adc
inc
jge
sbb
shrb
cli
pop
fimull
inc
icebp
and
sbb
call
inc
sub
xor
out
imul
iret
mov
or
lea
and
xor
ds
mov
and
add
mov
fcomp
mov
pop
scas
cmpb
xchg
cwtl
adc
jmp
js
mov
and
xor
imul
adc
push
int
xor
pop
add
pushf
call
and
sub
ds
mov
clc
sub
mov
push
xor
cwtl
or
repz
pushf
cmp
dec
jp
clc
xchg
adc
mov
dec
mov
cld
test
test
je
es
dec
inc
adc
mov
xor
in
push
cli
dec
dec
pop
jbe
jne
dec
sbb
add
and
dec
mov
call
arpl
xor
sub
xor
pop
ret
inc
sbb
cld
fcoms
pushl
push
xor
dec
je
adc
call
jl
jmp
mov
pop
inc
in
or
cmpsl
scas
leave
push
imul
xor
mov
mov
lret
or
inc
sub
fsubrl
adc
and
and
mov
jbe
and
mov
and
jmp
dec
adc
cli
add
pop
cmc
enter
mov
inc
dec
repz
lds
cmp
push
ret
adc
sub
dec
clc
xor
fldl
adc
push
dec
cltd
and
lret
ss
mov
dec
push
or
jmp
mov
das
pop
cwtl
mov
push
mov
dec
mov
jmp
xor
call
ficomps
xchg
cld
cmc
jnp
hlt
ds
mov
lock
sbb
add
pop
std
mov
mov
into
fs
bound
pusha
les
fs
xor
fs
and
jae
aam
dec
pop
xchg
cmpsl
pop
jae
decb
pop
pop
jmp
mov
es
xchg
adc
mov
lret
cmp
aad
neg
jo
add
lods
cld
stos
xlat
mov
out
enter
and
sarl
pop
sbb
cmp
mov
cmp
xchg
adcb
and
movsl
jg
mov
adc
xchg
dec
sbb
xchg
xchg
bound
into
cmpsb
popf
jo
mov
pop
call
cld
aad
pop
and
adc
jmp
or
sub
dec
jle
std
adc
mov
stos
fists
and
loop
fs
and
decb
mov
push
xchg
fs
sub
adc
mov
test
fsubp
push
cmovnp
icebp
sbb
and
xorl
loope
sbb
stos
pop
push
adc
rorb
mov
cltd
cld
lret
mov
mov
fstpl
sti
inc
outsb
fdivr
loope
shll
aaa
push
jne
mov
insl
daa
sbb
and
mov
mov
add
enter
mov
push
and
inc
mov
loope
imull
jge
jecxz
mov
add
pusha
dec
bts
stos
int3
add
mov
test
mov
in
mov
add
push
test
xor
sbb
sub
mov
and
push
adc
ds
push
and
adc
pop
pop
pop
pop
push
and
sub
test
aam
jb
or
in
pop
stc
das
jae
lock
inc
inc
fstl
pop
sbb
aaa
add
and
jge
shr
mov
mov
enter
in
inc
mov
inc
push
push
js
inc
clc
fimull
cmp
cmp
adc
notl
cmpsl
inc
cmp
dec
lret
jne
dec
sbb
adc
rorb
and
std
insb
outsl
and
and
std
fbstp
and
stc
enter
push
and
mov
push
enter
inc
inc
call
stc
das
test
xorl
adc
loopne
or
fld1
cmp
pop
sahf
and
iret
mov
xor
or
popa
mov
sbb
and
clc
jb
fnstsw
shl
mov
mov
test
sub
int
jg
cmp
add
xor
cwtl
cmp
jge
lahf
pop
adc
outsl
nop
leave
aam
dec
movaps
movsb
and
iret
inc
or
sarb
popf
add
push
and
fsubrs
mov
inc
xorb
cld
add
xchg
cmp
popf
dec
mov
cmp
hlt
or
xchg
or
adc
je
subl
nop
mov
adc
mov
sbb
mov
push
scas
push
sub
sub
dec
push
das
movsb
pop
shl
enter
push
jne
mov
or
pusha
cmpw
add
mov
imul
push
mov
push
push
insb
xchg
out
sub
shll
add
pop
or
out
and
sbb
scas
lcall
xor
inc
pusha
sbb
repnz
fwait
aad
dec
push
adc
xchg
inc
mov
sbb
aas
shrl
mov
sbb
and
mov
pop
loope
push
test
pop
adc
mov
jecxz
dec
mov
lods
push
jbe
xor
imul
xchg
xchg
inc
je
push
or
or
add
mov
xchg
push
jae
xchg
mov
insl
loop
inc
inc
mov
mov
in
lea
add
push
inc
and
xchg
mov
aaa
xor
push
dec
mov
mov
add
sub
sbb
hlt
pop
mov
aas
mov
push
jle
nop
loopne
cmp
mov
jle
pusha
inc
pop
sub
loop
cmp
inc
and
scas
loop
pop
jns
mov
arpl
sub
mov
or
icebp
lret
and
test
add
dec
cld
push
lock
cmpsl
push
testb
xchg
sub
pop
lock
mov
cmpsl
mov
scas
inc
sub
test
ret
push
inc
push
cmp
dec
sbb
cltd
popa
cmc
mov
adc
xchg
ds
pop
std
sbb
call
leave
frstor
dec
adc
aas
nop
add
enter
ja
andl
mov
sbb
xchg
push
xchg
hlt
push
popa
call
xchg
dec
xor
sub
mov
pop
adc
sbb
xor
je
xchg
inc
stos
jl
clc
lret
cli
int3
inc
dec
or
add
rclb
shrb
jbe
ficoml
push
adc
les
sbb
mov
call
cmp
jmp
mov
or
inc
pop
and
js
xor
psrld
cld
lods
mov
adc
xor
aaa
cmp
push
or
adc
push
or
call
push
pop
shlb
jmp
pop
jmp
sbb
or
push
jo
sar
pop
mov
ja
push
popf
or
repnz
and
push
push
test
and
icebp
xchg
mov
xor
ret
lods
jae
mov
dec
out
fnsave
bound
push
out
stc
mov
pop
imul
ja
mov
sbb
sub
mov
in
push
xor
mov
in
and
stc
fsubl
out
or
push
sbb
vucomisd
pop
sub
push
jle
mov
and
mov
sub
sti
xchg
xchg
and
aaa
call
dec
das
shrb
jle
flds
std
aaa
je
or
sbb
adcl
dec
jnp
xchg
xor
jl
jmp
inc
loope
test
daa
js
pop
cs
mov
into
sub
andl
dec
testb
xor
enter
sbb
test
test
leave
xchg
mov
rcll
popf
xchg
or
or
mov
and
jge
dec
xchg
push
pop
mov
dec
inc
push
adc
push
cmp
and
push
adc
inc
ss
mov
adc
sbb
jle
daa
cld
jle
xor
push
int3
inc
inc
test
test
jo
sarb
mov
inc
cs
sbb
std
adc
pushf
inc
negb
add
pop
lea
jle
add
cmpb
inc
xchg
mov
mov
movb
xchg
add
jns
mov
inc
cmp
ret
dec
clc
and
scas
adc
and
ds
xor
repnz
mov
inc
test
fbld
and
push
mov
and
sub
pop
mov
mov
leave
pop
inc
jp
shll
jp
push
rcll
cmpsl
in
sub
popa
outsl
push
push
arpl
push
cmpsb
imul
mov
scas
or
orb
and
or
imul
cmp
nop
adcl
nop
mov
xor
dec
inc
push
add
jnp
fdivl
jbe
cld
sub
push
fcmovu
dec
sub
call
add
sub
sbb
and
or
add
adc
add
shrl
inc
sub
sahf
sub
inc
dec
adc
and
mul
mov
xchg
in
call
je
jo
movsb
push
sub
push
or
push
je
push
xchg
and
enter
pop
mov
xchg
sahf
push
pop
outsl
sub
mov
push
cwtl
sbb
int3
movl
dec
rcll
mov
movsl
mov
sbb
adcb
test
and
sub
or
scas
cmpsl
shl
adc
sbb
popa
es
jmp
adc
daa
add
mov
test
or
inc
sub
das
mov
adc
inc
hlt
mov
mov
and
gs
inc
inc
inc
test
mov
xor
adc
pop
dec
or
lods
rorl
sub
and
cmp
lret
test
lea
gs
or
cmp
je
scas
xor
je
inc
adcl
or
into
popf
jno
or
je
push
enter
and
mov
fstpt
ja
call
pop
xor
add
push
ljmp
mov
xor
call
sub
imul
ret
je
or
xor
jne
sub
shrb
push
scas
repnz
mov
push
push
mov
jl
ret
and
loopne
scas
sbb
jmp
xchg
and
or
dec
push
inc
adc
inc
or
inc
ret
sbb
cmpsb
es
arpl
sub
mov
jg
push
std
xor
mov
nop
xchg
imul
leave
and
cmp
lods
cmp
dec
bound
sub
inc
lods
jnp
xlat
pusha
push
or
xchg
sahf
inc
and
push
sub
cwtl
js
jge
mull
mov
scas
inc
adc
lock
sbbb
inc
pop
or
jecxz,pt
movsl
orb
mov
and
enter
ja
inc
inc
xchg
iret
ficomps
xchg
daa
inc
pop
mov
in
push
sub
pop
cmpsb
sbb
adc
xor
lock
nop
xchg
sub
mov
lds
mov
mov
pop
and
jbe
or
movsl
mov
das
sub
daa
nop
clc
cmp
ret
or
mov
in
out
push
adc
adc
sub
mov
inc
outsb
xor
mov
testl
scas
imul
arpl
enter
push
into
stos
mov
mov
outsb
enter
add
call
add
or
sub
ljmp
movsl
je
ss
xor
xchg
imul
es
mov
add
xchg
mov
negl
aas
mov
push
sbb
push
lea
cmpb
in
mov
add
jo
dec
cmp
or
push
push
push
or
mov
stos
push
into
std
mov
pop
into
sbb
cmpb
push
mov
stos
andb
std
int3
or
test
xorl
jno
push
jae
mov
jmp
xchg
inc
sub
movsl
subl
and
lcall
arpl
push
adc
adc
inc
stos
mov
lcall
mov
enter
xor
in
pop
jne
jg
sub
popa
mov
shlb
ss
incb
lcall
and
sbb
add
shrl
mov
clc
movsb
dec
aas
lret
xor
inc
mov
aam
inc
test
xor
fsubl
call
dec
mov
mov
test
push
and
pop
xor
sbb
call
xchg
add
mov
sub
pop
push
mov
xor
lahf
jbe
mov
cmp
jmp
pop
xor
int
sub
fsqrt
dec
push
lods
mov
inc
xor
rcll
lea
in
stc
push
add
xchg
mov
jo
enter
mov
sub
adcl
mov
and
lods
jae
daa
jle
sbb
or
lods
jmp
inc
hlt
push
cld
ja
cld
and
je
push
movsl
cmp
aaa
jmp
jo
sub
sbb
sub
xor
popa
adc
and
adc
out
add
or
inc
mov
adc
clc
lods
loop
sbb
push
adc
pop
mov
loop
sbb
or
or
test
imul
sbb
and
fistpll
pop
repnz
sub
ljmp
inc
fsubs
adc
jno
movsl
repnz
cltd
rcrl
stos
sub
push
xorb
test
adc
or
jmp
inc
fstl
sbb
add
int
cmp
adc
sub
jp
xorl
add
add
sub
cmp
and
cmpsl
out
sub
adc
iret
jg
mov
mov
test
and
inc
mov
pop
dec
push
cltd
xor
lcall
dec
push
xlat
enter
mov
lods
mov
xor
add
insl
add
je
sbb
js
lahf
scas
adc
sub
pop
sub
push
dec
and
and
adc
bound
lea
cwtl
out
adc
cmp
or
or
repnz
add
fists
or
push
popf
push
test
icebp
movsb
adc
lret
push
add
leave
inc
or
pop
mov
add
push
inc
add
jl
inc
mov
out
dec
and
lret
js
sub
jo
inc
jae
mov
pop
or
mov
jns
pop
test
enter
and
push
and
dec
adc
pop
sbb
test
cmc
mov
or
lea
jmp
and
and
adc
stos
or
mov
and
add
sub
push
cwtl
dec
outsb
in
xor
sub
test
mov
ret
sub
or
test
push
inc
pop
and
adc
push
fimuls
je
test
push
mov
push
test
mov
push
and
dec
add
shrb
and
sbb
pop
jmp
adc
inc
test
xor
inc
dec
jo
inc
sbb
out
hlt
sub
nop
jae
sub
jmp
out
or
or
rorb
xchg
and
add
movsb
adc
inc
nop
xchg
sub
mov
repz
and
sub
xchg
sub
test
adc
mov
sbb
test
stc
mov
test
int3
dec
and
or
mov
pop
mov
test
enter
and
mov
mov
lcall
lds
mov
adc
dec
adc
xchg
mov
add
push
ds
adc
jo
jmp
inc
adc
sub
adc
les
hlt
adc
lahf
test
scas
enter
sub
inc
inc
and
adc
mov
sbb
or
push
inc
gs
adc
or
rolb
in
inc
inc
and
adc
sbb
or
push
inc
xchg
and
mov
sub
test
sbb
inc
inc
and
cwtl
or
inc
sahf
mov
or
pop
xchg
or
mov
cli
inc
mov
sbb
mov
jl
test
push
decl
test
fisubs
pop
incl
inc
pop
and
fs
cltd
addl
cmp
inc
sti
inc
and
subb
popf
cmp
clc
call
sbb
jl
sub
xchg
add
xchg
adc
mov
mov
test
or
insl
xchg
push
sub
rcll
enter
popf
daa
add
fidivl
int
out
and
and
aas
mov
iret
nop
loopne
inc
pop
or
test
enter
and
push
inc
xor
mov
sbb
test
and
nop
movsb
mov
pop
dec
cmp
test
lcall
adc
or
mov
inc
je
pop
push
inc
xor
les
pushf
jnp
inc
daa
pop
repnz
aam
mov
inc
mov
jo
jno
cld
das
nop
push
jg
je
sub
fwait
adc
mov
data16
lods
jnp
adc
adc
adc
cmp
mov
mov
xor
add
in
xor
fdivr
lds
in
enter
cmp
or
mov
jns
sub
push
or
inc
nop
and
cmp
or
test
cld
xor
sbb
adc
and
nop
adc
cld
lcall
out
adc
sub
push
call
push
mov
push
sub
or
es
xchg
mov
movsb
adc
inc
outsl
and
adc
pop
sbb
or
sub
faddl
pop
xchg
mov
aam
adc
inc
sub
and
push
ret
subl
cltd
inc
insb
xor
test
xor
int3
adc
mov
sbb
and
adc
or
mov
insl
sub
inc
das
and
sbb
and
fsubl
pushf
adc
or
mov
pop
or
test
out
cwtl
dec
mov
mov
ds
sub
enter
and
adc
pop
mov
test
enter
and
inc
or
pusha
adc
sub
pop
test
enter
mov
push
mov
push
push
clc
cmpsl
inc
sbb
hlt
inc
push
sbb
bound
sbb
adc
into
jbe
pusha
mov
std
cmp
idivb
inc
or
push
mov
out
and
push
inc
add
mov
inc
add
pop
mov
cwtl
fnstsw
xor
mov
and
cmp
sbb
call
cs
and
inc
add
adc
and
cli
nop
push
add
jmp
icebp
adc
or
dec
femms
test
and
and
dec
or
adcl
jmp
or
psubsw
inc
bound
xor
lea
roll
cmp
xor
lods
sub
cmp
lcall
adc
xchg
or
adc
jmp
cld
loop
nop
adc
loopne
push
jp
ja
fstps
mov
push
cmpsl
test
cmp
pop
call
cmpsl
fcmovb
or
pop
icebp
dec
clc
mov
aam
lret
push
mov
xchg
push
inc
mov
and
lcall
cmp
rolb
mov
test
xor
enter
ljmp
mov
and
loope
int3
fs
and
ss
mov
xchg
rcr
clc
aaa
je
adc
and
mov
mov
cmc
jb
add
pop
or
in
notb
inc
xchg
dec
stc
jne
mov
loopne
or
pop
dec
and
or
call
or
fs
mov
dec
sub
inc
mov
xchg
mov
sub
xchg
sbb
inc
mov
insl
add
jae
sub
imul
cld
and
pop
inc
or
add
push
adc
jmp
pop
sahf
sbb
lret
adc
mov
cmp
xor
push
push
test
dec
xchg
lock
push
mov
sbbl
push
mov
and
rclb
icebp
enter
sbb
lods
test
xchg
push
addb
mov
test
test
fwait
xchg
inc
nop
adc
xchg
add
je
push
adcl
call
adc
mov
sub
nop
test
jge
and
sbb
lahf
inc
add
xchg
popa
jne
push
xchg
cs
dec
popf
and
loopne
mov
sbb
sbb
add
push
jmp
in
and
lea
add
js
xchg
and
xor
dec
test
je
lock
jecxz
sbb
adc
mov
and
nop
adc
xor
std
xchg
test
xor
or
mov
sbb
and
movsb
xchg
sub
clc
and
sub
xchg
adc
pop
inc
in
and
inc
mov
mov
sbb
or
nop
or
faddl
hlt
inc
push
and
adc
mov
sbb
or
test
add
inc
sbb
nop
push
stos
or
test
enter
and
push
inc
pop
and
sbb
lods
test
enter
and
adc
or
test
or
inc
xchg
and
xor
sbb
xor
jl
add
dec
rolb
inc
insb
and
bound
adc
and
mov
mov
inc
pushf
enter
and
adc
jb
adcl
add
loopne
inc
mov
outsb
adc
shl
ss
adc
andl
inc
mov
xor
mov
or
mov
or
and
adc
mov
adc
sub
sub
test
mov
inc
jns
push
push
and
adc
dec
pop
dec
or
adc
test
and
pop
inc
or
test
les
or
call
adc
inc
adc
daa
inc
aam
push
or
or
rolb
and
adc
enter
sbb
test
lds
or
mov
inc
and
fwait
xor
add
mov
sbb
daa
cltd
pop
mov
inc
cmc
adcl
and
xchg
mov
bound
fists
or
je
and
ret
pop
inc
ret
pop
sbb
mov
and
pusha
pop
adc
call
push
or
pop
xchg
mull
mov
roll
repz
movw
pop
inc
mov
jg
and
fmulp
out
lods
push
sbb
push
add
cmp
xlat
andb
imul
pop
inc
pop
das
in
fwait
movsb
out
out
repnz
nop
loope
scas
je
and
iret
pop
push
push
pop
dec
inc
sbb
out
sub
sbb
rcr
addr16
mov
xchg
jl
adc
xor
fsubs
sbb
cmp
shrl
fwait
call
and
aas
adc
andl
push
popf
or
sub
leave
push
repnz
pop
jne
add
cmpsb
mov
test
insb
cmpb
cmp
test
jmp
sti
mov
cmp
push
cld
addr16
push
adc
or
arpl
and
daa
mov
push
nop
loope
push
rcrb
and
aaa
orb
and
jl
nop
and
fstpt
sub
nop
inc
sbb
test
call
and
push
pop
lcall
sar
and
jbe
sbb
mov
mov
push
mov
loopne
pusha
ret
lods
orl
bound
and
cs
or
mov
stos
xchg
mov
push
int3
add
jne
jmp
mov
xchg
sahf
dec
mov
push
sub
mov
jne
pop
xor
jp
adc
ja
mov
stc
sub
fildll
cltd
rcrl
sbb
and
pop
and
cmpsl
xchg
push
sub
adc
mov
pop
add
cmc
add
mov
adc
mov
repz
pop
or
xor
xor
cmp
repz
sbb
xor
jae
test
shld
cmp
xchg
dec
insb
addr16
mov
xor
add
xchg
stc
stos
test
mov
inc
jo
sub
adc
or
mov
ret
inc
push
sarb
mov
pop
cmpsb
dec
lock
les
cmc
xor
ret
cs
and
daa
xchg
add
xor
daa
pop
aas
cmp
loopne
pop
add
add
or
push
pop
int3
or
adc
adc
stc
pop
and
popaw
cmp
stc
add
push
adc
and
lods
sti
mov
fs
xor
dec
scas
push
jl
jbe
mov
jge
push
pop
and
andb
mov
cmp
outsl
adc
push
cli
mov
jns
xchg
and
sub
inc
pusha
jmp
sub
pusha
cli
or
popf
shlb
xchg
fs
push
or
xorb
repnz
jmp
rcrb
loope
out
lods
das
xchg
xchg
mov
dec
mov
adc
sbb
aad
pop
rorb
cmp
cltd
ss
orps
mov
xchg
lock
push
pop
jmp
adc
or
dec
lret
mov
stos
mov
xor
insl
jg
push
mov
or
adc
cld
sbb
jmp
dec
mov
sub
popf
out
add
faddl
out
faddl
rcrb
pop
clc
popl
jmp
outsl
movsl
cltd
xchg
mov
js
push
pusha
cli
dec
pop
push
nop
push
jge
stos
cmpsb
jle
xor
jl
jae
push
pop
dec
or
cmp
adc
shll
lea
pop
mov
leave
sbb
orl
and
jmp
cmpsb
fs
addb
mov
inc
fcoms
leave
or
in
mov
cmp
insb
add
jmp
mov
push
imul
out
push
aas
mov
or
and
mov
loopne
jge
je
xor
aas
and
cli
adc
call
js
xchg
jle
mov
mov
dec
loop
mov
jne
adc
and
cmc
or
inc
push
add
or
jns
mov
or
int3
cmp
jmp
add
jp
out
dec
mov
lds
test
int
push
and
push
xor
mov
push
cmpl
mov
pop
sbb
rorl
rorl
mov
pop
fbstp
adcl
add
cmp
jl
faddp
fistpl
or
aas
mov
jbe
pushf
xor
cmpsl
adc
loop
je
sbb
imul
lahf
add
sub
push
xor
sub
movsb
mov
out
add
jne
push
stc
fistpll
test
mov
mov
test
adc
sbb
lea
or
xor
push
lret
cwtl
sbb
push
and
jne
xchg
call
and
push
inc
cmp
inc
sti
loope
sbb
adc
in
aad
adc
pop
cmp
fs
jl
sbb
test
adc
sahf
mov
or
out
sarl
mov
iret
bound
jle
dec
call
aas
jge
aaa
daa
cmpl
mov
and
pop
test
orl
incb
mov
cmp
orb
pushl
jbe
jae
scas
sbb
enter
sbb
test
push
nop
cmp
mov
fists
je
into
ficoms
mov
aas
sbb
jae
adc
pop
les
popa
cltd
jg
cmp
inc
test
andb
sbb
inc
adcb
sub
adc
loope
sub
adc
orl
loop
push
test
xor
orl
cld
xor
notl
fs
adc
xchg
add
mov
sub
sbb
add
xor
cld
bound
mov
pop
ret
or
pop
push
test
cld
sbb
and
jns
js
arpl
pusha
sub
inc
sti
or
inc
jns
or
and
je
cld
push
into
ret
jns
mov
out
cmpsl
mov
lret
cmp
adcb
and
inc
pusha
out
inc
cli
fadd
pop
call
and
hlt
shrb
nop
dec
push
or
rcrb
push
push
gs
sbb
ja
or
dec
sti
and
mov
jno
add
or
shr
adc
fsubr
mov
shr
out
ret
and
pop
xor
clc
out
cltd
leave
sub
mov
push
subb
lea
nop
repnz
pop
xchg
xor
push
dec
sub
xchg
adc
dec
andb
hlt
jnp
inc
pushf
mov
insl
lds
sub
mov
arpl
dec
jg
cwtl
sbb
mov
movsl
inc
jecxz
dec
mov
adc
ficoml
mov
pushf
shrb
std
enter
stos
lods
mov
push
jbe
rcll
cmpb
test
mov
mov
mov
cmp
and
inc
push
test
loopne
sub
sbbb
cmp
or
bound
sti
nop
adc
out
and
inc
jmp
test
mov
fdivs
dec
cmp
sti
pop
cs
jge
xor
in
popf
inc
inc
add
dec
out
add
xor
inc
hlt
sbb
push
sub
cs
push
adc
fs
sub
dec
jmp
and
ret
inc
push
and
out
xor
mov
mov
or
add
jno
add
push
jmp
les
and
fbld
add
cwtl
loop
or
add
xchg
cwtl
jecxz
ljmp
xor
daa
push
mov
sub
adc
dec
sbb
and
mov
nop
loop
xchg
or
cmpsb
scas
icebp
and
mov
or
xchg
loop
jp
xchg
mov
inc
idivb
mov
jns
adc
in
nop
sbb
sti
aam
aas
cwtl
movhlps
sub
push
xor
shrl
icebp
mov
push
ljmp
mov
mov
cmp
lahf
int3
mov
shr
lods
gs
xor
pop
cwtl
mov
xor
mov
je
and
sub
test
sub
inc
jmp
mov
cld
sbb
lcall
push
mov
call
pop
xchg
mov
pop
cmp
mov
ret
js
testl
mov
mov
mov
adc
jp
mov
mov
data16
and
sbb
xchg
or
cmp
and
push
mov
lods
hlt
or
faddl
push
vpsubsb
icebp
sti
insb
das
dec
pop
inc
pop
xchg
adc
mov
jo
sbb
cmpsl
mov
out
jecxz
jge
or
testl
adc
sbb
fadd
rorb
arpl
call
shl
and
sub
jle
mov
in
mov
sbb
daa
xor
test
mov
sbb
cmp
insl
aam
int3
in
jae
inc
adc
jb
std
sbb
cmp
addb
mov
ret
adc
cmp
mov
mov
mov
sbb
adc
test
int
jo
aam
lret
sub
mov
cld
pop
mov
loop
push
mov
test
call
jmp
or
fwait
call
push
adc
or
add
jmp
ljmp
pushf
mov
cmpsb
das
adc
or
shrb
mov
scas
popf
fcompl
cmpsl
jne
adc
and
or
push
jae
push
inc
pop
and
shll
mov
test
xor
jbe
out
jae
pop
pop
and
adc
movaps
test
and
dec
xor
lds
dec
ja
lods
int3
in
mov
xchg
ret
fstl
nop
repnz
adc
aam
mov
aas
aas
inc
movsl
cltd
pusha
sub
pop
mov
xor
mov
and
xor
xchg
nop
sbb
test
jae
movsb
int
xchg
cltd
loopne
push
fwait
sub
fldenv
and
pop
cmp
jl
jmp
adc
adc
sbb
and
jmp
das
in
mov
test
lds
mov
jecxz
or
ja
mov
lock
negl
je
outsb
popf
adc
out
pop
xchg
sbb
outsl
insb
inc
fst
jbe
testb
lahf
imul
enter
mov
and
sbb
sub
inc
jmp
ret
adc
dec
test
push
dec
mov
stc
das
aas
fisttps
dec
push
fs
out
jae
mov
jmp
outsb
inc
sub
and
inc
ret
fcomps
sbb
push
mov
lret
mov
mov
jmp
mov
mov
ret
test
pop
dec
loop
das
pop
out
cmpsl
adc
cmp
ficomps
scas
jne
pop
into
and
inc
daa
jns
mov
push
mov
lea
mov
je
adc
xchg
dec
mov
je
out
jmp
fldl
and
and
jge
cmp
inc
mov
adc
jle
sub
xchg
xor
adc
xchg
inc
je
inc
adc
pop
insb
int
jl
test
or
cmpsl
mov
cmp
mov
addr16
or
mov
jno
jno
mov
dec
test
pop
add
test
jae
arpl
push
adc
outsb
mov
bound
add
and
nop
sbb
dec
sbb
shll
mov
mov
ret
or
xchg
rorb
hlt
pop
xor
rcrl
bound
mov
pop
pop
xchg
push
xchg
inc
xchg
pop
nop
out
fidivrs
test
sbb
dec
sbb
adc
aaa
or
mov
pop
jae
adc
std
sbb
lahf
adc
sbb
jo
inc
in
push
mov
sub
adc
sbb
mov
repz
and
mov
or
mov
push
shll
mov
shrl
and
sub
push
adc
test
out
imul
call
inc
bound
adc
push
pop
adc
sub
addr16
pop
push
push
imul
imul
imul
jmp
push
xchg
bound
in
shrl
jbe
inc
and
sub
dec
imul
filds
cmp
xor
pushf
mov
xor
outsl
stc
jne
dec
aam
leave
jbe
adc
add
push
push
xchg
push
clc
add
dec
adc
mov
movsb
mov
xchg
jae
sbb
cwtl
out
cmp
mov
inc
cmp
pop
and
outsb
sbb
xchg
pop
adc
popa
inc
inc
mull
or
pop
repz
adc
push
and
pop
flds
inc
push
dec
push
adc
add
mov
or
cwtl
add
dec
dec
adc
push
inc
lea
push
pushf
stc
je
jno
fwait
cs
testb
ret
xchg
and
mov
or
nop
pusha
mov
inc
je
pop
pop
test
xor
mov
ds
rclb
insb
addr16
inc
adc
lret
add
fbstp
les
cmp
aaa
roll
mov
call
mov
mov
ljmp
or
call
jle
mov
test
adc
lea
mov
push
or
add
test
mov
adc
jo
mov
mov
add
mov
xchg
xor
jnp
push
sub
or
xchg
adc
sarl
in
push
inc
xor
jmp
int3
sub
jbe
test
pop
lcall
sarb
push
mov
popa
pop
push
dec
push
int
data16
mov
movsb
push
push
cmp
pop
insb
cmp
jg
es
inc
enter
jne
dec
inc
mov
inc
popa
lea
xchg
pop
jecxz
adc
vpcmpgtw
mov
adc
adc
enter
lret
cmp
popf
gs
or
test
call
fldt
mov
loope
xchg
loope
add
in
mov
cmp
xor
gs
xchg
or
push
adc
push
sub
push
ja
cmp
fisttpl
clc
adc
push
cltd
scas
push
mov
test
loop
int
mov
stos
gs
idiv
adc
push
cmp
test
adc
shll
jae
push
and
cmpsb
sub
mov
icebp
test
mov
scas
xor
xchg
cld
mov
int3
jl
adc
imul
test
movsl
inc
pop
daa
cmp
cltd
xchg
outsb
sub
gs
bound
mov
xor
add
pop
mov
xchg
and
int3
cli
iret
cld
adc
adc
sub
or
and
xor
adc
lahf
icebp
scas
in
xor
call
test
sub
inc
add
xor
mov
adc
dec
xchg
jmp
mov
mov
call
add
cmp
push
aad
in
or
sbb
call
xchg
test
sbb
jmp
dec
mov
mov
xor
pop
hlt
adc
or
mov
xchg
mov
sbbb
rorb
lods
imul
push
mov
dec
sub
push
insl
xlat
lcall
les
hlt
cwtl
and
push
pop
push
push
jge
mov
dec
movsl
dec
cwtl
imul
aaa
adc
pop
pop
ds
stos
sub
test
cmp
push
adc
xor
adc
sub
les
jmp
sub
lea
call
push
cwtl
nop
dec
push
loope
lods
xchg
adc
adc
loope
and
or
into
push
xor
jo
jmp
insb
mov
or
leave
inc
or
xchg
in
cmc
xchg
pusha
push
mov
push
dec
pusha
out
loope
pop
sbb
rorl
dec
hlt
add
jmp
or
push
enter
jnp
xchg
jle
mov
pop
mov
loop
pop
sbb
add
cmp
shrb
ja
in
inc
and
cmp
mov
and
stos
or
xor
repz
lods
dec
or
ret
mov
xorl
or
sbb
divb
sub
mov
and
lods
in
daa
add
enter
rcrl
add
mov
push
push
xor
and
pop
clc
jecxz
mov
or
leave
push
push
imul
adc
mov
adc
popf
je
push
add
ret
and
arpl
add
insb
and
adc
lahf
and
std
jnp
xchg
les
pop
scas
sub
jne
pop
and
and
pop
xchg
dec
testb
mov
neg
pusha
pop
movsl
push
in
jo
xchg
dec
call
push
in
push
fbld
sub
mov
dec
xor
inc
shl
arpl
gs
cli
movsl
xor
sub
jmp
stos
sub
cmpsl
inc
pop
insb
test
lods
arpl
pop
in
pop
jno
sbb
push
xor
fwait
pop
fwait
outsl
adc
andl
dec
sub
aad
leave
push
sub
mov
scas
push
in
jl
pop
pop
out
inc
and
cld
rorb
imul
pushf
lahf
mov
dec
add
mov
sahf
bound
mov
pop
incl
dec
fdivl
clc
mov
mov
call
addr16
add
jo
fistpll
sub
add
adc
and
jp
nop
insb
jno
mov
push
out
mov
dec
xchg
add
in
cmp
in
xor
mov
rol
dec
in
mov
inc
mov
nop
dec
in
call
pop
lods
jns
sbb
dec
in
and
push
and
and
inc
xor
sbb
inc
les
outsb
adc
jg
lret
lret
lahf
lea
jl
and
adc
adc
bound
push
js
add
add
adc
xchg
movsb
mov
inc
js
and
adc
aaa
ss
pop
outsl
jo
sub
push
cmp
and
mov
andb
xor
inc
pop
add
sbb
pop
pop
das
mov
shlb
shlb
sub
inc
out
jo
xor
inc
push
xlat
imull
mov
pop
mov
mov
xchg
sub
popf
or
push
inc
mov
loopne
jnp
js
repnz
out
adc
sbb
stos
cs
pop
push
mov
push
popa
or
popf
in
adc
dec
jne
mov
push
inc
test
dec
sbb
xor
lods
push
es
dec
lret
inc
repz
cltd
cs
dec
xor
sbb
cltd
adc
cmc
dec
insb
adcl
int3
and
inc
out
pop
xchg
push
adc
sub
or
xor
adc
test
xchg
pop
cvttps2pi
pop
pop
sub
lds
mov
jmp
les
sar
sub
cmc
or
mov
out
pop
jo
sub
outsl
mov
xchg
pop
fdivrs
idiv
add
add
push
fisttpll
mov
loopne
hlt
cmovle
ljmp
mov
mov
inc
push
sub
mov
jmp
idivl
mov
push
sbb
sti
push
rcrb
jl
sub
jns
jmp
arpl
cmpsl
push
call
adcl
adc
ss
inc
cmp
loope
push
cmp
xchg
add
test
add
adc
xchg
xorl
data16
pop
repnz
dec
lock
clc
ljmp
add
jae
inc
addl
imull
inc
test
xor
push
and
push
cmp
clc
out
push
clc
shlb
jmp
jns
aad
popa
and
ficoml
jmp
push
lock
xchg
sub
sub
cmp
push
in
xchg
jl
jg
sbb
mov
lods
sub
addb
dec
pop
xor
ljmp
das
repz
jae
hlt
subl
je
jo
ret
lea
inc
cmp
xor
push
das
push
cmp
push
xorb
std
pop
add
sub
or
ljmp
inc
pop
and
sahf
xor
and
xchg
mov
mov
mov
scas
cmp
call
lods
add
adc
out
test
lahf
xchg
decb
cld
dec
pop
pop
das
inc
lret
negl
das
jmp
movsl
inc
dec
ljmp
stc
and
jmp
mov
lds
test
test
stos
popa
push
sbb
mov
into
sub
jl
adc
mov
arpl
int3
adc
test
pop
outsb
out
xor
mov
push
mov
inc
out
repnz
testb
sbb
sbb
inc
fidivrl
push
sub
or
or
bound
stos
iret
nop
xchg
cs
cmpsl
pushf
test
xchg
fstpl
dec
in
or
in
mov
sbb
mov
ret
pop
sti
xor
xor
mov
gs
loopne
and
and
mov
and
and
in
mov
mov
into
pop
inc
xchg
test
adc
js
xor
int3
movsl
icebp
push
cwtl
cltd
cmp
repnz
jae
icebp
scas
dec
sub
xor
dec
outsl
ljmp
loop
movsb
ds
and
and
pop
push
cmp
xchg
jmp
adc
pop
enter
or
das
mov
dec
xlat
cltd
das
ucomiss
hlt
adc
push
pop
jmp
dec
sub
pop
xor
shl
sti
mov
jmp
cmp
sbb
pop
shrb
test
jmp
imul
push
call
adc
adc
push
nop
ss
jmp
or
xor
adc
xor
adc
pusha
jnp
popf
mov
daa
push
sub
dec
pop
fsubl
fdivl
sarl
test
repz
and
sti
pop
shlb
push
push
dec
subl
xor
or
testb
adc
aaa
mov
into
cmpsl
cmp
sti
xchg
xchg
inc
inc
fstpt
je
inc
test
sbb
lods
mov
je
cmp
mov
push
dec
jo
push
xchg
hlt
mov
or
adc
in
lahf
pop
inc
gs
ret
sbb
sbb
push
cmp
or
inc
cld
test
mov
xor
gs
ret
push
stos
and
test
mov
adc
int
adc
popf
pop
jbe
push
jl
addl
add
mov
int3
enter
pop
lea
incl
js
insl
mov
mov
jmp
clc
adc
call
fidivs
std
cmp
dec
push
mov
ret
loop
rorl
int3
hlt
push
pusha
or
mov
pop
inc
xlat
cmp
fwait
sbb
and
mov
xchg
int3
sti
popf
jnp
cmpsb
add
adc
adc
adc
mov
enter
xchg
clc
addl
mov
andl
and
das
xchg
stos
imul
and
push
inc
repz
mov
lea
sbb
push
jp
inc
je
pop
in
push
push
in
test
cmp
ror
jo
imul
fucomip
push
clc
pop
enter
adc
mov
mov
in
filds
mulb
add
jge
sub
insl
les
jb
pop
mov
inc
clc
or
jmp
pop
int3
sub
jne
inc
lds
ret
mov
sarl
mov
out
sub
movsl
dec
out
daa
and
fiaddl
addl
mov
sarb
mov
or
imul
push
sub
stos
push
inc
push
sub
mov
repz
clc
add
or
mov
int3
pop
mov
aam
pop
push
sbb
push
push
push
scas
leave
jl
jne
lahf
or
std
bound
push
push
push
mov
inc
dec
mov
fstpl
dec
xor
and
adc
mov
pop
shrb
mov
push
fiadds
mov
out
mov
dec
fadds
je
inc
dec
mov
test
adc
cld
clc
cmp
push
scas
sub
xchg
add
dec
cmc
lret
sub
and
inc
in
inc
cmp
or
sub
pop
es
ja
sbb
pop
enter
shll
ficomps
jo
in
xchg
xchg
jns
jmp
gs
inc
lods
dec
jmp
push
sbb
gs
push
call
inc
imul
movl
mov
jnp
pop
rorb
cld
push
push
subl
push
cld
or
test
ja
sbb
xchg
test
sub
popf
loop
jg
xchg
in
and
mov
pop
push
sar
clc
sbb
mov
scas
mov
int
stc
stc
lret
jg
shrb
mov
loopne
and
fs
cmp
ret
cmp
adcb
dec
movsb
rclb
mov
sbb
js
lret
push
fcom
xor
cmc
jns
and
or
sub
in
or
pop
in
popa
mov
orl
or
cwtl
das
icebp
mov
cmp
rclb
aas
cltd
mov
or
jge
xchg
aas
jle
movsb
pop
mov
lods
popa
ret
jmp
jle
inc
push
fcoml
mov
xchg
test
gs
ret
mov
cld
call
and
push
out
sub
mov
mov
icebp
nop
dec
enter
push
xor
xor
imul
loope
mov
or
dec
scas
cmp
sbb
jne
punpckhbw
dec
sbb
or
xor
push
cmp
in
sub
push
popf
lahf
fdivl
add
push
outsl
icebp
add
xor
add
or
pop
ljmp
dec
cmc
popa
decb
and
push
cmp
sbb
push
mov
jp
mov
fst
pop
fnstenv
and
daa
outsb
mov
xchg
push
mov
xor
inc
mov
inc
adc
std
dec
test
inc
popf
push
aas
stc
out
xchg
dec
or
jg
call
xchg
test
orb
inc
add
daa
das
fmul
fstpt
std
dec
push
push
lds
xchg
xor
clc
fwait
sub
outsb
cld
jne
xor
xorb
clc
add
cltd
rcl
jae
popf
gs
jl
and
je
inc
cmp
sub
lock
sarb
mov
jb
testl
test
or
push
xor
inc
push
jmp
xchg
sub
push
pop
andb
push
mov
dec
aaa
mov
xchg
xor
push
jno
ss
inc
and
push
push
adc
rclb
std
fwait
dec
jmp
mov
loop
adc
inc
cmp
lds
mov
fildl
cld
in
push
repnz
push
or
out
jecxz
pop
hlt
and
sbb
sub
xchg
hlt
mov
pop
jl
adc
push
rol
xor
fs
xchg
push
mov
push
add
jne
notl
mov
dec
shrb
decl
divb
or
push
int3
pop
push
lds
mov
or
mov
fstps
lret
add
or
or
and
mov
mov
inc
mov
sahf
lock
mov
clc
push
and
aam
xor
cmp
incb
je
lcall
xchg
jg
jmp
popl
jmp
dec
xor
sbb
dec
cli
loop
shrb
push
add
push
xchg
push
imul
movsb
mov
jp
loopne
daa
bound
adc
push
dec
out
mov
cld
psrad
jns
fs
sub
push
lcall
mov
add
push
mov
adc
jmp
push
sub
push
adc
push
mov
pusha
xchg
inc
mov
dec
adc
mov
or
mov
jg
mov
sbb
out
mov
pop
test
cmc
imul
and
push
cmpsb
int
xor
in
sub
and
in
shlb
aad
dec
mov
pop
xor
or
push
ljmp
xchg
mov
std
jns
dec
adc
xor
ret
inc
mov
pop
ss
pop
cmp
dec
jg
xor
fs
pop
int
test
sub
mov
test
cmp
aas
cmp
shll
mov
cmovl
and
and
in
or
xor
push
xchg
inc
adc
mov
daa
fs
iret
mov
and
outsl
loop
sarb
ret
mov
mov
inc
push
add
pop
daa
movsl
sub
je
pop
add
insb
scas
aas
fistpll
scas
orb
call
adc
stos
cltd
lods
and
add
cmp
pop
mull
movsb
add
xor
call
add
mov
pop
cli
std
hlt
mov
push
mov
xor
mov
sub
ret
push
pop
pop
adc
sub
adc
xor
mov
mov
xor
inc
loopne
pop
inc
ja
call
enter
adc
add
inc
cwtl
sub
pop
dec
jge
mov
add
xchg
shl
sub
dec
dec
jmp
sub
dec
or
mov
repz
mov
push
push
mov
sbb
pop
into
out
sub
into
or
pushf
enter
shl
mov
sti
add
mov
aas
jo
adc
sbb
jecxz
movsb
or
sub
pushf
cmpsl
mov
notl
mov
and
jne
inc
stos
idivb
dec
xor
add
sbb
sub
inc
and
ds
addr16
dec
outsl
call
repz
gs
mov
mov
popf
cmp
data16
cs
mov
das
pop
xor
mov
or
loop
ret
jl
std
cld
les
sbb
loop
popl
adc
xor
call
subl
loope
inc
cltd
inc
imul
cmp
sbb
es
adc
push
inc
stos
cwtl
icebp
push
addr16
dec
outsl
call
sub
jl
decl
jmp
adc
push
mov
mov
sbb
test
push
mov
push
jno
pop
mov
mov
pusha
push
pop
and
jle
xor
andb
idivb
call
ja
lods
jbe
adc
inc
cmp
jl
mulb
rcrb
ret
mov
ficoml
scas
lret
push
ja
pop
pop
lcall
xchg
and
imul
push
pop
cmpb
add
stc
pop
jl
repz
pop
adc
add
inc
int
mov
or
adc
inc
mov
stos
mov
addl
cmp
push
or
sub
dec
pop
fiadds
inc
push
jne,pn
xor
mov
ret
and
enter
or
mov
pop
in
sarb
mov
out
sbb
sub
adc
jg
lret
je
or
add
arpl
jo
jmp
movsb
daa
add
insb
or
dec
rcrb
mov
push
add
push
push
inc
and
sbb
and
adc
pop
fcomps
and
push
pop
jecxz
dec
inc
or
daa
inc
es
sbb
xor
pop
es
jbe
and
mov
mov
ds
inc
sub
inc
pop
mov
and
and
ret
icebp
pusha
adc
cs
stc
pusha
inc
popa
inc
fldl
jp
sub
ret
lea
dec
call
neg
pop
fadd
sub
mov
ror
dec
pop
or
pop
jmp
adc
cmp
lret
jmp
cmpsl
lea
add
or
test
adc
add
imul
ret
mov
mov
or
inc
incl
cli
xchg
adc
inc
mov
sbb
jl
push
xlat
std
dec
rcrl
pop
je
mov
dec
in
sub
mov
mov
and
cmp
jo
cli
mov
subb
in
and
mov
mov
stos
xor
in
dec
sub
xor
pop
stos
fmul
xor
into
fdiv
pop
adcl
aaa
or
andl
lods
aam
inc
icebp
sar
adc
adc
repnz
push
test
fdivr
jecxz
fidivrs
or
cld
lods
test
cmp
jl
push
insb
cmp
jge
jne
inc
std
jmp
cmc
mov
mov
sti
mov
test
inc
xchg
push
lds
mov
and
pop
xchg
push
popa
sub
pushl
cwtl
or
sub
inc
pop
xchg
xchg
clc
jmp
mov
call
sub
arpl
das
jmp
mov
push
sub
and
add
adc
lea
sub
jecxz
sub
cmp
pop
icebp
pop
addr16
out
inc
pushf
pop
jne
mov
pop
or
mov
dec
cmp
push
push
xor
dec
aaa
popf
mov
push
lcall
adc
mov
mov
and
push
push
jne
stos
dec
mov
jne
or
dec
push
loop
adc
lret
cmpb
add
xor
pop
mov
sbb
dec
loope
push
inc
jo
sub
bound
and
sub
push
mov
in
and
icebp
fcoml
xor
das
test
xchg
and
je
pop
jno
add
shrb
jae
rcrl
pop
test
incl
shlb
nop
test
mov
stc
sbb
adc
add
outsl
adc
addr16
mov
cmp
xchg
test
dec
data16
pop
jne
fcompl
lcall
imul
mov
pusha
test
inc
cmp
addl
mov
loopne
sbb
sub
cmp
mov
jge
fcoml
dec
filds
sbb
mov
xchg
push
xchg
aam
xor
push
nop
jl
or
xor
movsl
pop
inc
lods
es
and
push
xor
std
sbb
mov
pop
push
or
cmp
xchg
test
adc
xor
loopne
or
cmp
xor
xor
inc
push
fbld
inc
push
sub
xchg
setl
and
in
jb
cs
dec
and
mov
hlt
and
shrl
mov
orb
push
lcall
push
adcb
insw
popa
adc
jno
je
movsb
call
lock
dec
les
push
lock
add
push
fidivs
dec
rclb
cmp
inc
xchg
mov
das
lcall
push
jo
xor
inc
cmp
inc
iret
xchg
aam
decl
inc
add
jnp
lds
lcall
clc
mov
mov
call
lea
insl
test
das
dec
inc
jb
jge
dec
ret
pop
inc
mov
pop
gs
xor
and
ret
int3
pop
popf
jl
dec
cmp
add
mov
xchg
xor
jb
loop
inc
adc
scas
mov
and
xchg
into
xchg
fwait
idiv
lock
pop
xchg
adc
in
and
in
pop
pushf
sub
outsb
push
sahf
hlt
mov
inc
adc
icebp
enter
push
rorb
dec
pop
cmp
and
push
sub
enter
xor
push
dec
push
adc
mov
lods
mov
mov
call
in
or
sbb
xchg
cld
push
push
push
inc
insb
sub
ret
je
dec
insl
sub
cli
mov
cwtl
or
addl
or
mov
lret
push
jl
cmp
sti
dec
xor
sbb
or
inc
or
sar
mov
hlt
pop
cmpsl
notl
adc
aad
fwait
push
cmp
clc
call
pop
divl
xchg
mov
sbb
mov
inc
mov
in
int3
jle
xor
addr16
push
int3
xchg
testl
or
adc
jmp
out
mov
inc
add
cltd
xchg
rcll
test
pop
fildl
jmp
dec
mov
pop
xchg
arpl
pusha
test
leave
int
and
lcall
ficomps
inc
aas
push
fimull
subl
std
rclb
movsb
push
add
adc
or
cmp
jno
push
test
stc
inc
pop
push
inc
pop
xor
lock
jnp
mov
xor
dec
lods
sbb
sub
dec
loopne
inc
icebp
test
sbb
jb
int3
lods
push
mov
mov
les
or
int3
push
fmull
ficoml
movl
mov
insb
push
test
movsb
sti
mov
fwait
adc
jl
jle
out
call
mov
mov
testl
xchg
lds
xor
lds
inc
cld
pop
jecxz
fnstcw
xorl
pop
aam
aad
mov
imul
xchg
rorl
mov
adc
and
rolb
sbb
inc
jbe
adc
stc
or
test
or
test
inc
mov
or
inc
mov
cmp
mov
or
cmp
jle
cs
mov
shrb
mov
in
fsts
mov
faddl
inc
mov
cmpsb
push
jne
mov
fs
or
and
mov
ljmp
mov
into
and
or
push
out
jg
push
testb
jne
jp
and
aas
jmp
js
push
leave
mov
xchg
and
and
pop
inc
cli
sti
mov
or
push
jmp
mov
out
or
sub
cmpsb
cs
add
add
repz
dec
and
lock
cmpsb
clc
push
es
dec
xchg
mov
paddw
xchg
jbe
movsl
jge
cmpsl
das
ja
dec
imulb
je
lea
bound
into
inc
ss
lock
sti
ljmp
ds
push
xchg
xor
xor
mov
sbb
insb
sar
rorl
or
in
jae
ljmp
xor
jnp
xor
xor
pop
mov
aaa
adc
cmova
or
or
pop
push
sub
push
mov
and
jb
je
xchg
test
arpl
add
push
push
fs
add
add
and
sub
or
and
fildll
dec
adc
gs
es
and
aad
dec
add
jo
stos
out
sub
sti
test
in
sbb
and
jmp
repnz
std
push
adc
jmp
push
xor
sbbl
xor
ret
pop
ja
xchg
int
aas
call
mov
pop
pop
mov
dec
hlt
add
test
or
sarb
mov
cli
sahf
adc
addb
or
or
pop
loop
sub
stos
add
inc
lock
mov
jmp
loopne
call
or
push
insl
adc
insb
xor
mov
lds
shr
sahf
addl
adc
mov
icebp
xor
repz
mov
xor
xchg
fwait
or
or
inc
ds
inc
cmp
jb
inc
into
mov
adc
xchg
jns
or
xor
call
pop
or
sti
sbb
and
and
adc
sbb
mov
add
xorb
loopne
xor
add
mov
adc
repnz
test
aam
add
pop
decl
xchg
dec
sub
mov
xor
das
ja
jmp
out
lock
pop
xor
stos
les
int3
and
dec
push
push
inc
and
or
pop
xchg
adc
mov
orl
xchg
lret
int
jne
cmpsl
or
pusha
int3
int
xor
ficomps
outsb
pop
inc
std
cld
inc
aam
jmp
std
mov
or
mov
je
movsl
sysret
adc
adc
insb
adc
mov
push
adc
pop
jmp
int3
pusha
mov
and
dec
pop
aas
pop
adc
and
add
sbb
sub
mov
and
or
jno
lea
lock
loopne
xchg
dec
mov
mov
cld
es
cmp
inc
les
les
scas
adc
lea
lods
aad
je
push
xchg
add
add
mov
jge
push
xor
lds
les
dec
push
int
ds
mov
pop
xorl
cmpb
in
imul
sbb
repz
and
pop
mov
pop
int3
mov
and
sub
dec
push
dec
pop
and
call
scas
int
add
add
push
aam
or
or
push
mov
pop
sub
dec
nop
adc
sub
mov
and
xor
and
je
dec
inc
push
pop
rcll
ja
push
jle
xchg
call
call
arpl
cwtl
rorl
xor
in
std
pop
movsb
jb
mov
add
test
rcrl
sub
fxch
or
call
and
nop
pop
mov
push
xchg
adc
cmc
sti
out
dec
mov
xchg
test
adc
lds
leave
stos
repnz
cmp
je
cli
icebp
int3
int3
stc
add
lock
xorl
sub
test
inc
sbb
sub
pop
push
mov
push
movsb
xor
jl
jmp
pushf
push
jbe
shlb
shrl
inc
xchg
scas
adc
test
sbb
push
mov
xchg
ljmp
in
jb
cmp
repz
pop
xchg
or
inc
jo
adc
mov
sub
cmp
jne
lea
hlt
cmp
ret
test
and
into
lods
jne
ret
aas
adc
scas
mov
inc
hlt
shlb
enter
xchg
push
dec
xchg
mov
mov
or
xchg
cmc
xor
inc
mov
and
loop
mov
add
and
and
stc
jne
sbb
mov
cwtl
sub
cmp
push
lds
flds
mov
call
sub
sub
clc
test
shl
ret
mov
adc
fcompl
call
inc
or
int3
repz
daa
test
xlat
or
rcrb
and
lock
ds
fistps
divl
mov
push
test
int3
pusha
mov
ja
and
and
ret
loop
sbb
mov
daa
ret
xchg
ljmp
popf
mov
jno
or
cmp
mov
inc
clc
test
mov
inc
nop
and
pop
xor
inc
dec
hlt
fisubrs
sub
mov
sub
adc
cmp
or
inc
sarb
std
jmp
sbb
mov
mov
pop
sbbl
push
mov
sub
shl
sbb
js
ds
pop
mov
adc
int
push
sbb
jl
es
inc
repz
push
mov
push
xor
outsb
lea
outsb
out
lret
xchg
in
sub
es
das
outsl
mov
arpl
jne
addr16
lahf
cmp
sbb
lods
mov
pop
jmp
inc
popf
test
call
movsl
jnp
pop
sbb
loopne
cmp
or
add
jb
pop
mov
in
push
push
xchg
fmuls
mov
push
enter
movsb
sbb
add
jb
cmp
mov
push
dec
fs
xor
xor
push
push
push
lock
add
pop
jb
cmp
jne
aaa
push
and
and
inc
adc
inc
bound
adc
adc
xor
or
mov
sbb
test
mov
pop
or
xchg
add
sbb
add
adc
xchg
cmc
mov
out
dec
stos
and
test
or
lea
push
lret
push
jl
sub
and
incb
fs
and
test
sub
jmp
sub
and
or
inc
gs
and
push
insb
xor
or
mov
pusha
test
sub
pusha
inc
push
je
jge
push
or
cmp
dec
mov
inc
sub
push
sbb
out
adc
push
sbb
mov
enter
aas
jecxz
test
cltd
inc
mov
loop
jo
add
insb
or
jmp
rcl
jmp
in
cmp
cwtl
clc
repz
fs
shlb
jle
or
or
loopne
sbb
scas
jae
xchg
popf
or
notb
pop
push
lcall
in
jg
nop
lcall
add
call
enter
dec
and
js
lds
leave
mov
mov
daa
xchg
leave
mov
sub
dec
sbb
ljmp
stc
adc
or
push
push
mov
pop
cld
std
mov
cli
inc
pop
mov
push
std
les
mov
inc
mov
test
mov
call
das
mov
fmul
lea
das
mov
mov
jmp
nop
dec
push
sub
mov
add
sbbb
inc
bound
and
out
xchg
jle
cmp
jne
sub
sbb
adc
icebp
mov
adc
subb
adc
dec
sbb
aad
inc
push
add
or
mov
push
and
movsb
aaa
and
and
mov
push
ds
or
mov
movsb
pop
mov
push
adc
mov
push
std
lret
add
outsb
pop
sbb
xlat
pop
push
mov
add
popf
pusha
notl
mov
adcl
and
xor
jp
pusha
sbb
lods
fmul
pop
cltd
jne
and
sub
test
fildll
pop
cmpsb
add
lds
xchg
lret
xchg
dec
adc
jne
push
jle
aam
inc
loop
sbb
push
push
and
popa
test
std
imul
enter
push
outsb
lcall
out
sub
inc
or
shlb
and
pop
adc
add
jle
mov
shr
xor
adc
and
sub
or
enter
adc
stos
push
pop
xchg
pop
popa
mov
pop
ficoml
fstl
fidivs
or
push
adc
shl
dec
arpl
enter
fmuls
loopne
jmp
xchg
push
in
movsb
and
clc
neg
sbb
xor
sbb
addr16
fwait
pop
clc
fchs
inc
ljmp
into
cmpsl
enter
pop
popf
test
jp
cwtl
jg
jae
mov
insb
cltd
pop
or
jmp
dec
and
and
imul
push
sbb
cmp
mov
or
sub
mov
fisttps
mov
mul
fs
pushf
add
push
dec
aaa
cli
cwtl
or
and
dec
movsl
push
sub
bound
fiadds
sbb
xor
scas
std
call
mov
and
aam
inc
xor
mov
pop
and
shll
mov
pusha
in
and
cmp
pop
push
cs
cmp
aad
les
mov
inc
outsb
mov
push
mov
jle
push
or
mov
je
and
ljmp
int
aad
xor
shlb
xchg
std
inc
and
in
mov
pop
dec
xchg
and
out
inc
or
jg
pop
mov
jge
push
inc
sbb
mov
and
mov
cmp
xchg
xchg
cs
subb
dec
cmp
add
lock
push
push
movsl
sub
inc
clc
push
and
sbb
test
cmp
sbb
pushf
xor
and
inc
nop
pop
mov
js
test
push
mov
bound
jbe
mov
jmp
fcmovb
popf
jl
push
sbb
mov
xchg
xlat
sbb
jmp
inc
dec
scas
mov
dec
push
mov
cmpsl
lock
movsb
xor
push
icebp
and
rorl
mov
addr16
mov
mov
cmp
imul
incl
jecxz
movhps
jbe
movsl
mov
sub
enter
das
jg
iret
test
sbb
loope
mov
lods
pop
pop
out
jle
jle
inc
mov
iret
mov
orl
xor
fdivp
sub
aam
and
loopne
add
hlt
int3
dec
adc
pop
cmp
testb
aas
adc
cmp
xor
sub
sbb
and
pop
cmp
sub
adc
stos
sub
xor
mov
jp
lods
dec
test
sbb
pop
mov
cmp
sbb
ficoml
clc
call
mov
popf
filds
lret
std
inc
mov
xchg
cld
call
int
dec
aam
cmpsl
inc
add
push
insb
pop
push
adc
jmp
mov
fstpt
mov
cld
and
push
adc
push
and
loope
ss
pop
leave
insb
cltd
cmp
adc
push
jmp
add
mov
sbb
sub
stc
mov
inc
xor
inc
aam
dec
sti
orl
adc
shlb
leave
pop
jmp
or
push
inc
xor
mov
jl
pop
test
movsl
shrl
xchg
sub
lret
xchg
sti
movsl
cmp
or
inc
bound
adc
sub
mov
or
adc
inc
addr16
filds
pop
sbb
dec
xchg
sbbb
les
adc
stc
popa
lret
push
in
push
push
leave
and
icebp
add
outsb
repnz
jmp
adc
add
cmp
out
jmp
push
mov
mov
ret
jne
loopne
mov
add
mov
mov
inc
pop
in
outsb
adc
adc
adc
rclb
and
aam
addb
pop
fcoms
dec
ret
out
in
and
imul
push
jl
shlb
xlat
jae
jnp
or
or
push
ds
adc
add
les
sub
test
sub
cmp
dec
adc
aaa
sbb
decb
pop
xchg
adc
and
cmp
jle
jns
xlat
and
jge
dec
xor
js
mov
rorb
cmp
je
pop
and
jl
rorb
push
int3
sub
bnd
test
mov
add
inc
adc
cmc
notl
mov
inc
fst
call
jne
movl
and
add
mov
shrb
jns
mov
cmp
jle
cmp
je,pt
mov
adc
cld
movsb
dec
inc
inc
pushf
inc
sbb
imul
sarb
push
and
jne
add
shll
adc
cwtl
es
and
xor
icebp
loop
adc
inc
lods
and
pop
ret
mov
xchg
mov
cmp
je
rcl
notl
ds
aas
dec
fildll
stc
adc
pop
sbb
in
pop
jnp
add
adc
push
cmp
xchg
dec
out
jo
in
jl
jp
test
inc
mov
dec
ja
mov
scas
and
testb
aam
fdivrs
and
pop
popf
dec
icebp
popf
add
push
push
xchg
or
call
lds
adc
push
mov
push
jmp
loop
test
add
loop
gs
pusha
jb
xorb
sub
test
or
pop
and
xor
cmp
scas
loope
xor
jge
adc
cld
mov
mov
cmpb
mov
xor
inc
out
xchg
ret
hlt
xor
neg
mov
push
ljmp
stc
jno
shrb
lahf
imul
pop
mov
ljmp
das
pushf
shll
sahf
aam
xor
or
jl
mov
das
stos
sub
xlat
push
dec
mov
sbbb
ret
je
adc
add
into
fs
lods
test
sti
xchg
push
xor
or
or
adc
mov
rorb
cmp
xor
inc
sar
mov
adc
pop
push
mov
movsb
cld
mov
jl
sahf
in
inc
mov
dec
stos
iret
lock
lock
call
cmp
xchg
push
fbld
pop
dec
scas
xor
dec
and
cmp
sbb
jns
sub
cmpsb
repz
jno
dec
cltd
or
pop
sbb
or
fnsave
inc
int3
jbe
call
insb
cwtl
cltd
adc
mov
in
add
rorb
adc
nop
cmp
mov
cmpsl
cltd
adc
nop
xor
cmpsl
test
cmc
scas
lcall
cmp
cs
test
inc
push
ja
jbe
jge
adc
inc
mov
in
inc
je
pop
test
dec
sub
std
xchg
hlt
mov
je
call
sarl
sub
imul
add
dec
hlt
adc
ret
pop
add
and
ds
mov
subl
movsb
cli
and
mov
test
int3
test
inc
add
jnp
pop
push
out
out
sub
or
pop
xchg
dec
mov
fbld
sbb
push
test
leave
je
mov
or
adc
insl
rorl
aad
sahf
or
nop
or
pop
nop
mov
push
mov
not
xor
mov
dec
mov
adc
rclb
dec
inc
inc
jmp
mov
or
sbb
pop
adc
mov
or
pop
mov
or
jo
clc
or
and
pop
cmpb
in
inc
sbb
inc
or
xchg
or
sbb
cmp
cmp
sub
inc
push
pop
jno
orb
enter
cmp
je
push
and
jae
mov
cmp
fdivrs
test
mov
pop
jmp
sti
out
cmp
mov
jg
incl
sbb
mov
mov
jg
ret
call
les
ret
dec
leave
fs
push
xchg
cld
mov
push
push
repnz
rorb
or
or
sub
adc
pop
and
jmp
fcmovnb
sbb
cs
push
mov
cmp
sbb
push
cmp
je
mov
mov
lds
inc
cwtl
flds
bound
mov
aam
jg
je
mov
lea
icebp
adc
and
mov
mov
scas
shr
les
movsl
or
mov
pop
nop
fimuls
sbb
adc
mov
mov
push
int3
roll
add
push
inc
pushf
mov
inc
lahf
inc
cmp
jb
pop
pusha
xchg
cmpb
test
dec
jmp
push
gs
pop
sbb
test
lea
dec
sbb
enter
das
add
xor
adc
out
adc
adc
pop
std
pop
adc
dec
xor
sub
and
xchg
rcrb
stos
adc
pop
in
pop
sub
pop
adc
push
lea
or
sbb
cltd
and
jo
aas
add
lret
outsl
test
push
int
int
cmp
sub
test
notl
dec
cmpl
cmpsb
orb
pop
xor
fistpll
sub
dec
stos
push
xchg
in
insl
sbb
mov
xor
sub
das
jne
fdivrs
cwtl
roll
jo
lahf
cld
fsubr
ja
push
leave
in
mov
jae
mov
and
inc
or
mov
xorl
ss
iret
or
mov
pop
jbe
inc
push
inc
and
adc
invd
pop
sbb
outsb
std
or
inc
xchg
es
add
cmp
call
adc
push
pop
mov
pop
scas
pop
push
inc
lcall
mov
sub
and
incb
push
leave
push
out
or
adc
push
jae
and
or
sbb
pusha
mov
movzbl
xchg
or
adc
dec
cmp
dec
cmp
inc
stos
jmp
sahf
shr
and
and
in
inc
adc
xchg
inc
pop
sbb
mov
fs
mov
and
dec
inc
adc
enter
or
jmp
adc
and
and
fists
scas
adc
inc
adc
mov
or
stos
fwait
test
mov
ss
dec
xor
push
iret
xchg
and
adc
and
cmc
mov
xor
and
add
icebp
sub
sahf
or
mov
adc
add
add
mov
cmp
push
fcomp
nop
mov
ret
nop
push
aaa
mov
jns
bound
cmp
pop
pop
pop
add
test
je
inc
jmp
clc
cmpb
add
add
cltd
dec
cltd
or
sbb
test
shll
pusha
pop
or
addb
cmc
and
call
mov
test
inc
sbb
popa
or
nop
jae
xor
mov
pusha
xchg
inc
jae
sbb
mov
mov
lahf
push
sub
inc
mov
mov
or
adc
sti
adc
pop
sbb
cwtl
mov
test
fidivrs
int3
cs
mov
enter
inc
cmp
mov
dec
or
xor
and
xor
xchg
and
and
or
jg
push
pop
fstpt
mov
and
push
nop
mov
ljmp
xchg
or
sbb
or
das
scas
pop
inc
int3
out
or
xchg
shl
cs
cmc
xor
neg
sbb
add
andl
faddl
add
dec
repnz
push
filds
mov
loopne
mov
pop
call
xor
test
outsl
or
or
test
enter
pop
push
adc
or
xor
push
xor
ds
mov
int3
pushf
and
icebp
cld
or
push
adc
rcrl
fwait
pop
sbb
pop
in
call
out
xor
int3
xor
rorl
adc
push
outsl
lods
inc
rorb
ret
cmp
imul
or
test
leave
je
inc
or
movl
jp
out
cmp
leave
mov
rcl
xor
xor
jmp
shrb
push
je
mov
dec
je
jnp
push
and
cmp
or
push
or
or
add
mov
dec
or
fstps
dec
jmp
mov
inc
mov
add
mov
inc
dec
fldenv
dec
push
jmp
ja
dec
lret
testl
dec
add
cvtdq2ps
inc
jno
ret
sub
adc
sbb
adc
stos
mov
jle
mov
mov
mov
rcrb
testb
adc
mov
int3
pushw
xor
or
adc
fs
inc
movsl
cmc
leave
and
or
sbb
adc
xlat
icebp
mov
mov
js
xchg
and
or
cmp
leave
pop
dec
subb
xchg
inc
rolb
inc
neg
dec
mov
or
adc
cmp
sahf
filds
mov
cld
mov
sub
push
push
sub
mov
mov
outsl
or
and
dec
push
and
push
or
jecxz
push
and
dec
dec
push
inc
out
call
and
mov
cmp
pop
cli
and
jne
scas
testb
inc
or
jmp
and
inc
push
ret
out
rclb
cmc
data16
or
clc
pop
mov
mov
test
pop
or
and
aaa
mov
add
cmp
jbe
mov
js
mov
adc
mov
loop
popa
stc
or
cmp
in
and
call
adc
sbb
jb
mov
xor
mov
push
clc
xor
cltd
or
pusha
adc
shll
sub
add
repnz
insl
add
sub
pop
inc
int3
lds
es
cmpsb
or
nop
and
inc
inc
inc
inc
sbb
int3
or
mov
pushf
test
sbb
xor
call
jmp
and
jmp
and
call
idiv
dec
cmp
or
and
or
and
and
pop
shrb
xchg
sahf
sbb
mov
xchg
mov
sub
sahf
xor
jb
and
sub
icebp
xorb
loope
data16
stc
sbb
test
mov
jne
cwtl
sbb
faddl
xchg
loopne
dec
lret
push
adc
cmpsl
movsb
sbb
push
out
and
mov
gs
sub
mov
pop
lret
pop
data16
cmp
inc
inc
dec
mov
and
dec
ja
push
adc
jmp
and
jmp
and
jmp
jns
pop
and
test
mov
mov
push
adc
dec
rcll
pusha
push
push
imul
sub
or
clc
adc
ljmp
icebp
je
daa
and
ljmp
imulb
adc
gs
roll
jae
add
shlb
pcmpeqw
push
add
fiaddl
shll
and
bound
sbb
add
int
lea
push
sub
clc
jmp
test
push
mov
pop
test
jge
test
shrl
cli
cwtl
bound
dec
pop
dec
lret
sub
xchg
loope
enter
xchg
push
lret
and
je
rep
fnsave
dec
dec
sub
ljmp
cmp
les
pop
adc
jmp
add
jae
rol
les
out
inc
add
ret
daa
nop
js
pop
std
push
add
cmp
lds
or
jmp
or
adc
shr
adc
inc
add
sbb
adc
pmaxsw
pop
push
fadd
divl
mov
sub
je
sbb
cmp
ret
pop
add
mov
inc
arpl
sub
shrb
and
inc
lret
push
xchg
inc
adc
mov
push
aad
adc
adc
pop
and
rolb
outsb
adc
push
xchg
cmp
stos
and
xchg
push
pop
push
push
ljmp
xchg
add
mov
imul
inc
push
xor
mov
mov
test
or
inc
ja
jmp
cmp
jle
sub
mov
adc
fldt
mov
inc
or
mov
and
pop
inc
shlb
cmp
ret
jne
daa
neg
jns
daa
jg
mov
adc
or
imul
out
stos
mov
les
lods
ja
test
xorb
xchg
rcl
cmp
fcmovne
xor
push
iret
ss
cli
enter
dec
lock
stos
cmp
addl
sbb
adc
lcall
in
sbb
gs
ret
mov
les
daa
mov
sub
popa
bound
jno
pushf
gs
dec
xor
ds
fwait
adc
test
or
jne
pop
pop
pop
lcall
lea
add
sub
sub
les
sbb
and
fucomip
mov
pusha
imul
inc
lcall
addl
jge
sub
dec
jg
mov
push
je
std
aas
shrb
mov
fsubr
pop
mov
xchg
push
je
gs
outsl
orl
push
jne
orb
add
sbb
mov
lock
inc
add
push
jp
jae
add
call
ret
push
mov
jg
sti
mov
pop
fwait
push
mov
cmp
jnp
cmp
sahf
and
adc
and
arpl
adc
or
inc
inc
xchg
mov
or
push
cmp
rorl
gs
add
testb
add
out
sbb
pop
jbe
xchg
jne
dec
add
jmp
lea
lds
lret
cli
movsb
adc
mov
mov
int3
fcomps
sub
sti
cmp
jb
mov
xor
imulb
pop
cli
fs
dec
orb
and
cld
add
cmp
jb
hlt
sub
aas
popa
adc
or
sbb
sub
rcll
sub
lock
loope
and
andl
inc
adc
pop
sub
and
push
inc
out
sbb
mov
std
jmp
in
push
sub
mov
push
lock
push
xorl
mov
xchg
push
repnz
ss
es
int3
or
jmp
mov
ficompl
call
mov
shll
and
lcall
lods
insb
pop
or
ret
andl
loopne
ja
jae
sbb
stos
xor
cmp
mov
dec
xor
xor
pusha
inc
mov
sbb
sub
test
loope
and
test
xchg
je
lea
and
jne
add
pop
ret
mov
add
call
dec
and
loop
or
cld
inc
gs
adc
repnz
lahf
and
mov
loopne
stos
jmp
es
and
and
andb
mov
leave
jne
test
xor
mov
ret
xchg
mov
push
push
lock
into
pop
push
shl
add
out
add
push
fnstenv
outsl
adc
fcomp
flds
push
and
ret
shl
mov
ret
and
in
add
xchg
and
pop
cmp
lea
std
imull
jl
fs
inc
hlt
cwtl
adc
fcomps
js
push
adc
pop
rol
test
pop
mov
in
or
push
push
mov
jecxz
push
adc
or
daa
jmp
inc
xor
js
or
xor
leave
mov
mov
and
and
pop
pop
in
cmp
loop
push
mov
cmp
inc
into
out
lock
daa
mov
fsubs
lea
push
inc
aam
xchg
inc
pop
mov
push
std
mov
dec
push
and
mov
lcall
push
xor
mov
add
adc
testw
je
cmp
sbb
push
int3
jmp
jl
mov
mov
stos
xor
stc
mov
and
mov
repz
sub
ret
add
push
jnp
jmp
cmp
jb
bound
std
je
or
add
push
push
movsb
movsl
sbb
inc
fldenv
adc
sub
mov
xor
jbe
sub
mov
std
test
mov
mov
pop
movsl
push
push
dec
xor
mov
sbb
in
mov
sub
pop
jmp
mov
adc
adc
mov
out
dec
outsb
loopne
xchg
or
xchg
cmp
std
bound
out
fwait
sbb
adc
jne
pop
mov
cmp
dec
sub
dec
loope
jb
inc
push
push
out
pop
dec
pop
inc
cmp
inc
pusha
lods
je
mov
fldenv
in
pop
dec
push
adcl
imul
fcmovnbe
and
mov
xor
jne
cmpl
scas
jg
test
testb
cltd
scas
push
xlat
inc
ja
pop
shrd
adc
adc
divb
push
sub
mov
push
gs
cld
push
xchg
inc
jg
fmuls
mov
stc
lods
adc
adc
out
add
sub
fisubl
bound
out
adc
inc
jmp
add
and
mov
push
adc
sbb
push
cmp
mov
jb
maxps
sub
inc
inc
mov
adc
adc
sbb
sub
mov
and
add
jmp
xor
mov
xchg
imul
movhps
imul
inc
xchg
jo
push
cwtl
or
push
out
mov
mov
loope
punpckldq
adc
fdiv
inc
and
mov
jns
adc
cmpsb
or
dec
std
shrb
int
dec
pusha
sbb
mov
ja
dec
fs
xor
jmp
xchg
xchg
and
push
adc
xor
adc
je
iret
sub
or
inc
or
jmp
mov
jmp
test
adc
fbstp
test
sbb
ljmp
mov
cmp
fsubs
ss
in
push
sub
repz
arpl
pop
jecxz
lods
lock
stos
sub
jns
or
sar
cli
cmp
xchg
and
lods
xchg
inc
inc
add
sub
cmp
jb,pn
int3
inc
sub
xchg
jnp
test
sub
ret
je
mov
push
cmpsb
mov
jg
pop
push
inc
pop
add
insb
iret
xor
int
sub
ljmp
jmp
clc
enter
loopne
or
pushf
adc
or
imul
aaa
xor
or
pop
ret
push
or
xor
add
int
pusha
xchg
and
sbb
inc
adc
out
fld
dec
push
or
popa
adc
enter
jne
cmp
loope
cmpl
or
inc
push
stc
rclb
movsb
or
xor
pop
aaa
call
jle
add
mov
xchg
mov
jge
lcall
mov
sbb
shll
sub
and
lods
adc
sbb
das
adc
fildl
orl
dec
test
adc
add
in
cmp
icebp
adc
fistl
or
push
sbb
decl
sbb
aas
xchg
icebp
lret
adc
sub
jne
call
shr
leave
fcmovnbe
ljmp
hlt
div
mov
push
out
je
enter
out
shll
push
cmp
or
pop
jecxz
pop
jbe
dec
aam
xchg
pop
and
je
adc
outsl
rcll
outsl
dec
sub
jmp
test
and
jl
mov
lret
insb
fs
and
jbe
dec
mov
hlt
push
mov
cmpl
jge
add
adc
xchg
or
push
cmpl
mov
dec
in
sbb
sbb
sbb
sbb
daa
js
adc
and
mov
inc
push
shr
dec
fnstcw
sbb
sbb
sbb
in
test
pop
ljmp
in
mov
sub
pop
pop
cld
jne
and
rclb
jg
ror
jl
or
add
rcrb
jmp
std
mov
mov
js
dec
dec
sti
jo
je
push
xor
pop
cltd
mov
xchg
pop
push
mov
xor
dec
jl
in
mov
mov
jp
sub
hlt
jno
or
dec
fs
aaa
pop
imul
xchg
xlat
or
das
add
out
dec
mov
jne
push
inc
inc
dec
lea
jge
js
cmp
in
cmp
popa
dec
andl
mov
scas
cwtl
mov
dec
loopne
sub
repz
cs
lea
fcoml
dec
adc
cs
cmc
nop
sbb
add
rcrb
fsubrs
les
cmp
jne
enter
out
gs
adc
xlat
inc
gs
push
cmp
addr16
mov
inc
add
leave
fstpl
cwtl
pop
cmp
or
test
adc
xchg
fwait
lret
dec
sub
into
cmp
adc
mov
push
orl
cld
add
mov
daa
xchg
cmpsb
dec
cmp
mov
out
int3
faddl
jp
push
cmp
jo
xor
push
or
push
cmp
push
orb
pop
mov
cmp
push
jne
push
stos
adc
adc
add
dec
clc
pop
clc
adcl
add
les
je
or
mov
je
or
mov
loop
in
or
push
push
mov
and
dec
pop
mov
test
dec
cmp
add
jae
ljmp
push
in
or
cmpsl
repnz
add
imul
add
lahf
pop
clc
mov
sbb
fs
mov
cmp
jg
add
test
dec
inc
xchg
scas
movsl
test
orb
sub
mov
popf
adc
push
loope,pt
inc
push
stos
lds
mov
ja
test
movsl
jbe
daa
testb
je
loope
jmp
mov
andb
je
sbb
enter
mov
popa
int3
nop
or
clc
mov
rcl
js
loopne
inc
addr16
cmp
aaa
dec
push
dec
pop
mov
push
ja
pop
adcl
dec
clc
pop
mov
mov
add
mov
int
call
adc
and
and
and
dec
lret
dec
loopne
enter
rclb
jmp
mov
adc
sbb
xchg
mov
jge
gs
nop
or
dec
mov
mov
dec
dec
out
mov
pop
mov
mov
bswap
testb
mov
add
sbb
scas
add
add
sti
es
dec
fs
sbb
xchg
ret
orb
and
cltd
adc
je
repnz
je
cmp
pop
jge
cmp
add
call
aaa
pop
or
repnz
mov
jmp
mov
clc
das
add
add
rorl
fmul
pop
or
ret
push
adc
lahf
cli
ds
sbb
add
repnz
cs
xchg
loop
dec
adc
scas
cmp
sbb
pop
call
or
pop
mov
sub
cmp
das
mov
nop
xchg
call
fnsave
push
push
push
and
or
fisttpll
sbb
jne
mov
push
clc
fcmovb
jle
xchg
insb
push
sbb
push
pusha
mov
or
dec
pop
dec
and
jmp
dec
loop
dec
push
faddl
sub
xor
aaa
xor
and
cmp
push
pop
clc
sub
fsubr
sbbl
nop
andl
test
jne
rcrl
aas
cmc
jmp
mov
jge
iret
rclb
fnstcw
jmp
int3
xchg
jg
jae
sbb
jge
or
mov
clc
negb
or
push
push
xchg
jmp
testb
cmpsl
cmp
or
aam
in
xor
or
xor
mov
jne
lock
mov
in
push
or
jle
xchg
arpl
or
loopne
gs
push
pop
pop
xchg
sbb
pop
scas
adc
mov
mov
mov
les
dec
or
sar
cwtl
jp
in
inc
std
ret
adc
inc
push
cs
test
pop
imul
mov
mov
sub
ss
lods
in
int
jnp
sbb
test
jb
cmp
shlb
cs
xchg
mov
sub
call
loope
mov
call
loopne
pop
clc
rcll
cmpsb
add
clc
out
repz
adc
test
sbb
push
scas
bnd
ret
mov
or
sbb
in
sbb
subb
gs
enter
clc
xor
pop
lock
mov
sub
sahf
inc
fcomps
insb
inc
int3
dec
add
lods
cs
repnz
lds
pushl
ret
lret
ljmp
pop
and
out
pop
cli
inc
int
int3
sub
xchg
push
and
dec
jmp
and
fstpl
or
add
adc
int
pop
add
inc
push
outsb
and
js
add
jl
dec
add
in
mov
sbb
imul
xor
mov
or
inc
pop
lcall
jl
cmp
js
call
add
dec
lea
cmp
mov
pop
add
jle
pop
or
testb
imul
insl
lret
lds
inc
xor
jb
cmp
ja
add
lock
dec
sub
repnz
jbe
dec
iret
push
inc
pop
cli
xchg
sbbl
push
fs
mov
xchg
jbe
add
dec
ret
jg
daa
rcll
push
ss
xor
xor
test
ret
jno
sub
lea
mov
mov
xor
andb
add
inc
cs
cld
inc
outsl
call
jmp
fs
das
mov
mov
sub
imul
or
sbb
shll
or
and
aaa
dec
push
xchg
add
imul
push
push
and
into
not
ja,pn
data16
push
lea
push
mov
and
jp
ficoms
xchg
clc
and
adc
xchg
pushf
icebp
xor
or
adcb
pop
dec
or
cltd
loope
or
adc
and
dec
int3
xchg
les
mov
and
xchg
and
sbb
or
inc
sub
aad
mov
lea
xchg
sbb
sbb
or
and
xchg
push
xchg
subps
inc
fs
mov
and
dec
xchg
movsl
pop
and
and
mov
mov
fcoml
mov
out
stos
mov
xor
push
add
add
jge
adc
sub
adc
jae
push
call
mov
daa
ljmp
das
jbe
mov
sar
or
dec
jo
mov
sub
mov
mov
bound
dec
ret
notl
push
adc
jne,pt
push
sbb
sbb
lea
mov
call
add
je
add
sub
sar
dec
dec
push
cmpsl
loope
sub
adc
clc
roll
push
je
adc
push
fisubl
jne
and
cwtl
negb
mov
insb
subb
jecxz
or
jno
mov
testl
mov
add
je
sbbl
out
mov
pusha
cmp
je
rdmsr
pop
sub
cli
pop
sbb
mov
lock
mov
loope
sbb
fcomp
rcr
mov
jae
inc
cmc
xchg
lds
loopne
ficoms
push
sub
std
je
mov
das
jmp
lods
leave
or
xchg
filds
sbb
decl
sub
orl
cmpsb
mov
movsb
call
push
lods
or
inc
pop
pop
xchg
aam
pshufw
push
jle
popa
adc
and
xchg
add
push
and
cmp
xor
mov
bsr
and
sbb
mov
inc
stos
lahf
sub
xor
cld
cmp
jb
repnz
mov
bound
push
inc
inc
add
sub
xchg
and
sub
mov
cmp
adc
inc
sbb
test
pop
sub
jnp
mov
sub
jae
pop
pop
and
jmp
das
xor
xchg
sub
lret
sbb
popf
mov
je
daa
push
nop
leave
aam
add
jecxz
rcr
pop
inc
idivl
repnz
push
push
pop
lret
sar
rcll
pusha
cmp
or
leave
cmp
xchg
daa
dec
adc
rorl
leave
bound
adcl
or
roll
cmc
add
pop
and
fwait
sbb
adc
push
jl
mov
pop
or
sbb
es
push
pop
and
inc
cmp
adc
or
inc
test
xlat
add
sbb
mov
inc
std
cmc
push
xor
mov
jmp
or
jbe
imul
insl
ljmp
cmp
cmp
xchg
fisttps
gs
xor
mov
not
lock
decl
xor
sbb
lret
call
in
adc
scas
jp
and
sbb
mov
leave
mull
shlb
xor
or
and
test
push
scas
in
rclb
lea
dec
xor
fsin
pushf
jae
push
shl
push
xchg
test
mov
cmp
pushf
jno
mov
and
adc
jg
iret
call
add
jge
pop
lods
jg
enter
push
ret
aas
cmpl
jns
pop
pop
cmp
xchg
adc
arpl
xor
outsl
and
dec
push
inc
and
pop
mov
orb
repz
jmp
sahf
push
sbb
xchg
xor
add
mov
in
mov
push
test
cld
add
test
and
cli
je
adc
mov
pusha
rclb
xchg
pop
callw
and
pop
dec
push
or
push
je
xchg
clc
in
push
lds
jbe
add
adc
push
aam
dec
and
sti
mov
enter
clc
pop
push
loope
mov
and
jg
xor
mov
je
push
add
add
dec
push
cmp
mov
pop
pop
test
push
das
test
or
lahf
cmp
xchg
push
cmp
dec
push
dec
cli
fsubrl
mov
movsb
pop
or
mov
inc
test
mov
test
or
push
mov
mov
orl
mov
cmp
jl
sti
and
or
push
jbe
pop
mov
loopne
adc
movsb
pop
or
add
roll
lock
sysenter
xchg
inc
mov
sbb
push
fadds
loopne
in
cld
push
fsubr
js
lds
cmp
add
sub
dec
jecxz
adc
aas
je
adc
jmp
sub
add
push
xor
sub
sti
sub
pop
test
in
push
nop
sahf
adc
adc
shl
icebp
std
jmp
das
mov
mov
add
jmp
jmp
push
add
mov
lock
add
lret
push
adc
or
je
or
and
mov
sbb
ud1
mov
inc
and
jne
ljmp
inc
ja
mov
inc
xor
test
test
push
sbb
outsl
shll
adc
imul
das
jmp
clc
addr16
sbb
fisubrs
push
gs
cmp
and
dec
loop
js
pop
call
test
insb
and
add
les
xor
jne
rcll
mov
pushf
in
and
pop
mov
inc
add
out
sub
mov
push
outsl
dec
add
lods
enter
test
inc
aam
jp
enter
inc
dec
jmp
pop
inc
add
ret
and
pop
mov
sbb
jecxz
test
ds
mov
shl
pop
mov
inc
xchg
adc
cli
pop
mov
xchg
hlt
cld
mov
xor
jmp
aas
pop
je
or
push
lds
cli
mov
or
or
pop
mov
lahf
rorl
dec
xor
jmp
add
rdpmc
mov
loopne
sub
filds
mov
mov
jmp
lret
cmp
mov
pushf
push
clc
xor
adc
jbe
int
jnp
fsubrs
sbb
mov
xchg
inc
lock
mov
and
xchg
or
adc
out
dec
js
mov
outsl
nop
xchg
pop
pop
or
test
pop
pop
adc
dec
push
sub
lods
sub
test
or
and
pop
scas
push
push
mov
dec
gs
adc
lds
xor
sub
leave
insl
add
aam
adc
cmp
lcall
mov
cmp
jbe
lds
popl
lock
ds
pop
push
dec
xor
pop
mov
xor
idivl
iret
add
and
cmp
and
and
lcall
inc
mov
jmp
ficoml
push
mov
add
inc
jnp
stos
push
pusha
je
test
pop
jmp
push
je,pt
or
mov
mov
and
stc
in
repnz
and
sub
cmpsl
cmp
push
lahf
or
push
rcrb
je
sbb
jg
pop
jl
cmp
adc
pop
ja
fisubrl
push
cli
jmp
sbb
or
pop
jne
and
adc
sarb
lock
testl
jne
dec
in
sub
pop
mov
lds
out
pusha
and
cltd
push
push
xor
ss
call
ds
inc
xorl
xor
rcrb
call
cmp
jle
les
int
clc
or
sbb
jmp
mov
andb
mov
cmpb
xor
nop
or
dec
inc
and
xor
xor
push
cltd
fcoms
scas
mov
mov
pop
cld
test
sbb
ret
sub
or
add
xchg
lahf
inc
add
xchg
loopne
sub
cltd
push
hlt
xor
jns
test
push
push
call
lea
ljmp
xor
push
pop
lcall
xor
jo
xchg
or
push
jle
dec
sarb
call
xchg
enter
or
pusha
stos
xor
and
cwtl
enter
mov
dec
fmull
shr
adc
cmp
call
adc
jno
ss
xchg
cli
insl
adc
adc
cmp
xchg
mov
mov
fwait
enter
hlt
xor
and
and
push
add
decl
js
hlt
adc
ret
mov
dec
xor
or
ret
imull
lahf
adc
add
ret
fisttps
in
stos
jle
insb
bound
test
adc
lods
out
aaa
pop
ss
pop
and
sub
imul
jnp
sbb
adc
and
push
inc
fildll
std
push
jne
and
ss
outsl
inc
loop
lahf
in
and
test
push
xor
inc
fs
cld
sbb
pushf
or
add
andb
shrl
and
push
clc
popa
xor
loope
sbbb
add
push
mov
inc
outsb
or
rorb
dec
lock
cld
pop
push
mov
adc
mov
add
push
das
fmull
adcb
mov
or
dec
jmp
dec
ljmp
pop
and
loopne
hlt
pusha
xchg
repz
push
rorb
roll
rorl
push
popf
and
popa
dec
pop
jnp
std
inc
inc
loope
hlt
jmp
mov
push
dec
jg
je
push
dec
sub
cs
inc
lcall
dec
sbb
dec
jmp
cmpb
ss
or
xor
je
repnz
jl
push
push
mov
jmp
inc
repnz
or
ja
xor
jns
push
mov
inc
loopne
jge
jmp
mov
insl
dec
adc
pop
mov
xor
add
cmpsb
ljmp
sbb
je
pop
inc
in
sti
inc
incl
in
add
or
int3
outsb
add
je
adc
adc
jnp
bsr
test
mov
jmp
xchg
cmc
jle
push
jbe
xchg
scas
in
mov
or
test
outsl
xchg
pop
pop
in
sub
add
sub
inc
fs
clc
add
sub
jle
or
in
test
fwait
and
mov
sbb
fs
pop
cwtl
in
mov
jle
test
jb
insb
jp
sub
and
mov
movsb
push
xor
push
inc
sub
into
xchg
cli
fmuls
lods
pop
or
loopne
xchg
jmp
pop
xor
jle
cmp
or
call
pop
and
fmull
cwtl
adc
sub
inc
pop
inc
jo
mov
mov
sub
pop
pop
and
xchg
mov
sub
inc
outsb
out
mov
and
call
arpl
shlb
test
jbe
movb
aaa
lret
xor
sub
xchg
inc
bound
push
mov
sub
lods
xchg
cvtps2pi
sahf
xor
insb
cmpsl
faddl
mov
inc
cwtl
xor
mov
testb
mov
push
int3
ljmp
pop
push
je
enter
aam
ret
sub
sub
push
jne
pushl
mov
cmpsb
ljmp
or
mov
andl
mov
repz
outsl
xor
xchg
mov
ret
sub
adc
shlb
dec
cmp
cmpsl
cli
inc
aas
xor
lods
mov
add
les
rcrl
bound
mov
inc
cmpb
pushf
dec
cmpsl
and
lea
jne
sbb
xor
pop
in
push
or
inc
mov
jmp
jno
push
sti
xor
leave
xchg
inc
dec
pop
sbb
cmp
adc
sub
inc
cmp
pop
sub
push
das
test
mov
add
pop
jmp
or
push
jmp
xchg
adc
rclb
call
pushf
lods
mov
mov
sbb
pop
test
mov
and
int
sub
mov
jne
mov
popf
dec
xor
aad
mov
ss
inc
cmp
jae
ret
shr
or
jp
shlb
and
sbb
push
lock
repnz
mov
inc
ret
pop
mov
add
ret
pop
inc
dec
jne
xor
inc
enter
mov
pop
lock
shr
inc
cltd
add
test
and
shr
cs
loope
push
cmp
push
xor
mov
sbb
pop
je
or
enter
pop
cwtl
sub
pop
call
xor
add
dec
or
test
je
inc
iret
xor
or
and
mov
enter
loopne
mov
sbb
fnstsw
cs
lret
dec
pop
fisttps
ret
jns
dec
cs
lods
push
scas
and
les
mov
sahf
aam
es
jb
rclb
or
mov
cmp
gs
or
push
jb
xchg
aam
cmp
pusha
sbb
adc
mov
lret
jb
dec
orb
sbb
out
cmpsb
cmp
dec
jb
add
leave
jmp
jne,pt
xchg
xchg
push
jle
inc
push
mov
or
push
push
mov
push
fadd
pop
call
mov
loope
add
lret
push
ss
and
add
pop
test
outsl
jne
add
push
add
xor
push
jmp
pushl
push
psubusb
inc
fnstcw
test
lea
cltd
add
sub
in
ss
jmp
push
cmp
in
jmp
out
fwait
roll
ret
js
jne
sbb
les
adc
inc
mov
je
or
cmp
and
fnstenv
or
jmp
lea
mov
dec
mov
je
push
insb
clc
call
xchg
in
fiaddl
js
pop
inc
add
pop
js
add
filds
pop
int3
into
into
adc
jne
xor
rorb
push
or
dec
adc
push
add
ds
cmp
scas
data16
ja
pop
or
pop
repnz
ljmpw
bound
inc
leave
cmp
sar
xchg
or
test
mov
sbb
loope
sub
push
enter
lahf
mov
push
shl
mov
out
cltd
enter
imull
inc
in
mov
push
negb
pop
rolb
and
sub
es
jge
test
pop
jae
jl
adc
mov
cmpb
push
jle
push
sbb
inc
sub
adc
adc
inc
xchg
clc
icebp
and
xor
out
pop
fsubr
adc
lods
push
sbb
dec
iret
js
stos
or
rol
call
mov
paddusw
scas
or
ja
and
mov
loopne
dec
mov
jne
cmp
pop
pop
xlat
popf
adcb
pop
mov
aaa
add
push
jbe
push
xor
mov
inc
jmp
dec
pop
mov
outsl
inc
icebp
pusha
pop
std
and
out
pop
mov
lea
xlat
sbb
push
pop
mov
call
incl
test
or
inc
aam
leave
cli
mov
cmpsl
dec
out
dec
ja
pop
sub
dec
lock
or
arpl
sbb
lods
out
add
adc
lea
jne
add
int
adc
pop
jg
lock
adc
xchg
iret
push
or
ficompl
or
push
cmpb
mov
cli
pop
int3
adc
es
shlb
or
adc
mov
je
cmp
and
or
inc
or
nop
and
add
andb
adcl
cmp
gs
or
xchg
inc
inc
dec
test
dec
mov
adc
cmp
cmp
daa
addl
jl
out
lea
out
test
cmp
add
je
nop
subl
mov
mov
leave
xor
setbe
pop
cmp
inc
sbb
inc
daa
ds
jp
or
clc
push
xor
cmp
dec
lods
fisttpl
cmpb
bound
jmp
dec
inc
adc
sbb
jmp
pop
dec
pop
jge
mov
sub
and
int3
out
and
enter
sti
jbe
adc
and
sub
push
dec
or
cmp
and
xor
dec
xor
movups
mov
inc
sbb
and
push
cmp
std
mov
ljmp
inc
call
or
xor
aam
popa
add
sbb
jne
dec
cltd
xor
out
pop
test
jmp
cmp
sub
sub
xor
push
idivb
cmp
jle
sarl
push
mov
shll
or
in
xor
adc
cwtd
movsb
jns
sbb
and
sbb
inc
add
pop
cmpsb
or
sbb
jl
cmp
sub
pop
mov
les
mov
or
test
adc
mov
call
fistps
cmc
in
pusha
mov
mov
lods
ret
xor
dec
or
push
cmp
adc
aad
fcmovbe
mov
mov
mov
or
loope
or
pop
push
lock
fsubr
jb
jle
adc
icebp
outsl
dec
sbb
in
add
mov
push
xchg
ds
cltd
push
or
push
les
popf
out
jmp
adc
fstpt
rorb
popa
je
mov
test
adc
add
mov
dec
popa
into
sti
mov
daa
adc
enter
inc
mov
mov
cmp
std
stc
mov
jg
ja
cmp
sub
ss
ret
fmuls
lcall
adc
pusha
inc
or
sub
mov
inc
mov
xlat
inc
jne
mov
and
nop
sbb
pop
aaa
cld
and
adc
cmpb
pop
or
jmp
call
adc
sub
jne
inc
adc
ds
or
jmp
clc
stos
cs
xor
and
jmp
adc
into
test
das
dec
ja
pop
xor
sbb
sbb
lock
inc
adc
jecxz
mov
and
sbb
xor
cmp
xor
or
aas
push
sbb
dec
jno
mov
cmp
jnp
aad
jle
mov
int
adc
dec
push
sub
ret
in
jmp
mov
push
and
clc
push
rcrl
ror
mov
xor
add
cmp
je
jecxz
mov
test
mov
in
out
clc
fldz
cs
or
sub
dec
enter
icebp
data16
and
or
repz
test
sarb
xor
das
pop
je
cmp
dec
icebp
pushl
push
xchg
xor
jne
or
inc
mov
xor
cli
adc
stos
stos
repnz
jbe
out
adc
test
out
mov
dec
xchg
sbb
or
pop
in
xchg
mov
out
dec
push
popa
xchg
lea
xor
stos
hlt
sahf
loope
test
inc
xchg
lret
je
mov
add
push
cli
mov
es
mov
xchg
call
inc
sbb
jbe
repz
add
ret
mov
jb
stos
inc
rolb
push
mov
dec
cltd
mov
hlt
jns
cld
and
mov
cmpl
jo
stos
and
mov
or
cmp
sbb
and
jmp
sti
orb
dec
cwtl
stos
add
or
lds
imul
and
inc
push
cwtl
stc
repnz
and
std
adc
mov
sbb
pop
movsb
movsb
adc
mull
les
ret
or
pop
fadd
mov
adc
mov
and
insl
pop
mov
stos
mov
sbb
inc
les
cmpsb
das
adc
lcall
call
gs
and
fiaddl
add
push
hlt
mov
lret
or
test
push
lea
daa
mov
rolb
shll
jg
push
mov
and
scas
mov
test
inc
loop
out
shrb
pop
pop
push
call
test
test
push
aam
stos
icebp
stc
das
stos
je
dec
push
push
pop
out
push
xor
cltd
and
or
sub
mov
lret
jecxz
jae
add
push
sti
add
pop
gs
nop
inc
mov
sbb
add
je
adc
cwtl
mov
mov
cmp
dec
daa
push
dec
mov
stc
sbb
dec
vprotw
xchg
dec
xor
xor
adc
or
push
mov
cmp
xchg
jmp
dec
cwtl
xchg
mov
push
movsl
dec
mov
call
std
push
inc
xor
cmp
ja
mov
jne
lea
addl
xlat
mov
adc
dec
push
cmp
add
in
testb
je
inc
jmp
xor
push
scas
es
and
adc
orl
sbb
pusha
add
dec
test
pop
bound
ljmp
pop
and
push
cmp
mov
pop
pusha
mov
testb
cmp
dec
inc
add
mov
mov
push
jbe
out
jl
sbb
adc
jb
sbb
and
in
and
int3
push
xor
inc
imul
push
mov
popf
mov
mov
popa
jl
cmpl
icebp
inc
cmp
push
in
movsb
inc
xor
jle
and
adc
das
pushf
mov
movsb
sbb
pop
into
fs
jbe
insl
mov
or
std
add
push
xchg
inc
mov
test
ds
sbb
les
add
sbb
push
cmp
jne
mov
sbb
cmp
repnz
sub
clc
sbb
or
aad
add
rclb
jle
inc
cwtl
mov
adc
push
pop
xchg
and
sti
mov
inc
jb
dec
and
or
push
mov
ss
std
and
pop
jne
push
leave
roll
jne,pt
xchg
pop
or
jb
movsb
sub
testl
insl
mov
mov
adc
cld
xchg
xadd
mov
aam
pop
arpl
or
adc
mov
xchg
xchg
nop
mov
orb
or
adc
fsubrs
jl
cmp
pop
mov
push
jns
out
xchg
scas
imul
mov
scas
xor
fadd
incb
jns
shr
lock
imul
mov
push
xchg
xchg
mov
mov
aas
out
xor
aas
out
hlt
xchg
push
cld
aas
or
jmp
pop
or
jle
push
cli
add
addl
pop
mov
cmp
and
sub
add
jmp
dec
add
testl
decb
jne
stos
sbb
xchg
jmp
and
lds
push
xchg
or
cld
add
or
jecxz
add
xchg
hlt
mov
cs
or
mov
xchg
xor
or
ja
ret
xchg
xchg
hlt
mov
in
xchg
jne
and
ss
add
cmp
jbe
mov
mov
sub
inc
mov
cmp
and
arpl
mov
sti
adc
ror
out
not
sub
je
add
and
dec
push
loopne
adc
inc
mov
lcall
sahf
pusha
incl
and
jne
cmp
mov
int3
stos
insb
adc
adc
push
fistpl
out
int3
or
push
jne
pusha
mov
stos
push
push
mov
stos
sbb
sbb
cwtl
test
xchg
orb
pusha
mov
or
sbb
push
inc
scas
std
sbb
sub
adc
and
mov
sahf
ljmp
mov
inc
xor
jecxz
or
and
dec
mov
cmpsb
cmp
or
lods
xor
roll
lsl
cmpsb
jo
mov
push
call
xchg
and
xor
push
or
cmp
andl
decb
inc
or
cmpb
cli
mov
pusha
add
adc
js
sbb
jo
or
adc
loope
negb
filds
loopne
ret
enter
add
dec
mov
push
push
call
scas
aaa
and
add
dec
insl
or
lea
xor
inc
mov
push
ljmp
xor
pop
and
xorb
loope
mov
xadd
add
pop
pop
and
sti
mov
or
movsl
shlb
xchg
mov
call
mov
fbstp
cwtl
or
sbb
mov
decb
iret
jge
push
arpl
xor
pop
adc
mov
cmc
fmuls
daa
adc
out
xor
pop
dec
jae
clc
jnp
lcall
mov
or
adc
call
test
ret
cmp
sti
fidivl
pop
pop
mov
inc
subb
jp
insl
sub
sub
cli
enter
pop
rorb
out
inc
movsl
mov
aaa
imul
add
fidivrs
or
cs
xchg
lret
cs
cmp
add
or
je
fmuls
cwtl
cs
popa
cli
rorl
mov
jne
xor
and
jl
roll
loope
jmp
mov
push
stc
mov
sub
rcrl
cmpsl
dec
addl
lret
enter
or
and
add
call
mov
adc
jge
std
cmp
push
call
mov
push
pcmpeqw
pop
jp
in
and
or
lret
cmp
xor
push
outsl
cltd
and
mov
push
jnp
xchg
push
cltd
push
mov
in
xor
in
mov
mov
shlb
gs
sbb
or
jb
fs
add
and
jge
popa
ret
filds
mov
out
or
scas
or
scas
jmp
xchg
sub
or
mov
jnp
pop
sub
mov
clc
jg
mov
lret
cld
sub
out
ja
roll
add
xor
xchg
mov
lea
fcomps
cmp
adc
pop
push
jo
and
add
or
or
add
jne
loopne
mov
jo
scas
adc
and
cmp
dec
je
dec
xor
mov
or
les
mov
les
xor
mov
mov
mov
repnz
xchg
mov
test
mov
movsb
sbb
or
jp
pop
push
cli
movsl
mov
xor
mov
jle
mov
lods
arpl
out
dec
dec
loope
jmp
stos
push
adc
ret
inc
push
loopne
dec
ret
xchg
imul
stc
xor
inc
or
inc
pushf
shlb
xchg
out
fnstsw
or
and
adc
xchg
and
or
cli
ja
cmpsb
inc
lock
dec
repz
mov
maxps
mov
inc
f2xm1
adc
sarb
sub
adcl
adc
test
test
outsb
pop
dec
je
adc
lcall
jne
xchg
in
mov
xor
rorl
je
mov
jne
or
mov
not
and
retw
mov
std
push
adc
lea
lock
lea
jo
sub
ljmp
jne
dec
cld
dec
cmp
pop
sub
pop
cmp
push
sbb
jle
mov
add
mov
popl
and
aas
mov
pop
adc
mov
cmp
dec
ret
jae
lds
lea
repnz
mov
pushf
nop
sahf
cmc
cmp
cmpsl
mov
or
jg
gs
xor
sub
add
pushf
data16
pop
mov
sub
incl
int
xor
loop
sti
adc
hlt
nop
sbb
inc
int3
pop
stos
inc
insl
adc
jno
mov
or
cwtl
cmp
jne
mov
inc
pop
decl
andl
sbb
pusha
iretw
jmp
test
sub
mov
mov
push
pop
or
test
inc
ret
les
jg
inc
and
adc
jmp
inc
inc
sysenter
lea
or
mov
movsb
dec
outsb
pop
pop
xor
jmp
dec
fcomps
bound
mov
jne
cltd
add
cmp
jne
test
mov
jp
push
sub
dec
xchg
push
cmp
out
jp
ja
jno
xor
push
popl
out
mov
out
inc
jnp
xorl
jno
imul
pushf
scas
dec
sbb
scas
pop
jecxz
or
sbb
inc
into
and
sub
pop
add
jns
bound
dec
jmp
add
sbb
stos
div
or
pop
call
ss
jmp
push
sarb
test
inc
sub
mov
adc
mov
iret
aad
sub
sbb
push
push
shll
add
cmp
jne
mov
adc
or
xor
mov
mov
cmp
mov
sub
insb
cwtl
xchg
xor
ljmp
inc
dec
add
mov
sub
std
orl
ror
inc
mov
xor
xchg
cmp
jl
std
enter
mov
add
cmp
push
jae
orb
and
add
sbb
fmull
mov
call
lods
dec
je
daa
hlt
test
les
xor
xor
jmp
shll
and
push
xchg
mov
cmpsb
add
cmp
or
or
fldl
sub
pushf
sub
mov
lock
fsubrl
cmp
add
dec
jp
lods
test
add
or
fs
add
xchg
cmp
out
aas
mov
sub
test
jge
jb
dec
push
jb
jbe
je
gs
cli
test
add
and
out
or
push
inc
cli
xor
xchg
or
push
call
xor
movsl
je
xchg
jns
sbb
mov
xchg
testb
lret
adc
jbe
or
inc
testl
jmp
or
push
mov
xchg
add
cmp
jb
outsb
inc
mov
stos
or
and
sub
push
das
mov
into
inc
jno
mov
leave
or
mov
pop
stc
or
cs
pusha
xor
add
adc
adc
movl
sub
add
push
pop
and
or
pop
call
arpl
sub
or
push
and
fstpt
add
stc
sub
add
cmp
lret
jl
sbb
pop
add
adc
mov
sbb
or
push
movl
jb
mov
dec
test
jle
es
xor
xor
inc
fdivrs
dec
adc
sti
inc
outsb
call
xor
mov
clc
jb
and
in
mov
adc
mov
push
push
jmp
rcll
push
daa
or
fcomps
fisubs
xlat
mov
dec
jg
cltd
inc
cmp
testl
out
ja
xor
adc
iret
xor
xchg
jmp
mov
test
add
push
push
push
mov
jne
jne
lock
xor
add
push
cld
inc
test
or
ret
mov
hlt
sbb
mov
cltd
xchg
inc
pushf
adc
inc
dec
popf
mov
mov
cmp
movsb
aaa
adc
enter
cmp
add
sbb
rorb
inc
or
sarl
add
mov
jmp
jb
pop
sti
xchg
jo
sub
push
js
sbb
fcmovu
and
rcr
push
nop
and
sub
push
sbb
add
int3
daa
sub
rolb
add
add
sbb
lea
dec
add
pop
and
and
adc
mov
sbb
pop
pop
inc
mov
call
pop
add
mov
and
cmp
jae
mov
test
sub
xor
pop
pop
mov
in
add
sbb
mull
popa
clc
sub
jle
mov
xchg
cmp
mov
cltd
out
or
jmp
mov
cltd
jne
mov
divl
int
push
push
and
jne
cmp
and
sbb
shlb
mov
or
mov
and
jmp
daa
ret
sub
inc
imul
scas
sarb
lock
jo
xor
adc
shll
push
mov
wbinvd
lock
mov
inc
in
mov
mov
add
clc
or
rclb
jbe
xor
pop
enter
paddq
loope
sbb
sub
roll
xor
mov
jb
shll
push
jae
jne
mov
aaa
hlt
sbb
inc
insb
mov
mov
in
shlb
sub
inc
daa
cmpsb
sub
jae
adc
mov
cmp
loopne
inc
xorb
pop
cwtl
inc
push
inc
stos
and
add
sub
call
jle
inc
movswl
dec
sar
adc
mov
sbb
bound
sbb
add
and
pop
pop
add
sbb
pop
lahf
lret
mov
mov
mov
mov
pop
out
ret
push
iret
je
or
or
in
inc
mov
push
les
sub
les
lea
cmpsb
scas
add
inc
xor
mov
cwtl
inc
xor
jne
xchg
and
push
jge
rcr
stos
sub
mov
or
inc
jno
insl
sub
pop
xor
xchg
rcrb
movsb
mov
adc
hlt
cmp
add
xor
je
sub
lahf
xchg
or
or
and
mov
fidivl
lret
mov
lret
stos
xor
outsl
aaa
out
orl
bound
lds
push
inc
jo
xchg
sbb
adc
jmp
pop
movb
inc
mov
jae
int3
rcrb
leave
lret
push
adc
je
pop
pop
xchg
dec
icebp
test
mov
inc
mov
sub
leave
or
icebp
adc
mov
jmp
pushf
in
in
sbb
sbb
push
xchg
push
and
in
jmp
pop
xchg
je
or
test
in
add
out
loop
dec
mov
rcl
aam
or
or
jns
pushf
rcll
push
add
lds
lock
add
and
jp
adc
lcall
test
mov
enter
jbe
sbb
les
sub
lcall
test
adc
movb
inc
mov
mov
jo
xchg
subb
lret
pushf
arpl
mov
dec
cmp
icebp
es
push
and
jns
jl
je
inc
out
push
inc
dec
jl
or
hlt
adc
mov
test
je
imul
adc
push
dec
and
mov
sub
jmp
arpl
fcoml
in
adc
inc
or
rolb
cmpsl
dec
sub
cld
dec
lods
pop
imul
dec
pop
daa
int
gs
inc
sbb
mov
or
add
inc
addr16
outsl
in
and
out
movsl
jo
dec
push
or
out
aas
fdivl
dec
push
insl
sbb
call
sbb
mov
jbe
mov
mov
inc
pop
dec
pop
or
mov
cmp
ret
jmp
shlb
jne
push
xchg
gs
sub
out
xor
incb
gs
mov
pop
lahf
pop
nop
push
jne
lods
mov
push
sbbb
scas
jg
rorl
leave
daa
jne
fwait
stos
cli
adc
xchg
or
push
cmp
cmp
cli
sub
gs
inc
mov
or
mov
mov
adc
and
push
testb
adc
adc
fdivl
mov
stos
mov
inc
inc
lds
data16
mov
cld
push
adc
and
movsl
sbb
inc
xor
cmpb
daa
xchg
add
mov
leave
xor
setg
rcll
cmp
cwtl
ret
dec
out
int3
xor
orb
out
das
cli
push
mov
insb
pop
push
sub
inc
mov
xchg
or
inc
jb
add
lretw
in
mov
loop
xor
testl
or
cwtl
add
push
jo
pop
loop
cmp
enter
and
sbb
std
mov
es
push
cmc
or
inc
daa
jns
add
dec
jns
neg
xchg
sub
jl
das
sbb
idiv
inc
mov
das
or
push
lods
das
push
add
mov
push
and
push
or
ret
mov
or
int
and
dec
xor
subl
xchg
xchg
adc
or
and
mov
cltd
adc
imul
dec
or
lds
mov
sub
std
mov
cmp
inc
js
lea
dec
aad
aam
or
jge
sbbl
or
add
clc
and
jbe
icebp
mov
pop
pusha
roll
mov
sub
fsubrp
push
or
pop
jl
xchg
push
and
out
push
xor
movsl
mov
jmp
add
test
mov
testb
call
push
jmp
mov
addb
xchg
sub
cmp
setl
mov
push
cmp
test
sub
and
jge
movsl
lret
pop
inc
js
cmp
and
push
loop
das
inc
stc
mov
adc
adc
xchg
repz
or
add
mov
out
push
add
or
out
das
loop
dec
xchg
and
jae
push
jge
or
xor
data16
adc
pop
mov
sbb
mov
sbb
adc
vpaddb
sub
and
xchg
sbb
cmp
inc
push
cli
add
push
inc
mov
imulb
xor
jno
mov
or
inc
cmp
lahf
fdivr
adc
sbb
cmp
fsubrs
aad
sub
mov
stc
mov
adc
sub
inc
or
or
sub
aaa
xchg
sbb
mov
adc
jne
lods
not
xchg
nop
arpl
clc
and
test
mov
sbb
inc
jecxz
sbb
sbb
test
pop
out
add
add
add
jle
mov
jno
and
push
pop
rcrb
jmp
dec
or
ficoms
roll
adc
push
fwait
jp
call
dec
and
cli
and
push
xor
and
or
dec
fcomip
jle
xchg
es
jg
dec
and
call
fisttps
addl
jmp
in
decl
mov
jb
mov
mov
bound
mov
dec
mov
adc
adc
testl
add
inc
cltd
jle
repnz
cmp
fstpt
stos
and
mov
enter
mov
ret
mov
xor
inc
aam
cltd
mov
or
mov
lret
push
nop
add
inc
lea
mov
out
rcl
xchg
jno
inc
adc
jmp
mov
scas
or
andl
sbb
mov
add
dec
add
fimull
dec
in
fcomp
jl
fldenv
jns
adc
enter
scas
jno
fs
xor
bound
sub
jecxz
test
jmp
push
dec
test
and
bound
mov
mov
out
or
pop
xchg
ret
or
popf
loopne
jle
or
mov
lea
imul
stc
jg
mov
roll
mov
push
ret
sbb
or
inc
push
lcall
leave
cmp
icebp
sbb
or
dec
cmpb
add
cmc
add
lea
jl
dec
es
stos
jnp
cs
inc
loope
pop
cs
aad
mov
and
cli
rcll
cmp
inc
inc
xchg
fldl
or
add
seta
rorl
std
pop
jae
loope
bound
mov
mov
call
inc
xchg
mov
xchg
cli
sbb
call
sub
fisubs
andb
push
xlat
data16
dec
and
xor
test
sbb
or
add
aad
mov
sub
adc
les
add
lret
jno
cltd
test
sbb
push
add
sub
dec
adc
mov
push
or
repnz
cltd
shll
scas
mov
or
add
in
adc
xchg
add
lret
adc
xchg
outsb
dec
nop
mov
adc
mov
fwait
dec
movq
xor
not
add
lret
and
shl
sub
or
andl
divl
int
movhps
xor
sti
popl
iret
add
adc
pop
sub
or
orl
test
lods
or
out
mov
add
inc
sti
push
aam
dec
jle
and
mov
mov
shll
cs
out
pop
repnz
repnz
lods
or
call
adc
mov
fmul
mov
or
pop
lret
clc
pop
inc
inc
lock
test
jl
add
test
and
jmp
out
ror
add
or
addb
dec
adc
hlt
stc
jno
dec
adc
cmp
pop
test
mov
or
pop
jecxz
hlt
out
sbb
test
push
sbb
inc
adc
push
add
call
jne
push
pushl
stos
adc
and
inc
pushf
test
adc
ret
inc
add
testl
sbb
repz
and
sbb
call
pusha
jne
orb
or
sbb
mov
in
mov
xchg
sub
adc
daa
add
cli
add
imul
loope
test
push
xor
sbb
jmp
dec
and
dec
or
pop
cmp
inc
repz
pop
cli
mov
dec
cmp
out
adc
mov
pop
je
test
stos
fxrstor
dec
add
sub
jmp
lods
or
testb
call
sti
jmp
jecxz
imul
cwtl
push
push
dec
and
pop
and
and
mov
push
adc
sbb
cmp
test
fldl
shl
add
nop
ja
fldpi
hlt
pop
hlt
mov
out
push
outsb
and
xor
push
and
nop
inc
mov
mov
jo
push
fimull
jmp
add
test
xor
xchg
xchg
lret
ret
lock
movsb
xor
mov
mov
call
mov
or
dec
lea
std
fists
stc
into
mov
jge
or
mov
jmp
push
inc
mov
cmp
in
jo
rorb
imul
mov
mov
shrl
mov
mull
cmpl
sub
jne
jecxz
xchg
push
adc
pusha
pop
mov
push
push
sbb
add
dec
mov
aam
mov
or
and
movsl
pop
pop
out
add
js
pop
test
call
sbb
je
sub
mov
push
in
pop
adc
aaa
cwtl
lock
xchg
or
sbb
push
in
and
pop
cld
sbb
data16
sub
push
pop
lcall
aaa
cmp
call
mov
data16
in
jg
loope
adc
mov
mov
push
pop
fdivs
leave
mov
das
push
or
jbe
cmp
in
mov
xchg
cmp
mov
add
adc
js
std
adc
sbb
int3
adc
dec
pop
sub
rcrl
or
cld
fstpl
fidivs
gs
xor
adcl
and
movsb
xchg
test
mov
cmpb
jg
jne
cmp
or
xlat
cmp
adc
mov
mov
enter
lods
daa
in
sbb
movsb
stc
mov
testl
mov
movsl
pop
pusha
lahf
add
dec
pop
fisttpll
pop
dec
sub
push
sub
and
imul
enter
or
in
leave
dec
xchg
outsl
jae
jae
divb
pop
adc
shll
les
or
push
add
out
mov
push
out
scas
adc
mov
testb
daa
push
inc
loopne
mov
cld
add
push
and
lock
sbb
fwait
cli
jge
cmp
push
xor
fnclex
dec
cmovle
mull
cld
enter
xchg
imul
insl
out
inc
inc
jno
mov
mov
or
sub
pop
repnz
jb
jbe
mov
sbbl
pushf
adc
inc
imul
fdivp
fcom
sbb
adc
push
dec
rorb
add
inc
jno
xchg
jo
xchg
mov
lret
ss
xchg
bound
inc
dec
imul
daa
call
jmp
push
ds
push
cmpl
lahf
jo
and
adc
dec
lock
sbb
and
xlat
test
pop
inc
push
out
je
and
pop
sbb
adc
or
movsb
and
inc
sbb
cmp
pop
inc
or
and
pop
sbb
inc
add
stos
and
mov
push
mov
xchg
jle
je
push
jbe
adc
push
push
mov
jl
push
scas
sarl
sbb
rcl
adc
popa
into
loope
in
outsl
fnstcw
add
cmp
je
fcmovnu
adc
push
inc
enter
pop
movsb
loop
dec
cld
mov
addr16
xchg
mov
cmp
jp
xor
jg
hlt
jnp
ljmp
cmpsl
mov
sbb
dec
xchg
inc
rorl
adc
jle
adc
daa
aaa
xchg
sbb
jnp
adc
decb
xchg
movl
push
hlt
ja
shl
jo
ret
mov
clc
loop
or
iret
lcall
sub
adc
imul
call
jecxz
inc
adc
push
lock
lods
cmpsl
or
aad
adc
std
je
bound
test
fs
pop
stos
xchg
jl
jae
popf
imul
sub
arpl
jae
jl,pt
xor
jl
idiv
cmpsb
pop
dec
adc
add
push
push
cmpb
jg
xchg
or
lock
push
push
outsl
test
add
and
adc
dec
test
mov
sub
dec
cmpb
push
jmp
fs
add
in
cmp
add
stc
xchg
popa
pmullw
cmpsl
dec
cli
dec
pushf
or
or
xor
pop
pop
mov
fnstcw
xchg
or
mov
jae
in
in
pop
int
scas
je
xchg
jo
cmp
int
sbb
xor
lock
movsl
or
push
pop
pop
cli
sub
dec
sbb
jle
das
movsl
jge
inc
or
movsb
xorb
lock
mov
cmpsb
pop
sub
jg
sub
xor
push
mov
inc
and
leave
sbbb
sub
xchg
aaa
sub
pop
loop
and
add
call
test
jmp
je
outsl
xorps
add
les
inc
mov
push
sub
dec
jo
test
sbb
sbb
xor
dec
aam
cmc
xchg
fcoml
push
popa
inc
or
in
andb
dec
push
cmp
adc
stos
lret
sbb
push
xlat
loopne
pop
test
fs
inc
movsb
cmp
call
daa
sub
pop
lcall
idivb
stos
xchg
push
dec
repz
xchg
and
fmuls
mov
mov
cmpl
cmpl
and
xchg
adc
xchg
or
cmp
aas
xor
or
fldl
insb
pushf
xchg
nop
sti
out
icebp
dec
add
jne
andl
adc
rorl
aas
cmp
push
mov
push
pop
add
xchg
jne
jmp
sub
or
jle
mov
add
stc
test
inc
stos
cmc
adc
xor
inc
daa
xor
adc
push
mov
cmp
or
xchg
shrl
inc
sbb
adc
nopl
pop
dec
adc
add
or
or
loopne
dec
fsubrl
stos
lods
dec
iret
jle
add
test
and
mov
mov
xchg
xor
sbb
stos
and
inc
mov
je
jle
xor
jg
cli
test
pusha
jmp
hlt
jno
sub
ss
adc
cli
mov
xchg
add
sbb
mov
inc
mov
inc
mov
xchg
jmp
pop
sbb
cltd
in
and
les
push
shl
repz
mov
and
fsts
gs
and
dec
mov
adc
stos
push
pushl
ljmp
sbb
xchg
in
push
addr16
pop
sbb
rclb
movb
sbb
sahf
pop
and
fmul
xchg
shrl
daa
push
cld
adcl
push
stc
mov
xchg
call
and
fstpl
xchg
pop
jmp
xchg
shll
add
call
pop
pop
inc
mov
or
loop
mov
push
bound
dec
sub
xor
or
cmp
mov
inc
or
aaa
stos
xor
call
adc
jge
pop
mov
iret
pop
in
xchg
loop
ret
sub
or
cmp
ljmp
jne
daa
fst
mov
dec
movzbl
pop
mov
mov
les
pop
push
jp
push
cmp
aas
fmul
cmpsl
clc
in
mov
adc
psadbw
subb
adc
pop
mov
jmp
mov
or
leave
adc
lea
mov
pop
jmp
pop
jmp
js
lea
lds
lret
mov
ja
mov
jge
add
adc
popa
xor
inc
decl
sub
in
jl
mov
test
sub
adc
daa
pop
pop
ljmp
push
jle
adc
sar
push
jecxz
mov
add
je
clc
sarl
push
shlb
inc
cmp
jne
jmp
ds
aaa
jmp
fildll
fnsave
xchg
ret
pop
lock
bound
testb
subl
add
adc
and
xchg
or
roll
dec
xor
jg
lret
int3
push
jecxz
popf
rolb
dec
xor
lods
ret
ljmp
enter
sub
inc
sbb
xor
sub
xor
loope
xchg
inc
pop
ja
das
dec
fnstcw
ret
nop
in
es
addb
sub
aaa
clc
mov
xchg
es
and
add
data16
test
sti
push
cltd
sti
dec
ret
inc
mov
pusha
or
sub
or
or
mov
xchg
test
outsl
adc
push
mov
xor
mov
rorl
push
cmp
jge
lea
mov
shl
test
dec
jne
mov
cmp
inc
or
jo
nop
dec
adc
addl
xchg
repnz
aaa
cmp
inc
and
mov
add
cmp
mov
lcall
shrl
pop
mov
out
pop
jge
movsb
sti
push
and
xchg
push
jmp
xchg
mov
int
xor
add
adc
or
adc
push
inc
in
notb
ret
add
cmp
pop
or
adc
mov
call
fdivs
or
jne
std
push
inc
pop
adc
fs
adc
icebp
shll
push
and
jo
ds
or
and
std
sbb
ja
fldcw
add
and
scas
push
jmp
pop
sbb
mov
and
jns
rclb
je
cmp
cmp
or
inc
jl
jmp
add
mov
mov
pop
jg
cwtl
mov
sbb
sub
jo
stos
lds
cmp
je
push
cmp
out
mov
inc
cmpb
xchg
and
shrl
mov
push
das
roll
jp
adc
push
insl
mov
add
jo
leave
pop
cli
cltd
test
lds
cmp
push
mov
mov
jnp
sbbl
mov
or
in
popa
xchg
test
sub
adc
ljmp
lods
push
mov
and
enter
aad
fisttps
mov
mov
dec
xchg
mov
adc
les
sbb
gs
jno
andl
jne
insl
mov
sub
xor
pop
aaa
sbb
mov
pushf
inc
mov
inc
repnz
nop
mov
jne
sti
icebp
movsb
sgdtl
adc
or
xchg
jmp
or
stc
inc
inc
cmp
jmp
adc
pop
cltd
or
sbbl
xor
mov
and
shll
and
mov
dec
dec
mov
decl
test
sbb
test
mov
add
mov
enter
mov
push
adc
mov
cmc
inc
pop
push
jne
inc
mov
sub
and
test
scas
and
cmp
mov
jmp
jo
xchg
or
sbb
xchg
sbb
or
jmp
mov
dec
mov
push
push
inc
mov
add
subl
mov
pop
push
cmp
push
sbb
and
and
sbb
jg
add
jmp
xor
std
pop
inc
lar
add
dec
jmp
dec
fistps
and
cmp
xor
es
sub
cmp
imul
sub
pop
inc
sub
rcrb
sbb
adc
sbb
and
and
adcl
push
ret
cmp
je
in
inc
jecxz
adc
jne
and
repnz
popf
aad
nop
sar
cwtl
or
cmpsl
xor
call
add
jmp
xor
xor
sub
and
push
mov
dec
inc
cli
cmc
subb
push
test
mov
or
and
xor
ret
jmp
xchg
in
mov
je
ret
popa
ret
arpl
mov
imulb
sti
out
mov
imul
or
mov
xchg
outsb
dec
pop
jl
inc
push
jge
mov
shr
push
pop
repnz
adc
stos
cmp
sbb
cld
inc
cmpsb
popa
adc
ret
daa
xchg
daa
and
dec
add
rorl
cld
sbb
jmp
or
or
push
sbb
jmp
loop
ficoms
adc
jno
in
mov
pusha
fnstsw
rcrb
jl
add
cmp
mov
mov
scas
add
loop
lea
xchg
pusha
incl
inc
orb
push
jge
push
adc
mov
xchg
xor
jle
les
scas
shll
mov
cmp
or
sub
cmpsb
dec
xor
in
lahf
jnp
out
inc
or
dec
ret
inc
inc
add
cmp
jl
mov
cmp
decl
test
add
add
add
pop
or
dec
ja
in
sbb
mov
and
pop
push
addr16
decb
roll
imul
fisubs
pop
or
cmp
add
mov
xchg
stos
test
push
inc
xor
pop
lcall
lock
mov
and
popf
nop
scas
inc
cmpb
in
sub
out
mov
jae
jnp
mov
jp
popa
lea
nop
adc
push
push
push
imul
push
sbb
pop
pop
test
sbbl
fwait
mov
push
sbb
pushf
test
outsl
push
inc
mov
aam
pop
jns
lods
or
call
jnp
sbb
xor
jmp
mov
out
arpl
adc
and
or
das
mov
add
push
or
call
sub
cwtl
and
sub
sub
jge
and
cld
jg
lds
sub
cwtl
mov
cmpl
jmp
movsb
push
aas
dec
jbe
or
pusha
or
and
push
mov
rorb
mov
cmp
inc
adc
jecxz
jmp
cli
mov
icebp
mov
enter
int
cmp
cmp
and
xor
push
adc
or
call
pop
int3
adc
jbe
sbb
sbb
push
pop
addl
push
pop
cmpsb
push
xor
and
in
push
mov
adc
or
mov
test
pusha
lods
and
cmpsb
adc
mov
in
inc
pop
jmp
imul
xor
jg
xlat
std
lahf
leave
hlt
mov
dec
mov
or
push
push
call
pop
add
mov
lret
sbb
adc
das
jge
adc
adc
and
scas
mov
stc
arpl
sbb
cmp
stos
dec
dec
pop
jecxz
ret
popa
jp
inc
and
xchg
adc
push
pop
jne
leave
jecxz
mov
fsubrl
dec
fildl
test
xchg
es
adc
sbb
xorb
and
fmuls
repnz
loope
cmp
ljmp
ret
xor
xchg
push
lock
push
in
wrmsr
or
bound
inc
or
stc
dec
mov
aam
pop
ret
inc
sbb
sbb
add
jmp
hlt
lods
setae
fsubrs
and
shlb
popf
ja
xorl
push
gs
pop
adc
or
movsl
shrl
xchg
call
sbb
jmp
gs
and
adc
mov
sahf
jne
std
cmp
sbb
sbb
orb
je
pop
data16
add
mov
dec
in
fld
dec
mov
jle
cmp
xor
scas
or
ret
inc
aad
push
jmp
sub
jb
sub
pop
xchg
adc
test
mov
aas
rorl
jo
cld
and
push
push
mov
jecxz
sub
xchg
pop
mov
pop
mov
jae
adc
shld
xor
loopne
sarb
cmp
push
lret
mov
sub
jo
xchg
push
or
daa
imull
das
std
aad
popa
push
inc
push
or
cmp
int
pop
fdivs
decl
xor
stos
and
sbb
out
and
dec
stos
ret
push
cltd
shl
xor
enter
ljmp
mov
mov
in
xor
pop
push
pop
xchg
jmp
xor
add
test
sbb
xchg
out
inc
push
sub
xor
into
xchg
push
pop
push
mov
and
das
xchg
add
dec
in
and
lahf
cmp
mov
repnz
nop
mov
sub
int3
jno
sbb
arpl
jno
cmp
loop
pop
sbb
jl
mov
test
bnd
jmp
xchg
out
sbb
dec
mov
mov
sbb
adc
xchg
xor
insb
lea
popf
mov
inc
movsb
xor
jnp
and
aaa
daa
lea
pop
sbb
loop
aad
scas
or
icebp
shl
repnz
pop
xchg
push
dec
leave
inc
aas
push
and
arpl
in
daa
jmp
pop
inc
test
in
xor
and
mov
sub
push
scas
adc
xor
adc
add
jmp
call
and
fdivl
daa
jae
inc
adc
adc
test
jge
adc
xor
mov
cmp
dec
mov
push
push
jmp
or
ljmp
mov
enter
out
jmp
or
testb
xor
aaa
frstor
pop
lods
sub
nop
hlt
dec
jae
push
or
adc
cmp
inc
shl
mov
mov
sahf
add
or
aas
pop
xchg
popa
jns
loop
pop
aas
roll
call
mov
mov
xor
push
jecxz
push
cmp
mov
inc
push
adc
push
test
push
outsb
call
call
in
leave
call
adcl
shll
dec
call
lds
adc
add
pop
cmp
test
mov
sub
xchg
sub
push
adc
sbb
add
and
inc
inc
pop
sub
pop
data16
or
inc
sbb
hlt
or
or
jmp
inc
jmp
ja
pop
or
push
shll
pop
xchg
popl
and
mov
jg
je
sub
es
cmp
pop
add
outsb
ljmp
clc
push
dec
aaa
and
add
cs
fs
adc
nop
push
jmp
add
daa
loop
ja
in
test
je
test
lahf
adc
cmp
add
push
push
adc
jmp
mov
mov
cwtl
pop
dec
or
pop
or
call
arpl
mov
fstps
adc
ds
rolb
rcr
pop
hlt
loop
andb
insl
in
jne
ljmp
jp
sub
sarl
pushf
pushw
or
clc
and
cmp
mov
dec
repz
or
cwtl
ja
sub
or
repz
je
add
jne
mov
stc
add
cmp
jmp
or
inc
test
jne
cmpl
aas
outsb
adc
mov
dec
sbb
cltd
int3
xchg
pop
mov
and
mov
pop
sub
paddd
adc
mov
xchg
sbb
sbb
scas
sbbl
or
jecxz
push
cmc
or
lret
dec
add
xor
clc
dec
push
sub
std
repnz
not
and
or
lahf
adc
out
movsb
sbb
sbb
movb
or
jno
push
mov
popa
and
or
adc
adc
mov
fmull
adc
clc
or
pop
pop
rorb
push
adc
daa
mov
mov
lea
or
jne
sub
mov
lds
and
iret
pop
shrl
cmp
in
lea
outsb
pop
pop
test
pop
stos
pop
inc
js
mov
das
lret
mov
add
inc
and
ljmp
mov
xor
or
into
nop
shll
lret
clc
or
mov
into
xchg
xchg
pop
js
pop
je
dec
rclb
sub
pop
test
push
add
sbb
pop
lods
ds
out
sbb
lock
adc
jle
mov
sbbl
shl
adc
adc
jne
jge
or
add
pop
jle
cmp
mov
jl
push
mov
pop
repnz
pop
and
dec
aam
or
mov
pop
insb
pop
push
movsb
sarl
call
push
dec
js
cmp
add
cmp
push
hlt
out
push
pop
cmp
cmp
mov
pop
add
iret
ret
pop
cltd
cltd
mov
imul
mov
testb
nop
adc
repnz
sub
pop
push
and
movsb
cmp
cmpsb
in
adc
push
mov
xor
cmpsb
mov
pmaxub
xchg
cmp
popf
sub
call
popf
sub
pop
insb
movsl
push
sbb
add
fistl
mov
nop
push
dec
jne
pop
pop
mov
push
iret
stos
leave
add
out
movsb
and
test
mov
iret
inc
ret
pop
pop
inc
push
cltd
and
mov
push
or
outsb
in
ljmp
pop
cmpb
into
stos
fistpl
and
or
and
xchg
sbb
loope
inc
dec
out
adc
sbb
cwtl
hlt
pusha
mov
or
fnstsw
jb
jl
ret
je
or
shll
pop
sub
jns
push
xchg
decb
stos
and
sub
xor
jne
push
xchg
cltd
push
or
add
jo
ret
and
jo
aas
mov
and
aas
add
dec
out
push
cmp
idivb
cs
pop
and
sub
pop
add
adc
sub
and
sub
int3
and
and
dec
mov
cwtl
icebp
push
or
test
cmp
fdivrs
sub
push
mov
and
jbe
adc
inc
scas
movsl
dec
mov
std
xor
xchg
test
jmp
pop
lret
xchg
push
xor
or
dec
mov
insl
adc
and
aaa
mov
pop
imul
and
repz
or
inc
sahf
mov
jg
or
xorl
jb
xchg
push
shll
inc
in
xor
xchg
ss
std
push
xchg
jb
outsl
or
and
xor
test
scas
sub
xorb
inc
insb
je
and
adc
aad
rolb
sbb
cmpsl
sub
xchg
cmp
jle
movb
aas
test
mov
pop
fcomps
fsubr
jne
inc
inc
xor
incl
out
jne
outsl
lahf
fmuls
push
jl
jae
xor
lods
hlt
fistps
adc
cmp
jl
xor
incl
clc
adc
push
call
cmpsl
pusha
and
mov
push
jo
push
push
popf
cmp
pop
jmp
aaa
shrb
mov
adc
mov
movsl
pop
leavew
call
mov
sbb
in
enter
mov
int3
or
data16
lods
or
sbb
mov
push
addw
pop
movsb
mov
and
icebp
and
mov
fisubrs
cmp
mov
mov
add
je
imul
cmp
rorl
xlat
and
insb
adc
shr
aas
aam
out
enter
or
jmp
dec
add
lret
scas
adc
enter
ret
loop
scas
aam
or
idivb
sbb
shr
or
or
or
mov
jmp
mov
lcall
call
sub
nop
push
and
pop
stos
call
adc
push
hlt
dec
xor
add
push
test
out
mov
or
dec
adc
inc
lret
cmc
add
testb
inc
mov
or
test
add
mov
xor
imul
cmp
cmp
or
mov
mov
icebp
imul
sub
adc
inc
jp
je
mov
lds
sub
push
mov
push
add
cwtl
es
xlat
adc
adc
rorl
sahf
mov
push
push
mov
push
popf
push
push
fstl
and
adc
insb
pop
or
mov
aas
xchg
push
or
sub
inc
cmpl
pop
test
cmp
lea
or
call
and
sbb
mov
adc
jp
outsl
xor
scas
les
mov
sub
ss
insl
daa
cmpsb
rorb
xor
lds
imul
stos
jns
push
int
vfmaddpd
pop
test
repnz
sub
pop
xchg
xchg
in
adc
leave
lock
mov
dec
mov
push
cmp
jl
pop
add
jg
inc
jmp
jge
cmp
dec
fs
mov
inc
adc
add
das
nop
sub
mov
sub
xor
test
les
dec
loope
add
in
adc
daa
shl
inc
mov
insb
pop
xor
negl
mov
das
shr
adc
repnz
fstps
inc
adc
add
adc
push
scas
loop
imul
inc
xor
dec
xchg
js
sub
test
and
push
adc
adc
sbb
or
jmp
adc
push
ss
jnp
add
fsubs
and
push
and
mov
sbb
adc
adc
sbb
es
je
or
fbstp
aas
sub
push
inc
pop
sub
mov
cmpsb
add
sbb
data16
nop
pop
xchg
call
inc
inc
jnp
pop
mov
cmp
or
jge
ror
cmovg
adc
mov
sub
rol
sbb
mov
je
adc
mulb
jg
sub
sub
inc
pop
mov
add
and
sarl
rdpmc
leave
and
sub
jmp
pushf
xchg
sbb
jmp
aam
mov
push
mov
pop
mov
test
mov
insb
es
es
and
cs
or
xchg
je
pop
shrl
insl
mov
sar
stc
sbb
mov
pop
cltd
divl
sbb
jg
mov
pop
sub
add
movsl
fisubs
stc
jmp
fs
xchg
or
add
xchg
enter
mov
js
cmp
jle
sub
sbb
or
pop
mov
dec
inc
jge
test
dec
pop
or
cs
sub
std
cwtl
adc
mov
push
sub
rolb
cs
add
or
sub
cmp
adc
dec
mov
push
inc
adc
inc
jae
dec
push
adcb
sti
bound
push
jne
jl
or
test
pop
cli
inc
call
test
add
jg
popa
dec
or
mov
aaa
or
mov
mov
mov
test
dec
jbe
es
sbb
fwait
xchg
je
les
xor
lock
xor
jle
call
push
jmp
arpl
icebp
or
pop
test
jg
jne
daa
and
aam
inc
jne
mulb
shr
inc
xchg
xchg
and
ljmp
xor
jne
das
leave
mov
inc
push
add
and
sar
out
arpl
cmp
je
push
jge
mov
push
sbb
adc
pushf
clc
lahf
jnp
mov
cmp
daa
call
pop
aaa
mov
mov
push
push
adc
adc
xchg
and
jmp
out
mov
adc
scas
call
push
mov
dec
ja
imul
ja
out
popf
clc
outsb
xchg
call
sbb
xchg
test
mov
dec
adc
mov
gs
sub
out
loope
and
std
mov
pop
mov
loop
test
test
jmp
mov
push
push
mov
push
mov
lock
mov
in
adc
testb
mov
push
call
jecxz
inc
inc
mov
and
xor
call
or
fsubrl
scas
pushf
add
movsl
jmp
sub
add
cmp
adc
testb
or
lods
inc
and
mov
fistl
xor
and
and
sub
mov
sub
xchg
mov
rcrl
movsl
push
dec
data16
popf
jl
cltd
adc
or
xchg
cmp
clc
jge
or
push
sub
ds
dec
pop
sbb
xlat
gs
mov
pop
or
lods
out
lea
andl
adc
sub
cmc
call
lock
ficomps
testb
arpl
sub
inc
dec
jno
cmpsl
inc
cmpl
std
inc
loopne
jmp
popf
mov
mov
daa
aad
mov
xor
lret
or
xor
pop
mov
jle
add
pop
aaa
subl
pop
fnsave
fists
call
icebp
inc
or
divl
xor
and
fs
decl
adc
add
xchg
fadd
add
shr
or
cli
cmc
xchg
jo
jmp
jmp
test
ss
repnz
insl
out
cmp
or
mov
sbb
out
out
push
faddl
pop
cli
popf
mov
add
lahf
clc
scas
dec
push
shll
add
roll
jbe
push
outsl
hlt
outsb
repz
lea
movsl
aas
stc
mov
jo
adc
cmpsl
or
add
xchg
pop
dec
inc
dec
mov
ds
nop
and
loope
jg
xlat
dec
cmp
ficompl
jne
enter
lods
adc
mov
dec
adc
insb
in
out
jp
inc
fcmovbe
and
call
add
daa
sarl
adc
adc
loop
pop
scas
orb
je
popf
mov
movsb
mov
rcrb
mov
call
push
faddl
rorb
in
clc
aas
in
jmp
ja
xor
je
or
mov
add
add
push
pop
mov
shrb
push
ja
test
push
xor
cmp
jl
or
cmp
add
cmp
and
incb
std
inc
lahf
push
sub
cmp
add
add
fldenv
fcoms
cmpsl
lods
adc
sahf
rcrb
add
dec
pop
mov
mov
or
jmp
mov
mov
sbb
inc
jle
xor
jnp
gs
jb
adc
jmp
lock
rcl
cmpsb
enter
push
dec
lcall
or
mov
mov
mov
adc
jle
push
ret
inc
mov
lcall
pop
push
mov
sub
jae
or
xchg
fsubrp
inc
dec
mov
push
sub
mov
or
loope
ret
outsb
pop
sbb
or
and
into
aaa
nop
sbb
adc
push
mov
or
jmp
xor
popa
popa
cmc
cltd
sbb
outsb
jne
or
dec
adc
daa
enter
or
or
gs
and
add
addr16
insb
jmp
sub
and
push
pop
dec
adc
mov
inc
jmp
shl
je
sub
fcomi
adc
shr
inc
sbb
icebp
pop
pop
xor
mov
or
movl
and
sbb
inc
ret
cmc
out
enter
lcall
jl
sbb
ret
jle
or
push
adc
jg
ret
jno
imul
cmc
and
mov
cmp
dec
ficoml
stc
movsl
out
sbb
or
pop
cmp
test
adc
add
sar
pop
test
dec
shll
jmp
adc
movsl
push
xchg
mov
push
out
ss
pop
repnz
adc
xchg
lock
nop
cmp
xor
lahf
dec
inc
adcb
add
loopne
xchg
enter
fdivrl
adc
cmp
cli
lds
lods
pop
xchg
sbb
in
iretw
push
push
cmp
aam
gs
adc
fstpt
xchg
test
movsl
push
push
pushf
pop
cmp
cmp
and
add
xchg
add
cmp
in
ret
sbb
sti
jmp
xlat
jb
mov
stos
or
mov
lret
adc
pop
mov
xchg
or
jno
gs
add
lcall
mov
adc
cmp
or
and
and
inc
leave
decl
adc
lods
in
pop
adc
xchg
pop
jmp
sub
dec
xchg
add
inc
and
xchg
or
and
inc
out
mov
adc
and
dec
in
xchg
in
adc
sti
adc
aas
sti
jb
rcr
loopne
inc
add
sub
sub
or
shlb
push
or
das
adc
sbb
or
add
add
jmp
lods
xchg
jp
jnp
jmp
mov
maskmovq
sub
sti
sub
jmp
mov
call
sub
push
enter
ret
sbb
lea
pop
xchg
roll
outsb
shrl
lods
sbb
addl
iret
pop
and
jmp
dec
jns
sub
or
lahf
lea
and
push
cli
imul
jge
shll
xchg
jmp
push
repnz
pop
sti
push
enter
xor
cmpw
aas
jb
and
inc
movsb
sbb
test
mov
xchg
nop
xor
jge
insl
add
jmp
and
out
pop
addb
aas
sbb
aad
sbbl
call
dec
sbb
pop
jne
mov
pop
or
fiadds
or
dec
sub
repz
add
cli
jge
cmp
enter
shll
clc
aaa
push
xchg
adc
or
push
sti
sahf
adc
out
test
hlt
inc
add
or
inc
loopne
add
jne
repnz
mov
stc
add
xor
shll
bswap
dec
push
adc
icebp
lahf
push
decl
sub
mov
push
add
rolb
jmp
popa
or
xor
rcrl
add
nop
xor
dec
dec
rorl
pop
cs
sarl
push
je
loopne
sbb
add
sbb
push
dec
push
mov
je
fcompl
call
jbe
push
dec
mov
add
cmp
pop
jbe
add
cmpb
jne
ds
add
sahf
add
jb
add
cmpb
inc
cmp
jne
cmp
xor
sub
nop
inc
aas
add
cmp
inc
sub
sbb
cs
and
sub
mov
sbb
mov
lods
and
push
call
into
jo
jae
insb
or
test
addl
inc
jmp
in
jne
adc
mov
push
and
sbb
mov
sbb
pusha
adc
xor
mov
add
or
mov
cmp
mov
ss
push
lea
stos
xchg
aad
andl
sbb
sbb
jg
decl
push
mov
fistpll
movsb
js
adc
or
mov
scas
pop
and
mov
add
mov
add
xchg
or
push
jne
stos
push
pop
mov
cmp
mov
movsb
insl
and
pop
jne
and
jmp
cmpl
adc
leave
movsl
jp
push
mov
and
add
jmp
or
sub
aas
data16
or
dec
mov
or
pop
xor
and
and
and
test
inc
dec
add
jae
stc
fldenv
push
lods
or
cmp
mov
fdivl
sbb
dec
jg
adc
sbbb
fsubs
sub
inc
orl
lods
jmp
daa
jmp
decb
push
pop
adc
push
cmp
adc
add
mov
adc
out
cwtl
test
adc
shrb
adc
dec
ljmp
aas
pop
negl
adc
sti
popf
push
or
and
add
xor
pushf
repz
add
push
addr16
add
hlt
movsl
and
jne
int
cld
adc
pop
jg
addl
pop
push
pop
jle
add
lds
cmp
push
jg
movsb
pop
push
cmp
inc
push
int
jno
test
xchg
add
mov
icebp
imul
in
movsb
inc
rorl
lods
ljmp
cmp
ja
xchg
jl
mov
icebp
sbb
xor
int
gs
cmp
push
fdivl
push
out
inc
inc
push
xor
inc
mov
lret
jge
pop
loop
and
mov
test
jae
in
inc
sti
rorl
loope
push
test
cmp
dec
add
push
push
push
mov
neg
mov
jg
mov
int
or
push
pop
add
mov
imul
mov
pusha
cmp
push
je
arpl
ret
mov
mov
pop
lds
pop
jno
shlb
inc
and
pop
add
loopne
add
lods
daa
dec
lea
pop
orl
jge
hlt
movsl
add
idivb
xchg
push
std
mov
ret
jl
movsl
mov
inc
pop
sti
outsb
mulb
mov
imul
movl
outsl
pop
insl
les
mov
cld
and
in
je,pn
cmp
pop
push
into
lods
xor
call
push
mov
pop
sub
xchg
clc
test
inc
sub
and
adc
sbb
mov
mov
jne
aas
fldcw
cmc
mov
repnz
pop
mov
mov
inc
push
dec
mov
clc
scas
add
adc
in
and
inc
mov
or
mov
jp
mov
adc
insl
call
dec
mov
pop
sbb
xchg
jno
mov
jecxz
movsl
test
adc
sbb
call
dec
cmpsl
push
cmp
js
icebp
adc
inc
stc
aaa
xchg
or
sbb
jns
or
js
jge
rolb
pop
rclb
or
jg
test
les
xor
mov
sbb
jb
ds
pop
sub
and
nop
xor
or
or
jb
test
jbe
inc
stos
dec
test
movsl
and
enter
or
outsb
push
push
jbe
or
jmp
dec
shrl
or
cmp
dec
push
insl
icebp
out
and
int3
test
push
in
loop
adc
fisttpl
push
stos
pushf
jne
mov
push
adc
add
and
jp
loopne
and
hlt
dec
push
cmp
jmp
sub
testb
lret
in
pushw
je
adc
dec
sar
push
cli
insl
popa
into
jne
ss
mov
rcll
sbb
dec
test
inc
adc
repz
pop
sbb
ret
jmp
xor
pushf
jle
xor
mov
sub
divl
sub
clc
das
loope
mov
push
push
test
aas
xchg
ret
sbb
lock
xor
mov
jne
mov
in
sbb
adc
mov
jge
lret
in
pop
les
ffreep
ss
push
push
cmp
cmp
jne
adc
dec
je
inc
les
sub
cld
mov
sbb
rclb
ror
jae
jl
cmpl
ds
in
xor
xor
lea
call
cmp
daa
inc
xlat
and
jmp
fcmovb
xlat
inc
cmpsl
xchg
inc
outsl
sti
pop
mov
das
jmp
call
xor
jl
jp
mov
test
add
or
inc
jge
testl
fs
add
mov
dec
pop
je
movsb
mov
xchg
dec
jle
push
pop
mov
scas
xor
sbb
stc
sub
mov
fistpl
cs
fsubrs
adc
sti
pop
lret
cmp
dec
jmp
repnz
ficoml
gs
cwtl
or
cmp
sbb
adc
sub
mov
adc
leave
test
inc
ss
ret
xchg
sbb
and
mov
push
sbb
add
and
pop
mov
nop
scas
and
push
add
adc
adc
lock
push
mul
sbb
stc
jmp
les
jmp
xchg
pop
mov
pop
ret
insb
lahf
and
in
mov
or
cmp
add
mov
adc
mov
scas
cwtl
divl
mov
icebp
das
hlt
das
ret
inc
ds
cmp
jmp
inc
movsl
daa
ljmp
addl
loopne
rcrl
inc
aam
push
dec
add
mov
adc
pop
or
mov
ret
xchg
int3
add
and
imul
dec
and
call
insl
dec
addr16
shll
and
pop
ss
dec
mov
movl
call
pop
jmp
test
jns
mov
sbb
and
add
and
insb
mov
mov
ja
cmpsb
and
dec
push
pop
push
push
sbb
adc
sub
sbb
jnp
push
inc
mov
xchg
sub
leave
popf
or
push
xchg
movl
mov
inc
dec
sbb
repz
aaa
push
loopne
lcall
inc
iret
or
call
sbb
cmp
stos
xchg
scas
adc
push
call
mov
pushfw
and
jne
jb
mov
in
xchg
roll
xchg
test
int3
sub
pop
xor
mov
dec
lock
cmpl
mov
or
inc
push
sbb
psubb
xchg
adc
jmp
push
or
dec
daa
and
mov
std
icebp
or
mov
sub
rclb
adc
mov
cs
test
jp
call
mov
test
xchg
mov
sub
inc
sbb
enter
add
test
or
adc
dec
cmp
xor
out
or
pop
ja
or
lods
sbb
and
lock
inc
or
cmp
cmp
mov
push
dec
adc
adc
pop
push
inc
push
sub
pop
sbb
inc
jns
inc
fstps
pop
test
or
fmull
push
push
ret
sub
pop
xchg
jmp
mov
mov
pop
push
pop
dec
js
bound
mov
stos
leave
or
outsb
mov
call
cmp
inc
leave
and
add
jnp
sub
repz
lock
add
xchg
xor
inc
inc
daa
and
inc
fsubrs
lds
mov
adc
ret
je
fisubl
mov
mov
imul
jecxz
dec
imul
cmp
xor
and
rcll
call
dec
jae
jb
insb
jle
pop
push
adc
fldcw
and
das
mov
or
jns
or
pop
cmp
dec
pop
inc
push
je
icebp
imul
adc
xchg
and
dec
sbb
push
pop
out
xor
or
inc
push
je
pushl
sub
pop
sub
lock
cmc
in
adc
push
mov
or
rep
in
cmc
mov
fxtract
ds
test
and
mov
push
ss
mov
leave
mov
das
push
xor
es
xor
add
adc
test
je
out
popa
bound
data16
xor
imul
popf
rcrl
sub
or
mov
fcoms
daa
sub
idivb
xor
xor
ja
sti
mov
out
mov
push
repz
and
jne
addl
adc
push
lahf
loope
mov
and
jns
mov
insl
call
mov
mov
or
jl
daa
cwtl
repz
dec
mov
push
in
pop
or
out
not
lock
lock
ficomps
mov
jg
rcrb
mov
and
jle
pop
mov
lock
xchg
aam
pop
xchg
out
cmp
adc
dec
sbb
loope
into
cmp
mulb
fidivs
push
push
push
movsl
dec
popa
dec
cmc
adc
xchg
push
loop
jg
xchg
cld
sub
pop
inc
repz
and
cmp
mov
xchg
cmp
mull
jmp
jge
jmp
lahf
adc
mov
mov
mov
dec
mov
jmp
je
xor
and
adc
or
add
jmp
enter
or
push
es
adc
dec
or
or
inc
loop
les
xor
mov
or
fsubrl
fwait
fs
cs
sbb
mov
cs
or
in
and
jge
loop
dec
push
push
aam
xor
lret
dec
lods
adc
test
stc
dec
imul
add
je
pop
jmp
or
je
xchg
xor
outsl
cltd
mov
lea
fs
xorl
ja
jne
fsubr
jbe
pop
imul
xor
xor
ds
dec
adc
stos
arpl
xchg
mov
int3
orl
adcl
xor
jmp
mov
bnd
sub
sub
adc
dec
sahf
adc
adc
mov
mov
leave
push
js
in
mov
pop
or
addr16
loopne
adc
and
movsl
cltd
and
or
xchg
or
lock
test
sub
nop
enter
push
add
add
push
cmp
sbb
mov
dec
push
pop
and
sub
mov
adc
dec
add
and
dec
les
fs
inc
je
mov
enter
lock
inc
inc
xor
push
adc
dec
jle
mov
cwtl
inc
stos
mov
and
inc
sbb
es
cmp
push
adc
je
mov
mov
repnz
add
dec
xor
bound
adc
xchg
into
and
inc
lock
inc
and
fs
jp
mov
lcall
in
cli
inc
or
sbb
sub
ds
dec
pusha
mov
xchg
dec
test
mov
or
push
mov
adc
dec
dec
pop
xchg
jo
jle
mov
enter
in
hlt
and
inc
adc
mov
adc
pop
dec
js
add
push
addb
je
jae
mov
dec
add
adc
and
pop
sub
pusha
xchg
xor
ja
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
mov
mov
fisttpl
movsb
mov
aad
neg
add
xchg
sub
mov
pop
sub
pop
mov
pusha
repnz
mov
test
jge
ficompl
jmp
push
mov
hlt
movl
test
fs
add
in
leave
mov
add
adc
insb
push
arpl
cmc
or
outsb
cmp
pop
adc
in
pusha
aad
jb
addr16
add
aam
add
std
test
or
insb
cwtl
mov
add
leave
mov
lods
jge
add
xor
filds
or
cmp
sbb
cmp
ficoms
and
enter
sarb
and
add
iret
shld
sub
mov
or
and
or
das
adc
add
sub
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
popa
mov
into
subb
add
xor
dec
sbb
xchg
fadd
roll
movsb
sti
hlt
shrl
imul
xor
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
inc
aad
scas
ja
popf
adc
adcl
jae
or
jecxz
cmp
push
sbb
jp
iret
push
in
decl
push
xchg
daa
scas
add
mov
pop
jge
hlt
lock
add
push
inc
push
imul
xorb
aas
sbb
subb
sbb
loopne
sub
mov
ficoml
int3
add
outsl
fistpll
cmp
aad
mov
call
add
fdivrs
push
add
fisttps
addr16
cmpsb
fldl
push
mov
dec
ss
fiaddl
sub
scas
idivb
dec
add
pusha
jp
inc
ret
out
fcomp
push
in
ja
add
imul
sbb
shrb
ss
push
xchg
add
int3
add
mov
and
es
mov
mov
pop
mov
sub
mov
cmpsl
call
add
xor
shlb
sub
scas
ficomps
lock
es
arpl
pushf
mov
xchg
insl
add
ss
add
test
jb
push
rolb
adc
mov
mov
cmp
mov
fwait
add
aad
mov
out
fdivrl
fisttpl
aam
rcrl
icebp
clc
mov
push
pop
int
mov
mov
outsl
int3
inc
mov
sbb
pop
add
push
dec
add
push
pop
or
adc
sahf
add
ror
imul
insb
add
js
or
xlat
push
addl
mov
add
popa
cmpsl
notl
pusha
add
dec
inc
imul
dec
push
scas
fcompl
add
or
inc
lock
aas
aaa
push
add
jg
iret
mov
jmp
cmp
mov
lret
mov
cmpsb
add
shr
mov
xlat
int
add
push
mov
add
mov
dec
popa
les
add
push
sub
add
or
cld
filds
add
aas
inc
inc
push
and
xchg
dec
scas
outsl
jge
xor
xor
push
je
and
repnz
jp
cli
ja
outsb
es
gs
les
sbb
sbb
sbb
popa
jno
mov
push
push
add
ret
adc
cmp
aas
inc
lret
xchg
or
pop
push
popf
or
add
add
enter
xor
pop
and
cmp
aaa
xor
push
repz
and
inc
pop
push
pusha
push
jo
js
pushl
fnstsw
outsl
setp
push
outsb
push
jne
insb
add
push
pop
pop
les
sbb
sbb
pop
push
jle
cmp
sbb
jnp
jl
lea
mov
sarb
inc
xchg
adc
dec
jae
jb
arpl
jle
fldl
push
pop
jne
in
and
outsb
jmp
inc
dec
inc
push
dec
jb
xor
repnz
sub
and
not
add
movsb
adc
stos
xor
mov
push
pop
arpl
js
js
adc
outsl
fs
pop
push
andb
jae
and
andl
aas
pushw
push
test
lds
insb
outsl
sbb
stos
adc
outsl
mov
mov
mov
xor
inc
cmp
inc
dec
xor
push
push
xor
add
or
call
or
mov
or
and
dec
adc
in
sahf
call
int3
jmp
cmp
fstl
cltd
leave
adc
mov
ljmp
jb
inc
imul
test
out
xchg
insb
xor
jno
movsb
push
xchg
xchg
mov
cvtdq2ps
inc
adc
sbb
xor
adc
xor
outsl
ljmp
ljmp
and
or
aaa
inc
outsb
xchg
ret
or
push
cs
imul
xor
cmp
jo
push
test
jecxz
inc
push
jns
mov
gs
pusha
xor
mov
sbb
jecxz
pusha
xor
scas
clc
cmp
jo
mov
and
movsb
and
call
sbb
cmp
push
rolb
aaa
jl
mov
subb
sbb
xor
sbb
xor
rolb
mov
dec
add
andb
fildl
cld
test
jns
lds
dec
push
fisubl
lods
inc
push
insl
mov
rcrl
and
pop
aas
ljmp
inc
popa
adc
dec
fildll
mov
push
cmp
orb
push
ret
iret
sub
pop
in
inc
inc
sub
dec
ljmp
sub
pop
mov
dec
inc
jl
aad
cmp
inc
jo,pn
push
cmp
nop
loope
dec
pop
imul
test
mov
adc
cli
xor
or
ss
aad
push
sub
xchg
push
imul
mov
mov
dec
in
xchg
iret
or
sti
dec
ds
insb
push
out
adc
dec
add
out
push
dec
push
pop
or
sub
dec
in
cmp
inc
push
xchg
jbe
mov
adc
adc
push
ljmp
popa
addr16
inc
insb
js
xor
jo
adc
inc
inc
adc
mov
xor
sbb
dec
stc
mov
stos
mov
es
ret
or
xor
jbe
push
fs
jb
imul
es
sub
mov
cmp
subl
addb
sub
sub
push
gs
js
xlat
jo
inc
add
add
add
icebp
in
popf
sub
rorb
sub
pop
sub
mov
mov
lcall
add
xchg
jo
xor
or
mov
cltd
sub
mov
adc
addl
add
loope,pt
ds
inc
inc
sub
sub
clc
jle
push
xor
add
push
jo
xchg
jo
xor
xchg
repnz
and
lods
add
call
incl
and
inc
adc
adc
aas
mov
enter
cmp
js
push
and
jo
mov
popf
inc
xchg
pusha
inc
sub
mov
dec
aam
adc
cmp
mov
and
pop
add
es
rorb
xor
xor
aas
fwait
int3
adc
cwtl
icebp
sbb
nop
and
stos
in
aas
and
movsb
sub
inc
lock
mov
mov
rclb
mov
and
in
adc
add
fdivs
or
inc
adc
enter
xor
push
fiadds
push
push
xor
xor
fs
js
adc
cltd
dec
sub
cwtl
and
sbb
insb
gs
jo
jo
inc
bswap
je
push
in
lret
sub
dec
outsl
dec
jne
inc
imul
aad
mov
and
push
add
jbe
jb
in
in
ds
cmc
xchg
lds
dec
in
xchg
xchg
jb
repnz
imul
mov
insb
movsb
insb
sub
jo
ficoms
mov
jae
int3
repz
stos
sbb
push
jns
fmul
ret
inc
imul
mov
xor
es
sbb
xor
hlt
outsl
jae
dec
insl
popa
ret
xchg
push
or
add
sub
pop
sbb
sbb
sub
je
pop
push
pop
push
in
lcall
mov
insl
inc
adc
inc
aas
outsl
push
test
push
sti
xlat
cmp
dec
cmp
jo
mov
cmpb
pop
inc
sub
arpl
loop
push
movsb
jl
inc
mov
adc
mov
leave
mov
test
adc
pushf
into
push
inc
test
dec
or
and
shrb
adc
clc
fidivs
dec
lret
jnp
push
mov
push
lea
fs
mov
jns
push
push
lock
cmp
test
dec
sbb
or
pop
insb
adc
cmp
push
xor
xchg
and
push
mov
les
push
push
add
push
test
pop
mov
dec
stos
test
aam
repnz
dec
adc
add
and
es
int3
pushf
inc
xchg
push
cmp
adc
cmp
lret
lods
add
push
es
jb
sub
sub
adc
xchg
cltd
push
and
out
mov
push
pop
outsb
pop
cmp
add
test
xor
add
gs
xor
push
push
iret
jb
xor
dec
pop
outsb
movsl
aaa
or
mov
xchg
mov
push
insb
imul
adc
jo
shlb
and
xchg
mov
or
dec
insl
pop
jb
fcomip
add
jo
fwait
xor
jne
xor
mov
xor
cmc
adc
ret
add
jl
nop
imul
xor
dec
push
mov
mov
bound
test
pusha
xchg
or
stc
pop
xchg
pop
mov
mov
jbe
pushf
pop
data16
adc
push
xchg
add
pop
imul
clc
jne
insb
ljmp
sub
push
push
pop
add
add
outsb
hlt
mov
movsb
and
push
jge
push
and
lret
ss
jne
pop
lahf
jmp
insb
inc
pop
jb
test
mov
push
push
sub
dec
xor
outsb
jp
icebp
insl
les
call
xor
lret
xor
gs
dec
nop
out
fwait
dec
adc
sub
pop
sarb
rclb
xor
addr16
and
xlat
xchg
stc
movsl
lea
icebp
add
imul
lods
pop
cmpsb
les
fcom
mov
mov
xchg
std
mov
xchg
test
inc
dec
or
pop
sub
lret
mov
inc
test
xchg
adc
xorl
pop
push
sbb
shlb
adc
inc
pop
loopne
xchg
jl
pusha
fs
mov
xchg
sub
adc
jle
jo
inc
xchg
push
xor
outsb
jb
jo
fs
xchg
enter
dec
xor
mov
negb
idivl
sbb
push
jge
or
sbb
dec
xor
out
mov
test
data16
bound
push
mov
adc
nop
test
out
mov
inc
push
inc
sbb
shll
dec
xor
and
xor
xchg
xor
or
adc
and
std
ja
jo
cmp
and
es
adc
push
cli
jl
jmp
push
add
add
add
add
add
xorb
inc
or
jge
inc
pop
sbb
inc
negl
add
arpl
xor
inc
xor
add
xchg
sub
push
insb
jae
xchg
xor
mov
mov
cmp
lock
push
cmp
rolb
mov
xchg
bound
jbe
inc
outsb
add
push
les
push
adc
mov
cmp
je
test
pop
gs
cmp
xchg
stc
jbe
push
imul
inc
cld
arpl
inc
js
mov
aad
lret
cmp
pop
pop
outsb
xor
adc
add
lock
xor
insl
bound
call
outsb
stos
je
pop
mov
and
add
and
jno
dec
mov
cmpsl
test
pusha
shr
pop
dec
push
xor
mov
xorb
pop
loop
jmp
call
jo
cwtl
cld
ret
add
xchg
imul
xor
fsts
pop
movsl
lcall
jp
jg
add
lea
cmc
cmpsb
sbbb
repz
shrb
in
xchg
add
pop
popf
fdivrl
ret
adc
adc
mov
js
pop
stos
push
push
cmp
ficomps
ss
push
test
adc
pop
xchg
lock
fcompl
xchg
lret
push
iret
data16
gs
shlb
repz
es
add
cwtl
cld
fwait
int3
sub
sub
sahf
jae
add
pop
adc
popf
xrelease
into
lret
ss
rorb
sbb
inc
xor
adc
test
jnp
cmpsb
fbld
jns
sub
fimuls
add
pop
andl
mov
lods
xor
enter
dec
ret
or
xor
add
bound
loopne
cld
in
leave
pop
jmp
cli
fdivr
push
ficomps
clc
jns
mov
fsub
lock
fistps
lahf
mov
out
ljmp
cmpsl
mov
mov
lock
jl
loope
cli
sahf
fs
and
int
cmp
outsb
lds
sbb
push
adc
loopne
push
push
inc
inc
dec
pop
push
nop
out
jo
outsl
push
clc
aas
out
pop
mov
mov
outsb
popa
jbe
nop
iret
jg
xor
cs
cmp
jne
nop
outsb
pop
dec
push
sub
pop
dec
push
jge
inc
xor
imul
outsl
jmp
pushf
outsb
jb
fistpll
fs
sub
or
inc
cmpb
or
xor
and
stos
push
addr16
outsl
test
clc
inc
imul
jns
pop
roll
test
sbb
bound
push
jge
xchg
or
cmp
push
push
jno
testl
cmpsl
imul
jne
lods
add
sub
push
lds
jo
and
mov
mov
inc
push
jne
sub
xor
test
outsb
xchg
push
cmp
adc
cli
mov
adc
ss
sub
lret
shll
jo
or
ja
pushf
imul
dec
jl
xor
mov
test
fistpll
sbb
pop
jl
xchg
jle
mov
mov
sub
mov
pop
push
xor
lea
add
cmp
dec
or
dec
inc
push
loope
rcr
lret
insl
loop
or
out
jmp
ss
cs
sbb
push
addr16
add
js
in
add
cmpb
inc
movsb
or
add
inc
subl
inc
push
sbb
mov
adc
add
and
sub
mov
pop
sbb
jb
sub
cltd
sbb
or
dec
adc
lods
inc
pushf
nop
lods
sub
dec
mov
cs
js
rcll
inc
insb
popa
xchg
xchg
jb
sbb
adc
imul
pop
sbb
inc
dec
dec
cwtl
push
idiv
bound
enter
ret
or
mov
push
push
inc
dec
inc
mov
xorb
outsl
jmp
test
jne
jo
sub
insl
cwtl
imul
push
outsl
dec
imul
push
inc
popa
and
shll
test
push
sub
popa
mov
es
push
adc
push
dec
xorl
cli
and
insl
outsl
cmc
inc
sub
push
xchg
sti
push
push
dec
xor
or
ja
or
jmp
out
jmp
and
push
push
pushl
add
imul
frstor
add
or
sub
cmp
xor
adc
sub
sbb
adc
mov
push
repz
push
push
dec
add
dec
push
push
inc
inc
pop
ret
test
les
cmp
push
xchg
lock
mov
dec
movsb
xchg
xchg
bnd
jo
pop
stc
cmp
xchg
or
in
push
sbb
and
xchg
or
inc
push
sub
add
or
imul
xor
enter
sbb
mov
push
js
lods
sbb
mov
pushf
stc
push
sbb
mov
icebp
js
fs
xchg
sub
sbb
int3
data16
adc
mov
gs
adc
pop
sbb
mov
cmp
mov
arpl
hlt
or
adc
sbb
insb
sbb
mov
shlb
les
mov
enter
repnz
add
adc
popa
mov
loop
cmp
xor
sub
sbb
out
xor
or
movsb
sub
sbb
nop
pop
and
dec
repnz
xor
and
add
inc
pop
mov
and
lret
sbb
jo
fs
dec
sub
sbb
push
call
mov
inc
mov
pop
in
push
add
dec
or
xor
test
addr16
dec
outsl
jecxz
decl
push
insb
outsb
sbb
popa
out
push
sub
and
push
push
fldenv
cwtl
push
cmp
and
jbe
dec
xor
inc
outsb
ja
arpl
sbb
outsb
lret
test
inc
popa
sub
insb
jne
pushf
push
dec
xchg
andb
push
push
or
mov
cs
int
out
dec
fldt
jo
bound
sub
popa
addr16
insl
into
jb
mov
fists
mov
jne
aad
dec
jge
jge
mulb
insb
sbb
test
dec
outsb
pop
lahf
push
push
subl
mov
lret
and
repz
testl
cmp
popa
ss
cmp
adc
inc
sbb
pop
mov
push
push
and
lahf
sahf
imul
inc
fs
push
dec
jne
bound
lods
and
push
test
dec
pop
movsl
and
testb
outsb
mov
inc
add
rep
ja
or
inc
icebp
ret
add
sub
and
sarb
push
sub
fildll
adc
dec
pop
lea
push
push
jg
dec
bound
sbb
in
dec
and
outsb
mov
jne
stos
test
jnp
jl
cmp
inc
cmp
imul
or
dec
test
sub
xchg
cmp
xor
push
mov
test
and
or
lea
in
sub
repz
sub
dec
xchg
inc
dec
jmp
inc
out
jo
jae
mov
dec
inc
adcl
inc
enter
inc
cli
jae
sub
js
nop
hlt
dec
cmp
adc
push
add
out
mov
inc
in
fsts
xchg
inc
adc
hlt
sub
sub
cmp
fs
or
adc
sbb
xchg
or
push
aas
push
jne
jae
imul
mov
leave
xor
mov
dec
fdivl
popa
jne
je
sbb
fs
scas
inc
dec
xchg
dec
mov
dec
sbb
inc
jb
imul
mov
addr16
subb
jle
inc
je
xor
leave
inc
xchg
dec
xor
jo
mov
jbe
mov
jne
std
xchg
push
insb
pop
mov
cmp
xlat
inc
outsl
dec
lahf
push
adc
cmp
dec
push
mov
adc
mov
outsl
and
movsl
insb
jp
dec
mov
sub
dec
cmp
push
stos
inc
xor
dec
leave
inc
jo
cmp
and
ljmp
ss
adc
xor
shlb
movsb
sub
push
outsb
mov
out
jecxz
mov
inc
dec
movsb
aas
jl
push
outsl
popa
push
popa
idiv
push
adc
sub
or
xchg
test
sub
test
rorb
inc
xor
mov
cwtl
mov
not
bound
mov
cmp
dec
dec
inc
in
cmp
mov
pop
imul
pushf
inc
and
mov
or
insb
xor
outsb
cmp
pop
cmc
loop
and
fs
outsl
popa
pop
jecxz
addr16
mov
lret
adc
push
push
xchg
xor
and
and
jg
push
fisubs
or
adc
mov
rclb
sbb
sahf
dec
data16
cmpsb
push
cmp
mov
stc
mov
cld
jns
not
aaa
enter
sub
xchg
mov
test
dec
sahf
xor
xchg
pop
dec
es
aaa
imul
xchg
cmp
fcmovnb
mov
xor
mov
repz
jns
sub
out
or
jo
jbe
gs
dec
repnz
div
inc
and
lods
rcrb
shll
sub
inc
popf
push
push
in
pop
sbb
mov
inc
jne
outsb
movsb
sub
push
jae
call
or
dec
adc
sbb
dec
addr16
movsb
mov
and
xor
jne
inc
sub
lea
sub
inc
test
rcrb
cs
les
cmp
inc
out
jno
nop
daa
sbb
fs
jb
inc
xor
add
cmc
sub
or
lret
add
movsb
push
jo
dec
jb
cmp
lock
add
push
dec
dec
leave
fmulp
pushaw
pop
bound
jne
insb
xchg
pop
mov
movsl
and
jae
sbb
jmp
jno
pop
sarl
stc
sbb
sti
adc
stos
jno
call
jnp
fs
jo
jle
xchg
push
add
in
push
mov
mov
lcall
outsl
out
insb
mov
cmpsl
sbb
add
in
cmp
add
jae
xor
aam
dec
jp
xchg
pop
outsl
mov
push
dec
mov
ds
adc
jne
pop
out
add
adc
addr16
andl
sub
jo
xchg
adc
jle
adc
jo
sub
cmp
sbb
or
dec
sbb
aad
dec
push
ret
sub
stc
pop
mov
mov
jbe
insl
idiv
lret
gs
in
mov
mov
orl
shlb
call
dec
arpl
mov
scas
retw
shrb
sbb
jae
cs
adc
mov
or
dec
xchg
sub
jbe
and
sbb
imul
sub
inc
dec
enter
add
cmp
mov
int3
outsb
daa
test
and
adc
bound
and
mov
das
inc
cmpb
xor
adc
scas
inc
inc
and
inc
dec
in
push
mov
push
data16
jne
and
loope
cwtl
insl
popa
sub
sub
jne
inc
andl
fs
imul
adc
dec
or
imul
and
adc
pop
mov
add
mov
adc
adc
dec
pusha
add
cwtl
loope
call
cmc
or
add
push
xchg
inc
faddl
xor
std
int3
inc
add
jo
scas
je
add
or
sbb
adc
inc
dec
cmpb
icebp
subl
push
and
or
cld
inc
push
push
inc
xor
or
or
add
add
inc
dec
push
add
sub
movsl
int3
xor
push
sub
adc
adc
xor
add
test
or
fdivs
outsb
or
xchg
mov
les
int
sub
fldcw
in
jl
xchg
lods
repnz
xorl
inc
inc
and
enter
push
and
mov
outsb
incl
adc
sbb
and
or
movsb
lret
adc
and
adc
sbb
shrb
sbb
sbb
cwtl
xchg
orb
test
mov
xor
and
rolb
loopne
inc
adc
or
add
clc
adc
repnz
lds
add
orb
dec
cltd
adc
mov
adc
test
pusha
outsb
inc
sbb
fimull
push
or
sub
or
xchg
sub
or
xor
push
dec
movsb
js
mov
and
in
sub
pop
faddl
fs
xor
xorl
idiv
jo
jo
push
arpl
and
sub
add
sbb
cli
adc
dec
roll
jns
sbb
push
jg
add
sub
push
push
out
popf
adc
cmpsl
pusha
sbb
adc
fs
dec
imul
cmp
je
cmp
dec
arpl
popa
iret
test
add
inc
sbb
div
js
add
sahf
xor
out
add
loopne
add
mov
cwtl
scas
jmp
insb
aaa
lret
add
xor
dec
add
cwtl
int
das
push
orb
jl
mov
ja
fwait
in
mov
inc
add
jl
cmp
cmpsl
outsl
fimull
or
out
push
imul
das
loope
dec
inc
das
jge
je
loope
and
mov
idiv
repz
iret
jae
dec
push
push
insl
or
xchg
sbb
les
lods
add
mov
dec
call
inc
mov
jns
fmuls
inc
movsb
dec
popf
ret
sub
mov
and
test
arpl
popf
lds
and
enter
outsb
shll
push
cmp
xor
lret
xlat
jge
push
inc
cmovb
jns
pop
xchg
adc
cmp
pop
fwait
outsb
and
cmpsl
inc
pop
mov
pop
fucomi
xor
cmp
inc
jb
xchg
cmp
push
or
outsl
cmp
cli
jp
dec
jae
in
jecxz
xchg
xchg
arpl
cmp
push
sbb
int3
mov
fs
mov
outsl
jne
fs
mov
mov
in
pop
loopne
jbe
loop
ret
cwtl
sub
mov
jl
dec
add
fs
inc
dec
sarl
adc
loop
or
dec
push
sbb
push
jb
push
pop
leave
mov
movsl
movsl
sub
or
fisttps
jge
ljmp
cmpsl
cmp
xchg
shll
imul
pop
jns
sbb
inc
cmp
int3
jle
or
insb
cmpsb
int3
mov
pop
jge
add
and
dec
arpl
roll
fidivl
xor
hlt
sub
sub
push
inc
push
sbb
popa
dec
shl
mov
jne
push
pop
mov
int
lret
call
lods
mov
jge
arpl
enter
adc
mov
popa
stos
push
jl
jmp
stos
mulb
fs
js
mov
aas
sub
mov
sbb
insl
and
insl
scas
and
xchg
jge
loop
sbb
adc
loopne
adc
daa
xchg
imul
int3
xor
push
loope
push
push
cwtl
add
dec
loope
out
inc
xchg
test
int3
push
sbb
sbb
xor
scas
adc
je
call
or
add
imul
xor
push
jne
lods
mov
inc
hlt
lcallw
adc
dec
mov
or
inc
fxch
and
push
add
mov
sbb
push
inc
dec
sub
lock
xchg
movsb
loope
and
xchg
adc
pusha
jne
adc
sub
mov
hlt
or
inc
bound
push
push
or
or
ss
adc
sub
inc
fcompl
rolb
mov
test
mov
adc
mov
mov
jl
scas
xor
test
mov
push
xchg
lret
sbb
test
add
inc
adc
mov
add
stos
jns
add
sub
imul
inc
xchg
xchg
or
call
fcomip
jb
js
mov
push
dec
push
and
xor
xor
mov
and
lret
lahf
push
jmp
rcrl
call
loop
cltd
lock
adc
xor
dec
aas
movl
jl
aam
jne
je
push
inc
push
jmp
fdivrs
sti
imul
cmc
xor
cmp
insb
popf
lods
mov
inc
add
sub
sub
in
push
iret
or
cwtl
xchg
dec
dec
dec
push
and
push
lret
jmp
es
xlat
imul
or
and
xchg
push
mov
in
aaa
dec
je
shrl
inc
pop
and
push
pop
push
inc
cmp
das
lret
pop
arpl
iret
mov
test
xor
mov
int
xor
int3
mov
outsb
jns
shlb
mov
sbb
xor
cmp
cmpsb
or
sbb
data16
dec
jbe
loopne
jno
jmp
inc
push
push
inc
inc
mov
sub
xor
jge
ja
cs
xchg
outsl
lret
pushf
dec
gs
fs
mov
sub
je
into
ret
add
or
cmp
and
sbb
xor
mov
lret
inc
mov
insl
jns
nop
jae
push
or
push
in
dec
rep
sub
iret
lds
adc
jae
sbb
adc
sbb
xor
adc
push
and
scas
dec
repnz
jp
cwtl
or
xor
inc
ret
and
imul
push
popa
pop
test
mov
fs
divl
pop
inc
dec
push
mov
dec
popa
in
repz
lods
cmp
pop
aaa
imul
repnz
mov
fdivl
jg
shrb
mov
ss
add
jns
test
mov
xor
das
sahf
jle
gs
rcll
popa
insl
sbb
sbb
repz
push
mov
inc
fiadds
in
adc
inc
add
int
cmpsl
or
mov
repnz
sbb
dec
pop
movsb
ss
ret
lahf
ds
adc
inc
and
sub
push
inc
add
and
nop
ds
das
sub
sbb
and
dec
inc
or
dec
sub
andb
push
adc
push
test
and
lods
jl
push
jnp
lea
gs
sub
jbe
bsf
dec
dec
mov
jp
xchg
push
dec
xlat
lds
xchg
loope
xchg
pop
mov
cmp
or
and
adc
jbe
and
mov
fidivl
roll
call
jo
jae
es
sub
pop
dec
in
fidivrl
enter
loope
cmp
aad
sub
adc
cmp
xor
inc
pop
xchg
cld
sbbb
jle
cwtl
adc
outsb
add
push
and
in
xor
fs
das
push
pop
loope
movsl
or
pop
push
jae
inc
dec
mov
or
adc
mov
jne
fs
dec
jp
and
ljmp
aas
xchg
lock
loope
or
sub
xchg
xchg
loope
and
in
mov
xor
les
xchg
cmp
and
mov
sub
adc
inc
inc
jnp
dec
mov
imul
and
lock
xchg
or
inc
or
js
jmp
outsl
lcall
ljmp
pop
dec
inc
dec
push
mov
xor
lea
jbe
inc
mov
jo
push
push
scas
fisubl
movsl
dec
into
dec
call
xchg
sbb
push
sub
mov
popf
jmp
fs
out
rorl
call
addr16
push
jb
ficoms
or
xor
sub
xor
push
hlt
lea
outsb
sub
dec
mov
pop
cmc
cmp
cmpsl
jmp
push
adc
sbb
pop
inc
push
inc
pop
mov
adc
repnz
pop
lret
or
dec
add
or
lret
or
dec
add
xor
add
lahf
imul
or
lret
or
dec
pop
pusha
mov
cmp
sub
xchg
add
xor
pop
flds
jp
adc
xor
xor
xor
ficomps
shrb
add
mov
add
add
or
xor
adc
xor
add
test
fwait
add
add
sub
test
fwait
add
add
sub
add
add
test
lcall
cmp
add
or
xor
add
jo
mov
subl
cmp
les
dec
pop
movsl
push
pop
jbe
add
clc
rorb
roll
and
xchg
call
inc
cmp
mov
push
aaa
and
inc
add
mov
pop
mov
sbb
and
xchg
add
dec
imul
or
or
call
fcmovnu
lcall
ret
jge
mov
test
xor
push
outsb
aam
or
or
fsubp
jb
add
push
or
shrb
xchg
or
push
movsb
dec
add
imul
mov
adc
cmp
xchg
daa
mov
push
pop
adc
inc
add
dec
mov
inc
andl
mov
mov
inc
pop
out
adc
dec
dec
outsb
or
add
push
insl
or
sub
or
adc
mov
sbb
test
mov
aas
in
dec
pop
jl
in
inc
pop
inc
push
push
dec
push
pop
pop
push
lock
punpcklwd
mov
lds
and
push
dec
push
adc
pop
cltd
add
dec
dec
pop
dec
pop
lahf
ja
call
rorb
dec
inc
std
pop
pop
inc
arpl
pop
enter
inc
inc
adc
aam
xlat
pop
push
shrl
call
pop
inc
lahf
inc
dec
inc
inc
push
in
gs
cltd
sub
xchg
addr16
push
inc
dec
mov
cmpsl
out
sti
pop
pop
jle
mov
mov
jl
cld
and
mov
insl
pushf
pusha
out
or
imul
pusha
xchg
pusha
cmp
ficoms
bound
ficoms
fs
loope
gs
adc
popfw
loope
addr16
adc
push
cmp
adc
outsb
test
js
pop
dec
and
imul
sub
cmp
scas
mov
dec
adc
fs
aas
dec
xor
jbe
dec
adc
shl
cltd
js
push
out
xor
inc
push
cmp
inc
xor
lock
andl
inc
lods
xchg
inc
repz
adc
inc
dec
inc
cmp
cmp
fistl
jp
movsb
inc
fbstp
sahf
jbe
popf
in
test
dec
mov
or
outsb
xchg
inc
dec
outsb
in
inc
hlt
adc
adc
ja
bound
xor
jbe
sti
cli
jb
push
sbb
jl
cmp
jb
push
dec
rolb
data16
popf
ljmp
mov
sub
jbe
sbb
rcrl
arpl
push
test
sbb
inc
cmp
adc
test
jo
dec
pusha
inc
cmpb
shll
xchg
adc
mov
add
push
repnz
inc
push
outsb
jae
xchg
jne
dec
sbbl
mov
push
inc
and
xor
sbb
ds
and
pop
idivb
cmp
sub
mov
inc
adc
jne
mov
sub
or
pushw
adc
dec
inc
inc
int
rorb
pop
dec
leave
or
push
test
cld
dec
outsl
push
mov
push
pop
adc
sub
sbb
pop
inc
dec
arpl
adc
adc
xor
popf
jns
push
fldl
and
dec
outsl
jp
sub
cmovg
orb
sub
dec
mov
iret
inc
fisttpl
shl
aas
popa
rorb
sub
outsl
pop
test
mov
lahf
test
adc
jp
and
or
dec
int3
cs
inc
adc
xor
adc
cmp
inc
aas
test
mov
mov
sbb
jno
mov
icebp
aam
fiaddl
insl
test
inc
or
fnsave
bound
cmp
inc
inc
adc
sub
inc
adc
push
pop
mov
sbb
xchg
cmc
arpl
bound
pop
shrb
or
fs
clc
je
ret
jl
in
jmp
mov
inc
insb
inc
adc
leave
pop
scas
movsb
mov
mov
insb
loopne
pop
dec
jl
push
inc
out
push
inc
or
or
and
adcl
mov
inc
dec
jae
dec
mov
ret
sbb
jbe
and
push
push
jp
dec
ficompl
push
xlat
push
lods
fwait
int3
add
je
adc
jns
cmovb
ljmp
push
dec
and
call
mov
ret
out
and
adc
loop
adc
in
inc
xchg
lods
insl
movsb
sbb
ja
arpl
xor
adc
repz
arpl
mov
lods
pop
adc
xor
jne
mov
jns
mov
xchg
pop
mov
pop
cmpl
data16
imul
dec
stc
fnstcw
sbb
push
add
mov
or
inc
adc
inc
dec
pushf
leave
xorb
call
repnz
imul
mov
dec
outsl
es
push
stos
push
scas
insb
je
xor
xor
or
mov
fldcw
sets
inc
xor
or
push
inc
int
mov
sbb
pop
add
in
pop
sbb
bound
dec
xchg
jae
xor
and
push
aam
adc
mov
dec
sbb
fildl
sub
lret
int
inc
bound
jb
stos
inc
cmp
aam
cmp
movsb
sub
leave
ja
mov
inc
aad
fwait
add
cmc
push
add
inc
or
inc
in
xor
pop
in
xor
fisttpll
mov
jle
mov
test
sbb
mov
dec
cltd
aam
mov
cmpsl
into
cmp
aam
shrl
jg
sub
push
jae
inc
subl
sub
das
or
adc
dec
sub
call
or
or
push
outsb
gs
out
std
lea
or
pop
cmpsl
insb
shrb
rorl
stc
popa
mov
jns
leave
jnp
cmp
jno
les
sbb
push
xchg
inc
xor
fsubrs
jo
sbb
cmp
in
xor
repnz
jno
enter
or
adc
pushf
lods
push
mov
inc
lcall
xorb
dec
jl
adc
adc
dec
hlt
clc
and
bound
sbb
cmp
xchg
repnz
and
pop
outsb
hlt
xchg
add
outsb
stos
push
mov
filds
int
adc
sbb
xor
jne
arpl
or
leave
add
fadds
inc
icebp
out
cwtl
aad
aam
dec
clc
push
or
mov
lret
mov
mov
add
movsl
mov
js
cmp
fnstsw
movsb
adc
repnz
or
mov
adc
int
enter
cwtl
or
out
test
xlat
mov
or
popf
test
push
xchg
enter
movsl
int3
int
psraw
mov
sarb
fdivs
pop
addb
mov
pop
push
xchg
rolb
push
jle
adc
mov
xchg
rclb
pushf
push
xor
adc
pop
jno
pusha
add
xlat
xchg
jne
jmp
sub
jb
adc
push
cpuid
mov
jne
xor
jle
jb
xchg
inc
mov
repnz
adc
in
pop
xchg
in
or
fnstenv
inc
jp
cmp
imul
pop
adc
sbb
cmp
hlt
cmp
sub
sarl
mov
jns
out
je
sti
xchg
or
inc
in
jbe
fiaddl
das
sub
fildl
in
std
idiv
inc
mov
repnz
fildl
in
pushf
sbb
enter
sub
add
add
dec
inc
push
push
dec
push
dec
icebp
out
cmpsl
fs
mov
mov
dec
push
dec
scas
jnp
fs
test
xor
popa
push
dec
push
dec
xor
cmp
cs
in
and
xor
xor
push
fsub
movsb
and
adc
or
dec
addb
lahf
insl
sbbl
push
subb
lcall
and
pop
add
push
fs
outsb
sti
and
xorl
ljmp
cmp
xor
test
dec
fisubrl
adc
mov
fs
sub
lahf
int3
sti
jo
lahf
sbb
or
push
sbb
mov
adc
dec
daa
dec
enter
add
repnz
sbb
scas
add
and
xchg
loop
pop
dec
loopne
lea
mov
mov
inc
bound
or
mov
add
cmp
or
add
mull
enter
adcb
les
pop
inc
pop
sub
sbb
adc
insb
test
jo
or
push
pushf
inc
insb
and
adc
test
pushf
sbb
push
sub
pop
inc
sub
out
dec
mov
iret
mov
hlt
add
sbb
or
rclb
cmp
fldcw
cmc
test
add
mov
mov
movsb
push
mov
pop
mov
loop
in
pop
sbb
or
jl
jo
in
and
jl
mov
push
js
adc
stos
pop
cmpsb
jmp
clc
adc
das
jbe
adc
xor
int
jmp
add
dec
sbbl
ss
add
test
cwtl
add
bound
psubusb
ret
add
and
subb
sbbb
adc
add
mov
add
leave
adc
jmp
enter
xor
pop
jne
jbe
cltd
jae
pop
aad
lods
mov
outsb
inc
sahf
xor
test
imul
out
and
cmp
adc
rcl
mov
dec
pop
js
xor
xor
and
cs
sbb
sub
lahf
cmp
xor
imul
sub
ret
notl
pop
mov
push
imul
outsb
and
push
movsb
jo
xor
mov
enter
je
mov
and
jo
fistpl
adc
das
stc
fisubl
mov
or
inc
popa
je
fs
inc
shll
cmp
bound
imul
clc
addr16
rcrl
mov
lea
bound
mov
pop
pop
clc
sidtl
or
and
push
in
adc
aaa
adc
xor
push
rclb
hlt
mov
sbbl
mov
inc
daa
aad
sub
push
repnz
add
add
push
out
cld
addl
dec
dec
dec
sahf
add
push
push
push
push
add
push
pop
pop
pop
popa
and
arpl
addr16
imul
insl
outsb
outsl
jo
and
jne
ja
jns
push
xor
xor
xor
ss
cmp
sub
test
pusha
inc
jg
fwait
mov
call
ss
jecxz
nopl
adc
jbe
push
lret
adc
and
xchg
and
mov
sbb
fcomi
adc
add
push
mov
fadd
mov
or
xor
push
add
push
call
mov
pop
pop
pop
clc
loopne
xor
and
inc
and
or
pop
jl
inc
cmp
je
pop
sub
jo
mov
add
add
push
cmp
shlb
int3
mov
mov
leave
mov
mov
add
inc
jmp
movd
fs
loopne
popa
ret
pusha
mov
pop
mov
repnz
adc
sar
sbb
or
jp
jp
jns
testb
icebp
adc
dec
lock
add
or
ss
sbb
pop
sahf
outsb
push
sub
add
cld
insb
and
sub
inc
cmp
push
add
sbb
pop
js
por
cmp
xor
add
xchg
cld
lods
shl
je
sarl
or
cmp
jne
fisttpll
jbe
xor
adc
mov
inc
fnsave
cmc
mov
inc
cli
push
push
repnz
dec
call
jl
out
inc
dec
pop
test
pop
rcrb
add
xor
jecxz
addr16
cwtl
dec
nop
jle
mov
sub
mov
xor
sbbl
or
jmp
sub
cmp
xor
pusha
push
jmp
or
aas
add
jmp
cmp
out
outsb
add
and
movl
add
fsubs
mov
sbb
scas
jne
in
das
jecxz
pushf
aam
pop
insl
cmpl
push
rorb
sub
xchg
push
push
sbb
cmp
insl
mov
loope
lods
sub
rorb
adc
mov
or
dec
inc
inc
and
xor
sub
and
sbb
adc
mov
add
add
push
in
nop
das
add
fadd
ljmp
adc
push
fisubs
dec
and
sarl
jo
push
or
and
nop
nop
xchg
movsl
pop
xchg
or
sbb
fs
or
dec
sub
pop
pop
push
mov
push
mov
push
jge
ret
dec
or
dec
in
dec
movsb
sti
and
sub
outsb
daa
jb
jge,pn
dec
inc
sbb
xor
xchg
arpl
dec
hlt
loope
insb
mov
in
mov
in
lcall
fcoms
sahf
popa
lods
stc
mov
ja
jnp
xchg
cs
and
movsb
arpl
out
or
xor
push
cld
mov
cs
inc
pop
test
sub
inc
gs
push
cs
jl
imulb
aad
fstps
lods
fmull
cld
mov
sbb
mov
push
fs
jbe
test
fs
pop
and
js
or
sahf
push
cmp
inc
pop
into
pop
xchg
dec
clc
mov
jo
out
int
popa
mov
sbb
movsl
inc
mov
mov
ds
pushf
xor
inc
inc
repnz
in
imul
dec
pop
iret
cmp
push
xchg
inc
or
cld
testb
jne
je
fwait
and
imul
daa
movsb
jg
adc
jbe
insb
imul
jmp
stc
pushf
xchg
les
lret
and
push
dec
mov
jmp
fmuls
arpl
int3
out
push
sahf
mov
inc
mov
ficomps
fdivs
mov
dec
inc
mov
int
mov
sub
movsb
pop
fimuls
and
aad
xchg
sub
xor
dec
xchg
xor
pop
fwait
bound
dec
jns
mov
xchg
push
xor
enter
mov
push
add
js
insl
pop
xor
sub
mov
and
ret
mov
mov
push
sub
sbb
sub
sub
xchg
xchg
pop
cmp
dec
jle
mov
jnp
xor
cmpsl
pushf
sar
mov
je
cmp
mov
push
and
push
outsl
inc
sub
xchg
stos
inc
push
ss
cmc
inc
sbb
les
pop
mov
movsl
repnz
neg
icebp
xlat
lret
lcall
roll
lods
pop
daa
jne
mov
insl
add
test
add
jne
push
pop
movsl
ss
enter
lret
ficompl
sbb
push
xor
pop
mov
mov
push
popf
cmp
mov
js
and
adc
fs
push
dec
dec
lock
pop
xchg
in
lcall
test
iret
inc
pop
dec
push
and
out
je
xor
sbb
data16
sbb
outsb
movsb
dec
lahf
jns
lods
fisttpl
gs
mov
inc
addl
mov
sub
or
push
mov
mov
inc
dec
jne
adc
insb
roll
pop
sub
out
arpl
inc
and
mov
imul
push
and
push
adc
hlt
xchg
ljmp
mov
xchg
push
mov
jno
inc
outsb
jb
nop
xchg
dec
ds
push
dec
and
loop
dec
sub
call
pushf
and
push
pop
jge
mov
daa
xor
pop
repz
shlb
pop
es
mov
repnz
shr
lahf
inc
sti
jb
mov
imulb
mov
insb
push
loopne
leave
and
adc
dec
xor
outsl
sarb
pop
aam
push
jns
push
lahf
adc
mov
sub
pushf
stos
in
imul
and
outsl
mov
pop
in
daa
jmp
sbb
sub
fnstsw
mov
mov
cmpsl
adc
in
pop
inc
mov
stos
gs
xchg
imul
xchg
out
dec
pop
fidivl
loope
xchg
push
jae
lds
jle
jmp
sub
mov
shlb
call
loopne
cmpsl
mov
push
and
iret
mov
sub
pop
rorl
scas
les
js
or
dec
data16
push
das
data16
xchg
push
enter
cli
xchg
sbb
cmp
jno
sbb
cltd
nop
adc
iret
xor
pop
xor
stos
mov
sbbb
inc
add
aad
inc
add
dec
push
push
dec
pop
ret
mov
subl
jae
es
insl
mov
sub
clc
mov
xchg
and
loop
jg
xchg
push
loop
cs
jne
adc
and
sub
xlat
lods
mov
pop
inc
clc
call
scas
or
mov
scas
jae
enter
push
sub
jp
push
push
xchg
and
xorb
mov
mov
xchg
or
adc
in
fmuls
xchg
mov
mov
push
and
xor
sub
and
cld
repz
in
jb
and
dec
les
mov
js
insb
dec
pusha
xchg
push
and
xor
sbb
adc
inc
hlt
repnz
xchg
fsubl
rclb
movsb
cwtl
mov
pop
and
dec
cmp
sub
sbb
or
cld
icebp
and
inc
in
mov
adc
mov
addb
push
adc
dec
xor
sub
and
mov
lock
dec
enter
lods
xchg
pushf
and
adc
dec
dec
inc
xchg
xor
and
sbb
and
out
add
dec
fcoms
mov
sbb
and
jo
pusha
push
mov
and
dec
sbb
adc
or
clc
out
inc
in
fmull
mov
movsb
xchg
cwtl
and
push
dec
cmp
sub
sbb
or
inc
in
lock
adc
and
dec
mov
mov
js
insb
adc
push
dec
dec
xchg
cmp
sub
mov
in
sub
dec
enter
mov
pushf
mov
fs
pop
xchg
dec
and
xor
mov
adc
and
inc
hlt
jmp
loopne
aam
enter
mov
js
insb
and
push
inc
mov
adc
sbb
or
inc
lock
ljmp
mov
dec
nop
xchg
andb
inc
push
inc
and
dec
sub
and
adc
or
insb
jmp
fcoms
les
dec
movsb
xchg
cwtl
and
cmp
sub
pop
and
lock
enter
lods
and
dec
mov
pusha
push
mov
cmp
sub
and
dec
add
clc
out
fmuls
mov
mov
xchg
andb
inc
pop
push
mov
and
dec
and
cld
out
in
fmull
mov
and
adc
push
dec
inc
xchg
xor
sub
mov
in
lock
and
dec
enter
mov
xchg
orb
dec
cmp
adc
mov
in
mov
enter
enter
test
mov
dec
pop
xchg
push
and
xor
mov
adc
inc
loopne
or
xchg
mov
mov
je
fs
dec
dec
xchg
cmp
xor
mov
cld
loop
in
cmp
adc
and
dec
mov
inc
mov
and
dec
dec
in
dec
sbb
adc
add
clc
loope
dec
mov
int3
and
dec
mov
pushf
and
adc
dec
sub
and
adc
or
insl
loopne
or
and
dec
enter
test
pushf
mov
pusha
dec
push
xchg
inc
and
inc
and
mov
adc
filds
lock
icebp
and
inc
mov
mov
insb
xchg
pusha
and
cmp
adc
and
clc
fiadds
mov
adc
and
dec
lods
xchg
mov
js
insb
adc
dec
cmp
xor
and
mov
fldl
rorb
xchg
mov
cwtl
mov
insb
xchg
pusha
and
cmp
adc
lock
int3
mov
and
dec
xchg
xchg
mov
jl
je
mov
and
dec
xor
sub
sbb
adc
hlt
fildl
rorb
xchg
mov
nop
mov
dec
inc
xchg
xor
sub
mov
xchg
fsubl
rolb
mov
dec
xchg
xchg
mov
jl
jo
mov
dec
and
dec
xor
or
outsb
fldcw
pop
or
nop
and
dec
je
push
inc
mov
sub
dec
adc
jae
enter
lods
dec
mov
inc
jl
mov
and
dec
xor
or
inc
xlat
in
mov
adc
and
dec
mov
test
cwtl
inc
mov
adc
dec
cmp
xor
and
adc
mov
fsts
and
dec
mov
test
cwtl
inc
mov
push
dec
cmp
adc
mov
aad
lock
and
dec
enter
mov
je
fs
dec
dec
xchg
cmp
xor
mov
divb
in
adc
add
and
aam
call
xchg
les
mov
test
mov
loop
sbb
xor
scas
out
enter
jne
sbb
xor
gs
or
jae
xchg
or
and
imul
xchg
pop
push
xor
bound
testb
inc
sub
leave
push
hlt
inc
pop
in
sbb
lea
inc
inc
dec
stc
push
push
dec
adc
push
sub
sbb
movsl
sbb
xor
or
pop
dec
dec
jecxz
dec
xchg
push
mov
outsl
and
mov
dec
and
push
push
in
push
push
or
sbb
sub
push
and
mov
cmpsb
pop
inc
xor
das
mov
rcll
cmc
push
cli
push
and
push
inc
dec
out
std
mov
scas
sbb
xchg
inc
or
dec
jo
push
inc
inc
shlb
sub
xor
dec
dec
pop
ja,pt
push
or
cmp
dec
push
sub
dec
insl
adc
adc
sub
and
push
mov
je
movsb
adc
and
xor
push
jmp
adc
inc
push
dec
adc
jnp
mov
xchg
loop
push
cmp
add
inc
sub
lret
sbb
jecxz
stos
push
adc
sbb
hlt
cmp
in
call
ficompl
adc
or
mov
sbb
dec
aas
aam
mov
dec
dec
push
nop
mov
push
inc
dec
cltd
dec
push
jmp
cmpsb
or
pop
push
push
xor
adc
pushf
cld
inc
dec
imul
sub
lcall
sbb
cmp
push
dec
cmp
inc
dec
cmp
jl
adc
push
pop
wbinvd
adc
mov
lods
sub
dec
lea
sbb
dec
dec
adc
ss
sbb
ds
lds
push
ss
adc
pop
shl
sub
es
push
pop
sub
hlt
inc
lret
xor
sbb
sbb
or
dec
sbb
or
cwtl
xor
mov
dec
inc
es
mov
lret
cltd
ds
mov
jae
adc
mov
or
jl
movsl
xor
dec
call
sbb
adcl
push
fnsave
sbb
xchg
xor
add
sub
pop
or
jno
or
dec
jl
stos
mov
mov
iret
das
push
imul
fstps
push
lods
xchg
lret
push
pmullw
or
dec
xchg
pop
xor
decb
mov
sbb
jo
dec
mov
std
addr16
dec
pop
jle
dec
loop
lods
cmp
inc
fcoml
addl
inc
dec
js
icebp
dec
xor
xor
cmp
adc
xor
or
or
pop
jns
adc
dec
mov
fs
sub
jl
xchg
dec
mov
xchg
dec
xor
nop
adc
jbe
sbb
mov
mov
push
lea
push
sahf
dec
or
sbb
push
sbb
jo
dec
xchg
icebp
dec
mov
or
sbbb
lods
cmp
je
mov
adc
aad
ja
push
test
rcrl
out
cmp
inc
pop
xor
xor
push
imul
and
sahf
outsb
sub
push
pop
repz
je
orb
adc
inc
movsb
sbb
pop
sbb
jns
or
inc
and
and
bound
add
cli
adc
pop
lcall
inc
sub
ljmp
sbb
sbb
push
xchg
orl
inc
sub
cmp
fs
movsb
fstpt
mov
sbb
inc
jge
std
xchg
or
aam
pop
call
adc
dec
and
dec
jmp
inc
stc
dec
test
and
add
lods
sbb
xor
rorb
dec
je
add
cmp
enter
or
pop
lahf
das
incb
or
pop
jecxz
repz
sub
adc
out
lret
xor
lds
cmp
xchg
and
xor
in
push
sbb
push
sbb
shlb
adc
adc
push
inc
loop
mov
out
dec
jp
out
movsb
inc
push
ret
sbb
pop
inc
test
aaa
sub
mov
inc
push
sbb
inc
xor
sbb
cmpsl
sub
inc
popa
mov
movsl
xor
xchg
cmp
int3
mov
push
cmp
lahf
jp
inc
sbb
push
aaa
inc
sub
jl
sbb
push
add
lcall
leave
dec
fistpl
sub
dec
adc
fbld
inc
and
jmp
inc
inc
scas
xor
shrl
inc
pop
push
jmp
inc
jbe
push
pop
add
test
sub
inc
push
ja
movsl
and
dec
outsl
movsb
or
sbb
pop
sarb
sub
mov
mov
inc
xor
imul
mov
adc
imul
outsb
sub
ficompl
ljmp
inc
lods
xchg
pop
dec
out
js
out
inc
insl
and
movsl
push
je
int
adc
dec
dec
add
push
or
sbb
dec
fisubl
dec
mov
pushf
sbb
inc
xchg
jbe
sbb
xor
cs
pop
pop
sbb
jmp
lds
mov
and
shll
sahf
or
aaa
push
cld
push
stos
push
adc
popl
xor
aaa
ss
xor
xor
into
sbb
movsb
mov
sahf
jb
sub
pop
jb
adc
lods
dec
mov
mov
dec
scas
in
inc
xchg
dec
int
scas
mov
cmp
push
adc
repz
adc
sub
and
lahf
ret
adc
ds
lcall
dec
push
push
cld
outsb
js
pop
and
adc
jg
xor
and
in
sbb
sbb
lret
jno
sbb
push
in
inc
imul
sub
es
pusha
das
imul
test
add
es
jbe
cli
mov
std
jl
mulb
pushf
add
xchg
dec
xchg
push
pop
xlat
mov
dec
sbb
cltd
or
dec
push
aam
sahf
incl
shlb
push
push
out
pop
fimull
xor
insl
and
iret
stos
pop
push
scas
xor
xchg
inc
push
clc
xor
fnstcw
aaa
dec
and
xchg
pop
mov
in
mov
inc
jg
movsl
or
adc
aam
cli
or
push
dec
in
and
movsb
add
pop
dec
push
inc
jl
jg
xchg
test
and
push
fwait
sbb
call
ficompl
push
push
and
mov
dec
mov
and
in
inc
dec
enter
jnp
xor
ss
xchg
push
cmp
inc
or
fdivrs
or
pop
push
inc
xor
sbb
aam
mov
inc
mov
jo
sbb
or
rcrl
mov
cmpsl
fnstcw
dec
sub
cmp
jge
pop
push
xchg
sbbb
sahf
dec
lods
shll
push
xor
mov
outsl
dec
mov
or
cld
cmp
mov
and
and
adc
movsl
popa
lcall
dec
adc
and
fs
xchg
sub
inc
adc
in
pop
push
jge
sahf
xchg
dec
adc
push
loopne
lahf
imul
push
mov
jno
ds
pop
sub
dec
and
and
sub
and
ds
dec
jb
inc
and
push
out
push
ljmp
dec
aaa
dec
leave
pop
mov
or
inc
dec
sub
inc
push
imul
sub
fidivs
lods
dec
mov
push
mov
out
out
mov
ja
lcall
push
andb
dec
inc
dec
dec
loop
push
xchg
adc
push
shlb
push
or
dec
test
aas
cmpsb
sbb
xor
test
push
sbb
xchg
test
jge
dec
push
push
dec
imul
hlt
aad
cmp
mov
sub
cmp
fnstcw
fisubrl
inc
sbb
xchg
cmpsb
pop
dec
sbb
popf
xor
in
push
mov
mov
dec
and
xlat
sub
dec
nop
loop
imul
stos
sbb
push
aas
into
sbb
dec
andl
xor
icebp
mov
push
xchg
sbb
dec
xor
xor
cmp
mov
sbb
pop
imul
cli
or
js
test
xchg
xor
mov
lret
dec
ret
or
push
cwtl
and
sbb
inc
cmc
out
xchg
out
mov
sbb
mov
cwtl
jb
rorb
daa
lret
dec
push
sub
cltd
fldt
pop
es
les
sbb
mov
pop
sub
push
pusha
stos
repz
dec
dec
adc
lock
mov
and
mov
mov
fucom
mov
adc
mov
add
push
xchg
cmp
sub
or
sub
inc
dec
xchg
sbb
enter
rcrb
sub
leave
rcr
insl
sbb
into
dec
mov
sbb
mov
push
push
aad
or
rcrl
adc
stc
jmp
mov
xchg
movsb
push
loop
push
jbe
push
push
sbb
ja
lret
pop
mov
xchg
das
xchg
outsb
jl
jb
jle
sbb
xchg
push
sbb
and
inc
push
dec
adc
rcrl
cmp
inc
cmp
add
dec
sub
bound
cmp
inc
dec
xchg
sbb
push
fdivs
xor
push
inc
pop
mov
inc
adc
test
jb
sbb
pop
or
pushf
pop
outsl
xor
and
dec
pop
fcmovnb
gs
push
lcall
jecxz
roll
jecxz
rcll
dec
mov
mov
jno
dec
or
adc
sbb
popa
add
inc
test
and
mov
and
dec
sbb
fldl
push
nopl
sub
cmp
fldcw
push
push
sub
stos
aas
aad
int
cmp
jle
and
mov
ret
insl
je
lret
mov
adc
dec
dec
push
repnz
incb
insb
std
popa
sbb
movsb
xor
inc
jnp
ds
mov
pop
mov
movsl
in
push
icebp
push
jae
dec
or
jo
nop
fsubr
dec
adc
imul
pop
inc
lock
inc
xchg
xor
dec
inc
fs
lds
or
and
out
jp,pt
es
loop
rcrb
pop
out
or
push
push
push
push
pop
sub
pop
xor
and
dec
ret
and
dec
dec
mov
and
mov
int3
cmpsl
mov
xlat
pushf
jmp
adc
popa
ja
cmpsl
lret
popa
stos
inc
rorl
lock
inc
xor
movsb
sub
mov
sbb
bound
xor
adc
cmp
fptan
lods
loop
les
jns
cmpsl
or
xor
cltd
sbb
and
push
add
and
inc
sbb
push
dec
ja
mov
decl
add
or
xor
adc
push
cmp
call
sub
pop
into
ja
adc
imul
imul
fcoml
sub
in
ja
push
or
stc
pop
js
out
repz
push
push
in
adc
mov
push
dec
arpl
push
dec
xchg
push
push
loope
xor
dec
sbb
push
mov
dec
dec
jbe
sub
mov
mov
pop
test
adc
cwtl
rclb
pop
push
push
adc
dec
push
sbb
loop
shrb
pop
lret
dec
or
out
ret
shrl
adc
je
sub
adc
addr16
inc
dec
push
jne
or
aam
inc
pop
mov
notl
jb
inc
test
mov
sub
xchg
aaa
and
cmp
adc
cmp
lock
aas
adc
sti
add
sbb
xchg
or
xor
lods
jnp
and
pop
and
inc
repnz
insb
sbb
mov
or
mov
push
inc
push
sbb
xchg
pushf
pop
aam
adc
insb
cmp
mov
je
and
dec
sbb
adc
sbb
mov
ficompl
or
push
pop
inc
dec
inc
jl
mov
push
call
cltd
mov
pop
xor
fs
adc
inc
xchg
sub
arpl
lcall
push
inc
xor
push
cmp
fstp
sub
push
mov
insb
sbb
and
iret
push
imull
stc
push
xchg
push
cltd
and
pop
jne
jp
dec
mov
jo
and
loop
mov
out
pop
push
or
mov
push
or
xchg
insb
lds
add
aad
je
lds
std
or
mov
pop
pop
cmp
cmp
out
inc
and
jmp
mov
inc
and
out
jle
in
push
cmp
js
mov
adc
and
testl
add
cmp
inc
xchg
and
and
es
sub
sub
das
xchg
pop
aas
and
daa
jle
pusha
bnd
nop
and
cs
popa
mov
ret
call
repnz
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
cs
inc
mov
sbb
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
adc
test
sbb
in
mov
mov
push
sbb
cs
or
and
enter
js,pn
and
enter
and
sbb
and
and
enter
and
in
in
int3
adc
add
aam
inc
dec
inc
pop
sbb
sbb
test
sbb
pop
ret
or
jge
jp
outsl
test
push
push
movsl
dec
inc
add
push
dec
sbb
push
jl
add
dec
sbb
and
jno
sub
data16
adc
ret
sbb
outsb
or
inc
ffree
enter
push
nop
aaa
jno
mov
push
push
stos
or
push
xor
add
jo
arpl
outsl
cmpsl
push
mov
jbe
leave
pop
dec
ja
lds
push
sbb
sbb
stos
popf
cmc
outsl
out
hlt
jns
push
lds
xor
mov
and
nop
add
add
adc
dec
leave
add
movsb
or
cwtl
add
bound
xor
xchg
outsb
cmpsl
or
mov
sub
bound
insl
fs
jg
in
jae
adc
and
push
gs
push
lret
in
lret
adc
ss
adc
test
cmp
pop
xchg
scas
sti
sbb
cmp
push
inc
mov
adc
nop
clc
xor
pop
or
sub
inc
repnz
mov
cmp
dec
dec
aam
push
xor
aaa
or
push
mov
cwtl
xchg
mov
test
js
fldenv
orb
push
and
dec
inc
xchg
cmp
xor
mov
adc
add
lahf
push
xchg
sbb
adc
add
cld
push
add
dec
call
inc
mov
adc
and
dec
mov
inc
pushf
nop
mov
dec
jo
push
pop
adc
inc
dec
inc
mov
and
aam
sbb
adc
or
add
xchg
fsubs
rolb
mov
dec
pushf
xchg
xchg
and
adc
insb
dec
push
inc
pop
pop
mov
dec
and
dec
cmp
and
mov
dec
adc
mov
add
adc
shl
or
xchg
loopne
push
fmul
adc
or
mov
pushf
xchg
xchg
and
adc
dec
fs
pop
and
mov
or
mov
or
hlt
xchg
adc
fmul
or
test
les
inc
lods
test
mov
dec
mov
je
mov
dec
adc
adc
or
popf
popa
sub
adc
insl
sti
cmp
int
push
jg
cmp
and
fnsave
mov
mov
push
imul
push
lret
push
mov
out
lcall
sub
arpl
insw
mov
je
inc
sbb
push
adc
adc
mov
ret
adc
les
adc
adc
adc
and
adc
icebp
pop
and
push
les
mov
fwait
mov
inc
sbb
bound
arpl
inc
data16
call
push
mov
mov
xchg
dec
and
arpl
push
inc
mov
mov
mov
inc
mov
adc
jp
lcall
nop
fwait
jnp
nop
jmp
xor
cs
orl
xchg
or
int
insl
cmp
imul
cld
out
mov
or
push
movsb
sbb
jg
fisttpll
and
ja
jp
int3
sub
jae
into
mov
dec
xlat
jns
dec
je
xchg
jmp
or
xor
cmp
xlat
and
insl
xchg
ret
sub
or
aam
in
inc
dec
test
shl
das
sbb
ret
cmp
add
ljmp
or
mov
je
inc
outsb
dec
jne
xlat
clc
in
popf
cmp
adc
mov
sarb
or
mov
and
jg
rclb
xor
adc
out
push
xchg
sub
xchg
or
push
jo
and
mov
sbb
lods
push
sbb
ja
les
or
leave
sbb
mov
cmp
fs
shr
xor
push
dec
arpl
hlt
sahf
sub
pop
xor
data16
jmp
push
push
das
cmpsl
xlat
inc
clc
xchg
push
jne
dec
out
enter
sub
mov
data16
loopne
or
jb
fdivl
xchg
adc
insl
jb
jbe
xor
mov
inc
lahf
pop
leave
dec
dec
popa
or
lods
insl
sub
ds
xchg
pop
and
push
dec
test
push
and
push
cmp
inc
int3
xor
sbb
and
sub
cmpsl
adc
das
shll
push
movsl
decl
dec
movsb
lahf
pop
xchg
jl
cmp
pop
sub
sbb
push
lods
out
lret
pop
movsl
jecxz
pop
in
test
stos
xor
xor
jns
cmp
cmp
pop
addl
imul
out
movsb
je
and
xor
mov
inc
outsl
je
jecxz
fsubl
push
aaa
imul
filds
and
jo
sbb
insl
xor
adc
or
rcrl
seta
adc
mov
gs
sbb
jl
push
pop
out
mov
sbb
sti
push
adc
bound
rcll
pop
or
dec
and
inc
mov
int3
popa
test
orb
push
negb
push
push
je
roll
shlb
sub
scas
dec
test
jge
sbb
ret
and
fldcw
and
rcl
mov
inc
mov
jne
pop
pop
dec
mov
xchg
pop
xor
mov
mov
rcll
xor
scas
or
mov
clc
and
daa
fistpll
cs
loop
loopne
cmp
push
cmp
pushf
and
shll
cmpsl
mov
and
sub
jb
imul
ret
xor
xor
and
jge
mov
je
ret
inc
xor
fs
push
pop
ror
inc
nop
adc
cltd
jge
mov
rcl
das
dec
push
addr16
cmp
dec
sub
lahf
lret
insb
jmp
dec
cs
test
adc
imul
andb
lock
sub
mov
add
add
aaa
enter
push
cmp
scas
xchg
jge
js
inc
jne
lret
das
add
pop
push
push
shll
je
sahf
mov
pusha
dec
inc
jbe
dec
xchg
cld
adc
dec
push
sarb
mov
sub
dec
inc
repnz
popf
cwtl
and
gs
outsl
loop
cwtl
xor
pop
and
pop
sbb
sub
pushf
cmp
in
dec
dec
cld
adc
scas
iret
adc
sub
cmovs
roll
mov
xor
push
notl
test
jnp
and
jg
push
push
fwait
pop
jp
push
and
testb
fdivrl
push
inc
xchg
push
repz
dec
out
into
dec
cs
aas
pop
dec
cli
sbb
push
pop
int
cmpsb
mov
ss
push
add
sbb
dec
outsl
fisubrl
sub
adc
adc
gs
mov
and
mov
popa
ja
lds
je
stos
movsl
pop
adc
inc
jae
sub
mov
outsl
jnp
sub
push
pop
into
fldl
int
sbb
pushf
scas
dec
pop
lds
out
ss
jb
je
ret
imul
dec
jbe
dec
jne
fucomp
and
mov
cmp
movsb
popf
lds
fimull
aas
sbb
pop
jb
and
das
jl
in
sub
repz
and
in
je
gs
cmc
cmpsl
jbe
push
xor
xor
push
xchg
shlb
dec
dec
sarb
pop
dec
inc
stos
xor
cli
cltd
dec
and
xchg
xchg
mov
jge
dec
insl
pushf
imul
adc
mov
in
je
movsl
mov
js
push
dec
push
dec
push
outsb
push
xchg
stc
test
cmp
push
test
mov
xchg
cmpsl
daa
jg
jbe
cli
push
je
rcrl
imul
jo
inc
sub
xor
sub
inc
popf
sub
mov
mov
clc
xchg
je
in
mov
and
popf
aad
movsb
cs
ror
movsl
div
push
popf
push
enter
sub
out
inc
andb
or
idivl
bound
ret
mov
cmp
push
ljmp
cmp
xor
repz
mov
adc
pop
inc
mov
xchg
shlb
repnz
sahf
dec
xchg
xchg
data16
xor
insb
stos
mov
nop
and
and
pop
fs
sbb
sub
ret
lods
ja
shlb
xor
stc
or
sub
push
dec
call
jae
dec
adc
mov
mov
cmp
sub
dec
inc
leave
sub
out
xchg
test
rcll
xlat
insb
shlb
jl
push
pop
cwtl
stos
test
and
add
arpl
lahf
loop
push
inc
push
out
outsl
xlat
int3
iret
xor
js
and
ret
pop
lret
inc
popa
ja
sti
inc
mov
sbb
push
and
dec
push
cld
das
data16
cmpsb
movsb
jp
ret
sbb
jae
lahf
imul
fsub
and
imul
cs
xchg
xchg
jle
lret
rcl
xchg
pop
cld
mov
lahf
or
adc
pop
data16
cwtl
xchg
scas
and
mov
mov
mov
mov
add
dec
sub
pop
jne
jno
scas
insb
push
xchg
sub
sbb
sbb
or
lea
movsl
mov
mov
sahf
push
jg
fbstp
mov
sub
push
sub
xor
jne
call
ret
jle
mov
mov
mov
xor
adc
popf
or
mov
int
or
dec
adc
mov
mov
arpl
sub
lods
sbb
xor
pop
fstpl
fidivrs
js
rclb
xor
decl
ficompl
mov
pop
jge
xor
pop
push
xchg
shlb
cld
xchg
fmulp
pop
shl
popf
and
test
mov
push
lahf
popf
ds
jg
inc
inc
fnstsw
sub
cmpsl
test
push
sbb
shr
repnz
cwtl
adc
pop
outsl
or
out
daa
adc
xchg
inc
jg
daa
sub
mov
aaa
cmp
std
jmp
dec
cmp
sub
dec
lret
add
adc
aad
js
imul
add
in
stos
sbb
lea
mov
mov
imul
and
in
dec
pushl
adc
jle
jae
push
dec
push
lcall
jbe
les
ljmp
jns
idiv
sarl
shlb
xchg
fdivs
mov
dec
cmp
cwtl
imul
rcll
fidivs
sar
dec
adc
jmp
dec
clc
mov
sbb
orl
xor
cmp
inc
xor
xchg
sub
clc
sarl
xor
insl
fs
push
jo
inc
int3
test
jns
gs
fsub
jb
dec
adc
mov
jo
std
sub
movsl
fs
imul
pop
clc
push
dec
and
sub
stc
lods
test
adc
adc
jmp
or
imul
gs
and
jge
push
dec
or
pop
inc
cmp
daa
dec
fmul
cli
rcrb
test
sbb
nop
mov
jp
stc
dec
pop
jbe
and
or
arpl
jecxz
pop
xor
lock
je
mov
xchg
mov
popa
xchg
gs
xor
je
add
shrb
mov
or
sbb
inc
sub
popa
mov
or
rcrl
adc
frstor
sbb
or
dec
fistpl
pop
test
add
push
scas
dec
jmp
cwtl
sbb
xor
push
add
fs
mov
cwtl
loope
or
sbb
stos
mov
pop
xchg
jmp
addr16
xor
inc
repnz
mov
inc
jo
cmc
fmull
jb
or
mov
or
movsb
jns
or
adc
mov
sub
or
cmp
push
adc
mov
jno
out
js
dec
je
addr16
lret
test
xor
jge
loopne
cmp
jge
or
sbb
add
insl
lret
cld
lock
imul
pop
mov
inc
sbb
sub
sbb
pop
test
loop
adc
sbb
std
test
jle
bound
pop
xchg
fstpt
lret
scas
mov
mov
jae
jp
pop
in
lods
inc
in
js
mov
in
cmp
out
and
cmpsl
lds
sbb
movsl
stos
imul
or
mov
imul
xor
adc
fidivl
lret
fsubl
xchg
ljmp
and
je
mov
dec
xchg
scas
inc
int
enter
mov
mov
pop
cltd
dec
mov
add
inc
hlt
mov
sbb
add
dec
mov
out
pop
sbb
adc
jbe
sbb
and
or
jbe
mov
lods
or
add
ficomps
inc
jmp
jo
or
xchg
inc
push
fs
outsb
add
mov
aad
sub
addb
lods
or
cmp
in
movsb
mov
inc
add
test
shlb
sub
push
add
mov
mov
data16
fsubrl
roll
xchg
jae
aaa
das
bound
push
arpl
cmpsl
adc
mov
out
mov
in
aad
or
push
xchg
xor
cmc
and
mov
jo
inc
or
arpl
push
data16
insb
test
lods
xchg
jmp
hlt
mov
cmp
sub
ds
pusha
adc
fnsave
emms
push
pop
jns
ljmp
jo
pushf
movsb
enter
jle
adc
and
data16
jb
mov
sub
or
lahf
and
jmp
shlb
pushf
imul
push
or
xor
or
pop
pop
or
in
orl
adc
into
cmp
mov
aam
lds
sbb
rcll
subl
xchg
jae
in
cltd
jne
jno
sbb
clc
pushf
arpl
xchg
push
and
inc
xor
outsb
pop
mov
fs
adc
jo
sbb
popa
push
pushf
or
sbb
push
or
xchg
cmpsl
lods
inc
and
jae
and
cmpsl
mov
dec
pusha
push
or
mov
mov
mov
dec
adc
shlb
add
imul
pop
jb
mov
push
mov
inc
jns
mov
sbb
xchg
add
and
sbb
mov
hlt
dec
sbb
sbb
mov
mov
xchg
inc
clc
xor
mov
js
cmc
in
dec
fsubrl
pop
dec
xor
xchg
std
adc
clc
pop
je
xor
push
movsl
pop
cld
loope
or
rolb
push
sbb
push
xchg
adc
sahf
xchg
xor
mov
test
push
jae
nop
sbb
adc
daa
push
std
cmp
cmp
addl
adc
dec
fs
scas
xchg
dec
adc
test
jp
or
in
mov
scas
dec
inc
mov
es
sub
das
sahf
xchg
mull
decl
push
add
sub
es
push
and
mov
pop
sbb
dec
add
adc
cs
push
cli
and
in
mov
cmp
or
dec
xor
movsb
movsb
jmp
rclb
xor
int3
in
rolb
cmp
loopne
pushl
addr16
sbb
in
js
sbb
popf
std
les
out
cmp
adc
addr16
dec
cmc
inc
gs
mov
mov
fsubl
pop
hlt
add
shll
jmp
lods
cmc
xchg
iret
jne
jl
aaa
jl
dec
scas
enter
mov
cmp
loopne
out
mov
dec
ljmp
xor
or
push
pop
or
icebp
imul
jne
sub
dec
mov
imulb
popf
mov
sub
dec
jecxz
xchg
scas
into
decl
mov
push
scas
pushf
sub
xlat
xchg
xor
call
adc
sub
jl
push
jmp
push
xchg
or
cmp
or
cs
int
or
ljmp
adc
and
dec
sub
movsb
fxch
pop
in
mov
jmp
cmp
sbb
or
xchg
mov
fists
mov
outsb
in
sub
mov
stc
jbe
cli
jno
sub
jl
pop
test
pop
dec
xor
subb
xor
mov
sbb
sub
loopne
jb
inc
adc
movsl
sub
dec
adc
jge
imul
sub
dec
pusha
xor
pop
outsl
icebp
xchg
xchg
or
and
inc
or
mov
outsb
xor
dec
fcoml
les
and
dec
mov
je
mov
and
dec
inc
xchg
cmp
xor
sub
mov
adc
inc
cld
insl
loope
push
or
mov
adc
and
dec
mov
test
mov
test
jl
je
insb
xchg
pusha
and
dec
inc
mov
xor
sub
xchg
adc
or
adc
insb
add
and
dec
aam
int3
and
inc
mov
mov
dec
jl
je
mov
and
dec
dec
xchg
inc
and
xor
mov
adc
add
clc
imul
xchg
in
faddl
mov
nop
xchg
andb
inc
jo
mov
and
dec
dec
xchg
inc
and
sub
mov
or
add
cld
push
hlt
xchg
call
int3
mov
adc
mov
orb
dec
pop
xchg
push
and
inc
cmp
and
xchg
or
add
clc
imul
and
dec
les
lods
movsb
mov
andb
jo
push
push
mov
inc
and
dec
xor
adc
mov
cld
push
dec
in
fsubs
int3
inc
les
cwtl
dec
mov
adc
pop
dec
push
xchg
inc
and
xor
mov
adc
and
dec
add
clc
addr16
and
inc
mov
adc
and
dec
mov
movsb
and
adc
dec
pop
xchg
push
and
xor
sub
and
dec
or
inc
clc
insb
rorw
call
and
dec
enter
mov
mov
adc
push
dec
mov
and
dec
sub
adc
mov
cld
gs
and
dec
loopne
fsubs
rolb
mov
dec
pushf
xchg
xchg
and
adc
push
dec
dec
xchg
inc
and
inc
sub
mov
or
adc
hlt
shll
or
inc
mov
adc
and
dec
mov
movsb
and
adc
push
and
dec
inc
mov
adc
and
dec
and
add
insb
arpl
or
mov
adc
and
dec
enter
mov
cwtl
adc
jo
push
push
adc
inc
dec
xor
sub
and
sbb
mov
pop
or
das
adc
pop
and
push
or
mov
jl
jo
push
push
adc
dec
xor
adc
mov
clc
popa
add
and
dec
loopne
fsubs
int3
inc
mov
pushf
and
dec
mov
insb
pusha
mov
dec
and
dec
cmp
xor
sub
mov
pop
or
and
inc
mov
adc
and
dec
mov
test
mov
test
jl
je
insb
xchg
and
dec
inc
mov
adc
and
dec
and
cld
pop
inc
lock
fcoml
aam
enter
mov
test
pushf
adc
js
push
dec
adc
dec
xor
adc
mov
pop
xor
dec
fcoms
mov
mov
xchg
andb
inc
insb
pusha
mov
push
and
dec
inc
xchg
xor
sub
and
mov
adc
adc
clc
pop
and
inc
in
mov
adc
and
dec
mov
inc
movsb
pushf
mov
adcb
push
mov
and
dec
sub
and
adc
or
and
pop
add
dec
in
fsubl
rolb
mov
dec
mov
inc
test
jo
insb
and
pop
loop
push
dec
mov
xor
sub
xchg
sbb
or
add
inc
pop
hlt
mov
adc
and
dec
int3
xchg
shlb
inc
lods
movsb
mov
jl
je
insb
inc
push
push
and
dec
inc
xchg
cmp
xor
mov
adc
and
pop
and
clc
pop
inc
lock
and
dec
mov
inc
cwtl
nop
mov
insb
xchg
and
dec
mov
xor
sub
and
or
and
pop
je
mov
or
inc
fcom
mov
adc
test
mov
test
js
jo
push
inc
push
dec
mov
xor
sub
and
or
and
pop
fs
or
dec
loopne
fsubs
rolb
mov
dec
cwtl
xchg
nop
and
insb
adc
and
cmp
xor
sub
dec
sbb
adc
push
mov
or
and
dec
aam
shlb
les
mov
dec
adcb
pusha
mov
dec
and
dec
xor
sub
and
sbb
mov
cld
push
mov
or
mov
adc
pushf
and
adc
dec
pusha
xchg
pop
and
cmp
sbb
xchg
add
cld
push
shll
xchg
int3
and
inc
mov
pushf
and
dec
mov
insb
mov
and
dec
cmp
xor
sub
and
mov
or
cld
push
je
mov
or
inc
aam
mov
adc
xchg
cwtl
and
je
push
xchg
dec
and
xor
sub
and
sbb
adc
or
hlt
push
sub
dec
aam
int3
and
inc
mov
movsb
and
dec
pushf
xchg
nop
and
adc
dec
dec
xchg
dec
and
cmp
mov
adc
adc
mov
lock
adc
and
dec
int3
xchg
shlb
inc
mov
mov
dec
jl
je
push
inc
adc
and
dec
and
sbb
or
adc
push
add
and
dec
fcoml
shlb
dec
nop
xchg
mov
addb
push
dec
dec
xchg
cmp
xor
sub
mov
adc
or
add
cld
push
jmp
mov
adc
and
dec
rclb
mov
and
dec
jl
je
push
dec
dec
inc
xchg
cmp
xor
mov
adc
add
cld
dec
or
xchg
in
and
inc
aam
mov
movsb
xchg
pushf
and
adc
push
and
cmp
xor
sub
sub
xchg
sbb
adc
or
insb
dec
jmp
adc
and
dec
int3
xchg
les
mov
pushf
adc
jl
je
fs
mov
and
dec
cmp
sbb
test
or
xchg
loopne
fadds
mov
dec
mov
inc
mov
and
dec
pusha
xchg
pop
and
dec
cmp
xor
sub
and
sbb
cld
dec
inc
lock
fcoml
aam
int3
dec
les
lods
movsb
mov
dec
js
jo
push
push
adc
inc
dec
cmp
sbb
mov
adc
dec
add
and
dec
in
fsubl
rolb
mov
pushf
xchg
xchg
and
adc
dec
dec
xchg
cmp
xor
sub
mov
adc
adc
lock
leave
and
fadds
mov
dec
pushf
xchg
xchg
and
adc
dec
pop
xchg
push
and
xor
sbb
xchg
or
cld
dec
and
inc
in
in
fcoms
shlb
dec
rclb
xchg
mov
jo
push
push
mov
and
dec
sub
adc
mov
xchg
in
faddl
mov
adc
xchg
pushf
and
js
jo
push
and
cmp
sbb
xchg
or
clc
inc
fucom
and
push
or
mov
cwtl
xchg
mov
addb
adc
dec
dec
inc
xchg
xor
sub
mov
adc
and
inc
add
dec
in
xchg
in
faddl
mov
adc
xchg
pushf
and
adc
dec
pusha
xchg
push
and
inc
cmp
and
xchg
adc
or
adc
inc
add
and
dec
fcoms
sarb
mov
and
adc
dec
pop
xchg
push
and
inc
cmp
pop
jns
sub
xchg
pop
aaa
mov
xor
jne
fwait
push
daa
adc
mov
sbb
and
cmp
push
adc
addr16
movsl
and
dec
ja
mov
sbb
ds
or
jecxz
mov
inc
jne
rolb
pop
dec
sbb
cmp
rorw
jbe
dec
mov
fnstenv
fwait
adc
jge
push
das
jae
daa
ficompl
mov
insl
rcll
inc
xchg
mov
push
jns
adc
call
enter
push
shrb
in
lods
mov
sbb
outsb
xchg
pop
push
dec
xchg
adc
imul
xchg
cmpsl
adc
sbb
mov
fnstenv
jns
ljmp
and
or
and
or
mov
je
testl
inc
jae
mov
push
std
sub
or
aam
jns
dec
or
jle
or
or
adc
adc
mov
mov
stos
std
dec
loopne
aad
lea
addr16
mov
adc
int3
mov
inc
mov
hlt
das
adc
cmpsb
xor
xor
incl
outsb
sbb
sbb
cmc
scas
fisubrl
dec
repz
xchg
sub
mov
mov
pop
in
data16
inc
and
fldcw
mov
dec
mov
nop
xchg
inc
sahf
inc
and
jmp
sub
adc
and
push
adc
imul
sbb
and
and
adc
jne
insb
xorb
fld
int3
adc
sub
pusha
and
sbb
inc
mov
jecxz
fisttps
inc
xor
and
mov
jge
ljmp
adc
scas
adc
mov
shrl
push
popa
adc
or
jae
lds
jbe
or
stos
outsb
or
mov
adc
xchg
js
mov
dec
jns
adc
pop
insb
sub
gs
stos
or
sub
jne
inc
cmc
addr16
repnz
or
adc
or
imul
or
xchg
pshufw
rol
clc
test
out
outsb
or
in
adc
test
lret
mov
or
data16
imul
hlt
mov
mov
das
orb
test
dec
mov
jg
inc
push
adc
in
sub
cwtl
test
fstpt
push
xchg
and
into
push
or
mov
test
adc
sub
dec
popa
in
adc
adc
outsb
xchg
or
mov
cs
cmp
sbb
mov
adc
int
or
lods
xchg
sub
adc
je
mov
sub
xchg
iret
xchg
pop
or
repz
push
xchg
jbe
xchg
mov
mov
mov
push
or
rcll
push
sahf
and
jb
xor
imul
xor
or
or
in
mov
push
jne
sub
adc
mov
push
das
sbb
mov
or
adc
inc
fs
out
xlat
adc
xchg
bound
pop
mov
and
jo
data16
dec
out
imul
adc
out
jae
adc
inc
div
push
arpl
in
or
mov
inc
jp
xor
sbb
movsb
adc
movl
les
sbb
sahf
imul
and
lods
int
lcall
inc
or
mov
adc
or
mov
xchg
adc
sarb
dec
fs
jmp
lods
jb
out
stc
cmp
adc
inc
sbb
popa
push
xor
inc
pop
dec
gs
inc
or
mov
imul
push
imul
adc
or
or
dec
inc
sbb
daa
or
into
je
xchg
dec
fwait
dec
and
inc
or
data16
adc
inc
imul
push
sbb
and
mov
or
dec
test
or
aas
rorl
ficomps
jns
or
test
inc
adc
push
imul
inc
leavew
jae
adc
lcall
nop
imul
popa
xchg
hlt
loop
out
fists
jg
and
push
bound
jg
inc
adc
fs
orb
or
je
or
push
and
jne
insb
addr16
insl
sbb
repnz
or
or
addr16
mov
mov
hlt
fisubl
imul
iret
popa
cmp
jno
movsb
or
data16
inc
es
repnz
cmpsb
cmp
jns
mov
or
sbb
ja
js
or
movsl
push
je
adc
dec
or
and
pop
jb
nop
or
es
int
or
loop
mov
push
pusha
pop
imul
sbb
mov
inc
or
fs
xchg
popa
je
insb
jl
push
jns
dec
jae
fcompl
lcall
jns
nop
adc
or
cmp
cmpsb
cwtl
ficoml
orb
sbb
jmp
sbb
insb
stos
inc
rcl
or
or
xchg
jns
or
and
jl
scas
mov
jo
daa
outsl
movsl
adc
repnz
sbb
jne
insb
inc
cli
ss
inc
insl
test
fstpl
xchg
sub
outsb
sub
xor
ffreep
adc
nop
mov
jo
cmp
inc
sub
mov
sub
xchg
sub
sbb
push
jne
mov
adc
into
imul
xchg
repz
xlat
insl
adc
jns
and
or
inc
jge
adc
loop
fdivl
mov
jp
int3
sbb
jbe
pusha
push
or
jo
mov
dec
adc
adcl
push
jp
out
sbb
sub
out
movsl
or
sbb
cmp
ljmp
fistpl
xlat
ljmp
or
adc
mov
add
or
adc
aam
addr16
adc
test
gs
push
jae
inc
leave
push
fstps
sbb
jp
mov
lods
lcall
push
int3
or
push
in
outsl
movsb
sbb
adc
jns
adc
xchg
adc
add
dec
push
popa
in
sbb
sub
sbb
jle
lock
adc
data16
sbb
adc
or
insl
adc
mov
outsl
sbb
mov
ja
sub
adc
movswl
jns
mov
fildll
or
adc
sbb
rclb
insl
repz
or
jno
jne
mov
inc
out
jne
iret
lds
pop
adc
dec
adc
sub
cmpl
je
jns
aam
add
dec
dec
jbe
and
cmp
inc
adc
je
rcr
in
repz
insb
sbb
sbb
imul
adc
adc
jo
test
mov
cld
fisubl
fiaddl
and
jae
jp
push
xchg
or
adc
pop
fs
rcrl
adc
fdivr
sub
xchg
mov
adc
scas
or
adc
js
pop
xor
xchg
arpl
mov
mov
sub
cmp
or
jmp
or
mov
les
push
jne
jge
jae
fistl
out
in
xor
movsl
mov
push
fs
push
mov
sbb
js
adc
pop
xor
jo
ds
imul
sub
dec
mov
imul
das
adc
inc
adc
imul
adc
loopne
out
imul
fbld
andl
fsts
push
insl
nop
int
push
test
or
pop
lcall
or
int
adc
mov
mov
pusha
xchg
push
dec
mov
or
xor
adc
adc
push
jne
lret
push
sbb
arpl
fsubs
sub
insb
adc
push
in
xchg
cwtl
jp
subl
pop
imul
xchg
push
or
gs
and
sub
bound
jb
sbb
pusha
scas
or
or
ds
test
sub
push
or
aam
jne
imul
repz
dec
pop
add
adc
test
mov
in
jns
xor
dec
push
cwtl
test
adc
jae
iret
mov
int
adc
cmp
and
dec
inc
push
xchg
mov
fs
xor
jmp
xor
mov
imul
sub
lock
pushf
fsubrl
and
cltd
test
aad
orb
adc
push
jb
pop
outsl
or
xor
lods
dec
cwtl
adc
dec
bound
or
sub
dec
sbb
sub
xchg
cld
mov
inc
and
or
fdivl
or
or
imul
stos
daa
mov
iret
pop
push
adc
pop
jge
dec
adc
fsubrl
lods
shr
sbb
add
scas
fs
mov
es
or
inc
aad
or
adc
arpl
sahf
es
xor
js
test
jb,pt
or
mov
cmpsb
aam
sub
cs
aad
or
js
aas
je
pop
adc
stos
push
adc
inc
lods
adc
sbbl
fildl
outsl
ja
sti
inc
clc
fstl
aad
sub
outsl
jo
test
add
sbb
push
mov
adc
adc
dec
call
mov
out
jp
adcb
inc
or
test
outsb
lea
sbb
imul
insb
inc
cmp
outsl
pop
or
sbb
sbb
push
and
mov
and
xchg
mov
das
sbb
popa
adc
adc
adc
or
inc
push
aad
fwait
adc
or
test
pop
mov
ss
sahf
cwtl
mov
xchg
or
push
insb
daa
inc
outsb
mov
xor
loopne
xchg
test
enter
nop
inc
push
jno
jl
dec
adc
and
xchg
mov
mov
imul
and
and
or
xchg
jae
and
xchg
insl
int
lods
sbb
je
adc
jne
dec
xor
dec
shll
sbb
cwtl
insl
sbb
ss
adc
push
jb
lods
inc
stos
jle
pusha
mov
adc
xor
adc
mov
add
adc
xchg
loop
sbb
adc
mov
cmpl
adc
mov
ret
insl
sbb
dec
aad
addl
sbb
adc
outsl
pop
adc
push
je
dec
icebp
and
testb
add
or
sub
es
cwtl
repnz
lods
dec
sbb
jae
fsubr
adc
pop
outsb
lret
lock
and
adc
insl
bound
jle
or
sub
and
and
cmp
xchg
inc
dec
inc
lahf
bound
std
push
and
imul
sbb
test
mov
adc
jb
adc
adc
pop
arpl
jg
pop
xor
in
std
inc
mov
inc
jae
or
sub
adc
xchg
adc
out
inc
or
sbb
push
push
mov
bound
push
outsl
mov
stos
ret
addb
insb
xchg
and
mov
adc
fisttpl
jnp
or
cmpl
adcl
sbb
lahf
or
push
cmp
or
cltd
mov
lcall
jge
outsl
rcl
push
imul
popa
jns
iret
lods
das
add
outsb
std
scas
fyl2xp1
mov
dec
sbb
adc
inc
sbb
addr16
mov
inc
xchg
or
adcb
ffree
adc
addr16
mov
sbb
ss
adc
lcall
sbb
sub
aaa
adc
fwait
or
addr16
scas
push
cmp
aad
loop
push
and
and
dec
jns
inc
mov
fisttpll
in
lahf
jb
or
jo
and
cli
leave
jns
pop
adc
push
mov
dec
movsl
sbb
dec
sbb
fidivrs
neg
or
das
and
dec
inc
insb
or
cltd
adc
je
adc
pop
mov
jbe
and
adc
cmpsb
sbb
insl
inc
jae
int
mov
lods
loope
or
push
push
or
cmp
les
adc
mov
mov
sub
push
bound
mov
add
arpl
lods
test
or
add
sbb
add
jae
or
adc
push
lods
lret
push
sub
pop
fsts
imul
data16
sub
mov
dec
xchg
inc
sbb
lcall
ja
adc
xor
je
push
adc
and
or
pop
imul
inc
call
push
jbe
jl
adc
xor
js
jle
adc
cmc
adc
push
nop
in
push
xor
dec
jbe
sbb
fwait
add
mov
xor
adc
adc
outsl
inc
mov
adc
jl
xor
mov
int3
ds
sarb
push
mov
push
sbb
or
pushaw
sbb
outsl
inc
fmull
adc
jns
shlb
adc
push
imul
data16
rclb
lods
cmp
add
lea
adc
or
mov
xchg
adc
dec
or
pop
outsb
adc
ss
js
ret
mov
xor
je
mov
popa
push
inc
mov
orl
int3
sbb
adc
mov
imul
cs
jns
xchg
outsw
mov
jl
lods
dec
or
dec
pusha
rolb
jae
movsl
or
in
adc
dec
sub
dec
or
test
xlat
adc
or
lock
inc
inc
or
or
dec
and
into
adc
pop
popa
pop
adc
inc
movsl
les
adc
dec
or
jmp
sub
jb
dec
adc
or
mov
cmp
jns
jb
jo
or
jae
cmpsb
stos
call
pop
out
in
push
sbb
mov
push
jne
mov
sbb
mov
jge
dec
mov
mov
sbb
sbb
insb
mov
insl
sbb
adc
outsl
adc
adc
mov
or
test
or
cmp
jge
xchg
outsl
test
cltd
popa
mov
add
cmp
or
std
cld
ret
push
sub
stos
aad
mov
pushf
pop
or
scas
and
lds
jno
mov
and
test
jge
pop
mov
pop
imul
adc
clc
mov
xchg
ss
mov
jecxz
les
leave
sahf
lods
adc
es
imul
and
ror
or
sub
or
xor
jae
andl
lahf
cs
sbb
invd
hlt
jo
dec
and
inc
ja
sbb
imul
data16
pop
sbb
rcr
pop
iret
adc
leave
pop
icebp
cmp
dec
xchg
fcomps
jne
movsb
or
je
or
ret
cmp
js
inc
dec
outsb
xchg
push
jb
or
mov
mov
lcall
testl
mov
mov
xchg
sarl
or
xchg
gs
adc
imul
sbb
lods
xorb
je
lock
adc
dec
pop
mov
adc
sbb
adc
insl
adc
and
jp
adc
cld
sbb
sub
cwtl
daa
les
jmp
mov
push
in
mov
and
dec
arpl
js
sbb
and
adc
push
mov
sub
inc
mov
dec
popa
push
mov
call
scas
ja
inc
sbb
ja
fmuls
cmp
in
mov
test
stos
test
daa
xor
inc
add
and
fwait
inc
mov
xlat
push
cmp
inc
xchg
pop
sti
mov
and
int
outsl
pop
push
cmp
cmc
push
cltd
js
dec
inc
pop
rcr
lods
test
fwait
adc
lcall
mov
adc
mov
sbb
push
out
mov
jae
inc
mov
int
add
lea
leave
orl
push
popa
adc
arpl
insl
nop
xchg
pushf
mov
sbb
adc
inc
mov
or
mov
adc
out
sbb
adc
movsl
fisttpll
bound
jno
jecxz
in
pop
inc
insb
push
inc
sub
push
cmc
mov
jl
stos
sbb
xchg
adc
xor
jb
fmul
sbb
xchg
scas
xor
sbb
mov
and
dec
and
or
cs
ret
xor
mov
adc
mov
sbb
repz
or
or
icebp
jp
or
shr
inc
or
stos
xor
test
js
lcall
sub
rorb
dec
push
inc
or
lahf
jae
adc
pop
sbb
adc
xor
push
push
int
push
or
aaa
mov
ljmp
xchg
or
int3
dec
push
adc
pushf
mov
jo
and
test
imul
leave
gs
subl
adc
imul
dec
popf
jl
adc
mov
xor
jo
cli
mov
or
adc
outsl
or
pop
cmpsb
add
arpl
pop
neg
in
mov
movsl
pop
cmp
and
push
testb
pushf
loop
or
inc
jns
mov
es
adc
add
adc
adc
mov
lcall
gs
outsb
dec
test
or
adc
insb
or
adc
fwait
xchg
les
imul
adc
inc
or
loop
push
xor
sbb
push
movsl
push
or
or
dec
push
jecxz
and
jecxz
adc
rcll
push
outsl
mov
or
xchg
rcll
rcr
adc
imul
or
insb
imul
into
mov
fldcw
mov
clc
push
fistl
mov
scas
mov
push
sub
dec
xchg
sbb
mov
test
or
xchg
scas
dec
outsb
jle
or
mov
cmpsb
or
mov
std
rdmsr
push
or
je
xchg
aaa
mov
or
inc
inc
rclb
roll
mov
mov
xchg
enter
and
and
call
insl
mov
mov
push
insl
int
pushf
sbb
or
movsl
test
mov
cmc
ret
mov
or
adc
xchg
adc
mov
dec
mov
xor
pop
cltd
cmp
jp
jp
int
and
sub
mov
sbb
xchg
cmp
adc
pop
scas
adc
test
call
jl
and
or
mov
in
sbb
add
stos
or
ds
sbb
adc
ss
pop
mov
dec
or
fnstsw
pusha
imul
add
adc
mov
movsb
rclb
jne
test
inc
or
adc
jns
int
cmpsl
add
jne
mov
adc
fcomps
mov
sub
lcall
loopne
adc
movsl
or
jns
xchg
and
sub
or
mov
pop
add
adc
push
arpl
jo
push
push
push
or
dec
xor
mov
nop
insb
mov
daa
imul
or
dec
xchg
imul
dec
push
les
shrb
sbb
pop
dec
inc
sub
or
test
imul
aam
adc
push
lahf
fs
xor
js
cmp
mov
fidivl
pop
sbb
adc
mov
daa
xor
lret
cmpsl
or
movsb
sbb
and
adc
lret
cmp
dec
and
daa
push
rcll
ret
loop
das
xor
in
or
or
or
or
sub
inc
pop
lock
pop
jae
ficoml
push
int
adc
or
jb
sahf
lods
je
sti
inc
add
or
dec
xor
test
stc
jne
sbb
in
push
or
sar
xor
gs
sbb
adc
pushf
ficomps
push
fs
add
ret
fwait
cld
vshufps
xchg
dec
sub
je
push
loope
fs
sbb
and
test
inc
or
jl
daa
or
and
faddl
add
sbb
adc
and
and
cmp
dec
push
adc
jp
xchg
divl
rcll
pop
out
cmp
mov
mov
add
inc
scas
or
cld
outsl
or
or
mov
adc
andl
dec
stos
pop
xor
jne
push
scas
mov
pop
jmp
in
push
cs
mov
cmp
mov
xchg
mov
xor
xchg
push
mov
adc
fs
jmp
stos
fwait
rcll
pop
jmp
dec
adc
stos
xor
cmp
hlt
mov
cld
push
andl
sbb
sub
push
cmp
in
and
scas
ret
aam
mov
imul
dec
adc
pop
nop
and
stos
sub
push
outsb
adc
or
dec
bound
pop
adc
movsb
insl
dec
pop
leave
push
enter
jle
and
in
outsb
dec
jb
mov
outsb
and
dec
cmc
dec
movsl
cmp
lock
xchg
pop
jnp
pop
push
dec
push
cmpsl
fisubrl
xchg
aam
jo
jl
fs
fidivrl
shrb
or
fnsave
mov
xchg
sarl
inc
daa
hlt
push
jmp
push
ljmp
ljmp
push
dec
test
je
push
lahf
xchg
jno
hlt
scas
popf
popf
dec
adc
or
jnp
rclb
mov
add
incl
pop
xor
popaw
mov
hlt
inc
loop
stc
sbb
mov
or
rolb
shlb
xor
cli
addr16
jmp
in
jl
cmp
shlb
or
push
dec
js
inc
and
pop
sbb
xor
sbb
push
jo
or
subl
inc
jne
cwtl
xor
add
pop
pop
cmp
xor
call
add
push
call
cs
cld
push
jbe
daa
imull
call
add
and
pop
adc
add
pop
pop
pop
push
sub
push
lahf
mov
cld
lea
mov
inc
push
stos
push
push
push
daa
push
add
push
push
call
add
test
mov
sub
sub
out
sub
in
or
inc
pop
and
jp
dec
xchg
xchg
les
xchg
stc
mov
push
lds
mov
sub
mov
push
mov
mov
dec
out
stc
fdivrs
mov
std
sti
pushl
and
stc
pushl
adc
sub
push
jne
mov
sbb
push
cld
ss
jne
dec
jp
and
push
inc
sub
imul
gs
xor
scas
cmp
mul
or
lahf
clc
jnp
jle
jmp
xchg
jl
sub
xchg
mov
dec
fisttpll
pop
scas
sub
movsl
sub
insb
mov
push
in
pop
sub
aaa
inc
or
mov
sbb
sbb
jge
dec
add
jns
push
arpl
das
loope
dec
imul
bnd
jo
xchg
adc
mov
add
inc
loopne
out
jle
sub
pop
sub
xor
mov
xor
gs
out
mov
scas
dec
mov
xor
xor
push
xor
call
aam
sub
dec
js
sbb
popf
in
lahf
pop
fidivrs
xor
loope
push
sti
iret
jns
and
inc
dec
out
test
fldt
inc
test
shr
stos
pop
inc
jno
pop
xchg
add
fnsave
fnstcw
xor
out
xor
out
lret
call
push
inc
nop
cmp
movsl
inc
adc
mov
add
xor
nop
add
test
in
or
in
mov
cmp
add
xor
push
inc
shl
ljmp
call
test
jns
mov
dec
fdiv
jne
loope
out
fsub
xor
add
jmp
mov
pop
pop
sbb
xor
xor
cmp
jbe
or
sub
outsb
repnz
into
je
mov
cs
sub
icebp
into
push
imul
mov
mov
and
xchg
jmp
push
push
xor
cmc
adc
pop
mov
das
pop
add
enter
push
shlb
aas
js
insb
dec
and
push
jecxz
aas
out
loopne
addr16
cmp
push
shrb
and
cwtl
add
inc
inc
inc
push
fildll
call
mov
inc
dec
popa
jns
bound
and
movsb
mov
popa
das
mov
inc
adc
fisubrl
fstl
dec
rcrb
dec
lahf
adc
pop
js
movsb
or
pusha
jmp
pop
push
ret
call
xor
add
add
jg
cwtl
sub
adc
xor
popa
and
ret
fucom
loopne
sarl
xor
add
call
pop
cli
leave
testb
loopne
popa
paddb
mov
and
inc
rorb
mov
enter
xchg
and
mov
xchg
insb
and
in
inc
or
cmp
mov
inc
ror
sbb
mov
jno
adc
lea
out
loopne
idivl
adc
sub
and
movsb
dec
mov
nop
adc
cs
and
enter
xor
adc
add
pusha
mov
and
in
ret
add
gs
out
int3
mov
aam
andb
int3
mov
adc
inc
mov
xchg
adc
test
enter
repnz
sub
dec
inc
jns
adc
push
inc
or
adc
dec
mov
and
repnz
idivl
mov
adc
push
inc
pusha
inc
nop
sub
inc
mov
nop
adc
inc
or
xchg
adc
inc
aam
nop
sub
mov
mov
and
inc
fs
xchg
dec
or
and
and
jl
dec
mov
and
ret
add
cmp
mov
and
mov
and
inc
jo
inc
sub
jno
adc
push
inc
sbb
xchg
in
or
jno
adc
inc
xor
jno
adc
push
and
mov
inc
sahf
enter
repnz
cmp
xchg
enter
inc
mov
xchg
mov
ret
cmp
inc
xchg
sub
ret
cmp
fadds
and
cmp
push
cmp
xor
and
test
faddl
ret
cmp
mov
pushaw
and
mov
inc
dec
sub
dec
loope
int
cld
lret
jecxz
xchg
sbb
jne
in
test
ret
call
scas
loop
shlb
and
dec
les
inc
mov
sub
mov
xor
push
push
xor
inc
cmp
sbb
popa
push
pop
jns
xor
fisubs
popf
xor
nop
xor
xor
shll
cli
dec
mov
push
std
das
mov
xchg
call
sbb
in
xor
test
sbb
out
xchg
mov
mov
cmp
xchg
aaa
mov
outsl
and
aam
jl
out
xor
sbb
cmp
ss
xor
repz
loope
xor
sahf
data16
repz
arpl
outsl
jns
out
xor
negl
arpl
outsl
jns
out
xor
negl
popa
sti
int3
aas
jns
out
xor
out
mov
aas
mov
lcall
sbb
xor
and
jnp
outsl
jae
in
outsb
jb
cmp
cmp
xchg
aaa
mov
outsl
and
xor
enter
sbb
xor
push
cmp
mov
pop
nop
aaa
cld
ss
xor
xor
enter
or
movsl
add
push
add
xor
hlt
fldcw
xchg
adc
sbb
or
xor
test
cmp
and
jns
or
xor
xor
nop
xor
jns
ret
cmp
aaa
test
ss
and
xor
xor
sub
pop
push
mov
cwtl
sub
hlt
xchg
add
dec
leave
dec
push
icebp
inc
out
or
mov
xor
cwtl
sar
imul
jmp
shlb
ret
pop
clc
jle
sti
les
cld
mov
pushf
sub
add
lock
enter
xchg
test
stos
je
add
fs
or
add
add
add
adc
inc
inc
orl
pop
mov
popl
jge
add
fbld
adc
inc
subl
inc
push
addb
add
cmp
rolb
jo
pop
adc
sub
or
movsb
add
pusha
cmpb
cmpsb
sbb
cmpsb
fisttps
or
loopne
test
inc
jle
int3
test
sarl
fimull
test
inc
sub
xchg
mov
mov
push
iret
mov
in
call
nop
mov
mov
ficompl
rcrb
loope
or
stc
xorb
movsb
cmp
sbb
call
and
lock
loope
add
sbb
add
adc
push
inc
add
mov
add
add
mov
adc
xchg
or
pop
inc
or
mov
sub
sbb
or
push
lcall
adc
lcall
cltd
adc
inc
mov
xor
push
sbb
gs
xor
sbb
and
dec
sbb
jb
lret
xorb
cltd
or
push
test
xchg
inc
sub
nop
sub
mov
xlat
cmp
pop
xchg
or
adc
pop
cmp
jo
cltd
pop
adc
adc
sub
sbb
fs
adc
dec
inc
xchg
and
push
adc
sub
adc
xor
push
adc
xchg
or
adc
mov
pop
jl
aaa
mov
in
mov
in
sbb
xchg
adc
aam
sbb
mov
adc
and
dec
mov
inc
and
add
jg
xor
lcall
out
cmpsb
adc
mov
inc
addl
aaa
or
inc
adc
inc
rol
push
or
cmp
or
mov
cmp
xchg
inc
xchg
leave
add
sub
dec
sbb
cmp
cmp
int3
adc
mov
cmp
xor
js
xchg
sbbb
and
adc
xchg
push
js
adc
inc
adc
sbb
adc
or
clc
cmp
cld
inc
mov
or
cwtl
fsubs
loopne
push
dec
mov
or
popf
movl
outsl
mov
hlt
rorb
lea
cld
pusha
and
mov
repnz
jmp
sbb
and
lock
cmp
push
scas
jnp
push
inc
scas
inc
rcrb
or
dec
fidivs
adc
cmp
les
int3
movsb
xchg
enter
aam
repz
adc
xor
or
insl
inc
xor
cmp
jo
mov
mov
cltd
or
push
das
xchg
or
insb
sub
inc
pop
or
inc
add
in
or
test
cvttps2pi
hlt
adc
xchg
cwtl
push
test
and
or
sbb
int3
into
test
rorl
and
sahf
mov
sub
imul
dec
sbb
and
xchg
xlat
add
sub
mov
adc
in
cmp
add
js
jp
outsl
loopne
jmp
mov
test
add
cmp
inc
clc
fldl
mov
stc
popf
sti
jmp
stos
add
mov
repnz
das
test
push
pop
stos
clc
scas
mov
lock
sbb
loope
jp
iret
inc
add
xchg
push
cmpsb
scas
mov
inc
or
xorl
dec
pop
inc
in
add
mov
push
sti
call
mov
cmpsb
lock
movsl
mov
popa
sar
cmp
pop
mov
stos
xchg
clc
repz
mov
add
xchg
and
les
int3
rolb
cmp
jno
or
mov
add
cmp
dec
lea
cmc
add
sub
sbb
loop
pop
mov
icebp
loopne
mov
test
subl
mov
imul
clc
xor
cmp
aad
mov
ret
into
popa
test
ja
ds
in
das
dec
pop
loope
les
leave
xchg
add
jne
int
adc
lcall
cmp
sbb
add
loop
clc
cmp
popa
mov
add
sarl
jl
ds
das
lea
mov
sti
inc
dec
clc
movsl
jmp
ljmp
mov
jl
rcr
push
add
push
int3
and
push
call
cmp
jp
pop
and
cmp
mov
cmp
add
xlat
cmp
mov
sbb
mov
jecxz
cmpsb
add
movb
jne
fldt
add
xor
shlb
shlb
dec
add
mov
movsl
addb
mov
loop
mov
adc
mov
add
xor
rcpps
pop
add
rolb
ret
call
out
pop
push
xchg
cmp
push
add
gs
std
lock
scas
push
xchg
jge
pop
add
lahf
into
ror
add
cmpsb
or
or
cmp
les
cs
inc
push
gs
into
pop
jbe
pushf
inc
js
sbb
pop
mov
push
aaa
cmp
loope
pop
shll
test
inc
cwtl
xor
inc
mov
pop
clc
mov
sub
pusha
xchg
lahf
pushl
add
add
daa
add
add
add
and
add
xor
add
nop
add
add
push
cltd
and
ficoml
outsl
xchg
or
add
xchg
sbb
sub
mov
pop
cmp
insb
inc
sti
dec
ds
sti
pop
cld
adc
sbb
fwait
push
cmp
fwait
aad
jae
call
and
lret
xor
and
int
or
lret
je
push
adc
lock
cwtl
jns
shlb
add
add
mov
add
jmp
push
add
jmp
add
dec
pop
add
lea
xor
call
jmp
adc
add
add
pushl
pushl
call
add
add
cmpl
jne
lea
cmpl
jne
xor
pusha
jmp
mov
mov
mov
call
lea
push
or
jne
push
jmp
push
push
push
call
add
cmpl
jne
inc
or
je
add
mov
popa
mov
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pushl
push
call
add
jmp
adc
add
mov
add
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
mov
movl
jmp
pushl
pushl
call
test
je
jmp
push
add
movl
mov
add
mov
jmp
inc
cmpb
jne
inc
mov
testl
jne
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
jmp
add
add
add
jge
repz
add
je
sub
add
push
mov
mov
pop
ret
push
mov
cmpl
je
sub
add
pop
ret
push
push
cmpl
je
mov
mov
sub
add
pop
pop
ret
push
cmpl
je
mov
sub
add
pop
ret
pusha
cmpl
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
sub
and
add
jb
gs
xor
cs
insb
add
push
add
add
add
and
add
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
add
or
add
push
push
mov
jmp
inc
cmpb
jne
jmp
dec
cmpb
je
cmp
jne
cmpb
jne
pop
inc
jmp
pop
pop
ret
cmpl
jne
mov
jmp
mov
jmp
xor
push
push
push
push
call
mov
lea
push
call
push
cmpl
jne
pushl
push
call
mov
pop
cmpl
jne
pushl
push
call
mov
or
jne
push
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
push
lea
push
pushl
push
call
push
push
pushl
call
popa
ret
pusha
lea
push
call
cmpl
jne
pushl
push
call
mov
call
movl
call
lea
mov
mov
lea
push
pushl
mov
mov
xor
xchg
popl
add
popa
ret
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
leave
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
lea
push
push
push
call
or
jne
lea
push
push
push
call
jmp
lea
push
call
cmpl
jne
pushl
push
call
push
lea
push
lea
push
push
call
popa
popa
pop
ret
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
push
push
push
push
call
mov
push
push
push
call
push
push
push
push
push
push
pushl
call
cmp
je
mov
call
push
pushl
call
mov
push
push
push
push
call
mov
push
lea
push
push
push
pushl
call
cmp
jne
mov
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
cmp
je
lea
push
call
cmpl
jne
pushl
push
call
push
lea
push
lea
push
push
call
push
call
push
push
pushl
call
cmpl
je
cmpl
je
pushl
call
jmp
call
popa
ret
push
push
pushl
call
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
call
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
lea
push
lea
push
push
call
cmp
jne
push
pushl
call
push
call
popa
mov
leave
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
pushl
pushl
call
push
pushl
call
popa
mov
leave
ret
pusha
call
mov
pushl
pushl
call
mov
lea
push
push
push
lea
push
push
push
call
popa
ret
pusha
mov
lea
mov
mov
jmp
call
lea
push
push
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
mov
pusha
push
lea
pushl
pushl
call
push
pushl
push
call
lea
mov
add
jmp
dec
cmpb
jne
inc
pop
jmp
movzbl
mov
inc
inc
cmpb
jne
movb
popa
lea
pushl
push
lea
push
pushl
call
add
pushl
push
call
or
je
push
lea
push
lea
push
push
call
push
call
jmp
push
call
or
jne
push
lea
push
lea
push
push
call
push
call
incl
cmp
jbe
movl
pushl
call
popa
ret
pusha
lea
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
pushl
pushl
lea
push
pushl
call
add
pushl
pushl
call
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
mov
jmp
push
call
or
jne
push
call
or
jne
call
jmp
inc
cmpb
jne
inc
cmpb
jne
popa
ret
pusha
cmpl
je
cmpl
jne
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
jmp
jmp
movl
mov
add
jmp
pusha
mov
xor
jmp
inc
inc
cmpb
jne
repz
jne
movl
popa
jmp
inc
cmpb
jne
inc
cmpb
jne
cmpl
jne
jmp
mov
mov
inc
inc
cmpb
jne
mov
incl
popa
ret
pusha
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
popa
ret
pusha
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
call
popa
ret
pusha
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
mov
xor
cltd
jmp
mov
rol
xor
inc
cmpb
jne
cmp
jne
mov
cltd
jmp
mov
rol
xor
inc
cmpb
jne
mov
mov
cmp
jbe
cmp
jbe
cmp
jbe
jmp
xor
xor
rol
inc
dec
cmp
ja
jmp
push
lea
push
lea
push
push
call
popa
popa
pop
ret
call
popa
ret
pusha
cmpl
jne
call
mov
pushl
push
call
mov
lea
push
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
lea
push
call
pushl
push
call
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
popa
ret
pusha
cmpl
jne
pusha
lea
push
call
or
jne
lea
push
call
mov
push
push
mov
imul
add
push
push
call
mov
popa
mov
cmp
je
cmp
jne
mov
rdtsc
mov
movb
movb
xor
xor
rol
add
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
add
mov
popa
mov
sub
ret
jmp
popa
ret
pusha
call
call
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
movl
lea
push
call
cmpl
je
cmpl
je
call
or
je
mov
cmpl
jne
cmpl
je
lea
push
push
call
mov
cmpl
jne
movl
mov
add
mov
cmp
jne
movl
mov
mov
mov
cmpl
je
movl
mov
lea
push
push
push
push
push
push
push
call
cmp
je
movl
inc
cmpb
jne
inc
dec
jne
popa
ret
pusha
cmpl
je
cmpl
jne
lea
push
call
mov
cmpl
jne
pushl
push
call
mov
push
lea
push
lea
push
push
call
popa
pop
popa
ret
popa
ret
pusha
push
call
push
lea
push
push
push
push
call
pop
lea
mov
add
sub
jmp
movb
dec
cmp
ja
popa
ret
pusha
mov
test
js
mov
mov
addl
jmp
push
call
test
jns
cmpl
jne
mov
addl
popa
ret
pusha
lea
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
lea
mov
jmp
xor
rol
inc
dec
cmp
ja
popa
ret
pusha
xor
mov
lods
cmp
je
mov
jmp
mov
and
cmpw
je
sub
jmp
mov
add
cmpw
je
jmp
mov
popa
ret
pusha
mov
mov
add
mov
add
mov
add
xor
lea
mov
add
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
mov
add
mov
add
mov
popa
ret
add
add
add
inc
add
xchg
inc
ja
icebp
clc
or
jg
icebp
lret
imull
sbb
nop
xchg
or
xchg
js
or
push
scas
xlat
lock
jne
gs
xor
fs
insb
add
jb
jb
add
insb
and
popa
gs
and
data16
and
and
jb
jae
add
jne
and
je
insb
outsl
popa
and
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jae
gs
outsl
jb
and
jae
fs
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jb
imul
jo
jb
cmp
imul
and
outsb
popa
insl
imul
and
jb
jb
and
inc
jo
insb
imul
and
and
jb
popa
fs
jb
outsb
outsb
imul
outsw
cmp
push
popa
jb
imul
jae
ja
jb
and
jne
push
outsb
je
jb
and
and
je
jbe
imul
jns
jne
ja
outsb
je
je
and
outsb
arpl
and
and
insb
and
outsb
insb
outsl
popa
fs
or
outsb
imul
jo
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
add
jne
and
je
outsl
ja
insb
outsl
popa
and
jae
gs
jb
and
fs
insb
and
insb
sub
and
arpl
jae
cmp
sub
pop
outsl
jne
popa
jb
and
je
arpl
outsb
arpl
and
imul
je
or
sub
inc
imul
outsb
outsl
je
bound
outsw
jne
and
and
insl
outsl
je
and
jb
gs
or
sub
pop
outsl
jne
and
jb
ja
insb
insb
and
jae
bound
imul
popa
arpl
jae
and
imul
je
or
arpl
popa
jo
insb
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
and
outsl
addr16
insl
and
insb
insb
and
ja
arpl
and
inc
outsl
ja
insb
outsl
popa
fs
fs
insb
and
insb
and
and
jb
jne
je
popa
outsb
and
outsb
and
je
bound
insb
outsl
popa
fs
popa
jae
and
jae
popa
jb
and
jae
popa
jo
imul
and
and
and
insb
and
outsb
and
and
outsb
insb
outsl
popa
fs
popa
imul
add
add
push
xchg
jb
cmp
push
dec
pushf
adc
clc
or
add
add
pop
push
dec
inc
inc
add
pop
push
dec
push
push
dec
inc
add
pop
dec
push
dec
inc
inc
add
pop
push
inc
inc
push
pop
push
add
pop
push
inc
inc
push
pop
inc
add
pop
inc
dec
dec
inc
push
pop
inc
add
pop
inc
dec
dec
inc
dec
add
pop
push
push
push
add
pop
dec
inc
inc
inc
pop
push
add
jne
addr16
fs
arpl
and
sub
popa
jae
and
outsl
jae
and
and
outsb
and
and
jae
popa
jb
and
outsl
ja
and
and
gs
cmp
push
insb
gs
jae
and
je
and
je
push
and
and
outsb
dec
arpl
push
outsl
data16
arpl
or
jb
imul
je
insb
insb
gs
popa
outsb
jae
je
popa
je
jns
jne
popa
jb
and
outsb
outsb
imul
bound
addr16
add
add
add
insb
insl
outsl
outsb
cs
insb
add
movsl
out
test
aam
or
sub
adc
pushf
inc
cld
call
mov
and
lock
add
add
inc
add
add
xor
push
bound
je
cmp
and
ja
insb
outsl
popa
imul
add
insl
jo
gs
cmp
and
jb
outsb
je
inc
imul
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
ret
ret
pusha
mov
mov
mov
cmp
jbe
cmp
jbe
mov
cltd
mov
imul
div
jmp
xor
lea
call
popa
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
inc
add
ja
outsb
add
add
add
add
add
add
add
outsb
add
add
mov
add
add
add
add
add
jae
or
add
incl
add
outsb
add
add
add
outsb
add
and
outsb
add
jae
jae
add
popa
add
jns
and
add
add
add
imul
jae
add
add
mov
pop
add
push
add
add
add
add
add
add
incl
add
outsb
add
add
add
add
jb
outsl
add
jb
add
jae
and
add
add
mov
add
add
add
add
add
add
add
add
add
incl
add
push
add
je
add
add
add
add
push
add
add
or
and
into
add
add
incl
add
outsb
add
add
add
outsb
add
cmp
add
add
mov
add
add
add
add
add
add
or
add
add
outsl
add
jo
insb
add
je
add
add
add
add
push
add
add
daa
add
add
or
push
add
incl
add
add
add
add
add
add
push
add
add
popf
add
add
push
add
add
incl
add
arpl
add
add
add
add
lret
add
add
add
add
mov
and
add
add
push
add
jae
jae
ja
outsl
add
add
add
add
add
add
outsb
add
add
mov
pop
add
push
add
add
add
add
mov
push
add
add
incl
add
add
and
jo
popa
add
jae
ja
outsl
add
add
add
add
push
add
add
push
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
add
add
add
push
add
add
sub
or
add
add
incl
add
push
add
add
test
or
sub
push
add
add
incl
add
add
imul
add
add
add
pusha
dec
add
adc
push
dec
add
xor
imul
add
loopne
add
add
inc
add
add
add
sbb
add
xor
add
add
pop
loop
add
push
inc
add
add
add
add
add
inc
dec
add
add
add
incl
add
add
stc
jmp
inc
lret
cmpsl
or
out
std
movsl
xor
loop
sbb
ja
sbb
jle
rorl
push
sbb
in
xor
sub
xor
sbb
and
inc
jl
cmp
jae
nop
cmpl
iret
and
pop
or
clc
mov
lea
aad
data16
jno
test
mov
mov
movb
jne
loopne
push
jo
cmp
cmpsl
push
pop
sbb
jmp
out
push
movl
roll
pusha
mov
test
bound
cmp
push
push
adc
and
pop
iret
fwait
sti
das
adc
sar
test
cmp
cmp
push
cmp
pop
in
das
mov
pop
mov
pop
inc
cmp
xchg
push
mul
pop
hlt
cwtl
rorl
pop
jb
adc
mov
cld
mov
cltd
xchg
sarl
dec
mov
xchg
cmp
gs
inc
aas
sarl
in
mov
sbb
jecxz
xchg
data16
lds
or
add
leave
adc
sbb
sbb
cmc
sbb
data16
dec
loop
xor
test
xor
pop
sahf
mov
mov
jae
fbld
or
mov
sub
pop
ds
call
sahf
gs
popf
aas
shrb
movsb
out
jle
insl
pop
jecxz
lods
dec
ljmp
add
sub
pop
mov
mov
subl
jbe
ds
jb
cmpsl
outsb
pushf
pop
lret
in
ss
subb
mov
ja
xchg
repnz
and
das
cmp
adcl
xchg
mov
jmp
das
cmpsb
hlt
lea
xor
add
jmp
mov
lds
out
cwtl
dec
cli
sbb
mov
movsl
dec
and
enter
daa
fcomps
xchg
or
cmpsb
adc
pop
lds
add
and
or
mov
scas
pop
aad
nop
enter
data16
dec
pop
jl
and
jo
loop
inc
or
lcall
xor
mov
jp
sbb
push
orb
lret
stos
scas
das
cmp
push
and
cmp
jg
in
xor
xchg
mov
or
xor
fcmovne
mov
mov
int3
int3
add
mull
push
inc
sbb
inc
inc
and
or
inc
mov
js
xchg
or
and
xor
shrb
inc
dec
and
jbe
jmp
sbb
movsb
fcmovnu
cmpsl
mov
cltd
mov
adc
aas
pop
pushf
movsb
push
aas
cmpsl
sbb
aam
mov
and
pop
and
jno
shll
xchg
pop
push
lods
lahf
jg
jecxz
xchg
adc
fwait
cld
andb
or
mov
je
loope
daa
ljmp
stos
ljmp
adc
stos
sub
push
xor
add
mov
iret
sub
mov
in
mov
sub
pop
sbb
sub
mov
push
sbb
mov
add
fs
sub
jg
pop
dec
addr16
inc
idivb
aas
mov
les
subl
add
sahf
mov
sub
mov
dec
enter
or
pop
xchg
push
scas
mull
enter
std
stos
xor
insb
push
aad
pop
rorb
stos
loope
cmpsl
adc
fwait
add
ret
rcll
.byte
