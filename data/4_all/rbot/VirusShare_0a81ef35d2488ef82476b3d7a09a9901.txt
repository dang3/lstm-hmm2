mov
add
pushl
jo
mov
shl
add
inc
outsl
insl
jo
arpl
je
add
push
ret
add
cmp
invd
lahf
jbe
mov
mov
in
call
cmp
xchg
mov
arpl
mov
sub
add
mov
pop
push
dec
sbb
add
cmc
ds
int
test
stos
popf
add
mov
xchg
sar
push
iret
fwait
ja
xchg
pop
aas
inc
enter
or
and
loopne
dec
cld
jge
bsr
ret
push
xchg
add
dec
pop
mov
test
inc
sub
jmp
sbb
rolb
push
add
xor
add
push
ds
cmp
aad
jge
cmp
aam
mov
jno
sbb
xchg
push
scas
movb
push
loopne
inc
jecxz
push
pop
fmull
jl
add
test
nop
into
insb
add
cmpsb
roll
xchg
or
jbe
out
add
frstor
mov
mov
daa
je
pop
ja
adc
ds
xor
neg
addr16
push
popf
add
pushf
push
movhps
loop
cwtl
add
adc
sar
or
lret
test
int3
jnp
cmpsb
mov
fnstcw
cmp
icebp
add
push
push
adc
inc
push
pop
inc
mov
cmp
shrl
cmp
and
add
sbb
mov
push
jg
or
push
pop
add
jae
cmp
sub
fsub
insb
add
movsl
mov
les
add
mov
lea
xchg
mov
sahf
and
push
sbb
popa
pusha
mov
add
fistpl
xchg
add
push
popf
sbb
xchg
popa
lret
add
sahf
ret
orb
mov
into
movsb
rolb
jo
adc
jo
add
pop
push
loope
cs
xor
xor
cmp
and
jg
pop
mov
pop
jbe
aaa
test
add
jns
and
mov
push
sub
jo
add
call
inc
stos
and
enter
add
inc
mov
xchg
and
add
lret
add
ljmp
std
xchg
scas
stos
test
imul
sub
sti
xor
cwtl
push
or
and
add
xor
out
cmp
push
adc
add
lret
push
xlat
add
xorb
add
xor
lret
lock
loopne
and
sti
add
scas
inc
mov
notb
cmp
aaa
addl
add
pop
arpl
mov
into
cld
and
fcoms
xchg
cld
add
add
fcompl
ret
jae
add
mov
lret
fldenv
leave
lock
jmp
loop
jnp
mov
sub
ljmp
outsl
jle
int
xchg
add
xorb
stos
mov
add
repz
out
xchg
mov
add
mov
lock
jge
sarl
adc
add
pop
add
xor
jl
sbb
addl
outsb
pop
pop
cmpsl
vmwrite
inc
clc
loopne
fidivs
jnp
add
lahf
rcrb
test
push
jp
add
dec
push
push
dec
enter
iret
mov
push
fwait
mov
push
push
aad
out
xor
jo
test
pop
add
push
dec
fs
outsl
push
ja
dec
loop
add
pop
in
mov
adc
inc
add
push
jns
jge
jo
add
xchg
mov
test
test
push
jp
xlat
push
push
stos
add
inc
pop
filds
dec
mov
rcl
add
jnp
jb
add
es
leave
xchg
sub
sbb
adc
ret
or
fprem
out
jmp
inc
sbb
lods
push
add
call
mov
add
stc
clc
jno
add
nop
or
add
sub
sbb
nop
sysret
mov
call
imul
mov
push
mov
adcl
shll
add
pop
test
mov
add
xor
out
add
out
add
sti
ffreep
les
in
add
scas
cmpsb
rorl
pop
lea
jp
pusha
lods
outsl
aaa
cmp
pushf
orb
fwait
ror
sbb
dec
and
cmp
inc
nop
cmp
push
je
into
sbb
cmp
push
mov
add
aam
fstps
pop
ss
sub
mov
cs
cld
jge
add
vmovupd
mov
fdivs
mov
push
jnp
mov
jp
cmpb
push
add
lock
fcomps
mov
mov
push
js
mov
out
pop
cwtl
or
in
test
scas
sub
add
stos
xor
repz
out
roll
mov
in
inc
fiadds
pop
into
and
sbb
jb
add
movsl
mov
xchg
imul
repnz
mov
mov
cmpsl
hlt
add
les
daa
add
aaa
fdivs
add
or
leave
movsl
and
into
and
add
out
mov
mov
and
pop
jecxz
add
push
cmc
pop
pop
adc
std
or
inc
mov
mov
push
add
in
in
add
add
xchg
shrl
dec
mov
xchg
push
jmp
aas
sub
cmp
add
pop
pop
insb
das
add
jmp
les
cltd
add
jne
add
mov
xlat
pop
inc
dec
add
in
mov
mov
pop
push
adc
nop
cmp
add
and
add
lcall
push
imul
mov
add
xchg
inc
cmp
push
iret
or
loopne
pushf
scas
jae
add
cmp
pop
les
dec
fstpt
lcall
xorl
test
mov
jne
ret
xchg
jg
xchg
dec
push
mov
loopne
dec
dec
sbb
sarb
add
fdivl
out
pop
xchg
add
loope
daa
dec
jbe
test
mov
popf
js
xchg
mov
in
add
test
repz
nop
inc
sahf
mov
push
and
sub
jg
pop
ss
sbb
inc
ja
pop
shlb
ret
jge
out
sub
and
sub
add
mov
xchg
mov
ss
pop
leave
dec
aaa
pushf
inc
xchg
add
sbb
pop
rorb
movsb
shrl
daa
dec
mov
sub
cmp
arpl
outsl
xchg
ja
mov
ds
fwait
add
aaa
repz
xorl
add
fwait
xchg
aas
clc
sub
ja
js
incl
inc
fwait
loope
add
stos
adc
xchg
or
nop
push
inc
add
rol
cmc
or
rolb
outsl
push
jmp
or
add
dec
shrb
push
sbbl
dec
and
aas
imul
pop
jg
divb
mov
push
insl
stc
pop
jb
loopne
or
sub
adc
add
or
mov
mov
repz
jmp
add
cld
inc
pusha
push
add
fnstenv
and
jno
pop
data16
insb
nop
in
adc
jo,pn
lret
sbb
test
adcb
pop
shrb
stos
fsub
sbb
lea
adc
nop
les
xlat
sbbb
push
mov
call
fwait
or
cmp
insb
ret
hlt
xor
clc
jl
pop
stc
mov
lcall
adcb
push
mov
fwait
add
les
adcl
add
pop
out
mov
rcll
add
cli
xchg
out
push
test
mov
jle
adc
mov
add
inc
sahf
insb
push
mov
xor
stos
fildl
mov
sti
scas
xchg
je
jmp
dec
xchg
jb
push
pop
and
shll
andl
hlt
and
int
or
mov
xchg
fdivrs
add
popf
call
ja
mov
add
sub
pop
push
fldl
notb
dec
insl
add
fistl
mov
adc
pusha
mov
roll
xchg
repnz
imul
sbb
cmp
cmpl
jecxz
mov
jmp
call
sub
xor
or
mov
ret
pop
shrb
dec
inc
mov
out
pop
push
push
sbbb
aad
movl
xor
nop
test
inc
adc
mov
xchg
mov
pop
sub
mov
pop
push
clc
adc
lds
out
add
lcall
add
sbb
cli
ja
loopne
add
je
mov
push
jo
inc
pop
sub
pop
add
jns
movsl
movl
subb
sbb
mov
jns
pop
fsubl
add
sub
ds
push
popf
xor
loopne
outsl
ljmp
xorb
loop
ret
cmpsb
push
pop
pop
mov
sbb
aad
ret
stos
jb
xor
jns
les
lcall
int
inc
mov
sub
fs
mov
cmp
jnp
sbb
aad
iret
xchg
add
int3
mov
or
clc
mov
imul
cld
shl
aas
or
sbbb
jp
xchg
shrl
rcrb
push
cmp
pop
add
or
cmpxchg
jb
add
lea
xor
incl
addl
leave
or
call
mov
movsb
out
pop
push
or
pop
insl
mov
adc
or
xor
jns
out
addr16
add
mov
mov
add
add
jns
out
jbe
ljmp
jb
add
mov
adc
aas
cs
push
dec
cmp
int
push
add
jns
add
arpl
xor
or
hlt
ret
mov
jo
repnz
xor
movd
int3
or
sub
and
lea
aad
mov
arpl
ret
js
or
pop
lds
pushl
out
in
add
fwait
lret
mov
ficomps
test
add
imul
fisubl
pop
ret
jg
testl
mov
adc
scas
inc
mov
sahf
fcmovnb
add
xor
or
rcrb
flds
iret
in
push
aas
dec
repnz
pop
xchg
add
add
jno
cmc
lock
cltd
clc
push
add
push
int3
popf
fcmovbe
cmp
scas
xchg
test
outsb
aaa
mov
or
nop
or
ds
fisttpl
lock
inc
cwtl
inc
fimuls
fs
mov
nop
jo
add
les
int3
jne
push
cltd
xor
inc
cli
in
insb
push
fildl
sub
jle
popa
add
movsb
addb
pop
test
jns
ror
mov
jmp
popa
mov
jge
xchg
adc
add
insb
mov
pop
sbb
das
daa
repz
popa
sub
out
popf
or
ds
mov
sub
addb
insb
xor
cmp
nop
cmp
pop
inc
pop
push
imul
jo
shl
mov
pop
add
ret
add
into
push
imul
out
sub
jne
clc
shrb
daa
imul
jmp
add
jp
jns
add
sub
lret
mov
mov
mov
and
jg
cmp
mov
cli
fisttpl
jecxz
add
pop
push
loop
add
xor
scas
int3
add
fists
push
sbb
jno
add
popa
movsb
dec
sbb
add
arpl
pop
sarb
mov
loopne
or
rcll
add
dec
mov
ja
fwait
dec
add
xchg
rcl
sub
add
jns
mov
je
add
sahf
gs
mov
mov
sbb
rcl
xor
scas
les
imulb
mov
cmp
or
cmp
and
pop
jo
add
mov
add
icebp
movsb
jno
pop
jae
jge
aas
inc
and
fldl
scas
xlat
xchg
jns
inc
inc
add
shlb
test
sbb
pusha
int
pop
std
cmp
mov
inc
add
cmp
add
pop
adc
add
pop
jmp
mov
je
lock
mov
jns
mov
rolb
sbb
cs
std
add
outsl
ret
pop
str
mov
cmc
cmp
enter
out
scas
add
jne
jno
mov
inc
jp
fldenv
sahf
dec
add
mov
xchg
aaa
add
jbe
dec
add
mull
jb
add
push
xchg
es
or
add
mov
add
pusha
cwtl
push
xchg
ljmp
adc
add
inc
mov
mov
add
pop
aad
adc
mov
ja
or
rolb
jmp
repnz
mov
fmull
and
iret
movsb
add
pop
mov
push
stc
add
dec
bound
xchg
xor
jne
cltd
aaa
mov
pop
inc
push
sbb
in
push
lea
cld
daa
sub
notl
addb
clc
and
add
or
cltd
jg,pt
or
je
push
cmp
enter
push
add
pop
add
sbb
aam
mov
insl
sbb
mov
subl
mov
les
jmp
dec
test
fmuls
add
jp
pop
pop
or
hlt
jecxz
cltd
test
mov
mov
lock
iret
mov
loop
pop
stos
lret
aaa
shl
xchg
stc
cmp
push
jge
jbe
jl
add
cmc
mov
push
jge
add
stc
sbb
add
dec
adc
test
mov
ret
shrb
lret
sbb
xorb
cmpsl
push
cld
nop
hlt
push
xor
mov
add
adc
adc
sbb
add
jmp
fcomps
push
fldt
shrb
add
mov
mov
in
les
cs
jge
mov
adc
gs
rol
sub
leave
mov
pop
outsb
aad
lock
pop
xor
add
lret
pushf
lock
add
shrb
push
sub
add
mov
in
fdivr
xchg
subb
pop
add
adc
test
pop
jo
cmpsl
pusha
sbb
sub
and
dec
mov
sahf
inc
add
out
hlt
inc
cld
test
cmpsb
fadds
jge
xor
popl
mov
add
xchg
xchg
add
mov
ljmp
cmp
std
or
cld
push
add
and
mov
add
ss
xor
push
mov
ds
scas
xor
push
shlb
add
jl
xchg
icebp
mov
aas
faddl
rol
mov
int
mov
mov
pop
add
xchg
hlt
mov
mov
out
clc
mov
adc
ret
push
mov
cmp
xchg
pop
add
and
arpl
sub
rolb
mov
dec
jg
out
mov
push
sub
cmp
sub
test
jo
js
sahf
dec
mov
sbb
gs
lock
dec
pop
add
imul
mov
mov
jmp
lea
ret
in
and
outsl
movzbl
mov
inc
add
scas
dec
xor
jle
out
add
adc
cld
xor
sbb
popl
dec
cmp
aad
hlt
xchg
out
xchg
add
sub
daa
lds
push
mov
push
xor
cltd
xchg
cmp
pop
into
cmp
sarl
adc
sbb
jne
subb
add
lods
push
sub
mov
shl
add
sbb
mov
mov
pop
je
ljmp
adc
lea
mov
addb
or
push
adc
jo
in
lods
shlb
push
mov
out
loope
sbb
push
add
lret
nop
pop
add
inc
pop
mov
add
iret
test
mov
movl
adc
fs
jmp
subb
xchg
add
adc
imul
xchg
insb
add
mov
inc
add
inc
jae
fwait
sbb
jp
mov
outsl
cmp
not
sub
movsb
clc
popa
sub
push
and
je
ss
js
shlb
push
jge
add
mov
outsl
cltd
mov
xchg
xor
scas
add
and
add
test
add
test
popf
outsl
xor
add
shrb
sbb
jge
adc
mov
lds
jnp
ljmp
shl
sahf
pushf
out
mov
repnz
add
inc
push
fisttpll
lods
pop
popa
adc
mov
jecxz
mov
lahf
and
mov
adc
dec
pop
add
add
cli
sbb
mov
lret
js
cmp
add
mov
push
add
pop
sbbb
add
adc
std
or
xlat
add
cwtl
lret
mov
add
js
jnp
mov
out
lods
add
push
cmp
jae
std
out
add
cmc
inc
das
pop
into
add
push
int
arpl
push
mov
sub
js
pop
jne
lahf
loopne
mov
inc
add
mov
xor
das
add
xchg
add
aas
push
ljmp
dec
comiss
add
fwait
pushf
out
push
fmuls
push
test
fistpll
mov
jo
sub
sub
push
inc
or
adc
popf
add
or
sub
dec
and
sbbb
loop
stc
inc
ret
fwait
inc
rolb
pop
aaa
out
add
and
lds
scas
jnp
or
add
into
lea
cmp
mov
in
jbe
jo
sbb
cmp
sbb
add
push
lea
xor
psubsw
test
arpl
push
pop
add
sti
pop
repnz
and
add
xchg
add
push
aam
scas
decl
cli
or
cmp
add
dec
fwait
inc
and
jae
rcrl
sarb
or
stos
xor
inc
pop
ret
testl
mov
xor
cmc
sub
add
dec
push
int3
mov
add
xlat
adc
add
cltd
mov
lea
leave
sbb
jns
cld
cmpsb
add
pop
lods
hlt
add
arpl
sbb
clc
mov
pop
sub
ss
add
and
add
xchg
inc
or
sarb
jmp
rcll
in
lahf
add
js
xor
and
dec
xor
cmp
xchg
je
mov
jbe
add
stos
mov
fcomip
rep
mov
testl
cmp
call
jnp
repz
mov
lea
pusha
cmp
das
push
notb
add
inc
nop
subl
xor
add
fs
fmuls
pop
dec
cmp
sar
test
ds
rolb
pop
sbb
loopne
fdivrp
loopne
add
pop
popf
or
add
stc
mov
dec
js
mov
cli
dec
inc
ljmp
add
lea
add
pop
es
inc
add
dec
jno
and
outsb
stos
adc
fs
rolb
or
cs
testb
sbb
adc
sti
inc
sub
mov
sbb
pop
call
mov
mov
cmp
popa
aam
mov
mov
xor
and
je
dec
mov
add
subl
ret
aam
call
mov
or
dec
xchg
or
call
fmul
add
jg
mov
mov
add
in
enter
sbb
sbb
add
xor
cmpsl
jbe
add
push
fprem1
loop
add
clc
bnd
ss
cld
add
addr16
sub
jae
mov
call
inc
mov
inc
or
sbb
add
insb
into
jbe
mov
add
xlat
mov
hlt
sbb
sub
mov
imul
xchg
insl
jg
sbb
jb
sbb
dec
nop
add
xchg
decb
cmp
jmp
clc
loope
out
add
lret
adc
sbb
inc
jecxz
mov
cmp
aad
adc
push
test
cs
xor
addr16
sbb
mov
add
dec
test
jo
add
inc
push
cmp
add
scas
adc
repnz
filds
mov
pop
adc
fadd
mov
daa
stc
enter
insl
xchg
jge
repnz
test
in
xor
add
repz
orl
or
mov
push
pop
add
sbb
les
add
and
pop
or
adc
lahf
mul
add
idiv
pop
test
mov
jne
adc
xor
sub
cmp
in
add
mov
in
add
mov
fidivs
pop
mov
add
xchg
xor
inc
add
mov
out
xchg
push
push
js
leave
loope
jmp
add
jno
call
xor
arpl
mov
add
mov
mov
add
cltd
mov
stc
adcl
clc
jbe
mov
push
xchg
add
lret
sub
imul
test
sbb
cli
test
pop
lcall
or
add
xchg
add
clc
cltd
lea
dec
insl
scas
inc
or
and
rcll
mov
sub
lahf
xor
jg
flds
inc
inc
sbb
das
or
or
dec
lods
cmp
lcall
add
repz
dec
int
cmp
pop
sahf
test
or
adc
sbb
fwait
pop
dec
mov
or
or
inc
andb
xchg
sbb
subl
icebp
or
adc
popa
push
scas
cs
sbb
jp
add
mov
fld
add
or
or
negl
mov
or
in
inc
or
xor
test
adc
adc
xchg
cmp
pop
jo
clc
lock
stc
fs
enter
repz
sub
xlat
inc
leave
or
pop
add
mov
add
or
movsb
int3
pop
pop
or
sub
pop
in
dec
bound
ljmp
jbe
mov
test
cs
imul
pop
movsb
stc
pop
lea
test
mov
jae
jecxz
cwtl
int3
subl
and
cmp
and
pop
test
sub
scas
jmp
je
xor
xor
add
jne
mov
pop
xchg
sub
add
es
sahf
cmpsl
shlb
xchg
lcall
jo
ds
lahf
data16
xchg
ret
add
mov
sub
and
div
or
mov
mov
mov
sub
or
lds
fisttpll
adc
in
adc
mov
add
push
fdivl
jnp
mov
outsl
fstpt
or
repz
add
xchg
lock
popl
xchg
test
imul
cmp
arpl
dec
inc
or
repz
jne
pop
jbe
pop
test
xor
movsl
pop
pop
cli
inc
add
inc
xor
add
or
jnp
and
dec
fdivrl
ds
xchg
push
and
shlb
dec
popf
add
xchg
repz
cmpb
test
pop
adcl
cmp
pop
mov
pushl
add
int
and
fistpll
add
dec
mov
mov
mov
dec
mov
insl
xor
pcmpgtw
cmp
adc
addl
data16
cmp
mov
sti
pop
lock
and
fcom
or
les
push
inc
xlat
pop
xchg
sbb
xchg
mov
or
ja
jle
idivl
sbb
add
jns
in
fstpl
push
add
inc
gs
bound
add
mov
rol
pop
dec
es
add
ds
cmpsb
imulb
jmp
loop
cmp
pop
cmp
fwait
cmpsl
sbb
push
testl
and
fildl
sarb
add
xchg
xchg
ljmp
cs
cmp
jmp
popa
lods
xor
add
pop
nop
mov
xor
lret
xlat
fldenv
pop
mov
and
push
xchg
les
adc
lret
decl
xchg
push
insl
add
or
lret
cmp
faddl
add
adc
mov
add
enter
sbb
cli
mov
lea
roll
pop
inc
or
out
arpl
test
mov
add
and
mov
xchg
sub
xor
push
pop
sbbl
pop
sbb
jns
rcrl
fcom
add
cltd
cmp
fbstp
pop
dec
cwtl
or
std
mov
ja
cmp
pop
cltd
addr16
pop
add
scas
loope
pop
cmp
bound
lea
sub
jp
data16
mov
out
mov
popf
push
jge
jl
fs
stos
shl
movb
sub
out
and
in
add
cmp
sub
aaa
fimuls
popl
add
addr16
mov
add
pop
inc
js
scas
mov
adc
aam
pusha
vmovapd
xchg
add
pop
mov
xor
push
inc
pop
loopne
mov
mov
sub
negb
jle
add
pop
aas
outsl
mov
mov
cmp
fistpl
cmpb
fisubs
bound
cs
ljmp
nop
add
aas
repnz
jno
movsb
jae
or
xlat
imul
push
shlb
add
nop
pop
xor
aaa
pop
mov
ja
push
out
mov
sbb
popa
cwtl
loope
cmpsb
or
inc
fbstp
add
mov
mov
cli
xchg
add
les
mov
push
mov
inc
loopne
gs
jmp
push
imul
inc
ret
pop
cmp
add
jo
mov
int
pop
hlt
incl
and
mov
jp
jne
packsswb
jo
imul
stos
xchg
add
xlat
popa
push
mov
lock
sbb
mov
ficoms
pushf
mov
jne
leave
pop
xor
push
push
fists
imul
push
xchg
in
ret
or
push
mov
dec
fisubrl
enter
add
pop
out
adc
mov
add
fsubr
dec
xchg
out
sar
push
add
data16
pop
add
push
xchg
insb
mov
fcomps
inc
add
push
popa
xchg
dec
add
add
fldenv
push
int3
cmp
popa
xchg
lret
out
inc
stos
push
mov
ljmp
add
pop
xorl
or
mov
jecxz
inc
jmp
imul
pop
enter
je
movsl
inc
jae
divb
add
out
dec
add
inc
mov
ss
add
sbb
add
sub
push
out
rolb
adc
lock
dec
add
shl
stos
lcall
je
push
sbb
jnp
sbb
push
loopne
mov
dec
dec
lea
insb
xor
add
ficoms
mov
add
roll
ds
int3
sub
popa
pop
push
push
inc
xor
or
lcall
incb
sub
pop
mov
dec
sbbb
mov
jo
add
fisubrs
data16
xchg
adc
push
test
std
xor
nop/reserved
aas
push
inc
ds
addr16
nop
xlat
mov
outsl
dec
or
and
jae
mov
push
add
mov
xor
add
mov
xor
push
xlat
xor
dec
mov
clc
jl
add
unpckhps
or
lret
es
daa
cmpsb
sbbb
sbb
sbb
mov
jp
add
and
rcll
in
jno
jge
loop
or
mov
sbb
mov
jno
or
mov
push
in
pop
xor
movb
sahf
sub
and
addr16
add
scas
outsb
jb
imul
mov
clc
push
idivb
andb
mov
add
divl
push
enter
mov
cmc
sub
scas
xchg
cmp
mov
lahf
add
stc
clc
add
outsb
das
inc
xor
repz
jle
mov
add
js
add
or
cmpsl
cmp
cmp
mov
add
lcall
sbb
push
pop
jecxz
fcomp
add
out
pop
xchg
add
push
flds
lret
adc
cmovne
in
mov
xor
nop
inc
and
add
cmpsb
cmpsl
ret
pushf
push
imul
cli
add
mov
mov
sbb
add
xchg
dec
jge
subb
aaa
rclb
in
cmp
test
pop
lret
or
popf
add
jmp
add
or
orb
iret
incl
fsubl
xor
mov
shlb
sub
shrl
data16
jne
fiadds
pop
sub
clc
xor
loopne
ret
add
loopne
sub
mov
lea
mov
inc
mov
lahf
push
mov
ror
sub
loop
adc
adcl
add
pop
mov
jo
push
call
xchg
cmpsb
outsb
pusha
shrb
lahf
test
ds
lds
lret
add
sbb
xlat
mov
fisubrl
fsubl
pushf
add
iret
shl
adc
rolb
adc
lea
dec
xor
xchg
push
je
add
add
aad
lea
lds
cmp
adc
xchg
mov
and
xchg
popf
enter
xor
movsb
mov
call
xchg
add
hlt
mov
ljmp
add
fdivr
in
mov
pop
xor
je
fstps
jo
outsb
push
push
dec
jno
xorb
cltd
test
ss
dec
dec
add
jp
mov
out
xchg
out
stos
mov
xchg
cld
sub
cli
and
jno
aaa
sbb
xor
jg
pop
sahf
xchg
cli
repnz
adc
adc
sub
in
notb
adc
add
mov
das
cmp
pop
add
js
ljmp
adc
mov
add
dec
push
out
adc
add
inc
xor
xor
dec
dec
xor
jg
jb
add
pop
mov
and
push
stos
pop
jl
inc
sahf
cld
add
lcall
mov
js
hlt
add
sub
inc
clc
add
les
push
add
fildll
lods
add
or
jp
sub
add
rolb
jecxz
push
jmp
add
jbe
sub
mov
lcall
cmp
cmp
shll
sub
and
sahf
fbstp
cmp
lock
call
xchg
repz
cmp
int
add
lods
inc
mov
pop
hlt
repnz
push
pop
cld
jge
imul
data16
push
insl
faddl
mov
and
and
sbb
jmp
test
lcall
sbb
cmp
in
imul
test
inc
lds
stos
into
jne
addb
dec
or
lret
stos
js
xchg
add
sbb
cs
shl
adc
ficoms
cwtl
push
add
aas
aad
dec
cmp
xchg
lods
cs
xor
adcb
mov
pop
ret
mov
or
inc
pop
mov
push
add
xchg
mov
adc
inc
sbb
pop
inc
xor
inc
add
add
pop
cmp
mov
daa
loopne
pop
inc
push
inc
fists
xor
pop
repz
pop
sub
jp
je
test
push
or
sub
cwtl
and
jae
lock
add
and
lods
add
xor
aad
shlb
dec
addb
and
ds
add
jle
in
scas
ficompl
leave
adc
lret
sarl
jnp
out
stos
push
divl
xchg
adc
imul
stos
data16
xor
xchg
std
dec
outsl
mov
cltd
add
test
andb
pop
add
mov
push
mov
jns
or
pop
lods
call
adc
xorb
add
xor
jp
pusha
push
push
push
into
xor
out
push
add
cmc
pop
popa
test
dec
add
enter
sub
add
test
addr16
pop
jae
mov
jns
mov
jno
add
subl
pop
mov
pusha
cmpsb
stos
sub
add
into
jns
ss
add
sub
xchg
xchg
add
sub
sub
popa
in
add
pop
cmp
dec
outsb
test
mov
jp
pop
bound
jno
add
jns
xor
sbb
adc
adc
orl
arpl
or
sbb
add
sub
js
cmpsl
hlt
add
scas
cmp
add
mov
cltd
insl
add
sbb
jo
dec
xchg
lods
add
fsubrs
and
or
jb
es
adc
scas
xor
push
dec
pop
fisttpl
jp
push
and
mov
call
int3
lods
dec
scas
aad
jecxz
imul
push
nopl
das
inc
push
add
call
sub
mov
fistps
enter
add
imul
ja
sahf
out
cwtl
les
shl
jns
int
push
inc
dec
fldt
push
loope
les
dec
sar
add
outsl
ljmp
pusha
movsl
je
jne
push
jb
cmp
rcll
add
sbb
mov
add
daa
mov
mov
icebp
add
sarl
iret
sbb
xchg
lods
mov
xchg
push
adc
loopne
add
jae
cmp
mov
insb
add
xorl
push
std
add
cmp
lods
mov
and
shrl
rolb
xchg
mov
xor
pusha
mov
jl
push
mov
xor
pop
inc
add
dec
orl
or
adc
andb
out
cli
cmp
scas
rcrb
shrl
adc
sub
inc
push
add
out
add
loope
adc
mov
shll
add
mov
cmc
mov
dec
dec
imul
mov
cvtdq2ps
inc
cwtl
xchg
mov
add
fistps
and
out
jae
or
lds
mov
inc
repnz
xchg
loopne
add
rolb
sti
xchg
call
mov
add
fsub
into
add
jmp
ja
mov
pop
dec
add
inc
scas
aas
flds
fisubl
inc
mov
mov
rorb
movsl
push
inc
fs
cmpsl
add
jle
and
adcb
pop
scas
shrb
add
cmp
mov
add
xchg
add
dec
xor
add
int
dec
add
jg
mov
push
xor
sbb
jl
movsb
cmc
in
add
sub
ret
jb
and
cmp
jmp
int
inc
fstps
xor
out
pop
add
shlb
pop
pushf
daa
inc
mov
xchg
cli
or
out
add
mov
sbbb
add
dec
sub
call
fisubl
jb
call
cld
adc
sub
add
xchg
mov
aaa
shl
add
mov
jg
xor
lea
push
xlat
ficomps
add
dec
adc
sbb
jno
add
andb
outsl
inc
adc
sahf
add
xorl
mov
out
add
cmpsb
cmpl
dec
push
pusha
push
sub
mov
fnstenv
or
push
add
fwait
mov
lret
cltd
push
add
mov
stos
pop
test
movsb
add
pop
inc
add
lcallw
mov
sbb
dec
add
xchg
in
repnz
push
add
lds
ficoml
jb
add
cwtl
sbb
push
add
mov
push
add
in
cld
clc
lods
xor
pop
mov
xor
scas
dec
outsb
add
les
loopne
pop
add
xor
fiadds
sbb
pop
idiv
enter
add
cld
rcl
push
add
rcrl
sub
mov
add
add
mov
addb
aaa
jge
or
adc
cltd
lret
mov
js
movsl
add
nop
lahf
and
cvtps2pd
push
add
lock
in
inc
inc
mov
lea
xor
push
xchg
cld
scas
push
out
sbb
shlb
or
xchg
cmp
cmpsb
cmovle
pop
mov
aaa
ret
dec
add
and
sbb
mov
dec
loopne
iret
je
cmp
adc
sub
sti
mov
rorl
push
negb
insb
or
es
orb
sbb
jecxz
popf
add
loope
fs
fucom
cwtl
pop
mov
and
add
add
add
popl
add
imul
mov
inc
mov
sbb
add
rcrl
lret
mov
stos
jb
or
jg
xchg
jae
sbb
add
das
jl
mov
test
in
mov
adc
ret
cmc
mov
nop
push
ljmp
adcb
jno
pushf
inc
adc
addb
faddp
and
xor
cld
push
dec
add
add
and
scas
movsb
push
sbb
cmp
orl
mov
add
inc
add
xor
xchg
jle
subb
cld
sub
lcall
ficoms
js
cmp
mov
aas
enter
insl
ds
pop
ljmp
push
pop
or
sub
loopne
xchg
daa
out
and
mov
sub
add
push
push
int
xor
add
fs
in
cltd
jbe
out
loop
faddl
jle
sub
mov
sbb
fwait
sub
jno
int
and
sub
inc
arpl
or
xor
cld
add
loop
mov
cmp
test
add
gs
ret
pop
push
cmp
pop
add
mov
add
adc
sub
pop
mov
push
inc
sub
add
and
inc
les
xchg
aas
hlt
xchg
push
call
mov
stos
jl
repz
add
adc
add
adc
add
xchg
cmpsl
aam
into
xchg
mov
ja
push
out
adc
xchg
mov
cld
fistl
push
pop
loope
imul
push
inc
mov
add
mov
mov
lret
stc
add
xchg
cmp
cld
in
add
or
sahf
fs
or
pop
xorb
add
adc
adc
dec
or
pop
xor
hlt
mov
fistps
je
push
xchg
mov
mov
jmp
mov
shl
ret
mov
lods
gs
mov
jo
sub
lock
dec
push
cmp
fsubrs
adc
aam
or
in
pushf
mov
or
add
jl
add
imull
add
mov
pusha
dec
xor
test
ljmp
stc
jmp
arpl
add
fstl
pop
push
push
add
aad
sub
fwait
jo
sub
add
insl
shlb
dec
add
jmp
add
cmp
iret
add
cmp
add
lods
or
mov
bound
popa
jecxz
loopne
cmc
add
sub
incl
push
xor
repnz
testb
mov
daa
or
push
jl
jge
jno
mov
cmp
pop
inc
iret
jp
add
fmul
xor
into
push
inc
or
sbb
mov
add
enter
xchg
add
inc
adc
add
es
fs
data16
xchg
sub
mov
cmc
jns
scas
mov
lahf
or
jmp
addb
or
pop
in
inc
pop
xchg
mov
enter
andb
sbb
in
xchg
mov
fistps
out
mov
add
cmp
cmp
sub
xor
inc
clc
sbb
aaa
or
mov
add
scas
addr16
add
add
xchg
movsb
test
stos
clc
int
pop
xor
jae
add
in
mov
call
loope
testl
push
ret
add
jmp
jb
cmp
arpl
rclb
or
das
cltd
add
icebp
mov
stos
imul
dec
lods
xor
imul
add
loopne
jecxz
sub
inc
in
adc
cmc
add
mov
push
add
jecxz
sbb
mov
pusha
pushf
xlat
in
insb
jae
je
sbb
jne
filds
loope
cmp
add
idiv
xchg
fimuls
dec
popf
iret
mov
clc
jl
jp
cmpsl
fdivrs
mov
sbb
pop
sarl
sti
jg
xlat
dec
jbe
inc
jno
or
call
cmp
sub
sub
test
pop
adc
push
inc
stc
mov
push
mov
jge
sub
sbb
sahf
mov
movb
in
add
cmp
movzbw
sbb
jbe
dec
inc
inc
mov
add
das
push
pop
outsb
inc
ljmp
inc
inc
adc
add
fwait
push
das
mov
mov
fisttps
add
les
and
jecxz
je
stos
filds
std
out
adc
loopne
movsb
and
inc
xchg
xchg
imul
add
int3
scas
iret
fdivl
add
pusha
or
or
jae
scas
xor
shlb
lret
enter
lds
and
js
cmp
cmp
xchg
lahf
pop
pop
fsubl
out
movsl
adc
mov
jns
add
addr16
mov
leave
sahf
stc
xchg
ds
cs
addl
sbb
add
andl
or
loope
sub
adc
jb
cli
int
into
stc
mov
dec
pop
cmc
lcall
push
add
shl
add
cs
and
pusha
icebp
adc
add
clc
rolb
and
fadds
mov
fiaddl
mov
pop
xlat
mov
jp
lods
fldt
mov
notl
sub
sub
sbb
add
lea
mov
pop
xorl
mov
push
pop
adcb
mov
cmpsl
roll
push
inc
xchg
rcll
add
sarl
lea
sub
das
pusha
xchg
ret
push
adc
pop
push
popf
push
stc
fidivrs
push
add
xchg
jno
pop
push
fldenv
add
sub
mov
sbb
lahf
xorb
pop
adc
or
pop
test
xor
push
dec
pusha
shl
test
mov
out
enter
scas
imul
add
and
fsts
add
mov
add
sahf
movsb
shrd
pop
pushf
mov
hlt
cmp
mov
mov
xchg
add
mov
cmp
leave
add
test
add
pop
or
push
shlb
lret
xor
cmp
testl
arpl
icebp
cmp
lahf
add
pop
imul
mov
jnp
add
aas
inc
hlt
pop
test
add
sbb
adc
add
in
scas
repnz
jp
add
out
jnp
pop
mov
dec
lea
popf
ja
in
push
cli
pop
cmc
in
arpl
xor
mov
add
jo
cmpsl
add
mov
or
lret
scas
ficoml
sub
mov
pop
lock
jl
push
mov
pop
fs
and
jle
fstps
add
sahf
sub
cmp
sbb
xchg
in
lret
add
jmp
mov
add
in
stos
ds
sti
cltd
outsl
pushf
and
or
mov
jp
movsl
stos
add
jg
push
jne
popa
sbb
sub
inc
stc
jo
and
lcall
ja
cmpsl
shl
out
xlat
int3
add
dec
out
jne
paddusb
loope
mov
aam
je
fs
js
and
mov
imul
stos
pop
aad
loopne
or
xchg
inc
subb
cld
adc
mov
add
arpl
add
add
and
mov
mov
cltd
add
mov
mov
fstps
or
stos
adc
insb
inc
loope,pt
xchg
fmull
sub
add
add
outsb
stc
lock
xor
push
mov
xchg
mov
jns
push
sub
mov
test
cli
mov
mov
push
jl
shlb
mov
pushf
xor
sarl
popf
xor
aaa
js
add
pop
jo
rorb
sub
lahf
pusha
pop
fnstcw
rcpps
fldl
add
xor
push
push
inc
sbb
xorb
cmpsl
xorl
inc
ror
pop
mov
add
add
pusha
jns
xor
sbb
add
mov
subb
pushf
add
in
pop
inc
mov
push
shlb
aaa
fdivr
cmp
xlat
mov
imul
xchg
sub
add
movsb
add
add
out
mov
mov
jecxz
mov
das
add
mov
jnp
jle
add
dec
fwait
lret
ret
push
test
cmp
jecxz
add
and
inc
aad
xor
rcll
lret
adc
pushf
cmp
pop
jle
adc
add
jmp
mov
cmp
xor
or
das
repnz
out
jle
ud1
and
icebp
add
add
mov
aaa
add
add
inc
mov
mov
xchg
movsl
lret
insb
arpl
mov
lds
popf
inc
mov
xchg
faddl
scas
call
pop
lret
jg
add
aas
das
mov
add
mov
ljmp
jmp
loope
aam
mov
xchg
pop
xchg
or
push
jl
lret
and
outsb
mov
ficompl
sarb
fisttps
imul
or
jo
inc
add
mov
addr16
jle
pusha
lock
movzwl
add
out
rclb
add
outsl
test
push
inc
into
dec
mov
shr
fcmovu
les
ss
out
jecxz
jno
lock
mov
rcrl
and
pop
jno
add
inc
push
mov
arpl
mov
icebp
add
fisttpll
adcb
mov
add
add
sbb
xor
out
xor
add
xor
fadd
or
xchg
pop
fistpll
cld
fildl
add
inc
out
test
in
clc
icebp
out
mov
aad
push
sbb
add
dec
outsb
fwait
cmp
add
add
aad
popl
pop
dec
sahf
xchg
sub
insl
or
sub
daa
out
mov
sub
stos
shl
add
cmp
fwait
jnp,pn
jmp
sub
hlt
add
int
stos
cltd
xor
aas
lods
sub
insl
jno
sti
ljmp
push
es
xchg
cmp
into
add
mov
add
rcrb
sub
jns
nop
mov
lods
or
push
imul
add
icebp
insb
jecxz
sub
popa
jmp
inc
xor
repz
xor
add
movd
shl
add
mov
std
add
loopne
subb
popa
xlat
and
pushf
fcomps
add
mov
mov
movl
call
pop
push
gs
push
jo
pop
mov
and
dec
out
mov
repz
push
int
sbb
add
add
mov
ret
cld
mov
das
arpl
cwtl
or
lea
les
in
sbb
ja
addb
out
adc
stc
add
jp
clc
mov
out
adc
or
movsb
out
pop
and
bound
inc
popf
mov
mov
movsl
pusha
in
jle
and
mov
out
movl
lods
dec
inc
add
push
push
fstl
fwait
jb
pop
add
mov
std
xchg
jl
adc
push
pop
jmp
and
into
sub
imul
addl
add
jo
push
pop
das
jo
adc
nop
mov
lcall
mov
push
clc
fwait
jp
mov
or
jne
sahf
and
ret
cmp
pop
cmp
cld
push
out
dec
add
lods
cmp
xor
jge
lar
inc
or
in
sahf
and
testl
icebp
repnz
jo
lret
pop
dec
or
push
adc
sarb
add
cmp
movb
adc
popa
push
mov
ret
jb
loop
loope
icebp
add
fidivs
pusha
movsl
push
add
push
pop
imul
test
adc
fadds
daa
cwtl
sbb
les
add
loopne
jnp
fcmovnu
inc
push
mov
inc
mov
adc
and
stos
mov
pop
rorb
movsl
imul
add
mov
or
mov
xor
pop
sti
stc
fdivp
push
jmp
test
ds
sahf
lods
cltd
add
and
addl
insb
aas
jno
sub
add
adc
pop
clc
in
adc
add
lret
cmp
adc
lods
mov
std
sbb
mov
rorl
add
hlt
jbe
add
imul
adc
xor
movsb
sbb
pop
jb
and
sbb
andb
loopne
jns
jl
add
sub
mov
add
mov
and
dec
sbb
and
dec
xchg
cmp
cmp
pusha
inc
mov
xor
fadd
sbb
sbb
mov
mov
sub
adc
mov
jmp
inc
inc
mov
in
sbbb
sti
jp
mov
inc
xchg
jns
jnp
mov
leave
xchg
xchg
sbb
es
dec
je
mov
jo
popa
push
jle
rcll
out
sub
adc
int
out
push
rolb
lods
adc
mov
sub
jl
add
outsl
add
push
int
imul
mov
scas
mov
pshufw
add
lds
repz
pop
rorl
lea
loope
add
cld
push
push
fmuls
and
dec
out
add
lcall
jmp
adc
daa
rolb
dec
add
mov
lock
add
cmpsl
xchg
shrb
add
pop
ss
leave
ds
lods
add
in
mov
fdivs
testl
push
and
xor
mov
scas
jg
xor
mov
or
mov
and
xor
sti
and
push
vpaddusw
subl
jne
fxrstor
cmp
pop
inc
cmp
or
mov
push
xchg
call
lods
js
scas
cs
add
sub
add
loopne
add
insl
and
cmc
mov
jb
add
daa
dec
fnstsw
mov
lea
add
add
add
mov
loope
pop
stos
add
rorl
fsts
jno
add
inc
add
and
add
mov
les
add
or
mov
es
dec
add
jo
xor
repnz
and
and
sbb
mov
js
test
in
addr16
mov
add
mov
stos
les
xchg
add
loopne
ret
sub
add
cwtl
flds
mov
aas
lret
push
subb
add
push
arpl
sbb
mov
mov
xchg
mov
movsb
popf
scas
mov
aam
stc
add
cmpsl
aad
cmp
fdivrs
cmp
test
adc
loope
add
decb
cld
add
lcall
add
je
fcomps
sub
pop
push
mov
inc
rolb
or
cmp
sub
cmc
push
xchg
testb
lods
cld
mov
fcos
loopne
inc
bound
push
loope
cmp
nop
inc
sahf
add
int
ja
enter
jge
add
jbe
cs
icebp
dec
xchg
sahf
add
inc
fcomps
movups
std
jp
mov
xor
xchg
push
add
push
mov
push
cltd
pop
sti
lret
mov
cmp
cmpsl
mov
ds
sub
inc
insb
push
add
xchg
cmp
or
sbb
sarl
or
das
pop
add
sbb
add
and
mull
jle
add
or
add
jbe
inc
lea
add
imul
mov
mov
jo
jo
bound
std
cwtl
in
mov
les
insb
stos
sbb
push
xlat
add
inc
push
adc
pop
inc
and
push
lds
add
addb
jecxz
adc
pop
mov
jae
add
jge
or
iret
inc
pop
add
mov
enter
sbb
pusha
roll
mov
add
in
loop
mov
scas
lds
and
xor
aas
jge
fstps
add
pop
mov
out
dec
fcmovnb
stos
mov
push
daa
jbe
ficoml
sub
lret
negb
ffree
push
pop
orb
pop
add
or
mov
jecxz
xchg
push
popf
pusha
inc
mov
rclb
addr16
js
push
pop
adc
lock
repz
add
clc
inc
inc
popf
inc
adc
add
lahf
mov
jb
call
fs
inc
mov
adc
les
movsl
lret
cmp
xor
pop
push
pop
add
enter
add
out
xor
pop
add
cld
in
scas
jne
jle
inc
jae
out
inc
and
addr16
pop
data16
and
imulb
pop
push
fimull
loope
jecxz
ljmp
out
out
orl
scas
js
add
mov
cld
test
push
add
jmp
jns
add
jne,pn
sbb
jmp
aaa
pop
iret
sbb
and
adc
jmp
pop
out
sub
ret
jo
es
push
ja
test
or
and
xchg
incl
fldcw
mov
inc
add
sahf
push
cld
jnp
jp
add
mov
xchg
in
xchg
add
jmp
mov
jno
ja
add
das
add
rolb
lea
pop
std
filds
add
add
mov
repz
andl
je
aam
stos
das
outsb
out
push
mov
jbe
lahf
add
pop
cli
add
or
adc
add
movsl
dec
sti
les
add
jb
jno
rcrb
cmpsl
push
outsb
clc
out
mov
add
mov
xchg
stc
xor
add
pushfw
rcr
jo
adc
pop
push
jo
push
add
sti
inc
sbb
mov
xchg
jns
jle
ficoml
mov
add
mov
incl
mov
dec
cmpsb
ss
cmp
sbb
lcall
push
cli
in
and
xchg
ret
pop
fldln2
mov
test
xchg
pop
mov
or
sub
fisttpll
addl
mov
add
lods
inc
mov
add
flds
outsl
andb
pop
mov
cs
cmc
nop
call
ss
out
cmp
rcr
add
dec
call
leave
cmp
add
add
add
sub
cmp
inc
mov
clc
push
mov
sub
into
sbb
add
fadds
ljmp
dec
add
icebp
outsb
xor
mov
scas
and
inc
ja
cmpsl
inc
cmp
pop
test
add
add
fs
add
or
dec
add
inc
push
inc
fcoml
add
addr16
pop
pop
and
sub
pusha
cld
sub
scas
inc
push
adc
push
out
jnp
ljmp
mov
cltd
dec
loope
and
insl
add
cmp
sbb
ret
and
mov
mov
in
add
cmpsl
jp
sub
popf
add
push
mov
adc
add
lods
push
fmull
jp
cmc
loop
std
mov
test
mull
push
mov
and
sub
in
cld
mov
pushf
add
lods
hlt
lock
ret
pop
idiv
and
test
fildl
dec
inc
jb
cs
pop
fcompl
ja
add
imul
add
repnz
inc
fs
cmp
cmp
cmp
push
xor
outsl
push
faddl
insb
imul
out
shll
mov
in
pop
add
xlat
add
adc
rclb
iret
stos
lock
dec
jecxz
hlt
push
or
jge
mov
in
jns
and
into
cltd
pop
enter
jnp
fadds
scas
ds
xchg
sbb
in
jle
dec
popf
lret
fldl
inc
test
add
xchg
stc
les
testl
mov
popa
stos
sbb
cmp
add
ss
xchg
add
cmp
loope
das
sbb
enter
adc
add
and
adcl
push
mov
xor
xchg
cmpb
jae
add
sub
jle
jl
jno
add
loop
je
dec
nop
inc
sbb
adc
add
sub
add
mov
arpl
mov
add
fimull
add
lods
rcrb
add
mov
fstpl
push
push
loop
and
out
mov
add
shl
test
mov
add
rcr
add
mov
cmpsb
xor
aaa
push
add
scas
xchg
lret
sub
je
add
and
pop
cmp
jge
mov
xchg
cmp
add
mov
push
xor
add
sbb
mov
add
mov
fwait
or
inc
add
rorb
jp
jmp
iret
dec
jne
in
divb
push
fcmovbe
loope
stos
jbe
xor
add
xchg
orb
roll
subl
jp
push
inc
pop
xor
mov
lock
mov
lea
dec
loopne
push
cmpsl
pop
jp
xor
sbb
mov
orb
scas
jae
mov
pop
xlat
dec
js
add
xor
or
adc
test
sub
add
xchg
out
fildl
add
cs
sub
arpl
cmp
add
lcall
push
sbb
add
cmpsb
and
mov
cmp
xchg
ja
mov
testl
mov
push
add
loope
fmulp
and
daa
add
mov
insb
pop
out
xlat
and
sbb
xor
cwtl
dec
test
ds
pushf
lock
sbb
xor
mov
xchg
dec
add
sub
gs
aaa
adc
mov
outsl
xchg
xchg
arpl
fs
ss
mov
xchg
sbbl
shll
lock
jbe
pop
je
xchg
es
xchg
add
insb
mov
in
out
add
add
flds
stos
sbb
imul
pop
xor
addb
and
mov
adc
jmp
add
and
stos
xchg
jmp
ss
add
js
push
lahf
dec
cmp
sub
hlt
or
ljmp
jae
fnstenv
int
mov
stos
or
mov
enter
clc
or
mov
pop
hlt
sbb
fwait
repz
jne
xchg
cmp
repnz
fadd
mov
sbb
scas
add
mov
cmp
xor
add
jl
lods
out
leave
adc
or
xor
push
les
inc
jns
and
add
popl
outsb
or
cmp
push
hlt
jp
fcmovnbe
ja
add
xor
gs
movsb
add
add
pop
dec
pop
insb
inc
dec
sti
pop
lods
mov
out
xor
adc
push
add
pushf
pop
movsb
test
cltd
add
dec
add
mov
and
aas
inc
dec
jl
sbb
add
sbb
add
mov
mov
mov
rdmsr
fwait
stc
mov
push
mov
faddp
fsub
leave
sarl
pop
pop
ss
pop
inc
mov
arpl
cmp
popa
andb
pop
add
pushf
enter
dec
lret
sbb
dec
pop
cltd
mov
sub
jne
mov
rcrl
inc
mov
xchg
jl
cmc
iret
clc
sbb
leave
shr
jg
sahf
add
push
inc
out
pusha
push
data16
imul
add
rcrb
dec
and
lret
push
cmp
xorb
add
ja
xchg
jne
sbb
fwait
add
pop
inc
sub
add
ljmp
loope
xchg
inc
add
sti
xchg
sbb
pop
out
add
push
push
dec
jno
scas
add
arpl
aam
ja
cmc
test
or
std
movsl
into
movsb
add
cltd
xchg
push
push
cmp
sub
dec
jne
sub
mov
pop
popf
adc
subb
nop
shlb
in
jge
xor
adc
aad
sahf
rolb
add
cmp
fcoms
mov
in
jl
xor
aas
or
xchg
das
in
cwtl
cmp
sub
mov
pop
inc
add
push
rcrl
add
xor
loop
add
fisubl
add
mov
dec
inc
or
fdivs
call
push
xchg
rcll
mov
loopne
add
push
ficompl
mov
add
xlat
fisttps
fwait
ds
jae
loope
in
cld
nop
add
cmc
shlb
dec
add
std
sub
sbb
cmpsb
aas
daa
add
movsl
xchg
add
rclb
sti
enter
add
shlb
xor
insb
mov
pop
mov
xor
rolb
lret
mov
push
lret
jnp
loopne
test
adc
shrb
test
pop
jnp
jg
ret
add
sbb
mov
pop
loopne
ja
ret
das
and
xor
jmp
mov
clc
loopne
jnp
xchg
add
jno
lds
std
aad
addb
adc
sbb
jl
add
mov
pop
dec
out
mov
jl
add
jne
push
std
add
cmp
movsb
jp
dec
xorl
cli
enter
and
mov
cmp
jmp
addr16
lds
and
mov
xchg
rorl
in
inc
mov
fisubl
push
popa
push
int3
adc
movsb
pushf
adc
add
cmpsb
cmc
dec
nop
pop
es
add
mov
addb
ret
and
add
xchg
in
nop
adc
sub
add
icebp
add
pushl
and
repnz
add
mov
xor
add
and
push
aam
sbb
popf
push
lcall
in
jg
lea
add
aad
xchg
mov
sbb
cwtl
sub
cmp
adc
mov
and
repz
aas
add
jo
and
shrl
or
lcall
add
je
lods
xchg
cltd
sbb
pop
dec
jno
add
movsl
cmc
and
cmp
mov
sbb
test
dec
add
and
mov
sbb
js
add
mov
outsb
iret
loope
push
add
adc
leave
sarb
fiadds
pop
push
or
jle
jno
js
comiss
mov
or
sub
int
add
daa
mov
xor
pop
dec
cmc
cmp
fistps
or
rcll
push
xchg
jp
xor
add
leave
and
int3
sarb
sub
scas
adc
out
adcb
or
or
mov
out
incl
mov
add
pop
push
xor
insb
add
xlat
sub
mov
and
jg
mov
subb
leave
mov
add
inc
pop
inc
jae
out
sbb
cmpsb
xor
push
add
pop
xor
int3
ljmp
dec
in
aam
mov
add
xor
add
xchg
mov
jae
cmpsb
inc
push
add
lock
dec
movsb
mov
add
outsb
cmp
xorb
outsl
add
adc
pusha
xorb
cld
ret
inc
inc
ror
aad
xchg
xchg
push
xchg
data16
enter
mov
jecxz
jns
add
divl
mov
jo
add
lods
or
pushf
cmp
hlt
jo
in
lcall
add
scas
jecxz
sar
lahf
dec
add
cmp
cmc
adc
xor
rclb
jns
add
sbb
out
xlat
pop
sub
pop
push
mov
xchg
aad
mov
add
popa
push
adcb
sbb
int
cmp
and
add
cmc
outsl
xchg
ljmp
xor
mov
pop
push
inc
mov
out
jbe
add
popf
jns
lods
cmpsl
mov
dec
cmpsb
jle
sbb
xchg
add
sahf
mov
icebp
lcall
pop
jne
call
sub
mov
mov
add
jne
sar
sbb
outsl
hlt
xor
ljmp
repz
add
pop
fidivrl
nop
jmp
jnp
sbb
rcll
movsl
ret
xchg
lahf
repz
stos
push
inc
xlat
mov
push
mov
or
inc
inc
mov
cmp
fsubrp
mov
push
ja
jnp
add
out
out
stos
sti
mov
pop
mov
push
ds
xor
xchg
loope
inc
in
test
add
cmp
rcll
add
in
mov
pop
mov
and
mov
pop
jmp
pop
aas
shlb
mov
sbb
in
mov
inc
mov
pusha
lods
sbb
xchg
addb
sub
mov
jmp
add
mov
in
test
aam
add
adc
fbld
xchg
pop
pop
rcrb
mov
jmp
add
pop
rcll
insb
loope
sub
push
push
sbb
rol
add
add
pop
cmpsl
add
or
xor
cmp
mov
aad
adc
sub
push
mov
mov
scas
xchg
loopne
add
push
jl
gs
out
sub
cmp
pop
mov
nop
in
mov
add
call
adc
mov
das
mov
inc
add
mov
popa
jmp
sbb
mov
ret
or
out
mov
imul
xchg
mov
test
xor
jno
adc
add
icebp
xor
std
pop
jge
add
pop
jo
les
and
dec
leave
clc
inc
add
cmp
push
xchg
add
lock
cmc
mov
mov
mov
ljmp
call
add
out
sbb
mov
add
clc
shrb
cmc
xchg
shl
xor
pop
enter
inc
or
pusha
adc
pop
xchg
push
pop
into
add
fs
xchg
jno
dec
cld
movb
subl
ds
xorl
addl
cltd
in
cmp
inc
xor
clc
test
add
in
cmpb
les
fdiv
inc
pop
sub
sbb
lock
mov
sub
cmp
jle
imul
filds
pop
pop
int
ljmp
inc
das
push
add
test
mov
nop
data16
out
jae
sbbb
sarb
mov
cs
fs
mov
ja
push
lahf
pusha
dec
jle
lcall
xor
iret
xor
das
inc
dec
addl
fiaddl
in
add
jo
push
cmp
stc
jnp
cmp
mov
mov
mov
pop
or
lcall
jg
insb
add
mov
and
lds
in
aas
ds
loopne
fnstcw
clc
mov
mov
push
stos
mov
mov
dec
mov
fisubs
inc
das
cli
mov
cwtl
mov
mov
cmp
mov
mov
xchg
testl
adc
popf
out
add
add
push
stos
add
dec
fistpl
nopl
dec
loopne
xor
or
lods
cmp
sbb
sbb
pop
sbb
pop
arpl
pmaxsw
leave
inc
dec
jg
aaa
pmulhuw
xlat
sti
addr16
sbb
add
push
shrd
add
push
mov
add
test
lret
pushf
mov
sub
xor
ss
adc
test
inc
cltd
mov
rolb
insb
test
aad
cld
adc
lret
adc
dec
faddl
repnz
jle
pop
std
sbb
mov
sbbl
inc
cmp
dec
xchg
es
arpl
test
add
jae
fs
jbe
data16
dec
and
shl
je
push
dec
enter
loopne
add
adc
xchg
cmpsb
push
mov
cmp
das
push
out
out
in
faddl
fs
adc
xchg
stc
or
fidivrs
add
sbb
mov
in
lods
adcb
fmul
adc
outsb
stc
js
jle
jns
add
xchg
ja
jbe
push
subb
dec
add
xlat
iret
jg
cmp
add
repnz
add
cmp
lods
jno
aaa
sbb
jo
cmp
lret
adc
xchg
dec
leave
push
jge
add
xor
into
add
jmp
mov
cmp
lock
push
inc
subb
cmp
xor
lds
add
push
fs
mov
aas
inc
cmp
outsl
lret
dec
in
add
iret
cmp
push
ficoml
loopne
cmp
incl
andl
pop
xchg
xor
cmp
dec
lea
incl
or
loop
add
push
adcb
out
or
cld
scas
arpl
add
test
loop
or
add
push
call
xlat
add
mov
or
jns
bound
popf
jecxz
xchg
lods
cmp
rolb
sbb
cmp
push
dec
push
pop
sbb
adc
mov
add
jp
mov
rsqrtps
int3
aaa
arpl
ljmp
add
je
mov
into
lahf
pop
xorb
aaa
fistpll
std
imul
push
push
xchg
cmp
ja
jno
cmp
mov
in
lock
pop
add
jns
call
outsl
das
dec
popa
test
add
pop
jbe
push
jne
pop
stos
lret
out
jg
les
test
inc
or
jns
mov
in
add
push
pusha
pop
cmp
cmp
add
adc
cld
icebp
cmc
shll
jecxz
xchg
test
clc
mov
jg
or
popa
icebp
shlb
rcrb
add
jge
insl
push
push
add
sti
nop
jo
pusha
into
add
add
shrb
pop
call
in
cmp
mov
add
bound
sahf
add
jge
dec
jmp
in
sarl
adc
out
cwtl
lret
add
sub
hlt
push
jne
lea
aas
adc
imul
sub
sbb
jge
aam
add
xchg
outsl
add
inc
pop
mov
fwait
sbb
pop
adc
pop
mov
cld
cmc
add
das
aas
jg
mov
xor
lock
mov
add
enter
stos
add
lret
ss
arpl
incb
pop
cmpsl
mov
fwait
add
aad
add
rorb
push
cmpsb
inc
xchg
add
mov
jmp
sahf
aaa
xchg
mov
add
out
sbb
adc
xchg
add
cs
pop
ret
or
or
wrmsr
dec
les
fwait
inc
push
aas
cli
fsts
andb
add
lea
cld
out
push
add
jns
iret
add
incb
xchg
js
icebp
jae
add
lahf
inc
xor
push
jl
dec
ret
mov
lea
mov
mov
inc
adc
sub
daa
subl
and
pop
fs
sbb
adc
dec
mov
mov
add
cmp
or
adc
cmp
mov
test
adc
cmp
lods
mov
pop
scas
mov
push
enter
ret
out
in
pop
mov
call
cmp
es
ds
adc
cs
or
imul
ret
dec
cmp
dec
cmp
out
fsubs
mov
add
xor
in
push
push
addr16
insb
testb
adcl
mov
push
icebp
jne
jnp
add
leave
inc
aas
je
add
icebp
addr16
pminsw
add
pop
adc
dec
cmp
jnp
and
jmp
add
fisttpl
mov
repnz
mul
jge
addr16
pop
mov
js
mov
mov
lds
nop
aas
dec
outsl
cmpl
or
mov
ror
cmp
mov
mov
jmp
sbb
push
mov
push
lcall
js
mov
mov
enter
add
jl
icebp
push
gs
or
movsl
jnp
mov
adc
sahf
xor
gs
sbb
fsubs
lods
adc
add
out
into
cmovae
jb
sti
mov
call
sahf
in
mov
scas
add
mull
icebp
je
shrb
fwait
sbb
mov
add
add
sbb
je
push
mov
xor
js
sbb
imul
and
inc
clc
dec
insl
ja
add
sub
out
int3
push
cld
or
cmp
stc
sbb
or
mov
add
sbb
jle
rorb
add
int
icebp
loop
jmp
fildl
pop
mov
mov
push
ljmp
aam
push
add
cmp
pop
xor
das
xor
mov
daa
pop
lret
dec
fwait
mov
xchg
and
add
or
add
ss
out
js
add
mov
add
imul
fcomps
add
in
das
push
nop
sub
or
jl
lret
cmp
and
cmp
pop
repz
cmp
out
cmc
bndmov
xor
stos
loopne
cltd
add
mov
cmp
add
les
xchg
push
sub
dec
xor
cld
xchg
add
sbb
xchg
and
pop
jecxz
aas
leave
or
pop
rorl
and
cs
aad
xor
mov
addr16
repz
orb
pop
sbb
and
mov
jge
sbb
push
rolb
and
icebp
push
push
mov
jnp
cs
sarl
add
add
out
test
das
loop
sbb
adc
aad
stc
out
inc
pusha
and
mov
test
sub
insb
rorb
add
xor
adc
add
or
mov
stos
jb
push
adc
roll
jp
add
repnz
add
cmp
call
pop
mov
pop
xchg
jle
shll
jp
inc
push
fwait
int
fdivrs
and
add
clc
aas
cmc
jecxz
clc
shlb
arpl
in
xchg
nop
add
jl
add
mov
mov
add
jns
pop
cs
enter
addr16
ud2
test
cmp
or
add
lods
inc
shrb
hlt
add
stos
fdivl
jge
add
cmp
call
lods
aam
pop
add
adc
sbbb
fsubrl
add
jno
mov
xchg
lods
xor
dec
push
and
add
mov
jno
cmp
push
sbb
push
cmp
andb
les
ret
mov
pop
pop
add
or
out
sub
jecxz
xchg
in
add
xor
inc
paddusw
sub
aas
rorb
mov
mov
mov
and
add
inc
mov
sbb
pusha
fidivrs
dec
sub
fwait
cmpsl
pop
adc
jle
sbb
jp
dec
cwtl
dec
loopne
add
jg
and
repz
xchg
inc
dec
sbb
dec
fnstenv
cwtl
xchg
jge
setae
add
test
pop
cld
lods
pop
repz
cmc
shl
sbb
int3
mov
pushf
pop
fcmovnu
or
dec
in
cmp
or
mov
packssdw
orb
mov
cwtl
loop
ljmp
orb
or
jbe
leave
bound
pop
xchg
pop
movsb
xor
jne
jp
icebp
daa
mov
clc
ljmp
divb
mov
cwtl
stc
pop
xchg
cli
adc
js
add
xor
popf
mov
cmp
mov
bt
add
test
add
popf
sti
dec
add
mov
add
sbbb
add
adc
outsl
or
aad
mov
pop
add
push
inc
les
jo
rorl
lods
clc
push
mov
jae
add
push
icebp
popa
add
pushf
mov
xchg
xchg
in
add
test
mov
or
pop
iret
add
mov
add
int3
pop
cmp
loopne
mov
test
add
or
iret
call
mov
cmp
add
jae
enter
and
push
sub
pusha
in
adc
dec
push
sub
mov
or
outsb
sbb
insb
xchg
lcall
cld
add
mov
pop
out
jae
add
mov
jnp
add
insl
push
mov
inc
jo
xchg
push
sti
popf
pop
xchg
add
cmp
jno
lods
pusha
push
sahf
lock
insb
dec
sbb
cmp
cmpsl
jge
sbb
lcall
lahf
sub
jno
mov
sub
outsl
xor
dec
or
dec
negb
push
repz
ret
mov
add
push
sahf
cmp
adc
repnz
bsr
inc
jmp
mov
add
stos
and
cmc
jns
sbb
add
jne
add
neg
aas
add
cld
out
add
cli
outsl
scas
loop
call
stos
js
inc
movsl
into
xchg
sbb
in
xchg
push
adc
cmp
add
lahf
xchg
add
ja
arpl
add
pop
push
add
sub
adc
pushf
rclb
mov
add
mov
add
sbb
sbb
out
in
shrd
and
repz
inc
outsb
mov
cmp
sub
pop
popf
imul
push
scas
push
mov
ds
pop
push
lds
sub
shlb
add
mov
sbb
pushf
jo
sahf
cmp
pushf
adc
add
inc
rcrb
stos
xor
int
sbb
sub
lds
out
cs
cwtl
stos
lret
movsb
add
mov
test
adc
fsubl
pop
loopne
fiadds
fsubs
or
or
xchg
out
add
sbb
push
add
insb
movsb
mov
add
mov
sub
xchg
imul
in
jae
fsubr
jne
and
mov
sub
lret
mov
in
out
mov
test
xchg
pop
repnz
push
ds
inc
fcmovbe
ret
adc
pop
loopne
or
lock
cmp
xor
sub
lcall
mov
sahf
stc
sti
xor
hlt
xchg
cltd
sub
xor
movsl
mov
loope
icebp
arpl
inc
push
icebp
sbb
sub
inc
hlt
in
sti
repnz
xor
sub
add
scas
in
dec
cmp
jl
cmp
fldenv
jp
add
sbb
cmp
pushf
mov
and
popf
ret
add
inc
stos
popa
movsb
add
fldcw
push
loope
mov
pop
mov
jmp
push
fisubrs
add
jmp
mov
pop
xchg
movsb
adc
shll
cmpsl
add
sub
xchg
add
xlat
or
mov
cmp
sub
push
sbb
scas
sbb
jbe
add
fdivs
jecxz
cmp
js
lea
testl
cmp
add
cmp
loop
add
rcrb
cwtl
xchg
add
cmpsb
test
stos
lret
js
xchg
or
inc
loope
adc
cmp
mov
call
in
xchg
mov
lahf
add
pop
fwait
add
mov
add
jb
es
pop
sub
add
mov
add
cmp
or
in
sbb
and
add
dec
orb
lahf
add
sbb
and
sbbb
push
addb
les
and
mov
dec
popf
pusha
mov
out
hlt
jg
in
stos
jo
add
in
or
xchg
fimull
add
mov
iret
lret
mov
gs
sub
sub
add
jmp
add
int
push
push
push
fidivrl
movsb
mov
and
idivb
add
push
adc
aaa
in
call
mov
cmp
push
push
inc
fistps
jne
sarb
insb
add
repz
xchg
pop
add
in
nop
test
jle
adc
in
scas
cld
fmuls
add
gs
mov
and
movaps
loope
inc
rcl
jo
dec
mov
add
mov
jns
sbb
pop
xor
pusha
ds
sub
add
sub
adc
mov
add
mov
andl
sahf
arpl
pop
mov
mov
lahf
in
data16
sub
add
fisubrs
dec
mov
dec
icebp
add
pop
scas
mov
xor
movl
ja
adc
cmovl
adc
inc
adc
mov
adc
add
xor
sub
mov
sub
stc
push
mov
imul
add
xchg
nop
dec
loopne
jae
dec
arpl
add
cmc
pop
ja
pop
les
fsubrl
inc
jmp
mov
popa
cmpsl
pop
lahf
cld
pop
sub
jge
pop
add
in
call
push
in
or
mov
js
out
sbb
mov
into
popa
int
mov
add
ja
jmp
bts
stc
sub
pop
fwait
xchg
ficoml
les
jae
mov
cmp
lret
popf
sub
pop
dec
and
ss
pop
in
sahf
mov
add
sbb
mov
js
sbb
data16
cmp
add
stos
lahf
pop
cs
adcb
add
pop
popf
invd
out
pop
cmpsl
add
scas
inc
nop
add
xchg
outsl
test
addl
std
xlat
xchg
mov
pop
adc
push
adc
mov
push
lds
xchg
or
rclb
add
aas
lea
std
mov
fcoms
dec
nop
push
sub
add
imul
jno
add
mov
iret
lock
or
lods
cmpsl
shrl
sub
jmp
dec
mov
ret
sbb
addr16
mov
jb
jnp
add
push
xor
cmpsb
gs
jne
and
lods
add
pop
jbe
add
or
loopne
inc
jl
xlat
out
in
inc
add
cmp
jns
fistpll
jg
pop
mov
mov
aad
enter
lods
push
pop
movsb
fiadds
sarb
std
add
in
pop
inc
lea
nop
add
and
lret
fstps
add
xor
sub
jnp
mov
addb
pop
cltd
add
xor
sbb
movsl
inc
outsb
js
xor
aaa
loopne
out
add
cld
push
verr
or
xchg
jbe
cltd
fchs
cs
pop
lods
into
cli
add
add
das
jo
repnz
rclb
add
clc
cmpsb
cmc
and
or
add
movsb
aas
pop
inc
add
push
and
mov
adc
cmp
lahf
cltd
add
pop
adc
jno
add
pop
out
fldenv
fistpll
mov
pop
scas
mov
adc
dec
enter
hlt
out
cmpb
test
xchg
cmp
test
fwait
scas
sub
add
ds
mov
push
out
fistl
negb
add
mov
mov
mov
jg
sub
push
lret
cmpsl
lock
add
xor
mov
add
loopne
fucom
xchg
insb
cmp
mov
rol
xor
add
sub
aaa
clc
testl
jl
jb
add
out
test
test
cmpsb
mov
add
fdivr
ds
mov
dec
push
and
je
outsl
and
dec
movsl
mov
dec
mov
or
popa
fsubrs
ja
sub
cmc
jb
pop
cwtl
int3
xchg
das
push
xorb
jbe
lock
jmp
xchg
xor
jl
mov
and
in
sub
cs
pop
lea
jbe
or
add
push
pop
pop
imul
pop
cld
std
push
scas
inc
sti
popa
mov
sahf
mov
add
js
fcomps
iret
movsb
dec
addr16
pop
nop
adc
into
pusha
int
add
rolb
ret
xchg
clc
mov
dec
test
pop
mov
out
adc
inc
add
fnstcw
pop
sub
out
loopne
mov
cmp
inc
xchg
add
sbb
data16
sub
dec
imul
add
movsb
sub
dec
jo
imulw
xchg
test
mov
sub
xor
addb
cmpsb
imul
dec
mov
jle
add
push
mov
add
inc
addr16
shrb
or
movsl
pop
rcrl
mov
arpl
cmc
cwtl
cmp
fwait
xorb
sub
stc
cmc
fcoml
push
cmp
and
cmp
inc
dec
adc
mov
pop
mov
pop
pushf
iret
into
sbb
les
mov
dec
add
jge
jmp
inc
xor
lret
add
dec
mov
and
std
push
js
loopne
add
push
sbb
int
bound
and
and
lea
stos
int
imul
sub
push
test
xor
lods
cmpsb
add
fldcw
jmp
jg
pop
out
mov
aas
inc
in
xor
sub
std
ds
jo
pop
sti
outsb
mov
xchg
popa
push
or
sbb
cmp
add
mov
add
lret
mov
outsb
lds
add
mov
cs
inc
and
addb
outsl
push
in
add
mov
dec
aad
pop
add
inc
xor
imulb
push
data16
movsb
ds
mov
add
adc
imul
mov
add
adc
fidivs
movsb
aas
rcll
xor
fwait
test
cmc
mov
jmp
jo
push
adc
popa
cmp
push
ja
stc
add
mov
fnstenv
sarb
xchg
mov
xorb
jae
cmp
push
add
test
cld
or
pop
jge
jle
subl
pop
inc
cmc
dec
mov
add
push
jo
scas
mov
and
sbbl
add
in
lea
jge
stc
add
push
test
imul
out
in
add
pop
jp
add
push
out
dec
sahf
je
or
stc
das
in
pop
add
and
add
loopne
inc
sub
bound
dec
into
repnz
cmp
add
pop
sub
fcoms
in
ljmp
dec
add
bound
push
jbe
mov
in
add
push
outsb
push
subb
jnp
adc
in
addl
jmp
push
cmp
add
mov
rorl
pusha
xlat
test
lcall
sbb
scas
add
inc
popf
push
add
fistps
inc
mov
out
add
mov
push
sbb
push
push
sbb
sub
in
inc
pushf
xor
int
adc
out
out
in
jp
scas
add
push
add
xchg
jns
cli
dec
push
insb
call
cmpsl
push
xchg
scas
add
add
inc
add
add
mov
adc
or
cld
dec
jns
loope
ret
jp
add
mov
mov
sbb
mov
mov
repnz
mov
cmc
xor
arpl
shl
sahf
aas
neg
xchg
sub
add
sbb
add
xlat
jp
and
lock
scas
subl
jbe
cmp
pop
mov
mov
mov
in
ret
ljmp
jb
push
xorl
add
pusha
in
ret
cmp
clc
xchg
jne
gs
jge
xchg
sbb
les
pop
cld
addb
lods
sub
sbb
lahf
fiadds
int
cld
test
mov
jl
push
sub
adc
adcl
loop
push
pop
or
xor
ljmp
xchg
and
jg
rclb
stc
add
fwait
call
add
pop
jo
xchg
ljmp
movsl
jne
adc
addr16
out
in
inc
dec
movsb
clc
add
xor
add
std
rorl
jb
xchg
pop
je
lret
imull
loopne
rcrb
add
ja
push
movzbl
and
clc
lret
cwtl
jo
sbb
stos
cmp
scas
add
inc
cltd
push
js
add
sbb
add
jne
ret
and
movsb
cli
in
jb
xchg
mov
adc
popl
imul
wrmsr
loope
inc
incb
pop
movb
jns,pt
hlt
xchg
jp
jae
add
std
arpl
xchg
addr16
pushf
inc
nop
add
push
cmpsb
sub
mov
dec
int
xchg
pusha
mov
test
and
mov
inc
enter
add
leave
mov
cmp
hlt
or
lods
nop
data16
xlat
cmp
sbb
and
mov
scas
mov
imul
mov
loope
pusha
aad
pop
roll
repz
mov
add
movsb
sti
mov
mov
hlt
adc
or
out
dec
aam
addr16
push
add
mov
mov
adc
cmc
popa
roll
fistpl
sti
lods
dec
add
pop
add
add
add
lock
add
fs
fisttps
pop
mov
dec
leave
outsl
inc
add
and
xorb
frstor
push
and
push
jno
andb
add
in
loopne
inc
mov
aaa
mov
popa
add
divb
cmpl
lock
sbb
leave
jp
addl
jb
or
sub
cwtl
orb
ds
push
loopne
call
cmc
and
jae
test
pop
push
out
pop
xor
mov
data16
lret
sbb
js
and
pushf
sbb
jle
add
jnp
mov
add
mov
xchg
scas
mov
jl
inc
sbb
jmp
jbe
daa
aad
add
insl
push
dec
and
shrd
add
mov
cld
mov
outsb
inc
push
push
dec
cwtl
ret
mov
rol
sbb
stos
jnp
test
or
cwtl
push
cmp
fsub
mov
or
xchg
or
imul
ljmp
test
add
lret
stc
lahf
push
jne
add
sbb
fwait
mov
insb
xchg
test
push
and
lcall
fs
xchg
lock
test
or
ljmp
js
mov
pop
jmp
xor
fnstenv
adc
pop
sbb
sahf
dec
mov
pop
push
or
mov
jne
lods
bound
popa
adc
mov
movsb
mov
add
cmp
and
pop
scas
sbb
movl
aaa
addr16
in
mov
xor
ljmp
add
cmpl
add
cmp
roll
adc
add
mov
push
shrb
add
mov
fs
lea
hlt
mov
jmp
std
mov
lret
nop
sbb
jl
out
stos
scas
sahf
mov
add
add
push
sub
sub
mov
inc
loope
gs
sbb
jo
xchg
ds
pusha
int3
pop
ljmp
loope
xchg
add
mov
shlb
aad
cmp
inc
mov
cld
add
out
rcrl
add
loope
pop
mov
xchg
add
mov
push
mov
aad
add
sub
int3
in
dec
mov
inc
cmpsb
idivb
push
add
adc
jg
jno
dec
pop
sbb
repz
lcall
pop
sub
lret
mov
fwait
sub
add
inc
mov
shll
test
and
jecxz
pushf
shlb
push
out
fsubs
fbld
shrl
loop
jbe
add
or
adc
sbb
inc
and
xor
add
xchg
sbb
addr16
mov
push
cmp
lea
imul
lods
sbb
cmc
leave
dec
sbb
cmp
test
pop
xchg
sbb
mov
repnz
out
add
inc
dec
sbb
imul
add
xor
xchg
cwtl
dec
push
add
nop
out
mov
push
add
ss
xchg
add
sub
rcl
iret
add
stc
add
js
inc
cmp
out
add
stos
insl
cmpsb
dec
mov
aam
and
and
fstl
mov
loope
mov
dec
mov
and
sbb
lahf
mov
adc
rcl
adc
adc
shrl
jns
out
lret
nop
pop
xor
add
cmp
add
testl
mov
cmp
test
xchg
call
or
int3
add
mov
add
test
add
ss
mov
pop
xchg
add
adc
mov
insl
sbb
lock
mov
add
aad
ss
mov
push
jno
repnz
pop
add
inc
mov
add
inc
inc
sub
ja
sbbl
sbb
testb
movsb
jno
inc
add
aam
jb
jo
loopne
addl
out
xor
add
fisttps
add
sub
cwtl
idivl
and
sub
insl
pop
add
pushf
enter
push
sub
insb
xchg
ret
mov
jecxz
mov
jp
leave
rolb
sbb
jns
push
sarl
xchg
add
in
push
add
int3
mov
add
pop
shlb
or
aad
push
js
loop
nop
xor
pushf
add
adc
xor
add
adc
jae
ds
mov
aas
xchg
sub
add
ret
inc
out
shlb
add
je
sub
sub
js
mov
xchg
shl
jge
cltd
mov
jb
pop
imul
fcoms
lcall
lahf
mov
mov
std
xchg
stc
mov
arpl
and
inc
lcall
jne
push
scas
add
push
clc
ret
cmpsb
stc
rolb
xchg
call
mov
jp
in
sbb
out
js
push
nop
and
dec
stc
call
ficomps
lahf
or
pop
add
rorb
mov
incb
loopne
sarb
add
xor
out
add
jle
lret
mov
cwtl
les
pop
sbb
xor
arpl
pop
loope
pop
or
add
mov
add
push
add
fsubs
jbe
mov
dec
pop
push
out
add
xchg
or
mov
out
add
jnp
add
cltd
adcb
daa
add
mov
sti
dec
in
cmp
mov
dec
icebp
ss
rcll
movsl
call
mov
out
repnz
push
add
outsl
mov
aas
movsl
mov
lods
pop
call
test
add
mov
es
rcrl
enter
hlt
decb
xchg
add
add
inc
cmp
stos
setbe
push
loopne
orb
push
mov
lret
xor
xchg
iret
add
adc
sarb
nopl
mov
add
inc
and
lea
xchg
pop
leave
mov
inc
cmp
insb
push
xor
mov
incb
jp
dec
jne
jo
fucomip
clc
cmp
inc
pop
pop
push
inc
scas
adc
mov
jo
add
pop
or
cmc
mov
je
mov
ret
movsb
push
add
lret
pushf
dec
mov
xchg
nop
aad
popa
push
add
push
mov
mov
lods
mov
jbe
push
dec
mov
scas
rolb
je
and
pop
pop
pusha
xchg
xor
insb
stos
add
push
jmp
add
sub
mov
lock
xor
mov
adc
ret
mov
jne,pt
cmp
sub
mov
add
inc
in
push
aas
mov
mov
xor
jmp
mov
out
push
shlb
ljmp
adc
loop
decl
cmp
ret
xor
mov
jecxz
insb
cmp
adcb
lea
out
add
and
cld
lock
insb
repnz
pop
adc
add
sbb
push
mov
jbe
inc
rclb
lea
inc
pop
ret
pop
or
fstpl
mov
arpl
in
mov
mov
in
sub
sub
jp
pop
add
pop
mov
inc
dec
mov
shl
je
pushf
push
add
outsb
and
push
stos
mov
xchg
cld
js
fs
test
clc
dec
sbb
push
pop
insl
add
call
add
shl
vcomisd
sbb
mov
sub
add
iret
dec
repz
add
mov
mov
inc
push
inc
adc
add
repnz
flds
nop
inc
movl
imul
cmp
add
inc
inc
mov
movsl
dec
push
xor
call
and
cmp
cmp
imul
lcall
inc
cmp
insl
out
push
enter
add
lret
into
sub
pop
shll
in
push
xor
inc
incl
jle
js
xchg
loopne
add
xor
add
ljmp
iret
mov
pushf
lods
pop
popf
adc
pop
cmp
push
and
pop
arpl
addl
add
xchg
cmp
cmp
inc
shl
roll
sbb
nop
icebp
cmp
adc
inc
aam
add
mov
jecxz
test
add
imul
add
addr16
mov
inc
and
inc
sub
incl
mov
in
dec
dec
add
je
cmp
in
outsb
add
mov
ljmp
jecxz
loop
jp
add
hlt
ja
aam
rolb
mov
test
arpl
push
ds
dec
outsl
lods
dec
mov
int3
add
adc
jnp
push
inc
adc
shr
subb
add
adc
aaa
inc
fistpl
aad
loopne
lea
mov
daa
inc
add
mov
jmp
cld
push
mov
or
out
cltd
add
mov
ss
fs
push
lds
pop
sub
add
add
lret
and
adc
subb
mov
pop
mov
inc
and
dec
pusha
in
fsubl
add
mov
data16
mov
add
jle
addb
fwait
add
pusha
out
push
or
add
popa
mov
pop
adc
loopne
inc
add
into
xchg
divb
add
icebp
js
xor
lahf
pop
pop
jge
lret
add
cmp
aaa
ja
or
dec
outsl
pop
sbb
push
dec
add
add
out
int3
enter
add
pop
lcall
cmc
mov
push
popa
pop
mov
xor
and
sbb
int3
add
inc
add
pop
rolb
scas
or
or
dec
add
add
fstl
pop
clc
sbb
jle
mov
lea
pop
cmpsb
mov
cld
pop
pop
and
push
pushf
xchg
mov
add
out
or
add
iret
sbb
adc
loopnew
and
add
jbe
dec
add
and
in
leave
and
jle
adc
mov
fildl
and
sti
movsb
fidivs
out
xchg
cmp
or
idivb
add
pop
int3
mov
pop
repz
test
cmp
jnp
adc
sbb
mov
and
int3
mov
xor
push
add
bound
scas
lahf
mov
movsb
mov
rcrl
xor
pop
push
insb
xchg
sub
jge
add
dec
xor
rcr
cmp
pushf
add
push
ja
add
mov
adc
daa
jecxz
push
cmp
push
sub
dec
into
push
pop
icebp
imul
mov
shl
hlt
leave
jmp
jae
add
mov
mov
add
mov
jb
jae
add
push
or
fnstcw
mov
add
or
aam
lret
or
mov
fdivr
sub
sub
pop
testl
cmpb
cmpsl
xchg
jno
add
pop
jmp
lods
mov
pop
stos
sub
dec
mov
cmp
jb
sahf
pop
or
add
mov
stos
adc
pop
mov
jns
pop
jbe
add
jno
jb
loopne
add
sbb
add
inc
xchg
and
adc
mov
mov
call
mov
push
je
xchg
add
fcmovnbe
jle
dec
dec
mov
scas
clc
in
stc
fidivl
pop
add
pushf
ret
or
and
add
sub
mov
ret
packsswb
push
mov
mov
adc
add
orl
cmp
pop
jmp
out
cmp
and
xchg
mov
sub
notb
add
lods
fldenv
push
mov
cmp
dec
test
testb
arpl
hlt
add
jae
shll
add
xor
aaa
add
adc
cmpsb
fcoml
subb
mov
inc
dec
sbb
mov
mov
lods
push
aad
int
icebp
sub
ljmp
sub
mov
ds
add
sbb
int3
cmc
add
movsb
or
add
add
xlat
rcll
inc
pop
ljmp
cmp
rolb
dec
int3
lock
pop
add
inc
sbb
hlt
out
jl
or
icebp
add
add
inc
sub
mov
add
cld
sub
insb
mov
loopne
jns
mov
ds
pushf
add
mov
dec
clc
mov
jle
add
and
pushf
add
in
cmp
mov
lea
mov
add
nop
gs
imul
add
jp
adc
inc
inc
add
setl
int
movsb
mov
clc
push
in
xchg
add
ja
test
rolb
je
cmpsl
jb
cmpsb
pusha
pop
popf
cmp
test
or
data16
push
mov
enter
sti
add
insl
jb
jns
js
cmp
call
jmp
out
push
rolb
stos
popf
xor
cltd
jnp
mov
jae
dec
repz
adc
add
mov
add
cmc
lods
std
pop
cld
adc
bound
push
out
pop
enter
xchg
sbb
cwtl
ret
cwtl
push
inc
add
xlat
outsl
jl
jo
in
leave
addl
and
out
pop
hlt
push
push
data16
mov
push
cs
cltd
cmp
je
flds
dec
test
inc
jp
rcrb
dec
xchg
or
fcmovnbe
fs
mov
jbe
pop
stos
inc
cmp
and
movb
fcoms
push
xchg
test
pop
add
xor
and
sbb
cmpsb
inc
in
rolb
push
jbe
lods
in
jecxz
add
mov
out
sbb
jle
xor
jb
std
cmp
and
fldt
aad
xor
loopne
push
inc
sbb
rcll
repnz
add
push
sub
jg
or
adc
push
mov
pminub
sarl
lods
call
add
jge
rcrl
enter
and
ret
mov
mov
in
xchg
add
and
test
cmp
mov
lds
push
lahf
sub
scas
or
pop
out
jmp
or
pop
inc
push
frstor
add
jecxz
add
subb
dec
jbe
add
pop
adc
add
add
or
add
gs
mov
hlt
push
rorb
jmp
lock
add
xchg
inc
sahf
pop
add
jg
loopne
pop
push
add
dec
sbbb
pop
iret
dec
out
js
pop
fwait
xchg
in
dec
loope
sbb
into
in
sub
popa
pop
pop
lcall
push
out
rorb
pop
js
test
xor
jne
cmp
clc
lret
notb
push
or
jb
fildll
sbb
dec
add
cmp
mov
pop
push
mov
out
mov
sbb
fdivrl
pop
add
mov
std
fwait
mov
cmp
aas
ja
and
add
daa
mov
pusha
fucom
cs
cltd
psubsb
and
inc
adc
fidivs
aas
add
cmp
mov
pop
dec
mov
cmpsl
or
inc
in
rcrb
pop
icebp
repnz
mov
mov
add
pop
add
jnp
pop
in
test
es
mov
add
adc
in
inc
add
or
mov
push
ja
mov
inc
cmp
mov
loope
push
fistps
add
xor
stos
push
add
jmp
lds
je
aam
inc
test
xlat
cmpsl
jl
xor
push
shlb
add
ss
mov
adc
push
add
add
jp
insl
push
sarb
mov
pop
es
les
in
leave
jb
xchg
push
pop
push
jns
add
jp
push
sbb
dec
add
aad
pop
mov
mov
lock
mov
ss
sbb
and
enter
push
out
lcall
pop
add
sarb
and
add
dec
aas
cmc
dec
ret
ficompl
mov
lods
in
in
ljmp
mov
cmp
roll
dec
in
inc
cmp
add
cld
jp
jmp
les
outsb
enter
jle
add
push
inc
int3
dec
pop
outsb
rorl
jmp
add
push
clc
mov
hlt
mov
enter
pop
int
adc
dec
dec
sbb
lea
leave
add
add
jle
ficomps
add
mov
mov
mov
pop
sbbb
loope
lea
jle
insl
and
jl
lret
sbb
xchg
jg
add
mov
jmp
xchg
adc
lret
and
out
dec
fisttpl
outsl
pop
aaa
pusha
mov
add
jns
in
mov
jl
cmc
adc
ret
xor
out
xchg
mov
insb
les
jg
js
jl
cmp
fistl
movsb
push
add
in
pop
and
add
shrl
dec
jbe
cmpsl
jno
add
sbb
cli
add
mov
movl
scas
pop
test
add
mov
test
sbb
inc
jmp
clc
roll
insb
mov
mov
lock
test
push
rcrb
mov
dec
iret
add
jg
jmp
cmp
pop
add
stos
jp
mov
adc
push
leave
dec
dec
add
jae
jo
pop
and
incl
mov
je
add
test
ljmp
cmp
call
sub
sbbb
dec
outsb
adc
add
repnz
stos
test
test
lods
xchg
pusha
jns
jle
icebp
pop
mov
xlat
iret
xor
es
cli
das
add
jg
cmp
push
imul
jge
and
pop
push
rcr
cmpsb
add
jp
add
cmc
add
push
int
cwtl
loopne
loopne
add
test
add
js
loop
jecxz
add
sbb
gs
call
dec
or
aam
iret
test
add
jle
mov
pop
enter
add
inc
dec
jmp
sub
imul
icebp
shl
lcall
xchg
xchg
cmp
add
dec
dec
push
pop
insb
outsb
jl
call
mov
pop
jno
int3
add
pop
add
inc
js
cli
filds
outsb
jns
push
mov
xor
or
add
mov
jl
test
mov
pop
adcb
inc
shl
adc
adc
pop
dec
jmp
int
add
cmc
sti
loop
test
dec
add
inc
jp
add
lcall
push
das
clc
cmpsl
pop
jbe
roll
icebp
pop
xchg
jle
dec
pop
add
or
clc
insb
setns
cmp
xor
scas
mov
xchg
ljmp
pop
ret
inc
insl
add
je
mov
add
out
mov
ret
push
movsb
ret
dec
cwtl
pop
outsb
cmpsl
shll
cmp
and
movsl
and
xchg
jnp
mov
jl
sub
pop
in
or
adc
orb
out
add
mov
sub
add
in
jbe
mov
js
mov
jecxz
jmp
lahf
add
or
push
push
insb
push
mulb
loope
add
xchg
sti
mov
lcall
lods
imul
xchg
test
sbb
lea
push
jmp
hlt
push
or
loopne
loop
xor
jo
dec
xlat
test
into
add
sbb
jle
xor
aas
add
les
add
popf
mov
jbe
cmp
sti
shlb
cmp
orl
xchg
inc
cld
and
jno
int3
stc
pop
add
mov
sub
or
inc
adcl
mov
rorb
xor
aaa
test
imul
mov
gs
test
add
push
or
jle
out
push
fadds
lock
inc
cmpsb
iret
das
inc
fsts
push
xchg
mov
or
stos
mov
fucomp
pop
add
int3
out
sub
jge
lock
in
mov
push
ss
pushf
adc
add
inc
call
inc
shll
shl
testl
pusha
sbb
mov
mov
add
popa
rcl
loop
in
dec
cmp
mov
into
xor
cltd
in
std
nop
fwait
add
repnz
aas
add
dec
add
sub
imull
cmp
pusha
mov
add
idivb
jns
push
fldcw
loope,pt
sbb
pop
clc
sub
nop
xor
xadd
cmc
xorl
sub
jecxz
mov
xadd
insb
dec
adc
jae
lea
push
mov
icebp
add
sub
lock
add
ljmp
add
bound
hlt
cmc
add
dec
mov
add
mov
outsl
pop
push
ret
jp
dec
and
lea
enter
push
adcb
mov
add
frstor
pop
add
mov
cmpsb
inc
dec
es
lret
inc
int3
adc
add
insl
in
add
int3
arpl
cltd
mov
xchg
in
mov
dec
xchg
les
sbb
sbb
push
rdtsc
imul
movsl
int3
out
xchg
mov
rcl
jae
loopne
enter
stc
lahf
rorb
pushf
fnstsw
fildl
fldcw
mov
add
aad
xchg
jl
dec
mov
push
insl
push
pop
add
rclb
add
addb
xchg
adc
or
fcoms
ja
pop
or
push
push
mov
sbb
divl
xchg
jae
cltd
xchg
cmp
xor
es
jp
iret
inc
pop
sbb
cmc
jo
push
dec
fwait
add
orb
out
dec
add
outsb
sub
movsb
add
jb
or
dec
mov
rorb
add
mov
mov
aaa
and
adc
lret
xchg
andl
fistl
add
sub
stos
les
xor
pusha
test
pop
in
add
fsubrs
xchg
mov
adc
cltd
into
inc
push
pop
clc
or
jmp
fs
arpl
loopne
pop
pop
enter
subb
push
pop
mov
outsl
and
loopne
orb
push
imul
add
insb
pop
adc
mull
lock
jno
xchg
add
push
adc
add
or
arpl
rcll
xchg
push
lahf
jl
imul
jnp
iret
pop
movsl
push
stos
clc
adc
arpl
xor
andb
push
inc
test
jb
pop
mov
xor
test
adcb
add
xchg
mov
add
ret
jmp
in
pop
add
ja
mov
jo
jno
mov
movsb
cmp
test
in
stc
dec
add
test
xchg
mov
loopne
out
cltd
add
push
lea
int
clc
sbb
out
mov
jle
rclb
int
fistl
lds
mov
adc
sub
cs
add
lods
adc
inc
outsl
sub
data16
mov
xor
add
inc
xlat
shll
jle
cmp
jnp
dec
pop
imul
cmp
movsl
addb
push
sti
jb
add
mov
enter
add
scas
dec
and
fiadds
andb
and
add
push
movsl
repz
iret
jo
sbb
push
movb
cmp
repz
add
test
jmp
jo
mov
sbb
jge
sbb
add
push
pop
iret
adc
adc
pop
add
out
insb
test
jg
inc
movsl
ud1
push
add
lods
frstor
add
sub
xchg
arpl
jns
add
xchg
and
in
insb
pop
pop
orl
call
or
xchg
gs
jb
adc
jnp
inc
pop
ds
cwtl
mov
lds
sarl
pop
mov
pop
jo
in
add
loop
repz
fcmovnb
mov
mov
pop
add
jns
sub
movl
add
add
outsl
js
mov
pop
and
ja
inc
jle
mov
pop
sbb
add
aam
and
add
add
add
outsb
popf
loopne
inc
adc
inc
mov
dec
xchg
cmp
add
add
cmp
arpl
and
dec
lahf
jo
push
add
xchg
mov
add
jle
fnsave
push
add
hlt
loope
jae
pusha
lahf
and
negl
xchg
add
mov
pop
mov
int
jno
call
add
xchg
xchg
inc
aam
pop
fnstcw
into
xchg
or
fisubrl
sbb
mov
pop
icebp
add
insl
mov
ss
mov
outsb
mov
pop
xor
cs
or
paddd
jp
pusha
push
mov
js
clc
inc
mov
das
pop
push
popf
add
cltd
push
or
push
mov
mov
dec
mov
pusha
mov
inc
inc
push
add
or
mov
subb
jno
lds
adc
sbbb
cmpsl
add
mov
in
lcall
xor
pop
ljmp
inc
add
addr16
mov
imul
rorb
mov
jle
adc
inc
push
jns
add
mov
xchg
mov
mov
leave
lcall
rorl
jg
xchg
out
pop
iret
push
add
xchg
and
roll
pop
arpl
loopne
fsubrl
and
pop
add
pop
dec
lret
xorb
sbb
cmpsb
adc
jg
cwtd
cs
loopne
jae
adc
xchg
fsubrs
pop
lods
add
mov
addl
insl
or
push
inc
add
enter
push
std
xlat
fs
iret
and
aas
sahf
inc
in
push
add
jl
lcall
mov
add
inc
xchg
pop
std
cwtl
rorl
add
mov
andl
addr16
mov
cmp
cwtl
push
test
mov
shrb
frstor
cld
or
lahf
xchg
sub
adc
cmp
mov
adc
movsl
stos
imul
mov
xor
mov
inc
mov
xor
cmp
clc
sub
xlat
add
mov
add
jb
xchg
add
daa
xchg
bound
shrb
add
fisubrs
push
adc
mov
test
sub
addr16
pop
int
fmull
sub
divl
xchg
push
sbb
cmp
psubsb
xor
pop
adc
dec
sbb
or
adc
mov
aam
jle
rol
cmpsl
mov
stos
mov
push
cmp
sub
rclb
xchg
sbb
add
aad
lcall
cmp
cmp
test
adc
clc
daa
jg
aaa
lret
push
lds
adc
outsl
xchg
xchg
hlt
mov
inc
out
push
inc
add
push
daa
jns
mov
pop
pusha
fnsave
or
adc
mov
iret
xor
cmp
lods
add
sbb
cli
cli
test
ret
pushw
lea
cmp
stos
aad
and
add
pop
data16
push
pop
mov
or
jnp
inc
loopne
mov
dec
add
sub
and
scas
hlt
insl
add
mov
push
cmpsl
push
jno
jns
add
lcall
add
and
jno
sbb
out
mov
mov
test
add
test
lock
cltd
add
lret
std
enter
or
aad
dec
mov
adcb
pushf
add
cmp
or
push
popl
pop
add
fs
mov
add
sahf
mov
pop
push
mov
pop
inc
pop
adc
or
stos
inc
xor
xchg
sub
xchg
mov
psubd
xor
mov
out
add
mov
jmp
dec
sub
sahf
push
mov
inc
daa
jo
lret
add
mov
lods
outsl
data16
cmpsl
add
cmp
jo
mov
sbb
jb
mov
andb
clc
sbb
pop
ja
sub
loopne
add
dec
jge
lods
pop
sbb
adc
iret
pmaxsw
testb
js
mov
sbb
add
dec
cmpsb
cltd
jb
add
add
fstpt
add
out
push
fisubrl
jnp
mov
xor
jne
cmp
adc
push
jno
adcb
das
iret
ret
add
jg
test
cli
test
scas
xor
mov
bnd
adc
jmp
stos
add
repnz
in
sahf
add
mov
add
ss
xor
xchg
inc
mov
aas
les
sbb
xor
add
sarb
push
jmp
fists
in
aad
dec
pop
push
jmp
cmpsl
add
xchg
data16
xchg
sbb
aad
jnp
pop
jp
sub
pop
mov
add
xor
movsb
add
add
inc
pop
gs
sub
xor
clc
xchg
leave
add
stc
mov
lock
test
jl
add
andl
add
jb
stos
jbe
inc
jnp
sbb
mov
lret
inc
add
xor
je
jg
add
push
aas
adc
cltd
pop
in
add
ja
push
test
arpl
xchg
lcall
adc
pop
pop
data16
sti
rcll
hlt
cmpl
test
stos
jge
jo
pushf
cmp
ds
addb
sbb
in
lahf
lods
add
xchg
pextrw
cwtl
sbb
sarb
fs
subb
sarb
sbb
sub
stos
into
add
fldcw
adc
movb
mov
dec
mov
pop
cmp
cmp
cld
mov
cmpl
jo
and
mov
dec
test
mov
aam
bound
and
mov
outsl
add
cmp
mov
add
imul
jg
cltd
fisubs
jns
pop
dec
stos
jecxz
sub
jnp
xlat
aas
dec
push
add
gs
out
sub
push
xchg
daa
cmp
add
int
ret
add
jecxz
outsl
pop
je
dec
sahf
roll
mov
cmp
cmp
or
lock
add
mov
imull
das
xor
clc
bound
add
dec
jne
add
dec
jge
cmp
adc
mov
adc
fs
add
pop
shll
test
mov
into
xchg
dec
sub
enter
loopne
push
adc
ficompl
cmp
cmpsb
add
push
jns
int
call
ud1
dec
inc
pusha
push
add
push
cmc
push
pop
leave
cmp
cmpsl
sbb
dec
add
xchg
jae
add
mov
sarl
int
sbb
idivb
jecxz
push
mov
and
fwait
shlb
adc
lea
add
cmpl
aam
xchg
add
jp
add
lds
insl
btr
and
inc
xchg
jnp
pusha
test
add
scas
push
add
and
mov
popf
add
mov
bound
adc
dec
fld
push
es
pop
sub
movsl
xchg
xchg
pop
mov
mov
sbbb
sahf
pop
jp
jbe
cmp
sub
arpl
jecxz
xchg
loopne
xchg
pushl
pop
inc
ja
add
jp
cmp
jnp
xlat
das
jg
add
inc
in
pusha
or
adc
ja
dec
lds
and
shll
fstl
add
out
cmc
cmp
scas
add
push
lods
jl
bswap
sbb
pop
lcall
cmp
insb
pop
mov
andb
sub
ss
add
xchg
push
rcll
dec
insb
add
mov
aas
push
xorb
dec
dec
inc
sub
add
lods
sub
sub
ds
pusha
dec
ja
push
add
pop
inc
fistl
cmp
jecxz
das
pusha
icebp
clc
mov
add
aad
add
xor
pop
shrb
cmp
or
pop
mov
add
aam
bound
mov
repz
or
testb
out
push
inc
sarb
popa
pop
mov
and
add
out
xlat
fdivs
jo
add
dec
clc
insl
orb
inc
sub
pusha
inc
mov
adc
aaa
lahf
add
sub
cmpb
stc
outsb
add
cmp
jae
xchg
test
add
jnp
dec
fistl
cmp
js
call
add
lods
cmp
add
xchg
outsl
popf
sub
js
add
jmp
xlat
out
loop
add
push
rol
mov
cmpsl
rep
rorb
add
dec
push
dec
push
mov
cld
sbb
add
sub
mov
int3
bound
xchg
testb
add
push
cwtl
push
addl
repnz
xor
std
add
jmp
inc
loopne
rorb
cld
outsb
ret
cltd
push
jnp
aad
mov
jp
scas
add
mov
sbb
bound
pusha
js
inc
push
push
xchg
inc
mov
add
jns
outsb
aas
jge
add
mov
rolb
ret
imul
pop
lret
idivl
inc
movsl
and
pop
jl
add
in
inc
fwait
jnp
jmp
push
lret
fidivs
cld
jge
pop
cltd
add
movsb
and
jge
add
mov
mov
pushf
mov
xchg
clc
add
lret
mov
insb
out
fisttpl
inc
pop
in
inc
mov
add
loop
test
addb
cli
ja
addr16
pop
inc
loope
inc
ljmp
add
sub
mov
lahf
add
or
or
mov
pop
push
clc
aas
xchg
loopne
add
mov
cmp
in
dec
add
pop
sbb
sahf
xchg
lock
dec
mov
fdivs
add
cmp
int3
inc
or
andb
test
pop
xor
repz
sahf
push
imul
xorb
or
notb
test
mov
push
ret
sbb
push
lods
in
sahf
push
out
leave
add
sarl
or
adc
rcl
inc
into
jbe
add
arpl
adc
sbb
jecxz
add
cmp
stos
pop
dec
mov
pushf
scas
add
inc
ljmp
test
fadds
fcmovne
icebp
xchg
pop
test
int
lock
bound
pop
call
dec
inc
cmp
repnz
ds
inc
push
mov
stos
iret
pop
sub
mov
mov
jnp
pop
push
lds
mov
sub
xchg
sahf
pop
jns
mov
add
add
xor
test
or
adc
daa
or
jae
push
cltd
ret
shr
fisttpl
mov
mov
ds
push
add
iret
in
ret
cwtl
adc
adc
mov
icebp
mov
xchg
add
mov
sub
adcb
inc
add
mov
push
or
sub
mov
cli
inc
or
cld
add
notl
aad
cld
imul
arpl
xchg
call
loope
or
mov
add
xor
jns
rcl
jp
add
mov
fdivrs
out
fcomps
lds
js
cmpsl
add
fldt
cmp
aas
or
das
mov
push
mov
nop
add
push
incb
cwtl
pop
sarl
and
sbb
or
xchg
sbb
mov
add
or
insl
add
pop
xchg
push
and
lret
push
fcompl
and
fsts
enter
loope
int
add
sub
push
mov
add
xchg
adc
iret
pop
add
push
ja
add
xchg
sbb
loopne
cld
lahf
testl
lcall
je
cmpb
sbb
fbld
xor
inc
sbb
sbb
mov
cltd
shll
adc
sub
gs
add
sbb
dec
fdivl
mov
in
jno
pop
push
push
rcr
adc
data16
ds
mov
add
push
dec
or
or
ret
sub
add
data16
rorb
mov
lds
pop
add
sub
mov
jge
add
dec
add
push
xchg
addr16
sbb
mov
incl
rcr
add
std
vmread
ret
add
jp
imul
cmpsb
xchg
push
inc
lock
add
jo
adc
pusha
mov
jg
add
adc
dec
cmp
aam
into
popa
jo
jg
pop
inc
mov
jge
lock
loop
fsubl
imul
cmp
insb
cmp
lcall
ficompl
mov
adc
int3
fcompl
xchg
lret
dec
jb
xchg
add
out
add
sbb
push
or
inc
jnp
repnz
bound
pop
aam
aaa
inc
xchg
nop
adc
ss
mov
pop
jl
mov
add
iret
or
cld
testb
outsl
pop
inc
add
pop
popa
mov
mov
pushf
jmp
add
xchg
jl,pt
and
add
xchg
xchg
cmp
add
push
push
ret
xchg
fwait
nop
out
ss
push
nop
lods
cld
jbe
cmpb
iret
sbb
adc
rcr
pop
insb
mov
out
dec
mov
xor
inc
or
aam
and
add
pop
and
fxch
leave
add
sbb
addl
jg
push
fcomps
ds
mov
or
xorb
out
int3
push
repz
cmp
addr16
dec
xor
pop
outsb
jg
add
clc
pop
stos
add
sub
add
cbtw
faddl
or
ss
or
fcomi
rolb
sub
add
jo
je
mov
pop
cmp
js
lock
and
dec
jle
add
lret
in
adc
loop
push
ja
es
in
int3
sar
jo
add
decl
insl
enter
ljmp
xchg
dec
or
mov
jae
in
jecxz
sub
stos
inc
ss
or
roll
pusha
xor
xor
push
mov
add
sbb
jmp
cld
pop
clc
pop
stos
idivb
push
dec
push
mov
jl
push
and
sbb
push
jae
fsubrl
or
mov
sbb
xchg
loope
div
adc
shlb
fildll
lahf
imul
jp
pop
mov
in
jle
cmp
xchg
add
cld
cmp
sub
es
add
test
jno
add
aam
rolb
rcll
lret
mov
test
inc
faddl
out
xchg
mov
fildl
cmp
push
pop
addb
fiadds
inc
mov
inc
out
xor
and
add
cmp
adc
jo
and
ret
test
inc
or
push
out
pusha
in
dec
fdivrs
pusha
jl
inc
in
cld
cltd
mov
jecxz
test
mov
arpl
and
ja
dec
in
pop
inc
shlb
push
sti
shl
loopne
push
rcr
or
leave
adc
jnp
jle
outsb
push
popa
adc
roll
add
or
ss
dec
xor
int3
sbb
inc
lret
enter
test
mov
xchg
leave
lock
scas
dec
cmp
hlt
add
jno
mov
mov
jnp
jmp
cwtl
lret
add
fldcw
push
mov
mov
addb
or
outsb
add
in
add
mov
adc
cltd
inc
mov
add
ror
andb
in
lods
daa
push
mov
sarb
dec
lods
je
inc
outsl
jle
sub
and
lahf
fdivrs
sub
jp
pop
lret
xor
daa
dec
xchg
add
xchg
jae
fiaddl
xchg
fsubp
mov
rolb
pop
movl
push
pushf
pop
roll
pop
fs
sbb
nop/reserved
cmp
loopne
sub
add
xchg
loope
mov
imul
test
mov
mov
xor
xchg
mov
dec
out
jo
scas
xorl
aas
add
xor
mov
add
icebp
jg
adc
add
mov
push
add
aad
push
dec
sbb
add
jge
ss
add
leave
loopne
cs
pop
imul
jmp
xlat
add
in
ss
xchg
out
pop
add
es
pop
popa
inc
adc
jno
add
sbb
cwtl
jns
pop
test
aad
add
sub
sbb
in
popa
sub
shrb
push
ds
in
add
loopne
adc
or
adc
dec
add
in
shlb
mov
jae
aas
jl
add
xchg
pop
inc
sbb
call
push
mov
sbb
popa
or
cmp
add
fmuls
hlt
pop
add
aad
jns
mov
mov
push
adc
sub
mov
rcl
arpl
and
ja
inc
add
dec
push
movsl
in
fadds
pop
cs
push
pop
fwait
lods
inc
add
std
jle
mov
ja
add
rclb
das
jb
add
aam
push
add
pop
mov
cmp
or
xor
popa
testl
in
jmp
pop
mov
addl
fisttps
dec
jo
push
push
mov
jle
mov
insl
sub
sahf
bswap
loopne
psubq
fmull
adc
inc
jg
aas
and
into
lea
inc
cmp
add
sub
cwtl
mov
fwait
xchg
mov
cmpsb
add
loop
jns
fmull
jbe
add
cltd
pop
and
std
mov
jae
inc
lock
xchg
jg
add
xor
dec
add
push
in
add
push
add
pusha
push
ss
dec
insb
popa
and
lret
mov
cmc
or
mov
push
mov
sbb
pop
add
xor
push
shrl
rolb
addr16
aad
push
call
adc
cmp
call
mov
ja
lret
popf
insl
shlb
add
xchg
push
add
pop
adcb
js
pop
mov
pop
stc
add
out
cmp
repz
push
int3
nop
lea
adcl
xor
shlb
iret
push
pushf
out
in
add
jbe
mov
jp
mov
sub
lock
enter
push
or
xlat
lcall
jo
inc
in
add
mov
fcoms
mov
in
mov
les
mov
pop
xor
dec
and
fs
sub
add
test
clc
xor
add
scas
xchg
cmpsb
cmp
push
jle
add
xor
addr16
fdivs
sub
cwtl
xchg
xorb
jp
fildl
mov
hlt
or
adc
ja
imul
lahf
jns
fimull
inc
scas
test
dec
cmpsb
pop
stos
sti
cli
loop
mov
shl
add
js
add
pop
gs
jae
inc
mov
push
cmp
or
cmp
xchg
cld
or
sub
dec
and
and
add
xchg
inc
adc
rolb
add
cmp
xor
mov
sbb
fistpll
add
xchg
sbb
sub
push
cwtl
xchg
dec
add
movsb
orl
cmp
mov
add
mov
mov
xchg
add
stos
cmpsb
xor
add
adc
add
insl
mov
add
repz
shr
mov
adc
mov
xchg
lret
rorb
test
loopne
mov
mov
or
and
sub
push
add
mov
int3
add
std
mov
pop
add
inc
push
cli
jne
pop
loope
imul
mov
mov
clc
lods
test
add
inc
aaa
xchg
xchg
push
add
std
push
or
ja
addr16
cmc
clc
jp
add
add
nop
loop
daa
fidivrl
mov
sbb
sbb
fistl
xchg
add
dec
arpl
add
in
mov
add
fdivs
or
jmp
mov
adc
pop
xor
bound
push
pop
add
fldt
push
jle
jecxz
push
lock
xchg
inc
add
pop
icebp
stc
cwtl
dec
xchg
xor
cmpsb
out
hlt
shrb
and
adc
add
popfw
in
mov
call
test
sahf
add
or
lea
cmp
add
jge
lods
aad
or
add
loopne
mov
add
add
jo
xlat
add
popf
pop
lods
cltd
and
mov
add
lea
cmp
test
cmp
stos
stc
mov
enter
aas
pushw
pop
mov
out
push
test
idivb
push
add
mov
jmp
add
pop
mov
lock
movsl
stos
xlat
add
ljmp
fmuls
sbb
xchg
insl
add
testb
mov
loope
cmpsb
add
in
in
lock
and
int
jle
loopne
fwait
add
xlat
mov
sbb
sbb
mov
aad
dec
into
fs
push
sub
mov
sub
shl
and
cmp
and
xchg
loop
loopne
popl
inc
data16
cmp
adc
add
les
jnp
loop
sub
mov
adc
mov
rolb
add
add
pop
adc
loopne
mov
add
ss
ret
popf
add
cwtl
adc
in
jno
add
xor
popa
mov
dec
leave
adc
fdivs
or
mov
ss
dec
push
movsl
add
xlat
aam
dec
dec
ds
mov
push
xchg
xor
pop
addr16
add
pop
push
cmp
insb
jp
mov
fsub
out
cmp
jno
test
pusha
cmp
push
cmp
dec
xor
dec
dec
cmp
rolb
arpl
insb
in
sbb
mov
andb
cli
js
push
andl
popa
add
repnz
in
ss
rolb
lock
ret
inc
hlt
jbe
pop
adc
xchg
mov
pop
or
fdivs
add
lods
icebp
fiaddl
int3
jbe
pop
sbb
rcrb
add
sbb
pop
sub
dec
pop
fcoms
xor
jns
add
orl
dec
xor
lock
decl
xor
stos
test
pop
scas
adc
xchg
ljmp
mov
mov
mov
test
add
add
sub
cmp
adc
jne
sbb
mov
cltd
add
incb
push
add
jmp
add
rol
test
stos
pop
mov
scas
inc
mov
add
xor
stos
cli
xlat
and
mov
add
adc
cmp
and
vmread
mov
addr16
push
or
cltd
cmpb
ret
addl
jbe
add
lods
arpl
xchg
aam
cmc
add
cmp
and
add
aad
cmpl
pop
xchg
movl
adc
or
and
add
push
xchg
cltd
dec
clc
mov
std
xor
lea
add
dec
mov
add
fbstp
js
inc
sbb
sti
add
imul
repz
add
cld
sbb
ds
inc
push
xor
cmp
mov
frstor
inc
add
js
stc
sub
jae
cmp
pusha
or
scas
clc
dec
add
adc
adc
in
add
xchg
jb
xchg
pop
sbb
add
cmp
cli
lcall
or
push
clc
pop
jae
cmp
pushf
sbb
add
gs
cmp
loope
add
std
inc
push
imul
xchg
add
push
aam
jae
sbb
add
dec
gs
sti
and
xchg
rclb
movlps
stc
jns
add
ret
and
add
es
andb
and
cmc
dec
jp
fcoml
add
lahf
sub
fldt
test
lcall
ret
je
cmc
imul
and
nop
jl
xchg
push
jge
sbb
push
and
mov
add
xchg
call
add
add
xchg
das
js
loopne
add
shr
mov
push
jbe
or
xchg
lret
nop
or
jo
jp
icebp
or
mov
add
mov
loop
lods
mov
push
dec
mov
xor
icebp
mov
adc
inc
mov
xchg
mov
lea
push
cmp
aam
or
sbb
fwait
cmp
mov
xlat
pusha
js
mov
push
jecxz
add
dec
or
xor
stos
call
out
sub
test
push
adcb
bound
into
mov
add
enter
inc
clc
add
test
stc
xor
and
cld
fimull
add
xchg
sub
daa
addb
rcrl
scas
cmpsb
add
inc
dec
subl
jns
rorb
shlb
enter
xchg
cmp
xchg
add
add
in
fdiv
sub
sbb
lods
add
adc
sbbl
rcrb
jmp
add
cs
push
sti
lret
add
shlb
mov
and
dec
add
test
push
add
dec
adc
aas
push
add
insb
sub
add
sub
add
mov
add
dec
mov
or
nop
or
sti
ret
sbbl
sbb
mov
sbb
mov
or
add
sbb
jmp
sti
jp
movl
jmp
ret
pop
inc
mov
ja
and
mov
out
in
xor
push
add
xor
or
insl
jp
add
push
mov
gs
sbb
pop
xchg
aaa
loope
push
out
fmuls
add
push
mov
lock
and
fwait
mov
jae
and
add
jnp
fisubrl
nop
adc
add
push
pop
arpl
xchg
call
jmp
add
adc
dec
idivb
add
jg
sub
xlat
inc
std
add
dec
xchg
push
ret
add
dec
outsl
fsubl
ret
push
lret
mov
mov
js
es
jae
movlps
dec
cs
jb
pop
xchg
leave
movl
jge
cmp
les
inc
into
mov
stc
push
test
cmpsl
push
call
repnz
mov
lcall
cltd
or
inc
je
mov
out
add
out
add
xorb
cwtl
and
add
lea
or
orl
enter
jp
pop
lret
loopne
outsl
mov
addb
in
ljmp
jb
mov
add
mov
pop
add
push
inc
push
jmp
inc
pop
add
inc
mov
arpl
or
xor
push
insl
inc
pushf
jo
inc
sti
mov
repz
cmp
xchg
das
js
fldt
jg
ror
mov
or
stc
imul
pop
and
add
add
les
int
mov
rolb
pop
push
add
call
adc
test
pop
jle
shlb
gs
jge
lock
push
xorb
mov
jae
cmc
sub
repz
ljmp
test
aad
inc
and
jge
dec
xor
sub
mov
mov
add
mov
ret
adc
sub
add
pop
or
lods
out
dec
mov
push
mov
addb
lcall
jne
mov
xchg
ficoms
inc
add
call
xor
mov
sub
dec
add
add
rcll
lcall
push
pop
lods
mov
scas
outsb
outsl
je
insl
cmp
addr16
push
aas
add
int3
xor
fwait
mov
scas
ljmp
mov
ja
add
push
jge
js
add
clc
jle
mov
std
rorb
cmp
cmp
pop
mov
insl
sbb
add
jmp
inc
out
rcrl
or
inc
mov
push
add
dec
inc
and
repnz
jle
add
movsb
daa
mov
inc
jp
xor
idivl
ret
pop
or
push
push
inc
dec
pushf
push
inc
mov
pop
lret
inc
add
sbbb
test
mov
jno
mov
xchg
mov
mov
jo
dec
jmp
into
cmpsb
stos
cmpl
mov
sti
mov
pop
xor
add
or
dec
cli
pop
push
aaa
lcall
lret
push
punpckhdq
sbb
cs
jmp
jno
sbbl
cwtl
sbb
add
xor
fisttpl
ljmp
jno
add
adc
enter
es
push
jne
cmp
pop
scas
stos
mov
xchg
sti
test
add
ficompl
rcll
xchg
or
int
add
fldenv
clc
ret
call
jno
pop
divb
push
popf
push
mov
sub
pusha
add
scas
mov
mov
fimull
add
fadds
out
loop
xlat
cmp
sbb
add
iret
lods
jns
add
roll
lret
jmp
pop
test
xor
aas
xchg
incl
icebp
imul
inc
mov
pop
aaa
add
repz
mov
add
xor
outsl
fists
cmp
sbb
jmp
cs
lret
icebp
jne
xor
lahf
mov
and
dec
lock
fsubs
inc
enter
add
push
or
xchg
mov
xchg
mov
int
add
push
adcl
inc
and
pop
pop
adc
inc
fdiv
aam
jns
cmp
mov
rcl
pop
or
cmp
fldenv
xchg
inc
jl
add
adc
xchg
add
cmpsl
cmpsb
je
and
stc
cmp
push
sbbb
jl
adc
lea
lds
push
in
aaa
sub
add
cmc
adc
and
icebp
jecxz
jb
cld
nop
xchg
arpl
hlt
sbb
add
popl
mov
rcr
sbb
jge
shll
stc
js
in
inc
sar
lock
jne
cmpsb
shrb
aas
add
testb
add
pop
cld
bound
jbe
add
lods
aaa
aas
sbb
subl
cmp
lretw
lds
xchg
and
add
jg
push
cmp
jecxz
adc
pop
sahf
add
stos
xchg
add
cli
je
aam
and
andb
ret
sbb
add
sbb
punpckldq
fwait
jo
xchg
add
add
xchg
and
rolb
inc
dec
add
test
jns
add
test
or
or
cli
push
pop
iret
xchg
push
pushf
sbb
adc
mov
mov
adc
mov
xchg
aam
shlb
cmp
pushf
jmp
adc
add
jae
mov
outsb
sahf
je
pop
inc
into
lds
rcll
scas
add
dec
dec
aad
xchg
es
adc
cmp
or
adc
subl
int
shrb
pop
notl
loope
inc
pop
push
dec
imul
loop
lds
jo
add
mov
stos
cwtl
push
pop
mov
add
xchg
cs
lret
out
stos
inc
xor
pop
xchg
add
mov
ret
hlt
xchg
jns
add
push
cmc
cld
and
and
and
inc
shlb
pop
cmp
scas
int3
aam
push
add
in
mov
das
out
clc
mov
or
loop
push
pcmpgtb
outsb
mov
pop
sbb
jae
pop
lock
gs
jmp
xchg
roll
stc
enter
popf
iret
icebp
add
pop
jle
or
add
cmp
fistps
adc
add
inc
cmp
stos
cli
pop
mov
mov
pop
mov
sub
jge
cwtl
add
scas
pop
das
mov
ds
add
cld
and
and
loopne
mov
call
pop
mov
xor
mov
dec
lret
add
push
popa
out
ret
add
fimuls
sub
inc
test
test
outsb
push
mov
push
clc
pop
add
xchg
mov
stos
and
adc
sbb
std
ljmp
out
xchg
push
add
lds
add
les
loopne
add
stc
addl
call
test
adc
sub
add
int3
jbe
add
cmp
sbb
add
lock
pop
aad
add
mov
mov
les
push
shll
sbb
dec
in
test
sbb
fldcw
add
ret
cmp
inc
dec
loopne
sbb
sub
hlt
add
fisubrs
ds
dec
pusha
cmpsb
movsb
sub
filds
fnsave
jb
add
inc
das
add
pop
pusha
mov
aam
push
jb
add
sbb
test
xor
pop
pop
out
add
jp
push
jmp
filds
or
push
pop
loope
adc
sbb
sub
dec
andb
and
int
leave
addr16
aam
adc
sarb
add
lret
dec
clc
xorb
add
jge
mov
lods
mov
insl
icebp
xor
sbb
cmp
ret
xor
insb
fidivrs
or
leave
mov
xor
cmp
push
scas
mov
loop
std
movsb
pop
sbb
sbb
cmpsl
and
ficompl
mov
mov
stc
ret
and
fcomp
inc
enter
sub
ret
lock
add
mov
hlt
loopne
outsb
movsl
nop
addr16
or
sahf
push
push
adc
fbld
jl
jne
push
add
jb
xor
daa
mov
add
mov
adc
popf
push
lods
or
mov
and
fmuls
sub
and
xlat
add
ja
push
add
int3
adc
lods
mov
add
lcall
cmp
push
and
mov
xor
mov
rolb
pop
adc
cmovs
add
repnz
data16
mov
and
mov
and
mov
into
or
dec
ja
rolb
sbb
mov
stc
arpl
add
inc
xor
mov
push
xchg
add
xor
cmp
cmp
push
orb
dec
jne
add
xchg
sbb
jl
hlt
xor
fiaddl
push
cmp
pop
in
xchg
ljmp
jmp
iret
push
sbb
mov
or
inc
psubb
repnz
lea
cmp
insl
cld
add
xchg
test
sbb
cmpsb
add
dec
nop
adc
data16
fsubl
xchg
or
xor
int3
popf
adc
mov
shlb
add
mov
jne
add
cs
add
and
aam
es
testl
add
popf
fadds
sub
push
dec
cmp
mov
pop
push
jle
cmp
cmpsb
adc
mov
popf
add
in
sbb
repz
inc
jle
ret
inc
enter
cld
andl
in
lock
push
mov
test
aad
add
mov
mov
add
leave
push
lds
inc
bound
idivb
push
jo
outsl
fmuls
rdtsc
les
clc
test
sbb
pop
add
cmpsl
addr16
ds
dec
add
xchg
add
lock
call
adc
jg
gs
je
push
add
inc
fcompl
icebp
mov
jbe
mov
enter
testb
xlat
cmp
push
stos
push
std
jae
fsubp
jmp
addb
xor
cmc
gs
imul
inc
cli
mov
ud0
push
add
jp
addr16
leavew
mov
pop
sarb
or
jns
push
loope
data16
pop
mov
sbb
xchg
add
sbb
sbb
je
push
or
lcall
pop
fsubrl
pop
sbb
test
mov
adc
data16
es
xor
add
push
bound
xor
xor
sbb
mov
inc
mov
sub
cmp
mov
cmp
add
xchg
xor
add
cmpl
fistps
std
rcll
stc
jae
jge
jae
add
xchg
orb
mov
xorb
in
fldl
imull
cmp
ds
push
aam
mov
dec
fiadds
test
aaa
add
xchg
insl
cld
and
ret
aaa
dec
adc
add
sbb
sub
stc
add
lods
jb
xor
push
stos
jb
sub
fildl
jno
out
pmovmskb
inc
mov
into
int
add
stos
fdivrp
cmp
or
add
inc
cmp
mov
add
xchg
fldt
add
inc
inc
mov
add
mov
mov
fsubrs
in
push
xchg
inc
and
std
jnp
or
jp
pop
add
pop
xor
push
popa
sbb
pop
and
stos
xor
movsb
and
sub
cmc
xchg
ret
icebp
add
sbb
lret
dec
inc
add
mov
fs
inc
add
imul
adc
jl
xchg
and
fsubrp
fcmovnb
arpl
lret
jo
fcomip
roll
gs
xor
cmpl
pop
pop
sti
add
sbbb
dec
mov
cmpsl
fadds
sbb
cltd
push
aaa
rcl
andb
push
xor
or
aam
cwtl
ja
cmpl
incb
imul
sti
cmp
cwtl
mov
xchg
scas
sub
push
bound
jg
add
cmp
scas
add
mov
icebp
imul
lock
add
push
xor
cmp
aas
jno
mov
shlb
repnz
jnp
jo
mov
add
xlat
pusha
fidivrl
adc
adc
inc
out
mov
sarl
lret
pop
test
imul
xor
dec
inc
cmp
add
mov
add
pop
int3
mov
add
cmc
pushf
push
mov
addl
pop
cmpsb
ja
roll
aas
leave
and
cmp
ror
mov
addr16
push
movl
pop
adc
add
or
lock
push
decl
jmp
icebp
mov
pop
shrl
fmull
sbbb
or
in
jge
mov
divb
add
jbe
rolb
jmp
dec
scas
sbb
xchg
dec
les
ret
out
push
cmovbe
cmpsl
inc
inc
movsb
adc
and
in
pop
loope
xchg
fdivs
cmp
movsb
cmp
hlt
mov
out
shlb
pop
stos
cltd
int
xchg
or
or
fldt
lds
cwtl
mov
add
pop
adc
iret
dec
add
inc
test
sti
aas
mov
fisttpl
icebp
mov
mov
ds
or
movsl
push
outsl
cwtl
or
or
add
je
lods
pop
add
adc
cli
xor
mov
das
loop
data16
hlt
inc
jno
jbe
daa
dec
dec
add
sub
into
push
mov
add
nop
pusha
push
add
xor
jge
add
sub
add
ljmp
add
sub
mov
ds
movb
lcall
inc
add
pop
push
popf
cmp
pop
and
add
inc
cmp
insl
add
insb
and
ljmp
mov
call
sbb
or
rol
mov
and
dec
xchg
std
mov
pop
xchg
lahf
jp
fidivrs
add
cltd
xlat
mov
or
add
mul
inc
shlb
pop
inc
test
add
add
xor
jno
test
mov
int3
sub
lea
sar
jne
add
xor
add
std
mov
sub
push
leave
mov
lcall
or
shlb
loopne
cmpsb
add
jl
push
add
push
mov
stc
bound
push
popf
add
or
sbb
jmp
mov
scas
nop
sbb
and
adc
add
arpl
cmpb
xchg
push
dec
pop
xor
jl
add
iret
nop
daa
notb
add
cmc
mov
and
adc
mov
add
cmpsb
and
jo
add
lret
dec
add
mov
push
cmp
cmp
jnp
and
mov
adc
jae
sbb
lock
cli
mov
sub
add
and
push
dec
ljmp
les
xor
sbb
clc
inc
add
enter
sbb
imul
pop
and
movb
xlat
fldl
cld
out
enter
or
aad
sahf
sti
mov
cld
outsb
out
test
add
sbb
insl
pusha
cvtps2pi
add
sti
jo
add
xor
add
rorl
push
enter
inc
loope
repnz
add
jb
mov
adc
xchg
add
imul
push
inc
popa
adcb
repnz
insl
mov
fs
ja
add
jge
xchg
mov
push
aad
pushf
in
add
sbb
mov
mov
movsb
cmc
std
push
icebp
mov
es
jp
iret
out
add
cmpsl
xor
fwait
xchg
cs
inc
add
aaa
repz
in
dec
add
jo
stc
in
rcl
aad
mov
and
in
xchg
and
adc
out
pop
test
jo
cwtl
clc
sahf
dec
jle
lahf
cmp
loope
lcall
fsubr
jp
jge
call
imul
push
inc
pop
sub
xor
jno
add
pop
loope
stc
stos
sub
mov
fildl
push
mov
loop
adc
adc
add
and
dec
adcl
inc
lods
cs
je
clc
imul
inc
mov
xor
iret
xchg
pushf
repnz
mov
cmp
add
int3
jno
rolb
add
jge
pusha
adc
test
add
sub
inc
lds
fiadds
xchg
imul
add
cmp
jne
outsb
fnstcw
psubd
jle
push
adc
cmovs
pop
shlb
add
xchg
dec
cmpsl
adc
enter
sub
jecxz
sub
xchg
pusha
inc
repz
stos
movsb
xchg
mov
jmp
gs
cld
int3
xor
and
adc
inc
int3
mov
sarb
std
test
test
cld
xchg
dec
mov
and
push
mov
or
lcall
mov
push
add
stc
lea
xor
jno
add
pop
mov
inc
pop
or
or
pop
and
lret
add
inc
mov
in
leave
add
adc
inc
push
aad
adc
jbe
clc
sbb
cld
jg
add
ds
aas
sub
add
xor
mov
add
pop
mov
sub
push
mov
in
xor
sub
call
repz
push
sbb
push
popl
rcrb
inc
es
pop
add
mov
scas
add
mov
add
dec
cld
jecxz
iret
push
out
movsl
enter
mov
and
dec
bound
outsl
mov
fidivs
out
in
imul
outsl
je
inc
aad
std
dec
xlat
andl
add
cld
call
mov
add
mov
rorb
sahf
adc
mov
sbb
data16
aas
out
xor
fistpl
add
leave
push
std
xchg
sarb
push
sbbb
outsb
movsl
mov
psubq
outsl
imul
mov
mov
daa
jo
sub
js
fld
out
ja
add
push
int3
xchg
fwait
dec
mov
mov
push
cld
pop
aaa
je
fs
jb
out
ss
int
inc
ljmp
xchg
into
ja
add
sbb
or
inc
test
jl
stos
unpcklps
and
pop
mov
testb
pop
scas
mov
iret
xchg
inc
pop
push
jno
testl
fucomp
jb
lods
into
mov
add
sbb
mov
int3
pop
sbb
jle
add
ds
rcr
leave
cld
cmp
adc
xor
cmpb
xchg
inc
mov
xchg
jecxz
push
sbb
outsb
add
in
pop
cmp
push
xchg
mull
add
mov
add
cmp
sahf
jns
pop
fdivrp
pusha
flds
jl
repz
js
mov
mov
push
aam
add
inc
sbbl
sbbl
out
pop
ja
cmp
fldenv
cli
xor
xchg
aas
mov
clc
call
pop
sbb
out
push
inc
ret
divps
sbb
lret
int
sbb
aaa
enter
jne
push
cld
add
cmc
mov
call
mov
sti
repnz
movsb
add
mov
fsubs
add
add
xor
or
imul
pop
outsb
xchg
add
sub
add
out
and
mov
jb
xlat
jo
and
xor
mov
nop
push
xor
andb
mov
xchg
pop
lcall
sbb
and
mov
or
pusha
gs
push
movb
popa
cs
push
dec
add
out
sub
cltd
inc
add
mov
push
or
stos
bound
pusha
jo
fildl
xchg
test
jge
pop
push
aas
loop
cmpb
stos
test
cmpsl
and
pop
sbb
daa
and
stc
mov
or
push
jmp
mov
jbe
aam
imul
jae
test
sub
mov
out
lahf
pop
nop
cmpsl
fisubrs
sub
arpl
lcall
dec
pop
iret
cld
push
add
xchg
outsb
inc
push
in
addl
into
and
arpl
ljmp
inc
or
out
das
fidivrs
out
xor
sarl
dec
shl
ljmp
and
xchg
add
jl
jns
imul
xchg
adc
xor
aaa
and
push
add
cld
or
add
ds
or
rolb
std
pop
xchg
xchg
inc
jg
add
mov
sub
insb
add
mov
call
jp
add
mov
mov
xchg
add
and
bound
mov
push
cmc
jle
arpl
aad
ret
ss
push
dec
incb
out
rcl
pushf
jl
enter
add
adc
mov
dec
scas
out
mov
psubd
cli
rcrb
fwait
cmp
shl
fistpll
push
sbb
xor
inc
jae
in
jbe
movsb
push
add
stc
jl
adc
jbe
mov
cwtl
add
pop
pop
fimull
fstp
jb
add
mov
mov
pop
inc
mov
mov
xor
push
es
scas
int
push
push
inc
cmp
add
and
xchg
mov
mov
cmp
ret
mov
rolb
hlt
jno
fwait
jne
vmwrite
dec
int3
repz
loope
in
pushf
add
test
arpl
add
sub
roll
mov
pop
int
mov
or
xchg
sahf
inc
push
jno
and
dec
inc
insb
gs
jge
lock
or
sbb
xor
add
inc
sub
inc
aaa
jg
js
add
lods
push
sbb
fcomps
jae
add
xor
fs
repnz
rol
sub
add
cmp
add
ficomps
xchg
inc
shl
sub
jb
pusha
imul
jno
shr
xor
subl
inc
ficompl
cs
jbe
and
repnz
dec
into
loop
add
andl
mov
enter
xchg
jge
str
das
cmp
jo
fsubrs
push
jge
add
and
push
pusha
iret
push
add
das
adc
pop
ja
or
mov
jecxz
dec
push
add
jg
add
stc
xchg
cld
pop
or
jbe
insl
mov
push
mov
inc
dec
or
pop
inc
in
rolb
movsl
in
jno
push
rol
jmp
gs
testl
out
test
lret
std
repz
push
sbb
push
cli
lahf
jp
push
mov
lret
inc
stos
adc
inc
sub
pop
and
add
fwait
mov
cmp
js
pop
jg
addl
fistpl
jnp
movsl
aam
mov
add
js
int3
mov
add
cltd
dec
mov
out
cmp
addr16
jge
add
add
outsl
jbe
add
in
sub
cmp
pop
in
add
ret
daa
aam
xor
pop
cs
pusha
scas
mov
movsl
pop
ds
mov
loop
add
std
push
push
dec
mov
faddl
add
cmp
inc
xchg
jmp
popf
andb
test
add
mov
push
add
mov
cmpsb
mov
add
dec
movsb
jnp
add
clc
lods
icebp
jg
pop
xchg
pop
jle
mov
maxps
addb
sbb
add
mov
cmpsb
cmc
inc
loop
lds
sbb
pop
lret
xor
cs
mov
ret
xchg
enter
dec
fstpl
push
dec
pop
pop
in
rclb
vmwrite
and
aam
sbb
jbe
shlb
loope
add
xchg
add
inc
call
repnz
jb
data16
cli
add
mov
mov
xor
mov
sub
idivb
test
test
pop
inc
and
xchg
add
jbe
cmc
fimuls
xchg
add
dec
adc
xchg
js
mov
jle
add
mov
mov
sbb
xor
jbe
daa
jecxz
pop
xchg
cmp
movsl
push
xchg
add
nop
sub
jb
add
jo
add
xchg
fdivs
out
scas
loop
add
cmp
add
or
inc
clc
testl
adc
xor
lcall
aaa
or
push
mov
popf
inc
outsb
movsl
and
cmp
out
add
repnz
add
pmaxsw
jb
shr
sbb
cwtl
ja
in
mov
das
insb
sahf
arpl
add
lcall
scas
icebp
movl
mov
or
add
stos
push
jbe
add
popl
add
insl
adc
xchg
mov
rcll
add
out
dec
pop
sub
cli
mov
push
mov
ret
or
add
dec
jmp
lret
lea
inc
mov
add
or
push
sub
out
gs
not
leave
xor
mov
push
mov
loop
addr16
inc
aad
jmp
fldl
add
adc
aam
imul
inc
xor
add
cmpl
pop
sbb
push
mov
test
fucomi
scas
add
imulb
in
movb
cmp
push
out
add
sub
xlat
cld
add
out
and
out
mov
imul
insl
fildl
and
in
ds
xchg
testl
mov
and
test
ljmp
movsb
push
repnz
mov
adc
mov
leave
shll
xlat
fisttpl
fnstenv
icebp
int3
outsl
ret
lahf
shrb
inc
testl
sbb
adc
dec
mov
std
pop
mov
popf
add
loopne
ds
outsb
aad
mov
push
or
movsb
andb
push
popl
jmp
out
shrl
shlb
push
repz
mov
aad
sbb
or
or
mov
inc
add
imul
scas
add
enter
cli
test
push
add
lods
inc
call
aad
movsb
add
inc
leave
shr
pmaddwd
push
push
ret
cmp
adc
cwtl
add
arpl
xchg
lcall
test
in
jo
shrb
sbb
fiaddl
mov
mov
loop
xlat
add
xchg
dec
mov
mov
scas
mov
add
lock
call
mov
push
pop
mov
orl
rclb
dec
inc
sqrtps
ja
and
ds
add
push
xor
add
push
aas
je
sarb
lret
in
in
nop
add
mov
pop
outsl
les
mov
cmpsb
cmp
insb
test
loope
add
inc
mov
jo
inc
lock
mov
in
sub
jae
add
xorb
stos
mov
ds
and
push
inc
loopew
xchg
in
pop
adc
xor
xor
cld
inc
ds
mov
add
lock
xlat
loopne
loopne
jge
push
cs
setb
call
adc
add
xor
add
das
fcompl
imul
cmp
lods
adc
pop
je
in
cmp
mov
jbe
mov
fcomps
sub
dec
out
add
jp
inc
lock
sti
imul
imul
and
inc
mov
cmpb
sti
mulb
pop
push
add
inc
call
repnz
xorl
out
dec
lahf
in
add
enter
je
test
fiaddl
push
push
shl
in
es
and
sbb
add
nop
ss
mov
pop
xorb
sbb
inc
jbe
int
fstpl
mov
test
add
filds
mov
fs
aaa
rorl
dec
sbb
repz
jo
jno
add
shl
fwait
iret
adc
in
mov
lods
jns
jb
jnp
cmc
push
out
fcomps
pop
add
mov
mov
insl
pusha
mov
lcall
stc
jns
add
inc
fisubrs
cmpsl
lret
adc
into
loope
call
ret
mov
or
andb
mov
je
fsubrl
fiaddl
xor
cmp
mov
imul
iret
lds
lret
add
cmpsl
fisubs
subl
pop
test
in
push
xor
test
sub
and
pushf
jb
fnstenv
push
dec
xor
stc
jl
ljmp
fstpt
mov
fldenv
mov
cmpsb
imul
pcmpeqb
cli
outsl
sar
and
add
gs
into
sub
movsb
aaa
jl
addl
outsb
inc
pop
ret
mov
sub
mov
add
add
add
sub
add
xchg
mov
add
stos
inc
popa
mov
aam
test
rorb
hlt
xor
out
jno
inc
daa
add
pop
add
es
mov
testb
jle
mov
push
repz
add
xchg
jns
hlt
mov
ja
js
jl
mov
xchg
or
pop
lret
xchg
mov
sti
add
push
fsubs
les
dec
faddl
scas
add
cmc
push
imull
sbb
pop
lcall
fcomps
mov
ret
testb
inc
and
out
test
lods
addl
push
pushf
dec
push
not
fiaddl
js
shll
inc
test
jmp
adc
xor
add
test
dec
add
sbb
orb
add
jge
xor
push
push
movsl
arpl
imul
mov
or
inc
dec
or
lock
add
mov
test
out
add
add
rcr
cmp
fiaddl
cmp
add
aam
or
in
jge
pusha
xor
inc
or
pop
jg
xor
add
insl
mov
jg
jb
adc
pop
push
push
push
add
jecxz
ret
mov
mov
or
add
sub
add
xor
lret
cs
out
sti
jnp
lahf
cwtl
xor
fstpl
test
inc
add
popf
mov
std
add
pusha
cmpsl
add
scas
xchg
popf
mov
test
add
outsl
andl
dec
nop
inc
xor
add
cmp
xchg
or
mov
add
dec
xor
xor
xchg
clc
add
bound
pop
xor
lret
loopne
loope
add
jp
stc
add
int
sarl
add
imul
aas
in
je
cmp
sbb
vorps
aaa
pop
pop
mov
jae
rcrl
inc
roll
push
jo
cmpsl
add
cmp
add
inc
push
and
fdivr
stc
add
sbb
pop
std
int3
sub
movsb
mov
in
insb
add
cwtl
out
add
sub
and
add
ja
rolb
ficomps
stc
popl
add
insb
sarb
mov
add
xor
pop
inc
sbb
data16
xor
repnz
add
out
lds
jle
hlt
stos
add
cmp
add
mov
leave
mull
out
pop
push
cltd
in
ljmp
jp
out
mov
leave
or
sub
xchg
add
popl
mov
add
inc
xchg
jae
je
cli
push
add
xor
jle
testb
jo
xchg
or
dec
inc
push
lret
nop
lret
sahf
test
bound
mov
add
les
rclb
divl
push
adc
pop
push
gs
dec
in
out
popf
dec
loopne
pop
pop
wrmsr
lods
nop
mov
lcall
jbe
jecxz
std
cmp
in
jl
xor
fwait
dec
pop
fistpll
mov
repnz
xchg
push
dec
rcrb
add
pop
rcrb
dec
lods
inc
push
outsl
pop
rcrl
out
int3
mov
bound
or
add
or
lcall
bnd
pop
add
mov
lcall
push
addb
movsl
add
mov
push
jns
pop
pop
in
push
jmp
pop
out
dec
imul
inc
sar
bound
out
cmp
roll
sahf
flds
cli
jg
shll
sub
es
fstpt
push
or
popa
das
lret
aad
pop
add
dec
mov
fwait
push
in
add
adc
cmp
mov
xchg
add
or
sub
scas
sbb
clc
sbb
push
aas
das
jbe
xchg
jae
bound
enter
or
scas
xor
pop
pusha
add
cld
adc
pop
cmc
les
add
insl
lods
rorl
test
hlt
mov
stos
push
and
bound
push
mov
jge
pop
push
test
pop
loop
add
or
lock
push
imul
stos
mov
cld
nop
scas
ja
add
sti
mov
pop
popf
and
cmpsl
add
clc
inc
mov
iret
mov
xchg
leave
cmc
out
cmp
and
mov
dec
ss
aad
fildll
add
stc
dec
mov
pop
push
jb
mov
iret
xchg
fcoml
cmc
stc
mov
add
pop
imul
insb
push
sub
push
add
sub
ja
cmpl
mov
cmp
cwtl
mov
push
sub
sti
pop
add
test
mov
or
add
cltd
cmc
jo
mov
mov
sahf
push
pop
cmp
inc
fisttpll
out
fucomip
cmp
out
fwait
scas
cmp
mov
sbb
outsb
sti
scas
cmpb
mov
adc
jp
add
mov
dec
inc
cmpl
loop
les
jmp
mov
xchg
add
cmp
cwtl
push
adc
sbbb
add
jle
push
frstor
push
adc
pop
leave
shlb
insb
add
cmp
mov
pop
add
dec
pop
jb
cmpsl
add
add
pusha
test
add
hlt
mov
cmp
leave
aas
popl
mov
pop
xchg
mov
testl
adc
bound
add
andb
or
jp
filds
cmp
or
pusha
test
jae
xor
pop
lods
aas
cmp
loope
sbbb
dec
out
int3
sbb
shlb
orb
loope
pop
outsb
aas
mov
test
pop
fdivrl
lcall
or
adc
ret
pop
mov
add
adc
lret
loopne
xchg
test
and
fsubr
jmp
aad
sbbb
sbb
movsl
int
jge
mov
fwait
add
fnstcw
xchg
pop
mov
sub
inc
loop
cld
repz
push
xor
imul
xchg
lods
fmull
cmc
test
add
inc
add
hlt
pop
jl
pop
inc
call
faddl
xchg
repnz
dec
inc
inc
or
jmp
mov
rclb
add
aaa
and
and
add
jmp
adc
les
pop
push
hlt
push
jge
rcrl
hlt
xchg
popl
mov
outsb
adc
pop
add
cmc
mov
jmp
add
jnp
pop
push
in
add
dec
outsl
add
nop
je
aas
js
flds
out
push
dec
lock
shlb
add
sub
call
sbb
loop
packuswb
cmp
pop
mov
add
sub
sti
add
imul
xchg
add
jp
push
in
adc
in
test
loopne
jle
adc
xorl
and
or
dec
xchg
or
lret
cwtl
xchg
jecxz
xchg
inc
lods
add
add
mov
sub
inc
mov
add
mov
test
xorl
fildl
push
and
pop
daa
add
push
les
add
cs
sbb
mov
add
movsb
rcl
mov
rol
jo
add
push
xchg
xlat
xchg
lock
repz
addb
lret
mov
movsl
adc
lods
sarl
lahf
push
aam
xchg
sahf
jle
in
bound
pop
mov
arpl
cmpsl
fimuls
ja
sbb
loopne
stc
adc
jno
push
cmp
test
lea
pop
out
bound
stos
add
cmpsl
jle
fistps
ds
sub
mov
inc
rolb
xchg
es
ljmp
mov
xor
cmp
loop
lcall
testb
or
clc
mov
shll
mov
lds
pop
je
aad
cld
lret
xchg
inc
repnz
adc
cwtl
dec
cmp
test
push
sub
or
add
xor
pop
sarb
cmp
int3
add
cmp
xchg
stos
add
inc
add
nop
stos
mov
add
ret
mov
xchg
or
popa
pop
or
mov
sub
and
jg
and
cli
inc
call
add
adc
test
pop
rcll
jle
icebp
add
or
mov
push
add
inc
rcrl
mov
rcr
add
add
inc
outsb
rcr
roll
mov
cmpsl
fwait
add
cs
and
js
add
jge
pop
scas
mov
cmpsb
xor
add
add
rorb
add
arpl
icebp
xchg
out
pop
add
adc
fs
xchg
add
pop
mov
std
fidivrl
inc
int
sub
mov
rolb
jmp
push
shll
xchg
xor
add
repz
mov
mov
jp
mov
aas
pop
add
push
test
fbld
add
cld
decl
mov
jo
add
inc
cmc
fimuls
inc
mov
fwait
int
subb
and
xor
cmp
cmp
sbb
fwait
add
jae
mov
in
pop
and
stc
adc
add
mov
dec
mov
push
cli
hlt
ja
add
and
imulb
inc
in
add
mov
mov
cmpb
pop
repnz
call
sbb
movsl
add
pop
add
add
lret
pop
and
xor
je
add
cmp
icebp
in
or
adc
pop
mov
sub
adc
push
in
sbb
add
mov
insl
jge
fnsave
push
xor
bound
test
or
fcoml
add
pop
lret
inc
dec
push
in
mov
xchg
add
mov
push
and
das
mov
pop
pop
mov
push
repnz
mov
add
xchg
cmp
outsl
nop
add
lret
out
into
mov
ljmp
pop
mov
pop
rolb
jle
add
sub
addr16
push
and
pusha
loopne
sar
add
rol
mov
dec
and
out
repnz
mov
shl
or
imul
dec
fsubl
xchg
jne
or
mov
loope
loopne
mov
push
xchg
scas
jp
add
jg
jno
loope
movsl
add
push
ret
xchg
es
test
add
iret
sub
push
or
add
data16
ds
shlb
add
mov
js
push
cli
add
les
jae
push
add
add
add
orl
fistpll
pushf
mov
push
pop
mov
push
repz
pop
dec
add
push
push
add
adc
dec
jnp
es
add
repnz
lea
clc
add
mov
loopne
add
sub
fwait
xor
fstpt
pop
jbe
add
pop
nop
test
inc
pop
xchg
mov
jns
sub
sub
mov
mov
daa
cmp
adc
sbb
push
repz
es
push
js
mov
mov
dec
and
add
roll
pop
in
nop
add
test
pop
inc
jg
mov
xchg
jno
add
add
cmp
or
lds
add
inc
add
rorb
inc
ja
add
push
fs
inc
xor
mov
xor
pop
mov
or
in
and
pop
xor
mov
push
sbb
add
pop
lds
mov
sbb
sub
adc
clc
cld
pop
and
lods
jp
mov
aaa
mov
xor
imul
add
push
add
push
int
cld
call
jb
mov
cmp
fdivrl
add
fldl
mov
adc
aam
jl
cwtl
iret
push
std
add
pop
and
jnp
sub
add
je
add
pop
add
and
arpl
js
mov
jg
add
lret
push
adc
inc
pop
mov
jg
pop
lahf
add
outsl
mov
test
cmp
and
add
ljmp
aam
cmc
mov
je
add
and
add
nop
xchg
sti
cmp
imul
int3
pop
and
sub
out
rep
xor
pop
js
mov
ffreep
mov
dec
add
enter
outsl
pusha
add
scas
mov
cmp
fistps
xchg
inc
xor
out
les
mov
pop
fstpt
cs
xor
cmp
add
sub
add
inc
sub
adc
and
out
lock
add
gs
mov
xor
adc
hlt
rolb
xchg
and
popf
xchg
dec
ljmp
fwait
pop
testb
popa
add
cwtl
mov
add
sub
add
or
pop
leave
in
roll
sbb
mov
out
inc
add
and
dec
sub
aaa
push
ss
aad
inc
cli
jl
jge
add
fimuls
cld
xchg
ljmp
lods
add
sarl
adc
addr16
pusha
push
jmp
xchg
movl
icebp
fdivl
xchg
add
mov
lds
cwtl
add
je
out
mov
push
loop
and
aas
addl
mov
xor
lods
in
add
fiaddl
movsb
add
loop
push
jmp
icebp
frstor
jge
dec
ljmp
inc
clc
pusha
mov
add
lds
add
bound
push
jecxz
sub
pop
mov
lods
xchg
testb
sub
mov
pop
xor
pop
pop
ficoml
push
jl
sarb
or
adcl
xchg
add
jae
int
nop
mov
loop
aad
fsubrl
mov
add
repz
xor
push
sub
jno
add
add
lods
dec
pop
mov
add
movsl
cs
jl
add
mov
fsubrs
gs
or
mov
aas
mov
rolb
scas
mov
add
and
insl
lahf
fisubl
cmc
add
mov
mov
inc
divb
xor
lret
ljmp
add
ja
mov
push
enter
bound
daa
jge
dec
xor
xchg
or
fnop
ficomps
add
sti
clc
jns
pop
add
enter
jnp
test
or
loop
push
scas
leave
dec
mov
sub
and
pop
mov
add
mov
cmp
xchg
pop
xor
insl
add
mov
mov
cmp
out
cmp
xchg
setnp
add
lret
ret
popl
mov
xchg
aam
add
lds
pop
push
mov
mov
add
add
sti
mov
add
mov
lds
jo
mov
sbb
cmp
cmp
push
push
adc
inc
xchg
mov
sub
test
enter
test
clc
imul
rol
dec
int3
repz
ret
pusha
cmpsl
xorl
sti
in
rcrb
and
inc
mov
jge
lret
jmp
ss
ljmp
dec
ffreep
xor
mov
aad
jb
dec
or
mov
add
push
ret
add
add
movsl
sar
add
scas
mov
fcmovnb
add
std
adc
jo
test
and
jne
int3
cmp
xor
jns
out
xchg
or
jae
int
jo
notl
fildl
stos
add
add
push
or
xorl
or
dec
sub
add
inc
scas
add
aaa
negl
dec
lea
sbb
add
inc
mov
pusha
imul
pop
insl
add
or
mov
gs
mov
xor
mov
mov
jg
sub
pop
mov
xor
test
push
sbb
fnsave
pop
dec
das
lds
sarl
sbb
into
jae
dec
jle
or
sarb
and
call
sbb
adc
adc
cmp
pop
fidivl
pop
mov
mov
lahf
sahf
es
sbb
sub
mov
add
dec
addl
sahf
dec
and
lret
out
xchg
inc
shrl
test
test
add
lods
mov
movsl
int3
arpl
add
std
jno
add
jmp
push
xchg
jg
fcomp
add
jp
mov
lahf
fistpl
clc
sarl
aad
hlt
push
sti
in
std
dec
addr16
lods
adc
add
adc
dec
cld
or
data16
sahf
and
cmp
push
mov
add
subl
adc
sbb
mov
sub
lds
mov
sbb
cmp
mov
insb
addb
loope
lds
add
enter
jo
add
xchg
in
cltd
iret
lahf
testl
clc
cmpb
es
lret
pop
idivb
jne
filds
jo
es
add
sub
xchg
dec
inc
add
arpl
adc
cs
aaa
sbb
add
xchg
cwtl
inc
ljmp
idiv
add
and
pop
push
add
sub
mov
add
mov
jnp
je
pop
push
popa
mov
inc
add
popf
js
push
sbb
sbb
loopne
flds
sarl
fcoms
add
arpl
add
cltd
dec
ret
into
mov
add
pop
dec
pop
inc
pop
adc
jge
pushf
push
jnp
dec
in
js
add
xor
jo
push
orb
xchg
xor
aas
cld
jne
sub
pop
gs
adc
and
hlt
pusha
or
cmp
sbb
cmp
rolb
jmp
pop
mov
add
arpl
in
cmp
mov
lcall
test
ficoms
daa
ret
ds
mov
je
add
push
adc
jecxz
xor
fiadds
dec
sub
or
movsb
and
fdiv
mov
mov
mov
inc
add
or
lret
add
xchg
icebp
jecxz
lea
cld
add
cld
dec
mov
add
adc
push
add
inc
add
add
or
lods
test
enter
rcrl
pop
call
pop
lods
aad
hlt
jbe
xor
cltd
fsubrs
or
test
out
in
jg
jb
bound
xor
add
sti
fcoms
adc
inc
add
sbb
add
pop
inc
in
jge
add
pushf
add
in
es
dec
sub
fnstsw
add
ljmp
leave
scas
mov
add
dec
outsb
insl
fmuls
jmp
jb
jl
fwait
push
jns
sbb
into
and
ja
add
stc
sbb
adc
and
sub
movsb
xchg
push
insl
data16
add
ja
mov
test
stos
je
mov
push
sub
js
int
in
mov
add
cmc
shrb
add
and
add
andl
addb
push
mov
nop
je
mov
jle
jne
fadds
outsl
xor
and
jbe
ret
stc
cltd
or
mov
jp
imul
xchg
mov
iret
xchg
jl
imul
push
mov
out
pop
lods
push
add
mov
sbb
pop
mov
cmpsl
push
add
scas
push
adc
rcrb
pop
fiaddl
mov
xchg
pop
push
push
add
imul
adc
jb
ds
sbb
lret
stc
jbe
cmp
add
pop
and
add
mov
add
inc
out
lret
ret
add
sbb
add
sub
inc
add
add
aaa
repnz
add
cmp
rorb
push
jnp
add
or
inc
bound
int
aam
insb
add
sbb
test
xorb
inc
roll
aas
push
add
pop
mov
or
pop
test
adc
test
das
add
xchg
mov
pop
outsl
icebp
sbb
lods
mov
push
add
mov
insb
insl
rcll
test
dec
add
or
movsb
or
xchg
xchg
incl
add
sarb
add
pusha
mov
in
sarb
push
sti
jl
inc
push
repnz
pop
add
dec
call
rcrl
sub
scas
add
lods
mov
fsubl
add
sub
inc
movsb
jb
aaa
aad
sbb
sub
pop
xchg
jns
call
addr16
push
bound
nop
inc
add
push
mulb
xchg
jg
cwtl
pushf
cmovge
je
sbb
ss
mov
pcmpeqd
inc
and
add
mov
xor
inc
sahf
fstl
mov
scas
lods
call
jl
dec
inc
hlt
add
ror
jmp
nop
stos
add
shlb
fwait
add
cltd
add
nop
addl
push
leave
mov
mov
add
mov
repz
idiv
daa
add
push
out
mov
mov
sahf
pop
and
xor
fdiv
sub
jnp
dec
xchg
iret
jo
jne
test
leave
pusha
popa
push
xchg
mov
jmp
jbe
movsb
outsb
repz
xor
xorl
cli
lods
push
repnz
movsl
or
mov
addr16
scas
inc
push
sahf
add
fbstp
pop
xor
add
leave
ret
xchg
je
in
icebp
add
addl
fst
add
sub
out
sbb
leave
iret
jle
inc
outsb
roll
out
test
addb
mov
pop
mov
icebp
add
testb
xchg
cmp
jp
adc
dec
add
popf
subb
outsl
jle
in
mov
sbb
mov
aas
and
mov
add
imul
hlt
icebp
and
fnstenv
gs
clc
sahf
adc
xchg
mov
stos
mov
push
cltd
je
add
xchg
sub
setg
cld
lret
cld
cmp
out
xchg
rorb
aas
jmp
push
loopne
icebp
cmpl
or
sarb
test
jg
pop
sbb
mov
sub
into
mov
add
jno
stos
add
in
addr16
and
xor
add
pop
or
mov
sub
inc
push
push
cld
or
ficompl
dec
fisttpl
xor
jae
rcll
push
je
cmp
mov
ja
cli
filds
xor
adc
xor
int
mov
daa
add
sbb
sub
xchg
inc
lods
add
movsl
inc
or
dec
or
je
clc
lods
add
mov
stos
mov
add
mov
out
cmp
add
movsl
imul
lret
inc
out
adcb
add
iret
mov
inc
es
mov
insb
cmpsl
test
mov
je
cmp
sub
outsb
mov
add
out
test
outsl
mov
jp
daa
ss
dec
add
inc
pop
popa
sbb
xchg
jecxz
add
xor
loope
cmp
aad
add
push
mov
mov
mov
jae
je
mov
ret
int
pop
mov
aas
cmc
clc
movb
lret
leave
rcr
adc
push
mov
hlt
movsl
add
outsb
xchg
repnz
sbb
leave
loope
popl
push
fistpll
movb
pop
sub
loop
popf
push
push
mov
lock
dec
das
testb
call
mov
or
rcr
addb
loope
out
add
and
xor
add
inc
nop
dec
mov
sub
repnz
pop
add
cwtl
jae
sbb
sub
cmp
leave
clc
add
mov
outsb
movsb
add
push
arpl
fnstsw
ficompl
enter
xlat
add
mov
addl
adc
and
mov
cmp
lds
mov
mov
shld
push
ss
pushf
es
sub
test
lock
or
sub
cltd
cmpsb
jge
add
pop
jae
sub
icebp
add
push
scas
lods
addb
and
out
minps
mov
shl
ljmp
fisttpl
sbb
dec
cmpsb
lds
mov
fwait
ss
sarb
loopne
stos
aad
je
inc
and
ss
nop
scas
mov
xor
dec
iret
mov
gs
clc
push
hlt
add
jmp
mov
inc
cmp
int
movsl
xor
cmp
xor
add
je
add
pop
jle
add
test
insb
push
pop
aas
mov
mov
ret
add
or
or
mov
aas
movl
out
sub
add
sbb
add
nopl
nop
rolb
jecxz
and
mov
jbe
sbb
pushl
pop
or
mov
pushf
mov
jmp
pop
out
scas
mov
mov
orl
sbbb
dec
add
fidivs
add
mov
repz
push
jns
inc
aam
test
mov
pop
mov
test
xor
repnz
pop
mov
add
sti
xlat
sbb
mov
adc
xorb
es
cmp
iret
add
push
add
and
addr16
pop
dec
add
movsl
xchg
inc
pop
jp
push
insl
out
push
dec
aaa
pop
sarb
mov
addr16
xchg
and
jbe
out
jnp
add
cmp
add
gs
jo
add
jns
hlt
lret
out
pop
add
adc
popa
mov
repnz
cmpl
enter
add
hlt
lods
cs
pop
add
loop
jg
pop
jne
fisubs
sub
sbb
outsl
xchg
mov
rorb
in
jo
add
lock
add
xor
pop
inc
jno
add
xchg
mov
in
sarb
stc
les
pop
shlb
and
cmp
std
cmc
stc
mov
add
xchg
dec
pop
mov
xchg
fsubp
or
jmp
and
sbb
add
rcr
ja
div
add
pop
nop
fucom
movsb
sub
loop
enter
adc
je
sub
pop
out
cmp
shll
cmp
mov
lcall
xchg
jae
jo
xchg
add
fcmovnb
out
in
cmpsb
pushf
stos
add
movsl
and
sti
addr16
push
call
lret
mov
lret
rcrl
pop
push
sub
pop
ret
xchg
jne
mov
and
mov
dec
pop
push
sbb
cwtl
lcall
lods
add
cmp
xchg
mov
out
add
mov
insl
enter
xor
xor
movsb
ud2
cmpsb
push
addb
rcrl
lods
add
and
movsb
push
fstpt
jmp
xchg
sbb
gs
in
dec
cmpsl
cwtl
adc
add
stos
leave
add
jbe
dec
shrl
add
push
xlat
out
add
lods
mov
add
lea
js
lret
stos
fadds
movsb
ret
in
add
pop
pop
mov
add
jne
lea
xchg
mov
sub
cs
rclb
mov
popa
pop
jmp
ret
movsl
cmp
ss
push
push
and
xchg
outsb
stc
jl
add
sub
add
test
dec
adc
cwtl
pushf
add
inc
dec
or
dec
pop
jg
test
rclb
xchg
add
sbb
xor
decb
dec
loopne
mov
pop
pop
add
push
aad
sahf
and
add
es
ja
add
sarl
xorb
sbb
lret
jge
pop
xchg
sbb
mov
add
popf
ss
or
or
sti
lcall
int3
mov
mov
push
clc
jb
cmpsl
adc
sbbb
add
sbb
jp,pn
aas
sbbl
clc
inc
fsubrl
jne
jno
add
sbb
imul
push
sub
lock
sbb
sub
in
pop
add
sub
sbb
mov
mov
pop
cmp
jb
dec
shr
fwait
push
cs
add
xchg
sahf
cmp
push
add
sbbl
mov
push
ds
aas
in
push
jmp
incl
mov
out
lahf
add
test
lret
int
add
mov
xor
mov
mov
xchg
and
sbb
iret
pop
mov
call
pop
cmp
cmpl
pusha
lods
cmp
pop
popf
mov
insl
mov
push
leave
fdiv
add
shll
mov
or
shrl
dec
pushf
push
outsl
xchg
add
push
add
push
xor
and
inc
adc
sbb
notl
fstl
mov
in
fidivrs
roll
sbb
gs
mov
xchg
add
aad
cmp
aas
in
dec
add
movsl
lods
int
int3
jl
sub
iret
add
xchg
xlat
adcb
dec
jmp
jbe
ja
fiadds
je
ffree
sbb
add
loop
std
jecxz
sub
add
pushf
inc
adc
mov
test
movsb
push
in
jb
jl
add
shlb
sub
ret
subb
into
jb
out
xorl
xor
push
cmc
mov
in
jno
mov
push
in
jp
pop
inc
add
pop
lret
push
flds
outsb
hlt
cmp
xchg
shlb
mov
pushf
dec
sti
inc
jmp
fs
cmp
pop
jmp
mov
xchg
lds
loopne
filds
add
out
mov
cmp
jg
addr16
xchg
sarb
shl
lret
test
dec
sarb
inc
mov
jns
adc
enter
or
pop
mov
stos
push
outsb
ja
test
xchg
aaa
cld
push
fcomi
rolb
icebp
jle
cmpsl
jne
or
test
sub
scas
add
insb
cmp
add
fst
loop
add
add
ds
or
push
lret
mov
dec
in
pop
mov
movsl
inc
aaa
mov
dec
mov
jge
fs
pop
add
push
or
in
add
mov
and
mov
and
or
test
sahf
inc
add
jns
cli
nop
test
push
pslld
insb
sbb
xchg
cmp
iret
xchg
add
mov
pop
adc
and
scas
mov
outsb
xor
dec
jo
add
mov
gs
mov
xchg
lds
jge
mov
test
pop
mov
add
in
xchg
xlat
sub
mov
jl
mov
sbb
mov
push
xchg
and
scas
add
sub
mov
mov
cmc
lcall
dec
adc
out
test
push
data16
jmp
mov
lds
dec
in
push
stc
fdivl
jp
loope
ret
dec
cmp
enter
jmp
je
jne
sar
dec
adc
mov
cmpsb
cmc
sti
add
aaa
xlat
arpl
test
or
movsb
push
fstl
pop
add
js
sbb
or
data16
scas
xchg
push
fimull
std
add
aam
shll
loopne
pop
out
xor
push
pop
pop
xchg
dec
mov
dec
inc
add
cmpsl
push
jnp
mov
pop
sub
leave
mov
add
xor
xchg
loopne
xor
adc
inc
xor
dec
add
jmp
sbb
insb
inc
movb
add
xchg
adc
and
popa
push
test
sub
pop
xchg
or
clc
add
sub
call
add
leave
hlt
adc
in
mov
inc
add
or
negl
push
mov
mov
clc
lret
in
push
punpcklbw
dec
iret
std
dec
enter
add
cli
out
add
cld
ljmp
adcb
mov
aas
fdivl
pop
nop
outsb
stos
pop
leave
sub
loope
subl
in
addb
inc
loopne
rdmsr
fadd
mov
inc
add
add
mov
popf
pop
jbe
inc
xchg
sti
xchg
test
enter
imul
cltd
loopne
mov
mov
jg
xor
into
xorb
lret
jle
dec
add
adc
add
jp
xchg
lea
mov
arpl
fistpl
cmp
jns
add
and
xchg
inc
das
add
sbb
mov
lcall
int3
sub
lea
shlb
xchg
jne
cmpl
imul
test
push
scas
xchg
lock
sbb
push
clc
add
shl
dec
ds
sarb
fwait
jne
lcall
xorb
pop
and
js
push
adcb
je
and
inc
add
cmp
dec
push
shl
xchg
pop
xor
inc
fsub
mov
sbb
adc
adc
pop
mov
add
xchg
and
je
fwait
pop
sti
jbe
jo
movsb
xchg
jle
pop
es
adc
sbb
jp
push
jo
mov
add
adc
push
cmp
add
hlt
xchg
mov
dec
add
loope
loopne
out
add
cmpsb
pusha
jecxz
dec
add
and
dec
shll
sub
repz
lds
add
jae
mov
lahf
adc
push
sbb
scas
cmp
aas
add
mov
mov
leave
and
mov
mov
add
jp
sahf
nop
insl
cmp
mov
or
das
in
add
mov
inc
dec
in
add
pop
sbb
inc
stos
xor
sahf
cli
jbe
adc
pop
add
adc
jp
add
mov
out
mov
roll
pop
dec
leave
popf
mov
cli
jnp
dec
rcl
add
int
scas
orb
out
jge
inc
ljmp
or
stos
insb
xchg
or
lock
add
sahf
mov
jp
add
arpl
repz
add
ljmp
nop
pop
fdivp
aam
jl
add
stos
sbb
dec
in
sub
jg
xor
mov
stos
adc
push
and
sub
in
add
push
ja
add
in
pop
lahf
push
mov
outsl
cli
out
mov
push
adc
lahf
jp
repnz
push
ret
mov
das
fbstp
inc
lods
mov
mov
int3
ljmp
lcall
pop
and
add
pushf
jmp
add
fcoml
jecxz
push
add
and
mov
add
inc
push
bound
cmp
xchg
cs
ss
mov
push
pop
or
xor
xor
push
adc
out
add
xchg
imul
cmp
inc
dec
dec
mov
cmpsl
je
push
add
or
mov
lods
jbe
fnstcw
test
cli
inc
jno
in
mov
add
jle
mov
mov
in
js
mov
mov
flds
mov
jle
add
std
aad
sbb
fcoms
adc
cmp
filds
bound
add
inc
mov
pop
adc
xchg
add
adc
mov
xor
rol
cld
push
xor
xchg
add
in
adc
cmp
lret
mov
mov
add
or
popa
jns
aas
repnz
testb
mov
pusha
xchg
add
mov
gs
mov
push
add
or
mov
jg
add
es
test
leave
dec
movsl
pand
mov
sub
vmovddup
inc
icebp
xchg
into
dec
jns
xor
pop
add
pop
push
shufpd
pop
xor
shll
pop
std
push
out
xchg
add
dec
jl
add
pop
adc
sarb
insb
pop
lcall
gs
iret
in
jne
add
aad
mov
cltd
push
add
xchg
jo
adc
imul
fld
ret
xchg
cmpsb
fadds
lahf
rcrb
incb
fldenv
ret
ss
push
sti
mov
jne
add
loopne
sub
jb
jecxz
clc
test
jecxz
aam
dec
lods
mov
add
cmpxchg
fisttps
mov
in
imul
fsubp
cmpsb
add
cmc
sbb
daa
adc
add
add
inc
pushf
xchg
adc
adc
lcall
fdivrs
xorb
xchg
clc
icebp
adc
stos
push
bound
scas
add
fs
cmp
or
add
inc
out
in
mov
xchg
add
cmc
xchg
repnz
add
scas
or
popf
add
fnstenv
mov
add
jne
fistpll
jg
leave
xor
lods
sbb
jge
sub
jns
lds
cs
push
add
fisubrl
push
dec
jmp
repz
add
lods
add
cld
repnz
push
lea
push
and
add
inc
ljmp
stos
xchg
xor
push
push
add
sbb
cmp
loope
pop
mov
mov
lods
jne
cmp
jnp
pop
lock
add
outsb
cs
ljmp
bound
add
jmp
adc
jecxz
sbb
enter
add
ja
cmp
in
pop
pusha
in
shl
repnz
mov
pop
add
cltd
pop
or
dec
in
mov
cwtl
jmp
cmp
add
lret
pop
push
jge
nop
mov
add
mov
mov
sub
mov
movsl
lock
movsb
ret
jo
pop
mov
xor
push
dec
add
dec
mov
ja
cs
ljmp
add
mov
xchg
pop
inc
std
add
push
aaa
jecxz
shrl
push
lods
add
push
jmp
repz
adc
lahf
add
xor
add
out
and
cmpsb
je
mov
mov
in
add
jge
addr16
sub
mov
mov
cmp
mov
add
loope
mov
jbe
inc
clc
call
mov
sbbl
rcrl
int3
imul
xchg
add
or
cmovl
cmpsl
add
cmp
pusha
adc
rorb
lock
dec
mov
or
sahf
ja,pn
jnp
mov
es
cmp
hlt
orb
movsl
ret
out
outsb
add
addl
pop
sar
mov
cs
sub
inc
stos
fdivr
push
js
cwtl
jo
bnd
pop
lret
aas
jnp
imul
push
int
cmc
mov
xchg
insl
add
jb
aas
mov
in
filds
loop
shll
test
xor
mov
add
clc
sub
mov
push
pop
inc
or
sbbl
mov
aas
sub
sbb
mov
rorb
add
push
outsl
bound
sbb
imul
cmc
std
leave
ja
call
mov
aaa
inc
xchg
mov
icebp
das
bound
mov
inc
mov
sbbb
stos
rolb
cli
jne
jb
lock
xchg
cmp
cltd
out
pop
stc
addl
mov
add
jnp
mov
mov
inc
jno
scas
mov
add
mov
add
add
add
add
jbe
ror
mov
jle
call
mov
stc
and
push
xor
xchg
add
jae
test
gs
aam
js
lret
ret
ret
loopne
dec
xor
das
adc
push
test
jbe
je
xor
dec
or
pop
clc
jge
pop
adc
push
scas
lods
and
dec
sbb
add
xor
ds
adc
push
movsb
jno
adc
sarb
xor
fwait
adc
loop
mov
shlb
sub
movsl
dec
push
jno
js
adc
stos
push
mov
pop
mov
inc
test
fdivr
sub
int3
inc
sbb
stos
gs
cmp
dec
sub
enter
pop
mov
lea
outsl
sti
add
adc
sub
pop
or
pop
dec
roll
fst
repnz
fs
inc
pusha
int3
cmp
xchg
addb
loope
mov
add
pop
adc
clc
lds
rcll
loop
mov
pop
or
sbb
loopne
add
mov
dec
and
daa
inc
inc
sub
mov
roll
xchg
and
std
inc
pop
cltd
int3
jb
add
xchg
ja
js
insb
add
stc
in
fwait
aam
fisubs
icebp
lea
sbb
pop
cwtl
adc
int
mov
bound
lock
xlat
lahf
add
lds
rolb
clc
pop
fistpl
dec
xor
addr16
jo
xor
add
ret
loope
xchg
sub
dec
rorl
inc
mov
cmp
loope
jno
xchg
add
int3
ljmp
mov
xor
adc
loopne
xchg
pop
pop
inc
js
push
jge
test
sbb
hlt
inc
add
xchg
imul
add
mov
add
cpuid
cmp
sbb
inc
or
add
pop
stc
jne
cli
jmp
mov
mov
js
add
pusha
mov
push
xchg
clc
and
dec
pushf
addr16
ljmp
mov
enter
cld
lret
faddl
ljmp
mov
add
popf
xchg
xchg
stc
hlt
xchg
aaa
add
sub
add
mov
dec
add
test
aam
aaa
mov
into
jmp
xor
xchg
dec
xor
or
pop
lret
into
dec
add
sub
jne
add
and
sbb
pop
sub
dec
add
pushf
add
cmpsb
xchg
call
test
push
icebp
in
pop
pop
inc
jns
sub
mov
mov
cld
mov
cmpsl
imul
push
das
cmc
jp
xchg
ficompl
arpl
mov
add
loop
jb
out
mov
pusha
lods
inc
and
js
aam
push
and
sysexit
call
pop
out
jmp
or
push
fcomps
mov
fldl
sahf
out
data16
mov
rclb
add
jl
iret
mov
out
jp
ret
inc
push
add
pandn
cmpsb
cs
lods
mov
push
jl
rcr
loop
sub
decb
xchg
sbb
add
cmp
push
push
mov
lea
fs
sbb
int
cmp
orb
sub
jne
xorps
out
xchg
sub
mov
push
or
add
adc
fdivrp
add
mov
jnp
add
fsubrs
lods
lds
add
addr16
jmp
lcall
add
fimuls
add
sarb
lods
into
push
adc
mov
gs
arpl
in
push
hlt
add
ftst
insb
subb
mov
add
jle
ds
push
test
popf
imul
add
and
jne
add
xor
add
dec
add
jle
sub
mov
xchg
sub
rcl
add
sub
ss
mov
jl
fstpl
push
in
push
and
add
or
mov
adc
out
sub
insb
inc
xor
sub
call
jbe
addr16
fildl
call
mov
pop
add
mov
scas
push
inc
inc
sub
jbe
insl
adc
pop
fisttpll
fidivl
test
mov
aaa
add
outsb
in
test
mov
push
js
dec
pop
jle
fdivrs
sbb
test
xor
add
xchg
pop
loopne
hlt
sbb
pop
sub
int
cmp
clc
sub
out
push
pop
fcomip
sub
jle
clc
popf
rolb
cmp
int3
rolb
inc
mov
jae
mov
hlt
ds
inc
data16
movd
mov
les
imul
xor
sbb
into
fbld
inc
add
lods
push
push
jnp
jae
add
mov
dec
daa
pushf
call
test
or
addr16
rcll
xchg
mov
fdiv
mov
mov
aam
inc
iret
addr16
daa
or
fmuls
jmp
sub
sbb
add
cmp
outsb
mov
xor
lcall
shrb
jp
cmp
out
jmp
out
sub
pop
rol
les
imul
loope
lea
add
dec
pop
pop
cmc
or
push
xor
test
aad
stc
add
out
push
pop
jns
xchg
cltd
push
inc
aam
add
dec
xchg
notl
add
push
cmp
and
mov
mov
pop
add
or
and
clc
fildl
xchg
arpl
sub
enter
int
or
test
loop
adc
cli
in
or
repnz
adc
jo
mov
lds
push
add
test
daa
sbb
jne
mov
mov
les
ds
addb
testl
and
xorl
and
mov
push
rcl
rcl
jo
jo
add
xorb
mov
aad
add
inc
out
xor
xchg
add
repz
mov
or
insb
dec
sub
add
shll
mov
add
fcmovne
into
mov
cmpsl
add
daa
pop
decb
addb
dec
in
jp
inc
inc
lock
insl
adc
pop
adcb
les
push
cltd
ljmp
repz
mov
dec
jo
lods
cmc
add
das
adc
cmpsl
push
out
pop
add
repnz
outsl
adc
mov
add
mov
negb
repnz
mov
ffree
test
jl
sar
les
pop
adc
sarb
mov
inc
icebp
cwtl
fistpll
add
js
in
or
inc
add
orl
nop
in
add
insl
cmpsb
pop
jge
mov
add
paddd
mov
mov
psubd
es
pusha
loopne
adc
sub
data16
fld
jecxz
arpl
and
dec
lock
lods
sti
mov
jle
add
fdivs
pop
dec
into
mov
dec
les
mov
shl
mov
dec
add
pop
pop
jmp
mov
loopne
mov
mov
cmpl
movb
adc
xor
rolb
push
or
test
dec
aad
cmp
ljmp
lock
out
cld
add
mov
idivb
ds
pop
inc
bsr
in
mov
xchg
add
xor
in
sub
cmp
add
add
jo
inc
xor
adc
push
mov
mov
inc
gs
xchg
lods
push
xchg
aaa
lret
adc
xlat
push
test
pusha
das
int3
add
xor
jae
call
adc
mov
imul
mov
aad
add
popa
pushl
outsl
and
fadds
add
rcl
pop
jmp
inc
cs
mov
fwait
jne
mov
mov
mov
test
ja
add
ret
dec
xchg
add
sub
push
ss
add
mov
add
inc
inc
shl
scas
mov
ja
add
lret
nop
xchg
add
outsl
lahf
add
into
das
div
sbb
scas
pmaxub
add
sub
add
mov
les
mov
inc
ret
and
lahf
andb
inc
sub
push
fptan
js
pop
sbb
add
movsb
mov
dec
lds
lock
ss
ret
xor
shlb
in
mov
inc
xchg
dec
mov
dec
dec
lock
jne
xchg
sar
add
sbb
mov
cmp
addr16
push
jge
add
and
adcl
add
cmp
orb
xchg
add
add
pop
lock
add
les
add
jge
cmp
shll
repz
mov
push
dec
jp
mov
stc
add
in
insb
push
inc
lret
aam
mov
mov
iret
dec
xchg
xchg
add
push
cs
out
add
add
lea
sub
cld
imul
push
cmp
sbb
jno
mov
add
int
lea
or
insb
nop
pushf
lret
idivl
or
lock
mov
add
loopne
pop
lret
add
sub
push
mov
add
lds
in
jecxz
cmc
les
addb
pop
insb
mov
fsubrs
lock
addl
xchg
aaa
add
ret
sub
push
dec
add
sbb
nop
rolb
cmp
pop
lock
add
jmp
out
inc
stc
inc
sbb
inc
arpl
xor
dec
sub
xlat
inc
xchg
add
adc
add
lods
pop
lds
inc
push
call
mov
std
rorb
xor
popa
arpl
or
ljmp
lods
or
mov
push
and
add
or
das
in
test
lods
cwtl
scas
add
sbb
lock
jge
push
sbb
sub
jnp
add
adc
lock
popf
mov
jp
mov
clc
ljmp
loopne
enter
hlt
out
inc
push
shl
shrb
ljmp
out
cmc
adc
sub
xor
popf
ja
adc
xchg
cmp
add
xchg
pop
mov
add
sub
mov
add
or
jne
sahf
aas
nop
mov
lret
movsb
testl
push
rolb
jp
loop
arpl
lret
push
jne
add
fwait
and
sub
push
fcmovbe
out
add
lods
push
jl
xchg
add
xchg
fs
push
pop
mov
je
xlat
mov
add
push
pop
mov
aam
mov
je
pushf
mov
jb
xchg
jmp
ror
jae
sbb
mov
add
rclb
in
int3
xchg
mov
xlat
insb
lods
pop
xor
adc
pop
sub
cmpsb
sbb
pop
hlt
or
pop
mov
xor
mov
jbe
mov
imul
out
and
cli
nop
add
jbe
fdivrl
scas
into
add
in
sbb
cmc
sbb
lret
or
sbb
pop
mov
lahf
dec
mov
add
test
mov
sbb
into
loopne
xlat
ja
add
insb
sti
jo
clc
mov
dec
stc
push
cmp
add
ret
fldl
add
lahf
and
inc
stos
call
sub
sarb
cs
xor
ja
out
mov
and
std
test
sub
push
inc
loope
ja
push
rolb
or
and
cwtl
ljmp
scas
xor
and
out
mov
cmp
add
mov
das
ss
pop
in
icebp
ror
ret
repz
and
movhps
scas
add
fbld
dec
ja
add
jne
jl
push
adc
cmc
movsl
add
mov
push
jno
mov
frstor
aam
scas
push
orl
xor
jb
add
add
jno
fisubs
and
cld
mov
daa
adc
sbb
call
sub
push
cmp
cmpl
orb
jae
mov
adc
inc
push
jb
incb
mov
sub
cld
inc
ja
add
mov
fmul
cmp
sahf
ret
inc
add
jp
cmp
stc
sub
sti
aad
std
ret
repnz
xchg
push
lret
add
and
add
xor
jl
ss
adc
in
add
out
inc
cmp
stos
sahf
pusha
xor
add
and
mov
add
and
add
dec
jmp
adc
dec
ltr
repz
std
jecxz
les
ret
pushf
dec
repnz
stc
xchg
pop
cwtl
sbb
mov
xchg
jnp
insl
and
add
add
push
sarb
jle
enter
jge
add
insl
xor
xchg
out
xor
out
mov
pop
inc
pop
add
test
repnz
adc
mov
pop
push
in
insl
aas
add
nop
leave
adc
incl
sbb
shl
clc
jbe
pop
cmp
add
mov
loopne
nop
sub
aas
aaa
add
xchg
adc
xor
pusha
and
or
dec
dec
cmp
jo
sbb
outsb
add
mov
mov
out
cs
jo
add
mov
fistpl
cld
dec
call
jle
mov
adc
mov
xchg
pop
mov
adc
mov
decb
add
imul
repz
popa
add
or
dec
xchg
in
add
mov
fiadds
mov
in
cmp
cmpsl
ljmp
or
add
sbb
jae
mov
or
jle
xchg
loopne
sbb
mov
inc
rorb
das
mov
scas
xchg
sbb
pop
fxrstor
std
incb
out
mov
jle
mov
scas
lea
push
jg
arpl
adc
push
xor
add
inc
mov
lahf
xor
cmp
es
pushf
add
out
dec
mov
add
data16
mov
and
or
jns
sbb
pop
pop
fcompl
jb
cmp
jbe
mov
popa
jge
outsl
sbb
sbb
shll
pop
std
cs
add
test
pavgw
jae
add
pop
mov
movb
pop
fnstcw
incl
cltd
addb
mov
mov
sbbl
jo
rcrl
add
add
and
add
mov
jae
add
out
cmc
daa
cmp
xchg
add
push
jae
arpl
aad
mov
lret
pushf
popa
flds
pextrw
gs
stc
pop
add
addb
lret
xor
inc
lock
sbb
lock
or
testl
test
push
jp
sub
sbb
adc
cld
mov
mov
push
fistps
mov
push
lods
jb
mov
mov
es
pop
dec
and
dec
mov
xor
add
xchg
rcr
sub
aam
push
or
sbb
jecxz
out
lds
rcll
in
arpl
add
jp
add
js
test
test
cmpsl
jnp
lods
xchg
mov
dec
jge
mov
xchg
add
gs
pusha
mov
fdivrl
add
mov
jmp
inc
add
add
pop
fsubl
mov
cmp
push
ja
hlt
aaa
jo
pop
push
shlb
iret
arpl
inc
lsl
add
mov
jno
add
and
cmpsb
and
cld
sub
cmp
mov
add
mov
push
cmp
mov
xor
hlt
add
cs
or
daa
outsb
sbb
push
sarl
add
dec
add
fucomip
or
mov
mov
add
pop
sbb
pop
jmp
add
xchg
ljmp
or
jo
ja
mov
sti
mov
add
push
pop
std
add
scas
addb
cs
pusha
ljmp
into
jecxz
dec
add
stos
negb
jge
adc
dec
in
test
leave
xlat
rorb
add
aas
push
push
mov
dec
xor
mov
pop
xchg
add
or
sub
jg
cmpsl
popf
orl
cmpb
add
cmp
sub
mov
cltd
bsr
dec
loopne
adc
out
or
cmp
js
dec
gs
in
scas
add
ret
stos
dec
scas
bound
push
loopne
sbbb
sbb
push
pop
sub
xchg
add
lds
push
and
jae
add
pop
insl
fcomps
jmp
sti
daa
roll
mov
add
fildl
mov
jecxz
add
pop
or
gs
outsl
test
cld
rolb
in
push
push
dec
incb
xchg
mov
add
add
mov
add
lods
lcall
add
ja
xor
fcom
push
loopne
mov
add
lds
dec
or
push
fimuls
adcb
lret
sbb
and
shr
addl
dec
cmp
lahf
sub
add
popa
das
and
test
enter
icebp
add
push
inc
push
popf
and
add
mov
cwtl
hlt
out
add
jb
sbb
bound
cmp
xchg
int
jnp
idivl
add
loop
in
insb
adc
popa
js
mov
addb
or
mov
pop
out
arpl
xchg
leave
and
in
or
and
and
jl
pusha
mov
rcrb
and
out
add
and
inc
mov
push
add
das
pop
inc
loop
fs
add
jecxz
sbb
mov
or
aam
out
jb
add
mov
adc
push
inc
mov
xchg
movsl
mov
push
mov
jo
dec
add
and
cmp
jge
add
shll
sbb
inc
pop
jecxz
add
mov
lds
js
sbbb
leave
cmpsl
notl
in
sbb
cld
incl
dec
mov
pop
adc
xchg
movb
xchg
inc
mov
dec
shlb
jno
jb
int
scas
mov
jg
jmp
ret
sbb
icebp
add
jmp
pusha
out
and
push
mov
mov
cmc
ja
add
stc
test
mov
mov
loopne
dec
orl
lcall
stos
push
inc
fwait
xlat
jne
cmp
movsl
cmp
add
repnz
add
sar
cmp
add
xor
cmpsb
sbb
sbb
add
addr16
add
sti
cld
xlat
cli
mov
push
jns
ret
imul
sub
push
mov
jecxz
repz
xchg
xchg
mov
in
add
and
sub
add
pop
jns
push
cmp
hlt
add
addb
cmpsl
cmp
xor
pop
mov
je
and
add
test
adc
mov
icebp
loopne
pop
add
pop
clc
fs
in
add
inc
sbb
shl
push
dec
add
mov
adc
bound
add
out
jb
xor
in
and
cli
js
adc
int3
adcb
jne
sbb
add
mov
aad
andl
push
insb
and
add
push
stos
int
iret
jecxz
add
xlat
movsl
loopne
lods
in
xchg
out
add
add
repnz
add
xor
jecxz
add
dec
mov
add
sbb
sti
jne
fdiv
lcall
leave
cmpb
and
pop
insl
mov
cmp
mov
int3
and
add
inc
push
jle
sbb
xor
xchg
icebp
out
lds
pop
push
sub
in
sbb
aam
sub
test
adc
xchg
leave
inc
std
test
push
cltd
insb
ret
add
outsl
into
test
inc
adc
not
mov
add
inc
in
cmpsb
inc
lcall
rcrl
popf
fstpt
jnp,pn
setae
lret
enter
shlb
test
push
insb
and
cmc
scas
cld
hlt
movsl
sub
popf
daa
jae
pop
mov
or
jbe
imul
pop
scas
adc
out
ret
mov
xchg
add
dec
inc
lret
sbb
mov
fsubr
xchg
stos
add
rorl
add
xor
xor
les
divb
mov
loopne
xchg
add
test
sbb
jne
xlat
inc
aaa
outsb
add
das
jl
xchg
sub
call
add
push
ds
mov
int
cmp
and
pop
jno
ret
push
dec
stc
mov
jmp
rorb
or
out
jb
imul
mov
xor
push
inc
push
ret
add
fsub
add
add
cmp
dec
dec
fldcw
jl
ja
add
outsl
ficoms
adc
rcrl
scas
shrb
pop
dec
cltd
mov
and
add
imul
mov
mov
fsubs
push
into
pop
cltd
jb
inc
add
hlt
xor
leave
sbb
pop
icebp
adc
testb
shl
fcmovne
dec
lret
sbb
addl
int
xlat
repz
pusha
jl
push
push
add
clc
inc
popf
pushf
decl
mov
sti
jecxz
pop
movsb
pop
sub
sbb
add
in
rolb
sarl
cmp
roll
xchg
fldl
repnz
push
xor
push
jae
mov
icebp
pop
mov
std
lock
inc
test
xchg
sbb
pop
pop
loopne
add
add
faddl
add
jo
das
ja
pusha
shl
loopne
ljmp
add
xlat
loope
shll
testb
sbb
and
mov
cli
pusha
stos
xchg
mov
pusha
add
xchg
lea
add
lret
jmp
in
add
sub
aaa
iret
pop
add
xchg
add
das
fdiv
faddl
xor
mov
push
add
add
nop
jo
push
and
or
xor
xor
stos
add
jmp
sarl
add
shl
cmp
mov
arpl
add
jne
mov
pop
xorl
pop
fisubrs
jae
lock
xor
in
ds
adcb
cmp
add
fldl2e
ret
add
scas
fdiv
add
test
add
inc
add
andb
std
xchg
in
add
add
cmp
ljmp
out
test
or
push
les
dec
cli
pop
add
mov
dec
jno
add
les
inc
gs
int3
lock
sbb
xor
dec
js
les
mov
call
sbb
lahf
add
xor
movb
lret
das
pop
sub
jno
dec
out
and
add
sbb
movsl
xchg
jge
imul
insb
cmp
shlb
inc
das
clc
cmp
sarb
call
cli
dec
xchg
das
add
xchg
pop
add
test
cwtl
lret
push
sbb
add
mov
sbb
mov
scas
ficompl
cmp
adc
test
xchg
ljmp
jns
stos
sbb
jnp
sbb
pop
push
pop
push
mov
icebp
or
mov
add
inc
in
add
cmp
mov
lret
add
movsb
add
pushf
idivb
sahf
mov
adcb
jl
shr
shrl
inc
pop
mov
fists
add
cli
sbb
jle
add
inc
mov
and
inc
hlt
faddl
ja
sbb
rcrb
xor
sub
pop
xchg
mov
xchg
aad
add
mov
sbb
out
dec
cs
loopne
or
insb
lahf
add
test
rorl
add
add
adc
push
add
adc
mov
jne
fadds
subb
mov
sbb
pop
fnstcw
scas
addb
sub
add
sub
ljmp
mov
and
repnz
jg
loopew
dec
dec
or
dec
daa
lds
push
mov
add
adc
xchg
adc
sub
cltd
jmp
fucom
popa
stos
add
push
pop
repnz
push
roll
scas
movsl
push
cli
mov
jb
add
test
sub
stos
fdivs
pop
addb
mov
jecxz
add
imull
jnp
xchg
add
cmc
jbe
addr16
les
or
mov
add
cmc
pop
aam
stos
jo
mov
cltd
adc
lods
add
fcmovu
cmp
lds
add
jg
inc
loop
insl
test
sub
xor
loope
fists
xchg
jle
add
mov
pushf
test
or
add
cmpsb
outsb
scas
push
repz
ror
lods
sbb
jbe
adc
nop
gs
out
mov
mov
inc
stc
mov
repnz
pop
call
je
test
add
mov
or
fstps
ss
add
dec
push
mov
stos
xchg
dec
xor
fcoml
popf
jnp
lock
nop
pop
pop
sti
or
add
cli
cmp
lock
outsl
add
in
push
into
cmpsl
cmp
add
adcl
test
xchg
dec
fldenv
jmp
shrb
jae
std
sub
repz
sbb
cmp
adc
inc
mov
mov
jg
xchg
cltd
ror
push
pop
out
or
add
sahf
iret
data16
pop
dec
int3
lea
cmc
mov
and
sub
jl
jecxz
orb
xlat
adc
js
push
push
fldl
scas
sub
cmp
hlt
add
or
out
outsb
lds
jg
add
out
je
iret
add
push
push
cmp
sbbb
inc
add
xchg
les
push
popw
mov
cmpb
test
iret
add
in
push
enter
add
sub
das
out
mov
mov
test
sbb
aaa
xchg
mov
jno
or
sub
add
test
jb
xor
add
psubsw
sti
inc
lods
add
test
loopne
shll
add
mov
in
adc
out
jl
add
cltd
out
sub
add
and
sbb
add
pop
int3
add
sub
sub
mov
cmpsl
pop
cld
mov
es
dec
psubusw
das
sub
xchg
push
xlat
loope
xchg
movsl
pop
mov
xchg
xchg
aaa
mov
or
cmpsl
push
pop
and
push
dec
adc
cmp
inc
mov
sub
or
lock
push
hlt
hlt
aad
jecxz
jg
movsb
pop
mov
popa
data16
test
cmp
mov
jbe
push
jg
dec
loopne
xchg
pusha
sub
add
jle
push
add
and
xor
mov
add
cmc
xor
mov
repnz
pop
xchg
insl
sti
das
xchg
dec
sub
mov
jmp
dec
mov
incb
sbb
mov
lret
lcall
in
sbb
mov
sarb
add
aad
push
ds
dec
cmp
add
and
jg
popf
divps
xchg
lds
push
es
xor
dec
or
or
xchg
and
dec
add
mov
sbbb
mov
sysret
dec
sbb
int3
hlt
and
or
jmp
andb
push
xlat
add
scas
sub
ror
mov
add
add
push
add
jo
mov
add
sub
add
rorb
enter
pop
aas
push
ljmp
push
cmpl
pop
orb
jmp
and
push
xchg
scas
pop
mov
cmc
dec
xor
dec
add
dec
fisubrl
inc
jnp
add
and
mov
shrl
adcl
and
cmp
out
test
mov
inc
jbe
incb
nop
and
test
ret
addl
shl
pusha
add
fdivs
push
out
lods
daa
stos
imul
cwtl
in
dec
scas
and
mov
jge
pop
stc
cltd
ret
cmpsl
push
add
roll
fstps
push
lock
jns
stos
ss
lods
add
incb
jne
pop
sbb
xor
adc
call
dec
cmp
jl
jmp
add
daa
adc
sbb
push
pop
cld
testl
pusha
roll
in
test
xchg
jecxz
add
aas
mov
add
sub
push
add
sbb
inc
mov
mov
xor
mov
sbb
shlb
mov
nop
clflush
lods
mov
fdivr
add
push
shr
les
add
xor
mov
test
add
rorb
jmp
add
dec
mov
add
sahf
mov
mov
dec
pop
pop
popl
orb
jle
add
pushf
icebp
in
add
enter
subl
sub
repz
loope
popa
adc
pop
mov
mov
sbb
pop
lret
inc
adc
jge
enter
aas
jmp
cmp
mov
jnp
pop
test
jl
sub
mov
mov
add
fs
jecxz
add
mov
scas
add
push
add
lods
jmp
cmp
push
push
mov
add
ret
pushf
jp
add
ljmp
add
fsub
cmpsl
xchg
xchg
adc
inc
rcrb
lret
add
dec
in
add
sub
push
fmulp
sahf
inc
push
inc
int3
repz
ljmp
pop
xor
mov
add
mov
push
push
push
mov
sub
cmp
sbb
dec
imul
pop
push
and
xor
ret
ljmp
mov
sbb
ficoml
sarb
add
cmp
push
sbb
aas
pop
decb
jecxz
lahf
adc
ret
inc
sub
add
jle
divb
cmp
std
ja
ljmp
fnstenv
insl
adc
cs
xchg
fnsave
in
xchg
add
repz
mov
mov
shll
dec
sbb
and
push
test
mov
push
xchg
cmp
or
pusha
mov
call
add
lret
add
xchg
sub
lods
and
jmp
xor
andl
push
mov
inc
mov
inc
icebp
push
sub
xchg
lods
xor
push
pop
clc
dec
and
add
cwtl
test
popa
mov
adc
adcb
push
sub
mov
add
lods
dec
out
inc
pop
cmp
enter
jge
add
leave
dec
popa
add
mov
add
dec
mov
iret
pop
xorb
xor
lret
stos
insl
push
adc
lock
jne
es
ljmp
mov
jo
push
xchg
adc
enter
mov
sub
or
inc
iret
mov
xchg
mov
imul
subb
jnp
cs
dec
xor
paddusw
enter
add
xor
dec
xchg
cli
and
mov
inc
jae
js
cltd
add
xchg
cld
iret
add
ret
popf
mov
arpl
dec
mov
xor
push
cmpsb
mov
iret
stc
sub
mov
xchg
fidivrs
add
mov
add
mov
faddl
aaa
pop
mov
das
pop
mov
cmp
andb
nop
and
inc
stos
dec
mov
mov
add
gs
mov
inc
leave
sarb
ss
mov
jge
or
test
loopne
dec
mov
add
cmpsb
mov
add
inc
mov
mov
popf
add
inc
sbb
add
add
iret
fsub
cli
push
mov
add
push
gs
jns
fstpt
cmp
adc
jbe
mov
andl
pop
and
mov
lret
mov
jbe
pop
and
pop
mov
mov
inc
add
lock
pop
inc
in
xchg
adc
test
xchg
jb
adc
cld
sahf
or
lea
pushf
fidivrs
jo
nop
dec
add
or
add
mov
daa
cli
mov
sti
add
dec
icebp
or
mov
pop
add
jp
pop
jae
sub
es
pusha
fisttps
mov
add
mov
in
pop
andl
out
add
int3
lret
add
imul
bound
pop
add
pop
out
adc
or
jecxz
jl
cmpb
nop
movsb
add
filds
bnd
dec
nop
inc
xchg
addr16
add
ljmp
add
jbe
sub
and
mov
out
add
lret
pop
mov
sbb
adcb
jne
mov
sbb
xorb
mov
mov
dec
push
pop
outsl
push
add
add
fsubr
and
add
filds
sub
clc
pop
outsb
andb
popa
add
movsl
lods
mov
add
pusha
ret
or
add
mov
adc
push
sbb
lea
mov
adc
cmc
add
in
pop
adc
push
rcl
hlt
dec
lds
mov
sub
test
cltd
pop
testb
jbe
in
add
shrl
in
insb
inc
mov
add
loope
sbb
add
call
and
add
scas
lds
jp
add
stos
xchg
mov
imul
lock
and
add
repz
aaa
inc
rorb
adc
mull
mov
loopne
ljmp
pop
mov
leave
sbb
sbb
mov
arpl
ds
push
lods
cmp
inc
popf
cmp
adc
loopne
pop
shll
ljmp
out
push
out
add
scas
dec
xor
inc
push
cmpsl
or
add
push
jecxz
mov
ja
nop
call
outsl
cmp
out
mov
adc
add
pop
push
xor
cmp
out
into
add
or
orl
jl
adc
add
outsl
dec
loope
cmp
clc
xchg
add
lcall
add
addr16
rorb
pop
jnp
adc
lcall
pop
nop
xchg
lods
add
outsl
mov
pmaddwd
dec
fisubl
rcrb
add
js
dec
add
push
or
pop
pop
jnp
rol
mov
mov
jecxz
and
pop
push
test
jnp
sub
cmp
inc
mov
shr
in
cmp
add
sbb
loop
jle
sbb
add
adcb
test
dec
jnp
mov
push
js
sbb
adc
mov
dec
mov
jb
sub
mov
mov
in
inc
cmpsl
jecxz
je
add
pushf
adc
mov
and
adc
jbe
xadd
sub
jo
ret
repnz
xchg
popf
and
pop
add
adc
jmp
add
xorb
jo
decl
jnp
and
mov
lcall
jb
orl
mov
dec
mov
pop
jmp
rorl
movl
rclb
pop
jecxz
dec
out
rcrb
pop
adc
popa
lret
clc
cwtl
out
add
jg
dec
xchg
iret
mov
imul
inc
lods
das
jb
cmp
add
xor
hlt
leave
mov
xchg
adc
dec
fiaddl
mov
fwait
mov
add
and
add
lods
lock
push
mov
pop
pushf
test
fdivp
cmc
add
daa
out
inc
test
pop
inc
movups
inc
iret
sbbb
add
mov
les
add
jl
cmc
push
pop
mov
pushf
hlt
es
fsubrl
add
add
lret
loop
add
dec
dec
cmpsl
inc
fs
into
pop
xchg
call
add
cli
movsb
mov
dec
or
popf
or
and
add
inc
cmpsb
push
adc
imul
sub
rcll
and
inc
add
mov
out
outsl
pop
loop
add
mov
and
ret
xchg
fs
das
jae
jl
pop
jnp
jne
fildl
test
mov
lds
jns
add
cmpsl
dec
call
cmp
lea
xchg
rcl
leave
cmp
pusha
loope
push
in
inc
mov
insl
jne
jnp
add
push
repnz
call
fmuls
andl
cs
movnti
add
sbb
lcall
cmp
mov
dec
sbbb
mov
insb
add
loop
push
inc
mov
fs
les
xor
jae
popa
loop
or
mov
mov
ss
and
aas
add
push
mov
mov
call
dec
xchg
rcrl
hlt
adc
inc
sub
add
pop
sub
dec
cmp
popa
into
jg
stos
add
insb
cmpsb
xchg
sti
push
sbb
jne
add
push
and
not
jmp
mov
in
xor
and
clc
pop
sub
lret
dec
addr16
lea
mov
mov
mov
jle
leave
pop
jnp
imul
add
cmp
jae
cmp
fisttpl
add
and
dec
cmp
imul
adc
addb
jnp
sar
sub
add
dec
andb
add
push
sti
or
cmp
lds
add
push
imul
into
xchg
inc
cmp
pop
daa
jb
rol
sbb
in
push
xlat
push
clc
gs
je
add
call
daa
push
dec
mov
mov
test
inc
add
lret
or
bound
out
xor
xor
popa
inc
xchg
mov
je
mov
add
adcb
adc
idivl
lret
sbb
xchg
arpl
ja
out
cwtl
into
clc
cli
cmp
sti
data16
add
mov
shlb
cmp
dec
pop
gs
mov
imul
pop
add
clc
push
popa
xor
in
fwait
or
adc
nop
xchg
pusha
pushf
and
push
ja
in
pop
push
or
adc
nop
pop
fmul
mov
dec
outsl
jns
sub
lods
ljmp
sbb
jmp
xor
insl
icebp
dec
pop
or
adc
xor
and
out
adc
add
add
call
add
addr16
movl
std
dec
mov
pop
stos
pop
jae
xor
or
shl
inc
push
lock
decl
popf
cmp
or
add
push
mov
ss
idivb
lds
lods
pavgb
push
insl
movsl
fdivl
xchg
subl
out
lods
test
test
push
call
dec
addb
jnp
test
pop
adc
xor
aas
cmp
adc
mov
gs
pop
add
cld
push
and
callw
pusha
dec
ret
pop
pop
xchg
rcll
lcall
js
addb
add
jo
out
lea
add
jnp
pop
mov
popa
mov
scas
iret
lret
fwait
cmp
lods
xlat
add
pusha
pop
xor
add
xchg
sbb
pop
add
lods
jl
add
test
add
jge
add
sbb
dec
mov
lds
adc
add
add
inc
inc
jle,pn
xchg
jg
adc
sbb
push
add
or
cltd
push
dec
xchg
pop
mov
lahf
pop
add
mov
popl
add
lock
popa
or
cmp
outsl
cmp
xor
cli
add
lock
mov
out
loopne
leave
sub
xor
push
jno
push
xor
jb
jae
jo
xor
dec
add
inc
or
rcrl
add
xchg
add
iret
out
mov
or
push
das
sub
cmpsb
xchg
loopne
out
rolb
inc
dec
cvtdq2ps
dec
les
dec
inc
lahf
mov
cmc
fwait
jno
adc
xchg
pop
push
jle
mov
and
push
idiv
push
cmpb
imul
bound
sub
jp
pop
push
push
gs
cmpb
or
fisttpll
mov
mov
adcl
sbb
addb
int
mov
nop
inc
repz
out
xchg
lods
xchg
fildl
cmpsb
sahf
int3
mov
aas
inc
jae
mov
pop
add
into
loopne
cmp
lock
in
cld
fcmovnu
lcall
add
mov
insl
stc
dec
repnz
pop
arpl
jg
xchg
or
dec
dec
add
imul
xchg
push
nop
je
test
sub
outsl
adc
add
mov
xor
and
xchg
ds
add
jo
cmc
jg
outsl
negb
pusha
xchg
movsb
or
mov
rolb
add
fsubs
jne
mov
pop
inc
lahf
and
sbb
les
mov
mov
sbb
fwait
cltd
sub
xchg
add
mov
insl
add
mov
andl
jecxz
outsl
sub
rclb
adc
sbb
push
fists
adc
clc
or
jecxz
loop
jo
add
roll
incl
addb
add
xor
cmpsb
jbe
enter
cmp
pop
sbbb
jae
pop
leave
cmpsl
xchg
sarb
push
and
jne
mov
add
xor
scas
lds
fiadds
mov
loopne
iret
xchg
xor
mov
push
and
push
cmp
ja
rcrb
jge
add
mov
out
mov
stos
add
pop
sbbb
push
and
pop
std
loop
jnp
cmc
in
sub
daa
pop
rclb
add
pop
popf
in
jmp
and
rolb
stos
add
loopne
sub
mov
add
hlt
in
int3
lds
aad
pusha
jns
mov
mov
aaa
pop
dec
sub
repnz
add
pop
mov
cmc
fmulp
nop
add
push
add
jbe
and
adc
loopne
add
mov
cmp
xchg
sbb
xor
jp
outsb
add
adc
jno
or
out
pop
mov
add
mov
lds
xchg
add
test
fwait
sbb
adc
mov
cwtl
mov
cli
push
xor
pop
jno
js
lds
hlt
or
cld
push
cmp
xorb
and
lods
add
movsl
xchg
insb
negl
addl
mov
fdivr
sbb
leave
push
add
add
sbb
xchg
lods
xchg
mov
ss
and
and
dec
push
adc
jge
lcall
les
add
inc
sbb
sahf
xor
scas
fnstenv
add
sbb
add
es
xor
mov
add
outsl
sahf
fs
into
pop
add
fsubrs
and
loopne
cmpsl
shlb
hlt
jg
es
ret
add
sarb
jl
insl
and
imul
adc
jle
sub
push
fbstp
jbe
xchg
dec
std
add
ds
mov
xchg
adcl
add
jo
dec
pop
pop
xchg
jno
mov
stos
decl
adc
subl
sbb
adc
jecxz
pop
jp
pusha
add
ret
out
addr16
cmc
add
push
adc
nop
cmp
mov
adc
inc
sbb
push
sub
add
aad
xor
jge
cmp
ffree
mov
js
inc
test
mov
inc
jmp
sbb
push
std
pop
out
sqrtps
xchg
inc
mov
pop
aad
add
cmp
dec
icebp
push
outsb
push
pop
mov
gs
inc
mov
and
xchg
dec
jno
mov
repnz
ss
add
xchg
icebp
inc
mov
ja
push
cmp
fdivrs
pop
in
add
fs
repz
push
jge
test
add
gs
push
mov
ljmp
add
mov
pop
push
mov
add
hlt
adc
shrb
filds
push
mov
mov
je
aam
addl
xor
jg
mov
push
cmp
xchg
cli
adc
arpl
sub
add
mov
push
sub
flds
or
jg
add
movsl
inc
mov
mov
cmp
jle
rcrb
add
jecxz
arpl
hlt
out
add
in
incl
jns
lock
mov
dec
sub
insl
mov
dec
mov
cltd
lock
sub
mov
in
push
xchg
addr16
add
adc
insb
aad
push
flds
xor
sub
add
les
jmp
pop
movsb
mov
pusha
xor
add
mov
ret
xchg
bound
sub
jmp
cmp
mov
cmpsl
xor
push
mov
xorb
xchg
imul
pop
sar
loopne
mov
mov
movsb
push
dec
add
aad
jno
mov
inc
insl
mov
aas
cmp
add
add
add
ret
mov
int3
stos
jl
add
add
inc
rcll
add
add
arpl
mov
mov
out
imul
rclb
inc
faddp
jb
add
ja
xchg
add
pop
pop
pop
enter
pop
dec
add
pop
push
push
sbb
add
cltd
sub
cmp
fbstp
movsl
arpl
nop
rorl
jecxz
or
and
push
pop
mov
pop
sti
inc
rorl
fsubl
add
stos
add
push
dec
sbb
fstpl
add
jno
insb
dec
aaa
xchg
cli
add
and
bound
push
scas
jno
sub
or
mov
jg
lret
fs
push
ret
int
scas
out
add
lahf
xor
loopne
mov
sti
add
loop
add
movsl
in
push
pop
xor
dec
add
sub
rolb
dec
adc
xchg
in
dec
inc
in
clc
into
dec
ja
sarl
pushf
in
addr16
mov
xor
loopne
mov
add
aaa
fwait
sbb
sbb
setp
testl
inc
jmp
repz
cmp
xchg
push
add
neg
mov
test
xchg
add
inc
inc
pop
and
add
mov
imul
js
jmp
add
lcall
fimull
sahf
fst
mov
jge
clc
and
cmpsl
fsubl
popf
sub
aad
dec
add
jns
add
mov
cmpsb
sahf
add
inc
xorb
jg
jp
ja
add
sbb
dec
incl
pop
aas
fidivl
lldt
jge
call
cwtl
idivl
cld
push
add
outsb
loopne
repz
jno
pop
popa
pop
nop
pusha
call
sub
xor
sbb
js
add
xor
fwait
add
pop
xchg
out
adc
ret
push
or
add
push
adc
out
jne
fwait
lds
push
icebp
mov
divl
test
add
or
sub
mov
push
out
push
fwait
ljmp
and
push
add
dec
inc
outsb
ret
orb
add
sub
bswap
aad
xor
pop
sbb
xchg
movsl
shlb
mov
pshufw
push
incl
cli
add
mov
mov
lea
bound
and
lcall
cmp
sbb
push
dec
pop
or
test
xchg
dec
test
xor
add
rcrb
ret
dec
aas
mov
mov
cmpsl
jp
add
mov
mov
pop
dec
outsb
jmp
or
inc
adcb
xor
cmp
sub
inc
push
fcom
add
jno
mov
jo
mov
cwtl
mov
adc
adc
push
mov
add
or
cwtl
repz
aaa
jl
add
mov
sbb
mov
stos
push
jle
add
cmp
addr16
mov
push
lret
inc
dec
aas
pop
cld
and
les
xor
add
int3
push
xchg
add
dec
inc
xor
add
and
in
add
dec
enter
loope
cs
jnp
fsubrs
mov
jle
call
xchg
ds
fwait
mov
test
sub
cmp
pop
sub
add
repz
xlat
push
fimuls
je
sbb
outsb
xchg
or
add
movsl
mov
popf
lods
push
add
out
push
and
test
mov
daa
bound
loop
mov
jbe
mov
jo
mov
hlt
pop
dec
inc
add
fldl
adc
sbb
jl
test
mov
xor
add
cmpsb
mov
scas
fsubrl
leave
orl
icebp
hlt
mov
fisttps
xchg
adc
insl
ljmp
jns
push
stos
add
cmc
jecxz
adc
mov
aaa
popf
sbb
lret
test
xchg
mov
nop
test
out
shl
cmpsl
jmp
lahf
cli
rcrb
je
or
add
mov
cs
adc
lret
add
sub
lea
dec
jns
fildl
ret
fldl
push
push
jg
add
adc
in
in
je
out
enter
stos
sbb
imul
push
mov
icebp
test
push
and
les
add
lds
jmp
push
int
sub
cmp
ja
cmp
xor
push
add
popf
aas
rclb
add
add
cmp
shll
jge
sub
add
sti
mov
add
mov
xlat
stos
popa
mov
lods
call
jae
xchg
shrl
or
clc
rolb
add
je
fadds
xorl
es
sarl
clc
dec
or
add
out
inc
sti
mov
xchg
add
in
rol
push
out
into
or
mov
add
mov
in
cmp
rorl
loopne
add
test
mov
xor
loope
xor
sahf
je
orb
jbe
mov
sub
jecxz
movsl
cltd
adc
adc
es
sbb
fadds
insb
push
mov
repnz
add
hlt
pushf
daa
mov
mov
jae
add
addb
or
ljmp
cmp
scas
mov
add
jbe
cmp
repz
cli
adc
add
test
popa
call
add
lock
push
and
pop
add
lea
xchg
pop
and
ss
push
rcll
or
imulb
jp
scas
sub
jecxz
lds
or
or
call
js
fsubr
jne
je
add
sti
shlb
into
cwtl
xchg
jb
add
lahf
movsb
loopne
sbb
mov
xor
mov
mov
and
dec
out
add
jmp
cmp
fwait
xorl
inc
repnz
xor
dec
or
aad
push
mov
add
hlt
or
leave
push
pop
cmc
adc
pop
lea
aad
cmp
int
push
add
jl
sub
pop
ja
add
movsl
sub
push
jge
xchg
repnz
jb
aad
repz
xlat
enter
push
loop
ja
add
push
cmp
sub
mov
xor
lret
sarb
sbb
leave
lock
jns
iret
sub
ret
jbe
cmp
stc
das
add
xchg
into
add
mov
and
aam
out
pop
add
sub
gs
sub
in
mov
push
iret
xchg
lock
mov
cmp
les
mov
or
flds
add
sub
add
fdiv
mov
xor
mov
add
clc
mov
and
push
adc
jmp
add
jmp
sub
lcall
subl
ss
clc
mov
fmuls
mov
mov
mov
int
leave
pop
cmp
sbb
mov
adc
inc
inc
inc
dec
xor
inc
cmp
setnp
mov
cmpl
es
add
mov
adc
lret
rol
add
sbb
insl
sub
cmp
jl
fs
sbb
int
push
lock
sub
ret
pop
add
dec
clc
cmpsb
mov
add
mov
ja
dec
lods
subb
add
add
mov
les
dec
lret
flds
dec
imul
push
mov
fs
or
mov
fwait
pop
mov
dec
ja
push
xchg
sub
dec
pop
adc
cli
aam
mov
das
push
add
mov
or
in
stos
or
loopne
add
jne
jo
sub
inc
dec
jle
push
jg
sub
ret
mov
hlt
mov
add
shll
ja
mov
add
and
add
and
add
add
push
xor
xchg
lds
add
mov
enter
ljmp
loopne
inc
lock
mov
shrb
call
and
hlt
loopne
imull
pop
xchg
insl
loopne
mov
or
mov
and
add
repnz
pop
loop
jne
repz
add
imul
push
cmp
mov
push
inc
movsl
jmp
sbb
adc
or
fbstp
in
sub
and
fstps
hlt
out
inc
stos
xchg
lcall
xchg
sub
and
push
loope
js
xchg
adc
add
fimuls
lea
ficompl
mov
jns
push
ds
les
insl
jne
jb
xchg
add
xor
call
test
lret
add
sub
cwtl
add
jmp
mov
inc
jge
cmp
pop
push
js
cmp
xlat
adc
mov
popf
jb
fwait
add
pop
xor
add
sbb
add
rorb
add
lods
popf
add
inc
cmp
shrl
pop
mov
pop
fs
call
add
cmp
mov
in
xlat
fadds
mov
testb
pop
shl
add
add
xchg
mov
mov
jp
aad
ja
movd
js
in
push
outsb
dec
xor
gs
add
xor
cmp
add
sbb
add
jecxz
sbb
push
add
mov
sub
cmpl
mov
mov
cld
dec
inc
add
ltr
ljmp
outsl
je
sub
out
add
pop
cmp
aaa
pop
lret
addb
mov
mov
addr16
xchg
or
lcall
fcmovnb
and
mov
mov
arpl
pop
cmp
add
or
cmp
into
xchg
adc
repnz
pop
aam
lahf
add
pop
or
daa
loop
or
ja
and
mov
add
fsubrs
xor
in
cmp
nop
fisttpl
mov
pop
mov
mov
js,pt
cmp
in
xor
fldpi
adc
lods
jl
jne
sbb
outsb
clc
lock
movsb
js
sub
call
movb
pop
xchg
push
insl
scas
outsl
push
add
fistl
mov
mov
pusha
xor
subb
dec
xchg
lret
cld
test
jle
mov
fld1
sub
adc
add
aaa
popa
cmc
pop
xlat
inc
add
in
stos
ret
scas
roll
lea
cmp
pop
jge
testb
add
daa
std
and
cmp
add
js
lea
lods
icebp
add
jno
les
adc
adcb
lcall
mov
nop
pusha
xchg
bnd
adc
incb
jmp
or
dec
add
mov
pop
ret
bound
jp
add
incl
cmp
jns
add
lock
jno
add
pop
bound
rclb
imul
xchg
cmpsl
pop
jno
ret
mov
les
loop
jne
lds
pushf
push
jl
and
add
mov
outsb
fs
mov
jno
cmc
pop
shl
sbb
jecxz
or
inc
add
mov
xchg
cmc
add
test
cmp
movntq
jge
pop
cmp
mov
es
add
out
je
mov
jp
pop
adc
popf
addr16
mov
hlt
icebp
pop
fldcw
es
pop
add
sbb
daa
add
jo
sbb
inc
cld
pop
add
push
stc
repnz
push
and
fucomip
xor
mov
sbb
or
iret
lock
xchg
cmp
cmc
cmpsl
adc
pop
mov
or
adc
test
lcall
mov
add
outsl
sub
add
adc
add
jo
cmp
mov
sbb
inc
cltd
pushf
sbb
rol
int3
je
push
sub
repnz
xchg
push
leave
adc
in
stc
js
add
jae
xchg
add
inc
loopne
jg
mov
scas
jecxz
cmp
lea
sub
aam
dec
pop
test
daa
add
mov
add
sub
es
fiadds
fcomip
inc
popf
jge
add
and
add
push
popa
jle
insb
pop
xchg
sbb
mov
xor
adc
add
mov
xchg
pause
jl
shl
in
popa
mov
inc
adc
xchg
fwait
loopne
cld
mov
jno
es
xor
leave
push
push
std
fsubrs
xorb
jne
sti
add
jg
sarb
add
lcall
inc
inc
xor
pop
add
mov
cmp
stc
sub
xchg
dec
xor
test
leave
cli
or
cmp
add
adc
sbb
ljmp
xchg
mov
push
mov
pushf
add
imul
pop
shrb
insl
jnp
in
push
xchg
movsl
add
push
lea
inc
inc
add
mov
pushf
add
in
xlat
jae
inc
jecxz
pop
popf
test
call
leave
addr16
add
incb
push
xchg
fs
push
mov
inc
pop
pop
cld
jb
sub
adc
sbb
les
hlt
inc
sub
cmpsb
and
mov
add
sbb
add
ljmp
ror
dec
in
into
subb
xchg
pop
sbb
dec
shll
jnp
inc
lret
jne
cli
lret
test
inc
add
repnz
xchg
xor
and
push
gs
lret
jae
jbe
add
movsb
mov
cmp
rolb
cmp
add
fiadds
addr16
sbb
xchg
add
push
ffree
xchg
scas
mov
pushf
add
rcrb
add
sub
add
push
bound
in
dec
vlddqu
mov
cmpb
pop
add
sahf
push
iret
cmc
cld
sarl
xchg
sub
adc
jl
bnd
inc
je
jle
cli
xor
into
xor
rorb
pop
cmp
cmpsb
push
and
mov
fnsetpm(287
mov
rolb
xlat
dec
fimull
insl
push
insb
push
test
js
enter
sub
mov
jp
sbb
inc
xchg
add
add
mov
sahf
sti
jns
mov
cmp
add
scas
sub
movsl
pusha
mov
decb
insl
push
int
cmpb
add
inc
mov
popa
pop
movsb
int3
inc
sbb
dec
loope
mov
fstpl
dec
mov
sbb
pop
add
mov
mov
jp
mov
pop
aam
aas
push
outsl
sti
jmp
cld
enter
imulb
or
jns
ret
add
mov
addl
leave
cmc
fs
not
jae
xchg
loopne
clc
arpl
scas
pop
or
inc
cltd
dec
lock
and
mov
dec
xor
jno
cmp
lcall
sub
push
mov
pop
sbbl
sub
and
rolb
push
fisttpll
loop
push
dec
aad
mov
push
cmp
pop
mov
cmp
xchg
push
call
dec
ljmp
sbb
dec
repnz
jae
cmpb
lret
shr
ret
cmc
clc
nop
ds
inc
mov
xor
inc
pop
mov
or
sub
dec
jo
ror
push
add
jle
sahf
mov
xchg
imul
sbb
push
in
ja
add
in
mov
add
rcr
mov
out
add
bound
adc
sub
add
push
add
adc
es
movsl
mov
xor
add
push
fists
cmp
mov
outsl
mov
pop
cltd
fnstcw
add
cmp
mov
aad
insb
test
sbb
in
and
lahf
into
cmp
insl
xor
in
idiv
rolb
adc
add
add
add
add
stos
arpl
sbb
pop
jo
push
in
in
pop
pop
fdivs
adc
xchg
push
add
and
push
lds
shl
add
jp
popf
icebp
inc
add
mov
cmp
xchg
mov
inc
or
pop
sarb
xchg
xlat
push
fbstp
addr16
adc
add
int3
mov
mov
mov
fists
mov
xorb
sahf
xchg
pusha
add
int
loopne
push
mov
mov
push
fsubr
pop
out
pop
pop
pop
mov
ror
test
xor
or
sub
pop
dec
ror
sbb
pusha
out
xorl
mov
mov
and
mov
fldl
shll
loop
xchg
out
add
sarb
lods
mov
pop
mov
cmp
imul
into
mov
fsubrp
pusha
push
insl
lods
sbb
add
mov
lret
mov
call
push
std
mov
scas
out
mov
aas
shl
jo
mov
add
mov
mov
pop
inc
jae
test
outsb
sub
pop
xchg
sbb
loopne
repnz
fs
adc
add
nop
rcl
add
xor
add
sub
cmp
inc
setne
lods
jmp
out
add
mov
leave
fiaddl
ljmp
out
add
xor
int
popl
xor
pop
test
dec
outsl
lock
cmpsl
add
cld
push
and
daa
lret
mov
xchg
ret
fs
cs
add
xchg
pop
xchg
dec
xor
shrl
lahf
pop
popa
xor
push
jno
in
adc
out
mov
leave
add
addr16
add
aad
sti
int3
fwait
dec
jmp
lret
outsb
push
pop
xchg
arpl
stos
lds
add
xor
jecxz
or
call
push
fwait
lahf
mov
sbb
sub
bound
sbb
pop
add
cs
push
sub
ss
es
iret
xor
pop
xor
dec
mov
jo
push
aas
int
xchg
inc
mov
jmp
mov
dec
faddl
or
xchg
dec
popf
add
add
mov
insl
pop
aam
fildl
popa
push
push
scas
bound
pusha
aas
test
pop
inc
cwtl
out
lahf
or
lock
push
cld
pop
orps
xchg
sub
dec
loopne
rep
jnp
add
rolb
pop
add
out
sahf
dec
dec
mov
xor
mov
add
sub
cmp
in
mov
nop
stos
lock
add
cmp
inc
or
mov
dec
add
inc
xor
xchg
push
add
lods
jbe
xchg
je
pop
xchg
add
lret
push
sahf
orl
add
mov
add
data16
adc
sub
xor
hlt
dec
leave
bound
add
out
pop
cmp
in
adc
loop
cmp
cmp
cmp
call
add
fwait
lret
fxch
cmp
add
cmp
cld
pop
rclb
mov
push
scas
sbbb
cmpsl
add
pop
mov
ss
inc
mov
add
xorl
push
sub
pop
into
add
inc
push
cmc
loopne
or
cmpb
into
push
xchg
cmpsb
cmp
sbb
popw
sub
in
dec
sub
mov
mov
outsl
xchg
sub
push
xorl
push
cmp
mov
mov
les
inc
mov
jbe
jl
add
dec
lock
shlb
mov
pop
idiv
mov
and
loopne
jne
and
or
cmp
std
jae
add
or
addb
push
sti
jmp
repz
and
lret
dec
add
cmp
jae
daa
add
mov
add
int
fiaddl
add
xchg
fnstsw
add
adc
divl
in
xchg
mov
enter
add
xchg
icebp
add
popf
mov
add
mov
jo
loope
xchg
sbb
imul
dec
jb
add
data16
inc
js
mov
inc
ret
push
adc
add
mov
add
insb
xor
add
mov
roll
in
mov
mov
pop
jo
pop
xchg
mov
ja
imul
or
xchg
inc
add
xchg
cli
mov
shl
add
fbld
cmp
mov
dec
les
int
add
add
xor
push
testb
xchg
lods
movsb
add
sbb
sbb
and
loopne
fistpl
testb
push
inc
std
sti
insl
fdiv
dec
call
js
mov
test
add
arpl
and
sahf
add
or
dec
adc
stos
jle
add
addr16
ss
or
mov
jbe
nop
ret
fdiv
adc
mov
icebp
add
repnz
out
rol
cmp
jns
leave
xchg
outsl
insb
enter
mov
sbb
imul
xchg
jecxz
aaa
add
leave
cmp
sbb
jnp
bound
lods
pop
mov
inc
jmp
push
xchg
lds
push
fbld
inc
or
sbbb
push
pop
cmp
loope
sub
jne
mov
inc
add
or
mov
add
pop
jge
pavgw
adc
into
fadds
mov
pop
out
aam
push
nop
mov
mov
lods
les
inc
mov
add
repz
inc
mov
les
clc
popa
mov
mov
pop
sbb
add
push
shll
mov
mov
add
out
push
shlb
lock
inc
mov
loopne
xor
sub
mov
js
fcmovnbe
cmp
pextrw
and
outsb
into
incb
and
ficompl
test
int
cmp
stos
pop
jmp
push
loopne
lea
push
test
int3
pop
loopne
dec
add
sbb
imul
jge
sbb
inc
out
jle
or
cmp
ljmp
pop
insb
add
iret
sbb
in
add
in
nop
and
add
icebp
std
pop
jg
nop
jecxz
mov
jp
lock
loopne
xor
add
lret
cmp
xchg
repnz
shl
mov
mov
mov
jecxz
mov
sub
icebp
add
ficoml
fstl
adc
push
bsf
mov
nop
ret
dec
add
cld
add
mov
add
aad
in
lods
out
stos
add
jmp
out
imul
cmp
sahf
in
jecxz
call
dec
jp
inc
js
jne
cwtl
pop
ljmp
test
cld
in
add
icebp
jbe
pop
inc
pusha
rcrb
jge
sub
and
mov
add
xor
cwtl
add
adc
push
pop
pop
sbb
mov
je
add
in
pop
in
push
mov
test
or
fisubrs
or
cld
fistl
movsb
subl
dec
sbb
lea
push
in
add
lcall
add
cmp
mov
add
lock
cmp
or
push
mov
xor
decb
push
test
sbb
enter
mov
adc
add
or
add
clc
jne
aas
sub
xchg
xor
movsl
pop
fidivrl
pusha
jg
xchg
add
andl
sbb
cmpsl
or
jge
xor
andl
ss
xor
hlt
sbb
xchg
cmp
sti
fwait
xchg
push
cli
inc
add
mov
xor
add
lods
movsb
sub
xchg
add
aam
lds
add
add
std
dec
pop
xor
mov
sbb
out
add
dec
pop
sbb
aad
cmp
adc
iret
movsb
nop
in
in
cmp
xchg
fsubrl
add
ljmp
add
add
jb
js
filds
xchg
inc
xor
loopne
cmpsl
gs
ret
mov
inc
les
mov
fsubr
fisubs
mov
add
shlb
adc
jnp
insl
rorb
mov
addr16
stc
or
lods
pop
pushf
cmp
aas
mov
aas
in
push
loopne
divl
stos
roll
add
int
cltd
rcrb
gs
pop
mov
mov
repz
xchg
add
sahf
scas
or
divl
xor
push
icebp
fsubl
jl
add
jp
mov
call
xor
mov
cwtl
jbe
lea
test
dec
ret
add
mov
add
insb
outsb
cld
push
mov
testl
and
leave
adcb
dec
fcmovb
lock
add
or
lea
daa
jne
jo
ud0
jns
popf
fadds
push
add
nop
dec
pop
sub
add
fcom
jge
and
jae
add
out
cli
ret
test
ljmp
ds
dec
fiaddl
idiv
or
mov
xlat
mov
add
jbe
stos
xchg
mov
cwtl
adc
pop
mov
mov
mov
push
mov
inc
push
pop
cmp
adc
mov
jbe
pop
push
and
std
stos
push
push
mov
add
arpl
or
pop
jns
mov
aaa
mov
ds
adc
pop
xchg
or
lret
cli
add
or
sbb
xor
mov
loope
into
in
pusha
jg
add
or
xor
jno
jo
xchg
xor
notl
daa
add
ja
int3
and
cld
add
aas
pop
shll
pop
add
adc
stos
insb
icebp
setns
xchg
addl
add
das
mov
mov
js
cmpsb
adc
daa
repnz
testb
lret
lods
stos
push
push
gs
add
sbb
jb
stc
lret
push
idivl
movsb
jge
pop
pusha
or
clc
and
pop
sti
ss
cmpsl
adcl
inc
dec
cmp
pop
adcb
rorl
sbb
in
jge
mov
mov
aam
lock
divb
repnz
sub
ficomps
and
icebp
pop
repz
int3
mov
jnp
xchg
jno
jg
add
jb
sub
sub
add
je
in
mov
fwait
mov
and
or
add
xchg
fldenv
mov
mov
roll
or
js
mov
pusha
test
push
adcb
fiadds
aam
xor
add
scas
repz
xchg
inc
je
sub
sbb
inc
add
add
fnsave
addl
push
mov
inc
push
sbb
xlat
sbb
aam
jns
sub
popf
stos
fsubrl
out
enter
push
mov
rol
pusha
add
fdivl
add
idivb
fs
mov
add
loope
arpl
add
cmc
push
cmpb
addb
mov
lods
jns
cvtpi2ps
bound
andl
lods
imul
sub
push
pop
out
flds
mov
sbb
pop
inc
add
inc
in
add
testb
xorb
or
mov
inc
sub
sti
jbe
mov
inc
lret
outsl
cmp
add
stos
cmpsb
movsl
daa
cmp
xor
sbb
bound
aaa
movsb
in
dec
add
stos
into
pop
loope
pushl
jp
add
int
repz
sbb
pushf
pop
imul
and
popa
fwait
xor
das
pop
mov
mov
movsl
pusha
lahf
mov
inc
mov
cli
sti
lds
ja
add
aad
adc
cs
push
ror
icebp
insl
add
pushf
je
add
sahf
negl
mov
pop
adc
mov
mov
add
mov
jae
cmp
push
cmpsb
add
jo
jle
mov
add
mov
or
loopne
xchg
mov
add
inc
rcrl
stos
lods
mov
jmp
cmpsb
cld
jo
jns
int
nop
iret
adc
outsl
inc
add
inc
push
xor
add
out
inc
xchg
add
das
jno
je
push
add
inc
fwait
dec
ja
cld
inc
add
lods
gs
aam
mov
inc
cwtl
cmp
add
pop
les
pop
mov
out
bound
add
lcall
cmp
inc
push
mov
sub
inc
dec
fmul
imulb
rolb
xor
adc
add
mov
rcl
pushl
add
lret
sbb
xchg
arpl
inc
pushf
add
xchg
imul
int3
test
mov
add
add
fsubl
sub
into
push
test
mov
movsl
cmp
pop
int3
fcomp
add
lahf
fs
push
jge
jo
pop
mov
fmulp
jb
add
aas
jae
sbb
in
loopne
add
cmp
jb
sub
fs
mov
shlb
rcll
clc
data16
jg
sbb
xor
cltd
mov
enter
sub
xchg
cmp
scas
mov
push
out
stos
and
add
pop
push
adc
jge
flds
xorb
push
inc
fldl
xor
in
inc
adc
xlat
test
stos
sbb
inc
outsb
push
cmpl
leave
pop
or
or
repz
mov
mov
add
xchg
addl
or
mov
and
icebp
mov
push
ror
test
push
jnp
cmp
adc
pop
repnz
push
arpl
fisttpll
jge
inc
addl
cld
cmp
inc
jno
jecxz
lds
sub
pop
jl
and
push
push
add
pop
out
cmc
xor
or
and
xor
push
mov
das
mov
roll
jae
add
push
ror
and
add
fld
out
lds
movups
lock
shlb
mov
jnp
in
add
jbe
into
mov
aas
dec
pop
dec
add
jmp
std
inc
es
mov
push
pushl
enter
or
adc
add
adc
bnd
or
sbb
inc
incl
fisubs
mov
mov
les
mov
loope
rolb
out
cmp
test
dec
nop
sbb
add
fiaddl
jb
out
hlt
add
add
jg
adcb
xor
cmp
and
aas
sti
mov
push
and
add
scas
dec
adc
add
ds
pop
leave
jecxz
fdivrs
jp
inc
xorl
inc
ljmp
push
add
jp
sbb
adcl
popf
in
mov
add
fidivl
and
test
add
jp
aas
cmp
and
push
add
push
mov
loopne
fwait
cmpsb
aas
out
jo
mov
test
fisubrl
add
mov
movb
fs
jg
jbe
add
pop
sbb
loope
hlt
out
add
ret
mov
push
push
orl
pop
insl
in
jle
and
and
jns
arpl
lahf
push
add
or
mov
push
lds
ja
inc
out
pusha
dec
sub
sbb
jp
out
jge
add
cmpsb
scas
cs
ltr
mov
shll
rcrb
out
dec
in
lock
mov
push
sbb
add
lods
out
or
mov
add
xor
pop
jmp
mov
add
adc
scas
ljmp
ret
sbb
out
jecxz
dec
lcall
clc
mov
sahf
jbe
jnp
ds
aam
jge
es
inc
ret
push
cvtdq2ps
int3
pop
jbe
sbb
cmp
or
les
cmp
xor
out
xchg
pop
add
inc
pusha
scas
addr16
pop
gs
js
and
test
push
add
push
cmpsl
and
pop
mov
subl
int3
xlat
pop
cwtl
jno
add
dec
mov
add
mov
add
jnp
rcrb
out
scas
add
xor
pushf
jbe
test
add
xchg
lods
test
movsb
jnp
add
mov
popf
mov
push
mov
pop
push
adc
sub
lea
mov
push
and
mov
sahf
add
adc
add
in
sub
add
cmpb
arpl
add
cmpsb
movsl
pop
out
add
mov
xlat
and
cmp
les
xchg
mov
and
and
jb
mov
cs
jl
add
dec
add
imul
orl
fcomip
inc
jmp
xchg
movsb
cmp
in
fxch
add
cmp
lahf
sbb
test
cmp
add
test
andb
ljmp
daa
clc
jbe
lds
sbb
aad
cmp
and
jne
sbb
jp
dec
mov
adc
cmc
daa
cld
pushf
rcrl
loop
dec
aas
sbb
add
fbstp
xchg
pop
loope
cmp
inc
add
sub
sbb
dec
sub
push
fwait
pop
mov
sub
mov
iret
dec
outsb
scas
movsb
xor
push
loope
movl
bound
and
add
push
push
add
jecxz
insl
mov
pop
aas
push
mov
gs
rolb
int
add
jb
sbb
jmp
lock
mov
push
addl
aaa
fneni(8087
in
push
sub
xlat
nop
push
and
mov
cmpsb
fnstsw
sub
loopne
leave
out
pop
sbb
sbb
mov
popa
xchg
pushl
add
test
cs
mov
add
inc
add
or
ljmp
mov
mov
popf
cli
subl
adc
loopne
hlt
push
push
add
loopne
repz
mov
clc
add
lcall
leave
into
or
push
add
test
cmp
insl
xchg
fsubrl
cmovb
cmp
add
out
aas
mov
out
in
add
nop
lret
add
xor
or
in
add
mov
repnz
fdivs
adc
add
inc
fstl
and
pop
jp
pop
mov
sbb
mov
sub
jno
sub
xchg
rolb
aam
pushf
fcomp
inc
pop
and
and
add
scas
push
enter
add
sub
add
in
clc
sti
adc
pop
adc
lea
push
fnstcw
dec
les
leave
xchg
lea
imul
sbbb
push
xchg
fisubrs
int3
rcl
test
push
popa
xchg
or
jle
loopne
add
mov
js
fcmovu
jno
fadds
add
jns
cmp
stos
insb
inc
add
mov
mov
sbb
sbb
inc
dec
nop
jnp
pop
shll
addb
jae
icebp
mov
dec
in
push
add
push
pop
call
ret
add
mov
test
hlt
ret
stos
ret
add
pop
rorl
xlat
andl
sbb
mov
ret
or
cmp
movsb
jno
and
add
fistpl
cmpb
inc
inc
cmp
testl
add
or
mov
mov
mov
lcall
minps
mov
add
ja
rclb
repnz
loop
pop
rcl
cmp
mov
lock
movsb
xchg
pop
je
vmulpd
or
sbb
xorb
in
hlt
adc
pushf
push
scas
in
jl
push
cmp
fmulp
fwait
xor
pop
jecxz
add
nop
nop
into
shrb
jge
sbb
push
jne
std
divl
mov
test
add
or
pop
mov
aaa
ljmp
je
nop
mov
imul
testb
and
xchg
lock
push
nop
pusha
push
mov
cmp
add
mov
xorb
xchg
add
pop
js
add
and
xchg
movsl
adc
and
test
xchg
decb
jnp
pop
jo
mov
xchg
scas
mov
push
mov
loopne
loopne
lods
dec
pop
iret
add
psubw
push
ss
or
dec
add
sbb
test
std
roll
ficoms
mov
adc
gs
sti
inc
fabs
mov
push
mov
mov
ljmp
ret
loopne
mov
add
add
nop
mov
cmp
add
scas
lods
pusha
mov
mov
ret
cmpb
dec
mov
sbb
test
sbb
and
sub
sahf
sub
adc
dec
ret
cld
shll
or
adc
cmp
je
pop
and
cmp
aad
jp
jae
movsb
dec
or
stos
fnstsw
inc
je
iret
das
add
cmp
jne
dec
jbe
fdivl
dec
fldlg2
pushl
loopne
pop
fidivrs
andb
mov
std
shlb
xchg
add
movsb
bound
add
add
xchg
push
mov
cmc
add
push
cmp
leave
mov
sbb
and
mov
sub
cli
push
cmp
mov
shll
dec
inc
loope
stc
and
std
js
jg
imul
mov
jmp
add
jb
push
js
dec
sub
push
cmpb
dec
into
stos
add
adc
call
pop
xor
mov
dec
imul
xchg
orb
jl
dec
mov
movsl
aas
push
lods
add
jb
dec
and
mov
punpcklwd
sbb
imul
sub
mov
jb
sbb
cmp
add
xchg
inc
xor
jae
mov
add
mov
test
rcrl
add
jecxz
lret
aas
xchg
push
daa
add
sbb
jg
pop
mov
testl
cld
xor
cmp
cmpb
loope
add
js
mov
push
stos
add
sbb
cmp
jno
add
insb
outsb
adc
push
pusha
inc
popa
in
or
sbb
or
fdivl
inc
jnp
jno
mov
mov
mov
add
pop
stc
jae
xchg
loope
sub
daa
xlat
add
jg
jnp
int3
in
add
push
movb
fs
pop
fidivrs
dec
add
inc
fists
mov
stos
or
jb
and
neg
enter
adc
popf
dec
adc
add
inc
pop
fsubr
imul
test
push
push
add
xchg
cld
push
out
or
loopne
jae
test
movsl
push
sahf
inc
cld
mov
sub
push
enter
add
push
mov
sarb
les
subb
xor
into
jl
add
dec
mov
add
xor
adc
jno
sub
mov
inc
push
loope
push
fnstenv
fcmovne
pusha
cmpsb
cltd
cmp
ror
mov
push
popa
pop
inc
pushf
das
and
add
ds
and
scas
cwtl
sbbb
add
cmp
lret
out
push
scas
pop
shll
and
icebp
loop
addr16
add
insl
push
mov
jg
jb
and
ret
add
call
adc
mov
imul
outsl
mov
jg
out
aaa
add
bound
cmpsb
sbb
mov
add
inc
xor
sub
sub
push
inc
inc
fwait
pop
add
mov
aas
in
mov
and
outsb
pop
pop
xor
in
or
pop
xchg
stos
mov
inc
jge
add
mov
jp
cmc
xor
pushf
cmp
std
add
lret
add
mov
mov
lds
mov
int3
sub
jp
xchg
pop
adc
icebp
mov
cmpb
pop
pop
movsl
add
pop
cmpsb
xor
int
xor
jnp
call
lods
jbe
inc
cmp
loopne
addb
addr16
add
sub
jg
lret
jo
pop
mov
add
xchg
das
push
add
lock
and
lret
pop
out
lea
xchg
mov
lock
loopne
inc
push
or
xor
pop
mov
sub
jne
add
fs
add
xchg
push
add
push
lahf
xchg
add
dec
mov
pop
addr16
add
mov
cmp
push
mov
inc
out
add
mov
cmp
es
xchg
mov
mov
sub
cmp
add
test
insl
add
lea
mov
cmp
add
test
daa
inc
pop
mov
dec
and
add
icebp
mov
fsubr
dec
pop
clts
mov
cmp
mov
icebp
aad
ret
in
loop
pop
fdivp
subl
or
xor
bound
cmc
add
js
xlat
add
xor
test
add
xchg
mov
jo
arpl
shr
lret
cwtl
call
ss
pop
mov
adc
add
xchg
or
cmp
das
pop
add
dec
jge
pop
adc
call
xor
aam
fstpl
sbb
cwtd
inc
sub
sti
mov
aad
loopne
repnz
in
push
mov
pop
xchg
add
imul
das
mov
dec
movsl
push
adcb
xchg
adc
repnz
mov
push
add
or
repz
cmp
and
add
jno
sub
test
popf
out
xor
dec
cmp
int
add
adc
sbb
mov
das
dec
outsl
add
lret
push
or
xchg
cli
mov
nop
out
push
and
jle
fwait
push
stos
clc
pusha
test
cmpsb
js
xor
rcrl
lock
push
add
loope
pop
mov
bound
dec
and
add
sbb
jb
add
mov
and
adc
out
call
jbe
ljmp
pop
test
jmp
jecxz
push
add
sub
dec
jo
or
or
xchg
mov
and
rol
pop
jmp
inc
or
insl
mov
pop
sub
scas
sbb
scas
ret
enter
mov
test
push
xor
enter
nop
add
sahf
loopne
push
mov
int3
lods
movd
or
test
in
incl
popa
or
jl
or
mov
adc
mov
ljmp
inc
loop
jno
add
orb
mov
ljmp
iret
aaa
lods
out
pop
mov
adc
cmpsb
mov
pop
arpl
lds
pop
inc
xor
add
pop
insb
jae
push
andb
push
add
and
sbb
lods
cmp
pop
icebp
in
push
xor
leave
mov
sub
pop
cwtl
jle
push
mov
add
cmc
adc
add
inc
pextrw
mov
add
test
test
shrl
cli
jbe
add
xor
or
mov
push
scas
cmp
call
clc
adc
jmp
sti
jmp
add
cmp
in
dec
mov
pop
and
cmp
out
popa
add
test
add
mov
sub
sti
into
pop
jle
jecxz
ja
rol
sbb
add
cmc
loopne
sbb
sub
enter
jns
add
mov
sbb
push
or
loop
add
ljmp
gs
mov
sbb
imul
or
pop
addl
push
adc
push
inc
std
add
sbb
out
mov
sbb
mov
dec
push
mov
lods
add
filds
in
mov
jmp
mov
push
push
fsubrl
pop
add
fs
inc
jmp
bound
pop
loopne
popa
insl
jno
arpl
fsubrs
imul
jbe
jo
add
mov
je
js
or
jo
adc
adc
std
popf
xor
dec
inc
and
mov
movsl
in
jecxz
push
arpl
sub
mov
pop
dec
xlat
xchg
mov
outsb
insb
add
mov
xor
mov
sti
pusha
popa
add
inc
sub
push
sub
cmpsb
inc
adc
xchg
pop
or
and
test
mov
add
jb
in
mov
jnp
xchg
pop
fsts
add
nop
cld
adc
jge
add
mov
daa
add
nop
xor
add
aaa
inc
mov
sbb
daa
push
pop
xor
or
add
pusha
cmp
pop
inc
add
es
imul
cli
test
pop
subl
mov
cli
add
cmpsl
fxch
ds
stc
pop
test
xorb
add
sbb
enter
add
int
add
call
cmpsb
xchg
jns
pop
cmc
add
inc
dec
sub
cmp
cmp
ficoms
mulb
imul
inc
add
idivl
test
popa
iret
add
clc
fdiv
pop
fisubrl
std
lahf
lods
cmp
adc
sahf
mov
pop
adc
xor
add
nop
fdivrs
mov
xor
xchg
jl
add
inc
mov
pop
cmpsl
mov
add
shr
add
aaa
setbe
jmp
cmpsl
lock
pushf
popf
and
cld
pop
out
outsl
add
pop
loopne
adc
lret
das
ror
cmpl
xchg
sub
fcoml
mov
mov
add
icebp
dec
loope
jns
add
pop
mov
lcall
inc
push
add
std
ret
and
sub
nop
push
add
adc
xorb
xchg
jl
push
fistps
add
mov
pop
xor
add
adc
xchg
push
aad
orb
lret
mov
xchg
add
inc
sbb
or
mov
je
mov
add
aaa
aam
xchg
cmp
popl
push
out
xchg
add
bound
nop
js
loop
ja
mov
cmp
cmp
adc
cmc
sbb
add
scas
push
mov
cld
bound
xchg
add
mov
fcomps
add
leave
fistpl
add
in
fsts
nop
mov
sub
ficompl
add
ja
stos
push
push
aas
sub
push
jge
mov
cmpsl
fdivrp
inc
xchg
xor
int
xchg
and
jno
add
xor
sbb
aaa
xor
daa
fistpll
addb
mov
sbb
add
and
mov
add
adc
xchg
jo
andl
pop
cmp
mov
pop
out
xor
dec
and
inc
nop
inc
sbb
repz
add
add
inc
mov
and
cli
add
fwait
dec
in
mov
roll
adc
in
imul
jp
jne
add
out
xor
pinsrw
mov
or
pop
xchg
aas
push
jle
mov
xor
or
insl
shlb
in
add
or
mov
mov
movsb
xchg
pop
test
mov
add
jne
push
mov
xor
mov
incb
mov
sbb
add
fiadds
shll
xchg
cwtl
push
add
fcoms
add
mov
jns
jle
add
sbb
adc
mov
adcb
add
jo
add
fisubl
int
pop
popf
or
add
les
xchg
fisttpll
lsl
add
rclb
filds
addl
cmpsb
pop
les
add
roll
inc
ret
fwait
aad
cmp
fadds
scas
insl
lock
add
movsb
out
pop
call
dec
cld
jae
daa
lods
in
hlt
out
or
pop
sti
fmul
ret
incl
pop
sbb
mov
mov
cmp
mov
stos
and
add
sub
dec
add
pop
shr
shlb
out
pop
nop
mov
inc
jo
mov
fildll
dec
clc
je
mov
lods
add
xchg
ss
add
inc
and
ret
add
nop
mov
cmp
aaa
popa
push
mov
and
sbb
into
fcompl
cmpl
pop
xchg
add
ficomps
add
fistps
lret
cmp
mov
addb
push
iret
leave
cmpsl
jno
add
add
ds
filds
lea
cmpsl
int
and
pusha
cmp
out
cmp
sbb
and
les
xor
push
xchg
mov
mov
xor
pushw
mov
clc
imul
push
xchg
jbe
add
jno
pop
ja
pop
inc
mov
pop
fsubs
lock
ja
rclb
pop
cmpsl
loopne
lret
inc
push
xchg
rcrb
movsl
add
mov
jae
in
add
shrl
andb
inc
add
mov
pop
aad
test
popl
pop
sbb
movsl
hlt
daa
decl
sahf
in
loop
jge
jnp,pn
cmp
jle
ds
pop
push
cmp
rcrl
fwait
stos
jbe
add
popf
ja
and
push
inc
sub
frstor
inc
ret
jge
mov
adc
mov
lea
shl
jae
add
imul
in
ret
xchg
std
mov
and
add
jmp
jl
or
push
mov
sahf
xchg
rolb
add
fldcw
mov
add
dec
jg
je
add
xchg
orb
add
roll
jge
sbb
pop
add
les
test
fstps
jmp
sbb
sti
or
add
pop
repnz
xchg
je
lock
add
mov
add
sub
pusha
std
aam
lret
scas
mov
add
jmp
cmp
ds
sub
outsl
cli
push
mov
jle
add
xor
rcrb
aaa
sarl
add
jnp
mov
nop
sti
aam
sub
idivl
pop
cmc
dec
push
pinsrw
mov
jmp
or
add
sti
ljmp
scas
fsubr
fisttpl
xchg
add
mov
adc
xor
add
or
sbb
stc
jmp
imul
and
mov
data16
jb
push
js
rorb
pusha
ja
dec
mov
mov
lret
add
cmp
adc
enter
outsb
or
add
mov
jp
xor
pop
test
and
dec
add
push
mov
jp
clc
pextrw
dec
push
pop
add
sbb
into
add
inc
cltd
cmpb
shlb
je
out
lcall
jecxz
add
ret
pop
ret
adc
enter
test
xor
pop
pop
xchg
add
jo
fimuls
mov
adc
add
sub
jbe
add
pop
in
sbb
outsl
pop
adc
add
ja
inc
aam
in
add
fbstp
mov
pop
push
jns
xchg
ja
pop
aas
and
orb
popf
xor
insb
push
js
pusha
aaa
inc
jg
or
test
sub
inc
jge
push
cmp
notb
pop
cwtl
inc
iret
add
add
and
out
add
mov
push
adc
inc
add
loope
jnp
rolb
scas
scas
call
or
pop
lret
sub
js
mov
jb
lock
add
hlt
sub
imul
mov
jb
adc
testl
cli
int3
in
leave
push
xor
iret
add
mov
push
test
jg
mov
mov
ds
xchg
adc
inc
out
jle
mov
jae
icebp
add
loop
mov
rcrb
jmp
pop
dec
test
push
jns
dec
call
fdivrs
jmp
push
je
push
dec
add
ds
test
popa
loopne
or
or
ljmp
mov
leave
aas
in
xor
add
cmpsb
adc
lock
mov
les
or
add
in
inc
jae
add
lods
ss
js
insb
add
sar
add
fmull
pop
add
hlt
sbb
popf
inc
add
adc
daa
testb
xor
mov
stos
jmp
xchg
xor
add
push
add
cmp
repz
xchg
nop
push
test
je
dec
sub
push
sbb
or
cld
add
add
xchg
dec
andb
shlb
or
mov
jae
add
test
gs
es
or
adcb
sbbb
add
mov
inc
inc
add
mov
enter
cmpsb
mov
add
inc
int3
xchg
mov
xor
push
popl
inc
jmp
mov
arpl
xlat
push
add
and
inc
add
in
xor
add
inc
jle
leave
dec
push
add
inc
add
pop
mov
jne
nop
hlt
mov
and
push
das
mov
je
icebp
les
into
mov
scas
mov
fldl
ds
push
xchg
lret
mov
add
mov
jmp
add
jl
ficoms
add
xorl
idivb
sti
adc
jae
sarl
add
aam
orl
test
test
add
and
push
cmp
sbb
add
shll
inc
adc
add
fsubl
ljmp
push
add
jne
das
jg
jmp
mov
cli
clc
mov
sar
in
cmp
jb
add
dec
xchg
out
clc
ds
add
test
stos
pop
ret
inc
lret
pop
cmpb
fidivs
popf
gs
js
xchg
sbb
or
add
mov
push
pushf
jmp
aaa
shlb
xadd
loopne
mov
dec
in
test
ja
add
mov
cmp
jmp
xchg
pop
jae
lods
sbb
mov
mov
xchg
mov
and
mov
inc
push
ds
inc
loope
jb
addl
mov
fsubrs
scas
add
lock
shlb
ja
in
and
dec
test
cmp
mov
or
movl
adc
mov
ds
loopne
out
aaa
pop
arpl
je
mov
adc
dec
add
aaa
or
test
in
bound
add
fnsave
scas
fsubl
mov
xor
adc
push
into
pushf
mov
pop
lret
lock
xor
mov
cmp
sub
iret
imul
xor
add
imul
fbld
ja
mov
dec
call
push
insb
push
fistpl
loope
pop
adc
cld
in
add
cs
cmp
cmpxchg
add
ja
pop
adc
cvtpi2ps
es
decb
arpl
int
sarl
xchg
push
push
mov
xchg
push
fiadds
arpl
std
sub
add
sti
popf
orb
shlb
repnz
fimuls
jb
add
adc
pushf
xor
mov
xlat
adcl
rolb
ficompl
sub
add
pushf
pop
lret
cmp
jmp
clc
or
xor
cwtl
cld
mov
push
dec
inc
xchg
add
jp
dec
pop
test
add
cmpsl
add
data16
sub
cmovo
sahf
push
pusha
mov
into
add
push
sub
in
add
pop
pop
add
and
add
pop
loopne
mov
add
cmp
sbb
add
scas
adc
cmp
or
andb
in
cmp
inc
nop
lret
mov
cs
icebp
xor
test
aas
and
mov
jb
add
into
std
add
jno
jg
fldl
and
push
add
mov
dec
or
cwtl
jmp
inc
loopne
and
rolb
call
jg
push
mov
pop
add
movsb
xchg
rorb
push
add
cli
inc
dec
add
cltd
outsl
and
sub
je
mov
mov
adc
out
jmp
inc
mov
cmc
insb
pop
push
or
add
jl
out
add
adc
cmp
ljmp
pop
sti
xchg
jb
cmc
ret
add
sbb
and
jecxz
mov
mov
adc
cmp
pop
xchg
ficomps
ja
in
fstps
mov
andb
inc
mov
add
mov
add
in
rcll
cmc
orb
test
xor
cmp
mov
shl
add
imul
cltd
xor
mov
out
and
das
sbb
call
and
popw
idivl
fsub
stc
add
jae
or
ret
out
lods
imul
pop
mov
jmp
push
adc
sbb
cmp
hlt
xor
lret
cmc
stos
add
rcrb
lea
mov
push
sti
xchg
fisubl
jo
add
scas
mov
add
or
and
inc
lcall
add
clc
aaa
add
ds
mov
adc
push
mov
sbb
add
adc
dec
sub
adc
add
rclb
add
or
mov
dec
push
add
dec
pop
aam
fucomi
add
test
add
aas
add
add
add
stc
loopne
jns
daa
dec
push
xchg
scas
pop
add
out
dec
lock
or
lods
loopne
std
mov
clc
xchg
fcmovbe
dec
outsl
fstpt
sub
mov
ds
rcrb
sub
pop
faddl
aam
and
lock
and
pushf
inc
shufps
cmp
call
ja
ds
fldl
cmpsb
aas
push
test
int
pop
sbb
adc
verr
sbb
xchg
add
jle
fs
adc
fnstcw
xor
lret
adc
and
fdivs
jecxz
cmp
pop
and
fiadds
iret
popf
and
stos
mov
inc
add
call
inc
lds
or
cmpl
insl
fs
xor
icebp
dec
mov
in
nop
inc
int
mov
push
add
test
ds
xchg
mov
dec
flds
add
pop
sbb
add
jo
adc
or
in
jle
ret
popa
lcall
push
hlt
pop
test
stc
pop
fistpll
and
jmp
icebp
sbb
add
adc
pop
pushf
aas
mov
jg
cld
loope
lock
pop
icebp
jbe
jo
fcoms
add
bound
popf
mov
cmp
jbe
push
lock
xor
mov
sbb
add
and
push
adc
pop
add
cmp
rcll
xor
add
scas
lods
add
jg
add
imulb
xchg
xchg
add
movsl
rorl
fbstp
add
cld
out
andb
mov
lods
fstl
pop
mov
add
or
add
negl
xchg
add
add
das
xor
aad
je
add
loope
lret
hlt
js
dec
lcall
pop
test
fwait
mov
and
lret
add
mov
sbb
mov
cmp
and
sbb
imul
adc
sub
jb
lret
push
or
inc
loopne
jae
iret
and
push
repnz
push
imul
inc
frstor
fld
orb
movb
aaa
push
ret
sar
shl
inc
inc
mov
mov
sub
mov
imulb
cmp
outsl
lret
xor
add
jmp
dec
cmp
into
sbb
mov
push
sbb
cmp
and
sub
mov
xchg
jl
stos
adc
mov
or
jns
and
xchg
xchg
add
dec
pop
push
imul
push
mov
mov
test
stos
add
ret
cmp
test
add
cmovnp
add
in
call
or
sub
push
stc
add
bound
sub
mov
mov
lea
dec
mov
mov
add
jmp
inc
mov
dec
xchg
add
mov
test
pop
insl
xor
lods
or
and
push
or
jns
adc
add
cltd
sar
dec
xchg
inc
fsubr
inc
and
cmp
inc
dec
add
inc
iret
ficomps
insl
adc
frstor
mov
lret
sbb
iret
dec
shl
mov
pop
xor
xchg
cmp
add
aam
cld
dec
sbb
mov
test
loope
add
clc
mov
add
cmp
in
add
push
clc
int
popa
cltd
out
fcmovnbe
mov
sub
jb
pop
mov
xor
sti
ja
scas
add
bound
jg
sub
dec
mov
add
lods
sub
push
adc
push
in
into
add
and
inc
packsswb
dec
out
inc
pop
xor
add
pop
inc
inc
rolb
xchg
iret
jae
popf
or
add
aam
pop
arpl
dec
push
outsb
insb
lds
push
popf
jns
js
je
add
negb
xchg
xor
adc
mov
sub
pop
fildl
add
roll
fdivs
sarl
inc
push
xor
pop
inc
test
lock
popf
hlt
jle
fucom
dec
shl
pop
and
sbb
xor
js
ljmp
add
inc
out
xchg
int3
mov
sbb
xchg
cli
push
pop
add
rcrb
or
jle
seto
out
mulb
mov
jb
in
pushf
call
cmc
jns
sbb
mov
jnp
cld
add
inc
aad
mov
pop
mov
cld
or
adc
imul
add
sub
inc
std
sbb
inc
jp
add
sbb
push
mov
ret
shrb
add
cmp
hlt
jns
and
jg
jl
push
aaa
cmp
push
add
stc
or
popa
lahf
sahf
jnp
add
aam
je
fstps
cmp
jp
sub
test
mov
or
inc
aam
test
fiaddl
push
jne
out
xor
arpl
lahf
nop
xlat
cli
add
insl
add
xchg
add
pop
cmp
cwtl
test
imul
rclb
maskmovq
lock
add
sbb
mov
addr16
mov
xchg
loop
add
jnp
bound
xchg
jne,pn
dec
lods
aam
pusha
in
push
clc
cmpsl
sub
mov
pop
adc
out
pop
xchg
pop
cs
or
loopne
push
sub
mov
jg
mov
sub
sub
push
ja
pusha
nop
pushf
mov
inc
fistl
aam
add
jl
inc
dec
sbbb
cmp
pushf
pop
xor
add
fisttps
adc
loope
iret
pop
in
scas
jbe
lods
pushf
xchg
jnp
sahf
add
test
mov
add
and
stc
shl
xor
add
jp
movsl
sarb
or
shll
mov
aaa
inc
pop
sub
pop
add
sti
jmp
loopne
nop
lods
cmp
add
inc
xor
lret
mov
stc
out
push
fdivrl
nop
inc
pop
mov
jo
xchg
idivl
pop
cmp
cmp
test
pusha
mov
xor
add
xchg
cmpsb
cmp
gs
pop
repz
inc
jmp
es
add
pop
jecxz
fldcw
sub
lret
mov
or
lea
add
movsl
cmp
les
or
sbb
pop
dec
dec
add
sbb
pusha
mov
xchg
mov
aaa
xchg
add
pop
pop
les
add
xlat
cmpsl
jp
loopne
pop
add
sub
dec
and
icebp
rolb
lcall
xor
mov
add
push
out
sub
hlt
lds
sahf
pushf
sub
push
mov
add
sub
popf
sbb
pop
mov
lea
movsl
xchg
in
pop
push
cmp
mov
pushf
push
bound
stos
jb
cs
cmp
mov
cmc
outsb
mov
clc
push
jbe
pop
ljmp
add
xchg
leave
pop
jge
lret
sub
push
add
mov
in
mov
or
sub
test
jmp
mov
popa
inc
push
dec
add
pop
imul
int3
call
es
add
add
and
add
sti
cmp
cvtps2pi
sub
mov
cmp
and
movsb
ss
pushf
cmpsb
call
insl
dec
rol
fdiv
dec
add
test
mov
add
xchg
outsb
daa
adc
add
fimuls
or
xchg
rclb
les
xor
sub
pop
fwait
mov
or
lods
xchg
orb
cmp
insl
adc
adc
jbe
fiaddl
xor
int3
mov
lret
or
ja
push
add
jns
arpl
dec
outsl
add
and
sbb
clc
mov
iret
jmp
sub
rclb
xchg
dec
sti
test
and
xor
rcr
pushf
pop
add
jg
insb
jmp
jns
add
mov
pop
mov
notl
leave
xlat
daa
out
or
xchg
std
adc
ficoml
jmp
add
push
xchg
nop
pop
push
aas
add
dec
ret
fsubrs
xchg
sub
in
jge
or
xchg
cmp
jo
cmp
mov
popf
mov
jl
test
sbb
lea
ret
imul
stos
pop
test
jle
sbb
push
add
and
lods
ja
or
cmp
sub
int3
adc
cli
or
pushf
dec
aad
and
popa
pop
mov
loopne
cld
leave
or
psubusb
in
cmp
lret
add
sbb
cmp
inc
fucom
mov
sbb
push
add
int3
mov
inc
stos
jecxz
xchg
xor
fiadds
jno
jae
testl
js
and
xchg
add
packuswb
mov
out
ds
mov
pop
in
pushf
pop
xchg
mov
sub
add
inc
rclb
xor
sub
and
test
xor
je
and
call
push
test
add
cmpsl
xor
mov
repnz
pop
adc
xchg
lods
leave
xor
add
repz
add
es
fldenv
xchg
aad
cmp
cmp
dec
ljmp
ja
xchg
xchg
pop
pop
rclb
out
mov
stos
push
add
ret
les
add
lds
stc
lea
addr16
sbbb
mov
test
dec
call
sbb
adc
mov
jmp
out
cmpsb
out
inc
cmp
jo
arpl
subb
ja
popf
xor
paddw
pop
cmp
xchg
cmp
add
add
dec
aam
outsb
inc
cmp
mov
enter
add
incl
add
movsb
in
mov
fcmovne
setno
and
out
add
push
inc
in
push
sbb
std
fldl
push
in
dec
cmp
sbb
push
add
sbb
lods
insl
test
and
cmp
leave
mov
ss
outsb
jg
dec
pop
mov
ljmp
mov
stos
outsl
decl
roll
sub
movsb
pop
add
imul
add
popf
push
in
and
je
cmpsl
ret
mov
imul
adc
add
loopne
cmp
scas
fsubrl
inc
jae
int3
push
inc
pop
add
in
add
insl
movntq
pop
adc
jae
mov
roll
lahf
lret
sbb
xor
xlat
add
xchg
repnz
sub
cli
dec
mov
loopne
sti
andnps
add
jmp
lods
add
xor
xor
lds
jb
xchg
add
out
pop
movb
dec
push
jns
pushf
stos
push
out
int
add
adc
dec
dec
mov
add
in
xchg
inc
mov
movl
jle
mov
cwtl
inc
arpl
xlat
rorb
xchg
cmc
add
ss
mov
mov
xchg
jp
sbb
and
pop
jno
sbbb
mov
ret
repz
add
lret
movb
ds
popa
add
cmp
or
mov
fistpl
movsl
mov
sbb
dec
mov
dec
cld
hlt
add
in
add
sub
in
xchg
je
fdivs
inc
push
roll
std
stos
cmpsl
push
pop
push
loop
add
es
into
mov
inc
sub
jns
hlt
pextrw
add
popf
xor
pop
aaa
movsb
shll
fwait
ja
add
push
in
sahf
jnp
call
inc
enter
sbb
add
xor
idiv
xchg
inc
mov
pushf
xchg
or
xor
inc
jmp
xor
and
addr16
add
push
push
pop
pextrw
mov
aaa
jns
xchg
sbb
cmp
jb
push
jae
pop
or
pop
sbb
repz
add
sbb
jge
inc
dec
cmpsl
adc
add
rcll
je
and
push
subb
jl
popl
pop
xchg
xor
push
lods
jp
mov
fwait
mov
in
dec
mov
jno
add
or
std
cmpb
pushf
inc
subb
mov
enter
cmp
lea
xor
rolb
xchg
add
push
rorl
incl
inc
je
mov
aad
xor
xor
add
or
lods
mov
inc
out
frstor
push
fcompl
inc
nop
adc
add
dec
mov
or
fists
movsb
mov
lods
lock
pop
add
pop
enter
test
rolb
scas
stos
pop
or
ds
fdivrl
and
arpl
jb
add
jg
jbe
mov
sub
cltd
sub
filds
sbb
imul
add
sbb
lcall
movsl
add
sti
xor
push
sub
pushf
add
push
xor
fcoms
push
fbstp
mov
gs
test
pop
add
setne
xchg
pop
mov
dec
insl
inc
data16
orb
xchg
cltd
jp
add
mov
pushf
out
jae
int
ljmp
aas
jns
mov
xchg
jne
pop
cmc
push
sub
sti
add
aad
cld
or
jbe
test
and
out
cmpl
mov
pop
pop
popa
ds
fidivl
movsl
sub
int3
mov
cmp
jno
cli
mov
pop
aas
aad
pop
inc
loop
jo,pt
pop
or
or
movsl
jne
loope
popf
je
lea
jecxz
nop
rcr
lods
pop
mov
fisttpll
or
pop
fisubl
inc
stos
add
pop
push
jnp
mov
cld
mov
xor
sub
xchg
or
in
insb
adc
pop
cmpsl
lods
jl
add
jmp
bound
in
adc
lret
inc
mov
xchg
pop
fisubrs
add
in
jnp
mov
jle
loope
mov
add
int
data16
sbb
scas
outsb
xor
test
dec
je
sbb
push
adc
enter
cli
in
sbb
pushf
aam
imul
mov
xchg
push
push
mov
loope
loopne
ja
test
pop
or
pushf
jns
cmp
or
jb
xor
push
data16
pop
hlt
shll
push
movl
add
push
movsb
sbb
and
cwtl
aaa
negb
ffreep
daa
jmp
xor
mov
sbb
inc
icebp
fdivrs
cmp
mov
jg
icebp
mov
sub
inc
pushf
cli
out
fildl
or
rcrl
push
sbb
hlt
dec
fidivs
sbb
movsl
add
mov
jle
push
pop
das
mov
and
add
roll
push
inc
sub
jge
enter
bts
clc
cltd
mov
jbe
sbb
jg
cli
xchg
scas
call
cmp
adc
xchg
stos
test
push
jl
mov
jecxz
cmp
dec
dec
cld
sbb
add
cli
lahf
xchg
popl
push
or
push
std
add
ljmp
sbb
sarb
xchg
int
cli
dec
adc
fsubl
mov
mov
push
ror
ja
mov
mov
add
rclb
push
imul
cmp
sbb
xor
mov
add
pop
fsubrs
adc
push
push
sbb
add
adc
fwait
testl
fcoml
gs
pop
add
sbb
loopne
mov
ds
xor
lret
pop
jno
jno
cmp
scas
jnp
jle
aas
xor
push
lcall
out
xor
mov
add
je
cmc
mov
pop
outsb
popf
jmp
xor
loope
sti
pop
jecxz
jg
add
into
aas
and
dec
cltd
push
inc
mov
rorb
popa
pop
and
stos
add
hlt
sbb
fldl
inc
xchg
inc
into
jl
xchg
pop
mov
lea
jp
jns
add
sbb
xchg
jle
sbb
ja
pop
repnz
or
xchg
mov
push
movsl
in
sahf
add
stos
por
loop
add
mov
sbb
cs
xor
out
and
fwait
push
pusha
fsubrp
push
fiaddl
movntq
adc
jo
add
dec
sbb
jg
stos
add
dec
push
push
jmp
xchg
js
cmpsl
mov
jno
movl
in
movb
pop
movsb
push
enter
add
in
add
andb
adcb
cmpb
pop
mov
add
or
xchg
roll
xor
nop
in
add
fwait
mov
add
jnp
cmp
and
pop
or
pushf
ret
xor
add
jb
cs
xchg
mov
test
idivl
xchg
xchg
dec
fstl
sbb
lock
pop
fsubrs
dec
jae
shlb
cmc
mov
rcll
and
pop
outsb
lds
pop
push
jge
inc
jmp
add
jae
sub
and
movsb
mov
int
push
sarl
lea
shrb
mov
popa
js
add
pop
out
aaa
in
add
push
decb
xor
lcall
clc
mov
in
addl
int
cmc
cmp
push
xchg
inc
mov
add
pop
and
adc
les
aad
je
push
xor
mov
cmpsb
mov
ja
sub
adc
xor
hlt
adc
push
jge
add
fisubrl
lods
lahf
popa
enter
inc
add
subl
decl
fsubl
dec
sbb
leave
xchg
xor
add
jmp
out
loopne
pop
cmp
sbb
repnz
shlb
loopne
lret
sbb
jle
sbb
pop
mov
mov
xor
xlat
pop
sub
inc
jne
loopne
repnz
out
add
stos
rcr
mov
xchg
pextrw
adc
push
iret
add
or
mov
hlt
add
ja
cmp
mov
xor
sub
fdivs
cwtl
mov
daa
push
and
add
cmpsb
jmp
sbb
test
and
cmp
loopne
add
mov
bound
loop
add
or
push
vmwrite
mov
add
dec
cmp
adc
cmpb
fiaddl
dec
add
pop
xchg
fwait
adc
inc
shl
inc
add
jp
mov
jmp
popa
movsl
push
clc
cmp
adc
fwait
and
inc
jl
cmp
or
xor
insl
shr
ja
add
push
nop
cwtl
pop
mov
movb
push
add
jbe
cmp
pop
movd
js
inc
lret
sub
or
out
sbb
inc
pop
pop
add
and
mov
sbb
test
test
call
push
outsl
out
push
adc
lock
or
sarl
xchg
mov
pop
xor
mov
decb
fcompl
loop
test
mov
add
sub
dec
sbb
add
add
pop
int3
shll
loopne
add
jo
push
dec
in
adc
xchg
xchg
add
shrl
outsl
mov
pop
dec
jbe
mov
xchg
cmpsb
inc
jle
hlt
mov
add
jmp
mov
xchg
add
test
pop
cmpsb
mov
idivl
cmpb
xchg
and
out
call
add
adc
addr16
mul
aas
icebp
jge
loop
mov
and
pop
or
pop
push
dec
or
test
sub
pop
bound
push
add
xchg
add
add
mov
loop
push
xchg
hlt
das
sahf
mov
push
add
jns
shrl
xlat
andnps
js
cs
sbb
test
pop
cwtl
push
xchg
and
cmp
pop
dec
add
push
stos
outsl
pop
sbb
jnp
sar
jae
cmpsb
cs
mov
pop
lods
pop
sub
in
add
mov
xor
sub
icebp
cs
push
pop
xchg
add
mov
jmp
sbb
shl
mov
jp
in
testb
add
fldenv
inc
add
xchg
add
pusha
outsl
aas
mov
sub
clc
aas
mov
add
xor
add
cmp
inc
and
or
in
scas
sub
daa
fwait
int
repnz
call
and
cmp
mov
adc
add
sbb
ljmp
xor
fucomip
leave
mov
jno
xchg
or
add
inc
clc
cmp
add
out
push
push
push
cmp
outsl
mov
xor
and
dec
stc
inc
mov
cwtl
lods
add
xor
add
dec
ss
daa
add
cld
cmpb
idivb
inc
push
mov
fwait
andl
mov
sub
icebp
in
call
into
push
in
daa
sub
adcw
imul
dec
mov
cmp
mov
xor
ds
add
push
mov
pusha
clc
fmull
add
mov
push
inc
arpl
dec
mov
loop
jmp
xor
and
mov
push
add
mov
sub
outsl
fadds
push
adc
add
pop
shlb
loop
shll
sbb
sbb
inc
lock
xchg
inc
cwtl
xchg
sub
mov
lock
and
xchg
add
xchg
adc
jnp
shll
lahf
add
fistps
fstpl
inc
dec
nop
aad
ror
shlb
movsb
in
add
repz
pop
int
dec
jne
inc
xor
sti
xor
sub
jnp
add
fcmovnbe
inc
push
pop
bound
mov
loopne
lahf
or
out
ss
movb
aaa
insb
mov
xchg
insl
mov
jge
cmovae
std
add
add
pop
test
sbb
xor
loopne
and
negl
movsl
inc
rcl
mov
sub
jns
add
scas
sub
inc
add
sbb
clc
fldt
add
lock
adcb
std
clc
push
adc
mov
dec
lods
jae
dec
add
incb
dec
shr
push
mov
test
add
and
xor
xlat
fnstenv
inc
inc
pop
mov
pusha
push
pop
push
cmpsl
mov
cmp
sbb
add
jne
rclb
add
mov
lcall
adcb
push
sti
mov
rcl
sub
data16
imul
inc
jnp
cld
or
vxorps
notl
lea
add
xor
aam
or
aas
shlb
aas
pop
add
cwtl
sbb
sub
jbe
cmp
add
xorl
lcall
loopne
sti
mov
mov
mov
dec
cmc
or
imul
test
inc
and
ljmp
sub
rcrb
or
inc
pop
xor
mov
out
loope
jb
add
sbb
imull
pop
inc
pop
hlt
in
push
test
sub
fadds
jmp
nop
fiaddl
add
pushf
xor
push
lret
popf
xlat
adc
loope
cmp
adc
sarb
cli
add
pushf
les
cmp
mov
pop
jnp
pop
dec
insb
out
jmp
fisubrl
add
pop
xor
xchg
sub
popa
cmp
shr
fldenv
imul
and
push
jo
sbb
cmp
add
mov
shlb
jo
jge
out
xlat
mov
add
test
fsubs
add
dec
pop
mov
cmp
hlt
insl
adc
aas
loop
and
mov
pop
js
push
mov
and
ret
add
push
pop
or
icebp
push
add
ljmp
cmp
popf
clc
add
pushf
outsl
loope
dec
pop
sbb
cltd
jnp
in
mov
int3
je
add
adc
aaa
jmp
sub
mov
or
and
rorl
dec
pop
jge
pop
add
cmc
mov
add
jecxz
ret
and
loope
add
xchg
pop
pop
mov
sub
out
mov
in
jg
add
stc
push
or
nop
dec
ja
add
aam
rol
jnp
pop
pop
pop
loope
aaa
pop
mull
fstps
add
ja
pusha
and
mov
test
push
mov
cmpsb
test
xchg
xchg
imul
scas
sbbb
or
add
push
add
in
add
mov
loop
shll
fnstcw
out
add
outsl
cmc
jge
movb
xchg
push
andb
cmpsb
cmp
inc
add
push
lahf
push
pushf
ljmp
add
int
cltd
jo
add
ds
or
xor
pop
and
rcl
sbb
nop
daa
js
add
cmpsl
rolb
sbb
sub
mov
xchg
push
pop
sbb
cwtl
adc
add
or
repnz
mov
aaa
xchg
js
add
movsl
sbb
cmp
fcomi
add
cmp
jo
add
mov
jnp
test
into
inc
adc
mov
faddl
sti
push
inc
xor
mov
jne
push
lcall
mov
clc
lret
call
dec
sarb
lcall
dec
mov
incb
into
mov
fisubrl
jo
jg
cmp
sti
push
mov
cmp
pop
shll
jp
sbb
add
pushf
xorb
or
add
xor
add
mov
adc
sbb
fistpll
dec
sti
mov
adc
outsl
push
sbb
es
xchg
pop
testl
jecxz
add
popl
push
push
push
mov
dec
jo
add
repz
sarl
outsb
fdivr
cs
test
pop
push
mov
fwait
cwtl
pop
push
sbb
xchg
cmpsl
add
bound
lods
sbb
pop
clc
add
pop
xchg
arpl
and
xor
jg
pop
jnp
or
sbb
or
idivl
add
scas
adc
orb
mov
mov
nop
cmp
jnp
pop
pushf
add
int
xchg
lock
mov
insl
mov
xchg
test
jne
sub
repz
add
cmp
lods
aaa
ret
jbe
rolb
xor
movsl
add
test
mov
push
in
adc
jae
clc
mov
push
pusha
mov
add
xchg
fs
jbe
push
cmc
arpl
out
add
out
mov
pop
les
out
out
insl
icebp
dec
jne
ss
je
fstl
fwait
js
imul
add
xchg
ss
cmp
add
imul
jl
add
ljmp
cmpxchg
and
mov
xchg
or
leave
adc
mov
fdivr
mov
movsb
mov
cmp
pop
jle
pop
xchg
nop
inc
out
loopne
loop
add
and
inc
pop
sbbl
loopne
movsb
mov
sub
cmp
les
xchg
cmp
lock
mov
add
cmp
add
fwait
adc
xor
cwtl
jns
add
push
test
rclb
add
je
dec
add
sbb
dec
pusha
jne
fdivrl
inc
fnstenv
xchg
and
dec
add
clc
mov
das
ljmp
add
push
sub
inc
add
push
movsl
pop
idivb
std
sbb
adc
testl
aam
pop
adcb
push
inc
mov
test
out
clc
scas
movsb
sub
add
imul
inc
lods
jg
add
push
lret
testb
cmp
mov
add
mov
fists
sbb
mov
cmpsb
roll
sub
sahf
psllq
mov
popa
cmp
sbb
sub
xchg
jne
add
xchg
inc
jg
stos
add
cmp
pop
shll
ss
lcall
lahf
sbb
mov
roll
cmpsl
sub
insl
or
lods
add
fsubrp
jbe
add
sbb
sbb
paddusb
std
mov
pushf
add
push
fwait
mov
inc
frstor
out
add
adc
into
daa
in
andl
fs
and
mov
icebp
add
les
add
fdivrl
repz
sub
inc
inc
fcomi
sahf
or
andb
jle
sbb
nop
es
lods
add
lods
jge
push
and
push
fisubl
mov
mov
hlt
cmpsb
lods
pop
adc
add
scas
enter
pushl
mov
add
adc
mov
aaa
das
xor
dec
and
add
push
xchg
xchg
add
sbb
push
cltd
inc
add
push
mov
sbb
lods
sbb
dec
adc
repz
lret
pushf
out
mov
aam
loop
data16
les
ret
arpl
aaa
addb
clc
push
and
ja,pt
scas
cwtl
adc
mov
shll
xchg
ret
push
out
repnz
xchg
push
inc
add
dec
push
filds
xor
cmpsl
xor
mov
gs
psadbw
test
push
in
add
fiadds
mov
out
cmp
adc
pop
mov
and
mov
enter
and
mov
cmp
lods
cmp
xchg
push
loop
loopne
mov
add
test
sub
lret
sbb
pop
dec
mov
dec
fsubl
add
mov
inc
cmpsl
add
lea
cmp
jae
stos
icebp
test
jle
pop
arpl
add
adc
in
repz
ret
rcll
add
ficoms
mov
hlt
test
adcb
pop
sbb
and
shll
add
jae
push
shlb
push
mov
xor
xorb
popf
pop
add
gs
and
mov
jmp
dec
ret
testb
pop
repz
outsb
popf
add
mov
xor
pop
in
add
fistpl
add
sub
nop
outsl
rorb
adc
or
pop
mov
jo
push
stos
sub
mov
or
lock
nop
add
jg
fisubl
xchg
aam
int
push
out
jbe
or
bound
add
loope
fiadds
imul
call
xlat
add
push
inc
pop
inc
jecxz
add
push
popf
fsubr
les
call
mov
leave
nop
sub
bound
cli
pop
aas
push
movsb
inc
int3
mov
push
stc
cmp
xchg
das
dec
imul
ds
ss
jno
scas
bound
int3
push
add
in
xchg
aaa
mov
jl
add
es
fisttpl
and
or
je
add
cld
add
pop
jg
add
fwait
dec
inc
or
jle
test
popf
adc
add
push
lds
and
add
xor
ljmp
je
add
lods
xchg
adc
imul
adc
add
add
and
imul
cmpsl
and
aaa
adc
mov
in
add
push
ds
fisubrl
jno
add
push
leave
jno
or
mov
or
add
jmp
daa
cmp
sbbb
jl
add
push
or
mov
adc
mov
loopne
mov
inc
add
int
mov
lea
add
pusha
sbb
cmp
mov
add
repnz
xchg
pop
push
loopne
mov
pop
ss
cwtl
add
jae
ret
cld
mov
cmp
xor
adc
fistpl
or
pop
pop
cmp
aaa
hlt
cmp
cmp
adc
add
jnp
lock
out
xor
xor
add
add
add
mov
iret
xchg
sbb
imul
inc
inc
test
stos
adc
movsb
mov
inc
subl
add
pusha
xchg
mov
leave
add
gs
lock
mov
mov
inc
es
jl
ret
out
sbb
fisubs
add
jbe
in
rep
pop
stos
cld
xchg
jnp
dec
add
jo
lods
call
inc
add
sub
add
add
mov
sbb
sbb
pushf
into
xor
add
test
push
cmp
mov
insl
jge
xlat
loope
sub
outsl
or
jecxz
sbb
jnp
push
cwtl
mov
pop
sbb
sbbb
outsl
sbb
add
xchg
fs
xchg
lea
fnstsw
add
insb
push
outsl
add
xorb
add
cmp
shl
mov
outsl
jnp
sbb
lods
add
xor
aam
adc
aas
push
lahf
sbb
jbe
inc
outsb
rol
adc
in
and
ja
and
add
mov
enter
in
pop
stc
xor
pop
xchg
jmp
sbb
or
cmp
add
jle
add
cld
popf
frstor
push
dec
add
push
jp
call
hlt
psubw
scas
jmp
je
repz
dec
fs
cmp
add
adcb
fcomps
add
addr16
shll
pop
dec
xlat
test
jno
inc
aaa
pop
outsl
add
mov
add
mov
pop
daa
je
sbb
sbb
lcall
xchg
testl
mov
jbe
inc
shll
xchg
push
add
lret
xchg
scas
dec
je
add
es
pop
cmp
repz
sbb
loope
arpl
push
and
or
adc
insb
ja
lods
call
or
nop
into
cmp
inc
cli
rolb
lods
movsb
movb
mov
mov
in
lcall
in
inc
cmp
sti
mov
sbb
cmp
sub
sbb
loopne
add
inc
rolb
cwtl
std
mov
or
inc
jns
add
imul
xchg
std
add
add
loop
adc
sub
mov
sub
ds
add
or
add
sub
add
fucomp
pushf
jge
rorb
lods
xchg
push
mov
add
in
and
xchg
pop
sarb
add
adcl
add
push
clc
stos
pop
add
and
out
pop
mov
lcall
sbb
mov
pop
fidivl
sbb
xchg
out
xor
bound
xchg
push
stos
iret
push
popa
or
cmpb
mov
cmp
sbb
pop
fwait
fs
icebp
enter
fnop
inc
mov
je
cmpl
push
cmp
xor
add
lcall
nop
lret
call
negl
and
or
xchg
rolb
adc
jnp
outsl
pop
jo
xchg
push
clc
add
out
repz
mov
cli
nop
loopne
adc
popl
jl
sti
ljmp
out
in
lock
faddl
movsb
or
cmp
orb
and
cmp
das
mov
daa
jge
mov
cs
cs
push
jecxz
sbb
pop
pop
addl
rorl
jp
mov
ljmp
insl
inc
mov
add
dec
cmp
les
pushf
and
xlat
in
sbb
xchg
adc
xchg
or
fsts
rolb
sar
aam
int3
dec
test
xor
imul
mov
push
lea
xlat
iret
fnstcw
lds
push
imul
ss
pop
and
outsb
pop
jb
adc
mov
add
stos
and
enter
in
in
jnp
loopne
xlat
push
and
fs
lret
imul
add
inc
mov
and
and
daa
add
and
lret
in
pop
stos
pop
xchg
nopl
push
xchg
or
cld
adc
sub
outsl
loope
fmul
sub
add
mov
fsubl
mov
push
enter
pop
adc
mov
pop
dec
frstor
xor
ja
sub
ds
cmp
push
stc
lods
xchg
add
jmp
sbb
xchg
ljmp
in
js
cwtl
jmp
loope
insl
xor
roll
mov
xchg
add
pop
shrb
push
sbb
xchg
in
stos
cmp
pop
add
xorb
inc
les
repz
xlat
and
pop
mov
add
in
call
jae
lahf
imul
sti
scas
mov
sbb
insl
add
fidivs
cmpsl
cwtl
cmp
xor
xchg
js
pop
iret
cld
faddl
shll
jno
add
mov
mov
push
and
sub
jecxz
push
add
ja
lock
mov
xor
pusha
ret
mov
lds
fldcw
push
or
stos
xor
jns
jb
add
cld
cmpsl
xchg
pop
fisttpll
aaa
mov
mov
inc
jecxz
add
stos
sbb
add
les
pop
or
sbb
dec
cmpsb
int3
dec
xchg
mull
add
jb
fscale
add
lods
push
xlat
push
and
loopne
jno
add
dec
into
cwtl
fstpl
mov
add
lds
xor
out
sbb
sbb
lea
pop
and
insb
jp
xchg
roll
inc
nop
push
fs
xchg
add
das
push
or
mov
push
outsl
mov
mov
movl
pop
es
and
mov
addl
in
cld
popf
pusha
add
in
sub
repz
and
movsl
pop
imul
add
js
mov
add
fsubrs
pusha
cmp
add
arpl
fwait
out
push
popf
add
test
hlt
pop
add
adc
push
add
js
mov
pop
bswap
sub
mov
lcall
imul
add
adc
mov
hlt
shrb
push
or
xor
adc
cltd
add
icebp
jg
add
mov
add
inc
xor
cmp
xchg
sbb
aas
in
mov
ret
dec
inc
pop
jbe
jns
fldenv
sahf
leave
clc
outsb
stos
add
xor
aam
xor
imul
rorb
std
mov
add
adc
nop
pop
pusha
js
and
inc
cwtl
lcall
adc
xchg
lcall
jo
add
shr
sbb
out
push
jmp
in
xchg
add
or
or
push
jle
pusha
adc
sarb
push
pushf
daa
popf
or
imul
pop
clc
adc
pop
pusha
mov
inc
mov
int3
jg
add
mov
sahf
in
pop
cld
inc
in
test
add
sbb
jo
mov
xchg
and
out
jae
sbb
aam
orb
inc
pop
fwait
mov
jmp
rclb
inc
push
test
inc
or
int
js
add
in
out
xchg
add
test
mov
ds
dec
bound
pushf
xchg
sub
add
mov
iret
xor
mov
in
cs
test
push
fadds
xchg
fidivl
mov
daa
add
pop
adc
add
sbb
add
inc
or
push
arpl
popa
lret
jno
mov
mov
inc
imul
push
pusha
sub
shrb
dec
lcall
jno
jmp
negb
iret
mov
cmpsb
or
pop
cwtl
cltd
fistps
das
mov
mov
pop
adc
aad
jmp
fisttpl
popf
or
lret
cmp
lret
mov
dec
pop
cli
add
adc
add
lds
scas
or
add
add
mov
jmp
xchg
xchg
shrl
ljmp
add
testl
add
xchg
cltd
sub
jnp
outsb
mov
test
adc
sbb
mov
push
cwtl
gs
insl
std
test
jl
xor
jg
aad
push
ror
push
pop
and
pop
xchg
shlb
inc
add
data16
add
sbb
outsb
xor
adc
sbbb
mov
pop
adc
ja
sub
dec
and
pop
imul
cmp
movsl
add
ret
in
out
out
aaa
add
mov
jle
add
popa
in
clc
mov
orl
in
sbb
popa
pop
mov
fbstp
add
sti
push
test
xchg
lretw
push
jge
faddl
sahf
or
xchg
cmpb
scas
jg
fiaddl
dec
ja
in
repnz
lret
add
loopne
mov
jae
cli
in
movsl
fldl
shrb
ja
scas
push
fcompl
jbe
add
cmpsb
cmp
cmpsl
out
popa
or
js
or
gs
data16
and
mov
sub
sub
add
sub
stos
data16
aaa
les
mov
std
add
adc
and
lahf
add
adcl
jno
or
add
addr16
adc
insb
cmp
or
incl
mov
mov
ret
push
addl
jns
push
scas
incb
adc
mov
lret
repnz
cld
aad
jbe
dec
adc
add
add
add
stos
cmp
incl
and
ja
mov
add
imul
scas
movsbl
xor
xchg
inc
bound
jecxz
popl
add
mov
pop
pop
add
movlps
and
out
pusha
mov
add
inc
sub
pop
jge
add
xor
addb
insb
mov
cmp
rol
notb
jb
or
outsl
mov
push
sbb
adc
out
bound
lcall
arpl
ret
or
push
sub
pushf
cld
roll
std
sub
jne
sub
imul
pop
cmc
popa
add
pop
bound
fsubrs
decb
add
test
lods
adc
sbb
hlt
mov
jne
loopne
xchg
pop
add
out
mov
inc
pushf
lock
stc
fcoms
add
mov
jmp
cld
rolb
push
pop
arpl
std
movsl
push
jmp
lret
push
shrb
jne
bound
cltd
add
mov
rcrl
flds
jbe
dec
fsubp
cmp
add
out
mov
or
sub
mov
add
mov
sbb
stos
ds
out
add
pop
or
test
rorl
loopne
les
inc
pop
pop
subb
loope
std
pop
imul
sbb
xor
cmp
ja
add
mov
xor
mov
jg
mov
scas
mov
adc
add
lods
and
adc
add
push
bound
lret
pusha
xchg
add
sbb
and
movsl
push
rorl
lcall
jle
pop
les
xchg
test
mov
lods
and
popl
adcl
add
jo
cmpsb
icebp
jae
xchg
add
xor
or
pop
sub
lahf
negl
sbb
inc
pushfw
subl
mov
pop
sub
mov
rorb
nop
add
adc
scas
adcl
pop
dec
xorb
mov
adc
test
fnstcw
sbb
insl
pop
jb
push
add
loope
pop
out
mov
dec
fwait
popa
and
jmp
lock
loop
inc
adc
clc
mov
cmp
popf
add
or
shl
lds
dec
lock
push
inc
sbb
pop
les
push
icebp
js
cmp
push
push
mov
shrb
testb
add
shll
test
arpl
addl
outsl
jg
or
rclb
jo
add
pop
repz
push
call
add
enter
aaa
push
stos
lock
cmp
pop
inc
mov
add
outsb
call
jae
testb
popf
or
cmp
cld
add
lods
push
stc
movsb
mov
add
xchg
adc
aaa
add
pop
test
mov
sbb
xchg
add
or
stos
lret
mov
pushf
push
out
push
addr16
jno
add
push
xchg
xor
roll
cmp
in
std
mov
pop
add
inc
imul
mov
add
out
aas
orl
inc
jns
sbb
push
mov
mov
cmp
sbb
jno
mov
arpl
data16
and
add
jbe
pushf
aam
imul
aas
mov
pop
inc
arpl
sbb
mov
add
clc
dec
lcall
aam
sbb
lret
std
fnstenv
mov
push
rcrb
cmp
pop
popa
sahf
dec
rorl
pushf
xlat
cld
sbb
stc
mov
ss
add
dec
mov
add
loope
ja
cs
aam
adc
push
out
jnp
cmp
push
add
push
je
push
lock
mov
cld
adc
sbb
orb
ffree
push
and
andl
add
lods
push
add
test
int
imul
jp
cmpsl
lock
lods
cltd
push
add
jge
dec
hlt
sub
stc
sbb
rolb
ljmp
fldt
std
loope
rcrb
pop
cwtl
jge
add
out
cmp
insb
sarb
lcall
fidivl
daa
imul
stos
mov
sbb
fstpt
dec
repnz
push
ret
fistps
jmp
addb
shlb
mov
inc
std
add
push
in
jnp
mov
dec
bound
cmp
xorb
icebp
add
movl
ret
inc
das
outsl
mov
mov
add
mov
test
fs
decb
popf
les
cmpb
push
add
outsb
repz
and
cli
loopne
mov
push
iret
cld
jno,pn
jb
xchg
std
inc
mov
jecxz
mov
xor
sub
sbbb
xor
inc
ja
inc
imul
nop
mov
lods
jle
fiaddl
inc
dec
pop
cmc
pop
xor
and
add
lret
jns
add
into
push
push
xor
lock
add
mov
fldt
sbb
js
ror
fs
loopne
jmp
mov
inc
sub
lret
sub
push
inc
cs
aam
add
pop
xchg
and
add
mov
add
aam
in
mov
rcrl
andb
sbb
mov
clc
push
dec
jp
lds
push
jo
ret
mov
jnp
mov
pushf
adc
pop
loop
pop
push
xchg
clc
jg
outsl
cmp
incl
mov
sbb
mov
jl
pusha
xchg
subb
add
inc
pop
test
movsb
pop
je
add
push
stc
add
mov
ret
jmp
loopne
clc
add
arpl
adc
pop
push
mov
sub
leave
add
imul
jg
push
push
mov
iret
inc
mov
scas
add
aam
and
loopne
mov
add
fdivrl
mov
xchg
mov
jo
out
jne
adc
push
sbbl
int
loopne
adc
clc
mov
cmp
shlb
iret
pop
mov
fisubrs
insb
inc
push
pop
in
ljmp
adc
xor
xor
xorb
movsl
aam
popa
add
decb
addl
scas
jb
xor
fadd
jae
add
sub
adc
shrl
and
add
jle
mov
hlt
dec
add
bound
jp
mov
dec
and
aas
mov
gs
jle
orb
pop
in
dec
lret
rorb
cli
xchg
jnp
shlb
jns
scas
enter
inc
cmc
dec
and
mov
incb
data16
imul
push
movsl
pop
hlt
mov
add
scas
test
inc
aaa
shll
loop
aas
mov
lods
fiadds
push
fs
add
and
les
mov
jmp
push
push
mov
fnstsw
nop
add
jg
lahf
lret
test
jno
sub
mov
insb
aad
push
push
mov
mov
lods
addb
pushl
and
add
pop
enter
mul
jns
dec
mov
rcrl
adc
or
addr16
xchg
add
cmp
jns
add
imul
add
ja
out
add
int3
jg
add
xor
call
gs
hlt
xchg
sbb
and
pop
negl
mov
int
push
cmpsb
loopne
push
sbb
cmc
jp
sbb
jge
les
adc
fs
add
fidivs
sub
hlt
out
rorl
sahf
movsb
dec
jno
arpl
sbb
es
push
mov
add
lods
cmp
add
cmp
jb
inc
add
add
and
and
in
and
pop
in
dec
hlt
popf
enter
gs
cmp
and
mov
sbb
nop
adc
push
lret
dec
fmuls
jo
add
push
movsb
js
and
sbb
movups
mov
or
popa
aas
mov
sahf
mov
add
pop
insl
sbb
sub
cmp
orb
ret
dec
shll
add
cmp
pop
add
xor
ret
inc
inc
lret
add
cwtl
imul
repnz
loop
push
stos
mov
notl
jb
adc
cmp
addr16
inc
cmpsb
sti
mov
mov
xrelease
jnp
add
mov
les
xchg
pop
dec
push
rolb
jmp
or
clc
out
adc
inc
push
into
mov
jecxz
insl
in
add
jg
fstpt
mov
orb
mov
dec
pop
sub
xchg
je
sbbb
daa
cmpsb
and
loop
enter
dec
add
xchg
mov
dec
xchg
pop
xchg
pusha
sbb
jne
add
mov
add
and
loopne
incl
dec
test
mov
sbb
xchg
add
cmp
push
addl
jae,pt
xor
aad
aaa
js
add
imul
adc
dec
add
scas
jecxz
xchg
xorb
aas
lahf
jne
add
add
add
in
add
inc
inc
and
adc
jae
xor
add
loopne
pushf
add
or
mov
sahf
add
xchg
mov
cmp
les
dec
adc
testb
add
xchg
addr16
cli
inc
pop
dec
xor
mov
mov
jae
std
pop
cmp
inc
xchg
in
jmp
xchg
pop
pusha
pop
dec
xor
dec
xor
testl
mov
loop
loopne
add
sbb
rorb
mov
fiaddl
ljmp
pop
in
orb
push
push
mov
pop
daa
ds
popa
mov
mov
xor
dec
test
pop
adc
adc
dec
and
fs
sbbb
pushf
ds
outsb
fmulp
pop
arpl
aad
mov
jp
adc
clc
and
sbb
push
add
lcall
dec
pop
stc
xchg
adc
cmp
xor
sti
or
arpl
cmpl
inc
xor
stos
add
sub
subb
fwait
adc
sub
mov
mov
fists
push
or
add
dec
xor
pop
jg
add
dec
je
orb
mov
adc
call
outsb
add
into
or
jo
movsb
or
dec
arpl
loopne
or
test
and
roll
bound
outsb
int3
add
inc
push
sub
adcb
xchg
stc
add
adc
pusha
mov
sbb
loop
rclb
add
add
mov
dec
and
xor
xchg
in
add
push
stc
out
out
add
dec
or
loopne
rep
add
insb
inc
adc
xor
lcall
push
add
dec
add
mov
dec
inc
add
push
mov
jno
mov
add
adc
add
test
sldt
lods
hlt
dec
add
pop
inc
xchg
sub
shrb
in
test
imul
rcrb
pop
push
lock
mov
push
sub
adc
add
in
lods
pop
or
push
add
std
inc
sub
jg
add
jnp
sarb
cmp
testb
and
into
sbb
push
sbb
dec
sub
pop
clc
xor
mov
add
daa
mov
mov
adc
sbb
and
and
outsl
nop
jle
xchg
cwtl
xor
scas
clc
cmc
xor
sahf
loopne
sbb
out
xor
cmpsb
xchg
jl
add
lahf
xchg
outsl
xchg
call
mov
jmp
faddl
out
add
scas
add
jns
cmc
or
aam
gs
pop
pop
stos
loopne
inc
mov
push
pop
or
cld
pusha
add
imul
add
jns
gs
data16
jl
xchg
adc
loopne
idiv
add
rorb
arpl
out
imul
fs
add
pop
push
aam
xchg
pop
jo
fnstcw
fwait
cmc
cwtl
in
test
mov
inc
sub
inc
adc
add
out
cld
adc
and
std
insl
int3
add
cwtl
fistps
pop
jo
add
add
pop
daa
add
dec
add
pusha
mov
inc
add
int3
push
stc
pushf
hlt
add
stos
arpl
ljmp
xchg
and
popa
xchg
das
add
sub
dec
cmp
cld
sbb
enter
inc
movsb
ficompl
pop
jns
dec
filds
and
adc
repz
test
stos
add
std
sbb
add
adc
insb
add
sbb
sbb
jle
add
test
fptan
add
test
add
imul
add
fs
jb
add
add
and
mov
jb
inc
push
test
and
insb
cmpsl
incl
in
mov
mov
movb
xor
sbb
jp
subb
xchg
lods
negb
pushf
dec
daa
mov
mov
or
es
outsb
outsl
xor
jge
je
fstl
mov
mov
andl
cmpsl
rclb
cmc
inc
popf
add
cmp
inc
stos
inc
mov
push
lods
dec
jp
jae
xchg
pushf
stc
or
int3
mov
rcrb
stos
add
incl
cmp
xor
icebp
cli
lock
add
jo
loope
xchg
or
jb
adc
or
push
adc
jo
cld
sbb
mov
add
push
sub
add
fsub
mov
or
jns
pushf
adc
cwtl
ss
add
jmp
push
add
xor
inc
add
cmp
cmp
addr16
loopne
add
inc
push
pop
push
mov
add
fcmovbe
jecxz
xor
clc
jge
cli
add
mov
aam
enter
push
dec
dec
push
jne
add
movb
pop
pop
rcrb
into
jge
adcb
inc
loopne
add
mov
add
jecxz
rep
aaa
mov
push
push
test
add
enter
jne
pusha
add
movzbl
add
loop
or
pushl
sub
add
jne
cmpl
js
ja
xor
pop
pop
pop
leave
add
cltd
push
mov
fmuls
rcrb
loope
add
sub
cmp
cmp
mov
fs
dec
les
xor
pop
lret
pushf
mov
and
dec
out
or
scas
icebp
cmp
xchg
jg
cmp
add
icebp
xor
aaa
xchg
push
stos
and
lock
add
dec
aam
ljmp
fldl
or
inc
add
imull
ret
fcoml
jge
sbb
lea
lods
or
cmp
lahf
xor
lock
call
mov
cmp
gs
nop
add
sbb
and
pushf
or
shrb
add
fadds
cmpsb
nop
pop
and
sbb
out
jp
lock
or
jae
mov
mov
mov
jne
popa
pop
andb
sub
mov
sbb
into
xor
mov
push
pusha
adc
je
cmp
xor
add
add
adcb
les
add
inc
into
adc
sub
sbb
jmp
lret
add
imul
xchg
in
and
add
mov
push
or
cmp
cmpsb
or
inc
jmp
xor
add
insl
sti
add
mov
cmp
adc
mov
shll
lret
mov
cmpsb
push
mov
aam
es
mov
lods
add
inc
or
pop
pop
push
xor
or
wrmsr
push
dec
jns
adcb
jge
nop
xchg
add
pop
sub
inc
mov
add
add
test
fcmovnbe
xor
push
lea
push
rcl
inc
ret
xchg
mov
add
jns,pt
cmp
or
push
mov
add
in
adc
xor
add
ret
mov
movsb
mov
mov
pop
xchg
inc
push
into
inc
inc
loopne
push
dec
sub
js
add
rolb
push
inc
add
adc
jnp
leave
movsb
aas
hlt
add
or
cmp
pop
or
mov
lea
add
jmp
cwtl
sub
ret
and
shll
cld
and
add
repnz
add
adc
jmp
jp
push
fs
in
pop
cmpsb
mov
push
out
fcompl
pusha
arpl
out
insb
lret
sub
addr16
and
clc
add
lea
clc
xchg
inc
nop
cmp
enter
mov
sub
adc
or
lods
adc
xor
insl
or
xor
fmull
add
xor
std
cmp
bound
mov
pusha
sub
mov
das
les
clc
mov
add
mov
test
inc
adc
repz
shl
pop
test
xor
mov
mov
add
sbb
inc
fs
mov
sbb
mov
jno
sbb
mov
shlb
gs
inc
add
mov
shl
sub
add
add
pop
and
outsb
test
add
pop
iret
sbb
add
inc
mov
add
xor
call
rolb
pop
mov
inc
adc
xchg
mov
mov
sahf
and
shlb
push
mov
inc
out
add
mov
sarl
loopne
cmpb
jecxz
adc
lret
add
ret
jge
addps
sti
popa
rolb
mov
inc
adc
cmp
shr
xor
cmp
jno
jb
sub
add
lea
mov
fsubs
nop
cmpb
or
xor
dec
test
adc
add
adc
mov
adc
jb
inc
aad
dec
add
loope
xchg
jecxz
or
lea
setle
add
inc
mov
es
adc
loopne
fldenv
lock
jno
add
add
fidivs
test
sub
or
iret
mov
adc
jge
adc
inc
cmp
pop
and
sbb
sbb
jb
mov
sysret
andb
jmp
hlt
inc
or
clc
mov
and
jne
mov
add
push
pop
add
stc
aam
pop
icebp
mov
adc
sub
adc
rclb
jge
xchg
lock
or
or
or
sahf
add
push
pop
cld
and
sbb
push
rcrb
xchg
clc
rclb
lret
add
fldcw
mov
lcall
push
add
sbbb
loope
cmp
push
loopne
test
adc
rcr
sbb
adc
sbb
rorb
cmp
test
leave
add
test
in
add
mov
lock
push
or
sbb
repnz
sub
and
lahf
pop
add
imul
xchg
and
dec
xchg
add
aaa
test
xor
sbb
pop
movsb
js
sbbl
scas
mov
stc
add
sbb
ret
push
push
push
loop
orb
popa
adc
mov
cld
add
cmp
lock
jnp
dec
push
adc
add
add
xor
cmpl
add
je
add
test
mov
roll
inc
push
cli
rep
fistps
add
xor
add
push
pusha
repz
or
push
call
add
add
bound
dec
add
inc
dec
push
jp
add
popa
daa
or
and
aas
sbb
ss
and
inc
mov
or
movsl
in
cmp
xor
leave
ret
xchg
in
flds
or
inc
inc
push
xor
je
mov
imul
scas
or
cwtl
cmp
sbb
sub
je
push
pop
daa
ja,pn
xchg
jg
lea
push
push
and
pop
orl
in
enter
push
iret
aas
shlb
or
stos
mov
data16
orl
or
and
and
add
add
testl
xor
add
adc
repnz
clc
aaa
rcrb
mov
rdpmc
cmpsb
cmp
pop
or
add
adc
cld
xchg
mov
rolb
sbb
loopne
rolb
push
decl
add
pop
imul
shl
sti
dec
jbe
add
je
push
xchg
jecxz
and
test
addb
pop
add
jmp
in
push
popa
lods
shlb
scas
leave
push
add
addl
call
mov
data16
adc
mov
in
add
lea
je
push
inc
call
xor
add
je,pt
orb
xor
push
jmp
pop
cmp
mov
clc
mov
adc
add
sti
xchg
xchg
insb
rcll
adc
cmp
push
iret
jge
dec
push
inc
hlt
scas
rolb
add
cmp
add
enter
sbb
sub
ret
rolw
jae
or
adc
push
add
cmpb
add
out
or
enter
and
outsb
sub
notl
cltd
pop
test
jmp
pop
push
add
xor
in
lar
jbe
pop
push
aad
cmpsl
add
xor
sbb
pusha
aas
push
push
lcall
inc
pop
idivb
push
lret
adc
inc
in
pop
xchg
dec
jae
pop
xor
dec
or
clc
shl
stc
push
add
movsl
pop
sub
and
jnp
xchg
cli
movsb
in
push
add
sbb
add
xor
cmp
ret
or
inc
jecxz
adc
push
lcall
push
push
push
sbb
xchg
xchg
mov
mov
jno
test
add
sub
sub
mov
add
and
mov
add
mov
sbb
push
xchg
loopne
int3
in
add
mov
push
jle
into
add
in
iret
rol
enter
mov
mov
ss
add
jmp
pop
pop
sbb
jge
jne
stc
clc
adc
ficompl
add
and
or
loopne
sub
test
pop
mov
inc
or
sub
lret
in
sbb
pop
fwait
add
cmp
test
je
outsb
add
jge
adc
push
dec
or
or
dec
and
xor
push
push
jo
pop
pop
push
sub
mov
jmp
cmp
shrl
lret
lods
and
test
sbb
inc
inc
or
subl
scas
xchg
testb
xchg
out
bound
dec
jo
out
mov
aas
roll
xor
jg
push
fwait
jmp
arpl
pusha
ja
leave
lret
jge
add
test
aas
roll
adc
notb
outsb
inc
mov
mov
and
jno
or
int3
leave
and
push
jmp
mov
or
or
xorw
sbb
dec
inc
add
pop
shrl
insb
outsl
dec
es
mov
pop
mov
inc
pushf
add
stos
outsl
testb
mov
icebp
mov
shlb
cmp
or
adc
repz
ret
dec
insl
xchg
sbb
push
and
sbb
mov
inc
cmp
orb
jl
add
add
shr
loop
add
push
lea
mov
add
cmp
push
add
testb
int3
sbb
lret
sbb
test
out
or
das
and
cmpsl
xchg
or
and
scas
mov
dec
xchg
jnp
mov
rolb
lock
sub
gs
ja
inc
jo
insb
add
popa
je
outsl
push
outsb
hlt
add
mov
out
hlt
das
add
fsubrl
pop
push
push
cmp
fldenv
add
and
iret
cmp
outsb
xorb
jge
popa
add
sti
imul
dec
sbb
sub
popa
add
jmp
pop
dec
push
daa
cmp
rorb
jae
jg
add
jbe
icebp
in
testb
sbb
js
push
ja
cmp
adc
imul
fsubrs
inc
jp
imul
addl
add
popa
outsb
fs
sti
andl
sbb
pusha
ljmp
jl
push
imul
inc
mov
arpl
xchg
push
enter
cld
sub
stos
mov
cltd
cmp
push
add
push
and
dec
dec
xor
fs
dec
pushf
sbb
movsl
sbb
mov
pusha
mov
jp
jl
sub
mov
xor
movsb
or
xor
repnz
in
or
ret
mov
arpl
sbb
rolb
aam
dec
sbb
inc
mov
sub
rcl
xchg
adc
add
dec
shl
not
sub
jo
pusha
jge
or
or
mov
xchg
mov
lds
sub
rep
add
mov
shlb
mov
ret
ljmp
xchg
bnd
sub
or
popa
ret
adc
or
adc
into
data16
sub
insb
sub
add
and
adc
mov
lock
add
and
rclb
pop
movb
add
add
push
cld
rol
and
js
add
popl
add
add
push
push
push
lea
cmp
push
push
jae
scas
pop
sahf
dec
mov
lret
xchg
pop
mov
lret
inc
and
ret
cmp
pushw
fs
or
lea
push
lds
dec
or
lock
add
mov
fldl
dec
adc
xlat
fadds
ss
hlt
pop
jmp
imul
push
into
add
adc
push
pop
pop
pop
cwtl
loopne
add
rorb
imul
cwtl
insb
xor
cmp
fs
dec
cmp
xchg
jb
inc
jns
add
je
hlt
outsl
jns
jno
std
jmp
imul
insb
in
dec
sub
or
xor
add
mov
mov
push
mov
mov
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
add
sbb
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
xor
inc
call
adc
call
jb
ret
add
jne
mov
inc
adc
ret
pop
pop
movzwl
dec
je
dec
je
shl
jmp
mov
push
add
inc
inc
jmp
pop
mov
inc
mov
scas
push
call
xchg
xor
scas
jne
decb
je
decb
jne
inc
pushl
scas
jmp
decb
je
push
push
call
mov
lods
test
jne
mov
ret
and
add
add
add
mov
add
and
add
xchg
add
add
add
