sarb
cld
imul
lods
mov
mov
cmp
jmp
xor
test
loope
int3
sti
aad
dec
sub
and
mov
and
ja
jle
or
daa
sbb
in
divb
sti
js
mov
aas
out
sbb
mov
mov
movsb
jge
mov
scas
cmp
xchg
loopne
aas
dec
adc
mov
xor
data16
inc
jmp
cmp
negb
rolb
xchg
lcall
jns
pop
addb
inc
js
add
test
pop
add
cmpsb
ficoml
xor
mov
xor
mov
mov
flds
add
inc
mov
xlat
lods
repz
or
xor
xchg
loope
inc
mov
jl
cmpsl
xchg
in
adc
cmp
sahf
into
fdivrs
jle
call
inc
mov
mov
insl
pop
sbbb
fmuls
or
mov
insl
dec
adc
inc
gs
cmp
cmc
cmpl
dec
or
jnp
or
or
or
out
push
inc
test
mov
in
mov
sarl
clc
pop
adc
testl
jbe
pop
dec
or
ffree
push
fnsave
pushf
loop
nop
add
popl
aad
mov
scas
dec
clc
lods
mov
repnz
xor
jno
pushf
lret
xor
or
das
jnp
cs
mov
push
lret
cld
mov
lea
mov
push
inc
jae
pop
jnp
das
pop
or
sahf
lret
data16
aam
sub
out
cmp
loop
sub
imul
xor
and
lcall
sub
cld
rcrb
cld
jne
js
push
in
insb
sbb
jne
loop
inc
cmp
arpl
xor
dec
aad
push
pop
adc
and
out
rolb
imulb
aas
mov
imul
loop
or
xor
xchg
inc
mov
lods
enter
inc
lea
cli
roll
push
jns
sbb
cs
push
mov
in
call
sbb
jecxz
jo
aad
in
mov
mov
test
test
jge
xor
lods
xchg
leave
fistl
les
add
stos
addl
cmp
mov
or
pop
cmp
xlat
mov
cmp
lock
das
and
mov
adc
xor
push
push
jb
adc
pusha
scas
scas
nop
cs
test
pop
mov
fdivs
lods
mov
mov
jle
mov
add
push
in
jno
shrd
cli
es
popf
and
loop
adc
mov
jno
ja
imul
sbb
cltd
jne
sbb
adc
push
fdivrl
iret
adc
into
mov
jne
cmc
pop
push
lret
aam
cmpl
dec
rolb
arpl
inc
cmp
dec
adc
cltd
shll
inc
pop
jnp
aas
cmp
cltd
ljmp
insb
mov
fistps
xchg
push
cmpsb
test
xor
js
jno
adc
push
mov
adc
aaa
and
adc
pusha
and
test
iret
mov
out
int
fidivrs
rorb
dec
scas
inc
push
xchg
sbb
dec
xchg
inc
push
inc
mov
cmp
dec
aaa
mov
inc
enter
rolb
loop
inc
inc
clc
pushf
enter
daa
mov
fldl
imul
jg
data16
jmp
imul
inc
incl
mov
xchg
pmullw
jnp
and
jecxz
repz
dec
mov
ret
xchg
add
stos
cltd
stos
lahf
cmp
and
jmp
mov
jmp
sbb
lods
xlat
outsb
jo
xor
xor
mov
jecxz
or
dec
or
int3
into
sub
addr16
mov
scas
imul
arpl
xchg
jle
test
sub
out
pop
sahf
les
fsubr
push
es
sub
mov
and
cmp
mov
in
movsl
dec
icebp
add
insb
scas
push
cmp
mov
mov
push
inc
jb
repz
ficompl
cwtl
add
sub
popa
test
pop
mov
cld
push
mov
xchg
bound
adc
lcall
cmp
mov
xchg
lret
push
mov
test
rclb
les
in
mov
rorb
lret
das
inc
arpl
or
xchg
cmp
cs
test
sub
stos
xchg
stc
mov
mov
mov
fimuls
lret
fstpt
jns
sbb
stc
xchg
mov
pusha
mov
cs
or
sub
inc
insl
dec
and
sbb
mov
or
or
fisttpl
cmp
pop
and
lcall
xchg
das
or
stos
jne
xor
jns
mov
into
movsb
cwtl
xchg
popf
shlb
fldt
ss
shll
ja
adc
inc
ret
mov
dec
leave
inc
xchg
and
popf
sub
mov
xlat
mov
adc
ds
outsl
les
cmp
sbb
mov
mov
rcrb
xor
mov
push
rorb
cmp
inc
dec
push
adc
or
loopne
mov
lods
adc
add
movsb
or
adc
rcrl
rorl
or
mov
xor
orb
fmuls
xor
inc
push
outsb
cltd
loop
cmpsb
inc
sub
push
push
jle
shrb
xchg
dec
int3
loopne
xchg
mov
loopne
inc
ja
and
or
int
adc
int3
fwait
add
mov
mov
test
push
push
cmp
lods
mov
pop
push
cmp
inc
lret
mull
ret
push
ret
cli
mov
scas
lret
jg
mov
test
jo
gs
sub
dec
outsb
sub
mov
mov
pushf
into
insl
jnp
adc
addr16
test
xor
movsl
cmp
movsl
mov
pop
mov
adc
cmpsb
das
ret
fdivs
stos
das
cwtl
inc
fisttpll
or
in
movsb
mov
sub
add
push
xchg
mov
sahf
xor
xor
push
dec
xor
xchg
cmp
adc
in
adc
jnp
movhlps
aam
por
lds
jmp
mov
jb
dec
pop
imul
imul
xchg
or
fcoml
imul
push
inc
mov
insl
mov
inc
shrl
ret
in
add
ljmp
cmpsb
movlps
outsl
test
pusha
movsl
sub
mov
mov
xor
pop
stc
cmc
push
dec
imul
rcrb
shlb
test
cmp
fiaddl
pop
xchg
and
push
fidivrs
mov
mov
xor
xchg
inc
jp
or
je
mov
pop
outsl
mov
dec
inc
dec
dec
mov
mov
fcoms
ss
jns
pop
pop
popa
mov
das
test
rorl
mov
or
xor
ror
jecxz
repz
mov
mov
add
aam
fildl
jecxz
xchg
sub
mov
mov
xor
por
cmp
pushf
add
xchg
sbb
cmp
cmp
and
les
xor
call
add
sbb
insl
cmp
push
pop
mov
xchg
js
adc
scas
cwtl
pop
out
out
subl
daa
call
inc
daa
lods
adc
ffreep
loopne
pop
les
or
xor
lods
mov
jb
mov
sub
mov
insl
les
adc
pop
je
aas
add
inc
repz
pop
and
shrb
into
je
imul
pop
jmp
and
pop
imul
adc
mov
and
or
jmp
xlat
sub
in
cld
addr16
lcall
js
in
lret
fisttpl
pop
xchg
xor
xchg
mov
pop
mov
cwtl
push
xlat
aas
ds
pop
sti
mov
inc
add
xor
pushf
dec
adc
add
mov
fistpl
mov
cmp
ss
mov
stos
xor
mov
inc
push
sbb
dec
fiadds
addb
sbb
pop
in
dec
fs
out
in
loopne
dec
pushf
js
push
fldenv
lock
cmpsb
std
lods
dec
push
mov
xchg
xchg
xor
scas
jns
push
xchg
pop
inc
pop
mov
cmp
jns
movsl
cld
add
repz
xor
cmp
mov
pop
push
cmpb
icebp
je
cmp
test
jecxz
xor
add
roll
cmp
movsb
or
inc
mov
push
or
pop
imul
cmp
xchg
mov
enter
ja
loopne
cmp
jecxz
movsl
imul
adc
lock
and
jg
rcrb
ljmp
addr16
cmp
dec
punpckldq
jne
popf
push
bound
fcomi
insb
fdivrl
mov
jbe
jg
ljmp
adc
jbe
aad
add
icebp
sbb
adc
sbb
pop
enter
inc
aaa
outsl
cmpsb
nop
xor
mov
sbb
and
aad
sbb
test
mov
adc
icebp
int
mov
sarl
cmpsl
adc
call
pop
mov
sbb
hlt
repnz
in
movsl
ret
sbb
and
sub
inc
xchg
push
xor
test
cmp
mov
std
cld
sub
mov
dec
and
mov
ds
push
test
das
leave
mov
mov
sub
inc
push
call
outsl
mov
mov
arpl
movsb
mov
fisttpl
dec
jecxz
sbb
lret
cmc
mov
clc
iret
sti
cmp
iret
pop
mov
mov
lret
or
fcomps
sub
jb
shlb
daa
push
xchg
add
rol
icebp
mov
ret
jbe
stos
mov
push
fildl
ret
xor
jle
jno
lods
test
jmp
inc
ret
or
push
xor
mov
push
push
jge
sub
jns
fwait
loopne
pop
or
ror
xor
out
fildl
negl
push
jo
addl
pop
mov
sub
push
test
xor
inc
adc
mov
fdivrp
or
inc
outsb
int3
loope
jmp
cmp
fadds
mov
xchg
adc
fwait
int3
push
mov
jge
pop
or
cmp
cmp
adc
js
or
daa
inc
sub
mov
xchg
adc
mov
or
or
ret
test
push
add
movsl
add
cmpsb
mov
jae
pop
or
mov
inc
xchg
mov
adc
mov
int3
jmp
and
pop
in
sub
push
dec
fistpl
sti
inc
mov
cli
aad
call
cmp
inc
mov
ljmp
movsl
scas
xchg
jl
fistl
dec
fstpl
lds
mov
push
aaa
imul
adc
jo
sub
addb
bound
int
imul
fdivl
jmp
iret
dec
movsb
les
cmp
jbe
jbe
enter
lret
stos
shlb
into
mov
inc
int
scas
jb
rclb
movsl
enter
mov
mov
mov
and
out
inc
shlb
xchg
loopne
lret
jne
sub
nop
xor
imul
mov
jle
inc
stos
in
push
popf
inc
mov
shlb
les
int3
loop
in
adc
xchg
push
jae
and
cmp
adc
test
mov
mov
push
aam
int3
sahf
cli
lea
out
inc
ja
push
rcll
pop
adc
fcompl
cld
jl
xor
push
repnz
or
push
mov
scas
les
idivl
test
or
loopne
gs
push
mov
pop
sti
testb
in
add
push
imul
out
cmp
adc
lea
cmp
iret
push
insb
pop
outsb
ret
popl
pushf
pop
icebp
xor
inc
mov
in
xor
add
cmp
push
sbb
pop
inc
xor
fwait
je
mov
lods
aas
cmp
rcll
xor
enter
subb
cs
sbb
in
dec
adc
mov
mov
add
shl
xor
addb
and
cmp
cmp
jmp
push
fistps
jnp
shlb
out
sti
data16
cmp
cmc
repnz
mov
sub
inc
stos
clc
lret
push
inc
ss
sub
aaa
fldcw
fisubrs
mov
addl
loope
lret
jle
pop
xor
pop
cmpsb
aas
mov
xlat
mov
lods
mov
insl
sub
push
xchg
ljmp
leave
sbb
sahf
sbb
aaa
hlt
sahf
lods
bound
inc
jne
xor
mov
enter
sbb
add
xchg
add
inc
push
push
popa
xor
mov
dec
mov
lods
ljmp
and
cmpsb
sbb
cltd
pinsrw
into
mov
mov
pusha
test
adc
pop
pop
loop
vpcomb
repnz
fildll
jb
loop
fildl
fildll
lods
push
mov
and
push
arpl
in
arpl
push
call
mov
fstpl
faddl
pushf
dec
inc
iret
jb
inc
insl
arpl
mov
cmp
call
js
push
pop
dec
mov
lcall
out
sbb
mov
pop
sbb
jge
mov
sbb
xlat
adc
jnp
int
cmpsb
fcmovb
dec
into
hlt
rclb
jmp
cld
xchg
cmc
je
stc
add
dec
loop
inc
ffree
or
sub
movsl
or
inc
into
cli
mov
jb
cmc
jg
mov
stc
aad
in
cmpsb
insb
cmp
sbb
xchg
xchg
cltd
mov
xchg
jecxz
push
testb
jo
push
push
cld
inc
xchg
add
gs
dec
movsl
outsl
and
ljmp
mov
xlat
sub
int
shlb
cmp
sub
mov
bound
mov
pop
mov
dec
and
xchg
icebp
add
fidivl
xlat
test
pop
movsb
xor
lods
into
test
dec
loope
arpl
cld
mov
xchg
sbb
push
gs
push
cmp
mov
jecxz
outsb
adc
lock
add
push
orb
push
mov
fdivrs
sub
movsl
xchg
add
pop
cmpsb
sbb
cmp
xchg
imul
in
or
jo
jns
sbb
xchg
mov
jmp
and
push
xchg
sahf
or
sbb
fbstp
dec
rep
in
jmp
test
jbe
dec
cli
lods
leave
dec
aaa
fstpt
sub
jecxz
lea
daa
popf
mov
pop
and
jle
xor
repz
mov
cltd
cmp
dec
pop
mov
mov
in
psrad
or
icebp
into
jecxz
fnsave
jo
cli
add
fincstp
scas
and
and
mov
orps
sbb
inc
add
cmc
lods
stc
adc
dec
mov
scas
inc
jge
addr16
sub
mov
xor
les
in
cmp
insl
test
pushf
push
push
pop
fwait
lods
rcrb
adc
iret
cli
xlat
xchg
sti
fldcw
mov
insb
mov
mov
fdivl
mov
add
dec
inc
ficompl
shrb
xor
adc
sub
stc
gs
inc
xchg
push
xor
sub
ss
adc
inc
and
in
xchg
dec
jg
ret
sub
xor
dec
dec
setae
xor
mov
dec
int3
aaa
sub
inc
gs
mov
inc
dec
aam
jmp
push
stos
ret
jne
rcll
push
mov
dec
or
push
out
cmpsb
xor
jb
or
js
xchg
inc
or
cmpsb
shll
mov
inc
addr16
ret
sub
or
cld
repz
mov
stos
adc
dec
push
mov
xchg
out
xor
sub
or
push
sbb
enter
xchg
aam
in
xor
addl
cmpsb
arpl
repz
addr16
pop
cmp
int
add
repz
adc
pop
enter
xchg
enter
call
int3
and
jge
mov
sbb
sbb
pusha
mov
mov
nop
sub
fdivrl
dec
mov
out
mov
mov
outsl
mov
js
push
push
insl
mov
jp
jmp
push
jae
pop
aas
loope
scas
sub
insb
bound
hlt
cmc
into
js
mov
cmp
xchg
lds
call
sub
inc
cld
push
mov
call
shlb
push
xor
xor
xchg
popa
idivb
lcall
push
cltd
dec
xor
in
mov
mov
mov
or
divb
cwtl
insb
mov
addb
lock
test
and
and
xor
inc
adc
jmp
dec
mov
stos
mov
fnstcw
ror
and
andl
lods
xor
dec
gs
subb
or
fwait
outsb
lods
pop
sarl
mov
cmp
add
outsb
test
fisubrl
repz
int
xchg
mov
fnstsw
dec
imul
shr
popa
pop
cltd
lds
addr16
add
gs
rcl
jbe
sbb
mov
mov
int
das
and
gs
out
sbb
in
sub
ret
cli
mov
jge
testb
ja
ret
and
out
mov
test
push
pop
inc
subb
sbb
pusha
in
xchg
dec
sub
add
ljmp
gs
fcompl
nop
daa
inc
cmp
add
es
ficoms
call
loope
push
lea
xor
out
scas
xor
dec
sar
dec
add
push
xor
jl
popf
inc
cmp
sti
sbb
das
movsb
pop
adc
lds
mov
adc
and
push
jge
add
cmp
gs
push
dec
inc
cmpsb
repz
jbe
popa
inc
ret
popa
stos
aas
adc
repnz
fs
gs
scas
lea
push
popa
inc
mov
adc
and
rcll
pop
mov
pushf
cmp
and
dec
jns
cmp
dec
and
ja
divl
pop
mov
cwtl
mov
movsl
sub
ud1
push
movb
imul
cs
jecxz
dec
stc
pop
lret
dec
jno
jmp
pop
cmpsl
call
lret
jmp
cli
pop
fs
mov
mov
mov
mov
sbb
push
push
mov
push
insl
cmc
std
imul
ss
dec
inc
cwtl
dec
xor
push
loop
add
mov
mov
mov
jne
test
jg
cs
ss
test
aaa
xor
or
in
jecxz
sbb
push
sbb
inc
adc
adc
push
sub
and
or
lea
arpl
daa
sti
pop
lea
pop
popfw
popa
ret
push
jbe
enter
bound
pop
lods
testb
in
xchg
dec
xor
adc
addb
add
scas
pop
adc
aad
and
dec
gs
inc
cmp
mov
sbb
mov
lods
xchg
fwait
das
lcall
lods
mov
inc
enter
hlt
mov
xor
mov
inc
adc
lret
mov
add
pop
cmp
sub
sbb
mov
jno
xor
lcall
ret
enter
and
push
ret
aas
pop
pop
mov
sahf
pop
stos
push
xor
pop
icebp
sbb
jns
inc
mov
jne
add
pop
inc
stos
mov
xchg
fcoml
scas
adc
bound
push
jns
les
hlt
bsf
sub
loope
pusha
lods
add
fstl
or
incb
jge
xchg
in
lods
cs
lods
repz
mov
mov
and
mov
clc
negb
cmp
mov
cmp
and
xlat
std
pop
lret
cmpsb
aam
int3
movsl
mov
aad
mov
inc
insl
pop
xor
or
push
and
aad
pop
adc
mov
or
sbb
dec
test
mov
and
int
and
cmp
mov
scas
mov
sbb
add
add
adc
xor
mov
aaa
rcll
jo
std
jnp
int
inc
lret
es
jae
mov
xor
push
fmull
jnp
daa
hlt
cmpsb
mov
les
mov
test
popf
insb
adc
add
fisttps
js
jmp
inc
push
push
push
fstpl
mov
scas
push
mov
xor
ret
xor
push
out
mov
add
outsl
mov
sbb
in
scas
aam
scas
sbbl
push
adc
test
hlt
lock
mov
ja
dec
addr16
mov
cmp
sub
mov
clc
iret
sub
outsb
sub
inc
ficoml
sub
push
aas
inc
push
adc
push
cltd
push
push
adc
outsl
sub
mov
mov
jp
and
out
push
pop
mov
sub
pop
mov
cmp
dec
mov
sahf
cwtl
add
jmp
inc
push
or
push
sbb
mov
cmp
adc
out
repnz
and
sahf
test
fdivrl
sub
testl
push
or
cmp
insb
ja
insb
loop
cmpsb
sub
dec
fisubrl
in
dec
data16
in
fs
jbe
lock
lock
bound
cmp
lahf
inc
repz
jle
jg
ss
mov
push
popf
hlt
data16
mov
loop
inc
addr16
xchg
cwtl
js
jns
mov
std
test
sub
xchg
adc
out
pop
loope
ret
nop
adc
cli
ljmp
pop
ja
outsl
incl
lcall
mov
inc
lods
popl
jae
jmp
jbe
xor
mov
sub
das
paddd
lea
pop
sahf
push
loope
jb
inc
mov
jp
mov
mov
fimull
or
dec
int
sbb
mov
add
push
sbb
shlb
mov
lock
jo
es
pusha
das
add
fsubrs
xor
inc
sbb
jge
or
mov
hlt
sbbl
sbb
mov
sbb
xchg
es
pushf
inc
call
cmp
cmp
rcll
xchg
cmp
sbb
jp
ja
out
shl
dec
mov
std
sub
daa
pop
js
jle
das
bound
inc
mov
push
xlat
dec
into
or
mov
inc
iret
sbb
ljmp
push
fdivrp
adc
aam
movsb
imul
adc
or
push
vmwrite
fbstp
push
sub
inc
js
sbb
xor
mov
adcb
sbb
pop
sub
push
jae
jl
imul
ret
popa
and
cwtl
movsl
or
sub
out
xchg
jo
in
out
mov
mov
dec
lahf
cwtl
ss
test
xchg
pop
jo
or
icebp
mov
cld
pop
xor
add
jae,pn
ficoms
mov
inc
mov
ljmp
rorl
adcb
inc
pop
out
push
stos
aaa
mov
dec
hlt
jnp
xor
stos
ds
pop
addl
cs
mov
sbb
test
jl
out
or
in
js
xlat
fstps
sbb
mov
jge
add
mov
and
sbb
mov
inc
mov
inc
insl
fsubr
mov
rorb
std
addl
je
mov
xchg
sti
adc
push
mov
hlt
mov
or
mov
cmp
push
aas
sub
movsl
and
aad
daa
out
push
and
mov
sub
or
sbb
cmp
pushf
icebp
lods
int3
push
and
jmp
mov
arpl
test
and
addr16
mov
pop
sub
hlt
and
outsl
stos
adc
sbb
sbb
imul
cmpsl
lret
xor
loop
xchg
jae
hlt
pop
pop
jp
and
int
inc
pop
mov
inc
idivb
xchg
sub
fmuls
rcll
mov
icebp
xchg
jp
call
xor
mov
push
shll
stos
mov
call
pop
mov
divl
pop
stos
les
xor
pop
inc
add
fwait
icebp
ljmp
xchg
and
cmp
and
xchg
aam
lds
test
sbb
push
xor
pop
dec
dec
push
out
gs
int
xchg
fmul
push
cmp
push
push
testb
pusha
and
aad
mov
add
mov
mov
lahf
jle
data16
or
xor
pop
ljmp
add
sahf
jae
cli
or
pop
scas
aam
mov
xchg
aam
mov
mov
shll
stos
and
mov
jecxz
outsl
sbb
sbb
les
or
aad
dec
jne
lahf
mov
call
inc
cmp
jbe
loop
or
jmp
cs
outsl
scas
test
dec
and
lock
mov
das
ficomps
add
xchg
js
ret
outsb
jp
cmp
sub
std
sbb
scas
sbb
mov
xchg
or
test
jmp
add
pop
ljmp
jnp
xchg
and
lea
inc
mov
cmp
mov
mov
sub
jo
mov
jbe
adc
mov
fmulp
cmpb
addl
imull
push
test
adc
and
lods
xchg
mov
pop
add
stos
jo
insb
pop
imul
and
je
mov
fcomps
jl
adc
sub
sub
testl
lods
mov
adc
or
pop
pop
repz
clc
movsl
mov
test
jle
push
and
ja
ss
pop
mov
leave
xchg
add
mov
rcll
xor
es
jne
enter
xor
or
shrl
dec
outsl
call
jl
fs
fwait
or
imul
jmp
mov
pushf
dec
xchg
mov
into
loope
xchg
dec
stos
repnz
fwait
insb
jle
cmp
es
jo
orl
mov
pop
repnz
cld
in
xchg
cmp
pusha
pop
dec
pushl
daa
adc
sahf
neg
lea
jl
ljmp
add
pop
mov
xor
mov
fs
jge
test
mov
mov
movsl
lds
mov
cltd
orl
add
cmp
outsb
popa
xor
into
jb
push
pop
in
xchg
mov
pop
repz
jns
pop
mov
gs
mov
ja
dec
xor
mov
clc
popa
int
adc
popf
gs
in
data16
gs
adc
ds
lock
inc
call
xchg
mov
icebp
or
push
xor
xchg
in
popa
aaa
mov
dec
out
pop
pop
or
lret
shll
lahf
shlb
push
repz
das
std
dec
pop
pop
in
inc
push
lret
mov
pop
mov
xchg
fwait
notl
dec
popa
loopne
jne
jl
pop
mov
rorb
out
push
pop
daa
ret
and
out
inc
repz
dec
inc
mov
xchg
inc
pop
jno
fs
inc
leave
in
push
dec
in
ja
jae
loope
jo
frstor
in
fmull
test
stos
cmp
inc
loope
pop
hlt
call
inc
pop
push
std
add
inc
fidivl
dec
sbb
cli
sub
inc
cwtl
call
adc
xor
or
xchg
and
shrb
ja
mov
mov
mov
clc
adc
mov
outsb
add
cld
xor
pushf
pop
nop
fdiv
xchg
into
sarb
fnstenv
add
xchg
addr16
dec
lahf
in
stc
add
pop
and
int
dec
out
ss
pop
dec
lret
pop
std
leave
cmp
xchg
adc
stc
out
sarl
or
jmp
jmp
pop
outsl
cmpsl
ret
aas
add
or
pop
xor
xor
sbbl
test
mov
xchg
add
xchg
pop
sub
mov
inc
lahf
cld
add
hlt
aad
aaa
movsb
pop
out
cwtl
mov
cmp
mov
fstl
mov
jo
xor
sahf
dec
mov
adc
decb
rcrb
sub
arpl
mov
push
push
jp
jnp
push
orl
mov
rcrl
sbb
push
push
pop
or
mov
daa
cmp
inc
and
pushw
gs
adc
mov
inc
insl
inc
cmp
das
xchg
dec
mov
shlb
xchg
inc
or
ja
lahf
stos
add
xchg
in
sbb
insb
jecxz
stos
in
in
cmp
cmpl
call
inc
cmp
inc
mov
dec
xchg
mov
inc
into
push
lret
cmp
shlb
adc
mov
xchg
cmp
cmc
bound
mov
lds
call
shrl
and
sbb
lret
xchg
mov
stos
pop
jo
sbb
pop
and
leave
test
sub
push
adc
idivb
mov
imul
mov
jle,pt
daa
mov
aad
dec
jae
enter
mov
cmc
cmp
pushf
fsub
aad
loope
jl
dec
imul
or
adc
push
inc
in
add
adc
nop
sub
xchg
push
inc
jecxz
cs
push
sub
mov
pop
or
icebp
and
mov
xchg
out
mov
mov
hlt
xorb
cmpsl
mov
dec
mov
mov
leave
mov
ja
aad
jno
cltd
int
xor
sbb
add
outsl
into
gs
mov
push
push
ror
dec
lret
dec
out
test
mov
imul
cmc
push
leave
dec
repnz
push
push
repnz
scas
xlat
adc
cmp
repz
rcl
sub
jnp
andl
mov
in
popa
loope
testl
nop
mov
push
add
fs
jo
push
jg
sub
sbb
out
sti
add
xchg
test
sbb
mov
mov
xchg
fistpll
addb
mov
mov
aam
xlat
sub
rolb
xchg
idivb
fildl
dec
std
xchg
or
and
mov
sub
and
jge
push
or
jg
push
ret
inc
push
in
iret
out
xchg
stos
inc
add
leave
icebp
aam
es
xchg
xor
dec
xor
sub
or
dec
sbb
mov
mov
lock
cmp
pop
mov
cmpsb
lahf
pushf
test
aad
cmc
outsb
pop
push
sbb
fnstcw
shr
repz
mov
movsb
jns
rcrb
stos
mov
adc
repz
mov
jmp
pop
mov
fdivrl
add
xor
outsl
int3
xor
into
jmp
insl
loope
jmp
jl
add
sub
mov
jp
mov
mov
loope
cmc
in
push
lret
dec
add
lret
and
dec
mov
das
lcall
arpl
mov
pop
add
jge
in
sti
push
in
sub
cmp
adc
sti
psubsw
fwait
xchg
jle
lret
sbb
fisttpll
push
adc
adc
mov
pop
or
shr
jbe
ss
out
out
repz
jb
and
pop
ds
xor
and
aad
jae
pop
sub
sbb
cld
rcl
pop
xor
mov
mov
and
cmpsl
rorb
sub
xlat
cmp
das
push
andl
pop
pop
or
and
mov
mov
adc
shlb
sti
orb
test
push
out
pop
pushf
stos
lods
scas
xchg
gs
hlt
sbb
dec
mov
das
xlat
jo
cmp
les
sub
mov
cmp
push
pop
movsl
test
ret
push
dec
pop
cmpsb
jle
mov
lcall
adcb
stos
sqrtps
pop
aaa
dec
es
push
xchg
xlat
jp
push
ds
lcall
icebp
imull
dec
push
mov
add
pop
xor
in
fstps
ss
fisttpl
mov
inc
push
test
mov
push
push
sbb
xor
bound
rcrb
es
add
shlb
push
dec
sbb
jmp
imul
mov
xor
push
mov
out
mov
in
jmp
mov
cli
push
outsb
sub
and
cmp
movl
imul
popf
dec
bound
cmp
mov
icebp
xor
sti
sbb
rcr
std
dec
shlb
repnz
mov
adc
stos
or
mov
jecxz
adc
cmpsb
sub
sbb
dec
mov
dec
out
insl
insl
cmp
cmp
sub
sub
add
jne
loopne
sar
sbb
jnp
insb
pop
int3
inc
fucomp
inc
mov
pop
push
div
ja
pop
xchg
int
or
sub
xchg
pop
scas
jmp
xchg
mov
or
fistps
push
mov
out
iret
mov
enter
lods
filds
sub
movsl
push
cltd
pop
sar
mov
dec
fildl
mov
mov
jl
lock
push
add
movsl
repz
inc
xor
mov
cmp
add
scas
into
aad
ret
inc
je
scas
rcrl
xor
test
inc
scas
dec
dec
js
mov
mov
outsl
add
cmpb
lret
cvtps2pi
cwtl
sbb
cmp
bound
cli
push
sub
add
jbe
jmp
ds
mov
fs
cmpsl
push
sbb
idivb
add
cmpsb
aas
pop
add
insb
sarl
arpl
dec
mov
push
add
xor
shll
xchg
stos
cltd
test
test
loopne
or
loope
int3
arpl
test
loop
inc
mov
xor
divb
push
dec
mov
shlb
dec
dec
pusha
mov
sbb
arpl
outsb
xor
in
std
outsb
cmp
xchg
or
ret
fnstsw
cmc
mov
push
mov
adc
fdivrs
div
xchg
cmp
mov
inc
mov
and
fiaddl
jle
push
adc
push
enter
push
jns
xchg
cld
sbb
sub
jp
mov
int
jp
dec
mulb
test
and
or
sub
mov
mov
xchg
nop
ds
xor
pop
mov
inc
push
sbb
mov
outsl
mov
or
xchg
cs
lahf
ja
jge
rcr
jle
and
loop
jno
fcoms
lcall
mov
cmp
mov
push
les
and
pop
popa
shll
add
inc
sbb
push
stos
stos
es
subl
ja
test
pushf
sbb
xchg
adc
pfnacc
loope
adc
cli
and
sbb
adcb
loope
and
les
jge
jmp
pop
into
inc
jg
inc
mov
hlt
fnstenv
xor
pop
popa
adc
mov
int3
aaa
mov
insl
sbb
jcxz
daa
int
sahf
push
cmpsl
gs
fidivs
xor
mov
mov
int3
push
xlat
push
je
add
sbb
jbe
push
xorb
pusha
ds
cs
add
or
clc
dec
add
or
jno
xchg
mov
add
mov
sub
inc
push
and
jge
test
lock
mov
mov
lret
fucomip
in
divl
sub
je
mov
xchg
or
dec
pop
in
inc
push
and
je
sbb
cmp
stos
outsl
push
scas
push
inc
or
test
cli
jno
push
cmp
pop
add
mov
and
dec
pop
or
pop
les
add
dec
mov
jns
xchg
inc
lods
stos
fsubrp
jge
cmp
in
xchg
mov
push
mov
mov
jmp
lods
push
enter
cmp
sub
mov
inc
ret
fs
repnz
sbb
push
std
dec
leave
cmpsb
int
aad
es
inc
test
mov
adc
jnp
cmp
mov
xchg
sbb
or
and
std
ret
and
pusha
ret
sub
outsb
inc
push
jae
pop
lea
stc
outsl
jge
push
pop
repz
sub
xchg
js
cltd
sub
test
and
jle
mov
jbe
or
jae
insl
jns,pt
cmpsl
ja
pop
roll
test
addr16
lahf
push
jg
adc
fs
sub
pop
and
xchg
repz
adc
xchg
lahf
cmpsl
xchg
jecxz
push
outsb
lret
or
jns
xchg
icebp
pop
loope,pn
in
xchg
cmp
mov
and
jmp
hlt
dec
test
cld
shrb
pop
add
test
cmp
imul
add
daa
cld
in
jo
fdivrl
rclb
xor
inc
push
and
mov
dec
sub
fs
jne
xor
push
outsl
xorb
inc
xchg
ret
cmpl
sub
into
mov
mov
sti
and
or
aaa
inc
roll
cmc
gs
dec
lods
jae
dec
adc
clc
repz
filds
inc
addl
mov
cmp
xchg
lds
mov
jl
mov
int3
and
pop
test
inc
hlt
jmp
and
mov
xor
pop
nop
jg
adc
push
push
xor
pop
jno
jnp
pop
test
gs
sti
inc
sub
aas
lock
ljmp
es
test
inc
movsb
dec
ds
xchg
sti
add
cmp
pop
xchg
xor
jne
js
add
inc
inc
test
sbb
shll
int3
mov
mov
loopne
outsb
xor
push
mov
xor
push
cltd
ret
lar
push
outsb
and
push
dec
jnp
pop
dec
clc
sub
dec
jno
jo
aas
icebp
pop
in
jle
cmp
inc
movb
jo
jge
testl
bound
jno
decl
or
mov
or
cli
mov
movsl
insb
int3
push
mov
out
lock
jno
in
adc
mov
dec
addl
dec
cltd
test
inc
or
dec
inc
add
jbe
xor
xlat
sub
lret
sub
push
roll
cmp
ret
dec
adc
jbe
xchg
or
add
dec
movsl
cltd
leave
or
test
xchg
stos
ja
cmpsl
push
xor
lods
in
fsts
push
movsl
sysenter
jns
or
aam
sbb
subb
bound
mulb
adc
sub
je
jae
in
in
ja
jbe
dec
iret
sahf
aaa
inc
in
lock
xchg
outsl
lods
movsb
leave
aaa
sete
adc
pop
dec
inc
jno
sbb
aas
hlt
movsb
sbb
sub
xlat
loopne
jne
scas
pop
out
inc
lea
movsl
cs
pop
xchg
adc
dec
and
pushf
test
sub
fbld
fs
gs
cmp
adc
sub
pop
xchg
mov
sub
aam
addr16
fistpll
imul
les
cmp
loopne
jns
andl
inc
dec
push
mov
cltd
pop
sbb
fistpll
scas
mov
xchg
mov
sub
inc
or
cmp
sahf
lods
mov
mov
cld
ret
insb
test
imul
sub
cmc
imul
sub
adc
xlat
or
shrb
push
push
ja
dec
xchg
sti
inc
insl
push
in
xor
ret
inc
push
adc
jmp
rcrb
xor
pop
pop
jne
scas
das
daa
adc
loop
mov
push
and
xchg
adc
push
mov
dec
add
idivb
or
test
dec
pop
jp
ljmp
ret
inc
into
xor
sbb
xchg
in
cld
pop
sahf
cli
dec
aam
pop
inc
pop
dec
and
clc
int
jb
dec
or
paddw
nop
xchg
stc
dec
push
pop
xor
sub
pop
fs
mov
inc
loop
sbb
sti
push
add
pop
dec
xorl
push
icebp
mov
jmp
iret
jnp
ds
xor
push
add
jb
jne
out
mov
cmp
push
movb
cmc
jae
jnp
xchg
dec
xchg
gs
sbb
movsl
and
test
cmp
sbb
add
sti
data16
mov
pop
push
add
repz
push
adc
in
sbb
mov
mull
inc
jg
fld
push
hlt
add
in
xchg
ja
jecxz
jae
xchg
jnp
stos
movsl
js
dec
dec
or
cmp
out
ds
jecxz
inc
pop
fisubrl
xchg
or
mov
xchg
fs
in
mov
inc
outsb
xchg
add
xchg
push
push
punpcklwd
outsl
xchg
mov
sahf
mov
push
mov
loopne
add
mov
stos
testb
xor
test
sub
cld
fwait
inc
and
daa
popa
jge
stos
pusha
mov
xor
mov
lea
ret
daa
pop
aam
leave
xchg
lods
stc
mov
dec
adc
scas
xor
fistl
in
in
sti
stos
pop
enter
shlb
jb
rorb
xlat
mov
inc
add
sti
sbb
cld
fistl
xchg
cli
xor
test
addr16
jl
jmp
or
es
in
out
lods
and
or
mov
out
cmp
lret
scas
cmc
jbe
iret
lods
xor
inc
pop
dec
jg
pop
jmp
in
lds
cmp
jge
stc
lea
push
pop
jb
jle
int
pop
pop
je
lret
imul
mov
sub
fildl
push
sbb
lods
mov
dec
push
test
mov
in
jb
ret
mov
out
fsubrl
cmp
push
mov
sub
int3
jg
sbb
sub
sub
jae
mov
dec
daa
or
cmp
and
outsl
lret
ljmp
mov
in
rorl
cmp
fdivr
fdivrl
mov
cmc
ret
mov
sub
int3
hlt
in
xor
je
pop
push
adc
flds
shll
xchg
mov
mov
mov
mov
mov
xchg
test
negl
dec
sti
push
ss
movsb
inc
pushf
repnz
xchg
pop
mov
add
repz
cmc
sahf
loop
lods
enter
arpl
and
pop
push
outsl
jmp
xor
leave
loope
pop
jno
add
sub
in
leave
daa
shll
jbe
sbb
add
jns
and
xor
out
xor
xor
lock
push
fstpl
xchg
lock
lods
sbb
pop
cli
pop
sbb
enter
icebp
sub
adc
in
adc
sub
sti
sub
pop
xchg
rcl
outsl
cmp
mov
jge
push
mov
mov
scas
cmp
mov
jg
inc
int3
loope
jne
and
jnp
mov
pop
repnz
push
xor
adc
sbb
shl
lcall
or
xor
add
jnp
mov
lret
daa
xchg
jge
out
xlat
push
pop
push
pop
stos
out
add
mov
xchg
bound
cli
sahf
lahf
mov
cmpsl
and
inc
push
js
inc
push
les
ss
rol
sub
icebp
loopw
jmp
enter
sbb
xchg
int
das
rcll
mov
mov
sub
and
pop
push
loop
add
xchg
sub
xor
add
dec
adc
rorb
lods
jnp
in
ret
iret
insl
mov
and
cwtl
subb
pop
xchg
jbe
jp
inc
mov
fisubs
cmp
in
test
jno
jge
xchg
jmp
jge
cmc
cmc
shlb
add
cmpsb
jg
inc
pop
cmc
mov
movsb
vmread
out
testl
mov
push
mov
loop
push
cltd
pusha
push
mov
insb
in
and
sub
sbb
mov
mov
cmp
bnd
sub
in
jl
add
pop
add
lods
sbb
ret
mov
xchg
sbb
cs
shrl
jnp
or
addl
mov
cmpsl
mov
repz
push
in
mov
mov
mov
and
arpl
sbb
pop
mov
mov
and
hlt
cmp
xchg
stos
scas
or
xorb
ret
nop
sbb
out
jmp
push
inc
dec
stc
jge
pop
aad
ret
adc
and
push
in
xor
pop
arpl
cmp
and
inc
cmp
std
inc
pop
ds
repz
movsb
adc
jns
mov
jnp,pn
dec
sbb
mov
cmovae
lret
xchg
in
pop
jp
ret
ret
and
int
sarl
and
pop
dec
push
ret
jp
cli
bound
jge
sbb
or
push
leave
iret
fucomi
nop
pop
iret
mov
ret
mov
or
mov
jno
cmpsb
dec
mov
insb
addr16
fisubs
mov
fcomip
leave
outsl
ret
loopne
repnz
scas
mov
jmp
rcl
pop
sub
rclb
pushf
lds
sarl
out
mull
call
fisttps
das
add
and
pop
dec
movsl
adc
xor
and
ret
pop
xchg
rorl
add
push
cmp
jecxz
dec
int3
bound
addr16
icebp
and
nop
or
pop
pop
pop
inc
or
ja
push
mov
out
icebp
das
ss
add
insl
jae
xchg
mov
add
mov
sbb
xchg
cltd
inc
fwait
pop
dec
das
jae
sub
aam
lcall
stc
sbb
xchg
inc
pop
xor
in
fnstenv
dec
add
adc
dec
jmp
stos
push
fs
out
mov
jmp
icebp
mov
mov
mov
mov
out
fsts
mov
pushf
or
cwtl
test
rcll
movsl
or
clc
inc
jns
mov
call
pop
pop
xchg
in
jae
push
pop
push
push
xchg
scas
bound
xor
ret
ljmp
mov
xchg
pusha
or
popa
cmpl
out
add
mov
push
in
sbb
mov
std
cmp
lods
fwait
out
sub
and
push
lea
xchg
pop
xchg
lods
cmp
in
mov
repnz
jmp
adc
cmp
cmpsl
jmp
pop
sbb
jmp
sbb
mov
xchg
aas
clc
sbb
aam
adc
jmp
inc
jmp
adc
out
jo
xchg
mov
dec
into
push
sub
sbb
sbb
sub
pop
jns
xor
ds
xorb
imul
daa
ret
lods
sti
lds
sbb
icebp
inc
jl
jae
sbb
push
cmp
push
lock
jg
xchg
dec
les
lret
ret
cld
movb
inc
mov
adc
mov
sub
lea
negb
xor
inc
xor
cmpsb
adc
lods
mov
mov
xor
scas
mov
and
dec
and
rcr
cld
add
andl
dec
fsubr
lock
int3
mov
jne
push
movsb
jecxz
fsub
ficompl
shld
dec
push
adc
loope
jne
in
insb
mov
arpl
sub
inc
ljmp
popf
fcomip
outsl
call
dec
in
outsb
cmpsb
scas
in
mov
mov
dec
popa
std
jecxz
pop
mov
loope
mov
and
cmp
and
and
mov
xchg
arpl
dec
or
rcrl
dec
popa
cmpsl
fldt
inc
add
and
pop
xor
incb
sub
adc
or
or
inc
pop
imul
scas
inc
xlat
cmp
out
xchg
call
cmpb
add
push
sbb
cmp
loopne
sub
inc
xchg
jnp
xor
jae
jne
push
cmp
in
push
js
mov
mov
mov
in
pop
and
outsb
xchg
dec
ficoml
rorb
fiaddl
loop
and
jae
and
enter
inc
mov
mov
mov
int
push
ficoms
ret
jmp
enter
mov
pop
in
jp
sbb
xor
sub
dec
outsb
lret
pop
add
loop
sub
or
lahf
jno
imul
andb
insl
popf
pop
add
jle
flds
jns
clc
dec
pop
adc
ret
xchg
in
xchg
xchg
sti
lock
push
adc
xlat
pop
jns
lds
repz
add
jge
push
in
push
pop
cmp
gs
adc
arpl
push
les
sahf
jl
pushf
xor
dec
movsl
test
jnp
mov
call
push
int3
dec
call
jle
pusha
xor
cmp
push
or
add
push
cmpsb
jne
xchg
lcall
daa
and
adcl
xchg
in
aam
out
pop
les
push
lret
aam
mov
dec
mov
sub
xchg
sub
cmp
rcrb
cwtl
sbb
jge
cld
nop
jge
dec
aas
and
push
lock
addr16
xlat
mov
mov
pushf
lcall
inc
dec
cmpsl
jle
cli
jg
andl
jne
pcmpgtw
jb
mov
cld
inc
cmp
mov
fimull
push
stos
std
mov
sti
fbstp
fidivs
enter
ss
or
inc
in
xlat
xor
cmp
fmul
into
cltd
inc
hlt
addr16
sub
xor
push
addb
lcall
movsb
ljmp
push
dec
pushl
pop
pop
sahf
hlt
cmp
fidivrl
adc
mov
xchg
call
movsb
icebp
sbb
mov
pop
aas
test
dec
paddw
push
in
inc
out
push
int3
out
out
imul
adc
xor
xor
cwtl
test
lds
cwtl
pop
push
jno
pop
lret
sub
sahf
pusha
xor
out
and
aad
repz
iret
stos
imul
xchg
repz
mov
cs
push
das
or
adc
imul
loop
dec
inc
xor
adc
ss
or
and
pop
dec
movsb
pop
clc
shlb
xchg
shrl
bnd
outsl
gs
loope
ret
mov
mov
inc
adc
pop
mov
xlat
add
in
xchg
int
inc
cmpb
loope
lea
js
push
dec
shl
in
fidivl
dec
and
xchg
xor
in
xor
in
jbe
rorl
push
jns
adc
outsb
cmc
leave
out
mov
and
icebp
add
rcrb
inc
jle
clc
sub
and
or
push
pop
rorb
jge
cmp
push
and
gs
in
add
jmp
icebp
sub
pop
jmp
jbe
add
xor
jge
adc
push
insb
push
jg
mull
xchg
pop
out
adc
xchg
adc
int
jp
cmp
and
jns
loop
jge
in
mov
call
pop
sub
push
cwtl
jno
xor
adc
in
inc
popa
int
mov
mov
jbe
clc
add
dec
lods
cmp
nop
repz
es
add
orl
stos
adc
std
arpl
js
ror
scas
pushf
out
adc
das
or
out
dec
jno
orb
std
cmp
cmpsb
ret
mov
stc
movsb
push
decl
shll
xor
fidivl
push
enter
outsb
test
loopne
mov
cmp
cmp
bound
and
push
out
or
dec
add
repz
stos
pop
cmp
mov
fldlg2
sti
cld
lds
leave
and
push
mov
and
nop
icebp
int3
nop
sti
out
lret
lahf
rcrl
out
mov
pop
es
stos
call
or
jo
cltd
mov
add
inc
cld
push
add
popf
sbb
mov
test
aad
cmp
imul
nop
rcll
ljmp
xor
inc
stos
enter
jne
scas
and
mov
add
jecxz
xor
int
mov
sahf
nop
sbb
mov
out
pop
in
cmp
ljmp
je
dec
mov
fwait
imul
add
notb
lahf
xchg
pop
dec
dec
adc
mov
fcmovnu
sub
lea
subb
sub
mov
inc
jge
aam
adc
jno
add
push
or
jmp
stc
inc
xchg
cwtl
loop
inc
mov
loope
xor
inc
adc
dec
add
cmp
mov
jmp
imul
adc
mov
mov
rol
repz
adc
js
lahf
sysexit
clc
mov
add
jno
and
out
lock
add
iret
lock
adc
mov
pop
pop
or
mov
ret
aaa
dec
mov
lret
cmp
fwait
push
jl
xchg
dec
dec
pop
mov
xor
ja
sub
adc
xor
jmp
jns
sahf
mov
cwtl
ret
andl
or
mov
lods
pop
sbb
lods
xchg
pop
gs
pop
xchg
jno
and
and
std
and
les
into
call
xchg
cmp
imul
movsl
mov
mov
insl
mov
add
cltd
out
sub
sbb
mov
push
out
cmp
popf
lret
xchg
xchg
fs
sbb
shlb
and
jb
mov
stc
fstpl
push
ret
out
xchg
sarb
xchg
xor
cmp
jnp
adc
jbe
leave
popf
pop
and
out
push
inc
sbbb
xorb
jns
xor
lods
aaa
sub
jno
mov
lods
pop
inc
mov
icebp
mov
cwtl
sti
dec
lret
lods
and
das
pop
mov
add
pop
add
adc
push
out
lock
xchg
ja
cltd
jmp
daa
call
cli
mov
dec
push
cmpsl
jo
sbbl
xorb
test
jp
push
mov
pop
xor
pop
mov
es
cmp
jae
xlat
and
ret
xchg
fldt
movsl
cmp
push
insl
js
mov
sbb
dec
fwait
xor
jne
jl
testb
dec
pop
aas
je
aad
stos
sbb
push
out
mov
repnz
rcl
dec
js
cmpsl
enter
loopne
popa
jmp
in
call
add
rcll
scas
mov
add
sbb
mov
adc
mov
test
sub
adc
out
imul
push
xchg
and
dec
retw
outsl
jns
dec
sub
test
popf
or
xor
add
shll
mov
les
out
and
leave
cmp
jle
popa
out
xchg
xchg
in
or
jp
and
xor
mov
push
push
pop
sbb
dec
je
test
inc
lods
bound
mov
out
push
pop
dec
pop
xlat
add
sub
stos
clc
adc
add
mov
adc
sar
xor
dec
mov
int
jbe
aam
dec
xchg
pop
add
addr16
and
aas
xlat
inc
mov
dec
sbb
jb
fnsave
lods
add
loop
ja
aad
aad
mov
aad
imul
sub
dec
mov
jo
mov
mov
mov
aad
pop
stos
adc
or
mov
xor
mov
mov
adc
pop
mov
xchg
int
xchg
sbb
insb
jg
sub
nop
loope,pn
jb
movsl
pop
stos
xchg
mov
dec
fwait
pop
push
dec
sub
leave
jg
xchg
ja
xorl
and
or
adc
jno
or
int
cmpsl
fldl
cmpsb
das
push
mov
gs
lods
loope
add
xchg
stos
sbb
add
mov
push
push
test
push
jbe
stos
pop
pusha
dec
aam
mov
push
into
mov
outsl
inc
pop
insl
call
xorb
pop
jl
lods
scas
test
jle
pop
testl
les
int
pop
nop
xchg
jno
mov
mov
andl
sti
lcall
cmp
jo
cmpsl
jl
adc
jge
cmpsl
pop
pop
xor
ret
mov
lret
out
dec
add
das
pop
fwait
stc
jmp
and
xor
sbb
adc
jp
and
out
cmp
push
stos
sbb
pop
xor
stos
aaa
push
pop
idiv
rcl
fidivs
push
mov
cmp
fld1
jmp
jo
xor
pop
pop
cmp
aad
add
mov
xor
movsl
ret
sub
imul
fsubrp
outsl
es
sbb
idiv
arpl
cwtl
insl
fildll
and
xchg
sbb
add
and
out
mov
jg
loop
mov
arpl
jle
mov
dec
lret
push
repz
mov
inc
push
xchg
sbb
xchg
or
mov
adc
xchg
dec
adc
stos
jns
cmp
leave
loopne
xlat
cwtl
jae
and
xor
sbbb
jae
ss
cmp
shlb
cmp
and
lret
cmp
cmp
jle
add
aam
jb
and
iret
adc
out
xchg
cmp
in
icebp
pop
sub
inc
fstpl
pushf
xorl
test
in
adc
dec
lret
adc
or
repnz
sahf
ljmp
sub
lods
xchg
xchg
or
loop
push
punpcklbw
inc
fcomps
push
popa
insb
add
movsb
pop
pop
outsl
lods
ffreep
dec
inc
cmpsb
aam
out
xor
mull
fmull
fldl
or
mov
popf
aam
and
jg
leave
pop
sub
cmp
in
and
inc
stos
mov
dec
shrb
loopne
cmpsl
mov
dec
push
or
fsubl
loope
push
dec
pop
int
test
push
cmp
mov
out
mov
arpl
jae
cmpl
loopne
ja
nop
es
mov
xor
adc
cmc
inc
dec
imul
lds
adc
adc
mov
pop
out
cmp
fisubl
fldenv
pop
in
jmp
das
sar
wrmsr
ja
jmp
fists
int3
mov
mov
mov
movb
ret
cli
in
or
je
mov
inc
jnp
leave
push
shrb
pop
mov
frstor
cmp
out
cmp
lods
push
and
imul
mov
mov
jbe
sub
fisttps
ds
pop
jbe
dec
fwait
jg
loope
jl
adc
nop
xor
pop
mov
ret
imul
clc
fs
xchg
leave
fnstcw
cmc
outsl
fcmovb
fimull
lds
pop
aam
sbb
in
in
fsts
test
pop
fs
pop
clc
and
mov
xchg
xchg
aas
mov
push
cmp
add
jmp
arpl
add
mov
mov
insb
jge
xchg
insb
and
and
insb
loop
in
mov
or
sahf
lods
insl
cli
or
in
sahf
sbb
cmp
mov
mov
enter
stos
dec
hlt
leave
je
cli
cmpsb
xchg
call
cli
rcrl
rcrb
push
arpl
adc
testb
sub
daa
xchg
xchg
filds
rorb
clc
mov
or
dec
cmp
mov
xorb
dec
test
arpl
pop
xor
adc
out
add
stc
popa
push
das
dec
fstpl
or
inc
mov
enter
mov
jnp
xchg
pop
fnop
mov
push
ss
test
jge
jle
bound
xor
inc
movb
mov
arpl
mov
cmp
addr16
cmp
lds
dec
arpl
add
fstpl
movsb
jo
insb
xor
jns
lods
into
lahf
stc
inc
mov
push
into
and
test
inc
daa
sub
cmp
test
insb
sub
add
pop
stc
aad
mov
data16
test
and
dec
bound
pop
inc
mov
hlt
imul
idivb
push
lret
pop
cmpsb
and
jmp
pop
out
jno
lea
shl
push
ja
cli
inc
lcall
popa
sbbb
push
jns
loopne
lcall
inc
inc
and
adc
jo
insl
lock
lret
stos
movsl
cmc
repnz
pop
pushf
lahf
shlb
add
pusha
js
or
xchg
jmp
mov
mov
jp
fs
push
movsb
lcall
sbb
shrb
mov
adc
dec
into
testb
mov
outsb
push
sbb
mov
jg
out
fistpl
dec
add
bound
push
fimuls
scas
inc
roll
mov
mov
lret
mov
hlt
daa
sub
xor
jnp
lahf
cmpl
mov
xor
jae
mov
cmpsb
ja
loopne
in
mov
mov
mov
cmpsl
adc
scas
xchg
sahf
leave
mov
into
push
jnp
sub
mov
mov
aas
mov
sahf
push
add
xchg
adcl
in
push
fisubrl
sahf
nop
and
push
in
lahf
and
pop
insl
pushf
imul
xor
shlb
out
pop
xlat
pop
pop
dec
out
ss
scas
xchg
and
mov
shlb
xchg
jl
and
mov
ret
jp
mov
push
test
pop
mov
insb
cmp
scas
test
jb
cld
sbb
std
test
xor
repz
adc
push
xor
cmpsl
std
pop
mov
dec
and
push
mov
inc
subl
dec
mov
cwtl
mov
mov
lahf
mov
enter
xor
fistl
mov
movsb
sub
jecxz
push
js
in
jmp
hlt
adcl
sub
cmp
or
aas
sahf
mov
xor
jne
dec
or
push
sbb
inc
scas
test
sbb
daa
cli
jo
adc
mov
or
pop
pop
loopne
push
cmpsb
xchg
or
mov
and
outsb
arpl
sub
pop
jae
mov
popf
mov
in
mov
icebp
sbb
out
mov
and
dec
adc
push
sub
sbb
jmp
es
aam
jnp
vminpd
xor
sub
sbb
sub
mov
in
jle
inc
iret
mov
cli
jns
and
mov
ret
mov
insb
jae
adc
arpl
mov
or
dec
movsl
xor
push
mov
scas
xor
add
inc
push
or
das
push
shll
xchg
mov
dec
sub
leave
xchg
dec
sub
add
xor
outsb
rcrb
addr16
in
cld
sti
jae
popf
xchg
nop
xor
adc
adc
ret
dec
cmc
mov
jp
out
xor
jp
test
mov
lods
pusha
and
shrb
xchg
scas
push
push
js
js
sar
cmc
add
jns
pusha
and
out
scas
repnz
test
xor
pop
add
mov
push
dec
pop
add
leave
int3
xor
ss
ljmp
inc
push
int
cmp
jle
stos
pop
adc
sub
repnz
cld
sar
xorl
jae
push
sbb
sti
and
call
jbe
add
xor
push
and
dec
xchg
ret
push
xchg
mov
aaa
sahf
xorl
jne
jmp
movl
leave
jns
cmp
stos
xchg
aas
call
inc
dec
cmp
push
xchg
xor
out
outsl
sbb
jmp
push
out
add
pop
aas
push
jae
push
movsb
in
cs
iret
mov
mov
arpl
jne
out
cmpsb
fwait
pop
or
adc
popa
scas
or
mov
jl
cmpb
into
cmp
ljmp
xchg
lret
jmp
cmp
cmpsl
adc
dec
fisttpll
add
jle
jne
inc
pushf
arpl
mov
adc
mov
adcb
addb
sbb
cmpsb
push
outsl
sub
xlat
push
pushf
fdivrs
cltd
inc
mov
out
aam
jnp
cmp
mov
cltd
sbb
les
push
sbb
sti
fdivp
xchg
mov
adc
lret
loop
std
push
frstor
dec
add
add
inc
jecxz
jecxz
jmp
jecxz
push
subb
jb
add
pop
adc
xor
movsb
ja
and
cmp
mov
adc
dec
daa
lret
repnz
sub
sti
xchg
fcomps
in
push
imull
jno
rcr
and
xchg
cwtl
and
mov
mov
std
add
fbld
push
push
inc
adc
mov
mov
dec
decl
push
mov
and
xchg
lea
not
sbb
jbe
call
mov
dec
sub
xchg
testb
and
int
mov
sahf
popa
inc
sar
mov
cmc
mov
sbb
imul
sbb
jno,pt
out
dec
orl
inc
add
mov
add
sti
stc
call
notb
mov
jecxz
mov
lahf
shrl
add
jle
bound
and
jp
cs
mov
mov
ds
xchg
pop
jp
mov
nop
pop
sub
mov
or
dec
jp
cltd
test
rolb
pop
movsl
and
aam
mov
jecxz
cmp
jno
clc
out
into
test
sahf
mov
mov
mov
jge
dec
xor
repz
call
add
hlt
adc
cmp
test
adc
mov
sbb
or
sub
sti
mov
xchg
into
dec
add
dec
hlt
popf
outsb
gs
addr16
lods
repz
mov
sub
cmp
push
je
int
inc
xchg
pop
sbb
rep
push
es
xor
pop
sub
enter
mov
sbb
inc
adc
jl
lret
xlat
sbb
das
sub
push
lds
mov
mov
sbb
push
sbb
jl
adc
das
xor
subb
add
xor
ret
sub
dec
push
repnz
data16
imul
das
test
push
je
or
mov
lret
ljmp
add
aad
and
mov
sub
cmpsl
fadds
xchg
lahf
insb
cmpsl
mov
mov
adc
iret
test
cltd
cmp
sub
xlat
les
push
stc
movsl
pop
stc
rclb
fidivs
jg
mov
nop
test
insb
mov
ja
xlat
popa
mov
sbb
ret
inc
out
int
pop
xchg
sub
dec
jp
inc
jae
mov
rcrb
cmpsl
fidivs
addr16
xchg
push
and
nop
xchg
adc
insb
insb
jmp
hlt
popa
nop
insl
push
in
jl
cmpsb
mov
fistpl
js
pop
in
clc
pop
std
sbb
aas
sbb
push
push
mov
adc
dec
int3
imul
rolb
sbb
xlat
std
xchg
scas
imulb
jp
insb
jmp
lds
test
jns
jecxz
scas
push
mov
cmp
adc
pop
hlt
aad
fisubrs
out
mov
dec
addr16
aas
jp
xor
ds
or
xchg
cmpsl
sbb
lds
fwait
hlt
filds
ja
sbb
sbb
sbb
scas
dec
inc
adc
mov
inc
mov
sbb
inc
pop
or
lds
fisttpl
inc
outsb
roll
jnp
and
out
xor
pop
mov
sub
nop
add
cltd
mov
adc
and
cmp
fmul
pop
or
data16
xor
jp
das
add
fwait
cmp
push
jno
clc
xor
lock
pop
in
and
xchg
sub
clc
enter
sbb
adcl
xor
in
jle
mov
xor
xorb
cmpl
sub
lea
and
xor
std
nop
pop
sub
popf
sahf
dec
movsl
adc
negb
mov
js
mov
xchg
mov
and
cli
adc
sbb
sbb
sbbb
xor
mov
lods
xchg
xor
sub
xchg
lea
pop
pop
jb
sbb
cmp
dec
pop
fsubl
add
lock
xor
imul
xor
imul
vpmulhw
ja
in
jl
adc
test
mov
ret
dec
jns
gs
andnps
pop
mov
jne
adc
push
jle
jnp
mov
stc
stc
push
xchg
dec
xchg
jecxz
arpl
xchg
mov
fistpll
add
lret
test
jnp
outsl
sahf
mov
pusha
imul
xchg
ret
nop
cmp
mov
jl
push
cmp
test
pusha
cmp
xor
lcall
cli
cld
cs
pop
rcrb
aad
dec
outsb
out
push
adc
data16
lds
std
lahf
ret
push
inc
pop
jg
loop
orl
out
sub
pop
xor
movsb
jg
pop
mov
fildll
popf
jns
push
loopne
xchg
rcr
add
cli
ds
test
and
and
add
outsl
or
pop
in
arpl
sbb
adc
inc
mov
xchg
jnp
dec
mov
and
ljmp
xor
jo
ds
xor
daa
jb
push
jp
jne
sbb
inc
xorb
xlat
je
js
shll
jmp
cmp
fs
fsubrs
pop
out
push
push
dec
add
std
mov
arpl
cmpsl
inc
mov
push
mov
pop
dec
mov
out
mov
xor
arpl
gs
or
cmp
pop
xor
mov
subl
js
pushl
enterw
fwait
and
cmp
dec
sti
xchg
or
cmc
cmp
add
stc
push
mov
les
std
inc
stc
out
scas
and
pop
out
mov
ds
std
bound
pop
pop
pushf
mulb
push
inc
add
cwtl
pop
sub
push
dec
xchg
cld
iret
ja
inc
movb
cmp
testl
mov
cmp
pop
es
push
jo
hlt
std
and
orb
addr16
outsl
push
pop
rorb
jns
pop
push
cmpsl
push
in
movsb
xor
fidivrs
add
dec
fld
xchg
push
std
lods
in
repz
xor
iret
cmp
adc
mov
scas
xor
dec
fcmovb
fldenv
scas
loope
aas
sti
hlt
mov
add
or
xchg
loopne
sbb
lcall
mov
or
pop
bound
adc
push
fidivrl
pop
mov
push
push
dec
mov
out
push
mov
sub
int3
fiadds
movsb
jo
js
fdivp
repz
lea
pop
pop
inc
push
sbb
push
xor
stos
mov
dec
je
dec
xor
dec
sub
xchg
xor
adc
push
aam
pop
cwtl
aas
test
add
stos
ljmp
sarl
test
adc
lods
ret
lcall
cltd
jge
inc
lahf
popf
push
inc
data16
adc
push
pop
sub
imul
into
push
sti
fs
jecxz
sub
dec
daa
ret
jns
imul
cmpsb
cmp
fstpt
sti
mov
mov
inc
outsb
adc
jno
bound
cmpsb
out
out
inc
cs
inc
shll
mov
push
jp
xchg
mov
pop
add
add
cmpsb
sub
mov
clc
test
mov
movsl
subl
stos
out
xchg
mov
lahf
loop
lret
stos
adc
nop
or
and
adc
mov
cli
push
lock
loope
vpmullw
add
clc
push
xor
sub
xchg
addl
push
mov
fsub
and
and
xchg
stos
cmp
cmpl
sahf
cwtl
ficoms
xchg
hlt
or
inc
lods
xchg
cs
ret
dec
sbb
mov
sub
in
ret
jno
or
or
shrb
jo
pusha
ljmp
lods
in
xor
mov
std
adc
xchg
addr16
rclb
sub
movsl
pop
call
daa
jne
push
in
xorb
js
pop
insl
arpl
mov
cmpsb
leave
mov
dec
add
aas
pop
xchg
xchg
cli
add
add
cmp
push
add
imul
mov
ret
mov
hlt
jae
rcr
daa
imul
push
push
daa
dec
cmp
and
and
sti
or
out
and
dec
lock
inc
pop
lea
cmpb
cmpsb
mov
sahf
or
or
pop
cmpsb
fbld
mov
rcrb
sub
lcall
xor
and
mov
xor
xchg
in
outsb
push
cwtl
outsl
je
pop
repnz
inc
jge
test
aam
sbb
jmp
xchg
subl
cmp
sbb
mov
ds
add
sbb
ljmp
out
mov
sbb
int
or
mov
fmulp
cltd
repnz
mov
xor
sbb
push
repnz
mov
add
adc
mov
pop
out
aad
cmc
call
jg
cmp
dec
lcall
jno
aam
xchg
and
ss
mov
adc
stc
sub
cmp
mov
cmpsb
ret
xor
ficomps
sbb
fdivrs
icebp
adc
add
test
adc
mov
mov
xchg
mov
int3
fildll
icebp
fsubrs
push
sbb
pop
mov
loop
mov
jg
lods
lock
mov
in
cmp
cli
arpl
call
lds
leave
imul
fistpl
inc
mov
sbbb
pop
dec
lahf
incl
data16
sti
jmp
fnstsw
fdivs
add
cld
call
mov
out
std
jo
dec
mov
xchg
cmpsl
sub
cltd
outsb
jbe
arpl
fiaddl
loopne
nop
sbb
adc
ret
xchg
pop
and
add
adc
data16
scas
addr16
cmp
stos
dec
inc
push
mov
sbb
loopne
jbe
and
sub
jbe
inc
pop
data16
mov
int3
rorl
dec
ja
stos
sti
mov
fistpll
cwtl
inc
ficompl
mov
mov
movsl
xor
stos
inc
jae
daa
jg
and
adc
mov
sarl
or
pop
rclb
fildl
loopne
and
cmp
adc
pushf
mov
outsb
int3
sub
or
loop
sub
jmp
mov
call
lods
cmp
gs
in
xchg
push
orb
out
mov
movsb
add
shlb
and
daa
mov
xor
push
cmp
inc
push
or
push
add
mov
push
iret
int
outsb
push
dec
daa
xchg
xor
mov
xchg
mov
aaa
repnz
mov
loope
jae
cmc
mov
adc
and
mov
mov
fcoms
mov
aaa
aas
xchg
nop
inc
out
call
sbb
inc
daa
xlat
mov
ds
and
pop
xchg
add
add
stos
pop
add
and
loop
lret
sbb
sbb
les
mov
dec
or
aaa
add
pop
scas
mov
test
jns
mov
mulps
xchg
scas
mov
adc
pop
out
push
nop
push
psubb
inc
or
inc
lret
insl
ljmp
xchg
stos
pop
or
adc
bound
ret
add
push
mov
push
movb
inc
cmp
stos
or
adc
das
push
xor
dec
repz
mov
arpl
adc
or
clc
in
movsl
jb
outsl
outsl
test
mov
mov
subb
mov
xor
xor
int3
xchg
jbe
mov
cmc
mov
or
mov
adcb
ss
sub
push
xchg
stc
adc
or
pushf
jle
adc
xor
cmp
sahf
and
mov
das
adc
cmc
movsb
gs
pop
test
pusha
add
or
test
and
pushf
mov
or
sbb
ret
test
lds
push
loop
pop
push
add
aaa
mov
push
pop
shrb
js
mov
lea
popf
adc
jb
mov
leave
xor
insb
fistpll
ret
int3
adc
push
jnp
data16
clc
cli
jns
mov
int3
jmp
cltd
mov
push
bnd
mov
aas
or
lods
enter
scas
pop
enter
je
xchg
push
push
xchg
xchg
pop
in
mov
jns
jge
pop
int3
push
aad
andl
cmp
dec
mov
aam
mov
sbb
or
std
jnp
add
imul
outsb
and
xchg
sub
lods
orb
jnp
pop
jle
lock
dec
mov
lods
sub
ja
dec
mov
mov
fistl
stos
adc
xor
jecxz
arpl
push
fsub
jbe
notl
es
jl
jae
pop
in
pop
in
das
pushf
nop
adc
sti
mov
sti
out
inc
pop
into
aam
cs
cltd
fs
sub
sahf
nop
sahf
and
fsubr
addps
in
call
or
test
mov
fidivs
jle
shl
adc
push
push
test
sti
dec
add
leave
dec
addr16
fs
cmpl
push
sahf
ljmp
leave
outsl
loop
mov
fimull
int3
fidivrl
jbe
pop
xchg
test
std
xchg
jnp
sub
scas
jnp
leave
test
add
xchg
push
aad
xchg
jg
aam
xchg
jne
std
inc
pop
mov
rcrl
stos
insl
les
ljmp
jge
subb
cli
call
repnz
fcmovnbe
mov
int
ret
cmpsb
mov
adc
mov
push
call
xor
add
cmp
fists
popf
clc
aad
sbb
mov
adc
iret
inc
stc
sbb
mov
out
pop
xor
pop
insb
mov
roll
sbb
xchg
jmp
or
mov
xchg
jmp
inc
or
imul
xchg
out
jge
lock
int3
inc
cltd
push
fisubs
nop
push
dec
cmpsl
fmul
in
mov
push
xor
or
cmpsl
mov
inc
pop
jns
jmp
mov
push
flds
pop
sarl
mov
mov
pop
scas
dec
rorb
fstpl
iret
bound
int
stc
pusha
push
cltd
test
filds
pop
insb
rcll
xor
inc
pop
dec
hlt
lds
icebp
mov
dec
dec
adc
inc
xchg
into
sahf
gs
outsb
add
cmp
pop
jmp
shrb
jle
outsb
dec
cwtl
xor
aam
pop
sbb
and
or
xlat
in
test
fimull
dec
mov
mov
into
push
cmp
sub
ror
lds
pop
fldcw
or
mov
int3
scas
mov
add
cld
xchg
aaa
push
sbb
jmp
test
popf
pop
cmc
jbe
arpl
pop
nop
xor
clc
popf
pop
or
and
sbb
lods
cmp
iret
mov
fs
in
dec
out
xor
in
hlt
in
push
pop
test
inc
outsl
xor
mov
or
mov
dec
push
ret
gs
data16
arpl
lods
sub
cli
std
push
out
pop
jae
pop
jbe
add
dec
loopne
repz
out
cmp
jecxz
add
jge
fxtract
push
sub
mov
sbb
push
adc
cmp
xor
mov
add
pop
fstl
leave
insl
add
dec
push
ret
push
psubb
pusha
je
pop
ret
push
rcll
cmpsb
pusha
mov
xor
or
jae
addr16
inc
push
and
xchg
mov
mov
icebp
push
aad
lods
xor
jl
dec
mov
ss
cmp
popa
repz
stos
nop
jno
stos
pop
push
push
mov
or
mov
cltd
sbb
jne
pop
jno
dec
xchg
xor
repnz
mov
aam
mov
and
mov
call
jg
int
push
cmp
inc
imul
shrl
loope
mov
iret
jb
out
negb
lret
jle
out
sbb
mov
mov
xor
or
mov
and
cmpsl
arpl
jae
inc
add
fstpl
and
icebp
shlb
inc
nop
add
xor
repz
push
ja
xor
xchg
pop
and
call
push
fdivr
sbb
jae
sub
dec
add
jmp
mov
stos
rcll
adc
jnp
push
push
enter
popa
ljmp
fnstcw
lods
mov
mov
xor
popf
pop
lcall
xor
push
test
sti
sti
adc
data16
in
sub
in
and
push
je
loope
stc
iret
sub
nop
adc
dec
test
jbe
jbe
pop
popa
dec
cli
sub
push
xor
inc
icebp
push
xchg
icebp
data16
outsb
adc
jp
dec
mov
pop
mov
mov
rcrb
jmp
inc
pop
xchg
into
pop
arpl
mov
dec
gs
fdivl
aad
xchg
inc
mov
xor
in
adc
or
sub
mov
jbe
adc
jmp
push
loope
inc
lahf
sbb
fs
xchg
imul
hlt
dec
arpl
lret
mov
outsb
aam
jb
and
lock
bound
sub
and
cmp
sbb
lahf
loope
inc
inc
mov
xor
ss
mov
in
mov
dec
xchg
mov
sti
jno
ud0
or
adc
je
ljmp
test
mov
push
sbb
aam
cmp
or
lcall
cmp
js
decl
xor
pop
mov
clc
jmp
test
adc
push
in
pop
ljmp
mov
xor
xchg
popa
push
cmp
mov
push
repz
pop
pop
out
push
mov
mov
mov
sub
or
test
rcrb
rcrb
sub
insb
xor
out
mov
adc
into
nop
add
loopne
out
es
movsl
scas
inc
outsl
and
push
pusha
and
fisubrs
push
dec
xlat
or
sbb
xchg
les
or
pop
mov
and
sbb
pop
adc
cmp
ja
mov
filds
fwait
gs
ljmp
cmp
xor
push
mov
insl
pmaxsw
pop
fucomip
sahf
cwtl
arpl
mov
roll
or
orl
inc
mov
add
stc
scas
mov
bnd
sub
xor
cmp
or
cmp
inc
mov
jnp
dec
test
pusha
pusha
jns
xchg
fdivrl
mov
leave
pop
xlat
and
mov
in
sub
mov
cli
lods
cmpsb
add
out
and
pop
push
mov
jns
xchg
cmovp
sahf
cmp
aaa
mull
int3
xor
or
mov
mov
loope
fidivl
icebp
cmp
jne
mov
or
dec
in
add
imul
sbb
je
add
hlt
dec
add
iret
cmp
addl
add
mov
orb
pop
sub
lds
mov
pop
or
sbb
cmp
adc
lcall
xchg
or
cmc
mov
test
ja
stos
adcl
xorb
lcall
fidivrl
mov
push
dec
jbe
and
pop
daa
or
les
lret
dec
int
push
jecxz
les
in
pop
jae
in
xor
sub
cmc
xor
cs
push
lahf
or
cmp
stc
mov
mov
dec
out
pop
and
push
mov
push
jno
loopne
js
clc
push
lds
fildl
cs
or
jle
xchg
inc
sbb
cmp
inc
xlat
or
in
jp
add
jmp
movsb
and
dec
cmpsl
mov
pop
pop
lret
test
fwait
jecxz
mov
iret
push
cmp
lock
add
rorb
lahf
or
push
orb
test
or
scas
push
push
pop
mov
mov
sbb
lcall
jns
les
pop
cmpl
mov
xchg
push
shl
pop
push
scas
dec
cmpsb
scas
pushf
and
pushf
pop
jae
stos
mov
xchg
pushf
movlps
jl
into
popa
addb
jmp
sub
fwait
scas
pop
rclb
mov
insb
ss
push
cmp
jmp
scas
adc
mov
adc
mov
or
sti
ja
dec
frstor
sarb
add
hlt
clc
cmp
jbe
loope
ljmp
popa
gs
jle
in
dec
loop
add
test
loop
and
outsb
pop
adcb
cmp
cmp
mov
xor
adc
fisttpll
sti
mov
test
mov
adc
pop
pop
xchg
mul
adc
lods
shll
sbb
inc
inc
cli
mov
pop
jge
call
add
test
xor
out
inc
fcmovnb
rcr
std
data16
adc
jne
fiaddl
cs
pusha
repz
inc
sbb
addr16
jp
nop
jle
push
movsb
xchg
pushf
rcll
sbb
add
jmp
or
mov
jg
and
fdivl
pop
in
icebp
mov
repnz
iret
leave
add
mov
popl
jnp
push
jge
punpckldq
add
xchg
push
out
mov
and
lods
sub
sti
mov
jnp
call
andb
arpl
iret
daa
cmp
mov
mov
push
pop
pushf
shrl
xchg
je
inc
inc
adc
into
cmp
pop
mov
lods
mov
es
mov
inc
sbb
jb
mov
mov
sbb
dec
repnz
mov
cs
add
xor
test
inc
pop
int
jbe
andb
mov
pop
mov
push
push
lahf
mov
jbe
sbb
lea
cltd
mov
fdiv
cwtl
xchg
xor
stc
cld
mov
jle
fistpl
inc
jns
adc
sub
shl
and
arpl
daa
jne
shlb
adc
lret
mov
repz
cs
dec
xchg
inc
int
aad
test
jmp
cmp
insl
mov
pop
xor
jnp
jae
adc
sbb
mov
dec
mov
cmp
jno
add
in
lea
test
movl
add
inc
xchg
stc
aaa
ret
mov
sub
jbe
xchg
push
adc
dec
inc
pop
fwait
adc
testl
push
daa
lcall
fdivrs
in
in
shrl
fs
push
insl
popa
mov
popa
xchg
cmp
lret
jmp
sub
in
pop
push
nopl
dec
inc
inc
je
pop
mov
mov
cli
or
add
xchg
into
jg
sahf
and
iret
dec
mov
sbb
pop
cmp
cmp
lods
stc
pop
call
lret
mov
dec
mov
mov
popf
xchg
imul
push
das
and
mov
xchg
dec
ja
das
and
or
ljmp
lods
mov
sbb
cmp
jno
mov
faddl
daa
jbe
sub
mov
inc
pop
test
dec
and
mov
or
ss
notl
jae
cli
mov
sbb
fldenv
lret
stos
jecxz
push
clc
or
and
mov
stos
mov
pop
cs
movsl
mov
call
es
sarl
pop
scas
jae
jbe
pop
andl
dec
sti
and
ljmp
ss
mov
andl
add
xor
adc
xor
jns
pop
test
push
sub
fimuls
pushf
or
int
jo
mov
movsb
fwait
jo
sub
int
xchg
cmp
push
lods
or
call
mov
cmp
push
inc
cmp
cmp
xor
pop
pop
adc
cwtl
pop
repz
rolb
lds
push
aaa
rcl
aam
inc
rolb
jne
adc
ficomps
xchg
pop
jg
lcall
pushf
insb
aaa
and
cmpsb
adc
inc
scas
arpl
add
cmpsb
mov
cltd
xlat
pop
pop
cmc
mov
fildll
push
or
adc
cmp
xchg
mov
dec
or
es
xor
push
std
ljmp
pop
incb
in
ret
cld
divb
bound
sub
shll
insl
cs
aam
cmpsb
xchg
pusha
inc
fwait
bound
pop
in
js
jno
jb
cli
push
ds
cli
cwtl
cmp
dec
lcall
inc
lret
dec
inc
scas
push
in
jecxz
cli
push
mov
adc
adc
pop
jp
xor
movsb
roll
mov
adc
xchg
mov
mov
leave
mov
inc
arpl
push
out
dec
dec
or
push
push
jmp
xchg
fldcw
adc
clc
push
and
mov
test
mov
sbb
sti
data16
mov
jl
jb
pop
mov
or
mov
addl
xor
pop
andl
add
scas
data16
inc
xchg
mov
sahf
and
ljmp
jp
std
fcom
or
jne
cmpsl
push
cmp
xor
test
popf
mov
mov
jae
push
mov
push
mov
pop
cmc
in
xorb
xchg
pop
jno
or
cmp
jns
movsl
ret
mov
jp
xor
ja
xlat
mov
test
aas
ds
leave
xchg
nop
jp
pop
dec
mov
in
clc
cmpsb
out
or
push
das
lds
jg
mov
fsubrs
xor
push
cmp
mov
push
xchg
and
or
lahf
and
mov
xor
or
popa
push
mov
dec
xor
push
fs
sbb
sbb
cltd
rolb
int
imul
mulb
xor
subb
and
outsl
push
push
push
mov
das
xlat
notl
xchg
addr16
nop
dec
mov
insl
test
mov
cs
xor
stos
int
and
xor
dec
stc
mov
mov
xchg
or
aas
mov
push
jb
xchg
mov
pop
cmp
xorl
scas
into
or
lret
je
jg
mov
popf
fcom
mov
ret
cmp
mov
jmp
mov
and
xor
inc
mov
push
add
cmpsl
imul
mov
popf
sub
and
jmp
clc
jne
lds
call
dec
mov
jge
dec
sbb
cmp
ss
push
xchg
lock
inc
fisubrs
std
mov
inc
xchg
add
mov
adc
aaa
push
add
sub
out
lret
scas
cltd
nop
loopne
add
out
stos
loop
pop
out
inc
lahf
mov
stos
test
mov
lcall
movsl
lds
adc
nop
nop
jl
push
and
cltd
cwtl
jb
subb
lret
jmp
push
leave
pusha
cwtl
bound
adc
xchg
pop
sub
adc
and
or
les
ret
ljmp
ja
pop
rcl
mov
je
repnz
mov
fmul
pushf
mov
int
gs
test
sub
scas
or
xor
inc
and
jmp
mov
mov
inc
jge
dec
pop
jge
std
mov
lock
cmp
and
dec
out
mov
pop
jnp,pt
jecxz
ja
lahf
fidivrl
sub
cs
adc
jle
xchg
jno
mov
sub
add
pushf
mov
xlat
sub
xchg
mov
adc
or
pop
shlb
bound
mov
mov
inc
fiaddl
jl
lods
adc
call
sub
mov
mov
dec
inc
insl
call
leave
cs
movsl
dec
test
mov
dec
inc
and
les
xchg
add
cmp
mov
mov
lcall
cs
jle
test
pop
cltd
push
imul
pop
enter
popf
in
pop
dec
push
sub
adc
int
neg
iret
imul
nop
repz
jmp
xlat
loopne
inc
mov
adc
leave
mov
cltd
or
add
jecxz
leave
pop
mov
jp
xor
push
cmp
in
out
stos
mov
mov
int3
or
ficompl
mov
mov
or
cmpsb
sbb
mov
imul
mov
fisubrl
push
mov
cld
insb
lahf
push
mov
idiv
xchg
and
aas
outsb
into
cmp
mov
mov
mov
xlat
insl
sbb
out
push
xchg
mov
jbe
stos
mov
or
jl
into
js
bound
shrb
ret
iret
and
or
into
cmp
data16
lret
jbe
xor
in
xor
out
bound
jae
ss
and
jecxz
pushf
aad
popf
inc
mov
lret
jl
pop
lods
in
sub
xor
or
adc
mov
push
xchg
int3
or
scas
pmaxub
add
mov
aam
sbb
repnz
mov
mov
push
add
aas
decb
sub
nop
pop
mov
mov
inc
imul
lret
xchg
int
add
xor
mov
nop
inc
sbb
sub
mov
iret
outsb
jb
jb
xchg
add
mov
out
xor
stos
andl
jno
mov
xor
loope
outsb
xchg
pop
lret
adc
push
adc
xchg
out
popa
sub
push
add
std
test
cmc
cmp
lret
jo
or
pop
and
add
outsl
pop
dec
jnp
nop
push
roll
stos
call
jo
mov
and
insl
arpl
dec
shr
fwait
sti
lods
mov
adc
sbb
pusha
inc
aas
dec
mov
cli
fadds
push
xchg
orb
xchg
js
lock
es
test
sub
pop
ret
mov
pushl
pop
or
add
and
xchg
inc
xchg
adcb
mov
sti
mov
jns
jne
adc
mov
fnstenv
jne
jge
inc
push
into
and
lock
xchg
jle
push
mov
mov
subb
test
lea
je
lods
xchg
fcmove
js
inc
lock
adc
mov
mov
cmp
pop
ljmp
push
sub
int
mov
push
jbe
test
int3
jle
insb
or
jge
fwait
mov
test
imul
adc
push
or
dec
outsl
shl
sti
push
push
xchg
clc
pop
xchg
outsb
or
xor
imul
jg
clc
fiadds
push
dec
adc
les
popa
mov
sti
in
fmull
pop
mov
jnp
rcrb
or
movb
popa
out
xchg
sbbl
iret
cmp
xlat
pop
xor
data16
push
mov
sahf
jl
lcall
or
cmp
push
std
jg
lahf
pop
inc
push
imul
and
lods
mov
xlat
sti
push
js
sbb
cld
cmpl
or
das
push
scas
xor
push
bound
sahf
pop
dec
outsb
nop
dec
and
ss
jl
subb
cmp
xor
iret
in
xchg
pop
push
insl
inc
sbbl
lret
jge
or
fldt
popf
icebp
xor
add
xchg
test
dec
xchg
jbe
pop
xor
jo
sub
fstpt
push
xor
dec
mov
or
cltd
jns
pop
cmp
movsb
dec
push
add
jge
pop
ss
inc
pop
xor
jb
mov
andl
xchg
imul
push
filds
inc
adc
xchg
popf
xor
lcall
test
push
push
movb
aam
and
jb
je
mov
lret
jecxz
sbb
out
xchg
dec
add
inc
ljmp
push
addl
gs
in
push
pushf
cmovp
sub
decl
ljmp
jmp
int
jle
cld
andl
test
imul
add
push
js
inc
lcall
cmp
dec
shr
add
adc
test
jp
xor
mov
mov
fbld
stc
xchg
push
sbb
mov
sbb
inc
hlt
cmp
movsb
icebp
and
popa
pop
lcall
cmp
insl
add
stc
arpl
mov
stos
xor
lock
inc
inc
mov
stc
cmpsb
pop
rorb
mov
sub
add
cmpsb
sbb
add
xor
cmp
or
mov
pop
jnp
rcrl
inc
cmc
dec
subb
repz
sub
adc
xor
inc
jne
cmpsb
sub
gs
cmp
rol
sub
sbb
in
lods
movsb
and
lds
mov
mov
and
or
push
sahf
pop
out
cmc
ret
lret
daa
lahf
call
mov
jge
addr16
je
pusha
dec
and
inc
mov
inc
imull
stc
mov
xchg
test
push
jno
add
mov
cmp
notb
mov
imulb
mov
mov
gs
inc
xor
shll
push
jb
fwait
addr16
jl
cld
jno
or
in
or
mov
mov
xchg
adc
test
fcomp
jg
addr16
es
pop
gs
adc
mov
mov
in
shlb
aam
out
into
xchg
mov
dec
jno
icebp
arpl
or
lods
add
and
addb
or
loop
out
stc
out
in
push
pop
inc
lcall
insb
hlt
int3
dec
repnz
dec
ret
xor
push
ljmp
add
int3
movsl
push
jae
inc
std
mov
jge
cld
loop
subl
sbb
aam
sub
push
std
xor
lea
popa
jnp
jne
test
xchg
dec
out
sub
pop
faddl
mov
mov
xorb
mov
pop
or
jb
mov
jae
pusha
bound
push
in
sbb
movsl
jae
and
sub
sub
mov
xchg
cmp
rorb
adc
sub
xor
adc
cmc
add
addr16
or
push
sub
cli
xchg
leave
gs
pop
stos
scas
sub
cmp
mov
lret
test
adc
in
bound
xor
xchg
test
adc
movsl
push
dec
jns
shll
jl
loop
mov
js
lret
mov
jns
fbld
fwait
data16
adc
sub
sbb
out
mov
dec
and
repnz
push
xchg
push
xlat
adc
mov
stos
jb
repnz
and
loop
cmp
mov
icebp
call
sti
or
mov
or
cld
mov
or
mov
add
test
and
mov
add
xor
ret
xchg
mov
lea
and
mov
sbb
mov
insb
je
lds
test
inc
out
movsl
clc
loope
push
stos
xlat
jg
outsl
adc
out
dec
mov
sub
mov
int
mov
stos
sbbb
stos
sbb
mov
ficompl
pop
adc
adc
cmp
or
sbb
aas
pop
test
mov
sub
inc
aam
pop
cmpsl
nop
sub
inc
cld
aaa
xchg
in
or
push
mov
pusha
arpl
mov
inc
movsb
loop
sbb
dec
xchg
xchg
xor
sarl
dec
cmp
or
inc
in
inc
pop
out
addr16
faddl
mov
dec
inc
cmp
stc
lret
adc
int3
aaa
dec
movsl
cmp
scas
pushf
xor
fsubrl
adc
mov
inc
xchg
in
nop
ror
ffree
leave
mov
in
sub
push
jo
pop
mov
jns
cwtl
adc
mov
addr16
lahf
inc
leavew
roll
mov
imul
push
addb
add
jbe
push
in
rcll
add
clc
std
ret
aam
divl
popf
push
es
push
scas
jae
pop
subb
mov
jmp
jne
ror
inc
adc
xor
dec
loopne
mov
jecxz
shrb
mov
jnp
or
jae
outsb
pop
jg
outsl
jns
cmp
mov
inc
or
xor
mov
lods
in
orl
cs
test
aam
cmp
cmp
jle
cmc
lock
nop
jle
lea
and
outsb
mov
jmp
xchg
mov
je
stc
jbe
sbb
lds
lock
and
inc
add
mov
repnz
xchg
filds
add
jecxz
push
flds
and
loope
mov
jb
aas
or
ror
xor
test
subb
lcall
cmp
sbb
leave
in
out
mov
cmp
stos
add
xor
push
inc
mov
ret
stos
in
movsb
movsb
shll
pushl
adc
lret
clc
inc
and
inc
mov
cli
xchg
dec
or
pop
ret
jge
in
cltd
mov
lods
jmp
in
add
xchg
pop
rcrl
fs
in
pop
jne
cmpsl
add
fadd
push
cmp
stos
ret
fisttps
push
out
pusha
mov
mov
jmp
icebp
aas
pop
repnz
mov
jmp
es
andb
pop
xchg
adc
int3
pop
stos
mov
mov
and
sbb
xchg
enter
push
lcall
lods
sbb
inc
imul
les
addl
pusha
sbb
test
movsl
or
inc
mov
or
xor
lods
mov
loop
int3
sbb
pop
add
lds
ss
mov
fadds
xlat
lock
inc
out
outsl
jb
inc
lea
rorl
sbb
scas
in
lds
enter
sub
inc
mov
gs
xor
mov
sub
inc
add
cmp
imul
adc
sub
jle
shl
add
adc
lea
add
pop
xchg
xchg
roll
loopne
je
cmpsb
in
popa
dec
mov
in
ret
loop
addr16
frstor
push
adc
xor
sti
mov
popf
push
xlat
das
fcmovbe
lea
xor
mov
push
clc
enter
sbb
mov
or
pop
mov
sub
jecxz
insl
loope
cs
cmp
daa
aaa
mov
iret
fidivs
call
mov
push
push
pop
out
push
cmp
orb
push
and
adc
roll
inc
inc
sub
pop
clc
add
enter
cmp
xchg
and
in
add
push
daa
or
test
dec
push
aad
das
add
add
or
pop
mov
fwait
inc
stos
hlt
pop
cmpb
rcll
icebp
fwait
imul
lahf
push
test
js
into
mov
loop
lock
xlat
fs
hlt
dec
js
decb
adc
xchg
sbb
mov
ja
arpl
xchg
pop
int
fimull
jl
cmp
shrd
push
jb
pop
jns
stos
adc
xor
or
pop
test
nop
cmpsb
loope
jb
ret
es
das
repz
inc
mov
aad
xchg
call
das
mov
into
xor
push
lret
nop
insl
sbb
and
mov
mov
jg
xrelease
and
shll
out
repz
aas
or
mov
in
cltd
lahf
and
in
jo
sbb
dec
das
subl
js
sub
add
scas
insl
xchg
add
push
js
push
loop,pn
sbb
outsb
cld
pop
inc
daa
jns
sbb
mov
pop
fwait
push
xchg
cld
dec
xchg
aam
clc
cmpsl
pushf
je
addr16
ret
add
cli
xor
iret
push
or
les
pop
xor
dec
cmc
pop
jo
mov
arpl
inc
jmp
into
pop
fadds
sbb
je
pop
pusha
xor
and
pop
or
dec
xlat
sub
push
out
mov
push
addr16
push
movnti
test
icebp
jnp
addr16
icebp
add
or
popf
int3
sbb
imul
sbb
pop
inc
or
mov
ss
mov
xorb
sbbl
mov
lcall
mov
xchg
push
aad
inc
xor
cmpsl
add
icebp
js
xchg
add
jns
bound
mov
jb
mov
call
jae
mov
int
sbb
sub
fcoml
xchg
cmp
rcrb
xchg
dec
aas
jbe
mov
mov
jg
ds
pop
or
sub
dec
mov
pop
movb
cwtl
push
push
mov
cmp
imul
sti
push
pop
sbb
pop
bnd
insl
aas
fimull
pop
xor
inc
lret
clc
jle
jmp
mov
inc
sahf
cld
lds
push
sahf
arpl
mov
jo
xor
pop
cmpsl
jno
pop
lret
iret
fisubrs
mov
lods
mov
jle
adc
add
mov
mov
xor
cmp
cmp
jns
js
lock
jmp
fcompl
xlat
popf
div
sbb
lahf
shrl
popa
add
sahf
ret
cmc
std
movsl
jp
push
fiaddl
dec
mov
rcrl
adc
lods
fcoms
xlat
xlat
sbb
cmp
mov
and
dec
inc
std
aam
iret
filds
dec
push
cmc
les
popf
and
pushl
in
xor
add
mov
pop
jl
pop
mov
inc
test
rcr
pusha
inc
scas
inc
ret
jl
addl
int
sbb
jne
cmp
out
fmuls
hlt
dec
xor
loope
cmp
push
lret
adc
std
dec
xchg
xor
xchg
push
sub
in
mov
pop
mov
pop
popa
aad
lods
sarl
mov
xchg
mov
mov
add
clc
or
xorb
xchg
hlt
ret
mov
mov
out
sub
cmp
fbld
and
ljmp
arpl
inc
push
sti
in
or
iret
pop
in
rcrb
cmp
je
sbb
jl
loope
pushf
fimuls
js
std
movsl
xor
jne
jno
push
or
arpl
int
fildll
scas
sub
cmpsb
or
sub
jecxz
or
shl
loop
add
jo
in
xchg
scas
adc
popf
mov
repz
dec
das
add
or
repz
imul
inc
jp
dec
icebp
dec
pop
push
xor
sub
in
mov
orb
imul
or
adc
xchg
pop
dec
aad
sbb
jnp
out
data16
fisttpl
mov
or
and
jg
xlat
stos
cmp
xchg
les
inc
fcmovne
lcall
mov
movsl
sub
ja
pop
shll
jno
adc
mov
jl
lea
xchg
int3
push
out
fildl
mov
mov
dec
loopne
loope
push
push
inc
pop
and
sub
loop
notb
pop
add
cltd
fisttpll
fisubrl
mov
mov
push
data16
push
add
aaa
addb
repz
jo
jg
sahf
push
and
data16
and
inc
push
sub
arpl
pop
xchg
add
in
jle
test
jno
xor
imul
dec
jbe
or
dec
push
jmp
in
rclb
inc
es
adc
sub
mov
inc
add
imul
pushf
cli
repz
sub
test
loop
popf
in
out
cs
fdivl
mov
mov
aaa
xchg
rclb
lret
add
jl
ja
ret
mov
mov
cmp
mov
lahf
adc
xor
mov
dec
jecxz
cmp
ljmp
xorb
add
push
test
je
add
sbb
repnz
xchg
test
and
orl
leave
lret
add
imul
int
jge
cmp
mov
cmp
fwait
dec
add
into
xor
subl
stos
lcall
out
fidivs
adc
jecxz
jae
dec
xorb
push
mov
neg
dec
xor
insb
sti
push
pusha
jbe
mov
imul
push
cmp
sub
dec
mov
jmp
lahf
inc
shr
push
and
movsb
ja
xrelease
int
pushf
daa
jl
into
push
clc
test
xchg
imul
xchg
adc
adc
aas
daa
jmp
lret
nop
cmpsb
lods
xchg
adc
in
pop
iret
xor
aad
push
popf
jge
lea
push
sub
add
adc
cmp
push
lea
mov
mov
and
movb
test
lods
mov
fmuls
cmp
mov
daa
lahf
scas
pop
mov
movsb
cltd
xor
test
add
cltd
xchg
inc
rcr
inc
dec
mov
ret
sub
loope
fistpll
mov
push
ds
int3
mov
js
cmp
push
arpl
add
xchg
cmpsb
pusha
xchg
push
sbb
fisubs
fcmovnbe
cwtl
xchg
pop
sbb
nop
je
inc
push
fistpll
fdivrs
or
icebp
idivb
testb
inc
cmpsl
pop
pushf
mov
ret
loop
sbb
sbb
scas
mov
mov
addr16
js
dec
cmp
jbe
lods
pop
nop
out
and
add
ret
mov
out
or
jbe
jns
loope
mov
jmp
mov
ss
inc
and
adc
loop
mov
adc
push
or
lcall
cmp
in
mov
push
jle
mov
fwait
mov
cmp
arpl
movsb
dec
sub
gs
dec
fidivs
jmp
inc
bound
loop
fdivl
and
and
push
lock
add
lret
push
aam
and
xor
cld
or
aam
pop
insl
stos
stos
lcall
mov
inc
loopne
mov
fwait
xor
inc
xchg
clc
insb
jg
sub
insl
call
push
fadds
call
lret
cmp
test
fisubs
xor
out
mov
pop
enter
and
xchg
mov
sti
mov
mul
mov
data16
mov
xchg
dec
mov
pop
call
arpl
xchg
pushf
dec
pop
rcrb
test
and
mov
push
push
jl
notb
push
leave
pop
jecxz
mov
cmp
arpl
jle
push
push
jns
leave
subl
mov
sub
add
test
dec
cs
add
pop
cmp
pusha
xchg
inc
lahf
dec
scas
mov
out
lahf
or
push
cmp
pop
lock
mul
push
jge
mov
lret
jg
dec
les
push
or
cmc
add
stc
jle
outsb
fwait
outsb
cmp
pop
cmpsl
inc
push
fbstp
mov
fldl
adc
out
xchg
mov
rolb
push
lret
jo
xchg
stos
pop
movd
aas
fdivs
enterw
or
or
insb
jle
negl
mov
cmpsl
pop
push
lret
push
push
ja
fistpl
notl
mov
out
adc
out
push
lea
cmp
cmp
adc
nop
sti
cmpsb
push
popa
dec
mov
push
fwait
xchg
dec
push
shrl
push
jo
out
jo
jg
jbe
lods
pop
mov
xorb
dec
sbb
bound
sti
push
push
hlt
push
cli
lods
jb
mov
push
mov
daa
jmp
out
mov
and
cmpl
mull
xchg
mov
xchg
dec
push
movsl
scas
mov
lret
outsb
inc
jns
mov
mov
dec
dec
jb
imul
repz
mulb
and
aad
sbb
inc
mov
sub
dec
pand
dec
sub
stc
push
jg
pop
jmp
test
cmpsb
mov
xchg
addb
add
mov
mov
push
cltd
ja
xchg
add
cmpsl
and
cmp
jle
and
aaa
mov
xlat
aaa
adc
jne
push
fmull
fstpl
adc
fwait
jns
dec
cmc
push
push
mov
inc
insb
inc
cld
ret
push
lcall
lds
stos
div
cmp
dec
pushf
insb
mov
loope
mov
add
adc
das
mov
dec
cmpsb
xchg
aam
xchg
adc
nop
dec
xchg
repz
and
mov
fwait
add
mov
cmp
mov
aaa
addb
lcall
push
mov
addr16
or
lea
scas
mov
push
test
sbb
jbe
fmul
pop
cmp
enter
dec
sub
out
test
es
shlb
shr
scas
push
loope
pop
ret
sub
pushf
xchg
xchg
std
ss
jle
and
mov
pop
test
sbb
mov
or
ffree
mov
pop
sbb
jmp
jbe
cmp
lcall
sbb
xchg
xor
jmp
cmp
bswap
fistl
and
mov
rolb
std
roll
sub
adc
test
push
jo
jbe
mov
adc
rcrl
fwait
mov
iret
clc
xchg
and
sbbb
mov
push
push
sti
je
stos
ljmp
test
in
and
lea
insb
xchg
adc
mov
std
adc
inc
mov
in
dec
push
je
subb
inc
orl
repnz
ja
movswl
inc
inc
fisttpll
das
les
mov
jp
mov
lret
in
popa
shlb
mov
cmp
nop
mov
jg
popa
loop
pop
hlt
jae
mov
xor
pop
jb
and
enter
push
adc
test
and
data16
sbb
mov
xchg
addr16
icebp
sbbl
clc
add
and
jno
adc
int
jge
cltd
inc
shl
imul
and
pop
sub
inc
pop
jbe
inc
into
xlat
xchg
and
out
enter
lea
in
mov
add
fwait
in
sbb
out
stos
add
cmp
ljmp
mov
loopne
mov
repnz
adc
ficoml
enter
cli
xchg
xlat
cmp
mov
jmp
xchg
gs
jns
sub
push
ret
pop
inc
jmp
rcl
cmc
and
push
jo
lret
shrb
loop
dec
pusha
and
es
dec
push
sub
xor
xor
mov
std
daa
lods
inc
sub
mov
sub
dec
xchg
dec
lock
repz
lea
dec
pop
fdivs
dec
stos
sti
pusha
outsl
out
jecxz
lods
pop
inc
rorl
arpl
and
movsl
in
ret
pop
out
pop
repnz
mov
scas
mov
cli
mov
jle
xorb
loop
in
lahf
stos
jp
ficoms
gs
repz
dec
pop
std
adc
fsubs
adc
xchg
jp
cmp
inc
pop
mov
push
sti
xor
les
xor
pushf
pop
mov
xchg
and
lods
jp
lds
sub
mov
lock
sbb
cltd
aas
xchg
cmpsb
imulb
inc
fnstsw
jae
and
sarl
mov
lahf
daa
mull
cmp
repz
imul
je
inc
leave
ret
dec
jb
dec
mov
stos
mov
mov
mov
nop
mov
out
out
cmpsl
shll
ret
lret
loope
push
dec
ljmp
rolb
xchg
pop
fcmove
inc
pop
adc
daa
ljmp
add
shl
or
add
mov
mov
aad
fwait
lods
or
mov
add
jp
mov
dec
xor
xor
test
xlat
iret
xchg
lahf
xlat
xchg
xchg
sub
mov
loopne
das
mov
hlt
test
test
adc
and
shll
push
jo
fdivrs
bnd
call
call
into
shr
add
lds
fmul
mov
repz
jb
inc
dec
aaa
sbb
add
lcall
jle
mov
sbb
ret
enter
enter
dec
xlat
jo
adc
xchg
jb
int3
lods
lcall
sahf
jno
xor
les
push
mov
enter
stos
mov
std
je
inc
adc
lods
mov
xlat
or
jae
mov
inc
and
sti
sub
push
push
jae
loop
pop
cmp
mov
aaa
sbb
lods
mov
dec
jecxz
ret
ret
xchg
dec
adc
cltd
xchg
jp,pn
mov
movsb
sub
out
pop
jecxz
mov
or
test
pusha
push
jb
and
loopne
call
fs
push
fists
icebp
je
inc
ficompl
mov
push
mov
pop
jl
add
inc
fdiv
movsl
cmp
push
mov
lods
sbb
imul
rorl
jno
pop
inc
shlb
lea
dec
mov
jp
pushf
ss
pushf
dec
cmp
daa
and
insb
aad
ljmp
sahf
in
shlb
jo
cmc
cmp
sti
sbb
jns
dec
stos
add
sbb
push
mov
leave
data16
ss
dec
sarl
sti
fdivrs
insb
dec
popf
outsl
icebp
pop
mov
and
lahf
loopne
loop
xor
lret
lahf
jbe
pop
shl
aas
shr
mov
mov
adc
jp
loop
pop
sub
je
int3
jecxz
add
jnp
scas
mov
mov
test
add
hlt
sbb
adc
push
loope
xlat
aad
mov
inc
mov
jae
sub
push
cmpsl
fists
std
push
and
je
unpcklps
fstpl
mov
push
mov
lods
shl
or
jecxz
shl
pop
or
mov
and
in
das
or
add
jae
lods
adc
jg
rorl
add
sbb
jmp
repz
in
sbb
jg
cmpsb
in
enter
adc
shr
fstpt
dec
arpl
pop
add
dec
imul
int
jp
inc
shll
push
ds
sbbl
push
rclb
push
sub
test
pop
es
sahf
jnp
mov
lods
shld
cld
xor
push
dec
xchg
mov
stos
jb
jp
mov
addr16
jmp
jne
sbb
push
push
mov
pusha
out
jg
aaa
jne
sbb
sub
xlat
notb
icebp
cmp
jle
mov
ljmp
popa
out
push
jbe
push
cli
clc
pop
pusha
mov
pushf
jo
arpl
test
cmc
fcmove
adc
jns
imul
adc
andb
pop
jnp
mov
test
sbb
jg
ret
test
pop
pop
pextrw
adc
out
cmpsb
into
push
lea
test
cmpsl
mov
xor
in
push
movsb
sub
fwait
lcall
mov
inc
sbb
icebp
pop
lds
mov
popf
sub
inc
sbb
das
or
push
repnz
out
push
loop
or
mov
dec
mov
jg
icebp
xorl
add
lods
loop
push
outsb
outsl
mov
icebp
std
jmp
mov
jmp
sub
push
sub
mov
sub
cmp
push
mov
stos
add
inc
ret
clc
mov
xchg
mov
adc
aad
mov
push
push
push
bound
shlb
mov
jb
xor
call
ret
mov
push
std
das
xorl
or
cltd
xor
aad
out
imul
out
sbb
pop
and
pop
arpl
mov
test
loope
outsb
fcoms
sti
pop
ret
mov
pop
movsb
and
loopne
fdivr
int
icebp
push
cmpb
jmp
arpl
inc
xchg
js
ret
xchg
and
jnp
push
je
js
and
or
add
xor
lock
cmp
add
cmpl
mov
mov
ret
adc
shlb
dec
cwtl
insl
inc
xchg
movsb
pop
xlat
pop
jmp
fimull
sbb
insb
aam
dec
gs
mov
lods
cs
lcall
stos
sbb
in
movsb
scas
mov
jb
mov
out
insb
repz
xchg
xchg
rclb
xchg
clc
outsb
push
in
outsb
fisubs
rorl
sub
lock
xchg
jae
inc
mov
hlt
jmp
sbb
xchg
xor
cmp
movsl
rol
jmp
lods
sub
int
pop
pop
mov
test
jnp
push
nop
adc
push
in
xchg
mov
repnz
dec
jae
rcll
sub
push
jmp
add
scas
inc
xor
cmp
lea
cli
movsb
in
cltd
cli
xlat
xchg
cmpsl
add
or
aaa
setge
and
jge
fnstcw
stc
mov
lods
fldl
and
sbbb
and
cmpsb
adc
rep
cmpsl
jae
dec
xor
add
adc
stc
or
adc
je
imul
std
or
idivl
test
or
mov
jmp
arpl
imul
xor
mov
in
mov
outsb
adc
orb
into
jge
insb
jo
sub
movsb
or
mov
mov
jge
aad
mov
xchg
add
test
sbb
addr16
xchg
rolb
jg
mov
pop
and
adc
jg
fists
cmpsb
mov
and
rcrb
sub
loop
out
push
jnp
push
add
push
xor
fisttps
mov
mov
cmpsb
xor
sahf
ds
adc
pop
mov
stos
inc
sbb
jecxz
stos
mov
insb
dec
add
inc
dec
and
jnp
sti
in
or
add
sub
ja
cmpsb
or
pop
outsl
jmp
scas
sbb
loop
loopne
adc
fnsave
clc
cmp
or
fisttpl
xor
pop
pop
or
mov
cmp
insl
mov
pop
aaa
xchg
sub
push
jb
mov
addr16
leave
mov
in
popf
jmp
into
fldcw
aam
std
imulb
movsl
sub
loop
jle
cmpsb
sub
call
add
outsl
pusha
push
shlb
cmp
push
and
xchg
mov
xor
lods
int3
outsb
rcrb
inc
pop
sbb
popa
mov
popa
in
pop
es
push
pop
mov
lcall
adc
push
sbb
lock
out
xor
out
mov
ds
out
js
clc
dec
fiaddl
xlat
out
mov
je
popa
popa
int3
jmp
inc
mov
cwtl
fdivrp
data16
lods
jnp
ret
jmp
fiadds
aaa
stos
cmpsb
scas
xchg
push
and
fwait
pop
pop
ja
pusha
inc
push
loop
jns,pn
add
fdivl
icebp
and
sbbb
mov
and
dec
arpl
sub
pusha
or
enter
xchg
pop
add
outsl
std
inc
cmp
stc
aad
sarl
dec
into
xchg
mov
inc
mov
cmpl
mov
je
popf
sub
or
lds
pop
sub
ss
cmp
out
aas
incb
push
mov
xchg
xor
adc
dec
movsb
lcall
fiadds
fwait
ja
adc
sub
xor
fsts
or
push
and
sub
in
dec
into
dec
xchg
lea
sub
outsl
inc
adc
xor
mov
mov
ficoms
pop
xchg
mov
mov
fnstsw
imul
sbb
mov
xor
idivb
cmp
adc
fucomi
stos
mov
andl
cmp
in
push
pushf
popf
mov
xor
fisttpl
bound
jae
jb
jo
sbb
mov
mov
js
fmuls
cmp
pop
sti
push
stc
mov
and
push
cld
push
ret
sbb
or
push
add
and
in
push
int3
outsl
test
pop
sbb
inc
addr16
stos
mov
loop
call
dec
cmp
in
out
movsl
pop
push
push
push
lcall
pushf
filds
inc
in
mov
int
jns
test
cmpsl
adc
ja
aas
mov
mov
sub
push
and
cwtl
xor
xchg
lock
mov
mov
stos
mov
mov
pop
mov
notb
aaa
mov
and
push
mov
insb
pushf
cmpsl
adc
into
insb
jmp
mov
cmp
jecxz
int3
and
mov
lea
stc
shll
jnp
pop
js
cmpsl
pop
pop
and
js
adc
sub
mov
adc
or
mov
cmpl
popf
xor
out
inc
mov
fs
out
imul
mov
insl
cmp
popf
or
cmp
jecxz
sub
and
add
xchg
jne
push
xchg
inc
mov
mov
and
testb
fidivrl
add
ss
mov
shlb
pop
xor
ljmp
shr
fdivl
test
jge
sub
or
push
mov
mov
es
mov
cmp
xchg
test
dec
mov
xchg
ror
imul
cmp
gs
cs
test
add
test
xchg
jge
mov
xor
mov
or
sbb
scas
dec
sbb
inc
pop
out
scas
mov
ja
lods
jno
mov
xchg
fwait
xor
sub
in
cmpsl
mov
inc
or
rolb
test
or
outsb
cwtl
test
dec
push
ret
push
xchg
pop
stos
sbb
dec
jb
sub
or
outsb
and
lods
fwait
ja
mov
mov
icebp
push
les
add
aas
daa
out
daa
mov
mov
scas
rorl
jmp
pop
clc
adc
fs
sub
cmpsl
je
inc
mov
bound
or
stos
cld
mov
xchg
sbb
fwait
sub
push
inc
shrl
sti
outsl
ret
xchg
xor
stos
add
sbb
jae
pop
loop
cmpsb
add
xchg
test
cld
sub
int
mov
test
push
les
sub
out
cmp
or
sub
jg
pop
hlt
mov
dec
cmp
dec
push
popa
imul
push
mov
ret
out
inc
stos
lds
fwait
adc
loopne
cmp
and
out
loopne
rolb
fisttpl
mov
pop
popa
aam
mov
fistpl
sbb
inc
lods
in
cmp
or
add
filds
aas
sub
inc
adc
and
test
push
fcoml
loope
xor
repz
mov
in
add
enter
and
call
push
fidivs
std
mov
hlt
movsb
rol
cmpb
test
mov
loopne
push
xacquire
pop
std
jmp
add
ljmp
sbb
aad
fidivrs
scas
sub
enter
xchg
movsl
addr16
cmpsl
movsb
add
mull
adc
outsb
mov
aas
hlt
xchg
out
outsl
cmp
insb
fstpl
sub
daa
jmp
pop
mov
nop
lret
dec
inc
mov
shrb
xor
xcrypt-ctr
cmpsl
pop
cmp
repz
add
cs
jbe
mov
sbb
inc
lahf
lods
ror
push
lret
mov
adc
hlt
je
inc
cmpsb
inc
jp
push
jns
je
push
cmp
adc
mov
into
dec
les
or
xor
dec
int3
jbe
mov
adc
std
mov
and
and
adc
cmpsb
pop
xchg
fimull
lods
xor
std
cmpsl
push
jbe
dec
fdiv
xor
out
aam
sub
ja
mov
out
into
xorb
sarb
push
cld
ret
outsl
leave
jbe
loop
jns,pn
jns
scas
mov
fdivl
lock
xor
cwtl
xchg
lock
ljmp
push
cltd
sbb
push
lods
pop
pop
xchg
roll
jmp
jo
enter
fs
pop
lods
add
jle
xchg
test
xlat
in
jae
cmp
jo
adc
inc
sbb
dec
adc
cs
jnp
pop
sbb
lods
inc
add
clc
orl
gs
pop
in
cmp
xchg
push
or
xchg
mov
inc
xchg
pushw
push
or
les
xchg
mov
mov
xor
xor
adcb
dec
xor
mov
js
mov
mov
or
lahf
cmc
cmp
and
cli
cld
sahf
out
leave
test
mov
mov
test
jae
adc
sbb
pop
mov
jl
pop
sub
or
stos
loopne
ss
mov
inc
rorb
sahf
mov
jl
cmpsb
test
mov
xor
xor
or
push
jge
mov
sti
jo
sbb
dec
and
test
leave
push
mov
dec
push
add
cmp
xlat
sub
fidivs
adc
hlt
mov
xchg
das
repz
int3
loope
sub
test
dec
push
subb
adcb
push
decb
scas
pushf
sahf
mov
ljmp
nop
xchg
xchg
xchg
leave
out
and
jno
cmp
lock
daa
mov
add
xchg
repnz
add
aas
xchg
in
or
mov
xor
cmpsl
clc
int
jmp
incb
cmp
lcall
jg
jae
lsl
cwtl
add
iret
pop
sbb
sbb
or
and
add
or
arpl
out
mov
sub
aaa
arpl
neg
icebp
icebp
mov
repnz
inc
and
mov
or
add
repz
sbb
xchg
je
push
fidivrl
dec
outsb
or
test
xor
dec
push
inc
jmp
xchg
mov
mov
and
adc
xchg
lret
adc
dec
outsb
or
loopne
xchg
pop
dec
cmp
pop
ds
push
push
adcb
jecxz
xor
mov
insl
jle
stc
sub
fwait
sbb
imul
icebp
mov
mov
out
insb
mov
jnp
mov
inc
ljmp
call
cltd
cmp
inc
xchg
cmp
pop
inc
xor
xchg
sarb
and
scas
mov
mov
call
fnstenv
test
add
jns
adc
add
test
or
in
lret
fnstenv
test
xlat
jae
mov
sbb
lret
popf
bnd
jae
sub
sbb
fdiv
mov
outsl
jp
xchg
mov
mov
daa
shll
lcall
les
addl
jne
and
jno
or
xor
clc
inc
movsl
mov
mov
std
adc
aad
imul
push
sub
fcmovu
jnp
mov
mov
xchg
ror
daa
xor
js
mov
adc
xor
mov
push
mov
mov
and
das
rcl
insl
push
lods
leave
lea
inc
movsb
dec
sbb
loope
adc
mov
inc
xor
icebp
mov
adc
negl
fs
loopne
xchg
push
dec
test
jmp
mov
jb
in
dec
mov
orl
int3
gs
iret
inc
sbbl
push
jno
jle
xor
ret
fisttps
das
jmp
mov
xchg
xchg
mov
jge
shrl
inc
aaa
loope
pop
fwait
lahf
insl
add
inc
pop
sub
test
scas
jo
adc
cli
push
xor
jmp
rcr
mov
mov
loope
shll
leave
gs
xor
xor
ja
mov
out
test
pop
lret
pop
stos
dec
or
jns
movsl
iret
aad
daa
notb
or
pop
xchg
es
pop
cmpsb
out
shrl
cltd
ja
je
sbb
mov
mov
das
sub
inc
adc
jl
inc
mov
hlt
xlat
stc
mov
push
adc
sub
lods
xor
inc
lret
push
jl
fchs
loop
int3
leave
jecxz
cmpsl
ret
dec
dec
fimuls
sahf
jmp
in
fmuls
ficomps
xor
add
mov
or
mov
mov
jle
and
pop
mov
pop
add
cld
sbb
mov
push
hlt
mov
ret
pusha
cmp
xor
ja
lods
xchg
mulb
dec
push
add
pusha
sub
jo
adc
in
call
and
jp
cmp
adc
mov
ss
inc
pop
mov
mull
dec
loop
adcl
jo
cwtl
scas
fcomip
ja
add
enter
xchg
adc
fldenv
jb
dec
ljmp
jle
in
inc
aas
outsl
sbb
add
push
in
sbb
sti
mov
jmp
mov
xchg
cmp
and
mov
mov
pop
aaa
pop
add
xor
push
jecxz
mov
inc
cmpsl
lods
xchg
int
ret
xor
stc
xchg
jl
and
xlat
xchg
add
lds
cmpsb
rol
dec
adc
and
sub
lcall
daa
and
std
push
fidivrl
scas
loope
xor
xor
mov
mov
mov
inc
test
mov
inc
stc
mov
imul
outsl
xor
jl
mov
jae
jb
mov
in
sub
shlb
loope
rol
push
jle
cmp
ds
sub
sub
mov
push
cld
pop
shr
or
stc
push
and
fadd
data16
cmp
xor
lock
fidivl
fwait
jecxz
dec
js
rep
and
push
or
inc
aam
push
pop
std
cmp
dec
push
push
mov
xchg
jo
sub
sarb
mov
das
icebp
dec
fcoml
icebp
push
jl
lcall
loop
inc
rcll
rorb
sub
sub
and
add
mov
sti
add
jge
divb
imul
jbe
xor
loope
scas
jp
sub
es
outsl
arpl
das
addr16
xchg
jb
cmp
jmp
lea
test
dec
inc
jno
sub
ret
pop
inc
rcrb
fildl
lahf
repnz
dec
addr16
lds
aad
mov
in
stos
cmp
adc
daa
push
mov
mov
cmc
jnp
out
out
in
cmp
mov
inc
jmp
sbb
int3
push
add
setg
xor
inc
fwait
xchg
adc
movsl
ds
mov
push
negl
aam
dec
inc
sub
lea
popa
sub
leave
ret
sbb
insb
jge
xchg
dec
movsb
pushl
lea
xor
stos
mov
and
mov
mov
in
inc
testl
lock
in
pop
or
mov
and
inc
in
andb
ffree
arpl
inc
rcl
shlb
push
add
jle
add
cmp
aas
fcompl
test
mov
mov
loope
stos
adc
fimuls
push
sarl
in
scas
xchg
lret
adc
das
push
jo
sti
jecxz
xor
jle
cmpsb
aas
jle
sub
xor
jno
cwtl
pop
idivl
mov
popa
mov
and
lods
inc
and
test
inc
into
mov
test
add
aam
pop
or
jns
stc
add
inc
inc
sbb
mov
lea
mov
add
daa
icebp
aaa
xchg
xor
mov
xchg
arpl
aas
sub
xchg
pop
jo,pt
and
xchg
adc
addr16
mov
and
mov
pmaddwd
sub
add
lcall
dec
mov
sbb
xor
sbb
sbb
imul
jbe
push
xchg
xor
lea
scas
dec
shlb
jo
lcall
inc
es
lods
mov
mov
test
das
jg
push
mov
loopnew,pt
test
push
mov
lock
mov
add
push
repnz
pusha
pop
jecxz
ret
xchg
cwtl
enter
or
push
divb
xorl
mov
lods
lds
popf
inc
cmp
adc
stc
call
shlb
mov
lods
jne
dec
jno
fwait
sub
cmpsl
loope
mov
xor
pusha
xchg
push
sbb
pop
in
mov
and
lret
js
dec
push
into
pusha
movsb
add
ja
jg
mov
ret
or
cmp
into
andb
cmpsb
pop
xlat
or
xchg
xchg
sub
sub
ret
sub
cmp
js
or
pop
pop
xchg
mov
aaa
xchg
cwtl
mov
lods
add
push
mov
pop
xor
cmp
dec
inc
inc
fiadds
pusha
rcl
push
cmpsb
mov
mov
and
flds
lret
lahf
gs
mov
hlt
cmp
roll
add
cmp
jne
mov
pop
test
inc
pop
mov
cmpb
mov
mov
dec
popa
mov
cld
cmp
xor
adc
add
popl
pop
push
mov
and
xor
mov
push
std
aas
scas
push
addl
adcl
lock
inc
mov
xlat
fistpll
cmp
mov
push
in
je
fisubs
mov
dec
xchg
iret
jns
and
jl
sbb
idivl
cmp
leave
sbb
jg
loopne
push
sub
sahf
jge
pop
add
dec
fs
xor
nop
dec
jmp
xor
pusha
mov
into
push
lcall
add
lret
fadd
jnp
ja
jnp
sbb
mov
cltd
or
xor
xor
or
pop
lock
cmp
in
sbbl
cmpsb
xchg
or
movd
xor
cmp
or
mov
dec
push
mov
lock
jg
push
jnp
scas
xchg
outsl
inc
push
js
add
sub
mov
pop
xor
pop
cmpsb
rolb
sub
lods
cmp
dec
inc
int
jnp
jbe
jecxz
and
loop
jbe
sub
and
sarb
sbb
xor
aad
xor
js
xchg
cmpsb
inc
nop
mov
add
cmp
gs
mov
cmp
sbb
ljmp
dec
and
jmp
pushf
and
inc
cwtl
outsl
xor
data16
aad
sub
lret
in
into
popf
pop
push
mov
mov
mov
jecxz
xor
call
xchg
or
and
bound
mov
adc
and
jmp
loope
or
sub
fimull
mov
jo
pop
es
pop
dec
aad
fidivs
dec
faddl
cmpsl
mov
or
and
push
sub
add
popa
outsl
xor
jbe,pt
adc
mov
xor
aaa
jl
push
sub
pop
jae
and
add
push
mov
cmp
add
mov
xchg
lods
rcrl
sbb
fadds
or
mov
pop
jae
movb
fcmovnu
xchg
and
adc
loopne
insb
mov
clc
mov
push
popf
push
enter
mov
xchg
cli
mov
jg
mov
test
push
push
cmp
or
hlt
movsl
call
pop
jns
jns
dec
sbb
xchg
or
add
mov
flds
push
pop
out
loope
mov
pushf
aad
lock
xor
or
hlt
dec
fnsave
pop
push
scas
sahf
scas
or
subb
dec
fsubl
adc
std
inc
pusha
movsl
xchg
lcall
fisubl
into
xchg
movsb
sbb
dec
push
jae
lret
sbb
sub
idivb
test
pop
dec
inc
cmp
sub
pop
fiadds
inc
out
aam
ds
push
jns
pop
push
popa
in
lret
jbe
dec
adc
mov
push
jbe
push
outsl
aas
bound
cmpsl
and
jg
adc
lret
jle
insb
cltd
rolb
xchg
repz
into
push
test
jecxz
iret
xchg
popa
int
pop
xorl
add
jns
cli
es
iret
adc
int
inc
jbe
into
cwtl
lods
aad
ret
shlb
addr16
fsubrl
or
outsl
sbb
je,pn
mov
andb
in
pop
out
pusha
fists
xchg
lcall
cltd
inc
hlt
fisubs
notb
flds
outsl
cld
xlat
sbb
jno
popa
je
daa
cmpsb
mov
std
push
cmp
push
push
or
push
inc
pop
sub
dec
mov
fdivl
aad
push
jne
push
and
pop
mov
mov
shlb
loop
jmp
loope
pop
repz
xlat
xchg
out
enter
cli
sub
jno
stc
mov
sbb
add
push
dec
dec
xchg
jp
sbb
loop
bound
lahf
in
sbb
addr16
insl
int
out
shrb
pusha
mov
push
enter
add
enter
stc
add
push
jp
xchg
test
pinsrw
rolb
or
xor
jge
or
adc
dec
push
pushf
lcall
call
js
adc
push
lods
sbb
sahf
sti
clc
ret
cmp
mov
sub
bound
cmp
and
imul
mov
or
lret
leave
ja
xchg
jge
call
jnp
lds
outsb
or
jne
or
ja
mov
enter
mov
push
push
xor
dec
cmc
cmp
mov
jge
mov
mov
xchg
loope
and
adc
mov
adc
pop
mov
or
mov
aas
xchg
clc
movsl
inc
pop
lock
imul
sbb
out
rorl
add
pop
jle
jnp
xchg
or
cmc
inc
mov
mov
pop
cmp
out
sti
je
or
mov
into
imul
in
les
sbb
sbb
maskmovq
idivl
pop
ret
jb
mov
scas
jae
pop
bound
imul
xchg
xchg
cmpsl
fistl
mov
mov
imul
sti
xor
bound
int
nop
fidivrl
adc
fldl
pop
popf
jb
lret
cmp
leave
push
lds
mov
imul
arpl
mov
cmpsb
clc
shlb
fnsave
les
test
test
pop
jno
shll
lahf
mov
in
test
leave
jno
xchg
cmpl
mov
mov
addr16
jnp
cli
ljmp
and
cmpsl
mov
int3
stos
adc
pushf
dec
jle
push
dec
push
hlt
rol
mov
ficoml
adc
or
arpl
cmp
fidivrs
leave
push
xor
rclb
inc
sbb
mov
lret
mov
filds
std
pop
xchg
jnp
mov
aad
aas
cmp
nop
sbb
push
repz
insb
jp
or
or
mov
fldl
inc
or
dec
pop
pop
and
xchg
pmulhw
mov
fisttpll
add
pop
hlt
mov
lock
jle
insb
pop
outsb
xor
syscall
cmp
insb
jecxz
mov
into
sbb
mov
fnstsw
mov
xchg
mov
jge
push
test
aaa
push
fs
in
xchg
pop
pop
xor
dec
mov
call
mov
or
icebp
sbbl
mov
shrb
out
adc
loop
jle
mov
inc
out
mov
fsubrl
aad
call
sti
and
mov
popf
xor
shrl
xor
pop
ss
mov
adc
pop
xor
ja
mov
sbb
fisubrs
hlt
sub
lret
ljmp
inc
addr16
fstpt
and
imul
aaa
push
mov
xchg
out
je
jo
stos
jecxz
sbb
push
jb
data16
sarl
imul
aam
inc
mov
add
mov
ja
pop
ret
popf
mov
dec
test
lret
rorl
cmp
mov
sbb
int
sbb
popl
fnstsw
sub
mov
cs
sbb
mov
lods
mov
xor
inc
dec
leave
pop
shl
mov
cmpsb
rorl
mov
jae
push
mov
push
pop
mov
xchg
sbbl
lods
nop
out
dec
jne
test
test
adc
jbe
int
sbb
mov
mov
ret
push
mov
xor
pop
cwtl
lea
movsl
cwtl
jp
in
cmp
std
or
pop
ss
and
cmp
push
xor
inc
inc
push
jb
popa
xor
stos
pop
popa
idivl
scas
mov
test
xor
repz
subl
out
dec
outsl
stos
lret
jno
mov
mov
es
enter
and
and
add
ds
mov
mov
add
sub
or
daa
test
push
pusha
decl
popf
aam
mov
gs
mov
out
lcall
nop
insb
adc
int
sbb
pop
xor
pop
popf
xchg
lods
mov
pop
and
orl
adc
loope
push
and
ss
insl
je
cmp
in
fcmovbe
enter
dec
mov
addr16
fbstp
or
push
xor
fsubp
data16
cld
add
or
add
inc
push
in
adc
subl
arpl
cmp
mov
cs
lret
test
and
jge
leave
lods
adc
adc
xor
pop
daa
adc
mov
lods
mov
jle
dec
cld
jo
inc
mov
mov
mov
cmpsl
mov
daa
test
cwtl
aas
mov
inc
or
flds
aaa
cmc
push
ss
dec
mov
mov
fisubrl
sub
stos
pop
cs
fwait
mov
sub
or
mov
xchg
fstps
stos
sub
bound
mov
mov
out
cmp
lea
lea
sub
ss
std
and
lahf
cmpsl
cmp
hlt
imull
movsb
aas
adc
scas
cmp
add
cmpb
aam
in
mov
adcb
lret
fsubp
pop
add
sbb
cmp
sarl
jl
lods
sahf
sub
mov
add
adc
cmp
ja
pop
push
rcl
repz
sub
setl
mov
cwtl
xchg
shrb
nop
enter
fisubs
aam
dec
cmpsb
jns
nop
movsl
and
pop
xor
pop
into
jge
cltd
ja
outsl
mov
and
mov
inc
inc
gs
in
and
sbb
jo
fdivl
fcomps
cmp
jno
lea
inc
sbb
jb
lret
call
dec
mov
push
push
xor
add
in
out
sub
insl
or
pop
sahf
mov
sub
add
test
pushf
adc
sbb
mov
push
push
push
imul
push
mov
push
mov
mov
icebp
fcmovbe
test
mov
mov
in
mov
fimuls
mov
pop
add
fs
xchg
inc
insb
fwait
dec
test
fbstp
jo
dec
aam
inc
sub
test
jae
inc
pop
pop
sub
dec
pop
or
or
and
or
adc
mov
call
scas
test
inc
and
imul
pop
in
es
decl
fdivrl
push
pusha
insl
cs
shlb
clc
sbb
sti
je
xchg
fists
adc
sbb
xchg
cmpb
ss
dec
and
addr16
lret
add
push
ljmp
sub
scas
fwait
pop
int
or
in
sbb
adc
or
push
xchg
push
xor
mov
xor
sbb
xlat
in
cmpsl
add
enter
loop
sarl
lds
fsubr
push
xor
test
mov
inc
outsl
mov
mov
sbb
stc
ret
mov
mov
out
daa
gs
xor
and
dec
daa
xor
mov
push
mov
xchg
adc
sub
mov
outsb
jae
emms
sbb
sub
mov
adc
out
pop
nop
nop
stos
mov
xchg
pop
pop
mov
mov
mov
and
out
mov
cltd
roll
int
out
orb
mov
xchg
ss
mov
cli
stos
lahf
shlb
sub
adc
aaa
jmp
cmpsb
push
dec
shlb
adc
push
cmpsl
sbb
and
jle
icebp
movsb
xchg
mov
int3
push
iret
xor
hlt
jno
call
jo
leave
or
outsl
cwtl
out
xchg
imul
mov
out
cmp
dec
pop
lock
pushf
int3
loopne
adc
enter
mov
or
cmp
daa
leave
jp
das
test
push
xchg
out
movsl
adc
fcomps
mov
adc
mov
mov
dec
das
shll
sub
fsubrs
sbb
shr
lret
mov
lcall
push
rorb
sub
add
clc
fistl
lahf
out
pusha
fdivrl
cmp
push
add
xchg
flds
xlat
ret
cmp
imul
nop
jl
mov
and
xor
arpl
popa
gs
add
clc
cmp
js
mov
lock
jp
xor
cmc
add
and
cmpsl
inc
imul
pop
mov
mov
mov
push
sti
stc
xchg
mov
or
add
xlat
in
insb
push
fucomi
adc
sub
hlt
push
arpl
dec
sbb
scas
iret
adc
ds
sub
outsl
ss
push
push
in
cmpsb
in
mov
nop
test
xchg
leave
pop
lcall
mov
aas
mov
ror
adc
test
shll
lret
inc
movsb
push
loopne
js
jae
sub
stos
and
fucomi
jo
aas
lret
sbb
mov
adc
hlt
xor
out
sti
jb
je
bound
sbb
push
mov
stos
inc
icebp
dec
ret
leave
ja
jmp
inc
mov
aas
data16
mov
outsb
mov
push
rcll
call
popa
les
push
pop
inc
sbb
mov
cvttps2pi
jg,pt
adc
mov
iret
jno
insl
dec
adc
shlb
xor
ljmp
or
js
jecxz
xor
in
mov
fldcw
leave
dec
mov
dec
aad
adc
out
xchg
mov
nop
jnp
add
xchg
call
sti
push
ret
sbb
mov
shlb
pop
fimull
cld
in
imull
inc
pop
xor
pop
das
ss
fcompl
mov
sarl
inc
shll
outsb
popf
jmp
popf
bound
lea
repnz
lock
add
pushf
outsb
mov
mov
int3
imul
pop
sarb
jge
out
sub
push
cmpsb
cltd
shrb
lret
jge
test
jb
xchg
cmp
sbb
and
xlat
push
cmp
fldl
scas
cs
xchg
dec
icebp
test
movsl
jno
insb
or
inc
test
movsb
lea
lret
mov
inc
mov
mov
dec
xchg
aas
pop
or
lds
push
outsl
je
in
cmp
cs
xor
or
inc
imul
lcall
add
xor
push
dec
push
nop
xchg
sbbl
lret
inc
pop
fwait
adc
in
cmpsb
lds
xchg
in
jge
inc
mov
testl
arpl
inc
enter
sbb
int
aam
xchg
and
mov
lea
sarl
mov
imul
mov
jno
add
pop
cmp
mov
pop
daa
mov
mov
cmpl
dec
or
scas
sub
pop
ss
and
add
xor
mov
xor
inc
sub
mov
xchg
xchg
or
push
inc
sub
out
clc
inc
xchg
mov
push
out
enter
adc
pushf
adc
outsb
cmp
sub
jae
mov
out
xchg
arpl
pop
fxch
out
shrb
mov
jne
ret
mov
cli
in
adc
mov
bnd
js
jle
imulb
loope
dec
movups
push
cltd
test
fisubs
push
jp
jmp
or
sub
popf
stos
add
pop
xlat
aas
sti
repz
rcll
popl
orl
mov
cmp
mov
xor
push
dec
lret
ss
xchg
mov
sbb
ds
imulb
js
loopne
ret
jl
push
lock
stos
cmc
xchg
push
add
cmpb
pop
or
movsb
push
pop
aaa
movsl
in
ljmp
cmp
arpl
imul
adc
dec
int3
fiadds
lods
jp
aam
and
cmp
add
and
adc
in
std
mov
outsb
and
daa
sub
jbe
or
and
test
dec
arpl
inc
jmp
mov
mov
scas
pop
inc
cmpl
adc
lcall
adc
push
imul
lods
mov
ret
sub
sarb
push
ja
adc
sub
es
insb
leave
pushf
mov
dec
pop
mov
add
cltd
ret
test
xchg
or
imul
cmp
scas
int3
lds
in
fucomp
fidivl
jbe
pop
sub
mov
incl
jae
push
jge
push
add
and
push
and
int3
push
aas
dec
scas
push
lock
pushf
push
bound
cmp
fisubl
insl
es
out
add
test
xchg
scas
xchg
mov
mov
add
and
outsb
pop
lods
mov
dec
mov
xor
stos
bound
pop
test
mov
pop
lcall
pop
inc
movsl
mov
mov
sbb
or
sbb
mov
mov
cmp
insl
or
out
xchg
jle
jmp
cmp
and
lahf
cmp
daa
cmpsb
and
ja
pop
mov
push
pop
xchg
push
aad
ds
in
pop
ss
mov
rcr
cmp
mov
inc
cmp
sub
pop
adc
sti
into
inc
std
dec
imul
sarl
out
add
arpl
inc
sti
iret
mov
cmp
out
or
sbb
popa
cld
mov
dec
adc
aad
aas
mov
cmp
inc
push
pop
add
sarb
mov
dec
mov
push
outsb
mov
adc
xor
pop
popa
add
mov
scas
jle
fwait
cmp
or
sahf
lcall
cmp
subb
add
mov
sub
inc
aaa
mov
arpl
pop
mov
jg
jge
mov
mov
sub
fsts
aad
and
inc
in
cld
or
cmp
stos
pop
mov
add
mov
xchg
aas
rolb
ds
insb
mov
add
add
gs
out
loopne
fistps
int
cmpsl
push
sub
iret
into
enter
sub
icebp
icebp
scas
out
xlat
xchg
aad
leave
jmp
fiadds
sti
inc
xchg
sar
aad
inc
push
repnz
xor
test
jp
adc
mov
cmp
pop
rcll
push
je
and
dec
imul
scas
out
mov
rorl
add
fidivl
mov
lret
mov
or
cmp
adc
les
dec
adc
lahf
push
jmp
and
mov
aad
xchg
decl
ror
jae
lahf
fdivrs
xchg
mov
adc
scas
or
lds
pop
pushf
lret
adc
pop
hlt
loopne
fadds
in
dec
xchg
mov
test
dec
enter
notb
stc
and
hlt
icebp
out
pop
jmp
mov
push
outsb
icebp
cmp
test
test
adc
fmuls
popa
aaa
mov
xor
sub
adc
lret
cmp
lea
add
ficompl
pop
test
sbb
daa
sti
jb
mov
sbb
jo
add
negb
sbb
outsl
cmp
out
xlat
mov
pop
mov
bound
mov
call
test
sarb
xlat
inc
mov
fucomip
mov
daa
in
adc
xchg
push
dec
ss
jbe
jbe
adc
add
repnz
xchg
outsl
mov
cmpsl
push
pop
sbb
jg
or
push
inc
dec
adc
mov
outsl
stos
sarl
or
xchg
scas
cmpl
sbb
sbb
inc
out
aas
sbbb
loopne
cld
sub
or
imul
xor
mov
jge
arpl
adc
clc
repz
scas
fstps
out
sub
stos
inc
js
xor
in
movsb
cmpsb
fldl
aam
mov
jge
in
aaa
mov
pop
and
xchg
dec
cmp
mov
add
mov
es
or
push
js
cld
pop
lret
pop
pop
and
pop
push
adc
in
jge
pushf
jle
or
sbb
fs
adc
jns
fldcw
xchg
shl
or
add
ret
xor
pop
xchg
pusha
cli
insb
mov
ret
loopne
sbb
jo
pop
fbld
dec
fbld
cmp
mov
rcrl
inc
rcll
lock
sub
jge
and
jg
jns
sahf
and
sbb
or
imul
cmp
outsl
cmp
andl
cmpsl
das
es
inc
mov
pushl
cli
xor
out
adc
fdivrp
dec
xchg
cs
insb
xchg
call
mov
adc
sub
std
dec
in
test
sub
fwait
enter
mov
adc
and
in
or
addl
xchg
lcall
jb
fstpl
int
dec
std
jmp
into
dec
and
scas
test
and
pop
loop
in
push
outsb
dec
dec
dec
inc
imul
out
aam
jecxz
subl
sbb
movsb
pop
aad
inc
push
jp
jle
mov
rcr
ja
das
movsb
bound
xchg
push
sub
push
jnp
rcrb
pop
lahf
pop
mov
fidivs
test
ficompl
or
rcrl
imul
mov
xor
sahf
movsl
dec
data16
mov
xor
jmp
mov
bsf
pop
adc
scas
mov
xlat
add
pop
mov
mov
imul
outsb
lret
jg
inc
pusha
push
mov
mov
jecxz
inc
add
xchg
pushf
dec
jecxz
lcall
push
mov
dec
pop
out
cmp
xor
jbe
push
push
pop
cmp
in
test
ljmp
testb
jge
lret
loope
shll
sbb
clc
ja
fstp
pop
arpl
push
in
addl
push
out
int3
xchg
pop
sti
lcall
js
rcll
push
scas
add
sbb
pop
movsb
fiadds
sbb
sbbl
xchg
es
push
pop
dec
mov
mov
scas
lods
push
fistpll
arpl
add
cmp
repnz
test
outsb
loope
stos
data16
mov
gs
dec
outsb
dec
negl
fstps
inc
pop
fmul
shrl
fistps
cmp
int3
imul
popf
inc
mov
mov
mov
cwtl
mov
repnz
jg
sub
lea
adc
push
ljmp
iret
jo
shll
or
push
fs
jge
imul
fs
cmovge
jp
shll
pop
ljmp
sub
add
gs
stc
mov
adc
icebp
inc
dec
jmp
push
or
pop
outsb
cmp
pop
out
imull
lock
rcrl
fs
les
push
popf
in
pusha
in
jp
loope
cmp
and
xchg
sahf
btc
pop
mov
sbb
inc
cmp
mov
in
mov
jp
pop
xor
inc
aaa
and
xor
mov
lods
dec
xchg
movsb
outsb
mov
in
mov
and
sbb
xchg
mov
add
xchg
inc
xlat
sub
dec
push
mov
sub
scas
lret
mov
xchg
add
adc
or
fisttpll
ss
andb
sbb
jmp
stc
push
mov
loope
mov
lds
and
fimull
dec
aam
inc
mov
insb
fnstcw
push
sbb
insl
mov
dec
inc
hlt
aad
repnz
jbe
scas
dec
adc
shlb
das
and
inc
jno
xchg
fiadds
aas
movsb
movd
jae,pt
mov
int3
sub
mov
mov
jmp
adc
jl
cld
jnp
fldl
out
aas
mov
sar
mov
aad
ljmp
sbb
jo
lret
fs
push
scas
out
inc
adc
in
ret
neg
lods
add
js
ds
and
mov
sbb
inc
fistl
add
cmp
sub
addr16
mov
cmp
mov
mov
jne
pop
fadd
and
fmulp
mov
pop
insb
das
mov
dec
xchg
jo
sub
pop
mov
cwtl
loop,pt
test
dec
lahf
sarb
subl
dec
push
push
ja
and
cmpsl
push
or
jne
fnstsw
dec
dec
push
imul
bound
sti
sbb
mov
rorl
into
xchg
gs
and
push
gs
mov
lock
in
jp
fisubl
or
xlat
cmp
movsl
or
jns
and
movsl
or
pushl
jne
out
icebp
scas
or
rcr
pop
stos
fsts
lret
cmpsl
inc
xlat
call
sbb
adc
fcomip
je
mov
and
or
js
out
adc
cs
call
inc
arpl
sbb
insl
popa
mov
mov
xlat
add
push
test
movsb
lods
jecxz
pop
shrl
gs
sbb
cli
xor
xor
ds
outsb
mov
popf
push
ss
ret
addr16
push
push
xchg
inc
push
xchg
bswap
stos
mov
push
stc
or
fs
or
sbb
cmp
cmc
jo
outsl
push
iret
push
insl
test
subl
lds
jno
or
jbe
jnp
mov
and
mov
in
arpl
adc
cmp
add
out
sub
adc
stos
mov
xor
das
int3
hlt
adc
push
pop
aas
es
sub
cld
cltd
or
sub
cmpsl
xchg
out
and
pop
xorl
add
push
dec
and
hlt
pop
outsl
movsl
orl
out
jl
pop
lahf
add
iret
stc
ljmp
mov
mov
xorb
mov
xchg
or
icebp
jg
mov
inc
dec
push
es
pop
sar
mov
shr
cmp
or
sub
scas
dec
mov
mov
or
xchg
pushf
jbe
mov
xlat
adc
mov
and
mov
arpl
sbb
mov
push
inc
xchg
mov
adc
lds
testl
mov
cltd
imull
jo
jnp
jle
aas
mov
loope
mov
sub
xlat
lods
push
stc
cmc
dec
pop
jge
inc
adc
lds
ret
jb
in
iret
in
mov
stc
dec
fistpl
rorb
pushf
jle
jge
rcr
jmp
scas
dec
in
fnsave
and
xorl
negl
stc
push
roll
shll
cmc
shr
loope,pn
notl
xchg
rorb
push
dec
ja
test
mov
jbe
and
imul
jno
cmpl
addb
sub
cs
push
mov
lods
mov
inc
jge
stos
mov
pop
into
std
mov
sbb
js
mov
pop
mov
mov
fimuls
movsl
pusha
dec
push
dec
out
add
push
push
dec
hlt
xchg
ret
sahf
inc
popa
mov
inc
push
scas
dec
stos
aaa
or
xchg
xchg
dec
stos
mov
fdivs
lea
ret
inc
jecxz
sbb
add
and
add
jp
fimuls
pop
test
ss
fcmovu
rol
pop
imul
je
xchg
jmp
fidivrl
xchg
lods
shlb
test
lea
test
mov
xor
adc
mov
adc
or
sub
xor
clc
or
aaa
imul
cmp
mov
scas
jbe
into
or
jae
repz
xlat
insl
lea
arpl
insb
push
push
es
cmp
ja
repz
push
inc
jo
mov
aaa
sub
jo
xor
loopne
mov
add
jmp
fwait
outsl
lock
adc
inc
adc
imul
int
add
test
dec
jbe
frstor
outsb
movsl
shll
pusha
loopne
lock
and
sahf
jne
fisttpl
ret
leave
ja
push
and
mov
push
cmp
es
jmp
dec
dec
imul
nop
sbb
dec
xor
jae
aad
lods
ljmp
jecxz
mov
push
cmp
pop
sub
insl
add
pop
imul
jb
cli
jecxz
sti
sub
jno
out
sarl
xchg
mov
mov
or
mov
push
sub
sub
adc
fmull
dec
push
cmp
iret
movsb
decb
clc
add
cwtl
inc
bound
stos
test
out
mov
pop
mov
mov
dec
scas
ret
sbb
call
ds
pop
jp
in
push
in
jle
mov
mov
push
jg
push
pop
lahf
jo
jns
sub
mov
call
push
fstps
jp
push
nop
cmp
and
push
pushf
and
sub
jo
fsubs
dec
pop
adc
add
sahf
lcall
fisubrs
hlt
jb
mov
mov
sbb
xor
or
jns
in
fisubs
pushf
cltd
xchg
iret
push
call
inc
or
inc
pop
dec
jne
into
out
mov
push
pop
fidivrs
fmull
sbb
imul
mov
inc
or
push
ss
rorl
lds
or
add
mov
jo
fnstenv
nop
jmp
orl
repz
icebp
add
cli
xchg
sti
push
cmp
rcrl
das
loope
repnz
popa
xchg
and
sti
roll
pop
pop
xchg
push
out
test
pop
xor
in
push
dec
bnd
fninit
pop
call
pop
cmp
sbb
stos
stc
js
sub
test
rol
mov
repnz
fisubrs
sbb
lods
lock
mov
jl
es
int3
aas
incb
insl
xchg
shrb
cmc
arpl
ds
int3
fisttpll
xchg
sub
mov
pusha
add
ret
nop
ret
cmp
ret
push
loope
adc
jne
mov
test
cs
cltd
out
popf
jno
pop
xchg
pusha
push
and
and
xchg
jo
fsubs
fcoml
stos
lods
pop
lahf
xchg
sbbb
sbb
dec
or
enter
push
add
inc
jmp
imul
les
clc
addr16
subb
sbb
xor
push
pop
test
or
push
stos
inc
je
mov
dec
lahf
ja
test
rcr
outsl
nop
adc
std
push
lods
xchg
sbbb
or
mov
lea
clc
jo
mov
and
aam
popa
sbb
lea
out
dec
iret
lods
pop
cld
or
es
pop
roll
add
lcall
cld
push
cmp
inc
fwait
ljmp
inc
fs
and
xchg
int
mov
mov
mov
and
mov
scas
stos
adc
mov
mov
sahf
shlb
xor
and
popf
sbb
adc
out
pop
pushf
pop
loopne
insl
ficoms
lahf
mov
dec
xchg
mov
arpl
popa
fsubrs
mov
repz
iret
ds
mov
xchg
xchg
inc
inc
cmpsl
out
and
xchg
addr16
repz
cld
cmpb
nop
enter
pushf
rol
stos
mov
xchg
clc
mov
in
repnz
xadd
pop
xor
push
loopne
add
outsb
out
cmp
clc
mov
clc
imul
mov
xor
push
in
out
mov
adc
test
adc
sbb
js
adc
cld
push
mov
lods
cs
call
sbb
leave
dec
ds
adc
aad
adc
loope
inc
stc
inc
sbbl
xor
in
insb
mov
les
popf
repz
call
xchg
cmp
mov
mov
out
push
enter
adc
jnp
mov
fcoms
mul
add
xor
insb
jl
mov
cmpsl
fwait
jecxz
adcb
mov
inc
cltd
mov
sub
aam
pop
fcmovnbe
cmp
jge
popa
cmp
sarb
and
cltd
mov
or
xchg
jbe
sub
in
xor
add
aas
in
sbb
scas
cmp
sub
test
jae
push
push
sbb
mov
lcall
std
outsl
std
fstps
frstor
push
mov
bound
adc
addr16
enter
mov
sub
mov
inc
pop
push
test
ret
mov
test
mov
add
jb
and
or
shl
mov
out
lcall
sub
lret
dec
nop
mov
divps
adc
sbb
push
cmp
xchg
ror
mov
rcrb
out
push
add
push
jne
es
out
mov
fiaddl
pop
rcrl
outsb
js
cmp
icebp
in
int
mov
cmc
push
dec
adc
jle
mov
mov
ja
sbb
xor
mov
fimuls
push
pop
adc
clc
fistl
cmp
jne
adc
adc
fstps
sub
cmp
sbb
fsubrl
and
cmp
and
lock
mov
inc
out
xchg
fdivrp
dec
call
sub
push
jae
mov
jecxz
cs
out
cli
scas
sbb
mov
push
loope
mov
js
repnz
jnp
pushf
add
mov
add
jo
inc
adc
cmp
cmpsl
addr16
xor
cmp
stos
add
mov
inc
out
cmpsl
scas
sub
inc
pop
into
xor
fcompl
push
sbbb
fiadds
add
rorb
and
call
repz
loope
dec
dec
aam
dec
xlat
hlt
fmul
dec
repz
shrb
or
aam
addr16
adc
adc
sub
arpl
jae
or
sub
lret
dec
cmp
jmp
push
mov
push
dec
fisubs
lcall
sbb
add
lcall
roll
inc
lea
rcl
lods
cld
mov
lahf
dec
jecxz
dec
leave
sub
fildll
xor
pop
and
dec
add
test
or
sub
jno
ret
pusha
jmp
pop
dec
sub
mov
test
in
int3
xor
jmp
inc
es
ret
sub
cmp
enter
cmp
cmpsb
and
mov
and
dec
bound
loop
add
insl
ljmp
cmpsb
fistpl
lret
cmp
dec
adc
cmp
fsubs
inc
rorl
call
scas
mov
lret
or
adc
sbb
sbb
fsubr
mov
lahf
rclb
xchg
pop
xchg
into
mov
addb
dec
js
test
pop
adc
sub
stos
push
aaa
mov
inc
sub
lock
mov
mov
lea
mov
cmp
sti
xchg
push
sub
xchg
jne
jo
or
pop
lahf
push
adc
sub
lea
das
out
mov
in
fisttps
cmp
push
jns
push
push
shl
mov
jle
push
leave
cmp
fisubl
popa
fxch
mov
xchg
arpl
lods
clc
push
adc
and
inc
dec
ret
push
push
mov
outsl
jne
hlt
outsl
addr16
test
ficomps
mov
inc
clc
pop
xchg
mov
push
in
scas
pop
xor
jb
push
xchg
lods
into
popa
mov
fnstcw
push
ljmp
cmc
xchg
daa
jns
mov
lcall
mov
cmp
mov
ficomps
inc
jno,pt
ret
cwtl
call
cmp
or
lods
and
mov
sarb
mov
xchg
cmc
cmp
rcr
fimuls
ss
vphaddwq
popf
push
mov
adc
out
rorl
lea
push
or
pop
mov
jg
adc
mov
or
mov
cs
insl
ret
push
ljmp
sub
and
decl
movsb
dec
int
cmp
mov
push
mov
pop
mov
pop
aas
clc
dec
cmp
mov
out
jo
leave
jae
cmp
negl
mov
xchg
jne
push
pop
xchg
test
shl
into
stos
fidivl
andb
push
adc
jnp
jge
shrb
mov
sti
pop
out
jnp
inc
lcall
push
push
or
popf
jne
cwtl
rcl
leave
adc
mov
pop
nop
fiadds
popa
ljmp
xor
cmpsl
jle
adc
jg
ret
push
jmp
push
je
cli
std
and
xchg
lods
add
call
aam
or
dec
fldl
mov
jl
and
outsb
loop
outsb
mov
pop
jp
mov
adc
mov
fstps
mov
xchg
dec
ret
mov
jae
sbb
imul
xor
in
int3
jne
jno
jmp
gs
imul
pusha
or
adc
test
lock
xor
add
test
aaa
mov
mov
dec
in
mov
enter
mov
dec
xchg
into
and
adc
mov
movsb
mov
cli
push
repz
shll
mov
shlb
outsb
push
sbb
mov
ret
sub
fmull
cltd
out
bound
xchg
push
loop
push
jo
adc
push
fcoml
push
mov
xlat
and
dec
inc
sbb
or
sub
and
or
movsl
xchg
jbe
scas
and
enter
push
push
lret
imul
andb
rclb
dec
push
mov
mov
push
sarb
aas
lret
ffreep
int
pop
xor
xchg
xor
stc
test
inc
and
out
mov
mov
dec
jne
jne
fadds
jge
bnd
iret
and
or
sbb
inc
popf
adcb
push
and
inc
ljmp
jb
dec
mov
or
shll
inc
clc
int3
sub
mov
cmc
mov
sti
jge
subl
int
adc
pop
in
fs
cmpsl
mov
push
push
imul
call
push
dec
adc
jo
cmpsb
mov
call
jae
test
enter
test
stc
jo
inc
sub
pusha
mov
and
insl
push
loope
lds
xor
xchg
imul
lds
adc
call
push
pushf
adc
cmp
and
push
xor
and
push
mov
adc
pop
jo
push
sbb
scas
loopne
cmpsb
stos
in
and
ja
push
adc
and
cmp
xchg
mov
loope
sarb
fbld
dec
mov
std
divl
hlt
test
pushf
mov
xor
neg
push
mov
pop
insl
sub
cmp
pop
rcl
pop
push
add
stos
xchg
mov
push
cld
xor
cmpsb
inc
mov
pop
leave
loope
pop
sub
std
subb
fnstsw
out
shll
std
jge
in
cmp
mov
or
mov
ja
in
les
hlt
adc
das
or
push
imul
sbbb
cmp
dec
cmp
adc
lods
or
adc
out
subb
stc
cltd
adc
push
sbb
or
dec
and
inc
js
dec
arpl
sub
imul
mov
lds
aam
hlt
lcall
fsubrs
jbe
mov
outsb
shlb
pusha
leave
push
xchg
pop
idivb
int3
dec
push
rol
stc
repnz
mov
and
fsts
stos
xchg
lds
imul
aam
into
and
jp
loope
pop
mov
sub
in
and
imul
psrlw
repz
outsl
mov
mov
fstl
pop
jae
dec
mov
aad
sbb
push
out
mov
test
das
mov
sbb
sarl
jge
hlt
push
jns
dec
stos
out
js
fnstsw
push
insl
outsb
ret
push
enter
jne
sub
push
imul
pop
data16
inc
pop
scas
or
cmp
push
loope
sbb
fwait
jne
stos
popa
test
cmpsl
addr16
jnp
adc
in
cmp
inc
inc
pop
out
adc
aas
push
mov
push
jmp
pushf
ud2
mov
mov
cltd
out
pop
jge
sub
stos
mov
jne
jl
push
pop
das
addl
mov
mov
sbb
sub
test
xchg
jns
into
sbb
cmp
pop
popa
mov
out
add
flds
and
gs
gs
insb
loopne
jne
out
push
aas
aaa
xor
jg
hlt
adc
xchg
pop
aas
cwtl
scas
mov
scas
and
lds
add
and
roll
aad
adc
daa
push
and
out
xchg
or
sbb
xor
loop
cmpsl
sub
or
adc
sbb
sub
pop
mov
ds
imull
ljmp
je
in
shl
decb
adc
cmc
cmp
js
sub
call
pop
out
ret
testl
fisubs
pop
ljmp
lahf
popf
andl
cmp
fisttpll
out
sarb
lds
mov
push
shl
or
pop
jg
xor
pop
out
pop
inc
test
xor
pop
and
test
mov
mov
lock
mov
mov
xlat
jp
repnz
mov
cmp
lods
dec
js
jns
lcall
cmp
xchg
sbb
int
sbb
testl
cwtl
push
arpl
xchg
adc
dec
scas
inc
in
popf
push
lock
sub
data16
jno
push
imul
xor
sarl
adc
lcall
mov
mov
jae
leave
test
ja
pop
mov
cmpsl
pop
dec
jnp
cmp
imul
js
hlt
jbe
mov
adc
push
sbb
pop
jle
mov
jmp
xchg
mov
adc
js
aas
sbb
les
xlat
ss
aas
out
inc
bound
repnz
mov
jg
decb
out
data16
aaa
sub
fwait
push
aaa
push
add
jnp
or
jg
jmp
fs
jecxz
jo
test
pop
movsb
outsb
mov
out
xchg
xor
xchg
sub
pop
mov
pop
xor
xor
adc
lea
or
lds
movsb
fs
loopne
fdivrs
lea
jno
add
push
imul
insl
sbb
cltd
sahf
inc
pop
fstl
in
nop
aas
and
adc
mov
or
or
and
outsl
rcrb
mov
pop
aas
and
lock
cwtl
pop
sahf
dec
push
adc
dec
rcr
push
mov
mulb
xor
sub
int3
ljmp
es
sahf
jns
sbb
mov
mov
fnstsw
imul
xor
out
mov
sub
stos
daa
cmp
iret
ficomps
jno
dec
mov
mov
sub
das
xchg
inc
pop
dec
adc
or
mov
xchg
pop
sbb
cmpsb
cli
fwait
push
nop
or
data16
or
pop
loopne
xor
mov
dec
mov
push
jo
mov
sub
daa
mov
sub
add
and
gs
or
mov
ret
shrb
mov
push
jmp
pop
sti
mov
xchg
mov
sub
and
pop
imul
xor
movsb
pop
arpl
out
fwait
mov
jbe
jbe
fsubl
push
outsl
cmp
mov
inc
daa
cmp
pop
scas
mov
jmp
in
or
adc
xrelease
or
or
mov
into
cmp
jae
adc
repz
insl
mov
add
shrl
jnp
imul
sbb
fstp
dec
lods
sahf
mov
lcall
push
xchg
shlb
inc
out
fiaddl
jl
faddl
pusha
mov
fisttpl
sarl
pop
andb
xor
sub
je
mov
sub
push
test
insb
mov
lock
cmp
mov
lds
call
mov
xlat
sub
adc
cld
push
xor
xor
xchg
sub
mov
movsl
fwait
jne
aaa
repz
loope
cmp
inc
rolb
mov
mov
das
sub
out
imul
xchg
cmpl
pop
mov
push
sbb
cli
scas
mov
hlt
xor
and
inc
jns
outsl
int
ds
dec
adc
cwtl
loope
jne
stos
and
sbbl
dec
jg
cmp
jne
xor
rcll
sub
cs
jecxz
cmp
sbb
hlt
imul
jecxz
push
xor
popl
xchg
pop
xor
xor
pavgb
out
mov
lock
mov
add
or
je
inc
arpl
pop
pop
shll
xchg
push
cmc
xor
add
dec
jle
mov
movsb
cld
pop
fstpt
enter
js
lods
cld
out
sti
or
jle
mov
xchg
add
test
int3
fstl
out
push
cmpsb
out
shr
adc
cmp
sub
xchg
scas
jle
popf
lock
adc
rcrb
and
mov
inc
dec
dec
lods
in
inc
rclb
stos
arpl
pop
rcl
jne
imul
mov
sub
testl
js
push
loop
pop
in
or
insb
inc
movsl
xor
cmpsl
add
add
rol
stos
stos
test
enter
int
movsb
scas
mov
push
rcr
nop
adc
xchg
or
cltd
jge
mov
inc
mov
pop
nop
sbbl
dec
mov
xchg
xor
insl
or
out
ds
mov
add
xchg
push
add
iret
dec
pop
push
ss
or
cmp
into
lea
sbb
in
push
fcoml
jle
cli
jecxz
sbb
xchg
mov
ljmp
fdivr
cwtl
subl
cwtl
and
jecxz
aad
xor
pop
push
and
dec
in
popa
aaa
lds
fs
push
nop
mov
insl
movsl
jle
sbb
test
or
dec
in
fwait
into
cwtl
inc
xor
lret
scas
jnp
push
imul
loop
stos
in
mull
sbb
push
sub
ljmp
ss
jb
push
push
iret
xor
add
jo
cmp
sub
push
adc
and
aad
mov
dec
shr
movsl
fisubl
lcall
aaa
push
int3
push
fsubrl
xor
in
lods
ret
dec
hlt
and
sbb
and
cmp
into
sbb
or
mov
and
mov
paddq
inc
loope
dec
jnp
xchg
push
das
rolb
test
pop
shrl
out
xor
inc
aaa
mov
sahf
std
dec
aam
out
pop
jnp
std
mov
jns,pn
sub
ret
lahf
sbb
insb
cmc
push
aas
aas
cmp
stos
shrb
daa
jle
inc
fistl
or
or
mov
pop
mov
pop
mov
hlt
push
add
or
fists
mov
loopne
subb
fcoms
push
mov
pop
and
and
and
push
or
mov
ja
sahf
daa
inc
xor
arpl
outsb
test
inc
sbb
dec
cmpsl
add
pop
cmc
in
mov
insl
mov
mov
ds
shrl
int3
pop
lret
call
leave
jmp
cmp
test
mov
mov
lcall
outsb
ljmp
jmp
jg
pop
arpl
cs
inc
aaa
add
addr16
push
cmc
mov
pop
out
dec
sub
add
pop
cmp
imul
mov
js
xchg
call
push
and
xchg
lahf
add
sbb
les
rcll
push
xchg
data16
roll
cmp
adcb
and
rcll
push
mov
adc
add
in
cmp
sbb
add
lea
xchg
iret
add
adc
imul
inc
sahf
dec
test
jns
out
pushf
add
lret
dec
xor
jno
xorb
or
dec
xchg
xor
xchg
jns
mov
mov
and
push
inc
xor
pop
lret
push
mov
sbb
outsl
mov
fidivrl
cmp
add
and
imul
stos
jg
push
jl
mov
push
inc
hlt
mov
outsl
gs
adc
fcmovne
push
rorl
adc
or
inc
sbb
push
jns
cli
jecxz
dec
dec
sbb
push
vcomiss
ja
xchg
mov
push
scas
xchg
sbb
adc
cmpsb
rcl
aas
test
pop
outsl
imul
repz
mov
dec
notb
test
jbe
xchg
pop
sahf
ljmp
pushw
jp
dec
ret
mov
je
std
stc
push
jg
fisttpl
sti
jno
pop
inc
jmp
cltd
mov
inc
lret
xor
add
and
mov
fidivrl
cmc
sub
outsb
mov
lcall
cmp
jne
clc
mov
and
sub
clc
test
jno
stos
mov
or
xchg
lcall
jle
jae
jnp
shll
nop
and
loop
fsubs
sbb
jle
test
mov
lds
vpsubb
stos
sbb
xchg
mov
negb
push
out
sub
bound
mov
fnsave
xchg
popf
gs
pop
ficoms
adc
shlb
pop
adc
push
ret
jne
outsl
adc
loop
pop
pop
stc
fstpl
popa
cmp
dec
lods
sub
rcr
cmc
aad
mov
push
in
sub
adc
lea
lods
das
sub
xor
sbb
xchg
push
xor
pop
mov
xchg
push
lret
sub
push
dec
fnstenv
push
adc
add
pop
cmp
jge
lcall
in
sbb
or
fwait
sub
je
test
ja
inc
sbb
movsb
sbb
jecxz
xchg
add
jne
cld
aam
cwtl
push
in
adc
neg
pop
adc
test
lds
rorb
faddl
add
adc
in
jnp
jmp
mov
outsl
cs
cwtl
xorl
into
mov
cmp
or
pop
push
pop
fbld
int3
dec
dec
adc
sbb
push
pop
popf
movsb
mov
js
mov
fldl
sbb
outsb
test
sti
iret
mov
sub
js
push
loope
jae
js
jbe
inc
dec
and
out
testl
xchg
fbld
add
xchg
stos
out
das
add
je
fcomps
mov
adc
pop
mov
test
xchg
ljmp
sub
test
cltd
sub
mov
jo
out
push
shrb
xchg
mov
notb
cs
mov
and
sbb
or
push
xchg
addr16
lea
push
push
fstpl
popa
sub
mov
xor
or
xlat
sahf
inc
fwait
clc
sub
cmp
mov
add
ja
into
std
mov
out
adc
or
xchg
jno
push
arpl
push
mov
dec
xchg
xor
les
fwait
xchg
dec
push
adcl
push
clc
cmpsb
and
xchg
pop
out
jle
js
pop
dec
and
push
jne
in
mov
jne
fsubp
mov
ljmp
sbb
cmp
hlt
mov
push
movsb
add
add
bound
sub
jno
ss
pop
adc
loope
out
ljmp
mov
and
insb
jnp
outsl
scas
insl
cwtl
pop
sbb
lock
aam
jne
roll
lods
push
dec
imul
fldcw
mov
push
cmp
jp
pop
in
and
ljmp
orl
xchg
out
addr16
es
call
cld
and
gs
xchg
push
js
stos
add
aam
es
inc
cmp
cmp
sbb
dec
loop
adc
das
imul
stos
xchg
pop
or
push
cwtl
or
cmp
gs
cmp
loopne
roll
xchg
cmpsb
mov
inc
xor
nop
jg
cwtl
test
xor
mov
xchg
je
cmp
std
lock
push
add
pop
sti
add
dec
add
out
rorb
shll
loop
rcrl
stos
das
and
popf
fwait
bnd
mov
repz
inc
push
jmp
fcmovu
sub
test
push
mov
movsb
mov
xor
xor
test
xor
js
inc
mov
jne
and
mov
xor
adc
sarl
jne
aaa
cmp
jae
aam
fildl
fbstp
pop
loope
lock
push
mov
aad
cmp
orb
lods
ss
shl
test
sub
cwtl
push
cwtl
lods
or
inc
sub
push
sub
or
leave
add
idivb
add
fcmovne
adc
and
mov
fdivp
fs
cwtl
repnz
arpl
shrb
mov
mov
mov
cli
fists
in
dec
inc
into
mov
cmp
xchg
andl
aam
and
ja
stc
shlb
int3
push
inc
cmp
into
sub
mov
pop
fidivl
scas
les
sbb
in
pop
jmp
lods
mov
aad
and
push
push
popf
adc
arpl
aas
add
jle
or
cli
in
and
stos
dec
mov
sbb
pop
pop
stos
xor
add
stos
xchg
jnp
sub
pop
popw
jl
in
inc
aaa
dec
pop
push
pop
and
mov
lcall
nop
cmp
xor
xlat
mov
pop
ljmp
aas
call
imul
in
and
neg
inc
dec
daa
cmp
lcall
xchg
cmpsb
outsl
pop
test
mov
mov
scas
dec
negb
pop
inc
or
daa
mov
das
xchg
sbb
add
inc
push
fiadds
jo,pn
or
insb
inc
fsts
and
sub
inc
lds
xor
pop
sub
lock
loope
dec
cs
pop
lcall
jg
ds
insl
sbb
enter
and
daa
mov
sbb
jo
jp
mov
push
insl
mov
adc
sbb
mov
pop
mov
sbb
insl
push
xor
fwait
aam
mov
push
sub
cltd
add
repnz
ja
popa
test
test
nop
push
in
jo
jge
dec
adc
push
cmp
jmp
push
xor
mov
inc
push
jge
lock
sbb
lahf
pop
mov
loopne
notb
lret
sbb
pop
shrb
lret
push
repnz
add
push
add
cmp
push
fcompl
movsl
dec
lret
sub
in
pop
xchg
sub
add
cmp
dec
mov
mov
or
jp
add
addr16
into
or
cs
inc
sbb
mov
inc
cmpsb
shrl
pop
cmp
bound
lock
repnz
ret
xchg
mov
aam
enter
cli
lret
sti
mov
xchg
daa
imul
je
mov
jmp
sahf
or
xchg
movsb
pop
xchg
pop
and
mov
mov
push
pop
pusha
mov
cmp
inc
in
aaa
cmpsl
mov
dec
pop
fidivrs
repnz
mov
cmp
push
jae
xor
andb
dec
rcll
inc
fadd
pushf
jl
mov
or
insb
jnp
call
mov
ret
cmpl
aam
push
scas
das
loop
decl
imul
mov
xchg
lods
sub
movsl
sbb
inc
into
jg
xor
scas
je
repnz
enter
int
jg
hlt
iret
out
in
or
insb
out
mov
sub
call
call
into
stos
mov
dec
add
fsubp
xchg
sub
mov
jne
and
int
xlat
jnp
jns
jecxz
jg
jae
pop
stos
add
testl
xor
dec
outsb
mov
scas
xlat
mov
lret
lahf
or
jb
test
adc
dec
cmc
lock
pop
lds
or
adc
xchg
xchg
adc
cmpb
int
fisttps
and
push
aaa
test
push
clc
rcr
cs
xor
in
movsb
in
lcall
into
dec
ficompl
stc
into
xor
call
xorb
cld
adc
jbe
out
stc
dec
sub
stc
inc
repnz
xchg
ljmp
add
dec
push
mov
es
ficoms
lcall
inc
jl
push
aam
enter
mov
and
push
adc
das
es
jmp
xor
arpl
push
ja
loop
pop
mov
add
pop
jecxz
fldenv
rol
and
pop
in
sti
cmpb
mov
xchg
add
es
dec
xchg
btr
sbb
and
and
pop
inc
imul
push
scas
sbb
push
inc
clc
jg
adc
add
popf
inc
inc
notb
xchg
int
dec
lods
inc
fmuls
xor
pop
jo
cmpsb
pop
pop
out
test
aam
inc
das
clc
je
sub
iret
in
scas
or
mov
ss
or
pusha
insl
jne
popf
pop
or
inc
mov
add
in
dec
xor
icebp
sub
xchg
ljmp
jne
addr16
mov
add
stc
data16
pop
push
cmp
int
ss
cli
mov
pop
cmp
es
dec
lcall
fdivr
movsl
scas
push
jb
mov
repnz
push
das
pushf
adc
fstpl
mov
push
mov
xlat
add
in
test
fcom
dec
mov
mov
cmpsl
jno
sbb
and
int
sub
roll
inc
ja
fidivs
lock
das
push
push
cmp
jae
out
xchg
stos
call
je
add
rol
out
sub
pusha
cmp
adc
cltd
loopne
adc
mov
push
lea
fldenv
and
mov
dec
stc
fiaddl
dec
cmpsb
jp
imul
call
pop
rorl
lahf
pop
outsb
jge
or
stc
push
pop
std
adc
cmp
xor
dec
in
cmp
sub
xlat
xor
push
ss
inc
dec
jns
imulb
xchg
sub
cmp
inc
cld
imul
ror
jmp
hlt
mov
ret
out
and
or
out
addr16
push
jp
cmp
push
fcoms
push
push
or
movsb
push
jnp
repz
pop
aaa
call
in
enter
lea
push
insl
and
cld
sbb
push
shrb
mov
xchg
addb
out
and
scas
subl
dec
cmp
adc
aad
lcall
cs
sub
mov
dec
icebp
jecxz
ret
and
in
lahf
mov
jge
dec
mov
mov
dec
lods
imul
fisttps
sbb
movd
xor
je
inc
mov
push
xorl
andw
adc
inc
sti
add
add
out
xchg
sahf
sbb
test
mov
aaa
leave
pop
xchg
aad
xchg
stos
arpl
mov
inc
sub
ljmp
mov
lcall
pop
jns
rcrl
in
mov
imull
cmp
out
jns
lods
std
mov
mov
pushfw
movsb
mov
popa
xchg
adc
test
cmp
test
test
cmc
xchg
pop
and
scas
incb
xor
std
adc
mov
mov
sub
xchg
xor
js
add
jns
mov
adc
in
mov
inc
popf
dec
mov
into
mov
movsl
pop
cmp
dec
mov
inc
cs
pop
fbld
adc
lock
push
cld
outsb
dec
pusha
cli
fimuls
loop
add
push
add
std
lahf
mov
shrl
xor
test
and
push
push
xor
decl
lods
cli
lret
insb
jns
cmp
mov
and
xlat
pop
mov
movsl
push
loop
jl
lods
je
or
addr16
int3
aaa
std
adc
push
test
repz
dec
mov
shll
daa
push
or
push
cmp
rclb
jp
xor
xor
out
adc
pop
mov
movsl
shlb
cmp
addr16
lahf
jg
outsb
pop
mov
jl
xlat
ror
xchg
pop
xor
sti
xchg
das
mov
dec
js
push
out
sbb
sbb
push
inc
mov
test
or
sub
out
fmull
cmpsl
out
xor
into
jns
insb
outsb
jno
jbe
stos
push
push
adc
cltd
out
jl
insb
add
cmp
jbe
scas
xchg
stc
in
jb
jecxz
adc
pop
jl
nop
cmp
lcall
enter
cmpsb
inc
sbb
stc
adc
ret
sub
sub
icebp
iret
scas
jbe
dec
mov
pop
ds
scas
mov
mov
in
add
push
mov
sbb
mov
fstpt
jle
shr
neg
jbe
ss
ret
adc
scas
orb
sub
sbb
mov
test
add
mov
and
mov
lock
pop
test
je
fdiv
push
adc
mov
dec
fisubl
ja
jno
xchg
hlt
jae
push
add
sbb
sbb
jbe
gs
dec
xchg
adc
pusha
jo
xor
dec
rcr
das
icebp
pushf
aaa
and
sub
shr
sub
push
push
cmp
inc
lcall
shlb
cwtl
xorl
std
adc
test
pushf
repnz
dec
stos
movsl
inc
aaa
cld
dec
icebp
out
cmc
and
fs
repnz
loope
cmp
cmp
iret
xor
mov
pop
jae
ss
push
xor
push
fstps
cmc
push
sahf
aad
movsb
push
dec
pusha
add
jl
dec
in
std
int3
call
pop
arpl
jo
push
jl
cmp
push
stos
sarb
sub
pop
pop
movsb
jb
sub
pop
dec
jl
mov
mov
rcrl
movsl
ret
sti
sub
outsb
hlt
test
add
fstps
add
dec
cmp
mov
pop
ljmp
test
jge
cmp
adc
add
popf
pushf
push
aad
dec
into
fucom
dec
dec
or
mov
inc
xchg
or
mov
cmp
popf
or
lret
rcrl
mov
adc
call
repnz
xor
hlt
jnp
xor
mull
add
mov
xchg
xor
imul
jbe
movsl
les
and
test
pusha
mov
sahf
ds
int3
cmc
inc
sahf
mov
stc
pop
loope
push
mov
lock
out
pop
in
in
pop
mov
xor
inc
cmpl
jnp
aaa
jecxz
dec
repz
in
or
insb
push
mov
inc
fwait
pop
ror
adc
clc
imul
out
pop
imul
xor
pop
out
and
adcl
mov
dec
xchg
movsb
cltd
inc
fsubl
xor
jns
jp
mov
mov
xchg
loop
sbbb
movsb
push
in
lea
icebp
cli
jecxz
out
xchg
and
andb
push
cmp
adc
adc
or
lods
xchg
arpl
test
sbb
fsub
mov
fwait
inc
fdivrl
inc
xlat
pop
pop
cli
adc
repz
aad
jp
popl
pushf
ficoms
and
ljmp
in
xor
sbb
dec
jp
addr16
int3
ja
stos
cmp
cmp
mov
xchg
mov
subb
std
and
lret
sbb
lock
and
xchg
fwait
sti
xchg
in
sbb
mov
adc
mov
arpl
mov
popa
sbb
dec
aas
call
popf
cmp
out
dec
push
inc
mov
stc
jb
cmp
sub
jns
sub
clc
cld
mov
jge
add
ret
cmp
sub
into
and
adc
scas
lret
sbb
mov
dec
mov
pop
in
ret
or
rcrb
das
cmp
pop
add
dec
movsl
mov
cli
test
pop
test
popa
add
fstps
dec
push
loop
ja
jo
loope
adc
aam
gs
out
pop
adc
ficompl
shlb
andl
jo
sbb
je
rol
popa
shll
pop
pop
outsb
dec
sbbl
shrb
je
push
ljmp
loope
inc
aas
inc
cmpsb
pushf
cmpsb
ss
inc
push
mov
outsl
fiaddl
outsb
idivb
and
and
sbb
sbb
jp
xchg
neg
movsb
mov
mov
push
stc
pop
lods
jno
inc
and
add
fmul
jge
sbb
or
push
rcrl
lds
push
xchg
inc
insb
xchg
nop
sub
jg
mov
in
stc
inc
pop
sub
mov
in
pop
add
aam
loop
cli
mov
push
jmp
jne
pop
lahf
mov
xchg
adc
data16
push
mov
jecxz
sbb
mov
xchg
ljmp
mov
mov
pop
repz
fwait
dec
out
mov
and
or
notl
pop
mov
ds
test
popf
adc
imul
out
mov
mov
jb,pn
jl
icebp
inc
push
stc
lea
push
gs
shlb
xchg
shll
ds
mov
cli
or
push
in
jl
sbb
sbb
mov
and
mov
xor
fiaddl
and
and
int3
insl
push
ljmp
dec
sub
cmpsl
or
jae
loop
ret
frstor
xlat
clc
inc
stos
mov
sub
fildl
pop
leave
mov
push
ja
sbb
int3
pop
xchg
cli
popf
push
leave
les
xor
push
fdivl
aam
shlb
mov
dec
xchg
sub
fs
xor
jecxz
sahf
lret
ds
or
jecxz
scas
decb
aaa
pop
mov
dec
pop
sub
mov
sbb
sub
pop
jb
int
test
test
and
push
or
push
xor
xor
addr16
sbb
sbb
pushl
dec
xchg
dec
mov
sbb
jne
lods
mov
push
jno
pop
push
shll
xchg
or
test
mov
fcompl
pop
adc
or
mov
cmc
xchg
es
pusha
lock
dec
xchg
lock
pop
cmpsb
cmp
mov
adc
aam
out
or
and
in
out
out
jbe
lods
pop
mov
and
frstor
or
lods
lods
inc
gs
popf
dec
inc
jmp
fprem
push
mov
aam
mov
imul
and
jns
mov
sbb
sarb
add
loop
fs
or
mov
cmp
aas
adc
adc
dec
outsb
cmpsb
stc
ljmp
imul
jns
movsl
test
pop
lea
xchg
inc
stc
in
lock
inc
sub
xchg
mov
addb
stos
mov
aam
mov
paddusb
push
jecxz
lods
mov
adc
jns
pop
adc
mov
cwtl
xor
int
push
mov
jae
stos
push
fistps
mov
add
les
jns
and
int3
rcr
nop
pop
mov
movl
sub
mov
push
dec
cmc
cmp
pop
test
jge
lcall
cmpsl
jnp
hlt
popa
mov
xchg
push
jmp
dec
mov
cmc
ret
mov
ja
push
shlb
adc
push
cmpsb
js
lods
repz
es
in
push
ss
mov
pop
pushf
or
mov
jbe
sub
shr
mov
inc
add
lods
clc
mov
jle
movsb
inc
xchg
xlat
add
inc
in
out
jmp
mov
sub
jecxz
pop
mov
test
sarl
sar
xor
sbb
imul
mov
mov
mov
add
out
jnp
stc
sub
mov
or
inc
jl
add
mov
adc
es
repnz
jl
mov
push
or
imul
push
jl
sbb
lds
das
sarl
jb
and
cmpsb
aas
xchg
pop
pop
aam
je
lahf
xchg
adc
or
dec
into
pop
xor
pop
and
in
xchg
fwait
mulb
test
xlat
xor
push
test
clc
jle
sub
or
push
jae
push
jg
scas
push
cwtl
push
es
mov
fcmovbe
mov
cli
aas
adc
xor
and
test
adc
inc
aaa
mov
mov
fstpl
jle
insb
add
daa
push
mov
leave
inc
jmp
out
shl
sti
daa
jne
mov
cmp
fstl
fbld
dec
push
cmp
fs
rol
arpl
push
jmp
xchg
inc
xor
cmp
cmpsl
jns
inc
aam
dec
test
test
xor
pop
cmp
std
add
icebp
pushl
int3
cmp
jno
sub
arpl
xor
insb
add
out
test
inc
pop
iret
mov
push
mov
and
fcoms
into
jecxz
aas
out
pop
pop
jecxz
inc
js
popa
sub
mov
xchg
nop
cmp
push
xorl
jns
js
fldt
pop
andb
dec
sbbb
into
xlat
lcall
jae
mov
and
xor
test
jns
outsb
daa
arpl
add
jle
sbb
shl
dec
ja
xchg
fbstp
fstpt
push
rsqrtps
add
or
or
scas
scas
stos
push
adcb
nop
mov
shlb
adc
jbe
aas
jge
movb
fsubp
xchg
and
xchg
loope
loop
add
dec
fists
fs
mov
daa
repnz
xor
mov
or
inc
shll
es
push
lods
push
repz
add
mov
dec
in
jno
or
das
jb
cmp
sbb
fcomps
ds
jmp
sbb
fwait
out
notl
iret
mov
push
and
push
jne
push
dec
sbb
and
xor
add
cmc
mov
cmp
int
bound
inc
cmp
pop
or
pusha
adc
insb
xor
lret
or
and
aas
push
jmp
cmpsl
addr16
cltd
and
clc
add
bound
jp
jmp
outsl
xchg
and
movsb
mov
jl
mov
mov
push
dec
jmp
mov
cmp
pushf
mov
in
xlat
cmp
cmp
out
and
sahf
pop
xchg
jo
imul
std
fistpll
xchg
lea
or
mov
loopne
cmpsl
xchg
xor
loopne,pt
push
push
mov
sbb
fsubl
xchg
in
sbb
in
mov
xchg
arpl
push
fcmove
cmp
dec
dec
hlt
and
pop
cmp
xor
xchg
bound
imul
jnp
mov
popf
sbb
mov
jp
clc
icebp
inc
push
sbb
xor
les
mov
xchg
aam
mov
mov
adc
xchg
sbb
movsl
imul
rcrb
cltd
xchg
add
xlat
movsb
adc
pop
lods
mov
mov
pop
push
dec
cwtl
out
popl
or
inc
push
jg
xchg
xor
jns
jae
leave
pop
ja
test
mov
stc
fcoml
inc
jge
cmp
jnp
dec
jo
jne
cmc
pusha
imul
out
inc
popf
into
jl
js
xchg
push
xchg
outsb
ljmp
sahf
fs
repz
xor
add
xor
adc
add
icebp
call
into
xor
xlat
push
loope
imul
xor
lahf
add
jl
dec
sbb
mov
fwait
test
stc
jmp
and
inc
cli
cmc
data16
cld
mov
cmpsl
sbb
push
push
test
cmp
cwtl
popf
lret
das
mov
dec
ret
mov
lock
lods
out
cwtl
xor
scas
cmp
out
pop
stc
lods
loop
pop
js
sbb
jp
inc
cli
jno
stos
add
pop
imull
mov
fwait
call
sahf
mov
mov
sub
dec
push
insb
imul
xchg
cmp
in
push
mov
jge
orl
dec
sbb
mov
mov
lods
adc
or
jecxz
es
leave
sub
mov
mov
dec
pop
mov
jno
mov
jp
mov
cmp
dec
in
leave
adc
aaa
sbbb
sarl
andl
cmp
sbb
ljmp
jb
pusha
push
adc
xchg
imull
cmpsl
add
adc
mov
insb
mov
mov
rolb
mov
mov
mov
lock
sti
cmp
stc
insl
jo
push
test
sub
push
jnp
xchg
dec
lods
out
repz
fcoms
cmpl
push
adc
xchg
rcr
push
and
gs
test
fs
pop
lods
es
in
cmp
cmp
sub
mov
lcall
jle
mov
insl
jmp
adc
fidivl
cltd
fildl
std
mov
arpl
xchg
insl
dec
push
movb
daa
stos
sbb
add
aas
xor
push
jns
aaa
aas
fcmovne
lret
movsl
cmp
int
shr
xchg
mov
mov
xchg
xchg
fsubrl
cmp
and
test
mov
test
loop
push
loope
push
add
sub
mov
adc
mov
add
cmp
xor
mov
or
xor
fs
movsl
inc
pop
cmpsb
stos
or
push
movsl
sbb
sbb
popa
mov
xor
int
pop
fmull
push
add
hlt
push
push
push
sbb
adc
lods
jge
sub
and
push
in
iret
cmp
and
js
mov
xor
cmpl
shlb
add
sahf
bound
cmp
inc
mov
cmp
test
mov
scas
xchg
insl
test
add
loop
dec
cmp
movsl
cmp
mov
sbb
xchg
in
pushf
iret
stos
xor
aaa
fwait
jle
xchg
jg
mov
loopne
icebp
lcall
ret
inc
sbb
popf
jmp
jl
decl
aas
imull
js
jne
gs
and
push
mov
js
dec
lret
cmp
jle
in
cltd
sbb
shll
pop
int3
dec
xor
outsl
xlat
push
pop
cmp
pushf
cwtl
and
add
pop
adc
mov
movsb
xchg
rcrb
stc
aad
outsl
sub
adc
sbb
jg
stc
iret
or
pop
add
pop
xchg
fbstp
mov
insl
mov
mov
mov
int3
sub
fst
push
xlat
or
icebp
mov
jmp
dec
xchg
cmpl
pop
push
jge
inc
pop
sbb
lret
pusha
jo
popa
lock
mov
xchg
jge
or
sti
cmp
jo
xchg
mov
xlat
push
rcrb
add
and
lret
jae
mov
jb
or
sti
in
lcall
arpl
test
loopne
mov
or
jb
das
es
or
std
and
int
jae
mov
neg
arpl
iret
and
or
pop
or
jno
lds
mov
repz
sbb
dec
in
sub
imul
jne
mov
mov
mov
mov
fldcw
idivl
inc
add
fsubrl
xor
int
dec
ficoms
dec
add
xchg
out
xor
loop
lods
xor
mov
xor
std
repz
movsl
lods
inc
call
or
rorl
xchg
je
movsl
jno
repz
and
loop
inc
shrb
mov
cltd
jl
inc
call
jg
and
aaa
xlat
xchg
ds
or
mov
leave
adc
or
xor
cmpsb
stos
or
mov
inc
inc
mov
mov
arpl
cmp
or
lds
insl
push
jp
call
mov
je
lret
roll
in
xchg
xor
mov
shll
scas
sub
imul
push
jns
inc
dec
jecxz
jge
ret
xsha1
cmpsb
mov
std
or
cmpsb
cmp
test
int3
scas
jecxz
dec
mov
inc
popa
adc
push
imul
push
push
sbb
mov
inc
mov
mov
add
out
lds
test
mov
pop
lods
add
flds
outsb
je
jmp
pop
jmp
and
cmp
sub
imul
adc
pop
lea
sub
bnd
stos
rorl
lcall
lret
inc
adc
repz
daa
ljmp
mov
fwait
inc
jae
icebp
clc
mov
or
pop
je
jp
inc
clc
stc
lahf
sbb
daa
jno
lods
repnz
fsub
push
sub
mulb
dec
sub
cmpb
xchg
bound
je
dec
dec
in
or
xchg
xchg
mov
cltd
sahf
cmp
xor
dec
les
hlt
dec
push
sbb
and
movl
addr16
pushf
pop
sbb
in
hlt
addr16
nop
mov
pop
data16
fucomi
in
scas
shlb
sbb
leave
add
adc
sbb
fadd
pusha
lea
pop
mov
xlat
shlb
xchg
test
pop
adc
movsl
mov
push
mov
aad
push
adc
mov
ljmp
cmp
iret
inc
jae
pop
lods
inc
sbb
cs
adc
xor
and
js
add
jle
cmp
cmp
xlat
push
iret
inc
stos
dec
mov
sub
xchg
out
fcompl
adc
sahf
push
js
mov
into
and
imul
push
sti
mov
add
fisubrl
mov
mov
and
mov
lcall
push
dec
dec
nop
and
inc
mov
das
cmpsl
insl
pushf
add
rorb
mov
add
std
hlt
sub
in
xchg
sahf
jg
or
inc
xchg
xor
and
ja
lret
in
ja
rol
test
add
insl
sbbl
in
mov
aas
fcmovnbe
mov
inc
inc
std
pop
xchg
cli
aas
mov
hlt
jg
js
clc
adc
loopne
testb
popf
addr16
push
jns
mov
in
xor
lds
shrl
dec
cld
mov
and
xchg
pop
and
loopne
call
mov
xor
mov
ja
push
or
lret
xchg
inc
jl
iret
es
adc
jnp
imul
cmpsl
xchg
jno
pop
inc
add
cmp
in
test
idivl
shll
jo
lods
inc
cli
mov
test
enter
in
adc
mov
add
cld
mov
add
sti
imul
outsl
add
sub
loope
sar
movsl
loopne
imul
call
test
int3
cmp
sbbl
xchg
adc
popa
insb
mov
cmpsl
or
inc
fisttps
mov
sub
sub
push
jl
sbb
stos
popf
dec
xor
mov
mov
adc
pop
cmc
push
sub
loopne
mov
jno
cltd
je
lods
adc
add
push
sub
inc
arpl
dec
cmc
adc
test
leave
scas
cmpsb
outsb
rclb
pushf
ret
divl
jns
cmpsl
add
cmp
addr16
cs
mov
ljmp
mov
lods
stc
jg
dec
push
adc
movswl
daa
dec
mov
push
jb
jl
cmpsb
mov
mov
cld
push
ljmp
and
mov
add
nop
stc
sbb
jl
mov
jne
ficomps
ret
xchg
loope
push
inc
cld
inc
jg
mov
inc
mov
push
dec
mov
inc
xchg
fadds
sub
cli
dec
dec
mov
out
leave
lret
js
or
das
or
jl
orps
inc
jmp
cmp
ds
addr16
or
test
xchg
fwait
mov
jnp
and
mov
mov
gs
int3
insl
xchg
ja
push
jmp
pop
cltd
xchg
adc
shlb
lock
pop
shll
aaa
push
dec
jmp
xlat
and
mov
dec
push
insl
std
xor
inc
dec
and
cmp
notl
push
pusha
outsl
dec
jp
or
push
xor
lcall
aad
fucomi
stos
adc
jge
jmp
outsl
adc
xchg
sub
lods
dec
shrl
sbb
popf
push
rorl
insl
inc
dec
mov
sbb
movb
and
stos
mov
les
or
adc
addr16
scas
jge
xchg
fistpll
pop
dec
int3
shl
fwait
cs
es
fs
cltd
repz
pop
dec
mov
push
push
cltd
test
testb
je
popf
push
mov
mov
add
push
data16
arpl
and
lret
pop
jns
in
pop
jle
jg
iret
lods
mov
inc
and
cmp
mov
loopne
jnp
jbe
xor
push
scas
push
and
lahf
hlt
imul
mov
xchg
lret
or
sub
rcrl
ret
and
nop
cmp
push
mov
mov
push
mov
flds
cmpsl
sbbl
lcall
repz
jns
sarb
outsb
cs
mov
push
sti
mov
adc
aad
or
mov
std
pop
push
add
dec
sahf
jbe
int
push
mov
pop
cmc
dec
sub
cltd
xchg
dec
and
or
arpl
pop
decb
dec
dec
inc
sbb
lcall
lods
pop
sarl
fisubs
cmpsb
xor
insl
sbb
fldenv
xchg
xchg
mov
push
repnz
jae
dec
or
aad
paddd
sub
jl
pop
insl
pop
mov
roll
mov
stc
or
lock
sub
rclb
xor
or
or
mov
orl
push
stc
push
pop
mov
push
or
stc
inc
cld
jns
push
scas
sbb
pop
fmull
jo,pn
in
gs
inc
mov
aam
filds
pusha
mov
or
in
pop
push
aas
scas
push
inc
and
movl
pop
mov
aam
jno
test
std
push
ss
dec
push
lods
enter
add
mov
pop
and
inc
rcrl
lock
xor
xor
jns
mov
gs
xlat
sub
jmp
jae
or
fbld
mov
sub
shlb
daa
push
sbb
pop
cwtl
popa
xchg
cmp
int
or
daa
loope
out
jl
mov
bound
or
imul
push
sbb
pop
movsb
mov
mov
out
arpl
inc
in
test
add
cltd
mov
insl
sbbb
stos
adc
cmpsl
leave
aam
xorl
lea
in
add
and
icebp
enter
ret
stos
leave
ret
in
pop
push
pop
daa
lret
stc
into
jns
jnp,pt
jae
add
adc
xchg
mov
sub
push
sub
mov
lods
jbe
sbb
sarb
test
or
push
cmpb
arpl
jnp
mov
popa
pop
mov
pop
imul
das
add
cmp
dec
push
inc
mov
fldln2
or
cmp
push
fiaddl
push
insb
test
ret
std
popf
or
popa
sbb
stc
or
repnz
out
enter
or
mov
add
dec
or
and
stos
sub
outsl
std
cwtl
xor
dec
je
or
lods
pop
mov
imul
add
sbb
push
push
push
pop
in
jle
mov
pop
mov
xor
mov
jo
iret
movsb
pop
xor
xor
push
pop
sub
push
push
hlt
lcall
aas
and
xchg
std
ret
push
and
dec
mov
fnsave
int3
jge
push
push
in
loopne
mov
push
cmp
push
aas
xchg
pushf
enter
xchg
jne
dec
pop
add
adc
sbb
xor
pop
outsl
jae
leave
xor
outsl
jp
pop
fcom
ja
test
dec
fsts
pop
in
test
stc
mov
mov
mov
dec
mov
in
sub
cwtl
lods
mov
mov
add
test
xchg
movsb
jle
sub
pop
in
sub
push
jge
push
popf
mov
vpshufd
cltd
pop
sti
mov
xchg
out
rolb
fcmovu
pop
mov
or
insl
orb
testb
imul
cmp
daa
test
addb
in
bound
cwtl
adc
loopne
cs
cmp
adc
pop
fisubrs
imulb
inc
daa
sbb
pop
rorb
sub
es
inc
push
fcmovu
and
fistpl
jns
jle
fcoml
and
push
dec
sbb
pop
loop
insb
popf
pop
and
cmp
xor
divb
mov
out
sti
lcall
adcb
in
jp
daa
lods
or
xor
cmp
pop
fstpl
out
inc
xor
shl
mov
lahf
add
jmp
mov
out
pop
lret
pop
pop
testb
xor
cmova
imul
jle
xorb
rcrl
pop
adc
clc
mov
fwait
insl
int
aaa
rcll
andb
mov
or
movsb
mov
xor
dec
add
clc
mov
adc
mov
xor
into
addr16
in
movsl
inc
in
leave
mov
xchg
add
rorl
mov
lahf
daa
arpl
adc
fsubr
ljmp
nop
cs
movsl
jecxz
and
pop
mov
mov
jae
add
rcll
sub
scas
mov
dec
mov
cmp
fists
pop
roll
and
mov
loope
mov
stc
and
scas
incl
dec
and
rcll
sbbb
dec
push
mov
addr16
ficoms
cmp
insl
adc
out
ja
shll
xchg
sbb
add
lds
dec
call
jmp
iret
shll
sti
test
aas
insl
into
jne
add
mov
mov
sub
loop
mov
and
mov
movsl
bound
sub
je
push
int3
repz
ljmp
movsb
mov
subl
popf
pop
pushf
push
jl
adc
jl
mov
mov
add
or
testl
push
lret
add
sbb
loopnew
xchg
les
adc
push
je
push
jns
call
cs
shrb
push
daa
inc
lock
lds
adc
mov
jmp
dec
rorl
sub
xchg
aaa
jl
dec
mov
xchg
sarl
lds
inc
insb
mov
testb
xchg
mov
add
lods
rcrb
jbe
jbe
push
inc
decb
or
jecxz
jns
sub
das
pextrw
cmpsb
les
mov
dec
out
aaa
in
test
push
mov
sbb
vcvttps2dq
repnz
test
mov
shll
adc
sbb
sbb
test
std
fildl
aam
test
ror
sbb
add
mov
or
loope
pop
nop
mov
mov
xor
arpl
stc
jl
data16
mov
xor
jecxz
mov
pop
fadds
sbbb
fdivs
scas
pop
jmp
pop
mov
shlb
mov
mov
int
outsb
mov
xor
jl
push
fcompl
add
and
and
rorl
shrl
inc
aad
aad
sub
addr16
mov
sbb
addb
stos
adc
addr16
mov
outsw
dec
inc
rcll
cmp
adc
add
mov
pop
bound
andl
jmp
pop
ret
push
outsl
outsb
sbb
inc
dec
lods
clc
xlat
mov
push
ljmp
mov
pop
xor
shr
add
cmp
stc
les
xor
xorl
push
movsl
shll
cs
nop
dec
adc
xchg
mov
and
daa
or
test
pop
push
jo
loop
ja
sbb
pop
mov
mov
insl
pop
clc
arpl
and
popf
lahf
je
sbb
mov
push
stos
call
aaa
in
jno
addr16
mov
xor
in
imull
rolb
add
lret
or
mov
jmp
ss
mov
mov
jo
scas
add
xchg
imul
mov
adc
fsubrs
daa
inc
lret
push
mov
call
ror
mov
mov
push
ss
in
and
jae
movsb
and
or
sub
shlb
imul
fidivrl
test
sub
std
push
addl
push
fcompl
outsb
xor
sub
xchg
popa
cmp
call
jne
mov
incb
lea
adc
add
leave
cmpsl
xor
std
add
std
cmp
jne
ljmp
and
adc
outsb
std
insb
movsb
sarl
push
out
pop
jns
pop
cmp
lret
jnp
stos
mov
roll
mov
mov
cli
fadds
in
add
lret
sub
cs
daa
insl
icebp
dec
out
push
fdivs
ss
pop
or
sti
aam
mov
pop
and
cld
test
out
call
mov
shlb
lcall
inc
xchg
and
or
lock
fsts
add
icebp
push
sti
out
push
iret
mov
in
adc
jno
mov
lret
lret
mov
loope
adc
inc
cwtl
pushf
scas
pop
or
cmp
in
cmp
sbb
xchg
adc
xchg
mov
adc
mov
ret
xor
lods
adc
adc
jl
mov
pop
bound
push
xor
jge
push
mov
cs
hlt
lea
jge
fbld
loop
push
inc
je
fdiv
insb
popa
dec
dec
cmp
or
add
lret
adc
sub
cmpsb
pop
enter
out
divl
jbe
jnp
inc
add
xchg
add
movups
es
sar
sti
cmp
adc
sub
dec
push
mov
shll
jne
fsubrl
call
addr16
mov
dec
lods
mov
fwait
dec
pop
xor
jnp
mov
and
rcrl
jbe
dec
xchg
nop
jl
fs
push
pop
fs
jo
stos
xchg
das
inc
mov
in
pop
sar
icebp
mov
mov
cld
push
loop
inc
push
sahf
jno
lock
lods
into
add
dec
push
mov
jb
mov
adc
dec
popf
faddl
lret
sti
and
in
xor
rcll
in
jecxz
lret
and
ret
mov
shlb
loop
out
leave
cld
lcall
mov
xor
cld
cmp
roll
adc
test
das
jbe
jbe
cld
or
test
adc
clc
lahf
jp
push
inc
stc
or
into
mov
cmp
and
cmpsl
jo
and
mov
dec
add
or
mov
adc
or
mov
ljmp
mov
xlat
and
ds
fs
aaa
cmc
cmp
jge
or
xchg
jo
jns
lcall
jno
in
int3
mov
pop
fisttpl
jns
mov
add
cmp
movsl
add
and
ljmp
pop
fsubrp
xchg
insb
cmc
dec
gs
lock
add
push
fnsave
aad
lds
and
rclb
ds
jns
loop
negb
add
popa
cwtl
aas
fcmove
ljmp
ja
mov
sahf
aam
into
into
sti
sbb
push
lods
addr16
sub
mov
sahf
fxch
sub
and
subb
dec
cmp
xchg
sub
div
repnz
lds
mov
pop
out
mov
push
movsl
inc
mov
inc
les
xlat
mov
mov
dec
push
lods
dec
push
mov
faddp
les
xchg
xor
out
sub
iret
nop
pushf
add
push
in
jo
pop
and
shlb
push
js
out
add
ret
jmp
push
and
or
jbe
popl
iret
and
inc
inc
xchg
subb
cs
repnz
subl
mov
scas
or
sub
mov
xor
xchg
push
or
cmp
outsb
lods
or
shll
cmp
xchg
loopne
mov
aaa
inc
mov
js
jb
cmp
mov
movsl
push
imul
mov
jmp
cmpsb
outsb
arpl
pop
mov
ss
sbb
cmp
push
inc
push
lea
xor
fistl
cli
fwait
or
jge
addr16
ds
pop
sahf
dec
mov
sbb
test
subb
adc
into
inc
adc
mull
push
jecxz
add
mov
add
push
insl
adc
inc
ds
imul
dec
dec
popfw
loopne
jg
daa
sub
adc
mov
mov
push
or
add
inc
xchg
inc
xor
push
aas
jmp
and
fs
mov
arpl
ljmp
sub
jle
mov
or
dec
xchg
and
or
int3
cmp
daa
jb
lcall
push
out
mov
adc
inc
iret
es
sbb
add
mov
mov
nop
sbb
js
mov
dec
jnp
adc
mov
stc
gs
pop
lcall
ret
int3
fwait
mov
pusha
aam
xor
and
jo
sub
inc
sbb
xlat
and
and
jmp
or
cmpsl
dec
lret
repz
pop
stos
pusha
shll
mov
or
dec
adc
scas
mov
xlat
dec
js
sub
inc
pop
cmp
outsb
pop
dec
cmp
cmp
xor
push
push
das
repz
lret
pop
sbbb
popa
ficompl
or
dec
rcr
jno
iret
sti
or
xor
push
fnsave
nop
mov
inc
mov
xchg
fwait
jb
shr
pop
int
pop
out
loop
xchg
and
or
adc
imul
test
pop
jle
adc
or
mov
jns
or
sti
push
mov
ret
pop
mov
fwait
in
push
fiadds
jno
dec
push
mov
push
mov
icebp
cmp
pushf
call
mov
sub
inc
dec
call
adc
sbb
mov
mov
dec
ss
lds
shr
loop
lret
xlat
js
ss
mov
loopne
mov
or
push
je
sub
mov
js
adc
mov
pushf
arpl
jp
jp
repz
in
loopne
test
adc
jp
cmc
pop
or
data16
popf
rcrb
pop
push
adc
jg
pop
push
pop
icebp
jge
sub
push
push
push
movsl
das
nop
je
divl
and
push
adc
jo
leave
sbb
hlt
leave
push
leave
or
add
jno
cmp
insb
mov
push
push
adc
sub
or
and
scas
cli
mov
loop
bound
fsubrs
lock
push
and
imul
jns
inc
mov
into
sub
jae,pt
repz
push
aaa
bound
jbe
add
rcll
ds
jge
xor
cmp
movl
int3
mulb
jl,pn
jb
sbb
push
pop
sbb
sti
sub
mov
mov
xor
lret
push
imul
mov
addr16
mov
shll
call
xchg
pop
mov
icebp
movsb
jecxz
jp
xchg
roll
je
inc
pop
xchg
xchg
dec
xchg
adc
mov
fcom
mov
inc
lds
call
xor
fcoms
fs
mov
movl
jmp
cmp
push
mov
jmp
pop
dec
cmp
lods
stc
aaa
jmp
das
cmp
mov
pop
leave
test
dec
or
sbbl
out
in
push
jmp
lahf
test
xor
or
lods
xor
test
cmpsl
out
adc
inc
or
mov
dec
add
outsl
stc
dec
xchg
xor
pop
shlb
pop
clc
das
ljmp
jmp
inc
push
push
popf
mov
outsb
mov
jae
fisttpll
lcall
cmpsb
add
orl
push
inc
repz
dec
dec
out
add
jns
pushf
lock
inc
test
or
repz
cs
push
xchg
in
popf
mov
mov
mov
addr16
sti
ret
cmp
inc
xchg
push
or
xor
mov
cmp
ret
sbb
mov
push
aaa
mov
xchg
add
sti
ficompl
push
jmp
and
xchg
xlat
and
adc
and
mov
xchg
pop
lret
cmp
iret
jne
fstpt
and
popf
cs
sbb
push
call
cmp
insl
inc
std
inc
xchg
jbe
cmp
je
push
fld
in
sub
xchg
push
jae
lods
inc
mov
pop
je
pop
mov
idivb
sbb
mov
cs
out
and
xor
shl
xor
loopne
sahf
mov
fimull
add
lds
push
ljmp
sbb
adc
mov
lahf
mov
arpl
in
sbbl
pushf
int3
shlb
ss
sarl
out
aam
fdivl
ret
setbe
test
xchg
push
clc
shll
fcmovu
cmp
cs
fisubrs
test
sahf
push
int
or
aad
ja
je
push
scas
imul
push
movswl
or
pushf
jno
mov
rclb
dec
and
add
shrb
das
xor
adc
xchg
popa
sub
lods
or
adc
xlat
fs
aas
in
sub
popf
or
imul
xlat
mov
dec
cmp
mov
scas
push
bound
in
cli
jns
sbb
jecxz
push
xor
jne
jno
js
cmpsb
in
orb
outsb
mov
pop
aas
jg
lea
sub
data16
and
sbb
mov
cltd
daa
aaa
dec
dec
or
adcb
pop
loopne
inc
sub
mov
stos
mov
pop
push
jge
mov
imul
fwait
dec
push
mov
sub
in
and
cmp
int
and
scas
xchg
xor
addr16
shrl
shl
mov
xchg
aam
jp
fmulp
mov
jae
lea
fwait
pop
cmpsl
mov
inc
or
cmpsl
pop
test
loop
std
xchg
insl
sarl
xchg
jle
fistpll
es
inc
scas
jae
inc
fwait
cwtl
mov
pushf
add
push
mul
ret
cld
shll
push
inc
pop
loop
inc
pushf
xchg
adc
lods
mov
mov
sbb
cmp
cltd
mov
xor
pop
adc
hlt
mulb
fisubs
scas
sub
test
sub
push
jns
ja
inc
push
mov
mov
add
fs
jo
int3
aaa
add
rcrl
xchg
out
ja
adc
repz
inc
inc
mov
aad
xchg
in
push
add
jns
inc
movsb
sarl
addr16
cmp
imul
nop
push
xchg
and
movsb
pmullw
xor
int
mov
stos
lock
fcmovnb
add
xchg
aas
mov
gs
xlat
push
xchg
jno
add
insl
mov
mov
shll
adc
push
mov
mov
cmp
push
sbb
movsb
cmp
scas
into
and
adc
bound
add
xchg
push
xor
push
pop
sub
pop
mov
sti
aam
es
xchg
stos
gs
or
sbb
xlat
jp
ss
fs
subb
stc
push
mov
jnp
push
pop
in
pop
sub
cmp
stos
jno
mov
lods
and
jbe
fs
or
cmp
out
xchg
push
xchg
lods
dec
arpl
les
mov
sbb
test
add
push
dec
mov
pop
dec
ljmp
sub
test
add
adc
mov
mov
jnp
es
fmul
and
xchg
or
inc
out
das
and
inc
daa
aad
mov
and
mov
pop
push
mov
aas
sub
cmp
icebp
xor
lds
mov
repnz
jge
xchg
pushf
jnp
mov
stos
push
js
ret
sbb
jns
test
lods
lret
jns
popf
out
xor
ljmp
dec
ret
mov
divl
ljmp
pop
mov
outsb
cmp
cmpsl
adc
rolb
mov
divb
aas
decl
adc
jmp
into
push
add
or
xchg
xchg
mov
push
jge
lock
addr16
push
sub
dec
pop
sub
addr16
pop
jg
mov
hlt
pop
jae
inc
xchg
adcb
mov
adc
pusha
clc
xchg
enter
push
lahf
cli
pop
stc
cli
mov
repnz
adc
inc
sbb
mov
mov
imul
lret
and
mov
divb
sub
into
in
jmp
add
jecxz
cmpsl
and
subb
jg
loopne
push
loope
and
xchg
movsl
cmp
sbb
sub
inc
mov
inc
adc
jns
push
ret
mov
mov
sub
insb
add
jecxz
sahf
bnd
pop
aam
ret
xchg
lret
sbb
movsb
popf
mov
or
and
push
xchg
data16
out
mov
push
rolb
fwait
pop
test
lds
cwtl
pop
or
leave
sbb
mov
jmp
stos
push
push
imul
xor
pop
gs
xchg
imul
push
out
jne
dec
mov
sub
cmp
mov
adc
jmp
pop
ja
inc
inc
lods
or
jne
int
mov
in
scas
jmp
into
test
stc
fdivr
mov
xchg
out
mov
sbb
testl
jg
jnp
push
pop
pushf
jg
cmp
iret
mov
mov
outsl
loop
add
or
xor
ljmp
jo
add
mov
inc
enter
push
sarb
test
jmp
xor
scas
fsts
sub
scas
sahf
test
imul
push
inc
inc
test
pop
cmp
sub
push
xadd
adc
int3
mov
cmp
testb
jmp
dec
aas
adc
lods
mov
cltd
sub
cmpsl
pop
loopne
test
jmp
fsubrs
sti
lods
jp
fiaddl
bound
mov
sub
filds
test
xor
lds
or
jae
mov
in
mov
pop
mov
or
mov
popl
mov
mov
loopne
cmp
loopne
jl
insl
push
sarb
pop
hlt
ret
sbb
cs
pop
shr
mov
pop
in
inc
lahf
adc
outsl
push
stos
lods
xchg
mov
nop
mov
fsubp
cs
mov
ds
test
sbb
insl
push
xor
mov
int
and
pop
mov
shrb
mov
mov
mov
xlat
push
or
inc
xchg
xor
addr16
jle
push
loop
inc
out
or
shrb
add
xchg
fxch
mov
push
repnz
dec
jb
dec
out
mov
aaa
mov
push
pop
mov
pop
and
mov
jmp
out
dec
add
xor
xchg
bswap
nop
jg
mov
xor
lcall
in
mov
repz
mov
scas
cs
cmpsb
push
xor
push
and
ret
sbb
out
shll
out
aam
cmp
xlat
movsb
cmpl
lcall
imul
xchg
jno
pop
pusha
jge
mov
cmc
in
dec
mov
cmp
push
dec
addr16
lods
movsl
mov
pop
mov
cmp
scas
jbe
sarl
andb
inc
jg
ss
jecxz
jl
cltd
imul
lock
cmp
ss
pop
sub
div
out
sub
inc
push
popa
pushf
dec
cmp
stos
mov
pop
xchg
lods
inc
lret
mulb
xor
iret
gs
xchg
jge
inc
jmp
mov
and
mov
imul
stos
pushf
jecxz
adc
or
adc
mov
gs
push
jo
cs
pop
sahf
std
aam
pop
push
mov
aad
sbb
jecxz
scas
mov
std
adc
fwait
push
add
mov
pop
data16
adcb
push
pop
ja
fmulp
aam
mov
movsb
mov
insb
out
xchg
js
sbb
and
or
mov
insb
and
bound
mov
orl
sahf
pop
xchg
mov
sti
mov
jecxz
xchg
add
inc
je
or
mov
xchg
lock
insl
arpl
ds
lahf
addr16
xchg
into
xlat
or
fcompl
dec
adc
lcall
test
fmul
mov
jp
fdivs
mov
out
mov
or
mov
push
cld
rorl
call
cmc
pcmpgtd
decb
jmp
gs
hlt
cmpsb
orl
in
decb
and
push
imul
inc
inc
lods
subb
jge
in
orb
testb
bound
dec
lret
jle
inc
mov
push
scas
add
inc
in
and
push
jne
fiaddl
lea
sahf
pop
push
adc
adc
mov
bnd
stos
enter
or
rorl
push
push
inc
lcall
mov
add
scas
mov
push
out
xor
sub
test
mov
adc
push
jg
ljmp
cmp
data16
in
insl
je
or
xchg
pop
fisubrl
dec
orl
and
loop
push
insb
aaa
and
adc
ss
dec
daa
add
inc
fldenv
cmp
je
enter
outsl
push
js
jg
test
repz
or
pop
sub
pop
lret
dec
dec
aam
cmp
hlt
ljmp
sarl
stc
jns
cmpsl
outsb
xor
cmp
jmp
pop
adc
adc
sub
les
idiv
mov
jg
pcmpgtd
and
sub
add
adc
jae
cwtl
pop
scas
cmc
int3
std
sahf
fisubs
and
lahf
fmul
push
cwtl
nop
outsb
call
push
or
mov
scas
outsl
mov
and
mov
dec
sbb
into
cld
cmp
mov
orb
nop
fmuls
and
out
push
cmp
das
insb
sahf
pop
pusha
daa
sub
rcl
in
arpl
jmp
add
js
test
mov
jmp
and
stos
data16
cmp
adcl
inc
and
incb
mov
mov
popf
mov
xchg
testb
test
sbb
es
out
iret
xchg
jg
inc
std
or
dec
cmp
or
and
cmp
lret
cmpsl
or
jb
pop
push
mov
ja
rolb
stos
pusha
or
out
jnp
jge
xchg
das
adc
push
ror
aad
mov
rol
std
xchg
jmp
pop
push
int3
mov
mov
int3
xchg
pop
pop
test
mov
jl
aad
lahf
cmp
and
stos
jnp
aad
test
sub
mov
bnd
jae
push
sub
adc
add
xlat
cmpsb
icebp
push
add
jecxz
stos
lea
mov
mov
outsb
inc
and
sub
and
or
push
out
ret
mov
mov
lds
repz
sbb
adc
mov
mov
shll
mov
leave
push
mov
rcrb
dec
adc
test
lret
leave
adc
mov
addl
out
xor
jns
or
lods
iret
dec
jmp
imul
cmp
scas
and
ret
inc
lcall
cmp
sub
pop
xchg
lea
loope
dec
nop
jae
dec
jle
movsl
mov
fwait
and
xorl
popf
lea
nop
pop
pop
lea
dec
sub
movsl
stos
lock
data16
lds
cmp
outsl
mov
iret
jg
les
push
out
sar
testl
loope
test
shrl
pop
push
pop
pop
lahf
ds
or
xchg
inc
mov
inc
cld
jne
mov
movsb
cld
scas
mov
mov
sti
push
lcall
jbe
adc
inc
stos
pop
mov
jge
jno
adc
push
mov
mov
ljmp
mov
adc
adc
ds
addb
fcmovnu
xchg
adcl
or
loope
out
mov
cmp
and
mov
loop
out
adc
jno
jle
arpl
repnz
sbb
cmp
pop
sbb
lods
rolb
das
or
and
xchg
mov
pop
mov
int3
push
daa
fsubr
hlt
xchg
adc
cwtl
jmp
xchg
add
pop
mov
pop
aad
push
into
out
cmp
mov
jmp
cmp
jmp
cmc
outsl
inc
hlt
mov
or
cmp
sub
mov
xor
jg
hlt
pop
xchg
insl
ss
mov
xor
push
test
into
cli
iret
enter
imul
mov
sbb
dec
mov
sub
fistl
jmp
repz
imul
cmp
fidivs
cmp
inc
shrb
push
lods
pop
fstl
cmp
push
loope
xor
mov
in
nop
mov
pusha
aad
mulb
jno
and
sub
mov
pop
cmc
sbb
mov
add
inc
shll
push
and
lcall
push
lods
jmp
and
cmp
jp
int3
adc
in
stc
sbb
bound
adc
stos
dec
inc
outsl
pop
xor
inc
stc
mov
lahf
push
xchg
neg
add
subl
mulb
test
mov
iret
sbb
addl
jle
imull
mov
push
data16
jg
and
fsubs
gs
imull
test
fiaddl
arpl
push
xchg
jge
punpcklwd
pop
jle
fxch
mov
addr16
dec
xchg
movsb
jnp
adc
scas
mov
and
add
fimuls
testb
pop
repz
fimull
jg
xor
pusha
sbb
loop
dec
ror
cmp
push
jecxz
popa
sbb
fbld
and
add
fwait
imul
ror
je
jge
es
pop
add
call
dec
insl
cmpsb
jb
les
imul
in
nop
jge
adc
fcmove
pusha
adc
mov
sbb
xor
and
mov
adc
inc
dec
push
mov
call
pop
dec
xchg
xchg
and
pusha
fidivl
or
jp
mov
lret
sbb
push
ja
jo
cvttps2pi
push
adc
cld
sarl
mov
add
or
shrl
sub
dec
rclb
xchg
push
aam
push
movsb
scas
mov
outsb
aam
aaa
cmp
adc
mov
sub
hlt
mov
test
push
jle
xorl
add
neg
xor
adc
mov
arpl
cmpsb
jne
aad
cmc
notb
in
or
aad
jns
pusha
xor
faddl
out
adc
movsb
stos
ret
gs
insb
enter
fsubrl
cmp
in
ss
clc
mov
jmp
lods
lcall
setbe
and
out
sub
push
aas
jne
gs
scas
mov
imul
mov
and
sub
lea
pop
sbb
mov
movsl
xchg
jb
adc
or
test
jnp
inc
or
fdiv
addr16
jnp
mov
push
movsl
mov
sbb
xchg
ss
in
ljmp
adc
adcl
pop
mov
js
adc
ss
push
pop
out
xlat
into
fisubrl
rorl
movsb
fistpll
xor
push
cmc
cmp
fcomp
adc
mov
adc
jae
mov
dec
dec
jecxz
push
cli
mov
out
adc
mov
mov
add
xor
cmc
pop
cmc
jmp
cmp
loopne
pop
aam
xchg
sub
out
jo
inc
pop
inc
loopne
inc
mov
fcomps
mov
push
jge
clc
jl
je
pop
push
mov
lahf
shrl
push
and
xchg
movsl
inc
push
ljmp
ficomps
popf
inc
out
xor
ret
outsb
data16
in
pop
xor
pop
imul
sbb
data16
stc
sub
loope
sarl
dec
sbb
jae
jns
dec
dec
sbb
sahf
or
xor
or
pop
xor
sub
cbtw
loope
out
sbb
sbb
jae
pop
inc
pop
xchg
mov
adc
imul
mov
sbb
dec
add
sub
push
lods
mov
jae
in
mov
sub
add
xchg
and
daa
hlt
jl
xchg
and
mov
sbb
mov
sbb
stos
clc
mov
sbb
cmp
add
dec
ret
mov
lods
insl
pop
and
mov
jae
xchg
loop
movb
push
mov
scas
inc
movsb
inc
jae
lds
xor
into
push
mov
out
lods
or
outsb
scas
cwtl
xchg
pop
bound
fisttps
sub
out
xor
aad
cmp
cmp
sub
mov
mov
dec
add
xchg
sti
jecxz
insb
stos
ficomps
sbb
sbb
sbb
push
dec
outsb
and
sbbl
sti
xor
pushf
inc
cli
jge
pop
subb
push
dec
jno
xchg
jle
in
xchg
jns
pop
push
sbb
repz
mov
aam
push
bound
std
push
mov
lea
cli
add
lods
daa
cli
jge
cmp
fs
test
xorb
push
shll
jmp
mov
or
mov
and
inc
adc
hlt
jecxz
shufps
jns
push
fs
add
ljmp
or
jle
adc
aam
jle
add
repnz
add
adc
adc
hlt
addr16
pop
sti
fwait
cltd
mov
or
push
movsb
pop
mov
mov
sub
mov
hlt
out
add
test
loope
and
add
sub
xor
and
cmp
fwait
xchg
and
push
enter
or
push
mov
scas
mov
decl
out
call
loopne
clc
and
push
loopne
repnz
lret
ret
jo
push
pop
mov
pop
mov
fmull
xchg
mov
jg
cltd
mov
inc
int
clc
push
push
test
push
sbb
mov
and
enter
mov
lret
lods
cmc
add
outsl
pushf
icebp
xor
shl
mov
sti
xor
or
push
shrb
and
std
outsb
out
cmp
int
mov
mov
movsl
adc
icebp
jno
jl
xchg
lret
nop
test
push
jne
dec
cmp
jmp
testl
jl
mov
mov
sysenter
shrl
lods
pop
mov
in
divb
mov
rcr
mov
test
lcall
out
mov
mov
scas
mov
int3
addr16
sub
fbstp
stc
out
shr
arpl
or
push
stos
push
pushw
mov
push
sub
cld
or
ja
stos
sub
push
and
inc
fs
cmp
sti
popa
cld
ficompl
cmp
bound
ss
test
stos
dec
icebp
cmp
cld
mov
lea
mov
cltd
ret
add
out
jl
cmpsb
dec
jns
scas
xchg
push
icebp
inc
push
push
sahf
stos
cmp
ret
mov
pop
arpl
pop
mov
dec
mov
cmpsb
je
test
sbb
mov
jae
fisttps
out
push
ds
mov
loop
ja
mov
lods
sub
lods
push
cmpsb
imul
ss
pop
xchg
inc
sbb
popa
pop
mov
cli
cmp
dec
adc
fsubrp
movsb
adc
mov
bound
add
mov
sub
dec
mov
pop
out
pop
mov
arpl
cli
sub
cli
adc
pop
aaa
lret
mov
pop
ficoms
jecxz
adc
add
stos
insl
fidivrl
pop
push
cmp
ljmp
add
pop
sbb
cmp
repnz
fdivp
xor
xorb
mov
xchg
test
shll
fs
inc
dec
gs
cwtl
out
jmp
loopne
cmp
mov
sbb
test
mov
jnp
mov
cld
cmpsb
cwtl
mov
inc
cli
xchg
lds
cmp
cmp
mov
jnp
jmp
push
addr16
cwtl
cmp
call
sub
pop
sbb
add
repnz
push
loope
in
loope
mov
or
pop
int3
cwtl
push
ja
shlb
or
pop
decb
adc
jno
addr16
idivb
data16
sub
in
fwait
adc
cmp
jp
mov
pop
dec
jnp
mov
push
fwait
mov
mov
inc
shlb
in
popf
jecxz
push
stos
xlat
jae
mov
dec
sbb
std
xor
insb
lods
xchg
lret
cmp
scas
pushf
pop
xorl
inc
xchg
outsb
add
push
clc
push
mov
dec
pushf
xchg
sbb
adc
jl
popa
xor
xchg
mov
lock
lds
outsl
daa
sbb
mov
pushf
push
pop
stc
mov
shlb
rclb
jo
xchg
jmp
mov
and
cwtl
in
lcall
mov
movsl
nop
push
and
lahf
adc
inc
add
pusha
or
xchg
add
jp,pn
jmp
dec
cmpsl
mov
xchg
pop
adc
lret
add
fisubrs
pop
xor
push
in
sbb
into
push
jge
or
leave
mov
cmc
xchg
imul
push
jb
pop
test
sbb
push
fisubl
mov
inc
ljmp
pop
nop
mov
push
mov
lock
add
test
leave
sub
mov
pop
outsl
dec
xchg
mov
mov
adc
jp
sbb
mov
cmpsb
add
lds
cmc
es
aaa
push
lds
cmp
add
and
sbb
fildl
jl
cmpsl
lahf
cmp
notl
xchg
jg
dec
mov
cmp
lods
push
dec
das
or
xor
out
vdivps
stos
sbb
pop
sahf
stos
test
scas
and
aam
fstp
clc
hlt
or
movsl
js
clc
jecxz
cmpsb
mov
lods
cwtl
ja
adc
lret
std
andl
cld
test
xchg
pop
sti
je
testb
rcl
push
adc
popf
mov
inc
push
adc
or
pop
and
std
mov
aas
pop
movsb
scas
into
and
mov
repz
shr
xchg
outsb
mov
mov
push
inc
inc
sub
jb
xor
aam
sti
lcall
sahf
lea
jge
jo
mov
insl
add
pop
sub
nop
repz
xchg
in
xchg
pusha
jp
xchg
dec
mov
push
lock
push
push
or
test
pop
std
rorl
inc
push
cmc
das
mov
mov
xchg
aad
push
push
push
lcall
scas
shll
test
cltd
xchg
sbb
pop
push
mov
push
cmp
jle
lahf
fcmovbe
dec
loope
aaa
inc
loope
mov
mov
scas
cmpsb
call
cmc
mov
or
mov
repz
pop
sarb
pop
adc
cld
shlb
mov
insl
cmp
xchg
or
push
mov
xchg
jg
cmpsb
aas
jge
push
aaa
xorb
pop
fmul
in
xchg
jne
mov
mov
pop
push
unpckhps
stos
xchg
test
lcall
ljmp
repz
cltd
and
jbe
das
jb
mov
gs
dec
mov
lock
jno
xchg
stos
out
ret
ret
lret
lock
imul
fnstcw
sub
andb
aam
or
into
push
inc
xor
pop
dec
cmp
ret
shl
fscale
sbb
xchg
imul
adc
hlt
fcmovu
adc
leave
shl
push
or
jge
pusha
js
mov
jmp
lea
ror
sbb
ret
xor
popf
xor
rorb
psllq
sti
addl
sub
pusha
add
inc
or
scas
push
enter
push
add
mov
orl
cmp
jnp
fisttpl
arpl
mov
cmp
dec
add
int
test
mov
push
incb
jge
fldl
cwtl
mov
jmp
ss
xorl
cld
cld
out
loop
aas
sbb
test
or
dec
xchg
imul
push
jno
mov
ror
push
lock
lahf
inc
mov
xchg
xor
jns
sbb
ja
shlb
ss
mov
mov
mov
and
nop
sub
int
push
das
mov
aas
push
arpl
sbb
loope
and
jnp
mov
jle
mov
out
shll
dec
jno
test
inc
lret
add
ficompl
jns
xor
int
inc
cmp
scas
int
push
test
cmpsl
sub
push
into
sahf
in
negb
scas
hlt
jg
ret
gs
xor
and
xchg
ficomps
pop
sub
cmp
popa
jecxz
arpl
inc
sar
ret
ss
xchg
xlat
and
lds
sti
sub
pop
add
test
adc
ret
movsb
bound
cld
inc
xchg
xchg
pushf
ret
lcall
push
cmpsb
stos
adc
adc
inc
movsl
ja
adc
repnz
je
addr16
pop
adc
in
xchg
mov
inc
cmp
cmpsl
dec
sub
sahf
jno
enter
dec
cli
mov
jge
imul
mov
lods
shl
adc
push
outsl
sub
je
popf
jmp
insl
test
dec
push
pop
xchg
ret
mov
dec
inc
inc
pop
nop
cmp
or
in
mov
scas
and
jnp
dec
les
lods
pop
xlat
fmul
imul
data16
fwait
lahf
pxor
add
adc
iret
add
mov
jge
sub
and
or
rorb
xor
fldpi
jns
ss
and
imul
out
add
jge
push
mov
mov
inc
add
int3
add
incl
icebp
sbb
fwait
mov
cmp
cli
stc
jp
add
in
mov
imul
stos
call
mov
test
jle
jg
sahf
test
jecxz
cmpsb
shlb
cmp
pop
sbb
add
enter
stos
cmpsl
jno
arpl
mov
popf
imul
mov
sbb
aas
pop
dec
cmp
inc
pop
mov
push
xchg
inc
mov
dec
push
repnz
jg
pop
ss
in
jecxz
jmp
ljmp
and
adc
jp
mov
pusha
jl
sub
mov
mov
daa
ljmp
mov
mov
inc
test
imul
cmc
push
add
fldz
fnstcw
xchg
or
jnp
cmp
push
testb
inc
dec
outsb
lcall
adc
adcl
jno
stos
icebp
sahf
pop
adc
mov
push
sbb
xor
mov
dec
cltd
push
shlb
lahf
call
rcll
cmp
or
stos
mov
adc
cmpsl
xchg
in
sbb
lds
dec
sahf
fistpl
or
aam
cs
bnd
pop
in
mov
fmull
rcll
popf
pop
daa
int
icebp
push
fsubs
push
mov
adc
aaa
iret
sub
adcl
mov
cs
adc
fs
sub
dec
pop
jns
movsl
mov
xor
sbb
sbb
inc
push
jns
icebp
cmp
xor
mov
mov
adc
out
xchg
pushf
cmp
dec
pop
or
mov
jecxz
mov
pop
sub
sbb
scas
xchg
xchg
push
repz
dec
dec
jno
pusha
fnstcw
or
lds
fldt
and
das
xor
ljmp
pop
hlt
xchg
pop
sbb
enter
push
mull
scas
inc
xchg
iret
adc
sbb
xchg
cmp
push
or
popa
ds
sub
test
mov
mov
rclb
xchg
aad
daa
add
jmp
call
xor
sub
fildll
and
ret
pushf
pop
mov
fwait
sbb
addr16
stc
dec
ds
xor
lods
aad
and
fnstsw
fisubs
jne
jge
pop
sbb
or
pop
jmp
testb
rcll
add
daa
sar
divl
insb
scas
out
pop
mov
pushf
jle
aam
nop
loop
xorb
jnp
icebp
aas
stos
adc
mov
push
sub
inc
lret
adc
in
cmp
imull
out
out
push
jno
xor
stc
adc
add
ja
daa
mull
dec
lahf
mov
call
cmp
push
xor
cmpsb
stc
xchg
les
loope
divb
adc
sub
cmp
xlat
stc
subl
movsb
into
jno
pop
les
addr16
and
add
mov
mov
shll
mov
aaa
nop
aam
cmp
or
nop
add
mov
inc
pop
pushf
icebp
repnz
call
scas
stos
push
les
lret
lock
loop
jle
cmp
daa
mov
lret
and
psubsw
cmpsl
mov
cli
mull
pop
add
cmpsl
mov
fcoml
lahf
ret
shrb
shlb
mov
lods
and
inc
push
rol
flds
jb
sub
xor
push
mov
jg
jo
lcall
dec
lea
imulb
jae
std
inc
jl
insb
mov
cltd
xor
cmpsl
mov
sub
cmp
mov
add
clc
or
push
pusha
push
lret
adc
fsts
cmp
loopne
mov
jl
adcb
lret
lret
movsb
imul
and
sub
out
add
stc
mulb
rol
fsubs
add
sub
cld
sub
jo
cmp
std
cmp
push
popf
or
inc
cwtl
inc
xchg
add
lods
mov
mov
enter
inc
add
out
mov
mov
gs
imul
mov
loop
jle
jp
jne
ret
pop
daa
jno
mov
cltd
cmp
cmpl
push
adc
nop
lods
ficoml
testl
add
mov
pop
mov
mov
and
mov
push
cmp
mov
inc
sbb
push
or
add
and
push
adc
stos
pusha
push
mov
mov
addb
dec
pop
adc
popf
push
aas
sbb
hlt
jmp
jle
loope
subb
add
in
stos
ror
mov
insl
ss
in
ljmp
inc
out
inc
add
scas
mov
push
push
dec
clc
iret
loop
mov
jns
push
cmp
mov
mov
lcall
loope
mov
and
and
pushl
std
loopne
nop
cmpsl
clc
stos
dec
int
imul
xchg
imul
loop
mov
or
pop
push
jo
add
inc
shll
sbb
mov
dec
notl
mov
push
inc
cmpsb
sbb
or
sbb
xchg
fs
inc
dec
jne
sub
pop
mov
pop
test
adc
iret
adc
jmp
nop
ljmp
ret
fbld
add
test
mov
inc
mov
mov
xchg
cli
mov
repz
xor
in
jne
imul
inc
ror
in
and
jge
out
add
out
xchg
xor
push
mov
mov
cwtl
inc
pop
mov
test
mov
xchg
sahf
scas
fadds
xchg
dec
aad
inc
jae
into
iret
nop
or
fwait
xor
pushf
mov
jg
and
sub
pop
fiadds
xchg
pop
ljmp
xor
sbb
imul
popf
add
pop
imul
in
dec
xchg
mov
pushf
or
mov
divb
cmpsl
decl
inc
dec
fstpl
aam
mov
sbb
pop
ret
and
idivb
fcomp
add
rol
push
xchg
or
xchg
shll
cld
int3
imull
jne
inc
lock
loopne
cmp
xor
aas
xchg
xchg
jns
aam
mov
mov
jae
inc
adc
jge
out
ljmp
inc
mov
inc
js
and
sbbb
push
aad
xorb
push
mov
lret
cli
pop
test
jne
xchg
ror
push
std
or
insb
xchg
adc
arpl
xor
adc
frstor
push
jp
insl
push
and
cmp
xlat
jmp
xchg
or
xchg
push
cmc
fmull
shrl
loop
cwtl
pop
in
pusha
mov
iret
cli
ljmp
xor
xor
shll
popf
imul
xchg
adc
leave
lahf
mov
pop
cmp
in
add
push
sub
xor
in
sarl
push
mov
inc
cld
adc
push
inc
jle
push
push
inc
xchg
ds
inc
jae
xchg
dec
mov
add
and
push
cmpsb
adc
addr16
sub
mov
inc
mov
sbb
sub
xor
push
jne
lock
mov
cmc
cmp
test
mov
nop
std
stos
jmp
inc
stc
lea
fdivl
xchg
ss
in
xor
sub
ss
aas
bound
mov
into
mov
mov
jmp
cmp
lods
jb
pop
or
in
adc
pop
jne
in
pusha
mov
outsl
xor
add
and
cld
ss
arpl
outsb
jp
aam
mov
imul
outsb
decl
imulb
jae
inc
push
or
mov
pop
lcall
xor
add
xlat
xor
sbb
jae
and
hlt
bound
pop
push
aam
outsb
sbb
pop
mov
and
loop
cmp
scas
mov
push
or
cld
pop
in
adc
xchg
dec
push
adc
aam
fsts
add
incb
mov
mov
popf
out
adc
push
out
dec
push
addb
ljmp
pop
popa
outsb
sbb
les
sub
cmp
push
xchg
ljmp
aad
call
adc
cwtl
daa
outsl
pushf
ds
hlt
pop
and
fnstsw
mov
gs
sbb
cmc
int3
pop
or
mov
sub
jmp
pop
leave
or
and
loop
fdivp
pop
aam
lahf
andl
mov
das
lahf
clc
mov
repnz
leave
lea
ret
xchg
xchg
push
pop
test
out
push
cmp
enter
push
mov
inc
jns
pop
cmp
stos
sub
pop
pop
out
cmp
fisubrl
mov
jle
push
outsb
mov
fsts
shrl
stos
pop
sti
inc
pop
push
in
dec
jns
pop
ja
sub
sbb
pop
test
shlb
cmp
std
jb
or
fstp
mov
pop
popa
jnp
push
inc
outsb
adc
dec
jle
cmp
sahf
cwtl
hlt
imul
icebp
mov
xor
enter
addl
shrl
pop
scas
cmp
or
test
popf
xchg
cmp
cmp
insb
inc
push
in
xor
mov
mov
adc
xor
mov
mov
mov
adc
pop
jb
jl
les
mov
mov
in
scas
add
pop
pop
xor
push
movsb
push
fwait
xor
pop
fists
jge
out
scas
out
lcall
fbld
or
add
dec
xor
rolb
mov
or
add
leave
scas
jle
scas
pop
ss
push
dec
popa
jae
lock
ja
test
insl
lods
stos
fists
test
ss
iret
jmp
iret
int
repz
add
fs
xchg
mov
and
mov
das
pop
mov
jb
stos
insl
bound
mov
push
ret
mov
or
lods
add
addl
xchg
aam
mov
sub
mov
jbe
bound
jecxz
cmp
xorb
ret
xor
dec
fldcw
and
into
mov
in
and
jmp
jbe
mov
pop
repz
jp
icebp
test
inc
out
mov
xor
shll
lret
lods
adc
data16
add
sub
leave
pop
lcall
xchg
or
cs
mov
loope
loope
jbe
push
lret
ss
push
gs
xor
fists
pop
push
push
mov
stos
dec
mov
leave
jmp
sbb
test
push
and
fwait
push
mov
pop
loop
mov
in
inc
sbb
push
scas
push
scas
cmp
je
jge
in
adc
xchg
stos
or
das
add
out
scas
xor
fimull
jo
and
add
rcrb
mov
subb
inc
push
cmp
xchg
loopne
stc
out
repnz
cld
cwtl
adc
jae
cltd
sbb
movsb
shl
push
and
dec
and
or
or
xchg
mov
xchg
imul
fadds
arpl
movsb
jno
int3
push
sbb
ds
and
shrl
xchg
jae
mov
fsubrs
int3
inc
cmp
inc
repz
popa
sub
in
arpl
aaa
add
movsl
loope
xor
int
sahf
dec
adc
imul
xor
aaa
arpl
outsl
in
cmp
sbb
ja
mov
outsb
adc
lea
and
mov
insb
xor
js
adc
stos
loop
loope
adc
jle
xchg
dec
xchg
outsb
rcrl
aas
mov
stos
dec
fidivrl
das
and
es
cmp
inc
mov
add
dec
lds
sbb
jmp
fmull
mov
inc
test
xor
mov
addr16
cmp
sbb
xor
cmp
out
sub
das
xchg
int3
les
fstpl
or
jecxz
in
call
jmp
push
mov
sub
xor
pushf
jp
aaa
cmp
jne
scas
out
decl
rorb
jae
fisttpl
mov
imulb
inc
xchg
imul
pop
lret
cmp
mov
dec
xor
pop
jg
pusha
adc
idivl
dec
sub
mov
aaa
and
mov
popa
or
mov
outsl
out
push
or
cmpsl
idivb
les
orl
mov
mov
pop
dec
outsb
push
jmp
inc
jecxz
std
pop
add
xchg
es
fldenv
out
movsb
jg
mov
bound
mov
adc
into
cmpl
push
sar
xchg
adc
movsb
cvtps2pi
jnp
in
mov
scas
loop
insb
ljmp
popa
fisttpll
iret
sti
push
xor
jno
push
icebp
stos
push
in
ret
mov
mov
rol
pop
inc
ljmp
hlt
and
jecxz
mov
pushf
lods
pop
or
sbb
shll
or
sbb
dec
xor
lahf
and
sbb
ret
out
loopne
push
lock
or
test
stc
mul
xchg
mov
test
push
fmuls
jl
shll
jns
in
or
push
xchg
outsl
aam
jmp
inc
or
fisubrl
push
inc
inc
int
jmp
scas
mov
hlt
aam
lds
sbb
and
pushf
loopne
dec
stos
sub
daa
into
scas
pop
filds
rol
lahf
pop
cwtl
and
push
dec
je
movsb
pop
shll
sub
mov
jp
cmp
andl
xor
push
mov
mov
std
paddusb
outsb
aam
sahf
nop
bound
scas
mov
cld
shlb
test
repz
lahf
je
out
add
jb
xchg
fsubs
mov
aam
mov
test
daa
popf
fisubrs
sbb
lahf
sar
insl
adc
and
aas
sub
pmaddwd
cmc
pushf
outsb
xchg
mov
jmp
jl
push
push
mov
pop
xor
leave
test
inc
mov
push
lea
stos
xor
and
dec
ljmp
jl
shlb
xlat
sub
cli
stos
in
jnp
imulb
stos
mov
sbb
add
dec
jecxz
xor
in
push
addr16
ljmp
mov
mov
outsb
mov
mov
sbb
aam
and
fwait
sbbl
and
mov
test
out
pop
sti
dec
idivl
mov
push
cltd
mov
fisubrs
add
push
dec
lret
rclb
or
mov
mov
inc
mov
sbb
into
mov
xor
stc
popl
int3
pop
je
inc
mov
and
cli
dec
sub
mov
mov
and
mov
or
mov
stos
sbb
push
fistps
sarb
aaa
jae
pop
cli
xchg
dec
rep
pop
test
push
cmp
in
push
pop
iret
les
sbb
mov
addr16
adc
mov
inc
jns
pop
fists
dec
out
inc
push
jb
cmp
in
dec
cltd
hlt
cmpb
aad
push
loope
and
cmp
jns
nop
or
inc
ds
out
rorl
ror
das
mov
fbstp
lahf
jecxz
shl
pushf
inc
dec
sub
mov
pop
adc
sbbl
cmp
mov
pusha
daa
push
pusha
push
jae
lcall
jl
push
movsb
je
andl
addl
jnp
jmp
jp
cld
mov
mov
ss
inc
cli
mov
test
mull
sti
inc
pop
push
popa
push
shll
icebp
lret
xor
dec
pop
sti
std
rcrl
mov
xor
vsqrtsd
xor
cli
call
xor
pop
jae
imul
repz
lcall
mov
pop
or
dec
push
xlat
mov
shrl
dec
nop
cld
xchg
xor
sahf
pusha
test
xor
and
lods
pop
ds
addb
pop
mov
xchg
mov
sbb
push
inc
imul
push
cmp
imul
mov
in
test
push
sbb
and
jecxz
xchg
mov
nop
and
xchg
add
adc
cld
xchg
test
jl
inc
sbb
gs
movq
pop
inc
filds
push
in
nop
testl
mov
cmp
cmp
imul
cs
sahf
xor
sbb
hlt
mov
push
cmp
jmp
xchg
add
jno
mov
xchg
and
jo
mov
test
lret
sub
ret
outsl
jle
fcmovnb
pop
dec
pushf
std
idiv
mov
pop
and
dec
cmpsb
cld
add
sbb
dec
push
mov
cli
mov
sub
push
lret
bound
cltd
xor
aaa
pop
pop
mov
xor
aad
cmpsl
inc
add
add
push
movsl
add
enter
nop
popf
jl
xchg
inc
mov
clc
inc
test
dec
push
movsb
jns
insl
pusha
dec
mov
xchg
cmc
jge
ljmp
and
ret
cli
fldln2
jbe
lret
fstl
cli
push
sbb
jno
pop
jb
mov
or
cmp
mov
mov
mov
fistpl
pushf
bound
loope
inc
cmpsb
mov
loope
lret
sub
push
lock
fidivrl
adc
loopne
mov
loopne
rolb
loopne
fnstenv
push
and
adc
dec
add
jg
or
fs
jge
rol
or
cli
fstps
xor
pop
sbb
in
xchg
jo
fcmovnu
rcl
inc
mov
outsl
mov
mov
movsb
lcall
les
or
dec
sub
mov
add
enter
test
outsl
mov
xchg
inc
sub
cmp
jb
cmpsl
aaa
loope
sti
fsts
push
inc
mov
mov
data16
xchg
sbb
push
sbb
sub
ja
incb
fidivs
add
xor
and
dec
lea
cmpsl
inc
pushf
pop
and
bound
cmp
cmp
scas
inc
cmp
pop
xchg
divb
xlat
dec
mov
sbb
push
add
mov
imul
testl
cwtl
cmp
pop
mov
lods
mov
pusha
push
daa
fs
hlt
xchg
decb
or
jmp
cmc
ja
repz
jle
xchg
mov
sbb
mov
jno
dec
int3
shl
fstp
idivl
iret
adc
mov
cmp
xor
aad
dec
xor
mov
xor
into
cwtl
add
ret
lcall
add
shr
bswap
mov
test
ja
push
les
xchg
lods
cmpsb
xlat
ret
add
inc
xchg
fdivl
sub
xchg
adc
in
or
jb
sbb
xorb
mov
sbb
xor
cmp
stos
sub
icebp
push
jmp
leave
decb
cli
mov
push
xor
repnz
fcos
or
lods
xor
push
ret
fistpl
test
adcl
lock
pop
pop
cmp
or
jle
mov
fcomi
add
inc
dec
in
dec
mov
jecxz
sahf
mov
dec
xchg
inc
push
jns
mov
out
mull
push
popa
repnz
fistl
cli
push
push
pop
repnz
xlat
mov
xchg
mov
push
cli
jo
stc
repz
imul
xchg
push
pop
and
stc
test
add
dec
mov
enter
adc
cmpsl
mov
jne
jge
mov
repz
hlt
xor
add
sub
shll
repz
inc
cmpsb
xlat
xchg
pop
mov
fwait
push
test
cld
mov
bound
out
hlt
cmp
fisubrl
add
fmull
mov
inc
cmp
stc
aaa
dec
adc
and
mov
out
dec
sahf
iret
shrl
fsubs
xor
xor
jae
sbb
addr16
push
call
ret
sub
int
or
ja
aaa
rorl
filds
test
fs
mov
je
push
sti
cs
mov
test
xor
insl
addr16
adc
xchg
mov
loopne
push
ljmp
les
push
xchg
insl
frstor
mov
sti
mov
insl
xor
lret
push
popa
pop
stos
cmp
mov
js
mov
xor
push
fcompl
leave
addr16
aad
daa
cld
test
loop
jecxz
mov
jge
jecxz
lods
outsl
aam
pop
mov
mov
in
sbb
or
mov
cmp
or
call
cs
or
mov
push
lret
inc
aam
push
lds
aas
xor
xchg
push
arpl
inc
cmpl
sti
push
cmp
inc
bound
call
mov
sub
out
sahf
sbb
ret
loop
imul
adc
ret
inc
into
push
lods
and
fwait
fwait
mov
dec
orl
aam
int3
idiv
xorb
aad
pop
pop
icebp
stc
cmp
mov
adc
sub
fisttpll
out
xlat
idivl
sub
pop
add
es
adc
mov
cld
out
cmp
iret
mov
lret
cld
daa
push
xor
ret
mov
add
pop
jae
lock
dec
loope
mov
hlt
ds
xchg
or
data16
fidivs
or
adc
sub
testb
jbe
fwait
sub
ds
or
mov
rcr
pop
push
sbb
pop
mov
mov
sub
lahf
fs
and
aam
push
call
aas
cltd
outsb
add
inc
mov
xchg
push
mov
lret
jno
mov
data16
mov
and
stos
inc
cmp
fwait
pop
jmp
roll
je
xor
jl
stos
arpl
jecxz
push
pop
sbbb
ret
xor
adc
or
push
movsl
pop
cli
cmp
mov
mov
xchg
inc
and
wbinvd
jg
test
mov
or
and
fdivrs
leave
movsl
test
pop
enter
out
lcall
or
movsb
mov
arpl
movsb
js
in
je
aad
sbb
mov
outsl
jb
or
mov
lods
mov
inc
xchg
pop
subb
test
xor
sbbb
stos
ror
andb
adc
jno
and
aas
dec
mov
lahf
jnp
dec
dec
jmp
cltd
hlt
mov
in
cmp
and
sbb
xchg
es
insb
xor
lret
fstpt
jae
int
fbld
cmpsb
lds
xchg
mov
sbb
cltd
stos
test
inc
mov
pop
dec
mov
rclb
decb
and
outsb
pusha
xchg
outsl
xchg
ds
jmp
sbb
repz
je
pop
mov
adc
pushf
call
sub
jb
push
scas
jmp
xchg
jg
sub
cmpl
and
pop
jle
mov
push
nopl
je
sub
rcrb
inc
daa
jmp
dec
adc
enter
cld
sti
lods
es
pop
movl
sti
test
sub
or
jp
aam
int
pop
mov
sbb
ss
mov
or
jl
and
xlat
mov
jmp
adc
inc
sub
inc
fnstenv
decl
or
mov
cmp
or
mov
cmp
test
mov
rorb
jl
adc
pop
mov
sbb
andl
pop
out
xor
mov
mov
or
shll
sub
jl
sub
mov
push
xchg
ljmp
adc
out
inc
add
daa
add
lock
daa
xor
daa
push
add
mov
sti
xor
std
das
sbb
neg
sbb
or
in
fs
lock
outsb
push
jb
xor
ja
es
stos
mov
pop
loop
sti
jo
in
aaa
sarb
jbe
inc
lods
scas
inc
push
int
and
jne
sub
sub
int3
mov
and
xor
movsl
cmc
inc
and
test
sub
cmp
jg
pop
fsubs
mov
mov
fwait
push
push
mov
fsubl
push
xchg
negb
mov
push
cmp
dec
daa
and
cmp
lock
mov
adc
out
xlat
das
out
test
popa
bound
dec
and
pop
scas
jmp
pop
push
push
imul
hlt
cmpsb
in
jbe
xchg
inc
add
fwait
push
dec
in
push
jo
test
out
sahf
push
and
loope
imul
add
jbe
dec
data16
push
mov
je
xchg
or
cmpsb
int
in
jecxz
sub
shrl
sti
gs
popf
lret
jo
and
in
sbb
insb
mov
sub
pop
lock
pop
in
jnp
pusha
cmpl
incb
cmpsl
je
mov
cmp
dec
push
jnp
adc
push
push
cwtl
mov
ror
and
mov
mov
loopne
cmpsb
sbb
add
repnz
and
js
sub
clc
data16
repz
lods
fldcw
pushf
sbb
xchg
mov
sbb
pop
add
sub
dec
cmpsb
sahf
sti
xchg
in
inc
aad
adc
and
mov
cld
out
jne
es
mov
sub
mov
insl
adc
xchg
lock
imul
scas
mov
sub
inc
cmp
mov
add
popf
xchg
scas
dec
cmp
pusha
or
push
xor
fsubrs
mov
ficoml
jg
cmpsl
xchg
mov
popa
push
jae
add
inc
inc
pop
inc
mov
testb
cld
loop
lock
pop
push
data16
in
pusha
movsl
inc
mov
jp
xor
dec
iret
jne
jae
push
adc
std
rclb
push
mov
fimull
fwait
addl
pop
mov
mov
inc
mov
rorl
inc
in
ret
pusha
stos
cmp
mov
mov
int3
push
cwtl
mov
outsb
ja
dec
repz
mov
pop
sbb
and
sbb
and
dec
sbb
mov
cmp
pop
test
inc
and
aaa
add
sub
sub
scas
inc
lds
into
movsb
aas
call
inc
repz
scas
cmp
fstpl
jp
push
in
mov
mov
push
add
mov
mov
and
dec
lcall
loop
mov
mov
xorb
sti
test
sahf
fstl
push
sub
clc
sub
cmp
jg
test
jb
gs
mov
in
cmp
cmp
lods
xor
scas
and
mov
mov
or
sbb
cmp
adc
inc
or
fidivrl
or
inc
dec
push
pop
jbe
jg
or
xor
mov
rcrl
les
outsl
sahf
mov
inc
lods
and
stc
icebp
loopne
mov
outsb
filds
aad
pop
rcrl
cmp
jg
aaa
mov
sar
jp
pusha
lock
sbb
cmp
pop
sub
aam
jp
and
jbe
inc
lock
mov
dec
in
or
aam
hlt
fcomip
js
pop
stc
daa
jle,pn
jl
cmc
cmpsb
pop
mov
dec
dec
out
bound
jle
push
add
lcall
xchg
dec
mov
xor
pusha
shll
push
push
popl
sub
mov
nop
push
adc
cmp
sub
insb
movsb
jmp
out
inc
adc
cmpsl
test
inc
push
adc
dec
cwtl
out
push
lret
inc
or
cmp
pop
push
ja
shll
add
aaa
lahf
cmpsl
outsb
lea
mulb
add
mov
jge
mov
mov
test
iret
cmp
jno
sbb
in
cmp
or
push
xchg
jno
clc
mov
test
dec
fwait
xchg
std
pop
lock
cmp
jg
mov
ja
mov
lahf
sub
ret
sub
or
gs
mov
or
ret
mov
test
imul
sub
fisttpl
jecxz
jbe
call
shll
ss
out
jl
mov
cmp
mov
daa
inc
inc
cmpsb
ljmp
aas
mov
test
xchg
fldl
iret
dec
rol
jae
xor
dec
cmc
bswap
jp
and
frstor
sub
cmpsl
mov
sub
int3
ss
stos
cmp
cmp
sbb
pop
and
sbb
insb
std
inc
sub
mov
mov
sti
lahf
push
and
test
imul
into
mov
in
jmp
jecxz
cmpsl
sub
xchg
mov
aam
sti
pop
push
aaa
fldenv
rcll
rcll
cmp
adc
add
cwtl
outsl
mov
shll
js
stos
ficoml
out
dec
or
rcll
sub
dec
mov
jne
fwait
in
ljmp
mov
imull
testb
idivl
jge
daa
mov
jb
sub
jb
in
cmc
inc
mov
incb
lea
insb
ds
xor
mov
rcrb
mov
in
pop
pop
shll
pop
mov
jge
pusha
sahf
in
pushf
sbb
imul
arpl
pop
mov
shrb
rclb
jae
xchg
jmp
pop
int
or
jnp
sar
mov
insl
lret
repz
in
push
imul
aad
xor
dec
dec
push
mov
aas
mov
jno
sti
gs
sarb
mov
add
testl
xor
ja
xchg
std
popa
aaa
adc
fs
outsb
mov
add
clc
pop
dec
inc
stos
mov
adc
add
in
xchg
cli
push
inc
cmp
repnz
dec
sub
notl
stc
add
xchg
jecxz
mov
leave
in
call
cwtl
lret
inc
je
cmpsb
mov
xlat
push
aad
mov
clc
and
jno
or
xor
jb
cmp
push
fs
fldenv
inc
sub
pushf
ficoml
cmpsl
cmp
leave
jno
roll
gs
mov
test
mov
test
xchg
mov
xchg
mov
and
cli
insb
xor
loope
jne
je
sarb
jmp
sarb
mov
dec
pop
push
arpl
and
scas
or
jle
dec
pop
hlt
pusha
ret
and
lahf
int3
mov
jbe
jae
jb
xor
sbb
clc
sbb
or
xor
sub
and
das
xlat
loop
sbb
inc
icebp
inc
cwtl
mov
and
push
mov
add
xchg
inc
jmp
adc
pop
dec
mov
rolb
call
inc
sub
mov
insb
icebp
xchg
mov
sub
outsb
int
jmp
mov
xchg
imul
pcmpgtd
fsubl
adc
mov
xchg
fdivrl
clc
jnp
in
ja
mov
repnz
push
popl
sbb
sub
cmpb
rorb
ss
cld
mov
fstl
pop
sti
aaa
cltd
jb
xchg
popf
jne
dec
add
mov
xchg
pop
into
xchg
in
add
xor
xor
into
pop
mov
stos
out
jecxz
mov
ret
popl
dec
pop
sub
out
push
pusha
iret
nop
inc
jns
jecxz
sbb
xor
fistpll
adc
cmp
sub
popf
or
push
fs
lahf
and
addr16
sbb
dec
mov
bound
xchg
or
xchg
sub
add
cltd
mov
fcompl
fisubl
fisttpll
int
cwtl
xchg
mov
pop
mov
enter
shrl
jecxz
sbb
call
dec
call
lock
jp
insl
pop
pextrw
or
mov
xacquire
jo
lods
sahf
and
sahf
subb
mov
fpatan
call
xchg
mov
jae
pop
dec
int3
or
add
adc
dec
ljmp
mov
xlat
jnp
out
iret
lret
cmc
push
ror
jo
loopne
mov
mov
out
loopew
or
mov
push
jnp
fisttpl
sbb
insl
in
pop
cmpsl
pop
push
add
fmull
aas
out
add
insb
adc
js
jno
cmp
popf
jno
incb
in
imul
cmp
fs
int
xor
in
pop
mov
test
fcmovbe
dec
xchg
pop
mov
cli
enter
subl
add
je
xchg
mov
rorl
movsb
sub
cmp
sub
in
pop
leave
pop
cmp
aas
cmp
dec
mov
cltd
stos
outsb
mov
fdiv
and
repz
gs
les
outsb
cs
data16
insb
dec
xlat
jg
movsl
sbb
push
stc
mov
xchg
jp
scas
test
fmull
in
mov
mov
sbb
cmp
scas
sub
int
sahf
cmp
jne
rclb
dec
cld
cs
sahf
mov
cld
mov
test
push
or
mov
sahf
push
sub
sarl
cmp
std
mov
pop
xchg
inc
xchg
stos
into
mov
jno
sbb
enter
cmpsb
or
mov
cmp
push
inc
imulb
xchg
pop
orl
mov
sbb
faddl
in
stos
nop
add
cs
ljmp
push
stc
jo
sarl
dec
push
mov
mov
sbb
shr
aaa
fsubl
fmuls
pop
movsb
mov
push
insb
mov
mov
inc
xchg
adc
or
ds
pusha
sarb
mov
push
sarb
int3
sub
jle
ss
pop
xorb
decb
pop
adc
es
addl
dec
mov
adc
sbb
push
pop
stos
mov
add
nop
shll
into
lea
int
repnz
repz
mov
in
insl
pop
loope
add
dec
mov
pusha
lods
imul
mov
xor
sub
jmp
cld
mulb
pop
pop
sahf
sub
mov
ljmp
push
push
notb
stos
xor
mov
xor
in
mov
push
out
jmp
add
into
bound
orb
jge
mov
inc
fsubrs
jno
test
jb
pop
adc
iret
mov
xor
hlt
les
add
jne
mov
aaa
or
fsts
outsl
jl
adc
push
insb
dec
cmpsl
or
mov
cmp
sub
pop
push
movsl
aam
and
dec
mov
pusha
sarl
dec
pop
push
sbb
cmpsl
mov
cwtl
in
inc
inc
or
outsl
jl
insl
lods
popa
push
inc
ret
fisttpll
mov
mov
push
repz
loope
jecxz
inc
inc
repnz
subb
sarb
imul
or
addl
add
jmp
sub
leave
imul
dec
rep
aam
pop
leave
cmp
stc
fisttpll
xor
filds
sub
out
mov
loop
xchg
adc
mov
mov
cmpsb
mov
inc
fisttpll
sub
and
cld
sar
rorl
adc
xor
out
mov
mov
gs
pop
fisubrl
lock
or
cmpsl
pop
lock
lcall
addl
pop
sbbl
das
pop
xor
pop
pop
rolb
mov
test
add
add
jge
cmp
and
or
call
repz
xor
mov
cli
pop
add
repz
sbb
insl
mov
out
fdivr
and
movsb
jmp
stos
pop
inc
cmp
divb
or
or
mov
scas
leave
inc
rclb
movsb
int
pop
scas
rorb
cmp
imul
lcall
in
xchg
fisubs
nop
aas
imul
push
or
xchg
xlat
sbb
adc
ss
das
test
call
push
xchg
pop
rorb
or
rcl
in
push
rcrl
sahf
dec
adc
sbb
call
cld
or
pushf
xchg
aaa
bound
inc
fbld
push
fldl
icebp
fidivs
adc
or
dec
and
add
mov
ret
xor
nop
push
mov
idivl
sbb
jbe
lcall
lahf
fnstenv
lahf
insl
mull
mov
sti
lahf
std
mov
or
test
ds
xor
sub
push
xchg
pushf
fnsave
adc
mov
or
sbb
adc
int3
mov
sbb
pop
ret
dec
dec
mov
xchg
cmp
and
fwait
inc
mov
iret
out
in
popa
mov
out
scas
jecxz
je
repnz
mov
jne
je
mov
pushf
insl
push
and
push
inc
into
add
xor
mov
and
jnp
cli
mov
xor
mov
xor
pop
mov
push
mov
sub
out
adc
lds
out
xor
loop
dec
mov
xchg
loop
add
out
dec
sti
push
mov
sbb
in
lahf
shlb
push
jo
das
int
mov
and
mov
mov
xchg
stos
in
fisubrl
cltd
sbb
repz
push
mov
push
aad
cmpsb
lcall
and
lret
mov
mov
cmp
jb
mov
int
mov
mov
sti
out
inc
jo
stos
sub
popf
aam
test
xor
stos
mov
mov
pop
jno
dec
movsl
jbe
cmpsb
xor
test
loope
stos
ss
fdivrp
adcb
scas
mov
lret
out
stc
xor
js
push
xchg
gs
lahf
sub
dec
adcl
pushf
in
xor
insb
test
das
scas
pop
mov
scas
loop
mov
dec
mov
aad
clc
out
dec
fists
movl
cmp
outsb
and
insb
fisubrs
jg
into
sarb
jecxz
daa
pop
mov
inc
dec
push
pop
es
rcrl
jecxz
dec
add
cwtl
or
loopne
mov
scas
mov
or
dec
sub
mov
push
shr
push
movsl
pop
dec
pop
fisttpl
or
sbb
maxps
orl
inc
mov
and
xchg
xchg
int
out
dec
push
daa
push
fstpl
push
dec
add
sub
out
ljmp
pop
add
or
inc
adc
fiadds
jbe
sahf
fsubrl
daa
cld
cwtl
cmp
cmpsl
jno
mov
jae
call
fmull
mov
mov
imul
xchg
mov
sbb
inc
lds
das
cmp
addr16
xchg
dec
fldenv
shlb
pop
jmp
in
jmp
hlt
mov
je
mov
or
mov
das
sub
mov
stos
bound
cs
add
lret
pusha
xchg
xchg
cs
scas
add
and
jp
dec
div
aaa
inc
jmp
js
add
sti
hlt
js
adc
pop
sub
sti
mov
pop
mov
shll
or
xchg
mov
dec
xlat
dec
xchg
mov
aam
clc
adc
adc
enter
jmp
adcl
mov
add
ljmp
mov
dec
mov
out
shrl
push
inc
pop
pop
loopne
inc
fisubrl
icebp
xchg
jmp
imul
lods
in
add
mov
imulb
mov
inc
popf
mov
test
mov
lret
pop
lret
enter
cwtl
cli
into
imul
inc
sub
sarl
add
ss
xor
and
rcll
ret
jge
out
xchg
sub
xor
jbe
pop
push
mov
mov
scas
xor
adc
adc
out
sub
sbb
mov
movl
clc
push
sub
push
pop
dec
scas
test
or
stos
and
outsl
out
xor
sbb
aaa
lret
push
hlt
rorb
into
bound
jge
dec
loop
std
dec
sbbb
cwtl
mov
lock
mov
mov
in
test
xchg
cmp
xor
out
sub
jns
xor
imul
adc
jg,pn
test
xor
xor
mov
ficompl
dec
inc
sbb
adc
leave
repz
lret
insl
pop
mov
jle
insb
int3
fsubr
sbb
arpl
and
mov
shrl
dec
orl
nop
mov
movsb
aas
mov
aas
xor
pop
shll
loope
push
or
jnp
je
nop
loope
and
xor
and
arpl
hlt
fdivp
je
xchg
lret
ret
jo
hlt
cmp
mov
fcmovnbe
push
or
ds
xor
xchg
dec
shlb
fnop
push
dec
daa
xor
in
cli
xlat
xor
aaa
test
push
icebp
addr16
adc
fistl
lods
aad
cmp
loope
jl
pop
dec
je
add
adc
jmp
pop
inc
sbb
mov
ss
jb
scas
pop
mov
fsubp
call
xchg
test
movsl
mov
xchg
mov
rolb
xchg
ljmp
call
and
in
adc
mov
jmp
insb
lods
subl
xchg
in
insb
insl
or
ret
cmp
pop
mov
lods
or
test
mov
pop
mov
mov
jbe
xor
fbstp
sbb
cmpsb
outsb
ja
incl
lret
xor
xchg
xlat
or
jmp
aaa
repnz
inc
jge
loop
fsubrl
sub
lock
or
mov
pop
in
mov
rcrl
dec
stc
mov
inc
add
mov
pop
movb
les
xor
aas
stos
xor
sub
daa
test
cltd
shl
insl
rol
pop
imul
xchg
xchg
enter
jmp
cmc
imul
push
outsl
out
mov
push
cmp
lcall
mov
mov
into
jbe
fldenv
cmp
in
fsub
outsl
repz
imul
divl
jno
pusha
xchg
pop
subl
loope
loop
xchg
xor
pop
sbb
push
adcb
stos
sub
mov
sahf
push
cmp
mov
xor
or
push
call
rolb
fmuls
fxtract
ret
adc
sahf
sti
sbb
add
insb
add
shlb
xor
nop
lret
enter
fsubs
or
sub
test
sub
cld
imul
repz
add
lret
jbe
xchg
jmp
sbb
or
mov
and
mov
repz
aam
popa
fs
int
addr16
test
mov
mov
ja
pop
leave
xor
fistps
lahf
lods
imul
ficompl
adc
mov
jno
enter
fs
fadd
fldl
pop
xor
pop
push
lcall
clc
int
cs
mov
mov
xor
mov
fcompl
vphadduwd
shr
movsb
fidivrl
ret
add
mov
jge
mov
jecxz
js
stc
aas
dec
mov
add
inc
fld1
fisubs
sub
xchg
and
repz
mov
xor
or
dec
sbb
dec
push
dec
call
enter
sub
xchg
lea
lock
and
aam
cmp
adc
insl
movb
dec
mov
ljmp
sahf
mov
int
cmpsl
mov
dec
aaa
mov
lods
push
mov
test
aam
pop
sti
pop
mov
or
idivb
in
sub
mov
xor
jo
pop
js
scas
pop
push
fidivrs
jnp
andb
int
push
adc
cmp
push
mov
xchg
mov
dec
sbb
call
jl
out
mov
sbb
pusha
or
lods
aam
sti
push
mov
mov
icebp
daa
sub
out
pop
mov
into
pop
popf
cli
xor
mov
cli
or
jb
jb
pop
pushf
ss
xor
mov
mov
repnz
hlt
push
fucomip
out
insb
add
cmpsl
iret
and
adcl
jo
repnz
pop
pop
shl
test
insl
dec
cld
loope
enter
jge
loope
cmpsl
xchg
mov
leave
imul
add
xchg
push
lods
addl
inc
loop
sub
lret
jp
push
pop
bound
mov
adc
push
arpl
ret
fcmovb
data16
loopne
add
jns
sahf
imul
mov
test
cmp
xchg
mov
bound
sbb
or
int
lds
rclb
cwtl
xchg
ja
pop
cmp
hlt
cmp
or
sub
aad
xchg
dec
inc
sbb
dec
fistl
cmp
stos
ja
popf
pop
xchg
mov
loop
mov
sbb
cld
and
ljmp
stc
ds
mov
shrb
jo
pop
jg
mov
push
push
outsl
inc
sub
and
pop
xor
mov
lods
and
add
jle
push
lods
cmpsb
sbb
aam
adc
testb
jecxz
outsl
mov
add
test
mov
jae
dec
dec
or
testl
clc
cwtl
xor
shrl
inc
pop
cmp
adc
cmp
add
jg
clc
fidivs
mov
imul
xchg
sub
fildl
jecxz
movsb
cmp
lret
mov
mov
outsb
flds
adc
mov
ja
or
push
jp
sbb
xchg
xchg
xchg
jmp
out
imul
jnp
fistl
xor
push
lret
mov
js
test
inc
fildl
bnd
icebp
in
sub
jle
call
or
out
in
jmp
lea
pop
lret
push
shrl
add
or
repz
arpl
clc
addr16
xchg
cmp
int
xor
fisubs
jb
mov
inc
xchg
adc
mov
cltd
cmp
push
mov
fwait
mov
test
loope
lret
imulb
stc
in
inc
pop
sbb
fistl
cmp
push
std
out
mov
xchg
pop
jl
lcall
cmp
jecxz
mov
adc
mov
pextrw
stos
fidivs
les
movsb
dec
sub
pop
imul
je
sub
std
mov
jne
ljmp
inc
mov
enter
je
into
cld
mov
notb
int
mov
cwtl
aas
dec
repnz
arpl
mov
push
ljmp
xorb
xor
push
test
mov
inc
dec
pop
mov
xor
scas
nop
sbb
pop
fisubs
adc
pushf
popa
mov
test
cmp
adc
dec
das
push
mov
xchg
pop
sbb
add
test
xchg
mov
jg
cmp
inc
outsb
iret
jbe
ds
jno
jne
subb
lcall
fists
inc
add
mov
and
and
xchg
cmovs
pop
in
call
xchg
out
or
stos
push
imull
popf
dec
or
jns
iret
notb
jbe
popf
adc
dec
adcb
sub
mov
fdivrs
pop
aas
cltd
sar
adc
test
ja
sub
aas
gs
and
dec
jb
aas
push
and
lods
sbb
jmp
push
fnsave
adc
xor
les
cmp
inc
adc
sbb
pop
cmpsb
dec
int3
ds
rcll
vfmaddps
jecxz
dec
or
mov
push
push
nop
pop
pop
sbb
mov
mov
scas
adcl
fstps
cmpl
or
and
les
sbb
mov
sbb
aaa
dec
pop
out
aaa
sbb
cmp
xor
out
and
jp
shlb
pop
xchg
rcrb
in
inc
push
jmp
xchg
lock
push
dec
into
fsubl
stos
jbe
adc
shlb
cmp
mov
pop
das
mov
cli
mov
mov
hlt
inc
cmp
outsl
int3
adc
sbb
in
jecxz
xchg
add
jne
iretw
insl
sbb
es
mov
rcrl
lcall
fst
lcall
loop
mov
and
test
pop
add
aaa
jns
shr
mov
sbbl
call
or
cld
fdivl
outsb
cmpl
xlat
jb
dec
cmc
clc
mov
addl
testb
adc
mov
mov
scas
xchg
cmp
cmpsb
xchg
jo
pop
inc
scas
es
popa
inc
add
pop
add
mov
or
cmp
jae
jbe
dec
dec
pop
aad
fnstsw
add
into
push
xchg
addr16
je
lahf
push
xor
out
pop
jnp
xchg
xor
je
or
aad
dec
push
push
mov
out
lock
cmc
fiadds
movsb
enter
sbb
xor
jbe
ja
cld
push
xchg
ja
mov
inc
jmp
popa
jp
sub
int3
icebp
mov
or
adc
sbb
push
mov
out
sub
sbb
fldl
sbb
lds
imull
cld
clc
out
mov
loope
test
cltd
mov
or
mov
stos
add
mov
aam
mov
push
aam
scas
push
out
jnp
jecxz
or
icebp
mov
mov
addr16
add
xchg
fisubl
mov
push
adc
cmp
cmp
call
vpunpckhdq
adc
sbb
xchg
push
sbb
pop
pusha
loop
daa
fsubrl
xchg
sbb
jno
xor
xchg
loopne
or
loop
xchg
nop
insl
mov
mov
vpcomub
pop
jno
lcall
or
insb
cmp
mov
jle
or
out
pop
jmp
jb
mov
push
scas
shll
fs
mov
rcll
pop
fsts
xchg
add
pop
data16
sub
push
out
fdivl
hlt
dec
test
lods
out
xor
mov
retw
dec
ficoml
mov
lcall
out
into
mov
pop
pop
push
and
loopne
push
out
or
cmc
fldt
xor
inc
xor
cmp
fimull
pop
test
jbe
push
sti
test
xor
ror
push
xchg
sub
cmc
enter
cmp
loop
push
pop
cld
mov
sbb
xor
aas
int3
mov
xlat
outsb
les
jl
lds
sub
sbb
stc
into
pop
or
pop
cmp
jge
push
lock
jns
mov
mov
repz
add
mov
lret
dec
jmp
inc
cmovo
lds
stc
xor
push
cltd
rcl
addb
ss
sub
dec
mov
xor
mov
andl
push
nop
cmc
jg
adc
add
inc
movsl
cmp
sbb
les
inc
sub
pop
leave
or
mov
mov
mov
or
jp
dec
add
dec
inc
sahf
mov
aam
aaa
jge
sbb
adcl
int
stos
bound
idivb
out
addr16
fdivr
lret
out
mov
aad
fsts
jle
hlt
pop
lret
mov
add
or
in
xlat
shl
and
frstor
out
xorl
test
xchg
mov
je
and
out
sub
fisubrl
data16
mov
fs
stc
mov
ljmp
jle
or
test
outsl
add
orb
jo
jp
popa
push
cs
std
jp
icebp
cwtl
sub
pop
push
inc
xchg
stos
pop
xchg
fcmovbe
std
jae
into
clc
in
in
test
or
xor
mov
or
xlat
adc
pusha
dec
stc
push
mov
and
sub
out
hlt
xor
lods
sbb
mov
lahf
fs
mov
xchg
dec
xor
jb
dec
jmp
cmp
imul
mov
adcl
scas
fnstsw
cmp
sbb
push
jle
mov
xchg
test
xchg
xchg
nop
rol
push
addr16
inc
frstpm(287
cmc
jle
push
sbb
cld
sub
mov
hlt
out
pop
in
push
in
mov
lret
fldt
aaa
or
shlb
outsl
xor
jb
jns
push
dec
xchg
fs
in
sub
add
sub
cmp
mov
adc
fsts
inc
stos
shll
fbstp
ficompl
movb
data16
cmp
xchg
fidivrl
fidivs
subl
push
clc
sub
gs
cmpsb
lea
cwtl
xlat
sub
sub
pop
cmpb
push
in
dec
test
ficoml
jle
divl
mov
sub
out
movsb
scas
cmpsb
mov
inc
sub
stos
aas
xor
push
lods
sbb
sbb
xor
popf
jnp
pop
mov
mov
hlt
jne
sub
jnp
int
xchg
inc
adc
in
ret
in
xchg
hlt
daa
cmpsl
in
xchg
cwtl
sbbb
scas
sbb
pop
daa
pop
dec
dec
jo
outsb
cwtl
adc
mov
pop
cmpl
and
add
push
cltd
test
popf
mov
sbb
pusha
dec
adc
insb
pop
inc
fwait
jg
shlb
or
loop
lock
int
cmp
popf
ret
xor
aad
cld
jno
mov
lahf
inc
mov
adc
mov
movsl
div
push
test
cli
aad
jbe
jae
in
xor
out
jecxz
mov
or
je
jae
cmpsb
loop
xor
enter
in
ljmp
fwait
js
pop
xchg
daa
movsl
lret
imul
gs
pop
mov
subb
xor
inc
je
cmpsl
mov
aad
push
xor
jge
add
icebp
arpl
shl
jp
push
adc
stos
dec
fwait
adc
ret
out
imul
xor
cld
push
push
ds
xor
xorl
xchg
out
xchg
adc
mov
and
pop
rclb
cli
cmp
lods
ret
cmp
lods
out
or
movzwl
cmp
and
mov
jo
rorl
sahf
sbb
aas
jbe
cmp
inc
cmp
dec
pop
push
js
out
lods
mov
add
push
jnp
lret
mov
and
push
lds
or
popa
add
dec
mov
pop
shll
js
aaa
mov
sahf
rcl
jg
out
mov
aas
aad
or
sbb
aad
fs
mov
inc
fldcw
mov
arpl
push
jmp
push
pop
out
into
jnp
lods
lret
fdivl
jne
pop
sub
sub
lret
ss
fldl
in
cmp
adc
add
and
js
sub
ja
dec
dec
sbb
push
jmp
mov
sbbl
jp
or
dec
test
sub
xchg
insb
into
daa
push
insb
lcall
xor
lea
in
daa
aas
pop
dec
icebp
and
or
cwtl
sub
jecxz
xor
sbb
decb
xchg
imul
fsubrl
sarb
imul
das
mov
mov
xor
xor
movsb
ds
dec
ficoml
mov
in
ja
add
gs
pusha
add
in
inc
xor
repz
and
pop
clc
jl
pop
insb
pushf
and
pop
lock
ljmp
mov
int
in
inc
test
add
pusha
sbb
data16
pop
add
ret
sti
xor
or
cmp
popa
pop
dec
repnz
enter
lods
jne
cmp
scas
sbb
sbb
jae
inc
mov
or
push
jg
xchg
xchg
pop
sbb
or
loope
cmpsl
loop
lods
push
mov
mov
lcall
mov
xor
sub
hlt
xchg
push
negl
xor
fistps
imul
push
lea
jne
enter
ret
cmp
fsubr
lea
push
cmpsl
mov
sub
aas
imul
in
leave
pop
lret
mov
das
push
popf
or
lock
pop
test
xchg
mov
xchg
pop
aam
pop
push
imul
fsubrl
mov
arpl
fnstcw
cmp
aas
pop
aas
clc
lret
rcrl
cmp
int
popf
push
or
ret
mov
outsl
mov
fs
ror
sbb
stc
sbb
pop
pushf
mov
and
cmp
or
push
push
jo
test
movsl
lret
lock
or
add
adc
push
fisubl
adc
idiv
lods
aas
out
icebp
mov
enter
lds
ret
push
ret
cmp
out
and
insl
or
inc
roll
sahf
sbb
addr16
mov
sahf
leave
ret
filds
mov
add
bound
ret
mov
addr16
jle
mov
cmp
xchg
mov
fdivs
xchg
xor
jmp
pop
xor
mov
cwtl
add
mov
stc
pop
sar
mov
and
inc
xor
adc
lret
jb
jae
and
pop
pop
pop
cmpsb
aaa
test
pop
push
xchg
dec
cmp
adc
dec
outsl
pusha
mov
sahf
fwait
pop
movsl
fdivrs
lock
jne
je
inc
jns
lock
mov
mov
enter
lea
testl
push
xlat
test
xchg
outsl
and
and
ret
pop
cmpsl
sbb
sbb
cwtl
dec
movsl
call
mov
pop
sti
shll
das
ljmp
mov
dec
scas
insl
cmpsl
lahf
rolb
mov
sub
mov
movsb
stos
xchg
xchg
mov
psubb
sub
test
negb
lahf
adc
inc
imul
xorb
add
adc
push
sarb
movsb
shrl
xchg
in
mov
mov
test
pop
xchg
inc
pop
push
inc
cmp
incl
fstpl
stos
jle
or
je
fstpt
inc
out
cmp
imul
inc
cmpsl
popl
pop
in
sahf
addr16
xchg
dec
jl
xchg
cmp
mov
pop
in
repnz
mov
sahf
dec
sbb
lods
adcl
scas
and
mov
data16
or
push
icebp
sti
xchg
jmp
add
outsl
cmp
jne
sbb
int3
jge
fiadds
or
add
out
sub
aad
testl
loope
test
sti
or
pop
es
sahf
dec
enter
daa
stc
dec
lds
push
loop
xchg
push
stc
push
xchg
push
rclb
les
jno
inc
sbb
lods
pop
dec
dec
js
mov
rcr
inc
and
pushf
mov
adcb
in
cltd
sbbl
add
xchg
cmp
push
xor
or
mov
sbb
jp
jge
lods
xor
btc
daa
pop
mov
faddl
sar
cld
gs
mov
dec
sbb
out
mov
pop
pop
and
mov
daa
nop
adc
or
jg
shll
cmp
out
pop
test
xchg
mov
or
sbb
push
mov
push
int3
ror
push
xchg
jmp
fldenv
pop
cmpl
stos
cmc
push
xorb
inc
mov
mov
xchg
outsb
sbb
push
mov
dec
or
test
int3
into
mov
sub
xchg
pop
test
data16
sbb
inc
je
mov
andb
sbb
outsb
data16
stc
outsb
inc
rorl
adc
adc
add
fiadds
mov
loopne
inc
ret
pushf
xor
inc
negl
fucomi
mov
imul
repnz
push
push
loopne
and
out
aad
dec
les
inc
shr
arpl
inc
insl
pop
mov
fisubrs
mov
cmp
lods
push
in
add
fisttpl
fnstsw
and
sub
mov
repnz
out
add
testl
mov
icebp
jmp
adc
mov
push
mov
mov
imul
adc
stos
jg
int3
mov
inc
cwtl
divl
int
dec
js
icebp
pop
lock
fcomps
inc
sbbb
push
in
cmpsb
fistpl
add
movsb
xor
and
pop
push
iret
fldcw
pop
ljmp
jp
sahf
inc
mov
mov
mov
std
mov
out
rol
mov
rorl
mov
push
cmp
mov
jnp
pop
hlt
loopne
inc
imul
xchg
stc
or
stc
in
cmp
xchg
fnsave
test
fs
lahf
push
inc
mov
das
and
test
std
push
pop
inc
cs
push
lret
subb
sbb
push
sub
sbb
mov
ja
movsb
jmp
popa
cld
adc
cld
pushl
data16
mov
mov
mov
mov
jo
add
clc
stos
adc
mov
sahf
aam
cmpsb
dec
or
int
cmp
add
adcl
outsb
sbb
adc
sbb
stos
inc
cltd
js
das
adc
xchg
jae
popa
sub
ficoms
adc
or
lret
pusha
jge
or
xor
pusha
icebp
add
pusha
mov
popf
xchg
xchg
lea
lret
mov
add
das
push
mov
mov
jecxz
or
mov
ret
xchg
popl
in
or
lock
outsb
out
in
leave
repnz
cs
encls
pop
repnz
pop
adc
cs
stos
js
jle
pop
dec
mov
lods
dec
aam
lds
lods
or
mov
mov
inc
sub
mov
jbe
jne
cltd
or
jno
stc
pop
mov
jne
pop
or
mov
mov
aam
cmp
jb
inc
bound
xchg
movsb
aam
jge
outsl
mull
insb
ret
jg
mov
push
stos
inc
jnp
jns
inc
repz
mov
scas
iret
pop
xor
lds
mov
f2xm1
lods
cmp
test
movsb
pushf
sbb
mov
into
ljmp
lock
or
int3
repnz
insl
mov
pop
jmp
cmp
xchg
jne
mov
enter
ja
movsl
push
or
andb
adc
cmp
mov
sub
add
in
adc
std
cmp
and
xchg
cmc
scas
xor
mov
call
mov
icebp
sbb
jle
cltd
clc
mov
cmp
mov
in
sbb
push
mov
mov
push
cmp
mov
lret
out
inc
orl
imul
mov
out
mov
pushf
inc
int3
mov
sbb
inc
push
jb
dec
psubq
push
mov
cld
out
stos
in
divl
pusha
mov
call
call
repz
insl
inc
jmp
mov
xor
dec
scas
pop
xchg
mov
cmp
push
inc
fldl
je
pushf
push
testb
sub
xchg
mov
cmp
xchg
xchg
lret
adc
cmpsl
push
inc
pop
in
xchg
pop
dec
mov
cld
aas
xchg
rcl
mov
out
lods
lret
daa
dec
mov
add
xorb
testl
js
mov
push
leave
adc
and
test
shlb
inc
mov
stos
rcrl
dec
pop
add
fndisi(8087
mov
shrb
pop
inc
and
dec
mull
out
mov
bound
pop
mov
fistl
cwtl
jp
cltd
sbb
leave
jle
xchg
mov
or
sbb
popf
fisttpl
sub
aas
fsubl
xchg
jbe
sub
sbb
and
int
jae
adc
mov
push
pop
je
leave
mov
pop
or
sbb
xor
in
outsl
pop
pop
dec
sub
mov
scas
out
fsubr
test
xchg
push
into
mov
dec
push
jle
movsl
mov
mov
and
and
push
jge
repz
pop
int3
negb
dec
jne
cmpps
xchg
lcall
sbb
int
or
movsb
mov
xchg
fs
lea
stos
sbb
sti
adc
adc
dec
mov
mov
dec
jp
mov
pop
sbb
call
mov
xor
xchg
ret
daa
push
push
and
xor
push
and
xor
lcall
xchg
add
mov
add
call
test
into
and
push
adc
xchg
sbb
jnp
mov
dec
mov
push
scas
mov
sub
outsl
imul
pop
push
jmp
lahf
cmp
rolb
aaa
outsb
push
inc
sbb
adc
rorl
lea
inc
xchg
sbb
iret
pop
xlat
pop
lcall
sbb
addb
aaa
cmp
icebp
pop
inc
subb
int3
cmp
sub
cmp
lea
push
inc
xchg
enter
stos
pop
add
add
push
je
fs
mov
add
and
leave
adc
lcall
sbb
sar
adc
imul
mulb
xlat
leave
inc
lahf
fstpt
scas
dec
cld
adc
in
mov
pop
das
sub
xchg
dec
pop
lds
stc
fildll
out
xlat
out
stc
in
and
movsb
adc
or
not
jecxz
fimull
mov
jl
dec
jp
aaa
shlb
sub
cmp
sub
push
hlt
mov
out
dec
mov
fisttpl
cmp
push
aas
cmp
jmp
popa
fs
aam
sub
aam
icebp
adc
inc
and
in
sbb
or
adc
cmp
lock
or
mov
add
inc
add
sbb
ret
jo
jg
incl
es
out
std
push
jnp
adc
or
dec
dec
and
cmp
add
fnstenv
inc
cmp
test
push
xchg
rorb
push
sbb
in
mov
sub
dec
jb
addl
call
or
sub
ss
push
call
sub
mov
cli
sahf
test
jle
lcall
pusha
testb
pop
test
sbb
push
lcall
pop
stos
andb
pusha
aad
or
xor
rcl
std
cmp
xorl
cld
popa
add
mov
mov
shll
rorl
sti
mov
aam
adc
or
cmp
popf
mov
inc
call
imul
jns
push
or
inc
push
sahf
arpl
push
les
jecxz
adc
ds
insb
add
std
sbb
push
pop
rcll
gs
in
sub
roll
push
jmp
fstpt
pop
jb
imul
je
jb
ds
rolb
cmp
icebp
cmp
bound
or
adc
aam
test
sarb
out
daa
in
or
fcompl
push
xchg
addr16
cmpsl
push
adc
int
in
fmuls
cmp
xor
fwait
je
testb
xor
pushl
shrl
mov
and
or
fsts
xchg
sub
cli
dec
and
sbb
pop
jp,pt
xor
xchg
adc
jmp
mov
sbb
inc
pop
jne
lds
roll
adc
popf
lcall
add
jmp
shrl
jmp
movsb
cli
gs
push
pop
daa
sbb
loopne
mov
inc
jle
mov
les
add
movsl
enter
test
icebp
repz
fsubs
sbb
cmpsb
mov
enter
pushf
mov
mov
pop
scas
sbb
fistps
jg
mov
dec
outsb
xchg
mov
sti
add
cli
add
push
arpl
xchg
xchg
cmp
mov
sbb
and
imul
push
imul
adc
mov
test
pop
dec
in
rorl
fldl
cltd
xchg
out
jno
pushf
inc
mov
decl
xchg
test
dec
mov
mov
mov
in
loope
inc
outsb
addl
cmpsb
fs
repz
push
sbb
lods
pop
sbb
scas
add
lods
lahf
sub
rclb
popa
mov
fsubl
mov
jg
es
adc
cmc
nop
aad
cwtl
fwait
jg
addl
dec
dec
pop
imulb
shl
in
lods
lds
call
js
js
adc
lahf
cwtl
scas
add
scas
addr16
sub
push
pop
hlt
adc
xchg
leave
aaa
mov
lock
mov
aam
shrb
pop
sub
repnz
loopne
or
cwtl
cmpsl
ss
out
dec
or
loop
xchg
sbb
cmpsb
enter
xchg
jbe
push
dec
stc
push
sti
insb
cmp
dec
clc
xchg
cmpsl
push
leave
mov
leave
cmc
adc
inc
sahf
dec
push
xchg
push
cli
or
ret
dec
pop
out
dec
lcall
fucomi
ss
orl
cmp
lock
outsl
sarb
sub
pop
mov
movhps
lods
sub
push
je
lock
scas
jge
mull
adc
jmp
ficomps
scas
xchg
cli
scas
jo
in
cmp
add
data16
stc
ficompl
stos
pop
movsl
sbb
test
insb
repz
adc
cmc
mov
mov
daa
insl
xlat
lcall
lahf
cmp
mov
dec
mov
es
cmp
xor
dec
enter
sbb
xchg
es
incb
pop
int3
mov
repnz
and
push
jg
cwtl
mov
push
into
sbb
add
xor
sahf
xor
gs
cmp
lea
push
adc
fildl
or
loopne
insl
in
sbb
adc
icebp
cmp
push
pop
push
iret
mov
mov
popa
lahf
add
pop
inc
adc
ss
aam
adc
adc
or
scas
push
test
sub
fisubrs
and
push
mov
enter
sub
xor
mov
sbb
xchg
add
xchg
or
mov
sahf
push
insb
add
inc
testb
or
inc
cs
mov
ds
dec
fs
popa
adc
mov
inc
lar
cwtl
mov
jp
or
ds
and
cli
mov
and
cltd
mov
adc
lock
ror
xchg
lret
mov
add
loopne
mov
inc
mov
cmp
pop
andb
mov
popa
popa
jno
and
mov
int3
addb
loopne
lds
insb
push
nop
mov
ljmp
test
sub
ret
jmp
jno
push
ljmp
push
cmp
mov
jle
pop
sahf
xchg
roll
add
sbb
aad
pop
test
pop
jp
test
aad
cltd
mov
add
stc
fmull
dec
repnz
or
aas
cmc
xchg
jae
lret
addr16
stos
xor
testl
mov
sbb
in
idivb
and
xor
mov
mov
jb
icebp
jnp
enter
lret
xchg
movsb
sbb
adc
shll
movsb
cld
test
movsl
add
aaa
ss
sub
ljmp
or
inc
stos
xor
hlt
sti
jmp
or
mov
test
push
push
mov
mov
or
movsb
jmp
lea
rcr
icebp
sub
jge
cmp
outsb
pop
std
xchg
fdiv
adc
sbb
inc
in
jecxz
jno
test
dec
aas
add
xchg
pop
mov
jb
in
xchg
and
push
xchg
and
iret
push
mov
das
sub
and
test
fstps
sbb
aad
mov
push
data16
pop
cmp
in
mov
cmp
daa
or
popl
push
mov
add
pop
loop
cmp
out
outsb
sbb
mov
adcl
sti
fnstenv
in
notb
mov
roll
idiv
mov
cmp
pop
cli
mov
stos
and
or
lret
cltd
xlat
jle
xchg
leave
push
stos
rcll
cmp
divl
insb
pushf
or
scas
inc
adc
push
repnz
adc
jb
mov
lods
add
add
sahf
dec
or
nop
jo
jl
cmp
jne
je
xchg
pop
cwtl
pop
loope
lahf
in
pop
inc
adc
mov
mov
xchg
ret
aam
push
cmp
mov
mov
js
sub
mov
sub
xchg
or
dec
jb
mov
out
call
sbb
dec
nop
test
psubusb
dec
pop
in
xchg
pop
push
movsb
xchg
cmp
nop
dec
aas
loop
jmp
cltd
dec
shlb
shlb
cmpsb
fsubl
loopne
inc
dec
xor
shll
ss
in
dec
stc
rolb
xchg
sub
test
in
scas
mov
push
xchg
sub
pop
mov
jo
pop
dec
cld
loop
test
cmc
dec
push
dec
ret
mov
mov
xchg
test
and
cmpsb
jmp
sahf
js
ficoml
inc
mov
icebp
xchg
fisttpll
divl
push
movsl
ffreep
cmp
dec
pop
mov
mov
push
adc
inc
cmc
addb
sbb
jecxz
jno
dec
and
add
dec
idivl
dec
jp
pop
sub
cmp
and
inc
in
pop
add
in
scas
dec
dec
bound
aaa
cmc
int
mov
and
lods
push
cwtl
push
mov
add
xlat
fs
xchg
xchg
pusha
inc
gs
ret
xor
test
xor
adc
xor
mov
popa
and
mov
clc
or
sarl
dec
mov
cltd
mov
test
scas
fimuls
mov
lods
push
sbb
notl
adcb
lcall
or
ds
cmc
daa
mov
movsl
inc
lods
mov
dec
roll
sub
add
into
fisttps
movsb
xchg
xchg
sbb
ljmp
scas
jecxz
das
mov
das
push
dec
jge
das
test
lret
mov
std
push
jl
test
push
imul
icebp
lods
or
mov
out
mov
xchg
push
je
xor
mov
aas
and
xchg
icebp
mov
cwtl
push
push
xchg
mov
rcll
or
jnp
xchg
xor
gs
mov
mov
xlat
arpl
je
cmp
int3
sub
sub
call
jmp
or
dec
cli
fcomps
xor
lcall
or
icebp
mov
dec
add
push
cld
mov
mov
ljmp
xchg
in
mov
jle
fcmovnu
hlt
data16
pop
cmpsl
pop
sahf
fistps
sub
push
xchg
fld
jb
pop
or
addr16
lock
les
jge
test
jl
inc
sub
stos
mov
int
mov
inc
mov
ljmp
xor
test
jle
jne
popf
push
mov
jg
add
fimull
scas
jp
sbb
sub
jle
jno
stos
loopne
adc
pop
xorl
mov
jmp
jae
cmp
fwait
push
mov
mov
call
sbb
mov
cmpsb
cwtl
iret
dec
cmp
mov
dec
jno
cmp
call
jbe
xor
dec
adc
jbe
in
sbb
xlat
jmp
inc
jl
pop
or
call
mov
mov
mov
cmp
mov
dec
inc
or
call
sti
cld
cmp
sti
movsl
fwait
sub
int3
sbb
mov
xor
sbb
cmp
mov
je
lcall
fimuls
dec
pop
dec
cmpsb
adc
fwait
jmp
in
pop
enter
sti
jg
dec
in
popf
call
pop
xchg
mov
int3
add
jb
xor
ret
push
lret
adc
jo
adc
sbb
or
rorl
rcll
aaa
jnp
in
loopne
shll
fists
rcrb
pop
xchg
rep
add
js
or
dec
sbbb
fs
sub
test
pushf
mov
pop
jo
jg
test
dec
aaa
dec
movl
jmp
dec
pinsrw
inc
fisttpl
xlat
ficoms
sub
shufps
fisubs
sarl
lret
or
sbb
pop
cltd
movsl
imul
bound
sub
test
out
shll
jg
fists
push
mull
lcall
push
repnz
aad
movsb
test
push
lcall
mov
xor
cmp
cli
sub
stos
xchg
mov
addr16
mov
scas
xchg
scas
inc
out
push
shrl
push
inc
jns
xor
outsl
jp
and
and
pop
cmp
shrb
fidivrl
xchg
out
or
pusha
out
mov
fdivl
mov
sub
loop
mov
jle
pop
mov
pop
and
int3
in
nop
or
js
sub
add
outsb
test
jb
push
jle
gs
loop
sahf
mov
incl
xor
imul
loopne
out
push
orl
leave
cmp
test
mov
mov
and
xchg
xor
xor
sahf
in
imulb
mov
dec
cmp
xor
push
cmp
xor
push
jns
int3
insb
inc
and
hlt
loopne
std
inc
pusha
mov
mov
call
add
rolb
push
pop
xchg
filds
inc
jne
mov
std
in
addr16
out
push
jl
sub
mov
cmp
pop
lock
inc
jmp
test
pop
test
ret
lret
in
xor
addr16
lock
and
sbb
les
xchg
lods
adc
push
push
ja
or
pop
jl
imul
push
push
mov
xchg
loope
push
ficomps
push
jmp
mov
or
dec
inc
loop
int
test
fdivrs
cwtl
test
sahf
and
jp
nop
sbb
push
movsl
bound
and
xlat
inc
and
push
shl
push
inc
or
mov
insb
cmpsb
mov
xorl
lods
or
mov
push
adc
xorps
fsub
loopne
aas
rep
iret
cmpsb
or
inc
adc
daa
lds
pop
and
lds
mov
mov
adc
mov
jg
out
outsb
movsl
jp
lods
sub
in
inc
push
fisubrl
aam
pop
inc
push
inc
movsl
movsl
test
jecxz
pop
inc
dec
or
jg
mov
call
cmp
movl
xor
and
inc
leave
and
and
stc
fsubs
cmpb
popf
add
sub
jne
mov
enter
mov
popa
enter
jno
cmpl
hlt
bound
lock
push
inc
and
adcl
fbstp
add
inc
sbbb
imul
fs
dec
fwait
push
add
mov
insb
jle
js
ror
mov
pop
testl
xor
jmp
ret
jmp
cmp
sbb
mov
out
mov
jge
mov
xchg
add
jnp
adc
xchg
faddl
pop
pop
aaa
popf
outsb
aam
xlat
out
lods
mov
push
mov
jb
mov
jnp
gs
sub
lret
jo
xor
cmpsb
sbbb
push
lret
sub
jae
scas
add
sbb
jp
xchg
je
push
xlat
mov
jo
loope
xchg
dec
cltd
adc
pusha
cmpsb
nop
sbb
or
xor
sbb
xor
dec
outsl
hlt
jb
lcall
or
jmp
mov
cld
sub
mov
push
add
hlt
jp
sub
pushf
mov
in
inc
insb
das
or
push
in
push
mov
mov
js
or
push
push
in
mov
ja
pop
int3
mov
out
aaa
call
addr16
sbb
aam
adc
inc
rorl
pop
loop
pop
push
mov
sub
in
jle
sbb
xchg
jnp
out
ror
sbb
inc
lret
fcoml
lods
fcompl
jnp
sbb
repz
packssdw
sub
test
movsl
adc
pop
mov
mov
push
or
ja
and
test
std
mov
xchg
push
push
xor
cs
mov
daa
adc
int3
inc
and
out
push
stos
or
addl
popf
pop
mov
out
mov
adc
mov
test
sub
or
sub
pusha
in
mov
sbb
push
mov
out
push
pop
sub
mov
scas
xchg
ja
push
divb
cmp
mov
and
mov
subl
sub
jb
pop
das
xchg
std
bt
jb
push
adc
dec
sbb
or
jo
mov
sub
mov
popf
in
test
push
loopne
mov
push
add
popa
pop
push
jg
xchg
and
dec
jp
jns
add
incl
ret
cmp
clc
xor
cmc
cmp
fbstp
and
rolb
inc
lret
out
jmp
scas
mov
cltd
fidivs
pushw
adc
jmp
jbe
mov
mov
mov
mov
rclb
mov
push
cmpsb
push
mov
jo
in
lahf
xor
lret
mov
sbb
shll
movsb
das
aad
or
in
in
pusha
andb
mov
xor
stos
sbb
stos
adc
dec
xchg
push
add
sub
int3
in
inc
xor
mov
mov
call
into
adc
mov
sbb
popa
shl
call
push
test
add
cmc
sbb
adc
mov
sub
cmp
adcb
mov
popa
adc
sub
sahf
inc
int3
out
pop
outsl
push
cwtl
aad
adc
fwait
inc
adc
lcall
sbb
and
jmp
cmp
subl
push
aam
addl
lock
cmc
sahf
mov
mov
mov
out
test
test
pop
cmc
and
sbb
outsl
adc
push
xchg
sub
bound
dec
sbb
fwait
xor
daa
mov
cmp
jmp
lcall
ret
shrb
push
lds
outsl
les
pop
pop
fstl
lret
popf
ja
stos
lods
loop
pop
fwait
stos
sub
hlt
jae
inc
test
and
popa
notl
mov
cmpsb
add
or
call
fcmovnbe
aam
jmp
call
jo
cltd
iret
jle
shrl
int
jae
lret
jb
sbb
mov
sbb
ret
add
add
test
jbe
jbe
rcll
clc
jecxz
ljmp
xchg
sbb
fistpll
out
pop
mov
adc
test
addr16
cmp
fs
cmp
les
daa
or
adc
pop
in
cmp
mov
mov
and
cmp
int
fistpll
cmpsl
or
aad
subl
shlb
jmp
ja
mov
loop
ret
push
pop
insl
mov
test
clc
fwait
push
in
lret
out
sub
mov
and
jne
mov
fistpl
pop
int3
lds
repz
hlt
in
mov
incb
adc
sub
sbb
jnp
sbb
into
sahf
sbb
ss
sbb
add
push
out
push
ffree
push
xchg
push
add
int
addl
call
jae
in
test
sahf
xchg
pusha
in
lret
sub
mov
stos
jmp
aaa
push
xor
lock
fnsave
ret
or
pop
or
xor
ds
mov
pop
push
and
xchg
add
cli
jp
add
lahf
pop
or
rcrb
pop
dec
mov
testl
data16
mov
imul
fsubl
js
add
popa
lcall
xchg
lock
inc
xor
cld
jae
cmp
ficomps
xchg
or
xchg
mov
inc
shl
mov
jb
jnp
or
sub
push
pop
repnz
push
repnz
sbb
pop
xchg
cmpsl
dec
aam
inc
iret
push
ret
push
push
scas
hlt
fsubl
adc
addr16
sub
xchg
xchg
loop
add
ret
xchg
out
fsubrs
and
lods
or
jl
les
xor
or
mov
sub
and
add
loopne
mov
call
inc
repnz
ja
sub
pop
mov
and
mov
mov
xor
mov
jb
mov
push
xchg
sub
xchg
pop
addr16
shrb
into
les
mov
add
ja
jo
es
std
cmp
pushf
adcl
sti
xchg
jg
fld
fxch
pop
sub
imul
loopne
movsb
add
adc
or
jae
cli
shlb
mov
cmpsb
stos
or
inc
fmuls
inc
xchg
daa
cli
mov
cmpl
xchg
inc
movsb
adc
push
fld
cli
adc
mov
fldenv
push
and
sub
faddl
lret
mov
push
lods
stos
mull
out
adc
lds
iret
call
push
leave
jle
imul
xor
or
sbb
xor
rcll
mov
pop
dec
out
ds
jg
enter
xchg
insl
enter
or
int3
dec
iret
insl
adc
xor
and
push
cmp
jge
int3
into
mov
cmpb
mov
iret
xchg
push
add
sub
ss
repz
pop
jbe
outsl
inc
push
sbb
gs
inc
jmp
add
jae
ss
movsb
cmpsb
rorb
or
xchg
push
cs
fmul
jbe
test
sbb
int
dec
outsb
cmp
push
cli
insb
mov
jbe
in
mov
mov
sub
test
xchg
dec
or
movb
jecxz
lcall
push
jb
dec
xchg
sbb
dec
std
addr16
lahf
stc
sub
insb
pop
push
int3
clc
push
mov
cmp
in
xchg
xchg
sbb
jmp
rcr
sbb
fdivr
stc
cwtl
pop
xor
xor
cli
mov
movsl
xchg
imul
fucomip
dec
repnz
dec
cmp
or
lcall
lcall
aad
imul
out
daa
das
rclb
cwtl
in
xor
or
pusha
jns
pop
lret
popa
mov
mov
fsubrs
sbb
ret
fs
push
and
test
call
inc
sub
out
punpckhdq
loopne
xor
mov
test
xor
jno
dec
push
ss
test
gs
sub
rorl
mov
add
cwtl
leave
out
pop
push
dec
or
cmp
movsb
or
sbb
mov
xor
ljmp
xchg
out
cwtl
mov
lea
xor
push
mov
scas
pop
dec
inc
push
loop
xchg
xor
mov
cmp
sub
sub
out
int3
lahf
push
add
sub
fadds
or
daa
mov
popf
push
xchg
lods
lret
mov
jno
pusha
xchg
mov
out
cmp
aam
xor
js
enter
es
out
daa
add
mov
into
or
inc
or
and
sbb
iret
arpl
add
sub
jle
xor
adc
loop
adc
or
dec
dec
hlt
xchg
mov
movsl
test
dec
and
cmp
jae
jg,pn
or
pop
aam
loopne
push
sbb
sbb
test
sti
inc
mov
inc
mov
sti
les
jl
jp
pop
push
roll
dec
clc
push
rcrb
xlat
scas
dec
xchg
xchg
es
cs
pop
pushf
xlat
lcall
adc
or
jl
jae
mov
fstps
outsb
sbb
sbb
idivl
clc
cwtl
cmp
std
and
into
push
es
and
jae
add
repnz
scas
sbbb
fwait
mov
dec
add
add
cs
or
sti
clc
sub
cld
clc
add
inc
inc
xchg
js
adc
shl
xorl
lea
idivl
scas
add
or
mov
jnp
push
mov
xchg
pop
xorb
test
and
cwtl
jmp
xor
js
adc
cld
jns
cli
mov
cmc
xor
xchg
daa
out
rclb
and
mov
loopne
and
shlb
icebp
fsubl
xor
adc
aas
mov
call
adc
jg
pop
clc
xchg
sub
jecxz
pop
and
dec
test
ror
pop
das
fwait
mov
int3
pandn
dec
mul
rclb
mov
push
loopne
push
xchg
iret
xchg
mov
push
enter
mov
bound
lret
sbb
inc
inc
adc
out
loop
std
inc
fsts
cmpsb
in
jns
movsb
cmp
outsl
sahf
cmc
fcomi
pop
dec
rorl
outsb
xchg
lahf
pop
cs
mov
pop
ret
jecxz
push
ficoml
test
jge
sti
mov
adc
cmp
cmp
mov
sbb
mov
mov
rorb
pusha
sub
test
dec
lods
idivl
mov
jp
cli
cwtl
push
add
adc
xchg
shl
dec
push
enter
xor
dec
xor
pop
add
lea
inc
sbb
mov
mov
add
mov
loopne
movsl
loope
and
int3
scas
mov
dec
popa
loop
inc
mov
or
ljmp
inc
push
or
cmc
and
pusha
mov
fildll
pop
fbld
xchg
and
mov
lcall
push
jbe
loope
or
js
push
mov
cmp
fistpll
sub
or
mov
and
iret
dec
lahf
inc
hlt
pop
arpl
clc
mov
aam
jb
adc
hlt
xchg
call
push
pop
in
xor
sahf
lds
mov
cmc
push
xor
jo
jecxz
adc
adc
rcll
adc
rcrl
jb
mov
xchg
insb
out
xchg
xchg
sti
inc
and
inc
jecxz
add
or
test
xor
dec
lods
adcb
and
mov
jmp
jne
jb
push
sbb
sub
add
test
aad
add
add
je
cmpsb
jae
imul
ret
lahf
mov
inc
push
sub
xchg
mov
sub
nop
add
pop
mov
in
jp
cmp
scas
and
inc
inc
mov
sub
data16
scas
dec
imul
dec
mov
mov
loope
pop
popa
mov
push
jnp
lret
sti
lods
inc
scas
push
lods
dec
sub
fisttps
mov
xor
ja
clc
mov
pusha
pop
stos
jae
dec
adc
or
clc
mov
aam
iret
jnp
sahf
into
fdivl
int3
add
sbb
ficoml
repz
mov
push
into
loope
test
js
idiv
sub
xchg
dec
adc
xchg
divps
mov
jmp
push
movsl
push
add
enter
jg
insl
aad
cmp
in
pop
ret
int3
inc
aas
movntps
mov
in
mov
insb
aaa
mov
pop
dec
sub
jns
pop
dec
jno
aas
jns
mov
movsb
mov
cmp
jne
lret
rcrb
dec
fsts
pop
push
gs
in
pop
pop
shrb
xchg
and
in
lret
js
pop
pop
fwait
rcll
mov
xchg
fistps
ret
cmp
lock
sar
pop
jae
add
iret
rorl
arpl
in
xor
in
add
bound
mov
or
dec
rcr
mov
sub
xor
das
xor
inc
pop
inc
lods
xlat
int3
pop
xchg
lsl
test
add
pop
jae
dec
fwait
push
movsl
jo
adc
jp
jecxz
rcrl
xchg
sbb
jl
out
mov
call
cmpsb
ds
mov
xchg
scas
insb
mov
pop
lods
mov
pop
cmp
mov
fmul
js
pop
pop
ficompl
adc
or
andl
imul
fisubl
cmp
mov
aaa
incb
pusha
xor
enter
lods
or
lods
or
ljmp
mov
jo
call
ret
int
fisubrl
js
testb
jo
pop
jp
or
mov
inc
mov
pushf
xchg
sbb
pop
dec
into
xlat
mov
incb
call
into
outsb
xlat
test
aaa
clc
clc
jle
movsl
cld
add
hlt
xchg
dec
push
imul
stos
xchg
cmp
mov
push
rcl
stos
shll
lea
mov
mov
es
dec
frstor
lcall
pop
adc
loop
pushf
mov
cmc
sbb
cmp
push
fistpl
add
js
push
or
lret
gs
addr16
fsubrl
mov
popf
pop
call
pop
popf
mov
cmpsl
xor
movsl
xchg
out
daa
rol
jbe
sti
rorl
push
push
sti
cli
mov
pop
sub
cmpsl
sub
arpl
out
pop
mov
mov
add
mov
cvtps2pi
pop
jo
lds
clts
xchg
addb
aas
cltd
dec
je
divb
xchg
pop
mov
push
mov
call
or
arpl
arpl
rcl
test
push
jbe
pop
xor
in
repnz
inc
ret
loop
test
lcall
loope
fucomp
jnp
cmp
sahf
sbb
mov
pop
outsb
ja
loope
cmp
push
insb
push
jne
add
imul
xchg
cmpsl
xchg
dec
xor
loop
dec
mov
mov
shrb
cmp
inc
cmp
cmp
jbe
add
mov
stc
bound
sub
in
mov
fs
dec
sbb
or
mov
stos
daa
lods
pop
pop
nop
xchg
mov
xor
inc
lock
fnstcw
push
sti
sub
add
adc
mov
and
jg
cli
push
pop
lds
dec
lods
push
lods
dec
testb
xchg
sub
dec
iret
enter
lret
lods
sbb
sbb
lock
xor
sahf
cld
loopne
testl
mov
xchg
jns
cwtl
jns
push
loop
jns
adc
fcmovbe
pop
call
or
or
jno
std
mov
hlt
iret
inc
pop
scas
ss
add
add
add
xchg
mov
int3
xchg
movsb
sahf
mov
fldenv
popf
jg
into
pop
pop
cmp
icebp
sub
dec
sbb
add
mov
add
mov
mov
orb
bound
jmp
imull
mov
mov
push
mov
jns
cmpsb
ret
out
jecxz
xlat
fbld
enter
out
jo
shrl
push
andl
pushf
xor
pop
cmpsl
push
and
or
loope
sub
aas
test
sub
xchg
sarb
adc
pop
lea
sti
cli
xchg
enter
add
mov
push
leave
mov
dec
out
xor
dec
jbe
xchg
mov
push
imul
dec
jne
scas
push
sti
cli
fadd
test
lds
lods
inc
mov
push
or
out
inc
shll
sbb
or
test
aaa
sti
cmp
nop
or
fisubrs
pop
mov
test
int
pop
popf
das
sub
adc
mov
xor
jo
aam
dec
pop
test
lods
sti
aas
push
imul
lret
mov
aaa
lea
or
jl
cmp
test
aam
mov
cld
int3
ret
movsl
xchg
push
out
aas
imul
sarl
inc
xor
rcrl
jne
sub
fwait
inc
push
test
decb
or
rorb
mov
jo
xchg
repz
mov
xchg
cvtdq2ps
inc
mov
out
ss
inc
decb
ja
jge
call
xchg
sub
jg
popf
cmp
ja
lret
mov
push
stos
ljmp
jns
scas
pop
pop
jecxz
movsb
xor
inc
negb
std
mov
lret
dec
pop
cmp
std
adc
mov
add
adc
lcall
push
mov
gs
insl
mov
add
sbb
pop
fmuls
insl
push
mov
clc
sub
andl
ja
js
std
mov
sbb
dec
rolb
sbbl
jae
pop
ljmp
adc
lret
es
or
in
xorl
rcr
dec
cli
push
push
in
push
ds
jle
mov
test
not
icebp
rorb
lds
sahf
fdivr
cmp
inc
push
cs
adc
add
movsl
aam
inc
lock
adc
popa
dec
xor
lret
call
xchg
xor
sub
call
clc
adc
mov
adc
shr
fists
aad
loop
imul
stos
sti
mov
push
mov
pop
xor
insl
and
cmpsb
dec
negb
pop
cmpb
subb
outsb
cmp
pop
shll
lea
ret
cmpsb
mov
sub
fmull
aad
jp
mov
sub
test
mov
andl
das
xchg
in
lds
push
or
mov
mov
pop
push
inc
mov
idivb
icebp
mov
mov
push
inc
jl
jecxz
out
inc
jo
fs
lret
and
sub
inc
dec
dec
orb
test
rclb
add
xchg
shrl
adc
clc
cmp
sbb
sub
test
mov
dec
push
aas
push
xor
and
add
adc
cli
rolb
lea
pop
and
ret
pop
pop
dec
sub
push
stos
fnstenv
jne
into
and
mov
sbb
lds
pop
cvtdq2ps
or
push
mov
sub
jmp
push
xchg
ja
push
pop
inc
ds
das
repz
push
sti
out
pop
cmp
nop
xor
xor
loope
ds
scas
mov
leave
push
nop
loop
inc
pop
lret
inc
sbbb
js
dec
inc
jg
adc
push
add
or
loope
ret
mov
sti
mov
pop
adc
icebp
xchg
sbb
rorb
sarl
push
push
inc
aam
jg
and
and
add
add
lock
je
jbe
jb
mov
xor
push
cmp
inc
add
dec
test
jo
lds
adc
mov
loop
sbb
mov
sub
sub
pusha
cmp
aam
int
adc
ljmp
mov
sbb
mov
sahf
adc
add
stc
fdivrs
orb
loopne
xchg
test
and
inc
out
movsb
dec
es
aas
add
dec
scas
mov
inc
pop
imul
idivb
mov
test
or
popf
fwait
sub
ds
adc
mov
mov
or
jecxz
jmp
loop
loopne
imul
ficompl
hlt
or
scas
aad
dec
inc
popf
inc
sbb
cld
xor
lret
pop
rorl
ljmp
int3
call
sbb
or
ss
sub
inc
sbb
addr16
mov
out
bound
lret
addr16
into
push
push
mov
xor
sbb
push
xor
clc
je
sub
inc
sub
insl
dec
aam
pop
test
add
lahf
das
cmp
sub
xor
nop
jge
in
xor
jp
adc
gs
ret
and
imul
outsb
dec
aas
ret
lods
pop
repnz
cmc
push
lcall
and
sub
loop
insb
adcb
or
loope
arpl
mov
icebp
mov
pop
popf
pop
in
fucom
ret
and
jge
data16
addr16
cmpb
sets
cs
pause
push
sbb
aam
repz
or
test
cmp
shll
jg
gs
sub
jns
int3
mov
imul
cmc
inc
smsw
xor
nop
ljmp
lcall
sub
lock
insb
out
aad
les
lods
sti
insl
test
xor
push
sub
popf
xor
inc
xor
jmp
iret
sbb
mov
jle
push
scas
fnstenv
ss
cmp
xchg
dec
sti
add
jmp
movsb
cli
ret
push
sub
pop
aaa
xor
mov
cmp
cmpsl
xchg
and
jle
sti
push
pushf
sbb
gs
jp
flds
xchg
fwait
stos
inc
mov
mov
das
xchg
jmp
mov
bound
mov
dec
popf
xchg
aam
xchg
jne
les
push
fsubs
mov
rorb
aam
push
stos
es
inc
daa
cmpb
push
inc
or
sar
clc
mov
mov
ja
xorb
fcoml
jns
or
or
sbb
ljmp
in
mov
dec
rcr
call
lea
mov
push
out
xchg
das
mov
mov
mov
ljmp
shl
xchg
movsl
mov
lods
mov
pop
add
add
cmp
push
push
sbb
mov
jle
lods
sub
mov
lods
dec
sahf
push
lods
push
cmc
mov
inc
or
je
sub
pusha
popa
xor
cmp
cmp
popf
mov
icebp
std
inc
out
pop
addr16
mov
cltd
push
mov
js
sub
loopne,pn
jl
dec
cltd
push
leave
mov
add
ljmp
sub
loope
cli
xchg
push
pop
bound
ss
or
bswap
adc
into
dec
adc
jmp
out
mov
sar
xor
dec
cwtl
icebp
sub
and
lcall
ficoml
and
out
sahf
or
nop
cld
stos
cwtl
xchg
push
and
xchg
add
jge
stos
iret
and
push
int
push
xchg
adc
cmp
hlt
cli
push
cmp
cmp
mov
or
daa
jae
or
incl
imul
dec
sub
and
jge
xlat
loope
mov
or
stc
addr16
iret
clc
or
js
and
cmp
test
jp
xchg
dec
jl
ja
pop
call
push
shlb
rol
cmp
jae,pn
add
add
fcoms
jge
test
inc
sbb
outsb
sarb
xchg
cwtl
pop
insl
cltd
inc
sbbl
outsb
into
adc
cli
or
adc
and
fimull
out
iret
mov
add
cld
int
pop
adc
mov
or
dec
fmuls
addb
das
pop
rorb
cmp
adc
sbb
fs
cmp
jp
test
mov
adcl
adc
cs
adc
push
filds
inc
inc
mov
mov
dec
imul
out
adc
andl
imul
jne
mov
push
aaa
xchg
shr
xchg
inc
pop
cmpsl
or
arpl
clc
lock
std
mov
test
jb
cmp
repnz
sub
push
mov
pop
mov
pusha
cwtl
mov
fisttpll
das
cli
jge
fisubrs
repnz
js
call
out
cli
push
xchg
lahf
hlt
addl
loopne
jecxz
mov
imul
push
push
call
jo
adc
dec
jge
out
or
and
int
cmp
adc
jnp
bound
idivb
cmp
fs
mov
imul
dec
fisubrl
je
incb
cmp
mov
xor
fisubl
sysret
movsb
sub
div
or
fstl
sub
lret
xchg
jg
push
rcrl
repnz
lods
sub
xorl
xchg
lock
inc
inc
xchg
scas
in
jecxz
gs
mov
add
imul
cltd
sbb
or
lods
jo
ret
mov
xchg
mov
jge
inc
or
bnd
inc
sbb
push
cwtl
add
inc
outsl
ds
jle
hlt
repz
xor
dec
mov
dec
or
add
repnz
jno
xorb
jae
pop
mov
sbb
or
pop
js
cs
imul
mov
pop
push
pop
arpl
cwtl
dec
rcrl
adc
sbb
insw
jo
bound
daa
clc
mov
mov
mov
arpl
jnp
cli
dec
inc
nop
cld
push
fidivrs
sbb
mov
push
test
out
daa
ja
jo
add
jle
add
das
in
mov
outsl
in
dec
push
lock
pop
out
imul
in
and
dec
xor
jne
or
dec
pop
iret
lds
je
mov
and
pop
in
sbb
inc
testb
pop
xchg
sub
aas
mov
pop
into
dec
push
ss
lret
add
iret
mov
in
xor
fnstcw
and
sbb
inc
mov
add
jo
add
adc
dec
fbstp
pop
test
fdivs
inc
xor
sub
test
mov
movsb
mov
sub
jg
mov
inc
sti
xor
xor
add
xchg
into
jge
loopne
or
inc
jl
test
sbb
rol
imul
shlb
dec
dec
mov
jbe
cltd
js
add
jne
pop
test
xor
ljmp
aas
cmp
jle
insl
movsl
sbb
icebp
adc
adc
sub
mov
or
sbb
loop
pop
cmp
xor
fcmovnbe
dec
push
dec
repnz
leave
aas
add
ds
jmp
jnp
in
cmc
add
cmp
test
movsl
jle
pusha
adc
test
or
loope
sti
stos
or
mov
shr
fidivs
mov
xchg
subb
cmp
enter
pop
insb
addr16
sbb
add
sbb
xchg
push
mov
xchg
in
dec
mov
mov
int
xchg
outsb
mov
in
push
mov
adc
stos
push
dec
push
add
popf
mov
jge
outsb
or
jle
mov
stos
cld
sbbl
cmpsb
aas
or
mov
xchg
fildl
add
sbb
xchg
out
inc
mov
adc
mov
stc
xchg
imul
inc
pop
mov
fsubs
jg
lcall
loopne
sbb
dec
sbb
xchg
adc
sub
adc
aas
sbb
rcll
popa
sti
dec
fldt
dec
add
push
int3
mov
fcmove
push
add
fs
cmp
icebp
inc
and
pop
mov
pop
insb
jbe
fdivl
mov
sub
hlt
ficoms
out
dec
dec
push
sub
jmp
fs
jae
out
cmp
or
xor
leave
pop
negl
jnp
fisttps
loop
pop
sbb
add
ret
mov
pusha
hlt
adcl
int3
push
xlat
mov
mov
imul
mov
in
ss
aam
xchg
add
add
sub
xor
mov
mov
imul
call
nop
fs
and
sbb
push
cmpsl
subl
shrl
mov
add
call
inc
lret
xchg
stos
out
mov
inc
push
test
rcll
ret
xor
cmpsl
cmpsb
roll
push
dec
out
xlat
mov
fldl
leave
outsb
push
xchg
test
push
adc
jge
scas
fistps
lock
inc
pushf
or
pop
push
sti
mov
mov
mov
in
movsb
mov
jae
fadd
mov
aad
push
ret
mov
and
sbb
push
roll
jge
roll
jecxz
xchg
push
cmp
stc
mov
lahf
sbb
dec
into
xchg
dec
in
adc
fstpl
mov
in
or
test
add
mov
in
and
test
xor
sbbb
inc
mov
jmp
shlb
pop
inc
test
mov
jmp
cmpsl
loop
xchg
hlt
pushw
adc
int
bound
repz
adc
rorl
stc
push
add
inc
sbbb
pushf
jmp
ficoml
pop
and
xor
jp
pop
mov
cmp
sbb
test
shrl
out
push
mov
xor
dec
repz
mov
cld
mov
inc
int
mov
sub
xor
gs
jge
adc
jl
loop
mov
xchg
adc
pop
stos
pop
addb
ret
adc
inc
enter
push
jo
inc
sub
icebp
push
inc
sbb
dec
mov
test
je
rorl
cmp
sbb
dec
or
xorl
in
pop
and
jne
mov
cmp
adc
leave
xchg
arpl
lret
inc
sbb
movsb
lret
sub
aam
jb
adc
push
inc
insb
adc
les
cmp
jmp
inc
mov
and
fdivrl
pop
aaa
bound
sahf
les
inc
loop
dec
cltd
xchg
je
mov
out
mov
fbstp
aad
or
test
movsl
fcmovne
dec
or
pushf
pop
cmpsl
mov
daa
sub
in
sub
push
rcll
test
test
pop
xor
push
mov
sahf
or
jbe
call
mov
xor
int3
mov
sbb
lret
fsubrp
outsb
imul
mov
lahf
dec
test
ds
fisubrl
rorl
mov
pusha
push
imull
mov
adc
pusha
jge
add
das
and
mov
in
ret
adc
xor
ficoms
ds
add
popa
mov
outsl
daa
addl
push
daa
xor
mov
out
pop
ss
shll
sbb
repnz
pop
sti
repz
add
iret
mov
and
sbb
mov
lret
add
mov
imul
inc
sub
les
imul
pusha
cmp
pushf
arpl
push
inc
push
jno
aad
cmpsb
mov
xchg
imul
std
mov
dec
mov
setnp
les
outsb
adc
xacquire
and
push
adc
cmp
mov
incl
sahf
mov
sbb
pop
xlat
or
stos
fsubrs
adc
addr16
mov
jge
ret
jo
adc
scas
jmp
stos
aaa
adc
shlb
cmp
int
fimuls
xor
push
cmp
sbb
enter
push
fdiv
or
pop
outsb
and
pop
jno
aas
jno
iret
mov
pop
inc
pop
cmp
push
mov
fmul
cmc
ret
mov
push
add
add
pop
xor
adc
cmpl
adcl
jecxz
inc
fs
inc
dec
fwait
xchg
mov
aas
inc
mov
cwtl
ret
cmp
jb
dec
mov
loop
dec
pusha
pop
pop
sub
pop
push
sbb
mov
sbb
mov
and
idivl
push
or
sub
inc
xor
loop
dec
imul
sti
movb
cmp
rorb
xor
out
das
dec
or
aas
fwait
mov
popa
shrb
ljmp
sub
jns
push
sub
out
jg
sub
and
pop
sub
fisubrs
mov
and
dec
mov
imul
push
xchg
movsb
adc
in
adc
iret
inc
xor
mov
or
cmp
jl
in
insb
fnstcw
xchg
insl
jmp
sub
jo
insb
popf
aad
scas
mov
push
mov
cmp
xchg
ror
test
mov
addr16
jecxz
jb
inc
fcompl
aas
jecxz
push
and
pusha
ds
mov
je
adc
arpl
js
cwtl
gs
or
xchg
test
mov
inc
ss
jo
fisubs
mov
xor
jbe
cmp
fidivs
lea
mov
addr16
and
adc
in
cwtl
mov
mov
dec
pop
stc
aaa
stos
loop
xorl
mov
ljmp
andb
xor
inc
movsl
shlb
in
mov
dec
sbb
xchg
imul
sbb
sub
popa
lea
or
cwtl
mov
and
or
pop
pop
mov
out
lods
ljmp
inc
imul
jbe
xchg
je
sub
jno
jo
pop
adc
imull
loopne
jmp
in
orl
out
in
inc
mov
lahf
filds
shrb
out
sbb
dec
cmp
lock
push
sbb
mov
push
into
repz
lcall
mov
adc
dec
aad
cmp
and
cmp
cld
fs
sub
dec
mov
popa
pop
cmp
inc
xchg
cmp
and
jecxz
sub
adc
lahf
movsb
or
mov
das
mov
or
jo
aad
bound
icebp
rcr
test
iret
imul
jnp
out
fwait
pushf
xor
dec
sub
cmp
cmpsb
cmp
push
pop
push
push
sbb
jo
movsb
loop
shll
push
adc
cli
sbb
cmp
fnstcw
cmc
std
adc
inc
sub
push
rorb
pop
adc
xor
paddsb
jno
and
add
pop
jl
clc
in
add
mov
cmp
xor
mov
adc
xchg
xor
movsb
mov
sahf
mov
sbb
cwtl
sub
sbb
repnz
sbb
in
mov
jge
pop
or
add
les
idivb
stos
popf
sbb
bound
fs
hlt
aam
mov
jp
stc
dec
daa
lahf
lea
iret
inc
mov
or
test
je
arpl
fists
test
xchg
incl
jns
cbtw
rcll
out
and
mov
inc
jne
loop
std
cld
mov
outsl
sub
adc
add
jl
jno
shrb
jb
lock
lods
inc
or
dec
xchg
cmp
inc
xor
dec
insl
push
leave
push
lea
add
and
int
mov
idiv
xchg
cmp
daa
or
in
jo
add
lret
pop
ret
xor
sti
inc
lods
push
add
jae
lcall
pop
rclb
les
in
lods
dec
push
movsb
adc
inc
lods
and
pop
fstpl
sahf
adc
adc
jno
sub
add
push
or
cld
roll
inc
int3
into
sbb
mov
xchg
pop
sub
dec
shlb
add
mov
jo
int
push
jb
and
jmp
cmp
adc
dec
shr
cwtl
mov
stc
mov
or
psllq
icebp
jle
dec
mov
jl
popa
jge
jae
daa
loope
dec
repnz
rcl
mov
inc
hlt
jbe
dec
fdivl
mov
mov
inc
loope
fs
out
sbb
in
test
cmp
mov
pop
pop
fildl
jg
repnz
cld
imul
dec
outsb
in
inc
outsb
dec
lret
fsts
push
sbb
loope
mov
sbb
in
repnz
pop
xchg
loopne
pop
cs
xchg
insl
dec
hlt
daa
sbb
mov
imul
jge
xor
or
enter
xor
adc
imul
inc
mov
sti
push
add
jbe
imul
rclb
xlat
inc
in
mov
cmpsl
addr16
xlat
out
pop
add
push
xor
mov
imul
fnstsw
and
idiv
and
cmp
stos
xchg
das
xchg
mov
jge
test
cwtl
and
pop
xchg
mov
adc
mov
xlat
cld
pop
jg,pn
pop
add
sahf
xor
adc
subl
or
push
in
pop
xchg
repnz
mov
repz
jae
push
inc
dec
das
pop
jge
fcoms
enter
push
or
ss
out
cmp
stc
adc
sarb
in
fucomi
push
or
adc
into
push
pop
push
imulb
cli
stos
push
int3
xor
bound
sbb
jb
xor
adc
push
inc
mov
lret
lds
lret
popf
pop
cmp
sbb
mov
xor
imul
fxch
dec
dec
adc
imul
jecxz
insb
pop
add
lea
ret
lock
stc
js
mov
mov
jge
shrl
shrb
sahf
iret
push
lcall
xor
out
sub
push
clc
shr
mov
cwtl
outsb
icebp
test
and
push
dec
lock
cmpsb
pop
into
imul
out
mov
das
pop
inc
add
adc
out
pushf
push
or
pop
jp
movsl
xor
or
push
cmpsl
push
dec
jae
stos
push
mov
xor
cmp
mov
mov
mov
mov
shll
cmp
xor
push
fwait
bound
ja
fsts
mov
stos
or
push
mov
mov
xchg
in
xchg
mov
dec
sub
fsubp
adc
add
out
inc
mov
xor
push
cs
aam
pop
les
jne
pop
jne
adc
adc
mov
cmc
add
int
jne
aaa
xchg
cmpsb
sbb
shrb
or
sbb
insb
fstpl
push
add
cs
sysexit
or
cmpsb
cmp
fcmove
nop
test
daa
jne
out
sarb
adc
ret
sahf
jmp
xor
inc
ljmp
cli
mov
jecxz
int
mov
sub
mov
jbe
mov
mov
cmp
sar
xchg
shl
xlat
mov
lcall
shll
add
xchg
sbb
xchg
mov
inc
inc
pop
xor
pop
nop
mov
jecxz
in
jb
ss
jg
int3
dec
js
in
dec
push
lds
mov
xor
jb
mov
lods
dec
xchg
sbb
lea
mov
xchg
pop
lds
adc
cmpsb
inc
insl
insb
pop
pop
cltd
pop
pop
push
iret
ss
les
fmuls
adc
js
testl
pop
sbb
cmp
pushf
repnz
test
imul
jle
xchg
rolb
push
or
int
sbb
add
into
loope
jp
or
mov
inc
cwtl
pop
pop
pop
inc
pusha
mov
cmp
in
adc
push
sbb
push
lea
mov
inc
or
test
push
cltd
and
jnp
xor
shlb
push
sub
das
pop
call
pusha
sub
daa
cmpsb
lcall
int
cmp
ds
add
subl
adc
test
ja
mov
ss
test
decb
shll
mov
gs
cld
pop
imul
adcl
push
ljmp
pushf
push
mov
jecxz
lahf
sbb
pop
xchg
sub
sub
lock
push
dec
mov
mov
ds
cmp
fucom
cltd
jl
adc
inc
mov
nop
cli
test
dec
cli
xchg
pop
xchg
clc
jne
cmp
cld
push
lahf
cmp
sbb
cli
cmp
dec
movq
push
dec
lods
mov
inc
stos
loope
imul
push
xchg
scas
xor
pop
nop
rcll
mov
dec
pushf
aas
subl
pushf
jle
sbb
sbb
jmp
push
cs
mov
das
and
adc
push
loope
adc
lds
mov
loope
mov
pop
js
push
test
xchg
fdivrl
mov
mov
mov
adc
and
insl
add
subb
fxch
lahf
shll
lret
cmp
mov
fcomps
cltd
or
or
mov
hlt
mov
xchg
and
in
add
sahf
xor
inc
scas
nop
mov
push
xor
ss
cs
in
clc
xor
push
test
daa
imul
mov
mov
arpl
xchg
dec
pop
pop
adc
bound
shl
jbe
pop
imul
jg
jle
push
int
xor
jbe
ss
sbb
xacquire
iret
jb
pop
scas
push
shll
lret
js
fcmovu
cmpsl
lea
adc
jl
inc
out
fst
mov
add
psubsw
leave
call
inc
arpl
or
push
or
mov
js
hlt
sbbl
sub
xor
push
sub
fmuls
loope
icebp
sbb
push
adc
daa
cld
sbb
cwtl
sbb
xchg
fcmovne
ljmp
sub
cltd
push
or
out
adc
xchg
cmp
mov
mov
inc
aad
jbe
adc
int
xchg
std
cmp
mov
stc
rorl
push
pop
and
xor
inc
mov
dec
sbb
and
or
les
pop
test
dec
into
and
dec
cmp
jmp
movb
sub
inc
fadd
jae
ds
idivl
out
addr16
or
hlt
xchg
lret
lods
data16
in
mov
mov
aas
mov
mov
adc
add
mov
jle
imul
jb
stos
out
lret
jne
das
adc
push
push
xchg
sbb
sahf
nop
js
cltd
adc
hlt
pop
rcll
mov
add
jno
ds
mov
xchg
ss
mov
cmp
xchg
xor
adc
es
mov
aam
dec
lods
outsb
nop
div
cltd
mov
adc
aaa
and
sub
rolb
jge
cwtl
sub
fucom
pusha
add
ret
mov
aam
push
loope
testb
ds
lret
inc
lds
mov
out
adc
cmp
int3
and
push
test
cmp
inc
mov
mov
mov
hlt
aaa
and
movsl
lock
push
jb
jp
aas
pop
mov
pusha
lods
aas
fldt
dec
add
cld
jp
stos
ja
pop
mov
add
repz
test
push
loopne
sbb
push
aam
int3
or
arpl
shll
sbb
call
push
test
ret
pop
mov
add
call
addr16
xchg
lock
outsl
sqrtps
sbb
int
stos
mov
or
adc
sbb
jb
sbb
push
cltd
mov
push
dec
stos
test
xor
out
insb
inc
clc
ds
inc
adc
adc
dec
lea
or
dec
test
lods
xchg
adc
adc
loop
xor
pop
sbb
mov
xor
mov
inc
pusha
out
lcall
inc
aam
loope
pop
mov
in
and
ss
push
sbb
push
and
fwait
push
mov
mov
ss
data16
in
push
mov
lods
sub
sub
mov
jnp
testb
movsl
fiadds
mov
push
sub
xlat
cwtl
shrl
pushf
dec
cwtl
add
pop
jae
and
aas
jae
xor
mov
in
add
into
push
adc
inc
inc
pop
or
jae
andb
hlt
adc
movsl
loope
inc
pop
loop
sub
mov
push
add
cmp
icebp
push
mov
es
xor
mov
adc
jae
fwait
mov
xchg
pop
pop
movsl
jecxz
xchg
push
push
adc
mov
insl
pop
dec
mov
and
clc
mov
fists
pop
sub
loop
sbb
push
ds
cwtl
mov
xor
repnz
out
push
dec
ret
and
inc
jge
cs
mov
in
pop
out
in
push
ss
or
loop
pop
jg
loopne
fmul
add
ljmp
rcrb
or
add
push
fmuls
xchg
test
filds
pop
lahf
pop
adc
and
adc
cmp
lods
in
cmpsb
xchg
jo
inc
shrb
stc
xor
xorb
and
jno
dec
inc
jae
cwtl
in
push
addr16
jmp
lods
jne
cmp
cs
jbe
push
adc
daa
adc
or
lds
lods
cli
mov
inc
loopne
jle
sbb
jo
nop
stc
scas
mov
xchg
ja
push
push
jmp
jmp
bound
and
push
sub
xchg
movsb
into
xor
mov
adc
xor
cmp
sub
call
dec
divl
sbb
jl
ds
add
and
sbb
push
add
insl
insl
xor
addl
pop
mov
and
xor
mov
or
ret
aad
dec
sub
fmul
jnp
aam
ss
daa
lret
mov
jo
inc
cmpsb
sbb
jns,pt
clc
lret
xchg
xchg
lods
xchg
xchg
test
ljmp
in
jp,pn
test
adc
lret
clc
dec
and
out
push
and
js
push
std
out
stos
clc
ror
xor
in
ss
xlat
mov
lds
bswap
pop
imul
pop
cli
divb
push
aam
ret
ds
xchg
lock
test
lcall
stc
fidivl
jns
pop
xchg
mov
xchg
add
aas
mov
in
push
mov
sti
sub
dec
add
xchg
pop
cmpsb
insl
addb
int3
jns
lods
sbb
xchg
dec
gs
and
jp
stos
sub
sbbl
adc
cltd
dec
inc
jp
dec
cmp
and
movsb
dec
cmp
mov
inc
jnp
jg
jecxz
add
mov
fwait
ljmp
icebp
jle
pop
lahf
lea
in
out
pop
mov
mov
sub
loope
add
xor
mov
pop
sbb
cmp
ja
shr
subb
lcall
repnz
ret
mov
jl
push
push
xchg
xchg
mov
push
dec
stc
pop
jo
dec
cmp
popl
loope
test
imul
mov
movsl
push
inc
pushf
arpl
lcall
mov
push
push
inc
loope
arpl
pop
nop
in
out
hlt
movnti
sub
push
xor
out
std
pop
shr
push
movsb
ret
repnz
das
int3
dec
fsubrs
cmp
and
and
xlat
mov
shrl
mov
xchg
fdivrl
out
das
mov
push
cmp
imul
test
push
adc
mov
arpl
test
scas
je
psrad
ss
xor
or
shl
mov
dec
imul
arpl
xchg
loopne
mov
jmp
mov
add
add
cli
icebp
andl
rclb
les
stc
mov
clc
lcall
fucom
push
xchg
dec
jl
popa
out
and
mov
mov
jp
fisttpll
xchg
out
inc
mov
push
int
fwait
xor
scas
ficoms
push
mov
sbb
pop
sub
mov
cmp
cld
lods
adc
inc
outsl
popf
xchg
fcmovbe
jne
pop
je
out
subb
stos
mov
out
mov
jne
push
pop
fbld
enter
fdivrs
loope
mov
loopne
lcall
mov
stos
cmp
xchg
dec
aam
shl
imul
je
cmp
mov
or
push
pop
cwtl
pop
fstp
jl
das
popf
ror
loope
fistl
rcrl
sub
push
test
sbb
mov
dec
cld
sub
or
jge
sbb
jp
and
inc
hlt
fst
std
cmpsl
adc
jnp
lea
mov
loopne
in
fsubrs
dec
mov
dec
adc
call
mov
pextrw
out
xor
cmp
imul
test
lods
lds
addb
inc
imul
stc
add
xchg
rorb
out
jne,pt
jle
les
cmpsl
in
daa
fstpl
or
bound
jo
cwtl
ffreep
mov
dec
jbe
xchg
or
aam
ds
dec
lret
push
test
ss
dec
std
inc
iret
sub
sbb
or
mov
arpl
aas
and
sub
cmp
sbb
js
xor
shlb
mov
sub
sbb
dec
mov
sarb
xchg
mov
out
int3
cmpl
adc
push
cs
je
and
and
or
mov
pusha
cmp
push
push
dec
jge
pop
cmpsb
sbbb
leave
sub
in
dec
or
icebp
arpl
mov
pop
divb
call
jl
in
mov
pop
aaa
pop
loop
mulb
fsubl
fisubs
scas
ja
xor
fisttpl
push
cmp
sbb
fwait
push
cli
mov
popf
popf
dec
add
xchg
dec
inc
inc
scas
imul
inc
dec
ljmp
jp
or
fsubs
fst
int3
lret
mov
jns
inc
xchg
and
mov
test
add
cwtl
xor
jne
push
hlt
pop
jl
popa
aad
and
add
cmp
and
xchg
and
das
and
pop
mov
adc
pop
cmpl
mov
ret
mov
cmpsl
mov
jnp
fildll
push
and
in
ss
push
call
pop
leave
cmc
jb
pushf
adc
bound
in
xchg
loope
xchg
jg
fwait
out
lcall
clc
add
mull
das
enter
lcall
pop
int
and
or
pxor
add
dec
cld
testb
lahf
cltd
fucomip
cmp
stos
stc
in
call
ljmp
sbb
adc
stc
pop
inc
shlb
leave
out
cmpsl
test
cmp
push
mov
mov
add
sub
inc
xor
mov
sub
jns
into
lret
icebp
bound
popa
sbb
jb
xchg
loope
sbb
push
adc
lcall
fsubrs
lods
in
repz
hlt
or
xchg
lds
sub
es
add
sti
mov
popf
lock
push
xlat
test
push
js
mov
push
cwtl
mov
dec
xchg
xlat
and
push
ss
pop
leave
jg
jnp
ljmp
add
imul
mov
inc
hlt
in
dec
xchg
mov
mov
dec
mov
sbb
jns
inc
sub
push
adc
xor
dec
lcall
movsb
mov
jl
int3
test
ds
icebp
fs
cmp
pop
xor
xchg
inc
ljmp
lods
jge
xor
inc
scas
cltd
into
pop
mov
jmp
inc
mov
xchg
xchg
jae
loop
imul
imul
push
cltd
add
jmp
jne
sahf
js
push
jbe
sbb
xor
inc
lods
push
or
repz
jecxz
mov
sbb
push
es
pop
out
dec
stos
jmp
adc
pop
add
test
cld
xchg
and
and
add
push
fwait
repnz
shll
add
mov
cmp
cltd
cld
shll
inc
sub
or
loopne
arpl
mov
int3
inc
mov
hlt
in
addr16
inc
mov
and
lea
ss
dec
add
cmpsl
push
rorl
cmp
mov
push
adc
clc
sbb
inc
stos
or
and
mov
mov
mov
push
xor
sbb
fiaddl
dec
and
and
dec
fnstenv
mov
imul
ret
out
and
sub
scas
mov
cmp
add
test
nop
xchg
pop
jg
jmp
push
xchg
pop
push
insl
loop
mov
jae
xchg
pop
mov
mov
jecxz
adc
movsl
dec
movsb
dec
xor
adc
or
es
test
pop
in
loopne
and
pop
push
xchg
aas
or
mov
out
sbb
test
mov
adc
fs
jl
fdivrl
imul
bswap
nop
sbb
ss
ljmp
xor
pop
mov
push
mov
mov
js
jns
push
mov
pop
adc
sbb
fsubr
adc
loope
in
adc
lret
and
shll
pop
bound
loope
dec
out
das
loope
lods
test
jne
call
push
mov
pop
jb
pop
scas
mov
push
rorl
mov
mov
mov
js
fmull
insb
js
les
pop
add
dec
add
rcrb
je
adc
dec
sbb
xchg
cmp
mov
hlt
mov
mov
call
nop
sbb
scas
mov
loopne
sub
data16
cmp
push
cld
jge
push
stc
jno
mov
shlb
adc
jns
into
nop
sub
hlt
adc
and
lock
sbb
jl
cmp
dec
xor
xchg
xchg
sub
ret
push
dec
pop
jge
outsb
cwtl
fisubrs
stos
xchg
leave
lods
jne
inc
jmp
gs
aam
fwait
mov
in
jge
mov
cmp
pop
fisubs
or
add
adc
xchg
std
jbe
xor
loop
js
lahf
cmp
inc
push
mov
cli
and
jg
imul
adc
sub
pushf
and
or
mov
sbb
xor
es
repz
and
inc
lret
pop
jp
cmpsb
mov
cld
stos
pusha
into
and
jl
les
or
mov
repz
push
jno
incl
dec
jle
mov
jnp
enter
imul
lea
les
xlat
xchg
les
push
sbb
fidivl
dec
aas
ret
jne
enter
imul
ss
or
push
push
xchg
incb
fbld
add
cltd
shlb
es
iret
in
lret
inc
mov
ljmp
scas
sub
xchg
stos
sub
cmp
repnz
mov
out
add
ret
jecxz
and
popa
test
inc
sbb
faddl
push
cmp
dec
idiv
push
sub
jl
fsub
andb
adc
data16
add
aaa
pop
push
rcr
mov
sbb
in
lcall
aas
mov
inc
inc
movsb
mov
imul
pop
jne
cmp
fmuls
pop
inc
mov
dec
sahf
xchg
fidivl
mov
push
frstor
aad
push
and
mov
inc
fimull
sbb
lcall
and
push
push
dec
mov
jb
xor
aaa
sti
scas
repz
or
inc
lea
mov
xor
insb
adc
mov
and
mov
lcall
dec
xor
sub
and
mov
dec
cmpsb
es
or
es
inc
cmpsb
jmp
lahf
pop
lcall
xchg
mov
fwait
pop
adc
dec
mov
pushf
cli
in
push
add
sbb
lahf
xlat
shl
clc
or
test
frstor
or
stos
je
sub
cmp
cmp
push
cmpb
js
add
cmp
mov
inc
sarl
cli
mov
loopne
bound
in
xor
enter
cmp
pusha
xor
mov
mov
rclb
movsl
dec
out
lret
inc
push
into
mov
mov
adc
mov
add
aaa
out
sub
mov
mov
ss
scas
fcomps
inc
popf
add
jne
adc
scas
or
dec
dec
pop
push
mov
jnp
xor
pop
lds
sbb
movsl
or
pop
rcl
pop
movq
aas
push
dec
fnstcw
and
js
add
push
out
sub
xchg
stos
inc
pop
out
add
ret
push
jns
ret
cltd
push
bound
push
adc
mov
mov
ficompl
fimull
push
scas
fadd
cmp
xchg
out
sub
push
in
adc
outsb
jecxz
imul
cmp
dec
pop
push
call
lock
inc
pushf
jnp
lahf
push
ret
sti
es
pop
sbb
pop
add
out
std
jp
xchg
gs
push
push
pop
pop
cmpsl
push
pop
in
mov
jge
popf
sbb
popa
mov
cmp
imul
mov
xor
and
and
inc
inc
adc
adc
sub
xchg
fs
fdivrl
sub
sub
movsb
adc
or
fmuls
xchg
inc
sbb
lods
cmc
cli
and
cmp
pushf
inc
data16
pop
fs
std
xor
in
data16
jecxz
inc
lock
stos
and
dec
sbb
add
sub
push
push
mov
jl
mov
popf
jge
mov
adc
lcall
push
jecxz
sarl
xchg
lea
pop
xchg
inc
or
imul
dec
mov
imul
sbb
and
stos
jmp
mov
cmpsb
jbe
mov
leave
notl
pusha
dec
jecxz
lcall
jmp
or
push
test
adc
inc
dec
loop
int
bound
mov
or
stos
retw
adc
test
xchg
bound
aam
sub
sbbb
mov
jg
test
lods
inc
fdivrl
mov
hlt
sub
inc
and
add
loop
pop
lret
insb
out
ficoms
lahf
pop
inc
imul
icebp
mov
xor
or
mov
mov
into
cmp
jno
cli
mov
cmp
outsl
daa
imul
sbb
enter
xor
pop
jmp
sub
loop
dec
xchg
insl
or
adcl
fs
pop
xor
sbb
mov
jle
insl
scas
test
lods
cmp
xchg
xchg
js
jmp
dec
repnz
and
pusha
cmpsl
push
movsl
enter
dec
jge
js
and
sbb
pop
mov
inc
cmp
int3
sbb
add
cmpsl
aaa
test
les
js
xchg
jb
cmp
vphaddwq
mov
cmpsb
js
adcl
in
mov
sub
movsb
pusha
jecxz
cwtl
mov
sub
fsubrs
xchg
aad
push
jo
sbb
shrb
fildll
daa
movsb
gs
rclb
stc
dec
or
mov
xchg
mov
dec
mov
notb
sbb
hlt
push
adc
pop
mov
and
popl
xor
or
or
and
addb
adc
das
rcrl
mov
or
mov
icebp
mov
xor
loop
popa
lcall
fiadds
inc
mov
cmp
sbb
push
stos
test
enter
stc
cs
or
fstl
into
stc
jns
fs
ret
xor
mov
scas
ss
scas
xchg
inc
lcall
cmc
sub
clc
test
hlt
sbb
imul
ja
into
lods
scas
pop
inc
mov
adc
mov
jns
and
jo
cwtl
xor
push
dec
mov
cmp
ja
add
mov
cmp
mov
cmp
cmpsl
mov
std
in
test
cmp
sar
push
mov
pop
int3
int3
push
lahf
fcompl
das
jmp
or
pop
and
out
sbb
pop
cli
mov
jmp
pop
jb
je
rcrb
jne
shll
inc
jmp
fcomip
push
fidivl
or
pop
or
int
pushf
or
js
mov
iret
sbb
sbb
pusha
push
repz
jmp
jp
xor
or
fwait
pop
push
pop
test
ja
xorb
xchg
test
jl
xchg
inc
fcom
bound
pop
ret
dec
sbb
pop
sbb
fnsave
add
and
adc
mov
adc
rsqrtps
sbb
in
push
ljmp
mov
inc
popa
add
or
es
cmpb
mov
fbstp
je
andl
rcrl
xchg
jg
sub
insb
push
int3
and
stos
in
push
xchg
jg
mov
repnz
xor
push
and
lahf
fisttps
adc
sahf
ds
popf
pushf
lahf
insl
iret
cmp
cmp
jnp
pushf
sbb
pop
mov
lret
xor
or
xchg
mov
loop
fwait
inc
movsb
test
pop
jns
ss
mov
gs
loop
xor
clc
test
aaa
xchg
jne
lock
xchg
push
cmp
cmp
insb
or
sbb
pop
sarb
imul
jmp
sub
inc
rorb
push
or
xor
out
subl
insl
fisubl
std
sahf
xorb
dec
jne
jp
dec
subb
adc
out
pop
mov
daa
call
and
inc
add
sar
dec
adc
push
adc
xchg
sar
or
lret
or
sub
adc
jbe
mov
cmp
mov
jecxz
or
cwtl
mov
test
stc
cmpsl
pop
inc
lods
sbb
mov
movsb
sahf
stos
sahf
lods
popa
inc
imulb
cwtl
ret
xchg
test
mov
int
pop
jb
mov
or
in
mov
sub
loop
in
push
lods
mov
fimull
scas
shll
jg
imul
aas
cmp
fs
inc
dec
sub
dec
cmp
leave
test
jno
dec
xor
xor
stos
lods
or
dec
xor
repz
add
scas
and
xor
sbb
add
lods
xchg
pop
mov
pop
sbb
xor
mov
lret
xchg
dec
sahf
inc
jmp
mov
xchg
mov
mov
outsb
data16
cmpsl
jl
mov
out
dec
mov
fwait
mov
push
lods
lds
pop
and
sti
popa
inc
inc
sbb
test
lret
pop
fdivr
dec
fstps
into
or
fdiv
loopne
jge
fidivrs
movsl
mov
jne
cmp
add
popf
cmp
mov
or
rcrl
popf
in
or
je
xchg
daa
ja
mov
sbb
out
pop
push
cmp
lods
sbb
les
and
fs
pop
cmp
cmp
push
gs
jae
das
or
inc
addr16
and
sbb
add
sbb
cmp
pushf
sub
push
ja
xchg
loopne
cmp
es
das
pop
sbb
std
outsb
clc
mov
lods
arpl
lea
sbb
sub
and
clc
imul
xor
fabs
dec
mov
pop
dec
jb
jb
into
add
push
shlb
in
rcll
lods
inc
mov
stc
mov
mov
div
in
mov
movsb
xor
cwtl
mov
or
call
jge
jmp
test
pop
nop
sbb
adc
mov
dec
dec
jl
mov
sbb
sbb
repz
and
scas
or
inc
movsb
je
jae
push
or
mov
out
enter
add
out
inc
jge
push
mov
outsl
cli
insl
add
inc
incb
lahf
popf
arpl
dec
rorl
aad
ja
jmp
inc
inc
leave
ficompl
cltd
int3
fwait
int3
imul
and
mov
mov
adc
pop
add
jnp
aad
sbb
inc
imul
push
test
jge
sbb
pop
sub
loop
fbld
rol
lret
es
ja
test
inc
cmp
sub
inc
mov
ds
add
insl
jno
sahf
cmpb
jge
and
xchg
mov
push
stos
rcrb
xchg
aad
inc
push
xor
stos
lods
insl
int
fs
popa
in
pop
mov
pop
fsts
mov
jne
or
pop
inc
lods
lea
loope
inc
xchg
pusha
mov
mov
jmp
mov
xor
aam
push
cmp
in
lock
dec
repz
in
cmp
fisubs
xchg
lock
mov
xor
xchg
jbe
push
and
icebp
in
outsb
test
je
fdivrs
fcoml
adc
adc
push
loope
fs
test
rclb
jp
out
add
jge
arpl
dec
popf
in
and
mov
out
psrlw
xor
mov
aas
sbb
in
fisubs
pop
or
xor
xchg
mov
in
fbstp
cwtl
iret
imul
adc
shlb
jg
test
mov
imul
jecxz
fldl
int3
mov
add
inc
inc
shlb
dec
orb
cmpsl
popa
xor
fs
pop
js
pop
in
outsl
imul
push
mov
nop
nop
not
adc
cmp
cmpsl
insl
push
and
gs
popa
xchg
iret
insl
push
jbe
dec
jmp
jns
and
sub
ret
shll
addb
sub
inc
lods
xchg
popa
push
popa
add
into
adc
addr16
cli
mov
int
popa
dec
xchg
inc
lahf
jbe
pushfw
pop
rcr
push
push
push
out
mov
out
dec
mov
scas
stc
mov
repz
pop
cld
cld
stos
stos
mov
xchg
mov
mov
jne
fcompl
sub
jl
pop
push
in
int3
inc
pushf
insb
cmp
addr16
push
mov
imul
rcrl
aam
jne
add
cmpsb
dec
insl
gs
add
lea
pusha
push
xchg
mov
adc
frndint
das
cmp
lcall
inc
xor
xor
outsb
dec
jmp
mov
daa
popa
jnp
mov
test
mov
cmp
xchg
add
xor
add
stos
add
pop
repz
mov
out
add
xchg
mov
insb
push
pusha
fists
adc
and
loopne
jecxz
push
imul
cmpsl
outsl
sub
cmp
push
ret
leave
add
xchg
sahf
adc
lea
add
inc
dec
ja
adc
add
xchg
dec
es
jae
push
sbb
adc
xor
jg
xchg
call
sbb
lahf
aas
sbb
mov
jle
pop
sub
cmp
cmp
sbb
dec
pop
sahf
xor
mov
jl
push
pop
xchg
clc
int3
adc
inc
jl
dec
dec
mov
mov
inc
sbb
mov
xor
sbb
lods
and
cld
mov
lahf
insb
sub
mov
inc
scas
in
add
push
add
xor
lods
push
xchg
sbb
push
insl
push
gs
stos
nop
push
dec
sahf
push
js
pop
pop
into
add
sbb
push
loope
push
adc
push
lcall
in
std
and
incl
sti
or
hlt
sbb
aas
nop
jb
sub
popl
cmp
int
in
dec
pop
add
cwtl
pop
fnstcw
mov
dec
xchg
jae
or
add
pop
xor
add
movsl
imull
add
xor
xchg
adc
pusha
jns
pop
sub
pop
xchg
les
insb
lret
movsl
mov
or
sbb
or
sub
out
mov
push
negl
int3
cli
sub
sub
mov
rcr
jecxz
mov
icebp
add
out
jp
test
aas
fldenv
mov
mov
xchg
add
jb
jp
out
mov
add
push
mov
ja
sbb
rcrb
mov
jmp
aad
imul
jnp
call
subl
icebp
pop
sub
popa
dec
xchg
daa
inc
outsl
or
mov
std
adc
pop
pushf
mov
iret
pop
loopne
aas
test
aam
aad
aas
lret
and
push
sbb
popf
add
mov
ret
jge
loop
add
fdivl
std
xor
inc
test
xor
jae
mov
loop
cmc
daa
push
stc
scas
fdivrs
and
std
or
inc
cmp
xchg
push
mov
add
repnz
xchg
dec
jecxz
pop
cmp
cltd
ds
mov
xor
popf
sub
adc
enter
lret
mov
arpl
cwtl
or
jge
or
imul
sbb
mov
daa
les
or
push
adc
sub
cmp
out
or
xchg
dec
inc
push
sub
cmp
test
and
sbb
clc
stc
fcmovne
pop
mov
jns
ja
int3
insl
shll
sbb
pop
jnp
movzbl
push
pop
mov
test
mov
aad
dec
push
dec
and
test
mov
xchg
lcall
or
or
or
mov
sbb
mov
aaa
or
imul
push
insb
ret
ss
aam
shrl
push
notl
cs
push
sti
adc
cmpsb
and
out
into
int
push
shll
adc
in
inc
out
rcr
int
push
icebp
inc
inc
cs
stos
sarl
addb
out
dec
iret
leave
scas
push
dec
jmp
lret
mov
mov
dec
lea
les
pop
jg
xor
ror
xor
lret
jo
insb
sbb
test
addr16
mov
nop
test
or
pop
cmp
stos
test
push
jns
lods
xor
and
clc
outsl
pop
xor
xchg
in
gs
mov
or
add
xor
std
hlt
adc
mov
fimull
dec
cmpsb
jmp
push
sbb
sub
inc
inc
mov
fcoms
rorl
lods
adc
push
jb
dec
pop
rcr
mov
xchg
mov
js
and
mov
xor
dec
insl
mov
inc
mov
mov
lds
stos
pop
enter
dec
mov
push
pop
cld
cltd
bound
inc
jmp
cld
cmp
pop
mov
dec
iret
push
shll
lods
sbb
jo
xor
dec
out
fsubrs
adc
iret
stc
mov
sbb
jno
jbe
rolb
in
outsl
lcall
stos
cld
jae
and
inc
pop
sbb
mov
rcll
pushf
pop
mov
jl
mov
mulb
cmp
cmc
iret
and
pop
push
cmp
js
cmpsl
pop
bound
imul
adc
fsub
rorl
xor
in
enter
sbb
popa
sbb
scas
icebp
arpl
mov
jp
cmc
into
movsl
out
outsl
rorl
dec
xlat
clc
mov
ret
adcb
inc
push
aad
icebp
testb
daa
stos
mov
rclb
stos
dec
inc
data16
imul
xchg
out
dec
repz
cmpsl
xor
and
pop
dec
xorl
in
cmpsl
mov
push
out
inc
adc
sub
sbb
adc
lret
push
shll
jle
mov
sbb
pop
lods
push
mov
hlt
je
jl
cwtl
adc
fiaddl
lods
jle
rorb
stc
adc
hlt
les
or
shlb
lock
bound
fstpl
adc
cli
push
adc
out
es
jae
outsb
xchg
aam
stos
xor
push
pusha
cmpsl
xchg
jo
jmp
hlt
aad
in
scas
movsb
inc
xchg
push
lods
das
cmp
sbb
jne
sti
inc
mov
lea
in
call
inc
push
pop
ret
cmp
mov
shl
addr16
je
mov
push
mov
sahf
mov
mov
mov
cld
inc
jl
mov
je
jecxz
bound
stos
dec
es
xchg
mov
scas
adc
mov
jmp
ljmp
mov
scas
sbb
sbb
xorb
jno
fldt
xchg
sub
shlb
adc
stos
out
inc
mov
jmp
sarl
sub
test
mov
cmpsb
pusha
ret
pushf
cmpsb
add
js
xchg
into
cli
xchg
pusha
pop
lcall
je
faddl
sbb
and
sbb
adcl
aam
sbb
test
push
sbb
int3
mov
lcall
pop
push
dec
pop
repnz
lods
mov
and
fiaddl
push
jle
ret
iret
mov
mov
or
aam
jg
mov
loope
arpl
inc
mov
sub
inc
scas
and
add
adc
in
inc
jno
lret
push
test
lds
inc
cmp
test
je
in
dec
aad
mov
jp
or
mov
shrl
repz
imul
mov
pusha
scas
lock
es
out
cmovs
cmp
dec
cli
jb
or
aaa
scas
icebp
push
inc
fidivrl
or
enter
enter
das
cmc
add
js
jnp
fiadds
andl
push
imul
test
movsb
jb
and
imul
jecxz
jmp
add
jle
jmp
jle
sbb
xor
fnsave
aad
jg
gs
ja
or
cwtl
push
testl
and
push
lret
jmp
scas
push
test
inc
or
dec
push
mov
pop
push
mov
lret
mov
lods
ret
mov
stos
popf
movsl
mov
aaa
mov
shll
rcrl
cmpsb
mov
loope
ja
mov
pop
mov
inc
insl
or
cmpb
jne
sbb
mov
ret
add
inc
push
sbb
addr16
in
aas
dec
pop
push
popf
into
push
pop
lret
add
in
stc
out
test
mov
popf
dec
adc
cmp
push
arpl
pop
es
je
mov
imul
xchg
in
jo
xor
push
fwait
sbb
mov
sarb
cmpsb
jle
push
mov
mov
shll
aam
int
sbb
fwait
sar
mov
pop
xor
mov
test
ss
daa
stos
push
jmp
into
lock
adc
push
scas
xor
inc
popf
dec
push
dec
dec
cmc
mov
inc
push
stc
out
jne
mov
dec
inc
addr16
into
cltd
lahf
pop
or
add
jle
mov
jnp
cmc
adc
leave
add
ss
sub
add
xchg
imul
xor
cmc
mov
inc
xor
aaa
mov
sbb
addl
out
pop
test
sub
xchg
cli
test
mov
jg
ljmp
xchg
sub
mov
xchg
pop
ffree
cmpsl
shll
xchg
in
or
into
cmpsb
inc
jmp
cmpsb
push
xchg
jae
inc
mov
xchg
mov
fwait
inc
mov
sub
push
mov
fsts
test
xor
sub
xchg
or
aas
jp
hlt
jecxz
stos
fcomi
cmp
sub
sbb
daa
xor
out
shrl
test
popa
jb
stos
cmp
das
adc
movsl
jae
movsb
mov
dec
mov
ret
dec
out
insb
fwait
xor
movsl
jb
pop
pop
and
es
mov
add
fwait
lock
xchg
aas
lcall
inc
dec
xor
jno
mov
sbb
sub
pop
call
sub
mov
loope
aas
stos
or
jbe
mov
enter
insb
sub
imul
add
or
ljmp
mov
insb
push
xchg
enter
and
ret
sub
push
inc
mov
lret
daa
imul
mov
push
repnz
dec
inc
xchg
aam
icebp
lock
cmp
data16
in
sub
test
scas
clc
inc
mov
push
in
hlt
lahf
mov
lret
pushf
je
xchg
jnp
insb
dec
inc
std
sbb
lods
lahf
mov
adc
into
loopne
std
dec
in
inc
xor
jle
bound
loopne
pop
push
push
jg
data16
scas
cmpsb
call
cmp
jo
xchg
sar
push
cmp
test
xchg
inc
add
or
testb
gs
push
aaa
pop
xor
lahf
and
dec
add
outsb
xchg
in
xchg
imul
dec
pop
loopne
in
mov
cs
inc
and
loop
fmul
fistl
or
lahf
sbb
shlb
push
dec
sub
push
cwtl
xlat
or
lahf
clc
in
aaa
mov
dec
stc
pushf
int
out
push
inc
int3
scas
pop
sub
jo
mov
movsb
fwait
ss
lods
or
neg
pop
iret
or
sbb
lods
cmp
js
sub
xchg
cmpsl
insl
inc
xor
enter
xor
jb
pop
pop
jae
mov
cmpsl
xlat
cwtl
mov
es
pop
ret
adc
std
filds
pop
fs
sahf
lds
inc
mov
dec
cmp
jg
int3
cmpsb
rorb
sbb
fisttpll
sub
push
inc
cmp
jb
xor
ja
and
adc
and
mov
mulb
test
pop
push
or
xchg
push
pusha
cli
ficompl
xlat
mov
adc
je
or
jmp
mov
lods
mov
lcall
fcmovb
inc
aas
test
or
xchg
test
mov
push
xchg
call
cmp
adc
int3
pushf
jbe
xorl
es
adc
xchg
sarb
pop
or
or
jb
adc
int3
fucomi
aaa
fcmovnbe
cld
mov
flds
daa
hlt
pop
push
lret
xchg
cmp
xchg
sub
icebp
clc
sub
mov
cmp
in
xor
out
fistps
jg
stos
mov
aad
frstor
lcall
or
xor
insb
jecxz
sub
repnz
mov
and
xchg
testb
mov
sarl
mov
jne
and
lock
and
popf
mov
adc
js
ret
outsb
dec
sbb
mov
inc
mov
repz
cmpsl
xchg
mov
or
cs
pop
dec
ret
and
imul
and
pop
mov
add
in
pushf
pop
fiaddl
xchg
fimull
mov
lahf
lock
dec
daa
mov
fsubs
lret
jo
or
and
les
test
xor
daa
loop
sub
mov
jbe
fwait
test
mov
add
lcall
or
cli
mov
pop
out
cmp
sbb
fs
jnp
or
mov
push
rcll
pusha
jmp
imul
mov
xchg
lea
in
sub
jl
lock
mov
icebp
bound
pop
lret
or
mov
mov
xor
cmpsb
lcall
outsl
test
push
or
mov
fs
mov
or
cmpsl
je
loopne
jbe
add
repz
and
sbb
cld
push
mov
adc
add
addr16
cld
push
scas
push
dec
mov
push
cmp
cmp
movsb
fdiv
mov
add
push
lahf
mov
cmp
les
stos
mov
insb
inc
cmp
and
stc
xchg
fcoms
jno
or
or
pop
push
sbb
or
cwtl
jecxz
pop
jns
leave
xchg
mov
arpl
xlat
movl
and
das
push
insl
aam
scas
icebp
ror
out
clc
inc
sbb
popf
stos
sub
das
aad
movsl
inc
ja
notl
leave
mov
sub
pushf
jg
cmp
jno
test
stos
int3
out
mov
daa
movsb
fs
fidivs
mov
out
stc
jnp
clc
shll
push
push
pop
or
popa
js
hlt
xchg
cld
dec
jbe
sub
push
ljmp
add
mov
lock
sub
hlt
js
cmp
iret
sti
mov
bound
and
mov
sbb
cmp
mov
mov
xor
mov
dec
mov
xor
cmp
shl
cmp
push
pop
mov
mov
adc
xor
loopne
icebp
push
xor
mov
test
dec
push
jl
std
sub
daa
fistps
sub
pushf
sar
push
std
out
out
aaa
xchg
adcb
ja
loop
xchg
stos
mov
jl
mov
push
adc
int
mov
rcr
sub
icebp
dec
cmp
das
mov
dec
sub
adc
sbb
iret
xchg
push
insb
negb
test
sbb
aas
mov
push
sarb
xchg
loopne
aad
outsl
lea
call
ds
dec
mov
sbb
inc
mov
jle
rcrl
scas
sub
add
cld
sbb
and
stos
sbbl
or
xchg
leave
push
xchg
jl
sbb
nop
xchg
push
mov
sahf
xchg
jge
inc
sbb
cmp
sarl
xor
or
and
inc
popf
xchg
adc
loopne
pop
movsl
popa
and
sahf
dec
push
xorl
xor
cwtl
jnp
mov
and
dec
sahf
aad
xorb
pop
xchg
sbb
scas
add
ja
ss
jb
sbb
jno
lcall
inc
hlt
into
xchg
int
xor
xchg
sahf
or
daa
sahf
lcall
sub
jp
and
xor
call
dec
lret
sbb
xchg
mov
call
fadd
add
leave
inc
add
or
fwait
ret
test
cs
outsb
repnz
lods
jo
pop
pop
into
jnp
std
xchg
add
mov
xchg
sbb
push
inc
divl
dec
jae
adc
and
push
fwait
cmc
lahf
sub
sbb
in
adc
imull
push
mov
jo
xchg
pop
mov
shlb
sub
or
clc
cmp
inc
or
adc
lods
cmp
das
les
popf
sbb
mov
rcrb
and
sbb
adc
xchg
fildl
aad
cli
sarb
daa
dec
cwtl
pop
xchg
mov
jl
cli
psrlw
cwtl
in
into
xchg
js
jge
rorb
notl
and
cmp
or
and
push
xchg
jl
test
pop
movsb
xchg
pushf
nop
negb
fisubrs
mov
or
fs
add
mov
subb
adc
shlb
mov
dec
ficoml
mov
cs
sti
mov
cltd
mov
xchg
jbe
flds
xchg
popf
arpl
lret
std
sahf
add
bound
out
insl
in
push
dec
inc
jne
outsb
xor
dec
cmp
test
push
sub
daa
in
cmp
pop
stos
leave
xor
pop
lea
xchg
xchg
stc
gs
adc
sub
fstl
stc
stos
mov
mov
fstps
fdivs
ror
repnz
out
aad
dec
add
dec
adc
add
sub
mov
arpl
sub
dec
push
push
mov
mul
xor
ret
lds
jle
cmpsl
jmp
pusha
mov
fcomp
stc
ffree
and
add
test
xor
sbb
jp
add
sti
mov
jp
fcoms
fistps
push
shl
insl
xor
test
xchg
jge
mov
cmp
sub
adc
flds
mov
outsb
mov
es
in
bound
fstps
or
push
xor
into
subl
mov
add
js
pushf
arpl
mov
jns
dec
sbb
inc
mov
and
loopne
dec
inc
push
jp
xchg
mov
dec
cli
jmp
adcb
mov
test
imul
xor
push
dec
xchg
lds
and
xchg
adc
mov
mov
sub
lret
push
adc
sbb
cmp
xor
out
push
cmpsb
and
cltd
js
mov
fbld
sub
cmp
jns
out
push
in
xlat
cmp
jp
or
cmp
fistl
mov
mov
xchg
scas
adc
iret
jbe
pop
sarb
cltd
mov
add
rolb
mov
cmp
push
jecxz
xor
xlat
xchg
sahf
cmp
sbb
add
xchg
daa
sub
test
roll
add
enter
push
push
iret
or
or
mov
aas
sub
sbb
add
fcmovne
fimuls
push
fistpll
inc
ja
mov
loope
dec
add
in
sahf
adc
decb
inc
inc
adc
push
sarb
sahf
orb
sbb
lahf
inc
das
dec
cmpsl
ja
hlt
inc
sub
fdivrs
pop
movsb
jns
mov
adc
fsubl
ljmp
fimull
call
jns
mov
pop
std
mov
test
sub
aas
mov
push
mov
jl
mov
mov
xchg
jae
sbb
push
mov
loopne
mov
jg
movsl
lods
mov
subl
bound
dec
adc
dec
push
mov
shll
inc
mov
outsl
add
or
daa
inc
mov
call
and
arpl
xor
testl
into
mov
call
test
pop
push
cmp
push
inc
mov
icebp
pusha
dec
rolb
shrl
pop
sub
push
aad
mov
inc
sahf
out
stc
das
and
cmc
jg
cli
in
pop
jae
mov
ss
in
lcall
lods
sarl
cli
mov
loope
xor
loop
out
push
mov
mov
jp
xchg
lods
clc
jns
push
sbbb
dec
je
arpl
push
sahf
ljmp
push
and
dec
jecxz
sub
roll
pop
out
and
js
adc
icebp
enter
jg
mov
add
mov
pop
and
adc
fdivr
add
cmp
vscatterqpd
loop
or
int
jno
cmp
or
fisttps
mov
movsb
mov
inc
pop
subb
daa
dec
mov
mov
or
xchg
xlat
movsl
aas
es
je
fistpl
xor
mulb
and
push
dec
ret
and
pop
xchg
std
dec
nop
and
add
test
and
sbb
idivl
inc
mov
mov
clc
mov
and
and
xchg
pop
sub
fcomi
push
sub
sarl
xchg
push
mov
cmpsl
cmp
xchg
cmp
mov
sbb
bound
jbe
xchg
push
lds
les
stos
test
movsb
ret
shrl
mov
popf
enter
cmp
pop
mov
jns
add
lea
movsb
jmp
test
jmp
popf
int
cmpsb
jb
leave
fsubs
jg
pop
rcrl
sbbl
in
adc
push
loopne
fisttpll
jbe,pt
je
jo
sbb
outsb
nop
jp
pop
enter
lret
fimuls
bound
cmp
add
mov
dec
daa
mov
cmp
popf
mov
lahf
test
jnp
cwtl
xchg
or
push
fbld
out
rcrb
fs
xchg
sahf
loope
test
cmc
dec
jp
inc
xor
add
lcall
into
xchg
shrb
daa
sbb
push
notl
add
movsb
hlt
cmp
cmp
xor
inc
jl
insb
sub
and
and
outsl
movsl
lcall
rol
rcll
in
push
roll
out
inc
divb
addl
aam
sub
std
lcall
fs
mov
sbb
inc
and
fdivl
clc
jo
loop
xchg
mov
jge
ds
inc
mov
push
insl
cmp
cmp
cmp
jl
mov
mov
out
into
test
or
cmpsl
repz
and
les
cmpsb
int
imul
inc
and
cs
lds
les
jg
xchg
std
cs
cmp
dec
fisubl
or
and
pop
outsl
add
xorl
subl
bound
lcall
imul
adc
ret
adcb
lfs
mov
mov
lret
aaa
out
and
inc
test
es
gs
dec
cmp
jno
or
dec
cmp
div
mov
push
adc
pop
aas
sub
div
cmp
xor
popf
test
or
adc
lods
sbb
mov
adc
push
sbb
leave
fidivl
ljmp
test
rorl
ret
popf
mov
xor
in
bound
mov
movsl
sub
sbb
cmp
push
cmpsl
outsb
xor
mov
pop
jg
inc
or
pop
jns
leave
addb
inc
fistl
das
test
xor
xchg
inc
imull
jge
mov
adc
mov
cwtl
jbe
add
and
lcall
pushf
loope
lods
push
add
ss
sub
mov
shlb
in
jp
and
xchg
mov
fsts
push
scas
pop
xlat
inc
sar
pop
dec
test
dec
shrl
mov
fstps
sub
adc
mov
aas
adc
int3
push
int
jmp
mov
clc
dec
adc
dec
pop
push
xor
pop
push
pop
adc
shll
dec
gs
inc
cmp
add
xchg
inc
mov
ret
mov
xchg
js
ss
cmp
mov
repnz
inc
stc
rolb
movsb
call
ja
jb
jle
repz
jno
lret
pop
jecxz
outsb
mov
xor
adc
mov
push
sbb
or
gs
fwait
push
dec
sarl
aad
in
daa
fimuls
cmpb
sbb
in
jns
imul
popf
pop
stos
and
ljmp
enter
shl
sbb
mov
test
aad
lahf
lock
push
xlat
add
push
add
nop
loopne
idivl
movsl
int3
sbb
mov
cwtl
sbb
mov
inc
cwtl
into
xlat
sub
dec
pop
es
dec
fwait
addr16
sbb
inc
ss
lods
jne
adc
mov
call
add
movsb
call
pushf
push
cld
out
leave
and
call
test
test
inc
and
jbe
inc
jecxz
ja
lret
fldenv
fstl
or
loop
adc
jecxz
jmp
inc
aam
and
dec
push
or
push
push
push
xchg
aad
jecxz
cmp
lret
jae
cltd
mov
cmp
dec
mov
inc
push
jmp
and
aam
push
cld
sbb
jnp
lods
rclb
xchg
xchg
mov
add
pop
pushf
and
cmpsl
sbb
scas
mov
dec
fwait
adc
mov
sbb
xor
adc
lret
lds
popl
aaa
mov
aaa
iret
pop
or
add
mov
pop
fcomi
repnz
xchg
xchg
or
cmp
add
jbe
inc
movb
out
jno
daa
inc
movsb
push
leave
mov
mov
lds
sub
cmpsl
and
rcrl
dec
mov
push
mov
sahf
push
xchg
sub
fucomi
mov
jecxz
push
aam
int3
bound
and
jno
xchg
sbb
cmp
leave
push
push
inc
int3
jl
xorl
fs
pop
icebp
fnop
scas
jo
xor
sub
mov
mov
mov
jg
in
mov
push
in
subb
lea
jne
mov
lcall
std
insl
out
sub
cmp
fdivp
and
inc
xchg
stos
std
loope
cltd
in
clc
out
jg
fstl
sub
inc
outsb
sbbb
jmp
and
pop
sub
int3
mov
push
sub
jge
jnp
rorb
test
sub
sbb
and
andb
hlt
lods
mov
xor
mov
xchg
int
lods
push
int
sti
inc
inc
ja
mov
dec
sub
mov
push
mov
fstps
out
arpl
mov
pop
inc
cmp
push
clc
jmp
xchg
add
js
lea
or
movl
xchg
ror
jbe
cmovle
sub
mov
pop
sub
je
add
insw
outsl
stc
push
sub
rorl
or
cmc
in
sbb
mov
sbb
loope
loop
mov
je
cwtl
sbb
dec
jnp
jl
dec
aam
pop
xchg
push
jb
jle
aad
xchg
leave
mov
pop
addr16
insl
cmpsl
ljmp
inc
sub
cmovge
jp
fcmovbe
fists
pop
jb
jbe
hlt
test
mov
imul
xchg
js
test
je
sub
pop
insb
push
lret
xchg
jle
dec
addr16
fistpl
jmp
and
xchg
mov
pop
jmp
inc
add
subb
mov
lret
or
data16
jb
fiadds
fisubrl
popa
sahf
xchg
movsl
jo
inc
inc
leave
fiadds
mov
fiadds
sub
dec
or
inc
and
negb
cltd
adc
or
xchg
stc
fisubl
mov
dec
jae
loopne
mov
pop
aam
mov
ja
andb
add
popf
pop
fs
lea
or
int3
adc
lahf
xchg
or
int
xchg
xchg
sbb
test
in
jnp
fistl
cmc
and
mov
lods
fwait
test
call
icebp
lock
dec
add
sbb
mov
xor
ljmp
or
jmp
fs
repz
mov
loop
stc
dec
leave
jle
and
add
aas
out
inc
cltd
or
and
add
and
repnz
add
cld
push
or
xor
mov
sub
test
jmp
jbe
add
cmp
jmp
std
pop
mov
ds
jle
jb
jmp
les
mov
push
inc
lcall
shrl
jae
dec
sahf
and
faddl
stos
lock
adc
sbb
dec
fadds
aas
dec
in
sub
fildll
xlat
rcrl
xchg
ljmp
push
cmpsl
xor
and
clc
pop
inc
xchg
dec
je
outsl
mov
aas
loop
push
cmp
sbb
or
xchg
arpl
dec
xor
sub
cld
call
daa
call
xlat
and
add
jecxz
xchg
mov
jge
movsb
inc
dec
jno
push
pop
sub
dec
stos
jg
dec
bound
fs
sub
pop
jbe
jle
inc
stos
imul
mov
jo
mov
out
and
adc
fmuls
scas
adc
fadds
icebp
xor
and
dec
shlb
cmp
ja
ja
push
sbb
mov
pop
lods
mov
ja
popa
enter
mull
in
and
cmp
ret
jle
push
add
fwait
cmp
es
aaa
out
cmp
fistl
std
rolb
sub
xor
sbb
dec
sbb
inc
popa
xchg
iret
xchg
sub
stos
push
mov
mov
add
mov
add
in
arpl
sbb
cmpsl
cmpsb
idivl
add
sub
mov
pusha
mov
push
fsub
jl
and
std
add
cltd
xchg
sar
adc
sbb
xorb
mov
push
lahf
mov
push
pusha
rolb
adc
mov
rcrl
in
xchg
xor
sbb
daa
mov
push
fcomps
jae
lods
or
shlb
sbb
idivb
xor
adc
dec
ficoml
mov
mov
adc
lcall
and
js
push
shrb
cmp
mov
add
enter
cli
daa
pop
add
cmp
push
scas
test
fildl
add
dec
and
pop
jno
or
rcl
cmpsl
jbe
sub
jle
cmpsb
in
fsts
pushf
push
mov
add
cmc
sbb
subl
mov
imul
xlat
adc
push
fs
pop
ja
aaa
es
cmpsl
pop
jne
mov
out
inc
rorl
imul
dec
cwtl
cmpsb
data16
rcrb
mov
lock
or
fs
iret
cli
xor
dec
cltd
add
or
inc
subb
mov
loope
cmc
shrb
mov
notb
pushf
int3
gs
pop
push
pop
fdivl
insb
xchg
jb
lea
cmpsb
mov
outsb
fs
add
push
adc
push
shlb
mov
add
shl
xchg
repnz
mov
adc
push
ss
mov
enter
cwtl
mov
mov
idivb
jl
lret
lods
fsubrp
shlb
out
sbb
xchg
dec
or
dec
ret
popl
test
jg
push
push
aam
xor
movsl
add
push
xchg
push
into
cmp
int
pop
mov
aaa
out
ret
adc
xchg
aad
std
pop
xorb
ficomps
add
fstps
mov
mov
fwait
testl
mov
dec
data16
push
adc
or
xor
or
sbb
mov
fstl
mov
das
xchg
and
pop
pop
pop
test
aad
xor
adc
mov
mov
mov
shlb
pop
mov
lret
sbb
repnz
mov
movsb
and
mov
or
sbb
cmp
push
sub
std
setnp
jno
mov
lcall
imul
ror
sub
and
jmp
cli
sbb
jb
and
adc
push
cmc
rcr
or
int
jg
insl
dec
adc
xor
dec
ret
out
inc
aam
subl
cmpsb
mov
fstl
aaa
xchg
imul
popa
push
cld
rcrb
stos
ss
fsts
rorl
adc
pusha
adcl
lcall
mov
rolb
subl
fisttps
insl
pop
xor
lret
mov
into
inc
mov
inc
aaa
or
push
pushf
test
pusha
iret
inc
mov
sub
cmp
dec
mov
insb
imul
gs
mov
stc
push
xchg
dec
addr16
cld
jnp
loopne
adc
adc
mov
xchg
js
scas
inc
mov
inc
cltd
in
iret
mov
call
jmp
into
push
cmc
push
push
mov
outsb
push
je
movsb
stos
popa
add
or
cmp
sahf
sub
repz
xor
push
daa
lahf
xor
cld
ret
lods
mov
inc
push
lods
lea
pop
cs
add
loopne
and
mov
mov
sar
push
repz
push
pop
mov
mov
in
lret
add
lcall
cmp
push
and
cs
ja
test
ja
jmp
mov
aam
add
push
mov
outsl
push
fistps
fdivl
sahf
mov
aas
or
out
xchg
cwtl
cmp
mov
in
das
mov
stos
push
aaa
pop
ret
ror
fdivl
movsb
sbb
ror
push
outsl
push
mov
push
int3
mov
or
fistpl
sub
mov
shll
dec
jg
aaa
sub
mov
decl
stos
je
mov
push
push
mov
adc
inc
aas
popf
jl
mov
jo
aam
mov
dec
jb
mov
fwait
push
popf
push
push
std
jne
mov
sbb
adc
pop
fimull
inc
mov
stos
addb
in
lcall
insl
mov
jne
mov
push
lods
out
mov
xchg
or
cwtl
mov
cmp
stc
pop
pop
inc
sub
popa
cmp
pushf
pop
stos
sbb
mov
ficomps
arpl
test
addr16
pop
fistpll
andb
lret
pop
jns
pop
cmp
mov
pop
pop
je
adc
push
imul
cmp
push
rcrb
or
fdiv
jl
mov
mov
mov
pop
mov
in
data16
in
cltd
jg
dec
sub
je
sbb
add
cltd
lods
scas
jns
clc
push
xor
les
mov
or
cmp
jge
call
aad
test
xchg
stos
mov
fs
cltd
insb
xchg
lods
daa
jecxz
outsl
fidivrl
cs
aas
shll
jmp
adcb
jno
addr16
pop
pop
cmp
sub
movsb
jge
sub
cwtl
jp
xor
xchg
xchg
adc
mov
xchg
je
sti
mov
loope
in
lcall
in
movsl
and
cmpsl
insl
dec
lea
or
decb
std
push
lcall
jg
arpl
addr16
jl
sbb
mov
push
outsl
add
test
xor
sub
mov
test
int3
and
imul
loop
and
movsb
mov
xor
or
inc
jp
and
mov
push
test
negb
push
jecxz
arpl
aas
pop
mov
scas
fiaddl
mov
data16
std
mov
fs
sahf
inc
ret
mov
loopne
push
add
mov
pusha
jae
sahf
pop
pop
fistl
mov
adc
cltd
adc
cmpsb
lahf
mov
loopne
jne
loop
pop
inc
aam
and
test
adc
fldlg2
xlat
xor
xchg
jge
insb
push
sub
adc
cmpsb
loope
push
pop
push
jmp
mov
mov
sbb
jl
rcrb
and
mov
ret
test
mov
mov
dec
pop
lcall
aaa
mov
div
push
stc
mov
popa
push
jnp
inc
xor
insl
cmpsl
out
flds
xchg
filds
pushf
pop
push
in
jne
movsb
jae
inc
xchg
lret
mov
and
mov
pop
lods
pushf
iret
and
xchg
ss
sahf
in
in
push
push
xor
pop
sbb
icebp
xor
aas
inc
int
fnstcw
or
jns
out
and
pop
jbe
clc
jge
xor
lahf
ret
xor
std
loopne
cmp
adcl
or
xchg
test
lret
mov
inc
xchg
cs
daa
sbb
push
aad
leave
iret
inc
lahf
jp
xchg
adc
inc
leave
movsl
cmp
or
loopne
mov
out
push
movsl
cwtl
cmp
sub
aaa
insb
ret
cmp
push
mov
fisubrs
in
push
mov
adc
lret
mov
in
cwtl
xchg
fdivl
hlt
mov
inc
test
inc
mov
inc
shrl
gs
pop
icebp
lahf
lods
xchg
add
mov
jmp
pop
push
mov
mov
dec
inc
iret
adc
sti
ss
adc
call
imul
cmc
sub
sarb
pop
pop
jns
add
dec
inc
shrb
adc
adc
push
stos
jecxz,pn
movsl
mov
repnz
xchg
stos
jmp
xchg
jle
push
xor
jns
mov
rcll
mov
and
mov
mov
sbb
fidivl
mov
mov
and
arpl
xchg
in
ror
inc
push
ja
rclb
adc
dec
idivl
mov
and
sub
repz
mov
enter
aas
xor
inc
push
adc
or
cmpsb
loope
pushf
xchg
sbb
mov
xchg
or
sbb
lret
cmp
int3
cld
adc
dec
cwtl
mov
lret
sub
ja
push
adc
aam
ds
lods
xor
sar
fmull
leave
sub
jno
cmp
mov
stc
inc
sbb
xchg
loope
xchg
ror
pop
mov
lea
pop
popa
push
mov
cmp
inc
jae
dec
out
or
stc
test
xor
jle
loop
lds
push
or
ja
and
lcall
daa
pop
std
popl
or
mov
insl
and
lcall
inc
fiadds
stos
dec
fnstenv
out
scas
xchg
inc
aas
fbstp
dec
iret
lea
xor
push
xchg
or
add
jb
mov
pop
je
leave
cmp
fucom
fisttpll
dec
push
enter
cli
adc
adc
insl
in
push
mov
or
icebp
rcl
cmp
shl
mov
jmp
bound
sub
cli
sbb
fsubrs
add
enter
in
sub
jg
lods
adc
dec
jp
jle
inc
ljmp
mov
pop
and
mov
or
jnp
pop
jmp
subl
or
jle
rcll
out
cmc
stos
sbbb
or
or
ja
xchg
scas
ljmp
add
rolb
mov
pop
push
dec
lock
xor
mov
andb
out
mov
repz
jnp
es
push
pop
mov
cld
inc
xorb
out
xchg
add
push
imul
inc
je
sbb
jp
stc
add
inc
fimull
insl
daa
jg
fwait
leave
lea
jb
xchg
addr16
in
sub
mov
inc
xchg
xchg
mov
jl
xchg
xor
lcall
icebp
sub
push
arpl
adc
jnp
mov
test
flds
inc
push
decl
out
mov
push
jle
pop
cmp
imul
mov
sti
cmpsb
add
outsl
lods
lret
hlt
ret
sub
jg
xor
xor
xor
mov
mov
lea
and
mov
adc
jbe
sbb
in
outsb
pop
cmpl
and
and
pusha
pushf
popf
jp
orb
xchg
jmp
out
ret
mov
sarl
ljmp
popf
pop
fdivl
in
sbb
lea
shlb
pop
in
sub
cwtl
xor
jbe
jno
or
fldt
pop
test
aad
add
cltd
adc
outsb
inc
in
pop
add
xorl
pop
test
dec
cmpsl
movsb
push
adc
adc
dec
cli
pop
data16
ja
shrb
stc
cmp
bound
inc
inc
jmp
pop
rcrl
mov
or
cmp
rcrb
addr16
lret
mov
and
or
lods
dec
inc
leave
mov
mov
mov
jl
push
dec
sbb
fisubl
add
jmp
lret
dec
daa
das
lcall
or
jle
test
les
dec
xor
mov
icebp
iret
lock
mov
outsl
lods
movsl
xchg
pop
xchg
sbb
or
xor
pop
call
lcall
cltd
push
add
hlt
arpl
outsl
cld
push
mov
dec
lods
addb
mov
cmp
and
cmp
mov
add
jno
jmp
sti
add
jb
xor
and
lahf
test
inc
add
sbb
dec
sub
push
xor
mov
aaa
fwait
adc
adc
jge
or
mov
mov
das
nop
xorb
sub
sub
jg
mov
aad
mov
pop
sub
pop
mov
js
and
pop
jecxz
dec
sarl
pop
pushf
jg
add
pop
mov
or
cmc
repnz
loopne
ljmp
repnz
push
push
cmp
mov
adc
or
sbbb
loope
dec
adc
xor
dec
push
sub
jmp
lock
mov
jp
das
xor
pop
ds
movsl
test
dec
aam
sbbb
addr16
rcrb
inc
mov
mov
test
jg
jb
dec
xchg
jp
out
in
adc
or
fcomps
out
out
int3
or
pushf
sub
mov
mov
adc
addr16
sbb
inc
jno
daa
dec
sub
loopne
xchg
and
dec
jns
mov
jl
mov
addr16
shlb
mov
add
xchg
pop
iret
gs
mov
and
sbb
xor
mov
loopne
mov
out
adc
loope
jne
jo
cs
ret
loop
cmc
pop
push
sbb
inc
dec
xor
adc
jle
jg
pop
dec
shlb
and
push
repnz
dec
daa
test
pusha
movsb
das
add
aas
xor
push
lahf
bound
roll
sbb
testb
popa
lret
icebp
add
xor
outsl
fldenv
push
sub
repnz
insl
adc
pop
sbb
pop
xor
jns
nop
cmp
mov
mov
sbb
test
dec
cmp
popa
mov
lahf
dec
fs
movsb
nop
xor
imul
icebp
cmp
clc
mov
mov
in
test
outsb
add
stc
rorb
and
inc
or
mov
inc
test
cmp
mov
fdivrs
adcb
iret
test
adc
xchg
fldenv
adc
adc
cmc
imull
stos
and
cmpsl
jbe
shlb
stos
rcrb
mov
jb
fistpll
mov
xlat
popf
cmp
pushf
xor
cmp
rcll
sbb
xchg
mov
mov
fistps
imul
push
fcmovb
cmp
ljmp
vmaxsd
dec
sahf
jmp
cmp
xchg
pop
decl
jo
popa
call
adc
and
pop
aad
pop
push
adc
dec
bnd
push
in
filds
pushf
cmp
jo
out
out
sti
jno
das
ret
inc
lock
jb
add
adc
iret
shrl
xchg
add
xchg
pop
xor
mov
sub
mov
pop
push
dec
lcall
fisttps
mov
imul
push
inc
fwait
jmp
test
and
or
testl
movsb
cwtl
xchg
mov
xor
pop
ret
mov
mov
xor
sti
adc
cmp
aad
ret
and
mov
push
aas
inc
std
outsl
cmp
aas
lret
lret
sti
add
bound
dec
cmpsb
clc
lea
xchg
push
mov
adc
push
sarl
fnstsw
jmp
dec
or
xor
stos
mul
xchg
lahf
fcompl
push
fstpl
jmp
arpl
jle
mov
cmp
sbb
ljmp
xchg
inc
mov
xchg
inc
cs
js
inc
mov
cmpsl
out
adc
andb
fldenv
bound
xor
xor
syscall
fstpl
lods
subl
sub
es
xor
inc
xchg
subb
cmpsl
outsl
ds
cld
mov
dec
adcb
movsb
inc
lcall
lds
insl
test
mov
int
test
clc
add
mulb
movsl
sahf
adcb
sarb
xchg
inc
mov
call
test
lahf
mov
out
mov
jle
gs
pop
pop
cmc
mov
add
rol
xchg
mov
mov
and
lcall
inc
out
cwtl
dec
mov
and
subl
repz
mov
or
mov
sbbl
clc
pusha
xor
or
cld
adc
jle
mov
fnsave
stos
jecxz
shrl
ss
lahf
mov
enter
test
add
js
pop
or
and
jo
out
push
movsl
mov
push
mov
rep
or
sbb
mov
test
mov
mov
cs
inc
xchg
aas
cmp
pop
push
fiadds
cmc
xor
aas
sbbb
mov
cld
out
mov
jb
jle
jle
push
decl
hlt
sbb
cs
mov
mov
sub
jp
xchg
outsb
jbe
adc
inc
ret
call
popf
xor
ljmp
push
lea
add
and
add
or
jnp
out
hlt
jle
test
mov
stos
rolb
rcr
loopne
xlat
fmul
push
jns
cmp
dec
data16
mov
adc
out
aaa
xor
mov
or
and
fadds
ret
push
std
mov
movsb
imul
mov
adc
pusha
add
cli
sbb
sbb
pusha
clc
add
xchg
sbb
mov
adc
pusha
fst
fistps
aaa
hlt
lea
idivb
cltd
cwtl
jmp
ret
add
cmp
add
bound
lods
lea
cltd
aam
xlat
test
mov
jecxz
lods
or
in
jb
xchg
pop
adc
xchg
or
rcl
adc
cmpsl
cli
iret
aad
mov
jge
cmpsb
mov
pop
fstpl
ja
cmc
pushf
dec
addb
cmp
adc
cmp
subb
jb
sbb
cld
push
push
jb
cmp
sub
sbb
push
sti
nop
and
mov
rorb
stos
in
iret
bound
cli
hlt
imul
cmc
cmp
adc
jmp
into
in
xor
pop
ja
or
inc
dec
sub
sbb
pushf
jecxz
inc
cmp
rorl
mov
ljmp
mov
movsl
sbb
inc
hlt
sub
imul
pop
cmp
jp
sub
jge
cmc
and
scas
mov
cmp
fidivrl
xorl
test
or
lods
xchg
aas
jle
cmp
push
lods
mov
adc
fisubrs
and
int
adc
fcomps
xor
js
mov
int3
pop
mov
enter
cs
cmpsb
or
push
fs
enter
mov
sub
cmp
jge
aas
cltd
jns
addl
jp
adc
ret
push
subl
add
mov
aas
push
xor
in
jbe
pop
arpl
fdivr
mov
fmuls
xchg
dec
xchg
or
pop
jo
mov
arpl
adc
jo
loope
pop
call
adc
pusha
jle
pop
jnp
rol
popf
lcall
into
mov
sbb
jno
xchg
xchg
jmp
repz
pushf
pop
dec
cwtl
je
sub
lret
ja
pop
mov
pop
nop
inc
addb
test
aas
push
bound
add
mov
inc
fs
or
imull
xchg
xchg
decb
push
ds
mov
push
or
andl
lock
jmp
scas
ja
lea
sbb
and
imul
cmpsb
or
iret
sbb
mov
fdivs
mov
add
jne
push
xor
mov
xor
orb
pop
daa
lret
push
xor
pop
jle
paddd
inc
test
int
cltd
movsl
jg
mov
mov
js
pop
fs
decb
inc
js
hlt
cmpsl
push
in
and
cmpsb
lret
jp
cs
mov
inc
jae
pop
cmpsb
imul
sub
repnz
sahf
daa
mov
shrl
add
inc
jge
icebp
adc
mov
loopne
cltd
dec
push
jno
cmc
ljmp
adc
jno
out
popl
mov
lahf
push
out
dec
sbb
mov
repz
aad
loope
pop
jmp
iret
or
mov
js
cmp
or
push
shll
add
pop
push
xchg
shl
mov
or
add
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
popa
or
add
add
add
add
inc
push
dec
pusha
fcoml
push
mov
xor
pop
sub
jns
mov
shlb
into
mull
scas
and
mov
or
out
popa
add
cmp
lea
mov
std
adc
rorl
mov
cmp
inc
lods
pop
test
jp
mov
push
cmp
mov
add
jl
mov
inc
insl
movsb
pop
in
dec
sbb
cltd
sahf
jmp
pop
or
sbb
dec
test
pop
cmp
pop
fidivl
pop
add
aam
sub
pop
in
pop
icebp
lret
js
gs
aad
movsl
test
adc
sbb
dec
push
test
loope
push
cwtl
mov
jbe
inc
adc
arpl
xchg
mov
sbbb
push
or
leave
jno
insb
mov
lds
cmpl
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
