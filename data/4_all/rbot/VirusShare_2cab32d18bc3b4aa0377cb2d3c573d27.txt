or
add
add
add
add
or
add
add
movsb
add
add
add
add
add
or
add
add
add
pop
add
add
adc
add
add
add
add
jne
or
test
or
xchg
add
cmpsb
add
mov
or
ret
add
add
add
roll
or
add
add
loop
or
add
add
add
add
add
add
add
add
and
or
add
add
add
add
add
push
add
addb
add
inc
add
add
add
pop
add
add
add
je
or
clc
add
pushf
add
add
add
adc
or
rolb
add
or
enter
sub
or
rolb
or
xor
or
fadds
or
inc
add
loopne
or
dec
add
call
add
add
or
lock
pusha
add
clc
add
push
or
add
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
dec
dec
add
push
inc
push
xor
inc
dec
dec
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
push
cs
dec
dec
add
inc
push
dec
cs
dec
dec
add
inc
push
dec
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
aas
xor
imul
jb
jae
fs
inc
push
inc
inc
inc
inc
inc
push
xor
inc
inc
pop
add
add
je
arpl
popa
bound
add
inc
js
je
imul
js
add
push
gs
gs
imul
jne
add
add
gs
insb
inc
js
arpl
gs
add
add
gs
popa
outsb
arpl
inc
outsl
outsb
outsb
arpl
outsb
xor
add
inc
gs
outsl
fs
gs
popa
jae
dec
popa
insl
gs
add
add
push
jne
jb
pop
inc
add
add
and
add
add
add
add
add
add
add
jmp
lock
xchg
lock
xlat
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
or
add
add
or
add
ss
loopne
cmpsl
repz
sbb
into
and
inc
pop
in
icebp
pop
rcll
sysenter
jl
pusha
or
dec
stos
cwtl
mov
cltd
jae
aad
or
adc
iret
mov
fistpl
popa
loope
mov
mov
test
out
lods
jmp
push
pop
cs
outsl
sub
add
subl
insl
jmp
enter
imul
push
cmp
jmp
xor
mov
outsl
mov
sbb
in
add
les
push
xchg
loop
out
out
dec
icebp
jecxz
cld
data16
jge
or
xchg
adc
mov
mov
xor
or
js
mov
sub
mov
aaa
loopne
aad
dec
fwait
mov
adc
lea
out
adc
fnstcw
or
jle
addr16
outsb
sti
dec
cmpsl
xor
push
jnp
cli
repz
pushw
inc
pop
std
aaa
pop
xorb
sub
pop
and
sbb
lret
push
dec
push
push
shl
pop
push
ret
leave
mov
cltd
shlb
add
jo
jl
mov
addr16
mov
pop
repnz
jb
daa
mov
xchg
ljmp
cmpsl
fistpll
shl
xchg
roll
sbb
ds
gs
lcall
and
xor
push
fistps
sarb
int
fmul
lret
mov
data16
decb
sbb
fs
or
xchg
sbb
dec
mov
mov
or
inc
and
pop
dec
je
jl
fcos
cmpl
jp
mov
arpl
jp
out
cmp
jno
mov
sahf
jmp
cmp
popa
dec
and
arpl
xor
aaa
insb
in
fnstenv
adc
add
outsb
in
lret
pop
xchg
push
les
inc
push
fcompl
aad
aad
in
mov
ja
test
notb
movsb
cmp
mov
jg
arpl
inc
jae
xchg
daa
imul
ja
and
sbb
js
push
sub
ds
cli
adc
sub
sub
outsl
inc
push
jg
sbb
leave
add
sbb
jmp
fcoml
push
xchg
rcrl
sub
repz
cmp
xorps
pop
js
jmp
addr16
frstor
adc
enter
mov
mov
ffreep
stos
push
mov
cmp
mov
xchg
mov
in
jle
inc
inc
not
je
fnstenv
jne
cltd
lret
test
pushl
aad
scas
ss
jl
sahf
call
xchg
jecxz
adc
leave
cltd
je
adc
cmc
xchg
pop
xchg
fsubrl
fnstcw
aaa
pushf
test
mov
je
pushf
mov
mov
out
mov
xchg
popa
jg
sti
jbe
xor
push
xchg
mov
roll
jns
inc
dec
cmp
aad
mov
in
adc
jne
mov
push
imul
or
cwtl
and
test
add
out
mov
js
lret
stos
enter
aam
push
push
rcrb
lock
enter
lds
mov
dec
and
stos
xchg
mov
jmp
mov
outsb
scas
fisubl
hlt
sbb
adc
and
ret
inc
jo
insl
fwait
js
stos
adc
mov
outsl
sti
in
testb
xor
inc
shrb
and
cmp
push
xchg
roll
jae
js
out
sub
and
or
popl
xchg
and
push
aas
cmc
sbb
pop
push
mov
aad
cmpsl
in
inc
mov
pushf
loope
cli
or
mov
xor
push
bound
cld
stc
cmpsl
sti
sub
xchg
add
shrd
add
rcr
aas
xorl
jbe
mov
outsb
test
mov
les
xlat
mov
mov
es
in
push
daa
xchg
in
sbbb
outsl
xor
mov
mov
add
mov
fstpl
pop
aad
clc
cmpsb
addr16
adc
fmull
fiaddl
loopne
in
testb
icebp
popf
ds
or
cltd
aas
mov
xlat
ret
mov
and
aad
clc
mov
inc
sub
dec
inc
es
lods
and
scas
add
imul
xchg
add
push
cmc
in
mov
shrd
and
inc
add
adc
lods
mov
or
mov
es
andl
clc
mov
paddusb
out
pop
lods
dec
sbbb
jo
rcrl
ss
mov
jmp
aam
fxch
lret
rcl
mov
sahf
ds
pusha
mov
stos
mov
xchg
loope
fists
lock
mov
jno
push
mov
sub
xor
pop
cmp
mov
push
dec
lret
push
arpl
pop
shll
in
and
push
pop
push
hlt
bound
daa
lret
cmp
imul
insb
jae
leave
add
scas
pop
pop
dec
adc
clc
mov
ljmp
add
call
or
loope
jns
mov
jnp
and
ss
sub
imul
btr
mov
mov
fisttps
add
dec
mov
push
or
push
mov
fbld
daa
clc
sub
rolb
cltd
pop
lret
test
push
inc
insb
jecxz
pop
stc
pop
jecxz
ret
test
fldt
cmp
and
mov
push
jp
test
lds
add
ss
mov
mov
repz
sub
into
inc
hlt
je
or
mov
clc
mov
dec
inc
popa
lret
aas
and
or
sbb
ud0
aaa
sub
mov
sbb
mov
add
mov
mov
iret
push
int3
inc
mov
push
pop
adc
es
and
movsl
or
sub
sub
jle
mov
jne
cmpsb
xchg
xor
mov
shrl
ror
adc
mov
mov
sbb
cmpsb
aad
cmp
es
das
fstps
aaa
and
mov
fdivrs
push
jno
cmp
out
xchg
add
rclb
aas
rorb
cmp
lea
sahf
es
jne
xchg
mov
mov
and
out
sub
aam
popa
dec
das
jae
ja
fiadds
and
fimuls
xchg
mov
mov
insl
int3
push
jp
adc
jmp
into
outsl
repz
pmullw
ss
dec
loopne
dec
outsb
iret
gs
sbbl
dec
adc
in
sub
fnstcw
leave
dec
test
mov
cwtl
loop
mov
jl
jo
das
rcll
fistl
pop
inc
filds
mov
fs
xchg
inc
lahf
mov
inc
rclb
bound
sti
iret
jmp
movsb
loopne
out
faddl
or
iretw
adc
jo
mov
inc
clc
xchg
fwait
cmp
scas
dec
loopne
mov
repnz
outsl
imul
push
in
mov
add
outsl
pop
jp
leavew
cmpsb
popf
faddl
fistpl
xchg
push
out
mov
addl
pushf
xor
shll
xchg
loope
pushf
outsl
mov
xor
mov
sub
es
iret
mov
sub
or
pop
sbb
or
sbb
in
cmp
jmp
je
scas
shrl
add
xor
lods
fistps
cmpsl
rorl
jnp
je
icebp
lea
data16
jnp
int3
add
fldt
icebp
rcrb
cmp
ret
call
cmp
and
cmp
sbb
pop
cmp
mov
push
adc
adc
add
scas
inc
enter
sbbb
xor
cmp
lahf
lret
les
sub
push
jge
lea
je
stc
leave
jecxz
ja
cmp
lret
pop
imul
mov
push
fldl
or
fdivl
jp
cmp
xor
out
ja
pushl
sub
ljmpw
lds
mov
inc
sub
add
scas
push
adc
outsb
andb
sbbl
inc
shlb
cmpsb
sar
mov
or
mov
gs
into
sti
mov
cmp
dec
inc
add
cmp
std
jbe
mov
fs
sub
and
inc
clc
dec
outsb
sub
cmp
pop
pushw
mov
in
pop
mov
imul
shlb
mov
mov
push
ret
lods
pop
cmp
hlt
out
mov
xchg
das
pop
pushf
push
push
xor
mov
in
shrl
inc
mov
sbb
data16
inc
jnp
cmc
icebp
mov
mov
add
jge
mov
je
inc
sbb
cmpsl
testl
xor
cld
xor
jl
leave
shrb
and
mov
xchg
push
out
in
xchg
call
xor
dec
rcrl
push
dec
fsub
jle
fcmovbe
inc
fstpl
xchg
adc
cmc
pusha
je
ret
mov
push
pushf
lods
push
cmpsb
call
jge
mov
jmp
push
out
pop
addl
mov
inc
popa
sbb
addr16
aam
jl
mov
mov
mov
pusha
sbb
test
add
call
mov
or
adc
es
mov
bound
fsubrs
xor
aas
insb
push
cmpl
xchg
mov
sub
sbb
push
mov
cli
icebp
adc
dec
outsb
int
insb
jle
mov
shrb
xchg
stc
mov
ret
mov
lods
sbb
mov
or
add
aam
leave
jne
add
or
test
test
or
test
insl
ds
cmc
iret
pop
add
out
call
cmp
xchg
sub
adc
mov
outsb
icebp
sub
je
mov
dec
sub
clc
repz
cmpsl
ret
mov
and
mov
dec
jne
lds
out
daa
inc
cmc
in
jl
or
mov
xor
fucomi
cltd
sub
out
mov
aam
sarb
imul
ret
jno
fcoms
shll
jnp
shl
add
out
or
sub
outsl
push
call
or
or
rcrl
test
rcll
rol
mov
jno
or
sbb
fs
ds
gs
adc
mov
or
aad
shll
rorb
xchg
inc
mov
push
arpl
jns
and
push
lahf
sbbb
test
repz
shlb
int3
mov
outsb
pop
pop
mov
call
or
xchg
insb
sbbl
and
add
sbb
lods
pop
les
fsubp
mov
dec
lret
mov
cmp
pop
insb
ljmp
mov
inc
fs
mov
jno
in
jl
and
stos
repnz
xchg
push
aaa
out
sub
cwtl
lret
ja
lds
nop
adc
mov
dec
push
imul
es
movsl
incl
dec
mov
outsb
popf
push
cmc
in
shll
add
outsb
sbb
loope
insl
imul
scas
js
rcrb
mov
push
dec
mov
xchg
in
sub
jne
sarl
pop
testb
push
lea
pminsw
lcall
xchg
cmp
push
pop
adc
inc
popf
sub
gs
lds
mov
sub
mov
sbb
int
jge
mov
sti
jmp
repz
dec
fcmovb
xor
es
out
sub
sbb
imul
add
sbbl
inc
sbb
aad
mov
dec
mov
mov
sbbb
cmp
cld
orb
pop
out
cmc
mov
inc
mov
clc
push
adc
rorb
mov
in
js
mov
push
add
sbb
popa
sbb
add
pop
cmp
loop
scas
lret
push
push
shlb
in
lea
sbb
inc
out
into
pop
and
xchg
dec
push
daa
test
loopne
lock
dec
test
mov
mov
test
add
mov
scas
shrb
cmp
push
pop
out
enter
xchg
adc
fsubrl
nop
pop
jl
pop
adc
test
cwtl
outsb
push
cmp
jae
adc
xchg
push
or
out
push
outsb
ljmp
cmp
pusha
pop
sbb
push
cmp
dec
inc
test
sub
mov
mov
and
int3
cmpsb
insb
int3
cmp
mov
jno
ljmp
sbb
xchg
add
jne
imull
mov
jmp
lods
rclb
adc
insl
mov
lea
inc
in
xchg
add
mov
in
addr16
movsb
jp
in
lods
imul
imul
cmp
cmp
or
adc
addr16
xor
insl
cld
xchg
ljmp
movsb
pop
out
inc
leave
jbe
leave
loop
cmpsb
sbb
push
mov
hlt
xor
into
mov
and
xor
push
jle
adcl
sub
mov
push
add
out
sbb
lds
shrb
ret
repz
inc
shrb
and
push
ret
sarb
inc
jne
and
lods
xchg
test
jno
jmp
stos
pop
inc
xchg
shlb
sub
jmp
loope
push
sarb
inc
push
scas
cmp
xor
repz
lahf
test
add
out
leave
xchg
and
lahf
push
inc
aaa
pusha
inc
cmp
sub
dec
fdivrl
push
les
dec
cmp
loop
push
les
cli
jns
in
pop
test
cwtl
incb
and
and
bound
inc
idivl
push
inc
and
mov
in
ret
xchg
xchg
lcall
xchg
xor
xchg
xchg
movb
mov
sbb
vxorps
push
push
hlt
insl
push
stos
cmc
sti
adc
in
andb
stc
outsl
sbb
ds
mov
xor
pop
jmp
leave
mov
mov
add
mov
adc
aam
lea
cmpw
in
push
mov
push
ficompl
mov
xor
push
pop
mov
pop
jmp
pushf
movsl
jp
pop
fsubrl
lcall
add
leave
jl
dec
stos
daa
cmp
cwtl
pop
pop
aam
lods
push
fcomp
adc
fistps
lcall
jge
test
ret
test
dec
and
incl
jb
nop
mov
adc
inc
add
dec
cmp
aad
out
dec
xchg
in
lret
lods
shrl
mov
loop
movsb
iret
iret
xor
and
enter
outsb
and
inc
bound
ret
lods
push
dec
adc
inc
sbb
stos
hlt
lock
add
stos
mov
xor
insb
or
and
push
mov
or
sbb
ret
fsubrs
xchg
out
xchg
fs
xchg
cs
mov
fstp
push
mov
jnp
and
neg
push
jb
xchg
es
fbstp
ja
fld
pop
push
pop
add
das
mov
js
ds
cs
out
jae
xor
and
fninit
adcl
fisttpl
jne
mov
pop
hlt
jb
xor
mov
dec
jb
testl
pop
pusha
pop
jmp
int3
jo
leave
fsts
pop
xchg
iret
mov
movsb
mov
fdivl
or
mov
cltd
repz
cmp
in
pushf
pop
mov
push
add
mov
data16
repz
std
std
lea
push
adc
orb
add
dec
mov
inc
xor
or
mov
popf
mov
mov
sti
or
xchg
push
ret
xchg
pop
push
push
xchg
add
cmp
add
mov
cmp
jbe
jmp
pop
adc
stc
cli
lods
pop
inc
fs
loop
add
jnp
inc
jl
xchg
cwtl
sbb
sub
jg
out
push
pop
mov
aam
call
sbb
test
pop
fiadds
aas
jecxz
jmp
mov
dec
cmp
mov
fistpl
insb
inc
in
jle
fistl
push
xchg
cltd
adc
cld
mov
arpl
jnp
add
lret
push
pop
mov
repnz
mov
ljmp
xchg
mov
and
lahf
pop
jl
rcll
ds
loopne
cmpsl
sbbl
ljmp
repnz
stc
out
mov
or
daa
movsl
push
mov
es
stos
imulb
test
les
rorl
test
xor
adcb
outsb
add
imul
dec
push
and
cmp
mov
mov
in
dec
lds
not
mov
and
cmp
jge
sub
jns
sbb
aas
movsl
jns
mov
test
sub
mov
adc
rcrb
mov
push
leave
ret
fstp
push
das
sbb
frstor
dec
cmpsb
pusha
stc
cmp
add
stos
fs
loop
lods
mov
aam
ja
icebp
test
mov
movsb
popa
jmp
xchg
mov
repz
push
ret
adc
pop
ja
adc
pop
lcall
test
mov
fidivrs
stc
push
jnp
inc
iret
adc
and
ret
pop
aas
xchg
cmp
movsl
mov
icebp
mov
cwtl
popa
test
xchg
pop
dec
movsl
xor
xchg
push
ficomps
je
sub
std
aaa
xor
int3
adc
rcrl
repnz
outsb
scas
inc
add
cmp
cmp
mov
sub
movsl
imul
imul
outsb
movsb
arpl
dec
roll
jo
movsb
fdivrl
mov
sbb
jns
test
dec
ja
xchg
aad
push
cmp
sti
insb
inc
arpl
psrld
add
test
inc
push
call
ret
or
push
arpl
shl
into
lcall
cs
cmp
stos
mov
mov
sub
mov
pop
dec
ja
scas
je
enter
stc
aas
push
lret
push
stc
dec
add
xchg
cwtl
jp
int3
lret
test
sub
mov
cmp
mov
js
push
pusha
xchg
inc
je
test
mov
pop
icebp
push
mov
mov
push
push
fbld
loope
push
aam
scas
sub
lods
add
in
imul
dec
jno
jmp
out
test
fst
xor
cwtl
lods
sbb
pop
in
or
cs
cli
rolb
je
std
push
add
jl
adc
mov
out
out
pop
lret
xor
bound
daa
lods
in
pop
sub
adc
mov
dec
push
sbb
add
add
pop
adc
fsubs
clc
pop
xchg
addr16
pop
lods
cmp
add
pop
shll
inc
xchg
jg
push
pop
pop
cmpsb
sub
fcoms
mov
cmpsl
das
adc
iret
xchg
mov
cmp
jae
fnsave
outsb
push
roll
sbb
lds
out
push
jmp
pop
push
inc
sbbl
pop
inc
cmp
stc
xchg
cmp
add
popf
adc
dec
lods
popl
jb
fwait
mov
mov
jnp,pt
pop
sub
cltd
dec
lahf
sbb
icebp
fadd
addr16
es
cmpsl
pusha
fisubl
aaa
pop
shl
jne
loope
or
fcomi
jecxz
adc
push
cmpsl
push
filds
cmp
pop
add
out
bound
mov
jbe
and
repnz
pushf
mov
loopne
gs
lcall
pushf
add
lods
cmpsl
repnz
fisttpl
xor
and
mov
push
or
add
adc
pop
pminub
aad
cwtl
jns
sbb
mov
popf
xchg
test
pop
sti
jge
stos
xor
add
fdivrp
mov
int
fidivs
mov
fsts
js
movsl
mov
fcoms
xor
jle
ljmp
insl
push
mov
or
xor
pop
jae
dec
fadds
push
fsubr
and
xor
xchg
clc
xchg
mov
jp
stos
mov
mov
and
negl
jb
outsb
fisubl
and
nop
pusha
lods
cltd
push
cli
mov
push
jns
cltd
push
pop
xlat
insb
sub
fstpt
fistps
jb
hlt
cmp
inc
gs
or
pusha
out
in
cmp
cmp
imul
cli
sbb
cld
mov
test
fdivl
jo
popa
lahf
stos
cli
xor
pop
add
dec
xchg
dec
arpl
icebp
das
in
sbb
ds
sub
pop
sti
pop
jmp
mov
lds
sarl
push
mov
pop
popa
inc
xchg
push
pop
and
imul
movsb
pop
call
mov
fwait
inc
push
and
dec
fdivs
arpl
stos
es
sub
pop
xchg
pop
jmp
aaa
stos
dec
lods
mov
les
mov
clc
into
sub
mov
fisubs
lock
pop
mov
or
pop
das
push
lds
dec
sub
scas
sub
push
leave
fs
clc
fists
inc
jae
xchg
fcomps
jb
sbb
add
scas
pushf
sarb
mov
cwtl
shl
cmp
xor
inc
jmp
xchg
jp
lods
mov
inc
sti
cld
vmread
xlat
dec
inc
aas
cmp
cmc
mov
inc
and
pop
sti
rorl
subl
out
xor
xor
ret
or
xchg
sub
push
inc
movsl
fbld
pop
into
mov
and
int3
cltd
jb
aam
pop
sub
adc
hlt
lods
mov
mov
in
mov
les
ret
cmp
repz
jmp
repnz
fwait
out
mov
pop
xchg
loop,pt
mov
adc
loope
imul
adc
shrb
gs
hlt
or
aas
cmp
test
in
sbb
jle
in
push
arpl
scas
mov
push
pop
mov
xor
test
jmp
xchg
pop
insb
pop
rcl
or
push
out
inc
in
pop
xchg
mov
mov
xchg
cmp
adc
jo
fs
in
xlat
aam
inc
dec
and
movlps
fdivs
pusha
push
sub
pop
fsubr
shlb
fucom
scas
fbld
xor
pusha
pusha
loopne
sti
pushf
lcall
mov
cmp
push
mov
pop
cli
xchg
lods
aam
stos
mov
push
sub
fisubl
stos
adc
sub
and
mov
incl
or
xorl
inc
lock
aam
mov
das
add
int
and
fsts
aad
mov
xor
mov
xor
addr16
je
test
pusha
insl
movsl
sbb
ljmp
outsl
loop
fisubrl
jbe
loop
rcl
pop
dec
dec
sbb
lret
push
int3
mov
sub
xor
xchg
ljmp
outsb
outsl
gs
orb
mov
push
sub
and
rol
les
mov
sbb
jge
mov
dec
inc
xor
call
mov
out
cltd
mov
dec
jae
pusha
std
and
sub
cltd
in
lahf
lret
push
and
push
xor
lods
popf
lock
gs
push
push
jmp
adc
cmp
adc
popf
jl
jge
pop
in
in
neg
xchg
call
stos
jecxz
fbld
je
faddl
sub
sbb
popa
and
out
pop
mov
ret
scas
pop
sub
pushf
sbb
push
adc
popf
and
lock
stc
inc
xchg
or
inc
mov
xchg
jmp
jae
into
mov
negb
out
xor
add
dec
jbe
subb
lea
lret
mov
mov
push
jp
leave
iret
test
sbb
sub
push
inc
pop
pop
clc
lds
stos
xor
xor
push
xchg
sub
loope
cmp
inc
loope
cmpsb
lret
mov
aaa
jo
lret
mov
or
xchg
jmp
popa
data16
add
xchg
in
fs
xor
add
adc
stc
std
pusha
cmpsl
pop
jns
sub
add
daa
xchg
iret
loope
pop
mov
jno
enter
xorb
sbb
dec
insl
mov
jno
pop
dec
and
sbb
dec
xchg
cli
jecxz
pop
push
jecxz
imulb
inc
mov
notl
movsb
dec
adc
sub
cmp
sarb
jecxz
outsl
clc
adc
xchg
aad
mov
lret
xchg
dec
push
mov
jle
push
push
popa
imul
dec
jbe
imul
mov
div
dec
adc
jnp
mov
in
inc
ljmp
dec
jg
mov
mov
stos
out
jecxz
repnz
sub
cli
or
stc
push
divl
testl
lahf
out
inc
in
pop
xchg
xchg
and
mov
push
mov
or
stos
mov
or
xchg
mov
or
dec
insl
jp
add
nop
xchg
inc
outsl
das
sub
pop
and
jbe
rcrl
stos
into
in
repz
add
sub
mov
dec
loopne
scas
iret
adc
adc
jecxz
and
push
aam
mov
fdivr
lret
xchg
push
xchg
xchg
scas
arpl
and
lods
lds
mov
fdivrl
inc
popf
adc
ret
call
in
hlt
mov
adc
jmp
jb
daa
outsl
pop
push
xchg
add
mov
and
les
mov
mov
icebp
adc
test
push
or
aad
dec
dec
sbb
sub
jnp
in
les
mov
fmuls
orb
cwtl
or
sbb
ljmp
cmp
add
in
jmp
xchg
mov
hlt
dec
orb
mov
aam
jp
shll
or
ja
or
inc
mov
pop
roll
mov
ret
jecxz
lea
test
into
xor
lods
shl
test
cltd
mov
adc
adc
loopne
iret
insl
xchg
mov
jg
xchg
aad
lods
mov
dec
jge
repz
jns
ds
sbb
jmp
mov
fs
les
cmp
into
and
or
movsb
cmp
pop
lcall
or
mov
in
xor
in
inc
sahf
mov
rcrl
mov
xchg
fistl
xchg
or
sub
jmp
outsb
out
stos
xchg
xchg
mov
mov
aam
mov
adc
xlat
lds
ret
mov
in
mov
outsl
mov
insl
cmp
cld
and
xchg
pop
sbb
movsl
fisubrs
adc
jg
push
pop
push
mov
add
int3
cmp
cmp
jns
sbb
imul
sar
enter
shrl
popa
xchg
xorb
sti
repnz
pop
addr16
repnz
fs
lds
mov
out
dec
cltd
xchg
pop
int3
or
xor
xor
and
lcall
push
mov
adc
movb
rolb
les
imul
dec
mov
rolb
bound
inc
sti
dec
or
lock
mov
mov
aas
aad
jbe
sbb
mov
push
xchg
movsl
jmp
js
nop
shll
subl
inc
pop
lret
adc
in
xlat
nop
frstor
movsb
in
test
jle
push
xor
cmp
xor
fdivs
push
loope
lret
dec
ret
iret
cmc
fsubs
mov
sbb
dec
lret
xchg
idivb
xor
add
dec
bnd
movb
jp
lcall
fistps
lcall
or
adc
sti
clc
push
sbb
rorb
xor
lock
inc
arpl
stc
xor
insl
sti
sbb
push
sub
cs
lds
and
enter
jbe
stc
movsl
shlb
cmp
adc
out
cmp
mov
mov
imul
add
mov
orb
std
loop
push
jns
imul
push
flds
add
movsl
xchg
test
fwait
pop
mov
cld
mov
shlb
jbe
fisttps
lret
bound
std
out
sub
movsl
shll
mov
sub
jle
pop
lret
xchg
add
and
adc
mov
aam
leave
sub
push
ret
andb
adcb
lock
popa
cmpsl
rclb
pause
nop
notl
pop
repnz
ljmp
mov
mov
repnz
andl
mov
out
pushf
dec
mov
lds
clc
pop
outsl
loop
out
push
pop
negl
hlt
lret
xchg
in
cmp
and
xchg
xor
lret
in
cltd
push
xchg
nop
xor
inc
lock
mov
sti
ret
mov
sub
xchg
test
or
and
dec
pop
filds
in
mov
movsl
repnz
je
jg
loop
cmpsb
push
or
sbb
shr
shl
out
jge
stos
sahf
stos
sarb
mov
in
in
jo
mov
cmp
aaa
add
aad
sub
xor
xchg
cmpb
idiv
and
and
int
popw
test
mov
icebp
mov
repnz
cltd
jg
xchg
imulb
add
push
pop
cltd
test
pop
add
mov
nop
cmp
xor
fs
push
imul
sub
push
cmp
jmp
jecxz
ret
mov
std
pop
jb
pushf
repz
leave
pusha
into
xchg
incl
adc
push
jns
nop
scas
cmp
mov
add
cmp
mov
dec
xor
dec
das
pop
inc
dec
jns
stc
test
mov
cmp
sbb
les
testb
fsub
scas
fdivrs
stc
cmp
aad
in
movsb
fs
inc
lods
loope
mov
and
iret
adc
imul
call
adc
inc
xchg
loope
adc
rcrb
or
or
out
pop
jae
imul
fdivl
cmp
das
jb
scas
jns
scas
jno
shl
icebp
ret
mov
into
leave
leave
pop
pop
sbb
adc
mov
stos
out
mov
imul
push
sbb
cmpb
mov
loope
mov
cltd
add
int
and
mov
xor
and
shrb
ljmp
xor
pushf
push
and
mov
das
mov
js
inc
test
leave
lcall
in
adc
sub
out
stos
out
or
iret
pop
cs
lret
lds
pop
pop
mov
fmul
stc
stos
int3
popf
push
mov
pop
add
dec
xchg
xchg
vpcmpgtw
pop
pop
pop
arpl
repnz
cmp
popf
shll
add
movsb
cwtl
sahf
xor
xchg
leave
sub
dec
and
flds
sahf
aad
or
xor
mov
std
scas
movsl
and
push
cltd
mov
dec
cmp
dec
push
cmpl
call
pusha
movsl
inc
loopne
jb
xor
push
fwait
mov
lds
clc
loop
mov
or
subb
lock
jle
out
mov
push
outsb
sarl
mov
neg
pop
pop
cld
pop
fstpl
inc
pop
repz
and
out
jle
sbb
in
or
pop
jne
ffree
xlat
dec
das
shll
xchg
cmpsb
fucomip
mov
sti
push
xchg
enter
adc
daa
dec
dec
mov
jbe
adc
dec
outsb
or
aam
pop
out
cmc
das
jnp
mov
add
sub
inc
mov
jno
push
loope
insb
fiaddl
std
inc
clc
and
push
pushf
shrl
leave
jno
cs
dec
repz
dec
negl
push
cld
pushf
adc
das
out
cmp
movsb
outsl
push
pushf
cmp
test
lods
jecxz
cmp
push
jecxz
xchg
xor
pop
pop
mov
ret
mov
repz
mov
jnp
add
mov
fwait
arpl
push
xchg
into
push
icebp
imul
mov
push
dec
punpckldq
cmp
xor
mov
nop
les
or
insl
or
xchg
test
mov
inc
push
adc
in
sub
test
xchg
rcrb
or
jmp
dec
inc
dec
lret
dec
jp
jg
shl
lret
fs
dec
iret
cmovg
jl
scas
mov
dec
sti
push
ja
cmpsb
mov
mull
data16
je
mov
pop
mov
adc
sbb
lea
add
jne
pop
into
mov
lret
nop
mov
mov
mov
jmp
mov
fnstsw
jae
add
iret
pop
jmp
push
xor
push
xchg
stc
xor
dec
mov
pop
add
mov
cmp
arpl
xor
xor
fs
cmpsl
sub
cltd
mov
andl
pop
aad
jns
call
or
mov
sub
pushf
int3
cmp
pusha
mov
mov
rcrb
shrb
and
pop
push
test
add
in
pop
aas
addl
mov
mov
jae
push
lret
push
in
sbb
adc
jl
call
push
add
cwtl
sub
and
cmp
ficoms
ret
adc
pusha
adc
xchg
xor
pop
in
aaa
sub
mov
pushf
fdivrl
iret
hlt
pop
je
out
xchg
out
mov
fs
or
push
xor
loop
call
and
scas
or
cwtl
gs
imul
push
shl
rcrb
in
icebp
movsl
bound
mov
scas
data16
sahf
arpl
aam
movsl
inc
xchg
add
scas
es
loope
sahf
lcall
jae
scas
mov
pop
test
pop
push
idivb
add
fisubl
mov
and
std
pop
push
lcall
mov
dec
stos
jmp
adc
pop
cmp
sub
test
sbb
pusha
mov
and
push
movsb
cmpsw
cmp
dec
out
lods
push
add
jl
push
mov
out
xlat
in
aas
lahf
mov
loop
add
cltd
stc
andb
je
adc
pusha
sbb
ljmp
lahf
mov
jnp
inc
roll
lods
rorb
ficomps
insl
mov
int
dec
cmp
sahf
dec
insl
sub
mov
sbb
and
loop
mov
jl
outsl
dec
fisttpll
inc
in
jl
push
push
outsl
or
adc
loope
mov
add
push
lods
inc
fldt
or
cmp
sbb
pop
add
popa
ja
repnz
and
popa
jl
repnz
cli
xor
pusha
sub
push
push
das
fcmovbe
ret
jbe
inc
fsubrs
pop
mov
enter
ljmp
dec
push
sbb
movl
fwait
jmp
loope
pop
add
dec
lock
xor
cld
fimull
inc
mov
lcall
pop
fiaddl
cs
mov
sub
fldz
rdtsc
and
xchg
mov
test
mov
push
xchg
jbe
pop
sub
mov
adc
mov
dec
mov
jne
xor
push
addr16
push
cmp
fdivr
mov
adc
repnz
push
jge
xchg
cmp
sbb
pop
arpl
pop
loopne
test
shll
inc
mov
sahf
mov
fs
inc
xor
addr16
repz
xchg
movsl
xchg
push
jmp
shrl
inc
shrl
gs
sub
mov
dec
clc
mov
pop
rorb
movsl
test
mov
push
insb
rorl
xchg
sub
xchg
pop
negl
inc
out
jl
bound
jge
lods
insl
mov
jno
dec
and
fs
push
sub
ss
pop
mov
mov
mov
rorb
rorl
xlat
push
push
mov
in
fdivs
data16
sbb
pop
xor
push
xchg
insl
sbb
scas
cmp
jne
mov
push
adc
int3
xor
pop
icebp
shrl
into
inc
push
or
mov
mov
data16
dec
jp
addr16
jge
inc
mov
pop
inc
int
fmull
push
xor
sub
mov
jae
iret
nop
stc
push
sub
outsb
lret
sahf
jae
dec
cmpsb
mov
je
xchg
adc
dec
and
sti
sub
adc
push
scas
loope
incb
aad
inc
sahf
daa
cwtl
test
cmc
add
push
ror
pop
lock
lcall
mov
jmp
inc
pop
cltd
fildl
mov
btr
imull
sti
push
cmp
stos
js
pop
mov
outsl
mov
fnsave
stos
test
jmp
mov
je
and
addl
fsubp
test
aam
jle
inc
dec
cmp
and
inc
xor
xchg
pop
xchg
mov
lcall
add
jae
inc
xchg
fldl
jmp
rorl
fsts
sbb
xor
cmpsl
xor
ret
insl
add
push
mov
scas
lea
icebp
fs
sbb
sahf
les
jmp
push
jb
andl
mov
out
dec
dec
jge
data16
lahf
push
inc
shlb
movl
inc
sbbl
jmp
lods
and
shrb
sub
insl
lret
data16
shr
mov
xlat
popf
ljmp
dec
add
fcomps
out
scas
dec
and
mov
jns
data16
sbb
das
xchg
imul
push
and
loopne
test
test
inc
es
mov
popl
xor
jne
push
sub
dec
nop
push
or
push
xor
adc
or
ljmp
scas
xchg
mov
mov
lds
mov
hlt
lock
sub
or
int
loop
mov
inc
aas
mov
int3
inc
or
cmpsb
into
mov
xchg
push
mov
repz
les
jne
js
jo
xchg
jecxz
gs
les
loope
sbb
mov
pop
adc
out
mov
cmp
adc
xchg
test
add
test
ret
stos
pop
mov
scas
xchg
aaa
xchg
roll
push
adc
cwtl
inc
hlt
daa
sbb
xor
inc
mov
inc
mov
xor
sti
xchg
mov
push
jns
mov
cmp
mov
mov
js
je
decb
aaa
stc
jg
sbb
sarl
xchg
dec
adc
test
inc
test
push
icebp
fists
sbb
icebp
mov
fcompl
shll
in
aaa
popf
lahf
mov
fsubr
cmp
cmpsb
push
lahf
cmpsl
call
repz
xchg
add
faddl
mov
push
js
ds
fcomps
fists
and
xchg
mov
mov
imul
fistpl
ljmp
sbb
int
dec
in
lcall
cli
out
bound
push
cwtl
dec
mov
shll
and
nop
test
ds
push
lods
jbe
mov
mov
pop
inc
mov
insl
fimull
cwtl
jge
lahf
push
cmp
pop
cmp
loopne
or
pop
clc
add
lds
sub
xchg
mov
int3
xchg
cltd
pop
xlat
dec
dec
xor
lods
outsb
gs
shlb
shll
nop
add
fdivs
fisttps
xchg
jl
daa
or
add
andl
sbb
jae
js
pushf
outsb
jg
fptan
add
cmp
xchg
mov
xor
ja
pop
mov
sub
pop
aam
mov
mov
adc
mov
sub
and
jnp
and
daa
mov
jg
dec
cmc
mov
sub
mov
push
xor
jne
sub
xchg
fs
xchg
add
xchg
inc
insl
in
repnz
incl
add
movsl
popa
sbb
insl
repz
add
dec
popa
loop
int3
mov
mov
repnz
sub
pop
cmp
or
imul
jmp
xchg
loope
jbe
lret
pushf
or
ret
jle
pop
mov
mull
in
ret
mov
pop
icebp
fucom
leave
jg
in
xchg
test
int
xor
xor
stos
pop
ret
adc
sarl
das
or
ljmp
in
lods
jae
sahf
call
nop
cs
or
outsb
jle
pop
cmpsb
shr
xchg
push
inc
xchg
cmp
mov
cwtl
loop
or
sbb
rsm
sti
fs
cmp
arpl
mov
incb
es
pop
int
imul
jle
push
sbb
cmc
pushf
mov
adc
pop
insb
or
aaa
stos
mov
lods
adc
outsb
clc
mov
cmp
push
iret
push
mov
inc
into
xchg
ffree
sbb
cmp
mov
jl
add
xchg
or
sbb
push
push
cmpb
xchg
cmp
pushf
push
mov
pop
jmp
mov
or
jbe
jecxz
int3
inc
out
or
push
cmp
movsl
pop
mov
and
mov
sbb
fisubrl
lods
sub
clc
das
mov
out
bound
je
xor
divl
nop
xor
jp
mov
outsb
in
inc
pop
push
pop
add
push
out
or
lods
mov
lock
push
cmp
fsubrl
xor
lret
insb
int
cwtl
mov
and
divl
xor
xlat
sub
and
lock
mov
pop
or
stos
xor
insb
push
xor
das
popa
xor
push
insb
jecxz
ja
pop
inc
lods
mov
mov
inc
xlat
sbb
add
mov
sbb
in
xor
mov
lock
fnsave
xchg
pop
out
jmp
sub
out
jne
je
je
mov
dec
daa
dec
pop
xchg
jns
dec
cmpsb
call
push
jne
lret
gs
mov
xlat
jo
sti
es
repz
out
vpaddusw
pop
and
insl
mov
das
inc
in
jmp
es
stos
fwait
cmp
mov
hlt
inc
push
stos
out
and
push
loopne
sbb
dec
adc
js
jmp
mov
jl
inc
popa
jmp
inc
add
cs
mov
out
fmuls
push
int3
xor
cmpsb
add
insb
and
ret
sub
or
cli
jmp
outsl
leave
add
mov
push
and
movsl
repnz
xchg
mov
mov
push
add
faddl
pop
push
adc
loope
lret
and
fistpll
dec
jb
jne
mov
lret
sub
sbb
out
mov
or
cmp
dec
push
mov
cld
sbb
sbb
out
arpl
sub
pop
pop
cmpsl
inc
cmpsl
dec
dec
dec
pushf
mov
xchg
inc
xchg
adc
incl
xor
aaa
sahf
push
cli
pop
das
push
jne
into
xchg
idiv
mov
mov
push
fwait
dec
and
mov
iret
sti
push
xchg
dec
enter
leave
imul
movsb
inc
mov
xchg
stos
xor
adc
insl
inc
xchg
push
orb
xchg
fiadds
fwait
pushf
jb
aad
out
cmpsb
mov
sbb
sbb
pop
fsubs
movsl
sub
jo
lcall
hlt
std
and
int3
mov
dec
adc
pop
push
out
jecxz
scas
pop
scas
into
imul
xlat
dec
and
mov
sbb
cwtl
loopne
jns
dec
add
fs
ret
test
sub
xchg
cmp
push
stos
outsl
cmpsl
jmp
mov
jmp
fwait
and
inc
push
or
push
or
into
pop
icebp
mov
mov
xchg
xchg
or
and
aaa
jb
dec
mov
out
xor
xchg
lods
call
rolb
and
add
sti
lcall
jge
mov
aad
into
pop
jne
repz
in
sbb
andb
sahf
xchg
outsl
inc
mov
push
mov
or
xchg
stos
jmp
push
sbbb
xchg
dec
mov
pop
pop
rcrb
sub
jbe
cltd
cmc
fwait
add
mov
mov
insb
xchg
mov
xchg
test
and
jp,pt
loope
jecxz
std
cmp
sub
push
pop
inc
sti
cmp
inc
mov
jne
out
daa
mov
push
adc
int3
test
push
inc
xchg
out
push
jge
fisubs
mov
mov
mov
jecxz
insb
push
out
push
xchg
adc
outsb
leave
sbb
rcrl
stos
lret
lea
lds
xor
cwtl
stos
sti
mov
bound
and
lods
inc
divl
test
jle
add
xchg
mov
iret
adc
aad
std
mov
mov
in
cmp
pop
mov
stc
test
or
and
push
mov
out
lods
push
add
stos
in
les
les
lods
in
loopne
sahf
lea
and
fwait
pusha
les
sarl
cmp
cli
popa
andb
mov
dec
aad
pop
out
or
push
push
push
xchg
mov
push
out
push
jl
ret
cmp
push
mov
rorb
jge
mov
mov
inc
iret
push
sub
xor
ja
jmp
sbb
push
adc
jns
jbe
ficomps
push
mov
mov
pop
add
aas
jmp
in
push
imul
popf
mov
sar
mov
adc
xor
sti
adc
adc
add
cmp
cmp
push
adc
inc
mov
imul
insb
sbb
lock
sbb
xchg
and
sbb
out
enter
and
nop
int3
aas
repz
bound
mov
xchg
jb
mov
xchg
icebp
in
pop
mov
inc
ss
inc
mov
add
jae
lods
fildl
fimuls
out
outsl
fcoms
cltd
mov
test
xchg
sub
cs
leave
out
mov
or
sbb
les
cld
mov
cmp
imul
mov
sbb
mov
aas
xchg
jmp
add
push
stos
pop
popf
and
mov
xor
sahf
jo
testb
fadd
movsl
shlb
cmp
xchg
adc
jbe
das
mulb
fimull
mov
pusha
mov
jmp
imul
lret
mov
xor
jb
aaa
stc
aas
icebp
fisubl
sub
loop
push
lret
aad
pop
dec
inc
in
test
rorl
vfrczps
clc
mov
ret
jmp
xchg
sbb
mov
adc
jo
cmpsb
pop
adc
ljmp
movsb
fidivs
and
xor
push
cmp
cmp
cmp
pop
loop
out
into
cs
aad
gs
out
outsb
repnz
inc
jnp
add
pop
mov
adc
cli
xor
mov
in
sub
or
lret
inc
push
xchg
test
and
loopne
cmp
in
dec
mov
mov
sti
fbstp
sbbb
stos
xor
stc
enter
xchg
xchg
cmpsb
sbb
and
xchg
adcl
sub
iret
gs
cld
jl
pop
fnstsw
jo
in
mov
adc
add
in
dec
lahf
pop
xchg
sbb
lret
pop
test
adc
dec
imul
js
or
jb
fwait
rorl
int
jae
pop
mov
ss
push
mov
mov
fiaddl
cwtl
adc
xor
push
shr
xlat
mov
loop
xor
pushf
cmp
pop
inc
cld
pop
pop
xchg
xchg
jbe
or
ret
cmp
movsb
leave
movb
or
dec
fstl
inc
loop
mov
je
xor
or
js
push
or
shrb
mov
lcall
dec
fisubs
imul
in
scas
push
sub
scas
xchg
aas
add
popf
call
stos
push
lds
lret
dec
sub
jl
insl
mov
mov
cmp
cld
sbb
setge
sbb
mov
dec
cld
pop
nop
outsl
fistps
lock
lahf
mov
out
fcompl
insl
loopne
sub
lds
cmp
ss
cmp
mov
cli
sahf
loope
insb
inc
mov
sub
or
jg
xor
adc
mov
in
inc
mov
sub
xor
iret
mov
test
loop
fs
mov
insl
and
sub
and
cltd
clc
stos
jbe
inc
cmp
jb
dec
lock
adc
test
insb
and
sahf
xor
mov
mov
xchg
idivb
data16
int3
adc
dec
sbbl
pop
pop
test
push
outsb
cmc
loop
movsb
sub
mov
shrl
cmpsl
ret
scas
das
hlt
outsl
xchg
bound
and
inc
je
push
add
psubusb
hlt
out
ret
jae
movsl
shlb
lret
mov
loop
sub
fsubrl
and
inc
jo
cwtl
add
popf
lods
mov
xchg
lods
jle
cmpsb
push
shll
das
lret
adc
add
aad
mov
fwait
sub
inc
and
out
sarb
cmp
xchg
scas
mov
mov
ds
mov
sub
jno
mov
and
sub
push
pop
hlt
push
jae
mov
inc
inc
out
scas
push
sub
xor
and
cs
lahf
pop
lds
push
jnp
and
dec
test
push
adc
mov
loope
xorl
adc
test
cmpsl
pop
popl
and
stos
fwait
sub
pop
jns
jmp
cmc
mulb
dec
mov
jge
lods
aam
push
xchg
adc
mov
push
push
pop
sbb
add
and
cs
loope
xor
add
and
insl
or
xchg
adc
xchg
dec
insb
push
push
mov
jne
imul
das
or
scas
push
sti
lcall
pop
sbb
cmp
fisttpl
fcoms
outsb
jno
dec
es
adc
lock
ret
into
inc
lds
fwait
dec
push
lea
movsl
xchg
pop
insl
mov
repz
shrl
push
mov
mov
jmp
icebp
in
cmp
out
dec
shlb
mov
pushl
dec
bnd
aaa
mov
fcoml
lods
nop
adc
cltd
vmread
aad
jge
les
ret
loope
inc
pop
sti
imul
je
cmpsb
cmp
jbe
and
push
rcrb
and
ret
cld
fnstcw
out
push
pusha
jecxz
jbe
sub
xchg
jl
mov
movsl
insl
jg
cltd
js
pop
xchg
jns
inc
and
mov
std
and
xchg
add
movsl
xchg
movsb
sub
push
mov
and
js
test
xor
shlb
xchg
sub
pop
aas
push
push
fldcw
into
test
and
lods
loope
adc
movsl
sub
out
scas
jne
shrl
adc
movsl
mov
xchg
sub
sub
in
pop
icebp
inc
int3
jmp
test
jg
mov
stos
cmp
mov
cmp
and
inc
das
roll
out
mov
mov
cli
pop
or
stc
push
adc
and
fsubp
sbb
inc
xor
cld
mov
fnstenv
sub
and
inc
lret
mov
xor
fnstsw
repnz
lods
push
das
push
cmp
lock
fcmove
call
xchg
mov
adc
fxch
mov
sub
xchg
jle
test
adc
cli
cmp
mov
or
insl
fwait
outsl
loope
imulb
mov
lret
leave
sbb
lcall
push
sub
add
ds
inc
repnz
out
dec
std
pop
mov
hlt
cmp
or
mov
cmp
addb
pop
cmp
stos
push
cmp
lods
jbe
jb
repnz
pop
mov
or
mov
addr16
jno
pop
lea
sub
xor
cmp
lock
aam
ljmp
or
xor
divl
iret
push
ds
aad
push
daa
xchg
sbb
fistpl
push
repnz
sar
fistl
insb
popf
sub
sbb
push
push
pop
ss
shlb
lret
inc
clc
and
int3
in
outsl
pop
adc
xor
add
jle
iret
mov
mov
imul
idiv
stc
sub
aaa
or
dec
pop
aad
mov
jnp
fs
mov
sarl
ja
stos
lahf
mov
mov
mov
inc
rol
add
gs
mov
pop
adc
dec
jecxz
lret
out
in
je
ss
fxch
cmp
loop
arpl
ret
aas
mov
jns
sbb
jle,pn
movsl
stos
sbb
frstor
data16
and
mov
insb
cli
out
int3
push
and
dec
shlb
cmp
inc
push
jno
insl
pop
xor
shrb
mov
ret
rol
lods
dec
jnp
jbe
scas
adc
stc
iret
inc
pop
fldl
pop
lea
rorl
call
repz
xchg
mov
repnz
call
push
add
add
inc
pop
mov
movb
pop
das
mov
add
mov
jge
pop
or
ret
rorl
push
push
push
xchg
pushf
mov
push
std
mov
shrl
cmp
ror
cwtl
clc
add
xor
mov
push
or
jmp
push
and
mov
jle
sarl
adc
int
dec
xorb
outsb
fiadds
pop
rolb
lds
mov
sahf
inc
scas
ss
mov
sub
clc
outsb
aas
insb
inc
mov
mov
aad
sbb
mov
daa
std
xchg
int
sbb
leave
jg
sbb
or
push
mov
adc
arpl
out
mov
xchg
insb
loop
jmp
imul
cli
shr
pop
and
shrl
mov
sahf
pushf
inc
add
jbe
hlt
xor
out
jg
imul
mov
sub
outsl
xchg
lahf
push
popa
xor
rorb
rorl
mov
sbb
aaa
fidivrl
ds
mov
sub
mov
sahf
sahf
sbb
mov
lret
int3
ret
pushf
popa
jno
xor
xchg
hlt
into
iret
cmpsl
push
xchg
jno
pop
push
test
cmpsb
xor
xchg
cmpsb
fdivp
cmp
outsl
shlb
fistl
rcr
mov
fcoml
fdiv
xabort
sbb
pop
data16
xchg
cmc
and
in
shll
into
outsl
pop
mov
aaa
cltd
add
lock
cmc
add
xchg
cmp
cmp
add
add
inc
repnz
mov
nop
pop
fidivrl
sbb
sbb
and
xor
jns
jbe
test
xchg
add
lock
sbb
scas
repnz
cmpb
dec
dec
test
roll
enter
lods
les
push
add
in
repnz
pop
mov
nop
fistpl
ret
mov
mov
fnsave
or
out
test
in
rcrb
mov
shlb
and
je
and
mov
fsubrs
push
dec
cmpsb
adc
pop
jbe
xor
push
add
leave
decl
cli
bound
jge
mov
jne
in
xchg
scas
inc
jbe
flds
pusha
lea
push
mov
icebp
mov
popa
hlt
lock
sarl
and
push
jle
repz
imul
cmc
mov
notl
stos
adc
push
sub
dec
repnz
pop
lea
or
inc
in
out
and
jae
add
cli
outsl
shl
cmc
add
fsts
push
ret
pop
pusha
stos
jmp
xlat
nop
jno
fmul
clc
xchg
pusha
cmp
xchg
mov
fldt
dec
dec
loope
sbb
arpl
jns
ret
out
out
int
cwtl
in
inc
xor
pop
xlat
lret
stc
pop
cmp
out
push
inc
xor
shl
addr16
lock
aad
push
scas
nop
jno
into
lret
cli
or
jno
and
es
push
jno
jge
jo
cmp
jo
ljmp
or
mov
inc
pop
mov
and
mov
cld
or
or
frstor
test
push
rcrl
gs
movsl
rorb
leave
rcrb
add
pop
dec
jbe
jno
stc
sub
iret
sti
inc
add
lea
into
inc
jle
jp
das
jle
jl
testb
lret
imul
add
fwait
aad
mov
sbb
lcall
inc
int3
loope
lea
push
mov
pop
cmc
pusha
or
aaa
mov
inc
and
ljmp
dec
pop
es
lcall
pusha
insb
daa
dec
lods
add
in
sbbl
sbbl
xchg
xor
ss
outsl
bound
addr16
aaa
lock
pop
popf
lret
pusha
push
nop
pusha
jbe
cltd
and
insb
mov
ret
subl
xorb
pushf
movsb
pop
jns
or
jg
leave
lret
jle
jmp
inc
xchg
ss
and
mov
lahf
in
mov
push
imul
stos
int3
inc
jecxz
test
mov
jno
test
xor
out
cwtl
rclb
jg
aaa
loop
leave
push
movl
cmp
pop
inc
and
adc
movsl
mov
inc
add
xor
arpl
testb
sbb
push
es
xchg
jmp
ja
in
sbb
insb
popl
mov
push
mov
sub
ja
xchg
pop
cmp
inc
jp
outsl
out
psraw
mov
push
sub
mulb
jae
jmp
inc
jp
sahf
push
jbe
sbb
xchg
arpl
xchg
xchg
in
lea
dec
dec
jmp
adc
jle
pop
mov
lahf
fisubrs
fldt
mov
outsl
pop
inc
jg
mov
lret
lods
pushf
push
loop
outsl
cltd
add
fisttpl
jg
add
push
bound
imul
ret
or
push
add
les
push
mov
icebp
adc
mov
ja
sub
pop
in
pushf
scas
mov
jo
testb
cmp
mov
cltd
fisttpl
popf
xorb
and
sbb
sub
jb
mov
sbb
rolb
pop
sub
imul
daa
sub
pop
int
jl
insb
mov
fbstp
lea
int
cs
xlat
and
push
mov
pusha
inc
fisttpl
add
enter
pop
pop
ss
fst
push
adc
inc
icebp
push
ja
imul
andps
xorb
lds
pop
xor
fildll
in
sub
jns
das
popf
idivb
das
fucom
out
arpl
fsubrl
inc
jns
cli
icebp
jns
insl
push
mov
inc
xchg
fisubrs
dec
push
pop
add
mov
ret
fdivs
das
sbb
pop
mov
jl
dec
shl
loopne
rclb
scas
stos
adc
scas
mov
rorb
mov
mov
jno
jmp
das
stos
aas
std
test
lods
xor
out
pop
test
rclb
js
adc
adc
jmp
data16
in
jecxz
fcmovnbe
push
lods
add
push
jae
cmpsl
mov
cmp
ja
dec
test
lret
inc
pop
mov
mov
pop
movsl
pop
inc
ret
mov
inc
push
outsl
mov
add
ds
in
sub
testb
cmc
pop
daa
mov
enter
xchg
or
xorb
xchg
repz
mov
xorb
mov
xor
push
ficomps
sahf
stc
add
test
icebp
push
push
mov
jle
ljmp
in
stos
cli
fbld
out
pop
inc
push
adc
jne
mov
aam
pushf
adc
fistpll
cmp
xchg
lods
dec
push
and
jl
test
sub
dec
cli
fwait
and
nop
sub
aam
mov
cli
insb
dec
dec
sti
xchg
test
xchg
push
inc
mov
cmp
loope
cmp
das
int3
jmp
fwait
xchg
dec
filds
aaa
pusha
pop
mov
outsl
sbb
shlb
xchg
int
pop
lods
imul
push
sbb
test
aad
mov
push
leave
sahf
in
add
dec
les
jp
mov
push
insl
out
adc
push
repnz
xorps
jle
adc
push
repnz
cmp
inc
xchg
outsb
js
lds
cmp
call
add
push
ret
pop
imul
in
adc
aaa
stc
lret
inc
mov
pop
and
cmp
movsl
dec
roll
xchg
cmp
adc
push
jmp
sbb
xchg
test
arpl
fs
and
jo
in
sbb
mov
loop
xchg
dec
in
xchg
gs
sub
xlat
cmp
bound
iret
mov
pop
mov
mov
loopne
xchg
sub
ljmp
jmp
mov
icebp
fistps
inc
mov
pop
push
pusha
push
xchg
push
ja
fisubs
add
idivb
sub
into
jbe
sahf
push
mov
loop
push
adc
mul
inc
pop
daa
cs
mul
lret
xchg
mov
fs
xor
sub
rclb
mov
inc
pop
rcrl
mov
in
push
pop
sub
clc
enter
in
mov
jne
hlt
bound
jp
pop
nop
sub
leave
dec
xchg
fistpll
sahf
xchg
mov
mov
or
pop
adc
ficompl
dec
add
imul
mov
cmp
mov
xchg
dec
mov
inc
stc
mov
loope
xor
xor
repnz
dec
push
and
imul
cmp
rcrl
adc
push
add
lret
or
cmp
jno
inc
es
cmp
dec
lods
aas
sub
lret
test
dec
sarb
pop
cwtl
xlat
add
sahf
rcrb
sbb
out
adc
pop
adc
les
xchg
loopne
fwait
into
jmp
xor
mov
xor
xor
mov
popf
push
and
pusha
adc
jnp
insb
jle
sbb
dec
cmpsb
or
xchg
outsl
sub
inc
lock
mov
adc
inc
xor
dec
or
add
push
cwtl
out
addl
fldenv
outsl
xor
imul
cmp
mov
sahf
idivb
imul
mov
into
sbb
icebp
stc
rol
aaa
nop
pop
mov
fs
and
repnz
das
lods
mov
push
cmp
mov
adc
rcrb
xchg
jge
aam
arpl
dec
pop
and
and
add
in
cwtl
push
mull
and
adc
sub
sbb
repnz
imul
and
cmc
mov
pop
cmc
cmpsl
mov
inc
and
xor
lds
inc
xor
repnz
cli
push
repnz
adc
sar
cmp
int3
or
jbe
scas
data16
std
sbbl
imul
int
sbb
dec
add
outsb
pop
or
and
sbb
loope
flds
pop
xor
shlb
xlat
cmpsb
push
test
enter
jge
or
repz
push
jno
js
jmp
fs
xchg
jo
jmp
xor
faddp
pop
les
orl
ja
mov
adc
clc
dec
cli
or
lods
add
xor
or
jno
fldt
daa
shlb
pop
sarl
in
push
shll
cmc
fwait
add
cs
add
call
aam
mov
icebp
xor
sbb
and
mov
aam
add
and
mov
pop
or
push
dec
mov
add
jnp
cli
jmp
sbb
inc
or
push
rorl
jmp
jge
cmp
xchg
lcall
jmp
pop
xor
push
sbb
pop
and
cltd
jbe
rcll
dec
fsubr
lcall
sub
hlt
cs
lea
orl
in
nop
rclb
jge
decl
aad
inc
xchg
dec
data16
mov
les
notb
movl
cltd
clc
mov
out
xchg
pop
in
sub
nop
mov
xor
mov
adc
mov
jmp
xchg
add
dec
pop
jnp
add
sbb
dec
sub
mov
idivb
ss
ds
in
or
das
dec
sbb
push
fucomip
loop
sub
xorl
movl
rorl
ja
and
loope
push
incl
pop
adc
in
push
sarb
leave
and
mov
xor
jmp
daa
shlb
push
inc
push
aaa
bound
movsb
or
aam
insb
pusha
add
pop
jle
or
mov
pop
lds
mov
sub
jge
pop
add
pop
test
out
daa
jmp
or
jne
xchg
push
mov
in
in
sub
xchg
mov
inc
stc
inc
inc
xor
in
cmpsb
xor
shlb
or
xor
inc
scas
repnz
stc
stos
into
xor
fwait
push
data16
adc
and
dec
or
sarl
shlb
or
cmp
push
jmp
push
jle
dec
push
mov
mov
sub
adc
ret
fdivs
repz
imul
and
test
mov
out
outsl
and
cwtl
movl
push
fs
shlb
nop
orl
xor
pop
test
jmp
adc
xchg
jb
out
mov
insl
jecxz
nop
cmp
jmp
scas
dec
pop
ret
push
cltd
inc
jmp
push
xchg
sbb
adc
push
pop
dec
inc
xchg
aaa
push
inc
push
pop
or
cli
imul
sti
mov
inc
jno
mov
mov
add
jns
arpl
and
pop
cli
inc
vpsraw
xchg
and
pop
jmp
out
dec
test
out
lock
xchg
decl
mov
lret
out
rcrb
inc
outsl
ficomps
enter
jns
test
mov
inc
inc
cmpsl
jne
jnp
movsb
or
and
jp
inc
or
pop
mov
inc
cltd
int
pop
mov
bound
pop
cs
dec
cs
sub
jecxz
bound
add
enter
adc
stc
dec
dec
xor
mov
push
jb
inc
repz
daa
add
dec
dec
jno
dec
and
dec
cmc
sar
xchg
daa
hlt
in
pop
sahf
inc
sahf
dec
mov
sbb
xchg
movmskps
sbb
cwtl
jmp
cmc
aad
les
push
test
dec
xor
es
xchg
and
pop
cli
push
fcoms
lock
mov
push
test
add
movsb
adc
push
out
xor
dec
mov
push
cmp
ja
jae
repnz
les
rcl
ja
sub
stc
push
cs
rclb
hlt
sub
xor
sub
sbb
sub
dec
jmp
fwait
adc
fs
test
ss
or
mov
mov
into
add
xor
inc
or
inc
fldl
dec
push
mov
pushf
dec
cmp
bound
out
push
inc
popa
fiaddl
divl
mov
lret
inc
cltd
dec
mov
jb
shl
mov
lods
sub
and
lret
pop
hlt
xor
pop
daa
mov
lds
test
add
mov
mov
shll
dec
mov
idivl
loope
sub
mov
fisttps
call
push
test
fistpl
dec
jne
pop
mov
aas
ja
adc
out
push
mov
jbe
rorb
add
xchg
es
shl
rcr
push
push
add
out
rolb
jb
test
dec
lret
or
pop
sbb
push
inc
xor
int
into
inc
lea
add
das
aam
push
lods
or
setae
imul
inc
xchg
scas
jmp
lea
sbb
mov
ret
xchg
xchg
pushf
dec
xor
repnz
xor
add
cmp
sbb
mov
inc
leave
mov
jns,pn
or
cmp
hlt
rorl
mov
xor
lods
sbb
imul
imul
xchg
inc
ret
cmpsb
shlb
adcb
popl
pop
jecxz
rorb
clc
add
or
shrl
test
dec
cbtw
imul
pop
sub
addb
pop
mov
jge
inc
pop
adc
hlt
add
rolb
int
call
out
lahf
es
add
les
popf
rcr
cli
xchg
inc
mov
into
mov
push
or
mov
push
imul
aam
mov
sub
lret
negl
mov
dec
xchg
mov
jp
xor
dec
sysret
inc
jecxz
mov
adc
fcomps
imul
fnstsw
pop
and
imulb
xor
add
push
out
sahf
and
iret
in
push
mov
lret
adc
faddl
popa
imul
and
mov
loope
mov
and
add
ljmp
ss
fbstp
dec
lods
inc
cmc
in
jb
repnz
sbb
pushl
addb
repnz
bswap
inc
sbb
jo
or
jge
or
mov
popf
lcall
das
mov
or
popa
mov
and
in
xchg
cmpsb
insl
add
push
pop
test
fstps
std
push
and
pop
pop
mov
mov
imul
dec
scas
stos
cmp
push
je
fstpt
mov
jl
push
pop
sub
inc
jmp
mov
sub
call
xchg
sbb
cmpsl
leave
fidivs
sti
pop
icebp
lret
add
cs
sbb
fdivl
or
xchg
in
lea
mov
inc
mov
mov
xchg
push
mov
push
adc
sbb
and
jne
fldcw
mov
inc
pop
lock
dec
mov
jecxz
push
mov
mov
jno
call
adc
cmp
dec
sub
popa
mov
popa
ficoms
gs
sbb
clc
or
inc
outsl
and
jns
shlb
scas
fmuls
mov
fadds
jo
mov
fldl
mov
mov
mov
and
add
jl
enter
in
icebp
push
enter
pop
addb
insb
xchg
in
inc
sub
adc
pop
inc
pop
in
lahf
sbb
iret
int
iret
aam
add
xchg
mov
movntps
andb
pusha
daa
popa
scas
icebp
add
popa
and
fwait
aad
movsb
lock
roll
cltd
push
inc
dec
xor
mov
mov
and
pop
ffree
xchg
mov
mov
int
xor
pop
mov
or
icebp
or
stos
imul
hlt
shlb
adc
dec
dec
mov
repz
test
inc
gs
aam
sub
jmp
dec
shr
cwtl
lods
jne
adcl
dec
inc
les
gs
pop
push
and
ljmp
dec
ficompl
nop
sub
fdivr
lods
in
pop
push
cmp
rcrb
push
nop
lcall
sub
insb
dec
sbb
les
pop
leave
repnz
lret
xchg
mov
xorps
sbb
pop
xchg
dec
je
ss
iret
stc
roll
xlat
movsl
pushf
sti
cmp
xchg
xchg
gs
loop
scas
das
pop
xor
shll
jle
dec
out
add
in
jle
cmp
or
dec
push
mov
jnp
inc
bound
jb
sti
add
push
cs
and
lock
jo
test
repnz
movsb
pop
fistpll
aas
les
stc
adc
push
add
mov
aaa
ja
mov
dec
mov
cmp
cli
sub
lcall
mov
sbb
idivb
outsb
es
subl
push
aas
add
icebp
shrb
push
xor
leave
je
movsl
cld
jmp
xor
cli
mov
flds
in
inc
stos
mov
inc
mov
shr
jge
popf
loopne
xor
std
pop
or
hlt
call
dec
hlt
aaa
mov
in
xchg
cwtl
fcomi
cmp
rol
jmp
cmc
dec
or
repz
leave
inc
jae
xor
sub
notb
sub
jge
push
sarl
lods
pop
sub
pop
adc
and
test
ljmp
loope
adc
nop
pop
pop
notl
dec
sti
movsb
dec
repnz
and
pop
and
andnps
jns
fnstsw
jp
xchg
movsb
ljmp
jno
lods
jl
insb
push
jmp
push
ds
ljmp
andb
cmp
fcomi
add
fdivrl
insb
push
data16
in
adc
jae
repnz
sub
hlt
les
inc
mov
push
mov
andb
add
mov
push
pop
dec
mov
pop
add
pop
jl
enter
cltd
fst
jge
std
xor
ret
mov
cmpb
imul
dec
mov
movsb
fwait
add
dec
mov
adc
adc
stos
pop
shll
std
repz
xchg
pop
sub
push
pop
jl
jae
sub
cs
aad
in
cmp
ja
fcomps
lods
mov
sub
frstor
cmpsb
into
fisubl
out
imul
inc
xchg
fwait
cmp
and
stos
out
loop
aad
nop
loopne
idivb
mov
fst
imul
mov
add
sbb
inc
lods
call
jg
cmp
adc
cmp
scas
push
pop
mov
movsb
inc
outsb
lods
add
scas
xchg
dec
sub
mov
pusha
repnz
mov
push
enter
xor
or
lea
outsl
sub
push
jp
js
and
fcomp
pop
mov
iret
inc
movsl
mov
ja
lahf
push
sbb
xor
sub
cli
xchg
test
repnz
in
pop
xor
test
mov
or
cwtl
cmp
mov
ret
mov
inc
and
daa
mov
popa
sub
enter
sub
sbb
mov
xchg
jbe
pop
jbe
mov
xlat
and
sbb
xlat
push
mov
mov
push
push
sti
fcompl
cmpsl
lods
sub
sbb
rolb
mov
lcall
inc
ret
movsl
std
mov
jne
adc
mov
push
sbb
mov
mov
aas
inc
jmp
int3
or
gs
mov
call
lret
xorl
mov
xchg
push
cli
popa
mov
ficoml
mov
sbb
mov
rcr
pop
shlb
xchg
leave
pop
aas
repz
cmp
pop
into
clc
jmp
inc
push
mov
roll
arpl
roll
pop
adc
xlat
icebp
push
xlat
push
xchg
push
das
xchg
test
into
cmp
ljmp
fwait
lcall
add
jle
xlat
cmp
es
outsb
cmpsl
mov
out
mov
mov
test
xchg
and
sub
imul
xorl
cld
lods
cli
outsl
cmp
out
mov
inc
pop
lahf
mov
adc
push
add
aas
mov
mov
jcxz
nop
mov
xchg
sub
cmp
mov
out
pusha
scas
pop
les
rcrl
jae
jne,pt
jle
addr16
lds
nop
sbb
add
add
sbb
loopne
and
out
cmp
mov
int3
inc
je
aaa
cmc
enter
fs
mov
mov
adc
xchg
sub
fnclex
mov
add
cld
jae
js
sahf
arpl
fdivrp
daa
in
int3
xlat
arpl
out
mov
aas
jle
jg
fcmove
cmp
dec
jns
push
mov
je
xchg
stc
add
cltd
add
adc
mov
into
addl
sbb
clc
or
in
fwait
inc
fidivrl
std
scas
sbb
sbb
pop
je
push
xlat
mov
cmc
sarb
mov
mov
mov
cmpsb
jae
or
jmp
test
xchg
mov
mov
std
dec
je
mov
xchg
iret
mov
pop
mov
ret
popa
xor
mov
pop
jae
mov
or
ja
mov
mov
clc
imul
add
push
in
testb
out
rolb
inc
xor
cld
jnp,pn
aas
and
cmp
pushf
lret
std
push
and
mov
dec
daa
das
pop
cmp
stos
pop
test
jp
jp
fldl2e
aad
sbb
push
push
mul
scas
and
inc
xchg
popa
shlb
popa
vzeroall
xor
out
xchg
jns
mov
ret
jmp
xor
lahf
call
ds
inc
lcall
movsl
mov
aaa
scas
mov
lock
aaa
xchg
pushf
push
pop
cmp
pop
jle
lods
jecxz
mov
xor
xchg
lret
sub
imul
adc
out
bound
jb
sti
test
xchg
int
sub
idivb
aaa
imul
fadd
mov
cld
mov
mov
dec
sub
sti
mov
das
or
fcompl
or
popa
sub
adc
loopne
shrl
jbe
aam
cmpsb
mov
cltd
scas
dec
insb
jne
push
jns
push
call
xchg
aad
jge
lock
jle
sbb
pop
lds
sub
mov
movsb
xchg
in
mov
subb
or
loop
xchg
sub
das
lahf
mov
data16
mov
lcall
lret
cmpsb
imul
in
cmc
xchg
push
xchg
mov
lahf
jb
enter
sbb
mov
ljmp
add
cmpsl
lods
add
dec
jge
cmp
in
jbe
push
out
add
mov
cmp
insl
cmc
movsl
sbb
test
push
nop
in
sub
aam
mov
lahf
xchg
mov
mov
sub
test
bound
test
dec
cmp
shlb
loope
in
or
push
mov
push
mov
gs
dec
fbstp
mov
jmp
xchg
stos
jmp
jbe
mov
or
fwait
mov
add
pop
add
pushw
in
inc
pusha
sbb
je
cmp
in
xchg
andl
popf
cmc
jge
mov
and
into
fildl
sub
push
mov
pop
jbe
xchg
sbb
scas
inc
imul
into
aad
pop
mov
push
aam
cmpsl
lds
push
rorb
rol
stc
shrb
out
lea
test
xchg
nop
cltd
pop
jg
imul
xor
xchg
lock
aaa
jle
leave
push
rcrl
in
jg
jns
cmp
cmp
pop
add
sub
mov
sti
lods
or
sti
ret
es
push
in
xlat
cmp
mov
test
mov
icebp
push
xchg
cmc
sahf
cmp
addb
push
mov
mov
in
push
mov
dec
inc
adc
pop
xor
mov
push
jmp
mov
sbb
in
lret
mov
mov
sub
sbb
arpl
mov
aam
push
repz
out
leave
add
pop
and
test
sub
xchg
xchg
xor
sbb
cmpsl
xchg
std
xor
shrb
pop
mov
jg
sahf
jae
xchg
testb
aam
inc
lret
fucomi
ljmp
cmp
add
out
mov
lock
or
in
scas
xchg
push
adc
mov
xor
cmp
sbb
sub
pop
xchg
jae
clc
fsubs
and
cmc
cmc
jle
push
xor
nop
scas
hlt
pop
mov
popa
sahf
mov
or
or
ljmp
add
shrb
addr16
and
inc
dec
loop
mov
mov
clc
mov
jge
push
mov
mov
push
fmulp
into
mov
clc
jle
call
mov
enter
rclb
rcrl
dec
sbb
cmc
pop
js
repz
mov
and
nop
mov
jne
in
jl
stc
fdiv
cld
xor
bound
sbb
jno
in
inc
jmp
or
sahf
jmp
mov
jmp
push
lea
mov
sub
jae
pusha
test
cld
jp
fisttps
mov
cli
pop
adc
pop
aaa
leave
sti
gs
xchg
das
in
scas
in
jne
pmulhuw
mov
xchg
js
cmp
out
cmpsl
fdivs
or
dec
nop
pop
fsubl
push
pop
cmpsl
sub
sub
bound
test
xchg
and
cld
in
dec
inc
xor
int3
jp
mov
mov
mov
add
cmp
mov
push
stc
jno
mov
rcrl
es
insb
leave
inc
in
pop
or
add
loop
cwtl
xchg
xchg
pushf
sbb
lcall
pop
movsl
adc
hlt
and
emms
aam
lods
popa
and
xchg
in
cmp
adc
jnp
stc
nop
cmpsl
push
add
loope
xchg
xchg
dec
mov
cmp
in
mov
xchg
dec
fistps
loop
push
int3
hlt
xor
in
cld
idiv
xchg
or
xor
inc
xchg
jne
insb
std
adc
les
js
push
rcr
adc
pushf
and
and
test
loope
push
jns
jbe
iret
add
add
pop
mov
stos
adc
jne
xorb
or
pop
js
cmova
popa
gs
mov
aas
xchg
push
stc
addr16
jno
push
jge
pop
inc
push
pop
push
test
rcrl
nop
push
shrb
int
xchg
mov
aam
aas
inc
movsl
adcb
call
cmpsb
jae
orl
int
clc
xor
jle
scas
enter
jl
cs
mov
and
push
sub
test
add
jmp
ljmp
jae
movsb
arpl
fldcw
cmpsl
call
lcall
xchg
fisubrs
into
shrb
push
adc
xor
xchg
dec
mov
ficompl
cs
xorl
cmp
sbb
push
or
mov
xor
pop
pop
cmp
sahf
sarl
xlat
xor
jl
bnd
pop
adcl
xor
repnz
mov
and
jno
jns
idivl
ret
cli
pop
loope
push
or
jo
xchg
jbe
adc
dec
or
test
out
fiaddl
test
pop
data16
add
out
jge
or
rclb
push
loope
pop
and
stos
pop
in
ds
pop
addl
addr16
push
sbb
ljmp
aas
adc
adc
scas
add
jnp
cmp
or
adc
mov
add
xchg
jne
xor
movsl
sbb
pop
shlb
nop
loopne
jecxz
push
aad
mov
repz
add
push
ljmp
lret
js
push
push
ret
loop
xor
movaps
gs
lahf
cmpl
scas
test
aas
insl
inc
mov
jno
sahf
bound
sbb
cmp
sbb
insl
xchg
sbb
xchg
fcmovb
dec
and
and
mov
lahf
js
sbb
cwtl
aaa
inc
sub
mov
outsl
xchg
sub
and
jns
xlat
jne
rorb
int
fisubrl
add
out
out
cmpsl
dec
popf
cmp
sbb
int
pop
test
ljmp
jmp
inc
daa
xchg
xor
nop
and
jo
dec
test
js
inc
dec
sub
and
cld
and
sbb
xchg
or
xor
or
adc
leave
out
xchg
out
push
ss
movsl
sbb
xchg
and
sti
or
lea
loop
fisubs
pop
test
xor
test
test
shr
push
xchg
sub
add
je
add
adc
arpl
cmp
pushf
and
fiadds
mov
stos
test
or
mov
xchg
pop
push
movsl
mov
fidivrs
aam
enter
inc
lea
roll
imull
mov
stos
fwait
jae
xor
inc
xchg
data16
adc
cmp
test
mov
pushf
mov
jl
push
imul
lds
mov
out
pushf
aad
or
pop
icebp
mov
or
xchg
ret
jo
xchg
enter
cmp
lock
cmpsb
cmp
outsb
sub
mov
adc
divb
ja
scas
push
aad
adc
scas
mov
push
or
mov
adc
pop
xchg
ss
cmp
sbb
inc
out
fwait
cmp
xchg
push
xchg
xor
adc
mov
pushf
xchg
addl
movsb
push
dec
decl
cli
mov
jmp
mov
or
lcall
fldcw
cmp
shr
xchg
xor
test
pop
mov
mov
cld
xchg
jl
mov
mov
mov
dec
sub
push
add
movsb
enter
xor
sbbb
fisubrs
shlb
sahf
xchg
push
inc
popa
jle
xor
notb
xor
fstpt
shr
or
pusha
test
jns
mov
inc
xchg
int3
pop
lcall
loope
mov
stos
sub
scas
das
fsubl
sbb
and
fimull
int3
roll
rcrl
rcrl
adc
imul
pop
mov
mov
std
mov
popa
jle
pop
idivb
mov
enter
lea
mov
jne
loopne
andl
inc
repz
push
insl
jns
clc
cmp
pop
and
push
data16
cwtl
or
jo
inc
mov
mov
dec
fiaddl
arpl
arpl
aaa
lahf
ret
add
adc
mov
in
xchg
mov
adc
pop
mov
adc
add
clc
or
dec
sub
xchg
movsb
pop
loope
jnp
cmp
mov
shll
in
in
cmp
push
pop
xor
lcall
out
les
iret
movsb
das
outsb
rclb
fwait
lret
xlat
pmulhw
sub
rcl
xor
dec
pop
fcompl
mov
inc
xchg
cmpsb
loop
dec
sti
subl
sti
pop
cwtl
add
ret
pop
pop
push
in
hlt
movups
je
push
xchg
out
push
and
scas
mov
xor
and
aad
icebp
cltd
pop
test
dec
fwait
sub
push
js
inc
out
cltd
push
xchg
push
popf
inc
mov
xor
pop
jge
adc
fldt
sub
jecxz
ret
ss
sarl
movsb
inc
or
jmp
add
test
inc
jp
cmp
and
pop
loope
lods
add
imul
xchg
adc
jo
and
popf
sti
adc
loop
mov
repz
shrb
ja
fbstp
sub
fidivrl
mov
iret
pop
xor
sbb
sbb
lcall
xchg
and
enter
pushf
add
push
adc
je
add
dec
cmp
lcall
insb
loop
inc
js
jecxz
popa
test
decl
fiadds
scas
and
lods
test
mov
dec
das
pop
mov
mov
cmc
xor
xor
mov
adc
popa
mov
or
dec
stc
push
xchg
adc
lcall
cmp
cmp
adc
or
and
sar
jecxz
xchg
sbb
inc
mov
sbb
or
mov
imul
cmpb
arpl
ror
loope
cmp
pop
mov
push
cs
sub
clc
mulb
mov
lock
flds
popa
mov
mov
ljmp
cs
lret
imul
lret
sub
cmp
or
or
jg
insl
lods
mov
lea
cltd
add
pop
cmp
or
dec
idiv
xchg
add
add
fstps
sub
adc
adc
or
pop
inc
xchg
pop
in
ljmp
inc
stos
adcl
pop
dec
push
mov
add
aas
sub
pop
sbb
jmp
mov
lea
idivl
jne
sbb
xchg
dec
rolb
imul
push
lcall
mov
nop
inc
test
enter
shll
push
mov
mov
stos
pop
mov
shll
sbb
fnstcw
arpl
jnp
iret
pusha
mov
sub
push
pop
xchg
add
in
stos
movsl
and
in
lret
movsl
imul
mov
data16
mov
sbb
ja
pop
outsb
add
sbb
adc
mov
std
inc
xor
pop
inc
mov
mov
addr16
pop
cs
aas
jle
push
lods
push
dec
jg
in
adc
lds
leave
aaa
inc
cltd
sbb
stos
pop
out
pop
imul
jae
pushf
adc
pop
repnz
cmp
cmp
pop
out
xchg
dec
rol
inc
mov
mov
or
shll
pop
push
dec
inc
mulb
and
pop
push
int3
out
shlb
in
push
andb
xor
inc
aaa
call
or
arpl
sub
adc
push
les
arpl
xchg
xchg
in
mov
cmp
sti
xor
mov
repnz
repnz
insl
mov
inc
ja
outsb
fs
xchg
outsb
aas
dec
or
or
cmpsb
mov
arpl
inc
dec
pop
or
jne
inc
sub
mov
aam
ljmp
imull
xchg
arpl
bound
inc
pop
leave
fdivs
jge
pop
dec
mov
add
bound
fsts
cmpsl
ljmp
or
sbb
movsl
frstpm(287
mov
push
out
notl
loope
leave
scas
sub
jge
sbb
test
mov
pop
data16
xchg
ds
repnz
sar
decl
je
aas
cmp
xor
xchg
pop
mov
ds
cli
xor
adc
adc
mov
push
cmp
shll
push
mov
jno
jne
jmp
xor
push
adc
jns
push
icebp
cmp
adc
jmp
or
loope
shll
les
scas
mov
xor
jo
nop
shll
inc
dec
lret
cwtl
cli
subl
jb
outsb
push
outsl
jg
jmp
adc
test
or
inc
mov
push
xchg
and
imul
iret
fcoml
mov
push
sub
cmpsb
mov
inc
sub
lcall
imul
cmpsb
sbb
ficoms
mov
insb
enter
pop
lret
pop
inc
hlt
inc
test
rcrl
rcll
adc
push
mov
adc
je
and
in
es
mov
in
stos
adc
pop
roll
aad
cmp
jb
test
xchg
popa
dec
mov
out
cmpsb
test
in
hlt
dec
test
pop
movsl
hlt
dec
pop
hlt
in
inc
test
mov
sbb
cmpsl
jae
xchg
mov
lds
sarl
out
outsb
fidivs
into
insl
into
dec
shrb
push
jg
jno
dec
and
lahf
sbb
add
imul
insl
sahf
out
lock
in
lds
out
cmp
out
stc
mov
data16
cmp
jmp
sti
push
xlat
repnz
shlb
popfw
xor
loope
je
insb
das
sub
and
jne
xchg
mov
lods
and
insb
mov
cmc
dec
pop
shlb
and
push
das
push
fsubs
push
loope
adc
sbb
or
int
mov
cltd
mov
and
mov
imul
sub
stos
cmp
jo
cmp
rcrl
test
loop
jnp
aam
sub
fbstp
push
adc
mov
xor
push
nop
dec
push
push
pushf
jnp
call
mov
insl
es
rcrb
xor
sahf
dec
jl
loop
dec
popa
fs
xorb
std
cvttps2pi
pop
shl
pop
xchg
push
cmp
sbb
imull
leave
jo
outsb
xor
stos
test
lods
dec
jb
ss
fsubr
bnd
cwtl
cwtl
mov
adc
xchg
and
rcll
fldenv
inc
jne
mov
int3
inc
jns
xor
out
or
ficoml
mov
out
mov
jmp
popf
jno
inc
jmp
inc
cmp
cmp
push
add
or
mov
mov
jl
nop
gs
sbb
cmp
mov
push
sarb
dec
into
js
and
adc
or
inc
adc
xchg
pop
jp
pop
lds
xor
push
arpl
imul
pop
lea
ficomps
outsb
mov
rol
dec
shlb
bound
mov
cmp
addr16
mov
pop
add
xchg
pop
cmpsb
inc
shll
xor
mov
jle
cs
adc
stos
inc
sar
lea
pop
fisubrs
imul
and
adc
sti
ljmp
jge
aam
push
fisubrs
testb
mov
movsl
xlat
lahf
mov
inc
mov
in
push
push
pop
dec
adc
stc
cmp
aam
xor
call
icebp
imul
jns
pop
and
gs
inc
push
cmp
add
or
fwait
push
sub
xor
push
push
xor
imul
ss
or
lods
scas
jl
gs
push
pop
jno
mov
push
scas
jl
push
ss
cmp
jmp
les
testl
shrb
mov
mov
push
jp
push
movl
xor
adc
adc
fistps
mov
shlb
xchg
xchg
dec
dec
sbbl
mov
sub
adc
xchg
inc
scas
sbb
xchg
imul
mov
sub
xor
loope
imul
stos
push
xchg
jb
test
daa
dec
jmp
mov
fsubrl
enter
push
add
or
pop
scas
leave
daa
or
or
xor
into
paddusb
adc
pusha
in
hlt
xchg
pop
dec
adc
es
inc
jg
popf
push
ja
leave
adc
iret
pop
jo
push
jae
scas
pushf
dec
in
push
inc
mov
mov
mov
cmpsl
push
or
inc
pop
cltd
mov
aas
loopne
int
scas
dec
add
fwait
jp
fsqrt
inc
or
xor
insb
or
nop
fidivs
mov
enter
inc
loop
pop
inc
fmuls
jo
repz
jo
rcll
int3
popl
dec
rep
cmp
mov
stos
cmc
ret
insl
and
js
jg
sbb
enter
dec
dec
ss
subl
mov
jne
ret
pushl
jge
cmp
push
imul
rcrb
nop
mov
push
xchg
jmp
mov
int3
dec
add
mov
ljmp
jno
sbb
pop
or
jmp
cmp
dec
dec
sub
pop
leave
mov
incb
inc
repz
mov
cltd
mov
dec
and
in
dec
push
dec
call
daa
jne
pop
cmp
lock
cmp
xor
adc
scas
ja
and
icebp
test
lods
and
jno
mov
xlat
ss
in
dec
lret
pop
popf
nop
or
inc
in
jnp
out
imul
cmp
mov
rcrb
decl
out
push
lret
sar
insb
adc
xchg
and
pusha
mov
mov
xor
xorl
push
jo
mov
ds
sub
add
out
daa
mov
add
adc
add
iret
gs
adc
test
mov
test
inc
jg
cmp
inc
pop
sbb
les
div
add
dec
cltd
fnstsw
dec
lret
lret
and
icebp
dec
les
push
push
int
icebp
outsb
inc
and
test
leave
loop,pt
inc
sub
imul
jb
pop
decb
dec
push
mov
fwait
or
or
scas
and
adc
loop
push
pop
call
xor
addr16
andl
xor
das
roll
mov
ljmp
jecxz
outsb
fcmovu
mov
sbb
sub
rorl
inc
xchg
je
js
mov
in
mov
fwait
xchg
mov
sub
dec
xor
push
jmp
jne
xorb
xchg
lea
pop
mov
dec
adcb
inc
stos
into
scas
mov
push
and
ja
and
fstpt
adc
add
mov
popf
sti
jg
mov
test
ja
pop
mov
mov
roll
cmpsb
or
lret
insb
and
iret
sbb
es
jo
mov
and
xor
cmpsl
push
lods
arpl
out
les
push
inc
aas
lcall
jno
int
xor
adcl
mov
shrl
sahf
xor
or
sti
pop
test
push
lcall
in
fstpt
fs
ss
repnz
mov
cmp
sub
cmp
cwtl
rcr
cmp
sub
subb
pop
das
adc
lea
jge
and
incl
in
mov
imul
and
in
test
xor
daa
xor
and
mulb
sbb
jp,pt
aad
inc
cmp
in
cmc
push
sbb
fucom
jne
addl
add
in
xor
cmpsl
mov
pop
scas
lds
stos
data16
decl
push
push
loopne
xchg
xchg
mov
ja
das
pop
test
lds
or
mov
aam
dec
xorb
fyl2xp1
std
mov
xchg
sub
xchg
xchg
js
inc
cltd
and
inc
xchg
or
ljmp
add
and
imul
jg
cmp
inc
mov
inc
mov
mov
mov
xchg
xor
mov
pop
cmc
cmp
xchg
outsl
in
xchg
adc
loope
aas
cmp
aad
and
mov
pusha
movsl
dec
push
addb
je
mov
test
push
scas
neg
xor
mov
clc
add
jns
aas
inc
lds
lds
mov
mov
mov
mov
fldcw
dec
pop
or
sbb
push
mov
aam
cmpsl
mov
mov
pop
ja
bound
or
pop
dec
or
nop
fistps
mov
cmpsb
mov
sub
adc
dec
cld
decb
es
xor
insb
push
outsb
sub
adc
xor
jo
lods
mov
imul
jp
adc
movsl
jae
or
pop
ds
sub
push
jns
daa
lock
and
imul
jnp
test
in
mov
pop
aad
mov
imul
xchg
mov
shrb
fs
and
js
imulb
dec
add
sti
fdivr
jns
jno
out
ljmp
lock
sbb
das
cmp
lods
sbb
test
mov
loopne
jg
jge
sub
and
jbe
jecxz
cli
dec
adc
mov
push
add
or
mov
inc
fimull
mov
inc
and
int3
fisubs
mov
cli
xorl
aas
xchg
mov
sbb
repnz
mov
xchg
fidivrl
imul
shll
sbb
xor
jno
xchg
in
mov
mov
out
mov
jb
mov
insb
shll
inc
lcall
mov
sbb
lock
cmpsb
lea
aam
xchg
out
sbb
cwtl
test
pop
xchg
aas
cs
cmp
adc
pop
cmpsl
imul
leave
adc
jbe
inc
jecxz
push
frstor
jl
sahf
xor
shll
int3
xchg
bound
popa
lock
insl
jl
dec
xchg
dec
aas
push
pop
lea
cmpps
leave
push
sub
push
pop
inc
add
pop
mov
mov
enter
scas
es
jnp
dec
adcl
xchg
or
adc
add
fbld
mov
cli
in
insb
shrl
pop
ljmp
sbb
pop
sbb
mov
adc
push
or
fildll
mov
and
es
xchg
cmp
mov
aam
fisubrs
push
jbe
repz
mov
xchg
ffreep
xchg
dec
dec
and
or
stos
imul
jo
aad
sahf
mov
mov
ret
test
mov
mov
fstpl
xchg
pop
cwtl
loop
test
pop
adc
and
xor
cmp
sbb
in
mov
cmpsl
mov
xchg
xor
push
cwtd
push
dec
insl
push
cmpsl
repnz
push
sbb
test
mov
adc
mov
mov
lret
hlt
cmp
pop
xchg
aaa
or
xchg
xchg
aad
pop
scas
cltd
push
pop
mov
add
inc
pop
push
fnstcw
push
dec
mov
pop
cmpb
inc
cs
jp
movsl
aas
add
and
call
mov
out
and
inc
fwait
or
add
filds
insl
push
aam
cmp
xchg
les
xor
fsts
test
push
mov
lret
mov
push
out
hlt
stc
in
add
xchg
in
or
jno
iret
push
cmpsb
mov
inc
jecxz
testl
sbb
jns
xor
ljmp
rcr
push
clc
dec
pop
fwait
jo
insb
sub
addr16
add
jl
or
rorb
fildl
int3
clc
inc
push
mov
mov
nop
mov
pop
fnsave
scas
jns
aas
cmp
in
divb
push
sbb
pop
mov
mov
pop
cld
mov
nop
das
lods
xlat
je
sbb
push
sbb
test
popf
xor
push
sbb
xchg
aam
mov
mov
ficoml
fdivrl
xor
int3
xchg
out
cmp
push
hlt
in
xor
int
or
adc
rcrl
sub
je
cmp
lods
pop
cmp
jge
lret
negl
ss
push
dec
lods
into
rcrl
sbb
sub
pop
loop
xchg
not
repz
xchg
andb
dec
popf
cmp
pop
sub
mov
inc
inc
mov
jg
xor
mov
sbb
ljmp
or
pop
push
xchg
jns
inc
jae
into
int3
ss
or
mov
inc
inc
fcomp
mov
xor
loopne
dec
or
xchg
aaa
sub
xchg
jbe
cld
sbb
les
push
orb
pop
shrb
loope
mov
xchg
sub
mov
test
push
outsl
xchg
pop
jmp
sub
int
cmp
adc
dec
in
xchg
outsl
das
dec
lcall
dec
ja
stos
in
dec
push
and
add
inc
dec
mov
test
or
adc
outsb
sub
mov
mov
xchg
jp
je
cmp
pop
test
sub
cmp
stos
mov
mov
or
jns
xchg
pop
jnp
mov
ret
jae
jne
or
and
shrl
les
mov
lds
cld
in
cmp
xor
shl
sub
stos
mov
cmp
adc
mov
mov
and
xchg
dec
and
mov
test
adc
mov
into
inc
adc
mov
push
mov
call
add
push
sbb
sbb
or
repz
movsb
testl
add
add
aam
fiaddl
nop
mov
xor
xlat
mov
add
or
test
out
ffreep
leave
sti
or
xor
sbb
sti
xchg
ja
je
mov
or
aam
mov
ja
sub
adc
pop
in
xor
inc
pop
jl
imul
push
mov
mov
dec
cld
bound
in
rorl
call
mov
ss
push
lock
fdivl
loopne
push
sub
dec
or
pushf
add
and
je
xchg
mov
sub
lcall
mov
rsqrtps
popf
mov
aas
imul
cmp
pop
inc
xchg
stos
mov
lahf
shrb
cld
mov
jecxz
push
cwtl
clts
fistpl
das
pop
shl
push
mov
mov
jb
inc
gs
mov
fld
dec
pusha
mov
xchg
ret
adc
fdiv
or
addr16
jmp
repnz
jns
push
sub
jle
push
mov
loop
repnz
push
sbb
fists
loope
jmp
sbb
shll
std
inc
ja
pop
repz
dec
daa
cmp
jmp
test
shlb
sbbl
sbb
push
add
jns
aaa
mov
scas
fnsave
cli
mov
popa
fdivl
loop,pn
imul
mov
mov
fadds
ja
fiadds
push
daa
sbbl
mov
xlat
popa
icebp
pop
loope
pop
and
xor
jo
popf
add
xor
shrb
cmp
repnz
mov
je
xchg
inc
jne
add
test
les
and
test
sti
add
push
dec
jne
inc
fs
pop
jle
sub
jbe
mov
push
fs
test
in
fisubrl
mov
pop
or
daa
add
test
dec
insl
int
sbb
and
sub
sbb
push
push
add
test
pop
lcall
lods
adc
fistpll
inc
mov
cmpsb
xchg
lods
into
xchg
xchg
sbb
int3
mov
icebp
mov
mov
inc
pop
divl
ret
add
xor
mov
sbb
pop
das
int3
out
fwait
mov
mov
dec
push
mov
pop
ret
roll
data16
jg
fnstcw
push
ret
xor
cmp
push
into
fs
jl
push
loop
jecxz
xor
cmp
xlat
sbb
jg
out
enter
jbe
cld
jmp
add
out
dec
insl
popa
mov
adc
aas
arpl
test
push
outsl
divl
test
test
loopne
loope
aad
icebp
xor
rcrb
dec
scas
dec
movsb
add
xchg
dec
lcall
fs
dec
call
loop
adc
fstpl
xchg
std
into
or
push
jecxz
cli
das
sbbb
clc
mov
mov
jnp
xchg
dec
fwait
dec
jns
jb
and
sub
inc
les
adc
repnz
pop
sub
insb
rol
test
movsl
sbb
outsb
inc
or
in
jecxz
pop
inc
movsl
stos
sub
ljmp
je
adc
xor
pushf
xor
or
mov
ja
js
mov
push
sbb
or
scas
jp
les
or
fsubs
pop
and
push
mov
imul
jb
adc
add
ja
xchg
lock
dec
popf
repz
xchg
push
sub
lret
stos
xchg
mov
cmpb
test
mov
addl
pop
inc
sub
test
movsb
jl
sub
xor
test
nop
push
dec
xchg
xor
mov
mov
jmp
movb
pop
xor
popa
pop
cmpsl
jae
cld
lds
mov
fbld
jb
sti
xchg
shll
fcmovnb
enter
cmp
fisttps
hlt
xchg
push
adc
sbb
je
pop
fwait
dec
mov
dec
stc
icebp
mov
aas
fistpl
xor
xchg
push
fs
dec
push
fistl
mov
and
lock
inc
lret
push
inc
adc
inc
jg
mov
pushf
add
push
push
in
or
lcall
xchg
jo
stc
or
ljmp
scas
push
imul
push
pop
or
stos
sub
es
mov
pop
rcl
in
xor
and
and
fcoml
outsl
push
xchg
sub
repnz
adc
test
adc
in
xor
enter
xchg
pusha
push
hlt
fists
imul
fidivrs
aam
test
ret
rorl
aas
push
icebp
mov
jl
testl
cs
loopne
sub
lret
cmpsb
sub
das
arpl
out
jmp
jge
sub
cmp
test
icebp
jmp
out
add
nop
sbb
loopne
adc
or
mov
rclb
jmp
in
aas
pop
xor
into
dec
adc
cld
data16
cld
stos
mov
in
shr
dec
sub
gs
sbb
sbb
pop
and
dec
sbb
inc
pop
push
xor
into
in
mov
outsb
xlat
popf
cmpsb
scas
or
push
add
dec
insl
sbbb
push
vmread
jmp
aad
xor
dec
or
push
push
push
insb
fdivp
aad
pop
jmp
jp
js
mov
xor
andb
enter
mov
mov
jae
jb
push
xchg
std
pop
lret
jno
mov
fst
push
mov
je
dec
das
xchg
rcrl
pop
mov
negl
in
jl
xor
jmp
cs
fs
ret
sub
pop
dec
gs
mov
add
xor
dec
test
jbe
pop
pop
arpl
pushf
mov
xor
xlat
xor
lcall
xor
cmp
addl
std
scas
add
cmp
xchg
jb
pushf
je
aaa
mov
adc
int
aam
mov
mov
sahf
int3
sbb
jmp
push
sub
imull
push
or
xchg
xor
sbb
sahf
xlat
adc
je
cmp
pmullw
nop
rcrl
fs
movsb
hlt
stos
cs
mov
mov
sbb
in
pushf
pop
cld
jmp
pop
xchg
pop
pop
mov
fwait
adc
inc
orl
fmull
xchg
out
leave
push
mov
pop
out
imull
popf
cmp
pop
fcomps
ja
jl
mov
pop
sbb
roll
outsb
mov
mov
xor
cld
subb
xchg
ss
jl
cmp
pop
pop
rol
jae
sub
ds
add
ficompl
or
jae
sub
pop
push
cmp
arpl
jp
outsb
pop
gs
mov
adc
xor
or
je
mov
jecxz
fwait
xbegin
fists
jmp
fcomps
lcall
xchg
mov
aam
lods
xchg
sbb
sub
das
push
mov
test
adc
and
sub
xlat
cmpsb
pop
pop
push
into
adc
sbb
cmp
popf
lock
aam
mov
cmp
ds
push
mov
cmpl
mov
jbe
loopne
out
mov
cmp
inc
cmpsl
in
jne
inc
mov
enter
xchg
jne
pop
xchg
shrl
adc
shlb
dec
cld
loop
test
push
lods
fcomp
add
int
jo
out
mov
sbb
cs
popa
hlt
mov
subb
push
inc
sub
inc
nop
and
adc
push
lods
in
mov
inc
jnp
scas
leave
xchg
lea
das
xchg
fstpl
sub
mov
mov
pop
pop
clc
adcl
sub
mov
addr16
sub
sti
fwait
aam
lea
adc
int
dec
dec
sbbl
cli
fiaddl
mov
dec
adc
cmpsl
add
fdivrl
jb
or
xchg
lock
pop
pop
and
into
pop
hlt
mov
push
inc
sahf
add
cmp
repz
adc
xchg
cmp
push
je
jne
loop
sub
cmpsl
lods
out
sub
cs
inc
rorl
cmp
pop
xchg
pop
imul
lock
das
jo
xchg
cli
adc
xor
insl
jmp
pop
inc
xchg
and
push
fcomps
test
push
lret
ret
mov
jno
lock
nop
or
add
mov
les
pop
dec
sti
lea
sub
push
mov
pop
dec
or
scas
nop
jmp
aam
int3
andl
dec
addl
flds
lock
stc
ja
jb
mov
or
mov
roll
ds
sub
jae
and
mov
pop
ja
das
push
call
test
xor
imulb
cmc
mov
mov
push
ret
push
js
mov
imul
addl
push
lds
fcmove
dec
adc
ret
movl
cmp
dec
sahf
push
aas
and
push
data16
je
lock
mov
jecxz
cmpsb
inc
pop
insl
jno
shll
idivb
fs
call
pop
mov
sbb
push
inc
fs
xor
stos
pop
push
sub
mov
mov
mov
jp
jle
pop
jmp
sub
lock
shrl
lea
dec
pusha
xchg
lds
scas
jp
push
fs
ljmp
sub
cmpsb
rcl
shll
mov
ficoms
ds
add
gs
cmp
lret
and
clc
cwtl
loopne
cli
int3
xchg
xor
or
mov
test
push
outsl
inc
adc
jns
pop
movl
inc
pop
sbb
idivb
mov
bound
fsubl
loop
adc
repnz
addl
nop
add
imul
mov
imul
lods
leave
jae
jmp
icebp
in
push
and
mov
add
push
int3
push
hlt
jle
add
repz
mov
pop
int3
inc
stos
in
scas
scas
sub
or
iret
pop
fistps
or
sbb
loopne
cwtl
mov
mov
dec
mov
test
cmp
addr16
and
in
jnp
xchg
add
lret
cmc
mov
cmpsl
jne
xchg
int
and
orb
shlb
push
xor
mov
mov
negb
mov
in
add
data16
cmpsb
dec
jp
prefetchwt1
sub
adcl
push
repz
pop
add
add
cmp
jge
sbb
pushf
enter
inc
fcoml
sbb
mov
mov
pop
or
jne
shll
push
out
push
pop
popa
out
mov
les
mov
add
js
scas
mov
cwtl
mov
es
sub
jp
sti
adc
and
in
mov
fs
push
addr16
sub
or
lods
mov
or
movlps
sub
push
xchg
xchg
mov
or
mov
in
pop
xor
ret
ja
ds
shrl
push
mov
sbb
mov
lcall
jl
ret
xchg
jmp
loopne
fwait
ljmp
aad
clc
adc
dec
adc
shl
sbb
and
mov
ds
std
mov
stos
stc
jne
xchg
inc
cmp
fbld
loop
xor
outsl
lahf
xlat
push
in
pop
addr16
lods
gs
lea
sbb
ss
sbb
push
jb
lret
aad
pop
push
push
orb
and
fildll
or
popa
scas
les
bound
jg
push
and
jge
jnp
aaa
imull
mov
cltd
jge
xlat
add
mov
test
or
cs
mov
std
popa
push
jno
scas
pop
mov
add
nop
mov
inc
xchg
pop
and
aas
shl
jp
or
or
push
les
inc
cwtl
adc
aam
aad
inc
jns
fcomp
add
mov
xchg
sti
jge
mov
push
jmp
mov
sti
in
fsubrl
pop
sub
stos
cld
aas
movsl
fucomp
stc
pop
xchg
mov
mov
adc
mov
loope
inc
icebp
rcr
inc
fnsetpm(287
mov
jne
xchg
xor
xchg
movsl
inc
outsl
or
fbld
inc
xchg
outsl
ljmp
jns
mov
pop
push
scas
or
lahf
test
jg
or
xchg
int3
out
cmp
fistpll
leave
out
mov
dec
xor
mov
jmp
mov
divl
sub
or
arpl
dec
push
bound
pop
pop
mov
cmp
aad
je
xchg
loope
cmp
fsts
jl
add
pop
and
adc
aaa
cmp
je
push
inc
js
pop
push
jbe
movsb
adc
shll
popa
dec
lock
pop
int3
das
ret
pop
push
leave
rolb
jae
sarb
mov
leave
ds
aaa
xor
lock
sbb
testl
repz
xor
lds
in
adc
mov
hlt
adc
fs
sbb
mov
inc
je
jg
mov
repz
jecxz
push
cmp
sbb
push
and
rclb
lret
sbb
push
mov
push
cmp
adc
es
js
lahf
push
fwait
cmpsb
add
ljmp
call
orl
and
setg
mov
mov
dec
dec
mov
lods
cmp
sub
int3
mov
fcoml
sbb
insl
lret
nop
in
cld
fcom
cmp
jl
idiv
lcall
imul
daa
mov
iret
cmp
mov
inc
lret
movl
jae
xor
add
int
mov
pop
idivb
je
cmp
lea
and
xchg
mov
aas
gs
imul
push
shl
and
add
out
call
inc
jo
xchg
outsb
popl
jl
jnp
sbb
add
add
xor
mov
pop
cmpsl
and
stos
adc
outsl
pushf
std
and
inc
ljmp
lods
shll
jnp
dec
or
inc
add
shlb
xor
in
and
pop
mov
in
aas
lock
lods
idiv
xlat
fists
loop
xchg
xor
lds
cmc
mov
add
cs
ficompl
or
xchg
lds
mov
lret
adcb
xor
testb
movsb
jmp
aaa
adc
or
cmc
add
shrb
jbe
enter
js
lahf
bound
xchg
hlt
bound
jecxz
or
repz
or
out
mov
cmc
push
dec
push
sub
adc
pushf
mov
mov
xchg
mov
out
push
inc
add
mov
push
mov
fisubrs
bound
and
sbb
pusha
imul
add
jnp
pop
mov
or
cmp
inc
pop
js
inc
adc
push
push
shl
jle
je
xor
jae
mov
jge
mov
nop
mov
push
pop
mov
mov
jnp
mov
decb
or
jbe
cmpsb
std
pop
push
or
out
adc
insb
sub
cs
popa
mov
jno
xchg
adc
into
in
pop
sub
call
sti
aaa
adc
dec
psubusb
ret
pop
or
mov
and
cmp
jmp
mov
pop
ds
xchg
xchg
dec
jl
stos
fwait
hlt
xor
or
xchg
xor
out
std
fbstp
jne
cmpl
out
int3
mov
int
sub
push
xchg
and
lcall
movsl
and
mov
les
jne
pop
mov
pop
or
mov
adc
sti
sbb
or
or
fidivs
push
sbb
daa
mov
pop
hlt
ljmp
ja
dec
pop
fcmovnu
pop
aam
xchg
clc
sti
sub
dec
inc
inc
pop
mov
shl
in
sub
loop
mov
loop
scas
inc
inc
dec
sbb
sub
les
xchg
loopne
in
cmp
icebp
out
jl
pop
or
mov
lock
xchg
rcrl
mull
mov
mov
fmul
jge
inc
push
mov
adc
rorb
pushf
mov
xor
daa
out
and
pop
adc
mov
fidivrs
cmp
sub
ja
xorl
jp
mov
gs
nop
gs
mov
loope
mov
mov
arpl
mov
xor
push
xor
out
inc
cltd
push
ret
cld
push
sbbb
sahf
cltd
stos
xor
dec
jb
fadd
ljmp
dec
or
cmpl
lret
fxch
sub
or
push
dec
sti
fucomi
lret
push
faddl
add
jnp
mov
inc
sbb
ficompl
dec
out
aas
hlt
add
test
push
mov
cs
pop
test
xchg
test
test
cmpsb
nop
push
cmpsb
pminsw
and
push
and
rcll
adc
lea
insb
inc
jl
dec
sbbb
cmp
or
xor
mov
into
in
jge
and
fcmovu
dec
repnz
adc
sub
lcall
push
hlt
scas
adc
inc
test
mov
insb
and
ss
mov
mov
lock
outsb
mov
leave
xchg
cmp
scas
aas
popa
jnp
or
jmp
rcrb
xchg
rcll
dec
outsb
cmp
test
fnstcw
adc
mov
adc
dec
dec
jne
jnp
sahf
or
inc
mov
dec
imul
jl
mov
dec
adc
clc
mov
in
xor
sarb
sub
dec
mov
xlat
lds
ret
inc
sarl
test
jbe
push
in
addr16
call
in
xchg
mov
xchg
or
and
xor
adc
dec
insl
shll
in
pop
gs
mov
jge
sbb
jge
ljmp
fists
xchg
fisttpll
pop
shlb
mov
dec
xchg
jmp
arpl
gs
mov
jmp
add
lahf
stos
sub
aaa
sti
insb
aam
jo
jp
rcrb
lock
lret
je
inc
fimuls
or
add
jae
push
cmp
mov
cmp
push
mov
out
in
out
popa
iret
lds
xchg
mov
icebp
pusha
flds
xchg
pushf
mov
loope
pop
outsb
add
mov
cld
insl
and
sbb
aas
mov
inc
mov
sbb
insl
push
jg
je
jge
add
testb
fsts
mov
and
test
mov
push
mov
dec
pop
fadd
or
inc
jnp
cmp
roll
je
orb
jge
jo
aad
jecxz
and
andl
rclb
subb
sbb
aad
cmp
add
dec
rclb
push
jbe
cmp
push
in
mov
scas
test
lods
data16
mov
inc
insl
pushf
outsb
lock
idivl
xor
mov
push
and
inc
cmpsb
es
leave
dec
ret
rcll
pusha
addr16
fs
adc
pop
lret
insl
sub
sarb
jbe
repz
sub
pop
lods
divl
lahf
dec
or
in
sub
inc
addr16
xchg
push
sbb
ffreep
push
jb
adc
outsl
loopne
dec
adc
jno
add
roll
sbb
pop
push
cmp
sbb
xchg
addr16
cmovno
subb
sahf
clc
jno
xor
js
mov
nop
sar
push
and
call
call
ss
lea
inc
clc
sub
cmp
pop
lret
mov
lds
scas
mov
insl
lea
mov
cmp
mov
mov
mov
dec
mov
insl
call
sub
add
aad
dec
test
sbbb
outsb
decl
js
and
pop
popf
xor
lret
dec
sbb
push
or
pusha
lcall
movsb
test
pop
enter
movsl
and
sub
xlat
outsl
add
test
sahf
pop
pop
mov
outsb
mov
xchg
mov
sti
inc
cmp
sbb
iret
mov
jge
dec
inc
mov
push
ficoms
mov
mov
mov
push
je
lods
xchg
jl
repz
pop
mov
in
fisubrs
or
xor
push
xchg
cs
movsl
xchg
outsl
xor
je
test
outsl
xchg
cmpsb
mov
les
push
mov
jae
jmp
movsb
add
shrl
sbb
push
daa
xchg
sbb
div
lock
sahf
mov
cmp
sub
jle
cmp
nop
cltd
sbb
cmpsb
xchg
scas
arpl
pop
mov
inc
iret
mov
call
nop
mov
sub
leave
sbb
int3
mov
rcrb
ret
stos
add
bound
aam
cmp
jp
jo
xchg
cmp
sub
pushf
dec
xchg
loope
lods
pushl
xor
popf
jmp
push
xchg
dec
xchg
fmulp
mov
loop
dec
or
sub
out
jbe
ss
in
sahf
data16
andl
fimuls
or
scas
dec
out
clc
xchg
add
push
clc
push
rorb
pop
mov
add
scas
je
shll
jge
jnp
jle
scas
pop
movsl
jmp
jl
rep
mov
jne
out
les
mov
inc
sbb
jo
add
fisubrl
shl
js
push
jae
jnp
scas
inc
sbb
push
out
jb
sbb
jl
hlt
test
cmpsl
push
roll
cmpsb
and
lret
or
shlb
fstpt
mov
jmp
andb
mov
mov
dec
pop
or
daa
mov
imul
cmc
into
jp
mov
pushf
movsl
or
aas
jecxz
jle
push
sub
adc
jle
add
adc
pop
push
xchg
jb
insl
je
test
aam
push
ret
sbb
popf
shll
jl
dec
bnd
shll
inc
loop
iret
cmp
and
nop
ffree
scas
dec
stos
pop
outsl
jno
pusha
cmpsb
push
icebp
js
stc
idivl
push
lods
outsl
sub
mov
pop
xor
adc
sub
sbb
loope
add
and
xchg
sti
and
inc
push
mov
stc
xchg
lahf
push
outsb
and
xchg
jne
adc
lahf
adc
cltd
jge
les
stos
lods
cmp
xchg
or
aas
lods
test
push
ljmp
popl
insb
mov
push
clc
aam
in
in
and
mov
sbb
xchg
dec
sub
addl
cmpsl
jns
inc
dec
jnp
enter
enter
cmp
cmc
jmp
sub
dec
shll
ss
aas
outsl
decb
loope
orb
and
adc
mov
aad
mov
xchg
cmpl
push
cmp
clc
cmpsl
repnz
enter
test
sbb
jecxz
cmc
aas
inc
cmp
iret
sbb
mov
cmp
xor
lret
jmp
dec
or
test
pop
mov
clc
sti
pop
and
cmc
mov
loop
mov
ret
jle
sbb
xor
pop
je
hlt
adc
shrl
dec
sahf
push
jae
addl
mov
ret
data16
sahf
fwait
push
movsb
pop
mov
inc
jbe
sub
push
das
mov
pop
rcll
push
jae
jae
scas
imul
cwtl
jl
dec
cmp
pop
cmpsb
stos
mov
push
test
inc
aad
cltd
inc
add
adc
push
loope
xchg
add
out
das
jo
daa
sub
es
fwait
or
pop
bound
jae
pop
dec
imul
push
push
roll
sub
pushf
fdivrl
xor
data16
subl
bound
fldl2e
sbb
xchg
iret
xlat
jle
dec
mov
and
cmpsb
xorb
leave
subl
sub
in
fs
cmp
mov
inc
test
test
and
adcl
jmp
dec
pop
test
xchg
or
test
cmp
nop
popf
ja
fsubl
aad
push
jo
pop
rol
sub
mov
dec
and
jge
or
sbb
pop
dec
cmc
aas
stos
jnp
or
inc
dec
sbb
xchg
ficoms
cmc
in
mov
es
int
lret
sbb
adc
mov
fcompl
sbbl
jno
lret
popa
test
or
and
loopne
lds
stos
jl
pop
fdivrs
out
mov
test
inc
jne,pt
add
mov
mov
pop
add
dec
adcl
sub
cltd
mov
ljmpw
clc
sbb
jecxz
cmp
sub
xorl
xor
mov
es
popf
jl
clc
inc
push
stc
mov
lods
movsb
sub
mov
pop
pop
push
in
inc
in
inc
adc
lods
lret
out
lods
in
nop
mov
adcb
mov
lods
int3
not
testl
add
inc
pop
cmp
gs
xor
cmp
stos
xor
repz
xchg
in
mov
add
lods
rcrb
cmpsl
jg
sti
adc
lcall
pushf
sahf
fdivrl
cwtl
sbbb
lds
dec
push
jne
addb
scas
add
jp
dec
mov
adcb
mov
and
fists
fcompl
in
push
fldcw
sbb
lods
inc
add
sub
mov
into
adc
mov
jae
sub
cmp
rorl
pop
mov
or
xlat
sarl
pushl
fnsave
outsl
push
cmpsb
push
inc
inc
stos
dec
mov
sbb
adc
hlt
xchg
hlt
lret
sbb
cmp
aaa
mov
xor
ljmp
insb
cmpsb
jge
les
into
jno
sbb
sbbl
cwtl
adc
push
mov
xchg
scas
jle
movb
mov
scas
movsb
daa
into
lea
push
mov
adc
int
jb
imul
inc
stos
rolb
inc
push
sub
xchg
int3
ja
aas
call
repnz
mov
xorl
repz
cmpsl
adc
cmp
fistpl
inc
mov
push
mov
ss
sbb
inc
in
faddl
xchg
aaa
hlt
lcall
mov
pusha
daa
cs
movsb
xorb
jp
lds
pop
outsl
fdivrp
sub
xchg
jb
adc
jle
enter
ret
pop
stc
cmp
push
add
js
or
insl
cmp
cltd
push
pop
mov
loopne
daa
fstl
outsl
cmp
mov
dec
shrl
dec
insb
sub
cmp
lock
and
rolb
out
xchg
jmp
push
inc
dec
out
jo
shr
popf
mov
or
icebp
mull
xchg
negb
and
mov
and
mov
push
jno
les
push
out
and
jmp
xchg
hlt
faddl
jg
les
and
push
pop
adc
prefetchw
push
pop
loope
jo
pop
or
test
xlat
imul
xchg
loop
push
cmpsl
fstpl
outsb
in
cmp
loop
mov
mov
jns
sbb
hlt
cmpsb
scas
ror
push
xchg
pop
xchg
add
xor
dec
adc
push
xchg
jnp
notl
add
push
aas
push
repz
mov
jnp
push
insb
or
adc
cmp
rcrl
mov
addb
fs
cmp
lret
xchg
sub
push
dec
std
out
pop
xor
jns
push
call
xchg
adc
mov
hlt
sub
jb
arpl
lahf
mov
iret
mov
adc
out
nop
subb
ds
ret
jnp
sub
outsl
cwtl
bnd
mov
adc
jecxz
push
sbb
stc
sahf
pop
jae
jno
cld
cmpsl
sub
orl
cmp
pushf
xchg
xor
rcll
jbe
pusha
pusha
pop
jns
pusha
and
sbb
pop
inc
dec
movsl
jl
push
lret
std
aas
int3
les
das
add
dec
data16
xchg
cmc
sti
filds
clc
mov
and
loopne
pop
cmp
popa
cmp
addb
or
dec
in
adc
xor
jns
imul
sbb
bound
popa
cmp
lods
fwait
arpl
mov
push
push
dec
or
jns
dec
xchg
pop
adc
lret
xor
sbbb
mov
out
sbb
xor
cmp
gs
mov
and
cmp
clc
add
add
cs
jle
out
xor
xorb
or
sub
inc
jno
insb
jecxz
outsl
std
jge
imul
and
sahf
stos
cwtl
mov
lcall
insl
std
out
int3
je
fwait
mov
ret
int
je
mov
and
int3
and
dec
in
cmp
mulb
out
aaa
lret
xchg
jns
push
jnp
xchg
push
push
xchg
icebp
in
dec
inc
dec
rorl
stos
push
pop
insb
jne
in
popa
jl
xor
mov
mov
dec
sbb
mov
leave
and
push
add
or
sub
mov
jno
push
das
add
mov
aam
movsb
mul
mov
repz
mov
jbe
mov
inc
leave
push
cmp
std
mov
pop
enter
push
inc
inc
loop,pn
es
fsub
adc
cmpsb
mov
ret
fisttps
adcl
sub
in
lock
jno
aam
test
stc
pop
dec
add
hlt
sub
cmp
das
lret
xchg
aam
movsl
neg
or
push
orl
insb
call
sbb
add
sbbl
movsl
jmp
inc
das
cmp
leave
add
stos
push
adcl
hlt
outsb
pop
mov
in
adc
ret
into
pop
jne
push
jbe
mov
movsb
and
jno
dec
and
add
out
and
push
aaa
xchg
dec
push
sbb
mov
lret
mov
xchg
xor
push
push
xor
in
push
or
ficomps
ret
mov
mov
int3
insb
das
int
or
aam
fcoml
and
adc
outsl
and
test
ljmp
shl
mov
scas
les
mov
mov
sub
or
test
xor
dec
jae
rorl
adc
jno
pop
sar
rclb
std
stos
xchg
jne
xchg
movsl
push
sbb
pop
mov
mov
push
or
mov
in
jmp
in
cmp
arpl
xchg
test
mov
addl
repnz
inc
gs
scas
mov
mov
xchg
or
and
adc
iret
and
in
sahf
dec
jg
bnd
lret
loopne
pusha
and
addr16
cmp
and
rclb
in
fldcw
add
pop
jne
sbbl
pop
sbb
gs
cmp
je
int
bound
je
incl
sub
or
aad
out
jbe
add
ss
ficoml
pusha
out
cld
pushf
out
inc
cwtl
or
aaa
ljmp
out
stos
inc
js
lcall
mov
icebp
sbb
push
fstl
popa
and
dec
sti
fcompl
inc
cmpsl
fbld
lock
push
repnz
lds
inc
sub
pop
and
imul
cmc
andb
rcl
jmp
dec
mov
cs
sub
sbb
fisubrs
jmp
out
daa
rcl
cmc
or
jle
xor
xor
lret
jbe
cmp
dec
daa
xor
out
test
ficoml
popa
cmp
sbb
shlb
inc
shll
mov
mov
testb
pop
lret
gs
jbe
mov
mov
jno
ficompl
call
and
jecxz
adc
pop
stos
push
out
lods
adc
push
dec
dec
jl
ljmp
mov
mov
dec
mov
cmp
inc
xchg
dec
stc
movsb
stos
cltd
shlb
sbb
jp
outsl
xchg
add
pop
sahf
ljmp
test
mov
adc
or
in
rep
jmp
and
mov
mov
jb
addr16
sbb
adc
push
dec
pop
mov
arpl
test
or
test
cmpsl
lahf
icebp
cmp
nop
ret
fs
es
inc
pop
dec
aad
pusha
sub
stc
cmc
xor
adc
rolb
pusha
pop
mov
ja
inc
push
xchg
jo
fimuls
out
inc
sti
pop
shlb
xor
adc
out
jge
mov
sub
push
clc
and
xor
jl
sub
movsb
cmp
leave
sti
xchg
sahf
icebp
pop
inc
mov
cmp
loope
mov
push
out
sub
xor
rcll
cmpsl
jnp
xorb
mov
xchg
pop
pusha
cli
jne
pop
out
test
inc
aad
popf
pop
mov
pop
stos
gs
icebp
inc
test
mov
jle
mov
pop
mov
sbb
ret
xlat
cmpsl
xor
pusha
inc
pusha
jbe
jge
iret
jmp
stos
xorb
stos
ja
xor
jg
cmpsl
lods
sbb
dec
cwtl
push
lahf
mov
mov
adc
and
jmp
fidivl
mov
adc
pusha
xchg
cmp
filds
int
jg
out
push
ret
mov
in
inc
mov
xchg
mov
lret
xchg
pop
nop
mov
lcall
inc
test
ficoml
test
jle
add
outsb
sub
pop
fcoms
pop
fbld
repz
mov
push
xchg
cltd
stc
xchg
cmc
out
mov
insb
and
arpl
lret
loopne
xchg
sahf
aas
and
mov
or
js
and
xchg
and
fisttpll
mov
mov
cmp
xor
test
xlat
fcoml
xlat
jb
dec
xchg
pop
jmp
add
fwait
jg
dec
sub
call
push
sub
gs
and
mov
aaa
adc
xchg
cmc
push
sbb
dec
loopne
jno
out
clc
ret
ja
scas
lea
es
cmpsl
scas
inc
int3
sbb
stos
and
fs
cmp
mov
ret
imul
dec
dec
and
cmpsl
mov
dec
fsubl
pop
mov
shll
cli
mov
mov
cmc
mov
inc
out
ss
fbstp
int
stc
push
or
xchg
std
mov
leave
sarl
pop
adc
sub
adc
jecxz
or
sbb
sarl
or
xchg
pop
repz
add
sub
dec
dec
add
data16
in
push
into
sbb
cmp
xor
fldcw
arpl
cmp
arpl
inc
jg
subl
aad
aas
inc
jno
or
test
data16
icebp
pop
mov
cltd
sbb
pop
repnz
jns
xchg
out
mov
fidivs
stos
dec
loopne
pusha
stc
cmc
jmp
incb
mov
adc
pop
gs
add
push
jb
inc
das
cmp
mov
dec
mov
fimuls
cmp
inc
es
movsl
adc
ss
push
xchg
sub
xor
inc
andl
in
sub
in
adc
mov
out
data16
add
dec
pop
cmp
lds
mov
out
dec
mov
push
ficompl
cmp
loop
jl
std
adc
cmp
push
add
ss
push
sahf
or
adc
cmp
icebp
cwtl
jg
movsl
sub
lret
pop
mov
inc
mov
jo
pop
scas
aam
popa
and
cmp
or
jp
push
push
dec
push
orb
mov
jae
xor
inc
mov
lret
call
insb
adc
mov
mov
push
and
and
xor
sbb
jmp
sub
adc
jl
mov
cmp
xor
imul
aaa
pusha
pop
les
orb
stc
push
mov
mov
rcll
cmp
loopne,pt
jg
mov
rcll
pop
das
repnz
pop
mov
std
xorb
in
jbe
lock
cmp
mov
push
dec
push
mov
dec
mov
insl
pusha
dec
push
cmp
sti
inc
jl
mov
pxor
fucom
push
jge
sub
cmp
mov
push
out
pop
dec
xlat
mov
test
jne
add
rclb
xchg
jl
out
fwait
push
mov
jecxz
push
dec
and
and
fcoms
pop
sub
and
xchg
push
push
lods
xchg
mov
mov
add
add
dec
jnp
jno
pop
and
das
mov
push
adc
icebp
xor
jg
stos
and
pop
lret
ret
je
out
jmp
pop
out
shlb
cwtl
jnp
mov
in
inc
aam
sub
lock
xor
fcoml
adc
lods
add
lret
clc
divl
test
out
cmp
jge
imul
push
shrl
and
mov
cmpsl
pop
mov
cmp
sub
xor
sub
in
out
outsl
sbb
flds
and
sbb
cmp
mov
stc
jo
fwait
push
shl
cmc
push
fs
push
mov
cmp
rolb
movsl
rcll
jg
mov
push
sti
rol
add
push
ds
xchg
sbbb
cmp
clc
lret
imul
fs
iret
inc
xchg
ds
pop
into
shrb
jl
adc
xor
cli
adc
lret
outsb
dec
sub
push
or
mov
mov
adc
sub
shrb
lcall
adc
push
pop
into
xchg
cmpsl
or
das
sbb
outsl
and
sub
into
adc
inc
mull
mov
mov
jl
insl
mov
sbb
pushf
inc
add
adc
xchg
dec
ljmp
push
xchg
inc
lcall
lds
cmpsb
insb
test
popa
push
or
pusha
hlt
pslld
outsl
ja
push
mov
cwtl
mov
inc
xchg
or
push
jle
repz
jmp
ljmp
pop
xchg
mov
mov
cmp
ds
stc
inc
scas
popf
adc
jnp
xchg
repnz
test
adc
insb
fldl
imul
pop
inc
dec
cmpsb
or
jl
xchg
sub
ficoms
cmc
sub
xor
push
outsl
es
push
xchg
inc
movsb
pop
xchg
xorb
repnz
add
push
push
push
ljmp
cmp
cmp
rorb
sbb
icebp
pop
mov
inc
test
fmull
cmp
movsl
in
or
push
jo
mov
in
mov
enter
notl
fwait
arpl
test
xchg
xchg
test
jle
or
test
xor
cmp
sbb
popa
sbb
mov
adc
insl
jmp
fwait
push
repnz
jne
jbe
xchg
push
in
jl
mov
in
pushf
sub
js
es
mov
cmp
push
jmp
repz
pop
push
sbb
sub
push
xchg
sbb
stc
xlat
push
mov
orb
pop
mov
pop
dec
jecxz
sub
add
sub
adc
mov
lock
movsl
sub
ja
or
call
inc
je
ret
and
pop
xor
in
mov
decb
push
mov
xchg
fstl
jp
addr16
fnsave
icebp
stos
mov
sbb
inc
sbb
push
pop
outsl
add
rcrb
xor
push
xchg
incl
cltd
stc
and
add
bound
sbb
xor
imul
sub
jae
pop
out
add
negb
dec
push
xor
mov
pop
popf
mov
insl
jmp
xchg
and
mov
cmp
shl
movsb
imul
pop
imul
sub
dec
xchg
xchg
sbb
and
xchg
sbb
inc
ljmp
push
lret
pop
cmc
pop
sbb
pop
fucomi
imul
adc
xchg
push
push
inc
dec
mov
lcall
jne
jmp
cmc
mov
jns
or
mov
xorl
shlb
dec
mov
or
je
clc
out
fimull
cwtl
popf
test
inc
test
pushf
mov
inc
jle
lock
fcoms
fdivl
mov
out
lea
mov
dec
mov
into
fidivs
sbb
or
aas
or
pop
testb
ret
dec
sbbl
mov
mov
int
call
xor
arpl
mov
fs
push
adc
stc
sub
jle
xchg
cmp
pop
and
xchg
xor
fwait
test
out
flds
or
sbb
outsl
mov
sub
mov
aam
ljmp
notl
rorb
and
movsb
mov
std
dec
mov
add
jb
ret
sbb
out
adc
out
push
ss
pop
xchg
lea
pop
pop
dec
jae
xor
cmc
mov
in
xor
jae
testb
leave
sbb
mov
ss
outsb
lods
inc
lods
mov
add
in
aas
inc
push
push
mov
push
add
sti
inc
add
loopne
daa
stc
adc
adc
stos
incb
gs
mov
lahf
adc
std
lcall
add
xor
cmp
mov
in
xor
adc
jb
scas
push
int3
pushf
ficoml
fnstcw
fcmovnbe
fidivs
xor
lea
repz
clc
rep
adc
js
add
movhps
pop
dec
add
repz
into
int3
add
cmp
cld
sbb
sub
lahf
cmpsb
jecxz
pop
or
out
adc
inc
xchg
gs
adc
jb
call
dec
mov
adc
cltd
fwait
add
inc
jp
or
and
aas
rorb
pushf
decb
test
int
loope
jg
push
inc
and
mov
mov
mov
push
mov
insb
test
mov
stos
pop
sbb
pop
dec
mov
shl
cmp
mov
jp
sbb
std
cltd
lea
imul
out
int3
sub
fstl
jl
add
sbbl
mov
scas
pop
sti
shlb
sbb
or
lds
and
xlat
pusha
jnp
and
and
and
cli
lret
sbb
adc
mov
rcll
pop
or
dec
and
in
sbb
cmp
mov
sub
repnz
es
movsb
jle,pn
cmp
subl
sub
sbb
movsl
jnp
test
cmp
xor
or
leave
add
push
add
pusha
cmp
or
adcl
lcall
in
test
pop
mov
sub
andl
pop
sahf
jle
das
cmp
lahf
mov
cld
int
jecxz
icebp
daa
aas
insl
call
call
inc
and
dec
imul
xor
cmpl
jns
jnp
adc
mov
sbb
ds
jmp
test
cld
jns
scas
and
sbb
rcll
xlat
mov
lods
outsl
iret
pop
dec
xchg
push
cmp
hlt
das
sub
fdivrl
and
inc
test
push
imulb
loope
lods
xchg
loop
push
sub
push
and
push
ficoms
lea
xor
in
sbb
mov
xlat
cmp
jb
loope
rcrb
cwtl
popf
and
adc
push
imul
push
call
cmc
mov
inc
enter
iret
mov
or
outsb
cmc
sub
int
arpl
sbb
dec
dec
gs
into
lahf
adc
push
jbe
xchg
or
shll
cld
popf
fsubl
dec
daa
lcall
cli
and
jge
fld
mov
jl
push
call
inc
push
pushl
lret
mov
fwait
xchg
pop
fisttpl
rcl
xchg
jge
mov
ret
in
ss
test
jno
mov
push
jo
sbb
mull
cmp
je
push
loope
pop
in
add
jp
xchg
lods
push
lds
dec
scas
icebp
sub
ss
test
mov
fisubrl
insb
sahf
and
sahf
or
test
and
jo
xchg
push
in
movsl
ror
xlat
rcr
xchg
ret
test
loopne
xor
movsl
js
xor
mov
mov
or
push
push
icebp
ds
jecxz
or
fs
cmp
push
mov
les
jnp
dec
les
adc
shll
lea
addl
mov
je
loopne
xchg
lods
es
test
stos
add
mov
clc
sti
xchg
out
mov
xchg
mov
pop
flds
pop
out
cmp
paddusb
cmp
push
lahf
adc
push
xor
cmp
aam
jns
add
shll
xchg
scas
or
ror
jle
add
stc
test
sahf
mulb
add
lret
lods
jle
dec
jb
adc
sbbb
aas
sbb
scas
pop
imul
pop
aas
call
test
mov
jbe
or
out
es
jno
xchg
roll
mov
sarl
push
cltd
and
data16
and
mov
lret
stc
xchg
cmpsl
adc
push
and
cmc
push
test
fistl
fbld
sbb
stc
inc
cs
data16
inc
jg
add
mov
and
popw
xor
flds
push
dec
add
sbb
push
pop
mov
nop
dec
leave
jecxz
or
mov
popf
mov
in
xor
or
into
or
repnz
dec
mov
or
sub
loopne
divl
repz
mov
mov
aad
andl
mov
dec
add
in
in
imul
popa
or
inc
inc
lea
out
test
mov
stos
notb
inc
lds
pop
jl
inc
addr16
ja
xlat
or
lods
daa
xchg
pop
fnstcw
pushf
jae
pop
jle
mov
ds
jmp
xchg
clc
aas
push
push
pop
into
jno
pop
sbb
rolb
ljmp
int
cmpsl
pushf
add
rcll
pop
sbb
cmp
or
or
sbb
sub
outsl
stc
inc
nop
dec
cmp
jge
imul
stc
jmp
jl
sub
jmp
in
mov
push
mov
mov
outsb
gs
fsts
lea
clc
or
sub
sbb
inc
or
cwtl
sbb
nop
std
pextrw
mov
jb
fstl
loop
push
loopne
jno
push
push
cmp
jg
int
xchg
divb
mov
in
ret
mov
dec
mov
mov
sub
lret
jmp
filds
xor
sbb
lret
clc
lcall
push
popa
popa
scas
adc
popf
sbb
das
pop
xor
xorl
mov
dec
sub
lods
imul
fsubrs
arpl
and
std
inc
adc
mov
jb
js
aad
fs
stc
les
mov
cmc
xchg
stos
inc
cmpsb
je
sub
clc
repz
stc
mov
mov
sahf
sbb
cwtl
pop
jbe
arpl
jo
lock
xchg
lret
jge
jecxz
rcl
mov
out
pop
das
or
jle
or
fisubrl
mov
mov
aad
cmp
cmp
test
pusha
add
inc
cmpl
jmp
push
test
xchg
fimull
xchg
mov
dec
jnp
out
cmp
popl
imul
pop
dec
mov
or
push
shll
jo
mov
add
ret
push
sbb
ret
lods
lods
mov
jae
pop
mov
jbe
stos
dec
rcrb
or
outsl
outsl
xchg
mov
lret
cmp
addl
sub
pop
mov
pop
push
add
adc
test
dec
daa
sub
lds
and
xchg
sarb
mov
xchg
stos
dec
or
adc
push
push
daa
sarb
mov
incl
fisttps
xorl
push
jl
loop
and
pop
lds
ret
add
lods
loop
push
cmc
jo
enter
mov
loope
in
mov
xchg
jb
cmp
xlat
add
jp
loopne
adc
jp
lcall
cwtl
out
jo
add
faddp
xchg
sahf
in
movsl
push
stc
fcoms
call
test
leave
dec
adc
ret
jb
repnz
setns
pop
fsts
ret
pop
daa
call
push
cli
or
adcb
fisttps
cmp
dec
add
leave
add
or
mov
test
imul
jno
in
adc
in
dec
aaa
in
pop
int
xchg
lcall
pop
imul
mov
adc
cmpl
enter
cmp
out
in
in
inc
fxam
in
cmc
push
test
sbb
mov
mov
or
imul
xor
ds
xchg
and
out
pop
push
inc
inc
inc
adc
dec
dec
or
cmpsl
int3
xor
jo
adc
pop
pop
pop
mov
mov
or
add
insl
jg
and
outsb
in
mov
fwait
mov
push
pusha
mov
fidivl
aam
fidivs
rcrb
pop
fists
inc
ss
cld
mov
cld
or
roll
and
mov
shll
loope
lret
in
fldt
out
sbb
cpuid
and
push
fstps
xchg
lds
popa
add
fs
mov
cli
push
lahf
mov
mov
xchg
pop
jo
test
shll
and
cmp
mov
xor
mov
cs
outsb
add
repz
sarl
cmc
je
or
test
mov
int3
push
lret
loope
std
stc
xchg
or
dec
adc
inc
call
xor
jbe
xchg
cmovno
sub
sub
xchg
mov
jmp
movsb
mov
lds
test
lcall
loope
aaa
mov
ljmp
add
movsb
shrl
pop
dec
adc
jns
inc
xchg
movl
xor
mov
cmp
mov
jne
inc
out
cmp
push
adc
mov
das
out
das
adc
mov
xlat
mov
cmpsl
into
in
push
imulb
pop
xchg
cmp
fildl
out
mov
enter
push
pop
daa
mov
repnz
ja
jne
aas
addr16
fcomps
jle
push
fnstcw
mov
dec
jb
mov
mov
ljmp
gs
pop
jno
push
xchg
adc
ret
push
push
lret
pop
lods
push
fdivrs
xchg
adc
sbbl
xor
push
andl
xchg
mov
data16
movsl
cmp
cmpsb
cld
cmp
sbb
jae
or
jmp
aam
cmp
fsubrl
sub
and
push
subl
out
cmpl
sub
fwait
ss
addl
stos
fistpll
push
jge
repnz
adc
test
inc
es
push
xor
daa
ret
js
test
mov
xor
jmp
insl
sbb
and
pop
ds
inc
mov
sbb
arpl
pop
push
mov
push
fucomp
sbb
out
loop
fbstp
mov
stc
push
insl
pop
sbb
mov
hlt
and
sbb
ffreep
gs
repnz
sbb
and
loopne
or
cmp
nop
push
roll
push
sbb
outsl
jbe
push
lock
mov
add
or
psllw
cli
movsl
inc
popf
xchg
es
loopne
ljmp
xchg
icebp
mov
jmp
pop
xchg
sti
das
sbb
inc
sbb
mov
lock
int
and
dec
sub
pop
sub
mov
push
clc
push
out
xchg
cmp
add
xchg
ficompl
ss
xchg
push
shl
or
fcompl
rcll
mov
mov
cwtl
jp
stos
fsubp
aam
add
xchg
add
jno
sbb
push
push
xlat
loopne
int3
mov
jp
push
mov
mov
int3
jbe
adc
mov
popf
ds
fisubl
enter
cmp
jp
dec
fld1
mov
sbb
dec
je
add
ficoms
mov
or
jg
or
loopne
mov
or
jl
lock
mov
jmp
out
adc
rclb
inc
dec
cmpsl
in
in
cmpsb
jecxz
sub
sbb
adc
sbb
and
or
std
pop
loopne
cmpsl
in
aam
xor
pop
in
lcall
and
rcll
mov
jbe
adc
push
inc
pop
out
add
frstor
lcall
mov
cmpsb
dec
mov
pop
cli
xchg
dec
fadd
adcl
call
pop
add
mov
test
push
sbb
movsb
jg
lods
adc
mov
mov
scas
stos
push
cs
sbb
cltd
inc
jns
inc
jle
mov
push
sbb
inc
push
jo
repnz
call
cmp
loope
aad
push
pop
ja
imull
mov
dec
jno
push
ljmp
mov
insl
pusha
dec
sahf
ret
sahf
dec
add
loopne
loopne
inc
xor
push
lahf
mov
pop
jmp
cmp
sub
push
xchg
mov
call
rcl
jmp
or
xchg
data16
fisubl
dec
cli
or
mov
fistl
xchg
mov
jle
lret
sbb
pop
orl
and
xchg
ret
push
in
mov
lods
push
fs
popf
into
mov
fisubs
inc
xor
dec
xchg
add
xchg
loopne
outsl
mov
fistpl
lcall
sbb
pop
sbb
popa
push
inc
sub
iret
cs
inc
dec
js
mov
int
lods
mov
insl
push
jae
popf
out
loopne
push
je
mov
adc
cwtl
and
xchg
pusha
mov
sbbl
jb
mov
push
into
jns,pt
in
xor
push
cmpb
and
lock
clc
sbb
jmp
dec
push
xchg
repz
sbb
clc
popf
cmp
push
nop
dec
sbb
aad
inc
in
ja
mov
outsl
cld
cmpl
shr
lret
jle
xor
ret
mov
sub
and
pop
insl
cmpsl
inc
mov
push
and
leave
xchg
aad
add
rol
gs
dec
lret
popf
lea
push
scas
aas
mov
mov
cld
lods
xlat
dec
jecxz
mov
mov
pop
loopne
jmp
xchg
add
ret
ljmp
outsb
jo
mov
aas
ror
mov
nop
popa
fdivrs
jbe
sti
into
pop
mov
insb
incb
push
fnsave
add
lods
push
inc
arpl
mov
and
xor
push
stc
push
ds
bound
adcl
popa
or
adc
xchg
popf
pop
cmpl
pop
and
mov
adc
inc
mov
xchg
in
daa
inc
dec
mov
adc
pop
or
xchg
xor
lahf
or
out
ss
bnd
sti
bsf
ret
or
fucompp
or
pushf
lea
mov
jmp
cli
outsl
adc
in
mov
fisttps
xchg
jnp
scas
sti
fisubs
jge
mov
in
mov
fstpt
adc
xchg
cli
mov
dec
pop
int
les
movsl
aam
sub
ret
test
dec
mov
push
cmp
xorl
notb
sti
lahf
popa
out
and
dec
adc
mov
adc
mov
popa
fsubl
movsl
ficomps
nop
xor
fisubl
cmpsb
test
xor
xor
leave
scas
jle
sarl
fldenv
aad
iretw
sarb
imul
dec
popf
xor
sahf
jg
pushw
xor
mov
lahf
jbe
ja
pop
lods
arpl
push
je
jne
je
jnp
jnp
and
mov
inc
fiadds
gs
icebp
xor
stc
rorb
int
adc
cmp
loope
dec
shl
ret
ds
aas
cmp
arpl
cli
jbe
pop
mov
lret
jo
pop
lea
lea
adc
cmp
xor
push
push
xor
repnz
jbe
or
or
push
adc
inc
sbb
dec
jne
cwtl
orb
or
push
lahf
pop
sbb
lods
push
test
mov
adc
jmp
popa
mov
lods
mov
jno
pop
push
push
leave
push
dec
pusha
lret
pop
stc
gs
or
or
inc
dec
fxch
shlb
popf
mov
pusha
mov
cmc
xchg
aam
jb
and
adc
ret
in
mov
or
pop
xlat
push
aas
jne
or
mov
sbb
inc
sarl
add
pop
dec
lds
mov
nop
test
or
sub
xchg
push
rorl
pop
sbb
shlb
int
orb
mov
stos
dec
in
movsl
cmovb
out
mov
pop
inc
mov
push
dec
lock
sub
add
xchg
nop
fnsave
imul
xchg
mov
lods
add
lret
clc
cmp
push
sbb
sbb
push
add
icebp
pop
stc
jo
dec
pushf
sbbb
movsb
add
bnd
rorl
push
ret
fs
addl
mov
jle
sbb
xchg
mov
lods
mov
test
jne
add
in
adc
lea
movb
jbe
lahf
sbb
xlat
mov
and
outsb
lock
push
pop
sbb
loope
outsb
cmpsb
pop
mov
mov
push
repnz
jno
shll
sbb
sub
pusha
movsb
adc
addr16
shll
in
xor
mov
jle
in
cmp
push
jle
pop
aad
pushf
fistl
pop
loopne
jge
out
nop
in
out
jne
outsl
sbb
pop
dec
inc
fwait
dec
mov
jbe
xchg
xor
leave
xchg
inc
fistps
sub
jp
aad
xor
leave
insl
mov
jae
cmp
sti
nop
cwtl
and
popa
add
inc
imul
int3
in
dec
cltd
mov
push
pop
jbe
adc
pop
ds
dec
xor
pushf
inc
adc
jp
out
ljmp
out
jns
push
in
push
inc
hlt
cmc
popf
fdivl
pop
stos
addr16
mov
push
cmp
mov
out
pop
mov
sbb
xor
or
lods
add
je
pop
fists
test
push
pop
sub
mov
or
add
stos
imul
jmp
subb
jecxz
cltd
add
xor
push
icebp
adc
ds
or
cmp
jns
mov
movsb
call
dec
int3
xor
stos
lcall
and
pop
push
movb
enter
sbbl
sarl
sub
pop
arpl
push
inc
xchg
xor
xor
push
inc
mov
and
sbb
popa
es
xor
sbb
jl
pop
dec
xchg
mov
popf
sub
mov
jecxz
pop
jg
inc
icebp
test
std
addr16
xor
sub
and
fsubrl
fstpt
pop
sub
imul
mov
and
xchg
mov
xchg
cmp
adc
push
inc
pop
mov
sbb
js
mov
sbb
das
sbb
and
pop
and
dec
lock
ret
jl
push
jmp
out
std
aam
xchg
out
data16
sbb
and
push
mov
pop
add
mov
xor
adc
lods
xchg
lret
xor
push
lahf
sahf
sub
jns
push
aas
ret
sahf
cmc
mov
xchg
ljmp
jp
ret
clc
add
push
mov
pop
cmpl
movsb
push
mov
cld
cwtl
mov
ja
dec
add
jmp
adc
popf
mov
mov
dec
mov
fisubrl
jecxz
rcll
jg
sbb
and
enter
sbb
jg
push
push
jne
movsl
pop
inc
stos
call
inc
and
ljmp
jle
pop
inc
xchg
sbb
mov
cmp
fsubr
daa
out
jg
xchg
lcall
or
rolb
push
js
push
jbe
mov
push
mov
cwtl
xchg
imul
test
lret
mov
adc
fcoms
push
sub
mov
and
or
out
and
xchg
shlb
fwait
stc
imul
push
pop
mov
in
xor
out
cld
mov
bt
shlb
jne
inc
cmovg
sbb
add
fst
xor
dec
divb
hlt
icebp
cmp
popa
stc
nop
xchg
outsl
test
mov
jle
rclb
cmpsb
dec
xchg
mov
or
das
iret
leave
and
adc
mov
mov
fldl
movsl
insb
and
in
enter
jmp
xchg
inc
mov
js
mov
sub
sahf
ret
sbb
jmp
dec
add
shl
jae
xor
sbb
lret
sub
sub
hlt
cmpsl
jmp
push
mov
jecxz
mov
sub
addr16
push
in
rcr
ror
or
adc
shlb
rcrb
cmp
mov
adc
in
add
iret
mov
xchg
add
mov
mov
sub
aam
int3
je
pop
cmp
lds
add
mov
mov
mov
imul
jmp
imul
inc
jne
andb
dec
imul
mov
mov
adc
sub
bound
and
lods
dec
das
cmc
stc
in
jno
lds
inc
cmp
sbb
cmp
mov
nop
adc
inc
sbb
jp
mov
inc
cwtl
hlt
mov
shrl
lock
and
dec
add
call
xlat
sub
aad
fcoms
adc
adc
push
lcall
xchg
cwtl
push
daa
jo
popf
jle
fdivl
xchg
call
in
out
add
inc
jp
mov
push
getsec
fisubrl
push
add
lods
icebp
jbe
xchg
sti
test
js
inc
push
push
popa
xchg
fcomp
mov
xlat
decl
lahf
jg
sub
loop
push
cmpsl
int
adc
jns
sti
into
mov
add
dec
jns
adc
mov
cld
outsb
cltd
out
test
push
out
push
imull
mov
movsl
or
add
xchg
js
aaa
lds
and
push
xor
stos
pop
jb
push
mov
lods
rorb
and
iret
mov
sub
jl
jno
sub
jns
in
mov
inc
sahf
jns
jle
sti
scas
js
cmp
xchg
mov
pop
jo
insb
js
fisubrl
mov
cmp
in
je
lds
cmp
add
xor
popf
inc
inc
notb
jp
push
fldl
movsl
hlt
jle
xchg
mov
inc
dec
xchg
and
clc
mov
outsl
repz
rcrl
into
outsl
inc
stc
maxps
mov
fucomi
jp
xchg
dec
add
dec
xchg
mov
test
je
adc
mov
cmpsb
dec
movsl
into
jl
mov
xor
xchg
roll
arpl
mov
pusha
xchg
mov
cmp
outsb
aaa
xchg
jbe
pop
imulb
cmp
sub
inc
arpl
insl
pop
cld
or
in
sbb
xchg
sarl
xchg
adc
stc
je
adc
pop
icebp
sub
sub
fimull
divl
xor
and
push
movsb
xchg
scas
or
push
es
add
addr16
xor
nop
add
dec
push
sub
pop
add
sbb
stc
xchg
fwait
sub
test
aad
out
sbb
jmp
lret
xor
dec
insb
loopne
outsb
mov
insl
leave
imul
adc
das
dec
lods
push
jge
mov
aad
adcb
or
cld
je
inc
inc
sub
jp
movsb
and
or
in
jmp
add
lock
mov
xchg
aaa
cltd
jl
mov
add
cld
lods
push
ds
mov
in
xchg
mov
into
int3
mov
out
outsl
jb
pop
stos
and
jmp
pop
mov
jo
fnstsw
ss
mov
fsubl
mov
dec
xchg
out
cmp
add
fst
cmpsl
int
add
inc
adc
sbb
sbb
sub
mov
add
push
aaa
fimuls
jnp
ds
ja
lret
xlat
mov
add
loope
popl
dec
arpl
push
mov
jge
sub
sbb
pop
inc
rclb
sbb
adc
jge
push
mov
mov
pop
lods
inc
fs
cld
adc
xor
sub
push
mov
ds
xchg
fimull
mov
add
inc
dec
nop
pop
hlt
inc
cs
clc
push
fs
mov
scas
jae
int3
in
jae
divl
sbb
out
bound
inc
push
inc
outsb
add
jo
loopne
pop
sbbl
enter
mov
jmp
cmp
mov
daa
sub
inc
test
insl
jmp
scas
mov
cmp
stc
repz
add
sarb
jge
insl
or
xchg
push
js
flds
cmpsb
aas
loop
mov
jg
jnp
test
inc
pop
cmp
dec
pop
sub
cmp
xchg
and
jecxz
repz
pop
repnz
std
scas
mov
and
mov
fidivrl
ss
leave
test
repz
pop
push
out
mov
ret
fcmovnu
pop
mov
jmp
mov
mov
mov
scas
cli
les
xchg
inc
xor
ljmp
pusha
jl
sbb
filds
sahf
xor
je
call
cmpsl
icebp
orl
mov
loopne
popf
repnz
or
mov
ret
cmp
jl
mov
and
hlt
jl
and
daa
movsl
fimull
adcb
and
mov
mov
adc
movsb
inc
sbb
mov
jno
test
jp
mov
js
inc
jl
mov
loopne
mov
jne
popf
lahf
jle
push
jl
mov
jmp
xlat
xlat
mov
pop
inc
cmp
pop
mov
iret
mov
push
and
adc
test
dec
lcall
jl
push
sarl
das
test
xchg
mov
sbb
cld
xchg
or
push
xchg
cld
fildl
jae
xlat
add
repz
or
push
cmpsl
mov
dec
out
sbb
aaa
mov
fldenv
adcb
sahf
jnp
cwtl
pop
adcl
adc
xor
mov
add
dec
adc
mov
hlt
dec
pop
lds
mov
sti
xchg
and
dec
lods
int3
mov
mov
cmp
inc
sbb
outsb
inc
daa
cmpsb
ds
ror
jno
negl
pusha
inc
loop
scas
bound
fcompl
andl
out
push
arpl
in
and
bound
fisttpl
fs
xor
es
cmp
inc
cmp
orb
shlb
and
inc
das
adc
cwtl
and
out
adcl
ret
fisttpll
sbb
je
adc
lahf
stos
inc
pop
or
jle
inc
pop
push
dec
pop
in
cmp
test
xor
shll
mov
push
add
mov
push
push
pop
mov
add
inc
cld
cmp
stos
and
lcall
jge
mov
sarb
nop
or
testl
stc
iret
push
add
shlb
lret
pshufb
nop
sub
mov
movsl
enter
xchg
stos
and
and
pusha
xchg
mov
addr16
push
sbb
adc
cmp
loopne
push
adc
insb
jae
and
and
stos
inc
les
inc
add
or
sbb
xor
mulb
adc
fmul
adc
shlb
pop
dec
cmp
hlt
and
mov
repnz
insb
pop
and
xchg
imul
push
sub
xor
std
ljmp
xor
cbtw
fcmovnb
cmc
data16
movsl
inc
fisubs
rorl
jne
cmp
ja
test
test
subb
iret
mov
adc
push
hlt
or
lds
sub
sbb
mov
cmpsl
pop
nop
negb
xor
dec
dec
jecxz
mull
bound
add
xchg
mov
hlt
jge
sbbb
add
xchg
in
cmp
imul
cmc
adc
imul
sub
test
sub
mov
jge
sub
test
or
mov
ret
push
pop
xchg
test
leave
mov
scas
mov
repnz
nop
sbb
test
sbb
mov
aas
push
in
aad
ljmp
push
inc
push
dec
mov
test
stc
out
outsl
addr16
inc
xchg
mov
push
cmp
jge
lock
sbb
mov
arpl
js
jnp
in
dec
mov
lock
fidivrs
fdivs
hlt
js
sub
loopne
add
in
sbb
fbstp
jl
std
mov
out
aad
mov
push
iret
addr16
inc
stc
bound
sbb
scas
sbb
sahf
das
add
sti
vmread
test
in
mov
mov
mov
loopne
out
dec
mov
filds
insb
arpl
idivl
aaa
ljmp
add
sbb
aad
add
inc
shlb
negl
aas
jmp
and
icebp
pop
les
xor
xchg
fmull
popf
jns
dec
adc
data16
cmpsb
add
pop
pop
xchg
mov
lods
insb
cmpb
jmp
gs
cmc
xchg
pushf
mov
lds
out
xor
aas
and
sahf
mov
mov
sub
cmp
test
pop
pop
fistl
sbb
in
aas
mov
andb
mov
sahf
fidivrs
pop
jb
iret
subb
xchg
push
xchg
add
add
sub
mov
xor
add
daa
outsb
pop
cld
sahf
inc
sub
mov
shrb
ss
xchg
mov
adc
mov
push
mov
and
dec
xor
sbb
fidivrl
add
or
jmp
cmpsl
mov
adc
dec
test
xchg
leave
xor
jge
inc
outsb
lods
jp
jge
xor
push
xor
stos
mov
out
pop
out
idiv
sar
or
ss
imul
mov
sbb
sbb
cmp
stos
insl
ds
pop
cmp
ret
inc
mov
iret
pusha
scas
jns
pop
stos
out
jno
loope
sbb
pusha
and
mov
mov
in
or
add
jge
loop
cli
popa
xchg
arpl
xchg
xchg
nop
lods
nop
imull
jne
sub
xor
outsl
je
sub
add
add
rcrl
mov
xchg
cs
push
out
xor
cmp
loop
push
enter
ret
aad
stc
push
push
decb
inc
mov
and
sarl
mov
inc
jmp
mov
fnsave
ffree
adcl
push
sub
into
je
jo
jge
mov
ret
das
into
or
outsl
lret
dec
repz
repz
cmp
stc
sbb
sub
and
js
push
jbe
imul
push
mov
push
aaa
stos
rcl
sub
addl
pop
add
call
cmp
sub
mov
daa
test
and
loope
push
mov
inc
pop
sbb
jne
ret
outsl
push
fbld
xor
mov
lock
cld
fdivrs
mov
jbe
xchg
or
lods
outsl
cwtl
or
fnstsw
in
repz
cmp
lret
int
mov
or
jae
aad
and
mov
leave
sub
movsb
mov
and
cli
icebp
mov
pop
or
lods
cld
ret
scas
pop
sbb
push
and
dec
sbb
jbe
add
cmpsb
add
sbb
ret
sahf
aas
testb
fstpl
fnstsw
mov
std
fs
pop
inc
loope
mov
pop
add
je
jb
adc
lret
pop
shll
setno
cmp
xchg
mov
cmp
fiadds
scas
mov
mov
mov
pop
and
fnstenv
add
push
sbb
mov
mov
cli
cmp
call
stos
pushf
dec
inc
xor
mov
pop
sub
lcall
mov
xchg
and
jno
stos
lods
jmp
es
shll
aas
insl
dec
mov
or
loope
xor
sub
hlt
inc
shll
mov
jbe
idivl
inc
fstpt
fs
scas
jg
sbb
in
jg
je
push
clc
pop
sub
test
bound
movsb
ja
ret
es
pop
and
sahf
adc
cmp
mov
out
xchg
xor
xor
aam
shll
jne
adc
sbb
inc
adc
aaa
mov
mov
iret
jmp
mov
adc
sbb
insb
daa
loopne
jle
imul
aas
out
push
ret
mov
lcall
jg
outsb
negl
test
xchg
in
add
pushf
sbb
icebp
fstpt
jae
cli
add
test
or
sub
mov
cmp
test
insb
gs
hlt
mov
cmpb
cld
pop
and
loopne
push
ret
mov
xchg
pushf
push
lods
fwait
xchg
xlat
daa
push
mov
scas
mov
push
xchg
sbb
icebp
or
sahf
outsb
out
fists
mov
sub
cmp
subb
int3
add
popa
xchg
cmp
sbb
inc
dec
push
dec
leave
xor
xchg
mov
jno
xchg
xchg
push
mov
or
mov
loope
xlat
mov
and
jge
fbld
fucom
pop
nop
lret
push
mov
xor
add
xor
cmpsb
mov
push
jmp
xor
dec
popf
sbb
neg
sbb
leave
sub
js
jns
sbb
add
popf
and
xor
xor
or
out
dec
pop
js
aas
cmpsl
clc
cli
jecxz
inc
or
dec
xor
inc
sub
pop
les
push
clc
cmp
lods
fidivrs
rcrb
out
cmp
or
je
mov
mulb
mov
xchg
insb
ljmp
es
mov
fcomi
insl
cmp
pop
adc
lea
pushf
pop
hlt
mov
je
or
xor
fs
cmpsb
sar
mov
idiv
cli
add
leave
cmp
icebp
and
inc
inc
xor
jnp
stos
mov
pop
mov
test
rcrb
int
adc
pop
iret
rcrb
lret
xor
push
xchg
imul
pop
xchg
mov
pop
inc
std
cli
pop
inc
pop
dec
ret
shll
pushf
push
addr16
xor
enter
int3
or
test
or
stos
xchg
cmp
pop
imul
cmp
cs
mov
std
and
jge
mov
fs
ja
jecxz
rolb
in
mov
in
or
jne
call
jb
negb
and
outsl
popf
push
dec
jecxz
pop
cs
aas
adc
fdivrs
shlb
xor
out
mov
cmp
dec
pushf
mov
outsl
test
inc
jo
push
or
mov
dec
cmp
jno
in
push
sub
sub
jecxz
xchg
test
inc
xor
sbb
push
ljmp
mov
jb
mov
pop
pop
mov
or
stc
sub
cmpsl
mov
pop
mov
mov
sti
mov
or
push
adc
xor
enter
fwait
ss
cmp
or
jge
or
or
cltd
and
mov
ss
jmp
sub
arpl
pmaxsw
pop
xchg
mov
enter
jmp
movsl
negb
pop
pop
inc
loopne,pt
pop
cmp
test
push
insb
push
icebp
mov
push
or
jg
ret
jae
xchg
cmc
loop
leave
and
jmp
imul
mov
das
dec
jae
pop
into
mov
push
mov
rorb
pop
mov
sti
aam
cmpsl
fstpl
es
mov
or
pop
mov
test
stc
mov
xor
pushf
jae
dec
outsb
leave
scas
inc
ljmp
pop
loope
lea
ljmp
mov
insb
dec
mov
movsl
inc
das
mov
add
in
mov
dec
cmp
pop
cmp
icebp
out
insl
jge
sbb
les
stos
mov
nop
or
aaa
hlt
pop
lahf
lds
into
outsl
cli
xlat
mov
xor
push
scas
xlat
je
jbe
pushf
cmp
and
jmp
add
cld
mov
xor
ucomiss
test
push
ja
jo
pop
dec
sbb
xchg
pop
or
sarb
repz
cmp
fcmovne
lret
mov
mov
dec
ja
adc
leave
jbe
je
mov
push
and
hlt
inc
mov
pushf
mov
cwtl
xchg
ret
pop
xchg
and
test
int
push
test
sbb
into
aam
mov
fiadds
mov
and
sub
jg
mov
cmp
stos
sbb
arpl
push
outsl
daa
shlb
adc
xor
mov
mov
jge
mov
jl
fstl
or
aas
add
mov
dec
addl
jge
mov
mov
jnp
std
inc
and
mov
hlt
push
mov
xchg
add
jp
dec
push
fistl
adc
enter
add
add
lret
rcr
sub
mov
jnp
mov
add
popa
mov
dec
dec
test
sub
out
add
out
sub
test
fcoms
jge
hlt
mov
int3
xchg
and
cmp
push
xchg
jbe
dec
test
es
fcoms
push
loop
xor
mov
dec
nop
test
or
popf
mov
xor
jno
out
jns
cmp
jecxz
je
push
xchg
fdivrl
jns
pushl
dec
in
std
dec
test
mov
fsubrs
or
xor
push
dec
or
es
pop
mov
cmp
add
mov
mov
and
in
pop
lret
leave
loope
nop
mov
in
cli
cmc
call
ret
push
arpl
insb
lret
xorl
mov
outsl
cmc
sar
cmp
fists
sub
repz
test
shl
inc
lods
mov
aaa
lods
scas
popa
loop
mov
insb
iret
stos
pop
mov
imul
popa
sbb
int3
xchg
sbb
cmp
scas
push
push
cmpsb
mov
lcall
and
lods
inc
aas
mov
mov
add
scas
clc
sahf
inc
sub
ret
inc
jmp
add
into
fwait
insl
rcll
scas
lret
arpl
jns
mov
push
jbe
cmp
mov
jmp
cli
mov
sbb
lods
test
xor
jae
jecxz
and
enter
out
xchg
lcall
pusha
ljmp
sub
mov
jbe
or
je
jg
pop
sub
test
mov
dec
and
sahf
push
cmp
dec
loop
push
push
insb
sti
addr16
fs
scas
mov
lret
fdivrs
jge
jl
push
dec
nop
mov
ss
xchg
bound
or
xchg
jp
ficoms
inc
nop
pop
xor
popa
sbb
sub
shlb
mov
mov
mov
pop
loopne
pop
inc
mov
test
fisttpl
sbb
lea
movb
clc
mov
push
addb
test
sbb
mov
xchg
repz
xchg
sbb
mov
pop
ficomps
sbb
or
fistpll
mov
daa
lret
fiadds
sbb
jo,pt
sbb
ds
cwtl
mov
lret
ret
imulb
je
outsl
out
movsl
cmpsb
or
jmp
jmp
clc
dec
sub
mov
mov
gs
loopnew
xchg
dec
cmp
mov
fcompl
sub
jge
jmp
mov
mov
in
mov
mov
jns
shlb
mov
dec
sbb
aam
mov
mov
push
xchg
pop
push
cld
adc
inc
sahf
jo
jmp
xor
shl
fisubrs
and
cltd
popf
or
and
in
scas
or
dec
shrl
sbb
shlb
xchg
jno
clc
aaa
int
mov
aas
dec
mov
outsb
out
ljmp
xorl
adc
lock
daa
mov
xor
or
jg
in
outsb
andb
mov
push
lcall
sbb
mov
and
or
sub
mov
inc
mov
xchg
std
repz
out
xor
int3
sbb
movsl
xchg
int
sbbl
int
movsl
outsb
or
popf
imul
push
and
push
inc
cli
push
cmp
pop
adc
lea
jno
xlat
in
mov
pusha
outsl
mov
xlat
call
inc
xchg
std
sub
lcall
and
mov
shlb
jp
inc
ret
movsb
dec
sub
mov
out
scas
mov
inc
push
rclb
aas
sub
lock
inc
sbb
lret
rol
fistpll
dec
lcall
mov
test
lret
int
testl
xor
mov
ja
cmp
lret
mov
cld
pop
adc
lods
cmp
stos
pushf
pop
inc
sti
pushl
aas
dec
andl
repnz
adc
ficomps
add
and
js
icebp
sub
shr
adc
lods
mov
dec
test
pop
mov
nop
jb
arpl
and
xchg
or
mov
lea
sbb
pop
and
jns
push
push
call
aaa
pop
lret
dec
mov
inc
or
mov
lahf
mov
jb
je
dec
inc
jb
imul
orl
or
push
inc
pushl
stc
daa
pop
mov
divl
push
xor
fwait
mov
or
jg
lods
jmp
rcrb
mov
movb
xor
loopne
pop
test
jg
xlat
xorb
inc
and
xchg
xchg
pop
add
shrl
jp
cltd
insl
les
mov
mov
adc
inc
xchg
imul
jae
out
test
pop
xchg
sub
sbb
mov
inc
jnp
dec
stos
out
scas
sarl
orl
mov
xchg
mov
xorl
sbb
cs
cmp
xchg
adc
pushf
data16
push
lea
in
unpcklps
add
sti
pop
xor
mov
lods
lea
xor
sub
push
repz
pop
outsb
out
cld
sbb
lods
mov
test
ja
gs
add
jmp
dec
mov
int3
test
out
jmp
and
fbstp
pop
xchg
xor
aas
push
test
addb
int3
leave
pop
mov
dec
pop
bound
pop
adc
inc
shrb
or
popa
dec
push
das
sahf
lods
adc
push
outsb
xchg
mov
int3
mov
pop
sub
jb
add
andnps
mov
mov
movsl
sub
jp
insb
inc
xchg
andb
mov
in
pop
add
jmp
test
add
adc
or
cwtl
das
sbb
cmpl
lea
out
loop
mov
rclb
mov
dec
cmpsl
cmc
test
stos
sub
stos
pop
fnstcw
fimuls
push
or
nop
add
pop
rorl
mov
mov
push
das
call
push
enter
movsb
mov
push
leave
mov
jae
in
xor
out
mov
outsl
push
xchg
enter
nop
adc
call
xchg
and
icebp
adc
sbb
push
jle
sahf
pop
pop
les
daa
cmpsb
push
js
inc
cmp
cmpsb
pop
pushf
or
pop
sbb
xchg
adc
lock
add
mov
outsb
test
inc
add
jns
out
in
sarl
daa
nop
xchg
sub
sti
sub
dec
pushf
call
loop
sar
xchg
cmpsl
mov
cmc
imul
jmp
addl
jbe
lret
cmp
fs
jae
lcall
ret
add
xchg
mov
add
mov
cmp
cli
lods
and
ror
test
sbb
cs
aam
movsl
lds
or
dec
dec
loopne
dec
mov
push
add
fbld
jae
gs
push
inc
filds
scas
fnstcw
push
pop
inc
out
jle
jns
daa
mov
rorl
aad
or
leave
les
pop
adcb
loopne
mov
int3
les
ret
dec
or
in
out
dec
repz
xchg
mov
loope
fstps
das
mov
je
xchg
mov
inc
and
xor
push
insl
dec
jno
inc
add
roll
insb
lret
mov
out
nop
pop
xchg
rcl
loope
adc
pushf
enter
push
adcl
cs
dec
pop
jecxz
pop
and
jnp
lret
jb
sub
cmp
inc
std
jge
mov
out
sti
mov
mov
test
adc
test
push
shl
jmp
mov
andl
addr16
and
xchg
jg
out
movl
shl
clc
pop
push
loope
and
mov
std
ret
call
pusha
data16
stc
clc
les
lds
pop
fisubl
mov
inc
or
arpl
mov
aas
push
aaa
cmp
test
in
dec
fs
sub
xchg
in
push
in
cmp
add
xchg
pop
add
adcb
cmp
ret
pop
jae
into
popa
push
aaa
aaa
arpl
scas
popf
jnp
jge
sub
ljmp
aas
mov
leave
test
mov
dec
hlt
jbe
ss
lret
cltd
cwtl
mov
mov
and
or
test
jle
sub
mov
cmc
ljmp
cmp
xorl
mov
lret
out
push
sbb
and
dec
jo
and
mov
dec
stos
fnsave
clc
fisttps
sub
cmp
ffree
and
loopne
movsb
mov
xchg
adc
test
jb
cs
xchg
pop
out
xchg
jecxz
mov
inc
loop
subl
gs
das
icebp
mov
fnsave
sbb
dec
push
dec
out
mov
mov
dec
xor
movsb
clc
pop
mov
lods
das
fisubl
inc
xor
shl
push
inc
stos
in
mov
les
mov
sub
mov
or
nop
xor
jle
mov
jge
adc
push
cmpsl
cmpsb
or
jo
pop
jle
or
mov
inc
jo
lret
cmp
sbb
pop
dec
test
mov
arpl
imul
mov
lock
jge
mov
mov
stos
scas
andl
mov
jnp
jnp
hlt
test
xlat
mov
rcrb
xchg
scas
les
ljmp
pop
adc
push
inc
scas
xchg
mov
stos
dec
cmp
in
idivl
loop
imul
mov
sub
mov
bound
fisubrl
push
mov
imul
rolb
icebp
pop
jb
dec
lock
mov
mov
mov
sbb
imul
xor
add
cmp
sub
lock
std
pop
test
cmp
sarl
sub
dec
call
aam
in
fwait
je
mov
int
add
push
cld
or
xchg
aad
pop
pop
mov
mov
jl
mov
mov
adc
or
ror
jo
sbb
stos
fwait
arpl
mov
xchg
movsl
sbb
mov
sub
test
mov
std
and
xor
add
inc
cwtl
xor
ljmp
ud0
movsb
sub
pop
pop
fdivrl
lods
dec
mov
dec
rolb
addb
data16
out
repz
enter
mov
sub
jo
jae
imul
dec
jnp
xchg
shlb
pop
outsl
rorb
adc
into
cmp
inc
pop
loop
arpl
insl
ds
sub
cmc
je
arpl
pop
pop
fwait
pop
or
ret
ss
in
push
sbb
test
fsubr
hlt
movsb
orb
push
ja
scas
aaa
inc
stc
xchg
fstpt
jae
add
inc
mov
scas
fiadds
test
es
dec
mov
popa
ljmp
dec
xor
and
pop
push
ds
pop
negb
add
imul
pop
cs
push
push
add
leave
inc
movsb
pusha
out
pop
sub
inc
adc
mov
in
jns
sbb
shrb
mov
sbb
sub
or
hlt
fildl
ret
jmp
je
ret
pop
push
inc
sbb
clc
adc
stos
jne
pop
jle
mov
loop
add
and
pop
popf
and
sbb
jo
sbb
jg
ljmp
lods
dec
xor
jp
mov
mov
xchg
add
popf
pop
mov
inc
xlat
cmp
mov
movsl
cli
mov
lds
pusha
and
sub
or
icebp
in
or
movsb
dec
cwtl
dec
subl
sahf
enter
out
and
and
clc
std
fisttpl
jle
pop
fsubrl
mov
jge
orl
mov
jb
outsl
cmpsb
mov
loop
xor
and
inc
xchg
loope
jmp
stos
and
addr16
fidivrl
cmp
in
bound
adc
pop
movsl
mov
outsb
xchg
xchg
data16
jecxz
rclb
mov
js
dec
repnz
repz
out
ss
cmpsb
mov
lcall
je
adcl
iret
adc
filds
cltd
cli
mov
sbb
inc
dec
pop
jecxz
into
test
test
add
out
dec
mov
es
adc
xor
xchg
inc
scas
mov
push
not
movsb
bound
xchg
jb
push
inc
outsl
popa
adc
movsl
and
std
scas
out
push
pcmpeqb
sbb
into
fiaddl
mov
sbb
aam
dec
jmp
addr16
cmp
push
mov
inc
jg
mov
subb
push
loopne
int
js
enter
dec
adc
nop
mov
mov
pop
inc
push
adc
push
jmp
loopne
push
ljmp
xor
or
jno
sub
dec
pop
cmp
rorl
cmp
outsl
xchg
stos
xchg
adc
adc
cmc
popa
js
int
aam
xchg
in
in
xor
add
add
insl
and
sbb
pop
leave
mov
pop
lcall
dec
cmpsl
loop
movsb
enter
push
shlb
cmp
sahf
dec
or
stc
call
jecxz
inc
lcall
mov
bound
xor
cmpl
adc
push
mov
push
and
pop
sub
push
mov
std
lds
jo
mov
pop
stos
push
int
subb
xlat
rorb
or
loopne
mov
testl
push
push
pop
mov
outsb
cmp
cli
and
pop
addr16
inc
pop
sarb
mov
ret
jnp
roll
fwait
nop
jg
mov
or
mov
jmp
jmp
sub
add
stc
out
mov
pop
insl
rol
xchg
sbb
in
or
popf
ss
xchg
out
in
aas
add
ljmp
add
ljmp
stos
dec
sub
popa
cmp
or
in
mov
ror
xor
enter
sbbb
jge
adc
std
movsb
fnstcw
push
mov
push
pop
jmp
int
es
lea
scas
dec
inc
xchg
pop
lret
test
and
cmpsl
push
fisubl
imul
cmp
pop
mov
je
rcrl
sarl
mov
adc
iret
mov
adc
leave
lret
jae
ror
inc
fsubl
popf
out
mov
popf
pop
push
add
repz
push
pop
iret
dec
mov
pop
cli
xlat
jbe
jg
cmp
movsb
fcomi
das
mov
ret
mov
add
pop
pop
inc
mov
push
loop
std
pop
mov
xor
push
jne
shlb
or
and
int3
xor
xlat
aad
sbb
inc
adc
ss
and
mov
lret
or
in
lcall
fiadds
jl
ficoms
inc
dec
mov
sbb
jmp
xchg
dec
or
das
adc
mov
stos
filds
dec
push
data16
push
dec
and
repz
xchg
arpl
add
cmp
mov
adc
scas
xor
call
sbb
call
pop
mov
push
add
cs
shr
mov
loop
sbb
dec
mov
faddl
cmp
fidivrs
xor
scas
add
mov
mov
enter
dec
outsl
int3
shrb
pop
loop
cltd
stos
popa
or
lahf
adc
dec
stc
cmp
jae
fs
inc
xor
jnp
andb
jns
inc
push
cmp
mov
daa
xor
jecxz
test
push
shrl
les
or
in
ds
jne
repz
rolb
adc
or
cmp
or
pop
pusha
push
xchg
loop
push
jle
aad
sub
mov
pop
dec
call
mov
adc
into
and
cmpsb
inc
call
scas
stc
pop
nop
cmpl
rorb
push
sub
addr16
adc
cltd
cmpsb
sbb
daa
fimull
fldl
push
std
insl
mov
cmp
popf
iret
into
je
mov
xlat
jecxz
rsqrtps
rcrb
icebp
pusha
outsl
mov
sbb
lock
jl
mov
push
out
mov
outsl
aad
add
mov
fs
pop
pop
sbb
out
sub
ljmp
loope
sbbl
sub
addr16
lods
imul
mov
popf
cmpsl
mov
sub
xor
cwtl
dec
mov
call
stc
inc
sub
test
out
xchg
push
shr
jo
lcall
add
mov
mov
dec
push
call
add
mov
lds
mov
or
push
sti
leave
mov
xchg
lret
adc
cmc
insb
lea
fwait
clc
aam
aad
inc
fsts
dec
mov
scas
inc
inc
adc
cmpsb
hlt
inc
or
mov
fwait
insb
add
imul
mov
cmp
clc
and
int
mov
and
pop
insb
sub
test
loopne
fsubl
jle
sbb
mov
rcrl
gs
push
cmp
out
ljmp
cmpl
int3
mov
mov
and
cmp
lret
leave
or
push
fisubs
cmp
jmp
pusha
add
xor
dec
dec
ja
fcompl
pop
cltd
sbb
sub
pop
out
loop
and
in
push
sbb
lods
push
jl
mov
dec
subl
lds
jle
xor
push
daa
enter
mov
scas
adc
in
inc
loope
fbld
sub
xchg
je
loop
cmpsb
lahf
aad
mov
insb
ficompl
insl
pushl
xor
sarl
mov
jmp
jl
sub
pop
insl
cmp
inc
push
stc
inc
add
stos
adc
xor
mov
jb
ret
sub
cmp
sub
mov
fistpl
and
stos
arpl
or
mov
ja
iret
lock
in
or
and
mov
mov
dec
std
outsb
cmp
lods
sbb
xor
in
push
pop
pusha
iret
and
pop
inc
push
push
testl
mov
mov
mov
sub
xorb
pushf
add
jmp
test
jnp
sub
js
xor
imul
sbb
xlat
aas
cmp
iret
pop
sub
dec
pop
adc
rclb
or
dec
clc
scas
lock
inc
cltd
mov
cmc
cld
ja
sub
leave
movsb
pop
pop
cmp
mov
movsb
popf
aaa
jle
cmp
hlt
nop
fisttpll
pusha
testl
pop
repz
or
lock
or
pop
popl
pusha
and
dec
js
mov
push
pop
adc
stc
adc
mov
adc
mov
sub
jl
insb
push
cld
push
lock
lods
xchg
pop
mov
lods
rcrb
and
mov
mov
outsb
lock
lea
out
pop
push
xor
call
adc
mov
push
lds
sub
fs
or
sbb
shlb
sub
test
fsubs
dec
es
jecxz
mov
rol
adc
xchg
inc
jmp
mov
iret
xchg
out
jge
jecxz
js
xlat
sub
cmp
adc
fucompp
add
inc
pop
mov
inc
sbb
hlt
pop
ret
inc
jae
xlat
and
into
mov
xor
int
or
addb
mov
jb
add
rorl
lds
stos
inc
push
gs
fnsave
jnp
test
insb
mov
mov
clc
cmc
lcall
mov
sub
sarb
cmovnp
pop
and
sub
mov
std
add
leave
ljmp
adc
lods
xorl
push
cmc
lods
clc
out
mov
cld
arpl
loopne
cs
mov
push
in
inc
ja
adc
mov
pop
cmp
outsb
lds
add
sahf
in
jnp
and
leave
or
mov
push
sahf
push
stc
in
sbb
in
popf
sbb
imul
mov
sbb
ss
and
pop
aaa
xchg
es
sbb
ja
scas
icebp
sbb
outsb
jns
pop
xor
mov
add
and
mov
shr
dec
mov
fnstsw
shrb
jp
dec
adc
inc
test
jecxz
fwait
ja
aam
cltd
cwtl
jne
adc
inc
sbb
sti
orb
imul
ret
mov
dec
push
jne
adc
test
push
mov
cmp
inc
jp
mov
adc
jecxz
movl
aas
dec
aas
adc
mov
fadds
add
mov
ret
mov
cmp
in
pop
sub
xor
std
lcall
and
mov
lret
andl
push
pop
loop
pop
fsubrp
and
add
repnz
cmpsb
sub
pusha
mov
les
jge
in
mov
scas
jg
fstpt
je
pop
lock
outsl
xchg
cwtl
jno
xor
pop
daa
imul
sbb
ljmp
jge
pop
add
xchg
sbb
push
push
or
lock
xchg
jne
imull
jbe
pop
and
mov
xlat
xorb
jmp
movsl
dec
push
dec
inc
insl
int
dec
shlb
adc
fdivl
push
bound
shll
mov
loope
cmp
inc
sbb
cltd
loope
mov
inc
lods
ljmp
ja
and
fcomps
adc
sbb
mov
push
xchg
lds
dec
dec
loopne
jg
aaa
xlat
outsl
sti
loope
jg
ja
addr16
cmp
sub
fisttpll
pop
in
xor
fistpl
and
loopne
sar
push
in
sar
or
xchg
mov
push
mov
pop
inc
orl
shr
jne
sbb
sbb
add
mov
enter
out
sahf
push
out
fmuls
cmp
pop
mov
cmp
daa
dec
inc
insb
into
adc
xlat
and
cmp
push
rorl
adc
mov
aam
jno
fdivrl
pop
mov
xchg
and
jmp
inc
xchg
loop
insl
jns
jno
push
sub
jmp
dec
shrb
mov
iret
mov
or
lret
xor
loopne,pn
add
shrl
or
pop
imul
scas
xorl
insl
pop
inc
repnz
mov
xorl
enter
pop
and
lahf
dec
xor
scas
jbe
aaa
scas
mov
imul
sbb
nop
fwait
mov
pop
xor
pop
mov
adc
push
lcall
sahf
scas
jo
loope
push
loope
movq
jo
lahf
hlt
xorb
clc
outsb
out
jne
mov
dec
mov
inc
sub
shrl
in
test
sar
pushf
mov
mov
xchg
push
jmp
stc
jecxz
fldl2t
inc
cmp
add
sbb
mov
mov
out
fldcw
mov
call
xlat
sbb
jg
test
into
data16
sub
inc
pusha
dec
and
adc
jmp
and
fs
mov
lret
test
add
mov
ret
lret
mov
cmp
sbb
xchg
aaa
test
popa
popa
lock
sbb
cmc
xor
and
and
jmp
lcall
pop
gs
sub
adc
stos
dec
cltd
ljmp
das
scas
shl
dec
mov
enter
sbb
xor
stos
inc
jne
adc
roll
xorb
in
fs
dec
mov
imul
jbe
into
xchg
xchg
mov
sub
movsb
sub
xlat
xchg
ja
and
cmc
ss
insb
or
cmp
xchg
sti
movsb
inc
adc
pop
divb
scas
jp
push
cld
dec
pop
xlat
lret
and
cmpsb
xor
je
jae
lcall
add
mov
fcmovb
adc
adc
sub
das
mov
ret
js
lock
push
dec
mov
sti
push
test
movsl
adc
sahf
or
push
repnz
loope
mov
adc
insb
push
jbe
or
lds
shrl
cmp
jecxz
nop
push
push
cmp
iret
dec
jmp
push
jne
pop
rcll
jl
fcmovnb
mov
out
movsb
and
mov
and
add
daa
push
out
jne
in
jb
xchg
fnstenv
add
mov
mov
xchg
sbb
inc
mov
outsl
pop
inc
rclb
adc
in
imul
mov
imul
aam
xor
inc
sbb
leave
ja
cli
cmp
adc
push
mov
movsb
leave
std
repnz
sbb
push
lret
xchg
fwait
dec
push
jae
push
ret
fistl
jne
inc
mov
inc
push
inc
jne
ret
pop
add
lcall
fwait
mov
aaa
enter
mov
in
push
mul
scas
sbb
stos
sub
leave
mov
and
pop
dec
scas
call
dec
mov
and
mov
les
and
cmc
mulb
lods
jp
ljmp
stos
stos
mov
cltd
aas
sarl
add
lcall
int3
test
mov
inc
aas
jmp
add
jp
inc
pop
jl
in
cwtl
or
cld
add
mov
xor
or
add
iret
repnz
inc
or
or
inc
lock
add
jecxz
lods
out
mov
xor
aas
decb
pusha
dec
push
and
test
mull
inc
cltd
test
pop
lock
lcall
mov
jmp
lock
adc
pop
xchg
xchg
jmp
pop
adc
stos
ret
mov
push
jecxz
sahf
lret
jb
xor
sbb
and
jns
push
pop
jb
ss
xchg
out
outsl
mov
and
testl
les
pushf
mov
mov
insl
pop
mov
jp
sbb
sbb
jnp
int3
lods
sbb
outsb
icebp
sarb
cmp
jnp
pushf
out
lods
jmp
inc
pop
movsb
xchg
lea
sbb
movsb
fidivrl
idivb
cmp
pusha
gs
xchg
mov
movsb
xor
repz
lods
and
dec
sti
decl
leave
call
neg
sbb
mov
jmp
call
fucomi
jge
jmp
test
push
xor
imul
cmc
adcl
push
or
int3
adc
push
push
aam
adc
mov
repz
jle
cwtl
hlt
pop
cs
loopne
and
xchg
shl
cmp
jmp
push
gs
pop
or
jle
test
call
shl
inc
bound
xor
iret
arpl
sub
es
arpl
ret
jo
inc
testb
mov
rcrl
js
xor
in
mov
mov
jl
sub
loopne
dec
jns
cmp
inc
pushf
xor
repz
cmc
dec
fstpt
into
mov
mov
inc
lcall
insb
shlb
stos
sub
lahf
or
xchg
push
or
and
dec
inc
dec
jecxz
hlt
xchg
mov
mov
mov
cmp
push
mov
in
push
loop
adc
stos
sahf
stc
jp
jmp
enter
test
cmp
loopne
aad
inc
and
jo
mov
nop
cltd
daa
cmpsb
and
adc
inc
mov
cmp
jmp
int
mov
push
inc
jg
fcmovb
popa
jl
int
push
mov
movb
inc
xor
cmp
scas
pop
icebp
jo
mov
rolb
cli
daa
in
sti
sub
push
mov
jecxz
int3
test
call
add
and
out
mov
cltd
insb
fwait
cmp
sub
js
and
seta
jo
add
mov
pop
jecxz
pop
out
push
xchg
dec
mov
scas
push
scas
mov
adc
xchg
dec
xor
in
jge
pop
out
repz
fcmovbe
xor
jge
dec
adc
insl
cs
adc
lahf
or
or
repz
adc
pop
add
push
aaa
ja
icebp
mov
push
adc
push
jno
movl
int
loop
test
or
popf
shll
add
jbe
cmp
xor
int3
jle
test
mov
sbb
mov
lock
push
mov
cmpsb
iret
repz
addr16
mov
out
pop
push
es
jp
mov
pop
aam
sbb
daa
hlt
leave
js
jno
xchg
bound
insb
mov
dec
js
mov
iret
push
daa
push
cmc
stos
test
das
jmp
pop
and
add
cs
popf
lods
lea
mul
xchg
jp
mov
xlat
cmp
sar
or
scas
shrl
rolb
imul
out
sbb
mov
mov
fs
pop
or
stc
mov
mov
or
cli
ljmp
adc
popa
gs
fcmovb
add
das
xchg
xchg
mov
and
xchg
cs
or
xchg
lods
ljmp
mov
lret
sbb
adc
mov
fstps
pop
movsb
jp
inc
sbb
mov
imul
fimull
movsl
jg
hlt
aas
stos
ret
mulb
movsl
out
int3
idivl
or
test
jmp
es
add
or
in
mov
repnz
pop
xchg
imul
lea
add
repnz
sub
mov
test
fld
movsb
mov
ja
mov
and
xchg
das
aad
bound
lock
or
xchg
fisubrs
xchg
call
push
dec
test
mov
movsl
dec
cmp
test
mov
lahf
mov
stos
iret
hlt
neg
sahf
repz
adc
xor
xchg
outsb
mov
dec
stos
fcmovnu
adc
in
push
insl
pop
popa
push
hlt
rcr
xlat
mov
pushf
adcb
push
mov
sbbl
lret
out
mov
aas
es
sahf
lcall
add
jmp
mov
test
repnz
out
push
cmp
pop
stos
imul
dec
hlt
shlb
cmp
mov
mov
loope
test
push
adc
cmc
leave
or
add
cmpsb
cli
add
cltd
das
imul
aam
xor
xor
fs
sub
lret
sub
mov
aad
cmpsb
jle
rcrl
jae
shrl
fistpll
movsb
lock
adc
adc
mov
pop
loope
lock
mov
outsb
jecxz
lcall
inc
xchg
outsb
jecxz
xor
jp
or
dec
data16
pop
add
mov
pop
int3
call
in
mov
mov
in
pop
movsb
or
ds
rorb
clc
stos
pop
mov
popw
jno
pop
push
push
out
push
xor
popa
sub
push
mov
add
adc
jge
add
mov
mov
jno
mov
int3
and
mov
fnstsw
inc
pop
das
jge
push
adc
data16
mov
mov
adc
out
repz
push
or
add
sbb
inc
pop
icebp
xorl
dec
stc
outsb
dec
repz
dec
stc
repz
cmp
mov
out
pop
cli
mov
popa
inc
repnz
jg
pop
icebp
cmc
sub
inc
sahf
lea
xchg
push
push
mov
adc
cli
sub
sub
add
andb
pop
cs
dec
dec
fiadds
sub
test
arpl
dec
pop
inc
pop
dec
add
flds
test
adc
or
fwait
cmc
fidivl
jno
cmp
dec
push
mul
mov
test
cmp
xchg
sbb
out
ds
je
leave
rcrl
lods
aas
mov
jb
push
xor
je
xchg
add
mov
stc
bnd
xchg
fsub
dec
fldcw
or
rclb
ds
pop
mov
iret
clc
sub
lods
hlt
sub
iret
out
aam
cmp
push
pop
repz
out
sub
jge
into
push
insl
pop
mov
andl
pop
mov
adc
js
sarb
enter
daa
movsb
pop
pop
popa
add
push
mov
or
mov
adc
xor
inc
loopne
dec
arpl
jae
inc
jecxz
lret
dec
test
arpl
sub
sbb
in
cltd
jae
scas
push
mov
xchg
xchg
cmp
les
mov
or
push
xchg
jge
hlt
jge
adc
pop
ja
dec
mov
adc
mov
add
xchg
mov
loope
divb
mov
mov
movsl
mov
cmc
les
test
outsl
add
andl
mov
mov
sbb
mov
pop
cli
pop
push
test
jno
mov
in
add
arpl
pandn
mov
jle
jnp
jb
push
dec
dec
fnstcw
push
fwait
mov
insb
push
loope
lahf
je
mov
or
adc
shll
shrb
sti
in
add
sub
test
mov
or
xchg
adc
in
xchg
push
xchg
je
fbstp
xor
aad
stc
stc
lods
jae
cltd
pusha
xor
mov
add
xchg
cmp
sbb
lods
or
shrl
cmpl
sub
or
jg
bound
cmp
aam
movsb
dec
lds
mov
fcoms
add
mov
sub
popf
mov
pop
sub
or
out
aaa
jle
xor
xchg
push
lret
es
xor
es
test
lea
pop
push
pop
adc
mov
scas
xchg
jl,pn
xchg
mov
out
xchg
and
push
ljmp
inc
xlat
jno
and
or
jae
lret
jl
or
stos
jmp
mov
adc
icebp
sbb
pop
stc
jb
mov
hlt
imul
fisubs
or
mov
mov
pop
cmp
out
fistpl
out
ja
dec
mov
insb
cmp
sbb
mov
out
add
push
dec
adc
lcall
addl
cltd
add
and
jle
scas
shll
dec
clc
ljmp
jne
jge
xchg
xchg
std
pushf
adc
jp
inc
dec
xor
cmp
jle
push
jbe
repnz
jne
test
out
and
or
ret
rcrl
dec
fwait
xchg
pop
fdiv
xlat
in
jae
cs
lcall
xlat
dec
cmc
xchg
fwait
mov
mov
cmp
inc
loope
out
dec
mov
je
xor
cmp
push
mov
popl
push
xchg
das
adc
adc
imul
icebp
add
mov
mov
mov
pop
cmpsl
add
xor
sbb
andl
mov
es
or
dec
stc
xor
mov
in
xchg
mov
mov
xchg
push
sub
dec
cltd
je
mov
jecxz
ja
mov
dec
push
enter
stc
aam
mov
xchg
lea
mov
add
aaa
mov
lods
shl
inc
fistps
pushf
jp
adc
sbb
lods
scas
and
jl
pop
sbb
flds
nop
rclb
aas
inc
fs
or
xchg
ss
popf
insb
shrl
movsl
sub
test
out
sub
pusha
aas
pop
mov
pop
pop
and
xor
pop
and
mov
sbb
mov
jge,pt
xrelease
add
mov
sbb
inc
subl
loopne
push
cs
pop
movsl
mov
add
jle
fistpll
mul
jnp
xlat
imul
aam
xlat
cli
jmp
add
jl
jge
mov
sbb
aad
adcl
pop
xchg
push
pop
loop
jge
in
dec
push
xor
add
fucomip
mov
sbb
jge
push
sub
adc
daa
jae
pop
pushf
cld
decb
sub
pop
into
xchg
clc
jmp
das
dec
xchg
adc
jp
push
pop
mov
xor
lcall
mov
cmp
out
fadd
jne
das
icebp
loopne
push
xor
cmp
nop
adc
fldt
pop
adcb
pop
and
outsb
pop
jbe
lods
jle
lahf
icebp
sub
les
and
cmpsl
stos
pushf
in
mov
lcall
lds
xor
dec
mov
cmp
js
aas
inc
mov
cmp
inc
mov
push
jae
lds
movsb
out
clc
ret
cmp
lret
cld
mov
add
jmp
dec
lcall
xchg
es
mov
mov
xlat
aas
pop
jg
add
ja
cwtl
cmp
loop
lcall
cmp
rorb
cmp
add
pop
jae
clc
dec
lcall
inc
add
cmp
shll
inc
dec
outsl
adc
out
lods
push
lahf
daa
fildl
xlat
xorb
idivb
mov
xchg
sti
aas
pop
sahf
shl
pop
frstor
pop
scas
sbb
in
les
leave
push
ljmp
add
xchg
scas
inc
aaa
dec
dec
ret
lret
cmc
inc
add
lock
dec
je
push
dec
call
pop
cs
cltd
pop
inc
out
movsl
loop
fimull
cmpb
into
addr16
ds
stc
xor
inc
cmp
and
or
push
xor
jg
push
aam
jo
jne
pop
pop
adc
js
push
leave
mov
adc
int3
imul
jmp
dec
cli
dec
mov
inc
out
cmpb
cwtl
push
insl
inc
stos
xchg
loope
or
pushf
pop
cld
push
mov
adc
push
test
stc
gs
xor
mov
mov
pop
adc
movsb
fldcw
jb
movsb
adc
mov
sbb
jecxz
popf
icebp
popf
les
clc
pop
mov
lods
lods
push
test
lret
inc
mov
push
and
mov
sub
jp
push
push
sbb
insl
or
testb
and
test
lods
in
jle
pop
rolb
jmp
sbb
aas
mov
inc
mov
adc
push
xor
fwait
cmpsb
mov
cwtl
mov
in
je
sub
aam
nop
fcomps
mov
mov
nop
pop
jp
stos
and
dec
sub
adc
pop
sub
pusha
xchg
fs
jge
ljmp
xchg
cmp
dec
lea
subb
inc
adc
push
shrb
pop
xchg
js
inc
test
lea
push
fldl
add
add
bswap
xor
xor
bound
xlat
cmp
xchg
push
mov
bound
fisubs
adc
frstor
aas
jg
ret
mov
popa
lds
out
push
sahf
int
rcrl
mov
orl
nop
cmp
and
outsb
jne
sub
lcall
mov
in
js
xor
push
mov
out
addr16
test
popf
test
and
or
xor
sbb
popa
push
xlat
cltd
sbb
sbb
xor
out
in
mov
jg
mov
sbb
divl
or
jo
ret
xchg
mov
mov
add
cmp
xor
sub
mov
dec
enter
inc
jp
inc
mov
jo
aas
sub
lods
mov
bound
adc
bound
out
mov
cli
int3
add
lea
cmpsb
or
sahf
mov
jne
ficompl
scas
inc
daa
push
jecxz
xor
xchg
arpl
out
xor
pop
cmp
sub
and
mov
xor
lock
aas
pop
and
int
in
mov
jnp
cmp
or
mov
int
jns
jecxz
rclb
pop
push
movsl
outsb
pop
cmp
in
adc
sahf
jge
pushw
bound
aas
pusha
mov
test
xchg
xchg
adc
jmp
push
mov
sub
cli
xchg
sti
cmpsl
call
mov
scas
cmp
popa
sub
rcl
pop
movsl
sub
fiadds
adc
or
push
jno
cmp
mov
push
add
mov
add
in
imul
mov
fmulp
cmp
loop
push
dec
push
repnz
movsl
cmp
les
mov
and
imul
addr16
cmp
pop
stos
cmc
inc
in
pop
xchg
lods
jge
js
dec
mov
add
pop
aam
jge
sbbb
adc
test
lods
or
jp
jne
jae
jmp
hlt
sbb
xchg
idivb
jg
add
movsb
js
xor
sub
cmpsl
loopne
push
ret
call
xchg
inc
sti
sub
cmp
inc
push
popa
push
push
ds
int
or
cmp
or
in
push
dec
cmp
fisttpll
cwtl
dec
sbb
jmp
test
dec
xchg
popf
in
and
sbb
mov
jge
jae
in
mov
mov
push
aaa
lods
mov
mov
sbb
xor
fcomps
sub
mov
rclb
outsl
sbbb
sarb
out
mov
jmp
out
jp
insl
cmp
lods
cmp
inc
fimuls
int3
mov
pop
in
int
or
push
inc
out
mov
insl
xchg
jnp
and
xor
rolb
pushf
sub
dec
xor
jb
loope
and
push
ds
sub
fs
test
fs
jge
push
pop
push
push
ret
cs
jne
jne
mov
fwait
pop
aaa
mov
in
push
fisttpll
fldenv
mov
and
or
xchg
xlat
ret
hlt
mov
rcrb
insb
subl
es
out
inc
sbb
stc
jp
inc
andl
push
mov
pusha
decl
enter
push
xchg
push
cmpsb
inc
mov
ret
jae
repnz
and
cmpsl
lcall
testb
in
int
ret
lds
inc
cmp
fisubrs
cmp
in
insl
adc
push
mov
je
inc
icebp
fucom
adc
pop
aas
das
inc
out
mov
sub
call
ds
and
mov
adc
aam
pop
test
cld
sbb
cmp
fsts
nop
lret
mov
in
loop
inc
push
test
inc
cmc
jbe
adc
call
cltd
xlat
or
pusha
mov
popa
cmpsb
mov
bnd
popa
ror
lret
cmc
xor
test
std
mov
add
pop
aam
mov
cwtl
je
aas
inc
xlat
push
mov
cmp
jae
xchg
repnz
cmpsl
pop
push
push
fnsave
repnz
xor
out
mov
lds
mov
mov
repnz
test
dec
push
and
js
jo
jl
iret
jge
rcrb
int3
xchg
bound
arpl
mov
xchg
jb
pop
outsb
stc
test
jmp
sbb
cwtl
and
mov
add
inc
inc
xchg
iret
test
sub
or
xor
or
mov
cs
or
sbb
add
mov
jne
scas
mov
xor
mov
std
js
jo
leave
mov
xchg
jbe
xor
loopne
stc
jg
rcll
push
and
stc
dec
mov
cmpsl
jne
pop
in
cs
cmp
ret
xchg
inc
push
sahf
aam
sbb
cmp
popa
xchg
sub
mov
ljmp
xchg
mov
cmp
out
cmc
fdivl
push
or
push
and
xchg
cld
sub
inc
aad
push
test
inc
pop
lahf
ror
inc
inc
les
test
sub
addr16
and
aaa
adc
mov
mov
in
mov
leave
stc
test
mov
jge
lods
inc
jp
pop
mov
je
cmp
cmp
cmp
sbb
push
fcomps
jle
jecxz
xor
mov
push
test
loop
ljmp
fisubs
lret
sti
cmp
mov
imulb
xchg
movsl
aas
pop
pop
jns
ja
test
int
in
bound
daa
dec
pop
imul
dec
insb
gs
es
xchg
in
pop
in
loope
fnsave
inc
testb
cmp
fcompl
pop
inc
push
and
test
and
jnp
movb
or
aaa
jbe
nop
or
mov
mov
inc
jecxz
shl
inc
push
add
inc
xchg
push
mov
xorl
sbbl
and
jmp
adc
or
out
mov
jmp
ret
inc
cmp
push
push
cmp
dec
dec
lods
loope
xchg
xchg
adc
mov
icebp
and
mov
scas
sub
pusha
nop
or
jmp
adc
xchg
sbb
les
lds
sbb
pop
xchg
out
pusha
mov
cmp
aad
stos
sub
inc
es
xlat
push
pop
sahf
jecxz
mov
aad
or
dec
xchg
rorb
pushf
mov
dec
dec
icebp
pop
outsl
sub
clc
daa
jecxz
ficoms
enter
out
pop
xor
jmp
shrb
add
mov
inc
inc
popf
and
aas
mov
cltd
insb
repz
movsl
insl
push
or
mov
out
arpl
cmp
inc
test
fdivl
xchg
clc
jecxz
imul
cwtl
orb
mov
jle
mov
add
sarl
inc
pop
inc
es
sub
xor
mov
mov
mov
inc
int
add
xchg
loopne
dec
pop
div
scas
pop
in
popa
push
mov
sub
or
or
sbb
inc
sub
adc
or
data16
aam
xor
push
mov
push
in
test
subb
fs
sbb
or
mov
cmp
imul
cmp
xor
or
outsb
pop
mov
push
mov
mov
jge
dec
sub
data16
sti
pop
dec
mov
jo
pop
pop
xor
mov
lods
rclb
inc
sub
pusha
sub
dec
scas
adc
daa
fmull
scas
mov
ss
xchg
mov
std
mov
mov
out
add
jg
in
xchg
inc
jp
outsl
mov
cwtl
xor
push
nop
xchg
popf
jnp
or
fildl
xchg
cltd
repnz
cmp
fucom
in
dec
jp
sub
addl
mov
xchg
enter
adc
dec
mov
into
int3
rcll
mov
rcll
pop
jb
and
outsb
mov
mov
mov
jb
cltd
adc
scas
and
cmp
mov
jl
mov
cmp
pop
out
pop
in
addr16
sub
jg
dec
and
cwtl
stos
mull
xor
cmpb
ss
and
push
jb
push
repz
pop
xor
cmpl
and
js
rcl
and
and
lds
ret
jg
dec
cmp
pop
mul
pop
xor
xchg
cmc
mov
pop
xchg
xchg
shlb
push
test
and
add
ljmp
es
frstor
outsb
xor
icebp
or
subl
mov
das
pop
ja
mov
mov
push
iret
cmp
fs
sbb
mov
push
xchg
jno
ja
push
pushf
daa
dec
cmpsb
pop
shrb
mov
inc
cmp
mov
lods
andb
insb
js
adc
xor
mov
loopne
push
mov
ljmp
cmc
lods
mov
lret
aaa
mov
or
ljmp
lret
aas
and
repz
pushl
repz
lods
jae
xor
test
lcall
or
movb
les
call
mov
fistpll
gs
adcb
enter
or
mov
int
lcall
cs
pop
adc
cltd
stos
ret
outsl
sub
fiadds
add
fldenv
pop
fsubs
shrb
push
dec
xchg
lea
std
sub
fmulp
loope
shll
sahf
popa
lods
ja
fildl
push
mov
bound
push
adc
movsl
mov
mov
pcmpeqb
lods
loop
gs
cmp
dec
sbb
dec
dec
imul
adc
sbb
sbb
mov
jle
pop
jle
inc
pushf
dec
movsb
pop
mov
insb
mov
mov
aaa
mov
data16
push
clc
xchg
push
xor
lea
in
ret
push
es
add
pusha
dec
iret
mov
jp
xchg
fidivrs
and
movsb
shlb
cmp
add
je
movsl
pop
dec
push
jae
push
jmp
test
aam
cmc
pushf
mov
and
add
in
sbb
fmuls
and
adc
test
iret
xlat
movsl
scas
incb
mov
and
cwtl
xchg
jbe
lret
arpl
testb
pop
xor
cmp
cmpsl
pop
js
mov
sti
xor
pop
cmp
es
xchg
rcll
pop
pop
fcomi
pop
fbstp
cmp
mov
lea
scas
jmp
mov
mov
movsl
fscale
je
jne
lret
adc
jge
lcall
mov
lahf
sarl
sahf
dec
imulb
pop
mov
mov
icebp
test
stos
sub
add
fnstsw
mov
fucomp
pop
and
push
push
sub
sub
cwtl
nop
lods
ja
out
imul
fistpl
jo
push
mov
xchg
loope
movsb
js
and
xor
cmp
or
cltd
dec
xlat
mov
push
in
js
shlb
jmp
shl
lret
mov
mov
add
into
or
xchg
outsl
insb
aaa
iret
dec
gs
loop
xor
sub
lret
lret
scas
or
incb
mov
shr
test
mov
gs
es
adc
mov
jecxz
cmpsb
fcmovbe
jnp
data16
in
or
pop
idivb
lcall
xchg
daa
scas
hlt
mov
cmpsl
out
xchg
mov
sbb
xchg
imul
and
and
addr16
dec
push
rclb
sbb
add
dec
in
clc
shll
ret
enter
ret
xchg
int3
jg
push
subb
and
mov
push
lea
push
pop
or
and
inc
sbb
sub
pop
jle
fs
push
cld
jp
and
out
jmp
sub
mov
add
mov
ljmp
xchg
sbb
movsl
orl
stos
inc
and
push
pop
and
cmpsb
dec
insl
xor
out
mov
lahf
push
imul
std
imul
xor
scas
push
pushf
js
icebp
rcll
in
add
and
int
mov
mov
cmp
flds
shrl
mov
mov
xchg
cmc
or
addr16
shrb
dec
and
mov
pop
adc
mov
shlb
inc
pushf
aaa
push
je
enter
dec
and
push
ljmp
shl
jbe
rclb
dec
pop
add
dec
mov
lock
pop
adc
or
and
push
pop
and
adc
cmp
jle
in
test
test
rcll
sub
movsb
jge
mov
mov
adc
push
sbb
lds
lret
mov
ret
pop
sbb
enter
fildl
test
out
subl
sub
xchg
shrl
sub
push
sub
and
dec
inc
outsb
test
dec
xchg
cmp
jle
pusha
lahf
rolb
enter
test
pop
sbb
cmp
dec
jae
movb
xchg
in
iret
shl
dec
sar
xchg
dec
imul
hlt
enter
je
cmc
lret
into
mov
mov
call
mov
cs
out
fidivs
jae
and
mov
or
mov
pusha
inc
movsb
dec
fnstenv
out
add
pop
xchg
xor
jbe
sub
fwait
sbb
fsubrl
into
scas
jo
stc
sbb
repz
loop
and
xchg
sbb
sahf
not
gs
loop
int3
jns
inc
push
jae
insb
xchg
jnp
jo
push
push
or
push
dec
pusha
setno
inc
mov
mov
and
insl
bound
jp
leave
sbb
and
pop
sub
push
out
mov
add
imul
adc
jmp
cli
xor
dec
jbe
divl
rcll
mov
push
enter
sbb
mov
in
lods
daa
pop
pop
inc
mov
test
leave
push
adc
lret
lock
lahf
aas
call
mov
out
inc
insb
inc
leave
nop
mov
sbb
pop
rorb
outsb
push
cltd
mov
mov
imul
dec
jl
dec
mov
loopne
push
leave
mov
adc
lds
sbb
cs
cwtl
lods
xchg
lcall
dec
xchg
int
lret
cmp
mov
ficoms
outsl
loop
add
add
push
mov
pop
in
xor
inc
push
jbe
in
or
xor
out
xlat
lods
cmpsl
cwtl
les
fs
sbb
jns
push
push
aam
xor
sahf
shrb
push
les
fldcw
cwtl
lods
lea
mov
pop
movl
mov
mov
insl
clc
pop
in
push
cltd
mov
xorb
lods
cmp
pushl
mov
fs
jno
int
fbstp
cmp
pop
mov
lods
inc
pop
or
or
pop
adc
sub
ss
inc
hlt
arpl
cmp
test
inc
clc
inc
into
fisubs
sbb
daa
cmpsl
mov
xor
das
cld
push
jno
rcrl
fildl
pop
in
push
add
push
mov
adc
sbb
sbb
aaa
xchg
push
int3
out
pop
daa
lret
fdivrs
mov
add
inc
jo
push
sub
inc
test
mov
fcmovb
fisttpll
lods
mov
sub
and
add
mov
sub
inc
out
cs
out
jecxz
enter
and
cmc
ficompl
xor
mov
bound
xchg
daa
call
fisttpl
in
push
xchg
sub
mov
insl
mov
sar
test
sahf
fcmovb
cmp
mov
push
or
inc
or
test
cmc
loopne
ret
or
cmc
pop
add
test
mov
bound
pop
das
movl
fwait
rclb
jno
imul
mov
cmc
adc
pop
das
jge
out
fadds
inc
add
jo
mov
shrb
fildl
in
sbb
inc
dec
jg
jnp
enter
lahf
jne
cmp
mov
js
pushf
insl
call
lea
jo
jl
jae
jl
or
xchg
sbb
and
aam
push
pushf
mov
or
dec
sub
sbb
divl
cmp
jecxz
outsb
dec
mov
lods
xchg
adc
cmpsb
addr16
sub
add
push
ss
imul
pop
jp
xor
adc
cmp
std
ret
mov
insl
stc
into
ja
les
sar
mov
xor
cwtl
stos
lea
or
jl
outsl
cmp
pop
mov
adc
iret
daa
repnz
repz
add
add
cmpsl
adc
enter
lcall
push
push
dec
push
jl
pop
cmp
xchg
push
jae
cmp
xchg
jbe
and
std
inc
fisttps
push
xchg
inc
cmpsb
fnsave
xchg
dec
sti
xchg
mov
jbe
cli
insl
inc
arpl
or
dec
sbb
add
cwtl
and
and
adc
xor
sbb
nop
sbb
sub
call
push
orl
pusha
dec
lcall
pop
sub
popa
dec
push
xor
fsts
push
call
and
push
pop
loope
int
repz
dec
popf
cld
les
mov
lods
add
cmp
lret
sbb
sbb
mov
dec
jecxz
or
cmp
icebp
lds
scas
movsl
imul
or
jb
push
vhsubpd
mov
cmp
imull
cltd
push
loop
dec
adc
iret
outsb
push
lock
jns
dec
in
rolb
jnp
mov
scas
xchg
pop
push
negl
in
push
xchg
popa
imul
inc
stc
mov
dec
in
and
mov
mov
xor
push
adc
mov
cs
repz
add
sub
cmpsl
mov
out
push
pop
inc
add
xor
dec
pop
adc
aam
or
mov
jge
sub
mov
test
sbb
subb
xorl
jo
sub
lds
push
mov
nop
xchg
dec
cmpb
push
mov
pop
sub
mov
aas
xchg
jbe
js
aaa
sbb
mov
dec
cli
lret
add
loop
in
pop
jb
loope
aas
insl
xor
int3
div
mov
sti
iret
inc
push
push
inc
in
movsl
sub
or
mov
cmp
dec
and
pop
pop
lahf
push
and
and
std
mov
lock
into
push
inc
push
ficoml
pop
rcrl
rorb
in
lock
out
lret
movsl
sbb
sub
cmp
mov
nop
pop
jo
add
fstp
add
cmp
add
addl
push
scas
leave
add
insb
adc
je
mov
scas
repnz
inc
jae
js
dec
add
mov
stc
or
addr16
jbe
loope
in
mov
int3
adc
xchg
lea
daa
es
jecxz
and
loope
aaa
mov
scas
mov
jl
pusha
mov
and
or
insl
call
gs
fcmove
cltd
negb
les
out
andb
inc
call
pop
jle
enter
inc
sbb
adc
push
stos
adc
movsb
test
rolb
xor
repnz
ficompl
daa
jbe
call
mov
xorl
insb
dec
or
pop
adc
mov
outsl
je
dec
cwtl
shlb
mov
lret
xlat
mov
pop
cmpsl
inc
xchg
jae
les
xor
push
scas
xchg
sbb
dec
inc
rol
wbinvd
int
imul
lock
ja
hlt
mov
pop
mov
sub
mov
dec
popf
pop
sub
push
xor
xor
push
push
jbe
sarl
fdivs
repnz
mov
or
sarl
mov
stos
inc
std
sub
repz
add
mov
xchg
push
out
iret
sahf
push
clc
ja
pushf
sbbl
jnp
and
xchg
xchg
lods
clc
lcall
sub
cmp
iret
jns
fwait
cmpl
lahf
mov
cmp
mov
cmp
sbb
xchg
int3
xchg
test
and
arpl
xchg
lock
cli
inc
jge
lods
add
iret
lock
or
cmpsb
sub
xchg
mov
jl
icebp
lret
mov
xchg
les
mov
xor
sahf
and
cs
push
or
and
bound
and
push
cmp
xor
jle
mov
test
leave
scas
insl
mov
xlat
pop
xor
aad
adc
pop
inc
jns
pop
sbb
or
popf
sbb
in
ja
inc
xorb
cmpsb
mov
inc
dec
mov
aam
mov
jg
inc
pushf
mov
jbe
sbb
std
jle
push
movsl
in
sub
mov
jno
les
sbb
jae
lret
mov
repnz
cmp
sub
rclb
xchg
repz
loop
lret
inc
rclb
daa
xchg
lcall
nop
xchg
in
fistl
mov
std
dec
cmp
scas
es
mov
cmp
rcrb
fcomip
mov
dec
dec
or
mov
dec
in
ja
mov
fldt
push
ja
and
adc
mov
arpl
push
loope
stos
mov
inc
jge
push
mov
pushaw
cmp
mov
enter
mov
inc
jge
stos
scas
fistps
xchg
mov
push
in
push
cmp
notl
jo
pop
test
xlat
push
xchg
mov
add
and
mov
xor
stos
jb
push
lret
adc
jp
pop
or
or
jge
daa
sbb
inc
xor
loop
loop
pop
xor
imul
andb
rorb
mov
pop
lret
jae
add
pop
sti
aaa
mov
pop
xlat
imul
inc
roll
adc
sbb
and
in
movsl
dec
jmp
mov
mov
jne
add
sub
fildl
aam
outsb
hlt
fs
pop
dec
cmc
fwait
inc
sahf
mov
ret
icebp
outsb
or
lcall
add
or
ffree
cmp
jg
push
je
lock
push
andb
test
std
cld
sub
mov
mov
and
jmp
sbb
stc
dec
inc
test
xor
or
inc
adc
lahf
nop
jnp
cmpsl
leave
adc
jb
lods
xchg
cmp
jns
fsubl
add
mov
and
mov
int3
paddd
cld
jmp
aaa
or
adc
and
scas
push
out
pop
lods
movsl
mov
clc
mov
rcrl
dec
pop
decl
rorb
subb
lds
cwtl
mov
mov
es
rorl
hlt
mov
leave
dec
jg
imul
das
loope
test
sti
dec
add
jne
push
mov
mov
xor
cs
inc
loope
add
mov
adc
dec
cli
fs
clc
add
mov
fndisi(8087
idivl
aam
out
fwait
mov
out
les
lret
jb
and
push
add
sub
fsubs
frstor
ljmp
sahf
mov
mov
adc
xor
dec
fimuls
mov
cmp
push
lahf
dec
sub
imul
test
daa
push
xchg
xor
test
mov
arpl
jb
and
push
jnp
sbb
mov
lds
xor
das
loope
out
into
popf
or
mov
addr16
jmp
into
cmpsl
sub
cmpsl
jl
xchg
push
aas
lret
fimuls
xchg
sbb
pop
xchg
in
xchg
sub
mov
call
dec
lods
inc
pop
lods
out
outsb
pslld
add
scas
sub
sbb
jno
cmc
mov
cmp
cmp
adc
aas
loop
fiadds
es
add
cmp
in
xchg
int3
sbb
sub
hlt
push
cmp
lcall
popa
fcoml
mov
ds
jbe
movsb
xchg
xchg
jl
push
mov
adc
fnstenv
mov
mov
lcall
xchg
and
imul
cmpl
aad
es
stc
scas
in
icebp
sahf
std
mov
lods
fdivrs
in
repnz
add
mov
mov
jmp
mov
sbb
lock
and
mov
mov
fbld
jmp
mov
stos
pop
or
cmp
push
sbb
leave
sbb
mov
and
cmc
xchg
ss
les
negb
or
outsb
mov
lods
push
rolb
jmp
shrb
scas
popl
scas
ret
jo
sahf
scas
mul
aaa
mov
int
nop
mov
xchg
hlt
aaa
cmp
lock
mov
lcall
std
or
fwait
or
mov
and
jbe
mov
push
mov
mov
jns
mov
ss
xor
in
lds
add
xchg
loope
add
or
clc
adc
adc
rol
xor
inc
and
push
dec
outsl
mov
rcrb
mov
push
mov
iret
xor
stos
lods
add
sub
dec
out
push
into
inc
sbb
dec
push
cmp
dec
pop
mov
xor
pop
or
fcmovbe
lods
scas
orb
lock
scas
xlat
aad
push
mov
js
fisttpl
repnz
lret
mov
or
imul
mov
push
or
mov
or
push
stos
inc
fcmovnu
movsl
sbb
lods
jle
mov
xlat
mov
xchg
dec
bound
add
insl
xor
mov
fstpt
xchg
adc
jbe
dec
enter
cmp
sub
out
pop
or
ret
push
mov
jns
jbe
incl
pop
and
jecxz
sbb
cmp
mov
popf
in
push
imul
pop
xor
push
out
sbb
adc
sbb
in
inc
xor
das
pop
arpl
xchg
dec
mov
mov
and
mov
es
lods
movsl
mov
push
test
out
mov
loop
push
pop
ja
imul
mov
stos
pop
push
pop
or
roll
jne
arpl
aas
cwtl
jb
mov
xlat
and
mov
lods
xor
ret
push
jmp
out
or
dec
cmp
fwait
jg
mov
sbb
cmp
pushf
adc
cmpsl
clc
mov
pop
adc
or
inc
and
adc
enter
add
mov
push
pop
loop
mov
push
ljmp
aas
cmp
mov
xchg
repnz
xor
inc
loope
sti
or
testb
inc
and
icebp
fwait
pop
movsl
xor
sbb
out
xlat
jbe
ds
notb
xor
inc
ud1
dec
dec
aas
inc
add
insb
pusha
or
xchg
mov
rcll
mov
fmul
lods
es
fists
mov
push
mov
sub
sti
test
mov
nop
dec
sti
scas
adc
sbb
jmp
xor
push
hlt
xor
xchg
int3
pop
and
xchg
mov
add
mov
int3
vcmpnlepd
jbe
sub
sub
sub
ret
inc
jne
movsl
fcom
notl
adc
inc
mov
inc
or
fildl
dec
int
sbb
or
fadds
fwait
jno
stos
xchg
inc
mov
xlat
ljmp
dec
mov
dec
push
repnz
cmp
in
push
orl
mov
mov
and
xchg
fidivrl
out
ljmp
out
add
mov
imul
dec
and
jns
lret
xlat
orl
inc
cmpsb
insb
js
into
jns
dec
push
loopne
stos
adc
out
jbe
xchg
xchg
std
or
dec
push
sahf
xchg
rorl
jl
mov
out
and
xor
and
lcall
in
jnp
push
pusha
adc
fucomip
xlat
and
and
out
mov
push
jl
setge
add
in
jecxz
jbe
cmp
fdivs
in
xor
or
test
adc
test
pop
xchg
ffree
cmp
lea
fs
pop
popa
xchg
or
cltd
mulb
jo
add
out
nop
jno
repnz
adc
push
ret
cmp
std
clc
pop
repnz
sbb
sub
xor
and
in
idiv
nop
outsl
imul
int
in
dec
imul
insl
ss
inc
fxch
sbb
int
sub
int3
or
lret
pushf
imul
jne
sub
jb
bt
mov
sti
inc
jp
scas
mov
fdivrl
adc
fsubl
clc
or
sub
fmulp
jnp
push
xchg
jle
movsb
adc
mov
inc
adc
loop
inc
sbb
test
mov
repz
mov
aaa
insb
jno
das
lods
or
jmp
sub
or
xchg
sahf
jb
add
adc
xor
jge
je
xor
testb
jae
insb
fwait
mov
inc
decl
sub
cmp
rcl
shl
je
lea
push
jg
inc
iret
xchg
add
fldenv
dec
sub
pop
out
or
in
mov
jae
shrb
sub
popf
mov
pop
mov
xor
xlat
mov
xlat
lods
pop
sbbl
push
pop
push
adc
adc
dec
pop
lret
ffreep
mov
aaa
insb
add
sbb
aam
movsb
das
xor
mov
aaa
lods
pop
xchg
pop
inc
cld
or
idiv
pop
cltd
imul
xchg
add
adc
xchg
xor
aaa
scas
sti
mov
inc
int3
fs
aaa
cmp
dec
jp
inc
or
inc
test
lock
shll
jnp
ss
incb
xchg
push
and
jbe
mov
xchg
adc
sbb
inc
outsl
xchg
fcmovnu
dec
les
ret
subb
lahf
jbe
imul
std
jno
out
scas
cld
arpl
add
xchg
test
or
push
add
aam
pop
push
dec
call
loop
ret
xor
hlt
in
ret
xchg
push
arpl
repnz
jle
jns
lods
into
andl
les
mov
dec
test
fwait
pop
xchg
sub
sub
xchg
pushf
ficompl
in
lds
jmp
adc
dec
notl
stos
sub
jnp
jl
pop
cmp
dec
cmp
jecxz
push
in
push
mov
mov
arpl
jl
mov
movsl
int
pop
shrb
imulb
xchg
cmp
xchg
push
addr16
imulb
pop
jno
aaa
int
mov
add
cmpsb
mov
jb
dec
scas
imul
or
ss
or
fstpl
xor
fadd
inc
dec
cmp
mov
add
cmp
popa
add
lcall
lret
gs
mov
adc
scas
cmp
aam
pop
fsubrl
adc
xor
push
mov
das
insb
xor
xchg
mov
repnz
push
orb
add
les
ror
lds
xchg
roll
adc
repz
push
pop
mov
jb
shrb
psraw
xor
out
lret
imul
mov
mov
dec
jp
subb
lahf
xlat
mov
sbb
decb
lret
mov
test
pop
pavgb
sbb
divl
pushf
mov
xor
sbb
int3
add
push
inc
sarl
test
sbb
mov
mov
and
jmp
lret
icebp
sti
imul
aaa
and
popa
int3
ret
push
mov
jno
inc
stos
mul
das
sar
popf
mov
sub
fwait
push
mov
call
adc
lods
and
xor
stc
inc
mov
xor
inc
sub
test
sbb
push
dec
dec
rdpmc
pmulhw
mov
pop
push
data16
or
jmp
cwtl
xor
jg
sarb
xchg
mov
fdivs
lods
mov
push
xchg
or
les
jbe
add
movsl
cmp
iret
js
mov
addr16
inc
rcll
idivl
stc
jno
fwait
adc
and
mov
gs
mov
fcmovu
test
mov
shlb
sbb
sub
test
loopne
es
inc
sub
or
loopne
pop
test
les
push
jbe
pop
xchg
outsb
rcll
mov
mov
dec
fisttpl
ret
addr16
pop
dec
push
pop
mov
mov
cmpsl
and
pop
mov
sbbb
xor
pusha
addr16
jnp
loopne
mov
iret
adc
push
jne
sub
sub
adc
jo
push
push
in
shrl
dec
lods
dec
shll
jnp
jb
adc
lds
int
inc
push
push
in
jmp
mov
dec
das
adc
lcall
jo
adc
cmpb
sub
lret
and
add
dec
pop
test
je
sub
and
xchg
loope
repnz
sbb
push
iret
sbb
roll
mov
adc
adc
xchg
add
mov
stc
insl
stc
je
push
dec
outsl
dec
sbb
dec
sub
xor
scas
fsubs
sub
inc
xor
insl
fdivr
mov
jmp
adc
stos
lret
aam
pop
xchg
test
test
cli
mov
xor
pusha
xchg
mov
lods
and
loopne
mov
sbb
jnp
mov
mov
jg
out
cli
lret
dec
loop
shll
xor
inc
in
dec
inc
push
push
imul
jbe
aad
xor
call
mov
adc
sbbl
orb
outsb
xchg
mov
xor
insl
jbe
ss
mov
xchg
cmp
aam
mov
fcoms
lret
adc
fildl
loop
xchg
std
out
fisttps
cmp
xchg
pop
dec
into
es
mov
and
bnd
aas
lods
mov
imul
repz
add
dec
push
xor
je
and
cmp
push
mov
out
mov
push
rcrb
ja
push
in
fdivs
mov
dec
mov
push
in
adc
mov
dec
xor
mov
shrl
sbb
daa
inc
hlt
mov
sbb
dec
mov
mov
and
ret
xor
repnz
jp
das
gs
xchg
and
testb
inc
nop
int3
adc
loope
sarb
xchg
pop
stos
push
gs
out
fs
test
pushf
int3
std
inc
outsl
lods
ja
popf
push
addr16
insb
adc
test
mov
mov
sub
sub
insb
movsb
ss
mov
test
cmc
mov
mov
pushf
incb
pop
loope
inc
jb
scas
jns
xchg
add
out
xor
inc
dec
mov
lods
adc
inc
out
and
cwtl
pop
or
and
sbb
dec
inc
mov
sub
jno,pn
mov
mov
hlt
xor
pop
cmp
or
cmpsb
fldenv
mov
ret
scas
pop
sub
dec
or
sub
lods
inc
fldt
subb
out
jnp
js
cs
pop
push
stc
fs
cmpsl
push
jbe
out
clc
movsb
cld
jmp
ret
push
stos
pop
mov
das
pop
lea
xor
movsb
mov
imul
loop
push
insl
sahf
mov
jns
js
inc
ja
cmpl
imul
fsubl
xchg
shlb
mov
push
out
int
xor
xchg
jmp
clc
imul
jmp
add
lret
leave
pop
xchg
rclb
rclb
xchg
and
push
mov
sti
les
add
call
sti
add
mov
stos
adcb
mov
ret
insl
pop
xchg
mov
jno
cmp
pusha
lret
or
fisubrl
push
pop
or
fs
imul
jmp
sub
fiaddl
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
mov
or
fcomps
iret
jns
ljmp
xor
gs
icebp
ss
xchg
lret
xchg
leave
pop
inc
xchg
cmp
fstps
xlat
addr16
ret
repnz
xor
inc
je
pusha
hlt
cmp
les
sbb
test
dec
lds
inc
lcall
lods
jg
dec
aas
lock
or
movsb
out
lds
clc
add
push
mov
test
dec
popf
fdivrl
push
add
mov
xchg
jge
or
adc
xchg
dec
mov
mov
cwtl
aaa
mov
cs
es
hlt
add
lock
ret
clc
sbb
push
int3
sbb
adc
rcl
fs
pusha
push
ficoms
jge
sbb
mov
xor
inc
mov
outsb
aas
lds
sub
xor
jo
xor
jg
sub
or
cmp
dec
pop
pushf
loope
repz
insl
clc
popa
mov
test
sub
fwait
xchg
test
insl
xor
add
lods
in
sub
mov
outsb
mov
scas
cmp
pop
ja
rcll
inc
pushf
jo
push
xchg
in
or
or
andl
leave
and
sahf
stos
xor
ljmp
adc
cmp
adc
xor
push
in
mov
mov
mov
rorb
pop
pusha
loope
mov
jb
cld
test
pop
mov
rclb
inc
xor
mov
adc
fstps
sub
add
sbb
mov
sbb
xlat
scas
lret
lods
inc
es
jne
cmp
loope
or
divb
movsb
fmuls
out
mov
hlt
ss
repnz
sub
inc
cmp
repz
orb
daa
and
out
lea
nop
or
or
xorl
lea
fsubrl
cmc
xchg
enter
push
in
xor
adc
xchg
cmc
mov
pop
int3
icebp
cld
add
pop
lret
push
inc
test
dec
jne
jmp
inc
cmp
fnsave
mov
push
es
es
pop
mov
rorb
subb
pop
lods
sahf
lea
idivl
mov
push
cmp
test
jg
dec
repz
out
xchg
out
pusha
jbe
mov
adc
add
adc
and
mov
adc
je
dec
call
outsl
addr16
gs
imul
sub
xorl
cmp
mov
jae
hlt
call
jno
repz
push
push
mov
xor
test
sbb
gs
lahf
xor
leave
mov
add
rorb
push
adc
cli
dec
imul
and
cmp
out
adc
cmp
push
pop
mov
dec
jecxz
inc
push
pop
popf
and
fstpt
sbb
adc
and
xor
xchg
mov
pusha
aaa
dec
data16
adc
popa
js
shlb
add
dec
ret
push
mov
mov
sub
repnz
jb
adc
pop
sub
sub
sahf
cmp
aam
dec
mov
inc
dec
add
mov
sub
or
jae
in
jp
push
outsb
idiv
sbb
das
jg
mov
inc
pop
xor
inc
dec
repz
fs
mov
lahf
shll
lds
mov
stos
pop
mov
addr16
pop
pop
mov
shrb
fucomp
loop
dec
sub
adc
mov
pop
push
mov
sbb
dec
mov
negb
push
mov
sbb
xor
dec
push
adc
cmp
sub
cmp
push
loope
adc
lods
daa
inc
sub
out
and
hlt
sbb
add
cmp
push
sbb
icebp
add
out
pop
orb
push
pop
mov
or
clc
xor
sub
repnz
jo
lock
cmp
and
cld
cmp
mov
and
and
fdiv
push
jns
enter
push
pop
and
out
ret
lods
or
loop
loope
add
mov
mov
jp
mov
or
lock
stos
push
inc
inc
out
xor
dec
pushf
xchg
lea
aam
xchg
sub
push
fbld
inc
in
fdiv
ficoms
push
add
sub
movsb
jle
daa
jl
cmp
pop
mov
outsb
sub
ljmp
pop
shrb
pop
mov
adcb
add
cmp
cli
push
jge
stos
stos
jb
push
ret
mov
or
imul
mov
push
imul
xchg
pop
movsb
dec
dec
adc
adc
cli
sbb
add
jb
pop
stos
lock
icebp
sub
sub
pusha
in
lcall
rcrl
cmp
cltd
xorb
mov
jmp
jge
aaa
or
mov
shl
pop
sub
ss
push
nop
cmp
xor
int3
sub
mov
fcoms
jmp
push
repnz
push
js
add
nop
push
adc
sub
ja
dec
aas
test
push
cs
dec
mov
fmulp
jb
mov
cmp
cs
xor
xor
and
loope
jp
or
out
inc
mov
.byte
