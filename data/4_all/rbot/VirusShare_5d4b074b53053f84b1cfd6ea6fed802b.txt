shl
dec
popf
mov
repz
daa
push
cwtl
rcrl
pop
loop
fldz
mov
pause
stos
xor
add
arpl
pushf
bound
pop
push
in
test
mov
adc
push
int3
inc
mov
popf
fcom
divb
sbb
stos
stc
outsl
loopne
insb
stc
cmp
andb
addb
in
add
sub
outsl
mov
inc
mov
movsl
adc
jnp
inc
inc
shll
dec
push
add
fmul
ficoml
fstpl
jp
cmp
dec
or
pusha
mov
or
rcll
add
filds
cmp
mov
pop
dec
vmovaps
js
mov
fisttps
leave
cmp
xchg
aaa
ss
xchg
insb
out
fldenv
pusha
cli
ds
data16
jnp
aad
ret
shlb
pop
lcall
inc
test
gs
imul
dec
das
fmul
in
sub
xor
fwait
push
xchg
push
insl
cmpsb
sahf
insb
push
into
pusha
xchg
iret
push
and
lret
sti
sub
fbstp
adc
sub
inc
push
xchg
jmp
push
mov
sahf
pop
fsubrl
in
fistpll
cmpsl
xor
loopne
fisubl
mov
add
pop
sahf
or
loop
aam
cmp
adc
push
pusha
shll
pushf
pop
inc
stos
mov
xor
fidivrs
test
test
push
cwtl
sbb
loope
leave
sub
or
xchg
mov
insb
jge
cld
fidivs
push
jmp
sub
outsl
inc
popa
std
movsl
imul
stos
adc
iret
imull
ret
js
test
scas
cltd
rcll
and
mov
lret
sti
rcl
xchg
dec
xor
ja
gs
mull
adc
fstps
aas
inc
and
stos
loopne
ss
cmp
enter
mov
mov
insl
imull
out
mov
stos
cwtl
and
lea
mov
sub
mov
es
test
xor
jo
cmp
into
cmpsl
sbb
aad
cwtl
xchg
stc
xchg
xlat
icebp
inc
int3
popf
inc
lea
fmull
xor
jne
xlat
bound
call
push
adc
push
mov
dec
out
movsl
insl
les
inc
mov
mov
pop
shll
and
ja
xchg
mov
sub
cmp
enter
fisubrs
out
push
or
add
or
mov
in
jle
cltd
in
mov
mov
fcmovnbe
out
bnd
or
cmp
pop
dec
loopne
mov
pop
repz
test
leave
scas
scas
add
sahf
mov
push
jnp
push
lds
pop
pop
add
inc
push
ret
jno
out
jo
mov
mov
push
in
lods
cmc
dec
repz
imul
cmpsb
cmc
pusha
jb
aas
aaa
adc
das
sub
pop
add
daa
xchg
sbb
aad
jnp
fldt
shll
pop
or
xor
loop
jg
sub
adc
gs
es
aad
popf
out
pop
pop
cli
pusha
js
inc
cmp
inc
sbbl
xchg
sub
jecxz
popa
push
pop
cmpsb
dec
or
ljmp
add
sbb
aaa
lcall
jecxz
xchg
rorb
pop
rorb
mov
mov
pushf
push
dec
inc
sbb
nop
movl
inc
insl
sbb
outsb
mov
mov
xchg
sub
out
sbb
jle
xor
cs
mov
or
and
cmp
test
lea
mov
xchg
jmp
sbb
mov
cs
std
adc
sub
cmp
mov
xor
out
sahf
or
sbb
xor
rorl
jno
ror
fstl
fldcw
fsubrl
shr
mov
mov
xchg
cmp
outsl
and
aas
mov
hlt
and
addb
xchg
clc
test
scas
xchg
xor
sarb
mov
xor
test
mov
mov
inc
mov
push
mov
mov
pop
mov
lods
call
pop
insl
neg
dec
lods
add
lcall
sub
clc
insl
mov
testb
daa
in
cld
push
and
mov
inc
std
test
and
scas
shrl
cmp
and
lret
inc
sub
push
cmp
adc
imul
aaa
popa
pushl
hlt
xchg
cmpsb
mov
push
aas
mov
pop
js
enter
sbb
dec
or
cmp
jmp
mov
mov
mov
adc
rol
hlt
lods
fisttpl
js
adc
add
in
aad
push
lock
shrb
sbb
or
inc
add
rcr
js
dec
in
pop
loop
sub
pop
das
adc
leave
test
pop
sti
pop
filds
aas
mov
fst
push
or
dec
xor
psrad
incb
out
mov
adc
or
lret
pop
mov
sub
aad
cld
fnsave
sub
adc
das
adc
gs
fildl
lea
pop
sub
mov
int
jg
and
mov
imul
into
push
inc
aas
jecxz
xchg
xchg
cmp
call
ja
adc
aas
xchg
sbb
out
cmp
pop
dec
es
data16
std
fadds
sub
ror
sbb
mulb
jmp
arpl
lret
lret
fs
movsb
push
pop
mov
jnp
cmp
bound
mov
aad
lahf
popa
imul
rol
xchg
add
push
jne
inc
jbe
in
lret
cmp
in
xchg
cltd
add
rolb
inc
imul
in
dec
inc
je
and
insb
sbb
jne
idivb
pusha
dec
cltd
push
push
lock
test
lds
add
shlb
aad
sarl
push
pop
push
adc
imul
cmc
add
loop
nop
adc
pop
xchg
jp
lock
dec
not
dec
imul
rcll
sbb
push
enter
mov
js
push
jge
sub
pop
push
push
pop
cmp
je
cmp
jne
int3
or
add
loop
pop
push
dec
pop
or
cmp
rol
cmc
clc
cld
pusha
jb
or
cld
rol
nop
push
test
pop
push
push
pop
cmp
je
cmp
jne
int3
or
nop
js
xor
push
pop
jp
nop
loop
pop
push
push
push
mov
pop
pop
pop
shr
jo
shr
push
pop
push
push
pop
cmp
je
cmp
jne
int3
push
mov
pop
push
sub
pop
or
push
pop
push
push
dec
pop
pop
jg
sub
cmc
loop
pop
push
push
pop
cmp
je
cmp
jne
int3
push
push
test
pop
pop
nop
and
clc
loop
pop
cmp
mov
xchg
push
push
pop
cmp
je
cmp
jne
int3
lea
push
cltd
pop
loop
pop
mov
push
push
pop
cmp
je
cmp
jne
int3
shl
rol
push
push
add
pop
pop
push
pop
loop
pop
jge
push
mov
pop
and
cmc
ror
rol
push
push
pop
cmp
je
cmp
jne
int3
push
mov
pop
and
cmc
push
mov
pop
nop
fnop
xchg
loop
pop
sub
push
push
add
pop
pop
push
xor
pop
xchg
jmp
jmp
call
push
call
jae
or
mov
sub
jmp
or
push
dec
clc
jle
jecxz
std
mov
push
negl
lds
jl
xchg
mov
mov
inc
inc
inc
inc
push
push
pop
cmp
je
cmp
jne
int3
and
inc
dec
loop
pop
cmp
test
push
add
pop
cmc
jno
jno
jle
sub
sub
shl
jbe
push
shl
pop
mov
xchg
push
movzbl
jo
push
push
mov
pop
pop
fnop
add
xor
jnp
add
jo
je
push
push
pop
pop
and
push
dec
pop
rol
clc
add
push
jp
push
or
pop
pop
push
ja
push
mov
pop
pop
push
push
xor
pop
pop
nop
clc
loop
pop
cld
push
add
push
pop
pop
push
call
pop
mov
dec
push
pusha
shlb
mov
fs
and
test
xchg
inc
outsl
fisubs
inc
test
lods
jg
pop
pop
pop
xor
add
loop
jecxz
repnz
mov
and
pop
mov
add
andb
cmpsl
mov
and
jno
or
hlt
jge
sub
fnsave
mov
insb
mov
sub
call
and
mov
mov
insb
dec
leave
xchg
mov
xlat
cmpsl
pop
mov
stos
scas
mov
xchg
mov
in
cmp
cmp
aam
push
into
mov
pop
jle
xor
sub
ror
and
lea
clc
testl
je
std
cld
ja
sub
cld
shl
stc
add
loop
jecxz
mov
pop
call
leave
clc
loop
pop
js
add
and
jle
jno
shl
add
add
nop
push
mov
push
xor
pop
pop
push
movzbl
or
clc
je
push
jnp
or
pop
js
sub
ja
push
push
rol
pop
pop
push
push
push
mov
pop
pop
pop
push
jl
sub
pop
push
cmp
pop
add
nop
jp
push
push
shr
pop
pop
rol
je
jle
add
and
nop
fnop
loop
pop
add
rol
not
not
cld
mov
inc
inc
inc
inc
push
call
fs
adc
addb
inc
movsl
dec
das
pop
sub
js
dec
add
push
jge
xor
mov
test
lds
lret
test
js
sbb
pop
xchg
test
xchg
sub
or
push
out
imul
jge
fsubp
inc
sbb
into
lret
inc
or
aad
xor
arpl
xchg
mov
xor
xchg
adc
mov
xor
inc
ja
lret
js
jne
pf2id
out
add
sub
stc
bound
mov
inc
iret
dec
xor
inc
dec
add
push
scas
fs
and
popw
or
cmpsb
movsb
dec
fwait
pop
dec
sbb
pusha
dec
jns
into
mov
adc
stos
flds
out
call
add
add
cmc
dec
jne
loop
jecxz
push
pop
fldenv
jbe
sarl
jl
or
aas
scas
pop
loop
jo
clc
pop
shrd
push
pop
or
lock
in
dec
pop
rcll
add
add
xlat
sbb
and
pop
aad
add
nop
loope
jns
imul
jecxz
imul
pop
lods
rolb
out
cwtl
addr16
or
inc
fcompl
out
push
mov
pushf
mov
repz
adc
and
inc
pop
push
sub
stos
mov
shl
push
dec
or
mov
adc
push
insl
fucompp
xchg
add
stc
mov
mov
repz
clc
pop
add
dec
jge
es
and
out
xchg
stos
loopne
push
ss
fwait
push
fisttpl
push
adc
outsl
faddl
loop
leave
sbb
pushf
lahf
aaa
dec
cli
adc
psubb
sub
add
push
mov
xchg
mov
les
ljmp
shlb
movsl
jge
into
dec
pop
jo
pop
jecxz
hlt
mov
pop
push
cld
shl
shlb
and
jge
jmp
push
call
aaa
insb
inc
and
mov
pop
insb
pop
ret
or
add
mov
pop
test
xor
sub
or
jp
or
popf
in
sub
out
adc
or
daa
das
sbb
add
flds
mov
xchg
mov
xor
and
sbb
lock
push
loop
test
sub
out
pop
sub
test
mov
movsl
loope
push
sub
and
mov
xlat
outsb
imul
xor
leave
pop
gs
rcrl
push
or
adc
test
pusha
pop
insl
lds
sarb
popa
sub
jmp
shll
push
and
adc
jnp
push
test
push
sub
nop
xor
and
mov
mov
imul
stc
sbb
pop
lods
mov
arpl
loopne
push
sbbb
cmp
loop
xlat
mov
jbe
dec
and
and
aam
cmp
aad
int3
imul
rcrb
mov
xchg
push
rclb
push
sbb
popa
cwtl
in
pop
xchg
dec
loop
mov
dec
out
stos
mul
cmp
int3
rorb
mov
cwtl
dec
insb
test
jbe
dec
xor
adc
adc
das
pop
push
mov
in
add
aaa
mov
dec
btr
push
rcr
mov
lods
lds
notb
xor
sbb
jp
scas
xchg
pop
inc
ja
sahf
popa
inc
gs
inc
inc
dec
mov
xchg
sahf
and
test
arpl
xor
xchg
je
shl
add
cmc
inc
addr16
sub
mov
mov
popa
repnz
ds
shrb
mov
shll
ja
aam
mov
stc
sub
push
shll
mov
and
and
jnp
inc
adc
adc
inc
fisttps
insl
adc
inc
jno
fstps
mov
jge
adc
fsts
lods
imul
and
mov
pop
in
es
mov
xchg
enter
loop
popa
mov
pop
mov
clc
scas
adc
enter
sahf
push
orl
xchg
dec
cmc
js
xor
sub
enter
add
and
data16
sarl
mov
es
andl
stos
jmp
mov
mov
jmp
mov
cmp
leave
aad
aad
jmp
mov
fstp
cmpsb
sti
es
cwtl
add
add
xor
dec
pop
jecxz
add
mov
inc
mov
into
ja
or
jl
xchg
shlb
cwtl
push
jp
div
xor
dec
enter
add
dec
jns
repnz
pusha
and
je
leave
addb
push
push
jb
xchg
push
es
push
pop
adc
mov
sbb
orb
pushf
adc
int
inc
lcall
popa
add
or
mov
arpl
mov
and
and
push
xor
push
icebp
mov
cwtl
lcall
pusha
mov
sbb
cmpb
sub
aas
test
sub
push
xor
push
lods
sub
sbb
arpl
inc
cmp
lds
movsb
dec
xor
orl
ja
inc
test
xlat
push
xlat
stos
ss
xchg
pop
test
lret
ljmp
lret
ret
fwait
cmp
sbb
sbb
jnp
dec
orl
pop
mov
add
mov
mov
pop
mov
ret
out
mov
mov
sti
test
ficompl
mov
or
mov
scas
or
xor
jmp
cmp
cmc
in
ud0
xchg
lret
jnp
dec
sub
mov
fldcw
adc
mov
or
cltd
aas
mov
and
xor
leave
idivl
addl
mov
cmp
sbb
cmp
push
into
fs
stos
test
cmp
inc
inc
mov
push
test
push
mov
inc
inc
mov
pop
and
bound
push
scas
aaa
mov
scas
push
mov
jnp
leave
outsb
scas
stos
test
dec
ret
jle
add
pop
iret
jne
pop
fwait
sub
lcall
mov
adc
jmp
lret
cmp
vmovups
daa
aam
push
inc
mov
mov
mov
or
jl
mov
lret
or
or
lcall
cmp
fsts
or
stc
xchg
imul
mov
inc
sub
xor
mov
dec
repnz
dec
stos
fwait
rcrl
out
fisttpll
and
lods
cmp
sbb
mov
push
ret
push
and
dec
cmp
xchg
xchg
outsl
sub
hlt
outsl
cs
stc
and
cld
les
daa
clc
and
add
xor
clc
pop
add
ret
adc
je
adc
insb
mov
adc
dec
sub
fnstcw
mov
jnp
sahf
lret
ds
mov
je
jle
xor
mov
dec
enter
and
adc
sahf
sti
pop
xor
pushf
push
cmp
les
cld
jns
jnp
jbe
dec
rorl
roll
xchg
xchg
pusha
push
inc
rorb
inc
fbld
sub
add
jle
in
stc
pop
mov
fisubs
mov
sarb
imul
add
add
dec
gs
inc
jl
dec
lea
lock
out
repnz
shlb
xlat
lret
pusha
adc
sub
or
jns
rcr
cmp
rcll
push
xor
dec
les
add
lds
add
mov
lret
xor
sbb
cs
dec
cmpsb
add
addr16
notl
in
pop
mov
or
sbb
test
pop
fnstenv
xchg
ret
jne
test
inc
icebp
ss
xor
fs
fdivp
cmp
adcb
fldl
cmp
stos
int3
icebp
mov
and
fs
adc
pushf
or
or
jle
lret
jmp
dec
and
pusha
incl
xchg
add
out
add
adc
pusha
adc
push
mov
imul
je
lahf
fcmovb
out
mov
cmp
push
jae
jae
adc
call
scas
ja
ret
mov
in
add
and
pop
jp
sub
mov
mov
mov
xchg
push
fidivrl
lods
fstpl
or
fdivrl
hlt
adc
aas
pop
jle
inc
nop
pushl
mov
test
test
inc
mov
fimuls
mov
and
or
loopne
jo
dec
int3
repnz
lret
pop
inc
push
mov
sbb
in
popf
test
aad
push
xor
or
movsl
les
mov
mov
daa
push
in
push
or
imul
addr16
repnz
fisttpll
mov
push
push
cs
out
pusha
jno
push
mov
scas
sbb
mov
faddl
push
xchg
aas
jecxz
add
sbb
lcall
pop
or
orb
xor
dec
lcall
sub
mov
out
push
psrlq
into
jb
jo
add
or
loop
mov
mov
lods
and
outsb
sarl
lods
mov
fs
clc
mov
or
mov
dec
aam
fcoml
pop
fstps
popa
aam
pop
push
pushf
clc
push
dec
pop
repnz
dec
jne
and
pop
popf
jl
adc
adc
negl
jno
xchg
fidivl
xchg
or
outsb
lods
cmp
imul
lods
add
icebp
cmp
jae
mov
xor
hlt
cltd
push
fucomp
dec
mov
or
add
pop
add
xor
xor
xchg
int
ret
mov
xchg
fs
mov
in
jmp
adc
inc
lock
push
jno
pop
adc
or
pop
jle
dec
out
popa
shrl
mov
sti
fwait
xchg
sub
mov
jp
add
stos
icebp
jge
es
cld
aam
xchg
lods
gs
lcall
cmp
int3
sub
and
dec
test
sub
shrl
lea
sub
shrl
fs
push
xchg
leave
sahf
mov
out
or
add
cmpsl
mov
ja
dec
sub
and
shlb
js
fbld
jmp
das
mov
dec
ss
imul
lahf
mov
enter
inc
shrl
xorb
rorb
stos
inc
mov
or
mov
xlat
mov
mov
xchg
mov
notb
pop
dec
pop
xor
lret
jl
enter
rclb
inc
push
push
andb
mov
das
sub
std
call
mov
cmc
and
ds
insb
jne
push
les
pusha
mov
dec
imul
inc
mov
ret
mov
stos
push
cli
xor
and
mov
inc
or
xlat
cmp
mov
pop
scas
ss
nop
dec
mov
std
ret
mov
imul
fidivrl
popf
test
ficompl
popa
add
popf
add
sub
jge
jp
jnp
pop
decb
sub
sub
add
pop
iret
pop
push
xchg
icebp
sub
push
push
int
sub
ja
into
push
stos
xorl
cmpl
in
imul
es
imul
dec
mov
mov
push
aas
mov
adcb
imul
call
fs
xlat
mov
sub
cltd
xchg
fcmovb
cmp
lcall
fisttpl
dec
fmull
aaa
dec
daa
aaa
fcmovb
pusha
lret
push
cmp
popf
shl
pop
jge
pop
push
icebp
jge
sti
js
shrb
push
push
imul
in
mov
adcb
in
dec
stos
orl
cmp
int
inc
pop
adc
inc
out
mov
cmp
sahf
ljmp
sbb
in
jne
pop
inc
inc
sbb
pop
and
gs
fdivl
aam
cmp
mov
in
and
xlat
jb
or
push
inc
rclb
push
add
jp
mov
mov
mov
in
fisubrs
and
pusha
mov
shlb
or
in
sarl
lds
sbb
lods
es
dec
ret
ficompl
mov
cmc
jmp
mov
cltd
bound
mov
out
frstor
pop
and
cmpsb
sbb
push
popa
fisubrs
push
daa
and
push
pusha
orb
inc
lds
std
stc
cld
sub
pushf
inc
enter
inc
xor
jno
xor
jle
pop
mov
sbb
ret
fisubrs
popf
push
int
shll
mov
mov
xchg
push
mov
lret
sbb
mov
mov
into
mov
push
mov
inc
into
scas
pushf
and
out
push
out
adc
or
sahf
loopne
adc
dec
xchg
jne
pop
imul
bnd
ja
or
cli
and
sub
jle
cmp
push
push
add
imul
jno
add
das
les
cs
mov
jle
lds
lret
mov
cmp
lahf
xor
sub
xchg
outsl
sub
or
mov
jmp
add
push
imul
push
pop
lret
pop
jle
stos
push
fistpl
es
out
fsubs
icebp
adc
or
dec
mov
dec
xlat
loope
xchg
rolb
xor
mov
mov
ss
int3
call
adcb
test
fistpll
xor
imul
ljmp
hlt
dec
pop
add
bound
sbb
and
imul
leave
pop
popl
mov
clc
jge
push
daa
pop
mov
ds
jbe
fs
inc
rcrl
or
jle
scas
fcomp
addl
and
or
out
jbe
insl
xchg
mov
sub
mov
xor
aas
loope
pop
dec
cmpsl
ficomps
pusha
adc
pop
and
sbb
pushf
sbb
in
or
lret
dec
sahf
add
mov
mov
adc
push
lds
mov
cs
insb
aaa
sub
adc
xchg
scas
std
roll
pop
inc
rcll
inc
push
or
aam
fcomp
shll
std
mov
jmp
mov
aam
clc
fwait
jmp
jbe
je
mov
mov
push
mov
add
xorb
xchg
pop
push
xlat
mov
jl
fnop
mov
sti
cmp
push
fdivs
in
and
pop
pop
repz
lods
in
push
jno
lds
movsb
push
xchg
jae
nop
stos
inc
jae
xor
adc
repz
pop
fstpt
in
leave
and
sub
lahf
adc
adc
sbb
mov
pop
dec
lods
insb
or
adc
jnp
push
push
aas
dec
mov
aaa
cld
arpl
xchg
iret
out
cli
fcompl
gs
into
sub
inc
adc
lret
dec
pop
pop
dec
inc
lcall
dec
mov
cli
arpl
cmp
jns
fwait
push
mov
addb
ffreep
loopne
xor
movl
sti
stos
aad
sub
lock
int
xor
nop
orb
inc
lcall
pushf
test
sub
and
ss
pusha
loope
out
outsl
popf
pop
cmpsl
sbb
adc
sbb
xchg
cmp
sbbb
int
dec
push
add
push
js
movsb
mov
inc
jle
mov
add
xchg
cmp
inc
movsl
xchg
sbb
pop
addr16
mov
jmp
adc
xor
movsl
dec
cld
or
sub
mov
jb
enter
fpatan
push
leave
outsl
in
jle
cmpsb
xor
jns
jne
mov
popa
stos
xchg
add
jbe
cmp
adc
ljmp
rcrl
std
sti
bound
jns
rcl
mov
lock
jmp
sbb
lods
imul
pop
push
cmpsl
stos
stc
cs
pop
ss
mov
push
mov
pop
fidivs
mov
movsb
hlt
pop
jns
lds
cld
mov
push
or
sbb
insl
push
shl
aam
imul
roll
ret
scas
sar
jge
gs
les
jno
clc
push
dec
cmp
loop
ljmp
xor
and
ss
loopne
sub
jae
je
xchg
imulb
and
gs
scas
and
push
cvttps2pi
std
jmp
leave
lock
sub
mov
arpl
into
in
dec
pushf
iret
adc
imul
clc
or
negl
insb
outsb
ss
xor
xor
test
fisttpll
dec
pop
loop
andl
adc
arpl
jle
xchg
clc
mov
or
add
sbb
xor
lahf
sbb
rorl
ljmp
pmulhw
dec
dec
int3
push
roll
enter
loopne
pop
or
mov
pop
xchg
jge
pop
subb
addr16
mov
sub
xchg
xor
push
sbb
sbbb
rorb
mov
jecxz
jo
adc
jmp
rorl
push
loope
inc
sbb
stos
sub
jo
mov
test
xchg
not
cmc
frstor
fidivs
jo
jecxz
xchg
mov
insb
sub
push
dec
jo
add
push
push
rorl
inc
flds
dec
rorb
in
push
push
cmp
inc
pusha
movsl
popf
push
push
fimuls
mov
jne
sbb
fistl
and
mov
jl
jp
jns
or
adc
mov
add
test
mov
outsb
pop
rcl
mulb
push
lea
jmp
imul
enter
shlb
mov
mov
push
jno
fdivrs
mov
jbe
pop
in
inc
nop
pop
icebp
pop
push
and
bound
sahf
push
jae
dec
pop
iret
das
fwait
xchg
jl
sub
or
mov
leave
inc
sti
mov
mov
rcr
xchg
add
mov
sub
sbb
sahf
xchg
mov
cld
mov
push
pop
icebp
mov
and
mov
jp
ret
outsl
jae
inc
scas
stos
pop
fcmovbe
icebp
inc
lret
shl
push
mov
inc
add
cld
sub
cmc
and
mov
xlat
mov
push
xchg
mov
xor
mov
movsl
mov
mov
mov
movsb
mov
fs
xor
into
sbb
dec
cmpsb
xor
mov
sbb
jae
inc
cli
jge
adc
scas
mov
icebp
fwait
pop
jge
cmpsl
xchg
pop
ja
cld
mov
insb
imul
popa
inc
int
pop
idivb
fwait
xor
int3
inc
add
cmp
loopne
push
andl
cs
mov
scas
out
test
xchg
adc
mov
frstor
fsubr
xchg
lret
ret
int3
mov
loopne
aam
mov
jge
inc
insb
jbe
add
repz
sarl
pop
into
push
stos
imul
cmp
mov
leave
xor
inc
pop
jle
mov
nop
jns
xchg
filds
ficoml
and
mov
insl
cmp
scas
adc
and
js
inc
or
xor
dec
ja
cmp
cmp
andl
in
push
sub
pop
pusha
pop
inc
mov
pusha
aad
stc
cmpl
mov
xor
fstl
xchg
adc
mov
and
mov
sbb
push
mov
mov
mov
ja
jbe
insl
call
insl
movsl
lock
and
xchg
lret
jp
xchg
push
xor
dec
pop
lods
pop
mov
dec
or
clc
push
ds
lock
inc
insb
into
jo
cmp
xchg
dec
rorl
push
mov
jnp
outsl
dec
xchg
mov
xor
inc
add
rcll
std
push
sub
xchg
add
pop
jne
jmp
lret
inc
out
sub
or
xor
cld
mov
stos
es
lret
lahf
xor
push
jl
lods
int
testb
xor
or
int
adc
jne
fsubs
jae
lods
into
pop
push
sahf
cmp
stc
push
or
mov
push
and
xor
in
int3
int3
pop
jp
cwtl
sti
je
or
jo
ljmp
mov
rclb
in
jne
loopne
imull
pusha
lods
dec
mov
scas
idiv
or
cmpb
cli
nopw
cmp
pop
leave
out
insl
fwait
andl
pusha
lahf
or
enter
adc
test
mov
sub
push
insl
jl
stc
or
add
mov
xchg
stos
or
dec
lock
xor
pop
insb
testb
mov
fbld
in
je
popa
pushf
loope
inc
int3
pop
lds
and
test
jnp
call
inc
adc
inc
je
mov
jbe
dec
imul
ret
jo
and
ljmp
dec
lds
dec
cmp
xor
xchg
ret
mov
or
mov
add
jmp
repz
jne
xor
es
sub
jno
sbb
mov
dec
mov
icebp
or
cld
subb
pop
mov
rolb
cmpl
data16
dec
add
scas
pop
outsb
pop
outsl
pop
or
adc
pop
mov
movb
movsl
pop
mov
or
jns
and
loopne
inc
dec
movsl
aad
add
push
and
and
shrl
adc
inc
xchg
xchg
scas
cwtl
pushf
nop
pop
fisttpll
push
jp
and
loopne
out
xchg
cld
jb
popf
stos
sub
lahf
or
adc
or
stos
push
mov
mov
enter
ljmp
mov
add
and
jo
cmpsl
fs
lret
pop
out
cmp
fcompl
lods
testl
sbb
shrb
adc
cltd
aam
ret
je
lcall
or
dec
jnp
mov
leave
and
push
test
dec
in
inc
cltd
fucomi
xchg
cmp
subb
lret
mov
fcomp
out
in
push
les
push
add
fwait
outsb
call
adc
jne
repz
or
lds
ss
stc
orl
fimull
mov
dec
in
or
or
imul
mov
mov
cmp
out
jge
xor
insl
xor
gs
test
arpl
out
pop
fnstcw
pusha
pmaxub
adc
sbb
popa
mov
sbb
enter
xor
inc
or
xchg
adc
sbb
sti
in
in
hlt
mov
pop
mov
jecxz
mov
cmp
jge
or
mov
outsb
shrb
xor
lret
imul
mov
mov
and
mov
and
jae
and
aam
enter
xor
adc
rcr
add
ss
sti
insl
mov
fs
jnp
fucomi
addr16
fmull
sub
jnp
mov
subb
mov
sub
ret
out
shll
pop
movsb
sahf
loop
xchg
arpl
popa
cmpsl
add
sbb
pop
xor
adc
lea
sti
js
aam
inc
outsl
sbb
pop
mov
push
adc
jp
fucomip
add
bound
xor
stc
dec
imul
sub
sbb
xchg
insl
es
add
cmp
fstl
jno
rcr
test
mov
lods
insb
js
mov
nop
jb
cmp
dec
orb
push
lret
sbb
cmpsl
lock
je
shrl
bound
mov
xchg
xchg
outsb
cmp
and
add
rorb
notb
cmp
call
mov
pusha
xor
sub
dec
fisubs
int3
bswap
imul
gs
cli
shrb
xor
sub
dec
stc
jnp
inc
push
ficoms
add
mov
lds
cmp
in
xor
or
rolb
push
outsl
push
cmp
fdivrs
sbb
movsb
jae
jb
mov
lcall
add
dec
js
sbb
add
mov
jmp
in
mov
sbb
sub
pop
jb
sub
shld
or
cmp
jo
adc
rol
test
ja
pusha
pop
sub
popa
int
dec
jae
icebp
movsb
mov
scas
add
mov
or
mov
clc
clc
adc
in
ret
loop
push
sahf
mov
cli
repnz
pop
mov
test
roll
cmp
xor
les
out
js
inc
xor
iret
jbe
inc
cmp
cmpsb
int3
sub
stc
xchg
mov
mov
daa
mov
and
int3
repz
aaa
ja
xchg
sti
test
sub
sub
inc
pinsrw
int
push
sub
scas
cltd
cmp
inc
mov
lahf
imul
rcr
cmp
lret
xchg
jecxz
pop
cmpsb
scas
test
cmpl
lcall
fwait
dec
pop
outsl
imul
out
pusha
adcb
clc
insl
dec
or
cmp
mov
push
sti
fdivrs
pop
int
inc
iret
xor
sub
fwait
rol
jae
pop
repnz
lret
aam
lea
rol
inc
popa
cmp
dec
in
cmp
sub
in
pop
sbbl
out
andb
push
lea
jmp
sbb
shrl
lock
leave
clc
xor
cmpsb
lea
out
push
cmpsb
enter
jae
iret
frstor
call
lods
rolb
mov
imul
lahf
xor
xchg
test
ljmp
sarl
or
loopne
inc
push
sub
stos
mov
jle
sbb
dec
dec
jbe
or
mov
dec
daa
or
or
mov
outsl
sbb
inc
orb
fistpl
jb
stc
xor
out
jns
mov
jnp
pushl
cmp
jbe
stos
xchg
and
sahf
pop
test
iret
divl
fcomps
pop
mov
jo
cli
push
sahf
jbe
adc
or
outsb
cwtl
pop
inc
test
lret
adc
popf
lret
mov
or
loopne
cmc
jge
orl
mul
fisubs
movsb
data16
jo
outsl
cmpsl
mov
fimuls
test
adc
xchg
sub
pushf
or
push
pop
mov
cwtl
add
hlt
and
mov
xchg
int3
xor
js
ret
pop
pop
dec
sti
rcrl
jmp
gs
push
ljmp
push
xchg
xchg
outsl
and
mov
inc
cmp
sub
cltd
movsb
ret
sbbl
add
outsb
je
pop
xchg
daa
inc
out
jbe
push
fdivrs
mov
or
adc
fsubrl
nop
dec
pushf
add
outsb
in
clc
pop
inc
adc
cmpsl
repnz
mov
je
ficompl
mov
cmp
mov
imul
cltd
and
mov
or
lea
adc
pusha
dec
cmp
xchg
sbb
jg
or
mov
mov
adc
movsl
push
cmp
loopne
pop
or
lahf
mov
jge
sti
dec
cmp
mov
adc
sbb
ja
mov
pop
push
out
rolb
arpl
cmpsl
dec
xor
and
inc
loope
clc
inc
adc
ret
inc
sbb
addb
pop
lahf
xchg
idiv
testb
fldt
leave
jbe
insb
pusha
and
out
fucom
cmc
xchg
jne
jae
std
mov
mov
jne
xchg
push
imul
mov
cltd
or
mov
adc
push
outsb
push
loopne
dec
incb
in
mov
cmp
pop
mov
sti
ds
hlt
loopne
cmp
push
inc
in
out
mov
stc
cld
push
pop
daa
xchg
xor
pop
sahf
mov
add
out
inc
add
aad
cs
or
fsubp
jl
cmpsb
repnz
movsl
imul
inc
test
cltd
jbe
inc
ficomps
push
xchg
adc
adc
mov
mov
dec
ficomps
bound
xor
gs
adc
xchg
ds
icebp
xor
or
je
inc
sbb
repz
pop
and
imul
xchg
push
in
push
cltd
cmp
movsb
sahf
dec
fdivl
cmp
mov
cmp
scas
mov
movl
jae
fcoml
dec
aaa
inc
ljmp
inc
mov
clc
imul
inc
pushf
mov
xchg
insl
decb
rcl
mov
xor
or
adc
add
sbb
xor
out
push
mov
decb
stos
cmp
in
cmp
fsubl
and
mov
or
inc
das
mov
lea
outsb
cmp
mov
test
das
or
je
push
ret
mov
adc
jns
pop
ljmp
sbb
cmp
jne
adc
xchg
add
push
push
rorb
pop
sbb
push
pop
stos
test
pop
pop
sbb
or
xlat
icebp
or
xor
push
mov
sub
addb
push
fsts
push
dec
jmp
jecxz
aaa
and
pusha
adc
inc
sahf
adc
xor
lcall
jb
test
ljmp
lock
adc
in
and
dec
clc
into
mov
out
mov
call
xlat
in
leave
push
js
fisubs
cmpsb
clc
xchg
pop
hlt
loop
sub
into
xorb
fiaddl
sbbb
lahf
mov
push
js
mov
hlt
mov
add
test
movsb
fcomip
dec
dec
adc
jmp
push
xor
mov
fisubs
mov
adcb
addl
pop
mov
or
ret
adc
aas
aas
daa
mov
sbb
int
inc
cmp
jmp
test
int3
mov
jne
push
rolb
out
pop
loopne,pt
mov
addl
pop
shll
sbb
shll
dec
mov
iret
mov
mov
or
inc
mov
mov
cmpsl
inc
rcrl
cmp
mov
and
mov
lea
sahf
inc
jne
test
jno
and
and
das
jl
mov
lock
jmp
mov
inc
test
jne
aam
push
or
xchg
sub
xlat
lret
outsb
outsl
test
and
add
gs
daa
or
push
adc
bound
jnp
data16
jle
aad
incl
into
ret
sub
insl
loope
mov
insl
xchg
jge
pop
lds
out
aas
fsts
jnp
ljmp
int3
in
ljmp
sub
rclb
pusha
fldenv
stos
mov
movsl
dec
adc
jno
cmpsb
pop
and
mov
cmpsb
xchg
mov
inc
push
repz
push
in
subb
insl
shlb
push
jge
mov
inc
cltd
rcrl
dec
xchg
jnp
ja
sbb
adc
jne
rcrb
mov
into
inc
pop
mov
jecxz
fimull
enter
mov
dec
ffreep
loopne
jecxz
cld
add
clc
mov
mov
outsb
xchg
test
daa
mov
sub
dec
test
adc
mov
mov
cmp
stc
push
insb
mov
lret
mov
push
bound
mov
xchg
dec
and
pushf
cmpsl
push
cltd
pop
push
and
hlt
mov
pusha
pop
call
or
inc
loope
enter
hlt
fldenv
ret
sub
or
sbb
fimuls
arpl
sub
repnz
mov
fstpl
aam
jnp
aas
xchg
xchg
mov
je
pop
imul
jecxz
iret
int
sahf
mov
or
xor
sub
mov
pusha
fwait
mov
rcrb
fidivl
cwtl
push
mov
mov
lret
in
loop
jbe
mov
sahf
mov
mov
shrb
jge
andl
sub
in
mov
nop
add
jp
xchg
and
out
daa
mov
and
push
call
sub
std
ret
jge
sarl
or
cmp
ss
adc
mov
repz
fsubrl
dec
mov
imul
lds
iret
sbb
lods
ds
stc
repnz
les
sahf
mov
ja
out
jmp
adc
mov
bound
sbb
aaa
jmp
push
xchg
sub
sbb
pop
jbe
xorb
shlb
xchg
test
dec
and
xchg
and
push
push
xor
sbb
icebp
outsb
enter
into
mov
js
js
outsb
lds
repnz
sbb
xlat
jmp
dec
stos
lcall
andl
insb
subb
icebp
bound
xchg
fnstcw
aas
gs
mov
fisubrl
push
mov
jns
sub
dec
in
movb
mov
or
push
jne
inc
sbb
pop
mov
mov
loope
loopne
sub
cmp
inc
fcmovne
fiaddl
jg
cwtl
inc
jae
jg
adc
pop
movsb
cmp
outsl
mov
stos
add
bound
psubsb
add
test
jmp
mov
xor
loop
fnstsw
int3
jecxz
push
xchg
fistps
or
push
xchg
xchg
mov
bound
cmpsb
sub
or
mov
sub
pop
fwait
add
test
push
sbb
jb
pop
mov
iret
std
mov
movsb
mov
jg
mov
cmp
hlt
les
jnp
xchg
scas
add
and
pushf
jae
or
or
xchg
insl
stos
sti
popfw
mov
dec
push
arpl
fistps
pop
in
imul
je
xor
test
lret
sub
sbb
and
xor
mov
cmp
add
fimull
inc
mov
mov
ljmp
mov
je
xchg
or
bnd
push
subl
test
mov
inc
loopne
xchg
xchg
mov
push
or
mov
xor
dec
cli
lds
or
iretw
xchg
jmp
push
icebp
pusha
aad
js
cwtl
dec
repz
adc
lahf
pushf
mov
hlt
pusha
fsub
scas
sbb
mov
push
dec
xlat
leave
mov
pop
xor
leave
loopne
adc
negb
sahf
shl
sbb
cltd
xorb
loopne
jecxz
add
mov
push
das
pop
xchg
stos
cmp
lods
pop
sub
scas
aam
jae
mov
movsl
rolb
in
push
out
divb
aas
or
sbb
pop
dec
push
and
repnz
sarb
and
cltd
inc
mov
lods
mov
push
xlat
gs
test
mov
xchg
cwtl
aaa
out
outsb
sub
inc
pusha
inc
clc
in
repz
sbb
ffree
xor
xor
ret
repnz
fs
xchg
mov
lret
pop
call
and
fidivrs
ficompl
stc
negl
adc
adc
sbb
inc
cmp
data16
shlb
adc
add
int3
repz
imul
pop
jle
out
idiv
mov
xchg
andl
clc
xchg
loope
mov
sub
jae
in
adc
hlt
mov
mov
out
sub
inc
daa
or
mov
push
movsl
lahf
fisubrl
fadds
stos
and
jcxz
pop
pop
imul
mov
out
xchg
sbb
xlat
jns
das
in
out
insb
push
xchg
inc
push
bnd
jmp
test
mov
sub
dec
inc
sarb
adc
inc
inc
or
insl
je
imul
pop
nop
test
lock
das
shlb
aaa
outsl
fs
addr16
stc
dec
mov
sbb
imul
pop
pop
clc
adc
das
pusha
rolb
fs
push
imul
mov
fimuls
xchg
push
xor
and
add
movsl
addr16
and
outsl
mov
addb
push
inc
popa
cmp
inc
inc
clc
out
cmp
push
pop
sbb
add
jecxz
push
xchg
mov
ljmp
rol
pop
test
pusha
pop
insl
push
dec
iret
fnsave
pushf
mov
push
fisubrs
jne
or
mov
mov
mov
jle
push
push
jbe
jo
jg
dec
in
mov
sbbl
fs
and
fs
imul
or
test
aam
rclb
mov
in
dec
icebp
and
fsubs
or
loop
stos
cmpsl
mov
fisubrs
je
add
sub
mov
flds
dec
push
rorb
and
lcall
cli
or
jge
cmp
mov
sbb
add
mov
sar
dec
push
add
mov
sub
cmp
test
or
call
jg
fwait
jle
jmp
stos
call
cli
sahf
jmp
outsb
fldenv
lods
daa
sbb
test
das
dec
imul
mov
pop
jl
mov
adc
ljmp
xchg
lcall
cmpsb
xchg
push
jl
and
xchg
arpl
enter
pusha
lods
push
cmp
jb
mov
outsb
adc
inc
call
insb
les
arpl
add
cmp
fcomps
stos
mov
mov
testl
inc
lea
imul
jne
cmc
xor
dec
mov
fwait
jle
pop
mov
or
shlb
ret
jns
js
push
out
cmpsl
add
push
pop
or
sub
or
daa
call
in
hlt
xor
ds
fisubl
adc
dec
sub
push
adc
fs
sub
scas
dec
mov
je
iret
dec
ljmp
pop
inc
jo
or
ret
xchg
pop
fdivrl
adc
inc
inc
xor
into
push
mov
ljmp
test
xor
imulb
xchg
outsb
shlb
mov
dec
scas
lods
push
es
dec
push
mov
fwait
lds
and
jp
and
push
cmp
sbb
jb
jge
sbb
inc
dec
shrl
pop
std
fs
inc
jle
and
xchg
xchg
sub
in
xor
xchg
popa
leave
mov
and
pop
jne
xor
mov
inc
enter
mov
or
jbe
enter
into
sbb
dec
inc
adc
arpl
pop
outsl
mov
push
hlt
xor
mov
cltd
mov
stos
out
jnp
push
or
in
mov
lahf
js
lcall
xchg
xchg
xchg
lret
iret
fidivrl
cmp
inc
add
pop
and
fildll
hlt
fwait
jge
push
sub
insb
push
sbb
push
fdivs
jmp
popa
iret
dec
jecxz
pop
mov
sbb
mov
jge
pop
sbb
adc
dec
insb
cmpsl
aam
sbb
push
dec
mov
stos
mov
das
ret
adc
mov
mov
sarl
push
xchg
xchg
push
sbb
test
xchg
sbb
and
out
mov
es
mov
cs
test
lods
xchg
jbe
loop
out
int
iret
fiadds
add
jge
xchg
push
out
lcall
pushf
or
aam
mov
hlt
adc
hlt
ss
fadds
mov
inc
adc
stos
xchg
and
push
iret
mov
xchg
sbb
flds
inc
pusha
or
sub
or
mov
xlat
lock
movsb
lcall
dec
or
and
pop
xchg
xlat
dec
lods
ja
inc
or
mov
sbb
cmp
xchg
sbb
adc
cmpsl
adc
adc
fstpt
test
daa
fld1
inc
fcmovnbe
cwtl
cli
cmp
out
jp
or
push
fildl
xor
sbb
push
adc
imul
mov
xor
sub
pushf
sbb
mov
shll
imul
sbbl
dec
pop
or
cmpsb
lahf
inc
sbb
or
dec
fsubp
add
xchg
aas
push
mov
lods
mov
adc
push
icebp
inc
and
mov
mov
and
fucomp
sub
xor
stc
mov
xchg
sub
cwtl
xor
dec
push
inc
test
pop
push
sbbb
loopne
js
sbb
scas
xchg
cmp
roll
xchg
int3
mov
sbb
lret
fldenv
popa
sbb
xchg
mov
pop
les
ds
lcall
sub
xchg
mov
stos
mov
mov
sbb
cmp
jbe
movl
sbb
daa
aam
mov
xchg
into
jo
pop
cmpl
pop
pop
xchg
sahf
mov
mov
aad
mov
inc
loopne
inc
mov
repnz
movsl
sub
lret
sub
mov
dec
ja
pop
aaa
in
out
jno
jo
push
sahf
cmpsl
cmpsb
or
test
sbb
negb
dec
inc
loopne
lret
sbb
xor
dec
ja
rcrb
inc
shr
out
fiadds
out
xor
push
cmp
or
test
lods
sbb
push
dec
xor
sub
jl
pop
adc
jp
add
jns
repz
cmp
dec
daa
xor
push
jo
push
xor
sub
pop
cld
ja
lret
pop
stc
stos
xchg
push
cmpb
fists
fistpl
ret
adc
and
inc
dec
test
pop
xor
das
dec
das
pop
mov
dec
movsb
lds
mov
hlt
in
cmc
cwtl
lock
mov
xchg
xor
test
or
mov
frstor
ds
cs
out
cmp
dec
adc
and
dec
sub
rorb
mov
adc
dec
insl
in
stos
mov
fwait
push
jmp
mov
pushf
jmp
es
pop
jnp
dec
sub
sbb
call
pop
aad
movsl
outsb
mov
daa
das
leave
shl
xchg
push
sub
push
repz
movsl
jbe
cmc
mov
mov
mov
xchg
pop
push
fisubrs
lea
out
mov
xchg
test
pop
in
mov
cmc
mov
in
xor
test
das
int3
mov
pop
mov
cmpsb
sbb
js
inc
xchg
stos
jae
es
mov
cwtl
push
mov
popa
call
pop
decl
sub
jmp
push
dec
jmp
push
sub
in
and
jnp
push
inc
sub
out
imul
iret
in
fstpt
mov
adc
push
xchg
in
add
stos
pushf
push
insb
push
jb
xchg
nop
leave
cmc
lret
mov
jne
push
cs
xlat
add
mov
insl
push
xor
sbbb
adcl
loopne
push
dec
lds
cmp
jne
jg
dec
cmp
pop
adc
clc
int3
fcomps
std
push
xchg
aad
cmp
sub
or
ret
arpl
cmp
mov
or
outsl
cmpsb
lcall
and
lcall
shrl
pop
inc
or
or
inc
insl
scas
mov
sbb
lds
int3
lock
ret
stc
je
sbb
lock
stc
mov
jo
sbb
insb
sub
je
add
pop
jb
mov
rorl
std
bound
jno
ret
sahf
fsubrp
pop
cli
add
data16
testl
test
mov
push
mov
xlat
ss
scas
fld
jmp
or
dec
movsb
pop
mov
mov
sbb
inc
lock
aaa
add
pop
mov
sub
xchg
push
cmp
or
insb
xorl
xchg
dec
das
jno
sbb
add
ret
clc
push
cwtl
or
shll
pop
adc
jno
fstp
xchg
test
xchg
stos
xchg
mov
pop
sbb
lahf
wrmsr
sbb
out
mov
push
cmp
jge
mov
into
in
or
scas
loopne
xchg
mov
test
push
and
push
or
and
fistpl
mov
stc
pop
popf
arpl
or
test
xchg
stos
ror
jge
or
jno
adc
aas
dec
loop
push
pop
sti
nop
and
cli
insl
adc
out
ja,pn
inc
push
sarl
mov
loope
cmp
mov
in
loope
xchg
lock
es
push
or
dec
cmp
sbb
pop
loop
jl
test
in
rcll
or
add
ljmp
out
fimuls
inc
js
mov
and
xor
mov
stos
orb
call
mov
fidivs
test
sbb
sub
jmp
mov
dec
ds
scas
dec
sbb
xchg
dec
sub
movsb
loop
std
fisubrs
and
push
pop
mov
out
subl
jge
push
xorl
fcmovbe
pop
jle
pop
bound
sahf
in
push
pop
fcmove
pop
int
shll
xor
sahf
mov
inc
jmp
fs
push
ret
rcll
aas
sarb
inc
cmp
xor
xchg
xorl
xlat
jbe
loop
fadds
scas
mov
lods
push
adc
call
sar
add
jno
and
lods
xor
icebp
pop
shl
jb
movsb
xor
subb
mov
dec
lret
dec
xchg
cmp
adc
je
push
cmp
or
pop
loope
es
adc
mov
cmp
lods
cmp
mov
and
sub
sbb
loop
leave
pop
mov
fists
orb
int
or
std
clc
xchg
xor
mov
and
loop
dec
ss
lods
cmpsb
dec
rorb
jns
out
mov
imul
addr16
mov
test
adc
jae
add
mov
mov
mov
hlt
pop
mov
movb
xor
call
sti
lds
cmp
popf
pusha
shlb
sub
cmc
jecxz
mov
ficoml
mov
inc
sti
push
leave
mov
xchg
pop
gs
lahf
fisttpll
sbb
push
xchg
test
and
leave
mov
les
fldt
xchg
adc
cmp
in
dec
dec
std
pushfw
ss
add
rcll
push
push
mov
sbb
dec
mov
pushf
fwait
loop
or
jbe
push
arpl
push
jle
adc
nop
test
jle
inc
loopne
das
and
add
cmc
dec
sbb
iret
lods
xchg
je
cmp
shr
push
lods
cld
inc
sbb
mov
sbb
in
jbe
jl
test
outsb
pop
ror
stc
xor
aad
aam
inc
sbb
out
int3
insl
sbbb
fildl
rcrl
inc
inc
mov
cltd
sbb
push
mov
iret
js
cli
aad
pusha
sbb
mov
stc
mov
loope
stc
and
notb
es
sub
gs
fprem1
xchg
xchg
addb
jl
push
sti
das
xor
mov
cmp
lods
mov
fidivs
scas
into
cmp
push
cld
ficomps
movsb
adcl
ret
cmp
sub
cmpsb
jle
cli
mov
push
aad
cmp
pop
iret
cld
fnstsw
xchg
adc
lcall
into
jo
cmc
sti
jmp
xchg
add
lret
cmp
lods
pushf
pop
push
aas
popa
xchg
mov
ljmp
jae
push
leave
add
mov
sbb
mov
int3
push
iret
mov
popl
pop
cli
lahf
cmpsl
cmpsb
movsl
imul
jns
jl
dec
test
add
push
mov
les
lods
dec
sub
cmc
jp
lods
jge
and
push
sub
fistpll
stos
int3
mov
xor
loope
jne
aaa
fs
shr
adc
cmpsb
daa
jle
sbb
push
push
shll
out
or
adc
enter
icebp
cmp
test
xlat
push
and
jbe
sbb
jecxz
int3
std
rol
xor
pop
sbb
aad
dec
arpl
arpl
xchg
repz
fst
cmp
repnz
popa
push
xchg
lcall
cli
cltd
arpl
pop
testl
aaa
sub
mov
jl
lret
je
fnsave
jmp
gs
call
mov
mov
cmp
in
sbb
cmp
sub
and
inc
in
mov
ss
and
jge
ljmp
cwtl
notb
adc
jge
shl
dec
inc
mov
xchg
lds
mov
out
pop
repnz
lcall
or
imul
js
inc
arpl
idivl
cmpsb
dec
lahf
sub
sub
cmpsl
cmp
in
or
ja
hlt
add
cli
xchg
push
pop
test
sti
rcr
nop
push
adc
leave
and
insb
fiaddl
ja
and
pop
jg
mov
cmp
pushf
xchg
push
ret
push
addr16
xchg
lret
insb
ss
imul
push
push
jle
add
jno
loopne
clc
imul
jb
nop
scas
nop
fcmovnbe
xlat
xchg
or
ja
sbb
dec
adc
call
xor
pop
or
ret
mov
lds
out
xlat
lret
lret
stos
rcrl
dec
adc
test
fcompl
sub
cmc
test
mov
add
mov
out
cmp
pusha
cld
mov
notl
orw
daa
or
imul
ret
clc
cmp
pop
dec
mov
test
fidivrl
clc
pslld
test
leave
dec
loope
out
inc
pop
int3
mov
aam
inc
sub
pushf
push
pop
leave
inc
adc
shrb
shll
decl
xchg
aas
cmpb
ja
fdiv
jae
and
xchg
sub
int3
mov
sub
leave
test
sub
push
dec
repz
adc
cmp
adc
fbld
xchg
fnstenv
cwtl
pop
adc
mov
popf
push
ds
mov
int
test
sti
xchg
ret
jmp
sub
xchg
loopne
ja
adc
sahf
popf
add
outsl
or
sub
leave
push
xor
add
push
rcrb
dec
push
xchg
mov
pop
pop
cmp
push
jecxz
push
jbe
dec
int
xchg
mov
xchg
xor
push
xchg
add
dec
je
lahf
push
fisttpl
lahf
lods
arpl
xor
pop
sbb
ljmp
xor
fcoml
lods
mov
out
lods
or
push
or
mov
inc
sbb
lret
in
push
hlt
and
insl
jb
imul
pop
jp
sub
sub
gs
add
or
aas
ret
daa
push
popf
repz
imul
dec
push
jns
addb
aam
push
hlt
jne
adc
pop
cmp
pop
cmp
roll
sbb
lea
imul
xchg
ljmp
xchg
pop
cmp
push
push
adc
dec
dec
dec
daa
aaa
dec
test
rolb
push
out
mov
jns
inc
fs
and
jbe
pop
int3
or
jge
jecxz
scas
ror
cmpsb
aam
outsl
aas
into
out
jl
sahf
addr16
sbb
inc
pop
lret
mov
imul
fistpl
dec
xchg
out
jb
movsl
out
fnstenv
cltd
cli
jbe
cwtl
in
add
pop
inc
test
cld
inc
xor
sub
mov
push
pop
mov
adc
and
lods
jae
pop
sbb
xchg
push
popa
dec
and
sbb
dec
xor
cld
mov
ret
mov
jmp
pop
push
sub
in
movsb
xchg
cld
add
imul
out
xchg
mov
imul
cmp
cmpsb
imul
mov
sbb
pop
xor
jg
in
mov
dec
imul
xchg
sub
fimuls
fidivl
inc
jo
fxch
sbb
pop
movsb
dec
push
push
pop
xlat
icebp
mov
or
add
sub
dec
dec
int3
mov
pop
mov
cmp
scas
push
stc
dec
cmpsl
in
in
nop
lds
movsb
jmp
test
fstpl
xchg
cmp
sub
iret
jp
xchg
dec
shrb
dec
mov
sbb
pop
mov
inc
mov
sbb
xchg
sbb
jg
in
inc
cli
aam
cmp
lock
xor
into
mov
xchg
test
aaa
inc
fs
cmc
or
ret
jb
stos
inc
add
jge
dec
or
jle
or
xchg
add
pop
xorl
dec
inc
cmc
push
popf
xor
mov
aam
fcoml
in
in
pop
cmpsl
loope
and
sbb
dec
lock
xlat
jnp
incb
jne
scas
fidivs
stos
adc
jb
notb
fldl
mov
mov
fcoms
sub
mov
orb
adc
js
cwtl
or
decl
or
cs
std
gs
cli
orl
or
outsb
push
test
icebp
jne
int
jne
je
scas
aas
addr16
insb
sbb
push
lds
sbb
cli
bound
movsb
sub
orb
inc
cmp
das
sbb
dec
repz
add
sub
and
adc
lret
xor
aas
xchg
mov
mov
test
adc
adc
pop
pop
pop
ds
cmp
std
and
sub
decb
jbe
sub
push
imul
movb
mov
mov
divl
jo
shlb
dec
add
mov
mov
aam
sahf
in
sub
imull
mov
stc
stc
imul
sbb
mov
pop
add
jno
jbe
stos
jmp
xor
fwait
push
lcall
adc
and
and
sub
pop
adc
push
lds
push
out
fsubrs
mov
test
leave
dec
fmuls
jmp
add
add
lds
cld
lahf
inc
lock
addl
cmpsb
out
pop
and
or
shr
test
fcomps
mov
insl
dec
nop
nop
stos
cmp
aam
push
call
dec
mov
pop
and
idivb
ret
cltd
add
xchg
lds
movsl
popf
popf
mov
adc
test
mov
jne
cmpl
sbb
js
mov
push
fs
ljmp
mov
pop
shl
jp
adc
dec
pop
cmp
lcall
cmp
jmp
sbb
pop
xor
dec
jns
jno
fcmovnu
insl
mov
push
mov
add
inc
sbb
xchg
call
mov
mov
xchg
dec
cmpsl
push
mov
pushf
jge
fistpll
cmp
in
adc
sbb
xchg
nop
push
adc
sub
call
icebp
fstp
cmp
sub
sub
cmpl
insb
mov
inc
push
pop
lods
sub
push
les
stos
pushf
fsubrl
sarb
repnz
sbb
cmpsl
and
adc
add
mov
fsubrs
imul
dec
hlt
xchg
mov
and
ret
lock
fdivrl
inc
xor
push
push
ret
adc
mov
push
push
fwait
mov
xchg
cmp
mov
push
push
jae
sti
arpl
jb
and
cmp
rolb
cmp
ja
test
rcr
out
or
xchg
push
add
xor
mov
pop
mov
in
jbe
shlb
xor
fs
or
jg
pop
out
lcall
fimuls
ss
add
inc
and
sbb
adc
push
mov
xchg
iret
negl
mov
add
and
jmp
int3
push
or
xor
fstpt
mov
xchg
popa
lcall
pop
xor
jmp
jno
scas
aad
lahf
loope
pop
xor
daa
or
pop
clc
or
push
mov
cld
sbb
jnp
je
data16
inc
dec
add
inc
inc
fwait
ficoml
mov
outsb
mov
sub
xchg
das
test
mov
mov
int3
sbb
out
outsl
andl
imul
mov
fsubrl
inc
sti
cmp
js
mov
mov
or
and
pop
outsb
mov
cmpsb
mov
scas
mov
fildl
mov
dec
lods
jo
or
test
push
lock
jge
test
fsubrp
mov
sub
les
or
mov
lret
jg
inc
cmp
dec
mov
test
leave
ret
push
cltd
ljmp
mov
in
jb
push
addr16
xor
sbbb
fsubl
stc
mov
aas
std
inc
cmp
lea
jle
fwait
mov
sub
push
cmpsl
lods
cmpsl
movsl
in
les
xchg
in
int
std
sbb
mov
push
or
jl
scas
adc
and
mov
mov
jb
dec
out
adc
add
scas
test
jg
leave
insb
data16
add
pop
dec
repnz
loopne
sbb
cwtl
sub
adc
sub
cli
aam
cmp
imulb
cmp
or
ljmp
mov
insb
sbb
and
ss
call
es
inc
test
lcall
cmpsl
imul
cmp
scas
pop
fwait
outsb
jnp
push
aam
pop
adc
xorb
ljmp
jle
sub
ja
and
cmp
sub
adc
jb
fsubs
insl
iret
scas
in
inc
inc
enter
mov
sbb
std
out
mov
mov
orl
test
aad
sub
jo
mov
xor
mov
add
jle
imul
jo
mov
ucomiss
repz
fbstp
and
inc
test
popa
insb
flds
aad
xchg
imul
sbb
call
and
jae
add
movhps
jo
push
test
cmp
mov
movsl
mov
insb
loope
sub
cltd
loope
movsb
mov
xor
pop
hlt
push
or
sti
cwtl
cwtl
cmp
cli
dec
dec
push
xor
int3
ficomps
push
mov
cmc
aas
nop
outsl
sub
sbb
out
or
push
stc
clc
mov
jl
mov
add
in
out
movsb
idivl
ja
mov
call
sti
mov
test
inc
adc
sar
bound
ljmp
subl
out
call
popf
out
addr16
popa
divb
rorl
outsb
dec
sub
les
hlt
mov
pop
les
mov
popf
jae
ljmp
or
inc
pop
dec
pop
cmp
aaa
test
jno
push
push
mov
or
into
mov
add
in
xor
cmp
je
stos
jmp
pop
cmc
xor
fisubrl
push
and
insb
add
dec
dec
pop
xchg
adc
mov
negl
pop
xor
xor
fdivl
ret
popa
pop
jecxz
imull
ljmp
xchg
mov
dec
dec
mov
lods
int
add
fisttps
mov
mov
xor
pop
pop
scas
sarb
cmp
ret
loop
inc
sub
lahf
movsl
popf
push
push
stos
movsb
push
mov
adc
lret
sbb
ja
icebp
and
fcomip
xor
xor
sarl
mov
jp
pop
ret
pop
mov
shrb
lret
mov
xor
inc
pop
xor
stos
mov
dec
xchg
in
inc
mov
ja
sbbl
clc
mov
aam
ss
push
cltd
push
loop
and
sahf
fmul
icebp
or
xchg
jg
mov
sbb
or
testb
imul
fdivrs
insl
dec
mov
cmp
xor
cmp
pop
shlb
jno
jmp
xor
in
jbe
xchg
adc
sbb
in
mov
or
and
push
aaa
add
out
mov
in
ds
ffree
add
jbe
jge
mov
mov
insl
sbb
stos
adc
push
xchg
inc
imul
dec
loopne
es
push
jb
push
in
jns
lods
leave
jo
sbb
aad
dec
clc
cmpb
add
test
mov
in
or
gs
aas
stos
push
mov
and
cmpsl
ret
sbb
aam
daa
movsl
movsb
shrb
fs
mov
in
stc
lods
pop
fs
xlat
popa
xor
mov
leave
insl
add
pop
scas
inc
jecxz
andl
xor
mov
mov
enter
mov
nop
imul
fisttps
sub
lock
loopne
mov
das
mov
lahf
and
pop
add
dec
mov
fistpl
imul
sti
nop
ficomps
cmp
sub
scas
mov
pop
popf
sarl
or
cs
adc
lret
fiaddl
push
iret
movsb
sahf
inc
mulb
mov
xchg
movsb
and
xor
aas
push
sahf
hlt
ficoms
adc
cwtl
shrl
push
xlat
push
es
je
idivb
gs
test
cmc
out
andb
icebp
insb
xor
add
add
lret
lods
lcall
jecxz
xor
scas
push
cwtl
popf
inc
xchg
adc
inc
xor
push
andb
lea
rorl
lds
out
andl
lods
cmp
cs
pop
pop
mov
cmp
lods
xor
and
movsb
push
mov
jle
mov
dec
aam
mov
inc
out
pop
fidivrs
sbb
push
cmp
shlb
mov
bound
mov
ret
imul
or
movsl
jp
jle
jo
test
ret
decb
fs
jne
push
xor
pusha
xor
cmp
push
loop
jmp
push
pop
outsb
push
push
and
fcoml
out
xor
or
lret
lea
push
xor
sub
and
adc
in
lds
fcmovne
insb
iret
lds
pop
jno
sub
subps
xor
out
xchg
pusha
inc
jnp
int
jl
and
mov
mov
popa
mov
stc
div
testb
push
push
jno
repnz
push
ss
and
notb
imul
dec
jmp
addb
adc
push
movsb
arpl
inc
and
pop
iret
pop
loopne
and
nop
enter
mov
hlt
and
sbbl
ds
call
ss
in
lahf
xor
and
mov
mov
sbb
jbe
sbb
outsl
mov
shl
aaa
jb
fsts
push
lds
mov
adc
inc
push
addr16
fidivrl
loopne
sbb
les
repz
lahf
mov
push
and
mov
cld
enter
out
out
icebp
aam
fldl
jge
xchg
or
mov
cmp
test
fcoml
xchg
xchg
fstps
xor
xlat
or
sbb
shll
fwait
push
mov
xchg
mov
inc
sbb
push
es
data16
sbb
jp
addr16
mov
adcl
lcall
xchg
mov
ljmp
mov
sti
push
movsb
into
mov
add
stc
pusha
cmpsb
jnp
mov
scas
pop
add
shll
sub
xchg
xor
popa
xchg
mov
lea
push
mov
sub
mov
fdivr
jle
or
xchg
push
leave
aas
fisubs
in
jl
repnz
clc
pop
int3
adc
pop
shll
loop
add
aas
xor
out
inc
jg
inc
jns
imul
sub
ja
imul
rcl
push
int3
mov
xchg
xor
mov
add
pop
ljmp
xchg
mov
ljmp
xchg
cmp
ficompl
ljmp
rol
add
fsubrs
push
fdivs
mov
sbb
iret
out
test
movsb
dec
or
mov
adc
loope
mov
enter
and
adc
hlt
push
out
enter
popf
add
fldt
rcl
cltd
pop
pop
dec
je
xor
rolb
stc
adc
xor
test
ds
push
cmp
adcb
fwait
lret
ja
mov
lea
inc
mov
aaa
shlb
pop
cld
xchg
ficompl
add
inc
test
std
sbb
xor
xchg
mov
dec
pushf
enter
aad
xor
inc
pop
adc
lahf
jno
movsl
add
ds
out
popf
push
imul
and
sub
gs
xor
pop
xchg
icebp
movsl
cmp
movsl
cltd
fistps
mov
nop
sub
sti
subps
pop
pop
push
cld
mov
fdivr
sti
mov
pusha
sbb
add
enter
push
lahf
out
out
pop
mov
push
mov
jmp
std
jmp
adc
xor
aam
xchg
ds
in
pop
mov
jnp
adcb
mov
into
shll
imul
sbb
adc
repz
and
ja
rcrb
repz
test
stc
arpl
sub
sbb
aad
mov
in
cmpsl
mov
pop
mov
and
jg
dec
mov
iret
ret
fs
inc
sbb
aam
inc
xor
loopne
pop
fdivrs
push
int3
sbb
add
push
and
fistpll
cltd
bsr
push
ret
ret
adc
outsb
or
daa
mov
or
inc
out
dec
movsl
insl
outsl
or
add
pop
push
push
or
push
push
call
or
adc
pop
lcall
in
inc
push
in
movhps
sub
or
mov
jge
dec
mov
imul
punpckhbw
push
ficomps
movsb
stc
cmp
ljmp
cmp
out
fadd
sti
cmp
jae
insb
xor
imul
sub
cld
loopne
pop
jmp
js
push
shrl
mov
inc
jmp
sti
rcll
cld
mov
ss
es
jp
xchg
pop
and
sub
jge
xchg
and
inc
mov
dec
das
fstpl
stos
shrl
inc
push
stos
or
sub
mov
adc
jne
dec
add
pop
cmpsb
sub
cmpsb
adc
push
nop
inc
icebp
xorb
adcl
lods
fcomps
sbb
xchg
xchg
xchg
insl
inc
addr16
dec
mov
ret
sbb
out
push
xor
addb
jge
cmp
mov
jnp
sub
shll
jo
mov
mov
add
mov
push
repnz
mov
sbb
std
std
and
lods
xchg
pop
sahf
sahf
xchg
xor
push
mov
das
dec
dec
shll
jl
add
insl
lds
inc
rcrb
push
ds
test
imul
pop
mov
sbb
popf
lahf
sti
flds
rcrb
xor
jo
insb
fs
icebp
int3
pop
test
fcoms
jp
dec
pusha
out
jp
mov
xchg
add
pop
andb
sub
sbb
inc
mov
popf
sahf
xor
push
lcall
jbe
lret
add
cmova
jnp
inc
pop
adc
inc
mov
and
dec
add
out
aad
sbbl
mov
adc
jecxz
pop
and
fwait
cmp
addb
fisttpll
pop
arpl
fsubrl
ret
sbb
pop
or
add
jae
lea
les
lcall
jle
jbe
pop
pusha
rcrl
stos
out
les
std
shl
cld
lret
cmp
sub
mov
iret
jmp
push
inc
push
sbb
cs
pop
and
xor
push
cmp
dec
enter
jb
mov
lcall
mov
cmp
mov
in
adc
push
pop
dec
xchg
lock
mov
mov
adc
jmp
pop
ret
add
mov
add
jae
push
aam
pop
cwtl
das
ss
sub
jbe
xor
sub
jl
pop
es
aam
mov
nop
std
nop
and
aaa
das
inc
mov
and
addb
outsl
cmpsl
mov
mov
in
adcb
dec
not
clc
or
sub
subl
sub
dec
es
dec
fdivr
fsubrp
data16
push
jge
push
stos
or
rorb
outsb
inc
or
movsb
pop
sub
xchg
cmp
and
mov
lds
inc
jl
fwait
and
cltd
pmullw
mov
out
jmp
and
or
push
jae
lret
xchg
enter
lahf
push
mulb
sub
popf
sbb
ja
cltd
mov
call
ret
xor
push
pop
pop
call
sbb
shrb
jge
js
loope
and
sub
ds
aam
sarl
fbld
dec
add
loop
insl
ret
lock
ret
mov
popa
xchg
pop
xor
jmp
mov
pusha
or
out
std
sbb
pop
cwtl
xchg
ret
daa
xor
dec
adcb
popa
fs
orl
cmp
inc
mov
pop
int
in
mov
pop
aas
ficoms
out
jo
or
xchg
push
lret
xabort
rcl
xor
sbb
je
js
aad
and
xor
jo
dec
or
lea
inc
or
xchg
inc
sbb
add
cli
shrb
sbb
addr16
adc
cmp
push
xchg
mov
pop
rclb
cmpsb
dec
xor
pop
xchg
pop
insl
xlat
inc
faddl
insl
or
inc
dec
aam
inc
add
pop
and
mov
xor
imul
jg
add
test
push
mov
imul
add
pop
sbb
loop
xor
inc
ret
lahf
mov
movl
or
push
sbb
or
dec
mov
repnz
push
sbb
lcall
leave
gs
lock
nop
insb
push
test
daa
sti
push
loope
lock
and
add
fiadds
lods
dec
iret
mov
outsb
inc
cmp
mov
pop
xchg
js
or
mov
sub
sbb
pop
popf
push
fcmovnb
jl
add
inc
cmp
xchg
mov
dec
sub
adc
fnstenv
out
pop
push
jne,pn
mov
lods
dec
push
sub
lock
movsb
shrb
test
fldl
xchg
imul
pop
push
divb
mov
cmp
sbbb
adc
add
filds
sbb
add
push
in
fisttpl
inc
jecxz
arpl
adc
xchg
filds
jmp
xor
mov
sub
shll
das
jle
push
push
sub
in
adc
out
mov
dec
adc
sub
jnp
dec
or
mov
insb
in
or
adc
sbb
pop
mov
mov
imul
and
push
cld
dec
pop
adc
ja
rolb
pop
mov
xchg
out
pop
sbb
lea
int
dec
and
repnz
mov
cmpl
les
lds
stos
pusha
sti
adc
push
ret
idiv
insb
aam
or
inc
push
mov
pushf
stos
jge
iret
jle
ljmp
stc
ss
xor
pop
push
imul
mov
sbb
and
aas
dec
adc
xchg
js
sub
add
sarb
adc
adc
addr16
cmp
out
enter
xor
mov
dec
out
fisubrs
imul
int3
int3
shlb
push
repnz
xchg
inc
aaa
call
leave
fwait
inc
ja
addr16
orl
sbb
jb
roll
movsl
jnp
xor
stc
fldenv
enter
icebp
fistpll
dec
pop
mov
das
push
inc
cwtl
fcoml
adc
mov
pop
jl
scas
push
jg
mov
xchg
mov
inc
pop
xlat
inc
scas
lretw
pop
mov
mov
push
sub
stc
pop
outsb
fs
data16
pop
dec
in
xchg
mov
pop
hlt
push
ret
lret
pop
fs
cmpsl
out
pop
adc
jns
xchg
mov
fbstp
bound
mov
jg
adc
cli
cmp
sbb
jbe
ret
dec
adc
lahf
pop
jns
lcall
cmpsl
arpl
fisubrs
mov
jne
inc
lock
jp
sti
add
or
sbb
nop
jle
lods
pop
es
out
cli
inc
movsl
dec
lods
jp
out
enter
jge
pop
and
and
dec
mov
sub
cmpl
in
push
loope
and
push
mov
sub
ror
mov
cld
aas
jmp
sbb
xchg
cli
jecxz
cli
shlb
in
jle
loope
xor
adc
jle
or
pusha
cmp
and
push
lret
andb
lret
test
mov
pop
pop
push
cld
in
je
inc
push
jg
adc
into
ret
invd
std
popf
jmp
jp
fisttps
mov
mov
pushf
popf
mov
sti
pop
in
push
push
enter
push
cld
sub
aas
sti
sub
outsl
pushf
cmp
stos
scas
fimuls
jbe
and
in
out
cltd
mov
leave
and
pop
jbe
sti
scas
scas
push
out
subb
cmpsl
cmpsl
test
inc
sbb
sbb
hlt
mov
xor
arpl
xor
idivb
or
daa
dec
ret
addr16
cmc
cwtl
mov
dec
fs
js
aad
dec
push
mov
idivb
ja
cltd
pushf
jle
fisttpll
mov
and
jo
test
xchg
cmpsl
push
movsl
push
cli
popf
sub
outsl
pop
jb
loop
dec
pop
cmpsl
add
out
xchg
xchg
push
rcll
pop
rcll
jge
rol
xchg
mov
xchg
cli
inc
jl
sbb
jae
lods
ljmp
subb
cld
test
imul
nop
dec
push
stc
mov
xor
int
aas
sub
lods
cwtl
mov
dec
fldcw
push
das
je
push
and
pushf
pop
test
lods
inc
xor
jbe
pop
mov
push
call
popa
xorb
sub
iret
cwtl
xchg
hlt
xchg
cltd
shll
pop
in
aas
enter
jge
mov
xchg
and
xor
movsl
mov
xchg
call
inc
cmp
mov
sbbb
sbb
mov
addb
js
repnz
mov
mov
sub
jno
and
mov
mov
out
xor
addb
lods
sub
adc
or
or
or
xchg
enter
inc
test
je
jl
push
inc
xchg
daa
xlat
pop
jmp
ljmp
scas
push
popf
jp
xor
inc
int
daa
push
jmp
iret
add
data16
out
in
lea
roll
cmpsb
push
fcmovnbe
xorl
mov
xchg
mov
ljmp
dec
test
inc
lea
mov
out
clc
popf
jne
inc
fidivs
in
dec
xlat
xor
cltd
lods
and
dec
mov
enter
pop
lods
pop
jne
cltd
cmp
mov
ja
in
popa
sub
push
cltd
subl
adc
fsub
fmul
popf
daa
cmp
sub
stc
push
push
mov
mov
mov
add
xchg
jl
es
scas
push
cmpsl
jmp
sub
cmp
jle
pop
or
int3
sbb
shl
dec
stos
dec
loop
pop
insb
fisttps
or
movsl
movsb
pop
rcll
repz
push
xorl
xchg
popa
test
leave
adc
shll
mov
in
lea
cltd
pop
inc
les
adc
loopne
dec
mov
lahf
xchg
dec
sub
aad
fdivrl
in
pop
cmpsl
sbb
loopne
push
add
outsl
mov
stc
and
push
lret
dec
sub
stos
adc
mov
cld
repz
mov
adc
ja
nop
test
incb
aam
or
jge
inc
sbb
loope
test
push
pop
std
shrl
lret
testl
out
hlt
dec
xor
mov
ss
push
ljmp
mov
mov
outsl
dec
pop
imul
dec
lods
pop
inc
jno
jge
xchg
and
jno
pop
lock
push
fdiv
in
pop
mov
cmp
mov
jp
mov
int3
and
xor
ja,pt
dec
subb
mov
mov
repz
xchg
jecxz
add
pop
jno
ja
xor
xchg
sub
xchg
lahf
pushf
cltd
cmp
mov
dec
lahf
ret
cmp
mov
std
notl
subb
push
mov
cmp
push
stos
mul
add
fnstenv
call
pusha
repz
loopne
dec
mov
pushf
pop
and
orb
lds
out
movsb
cwtl
xchg
mov
cmpsl
out
sbb
pushf
add
ss
xor
call
xor
xor
movsb
lods
hlt
cmp
mov
push
push
daa
xchg
cld
sub
lods
jecxz
dec
or
adc
test
popf
movsb
pcmpeqd
pusha
lock
xchg
pusha
or
test
add
or
jo
shl
cwtl
loop
enter
xchg
int
jne
cmp
push
pop
xchg
lcall
jl
and
arpl
out
jne
pushf
push
add
push
or
es
mov
aas
push
mov
mov
aas
pop
sub
add
stc
pop
mov
xchg
sub
cmpsl
pop
mov
jmp
out
popa
test
js
es
xchg
fcmovnbe
cs
xor
addr16
cmpsl
pop
test
adc
out
sub
pushf
mov
dec
insl
out
pop
fildll
dec
inc
rcll
push
lret
xor
jae
inc
add
aas
outsb
insl
jnp
sub
or
es
mov
push
jae
aaa
jp
cmpsl
xor
sub
jge
xchg
push
pop
or
xchg
inc
and
mov
sti
adc
pop
cld
xlat
push
rcrb
jge
sub
lret
clc
inc
mov
das
adc
cmp
inc
xchg
jp
xchg
add
adcb
arpl
ljmp
xchg
and
bound
push
xchg
fmuls
jbe
mov
inc
lods
lods
mov
mov
or
subl
xchg
and
and
std
inc
stos
and
scas
enter
xchg
cmp
add
lock
cmpsb
das
xor
mov
or
jne
mov
test
mov
lock
dec
in
cmp
mov
sbb
jmp
ret
mov
sub
adc
test
mov
push
fwait
jecxz
std
mov
xchg
push
ljmp
mov
mov
pop
xor
cmp
lahf
add
daa
fwait
inc
mov
xchg
icebp
jbe
adc
mov
or
aas
clc
in
filds
push
inc
xor
cltd
sbb
les
add
add
fdivr
loope
xchg
cld
jbe
push
sub
rep
sub
sub
ds
ljmp
mov
mov
adc
mov
push
shrl
push
std
xor
fistps
fcoms
stos
ficoms
lret
mov
adc
ret
lret
push
jnp
lret
out
add
fcmovne
jne
push
fiadds
inc
mov
mov
jecxz
shl
out
pop
aam
popf
popf
mov
rorl
iret
aaa
inc
imul
je
mov
scas
mov
lods
sbb
adc
xor
push
push
lods
mov
xor
adc
addl
inc
mov
xchg
inc
std
insb
push
scas
test
lcall
in
and
movsb
xor
mov
shll
adc
pop
sahf
fwait
cmp
adc
pop
int3
mov
pushf
fs
insl
shr
dec
bnd
cwtl
repz
sub
shl
decb
jmp
xor
call
out
lahf
adc
xor
cmpb
and
push
repz
mov
dec
cld
dec
fisubrs
lea
ret
sbb
fldcw
inc
mov
in
pop
mov
mov
cli
mov
mov
out
mov
sub
xlat
iret
lret
mov
mov
out
lahf
mov
in
pop
mov
pop
jb
adc
cmp
test
pop
sbb
inc
xchg
mov
fsincos
jns
and
mov
push
cld
scas
subl
jns
adc
scas
popf
leave
sarb
incb
and
andb
sbb
dec
and
xchg
pop
push
adc
repnz
jle
pop
sbb
or
aaa
mov
stos
hlt
rcr
xor
xchg
out
das
or
out
outsl
jecxz
xor
and
mov
or
push
arpl
cli
cld
mov
pop
hlt
inc
lock
rcrb
add
call
mov
pushf
mov
push
jp
add
mov
sarb
std
hlt
inc
ja
pop
xorl
sahf
loop
fcoms
jp
pop
dec
outsb
xor
add
hlt
scas
sahf
fstp
hlt
outsb
jle
pop
es
out
dec
dec
xor
jmp
push
ret
add
push
nop
imul
push
inc
and
or
addr16
add
mov
pop
inc
lret
enter
sarl
jp
fstl
cmc
sbb
int
clc
inc
sbb
inc
jnp
push
std
lahf
rcrb
scas
xor
shrb
inc
add
inc
repnz
and
mov
addr16
lock
xor
arpl
loopne
xlat
cmpsb
in
push
frstor
fsts
jg
aaa
pop
mov
xchg
push
insl
cmp
pusha
movsl
sub
bnd
mov
outsl
es
xchg
incl
orl
pop
fbld
mov
xchg
xchg
lock
les
mov
jg
cmp
mov
and
daa
cmpsl
inc
dec
push
roll
in
or
xor
and
sub
xchg
xor
movsl
in
fmull
jl
inc
xlat
dec
in
dec
mov
mov
or
cmpsl
dec
add
std
or
sbb
pop
dec
pop
call
pop
mov
pop
adc
je
lock
xor
out
ljmp
adc
and
ret
fidivrl
mov
inc
or
fs
sub
mov
or
xchg
inc
out
pop
push
leave
loop
mov
sbb
pop
xlat
and
test
jae
out
mov
fnstcw
push
mov
popaw
cmp
sub
les
sbb
ror
and
shll
ror
mov
push
fcompp
outsb
sahf
fmuls
jl
mov
sarl
insb
fwait
loopne
out
insb
in
or
inc
inc
sub
pop
test
les
ret
sub
idivl
xor
xor
jbe
inc
cmp
daa
movsl
mov
repnz
pop
adc
jle
int
jmp
push
sbb
ret
enter
sub
ljmp
jns
xchg
fnsave
in
inc
pop
mov
mov
jg
xchg
push
jns
loope
out
test
insl
pushf
jle
jl
inc
add
adc
pop
cmpsb
mov
cmp
xor
sbb
repnz
xchg
mov
insl
mov
dec
push
sbb
stc
imul
xor
cltd
enter
jp
mov
lods
pop
out
fdivr
dec
jp
sbb
push
mov
fisubrs
mov
cmp
pusha
loopne
cmp
adc
jge
cmpsb
fimull
loopne
leave
popf
push
sbb
enter
add
stos
sbb
sbb
aam
out
push
pop
in
push
push
mov
rcll
add
aam
sarb
pop
test
xchg
dec
in
pop
fcmovnu
mov
imul
mov
push
fs
sub
stos
ret
jmp
out
movsl
xchg
sbb
das
enter
jo
es
imul
fisubrs
repnz
lret
fidivs
or
div
add
fisubl
out
ss
fcoms
jb
mov
ret
pop
jns
out
test
pop
repz
cmpsl
or
mov
mov
mov
imul
cmc
xchg
stos
adc
inc
push
ret
scas
push
add
pop
pop
mov
es
mov
mov
adc
in
xlat
xor
cld
and
adc
sub
mov
jbe
in
lret
js
cwtl
lahf
xchg
inc
pop
add
in
outsb
pop
testl
add
out
sbb
inc
punpcklbw
cld
mov
push
in
inc
aad
mov
xor
ds
std
and
subl
cli
push
jns
dec
jg
ret
sahf
push
push
mov
sub
movsl
andb
lcall
bound
das
inc
sbb
ret
and
sub
inc
dec
xchg
cmp
mov
or
add
das
pop
sbb
push
mov
and
dec
cld
insl
subl
pop
cmp
pushf
fwait
jns
xchg
andb
std
xor
insb
cld
mov
mov
and
add
xchg
xor
mov
cmp
xorl
cmp
aad
cmp
cmp
sub
xorb
aas
mov
in
jge
cmp
push
aaa
sbb
jb
mov
insl
jbe
dec
jmp
mov
aam
and
push
gs
cmpsb
ficoml
mov
cwtl
mov
repz
sbb
push
dec
and
test
movsb
addr16
ret
jb
pop
xlat
std
imul
in
loopne
clc
and
arpl
pop
pop
dec
jb
mov
dec
rol
add
mov
jns
mov
subl
repz
pop
pop
mov
stos
mul
ficomps
and
push
push
cmp
fisttpl
sbb
lret
stc
jp
adc
inc
test
fisttps
sarl
pop
inc
mov
xchg
jecxz
js
arpl
lret
add
daa
ja
das
loop
push
pop
clc
jno
adc
and
imul
dec
fidivrl
lahf
pushf
out
dec
push
inc
subb
xor
dec
xchg
and
xchg
pushf
jl
cmpsb
daa
or
xchg
xchg
test
push
xchg
mov
mov
pop
jp
jae
shlb
outsl
adc
mov
mov
cmp
inc
jecxz
xlat
lock
test
rcr
fcomps
add
shrl
loope
cmp
cli
or
js
stos
sub
dec
or
movsl
fsubr
mov
mov
ret
inc
mov
lret
mov
ret
sub
add
cmpsb
jmp
fistps
sub
jb
xchg
out
xlat
inc
leave
mov
fbstp
mov
and
inc
mov
lods
bound
out
je
pop
std
cmpb
repnz
repz
adc
fidivs
and
cltd
jo
iret
jle
xchg
imul
loop
pop
shrb
and
push
push
js
lea
adc
fadds
test
sbb
adc
in
and
pop
scas
test
lcall
cmc
testb
cmp
mov
inc
sti
loope
sbb
fwait
mov
shlb
xlat
bound
adc
jno
cmpsb
xlat
jmp
mov
push
fisttpll
mov
mov
sbb
jo
subb
and
mov
vmovntdq
hlt
jbe
and
int
lea
ljmp
insl
insl
push
mov
or
dec
push
ret
arpl
enter
dec
popf
dec
xchg
test
je
fcomps
push
idivl
mov
xchg
cmpsb
in
jmp
sub
ds
sti
out
cmp
arpl
and
adc
sub
add
sbb
cmp
push
xchg
push
add
dec
xor
dec
lret
dec
loopne
and
popf
test
cmpsl
lea
faddl
lret
and
leave
cmp
mov
lahf
pop
inc
aas
jo
sub
push
insb
das
mov
jl
push
mov
or
sub
push
pop
int
out
shr
test
adc
sbb
push
aaa
sub
cmc
popf
jb
in
insb
fwait
xchg
stc
push
pop
test
in
test
cmp
dec
xchg
push
cmp
push
add
shl
adc
push
out
pop
jo
pushf
les
shlb
ds
in
ret
or
xchg
jbe
cmc
adc
sbb
test
testb
bound
inc
pop
leave
adc
in
scas
js
nop
mov
ds
imul
xchg
clc
xchg
sub
popf
std
loop
and
rcll
movsb
jbe
fisubrs
add
ljmp
andl
in
pop
mov
and
add
add
outsl
sub
inc
dec
xlat
mov
xchg
mov
xor
pop
mov
jo
sbbb
jo
shrl
mov
iret
fidivl
nop
test
push
sub
pop
mov
adc
adc
stos
adc
nop
add
call
add
push
incl
ss
mov
or
arpl
lea
popf
adc
adc
push
cmpsb
roll
mov
inc
sub
dec
mov
lods
imul
sahf
cmp
aad
sbb
insb
jb
mov
mov
scas
add
into
xorb
sbb
xchg
jl
xchg
mulb
cmp
push
lret
xor
dec
mov
xor
mov
xchg
icebp
ja
test
dec
pop
fistpl
or
fwait
adc
nop
test
or
mov
jbe
mov
dec
sbb
inc
outsl
lods
loop
xor
jo
adc
xor
aad
and
cmp
out
push
sub
fs
stos
aad
data16
mov
and
call
pop
jmp
inc
mov
into
xor
fadds
out
movsl
adc
mov
jnp
inc
and
les
pop
add
shrb
aam
mov
sarb
pop
mov
fbld
mov
xor
cmp
subl
or
outsl
sub
fdiv
mov
xchg
or
mov
call
cmp
enter
pop
mov
push
cltd
jno
in
lcall
aaa
or
stc
jbe
cs
ss
xchg
cmpsb
jno
pushaw
pop
sub
repnz
xor
sub
inc
je
aaa
jmp
xor
jnp
mov
pop
pop
inc
cmp
xchg
in
cmp
inc
pop
mov
pop
mov
and
scas
dec
cmc
lcall
push
push
dec
add
ret
pop
xchg
xor
fwait
sub
and
jne
rcl
pop
fwait
jge
push
sbb
imul
popf
sbb
mov
and
cld
cmpsl
sbb
dec
pusha
rolb
loop
mov
ja
or
jb
adc
and
pop
lods
icebp
pop
out
pop
and
add
pushf
inc
pushf
js
mov
sbb
stc
dec
xor
pop
dec
pop
int3
mov
cwtl
scas
mov
inc
xchg
ja
push
jns
subl
ss
push
jmp
mov
push
dec
jno
sbb
fisttpll
stos
stc
mov
add
xchg
in
jns
iret
pop
mov
mov
add
jmp
js
rsm
jp
push
jge
js
pushf
in
xchg
pusha
dec
add
stos
sarb
aam
movsl
adc
gs
mov
lret
inc
in
pop
repnz
neg
into
adc
insl
cmp
inc
push
shll
insb
or
lock
xchg
addr16
scas
cmp
sbb
add
outsl
int3
pop
xor
cwtl
sbb
mov
inc
sar
mov
add
xchg
pop
outsl
out
les
cmp
xchg
mov
addl
mov
push
add
sbb
notb
cmpl
inc
xchg
in
lret
add
push
xchg
in
cmp
mov
movsl
stc
dec
adc
outsb
jle
pop
es
aad
idivb
mov
sbb
and
sub
stos
cmpb
icebp
test
sbb
sbb
adc
jno
pop
xchg
jbe
mov
and
mov
cmp
pop
test
scas
repnz
push
jl
jns
dec
xchg
arpl
cs
aaa
push
ret
call
scas
inc
test
imulb
jmp
iret
push
test
test
call
mov
xlat
pop
push
mov
nop
out
iret
rolb
sub
inc
loopne
aad
dec
push
mov
stos
jbe
aad
or
push
movb
inc
lock
push
inc
movsl
pop
cmpb
sbb
xor
mov
mov
insb
or
jle
adc
outsb
pushf
cmpsb
das
fsubr
ret
cmpsl
out
sub
sahf
bound
add
dec
loopne
insb
fistps
sub
cmp
mov
cmc
dec
xchg
ret
cmp
test
add
test
inc
pop
pop
adcb
sub
xor
out
mov
test
pop
stos
rcrb
mov
stos
and
sub
test
dec
pop
inc
xchg
pop
or
sbb
pop
mov
jbe
ljmp
inc
sar
rclb
sub
mov
mov
pop
jnp
jge
mov
jno
movsl
xlat
mov
add
pop
and
and
ret
cmpsl
mov
pop
push
push
out
movsb
js
push
sub
ja
add
popf
mov
and
pop
in
sbb
or
bound
in
mov
add
and
icebp
mov
add
mov
leave
lret
inc
test
test
and
mov
adc
and
js
inc
jne
imul
mov
xor
and
stc
in
dec
loope
ret
inc
adc
push
outsl
lds
nop
std
into
mov
dec
mov
xlat
jne
in
push
gs
jb
lock
sbb
xchg
and
sar
lahf
or
cmc
fcomp
ret
mov
cmc
dec
lds
leave
mov
push
fwait
out
xor
rcll
sti
or
dec
mov
mov
jmp
daa
scas
sbb
mov
in
cmpb
mov
xchg
test
orl
mov
cmp
ret
add
jno
xchg
mov
inc
dec
sub
pop
and
rorb
or
lods
pop
fisubl
dec
lret
adc
mov
sub
test
mov
out
jne
imul
cmp
test
add
call
pop
add
test
dec
and
fdivs
sbb
iret
sbb
xchg
jnp
xchg
in
or
push
jne
add
ret
mov
mov
hlt
pop
cwtl
xor
mov
inc
jb
push
arpl
movsb
mov
repnz
in
xor
imul
push
add
push
cld
clc
and
xchg
dec
xor
jecxz
rcll
pop
stc
xchg
outsb
jae
ficompl
pop
jle
xor
bound
fidivrs
dec
mov
or
popa
cmpb
adc
xchg
mov
lods
mulb
cmpsb
xchg
std
xor
lds
push
out
not
or
daa
arpl
mov
inc
sub
pushw
dec
insb
jno
mov
repnz
xorl
out
lret
dec
jae
xor
or
mov
xchg
leave
hlt
pop
dec
inc
aas
jg
das
adc
jl
test
pop
idiv
iret
outsl
jno
pop
push
imul
adc
add
lahf
repz
rcl
jb
lret
stos
add
xchg
mov
cmpsb
pop
mov
lock
icebp
mov
push
and
xchg
dec
pop
mov
add
push
mov
mov
add
sub
lea
mov
add
pop
lret
add
lods
insl
popf
pop
sub
xchg
xor
pop
pop
and
mov
mov
jp
enter
mov
dec
mov
push
dec
add
mov
int3
loop
cs
insl
xchg
dec
into
inc
or
sbb
rclb
pop
pop
loop
or
inc
adc
dec
enter
lds
mov
mov
cmpsb
pop
or
inc
inc
in
sti
addl
sub
adc
addr16
sbb
xor
adc
or
and
std
sbb
insb
jno
xlat
and
jp
or
inc
repnz
daa
mov
ja
xor
jmp
dec
fldl
cwtl
pop
fucomp
mov
loopne
mov
mov
icebp
fsub
and
sub
mov
xorl
test
ja
out
repnz
cld
sahf
push
ss
mov
push
test
rcl
scas
jle
xlat
lcall
xlat
clc
and
sub
in
mov
fstpt
popf
rorl
outsb
addr16
mov
imul
push
or
pop
dec
and
pop
or
fwait
imul
jo
and
negl
das
js
xchg
cmp
push
or
mov
pop
arpl
call
orl
mov
xor
push
out
jp
sarb
inc
notb
loop
jmp
addr16
pop
cmp
add
stos
jle
data16
cli
pop
mov
xchg
pop
stc
sbb
mov
add
paddq
ret
xchg
pusha
add
imul
mov
test
dec
cmpsb
cmpsb
pop
scas
sbb
pop
stos
mov
dec
mov
loopne
ss
sbb
test
data16
test
stc
in
pop
pop
mov
pop
insb
push
push
loop
fildl
jne
add
out
fiadds
mov
imul
pop
or
fstp
sub
or
sbb
dec
sbb
mov
mov
das
cmpb
or
test
mov
sub
shr
daa
adc
and
addl
sbb
mov
ja
push
or
push
inc
test
inc
mov
xchg
lods
xor
sbb
ror
imul
or
mov
cltd
sub
das
mov
leave
fidivl
mov
std
cmp
leave
push
out
fs
repnz
xchg
in
xchg
add
mov
lock
ret
or
or
mov
repz
nop
ja
imul
sbb
push
xchg
jno
ret
das
xchg
repz
cmp
jg
pop
sub
and
xor
push
mov
pop
push
in
cmp
stos
outsl
ficoml
stos
or
aad
jbe
cmp
jmp
nop
and
mov
sub
add
or
add
inc
cltd
in
dec
fisubrs
rorl
stc
jno
adc
outsl
int
cmp
mov
rclb
mov
stc
xorl
or
jg
and
xor
xchg
addr16
out
mov
sti
jg
pop
dec
out
add
push
sub
addr16
pop
out
jns
jae
jns
jne
test
push
cmp
mov
and
repnz
xor
jg
loopne
inc
mov
sbb
pusha
cmpsl
push
fs
sarb
inc
repz
fnstcw
jnp
inc
sbb
dec
sbb
loope
dec
test
shrl
pop
add
pushf
dec
mov
jl
jns
mov
mov
repz
test
pop
push
jb
jg
xor
repnz
adc
push
mov
loope
fwait
jns
inc
nop
jae
sub
dec
cmp
mov
bnd
sub
lds
lods
jmp
jae
lret
adc
stc
mov
xor
ja
mov
mov
fimull
nop
cmp
mov
push
pushf
xchg
jo
jge
ja
cmpsl
dec
fdivrs
inc
mov
inc
and
je
mov
inc
stos
push
or
sbb
ficompl
aad
ja
mov
jp
mov
repz
fisttpl
push
clc
aam
rcrb
jmp
pop
adc
jns
lret
sub
jle
and
push
jno
xchg
lcall
adcl
pop
enter
dec
mov
mov
fidivrs
pop
jle
cmp
sub
test
and
addr16
leave
xor
inc
movsb
shrb
pop
push
push
lods
sbb
sahf
mov
dec
and
jge
callw
adc
add
sub
sbb
pop
cmpsl
xor
xor
mov
sarb
xchg
std
jns
sti
inc
mov
nop
mov
lods
je
pop
stos
in
in
inc
add
mulb
push
lock
xchg
add
push
xchg
lea
mov
imul
adc
cwtl
imul
aas
pop
stc
cmp
mov
xchg
lcall
jle
int3
lea
push
iret
dec
scas
mov
movsl
sbb
xor
pop
sbbl
dec
dec
mov
jno
cltd
sub
bndstx
outsb
lods
es
jnp
lret
cs
pop
pushf
xchg
inc
dec
dec
sbb
inc
xchg
inc
fsts
xchg
cltd
xchg
shl
mov
xchg
xor
push
sbb
xlat
cmp
pushf
and
movsb
adc
mov
icebp
stc
lods
stc
push
sahf
inc
dec
imul
sub
pop
dec
ds
mov
stc
xor
jno
repnz
imul
scas
cmc
cmp
adc
lods
inc
add
cmpsl
mov
out
or
int3
sti
popa
xor
hlt
sbb
mov
push
xlat
cld
sub
mov
icebp
outsb
dec
out
lret
jo
sbb
mov
jmp
or
push
aad
add
inc
dec
mov
inc
mov
jge
cmpsb
inc
fsubl
mov
aas
or
dec
insl
jnp
mov
xchg
jge
iret
js
mov
mov
les
out
sbb
jbe
mov
pop
and
sbb
jle
dec
adc
in
in
and
subb
rcrb
sub
sbb
sbb
sub
inc
push
stos
lcall
and
push
mov
mov
jecxz
data16
mov
test
cmc
cmp
mov
inc
jbe
add
push
out
and
and
ret
lock
sub
xchg
in
xchg
inc
mov
aaa
or
out
mov
stos
shr
push
js
movb
mov
xor
xor
pop
inc
jmp
pop
sub
f2xm1
xorb
ss
mov
iret
rolb
mov
dec
add
test
call
or
jnp
inc
adc
stc
lods
pop
or
sbb
dec
jle
fldl2e
nop
insb
adc
cmc
mov
and
xchg
or
jbe
fiaddl
inc
out
gs
sub
imul
xor
aas
loope
lahf
movsb
test
and
inc
nop
mov
dec
mulb
dec
adc
cmp
dec
sbb
sbb
mov
mov
and
jmp
aad
in
inc
ficoms
jecxz
imul
shrl
cs
insl
and
and
dec
push
jns
mov
sub
out
adc
add
cmp
pcmpeqd
lcall
icebp
mov
mov
das
adc
xchg
mov
or
outsb
dec
shr
sbb
push
pop
lods
in
mov
inc
jmp
daa
outsb
outsb
dec
sub
popw
stc
dec
aaa
mov
cwtl
push
inc
or
sub
sahf
sbb
cmp
jnp
les
adc
pushf
sarl
dec
out
insb
dec
add
sub
outsb
neg
fucomi
lds
rcrl
loop
jl
and
leave
cmpb
add
out
pop
mov
loop
or
rcll
dec
and
push
cmp
jb
xchg
in
inc
mov
cmp
add
xchg
jp
mul
inc
enter
movsb
push
sbb
stc
test
sbb
lahf
adc
sub
jecxz
xor
inc
mov
jne
fnstcw
mov
in
cwtl
jp
in
repz
or
xor
xor
lcall
adc
adc
rcl
out
jmp
rcrb
in
and
xchg
dec
dec
mov
outsb
aas
jg
mov
sub
jb
js
cmpsb
push
testb
dec
test
jle
je
jae
in
sub
and
ja
arpl
pop
mov
jns
in
push
test
bound
and
adc
jnp
es
mov
pop
add
movsb
inc
dec
iret
shlb
rcr
and
and
movsb
sbb
adc
jne
xchg
fcomip
call
rcrl
cltd
pusha
adc
mov
mov
rdmsr
dec
lds
fisubrl
xor
mov
icebp
js
out
dec
out
inc
insb
mov
scas
and
mov
rorb
lcall
cmc
in
add
ror
scas
test
pop
decb
mov
std
push
pop
pusha
outsl
and
sub
mov
xchg
cmp
jae
cmp
sahf
pop
push
test
dec
fs
or
inc
int3
mov
arpl
add
add
sub
xchg
xlat
lahf
loop
pop
mov
scas
xchg
xchg
and
clc
lret
lods
aam
sub
lret
lods
cld
jb
inc
mov
mov
imul
add
pop
xor
outsb
push
aam
imul
sub
pop
arpl
pushf
stos
repnz
xor
dec
ja
add
dec
fistpl
in
loopne
push
movsl
aam
dec
pop
mov
or
dec
stos
imul
sti
fxch
hlt
int3
clc
jl
and
in
mov
inc
sti
imul
cwtl
aad
fiaddl
hlt
mov
add
xor
sbb
insl
jb
push
lds
fs
lock
jmp
je
mov
pinsrw
jne
pop
or
inc
mov
into
icebp
out
out
js
jns,pt
int
mov
cwtl
aad
loopne
andb
mov
ret
pop
push
sbb
test
push
arpl
andb
std
cmp
sub
mov
test
addb
mov
jecxz
jb
mov
mov
mov
into
ds
outsb
es
pop
sub
adc
push
cmpsl
test
out
xor
jnp
cmp
es
dec
jno
mov
insb
fadds
sub
ss
mov
cs
fld
inc
or
mov
clc
icebp
aas
dec
adc
test
mov
jo
ljmp
ficompl
xchg
adc
arpl
jbe
les
rcrb
mov
insb
icebp
icebp
pop
imul
daa
inc
sbb
shl
mov
in
jle
mov
mov
push
or
std
dec
dec
cmc
inc
mov
nop
stc
stos
adc
stc
iret
xchg
push
ds
aaa
gs
jbe
xlat
adc
or
sbb
jns
inc
and
fldt
pop
stc
je
lea
popl
pop
jl
ret
mov
adc
and
dec
push
in
adcb
test
push
fldl
movsl
mov
adc
js
fildll
inc
outsl
lahf
aaa
mov
stos
cmpsl
mov
add
xor
fwait
pop
sarl
jo
icebp
in
orb
loopne
insb
and
les
fcomip
push
cli
out
lret
mov
je
cmp
setns
lahf
push
jmp
jnp
adc
fstpt
adc
add
out
insl
or
jae
outsb
js
into
cwtl
mov
mov
jmp
and
jl
adc
inc
pop
cmpsb
adc
dec
lods
xor
std
inc
pop
dec
inc
sti
cltd
test
xor
mov
dec
lret
push
xchg
inc
mull
dec
test
loope
and
flds
shll
daa
mov
mov
sbb
push
hlt
outsb
call
xchg
pusha
xchg
std
and
xor
jle
adcb
xchg
rcll
int
cmp
adc
mov
pop
dec
iret
rorb
mov
jo
jge
rcll
stos
sahf
jecxz
or
xchg
and
dec
add
cwtl
dec
js
xchg
mov
inc
pop
and
ss
nop
das
rclb
sbb
mov
xchg
xchg
addr16
les
adc
cmp
imul
pop
inc
push
lret
cwtl
mov
nop
xor
outsl
dec
and
movsl
cli
cmp
arpl
inc
mov
jl
shr
pusha
fsubs
loop
fisttpll
pusha
ds
sub
pop
pop
jmp
lcall
loop
jp
mov
dec
mov
in
sub
cmpsb
sub
cld
test
mov
mov
xlat
mov
inc
rol
ret
mov
nop
clc
jne
popf
mov
jne
iret
xchg
jno
jns
into
sub
cmpsb
jg
fisubrs
mov
sahf
push
bound
mov
dec
push
rol
and
adc
xchg
into
sbbl
int3
stc
add
int
lcall
imul
je
leave
fstps
movsb
add
inc
mov
dec
dec
es
fwait
shll
aad
lods
int
test
adc
repnz
pop
push
sbb
sub
mov
ret
ret
aaa
sbb
shl
dec
mov
movl
pop
jns
adc
cmp
fstpl
ljmp
jbe
iret
sub
pop
shrl
add
jae
shr
cld
les
test
lods
lcall
add
stc
or
outsl
lret
fs
xor
lret
cmpsl
loop
sbb
cld
inc
shrb
sbb
pushf
insb
push
daa
and
sahf
mov
mov
push
insl
or
shrb
xchg
ret
xor
adc
sahf
push
adc
add
sahf
int
ja
push
and
popf
cs
push
filds
xor
cmpsl
mov
je
iret
or
adc
lods
xchg
aas
movsb
ds
jbe
inc
shll
rorb
pop
jne
dec
mov
dec
pushaw
mov
in
or
shlb
sub
test
and
mov
cmp
test
mov
and
pop
stos
das
das
inc
mov
outsb
push
or
stos
sub
lcall
test
fidivrs
popf
lods
mov
js
test
sub
push
dec
lret
push
push
repnz
inc
mov
stos
mov
mov
sub
xchg
icebp
shlb
pop
jle
iret
mov
mov
lret
fsts
sub
and
pop
out
adc
dec
xchg
mov
scas
js
fs
fidivs
stos
cmpsb
in
sub
int3
xchg
scas
sub
stos
cltd
loopne
movsl
nopl
cld
cmp
scas
mov
pop
aas
js
rorl
sub
cmpsl
orl
ljmp
cmp
fisttps
xchg
sbb
xchg
popf
mov
cmpsb
mov
fcomps
lret
loop
movsl
or
jge
cmc
xorb
mov
pop
lea
ret
mov
adc
push
push
adc
bound
and
and
in
xchg
shll
inc
ret
loope
loope
sbb
in
js
push
push
test
sub
inc
dec
pop
sub
push
xor
sub
mov
mov
imul
cmp
ljmp
sbbb
test
test
sahf
dec
ret
jnp
push
hlt
pusha
dec
testl
jns
pusha
popf
insl
movsl
call
mov
imul
dec
and
cmc
mov
push
mov
mov
ss
aas
sub
ja
fcomp
pusha
imul
and
repnz
fcmovu
aam
adc
arpl
mov
in
inc
into
cmp
and
fidivl
gs
adc
xchg
sbbb
test
test
fldenv
aas
sub
aam
insl
lcall
loop
cmpsl
xor
inc
out
insl
or
fadds
mov
rorb
push
xchg
in
jge
enter
and
subb
and
rcrl
gs
mov
inc
addl
mov
pop
mov
fprem
mov
mov
jne
repnz
filds
aas
leave
aaa
ret
push
lods
lods
cltd
adc
addb
pop
fmuls
outsl
jle
into
push
lcall
fmul
stos
xchg
ja
cld
imul
sub
or
cltd
jo
pop
sub
mov
lods
mov
mov
push
or
negb
adc
xchg
mov
ret
sbb
push
rorb
push
pop
mov
add
jns
lds
aam
loopne
push
cmpsl
pop
aas
inc
jmp
stc
jl
addr16
sbb
popf
mov
xadd
push
push
xor
fcompl
popa
ljmp
push
sub
aas
pop
movsl
insb
popa
inc
jp
dec
add
cmp
jle
int
daa
imul
fs
or
and
movsl
movsl
fwait
sbb
mov
sbb
ret
xlat
nop
xchg
cmpsb
xchg
mov
mov
mov
icebp
mov
cmp
daa
stc
mov
xor
dec
dec
inc
mov
inc
mov
scas
xor
lret
inc
nop
bound
pushf
lods
outsb
cld
jge
push
lods
adc
mov
and
pop
mov
out
arpl
rol
mov
js
push
pushf
mov
mov
cltd
pushf
cmp
pop
cld
inc
subb
jb
jmp
das
test
sub
mov
xchg
inc
xor
jns
cmp
lods
pop
fwait
shll
inc
pop
pop
pop
imul
shl
lods
sti
aas
aad
xchg
gs
rcll
sti
stos
mov
ret
xchg
push
outsl
or
inc
test
mov
loopne
lods
sub
ror
nop
popf
add
cmp
jg
sbb
lret
xor
jns
sub
xor
fwait
mov
or
jp
add
call
pop
movsl
insb
jp
iret
lock
dec
dec
outsl
xchg
out
sub
cs
sti
insl
xor
pop
fnstsw
mov
add
lcall
push
lret
fcmovnb
fadd
iret
das
mov
xchg
cwtl
mov
adcl
out
cs
out
outsb
pop
pop
into
xchg
sahf
insb
add
fnsave
xchg
mov
cmp
cmc
call
jbe
aas
pop
mov
dec
or
push
mov
mov
sbb
mov
insb
fcmovu
mov
ret
bound
lock
dec
ficoml
mov
cmp
pop
adc
sub
imul
cmp
mov
jp
cld
int3
jo
cmp
inc
mov
and
into
cmpsb
mov
lcall
lock
fcompl
mov
mov
add
sub
mov
mov
enter
or
push
jmp
popf
jno
iret
mov
inc
xchg
inc
pop
fwait
lock
popa
in
pusha
gs
icebp
mov
jle
sti
mov
scas
lret
loopne
dec
mov
push
addb
sub
dec
ja
clc
sub
fwait
and
dec
mov
push
xor
in
xor
jle
and
loopne
movsl
push
stos
xchg
xchg
jecxz
std
push
xor
add
shrb
imul
icebp
adc
frndint
mov
or
call
sar
dec
stos
cmp
xchg
push
dec
pop
aad
cmp
push
dec
dec
mov
jmp
adc
mov
push
in
and
icebp
pop
or
adc
cld
mov
test
sub
dec
test
adc
sub
stos
add
testb
ss
repnz
mov
dec
ret
pop
push
mov
cmpsl
test
sbb
inc
sbb
inc
lds
sbb
mov
push
insb
add
xor
rcr
dec
push
push
stc
mov
aas
and
adc
jbe
and
into
mov
mov
xor
xor
mov
andl
sub
mov
imul
ret
jl
mov
jb
mov
mov
in
push
sub
mov
push
gs
push
pop
hlt
xchg
or
daa
sbb
clc
out
cli
test
bound
inc
mov
jb
leave
xchg
and
enter
mov
loop
data16
cld
sub
outsb
jecxz
ror
dec
dec
test
dec
out
pop
dec
stc
fstpl
jbe
or
sbb
cmp
mov
in
lds
inc
outsl
mov
cmp
sbb
cmpsl
dec
movlhps
mull
dec
and
in
mov
test
std
sub
into
movsb
dec
loop
sub
xor
sbb
dec
push
movl
ja
push
outsl
mov
jg
pusha
addr16
cmpsb
jl
xor
nop
xchg
xor
mov
pop
xchg
inc
out
sub
test
mov
cmpsl
push
mov
mov
rcrl
aad
xchg
rcl
pop
and
aaa
add
insb
jg
andl
cmpsb
cld
jecxz
and
cmc
xchg
lods
in
shlb
jecxz
lret
push
dec
nop
mov
sbb
std
test
test
sahf
jg
popf
dec
int3
push
fs
add
loope
sbb
adc
add
or
data16
test
xchg
jnp
adc
scas
add
clc
or
mov
repz
out
imull
sbb
push
adcb
fistpl
and
jne
aad
stos
and
aad
mov
mov
cld
inc
sbb
jmp
lret
xchg
fldt
pop
mov
stos
into
push
jge
inc
adc
iret
sub
pop
fwait
inc
pop
ja
clc
cmpsb
sub
movb
push
xor
push
aam
cmp
pusha
pop
icebp
out
in
aam
cmpsl
jne
pop
in
movb
sbb
add
xchg
out
rclb
jo
push
in
mov
xchg
xorl
jp
jle
hlt
scas
ret
fdivr
std
cmpsl
adc
pop
or
mov
xor
pushf
outsb
cli
ficomps
shlb
leave
leave
lea
jno
fcmove
xor
fdivrl
ret
insb
fstps
mov
stos
rcl
mov
xor
or
inc
test
orb
mov
lea
mov
mov
cld
add
int3
sbbl
xchg
int3
call
andl
push
xor
dec
mov
call
mov
or
cmp
jb
mov
xchg
ret
pop
testl
lret
cmp
iret
adc
pop
roll
ret
add
jge
add
mov
mov
push
xor
jmp
in
and
mov
cmpsb
fwait
xabort
inc
mov
jecxz
adc
and
dec
mov
mov
in
mov
cli
sub
ss
xchg
clc
pop
fdivl
test
jmp
notb
or
into
rcrb
jno
bound
cs
pop
mov
push
sub
push
mov
jb
leave
test
je
mov
pushf
pop
pop
data16
fbstp
cmp
mov
ds
fstpl
ficoms
mov
lods
xor
add
jo
xchg
loopne
in
add
pop
ficomps
aad
clc
xchg
xor
and
ja
cmp
psadbw
push
sub
and
shl
aas
andb
fcom
movsb
clc
and
shlb
cmp
xchg
cmpsl
or
loop
test
cli
mov
or
sub
or
mov
outsb
frstor
mov
in
add
mov
xchg
aam
lds
cmp
idivl
lret
pop
out
jns
call
mov
jb
out
lods
push
stos
aad
mov
fstl
enter
nop
jno
jg
fstp
das
adc
mov
jnp
loope
mov
ss
jp
xchg
xor
mov
mov
xlat
cli
notl
push
add
xor
mov
pop
sbb
lods
mov
je
fisubrl
pop
inc
int
push
dec
and
mov
dec
xor
jno
repz
fisubrl
out
mov
sub
mov
mov
mov
mov
fmull
push
fbstp
cmp
jne
out
dec
pop
scas
add
gs
push
xor
mov
jae
jg
mov
jl
mov
mov
push
fistpll
aaa
dec
jns
xchg
cmp
push
or
cwtl
movb
mov
add
ljmp
mov
push
lea
mov
sub
icebp
jmp
pop
jno
fisubrl
xchg
xor
cmp
mov
mov
mov
push
jo
adc
and
push
mov
mov
adc
mov
xchg
push
jge
mov
nop
jmp
lods
arpl
add
rcll
mov
test
sahf
inc
insl
cmpsl
sbb
add
mov
pop
movsb
add
bnd
rcll
inc
mov
mov
push
adc
push
insb
push
cmp
fdivl
jno
jle
mov
decl
sbb
scas
iret
xor
pop
push
jae
and
lret
inc
test
scas
mov
out
xchg
clc
xor
out
jmp
sbb
sti
ja
leave
dec
imul
fwait
in
stos
add
mov
sbb
add
loopne
and
aad
mov
xor
adc
or
inc
enter
xor
aaa
push
add
std
fsubs
aas
out
jle
cli
fldcw
cmp
or
js
or
mov
push
call
sti
test
jle
adc
mov
movsb
imul
xchg
sbb
and
out
xchg
fwait
or
mov
dec
fiadds
pop
lea
lret
sbb
dec
mov
cmp
repnz
jmp
aad
aaa
cmp
ja
enter
jp
ss
test
adc
stos
insb
sahf
scas
xchg
adc
pop
jmp
repz
bound
mov
stos
add
lock
xchg
jg
shll
popa
push
rclb
cs
xchg
xor
sbb
inc
mov
sbb
cmp
lret
popf
pop
ss
and
dec
adcl
jmp
outsb
stos
jb
dec
out
out
xor
xchg
xor
lds
imul
add
sarl
rcl
aad
push
mov
subl
mov
fists
push
jle
dec
mov
pushf
sbb
xor
or
frstor
out
jle
pop
xchg
fmuls
jno
and
imul
mulb
fbld
pop
inc
xchg
ja
fcmovbe
push
cwtl
inc
movsb
xor
sub
into
enter
xchg
outsb
lret
cmp
pop
fcmovbe
xor
mov
sahf
fcoms
jne
iret
out
imul
int
int3
insb
push
cmp
jno
shll
test
or
or
xlat
leave
or
stc
in
jne
pop
rcrl
dec
inc
mov
xor
jb
inc
mov
xor
popf
aas
ficomps
and
mov
cli
mov
aam
dec
adc
push
cmp
fimull
add
es
out
into
ljmp
lods
and
std
fnstsw
sub
jmp
add
negl
test
push
cld
or
jle
jno
shlb
mov
push
pop
push
sbb
or
and
mov
cmpsl
xchg
daa
push
xor
mov
adc
jne
fwait
enter
mov
shll
cmpsb
lcall
jo
pop
add
inc
mov
fmuls
fcoml
mov
ret
sbb
adc
lea
dec
jb
sti
call
jge
jne
nop
pop
aas
mov
aas
sahf
iret
mov
and
mov
xchg
sbb
cld
fdivl
jns
mov
divb
outsl
bound
dec
arpl
test
dec
xlat
hlt
test
push
int3
dec
popf
std
xchg
in
leave
sub
jmp
xchg
aad
jge
fs
addl
loop
cmpsl
inc
sarl
das
fdiv
cld
mov
inc
inc
xchg
popf
jne
xchg
popf
pop
clc
push
and
sub
pop
add
movsl
jnp
dec
cs
xor
clc
inc
cmp
ret
sarl
pop
fistps
pop
push
inc
les
movsl
adc
or
push
mov
addr16
imul
insl
adc
cmpsl
dec
and
pop
dec
jl
push
lcall
mov
xor
shll
ljmp
jbe
sti
ja
mov
push
lret
in
pop
xchg
sahf
sbb
repz
fscale
mov
cmp
sub
test
sbb
adc
daa
cmpsl
test
popf
inc
movsb
mov
imul
sbb
mov
daa
dec
insb
fwait
dec
add
sbbl
jecxz
ljmp
fimuls
cwtl
pop
andl
shl
iret
rcrb
popa
stos
xor
cmpsl
shlb
pop
sti
xchg
xchg
outsb
dec
mov
adc
or
inc
loop
cmp
adc
and
push
mov
sbb
lcall
cmp
rorb
dec
adc
stos
sbb
bound
adc
cld
enter
push
into
cmp
push
cltd
and
mov
add
pop
cwtl
sbb
stc
jnp
fwait
jno
xchg
mov
and
pop
lea
cmpsb
dec
xor
loope
sbb
sub
and
outsl
lret
inc
cmp
addl
stos
iret
frstor
lret
scas
mov
adcl
mov
imul
insl
inc
cld
sarl
dec
or
and
xchg
jge
shl
jo
xor
pop
dec
mov
dec
sub
stos
mov
dec
call
cs
cmp
cli
ss
sub
outsl
jmp
jmp
out
push
jg
cs
rcl
pushf
dec
xchg
loop
sbb
ss
pusha
adc
mov
add
out
insl
cld
insb
adc
call
in
loope
or
pushf
inc
xchg
inc
add
insl
jo
and
movsb
sub
fwait
push
add
fmulp
pop
mov
ljmp
lock
aad
clc
pop
xchg
jge
test
andb
push
inc
add
xor
xor
dec
inc
mov
mov
xor
pop
pusha
cltd
lcall
mov
push
dec
jne
inc
or
or
lock
adc
movsb
cmp
movsl
dec
repnz
pusha
cmc
jae
shl
nop
and
adc
add
mov
pop
mov
pop
pop
push
cmc
jae
sbb
out
aam
sbb
test
jge
xchg
arpl
mov
test
push
adc
lods
js
nop
sub
nop
std
push
aas
out
fsts
xchg
pushf
push
inc
mov
rcrb
and
xchg
je
mov
mov
mov
nop
imul
test
aas
mov
and
sbb
jge
pop
adc
ret
loope
cmpsl
fsubrl
movb
mov
or
in
xchg
mov
jbe
pop
mov
pop
xchg
add
aaa
popf
ja
dec
lcall
mov
jbe
or
jns
mov
inc
movsl
ljmp
sub
or
cmp
adc
mov
jge
xchg
pop
aas
out
push
jae
sbb
test
mov
push
push
cmp
cmp
sarb
pop
test
jb
loop
pop
fisubrl
sub
popf
adc
nop
pop
mov
fwait
out
push
cwtl
mov
test
outsl
push
add
inc
fs
scas
movsb
push
inc
mov
mov
movsb
mov
adc
lods
cmp
loope
xchg
mov
hlt
xchg
dec
jp
test
aas
push
jecxz
gs
mov
and
mov
add
push
push
cmp
lds
fistps
mov
les
fldt
addr16
loope
jg
test
jecxz
daa
cmp
ret
xchg
popf
jbe
pop
cmp
in
sub
xor
inc
adc
or
or
fsubr
imul
xor
rcrb
mov
mov
or
push
sub
xor
adc
mov
lock
test
mull
in
sub
inc
jl
xor
test
pop
inc
into
out
out
xchg
stos
jg
inc
test
and
xchg
cmp
xchg
test
or
and
push
fs
stos
mov
push
mov
mov
sub
and
shll
sahf
mov
roll
inc
jle
adc
sub
sar
imul
rcrb
arpl
lock
into
stos
shll
mov
push
imul
xchg
into
sub
stc
dec
pushf
dec
lock
pop
popa
xor
xor
les
repz
inc
adc
sub
xchg
jne
mov
lea
in
loopne
pop
mov
mov
jecxz
sbb
aaa
add
push
stos
insb
iret
sub
aas
jo
lods
shrl
mov
fisttpll
inc
out
and
adc
sahf
in
das
rcl
orl
insl
mov
jl
out
mov
ret
xchg
add
mov
mov
add
fstpl
pop
fistpll
xchg
jl
jnp
push
lock
pop
xor
test
inc
jae
sub
cmp
jne
addb
je
mov
inc
cmpsb
inc
data16
stos
adc
push
insb
fbld
and
stos
jmp
mov
ss
push
out
inc
test
mov
jnp
dec
lods
cmpl
mov
and
lods
loopne
sub
add
adc
mov
daa
mov
iret
leave
adc
lcall
lods
test
mov
lock
int
stos
jb
testb
repnz
mov
jecxz
in
dec
dec
leave
xchg
and
mov
sti
negb
pop
sbb
push
cwtl
sbb
sbb
imul
out
cld
shr
mov
cwtl
aas
jmp
test
sbb
push
test
sbb
sub
int
or
test
in
fsts
scas
dec
xor
push
xchg
cmc
cmp
pop
subl
ret
ror
push
dec
cmp
repnz
mov
push
jg
pop
sbb
or
cmpl
leave
xor
stc
jnp
sbb
gs
xchg
mov
ret
loope
ss
aam
jno
xchg
outsl
add
faddp
push
stos
lret
test
adc
cld
out
jbe
sub
gs
imul
out
popf
and
dec
dec
cltd
cmp
push
inc
test
or
xor
ret
sbb
mov
and
aas
movsb
ret
lds
inc
pushf
or
jae
or
fisttps
xchg
xor
repz
mov
nop
push
aaa
xchg
pop
mov
lahf
sub
mov
test
pop
jne
sbb
or
subb
in
dec
mov
in
popa
jo
pop
sub
sbb
adc
cwtl
mov
shlb
js
aas
lods
fldt
daa
jnp
xchg
jmp
cmpl
test
ljmp
or
push
xor
jp
and
push
mov
movsl
sbb
add
mov
lret
pop
cmp
xchg
push
xor
mov
add
jns
aad
ret
xchg
jne
pop
in
mov
pop
sub
xor
xchg
cmp
jecxz
out
mov
cmp
es
or
jg
mov
out
pop
enter
in
jne
sti
cld
mov
dec
insb
jae
jle
mul
ror
sub
ret
pop
mov
daa
jae
sbb
add
push
sbb
pop
xor
xor
mov
lock
mov
cltd
std
icebp
jmp
jecxz
es
cwtl
orl
mov
inc
js
daa
fisttpll
in
push
and
mov
cwtl
cmp
out
loopne
xor
mov
push
add
pop
jle
mov
push
in
adc
dec
jne
aas
and
add
adc
cmp
pop
mov
push
dec
aas
mov
adc
push
xchg
stc
aad
mov
repnz
lea
mov
or
in
mov
mov
cmpsb
fwait
daa
icebp
fwait
cmpsl
dec
sarb
fildl
jecxz
pop
inc
sub
pop
mov
push
shr
cmp
or
insb
mov
cwtl
cwtl
adc
cmc
pop
or
out
xor
sbb
enter
mov
adc
iret
xchg
lock
bound
je
mov
sub
adc
scas
sbb
aam
dec
and
adc
fs
mov
or
adc
imul
fs
or
bound
add
ja
imulb
roll
imul
mov
fs
inc
push
std
dec
pop
sti
js
add
repz
cli
jo
jno
push
pop
stos
rcr
stc
dec
mov
imul
mov
aam
pop
fisttpl
dec
add
cmpl
stos
ljmp
jb
inc
push
sbb
sub
pop
pop
mov
jns
sub
fldenv
pop
cmp
les
ret
arpl
cmc
jae
fistl
push
fwait
mov
push
loop
and
enter
in
leave
xchg
push
mov
cmpsb
mov
ss
cmc
jl
xchg
xchg
cld
mov
add
ret
cmp
adc
lock
pop
add
ds
mov
or
fisubrs
lret
or
js
push
mov
in
insl
mov
jge
xor
cmp
addr16
xchg
dec
mov
mov
int3
sub
mov
daa
testb
or
add
add
popa
stc
xchg
jge
lahf
add
jg
xor
jle
aad
pop
xchg
sbb
sbb
mov
xchg
bound
inc
lret
add
idivl
sub
mov
fstl
and
lahf
mov
outsb
mov
add
sbb
inc
mov
and
cs
enter
fwait
dec
push
nop
in
mov
add
shll
xchg
and
ds
fnsave
nop
je
jb
insb
pop
out
jecxz
clc
repz
xor
or
push
inc
sbb
push
call
stos
jnp
loope
and
jmp
loopne
sbb
orl
cmpsb
jno
cwtl
aaa
pop
mov
mov
lods
xchg
stos
popa
std
ret
in
sbb
xchg
push
push
insl
push
jb
inc
add
test
push
or
xchg
test
rcl
xchg
test
leave
icebp
decl
idivb
repnz
into
in
push
push
mov
les
xor
xchg
sarb
jle
jb
pop
pop
cmp
lret
mov
inc
lods
roll
into
and
rcrb
sbb
mov
fildl
int
pop
roll
ljmp
pop
nop
popa
or
mov
das
sub
jecxz
jp
xchg
aas
idivb
mov
inc
add
mov
cmpl
addr16
mov
jo
cmp
or
add
jge
add
rcll
mov
inc
dec
inc
push
mov
stos
repnz
dec
inc
mov
dec
cmp
vandnps
xchg
jge
popa
push
add
adc
iret
lods
es
stc
dec
jecxz
xchg
mov
sub
hlt
lcall
enter
cld
cwtl
fs
gs
and
fmuls
sbb
cwtl
jb
dec
lret
test
pop
pop
roll
addr16
pop
insb
outsb
lock
pop
sub
insb
dec
mov
xchg
jg
mov
mov
mov
std
sbb
pop
or
cltd
push
inc
push
cmpsb
ficoms
stc
fstps
insl
in
or
imul
adcl
cld
addl
cmp
sti
cmpsb
xchg
and
xor
xor
clc
jge
cli
jp
jge
lcall
je
idivb
add
xchg
mov
pop
pop
mov
sarb
lret
bound
lods
nop
push
push
lahf
or
popl
jno
mov
jg
loopne
std
or
and
stos
pop
xor
frstor
loopne
mov
incl
push
lret
fisubrl
or
ja
sbbl
adc
mov
cmp
add
aad
incb
dec
and
mov
dec
xchg
push
mov
xchg
and
sub
out
xchg
cltd
psrlq
std
xor
jg
dec
pop
pop
divb
clc
in
loopne
lcall
adc
xlat
dec
scas
pop
inc
into
and
add
sti
inc
add
jae
loop
dec
cmp
lods
xor
pop
dec
mov
insb
push
sub
and
in
lods
jns
cmp
hlt
fisttpll
push
leave
in
fiaddl
cli
push
rcrl
aam
or
outsb
insb
rorl
inc
xor
es
ja
aaa
std
popf
mov
test
shlb
jecxz
xchg
sub
ss
mov
xor
sbb
or
push
sub
rcrl
pop
filds
jae
push
leave
rorb
mov
std
insb
loope
fistpll
xchg
aam
pop
icebp
push
sub
les
sub
adc
mov
xchg
pop
arpl
pop
dec
mov
sub
push
stos
inc
sbb
or
ret
and
or
jge
mov
hlt
lcall
jge
mov
xor
aaa
xor
movsl
in
lods
sub
push
imul
xorl
adc
rorb
push
xchg
shlb
sbb
xorl
jns
sbb
pop
js
leave
add
pop
lcall
cld
jmp
int3
jmp
ja
mov
xor
push
leave
xchg
mov
and
lods
subb
sahf
cmp
shld
xor
xor
leave
cmp
add
pop
loope
cli
sbb
dec
mov
iret
adc
lods
pop
and
jbe
push
arpl
rcll
stc
imul
or
test
push
mov
ret
mov
callw
xor
insl
out
adc
dec
adc
jecxz
mov
and
add
push
cmpsb
cli
and
pop
or
inc
xchg
scas
jmp
mov
jmp
add
inc
inc
cs
mov
add
push
pop
rol
clc
loop
mov
sub
cmc
cmp
inc
fistl
fwait
in
rcll
push
stc
push
xor
popf
cmp
xor
adc
mov
dec
mov
cmp
jp
and
jl
fimull
add
cld
add
cs
fsubs
stos
xchg
pop
das
cmp
cli
std
add
mov
outsb
jno
or
cmp
stos
outsb
push
data16
das
ljmp
shl
push
outsb
scas
sbb
xchg
idivb
insl
cmpsl
xor
iret
xchg
adc
dec
jne
sub
push
insb
out
js
scas
mov
and
jg
mov
cmp
mov
out
or
push
and
insb
push
adc
inc
ret
aad
stos
adc
test
cltd
xchg
iret
or
ret
sub
dec
dec
negb
xchg
ja
gs
loope
xor
jp
out
cmpsb
pop
out
and
add
push
mulb
sbb
cmp
adc
aas
or
daa
jg
cld
inc
mov
notl
mov
cs
or
dec
adc
push
icebp
sbb
add
xlat
loopne
sub
fst
inc
add
sahf
push
fcmovb
arpl
or
add
push
xchg
sbbl
scas
ss
mov
sub
bnd
and
sti
xchg
iret
mov
dec
fsub
inc
sbb
add
popf
js
adc
and
dec
out
test
jmp
jnp
fdivp
fsubrl
mov
cmp
push
fldt
cmp
and
mov
lcall
je
mov
lcall
xchg
push
dec
mov
pop
ja
or
xchg
pusha
bound
inc
test
sub
pop
sbb
outsb
mov
pop
jnp
push
out
loopne
leave
mov
fildll
in
push
inc
xor
cld
ljmp
jg
icebp
gs
stos
mov
ret
fwait
sahf
lea
xchg
lds
rcl
adc
pop
popa
in
xlat
sub
push
dec
sbb
mov
push
cmp
pop
andb
push
add
lret
jp
aaa
or
or
mov
imull
push
or
pop
pop
nop
addl
add
sahf
push
or
cwtl
sbb
into
xlat
xchg
cmc
scas
lret
mov
daa
test
sbb
mov
sub
cmp
lret
dec
inc
mov
scas
out
or
xlat
data16
loopne
xchg
jg
clc
mov
pop
dec
lds
sub
pop
pop
lahf
xor
int3
lret
fprem1
test
xchg
inc
ja
sbb
outsb
add
xchg
jmp
lea
cli
aad
and
fmul
cmp
ljmp
dec
fisubrl
adc
out
sub
arpl
test
ljmp
div
lea
xchg
dec
dec
jnp
out
lods
repnz
sarb
pop
aad
stos
mov
call
je
aad
jp
sub
mov
sub
shll
scas
xchg
lahf
adc
ficompl
shll
mov
out
xchg
mov
lcall
std
call
mov
push
lret
mov
dec
lods
mov
imul
aam
add
fstl
add
pop
pop
rcrb
mov
mov
imul
mov
and
iret
cmpsb
adc
jecxz
push
and
xchg
mov
pop
xchg
faddp
and
mov
xchg
lds
sbb
aam
lret
rol
addr16
inc
data16
dec
ss
or
pxor
clc
or
dec
push
ja
push
push
pop
repnz
xchg
movsl
enter
cmp
scas
pop
xchg
loope
mov
sub
mov
adc
mov
push
cmp
xchg
fisubrl
xorl
pop
sub
or
ljmp
push
scas
mov
xor
movsl
mov
movb
dec
fs
push
cltd
ljmp
call
adc
add
fsubrs
cs
rcrb
inc
cmp
mov
mov
in
dec
and
push
dec
adc
es
adc
mov
and
jno
repnz
mov
idivl
cmp
sti
cmp
and
ss
rorl
adc
jnp
mov
fadd
ret
push
mov
mov
outsl
mov
jmp
bound
enter
xchg
sbbb
mov
pop
cwtl
pop
adc
pop
mov
out
popa
pop
ret
mov
xor
mov
push
add
cmp
insb
xchg
cmpsl
stc
scas
cmpsb
mov
or
cltd
xchg
mov
out
nop
inc
pop
sub
pop
addl
inc
dec
sar
dec
cmp
imul
loopne
fistps
adc
pop
xchg
mov
das
mov
loopne
ds
push
in
xchg
add
push
dec
jbe
fwait
jae
sub
rcll
jmp
sub
sub
adc
outsb
mov
iret
push
enter
jnp
sub
das
fisttpll
les
rcr
lock
mov
mov
fnsave
sub
jmp
cmp
pop
into
cld
adc
inc
cmp
testb
mov
xor
js
or
jge
fwait
adc
pop
jge
pop
add
ja
push
adc
inc
in
loopne
add
scas
icebp
fisttpll
nop
lahf
add
xchg
jnp
clc
mov
jae
push
mov
dec
rcrl
cld
pop
or
jmp
aaa
int3
pop
or
mov
test
jg
subb
bswap
sbb
xor
jns
push
mov
ret
xchg
test
jns
mov
and
fiadds
test
and
lret
ja
jns
mov
out
push
sbb
insb
jnp
xchg
stc
aas
push
imul
fdivp
mov
fsubrl
imul
mov
daa
mov
aam
cwtl
in
jae
and
pop
mov
loope
dec
daa
adc
insl
aad
jle
and
dec
or
xchg
or
and
push
pop
cmp
pop
fs
pop
lcall
sbb
sub
push
add
bound
mov
iret
dec
hlt
inc
orl
ret
aam
mov
adc
xchg
pop
stc
outsl
dec
popf
inc
pop
push
lcall
sub
aaa
data16
leave
jecxz
movsl
cld
inc
movsl
mov
add
pop
or
adc
ds
or
jbe
shlb
push
arpl
ret
or
in
mull
pop
push
mov
cmpsb
adc
insb
mov
xchg
dec
fdivl
mov
nop
mov
fisttpll
and
xor
nop
pop
add
stc
push
or
ret
addl
sub
cmp
es
ret
inc
inc
stc
jp
inc
sub
insb
lods
or
jae
add
test
js
fs
and
bound
xchg
and
aaa
jae
jmp
lods
repz
jo
push
mov
inc
shlb
int
jle
xor
inc
cli
scas
aas
xchg
gs
insl
mov
and
dec
leave
adc
cs
dec
fwait
mov
mov
jmp
or
shlb
lock
jecxz
data16
es
ret
xchg
xchg
push
inc
mov
sbb
sub
and
mov
xor
mov
lods
rcr
loop
dec
cmc
mov
jle
pop
dec
jae
outsl
jno
shrl
cmp
cltd
clc
in
sub
dec
or
shr
or
xchg
stos
push
cmp
dec
xor
sbb
push
mov
dec
dec
bound
fidivl
pop
inc
sub
enter
add
popf
xchg
xchg
loop
sub
add
mov
stos
dec
sti
jmp
bound
std
sti
rcrl
cld
xchg
inc
bnd
push
lods
add
fldenv
xor
mov
xor
movsb
cmp
shrl
mov
loop
lock
xchg
push
imul
test
push
ds
in
jnp
jne
inc
adc
or
fnstcw
mov
clc
ss
inc
std
aad
or
repz
lods
mov
mov
inc
xor
loopne
dec
adc
loope
out
mov
cmp
addl
xchg
xchg
or
dec
loope
xor
pop
ficoml
mov
cmpsl
popa
stos
fistpl
mov
fldenv
divb
in
adc
adc
push
std
aas
push
test
cmp
je
outsb
xchg
out
xorb
stc
mov
adc
and
xchg
stc
adc
sbb
inc
stc
sub
pop
fcoms
orb
adc
add
jl
stc
shlb
mov
out
fcmovu
xchg
mov
cs
out
mov
dec
jl
pop
jecxz
and
movsl
repnz
xchg
or
cltd
lods
gs
xchg
nop
dec
jns
jmp
mov
jno
pop
xchg
faddp
push
fnsave
xor
adc
adc
push
mov
jae
sbb
lds
push
push
cmp
inc
or
rcl
pop
pop
add
test
push
lea
jbe
pop
call
mov
flds
cmpb
inc
push
or
cmp
mov
cmp
aad
negb
popw
pushf
inc
inc
fwait
mov
call
stc
sub
adc
push
push
and
jnp
js
adc
incl
fisubrl
xchg
mov
repnz
cmp
adc
test
mov
sarb
cmp
in
mov
cmpsb
sbb
sbb
in
repnz
clc
cmpsb
insl
pusha
enter
and
inc
jne
not
xor
bound
ret
adc
fisubrl
loop
cmpsl
movsb
xor
adc
and
inc
lret
js
in
xor
and
int3
xor
ljmp
loope
inc
cmp
into
xchg
js
dec
fisttpl
scas
cmpsl
add
inc
movsl
push
bound
mov
les
test
hlt
xchg
and
cmp
and
dec
hlt
jo
jmp
and
jg
jo
filds
sbb
or
outsl
and
jnp,pn
ret
inc
out
pop
dec
nop
mov
jl
fwait
jbe
mov
mov
adcb
mov
out
sbb
sub
add
mov
mov
outsl
addr16
aam
mov
in
les
dec
les
ja
stos
fcmovb
mov
fnstcw
mov
mov
sub
cmc
jmp
movsb
mov
jl
insb
bound
cmp
imul
pusha
lret
push
adc
or
and
fbld
gs
mov
insb
mov
jl
xor
loope
out
lret
ja
mov
inc
hlt
add
lea
sbb
pop
sub
pop
aaa
cltd
xor
gs
sub
clc
jecxz
ss
bswap
dec
je
mov
sahf
inc
add
mov
cld
jo
sub
mov
push
mov
int
shlb
push
lock
nop
dec
lret
fcomps
mov
nop
out
adc
lea
jge
adc
orb
sub
ss
mov
cmpsl
jp
push
mov
mov
inc
movsl
push
call
lods
or
cmp
mov
jb
cs
cmp
leave
inc
dec
jns
sub
add
daa
xorl
sbb
inc
jns
leave
or
sub
out
fldcw
rcll
inc
or
imul
out
insb
mov
in
jns
mov
in
cmc
mov
dec
aas
dec
out
adc
dec
sub
add
xchg
test
xlat
cld
sbb
jbe
clc
adc
sbb
or
insl
int3
jns
push
clc
sub
sub
push
fsts
or
mov
pop
aas
rcll
adc
push
jbe
pusha
cmp
ret
test
xchg
xchg
aam
ficomps
add
xlat
icebp
jecxz
mov
cmp
les
xchg
ljmp
popa
sbb
into
adc
lods
out
popa
repz
int
mov
inc
sub
adc
add
push
je
cmp
repz
jg
pop
adc
xchg
leave
stos
fimuls
mov
gs
fdivs
adc
arpl
nop
int3
inc
lret
xor
fwait
jg
xor
dec
or
out
repz
sub
pop
xor
mov
or
mov
mov
adc
lahf
roll
shll
stos
aad
add
fsubr
jno
mov
sahf
xor
adcl
add
jle
out
xlat
orb
lea
sub
mov
in
cmp
pop
pop
jae
mov
aas
fwait
in
int3
repz
dec
adc
loope
adcb
pop
pop
push
dec
mov
gs
or
gs
xlat
je
xlat
fists
fnstenv
fidivl
sbb
jbe
push
sarl
cmpsb
adc
pop
stos
pop
dec
xchg
or
test
stos
js
das
rorl
fistpl
sub
aaa
inc
ss
daa
in
insb
lret
or
adc
jnp
das
jne
insl
mov
inc
loop
out
jbe
push
mov
dec
ror
push
or
pop
std
or
jo
incl
dec
ss
imul
shrb
xor
daa
das
cmp
sti
push
push
jns
aaa
lea
push
ja
xchg
outsb
mov
xchg
ret
out
dec
fsubs
mov
mov
pushf
scas
arpl
stos
and
repz
scas
lods
out
push
cmpsl
jno
cltd
hlt
mov
sbb
test
dec
scas
pop
enter
mov
cmp
inc
fcomps
inc
push
out
jp
cltd
pusha
stc
ljmp
adc
mov
pop
pop
rcrb
clc
mov
sbb
xor
iret
jge
sbb
pop
imul
jle
dec
popf
push
adc
and
rolb
xchg
inc
or
ret
jne
push
adc
cmpl
xor
jl
mov
clc
and
mov
lds
mov
mov
sub
push
push
out
test
xchg
pop
inc
or
jne
and
push
mov
xchg
shrl
in
sbb
jp
data16
mov
ja
pop
shrl
sbb
ja
aam
jmp
xor
fmulp
sbb
cwtl
clc
test
jnp
imul
mov
hlt
lods
mov
jge
lret
roll
fnstsw
push
dec
inc
outsl
inc
cmp
lcall
xor
dec
and
aas
mov
test
xor
test
outsl
iret
dec
xor
mov
add
mov
push
lret
jno
cmp
add
loopne
bound
das
adc
mov
jg
push
push
in
mov
mov
int
add
arpl
test
ljmp
out
data16
mov
pop
push
stos
mov
or
out
jle
xor
add
shrl
rolb
push
enter
pop
xchg
popf
push
insl
stos
push
dec
mov
push
mov
pop
mov
call
xor
lahf
insb
lods
cmp
cli
andl
repz
ret
aas
scas
mov
or
xchg
jb
adc
jae
mov
int
test
bound
xchg
repnz
icebp
and
in
push
loope
xchg
and
cli
out
loope
fldenv
mov
add
jg
jecxz
push
jno
jmp
out
push
cmpsb
mov
shl
or
pop
mov
icebp
mov
repz
data16
stc
and
jmp
and
arpl
xchg
fisubrl
sub
jno
cmp
js,pt
adc
sub
scas
rorl
jae
sbb
pop
or
popa
movsb
stc
xchg
or
scas
rcrb
es
inc
nop
or
insb
dec
or
xchg
jae
push
xchg
mov
rorl
dec
jecxz
movsb
pusha
stc
int
fsub
daa
jne
pop
fidivl
js
mov
jp
add
mov
lret
ds
ficoms
and
mov
stos
sbb
cmpsb
mov
mov
fldt
mov
out
mov
pop
mov
pop
movsb
adc
cmpsl
jecxz
push
fcmovne
or
adc
shrl
cmp
mov
add
mov
jle
jns
add
mov
cmp
aam
out
rcr
sahf
push
scas
in
jnp
dec
inc
add
movb
mov
outsb
mov
or
inc
pop
sub
jb
adc
aas
dec
or
cwtl
adc
xor
mov
pop
mov
loopne
cmp
add
in
cmp
or
xchg
test
hlt
jns
or
lret
orl
aad
push
push
mov
push
fisubl
mov
jl
mov
idivl
inc
ljmp
js
movsb
sbbb
pop
mov
arpl
ds
xor
sub
std
mov
fisubs
arpl
and
cwtl
mov
or
sbb
push
mov
push
rorl
push
mov
imul
je
sbb
mov
inc
mov
cmp
aam
add
and
or
aam
xor
cmp
lods
shll
and
xlat
mov
arpl
lret
popa
fmull
xorl
out
push
sbb
loopne
fisttps
pop
or
xchg
pop
incb
icebp
outsl
pop
mov
inc
int3
push
pushf
push
int3
adc
fisttpll
adc
adc
ljmp
jle
and
mov
in
rcll
jne
mov
cld
jmp
xor
insl
xor
cmp
push
arpl
add
jmp
xlat
mov
mov
je
test
inc
gs
mov
js
insb
fdiv
sub
out
aad
jbe
sbb
sbb
pop
hlt
cmpsb
out
out
sub
lods
fwait
das
or
dec
cmpsb
mov
in
mov
mov
int3
mov
mov
cmpb
dec
xor
sbb
scas
je
xor
mov
mov
and
gs
mov
mov
xor
cwtl
pop
add
loop
mov
out
push
mov
fists
rorl
sub
sti
mov
mov
xor
jmp
cmp
jae
xor
bound
or
fisubl
in
adc
cmpsl
stc
fdecstp
mov
xor
aad
mov
xchg
push
outsl
push
fdivrs
mov
test
sbb
shrb
xor
jo
in
or
sbb
cld
lea
sub
out
lods
jns
fbstp
in
jg
popl
jae
lods
out
out
fidivl
loop
mov
mov
inc
mov
xor
add
dec
or
das
iret
jecxz
mov
push
out
pop
pushf
mov
mov
pop
push
loopne
dec
or
std
sub
js
lock
mov
les
andl
data16
jl
add
sbbl
jl
push
mov
data16
dec
xchg
jnp
jno
xchg
or
test
das
sub
dec
push
mov
sub
mov
adc
push
jl
loop
and
mov
ficoms
jo
lea
ljmp
bound
hlt
mov
lea
lea
aam
inc
repnz
mov
jno
out
lods
cmpsb
add
clc
popf
fstpt
cmpsb
call
jnp
jnp
shll
and
push
push
fwait
popf
mov
or
mov
push
and
sub
data16
aam
and
jge
shr
ds
add
cs
fsubs
xor
xchg
jl
mov
cmp
fadd
daa
fldcw
pushf
or
hlt
outsb
std
int
sbb
test
mov
sbb
into
ror
fstps
flds
xor
dec
pop
pushf
imul
mov
xchg
inc
das
sub
add
and
sbb
jae
pop
sub
into
jno
push
sbbb
stos
mov
or
aas
scas
out
pop
sarl
cmpsb
int3
jg
adc
ret
cmpsb
adc
shrl
std
mov
nop
test
call
aaa
pop
push
sub
out
int
and
jp
imul
movsl
dec
loopne
nop
daa
cmpsb
pop
popa
dec
int3
mov
enter
xorl
insl
stc
mov
or
sbb
adc
out
aaa
movsl
testb
scas
push
mov
mov
shl
mov
fstl
mov
dec
add
sbb
enter
add
into
lahf
fistpll
cmp
mov
sbb
psubb
notl
jmp
jle
xor
iret
mov
dec
adc
mov
movsb
dec
test
add
add
std
xchg
push
out
in
and
nop
mov
ljmp
pop
push
dec
inc
fstps
xchg
ret
popf
mov
or
or
shlb
rcr
rcl
mov
js
out
mov
mov
pushf
ja
and
shll
sub
and
xor
pop
rcrb
xchg
xor
pushf
add
mov
add
int
rcrb
int3
xor
popf
mov
xchg
mov
sub
cmp
sbb
xchg
push
ljmp
jmp
mov
clc
mov
inc
jb
and
scas
addr16
test
rcrb
adc
sti
or
bound
je
lret
pop
fisubl
aad
jle
inc
loop
test
icebp
add
or
add
cmp
jbe
push
push
repz
mov
dec
lret
jmp
jb
aam
pushf
mov
popf
or
or
mov
and
lea
pop
and
dec
and
or
jp
movsb
mov
dec
push
gs
mov
test
xchg
rcl
mov
cmp
frstor
push
dec
std
popa
jge
mov
cli
sub
mov
sub
loop
pop
xlat
sbb
scas
aam
inc
call
fs
ret
loope
data16
xor
cld
mulb
push
lret
or
mov
fwait
mov
pop
fnstsw
lcall
jo
dec
aad
test
adc
insl
insb
xchg
sub
adc
sbb
cld
inc
popa
int3
push
sbbl
dec
xchg
and
mov
ret
movsl
push
out
inc
clc
stos
inc
or
popa
mov
in
xorb
icebp
jmp
cmpsl
pop
loope
roll
lret
push
hlt
cmc
iret
sbb
xchg
add
in
xchg
pop
and
test
or
pop
in
pop
mov
popa
subb
sub
or
cmp
and
dec
cs
inc
push
pop
int
push
pusha
lods
jb
jbe
adc
adc
scas
xchg
or
sahf
call
scas
pushf
adc
imul
icebp
in
popa
popf
mov
aas
mov
sbb
xor
or
mov
xor
pop
cltd
xchg
loop
xchg
and
xorb
push
pop
movsb
sbb
pop
cltd
es
sub
inc
push
aaa
dec
mov
repz
mov
sbb
in
or
insb
call
and
jmp
push
rcrb
callw
mov
enter
ss
xchg
lods
fisttps
inc
sub
in
pushf
stos
rcll
push
lods
sahf
out
mov
adc
or
pushf
lahf
mov
pop
and
pop
mov
call
add
inc
dec
xchg
stos
or
push
xchg
sbb
mov
dec
nop
aaa
adc
mov
or
aam
les
or
loope
xchg
imul
mov
dec
pushf
push
push
pop
int
js
add
push
lea
sbb
pop
int
jle
xor
cmp
xchg
sbb
mov
pop
loop
mov
sub
stos
lea
je
xor
shrb
test
aam
xorb
outsb
out
mov
xchg
push
cmp
or
pop
mov
pushf
jp
jo
push
sti
xor
outsb
in
test
or
or
and
sbb
enter
jb
sbb
or
imul
in
add
fldl
out
je
fcoml
mov
inc
sbb
xor
mov
es
jmp
push
mov
stos
out
cmc
dec
ja
mov
ficoms
out
rolb
ja
mov
rcll
adc
negb
cmp
jb
cli
add
stos
mov
xor
movsb
and
pusha
int3
lret
outsb
repz
push
imul
adc
or
in
cmpsl
jmp
fiaddl
xor
outsl
movsl
mov
push
nop
or
jno
and
mov
dec
jge
aam
ljmp
dec
mov
xchg
lock
pop
pusha
push
sbb
jecxz
mov
test
out
pop
mov
int
je
imul
dec
iret
das
sub
mov
xor
lcall
ja
push
and
fs
in
cmc
xchg
cmpsl
dec
out
popa
push
cmpsl
or
test
inc
dec
adc
add
xchg
mov
mov
lcall
mov
jecxz
mov
addr16
scas
leave
orb
sti
mov
fisubl
outsb
cltd
testb
and
inc
xchg
inc
movsb
mov
sbb
shl
mov
sahf
pushl
mov
rcrl
add
or
insl
jbe
stc
inc
cmp
fcompl
mov
push
lahf
xchg
xor
push
int
outsb
xor
arpl
mov
pop
cmp
jb
jae
mov
dec
sub
mov
adc
ds
sbb
mov
mov
jge
jb
in
test
dec
dec
add
fisttpl
fs
xchg
or
inc
outsl
popf
sbb
add
mov
xchg
addr16
pop
clc
test
jne
jg
sbb
mul
in
fnsave
jecxz
outsl
imul
push
js
add
mov
ret
push
ror
xor
push
subb
adc
bound
and
xor
aaa
mov
xor
jae
int3
pop
push
test
inc
scas
subl
dec
fadds
and
or
je
cmp
out
or
jne
xor
iret
popa
cmpsl
xlat
pop
into
push
ret
int3
movsb
in
push
decb
int3
paddd
cmp
insl
push
push
loope
in
cltd
hlt
pop
add
aas
out
mov
lret
xor
sahf
scas
das
mov
std
movsl
lods
inc
inc
gs
fs
push
ret
nop
sub
mov
fstpl
sbb
cs
rep
xchg
push
dec
stos
mov
je
in
jl
jp
jo
mov
cld
inc
je
push
xchg
jb
adcb
idiv
ret
push
sbb
adc
sbb
aad
add
fcomps
jp
inc
scas
cmp
cs
xor
pop
and
test
jae
ficomps
adc
lcall
add
pop
jmp
stc
push
outsl
and
dec
jns
jne
jb
icebp
lret
rorl
popf
repz
mov
in
dec
or
sti
and
pop
push
sub
in
cs
jmp
mov
xchg
lret
in
pushf
in
push
push
iret
cmp
push
xchg
adc
add
das
cmc
clc
xor
jo
push
push
inc
loope
lret
xchg
sub
loope
jno
sahf
sub
shll
lock
in
sub
ret
xchg
cltd
jo
mov
jecxz
mov
jmp
push
outsb
hlt
add
mov
xchg
adcl
cmp
sti
ret
inc
popf
push
sarl
popa
mov
cmp
mov
jae
aam
fildll
xchg
and
das
js
or
lea
jo
mov
mov
add
sub
into
lret
and
lock
outsl
sub
cmc
es
minps
add
push
repnz
sub
hlt
dec
adc
sub
aam
xchg
fs
aam
movsl
cli
xchg
xor
ret
and
mov
sub
pop
and
leave
test
xlat
ds
inc
aam
dec
dec
aaa
xchg
mov
das
rorl
aaa
sub
outsb
repz
xor
jle
cmpsb
pop
mov
daa
jns
cmp
gs
sub
and
jmp
push
mov
ja
mov
xchg
jb
mov
or
mov
jb
enter
int3
adc
and
mov
and
and
rcrl
sarl
inc
push
out
in
packsswb
in
test
cmc
sub
dec
push
fldt
xchg
jle
dec
mov
pop
xor
jns
mov
or
cs
cwtl
cmp
add
insb
mov
jmp
jb
xchg
shrl
aam
js
sbb
inc
xor
mov
xchg
call
faddl
leave
js
pop
ds
dec
mov
pop
sbb
xor
inc
jo
sub
pop
out
arpl
shr
mov
sub
cmp
pop
outsb
bts
or
popf
cmc
decl
or
sub
pop
xchg
rolb
ds
cltd
aam
pop
cmp
add
xchg
iret
std
cmc
xchg
jmp
pop
in
lret
in
outsb
inc
lds
cmp
and
cltd
sahf
mov
dec
mov
and
xor
cmp
cmp
xor
jo
loope
lahf
aas
rorb
stc
adc
push
mov
xlat
mov
scas
add
push
movsb
inc
mov
push
jecxz
adc
jne
dec
mov
pop
data16
and
pop
or
lods
pop
movsl
test
popf
jb
xor
ret
test
cs
jnp
mov
mov
mov
mov
stc
rcrl
push
inc
inc
in
jp
xchg
insb
jae
ret
in
jb
out
daa
movb
lock
pop
cltd
pusha
inc
jne
daa
dec
push
dec
xor
push
std
mov
mov
lock
adc
lcall
addr16
mov
lahf
in
inc
lods
imul
stos
das
sub
imull
shr
std
and
out
pop
ret
push
mov
arpl
cmp
push
sahf
mov
cmpsl
testb
das
sbb
xor
mov
fcmovb
popf
addl
sbb
ljmp
addr16
mov
in
sti
inc
lods
pusha
lds
dec
sub
inc
sub
dec
imul
sbbl
sbb
cld
jo
push
sbb
mov
sbb
dec
mov
fstps
and
fisubrs
leave
mov
jp
jne
pop
xchg
pop
imul
int3
and
test
adc
dec
stos
xor
gs
divb
fdivl
or
mov
add
fisubrl
arpl
sbbb
xor
xor
pop
sub
outsb
mov
dec
jg
xlat
xchg
mov
push
pusha
sarb
pop
mov
loope
sti
enter
cmc
cmp
shll
dec
out
out
xor
push
mov
andb
pop
enter
nop
adc
in
jle
xor
fisubs
cli
repz
xchg
stos
mov
sahf
sub
adc
sahf
push
pop
aas
inc
add
dec
cli
dec
popf
icebp
dec
scas
in
std
lret
jmp
jne
fcmovu
push
push
test
lahf
mov
or
add
jae
lds
aaa
test
int3
out
ds
mov
iret
mov
xor
push
in
xlat
mov
mov
add
or
push
sub
mov
loopne
cmp
repz
mov
sub
lahf
iret
outsw
pop
ret
stc
adc
fisubrl
ret
xchg
mov
mov
mov
out
fildl
ret
sahf
xchg
ror
fisubs
lret
jmp
lss
jmp
imul
neg
dec
push
test
mov
negl
stc
dec
mov
pop
adc
rcl
cmp
shrl
sub
int
jmp
and
adc
add
pop
insl
in
cmp
jno
in
pop
dec
inc
and
mov
dec
and
cli
mov
mov
or
sub
and
subb
cmp
xor
jl
mov
adc
adc
adc
pusha
jno
sbb
inc
xor
adc
add
mov
aaa
fildll
adc
int
je
shll
call
sub
cwtl
cmp
inc
adc
push
scas
adc
cmp
jae
clc
dec
xchg
cmc
loopne
stos
sub
jb
jecxz
cmpsb
xor
shlb
add
pop
cmp
dec
inc
add
in
or
inc
daa
sbb
push
pop
insb
xchg
lods
sbb
mov
roll
cs
out
xchg
dec
loopne
daa
adc
rorb
pop
and
and
pop
pusha
lock
cmp
mov
imull
int3
rcr
cld
push
or
sub
shrl
lahf
xchg
sub
sub
ljmp
pushf
orb
mov
and
daa
dec
mov
cmp
std
loop
loope
or
xor
mov
xchg
insb
outsl
lds
sbb
into
push
or
loope
mov
cmpb
mov
out
inc
cmp
sub
inc
xor
mov
mov
xor
scas
sbb
outsb
or
sbb
push
jb
xlat
sbb
xchg
sub
cmc
sbb
cmp
push
ret
into
mov
mov
lret
xor
test
clc
test
and
lea
enter
sbb
sbb
cmp
jle
jle
imul
dec
ror
or
into
push
out
cmp
mov
ja
xchg
pop
pop
lcall
cmpsb
aaa
lods
fpatan
fistl
and
movsl
or
and
xchg
addb
sbb
xor
pop
jo
popa
fsubrl
dec
sub
inc
nop
fdivrl
add
or
pop
or
push
sahf
cmp
jae
call
mov
std
loopne
popa
xchg
in
or
fwait
popa
fcompl
inc
mov
fsubl
ret
jo
xchg
cli
scas
pop
mov
mov
mov
or
cmp
push
add
js,pt
add
dec
test
into
fisubs
andl
mov
push
jl
lock
adc
mov
das
or
pop
jno
test
adc
mov
jae
fldcw
mov
pop
xchg
pop
daa
add
pop
in
std
movsl
lcall
fsubs
repz
push
je
rol
fcmovnbe
ja
ds
cmp
lock
aas
xlat
sarb
cmp
je
movsb
lret
es
dec
add
fidivrl
in
cs
and
push
mov
add
pop
stos
xor
ret
or
cmp
pop
popa
pop
jnp
lods
out
fwait
test
sub
popf
push
push
pop
cli
and
mov
add
aad
xlat
push
mov
add
mov
mov
out
ret
stc
je
pop
and
repnz
push
sbb
or
lcall
mov
or
pop
leave
nop
cmpb
movnti
pop
jecxz
mov
push
sub
push
sbb
mov
pop
into
xchg
lock
lods
xor
jns
sahf
push
xor
jae
loop
mov
push
xchg
insw
mov
icebp
gs
and
adcl
adc
lcall
cmp
mov
push
movsb
xor
mov
lock
je
fbstp
insl
cmp
iret
ret
insb
std
andb
insb
out
push
sarl
popa
std
shrb
pop
mov
add
mov
outsl
pop
xlat
rorb
inc
sub
mov
aaa
fmuls
xchg
hlt
adc
mov
lret
shl
dec
loope
xchg
idivl
movl
adc
mov
stos
mov
movsb
int3
lock
cld
ret
or
rclb
dec
inc
mul
or
adc
ss
scas
or
leave
sbb
and
cwtl
lea
add
test
add
xlat
mov
or
lods
inc
sbb
xchg
adc
jecxz
dec
lds
cwtl
push
mov
dec
aaa
pusha
in
adc
sub
ret
pop
addl
push
sti
jp
insl
outsl
cmpl
and
test
mov
sbb
lods
int
sub
push
arpl
rcrb
push
ja
into
insb
xchg
mov
sub
pop
sbb
out
sbb
incb
mov
in
aaa
adc
gs
mov
pop
push
imulb
jl
mov
mov
in
jle
lods
jns
inc
hlt
jle
adc
inc
jge
cmp
int3
repnz
inc
movsl
test
bound
xchg
mov
out
loopne
cmpsb
and
test
imul
pop
push
loopne
fcoms
mov
inc
and
negl
lret
mov
dec
rcl
pusha
clc
xchg
pop
pop
decb
decb
nop
jnp
mov
nop
xor
mov
test
jae
ss
repnz
jg
mov
test
inc
jge
mov
inc
pop
adc
shll
in
pop
push
mov
int
mov
rcrb
outsb
inc
sbbb
inc
xchg
xor
dec
fcmovnb
orl
sbb
adc
mov
jbe
arpl
sahf
inc
repz
pop
sbb
mov
cltd
shl
popf
mov
data16
mov
jns
shll
xor
int3
leave
xchg
push
nop
enter
cwtl
data16
xor
or
inc
mov
les
imul
jmp
jo
mov
push
data16
addr16
fisttpl
sbb
ljmp
arpl
call
in
int3
aas
push
sub
xchg
cmp
cmc
push
xor
cmpsb
fistpl
cmc
movsl
or
in
push
out
call
es
ficoml
or
testl
mov
roll
inc
or
hlt
cmp
xor
jg
fstp
adc
mov
in
mov
and
push
addr16
das
shrl
pusha
cld
lods
ret
mov
mov
popf
mov
popf
push
jne
sarb
js
adcl
mov
inc
insb
test
mov
sbb
mov
aas
push
movsl
push
mov
insl
cmp
push
jne
xchg
and
in
cmpsb
jno
movsb
inc
dec
inc
add
addb
lock
jl
pop
sbb
mov
rcll
cmp
test
adc
pop
push
dec
loop
xor
add
xlat
inc
mov
mov
mov
rcrl
sbb
mov
mov
cmp
mul
outsl
inc
leave
neg
fsubrs
popa
and
arpl
push
cmp
loope
add
les
insl
fistpll
or
pop
push
fisubl
ss
imul
insl
test
push
lea
inc
push
and
or
aaa
leave
out
mov
adc
cld
in
dec
xor
fs
cmc
dec
mov
push
jae
sbb
mov
cmp
mull
mov
pop
jmp
xor
sub
xor
cmp
shl
pushf
add
cmpsl
sbb
out
adc
xor
mov
bound
adc
pop
fdivrs
push
loop
inc
lcall
add
popa
jnp
push
fucomp
xor
out
je
pop
and
ja
sbb
scas
pop
gs
test
xor
mov
push
scas
dec
gs
cmp
xor
rep
pop
ja
mov
into
in
or
mov
cltd
cmp
cltd
push
push
mov
leave
stos
imul
inc
pushf
add
cs
loopne
pop
pusha
hlt
pop
and
push
imul
cmp
add
mov
cli
hlt
xchg
cltd
add
add
icebp
cwtl
fdivrp
add
cmpsb
adc
push
mov
push
push
daa
fsubl
or
fs
loopne
dec
mov
add
cmp
lahf
test
out
daa
push
push
scas
xchg
stos
mov
popa
or
sbb
outsl
in
push
rorb
iret
sbb
pop
unpckhps
scas
cli
dec
and
in
stos
mov
cmc
pop
lds
and
clc
dec
je
adc
sbb
adc
mov
aaa
inc
repz
test
cltd
xchg
cld
mov
inc
xchg
or
adc
mov
add
notb
xor
dec
fidivrs
imul
cmp
divb
mov
test
and
inc
mov
hlt
mov
cwtl
out
and
pop
fadd
dec
les
jns
jae
push
rolb
lock
pop
loop
mov
addl
push
lods
adc
dec
dec
aad
scas
movsb
lock
push
inc
inc
bound
testl
mov
cs
lods
rcrb
sub
xchg
xor
adc
ljmp
inc
and
das
std
popa
decl
xor
mov
shll
ror
scas
dec
jne
and
int
arpl
movsl
adc
xor
xor
loopne
fwait
mov
or
or
shlb
inc
test
jecxz
push
cmpsl
cli
cli
push
and
push
jmp
push
cli
and
dec
cmp
enter
aad
and
rolb
jg
jbe
jmp
repnz
outsb
dec
cmpsb
adc
jae
xchg
nop
cwtl
cmp
mov
js
and
pop
stos
outsl
inc
push
les
inc
xchg
fmull
test
inc
sub
mov
shrb
push
sahf
mov
pop
cld
icebp
cmp
or
repz
pop
push
fadd
sub
pop
push
test
aas
dec
adc
push
add
mov
jg
dec
aas
cmc
pop
sbb
outsb
dec
ffree
shr
dec
in
testb
jae
mov
aad
sub
and
les
mov
dec
mov
and
call
sub
sbb
into
ss
mov
push
test
jl
mov
cmp
xchg
cmp
repz
mov
and
jle
inc
leave
inc
sbb
pop
addb
jmp
jb
or
jmp
push
in
push
sbb
imul
jmp
cmpsb
nop
adc
lret
or
inc
mov
sbb
in
cmp
fwait
int
jnp
adc
xchg
or
mov
mov
dec
popf
adc
or
xchg
inc
fs
fcomps
push
les
mov
xor
sbbb
int
jecxz
xchg
fmuls
mov
je
lds
or
lahf
xlat
clc
subb
and
mov
imul
mov
adc
inc
scas
adc
fcmovb
out
jmp
mov
test
sbb
mov
test
adc
jl
les
gs
fimuls
inc
xorb
pop
adc
push
cs
cmpsl
jb
je
shll
rcrb
push
pop
imul
push
je
out
sub
cmpsb
outsl
arpl
iret
pop
push
or
xchg
ret
adc
inc
aas
insb
mov
outsb
cmp
std
jne
xor
insb
jecxz
sbb
ficoml
sub
cmp
addr16
jecxz
outsb
cmpsb
xchg
js
out
xor
les
cmp
mov
sbb
je
dec
push
sbb
in
mov
cmpsl
push
jns
sbb
or
mov
rep
inc
mov
lods
int3
cs
mov
xchg
dec
das
imul
adc
enter
pop
push
stos
sbb
pop
push
or
popa
test
mov
fbld
push
mov
xor
adc
pop
je
lret
dec
inc
ret
sbb
dec
push
push
mov
cmpsb
and
into
xchg
test
or
inc
mov
sub
inc
xchg
xor
or
bound
and
add
push
addr16
push
mov
repz
sahf
in
pop
pop
mov
pop
sarl
cld
sbb
je
out
imul
mov
jb
shrl
jecxz
dec
jb
rcrl
ljmp
in
mov
xor
mov
lods
dec
pavgw
pushf
and
add
stos
and
or
fisttpll
sbb
cmp
pop
cld
sahf
jno
cmpsb
sbb
mov
mov
add
inc
xchg
xor
int
btc
pop
ss
std
out
jae
push
or
in
jmp
dec
test
test
sub
jp
adc
mov
jl
sbb
movsb
fiadds
push
mov
or
inc
sbb
lds
adc
aad
pushf
jne
bound
clc
jle
sub
dec
pushf
subl
mov
incb
ret
jae
leave
outsl
mov
mov
inc
ss
xchg
stc
cmp
pop
out
xchg
jl
filds
popa
xchg
mov
and
lods
lods
jnp
xor
pop
mov
sub
scas
loopne
out
mov
pop
push
sbb
xlat
movsb
lea
add
and
ficomps
mov
mov
inc
outsl
lds
lahf
leave
mov
inc
pop
mov
lret
je
fildl
rclb
dec
ret
fs
lcall
mov
push
popa
mov
add
addr16
xchg
and
adc
filds
and
es
lahf
jle,pn
mov
imul
adc
or
int
inc
ret
inc
pop
jbe
sub
fs
int3
push
shrb
jl
call
push
pop
rcr
mov
daa
sub
pop
push
lcall
push
in
pop
daa
out
es
adc
rorb
gs
cwtl
xchg
xchg
dec
rcrl
jo
mov
movsl
psrad
ja
in
lds
jbe
cs
push
in
int3
js
movsb
xchg
fsubr
push
leave
jecxz
cli
sub
inc
mov
pop
mov
mov
sub
inc
dec
and
jmp
mov
int
maskmovq
negl
xor
push
ficompl
push
xchg
cs
mov
cmc
xor
leave
mov
inc
outsb
mov
cs
insb
and
inc
sti
andb
mov
jo
rep
dec
outsb
push
loop
adc
repnz
cwtl
pop
mov
stos
push
and
cmp
ja
jb
inc
or
dec
sub
and
iret
jge
call
xchg
mov
xchg
imul
sahf
call
aad
sahf
pop
pop
nop
mov
mov
sub
jecxz
pushf
inc
popa
add
in
sub
sub
mov
mov
sub
jb
arpl
lcall
cmp
push
stos
roll
mov
scas
shlb
mov
inc
stos
cmp
subl
fists
and
dec
and
incb
and
repnz
data16
sub
in
mov
and
sub
icebp
scas
daa
or
or
inc
not
inc
pushf
mov
mov
insl
ucomiss
dec
test
pop
mov
xor
test
xor
add
adc
xor
lock
cmpsl
aam
stc
and
out
ficompl
pusha
out
mov
ret
or
jne
sub
imul
cmp
outsl
push
movsl
mov
push
xlat
jmp
and
xor
jle
push
or
jo,pt
cmp
fimull
xor
shrl
pop
cmpsb
cmp
jbe
mov
xchg
cli
outsb
jnp
pmullw
dec
hlt
mov
jnp
rcl
or
add
cltd
cltd
and
pop
nop
xchg
jb
sbb
pop
int
inc
fs
fldenv
shll
test
sbb
cmova
lods
outsl
mov
ds
nop
sbb
mov
and
push
xchg
pop
lahf
dec
push
rorb
jbe
xor
mov
cmp
mov
ss
lahf
or
lahf
bound
mov
push
mov
test
xchg
in
fistl
rcll
pop
adc
mov
test
sahf
dec
add
outsb
push
sub
sbb
mov
dec
xchg
adc
aaa
in
lahf
cmp
cld
pop
cmpsb
cmpsb
mov
mov
cmp
push
fimull
pop
pop
imul
inc
inc
inc
ret
or
orl
popa
imul
mov
sub
inc
push
cld
mov
std
js
mov
mov
inc
out
and
add
mov
test
sbb
out
fs
or
add
xchg
pop
cmp
dec
add
lea
ret
mov
inc
mov
aam
dec
popf
and
cmc
fbstp
adc
out
bound
adc
sbb
adc
lea
pop
jg
loop
xchg
pop
dec
cmp
push
enter
out
dec
stos
cmp
xor
fst
sbb
or
mov
fcoms
mov
aam
daa
scas
sarb
mov
or
cld
pop
movsl
pop
mov
sub
mov
cmp
jp
enter
hlt
mov
notl
dec
les
and
push
cmove
arpl
dec
inc
lcall
mov
bound
mov
xchg
negb
fmull
daa
and
std
out
movsl
mov
fcoml
shll
jne
std
ss
lret
popa
xchg
test
adc
fbld
shr
or
int
mov
outsl
cmp
jle
xchg
mov
cmp
xor
jg
xchg
jle
sub
inc
popa
lea
lcall
sahf
cli
sbbb
lret
bound
shrb
jge
lock
sarl
test
push
lock
data16
movsb
loope
jp
pop
pop
subb
fs
xchg
iret
ljmp
aad
pop
das
mov
ficomps
add
out
lods
ds
insb
cmp
outsl
scas
push
sbb
mov
out
jecxz
cmp
stos
out
out
cmp
rorl
cmp
cli
loope
flds
sbb
repnz
ljmp
xor
ficomps
mulb
or
out
or
daa
dec
push
cltd
adc
sub
xchg
lods
jne
push
test
jne
inc
mov
fiadds
cltd
sub
cmc
xchg
lret
cmp
sub
lds
jmp
and
dec
js
jne
pop
addb
mov
push
cmp
mov
xchg
mov
cwtl
pop
popa
andl
cltd
fs
shr
fmuls
adc
mov
loop
fmuls
imul
ret
pop
aam
ror
loopne
sbb
mov
add
adcb
out
dec
or
mov
out
mov
and
pop
pop
jno
push
cmp
push
dec
outsb
push
stc
jmp
out
es
mov
in
adc
dec
xchg
pop
in
cli
rcrb
lret
dec
xorb
mov
insb
cmp
ljmp
push
testb
test
hlt
xor
mov
psubq
sbb
pop
or
jns
psubb
adc
bswap
popa
or
xchg
push
xor
lret
xor
cmp
mov
cmp
in
push
imul
jge
call
iret
mov
into
add
outsb
pop
into
and
lret
mov
cmp
fsubrl
scas
popf
add
or
arpl
aaa
push
sbb
mov
in
and
mov
mov
nop
mov
cmp
jmp
cltd
mov
ss
xchg
out
je
dec
mov
stos
sbb
mov
test
inc
cmp
push
lcall
mov
iret
pop
dec
ljmp
sarb
jo
mov
popa
inc
lahf
fnstcw
popf
add
lahf
mov
xlat
shrl
filds
pop
outsb
xor
jnp
jle
adc
movsl
mov
leave
dec
mov
scas
out
push
das
in
repnz
inc
adc
mov
push
jne
xlat
dec
or
add
je
aaa
jne
mov
sub
nop
xchg
add
ljmp
inc
inc
and
sbb
mov
js
fdivr
mov
aam
fdivrs
fs
jg
insb
fsubrp
sub
inc
sbb
mov
mov
ja
incl
pop
pop
xchg
xchg
pop
inc
or
rolb
shll
inc
je
fldcw
mov
xor
idiv
inc
test
cltd
sti
pop
dec
inc
leave
arpl
test
mov
mov
mov
xorl
sub
push
jns
aad
xchg
lcall
pop
cld
mov
sub
sbb
dec
add
and
scas
test
mov
fnstsw
jns
or
lods
outsb
cmp
cmp
ficompl
and
fidivrs
shrb
sti
and
push
push
adc
cmp
subb
popw
add
fldl
push
scas
mov
xchg
loopne
inc
dec
push
pop
pop
mov
jg
dec
mov
out
shlb
jmp
test
andl
sbb
shll
cmp
pusha
aaa
jmp
clc
inc
push
xchg
or
xchg
mov
mov
jbe
mov
mov
cs
call
lret
jo
push
xlat
xchg
and
stos
push
movsl
xchg
push
sbb
sub
mov
mov
or
filds
aam
iret
inc
stc
jge
and
pop
gs
andb
dec
ja
sarb
and
ljmp
cli
pop
sub
lcall
cmp
std
lahf
or
inc
repnz
cmpsl
pusha
test
and
roll
fwait
dec
lret
int3
sbb
int3
xor
out
mov
inc
sub
push
inc
add
addl
into
or
jle
or
pop
mov
mov
dec
xor
xlat
sub
movsb
in
xchg
push
cmpsb
test
inc
mov
scas
imul
or
sahf
jge
jne
stc
cmpsl
int3
jmp
cmpsl
insl
cmc
dec
jns
mov
outsl
xchg
jge
xchg
add
push
dec
push
fbld
jg
sahf
pop
cmp
je
fstl
imul
fstpt
orl
and
negb
mov
jp
movsl
mov
pop
int
xchg
mov
iret
into
jg
cmpsl
enter
cmp
cli
or
addr16
arpl
out
mov
cltd
es
inc
rcrl
mov
mov
in
mov
fistl
in
testl
call
sbb
rcrb
sub
pop
shrd
inc
adc
movb
cmp
xor
js
fisubl
fnstenv
add
dec
adc
dec
adc
ljmp
add
dec
inc
xchg
daa
pusha
scas
and
mov
xor
pop
xor
and
hlt
cld
fnstcw
add
sbb
in
xchg
adc
cmpl
and
shrb
sub
das
scas
xchg
jbe
sbb
mov
or
mov
inc
push
xor
cs
dec
mov
mov
xor
rcrb
jnp
sbb
xchg
rcrl
cli
mov
btsl
lss
cmpsl
stos
sahf
inc
mov
xchg
sbb
jbe
sub
mov
jl
fwait
ret
mov
push
mov
mov
in
cltd
adc
sub
and
ficoms
cltd
sub
jecxz
pop
xchg
push
hlt
test
clc
jmp
hlt
enter
mov
sbb
enter
adc
mov
add
sarl
push
stc
aad
mov
cmpb
bound
jb
xlat
leave
clc
clc
rorl
sahf
ss
aas
cltd
dec
inc
cmp
or
add
mov
push
cmp
add
sbb
jno
jmp
lcall
cli
cwtl
inc
fcoml
push
insl
call
frndint
shll
pop
xchg
dec
jne
inc
clc
xchg
xor
fldl
dec
nop
sbb
ror
pop
pushf
mov
pop
ficompl
push
in
cmpsb
and
and
insl
in
jp
aad
xor
jnp
mov
sbb
rorl
stos
cmpsb
pop
popf
push
sbb
or
bnd
enter
fdivs
jp
test
hlt
icebp
int
call
cmc
add
stc
outsb
push
cmpps
scas
push
negl
push
cmp
push
or
daa
hlt
or
aad
mov
insl
adc
iret
and
jno
xlat
invd
xchg
add
or
add
mov
aaa
xor
cmp
cli
pop
fwait
sub
dec
cmp
bound
mov
xor
repnz
mov
or
jp
and
push
imul
icebp
pushf
mov
xchg
gs
shll
and
and
push
push
jb
cmp
lods
sti
mov
jmp
hlt
addl
enter
fwait
in
or
push
cmp
push
in
andl
fs
mov
push
jg
into
jbe
mov
pop
arpl
je
lret
imul
rcll
mov
adc
mov
std
cs
mov
xchg
sbb
stc
in
pop
xchg
push
pusha
dec
int3
sub
shrb
push
movsb
add
dec
mov
pop
aas
jno
add
ss
mov
and
or
mov
push
push
call
inc
fwait
negb
mov
loopne
imul
xchg
icebp
mov
test
push
and
int
fwait
sub
sahf
or
and
cld
or
add
out
xchg
push
push
push
js
xchg
push
pushw
mov
testb
sbb
sub
mov
iret
cmp
insl
sbb
sbb
sub
mov
arpl
sahf
mov
aad
xchg
push
mov
cmpsl
mov
mov
cld
aaa
insb
sbbl
push
cmp
ret
inc
xor
cld
jecxz
mov
dec
xchg
ficomps
jno
mov
mov
bnd
mov
jbe
cmpsb
je
dec
mov
and
movsl
mov
lock
lahf
hlt
outsb
lcall
adc
lahf
rorb
lods
push
rclb
out
xor
in
and
fwait
cmp
lods
sbb
out
xor
adc
cmp
pop
mov
lea
sarb
mov
clc
sti
shlb
xchg
xor
fwait
shlb
cld
enter
add
jecxz
inc
pushf
repnz
test
cltd
fisttpll
jae
and
push
sbb
mov
xchg
cmp
arpl
inc
popf
pop
scas
pop
sbb
xchg
push
stos
mov
test
lret
shll
or
out
pop
sbb
subl
in
jg
ss
sub
dec
jge
pop
push
xor
cmp
mov
mov
clc
shl
bound
ffree
push
add
and
mov
cmp
adcb
adc
push
add
jl
mov
adc
ficompl
popa
mov
stc
cmpsl
dec
or
xchg
sbb
enter
and
fucomp
dec
xor
cmpl
adc
cmp
ret
mov
inc
mov
pop
loop
dec
popf
mov
mov
in
mov
stc
jmp
fcomps
mov
clc
filds
std
and
or
out
xchg
das
pop
adc
xchg
ljmp
ljmp
subl
xchg
jg
jnp
dec
cmp
xchg
push
aad
pop
iret
mov
push
mov
jnp
jl
enter
ss
mov
aad
fwait
sbb
notl
pop
icebp
data16
inc
xchg
mov
pusha
in
push
repz
ficompl
xor
mov
fs
add
push
mov
push
jnp
xor
lahf
adc
dec
and
fwait
push
mov
dec
frstpm(287
inc
inc
outsl
into
fbstp
pop
das
movsl
outsb
js
out
mov
adc
and
jbe
sti
loopne
imul
jl
xchg
mov
stos
jae
mov
rcll
jbe
push
and
lea
pop
sbbl
fwait
cmpsl
aad
outsb
push
adc
pusha
pop
or
ljmp
or
add
mov
ja
or
and
scas
dec
ficompl
cmpsb
in
mov
mov
es
xchg
or
rcl
sub
aad
cmp
cmc
out
mov
sub
sbb
mov
mov
dec
sub
mov
cmpsb
sub
int
hlt
movsl
adc
dec
mov
stc
adc
inc
xlat
dec
lods
add
adc
repz
add
push
fs
loop
cmp
and
popa
sbb
outsl
fs
fs
pop
push
pop
mov
out
jmp
mov
cmc
mov
rcrl
std
cmc
xchg
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
