cld
leave
and
daa
rorb
mov
mov
and
fisubs
lds
or
pop
push
out
les
es
daa
jecxz
arpl
sbb
fbstp
add
add
jno
stos
mov
mull
mov
jge
in
test
and
and
dec
jo
mov
fwait
mov
add
xor
jle
aaa
mov
push
inc
imul
sbb
push
or
repz
sti
or
fwait
push
out
aaa
cmp
mov
dec
ficomps
leave
mov
add
jle
push
xor
xchg
cmc
cld
mov
dec
add
rol
sbb
inc
rcll
daa
cmpsb
adc
and
adc
inc
mov
iret
push
int
dec
std
fdivl
jmp
shlb
addr16
push
shrb
mov
xlat
call
and
lods
movb
loope
push
je
les
je
jae
rorb
mov
arpl
add
jae
repnz
lret
clc
fxch
cld
popa
outsb
addr16
xchg
mov
out
popa
mov
ja
loope
jb
sbb
js
mov
pop
outsb
sbbb
mov
add
in
jbe
mov
daa
mov
add
push
jno
aas
jb
test
mov
pop
call
shl
mov
mov
arpl
addb
sbb
sbb
sub
lods
shr
test
adc
adc
mov
and
pop
dec
sbb
jo
aaa
sub
inc
jg
inc
and
in
jae
cmc
insl
out
pop
sbb
addr16
mov
cmp
inc
jl,pt
imul
or
or
sarl
outsb
in
sbb
test
jae
lods
std
or
mov
sbb
or
push
and
sbbl
inc
sub
adc
cmp
fnsave
stos
inc
mov
std
aaa
pop
out
pop
dec
xor
test
mov
jne
mov
ror
dec
iret
in
or
lods
jbe
adc
in
lds
scas
lahf
lcall
jmp
je
or
insb
loope
or
cmc
pop
arpl
sbb
ja
inc
mov
mov
arpl
imul
pop
or
add
loope
insl
sbb
pop
adc
mull
lret
fisttpll
push
jp
pop
mov
lock
aad
out
sbb
pop
push
dec
icebp
testl
add
scas
cli
xchg
pop
xchg
test
in
mov
pushl
negb
push
lret
add
xchg
pop
pop
ds
das
icebp
dec
das
push
mov
jbe
orps
lcall
gs
add
mov
popf
xchg
ret
inc
sbb
inc
adc
inc
pop
cmp
jbe
into
or
jae
es
and
sbb
jecxz
stos
pusha
shlw
insl
insb
mov
call
rcl
rorb
out
adc
or
push
xor
mov
pop
cmova
push
mov
push
incb
mov
cmp
call
push
dec
int
mov
rorl
cmp
push
mov
fsubrs
push
mov
mov
shl
lods
movsl
mov
sahf
and
or
rorb
scas
hlt
sbb
sbb
mov
mov
insb
data16
icebp
pop
jno
xchg
and
addr16
jb
sbb
dec
cmpsb
rcrb
mov
pop
xor
adc
outsl
jl
xchg
shll
cmp
cmp
jge
lods
lahf
loopne
das
or
fisttpl
pop
nop
ds
xchg
ds
call
cmp
ds
dec
enter
add
and
pop
and
es
jae
sahf
adc
pop
and
enter
pop
inc
in
pop
inc
xlat
mov
jp
mov
jbe
push
fsts
sbb
int
inc
cmp
popf
and
inc
push
jne
fidivs
xor
mov
adc
clc
mov
mov
outsb
test
orb
scas
call
outsb
outsb
pop
out
mov
jo
ss
fidivrl
rclb
shrb
sub
lods
data16
sbb
dec
cmpsb
push
call
cwtl
stos
lcall
cmp
jecxz
adc
nop
negb
sub
insb
fsubrp
fcoms
xchg
jg
sahf
mov
imul
or
fbstp
in
dec
mov
inc
mov
or
pusha
pop
mov
lret
mov
mov
mov
pushf
pop
jns
xchg
in
lods
loopne
clc
lret
adc
lods
jl
xlat
fnsave
or
mov
sub
cwtl
pop
das
mov
xchg
fld
or
in
add
inc
dec
or
enter
outsl
mov
lock
ja
jo
loop
ror
lock
leave
or
cmp
leave
add
xor
pop
icebp
push
and
pop
xchg
mov
adc
mov
xlat
and
subb
fsub
xchg
ret
lods
or
hlt
and
insb
xchg
pop
iret
data16
das
pop
insl
jno
xlat
dec
jns
push
and
sbb
cmp
dec
movsb
fsubrl
imul
cwtl
add
xor
cmpsl
xor
out
mov
out
or
test
cmp
out
je
cmpb
iret
popf
jns
jecxz
adc
fidivs
push
mov
adc
push
rclb
push
pop
cmp
je
cmp
jne
int3
push
cmp
pop
jb
jg
test
loop
pop
push
push
pop
cmp
je
cmp
jne
int3
inc
dec
loop
pop
lea
stc
pusha
push
test
pop
jmp
pop
out
xbegin
and
mov
scas
push
xorb
ljmp
xchg
cld
jne
pop
pop
jns
movsl
pop
addr16
into
inc
sbb
cmpsb
xchg
add
fstl
sarl
or
cmp
arpl
addr16
mov
gs
sarl
rcll
xchg
inc
arpl
add
xchg
adc
add
decl
adc
je
cmp
jne
int3
push
mov
pop
stc
stc
stc
jp
add
jno
add
jb
sub
jle
add
rol
jae
jb
jne
shl
xor
jbe
push
jb
push
xchg
pop
pop
jp
cmp
mov
lea
jl
je
cmp
loop
pop
push
push
mov
pop
pop
mov
inc
dec
push
rol
pop
nop
mov
push
jb
xor
pop
push
push
pop
cmp
je
cmp
jne
int3
push
jno
jnp
neg
neg
pop
cmc
rol
push
push
jo
sub
pop
pop
jns
and
inc
dec
push
push
sub
pop
pop
jae
push
sub
pop
add
cmp
nop
loop
pop
push
add
pop
sub
add
push
push
push
ror
pop
pop
pop
jnp
and
push
pop
nop
loop
jecxz
andb
push
call
sub
jp
inc
jne
cmpsl
sub
cmp
daa
mov
shll
pop
aad
mov
sbb
add
jb
mov
lahf
pop
mov
loopne
ja
jmp
jl
push
sbb
mov
in
in
push
loop
xor
ljmp
data16
loope
fdivrp
pop
inc
repz
push
int3
pop
pop
jmp
jmp
call
push
push
pop
cmp
je
cmp
jne
int3
jb
sub
jno
jnp
push
push
pop
pop
test
loop
pop
jge
push
sub
pop
test
add
and
jp
push
test
pop
xor
cmc
clc
stc
mov
add
inc
dec
push
sub
pop
test
ror
push
jno
or
pop
sub
cmp
push
add
pop
ja
ror
push
movzbl
stc
push
dec
pop
loop
pop
je
push
pop
push
movzbl
js
jle
ror
push
push
test
pop
pop
add
cmc
push
jae
push
add
pop
rol
stc
loop
pop
jbe
jg
jbe
cmp
or
jne
push
cmp
pop
nop
nop
push
pop
add
or
cmp
push
jno
xor
pop
and
nop
push
add
mov
pop
cmp
sub
jp
test
clc
push
call
add
lret
mov
dec
sub
int3
test
push
mov
cmp
dec
fcoms
jmp
subb
pushl
pop
push
push
push
cmp
pop
pop
pop
ja
push
rol
pop
push
push
push
mov
pop
pop
pop
push
movzbl
and
clc
loop
pop
and
test
push
jo
push
test
pop
pop
push
je
test
pop
stc
cld
mov
shr
test
jne
jmp
sub
push
add
pop
loop
jecxz
pusha
sti
push
adc
cmp
stc
push
jo
sub
pop
dec
inc
or
or
clc
push
pushl
xor
pop
pop
push
mov
pop
or
jmp
rcr
fstl
jmp
divl
inc
inc
sbb
scas
mov
testl
push
divl
push
and
jae
xor
loope
ss
inc
push
inc
add
inc
inc
loop
jecxz
daa
cmc
cmp
mov
js
push
and
shlb
testl
std
jae
filds
in
pop
pop
bound
jns
in
pushf
pop
push
pop
jmp
jge
inc
dec
jnp
in
or
sub
jne
sub
test
test
or
or
jecxz
lret
lea
mov
cltd
push
pop
cmc
sbb
fwait
mov
cmp
inc
push
movzbl
cmp
mov
loop
pop
jg
push
inc
dec
pop
nop
cmp
jge
push
mov
pop
cmc
push
jle
jg
add
pop
cmp
nop
add
push
movzbl
ror
jbe
and
stc
stc
jb
sub
jno
xor
push
push
push
jp
lea
pop
pop
pop
push
shl
pop
jp
xchg
xchg
push
jle
push
push
clc
pop
pop
pop
cld
sub
push
jnp
push
rol
pop
pop
push
shl
pop
or
clc
loop
pop
rol
add
loop
jecxz
aad
dec
cmp
ret
jp
data16
aad
sub
mov
adc
jns
mov
or
or
out
fsubrs
lods
inc
jnp
lock
test
jnp
push
fnop
pop
dec
jne
push
test
pop
loop
jecxz
add
inc
push
call
insb
movsl
cli
xchg
and
sub
stos
push
rol
sub
mov
cmp
lret
lret
add
and
lock
aad
mov
xchg
outsl
xchg
or
in
sub
ret
cltd
pop
lea
repnz
out
xchg
inc
stos
mov
jne
orl
out
shll
inc
jp
andb
int3
sarl
xorl
mov
push
cmp
push
repnz
mov
mov
xlat
cmpsb
jns
inc
pop
scas
mov
iret
je
popa
test
call
xchg
mov
scas
movl
or
mov
and
sbb
inc
aam
and
sbb
fs
mov
sahf
leave
and
cmp
divl
jmp
add
leave
mov
cmpsb
aad
hlt
add
stos
or
inc
mov
sub
mov
xchg
xor
adc
orb
sar
lret
mov
push
xor
xor
js
xor
pop
push
sbb
add
dec
dec
jo
sbb
fstpl
leave
arpl
insb
jp
sarb
sbb
mov
mov
add
sbbb
jnp
mov
loope
add
pop
xor
je
push
call
rorl
mov
insl
xchg
rorb
mov
sub
xor
std
mov
cli
shlb
in
sub
sub
cmp
cmp
push
jg
mov
into
pop
pop
aad
cmp
jp
sub
sbb
xchg
loop
xchg
xchg
mov
ficoms
cmp
divps
xchg
and
mov
insb
or
mov
rcrb
mov
movsb
add
adc
das
test
push
xchg
mov
mov
dec
sub
fmuls
push
scas
dec
push
mov
fldcw
sub
adc
cmp
inc
cmp
cmpsl
mov
or
in
jbe
pop
out
cltd
xor
push
add
jbe
xchg
pop
cmp
gs
repz
or
pop
repz
pop
out
enter
stos
pop
push
scas
jns
loopne
int
call
mov
jl
inc
pop
adc
mov
sarl
pop
xchg
xchg
cmp
sub
mov
inc
mov
leave
cmp
div
lock
xor
ror
ds
pop
stc
icebp
sub
movsb
sti
es
cld
dec
in
push
lahf
mov
mov
ficoms
mov
movsl
pop
outsb
iret
mov
or
leave
pop
movsb
rcr
jg
insb
adc
jno
push
mov
nop
push
adc
mov
or
bound
outsl
mov
in
and
cwtl
insl
pushf
mov
pusha
fstpt
mov
les
xor
fcomip
mov
inc
xor
scas
int3
cmpsl
sbb
cmp
orb
sub
rcrb
cmpsl
aaa
rol
dec
xchg
fisubl
movsl
xor
pusha
inc
fistps
aaa
mov
pop
lods
sub
or
push
out
pop
xchg
sbb
xor
dec
add
push
push
js
dec
sub
lret
sub
pop
inc
fiadds
cld
out
mov
xor
mov
je
out
mov
stos
daa
adc
xchg
jns
pop
dec
xchg
ds
jl
aas
xor
ds
ret
stos
pop
loopne
stos
mov
sbb
in
sbbl
push
fistpl
aaa
mov
xchg
cltd
insl
adc
xlat
push
push
mov
mov
pop
pop
rclb
imul
lea
int3
sub
xor
pop
outsl
add
cmp
push
inc
popf
loopne
ret
outsl
clc
testl
jnp
fstpt
fwait
pop
jle
div
push
mov
sub
mov
lcall
inc
sti
in
xor
push
sub
mov
add
jg
arpl
push
and
and
mov
loopne
fsubl
sar
sbb
sub
js
mov
push
scas
xor
adc
movsb
sub
jl
or
adc
or
inc
scas
inc
gs
add
mov
and
mov
aas
enter
int3
mov
cmp
or
push
jecxz
shll
popa
je
jb
mov
add
xor
movhps
out
addr16
inc
dec
dec
imul
mov
xor
mov
push
jbe
std
ds
pushf
cwtl
scas
cltd
lcall
jl
imul
and
cmp
ret
push
fiadds
mov
jmp
or
sub
mov
sbb
fdivl
adcb
shl
int
push
outsl
pop
inc
xor
mov
sbb
mov
addr16
hlt
sub
mov
xorb
cltd
orb
icebp
adc
xchg
or
ljmp
or
ret
and
pushf
adc
shll
pushf
leave
in
sbb
test
adc
or
xchg
loopne
shrb
cmp
into
push
push
add
std
andl
int
fildl
imul
nop
cmp
mov
jnp
pop
add
aaa
cmpsb
dec
push
xor
ds
mov
scas
das
out
lods
mov
insb
mov
shrl
ds
mov
fldl2t
pop
gs
fisubl
nopl
inc
mov
sbb
jnp
xor
mov
push
push
dec
les
push
xorb
mov
jle
mov
push
ror
mov
inc
fs
testb
jns
inc
jne
sub
stos
ret
inc
sbb
and
repnz
push
mov
daa
mov
adc
jo
sub
fsubrl
mov
dec
push
call
lret
movsb
xlat
mov
fwait
enter
and
stc
dec
fwait
insb
xchg
lahf
cltd
pop
sub
xlat
mov
sbb
jmp
aam
adc
xchg
push
jne
divb
mov
sbb
xchg
pop
lods
int
data16
cmp
out
add
cmc
dec
or
sub
pop
int3
adc
test
cmpsb
in
cmp
jecxz
adc
ljmp
lock
cmp
enter
repnz
sbb
xchg
pop
add
ret
add
into
xor
shlb
in
lods
push
inc
inc
mov
bound
mov
sub
mov
loope
ror
insl
not
or
xchg
sub
jne
adc
test
cld
adc
pop
sub
mov
mov
sub
mov
sar
lcall
cmp
pmaxub
dec
test
js
lcall
sub
inc
ret
aaa
shrl
div
fdivrs
test
jno
dec
js
xlat
bound
jle
inc
lret
add
repnz
or
sub
or
pop
xchg
dec
mov
xor
mov
pop
jnp
sub
adc
jne
xor
mov
jbe
in
test
fs
sub
ficoml
popf
jbe
out
and
or
int3
adc
aaa
adc
rol
mov
jb
arpl
add
fildl
push
pop
test
pop
sub
popa
std
arpl
sub
int3
sbb
pusha
add
mov
gs
mov
xchg
movsl
fs
fdivrs
or
call
repz
mov
and
mov
dec
sbb
inc
push
outsl
jl
daa
xchg
mov
lahf
add
mov
jecxz
add
add
mov
pop
push
repz
sub
cltd
mov
pushl
add
add
rol
ret
lret
xor
and
or
outsl
enter
and
imul
and
xor
sarb
sub
lret
inc
sahf
mulb
xor
and
scas
add
nop
inc
hlt
sub
or
loopne
imul
pusha
inc
jns
lahf
mov
mov
or
jno
fdivrs
push
in
xchg
orb
ret
incl
dec
push
fldenv
daa
cld
jne
pop
pop
and
ja
xchg
jge
adc
adc
jle
stos
xchg
or
test
fldl
fdivs
ret
sub
out
popa
sbb
inc
adc
push
lods
adc
xor
inc
cs
loope
xor
das
lock
jo
and
ret
mov
sub
dec
ja
daa
das
dec
ds
hlt
jns
ret
loop
outsl
enter
push
push
mov
int
mov
push
inc
cli
out
subl
cmp
lods
mov
call
mov
lcall
and
push
cli
or
push
rorl
hlt
in
cld
mov
insb
cmpsl
cmc
push
pop
daa
adc
mov
ret
jg
into
push
sub
add
push
rolb
push
cld
aaa
or
movsl
cmp
dec
sbb
xchg
cs
popf
loop
lods
pop
test
movsl
sbbb
in
sbb
cs
jnp
fmul
pop
pop
ret
dec
popf
rorl
ret
out
leave
hlt
sbb
and
adc
dec
inc
bound
les
jne
jae
xor
xorl
test
mov
pop
or
xor
jno
cmpsb
mov
ret
aas
mov
pop
sbb
dec
xchg
mov
inc
dec
jp
idivl
fs
jnp
bound
incl
es
shlb
cmc
pop
add
les
push
pop
sub
inc
push
fcompl
inc
xor
jecxz
cmp
mov
mov
and
add
cmc
or
clc
mov
dec
lock
xlat
bound
xchg
sub
clc
out
push
push
sarb
and
sub
sbb
xorl
dec
mov
movsl
mov
add
or
pop
inc
mov
pushf
push
add
pusha
sbb
lahf
sub
cmp
xor
hlt
push
lret
sbbb
sub
push
sub
scas
pop
mov
ret
push
xor
cmp
lea
lahf
cmpsl
shrb
push
pop
mov
pop
xor
push
ss
movsb
int
repz
int3
pushf
sbb
cmpsl
ja
push
xor
sbb
xchg
std
scas
test
fdivrs
xor
inc
mov
fiadds
and
push
inc
jo
mov
test
es
jp
jecxz
sbb
lret
push
xor
push
addr16
mov
lcall
andnps
out
fcompl
test
mov
mov
ss
xchg
cli
mov
sbb
mov
mov
pop
or
push
jb
ffreep
test
loop
dec
aaa
dec
jb
movsl
xchg
add
cmc
adc
dec
int
outsl
dec
aaa
inc
xor
sbb
sub
mov
icebp
pop
xchg
dec
pop
adc
adcb
mov
mov
dec
mov
inc
lds
push
sub
aaa
or
mov
push
inc
imul
repz
mov
aam
nop
dec
jecxz
xlat
cmpsb
bound
call
mov
insb
pop
scas
jge
pop
fbstp
mov
lods
cmpsb
es
subl
or
add
shlb
dec
js
xchg
push
xchg
mov
xchg
pushf
test
mov
mov
or
das
pop
nop
test
xchg
arpl
push
mov
and
add
xchg
fxam
sti
dec
dec
ret
mov
shlb
cmpsb
xchg
das
sbb
jo
imul
out
insl
dec
and
ja
lret
sub
mov
outsb
or
xchg
mul
bound
ret
hlt
inc
xchg
rcrl
repz
cmp
sub
call
sbb
sub
insb
cmp
shll
jno
jl
stos
lret
fsubs
pop
xor
xor
shrb
ss
inc
jno
inc
xchg
gs
pushl
sbb
jne
jbe
mov
imul
mov
xor
pop
inc
adc
pop
sub
jnp
sti
imulb
sbbl
sbb
cmp
cmp
adc
call
mov
mov
shl
inc
outsb
pop
xor
imul
pop
in
scas
stc
imul
aas
pop
ja
shll
daa
cmp
or
iret
in
push
nop
xchg
xor
flds
mov
jge
xor
pop
push
adc
cmp
mov
add
pusha
mov
xchg
sbb
inc
xor
inc
adc
pop
mov
inc
out
xchg
test
imul
fmul
outsb
nop
xchg
sub
loop
andb
lods
mov
in
xchg
xchg
ds
inc
lret
test
stc
jmp
enter
shrl
repnz
aas
jae
lcall
mov
lods
cmpsl
js
fwait
testb
shll
shll
push
cld
fwait
test
std
jge
lods
xchg
jle
ffreep
push
in
cmp
sbb
cmp
sub
xor
dec
jg
std
popf
cmp
test
mov
test
mov
in
pop
pop
jae
fadds
push
les
xor
inc
push
fwait
pop
push
data16
shr
adc
sub
popa
mov
test
xchg
xor
clc
bound
nop
movsl
and
dec
fcoml
or
out
fldcw
imul
movsl
and
mov
ret
aam
dec
das
sbb
imul
into
and
pusha
push
or
fwait
sub
and
lcall
paddw
jl
outsb
clc
adc
or
cmpsl
int
in
mov
enter
or
in
subb
sbb
inc
sub
out
out
rcrb
into
sbb
push
pop
and
aaa
sqrtps
xchg
pop
adc
sbb
add
cwtl
mov
leave
flds
subb
jbe
icebp
dec
fs
mov
scas
daa
cltd
cmpl
xchg
mov
cmc
pushf
movsb
mov
out
jecxz
pmaddwd
inc
xchg
popf
sub
cmp
sub
inc
outsb
out
aam
stos
push
and
or
xchg
call
scas
xchg
sbb
dec
int3
mov
fxch
xchg
xchg
mov
in
js
cmc
mov
push
jnp
add
xchg
sti
hlt
inc
shr
in
shlb
push
jg
or
test
clc
ret
rcrb
pop
andb
iret
pop
inc
xor
xor
sbb
arpl
sbb
arpl
push
aam
mov
dec
dec
mov
cmp
aaa
mov
lret
outsl
scas
leave
icebp
andl
orb
lahf
and
test
jo
pop
xchg
in
mov
fisttps
mov
sbbb
scas
and
cvttps2pi
repnz
in
out
mov
cld
imul
mov
adcl
inc
adc
jle
leave
testl
movsb
fwait
pop
in
dec
and
jne
addr16
movsb
shlb
imul
lret
fwait
push
push
cli
arpl
lods
cmp
xchg
sbb
out
fmuls
cmp
sbb
mov
xchg
sbb
pushl
addl
push
inc
outsl
inc
mov
cwtl
push
test
stos
adc
sbb
fs
sbb
jns
xchg
mov
jle
dec
data16
inc
fmuls
jl
add
scas
fldcw
movsl
cmp
mov
mov
jno
jb
cmp
xchg
lahf
fnstenv
push
idivl
adc
ds
dec
pop
mov
push
add
jp
scas
and
xchg
aaa
clc
adc
fs
xor
xchg
jb
pusha
pop
popf
pop
movsb
imul
pushf
das
movsb
test
mov
push
cmc
mov
push
fwait
mov
cs
scas
dec
dec
cltd
or
arpl
notl
lcall
mov
mov
in
mov
xor
hlt
xchg
dec
scas
sbb
lods
lock
pop
pushf
daa
or
pop
push
je
pushf
je
mov
stc
test
mov
addr16
xchg
lret
faddl
sub
sbb
sbb
and
xor
ret
dec
scas
pop
and
lret
ficoms
or
jge
xchg
popf
mov
jno
orl
lods
les
movsl
or
add
fcmovnb
xchg
fwait
xchg
push
mov
test
sub
aas
push
and
sub
aas
xchg
pop
int3
fwait
xor
popf
mov
pop
xor
jp
dec
mov
and
push
add
or
dec
iret
lods
dec
dec
lahf
js
cmp
or
test
icebp
mov
pop
or
rol
adc
sub
mov
cmp
adc
dec
push
dec
push
lret
jno
xor
ret
sub
std
and
lcall
imul
in
enter
add
mov
push
cmp
dec
push
inc
ret
mov
inc
mov
pop
mov
sbb
jecxz
mov
or
add
xchg
inc
fldl
push
xchg
mov
aad
jge
outsb
adc
add
sbb
jns
psraw
test
cmp
xor
jne
insl
mov
iret
rorl
mov
scas
mov
xor
lock
std
sub
xchg
data16
loop
cmpb
shlb
cs
push
dec
pop
ret
dec
inc
enter
or
lea
push
ljmp
je
mov
mov
xchg
icebp
pop
loop
push
out
pop
and
clc
jp
aad
adc
sbb
mov
mov
lahf
ds
inc
fidivs
ja
icebp
xor
push
xor
sbb
stc
pop
mov
and
les
aas
iret
cmp
sub
adc
xchg
mov
and
xor
xchg
ja
sbb
loope
lds
lock
lods
sub
push
mov
or
clc
imul
or
dec
xor
scas
mov
out
clc
and
lcall
dec
dec
jmp
cli
lods
iret
in
lods
mov
adc
lret
fmuls
cmp
cmp
fwait
mov
call
addr16
clc
imul
push
mov
movsl
into
mov
test
js
lcall
loopne
insl
jnp
inc
loopne
dec
out
mov
cmc
jge
sub
add
sbb
scas
movsl
mov
and
fistl
loop
mov
add
mov
rorb
negl
pop
je
xor
mov
test
lret
pop
mov
call
add
jge
xchg
sub
in
mov
test
push
outsb
push
mov
sub
lea
dec
lock
clc
popa
pop
xor
xor
ret
cli
icebp
mov
dec
and
jo
adc
adc
shlb
push
je
fiaddl
js
test
push
xorb
hlt
ret
shll
es
es
xchg
cld
jb
js
jo
mov
lcall
lcall
dec
and
dec
fcmovnu
adc
ja
nop
arpl
inc
xchg
pop
pop
sbbb
and
cmp
leave
or
pop
sbb
fistps
jbe
cmp
pop
mov
pop
jae
out
mov
inc
cltd
dec
dec
pusha
jecxz
rolb
mov
or
jmp
push
push
popf
fisttps
adc
and
pop
mov
mov
mov
sub
dec
pop
dec
ja
fsts
add
ja
in
lods
sahf
adc
lret
push
cltd
shr
jns
flds
int
or
mov
inc
xchg
push
sub
dec
mov
fcomip
xor
jnp
mov
cli
mov
or
decl
out
dec
and
adc
or
pushf
adc
xchg
or
inc
sbb
dec
addl
jg
lods
fcom
or
mov
fwait
cltd
aas
adc
es
mov
gs
aaa
mov
sbb
and
out
into
rorl
je
add
push
jl
in
cwtl
jb
pop
fwait
pusha
inc
ds
adc
push
ret
jae
nop
xlat
xchg
imul
pushl
fnstenv
ficoml
ja
sbb
cmc
sub
cwtl
in
out
mov
jecxz
jmp
orb
jb
imulb
iret
scas
not
sar
repnz
add
int
bound
lret
or
push
in
loopne
lcall
mov
fwait
test
cmp
in
test
cmpl
ret
les
mov
dec
or
push
dec
popf
push
ret
stos
jge
pop
in
jecxz
stos
repz
inc
and
insb
jg
cwtl
jnp
cwtl
fwait
les
cmp
add
stos
scas
in
loope
aad
sbb
dec
inc
js
push
fstpt
fsts
add
cmc
int
cwtl
mov
movsl
sbb
or
adc
aam
outsl
bound
push
push
ret
nop
mov
push
adc
or
mov
shl
dec
mov
ja
mov
mov
cltd
jo
iret
cmpsb
dec
out
dec
out
lods
add
fldl
and
sbb
inc
add
fs
dec
nop
imul
mov
xchg
lret
mov
pop
int
insb
leave
aam
jmp
inc
cltd
inc
ficoms
lods
sbb
imul
rclb
push
cld
test
sti
cmp
mov
stos
popa
insb
sahf
test
nop
sbb
adc
jnp
push
xchg
mov
xor
or
cwtl
mov
icebp
mov
fistpll
int
mov
gs
mov
mov
sti
xchg
or
sub
bound
sbb
ja
jno
dec
xor
dec
cmp
inc
out
in
shll
add
mov
stos
jle
mov
mov
pop
push
inc
jl
ljmp
pop
loope
sub
lcall
into
adc
xchg
dec
stc
or
repz
dec
xor
push
rcr
mov
sbbb
shr
cmp
mov
sub
pop
cmp
adc
mov
dec
inc
sti
inc
dec
roll
mov
xor
sbb
int3
sub
fs
shr
lret
lock
xchg
mov
das
test
in
outsl
pop
aaa
inc
lret
dec
out
in
cmp
mov
loopne
fldcw
sub
scas
sub
cld
or
adc
jne
cmp
xor
pop
addr16
in
in
lcall
out
dec
mov
dec
inc
pop
xchg
loope
and
and
xchg
mov
addr16
and
pop
push
insl
fisubrs
ja
pushf
sub
mov
sti
sbb
mov
mov
mov
out
hlt
mov
cli
inc
fnstsw
adc
mov
pop
aaa
xor
add
movl
rcrl
stos
nop
push
inc
cmpsl
dec
xlat
push
xor
mov
fstl
push
jle
adc
and
aam
addb
les
pop
lahf
hlt
xlat
pop
push
pop
js
pop
in
mov
adc
and
iret
arpl
jge
xor
cmp
jne
xchg
cmp
scas
add
mov
dec
push
mov
inc
clc
fnstenv
ja
mov
gs
inc
mov
adc
cltd
pop
cmpsb
jnp
daa
sti
bound
imul
pusha
adc
mov
orb
xchg
xchg
xor
out
fadd
jbe
xchg
fildl
or
stc
loop
pop
ror
or
push
jno
cli
mov
lcall
jno
ficoms
push
add
shlb
adc
jnp
popa
hlt
push
jmp
repnz
loopne
stos
cmpsb
gs
fwait
insb
mov
mov
jmp
add
jne
or
lea
ljmp
call
cli
int3
add
fiaddl
mov
pop
sbb
repnz
clc
adc
mov
inc
into
mov
in
adc
or
cmp
xor
mov
mov
scas
hlt
jne
mov
add
mov
frstor
in
or
or
pop
call
sarb
cmp
out
and
ss
les
les
cmpsl
cmp
lods
mov
jmp
out
addr16
lea
adc
jecxz
jg
enter
mov
pop
push
adc
adc
pusha
and
cmp
jp
xchg
pushf
ret
rclb
leave
inc
add
cmp
jns
movsb
sar
ja
imul
je
mull
push
shr
pop
sbb
icebp
scas
add
shl
or
mov
or
loop
jmp
fdivrs
or
test
mov
insb
stos
loop
push
mov
stos
push
xor
in
adc
jmp
mov
add
push
or
jns
or
mov
adc
mov
pop
in
sub
lods
pop
pusha
cmp
mov
in
sbb
push
leave
cmp
xchg
dec
lret
push
adc
pop
fcmovu
sbb
add
mov
iret
ja
clc
mov
loop
inc
xchg
mov
dec
ljmp
push
and
aad
mov
xacquire
push
loop
ljmp
push
push
outsl
call
pop
cmp
dec
jecxz
xor
inc
pop
cli
mov
add
push
and
inc
imul
addr16
shll
pop
mov
cmp
add
nop
mov
inc
cli
dec
dec
adc
clc
fsubl
fisttpll
test
les
mov
xor
or
xchg
int
cmp
mov
or
outsb
call
push
loope
loopne
popf
jle
jbe
es
pop
orl
push
mov
sarl
push
adc
popf
addr16
scas
add
test
add
notl
ja
rcrb
fistpll
cmp
inc
daa
lea
insb
inc
mov
out
xchg
jl
sbbl
ds
stos
aad
testb
imul
fldl
sub
int
sbb
inc
setp
cmpsb
xorb
and
int3
adc
jb
mov
pop
idivb
lcall
cltd
mov
jbe
stc
cmc
in
in
and
mov
push
mov
sub
test
in
push
fisttpl
adc
call
or
pop
and
jp
ret
dec
jns
jne
add
inc
and
in
mov
jmp
into
int3
into
inc
icebp
add
aas
leave
or
xor
lods
clc
and
xchg
sarl
inc
xor
ljmp
adc
std
stos
adc
mov
xor
scas
sub
test
mov
xchg
popf
pop
cmp
xchg
xchg
aam
arpl
iret
push
mov
and
call
mov
add
pop
es
sahf
data16
ret
inc
mov
movsb
jnp
out
in
push
push
xchg
adc
stos
jbe
shrl
sti
pop
mov
mov
mov
sub
shll
lret
or
insb
adc
xchg
push
pop
cli
jle
mov
mov
jl
cmp
popa
jo
or
lock
mov
xchg
inc
out
rcrl
nop
data16
pop
jl
and
je
pop
pop
sarl
pop
xchg
popf
cs
and
mov
das
test
lret
jecxz
fldt
shll
jo
loope
xlat
sbb
test
rorb
in
mov
xchg
and
pop
jle
test
pop
cmpsl
fcmove
adc
xchg
repz
popa
mov
fwait
imul
and
int
sbb
scas
arpl
js
fbld
scas
add
push
jle
pop
mov
mov
repz
rcrb
pop
test
in
adc
imul
inc
add
push
stos
and
pusha
cmp
outsb
add
mov
ljmp
mov
in
inc
idiv
js
iret
adc
or
out
ret
pop
aad
lods
and
inc
mov
inc
sub
test
dec
lock
lret
enter
icebp
cmp
nop
sbbl
inc
call
es
gs
adc
mov
lock
xchg
psllq
rcll
ret
scas
mov
dec
sbb
mov
jmp
or
xor
mov
mov
mov
pop
lret
fnstenv
pop
mov
jg
cmpsl
ret
inc
dec
jg
in
push
pop
xchg
ficompl
mov
jl
pop
xor
xchg
mov
and
xchg
fcoml
pop
inc
xor
test
adc
mov
ret
jp
repz
or
stc
aaa
dec
inc
test
popa
lods
adc
xchg
xlat
insl
addr16
dec
out
jecxz
out
popf
aad
mov
mov
and
hlt
inc
test
pop
cmp
imul
les
mov
lahf
lods
cmp
imul
outsl
pop
int
mov
cwtl
mov
adc
cwtl
mov
fwait
jae
inc
pushf
in
out
jno
cmc
aaa
test
dec
mov
sahf
jle
add
ss
sti
popa
dec
inc
fdivrs
js
add
jmp
pusha
popa
lahf
icebp
sbb
mov
lahf
ljmp
ret
paddw
xor
loopne
fstl
lock
cmp
sub
ficoms
pop
push
jmp
adc
outsl
not
dec
finit
pop
mov
insb
and
cmpsl
jp
sbb
and
mov
loope
subl
lds
xchg
mov
orl
test
mov
mov
sub
pop
mov
loop
add
mov
jns
xchg
fsubs
cmp
mov
enter
sbb
sub
data16
xorb
rcrb
jo
arpl
imul
nop
pop
mov
jbe
pop
cmp
push
push
lock
into
inc
adc
jle
stos
jge
pop
add
sahf
xchg
pop
xor
in
or
jmp
xor
js
jb
scas
sbb
xor
sub
addr16
push
into
or
pop
pusha
fsubrl
push
and
mov
js
das
fwait
pop
fildll
adc
sbbl
sbb
ljmp
and
cmp
mull
mov
adc
or
jae
ja
fcmovnbe
dec
and
jmp
mov
push
add
mov
nop
je
movsb
sub
sarb
fidivrs
or
adc
movsb
cltd
into
sti
jb
mov
xor
aad
outsl
rcll
mov
sbb
mov
pop
nop
into
inc
jnp
outsl
mov
adc
shrl
mov
inc
clc
sub
fldl
push
je
pop
mov
and
addr16
dec
sahf
sti
pushf
cmp
mov
imul
adc
jl
xlat
add
push
cltd
ss
dec
pop
mov
push
daa
cmp
adcb
subb
mov
jae
adc
repnz
sub
sub
push
shrb
es
leave
pop
dec
sub
xchg
xor
sub
sub
mov
add
adcl
call
mov
inc
clc
mov
sbb
cwtl
pop
dec
sub
sbb
cmp
jo
rol
in
cmc
inc
fbld
push
sub
add
incb
hlt
mov
sbb
ljmp
sti
xor
js
adc
pop
lret
mov
sub
xchg
mov
cmp
inc
movsl
rcll
stos
mov
dec
loope
ja
in
sti
cmp
fs
jmp
xchg
xor
sbb
mov
mov
mov
pop
test
outsl
ss
daa
out
cs
jns
mov
addr16
push
cmp
mov
loop
pminsw
lahf
mov
xchg
xor
pop
pop
xchg
xor
sub
inc
adc
mov
mov
inc
jg
sarl
push
lcall
in
pop
das
aam
test
test
movsb
dec
cmp
mov
leave
xchg
ss
push
lret
out
sarb
shl
jge
andb
das
dec
mov
push
pop
out
mov
and
jmp
out
les
pop
jecxz
inc
mov
negl
dec
jmp
pushf
sbb
popf
mov
adc
scas
and
popa
out
stos
xchg
ja
test
push
cli
scas
sub
andb
jp
push
andl
icebp
dec
sub
push
mov
sahf
adc
ss
mov
add
push
lret
mov
ljmp
repnz
shl
cmp
push
in
mov
xchg
fsub
dec
xchg
or
mov
lcall
sbb
push
pop
inc
outsb
jne
push
arpl
in
mov
sbb
cltd
cmc
xor
sub
cld
hlt
xchg
or
cmp
mov
pop
mov
adc
pop
imul
aad
lock
cmp
mov
mov
imul
jno
andl
test
in
fcomp
int
mov
lock
mov
mov
mov
or
je
and
stos
stos
and
imul
xchg
scas
imul
fnstenv
enter
rcrb
mov
jmp
fsubp
xchg
test
sbbl
xchg
push
outsl
dec
jbe
out
mov
adc
cmpl
jne
push
sub
cli
mov
mov
inc
in
pop
pop
xor
movsl
mov
lods
mov
cmp
ds
loope
cmpsb
mov
jo
pusha
jbe
into
cmp
xchg
and
jne
fildl
loope
sub
push
js
bound
add
adc
jbe
leave
push
pusha
jg
pop
cmp
pop
or
xor
clc
scas
cli
fisttps
ljmp
hlt
jge
lret
push
push
jg
inc
mov
sub
test
ret
mov
pop
pop
ja
push
push
jg
aam
inc
outsb
add
loopne
inc
or
push
adc
dec
mov
or
test
std
ret
cmc
test
dec
inc
mov
and
gs
orl
add
fldenv
mov
sbb
in
movsl
xlat
insl
mov
jge
and
in
mov
xchg
push
loopne
pop
inc
test
lcall
aaa
test
mov
cmc
inc
stos
mov
mov
xchg
jmp
cmc
int3
sub
shll
jne
mov
jno
push
xchg
xchg
stos
pop
mov
mov
pushf
mov
jo
outsl
and
pushf
xor
rcrl
dec
xchg
imul
fdivrs
mov
inc
xchg
es
add
aas
lahf
add
inc
mov
sahf
mov
sub
sub
or
icebp
aas
pop
cmp
mov
mov
push
jbe
cltd
add
dec
and
adc
dec
sti
repnz
lret
dec
aad
scas
pop
pop
add
jnp
add
adc
dec
insl
stos
push
stc
lock
adc
adc
in
mov
xlat
sbb
fistl
inc
shlb
dec
cmc
xor
adc
mov
lock
mov
cmp
cmpsb
iret
fsub
daa
into
data16
adc
test
jle
mov
mov
pop
jbe
in
movsl
rcrb
shll
popa
dec
aaa
vcvttsd2si
test
in
pop
mov
enter
fcoms
dec
inc
mov
mov
jl
jne
js
fldcw
and
mov
adc
popa
fcmove
insb
nop
repnz
xorl
xor
pop
aas
cmovnp
add
hlt
jne
mov
mov
xchg
push
scas
int3
loop
lock
test
push
push
inc
sub
das
mov
movsl
aam
xor
mov
jb
jmp
pop
or
jns
lods
mov
xchg
sbb
daa
jne
jae
mov
pop
lea
cld
nop
ret
lcall
dec
jg
inc
dec
mull
cmpl
hlt
pop
sbb
dec
es
and
int3
sub
adc
mov
mov
movsb
xchg
test
add
arpl
int
push
jg
jmp
bound
cmp
sub
loopne
adc
stos
xchg
insb
sub
cmpsl
out
xchg
and
dec
adc
mov
iret
int
loope
leave
outsl
inc
lret
shrb
ret
or
out
jl
stos
in
je
leave
mov
jecxz
push
sub
dec
cmpsl
push
dec
int3
lret
xchg
nop
ljmp
jle
xchg
xchg
into
and
sub
mov
cmp
or
cmp
ds
int3
pop
pop
lret
mov
adc
xchg
xchg
add
adcl
xchg
lods
push
and
mov
lcall
and
sbb
adc
mov
pop
mov
xlat
add
and
cmp
gs
outsb
fistps
jbe
jae
and
pop
xor
shrl
movsb
sbb
cwtl
xchg
out
dec
imul
shrb
inc
faddl
xchg
mov
xchg
sarl
inc
add
mov
xchg
out
pop
lea
dec
cs
cli
cmp
mov
push
sub
cmp
mov
pop
insl
push
psubw
cli
dec
insl
pop
repz
faddl
lods
repnz
insb
in
cmp
popf
outsl
xchg
cs
fsts
adc
sbb
out
insl
lret
mov
ds
pop
outsb
repz
sti
cmp
out
mov
loopne
sarl
add
aam
and
lahf
insl
xor
lret
lods
stos
push
mov
sti
dec
adc
and
push
add
and
xchg
shr
es
jae
lea
add
pop
adc
adc
mov
jmp
rolb
jmp
clc
outsl
leave
fcomi
cltd
adc
outsb
inc
sbb
push
pusha
adc
sarl
pusha
out
das
daa
jo
pop
test
push
push
or
popf
imul
leave
mov
sub
mov
lods
cmp
mov
clc
push
or
fidivs
ja
mov
cmp
inc
into
add
ss
scas
adc
inc
xchg
out
mov
sub
stos
jge
enter
cmp
test
lea
subl
aam
ss
subl
jae
xlat
arpl
inc
outsb
loop
inc
outsl
mov
and
and
aam
pop
jecxz
imul
cmpsb
test
cmc
loope
inc
xor
xchg
or
das
fisttpl
adc
enter
inc
push
mov
pop
xor
pop
dec
mov
or
aam
xor
hlt
cmp
mov
jmp
scas
rol
inc
or
jae
add
jecxz
les
lods
outsl
pop
jae
dec
loopne
sub
int3
inc
repz
jecxz
xchg
cmp
in
cmp
data16
in
xchg
adc
je
jmp
in
mov
addr16
adc
imul
pop
test
jle
cmpsl
lcall
mov
ja
int
cmc
out
fwait
mov
adc
les
call
mov
fstpt
mov
push
push
jge
test
xchg
or
daa
xlat
loopne
test
sbb
icebp
cmp
push
xchg
pop
xlat
xchg
data16
inc
int3
dec
ficomps
subl
dec
adc
jl
inc
fstpt
repz
push
push
lods
cwtl
mov
push
fs
insb
and
xor
bound
sahf
add
dec
loope
cmpsl
fimull
inc
dec
stc
icebp
inc
sbb
out
out
cwtl
and
lea
test
and
frndint
notb
rcrb
xchg
mov
lret
pop
cmp
lods
mov
mov
mov
cmpb
push
mov
add
rolb
push
test
add
es
or
or
cmc
lret
jne
pushf
orl
xlat
jp
out
aad
xchg
cmp
or
cld
shl
dec
pop
xchg
aaa
ljmp
fists
dec
pushf
and
add
lahf
in
push
and
repz
das
aaa
mov
out
test
pushl
jmp
lock
leave
stos
ss
jmp
xor
sub
inc
scas
pushf
push
xor
or
or
leave
rcl
fstpt
sub
pusha
sarb
leave
lret
mov
push
fsubs
cmp
je
divb
xor
pop
push
nop
sahf
push
cmpsb
mov
mov
sbb
pop
loop
and
in
mov
pop
pop
lret
inc
in
cmpsb
xchg
lock
mov
sbb
lcall
imul
push
mov
aad
sbb
mov
xchg
add
ret
cli
push
xchg
inc
xor
test
subl
xchg
sbb
jmp
mov
inc
imul
cmpl
add
pop
mov
pop
ljmp
push
dec
jmp
cs
sbb
stc
cld
shrl
ficompl
aam
jbe
pop
iret
ljmp
dec
sbb
ret
mov
rcl
sub
sub
add
cwtl
lods
jmp
inc
insb
add
outsb
icebp
add
sbb
mov
cmp
les
ss
outsb
mov
sub
sub
fstps
lods
fidivrl
fidivrs
sbb
mov
bound
mov
aam
cli
fst
dec
ja
mov
and
adc
and
and
add
mov
pusha
xor
fidivl
sarb
and
iret
in
insb
lods
mov
mov
jge
cmc
call
sbbl
sti
mov
jb
and
nop
cmp
outsb
xor
and
ret
imul
bound
pop
mov
int3
insb
out
in
les
cmpsb
shll
cwtd
jmp
fadds
pop
fistps
mov
xor
and
adc
pop
mov
inc
sbb
mov
add
in
adc
push
add
sbb
aas
test
shrb
jno
cmp
cmp
or
or
mov
je
ljmp
and
ja
add
stos
mov
adc
stos
cmp
mov
out
lods
sub
cmp
test
scas
bnd
push
das
sub
outsb
xchg
or
je
das
jae
addr16
rclb
int3
push
int3
in
sbb
or
cmp
cmpsl
movsl
pop
repnz
inc
loope
mov
xor
bnd
inc
cmp
inc
cmp
jnp
cmp
pusha
and
push
mov
lds
cli
loop
ljmp
or
out
dec
loope
mov
sbb
cmp
jp
je
push
mov
add
sti
aad
lea
or
icebp
test
mov
adc
imul
test
lea
xlat
pop
add
arpl
cmpl
icebp
push
aam
sarb
pop
push
cwtl
add
ja
jl
and
dec
js
add
in
mov
pop
outsl
test
out
push
mov
test
cmp
xlat
aas
sub
mov
xor
sub
aaa
mov
inc
xchg
adc
pushf
push
rclb
test
orb
xor
imul
sub
add
add
push
daa
arpl
sub
scas
jo
push
aas
cli
cltd
dec
pop
enter
mov
lock
sub
arpl
daa
or
movsl
xor
add
pushf
mov
jecxz
loopne
std
cmc
jno
sbb
inc
mov
mov
dec
enter
push
push
xchg
adc
mov
sahf
mov
jle
mov
aaa
leave
ja
arpl
aam
aad
sub
js
mov
rolb
and
push
sub
jmp
js
sbb
shll
adc
dec
xcrypt-cbc
cmpsl
nop
xor
jecxz
mov
mov
mov
cwtl
sub
out
popl
mov
xlat
cltd
sbb
inc
aam
cmp
or
hlt
xchg
or
not
jno,pt
push
and
dec
leave
divb
and
dec
lods
sti
cmp
sub
js
cmp
out
push
or
aam
push
js
add
insb
aaa
scas
push
mov
insb
jb
aas
adc
push
and
fcomp
add
cmpsb
adc
pushf
cmpl
add
xchg
xchg
cmp
xchg
hlt
pushf
mov
xchg
iret
xchg
add
pop
lea
mov
add
aam
inc
fs
inc
pop
and
ja
cmc
cmp
xor
fisttps
dec
xchg
lock
mov
push
sbb
pop
test
loopne
hlt
loop
push
pop
dec
add
xchg
test
push
incb
in
sub
mov
sti
mov
jle
pop
das
sbb
xlat
jnp
xlat
jle
inc
icebp
add
cmc
jg
inc
jno
jno
cltd
jg
sub
ds
aam
add
jg
jnp
lds
repz
pop
mov
rorb
hlt
mov
lret
add
iret
ret
mov
or
cwtl
cld
cwtl
loopne
xor
xor
jl
add
loopne
lea
in
pop
mov
push
loop
adc
pop
out
pop
shll
stos
dec
fisubrl
and
lahf
pop
int3
in
movsb
cmp
int
sub
push
jb
dec
and
push
push
in
scas
dec
or
adc
pop
mov
ss
xchg
cmp
mov
xor
jo
mov
push
jne
sahf
pushf
into
sub
mov
or
adc
jge
push
inc
outsl
sub
lret
cltd
mov
aam
inc
xchg
cmp
pop
xor
cmp
xchg
xchg
push
out
sbb
mov
lret
sti
adc
push
and
jl
daa
jg
in
dec
in
movsb
mov
mov
push
ljmp
pop
xchg
mov
sub
and
jne
jecxz
add
jns
sbb
xchg
clc
adc
push
stc
divb
ret
xchg
pushf
jne
int3
int
cs
aaa
sub
push
xchg
adc
xchg
or
jge
and
arpl
inc
jmp
icebp
out
cld
aam
fxtract
lret
popf
adc
lret
repz
aas
fisubrs
insb
std
push
mov
out
lods
scas
pop
lds
ficoms
pusha
popf
push
and
add
in
pushf
ss
cmp
sbb
fldl
data16
dec
jmp
or
mov
mov
aam
pop
inc
and
sub
cmp
xchg
mov
add
pusha
push
sbb
xor
cmpsl
jl
fadds
ret
sub
or
out
mov
lcall
and
jo
aam
push
xchg
mov
inc
das
push
movsl
scas
inc
cli
arpl
or
ja
pop
test
imul
gs
je
add
add
iret
in
dec
sbb
jle
pop
mov
sbb
push
aad
cmp
inc
dec
mov
jb
sub
mov
jmp
inc
enter
inc
movsl
xor
dec
test
sub
je
push
cwtl
out
add
sarb
cltd
inc
cmp
outsb
pop
loopne
mov
icebp
xor
sbb
mov
or
sti
cltd
push
and
dec
mov
inc
fsubl
inc
fs
add
popa
stc
in
popa
adc
cltd
or
jbe
call
enter
xchg
mov
or
stos
insb
xor
jp
orb
lods
pop
add
and
out
out
push
sahf
sbb
outsb
out
xchg
mov
loop
inc
test
fidivl
out
cmp
in
jmp
cmpb
sub
jb
adc
dec
jo
mov
xorb
adc
mov
add
cmc
inc
daa
or
ljmp
mov
sub
lods
fwait
pop
jo
inc
cmp
jno
lret
and
loopne
ret
mov
daa
jle
cs
ja
divb
mov
clc
or
adc
mov
mov
cmpl
mov
mov
xorl
clc
mov
push
arpl
sbb
pop
pop
pop
jno
jb
out
loop
hlt
xor
jb
out
sbb
test
adc
sbb
mov
notb
stos
add
push
lea
lock
sub
fnstcw
mov
mov
in
push
outsl
mov
dec
into
lock
add
lcall
inc
jp
dec
cmc
jl
lea
sbb
pop
dec
mov
and
jg
nop
daa
js
or
fildll
and
idiv
adc
jns
scas
lret
aas
cltd
test
test
cmpsb
dec
fstps
cmp
call
push
cld
movsl
sbbl
or
jge
xchg
stos
push
mov
jne
aaa
cwtl
int
sarb
push
jb
xor
int3
lods
or
mov
movsb
jo
cmp
inc
or
xlat
je
push
sbb
mull
cmpsb
jl
dec
jno
outsl
mov
jb
lods
xchg
push
iret
add
leave
mov
or
and
in
lods
inc
out
and
repz
add
mov
sub
addr16
jbe
int
xor
addb
pop
in
mov
fsubl
pop
xchg
mov
or
fdivs
mov
outsb
push
jp
dec
and
fwait
cmp
call
and
ficoml
ss
pop
stc
xchg
pop
iret
or
imul
xchg
js
fs
das
pushf
jmp
sti
das
cmp
sbb
in
xchg
int3
cmp
addl
add
xchg
loopne
sahf
push
xor
cmp
xor
sahf
cmc
movsb
sub
xchg
pop
mov
xlat
jg
int
fwait
inc
fwait
inc
das
daa
test
imul
push
mov
call
insl
inc
cmpb
mov
cmpsl
les
ja
in
mov
push
mov
dec
roll
out
or
push
xchg
xchg
add
les
adc
in
inc
push
arpl
add
jmp
popa
dec
mov
leave
ret
cmpsb
jo
mov
in
fcomip
sbb
insl
add
sub
xchg
iret
mov
mov
push
lds
inc
push
adc
and
jbe
out
cltd
ljmp
push
mov
jge
cmp
rcr
movsl
jmp
add
inc
xchg
pop
push
icebp
push
pop
dec
xor
jmp
add
sub
loope
inc
nop
les
mov
push
xor
inc
gs
leave
rolb
push
hlt
idiv
dec
leave
adc
jmp
inc
mulb
fsub
lds
pop
adc
popa
adc
or
xchg
mov
xor
sbb
idivb
testb
or
out
popa
mov
push
add
mov
add
jg
pop
subb
test
fstps
and
fisttpll
or
sub
sub
cli
or
js
sbb
aaa
jb
jl
cmp
xchg
xor
or
dec
in
push
xchg
in
js
cltd
mul
jge
mov
out
in
and
ficoml
sub
adc
scas
mov
addr16
mov
cmp
andb
push
stos
stos
mov
or
mov
outsb
adc
mov
pop
and
or
pushf
sub
pop
ljmp
gs
out
sbb
insl
mov
dec
xor
fdivl
inc
stos
orl
cmp
push
loop
xor
mov
sbb
mov
ror
repnz
add
stc
idivl
cld
xchg
push
cmpl
add
addr16
arpl
iret
dec
out
mov
sub
rcrl
gs
mov
sbbb
and
inc
or
push
subb
shr
jmp
inc
adc
add
and
out
add
or
cs
sbb
xor
and
dec
push
je
fstpl
in
push
pop
std
pop
fsts
or
jne
icebp
mov
enter
cmp
or
in
cmp
push
lret
ret
jbe
subl
sub
mov
cwtl
test
lods
or
jnp
sbb
xchg
mov
jno
sbb
adc
arpl
shl
aas
jnp
push
push
hlt
or
icebp
or
sti
adc
adc
adc
cmp
jb
std
push
push
sarl
cmp
arpl
cmp
ret
shrb
sarl
ss
addl
andl
jg
dec
cmp
pop
add
push
adc
test
int3
or
jmp
xchg
dec
sub
sub
pop
push
dec
push
inc
ret
mov
fiaddl
sti
sbb
scas
or
mov
xchg
pusha
imul
ret
inc
sbbb
pusha
mov
stos
or
cmp
add
out
cmpsb
iret
addr16
scas
sbb
das
push
in
mov
jp
add
arpl
repz
fnstcw
stos
sbb
mov
lret
sbb
int
inc
mov
or
cmp
dec
or
and
out
mov
push
xor
imul
lea
cwtl
test
test
inc
cmc
jmp
or
adc
rol
sbb
dec
fadd
pushf
and
xchg
int
icebp
daa
vmwrite
add
stos
fsubl
cmpsb
add
jb
cwtl
pusha
cmp
into
repz
xor
js
shlb
stc
mov
fxch
pop
sub
dec
repnz
jmp
out
sub
sub
mov
mov
sbb
sbb
shlb
rol
hlt
pusha
fwait
mov
jg
cmpsb
jle
sub
add
addr16
in
aas
mov
or
or
or
rolb
mov
jge
test
fnstcw
aad
int3
in
mov
ficomps
fimull
pop
cmpsb
pop
clc
cwtl
or
jns
movsl
repz
movsl
push
push
add
mov
pop
sbb
sub
jg
cmpsl
iret
sub
insb
xor
lock
movb
xchg
mov
cwtl
fidivrs
inc
push
jno
inc
cld
mov
cmp
ja
mov
roll
xor
sbb
aam
sbb
testl
std
push
ljmp
and
mov
pusha
xor
xchg
into
subb
push
ret
mov
rcr
cmc
xor
stos
push
clc
xchg
lock
mov
push
push
add
push
orl
aaa
lods
leave
cmp
xchg
mov
pop
push
mov
lods
jg
rol
out
iret
sub
insb
jle
mov
mov
out
rcrb
ds
mov
jl
push
imul
test
jge
mov
inc
sti
icebp
xor
sbb
inc
mov
adc
pop
xchg
repz
ds
jp
mov
push
mov
out
sbb
jnp
dec
pop
nop
aad
call
shrb
lds
mov
pop
sti
aam
fsts
cmp
icebp
xchg
aam
push
or
lret
std
lea
cld
je
gs
mov
stos
jns
addr16
dec
fnstenv
sub
fistps
lret
inc
mov
or
rclb
insb
sahf
push
stc
std
jae
jns
outsb
adc
repz
pop
aam
popa
cltd
sub
xchg
cmp
sar
addl
or
in
imulb
std
push
sub
add
stos
stos
cmp
jmp
push
inc
sub
sbbb
jmp
ljmp
sbb
pop
sbb
or
mov
aas
out
jmp
jmp
loope
shlb
or
ret
mov
cmp
lcall
out
pop
fnstenv
xlat
shlb
or
stos
hlt
arpl
add
add
fstpt
cmp
pop
pop
and
and
sti
repz
fstpt
int
adc
jno
xchg
mov
inc
and
fs
fdivrl
dec
and
pop
lar
aad
or
or
inc
mov
enter
fbstp
std
sbb
decl
iret
sti
pop
pop
adc
lret
lea
dec
into
scas
out
or
jp
inc
out
dec
pop
ret
jae
xchg
popf
push
mov
out
push
shl
add
pop
out
inc
lea
pop
lods
xor
mov
fnsetpm(287
fldt
and
sub
insb
daa
faddl
shll
add
xor
adc
add
xor
addr16
inc
mov
fnstenv
or
adc
leave
mov
hlt
xchg
call
push
bound
test
sub
dec
ja
xchg
movsb
sahf
int3
pushf
pop
cmpsb
push
cmp
test
ror
insl
dec
lods
pop
xchg
xor
sub
pop
sbb
in
cs
jae
xchg
pop
xor
std
fdivrp
add
sarl
sbb
mov
cs
outsb
jge
pop
push
int3
test
imull
ljmp
mov
push
cli
scas
sti
iret
pop
pop
fistps
ja
sub
inc
jge
xor
sub
fisubrs
test
sub
lahf
imul
cmp
cmp
aaa
es
push
sub
mov
data16
jns
ret
fildl
shlb
mov
xor
cld
popf
or
push
ret
aas
fsubs
pop
mov
add
rcll
xchg
in
lea
cmpsb
push
cltd
stos
mov
je
xor
mov
mov
fwait
in
jecxz
fisubs
inc
add
rcrl
push
or
ja
sbb
lea
ficompl
aam
fsubp
sub
lret
add
shlb
out
mov
lods
sbb
fdivr
movsb
or
push
arpl
aas
xor
sarb
jo
shl
lods
adc
pop
pop
inc
adc
add
mov
mov
test
incl
fwait
push
or
aad
fcos
hlt
fst
insb
lahf
in
fildl
xchg
or
adc
inc
test
xor
test
inc
dec
movsl
movsb
push
pusha
ret
jae
std
fldcw
mov
fwait
stc
rolb
int3
sub
shrl
add
repz
sub
add
lahf
fnstsw
mov
sbb
jg
fcmovb
mov
add
sahf
js
xlat
mov
xchg
dec
jno
movsb
dec
mov
test
xchg
cmc
scas
jl
aas
sbb
sbb
jg
bt
hlt
arpl
mov
mov
jae
add
movsb
insl
cmpsl
mov
clc
mov
icebp
inc
dec
cmp
mov
sbb
popa
insb
push
mov
cwtl
hlt
mov
popf
std
push
lret
gs
sub
add
sbb
sbb
pop
add
pop
arpl
adc
icebp
test
mov
mov
pop
xor
repnz
push
push
adc
divl
push
cmpsl
lods
mov
mov
sbb
or
adc
fadd
fldt
adc
push
cmpsl
call
ss
test
cmp
sub
adc
jbe
iret
jmp
rorb
push
fisttpl
outsb
xchg
in
imull
pop
cmpsb
sbb
rcr
pop
and
cmp
jne
out
hlt
add
arpl
fldl2e
cmpsb
sub
fcmovne
sub
sbb
pop
stos
mov
mov
and
stc
cmp
jbe
adc
and
add
jns
test
movsl
int3
fdivrs
sub
and
mov
sub
mov
xchg
test
inc
or
add
mov
cmovl
lds
scas
dec
cmp
xor
data16
pop
js
pop
mov
in
adc
and
gs
inc
imul
push
cmp
mov
xlat
fisttpl
cmp
out
push
xchg
push
inc
add
sbb
loop
xchg
xor
imul
and
or
xchg
movsb
xor
imull
jmp
stc
int3
dec
sub
jae
xchg
outsb
push
mov
or
clc
idiv
inc
dec
iret
xchg
out
popa
popa
movsb
jp
xor
or
mov
xchg
or
rclb
mov
add
dec
pop
mov
mov
adc
mov
mov
jne
dec
pop
and
loop
dec
dec
daa
out
xchg
in
mov
jo
mov
out
mov
outsb
lret
out
js
pop
gs
push
pusha
push
pop
mov
mov
or
xor
mov
xchg
mov
fst
ret
fmuls
es
mov
leave
mov
push
pop
and
mov
sti
fistl
test
mov
fimull
cmp
js
sub
mov
icebp
mov
negl
or
mov
stc
dec
pop
es
mov
xchg
mov
sti
adcl
pop
or
outsb
arpl
popf
pop
ljmp
outsb
and
stc
out
scas
cltd
arpl
cwtl
adc
mov
sub
loopne
imul
sbb
invd
mov
dec
mov
inc
aaa
sbb
xor
pop
shrb
xor
pushf
xor
fucom
pop
repz
mov
lods
movsl
push
xchg
ljmp
pop
mov
dec
out
rcl
lea
cmpsl
jbe
cmc
call
negb
push
test
cmp
pop
lock
dec
add
xchg
sub
pop
inc
sub
add
shll
pop
or
imul
mov
lods
shll
sbb
mov
xchg
and
fsubp
xchg
xchg
sub
and
push
sbbb
shrb
or
jno
ret
cmp
mov
mov
push
clc
ret
imul
cs
xchg
cmp
jl
aas
shl
sbb
clc
adc
jne
pop
outsb
adcb
add
aas
insb
mulb
pop
mov
sbb
push
xchg
sub
mov
test
xor
mov
sbb
sahf
xchg
pushf
movsl
rorb
xchg
pop
add
cld
data16
jle
ja
or
dec
cmc
stos
or
and
xchg
movsb
xchg
inc
sub
mov
shlb
loopne
and
repz
sbb
mov
pop
sub
mov
sub
push
jns
gs
jno
cmpl
out
jne
jecxz
mov
mov
xchg
mov
cltd
lcall
sub
std
mov
xchg
xchg
and
into
sahf
jmp
dec
mov
mov
push
mov
inc
sbb
cs
sub
cmc
in
mov
pop
dec
inc
or
adc
jb
xor
sbb
jg
add
popa
add
mov
sti
dec
pop
test
popa
jecxz
mov
je
xchg
xor
fnstcw
jle
movsl
mov
test
mov
bnd
sbb
int3
loope
sbb
scas
jecxz
sbb
ret
jecxz
sbb
lock
fldcw
dec
pop
stc
pop
jns
lret
jne
push
stc
adc
nop
daa
or
push
fwait
rorl
lock
xchg
inc
outsb
dec
mov
lods
push
and
adc
sbb
push
mov
and
call
or
mov
push
addr16
out
and
push
shll
pushf
jbe
idivb
push
fiaddl
pop
or
jae
mov
mov
push
in
mov
mov
xor
xchg
xor
das
mov
movsl
push
xlat
push
hlt
or
mov
or
int
das
mov
pop
mov
cwtl
mov
inc
inc
xor
mov
jge
aas
sbb
shll
jbe
shr
mov
fdivrp
cmp
frstpm(287
push
ret
pushf
fisubs
nop
xor
call
pop
dec
add
xchg
fistpll
test
pop
lea
inc
aas
clc
mov
aas
inc
lods
repnz
sti
pop
std
push
mov
cmp
pusha
dec
xor
stos
or
icebp
popf
ret
adc
and
sub
int
stos
jnp
jg
pop
and
jb
mov
sub
in
add
xchg
into
call
add
push
and
movsb
xchg
mov
mov
sbb
push
add
dec
add
fnstenv
fnsave
mov
imul
xor
or
add
push
adc
ds
xor
cli
inc
aas
jne
out
int3
gs
shll
in
add
aam
jnp
cmpsl
pusha
cmp
fs
cwtl
inc
shlb
mov
jl
das
xchg
arpl
sbb
push
jecxz
mov
inc
or
cmc
pop
lcall
jb
mov
icebp
lret
jo
sbb
push
sbb
or
test
mov
je
lahf
mov
lret
xor
cmp
in
ret
inc
out
int
lcall
mov
jecxz
test
test
push
push
pop
mov
sub
mov
pop
adc
and
push
xchg
mov
adc
mov
cwtl
cli
xor
xchg
frstor
xor
pop
xor
push
repz
dec
mov
sub
jecxz
test
out
pop
xchg
imulb
inc
loope
hlt
les
dec
sub
fdivrs
sbb
jle
cmp
jle
cwtl
pop
sub
pop
sahf
test
xchg
xor
lcall
fldl
jp
push
loop
inc
rorb
mov
movsb
aas
jne
out
pop
sub
mov
jne
xor
inc
lret
insb
mov
ds
iret
jb
adc
ret
sub
push
push
jnp
or
mov
inc
cli
int
cmc
std
push
dec
fucompp
out
leave
mov
or
sti
roll
xor
imul
movsl
sbb
push
pop
sahf
addr16
addr16
add
cmpsb
pop
popa
mov
in
dec
sub
lcall
pop
add
insb
and
sub
les
push
sbb
add
add
ds
mov
shrb
mov
enter
sub
lea
xchg
fs
dec
xor
xlat
je
adc
cmp
push
mov
outsb
add
filds
add
push
cmpsw
or
adc
dec
pop
xor
jl
insl
in
icebp
xchg
imul
in
and
ds
inc
or
adc
xor
pop
sbb
and
into
push
push
shlb
subl
jge
push
loop
loope
orl
adc
imul
popa
adcl
add
sub
or
add
data16
hlt
les
pop
sub
fwait
push
insl
fsts
cmp
dec
sbb
push
in
and
xor
ja
mov
xlat
sub
imul
sahf
std
jecxz
data16
idivb
icebp
into
adc
fdivrl
or
pusha
es
int3
test
push
sub
and
push
mov
jns
push
xchg
xorl
mov
ret
mov
stc
dec
jmp
mov
push
jmp
lret
dec
fisubrs
shlb
fisubrl
push
popf
or
pop
cmp
in
mov
cmpsl
icebp
xor
inc
popa
push
daa
and
js
cltd
aaa
into
mov
pop
mov
repnz
test
cli
add
outsw
inc
mov
pop
jmp
adc
dec
inc
pop
xchg
sub
or
daa
cmp
in
ret
iret
dec
insb
push
repz
xor
int3
xorb
lret
sbbl
aaa
jl
sbbl
test
sub
test
sbb
jb
call
lock
adc
dec
lods
dec
stc
xor
insl
adcb
xchg
sbb
or
mov
adc
jns
fists
imulb
mov
mov
mov
xchg
movsl
pop
in
xchg
push
mov
or
aad
loop
sub
adc
in
jnp
dec
xor
jecxz
dec
insb
in
lea
cmp
cmp
cmp
sbb
test
popa
push
add
sbb
shr
mov
lcall
popa
arpl
enter
fnstcw
call
cmovg
dec
fwait
test
mov
lcall
push
inc
add
jle
cmp
dec
add
addr16
pand
loop
sub
push
dec
mov
out
cmp
ljmp
movb
ljmp
int
jns
or
inc
or
inc
jne
jge
cmpsb
inc
cmp
add
lock
pop
mov
mov
xchg
fcom
jae
fisttps
add
stos
pop
push
adc
sub
loope
mov
int
pop
add
inc
cmp
shlb
adc
push
push
iret
jnp
jbe
fisubrl
and
cmp
js
xor
xchg
hlt
adc
xchg
lock
pop
xlat
rorb
jns
or
mov
jmp
mov
xor
iret
icebp
call
dec
stc
ds
filds
dec
mov
popa
inc
mov
iret
imul
sbb
mov
ljmp
mov
push
les
cmp
jp
clc
sahf
xchg
dec
xor
ds
loop
fnstsw
push
mov
cmp
inc
sbb
and
cld
orl
pop
pop
test
and
call
pop
movsb
and
lret
call
aad
shl
inc
sub
fnstenv
mov
inc
mov
sahf
push
stc
xchg
je
inc
adc
adc
mov
lret
in
cltd
push
fs
jns
mov
xor
adc
stos
sarb
ffree
or
xchg
xchg
mov
sti
pop
push
in
jne
fbstp
out
mov
jnp
jge
fists
stos
sbb
mov
inc
dec
out
mov
xchg
add
or
pop
iret
mov
gs
mov
sti
mov
outsb
push
jnp
sub
inc
mov
adc
cmpsb
loopne
dec
or
in
call
ret
mov
xor
cltd
in
test
push
ja
mov
inc
lea
les
push
ficoms
mov
mov
sub
movb
cmp
push
je
cmp
push
and
jno
gs
dec
inc
xchg
cmpl
adc
dec
leave
jle
lea
clc
adc
lret
adcb
adc
call
dec
mov
mov
pop
jecxz
loop
dec
adcb
repz
push
enter
stc
int
sub
mov
mov
idiv
test
ror
mov
sbb
push
pop
sbb
xchg
dec
sbb
adc
or
ret
nop
and
lret
ljmp
scas
cmpsl
cmpsl
hlt
call
int3
faddl
xchg
pop
fidivrl
scas
mov
sub
adc
scas
jo
andl
xor
stos
notb
push
dec
imul
mov
adc
ret
gs
pushf
or
sub
inc
mov
jnp
cld
pop
int3
call
loope
nop
sbb
xchg
fwait
jns
add
xchg
pushf
or
loope
pop
cli
xor
sbb
inc
imul
int
sub
sar
push
pop
hlt
push
pop
xchg
or
cli
test
pop
inc
xor
inc
pushf
lods
insb
add
das
ljmp
je
fnsave
cmpsl
or
inc
movsb
jp
roll
ss
stos
clc
pushf
arpl
mov
andl
jo
js
nop
mov
insl
jns
and
and
pop
mov
push
sahf
xor
push
in
out
cmc
inc
repnz
add
xchg
enter
sub
pusha
lcall
mov
sahf
icebp
dec
sbb
xchg
and
rolb
leave
les
inc
subb
sti
movsb
jns
dec
aad
in
jl
aaa
shll
push
popf
xlat
jbe
ja
test
inc
aam
clc
and
add
dec
sbb
imul
xchg
adc
jmp
sbb
test
jg
xchg
cs
out
cltd
sar
pushf
test
mov
pop
sbb
das
push
or
dec
or
push
xchg
sub
fldenv
arpl
lods
push
cwtl
enter
mov
or
leave
sub
test
nop
stos
cmc
mov
scas
flds
arpl
dec
xor
jo
outsl
in
jns
roll
cs
or
xchg
inc
or
cmp
leave
les
mov
sub
leave
mov
sub
adc
sub
sbb
jl
sbb
fbld
lock
mov
lcall
cmc
imul
aaa
sbb
lods
and
cltd
in
push
imulb
aaa
loope
pop
pop
xchg
adc
aaa
dec
adc
inc
ret
mov
idiv
std
imul
ret
mov
xchg
aad
sti
jne
cmc
bnd
pmaxub
jle
sbb
aas
je
xchg
loop
mov
xchg
je
clc
lds
and
push
int3
outsl
mov
dec
ja
in
sbbl
dec
in
push
push
mov
loop
inc
fbstp
cmp
inc
inc
push
int3
and
stc
sbb
sbb
mov
fists
lds
or
xchg
xchg
leave
jnp
les
push
add
xlat
fistpl
sub
jbe
imul
les
mov
lods
jnp
xor
or
in
dec
ss
xlat
ds
cld
mov
push
lcall
cmpsb
mov
out
lds
xchg
shrb
sub
out
jge
mov
lret
xchg
sbb
fstp
fldl
dec
loope
dec
fcmovnu
movntps
mov
mov
ds
jnp
or
sbb
shrb
lret
xor
fmulp
icebp
push
pusha
inc
mov
jo
push
push
imul
test
fs
out
mov
xchg
lods
dec
ss
stos
in
add
popa
mov
push
fidivrs
scas
cmp
or
les
jp
clc
inc
push
lea
les
add
insb
adc
xor
ror
pop
adc
ror
or
jns
jnp
inc
scas
js
adc
jmp
mov
or
mov
xchg
push
cmp
test
cmp
out
scas
data16
test
mov
ds
js
test
mov
pop
push
pop
imul
push
into
mov
cmp
sub
imul
arpl
push
mov
outsb
sub
lock
ja
jge
fcompl
in
out
mov
enter
inc
addb
mov
repz
jnp
aam
in
cld
sub
shl
and
add
cwtl
aad
xchg
rcrb
js
in
ss
arpl
and
and
jo
push
inc
push
fldenv
movsb
mov
mov
iret
les
mov
rclb
rolb
mov
cmp
fldcw
int3
mov
add
aad
insl
cltd
pushf
adc
xchg
outsl
icebp
pushf
lods
in
shrb
out
int
in
mov
lahf
stos
xchg
pop
and
ret
adc
and
jge
nop
repz
add
and
aad
xor
cmp
sub
fisubs
sbb
hlt
mov
cltd
lahf
mov
xchg
or
sbb
test
int
and
clc
test
mov
mov
jae
cli
sub
xchg
mov
pop
inc
into
lock
data16
and
rclb
insl
test
aaa
fldl
lods
jle
nop
test
pop
sarl
cmc
mov
fsubrl
inc
arpl
xor
or
testl
jns
rolb
jmp
in
rcll
cmpsb
in
fidivl
loopne
stos
fidivrl
xchg
pop
test
into
roll
push
sub
push
add
or
daa
cmpxchg
mov
xchg
add
loop
out
cli
rcl
xchg
inc
lods
dec
outsl
inc
leave
ret
jmp
test
popa
xor
xchg
and
add
pop
aaa
mov
fwait
xlat
inc
mov
mov
or
mov
in
loopne
adc
or
incl
pop
mov
dec
shll
xchg
sbb
pop
jge
sub
pop
sar
inc
out
xor
inc
lret
jl
inc
jecxz
inc
insb
add
in
cmp
mov
pop
aad
or
xor
jns
sub
pop
xchg
mov
xchg
jns
mov
pop
cmc
mov
addr16
movsb
mov
js
xchg
sahf
comiss
add
ficomps
mov
repz
add
cmpsb
fldt
jp
xor
clc
jecxz
ss
mov
sbb
cmpb
add
shrb
frstor
mov
and
in
mov
enter
shr
push
push
mov
lds
lahf
mov
pop
js
jmp
sub
addr16
mov
dec
xor
clc
push
ja
xor
push
shlb
dec
cmp
cmpsb
cmp
pop
push
xchg
lea
add
iret
dec
mov
jle
dec
push
xchg
lahf
addr16
mov
xor
and
add
mov
test
fdivp
imul
mov
popa
lds
loope
cld
adc
out
in
jnp
je
shlb
lods
pop
cmc
decl
and
mov
xchg
pop
ret
and
mov
aaa
insl
lods
jno
bnd
push
les
mov
iret
sub
les
lret
or
call
ljmp
mov
mov
mov
cmp
movsl
push
repz
push
xchg
adc
sub
enter
shl
divb
outsb
add
out
test
or
lahf
pop
aaa
xchg
aad
movsb
ffreep
in
mov
sbb
jl
fst
mov
int
add
push
rorb
sbb
lret
sub
dec
mov
in
addb
paddw
mov
sub
cmp
pop
lahf
sbb
sbb
pop
rcr
pop
int
jo
cmp
pop
xchg
pusha
scas
xchg
int
pop
icebp
jle
mov
push
mov
daa
sub
xor
add
cwtl
cmpsb
sub
lock
or
xlat
sbb
mov
sbb
add
xchg
je
and
aad
mov
pop
daa
sub
sbb
cmc
push
xchg
bound
js
jns
rorb
iret
inc
leave
jb
and
nop
imul
scas
repz
cmpsl
fbld
lahf
lods
test
pop
fstl
cmp
das
cs
xor
mov
mov
xchg
cld
xor
dec
inc
jae,pn
sar
dec
stos
in
arpl
adc
adc
pop
test
leave
lret
sub
mov
fbld
stos
xchg
or
lods
popa
fldl
rol
fst
xor
pusha
push
cwtl
cmp
les
adc
mov
jne
dec
push
and
push
je
xchg
pop
fsubs
xchg
jnp
lds
insb
lds
fiadds
fwait
inc
xchg
xchg
not
sbb
bound
movnti
stos
xchg
sbb
bsr
dec
push
loope
ds
push
mov
and
mov
add
cmp
and
xor
je
sbb
shlb
or
add
xchg
lcall
jmp
jo
pop
cmp
adc
mov
mov
ljmp
loopne
rclb
pop
gs
xor
popa
rcrl
sti
jle
loopne
xchg
loopne
loopne
out
repz
sub
mov
or
jle
scas
int3
lcall
mov
adc
lea
in
push
mov
xchg
xchg
pop
adc
inc
into
mov
aas
hlt
cmc
shr
xchg
testb
jb
adc
call
es
inc
mov
addr16
mov
mov
push
int
xchg
sub
es
lods
dec
aam
ljmp
sbb
jle
rorl
xchg
popa
insl
mov
inc
movsb
xchg
jmp
xchg
sbb
orl
xchg
mov
popf
rolb
iret
imul
popa
mov
mov
cmp
push
mov
popa
dec
popa
mov
inc
push
out
push
add
ljmp
pop
and
jne
jno
imul
jb
or
cmpsb
lock
add
repnz
inc
or
lahf
pop
sbbl
fisttps
in
out
roll
movsl
addb
cld
or
fcmovnbe
addr16
mov
imul
out
jns
jne
jge
mov
es
out
dec
add
inc
mov
popa
jae
imul
mov
loop
in
inc
mov
xor
jnp
or
sahf
sub
dec
jge
iret
sarb
pop
repz
or
sub
and
testl
rol
pop
sub
arpl
and
call
sub
jmp
lds
push
movl
call
cmp
sub
out
pop
in
gs
repnz
push
mov
jnp
push
inc
inc
cmp
sub
dec
mov
loope
xor
stos
cmp
sub
mov
sub
shrl
dec
pop
flds
pop
loop
test
pop
inc
lcall
or
scas
idiv
mov
stos
into
insl
shrl
adc
mov
adc
inc
cmpsl
jmp
jne
fdivs
jne
push
int
sub
mov
iret
clc
dec
mov
xor
out
push
je
cs
dec
xchg
cmp
aas
jp
lock
add
sub
ficompl
jg
pushf
dec
adc
and
sbbb
scas
dec
fs
pop
mov
mov
sbb
loop
or
daa
jmp
lea
or
int
mov
mov
shlb
ljmp
scas
fdivr
mov
mov
adc
outsl
jne
dec
orl
pushl
pop
dec
sbb
mov
aas
cltd
xchg
jns
or
mov
iret
xor
and
ret
mov
pop
ja
mov
popf
stos
in
mov
or
test
push
sub
xor
and
push
inc
push
je
and
or
or
xchg
mov
mov
cltd
cmp
sbb
xchg
sbb
orl
pop
pop
pop
mov
inc
imul
sub
sub
xchg
push
xor
xor
out
fistpl
mov
ljmp
rcl
fmul
add
adc
leave
pop
jne
mov
push
stos
mov
jb
dec
hlt
jbe
call
das
sahf
scas
fldt
cmp
dec
call
or
add
lcall
inc
ljmp
hlt
aad
push
mov
mov
arpl
xor
jno
cmp
pop
adc
rdmsr
shlb
cltd
lret
xchg
insb
aam
sbb
aad
fs
fstp
outsl
xchg
sub
mov
stc
or
in
mov
mov
cld
sbb
rclb
pop
push
push
pop
cmc
out
jae
mov
pop
add
xchg
iret
outsb
inc
and
out
cmp
push
lcall
add
lcall
ret
clc
ljmp
cmp
inc
jge
mov
js
mov
sub
sub
loopne
push
push
or
or
inc
mov
pop
rclb
add
lea
add
cmp
pop
aam
data16
test
xchg
jle
movsb
or
fwait
push
push
cli
leave
mov
pop
add
jg
xchg
push
jp
daa
out
mov
cli
jge
sub
pusha
pop
adc
aaa
cmpsb
ja
iret
daa
das
stc
movsl
dec
xchg
sub
fisubrl
stos
fdivs
add
aam
dec
movsl
push
or
xchg
lret
fsubs
pop
orb
xchg
jns
jmp
pushf
out
arpl
xchg
sbb
sbb
shrb
add
push
sahf
jb
icebp
hlt
lahf
jae
fdivrl
cmc
insl
pusha
jp
xchg
loopne
popa
into
dec
jle
adc
inc
xor
mov
icebp
in
mov
push
push
jae
shl
jge
popf
lcall
in
ljmp
pop
push
scas
xchg
xchg
les
arpl
or
pop
mov
cmp
mov
inc
js
mov
cmp
cwtl
push
xor
arpl
mov
lahf
sbb
jmp
out
int
jl
outsb
mov
int3
scas
jecxz
pop
mov
sbbl
adc
xchg
je
xchg
loop
push
lcall
mov
push
mov
leave
fcmovnb
xchg
inc
jne
push
sub
pop
jb
push
xchg
push
mov
enter
and
shll
loopne
lret
iret
shll
sub
aaa
rcll
pop
movsl
jbe
xlat
dec
and
or
stos
pop
das
iret
scas
xlat
adc
arpl
mov
inc
add
adc
pop
adc
mov
cmp
std
or
loope
fwait
inc
and
mov
hlt
pop
out
and
pop
jae
jo
sub
inc
fwait
lret
mov
imul
inc
aas
pop
xchg
rcll
cs
in
pop
lret
mov
fnsave
jb
cmp
test
dec
cmp
aas
adc
xchg
fucomp
jmp
or
mov
imul
and
sbb
rorl
xchg
pop
stos
xor
mov
add
push
adc
cmp
in
mov
mov
mov
bound
repnz
dec
addr16
fsubp
fstp
pushf
lret
mov
sub
clc
frstor
adc
pop
mov
pop
orb
push
mov
in
xchg
mov
dec
ret
dec
into
lret
push
or
int3
or
sub
mov
jg
xchg
dec
dec
std
xchg
lret
pop
arpl
xchg
cmp
popf
stos
inc
ss
mov
sub
std
insb
jbe
adc
je
and
movsb
arpl
loop
sti
out
cmpsb
xchg
pop
cmp
fidivl
sti
add
and
std
pop
fidivl
jne
mov
lds
jb
dec
repnz
dec
jecxz
mov
arpl
adc
adc
std
and
insb
inc
mov
xchg
scas
sbbb
in
jae
rcrl
jmp
sub
mov
mov
cmc
arpl
in
arpl
out
jns
push
movl
rol
mov
test
pusha
and
pop
test
adc
out
lea
sub
xchg
fsts
and
mov
out
xor
aas
xchg
mov
xchg
cmp
mov
mov
out
aam
or
sub
adc
cltd
xchg
stos
aad
mov
es
shr
divb
push
jno
cmpsb
std
add
sub
pop
cmpsl
add
int3
or
xchg
push
cli
xchg
faddl
and
out
call
pusha
push
arpl
and
mov
daa
cli
js
cmp
sub
push
nop
ds
pop
jge
cmpsb
sub
insl
add
sub
xchg
xchg
adc
test
mov
mov
sub
fs
mov
adc
xor
lds
adc
pop
aaa
lds
fildll
imull
mov
idivb
cmc
out
mov
imul
jmp
sbb
outsb
cmp
pop
inc
push
dec
mov
daa
adc
test
rorb
stos
mov
stc
mov
std
shlb
add
jb
cmpsl
icebp
push
or
sbb
mov
test
or
pop
test
ret
adc
mov
mov
mov
not
stos
and
pop
loope
rcll
adc
adc
fadds
pop
rcll
push
imul
out
sub
mov
test
xchg
adc
push
mov
jae
xor
imul
or
or
lahf
push
sarl
inc
mov
pop
mov
mov
fldt
ja
inc
mov
or
push
lret
ret
outsl
insl
push
sub
or
jno
test
mov
ret
rcrb
sub
and
fildll
pop
test
mov
in
pop
fisttpl
cwtl
add
aad
mov
cld
ljmp
mov
cmp
loop
mov
jle
bound
cmp
sbb
shrl
les
and
lret
mov
push
mov
aas
stos
or
enter
pop
push
xorl
divb
adc
push
ret
lds
and
jle
cltd
xchg
jo
jbe
cmp
xchg
mov
jno
stos
and
cmpsb
mov
push
bound
int
mov
je
sbb
inc
enter
out
xchg
daa
in
and
mov
cs
push
dec
dec
mov
xchg
lret
lods
fldcw
fisttpl
sub
insl
sti
add
aad
call
std
push
lcallw
jecxz
subb
jo
xor
and
mov
sahf
push
loopne
pop
or
popa
out
dec
ret
cwtl
test
lcall
ja
or
xor
fsubrl
sub
inc
and
popf
stos
adc
ret
push
int
call
stc
and
adc
loope
cltd
inc
pop
xchg
into
aad
into
cmpsl
sahf
push
mov
insb
ljmp
sbb
and
stos
out
push
and
lret
and
mov
cmpsl
jnp
add
or
scas
and
outsl
push
orl
inc
push
pop
xchg
push
xor
int
test
sub
adc
cmpsl
and
mov
cmp
lock
dec
pushf
xchg
je
add
xchg
inc
ljmp
inc
cld
or
sbb
push
sub
das
xchg
inc
cmpl
ljmp
inc
xchg
adc
insb
data16
or
hlt
push
inc
xchg
insb
movsb
adc
sti
popa
adcb
cmpb
clc
jb
subl
mov
xor
dec
arpl
sbb
movsb
fucomi
cmpsl
xlat
adc
inc
mov
fimull
mov
add
push
loopne
mov
add
cmpsl
push
push
push
rorb
pop
int3
push
xchg
mov
xchg
outsl
cli
mov
adc
sub
push
cmp
das
jo
cmpsb
es
ss
jbe
and
aas
mov
add
jecxz
inc
int
data16
cmp
cltd
push
jge
orb
lea
cs
stos
add
repz
bound
shrb
dec
aad
inc
xor
jecxz
dec
cltd
xchg
icebp
loop
gs
sbb
push
push
pop
mov
mov
pop
and
inc
insl
fsubrs
cld
jg
lcall
add
cmp
pop
fstl
pop
adc
push
pop
divb
sub
xchg
out
and
lahf
sahf
imul
dec
lock
cs
js
inc
aad
push
int3
xor
movsl
sub
je
pop
or
pop
pop
pushf
inc
lods
pop
hlt
test
loop
xchg
fwait
das
adc
fisubs
push
inc
fsubr
adc
out
in
mov
inc
cli
fdivs
insl
push
scas
mov
pop
stos
pop
mov
lret
pop
test
addl
outsb
outsl
aam
pop
aaa
sub
push
sub
xor
push
push
jp
xor
and
aas
pop
out
dec
adc
add
repz
mov
adc
mov
add
mov
or
or
rol
loope
mov
jge
xchg
outsb
repnz
js
cld
xor
sub
aad
adc
xor
jo
addl
aam
cli
xchg
xor
sub
imul
cmpsb
dec
lret
pop
add
jecxz
mov
cmpsl
cmp
xor
rorl
jno
push
in
jl
and
ds
dec
gs
jmp
mov
aaa
xor
popa
shrb
sahf
call
subb
aas
mov
mov
sti
dec
gs
push
cmc
add
lds
jno
and
fstl
ljmp
sub
add
push
out
lods
pop
arpl
fs
ret
mov
adc
cmp
subl
and
xchg
scas
and
enter
or
nop
cmpsl
popa
orl
std
ret
add
mov
or
inc
loopne
and
mov
sub
xor
int
ljmp
adc
sbb
mov
sbb
lods
ficoml
call
stos
loopne
and
mov
sub
pushf
pusha
pop
or
mov
fcompl
loope
push
mov
inc
sub
inc
sahf
mov
mov
ret
lock
aaa
insl
pop
jmp
mov
cmpsl
inc
rorl
divl
iret
push
sarb
rclb
jl
pop
jge
pop
fucomip
inc
cli
sbb
or
pop
cs
imul
int3
inc
insl
arpl
rorb
fcmovnu
loope
or
push
cmp
pop
fs
or
push
mov
xchg
clc
adc
faddl
fdiv
add
inc
aas
mov
sahf
mov
mov
fldl
push
movsl
jnp
and
pop
stos
mov
fimull
lea
jg
xchg
es
push
push
push
pop
xchg
imul
cltd
lcall
scas
popf
mov
pop
add
push
cmp
dec
aad
in
or
sbb
or
fstpl
mov
and
js
ret
jno
ljmp
xor
inc
pop
adc
jne
clc
pushl
sub
and
and
or
nop
ss
mov
inc
push
sbb
andl
dec
adc
insb
mov
pop
pop
jle
and
ja
or
pop
sub
inc
lods
cli
repnz
mov
xchg
sbb
xchg
mov
aam
icebp
aaa
sbb
popf
ret
cli
pop
jnp
fnstcw
sbb
xchg
xchg
xlat
inc
imul
inc
fcmovu
cmpsb
inc
cmp
xchg
adc
hlt
into
dec
stc
mov
cmp
movsl
pop
outsl
fucomip
mov
sbb
rcl
fcoms
and
shl
mov
arpl
incl
add
jne
loope
lcall
jmp
andl
ds
lods
test
dec
sbb
sub
fadds
or
jmp
test
and
int
icebp
std
lds
mov
and
ret
out
jnp
fld1
sbb
mov
arpl
fidivs
out
lods
dec
mov
inc
adc
add
int3
xlat
jnp
in
xor
add
jp
xchg
inc
repz
mov
stos
mov
cmp
loop
or
lea
ret
adc
iret
sub
pop
mov
iret
push
xchg
jnp
xchg
fstpt
cld
rorl
ret
clc
adc
fucomp
mov
sbb
cmp
dec
bound
movsb
or
ljmp
out
cmp
adc
out
lods
inc
loopne
notb
scas
add
out
mov
jno
or
mov
pop
or
shll
ds
xor
sbb
mov
repz
insb
mov
in
pop
or
push
int
mov
fsubrs
movb
add
addl
loopne
loope
mov
mov
rolb
dec
rolb
test
sarb
pop
xchg
ss
and
mov
gs
icebp
movb
test
lods
lret
dec
into
in
test
pop
sbb
call
je
push
sbb
imul
or
lds
ds
and
clc
inc
shlb
sub
mov
hlt
scas
xlat
daa
loope
dec
mov
lock
jle
insl
ss
es
lods
js
jne
das
mov
adc
pop
cs
or
xorl
jecxz
rclb
and
push
sub
mov
sub
pop
sbb
stc
lock
and
leave
pop
sbb
push
xor
fwait
or
fistl
aam
out
cmp
dec
cmpsl
inc
push
pop
sub
jge
and
or
cmp
hlt
cmp
insl
mov
sti
imul
jp
pop
lods
cmp
mov
ljmp
push
ret
and
mov
scas
inc
hlt
outsb
ds
loop
sbb
test
add
div
inc
push
push
dec
xlat
jle
dec
mov
xchg
sub
pop
or
rorb
mov
mov
pushf
mov
es
icebp
pop
aaa
dec
dec
sub
pusha
mov
lods
scas
dec
insb
mov
fisttps
pop
jmp
call
add
in
push
lods
adc
push
cwtl
mov
sub
ja
push
aad
shl
in
inc
add
push
movsb
sti
hlt
push
int3
ret
out
cmp
jns
jmp
cs
sbb
and
inc
fs
dec
push
adc
pop
lret
push
push
sarb
popa
test
jnp
dec
mov
or
cmc
call
jne
mov
fwait
cmp
lcall
aad
mov
xchg
pop
ror
scas
mov
sub
mov
lods
sahf
mov
cmpsb
out
add
aas
jecxz
cmpsb
pop
pop
xchg
aas
push
pop
arpl
mov
ss
mov
mov
popf
ja
cmp
xchg
mov
js
nop
fwait
bound
cltd
push
pop
ret
out
fcmovnb
xchg
fnstenv
pop
loope
mov
dec
add
rorl
mov
out
orl
sahf
fildll
nop
dec
mov
or
mov
imul
inc
in
ds
leave
mov
jne
adc
cmc
out
andb
test
mov
loopne
sahf
jnp
sti
sbb
aas
mov
xor
or
fcoml
sbb
pop
das
add
das
sub
push
add
fidivrl
inc
mov
cmp
jae
or
sub
ds
insb
add
test
rcrb
mov
and
mov
aam
nop
push
out
or
and
jb
call
or
nop
pop
push
mov
pusha
lcall
faddl
or
cmp
sub
out
jecxz
mov
data16
mov
iret
inc
mov
aaa
fs
into
outsl
gs
ds
cmp
daa
mov
fists
sahf
fprem1
lds
dec
cld
pop
mov
xchg
dec
pop
jmp
in
and
ja
pop
dec
cmp
xchg
jno
out
ret
jno
bound
sub
mov
mov
imull
xor
lods
mov
xor
xchg
jnp
movl
xor
inc
insb
sub
or
mov
and
les
cmpsl
dec
pop
jo
or
add
jge
xlat
clc
ror
int3
les
data16
add
dec
int
fidivrl
xlat
dec
daa
je
outsl
cltd
jle
ret
dec
outsl
mov
lret
jno
ret
pop
shl
dec
pop
imul
or
lods
mov
jbe
mov
movsb
pmaddwd
mov
adc
cltd
ja
mov
divb
jge
push
daa
bound
icebp
aaa
mov
push
lods
sbb
jae
sbb
mov
insl
sbb
push
xchg
pmuludq
xlat
in
loope
and
mov
cwtl
rcrl
fucomip
test
xchg
sti
xor
add
ret
sbb
fisttpll
xor
jle
sub
inc
mov
int
xor
in
lea
div
in
adc
popl
mov
stos
dec
scas
loope
shrb
les
lret
jb
fdivl
add
int3
push
inc
add
lcall
sub
js
add
clc
mov
sahf
ja
pop
insb
jge
enter
jecxz
xor
sarb
js
popa
adcb
arpl
xchg
jne
push
insl
cwtl
xchg
je
mov
jp
imul
fldenv
sbb
jmp
lods
scas
push
jle
add
daa
outsb
scas
push
pop
mov
pushf
aaa
add
mov
ret
rclb
jge
sbb
leave
pop
sub
and
sbb
in
push
daa
loopne
pop
sbb
sub
add
cmc
int
and
je
xchg
add
fsubs
cmpsl
push
push
aam
je
fidivl
jnp
loopne
roll
filds
pusha
add
insl
pop
dec
data16
xor
push
dec
ljmp
cmc
gs
jp
imull
cs
sub
jne
add
jp
das
sbb
lods
xchg
mov
jecxz
inc
xchg
repz
stc
and
add
cmpsl
pop
dec
xor
mov
cmc
mov
cmp
jecxz
stc
adc
pop
xchg
sbb
sub
iret
scas
test
mov
ja
mov
jo
mov
out
pop
inc
enter
clc
push
cmpb
mov
je
jnp
outsl
rol
fldt
push
push
xor
pop
scas
sub
pusha
bound
outsb
mov
or
out
add
push
pop
sub
adc
inc
xchg
into
fsubr
and
cwtl
stos
add
lds
cmpsb
sub
sbb
xchg
sub
test
cmp
fisubrs
push
cmp
xor
fcomip
push
or
sub
fidivs
insl
add
or
enter
adc
mov
mov
ret
mov
cmp
dec
add
sub
fists
das
xchg
loope
mov
arpl
icebp
xorb
pop
mov
les
push
hlt
in
sbb
test
jb
outsb
pop
xchg
fistl
fnstsw
and
iret
xchg
ret
mov
loopne
cmp
mov
pop
int
inc
mov
addl
enter
push
fs
mov
les
push
inc
hlt
and
sahf
js
fstp
bound
decb
test
cmc
ds
xlat
sbb
repz
test
dec
xor
movsb
jo
and
adc
push
mov
out
xchg
rcrb
int
inc
outsl
ficompl
pop
rcrb
repz
sub
lods
call
sahf
and
push
sete
or
outsl
mov
decb
xor
cltd
mov
outsl
scas
addr16
fidivrl
xor
aaa
repnz
aam
push
rorl
lcall
sbb
mov
stc
jnp
je
in
sub
ljmp
mov
cld
xchg
pop
loope
lock
arpl
or
lds
les
bound
add
sbb
xor
mov
xchg
cmp
notl
cli
push
lock
or
and
iret
repnz
jp
mov
arpl
lds
scas
jl
xchg
xchg
aas
pop
lret
sbb
mov
dec
pop
pop
popf
roll
xchg
ret
out
pop
adc
or
icebp
dec
ret
fwait
sbb
mov
lods
dec
inc
dec
sbbl
pop
js
cs
sbb
pusha
cmpl
sbb
sub
or
call
popa
loop
sbb
lea
push
or
insb
popa
hlt
fnstsw
or
and
pop
jmp
mov
movsb
in
or
pop
pop
aam
cmp
xchg
mov
fstpt
scas
call
dec
xchg
shll
mov
add
cs
add
sbb
stos
inc
int
add
mov
mov
stos
mov
rorl
idivb
ds
outsb
mov
push
shrl
mov
dec
shlb
or
inc
xchg
cld
imul
add
xor
lahf
es
shll
fwait
adc
sbb
test
gs
faddl
jnp
jo
aad
js
mov
jne
fnstenv
ljmp
stc
xor
lds
fldt
sub
arpl
sbbl
inc
xor
aam
push
mov
test
mov
ret
xor
addl
add
add
sub
jbe
out
sbb
mov
pop
je
sbb
loop
and
xchg
sar
or
sbb
adc
fbstp
push
or
out
pusha
or
jg
jo
jnp
cmp
stos
cmc
mov
cmpsl
daa
incl
scas
movl
fstl
dec
scas
mov
mov
adc
cwtl
pop
add
and
mov
xchg
shlb
jecxz
jo
sbb
mov
cmp
insl
aad
sbb
adc
aam
adc
push
addr16
pop
adc
or
aas
test
in
iret
es
icebp
or
xchg
pop
inc
push
sub
in
dec
mov
jne
cmp
or
in
dec
add
repnz
int3
cmp
dec
push
call
push
fcmovb
xor
push
jle
out
fidivrs
lret
repnz
sbb
test
xor
adc
mov
mov
enter
aam
call
sbb
mov
stc
cmpsl
add
inc
ljmp
jl
repnz
popa
inc
push
jle
ja
mov
into
adc
test
es
rolb
frstor
jle
movsb
inc
sub
arpl
sbb
sbb
lods
mov
adcb
rcrb
dec
inc
data16
pop
enter
cmp
jb
or
or
cld
icebp
and
jnp
or
push
xor
fdivl
fstps
in
pop
shll
pop
insl
scas
es
xor
pop
repnz
mov
adc
or
ret
icebp
adc
jns
and
push
pushf
mov
rorb
dec
cli
xor
push
ja
xor
movsbl
orb
mov
push
les
adc
sub
mulb
ja
inc
sbbl
mov
sbb
push
jmp
xor
mov
dec
pop
xor
xchg
call
es
xor
out
xchg
cmpl
mov
lea
push
lcall
imul
gs
pop
insl
cs
les
xchg
bound
test
mov
xchg
xchg
xor
jo
nop
enter
pop
imull
sbb
and
out
inc
fsubr
hlt
loope
pop
xchg
les
sbb
mov
cmp
aaa
insb
movsb
stos
jne
sbb
jne
jno
or
mov
mov
dec
testl
aam
pop
pop
js
add
jmp
sub
fisttpll
or
cmp
arpl
sub
int
pop
int
pusha
inc
pop
inc
insb
data16
test
jecxz
xchg
dec
mov
adc
jecxz
push
or
pop
loopne
jae
dec
enter
hlt
mov
sbb
mov
int
mov
pop
scas
or
inc
movsb
in
mov
enter
jl
int
movsl
push
push
aaa
lock
pop
add
outsb
inc
mov
mov
pop
adc
jne
mov
cmpsb
jge
xor
leave
fcmovnu
stos
dec
and
jae
ud2
mov
sbb
cmp
cmp
mov
push
mov
mov
add
getsec
sbb
in
lret
scas
mov
cmp
scas
repz
push
js
ss
rcll
jae
lods
orb
inc
pop
mov
lock
xchg
fldl
push
ret
hlt
icebp
mov
xlat
les
pop
sti
sbb
sbb
add
adc
xor
lcall
push
push
xlat
ja
dec
int3
mov
cld
xchg
pop
mov
jno
loope
ds
mov
jmp
scas
cld
pop
cmp
bnd
push
pop
adc
pusha
pop
dec
jle
sbb
push
dec
andl
scas
adc
sti
data16
ja
jno
js
arpl
stos
push
xchg
cmc
jns
iret
leave
pop
cmp
cmp
adc
int
mov
mov
sub
rcl
hlt
in
sbb
mov
mov
aas
js
in
xor
aas
pop
cmp
adc
mov
or
xchg
jbe
out
nop
pop
or
mov
lcall
cmp
outsl
jecxz
xlat
cld
fs
mov
pusha
push
and
cli
or
xor
sbb
std
mov
mov
sti
cmovbe
loop
inc
bound
pop
push
cmp
jecxz
fs
lret
jno
sub
sbb
lret
xchg
mov
popf
inc
jae
dec
push
loope
xchg
scas
pop
cmp
ds
pop
inc
sbb
movsb
lods
clc
mov
mov
xor
mov
cmp
repnz
jmp
lods
mov
subl
pushf
jle
dec
jge
push
xchg
dec
sarl
fisttpll
cmpsl
outsb
in
cmpsb
lods
or
mov
in
jb
add
and
or
lds
in
fwait
add
stos
insb
addr16
in
outsb
pop
iret
pop
fstpl
mov
pop
fstl
pop
aas
pop
and
mov
jns
push
adc
jne
je
xchg
mov
push
pushf
cmp
jno,pn
cmpsl
add
call
imul
fstps
xor
push
and
fwait
dec
repnz
fs
test
inc
inc
pop
fwait
add
dec
push
sahf
xchg
sarl
cmp
adc
xorb
jae
addl
pop
pop
inc
mov
mov
leave
shll
gs
cwtl
mov
popa
jl
psrld
mov
mov
ss
add
mov
fldenv
sub
mov
ficompl
xor
lods
nop
out
dec
or
popa
aaa
jb
idiv
hlt
pusha
fadd
mov
sbb
lods
cli
adc
push
aam
cmp
ds
lret
out
cmc
stos
fs
shl
repz
or
push
cmpsl
lock
add
jge
mov
jmp
xchg
inc
pop
push
stos
inc
je
fcmovnb
mov
add
sarl
push
add
popf
popa
xchg
dec
sbb
xchg
jb
addr16
mov
mov
stos
pop
fisttpll
popa
fadd
test
fwait
mov
push
sub
add
cli
test
shrl
arpl
or
pop
test
mov
inc
inc
sub
mov
cmp
repnz
dec
xchg
mov
mov
cli
stc
pop
sbb
add
add
punpckhdq
test
cli
add
lds
pushf
jmp
sarl
int
hlt
data16
jle
movsl
dec
add
lock
loop
ss
les
mov
mov
movsb
xor
adc
ds
jge
sbb
int3
pushf
inc
mov
sahf
insb
mov
sub
jl
push
lahf
mov
push
adc
in
in
mov
cmp
mov
or
jecxz
jl
jl
add
or
inc
sub
pop
sbb
int3
inc
fistps
and
fadds
sbb
and
enter
inc
xlat
pop
loope
jl
fidivrl
jge,pt
repz
xchg
mov
add
insb
pop
inc
pop
inc
add
adc
call
mov
mov
iret
int
into
jns
push
in
mov
fst
add
cli
mov
addb
gs
add
xor
pop
outsl
scas
push
xchg
mov
call
inc
imull
mov
out
hlt
jl
jno
aad
jecxz
hlt
dec
les
pop
addr16
stos
jl
sbb
test
pop
jg
loop
dec
pusha
jbe
cmc
daa
hlt
or
dec
call
fnstsw
xor
scas
lds
int
call
xchg
lret
and
jno
stos
sub
push
inc
and
ret
test
insl
mov
aas
dec
inc
repnz
xor
xchg
movsl
std
inc
in
mov
push
cmc
daa
outsb
ret
sbb
and
psrlw
lret
dec
mov
sub
mov
mov
pop
xchg
sti
push
roll
cli
dec
int3
xchg
adcl
dec
mov
lret
sbb
call
cli
jp
dec
cmpl
fistps
fucomp
jb
cmpsl
xor
mov
push
pop
in
mov
sub
es
add
cld
mov
xchg
popf
cmc
sti
imul
mov
fdivp
sub
ret
daa
lcall
movsb
out
mov
aad
mov
cmp
dec
lcall
jae
lahf
mov
pop
shrl
pop
jge
xchg
movsl
lods
or
das
bound
test
add
ds
stos
into
mov
bound
jbe
xchg
push
adc
cli
dec
cmp
test
push
push
mov
movsb
incl
and
push
inc
je
jecxz
mov
dec
jp
jns
xor
jnp
dec
movsl
push
cwtl
stos
pushf
dec
cmp
xchg
mov
lods
jmp
inc
lock
sbb
mov
rorl
cmc
loopne
std
push
dec
add
xchg
pop
loopne
add
decb
mov
jmp
addb
or
or
add
cmpl
cmp
fstps
xor
shll
xor
mov
and
mov
fldl
in
insb
mov
push
push
ret
lea
xchg
scas
xlat
pop
or
dec
test
sarl
or
mov
mov
xchg
pop
cld
sub
pop
sarb
jmp
mov
mov
add
ficoms
lret
fldcw
sbb
fnstenv
fcoms
imulb
xor
cli
push
push
hlt
add
pop
or
sahf
cmp
aaa
adc
not
hlt
jno
or
sbb
mov
xchg
jecxz
in
jmp
rdtsc
pop
dec
dec
mov
cmp
or
dec
push
std
popf
fs
decl
cmp
clc
mov
inc
xchg
popa
xchg
cwtl
or
aaa
xor
inc
sti
mov
lea
movsl
xor
popa
pop
jnp,pn
push
mov
pop
dec
cmc
adc
cltd
popa
sbb
push
cmp
rclb
and
imul
roll
icebp
jecxz
mov
jb
cli
adc
adc
push
mov
cmp
cltd
roll
or
and
loopne
inc
fdivrl
rol
loopne
insl
aaa
jmp
rcll
xchg
cmpsb
stos
sbb
hlt
lea
pusha
inc
ret
xor
icebp
dec
fsubl
push
je
fbld
jmp
pop
and
das
fsubr
jne
pop
nop
scas
fbstp
aam
pop
in
pop
inc
jae
out
ljmp
fbstp
fildll
and
dec
shl
jbe
fcmovb
icebp
sub
jbe
test
inc
in
cld
xchg
adc
int
xchg
popa
sahf
nop
dec
popf
push
inc
jl
es
add
push
jl
push
and
jl
js
mov
mov
or
push
les
aam
stc
push
shrb
mov
push
shr
pop
idivl
cltd
fimuls
jnp
cwtl
jg
repz
mov
dec
call
inc
fnsave
jnp
and
testb
jecxz
pop
repz
stc
es
mov
cmp
cli
push
in
cld
jle
fcmovne
add
adc
lret
ffreep
jns
aam
fiadds
xor
sub
ds
jmp
dec
mov
adc
stos
inc
xor
out
push
sub
imulb
ds
psubd
mov
push
mov
mov
mov
icebp
mov
inc
sahf
inc
push
inc
pop
fwait
push
mov
mov
loop
sub
mov
or
leave
jmp
cmc
mov
jle
pushf
mov
mov
fs
add
into
jecxz
lds
fdivr
lea
cmp
fldcw
inc
arpl
leave
or
lahf
testl
imul
adc
mov
jmp
push
sbb
cmp
cmp
scas
xor
ss
fsubrp
sti
imul
xor
fsubl
call
shlb
insb
and
loop
cmp
xor
mov
xor
add
adc
lea
shrl
mov
pop
jns
rolb
mov
ror
xor
loopne
jge
mov
fdivrs
sbb
sbb
pop
sarb
lock
fdivs
call
sub
and
xor
add
sti
xchg
in
pop
mov
push
jne
mov
stc
cltd
shll
cwtl
mov
or
jmp
bound
enter
jb
mov
daa
pop
push
imul
jg
stos
sbb
stos
inc
movsb
inc
test
mov
mov
out
fs
fs
inc
jne
xor
out
sbb
jns
int3
add
mov
icebp
add
into
pop
imul
mov
mov
inc
cmp
rolb
mov
sbb
cmp
jmp
mov
mov
push
dec
dec
fidivrl
std
mov
dec
addr16
and
outsl
jmp
dec
jmp
nop
insb
data16
loope
and
jb
mov
repz
addr16
sbb
ja
and
ret
sub
jne
xchg
inc
je
repnz
or
cli
shl
incb
into
popf
lea
in
mov
mov
adc
dec
mov
cltd
push
xchg
out
and
add
clc
aad
out
mov
sbbb
mov
ret
add
roll
xor
xchg
cmpsl
cmp
lret
sbb
scas
cmp
pop
mov
pop
stc
sti
cmpsl
mov
aaa
adc
dec
mov
mov
mov
cmp
loopne
pop
push
xorl
mov
aaa
cli
and
mov
mov
push
rorb
xorb
inc
mov
fstps
mov
fdivp
rcl
lea
sti
add
adc
adc
xor
dec
push
lret
imul
aam
test
jl
sub
mov
rcrb
push
mov
mov
and
push
pop
ja
adcb
mov
xor
and
mov
xor
out
dec
cmp
bound
push
mov
subb
fs
sbb
cmp
mov
inc
rcrl
fisubs
push
sub
and
aad
push
out
mov
shl
divl
call
ror
lret
lea
mov
sbb
rclb
les
in
rol
pushf
stc
addr16
push
rcl
push
cld
jle
cwtl
push
bound
imul
mov
cmpsl
mov
testb
fists
inc
movsl
jne
test
imul
jecxz
sti
add
mov
out
xchg
jnp
add
inc
xchg
ret
nop
repnz
sub
inc
lods
cmp
in
lea
div
xlat
pop
fwait
push
test
push
fsts
sub
jo
mov
std
popa
test
mov
cli
shrl
aas
mov
outsl
nop
lret
add
xchg
leave
int3
adc
daa
data16
int
cmpsl
mov
das
xor
and
mov
dec
cwtl
sub
cwtl
mov
push
lods
sub
in
in
sbb
icebp
movsb
jb
jns
jl
mov
dec
push
hlt
push
mov
mov
addr16
dec
or
dec
or
cmpb
sahf
stos
pushf
dec
xchg
sbb
dec
xchg
rorl
xor
ds
fdivp
int
loopne
and
pop
enter
bnd
add
leave
mov
sbb
loope
fdivr
shr
popa
scas
mov
sbb
pop
push
cmpsl
out
lret
pusha
mov
out
push
sbb
xchg
sbb
mov
fs
hlt
pop
movsb
pop
outsb
mov
cmp
nop
ret
or
mov
pop
lwpval
arpl
cwtl
gs
xchg
lock
jno
in
or
in
pop
cmp
pop
sbbl
cmc
add
faddl
sbb
push
out
in
in
loope
das
dec
sbb
ret
cli
mov
mov
xchg
incl
mov
or
stos
xchg
std
xor
cmp
fisttps
mov
movsl
sub
pop
in
cmp
cmp
push
xor
test
lahf
scas
xchg
adc
leave
sub
decl
sbb
aam
push
jp
jo
mov
call
stos
jne
pop
jg
js
cli
jg
push
outsb
cltd
xlat
xchg
xchg
cli
pop
or
fldt
xchg
dec
loope
outsb
int3
inc
fidivl
pushf
jp
mov
jl
popa
out
xor
test
adc
shll
pop
inc
out
call
movsb
and
jge
leave
insb
cmpsl
jge
lret
incl
out
or
sub
cs
or
imull
jecxz
aam
mov
pop
mov
mov
mov
out
mov
addb
add
fcmovb
adc
das
jb
fcoms
xchg
aas
nop
and
cld
push
push
cmp
and
lret
add
or
or
jle
call
fiadds
mov
aam
mov
jmp
movsl
mov
rcrl
or
leave
push
cwtl
movsl
loopne
shlb
cmp
clc
mov
fwait
movsl
cmp
mov
push
dec
mov
data16
jmp
xrelease
cmp
sub
aaa
add
inc
cmp
daa
push
mov
popf
imul
ret
push
cltd
xchg
in
sub
push
push
sub
arpl
adc
inc
test
ss
adc
cmp
stc
sbb
sub
test
mov
cmpsb
or
cwtl
dec
lock
dec
hlt
push
sub
push
mov
jle
sbb
pop
and
out
sarb
mov
std
add
sbbl
jmp
dec
or
jp
es
fidivrl
adc
mov
aam
scas
fmull
repnz
add
fwait
cmp
rorb
in
xor
les
aad
cmp
xchg
mull
cmp
outsb
pop
jg
jbe
push
lods
pop
cmp
subb
ja
data16
cmp
in
adc
mov
jle
jb
outsl
enter
in
jl
lds
lods
mov
shlb
pop
aaa
lods
dec
mov
push
inc
std
push
cs
and
inc
sbb
popf
mov
mov
std
in
cs
inc
popf
and
rolb
in
sub
pop
ds
adc
outsb
addr16
ds
pop
loope
mov
inc
inc
dec
push
or
mov
daa
stc
xchg
mov
sti
dec
int3
leave
pop
inc
movsb
jecxz
mov
fstl
aas
push
lea
clc
test
je
nop
aam
and
and
cmc
jl
pop
push
pop
inc
pushf
jg
loopne
and
push
lea
inc
xchg
dec
cltd
adc
cmpl
sar
cmp
sub
push
jle
cmpxchg
adc
cmp
gs
mov
lahf
dec
push
sub
jl
jns
inc
xchg
xchg
lahf
imul
mov
jle
jne
dec
pop
lods
addb
iret
add
lds
pop
jecxz
fisttpll
mov
sbb
mov
int
nop
cld
and
cwtl
roll
lock
lret
mov
mov
movsl
out
push
pop
add
push
out
adc
jl
dec
dec
aas
sar
lods
outsl
xchg
icebp
inc
cs
test
sbb
cmp
lock
pop
xchg
cwtl
stos
outsl
xor
sbb
and
test
jns
push
mov
sub
or
fwait
lea
clc
jmp
and
xchg
sbb
fwait
xor
adc
frstor
mov
out
mov
adc
or
dec
bound
or
cld
js
add
int
jns
jbe
lock
adc
sbb
inc
fcomps
cmpsb
out
and
adcb
adc
mov
lret
sbb
mov
push
mov
xor
mov
nop
stc
pop
xchg
mov
fidivl
cmp
cmp
xchg
sbb
jmp
dec
dec
aam
pop
es
nop
dec
add
cmp
ss
movsl
inc
or
cmpsl
xor
test
add
cmp
cwtl
arpl
shrb
fisttpl
pop
add
cmpl
neg
cmp
mov
enter
addl
insl
jne
inc
mov
jmp
jmp
pop
or
aas
lret
jl
aas
xor
jns
aam
jns
bound
or
pop
ret
imul
pop
aas
in
sub
imul
jo
pop
mov
mov
jne
repz
sbb
mov
out
mulb
xor
pop
pop
mov
xlat
pop
sub
lods
scas
inc
fidivs
ss
out
dec
push
jbe
shrl
lret
cmp
cmp
dec
ficoml
imul
push
icebp
in
or
mov
mov
std
stc
and
dec
clc
and
push
and
pop
into
add
sub
add
outsb
roll
cmp
ljmp
and
test
pop
in
mov
pop
jge
push
add
ffree
push
xor
out
push
scas
and
dec
xlat
adc
iret
or
or
mov
cs
scas
jl
loope
int3
pop
out
jbe
and
das
lods
ret
int
repz
test
sub
int3
sbb
imul
out
inc
aaa
insl
gs
rcll
inc
pop
scas
add
cld
je
adc
ficomps
std
daa
test
fnstenv
lahf
imul
inc
out
inc
jbe
repnz
xchg
and
stos
jo
jecxz
dec
or
pop
sbb
add
in
xchg
jmp
shll
je
xchg
xor
aaa
fsubp
insb
loop
mov
inc
out
lock
repz
in
mov
leave
cmc
pop
stos
xor
fcoml
out
push
mov
in
jbe
xchg
cli
rclb
repnz
repz
and
test
daa
sub
das
inc
and
out
ret
imull
aas
lds
adc
sbb
ret
out
jbe
add
outsb
out
push
add
mov
subl
cmp
xchg
mov
push
int
or
fstl
xor
xchg
fisubrl
test
jmp
fmuls
adc
in
inc
add
dec
pop
loopne
inc
out
out
jp
ja
dec
imul
dec
mov
inc
pop
lock
sub
add
or
movsb
jg
mov
addr16
addr16
cmp
ja
or
dec
add
sbbb
pop
inc
fwait
sbb
push
dec
dec
adc
ret
divb
retw
pushf
mov
pop
xorl
cmpb
xor
gs
mov
ljmp
das
sbb
sahf
inc
inc
hlt
shll
mov
leave
mov
test
hlt
ret
stc
lods
stc
inc
add
push
roll
jl
call
mov
xchg
shll
jae
daa
mov
aam
in
dec
popf
je
push
push
imul
scas
das
int3
fs
adc
mov
sub
ffreep
pushf
sbb
mov
xor
scas
out
mov
in
mov
orb
dec
test
mov
lret
pop
sbbb
jp
xchg
lcall
jae
test
lahf
jle
dec
rcr
cwtl
mov
add
push
cwtl
add
mov
push
push
test
and
iret
and
fidivs
repz
andl
andl
mov
adc
mov
adc
dec
cmpb
dec
aad
lds
push
cmpsb
loope
outsb
dec
inc
mov
pusha
jo
adc
out
fimuls
imul
push
sbb
in
xchg
sub
mov
sbb
or
or
mov
mov
xor
add
dec
aam
in
cmpsb
and
fdivrl
xchg
enter
notl
lods
nopl
sub
test
inc
xchg
lock
dec
jne
movsl
pop
lea
pop
cmp
adc
je
mov
mov
jo
je
mov
out
fisubl
inc
dec
add
and
sarb
xor
mov
aaa
in
mov
rol
cmpsl
stos
movsb
aad
add
ret
mov
clc
adc
mov
enter
fcmovb
inc
addr16
mov
cmp
and
mov
sub
shr
xor
jle
mov
jae
cmp
xchg
and
inc
xor
add
test
int3
inc
rolb
lods
fisttpl
adc
lret
lret
jns
dec
enter
mov
mov
pop
dec
mov
pop
jbe
xchg
rcrb
xor
shlb
ror
bound
popa
icebp
movsl
and
jns
test
xchg
xchg
adc
ljmp
cld
pop
inc
jns
xchg
inc
add
mov
insb
loop
jb
add
and
pop
mov
nop
or
out
stos
popf
subl
arpl
hlt
int
sbb
sbb
and
in
jp
int3
push
mov
cld
outsl
inc
test
adc
js
lret
sbb
jnp
jae
sbb
dec
fisttps
inc
sbb
cmpsb
xor
mov
jbe
xor
ret
fnsave
jbe
mov
mov
pop
dec
dec
out
stos
roll
mull
mov
scas
xchg
jnp
sbb
mov
or
xor
out
fdiv
inc
mov
jnp
sub
dec
xchg
jae
adc
rcr
sbb
mov
pop
cld
fneni(8087
xchg
xor
mov
xchg
mov
rorb
in
scas
mov
mov
xchg
jne
into
notb
mov
cli
addl
gs
clc
cmp
adc
rclb
jmp
mov
mov
or
sub
out
aaa
lock
push
or
push
in
and
scas
sub
in
cmp
out
je
mov
stos
mov
cmp
cmp
ds
mov
mov
test
fs
scas
cld
stc
cmpsl
dec
aas
mov
xchg
hlt
mov
cmp
pop
xlat
push
xorb
sti
sub
fisubs
sti
in
xchg
sub
or
inc
lahf
jns
cmp
out
sbb
pop
or
fidivrs
xchg
push
jecxz
pop
jb
xchg
stos
dec
imul
in
mov
jl
dec
ret
mov
inc
sahf
dec
stos
filds
inc
add
mov
jg
cmp
mov
pop
cltd
pop
adc
orb
push
mov
cmp
cmp
mov
adc
dec
xchg
neg
test
cmp
push
sar
sbb
icebp
push
popf
lock
jne
das
lock
adc
and
insb
jb
cmpsb
push
mov
jecxz
lahf
jns
adc
pop
adc
pop
adc
addr16
pop
popf
add
sub
sbb
add
mov
xor
out
xor
inc
and
das
and
das
arpl
imul
add
mov
push
enter
repnz
icebp
fs
clc
jne
push
push
mov
cld
jle
rcrb
dec
inc
cmc
loop
mov
es
or
push
lds
jnp
adc
mov
push
addb
or
sub
in
roll
jae
xchg
test
hlt
iret
jmp
popa
stos
jno
ds
sbb
loope
jmp
sub
xchg
xchg
push
loope
fistpll
xorb
pop
xor
add
jb
das
xchg
pop
stos
inc
xchg
stos
lea
clc
pop
lcall
add
adc
loopne
push
sub
push
shrb
cli
shld
jp
mov
popa
pop
pop
xchg
inc
inc
or
and
and
dec
sarb
in
aad
divb
lret
lcall
cmp
arpl
punpckhwd
hlt
or
jmp
stc
adc
jb
xor
cltd
pop
add
addl
and
mull
cmp
xchg
dec
movsl
xchg
mov
ss
cld
or
adc
dec
into
inc
inc
mov
sbb
je
ret
push
movsb
push
in
mov
dec
cli
push
xchg
fcompl
iret
fsubp
xchg
leave
adc
or
lea
push
xchg
mov
int3
push
sub
lret
pop
jp
mov
out
scas
cmp
xor
mov
push
mov
mov
arpl
jno
adc
ret
dec
push
rclb
push
insl
and
jl
lret
cmpsl
sbb
or
movsl
jge
inc
cmpsl
idiv
jl
mov
ss
lods
xchg
mov
stos
arpl
dec
fs
mov
pusha
lret
mov
fwait
sub
in
fstl
sub
xor
lcall
out
or
add
mov
push
ret
lahf
xchg
inc
xchg
cmp
jmp
adc
stc
in
xor
loope
and
dec
mov
repz
into
pusha
jmp
sub
inc
inc
add
es
xor
rolb
sub
xchg
push
enter
das
jecxz
inc
adc
sbb
xor
call
cmpsb
pop
xchg
mov
jnp
sub
mov
enter
ljmp
push
pop
jns
out
test
or
sti
in
jbe
adc
pop
dec
adc
jmp
daa
shlb
cltd
and
sarb
mov
aaa
mov
jnp
lret
pop
xor
and
cmp
jno
mov
xor
mov
fistps
mov
insl
mov
subb
sbb
test
mov
xor
push
mov
jecxz
in
mov
mov
cs
push
out
add
in
push
pop
mov
lret
inc
stos
pop
insb
xchg
cmpl
testl
arpl
mov
int3
call
lods
cmp
jge
in
iret
inc
stos
jno
sub
ds
inc
xchg
or
in
sbb
cwtl
inc
jo
and
in
jo
xor
xor
ds
mov
cmp
lahf
mov
push
gs
dec
pop
les
add
idivl
dec
sti
dec
sub
dec
jl
ret
sub
orl
int3
out
mov
jbe
cwtl
rclb
jmp
push
je
out
jae
cmp
pop
push
lahf
inc
sub
jl
cmp
xor
or
stos
shll
scas
aas
sbb
lea
sbb
or
xor
dec
xchg
xchg
xor
fs
mov
fldt
mov
cwtl
pop
add
mov
adc
pop
inc
jno
int
xor
movsl
sbb
sub
sbb
adc
jo
xchg
enter
pop
mov
push
into
add
jnp
inc
pop
or
or
add
test
sbb
xchg
sbb
mov
jp
es
push
fsub
lcall
adc
ljmp
jnp
sub
out
mov
lock
and
popa
inc
lcall
add
sub
dec
daa
push
sbb
outsb
movb
xor
pop
cmp
stc
jbe
addl
xchg
repz
stos
cmp
mov
ljmp
mov
mov
xchg
movsl
jecxz
sbbb
mov
mov
push
inc
sarb
out
into
sbb
sbb
jp
mov
mov
sahf
jp
mov
loope
outsb
mov
lock
not
or
lods
xor
adc
imul
mov
mov
gs
dec
jle
scas
add
cmpsl
dec
push
out
inc
orl
mov
and
or
add
cmp
jmp
fwait
icebp
push
dec
rol
add
xor
sbb
sub
jle
das
jmp
in
sbbl
and
sti
outsb
test
std
mov
mov
inc
jecxz
movsb
mov
jg
lock
repz
repz
addl
mov
test
dec
or
sbb
test
shrl
cmp
loop
xor
cmpsl
or
push
cli
repz
sahf
cmp
lcall
frstor
pop
in
daa
cmp
negl
adc
fisubs
pushf
sbb
sbb
xchg
test
in
and
xlat
sub
jp
shl
jb
fdivrs
aad
loopne
push
mov
shll
movsl
adc
add
cmpsl
push
repnz
nop
lea
out
outsl
cmp
push
push
jl
mov
call
pop
inc
stos
mov
cmp
and
or
and
push
and
push
dec
jle
mov
jae
js
inc
fcom
pop
pop
loopne
or
jecxz
xchg
xchg
cld
cs
pop
mov
mov
push
dec
lahf
fcmovnbe
xorb
std
pop
push
mov
cltd
xor
scas
push
adc
xor
sti
inc
xchg
xor
scas
push
iret
arpl
pop
insl
sub
fidivrl
arpl
jbe
out
pop
sti
xchg
aaa
out
push
inc
jecxz
add
addl
std
fistpll
pop
or
and
lret
push
cmp
push
xor
inc
cli
jb
jge
adc
push
test
sub
das
rcll
jecxz
test
sbb
aad
cmp
out
fcmovbe
dec
xchg
insl
mov
mov
adc
add
sbb
cmp
jle
and
scas
sub
lods
inc
inc
jle
mov
cmc
mov
xchg
sbb
jmp
fs
stos
mov
jae
jns
leave
data16
in
dec
arpl
scas
jle
repnz
push
cmp
addr16
test
mov
sub
pop
mov
icebp
sbb
pop
cmp
js
jne
sbb
fisubrs
fwait
cltd
xor
das
xlat
leave
dec
and
call
push
or
daa
stos
testl
es
call
mov
out
xchg
ja
cld
pop
mov
pop
or
xchg
sub
sahf
aaa
xchg
ss
xor
add
cmc
hlt
xor
ret
std
adc
inc
lahf
push
mov
cwtl
sahf
les
cwtl
cmp
add
out
xchg
popa
sarl
jg
cld
dec
jmp
cmpsl
rcrl
call
arpl
out
push
sub
push
add
ss
mov
jmp
in
xchg
inc
inc
into
xchg
adc
int
pusha
sbb
mov
push
in
xor
cli
adc
dec
cltd
pop
outsb
imulb
jnp
hlt
sub
pop
test
dec
out
int3
adc
mov
aaa
out
fcmovu
pusha
ret
lea
mov
sbb
imul
sub
out
xchg
ret
push
roll
cltd
pop
push
shlb
out
inc
iret
jnp
in
xor
dec
call
ss
lods
sbb
rcrl
xchg
cli
adc
aas
test
pop
cwtl
stos
inc
cmp
xor
pop
and
in
xorb
cmp
test
jo
mov
inc
fisubl
out
mov
test
out
in
imul
scas
jge
mov
xor
imul
push
mov
outsb
or
repnz
xor
add
lahf
cmp
sub
sarl
into
outsb
adc
mov
or
cld
loope
jle
inc
into
iret
movsl
inc
jae
inc
mov
es
ljmp
push
lock
negb
jo
push
cmpsl
ljmp
inc
ret
cmp
push
or
daa
adc
jmp
push
pop
je
mov
imul
pop
adc
or
js
jle
repnz
daa
outsl
jmp
addb
das
or
sub
mov
jo
scas
lcall
push
pop
jo
jl
pop
push
lahf
sub
xchg
pushf
inc
clc
out
fwait
shl
dec
inc
xchg
dec
std
lods
xchg
push
mov
pop
or
sbb
cld
mov
pushf
rcrb
popa
ret
jnp
je
or
into
outsb
jae
fcmove
bound
mov
ljmp
mov
xchg
ja
mov
mov
cmp
sahf
and
mov
adc
stc
mul
jne
cmpsb
insb
insb
push
addl
ret
fwait
out
push
adc
lea
nop
jns
dec
enter
push
seto
cmc
sbb
sub
xchg
cmp
std
and
cmp
fbld
jle
jb
dec
shlb
mov
lock
ss
loop
add
and
push
jne
xor
sti
ss
stc
cltd
das
ljmp
lods
fwait
sub
mov
add
mov
xchg
adc
ss
cmpsb
mov
test
scas
dec
cmp
lds
sub
adc
mov
ret
cmp
cmpsl
movsb
aam
cmp
std
cmp
lret
std
fstpt
hlt
dec
pop
popa
jp
mov
lcall
push
icebp
lahf
and
aad
sub
scas
and
dec
cmp
fisubl
testb
pop
jb
lods
loop
mov
adc
or
cmp
fidivrl
ficompl
testb
mov
iret
dec
arpl
addr16
jg
or
lahf
inc
inc
or
repnz
push
pop
movsl
sti
push
leave
es
or
push
cmpsl
jl
ljmp
adc
aad
xchg
pop
add
jmp
aam
ja
push
outsl
mov
inc
sub
mov
xor
data16
jbe
test
xchg
test
movsl
fidivl
lods
js
cmp
loopne
push
sbb
imul
push
loope
push
cmp
ret
int
lret
xchg
dec
cmp
lahf
cli
jmp
scas
fmuls
inc
or
push
lret
xor
sbb
inc
stos
cmp
xor
rcrb
cmp
les
cmp
mov
ffreep
js,pn
dec
mov
ja
les
scas
push
sbb
les
xorl
movsb
hlt
aad
fadds
mov
xchg
or
test
jge
adc
sub
xor
or
imul
sbb
imul
shrl
fs
xor
negb
pushf
imul
pushf
mov
leave
fldcw
mov
sahf
imul
arpl
add
outsl
repnz
int
pop
mov
lods
scas
pusha
popf
and
out
sub
jb
call
jmp
enter
faddl
mov
push
pushf
and
lods
sbb
out
xor
mov
inc
pop
push
cmp
xchg
loope
mov
mov
lock
popf
mov
cld
test
lods
jnp
outsb
mov
nop
ret
jge
mov
das
movsl
xor
aam
sbb
scas
adc
divb
mov
iret
xchg
sub
test
xor
in
cwtl
or
mov
xchg
xchg
inc
ret
xchg
je
std
faddl
xchg
mov
mov
arpl
push
loop
jp
xchg
pop
xorb
mov
fdivrl
in
in
lods
sub
ja
sti
arpl
leave
lock
cltd
and
pop
jle
movsb
or
pop
ret
aam
fld
clc
test
dec
cmp
xor
dec
xor
inc
stc
or
int3
je
in
push
lods
mov
cmp
jae
mov
xor
dec
cmpsb
jp
sbb
loopne
add
pop
jne
mov
in
jp
sub
cmpsl
movsb
sbb
inc
fs
sbb
in
jmp
movsl
imul
mov
sub
rcrb
dec
cmp
repz
repz
lcall
inc
or
inc
inc
push
xlat
cld
sub
stos
or
es
jl
dec
or
repnz
call
mov
lock
lahf
ss
mov
inc
cmp
sbb
dec
adc
int
fnstsw
sar
jl
sahf
mov
fs
mov
ret
fsubrl
jle
imul
popa
add
out
jmp
ret
stos
mov
or
jg
push
jb
pop
lret
gs
add
insl
add
fcmove
sarb
and
sahf
mov
cwtl
les
jbe
xorb
dec
push
dec
divb
xchg
stos
mov
sbb
shll
xor
pop
imul
or
lret
push
mov
mov
push
decb
add
jp
mov
xchg
rol
nop
mov
ror
les
out
stos
pushf
push
and
jl
adc
dec
test
jmp
add
lcall
push
shl
out
add
cmp
push
add
insl
ds
std
adc
dec
aam
sbb
jp
mov
in
imul
das
push
xor
fildll
cmp
iret
mov
jb
stc
add
mov
jle
dec
imul
jmp
sahf
bound
fsubs
xchg
add
xchg
clc
xor
in
aas
decb
push
sub
int3
xchg
sahf
test
sbb
iret
mov
popf
push
je
insl
mov
adcl
add
hlt
fnstenv
xor
cmp
cmp
cmp
arpl
push
imul
mov
jnp
cmpsl
mov
mov
adc
shll
cmp
mov
loop
scas
inc
das
outsb
and
sub
cmp
addb
push
dec
pop
xchg
cmp
out
and
mov
fstpl
inc
xor
pop
dec
xor
popa
adc
mov
aad
movsl
and
xor
xchg
sub
in
sbb
loop
mov
mov
mov
iret
bound
leave
out
xchg
mov
dec
adc
ret
jae
imull
cmc
iret
and
add
inc
stc
cmp
and
outsb
mov
outsb
xor
ret
outsl
inc
fwait
cld
cmp
and
lret
jne
cltd
lea
dec
adc
testb
mov
xor
fisubrl
xchg
jle
inc
pop
sub
jns
mov
leave
jg
lret
sbb
mov
mov
push
ss
int
add
push
fcomip
enter
inc
xlat
decb
mov
sbb
jbe
aas
cld
xor
lods
lods
inc
sub
xchg
arpl
xorl
orb
lret
cld
pop
popa
int3
in
arpl
jge
xchg
xchg
xor
je
aam
push
xorl
clc
cmc
sub
imull
jmp
sub
popf
xchg
in
and
mov
mov
mov
and
mov
xchg
or
fidivrl
mov
mov
add
insb
fdivrs
inc
je
loope
fcom
or
and
lock
jge
int
lods
sbb
add
push
pop
xchg
lea
ret
xchg
inc
xor
sbb
inc
cmp
and
mov
fs
and
insl
out
jo
mov
jb
or
imul
and
fsubrl
xchg
mov
ficomps
bound
scas
sbb
add
sub
cs
xchg
push
jb
dec
mov
movsb
das
shlb
shrb
sub
sbb
add
adc
test
mov
or
adc
jmp
xchg
mov
add
ret
sbb
xor
sub
add
xchg
or
mov
setns
push
add
shrl
ja
sub
scas
imul
mov
mov
xor
mov
lea
inc
xchg
ljmp
pop
dec
adc
adc
xchg
ds
sub
scas
sbb
sbb
insb
inc
icebp
dec
cmp
jecxz
xor
in
rolb
or
sbb
cld
movsl
fcmovb
push
push
mov
or
jb
inc
pop
mov
mov
negb
push
gs
pop
add
daa
out
aam
mov
dec
lods
incb
lahf
jg
mov
pop
xchg
mulb
mov
mov
mov
and
lods
rcrl
fsubp
pop
xchg
mov
sub
or
xchg
sbb
jecxz
sub
fdivrs
or
mov
or
cli
ret
inc
lds
xchg
inc
and
cmpsl
add
cmpl
sbb
aas
mov
popf
std
dec
or
cld
cmpsb
and
jp
cmp
mov
je
movb
push
sbb
mov
cmp
mov
add
imul
jo
sub
cmpsl
and
push
lret
push
sbb
inc
outsb
pop
int
jg
test
xchg
push
add
push
fisubs
adc
xchg
pop
push
outsl
cs
or
cmp
or
mov
dec
xor
call
xchg
sub
inc
jno
jg
lret
std
mov
in
jns
adc
mov
test
sbb
mov
jne
xor
fsubrs
gs
imul
xorl
out
addr16
sub
es
idivl
mov
imul
push
and
sarl
std
roll
jns,pt
loop
inc
mull
mov
cli
je
pop
in
cmpsl
clts
xchg
subb
and
xchg
outsb
mov
push
and
dec
sbb
mov
out
mov
mov
test
flds
lea
inc
cmp
subl
xchg
mov
push
stos
imul
loop
outsb
fistpl
and
movsl
jmp
aad
jecxz
sbb
xchg
add
jp
movsb
scas
ja
add
mov
pop
or
dec
mov
push
cmc
insl
xlat
in
lret
or
dec
dec
push
into
sub
pushf
dec
pop
in
repnz
inc
sub
out
xor
pop
test
jnp
jnp
das
fidivrl
dec
mov
jae
adc
fwait
icebp
xor
test
cli
jo
repnz
loopne
jb
pop
inc
add
jae
sub
sahf
inc
in
jl
or
sbb
dec
cmp
push
pop
xchg
or
xchg
mov
orb
jg
xchg
xor
and
rolb
popf
inc
push
pop
dec
test
bound
iret
mov
and
add
mov
mov
mov
sub
adc
xchg
jo
mov
mov
mov
xor
test
mov
outsl
popa
push
push
lock
adcl
out
in
or
cmpsl
xor
outsl
test
dec
rcll
push
shll
arpl
inc
cmp
jge
xlat
rol
das
in
cmp
xor
dec
loop
gs
jp
sarl
jle
cmp
inc
aam
jl
daa
ret
mov
inc
jno
es
add
test
in
mov
fcmovu
xor
ds
mov
pop
pop
sarl
in
pop
sbb
fbstp
fs
mov
pop
dec
ficoms
and
pop
push
adc
and
out
dec
jns
jbe
sbb
and
push
scas
sbb
pop
scas
inc
mov
cld
popf
push
xchg
aas
ds
idivl
shrb
popa
add
add
or
push
fisubl
in
les
lea
xchg
adc
add
cmp
cltd
jnp
push
xchg
push
dec
mov
xchg
inc
repz
jne
dec
ds
sahf
mov
push
or
int
lods
cli
hlt
jecxz
dec
or
pop
ret
or
jmp
xor
dec
andl
dec
lods
add
mov
call
daa
add
and
pop
lods
lods
movsb
dec
xor
inc
not
and
fdivs
pop
xlat
sahf
aam
in
lods
dec
mov
inc
mov
mov
push
movsl
xor
xor
jo
negb
cltd
dec
mov
movsl
adc
push
lcall
ret
xchg
fistl
mov
int
jl
lret
mov
andb
std
xlat
sub
mov
enter
mov
dec
add
xchg
insb
bound
clc
insl
sarw
inc
aam
pop
std
stos
popf
movsb
adc
mov
jecxz
jmp
aaa
xchg
mov
xchg
cmp
pop
mov
xor
sub
ja
lret
cmp
out
cmpsl
and
lock
daa
push
sbb
inc
xor
pop
repnz
in
aaa
sahf
out
mov
fidivs
bnd
pop
loope
es
jmp
orl
mov
ficompl
addr16
dec
push
ljmp
sbb
jno
nop
icebp
inc
mov
xadd
pushf
lahf
stos
ret
dec
stos
pop
roll
jo
cmp
jmp
test
xchg
in
popa
mov
mov
xchg
adc
call
mov
daa
and
fistpl
adc
dec
clc
add
or
and
inc
jbe
rcrl
loope
dec
add
dec
ja
icebp
sbb
mov
fucomp
cmp
ja
mov
or
out
repz
dec
ja
loope
das
and
fucomp
in
test
int
ficoms
xchg
dec
inc
cmp
and
lock
fisubrl
add
push
fists
stos
inc
stos
sub
push
mov
push
mov
in
sub
mov
ret
in
pop
cmp
out
mov
and
mov
insl
test
fmul
xlat
aas
or
cmc
mov
sbb
loopne
out
fcoms
shrl
loopne
arpl
ljmp
cli
mov
fcoms
lret
ret
fucomip
push
sti
pop
xchg
mov
imul
hlt
mov
arpl
and
outsb
xor
dec
pop
lcall
stos
jns
pushf
sub
jecxz
movl
push
mov
mov
push
cmp
stc
and
mov
aam
call
loope
test
sbb
iret
repz
clc
es
mov
mov
pop
add
push
mov
test
inc
hlt
mov
fisubs
cmpb
fucomip
movsl
mov
insb
clc
mov
dec
shrl
in
in
mov
push
sahf
sbb
sbb
cmpsb
dec
movsb
lcallw
adc
es
cwtl
leave
mov
xchg
scas
and
dec
cmove
pop
inc
xor
dec
stos
adc
test
mov
xchg
enter
dec
push
clc
popa
adc
inc
iret
es
adc
js
jb
ljmp
rorl
pop
and
xchg
pusha
xor
ret
ror
push
repnz
dec
fidivl
out
mov
jo
mov
sub
pop
xor
sub
inc
pop
rclb
aaa
cmp
adc
mov
es
jno
inc
pushf
pushf
mov
pop
divl
ja
pusha
adc
loopne
inc
mov
adc
imul
xor
mov
je
and
iret
inc
or
add
mov
insl
pusha
cmp
ficomps
add
icebp
inc
scas
dec
cltd
dec
into
je
cmp
adc
dec
out
in
iret
push
popf
rclb
iret
xor
inc
inc
lock
insl
enter
sub
inc
call
cs
push
mov
cmp
out
sti
xchg
mov
push
in
pop
sbb
stos
xor
gs
pop
cmpsl
pop
cmp
aad
xor
in
push
push
dec
mov
inc
or
rcll
push
std
mov
pop
jae
adc
sub
pop
lahf
sub
rcrb
lsl
and
mov
scas
addr16
push
inc
mov
pop
ja
rclb
jp
bound
mov
cltd
imul
fs
pop
cmc
mov
sub
adc
adc
mov
test
data16
fistpll
lea
popa
icebp
ja
xor
mov
pop
loop
iret
insl
xchg
movsb
push
mov
ret
cli
mov
and
and
jae
mov
xchg
pop
dec
cmp
mov
popa
push
or
fwait
ret
in
loop
inc
fcoml
orb
add
loope
mov
mov
nop
cmp
mov
fcmovnu
dec
rcrl
mov
scas
in
orb
pop
or
repnz
pop
loope
add
mov
sbb
dec
call
sbb
pushf
nop
push
adc
sub
push
repz
pop
lods
mov
cmpsb
inc
nop
xchg
aam
mov
adc
dec
dec
jge
jnp
mov
jns
add
adc
xchg
dec
mov
fwait
pop
add
xchg
mov
mov
xchg
cmp
rol
outsb
into
xor
hlt
insb
push
pop
and
int
inc
cmp
mov
fadd
mov
adcl
mov
mov
mov
pusha
fcoml
and
in
jae
inc
cs
xor
cmpsb
push
testl
inc
jne
dec
adc
lss
mov
dec
mov
mov
fiaddl
aad
ljmp
clc
push
cmpsl
ljmp
das
inc
repnz
pop
outsl
sub
fs
ret
fs
jl,pt
shl
pushf
shlb
pop
dec
rclb
mov
lds
xchg
push
pop
or
cmp
or
imul
dec
test
fidivrl
ret
ss
scas
popa
pusha
daa
int
push
movsl
sub
push
mov
stc
outsl
pop
in
lds
test
mov
sub
sub
sbb
lds
xchg
sti
xor
inc
jl
add
cld
lock
and
call
add
sti
cld
sbb
movb
out
gs
int3
addr16
mov
mov
iret
inc
cltd
and
loope
cmpb
arpl
sti
and
test
xor
lods
push
jl
dec
push
lcall
xchg
test
shrl
mov
out
sbb
jmp
push
jno
xor
mov
or
pop
mov
add
ja
jne
outsl
cmp
fisttpll
mov
mov
adc
mov
aaa
jo
stos
push
cmp
cmp
insb
inc
xor
sub
push
add
pushf
pop
jae
add
lret
or
mov
jl
sbb
js
mov
pop
inc
adc
lret
push
pop
js
xorl
jnp
push
out
sbb
das
dec
nop
mov
test
ds
in
insb
sti
cmp
out
cmp
sub
fdivr
mov
mov
iret
xchg
push
neg
in
pop
test
cs
push
fmulp
leave
call
push
icebp
shrb
adc
pop
jp
mov
push
aas
push
ret
stos
mov
mov
jno
cltd
gs
and
jle
xlat
fnstenv
push
ror
adc
adc
jne
rcll
pop
push
adc
or
mov
enter
xchg
adcl
cmp
out
or
xchg
pop
mov
into
pop
jno
xchg
int
push
inc
adc
dec
loope
bnd
sbbb
sub
fwait
inc
lods
fadds
loope
in
dec
xchg
mov
inc
xchg
std
push
mov
dec
andl
add
sbb
in
sbb
flds
lahf
gs
scas
pop
repz
or
pop
or
pop
push
ret
lock
inc
inc
sbb
push
popf
fldt
xor
std
push
movsb
xchg
mov
and
jne
or
cmp
sub
push
ret
mov
inc
movsl
xor
into
xlat
insb
and
inc
and
sub
sub
cmp
mov
fstpt
cmp
sub
mov
xor
xor
or
mov
notl
in
mov
fnsave
dec
mov
in
adc
rclb
leave
ret
sub
imul
mov
push
mov
aas
ds
jb
sub
rcr
movsl
test
leave
addb
or
icebp
incb
mov
pop
inc
repnz
fstl
cmp
movsb
sbb
and
ret
aad
inc
and
inc
leave
sbb
and
test
mov
xchg
dec
cmp
jne
xchg
imul
pop
fimull
std
popf
and
fwait
sub
jbe
mov
mov
jle
dec
sbb
and
pop
add
dec
fucomip
mov
shll
jl
lcall
repz
mov
cmpsl
mov
mov
ds
sbb
lret
aam
addr16
pop
jns
lock
int3
stos
aas
dec
mov
add
pop
dec
mov
cltd
lret
mov
lahf
rorb
adc
inc
insl
sarl
mov
ljmp
mov
fcmovne
je
es
call
push
leave
mov
sub
shl
jb
loopne
mov
cs
mov
inc
lds
cli
jl
sahf
scas
faddl
cltd
xlat
iret
mov
int
std
stos
inc
pop
inc
shlb
add
popa
mov
xor
cmpsb
loopne
mov
in
mov
notl
movsl
scas
std
das
lock
loop
cli
xchg
bound
jne
lds
xchg
nop
jnp
and
cwtl
cmc
jb
mov
or
call
dec
mov
mov
mov
ljmp
push
mov
mov
mov
cmpl
mov
fsubrl
adc
popa
in
lahf
pop
adc
xor
adc
aas
jb
mov
cmpsl
out
in
pop
rclb
sub
fmuls
jge
lret
fcomps
or
in
das
lods
mov
fsub
outsb
sbb
push
add
mov
out
test
xor
roll
inc
pop
mov
jne
xor
dec
leave
mov
lahf
sbb
sti
aad
mov
jno
loopne
push
testl
mov
sbb
stos
or
fisttpl
nop
repz
and
fisttps
test
pushf
cmp
loopne
sub
cmp
clc
adc
inc
cmp
and
bound
lret
cmpsb
loopne
lret
sbb
mov
jnp
in
data16
clc
pop
mov
jmp
test
rcll
dec
mov
sbb
sahf
mov
xlat
std
leave
xor
xor
imul
mov
sarb
push
fwait
dec
fs
daa
daa
hlt
xchg
dec
mov
insb
mov
imul
mov
cmp
shrl
cmpsl
ljmp
fildll
ljmp
outsb
sar
adc
and
int3
mov
enter
pop
test
pop
pop
xchg
dec
and
call
dec
mov
adc
adc
push
cmc
fistps
mov
pop
jno
loope
xor
jne
sbb
call
jnp
loope
insl
add
push
mov
jbe
mov
lcall
jno
test
or
xchg
fcoml
insl
lods
out
ret
data16
cli
leave
lea
outsb
adc
or
pop
sub
cli
test
sbb
mov
mov
jp
shl
sbb
add
testb
sub
and
sbb
mov
mov
je
stc
imul
popl
ret
mov
inc
test
dec
add
loopne
jno
int
and
adc
mov
mov
cmpsl
lahf
test
in
push
mov
add
fs
jg
xchg
ja
cmp
decb
push
pop
add
jne
mov
xlat
add
xor
fwait
mov
in
sub
out
cmpsb
cmp
cmp
pop
push
popl
push
daa
out
lret
in
or
and
rorb
test
cmp
jns
xchg
sub
movsb
xlat
fiaddl
xchg
lret
lret
sbb
cmp
add
cmp
mov
out
sbb
adc
pop
js
arpl
jmp
jle
pushf
dec
arpl
lret
flds
lea
das
js
nop
mov
adc
inc
in
rcl
mov
stos
fstps
lock
lods
sbb
jecxz
aas
sahf
adc
push
pop
dec
push
mov
sbb
leave
jne
inc
push
repz
sub
out
repz
cmp
out
mov
stos
scas
mov
pop
cmp
fwait
mov
movb
dec
int
mov
xchg
je
lret
mov
xchg
cmp
sub
and
sahf
orl
shlb
pop
and
out
inc
lahf
pop
mov
inc
push
lret
mov
movsl
xchg
lds
mov
jecxz
cmp
jp
mov
cltd
cmp
imull
adc
push
dec
loop
fdivrl
jb
xchg
aad
xchg
mov
xchg
jge
stos
addr16
xor
push
repnz
pop
cli
jnp
inc
xlat
fsubrs
rorl
adc
or
cmp
sahf
shr
mov
adc
inc
stc
shrl
jecxz
push
mov
arpl
add
cmc
mov
mov
push
fwait
mov
lahf
and
sahf
push
push
mov
pop
mov
cmp
in
adc
and
and
xor
sub
call
jecxz
pop
lcall
arpl
xor
and
mov
xchg
mov
cmc
ror
pushf
nop
and
aam
jno
cmpsl
aas
cs
repnz
fdivrl
and
adc
push
aad
adc
and
sub
xchg
jp
pop
test
ja
lods
sub
sub
test
mov
iret
mov
repz
sbb
pop
out
out
lret
or
or
jo
push
sbb
jb
mov
sub
push
mov
in
xor
jnp
js
clc
cmpsb
xor
orb
cmp
pop
icebp
jge
pop
pop
sti
int3
fisubl
or
jl
call
ret
sub
jno
imul
pusha
and
pop
cmp
insl
bound
dec
sub
adc
cmp
fnsave
xor
mov
dec
js
mov
movsb
es
sbb
out
add
dec
or
sbb
add
cld
ret
inc
add
cmp
push
int
push
sub
rcrb
sub
shll
js,pn
jmp
lods
xorl
mov
adc
gs
insb
pslld
dec
mov
shll
or
dec
sub
pop
ror
jne
mov
xor
mov
pop
mov
push
sarl
stos
mov
frstor
adc
mov
insb
sbb
call
daa
jae
icebp
pop
aaa
xchg
xchg
aam
or
stc
push
dec
sub
ljmp
outsl
leave
or
jp
xchg
fistpll
adc
pop
sbb
mov
adc
je
flds
add
inc
or
sbb
adc
les
adc
pop
or
sti
sbb
dec
je
mov
and
xchg
cmp
insl
mov
sbb
cmpsb
dec
leave
sbb
out
test
and
mov
lods
insl
psrlw
mov
shl
add
fldcw
loopne
ret
sbb
jl
jmp
push
cltd
sbb
arpl
loopne
cltd
push
fidivs
sub
aaa
addr16
jmp
xor
xchg
push
xchg
push
stc
mov
mov
movsl
jae
mov
and
shll
add
imul
pop
lods
dec
cltd
mov
lahf
idivl
push
aaa
std
call
clc
fistps
loope
dec
je
lret
mov
lods
jnp
data16
js
sub
push
pop
out
in
into
out
jl
test
bound
sbb
nop
hlt
dec
inc
jge
xchg
test
nop
sbb
int
test
cmp
xor
test
cld
ret
mov
loope
movsl
insb
or
lds
outsl
sub
mov
pcmpeqb
int
mov
jecxz
pop
push
test
and
adc
movsl
loop
push
dec
mov
lock
cs
das
cs
jnp
nop
pop
or
jg
ss
icebp
rorl
cmpsb
and
cld
xchg
addr16
pop
cltd
cltd
mov
jle
and
ficomps
scas
mov
in
cmp
js
xchg
psrld
cmp
push
xor
xor
stos
lret
push
xor
lret
xchg
std
dec
and
mov
add
jge
enter
test
int3
xchg
lahf
lds
push
jbe
test
cmc
fucomi
cmpsb
pop
or
jno
sub
outsl
aas
out
gs
inc
dec
xor
xchg
inc
je
ds
inc
sbb
pop
inc
dec
mov
loopne
adc
xor
cmpsl
popa
mov
xor
scas
cmpsl
jnp
xchg
pop
jae
xchg
or
or
xchg
fildl
je
fidivl
mov
fcoms
mov
xchg
movsl
and
loopne
bound
mov
push
mov
out
daa
cmp
aaa
and
test
mov
pushf
popa
lahf
jne
mov
xchg
icebp
push
jmp
or
jmp
mov
xchg
imul
dec
mov
adc
push
bound
dec
stos
cmp
dec
mov
rolb
fadds
movsl
mov
in
inc
adc
je
mov
push
sbb
out
mov
pushf
sub
jle
fistpll
es
cmp
imul
enter
sar
loop
gs
or
andb
xor
aas
add
lds
cmp
ss
xchg
xchg
adc
xchg
push
jne
xor
ret
subb
inc
notb
add
fildl
cld
dec
push
ja
scas
insb
mov
lahf
push
movsb
adc
xlat
leave
pop
call
or
dec
sub
sbbl
jnp
sub
xchg
mov
mov
addr16
out
push
sti
jle
jmp
clc
xchg
pop
pop
add
test
pop
ss
mov
adcb
inc
popa
push
sbb
out
in
jle
lods
xor
cmpsl
add
cmp
fcomps
inc
or
dec
pop
and
mov
aas
xor
neg
dec
out
dec
mov
sbb
fcmovnu
ss
jne
dec
clc
sbb
add
cmpsl
int3
je
cmp
dec
sar
xlat
clc
hlt
dec
movsl
mov
sti
jg
inc
lea
fadd
dec
pop
call
push
cmpsl
mov
mov
lods
push
outsb
xchg
jle
jne
pop
scas
push
mov
movsb
xchg
mov
pop
mov
add
dec
xchg
mov
aas
gs
pop
xchg
mov
addb
jne
jbe
jbe
push
add
adc
xorl
adc
xchg
xor
push
mov
mov
outsb
cs
subps
inc
mov
cmp
sbb
xchg
leave
and
jae
add
jo
adc
test
movsl
fnsave
push
sbb
fnop
jbe
ljmp
xchg
push
or
pusha
dec
and
les
mov
addr16
sub
pop
jl
jae
cmp
arpl
icebp
cmp
cmc
lret
push
xor
jb
inc
fsubrs
pop
sub
clc
idiv
imul
or
push
movsb
xchg
add
fimull
js
adc
fwait
fwait
inc
sub
push
cmp
rclb
jb
hlt
push
int
xchg
adcl
lret
dec
leave
push
ficomps
das
jbe
test
out
addl
sbb
std
xor
xchg
leave
pop
mov
pop
mov
shlb
ret
repz
fwait
lds
test
fs
jmp
jp
sahf
cmpsb
aad
outsl
movsb
mov
and
out
and
sbb
mov
pop
fsts
xor
xchg
mov
and
mov
push
les
cmc
imul
rolb
lret
stc
or
je
pop
popa
int
lds
out
ret
inc
add
cs
out
idivb
ret
lahf
cmp
jae
dec
sbb
mov
inc
sbb
test
ljmp
add
mov
jl,pt
in
push
int
jb
js
mov
xchg
das
dec
fdivrp
push
leave
or
mov
xor
lcall
test
enter
and
inc
add
dec
mov
sub
inc
dec
addb
cwtl
xor
inc
sbb
pop
mov
xchg
xchg
pop
mov
jo
push
jae
sahf
int
sub
add
loop
jl
xchg
add
add
adc
add
jbe
lret
xor
nop
add
into
rolb
cmp
and
jo
ljmp
inc
push
lret
push
xor
loope
pop
imul
stos
fimull
xor
or
jno
xor
gs
and
inc
mov
mov
test
lods
clc
mov
jp
aaa
fbstp
jp
popa
sti
dec
sbb
push
imulb
loop
call
insb
mov
daa
cli
mov
dec
adc
jg
xchg
imul
dec
jbe
mov
lret
xchg
sub
adc
in
mov
pop
mov
mov
jmp
cld
push
add
fisubrs
mov
lock
push
les
mov
and
mov
push
rclb
dec
cmpl
stos
inc
bound
fisttpll
cmpb
adc
xor
lret
js
dec
cmc
mov
push
xchg
mov
call
daa
repnz
mov
outsl
cs
popa
lea
mov
xor
and
and
jg
mov
lret
adc
pop
pop
adc
popa
std
jge
pop
mov
out
pusha
ljmp
dec
dec
cwtl
ja
lods
lock
mov
sti
jo
fucom
adc
jb
add
arpl
movsb
add
dec
jae
dec
mov
cld
sub
addr16
aas
add
fildl
shrb
call
sahf
or
in
mov
in
adc
inc
popa
xor
mov
sub
or
lock
pop
mov
push
int3
dec
cmp
rcrb
cmp
mov
loope
mov
xchg
sbb
jo
dec
std
sbb
bound
lcall
test
popa
add
nop
jge
push
mov
cwtl
adc
cmp
xlat
fwait
sbb
sbb
jno
and
stos
and
xchg
daa
push
sub
sbb
pop
sub
clc
mov
popf
or
cmpsl
imul
pusha
xor
pop
and
adc
fs
lds
cmpsl
js
mov
or
shrb
outsb
pop
pusha
cmp
int3
int
xchg
and
jbe
andb
fidivrl
mov
orb
or
dec
sbb
and
sub
cmpsl
mov
or
xor
mov
mov
mov
push
pop
push
test
shll
push
gs
xchg
pop
sbb
inc
in
loope
orl
call
add
cmp
test
jae
sub
pop
mov
dec
cmp
jl
add
in
push
mov
fdivr
andl
das
sub
mov
push
scas
shrb
inc
in
inc
rclb
add
xor
lods
in
test
test
sarb
push
lret
lret
dec
xchg
stos
lret
mov
dec
cmp
iret
xchg
mov
xlat
xchg
dec
push
movsl
jbe
lods
testb
iret
ljmp
std
mov
jmp
roll
adc
mov
and
jo
popl
pop
popa
pop
mov
xchg
in
dec
inc
sbb
and
sbb
xor
sarb
adc
repnz
clc
mov
imul
mov
into
inc
mov
inc
je
jg
cmc
daa
inc
js
jno
jbe
jmp
sbb
add
insl
nop
jmp
call
sbb
insb
pop
and
sbb
mov
mov
sar
jecxz
fnstcw
push
test
push
cmpsb
cltd
sub
mov
gs
test
or
inc
pop
mov
popf
aad
lods
rclb
fucomp
ljmp
mov
lods
aas
mov
or
and
mov
dec
mov
xchg
lret
mov
sbb
inc
mov
push
dec
add
jne
push
mov
push
jae
mov
mov
inc
inc
lret
mov
mov
mov
adc
loop
xor
pop
das
mov
inc
dec
in
inc
bound
repz
xchg
lret
rorl
mov
out
arpl
int
jne
adcl
inc
mov
in
pop
inc
mov
out
aas
jge
pop
les
movsl
dec
lret
mov
inc
lods
inc
sub
xor
cmp
cli
jecxz
cld
iret
scas
xor
sbb
pop
jmp
mov
fnstcw
ds
sbb
xor
jb
or
gs
outsb
add
jp
mov
leave
arpl
rcll
jno
addr16
aam
clc
cmp
int3
sub
dec
cwtl
cmc
rolb
mov
fwait
mov
cmp
dec
je
sub
xchg
mov
lea
mov
out
xlat
lods
aas
shlb
or
and
mov
rol
out
mov
fsubs
out
fwait
std
add
sub
push
scas
xchg
shll
mov
sub
jns
shll
test
mov
lods
jecxz
aas
push
outsl
dec
sbb
sub
jb
mov
sbb
lcall
loop
mov
outsb
jbe
cmp
inc
mov
loopne
rorl
xor
leave
dec
dec
add
mov
and
pusha
daa
push
bound
call
dec
rcl
enter
shll
lret
and
fdivs
adc
push
leave
xchg
xor
inc
jb
out
test
fdivrl
pop
and
jnp
stos
adc
mov
loop
andl
outsb
mov
popf
cmp
loope
jne
into
loope
popa
xchg
outsb
pushf
das
xor
int3
pop
mov
cmp
add
adc
pop
gs
dec
adc
leave
lds
lret
push
xchg
ds
push
int
pop
cld
pushf
xor
adc
add
xchg
cmp
sub
into
ret
aaa
fbld
ljmp
fisttpl
in
loop
adc
stos
dec
jle
in
cmp
fwait
xchg
inc
cmp
and
and
and
mov
arpl
aaa
cmc
jo
xor
movsl
fnstcw
lock
icebp
shlb
repnz
or
loopne
mov
lods
xorl
jae
push
dec
into
xor
sbbb
add
add
sbb
xor
mov
fiaddl
outsb
dec
jae
or
movsb
xchg
addr16
leave
movsb
and
fs
and
shr
inc
pop
add
out
into
and
scas
aas
movsb
adc
jmp
push
or
scas
jmp
fsubrs
pop
xchg
jno
aas
and
mov
inc
pop
mov
jno
lret
pop
ret
xchg
or
and
mov
push
jbe
out
test
lcall
cmp
jno
popa
pop
xchg
sub
adc
stos
fchs
lcall
inc
mov
icebp
mov
nop
mov
xchg
loope
mov
mov
ds
fmul
mov
dec
pop
adc
sub
pop
and
lret
cmp
fsubrs
cmpsb
les
inc
test
lcall
ljmp
imul
es
outsb
sbb
xor
out
pop
xor
repnz
add
popf
call
js
mov
aaa
ffreep
jmp
fs
popf
inc
fiaddl
or
mov
cmpl
out
sbb
dec
popa
adc
ss
aaa
and
std
inc
add
movsb
push
mov
dec
dec
fimull
je
or
and
and
cli
hlt
clc
shr
cwtl
dec
cltd
add
sarl
je
ret
fists
jne
jne
mov
test
ss
jge
or
int3
push
mov
xor
inc
adc
ja
jns
push
mov
adc
dec
sub
sbbb
fwait
mov
push
xchg
and
in
jb
jle
inc
iret
pop
push
fwait
lock
mov
adc
arpl
xchg
outsl
addb
pop
mov
int
fisttps
push
mov
cs
icebp
cs
aaa
in
mov
push
cmp
add
and
mov
cmp
cmp
repz
cwtl
jle
inc
xor
mov
stos
in
adc
inc
int3
jae
repz
cmc
mov
arpl
inc
push
es
call
jne
and
inc
mov
lret
test
ret
jno
cmp
jno
fists
in
cli
outsb
jnp
pop
jne
jns
mov
adc
jne
add
sti
stos
lods
dec
xor
cmp
pushf
push
sub
mov
fmuls
nop
rcrl
mov
and
sub
xor
pop
test
ds
pop
mov
xchg
je
pop
cmp
or
push
mov
cmp
inc
push
aas
in
cmp
jb
sbb
inc
mov
outsl
inc
dec
pop
pop
adc
jnp
popf
cmp
jns
sub
pop
dec
inc
and
mov
cld
mov
mov
mov
mov
popf
dec
fs
inc
les
stc
inc
or
andb
pop
fdivl
pusha
sub
movsl
cmp
cmc
sub
pushf
inc
cmp
leave
push
cmp
jg
arpl
sub
cmp
lea
push
pop
add
xchg
rcrl
es
sbb
outsl
pusha
sbb
jo
pop
add
test
imul
int
out
sub
inc
out
inc
pop
xchg
xchg
fidivrs
adc
dec
dec
cmp
test
mov
or
sub
mov
ljmp
xlat
push
jnp
sahf
subb
js
mov
stc
dec
arpl
adc
gs
cmp
pop
xlat
iret
fs
into
or
es
add
imul
subl
cmpsb
xor
aad
mov
and
lahf
sub
jp
pop
push
mov
out
xor
sarb
cli
sbb
lret
inc
sub
xlat
stos
sbb
aaa
xchg
xor
imul
mov
inc
push
into
fcomps
jecxz
dec
lea
cs
ljmp
push
xchg
int
inc
mov
push
xor
imul
out
sarb
mov
repnz
negl
ss
mov
mov
iret
xchg
test
dec
insl
jl
push
jae
rclb
mov
pop
dec
mov
pop
and
adc
scas
test
mov
or
popa
fwait
in
lock
call
aas
shlb
push
mov
fnstenv
pop
sbb
sub
pusha
push
addr16
lods
xor
cmpsb
pushf
test
lea
xor
cltd
mov
sbb
movsl
push
nop
lea
icebp
cmp
push
shrb
sbbb
ljmp
aad
push
icebp
inc
pop
lcall
sti
loope
out
in
and
daa
fimuls
jno
rolb
add
std
mov
test
mov
dec
mov
sub
into
sub
int
pop
add
out
movsl
loopne
mov
sti
leave
lcall
aam
cmp
int3
mov
fistpl
pop
js
pusha
enter
add
fcmovbe
pop
push
cltd
arpl
popf
mov
jl
lcall
pusha
pop
and
jno
fildll
loopne
repz
jecxz
pop
test
pop
arpl
mov
jecxz
push
sbb
scas
cli
cmp
and
nop
dec
jp
fnsave
mov
je
dec
arpl
cmpb
mov
mov
ja
mov
cmp
ds
push
push
lods
cmp
outsl
stos
pushf
inc
inc
jmp
shl
in
insl
int3
ss
movsb
or
xchg
imul
cs
fisttpl
push
loope
stos
mov
pop
push
popl
jl
cmpsl
push
pop
fdivrs
push
dec
leave
pop
dec
call
mov
inc
jmp
ds
cmp
inc
js
pop
insl
movsb
ret
sub
popf
add
enter
cmp
mov
leave
and
pop
mov
push
sbb
mov
pop
call
sub
out
cmp
xor
mov
ja
in
inc
scas
pop
data16
fisubrl
or
out
and
je
lret
jg
cmp
inc
fsubrl
inc
je
dec
fimull
fisttpl
int
daa
or
outsl
add
inc
loopne
sub
lock
pop
cmp
dec
pop
jnp
daa
insb
cltd
aaa
jbe
fbstp
jp
popf
push
dec
xchg
cmc
outsb
sub
mov
mov
dec
mov
outsl
sbbl
loopne
jmp
out
mov
test
add
mov
ret
xorl
in
call
adc
leave
or
pop
mov
repz
movsl
int3
xor
cli
insb
cmpsb
cli
push
or
test
sub
in
jns
pop
rorb
leave
adc
sub
xor
jae
mov
adc
cmpb
fisttpl
inc
sub
push
jb
push
xchg
scas
cmp
out
js
sbb
push
sti
popf
sbb
imul
and
xchg
mov
xor
inc
xor
push
rcr
fistpl
jle
push
sub
add
push
lods
adc
dec
mov
mov
imul
and
mov
leave
sbb
icebp
adc
push
out
mov
rol
mov
sub
cld
call
fsubrs
and
dec
mov
pop
mov
mov
lret
movl
stos
lods
jbe
pop
jne
data16
pop
daa
push
jb
aas
xchg
hlt
push
mov
fistpll
push
push
or
insl
lea
push
or
sarl
test
sahf
sub
push
push
pop
ds
sbb
jno
dec
or
popf
fwait
inc
xor
aas
xlat
popf
add
out
cmp
icebp
sub
rclb
icebp
pop
ja
push
mov
repnz
iret
cmp
insl
mov
std
xor
outsl
test
xchg
push
test
push
ds
add
mov
insb
jp
jp
rorl
shll
fwait
mov
mov
pushf
cld
test
fcomps
insb
xchg
icebp
pop
sbb
imul
or
xchg
push
pop
xchg
push
cmp
and
es
imul
popf
jl
imul
inc
add
or
push
popa
pop
push
dec
mov
mov
leave
mov
fldcw
jo
or
loope
in
je
dec
xchg
mov
jecxz
mov
shlb
push
mov
push
sbb
adc
inc
cwtl
insl
xchg
push
adc
out
popa
jmp
repz
pop
xchg
aad
sub
sub
add
inc
mov
les
stos
add
dec
xor
mov
ret
add
xchg
popa
stc
fld
mov
mov
mov
ds
iret
test
cmp
mov
sub
fs
cmp
mov
outsl
ret
aas
cwtl
add
mov
pop
fs
aaa
test
pusha
xchg
and
inc
arpl
fwait
fwait
push
or
iret
sub
dec
out
xchg
or
aad
or
mov
add
push
test
test
mov
ds
sbb
fildl
add
pop
ficomps
inc
mov
push
xor
cmp
scas
nop
jp
mov
fs
cmp
lcall
or
in
fbld
out
pop
add
and
cmp
xlat
fiaddl
dec
out
inc
cwtl
sbb
or
cmp
hlt
mov
frstor
lds
fs
lcall
adc
and
andl
popf
jb
add
aaa
stos
mov
shl
outsb
push
stos
inc
mov
or
inc
mov
les
and
and
sbb
outsb
fcmovu
inc
add
ss
push
adc
loope
lret
dec
jl
data16
inc
or
pop
setl
ljmp
out
or
pop
cmp
hlt
andb
ds
and
sbb
mov
call
xchg
inc
cmp
push
pop
mov
in
ljmp
xlat
int
inc
cmp
repz
scas
lea
push
sub
mov
jae
jmp
subl
sbb
xchg
xchg
jl
mov
cld
ret
mov
lods
jns
test
leave
ljmp
push
lcall
xchg
mov
xchg
std
jl
aad
adc
shll
insl
test
imul
mov
lret
pop
or
and
or
xchg
add
jge
add
jecxz
mov
lods
cmpb
jecxz
loopne
jle
mov
cltd
and
icebp
xor
push
out
iret
xchg
daa
sub
add
push
frstor
cmp
out
movsl
push
popl
in
call
mov
push
inc
jno
pop
push
leave
fcomps
loop
sbb
pop
scas
push
mov
imul
sbbb
pop
je
push
mov
addr16
xchg
movsl
js
in
jge
or
push
faddl
cs
mov
pop
push
xor
shlb
add
fdivrs
pop
sub
cmp
lea
lahf
jb
cli
mov
cmpsb
xchg
subb
andl
adc
mov
in
lea
dec
in
fs
aas
bound
rcrb
je
je
iret
and
cwtl
add
sahf
in
sti
inc
sarl
add
and
xchg
roll
rorl
cmp
or
lret
pushf
test
mov
test
out
ret
pop
xchg
mov
mov
jge
out
test
push
flds
idivl
mov
jno
push
icebp
out
aam
pop
scas
int
mov
cli
xor
out
in
addr16
fwait
repz
or
std
push
popa
lods
mov
mov
mov
es
xlat
push
mov
sti
aam
xor
push
andb
pop
cmp
xor
adc
adc
or
dec
dec
in
push
or
icebp
inc
sbb
inc
inc
js
pop
add
outsl
jbe
rorl
int3
jg
addr16
incb
xchg
and
push
stos
or
and
mov
jns
adc
pop
jg
data16
xor
test
cld
fiadds
pop
pop
sub
fstpt
fdivs
test
into
jge
jmp
push
dec
xor
stos
cmp
mov
in
and
dec
out
cli
cmp
mov
jo
or
mov
xor
inc
imul
jg
add
repz
xor
je
mov
push
sub
xor
cmp
repnz
push
xor
cwtl
fisttpl
insl
stos
cmpsl
in
stos
cmpsb
testl
ja
shrl
cmpsl
fsts
filds
call
jne
jne
adc
cwtl
or
mov
push
pushf
or
jno
dec
pusha
dec
int
mov
jnp
jnp
mov
ljmp
ss
inc
inc
es
xor
stc
iret
loope
xchg
pop
clc
cmpsl
pop
test
cmc
or
nop
rclb
mov
mov
lcall
faddl
jae
add
push
pop
mov
das
mov
mov
data16
xchg
ja
sbb
mov
jno
mov
mov
pop
dec
std
out
andl
nop
inc
nop
es
ljmp
pushf
mov
in
test
pushf
mov
out
xorb
xchg
or
ja
sub
jmp
and
in
sub
mov
jb
and
sbb
mov
mov
int3
add
mov
or
lret
or
ds
stos
int
lods
jb
cmp
sti
push
sbb
inc
push
out
mov
ret
arpl
ja
pusha
cwtl
dec
dec
mov
or
iret
mov
xchg
inc
pop
pop
jne
cli
inc
lds
lods
xchg
cmp
pop
sub
in
aam
mov
js
inc
orb
stos
cld
xor
sbb
cmp
xor
lods
jo
test
mov
pop
xchg
into
xchg
xor
clc
adc
mov
mov
xor
popa
test
jno
es
lock
jmp
sbb
sbb
imul
or
inc
pop
cmp
data16
sbb
sbb
push
mov
mov
jno
push
cmp
cmpb
inc
cmc
mov
cmp
inc
xorl
push
jbe
std
cld
push
cmp
or
ja
mov
adc
pop
imul
lds
sub
dec
pop
add
bound
and
ror
js
shlb
pop
push
je
psrlq
sbb
les
xchg
mov
fidivrl
xchg
popa
fld
addb
aas
mov
imulb
pop
adc
inc
push
insl
dec
pop
push
clc
ds
xchg
int
adc
mov
add
mov
dec
xchg
sahf
subl
adc
jecxz
xor
jno
pop
jno
jmp
imul
dec
add
mov
sub
dec
mov
aad
pop
mov
and
mov
loopne
rcrb
add
adcl
xchg
shrb
cmp
inc
sar
or
cwtl
inc
ljmp
cwtl
int
imul
scas
or
inc
sub
push
cmp
xchg
pushl
dec
fwait
mov
ss
divb
les
in
mov
mov
mov
test
push
insb
fwait
adc
ds
xchg
and
outsl
and
setnp
arpl
xchg
test
dec
aaa
jbe
adc
inc
int3
dec
ds
cmpl
std
jg
stos
es
push
mov
imul
adc
or
es
rorb
and
dec
lret
lcall
and
push
imul
dec
inc
cmpsl
cli
mov
cwtl
fimuls
jp
ret
mov
add
inc
dec
pop
sti
mov
cmpsb
es
scas
test
insl
insb
out
mov
test
pusha
loop
mov
xchg
aad
sbb
lahf
push
lret
sub
add
mov
cmp
adc
xchg
push
sub
xor
lea
mov
mov
jo
jmp
cmpsb
leave
enter
xchg
inc
xor
xor
fs
int3
lods
inc
bound
jbe
mov
mov
gs
stc
loope
jnp
push
fcompl
push
xchg
sub
pop
divb
adc
push
rcll
mov
mov
stos
fimuls
push
popf
js
fcomps
repz
or
addr16
inc
inc
sbb
adc
push
enter
push
mov
xchg
mov
addb
push
out
jns
sub
repnz
nop
jecxz
lret
stos
pop
data16
andl
pop
inc
js
dec
xor
das
inc
xchg
inc
push
push
push
mov
pop
mov
neg
xor
sub
and
mov
cmpsb
mov
mov
push
push
xchg
rorb
cmp
cmp
push
cwtl
cltd
cmpsl
jmp
xor
movsl
imul
dec
movaps
loopne
inc
lea
cmpsl
push
pushf
push
clc
jge
dec
lcall
jmp
sqrtps
call
lods
adc
pop
fistpll
cmpb
add
dec
lret
xor
loopne
cmp
divb
les
mov
outsl
call
stos
jb
loopne
inc
daa
sbb
or
sub
es
int3
adc
add
push
inc
lods
xor
push
push
push
jb
mov
ficoms
je
shlb
aam
push
push
lods
mov
jge
mov
sti
mov
scas
test
cmpsb
aas
les
cmpsb
loope
in
fidivs
adc
mov
test
test
jle
mov
repnz
mov
mov
test
loop
cwtl
shll
cli
cli
das
push
inc
or
ror
jl
movntq
dec
jno
add
popa
dec
sbb
js
aaa
dec
leave
and
sbb
xchg
mov
fiadds
sbb
aam
xor
aam
fmul
xor
rorb
dec
and
mov
into
mov
jb
add
pusha
and
leave
mov
out
outsl
adc
inc
jle
cmp
rorb
das
inc
jne
sbb
xchg
stos
outsb
cmc
and
out
outsl
addr16
push
outsl
pop
int
outsb
out
mov
sub
sub
or
out
and
pop
not
leave
xlat
pop
fnstsw
pushf
pop
loop,pt
fldcw
outsb
push
cwtl
addl
arpl
cmc
fwait
xchg
popa
enter
push
add
sbbl
icebp
xlat
bound
cmp
add
add
js
jg
push
sub
jnp
fidivs
mov
popf
add
mov
in
dec
xchg
mov
addb
cs
icebp
push
mov
dec
xor
push
push
sub
jno
sbbl
cs
lods
sti
fistps
repnz
mov
or
push
je
icebp
subl
cmp
imul
adc
bswap
mov
pop
mov
jae
test
push
dec
add
test
inc
aas
cmp
ja
mov
cmp
add
dec
lods
lret
imul
xor
sub
repz
shlb
in
pop
and
movsl
into
cmpsl
pop
out
fimull
insl
lcall
mov
sbbb
ret
std
inc
test
xor
fdivrs
bnd
rorl
rcrl
jp
into
pop
push
pop
or
stos
stos
dec
xchg
sbb
xchg
mov
inc
mov
addl
inc
add
scas
jmp
cmp
jp
ficomps
js
dec
jo
mov
push
and
push
fdiv
cs
mov
stos
imul
int
mov
and
adc
and
je
pop
sbb
movsl
fdiv
cmp
dec
fstps
cs
push
mov
cmp
adc
push
je
dec
push
pop
mov
repnz
mov
ficoml
pop
mov
pop
jns
arpl
int
stc
mov
shrb
mov
loopne
lods
add
cmpsb
shll
dec
leave
or
jecxz
imul
lahf
mov
out
sbb
fwait
mov
push
sbb
aad
je
loopne
or
or
mov
negb
jns
fsts
jmp
lock
mov
icebp
pop
pop
inc
mov
xchg
dec
xchg
add
in
cltd
out
mov
pop
push
inc
clc
std
fsub
jne
cmp
jo
mov
xchg
xor
cmp
cmp
cmp
je
arpl
jg
ret
xchg
pop
xchg
mov
lods
cmpl
rcrb
movsb
dec
sbb
sbb
and
nop
pop
int3
xlat
and
xor
xor
out
stos
or
nop
jns
mov
ret
push
pop
or
dec
push
mov
pop
mov
sub
addl
push
xchg
es
dec
js
xchg
addr16
outsl
fstpt
or
jge
lock
jp
or
ja
jns
jne
push
xor
test
insl
std
xor
insb
fmuls
push
imul
mull
adc
iret
lods
fwait
or
cltd
cmpsb
ror
inc
fsubs
xchg
ja
test
push
and
into
mov
cli
or
stos
dec
mov
push
leave
pop
fwait
outsl
pop
mov
ss
sahf
ds
and
jp
xor
lods
dec
sub
jmp
adc
push
sbb
das
xor
mov
lods
pop
mov
insb
sbb
mov
mov
adc
cld
out
cmp
nop
nop
mov
sub
loop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
