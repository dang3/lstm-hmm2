push
sbb
in
orl
push
mov
lock
repz
movl
adc
push
call
lea
fisttpll
mov
rolb
pop
sbb
push
fsubs
xor
add
cmp
clc
ljmp
inc
cmp
dec
push
mov
or
xchg
dec
adc
cwtl
insb
int
fucomp
adc
sbb
mov
sbbb
inc
sbbl
cltd
mov
push
cwtl
push
push
push
push
xor
pop
push
scas
sbb
mov
stos
leavew
stos
mov
add
pop
adc
test
je
push
jmp
add
push
adc
scas
outsl
add
cmpl
mov
je
dec
or
push
push
ss
push
push
mov
inc
lock
inc
mov
inc
test
mov
lahf
jno
ret
or
cmp
stc
cmp
inc
and
jge
sbbb
xor
orb
aad
sbb
sub
and
inc
out
call
movzwl
cltd
mov
stc
push
dec
sbb
js
xor
inc
in
enter
rclb
lods
adc
lods
arpl
mov
cwtl
pusha
hlt
test
add
push
xor
les
or
clc
adc
adc
push
and
dec
stc
cltd
fcomp
mov
hlt
push
xchg
push
add
and
rcl
push
icebp
push
xchg
clc
push
lods
arpl
negb
push
adc
push
in
fs
cltd
mov
mov
aad
add
push
pop
adc
int3
jo
lret
outsl
cld
insl
sub
add
cmpl
out
testb
or
sbb
dec
sbb
sbb
stc
mov
push
push
int3
and
sbb
rorl
mov
inc
mov
xchg
xor
sub
cwtl
out
dec
and
dec
lcall
call
in
push
and
test
sbb
popf
or
sbb
inc
int3
or
xor
xchg
pusha
negl
adc
arpl
push
and
mov
and
inc
pop
and
gs
adc
test
push
sub
test
push
loopne
je
jae
call
add
cmp
shr
hlt
enter
jl
in
les
cs
movsb
xchg
pop
inc
or
nop
mov
jg
sbb
dec
sbb
repnz
add
test
pop
push
jo
pop
mov
pop
pop
leave
inc
push
xchg
loopne
and
adc
pop
lds
sbb
in
scas
bound
or
fcmovu
arpl
fisubl
add
andl
test
enter
push
call
movb
pop
leave
dec
call
incl
xchg
adc
cltd
sbb
pop
pusha
xchg
inc
stos
mov
jmp
push
add
cwtl
pushf
mov
je
cld
jne
movsl
fdivrl
test
mov
or
jge
mov
inc
iret
dec
dec
aaa
xor
enter
or
enter
xor
ret
sub
push
sub
xchg
sarb
jns
int3
push
inc
sub
cld
sbb
adc
enter
fs
rep
jmp
jne
push
pop
sbb
inc
pop
addr16
insb
mov
pop
repnz
inc
sbb
hlt
push
pop
mov
push
bound
out
fmuls
sub
cwtl
jge
ljmp
adc
xor
es
es
outsl
add
ja
sbb
popl
movb
rolb
stos
aam
mov
sbb
dec
mov
dec
push
or
inc
push
inc
je
les
add
jecxz
shll
and
and
inc
sbb
xchg
push
cli
jmp
sbb
adc
xchg
mov
outsb
pop
adc
icebp
pop
int
in
push
mov
add
fidivs
inc
pop
and
pushf
lock
xchg
push
pop
mov
bound
adc
sub
sub
push
sub
adc
push
ds
dec
dec
lods
push
ljmp
xchg
outsl
sub
lods
jb
xor
adc
test
push
inc
push
dec
push
or
push
call
push
pop
mov
loope
lds
adc
scas
test
xor
sarb
add
call
mov
adc
cmpsl
xorl
jns
test
push
pop
adc
inc
scas
test
dec
enter
out
adc
test
mov
lock
jo
pop
stc
std
adc
sbb
sti
add
arpl
cmp
adc
in
lret
ret
and
adc
daa
cltd
push
xchg
sbb
dec
jge
mov
cld
sbb
jns
mov
jecxz
sub
cld
mov
jle
or
sub
mov
lods
arpl
aam
fbstp
std
cmp
inc
arpl
je
mov
cld
push
push
adcb
cmp
xlat
xor
jns
adc
nop
cmp
and
sbb
xor
and
push
adc
mov
aad
sub
xor
mov
clc
fs
xor
das
loop,pt
lock
push
push
inc
adc
movsb
mov
lea
push
mov
xchg
add
push
les
ret
insb
cmovbe
test
fs
sbb
test
push
adc
sbb
push
gs
aas
inc
sub
mov
and
adc
and
or
nop
jmp
xchg
leave
sub
aam
cmp
or
add
imul
call
fdivp
clc
push
inc
les
rclb
pop
or
push
mov
adc
jmp
fsubr
stc
push
shll
int3
cld
fistl
push
shll
push
and
add
inc
jns,pt
fldlg2
or
add
or
hlt
push
mov
and
test
pusha
and
sahf
aaa
jno
ds
and
mov
aaa
adc
daa
jns
test
cmp
movsb
ss
test
mov
and
push
adc
mov
xchg
pop
jns
mov
outsb
mov
push
inc
cmpsl
xchg
xor
or
inc
mov
xor
divl
sub
cmpsl
insl
pop
xor
sti
inc
push
mov
dec
and
mov
mov
dec
adc
repz
mov
sar
sub
test
dec
push
cwtl
loopne
pop
cltd
jne
ljmp
int3
leave
les
nop
rolb
test
inc
out
daa
pop
call
jae
adc
jne
mov
adc
push
xchg
mov
pop
mov
std
shll
pop
xor
sbb
outsb
fs
jo
dec
js
xchg
xor
test
aas
inc
push
mov
gs
mov
pop
or
cmpsl
lods
nop
or
cmpb
sbb
ja
sub
sahf
jcxz
push
xor
fdivs
pop
fidivrl
fsubr
jb
or
add
sub
add
xor
adc
and
cmpsl
sbbb
pop
jmp
push
fsts
xchg
mov
mov
ret
outsl
shlb
dec
leave
sbb
pop
sbb
addr16
jg
jmp
inc
push
ljmp
and
sub
mov
push
push
xchg
cltd
imul
lock
add
pop
cltd
and
adc
and
movsb
fs
and
sub
std
sub
stos
sbb
push
jecxz
or
adcb
data16
or
and
and
dec
mov
mov
bound
push
in
out
mov
and
sbbb
add
ss
jnp
xchg
aam
inc
xor
loopne
mov
or
fmulp
scas
repnz
imul
inc
pusha
sub
inc
adc
jecxz
aad
lock
ljmp
inc
std
cmp
push
adc
sti
test
insb
loop
mov
bound
jl
mov
xchg
cwtl
xchg
inc
std
mov
std
push
or
pop
dec
xor
sub
fldenv
cmc
leave
inc
or
cmpl
cwtl
pusha
add
mov
ret
mov
fmull
sahf
mov
and
add
push
and
and
dec
sbb
popf
sbb
dec
cs
jg
add
lock
push
push
stos
or
xor
pop
dec
mov
hlt
mov
int3
out
and
addl
gs
adc
arpl
dec
and
push
repz
stos
icebp
cwtl
xchg
icebp
cld
dec
dec
mov
mov
mov
or
and
cmp
cmp
test
cmpsb
pop
sub
cmpl
xor
ret
and
out
adc
jbe
movsl
fdivr
jb
sbb
jae
and
call
adc
rorl
scas
inc
mov
es
inc
outsb
pop
push
nop
fiadds
pop
dec
sbbl
dec
dec
push
mov
cmp
test
inc
push
or
xchg
test
mov
xchg
xor
xor
inc
lea
adc
fbld
xchg
dec
pop
lds
or
dec
aad
mov
arpl
inc
cmp
jne
push
les
rol
cli
aad
xchg
push
xchg
inc
fisubs
cs
add
repnz
das
adc
dec
xlat
and
out
lock
movswl
cld
jae
jae
push
push
mov
je
loop
adc
pop
addl
jle
pop
mov
adc
adc
test
cmp
jno
shl
jge
cs
add
cmp
adc
or
sbb
add
outsb
mov
pop
push
push
sbb
andl
and
adc
dec
roll
xchg
andb
jmp
mov
adc
imul
loop
mov
pop
jmp
cltd
pop
loop
xchg
xchg
fs
mov
push
xchg
sub
orb
dec
xor
pop
dec
data16
and
loopne
sahf
dec
and
test
inc
dec
testl
in
adc
or
test
push
add
sbb
jmp
xchg
out
shr
mov
call
ret
sub
jge
and
xchg
jl
dec
or
and
adc
aas
inc
ficoml
in
push
mov
adcb
shlb
jne
pop
and
pop
popa
mov
nop
scas
mov
dec
repnz
xor
mov
call
xchg
pop
push
push
mov
or
sahf
popf
pushf
sahf
and
xchg
insl
or
mov
sbb
call
mov
aas
dec
les
mov
cmpsb
cmc
negb
subb
mov
imul
mov
into
xchg
dec
push
cmp
inc
push
fs
and
adc
mov
xchg
mov
inc
loopne
sub
test
clc
push
les
xchg
cwtl
adc
mov
xchg
mov
and
bound
rcll
fs
or
pop
push
sub
cwtl
testb
adc
adc
out
mov
loope
or
mov
jne
mov
insl
xchg
sbb
xchg
mov
or
adc
cld
insb
scas
test
popf
mov
xor
mov
adc
dec
cmp
test
cmova
sbb
jecxz
jmp
or
testb
and
xchg
sbb
mov
mov
scas
and
xchg
mov
adc
sub
push
mov
pop
fwait
adc
out
sub
push
mov
adc
inc
mov
and
xchg
mov
xchg
jmp
mov
or
sbb
cmp
or
aaa
and
pop
lock
pop
inc
sbb
sub
hlt
sub
cmp
mov
pop
loope
cmp
shl
jp
lock
outsb
xor
pushf
and
shrl
ljmp
mov
push
add
call
jbe
dec
sbb
sbb
inc
pusha
decb
push
jl
jb
sbb
dec
xor
sub
icebp
xorl
dec
xchg
sbb
xchg
xor
mov
ficoms
fsubrs
ror
mov
push
clc
test
inc
adc
enter
dec
xchg
add
shlb
inc
das
shlb
xchg
mov
jo
sahf
cwtl
dec
pop
fimuls
mov
aas
push
sbb
adc
in
ret
or
push
test
fistl
pushf
mov
inc
cmp
dec
repz
inc
addb
pusha
xchg
cwtl
mov
enter
mov
adc
sub
loopne
pop
cld
xor
jl
mov
inc
cltd
adc
pop
jae
xor
mov
inc
push
jnp
jge
inc
aam
add
inc
rcl
loopne
mov
and
adc
pop
and
mov
cmp
or
dec
inc
incb
cmp
sbb
sub
sbb
nop
sbb
add
enter
adc
cmp
adc
adc
add
jecxz
or
loop
addb
notb
and
mov
add
sub
xor
inc
mov
aad
xchg
xor
push
inc
mov
inc
in
pinsrw
xor
pop
inc
mov
jnp
shlb
test
inc
jbe
dec
or
inc
out
sub
dec
adc
mov
mov
cmp
add
sbb
ret
jbe
popa
push
push
mov
pop
push
mov
adc
and
cmpl
leave
cltd
scas
xchg
jmp
adc
pop
xor
in
lock
fstl
inc
mov
mov
xchg
xor
bound
out
fistl
inc
pop
mov
sub
push
or
outsl
inc
pop
inc
movsbl
leave
nop
cmp
add
popf
mov
mov
or
test
clc
mov
mov
clc
jp
push
jno
push
lds
je
and
push
cwtl
daa
inc
test
stos
mov
xor
jne
push
dec
mov
sbb
or
add
dec
inc
sub
sub
in
or
bound
test
inc
add
cmp
jbe
cs
cli
sub
adc
add
or
jne
nop
aam
jl
subb
test
adc
movsl
adc
jg
aam
mov
nop
xor
aaa
dec
jg
orl
loopne
sub
mov
dec
jl
fldcw
or
pop
pop
das
add
cli
addb
cmp
xchg
fdivrl
cmpsb
push
and
out
or
or
jns
das
shlb
leave
and
out
int3
mov
test
bound
aam
ret
push
mov
out
mov
sbb
pop
and
mov
jo
jae
mov
inc
push
add
pop
test
cmp
ss
inc
daa
mov
and
push
inc
rolb
call
dec
mov
jmp
loop
xchg
cmp
jne
in
push
cmp
and
imul
xchg
je
loope
mov
shl
or
orl
dec
xchg
xchg
sahf
fsubrl
dec
adc
adc
push
or
push
dec
jo
rcrb
push
xchg
pop
mov
incl
push
push
test
xor
mov
cmp
mov
mov
push
icebp
and
std
inc
aam
mov
add
push
adc
jle
dec
mov
and
push
shrl
aas
inc
mov
xchg
ret
cmp
movl
or
dec
mov
divb
pop
addr16
inc
mov
adc
add
adc
or
jg
test
jnp
xor
ret
add
adc
push
xchg
adc
pop
andl
sbbb
xor
cmp
push
xor
add
ja
cmp
add
xchg
pusha
ds
pop
sub
pop
push
enter
lods
ror
sti
jecxz
jp
pushl
lea
pusha
ss
xabort
shrl
and
in
add
push
fbstp
outsl
push
dec
pop
mov
test
pop
paddb
push
rclb
popa
test
push
and
call
sub
inc
mov
test
push
adc
cli
shrb
jne
mov
and
mov
outsl
push
sbb
ds
inc
in
adcl
leave
test
pop
jg
iret
and
enter
clc
mov
mov
jno
aad
test
das
inc
lds
dec
insb
dec
sbb
mov
mov
mov
and
pop
popa
xchg
mov
ret
aad
jecxz
and
push
push
imul
jno
dec
imul
gs
push
test
pop
cmp
inc
push
xchg
cmp
mov
mov
jge
or
xor
mov
inc
pop
or
lea
out
ror
mov
adc
ret
mov
inc
or
shl
or
lock
js
inc
and
cmp
fdivrs
cltd
jg
imul
xchg
mov
cmp
xadd
push
test
ljmp
and
jle
cld
or
push
lcall
movsb
inc
mov
and
mov
insb
fs
test
loop
push
lods
or
dec
push
sub
inc
sub
bound
push
jae
push
mov
lods
mov
or
in
movsb
push
sub
cld
inc
inc
inc
add
cmp
sti
mov
or
xor
pop
stc
sub
sbb
jno
fsubrs
mov
lret
nop
in
and
enter
mov
or
dec
sub
push
cld
iret
cmp
push
es
enter
mov
test
dec
push
les
xchg
sahf
xchg
cmpsl
jno
pop
cld
es
pop
push
pop
sub
aad
inc
or
enter
insb
fld
call
inc
cld
add
push
icebp
cltd
xchg
movsl
pop
pop
leave
push
xor
sub
mov
mov
xchg
or
xchg
fsubl
push
or
mov
adc
pop
gs
int3
dec
pop
hlt
sbb
inc
fistl
sub
pop
adc
sbb
iret
inc
mov
mov
xor
shlb
push
jbe
inc
test
es
add
sbb
push
mov
loop
bound
or
sub
mov
or
jmp
and
bound
pop
jae
movsl
pop
or
ss
roll
cwtl
push
adc
movsl
mov
inc
adc
in
std
test
or
xchg
xor
pop
shl
in
push
ds
xor
adc
push
adc
bound
out
shlb
add
movsl
sub
lods
aam
xor
and
je
push
lock
sbb
push
inc
les
add
leave
js
push
cmp
pop
pop
and
jmp
xlat
aaa
das
push
sbb
cmp
or
xor
shlb
test
push
jle
call
ss
cmp
and
push
outsb
and
pop
xor
mov
imulb
test
mov
xor
test
lods
add
jmp
mov
jecxz
dec
aas
fs
xchg
mov
adc
sub
je
and
mov
mov
pop
mov
mov
out
and
dec
sub
mov
mov
roll
push
and
shrl
xor
push
cmpb
xorb
mov
fsts
mov
movsb
fstl
shl
shl
insl
int3
fmull
icebp
aas
shlb
adc
enter
test
call
rcrb
jl
push
push
js
mov
xchg
sub
inc
adc
xchg
mov
and
add
movsb
push
cmp
add
or
icebp
dec
inc
incl
pusha
fadds
pop
sbb
add
sbb
adc
movsb
or
dec
add
faddl
push
adc
inc
xchg
fnsave
mov
cmp
lock
jbe
sbb
inc
rorl
pop
add
movsl
ret
lret
add
xchg
aaa
push
xor
stc
add
loop
mov
in
and
enter
lidtl
lret
loop
add
cltd
inc
icebp
cs
add
push
push
inc
sub
sub
mulb
cmp
enter
jns
fists
add
inc
add
push
lret
mov
call
cmp
in
jb
mov
dec
leave
sbb
sub
adc
inc
adc
and
jae
sub
idivb
and
xor
fldl
lcall
into
mov
loop
mov
push
testb
mov
orb
inc
inc
out
add
xlat
hlt
shrl
mov
and
in
adc
js
xchg
pop
ret
and
xor
xchg
dec
push
es
cmp
push
adc
sub
lea
pusha
test
cmp
mov
shlw
cmp
mov
lret
jne
loopne
cmp
sbb
test
push
push
call
aam
leave
mov
mov
cltd
ds
mov
out
in
cmp
decb
inc
push
sub
btc
and
add
fdivrl
and
pop
dec
mov
inc
and
cmp
ficomps
adc
popf
das
stos
inc
test
jl
imul
pop
loop
ret
leave
faddl
inc
inc
pop
mov
repz
inc
push
jbe
pop
mov
add
push
xor
pop
dec
lods
test
sub
jp
hlt
xchg
and
lods
push
iret
mov
jge
stos
out
out
push
scas
test
sarl
in
mov
call
les
add
inc
mov
lret
mov
mov
sti
ret
outsb
in
pushf
adc
jns
mov
mov
das
in
out
mov
adc
xor
sbb
sbb
or
movsl
cli
xor
mov
mov
or
add
hlt
xor
int3
add
sub
outsl
testb
cmc
dec
cmpl
push
stc
mov
adcb
pop
sbb
xchg
andl
jmp
popa
pop
add
jno
mov
or
sbb
ret
ja
call
test
jbe
and
sti
adc
nop
and
push
add
cmpsb
and
xchg
pop
push
or
fnstenv
add
sbb
fmuls
cmp
mov
sbb
hlt
fmul
xor
ret
mov
adc
aaa
call
pop
mov
imulb
stc
cmp
jae
stos
js
pop
rclb
repz
repz
ret
dec
dec
or
push
jecxz
iret
icebp
jmp
add
xchg
fcomip
sbb
jmp
nop
pop
pop
jbe
sbb
jne
js
jo
pop
add
jae
sub
bound
in
cltd
sbb
inc
stc
cld
dec
or
dec
fst
test
in
int3
incb
call
push
xor
and
add
dec
int
xchg
adc
add
inc
pop
ret
and
and
enter
dec
add
sarb
lret
mov
cmp
into
sbb
fists
dec
push
das
mov
cli
dec
fnstcw
cmp
push
and
adc
jle
out
ljmp
stos
jecxz
dec
pop
cmp
pop
cli
cmp
sub
into
enter
jmp
cmp
jae
or
fildll
lret
push
orb
add
cmpsb
je
xchg
jb
cld
add
lea
mov
aas
cltd
or
push
cwtl
hlt
mov
pop
push
adc
push
ds
je
or
mov
adc
mov
je
sbb
call
pop
shl
mov
and
mov
es
or
or
movb
dec
sub
fmuls
push
add
mov
xchg
sbb
or
insb
cmpsl
sub
and
xor
and
popa
test
iret
mov
cmp
jge
and
pop
insl
imul
adc
inc
lea
add
out
movsl
les
or
out
pusha
pop
jmp
lahf
inc
adc
enter
pop
mov
cmp
jl
lcall
dec
scas
cmp
addr16
clc
mov
and
mov
xchg
jl
lcall
stos
push
test
sub
sbb
sti
and
sbb
xor
jmp
mov
loope
sbb
cltd
add
and
sbb
adc
testb
jne
pop
add
orb
mov
stos
cli
inc
sarl
ret
aam
mov
out
rolb
test
cmpb
push
or
and
add
xchg
sub
popa
sub
mov
lea
push
sbb
shlb
xor
testl
data16
adc
push
shr
push
std
sbb
and
sbb
fwait
xor
pusha
xor
push
sbb
call
jecxz
push
xchg
vmread
mov
lret
sbb
fldenv
xchg
js
lock
pop
sub
ucomiss
or
xor
je
inc
ret
fstpt
sbb
jne
xor
push
shlb
mov
es
dec
stos
push
xchg
in
insl
sbb
mov
inc
sub
rdtsc
fcmovnbe
or
sbb
dec
push
test
gs
inc
mov
dec
mov
mov
sbb
or
and
push
sub
xor
sub
es
cmp
mov
or
imul
les
dec
cmpsl
xor
or
mov
pop
test
xchg
add
mov
adc
addr16
shrl
add
push
push
push
and
das
in
movb
pop
mov
xchg
dec
enter
cs
xchg
or
xor
dec
and
data16
jnp
inc
dec
jo
ss
push
adc
sbb
xchg
xor
mov
fs
cwtl
movsb
jl
dec
jnp
mov
push
dec
pop
xchg
push
dec
mov
xor
cmpsl
cmp
and
or
sub
fs
mov
dec
aaa
sub
jmp
inc
sub
lahf
push
movsb
sub
sub
sahf
mov
sub
movsb
jns
or
pop
push
in
and
adc
aaa
mov
jge
pusha
mov
mov
xchg
shl
in
mov
repz
lcall
fsubl
hlt
aam
pop
mov
add
pop
pop
xor
sahf
sub
loopne
inc
data16
adc
sub
cltd
addr16
stc
inc
mov
aaa
call
push
int3
xchg
test
out
or
std
in
xor
cwtl
repnz
in
imul
sub
mov
and
inc
pop
sub
push
movsl
adc
lock
push
sub
in
sub
and
pop
loopne
jl
xor
xlat
pop
loop,pn
xor
into
xor
dec
inc
mov
inc
mov
subl
mov
adc
dec
push
repz
sub
inc
jnp
sbb
je
adc
inc
dec
imul
mov
jmp
add
mov
mov
push
cmp
mov
dec
adc
lods
xor
jmp
imul
in
or
aam
lock
fmuls
out
aad
cmpsb
or
mov
sbb
jl
and
cmp
test
add
jne
adc
pop
int3
push
dec
test
das
mov
mov
and
push
repnz
fwait
inc
sbb
mov
xor
mov
lret
dec
es
push
les
int3
mov
into
push
pop
xchg
orl
loop
scas
pop
jl
mov
or
xor
cmp
jg
sub
out
cmp
pushf
inc
cli
pop
mov
mov
dec
push
addb
push
leave
cmpsb
sbb
adc
js
pop
in
or
test
ret
pop
mov
xor
add
cli
add
mov
mov
rcrb
jmp
pop
jbe
jg
mov
xlat
inc
data16
in
rolb
pop
int
das
in
inc
adc
adc
mov
les
int3
hlt
push
clc
inc
xor
rep
xchg
mov
out
sub
je
mov
xor
and
push
inc
jl
test
inc
data16
in
add
jg
stos
js
xor
cs
sub
in
sub
push
into
jbe
call
mov
inc
in
fisttpl
std
add
pop
test
gs
lds
and
in
or
mov
loopne
rolb
mov
add
jb
xor
ret
mov
testl
shl
fs
cmp
ds
sub
xchg
xchg
adc
int
sbb
jp
popa
hlt
mov
aam
push
xor
and
jne
loope
sbb
js
cld
pushf
adc
or
pop
xchg
imul
dec
mov
rclb
jl
scas
je
adc
imul
inc
movsb
test
cmp
mov
pop
mov
cmp
xor
out
ljmp
mov
outsb
je
cmpsb
cmp
push
lcall
shl
lea
jle
sub
cmp
and
dec
add
mov
push
and
pop
in
clc
test
or
push
fisubrs
or
mov
mov
sub
mov
in
lods
lret
movsl
test
inc
test
cld
mov
adcb
call
mov
xchg
add
xor
or
push
push
mov
repnz
lods
lcall
je
or
or
push
test
sub
xchg
push
enter
jl
mov
les
fsubrl
mov
and
mov
enter
iret
mov
ljmp
fsubl
repz
jmp
and
sbb
nop
xchg
insb
loop
mov
adc
jo
addb
cmp
cmp
xchg
gs
aaa
and
out
out
and
in
and
jmp
pop
dec
inc
icebp
or
mov
and
cmp
in
call
cmp
mov
pop
mov
push
and
jle
or
test
andb
cmp
push
fnsave
adc
pop
daa
int3
inc
mov
add
es
cmpsb
sbb
push
ja,pn
mov
push
fcoms
or
push
cmpsb
adc
mov
lea
shrl
mov
and
insb
mov
cli
adc
sahf
test
aas
cld
mov
icebp
and
xor
sub
pop
or
jge
das
nop
repnz
je
dec
mov
out
xor
lret
ret
cld
jmp
push
push
push
cli
push
push
push
jg
sub
xor
add
pop
mov
mov
jmp
add
das
fs
pop
and
mov
stc
pushf
add
pop
jmp
dec
je
sbb
jo
mov
pop
shll
jl
cmp
add
xchg
lcall
sub
ss
dec
push
js
ret
push
addr16
adc
test
hlt
mov
mov
insb
sub
cld
lock
mov
dec
xor
mov
mov
mov
mov
inc
pop
lea
mov
inc
adc
push
push
ljmp
add
popa
into
push
fidivrl
inc
addr16
push
xchg
inc
xor
xchg
mov
fsubrs
or
ljmp
mov
sub
ss
and
enter
inc
ret
add
aad
imul
jge
pop
xchg
inc
and
cmp
cld
xchg
bound
jb
mov
mov
xchg
cmc
jo
fdivrl
sub
enter
add
out
cld
mov
mov
adc
push
in
and
mov
jbe
mov
sbb
stc
xchg
add
or
jmp
adc
repz
mov
pop
inc
mov
jb
rcll
adcl
outsl
aaa
lods
in
stos
inc
xchg
mov
hlt
add
out
dec
pop
and
inc
adc
push
inc
inc
and
mov
arpl
xor
or
push
xor
repnz
outsl
xchg
dec
in
and
xor
xor
add
adc
and
ds
mov
adc
adc
and
adc
jbe
cmpsl
xchg
xor
bound
lds
push
jno
pop
dec
mul
mov
pop
pushf
adc
stos
gs
mov
pop
push
add
adc
daa
pop
clc
pop
xor
mov
cmc
push
xor
and
mov
mov
loopne
movsb
and
das
subb
dec
mov
sub
or
xchg
mov
imul
movsb
enter
add
push
mov
lea
call
push
mov
clc
enter
int3
mov
imul
dec
and
sub
push
and
in
sub
sbb
fmull
jne
cmp
pop
out
dec
mov
xlat
or
push
add
xchg
cld
push
imul
aad
rorl
or
aaa
push
pop
xor
stos
out
andps
sbb
test
and
add
mov
xchg
test
jne
ret
les
jno
mov
std
mov
mov
or
push
cmp
daa
scas
loopne
je
inc
jae
push
adc
lock
or
jae
mov
adc
cmp
pop
adc
push
call
xor
add
lods
movsb
fdivr
mov
adc
mov
jbe
roll
or
je
adc
add
jb
jmp
dec
test
jae
lea
pop
mov
adc
mov
xor
in
test
popa
jmp
dec
push
cltd
xchg
push
adc
dec
mov
inc
call
sbb
push
push
ret
loop
or
aam
jmp
inc
int3
and
lahf
les
mov
push
push
and
pushf
adc
add
sbb
adcb
loop
sbb
invd
push
push
sbb
or
pop
xchg
cwtl
cmp
inc
ja
je
adc
enter
or
adc
cmp
xor
mov
xchg
mov
fs
call
pop
adc
dec
and
mov
add
call
jo
push
and
inc
pushw
push
std
les
sbb
jmp
cmpsb
inc
inc
enter
cvtps2pi
xor
hlt
adc
or
lret
mov
adc
sub
mov
aam
clc
aaa
cmp
cmp
push
pop
dec
mov
rclb
test
adc
pop
push
sbb
adc
inc
cmp
push
pop
inc
and
pop
sbb
mov
dec
adc
leave
jb
fs
sbb
sub
push
orl
cltd
fldcw
pop
jp
popf
jne
icebp
dec
jge
insb
push
pop
xchg
xchg
pop
push
stc
xchg
add
xchg
ret
mull
push
mov
push
or
push
sbb
in
gs
pop
sbb
je
ds
xorl
inc
insb
sbb
sub
and
mov
dec
pop
mov
sbb
jecxz
or
mov
arpl
or
mov
imul
xchg
xor
stos
incl
clc
xchg
and
repz
fmuls
fistps
adc
push
adc
mov
mov
into
gs
bound
sbb
hlt
xlat
pop
lods
xchg
inc
subb
dec
add
std
push
push
mov
sbbb
adc
movsb
jmp
into
sub
je
add
adc
push
xchg
fwait
add
push
pop
cltd
add
cmp
sub
cs
add
call
cs
inc
cltd
push
sub
call
push
or
adc
rorl
xor
roll
lods
add
fidivs
add
jb
fmull
rorl
movsb
std
cld
shr
subb
scas
or
push
loope
jnp
xchg
test
push
push
adc
sub
adc
ds
xor
fidivrs
popf
enter
or
or
and
pop
push
xchg
mov
stc
adc
or
push
test
ficoms
adc
xor
sub
arpl
hlt
dec
addr16
sub
inc
xlat
test
aam
movsb
sub
jnp
movsl
adc
rolb
or
jb
or
sbb
sti
inc
jae
les
inc
mov
mull
jge
sbb
inc
adc
xlat
add
jmp
jns
and
sarl
jle
inc
stc
and
jg
iret
xor
mov
mov
in
cmp
out
inc
mov
fisttps
inc
out
enter
xlat
popf
enter
push
sarl
jb
dec
pop
lahf
jmp
and
imul
es
ret
lock
jne
or
or
mov
ljmp
test
mov
xchg
or
mov
int3
mov
pop
sbb
aaa
sub
aaa
and
dec
push
clc
add
pusha
pushf
push
push
imul
pushf
jb
cmp
xchg
mov
xor
jg
jmp
das
inc
push
in
push
pop
xchg
xor
cmp
or
into
push
adc
call
and
and
ret
dec
inc
aas
mov
or
icebp
jmp
sbb
push
cld
test
daa
adc
mov
sub
rol
mov
add
gs
cmp
sub
sbb
lods
add
sbb
cwtl
fisubs
jmp
fwait
add
stos
into
xchg
sbb
mov
jg
les
push
adc
mov
xchg
test
mov
std
stos
cwtl
adc
sub
mov
mov
call
les
xor
inc
mov
lcall
pop
adc
sbb
cmp
mov
sti
xrelease
lods
add
lret
add
or
enter
test
lods
stc
adc
clc
adc
aaa
stos
jb
mov
pop
push
jmp
mov
cmovp
call
rorl
inc
cwtl
adc
inc
or
inc
cmp
xchg
mov
push
sub
or
nop
pop
cmpl
cwtl
fldt
or
sbb
cltd
pop
adc
jo
jmp
scas
xor
push
and
sub
or
dec
and
and
test
rcl
test
je
and
ret
dec
pop
mov
sbb
pop
movsl
and
aam
hlt
adc
testl
xchg
jae
inc
les
jb
lock
es
movsb
icebp
fstpt
inc
mov
das
je
jae
xchg
xchg
push
js
jo
dec
pop
lods
jnp
mov
divps
cvttps2pi
and
xor
stos
push
sub
sub
lea
cmp
nop
enter
mov
jne
adc
sbb
adc
sub
addl
cs
add
pop
cmpb
mov
inc
pop
cmp
loopne
push
inc
call
lock
jb
lods
test
in
cld
sbbb
push
shrb
adc
or
adc
adc
hlt
or
push
xchg
mov
or
jmp
mov
sbbb
in
add
adcb
dec
adc
call
and
push
push
pop
and
mov
adc
enter
xor
jmp
cmpsl
les
jae
adc
mov
por
pushf
mov
cwtl
push
rcll
addr16
and
inc
jns
outsl
mov
or
inc
fisubs
pushf
fmull
xchg
or
add
enter
dec
gs
movsb
adc
or
aam
pop
nop
lods
jb
daa
mov
adc
dec
sub
pop
cltd
movsb
cwtl
or
cmp
mov
adc
and
add
out
mov
push
and
orb
adc
adc
dec
bound
subl
fcmovnu
mov
inc
cli
push
sbbb
push
clc
call
icebp
lock
and
outsl
pusha
pop
adc
mov
insl
xchg
test
xchg
les
cmp
add
jmp
lock
sub
test
adc
mov
dec
ss
dec
or
inc
push
mov
inc
dec
insb
dec
mov
lcall
xchg
or
mov
xor
push
cmp
sub
dec
mov
jbe
push
lret
or
dec
iret
lds
sbb
scas
lcall
je
jge
dec
shll
clc
add
mov
add
je
mov
pop
cmpb
daa
jl
dec
jne
inc
push
cltd
xchg
mov
mov
cmpsb
scas
pop
loop
cltd
jns
rcll
leave
ja
jns
and
cld
mov
and
push
dec
mov
sub
test
add
mov
popf
inc
push
and
xchg
jo
sbb
in
mov
push
popa
fildl
jle
loope
imul
or
cs
dec
sub
sbb
aaa
mov
or
ja
in
mov
sbb
and
in
mov
dec
repnz
ss
addl
mov
or
adc
not
int3
adc
jns
add
mov
and
sbb
mov
and
mov
leave
adc
cltd
xor
jns
or
adc
jl
xlat
cld
sbb
popa
cmp
or
push
sbbb
jo
addb
lds
leave
adc
call
push
push
pop
adc
jbe
sbb
sbb
jne
push
dec
push
int3
jg
mov
mov
push
jmp
lods
push
push
ret
cwtl
addr16
dec
jb
and
movsb
jns
cld
and
loopne
mov
ret
xchg
call
cmp
dec
arpl
push
testl
mov
paddsb
inc
xchg
adc
push
test
and
push
and
popf
inc
loope
imul
cwtl
adc
ret
dec
pusha
or
xchg
dec
pop
and
and
es
sbb
mov
popa
call
nop
jno
scas
push
iret
inc
xchg
insb
dec
mov
shll
popa
xor
cmp
xor
push
leave
cmpsb
aad
fldcw
mov
jno
hlt
push
xor
xor
lods
and
push
sbb
sub
jmp
fcoms
cld
push
into
add
or
add
inc
xor
push
rclb
ss
push
add
mov
leave
mov
pop
dec
fs
xor
jno
cmpsl
bnd
or
insb
push
sti
xor
or
jge
fisubs
dec
in
add
neg
jns
pop
mov
sbb
adcb
mov
scas
xor
psllw
xchg
jmp
xchg
xchg
push
jmp
jecxz
or
jo
or
cmpb
pop
mov
lret
mov
push
inc
push
call
ljmp
or
adc
cmovg
je
nop
cs
nop
lock
repz
jne
sbb
ror
xor
dec
inc
dec
mov
stc
clc
je
mov
mov
push
mov
dec
push
in
pop
fsts
test
and
jecxz
adc
sbb
pop
inc
push
shrb
xlat
cmpsl
or
push
push
mov
add
std
adc
dec
pop
sub
mov
cmp
bound
inc
das
jne
push
push
adc
cmc
pop
imul
cmpsl
pop
jo
out
sub
test
mov
jge
scas
and
data16
fiadds
repnz
lock
jae
xchg
push
adc
mov
pop
add
lock
jno
clc
xchg
lret
cmp
loopne
test
jno
lcall
inc
clc
aas
sbb
adc
adc
cmp
add
nop
inc
in
jmp
sub
xor
mov
outsl
out
fs
sub
pop
jb
add
cmp
cltd
daa
push
call
lods
pusha
sbb
adc
sbb
and
adc
psubw
push
clc
jne
sahf
lock
les
adc
call
loop
and
xchg
pop
dec
adc
jecxz
mov
sub
pop
cmp
ret
sbb
or
push
pop
mov
imul
or
push
ror
lahf
lea
jnp
and
pop
xor
pop
outsl
pop
xor
mov
or
cli
pop
hlt
sub
adc
pop
lock
aam
and
mov
call
mov
cmp
sub
ljmp
nop
sbb
leave
cmpb
dec
pop
and
mov
adc
inc
or
add
stos
inc
push
and
test
inc
adc
fiaddl
adc
gs
push
and
push
push
sub
xchg
xor
sbb
ss
jno
mov
mov
addl
frstor
xor
sbbb
pop
ljmp
aam
int3
mov
push
jge
scas
push
mov
out
inc
jecxz
fs
sub
cmp
jge
es
insl
les
push
add
adc
xor
pusha
loope
xlat
inc
mov
adc
cltd
pop
enter
adc
mov
lret
addr16
cmpsl
test
mov
bound
jne
inc
xor
nop
repz
adcb
inc
xor
lea
movzbl
push
leave
shl
je
fs
or
mov
mov
call
imul
mov
enter
add
cmp
and
lret
lret
pop
test
sub
enter
dec
mov
or
fwait
or
cmp
mov
test
addl
pop
cmp
cmp
int3
cld
daa
inc
mov
push
mov
mov
imul
push
stos
popa
xchg
mov
call
cmp
mov
mov
add
mov
push
add
pop
shrl
or
mov
adc
push
imul
mov
inc
jb
sub
cwtl
hlt
pop
add
push
out
or
dec
and
lock
xor
stos
sub
jb
int
sub
mov
cli
push
xchg
in
adc
mov
dec
test
ret
call
adc
daa
sub
adc
xor
mov
or
in
or
jnp
mov
adc
and
inc
repz
jns
orl
loopne
cmp
rolb
cwtl
jbe
jne
lcall
inc
adc
push
call
xchg
arpl
mov
push
mov
jnp
push
mov
xor
sub
or
mov
mov
test
lcall
mov
inc
adc
idivl
enter
push
rol
call
movl
or
and
push
and
andb
add
inc
pop
cld
inc
outsb
add
and
dec
adc
adc
testl
push
push
insb
pop
inc
addr16
cwtl
aaa
or
push
dec
pushf
or
movsl
lds
and
les
in
cs
add
jo
ljmp
adc
pop
lock
test
push
xchg
mov
pushf
loope
and
loopne
dec
pop
jg
mov
test
pop
inc
add
or
or
push
addb
sbb
push
add
sub
ljmp
out
and
adc
daa
push
add
jmp
or
adc
dec
mov
xor
push
nop
adc
cmpsb
je
or
je
or
adc
dec
or
test
xchg
cmp
hlt
lea
dec
or
sub
mov
inc
push
enter
call
mov
aas
sti
sbb
inc
add
inc
cmc
jns
adc
lcall
cld
adc
dec
rcrl
sub
in
dec
or
add
push
sbbb
mov
ds
push
cs
adc
inc
jb
mov
dec
fisubrs
or
push
pop
dec
pop
out
pop
xchg
inc
push
jecxz
popf
mov
inc
sub
cli
pop
jbe
inc
dec
jno
movsb
and
fs
or
xchg
push
mov
push
lahf
push
xor
scas
mov
dec
jb
push
and
inc
gs
mov
sti
push
dec
pop
pop
imul
sbb
mov
mov
and
movsl
clc
bound
add
loope
ds
jecxz
notl
test
or
fidivs
jns
outsl
imul
pop
insb
loopne
clc
mov
jecxz
mov
mov
adc
out
cmp
pop
fmuls
lahf
push
outsl
adc
std
nop
mov
add
add
push
imul
xchg
stc
add
ficomps
ds
jne
cmp
mov
dec
repz
dec
je
xchg
and
pusha
pop
or
or
in
mov
sub
je
std
cwtl
inc
mov
adc
xor
call
enter
cmpsb
stos
adc
outsb
popa
loopne
jnp
nop
sti
adc
adc
mov
sbb
jb
adc
shlb
pop
pop
xlat
pushf
insl
jp
aas
mov
adc
push
fwait
into
mov
cld
enter
das
dec
cs
imul
stos
xchg
and
insl
clc
test
fdivp
xchg
xor
and
xor
mov
or
mov
cmpb
fldt
push
or
lds
adc
adc
insb
push
test
sbb
push
push
xchg
or
xlat
dec
mov
fcmovbe
mov
push
cld
cmpb
pop
aad
adc
out
xor
mov
pop
cwtl
dec
and
popf
jns
in
lret
add
mov
sub
loope
mov
cmp
fs
dec
pop
in
and
push
push
or
cmp
adc
mov
adc
mov
enter
cltd
mov
les
mov
movsb
inc
mov
xchg
negb
pop
test
jne
push
sbb
cmp
xor
notl
call
xor
or
lcall
cmp
xchg
in
mov
ficompl
scas
mov
push
addb
add
push
cltd
jl
or
mov
jae
rcrl
pop
lock
hlt
iret
call
les
cmpsb
add
xor
dec
fcoms
lds
push
movb
sub
daa
jmp
adc
mov
or
xchg
xchg
movb
data16
mov
xchg
cmpsl
xchg
adc
xor
push
push
push
push
in
mov
es
mov
pop
in
adc
lods
xchg
mov
xor
fmuls
mov
mov
in
ficoml
dec
icebp
movsl
push
rorb
enter
add
pop
ja
xlat
cmp
popf
in
jg
jmp
pop
bound
sbb
dec
aas
mov
aam
sub
and
icebp
xor
mov
push
mov
mov
out
dec
sub
and
inc
add
rolb
push
mov
dec
sub
jle
xchg
mov
cmp
hlt
or
push
test
mov
xchg
fsubrs
movsb
jnp
mov
fs
ficompl
sub
sbb
sbb
inc
fsubl
jp
mov
inc
pusha
movsl
and
imul
bound
push
in
fs
in
or
and
sub
jle
ret
mov
les
lea
cmp
add
ja
in
sub
jmp
or
test
fiaddl
test
or
xlat
insl
cltd
or
call
dec
xchg
xor
test
dec
scas
inc
ljmp
jge
popf
adc
dec
lock
movsb
jb
push
movsb
repz
cli
adc
stos
lret
push
dec
jo
mov
sub
adc
push
enter
xchg
pop
test
cmp
enter
mov
mov
jae
sub
lock
repz
int3
popa
or
and
in
test
and
je
adc
mov
mov
xchg
and
push
daa
push
js
and
ja
and
push
jns
dec
ror
jbe
push
cmp
cltd
cmp
mov
mov
dec
repnz
jne
ss
or
or
ds
popa
ret
and
adc
push
mov
dec
les
aad
out
cld
call
or
adc
pop
stc
jl
fdivs
adc
and
imul
xchg
mov
stos
jmp
adc
mov
sbb
shr
lea
dec
or
les
push
xchg
in
pop
jb
push
adc
aam
mov
adc
pop
es
dec
mov
jp
pop
adc
negb
mov
jbe
adc
lock
adc
push
pop
mov
jmp
jns
imul
mov
notl
mov
add
jge,pt
and
cmpsl
adc
xchg
and
mov
xor
or
push
iret
enter
inc
pop
dec
xchg
cld
pop
pop
dec
xchg
inc
sbb
fcom
mov
pop
jle
loopne
pop
and
adc
adc
les
test
enter
pop
les
or
popl
fcoms
pushf
sbb
adc
lcall
jno
dec
and
imul
stos
or
jmp
inc
adc
sahf
push
aad
push
out
cmp
pop
fwait
add
out
sub
xlat
dec
fisttpl
ss
into
lods
push
push
loopne
add
sub
pop
insb
or
mov
pop
cmpsl
pop
popa
sbb
mov
pop
dec
and
imul
xchg
mov
bound
pop
xchg
inc
mov
add
add
and
pop
mov
shll
cmp
dec
repz
sub
popa
push
push
xchg
adc
mov
mov
push
adc
push
xor
mov
push
push
or
or
stc
add
in
add
test
jecxz
pop
jg
sbb
gs
popf
jno
imul
aas
mov
test
shl
call
sbbb
in
dec
cwtl
inc
icebp
jmp
shrb
push
pop
mov
pop
adc
pop
call
or
call
in
and
and
or
fildll
mov
popf
push
add
lahf
bound
fisubs
leave
inc
notb
outsb
add
cmp
je
cmp
xor
add
rorb
cli
xchg
mov
enter
in
popa
mov
sbb
add
aam
adc
push
hlt
and
je
push
dec
xor
sub
dec
out
pop
pusha
or
sub
je
dec
cmpsl
sub
imul
or
sbb
jne
lods
sub
push
push
gs
stos
mov
push
push
cld
movsb
or
inc
mov
std
mov
daa
or
or
or
hlt
int3
mov
rcrl
ja
push
cltd
sub
add
out
and
mov
stos
clc
push
sbb
test
mov
jp
mov
movsb
or
xchg
push
xchg
sti
mov
add
nop
push
nop
and
push
mov
in
push
mov
sub
enter
adc
mov
push
bound
xlat
jb
cli
ljmp
test
push
cmp
je
sti
cltd
out
push
push
test
add
pop
lock
ja
addr16
or
lock
push
shr
add
jmp
lea
push
cmp
sbb
out
imul
pop
aad
mov
lock
dec
sub
loope
jne
or
sub
test
aas
sbb
aaa
mov
mov
mov
add
xchg
enter
pop
pushf
mov
or
dec
in
push
push
ret
or
push
mov
push
inc
hlt
mov
mov
jecxz
rcrl
sbb
sbb
sbb
dec
or
in
je
inc
notl
fsubrs
notb
or
jmp
or
push
xlat
mov
es
lock
or
js
enter
and
jl
pusha
dec
fbld
adc
dec
in
andb
mov
and
adc
jp
or
and
xor
sarb
push
fsubrp
inc
adcl
mov
je
and
adc
in
xchg
cld
and
add
lret
fsts
je
adc
fisttpl
jbe
scas
inc
pop
pop
jmp
inc
outsl
and
inc
mov
sub
scas
cmpl
add
lret
jg
mov
adc
adc
mov
dec
add
inc
or
jecxz
push
adc
push
loopne
and
and
sub
push
sub
sub
sub
push
insl
jno
mov
rorb
mov
ds
test
loope
call
dec
jbe
lea
or
pushl
mov
jge
stc
nop
cld
jmp
leave
outsl
pop
scas
shrl
or
sub
sub
dec
stc
shl
in
mov
adc
in
mov
mov
dec
dec
in
stc
cld
add
cmp
add
pop
dec
push
cmc
scas
push
insb
push
mov
in
enter
push
cmc
xor
int3
jne
sub
sbb
stc
inc
dec
pop
mov
cltd
cs
sbb
cmp
popa
and
inc
cmp
dec
subl
lea
mov
sbb
mov
test
mov
or
mov
cmp
xor
pusha
pushl
leave
jbe
and
adc
adc
cltd
movsb
xchg
sbb
mov
mov
xchg
imul
add
mov
jecxz
sub
adc
sub
mov
xchg
sbb
xor
and
fiaddl
xor
jg
push
add
push
xor
dec
xchg
adc
jecxz
imul
or
insl
negl
std
andl
cld
andb
jecxz
and
js
xchg
nop
dec
rcll
mov
mov
les
daa
hlt
std
and
or
stc
repz
movsl
jmp
dec
inc
add
xchg
cmp
sbb
cmp
lea
add
jns
in
out
mov
push
mov
fs
popa
cwtl
add
adc
decb
call
cmpb
jne
adc
and
sbb
push
fs
int
inc
mov
pop
clc
push
push
sbb
mov
adc
test
test
pop
daa
mov
add
mov
and
pop
inc
in
cmp
push
and
adc
sbb
add
lahf
insb
and
movsl
sti
push
and
and
int3
or
adc
mov
mov
dec
mov
mulb
cmpb
adc
pop
ss
dec
or
repnz
das
mov
bound
lahf
out
ja
and
cmc
push
pop
jle
test
enter
push
in
dec
ficoms
shrb
lock
dec
mov
adc
xchg
dec
test
cli
sbb
dec
mov
adc
xchg
sub
xchg
dec
dec
data16
xchg
out
mov
mov
jb
and
dec
inc
and
call
push
lods
fiadds
clc
push
or
roll
sbb
call
lret
jl
xor
fs
fsubs
xor
test
or
or
mov
sbb
jne
sub
jl
mov
psubsb
ret
sbb
and
loope
mov
mov
sarb
mov
push
push
push
stos
adc
push
or
pop
sub
gs
mov
push
add
cmp
adcl
ret
jb
pop
or
sub
scas
pop
in
adc
test
add
mov
nop
outsb
pop
and
dec
wbinvd
inc
xchg
insb
cld
xor
nop
dec
enter
add
jmp
push
iret
ret
cmp
pop
sub
push
sub
mov
aas
rolb
xor
mov
lods
fstpt
lds
fs
ret
inc
or
test
in
pop
and
push
push
int
adc
popa
and
jmp
jg
std
mov
das
xor
inc
mov
sub
and
mov
xor
dec
push
jle
sbb
shr
xor
xor
cmp
adcb
cmpw
add
lods
adc
loope
in
jae
aam
loop
cmp
pusha
push
loop
dec
xchg
jle
call
test
mov
mov
cs
pop
inc
arpl
add
cld
push
or
or
pushf
xor
mov
mov
dec
lods
ret
std
mov
and
jbe
pop
pop
arpl
adc
lahf
js
mov
call
and
sbb
mov
pushf
jb
sbb
and
imul
or
mov
fs
jmp
out
inc
stos
lret
test
jnp
out
xchg
adc
sbb
jp
lret
ds
and
mov
dec
sub
in
and
dec
push
shlb
adc
pop
dec
mov
mov
mov
jae
sub
test
mov
cmp
wrmsr
test
and
push
xchg
aam
leave
pop
int3
adc
mov
std
and
and
roll
stos
sub
mov
and
gs
call
je
test
and
inc
add
cwtl
cmp
jae
jmp
enter
stc
movlps
iret
push
daa
je
lret
negl
cmpsb
shll
adc
jl
shr
adcl
mov
insb
adc
mov
pushf
out
pop
shl
jge
inc
sbb
push
loope
test
xor
sub
int3
inc
mov
and
bnd
out
pop
pop
inc
pop
pop
test
sub
into
and
jae
mov
mov
sarb
inc
and
andl
inc
fcoms
xchg
je
je
mov
int3
dec
in
jae
mov
cld
and
cmp
in
jbe
and
push
insb
cltd
xlat
mov
jo
andl
adc
push
inc
mov
les
mov
adc
push
xchg
xchg
push
cmpsb
xchg
adc
and
mov
push
mov
add
cmp
movsb
or
test
push
sbb
lods
pop
mov
xor
mov
xor
cmp
jecxz
test
sti
push
cmovo
cmpb
mov
push
pop
jmp
mov
dec
cmp
popa
sbb
or
dec
sbb
and
sub
enter
adc
or
popw
mov
xor
mov
sub
mov
shl
jmp
adcl
rcll
cld
pop
int
cmpsb
cwtl
mov
ljmp
xchg
push
jb
lahf
and
mov
inc
pop
es
add
test
sub
or
lcall
sub
jge
add
adc
test
mov
out
adc
jne
fcomip
jge
jle
test
ret
sarb
push
jb
xor
xchg
out
dec
push
hlt
adc
fsubrp
sub
clc
mov
xor
xchg
cmpl
xchg
in
push
dec
loop
fcoml
push
sbb
push
daa
aad
cltd
xor
popf
shl
imul
push
pushf
jns
hlt
lret
cs
in
or
adc
les
mov
fsubrl
cwtl
sbb
sbb
and
inc
mov
and
daa
cmp
sbb
orb
or
adc
inc
xor
jae
sub
inc
or
and
andb
adcl
and
int3
adc
dec
loope
sub
jecxz
movl
lret
sub
dec
mov
and
sub
mov
shrb
sub
enter
pushf
adc
adc
mov
fs
popa
cld
leave
or
push
in
or
fmull
xor
xchg
sbb
or
sti
add
insb
adc
lock
and
loopne
xor
test
xchg
leave
push
and
fdivrl
js
lock
xor
cwtl
adc
push
inc
enter
lods
mov
mov
and
or
in
xor
addr16
sub
push
les
xor
addb
and
les
daa
sbb
fs
hlt
enter
xchg
and
cmp
inc
adc
sahf
shrl
loopne
repnz
push
hlt
outsb
stos
mov
icebp
adc
push
int3
inc
loop
cmp
push
orb
mov
mov
or
and
sbb
rolb
mov
out
clc
sub
ret
pop
repz
sbb
cmp
push
mov
es
cmpsl
mov
in
sub
and
adc
loopne
mov
cmpsb
or
sbb
xchg
and
nop
xor
sub
test
je
fsubrs
hlt
cld
sub
add
inc
add
inc
sbb
xor
adc
mov
fsubrs
in
or
mov
loop
cmpsl
out
movsl
add
mov
sbb
sbb
and
or
bound
sbb
hlt
inc
cs
or
or
bound
pushf
inc
cs
xchg
push
mov
adc
sbb
mov
and
lods
fsubp
adc
sbb
xchg
ja
call
cwtl
add
test
adc
or
xchg
cmp
nop
fs
xor
outsb
fisttps
xchg
daa
and
xchg
or
popf
inc
adc
mov
and
add
and
sub
mov
xchg
and
aad
nop
cmp
leave
or
lods
nop
mov
mov
pushf
movsl
xor
cltd
or
test
xchg
push
insb
sbb
xchg
pop
ret
jno
adc
popa
call
cmp
mov
clc
outsb
roll
and
jno
sbb
hlt
or
mov
loop
adcb
lds
rolb
or
test
fsubs
sbb
xchg
and
test
pop
and
sbb
sbb
dec
sub
or
les
inc
and
sub
cmp
jno
xor
adc
and
pop
lret
lds
sub
sbb
add
sbb
call
call
sbb
sbb
das
mov
lds
and
les
in
test
sub
or
pushf
sub
jg
or
add
daa
push
rol
int3
les
in
push
shlb
xchg
adc
jg
test
pop
sub
nop
adc
xor
dec
dec
sbb
hlt
inc
and
in
mov
gs
daa
and
mov
and
insb
mov
call
nop
adc
hlt
sub
in
sbb
sub
or
das
cmp
inc
adc
movsl
loopne
cld
dec
ret
pop
fcoml
mov
mov
or
inc
adc
adc
ret
push
inc
mov
cmp
mov
sbb
mov
in
xor
mov
dec
xchg
and
mov
sbb
je
and
and
cmp
mov
sbb
test
popa
jno
or
test
adc
jl
push
ret
icebp
or
push
fmull
sub
bnd
lods
gs
fmuls
daa
lock
sub
call
sub
xor
cmc
or
pushf
ret
mov
call
pop
inc
cmp
cmp
pop
fstl
popf
add
outsl
mov
je
sub
pop
push
test
mov
push
add
les
adc
pop
inc
call
leave
jo
fadds
xor
sbb
cwtl
and
orb
loopne
in
jl
dec
or
dec
push
aam
in
sbb
and
lock
hlt
loop
sbb
lret
out
cmp
sbb
xchg
xor
lods
push
inc
mov
adc
popl
mov
sbb
enter
jb
sbb
cld
lret
adc
dec
test
adc
adc
in
adc
mov
mov
adc
jno
and
mov
test
sub
nop
jne
jp
adc
enter
or
test
cmp
fs
dec
es
enter
cld
xchg
adc
push
fstpt
add
mov
pusha
and
popf
push
mov
in
jbe
xor
jno
setp
push
push
call
add
test
testl
into
or
cmp
push
push
call
sbb
shr
dec
iret
mov
cltd
loop
or
xchg
shll
test
jnp
xchg
pop
psubsw
xor
inc
rolb
clc
sub
cs
rolb
das
push
mulb
sbb
mov
mov
dec
lods
inc
iret
mov
popf
add
add
jae
or
sub
js
add
mov
cmp
je
add
inc
xchg
fiadds
inc
cmp
jl
sbb
rclb
sub
cmpb
jne
sbb
rcrl
orb
push
cmp
or
mov
inc
add
inc
cmp
sarb
cmp
pop
je
or
gs
and
enterw
in
sub
daa
loope
or
or
mov
stos
sub
pop
pop
jp
fistpll
adc
adc
add
std
dec
cld
sbb
cmp
jle
pop
mov
sub
cmp
pop
jl
ljmp
sub
pusha
test
push
pop
adc
and
mov
mov
inc
inc
and
out
mov
sub
das
call
adc
mov
add
inc
sahf
jg
ffreep
pop
fcomps
or
pop
add
push
clc
out
in
shlb
mov
jno
push
hlt
ljmp
sub
pop
xor
add
cmp
sub
xchg
lea
dec
mov
rcrb
ret
jo
push
clc
sti
fnstenv
pop
pop
fs
add
jne
dec
dec
jmp
mov
xlat
add
mov
and
mov
or
jl
push
scas
aaa
lds
adc
pop
add
jg
orb
jne
inc
jmp
cli
and
dec
jno
mov
or
or
je
add
das
push
push
mov
enter
nop
sub
push
lret
adc
or
mov
lret
rorb
shlb
sub
mov
sub
sbb
test
add
sbb
mov
fs
sub
lea
adc
cmp
es
enter
and
aaa
push
pushl
mov
mov
orl
push
sub
mov
lds
sub
xchg
push
mov
leave
leave
aam
mov
push
aam
push
outsl
adc
sbb
aam
enter
decb
shrl
cltd
dec
push
jae
push
loope
popa
push
push
cmp
fidivrs
mov
lahf
mov
mov
lock
repz
dec
push
mov
sbb
loope
jg
je
mov
sbb
dec
ss
shrl
push
mov
push
scas
movsb
ljmp
xor
jmp
push
pop
or
or
adc
das
jne
pop
scas
sbb
jae
in
mov
xchg
sbb
inc
mov
adc
mov
int
inc
sti
ret
ja
and
rcrl
jbe
and
inc
sub
cmp
push
in
mov
pop
lods
push
dec
push
mov
adc
cmc
bound
les
mov
aas
pop
push
push
adcb
add
push
push
mov
sub
sub
mov
push
xor
js
movsl
aad
and
stos
int
mov
and
and
mov
xchg
sub
push
enter
cltd
aaa
daa
jle
inc
test
and
or
adc
dec
daa
incb
sbb
les
jnp
adcb
roll
lea
fs
imul
inc
adc
jo
jno
call
inc
mov
sbb
jl
jbe
dec
loop
out
mov
xor
call
xchg
inc
mov
test
inc
mov
rorb
hlt
aaa
push
sbb
cltd
sub
les
adc
rclb
pop
jns
inc
sbb
sete
std
ljmp
iret
test
adc
add
shrl
mov
xor
jp
mov
inc
or
xor
enter
dec
je
popf
or
pop
stos
pusha
xchg
push
or
or
inc
popa
xchg
mov
pop
mulb
inc
ficoms
adc
notl
push
dec
bound
cmp
je
jmp
push
std
loopne
xor
jecxz
push
add
push
data16
mov
push
test
or
cmp
jbe
repz
add
mov
mov
inc
add
cmp
ja
adc
test
pop
test
push
mov
shrl
jp
sti
mov
movzbl
repz
mov
repnz
or
das
lock
sub
in
xchg
lea
inc
add
add
cmc
loopne
shr
jmp
neg
xor
movzwl
add
movl
jmp
and
test
pop
je
or
and
jmp
mov
not
dec
test
cs
fisttpl
imulb
and
add
je
nop
filds
js
faddp
mov
cmp
lret
dec
fs
push
pop
mov
sub
jl
fsubl
push
pop
iret
xchg
xchg
lea
xchg
dec
rolb
mov
stos
sub
inc
xchg
dec
xor
mov
pop
mov
mov
lds
data16
push
mov
orl
push
lcall
mov
sbb
mov
lods
daa
dec
mov
add
sbb
adc
test
push
and
adc
or
adc
add
xchg
les
call
inc
hlt
lock
xchg
stc
inc
bound
call
mov
push
mov
cmp
push
dec
hlt
mov
and
sti
push
push
out
xor
dec
dec
mov
sarl
mov
adc
js
jne
adc
mov
bound
cld
and
fisubl
jge
or
es
mov
popf
mov
cmp
mov
phaddw
loope
test
or
add
cmc
add
lret
adc
add
xlat
adc
decb
hlt
movsl
movsb
aam
sub
adc
push
sub
jp
xor
sbb
or
outsl
mov
lea
mov
xchg
sbb
dec
icebp
cli
adc
les
shlb
ss
and
repz
aad
xchg
dec
push
mov
add
add
adc
lea
mov
xor
fdivl
xchg
aas
bound
in
sbb
movsl
pop
push
adc
rcrl
das
add
es
das
ret
jl
nop
or
repnz
mov
dec
or
insb
fcmovb
rorl
or
mov
lds
and
iret
and
iret
and
aad
mov
mov
ret
mov
loop
xor
mov
mov
mov
iret
inc
rcrl
daa
es
imul
and
mov
adc
inc
dec
push
cmp
fbstp
push
nop
mov
pop
mov
adc
fs
pop
inc
push
push
in
lods
call
jo
adc
mov
call
pop
jb
adc
add
pop
js
sub
dec
mov
sub
push
pushf
sub
sub
icebp
jb
lock
sub
scas
sbb
adc
je
or
or
pop
mov
out
dec
mov
fadds
mov
adc
dec
mov
fildll
jne
inc
push
sub
iret
dec
or
out
out
jmp
cli
popf
mov
push
pusha
push
mov
inc
sarl
inc
or
pop
enter
or
jp
sarb
cmpsb
jmp
shlb
icebp
das
jne
jl
imul
cli
mov
jo
adc
adc
cs
into
mov
jl
adc
and
push
pop
mov
cli
adc
mov
int3
mov
ja
or
cmc
adc
adc
arpl
das
mov
addr16
into
dec
cmp
ljmp
or
sub
fimuls
test
jae
int3
sahf
cltd
in
rcrb
int3
test
nop
and
inc
adc
sbb
test
mov
xchg
pushf
fadd
ret
call
mov
cmp
cmp
out
arpl
inc
repnz
stos
daa
adc
inc
jge
pop
xor
pop
enter
aaa
jne
mov
int3
mov
dec
rcrl
aam
xchg
and
out
aam
jl
imul
into
pop
testb
push
pop
jne
jg
push
call
or
aam
ret
add
add
out
orl
mov
mov
lods
jle
dec
or
jmp
cmp
inc
test
data16
adc
mov
or
inc
dec
mov
repz
sti
test
mov
jp
xor
sub
or
stos
int
pusha
mov
inc
mov
addr16
push
shl
or
loop
orb
mov
test
add
loope
lds
mov
dec
lods
call
out
jmp
inc
mov
clc
gs
sbb
mov
xchg
adc
dec
mov
mov
cmpsb
push
jg
call
mov
daa
aam
imul
add
std
dec
push
push
lds
cmp
sub
adc
stos
shll
xor
je
dec
adcl
mov
fldpi
popf
fdivr
gs
lahf
loop
add
push
inc
bound
enter
push
adc
inc
adc
and
jno
xorb
je
insl
pop
xor
pushf
sub
jge
jmp
nop
test
cmp
and
dec
imul
mov
push
stc
sbb
add
push
pop
enter
and
movsl
and
cwtl
push
js
xchg
call
out
dec
mov
cmp
pop
call
lods
cld
sub
in
mov
push
repnz
jb
or
inc
leave
lock
cwtl
leave
push
push
jnp
push
cld
sub
adc
loope
movsb
les
xchg
xor
cmp
mov
test
push
add
mov
push
enter
sbb
push
mov
dec
inc
enter
push
out
mov
fisttpl
mov
xchg
stos
aad
lret
ret
mov
inc
mov
in
pop
or
mov
fistps
lret
sahf
lock
mov
clc
adc
dec
and
cmp
jo
or
and
add
jmp
es
push
mov
xor
sub
test
dec
fsubrl
in
sbb
or
jo
pusha
addr16
xchg
push
cld
mov
js
xor
jg
fdivrl
cld
in
out
ds
jne
xchg
add
inc
mov
insb
ss
popa
push
push
sub
shrl
push
add
adc
push
sub
cmp
mov
aas
div
xor
xor
shl
cmc
ret
push
or
sbb
stos
mov
adc
push
rclb
sub
fsubrs
and
mov
pop
xor
push
xchg
xchg
xchg
and
sub
sub
pop
add
inc
adc
inc
mov
and
pop
jmp
ficompl
push
in
daa
inc
inc
loopne
push
add
inc
or
add
jb
add
inc
sub
push
push
cltd
xchg
xchg
and
sbb
add
xlat
push
cli
orl
xlat
jb
cmp
pop
and
daa
sbb
push
push
xor
leave
pop
ja
add
cmp
jae
push
mov
jp
adc
inc
adc
mov
xchg
xor
and
sbb
push
and
bound
adc
jae
js
shlb
sbb
add
ret
adc
scas
fcoml
xchg
mov
push
xor
push
movsb
lcall
push
xchg
clc
add
cmp
inc
xchg
addr16
inc
inc
adc
add
mov
jo
dec
cmp
int3
or
push
gs
mov
and
pop
push
sub
add
js
pop
arpl
and
jo
je
insb
xchg
lods
je
daa
out
lods
push
dec
sbb
and
ret
test
xchg
mov
jge
aas
popl
aam
lcall
das
sub
mov
xor
sub
movsb
std
pop
rcl
shlb
jns
push
xchg
sub
in
test
fs
xor
add
or
cld
and
jae
insb
pop
dec
nop
pop
mov
mov
jno
xor
aad
cmc
in
push
in
inc
lcall
aad
out
xor
fmul
fdivrs
out
cltd
inc
dec
scas
inc
stc
lret
and
inc
mov
ret
sub
leave
xor
push
add
push
aaa
fisttps
or
and
sub
push
clc
shll
std
sub
inc
inc
out
adc
sbb
inc
fs
mov
jbe
or
sbb
or
cmp
fsubrp
mov
mov
adc
in
and
mov
shrl
insb
out
aas
and
mov
sti
cmp
add
cmpb
xor
scas
lea
int
jg
xor
sbb
adc
pusha
sub
push
pop
push
push
cli
inc
testb
je
push
mov
push
push
sub
push
in
mov
call
aam
insl
sbb
outsb
jmp
adc
sahf
enter
mov
loop
push
icebp
cmp
xor
mov
sub
ds
bound
adc
ret
xor
in
aaa
push
fsubs
bnd
gs
dec
adc
push
stc
lds
sbb
add
clc
lds
sarl
test
arpl
pop
call
or
push
dec
out
fldl
pop
int3
jbe
call
insb
cwtl
cltd
adc
mov
or
mov
rcrb
cmp
fwait
pop
inc
pop
call
mov
mov
cltd
adc
nop
xor
cmpsl
test
cmc
scas
xchg
xchg
jge
inc
and
push
lea
ljmp
dec
call
push
or
je
imul
dec
dec
sub
xor
mov
lods
fisubrl
movsl
xlat
cmp
sub
dec
in
fstpl
imul
or
lods
add
jne
rorb
sbb
mov
or
inc
cli
adc
daa
sub
aam
ret
adc
pop
cmpsl
test
inc
lret
and
cmp
pop
add
fildl
popa
sub
repnz
fisttpll
adc
shll
dec
mov
ds
push
ja
add
scas
mov
psubd
add
testl
xorl
sub
mov
stos
lcall
inc
ret
push
jmp
jnp
mov
push
shl
movsl
ds
add
pop
icebp
aam
pushf
insb
imul
push
fbstp
aas
adc
rcrl
lea
push
sbb
dec
jl
push
add
call
xchg
loopne
lea
add
mov
dec
adc
fs
int3
sbb
cmc
jmp
loope
add
adcl
inc
aad
ret
and
fisttps
cmp
jge
mov
sub
cli
add
adc
mov
add
mov
sub
dec
ljmp
loopne
call
lret
adc
scas
mov
mov
mov
push
add
push
jl
cmp
in
cwtl
xor
push
push
mov
sbb
call
int3
loop
test
pop
cltd
pop
das
mov
in
add
xor
pop
cmp
mov
sbbl
mov
jne
push
push
pop
clc
sub
lret
daa
pop
in
mov
mov
test
cmc
push
fidivl
or
mov
out
cmp
jge
inc
mov
cmp
and
jne
lcall
jge
sub
push
jbe
push
jb
dec
iret
ficoml
add
subl
dec
test
jne
fdivl
fistps
iret
dec
adc
sbb
cld
adc
push
pop
jmp
or
insl
or
shlb
add
fmull
mov
pop
pushl
ss
pop
lahf
jmp
or
or
loope
scas
pop
push
mov
push
or
std
dec
pop
mov
and
or
mov
subl
cs
push
out
and
daa
add
cmp
pop
cmp
add
shl
cmp
ret
mov
inc
add
nop
push
xor
jne
pop
pop
bound
fmull
mov
in
jmp
adc
xchg
cmpsb
imul
clc
add
shrl
inc
test
ret
leave
scas
sub
adc
sbb
adc
mov
and
sbb
push
mov
fsubrs
sti
mov
es
jmp
cmp
mov
into
lock
sbb
cmpsl
sub
sub
test
pop
or
mov
xchg
stos
push
and
or
aam
loop
add
xchg
jg
mov
rorb
lock
mov
scas
dec
pop
push
sbb
mov
jo
xchg
sbb
aad
aam
cmp
shll
cmc
dec
inc
out
push
or
inc
clc
sbb
sbb
and
lcall
push
dec
out
or
dec
mov
cwtl
push
nop
icebp
xchg
loopne
cmp
push
adc
and
nop
fldcw
nop
imul
fxch
pushf
mov
test
push
push
cmpsb
pop
jb
and
icebp
shl
cli
cmp
adc
les
imul
dec
adc
js
pop
call
jne
cmpsb
cmp
shr
or
ret
clc
mov
lea
aam
rol
stos
add
xchg
mov
mov
sub
push
mov
jmp
in
mov
jne
push
jmp
adc
push
adc
cmpsl
jmp
jb
sarb
aam
outsl
out
jl
movsb
and
cmp
into
cmc
int3
mov
sbb
mov
adc
xchg
add
mov
or
outsl
mov
pop
test
sbb
dec
andl
icebp
and
jmp
inc
pop
in
and
xchg
jecxz
je
xor
cs
adcl
inc
or
stc
xor
out
std
pop
scas
xchg
push
add
cmp
aad
inc
push
push
adc
fidivrs
inc
sub
jo
xchg
outsl
or
sti
or
hlt
xchg
pop
gs
and
push
and
fs
sbb
nop
mov
mov
pop
sub
out
shrl
nop
sahf
sub
dec
arpl
out
xchg
push
jne
shlb
mov
dec
es
loopne
cmp
add
cmc
and
orb
push
or
cmp
loopne
cmc
stc
sub
xor
sub
mov
push
cltd
add
push
sbb
adc
xor
loopne
mov
inc
mov
ja
out
mov
mov
test
call
mov
mov
add
and
mov
mov
daa
cwtl
push
dec
pop
lcall
es
xor
mov
leave
mov
mov
or
out
cmp
cmpsl
push
jg
push
and
or
mov
adc
sahf
das
mov
lea
pop
test
inc
fistpl
ret
gs
orb
lcall
and
and
push
and
rorl
aad
mov
jbe
add
inc
push
xchg
dec
jge
inc
int3
lock
lds
cld
push
nop
test
and
dec
push
in
or
dec
xchg
pusha
lock
test
int3
mov
lds
repnz
xor
cltd
ds
mov
lea
lcall
mov
cmp
mov
fcompl
hlt
mov
cmp
push
cwtl
adcb
mov
incb
test
adc
ds
and
or
js
ja
sbb
in
and
sbb
sub
das
lods
sub
stos
mov
pop
dec
fidivs
add
lock
lahf
mov
pop
in
ja
sbbl
test
cld
pop
je
or
pop
push
or
lea
pushf
pop
out
jle
adc
stos
stc
push
mov
divb
mov
sub
jnp
and
mov
inc
jno
add
and
push
and
xchg
inc
adc
jae
sbb
adc
jmp
jmp
or
xor
xchg
mov
std
addr16
mov
or
lock
adc
repz
fwait
pushf
shlb
fidivrs
addr16
and
push
call
or
push
sub
xchg
cld
jno
icebp
fisttpl
mov
mov
mov
and
insl
sub
add
pop
fdivrl
lahf
sub
jo
daa
jae
fiaddl
lods
sahf
fcoml
and
push
in
jp
out
insl
jnp
jge
test
jecxz
ja
cmp
pop
add
stc
sub
inc
or
adc
adc
dec
repnz
daa
je
fs
dec
popf
in
inc
xchg
add
xchg
pop
test
je
mov
and
cmp
xlat
incl
repnz
test
loope
jmp
data16
sub
fxch
adc
div
mov
mov
mov
inc
adc
inc
or
enter
bound
xor
pop
mov
pusha
cmpsb
mov
push
test
or
add
aaa
fsubrs
xor
adc
adc
ret
mov
inc
or
or
add
sbb
lcall
sbb
push
sbbl
inc
icebp
mov
rolb
add
scas
inc
push
jne
lods
adc
repnz
call
xor
shlb
inc
mov
adc
pushf
lods
mul
add
or
icebp
add
jp
mov
push
mov
or
repnz
fildl
dec
fsub
inc
lret
mov
jo
adc
inc
sbbb
mov
mov
add
push
and
cmp
mov
adc
test
bound
shll
jmp
xor
lea
sbb
sbb
leave
lcall
rolb
xbegin
sub
popf
xchg
lds
add
add
adc
xor
add
and
ret
mov
add
mov
push
dec
fs
mov
pop
xor
pop
add
mov
fmuls
cli
pop
setb
lock
or
push
inc
enter
inc
sbb
or
push
cmp
scas
push
xor
test
jo
push
sub
push
jmp
dec
pop
lea
cmp
jb
sbb
inc
out
inc
xor
test
movsl
dec
inc
cs
sbbl
sysenter
dec
out
sub
and
sub
ret
fadd
repz
xchg
and
sbb
insl
mov
inc
lock
cmp
lahf
sbb
adc
lock
xchg
or
cmp
dec
rclb
rcrb
bound
pop
mov
add
rep
cmp
sbb
push
arpl
ja
jge
pop
dec
mov
and
cmpsb
push
hlt
xchg
jp
cld
or
mov
mov
fwait
push
and
xor
and
mov
fildll
push
mov
test
add
adc
mov
and
in
add
call
mov
xchg
ficomps
mov
xchg
dec
icebp
xor
cmp
xor
pusha
repnz
dec
clc
ror
adc
or
xor
sar
jo
or
sarl
mov
xor
sbb
imul
and
pop
lret
sbb
in
cmpsb
mov
lcall
cmpb
jle
notl
repz
inc
pushf
sub
shlb
daa
addr16
push
jb
adc
fmuls
mov
dec
fistpl
movsl
sub
jnp
inc
adc
loop
popa
out
insb
mov
inc
jge
ficompl
push
push
adc
cmp
test
mov
in
mov
adc
insb
cmp
inc
sahf
cmp
pop
push
fwait
popa
je
pop
jne
pusha
pusha
sub
push
push
ret
adc
xor
call
mov
adc
mov
rcll
xchg
push
mov
lods
pop
push
mov
addr16
mov
les
xor
mov
mov
xchg
mov
adc
test
sub
nop
xchg
repz
movsb
rcrl
not
cltd
test
int3
xor
adc
xorb
or
sbb
mov
push
sub
sar
jb
cmp
xorl
sti
mov
test
cli
out
mov
jo
popf
hlt
or
imul
mov
push
sub
push
push
push
lds
cli
hlt
mov
das
push
or
push
adc
cmpsl
inc
mov
and
jne
sub
xor
inc
std
pusha
inc
cmc
sbb
sbb
ljmp
insb
push
je
lahf
pop
bound
int3
add
push
fldenv
push
jg
lea
push
xlat
sbb
out
nop
les
dec
cmc
and
push
xor
cmp
fs
xchg
aam
push
cld
cmp
movsl
mov
cld
adc
push
daa
pop
mov
sbb
xchg
test
sqrtps
loop,pt
push
xchg
dec
lahf
roll
inc
je
pop
insb
addr16
xchg
dec
push
and
fwait
rol
xor
add
jge
xchg
dec
or
add
add
fsubrs
mov
jo
sti
push
lcall
arpl
inc
add
cltd
mov
or
mov
pop
xor
mov
lcall
imull
sub
adc
scas
dec
mov
xor
add
outsl
add
movsl
mov
es
cwtl
dec
bound
sbb
sub
and
push
or
xchg
push
fisttpl
sbb
xchg
mov
sbb
sbb
pushl
subl
mov
inc
iret
and
mov
sbb
push
jno
aas
and
xchg
xor
jne
mov
cmpsl
cmp
push
xchg
inc
dec
clc
sub
sbb
and
or
je
or
ljmp
jg
mov
sub
aam
dec
push
jmp
loopne
adcl
adc
xchg
or
daa
adc
push
xchg
pop
pop
push
cli
xchg
sub
rorl
xchg
jle
sti
and
je
cmp
ljmp
push
and
push
jecxz
push
or
test
dec
mov
xlat
or
je
int
pop
adc
or
test
adc
cli
and
mov
add
and
adc
inc
and
dec
jge
inc
pop
jbe
mov
stc
outsl
cld
test
add
je
lea
ds
adc
test
inc
loope
and
push
sub
addb
ss
clc
comiss
in
and
repnz
sbb
lock
pop
push
lea
psllw
je
call
push
push
adc
into
sub
in
push
in
mov
fisttps
and
and
inc
ffreep
xor
adc
and
rorb
cmp
add
add
add
push
or
push
add
jo
and
les
daa
lods
adc
das
dec
mov
mov
xchg
lret
rcrb
mov
popa
lods
xlat
adc
xchg
add
xor
scas
and
cmc
pushf
jo
test
xor
mov
shlb
or
fs
push
cmp
das
adc
cs
inc
xor
xchg
xchg
xchg
clc
sti
popf
in
loope
loopne
lahf
aam
std
cwtl
mov
mov
add
sub
mov
aas
cmp
inc
cld
les
inc
add
mov
test
mov
or
mov
inc
xor
mov
dec
push
or
lahf
pop
outsl
cli
nop
bound
data16
pop
mov
cmp
mov
adc
adcl
xchg
jge
pop
lea
add
fcompl
loope
cld
or
inc
push
cmpsb
mov
enter
xor
les
pushf
or
pop
mov
pop
lods
and
mov
lret
sbb
pop
ret
test
sti
pop
adc
inc
inc
mov
push
fs
mov
adc
lods
add
xlat
testb
mov
jne
orb
adc
pop
mov
push
pushl
xor
orl
subl
jns
sbb
and
inc
adc
shrb
xchg
jg
aam
test
dec
lock
cmp
hlt
xor
in
push
inc
xor
mov
pop
add
adc
xchg
mov
into
push
cmp
xchg
xor
push
dec
cmp
psubb
sbb
push
sbb
loop
je
push
and
mov
repz
adc
fsubs
stos
adc
dec
jge
sbb
in
movsl
out
and
inc
dec
dec
sub
push
adc
loope
std
bound
les
and
jns
cmpsb
aaa
inc
adc
cld
divb
iret
sub
pop
mov
call
sub
xor
pop
cwtl
outsb
lock
andb
mov
sar
sti
ss
and
insl
mov
xlat
jb
pop
mov
jbe
gs
xor
jne
mov
shll
sbb
push
in
push
push
or
mov
cwtl
sbb
mov
lods
mov
fs
inc
mov
aas
push
jp
ficoms
cmp
xchg
cmp
ds
mov
add
je
test
xchg
sub
add
call
out
xor
pop
cmp
inc
pop
test
jp
cmc
push
jmp
push
das
mov
and
loopne
ret
adc
mov
mov
aam
loop
adc
std
test
sub
and
loopne
ss
cwtl
and
cmp
mov
mov
sbb
lods
nop
add
lret
push
in
popf
push
ret
into
or
or
lods
cld
or
jmp
call
push
cmp
cmpsb
sub
imul
sahf
inc
loope
addr16
in
add
add
push
and
cmp
pop
adc
or
xchg
fsubs
jae
cmp
push
add
adcb
xchg
pop
xor
mov
push
inc
jl
mov
nop
mov
sbb
mov
neg
das
jmp
jo
xor
fcomps
adcb
mov
or
and
push
inc
add
mov
test
inc
popf
add
and
adc
test
outsl
mov
nop
les
mov
inc
push
fimuls
jns
adc
je
mov
icebp
mov
mov
sub
push
and
push
or
test
sbb
push
or
sub
and
adc
enter
xor
mov
adc
hlt
enter
incb
js
ret
mov
test
cwtl
push
les
fcomps
push
mov
cmp
repnz
or
mov
inc
pop
mov
and
repz
and
lret
push
inc
jb
sbb
push
and
es
outsl
push
inc
push
sub
test
enter
mov
movsb
inc
or
out
and
inc
adc
add
test
xor
cmp
clc
cwtl
jg
dec
repz
cli
push
mov
xor
jnp
outsl
pusha
dec
hlt
je
dec
cmp
mov
mov
inc
and
mov
jg
js
xor
lea
jbe
push
je
pushl
dec
inc
dec
xchg
inc
and
xchg
inc
arpl
add
jb
jmp
cltd
cmp
movsl
jge
aas
xor
jnp
or
es
das
xor
adc
pop
fs
cmp
sbb
leave
hlt
cltd
jmp
notb
inc
and
rolb
pop
xchg
scas
adc
or
clc
jnp
pop
je
into
push
add
hlt
xor
xor
jne
add
frstor
inc
test
shll
sbb
leave
or
test
adc
add
mov
loopne
stos
lods
int3
add
sub
pop
sbb
cmp
mov
and
test
orb
pop
ja
xor
jo
mov
or
pop
fstl
or
jne
int3
les
dec
dec
out
mov
mov
add
aaa
sub
cmp
pop
mov
or
lret
sbb
and
inc
cmp
or
shlb
add
test
pop
call
mov
adc
push
mov
test
dec
test
sub
insb
dec
clc
idivb
dec
test
jb
adc
stc
call
mov
inc
adc
loopne
lcall
or
and
fistl
pop
jl
xlat
push
call
xchg
lea
xor
lock
out
cld
mov
xchg
sub
pop
stos
sub
aad
xchg
out
mov
pop
jb
nop
or
rol
je
sbb
lock
jb
fs
fldl
into
mov
adc
add
aad
mov
imul
ss
gs
mov
scas
movsl
lock
mov
imul
sti
push
jne
sahf
leave
jle
sub
imulb
jmp
jb
or
sbb
ret
jne
pop
cmp
jns
or
dec
fistl
std
shll
or
mov
push
add
sub
daa
loopne
in
mov
mov
addl
repnz
push
and
push
xor
push
push
mov
scas
leave
mov
mov
inc
mov
pop
out
mov
addb
sbb
and
add
jo
and
and
clc
jb
movsl
mov
imul
loope
adc
adc
or
sbb
mov
xlat
daa
mov
movsl
ror
xchg
jl
adc
pop
enter
add
cwtl
cmp
jae
jmp
dec
je
es
mov
push
insb
outsl
sub
ficomps
jmp
ror
mov
decl
cmpl
adc
scas
push
insb
repz
mov
pop
lcall
mov
push
and
adc
cltd
mull
scas
add
mov
cmc
or
bound
daa
push
push
adc
rcll
out
mov
sub
cli
and
sub
mov
aam
pop
in
or
dec
push
jne
xchg
add
cmp
add
xor
in
lock
sub
pop
push
fs
and
cmp
je
sbb
lds
dec
aad
push
nop
pop
repz
jl
adc
inc
add
xlat
xchg
dec
lret
sbb
stc
dec
testl
lods
xchg
mov
icebp
in
sbb
movsl
in
insb
int
or
leave
sbb
xor
lds
cmpsl
outsb
jno
dec
faddl
popa
inc
adc
push
inc
adc
adc
sub
mov
in
lea
or
fidivrl
je
sub
sbb
push
jno
add
clc
call
xor
adc
ljmp
insb
xchg
jne
mov
cmc
and
push
and
and
inc
or
loopne
sbb
dec
hlt
fs
pop
jns
mov
insl
bound
imul
int3
pusha
adc
jle
mov
sarl
push
and
js
stos
lret
sub
mov
jae
dec
or
cmp
push
add
jp
loopne
insb
sub
jle
add
imul
fstpt
enter
icebp
jge
or
rorl
jg
xchg
scas
test
sbb
call
in
sub
push
push
mov
lods
inc
out
test
or
mov
mov
push
call
and
js
lods
jo
nop
aad
clc
ljmp
add
mov
aad
push
enter
rorl
adcb
add
decl
mov
cmpl
push
jl
popf
cld
xor
fsubl
je
mov
mov
scas
shrb
test
les
push
nop
add
das
mov
fcomps
or
mov
mov
in
adc
aad
xor
add
mov
fisttpl
mov
adc
inc
mov
fldt
das
andb
lret
movsb
inc
in
inc
lret
lret
xor
mov
or
or
and
lock
into
mov
nop
cs
pop
pushl
or
dec
and
insl
inc
sbb
sbb
dec
andb
xor
xchg
push
sub
and
mov
mov
cmc
push
lret
sbb
cwtl
add
jae
lret
jmp
test
inc
bound
cmpsl
rorl
rclb
shrl
and
les
pop
dec
sti
jne
push
in
sti
xchg
cld
leave
xor
inc
in
xor
jnp
and
aad
dec
pusha
mov
dec
mov
sti
hlt
inc
push
fsts
push
psubusb
outsl
dec
xchg
adc
push
push
mov
je
xchg
test
dec
in
cmc
inc
xor
lds
mov
dec
xor
into
cmp
cld
mov
xor
bswap
mov
aad
out
inc
lock
xor
adc
and
je
and
or
aaa
xorl
dec
or
push
add
icebp
sti
jg
outsl
pusha
xchg
enter
ja
leave
dec
add
sub
mov
mov
sbbl
das
clc
fwait
sbbb
xlat
xchg
push
pop
inc
insl
inc
frstor
pop
test
cmp
jne
push
pop
ds
push
jne
test
cmpsb
out
xor
xor
jns
jecxz
pusha
mov
xor
mov
jne
or
pop
std
in
ljmp
out
bound
sbb
icebp
jb
cs
jns
in
and
fildl
loopne
int
sub
sbb
or
lcall
ret
pop
mov
sbb
mov
mov
sti
fs
and
call
sub
jmp
cmp
jmp
mov
and
adc
adc
cli
xchg
inc
movw
loopne
cltd
and
jmp
xchg
jp
xor
mov
xchg
js
orb
leave
jg
jge
push
ljmp
fld
lods
pop
cmpsl
fstl
cld
sbb
call
xor
sub
std
call
cmpsl
pop
sub
jno
push
lock
gs
push
dec
and
jmp
push
test
cwtl
pop
pop
cltd
roll
cmpsl
sbb
xor
push
mov
adc
or
xor
push
test
push
jo
xchg
ret
or
push
call
pop
pop
imul
sub
xor
repz
xor
sbb
pop
mul
adc
cmc
les
js
lret
dec
hlt
push
pop
pop
xchg
add
cmpb
jne
call
add
mov
sub
and
push
add
jmp
jge
cmp
push
sub
clc
push
inc
or
xchg
xor
or
ficompl
int3
lret
mov
pop
in
xor
or
sbb
mov
fcomps
icebp
and
xchg
sub
dec
jno
lods
xor
xchg
movsb
int
push
ret
jne
ret
cltd
and
movsb
xchg
aaa
mov
scas
mov
inc
adc
pop
push
sub
and
adc
lods
push
sbb
dec
jl
push
test
ljmp
lock
jmp
and
adc
das
push
sub
hlt
nop
ss
icebp
jno
sbb
in
inc
loope
sbb
jmp
mov
faddp
add
ja
out
inc
sbb
pop
push
or
inc
push
xchg
add
add
popa
cmc
jne
dec
in
xchg
or
jns
mov
adc
test
add
cmp
jecxz
push
xchg
test
mov
es
adc
push
pop
out
push
lods
mov
nop
adc
test
mov
adc
filds
push
mov
fisttps
pop
lret
and
pop
lods
in
addr16
sbb
xor
adc
fsubl
loopne
jge
lea
jmp
sahf
inc
loop
in
mov
inc
inc
lock
popa
popa
sub
aas
js
cmp
push
nop
lahf
out
sbb
and
push
pop
jle
movb
push
inc
stos
xlat
dec
jp
xchg
mov
repz
lods
lods
loop
add
adc
lds
das
inc
imul
mov
test
push
cmp
idivb
pop
je
adc
shlb
mov
jl
fucomp
or
repnz
dec
inc
and
cmpsl
sub
or
push
adc
stc
jle
push
xchg
xor
add
adc
cltd
cmp
enter
sti
xor
mov
popf
out
push
addr16
adc
and
xchg
inc
inc
lcall
adc
out
cmpl
popa
mov
cmp
pop
cmp
xor
arpl
adc
inc
mov
or
sbb
sub
jmp
xchg
and
or
dec
jp
fcomps
loope
adc
jnp
leave
loop
sub
dec
std
xchg
inc
pusha
mov
xor
mov
lods
and
and
adc
sbb
jmp
bound
cwtl
and
and
movsl
std
add
xor
sbb
es
push
pop
and
test
push
int3
pushf
dec
scas
push
dec
pop
mov
mov
int
sub
pop
inc
mov
test
pop
add
push
inc
add
jl
adc
mov
xor
jmp
add
mov
add
jne
jecxz
or
push
push
dec
fidivs
cmpsb
icebp
xbegin
mov
aad
xchg
nop
imul
clc
jb
xchg
adc
pop
cli
mov
mov
jg
push
cwtl
daa
clc
sbbl
or
lret
adc
adc
push
adc
lods
inc
and
sub
daa
adc
iret
xor
xchg
cli
push
mull
and
cli
mov
sarb
pop
jne
data16
pop
and
test
push
call
add
pop
out
xchg
jae
outsb
sarw
mov
push
xor
stos
xor
mov
jbe
and
sbb
adc
inc
mov
mov
inc
inc
neg
sbb
fadd
add
aad
hlt
push
and
in
mov
or
stos
push
and
jl
inc
sub
adc
std
dec
lea
fdivl
xchg
and
mov
daa
pop
sbb
lock
push
cld
push
pop
cmpsl
fcmovnbe
dec
js
inc
xchg
mov
push
jge
push
loop
mov
das
xchg
orb
dec
test
dec
adc
xchg
sarb
xchg
and
fwait
jae
outsb
or
xchg
pop
mov
adc
jg
pusha
push
fcoml
sub
and
mov
loopne
pop
jmp
jo
xchg
mov
dec
mov
xor
cmp
out
add
push
call
std
pushf
loopne
sar
pop
insb
mov
scas
outsb
aad
adc
test
xchg
dec
mov
dec
outsb
into
loop
add
mov
into
push
and
lret
push
cltd
lret
test
inc
adc
adc
scas
incb
enter
nop
or
dec
add
cli
mov
mov
cmpsb
mov
inc
xlat
je
lret
and
inc
shll
insl
inc
push
cwtl
xor
inc
pop
pop
arpl
sbb
mov
and
pop
xor
and
sbb
mov
in
outsl
dec
es
push
xor
jg
mov
jl
fucomip
push
fildll
jb
in
cli
adc
imul
adc
lea
xor
add
dec
test
inc
xor
mov
psrad
xor
icebp
scas
int
and
xchg
cltd
pop
or
stc
xchg
cltd
xlat
je
ljmp
pop
cmp
cmp
and
jae
add
lods
xor
pushl
fistps
inc
cltd
loope
inc
push
dec
inc
push
movsl
mov
xor
push
sub
adc
mov
test
jecxz
mov
out
xor
jno
sbb
dec
sub
subb
xchg
mov
clc
mov
imul
mov
pop
mov
loop
sbb
out
mov
or
xchg
adc
fnstsw
repnz
in
pop
add
xor
push
call
loop
movsb
adc
insb
push
adc
call
jae
test
addr16
dec
adc
mov
or
jo
in
hlt
jmp
bound
add
dec
test
xchg
cmc
and
dec
push
gs
sbbb
adcl
cmp
jle
push
sub
les
subl
jo
pop
jle
adc
and
decb
adc
pusha
jb
add
in
xchg
and
les
or
push
push
and
repnz
enter
scas
movsb
xchg
adc
int3
adcb
mov
xor
xor
bswap
xor
add
xchg
dec
adc
add
es
mov
sub
fiaddl
push
sub
inc
and
call
dec
sbb
jne
jmp
test
or
hlt
and
dec
mov
out
add
test
push
and
sbb
adc
inc
xchg
int3
push
and
adc
sbb
insl
pop
fmuls
inc
sbb
pop
fs
xor
pushf
sub
xchg
and
fs
cld
xchg
adc
push
and
adc
mov
cmp
in
and
insb
inc
daa
xor
adc
or
adc
fisttpl
or
lods
inc
fwait
jno
das
sub
push
xchg
or
sbb
mov
mov
jmp
test
adc
mov
jmp
dec
jo
inc
xor
test
and
inc
sbb
adc
push
jmp
subb
imul
jo
inc
inc
adc
xchg
and
mov
jmp
adc
sub
outsl
or
mov
hlt
adc
je
inc
lret
xor
inc
or
add
sbb
mov
mov
push
dec
adc
enter
push
and
dec
adc
mov
pop
movsb
xor
lds
shll
adc
and
pushf
jl
sbb
popa
or
cld
std
inc
sub
adc
ret
rclb
rorb
xchg
sub
sbb
lods
test
inc
mov
dec
adc
mov
imul
loope
outsb
sbb
test
mov
cld
inc
dec
jno
inc
mov
and
pop
adc
dec
sbb
arpl
inc
dec
jno
inc
in
mov
xchg
and
sbb
mov
in
xchg
test
dec
dec
dec
imul
cmc
and
xchg
adc
mov
sub
adc
fs
xchg
and
lods
or
inc
movsb
and
xchg
adc
xor
mov
imul
inc
inc
and
mov
sbb
test
cmp
inc
mov
dec
xchg
lock
xchg
sbb
xor
xchg
bnd
adc
sub
inc
sbb
mov
mov
popf
lds
das
test
mov
xchg
enter
push
insl
loope
push
xchg
test
mov
push
and
pop
test
cmp
nop
mov
cs
cmp
jo
ret
and
stos
cmp
outsb
rorb
mov
bound
dec
and
data16
or
mov
adc
inc
mov
inc
inc
and
sbb
and
mov
jb
mov
inc
inc
andb
push
jmp
dec
enter
mov
pop
jns
pop
test
enter
and
push
inc
and
gs
mov
test
and
mov
sbb
push
mov
sub
mov
sub
mov
ja
sbb
adc
nop
shll
cmp
popf
mov
lea
add
adc
nop
es
ds
fadds
popa
jne
inc
gs
xor
and
ds
mov
call
jmp
lods
adc
lret
mov
or
adc
xchg
inc
ljmp
aad
sub
js
cld
sub
inc
cmp
mov
sbb
test
subl
adc
ficoms
inc
mov
mov
cmp
adc
inc
sub
and
push
and
nop
add
out
inc
arpl
and
push
movsl
enter
popf
fsubl
or
mov
and
pop
int3
inc
pushf
sub
mov
or
les
mov
mov
cmp
enter
sub
mov
and
adc
inc
sti
bound
test
in
push
int
and
adc
pop
cmp
test
xor
adc
cmp
jno
xchg
sbb
test
enter
daa
cmp
sbb
test
enter
mov
or
incb
mov
out
adc
clc
inc
mov
test
mov
and
adc
or
and
je
cmp
das
les
and
bound
nop
mov
out
ljmp
inc
shrl
inc
sub
mov
cmp
test
cld
sub
inc
pop
and
lcall
adcl
sub
shlb
adc
or
add
sub
sbb
sbb
cltd
out
xor
test
and
out
xor
test
clc
in
lret
out
cmp
enter
jne
mov
lods
shll
sub
test
mov
adc
lods
xchg
ret
pusha
jle
ljmp
pop
in
divb
push
lods
ret
jnp
sahf
adc
sti
push
enter
inc
sbb
sbb
or
xor
sub
dec
push
je
arpl
and
jmp
cmp
sbb
xchg
dec
pop
loopne
and
pop
inc
mov
adc
add
and
adc
push
mov
fcoml
cmc
shr
rol
push
cmp
add
clc
xchg
test
xchg
push
out
fs
ret
mov
out
inc
and
inc
enter
inc
push
push
xor
push
test
cli
push
cmpsl
rorl
insb
mov
inc
sub
xor
sti
inc
pop
adc
pop
pop
fucom
adc
mov
cmp
or
test
or
enter
lahf
push
mov
xor
je
mov
or
test
and
mov
sbb
hlt
je
fwait
gs
add
testl
jmp
hlt
mov
dec
push
lea
jb
dec
and
or
add
ret
lds
imul
pop
arpl
push
dec
mov
popw
aas
enter
test
and
and
aam
inc
pop
adc
pop
popa
or
jmp
xor
lret
add
push
and
jmp
pop
or
xchg
sbb
jmp
adc
nop
int3
cmp
and
pop
or
sub
imul
or
push
inc
sbb
inc
push
insb
jecxz
inc
lret
nop
and
repz
hlt
mov
or
notl
lcall
mov
adc
icebp
push
idivb
dec
test
xlat
and
sbb
adcl
or
lret
mov
pop
and
orb
and
rolb
push
push
fstl
jg
push
adc
jne
mov
sub
xchg
shrb
sbb
lods
adc
dec
es
cmp
loope
rorb
and
ret
cmp
in
stos
or
lock
daa
lret
in
mov
popf
and
and
pop
mov
xchg
test
les
mov
and
movsb
lock
and
cmpsb
outsb
jle
mov
sub
xchg
hlt
pop
and
cmc
and
call
mov
loopne
sbb
mov
and
out
pop
xor
or
inc
pop
mov
out
nop
mov
pop
pop
sbb
test
enter
and
adc
cwtl
test
enter
and
inc
inc
and
sbb
xor
and
push
inc
or
pusha
adc
mov
sbb
push
test
lock
inc
mov
dec
adc
or
sahf
nop
inc
mov
pop
and
cmp
sub
xchg
push
and
sbb
and
jge
sbb
test
les
sub
sub
mov
and
bound
and
inc
movsb
adc
mov
or
pop
xor
or
inc
push
mov
in
daa
pop
pop
into
push
mov
and
fs
enter
and
inc
and
adc
mov
movsb
and
or
cmp
xor
das
sti
adc
jmp
in
inc
mov
adc
mov
push
or
mov
jo
in
lcall
fwait
adc
adc
dec
das
inc
lahf
fists
test
jno
pop
out
xor
bound
adc
sbb
sub
iret
cmp
or
ret
and
push
adc
int3
and
adc
mov
or
loopne
inc
ror
mov
sbb
push
or
sub
cmpsl
mov
or
inc
pop
nop
test
and
and
bound
sbb
test
frstor
pushf
mov
sub
and
adc
or
incl
jl
out
push
adc
push
add
jo
fcomps
sbb
test
popf
aas
fimuls
outsl
lock
push
mov
push
mov
bound
push
repnz
push
push
rcrb
les
pop
hlt
and
or
sub
iret
jg
push
cmp
pushl
leave
mul
arpl
leave
idivb
sbb
jnp
sbb
data16
data16
add
xchg
sbb
jge
movsl
dec
lods
push
sbb
push
add
cmp
adc
mov
mov
lea
mov
add
iret
push
push
icebp
mov
stc
push
rorb
mov
lds
dec
or
repz
lcall
xchg
mov
adc
push
and
mov
inc
inc
push
jno
jle
mov
test
cmpsl
jb
es
or
or
mov
adcb
mov
test
inc
and
lret
inc
adc
or
lahf
push
adc
or
arpl
mov
out
or
mov
and
push
les
jle
inc
sbb
mov
sub
in
and
jge
jecxz
push
dec
daa
and
das
and
jo
inc
sub
mov
es
daa
inc
and
dec
dec
test
jmp
shlb
cmp
int
push
mov
cmp
xchg
xor
repz
mov
clc
daa
lahf
add
push
out
sub
cmpsl
push
pop
mov
xor
sbb
xor
stos
jmp
xor
sti
push
inc
hlt
pop
push
sbb
inc
push
jmp
jge
push
mov
xchg
pop
or
push
inc
imull
outsb
popf
push
cmp
and
sub
pop
adc
fsts
call
arpl
std
dec
repz
add
bound
lods
stos
inc
test
decl
enter
xor
cmp
icebp
setne
imul
cmpsl
fidivs
sbb
pop
jle
sbb
sub
popf
and
test
enter
psubsb
add
cmp
mov
pop
mov
add
adc
mov
stc
xor
sbb
mov
sub
pop
and
dec
test
or
sub
cmp
and
xor
loopne
xchg
xor
lahf
dec
lock
push
adc
xchg
mov
push
and
inc
in
and
inc
lock
jle
fists
push
mov
jae
mov
in
inc
and
xchg
gs
rclb
cld
test
sbb
inc
cvttps2pi
and
clc
cld
inc
in
sbb
lea
adc
add
test
int3
and
addl
lds
sub
das
sbb
lcall
push
jmp
mov
loop
xor
aam
pop
scas
scas
int3
fcomps
mov
lcall
pop
cmp
push
sub
xchg
testl
stos
sub
push
jno
add
inc
or
test
pop
mov
sbb
insl
rcll
test
inc
xor
out
inc
jp
dec
or
adc
cmp
xor
nop
add
dec
dec
clc
mov
and
jmp
mov
lret
mov
test
lcall
jnp
fsubrs
or
pop
or
cmp
cmp
jbe
dec
push
lea
pop
fsubs
mov
adc
pop
inc
inc
adc
orl
mov
inc
push
push
and
mov
push
add
mov
sbbb
jecxz
dec
xor
jmp
in
enter
aas
loope
jp
inc
lea
inc
cmp
push
mov
inc
or
and
jl
stos
subb
jne
pop
sub
test
es
gs
int
es
stos
inc
cmp
sbb
cmp
adc
mov
sbb
pop
or
pop
push
mov
xchg
or
xor
mov
test
add
cltd
cs
xor
mov
adc
pusha
xor
and
push
xor
jl
push
andl
mov
inc
bound
mov
jle
xchg
adcl
js
shll
add
or
adc
cmp
jl
cmpsb
int
add
and
inc
or
imul
pushf
push
hlt
repz
and
int3
sti
arpl
dec
xor
add
push
push
adc
js
jmp
pop
fsubl
cmpb
mov
mov
cli
dec
sbb
adc
pop
test
cmp
xor
cmp
fmul
xlat
aam
push
rclb
push
pop
xchg
clc
addl
mov
or
dec
lret
cld
inc
mov
lea
fdivr
je
std
test
gs
mov
mov
dec
sbb
mov
cmp
cwtl
cmpb
rorb
cwtl
push
leave
repz
and
mov
mov
add
and
fisubrl
xor
mov
lea
mov
into
mov
ret
mov
sbb
mov
adc
jge
inc
fbstp
dec
cwtl
or
mov
test
xorb
jmp
repnz
out
xor
pop
pop
mov
imul
lds
inc
iret
and
and
inc
sub
jno
sub
mov
mov
dec
adc
jp
test
or
ret
adc
xchg
add
aaa
sbb
add
outsb
cmovne
dec
add
pop
sub
push
push
std
adc
dec
test
out
or
inc
dec
mov
inc
dec
testl
lods
testl
cmp
inc
pop
push
lds
test
mov
cld
and
or
jb
dec
inc
mov
daa
fldt
test
cld
xchg
xor
cmp
lods
ss
inc
mov
cld
cli
xor
mov
pushf
xchg
imul
aas
and
xor
adc
cli
into
dec
sub
mov
xchg
add
ja
stc
loopne
xor
outsl
dec
push
repnz
inc
sti
sub
push
dec
or
mov
xor
orl
inc
les
add
cmp
jmp
and
sti
test
inc
cmp
mov
js
pop
xchg
sbbb
jecxz
clc
xchg
movsb
pop
adc
or
or
inc
sbb
xor
mov
pop
push
mov
hlt
adc
adc
cmp
nop
push
pop
data16
mov
inc
inc
xchg
sbb
mov
cmp
xchg
inc
cli
and
nop
testl
outsb
cli
inc
cwtl
cs
add
sbbb
push
dec
ds
pop
arpl
and
and
sbb
xor
subb
idivb
les
fcompl
xchg
dec
icebp
popf
stc
jle
addr16
jg
adc
cmp
adc
and
inc
inc
dec
mov
jb
or
dec
call
or
nop
inc
clc
dec
inc
mov
mov
jnp
aam
rcrl
aam
jg
call
loope
sbb
cwtl
clc
in
and
sbb
stc
call
push
pop
dec
les
outsl
cmp
stc
in
ret
or
adc
adc
sub
mov
loop
and
jo
hlt
xchg
jle
or
icebp
pop
jmp
test
or
dec
outsl
and
daa
push
lcall
out
lds
mov
adc
das
jl
adc
stc
cli
nop
sub
sub
push
movsb
pop
mov
mov
js
cltd
fmuls
pushf
ds
push
inc
sbb
add
sub
mull
cs
adc
je
jle
mov
inc
fdivrs
call
cmp
dec
mov
or
imul
inc
les
mov
jge
test
daa
inc
push
and
and
inc
inc
adc
xchg
mov
adc
orb
sbb
xchg
add
jo
xor
pop
dec
sbb
add
mov
adc
mov
pop
shrl
mov
sbb
xor
or
inc
cmpsb
in
or
jle
jns
inc
scas
bound
and
stos
cmp
daa
lret
or
clc
mov
lea
sub
inc
jb
or
jl
pop
and
inc
les
aaa
arpl
mov
ret
sbb
pop
inc
mov
or
inc
pop
inc
mov
push
xlat
push
push
adc
adc
push
cmp
sub
inc
inc
xor
les
sbb
lds
dec
stos
pop
mov
int3
insb
test
push
xchg
push
lcall
movsl
mov
and
shrb
or
cltd
frstor
adc
out
and
push
jecxz
test
fsubr
leave
insl
sbb
mov
pop
or
adc
sub
dec
sti
cmp
push
icebp
cmp
lret
cli
loopne
out
dec
lahf
xchg
fldcw
fsts
xchg
xor
mov
push
iret
sub
loope
jnp
adc
cmp
mov
bswap
xor
addr16
sub
or
or
jnp
dec
repz
mov
cmp
in
cmp
stc
push
out
xor
ja
lahf
pop
pop
push
or
fiadds
bound
cwtl
lret
popf
adc
out
pop
in
mov
dec
dec
ds
sbb
cmc
das
inc
or
popa
movsb
push
insl
mov
inc
jmp
and
sub
in
and
lock
adc
push
cmp
sub
jne
push
or
cmp
adc
jno
loopne
or
aaa
xchg
rolb
cltd
sarl
add
mov
mov
imul
push
add
outsl
pushf
das
dec
sub
mov
xchg
push
dec
pop
sub
leave
movsl
mov
mov
or
insl
shrb
lcall
mov
fistps
mov
xchg
int
js
inc
push
inc
aaa
and
adc
xchg
cmp
pop
inc
cmpsl
mov
xchg
pop
inc
das
cmp
inc
pop
mov
pop
mov
push
fildll
inc
sbb
dec
adc
sub
inc
cmp
push
shll
dec
fs
bound
mov
push
lds
xor
push
cmpsl
aam
sub
shll
and
jnp
fwait
sub
cmp
xorb
cmpsb
sub
inc
lods
jno
xchg
rdmsr
movsl
jno
test
push
imul
hlt
jns
push
mov
push
imul
dec
call
xor
in
repz
push
xchg
pop
cmp
shlb
mov
mov
push
mov
xor
stos
sub
mov
push
jmp
xchg
mov
call
sahf
adc
adc
jmp
sbb
xchg
sbb
mov
push
push
data16
mov
rol
sub
dec
sbb
outsb
and
icebp
and
and
xchg
push
mov
int3
mov
jmp
pop
sub
pop
cmp
stc
xor
sub
or
in
mov
jns
icebp
xor
cwtl
push
sbb
xchg
cltd
xchg
and
popa
pop
mov
push
or
fdivrs
mov
mov
pop
xchg
ficoms
or
dec
adc
andb
jmp
loopne
jmp
sub
mov
dec
pop
iret
fisttpl
jmp
lds
jns
loope
cmp
cmp
aas
xorb
inc
ret
pop
sbb
push
subb
cmp
ficoms
cmp
jmp
mov
loope
sbb
push
shll
cmp
sbb
ja
dec
sbb
stc
mov
push
ja
mov
daa
andb
dec
clc
or
jmp
sbb
cltd
call
and
and
ja
shlb
in
inc
lahf
or
jge
or
mov
movsl
ss
and
and
adc
cli
insb
enter
arpl
ret
or
cmpb
cmp
cmp
xor
js
inc
and
pop
mov
xchg
cmp
test
adc
lods
jbe
fs
xor
sub
test
jl
inc
and
bnd
out
mov
out
lret
pop
pop
xor
mov
push
sub
xor
or
fldt
or
gs
or
hlt
xor
sarl
in
cwtl
or
xchg
loop
lahf
fdivs
ret
or
jmp
inc
sbb
mov
and
out
sub
sbb
aam
xchg
xor
jmp
add
mov
pop
cli
aaa
xor
or
xorb
daa
sar
sahf
xchg
push
inc
dec
test
jp
xchg
ss
hlt
je
movsl
adc
in
adc
daa
dec
xor
fildl
mov
testb
mov
loop
mov
jbe
sub
push
nop
or
and
sub
ds
xchg
and
leave
adc
mov
and
sarb
orb
push
and
jle
ljmp
add
jle
push
mov
je
mov
sub
push
das
mov
and
iret
and
aaa
mov
mov
stos
and
or
das
inc
adc
in
fdivrs
in
xor
xchg
lret
pop
pop
fimull
jno
jno
dec
lods
jle
inc
fwait
pushf
ljmp
xor
inc
cmp
jnp
push
jo
inc
push
adc
sub
rcrb
daa
subb
inc
push
pop
jmp
repnz
push
inc
lret
mov
or
cltd
cld
adc
mov
adc
inc
movsb
mov
in
lods
mov
jb
mov
inc
push
stos
pop
sub
xchg
push
and
stc
mov
push
xchg
jle
pop
adc
movsb
jb
cs
aaa
push
sub
and
jg
sbbb
lods
shr
adc
out
test
movsl
cs
mov
or
fdivrp
push
adc
push
int3
mov
pop
sbb
cld
mov
test
mov
lret
cld
jne
aam
je
fcoml
adc
or
mov
xchg
sbb
fldenv
inc
sahf
xor
sub
mov
lahf
test
test
std
pop
cmp
push
popf
js
nop
add
sub
mov
xor
call
adc
sbb
inc
jg
push
in
inc
pop
mov
jo
sarb
inc
and
dec
xor
adc
mov
je
scas
xchg
lret
and
pop
sub
jmp
push
lods
sbb
outsl
imul
dec
push
imul
into
push
les
cmp
fimuls
loop
push
les
mov
cltd
loopne
cwtl
jo
in
test
sbb
adc
nop
add
repnz
orb
and
adc
mov
adc
push
and
movsbl
xorl
mov
adc
xor
addr16
imul
adc
mov
sbb
pop
repz
adc
xor
push
mov
fxrstor
aas
lods
and
inc
xchg
insl
xorl
mov
jb
xchg
cli
sub
push
mov
mov
pop
sub
sub
mov
mov
xchg
inc
rolb
call
push
sub
icebp
jle
xchg
add
outsl
mov
jmp
pusha
xor
mov
adc
lea
add
mov
push
dec
loopne
mov
pop
xor
add
call
and
and
sub
xchg
lock
ret
pop
aas
fimuls
or
pop
rolb
test
pop
jb
jmp
and
xchg
das
xchg
fcompl
adc
jp
jmp
jmp
xchg
inc
popa
xchg
sub
and
inc
sub
pop
mov
test
cmp
das
repnz
test
repnz
inc
cmp
ret
mov
push
sahf
mov
imul
sbb
mov
sub
and
pop
pop
inc
sbb
mov
mov
idivl
and
mov
push
fiadds
and
sub
icebp
lock
or
adc
bound
dec
mov
mov
sub
adc
and
inc
xchg
test
add
lea
cltd
inc
fsubrs
adc
or
inc
movl
jns
push
or
adc
pop
mov
jl
xchg
cmp
popf
lods
xchg
test
dec
inc
and
cmp
scas
cmp
stos
sub
mov
jp
cltd
cs
subb
mov
mov
adc
mov
push
pushf
aam
stos
adc
lahf
and
sub
push
mov
insl
test
daa
insb
incb
lods
adc
jno
or
pop
es
sbb
push
xor
xchg
xchg
fwait
jne
fwait
jnp
pop
jbe
and
movsb
cmp
jmp
js
or
jmp
inc
insb
call
enter
xchg
mov
mov
adc
lods
mov
lcall
shl
pushf
adc
mov
xchg
add
pop
pop
daa
cwtl
lods
inc
fsubrl
in
js
fsubrl
push
dec
test
icebp
or
pusha
movsb
cmpsl
push
add
add
call
sub
das
cmc
repz
inc
jo
push
sbb
stos
aaa
jmp
clc
mov
repnz
sub
adc
jmp
inc
push
mov
pop
add
mov
adc
sub
adc
mov
popf
cmp
enter
adc
cmpl
ljmp
mov
xchg
ret
inc
xor
push
not
and
or
bound
icebp
mov
imul
cmp
lahf
cmp
sub
testb
push
sarl
jmp
jns
popf
in
lea
push
xchg
inc
es
xor
sbb
imul
cld
jge
dec
movsl
mov
sub
mov
inc
sti
les
cmp
push
and
push
xchg
pop
jne
enter
add
movsb
ljmp
in
xor
clc
push
or
in
inc
mov
xchg
js
mov
bound
icebp
mov
push
and
negb
cli
test
hlt
mulb
pop
xor
cmp
push
add
and
sti
or
xor
jno
adc
or
inc
sub
jmp
pusha
push
sub
mov
jne
cmp
and
cltd
sbb
xor
push
adc
sar
movb
pop
pop
adc
push
call
add
sbb
push
lods
loope
daa
add
ljmp
jecxz
and
adc
rcrb
jl
pop
sbb
repz
aaa
push
fisubs
push
int3
xchg
orl
insl
pop
mov
adc
fsubrs
add
loope
and
xor
pinsrw
popa
invd
add
jl
scas
inc
push
cltd
push
sbb
sbb
jl
or
pop
shll
xor
test
mov
xchg
sbb
inc
adcb
cmp
jae
pop
sbbl
cltd
add
or
subb
pop
and
loope
sbb
fstpt
push
cmp
adc
lret
and
es
pop
ds
and
sbb
sbb
sbb
adc
jmp
mov
pop
aas
pop
cli
and
or
scas
pop
inc
and
popa
adc
call
stos
les
mov
cmp
add
sbb
adc
nop
das
jl
jp
pop
inc
in
outsl
adc
adc
dec
aaa
lcall
or
loope
cmp
pop
dec
leave
repz
dec
lods
cmp
mov
push
sub
jo
sub
sbb
dec
xchg
jmp
mov
inc
sbb
stos
insb
rorb
je
mov
lds
test
test
mov
pop
pop
arpl
gs
mov
push
aam
clc
jo
and
cld
hlt
dec
addr16
mov
mov
outsl
loope
push
and
sbb
loop
cld
push
inc
sti
adc
clc
gs
lods
inc
addr16
stos
fdiv
mov
add
mov
or
dec
sti
popf
movsl
mov
jne
sub
push
and
inc
dec
mov
shll
push
adc
adc
adc
test
inc
imul
xor
loopne
or
sbb
adc
cld
mov
dec
cmp
mov
mov
pop
and
jae
mov
scas
xchg
and
mov
push
movsb
dec
xor
jo
inc
and
pushf
mov
xor
or
addps
test
inc
and
add
xchg
jmp
mov
pop
jno
xor
add
inc
out
enter
mov
shlb
jmp
icebp
popa
sbb
jmp
push
sarb
or
addr16
cld
mov
sbb
sbb
loopne
pop
cmpsl
xor
and
and
mov
push
sti
sti
sub
jmp
mulb
push
xchg
shll
fwait
push
jmp
push
sahf
fs
cmp
icebp
fs
cwtl
mov
xchg
sub
test
xor
adc
lea
pop
repz
test
cmpsl
and
sbb
and
and
adc
sbb
das
dec
sub
xchg
mov
sub
movsl
jns
and
xchg
fadds
adc
pop
and
mov
mov
pop
imul
jmp
xorb
test
dec
dec
push
decb
jmp
testl
sbb
or
test
push
sub
xchg
sub
or
js
xor
das
dec
push
adc
sbb
or
jge
mov
xor
shl
pabsb
lea
daa
cld
sub
mov
jmp
and
adc
inc
adc
lahf
rcrl
sbb
daa
jmp
notb
sti
inc
scas
movsl
test
sbb
cld
and
mov
test
sbb
je
in
dec
adc
outsb
testl
dec
adc
mov
mov
adc
dec
mov
xor
bound
mov
jae
dec
sbbb
jmp
dec
fsubs
and
lret
push
xor
mov
add
das
add
lock
clc
add
sbb
ja
rcll
lods
in
insl
sub
sbb
xchg
sbb
push
stos
sub
mov
addb
adc
mov
hlt
dec
arpl
cmp
add
call
adc
imul
andb
icebp
and
enter
push
mov
xor
jmp
or
mov
adc
adc
lret
aam
cli
mov
adc
jmp
jg
inc
fisttpll
xchg
sbb
pushf
out
mov
iret
addb
jmp
mov
dec
sti
sbb
dec
dec
xor
or
push
adc
cmp
pop
lods
call
mov
jmp
adc
lret
hlt
ja
xor
leave
dec
ret
ljmp
cs
xchg
je
cmp
orl
jmp
fmul
cmp
push
iret
stos
push
jg
enter
cs
movsw
mov
add
stos
in
push
xlat
orl
rep
mov
mov
cld
cmp
mov
xor
dec
pop
inc
pop
cmp
push
adcl
jno
dec
adc
repnz
movl
ret
dec
jge
mov
sbb
es
sbb
xchg
fiadds
data16
sbb
xor
pop
loope
mov
sub
adc
in
cltd
and
or
sub
sub
subl
inc
lods
mov
sub
fadds
mov
imul
ret
adc
imul
jnp
ficoml
adc
es
mov
or
pop
xchg
inc
push
or
sbbl
push
adc
cmp
lea
push
cmpsl
fsubrl
sub
das
mov
and
xchg
adc
lods
adc
lods
cli
or
les
mov
mov
mov
or
push
xor
call
xor
mov
sub
outsb
insl
fldenv
push
cwtl
cltd
cwtl
inc
std
pop
std
xchg
xchg
or
dec
insb
mov
push
xchg
or
add
aad
popa
pop
rclb
das
cwtl
xlat
sti
xchg
nop
es
push
mov
call
inc
or
mov
jge
addb
stos
fs
mov
ds
call
lock
sbb
or
inc
sbb
iret
mov
or
mov
pop
pusha
faddl
inc
xor
and
cmp
in
adc
adc
loopne
ljmp
incb
pop
mov
es
push
es
push
adc
pushf
inc
int3
insb
ret
sbb
fnsave
add
lods
cld
stos
fstpl
lods
xchg
xor
adc
and
or
fisttpl
js
cmp
or
sbb
sub
lock
imul
mov
adc
add
sbb
call
dec
and
cmp
es
popf
ret
push
push
adc
inc
lret
mov
arpl
inc
cmp
sub
xchg
push
pop
mov
cmp
cmp
jne
and
jle
outsl
orb
xor
jle
push
call
xchg
cmc
enter
pop
inc
cmp
jl
mov
mov
adc
stos
fdivrs
jno
mov
jle
xchg
push
add
pop
xor
sbb
push
pop
push
adc
ljmp
and
jle
jle
inc
mov
dec
pop
stos
leave
push
inc
repz
test
cmovl
inc
pop
jne
mov
push
or
push
jl
inc
and
add
js
adc
add
mov
pushf
push
mov
filds
xchg
or
mov
jnp
adc
pop
test
xchg
and
js
inc
inc
addl
mov
mov
les
or
test
sbbb
jge
dec
jl
lea
orl
push
rorl
sbb
in
sbb
dec
sbb
faddl
popa
adc
ret
xor
cmp
stos
cmp
cmp
push
clc
fs
xor
sub
mov
es
xor
lods
cltd
dec
xlat
mov
jl
push
dec
pop
out
or
enter
cmp
sbb
mov
jp
adc
sbb
fldt
push
popf
adc
loopne
and
add
int3
jg
in
fs
sub
and
lods
cltd
mov
add
in
and
adc
fisttpl
inc
sbb
jmp
xor
add
jbe
mov
and
sub
dec
pop
cld
pop
dec
daa
cli
fs
stos
jecxz
dec
pop
sbb
rcl
adc
dec
test
out
add
fcomps
out
jmp
mov
xor
cmp
aas
push
jg
adc
adc
icebp
cmp
in
cmpsl
lea
add
or
mov
jge
push
ljmp
pop
pop
ret
mov
int3
dec
sub
loopne
out
push
push
inc
push
leave
int3
filds
xor
push
pop
push
jmp
es
pop
jae
fldcw
dec
aam
lret
movsl
push
mov
xlat
stc
inc
lea
xchg
sahf
jl
push
mov
mov
incl
test
stos
call
jns
inc
daa
jmp
pop
mov
pop
std
shl
mov
add
jns
pop
into
ja
repz
inc
push
add
or
andl
aam
mov
test
mov
xor
lock
pop
jns
loop
and
aas
test
jo
jbe
bound
cmp
adc
insb
add
jge
jne
clc
movsl
adc
jmp
lret
dec
mov
les
xor
rorl
pop
call
pop
push
movsl
mov
cmp
test
lock
lret
xchg
clc
inc
pop
or
shrl
adc
sbb
cmp
xlat
inc
mov
or
insb
int
popf
push
repnz
push
cmp
sbb
das
cmp
pop
icebp
add
push
sti
leave
or
mov
mov
in
cld
fsubr
mov
push
adc
xor
pop
aaa
in
cmc
movsl
test
test
pop
xor
push
mov
js
jno
mov
adc
enter
push
inc
pusha
adc
sbb
mov
les
dec
adc
shr
mov
lods
mov
ss
xor
in
cltd
movsl
ja
and
mov
push
loope
cmp
or
sbb
push
mov
jne
sbb
loope
nop
push
in
pop
stos
daa
popf
dec
push
jmp
jge
jmp
fs
outsb
add
int3
sub
mov
and
add
pop
dec
adc
mov
or
rorb
sti
mov
test
jge
outsb
jbe
jae
pop
pop
or
gs
cltd
jmp
xchg
je
mov
pop
idivb
divb
fisubrs
adc
jl
inc
and
jne
jnp
imul
mov
shll
jl
mov
pop
or
fistps
fiadds
sub
addl
sub
or
lcall
jae
incb
fs
pop
cltd
push
gs
push
imul
sbb
jne
mov
jge
mov
mov
xor
pop
dec
fs
add
lds
push
adc
and
pop
lret
xchg
test
adc
or
loopne
and
pop
xor
inc
push
fbld
inc
push
sub
or
pushf
adc
lret
lock
ds
and
push
lret
inc
clc
pop
mov
fdiv
pop
orb
push
lcall
and
fwait
popa
inc
and
xor
pop
jno
les
push
jae
jle
fcoml
lock
sbb
fisubs
mov
pop
sbb
sub
jb
mov
cmp
lcall
sub
jp
mov
or
xchg
mov
dec
test
mov
aam
push
jl
dec
ja
lret
clc
add
push
lcall
adc
into
cld
xor
or
hlt
jl
scas
inc
jb
mov
add
ret
shrl
stos
mov
loop
leave
adc
push
jp
pop
sub
push
push
sub
dec
icebp
push
or
sahf
js
add
sub
pop
xor
and
adc
cmp
and
cmp
out
jmp
push
mov
cld
pusha
ror
jge
cld
dec
adc
inc
push
outsl
mov
es
mov
cmpsb
insb
in
fisubl
jo
xor
mov
icebp
ret
jae
jb
jmp
call
in
sbb
fldt
fldl
add
int3
inc
sub
jno
sbb
xchg
lahf
or
add
adc
add
nop
inc
sbb
gs
loop
jo
dec
and
and
adcl
jge
mov
adc
cmp
in
jle
sbb
jne
xchg
dec
xor
inc
and
cmp
sbb
je
les
out
xchg
sub
sub
outsb
mov
jbe
inc
test
icebp
xchg
mov
rolb
aaa
shll
lea
mov
mov
pop
pop
pop
pop
jbe
dec
out
jp
pop
sbb
pop
push
cmp
loop
push
lods
push
in
jmp
add
jge
pop
sub
mov
cmp
sahf
add
test
jle
cmp
je
add
fistps
iret
sub
dec
sahf
add
adc
sbb
mov
lret
add
into
lock
push
and
add
add
rorl
es
and
lcall
pop
sbb
mov
or
and
or
test
or
cwtl
dec
ljmp
jecxz
pop
jle
in
push
sbb
inc
dec
lods
int3
adc
add
pop
push
cmp
pushf
and
push
aas
movq
mov
pop
lret
pop
dec
sarl
mov
adc
pop
push
inc
jo
je
js
stc
and
fs
xor
push
das
inc
scas
cs
cmp
xchg
mov
ja
popa
test
clc
nop
cltd
dec
add
jns
xchg
clc
in
add
inc
enter
pop
dec
je
orb
jmp
add
or
movzwl
cmp
je
cltd
leave
or
and
jge
mov
clc
dec
or
js
and
sbb
js
js
jl
cmc
lock
in
cmp
push
mov
push
das
jmp
dec
pop
mov
test
je
lahf
arpl
imulb
in
cld
adc
sar
dec
sbb
or
push
xor
pop
or
cmp
adc
adc
jg
inc
and
mov
jno
mov
dec
shrb
jmp
xor
sbb
or
call
dec
or
pop
add
aad
out
neg
or
mov
jge
pop
cmpb
sub
or
test
sub
sbb
cmp
cmp
sub
inc
pop
lret
rorb
enter
cmp
je
cmp
mov
push
cmp
jl
sbb
adc
test
xor
or
sti
loopne
adc
jne
movsb
out
add
sbb
test
mov
sub
in
cmp
les
jmp
call
aad
lock
pop
dec
stos
add
sbb
or
or
jmp
popa
adc
dec
and
jbe
icebp
inc
ljmp
add
sbb
push
cmp
pop
je
pop
cmp
or
les
cmp
call
xchg
pop
cmp
je
inc
mov
adc
sub
mov
icebp
adc
xchg
lret
add
cmp
inc
and
clc
xlat
or
sub
test
xchg
xchg
movsl
mull
adc
pop
dec
out
pop
dec
pop
in
daa
jg
pop
sub
xor
dec
in
leave
js
or
and
jmp
rorb
daa
cli
daa
sub
fdivrs
mov
push
mov
mull
add
inc
push
sar
and
in
add
xchg
push
scas
sbb
cmp
push
jb
neg
jecxz
add
rorl
jne
test
adc
and
or
add
stos
mov
pop
jg
dec
sbbl
scas
adc
dec
adc
shl
jb
add
cmp
jbe
inc
aad
orb
or
movl
cltd
movsl
xor
or
xchg
xchg
add
lock
mov
out
jecxz
push
xor
lea
addr16
adc
clc
mov
inc
loopne
sub
mov
stos
shrl
insb
scas
adc
int3
push
sub
mov
mov
inc
lret
sbb
inc
jecxz
xor
dec
or
dec
xor
sub
and
sbb
or
jmp
mov
pop
dec
xchg
lock
hlt
pop
dec
xchg
clc
je
cld
pop
inc
lea
or
add
dec
clc
or
or
mov
pop
fs
nop
movsb
sahf
xchg
cli
and
mov
or
sarb
daa
andb
ret
xchg
cld
icebp
shrb
js
push
push
data16
je
push
nop
mov
les
and
je
shll
xor
cmp
pusha
sub
add
dec
mov
inc
push
mov
rcrl
out
and
out
jle
mov
nop
movsl
sub
mov
and
mov
lea
xorb
or
and
dec
aam
fsubl
in
notl
sbb
cltd
adc
pop
dec
xchg
adc
mov
pop
dec
xchg
or
mov
pop
dec
xchg
add
xchg
cwtl
lret
adc
dec
cmp
mov
and
scas
test
adc
mov
mov
test
add
jbe
pop
cs
je
xchg
jns
mov
call
sbb
sub
add
iret
loope
roll
shlb
nop
pop
shl
inc
jns
int3
ret
adcl
jmp
sub
test
mov
push
test
rcll
nop
dec
jecxz
nop
adc
or
or
and
loope
adc
push
fisttps
fcomps
jle
sub
or
or
pop
sbb
push
mov
cmp
add
mov
cld
adc
and
test
mov
ret
jo
or
inc
jmp
sub
in
clc
sub
add
mov
inc
dec
or
sbb
and
or
and
test
fwait
mov
xor
jmp
cmp
xchg
jne
neg
jg
xor
mov
adc
or
jl
pop
mov
sub
and
jg
and
and
push
mov
outsl
push
sub
shrb
add
neg
dec
std
imull
ds
xchg
adc
cltd
and
inc
or
cmc
pop
pop
pop
sub
jmp
jle
shlb
test
and
repnz
add
jne
jmp
jmp
jmp
pusha
imul
ret
ret
inc
rcll
loopne
mov
jmp
push
movsb
cmpsb
stos
dec
hlt
xor
add
testl
add
xchg
cmp
inc
jne
mov
mov
jle
rolb
movsb
ss
je
test
cld
lret
test
ss
movups
xor
int
lea
sti
aad
jmp
rolb
xor
ret
or
pusha
sbb
inc
mov
inc
cmpsb
arpl
pop
pop
outsl
pop
mov
push
push
adc
popa
xor
and
inc
push
rclb
imul
jb
dec
lret
inc
movb
mov
jg
adc
and
add
enter
mov
jno
and
or
rol
incb
cmp
je
stos
testb
adc
jmp
adc
jae
sub
sub
sbb
popa
sbb
cmp
add
addb
sbb
push
gs
pop
call
ret
cmpl
ja
cwtd
imul
test
je
test
mov
mov
and
hlt
or
xor
dec
or
adc
sub
idiv
fs
cmp
setbe
lock
int
sarb
inc
or
fwait
call
sbb
subb
push
fmull
ret
lret
ss
ss
ffree
sub
loop
push
fcoms
sbb
add
sbb
add
cmp
jle
jo
ljmp
insb
push
mov
or
call
xchg
push
lds
bound
fsubrl
add
sub
xor
jmp
cmp
pop
clc
mov
pop
fnstsw
sahf
jne
push
andl
ret
and
adc
call
arpl
push
jne
rep
mov
negb
ret
inc
mov
movl
mov
pusha
and
and
and
sahf
aam
mov
jge
mov
adc
sbb
insl
out
xor
or
jbe
out
and
leave
dec
push
inc
clc
adc
cmp
xor
bound
push
adc
sbb
daa
push
push
push
jae
test
arpl
add
shl
arpl
push
orb
loopne
fidivrs
ret
pop
pop
xchg
inc
sbb
push
adc
push
mov
lock
and
jl
pop
push
int
cmp
hlt
lcall
rolb
xor
push
jae
pop
enter
mov
sbb
dec
mov
aas
mov
addr16
out
xchg
cld
outsl
push
cmp
xor
jge
mov
dec
into
mov
cld
jmp
decl
mov
call
enter
clc
roll
cld
movsl
pop
mov
jo
lcall
test
inc
ds
jns
xor
into
repnz
loopne
fimuls
jp
or
inc
sbb
subb
gs
lock
adc
mov
mov
xor
xchg
sahf
inc
fmul
push
les
cltd
xchg
scas
dec
mov
lea
push
and
jne
ljmp
pop
xchg
mov
mov
or
int3
sti
mov
inc
xchg
and
jo
dec
maxps
dec
and
scas
cmpsb
sub
shlb
in
sub
inc
adc
push
add
fidivrl
js
das
jne
jg
ficompl
cmp
imul
xor
lahf
mov
pop
mov
cmc
ja
inc
pop
lcall
inc
xchg
cmpb
daa
inc
mov
lea
andl
dec
or
pop
adc
testb
dec
int
mov
adc
mov
or
jb
cmp
inc
or
add
lock
and
inc
fisttpl
int3
jecxz
repnz
push
and
negb
jbe
xchg
jo
add
mov
jmp
add
add
or
xor
lock
or
mov
mov
lea
jbe
or
mov
jl
add
and
push
mov
ds
inc
outsl
xor
push
adc
ret
fs
and
loope
adc
mov
test
jns
imul
cmp
or
add
mov
cld
call
or
lret
add
imul
pop
les
lock
inc
es
ja
fwait
or
cmpsb
fldcw
lea
push
push
and
inc
and
inc
cmpl
or
je
cmp
push
sbb
cltd
nopl
adc
or
add
cld
test
repnz
icebp
mov
pop
mov
not
stos
adc
xorb
add
sbb
iret
adc
mov
shl
rolb
sbb
mov
xchg
and
dec
movsb
xchg
lods
and
aad
mov
or
test
mov
lret
inc
repnz
adc
add
mov
mov
test
pop
or
jge
adc
sub
push
mov
cltd
rcrb
push
call
rclb
cs
les
jmp
daa
adc
ret
das
mov
aam
sub
add
inc
icebp
xchg
pusha
jecxz
push
add
jbe
adc
adc
cld
rolb
push
dec
xorb
sbb
insl
mov
lds
mov
pop
lcall
out
mov
mov
cmpsl
adc
cmp
repnz
and
and
and
dec
mov
and
nop
mov
adc
loopne
mov
pop
mov
inc
pop
xchg
outsb
and
sbb
or
jne
adc
jge
xor
or
or
xchg
adc
loope
and
and
loopne
xchg
add
pop
mov
and
push
loope
testb
mov
xor
pop
jno
fisttps
ret
rclb
jb
pop
into
or
cmpl
int
pushl
or
or
cs
xchg
out
push
inc
cmp
xor
leave
andb
and
push
add
xchg
clc
xchg
jle
add
mov
jmp
je
fildl
daa
and
inc
fcoms
push
call
roll
adc
ficoml
lcall
daa
push
and
push
push
cltd
outsb
mov
hlt
mov
adc
or
push
les
cmc
sub
add
lea
mov
adc
test
sbb
lods
imul
add
jmp
inc
mov
mov
add
xor
daa
xchg
jl
test
push
or
jp
push
cmp
xor
je
mov
jmp
xor
js
or
or
pop
mov
cmp
push
jne
push
mov
pop
call
inc
popa
sub
push
xor
testl
sahf
xchg
and
mov
cmp
movsl
subl
shl
in
mov
push
movsb
xchg
xor
push
dec
add
addl
mov
cmp
mov
out
jl
out
hlt
jbe
testb
and
imul
icebp
mov
dec
jmp
sbb
fs
or
out
fcompl
inc
lahf
sub
in
dec
cld
addb
mov
into
adc
mov
and
subl
cwtl
ja
jne
pusha
fidivl
jne
add
add
add
jg
and
mov
pusha
pop
neg
sbb
testl
mov
mov
nop
mov
xor
pop
or
dec
cmp
aaa
lret
sbb
pop
add
pop
in
and
push
sub
mov
inc
or
inc
sahf
adc
jmp
out
xchg
xor
sub
clc
arpl
pushl
xchg
dec
jno
jge
mov
adc
sub
xchg
cmp
push
or
jle
or
inc
adc
pop
add
sub
mov
ret
test
dec
ljmp
jnp
out
jmp
pop
cmp
inc
adc
ret
or
sub
cmp
adc
jb
mov
jmp
int3
jle
sub
ds
xor
cld
jmp
nop
mov
adc
cs
stc
shll
dec
stos
call
adc
ret
mov
je
jb
adc
sub
xchg
add
jmp
inc
in
sub
pop
or
add
icebp
adc
dec
mov
into
and
sub
xchg
add
or
sub
mov
inc
dec
jb
and
pop
fsubs
dec
mov
test
dec
inc
out
pushf
mov
xchg
pop
jecxz
jmp
mov
pop
xor
add
rolb
pop
mov
push
mov
xchg
lret
and
shr
shl
lea
jg
sbb
inc
jne
call
orl
xor
push
lock
shl
shr
mov
dec
xor
pop
das
pop
scas
push
inc
lock
fcmovu
inc
pop
push
push
and
ret
shl
mov
ret
and
ret
pop
and
xchg
hlt
xchg
mov
and
in
cltd
mov
jp
cmc
fnstenv
add
test
xchg
mov
mov
and
je
shrl
nop
and
rcrb
push
and
adc
and
jne
stos
in
and
ret
repz
je
cmp
imul
inc
insb
xor
pop
cli
push
das
xor
call
cmp
sbb
adc
push
inc
and
inc
sub
mov
sbb
je
fiaddl
adc
add
mov
lods
or
icebp
pop
inc
pusha
aam
sbb
movsb
xor
add
outsl
push
inc
std
jnp
call
inc
mov
sbb
cmp
outsb
adc
mov
sbb
test
and
jmp
fisubrs
adc
xchg
imulb
les
xlat
inc
pop
pop
shlb
or
pushf
push
dec
shr
cwtl
cs
nop
imulb
or
push
test
inc
iret
push
das
push
add
es
repnz
push
idivl
aas
lret
cmpsb
incb
cmpsb
mov
mov
add
mov
es
xchg
pop
pop
iret
and
pop
mov
pop
or
jbe
push
lock
and
inc
adc
test
sub
test
mov
or
dec
mov
mov
lods
or
add
lret
into
adc
pusha
rorl
sbb
xlat
xchg
ret
daa
je
ret
jbe
fisubrs
xor
mov
aas
dec
dec
add
movswl
inc
or
sub
insl
es
adc
adc
or
adc
add
push
add
leave
incl
inc
and
or
inc
or
adc
das
cmp
in
mov
sub
orl
dec
lahf
sbb
and
mov
fsub
push
aad
outsb
jo
je
mov
or
or
push
out
or
or
aam
or
adc
or
mov
add
xor
xchg
in
stc
outsb
add
out
sbb
cmpsb
in
push
roll
push
or
out
lea
pop
ljmp
adc
dec
stos
out
paddusb
daa
and
fs
adc
or
sbb
pop
inc
std
and
sub
inc
jge
jge
sbb
lcall
or
push
inc
xchg
dec
add
push
dec
add
inc
mov
insl
dec
inc
loop
dec
shrl
mov
mov
andb
retw
fwait
pop
ljmp
xor
jmp
scas
push
sub
push
sbb
inc
mov
and
xor
sub
cmp
popa
jl
jp
add
xchg
es
scas
dec
fists
aad
cs
xor
scas
lods
mov
movsl
dec
sti
enter
je
jg
and
inc
cld
inc
mov
subl
xor
dec
jp
adc
jmp
sbb
or
sbb
or
pop
xor
sbb
jl
jns
sub
and
cltd
fldenv
or
cmp
pop
jge
cmp
or
das
mov
adc
pop
or
push
pop
and
negb
adc
ret
jmp
mov
clc
or
dec
add
out
or
int3
pop
or
pop
jmp
push
fdivl
push
popf
mov
aad
add
mov
stos
dec
inc
scas
incb
hlt
xor
std
or
imul
jge
push
push
dec
adc
adc
push
enter
dec
or
imul
jno
mov
cmp
rclb
and
out
and
jmp
inc
mov
cs
insl
and
mov
sti
sub
xor
stos
inc
leave
stc
add
inc
add
jb
cmp
dec
pmaxsw
dec
dec
or
push
je
mov
inc
dec
pop
cmpsb
mov
dec
test
mov
xchg
push
fwait
fwait
pop
or
cld
int
push
sub
rclb
push
std
mull
mov
sbb
inc
icebp
jnp
jge
sbb
push
jl
sbb
add
push
shr
and
pop
pusha
fmuls
leave
jne
hlt
div
cmp
lods
cwtl
xchg
or
add
jb
cmp
insb
or
push
jbe
mov
and
adc
inc
or
ficoml
in
rcrl
cmc
sbb
adc
adc
movsb
mov
adc
jmp
cltd
adcl
lock
mov
scas
test
mov
add
mov
pop
jae
jge
idivl
aad
nop
add
popf
stc
sbb
jnp
cmp
xchg
sub
popa
jecxz
xor
call
popl
data16
sbb
add
mov
xlat
push
jmp
loop
push
jle
es
add
inc
jmp
sbb
movsl
pop
rolb
jne,pn
inc
jg
push
lea
icebp
popa
std
jg
out
iret
jle
jae
cmp
mov
dec
mov
sub
es
inc
mov
sbb
loop
push
and
mov
inc
orb
test
xor
and
mov
dec
pusha
loop
dec
dec
dec
inc
aas
adc
pop
outsl
adc
jge
mov
sub
dec
lock
xchg
scas
sbbl
and
ds
sub
and
les
and
inc
or
mov
scas
std
xchg
out
jno
fucomip
clc
movsb
out
in
jl
jl
dec
jge
call
out
push
sub
xlat
and
jg
es
mov
pop
jnp
jmp
xchg
xchg
sbb
inc
push
or
out
mov
imul
pop
jmp
jbe
mov
mov
dec
out
sub
and
out
and
pop
loopne
xchg
xor
leave
popf
sbbb
je
or
inc
cmc
or
sub
into
add
xchg
pop
sti
jo
out
arpl
pop
mov
cld
dec
nop
pop
inc
jb
push
adc
mov
arpl
adc
push
cmp
pop
fwait
inc
fisttpl
and
jmp
pop
inc
mov
push
nop
xor
mov
fisttpl
ja
into
pop
sbb
or
xlat
out
cmp
or
std
ret
push
dec
xchg
add
push
inc
push
inc
or
mov
fistl
js
mov
sub
xchg
sbbl
sbb
sbb
sbb
les
pop
adc
cwtl
cmc
shll
pop
enter
enter
sub
mov
pop
dec
jne
push
push
pop
pop
mov
ret
fisttpl
jmp
push
xlat
lahf
add
je
test
mov
cmp
add
push
inc
inc
dec
xchg
push
cli
pop
ds
mov
fcoml
adc
shl
fcmovnu
jecxz
arpl
and
daa
cld
dec
jae
jae
into
dec
adc
jae
ljmp
sbbb
pop
xchg
lea
mov
and
cmp
jne
out
sbb
jbe
push
push
adc
loop
push
cmp
push
dec
pop
imul
cmpw
lea
les
jg
adc
pop
add
imulb
rcl
pop
dec
sbb
in
das
roll
push
xor
adc
and
fimull
and
jne
mov
xchg
lods
loopne
add
pop
lea
xor
xchg
dec
mov
inc
inc
test
lods
push
adc
mov
push
dec
push
jae
or
pop
fiadds
cmp
xorb
pop
sub
imul
lea
cs
shrl
mov
shlb
stos
int
mov
mov
ficomps
pop
in
nop
mov
jmp
scas
lods
sub
loope
pop
jmp
sbb
pop
nop
jmp
fwait
rcrb
orl
lds
pop
mov
sub
ljmp
xchg
aam
pshufw
add
inc
adc
add
add
jnp
push
cmp
xchg
xor
cld
mov
inc
cmc
sub
mov
sbb
mov
sub
push
add
jb
stc
push
pop
cwtl
cmpl
add
xor
pop
push
inc
sub
ficoms
adc
cmp
sbb
add
or
popf
movsl
push
xchg
and
xchg
add
movsb
fwait
leave
cmpsl
jl
daa
notl
pop
push
bound
push
daa
dec
dec
push
push
sub
mov
nop
fmull
hlt
jl
gs
cmp
mov
jge
movsb
frstor
and
iret
sbb
lret
aam
call
adc
or
cmpb
sbb
mov
cs
mov
and
hlt
adc
cltd
gs
or
and
out
lods
iret
fs
xchg
inc
call
ja
out
mov
push
aam
jo
or
cmp
pushf
push
ja
mov
call
inc
mov
rorl
cmpsb
or
cwtl
push
push
call
ret
enter
not
inc
cmp
jae
mov
test
pop
insl
testb
adc
and
xchg
pop
es
xchg
mov
dec
xchg
ret
push
pop
adc
das
or
pop
jmp
add
push
andl
adc
xor
adc
cmp
sbbb
adc
add
and
cmp
cli
je
or
pop
push
add
push
call
pop
movhps
or
push
je
rolb
clc
jmp
sbb
mov
push
push
push
dec
ljmp
inc
arpl
jl
cmp
test
push
cmp
sub
sarl
je
push
xchg
mov
lods
push
cmp
dec
outsb
mov
aam
or
pop
cmp
pop
nop
test
cmp
push
dec
pop
hlt
sbb
rclb
pushf
sbb
mov
xchg
in
fistl
or
push
adc
insb
and
rclb
push
push
in
jl
sti
and
adc
push
lock
cmp
cwtl
and
pop
add
push
mov
rorb
xchg
mov
xchg
add
int3
push
fmuls
loopne
in
cld
sbb
jmp
sub
xor
or
stos
sub
dec
out
sbb
aas
je
or
push
movsb
or
inc
inc
cmp
mov
lret
adc
in
or
adc
jne
shrl
cmc
cli
inc
cltd
pushf
movb
stc
and
ja
movsb
ffreep
das
mov
cwtl
inc
inc
shrb
jmp
mov
in
add
mov
lock
add
lret
push
mov
jmp
je
or
inc
and
sub
ja
push
mov
mov
repnz
orb
ss
mov
push
inc
jnp
xchg
js
jmp
rcrb
stos
sbb
into
mov
xor
cld
stos
lea
inc
mov
in
inc
imul
das
jmp
clc
addr16
aaa
sbb
sub
adc
pop
and
clc
test
js
sbb
inc
adc
pop
outsb
cltd
jo
insb
test
cld
adc
add
xor
jne
dec
roll
push
xchg
push
mov
iret
pushf
xchg
and
lods
mov
and
or
push
ret
xor
clc
mov
dec
test
inc
aam
andw
lret
inc
and
add
ret
and
mov
int
cmp
pop
das
jae
iret
xor
jmp
and
and
subl
scas
cmpsb
push
jge
ds
add
hlt
test
sub
jmp
mov
popf
or
dec
lds
repnz
or
cmp
lods
fs
mov
jmp
test
mov
int3
add
mov
add
pop
addl
call
pop
out
imul
fwait
cmp
mov
dec
push
clc
imul
pop
adc
mov
add
add
mov
cwtl
dec
mov
push
mov
fnsave
mov
push
mov
and
hlt
mov
and
pop
add
test
xchg
pop
inc
pop
push
push
or
cvtpi2ps
add
jecxz
repnz
inc
cld
inc
sbb
jns
xor
add
js
pop
je
mov
ds
std
imul
push
add
aam
and
cmp
iret
and
mov
pop
sbb
pop
idivl
mov
push
cmp
test
lock
push
ds
sub
mov
je
pop
mov
loopne
xor
push
mov
cmc
jmp
dec
dec
and
test
add
xor
movsb
and
mov
or
add
or
and
sbb
xchg
jnp
push
pusha
adc
in
xor
je,pt
leave
or
call
mov
and
stc
in
repnz
and
sub
cmpsl
cmp
push
lahf
or
push
rcrb
je
sbb
jg
pop
jl
das
jae
mov
ds
sbb
push
cli
jmp
mov
or
js
add
out
xchg
mov
test
add
mov
or
jne
adc
jns
sub
sub
xor
sbb
and
cltd
or
push
push
push
sarb
cmp
add
xor
rcl
mov
movsl
sti
cmp
push
aam
clc
xorb
sbb
mov
mov
cmpb
xorb
cmp
jne
stos
or
dec
inc
ret
and
add
inc
aaa
cltd
fdivs
inc
cld
sub
ret
shll
dec
adc
jmp
and
or
testb
add
or
and
add
xchg
loopne
iret
push
fs
xor
popf
js
imul
sbb
mov
lcall
xor
jo
xchg
or
push
jle
inc
clc
adc
add
je
in
call
decl
xor
push
sbb
enter
dec
mov
dec
pop
sub
and
call
lods
add
pop
cmpsb
sub
mov
data16
aam
add
xchg
sub
or
pushf
inc
loopne
fs
or
dec
je
stos
and
cmp
rorb
cmovns
push
inc
adc
pop
les
cltd
call
insl
cmp
jg
js
mov
ret
pop
or
jle
sub
cwtl
lock
call
ds
and
mov
fisttpll
jb
xor
insl
adc
and
push
outsl
inc
insl
mov
sub
nop
aas
fwait
push
and
pop
pop
repnz
push
sbb
inc
or
sbb
mov
andl
add
add
ds
pop
enter
sar
or
inc
mov
sbbb
or
or
std
push
ds
mov
mov
sbbb
jg
mov
repnz
ss
sbb
or
fmuls
mov
jnp
icebp
push
adc
xchg
bound
imul
aad
mov
outsb
kmovd
movsb
icebp
and
je
xor
mov
jne
setl
mov
aas
push
pop
fwait
insb
jno
mov
movsb
push
andl
sbb
adc
add
loope
jl
sbb
lea
or
orb
xchg
push
ret
cmp
pop
add
jmp
cmpsl
ficompl
mov
les
inc
aam
sub
sbb
add
push
sarl
movsbl
jp,pt
imul
loopne
lea
test
fildl
or
mov
and
jg
and
sbb
dec
pop
sbb
adc
jbe
inc
test
or
or
mov
es
inc
add
shr
lea
add
xlat
and
or
in
in
cmp
loopne
rcll
push
mov
mov
dec
push
adc
frstor
mov
sub
sbb
lea
sti
sar
dec
andl
shlb
sub
cwtl
dec
in
mov
push
shlb
clc
dec
pop
jo
lret
lret
insb
test
sti
rolb
jbe
ficoms
push
adc
jae
mov
popa
shlb
push
push
and
mov
inc
xchg
lods
mov
add
shll
dec
or
push
leave
pop
or
mov
mov
stc
sub
or
dec
ss
push
repz
or
add
jne
mov
sti
jmp
cwtl
mov
jo
jae
cmpb
mov
mov
shll
out
or
mov
mov
sbb
rorb
test
es
pop
add
and
xchg
test
dec
push
inc
lock
cld
incl
sub
and
or
mov
test
mov
psraw
add
cmpsb
pop
aam
in
inc
inc
push
mov
inc
xor
sub
jbe
andl
decb
xchg
or
mov
jns
sti
inc
inc
pusha
add
scas
adc
js
push
insb
cmp
jo
mov
adc
adc
sti
shrl
cmc
mov
data16
adcb
sub
and
pop
sti
pusha
lret
call
xor
xor
add
sbb
mov
adc
add
dec
mov
lods
lahf
sbb
push
adc
rcrl
xor
push
sarb
mov
mov
adc
jae
imul
pop
jge
ret
shr
push
sub
rorb
enter
imul
inc
push
fdivrs
dec
filds
sub
loop
and
decb
pop
iret
loopne
ret
dec
adc
loop
xor
pop
adc
mov
cmc
fmuls
daa
adc
out
xor
pop
dec
jae
stc
jnp
sarl
in
cmp
mov
xchg
out
pop
push
call
test
aas
adc
mov
pop
pop
inc
mov
mov
xchg
addr16
insl
sub
das
cs
xchg
cld
pop
cli
mov
nop
in
out
inc
movsl
mov
aaa
imul
add
fisubrs
or
mov
sbb
test
add
cmp
xlat
je
loop
cwtl
lret
lcall
sub
cwtl
ja
dec
mov
jne
dec
addr16
and
pop
test
jl
add
testl
subb
jl
sar
dec
addl
enter
dec
negl
mov
and
adc
popf
jp
hlt
in
and
or
pcmpeqw
in
and
jmp
xor
movsb
push
sub
dec
mov
ficoml
cltd
sub
and
lcall
in
lcall
pushf
dec
stos
inc
jl
sub
das
ret
and
decb
lds
loope
imul
or
or
sbb
das
dec
sub
or
aas
or
mov
mov
sbb
or
imul
mov
lret
cld
push
mov
jp
lock
xchg
inc
add
adc
cld
pop
mov
jns
and
bound
cmp
ficomps
pop
dec
insb
fbld
add
or
lods
pop
mov
jno
cmc
push
gs
add
and
cmp
je
mov
orb
les
loope
mov
inc
xor
xor
mov
outsl
push
push
daa
add
dec
pop
lods
mov
test
sbb
int
das
ret
jge
jno
pop
and
mov
lods
arpl
inc
push
pop
loopne
push
shll
leave
inc
and
xchg
push
loopne
adc
popa
cmp
sbbb
xor
inc
scas
dec
lock
shr
xchg
pop
push
sti
xchg
pop
out
push
jns
push
adc
xchg
jne
xchg
adc
cmp
ja
cmpsb
inc
lock
dec
repz
mov
aam
mov
movl
push
out
clc
mov
sub
adcl
or
test
add
pop
dec
je
or
fimull
nop
push
fs
inc
xchg
xchg
in
mov
xor
rorl
je
mov
jne
or
mov
shr
mov
push
jns
pop
ret
mov
mov
xchg
push
adc
lea
sub
adc
pop
out
push
ljmp
dec
cld
dec
cmp
cmp
daa
insl
mov
push
mov
mov
daa
mov
outsb
mov
mov
lcall
jbe
push
dec
xor
mov
in
add
in
pop
mov
fs
loop
dec
dec
adc
aas
and
mov
jno
in
push
dec
fldenv
pop
jg
cwtl
xor
sub
push
call
mov
adc
or
lret
xor
hlt
jmp
int3
pop
pop
inc
adc
orb
cmp
push
jne
loop
mov
in
push
loope
inc
out
mov
jo
dec
adc
dec
sub
push
or
mov
lret
js
sub
je
mov
insb
inc
and
clc
and
inc
inc
scas
outsb
sbb
jge
add
mov
movsb
dec
outsb
sub
xor
es
fcomps
adc
rorb
add
cmp
jne,pn
call
mov
je
and
push
jne
xor
lea
jp
dec
push
ja
aam
jp
ja
jno
pusha
repz
popl
out
inc
or
cmp
jnp
dec
push
jnp
and
cmp
push
bound
sbb
jecxz
inc
adc
cmp
test
sub
inc
jns
bound
mov
or
cld
cmc
sarb
jne
cld
add
fldl
jbe
dec
or
push
jge
add
test
ret
cmp
push
fsubp
push
and
les
fdivrl
sbb
pop
sub
test
add
jae
and
or
push
hlt
mov
shrl
push
sbb
xor
jo
sub
inc
adc
or
jmp
or
mov
push
push
jmp
inc
xor
sbb
mov
mov
adc
sub
mov
je
sti
daa
imul
test
je
bound
std
test
mov
xchg
sbb
iret
jnp
hlt
sub
adc
xor
not
and
and
out
shl
or
ljmp
xor
divl
int
movhps
xor
sti
popl
iret
add
adc
pop
pop
call
ret
je
inc
jmp
test
add
jg
ficoml
add
sti
push
xor
adc
js
mov
shll
dec
popa
mov
dec
or
sub
cli
add
mov
fmul
adc
or
daa
lret
inc
fwait
cmovne
in
add
and
and
jmp
sbb
out
leave
add
or
orb
sysret
lret
cmovo
add
outsl
ljmp
jns
insb
pop
jecxz
hlt
out
sbb
ljmp
in
or
inc
adc
fldl
ds
call
sbb
adcb
testb
add
andl
adc
mov
nop
add
sbb
add
loopne
loope
sbb
ja
push
push
add
mov
push
cmpb
push
mov
in
addr16
scas
push
or
negl
and
insb
pop
orb
js
bound
sub
arpl
dec
and
cmp
add
pop
fldl
int
imul
movsb
mov
push
dec
push
lock
out
pop
mov
mov
or
pop
stos
add
push
call
sub
jmp
cs
ljmp
in
jno
sbb
jmp
setp
jl
inc
adc
shll
inc
and
or
enter
and
adc
bound
xor
fldl
fcompl
cmp
add
shlb
add
jmp
pop
hlt
mov
out
push
outsb
and
xor
sbb
sub
inc
sbb
or
jne
inc
test
je
ret
sub
pop
xchg
lret
cwtl
data16
outsb
inc
xchg
xchg
jno
inc
push
and
cmp
in
lods
mov
lea
cmp
sti
lds
lds
jmp
cmp
mov
cmc
rorb
inc
dec
mov
cld
aam
sub
jge
sub
test
dec
les
mov
adc
dec
jne
mov
sbb
sbb
jmp
xor
xor
aas
xor
or
std
into
and
xchg
adc
dec
mov
or
movsl
dec
pop
out
mov
pop
cmp
push
mov
mov
in
mov
fs
notl
das
adc
aam
out
enter
sbb
xchg
or
sbb
in
gs
cld
ret
or
adc
cmpsl
cmp
and
add
clc
mov
call
push
cmp
inc
and
pop
leave
push
or
add
cltd
inc
jg
aad
rorl
push
in
xor
or
jne
mov
sub
inc
jl
ja
lds
mov
add
iret
adc
femms
pop
mov
stc
test
add
clc
insb
push
jne
jae
mov
or
pop
cld
mov
push
add
cmp
lds
add
cmp
shl
add
dec
test
sub
mov
mov
jg
dec
decb
mov
lret
adc
or
sub
mov
fsubl
pusha
in
pop
int3
movsb
stc
imul
idivl
mov
je
pusha
outsb
pop
dec
pop
mov
sub
push
mov
or
inc
nop
nop
mov
pop
pop
add
and
dec
adc
xchg
dec
and
out
pop
popa
adc
shll
mov
or
push
add
out
mov
push
out
loop
inc
pop
mov
std
or
fiaddl
daa
xchg
push
inc
loopne
rclb
lds
and
lock
test
mov
dec
pop
inc
fwait
cmpsb
jge
cmp
sbb
loop
movsl
sti
pop
fistpll
and
or
or
inc
mov
jg
mov
or
sub
pop
leave
fwait
leave
or
adc
mov
sub
adc
inc
call
dec
sbb
sbb
pop
pop
inc
xchg
fadds
xorl
mov
xchg
pop
add
or
enter
lcall
sbb
call
mov
scas
mov
cmp
mov
aas
stc
sarb
mov
cmpl
ret
jmp
fs
lahf
mov
sbb
jne
pop
gs
je
pop
inc
mov
fidivl
fildll
mov
mov
cmc
jmp
imul
mov
add
rorl
popf
cmp
sarl
test
jne
pop
lea
std
adc
jg
cmp
cmpsl
popl
add
cmp
sub
stc
gs
pop
inc
xchg
dec
in
inc
ja
in
cmp
idiv
jmp
mov
sbb
test
mov
cmpsb
mov
xlat
push
out
je
cmc
and
push
and
add
sub
sbb
cmpb
daa
lock
imul
xor
setg
testl
movl
push
push
cmp
nop
mov
xchg
cmp
push
jns
or
push
xchg
or
inc
jb
add
lretw
in
mov
stc
gs
es
cmp
adc
or
and
or
pop
ss
jo
push
or
enter
and
aam
pop
push
es
and
dec
inc
daa
cmp
pop
add
jns
xor
fldt
sub
and
mov
pop
testl
push
sti
fisubl
das
or
push
aad
sub
outsl
test
or
push
push
add
ret
lahf
sbb
xor
lret
or
mov
push
shll
andb
jmp
push
pop
movsl
or
sbb
push
adc
add
add
or
lds
test
xchg
add
jne
movb
xor
and
leave
or
jle
sbbl
xor
clc
xchg
sbb
mov
rcrb
cli
add
inc
or
jmp
adc
into
or
ret
jl
mov
push
and
out
push
xor
and
sti
mov
and
mov
pop
and
mov
and
sub
rep
jmp
rorb
cmp
adc
sub
test
setl
mov
add
add
adc
jge
xor
or
adc
stc
and
push
out
and
inc
pop
sbb
jmp
lret
adc
adc
sub
add
fs
andb
or
jnp
clc
call
lods
sarl
adc
inc
xor
or
jmp
stos
loop
outsl
in
sbb
push
loop
jmp
dec
adc
mov
into
or
cs
sbb
dec
xor
dec
xor
test
and
pop
mov
push
mov
cmp
mov
inc
pop
xor
data16
pop
xorl
fldcw
in
jne
imul
push
add
jmp
mov
cmpl
cmc
add
js
or
sbb
add
movzbl
dec
push
scas
inc
inc
sbb
stos
mov
pop
shlb
je
jmp
movsb
sbb
push
and
pop
call
and
sbb
or
push
enter
mov
jl
or
icebp
inc
stos
loopne
cli
in
pushf
cmp
mov
push
jne
jle
sarb
mov
ljmp
or
xor
jge
out
enter
cmp
sarb
test
int
loopne
cmpsb
xchg
sarl
pop
inc
stc
or
jo
or
mov
fs
pop
inc
and
enter
lock
mov
cld
call
sbb
jmp
lret
bound
decb
stc
ljmp
jnp
stos
ja
test
iret
bound
hlt
jle
or
js
dec
adcb
jle
sub
daa
and
flds
add
xchg
sbb
cmp
jg,pt
push
jnp
lret
adcb
cwtl
cli
ret
and
sub
or
adc
addl
std
mov
ret
push
adc
imul
imulb
jp
mov
js
adc
push
lock
inc
pop
cmpsl
jmp
aad
or
cmp
jp
mov
sbb
cmpsb
int
mov
lcall
and
mov
jae
test
jl
repz
cmp
sbb
add
hlt
push
test
cmpb
sub
mov
add
imul
ret
lcall
jmp
aam
fnsave
and
mov
lods
lods
ret
mov
pusha
push
jo
mov
pop
add
testb
ret
bts
dec
dec
mov
push
add
sahf
or
ja
dec
cmp
mov
lods
popf
insb
add
or
push
pop
jae
dec
jne
hlt
dec
mov
fdivrs
ja
inc
adc
mov
xchg
movsl
or
push
xor
pcmpgtd
pop
test
dec
mov
das
movsl
ljmp
shll
cmp
cmpsb
jmp
shlb
clc
or
js
rcrb
jno
dec
dec
add
rorb
and
xchg
sbb
inc
dec
test
dec
ljmp
pop
repz
sub
dec
and
push
call
jle
aad
je
outsl
rcll
ljmp
fnstenv
sub
sbb
push
xchg
adc
adc
rcrl
pop
push
inc
leave
ja
sbbl
mov
mov
xchg
dec
jnp
mov
enter
cmp
loopne
pop
cli
cmp
adc
pop
lods
imul
mov
sarl
cmp
call
bnd
dec
fs
daa
sub
loop
scas
mov
jmp
iret
xchg
jg
jb
js
mov
addr16
mov
cmpb
push
push
add
cmp
mull
leave
xchg
inc
adc
pop
int3
adc
aam
je
call
cmp
aam
lock
andl
adc
rorl
cmp
in
ss
xchg
gs
clc
loop
inc
inc
pop
test
shlb
jmp
sub
pusha
pushf
call
and
cld
ret
ja
shlb
xor
xor
adc
push
mov
xchg
pop
mov
adc
sub
adc
sti
inc
sbb
adc
nopl
pop
dec
adc
push
addr16
les
sub
loopne
mov
sub
mov
incb
push
faddp
xor
cmpsb
mov
xchg
cmp
push
push
add
call
mov
mov
jle
adc
cmp
inc
push
addr16
nop
pusha
jmp
cwtl
add
ss
iret
push
sub
adc
push
sbb
push
lds
sbb
lea
or
and
repz
sbb
add
test
xchg
dec
dec
jmp
adc
push
jecxz
stc
xchg
stos
adc
dec
add
adc
stos
or
pushl
imul
sbb
jbe
test
xchg
leave
loop
jns
add
test
jl
ret
and
arpl
lret
loop
cmc
mov
pop
imul
mov
xchg
call
je
ror
fstpl
leave
pop
jmp
xchg
add
xor
pop
inc
pop
pop
inc
add
pop
fidivl
enter
inc
pop
sbb
bound
dec
and
xor
popa
dec
xor
mov
test
inc
or
add
test
mov
enter
roll
mov
or
and
mov
sub
inc
getsec
mov
or
fiadds
xlat
mov
test
push
std
adcb
mov
mov
imul
ljmp
shll
lock
or
roll
sbb
adc
imul
add
push
and
mov
adc
dec
addl
cmp
pop
pop
mov
mov
fs
js
pop
push
sarl
mov
stc
subb
jo
push
and
test
sub
int3
inc
or
or
mov
or
pop
jp
rorb
cmp
inc
mov
lret
cmc
mov
push
notl
movsl
call
ficomps
push
adc
inc
inc
clc
lds
jecxz
mov
adc
push
xchg
or
cmpb
add
xchg
nop
lret
xchg
or
and
inc
repnz
mov
outsl
xchg
or
sti
or
in
loopne
hlt
sbb
add
rclb
pop
mov
jb
xchg
pop
mov
hlt
jae
idivl
mov
inc
pop
rolb
jmp
cmpb
pop
push
sub
arpl
or
imul
cmp
jmp
xorb
add
loop
in
xchg
jl
cli
adc
mov
jmp
popf
inc
repnz
and
and
or
ja
xor
icebp
jmp
fstpt
testl
lds
es
roll
cmpsl
test
mov
xor
inc
mov
ljmp
orl
js
inc
add
in
mov
hlt
lahf
and
adc
or
in
outsb
sbbb
je
adc
adc
or
ret
shlb
nop
push
out
add
testl
jbe
xor
loopne
or
subb
outsw
xor
push
or
sub
inc
fs
bound
mov
packuswb
xchg
or
jo
sbbb
arpl
dec
cs
add
pop
push
or
sub
test
add
jp
adc
lea
ss
mov
or
popa
sub
xor
cmpsl
push
aaa
call
sbb
das
leave
cmp
dec
jmp
dec
popf
jle
jp
or
call
push
inc
pop
and
fmull
cwtl
adc
sub
inc
pop
inc
jo
mov
mov
sub
pop
pop
and
movsl
inc
lea
mov
sub
outsb
enter
add
or
in
arpl
shlb
or
sbb
sub
gs
push
lret
popa
stos
sub
or
pop
sub
sub
dec
lods
cvtps2pi
cmpsl
and
fcom
adc
and
and
jb
lea
testb
adc
es
push
sub
enter
dec
cmp
pusha
stos
adc
cmpsb
mov
movsb
push
test
decl
mov
ljmp
lahf
sub
mov
jg
testl
adc
je
xor
stc
cmp
cmpsl
xchg
cli
aas
dec
sub
jmp
or
and
bound
mov
aas
pop
out
in
adc
push
or
and
cmpsb
pop
and
pushw
pop
or
add
adc
push
push
sti
xor
je
xchg
loope
mov
je
adc
sub
xor
fsubrs
jmp
cmp
cmp
push
verw
pop
jmp
inc
or
mov
iret
adc
adc
lds
pushf
fisubrs
pusha
cmpsb
out
je
pop
jnp
inc
pop
ljmp
cmpsl
and
mov
lret
dec
pop
clc
pop
sbb
daa
jbe
lahf
cmp
and
inc
cmp
jae
add
shr
ret
adc
and
rolb
inc
mov
in
mov
push
outsb
jg
pushf
inc
ds
jne
xor
mov
loope
fwait
movsb
in
cltd
mov
add
test
pop
ret
mov
and
dec
inc
out
andl
push
inc
cmp
cltd
inc
inc
je
and
int
xor
sbb
push
lret
pop
xor
sbb
stc
pusha
add
dec
or
test
je
mov
jne
push
or
xchg
dec
inc
xor
xor
arpl
add
cs
fsts
fwait
jge
and
ret
xor
xor
aam
adc
scas
loope
xor
mov
sahf
aam
mov
test
dec
push
push
cmp
lret
jg
shl
pop
jecxz
jb
xchg
mov
andl
cmpsb
pusha
sbb
adc
mov
lret
jb
dec
orb
sbb
out
cmpsb
cmp
dec
jb
add
leave
jmp
jne,pt
xchg
xchg
push
pop
in
nop
aaa
sub
aad
fs
xchg
push
mov
xchg
push
faddl
pop
call
mov
and
add
lret
push
ss
and
aam
pop
test
outsl
jne
add
push
add
mov
inc
movsl
pusha
faddl
fsubr
adc
enter
sbb
cltd
add
adc
in
scas
lock
and
in
jb
jmp
call
add
fcompl
repz
inc
roll
mov
jmp
mov
xor
jo
cmp
jbe
or
insb
pop
shl
stos
add
cmp
rol
jg
sub
cld
shr
je
aaa
push
insb
loope
inc
add
inc
in
fimull
fsubp
pop
add
and
add
je
neg
mov
inc
lods
jmp
xor
into
test
pop
jne
sub
rorb
xchg
xchg
sub
imul
mov
adc
repz
bound
xor
out
pop
or
pop
aas
es
ljmp
and
or
or
push
xchg
test
adc
sbb
mov
data16
push
push
enter
lahf
pop
out
adc
sub
xchg
mov
pusha
imull
inc
repnz
mov
test
sub
pop
xor
add
leave
mov
pop
data16
sbb
mov
lcall
lods
clc
in
mov
jbe
push
jle
repnz
sahf
pop
int
idivb
inc
xor
pop
xchg
push
inc
dec
ret
hlt
jg
jae
js,pt
movsl
or
dec
rol
call
lods
sbb
roll
dec
std
ret
and
mov
mov
sub
mov
repz
scas
popa
add
xor
cmpsb
and
add
popa
cmp
sub
jb
add
test
cwtl
lock
out
movsl
jl
out
push
aad
xor
or
test
jle
dec
push
cltd
cmc
mov
adc
test
notb
sarl
loopne
mov
xorl
nop
dec
out
lea
jge
and
add
je
imul
hlt
cmp
ficoml
xchg
sbb
aad
pop
mov
pop
xor
lds
and
stc
sub
out
fcompl
call
cmp
sub
add
push
adc
popa
jmp
mov
and
sbb
or
pop
mov
sbb
pushl
mov
or
imul
and
daa
push
add
fwait
push
jne
adcl
das
mov
inc
or
rcrb
push
lea
xchg
inc
sbb
pop
cmp
mov
mov
sub
test
pop
xor
dec
es
cmp
outsb
or
dec
or
jne
cltd
dec
mov
and
mov
das
jmp
jp
call
fimuls
mov
movsl
fdivr
dec
add
imul
xor
rorb
dec
sbb
add
mov
sub
test
adc
dec
stos
adc
cs
cwtl
jns
inc
sub
sbb
cwtl
decl
loop
outsl
ss
jne
or
adc
cmp
or
adc
fcomip
mov
mov
mov
sbb
test
mov
sub
test
out
inc
mov
insl
dec
je
insb
fucomp
inc
mov
lods
ret
xor
add
push
cmp
and
mov
cmp
mov
pop
mov
pop
and
inc
dec
cmp
push
ss
out
jb
cmpl
dec
stos
icebp
pop
leave
repz
orb
mov
in
loopne
sub
int
jle
pop
push
ljmp
cld
es
clc
inc
ret
dec
leave
dec
mov
sbb
cmp
cmp
gs
xor
sahf
fstp
aam
lret
push
call
dec
incl
xchg
pop
cwtl
inc
push
adc
pop
add
or
mov
sbb
pop
jnp
aas
es
ret
roll
neg
into
mov
iret
jmp
insl
aas
enter
sbb
sub
mov
pop
mov
les
outsb
inc
dec
clc
push
lds
rolb
loope
or
sarb
sti
pop
mov
sbb
add
lret
xor
arpl
adc
add
and
lock
xor
sub
fs
sub
lds
sbb
gs
xor
inc
pop
movb
or
data16
pop
fstl
pushfw
and
rcll
or
ret
je
inc
and
mov
mov
inc
mov
inc
xor
dec
jne
adc
mov
jmp
aam
movsb
shr
es
add
push
js
rorb
mov
je
hlt
push
xor
loope
pushf
mov
pop
pop
xchg
pop
sti
sub
jg
inc
xor
fstpt
mov
pop
jb
js
pusha
inc
and
cmpl
into
sti
mov
daa
adc
add
jne
dec
jp
das
cmp
stc
sarl
push
jg
ja
cmp
sub
ss
xor
clc
mov
test
or
jmp
movsb
adc
mov
jge
jmp
cwtl
add
push
jae
or
push
nop
cld
and
orl
mov
enter
inc
jmp
call
and
pop
or
mov
or
jbe
cmp
aas
lahf
enter
jno
and
jmp
sub
mov
or
and
xor
clc
sbb
sbb
movsb
repnz
das
adc
or
loopne
cmp
jne
inc
adc
mov
je
or
add
sbb
or
mov
mov
mov
call
jle
mov
iret
sti
pavgb
je
testb
mov
pop
inc
xchg
loopne
jl
jmp
aas
mov
mov
and
out
inc
mov
callw
pop
cmp
mov
cmc
lock
sbb
mov
sahf
clc
in
cltd
out
or
cli
xor
push
cmp
jno
mov
ljmp
cmovne
cs
dec
sub
popf
jne
xor
test
dec
jmp
es
and
sbb
sub
and
sub
mov
or
dec
pop
inc
xchg
std
xlat
out
ret
fiaddl
popf
xchg
cwtl
call
loopne
jne
cli
add
movsb
adc
xor
inc
das
lods
cwtl
leave
ret
std
mov
call
or
out
sub
add
adc
icebp
pop
jge
out
cmc
fld
outsl
push
std
clc
faddp
push
cli
fucom
jp
and
add
je
loopne
cmp
jae
and
nop
inc
jmp
icebp
bound
bnd
xchg
imul
inc
or
ds
xor
xor
push
adc
ret
daa
pop
out
push
jecxz
sub
sub
mov
inc
inc
shl
jp
rorl
jae
shl
dec
mov
inc
adc
pusha
add
das
cld
inc
xor
mov
xchg
inc
ja
sbb
inc
inc
add
inc
xor
es
addb
pop
sub
dec
add
mov
stc
jnp
sub
xchg
fimull
outsb
pop
sbb
mov
push
fcoms
sar
dec
mov
and
inc
and
sbb
mov
push
inc
add
mov
jnp
xchg
jle
adc
outsl
and
ret
mov
cmc
and
pop
faddp
inc
dec
das
jmp
test
xor
jmp
call
xchg
mov
sub
mov
in
fbstp
add
sbb
call
outsb
dec
les
imul
sub
jge
stc
mov
shlb
in
aam
lcall
repnz
mov
add
cmp
je
xor
inc
or
fs
mov
cmp
or
fcmovne
xor
scas
and
inc
xor
into
sub
call
push
popf
adc
mov
adc
std
or
je
push
lret
in
push
mov
or
push
pop
lea
clc
push
lds
dec
gs
nop
jmp
les
push
push
xchg
or
or
bound
shll
fstps
dec
cmpsb
xorps
cmp
push
lock
mov
daa
pop
xor
call
mov
bound
adc
inc
testl
in
rclb
mov
imul
pop
fwait
or
add
inc
mov
xchg
inc
sub
lret
adc
mov
cmp
sub
lea
push
push
pushf
ja
jo
je
mov
hlt
add
push
cmp
jl
fistl
in
pop
inc
adc
pop
mov
mov
pop
push
push
pop
inc
addr16
into
sahf
daa
mov
mov
xchg
inc
jno
lea
mov
adc
inc
rolb
sub
jl
inc
in
cmp
or
xchg
jo
pop
int
inc
insb
and
mov
mov
dec
icebp
sub
mov
mov
xor
in
push
and
adc
push
or
mov
cmp
je
mov
push
cmp
jl
aad
push
imul
push
push
shr
rorl
add
stos
pop
repz
sub
jge
adc
mov
xlat
pop
setle
outsb
ret
mov
jge
aas
cmp
xchg
xchg
mov
sub
out
push
dec
xchg
lea
xor
mov
cmp
mov
dec
cmp
mov
mov
fisttpll
xchg
add
negb
xchg
cwtl
inc
or
sub
inc
sbb
fs
push
xchg
cmp
add
rcll
add
or
lods
inc
call
movsb
jns
lock
sub
mov
cmpl
mov
pop
mov
test
icebp
push
loop
inc
sub
cmp
ret
dec
dec
stos
add
or
clc
rcrl
jmp
inc
cltd
daa
shll
and
cwtl
push
fistps
and
pop
adc
jne
int
or
inc
dec
sub
je
sub
fiadds
dec
mov
fs
aaa
les
and
in
push
or
lods
sub
stos
mov
sbb
imul
mov
add
decl
push
mov
enter
test
add
jb
mov
flds
cmp
push
lea
popa
mov
pop
push
inc
cmp
ja
std
add
inc
mov
push
nop
test
push
popf
into
stos
inc
mov
jne
rcrb
push
call
mov
or
ljmp
push
ja
stos
xor
sti
std
dec
and
pop
xchg
mov
and
add
inc
jo
add
mov
clc
mov
rclb
xchg
add
addb
add
and
mov
mov
cmp
jmp
jne
inc
int3
sbb
pop
cwtl
stos
mov
cmp
dec
pop
xchg
popa
jb
or
cltd
cmp
aam
loopne
dec
les
xchg
movsl
pop
mov
push
std
call
std
je
jne
and
jp
mov
jne,pn
imul
sub
sub
or
push
loop
ret
pusha
sub
dec
mov
xor
xchg
jne
pop
or
adc
xor
push
push
scas
adc
lret
adc
andb
int3
add
mov
cs
sbb
fldl
inc
rcrl
pop
and
xchg
and
ja
int
cs
jnp
push
arpl
ljmp
cmpl
and
mov
jne
stos
xchg
xor
ljmp
sbb
pop
or
xchg
push
add
pop
mov
pop
adc
jle
ds
pushw
orl
aaa
sti
das
and
jmp
adc
push
dec
loopne
adc
cmp
xor
andb
adc
ret
mov
or
mov
fs
inc
push
ljmp
xor
xor
sub
ss
movsb
pop
shr
adc
mov
adc
ret
ja
jne
cmpsl
mov
add
xchg
lret
adc
xchg
cmp
xchg
adc
inc
and
sub
popf
les
cmp
pop
jl
fistl
adc
ja
pusha
jo
fsubr
or
notb
call
or
push
or
rcrl
dec
cmpsb
adc
jo
in
fcoms
rcll
lret
jge
or
add
or
jne
mov
cmp
mov
xor
push
nop
adc
addl
test
cmp
adc
cmp
and
inc
adc
inc
mov
cmpsb
mov
jbe
out
mov
xchg
push
and
in
xchg
xchg
or
cs
pop
stc
bound
in
inc
js
dec
adc
or
je
dec
in
mov
mov
add
cmp
jne
call
test
mov
adcl
pop
mov
call
push
shlb
mov
and
dec
adc
add
mov
out
out
cltd
ds
or
and
pushl
sub
je
leave
and
cli
std
mov
push
push
enter
mov
jae
xor
push
add
ret
je
cmp
mov
sbb
pop
xchg
jge
jmp
movl
movsl
repz
in
aam
mov
or
inc
add
push
sbb
push
pop
inc
cmpb
aas
and
jg
cli
rclb
movsb
das
jl
inc
jo
leave
xchg
push
adc
add
add
jo
out
ljmp
mov
jmp
out
dec
dec
pop
cltd
fistpl
mov
mov
xchg
dec
jg
cmp
mov
call
clc
cmp
dec
xchg
pop
int
add
mov
scas
lock
mov
fidivl
push
dec
xchg
dec
and
arpl
and
loopne
cvtdq2ps
test
inc
pop
adc
inc
xor
cli
mov
in
mov
dec
aaa
adc
inc
mov
inc
in
and
mov
je
xchg
xchg
adc
push
inc
inc
test
push
into
or
xchg
inc
bound
jmp
movsl
adc
lahf
mov
xchg
andl
sahf
int
rorl
je
adc
jne
cmp
add
mov
mov
sbb
cmpsl
sahf
test
loopne
mov
add
adc
mov
frstor
or
inc
xchg
pop
jne
inc
mov
xchg
pop
sub
mov
pop
push
inc
outsb
sub
lea
ret
mov
cli
out
sbb
xchg
ret
shr
adc
push
inc
dec
mov
adc
pop
inc
mov
cld
rolb
adc
pop
jge
mov
aas
ljmp
sub
jecxz
push
cltd
and
setno
add
mov
mov
or
orl
pop
in
xchg
dec
test
mov
adc
jl
push
jo
xchg
dec
test
pop
sub
adc
lods
cmpsb
inc
dec
call
test
pop
inc
sbb
add
inc
andl
push
ret
cmp
test
inc
cmp
sbb
stc
pop
or
sub
push
pop
sbb
sar
xchg
rorl
mov
xlat
shlb
jmp
je
xor
dec
nop
int
pusha
or
lret
cmp
scas
or
dec
inc
ljmp
popf
inc
inc
pop
orl
push
xchg
movsl
xchg
dec
adc
je
xchg
call
push
jl
into
in
mov
movsl
test
notb
adc
in
cmc
nop
jl
mov
aad
inc
xchg
pop
scas
inc
adc
dec
repnz
call
inc
xor
sbb
cmpsl
inc
scas
xor
jge
daa
movl
sub
subb
inc
add
push
jmp
inc
sbb
loop
stos
loop
int3
ljmp
decb
inc
stc
xchg
mov
sub
fstl
mov
sbb
jl,pn
out
cmp
into
jge
mov
les
push
inc
add
andl
pop
lea
rorl
sbb
inc
daa
mov
add
shll
jl
jle
dec
dec
or
mov
add
mov
sub
cwtl
or
jne
or
push
jp
or
xlat
mov
mov
popa
mov
inc
inc
cmp
jl
les
in
cmp
cmp
adc
add
mov
negb
inc
enter
adc
xchg
cmc
and
xor
outsl
sahf
jno
pop
push
pop
addr16
jns
or
sbbb
xchg
pop
or
cmp
add
mov
ja
arpl
ret
int3
push
aas
inc
xor
arpl
in
jmp
testl
xor
and
cld
jmp
jecxz
and
jnp
and
add
inc
inc
push
push
loopne
adc
arpl
pop
sub
js
dec
jge
sub
add
push
sbb
xor
pop
mov
xchg
and
jg
hlt
jnp
sbb
mov
jnp
push
adc
xchg
cmpb
pop
das
outsl
loop
leave
push
fimuls
inc
sbb
or
mov
push
ret
cmp
daa
adc
xchg
cmp
stc
sbb
push
lds
mov
jge
or
xor
stos
jbe
or
pusha
or
icebp
dec
push
shlb
add
push
xchg
sbb
sbb
ret
pop
sbb
and
or
cmp
mov
inc
dec
inc
lea
imul
xchg
cmp
call
out
adc
ret
or
int3
adc
jbe
sbb
test
pop
sbb
pop
cmpsb
push
xor
jg
ja
push
mov
jl
or
imul
mov
push
aam
cltd
and
adc
and
adc
dec
sub
sub
jmp
cmp
aad
outsb
inc
add
call
adc
hlt
fwait
mov
lret
int
js
pop
xor
scas
mov
imul
cmp
test
sbb
jmp
sbb
adcb
mov
add
leave
sub
xor
jb
sbb
faddl
pop
mov
and
mov
test
inc
ret
mov
push
mov
in
cwtl
mov
test
sub
jle
rcrb
inc
pop
rcrl
xchg
and
call
mov
call
add
testl
sahf
ficoml
sar
sub
cmp
xchg
push
lock
push
in
je
inc
sbb
rcrb
sbb
xor
pop
add
sub
jecxz
dec
mov
dec
mov
and
rorl
popf
push
ja
add
lea
push
gs
pop
adc
push
jbe
popf
lcall
xor
jno
adc
pushf
lahf
mov
cmp
sbb
mov
jp
xor
ret
mov
pop
push
push
es
jl
xchg
stc
adc
sbb
push
inc
push
inc
push
sub
xor
into
xchg
push
pop
push
mov
and
bound
jle
jns
dec
xor
dec
lahf
jb
xchg
and
pop
sbb
or
mov
sub
sbb
inc
sbb
clc
scas
je
popf
add
cmp
mov
push
lahf
add
or
push
jo
and
sti
pop
movsl
mov
repnz
xchg
mov
push
movsb
pusha
sarl
push
xor
loope
lea
cwtl
push
mov
inc
push
cli
pop
push
xor
inc
in
not
and
or
pop
subb
adc
je
inc
mov
or
mov
cmp
xchg
pushl
jge
pop
push
add
adc
adc
cltd
sbb
out
mov
and
add
pop
mov
pushl
sarl
scas
and
mov
pop
adc
and
mov
cmp
jne
jmp
pop
je
push
add
pop
adc
int
stc
testb
pop
notb
push
inc
jnp
push
or
nop
adc
add
and
mov
lret
sbb
adc
into
or
jne
test
mov
or
add
aas
mov
lea
or
test
push
or
dec
rol
pop
mov
xor
inc
xor
sbb
lock
adc
jle
mov
sbbl
shl
adc
adc
jne
jge
add
add
lea
xchg
xchg
addr16
sbb
lods
and
mov
xor
xchg
pop
rol
xor
pop
dec
mov
cs
pop
gs
movsb
shr
rolb
cs
adc
mov
js
cmp
pop
mov
pop
fstl
out
add
idivb
push
cmp
fmulp
cmpsl
pop
xor
fs
xor
iret
ret
pop
cltd
cmpsb
mov
enter
adc
pop
mov
jne
adc
adc
repnz
mov
mov
and
mov
jmp
cwtl
sahf
push
lahf
xchg
out
dec
inc
je
sarl
ret
ficoms
clc
inc
cmp
repnz
mov
jo
rorl
xchg
and
push
fdivrs
mov
add
xchg
dec
pop
leave
sti
ss
popf
xchg
pop
push
icebp
ret
sub
or
popf
sarl
lcall
pop
adc
cltd
push
test
or
push
adc
xlat
sahf
test
jnp
vpcomd
pop
and
pop
lret
adc
dec
dec
mov
adc
lea
pop
cmp
xchg
pop
shl
cmp
jl
stos
ret
pusha
jmp
sbb
addr16
popf
sbb
jns
push
dec
push
pop
add
cmovs
jmp
or
aas
xor
or
push
add
loope
mov
and
jmp
aas
inc
push
stos
xchg
adc
add
lods
and
cmpsl
hlt
ret
pop
test
jp
mov
and
decb
pop
mov
adc
sub
aaa
mov
and
movsb
and
push
decb
mov
dec
popa
dec
xor
or
sbb
cmp
cmp
jg
sub
xor
scas
adc
push
scas
dec
dec
adc
std
bound
xchg
push
pop
and
inc
cmp
xchg
sub
sub
dec
or
scas
inc
adc
mov
fidivl
add
mov
pop
pusha
and
mov
call
rclb
sahf
bound
jg
inc
xchg
pop
imull
pop
xor
icebp
sub
loope
inc
inc
in
dec
cs
enter
and
jne
mov
xor
and
faddp
push
cmpb
sub
mov
and
rclb
andl
push
lcall
int3
push
and
leave
sub
xchg
shll
into
mov
xlat
dec
jnp
push
jle
movb
xor
pop
stos
paddb
ss
aas
loopne
mov
pop
or
or
or
jl
popf
cmp
movsl
call
jmp
jo
clc
ds
xor
incl
lock
cld
jno
test
adc
test
push
arpl
repnz
popa
lds
add
inc
mov
jno
jae
xchg
lahf
lea
sbb
sti
mov
or
mov
sahf
or
fnstcw
sbb
lods
fcoms
inc
inc
push
mov
enter
es
and
sub
adc
fnstcw
and
push
iret
stos
add
add
mov
mov
frstor
cmp
push
sub
push
je
data16
jmp
dec
dec
add
adc
mov
or
mov
loop
cld
lahf
movsb
lret
adc
test
jbe
add
add
shr
or
lea
adc
loopne
xchg
lret
jmp
xor
or
lcall
call
cmp
cwtl
int3
adc
inc
push
popf
push
jmp
mov
dec
adc
daa
push
sub
or
xor
push
rolb
lock
or
testl
mov
xor
enter
insl
xor
and
mov
divb
lea
mov
pop
xchg
scas
adc
xor
push
call
in
jmp
dec
fisttpl
lahf
dec
idivb
pop
or
pop
repnz
out
inc
mov
jae
cld
mov
sub
sbb
or
pop
mov
cs
inc
adc
adc
sarb
or
test
add
mov
and
imul
cmp
cmp
pop
mov
adc
add
imul
add
lods
adc
push
je
xor
in
sub
push
jbe
and
mov
mov
std
adc
push
push
mov
push
aas
mov
push
push
mov
cmp
pop
in
mov
aas
xchg
or
aas
pop
push
pusha
cmp
inc
jne
lret
pop
in
add
adc
hlt
fisubs
jmp
lock
push
es
jl
mov
adc
or
jnp
mov
xchg
add
call
ss
jle
jno
pushf
dec
jg
adc
cmp
out
push
xchg
out
repnz
pop
mov
dec
les
fldt
fildll
pop
xchg
dec
jl
lret
mov
add
imul
mov
dec
xchg
loopne
sub
jl
add
jg
inc
jmp
out
bound
and
mov
das
adc
inc
repz
push
cmc
mov
std
les
neg
sbb
repnz
pop
mov
add
aas
push
mov
mov
insb
push
xor
popf
scas
xchg
ret
aaa
push
cmp
in
lahf
inc
fstps
inc
adc
add
xchg
adc
sbb
fidivrl
sbb
adc
adc
data16
sub
je
enter
jo
fsts
adc
sbb
or
jmp
adc
push
ss
jne
add
jecxz
and
adc
push
and
cmp
icebp
sub
adc
sbb
push
das
jo
sub
shrl
pop
pop
push
cmpsb
and
inc
and
jmp
movb
push
leave
or
mov
lcall
add
jnp
pop
adc
sbb
fmuls
cmp
lret
mov
lock
push
mov
lret
sub
cwtl
adc
test
jg
add
xchg
cmpsl
jo
xchg
add
les
push
push
aad
icebp
xor
jne
xor
insb
and
popf
rcl
cmp
addb
lea
mov
push
mov
jo
xor
sbb
decb
sbb
adc
mov
rcrl
shrb
cld
lcall
push
sar
stc
push
pop
add
adc
sub
sbb
push
add
sub
add
ljmp
or
dec
jns
ljmp
mov
test
mov
and
stos
mov
cmpsl
orb
or
cltd
addl
add
jge
xchg
sub
and
push
aaa
arpl
gs
sub
mov
std
adc
xor
dec
sub
push
add
inc
data16
or
dec
inc
or
pop
test
adc
insb
dec
mov
or
lods
dec
dec
je
scas
pop
pop
mov
push
sbb
add
cmp
adc
pop
pop
data16
cmpsl
cmp
mov
xchg
dec
push
dec
bound
push
in
movsl
inc
and
add
inc
adc
mov
pop
or
mov
push
jne
ljmp
rcll
cmp
push
xchg
mov
jbe
test
mov
mov
sub
hlt
jns
jmp
ja
pop
push
call
cmp
push
jno
imul
cmp
inc
jae
or
aam
movsl
ret
push
rcr
ror
loope
dec
loop
push
rcl
push
dec
imul
fs
sti
adc
cmp
push
fdivl
lock
cs
xorl
out
xchg
leave
mov
bound
in
sub
adc
mov
divb
or
xor
test
dec
sub
adc
mov
xchg
flds
adc
or
jno
loope
dec
or
xor
dec
mov
call
nop
out
ret
sbb
lahf
aas
rolb
icebp
ret
imulb
in
mov
adc
fdivrl
cli
and
cmp
jmp
test
ret
jns
aas
xor
or
lea
scas
adc
cmp
adc
call
mov
push
rol
test
push
out
cmp
test
ds
push
lret
call
fmull
out
sub
pmuludq
sbb
cmc
aad
add
inc
mov
xor
sbb
arpl
adc
mov
jecxz
mov
pop
int
and
or
cmpl
jmp
std
sub
pop
lods
sub
dec
sbb
inc
push
jne
cmc
push
sbb
xor
mov
jae
mov
mulb
add
add
aas
and
dec
jns
loop
pop
aas
and
add
call
inc
adc
into
loop
pop
sub
push
fcmovbe
jmp
sbb
in
add
roll
add
call
in
loopne
adc
or
lods
sub
mov
insb
adc
lds
sarb
test
scas
xchg
shl
jae
push
push
rorl
and
sub
sub
adc
push
jp
jmp
hlt
test
and
inc
mov
dec
mov
xchg
inc
sbb
hlt
or
int3
lock
inc
jmp
ja
cld
push
mov
cs
add
and
mov
jg
je
sarl
ror
pop
imul
adc
andb
push
jle
clc
dec
aaa
enter
cs
inc
add
dec
adc
ds
xor
pop
dec
test
mov
je
or
jb
adc
cmp
mov
inc
adc
div
dec
les
ret
test
int3
and
stos
or
call
ret
arpl
mov
fbstp
dec
pop
repnz
daa
jmp
pop
mov
and
lock
outsl
lods
dec
dec
mov
or
push
jae
mov
xlat
stc
int
push
and
dec
mov
push
pushf
inc
or
or
jl
ret
stc
pop
mov
dec
repz
sub
ja
mov
data16
repz
dec
mov
js
mov
add
outsb
push
xchg
jp
aam
or
pop
movsb
lods
mov
jle
dec
fcomp
je
xor
aas
outsb
adc
jo
bound
lods
rcrb
and
push
cli
ret
or
mov
xlat
or
out
sub
and
jne
and
cwtl
sbb
loopne
fs
or
maxps
lods
int3
daa
and
dec
scas
sbb
jp
movzbl
and
jbe
inc
jne
negb
daa
inc
test
imul
aaa
and
sti
xor
jne
xchg
jns
and
popa
addb
lret
mov
lea
aam
nop
cs
push
and
je
push
test
or
fsts
shlb
call
lahf
cli
cltd
nop
and
add
std
push
nop
add
and
sbb
and
jg
std
loopne
fidivs
mov
xchg
pop
ja
aad
mov
add
xor
jne
push
das
push
je
clc
jne
mov
jns
sahf
xor
push
push
or
and
dec
ret
fadds
jge
mov
cmp
ret
inc
aad
xchg
jbe
ret
orl
call
or
loope
fsubrl
mov
iret
sbb
cmp
lea
push
pop
jb
adc
jae
cmp
or
outsb
jecxz
jl
mov
fisubrs
sbb
push
sub
add
fs
mov
call
loop
or
xor
dec
xchg
mov
push
fcmovne
xor
js
ret
into
add
mov
lea
pop
shr
or
jmp
repz
jmp
jmp
jmp
ss
pop
repnz
stc
mov
sarl
or
mov
sbb
ljmp
in
daa
add
xor
add
dec
inc
pop
mov
and
add
or
push
stos
nop
add
lea
lock
jmp
call
mov
pop
or
add
and
add
mov
and
cmp
pop
sbb
cmp
inc
xor
enter
lock
sbb
inc
mov
xlat
out
fcmovbe
daa
dec
fimuls
sub
add
and
out
adc
inc
pop
jmp
data16
pop
jmp
orb
dec
sub
adc
movsb
aas
adc
pop
mov
mov
faddl
aam
rolb
in
clc
paddsb
pop
std
stos
ret
or
or
ljmp
or
out
xchg
pop
mov
and
xchg
inc
mov
cmp
xor
cmp
cwtl
imul
sbb
mov
push
add
jae
sub
jecxz
xor
aam
mov
pop
sub
into
add
jmp
stos
mov
lahf
add
movsl
jle
and
mov
mov
into
or
nop
push
add
mov
jle
add
sbb
sahf
gs
jb
push
push
jmp
ret
or
rolb
and
leave
dec
push
sub
rcrb
mov
inc
mov
adc
rorl
add
inc
lcall
push
xchg
shll
daa
js
adc
jae
dec
mov
xor
fucom
sbb
stos
jle
mov
add
jmp
pop
sbb
or
dec
sub
jno
rcrl
adc
mov
add
mov
or
adc
push
in
sbb
int
aas
loop
jp
jmp
lea
mov
xchg
enter
xchg
jmp
lret
int
add
addr16
insb
jmp
sub
and
push
pop
dec
jmp
pusha
jne
jmp
xchg
shlb
fisubrl
mov
rcr
lret
lods
test
pop
pop
jmp
orl
sub
ljmp
fistpll
fdivs
dec
idiv
pop
icebp
test
xchg
xchg
mov
int3
add
jp
ret
into
mov
mov
cmp
cmp
dec
pushf
lods
or
rolb
cmp
jge
add
sti
dec
lods
fwait
test
dec
shll
jmp
adc
movsl
push
lahf
push
les
clc
or
aaa
repnz
mov
pop
push
mov
xchg
dec
push
inc
xor
sub
fadds
mov
adc
ret
xchg
and
sbb
sub
sbb
cmp
ljmp
sub
push
push
repz
enter
pusha
xor
mov
outsl
pop
jae
adc
enter
cmp
movsb
xor
aaa
mov
or
or
xchg
ret
add
sbb
jmp
jb
fildll
xchg
dec
stos
or
xchg
add
pop
adc
pop
push
or
pop
sbb
jno
lret
pop
add
xchg
in
mov
jnp
ret
cmp
adc
and
and
cmpsb
sbb
popf
adc
or
jmp
imul
xlat
xor
enter
sub
push
test
push
mov
and
or
mov
adc
and
dec
jmp
inc
in
in
mov
sti
sub
xchg
cld
add
shrb
sub
mov
shlb
pushf
push
jns
adc
sbb
add
jmp
shlb
iret
jnp
dec
cs
repz
hlt
stos
xor
idiv
sub
add
mov
adc
loope
pop
and
push
and
cmp
aam
jb
enter
rcrl
enter
outsb
shrl
mov
stos
sbb
cwtl
adcl
xchg
iret
pusha
and
sbb
dec
in
or
mov
or
pop
add
imul
fdivrs
cli
mov
add
and
or
movswl
test
push
mov
call
push
addw
in
inc
sbb
pop
add
pop
cmpsb
notb
add
xor
insl
add
or
jmp
and
iret
mov
or
cmc
test
aas
sbb
aad
sbbl
call
dec
sbb
pop
jne
loopne
pop
or
fiadds
or
dec
das
repz
mov
mov
lcall
adc
jne
into
inc
adc
call
jns
adc
or
cltd
sti
adc
lret
dec
cmpb
push
or
pop
orb
rorb
cmp
lea
dec
add
xor
shll
movsb
and
inc
dec
jmp
jge
push
inc
jmpw
shrb
jbe
dec
mov
lret
adcb
sbb
popf
seto
daa
xor
fs
pop
add
or
andb
jmp
addr16
fdivs
je
or
movsb
aam
lsl
cmp
adc
aas
push
mov
cs
enter
mov
mov
sbb
andl
sub
enter
cmp
jle
push
mov
shlb
mov
cmp
push
clc
inc
inc
or
sbb
push
cmp
push
test
sti
push
stos
call
es
or
es
sbb
mov
test
outsl
shlb
adc
jecxz
stos
xchg
xchg
ret
das
jne
clc
cmpsb
push
and
lahf
lds
adc
test
clc
mov
js
adc
or
pop
push
sub
testb
cld
push
and
push
add
hlt
insl
add
sti
bound
sub
fcoms
inc
jo
push
je
inc
push
sbb
hlt
sbb
flds
jne
push
dec
ss
xchg
jmp
or
xchg
inc
push
jns
adc
or
dec
pop
cmp
pop
jbe
and
jne
push
push
xchg
sub
mov
movb
cmp
lea
repz
das
jns
or
lods
add
pop
cmp
dec
cmc
ds
push
testb
adc
stc
cmp
jp
adc
mov
jmp
inc
add
mov
sub
movsl
push
aaa
inc
outsl
push
or
cmc
inc
push
imul
xchg
loop
data16
stos
gs
or
xchg
orb
inc
mov
arpl
adc
jmp
mov
lret
jne
push
or
out
das
xchg
xchg
mov
popf
int3
and
and
scas
fcmovb
sub
out
inc
popf
imul
loope
lods
or
xor
xchg
inc
xchg
sbb
adc
and
jge
out
or
pop
jb
and
cmc
out
loop
or
fcoms
in
jae
in
es
or
stc
mov
cmp
ret
and
dec
and
add
shrl
jg
push
lods
xchg
std
mov
sarl
ja
xchg
cmp
xchg
mov
add
jmp
fsubrs
push
sbb
sub
inc
cwtl
pop
jne
pop
push
cmp
jmp
stc
sub
push
push
xor
inc
cmp
stos
add
or
push
dec
jmp
mov
cwtl
scas
add
or
dec
mov
add
mov
test
ret
ja
xor
stos
push
lahf
stos
es
sbb
adc
arpl
cmpl
inc
add
call
xchg
push
push
in
insl
addr16
add
hlt
movsl
shlb
cld
adc
pop
jg
addl
dec
add
jle
div
out
inc
lds
repz
lock
mov
pop
inc
cmp
pop
push
sub
mov
add
mov
cmp
fcompl
inc
in
test
dec
pop
jne
ljmp
push
add
ret
enter
xlat
loope,pt
add
cmp
xor
jbe
jbe
mov
adc
in
ret
es
out
xchg
or
in
cmp
lret
insl
hlt
cmc
loop
hlt
sbb
mov
mov
pop
sti
dec
or
xchg
dec
add
or
sbb
push
xchg
jmp
cmp
fbld
xlat
xchg
inc
mov
and
es
pushf
adc
push
mov
inc
jmp
cmp
xchg
and
sub
pop
mov
jne
jno
into
andl
add
xchg
inc
sub
mov
lea
pop
ret
pop
jb
or
inc
notb
ljmp
jecxz
enter
jne
lods
xchg
dec
inc
ds
fcomi
inc
dec
out
imul
jo
mov
ljmp
push
inc
mov
mov
add
fadd
aas
je
scas
sbb
dec
push
sub
add
out
jo
push
in
jns
fs
ds
outsb
push
inc
sub
and
ret
call
push
pop
add
adc
cld
jnp
fsubrl
or
push
popa
ret
jle
rep
push
add
scas
ds
xor
or
cmp
scas
in
aas
add
lcall
nop
hlt
dec
in
nop
jo
or
and
dec
ret
mov
push
jmp
jns
cmp
xor
das
dec
jl
mov
inc
push
mov
jp
add
pusha
jno
lods
jne
and
or
daa
je
and
cmp
jle
jne
mov
stos
pop
movsb
cmpsl
adc
cmp
sub
sbb
call
dec
push
mov
sbb
inc
push
cmp
pop
push
hlt
sbb
sbb
mov
or
lock
movsl
shrb
js
jge
rolb
lock
insb
cmp
sub
inc
dec
pop
clc
mov
push
adc
mov
les
jb
push
ds
gs
scas
add
cmp
cld
dec
dec
test
jns
pop
or
inc
lret
inc
aad
outsb
out
ret
xchg
mov
in
bound
add
xchg
pop
inc
xor
pop
cli
inc
xor
adc
mov
iret
push
aam
loop
jne
pop
out
popa
mov
mov
push
push
push
pushf
test
js
scas
fldcw
pop
bound
mov
jns
in
and
and
dec
sub
lds
cmpsb
outsl
cmc
xchg
sub
stc
xlat
mov
xchg
fmul
push
sbb
dec
scas
xrelease
cs
loop
mov
testl
or
cmp
dec
dec
or
repz
fldt
push
ret
imull
inc
push
mov
call
into
divl
sbb
fbld
jmp
mov
jp
cmp
xchg
ret
rorl
sbb
and
mov
jne,pn
pop
mov
sbb
call
and
pop
cmp
xor
or
popa
ljmp
adc
je
mov
xor
jne
aaa
mov
ss
mov
xor
sbb
ret
jl
cmpl
dec
cmpb
lea
call
adc
inc
mov
lock
lods
aad
mov
mov
jmp
shll
add
loope
lea
cwtl
sub
fiadds
xor
push
push
sub
sub
dec
sbb
or
mov
faddl
mov
and
inc
inc
sub
xchg
clc
js
int3
int
xor
cmpsb
pop
iret
and
int
enter
or
fistpl
lret
mov
lcall
call
movsl
pop
test
ja
sub
push
fcmovnb
xchg
cli
lods
ds
or
cmp
pop
sbb
cltd
das
xlat
mov
sub
xlat
leave
ss
dec
adc
cmp
and
and
je
or
mov
sbb
add
sbb
dec
jne
out
bnd
inc
jg
add
mov
ret
nop
pushf
bound
jecxz
adc
jmp
lds
mov
cmpxchg
jnp
mov
scas
rol
shll
mov
adc
fnstsw
cltd
xlat
sub
push
sahf
sbb
les
inc
cwtl
ds
jmp
and
cmpsb
push
adc
inc
test
pusha
sahf
lea
decl
dec
sub
sub
movsl
cmpb
dec
rcrl
daa
enter
movsl
rorl
dec
pop
cmp
or
mov
xor
int3
xchg
add
imul
or
imul
mov
mov
mov
leave
shl
sub
or
push
insb
mov
or
pop
jmp
mov
add
or
and
pop
add
js
fs
mov
ds
fs
out
or
push
push
das
in
inc
mov
dec
or
jnp
je
sbb
mov
xlat
int
popf
add
inc
sbb
push
ret
xorb
inc
mov
jne
arpl
inc
addr16
ljmp
dec
loopne
dec
ljmp
outsb
outsb
mov
mov
call
lock
cmp
stc
lds
adc
lods
xor
jmp
and
shll
bound
arpl
or
add
test
lock
or
xor
icebp
mov
pop
lock
dec
cli
lea
mov
push
push
inc
mov
pop
lahf
pinsrw
cmp
test
cmp
scas
repnz
ficoms
push
push
lods
bound
daa
mov
or
cwtl
inc
nop
jmp
inc
test
xchg
push
int3
pop
and
nop
test
mov
in
call
fs
ss
push
lret
push
and
mov
pushl
or
push
shrb
fcomps
test
lret
cmp
lcall
cmp
ja
or
or
and
clc
cmp
inc
test
and
inc
aas
gs
dec
aaa
push
cmp
test
jmp
mov
adc
pop
push
inc
push
and
fbstp
pop
sbb
inc
ficomps
shlb
pop
test
inc
xor
mov
enter
rcrl
lds
lds
mov
sub
inc
cmp
add
repz
push
mov
sub
pop
sub
mov
ds
stos
adc
pop
lahf
sar
xchg
out
cld
fisubrl
shlb
push
inc
or
xor
ja
sti
and
jo
adc
pop
repnz
or
stc
jb
faddp
dec
add
enter
push
pop
push
jo
pop
popf
mov
mov
data16
enter
sbb
insl
push
adc
sbb
stos
mov
nop
call
divb
pop
jae
adc
arpl
mov
and
sub
mov
popf
nop
ss
pop
movsl
cmp
pop
xor
add
call
xchg
fdivs
and
push
mov
jmp
mov
popa
cmpl
fiadds
inc
je
jmp
jl
and
xchg
imul
xchg
push
lock
inc
movsl
sub
mov
dec
fs
loopne
fwait
gs
mov
stc
pushf
mov
add
or
leave
fstl
push
cltd
xor
xor
add
jae
sbb
jmp
iret
push
insb
data16
push
mov
xor
sub
addr16
push
inc
push
adc
shrb
sbb
cs
adc
cmp
xor
popa
fs
adc
inc
lahf
jns
xchg
mov
mov
ja
jo
add
ret
loop
adc
test
cmp
adc
add
xor
insb
lods
jp
fs
decb
push
call
test
jns
in
or
push
xchg
mul
dec
push
mov
loopne
sbb
push
enter
cmp
leave
mov
mov
scas
loopne
xchg
xchg
icebp
inc
enter
push
and
mov
in
jae
or
push
push
push
test
lock
sub
dec
dec
dec
push
mov
std
pop
addr16
pop
and
ret
mov
xchg
cmp
add
adc
mull
jmp
pop
lds
jmp
mov
test
into
fidivrl
push
mov
insl
mov
xorb
dec
nop
adc
sub
or
or
and
mov
push
call
sbb
lods
adc
mov
data16
and
mov
mov
xor
mov
add
mov
push
outsl
or
xor
jge
push
hlt
push
rolb
cs
jb
sbb
pop
int3
nop
popf
fwait
sub
jge
data16
push
test
mov
mov
mov
cmc
xchg
test
xchg
imul
add
jo
or
stos
adc
xor
fbstp
lea
leave
xor
push
mov
outsb
lds
dec
mov
jmp
add
je
sbb
rcll
adc
sub
ss
and
int3
lea
enter
jb
inc
adcl
mov
cltd
sub
ds
outsb
daa
or
pop
adc
orl
sub
jl
adc
sbb
js
dec
rorl
sub
loopne
dec
test
or
and
pop
adc
adc
setle
cmp
and
std
push
ss
adc
mov
pusha
add
add
add
movsl
add
inc
inc
sbb
and
popf
dec
jnp
push
add
xor
je
cmp
and
in
hlt
jb
cmp
hlt
out
outsb
ret
es
notb
fstpl
ljmp
jno
pop
mov
push
add
mov
xor
aas
ret
or
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
mov
mov
fisttpl
movsb
mov
aad
neg
add
xchg
sub
mov
pop
sub
pop
mov
pusha
repnz
mov
test
jge
ficompl
jmp
push
mov
hlt
movl
test
fs
add
in
leave
mov
add
adc
insb
push
arpl
cmc
or
outsb
cmp
pop
adc
in
pusha
aad
jb
addr16
add
aam
add
std
test
or
insb
cwtl
mov
add
leave
mov
lods
jge
add
xor
filds
or
cmp
sbb
cmp
ficoms
and
enter
sarb
and
add
iret
shld
sub
mov
or
and
or
das
adc
add
sub
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
popa
mov
into
subl
mov
dec
sbb
xchg
fadd
roll
movsb
sti
hlt
shrl
imul
xor
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
inc
aad
scas
ja
popf
adc
adcl
jae
or
jecxz
cmp
push
sbb
jp
iret
push
in
decl
sbb
daa
scas
add
mov
pop
jge
hlt
lock
add
push
inc
push
imul
xorb
aas
sbb
subb
sbb
loopne
sub
mov
ficoml
int3
es
out
mov
cmp
aad
mov
call
xchg
roll
mov
push
repnz
dec
icebp
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
or
pusha
pop
jp
inc
ret
out
arpl
push
xchg
addr16
mov
xor
imul
sbb
outsl
add
xchg
ja
add
add
mov
and
es
aas
lds
cmpb
add
push
pop
cmpsl
call
ret
iret
shlb
sbb
mov
fs
repnz
in
pushf
mov
insl
lar
ss
jmp
pop
addr16
jb
push
add
xchg
adc
mov
add
sbb
add
mov
faddl
jl
or
clc
roll
icebp
clc
mov
push
pop
int
mov
pop
mul
ja
outsl
xor
sbb
dec
pop
jle
jo
ud0
cmp
pop
pop
or
adc
xsave
shll
popa
rol
push
js
loop
mov
push
add
add
popa
add
cmpsl
notl
pusha
rorb
inc
imul
add
scas
fcompl
fldenv
or
inc
lock
aaa
push
cld
mov
mov
add
pushl
loop
push
ret
inc
xchg
mov
cmpsb
mov
sarb
sub
add
fldenv
jp,pn
add
add
push
outsl
sub
mov
mov
lock
add
adc
pop
mov
cwtl
xor
cltd
jo
addr16
or
or
add
or
or
faddl
xor
and
cmp
pop
pop
or
aaa
xor
push
lahf
sbb
pushf
pusha
push
jo
js
sti
inc
xchg
jecxz
add
jo
jo
gs
add
mov
jns
or
mov
enter
js
js
adc
outsl
fs
pop
push
adc
xor
jae
les
mov
insb
outsl
lds
arpl
fdivrs
test
outsl
ss
std
adc
jno
incl
popa
sub
xor
mov
jle
dec
xor
push
or
sub
mov
sub
xor
and
mov
jl
rorb
push
inc
adc
ds
jae
jb
mov
inc
xchg
inc
mov
push
jne
mov
sbb
outsb
and
dec
sub
xor
push
addb
lcall
adc
adc
or
sbb
cmp
push
sub
cmp
popf
les
sbb
repz
dec
jecxz
or
or
inc
mov
jb
xorb
out
iret
popf
mov
push
dec
dec
jno
movsb
push
xchg
jl
mov
pavgb
dec
cld
push
dec
adc
cmp
adc
insb
xchg
nop
je
stos
push
jb
cmpsb
jle
addr16
push
dec
sub
aaa
mov
ljmp
mov
jo
sahf
xor
jbe
imul
hlt
je
fs
aam
imul
and
neg
sbb
pusha
lcall
das
mov
pop
fldl
inc
pusha
adc
daa
jo
mov
adc
xchg
call
cmp
mov
and
push
pop
nop
and
aaa
in
test
push
lods
push
push
add
xor
nop
xor
pop
push
andl
add
addr16
inc
fists
into
sub
push
jle
and
push
insl
loopne
mov
sbb
cmp
push
jne
jae
pusha
dec
popa
and
mov
push
xorl
lcall
adcb
sbb
ret
data16
push
out
and
cmpsb
push
popf
out
push
bound
or
pop
inc
inc
pcmpgtw
and
popa
aad
and
cmp
out
loope
dec
pop
imul
jp
or
adc
push
adc
gs
ss
push
aad
lds
sbb
inc
jb
push
popa
shrb
and
aam
bound
inc
fsts
dec
push
insb
lret
push
gs
inc
cltd
dec
outsl
cmp
inc
mull
or
je
pop
inc
inc
rclb
loop
inc
add
test
adc
or
movsl
dec
dec
shll
popa
addr16
inc
in
js
call
mov
sbb
popa
inc
inc
ret
inc
or
shll
mov
andl
or
mov
or
adc
sbb
and
fdivl
push
fs
dec
jb
sahf
jle
loope
cwtl
ds
sbb
sub
mov
and
mov
les
pop
or
adc
mov
xchg
or
ss
js
xlat
jo
inc
add
add
add
xchg
lods
shlb
and
or
or
push
mov
mov
arpl
and
add
push
clc
inc
pop
or
jo
push
in
adc
dec
lods
mov
add
mov
sub
cmpsl
dec
inc
in
outsl
adc
in
inc
adc
sub
dec
clc
mov
xor
xchg
add
pop
adc
cmp
push
jo,pt
bound
jl
movsb
fs
mov
lods
and
imul
test
mov
and
sbb
mov
aas
jo
and
adc
and
js
icebp
or
hlt
test
pop
movsl
push
or
cmpsb
pusha
subl
in
inc
push
cwtl
rclb
sbb
mov
and
data16
fldcw
adc
sbb
test
aas
fmul
dec
cmpsl
cwtl
mov
mov
xchg
and
and
insb
push
inc
dec
hlt
mov
test
dec
sbb
mov
fsub
mov
test
mov
jp
mov
call
inc
add
arpl
or
mov
nop
sbb
fsubl
inc
dec
inc
cmp
dec
sbb
and
ret
or
pop
sbb
and
lea
insl
shll
add
or
movsb
mov
repnz
dec
mov
push
mov
enter
dec
push
sub
fchs
pop
push
sub
in
insb
adc
and
or
lds
add
les
push
fcoml
lret
stc
sbb
sub
push
inc
outsb
in
cmp
mov
cmp
add
push
mov
fsts
dec
adc
adc
movsl
mulb
sub
cmp
cmp
jg
stos
in
mov
pop
mov
sahf
adc
mov
or
pop
cmpsl
cmp
mov
mov
aad
fcoml
adc
inc
or
jne
add
xchg
insb
sub
scas
and
mov
shr
lods
push
xchg
orl
mov
in
adc
pop
gs
das
insb
sub
gs
jl
outsb
cmpsl
mov
ret
movsl
adc
je
bnd
jbe
xlat
push
mov
int
fs
inc
gs
cmp
scas
adc
inc
push
adc
lret
flds
mov
mov
xchg
adc
push
lret
flds
xchg
es
push
jb
push
outsb
add
fcoml
sbb
divl
dec
push
jl
and
andb
sub
cmpsl
adc
mov
aaa
push
shrl
in
insb
ds
movsl
inc
adc
test
jl
adc
outsl
nop
fadds
add
add
add
add
inc
xchg
or
addl
loope
and
in
and
fwait
out
or
cmpsb
negl
add
add
jp
insl
inc
and
mov
jnp,pn
jge
sub
jns
in
inc
push
outsl
outsb
gs
ja
je
fldenv
out
jecxz
ds
and
jae
arpl
push
cs
push
outsb
fstpl
jb
outsl
fistpll
dec
cmp
gs
sbb
xor
insl
xchg
or
arpl
sbb
jns
lods
mov
aam
and
clc
dec
xor
and
jb
adc
iret
data16
push
mov
mov
pusha
lret
dec
mov
pushf
imul
arpl
hlt
adc
jmp
adc
jne
xchg
jp
in
pusha
pop
dec
outsb
aas
jbe
stos
imul
nop
pop
insl
cmp
out
jnp
push
jo
xorl
imul
enter
mov
inc
sbbb
push
inc
push
ljmp
stc
inc
insb
aad
dec
das
out
inc
cmp
je
into
pop
jmp
pop
mov
mov
push
out
imul
in
or
sub
sub
faddl
gs
jge
sub
fs
xor
insb
test
repnz
inc
std
jb
stos
test
adcb
jecxz
dec
data16
adc
adc
push
jae
xchg
pop
cmpsl
jmp
fisttpll
gs
sub
popa
pop
popa
push
sbb
ljmp
out
fisubrl
mov
mov
sti
pop
imul
xor
jl
loop
mov
add
insb
outsl
imul
jbe
jne
adcl
ret
dec
jae
test
loopne
popa
addr16
ja
outsb
adc
cmp
add
mov
or
adc
int
or
test
sbb
pop
inc
push
inc
pop
mov
cmovbe
xchg
pop
cmpsb
add
xor
dec
pop
add
or
add
xor
dec
pop
add
xor
push
jne
ss
dec
pop
add
or
add
cmp
dec
pop
add
or
add
lods
aas
xor
add
adc
iret
adc
jnp
xor
rorb
movd
sbb
jb
mov
add
add
xor
inc
sub
mov
and
jb
fwait
add
add
mov
pop
test
fwait
add
add
inc
sub
add
add
test
fwait
add
add
inc
sub
add
add
test
sub
sub
mov
push
or
pop
push
inc
sub
pop
mov
push
dec
clc
xchg
mov
push
daa
xchg
inc
or
dec
inc
push
out
adc
push
frstor
or
outsb
or
or
or
mov
dec
push
and
or
add
dec
or
or
outsl
or
rorb
fcoml
call
into
jge
shlb
test
push
je
xor
dec
add
movsl
or
add
or
or
add
or
dec
add
or
lret
or
add
push
imul
add
dec
or
mov
mov
mov
adc
fimuls
les
sub
adc
pop
dec
rorb
roll
xor
arpl
pushf
inc
or
pop
inc
pop
out
adc
dec
dec
outsb
or
and
or
dec
add
or
adc
mov
mov
aas
jb
and
arpl
adc
pop
inc
push
push
sub
sub
ds
push
dec
dec
xchg
pop
flds
and
or
push
sub
push
push
xchg
push
and
xor
xchg
mov
dec
jge
lods
pop
fwait
pop
ds
push
icebp
iret
mov
cli
mov
int3
inc
xchg
inc
push
aas
mov
xchg
in
lahf
dec
inc
inc
lods
and
lods
inc
iret
mov
pop
push
shrl
call
pop
inc
lahf
inc
dec
inc
inc
push
in
gs
cltd
sub
xchg
addr16
push
inc
dec
mov
int3
loop
push
add
test
pop
leave
stos
pop
jl
mov
sbbl
cmp
mov
pop
mov
gs
into
pushf
ja
adc
fs
adc
js
arpl
ja
adc
push
gs
ja
adc
js
addr16
ja
adc
js
imul
cmp
jae
and
sub
sub
fisttps
int3
loope
movsb
pop
test
dec
adc
loopne
jne
loop
js
jmp
insb
lds
pop
dec
inc
sbb
xor
inc
push
gs
imul
mov
or
pusha
and
lock
imul
fldenv
bswap
inc
jle
and
and
es
sub
and
das
jle
pop
repnz
daa
xchg
pusha
aas
and
and
shrb
jne
push
jle
and
inc
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
imul
push
sbb
and
inc
repnz
nop
and
es
and
stc
sub
inc
das
repnz
pop
nop
cmp
daa
aas
and
jle
enter
cs
test
enter
and
push
jne
xchg
pusha
test
jno
fildl
sbb
cld
cs
js
and
nop
and
and
test
les
aas
and
and
inc
dec
gs
test
dec
dec
dec
sub
and
add
or
pop
or
mov
incb
gs
inc
outsb
outsl
ja
or
cwtl
dec
push
inc
out
dec
fiadds
bound
and
push
push
xchg
dec
adc
push
push
inc
push
xor
mov
fcmovu
loopne
add
gs
push
dec
sub
inc
xor
arpl
cmp
inc
dec
dec
js
pop
gs
inc
outsl
adc
ret
xchg
ret
dec
push
mov
pop
fldl
inc
dec
int
mov
lea
pop
jbe
dec
lcall
jae
imul
cld
mov
mov
cs
and
pop
adc
mov
inc
xchg
call
dec
add
and
inc
dec
mov
inc
repnz
add
adc
xor
ds
xorb
loop
sbb
add
jo
stc
add
std
cmp
movhlps
xchg
int3
jmp
icebp
xchg
add
popf
shlb
sub
stos
stos
push
ljmp
data16
adc
sbb
xor
jne
arpl
or
leave
add
fadds
inc
icebp
out
cwtl
aad
aam
dec
clc
push
or
mov
lret
add
in
shl
cli
hlt
std
add
jne
adc
movsl
mov
jnp
cmp
fnstsw
movsb
adc
repnz
or
mov
adc
int
enter
cwtl
or
out
test
push
std
test
xchg
popf
test
cmp
fsubl
lcall
add
rcr
xor
pop
faddl
add
mov
push
jle
add
jb
mov
ret
adc
mov
xchg
rclb
test
xor
rcrb
mov
xchg
jne
sub
xor
pushf
push
jbe
jns
push
push
je
mov
jne
xor
jle
pop
in
sub
pop
dec
inc
jge
or
push
inc
dec
inc
cmp
inc
clc
ljmp
stc
out
lcall
je
into
enter
imul
sbb
pop
popf
fdivrl
jo
adc
inc
lahf
pop
dec
js
pop
mov
cli
movsb
fdivrp
aaa
fwait
push
cltd
adc
arpl
xchg
iret
dec
repz
or
sbb
gs
inc
repz
es
mov
fwait
sub
les
pop
sahf
mov
sbb
jge
into
jae
imul
or
jne
sti
mov
cmp
adc
dec
iret
mov
call
pop
fbstp
xchg
cli
xchg
jge
pop
xchg
movsl
es
out
and
out
mov
jge
xor
enter
dec
ret
xchg
int3
ja
and
jbe
fiadds
cld
in
leave
jmp
cli
fdivr
jecxz
shr
mov
in
xor
addr16
lock
arpl
arpl
scas
aad
je
cld
sti
stc
out
repz
xor
insl
mov
in
push
xacquire
sti
lock
ds
cli
jl
inc
jmp
out
idiv
mov
and
push
daa
dec
inc
fs
jns
pop
enter
sub
add
add
dec
inc
push
push
dec
push
dec
icebp
out
cmpsl
addr16
jae
dec
shlb
xor
xor
pop
push
sub
in
and
repz
sbb
push
xor
xor
popa
push
dec
push
dec
xor
cmp
cs
in
and
xor
xor
push
test
movsb
and
adc
or
dec
addb
loope
cmp
aam
subb
lcall
add
jge
sbb
outsb
sub
shrb
pop
insb
jae
ljmp
sbb
adc
cmp
ds
dec
mov
lods
mulb
or
adc
repnz
push
inc
lahf
enter
in
sub
cmp
inc
xchg
or
in
pop
std
sub
adcl
adc
sbb
repnz
dec
sbb
scas
xor
push
loop
lret
inc
jne
gs
add
loopne
adc
mov
bound
and
mov
cmp
daa
dec
inc
mov
jb
test
or
faddl
mull
enter
push
or
pop
popa
lahf
add
cmp
xchg
sub
mov
inc
sbb
arpl
sub
dec
pop
jl
outsl
mov
jecxz
je
int3
mov
leave
pop
flds
push
dec
int3
inc
lahf
xor
add
jno
cmp
je
add
push
sbb
or
mov
adc
fldcw
push
cmc
pusha
pop
add
adc
sub
dec
pusha
shlb
hlt
scas
movsb
les
mov
adc
jp
test
adc
mov
inc
push
mov
imul
push
mov
add
mov
adc
js
adc
stos
adc
cmpsb
jmp
mov
xchg
adc
xor
xor
mov
or
mov
mov
das
or
and
test
add
fadds
inc
jo
test
mov
xchg
cmp
and
and
sbb
lcall
aaa
adc
xchg
and
imul
outsl
data16
stc
fucomi
popa
insb
negl
add
jle
jbe
jb
sbb
pop
out
or
cs
std
loop
int
mov
nop
cmp
imul
pshufw
jg
inc
cmp
adc
inc
fs
or
insl
push
bound
js
push
xor
adc
pop
cmp
sbb
adc
jae
inc
cwtl
add
and
inc
outsb
mov
lods
push
lret
sbb
jne
push
test
aaa
add
dec
jl
mov
cmp
jno
jne
je
iret
data16
jo
sub
les
fs
push
sbb
sub
imul
insl
mov
call
and
sub
pop
jmp
add
jb
mov
std
hlt
lds
xor
sgdtl
std
dec
jg
rcr
enter
outsl
movsb
mov
mov
mov
pop
push
add
addl
inc
ljmp
ljmp
add
pop
push
stos
add
add
incl
addl
dec
dec
sbbb
push
push
push
push
push
push
pop
pop
or
bound
mov
add
imul
pushl
mov
ja
jns
xor
ss
cmp
sub
and
pusha
popl
fwait
mov
call
ss
icebp
testl
jbe
push
lret
adc
adc
xchg
pop
and
int
xor
clc
adc
sbbb
mov
push
mov
pop
xor
push
add
push
call
mov
sahf
aam
add
pop
cld
loopne
pusha
call
add
lea
addl
add
dec
in
arpl
lock
and
les
pushf
jl
iret
shlb
mov
dec
mov
mov
rcr
repz
je
add
mov
lock
popa
ret
pusha
dec
mov
cmp
add
stc
cmp
je
decb
cmp
cmp
sti
jnp
jle
clc
idiv
adc
dec
clc
sbb
add
or
ss
sbb
pop
iret
outsb
push
adc
jp
push
inc
add
insb
aas
and
pop
inc
cmp
push
add
jl
cmp
and
jmp
cmp
xor
add
xor
adcl
pop
pop
ror
rol
hlt
cmp
jne
loope
sarb
sbb
adc
sbb
fstp
popa
ret
cli
fldenv
sub
sub
pop
adc
mov
cs
lods
test
mov
add
jecxz
xor
daa
dec
aas
sbb
pop
fs
xor
inc
pop
jo
lods
cld
push
pop
jg
xor
jl
add
pop
xor
pusha
push
cmp
or
jb
cwtl
decb
out
out
lds
xchg
hlt
dec
push
loop
out
jno
xor
mov
sahf
je
inc
add
adc
mov
push
das
pop
or
pop
insl
dec
jle
aad
pop
jne
xor
sub
fnstenv
add
pop
xorl
push
jmp
loop
inc
je
cmp
inc
jle
pop
push
lahf
cmp
outsl
ret
pop
pop
cmp
hlt
mov
cmp
xor
cmp
jg
subb
jno
add
test
ljmp
mov
inc
imull
js
data16
xchg
mov
cmc
rolb
xor
adc
mov
outsb
iret
movl
nop
popf
fs
dec
sub
mov
lds
pop
sarl
imul
xchg
sbb
add
pusha
add
add
imul
dec
cmp
test
insl
dec
cmpb
mov
push
push
pop
mov
rolb
je
cmp
add
add
pop
mov
sub
add
adc
and
cmp
dec
xchg
ret
cmp
js
push
orb
pop
xor
add
loop
pop
jecxz
pop
je
add
adc
aaa
jge
stc
ss
adc
lods
lds
loopne
cmpl
imul
lock
add
mov
cmp
sub
jmp
jo
push
shlb
and
call
mov
inc
add
inc
subb
mov
mov
or
addr16
sbb
pop
lea
sbb
dec
or
add
xor
das
or
push
cmp
dec
push
cmp
lcall
pop
loopne
jmp
inc
and
adc
enter
jo
add
add
js
inc
mov
xchg
cmp
jo
bound
bound
mov
orb
repz
adc
bound
adc
adc
dec
jbe
lcall
test
adc
sti
sub
adc
sbb
pop
and
adc
mov
rcr
ds
xor
and
pop
das
popa
scas
add
adc
test
loop
test
add
or
gs
repnz
data16
stc
inc
add
add
mov
push
add
add
sub
push
push
call
lret
insb
add
push
or
jecxz
dec
hlt
mov
enter
xchg
xor
xchg
lret
cmpb
idiv
in
std
inc
in
push
add
xorb
stc
fld1
loopne
into
cmp
in
push
xchg
inc
mov
repz
sbb
mov
leave
sbb
xor
loope
aad
add
lds
lret
cmc
hlt
add
movsb
std
arpl
or
fsub
inc
add
hlt
not
je
add
rolb
in
aas
nopl
mov
lea
xchg
jnp
mov
loope
add
test
add
sub
push
mov
aam
cmp
mov
pop
je
clc
idivb
pop
push
fistpl
mov
inc
es
out
insb
je
cmp
lahf
adc
aam
add
nop
stc
into
inc
xlat
pushf
lea
orb
push
insb
shl
sbb
sbb
inc
js
add
xchg
lock
das
fwait
cmp
bound
cmp
push
adc
mov
jb
cmc
shrb
mov
add
adc
pop
aaa
or
push
adc
mov
leave
nop
adc
mov
addl
mov
cmp
fcomps
insl
cmp
stos
testl
push
inc
xchg
test
leave
sub
add
dec
sbb
push
inc
testl
cmp
sarb
xchg
dec
mov
inc
push
outsl
sub
xchg
or
add
dec
xor
or
enter
xor
bound
push
cld
jb
ss
push
pusha
cs
push
dec
push
mov
xor
daa
je
xor
fistps
cli
stc
xlat
insl
push
push
push
das
lcall
aas
mov
jo
jb
aam
cmpsl
push
jae
sbbb
jne
arpl
mov
inc
popa
arpl
clc
movsb
xchg
jle
xor
jae
mov
cmp
insb
insb
inc
iret
xor
xor
outsb
cmp
dec
dec
inc
push
pop
push
mov
nop
leave
push
push
add
cmp
dec
sti
inc
dec
les
xorb
idivl
jg
ret
inc
mov
add
push
sub
or
pop
sub
stos
push
pop
or
test
pop
pop
pop
mov
xchg
dec
dec
push
xchg
inc
fs
xchg
lret
in
out
add
jo
adc
fs
push
call
iret
cmpb
push
sub
gs
bound
mov
pop
scas
dec
sbb
inc
shlb
push
pop
push
inc
test
xor
das
mov
sub
outsb
dec
fs
repz
inc
jns
rclb
xor
push
test
xor
xor
int3
inc
and
adc
inc
push
sbb
pop
sbb
xor
mov
or
mov
mov
or
loop
cmpsb
in
ja
cmp
add
out
push
dec
mov
dec
xchg
xchg
sub
xor
sti
xor
cs
add
jb
iret
inc
sbb
cmp
icebp
clc
daa
push
enter
xchg
data16
cltd
add
das
loope
push
inc
or
dec
ds
stos
inc
or
jns
or
push
inc
lcall
repz
insb
out
out
arpl
jae
imul
je
sbb
push
inc
jl
push
arpl
adc
sbb
and
nop
sub
inc
jb
jo
push
popa
add
or
inc
sti
aad
xor
dec
popa
iret
in
xor
shrl
sub
and
loope
js
and
dec
inc
lock
out
and
add
scas
inc
fdivr
jno
popa
iret
hlt
stos
and
in
and
mov
je
pop
and
pusha
inc
cmp
out
jle
push
lds
sbb
std
das
xor
insb
ret
les
pop
xor
and
data16
insl
xchg
in
mov
in
dec
sub
iret
call
sub
ja
loop
pop
test
inc
outsl
jne
pop
adc
mov
inc
adc
ja
scas
sarb
fistpll
adc
or
or
dec
dec
push
add
in
aaa
cmp
sub
das
sub
push
or
dec
inc
or
movsb
and
dec
adcl
inc
xchg
jnp
cmp
jnp
in
imul
mov
imul
pop
sub
push
dec
pop
adc
xchg
inc
out
xchg
pop
mov
cmp
or
dec
push
inc
ret
xchg
lret
dec
xor
imul
rol
xchg
push
lahf
inc
js
movsl
sbb
cs
jg
mov
in
mov
or
inc
sbb
ficomps
nop
shl
das
pop
mov
cmp
pop
and
fwait
adc
cmpsl
roll
pusha
adc
add
and
mov
lret
dec
push
xor
and
push
or
lods
push
jae
inc
dec
fistl
test
mov
mov
add
cmp
and
arpl
jne
dec
add
adc
loope
gs
lods
movsb
xor
test
fstl
push
and
gs
xorl
adc
lcall
pusha
popf
push
fsubrl
pushf
xor
movsb
adc
inc
inc
jnp
dec
pop
dec
xor
shll
je
fs
aam
jmp
and
push
gs
je
sbb
das
sub
xchg
xchg
or
mov
hlt
imul
por
pop
sarl
sub
add
sub
dec
sbbl
sub
bound
lcall
dec
mov
std
jp
fsubs
nop
in
sub
movsl
mov
xor
sbb
dec
mov
rorb
dec
aam
inc
pop
xor
xor
add
mov
inc
push
adc
decl
sub
or
ret
inc
inc
xchg
or
dec
sbb
add
call
bound
mov
repnz
mov
call
imul
or
xorb
mov
xor
sub
pop
inc
add
or
loope
xchg
inc
mov
or
insl
jae
or
popa
incl
jb
inc
or
dec
and
jg
jae
mov
and
imull
push
pop
loopne
out
mov
push
pop
inc
in
popf
adc
mov
xor
and
gs
test
fisttps
jo
pop
fptan
push
imul
lods
jns
int3
jne
mov
popf
dec
nop
bound
dec
mov
pusha
xor
mov
lods
pop
movsl
repz
and
mov
xchg
and
cli
pop
mov
fisttpll
arpl
xor
push
pop
and
shlb
pop
xor
push
and
addr16
rcr
xchg
sub
sub
inc
inc
in
pop
rcrl
dec
push
dec
sub
cs
insl
pusha
sbb
mov
pop
xchg
xchg
push
push
and
leave
adc
pop
rcll
inc
sbb
aaa
xchg
mov
imul
xor
xchg
in
dec
lds
push
push
aaa
xchg
leave
rcll
jmp
pop
sub
bound
stc
add
outsb
sub
push
push
iret
adc
cmc
adc
imul
shlb
pop
lds
jp
mov
call
cs
fistpll
jge
pop
aas
sbb
pop
jl
mov
dec
mov
inc
fnsave
dec
lahf
cwtl
nop
dec
in
inc
movsb
cmp
xchg
xor
movsl
inc
lods
push
dec
test
in
mov
cmpsb
movsb
je
cmc
arpl
lds
inc
push
movsl
test
adc
mov
push
cmp
xchg
cmp
sbb
int
push
cmc
mov
pop
je
ds
xchg
mov
push
sub
cmp
scas
push
xor
dec
fwait
imul
adc
inc
dec
add
push
dec
inc
pop
sti
gs
and
xorb
inc
or
inc
subl
adc
mov
and
xchg
sbb
loop
inc
add
sbb
cmp
sbb
adc
adc
fdivrl
lods
movsb
or
insb
adc
inc
or
nop
clc
push
mov
ror
mov
or
push
stc
and
in
mov
aam
mov
cmp
sbb
in
mov
adc
mov
inc
mov
xchg
xor
enter
mov
adc
stc
adc
mov
test
les
ds
mov
fsubs
les
and
loop
mov
pushf
loop
inc
dec
and
loop
mov
fmuls
inc
mov
xorl
adc
clc
mov
lods
mov
inc
mov
push
in
jl
mov
aam
arpl
les
mov
enter
jl
mov
clc
mov
mov
and
mov
cmp
xor
push
adc
hlt
mov
aam
js
mov
enter
jl
mov
or
mov
and
inc
lock
js
int
test
out
jo
pop
cmpsb
xor
enter
or
sbb
mov
pushf
sbb
mov
xchg
or
je
push
and
or
sbb
inc
lods
in
or
mov
sarb
add
xor
jp
out
sbb
pop
push
loop
inc
push
outsb
lahf
or
add
data16
aas
push
add
repz
jns
mov
mov
outsb
sub
push
jo
sbb
dec
push
scas
dec
dec
cltd
dec
and
xor
mov
loopne
xor
imul
dec
and
xor
mov
dec
fs
fs
dec
jne
popa
fldt
frstor
sub
je
inc
push
pusha
xor
inc
push
push
push
inc
push
inc
pop
dec
push
dec
adc
cmp
inc
ja
pop
lea
lret
gs
insl
loopne
movb
xor
push
and
mov
and
imul
xor
ja
arpl
outsb
outsb
pop
sub
sub
pop
dec
xor
push
xchg
dec
outsb
pop
sub
pop
imul
lods
out
aas
daa
xor
bound
je
nop
movsb
iret
pop
insl
pushf
sti
data16
ret
xchg
insb
imul
jne
aad
dec
gs
jbe
inc
mulb
pop
inc
dec
test
dec
outsb
jecxz
out
or
mull
jl
inc
lods
push
jb
mov
dec
jl
inc
negl
loope
es
xor
jb
cmp
push
xor
adc
sub
lret
push
adc
imul
sbb
hlt
sub
jecxz
push
adc
lret
push
je
sbb
out
sub
and
imul
mov
add
jae
jne
or
push
test
out
je
lods
sbb
inc
inc
movsb
outsl
inc
inc
cmp
push
imul
dec
adc
movsb
cs
inc
sub
bound
sbb
movsb
and
adc
mov
nop
jnp
clc
adc
cmp
add
inc
push
inc
dec
push
dec
dec
ljmp
loope
jb
xchg
mov
int3
shrl
js
xor
jae
and
or
lea
in
sub
repz
sub
dec
xchg
inc
dec
jmp
inc
out
jo
jae
mov
dec
inc
adc
inc
mov
inc
adc
xor
inc
xor
xchg
movhps
or
fstps
mov
ret
imul
push
imul
inc
repnz
stos
lret
sub
dec
mov
xorl
and
stos
das
ficompl
inc
push
test
loopne
pop
jne
jae
imul
lcall
xor
sub
es
dec
fnsave
popa
jne
je
cmp
fs
insb
hlt
imul
in
jl
inc
inc
jb
adc
lock
sbbb
sub
test
je
rclb
das
cmpsb
cld
dec
test
jae
jbe
mov
jne
std
xchg
push
insb
pop
mov
sub
or
mov
dec
cmp
adc
je
and
and
div
sub
outsl
xchg
cmp
insb
call
and
inc
inc
insb
pop
ret
sub
push
pusha
mov
xor
inc
nop
cmp
fs
and
or
adc
scas
inc
movsb
sub
xor
xor
mov
xchg
andl
daa
leave
mov
adc
sti
inc
dec
push
dec
nop
jl
push
xor
push
push
scas
in
adc
sub
lods
adc
xor
xchg
inc
fcomi
dec
cmp
inc
nop
mov
cmp
ret
sub
arpl
lcall
stos
dec
sub
and
frstor
decb
sub
inc
js
not
bound
mov
dec
dec
inc
in
cmpsb
cmp
jbe
cli
xor
imul
push
lods
pop
call
inc
xor
and
imul
std
insb
dec
in
sub
sub
je
sahf
xor
dec
mov
or
jns
jns
int3
xchg
mov
sbb
jge
inc
push
daa
xor
dec
je
xor
loope
jae
jae
shr
pop
das
mov
jne
adc
aaa
push
fldcw
and
in
pop
cmp
sahf
in
or
outsb
jp
mov
das
stc
shll
icebp
neg
xchg
enter
push
adc
add
dec
fs
push
pop
dec
out
aaa
sub
inc
test
mov
xor
loope
repz
jb
pop
inc
test
int3
aas
jo
jbe
icebp
dec
in
out
ret
xor
out
pop
dec
and
sub
xchg
insb
pop
push
jmp
shrb
call
icebp
sub
dec
inc
es
xchg
lcall
cmp
or
and
mov
adc
or
pop
insl
inc
mov
jne
pop
adc
cwtl
test
push
add
or
les
mov
inc
arpl
in
sub
jae
lods
in
inc
aaa
mov
push
aaa
iret
loopne
aaa
adc
cmpsb
fs
nop
pop
and
xor
icebp
adc
sub
jo
jae
lret
push
cs
mov
pshufw
inc
rorb
dec
cmc
in
outsl
push
push
shr
pop
push
lahf
inc
scas
cltd
xor
sarl
mov
inc
lods
push
movsb
cmp
mov
dec
rcll
inc
inc
mov
cs
jg
jmp
jmp
and
insl
repnz
ljmp
push
push
mov
fmuls
sub
xchg
aaa
sub
jae
sub
fistpl
imul
push
sub
push
dec
mov
adc
leave
push
xor
roll
ret
dec
jno
aas
ret
aad
repz
fistpl
jp
stos
adc
je
or
xchg
fsubrs
imul
addr16
xor
sahf
sarl
outsb
sar
xor
push
sbb
push
cmp
cmpsl
mov
and
pop
popa
cmp
cmp
xchg
enter
sbb
inc
dec
lds
movsl
or
cmp
dec
inc
sarb
fistl
in
cmp
xchg
and
push
or
or
jnp
in
and
push
sub
jecxz
lcall
jo
test
stos
fsin
adc
ds
loope
sbb
mov
dec
adc
jbe
adc
xor
out
or
dec
loop
notb
push
dec
sub
cmp
pop
adc
adc
cwtl
and
rclb
rolb
ss
inc
outsb
jbe
out
ljmp
ja
or
jb
push
dec
scas
xor
inc
stos
pop
cmp
inc
cs
sub
adc
mov
arpl
inc
mov
outsb
imul
push
loope
sbb
xor
hlt
sub
push
insl
jo
push
pusha
inc
outsb
cmpb
dec
fiaddl
xchg
pop
jb
loopne
push
adc
push
adc
add
repz
jns
xor
inc
outsb
jae
lock
pop
push
shrl
sub
and
and
mov
mov
xchg
inc
lret
xlat
mov
pusha
mov
and
and
xchg
or
adc
mov
sbb
xor
inc
inc
inc
rcrb
leave
inc
pop
sub
mov
test
bound
roll
inc
adc
ret
cmp
push
cmpsb
push
dec
xor
dec
mull
adc
adc
xor
and
xchg
pop
pop
inc
and
cmp
outsl
outsl
jp
bound
xor
add
sub
push
and
data16
dec
xchg
xchg
add
popa
std
and
sub
push
push
mov
pop
jp
and
or
dec
int3
cs
imul
sbb
scas
aas
mov
cmp
jno
mov
push
pusha
dec
push
daa
outsb
or
int3
aas
int
push
mov
sub
outsb
fs
xor
fs
inc
or
mov
jo
bound
repnz
imul
cmp
mov
dec
imul
andb
clc
outsl
mov
loop
jl
in
jmp
mov
inc
insb
inc
adc
leave
pop
scas
movsb
mov
push
sbb
cmp
xchg
or
pop
roll
push
inc
test
adc
and
inc
test
popf
stc
add
sbb
jae
in
adc
sbb
arpl
enter
scas
push
hlt
or
mov
adc
pop
sub
bound
je
adc
imul
push
test
cmp
lock
out
dec
adc
lret
push
cmp
lods
mov
mov
ja
arpl
out
inc
addr16
xor
inc
lods
call
addr16
imul
jns
mov
xchg
pop
mov
pop
cmpl
data16
fsubl
adc
out
jne
xor
xor
adc
shrb
imul
xorb
call
repnz
imul
pushf
jae
dec
outsl
aam
push
cli
mov
xor
or
sbb
cmp
xchg
cmovl
inc
xor
andl
inc
addr16
pop
jbe
mov
pop
dec
pop
stc
shll
or
or
insb
mov
sbb
jbe
add
mov
xor
xchg
lret
insb
push
or
jb
inc
mov
outsb
inc
push
and
push
enter
dec
or
loopne
fwait
orb
add
and
cltd
mov
jbe
xor
sbb
leave
xchg
pushf
adc
sbb
repz
sub
rorl
jne
mov
and
xor
mov
xor
jae
sub
subl
dec
xchg
xlat
jecxz
inc
mov
pop
jns
xchg
into
and
js
jp
and
xchg
inc
jo
pop
outsb
inc
jnp
arpl
andb
test
xor
int3
in
cmp
je
pop
scas
pop
ret
fldenv
cmp
in
sub
push
lds
dec
mov
dec
push
sub
in
jo
jb
repnz
jno
enter
call
jecxz
xchg
xor
mov
or
mov
sub
in
dec
popl
gs
adc
mov
in
dec
xchg
nop
call
pop
mov
pop
or
push
inc
pop
mov
jp
mov
adc
push
out
cmp
or
and
adc
jo
inc
lods
xchg
into
and
inc
or
dec
and
push
xor
cmpsb
stos
adc
outsl
mov
push
in
bound
adc
nop
pop
loop
xchg
push
addr16
addb
das
ds
pop
xor
jne
or
ds
adc
dec
dec
enter
sbb
cmp
cld
dec
jg
pop
pop
mov
fucomi
jmp
jmp
fs
popl
idiv
or
mov
pop
pop
mov
mov
sbb
lcall
pcmpgtb
sbb
add
lods
jbe
cmp
add
ja
popa
sub
jge
xchg
pop
test
xchg
out
scas
scas
xor
out
nop
mov
sub
scas
ds
dec
mov
xchg
sub
ss
dec
jmp
jb
adc
xor
pop
and
mov
mov
idivl
and
inc
cmp
xchg
mov
xor
mov
lret
popf
arpl
inc
dec
cmp
dec
jmp
push
pop
arpl
mov
aam
cltd
or
fs
popf
adc
ficompl
lods
stc
popa
push
and
xchg
mov
daa
rorb
arpl
adc
sub
scas
xor
enter
loopne
popf
push
pop
jo
dec
sub
mov
lahf
imull
aaa
fs
outsb
stos
arpl
xchg
add
dec
push
into
xor
jne
adcl
mov
xchg
dec
les
mov
fcoml
repnz
dec
sbb
inc
dec
sub
and
inc
push
ss
gs
data16
or
inc
dec
mov
xchg
inc
test
or
je
pop
mov
sub
nop
jge
dec
xchg
jg
push
sub
and
jbe
cmp
jp
adc
jecxz
inc
jne
push
add
xor
xor
dec
jo
dec
pop
xor
dec
jg
jo
pop
pop
insl
push
insl
jmp
push
cmp
jle
push
dec
icebp
xor
aaa
mov
fprem
and
jl
adc
adc
mov
das
stos
insl
notb
cmp
dec
push
jne
lods
dec
jb
movsl
adc
dec
push
mov
push
es
push
jns
jns
dec
imul
and
repnz
add
int3
sub
xchg
jns
xchg
adcb
push
inc
pop
dec
sbb
and
subl
je
push
imul
out
fsubrp
and
xor
dec
sbb
lret
push
jno
xchg
icebp
dec
mov
cmp
dec
js
pop
shlb
daa
in
fadds
cmp
cmpb
sub
sbb
imul
xor
xchg
push
jae
lret
iret
dec
mov
sbb
add
mov
cmpsb
outsb
dec
mov
loope
dec
repnz
adc
sub
xchg
or
jl
xchg
movsl
sbbl
inc
jae
scas
insl
or
cmp
leave
adc
inc
and
inc
jb
nop
xor
sub
and
fdivl
and
push
scas
xchg
scas
jl
lret
xor
jo
jl
popa
xchg
dec
popa
js
mov
clc
dec
sarl
mov
inc
jle
mov
and
aam
mov
mov
mov
xor
pop
lock
in
xor
pop
cmp
insb
hlt
int3
add
out
sub
inc
fisubrs
repz
inc
imul
and
nop
jle
and
sub
sub
xor
sub
xor
test
cmp
xor
cmp
addr16
mov
mov
dec
mov
in
push
clc
repz
jnp
push
sub
mov
nop
sub
dec
push
aad
dec
imul
mov
and
dec
outsb
and
in
aaa
nop
jno
push
mov
dec
jo
in
lods
push
outsl
jne
dec
sub
dec
and
mov
imul
sahf
sti
jp
sbb
cltd
jle
xchg
pop
aam
push
dec
push
xor
cmc
bound
test
stc
dec
mov
xor
mov
mov
and
mov
insb
js
in
out
mov
xchg
push
movsl
shll
movsl
and
fadds
xchg
aas
cmp
xchg
cmp
xor
xor
mov
xor
push
hlt
xchg
push
aam
das
cmp
sub
xor
xchg
bound
scas
sub
sbb
or
and
repz
dec
dec
insl
insb
movsl
sti
das
push
cld
lcall
stc
inc
lds
addr16
lods
fisubl
out
shrl
sbb
leave
pop
pop
test
mov
scas
cmpsl
scas
dec
xor
sub
data16
aas
pop
push
push
cmp
in
rcr
jae
das
jp
and
pop
in
mov
hlt
mov
push
push
idivl
push
dec
mov
cltd
aam
sub
dec
pop
pop
lods
sub
push
xor
cmp
sbb
xor
cmp
push
push
inc
fldl
aam
push
mov
int
ret
fstps
out
mov
adc
inc
dec
adc
mov
scas
dec
mov
mov
dec
ja
cmpsl
or
jmp
loop
inc
jmp
repz
ret
std
inc
mov
mov
inc
shrl
fdivp
out
inc
ret
sub
jmp
stc
decb
inc
and
orl
outsl
negb
push
in
in
inc
mov
das
ret
pop
jmp
jg
pop
dec
enter
inc
std
jbe
cld
cmc
xchg
loopne
dec
in
popf
mov
inc
repz
bound
movsl
xor
dec
cld
xchg
inc
and
inc
push
dec
mov
outsl
mov
sub
js
frstor
je
in
or
call
test
fldt
ret
jo
jae
fstl
ficoms
or
fs
aas
outsl
jne
outsb
imul
add
jo
stc
jb
cs
call
daa
popf
clc
testl
fisubl
divl
outsl
inc
dec
mov
sub
mov
mov
ror
dec
and
daa
imulb
jle
enter
insl
adc
orb
dec
pop
fisubrs
cld
ss
jne
dec
jp
and
jae
push
inc
popl
lea
or
xchg
inc
xor
pop
or
push
xor
stos
leave
das
sub
jns
inc
inc
jne
inc
jl
rorl
out
dec
test
inc
sbb
pop
xchg
stc
mov
jbe
les
je
out
aam
fs
jmp
or
mov
fs
dec
filds
xchg
jns
clc
dec
xchg
ds
jb
inc
push
lock
inc
add
loope
pushf
fcomps
push
add
dec
xor
or
cmp
dec
push
nop
adc
dec
and
stos
adc
in
ret
fucomi
ds
push
es
mul
and
inc
es
outsl
pop
xchg
fucom
fs
enter
xchg
je
push
dec
call
xchg
scas
fcomps
sbb
mov
cmpsl
fcompl
dec
ljmp
pop
test
pop
in
and
push
cmp
incb
mov
andb
sub
xchg
xlat
mov
adc
cmp
pop
mov
dec
pop
pop
mov
mov
adc
xchg
scas
adc
lcall
pushl
mov
mov
add
insl
sub
daa
imul
sub
inc
scas
pop
xor
js
cmp
add
mov
adc
cwtl
adc
or
and
dec
mov
sbb
mov
dec
or
sub
mov
adc
xchg
sub
inc
hlt
inc
in
call
aam
les
mov
mov
push
mov
dec
int
adc
jp
pop
jnp
ficoms
push
imul
jmp
in
mov
dec
xchg
cs
push
pop
inc
pop
je
push
xor
jne
dec
dec
jno
cmp
insl
mov
bound
push
outsl
shrb
jno
ret
xor
mov
aaa
mov
je
daa
mov
pop
push
xchg
sub
sbb
dec
imulb
dec
orl
xor
movsb
and
add
inc
sub
push
xchg
sti
push
push
dec
cmp
aaa
lret
push
cwtl
inc
popa
fisubrl
sbb
arpl
in
xor
push
or
arpl
jge
iret
cs
inc
mov
loop
cmpsl
inc
dec
inc
pop
cmpsl
pop
jge
outsl
je
push
and
imul
in
imulb
sti
xor
lahf
push
arpl
push
fdivl
pop
imul
inc
inc
jecxz
es
dec
hlt
jne
push
imul
mov
lcall
nop
bound
fs
cmpsl
or
arpl
or
cmpsl
pop
rcrb
sub
aaa
push
daa
fwait
jl
stos
flds
in
xor
out
fmull
repz
add
inc
and
pop
xor
cltd
sbb
mov
clc
sbb
insb
daa
popa
mov
addr16
repz
clc
fmuls
jo
cmp
dec
int
das
cwtl
mov
scas
nop
mov
subl
roll
gs
jg
xor
inc
fnstenv
cmpsl
push
setle
xchg
sbb
stc
cwtl
mov
movsb
pusha
mov
pop
test
mov
neg
xchg
dec
cmp
dec
xchg
movsb
icebp
mov
dec
sub
inc
addr16
jp
xchg
dec
in
loop
push
and
xchg
nop
xchg
ja
mov
push
inc
cwtl
test
inc
test
jmp
rorl
jo
mov
into
pop
xchg
add
xlat
xchg
add
aad
sub
cmp
ss
dec
mov
add
out
jle
inc
test
push
xchg
lret
push
xchg
or
popa
jbe
sub
dec
mov
xchg
out
jg
lahf
icebp
mov
inc
cmp
test
rclb
add
in
mov
cmpb
leave
adc
sub
xor
test
push
int3
sub
sbb
push
dec
and
lret
rclb
test
add
mov
push
sbb
stos
jns
arpl
dec
sub
daa
or
in
outsl
sbb
jmp
dec
inc
or
hlt
fmul
pop
ficomps
imul
dec
nop
nop
add
push
xchg
inc
inc
in
test
mov
cltd
je
insb
dec
or
mov
mov
mov
add
dec
sub
add
and
mov
movsb
cwtl
push
push
jne
or
xor
jmp
add
and
loopne
jo
in
push
or
adc
adc
pop
pusha
adc
aad
call
movsl
add
lods
adc
test
push
sub
xor
sbb
pop
fisubl
xor
pop
cltd
data16
inc
test
xchg
in
jo
scas
cmp
arpl
loopne
cmp
nop
daa
lcall
jmp
outsb
hlt
jne
xchg
daa
sbb
xchg
fcomps
add
loop
je
lret
adc
add
and
cs
in
sbb
mov
in
xor
arpl
mov
int
mul
pop
adc
jp
popf
jns
mov
inc
fwait
test
mov
and
dec
adcb
push
int3
ror
enter
mov
sub
in
fdivl
mov
push
adc
lods
test
sub
call
push
enter
inc
rorl
fs
push
outsb
cmc
shl
or
popa
pushf
sbb
inc
dec
data16
push
and
enter
popf
lcall
mov
arpl
dec
adc
xchg
cmp
xchg
jne
je
fwait
and
imul
dec
ljmp
jbe
js
popf
cld
and
jo
mov
sub
sbb
fwait
imul
sbb
pop
out
repz
mov
insb
les
mov
cmp
inc
lods
sbb
jns
sbb
mov
fs
mov
sub
sub
xor
mov
cltd
xor
pop
pop
fadds
dec
jns
jge
and
inc
aam
out
jne
fs
call
cmpsl
cmpsb
xchg
movsl
rcrb
insl
pop
xor
sub
mov
sbb
lret
js
pop
add
rcrl
rorl
push
xor
pop
sbb
xchg
sbb
in
cmc
or
into
nop
test
dec
cmp
jnp
outsb
jnp
insb
daa
into
je
adc
fldt
jb
mov
adc
mov
shrb
lret
lea
jne
ljmp
pop
aad
pop
inc
push
xor
cmp
repz
fisubrs
jne
sbb
add
fisubs
xor
jne
xor
mov
cmpsl
add
xor
adc
xor
xor
imul
sub
push
dec
push
dec
or
push
cmp
adc
add
popf
sub
adc
push
dec
mov
pop
cs
xchg
xor
sub
lea
ss
sub
das
dec
stc
mov
fidivs
adc
pop
sub
sbb
push
mov
push
outsb
dec
dec
mov
sub
xchg
xor
cmc
mov
push
push
adc
inc
cmp
pop
dec
outsl
mov
sub
mov
or
cli
pop
adc
push
sub
add
dec
inc
fs
imul
push
inc
jne
pushf
scas
push
mov
sar
stc
inc
mov
pop
xchg
lret
push
sub
lock
outsb
mov
cld
das
inc
xchg
add
lcall
jl
adc
sub
adc
pushf
push
jmp
mov
cwtl
push
cmp
lods
jl
push
out
aam
fidivrl
loope
xchg
nop
aaa
in
cmp
fnstsw
aad
lret
pop
xchg
rcr
inc
and
leave
mulb
adc
sbb
sub
cmp
ror
pop
ss
arpl
xchg
lret
test
sub
in
cmp
movsb
loop
jb
in
cmpsl
mov
and
outsl
stc
pop
rorl
mov
es
pop
mov
ljmp
dec
or
mov
xchg
cli
push
or
mov
mov
mov
stos
scas
sub
pop
pop
mov
stos
sub
outsb
je
mov
aas
out
outsl
loope
cltd
dec
or
inc
cmc
outsl
repz
xchg
jae
jb
and
das
iret
inc
enter
adc
mov
mov
cli
dec
in
inc
mov
shrb
mov
mov
xchg
xlat
ss
push
fs
lcall
cs
pusha
push
pop
cmp
jecxz
pop
sbb
xchg
push
cmp
sub
lea
outsb
mov
shr
fmull
or
add
adcb
pop
xor
daa
and
push
loopne
sub
inc
or
add
sbb
cmp
add
aaa
xor
scas
imull
nop
cmpsl
adc
fsubrs
fnstsw
pushf
inc
or
nop
xor
test
lea
loope
arpl
test
push
arpl
xchg
cwtl
jp
or
cmp
xchg
dec
pop
sbb
pop
cltd
ds
adc
das
jne
popf
loope
or
pop
cmp
lea
mov
cwtl
push
push
jl
mov
mov
rcrb
imul
xor
cmp
dec
js
mov
sub
adc
pop
mov
mov
nop
or
xchg
and
dec
mov
cmp
dec
and
sbb
adc
or
cld
pop
cmp
adc
adc
pop
inc
pusha
xor
sbb
and
aam
int3
add
xor
mov
dec
mov
inc
mov
and
dec
pusha
xchg
pop
and
in
xchg
mov
or
sub
and
sbb
adc
mov
pop
xor
dec
call
inc
ror
mov
mov
inc
test
adc
call
push
in
xor
in
sbb
xor
inc
or
and
dec
and
or
push
jmp
xor
clc
pop
add
and
dec
fcoml
enter
adc
xchg
movsb
and
adc
dec
fs
jle
js
adc
inc
xchg
inc
and
xor
mov
sbb
adc
or
add
mov
pop
xor
dec
aam
int3
and
inc
mov
test
mov
and
insb
adc
dec
push
xchg
dec
and
xor
sub
sbb
adc
or
cld
pop
adc
and
inc
loopne
mov
adc
and
dec
rclb
fcompl
push
adc
mov
xchg
andb
inc
jo
mov
xchg
add
fs
or
cmp
sbb
mov
cld
pop
add
and
dec
loopne
fsubs
rolb
mov
pushf
xchg
xchg
and
adc
pusha
dec
pop
xchg
push
and
xor
sub
and
dec
adc
jmp
in
mov
adc
and
dec
mov
inc
mov
test
dec
jo
push
dec
mov
cmp
dec
sub
adc
mov
push
or
mov
adc
and
dec
mov
test
pushf
inc
xchg
mov
je
insb
xchg
and
dec
mov
and
dec
sub
or
mov
push
xor
dec
fcoms
sarb
pushf
dec
xchg
xchg
mov
test
mov
and
dec
dec
xchg
inc
and
xor
mov
sbb
adc
or
lock
adc
and
dec
rclb
mov
mov
xchg
test
jl
je
mov
and
dec
dec
xchg
inc
and
xor
mov
adc
and
dec
or
stc
xchg
fs
dec
aam
enter
mov
mov
dec
test
insb
pusha
mov
dec
dec
xchg
inc
and
inc
xor
mov
adc
and
dec
or
and
inc
in
mov
adc
and
dec
mov
lods
and
test
js
jo
push
inc
push
dec
mov
xor
sub
and
sbb
adc
or
and
push
add
dec
in
fsubl
aam
int3
les
test
pushf
xchg
xchg
and
adc
pop
dec
push
xchg
dec
and
cmp
and
sbb
dec
add
clc
push
fsts
inc
fcom
mov
adc
and
dec
mov
test
pushf
inc
xchg
mov
insb
dec
fs
in
dec
adc
enter
cmp
xor
sub
mov
adc
and
pop
and
clc
push
imul
rclb
les
dec
mov
test
mov
adcb
and
dec
fs
pop
jg
inc
adc
xor
sub
and
sbb
ret
dec
add
dec
call
inc
rol
mov
mov
inc
mov
and
dec
pop
xchg
push
and
mov
or
and
inc
sbb
mov
add
cld
dec
add
dec
call
inc
ror
mov
adc
xchg
mov
mov
insb
dec
pusha
xchg
pop
and
inc
cmp
sbb
xchg
or
clc
dec
xor
dec
fcoms
mov
pushf
and
dec
mov
je
mov
and
dec
dec
xchg
inc
and
xor
mov
sbb
adc
or
add
cld
dec
and
inc
call
int3
and
dec
mov
inc
pushf
xchg
mov
dec
insb
xchg
pusha
and
inc
mov
adc
and
dec
sbb
adc
or
adc
dec
add
and
dec
fcoml
les
movsb
dec
pushf
xchg
nop
and
insb
adc
dec
push
xchg
dec
and
xor
mov
adc
and
dec
or
jmp
dec
fcoms
sarb
pushf
dec
xchg
xchg
mov
test
mov
pusha
and
dec
push
xchg
dec
and
cmp
and
sbb
dec
add
cld
dec
adc
and
inc
loopne
mov
adc
and
dec
mov
lods
and
adc
push
push
mov
inc
and
dec
xor
adc
mov
or
xchg
fsubs
rolb
mov
dec
pushf
xchg
nop
and
jo
push
xchg
push
jg
cmp
xor
sub
and
sbb
adc
ret
inc
add
dec
call
inc
rol
mov
mov
inc
mov
and
dec
pop
xchg
push
and
cmp
sbb
xchg
or
clc
inc
fucomp
and
push
or
mov
adc
pushf
and
adc
dec
fs
pop
and
inc
cmp
sbb
adc
or
add
cld
inc
loope
inc
in
mov
adc
and
dec
mov
inc
pushf
xchg
mov
je
insb
and
push
mov
and
dec
and
sbb
adc
inc
inc
in
mov
adc
and
dec
int3
xchg
les
mov
movsb
adc
xchg
andb
inc
jo
mov
and
pop
loop
cmp
mov
and
sbb
adc
or
add
cld
xor
dec
fcoms
mov
movsb
and
dec
xchg
xchg
mov
test
mov
and
dec
push
xchg
dec
and
xor
sub
and
sbb
adc
or
add
cld
inc
stc
dec
mov
in
fmull
xchg
les
mov
movsb
adc
test
jl
je
mov
and
dec
dec
xchg
inc
and
xor
mov
adc
or
and
clc
inc
jmp
or
and
inc
sarb
mov
and
adc
dec
push
xchg
dec
and
cmp
mov
adc
and
dec
adc
inc
and
or
xchg
shlb
enter
mov
dec
xchg
xchg
mov
test
mov
and
dec
push
xchg
inc
and
xor
mov
sbb
adc
or
inc
clc
inc
aas
lock
adc
and
dec
int3
xchg
shlb
inc
mov
mov
dec
mov
insb
mov
and
dec
inc
xchg
cmp
xor
sub
mov
adc
or
clc
ds
dec
mov
and
inc
enter
adc
xchg
cwtl
and
jo
push
xchg
push
and
xor
sub
and
sbb
adc
or
add
cld
cmp
fmull
les
xchg
mov
lods
inc
movsb
pushf
mov
je
insb
and
push
mov
inc
and
dec
sub
and
sbb
ret
cmp
in
dec
in
fsubl
aam
int3
les
lods
dec
movsb
xchg
pushf
and
adc
dec
fs
pop
and
and
dec
sub
adc
mov
xchg
call
rorb
mov
lods
xchg
mov
test
insb
dec
pusha
xchg
pop
and
dec
inc
mov
adc
and
sbb
cld
cmp
mov
adc
and
dec
int3
xchg
les
mov
mov
dec
mov
insb
mov
and
dec
cmp
xor
sub
and
mov
adc
das
or
fdivs
js
add
and
faddl
mov
adc
mov
mov
jo
fs
pop
and
dec
inc
mov
adc
and
dec
sbb
adc
or
adc
cmp
lock
dec
loopne
fsubs
int3
inc
les
pushf
dec
nop
xchg
mov
addb
adc
dec
dec
xchg
inc
jg
xor
sub
dec
sbb
adc
aaa
mov
xchg
fs
dec
enter
mov
mov
dec
test
push
dec
and
dec
cmp
xor
sub
and
mov
or
adc
clc
ss
movsb
pop
or
adc
and
dec
les
test
mov
jl
jo
push
dec
adc
dec
xor
sub
and
mov
pop
or
das
adc
dec
enter
mov
dec
push
fmul
mov
and
insb
mov
and
dec
dec
xchg
inc
and
xor
mov
adc
or
add
cld
xor
hlt
and
inc
loopne
mov
adc
and
dec
mov
test
mov
test
jl
je
insb
xchg
and
dec
mov
clc
xchg
sub
and
mov
cld
xor
in
faddl
mov
adc
xchg
mov
mov
jo
push
inc
push
inc
mov
xor
sub
and
sbb
adc
ret
xor
dec
call
inc
enter
adc
xchg
xchg
and
adc
dec
push
xchg
dec
and
xor
sub
and
sbb
adc
xor
jmp
xchg
fsubs
rolb
mov
dec
pushf
xchg
xchg
and
adc
dec
push
xchg
dec
and
xor
sub
and
sbb
adc
or
add
cld
xor
mov
adc
and
dec
int3
xchg
les
mov
movsb
adc
xchg
jl
jo
push
push
and
dec
inc
xchg
cmp
sub
and
mov
adc
adc
hlt
das
jmp
or
xchg
enter
mov
mov
xchg
test
jl
jo
mov
and
dec
inc
xchg
cmp
xor
mov
or
add
cld
cs
xchg
in
fadds
mov
js
mov
test
mov
test
jl
je
push
inc
inc
cmp
sbb
adc
or
add
cld
sub
in
fsubl
dec
int3
xchg
les
mov
pushf
adc
jl
je
insb
pusha
mov
push
and
dec
inc
xchg
xor
sub
xchg
sub
pop
and
or
add
cld
sub
lock
call
int3
and
dec
mov
lods
and
adc
xchg
and
dec
mov
and
dec
sub
or
and
sub
and
loopne
fmul
mov
adc
xchg
mov
test
insb
dec
fs
pop
and
inc
mov
xor
sub
and
sbb
adc
or
outsb
sub
xchg
js
in
or
adc
and
dec
mov
inc
cwtl
nop
mov
dec
jo
push
dec
mov
and
dec
sub
and
sbb
mov
sub
loopne
fcoms
sarb
pushf
dec
xchg
xchg
mov
addb
adc
dec
dec
xchg
inc
and
xor
mov
adc
or
add
cld
sub
shrb
adc
pop
and
or
movsb
pushf
mov
js
jo
push
dec
adc
dec
xor
sub
and
mov
cld
daa
mov
or
and
dec
fcoms
sarb
mov
and
insb
adc
pop
dec
push
xchg
inc
and
xor
mov
adc
and
dec
add
cld
es
in
aam
mov
adc
and
dec
mov
movsb
and
jl
je
insb
dec
push
inc
dec
inc
mov
sub
dec
adc
shll
and
dec
int3
xchg
les
mov
pushf
adc
xchg
test
js
je
mov
pop
and
dec
inc
xchg
cmp
xor
xor
and
sbb
adc
clc
and
xchg
or
and
inc
rol
mov
dec
movsb
xchg
cwtl
and
adc
dec
dec
xchg
dec
and
xor
sub
sbb
sbb
scas
jl
cltd
adc
add
or
and
mov
adc
and
dec
loopne
aam
les
mov
dec
mov
jo
mov
and
dec
inc
xchg
xor
sub
mov
or
sub
fmuls
mov
mov
movsb
and
adc
inc
sbb
call
adc
jbe
jo
jns
ljmp
pusha
cmc
jp
sbb
sbb
ds
insl
test
jb
or
ja
jmp
popa
dec
cmc
je
jns
or
jo
addr16
push
xchg
mov
ret
inc
fisubrs
scas
push
pop
das
je
xchg
imul
mov
adc
shlb
mov
xchg
les
sbb
jne
ffreep
addr16
shlb
mov
mov
test
push
mov
popf
and
push
nop
or
mov
and
pop
pop
clc
push
inc
test
testb
outsl
inc
dec
int3
or
cmp
jbe
push
arpl
xchg
pop
sbb
fs
xlat
int3
add
sbb
jge
ja
mov
mov
sbb
mov
nop
and
or
jle
aam
adc
mov
or
inc
scas
or
mov
sbb
or
subl
inc
out
shl
push
mov
sub
lods
arpl
ss
cs
bound
or
lcall
lods
iret
xchg
movsl
js
ljmp
and
subb
out
sbb
push
and
mov
jecxz
push
xchg
mov
fisubl
and
mull
es
or
adc
mov
sbb
xor
cltd
sbb
mov
shl
xor
sub
popa
xchg
jl
mov
or
pusha
mov
insb
sbb
or
push
imul
lea
push
test
mov
xchg
lahf
cltd
or
in
inc
mov
xor
and
sbb
xlat
stos
mov
xchg
jns
sbb
sbb
bound
subb
js
pop
call
adc
imul
fwait
mov
xor
outsl
ljmp
or
cmp
dec
inc
sbb
xor
js
adc
mov
js
mov
sbb
dec
inc
enter
xchg
or
push
sbb
push
or
bound
adc
pusha
nop
cmp
and
xchg
mov
mov
xchg
pop
lret
fstsw
jne
fwait
inc
cs
js
dec
push
fstps
xor
xchg
hlt
jb
repz
or
xor
ds
rcll
mov
lods
adc
mov
ss
or
and
lcall
jo
jp
jb
stos
or
loop
clc
fdivp
jae
xchg
arpl
lea
rclb
ret
push
pop
mov
pop
push
sbb
or
or
movsb
fwait
insb
sbb
popf
lret
cld
push
sahf
xor
push
or
sbb
xor
fs
lods
push
adc
outsb
adc
outsb
adc
and
data16
shrb
pushf
int3
ja
insl
cltd
or
test
or
js
nop
or
imul
jb
ret
or
or
push
or
or
mov
pop
stc
inc
push
dec
xchg
push
rorl
movsl
jno
sbb
mov
xchg
lock
loop
dec
sbb
xchg
adc
es
adc
rorb
dec
gs
push
dec
stos
cmp
adc
test
or
mov
shlb
and
jbe
iret
xchg
xor
test
adc
or
jl
cwtl
jns
or
xchg
adc
mov
push
out
jae
es
dec
and
xchg
jbe
cltd
xlat
jb
or
mov
push
jo
dec
mov
adc
adc
or
pushw
dec
xor
jp
adc
insb
dec
cmp
imul
jge
mov
xlat
adc
sub
mov
sbb
int3
test
adc
outsl
jecxz
in
sbb
sbb
cmpsl
pop
test
or
add
or
push
or
nop
mov
incl
or
clc
pop
leave
adc
or
iret
push
pop
jne
inc
fdivrl
test
mov
jae
pop
arpl
mov
or
xchg
xlat
adc
aam
mov
pusha
fists
push
lock
lret
imul
mov
mov
adc
or
cmp
mov
arpl
fsubs
xchg
sub
inc
xchg
sub
sahf
pop
addr16
xlat
or
cmp
sbb
sbb
jns
xlat
or
adc
jb
test
and
dec
push
sbb
jnp
test
adc
lds
and
mov
cli
mov
sbb
imull
jns
lret
aam
arpl
mov
imul
pop
xchg
arpl
xchg
fiaddl
adc
and
jb
or
pop
lahf
sub
fsubr
or
or
cmpsb
lock
push
lock
xlat
or
popa
xor
mov
data16
outsb
adc
mov
inc
sbb
xor
adc
loope
adc
mov
test
mov
push
or
insb
inc
js
sahf
aas
lds
mov
dec
xor
and
adc
push
in
or
cwtl
dec
push
jae
push
or
flds
xchg
cwtl
jns
dec
jb
cmp
shlb
inc
aam
pop
pop
sub
gs
ret
adc
xor
mov
or
xchg
imul
inc
and
imul
movsl
stos
mov
shrb
jmp
cwtl
testb
sbb
xor
adc
je
arpl
mov
jb
xorb
jp
shrb
cmpl
test
cmp
pop
pop
pop
and
lods
outsl
xchg
cmp
sbb
dec
jo
push
jae
cmp
outsb
mov
popa
sbb
adc
inc
pusha
dec
mov
and
dec
and
or
bound
xor
jne
xchg
pop
lods
xchg
lods
loope
imul
rol
xchg
sbb
das
sbb
mov
inc
adc
xor
adc
inc
and
adc
or
mov
out
adc
or
insb
mov
mov
pushf
cs
xor
xor
and
aam
je
xor
in
mov
arpl
imul
and
xor
stos
and
or
scas
sub
outsl
sbb
or
clc
icebp
std
je
sbb
cld
test
mov
insb
adc
jb
in
adc
xor
adc
loop
or
arpl
scas
jbe
notl
arpl
mov
sbb
fs
adc
jns
dec
hlt
xchg
push
push
insb
and
cmp
out
adc
js
sbb
or
outsb
out
lcall
adc
adc
data16
int
loope
cli
xchg
push
jp
dec
pop
lods
and
ret
sbb
or
cltd
mov
mov
inc
icebp
mov
sub
adc
ss
adc
jne
xchg
fld1
movsb
adc
adc
adc
sbb
or
or
sub
fcoml
adc
jmp
push
dec
mov
and
inc
lds
pop
insb
and
or
mov
adc
pop
jns
adc
xor
les
adc
lock
adc
test
adc
or
imul
mov
cmp
xor
dec
js
sahf
cmp
or
cmp
repz
and
mov
or
imul
fs
adc
in
ljmp
mov
adc
adc
and
insb
mov
push
test
adc
dec
movsb
jge
dec
or
sarb
jl
mov
or
aaa
sbb
adc
lock
cmp
pop
adc
and
insb
push
or
gs
out
adc
add
inc
jae
mov
imul
sub
outsb
aaa
xor
stos
adc
or
or
inc
orb
adc
inc
or
cmpb
out
test
mov
push
or
and
sahf
sub
jns
push
js
or
or
into
insb
xor
test
outsb
or
mov
enter
outsb
xor
mov
arpl
lds
adc
inc
fistl
inc
pop
adc
clc
out
and
or
or
adc
xchg
and
push
bound
push
andl
jb
mov
or
sub
cltd
adc
jmp
xor
cli
lea
pop
sbb
nop
dec
leave
fs
lret
bnd
out
ja
outsb
arpl
pop
test
jno
inc
popa
jne
adc
dec
cmp
insb
mov
or
scas
inc
loopne
xchg
jge
adc
push
xlat
adc
or
mov
adc
mov
test
push
or
dec
dec
pop
adc
testb
mov
mov
dec
mov
or
shlb
cltd
push
add
ljmp
and
ret
add
call
fucomip
sbb
sub
jb
xor
xlat
jbe
sub
or
adc
lds
and
push
or
xchg
mov
dec
lret
sub
arpl
sub
jae
adc
hlt
inc
xchg
or
and
lods
adcl
sbb
and
mov
imul
and
mul
adc
cs
adc
and
jb
inc
or
dec
adc
lcall
adc
cld
jbe
call
or
jo
lret
sub
frstor
fistpl
inc
adc
jbe
test
jns
test
mov
jno
cmc
push
or
mov
adc
dec
jl
xor
aaa
sub
dec
push
outsb
int
or
jae
adc
adc
std
inc
ficoml
loope
js
adc
push
dec
in
push
inc
or
mov
scas
out
inc
ljmp
dec
test
or
arpl
repnz
rcr
pop
xchg
dec
adc
adc
and
nop
push
pop
sbb
outsl
mov
in
xchg
mov
addr16
mov
outsl
cmc
jne
adc
mov
adc
fisubrs
push
sbb
xchg
cmp
or
fs
lahf
push
jae
pusha
js
and
xchg
js
or
or
shlb
rclb
imul
or
nop
outsl
adc
fs
xchg
lods
imul
adc
or
mov
adc
out
pop
aaa
dec
int
jl
cltd
adc
movsb
lcall
fisubrl
sub
das
rorb
lods
popf
jb
sbb
jmp
cli
insl
jno
movsb
xchg
movsl
inc
js
or
sbb
lock
cmpsb
xchg
orb
sahf
je
outsb
jns
popf
lcall
test
stc
sub
adc
insl
ja
fs
insb
insl
mov
js
cmpsl
mov
fs
or
push
js
jge
or
dec
lds
adc
jle
adc
in
and
cmp
or
mov
rorl
cltd
lods
cmpsl
adc
ret
or
rol
xchg
dec
or
fs
adc
dec
mov
or
or
adc
inc
popa
jbe
or
mov
xor
das
je
test
push
sbb
adc
repnz
dec
mov
popf
adc
popa
dec
adc
leave
insb
jecxz
jp
cmc
xor
sbb
test
adc
jne
cwtl
int
sub
or
je
mov
xchg
arpl
push
sub
sub
or
push
or
push
and
dec
or
clc
sti
inc
or
lahf
fadd
lret
pop
cmp
dec
orl
jp
fs
mov
adc
mov
or
pop
bt
rclb
or
or
imul
lret
or
cmpsb
or
or
popa
adc
frstor
or
adc
jbe
pop
test
or
and
cmpsb
dec
fwait
jns
out
jp
dec
ret
fxam
pop
or
mov
lret
repz
adc
hlt
or
inc
or
es
push
sahf
or
lea
mov
adc
and
int
imul
xor
cmp
adc
sbb
outsb
push
or
imul
sbb
xchg
jae
sbb
in
xor
fs
jb
outsb
xchg
and
and
arpl
xor
mov
repnz
adc
jne
or
incl
je
mov
addr16
inc
or
outsl
push
adc
ficoml
cmp
fs
dec
cmp
adc
mov
loope
je
or
and
jns
dec
jae
push
movsl
mov
and
bound
pop
push
imul
rcll
xchg
loope
or
adc
push
arpl
mov
cwtl
fisttpl
inc
adc
in
fcompl
rolb
sub
mov
lods
fbld
pusha
cmp
je
and
jo
or
jmp
xor
mov
imul
fcmovu
or
bound
sbb
ss
gs
bound
or
imul
das
inc
xor
jns
or
push
das
setbe
mov
xor
lds
sub
fists
lods
cld
iret
adc
popa
adc
push
jns
ds
stc
push
adc
outsl
je
adc
cltd
shlb
or
popa
lods
mov
jp
mov
adc
jbe
leave
test
in
lret
outsl
std
aam
or
sub
out
adc
adc
dec
mov
sub
mov
jae
or
jle
inc
pop
insb
mov
sbb
das
in
mov
fsubl
aas
mov
into
ficoml
push
test
or
loop
push
xchg
xor
mov
cmp
jns
push
mov
or
add
and
outsb
sbb
dec
incb
js
outsl
or
fwait
push
insl
or
or
fs
or
fwait
ja
adc
xchg
sub
jbe
sbb
enter
push
pop
or
cmp
movsb
outsb
lods
sbb
adc
sbb
lock
sti
dec
or
adc
xchg
xor
or
gs
ja
outsb
jp
inc
lods
cwtl
push
jo
push
adc
je
outsb
adc
jns
lods
add
adc
xor
imul
push
xor
adc
scas
mov
cmp
gs
jg
outsb
push
jns
dec
mov
inc
lret
or
jns
imul
out
or
call
mov
adc
movq
test
dec
pop
fsts
outsb
adc
imul
or
and
add
sbb
inc
jbe
leave
fcomps
test
les
imulb
std
je
xor
fadds
sub
jae
lods
imul
mov
jbe
lods
daa
stos
jae
rclb
push
mull
or
popa
or
xchg
push
or
or
xchg
sub
and
cmp
and
xchg
sub
cmp
mov
or
leave
push
jae
div
lcall
dec
jno
mov
je
dec
or
je
les
or
sub
dec
int
jl
push
enter
fidivl
push
pusha
iret
adc
inc
outsl
mov
or
les
ss
dec
or
imul
sbb
insl
in
fsubs
jle
jne
rcrl
inc
mov
or
or
or
insb
push
mov
mov
dec
or
or
sub
scas
int3
xor
sbb
jecxz
mov
or
js
insb
adc
imul
dec
sub
sbb
jnp
sbb
test
or
cmp
or
fs
or
sub
int
mov
rcrb
lds
fiaddl
inc
or
adc
mov
push
rclb
or
jg
or
jmp
outsl
xchg
mov
push
cs
or
and
mov
test
push
or
adc
test
adc
jl
dec
cwtl
or
adc
call
addr16
sbb
sbbb
out
lea
adc
imul
mov
push
mov
sbb
inc
fs
fwait
inc
or
or
mov
sbb
push
dec
jae
push
adc
hlt
xor
and
lods
lods
lahf
and
insb
ljmp
xor
adc
fucomip
jmp
js
mov
adc
insb
imul
mov
xor
mulb
and
test
and
jne
leave
pop
fsub
dec
or
cmp
mov
sti
stos
mov
dec
repnz
outsl
in
mov
jbe
insb
movsl
sbb
xor
sbb
adc
adc
hlt
inc
or
xchg
adc
push
xor
or
adc
pushf
mov
insb
adc
or
stc
popa
push
sub
mov
mov
pop
push
jmp
or
xor
or
popa
imul
outsb
mov
jecxz
jae
int
jne
jmp
adc
sub
sbb
test
or
imul
gs
in
cwtl
xchg
out
rorb
xchg
fidivl
xor
push
adc
nop
or
loop
add
or
sub
ja
pop
mov
outsb
inc
inc
popf
mov
adc
dec
lret
adc
lret
rorb
fcmovb
adc
aam
mov
das
pop
adc
mov
adc
aam
dec
lock
mov
dec
adc
or
shlb
mov
test
jns
enter
stos
xchg
push
sbb
into
jb
mov
aaa
fidivl
insl
fcmovnb
test
push
enter
je
jmp
adc
dec
mov
xchg
adc
jb
jp
stos
inc
shlb
adc
sbb
cmp
stos
dec
cmp
int
dec
mov
lcall
mov
add
or
cmpsb
cltd
outsl
adc
jns
movsl
seta
movsb
sbb
adc
imul
or
cmp
mov
arpl
dec
arpl
call
push
or
push
aam
sbb
push
sahf
ret
add
adc
addr16
aas
divl
pop
or
sub
lret
mov
sbb
lods
or
sbb
push
in
sbb
insl
adc
repnz
mov
dec
jp
stos
adc
jae
sbb
jbe
jne
out
mov
hlt
test
mov
xchg
fwait
or
les
or
xor
adc
test
and
pop
xchg
addl
addr16
ror
aaa
xor
in
sub
and
das
call
lahf
cmp
adc
push
adc
or
insl
je
call
or
and
inc
adc
xchg
in
loopne
jb
xchg
data16
popf
loop
aam
mov
adc
je
sbb
and
or
enter
jle
mov
jb
jns
mov
or
or
xchg
xchg
xchg
bound
cli
rorb
inc
or
sbb
jno
xor
xchg
and
mov
adc
jp
mov
test
nop
sbb
sarb
adc
dec
adc
lcall
adc
pop
cmp
arpl
nop
lods
mov
je
jo
adc
addb
xor
push
and
mov
into
mov
push
or
adc
push
inc
mov
push
loopne
les
xor
data16
xchg
xchg
or
mov
or
or
cmp
adc
adc
je
and
dec
or
push
sub
aad
popf
arpl
adc
mov
or
or
xor
nop
mov
fnstcw
inc
mov
aas
mov
or
lret
or
stos
or
jbe
and
int
ss
dec
test
or
sub
ljmp
or
pushf
ja
sarb
movsl
jl
mov
adc
mov
or
mov
fisubs
jns
cld
sbb
adc
jo
cltd
or
dec
push
mov
xchg
scas
xchg
in
es
rorl
adc
or
sbb
inc
insb
push
or
mov
adc
or
sbb
xchg
xchg
or
or
stc
pushf
sbb
jno
jns
mov
adc
or
jae
bound
adc
sub
fiadds
notb
sahf
push
imul
in
xchg
shll
push
cmp
mov
pop
in
popa
push
or
or
pop
and
icebp
and
or
adc
mov
jbe
js
sbb
pop
add
or
shll
fsubl
imul
push
inc
or
adc
mov
jo
adc
or
mov
inc
adc
mul
inc
sbb
movsb
or
popa
je
or
mov
shll
je
icebp
das
adc
xor
sbb
cmp
sbb
xor
cmp
add
xor
into
fdivs
push
and
test
push
outsl
xchg
test
ficoml
pop
cmp
scas
xchg
mov
and
pop
adc
push
mov
inc
orl
push
mov
mov
in
imul
and
cmp
push
cmp
sbb
cli
sbb
gs
test
push
push
mov
adc
mov
mov
or
jb
gs
shrb
or
inc
outsb
mov
data16
push
insb
or
inc
imul
push
xor
or
sbb
outsl
xchg
or
icebp
or
sti
jp
mov
xchg
dec
adc
in
popf
adc
inc
pop
adc
sub
stos
gs
mov
inc
pop
leave
dec
test
or
roll
xchg
gs
mov
or
pop
add
lods
int
clc
adc
insl
popa
jo
lods
pop
sahf
in
outsl
adc
outsl
adc
jae
std
sub
push
adc
push
jecxz
shlb
mov
adc
sub
adc
mov
inc
or
lret
or
out
or
or
xchg
adc
loopne
adc
outsb
jp
sub
adc
lahf
hlt
add
or
out
fs
dec
jb
or
jns
ficomps
adc
sub
or
adc
push
mov
adc
or
adc
gs
adc
xor
call
cmp
inc
or
data16
adc
leave
adc
fsubs
hlt
inc
or
mov
sub
adc
mov
in
sbb
mov
xor
jns
dec
push
je
dec
jp
cmp
push
imul
aad
jnp
xor
mov
pushf
test
adc
jns
xor
fstps
adc
or
stc
inc
or
adc
sbb
insl
js
adc
inc
loope
scas
adc
pushf
sbb
xor
adc
outsb
mov
aaa
enter
jmp
sub
adc
xor
jne
jne
sbb
or
xor
and
adc
sti
adc
or
and
jo
xchg
sbb
stc
adc
js
fiaddl
pop
mov
inc
or
imul
xchg
dec
sbb
sub
aam
addr16
or
or
out
icebp
insl
add
fs
xor
push
jge
xchg
mov
mov
mov
repz
arpl
fadd
or
lcall
fldcw
and
push
je
jbe
mov
xor
pop
sbb
adc
mov
mov
xchg
dec
push
sbb
adc
dec
mov
dec
js
push
adc
inc
or
insb
pop
xchg
mov
jge
mov
adc
dec
sbb
cmp
call
and
lea
push
adc
push
js
push
sub
adc
and
and
sbb
mov
mov
into
adc
push
jecxz
rcrb
jp
pop
shr
and
and
daa
push
adc
adc
aaa
push
adc
gs
lods
ljmp
xor
fimuls
xchg
sarb
push
jg
adc
movsb
lahf
imul
mov
bound
ja
or
adc
sarb
sbb
xor
sub
push
sub
sbb
sub
repz
mov
pop
ljmp
jp
js
jbe
jns
bound
jg
push
pop
and
xor
fs
cmp
xchg
mov
fdivs
and
ret
dec
dec
adc
mov
mov
fldcw
adc
pop
jo
xor
fs
sub
or
or
push
or
dec
or
jp
insb
lret
bound
and
out
out
in
mov
inc
xor
mov
mov
mov
rorb
add
add
ss
test
jge
xor
icebp
jg
out
insb
cmp
jae
xchg
hlt
imul
gs
mov
fnstsw
cmp
dec
stos
xor
lea
fs
mov
mov
and
or
cmp
outsb
adc
xor
xor
mov
sbb
lcall
or
and
or
pushf
and
inc
jo
clc
sbb
call
or
or
jg
xor
scas
mov
das
int
outsb
leave
cmp
call
fidivrs
adc
inc
inc
dec
push
push
sbb
sti
pop
arpl
nop
cmp
dec
ja
adc
push
dec
mov
dec
call
dec
mov
pop
push
bound
sub
dec
sub
mov
mov
dec
jae
sbb
dec
sahf
add
aad
or
push
inc
sbb
aam
dec
push
push
cmp
test
dec
push
dec
dec
xor
adcl
sub
push
repz
dec
mov
adc
leave
mov
push
scas
popf
je
js
stos
push
js
cmp
shll
add
js
je
dec
sub
xor
les
test
stc
sub
test
lahf
inc
mov
cmp
push
int3
inc
or
gs
sbb
int3
loope
cvttps2pi
cmp
or
add
and
cs
dec
add
sub
cltd
loop
fisttps
imul
fidivl
inc
cmpsl
cld
in
jle
jb
sti
or
mov
scas
lea
in
aas
std
adc
or
cmp
jl
stos
adc
push
push
call
and
jl
enter
push
mov
dec
mov
push
mov
inc
orps
inc
push
repnz
jle
subb
dec
lret
sahf
aam
jb
xor
movsl
mov
ds
xchg
ljmp
lret
jns
aas
lret
das
stc
cld
lds
inc
fistl
adc
mov
xchg
jb
xchg
pop
lods
outsl
pop
sbb
and
repnz
jle
dec
aas
loopne
cld
rcll
ss
jns
pop
mov
xchg
and
jo
push
fcoms
in
testl
mov
mov
mov
add
sti
jg
je
aam
pushf
cs
sub
xor
addr16
das
or
or
je
jne
push
xor
shll
mov
out
ss
fs
fsub
sub
pop
jnp
xor
fldl
and
sub
xchg
aad
jl
mov
jne
push
insl
sti
xor
gs
incl
les
cwtl
scas
nop
shl
fs
shll
dec
add
jle
mov
imull
sahf
push
ss
pop
mov
and
sahf
push
je
fldcw
ja
cmp
xchg
cld
popa
je
inc
adc
xor
xchg
and
push
outsb
and
sbb
or
cmp
gs
mov
lods
arpl
mov
lretw
and
pop
gs
stos
gs
sbb
add
push
pop
push
arpl
cmp
pop
in
test
mov
jb
push
push
dec
add
adc
fidivrl
pop
clc
and
lcall
inc
push
aaa
push
daa
push
adc
push
cwtl
out
xchg
popa
xlat
jg
mov
pop
add
dec
pop
inc
test
test
aad
pop
scas
jle
inc
dec
repnz
xchg
cmp
in
mov
decl
or
inc
pop
pusha
cli
inc
js
cmp
sbb
adc
jp,pn
dec
xor
and
sahf
push
sar
js
jns
xchg
jae,pn
push
out
leave
gs
push
jnp
stos
imul
lcall
dec
jae
gs
lret
pop
in
sub
dec
lds
pop
leave
das
jle
out
adc
pop
outsl
sti
imul
jp
sub
push
aaa
enter
jp
pop
xchg
and
sub
push
fdivrs
pop
sub
push
repz
and
cmp
ljmp
lods
jg
and
js
stos
or
jne
pop
outsl
lods
pop
cli
das
add
sub
inc
cmc
and
inc
sbb
jns
and
rclb
movsl
mov
cmp
jp
insl
inc
jge
outsl
push
cld
push
jmp
sub
dec
xor
inc
divb
cmpsb
jmp
xlat
jo
mov
jb
xlat
jns
das
push
mov
popa
out
xlat
pusha
push
jns
mov
ljmp
sti
xlat
shrl
mov
mov
movsb
mov
in
mov
mov
pop
jns
movsb
cmpsb
sbb
jnp
pushf
shlb
dec
mov
adc
xor
adc
push
xor
stos
in
push
jae
popa
ja
cmp
xchg
in
mov
hlt
inc
jae
cmp
jl
mov
or
push
lods
sub
jg
cmp
cmp
mov
cmp
out
sub
mov
cmp
jp
sbb
inc
sarl
mov
inc
pop
add
xor
jp
jp
jg
jecxz
and
imul
xor
jle
dec
inc
repz
imul
lock
mov
and
pop
mov
push
xchg
hlt
jl
xchg
jb
or
pop
and
cmp
pop
pop
movsl
das
push
adc
cmpsl
or
out
sti
dec
sub
imul
push
xor
pop
inc
dec
js
cmp
out
cmpsl
fnstsw
in
xchg
jbe
je
push
xor
add
outsl
pusha
pop
push
lea
scas
out
cmc
scas
jecxz
in
sub
out
jns
jb
icebp
out
movsl
loop
aas
sub
loop
fcoml
sahf
cwtl
and
jae
mov
push
push
repz
or
in
dec
outsl
push
shrb
xor
jmp
out
inc
push
mov
adc
je
andb
shll
push
sbb
mov
in
insb
je
push
inc
mov
lret
mov
pop
dec
sbb
gs
inc
cmc
lods
mov
jns
shl
adc
inc
dec
stos
pop
hlt
rclb
test
popf
jbe
push
pop
stc
aaa
sbb
aaa
pop
leave
jg
popf
cmc
cmp
dec
inc
xchg
adc
fiaddl
inc
stos
sbb
scas
push
mov
sbb
pushf
inc
inc
cmp
jae
loop
cltd
das
ds
jp
rcl
nop
aam
inc
xchg
inc
clc
push
cmpsl
jne
leave
push
inc
cwtl
mov
test
popf
jecxz
in
ret
movsb
sub
and
pushf
mov
int
cmp
test
int
jg
or
inc
xlat
loope
decl
adc
inc
inc
inc
cmp
push
sahf
push
cmp
dec
adc
sub
push
xchg
ficoms
lret
cmp
jmp
push
pop
add
das
xor
cwtl
inc
mov
insl
jg
mov
inc
stos
into
cmpsb
push
sub
inc
push
aas
jns
pop
add
push
inc
push
fs
daa
aad
mov
mov
cmp
add
out
les
scas
cmpsl
sbb
in
addr16
xor
and
sub
fs
lods
pusha
xchg
mov
sub
jno
scas
out
fsts
sub
inc
xchg
sub
mov
outsl
aaa
mov
pop
dec
xchg
xchg
adc
arpl
insl
dec
jne
pop
call
and
sti
xor
pop
fstl
sahf
mov
push
hlt
xchg
xor
aad
sub
incb
cmp
jle
xchg
mov
in
mov
cli
test
insl
call
mov
mov
subb
test
daa
xchg
stos
fwait
sbb
xchg
inc
lret
cmp
cmpsl
mov
test
mov
xchg
cmpsb
std
xchg
out
mov
lods
cs
aaa
jl
andb
cld
mov
jb
xor
sbb
inc
repnz
pop
mov
lcall
imul
xchg
lea
and
mov
test
mull
pop
std
jnp
js
sub
sub
mov
or
inc
bswap
ja
mov
xchg
faddl
test
mov
mov
out
cld
dec
xchg
scas
mov
lock
call
dec
adc
nop
scas
inc
push
mov
adc
dec
sarb
lret
lock
sahf
gs
stc
mov
dec
inc
push
outsl
mov
jbe
les
clc
lret
hlt
in
leave
fwait
and
dec
mov
mov
fsts
sbb
add
inc
inc
push
dec
dec
cmp
jp
js
ja
jmp
inc
cmpsb
out
pop
out
push
stos
cmpsl
lds
outsl
jecxz
in
push
lahf
fimuls
xchg
je
sahf
xchg
repz
enter
out
jg
dec
push
jne
and
inc
fidivrl
pop
lea
sbb
test
mov
jl
dec
movsl
ljmp
dec
jge
dec
int3
shrb
pop
shrl
add
mov
cmp
gs
dec
stos
outsl
aam
push
mov
mov
sbb
inc
lea
push
pop
inc
je
dec
push
fbld
testl
dec
fcoms
hlt
mov
in
xchg
mov
nop
rcr
push
jle
xchg
test
sub
std
in
cmp
sub
add
int3
mov
push
or
lods
push
inc
adc
das
jns
cmpsl
jne
mov
pop
int
lods
add
jl
jge
pop
sub
mov
fdivrs
outsl
inc
stos
push
outsb
mov
js
mov
js
pop
sahf
ss
into
add
mov
and
jb
je
xchg
or
dec
gs
shll
adc
push
sarl
mov
test
test
dec
ja
pushf
pop
mov
pop
mov
dec
and
adc
mov
addr16
adc
xchg
pop
dec
or
and
jne
sub
xchg
data16
gs
xchg
mov
int3
pop
sahf
pop
dec
fistpll
lock
or
pop
fs
adc
push
shrb
fisubrs
test
sub
js
movsl
or
mov
andl
aas
sub
dec
or
movsb
inc
adc
add
lods
jb
test
mov
or
insl
mov
pop
and
mov
ret
jge
js
cmp
or
jb
nop
or
rorw
pop
add
sub
xor
ret
dec
push
mov
hlt
mull
or
adc
or
jo
or
or
push
jge
jno
iret
jmp
xor
dec
adc
sbb
ja
subb
mov
bnd
or
adc
popa
jmp
sub
and
loop
or
sub
fs
addr16
push
sub
xlat
gs
and
lret
mov
cmp
pop
lods
outsb
mov
adc
mov
int3
jp
xor
mov
out
lods
repz
dec
pop
xor
xor
imul
je
jo
cmc
dec
hlt
xchg
push
fsubrs
rclb
xor
shlb
lret
push
inc
movsl
ds
push
fwait
mov
aam
cmp
cld
in
imul
gs
fmul
push
mov
iret
xor
movsl
jge
lea
lret
xlat
out
xor
outsl
jo
cmp
ja
stos
inc
ficoms
movsb
sub
outsl
pop
inc
mov
popf
pop
mov
or
xor
mov
sbb
mov
inc
stc
lods
je
cwtl
imul
lds
call
dec
adc
sub
mov
jb
push
jl
popa
lcall
mov
pop
mov
into
fs
jbe
pop
aam
xor
data16
sub
test
inc
sahf
addr16
mov
push
data16
in
daa
faddl
aam
movsl
and
jo
or
and
inc
pop
imul
jae
pushf
and
int3
fsubr
or
or
cmp
cwtl
sbb
sub
inc
lret
cmp
cmp
adc
jno
lds
cmc
out
push
movsb
pusha
into
push
or
ja
jo
ret
adc
or
dec
cwtl
jns
or
daa
pop
enter
xchg
cmpsb
test
jnp
sub
sub
callw
jp
adc
adc
icebp
push
mov
sahf
insl
and
push
or
loope
sbb
or
sar
add
adc
ljmp
in
addr16
leave
das
or
insb
pushf
aas
outsb
test
scas
push
mov
int
mov
cmp
es
jns
pop
test
inc
sub
pop
inc
dec
inc
pop
dec
jmp
or
xor
cltd
sbb
pop
es
es
movsb
lret
jle
mov
pop
and
xchg
adc
pop
jle
data16
jne
or
stc
pushf
shrb
xchg
mov
addr16
fisubs
adc
dec
and
jmp
nop
dec
fdiv
scas
leave
test
jns
cmp
rorb
ljmp
ja
mov
mov
hlt
mov
dec
jnp
or
cmpsl
and
inc
xor
cmp
ret
cmp
lock
dec
idivb
mov
or
lahf
push
push
push
fdivrl
fiadds
jmp
add
pop
ja
mov
and
adc
sub
or
xor
rcrb
sub
mov
aaa
mov
int
insb
fcom
lret
mov
or
cmp
sub
iret
add
add
xlat
jb
pusha
inc
sub
inc
pop
cli
sub
push
push
sub
dec
or
sbb
mov
or
adc
xchg
je
mov
mov
inc
mov
adc
inc
pop
mov
and
mov
jo
mov
and
mov
push
outsb
sub
ret
mov
fnsave
sbb
hlt
arpl
xchg
repz
pop
je
dec
jo
insb
push
add
dec
jns
pop
inc
ss
dec
lret
lds
or
inc
mov
xchg
je
or
push
or
jae
mov
mov
sbb
push
xor
nop
adc
and
and
insb
imul
mov
ret
pop
xchg
lods
std
sbb
dec
cmp
in
test
fmuls
cmp
pushf
out
xor
sub
push
sub
jae
mov
cmp
mov
sbb
popf
mov
mov
jne
repnz
pop
add
or
sbb
inc
fsubrl
jp
sbb
je
pcmpeqw
cld
pop
movsl
scas
and
jmp
cmp
inc
mov
fnstenv
mov
lods
lods
or
lahf
add
std
adc
jne
inc
dec
inc
push
push
jl
push
or
or
jecxz
in
outsb
into
rcrb
add
aaa
inc
adc
or
rorb
jne
lcall
pop
mov
popa
xor
aas
pushf
sub
aas
push
cld
lods
pop
inc
dec
out
sbb
sub
sub
and
xor
leave
fucom
stos
jge
mov
xor
or
push
fnstenv
pop
hlt
dec
mov
nop
mov
jp
mov
inc
js
xchg
xor
adcl
and
xor
pop
les
xor
inc
dec
xor
or
inc
ret
in
mov
adc
and
dec
mov
mov
jl
jo
pusha
and
jb
and
dec
xor
and
cmp
and
dec
int3
xchg
shlb
inc
movsb
cwtl
mov
fs
push
and
xor
or
shll
and
dec
mov
inc
nop
and
dec
sbb
mov
adc
adc
mov
rclb
and
inc
enter
adc
xchg
je
push
dec
adc
xor
sub
adc
mov
dec
int3
in
dec
mov
mov
js
insb
adc
push
dec
dec
xchg
cmp
sub
adc
mov
mov
adc
and
dec
mov
shll
adc
fs
pop
and
xor
or
and
lock
les
mov
xchg
nop
and
adc
inc
dec
xor
add
inc
mov
les
dec
test
cwtl
and
adc
dec
cmp
sub
sbb
adc
inc
mov
fsubl
dec
les
nop
test
pusha
dec
push
xchg
dec
and
sub
mov
adc
and
mov
or
inc
mov
cwtl
and
dec
adcb
dec
mov
xor
dec
adc
add
hlt
mov
mov
or
jo
fs
mov
and
dec
sub
add
inc
mov
les
icebp
and
adc
dec
and
adc
add
clc
mov
call
shlb
mov
inc
je
mov
mov
xor
sub
xchg
or
cld
mov
in
inc
loopne
mov
mov
adcb
dec
mov
xor
sub
xchg
adc
lock
in
fsubs
dec
rclb
nop
mov
dec
pop
xchg
dec
and
xor
mov
adc
clc
mov
call
and
inc
test
mov
dec
xchg
inc
and
sub
adc
add
clc
mov
in
dec
fcoml
mov
mov
dec
fs
push
and
cmp
mov
sbb
hlt
mov
in
enter
movsb
inc
xchg
mov
pop
dec
dec
xchg
inc
and
sub
mov
pop
or
lock
xchg
or
dec
int3
xchg
mov
xchg
mov
pop
in
dec
xor
or
and
mov
loopne
aam
les
mov
dec
jo
pusha
and
inc
xor
sub
sbb
or
and
hlt
scas
inc
in
fmull
mov
mov
inc
je
mov
and
dec
sub
sbb
adc
inc
scas
loopne
enter
test
cwtl
xchg
mov
addb
pop
adc
dec
xor
sub
adc
or
and
lods
add
dec
fcoml
mov
mov
dec
jo
pusha
and
inc
xor
and
sbb
inc
cld
lods
or
xchg
in
faddl
mov
and
adc
pop
dec
dec
xchg
cmp
sbb
adc
mov
stos
sub
dec
enter
mov
test
mov
dec
jo
and
cmp
xor
and
sbb
mov
in
fcoms
int3
and
dec
mov
movsb
and
adc
cmp
xor
or
inc
test
fsubs
dec
les
test
mov
dec
insb
xchg
pusha
and
cmp
or
cld
test
jmp
enter
mov
movsb
dec
cwtl
xchg
mov
jl
jo
mov
and
dec
xor
or
inc
cmpsl
fmull
mov
test
pushf
and
adc
dec
cmp
adc
and
cmpsb
add
dec
fcoms
lods
mov
and
dec
pusha
xchg
push
and
sub
adc
hlt
movsl
and
inc
aam
mov
mov
pop
dec
mov
xor
dec
sbb
adc
add
clc
movsb
inc
call
mov
test
xchg
xchg
mov
js
push
inc
and
dec
and
dec
sti
mov
or
les
cld
mov
and
inc
enter
adc
les
cmp
dec
out
dec
lods
push
inc
or
jae
and
adc
or
push
ljmp
jns
xchg
or
inc
push
sub
dec
outsl
xchg
pop
push
xor
bound
jmp
out
inc
cmovbe
push
mov
mov
dec
test
jg
push
push
adc
loope
push
dec
dec
sbb
sub
xor
or
pop
dec
dec
pop
fmull
sub
jo
push
xor
jle
push
push
aam
and
lea
xchg
js
push
nop
and
push
dec
or
xor
mov
push
pop
jecxz
imull
push
push
inc
dec
jge
fdivl
xchg
sbb
inc
dec
xor
push
inc
inc
and
sub
inc
out
xor
sbb
push
or
sbb
dec
gs
enter
int
mov
adc
push
dec
mov
and
adc
and
xor
push
jmp
adc
inc
push
dec
adc
jnp
mov
push
inc
mov
fidivrl
jae
add
sub
mov
inc
xchg
sbb
dec
ljmp
mov
jp
mov
sub
test
add
mov
xor
mov
mov
inc
mov
sub
dec
sahf
push
sahf
inc
mov
xor
push
sub
pushf
inc
cld
es
sbb
push
inc
cmp
jle
push
cmp
pop
sbb
scas
add
inc
push
dec
cmp
mov
push
testb
js
push
mov
aaa
js
xor
mov
sub
dec
push
aam
outsl
mov
cmc
xor
xor
aad
es
jnp
sbb
cmpsl
in
addr16
add
ss
ret
jmp
pop
and
les
dec
sti
pop
sub
or
lret
or
push
sbb
xor
pop
and
xor
sbb
in
js
pop
xchg
cwtl
xor
mov
sbb
and
leave
jle
sub
cmp
jno
dec
sarl
mov
or
jl
inc
xor
pop
dec
add
addl
leave
sbb
std
xor
or
lret
scas
inc
sub
orb
in
stos
test
push
dec
dec
aad
sbb
xchg
lret
nop
aad
mov
mov
adc
insl
enter
mov
mov
dec
mov
std
addr16
dec
pop
jle
dec
loop
lods
cmp
inc
fcoml
addl
inc
dec
js
icebp
dec
xor
xor
cmp
adc
xor
or
or
pop
jns
adc
dec
mov
fs
sub
jl
xchg
dec
mov
xchg
dec
xor
nop
adc
jbe
sbb
mov
mov
push
lea
push
sahf
dec
or
sbb
push
sbb
jo
dec
xchg
icebp
dec
mov
or
sbbb
lods
cmp
xchg
dec
push
test
je
xor
bound
push
aad
ja
dec
test
sub
sbb
out
nop
inc
pop
xor
jae
scas
fs
and
imul
push
jno
sbb
sub
pop
jge
or
mov
movsl
inc
inc
cmp
inc
mov
sbb
inc
and
mov
cmpsb
dec
mov
push
scas
or
dec
lcall
mov
adc
sub
push
inc
cli
lret
jbe
and
dec
sbb
ffree
test
hlt
mov
xor
pop
mov
imul
movsb
stos
fcmovnu
aam
loope
cli
push
repz
push
inc
dec
or
dec
rolb
inc
mov
mov
dec
push
mov
dec
xchg
test
adc
cmp
repnz
idivl
sbb
xchg
sub
imul
xor
sub
xchg
or
jmp
loop
pop
aad
or
lods
mov
xor
xchg
adc
jl
mov
push
push
push
test
jae
and
xor
enter
mov
sbb
movsb
shlb
xchg
push
test
push
mov
iret
dec
dec
cmc
dec
fisttps
push
test
inc
out
lcall
xchg
mov
inc
push
sbb
inc
lods
mov
cmpsl
imul
sub
push
loop
ret
mov
dec
inc
gs
sub
adc
pop
sarl
push
inc
sbb
push
aaa
sub
push
add
lcall
stc
sub
jae
dec
pusha
mov
sub
inc
push
cmp
in
inc
adc
jmp
lret
jmp
adc
mov
jmp
inc
fstl
lcall
xor
dec
xchg
dec
push
mov
dec
out
dec
and
cltd
outsl
dec
or
push
sbb
mov
call
dec
or
inc
inc
lods
xor
mov
imul
pusha
test
or
jle
fsubrl
stos
xor
or
rolb
xchg
js
push
inc
cmc
dec
push
adc
mov
inc
int
adc
je
sbb
cmp
mov
loop
xchg
in
jns
fstps
inc
cmp
mov
inc
sub
sbb
xor
pop
into
aaa
pop
mov
inc
lds
mov
and
cmpsb
and
cmp
fs
cmp
sub
dec
std
push
add
dec
pop
aaa
ss
xor
mov
dec
adc
xor
push
cmp
movsb
mov
sahf
jb
sub
pop
jb
adc
lods
dec
mov
mov
dec
scas
in
inc
xchg
dec
int
scas
mov
cmp
push
adc
repz
adc
sub
and
lahf
ret
adc
ds
lcall
dec
push
push
cld
outsb
js
pop
and
adc
jg
xor
and
in
sbb
sbb
lret
jno
sbb
push
in
inc
imul
sub
es
arpl
popa
test
add
lcall
cmovge
repz
repz
and
test
or
outsb
xlat
orl
fs
dec
aam
sahf
inc
decl
adc
xor
pop
push
push
pushf
pop
push
cmp
inc
mov
inc
push
pop
jl
js
and
ds
addb
jecxz
cs
aaa
sub
mov
xchg
data16
inc
push
xchg
or
gs
push
test
push
dec
mov
loop
nop
or
push
pop
dec
push
or
test
cmp
push
test
cmpsb
and
adc
lods
push
inc
test
adc
dec
sbb
fiaddl
dec
inc
sub
lds
repnz
sub
mov
fdivs
pop
sub
xor
mov
cwtl
sbb
aam
imul
jo
sbb
sub
or
sarl
jo
push
adc
inc
adc
imul
mov
push
sub
cmp
cli
pop
movsl
push
and
lret
cld
cmp
rcll
jno
sub
dec
fidivs
pop
clc
jae
inc
inc
cmp
dec
mov
push
or
pop
fsubrl
mov
adc
and
fs
sub
jno
pusha
sbb
adc
sti
cmp
adc
int3
mov
xchg
lret
sbb
inc
jle
jno
push
in
test
sbb
xor
xchg
adc
mov
outsb
push
mov
sbb
inc
jo
ja
push
scas
sbb
dec
dec
repnz
mov
and
dec
mov
xor
xor
fimuls
sub
mov
out
test
test
and
pop
xchg
push
adc
in
jle
sub
dec
or
mov
adc
or
dec
cwtl
mov
push
or
lret
sbb
pushf
clc
jae
and
inc
push
imul
cmp
cmp
or
dec
cmc
push
es
sbb
dec
xor
xor
adc
stos
mov
cmp
and
inc
sub
sahf
dec
call
lcall
outsb
cmpsb
and
dec
loop
mov
enter
aad
sbb
sbb
and
movsl
push
aad
shlb
js
fcmovnu
push
decl
icebp
dec
sbb
sbb
repnz
pushf
sbb
xor
lock
mov
in
and
pop
std
je
mov
xchg
pop
xor
mov
sub
dec
loope
sbb
and
sbb
testl
mov
mov
jb
shlb
ds
test
pop
adc
les
or
sti
pop
cmp
lods
sub
pusha
aad
and
enter
dec
adc
sbb
lock
insl
icebp
rcll
iret
inc
mov
scas
and
mov
out
icebp
mov
std
pop
sub
cmp
cs
cmp
adc
inc
dec
dec
adc
fstps
or
rorb
cs
dec
sub
call
test
push
movsb
push
sbb
loope
push
ljmp
sbb
mov
jl
not
mov
adc
jns
and
mov
fsts
sbb
push
fildll
imul
mov
out
pop
sbb
sbb
inc
and
dec
popa
push
dec
sbb
les
jae
add
push
dec
test
cmpsb
sbb
shrl
dec
sbb
dec
pop
and
pusha
xor
push
push
inc
dec
pop
sub
or
inc
enter
jb
push
jno
mov
and
pop
cmp
fistl
gs
push
sbb
stc
loope
dec
mov
inc
dec
popl
adc
sbb
sub
lds
or
mov
inc
sbb
test
in
xchg
cmp
and
dec
sbb
je
pop
nopl
in
sbb
movsl
sub
outsb
dec
test
test
scas
aas
aas
push
or
push
cmp
jle
and
mov
or
push
mov
out
sub
mov
adc
dec
and
jae
inc
fldenv
sbb
movsb
inc
leave
hlt
inc
in
pop
clc
inc
mov
or
movsl
scas
mov
dec
sbb
int
sub
and
lods
cmp
sbb
popa
mov
xor
icebp
inc
sub
inc
xchg
leave
mov
pop
adc
jl
imul
mov
adcb
pop
cmpsb
sub
and
xchg
test
ja
in
xchg
mov
and
int3
dec
sbb
inc
insb
sub
stc
dec
xchg
ret
stos
inc
mov
and
cmp
dec
sub
push
pop
lret
fisubrl
shlb
bound
xor
movsl
adc
repnz
inc
pop
mov
repz
dec
adc
xor
inc
loope
dec
sub
sub
sbb
or
out
sbb
xchg
inc
or
adc
nop
sbb
ja
mov
scas
sub
xchg
xchg
sbb
adc
sbb
out
cltd
and
fcompl
sub
in
out
push
movsb
or
test
and
ljmp
pop
bound
xchg
arpl
push
dec
sub
cmpsl
ret
inc
dec
xor
push
pusha
loope
xchg
jbe
push
lock
inc
push
inc
mov
mov
and
push
movsl
cwtl
mov
adc
movsl
lds
sub
dec
adc
filds
rcll
je
pop
inc
cmp
iret
sahf
mov
ljmp
pop
je
inc
sahf
mull
lods
add
inc
or
mov
sub
insb
push
sub
inc
or
cmp
adc
cmp
xchg
loope
sub
aas
adc
hlt
or
xor
lods
mulb
xchg
mov
lret
inc
pop
in
insb
xor
pop
or
mov
push
inc
movsb
cmp
sbb
push
inc
sub
pop
test
adc
adc
je
and
or
sbb
sbb
and
xorb
xchg
inc
stc
dec
mov
xchg
out
orb
in
dec
rorb
sbb
xor
cmpsl
mov
and
sub
and
fbstp
stos
insl
imul
fdivrs
stos
sub
and
sbb
and
inc
cwtl
lahf
push
out
xchg
flds
shll
fisubs
push
xor
sub
dec
jne
jp
pop
dec
pop
inc
jecxz
out
lds
push
int3
xor
jmp
push
sub
mov
or
stos
jmp
dec
jne
and
nop
pop
divl
mov
bnd
cli
mov
jo
stos
add
mov
scas
inc
mov
cmpsl
xchg
jne
ja
lea
cmp
in
add
or
sub
cmp
jl
add
adc
cmp
xor
fs
mov
shl
jo
in
and
xchg
or
xor
and
sub
pop
pop
jbe
adc
scas
lret
sbb
mov
fcmovnu
movsl
xlat
inc
xchg
sub
add
aam
or
cmp
and
push
inc
push
inc
and
pop
outsl
and
fistl
hlt
push
mov
mov
and
mov
sti
dec
movsl
pop
leave
sub
dec
inc
mov
mov
in
fstl
pop
test
jmp
xor
push
subb
je
mov
cmp
mov
test
jbe
pop
mov
divb
push
sti
lea
push
in
mov
mov
mov
lods
or
imul
movsl
mov
or
jb
dec
aaa
dec
scas
cmc
mov
rclb
xor
movsl
and
adc
adc
jmp
leave
sbb
clc
out
test
arpl
sub
aam
ja
lea
mov
mov
outsb
dec
jb
mov
dec
outsb
dec
scas
push
hlt
mov
or
jo
pop
or
add
incl
pop
xor
popaw
mov
hlt
inc
loop
stc
sbb
mov
or
rolb
shlb
xor
jmp
xor
or
arpl
or
cmp
rolb
or
aam
js
inc
jge
jge
push
pop
sbb
incl
push
sbb
or
adc
inc
jne
out
push
add
je
push
rolb
je
cmp
push
xlat
add
inc
cli
push
call
test
fdivrs
ja
jo
xor
pop
xor
ret
icebp
sub
cltd
and
adc
test
test
ret
pop
add
push
sub
sbbb
inc
add
rep
mov
stos
push
push
jno
cmp
xor
or
push
incl
add
test
ret
mov
pop
sti
gs
inc
mov
fildll
sub
in
mov
test
pushf
lods
enter
movsb
sbb
or
mov
mov
aas
sbb
and
add
push
and
inc
or
or
and
inc
mov
jl
sub
loopne
test
inc
and
or
cmp
movsl
add
inc
rorb
stos
xchg
mov
adc
clc
add
dec
fsubs
aam
mov
adc
and
dec
pop
xchg
shlb
inc
mov
push
and
dec
or
inc
cwtl
add
and
add
test
adc
dec
and
je
mov
and
dec
sbb
pop
and
inc
push
adc
inc
dec
push
xchg
cmp
pop
inc
xor
mov
adc
and
dec
and
sub
sbb
jg
mov
inc
out
xor
adc
adc
inc
mov
xor
inc
testl
add
add
or
xchg
sub
add
or
fs
pusha
cmpb
sbb
fists
or
inc
jle
or
ret
popa
shll
cmp
mov
xor
iret
mov
in
call
inc
jle
mov
or
pop
mov
pop
mov
ret
add
fcomp
loopne
add
jle
je
push
push
jge
popf
das
mov
add
add
sbb
push
or
or
cmp
dec
sbb
xchg
addps
adc
add
cmp
sbb
inc
jb
cltd
xor
dec
sbb
or
pusha
sub
xchg
insb
sbb
insl
xchg
and
jo
sbb
scas
lods
push
push
xor
xorb
xorl
dec
xchg
adc
and
mov
cmpsl
mov
mov
xlat
les
pop
cwtl
or
add
xchg
test
xchg
xchg
mov
push
inc
nop
enter
mov
in
pushf
cwtl
or
mov
cmp
lods
hlt
js
cmpsb
cld
push
movsb
cs
js
xor
dec
loop
adc
mov
xor
shl
clc
js
mov
push
sub
sbb
sbb
js
lock
jns
loopne
jp
shlb
cld
and
inc
frstor
or
push
clc
mov
add
pop
test
int3
movsb
sub
mov
leave
mov
and
shlb
or
add
xor
loopne
and
popa
mov
icebp
test
push
push
push
jle
lds
jle
test
mov
xor
and
push
push
dec
cmp
fs
or
sub
aad
xor
dec
dec
insl
mov
insb
ja
mov
shl
int3
or
push
das
enter
insb
sub
pop
enter
or
or
pushf
or
or
addps
inc
adc
or
mov
mov
xor
mov
ret
dec
add
lock
mov
sub
imul
in
pop
mov
jmp
shlb
xchg
add
add
lock
mov
adcl
repz
dec
pop
js
clc
outsl
add
loopne
jmp
add
imul
cmp
inc
lock
sti
jmp
stos
push
add
out
jecxz
repnz
das
test
pop
sbb
jecxz
cli
loopne
cmpsl
aam
repz
int3
xchg
push
cmpsb
scas
mov
inc
or
addl
in
xchg
add
cmp
not
in
cmp
setle
lock
movsl
mov
popa
sar
mov
add
and
stos
add
mov
add
leave
fwait
xchg
and
les
int3
mov
aas
jno
or
sub
add
cmp
dec
lea
cmc
add
shrl
pop
mov
icebp
rcl
and
lds
mov
add
mov
xor
in
xchg
mov
ret
into
popa
test
ja
stos
jl
add
dec
pop
loope
les
leave
push
xchg
add
jne
int
cld
lcall
xchg
cmp
push
cmp
and
loop
lock
popa
mov
push
add
jle
push
jl
mov
out
das
lea
mov
sti
inc
dec
lock
jmp
ljmp
mov
jl
rcr
push
arpl
jnp
int3
and
lcall
cmpl
inc
xor
lods
cmp
mov
pop
cmp
std
xlat
cmp
add
call
add
movb
jne
fldt
cmp
jno
cmp
and
xor
dec
nop
pop
cmp
push
fisubl
add
loop
mov
cmpsl
push
lahf
add
adc
ss
push
scas
into
imul
add
movsb
rcr
jge
add
push
sahf
out
pop
push
add
and
dec
cmovnp
std
add
pusha
adc
into
rolb
enter
fmuls
mov
fstps
push
gs
arpl
js
sbb
push
fs
outsb
cmp
ret
arpl
pushfw
out
in
sbb
cmovo
xor
inc
inc
inc
sarl
lods
mov
push
pusha
add
add
add
add
add
add
and
add
xor
add
nop
add
add
adc
in
or
add
pop
add
inc
je
iret
xchg
dec
pop
cmp
jmp
xor
mov
mov
cs
int3
cltd
mov
shrl
jl
cmp
push
jle
xor
hlt
mov
xlat
mov
and
sahf
idivl
xchg
mov
shlb
iret
fdivr
cld
pop
lcall
push
push
push
add
jmp
add
jmp
pop
pop
pop
pop
pop
pop
pusha
call
mov
add
call
jmp
push
add
call
lea
lea
xor
call
call
jmp
push
add
jmp
pushl
pushl
call
add
add
cmpl
jne
lea
cmpl
jne
xor
pusha
jmp
mov
mov
mov
call
lea
push
or
jne
push
jmp
push
push
push
call
add
cmpl
jne
inc
or
je
add
mov
popa
mov
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pushl
push
call
add
call
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
mov
movl
jmp
pushl
pushl
call
test
je
call
movl
mov
add
mov
jmp
inc
cmpb
jne
inc
call
mov
cmpw
je
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
jmp
add
add
add
or
out
incl
add
je
sub
add
push
mov
mov
pop
ret
push
mov
cmpl
je
sub
add
pop
ret
push
push
cmpl
je
mov
mov
sub
add
pop
pop
ret
push
cmpl
je
mov
sub
add
pop
ret
pusha
cmpl
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
jae
add
jae
add
jb
gs
xor
cs
insb
add
adc
push
jae
add
adc
jae
adc
xorb
nop
jae
add
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
add
or
add
push
push
mov
jmp
inc
cmpb
jne
jmp
dec
cmpb
je
cmp
jne
cmpb
jne
pop
inc
jmp
pop
pop
ret
cmpl
jne
mov
jmp
mov
jmp
xor
push
push
push
push
call
mov
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
or
jne
push
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
push
lea
push
pushl
push
call
push
push
pushl
call
popa
ret
pusha
cmpl
jne
pushl
pushl
call
mov
call
movl
call
lea
mov
mov
lea
push
pushl
mov
mov
xor
xchg
popl
add
popa
ret
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
leave
ret
pusha
lea
push
call
mov
lea
push
call
mov
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
lea
push
push
push
call
or
jne
lea
push
push
push
call
jmp
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
popa
popa
pop
ret
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
push
push
push
push
call
mov
push
push
push
call
push
push
push
push
push
push
pushl
call
cmp
je
mov
call
push
pushl
call
mov
push
push
push
push
call
mov
push
lea
push
push
push
pushl
call
cmp
jne
mov
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
cmp
je
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
push
call
push
push
pushl
call
cmpl
je
cmpl
je
pushl
call
jmp
call
popa
ret
push
push
pushl
call
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
call
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
lea
push
lea
push
push
call
cmp
jne
push
pushl
call
push
call
popa
mov
leave
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
pushl
pushl
call
push
pushl
call
popa
mov
leave
ret
pusha
call
mov
pushl
pushl
call
mov
lea
push
push
push
lea
push
push
push
call
popa
ret
pusha
mov
lea
mov
mov
jmp
call
lea
push
push
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
mov
pusha
push
lea
pushl
pushl
call
push
pushl
push
call
lea
mov
add
jmp
dec
cmpb
jne
inc
pop
jmp
movzbl
mov
inc
inc
cmpb
jne
movb
popa
lea
pushl
push
lea
push
pushl
call
add
pushl
push
call
or
je
push
lea
push
lea
push
push
call
push
call
jmp
push
call
or
jne
push
lea
push
lea
push
push
call
push
call
incl
cmp
jbe
movl
pushl
call
popa
ret
pusha
lea
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
pushl
pushl
lea
push
pushl
call
add
pushl
pushl
call
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
mov
jmp
push
call
or
jne
push
call
or
jne
call
jmp
inc
cmpb
jne
inc
cmpb
jne
popa
ret
pusha
cmpl
je
cmpl
jne
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
jmp
jmp
movl
mov
add
jmp
pusha
mov
xor
jmp
inc
inc
cmpb
jne
repz
jne
movl
popa
jmp
inc
cmpb
jne
inc
cmpb
jne
cmpl
jne
jmp
mov
mov
inc
inc
cmpb
jne
mov
incl
popa
ret
pusha
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
popa
ret
pusha
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
call
popa
ret
pusha
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
mov
xor
cltd
jmp
mov
rol
xor
inc
cmpb
jne
cmp
jne
mov
cltd
jmp
mov
rol
xor
inc
cmpb
jne
mov
mov
cmp
jbe
cmp
jbe
cmp
jbe
jmp
xor
xor
rol
inc
dec
cmp
ja
jmp
push
lea
push
lea
push
push
call
popa
popa
pop
ret
call
popa
ret
pusha
cmpl
jne
call
mov
pushl
push
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
lea
push
call
pushl
push
call
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
popa
ret
pusha
mov
mov
or
jne
movl
cmp
jne
cmp
jbe
movl
popa
ret
pusha
cmpl
jne
pusha
push
push
mov
imul
add
push
push
call
mov
popa
mov
cmp
jne
mov
rdtsc
mov
cmpw
jne
movl
add
add
movb
inc
movb
movb
xor
xor
rol
add
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
add
mov
popa
push
xor
cmpw
jne
mov
mov
sub
sub
pop
ret
jmp
popa
ret
pusha
call
call
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
movl
lea
push
call
cmpl
je
cmpl
je
call
or
je
mov
cmpl
jne
cmpl
je
lea
push
push
call
mov
cmpl
jne
movl
cmpl
je
cmpl
jne
mov
add
mov
cmp
jne
movl
mov
mov
mov
cmpl
je
movl
mov
lea
push
push
push
push
push
push
push
call
cmp
je
movl
inc
cmpb
jne
inc
dec
jne
popa
ret
pusha
cmpl
je
cmpl
jne
cmpl
jne
pushl
pushl
call
mov
push
lea
push
lea
push
push
call
popa
pop
popa
ret
popa
ret
pusha
push
call
push
lea
push
push
push
push
call
pop
lea
mov
add
sub
jmp
movb
dec
cmp
ja
popa
ret
pusha
mov
test
js
mov
mov
addl
jmp
push
call
test
jns
cmpl
jne
mov
addl
popa
ret
pusha
lea
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
lea
mov
jmp
xor
rol
inc
dec
cmp
ja
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
mov
mov
add
mov
add
mov
add
xor
lea
mov
add
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
xor
jmp
mov
add
movzwl
mov
add
mov
add
mov
popa
ret
add
add
add
inc
add
xchg
inc
ja
icebp
clc
or
jg
icebp
lret
imull
sbb
nop
xchg
or
xchg
js
or
push
scas
xlat
lock
jne
gs
xor
fs
insb
add
jb
jb
add
insb
and
popa
gs
and
data16
and
and
jb
jae
add
jne
and
je
insb
outsl
popa
and
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jae
gs
outsl
jb
and
jae
fs
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jb
imul
jo
jb
cmp
imul
and
outsb
popa
insl
imul
and
jb
jb
and
inc
jo
insb
imul
and
and
jb
popa
fs
jb
outsb
outsb
imul
outsw
cmp
push
popa
jb
imul
jae
ja
jb
and
jne
push
outsb
je
jb
and
and
je
jbe
imul
jns
jne
ja
outsb
je
je
and
outsb
arpl
and
and
insb
and
outsb
insb
outsl
popa
fs
or
outsb
imul
jo
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
add
jne
and
je
outsl
ja
insb
outsl
popa
and
jae
gs
jb
and
fs
insb
and
insb
sub
and
arpl
jae
cmp
sub
pop
outsl
jne
popa
jb
and
je
arpl
outsb
arpl
and
imul
je
or
sub
inc
imul
outsb
outsl
je
bound
outsw
jne
and
and
insl
outsl
je
and
jb
gs
or
sub
pop
outsl
jne
and
jb
ja
insb
insb
and
jae
bound
imul
popa
arpl
jae
and
imul
je
or
arpl
popa
jo
insb
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
and
outsl
addr16
insl
and
insb
insb
and
ja
arpl
and
inc
outsl
ja
insb
outsl
popa
fs
fs
insb
and
insb
and
and
jb
jne
je
popa
outsb
and
outsb
and
je
bound
insb
outsl
popa
fs
popa
jae
and
jae
popa
jb
and
jae
popa
jo
imul
and
and
and
insb
and
outsb
and
and
outsb
insb
outsl
popa
fs
popa
imul
add
add
push
xchg
jb
cmp
push
dec
pushf
adc
clc
or
add
add
pop
push
dec
inc
inc
add
pop
push
dec
push
push
dec
inc
add
pop
dec
push
dec
inc
inc
add
pop
push
inc
inc
push
pop
push
add
pop
push
inc
inc
push
pop
inc
add
pop
inc
dec
dec
inc
push
pop
inc
add
pop
inc
dec
dec
inc
dec
add
pop
push
push
push
add
pop
dec
inc
inc
inc
pop
push
add
jne
addr16
fs
arpl
and
sub
popa
jae
and
outsl
jae
and
and
outsb
and
and
jae
popa
jb
and
outsl
ja
and
and
gs
cmp
push
insb
gs
jae
and
je
and
je
push
and
and
outsb
dec
arpl
push
outsl
data16
arpl
or
jb
imul
je
insb
insb
gs
popa
outsb
jae
je
popa
je
jns
jne
popa
jb
and
outsb
outsb
imul
bound
addr16
add
add
add
insb
insl
outsl
outsb
cs
insb
add
movsl
out
test
aam
or
sub
adc
pushf
inc
cld
call
mov
and
lock
add
add
inc
add
add
xor
push
bound
je
cmp
and
ja
insb
outsl
popa
imul
add
insl
jo
gs
cmp
and
jb
outsb
je
inc
imul
and
inc
add
inc
add
jne
add
add
add
add
aas
jne
add
inc
add
add
ret
ret
pusha
mov
mov
mov
cmp
jbe
cmp
jbe
mov
cltd
mov
imul
div
jmp
xor
lea
call
popa
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
inc
add
ja
outsb
add
add
add
add
add
add
add
outsb
add
add
mov
add
add
add
add
add
jae
or
add
incl
add
outsb
add
add
add
outsb
add
and
outsb
add
jae
jae
add
popa
add
jns
and
add
add
add
imul
jae
add
add
mov
pop
add
push
add
add
add
add
add
add
incl
add
outsb
add
add
add
add
jb
outsl
add
jb
add
jae
and
add
add
mov
add
add
add
add
add
add
add
add
add
incl
add
push
add
je
add
add
add
add
push
add
add
or
and
into
add
add
incl
add
outsb
add
add
add
outsb
add
cmp
add
add
mov
add
add
add
add
add
add
or
add
add
outsl
add
jo
insb
add
je
add
add
add
add
push
add
add
daa
add
add
or
push
add
incl
add
add
add
add
add
add
push
add
add
popf
add
add
push
add
add
incl
add
arpl
add
add
add
add
lret
add
add
add
add
mov
and
add
add
push
add
jae
jae
ja
outsl
add
add
add
add
add
add
outsb
add
add
mov
pop
add
push
add
add
add
add
mov
push
add
add
incl
add
add
and
jo
popa
add
jae
ja
outsl
add
add
add
add
push
add
add
push
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
add
add
add
push
add
add
sub
or
add
add
incl
add
push
add
add
test
or
sub
push
add
add
incl
add
add
imul
add
add
add
mov
add
adc
vrsqrtps
add
inc
add
fists
add
add
add
add
adc
add
add
out
sbb
add
xor
add
add
cmp
sldt
push
inc
add
add
add
add
add
nop
push
add
add
add
incl
add
add
fdivl
or
fisttps
sub
pop
jne
dec
sub
jb
jl
fidivs
cmpxchg
jge
insl
popf
pop
icebp
and
or
jns
loop
hlt
fmull
mov
data16
xor
shrb
or
pop
cmp
adc
cltd
push
loop
fistpl
popf
out
push
jbe
leave
je
and
add
int
jae
inc
jne
out
jnp
or
sub
lods
cmp
adc
xchg
sbb
mov
je
mov
jo
inc
icebp
clc
sarb
fistpll
mov
les
xor
push
inc
mov
push
aam
pop
mov
mov
sbb
gs
dec
sub
enter
pop
dec
movsb
push
cmp
push
fninit
push
mov
nop
popf
sub
mov
repnz
sub
stos
jae
out
sbb
outsl
pop
imul
dec
dec
subl
xchg
mov
xchg
cmp
cmp
repnz
inc
sub
rorb
imull
push
push
mov
xchg
pop
and
xchg
mov
xor
add
sub
dec
pop
push
bnd
cmp
and
cmc
movsb
out
pop
cmp
mov
jg
iret
out
lods
add
mov
mov
ja
test
imul
push
insl
sbb
or
cltd
xchg
xchg
mov
jne
jb
cli
jo
cmc
roll
les
sub
lods
lahf
jnp
sbb
xlat
inc
stc
adc
dec
faddp
ret
scas
sub
pop
lea
andl
clc
insl
movsl
test
repnz
mov
daa
dec
adc
rclb
into
data16
xchg
jne
or
cmp
test
test
push
out
xchg
xchg
mov
push
dec
aaa
jbe
inc
xlat
pop
push
popf
mov
movsb
inc
xchg
inc
out
stos
jl
das
out
or
sbb
loop
inc
mov
sub
iret
mov
or
push
inc
xchg
cmpsb
xchg
jne
out
mov
rorb
je
xor
inc
mov
dec
pop
fcoms
mov
mov
mov
inc
insb
pop
dec
and
das
sbb
stos
or
push
lods
jns
das
sub
pusha
or
mov
xor
addr16
pop
ds
sti
shll
push
in
and
push
mov
jo
sbbb
hlt
decl
iret
loope
bound
popf
jecxz
inc
repnz
in
xchg
orl
in
gs
inc
add
adc
cli
pop
inc
mov
data16
cmp
mov
sbb
or
inc
push
cltd
and
xchg
rep
icebp
lock
in
jb
scas
pushf
icebp
jnp
push
subb
int3
shrl
rolb
shll
jnp
cmp
pop
aad
sbb
add
in
ficomps
adc
dec
push
xor
cld
in
fldcw
xchg
pusha
jnp
adc
in
mov
adcl
filds
pop
inc
test
xor
cmpsl
dec
fwait
cmp
or
rclb
hlt
shrb
sahf
jmp
xorl
xchg
push
aas
and
sbb
ds
xlat
jns
or
out
aad
cli
mov
fistpl
cltd
int3
subl
mov
jne
daa
repz
pop
dec
dec
gs
xor
lock
.byte
