push
or
add
add
add
push
or
add
add
push
popa
or
add
add
enter
add
add
add
add
jae
add
in
pusha
or
cld
pusha
or
or
popa
or
sub
popa
or
loopne
or
pushf
pusha
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
rcrb
xchg
dec
aaa
mov
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
bound
or
add
outsl
std
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
adc
std
add
cmp
lock
dec
stos
xor
aaa
xchg
cmp
jns
dec
mov
or
test
cli
inc
mov
mov
adc
and
cmp
mov
inc
stos
sbb
pop
ja
fsubr
xchg
xchg
nop
inc
inc
mov
jge
and
fisubrs
hlt
jae
or
movsl
or
out
loop
mov
outsb
and
es
mov
rol
push
add
stc
repnz
pushf
add
pop
mov
mov
push
pop
testl
pushf
mov
mov
pop
mov
addr16
mov
mov
lahf
jmp
sbb
test
mov
fwait
ror
jne
pop
jo
loop
int3
int
scas
fistps
clc
sub
jnp
pop
xor
fwait
inc
xchg
dec
push
cmp
jno
mov
mov
cmpsl
test
leave
mov
mov
push
mov
xchg
nop
cwtl
cs
ret
fstpt
jl
adc
mov
fs
dec
push
incb
in
popa
repz
xchg
and
lods
sarb
ret
adc
cmp
and
mov
push
movsb
mov
xchg
fldt
mov
cwtl
lods
aad
pop
ss
mov
mov
pusha
outsl
pop
xlat
in
pop
int
jb
fists
mov
icebp
adc
stos
test
cmp
xchg
out
imul
mov
or
subl
add
jmp
add
aaa
and
ud1
jns
add
push
pusha
lret
and
pop
icebp
xlat
mov
lcall
sbb
enter
push
sub
inc
xchg
sub
mov
gs
jge
push
loopne
mov
dec
test
dec
ja
shll
xchg
push
push
pop
lret
int
mov
les
js
loop
cmp
sbb
aaa
popf
rcrl
shr
adc
push
notb
push
push
jmp
add
cmp
mov
cmp
test
ljmp
stos
fs
sbbb
mov
xchg
ljmp
sub
lea
dec
lods
testl
repz
loopne
lods
das
push
adc
pusha
fnsave
dec
cltd
xor
inc
push
int
pop
mov
clc
popf
cs
push
xchg
or
adc
mov
shl
push
stc
and
add
mov
test
add
or
add
or
mov
sbb
cld
mov
xchg
hlt
pop
mov
rep
popf
test
scas
test
cmp
cmp
pop
es
clc
add
add
inc
mov
shrb
leave
lahf
pop
sub
lock
mov
dec
mov
test
sub
ljmp
mov
leave
push
xor
shrl
aas
jge
xchg
je
leave
jns
enter
arpl
push
sub
inc
mov
pusha
mov
scas
jecxz
mov
mov
adc
js
imul
jbe
cld
mov
pop
repnz
adc
mov
push
aaa
and
fimuls
push
pop
lret
push
fldl
mov
jnp
add
mov
push
out
add
inc
mov
xor
test
dec
int
mov
jnp
ret
push
in
insb
ret
cwtl
sbb
xchg
mov
adc
lahf
push
mov
lret
pop
cld
sbb
mov
pop
aas
or
push
mov
out
lods
xchg
mov
aaa
or
les
int3
aas
xchg
sub
push
movsl
bound
and
xor
xchg
dec
mov
andb
mov
sbb
ja
push
lret
cmp
add
mov
push
sbb
pop
inc
testl
xchg
adc
scas
fidivl
sub
lods
or
clc
mov
and
mov
into
and
lcall
or
pop
ss
xchg
push
jecxz
jbe,pt
imul
mov
and
movsb
std
nop
xor
xor
inc
mov
jmp
sub
xlat
or
jno
dec
xchg
cmp
adc
or
dec
outsl
or
mov
jb
xchg
lcall
mov
pop
lea
fisubl
dec
pusha
mov
fpatan
out
cs
movsl
aam
pushf
es
and
aam
push
or
dec
sbb
sub
cmp
nop
imul
mov
add
jecxz
pop
dec
xor
xchg
clc
mov
xor
aad
mov
sbb
ja
neg
xchg
fdivrp
repz
mov
push
imul
push
push
popaw
cltd
xchg
out
in
shl
pop
cli
imull
das
fnstsw
int
movsb
push
cmpsb
cmp
xor
cmp
or
lods
fisttpl
jbe
jp
es
mov
sub
push
push
mov
sbb
and
add
adc
sub
rorl
push
sub
pushf
fistpll
mov
std
ds
and
repz
adc
in
push
push
push
cmp
pop
cmp
or
out
repz
jbe
xchg
mov
add
into
dec
in
xchg
add
mov
loope
hlt
aad
adc
or
xor
xlat
push
cltd
inc
push
mov
mov
popa
adcb
test
mov
outsl
xchg
or
mov
or
dec
std
push
pushf
xchg
mov
popl
ret
bound
in
mov
fdivrl
fwait
cmp
jae
mov
add
das
xchg
insl
fisttps
imul
sub
jecxz
push
and
notl
pusha
in
lret
dec
test
pop
xor
xorb
imul
mov
hlt
scas
jb
test
rorb
mov
fdivrl
imul
ja
add
cld
jge
pop
push
imul
fistl
out
aam
popf
aad
int
mov
fildll
and
xor
jnp
dec
add
test
pusha
inc
test
stos
lcall
test
sbb
mov
dec
ja
clc
mov
pop
xor
pushl
or
inc
stc
out
loopne
fbstp
clc
push
jle
fbstp
inc
inc
out
mov
in
mov
dec
iret
js
mov
lret
test
inc
out
sti
lds
ficompl
imul
dec
fstpt
inc
rorb
jae
cltd
inc
movsl
adc
fs
mov
cs
imul
inc
mov
bound
or
in
and
into
mov
inc
dec
cmpsb
data16
sub
outsl
and
jne
and
pop
jae
jecxz
hlt
adc
ret
ficomps
lret
pop
cld
out
test
jb
test
scas
jo
mov
sahf
aam
test
jl
stos
std
cltd
rorb
jmp
cmp
outsl
jp
push
sub
nop
je
xor
hlt
mov
or
ret
pop
push
sub
ss
ffreep
xchg
pop
inc
jp
jbe
jl
daa
xchg
fisubs
sbb
rcrb
and
lahf
pop
shll
outsl
mov
xchg
js
call
xchg
mov
add
hlt
mov
stos
sbb
cli
sbb
add
mov
push
lret
mov
add
xchg
and
inc
dec
repz
ljmp
jg
cs
lds
sahf
xchg
mov
arpl
push
mov
lret
clc
push
dec
pusha
mov
and
sbb
lret
or
das
mov
out
jp
pushf
adc
scas
and
pop
sub
mov
lahf
mov
push
in
je
sub
ljmp
sub
sub
cmp
pop
xor
insb
inc
rcll
push
cmp
xchg
pop
fldenv
les
mov
movsl
mov
mov
push
xchg
mov
aad
test
mov
xchg
jne
in
cmpsl
mov
loop
inc
push
daa
mov
mov
or
arpl
stos
mov
push
add
lds
nop
jbe
cltd
mov
pop
adc
push
mov
jg
dec
lods
push
addl
xor
mov
out
mov
mov
inc
or
mov
or
testl
aad
aam
jmp
mov
xor
mov
leave
stc
in
insl
push
out
dec
loop
fnsave
loop
sbb
rclb
push
mov
sub
jmp
jo
in
lret
scas
inc
or
sti
push
cli
and
jge
mov
or
xchg
mov
and
adc
and
jb
jns
out
cld
sbb
out
out
pop
and
lods
cmp
jo
cltd
neg
adc
lret
sub
mov
insb
cwtl
jbe
fbld
xchg
jle
mov
push
sbb
sbb
insb
lret
cmp
shlb
xor
icebp
dec
mov
int
lcall
sbb
adc
xor
lods
stc
lret
dec
jnp
aas
icebp
inc
mov
pop
ds
jp
movsb
xchg
push
adc
data16
mov
out
xor
std
inc
xchg
mov
hlt
testl
cltd
xor
add
inc
outsb
imul
stc
push
popa
lret
addl
mov
lret
push
aaa
sbb
adc
xor
sbb
test
jmp
sbbl
test
clc
jg
mov
add
pop
xor
jbe
mov
push
xchg
sub
jns
sub
push
adc
or
ss
xor
lock
jmp
jp
xlat
push
mov
clc
dec
push
jbe
sbb
js
fwait
out
mov
cmp
int
stc
mov
push
jge
lret
fnstcw
push
cmp
sahf
dec
or
js
xchg
cmp
pop
ss
sahf
push
dec
mov
sar
mov
fstps
adc
mov
cmp
in
dec
pop
lret
cmp
test
sbb
andl
lcall
lcall
lret
push
xchg
adc
mov
push
stc
pop
jno
xor
in
xchg
mov
mov
lock
int3
pop
pop
into
idiv
pushf
and
mov
movb
ds
jg
pop
adc
repnz
flds
dec
inc
mov
gs
fwait
scas
aas
imul
leave
mov
sub
pop
orl
and
addr16
add
and
cmpsb
jmp
inc
cs
sub
or
xchg
jnp
stos
arpl
xchg
out
mov
pop
ret
enter
inc
pop
adc
mov
lods
pop
mov
jle
jl
inc
cmpb
xor
sub
cmpsl
stc
leave
rorl
and
addr16
lods
ret
inc
push
add
cmp
cltd
jecxz
mov
xor
dec
ficoml
outsb
movsl
xor
pop
mov
sub
js
iret
loope
scas
sub
call
xchg
aam
jb
or
adc
dec
mov
inc
loope
stos
dec
inc
jge
enter
and
popa
sbbl
sub
sub
add
xor
jne
out
push
inc
sbb
fstps
insl
push
inc
mov
cmp
inc
pop
mov
adc
aam
mov
dec
insb
push
out
push
fcomps
movsl
cmp
mov
adcl
inc
or
mov
enter
jl
mov
mov
cmp
and
imul
xor
iret
ffreep
sbb
mov
jmp
or
dec
adc
pop
push
sbb
shrl
neg
stos
and
push
push
lods
jo
pusha
inc
adc
cli
inc
push
lods
nop
and
cltd
pop
aaa
push
jbe
loopne
add
and
and
push
add
into
testb
push
push
mov
hlt
or
push
pop
mov
int
out
sub
stos
aam
lahf
in
sbb
fdivrp
mov
add
mov
jae
loop
pop
in
out
jg
adc
xchg
or
mov
int
gs
cmpsl
fsubr
add
push
mov
ljmp
jns
jg
xor
push
or
pop
sbb
addl
or
stc
cmp
push
mov
or
pop
mov
out
out
inc
xor
cld
and
and
jg
int3
jno
pop
fists
sbb
fisubl
xchg
sub
inc
mov
imul
test
xchg
xchg
xchg
mov
inc
jle
cmp
clc
rep
mov
bound
out
ficomps
pop
push
add
mov
inc
loopne
test
lahf
pop
movsb
mov
mov
jnp,pt
mov
daa
fiadds
adc
add
enter
jns
fsts
mov
mov
call
enter
push
stos
sub
in
mov
pop
scas
out
lds
stos
das
jl
add
fxch
int
clc
rol
scas
test
ljmp
popa
dec
push
mov
xor
std
int3
cltd
clc
subb
repnz
jecxz
inc
int
adc
cli
lret
fstps
andb
pop
mov
xchg
xchg
aas
dec
push
shl
aas
ret
addr16
sub
xchg
add
mul
inc
and
aaa
xlat
pusha
nop
mov
stc
add
lds
jg
insl
daa
mov
mov
push
dec
rcrl
mov
jg
out
arpl
xchg
fdivr
push
imul
jecxz
add
push
fxch
ljmp
xchg
pop
and
lea
popf
xor
call
loop
pushf
pusha
mov
in
push
repz
inc
fcmovnb
iret
inc
repnz
ss
loopne
mov
jg
jg
xor
and
fs
fidivl
or
je
mov
fdivrs
pusha
mov
add
in
jmp
ja
pop
in
mov
sub
idivb
add
test
jno
mov
inc
sbb
pushf
leave
aam
test
xbegin
sti
cmp
xor
test
lods
xchg
repz
fidivrl
sub
out
push
jbe
stos
sub
cmp
add
mov
and
push
sub
pusha
imul
scas
pusha
mov
icebp
nop
mov
icebp
or
and
aaa
jge
movsl
push
sub
imul
les
repnz
mov
sub
in
mov
add
and
sbb
cs
jp
or
mov
cmc
or
xchg
clc
addr16
fwait
inc
xchg
movsb
lds
mov
or
lahf
xchg
cwtl
movsb
pop
xchg
mov
lods
add
or
pop
ja
cmp
les
mov
jge
add
movsl
outsb
out
mov
mov
test
bound
js
clc
enter
adc
push
int
jns
and
arpl
dec
adc
dec
loopne
pop
jns
clc
rdmsr
cld
outsl
xchg
lea
mov
adc
fcmovb
sub
fldcw
shrl
cltd
xadd
xchg
fldcw
sbbl
std
add
mov
mov
sbb
mov
sub
xor
and
sbb
or
ret
lds
outsl
test
aad
push
adc
jbe
divl
add
fwait
std
lret
add
or
fwait
mov
js
insl
push
mov
mov
push
std
lods
or
pop
sbb
pusha
leave
inc
pusha
pushf
xor
popa
pusha
int
push
xor
sbbl
xchg
push
mov
rolb
sti
or
dec
mov
pop
pop
shlb
sbb
nop
or
in
mov
or
cmp
dec
pop
push
lods
ja
or
mov
adc
and
jge
cmpl
adc
xchg
fsub
and
popf
cmp
xor
divl
ficoms
in
or
addr16
jne
xchg
mov
fdivrs
add
stc
xlat
hlt
push
cmp
mov
cmp
pop
jp
clc
sarb
jecxz
xlat
into
mov
js
jle
test
push
out
aaa
fwait
or
xchg
test
and
ds
aas
shlb
mov
imul
in
in
cltd
cli
xorl
dec
lahf
xlat
les
mov
aad
dec
add
enter
scas
cwtl
int3
push
psrld
repz
je
outsl
jl
pop
cmpsb
add
sti
loopne
pop
ja
lret
into
push
loopne
push
sbb
sbb
jle
mov
int3
pop
jb
add
lock
cmp
xor
mov
jae
mov
rorl
inc
sub
sbb
sub
mov
stos
push
dec
sarb
iret
shl
ret
inc
pop
push
jo
je
push
test
inc
xchg
leave
cld
out
dec
add
and
xchg
sbb
mov
or
inc
outsb
or
xor
push
mov
sbb
mov
repz
xor
scas
ret
aad
iret
push
iret
in
lcall
dec
out
lods
cwtl
hlt
inc
inc
jb
lods
lret
mov
push
xchg
or
cmpsb
subb
mov
stos
lock
aam
lods
insl
or
jo
add
sub
in
mov
pop
push
dec
movsb
sub
pop
push
nop
stos
lods
dec
aam
in
clc
jle
in
daa
loop
js
repnz
aas
push
test
mov
sbb
andb
pushf
stc
movsb
sub
adc
into
es
out
imul
add
mov
adc
jl
out
mov
pop
movsl
mov
loopne
cmpsb
loop
push
xchg
fadds
sub
mov
das
pusha
in
ljmp
out
sbb
test
pop
and
aad
out
add
push
out
inc
loopne
test
xchg
push
push
fcmovb
mov
neg
inc
and
push
lret
xchg
or
jae
orb
mov
enter
sti
pop
push
mov
fisubl
jge
xchg
fimuls
icebp
xlat
lods
out
out
xacquire
inc
lahf
jns
push
mov
arpl
dec
jb
data16
and
fcmovnu
xchg
xchg
pop
xor
lret
xor
insb
push
push
sti
xor
icebp
int3
call
mov
xchg
adc
dec
roll
mov
xor
test
add
jno
adc
dec
xchg
jno
sbbl
mov
pushf
aad
movswl
cmpsb
cmc
jecxz
push
inc
jae
cmp
xchg
ret
lea
pusha
in
in
scas
mov
add
or
xor
inc
mov
push
cmp
adc
mov
mov
inc
shll
push
xor
xlat
dec
lret
mov
jne
jae
jl
fadds
imul
fnstenv
aas
cmp
mov
fucomp
sub
xor
lret
ss
adc
push
cmc
fcomp
hlt
out
dec
mov
scas
cs
out
pusha
lret
mov
ret
add
cmp
xchg
sbb
push
xor
jne
push
sbb
jbe
sti
dec
pop
sahf
dec
loop
mov
jbe
lret
mov
fimuls
dec
sbbb
push
push
icebp
loope
bound
xchg
and
dec
cmpsl
ja
addl
inc
add
dec
jae
aaa
xchg
jb
push
cmp
aam
mov
mov
xchg
mov
xor
mov
xor
cmp
pusha
fisubrs
jns
test
imul
jae
fucom
pop
adc
lret
in
cmp
jmp
popf
add
inc
mov
sysret
aad
sbb
xor
in
popf
dec
inc
aam
scas
xchg
xchg
mov
das
and
lds
dec
dec
test
fimull
jae
mov
lcall
stc
pop
pop
incb
mov
in
lret
roll
mov
cmp
cmp
insl
sub
cmp
mov
pop
loop
loope
jmp
fs
mov
cmp
outsl
not
loop
xchg
ljmp
lcall
push
mov
or
imul
adc
mov
xchg
pusha
lret
add
mov
in
mov
sub
loop
and
fwait
sbb
sarl
outsb
stos
or
push
lahf
or
fistpll
and
mov
cmc
mov
mov
jb
mov
or
xchg
xor
xchg
fstp
leave
mov
pop
and
adc
lahf
movsb
jp
add
xor
aas
imul
xor
inc
add
push
mov
inc
ret
ret
pop
fcoml
testb
inc
int
stos
push
jle
xchg
xchg
lock
and
and
pop
add
adcb
adc
inc
cld
aas
or
pop
loope
test
adc
clc
dec
push
xchg
mov
fistpl
ja
xchg
add
arpl
jecxz
out
data16
pop
add
out
push
adc
popa
cmpsl
fnstcw
out
lods
sahf
sub
mov
cmp
fiaddl
mov
pop
mov
add
loop
dec
dec
cmpsb
mov
mov
movl
enter
cwtl
test
dec
mov
cs
ret
movsl
in
inc
popa
cwtl
xchg
dec
ret
jbe
fs
mov
fwait
int3
and
lret
arpl
mov
loope
call
sub
cmp
les
stos
and
cs
jns
ljmp
jnp
test
fistps
push
rcll
sbb
rcrb
jno
jb
or
sub
gs
test
test
or
fs
add
aas
or
push
jbe
dec
lahf
fcomps
inc
pop
imull
lea
sub
imul
pop
add
test
movsb
jnp
mov
cmp
fldcw
popf
ss
or
adc
ja
sbb
mov
leave
out
and
ret
mov
aaa
pop
icebp
ljmp
cmp
add
mov
jb
ja
xchg
sub
xor
mov
xchg
or
mov
lds
popf
cmp
into
cmp
clc
xor
cwtl
or
jb
pmulhuw
imul
xor
fs
rclb
mov
cmpsl
adc
je
stc
sub
inc
hlt
mov
dec
adcl
jae
fsubs
pop
stos
inc
jno
loop
in
mov
add
xchg
xchg
mov
mov
mov
lods
movb
sbb
or
push
fildl
ret
cmp
pop
sbb
sub
stos
rcl
int
hlt
fwait
xor
dec
jo
mov
pop
test
ss
sub
std
test
or
mov
push
add
jae
test
scas
lods
mov
fstl
xchg
inc
arpl
sahf
int
data16
xor
repnz
outsl
and
icebp
xor
test
fnstenv
mov
les
push
shlb
jo
pusha
dec
and
adc
add
stos
in
rolb
jmp
adc
xchg
push
mov
jns
add
stos
fisttpll
fimuls
jne
int3
push
mov
cld
ret
fistps
daa
cli
ljmp
punpckldq
icebp
xchg
jp
xorb
dec
shr
dec
hlt
fldcw
jle
mov
je
mov
ljmp
mov
lret
jl
nop
loope
jno
test
cld
lret
enter
test
and
dec
sbbb
sbb
push
or
jno
adc
outsb
movsl
xchg
cmp
mov
push
xchg
lods
aas
dec
out
and
jle
dec
push
mov
and
and
imul
mov
fdivr
xchg
sti
dec
mov
sub
push
adc
push
outsl
dec
movsl
cs
push
xor
jg
bound
xor
jo
push
fbstp
movsl
jae
mov
push
ret
lret
loope
nop
mov
lret
mov
dec
bt
or
push
xchg
push
or
repz
and
mov
xlat
add
insb
xor
xchg
mov
test
and
mov
test
je
sbb
outsl
push
xor
pop
mov
jle
mov
xor
divb
pop
push
lds
enter
loopne
xchg
add
push
dec
data16
lock
sahf
clc
sub
hlt
lret
popf
or
ja
jbe
cli
mov
inc
add
insb
shlb
sub
jl
imul
aaa
jle
mov
fildll
cmc
xchg
das
adcb
sub
push
push
mov
or
cmp
push
push
xchg
les
mov
scas
inc
dec
and
enter
aad
es
inc
sub
pop
mov
jns
pusha
cmp
jp
aam
filds
pop
and
test
out
call
jge
lcall
inc
fistpll
cwtl
repz
shrl
push
int
mov
push
add
ss
ret
imul
mov
push
iret
mov
inc
clc
mov
je
rcll
push
mov
add
mov
es
repz
or
sbb
dec
les
daa
mov
movsl
jge
in
mov
adc
iret
add
xorl
pop
loop
jp
clc
and
fxch
cmpsl
push
inc
cmp
cmp
add
out
cmp
cwtl
aaa
aad
inc
mov
fnsave
mov
inc
xlat
aam
js
mov
pop
iret
pop
cmp
xchg
dec
inc
mov
add
cld
cmp
adc
nop
cli
aas
push
inc
xor
xor
clc
gs
and
inc
mov
sub
scas
lock
mov
notb
rcrl
mov
in
xor
push
cmp
leave
stc
xchg
sbb
repz
cmp
jg
mov
sti
jae
sub
add
mov
arpl
xorb
fistl
sbb
and
cmp
aaa
jl
push
pusha
push
xlat
in
test
sbb
cltd
mov
xchg
es
sub
scas
inc
add
adc
rclb
out
mov
jecxz
mov
jae
das
lock
cli
dec
sti
cmp
xor
sbb
jp
ss
test
lods
in
sbb
outsb
sbb
sub
stos
xchg
pop
jno
push
jnp
sbb
cwtl
cmp
in
sub
pmaddwd
xchg
fxch
out
les
adc
push
pop
test
inc
popa
mov
inc
out
mov
shll
roll
xor
loop
mov
inc
cmp
xchg
or
aam
mov
jl
addr16
mov
pop
cmpsb
sbbl
mov
mov
out
mov
int
fwait
repz
arpl
inc
pop
jns
sarb
xchg
ds
jbe
pop
mov
cli
xchg
repz
stc
xor
jbe
jne
xchg
out
lods
push
push
out
mov
cmp
fldl
push
into
pop
jne
popa
jne
pop
sbb
test
jne
sbb
mov
sbb
mov
stos
cld
sarl
daa
lods
sti
cmc
int
aaa
mov
pop
sub
jecxz
iret
sarl
ds
xchg
gs
xor
js
in
xchg
insl
in
cmp
xor
push
mov
ficoms
xchg
stos
imull
es
aaa
test
pushf
adc
call
icebp
sub
add
push
subb
push
aam
mov
dec
xchg
repz
sub
add
mov
and
xchg
dec
ret
xlat
sub
out
push
bound
movsl
pop
in
jecxz
mov
adc
lahf
jb
pop
mov
add
push
jb
and
cmp
mov
mov
sub
mov
jb
cld
xchg
pop
adc
scas
daa
mov
mov
sub
jbe
pop
lret
inc
repnz
es
mov
stc
arpl
push
out
xorb
test
cld
sub
jl
push
into
xor
incl
ss
jno
aaa
lahf
pusha
cmpsb
jle
stc
mov
iret
pushf
and
dec
lcall
mov
hlt
adc
push
push
pop
daa
xor
dec
lea
fldl
pop
fistpl
pusha
sbb
mov
ja
fidivs
mov
testb
cltd
test
adc
ret
insl
fsts
mov
ds
cmp
fdivr
loopne
sub
sar
mov
xchg
jge,pt
pop
ss
mov
std
test
scas
pop
test
pop
frstor
mov
xchg
inc
cwtl
xor
dec
jecxz
jo
in
sbb
imul
adc
mov
in
pushf
mov
repnz
mov
cmp
pop
xchg
movsb
imul
pop
fistl
ret
jnp
iret
int3
arpl
sbb
sbb
repnz
mov
std
cmp
push
jge
mov
data16
popf
jne
ljmp
cmp
test
push
push
leave
pusha
push
mov
test
xchg
jae
arpl
mov
test
mov
cli
loope
insl
xchg
lds
in
or
test
xchg
fldt
pop
sarb
dec
out
das
call
jmp
fldt
ret
fmuls
fmull
and
cmc
mov
in
xchg
xchg
sbb
jns
adc
push
loop
cltd
mov
pop
hlt
nop
mov
hlt
jp
dec
cmc
les
aas
push
pushf
imul
add
mov
rcrl
stos
pop
xchg
nop
push
test
sub
adc
data16
scas
pop
movsb
adc
mov
push
dec
xchg
inc
push
hlt
adc
mov
jecxz
push
insb
push
push
out
es
xor
sbb
aam
sti
into
inc
cli
js
aaa
mov
mov
fidivs
xchg
sbb
or
in
push
push
mov
pop
pop
shr
xchg
jns
push
push
aas
mov
push
lea
in
sbb
roll
push
push
icebp
fnstcw
jmp
jecxz
adc
scas
xlat
dec
adc
xor
ret
adc
out
mov
mov
test
nop
cmpsl
xchg
sbb
jecxz
push
ret
mov
mov
add
pop
lahf
push
push
push
call
jns
and
push
aad
fs
jns
xor
push
cltd
pop
add
loope
mov
mov
pop
repnz
push
fs
push
ja
repnz
fcompl
inc
and
std
in
repz
push
rolb
cmp
pop
inc
mov
es
ret
call
popf
push
push
outsb
mov
sbb
scas
inc
inc
mov
int3
movsb
out
jecxz
ficompl
xor
jb
xor
pop
xor
das
in
mov
jl
and
fildl
push
mov
mov
daa
push
into
cmpsl
cmp
sub
and
push
stc
inc
cmp
mov
jp
mov
js
jnp
repz
das
mov
adcb
lods
movsl
push
sti
repnz
lods
cmp
enter
or
rorl
test
notl
fistps
or
push
push
jb
mov
push
jmp
fstpt
xor
or
mov
and
jnp
add
or
and
repz
in
mul
mov
sub
scas
stos
mov
add
xlat
test
vrcpss
test
and
cmp
pushf
orl
aam
xlat
add
sub
or
mov
sbb
mov
test
push
or
xor
mov
xchg
push
movsb
dec
test
mov
fnstsw
cmp
repnz
push
jmp
mov
imulb
lahf
inc
xor
inc
cmpsb
cli
xchg
cld
mov
adcb
push
out
ss
jno
cmpsb
insb
outsb
pushf
cmp
sub
cmc
mov
in
sub
icebp
add
push
mov
lds
xchg
in
inc
inc
mov
popf
popa
loop
int
sahf
jbe
sar
inc
test
pop
or
cmpl
pop
jbe
lret
pusha
pop
push
int3
adc
or
loop
cltd
test
pop
pop
jno
or
inc
xor
cmp
fst
pop
push
dec
ror
add
repz
push
inc
dec
inc
mov
out
pop
lret
ret
addl
push
in
mov
movsb
mov
aad
fimuls
pusha
dec
cld
jnp
mov
and
or
jle
and
lret
std
mov
out
arpl
insl
outsl
dec
jne
and
shlb
orb
int3
mov
jp
pop
push
and
in
xchg
xchg
jg
xchg
bnd
sbb
rolb
push
adc
add
cmpsb
insb
fs
jnp
cmc
cmp
in
fcmovbe
pop
xor
dec
xchg
fists
cmpsl
sti
xchg
out
sub
gs
into
xchg
adc
jg
mov
pushf
jbe
add
push
and
cmp
xor
in
addr16
imull
push
dec
sbb
inc
flds
cmp
cwtl
jb
sub
cs
and
sub
in
scas
pop
cli
push
loope
sbb
mov
test
test
test
sbb
push
push
cmp
lea
mov
jg
in
std
out
push
and
inc
sbb
dec
jne
ljmp
cmp
ror
pusha
out
repz
ret
xchg
xor
outsl
mov
movsl
ss
sub
or
fstp
push
sbb
jo
into
stos
cmp
je
popf
and
rcr
pop
addr16
out
mov
cmp
or
inc
adcb
ret
mov
jmp
clc
xor
mov
xchg
dec
loope
push
inc
jp
btr
inc
xor
jecxz
ret
push
inc
pop
xorl
shll
hlt
dec
sbb
push
out
jg
push
daa
pop
fdivs
clc
dec
lcall
loope
out
lock
mov
or
ficompl
mov
addr16
xlat
inc
jle
jo
shlb
xchg
sbb
dec
scas
jne
andb
xor
sub
aaa
mov
dec
aam
sti
pushf
pop
std
cmp
ljmp
daa
movsl
adc
aaa
or
or
xor
in
ljmp
imul
lcall
leave
mov
mov
lahf
inc
push
sub
pop
push
mov
mov
shrl
movl
pusha
inc
mov
mov
add
cld
pop
push
pop
flds
push
fidivrs
mov
cli
lcall
mov
xchg
xchg
mov
dec
out
or
pop
cmc
outsb
or
aam
insl
inc
and
arpl
inc
lea
stos
or
js
cmp
push
rorb
cli
mov
in
push
rcrl
insb
dec
mov
fisubrl
pop
mov
ja
sti
movsb
xor
push
loop
cmpsl
lds
shll
mov
or
push
out
adc
add
jno
mull
std
and
sub
stc
xor
stos
jl
popf
xchg
xor
adc
adc
dec
mov
add
and
mov
enter
mov
sbb
outsb
pop
fs
stc
cli
test
adc
mov
or
mov
cmp
mov
test
or
out
testl
cmpsl
mov
rcrb
lret
inc
fwait
pop
and
in
mov
leave
vmread
aas
es
bound
jge
xchg
and
sub
cmp
inc
orb
outsb
nop
clc
xor
out
cmpb
pop
ja
inc
cmp
xchg
in
mov
rcl
ja
imul
stos
mov
data16
pop
mov
sbb
loopne
jl
pop
addl
lahf
or
out
sub
inc
jno
push
stc
movsl
dec
call
jns
inc
ret
sbb
add
push
repnz
arpl
xchg
jbe
jae
pop
and
xor
es
jns
adc
xchg
icebp
push
fstp
mov
dec
push
repz
push
stos
fstpt
inc
test
pop
es
popa
sbb
addl
xchg
arpl
jecxz
fsubrp
pop
mov
cmp
sbb
out
fdivrl
mov
push
xor
sub
dec
mov
call
cld
imul
clc
xor
xor
pop
xlat
fisttpl
push
adc
pop
orb
adc
jno
pop
push
pop
int
cmp
push
in
mov
movsl
push
pusha
pop
gs
sti
hlt
scas
test
push
dec
sub
mov
mov
sbb
int
or
xchg
push
pop
mov
dec
mov
clc
in
sub
loope
gs
add
fsubs
mov
inc
push
fsubrl
pop
in
lods
and
sbb
lret
repz
jmp
lods
rorl
adc
enter
jg
pop
test
pop
dec
ret
xlat
int3
pushf
outsl
and
arpl
jmp
arpl
add
stos
jle
cmp
sbb
movsl
imul
insl
mov
leave
push
mov
lret
mov
pop
es
sbb
arpl
xlat
cltd
mov
dec
mov
dec
popl
lds
movsb
mov
jl
jae
sub
movsb
sbb
pushl
sub
imul
cmpl
xor
in
xor
cmc
sarb
sub
xchg
aaa
or
insb
sahf
aaa
jns
sub
inc
mov
adc
add
jnp
sbb
stos
or
adc
add
insl
mov
ds
loop
dec
or
or
ret
xchg
fdivl
jbe
adc
xlat
nop
addb
int
xchg
mov
lock
pop
leave
int
loopne
shlb
sbb
or
mov
or
inc
ss
pop
jns
rcrl
out
xlat
add
adc
mov
pushf
inc
jp
pushf
movsb
and
fstl
fwait
xchg
js
jns
popa
nop
sti
mov
test
lods
pop
add
stos
cli
jae,pn
popf
mov
mov
xchg
inc
mov
out
or
mov
psubsb
cmp
or
mov
mov
repz
ret
xor
ljmp
jae
xchg
xchg
fcomip
out
sti
fcomip
adc
ret
das
pop
fldcw
xor
mov
in
imul
sub
push
ds
pop
leave
ds
mov
mov
pushf
and
arpl
fcmove
out
push
push
arpl
jle
frstor
lods
icebp
rorb
addr16
mov
sub
push
pushf
out
push
cmc
daa
add
add
xor
xor
adc
dec
mov
add
outsb
jl
mov
ljmp
xor
mov
mov
xorb
es
ljmp
aad
shll
cmp
sbb
fcoml
cmp
lds
pop
pop
dec
adc
cmp
add
in
fisttpll
outsb
xchg
pushw
pop
add
int
mov
ror
hlt
dec
repz
xor
outsl
shrl
xor
in
inc
mov
jbe
in
xor
xchg
std
inc
pop
mov
cmp
enter
stc
rclb
fsubs
shl
jg
cmp
jge
in
xchg
lds
mov
repnz
sub
in
and
ljmp
dec
lods
fwait
pop
test
xlat
dec
mov
pop
cmp
ds
nop
push
inc
mov
mov
mov
cmp
dec
mov
jecxz
ss
movsb
sub
add
ret
and
movsl
adc
dec
xchg
out
dec
cmp
mov
sarb
mov
cmp
adc
scas
dec
out
cli
loop
leave
add
fwait
xchg
sbb
adcb
lds
jecxz
out
adc
push
cmp
aam
das
cwtl
mov
xchg
cmp
push
xor
call
fs
leave
xchg
jo
scas
repnz
cmp
xchg
sbb
sub
lods
and
ds
test
pop
push
xlat
jmp
cwtl
sti
xchg
mov
jl
fwait
mov
xor
inc
js
xchg
pop
push
inc
lahf
sub
and
int
je
insl
das
xchg
add
repnz
mov
mov
into
jne
adc
ja
imul
xor
arpl
push
adcl
push
lahf
fwait
lds
jnp
sub
pop
shr
fdivp
sub
aas
or
mov
hlt
movsb
pop
and
xor
sbb
push
xchg
jp
adc
xchg
dec
in
sub
and
mov
fstps
ret
les
js
sub
daa
xchg
jnp
cwtl
lret
inc
pop
roll
sbb
jno
enter
icebp
insl
test
mov
jp
pusha
les
mov
pop
out
popf
aad
jnp
clc
ljmp
jbe
pop
ds
int
fdiv
inc
fidivl
dec
gs
iret
andl
cmp
jp
dec
into
push
pop
bound
mov
xor
aas
pop
cmp
and
pop
aas
cld
xchg
das
movsb
and
mov
nop
add
mov
sbb
sub
inc
leave
shr
outsl
inc
aad
aas
lahf
dec
into
lret
aaa
mov
sub
sub
pop
mov
mov
sub
neg
mov
push
into
sub
fsubl
xor
mov
jae
jecxz
je
mov
shrb
pop
and
sbb
mov
add
out
js
inc
enter
pop
jnp
mov
sbb
enter
inc
out
popf
fwait
or
jecxz
dec
xchg
add
bound
push
cltd
les
cmp
jb
mov
out
out
mov
sub
or
mov
aad
aaa
or
push
add
daa
or
fsubl
xchg
jbe
pop
or
mov
mov
inc
xor
stos
int
sbb
js
fcoml
cmpsb
dec
cmp
fsubrs
xor
fsubl
xor
negb
push
pop
ljmp
jg
leave
xor
fstps
pop
lcall
mov
jp
push
idivl
popa
dec
push
add
mov
mov
xchg
aad
push
dec
jge
add
xor
or
stc
test
or
test
or
cltd
inc
sub
and
out
add
insl
popf
pop
neg
rclb
push
jns
pop
add
and
testb
clc
mov
clc
fmuls
scas
adc
mov
mov
lret
mov
daa
adc
inc
rcrl
fmuls
push
pusha
xchg
loope
lds
repz
fwait
push
fwait
mov
fisubl
lock
sub
cltd
sbb
push
push
fcmovnbe
lea
cmp
add
sub
pop
shll
inc
mov
loopne
rolb
jae
or
sti
cmp
add
push
imul
dec
iret
sub
ret
xchg
arpl
mov
pop
pusha
inc
pop
mov
nop
mov
xor
sti
mov
adc
icebp
movsb
cltd
fwait
cld
divb
sbb
sub
jmp
lods
jae
rolb
xchg
shlb
push
les
shl
std
imul
loopne
icebp
mov
push
cltd
push
pop
jmp
cld
adc
sub
addr16
add
dec
dec
mov
fistps
xchg
adc
rclb
les
mov
jae
lds
cltd
jo
leave
cld
sbb
sbb
jno
adc
jb
lcall
add
test
add
and
adc
sub
adc
pop
add
mov
mov
push
fwait
lds
xchg
inc
sbb
cmpsl
imul
bnd
enter
leave
gs
fnstenv
scas
pop
and
les
loopne
imul
pop
pop
clc
cld
jge
dec
xchg
fimuls
es
mov
push
xor
je
and
or
lods
cltd
test
dec
sbb
clc
es
rolb
sarl
imul
jmp
int3
xchg
sbb
loop
test
imul
jmp
data16
or
jmp
rcl
push
push
push
fstpt
pop
aas
push
jmp
hlt
aam
test
popf
gs
pushf
xor
xchg
push
fcompl
mov
loopne
cltd
out
dec
cmpsl
mov
sub
data16
add
gs
lods
mov
sub
jae
addr16
fsts
and
call
fistps
inc
ret
fs
sbb
push
inc
mov
jnp
popf
addr16
ja
sub
test
add
or
out
adc
sub
jnp,pt
arpl
inc
jle
mov
loop
and
sbb
mov
sbb
insb
movsl
push
cmp
das
and
mov
out
xchg
stos
pop
lods
cwtl
in
jns
jae
or
jp
cmp
or
cmp
dec
loop
js
add
mov
cli
clc
andb
pop
into
adcl
test
je
fnsave
jnp
mov
pop
adc
sarb
and
xchg
ljmp
sbb
inc
shlb
sbb
cmc
inc
push
sbb
icebp
mov
pop
xchg
xchg
test
enter
in
lret
or
or
dec
cmp
xor
ret
inc
imul
sbb
push
int
dec
insl
mov
sti
lret
xor
rol
xchg
jbe
add
xchg
adc
out
cmc
and
mov
idivb
push
jo
mov
inc
lahf
jge
mov
pop
fst
je
mov
aas
pushf
int3
dec
popa
rcl
and
fsubl
push
fcoml
adc
jno
in
mov
lahf
pop
cmp
cmc
cmpsl
push
enter
and
mov
mulb
jmp
sarb
cmpsb
add
sub
pop
dec
out
jmp
jns
loop
int3
shrb
cltd
push
xor
mov
lds
sub
shrb
xor
pop
inc
inc
push
push
jl
scas
cmc
cmpsb
test
shlb
lods
fwait
adc
rcrb
push
daa
dec
js
addr16
or
or
ret
repnz
adc
inc
mov
lahf
xor
inc
stc
pop
push
aad
enter
mov
pushf
add
jno
scas
sub
and
xor
movsl
gs
push
add
pop
int
inc
xor
mov
hlt
pop
popa
mov
hlt
xchg
pop
jnp
bound
mov
in
add
add
clc
mov
mov
mov
popa
dec
or
pop
jp
mov
hlt
mov
inc
setb
pop
lret
insb
mov
push
push
sub
sbb
fwait
push
sbb
dec
or
call
jmp
inc
xchg
inc
adc
aad
ret
jp
ds
xlat
mov
jge
aam
sti
ret
xchg
ds
xor
test
sub
and
insl
xor
iret
jp
cmpsl
arpl
push
lahf
cs
jnp
cvtps2pi
mov
rcr
mov
cmp
pop
cmpsl
jge
inc
in
fmuls
enter
arpl
pop
rcll
shlb
int3
int3
sub
cmp
cmpl
cmpsl
outsl
jecxz
sub
daa
imul
outsl
das
dec
push
jle
adc
sbb
inc
testb
jno
xchg
loope
dec
addr16
inc
adc
lea
sbb
fimuls
jg
cmpsb
mov
xchg
mov
lcall
ret
pop
mov
pop
jmp
inc
add
push
ss
xlat
sub
movsl
jne
imul
jecxz
mov
mov
mov
push
jns
arpl
xchg
xchg
pop
out
fsubl
push
xor
clc
dec
stos
dec
cs
loope
cmp
sar
aas
jp
jp
sub
in
pop
xor
cmp
insl
and
cld
scas
aad
fldt
push
cli
jno
popf
out
out
das
popa
jecxz
fdivs
jl
pushf
push
sub
jne
insb
test
add
xchg
in
fisubl
dec
mov
and
mov
sbb
push
cmpsl
dec
mov
cmp
sub
dec
cmp
push
daa
mov
pop
fidivl
hlt
stc
cmp
outsb
cmp
adc
movsb
scas
aam
push
mov
mov
xchg
sbb
test
pusha
xlat
popf
repz
push
pop
pop
xchg
int3
mov
shlb
mov
iret
inc
lcall
cmp
add
test
adcb
add
inc
mov
mov
mov
loope
popf
mov
lret
test
imulb
fadds
bt
dec
fisttpl
incb
notb
cmp
xor
inc
mov
addb
push
aad
xor
imul
imul
push
sbb
dec
sub
stos
fsubl
push
lahf
scas
mov
sbb
xchg
fsubrl
xchg
rcr
sbb
sbbb
dec
fsubrs
roll
xchg
nop
dec
sub
jo
mov
xchg
add
mov
or
aaa
mov
ja
adc
mov
fstps
in
inc
imul
or
cmp
cwtl
sbb
aaa
stc
fnsave
testl
scas
test
in
sub
pop
add
loop
shll
mov
sahf
xchg
in
cmp
jb
jno
popf
stos
sarl
sub
xorl
sahf
repz
push
test
mov
or
sub
out
icebp
mov
dec
pushf
call
or
inc
notl
insb
cmp
pop
or
jb
aam
daa
rcl
jmp
stos
movsl
jp
push
in
hlt
jecxz
jnp
sti
or
incl
in
repnz
sub
fs
dec
inc
adc
dec
xor
or
pop
sub
and
sbb
call
outsb
jne
subb
push
xchg
xor
adc
jae
inc
pop
iretw
pop
iret
push
fwait
adc
sbb
jo
and
push
jns
inc
cmpsl
cld
mov
adc
dec
aam
xchg
roll
jo
push
and
cmp
adc
loop
outsb
gs
imul
cmp
push
sbb
bnd
pusha
mov
repnz
movsb
lods
xor
movsb
cmc
pushf
sub
test
scas
push
mov
xor
lock
cli
mov
outsb
jns
inc
jo
dec
bound
and
pop
push
or
add
fwait
test
daa
inc
test
fadds
je
or
cltd
stos
dec
icebp
notb
mov
pop
arpl
or
stc
shl
dec
push
ret
add
ret
lock
call
fisubs
or
jae
pop
lock
jno
fwait
mov
das
std
cwtl
mov
add
mov
es
lahf
dec
cmpsl
adc
adc
or
bound
sub
dec
jg
mov
cmp
pop
mov
shr
mov
test
inc
jne
scas
xor
inc
jo
scas
test
mov
popf
jmp
addr16
or
cmp
push
inc
push
fistpll
daa
gs
xchg
add
jl
adc
adc
scas
cmpsl
pop
sub
aam
sub
mov
sbb
sub
leave
movsb
insl
daa
mov
test
adc
mov
movsl
movsb
ret
fwait
scas
add
add
scas
inc
aad
sbb
dec
in
sub
andl
roll
sub
scas
nop
sub
pop
mov
sbb
jne
sub
inc
cmp
xchg
call
out
mov
and
ss
push
and
cmpsb
lret
in
jge
mov
and
cmpsb
sbb
inc
sbbl
stos
fadds
aaa
ret
sub
cmp
dec
add
je
scas
inc
jle
stos
mov
pop
daa
aas
and
push
jbe
sarl
jo
clc
xchg
mov
and
mov
push
mov
sub
jg
cmpsb
mov
sahf
adc
sub
icebp
pop
mov
outsb
dec
inc
cwtl
ret
inc
aad
jb
loop
adc
outsl
sub
scas
punpcklwd
scas
aas
cmp
xchg
fwait
sti
mov
outsl
xchg
pop
mov
cli
test
pop
inc
cmpsb
cmp
out
push
jb
loopne
arpl
insl
sub
lds
cmc
add
mov
iret
outsl
dec
repz
fs
mov
xchg
dec
lods
dec
movsb
jnp
mov
aaa
push
jbe
lods
dec
adc
dec
sbb
sub
or
cmp
dec
cwtl
sti
cld
orb
ror
mov
push
sbb
dec
pop
xlat
mov
iret
subl
cmp
pop
insl
fwait
add
ss
jnp
imul
pop
and
cwtl
rcl
int3
push
fistl
lcall
sub
jnp
jo
lret
pop
mov
adc
xor
sub
mov
pop
stos
adc
cmp
adc
jmp
cltd
int3
rolb
test
push
and
mov
std
andb
xchg
adc
push
cmp
mov
lods
xchg
dec
stos
adc
xor
sbb
xor
dec
hlt
out
inc
sarb
jnp
sub
adc
push
cmp
pushf
mov
and
sub
fimuls
leave
movsb
clc
push
adc
notb
push
adc
fstl
mov
lret
stos
xchg
dec
add
fisubl
in
loop
testl
out
test
pop
flds
int3
popf
pop
mov
lea
xchg
jecxz,pt
xchg
adc
fcmovnb
pusha
nop
mov
mov
lods
mov
pop
lcall
ret
rcrl
leave
popf
pop
mov
fcmovnu
jno
mov
adcl
mov
sub
loope
mov
popf
xchg
into
cmp
xchg
mov
scas
inc
add
dec
or
pop
addr16
fs
or
insb
nop
inc
cmp
xlat
cmp
inc
push
add
push
dec
jge
push
inc
out
rclb
mov
cs
lcall
and
adc
dec
cmpsl
and
adc
and
ja
jae
das
push
xchg
xchg
sar
fisubl
out
rcrb
cwtl
outsl
push
dec
jns
add
das
mov
mov
addr16
test
push
aad
in
insl
pop
stos
shll
inc
xor
inc
sub
pop
in
push
gs
jo
aam
pop
inc
out
pop
sahf
cmpsb
adc
dec
loope
adc
pop
ljmp
mov
nop
outsl
pop
xor
and
icebp
mov
pop
mov
add
testl
adc
popf
push
cmc
jl
sub
ficomps
dec
add
mov
cld
sub
jecxz
icebp
es
je
dec
sbb
xlat
adc
in
cmp
cli
popa
sarl
push
outsl
movsb
bound
repnz
mov
lret
addr16
js
lods
cmp
lahf
iret
xlat
lea
jno
jno
shrl
xchg
mov
mov
shrb
dec
and
les
push
shll
or
in
or
dec
pop
test
popf
cmp
fldt
or
xlat
mov
sbb
sbb
inc
loope
loope
mov
outsl
xor
add
outsb
data16
push
jno
or
sbb
and
stos
es
xchg
push
dec
pop
fstpt
mov
cmp
push
add
xor
test
mov
filds
pusha
jg
sarb
jecxz
popf
inc
sbb
sub
notb
cmpsl
pop
sbb
pusha
sbb
pop
push
push
repz
stc
mov
sbb
dec
mov
ret
movsl
mov
stos
sahf
xor
sub
addr16
out
or
out
cltd
inc
fists
mov
push
sbb
sub
mov
mov
iret
mov
iret
hlt
jno
incb
scas
add
ja
sub
mov
lock
addr16
shl
and
fld
jmp
les
mov
scas
dec
mov
repnz
push
movsl
out
adc
gs
xor
mov
les
push
mov
jp
xchg
lcall
mov
push
add
pop
shr
pop
mov
fdivl
lods
inc
lahf
cs
push
aas
mov
pop
push
sub
mov
mov
loope
mov
xor
cmpsb
dec
sub
adc
aas
insb
pop
insb
rcll
sub
push
jge
dec
inc
mov
shlb
pop
lods
jge
out
subl
fmull
cmc
nop
mov
aam
mov
mov
mov
mov
in
jle
in
sbb
push
ret
fldcw
int
icebp
adcb
mov
std
in
add
movsb
into
xlat
sub
fildl
push
mov
xor
addr16
outsb
call
add
inc
lds
and
nop
daa
add
ljmp
movsb
pop
mov
outsl
cmpsl
xchg
dec
outsl
jb
fwait
inc
mov
push
jp
and
jle
int
jge
mov
xchg
scas
fsts
inc
addr16
sub
les
sub
mov
icebp
mov
outsl
inc
and
push
jnp
dec
out
pusha
jge
ret
mov
aad
mov
addl
jo
pop
dec
pushf
xchg
outsb
cmp
xor
mov
xchg
lods
xchg
arpl
jp
outsb
add
imul
adc
push
cs
dec
push
xor
sbb
pop
inc
arpl
cs
or
movsl
leave
dec
hlt
push
push
add
ds
outsl
xor
mov
adc
cli
insl
lret
mov
sub
fsubrs
clc
or
mov
data16
int3
shrl
icebp
rol
and
and
cmpb
fucomi
jns
cli
inc
dec
xchg
ss
iret
orb
xchg
sbb
xor
push
jecxz
xor
xchg
test
rcr
lret
cmp
pop
mov
pop
aaa
pushl
sub
cltd
aas
adcl
popa
movsb
das
das
xchg
sti
mov
lock
notl
push
pop
and
xchg
adc
mov
in
sbbb
hlt
std
mov
ja
data16
aaa
mov
jp
mov
mov
cli
mov
mov
dec
cltd
fistpl
push
dec
enter
call
rol
inc
dec
xchg
mov
test
inc
or
lret
inc
adc
xchg
adc
mov
cld
pop
pop
clc
cmp
mov
movsl
pop
imul
jp
arpl
add
enter
mov
int
pop
mov
addr16
adc
or
sub
movsl
xchg
lock
and
push
adc
nop
insb
fcmovb
or
popf
push
xor
out
leave
loope
add
adc
ja
sbb
js
aam
sub
push
mov
cwtl
int3
popa
mov
pop
mov
push
rolb
inc
stos
xchg
push
les
pop
mov
pop
addr16
dec
rorb
orl
mov
mov
repz
sbb
and
inc
ret
push
aas
sub
lret
les
cmpsl
aad
scas
iret
cmp
push
jae
fcmovu
add
push
and
or
xor
mov
outsl
lret
mov
in
mov
ss
ss
jno
daa
data16
jnp
mov
fidivrs
stos
adc
pop
insb
rep
fiaddl
push
sbbl
leave
insb
lods
push
dec
bnd
in
in
cwtl
jg
int3
mov
and
push
push
shll
xor
and
and
incb
repnz
mov
xor
xchg
repz
ret
xchg
in
cli
movsb
add
dec
mov
sbb
insl
jbe
adc
outsl
lahf
jg
mov
addl
mov
cmc
xor
es
cwtl
mov
jo
fbstp
pop
push
pop
ja
and
mov
and
push
cltd
push
xchg
lret
ds
imul
jns
mov
shlb
leave
sub
outsl
fadds
jo
fcompl
sub
adc
stc
dec
jmp
jbe
and
sub
clc
nop
pop
aad
cli
mov
fstpt
push
xchg
sbb
cmp
inc
inc
dec
lods
mov
or
pushl
js
cmp
sarl
popf
cmp
ret
out
popa
sub
pop
xchg
mov
xor
jg
dec
adc
mov
xor
shrl
sub
inc
gs
or
jbe
je
and
pop
btc
add
mov
or
mov
cmp
jge
sbb
push
testb
mov
movsb
test
xor
fdivs
dec
mov
xchg
jp
in
ror
mov
xchg
mov
ds
loop
xchg
sbb
adc
mov
and
mov
lds
mov
cld
insl
push
vminps
arpl
and
lret
aas
in
btr
je
fisttpll
rcrl
mov
stos
cmp
cltd
nop
ds
add
dec
sbb
inc
sbb
add
pop
xchg
xor
imul
xchg
mov
cmpsb
add
stos
testl
pop
out
jns
sbb
scas
sarb
lods
fisubl
sub
call
jp
shrl
ret
pushf
cmp
xor
mov
and
test
les
test
and
push
outsb
movsl
daa
or
cmp
mov
test
pop
popa
adc
lcall
push
mov
ss
sbb
dec
sbb
lret
and
jecxz
inc
inc
iret
push
pop
xlat
adc
mov
in
inc
gs
xor
adc
pushf
jmp
pop
bound
imul
xor
and
mov
dec
xor
cmpb
idiv
adc
cmp
and
loopne
push
sub
sbb
rolb
pop
les
sbb
pushf
push
bound
cmp
std
pop
sbb
in
pushf
mov
testb
xchg
fisubrs
shlb
inc
mov
in
inc
push
std
or
das
xchg
xchg
mov
sub
dec
cmc
test
push
ret
inc
push
std
or
js
stos
shlb
mov
jns
push
and
mov
cmp
or
mov
icebp
sub
lock
int3
out
shll
scas
pushf
adc
xchg
js
rcrl
jae
or
scas
lret
jo
jno
shlb
fistl
xorl
mov
pop
or
mov
leave
cmpsl
mov
cmpsw
or
addr16
sub
push
dec
imul
inc
movsb
cwtl
movsb
repnz
xor
mov
in
jnp
lock
stos
jbe
lock
into
dec
mov
test
repnz
mov
pop
lds
and
xchg
imul
and
test
insb
aad
adc
shr
mov
aad
lret
jns
movsl
xchg
cltd
jg
and
rcrl
icebp
imull
sarl
pop
dec
inc
mov
dec
xchg
gs
dec
jae
and
xchg
popf
mov
lahf
adc
repz
pop
shl
mov
pop
in
adc
xorl
mov
mov
or
rorb
sbb
dec
bound
f2xm1
pop
fnstcw
lods
xchg
mov
fs
jecxz
cmp
int
insb
pop
sub
pop
push
lret
popf
push
inc
aam
sub
hlt
add
pop
das
scas
adc
mov
das
insb
mov
addr16
sub
cmp
push
and
cs
adc
cmpsl
mov
sbb
and
xchg
sbb
test
pop
aad
notb
inc
test
or
mov
in
push
inc
fwait
loop
data16
jnp
hlt
int3
jle
int
outsl
fwait
je
cltd
or
mov
xor
rcl
cmp
mov
lahf
dec
jl
push
jmp
xor
ret
cltd
jbe
dec
ja
pop
mov
cmp
inc
in
xor
insl
mov
inc
mov
repz
jge
add
neg
cmc
loope
rol
adc
neg
or
imul
data16
adc
clc
mov
lods
imul
cmp
test
ret
or
pop
add
or
mov
test
push
pushf
mov
inc
pusha
mov
add
push
aaa
xor
and
popa
out
fildl
mov
add
fucomip
testl
mov
pop
xor
mov
bound
jb
jbe
sti
jp
and
xchg
mov
mov
xor
cltd
hlt
push
mov
into
or
fucom
fidivrl
cmc
insb
pop
jns
jb
cmpsb
repnz
mov
xor
call
fs
nop
jl
stc
in
mov
fistpll
int3
adc
popa
xchg
stos
jne
iret
pop
inc
fidivrs
mov
jmp
xchg
popf
test
iret
pop
sub
mov
dec
mov
or
fmuls
sbb
push
aad
xor
xchg
and
jae
push
daa
test
xor
mov
mov
mov
inc
adc
enter
iret
out
sbb
pop
adc
hlt
aam
mov
push
xor
cli
sti
push
cmp
pop
je
inc
mov
mov
pop
into
mov
daa
cli
pop
xchg
add
push
mov
insb
out
arpl
pop
je
pop
pushf
cli
imul
int3
js
shr
ss
push
sahf
mov
adc
sbb
jg
aam
lcall
rcrb
add
ljmp
insl
sbb
loop
inc
jbe
jecxz
sahf
or
std
inc
fistpl
or
rcrb
push
xchg
mov
push
stos
add
pop
mov
pusha
xor
mov
lret
xchg
dec
pop
push
in
sbb
das
leave
arpl
cmpsl
addb
in
cmp
ljmp
jae
mov
jle
ret
sbb
repnz
ret
das
mov
arpl
mov
lcall
xchg
in
movsl
fcomp
cmc
push
or
fistps
cltd
sub
xchg
and
out
sahf
inc
jae
jl
add
rolb
push
popa
das
mov
mov
clc
pushf
in
dec
mov
xor
ret
and
clc
clc
aaa
xor
cmp
daa
cmpl
les
icebp
bound
jne
and
or
xor
movsb
lcall
jbe
inc
insl
stos
stos
addl
outsl
xor
test
fucomip
sbb
popf
adc
jns
imul
out
mov
xchg
ret
movsl
xchg
ficompl
and
outsl
xchg
mov
mov
incb
and
dec
cmp
in
test
loopne
js
pop
out
inc
cwtl
adc
pop
sbb
push
pop
adc
mov
fwait
ret
sub
cs
les
mov
mov
cmp
popa
sbb
stc
decb
mov
cltd
add
jne
imul
cmc
cmpsl
sub
lcall
mov
inc
dec
dec
dec
add
push
arpl
xor
mov
xchg
outsl
jge
xor
cmc
mov
or
fmuls
not
fucom
pop
movsb
pop
mov
jecxz
sbb
lahf
xor
in
mov
das
leave
enter
loopne
lea
test
fisttpll
xor
bound
roll
repz
movsl
sub
in
je
xchg
mov
into
push
ss
push
daa
lds
mov
push
mov
pop
add
jecxz
jmp
insb
mov
pop
pushf
out
fisttpl
out
add
jne
stos
lcall
out
jge
dec
movsb
or
and
jne
rcr
jne
jl
mov
js
lds
lret
sbb
mov
push
test
pop
dec
pushl
or
pop
jge
sbb
xlat
addr16
xor
mov
icebp
mov
xchg
dec
shrb
cs
je
clc
pop
xchg
push
sub
mov
and
mov
in
or
test
jecxz
mov
jp
add
cmp
add
mov
sub
and
lahf
lret
out
xchg
mov
mov
popa
and
jg
int
popf
inc
lods
and
push
and
mov
or
jne
pop
dec
xor
lret
bound
shl
aad
mov
pop
stos
jecxz
les
cmpsl
pop
add
icebp
xchg
sub
inc
daa
es
aas
out
sbb
mov
fsts
scas
or
inc
pop
fs
aas
xchg
xchg
lahf
pop
loope
push
xchg
pushf
std
imulb
popa
cmp
mov
std
cmpsb
mov
adc
or
repnz
cmpsl
jmp
mov
mov
or
or
xchg
dec
mov
or
and
push
out
xor
add
in
adc
lret
mov
xor
enter
xor
test
cmp
or
fldt
stos
std
mov
or
mov
and
leave
xchg
or
and
sub
push
aas
cmp
ds
jo
mov
xchg
sbb
and
push
push
loopne
std
int
jg
addb
push
dec
frstor
fwait
jno
enter
dec
mov
cmp
cld
cltd
or
cmc
jo
cmc
push
out
xchg
push
lcall
lcall
dec
cli
add
mov
xchg
and
in
mov
push
cmc
loope
daa
mov
dec
loop
repz
and
mov
sbb
rcl
aas
pop
jae
sbb
sub
xor
lods
in
cmp
repz
cmp
cld
mov
adc
divb
into
in
push
cmp
jae
nop
pop
imul
popa
mov
mov
adc
popa
cld
stos
and
mov
in
mov
enter
frstor
or
mov
pop
lods
jge
leave
adc
xchg
aad
sub
pop
ds
mov
cmpl
and
leave
arpl
cwtl
sub
fldenv
xor
ror
dec
and
scas
test
cmp
aad
pushf
into
and
sub
jmp
push
inc
fidivrl
inc
mov
outsb
arpl
sbb
xor
popa
popf
lock
jge
dec
mov
cli
ds
jecxz
mov
jg
or
jg
push
mov
adc
push
push
mov
mov
xor
dec
and
push
xor
mov
sub
push
pop
dec
ds
movsb
dec
sub
sub
jmp
jbe
loop
or
mov
sbb
or
add
imul
insb
dec
insb
mov
fs
gs
cmp
pop
cld
mov
stos
xlat
push
clc
std
xchg
add
in
inc
pushl
data16
stos
call
aaa
add
movsl
outsl
mov
cmp
dec
or
cmp
pop
xchg
inc
dec
outsl
insl
push
dec
bound
sub
cs
popa
je
add
push
mov
or
pusha
clc
mov
arpl
out
sahf
sub
lods
mov
xchg
jecxz
cli
xor
lret
add
and
jbe
inc
mov
mov
add
xchg
test
in
mov
jg
fs
lret
xor
or
repnz
das
test
dec
in
imul
or
je
stc
out
loopne
inc
ss
mov
mov
sub
add
mov
jae
daa
imul
and
push
sub
cmp
cmp
add
scas
push
dec
xor
cmp
and
hlt
cwtl
xchg
imul
imul
push
orb
test
into
imul
pop
sbb
ret
xchg
rcll
out
int3
mov
inc
mov
jg
clc
enter
adc
xchg
dec
cmpsl
pop
loop
mov
sbb
neg
scas
pop
cli
mov
and
or
xor
or
xor
mov
cli
pop
add
aaa
jno
jp
je
fs
add
xchg
inc
sub
sti
jp
jae
fmul
imul
pop
cmc
mov
jno
aaa
jecxz
shr
jnp
cmpsb
mov
adc
and
mov
mov
rcrl
out
fcmovnbe
out
cmpsl
out
icebp
fnsave
out
lret
pusha
jno
stos
scas
jge
daa
scas
test
inc
xor
icebp
shll
pop
or
mov
dec
or
daa
std
test
scas
or
xor
jo
cmp
ret
or
jae
mov
dec
jbe
js
mov
jmp
fs
lret
rcl
inc
imul
fdivs
fmul
subl
inc
cs
xor
movsb
jl
fldl
mov
sarb
mov
xchg
sbb
xchg
inc
jge
fdivrs
aam
or
scas
pop
mov
add
pop
ret
sahf
mov
enter
xchg
gs
dec
cmc
jp
xchg
pop
sbb
dec
sbb
mov
dec
loop
adc
pushf
sub
pop
sbb
test
mov
mov
shlb
scas
and
inc
adcl
push
lcall
cmpsb
jg
sub
push
mov
out
and
inc
mov
mov
ja
fbld
push
cmp
jns
mov
sti
and
test
jne
divl
push
scas
pop
arpl
loope
loope
test
mov
jl
pop
mov
mov
stc
mov
mov
xlat
lret
mov
sarl
add
out
jbe
mov
enter
cmp
movsb
dec
jl
xchg
mov
cmp
and
jne
aas
inc
xor
sub
ljmp
pop
pop
adc
mov
mov
and
push
dec
or
inc
mov
adc
scas
xor
jp
arpl
and
call
cmpsl
std
xor
mov
mov
sub
popa
jnp
xor
sub
jb
or
sbb
jbe
rclb
sub
shrb
push
stos
push
aaa
jecxz
jne
ss
fistps
dec
or
sbb
vpcmpgtb
gs
add
xor
xchg
icebp
cltd
jo
fcomi
scas
pop
mov
adc
js
push
dec
inc
or
cmp
lahf
cmc
in
mov
jbe
jecxz
mov
jae
cmp
pop
test
ja
pop
clc
adc
sbb
div
mov
imul
out
fsubs
sub
jae
cmp
fs
inc
ja
mov
xchg
or
mov
rorl
jbe
test
pop
insb
push
int3
lock
or
fisttps
pop
lods
lret
enter
xchg
je
xchg
in
pop
loopne
pop
pop
out
loop
jp
stc
xchg
jo
push
lods
xchg
popf
into
dec
leave
add
sub
or
push
xchg
mov
shl
add
je
add
mov
xor
mov
fcoml
pop
sbb
jge
or
or
push
mov
inc
pop
cmp
bound
shll
add
cmp
mov
xchg
lcall
push
cmp
inc
outsb
push
push
push
call
pop
inc
inc
mov
pushf
movl
dec
lock
cld
mov
repz
ds
fistps
insb
push
mov
and
imul
jecxz
sbb
mov
jb
dec
pop
out
sub
push
inc
push
push
mov
mov
push
fldt
test
adc
sbb
push
push
mov
int
sub
xchg
mov
ret
lea
mov
repnz
test
cmp
jmp
mov
mov
incl
testl
mov
scas
xor
scas
fnsave
mov
cmp
mov
adc
and
fwait
push
push
lods
fdivrp
sbb
cmp
lock
add
push
inc
and
sarb
adc
into
andb
pop
add
ret
int
test
push
push
inc
negb
loope
ss
inc
mov
cmpsb
frstor
or
int
pop
push
adcl
mov
jo
rcl
sub
xchg
test
or
pop
imul
outsb
jg
pop
vmovsd
dec
sub
movsb
or
into
cwtl
xor
clc
repz
stos
and
lcall
ja
repz
push
mov
jbe
shlb
cmp
icebp
mov
outsb
xchg
lret
pop
xchg
add
push
imull
mov
arpl
sbb
lock
sahf
enter
sbb
jnp
lcall
inc
imul
dec
clc
in
cmp
adc
inc
mov
xor
outsl
divb
add
addb
mov
in
xchg
ljmp
xor
fcoms
push
jo
mov
mov
lea
popa
daa
hlt
call
mov
add
add
or
imul
int
ja
jns
ja
test
ret
push
loope
inc
pusha
lret
sbb
sub
cwtl
pop
in
imul
sbbl
es
sub
or
ret
add
adc
into
mov
mov
xchg
add
add
xchg
inc
jg
mov
lds
ja
call
push
dec
jecxz
jno
loop
sbb
out
xor
pop
aas
out
sub
lret
mov
sub
add
out
arpl
cmp
std
stos
je
sbbl
add
fs
mov
inc
movsl
mov
bound
mov
std
fdivrs
jmp
lcall
push
sub
scas
and
xor
fwait
push
jecxz
mov
xor
sbb
xchg
add
out
loopne
in
cmp
sti
mov
and
scas
xchg
testl
int3
push
sbb
jno
pop
ljmp
pusha
add
roll
je
mov
ds
daa
inc
xchg
mov
dec
insb
and
icebp
or
cmp
stos
mov
add
jle
pop
test
mov
cli
pop
fcompl
cmp
into
mov
dec
adc
pop
scas
je
sbb
ds
insl
addl
out
imull
test
xchg
es
dec
lds
xchg
test
adc
in
addr16
and
xor
imul
adc
push
cld
lds
pusha
fwait
xor
cmp
mov
xor
rolb
xchg
mov
xchg
les
shll
jp
mov
jnp
call
fmuls
dec
into
in
popa
and
xor
and
andl
mov
sarb
pop
mov
in
jnp
pop
jae
movb
rorl
sub
or
mov
xchg
out
jecxz
xchg
jle
insl
push
leave
stos
subb
jnp
stos
pop
ficoms
mov
lds
stos
ljmp
inc
repnz
inc
cmp
inc
popa
bound
cwtl
lcall
scas
sbb
outsb
xchg
mov
decl
pusha
loop
or
shrl
jb
xor
inc
jo
pop
or
mov
xchg
movsl
jmp
cmp
mov
nop
mov
lret
mov
sti
push
repnz
inc
adc
mov
inc
dec
outsl
in
shlb
push
pop
decb
cmpsl
filds
pop
adc
imul
mov
ss
mov
sar
orb
and
lock
sahf
sbb
pop
add
arpl
sti
xchg
xor
and
into
int3
add
sbb
push
cmpsb
ror
pop
mov
shll
jbe
sub
sub
jno,pn
jp
sub
jns
dec
out
insl
cmp
cld
scas
ljmp
in
in
dec
sar
xchg
std
mov
xor
dec
mov
movsl
cltd
insl
mov
cmp
adc
scas
fwait
imul
xchg
popf
test
mov
xchg
push
sbb
pop
push
jecxz
leave
loopne
imul
xchg
pusha
xlat
pushf
push
jg
dec
test
cltd
mov
push
adc
jnp
ret
jb
fwait
ja
lret
inc
sti
ret
push
cs
aam
dec
fs
cmp
ljmp
addr16
xchg
cmp
stos
mov
or
fdivrl
or
loop
mov
inc
cmp
push
pop
div
xchg
out
push
scas
lcall
mov
fidivrs
popf
cmp
dec
inc
xchg
jns
jl
or
add
jl
rolb
mov
jbe
loope
rcll
jecxz
popa
or
leave
es
xchg
or
push
ds
mov
in
fildl
in
in
mov
xchg
mov
stc
mov
pop
loope
in
int
fwait
cmpsl
ss
imul
pop
popa
je
and
arpl
push
pop
pop
out
nop
cmpsb
cmp
dec
pop
add
fs
stos
inc
sbb
scas
nop
jl
inc
inc
cli
sbb
mov
lods
add
xor
mov
sbb
adc
mov
push
mov
out
iret
lock
push
mov
mov
adc
sub
lret
in
and
gs
fidivs
sbb
mov
or
int3
in
js
sub
aam
sub
in
imul
lret
lret
imul
sub
cld
sub
cltd
loopne
xchg
lahf
xor
xchg
adc
mov
loope
int3
dec
adcb
mov
mov
in
mov
sbb
adc
notl
push
mov
push
and
lock
mov
sub
add
push
push
aas
adc
push
shl
mov
ficomps
push
aaa
push
mov
stc
dec
in
push
xlat
ja
jge
cmp
icebp
mov
call
add
mov
inc
cmpsl
inc
test
dec
push
xorl
fxch
dec
pop
mov
sbb
outsb
inc
les
data16
dec
int3
mov
shll
xor
fistps
jns
test
jb
icebp
ror
les
adc
out
xchg
add
pop
add
xchg
test
inc
je
rolb
add
mov
pop
add
jg
inc
enter
pop
cwtl
lcall
shlb
push
es
js
xor
ljmp
inc
out
mov
repz
loope
push
and
cwtl
fs
push
jne
fs
inc
movsb
push
leave
pop
cltd
or
or
out
into
inc
imul
call
xchg
adc
push
hlt
jne
shlb
dec
mov
lret
jge
jge
xchg
cmpl
or
pop
or
adc
pop
loope
inc
sub
iret
pop
jg
push
add
sub
lds
pop
seta
test
data16
lret
in
outsl
lods
push
icebp
adc
cmp
sbb
nop
sti
or
add
xor
xchg
xor
lahf
and
jnp
nop
lods
sbb
push
ds
pop
pop
jg
and
in
mov
adc
enter
nop
pusha
fld
sbb
jae
popf
addr16
or
mull
icebp
mov
pop
push
xchg
push
jae
pop
enter
xor
insb
enter
mov
jmp
ss
out
je
frstor
adc
push
mov
xor
cmc
int3
movsb
cli
xchg
pusha
outsl
push
jg
pop
jae
push
pop
not
in
and
test
or
xchg
inc
push
pop
nop
mov
aaa
stos
push
dec
xchg
repz
adc
shrl
dec
fidivs
xlat
sub
mov
mov
lea
stc
sbb
xor
aaa
arpl
es
xor
mov
mov
mov
imul
jp
push
push
jae
enter
pop
push
sub
pop
sub
jmp
add
clc
sbb
ss
push
repz
xor
mov
pop
mov
ret
inc
shrl
es
sbb
xchg
aas
xchg
or
cmp
inc
outsl
pop
mov
pop
enter
rclb
push
addr16
arpl
mov
and
sahf
mov
incl
outsl
pop
in
sub
shl
data16
mov
sub
xor
mov
sbb
inc
sub
or
or
dec
out
pop
test
frstor
loopne
fdivrl
shr
clc
rorl
or
into
and
inc
sbb
iret
xor
push
repnz
jae
arpl
jl
cs
jl
test
mov
jnp
inc
pop
ja
push
pop
aad
mov
dec
mov
call
lds
mov
sti
ds
inc
outsb
fisttpll
push
sti
sub
jae
sub
movsl
inc
add
insl
stos
lret
movsb
push
mov
aas
les
fadds
out
jecxz
cli
and
orl
xchg
sub
pop
jbe
in
adc
insl
dec
fwait
dec
xor
adc
or
mov
ret
pop
ret
xor
int3
out
add
popa
push
push
jmp
push
jno
mull
daa
mov
dec
push
or
xchg
ret
pusha
movsb
js
imul
adc
imul
movsl
inc
pushf
pop
aam
sbbl
xchg
loope
sub
fcmovb
dec
imul
lahf
dec
and
rorb
cltd
or
jbe
jle
adc
xor
pushf
cmp
and
pushf
push
addr16
xchg
fisttps
subb
lds
cmp
leave
mov
inc
xor
inc
ljmp
dec
sub
cmp
cmp
or
dec
lret
mov
mov
movsb
lock
jl
pop
fst
jl
sub
and
add
xor
ret
in
add
push
dec
jns
jns
out
std
mov
repnz
mov
jp
cli
aam
in
movsl
push
jge
out
inc
inc
sub
or
push
lcall
repz
push
enter
xor
arpl
mov
in
push
out
push
jmp
shlb
sar
jbe
adc
jnp
jl
jmp
dec
jmp
pop
pushf
in
out
dec
and
outsl
inc
lea
cmpsb
mov
out
inc
mov
stos
xor
imul
out
sub
pop
outsb
cmp
cwtl
js
bound
xor
mov
or
rolb
add
sbb
mov
leave
lahf
pusha
rclb
mov
sbb
add
std
arpl
das
xchg
dec
cmp
push
adc
inc
dec
dec
pop
ss
sbb
mov
das
push
js
nop
sub
out
in
mov
std
ret
stc
cmp
inc
rcrl
xchg
xor
sbb
fiaddl
ds
movsb
adc
push
cld
or
sub
mov
push
add
and
movsb
popa
cli
cmp
push
cld
fs
fistpl
cmp
mov
out
in
bound
ljmp
cmp
cmp
cmpsb
aad
movsb
dec
fld
jb
pushf
scas
and
sub
pop
loop
or
sti
imul
fs
call
mov
pop
push
out
mov
call
mov
shrb
cwtl
mov
in
mov
test
sub
loopne
and
push
push
fs
aaa
add
mov
pop
mov
sub
add
lret
lock
mov
xlat
pushf
jecxz
pushf
or
jle
scas
dec
out
inc
sarb
mov
movsb
in
bound
pushf
xor
dec
xchg
cmpsl
cmp
add
insb
mov
xor
push
jbe
fst
das
or
jle
cwtl
inc
cmp
adc
jl
jle
lds
stc
rcl
dec
inc
or
and
cltd
js
imul
subb
or
popf
mov
cwtl
in
roll
icebp
inc
fsubl
movsl
pop
mov
push
in
jp
xchg
inc
cmc
sub
push
cmp
push
leave
jo
dec
mov
mov
xchg
lret
cltd
sub
xor
jb
test
push
insl
sarb
sbb
insb
xor
lods
jg
icebp
lds
sbb
mov
movsb
fsub
pop
push
fstl
and
push
push
ljmp
mov
ds
ds
loop
rorb
mov
sub
lea
jnp
and
sub
inc
sbb
leave
or
jae
adc
mov
lahf
adc
xchg
sbb
sbb
fimull
fwait
repz
fdivrs
es
jp
mov
lea
mov
cmp
push
fistpll
jge
push
mov
stc
or
imul
sub
sub
jo
imul
sbb
sbb
insb
jg
push
rorl
movsl
daa
xor
jmp
jo
xchg
inc
or
push
std
pop
jle
mov
lret
adc
mov
arpl
imul
js
xlat
or
pop
out
mov
sbb
nop
push
and
into
adc
les
hlt
sbb
sub
cld
data16
mov
notl
pop
jmp
mov
pop
out
xchg
idivb
sahf
mov
xchg
fisttps
ror
cmp
sbb
into
push
pop
scas
pop
jb
fsubl
cmp
ficoms
repnz
cltd
fldcw
jg
xlat
jle
adc
stos
xor
pop
and
inc
push
mov
sarb
dec
xchg
sbb
or
dec
sub
ret
fdivr
pushf
mov
cli
andl
sbb
das
shl
push
lock
shlb
push
ds
movsl
fcmove
cmp
bound
lods
lds
outsb
cmp
imul
add
and
mov
push
pop
stos
jg
or
sub
cmp
in
inc
aaa
push
dec
fildll
adc
fbld
insb
ret
int3
pop
int
sti
cmpsl
rolb
movzbl
decb
sarb
and
inc
fistpll
test
ja
xlat
sbb
mov
pushf
aas
fildl
push
das
cmp
mov
dec
inc
dec
stc
sbb
out
mov
scas
int3
push
mov
or
loope
ret
rol
inc
and
jno
stos
dec
fs
fnsave
icebp
insb
and
shlb
inc
vpandn
jnp
popa
jl
out
inc
cmp
test
and
je
call
adc
inc
cmpsb
jmp
cmp
jle
xor
out
jecxz
rcr
ficoml
and
stos
mov
ret
mov
bound
push
adc
inc
lcall
sbb
dec
out
scas
sbb
mov
mov
xchg
movsb
xchg
movsb
xorl
out
adc
shll
sub
cltd
inc
pop
aad
shl
loopw
push
adc
callw
sbb
xchg
jo
push
fcmovne
shll
sub
fisubs
call
cmp
cltd
out
fidivrs
jp
push
cmpsl
mov
or
shrb
push
mov
pop
adc
sub
mov
popa
mov
pusha
inc
inc
jg
flds
cmp
sbb
push
hlt
xchg
sarl
push
loopne
inc
aaa
out
xor
cmp
dec
sub
fimuls
ret
popa
cmpsb
ret
xchg
xchg
jg
lock
mov
ret
pop
jbe
cmpsl
xchg
jmp
jae
or
dec
test
lea
sub
cmp
dec
adc
dec
inc
xorl
lds
add
lock
ja
loop
xchg
xchg
cmp
jge
dec
in
out
scas
mov
push
in
add
mov
mov
inc
inc
dec
lret
mov
jg
inc
dec
sahf
mov
ret
mov
in
jae
popa
das
xor
xchg
add
pop
jae
popa
sbb
rcrl
push
pop
cmp
sub
or
arpl
inc
mov
mov
jle
add
push
stc
fstp
add
pop
aas
jle
pop
fisubrs
xor
cmp
ror
lret
sbb
jne
inc
loop
icebp
add
orb
dec
mov
mov
push
mov
or
rcrl
jp
jecxz
ficompl
xchg
mov
sar
mov
push
mov
pop
jnp
push
cmp
pop
mov
pop
das
dec
dec
mov
inc
inc
sub
inc
xor
xor
push
xor
mov
add
cmp
arpl
push
popa
mov
pop
mov
or
adc
adc
xchg
sbb
dec
rol
cli
aaa
rolb
gs
dec
or
lret
ror
cmp
loop
insl
sbb
aad
ja
adc
out
mov
sub
in
int
mov
loopne
shlb
or
mov
imulb
jmpw
adc
mov
sub
xchg
lds
mov
cmpb
call
fdivs
lods
movsb
cmpl
mov
xor
sbb
arpl
ret
cmp
ds
pop
fcoml
movsl
push
mov
aaa
push
pop
jle
rolb
daa
pop
pop
lock
fdiv
xor
mov
and
jg
cmpsl
bound
mov
scas
xor
and
xchg
jo
in
push
xchg
mov
rcrl
aam
inc
push
sub
repz
sbb
loop
int3
fimuls
test
adc
das
jb
xor
or
xor
pop
aad
mov
dec
test
jbe
repnz
push
mov
xor
dec
xchg
arpl
movsl
or
adc
hlt
jle
jo
dec
dec
dec
sbb
xchg
iret
pop
pop
js
mov
jnp
mov
gs
mov
push
ds
jg
aam
mov
out
ss
test
incb
out
mov
mov
and
add
or
or
in
enter
js
adc
dec
mov
inc
movsl
inc
or
mov
lret
fmull
rorl
mov
fs
js
jmp
imul
rclb
enter
jp
or
sub
loop
xchg
push
mov
and
lods
jle
and
addb
pop
push
xor
sbb
dec
push
iret
jmp
adc
insl
sbb
mov
pop
stos
dec
daa
andb
ret
leave
xor
mov
inc
dec
cmp
or
fdiv
mov
fimuls
xchg
loop
add
mov
lods
mov
movsl
leave
gs
ret
inc
dec
fwait
gs
cmp
imull
pushf
mov
mov
in
leave
add
arpl
add
xchg
cltd
push
dec
sbb
sbb
jo
adc
lds
jae
inc
mov
jno
lret
pop
stos
jle
icebp
mov
fimull
xchg
dec
pop
sbb
mov
cmp
sbb
pushf
pop
pop
mov
adc
jge
inc
pusha
mov
and
jp
rclb
inc
sbb
mov
out
rorl
sbb
gs
int3
loopne
mov
data16
jae
mov
jle
adcl
push
cld
or
call
jbe
sbb
or
sub
dec
js
cmp
movsl
push
xchg
out
popa
inc
out
movsb
mull
call
cmc
jmp
add
pop
mov
sub
lods
movsl
dec
add
xor
sbb
pop
cmpl
scas
or
push
sub
lret
xor
adc
or
lods
mov
fs
lcall
outsb
clc
xor
mov
xor
cmpsl
cmc
stos
repnz
or
xchg
lret
sbb
shll
lahf
lret
dec
lds
cmp
iret
daa
pop
or
loop
imulb
pop
rorb
mov
scas
and
es
xor
xor
inc
push
movb
add
push
pop
std
sbb
pop
mov
das
pop
or
inc
testl
mov
xchg
push
jae
aad
orb
scas
pushf
and
gs
mov
jp
and
nop
aaa
cmp
adc
dec
scas
jmp
enter
xor
dec
pushf
loope
in
sbb
mov
xor
sbb
and
adc
outsb
aas
sti
mov
xchg
in
mov
jne
jnp
mov
cli
add
cmp
fstp
adc
sbb
and
cmp
repnz
jl
int
xor
or
fadd
mov
or
sub
insl
adcl
out
pop
leave
jno
fmull
dec
xchg
les
cmc
idivb
add
arpl
insl
or
add
shl
outsb
nop
fmulp
clc
mov
iret
add
push
fs
mov
fs
es
es
and
movb
dec
cmc
mov
push
push
jle
add
mov
fs
int
xchg
cmp
pop
xor
sub
ffree
dec
adc
je
sbb
pop
fdivl
icebp
insl
push
pop
ljmp
xchg
xchg
addr16
loop
call
test
add
push
movsb
insl
int3
jae
mov
dec
ret
cmp
inc
lock
add
push
test
xor
push
rol
inc
vmovss
jne
dec
aas
ret
and
scas
xchg
add
fldenv
jl
stos
cs
ret
pop
pop
add
dec
and
sub
jnp
sbb
push
xor
mov
add
cmp
add
adc
into
stos
and
out
lcall
fsts
cwtl
das
enter
lock
xor
dec
mov
lods
push
lock
lea
repz
into
shlb
dec
pusha
mov
inc
jae
lock
test
je
add
leave
xor
cli
push
dec
mov
or
scas
mov
jle
movsb
sbb
mov
inc
repnz
jb
cmp
scas
sbb
nop
pop
ds
xchg
in
or
out
fcmovnu
rcr
jmp
out
addl
cmp
stos
js
adc
push
and
pushf
movsl
cli
cltd
and
or
outsl
mov
cli
push
add
xlat
inc
scas
popa
jge
adc
jne
mov
js
sbb
shll
pop
adc
and
pop
jne
adc
daa
cli
insl
inc
jo
pop
mov
fsts
outsb
imul
adc
cmpsl
push
sub
mov
insb
cmp
jp
ss
pop
enter
ljmp
inc
add
xchg
cmpsb
movsl
mov
ljmp
mov
pop
sub
popf
lcall
repnz
sbb
daa
inc
lock
xchg
lock
xchg
inc
ljmp
nop
xchg
mov
aad
mov
jle
mov
icebp
mov
push
dec
ret
cmp
lods
sub
repz
repnz
sub
decb
jbe
xchg
movsb
imul
inc
adc
popf
cld
add
dec
repnz
jg
clc
push
mov
mov
sub
movsl
pop
test
cmp
pop
push
repnz
data16
jmp
xchg
fildll
jae
out
jp
jae
add
mov
push
lds
sbb
inc
bound
add
int
sub
test
add
addb
jne
xor
stc
loop
leave
xchg
hlt
pop
cwtl
or
sahf
cmpsl
xor
pop
mov
cmp
dec
call
push
test
jl
jbe
adc
lahf
out
adc
pop
fadd
dec
ficoms
xorb
ljmp
inc
pop
push
loope
loopne
int
shrb
cld
mov
loopne
pop
xor
in
jle
ret
aas
fwait
cltd
stc
mov
xchg
pop
lds
das
fstpt
dec
ja
mov
jmp
pop
cmp
je
push
mov
mov
ja
aas
push
add
adcl
lret
outsb
add
add
sbb
sti
jl
add
dec
mov
hlt
jp
cmp
dec
jbe
loop
adc
imul
inc
and
lret
mov
imul
add
out
and
ficoml
mov
lret
popa
mov
inc
lds
scas
sbb
pop
dec
mov
lods
pop
fsubr
fidivrl
out
cld
outsb
adcb
leave
lea
hlt
cmp
sbb
dec
xor
jg
imul
cs
idivb
int3
xchg
movsb
and
push
pop
xchg
test
add
xor
and
inc
imul
mov
lods
mov
inc
or
into
insl
jb
pop
cmp
push
jl
pop
cmpxchg
negb
push
popf
sub
sbb
jle
cmpsb
add
js
push
arpl
ret
call
mov
out
jb
data16
pcmpeqd
or
fiadds
inc
xchg
mov
xchg
xor
xchg
repz
sar
or
cmp
lcall
mov
push
inc
push
xor
xchg
jle
jns
cmp
shlb
xor
in
xor
les
out
fcmovnu
stos
into
jb
insb
jle
push
rorl
jecxz
push
mov
cld
add
fisubl
shrb
icebp
or
movsl
push
jl
jmp
cltd
lds
jmp
or
sub
mov
jae
ret
fildl
lret
xchg
in
mov
clc
cmp
addr16
cli
aas
mov
adc
jne
scas
or
adc
jg
or
and
ljmp
mov
sbb
cmp
push
cs
loop
aad
mov
test
mov
shrl
mov
xchg
dec
out
or
bound
pop
test
jmp
cmc
xchg
stos
divl
xchg
hlt
add
aam
sarb
adc
xor
int
pop
cmovne
btr
push
xchg
insl
and
loopne
adc
cmp
dec
xor
pop
and
sbb
xchg
push
mov
push
daa
fucomp
jnp
add
shlb
dec
cmp
xchg
ret
xor
fsubp
fistpll
inc
stos
into
mov
out
cmp
jae
cmpsb
psrlw
cmp
andl
inc
jmp
adc
dec
push
aaa
insb
daa
out
jle
xor
or
fcmovbe
xchg
in
cmpsl
jge
sbb
test
xlat
test
pop
push
lcall
mov
inc
sub
push
cmc
in
mov
jb
sub
cmp
push
inc
mov
pop
jo
or
mov
pusha
push
cmpsb
push
pusha
aas
and
in
nop
lock
mov
ljmp
push
test
xchg
adc
repnz
pop
xchg
cmpsb
dec
xchg
mov
sahf
in
lret
cmpsl
pop
add
push
mov
imulb
sub
mov
std
aam
mulb
mul
mov
add
out
cmp
sub
jae
lea
sarl
xor
fwait
addr16
push
xchg
sub
sub
lods
test
or
push
pop
addl
sub
data16
cltd
dec
ret
testl
int
lea
imul
jo
bound
clts
xor
scas
aam
inc
mov
adc
outsb
orl
dec
jmp
shrb
sub
inc
pop
add
cli
inc
dec
mov
lock
add
sbb
adc
jno
ret
mov
clc
dec
das
test
fcompl
mov
add
or
rcpps
dec
hlt
cmp
bound
mov
dec
push
cmpl
int3
sbb
adc
dec
ret
shlb
cmp
test
aas
nop
or
movsw
shlb
es
cwtl
and
sbb
adc
lods
fs
ret
adc
push
or
cmp
out
scas
jg
or
add
lea
mov
pop
arpl
rcrl
out
repz
lret
loopne
ds
mov
cmp
jb
add
cwtl
mov
out
add
jmp
jp
stos
adc
je
jle,pn
fwait
inc
xor
cli
or
hlt
add
mov
jbe
xchg
sbb
je
xlat
mov
xchg
jg
lock
inc
arpl
das
mov
cmp
rclb
jo
mov
ret
sahf
mov
fimull
mov
pop
test
mov
sbb
cmp
cmp
outsb
cli
jge
and
movsb
or
mov
sbb
lahf
std
pop
paddsw
inc
jnp
mov
adc
pop
xchg
and
leave
sbb
stos
or
or
adc
stos
inc
push
scas
mov
cmpsl
fistpll
pop
and
subb
ds
cs
add
jg
adc
aad
loope
cmc
popf
mov
mov
movsb
push
sahf
xor
mov
mov
int3
inc
xor
mov
fwait
mov
cmc
xlat
or
call
add
add
jmp
add
adc
push
sbb
cs
flds
test
cs
shll
lods
mov
xchg
std
cs
add
sub
in
outsl
mov
sbb
mov
pop
pusha
adc
xchg
pop
inc
in
pusha
movb
push
jne
xchg
mov
aaa
nop
das
popf
add
shrl
mov
repnz
push
cli
rolb
xor
sbb
call
jp
in
jb
mov
jns
sbb
aad
add
dec
cmp
pushl
pop
lret
and
insb
loopnew
addr16
cs
je
xor
les
sbb
icebp
cmpsb
in
out
popa
dec
in
in
scas
repz
outsl
loop
push
cs
std
jg
mov
ret
test
mov
testl
and
jg
and
in
shll
movsb
mov
jae
inc
adc
xor
mov
ret
mov
mov
mov
sbb
es
xchg
push
loop
pop
ljmp
push
pop
xchg
cmp
cwtl
or
pop
scas
push
scas
pop
jp
pop
or
dec
mov
call
push
and
mov
je
add
xchg
xor
ret
cs
movsb
push
jge
xor
fldt
push
out
pop
mov
add
jle
data16
jp
mov
aas
jno
inc
clc
and
ss
and
and
loopne
xor
push
out
add
sbb
lds
mov
mov
icebp
add
cmc
sub
in
aaa
dec
mov
into
push
mov
mov
imul
sahf
movsb
test
aam
out
repz
push
iret
dec
aas
inc
or
cwtl
loop
cmp
sub
aam
inc
aad
jle
push
sub
loopne
mov
or
mov
rcrb
mov
adc
addl
scas
bound
int3
jae
dec
mov
outsb
xchg
lahf
dec
movsb
pop
std
lock
adcb
pop
mov
in
push
adc
or
out
push
std
cli
adc
and
cs
fidivs
enter
out
and
mov
mov
adc
imul
shrl
lcall
push
push
inc
jge
mov
ret
inc
jp
jmp
xchg
push
mov
outsb
jmp
jno
aaa
notb
rorb
jcxz
enter
fdiv
lret
or
or
mov
cmpsl
in
inc
cmp
out
ss
into
add
loope
lods
js
ja
lcall
pop
jg
mov
ljmp
push
mov
pushf
inc
pushl
xor
arpl
cwtl
repz
ret
mov
in
fcomp
pop
pop
aas
mov
daa
push
enter
mov
js
jbe
icebp
lret
and
nop
jb
ja
lahf
pop
inc
cltd
lods
adc
mov
in
rcrb
pop
inc
idivb
pop
cmpb
ljmp
pop
mov
xchg
int3
ret
clc
cmpsb
imul
cmp
imulb
jo
out
fxtract
jmp
in
lods
jmp
pop
addr16
std
lock
fsubl
bound
pop
fldenv
add
jne
call
sarb
int3
ds
mov
cmpsl
scas
add
inc
jge
adc
dec
out
inc
inc
xorb
jecxz
sar
dec
outsl
and
mov
inc
cmpsl
pop
ret
int
xchg
mov
and
cmp
add
popa
cwtl
enter
cmp
xchg
aam
sub
push
fsubr
add
mov
sahf
pop
mov
cmp
daa
sbb
iret
or
adc
fidivrs
lret
pop
dec
push
jne
jecxz
mov
insb
add
dec
js
in
mov
faddl
mov
pop
fwait
gs
mov
mov
nop
xchg
addr16
nop
jno
outsl
cmpsl
sub
sbb
lret
mov
outsl
jg
cmc
leave
cmp
mov
sbb
push
jns
sti
or
adc
mov
mov
xor
or
cltd
imul
mov
pusha
lea
fwait
jne
ljmp
push
push
call
cmp
sub
and
mov
fsubr
mov
sub
adc
mov
test
inc
xor
inc
cmpsl
pop
xchg
jecxz
icebp
mov
push
mov
in
xchg
add
nop
cmp
fsubs
scas
add
and
push
popa
fisubrs
sub
subb
scas
adc
test
out
or
mov
sub
jle
fldt
cwtl
ja
lret
fimull
jns
addr16
lods
jg
aam
lret
int
push
lea
fcos
cwtl
sub
pop
sbb
inc
mov
pop
lea
lea
lret
jmp
cmpsl
adc
inc
push
call
in
or
cli
pop
adc
stos
sbb
mov
xchg
fimuls
adc
clc
fiaddl
sbb
adc
adc
pop
pop
stos
jb
icebp
inc
incb
dec
ds
dec
inc
push
adc
adc
adc
rorb
enter
bound
jl
pop
outsb
sub
mov
mov
mov
sbb
in
insl
inc
test
xchg
push
xor
push
push
rcll
mov
mov
and
inc
jge
fsubl
adc
incl
mov
je
push
xchg
mov
rolb
add
fisubs
out
lods
sbb
and
sbb
jp
pushl
mov
iret
icebp
iret
adc
out
clc
pop
das
shlb
std
inc
movsb
jno
test
push
mov
xlat
hlt
mov
in
mov
into
mov
push
jge
mov
add
je
push
push
mov
lahf
dec
clc
mov
ficoms
sbbl
mov
mov
fildl
dec
cmpsb
xor
and
mov
es
dec
shr
jno
push
pop
sbb
inc
jmp
lret
in
popf
xchg
pushf
add
test
int
test
pop
es
les
mov
decb
mov
sub
inc
xor
cmp
sub
andb
ret
popa
aas
je
mov
movsb
or
mov
add
hlt
in
xlat
cmc
icebp
and
mov
jmp
inc
inc
and
dec
lds
and
dec
and
imul
cmp
xlat
xchg
rolb
nop
mov
mov
mov
out
dec
movsb
je
pop
push
sub
inc
adc
out
xlat
mov
mov
imul
pop
xchg
rep
aaa
shlb
jge
cltd
push
xor
mov
ja
or
inc
ljmp
rcll
push
jbe
mov
scas
pop
jo
jmp
loopne
push
add
push
adc
lods
idivb
shll
ret
pop
mov
mov
iret
call
rorl
shll
or
stos
rcr
dec
dec
movb
or
sub
add
int3
add
sub
fldl
or
fwait
cmpsl
rolb
data16
mov
mov
push
cmp
pop
rcrb
lahf
popa
in
add
mov
inc
sub
add
jae
rcrb
or
xchg
pop
adc
je
ret
xchg
sti
xchg
sub
pop
cmpb
add
cmp
mov
xor
cltd
xchg
fcmovnb
inc
xor
mov
push
adc
stos
mov
aam
adc
sbb
sub
pop
lcall
sbb
shr
insl
ja
je
mov
adcb
cld
push
cmp
xor
mov
push
pop
cmpsl
jg
sbb
inc
imul
aas
xchg
or
cmpsb
iret
xor
mov
orb
push
xor
bndldx
add
adc
test
out
inc
cs
notl
xchg
pop
cmc
scas
dec
pop
rcl
xchg
inc
cli
push
lock
xor
ret
inc
mov
fldl
cmc
cmpsl
pop
xchg
dec
or
aam
call
pop
mov
push
inc
jo
in
cmp
jns
sarl
inc
push
stos
shl
test
lret
and
xlat
jno
lock
mov
or
adc
xor
arpl
xor
arpl
jb
adc
pop
sbb
clc
mov
mov
lods
sbb
inc
jecxz
es
dec
jo
loopne
xchg
or
std
mov
or
cmpsb
cmp
sub
mov
cmpsb
adc
push
insb
out
mov
mov
bound
pop
hlt
pushf
push
fwait
cmp
dec
call
fadds
fisubrl
sub
ss
mov
stc
xorl
sahf
stos
cltd
jne
cmpsb
popa
or
add
dec
sar
popa
rcr
dec
lret
out
jle
xor
cli
pop
push
in
into
xlat
jnp
call
xor
sarb
dec
sbb
dec
roll
aas
insb
movsb
lods
mov
scas
movsb
mov
aam
outsl
outsl
arpl
mov
loopne
and
incl
ja
stos
ss
add
sbb
les
das
ret
push
xor
cmc
pop
iret
cmp
out
pop
add
aam
stc
leave
ja
out
aad
ret
fstps
fs
pusha
insb
movl
lret
xor
jae
repnz
fidivs
mov
push
sbb
jmp
ficomps
push
or
out
pop
leave
mov
add
inc
or
pop
inc
sub
sub
test
loope
mov
addr16
call
jl
lret
ret
ss
inc
pop
pop
mov
fcmovbe
sub
int3
test
mov
add
inc
xlat
jl
mov
lea
or
and
packuswb
cmp
mov
mov
push
jg
and
push
adc
mov
xlat
or
mov
test
ds
nop
std
xor
xchg
cmp
icebp
inc
push
sbb
pop
mov
pop
fisttps
inc
out
dec
mov
sbb
movsl
push
push
std
in
shrl
mov
lea
mov
xlat
lret
cmp
cmp
repnz
pop
fdiv
mov
loope
add
in
das
test
popa
jb
fs
cs
adc
iret
js
clc
ja
mov
add
leave
xor
push
push
inc
cwtl
sub
inc
jmp
stos
sbb
movsl
out
ja
adc
popf
cmp
jnp
push
fsubs
inc
add
sub
sar
fstpl
dec
ret
push
outsl
xchg
xor
cli
ja
fwait
and
mov
sub
aad
int3
jo
mov
rorb
push
inc
adc
mov
or
cmp
pop
sub
ds
lret
pop
pop
ret
pop
clc
shl
pop
hlt
sub
pop
inc
xlat
xlat
mov
xchg
stos
das
pop
adc
inc
adc
sub
xchg
lret
inc
sub
sub
incb
cmp
ret
push
sbb
jmp
add
cmp
call
push
nop
sbb
imul
mov
inc
add
aad
adc
jne
hlt
xor
insb
dec
lock
or
lods
inc
rorl
mov
dec
repnz
arpl
iret
pop
sub
popf
mov
stos
cld
cmc
ja
sub
mov
cld
push
lret
outsl
notl
daa
or
mulb
cltd
popf
jae
adc
sub
and
sub
fbld
pop
pop
aad
jecxz
mov
push
int3
xor
xor
sub
push
into
dec
cwtl
xchg
and
jb
inc
pop
out
pop
out
mov
jp
sarb
in
mov
and
outsl
lds
je
fstl
mov
decl
daa
jno
dec
into
sti
jne
fs
cmp
and
inc
outsb
add
cld
pop
inc
dec
js
leave
fwait
outsb
sbb
inc
imul
das
stos
xor
jbe
add
adc
hlt
jb
jp
cltd
add
lret
cmp
jle
fidivs
ss
lods
xor
das
je
pop
cmp
int
int
fs
ret
inc
push
or
test
imul
lock
aad
mov
inc
inc
mov
sarb
mov
ljmp
lods
xor
adc
arpl
add
add
sbb
xor
jnp
and
rorl
push
inc
jnp
xchg
int3
push
xor
pop
jne
or
adc
jp,pn
push
aam
cmp
gs
sub
iret
sub
psrad
jl
or
dec
popa
pop
mov
ror
fcomps
loopne
icebp
sbb
movsl
sub
mov
lcall
fwait
addl
testl
pop
ret
stos
lds
jbe
xor
mov
das
cwtl
sub
sub
std
pop
loope
and
xor
mov
aaa
ret
push
cwtl
add
jo
jnp
dec
mov
cmp
faddp
test
xor
cmpsl
das
cmpl
imul
dec
add
inc
int3
popa
das
cmp
jns
or
xchg
jmp
mov
inc
push
pop
mov
pop
sbb
mov
adc
popf
push
xorl
into
cmp
pop
push
fstpt
repnz
pusha
aam
dec
dec
cmp
add
pop
xor
lahf
mov
lret
push
mov
loopne
int
ss
sub
leave
and
inc
fs
ja
cltd
mov
rcrb
rclb
push
mov
xchg
hlt
into
movsb
imul
js
shrb
xchg
push
push
stc
fidivl
mov
dec
ja
sbb
fnstsw
xchg
fdivrl
pop
mov
je
pop
sarl
or
add
ja
or
sub
cmp
mov
push
or
cld
pop
cmp
xchg
aaa
sub
mov
cmp
sbb
leave
repz
jns
aad
push
data16
mov
call
daa
fwait
int
ss
inc
mov
divl
mov
or
mov
inc
pop
loopne
in
push
ds
ja
roll
ljmp
cmp
popl
ds
cmp
lcall
adc
jle
loope
sub
adc
lods
mov
movsl
and
cmp
jns
sub
or
es
mov
sub
stc
fisttpl
iret
lret
mov
mov
inc
mov
mov
push
mov
cmp
dec
add
push
lret
add
je
xchg
cmpsl
repnz
or
pop
mov
and
repz
mov
out
xor
pop
jecxz
outsb
xor
or
mov
xchg
adc
pop
nop
jmp
mov
loope
gs
addb
sar
and
mov
leave
sbb
lahf
movsl
push
out
inc
mov
das
xor
sar
inc
pusha
or
fmul
mov
pop
or
mov
out
aad
add
int3
and
gs
mov
cwtl
add
das
lea
xchg
dec
dec
icebp
or
mov
dec
ljmp
fists
add
sarl
aas
into
pop
mov
mov
mov
aad
dec
inc
aad
xchg
popf
lahf
sub
aas
push
stc
xlat
stc
sub
adc
sbbb
sbb
test
jnp
add
jae
sub
xorl
or
add
jne
das
push
sbb
repz
inc
pop
xchg
adcl
push
add
sub
xor
adc
imul
inc
mov
in
movsl
js
dec
ja
adcl
imul
or
int
mov
addr16
pop
adc
rolb
sub
xchg
test
or
inc
jecxz
xchg
add
jb
pop
repnz
mov
insb
xor
stos
push
mov
mov
addl
inc
xchg
ljmp
imul
or
ja
add
push
mov
fldt
mov
add
sbb
bound
out
lcall
jnp
stc
movsl
adc
push
insl
sbb
adc
notl
lds
add
xlat
stc
mov
push
pop
repz
sti
and
xor
stc
xchg
repz
sbb
dec
or
lahf
mov
arpl
add
arpl
push
cmp
jge
fs
inc
das
jg
xlat
pop
xor
dec
inc
sbb
xor
flds
mov
xchg
aad
adc
pop
into
into
sub
mov
ljmp
pusha
in
xchg
into
leave
loope
jl
inc
xchg
mov
fisttps
out
call
outsl
sar
xor
fadds
out
aaa
cwtl
dec
xor
ljmp
add
or
pop
aad
jne
xchg
enter
cmp
sahf
je
test
mov
int
cmc
push
xchg
ja
aam
sbb
jnp
jbe
popf
add
inc
cli
sub
pop
test
dec
mov
frstor
pusha
and
in
pusha
push
mov
gs
popa
mov
rol
arpl
inc
data16
aas
cmp
sbb
sahf
mov
icebp
inc
movsb
sbb
fistl
pop
xchg
push
and
fs
add
push
ds
cmp
sbb
adc
or
push
xchg
fidivl
mov
bound
mov
lock
insb
test
mov
sub
xchg
insl
loopne
in
sub
xor
jno
jb
or
cli
mov
jle
popa
insl
dec
mov
scas
adc
cmp
jae
jo
dec
inc
aad
jno
cmpl
js
cmp
sbb
jg
pushf
cmpsl
test
imul
roll
or
fisttpl
jmp
inc
sahf
lods
cmp
cmp
adc
inc
or
push
mov
mov
and
lret
fs
mov
pop
sti
adc
enter
jns
daa
mov
xlat
cmp
loope
push
mov
repnz
repz
adc
or
insb
xchg
mov
xor
jmp
outsb
mov
push
mov
clc
sti
ror
cmpsb
dec
and
clc
cmp
sbb
imulb
jmp
pop
add
mov
jmp
std
jb
cmpsl
xchg
cmp
push
aaa
mov
mov
mov
je
shl
je
jmp
jecxz
cs
stc
xchg
pop
rolb
dec
test
xchg
sahf
cmc
jns
lods
lcall
ret
popf
jmp
cmpsb
out
xchg
cwtl
fs
and
or
jge
or
sbb
fnsave
mov
sahf
xchg
inc
setp
xchg
push
adc
mov
js
xchg
push
mov
or
add
mov
das
sub
xchg
repz
adc
inc
and
je
repz
cmp
mov
mov
jmp
xor
cld
and
out
jle
inc
jne
lcall
push
push
add
insb
mov
mov
adc
push
dec
add
mov
addr16
mov
sub
roll
in
or
in
jnp
sahf
mov
fmuls
adc
rclb
sub
mov
or
loope
shlb
sub
push
lock
mov
sarl
push
arpl
fsts
push
adc
lds
inc
pop
xor
add
cmp
subb
insb
adc
ljmp
xlat
mov
cmp
int
arpl
jle
rcr
adc
xchg
jnp
and
or
push
loope
mov
xchg
cmp
sbb
dec
sub
in
xchg
jno
jno
in
pop
data16
pop
fistps
mov
leave
addr16
orb
push
dec
sub
mov
mov
cmp
xor
cmp
jnp
int3
push
adc
aam
or
fisubrl
inc
inc
repnz
xchg
enter
fdivp
mov
mov
sbb
cmp
pop
jmp
mov
movsb
lea
lods
in
push
stos
lds
mov
stos
inc
stc
mov
mov
mov
mov
xor
aad
daa
mov
cmpsb
test
mov
inc
jge
and
repnz
and
int
jecxz
pop
and
mov
dec
lret
in
or
pop
jp
xor
enter
scas
xchg
arpl
push
loopne
cmpsb
sbb
mov
in
iret
enter
sbb
pop
dec
lcall
sti
sbb
dec
sub
movsl
xchg
repnz
pop
jge
push
fsts
aaa
sbb
mov
push
push
mov
pop
mov
jmp
mov
out
mov
rcrb
adc
cmp
push
pop
fcoms
nop
jns
jns
nop
std
sub
bound
repnz
push
lds
jo
lahf
cld
xchg
cmp
lds
xchg
cmp
jne
dec
lahf
popl
lods
xor
push
or
fwait
cmp
scas
xchg
sbb
cmpsl
shrl
inc
or
dec
repz
xchg
js
sub
sbb
xchg
or
and
aas
stc
jns
mov
es
in
mov
fnstsw
dec
rcll
jb
push
sbb
adc
or
add
or
fisttps
jge
ja
addr16
aas
cld
daa
fsubs
xor
repz
adc
or
jmp
pop
dec
loop
jg
sub
cld
out
inc
jp
mov
push
arpl
xor
lret
cmp
clc
cmp
adc
push
or
icebp
push
cmpsl
data16
push
cmp
pusha
das
mov
inc
push
arpl
rclb
and
dec
inc
add
rcll
pop
adc
orl
jecxz
daa
dec
das
aad
jb
shl
sbb
xor
call
add
mov
ja
jnp
pop
test
jg
test
ss
roll
ja
adc
subb
fistl
inc
flds
and
push
test
add
fldcw
xchg
or
fiaddl
cmpsb
push
sub
mov
scas
add
jmp
push
jle
out
cmp
pop
mov
in
ss
sarl
sbb
icebp
sbb
testl
jmp
popa
sbb
or
cli
icebp
push
add
xor
movsb
sbb
mov
sbb
jns
xlat
inc
or
and
je
int
inc
imul
sub
cmc
cmp
fnsetpm(287
sbb
dec
jno
cwtl
mov
andb
jl
sub
add
out
xchg
stc
outsl
fisubs
bound
mov
mov
adc
das
in
fldenv
lds
xchg
jp
inc
sarl
popf
test
pop
andb
rorl
inc
loop
roll
sub
jbe
or
mov
sub
push
fiaddl
dec
mov
jbe
or
dec
sahf
cmp
sbb
ds
fsubrs
sti
cltd
push
or
repnz
int
or
lret
movb
pop
or
fists
enter
dec
in
lods
mov
dec
in
push
outsl
stc
rcrb
cmp
pop
adc
rcl
mov
call
adc
lods
add
pop
push
pop
es
scas
hlt
mov
rcll
lods
dec
enter
mov
sub
out
and
inc
add
push
mov
cwtl
mov
mov
loopne
and
mov
cmp
inc
lods
inc
aad
push
stos
add
insl
mov
cmp
jmp
out
dec
xlat
stos
jne
jp
jmp
sarl
mov
aas
push
decb
inc
ret
inc
aad
cld
stos
xchg
push
aas
mov
push
xchg
add
pop
xor
ljmp
mov
mov
sub
popa
push
jle
clc
lahf
pop
dec
pop
mov
fdivs
pop
lcall
inc
and
xor
add
out
push
lods
mov
fstpt
cmc
xchg
in
pop
hlt
dec
gs
ljmp
xchg
cmc
sbb
pop
mov
pop
and
out
sahf
push
mov
fdivs
das
arpl
test
nop
stos
push
mov
push
gs
mov
sub
iret
mov
xchg
jnp,pn
push
imul
mov
mov
jae
dec
cld
adc
sahf
fldcw
out
aam
push
push
subb
and
mov
lret
pop
popf
mov
addr16
popa
test
or
xor
fsub
stc
je
mov
lock
mov
push
sbb
pop
scas
sti
jg
pushf
inc
stos
add
pop
dec
sbb
sbb
mov
pop
dec
pushf
lods
mov
push
movb
push
or
adc
sub
jno
inc
push
push
xlat
lahf
mov
out
stc
out
mov
xor
add
ja
cmc
add
lods
sahf
ja
pusha
fcmovu
xor
ret
cmpsb
stc
jle
popa
fildll
mov
sti
add
and
imul
rorb
fs
add
jae
pop
mov
cmp
stos
fistps
out
test
dec
mov
mov
push
stos
pop
cld
adc
add
xchg
push
jge
lds
adc
xchg
mov
sbb
addr16
adc
add
pop
mov
mov
xor
hlt
pop
mov
movl
aam
outsb
jmp
push
imul
cmp
insb
fisubrl
icebp
repz
mov
mov
sub
out
fldl
sbb
nop
jl
or
add
imul
jmp
into
adc
lret
xchg
fnsave
cwtl
pop
add
cmp
jp
cli
lret
cld
xchg
xor
push
cmp
mov
hlt
testl
jns
push
jg
mull
test
pop
sub
or
push
dec
dec
xor
cmpsl
xor
or
je
cwtl
xlat
adc
sbb
into
test
or
cmpsl
cld
inc
cmp
cmpl
mov
adc
stos
dec
dec
mov
xor
push
aad
xchg
adc
rcrb
push
cmp
cs
inc
mov
test
xchg
and
mov
faddp
stc
adcl
push
imul
pop
aad
test
dec
adc
out
stc
cmp
loopne
stc
sbb
mov
test
stc
or
aas
fstpt
mov
ret
adc
sub
cmpsb
out
dec
pop
gs
sub
in
inc
or
test
pop
lahf
mov
inc
or
insl
dec
sub
mov
cwtl
lods
int3
repz
and
leave
incb
mov
sbb
adc
aad
nop
repnz
push
pop
aaa
int3
xchg
adc
or
cli
sub
xchg
subb
cmp
repnz
xchg
jge
jo
outsb
int3
cmp
dec
xchg
dec
pop
push
jnp
push
cltd
lcall
addr16
xor
pop
andb
push
lret
pop
adc
and
mov
xor
mov
push
shrl
out
ss
sbb
lret
sub
sub
cltd
xor
iret
mov
je
roll
cld
mov
out
dec
mov
scas
aaa
push
sub
sub
xor
mov
cmp
mov
sahf
or
mov
push
dec
mov
mov
nop
cld
add
pushf
loop
lods
push
dec
push
xor
mov
in
movsb
arpl
popa
pusha
dec
insb
xchg
fs
mov
wrmsr
je
xor
and
in
cmc
xor
cmp
mov
push
pop
out
fildll
mov
dec
or
popa
lods
cs
xlat
adc
outsl
mov
mov
add
dec
jo
out
sub
push
jne
adc
jae
xchg
xchg
inc
add
test
mov
add
pusha
add
cwtl
lods
pop
push
test
clc
sub
fsubrp
pusha
movsb
mov
inc
gs
movsb
negb
mov
pop
sub
pop
cmpl
test
pop
fwait
dec
int3
add
sub
in
sub
fildll
xor
push
xchg
aaa
xor
in
sub
fsubl
into
insb
mov
in
adc
push
push
lret
adc
xchg
ret
adc
mov
xlat
stc
insb
sub
jmp
mov
lods
mov
sbb
mov
andl
sub
and
enter
push
xchg
or
cmp
sbb
sbb
xchg
jb
int3
mov
insl
icebp
dec
addr16
dec
cwtl
xor
and
rclb
xor
xor
dec
fcompl
fisubl
sub
mov
cmp
fwait
and
xor
jmp
shrl
fiadds
mov
add
out
add
mov
and
test
repnz
insb
je
pop
or
fs
sub
out
fisttpl
sbb
popa
mov
adc
in
mov
popa
stos
push
clc
cmpsb
sti
arpl
adc
in
mov
das
cld
sub
jae
out
xchg
mov
data16
lods
push
call
push
test
shlb
pushf
cld
sbb
inc
adc
adc
adc
cs
aam
jl
pop
pop
shll
inc
mov
sbb
mov
test
xchg
js
gs
out
unpcklps
push
inc
mov
pop
loop
int
sarl
jmp
rorl
xor
inc
mov
divb
add
int
cmpsb
inc
pop
cmp
mov
imul
lahf
mov
sbb
lcall
clc
addr16
inc
and
jae
dec
dec
xchg
mov
xchg
lcall
or
mov
lahf
or
aam
push
sbb
push
dec
outsl
subl
mov
xchg
and
push
cs
cwtl
iret
subl
out
lds
sbb
pusha
pop
mov
cltd
js
mov
fnsave
out
out
mov
lods
sub
clc
cmpsb
dec
xor
leave
xchg
stos
mov
nop
fsubl
sbb
leave
adc
pop
dec
pop
and
int3
dec
hlt
sbb
sahf
stc
or
ljmp
inc
bound
dec
out
adc
pop
imul
lods
cmpsl
adc
insb
sub
inc
rorb
pop
adc
stc
push
cmc
test
iret
mov
ja
and
mov
test
push
orl
pusha
mov
dec
mov
mov
lds
xor
push
dec
sbb
sbb
dec
sub
mov
shl
scas
sbb
mov
and
mov
dec
shr
lret
sahf
pop
imul
iret
ret
vpshld
sbb
cmpsb
cmp
rorl
or
pop
inc
cmpsl
sbb
imulb
lret
les
jns
dec
sub
dec
nop
test
or
aad
push
mov
lcall
stos
jle
cwtl
in
or
push
push
bound
cmp
loopne
mov
inc
adc
and
ret
dec
push
push
out
cmp
and
mov
mov
test
adc
loop
sub
std
sub
jmp
subb
rclb
out
lret
scas
popf
sahf
loopne
fldcw
xchg
inc
mov
mov
andl
xor
cmc
lsl
jb
push
jg
push
mov
xor
sbb
lods
xchg
cmp
push
sub
xor
mov
pop
xlat
cs
sbb
test
fcmovne
iret
add
mov
lahf
mov
cmp
popa
inc
aad
cmp
xor
pop
subb
xlat
imul
pop
dec
pop
stc
jb
xchg
ret
jl
xchg
fldenv
jnp
or
mov
cmp
daa
add
adc
mov
stos
ja
in
cmpsb
lds
inc
outsl
scas
cmp
out
ss
xor
cmp
dec
xor
mov
mov
jmp
jge
lcall
leave
adc
mov
push
jnp
test
aaa
lahf
mov
loop
pushf
movsb
aad
xchg
test
fdivrl
gs
jmp
adc
lret
or
push
cmp
push
ljmp
push
mov
mov
and
aas
jno
lods
int
sub
sbb
xor
pushf
add
cmp
xchg
gs
or
sahf
xchg
sub
sarb
sbb
xchg
psubb
dec
into
aam
arpl
jp
das
daa
popf
loopne
push
and
lods
enter
sbb
or
sbb
aad
inc
mov
data16
jecxz
int
addr16
or
rcr
jecxz
addr16
popf
in
mov
xchg
mov
stc
sub
ds
cwtl
lret
cwtl
mov
mov
in
xor
lcall
int
nop
lods
add
push
xor
gs
aad
insl
jns
outsb
add
inc
xchg
xor
out
adc
sbb
push
sub
clc
mov
dec
push
ljmp
gs
inc
inc
lret
and
loope,pt
adc
in
ds
push
insl
xor
sbb
sbb
inc
adc
dec
and
cwtl
in
repnz
dec
mov
or
test
pop
pop
sbb
and
and
mov
xchg
leave
mov
adc
pop
imul
mov
mov
fnsave
or
stos
cmpsb
insl
aam
scas
iret
jecxz
addb
lods
ret
mov
and
rclb
lcall
out
sub
fwait
pop
pop
stos
pop
inc
fnsave
cmp
adc
shll
loopne
push
inc
pushf
aas
xorl
fstpt
rol
cmp
xlat
pusha
pusha
pop
in
xchg
adc
roll
jg
mov
cmpsl
jmp
ss
fmuls
jmp
push
movsl
out
rorb
push
ss
sti
js
gs
jp
xlat
enter
cld
rcl
jns
repz
mov
xor
imul
in
pop
nop
test
push
mov
adc
jl
ret
or
and
in
push
mov
repz
movsl
bound
movsl
cmp
sub
int3
sbb
jecxz
imul
cmp
rcrl
je
sbb
inc
add
lds
adc
int
xchg
ror
push
adc
xlat
daa
push
int3
adc
add
mov
and
mov
push
or
testb
push
mov
inc
xchg
xchg
and
negl
sub
lret
jno
negl
push
call
sbb
fsubrl
push
sbb
scas
dec
aam
mov
sti
fstpt
inc
outsb
out
jge
sahf
es
xchg
jle
push
mov
lret
arpl
les
cs
lods
dec
lock
pop
outsb
subb
fwait
inc
stos
mov
outsl
mov
adc
stos
lock
push
xchg
arpl
mov
popa
popa
into
pop
push
fists
mov
mov
pop
and
mov
orl
and
fdivl
or
addr16
xor
push
stc
add
das
xor
add
pop
push
and
inc
and
jno
test
fwait
sbb
pop
and
push
inc
lahf
loope
lea
mov
jg
and
jle
cld
dec
xlat
rcrb
add
mov
pusha
dec
sbb
iret
xchg
cmpsb
jp
jl
fldl
mov
sub
xchg
popa
and
inc
mov
lcall
mov
sbb
cmp
cli
or
insl
mov
xchg
dec
data16
jecxz
lds
mov
mov
xchg
fimuls
inc
sti
and
xchg
clc
push
cmpsl
lret
ret
xchg
and
rcrb
std
pop
test
jae
push
jg
adc
sub
jnp
es
subb
add
or
in
mov
andb
cmpsl
shll
or
aad
dec
cmc
insl
out
xchg
xchg
xor
jmp
daa
pop
std
in
rcr
fstpl
les
xor
repz
out
jno
stc
and
mov
sahf
inc
jle
xor
jmp
xchg
test
in
pop
inc
sbb
xchg
scas
mov
data16
stos
fwait
lea
outsl
push
pop
popa
jnp
jo
jno
mov
sti
mov
lock
mov
pop
mov
cmpsl
arpl
subb
ljmp
add
mov
nop
xor
iret
push
es
sbb
stos
dec
and
out
jg
add
mov
jl
push
movl
add
xchg
inc
mov
inc
mov
inc
dec
cli
jnp
imul
sub
sbb
insb
adc
adc
jl
push
outsl
pushf
fcmove
fidivs
or
xchg
cmp
xchg
sub
sbb
xchg
mov
std
and
jl
pusha
mov
dec
push
cmp
jecxz
xor
ljmp
mov
shlb
aaa
cld
add
cltd
xlat
mov
push
lods
in
cmp
pop
inc
push
adc
das
jns
lcall
adc
sahf
scas
hlt
xor
push
idivb
mov
mov
pusha
inc
call
fs
mov
into
out
pop
cmp
xor
imul
stos
repnz
inc
push
rcrl
loope
aas
xchg
push
mov
or
mulb
xchg
mov
in
imul
loope
push
in
jecxz
stc
cmp
mov
loop
scas
mov
dec
mov
xor
mov
movsl
or
jo
call
sahf
lods
std
and
loope
push
outsl
xchg
rolb
push
int3
adc
das
pop
fbld
push
or
push
jo
stc
daa
add
sbb
xchg
xor
loop
sbb
adc
mov
and
fs
pop
dec
mov
mov
out
mov
mov
mov
in
mov
push
push
inc
and
xlat
mov
mov
stos
scas
cmp
push
pop
lock
gs
mov
mov
adc
out
nop
dec
adc
sbb
xlat
jbe
xchg
ret
dec
pushf
movsb
jno
jge
push
jmp
sbb
loope
or
pushw
pop
sbb
pop
mov
sub
enter
mov
dec
lods
jae
inc
insb
rcll
mov
pusha
hlt
imul
inc
iret
hlt
sbb
lea
mov
test
xchg
pusha
adc
hlt
shlb
loopne
pop
dec
call
fists
mov
cltd
aas
es
inc
mov
xchg
les
inc
inc
fs
out
sub
jg
dec
fcomi
in
fldl
mov
xor
mov
ds
mov
int
fcomi
lods
pop
std
cltd
rcrl
dec
arpl
repnz
test
lahf
or
nop
sbb
cmp
leave
pusha
sub
bound
adc
repz
jl
push
pop
pusha
arpl
cli
lea
or
test
mov
xchg
push
adc
mov
loope
sub
mov
stos
fsubp
ret
bound
push
ja
pop
fs
mov
aam
sub
lea
loop
hlt
pop
outsl
jp
sti
jo
sbbb
testl
dec
jnp
loope
test
dec
ljmp
pop
cmp
out
jnp
xor
push
adcw
jecxz
addr16
sbb
dec
mov
dec
popf
inc
push
enter
mov
scas
xchg
xchg
add
sub
in
decl
int
jae
cmp
negl
or
in
lahf
rcr
pushf
dec
notb
pop
in
push
cmp
adc
jp
shlb
and
test
into
jge
cmc
clc
in
scas
test
rcrl
mov
jo
out
jmp
mov
rclb
cs
adc
add
cmp
xor
xor
and
ds
jb
arpl
lret
rcrl
add
cmp
pop
dec
mov
mov
push
fwait
jmp
dec
add
add
aam
mov
mov
movsb
adc
popa
aas
jno
and
sahf
out
clc
and
shlb
pop
sti
ret
sub
xchg
loope
aas
idivl
ret
dec
sbb
clc
rclb
pop
js
lds
sti
push
stc
adc
out
lds
mov
sub
cmc
mul
les
leave
jbe
mov
test
out
add
sbb
jbe
mov
dec
xor
daa
je
or
xor
mov
xchg
mov
mov
ds
push
adc
xchg
inc
jb
jmp
in
jecxz
mov
xor
push
mov
icebp
loop
and
es
sti
call
xchg
cld
jge
or
sbb
out
andb
push
sarl
out
jle
sti
add
jnp
cmpsb
mov
pushf
xchg
cwtl
test
ljmp
mov
stos
cmc
cmp
xchg
loopne
push
and
and
insb
mov
cwtl
es
fimull
clc
mov
popf
js
sbb
cmpsb
or
sbb
inc
and
enter
jns
jbe
stos
dec
cmp
dec
scas
cmpsb
push
cmp
icebp
xchg
mov
inc
out
cmc
dec
repnz
fcomps
aaa
jecxz
aaa
dec
xchg
es
xlat
cs
and
or
lds
xor
jle
test
jbe
push
mov
cmp
adc
cmp
and
xchg
xlat
dec
sub
repnz
dec
xchg
and
ret
jle,pn
jae
xchg
in
mov
push
das
jmp
inc
aad
xchg
in
dec
jmp
idivb
fcompl
daa
xchg
sbb
push
sbb
or
mov
cmpsl
inc
outsl
mov
call
sbb
ss
test
call
cmp
adc
scas
fnstcw
mov
dec
jo
mov
cmp
test
fsubl
imul
sub
xor
loop
add
inc
notl
pop
je
mov
mov
or
das
mov
ljmp
pop
adc
rcrb
sbb
mov
nop
fidivrl
pop
jl
sub
pop
adc
cmpb
mov
imul
mov
xor
stos
cs
adc
adc
ljmp
sti
repnz
inc
lret
insl
push
adc
loop
dec
mov
push
jne
or
sahf
shll
sahf
imull
jmp
roll
fwait
push
js
loopne
sbb
xchg
sub
lahf
in
sti
xchg
insb
insb
test
int3
sti
pop
xchg
jle
mov
popf
aad
pop
mov
scas
mov
mov
insl
lds
ss
dec
xchg
fwait
jo
rorb
inc
test
mov
mov
mov
cmp
int3
pusha
dec
cmp
cmpsb
bound
push
mov
aam
int3
adc
test
add
inc
mov
sbb
roll
clc
jp
into
out
cli
sub
lret
subb
xchg
inc
ljmp
test
push
jge
inc
cmp
daa
jns
sub
jecxz
test
sub
and
pop
cmpsb
sub
sbb
bound
xchg
pop
in
inc
cwtl
inc
fidivrs
and
shll
outsb
mov
into
sbb
pop
outsl
add
cwtl
aas
aas
mov
fstpl
add
inc
mov
xor
pop
imul
loopne
lds
mov
sbb
ret
test
out
ljmp
imul
cmp
mov
jmp
xor
in
inc
in
movsl
popa
adc
push
xchg
add
xor
inc
dec
dec
lcall
adc
dec
adc
add
test
pop
repnz
or
test
in
push
and
push
testl
test
push
push
pop
mov
or
push
fmuls
aad
mov
xor
test
clc
outsb
ds
sub
or
jbe
ret
cld
movsl
movsl
out
dec
fisubl
or
cmp
jg
and
fucomp
jns
ds
fiadds
xchg
or
sbb
outsb
insl
lods
pushl
adc
sti
jle
inc
ficompl
adc
dec
shrb
lods
sbb
sahf
sub
fcmovne
icebp
sbb
shr
js
lahf
and
push
lods
and
imul
das
cmpsl
pop
push
sarl
pop
fistl
dec
mov
imul
and
ret
out
fwait
iret
das
pusha
scas
aas
addr16
inc
mov
jle
clc
push
jo
cmp
inc
out
push
fcoms
add
mov
sub
and
stos
outsb
jne
mov
loop
jnp
mov
rcll
jnp
lcall
ds
mov
xor
aaa
inc
inc
fstps
repnz
outsb
repz
js
mov
lret
call
out
mov
xorb
subl
lock
mov
js
negl
add
mov
sbb
push
daa
hlt
sbb
lret
and
push
movsl
fs
ds
pop
mov
sbb
loopne
and
inc
loope
or
mov
push
xor
or
add
xor
das
dec
stos
ja
push
inc
sub
xchg
or
dec
shl
imul
bound
clc
aam
jle
jae
pop
pusha
xchg
inc
dec
insb
lds
ss
jne
push
mov
movsb
movsb
xor
pop
sbbl
pop
jo
mov
sub
das
sub
leave
ret
pop
xor
aad
mov
mov
leave
dec
andl
outsl
loopne
or
xor
movsl
ficoms
sbb
lock
push
or
ret
and
push
xchg
jp
push
out
nop
fs
mov
in
dec
stos
pop
jbe
xlat
sti
iret
sub
jl
sti
cmc
jecxz
sub
adc
mov
or
addr16
incl
clc
jno
mov
cli
push
add
mov
xlat
arpl
or
jle
dec
test
jnp
mov
cmp
shll
mov
inc
jl
sbb
cmp
or
in
push
jne
mov
add
out
stos
or
push
jge
add
inc
dec
imul
jmp
add
xor
xor
into
add
push
scas
dec
jp
and
stc
adc
and
aaa
cmpsb
rcll
sbb
jns
push
sub
test
xchg
mov
mov
pop
jns
sbbl
cmpsb
pop
inc
int
rcll
stos
mov
push
lret
addr16
cmpsl
pop
pop
push
sub
scas
dec
jp
popa
mov
stc
and
fcoml
pusha
adcb
shr
jne
xor
or
mov
xchg
mov
repnz
das
fmulp
cmp
xchg
xchg
pop
mov
and
cwtl
nop
mov
ds
pop
sub
sub
mov
divb
sub
jmp
xchg
add
mov
push
push
add
mov
les
or
aad
leave
shl
test
xchg
ja
lock
adc
je
and
fdivrl
jo
mov
stos
test
jb
aaa
cmc
scas
adcl
in
les
cmpsb
adc
pusha
mov
int
jmp
jg
pop
nop
aad
jae
xchg
jno
movsl
mov
ret
jno
cmp
sub
iret
scas
mov
cs
xlat
sub
insl
jnp
cmp
les
xor
mov
bound
xchg
shrb
jae
fwait
push
stc
adc
push
jmp
leave
dec
push
cwtl
adcb
bound
pop
sub
into
push
jo
lahf
fcomip
test
xor
sbb
xor
xor
xchg
xchg
loop
test
pop
mov
cmp
pop
dec
push
pushf
sub
add
cltd
add
mov
insl
ret
push
adc
mov
mov
cmp
mov
and
xchg
push
pop
inc
xchg
js
bound
leave
hlt
stos
or
in
cmp
es
and
add
push
test
push
inc
scas
lods
xchg
jle
fisubrs
loope
xchg
dec
xchg
sbb
lcall
fsubp
adc
fisubrl
inc
push
sbb
es
mov
add
movsl
mov
lock
adc
jl
into
xor
mov
sub
loopne
jge
cmp
cmp
jns
mov
adc
ljmp
xor
add
data16
lods
and
mov
pop
mov
sarb
push
sub
out
xchg
test
cmp
or
mov
adc
fsubrl
arpl
loopne
lcall
cmp
cli
pop
mov
pop
jnp
mov
or
imul
mull
xor
cmp
xchg
and
cld
cmpsl
adc
cltd
or
sbb
arpl
int3
sub
and
sbb
jno
mov
cmp
fnsave
mov
repnz
into
mov
xor
xchg
adc
sbb
int
icebp
mov
cmp
fwait
push
push
insl
adc
and
add
test
dec
sbb
ret
call
pop
sbb
pushf
test
fldenv
jo
out
dec
ret
enter
daa
loope
adc
ret
add
xchg
xor
fadds
fstpt
lahf
pop
div
gs
xor
inc
ja
sbb
popl
loope
cmpsl
lds
mov
imulb
test
lods
xchg
sub
in
sbb
lret
and
add
and
lret
mov
dec
pop
add
lcall
loop
clc
fstpl
in
sub
lock
outsl
outsl
cmpsl
pop
add
andl
push
ret
xchg
jne
js
xor
cwtl
ret
mov
pop
adc
or
mov
xchg
push
xchg
rcll
cmpl
push
xor
adc
mov
out
mov
cmp
cli
pop
mov
call
std
dec
loopne
scas
test
jle
xor
sahf
mov
shll
xor
pop
pop
insl
sbb
cmp
xor
sbb
js
cmpsb
icebp
mov
shr
mov
ja
xchg
mov
rcl
and
cltd
mov
sbb
int
addr16
cmp
sbb
jp
jmp
fnstenv
cmpsb
enter
dec
inc
jecxz
testb
pop
mov
ss
adc
xchg
cld
imul
jnp
stc
add
leave
sub
mov
xchg
test
sbb
stos
push
or
addr16
in
pop
sarl
clc
iret
frstor
movsl
or
mov
jb
push
cmpl
subb
movb
fmulp
ja
xor
clc
push
and
jae
push
fisubs
jle
lds
daa
fiaddl
leave
jno
sbb
in
add
jb
lret
std
sub
cmp
dec
gs
cwtl
xchg
push
hlt
inc
sti
movsl
push
and
xor
js
mov
icebp
mov
into
fstpl
adc
cltd
pop
shr
stc
aad
xchg
outsb
xor
jmp
jno
add
dec
fs
cmp
outsl
add
xor
sbb
movsl
roll
inc
adc
pop
jg
xchg
es
in
stos
bound
mov
inc
sbb
mov
dec
ljmp
pop
dec
mov
mov
scas
or
test
add
int
aaa
arpl
test
jo
xor
das
push
imul
push
or
fidivrl
jle
or
mov
xor
mov
adc
push
add
inc
pusha
jp
shlb
rcr
shrl
mov
rorl
xchg
shr
jp
daa
sbb
aaa
aaa
mov
lods
sti
popf
sub
jb
mov
rorb
lret
mov
push
adcb
shlb
loopne
dec
xchg
cmp
mov
jnp
inc
push
arpl
cmp
pushf
sbb
repnz
mov
jne
arpl
in
mov
lea
lahf
mov
or
dec
test
sahf
sub
mov
ret
insb
lock
push
push
ss
das
jg
cmp
call
mov
jge
dec
mov
call
jle
test
jbe
mov
jmp
lods
push
or
push
test
lret
push
xlat
aam
mov
pop
fs
mov
mov
fiadds
jecxz
stos
jbe
lcall
pushf
fidivl
cs
jns
and
pop
cmpsb
mov
and
mov
jl
jp
mov
in
inc
or
push
push
and
xchg
inc
sbb
push
push
push
mov
jne
cli
mov
sbb
or
dec
push
rep
dec
int3
inc
test
cs
jno
fucomp
sbb
push
testl
push
cmp
rcrb
shll
fwait
pusha
cmpsl
ret
je
xchg
sbb
xchg
or
adc
pop
fisttps
incl
mov
lret
adc
arpl
or
lds
fmull
out
mov
push
mov
nop
cmp
sbb
out
mov
into
mov
loop
mov
jnp
ljmp
dec
inc
jb
stos
jnp
pop
mov
pop
xor
iret
dec
jecxz
sbb
dec
xor
cmp
push
xlat
pop
jb
mov
jns
and
fcmovne
cltd
mov
lea
jg
mov
jo
cmp
push
jae
xlat
stos
push
test
mov
adc
popl
call
fidivrs
pop
and
clc
inc
stos
jnp
daa
sbb
iret
les
xor
cmp
dec
xchg
inc
stos
cmp
popa
jecxz
in
fistl
das
das
inc
gs
mov
aaa
out
ja
or
push
pop
call
out
ds
add
fistpll
enter
sar
test
xchg
lcall
cmpsl
adc
pop
pushl
mov
mov
in
mov
push
sbb
div
and
psubw
repz
arpl
aad
ja
xchg
aam
sbb
iret
fcoms
ret
jmp
sbb
sub
mov
call
sbb
xor
lret
cmpsb
sub
cmpsl
fistpll
loopne
int3
mov
insl
adc
lret
and
divb
mov
push
push
enter
pop
jb
mov
arpl
cmp
cmp
dec
mov
pusha
out
sarl
push
int3
into
addl
popa
ljmp
xchg
push
xchg
in
test
pop
mul
rclb
cmp
or
test
scas
sub
les
std
or
int
sbb
pop
loop
push
ret
inc
popf
cwtl
in
xchg
js
push
add
jl
popa
cs
cwtl
loopne
movsb
xchg
and
test
mov
mov
shll
fs
jmp
and
call
out
js
mov
jle
jae
daa
inc
mov
jmp
sbbb
push
push
mov
jecxz
jp
pop
adcl
or
inc
ror
ja
shll
mov
outsb
ds
jo
ljmp
imul
dec
jg
pop
imul
mov
cmpsb
dec
rcrl
ss
rcl
and
mov
in
adc
pop
hlt
pop
testl
and
mov
imull
cmp
xor
loopne
sarl
fs
mov
jae
xchg
lods
es
scas
jmp
outsl
mov
aaa
or
fucomp
bound
shrb
and
leave
dec
xor
pushf
jb
jb
mov
mov
jno
arpl
jae,pt
negl
in
outsl
cmp
clc
int
xor
mov
scas
fwait
data16
ficompl
cld
mov
push
es
adc
psrad
outsl
and
mov
mov
in
or
jb
push
inc
or
idivl
push
insb
xlat
hlt
fistpll
sub
clc
pusha
sar
popa
add
xor
inc
scas
and
xchg
mov
xor
add
lret
or
gs
jnp
dec
cmp
test
inc
call
push
dec
testb
push
rorl
fnstenv
mov
out
adc
inc
repz
xchg
sbb
inc
jg
xadd
insl
insb
outsb
pop
sub
xchg
fbstp
dec
mov
push
dec
sahf
cmp
shlb
and
push
sbb
imul
cwtl
add
arpl
repnz
nop
out
push
into
jbe
scas
pop
repnz
mov
dec
sub
lods
or
ljmp
aam
jb
cmp
jno
mov
jg
dec
cmp
ret
push
js
dec
pop
idiv
mov
mov
rcrb
jl
enter
dec
jns
or
gs
pcmpgtd
fstpl
mov
sub
sub
or
insl
sub
addr16
adc
xchg
sbb
sbb
out
loopne
mov
in
movsl
icebp
push
mov
movsb
dec
xor
pop
add
mov
scas
xchg
stos
xor
push
loop
xchg
mov
xor
xchg
or
repnz
rcll
xchg
dec
inc
pop
imul
push
cld
jle
leave
mov
sub
jo
push
cmpsb
and
movsl
mov
clc
sub
test
pop
les
push
add
lods
jo
mov
mov
test
xor
mov
fistl
xor
imul
adc
xchg
dec
and
inc
cmc
data16
rcll
stos
inc
sub
lret
lods
andl
aaa
subl
jb
js
mov
test
add
inc
sbb
popf
pop
jg
sub
scas
mov
fidivs
xchg
xchg
cmp
in
jmp
xchg
rclb
pop
lret
das
in
mov
push
xor
mov
push
inc
addr16
lock
jns
or
dec
and
into
cwtl
push
mov
dec
cli
mov
and
xchg
inc
pop
je
scas
lcall
fnstenv
movsl
leave
cmc
and
push
xchg
pop
dec
test
sti
cltd
outsl
jne
or
xchg
cmp
mov
jge
adc
xchg
adc
sub
mov
movl
pop
mov
sub
in
pop
frstor
fbld
mov
mov
xor
cmp
das
jns
inc
cltd
fidivs
mov
sub
es
or
sub
sub
dec
sub
inc
dec
adc
out
jno
jbe
sub
and
and
push
push
mov
jmp
int3
dec
dec
mov
and
loop
cmpsl
push
pop
dec
or
pop
aam
jno
inc
mov
pop
loope
xor
xchg
hlt
test
jae
jp
mov
daa
jnp
xchg
test
popf
or
test
fs
and
pop
cmp
pop
in
call
xchg
sub
inc
daa
fcmovnb
add
mov
push
add
pop
mov
lret
xchg
pop
insb
mov
pop
sub
rcrb
fmulp
fwait
xchg
int
sbb
or
icebp
and
out
or
mov
adc
imul
je
mov
cmp
addr16
sbb
test
fwait
push
loope
pop
fcmove
test
out
scas
jl
roll
push
decl
movsb
addr16
jno
cmpsl
fcmovbe
test
cmc
pop
sbb
jp
xor
out
xor
paddw
add
mov
or
stos
pusha
cmp
sub
pop
jle
cmp
cmp
and
fwait
scas
in
ja
loope
pop
lahf
push
shrb
scas
push
std
lods
in
test
add
cli
jb
lret
daa
ffree
test
xor
mov
sub
add
inc
mov
enter
aam
scas
pushf
pop
es
ffree
ficompl
pop
adc
or
test
xchg
in
cmpsl
xor
cmpsl
and
movsb
ljmp
int3
cwtl
mov
ret
je
bound
push
aas
cmpl
inc
mov
or
jp
lret
sbb
inc
pop
push
orl
scas
lods
mov
mov
fdiv
dec
sub
inc
pop
negl
movsb
das
ret
sub
repz
icebp
mov
bound
leave
sbb
or
in
push
jae
es
and
loopne
lret
mov
xor
and
loope
or
outsb
mov
jnp
daa
or
xor
popa
add
stc
mov
iret
movsb
jb
mov
mul
aaa
jbe
add
inc
jnp
jb
mov
cs
rolb
and
loope
insb
jge
aam
sbb
je
imul
sti
fs
cmp
rcrl
pop
scas
lcall
pop
fmull
rcrl
dec
stos
mov
jl
shr
cmpsl
cwtl
push
lret
lods
cmp
mov
dec
mov
add
loope
jnp
repnz
push
mov
faddp
push
jp
cs
enter
in
sub
add
jno
andb
lods
push
pop
test
ljmp
out
mov
scas
stos
jmp
ss
lock
cmp
mov
sub
imul
das
int3
sub
mov
pop
hlt
cmp
add
push
adc
adc
adc
mov
movsb
pop
sub
pop
cwtl
cmp
fxch
cmc
xchg
cmc
aaa
dec
loopne
sub
cmp
mov
inc
cmp
jecxz
mov
jbe
orl
mov
mov
out
push
adc
jp
push
sarl
jo
jno
pop
adc
pop
mov
inc
in
cwtl
lds
mov
xchg
fwait
adc
stc
fisubrl
pop
add
and
xchg
xor
jbe
jg
dec
rol
sub
frstor
fdivrs
stc
je
rcl
cld
mul
pushf
mov
mov
fcomps
enter
mov
xor
negb
lock
mov
cmp
pop
and
xor
add
mov
pop
or
cs
sub
mov
movsl
and
outsl
stos
push
inc
dec
xor
inc
mov
fwait
nop
xor
inc
or
cmp
jecxz
push
jno
jbe
jl
xchg
icebp
and
jp
das
xchg
inc
add
and
jae
pop
call
mov
xor
cli
push
lcall
mov
lock
hlt
xorb
cmp
pop
setns
mov
push
jbe
into
in
cmp
jno
pop
xchg
dec
xor
mov
and
aad
xchg
pushf
pushf
lcall
add
or
mov
mov
lret
fcmovnu
loope
mov
jle
ds
sub
sbb
or
cmpsl
push
pushl
jle
sub
sbb
pop
dec
inc
sbb
iret
mov
sbb
sahf
in
pop
sbb
in
mov
mov
xor
or
adc
sahf
lods
inc
push
dec
push
sbb
fistl
popf
and
ja
inc
in
cmpsb
and
adc
aad
xor
push
iret
call
push
cmpsb
xchg
inc
std
in
sub
mov
lcall
iret
fmull
inc
aaa
repnz
xor
mov
jo
mov
lock
adc
fidivs
enter
mov
pusha
enter
arpl
push
shl
mov
sbb
jae
add
mov
inc
xlat
xlat
daa
jb
add
loop
and
dec
aam
fdivrl
fstl
fnstsw
pop
mulb
ds
outsl
cmovbe
imul
xchg
cmp
cli
dec
pop
imul
pusha
cmp
add
lahf
ret
and
gs
cld
mov
ja
inc
adc
mov
sub
jl
je
and
add
js
stos
test
sbb
dec
push
and
into
mov
pop
cmp
inc
push
pop
mov
call
rclb
cmp
cmp
addr16
std
push
mov
adc
sbb
sbb
jge
inc
int3
mov
popa
pop
xchg
jmp
cmp
dec
mov
fst
nop
imul
mov
subb
push
aam
es
xchg
mov
inc
jmp
push
xchg
add
lret
adc
xchg
cmp
push
loope
xchg
cmp
incb
call
mov
inc
cmp
insl
lahf
and
ja
mov
repz
push
jmp
inc
jno
xor
aad
es
ror
push
add
test
enter
lret
mov
jle
mov
sar
dec
xor
sub
movsb
push
stos
lahf
mov
ljmp
sub
adc
in
push
xor
xor
jp
repz
je
stos
popa
inc
add
loopne
mov
imul
inc
les
xchg
mov
or
pop
sbb
mov
std
adc
jae
xchg
cmp
outsb
mov
jge
add
mov
pop
pop
hlt
sbb
or
cmp
push
lcall
or
cmpsb
outsb
mov
or
imul
fildll
ljmp
addr16
cmp
add
out
xchg
push
sahf
push
cmp
lcall
dec
nop
lcall
fcompl
inc
aaa
negl
call
aam
mov
jno
xor
rclb
fcomps
lahf
xor
mov
xchg
cli
add
test
mov
inc
mov
hlt
imul
orl
mov
mov
fwait
popf
push
stc
xor
sub
clc
and
mov
sub
fldenv
sahf
cmpsb
add
pop
cmp
sub
and
and
gs
mov
loop
int
sbb
data16
pop
mov
insb
add
repz
pop
iret
xor
jmp
int3
mov
jbe
ds
push
cltd
xchg
inc
das
insb
subl
cmp
inc
mov
xchg
pushf
or
outsl
std
rclb
rcll
pop
gs
sub
jbe
pop
sbb
xchg
push
fs
out
dec
xor
push
cmp
mov
idivl
bound
loope
add
or
sub
cmp
movsb
push
adc
xchg
sahf
divl
sbb
pop
xor
sbb
dec
adc
push
cld
pop
rorb
hlt
inc
aam
sub
ds
fidivrs
mov
sarl
enter
or
aaa
add
xchg
dec
add
jnp
popa
icebp
es
scas
xlat
sub
xlat
sbb
push
repnz
xor
cmpsb
xchg
pop
cmp
aam
pop
jmp
cmp
fimull
sbb
sub
mov
jbe
enter
mov
push
pusha
rolb
inc
mov
pop
clc
jge
gs
jge
jno
xchg
hlt
xor
pop
lret
je
negl
fs
push
shll
xor
and
cmp
xor
fst
test
jmp
sti
xlat
int
xlat
pusha
mov
add
inc
xchg
mov
inc
sub
sub
cmp
jns
jp
je
dec
idiv
or
push
inc
movsl
fimuls
rcr
and
repnz
sbb
rep
fwait
cld
jbe
rorb
cmp
pop
ret
clc
inc
cli
jae
out
imul
mov
fdivp
push
scas
xchg
ret
lods
into
jp
xchg
cli
fisubrl
ficompl
jge
push
cmpsb
mov
insb
cli
popf
sbb
or
outsb
lods
pop
sub
adc
fmuls
imull
mov
cld
push
jnp
pop
mov
mov
aad
inc
rclb
cmpsb
cmp
stc
movq
xchg
xor
jecxz
mov
mov
test
outsl
mov
xor
jo
push
mov
fimull
fsub
xchg
loopnew
pop
inc
xchg
in
inc
add
mov
out
sub
in
adc
sar
push
lret
adc
enter
jp
ljmp
stc
mov
stos
jle
sbb
cli
jne
fiadds
pop
enter
sbb
cmc
dec
and
aas
jle
imul
lock
mov
add
xor
int
cmpsb
ret
xchg
sbbl
mov
inc
fcomps
cwtl
repz
or
add
nop
leave
in
adc
xchg
bound
icebp
xchg
mov
add
ret
mov
sbb
adc
mov
jmp
jb
and
sub
leave
stc
pop
pop
scas
test
in
stos
data16
pop
add
lea
add
int
mov
test
push
pop
xor
cld
pop
pop
sub
ret
shll
popf
arpl
nop
int
data16
and
xor
mov
pop
jmp
mov
pop
fistps
inc
orb
jbe
push
pop
pop
fucomp
cwtl
dec
jnp,pn
arpl
scas
clc
mov
cld
divl
pusha
insl
call
pop
push
ret
mov
scas
mov
fs
add
fs
push
mov
xlat
xchg
sub
pusha
out
sub
das
or
out
mov
repnz
and
xchg
ret
cmpsl
test
sbb
mov
pop
es
dec
dec
adc
out
sahf
enter
fisubl
into
mov
test
mov
mov
inc
inc
or
je
add
dec
jp
dec
mov
daa
sub
lods
cld
ret
inc
push
cli
cmp
pop
jle
dec
ret
jp
cmp
inc
pushf
jmp
cmpsl
xchg
cwtl
push
or
sub
add
push
es
test
lds
sbb
cmp
sbb
add
xor
add
add
xchg
push
mov
pop
push
and
mov
jg
das
and
das
out
dec
es
out
or
out
xor
subb
xor
and
lcall
cmp
or
dec
inc
mov
je
das
add
sub
sub
outsl
lahf
jbe
sub
in
repnz
movsl
mov
inc
into
test
dec
sub
lods
sarl
sub
out
stos
cs
lret
jp
mov
mov
stc
add
dec
jae
mov
test
testl
xor
add
cltd
jo
loope
add
nop
mov
ja
in
xchg
and
dec
mov
jmp
repnz
inc
sub
sbb
push
es
lret
ds
mov
dec
jae
movsl
and
cmp
jnp
dec
sub
sub
ds
out
xlat
mov
movsl
xor
pop
adcb
and
test
insl
cmp
jbe
movsl
add
iret
lret
das
cmp
mov
cwtl
int
push
sbb
aas
mov
lahf
mov
arpl
add
and
xchg
dec
xchg
jmp
sub
mov
popf
pop
inc
roll
popf
daa
jle
stos
dec
int
xlat
sbb
aas
mov
lods
or
xchg
adc
sbb
fildll
and
repnz
and
rcl
subb
roll
dec
inc
xchg
xchg
pop
in
xlat
dec
ljmp
pop
xor
jns
test
mov
xor
hlt
call
dec
and
jmp
cmpl
inc
cmp
cltd
jge
idiv
pop
inc
cltd
movsl
xchg
rorb
sub
adc
mov
scas
mov
movsb
push
inc
mov
daa
into
mov
pop
sbb
bnd
mov
pop
insb
cmpsb
mov
jmp
fcom
fcomps
mov
popf
shrl
inc
and
cltd
call
call
pop
stc
inc
popa
sub
or
test
jl
mov
inc
mov
mov
out
mov
lret
mov
push
sub
insl
ja
xchg
mov
cmp
addb
sub
xchg
test
push
std
cmpsb
lahf
arpl
nop
pop
or
or
into
pop
mov
int
xchg
adc
add
pop
or
fwait
cmp
cmpsl
movsb
fld
cld
mov
inc
push
adc
sbb
pop
cmc
fwait
cmp
imul
sbb
or
sarb
in
mov
mov
xchg
or
pop
push
dec
jmp
scas
pop
roll
out
mov
sbb
mov
cwtl
subb
pop
ret
jmp
icebp
es
cmp
and
cltd
nop
add
into
push
and
mov
sub
inc
fstps
jne
jnp
or
push
or
mov
lock
pop
cld
cmp
test
cmp
push
xor
and
pop
inc
repz
adc
mov
mov
fcmove
pop
and
mov
mov
repz
data16
imul
das
sti
nop
outsb
mov
popf
add
scas
fucomp
dec
adc
pop
pop
and
add
xor
fucom
dec
or
loopne
adc
dec
xor
sar
loope
sahf
aad
cmp
mov
adcb
dec
daa
movsl
pushf
xchg
cmpsl
jecxz
sub
test
testl
lar
ret
jg
push
inc
in
ds
pop
sar
dec
or
decl
sbb
xchg
scas
add
popf
xchg
mov
aam
push
mov
inc
adc
inc
fdiv
sub
out
mov
and
in
mov
inc
push
jmp
mov
add
fidivl
into
leave
outsl
xchg
pushf
sahf
mov
cltd
mov
mov
sbb
out
int3
aad
or
sbb
xor
scas
pusha
xchg
and
cltd
test
stos
sbb
adc
cmp
adc
jecxz
jp
int
add
pop
mov
jp
cli
ja
ret
fdivrl
jle
cwtl
mov
int
sahf
mov
in
ret
sbb
test
xor
mov
imul
inc
pop
lret
mov
dec
add
shlb
mov
shlb
aaa
xor
sbb
int
cld
insb
leave
clc
nop
lods
outsl
iret
fisttpl
pop
xor
jmp
fwait
call
pop
and
push
and
jbe
enter
sbb
add
hlt
jl
mov
lahf
ret
xchg
jg
pop
mov
and
adc
jg
std
lret
xchg
stc
std
xchg
mov
test
mov
pop
inc
mov
cwtl
gs
fchs
negl
sbb
addr16
mov
or
gs
sbb
mov
inc
dec
cmp
push
mov
mov
dec
add
scas
int3
xchg
and
out
test
js
aaa
fmull
xorl
push
mov
pop
imul
add
sub
test
inc
pusha
push
aad
scas
mov
pop
adc
mov
add
add
and
mov
cs
inc
xchg
es
nop
out
sahf
cltd
and
in
aaa
ss
out
out
sub
ret
or
test
shrl
rorl
aad
lods
jbe
mov
and
ret
mov
mov
mov
jb
push
in
bswap
push
push
jne
xchg
or
outsl
mov
shrl
pop
lret
mov
inc
jle
sbb
pushf
mov
mov
fsubrs
ret
xchg
cmp
mov
rclb
lret
cmp
shll
pusha
enter
xor
es
inc
sub
mov
add
scas
js
outsl
sbb
pop
sub
and
rorl
xchg
sub
and
inc
or
je
push
jbe
popa
mov
into
xor
je
fdivl
sbb
push
lea
negl
mov
pop
addr16
loopne
xor
adc
repz
std
ret
inc
aaa
push
jl
je
xor
shlb
jp
scas
jbe
in
push
mov
or
dec
or
push
push
inc
push
lret
nop
add
imul
gs
movsl
insl
mov
imul
pushf
clc
xor
ret
pop
in
cmp
addr16
xor
adc
adc
jle
mov
mov
inc
jno
and
dec
std
mov
push
out
pushf
cmp
rcll
push
add
dec
daa
xor
out
gs
xchg
inc
mov
jmp
loope
lcall
lahf
test
push
ds
fdivp
and
xchg
mov
push
fwait
inc
xchg
outsb
cmp
dec
pop
cmpsb
clc
out
push
xchg
daa
mov
adc
xor
sbb
push
dec
jl
hlt
arpl
xchg
lods
xchg
ljmp
ret
movsl
push
xchg
cwtl
xlat
push
jmp
xchg
loope
mov
shrl
fadd
in
push
mov
pop
add
sti
inc
call
jo
adc
add
enter
test
mov
repnz
test
lret
loope
dec
mov
mov
mov
mov
xchg
fisttps
sbb
push
cmp
movsl
js
sti
jne
push
ficompl
xchg
pop
add
dec
mov
inc
xorb
dec
xchg
cld
cmp
xor
into
popa
fs
push
jge
lahf
scas
test
pusha
loop
ljmp
outsb
filds
sub
pop
loope
ljmp
xor
cwtl
popf
leave
imul
loop
sub
call
or
mov
popa
push
cli
jp
iret
and
jg
pop
addb
mov
sub
and
add
jne
sub
sub
adc
push
sub
int3
lret
cmpsl
fcoml
pop
mov
xchg
mov
xlat
mov
mov
sbb
adc
leave
mov
cs
dec
inc
aad
inc
pop
mov
push
push
cmpsb
in
rcl
cmp
mov
or
adc
test
dec
insb
lock
lea
mov
lods
movsb
dec
mov
call
rcr
mulb
in
mov
mov
pop
loop
into
out
rclb
fdivrl
insb
add
mov
and
aam
rcrb
mov
sbbl
popf
mull
cmpsl
sbb
mov
test
jnp
fmuls
mov
inc
inc
push
inc
xchg
and
idivb
add
stc
int
xor
mov
add
cmpsb
dec
mov
les
dec
xor
jno
inc
cmp
lock
in
mov
fldcw
add
xchg
add
inc
sub
inc
call
out
inc
sarl
pop
mov
adc
pop
shrl
das
and
fcomi
pop
pop
mov
inc
stos
add
xchg
fimull
push
add
imulb
mov
mov
in
or
mov
sahf
icebp
push
inc
pop
push
into
mov
into
push
or
adc
js
repz
bound
ret
jp
cmp
adc
inc
dec
jecxz
xchg
jae
mov
rcrl
mov
mov
pop
and
cmp
ljmp
mov
pop
call
dec
pop
imull
into
outsl
jle
fcmovu
pop
data16
js
xor
dec
or
int
cmpsb
movsb
or
cs
test
gs
inc
insl
push
xor
mov
movsb
dec
jg
psrad
sub
int
movsl
and
jmp
cmp
jns
cli
pop
mov
bound
fldt
stc
scas
jns
lds
xchg
pop
and
neg
mov
dec
dec
nop
sbb
cltd
sbb
rorb
sub
dec
iret
adc
sahf
repz
cmp
test
je
icebp
mov
roll
sub
push
in
jmp
mov
push
jmp
clc
dec
jae
dec
movsb
or
rolb
pop
bnd
test
sub
fmul
int
std
test
pop
jle
mov
mov
and
jmp
add
dec
cmpsl
push
fstpl
mov
pop
jmp
pop
cld
out
inc
push
fwait
mov
shrb
mov
fstps
loope
sahf
enter
push
mov
push
insb
dec
dec
mov
cwtl
cmp
pop
jle
jmp
mov
dec
and
shll
jbe
enter
xor
cld
xor
fiadds
fnsave
fs
jp
dec
jl
sbb
adc
outsl
lcall
xor
mov
iret
in
sbbl
movsb
xchg
js
and
arpl
faddp
lret
pop
pop
fs
cmpsl
movsb
aas
mov
mov
fcmove
xchg
jg
add
add
test
cli
jb
push
scas
into
mov
lea
add
push
sbb
sub
push
outsl
mov
jbe
jmp
mov
xor
sti
inc
cli
jmp
les
jnp
sub
cmp
dec
js
adc
and
mov
xchg
out
daa
jg
pop
rorl
lahf
sahf
test
fcompl
sub
jns
subl
mov
jns
cli
or
fs
jge
mov
sbb
pop
das
mov
sbb
icebp
xor
insb
sub
add
jae
addl
pop
out
mov
leave
cmp
dec
sarb
pop
mov
shll
push
push
adc
jno
mov
in
fs
sbb
add
into
push
aaa
mov
dec
cmp
les
lds
fistpl
sub
fsubs
out
aaa
movsl
push
jne
cmp
jecxz
pop
mov
sbb
xchg
cmc
ficoms
xchg
inc
push
dec
nop
cli
mov
inc
movb
mov
sar
jl
and
les
cld
iret
imul
xchg
loope
push
jo
or
mov
and
jne
inc
fbld
sti
mov
andb
xchg
push
pop
add
pop
xchg
dec
jns
sub
cmp
add
test
push
sub
pushf
push
mov
jnp
or
mov
lret
mov
hlt
mov
xchg
mov
dec
cli
rorb
xchg
adc
jb
jp
dec
movl
ret
add
pop
lfs
out
mov
mov
into
rorb
lods
into
add
enter
pop
adc
repz
int3
icebp
dec
xor
xchg
outsl
push
xchg
pushf
sbb
ja
sbb
inc
mov
mov
mov
imul
pop
xor
jae
and
xchg
filds
inc
xchg
inc
cmp
sbb
nop
sbb
xor
xor
cwtl
add
cli
mov
sub
popa
mov
cltd
sbb
and
dec
push
movsl
aas
mov
sbb
push
inc
xchg
push
cmpsl
jg
outsl
dec
addb
repz
call
fldcw
cmpsb
push
out
aam
cmpsb
cmpsl
shll
ds
sbb
dec
sub
sub
mov
or
inc
jnp
cmp
push
pop
fstl
ds
mov
out
cmp
push
sub
js
lcall
and
cmp
cltd
out
inc
stos
lock
mov
add
aad
cltd
cwtl
scas
pop
mov
push
pop
loope
xchg
add
sbb
or
test
faddl
mov
sbb
pop
scas
lret
call
leave
inc
negb
movsl
fstpt
fwait
cmp
in
pop
in
sbb
xlat
hlt
mov
ret
lock
imul
lea
xor
std
popf
test
idiv
imul
or
mov
shlb
dec
jmp
cld
les
insl
mov
daa
ljmp
jne
loope
in
enter
or
inc
add
xor
int
subb
enter
popa
fdivp
cmp
xchg
jno
pusha
mov
xchg
sub
xchg
popa
cmp
in
xor
call
call
fsubrs
pop
lea
jae
cwtl
sbb
mov
cmp
dec
aaa
adc
sbbb
cli
pushf
push
jns
xchg
pop
inc
mov
adc
push
mov
mov
jb
sbb
add
or
fs
fnsave
cmp
ret
push
cltd
gs
mov
xchg
xchg
mov
sub
add
je
sub
mov
dec
xor
gs
dec
ds
mov
jecxz
mov
mov
into
pop
popa
cmpl
in
leave
cli
test
jne
adc
sbb
das
adcl
jle
push
adc
out
mov
fbld
lret
divl
aam
adc
sub
jl
or
push
or
out
xchg
les
or
js
mov
jl
fnstsw
adc
lcallw
lahf
sbb
cmp
ret
adc
sub
pop
mov
and
mov
xor
sub
ds
cmp
fnstenv
or
mov
js
loope
mov
repnz
scas
pop
popf
cmp
sub
and
sub
push
jo
rorl
adc
xor
shlb
sub
jp
movsb
aad
fistl
outsb
jl
cltd
add
sbb
dec
mov
dec
rorb
cld
cmpsb
roll
mov
dec
pop
mov
adc
mov
movsl
jae
jbe
dec
fcoms
xchg
fiaddl
movsl
xchg
in
xchg
jp
das
movsl
jbe
mov
ret
inc
pusha
into
clc
xchg
cmp
sahf
sub
mov
nop
popf
push
mov
lock
cmp
xor
jecxz
lock
in
xor
add
lahf
pushf
ret
add
inc
jg
pop
rcl
push
xchg
mov
int3
sub
mov
inc
cwtl
pop
gs
push
mov
adc
jne
popf
in
jle
fsub
push
inc
mov
xlat
orb
sbb
xor
test
lds
xchg
mov
sbb
mov
repnz
pop
lock
stc
fsubrs
xchg
shrb
push
inc
std
sbb
arpl
add
test
adc
jne
push
stc
cmp
loope
es
jecxz
push
js
dec
int
and
and
pop
mov
jno
shr
xor
out
mov
xchg
mov
sbb
lahf
xchg
jp
popf
pop
cmp
das
nop
lahf
imul
adcl
lods
mov
mov
rcll
arpl
mov
mov
shll
jne
inc
cs
repnz
iret
mov
out
inc
pop
fwait
pop
daa
into
jo
pop
xchg
call
mov
ljmp
dec
lods
jae
insl
mov
shrl
push
mov
mov
scas
dec
mov
cli
push
rcl
push
aaa
push
mov
test
mov
inc
sbb
inc
lcall
mov
cld
int3
xchg
popf
leave
test
std
insb
inc
add
jmp
mov
scas
das
push
fs
or
xchg
cmp
imul
jns
cmp
and
mov
xor
arpl
xchg
sbbb
xchg
fisubs
sub
sti
sarb
shrl
lahf
fildl
stos
pop
xor
adc
cmp
push
out
in
push
mov
popf
sub
and
std
sub
fnsave
mov
js
cmp
sbb
xchg
jg
mov
cltd
sub
xchg
cmp
cld
outsb
iret
shll
lds
mov
lods
xor
lock
aas
insl
lea
insb
in
dec
test
sbb
stos
xchg
dec
xor
bound
aad
negl
jnp
or
mov
iret
jne
js
push
mov
push
subl
repnz
lret
jle
bnd
add
sub
lods
push
cwtl
mov
data16
xor
adc
iret
test
jae
sar
push
ljmp
in
dec
mov
rorl
xor
jecxz
pop
xor
xchg
pusha
adc
stc
bound
mov
dec
adcl
lods
push
mov
aaa
push
mov
xchg
pop
gs
inc
aad
pop
je
ficomps
mov
outsl
xchg
pop
popa
pop
icebp
or
mov
add
loop
cmc
jg
je
mov
pop
rorl
in
cwtl
xor
pop
sarl
inc
repnz
push
mov
bound
pushf
mov
sub
adc
fcoml
lods
sbb
sub
popf
mov
pop
sbb
xlat
pop
sbb
outsb
subb
inc
dec
mov
dec
mov
movsb
sti
adc
daa
cmpsl
je
sbb
push
pop
xchg
mov
aad
test
xor
jns
and
scas
sub
mov
lret
repnz
in
fimull
dec
xchg
adc
or
aad
jg
stos
enter
push
stc
push
pop
jp
mov
mov
mov
into
sti
mov
jbe
xchg
mov
jae
mov
inc
cmc
ret
adc
fxch
nop
sbb
mov
lret
fnsave
lds
dec
push
jle
mov
outsl
push
jp
cmp
adc
xchg
push
mov
push
jg
add
xchg
loop
movsb
cmp
push
push
dec
jb
mov
shrb
inc
clc
dec
lods
or
fmull
sti
neg
cmp
popf
sbb
xchg
idivb
out
pop
adc
rol
pop
flds
movsl
sbb
sub
dec
sub
jb
jno
orl
push
inc
inc
cmp
add
ljmp
stos
sub
fisubs
mov
jnp
mov
insb
and
dec
mov
jge
add
cmpsl
xchg
enter
ret
sbb
sub
fadds
mov
mov
mov
and
out
and
jo
mov
add
xchg
sbb
popa
pop
repz
ja
jae
add
push
out
xchg
xchg
cli
das
lods
cmp
xchg
insb
call
push
ficomps
jmp
aad
int3
mov
pop
xor
idivb
test
pop
jecxz
jae
jo
in
mov
lret
push
xchg
or
add
std
test
mov
aaa
adc
push
div
lods
inc
cld
dec
jle
add
ret
mov
fsubrl
mov
addl
movsl
lahf
push
mov
movb
cmp
call
jno
xor
dec
shll
jp
or
sbb
out
divl
cs
int3
push
js
cmpsb
ds
cmp
rcr
aad
imull
push
cmp
clc
xchg
mov
sub
mov
negb
jg
push
lret
jmp
cmc
push
mov
gs
cmpsb
lock
jg
sbb
roll
inc
inc
call
xor
aas
movsb
adc
stos
jno
pop
sbbl
cmp
mov
jmp
add
scas
dec
push
or
inc
ja
aaa
dec
mov
mov
movsb
sbb
mov
pop
cmp
jb
cld
add
cmp
imul
push
push
inc
lods
cmp
imul
add
sub
jmp
ja
imul
adc
fisttpl
pushf
jns
or
mov
pop
and
inc
push
mov
fldenv
or
pusha
and
repz
or
ret
fs
movsl
fimuls
test
jg
stc
js
pop
pop
insb
cs
jnp
sbb
xor
add
jp
ret
pop
mov
lahf
mov
jmp
adc
aaa
cld
fcomps
insl
leave
xor
lock
sub
add
adc
enter
adc
push
push
inc
jge
scas
aas
mov
dec
out
in
mov
inc
xor
jl
mov
xchg
push
outsb
pusha
dec
push
lret
movsb
clc
push
repnz
and
out
mov
in
mov
mov
inc
fdivp
outsl
sbb
mov
popa
cld
mov
push
and
cwtl
adc
outsb
sub
dec
xchg
fcomi
cmp
mull
bound
jge
popf
adc
add
inc
sti
imul
repnz
pop
jle
sahf
fbld
outsb
jecxz
push
movsb
mov
outsb
xchg
mov
out
leave
inc
cmp
stos
sub
sub
mov
pop
mov
dec
cmp
cmp
cmc
fucomi
insl
inc
leave
cmc
dec
movsb
loopne
rorb
cld
push
mov
test
jo
cmp
xor
inc
inc
xchg
and
cmp
pop
push
mov
out
xor
pop
testb
xor
movsl
pop
sbb
mov
sub
or
mov
out
ror
cmc
cmp
xchg
outsb
stc
inc
push
mov
shlb
test
push
sub
mov
lea
lcall
adc
lods
or
and
ret
push
mov
jo
mov
rcrl
xor
test
mov
loopne
xchg
jmp
ret
dec
std
cmp
adc
popa
lods
push
jmp
fildl
ljmp
mov
fnsave
xor
shlb
jbe
pushf
jle
andl
movsb
xor
cs
and
cld
daa
sbb
jo
iret
and
hlt
jns
mov
pop
pop
imul
xlat
iret
daa
xor
fiadds
cmp
xchg
dec
mov
xchg
push
sbb
add
dec
and
movsl
aam
enter
in
popa
dec
cmpb
sub
inc
outsb
out
fistps
dec
leave
mov
and
shlb
or
int
xchg
call
pusha
arpl
mov
push
jle
mov
es
mov
gs
idiv
lret
adc
imul
mov
xlat
test
add
mov
mov
mov
js
ret
outsb
test
xchg
xor
xchg
repnz
dec
pop
je
js
jle
int
add
pop
inc
lret
cmp
fidivrl
xchg
popf
fnstsw
jno
sbb
cmpsb
icebp
mov
fstpl
aas
adc
fidivs
into
pushf
jp
mov
daa
mov
inc
out
push
je
movsb
gs
xchg
mov
mov
mov
cmpsl
arpl
rcrb
adc
ret
pop
xor
sbb
dec
xchg
lcall
add
sbb
push
and
mov
or
inc
sbb
sub
push
test
dec
mov
push
add
enter
nop
pop
test
orb
cli
movsb
fsubr
bnd
aad
and
bound
clc
add
sbbb
adc
aas
and
mov
fs
ret
and
arpl
sbb
mov
popa
mov
mov
xchg
xor
mov
mov
jecxz
test
cwtl
fadds
jnp
std
xorl
cmpsl
div
popf
mov
inc
push
inc
dec
fdivrl
inc
inc
mov
sti
das
movsb
and
push
test
ss
push
decb
add
adc
ljmp
iret
push
cld
out
mov
and
gs
cmp
inc
sbb
jmp
pop
pushf
test
rorb
mov
fdivl
in
iret
fwait
clc
out
mov
and
adc
xchg
sbb
pop
out
repnz
add
xchg
jne
lcall
xchg
pop
sub
fdivp
orl
rcrl
jb
das
xlat
push
sub
or
orl
pop
ja
cltd
into
add
test
loopne
shrb
jmp
mov
jge
inc
inc
mov
cmp
inc
scas
lock
cmp
sub
mov
mov
sub
dec
enter
and
cmp
sbb
subl
rcrb
mov
push
imul
mov
jb
push
pushf
sbb
cld
pop
flds
jb
std
mov
fisubrl
mov
in
dec
into
sbb
cwtl
out
loop
push
dec
idivl
jbe
rcrl
jp
xor
fs
outsb
sbb
xchg
mov
jns
leave
daa
lret
es
jnp
mov
dec
sti
cld
mov
ljmp
push
xor
mov
into
leave
jne
pop
cs
mov
gs
shl
and
insb
movb
pop
inc
lods
lock
push
jb
les
int
pop
mov
jne
xchg
hlt
std
cmp
fcmovbe
outsl
daa
loopne
popa
pushf
mov
inc
adc
test
dec
dec
bound
lods
sbb
or
lahf
enter
hlt
in
gs
xchg
imul
xor
push
push
sub
mov
loope
mov
lahf
and
fistl
scas
mov
out
jo
adc
jp
ja
xorl
mov
push
incb
das
mulb
inc
add
xlat
jp
push
dec
mov
outsl
das
popf
mov
mov
out
popf
ss
je
push
in
add
fcomi
jae
mov
adc
movzwl
sbb
stos
mov
scas
or
sbb
xor
movsb
sbb
addb
jns
addr16
ss
jnp
push
ljmp
jae
adc
or
divl
xchg
mov
push
mov
mov
or
les
xchg
adc
push
ljmp
add
jnp
test
pop
ja
repnz
cmpsb
lods
dec
jb
insb
aas
xchg
xchg
or
adc
js
sbb
or
fisubl
cmp
mov
mov
subb
loope
push
jmp
pop
movsb
add
adc
pushf
or
gs
mov
mov
xchg
movsb
pop
pop
jnp
repz
sbb
jne
lcall
lods
pop
js
xchg
nop
inc
jne
xchg
andb
sbb
or
out
lcall
mov
les
jge
and
jns
loop
push
mov
pop
lds
inc
pusha
repnz
pop
adc
add
cmp
outsb
mul
xor
and
sub
jge
pop
and
xlat
dec
aad
push
push
add
mov
out
pop
hlt
inc
pop
dec
outsb
lods
cmp
cs
imul
inc
popl
or
mov
inc
mov
decb
mov
push
nop
cmc
ds
inc
sar
dec
xchg
das
push
popa
jl
add
push
ss
mov
or
mov
sbb
repnz
or
mov
or
mov
sub
mov
inc
sub
repz
add
pop
subl
stc
jnp
xchg
mov
movb
jg
cmp
and
cmp
xor
repz
adc
scas
mov
push
cmp
mul
je
test
push
push
jb
cld
xor
pop
mov
mov
ds
pushf
xchg
inc
aam
mov
cld
andl
inc
sbb
gs
shrb
push
jo
or
lds
ss
jl
adc
mov
cmc
jg
mov
mov
sub
dec
fistpl
adc
add
lods
je
sub
add
es
push
and
stos
jge
mov
jp
xchg
add
jmp
add
lret
icebp
pop
pop
push
lcall
cmc
out
pop
sub
cmc
jb
xchg
or
inc
in
mov
push
xor
mov
sub
push
jae
fwait
push
pop
adc
adc
jge
aad
out
jnp
daa
and
add
stos
lds
int3
xchg
data16
inc
push
mov
sti
lock
sub
notl
or
ljmp
mov
ret
mov
in
cli
inc
sub
pop
jae
xor
jnp
pop
dec
sahf
jle
jb
in
js
sbb
addb
pop
imul
int
pop
decb
cmp
clc
push
xchg
in
lea
iret
push
adc
insb
xchg
leave
lock
imul
faddl
mov
xchg
in
jl
sbb
mov
and
add
sub
cmpsl
sti
mov
sbb
jl
popf
and
ss
ss
cmpsb
out
cli
loopne
dec
mov
data16
jge
adc
inc
dec
fmull
cmpsb
xchg
andl
ret
push
lret
popf
xchg
test
push
xor
lret
adc
andl
sbb
out
add
pop
mov
lods
dec
shlb
sub
and
add
push
jns
out
je
popa
pop
mov
sub
mov
adc
sbb
push
xchg
xor
lahf
fbld
hlt
push
dec
bound
mov
sub
int3
outsl
and
int3
adc
nop
jns
pop
dec
ja
into
lcall
jmp
pusha
out
pop
js
mov
mov
ret
mov
jp
jo
clc
and
xor
mov
cltd
idivl
out
dec
push
jae
add
or
enter
mov
push
in
popf
xchg
loope
and
sahf
je
inc
or
in
lds
jne
mov
repz
mov
sbb
sbb
hlt
fstps
jge
sbb
ss
mov
cwtl
mov
les
adc
insb
mov
rorl
dec
arpl
xchg
pop
insb
or
push
lock
mov
clc
pusha
popl
xchg
test
inc
popa
fst
jb
add
xchg
cmp
fstpt
inc
inc
cmc
cltd
mov
pop
stos
shrb
pop
loopne
or
mov
add
mov
dec
lods
xor
cmp
repz
cwtl
xchg
push
or
fcoms
inc
xlat
test
xor
gs
sti
mov
or
mov
jmp
xchg
jp
mov
mov
popa
inc
push
or
mov
lret
lret
dec
push
ret
cmp
mov
xchg
mov
cs
scas
mov
and
xor
inc
sub
repz
push
mov
faddl
sbb
pop
mov
les
test
pushf
mov
shll
sub
jns
sbbb
sbb
scas
pop
pop
out
call
or
or
cwtl
jp
mov
xor
push
push
movsl
pop
inc
sub
adc
sub
push
test
push
and
roll
push
cmp
cmp
iret
mov
roll
mov
div
dec
add
mov
aas
shll
rcl
mov
ss
pop
in
or
xchg
test
mov
adc
push
push
add
iret
fwait
jae
pop
test
lahf
sbb
mov
cmp
in
sub
sub
sub
aaa
sub
jne
pop
hlt
inc
lock
jle
pop
push
repnz
mov
dec
cli
imul
inc
jg
push
adc
jnp
ja
pop
inc
nop
add
xchg
sub
shlb
adc
inc
pop
fistps
movsl
loope
sub
movsb
jg
int3
outsl
fbstp
out
sub
loopne
cmp
cmp
cwtl
mov
jns
test
in
aas
mov
pushf
pop
xchg
pop
and
sub
jno
add
pop
cli
jl
jnp
or
mov
pop
mov
jo
jecxz
mov
fidivrl
inc
inc
out
push
add
sbb
loop
mov
add
sbb
fnstsw
js
push
pusha
pop
lods
add
sbb
mov
pop
loop
outsl
lret
add
cltd
imulb
xor
pop
adc
loope
push
jne
jp
mov
dec
push
pop
jecxz
adcb
dec
test
jl
ljmp
xor
ljmp
in
hlt
fsubrl
test
sbb
les
jns
lret
dec
xchg
dec
ftst
ljmp
mov
testb
lret
or
pusha
test
loope
cli
ret
int3
mov
mov
cmp
insl
inc
add
sub
sbbb
cwtl
or
out
dec
scas
notl
push
aam
cltd
addr16
out
frndint
fidivrl
push
daa
testl
dec
jg
mov
gs
lods
mov
mov
sbb
adc
push
pop
test
mov
dec
fwait
mov
mov
mov
lahf
mov
outsb
shlb
jno
mov
mov
movsl
imul
adc
icebp
cmp
cmp
pop
dec
push
andl
cmpsl
sbb
insl
add
cs
clc
push
inc
adc
add
fcmovne
shll
inc
lret
leave
loop
in
pop
sub
pop
pop
pop
shrb
movsb
scas
mov
mov
inc
sarb
jg
ja
sub
stos
lods
fdiv
lock
clc
addr16
jns
push
imul
outsl
test
in
dec
into
mov
xor
and
out
rorb
jb
cmp
orl
out
jp
mov
fcoms
cmpsl
adc
sub
movsb
sbb
jecxz
xchg
inc
cmp
bswap
popf
xor
pop
cmp
adc
sub
mov
sti
lea
inc
or
outsb
add
push
cmp
outsl
out
sub
mov
aaa
mov
jmp
std
cmpsb
pop
iret
popf
mov
inc
dec
in
xchg
clc
das
sbb
pop
push
cs
cli
push
cmpl
sbb
in
adc
add
mov
or
fpatan
dec
inc
xchg
sub
lock
lahf
lds
add
or
cmp
pop
or
mov
or
add
aas
cltd
mov
cmp
lods
mov
sub
xchg
sbb
enter
popf
call
or
mov
sbb
push
adc
pusha
adcb
xchg
fstpt
pushf
mov
in
dec
lcall
mov
xchg
inc
popf
test
in
orl
sub
ret
rcrb
push
jmp
xchg
and
fiadds
sarb
push
pop
int3
ss
and
push
jne
loopne
add
scas
int
or
packsswb
scas
pop
dec
jno
jg
xor
push
iret
push
xchg
mov
xchg
cli
fiadds
ljmp
arpl
or
leave
addr16
loop
jns
test
cmp
xchg
std
push
jnp
fisttpl
jbe
scas
sbb
stos
mov
or
cmp
out
scas
jb
gs
cmpsl
lea
call
loope
in
inc
into
add
mov
cmp
adc
push
mov
xorl
jbe
je
sub
fsts
mov
outsl
mov
das
pushf
mov
test
movsb
fcomps
jmp
adc
in
and
mov
jg
xor
test
int3
sbb
pop
jge
arpl
add
jg
add
sub
mov
sbb
fsubp
xchg
xor
jecxz
rorl
xchg
adc
xchg
ret
sbb
repz
popf
xchg
or
adc
or
add
push
popf
push
test
inc
mov
add
pop
and
pop
xchg
push
pop
movsl
push
rclb
and
cmp
mov
push
push
cld
nop
js,pn
add
push
jo
pop
clc
pop
fisubs
das
nop
mov
sbb
arpl
int3
fst
mov
clc
fcmovne
pop
pop
cmp
jmp
js
sarl
insb
stos
bound
icebp
add
repnz
push
push
inc
xlat
push
push
pop
cltd
xchg
inc
mov
fimull
insb
movsl
hlt
adc
push
scas
les
rolb
lahf
ljmp
das
xchg
in
enter
push
push
aam
adc
xlat
sub
aaa
rcl
fcom
ja
jmp
mov
movsl
arpl
push
mov
ds
scas
mov
lret
bound
push
int3
adcb
jp
rcll
adc
sub
mov
push
mov
aaa
push
cmp
add
mov
ss
shll
xlat
cld
adc
sbb
shll
xchg
xor
xchg
xchg
lock
sahf
mulb
test
in
leave
shlb
out
or
pop
ss
popl
loope
jge
pushf
add
jl
loopne
inc
and
jne
cmpsl
in
dec
mov
jp
mov
test
repz
mov
sub
inc
push
ljmp
sub
int
mov
test
ljmp
add
mov
mov
or
pop
enter
push
std
sbb
nop
pop
jbe
sbb
adc
loop
mov
test
jnp
sbb
cmpsl
adc
sub
aam
mov
jg
gs
loope
dec
hlt
jne
xor
roll
cmp
nop
in
leave
outsl
leave
push
loopne
cmp
nop
int
push
pushl
jp
adc
jbe
ja
jb
notb
je
push
inc
jns
cwtl
mov
cli
lods
stos
sbbb
cmp
shl
jo
lea
in
cmp
sub
jecxz
mov
jmp
add
rcl
jmp
jl
fucomip
push
push
repz
rcrl
imul
mov
jle
jge
xchg
outsl
xchg
adc
std
in
mov
into
pop
std
jns
and
push
xor
cmp
mov
push
and
out
inc
fs
jmp
jae
mov
repnz
mov
iret
mov
pop
repz
js
ret
stc
movsb
inc
neg
push
push
loope
jb
and
mov
fst
fnstenv
push
xchg
mov
push
dec
mov
cmpsb
fldenv
aam
xchg
dec
adc
repz
in
and
rol
loope
das
sahf
and
or
test
or
aas
cmpsl
jno
cmp
faddl
cmc
loopne
push
mov
lret
aas
outsl
jecxz
enter
enter
inc
pop
dec
jb
icebp
pop
inc
xor
inc
mov
push
lods
sub
mov
outsl
fistpll
adc
nop
sub
andl
push
mov
cmp
cmp
andps
sti
lds
push
sbb
bound
xorl
cltd
sub
mov
mov
cmp
inc
ja
xlat
dec
stc
mov
fmuls
pop
subb
or
jg
adc
shl
adc
inc
call
dec
cmp
pushf
fsubrl
mov
ja
or
lods
mov
jnp
jo
fcomi
aaa
jle
and
push
xor
mov
rolb
xlat
lret
or
dec
sti
sarl
lods
insl
cwtl
nop
jecxz
jl
fwait
inc
test
push
add
pop
sub
pop
into
sahf
sub
icebp
and
xor
negb
adc
in
leave
dec
sub
fildl
inc
es
lods
cmp
adc
mov
mov
cwtl
stc
sub
fsub
std
lret
frstor
dec
clc
xchg
pop
leave
lods
xlat
xor
sahf
jno
ret
add
in
in
lock
lds
es
dec
inc
or
adc
outsb
pop
xchg
cwtl
sub
inc
lods
mov
add
mov
ret
stos
fildll
add
and
mov
int3
dec
cmpl
aad
sbb
jge
int3
mull
fdivs
fistpll
ja
push
and
sub
mov
arpl
aaa
sub
mov
shrl
mov
notl
fwait
pop
fucom
je
and
cltd
pop
fidivl
xlat
loope
push
fsts
jne
inc
dec
jo
aaa
in
jle
push
ror
xchg
xor
push
les
cmp
pop
sub
xor
mov
jg
or
mov
fdiv
test
aam
daa
pop
xchg
ret
std
add
cmc
je
lods
mov
test
add
jecxz
fsubrl
and
xor
mov
rcr
jmp
add
out
pop
loop
add
inc
xor
jp
cmc
xchg
loopne
mov
pop
push
dec
mov
xchg
je
mov
adc
mull
cmp
xchg
jl
xor
popf
pop
movsl
mov
xchg
repz
bound
aaa
mov
sbb
pop
sbb
add
inc
mov
movsb
loop
or
xor
je
xchg
call
xchg
xchg
test
loop
dec
cld
mov
jns
jns
add
xlat
sub
mov
adc
scas
add
lcall
add
pushf
adc
mov
add
nop
sub
pop
lcall
hlt
mov
in
adc
cmp
popf
lahf
inc
daa
mov
and
shlb
jbe
xadd
out
inc
gs
lock
mov
sub
sub
pushf
mov
ja
adc
jns
loopne
cmpsb
arpl
push
std
mov
mov
add
mov
movsb
adc
pusha
pop
mov
sub
insb
cmpsb
scas
js
mov
sub
fwait
test
and
fucomp
xor
popa
pop
movsl
cld
insl
shlb
push
sahf
rcrl
pop
loope
cmpxchg
jbe
roll
in
and
out
mov
aad
pop
push
pop
mov
jecxz
dec
pop
fisubs
pop
jmp
xchg
out
orb
out
and
jo
sbb
mov
rcl
sbb
mov
cwtl
jl
pop
pop
pop
cli
xor
and
enter
push
pop
addb
jmp
mov
adc
dec
lahf
lods
push
loop
mov
xchg
das
or
out
jae
jo
push
nop
popa
dec
mov
inc
add
pop
call
popa
xchg
xor
scas
fwait
out
pushf
add
xlat
dec
fldcw
pop
lahf
push
jg
add
mov
push
lahf
stc
idivb
fiaddl
ljmp
pusha
pop
inc
ljmp
movsl
pop
shl
sti
inc
std
mov
cmp
popf
pop
aam
jp
repnz
fsubl
sub
shll
fcom
mov
mov
sti
out
fildl
xor
imul
push
fwait
inc
adc
pop
cmc
push
add
cld
rcll
das
aam
popa
push
test
xor
cmp
jnp
lret
jnp
mov
or
mov
push
jbe
mov
xchg
or
mov
outsl
xor
cmpsb
push
and
push
mov
xsha256
cmpsb
adc
je
stos
and
mov
jmp
cmpl
mov
iret
movsl
ljmp
mov
sbb
push
push
or
adc
pop
jge
push
cld
and
xor
push
fidivrs
push
jl
push
fwait
lretw
sahf
test
aaa
jb
sub
into
in
and
popa
mov
sub
jle
push
sub
insb
roll
stc
cmpsl
dec
popa
mov
loop
inc
dec
insb
icebp
jae
push
js
xor
mov
mov
adc
roll
xchg
inc
push
xchg
jne
jo
xlat
call
dec
inc
xlat
sub
rcr
jl
push
out
test
dec
clc
jg
les
pusha
or
icebp
test
hlt
adc
popf
cmp
movsb
sbb
mov
ljmp
or
xor
scas
shrl
jl
jecxz
push
and
dec
in
push
sub
xchg
jmp
fidivl
insl
movsb
nop
inc
dec
fstpt
push
int3
iret
fstpl
int3
mov
add
or
stos
jo
mov
inc
divl
dec
js
mov
cmpb
fldcw
negl
cmp
movsb
aad
sbb
dec
pushf
sahf
or
push
lcall
fxch
dec
outsb
push
xchg
cmc
xchg
jle
adc
inc
sahf
ljmp
lock
jae
stos
mov
jg
int
or
pop
mov
nop
xchg
test
mov
scas
jp
pop
adcb
jno
jecxz
leave
rol
sbb
inc
sbb
mov
sbb
rolb
fisubrl
aad
inc
jle
sarb
or
mov
iret
fisttpll
mov
and
mov
jb
arpl
scas
xchg
xor
sbb
sub
lods
mov
sarl
mov
adc
mov
cwtl
fildll
aad
mov
sbbl
jne
fwait
lock
out
xor
and
lret
cltd
or
inc
add
jo
in
xchg
sbb
add
jg
movsb
shlb
rorl
inc
push
sbb
mov
mov
pop
jae
ret
cmc
iret
mov
test
mov
sbb
in
fs
or
fists
xchg
dec
in
nop
orl
inc
sbb
adc
and
cwtl
pop
and
lea
push
or
and
inc
sti
or
add
std
mov
leave
adc
pop
mov
test
adc
adc
lcall
aam
lods
in
push
andb
movsl
loopne
pop
push
call
dec
inc
sub
test
mov
fwait
sub
cwtl
lock
pop
pop
cs
xchg
dec
pop
scas
push
lds
push
sub
add
pop
arpl
push
xchg
ja
lret
rcr
outsl
jb
icebp
sub
lock
jmp
mov
ret
mov
mov
xchg
mov
iret
ret
sbb
mov
jno
loop
and
add
in
popa
inc
cwtl
or
notl
jns
repz
cmpsl
mov
dec
sub
in
out
mov
xchg
adc
cmp
fbstp
lods
fmull
gs
xchg
xor
mov
in
xor
sbb
xchg
dec
inc
iret
popf
mov
outsl
popa
adc
pop
hlt
mov
dec
inc
sbb
cmp
jae
pop
shlb
mov
add
enter
inc
xchg
or
xadd
sbb
add
push
or
fiadds
dec
xor
add
jo
push
js
fiaddl
hlt
xchg
fucomi
aaa
push
mov
and
ja
or
testl
call
rcll
xchg
jmp
hlt
mov
mov
dec
cld
push
xor
icebp
loope
call
and
cmp
ljmp
out
jne
mov
dec
imul
in
shr
sbb
rorb
xchg
divb
sar
lret
jmp
add
outsl
lahf
mov
daa
and
add
mov
stos
add
mov
in
divb
sarl
ss
adc
shr
stos
aam
jg
and
movsl
or
test
gs
pushf
shl
adcl
movq
ds
mov
jae
push
or
adc
xchg
sbb
lret
fsubl
fwait
aas
rcrb
sbb
or
mov
sbb
fmuls
jge
jmp
xor
sbb
mov
clc
je
mov
enter
mov
pop
or
repnz
cmp
add
aas
pop
jae
and
sub
cwtl
test
movsb
lea
inc
or
add
xlat
cmpsb
icebp
adc
clc
outsb
pop
add
cmpsb
sub
xchg
shrl
int
cmpsl
inc
inc
sub
dec
inc
in
push
mov
and
testl
fnsave
mov
add
jbe
daa
fs
sub
sub
and
push
adc
jg
inc
lea
stc
push
xchg
notb
mov
inc
stc
sub
mov
sahf
pusha
mov
sbb
xor
inc
sub
xchg
ss
inc
les
cli
lret
int
shrb
int3
shll
adc
inc
gs
xor
clc
xor
jp
leave
fldt
in
mov
aad
scas
insl
and
cld
iret
mov
pop
in
ret
sub
add
adc
adc
push
fdivrp
lret
or
jmp
fucom
mov
xor
pop
and
push
aam
sub
add
sub
pop
mov
and
fiaddl
add
adc
or
add
scas
or
sbb
movsb
je
xchg
fcomps
push
push
mov
add
xchg
pop
sub
movsl
adc
push
fidivrs
jle
lock
insl
sbb
xchg
int3
push
rclb
sahf
cmp
sbb
and
mov
pop
sub
mov
ret
js
stos
mov
pop
mov
fmull
add
das
out
cmp
lret
mov
sub
sub
loop
arpl
mov
inc
testb
adc
or
outsl
inc
daa
or
fldcw
in
std
cmp
int
test
js
push
adc
mov
add
scas
and
and
xor
xor
subb
jmp
cmp
mov
stc
sbb
int
jle
scas
mov
xor
lret
mov
cmp
ds
add
sub
cmp
push
pop
pop
inc
add
cmp
cmp
out
data16
popf
mov
ret
dec
into
jl
pop
pop
inc
bound
mov
dec
and
mov
popf
sbb
mov
cmp
cmp
andl
xchg
stos
pop
lods
loope
inc
add
xchg
mov
mov
cmp
or
mov
and
lea
adc
mov
ja
arpl
jl
dec
les
cltd
sbb
sbb
adc
sbb
jb
lds
shll
dec
pop
adc
popf
test
mov
pop
jle
mov
push
rclb
dec
out
mov
ja
scas
dec
pop
jb
aad
jmp
pop
dec
mov
enter
out
out
arpl
mov
mov
mov
inc
push
in
jge
daa
push
lea
cmp
xor
xor
andw
out
out
xchg
sahf
jp
sub
fwait
je
stos
int3
fmull
bound
sub
pop
pop
pop
cltd
sbb
cmp
add
cmp
adc
cmp
lcall
ljmp
or
shll
fstl
push
jnp
negb
fnstcw
dec
mov
movsl
fisubl
test
push
and
fs
sub
daa
dec
mov
xchg
xchg
pusha
jmp
adc
aad
es
bound
add
jecxz
sub
in
cli
arpl
push
mov
hlt
rorb
mov
shr
dec
aad
in
fs
int3
sub
xchg
pop
mov
push
addr16
popa
ja
dec
jo
shll
int3
inc
lahf
mov
inc
in
jle
in
xlat
sti
das
dec
and
inc
movsl
jmp
fwait
sbb
mov
out
cltd
adc
lock
loop
or
mov
dec
jnp
outsb
decb
cmpsl
push
loop
ss
adc
mov
cmpsb
pusha
mov
jg
subb
stos
arpl
inc
pop
sub
scas
aam
lock
outsl
lods
cmpsb
xor
xchg
xchg
imul
or
fstpt
xor
push
and
cmpsl
pusha
xchg
aaa
adc
repnz
mov
ljmp
and
es
add
sbb
cmpsb
fisubs
ljmp
mov
and
bswap
fldl
aas
jne
sbb
loopne
pushl
xor
das
xchg
mov
mov
mov
xchg
push
repz
xlat
fcmovnu
sub
push
push
popa
test
push
paddusw
xor
iret
mov
ret
dec
add
push
cmp
jnp
xchg
cmp
mov
lds
cli
and
adc
add
cmpsw
scas
mov
jns
mov
xchg
adc
mov
lahf
xlat
loop
sbb
sahf
mov
aam
mov
sbbb
subb
addr16
fcoms
sub
lcall
xor
adc
out
outsb
add
cli
loope
pminsw
imul
stos
inc
das
xor
das
inc
adc
jge
cwtl
icebp
jle
xchg
pop
pop
add
xorl
rcll
imulb
mov
orb
rcll
jbe
subl
sub
je
test
lds
std
sub
lea
mov
int3
mov
movsb
cmp
jge
or
fistps
in
adc
mov
mov
mov
fisttpll
out
adc
mov
and
pop
push
push
push
or
and
or
push
ljmp
mov
imul
test
fs
pop
jg
and
xor
addr16
mov
lock
js
aam
mov
sbb
mov
jno
or
add
jl
fdivl
fwait
js
sbb
arpl
adc
shrl
testl
sub
pop
cmpsl
pop
add
mov
mov
fimuls
stos
jle
gs
gs
sub
mov
out
aas
rcrb
jne
or
inc
ret
pusha
out
nop
loop,pt
movsl
bound
lods
mov
in
mov
xchg
and
dec
pop
jl
hlt
push
inc
and
pop
loop
pop
push
cs
les
mov
adc
test
jo
das
cmovns
stos
int3
outsb
repz
adc
aad
or
mov
bound
and
mov
inc
dec
push
jl
jl
mov
icebp
inc
pop
popf
in
push
push
push
adc
adc
sub
push
out
sbb
mov
arpl
dec
mov
mov
sbb
stos
sar
cmpsb
or
pop
xchg
cmp
mov
or
in
shll
add
mov
push
shll
imul
in
sbb
cmp
xorb
and
ja
cld
arpl
pop
scas
push
adc
and
push
lods
bound
out
lea
andl
clc
sbb
sti
mov
add
push
push
jbe
je
jns
je
xor
setg
imul
fidivrs
mov
cltd
adc
add
fisubs
and
addr16
xor
jmp
jg
jo
rol
lcall
sbb
jae
push
inc
jno
and
jae
sbb
or
cltd
mov
repnz
mov
loop
xor
ljmp
cmpsl
lock
bound
lods
jno
and
mov
dec
ss
xchg
jg
sbb
push
aam
fwait
imul
cmp
sbb
enter
xchg
add
push
push
push
pop
cmp
dec
lods
addb
icebp
ret
or
sahf
jge
xlat
mov
test
cmpsl
xor
sbb
aam
inc
out
daa
in
ret
pop
jns
cmp
hlt
jge
xor
dec
fs
jge
fisubrl
nop
sub
xchg
jae
pop
mov
mov
adc
add
inc
inc
jbe
pushf
xchg
adc
sbb
fs
mov
dec
add
and
sbb
aaa
xor
lds
add
xchg
mov
sbb
cwtl
mov
sbb
imul
pop
in
mov
or
sbb
xchg
loopne
lea
dec
push
mov
mov
lret
mov
mov
xchg
push
jmp
popf
cs
out
popa
sub
cmpsb
pop
xchg
scas
push
sbb
mov
leave
fidivl
insb
add
add
sub
roll
push
sub
cmpsb
or
pop
xor
icebp
xchg
lock
fwait
cld
sbb
scas
loop
push
push
add
insb
adc
mov
das
xlat
leave
in
push
cmpsb
pushf
sub
inc
push
adc
or
cli
add
adc
fmuls
out
lock
dec
lret
cmp
test
sub
sbb
push
cltd
fwait
aas
js
fsubrp
test
int3
outsb
adc
xchg
xchg
ret
jmp
les
jb
xchg
mov
sbb
shrl
mov
push
pushw
sbb
aad
jno
stos
pop
inc
mov
dec
push
mov
and
dec
push
pop
add
test
jne
test
add
popa
leave
arpl
test
es
push
lds
lds
xchg
out
dec
jecxz
jmp
cmp
clc
in
jns
idivb
dec
fbld
sub
dec
pop
sti
sbb
iret
ret
stos
cwtl
inc
pusha
clc
in
cmp
fcoms
jno
jae
xlat
arpl
aam
fcomi
fcompl
fdiv
mov
sbb
xchg
and
and
nop
cs
mov
mov
push
mov
js
adc
jl
inc
loopne
cmp
xor
mov
jp
jmp
sbb
cmp
out
arpl
mov
xlat
and
clc
cwtl
insl
mov
jno
hlt
mov
out
sbbb
imull
je
shr
mov
xor
cld
fstl
pop
imul
pop
cmp
push
scas
push
xchg
adc
xchg
xchg
mov
test
jp
push
popf
jno
pop
inc
std
stos
sbb
pop
js
mov
mov
mov
ret
sbb
jl
mov
xchg
xchg
push
push
xor
fldt
and
pop
sub
cmp
xor
mov
ret
into
in
cmpsl
xor
add
data16
es
adc
fwait
pop
inc
fstpt
sub
movl
pop
cmp
ds
push
lret
cmp
add
push
aas
fisubrl
loopne
jnp
cld
in
mov
jno
jl
mov
stc
lea
bound
pop
sub
adc
push
pushf
sub
sbb
inc
add
mov
lahf
inc
test
mov
inc
jne
mov
cli
leave
test
loopne
jno
sub
stc
out
cmp
std
jg
inc
pop
ss
cmp
cmpsl
or
mov
xlat
addr16
push
push
inc
lods
jbe
frstor
add
cwtl
aad
into
mov
out
mov
mov
jb
push
out
es
dec
out
lret
data16
adc
mov
push
jle
stos
fwait
lods
or
push
or
jmp
pop
mov
fld
int3
mov
sub
sbb
pop
insb
lret
cmp
cltd
insl
and
pop
into
insl
or
push
add
and
std
test
mov
insl
out
int3
mov
fildl
mov
add
data16
push
mov
xor
mov
pop
in
insb
jo
sbb
xor
cmpsb
std
push
push
fistpl
ret
or
add
push
xlat
aad
mov
adc
xor
xor
jge
cmp
jge
sbb
push
jge
push
enter
pusha
bound
and
fbld
xor
add
ja
sti
ja
inc
popa
pop
inc
int
int3
add
sbb
pop
mov
imul
add
in
fwait
adc
mov
hlt
inc
arpl
in
jb
cmp
aas
daa
dec
push
push
mov
push
ss
pusha
aaa
rol
pop
dec
imul
mov
xchg
dec
or
sbb
xchg
sbb
pop
mov
mov
xchg
mov
push
push
xor
mov
push
jno
lds
push
adc
or
cwtl
loopne
pop
mov
jecxz
push
push
stos
aas
add
stos
mov
cmc
mov
sub
bound
cli
and
movsb
cwtl
or
es
in
mov
std
call
xor
xchg
enter
fldl
sub
cmp
mov
jne
inc
sub
in
ret
inc
ja
cmc
jmp
pushf
sbb
movsb
lcall
repnz
movsb
or
sbb
lret
sub
mov
stos
mov
vmovlps
pop
into
push
sbb
jecxz
andb
push
pop
or
xor
mov
fcompl
adc
inc
dec
aaa
push
aaa
add
mov
fxch
stos
push
or
inc
mov
imul
inc
jno
inc
sbb
in
std
inc
shlb
pop
shrl
repz
mov
xchg
xchg
sahf
testb
inc
scas
jnp
add
scas
sub
push
out
push
das
dec
jno
fucomip
int
or
ljmp
mov
sbb
pop
iret
rorb
xlat
lock
or
shlb
int3
jns
daa
fwait
cmp
cwtl
jl
in
sahf
pop
dec
xorl
xchg
into
rorb
mov
fildll
std
or
xchg
rclb
dec
lret
jecxz
sahf
jge
inc
pop
or
pop
jp
add
and
insl
iret
int
jae
mov
adc
mov
mull
das
mov
mov
cmp
push
jmp
lea
or
loope
inc
test
fwait
pop
test
dec
xor
push
cwtl
mov
rolb
inc
jp
addr16
mov
jg
mov
stos
stc
and
adc
mov
inc
aas
sbb
inc
sahf
cmp
nop
mov
aam
repz
push
ffreep
int3
xchg
stc
aad
stos
sub
ror
jecxz
inc
out
and
cwtl
imul
add
punpckhbw
jl
xchg
in
aas
repnz
mov
cmp
into
sbb
int
pop
mov
in
in
push
call
scas
sbb
cwtl
dec
scas
push
mov
jae
add
mov
popa
mov
test
mov
fnstsw
xchg
cmpl
mov
mov
ljmp
mov
pop
shl
repz
mov
loopne
dec
aad
je
mov
xorl
in
mov
xor
roll
inc
cmpsl
mov
stos
popw
sahf
enter
push
adc
jns
push
into
push
lods
cmp
fs
xchg
call
ljmp
scas
sahf
aam
adc
dec
dec
mov
jno
mov
fwait
sub
cmp
test
jns
ja
adc
adc
outsl
xor
lcall
cmpsl
and
jns
andb
pop
cmp
and
xchg
mov
dec
pop
xor
gs
cmp
push
and
in
fcompl
adc
jg
loopne
or
xchg
pcmpeqw
cwtl
pushl
dec
and
js
popa
mov
jecxz
push
js
out
mov
xchg
mov
clc
jae
jnp
bound
pop
stos
cmp
cmp
and
mov
mov
pop
add
cld
mov
xor
loop
inc
push
xor
test
or
cwtl
dec
pop
jge
pop
in
sbb
jmp
fldl
icebp
pop
xor
repnz
cmovns
jns
mov
jl
xchg
pusha
xchg
in
xor
adc
call
rclb
test
addb
jp
incl
jp
jnp
pop
repnz
mov
nop
sub
xchg
div
adc
fsubl
pop
lahf
inc
or
in
cwtl
aaa
test
or
and
out
pop
add
jle
jmp
shll
jnp
or
shll
push
addb
mov
test
pushf
jns
jp
xchg
pop
addr16
push
push
inc
and
sub
lcall
lret
inc
mov
scas
pop
mov
jge
adc
outsb
and
ljmp
lods
in
cmp
daa
pop
mov
stos
aas
mov
das
and
and
out
xor
or
dec
sub
jg
sub
mov
push
mov
add
ljmp
ja
or
pop
and
loopne
pop
notl
xor
testb
gs
mov
loop
or
push
mov
cld
inc
dec
ja
or
cmpb
addl
lods
test
fcoms
pop
xchg
test
mov
cwtl
mov
dec
inc
push
iret
pop
or
cmpsb
aam
out
daa
and
push
test
fstps
repz
jne
fisubrl
imulb
mov
fadds
pop
out
adc
or
lds
imulb
push
inc
push
test
jo
fwait
pop
jbe
mov
imul
scas
pop
negb
fdivl
inc
std
mov
xchg
ds
push
test
sbbb
inc
ret
jno
add
cli
jmp
push
nop
sti
rol
stos
sub
mov
les
jmp
pop
mov
jb
imul
adc
mov
xor
test
dec
jecxz
call
sti
and
mov
pop
lcall
fldenv
push
sub
dec
add
mov
push
pop
je
sbb
mov
scas
push
inc
xor
pop
xor
jbe
fistps
dec
mov
dec
xchg
jb
rcr
loop
or
and
fistl
jo
lds
dec
pop
jns
aam
push
and
sbb
ret
xor
mov
pop
aas
es
xchg
adc
push
xor
sub
inc
out
add
mov
dec
mov
inc
and
dec
popa
pop
mov
mov
out
cwtl
pushf
jae
inc
mov
mov
xabort
test
loop
pop
sub
or
push
cs
mov
stos
add
into
mov
test
lock
mov
mov
aad
push
pop
mov
dec
mov
mov
pshufw
icebp
add
popl
imul
cmp
pusha
pop
adc
pop
test
les
dec
cmp
pushf
sti
xchg
xchg
fwait
jmp
and
mov
or
mov
nop
loopne
cmp
ljmp
inc
lret
clc
ret
sbb
mov
clc
fsub
mov
mov
cmpsl
or
pop
imul
jecxz
inc
sarb
xchg
dec
enter
xchg
pop
mov
aam
fcomps
sbb
pusha
dec
push
mov
jnp
imul
and
dec
mov
mov
prefetch
inc
xor
adc
mov
mov
repnz
and
enter
mov
sub
in
adc
cld
jecxz
jae
pop
pop
inc
out
and
jmp
movsb
pop
push
testl
fisttpll
and
lahf
repnz
nop
jnp
jmp
jl
mov
and
in
movsb
sub
jl
leave
xchg
inc
jge
mov
and
movsl
jmp
mov
push
ds
add
inc
aam
mov
stc
mov
jg
inc
lret
ss
fisubrl
gs
daa
push
ja
pop
xchg
lret
in
fwait
sub
xchg
rcll
jno
aam
jns
les
subb
lds
lea
sbb
jge
push
shll
inc
mov
pop
xor
xor
mulb
and
cmp
lret
int3
add
dec
cmp
mov
mov
imul
inc
ror
pop
mov
ljmp
rcl
mov
rolb
push
outsb
and
aas
or
mov
repz
fbstp
dec
jl
and
dec
dec
pop
aad
xor
inc
push
jnp,pt
mov
adc
sub
sbb
mull
add
fimuls
mov
ljmp
data16
mov
pop
sbb
jnp
adc
hlt
sub
sub
shlb
or
mov
adc
int
mov
push
add
lret
jp
push
sub
bound
outsl
and
insb
pop
sahf
cmp
or
sbb
test
fnstsw
mov
sub
test
mov
add
pushl
fisubrs
and
pop
repz
mov
jbe
lods
stc
and
ds
push
in
jp
ficoms
sub
mov
sbb
xlat
popf
xor
repnz
or
fstpt
daa
call
lea
das
inc
test
pop
jne
adc
nop
mov
jb
lods
test
sub
cs
aam
into
sub
and
std
xchg
push
pop
mov
cmp
dec
fldt
push
sub
add
dec
in
push
and
out
cld
jg
outsl
flds
aas
dec
into
loope
popa
inc
stos
fidivl
add
cmpsl
rol
add
xor
adc
std
fsubrs
add
and
dec
imul
lcall
fiaddl
pop
stc
sub
dec
inc
je
jbe
add
adcb
cmp
fildll
push
pushf
push
cmpsl
insb
xorb
fimull
mov
or
sahf
aaa
mov
fldt
cld
nop
xchg
dec
dec
xor
push
cld
les
add
jmp
mov
push
arpl
or
call
aaa
pusha
test
popa
icebp
and
mov
xchg
fists
ret
loopne
xor
loop
lahf
repz
test
xlat
cmp
vmovaps
loop
sbb
stos
pop
mov
dec
adc
stc
pop
add
or
mov
xchg
fimull
ret
loopne
repz
and
jns
or
xor
mov
in
pop
cmc
scas
test
pushl
test
unpckhps
mov
loopne
mov
cmp
int3
xchg
push
data16
mov
mov
in
repnz
out
dec
ret
adc
mov
hlt
mov
cmpsl
mov
push
lcall
fidivrl
in
pop
and
aad
outsb
push
jns
inc
aad
hlt
mov
inc
push
and
push
jge
test
test
inc
xor
lea
pop
stos
xor
jo
int3
or
ja
dec
pop
adc
and
jmp
icebp
xlat
inc
dec
aaa
mov
lds
mov
push
dec
pop
orb
std
xchg
bound
and
out
outsb
cld
iret
cs
int3
popa
aad
test
dec
pop
lret
ja
gs
fstps
cwtl
dec
in
sub
rorb
data16
push
and
sbbb
sub
outsl
or
insb
mov
jns
or
or
orb
or
outsb
mov
mov
push
repz
aaa
stc
jl
sub
movb
push
sahf
jecxz
push
xor
wrmsr
inc
jno
cli
pop
scas
nop
sbb
xorl
dec
fistps
pop
sub
out
push
pop
sti
sbb
repz
fwait
adc
mov
xchg
push
pop
out
xor
and
adc
out
xchg
aaa
cmp
popf
mov
insb
xor
mov
cs
out
ffreep
jne
jns
mov
xchg
ljmp
xchg
cltd
sub
stc
xchg
cld
or
lock
push
jl
loope
out
jae
bound
pop
jge
mov
cmp
vpmacswd
jl
or
in
mov
mov
fcos
pop
dec
scas
lds
dec
dec
aaa
jl
pop
jb
mov
push
pop
push
sti
enter
stos
lods
mov
sub
inc
jmp
sti
mov
orl
adc
je
dec
cmp
in
arpl
mov
and
mov
subl
movsl
loopne
inc
xor
in
mov
movsb
pop
inc
test
setl
jns
push
ss
cmp
sub
jmp
icebp
mov
xlat
pop
push
sub
in
loop
std
sbb
jnp
outsl
jmp
xor
mov
nop
mov
sbb
cs
inc
call
je
je
fadd
dec
cmp
or
jb
mov
dec
fs
orl
inc
fcomps
fsubr
add
mov
inc
pusha
sub
aad
mov
sbb
ret
adc
daa
jo
popf
xchg
mov
imul
int
repz
aas
leave
dec
movsb
push
pushf
push
jnp
cmp
stos
sub
dec
or
cmpl
xlat
orb
ja
cmp
xchg
subl
imul
mov
cld
jo
push
inc
icebp
sub
or
lret
jb
dec
mov
xor
lods
and
jae
add
mov
inc
sbb
cli
push
jp
mov
insl
inc
fdivrs
cmc
mov
push
insl
sub
xchg
or
roll
jp
cmpsb
cli
mov
jecxz
adc
mov
jecxz
cltd
mov
addr16
fstps
inc
cwtl
jge
adc
jne
into
pop
jb
loope
sub
out
ret
jns
shll
mov
mov
sahf
repz
xchg
xor
fldl
fucomi
outsl
in
pop
jp
mov
or
call
add
out
sahf
push
adc
pop
mov
rol
mov
pop
or
cmp
out
imul
mov
shl
push
sbb
arpl
pop
cmp
stos
mov
or
push
pushf
mov
push
aad
inc
rolb
or
mov
hlt
adc
xor
jns
enter
lcall
jo
xchg
jb
push
jnp
mov
mull
mov
gs
aam
dec
loope
jmp
ss
mov
fdivrs
fisubrl
int3
inc
sbb
aaa
jecxz
mov
mov
rcrb
mov
arpl
cli
ret
sbb
ret
inc
xchg
xor
xor
iret
dec
ret
and
jle
pop
cwtl
sahf
fiadds
xchg
sbb
jbe
data16
movsl
jp
sub
dec
mov
test
aas
js
xlat
insl
xor
mov
repz
mov
or
cs
mov
xchg
inc
mov
in
and
iret
out
lret
shrb
or
and
call
mov
ficoml
mov
jmp
add
pop
push
rorl
mov
lcall
dec
cmc
je
jecxz
dec
mov
or
js
jae
movb
push
jae
sub
outsb
adc
arpl
sbb
mov
and
jmp
sub
lds
aam
and
aas
sbb
pop
jmp
push
xlat
out
add
add
repz
int3
call
movsl
lcall
jg
ret
pop
sarl
xor
mov
rcll
shr
ss
mov
rcpps
out
mov
pop
xlat
inc
xor
add
dec
sub
mov
loopne
sbb
std
sub
cmp
mulb
mov
add
pop
push
sbb
int
into
inc
cmp
stos
scas
test
mov
and
adc
mov
mov
and
pop
popf
pop
cmpb
outsl
out
ds
repnz
and
or
js
mov
push
adc
shlb
repnz
das
jno
movsb
sbb
out
mov
xchg
pop
dec
popf
les
nop
and
pop
outsb
add
xor
mov
idivb
int
dec
es
xchg
ret
sbb
rolb
dec
sar
clc
outsb
fxch
ss
mov
jp
hlt
sub
lea
push
xor
xlat
push
idivl
daa
subl
lds
clc
outsl
jae
lock
cmp
mov
mov
cmp
mov
jns
add
or
inc
cmp
add
fimull
lret
fildl
nop
jmp
mov
push
xor
aas
in
inc
in
mov
testb
pop
testl
xchg
xchg
in
jne
hlt
test
jl
xor
xchg
or
jno
sub
xchg
jmp
popf
add
rolb
sti
sub
mov
mov
out
and
mov
jo
dec
adc
xchg
cmp
mov
ljmp
loop
hlt
rcr
cmpsb
cld
sti
cmp
loopne
push
cmp
repnz
push
mov
popf
in
repnz
mov
push
outsb
dec
lds
adc
rcl
pop
iret
ret
es
hlt
shr
out
or
fsubl
and
lret
cmp
dec
adc
out
mov
sub
dec
outsl
popa
pop
pop
je
lret
pop
mov
insb
call
mov
jno
insb
shufps
sub
sbb
movsl
xchg
jb
mov
and
imul
arpl
pop
adc
add
add
ret
loop
sbb
mov
jmp
mov
and
mov
subl
call
mov
das
cmp
ja
lea
xorl
xchg
dec
sub
lcall
movsb
inc
xor
mov
mov
inc
add
ljmp
push
mov
and
into
jl
fucomp
mov
xor
mov
adc
xor
and
clc
arpl
or
clc
push
adc
mov
pop
xor
inc
inc
dec
icebp
repz
and
dec
mulb
mov
adc
xchg
cmp
rcll
cmp
xor
sbb
insl
pop
call
xlat
insl
add
fwait
and
and
pop
push
xchg
dec
fcmovbe
out
popf
inc
push
sbb
sbb
xor
mov
mov
cwtl
and
int3
mov
ffree
jg
sarl
xor
dec
dec
inc
or
mov
loop
fs
jp
stos
nop
pop
scas
xor
ret
add
in
and
dec
loope
stos
push
scas
mov
lea
shlb
arpl
je
xor
dec
inc
loop
cmp
int
cmp
push
or
pop
cwtl
cwtl
loopne
insl
fimull
nop
divb
loop
mov
jl
fwait
sub
pop
repz
add
sysexit
lret
add
or
pop
or
push
test
sti
bound
xchg
pop
cmpsl
lahf
sar
rep
fadd
sub
dec
out
stos
pop
aas
jbe
add
lret
cli
add
push
out
mov
test
xor
and
aas
ss
icebp
sbbl
cs
cmp
lcall
add
mov
lods
orl
pop
in
fwait
ds
add
imul
dec
popa
push
imulb
mov
movsb
pop
push
push
inc
faddl
xor
jnp
mov
cmpsl
and
dec
sbb
adc
imull
mov
xchg
test
pop
imul
jb
and
xlat
push
daa
fs
shlb
adc
std
and
lret
mov
sbb
repnz
sbb
dec
incl
cwtl
or
mov
pop
inc
loopne
insb
push
xchg
outsl
inc
cmp
mov
data16
sub
sbbb
inc
push
cmp
xlat
ss
adc
stos
cltd
and
gs
rolb
es
sbb
lret
cmpb
add
outsl
scas
push
mov
enter
or
fsub
dec
dec
jb
iret
pop
bound
cmc
data16
cmpsl
dec
bound
push
mov
or
jns
mov
test
mov
mov
js
mov
xchg
mov
rorl
pop
xchg
cld
jmp
push
repnz
push
mov
add
std
fimuls
and
ret
rclb
push
sbbl
icebp
divb
lret
jae
dec
cmpsb
cmp
mov
fistpl
mov
imul
mov
rolb
jne
xchg
jnp
cmp
pop
ja
cld
or
cmpsb
jbe
rcrl
push
sbb
xor
jno
push
mov
add
inc
pop
inc
xchg
pop
aaa
loopne
fs
cmp
xchg
ds
cs
and
sub
push
xchg
and
jle
rcrl
jge
xchg
gs
out
test
stos
or
cmp
repz
fsubs
mov
push
fcmovnbe
inc
adc
sbb
sti
leave
cld
repnz
adc
cmc
pop
test
dec
sub
fnsave
mov
divl
into
frstor
dec
push
sbb
push
pop
mov
lea
push
inc
cli
mov
dec
rorl
aam
aam
adc
ret
mov
sub
shl
imul
hlt
pop
scas
mov
lock
sar
daa
cs
cmc
inc
add
mov
testb
arpl
mov
mov
cli
lds
mov
fimull
enter
sub
add
frstor
insl
mov
pop
movb
dec
loope
push
shrl
sbb
sbb
pop
pop
cmc
scas
loope
dec
xchg
shrl
xor
add
shll
lods
mov
pop
loop
aas
jo
push
popf
stos
or
insb
or
ja
cltd
pushf
jl
gs
in
fdivs
mov
inc
xchg
mov
loope
or
cmpsb
mov
sub
popf
adc
mov
jno
lahf
popa
mov
repz
push
decl
xlat
test
pusha
and
jge
mov
jecxz
lahf
repz
xor
sbb
add
mov
cmpsl
xchg
call
lret
dec
jge
push
ss
lcall
movsl
jge
xor
sbb
mov
std
inc
stos
mov
mov
mov
and
mov
push
adc
mov
pop
cli
or
pop
adc
mov
pop
shl
adc
sahf
xchg
enter
cmc
pop
pop
imul
ja
cmp
leave
in
push
icebp
xlat
loope
roll
addr16
push
xchg
jbe
lock
jo
inc
mov
mov
mov
repnz
je
scas
rcrb
shll
cmpb
adc
adc
pop
pop
inc
push
jmp
aam
shr
and
lahf
mov
js
and
decb
xlat
mov
push
adc
or
popf
scas
ja
pop
and
std
cwtl
fadds
add
sbb
inc
mov
leave
cmpl
sub
cltd
popaw
dec
loop
add
xchg
or
and
out
mov
jae
out
cli
popa
mov
mov
xchg
outsl
jno
imul
pop
push
xor
negl
sbb
push
mov
pop
fistpll
mov
cmp
rorl
ljmp
mov
aaa
cmp
fs
cltd
fsts
out
fisttpl
jge
sub
mov
push
and
fwait
pop
or
push
jb
mov
aaa
pop
dec
jp
cmp
sbb
ret
and
popa
adc
xor
xor
pushf
xor
mov
sahf
sub
dec
movsl
js
adc
push
push
or
sub
dec
dec
dec
adc
popa
inc
mov
pop
fistpl
jb
mov
jmp
test
out
js
fimuls
pop
jae
xchg
add
daa
push
or
ja
push
hlt
adc
dec
cs
hlt
aad
push
sub
push
paddsw
jle
push
inc
sub
dec
lock
jl
les
mov
and
inc
shr
notl
iret
and
movsl
sahf
fcompl
rcrb
inc
pusha
pop
ss
push
cmp
push
jbe
mov
xor
jnp
fiadds
mov
adc
fmuls
sbb
xchg
ret
sbb
lds
out
cmp
loopne
jbe
adcb
push
jae
test
jo
dec
push
mov
test
loop
test
movsb
inc
cmp
cmp
mov
stos
pop
add
loop
mov
mov
popf
push
pop
jge
sbb
sub
inc
and
sti
xchg
mov
cmp
sub
lea
and
xchg
repz
lds
jle
gs
icebp
int3
push
jmp
mov
push
scas
subb
in
test
ja
enter
or
cmp
mov
mov
sbb
arpl
rcrl
jmp
insl
in
mov
cld
push
pop
cmc
lret
mov
test
sbb
ret
les
push
xorb
out
cs
fnstenv
adc
inc
int
mov
mov
inc
fldpi
sarl
fcom
addr16
pop
iret
sbb
imul
je
mov
sub
pop
out
imul
in
or
insb
fisubrs
inc
pop
outsb
mov
inc
inc
dec
cltd
mov
adc
lods
mov
mov
fsts
mov
xchg
andb
fists
jl
ja
push
jne
or
mov
loop
scas
sub
cltd
xchg
or
iret
aad
sahf
rcr
int3
sti
daa
lods
cli
mov
shl
imul
mov
aam
pushf
push
adc
fisubl
cmpsl
shlb
mov
push
scas
sbb
mov
imul
fs
fs
cld
inc
rolb
xor
pop
sbb
jge
popf
repz
mov
jp
call
daa
popf
or
in
vcvtss2si
mov
add
es
repz
mov
arpl
pop
into
adc
xlat
gs
adc
lret
push
dec
mov
lods
push
cmp
push
cwtd
mov
out
es
lcall
or
ret
movsb
sbb
mov
jo
or
sbb
sub
mov
mov
mov
pop
jo
fdivs
ja
and
gs
push
rcr
mov
enter
cmp
cmpsb
not
movsb
sbb
mov
repnz
jne
dec
and
mov
mov
or
out
int
cmp
out
sbb
jmp
faddl
lahf
sbb
in
ds
pushf
pop
push
inc
sbb
mov
lcall
add
add
repz
and
adc
cmp
imul
jmp
or
sbb
xchg
push
mov
lods
jg
and
xor
cmpsl
jb
sarb
popf
stc
ret
rol
mov
outsl
sbb
test
daa
cltd
daa
icebp
bound
mov
cld
icebp
aad
mov
sbbb
mov
mov
inc
adc
ret
mov
adc
enter
imul
cmpb
inc
ret
shll
push
pop
mov
cltd
stos
dec
mov
or
dec
jp
jbe
ret
shl
aas
imul
out
jp
mov
mov
sbb
mov
gs
stos
push
movsl
push
inc
push
mov
adc
mov
bound
out
fcoml
mov
cwtl
adc
fsts
dec
pusha
out
inc
movsb
lds
and
inc
sub
xor
mov
dec
xchg
popf
daa
fwait
add
insl
jg
leave
ret
inc
mov
jnp
sbb
lahf
out
imul
and
mov
mov
clc
push
sub
pop
sbb
push
sbb
jmp
sbb
or
ss
stos
mov
jns
push
inc
sbb
int3
ret
push
pushf
push
daa
xchg
ljmp
test
add
mov
pop
xor
jo
jo
and
adc
cmpsb
cwtl
imul
or
ss
mov
les
jmp
out
mov
mov
jb
data16
pop
adc
mov
into
lea
cmp
xchg
addl
fsubs
mov
stos
jne
push
xchg
ret
inc
push
stos
mov
push
dec
add
aaa
inc
mov
add
daa
cmp
push
sbb
lods
cld
fwait
pop
mov
cmp
mov
adc
je
push
imul
flds
dec
repz
ljmp
push
out
test
cli
push
cmp
pop
sub
lock
inc
pop
inc
mov
mov
mov
sti
dec
pop
mov
jns
dec
pop
push
dec
rcrl
stos
addr16
shufps
scas
dec
ret
dec
jnp
sbb
cmp
test
ret
add
jb
adc
sbb
xchg
loopne
adc
gs
mov
hlt
mov
sub
aas
jbe
adc
movsl
push
popa
je
aaa
imul
aas
fcomi
inc
les
and
addb
popa
dec
in
and
xlat
jle
mov
or
ss
xchg
clc
xchg
ljmp
mov
mov
aam
fnstenv
lea
push
fisttpll
push
and
jne
push
and
sub
pop
jmp
add
fs
jnp
aas
push
dec
push
xchg
lret
or
cltd
mov
sbb
cmc
xchg
dec
dec
ss
aad
mov
dec
jno
mov
fisttpl
push
mov
sub
pop
sar
es
mov
jno
pop
xchg
mul
push
xor
icebp
and
mov
jp
fdivs
testl
out
mov
inc
outsl
mov
jg
sbb
daa
outsb
and
andnps
cmp
sbb
xchg
cmpsb
cmp
adc
out
mov
adc
push
out
mov
adc
clc
inc
mov
push
inc
pop
rcl
clc
aad
mov
movaps
lret
in
leave
aaa
sbb
ret
mov
mov
inc
repnz
pop
popa
scas
ret
cwtl
out
mov
movsl
xchg
cs
shll
mov
mov
jns
xchg
lcall
ljmp
add
cli
cmp
cmp
jecxz
mov
mov
mov
stc
lods
mov
cmp
adc
aas
and
xor
xchg
or
fadds
loopne
ljmp
and
test
inc
js
je
int3
xchg
sub
call
mov
mov
faddl
into
sar
scas
mov
mov
mov
xchg
cmpl
dec
add
mov
sbbl
daa
shr
sub
clc
movsb
ret
enter
sti
mov
mov
cltd
movsb
ja
cwtl
aam
inc
jmp
mov
jp
or
sbb
js
mov
cwtl
mov
push
push
xor
sarl
pop
adcb
cwtl
movsl
push
jmp
or
test
imul
cmp
ljmp
pop
cmp
in
xchg
je
out
repz
sahf
inc
bound
sbb
js
or
cmp
or
scas
cmp
mov
mov
jae
imul
add
xchg
imul
out
cmc
into
xor
test
dec
lods
pop
mov
mov
add
inc
int
push
push
nop
mov
ss
jno
sub
test
icebp
mov
call
lods
jg
ficompl
fistpl
cld
adc
pusha
sub
fdivrl
outsb
in
das
out
mov
push
shr
std
or
dec
scas
or
mov
jmp
mov
xchg
adc
aad
push
mov
ds
cmp
insl
jne
push
jg
xor
inc
inc
adc
ljmp
jnp
push
push
hlt
add
fbld
xchg
cs
pop
scas
les
fists
iret
loopw
outsl
inc
dec
js
or
xor
enter
sbb
cs
or
ljmp
sarb
xor
pushf
outsl
out
rclb
cli
daa
lret
outsb
adc
pop
loope
ljmp
xchg
add
mov
sti
fildl
sbb
cmc
adc
jge
das
lahf
dec
enter
xor
shll
push
mov
in
xor
sub
ss
movsb
cmpsb
out
data16
push
jns
out
cmp
and
jns
mov
bound
mov
mov
test
push
orl
add
jge
push
and
sbb
outsb
dec
pop
mov
jle
adcb
imul
pusha
sub
xor
mov
popf
push
adc
and
pop
inc
cmp
cmp
inc
scas
lods
and
add
xchg
ss
jo
jno
out
cmp
popf
pop
add
ret
fstpt
mov
outsb
pop
in
dec
popf
andb
rcll
mov
aas
test
push
aas
hlt
stc
pusha
hlt
pshufw
dec
push
push
adc
pop
lods
jecxz
fists
or
jnp
mov
xchg
mov
cmp
int3
adc
clc
jns
pop
outsl
inc
push
dec
iret
jo
rol
dec
and
pushf
std
lret
xchg
lods
lods
or
sti
or
outsb
lahf
mov
in
push
or
adc
push
dec
pop
xor
or
inc
add
adc
cwtl
mov
fiadds
test
and
repnz
fwait
sub
es
sub
and
mov
loop
call
mov
pop
mov
and
jne
fwait
or
xchg
mov
push
das
cwtl
adc
int3
add
scas
and
and
jmp
pop
and
mov
dec
js
cmp
sbb
rorb
sbb
cmp
xchg
jge
sbb
or
mov
repnz
fucomp
jo
jne
mov
bound
jl
cs
add
inc
inc
adc
push
movsl
cwtl
mov
jno
pop
into
adc
out
mov
xor
pop
aad
mov
nop
dec
and
mov
rorl
push
test
data16
lea
inc
cwtl
ds
ljmp
dec
hlt
fsubrp
sub
push
rclb
ss
jnp
out
mov
inc
in
lock
decb
gs
push
cmpsb
dec
xchg
cmp
jae
inc
aaa
pop
sahf
push
das
sbb
es
les
outsl
push
je
icebp
fdivs
xor
and
loopne
inc
mov
push
mov
les
mov
cmp
movsl
jns
lret
mov
cmc
loop
cmc
sub
faddp
scas
push
imul
and
mov
lahf
cmp
jl
xchg
pop
in
and
inc
cmp
cmp
ret
lds
adc
xchg
push
icebp
out
imul
mov
mov
out
sbb
push
cs
movsb
sbb
fisttps
stos
inc
pop
or
inc
stos
and
mov
jmp
fisttps
dec
test
cmp
jmp
mov
aas
inc
or
cli
dec
xchg
jge
cmp
addb
das
cmp
aaa
sbb
mov
negb
cmp
aad
mov
je
sub
pop
adc
mov
mov
arpl
jnp
xchg
dec
mov
lea
loope
and
fsubrs
fneni(8087
out
roll
cmp
push
in
aam
sbb
inc
test
cmp
sbb
fidivs
mov
sub
sarb
cmp
add
mov
sub
imul
jae
or
xor
push
adc
or
sub
mov
adc
enter
scas
test
icebp
or
pop
fidivl
cmp
pop
mov
mov
test
and
inc
and
push
or
mov
push
adc
pushf
mov
mov
idivb
xchg
cmp
jb
adc
dec
xchg
jp
or
push
and
cmpb
ds
cltd
mov
push
push
in
pusha
mov
gs
out
jns
dec
jno
movsb
test
int
call
lret
adc
test
je
xchg
daa
aaa
mov
sub
cmp
jmp
sub
mov
or
lods
mov
push
cmpsb
xchg
bound
cmpsl
sub
ret
outsb
mov
sub
inc
pop
js
aad
or
xorb
jae
cmp
mov
leave
dec
inc
iret
das
xlat
incb
loope
int
fsubrl
mov
cli
or
mov
out
or
test
mov
push
insl
int3
xchg
mov
insb
roll
inc
out
sbb
rclb
jae
loopne
lds
jmp
mov
mov
or
popf
add
mov
lcall
jns
movb
mov
imul
sub
cli
cmp
cmpsb
orb
add
lods
nop
push
pop
mov
mov
xchg
loop
das
or
pop
je
imul
jbe
fdivrp
jmp
lahf
or
cwtl
dec
ljmp
orl
xchg
cmpsl
xchg
xchg
cli
sub
xchg
push
adcl
in
aas
sub
outsl
ret
out
repz
out
xchg
jno
sbb
mov
mov
lock
push
in
das
jle
dec
int3
push
clc
fisubrl
sahf
inc
mov
dec
jge
aam
jecxz
mov
imul
or
inc
in
and
jbe
stc
add
xchg
repz
movsb
inc
dec
adcl
push
inc
or
imul
cltd
pop
mov
or
or
xchg
sbb
jne
ja
arpl
in
sbb
fs
icebp
addr16
aas
aaa
fsubr
das
adc
ret
fwait
sbb
stos
in
or
add
cmp
aad
push
sbb
cmp
jo
ds
pusha
xor
in
leave
lret
lods
lret
cmp
push
inc
push
mov
ljmp
xchg
in
xchg
into
mov
and
into
mov
aas
xchg
es
xchg
cmp
into
mov
filds
sbb
pop
out
lock
fldl
cmp
icebp
xchg
fwait
dec
sbb
lock
jns
xchg
fstpl
adc
in
adc
adc
xorl
dec
xor
pop
push
adc
test
fsub
pop
add
fs
out
in
fs
idiv
das
add
into
pop
fimull
push
movsl
ja
shlb
jne
pop
notl
mov
and
leave
inc
and
cmpsl
std
aas
or
cmp
out
sub
or
test
jb
or
xor
jnp
mov
push
hlt
mov
insl
dec
xlat
xlat
adc
mov
push
es
cmc
jmp
dec
subl
or
sbb
out
xlat
push
jnp
js
add
push
xor
jmp
outsb
sbb
push
mov
adc
lods
lcall
pop
insl
sbb
enter
orl
fcmovnb
mov
in
pop
dec
or
cmp
jne
mov
subb
cmp
sahf
jecxz
into
inc
icebp
test
ja
pop
mov
mov
mov
ljmp
in
push
repz
pop
gs
lods
dec
subb
push
mov
or
aas
call
push
test
mov
dec
mov
xchg
jge
cmovbe
ja
or
les
mov
dec
jns
mov
add
or
pop
mov
iret
inc
cmp
sbb
lahf
dec
nop
xchg
outsb
cs
int3
js
cli
lods
call
stos
push
lcall
mov
jbe
repz
cli
out
and
dec
idivl
add
jle
add
mov
aas
mov
add
xchg
ljmp
cmpsb
pop
add
lea
in
sbb
mov
mov
pop
lods
int
cmpsb
out
xchg
es
or
jne
fstp
test
push
and
outsl
jle
gs
in
inc
stos
clc
xchg
out
or
xchg
dec
add
jg
push
lahf
and
inc
pop
cli
sub
dec
ljmp
add
or
and
xchg
xor
rorb
ret
fwait
stc
fmuls
aad
aaa
jae
out
push
fs
jno
mov
ja
mov
pop
sub
mov
cmp
sbb
push
adc
push
mov
cmp
or
inc
adc
mov
pop
push
pop
pop
push
out
scas
push
jbe
add
and
sub
pop
insl
push
enter
xchg
pop
addr16
and
ds
push
adc
pop
and
add
jg
loop
push
or
lahf
jmp
add
dec
test
and
inc
xor
fimuls
xor
rorb
nop
aam
cld
rcr
sbb
or
dec
dec
enter
cmp
xor
aas
fwait
pop
bound
mov
loope
subb
push
pop
scas
xor
sub
mov
adc
jmp
out
jmp
sbb
push
mov
ljmp
leave
xor
pop
sbb
loop
stos
es
push
gs
or
cmp
fistpl
out
mov
mov
push
mov
xchg
cmp
es
fistpl
fcomps
add
mov
mov
test
mov
das
stc
pop
add
sub
sub
pop
ret
jbe
mov
cmp
imul
mov
xchg
push
push
adc
scas
loop
sub
pop
lods
mov
loop
pop
out
push
mov
mov
enter
cmp
sbb
test
xchg
fldcw
in
sbb
mov
push
pop
and
ss
rcll
push
mov
lahf
outsb
fwait
out
push
loope
jb
ret
sbb
or
lock
cli
fsts
mov
fucom
scas
hlt
mov
and
es
jb
inc
mov
mov
or
popa
fstl
jae
outsl
cmp
or
shll
jge
test
push
sub
xchg
stos
and
lahf
cs
cmpsb
popf
xchg
pusha
jne
mov
inc
jo
add
popa
push
push
dec
je
out
mov
mov
enter
stos
xchg
in
stos
mov
jbe,pt
outsl
sub
sub
mov
xchg
jb
push
jne
xchg
rorl
stos
mov
add
jl
into
pop
call
mov
inc
divl
mov
into
ret
fidivl
lcall
adc
lcall
jle
sarl
cwtl
mov
out
mov
and
adc
rcrb
stos
shl
inc
xor
pusha
fnstcw
int3
mov
adc
sti
and
push
imul
inc
fldenv
sbbl
add
es
push
test
testl
arpl
faddl
adc
or
bnd
sar
cmp
and
jp
mov
lods
jg
enter
pop
mov
push
je
pushf
scas
sbb
inc
lods
loope
mov
xor
inc
lods
roll
xchg
xor
push
sub
idivl
and
xchg
in
pushf
mov
fwait
fs
push
mov
add
stc
cwtl
push
inc
jne
sahf
push
mov
sub
in
iret
push
sbbl
sbb
or
mov
add
sbb
add
lret
xor
and
dec
mov
dec
ret
pop
mov
mov
aaa
orl
jno
add
mov
push
leave
dec
cmc
ljmp
fiaddl
cwtl
rcr
xor
dec
popa
jbe
push
imul
sub
mov
nop
adc
outsl
mov
adc
jmp
jae
and
xor
or
inc
adc
aad
stc
cld
and
pop
fstp
mov
push
iret
ficoms
mov
inc
jp
cmpsb
mov
adc
inc
movb
cmp
inc
in
inc
cmpsb
pushf
inc
jge,pn
out
pop
push
in
sub
jne
dec
popf
xlat
loope
fstpt
dec
mov
ficoml
dec
mov
in
mov
sbb
cmp
push
dec
popa
and
or
es
mov
scas
and
cmpsb
push
dec
pop
dec
lea
rclb
lds
or
mov
xchg
loope
dec
pusha
mov
jg
push
iret
imul
ret
ljmp
arpl
mov
cltd
cs
or
jnp
call
adc
xor
xor
insb
jmp
cltd
xchg
loopne
jge
push
add
ja
popf
clc
and
xorb
sbb
sbb
cs
arpl
imulb
sub
cmp
or
cmpsb
mov
loopne
mov
xchg
adc
popa
jge
adc
das
dec
xchg
jno
and
push
ljmp
lods
pop
popf
and
pop
int3
sarb
mov
xor
aaa
adc
insb
or
pop
je
int
test
int
pushf
pop
in
adcb
sbb
jg
xchg
fdiv
or
add
mov
popf
mov
inc
in
testl
loope
jp
jae
je
jns
mov
rcrb
cmp
push
mov
addb
fptan
sbb
xor
adc
sub
mov
out
leave
add
jp
nop
enter
rcrb
loop
inc
or
into
xchg
add
jecxz,pt
les
inc
sbb
pop
popa
xor
aam
ror
push
fnstsw
rol
xchg
orl
lea
mov
cli
shrb
roll
jp
jne
adc
mov
push
movsb
push
xchg
pop
push
push
shrb
scas
xchg
aas
inc
mov
jp
dec
scas
mov
and
push
lds
mov
out
insb
rol
neg
rorb
loope
sbb
sbb
inc
add
fistl
sbb
stos
enter
ss
scas
pop
push
xchg
lea
in
pop
test
das
adc
mov
xchg
inc
jl
push
test
sub
dec
or
clc
jle
mov
xchg
and
imul
jge
sub
mov
push
movsb
rcl
ljmp
imul
adc
or
cwtl
cmpsb
pop
fs
inc
shr
and
or
out
cmp
data16
daa
mov
mov
sbbl
ret
dec
jecxz
mov
dec
je
insb
in
imul
inc
in
jb
mov
test
sahf
jo
mov
mov
repz
lds
subb
cmp
pop
mov
fsts
mov
adc
outsl
repz
or
fbld
data16
cmp
jp
sbb
xchg
mov
mov
push
sbb
fldl
out
sub
test
adc
rol
cmp
daa
cmp
dec
outsl
cltd
addr16
mov
push
filds
pop
push
push
into
loope
enter
ss
pushl
xor
repnz
call
sbb
mov
aad
insl
pop
stos
cmp
mov
and
adcb
mov
out
test
pop
jns
ljmp
mov
aad
enter
aas
cmp
push
xchg
jmp
mov
movsb
in
dec
mov
xor
push
mov
das
nop
sti
enter
xchg
dec
ljmp
mov
fbstp
dec
pop
sbb
jno
jno
gs
cmp
int
jns
dec
notl
or
sbb
adcb
test
sbbb
xchg
pop
ret
shll
idivb
xchg
lcall
mov
xchg
inc
aad
outsl
pop
out
into
xchg
out
pop
testb
jbe
jns
inc
inc
xchg
in
inc
jo
pop
movsb
call
enter
out
clc
je
cmp
mov
push
mov
pop
cmp
shl
jge
mov
push
out
jno
mov
jne
push
mov
push
jl
jmp
mov
and
push
jmp
hlt
add
repz
out
dec
cmpsb
push
stos
xor
sbb
dec
fsubr
popf
les
pop
dec
mov
in
push
rcll
push
insb
arpl
int
push
insl
add
pop
sbb
mov
in
movb
push
fstl
adc
gs
mov
sarl
sub
sahf
les
mov
fisubrs
lahf
xchg
test
mov
cmp
aad
mov
pop
xor
inc
sbb
hlt
roll
fs
mov
fcmovu
outsl
ja
outsl
int
mov
int3
mov
mov
and
push
inc
pop
clc
leave
add
inc
sub
sbbl
pop
sahf
ret
js
xor
ret
inc
add
ds
repnz
pop
js
and
jle
jle
addr16
out
rcrb
cmp
pop
insb
pop
aad
pop
jecxz
mov
insl
lahf
filds
in
lret
push
es
pusha
movsl
adcb
pop
pop
dec
jbe
scas
ds
imul
aaa
push
cmp
mov
push
add
out
and
jmp
add
lahf
mov
xlat
je
push
mov
dec
nop
out
adc
cli
mov
test
shll
jo
mov
test
mov
mov
dec
add
xor
sbb
cmp
dec
adc
scas
jle
inc
mov
jecxz
sahf
inc
pop
dec
jmp
add
mov
loop
into
pop
loope
adc
lods
jmp
jl
mov
fstps
jbe
mov
sbb
jns
testl
icebp
sbb
pop
outsb
and
or
dec
jp
pop
daa
or
pop
out
mov
sbb
out
inc
aam
shrb
sarl
pop
mov
lock
call
pop
insl
xor
pop
test
sbb
aas
fs
shrl
inc
or
in
sarl
insl
cmp
les
fwait
pushf
ret
mov
insb
dec
scas
mov
loope
mov
jge
subb
xor
addr16
xchg
insl
sbb
fsubs
inc
adc
into
jno
sbb
cwtl
pusha
mov
ss
adc
lock
or
jge
call
mov
shl
int3
leave
push
inc
xchg
arpl
xchg
notb
mov
stos
rol
mov
fcmovne
imul
push
clc
mov
mov
dec
in
xor
mov
mov
insb
inc
in
mov
fadds
movsb
mov
sti
ret
std
adc
or
add
and
mov
outsl
add
inc
int3
ja
popf
mov
jno
popf
enter
leave
lods
dec
dec
stc
pop
mov
add
fisubl
insl
fldt
fwait
cs
fsave
dec
lahf
and
cmpb
nop
popf
jecxz
mov
dec
mov
jge
inc
int
jb
es
mov
xbegin
adc
sahf
iret
inc
fimuls
movsl
pop
pop
inc
dec
dec
and
mov
pop
dec
out
scas
int3
test
dec
push
mov
ljmp
inc
icebp
jne
mov
cld
xor
adc
mov
ret
add
xchg
gs
test
stc
jecxz
jb
sbb
das
mov
fiadds
xchg
ja
push
sbb
jl
xchg
mov
adc
movsl
mov
test
lahf
or
sub
out
cmp
lcall
cmpsb
mov
dec
jg
inc
pop
mov
fdivrl
and
mov
int3
int
in
xchg
sbb
pushf
hlt
aaa
out
popa
pop
cmpsl
jg
cld
lret
cmp
xor
adcb
test
in
push
sub
dec
jl
cmp
mov
imul
sbb
jge
push
adc
sub
add
pop
scas
dec
or
icebp
ss
outsl
xchg
jns
push
inc
dec
sbb
ret
mov
push
filds
pop
push
notl
mov
pop
mov
xchg
add
mov
sub
mov
cmpsb
xor
and
jns
jbe
ficompl
cmp
insb
les
pop
dec
movsb
orb
js
and
jp
sub
mov
cwtl
or
push
adc
imul
xchg
ds
cmp
xchg
lret
xchg
lret
adc
aas
daa
sub
xchg
xchg
rep
or
inc
aaa
fidivs
mov
xchg
mov
in
sti
fnstcw
dec
sahf
cmp
fld
sbb
mov
and
push
in
cld
adc
dec
test
adc
mov
jne
inc
mov
or
pusha
sub
pop
in
bound
sbb
sbbb
out
add
and
ret
adc
cltd
jl
push
xchg
mov
mov
enter
lret
dec
and
mov
shlb
mov
adc
xchg
addb
jb
or
lea
push
bound
ficomps
sti
lret
inc
scas
mov
je
outsl
mov
jae
fsubrl
xchg
add
push
pop
adc
jmp
pop
mov
inc
addr16
data16
ret
mov
lea
jl
push
bound
scas
xchg
rolb
cmp
out
icebp
fldt
fldcw
dec
cmp
pop
dec
js
or
cmc
mov
fldcw
pushf
sub
aas
mov
mov
pop
sbb
push
in
cmc
nop
out
push
mov
je
cmp
out
addr16
mov
push
sbb
add
or
mov
clc
cmpsb
imul
sub
pop
notl
adc
ret
ret
jno
int
jmp
xchg
jns
fwait
sub
dec
popf
add
repz
add
bnd
mov
and
pop
mov
jbe
adc
mov
lcall
push
stos
test
jo
pop
das
subl
mov
jno
movsl
cmpsb
mov
lret
out
call
call
dec
sbb
mov
enter
or
xor
push
stos
pushf
cli
push
fstl
test
sub
test
fabs
loop
xchg
cmc
cli
cltd
xchg
filds
aam
in
in
xor
sti
xor
cli
and
mov
cs
adc
inc
pop
mov
les
leave
loopne
and
add
fildll
pop
xor
imulb
test
add
push
movsl
imul
rcrb
inc
out
sbb
push
sub
mov
fdivl
out
mov
and
mov
into
ss
stos
addr16
rorl
inc
and
push
mov
or
and
pushf
mov
outsl
notb
and
pop
xchg
mov
popf
xlat
fwait
xor
or
cmp
sub
and
add
mov
push
pushf
jns
jb
adc
mov
movsl
cmp
std
push
mull
imul
movsl
mov
mov
test
jp
push
push
pop
jl
paddusb
adc
enter
mov
cld
loopne
dec
jno
loope
dec
arpl
dec
movsl
cwtl
sbb
jle
pop
lret
mov
push
dec
dec
xor
mov
movsb
fimuls
aam
aas
lock
int
mov
lea
pop
shlb
enter
jno
sub
fdivl
mov
mov
ret
fadds
les
add
int
jns
pop
mov
lds
movsb
call
fstpl
xor
inc
imul
push
loope
fldl
ja
sbb
mov
sarl
push
add
mov
repnz
mov
imul
sti
orb
or
jg
fcomp
loopne
add
jp
push
mov
xor
mov
xor
fnstenv
pop
lret
jo
dec
adc
pop
daa
pusha
inc
movsb
gs
les
mov
in
mov
xchg
xor
mov
hlt
xor
inc
mov
dec
js
bndstx
lods
mov
cmp
dec
repnz
ds
fnstenv
jecxz
adc
jns
testl
imul
icebp
push
pop
aaa
pop
ret
fwait
outsl
icebp
cmpsb
rcll
xor
push
insl
out
test
jmp
ljmp
loopne
push
repnz
pushf
out
dec
mov
jmp
psubq
or
push
or
mov
mov
xor
or
xor
or
nop
dec
cmpl
popf
push
lret
push
mov
lods
inc
movsb
add
iret
out
or
fidivl
pop
push
mov
inc
or
jge
imul
cli
lock
dec
add
out
data16
sti
xchg
fcmovnb
in
in
fs
xlat
sahf
xor
jae
dec
mov
sti
imul
pop
hlt
adc
adc
repz
dec
push
push
sub
stos
aad
adc
sub
loope
scas
jae
xor
imul
daa
dec
out
mov
sub
fdivs
movsb
rcrl
ja
lods
and
mov
imulb
cmpb
push
shr
fldt
mov
cmp
cmp
stc
je
inc
cmp
aam
ljmp
test
int
adc
aad
sbb
mov
in
cmc
sahf
test
cli
adc
out
xor
and
enter
sarl
mov
jbe
pop
fistps
and
cmpsb
pushf
out
lret
adc
inc
fsub
sti
imul
shl
and
dec
dec
jae
add
rcrl
pop
pop
into
push
jmp
dec
push
lods
xor
cmp
out
cmp
mov
mov
in
cmp
mov
dec
mov
xchg
ret
mov
or
pop
les
jbe
inc
ret
js
aam
pusha
ss
out
push
mov
mov
sub
dec
movsl
adcb
inc
or
sbb
arpl
movsb
lods
jge
add
jns
outsb
jl
jno
push
gs
pusha
gs
cmp
fwait
push
jle
sbb
enter
lret
cmp
pushl
adc
mov
ja
jns
ds
xchg
mov
or
jne
pop
and
sub
psubusw
cmp
xchg
hlt
sub
push
ret
and
jne
dec
adc
adc
pop
push
sbb
push
js
pop
xchg
jge
into
inc
mov
rorb
adc
movsb
test
adc
sarb
mov
mov
pusha
cltd
fnsave
xchg
dec
lcall
je
push
fwait
daa
lret
pop
mov
stc
es
push
cmp
fcmovnu
mov
push
fcompl
push
movlps
divb
fisttps
or
movsb
add
ds
cmp
push
mov
stc
leave
out
stc
aas
insb
movsl
shlb
in
dec
inc
push
cltd
stos
mov
dec
xor
nop
mov
sub
ljmp
enter
cmp
mov
das
jmp
sub
xor
imull
cmpsb
xchg
lock
jl
mov
xchg
es
adc
dec
pushf
add
mov
dec
mov
and
pop
and
shll
xchg
lods
jns
iret
jne
add
or
in
and
nop
rorb
mov
inc
pop
sti
cltd
inc
inc
or
rcrb
ret
xor
dec
mov
das
and
sub
xor
inc
push
addb
nop
dec
test
push
pop
cmp
jno
pcmpeqw
repnz
frstor
or
pop
pop
inc
mov
dec
scas
cmp
lcall
jbe
cltd
jo
dec
ja
xlat
jne
cmp
cmp
cmpsb
pop
sub
ss
insl
in
jo
dec
pop
in
es
sarb
enter
xchg
mov
sahf
sub
mov
pop
psubw
aad
push
pop
cmp
insb
movsl
shll
add
add
jb
int3
pop
je
mov
fs
sub
out
in
popa
jno
lahf
test
jbe
jge
lea
cmpsl
ret
lods
es
fdivs
mov
cmp
pop
rclb
xor
lret
or
shrl
pop
push
pop
pop
hlt
test
cmp
xchg
sbb
pop
jb
pushf
xor
push
mov
sahf
inc
or
pop
adcb
mov
adc
pop
xchg
jp
mov
xchg
rorb
fstpl
pop
out
rorb
mov
mov
adc
and
test
leave
adc
mov
int3
filds
rcll
adc
push
int
cwtl
xor
jbe
fidivl
in
mov
rolb
out
adc
jp
jecxz
aas
aam
divps
sti
xchg
jecxz
sub
sub
sub
data16
mov
data16
add
pusha
pop
scas
rolb
jmp
sub
std
call
dec
outsl
adc
sub
in
jne
pop
sbb
fidivrs
in
jmp
push
mov
fsubl
adc
sti
ret
popa
imul
push
inc
popl
sub
pop
mov
push
int
push
push
ss
xor
mov
xchg
hlt
push
pop
mov
out
jecxz
in
cmp
fldpi
jae
mov
scas
or
pop
mov
hlt
stc
stos
jns
dec
xor
dec
gs
jmp
jns
sti
movsl
mov
jg
dec
xchg
pop
out
push
testl
cmpsl
mov
fidivs
mov
jmp
push
or
mov
out
cli
mov
mov
imul
xchg
jp
ljmp
aaa
aam
cltd
jle
aam
daa
je
xchg
or
push
jg
mov
rcl
cmp
idivb
mov
ret
xorl
hlt
cmc
push
pusha
inc
pop
xor
pop
leave
in
lret
roll
jns
xor
movsl
sub
push
xor
shrb
pop
enter
pushf
nop
repz
outsl
and
nop
stos
adc
mov
inc
inc
dec
fists
mov
add
xchg
adc
lret
dec
mov
es
sub
int
cmpsl
aas
jns
test
cmp
bound
addr16
xchg
je
mov
xchg
aaa
addr16
clc
adc
xchg
ja
mov
bnd
mov
push
jg
ss
adc
sub
and
hlt
adc
js
push
add
mov
mov
pushf
les
push
xchg
lock
pop
in
xchg
shrb
fndisi(8087
aam
xor
adc
scas
mov
movsb
movsl
push
call
cmp
add
imul
fidivrl
aam
out
dec
adc
notb
xor
push
push
mov
inc
sbb
mov
cmp
jae
pop
sti
mov
push
pop
mov
sbb
pop
push
dec
fisubl
and
js
cwtl
cwtl
in
push
adc
pop
push
mov
cltd
aam
shlb
mov
outsl
imul
push
cli
mov
or
or
xchg
dec
mov
cwtl
mov
fnsave
es
xchg
push
and
jle
mov
jne
mov
mov
and
test
int3
or
xor
cli
outsb
sahf
adc
ljmp
jg
or
push
cmpsl
adc
iret
dec
mov
jb
stos
xchg
mov
cmpsl
daa
sub
adc
in
repnz
dec
sti
cmp
jl
mov
test
out
mov
inc
jg
mov
sbb
mov
ret
ret
int
iret
sub
movsl
insl
push
int
cmp
test
mov
push
pushf
roll
sbb
pusha
add
and
inc
mov
adc
xchg
dec
pushf
mov
rol
stos
xor
pop
cmc
mov
or
add
push
popf
into
lods
sub
sbb
pop
mov
mov
jle
and
push
int3
fwait
cmp
sbbl
lock
inc
addr16
jmp
mov
fcomp
lods
jno
sub
arpl
mov
xor
push
clc
rclb
cmpsl
sub
mov
lods
les
repnz
mov
xorb
out
enter
lock
ror
add
test
adc
inc
clc
fcmovnu
pushf
inc
ss
mov
mov
and
mov
sbb
in
push
sahf
cmp
std
jnp
mov
loop
jmp
ret
pop
add
push
je
mov
dec
adc
movsl
cmp
dec
out
sub
mov
clc
loope
nop
nop
int
xor
lret
fidivl
rorl
imul
dec
jle
test
mov
mov
movsl
sub
js
imul
filds
insb
push
add
cmc
jl
es
loopne
in
js
push
out
mov
xchg
sub
add
aas
lcall
sti
out
push
nop
add
xchg
cmp
stc
pop
cmp
data16
lods
movsl
fidivl
aas
push
jnp
add
and
mov
xor
add
stos
inc
mov
test
ss
cli
pop
push
inc
movsl
mov
outsl
lds
aas
cmp
or
pop
mov
push
lods
add
sbb
stos
add
cmpb
jbe
xchg
mov
add
add
or
xor
cmpl
mov
pop
pusha
into
fisubrl
inc
sbb
scas
sub
pusha
or
int3
add
je
movsb
cltd
idiv
jno
cvtpi2ps
je
mov
mov
shlb
xor
icebp
pop
addb
mov
add
sbb
mov
clc
out
js
mov
xchg
mov
and
cmp
leave
sbb
adc
pop
inc
mov
xor
fdivr
add
xchg
sarl
rolb
or
ret
ss
add
jmp
push
sarb
xchg
ret
jle
insl
inc
pop
xor
fiadds
or
jmp
lahf
xchg
pop
loope
jbe
dec
test
inc
pop
add
jecxz
xchg
add
mov
inc
lcall
lds
push
pop
into
and
in
rorl
lahf
movsl
cld
or
and
cmp
insb
arpl
jb
and
sbb
fstl
xor
icebp
mov
jmp
or
dec
shld
rol
outsb
and
push
imulb
xchg
pop
mov
repz
sub
cmp
adc
sarb
and
lret
in
pop
lahf
pushaw
clc
movsl
rol
xchg
mov
sahf
xlat
in
push
sbb
fadds
mov
mov
inc
test
in
jmp
bswap
mov
cmp
fdivl
or
je
cmp
add
adc
out
adc
sub
xchg
jg
ret
aad
pop
sbb
pop
inc
jns
daa
andl
lcall
popf
jl
or
mov
pop
dec
in
mov
sti
daa
jmp
and
lret
xchg
arpl
mov
bound
xchg
pop
orl
xor
adc
adc
shrl
lahf
repnz
loope
inc
cwtl
daa
jl
xorb
inc
pop
xchg
test
pusha
xchg
sub
jne
lcall
xchg
push
lods
ret
sarb
cmp
cmpsl
xchg
adc
mov
rol
cmc
xor
in
ud2
leave
cmp
movsl
adcb
insl
pop
xor
dec
sti
jns
iretw
in
ficoml
dec
ret
lods
mov
daa
jge
nop
pop
jmp
pop
mov
ficoms
pop
mov
lret
xchg
mov
add
dec
mov
and
fisttpl
mov
loopne
es
test
clc
lods
pushf
inc
dec
pop
mov
sub
mov
mov
xorb
xchg
filds
fistps
ficoml
aas
pop
inc
leave
dec
add
pop
js
in
sub
sub
xor
add
dec
fisttpll
enter
jno
iret
pop
sti
mov
pop
mov
sub
cltd
add
xlat
cmc
inc
jne
loop
loop
popl
sarl
jb
enter
aam
popf
hlt
out
nop
cs
inc
xor
cmp
jns
mov
inc
jae
lcall
sub
add
hlt
jg
pop
push
mov
enter
insb
add
sub
push
lcall
cli
mov
dec
or
std
xchg
loope
mov
xabort
rol
adc
in
jg
dec
cmp
inc
call
push
jmp
gs
jbe
fwait
in
jl
sbb
push
inc
sbb
cwtl
mov
movsl
cld
add
je
dec
ret
sbb
arpl
pop
inc
xchg
dec
sarl
sbb
ljmp
jbe
in
jmp
inc
cmp
scas
pop
ss
inc
xchg
push
xor
data16
adc
inc
dec
mov
pop
pusha
mov
js
xchg
imul
imul
ret
movsb
call
xor
bound
mov
cmc
ret
orb
xor
or
jne
xchg
in
jle
sbb
sbb
mov
mov
and
mov
insl
mov
mov
push
pop
in
fcmovnb
insb
ja
add
inc
push
or
mov
addb
insl
lods
or
imul
notl
jl
or
and
fbstp
dec
aad
sbb
mov
sub
shrb
mov
sub
lret
out
jp
xchg
les
and
stc
subb
cmp
adc
std
pop
jae
movsl
inc
flds
dec
dec
in
sbb
das
cwtl
movsl
push
stos
mov
popf
movsb
dec
nop
stc
xchg
jp
fsubrs
popa
in
cmpsb
or
sarb
push
repnz
xchg
add
lods
jge
adc
out
push
in
in
stos
mov
jo
mov
cltd
fs
adc
stc
call
mov
dec
sbb
lret
mov
inc
pop
cmp
mov
sub
pusha
push
adc
int
push
xor
dec
aaa
fisubs
mov
add
das
xor
cs
lock
dec
and
mov
fdiv
pop
loope
jecxz
sarb
movsl
jge
mov
push
mov
xchg
push
push
mov
loop
or
pop
shll
out
xor
sub
fwait
mov
shll
ljmp
stos
mov
shll
dec
je
and
jne
push
add
cmp
fisttpl
shrl
mov
mov
scas
loopne
rol
cmp
rorl
hlt
xlat
lret
pushf
loopne
in
les
mov
cli
aas
in
sbb
out
push
test
lock
scas
push
iret
jno
sbb
in
pop
rolb
jecxz
cltd
nop
jle
les
mov
push
andb
je
insb
dec
mov
xchg
test
lods
pop
fcomip
add
lcall
shrb
dec
pop
cmp
popf
and
sahf
adc
or
jnp
cmpsl
cmc
in
in
lock
mul
jbe
cmpsl
push
inc
into
sub
push
xor
in
adc
xchg
jb
adcb
movsl
push
jae
or
jb
xor
nop
inc
outsb
mov
ret
nop
push
js
cltd
fiaddl
jge
in
jb
je
dec
add
mov
xchg
cli
lea
call
push
divl
push
push
sub
mov
pop
jl
pop
push
ret
shll
add
or
cwtl
repz
test
outsl
iret
jmp
addl
roll
add
stos
hlt
sub
out
dec
aas
mov
fsubp
jmp
test
xchg
pop
sbb
jns
jnp
add
imul
mov
or
sub
push
cltd
bound
in
sti
cmc
ss
add
icebp
addr16
fstl
out
cs
sbb
imul
xorb
dec
xor
gs
xchg
setle
out
ret
cmp
inc
fadd
push
and
stc
cmp
add
jge
adc
fs
dec
mov
cmp
sbb
lret
cltd
in
mov
ret
stos
pusha
adcl
push
dec
lret
lods
inc
xlat
push
lock
pop
je
xchg
imul
push
mov
cwtl
movsl
cmp
sub
mov
push
and
imul
xlat
xchg
mov
lcall
inc
pop
mov
mov
lods
out
mov
inc
pusha
pop
arpl
or
push
dec
and
decl
std
dec
xor
pop
das
mov
sarb
jl
xchg
xchg
and
sub
push
jge
sbb
xor
pop
mov
dec
iret
jge
ss
rep
gs
push
or
adc
cmp
clc
or
mov
popf
mov
loop
shrl
ficoms
test
addr16
lret
aaa
adc
mov
jp
mov
add
mov
in
and
jns
hlt
push
rol
outsl
ja
rclb
adc
stc
sbb
inc
dec
pop
and
lret
push
adc
xor
cs
fistps
push
pop
aas
ljmp
xchg
lds
test
js
test
adc
sub
pop
lret
jl
add
mov
xchg
push
mov
outsl
loop
sub
jbe
add
lret
xchg
ret
adc
out
aas
pop
sub
sub
jns
add
cmpsb
test
mov
and
pop
scas
sub
std
mov
jb
mov
nop
xchg
add
mov
stos
arpl
add
mov
inc
fwait
cwtl
loope
pushf
fwait
cli
mov
cmpsb
xchg
fcoms
hlt
scas
or
int3
out
adc
xor
sub
xor
out
inc
lods
les
je
outsb
push
icebp
pop
xchg
adc
fmuls
fwait
cli
fimull
adc
push
ljmp
pop
adc
ja
cmp
scas
dec
add
std
mov
pop
int
mov
jo
xchg
push
cmpsb
jnp
cwtl
inc
mov
loopne
cmp
rcrl
getsec
lods
jecxz
loope
imul
lods
sbb
mov
out
aaa
or
stos
loop
mov
aaa
out
imul
fs
jmp
outsl
push
sbb
je
ja
cltd
test
xlat
sbb
test
inc
or
ret
mov
fwait
insl
push
das
shl
xor
cmpsl
mov
lea
sub
lods
jp
lahf
jno
jo
xchg
ret
or
and
pop
nop
sti
test
shl
shrl
add
test
leave
sub
xchg
lret
jle
aaa
int
or
cld
int
data16
clc
pop
stc
add
stc
cwtl
repnz
adc
cld
dec
mov
test
sub
fsubrl
js
icebp
mov
int3
xchg
jg
mov
lret
outsl
cmp
pop
cmpxchg
shl
sub
loopne
stos
jecxz
sarl
jg
mov
push
psrld
mov
mov
or
shl
and
mov
pop
test
push
pop
mov
imul
cmp
xchg
stos
jecxz
mov
bound
fsubp
bnd
jmp
cmp
sub
daa
mov
aas
add
stos
mov
and
push
movsl
cwtl
loop
mov
sbb
lods
in
loopne
fistl
xchg
adc
adc
nop
or
xor
movsb
aam
dec
int3
adc
mov
or
ficompl
jo
add
insl
fnsave
cld
lds
lret
out
dec
aad
les
popf
lea
test
insl
xor
or
pop
in
inc
or
call
inc
pop
xchg
lods
cmpsb
loopne
ja
pop
popf
cmpsb
xchg
les
jno
push
out
mov
loope
or
scas
sbb
pop
insb
lret
xchg
cmp
sbb
enter
stc
movl
inc
loopne
lret
rorb
jp
test
pop
pop
mov
jecxz
loope
jg
mov
test
cmc
jecxz
add
push
mov
cs
pop
or
dec
and
lcall
inc
push
test
enter
jle
and
pop
pop
out
or
pop
ljmp
aaa
xchg
cmpb
adc
sbb
add
mov
jp
push
bnd
sarl
pop
add
mov
ss
xchg
pop
sti
sar
popa
and
sti
xchg
pop
sbb
aaa
push
mov
dec
or
lret
pushf
mov
pop
das
test
pop
setb
nop
jg
add
xchg
sarl
jbe
imul
rolb
sahf
ja
push
cs
sub
push
mov
popf
ret
inc
add
das
test
dec
and
test
std
add
xchg
mov
jns
cmp
push
mov
fmul
xchg
sbb
add
adc
sbbb
movsl
jb
outsl
shl
pop
mov
cmp
mov
xchg
jmp
sbb
and
mov
imul
push
mov
jge
adc
outsl
xor
cwtl
lret
andb
testb
mov
cmp
xchg
fisttps
not
enter
cmc
bound
pop
dec
jns
dec
cmpl
add
cli
cmp
fdivs
dec
mov
or
mov
sub
inc
jmp
mov
sahf
push
sub
jle
mov
and
mov
mov
pop
fdiv
mov
lea
xor
ss
xchg
popl
dec
jecxz
jmp
sub
or
sbb
xchg
cltd
mov
pusha
fucom
jle
sbb
cmpsb
cmp
mov
iret
mov
xchg
cli
add
jae
sahf
repz
in
mov
lcall
push
gs
es
push
add
out
mov
adcb
imul
pop
lea
mov
stos
jge
iret
adc
mov
daa
mov
call
adc
shrb
jg
pusha
into
mov
adc
lret
mov
xor
sbb
xor
push
and
sub
mov
pop
cs
sbb
negl
sub
xor
pop
xor
jmp
add
andb
gs
scas
mov
pop
push
pop
inc
and
and
dec
adc
cmp
pop
pop
xor
adc
js
mov
sub
arpl
movsb
test
daa
out
cwtl
lods
sub
and
mov
pushf
push
or
or
in
std
pop
jge
cmp
scas
cmp
out
pop
repz
xchg
test
mov
or
sub
dec
dec
mov
xor
jg
or
loope
fnstsw
ds
enter
mov
repz
xor
loopne
sahf
notb
aas
lods
mov
pushl
sub
pop
and
out
lea
loope
data16
je
scas
icebp
pop
nop
cmp
adc
aas
lret
push
shlb
test
das
outsb
sub
adc
scas
sub
loop
push
push
xchg
js
int
jg
test
xchg
decl
call
scas
jecxz
inc
adc
mov
sub
cmp
jae
fucomp
sbb
popa
adc
test
push
xlat
loopne
lahf
sub
sbb
dec
jmp
dec
out
inc
push
xchg
mov
ljmp
push
in
sub
mov
mov
mov
jno
and
mov
rcrb
mov
movsb
adc
cwtl
aam
or
imul
mov
jge
hlt
sahf
out
jl
add
cmc
jae
rcrb
xchg
and
xor
cmc
nop
xor
or
mov
out
push
stos
dec
mov
stos
mov
clts
stos
jbe
inc
call
jmp
aaa
xchg
ja
icebp
nop
repnz
push
mov
int3
xor
loope
mov
negb
push
cmp
sbb
sub
add
hlt
data16
into
add
es
xor
pushf
add
test
popa
ret
out
inc
es
test
hlt
stc
int
cmpsb
stos
daa
insl
mov
cs
jecxz
lds
fisubrl
jg
repz
inc
jnp
in
xchg
lcall
and
and
xor
bound
je
shrl
xorb
rorl
add
icebp
xor
or
loopne
ret
xor
mov
fiadds
mov
mov
adc
pop
xchg
adc
ret
roll
mov
and
rcrb
pop
push
lcall
out
inc
sbb
idivl
or
in
mov
and
divb
out
and
aas
push
jmp
push
add
sbb
and
aaa
xor
mov
jae
mov
pop
jns
ret
jb
inc
cmp
clc
in
mov
jmp
xor
jbe
and
jp
add
mov
or
rcl
aas
leave
xor
ss
hlt
mov
cmp
in
sbb
inc
adcb
mov
fisubl
push
dec
pushf
dec
decl
js
repz
fsubs
cmpsb
inc
sub
jle
mov
mov
xor
ss
sub
sbb
jnp
adc
scas
idivl
dec
data16
in
sbb
fstps
ljmp
in
cwtl
or
gs
insl
xlat
loopne
inc
out
inc
xchg
lods
imul
lea
loopne
outsl
mov
aad
xor
cmp
jle
xchg
xor
pop
adc
pop
aad
sub
add
xchg
cmp
add
add
mov
mov
enter
adc
es
scas
xchg
mov
dec
or
adc
inc
loop
push
mov
dec
nop
sub
pop
je
sbbb
inc
inc
inc
daa
dec
mov
je
notl
adc
mov
dec
addr16
scas
lea
push
xor
loop
dec
dec
cwtl
add
xor
aad
jle
push
inc
lods
and
dec
xor
pop
sbbl
jmp
jg
xchg
stc
out
push
ss
ljmp
sbb
je
cmp
mov
inc
cmp
mov
inc
mov
enter
xlat
icebp
shl
mov
fisubrs
push
shrl
sbb
pop
sbbb
scas
ror
mov
nop
mov
iret
push
push
pop
daa
hlt
jo
dec
adc
adc
inc
push
adcl
movsb
repnz
mull
cmp
xchg
add
or
int
dec
mov
fwait
lcall
push
ret
sub
out
jb
or
mov
insl
mov
divb
fs
pop
dec
dec
pop
inc
leave
jae
inc
inc
sbb
jb
das
or
xchg
cmp
xor
cmpsb
xchg
mov
xchg
cmp
and
aas
int
mov
cltd
xor
out
sbb
cmp
sbb
inc
jae
jnp
fs
enter
js
outsb
in
jl
cwtl
pop
cmp
cmc
jne
jb
das
shl
push
mov
mov
jmp
pop
push
xorl
imul
cwtl
pop
addr16
cs
lods
aad
stc
dec
xorl
add
aaa
pusha
pop
adc
sbb
es
lds
pop
insl
mov
lods
aaa
repz
jno
stc
fwait
pop
adc
paddw
cs
jecxz
test
es
hlt
out
test
adc
adc
or
shrl
out
cli
lret
cmpsl
rorb
mov
ss
mov
mov
or
inc
mov
pop
test
lds
enter
add
push
ss
dec
and
aaa
fistpl
mov
or
cld
into
aam
adc
sub
int3
insb
hlt
xorb
mov
ss
pop
mov
cmp
popa
pop
pop
data16
push
inc
ret
cmc
jne
loopne
hlt
or
mov
and
push
mov
xlat
xchg
adc
dec
inc
or
sub
rcll
rcl
xchg
or
push
mov
xorb
cmc
mov
lock
fisttpl
sbb
andb
lock
insl
sub
adc
mov
in
add
xchg
sub
adc
cmp
inc
fwait
mov
mov
jno
cmpsl
xor
jns
adc
xchg
ret
and
xchg
lgs
mov
lods
mov
insl
cmp
jge
insl
inc
cmpsl
stos
cmp
stos
in
sbb
or
call
fistl
arpl
add
aam
mov
into
xchg
mov
aaa
es
xchg
sbb
das
lret
jb
sub
sarl
xchg
mov
mov
sbb
jp
xchg
or
imul
xchg
rclb
push
push
cs
fists
cmc
aaa
cmp
call
push
fiaddl
fsubrs
xchg
movsl
inc
test
int3
xchg
jge
xor
cs
lock
inc
fildll
jge
cmp
movsl
ss
inc
lock
push
add
mov
sub
ds
loopne
dec
cmp
aam
mov
xchg
or
les
rorl
push
shlb
sahf
loopne
es
sub
iret
xor
jle
cltd
fbstp
repnz
insb
jne
cmpsb
pop
and
pop
sbb
stc
sbb
cmpsl
add
call
add
ljmp
cmpsb
add
mov
je
pop
cltd
jmp
mov
and
mov
push
ljmp
cmc
jmp
fcoml
lds
pop
or
pop
movlps
andl
push
push
mov
sbb
dec
adc
test
jo
or
decl
sbb
mov
ret
inc
add
pop
xchg
or
jae
sti
mov
xchg
sub
xor
outsb
in
cmp
jae
rolb
fstpt
cmp
sub
xchg
lcall
jnp
dec
jp
std
test
or
fcompp
inc
stos
pop
lds
in
in
stos
and
fxam
pop
or
dec
mov
mov
or
push
movsl
dec
and
or
sbb
stc
adc
cli
sahf
mov
in
mov
pop
in
repz
or
push
dec
notb
jne
insb
fldl
xorl
lcall
rcll
in
sub
repnz
loop
mov
xor
adcb
pop
fmulp
inc
sbb
cmpsb
or
int3
jg
pop
testb
std
int
aad
repz
fldt
mov
xchg
sbb
mov
rol
lock
push
insl
or
jmp
sbb
pop
lock
popa
jmp
fwait
and
inc
aad
repnz
pop
inc
cmpsl
cmpsl
sub
inc
mov
lcall
gs
jno
sub
es
jne
add
das
add
mov
and
xor
pop
xchg
es
jecxz
sbb
jne
call
dec
jl
xor
movsl
das
push
sbbb
roll
or
push
js
bound
bound
pop
lods
add
gs
jo
repz
adc
scas
or
and
dec
and
inc
mov
cmp
inc
jno
xor
mov
bound
in
mov
mov
push
mov
insl
push
cmpsl
sbb
shrb
lcall
movsb
add
pop
incl
out
negl
call
fcom
sahf
mov
cmpb
xor
mov
outsb
mov
inc
mov
mov
inc
jl
mov
sbb
lods
shll
cmp
push
test
popf
mov
nop
or
cltd
imul
movsl
push
mov
es
jge
push
iret
mov
ret
jo
int3
loop
sbb
and
push
pop
add
and
jle
into
mov
and
lret
imul
lods
mull
dec
lcall
cmp
jp
dec
inc
rorb
jle
outsb
addr16
fnstcw
mov
ljmp
aam
add
fildl
stc
jo
je
cmp
dec
and
cmp
out
aam
lock
les
jne
roll
dec
jmp
int
idivb
sub
test
scas
stos
inc
inc
cmp
push
and
dec
sub
out
push
scas
mov
loopne
fmull
cmpsb
loope
nop
add
push
mov
push
fstl
mov
mov
fstpl
test
jp
add
push
adc
clc
cwtl
xchg
sbb
xchg
fs
imul
or
or
les
arpl
int3
mov
insl
jne
jmp
adc
es
fdivs
and
xor
jle
out
xor
int3
xor
out
lea
out
mov
out
jbe
leave
call
imul
pop
lahf
xor
pop
mov
enter
dec
fwait
mov
inc
aas
dec
xchg
xor
add
cmp
lret
or
push
into
xchg
rorl
lods
mov
adc
out
lods
bound
xchg
mov
std
jae
or
out
scas
or
arpl
jg
shlb
mov
fidivs
jne
jmp
dec
push
mov
sbb
lret
ret
data16
notl
inc
sbb
pop
inc
add
dec
call
jl
fsubrl
xor
popa
mov
sub
xor
mov
mov
push
jb
sub
mov
adc
aad
push
dec
sbb
xor
aaa
outsl
sar
adc
mov
jecxz
xor
push
xchg
fwait
cmp
mov
hlt
jns
or
inc
and
and
push
adc
imul
lods
outsb
and
lods
sbb
jp
test
stos
fildll
js
push
pop
dec
adcl
jge
inc
mov
and
push
in
aaa
dec
push
jg
sbb
pusha
push
fidivl
les
mov
nop
jnp
in
std
cmp
add
pusha
jmp
add
sahf
jns
roll
cmpsl
xchg
pop
pop
cmp
mov
adc
adc
pop
and
push
xor
sbb
dec
fisttpl
aam
pop
mov
mov
fistpl
mov
imul
add
sbb
cld
xchg
pop
imul
movsl
and
cmpb
sbb
inc
mov
mov
lcall
addr16
nop
repnz
cmp
sbb
outsb
ja,pt
jae
xchg
popa
pushf
or
faddl
test
lahf
js
lret
xor
into
cmc
dec
push
in
mov
pop
pusha
xor
xor
push
ss
fnstsw
mov
xchg
or
lods
lds
sub
xor
ret
inc
xchg
test
xor
adc
xor
clc
pop
inc
pop
sbb
cmp
jnp
jbe
add
xchg
stos
mov
out
movsb
pop
dec
icebp
inc
adc
imul
dec
adc
and
push
int3
dec
jg
mov
mov
mov
sbb
int
jne
jno
vsqrtss
arpl
jae
pop
movsl
mov
sbb
cmp
dec
idiv
or
mov
push
mov
dec
adc
test
data16
xor
hlt
imul
lret
xchg
out
repz
pop
fidivl
icebp
xchg
pop
cmp
pop
pushf
gs
pop
lahf
xchg
dec
outsl
push
pop
ja
imul
xchg
bound
in
inc
push
dec
adc
mov
imul
inc
lahf
icebp
dec
rclb
fwait
sar
lods
repnz
xchg
out
mov
cs
push
ffree
jge
out
jne
jl
ja
fmuls
jecxz
lock
pop
mov
pop
lcall
pusha
xchg
jg
dec
jmp
pop
xor
loop
cmp
add
jmp
inc
stc
inc
jbe
arpl
iret
imul
aad
mov
ret
dec
popw
out
shll
ja
push
xchg
pop
xchg
inc
mov
jge
pusha
push
loope
test
rcll
leave
mov
ljmp
mov
sahf
xchg
and
movsl
mov
pop
ret
sbb
pop
mov
adc
mov
push
nop
out
xchg
cld
outsl
pop
jle
les
adc
mov
scas
pushl
dec
ss
cs
and
sbb
or
sub
or
ret
rolb
dec
repnz
cmp
mov
mov
mov
repnz
xchg
insl
adc
sbb
xchg
mov
shlb
add
outsl
or
add
cmp
mov
xchg
xor
bound
push
xchg
sahf
mov
mov
push
jns
inc
push
pop
push
xadd
in
lea
sarl
inc
mov
mov
mov
pop
pop
rcr
roll
and
hlt
sub
sti
loop
inc
adc
push
jmp
lock
ret
fnstsw
xchg
inc
hlt
pop
fldt
in
not
mov
mov
outsl
push
xchg
mov
in
cmpsl
mov
addr16
movsl
add
cmp
mov
leave
repnz
pop
add
xchg
lahf
cld
push
outsl
sub
dec
adc
add
sub
divl
scas
lcall
shll
aas
bound
pop
xchg
mov
jl
lcall
mov
dec
mov
mov
sub
lea
adc
aad
leave
xor
lods
nop
fldenv
pop
xchg
and
adc
sub
cs
and
xor
sub
mov
xor
andl
rol
scas
imul
out
popa
cmp
inc
push
rorb
mov
inc
ja
rcrb
or
or
xchg
cmpsl
test
out
sti
mov
hlt
icebp
mov
aam
pop
fidivrs
adc
add
jmp
dec
insl
jecxz
iret
sarb
pop
xchg
out
lret
repnz
in
in
inc
or
mov
inc
pop
dec
outsl
inc
repnz
pop
mov
pop
insl
push
and
or
inc
pop
mov
es
mov
mov
push
shrl
pop
ja
ficompl
std
ljmp
fcmovbe
mov
mov
xlat
cmp
sbb
out
mov
into
jmp
jecxz
int3
lret
pop
lret
adcl
pop
xor
ret
xchg
leave
cli
and
div
sbb
dec
mov
push
pop
ja
xor
mov
sub
xchg
ret
add
add
clc
cmpsb
sub
lods
je
jne
xchg
jmp
pop
fsin
or
jmp
shll
or
imul
inc
mov
mov
dec
cmp
dec
jo
outsb
in
cmp
xor
nop
icebp
das
and
loop
xchg
aam
mov
rcrl
ror
sub
int
add
and
pushf
vpcmpeqw
test
sti
inc
push
insl
movsb
xlat
xor
mov
inc
mov
pop
aam
fs
push
into
ja
je
jnp
out
xlat
rcll
mov
push
shlb
dec
dec
inc
insl
or
mov
cmp
sbb
or
je
sbb
ret
pop
adc
mov
mov
mov
and
scas
scas
mov
pop
sbb
jno
cmc
sarb
imul
inc
adc
lods
loope
push
or
addr16
aam
xchg
out
sti
mov
cmp
mov
cli
xor
mov
out
mov
dec
dec
sahf
out
jno
adc
stos
ss
repz
xor
aaa
je
mov
mov
jo
dec
sbb
or
sub
ret
popa
inc
sub
cmp
push
pop
xchg
fs
jmp
jmp
push
adc
call
mov
mov
pop
add
call
push
shr
or
sbb
push
cmp
lock
aaa
or
fninit
mov
cs
mov
lods
mov
inc
xchg
mov
xchg
push
inc
mov
fiaddl
pop
leave
popf
sti
rcll
cmpl
jmp
jns
cmc
mov
push
xadd
in
mov
sti
inc
fimull
inc
mov
ror
dec
fs
prefetch
popf
call
jae
and
mov
jno
jo
lahf
jecxz
vmovaps
fisubrs
enter
mov
ljmp
loopne
test
std
push
test
in
repnz
or
into
and
xor
je
outsl
add
pop
push
xor
pop
mov
jp
mov
scas
fs
push
dec
mov
shl
pop
xor
jp
ret
jb
lock
push
push
iret
xchg
rcrb
jg
mov
sub
les
arpl
mov
jo
fcmovnbe
imul
jb
ja
test
ud2
lcall
sbb
clc
and
and
in
scas
fnsave
inc
push
pushf
sbb
sar
mov
mov
jnp
enter
push
mov
ret
dec
dec
cmp
lea
in
lret
cmp
push
xor
pop
aaa
lea
jno
sub
pop
ljmp
mov
xor
adc
and
lock
add
dec
sarb
pop
xchg
lea
mov
loope
arpl
scas
cwtl
out
leave
cmp
jbe
dec
rolb
xchg
es
sbb
scas
fisubrs
add
icebp
lcall
les
sbb
mov
out
pop
jns
in
lods
insl
rol
jb
popa
cmpsb
xor
rol
push
pop
add
movsb
cmp
loop
inc
pushf
lcall
mov
ss
and
lcall
lret
xor
xchg
push
in
jmp
push
sarl
xchg
loopne
fcoml
insl
fadds
jmp
mov
insb
sub
jbe
push
mov
or
dec
xchg
dec
loopne
rorb
xor
inc
lods
push
xchg
mov
ja
dec
and
pushf
scas
jnp
in
or
ret
push
out
test
cwtl
fldt
fwait
xchg
leave
pusha
neg
loope
or
cmpsb
stos
push
push
push
aaa
dec
adc
mov
ss
sbb
push
in
aad
cwtl
and
pop
dec
mov
incb
stc
add
xor
mov
and
push
test
out
lret
sti
add
loop
or
fs
cmp
pop
movsb
stos
sub
push
cmpsb
mov
nop
mov
or
mov
std
push
hlt
fdivrl
dec
lea
add
out
enter
cld
pushf
std
aaa
scas
mov
push
cltd
std
jne
cmp
or
xor
mov
cmp
jb
daa
xchg
sbb
mov
push
ret
xchg
lods
mov
aas
push
je
pushf
push
mov
ss
mov
lcall
push
arpl
jae
aad
push
xor
adc
xor
dec
call
cli
adc
mov
pop
lods
push
pushf
or
jne
cltd
add
shl
push
jge
add
dec
shlb
jle
push
rorl
mov
or
int
cmp
in
arpl
push
imul
jno
xchg
jns
inc
pop
jbe
std
jp
mov
cwtl
sub
loop
sbb
imul
pushf
sbb
js,pt
sbbb
pop
aad
cmp
sub
into
or
ret
bound
and
sub
lock
lods
sbb
add
and
mov
in
das
lret
nop
cld
or
adc
fwait
shll
mov
pop
adc
jle
fnstsw
enter
sbb
js
inc
iret
mov
push
sub
push
in
push
lds
pusha
les
int3
xlat
mov
fxch
jmp
sub
sahf
lcall
movsb
mov
rcl
or
sbb
mov
int3
orl
jo
jb
inc
ss
sub
mov
dec
mov
cmp
and
adc
outsb
xor
das
fdivs
fs
jmp
lret
inc
repz
sbb
jl
lods
js
pop
pop
cs
push
mov
scas
and
adc
jno
std
xchg
fnstcw
cwtl
mov
mov
inc
pop
ljmp
outsb
repnz
addl
nop
insl
xchg
push
or
stos
jmp
mov
aad
pop
xchg
jg
loop
mov
nop
in
add
pop
out
nop
fsubrs
inc
cmp
cmpb
jmp
stc
mov
pop
mov
add
rcr
lea
loope
jecxz
lcall
sbb
popf
pop
add
arpl
inc
cld
aad
ljmp
pop
add
fs
ret
xor
sub
popf
shlb
leave
imul
lods
cmc
cmp
ret
pop
push
jmp
test
fiadds
and
testl
push
insb
lods
or
icebp
push
in
in
rorb
or
jmp
xor
and
ret
cs
xlat
andl
cmp
sbb
dec
sub
mov
or
ljmp
lret
xchg
cmp
jno
push
std
push
fcmovnbe
and
fwait
sub
push
sub
orb
mov
leave
ja
jmp
ds
add
lods
roll
aas
or
and
in
loopne
out
fwait
cmp
imul
dec
out
adc
aad
mov
push
fcoml
in
push
es
sti
gs
add
test
cld
push
sub
loopne
or
imul
and
adc
mov
push
fbld
add
test
mov
and
clc
jnp
and
xorb
xor
mov
xorb
test
xchg
add
mov
jno
dec
jb
outsl
jecxz
stos
daa
test
test
cwtl
and
mov
inc
scas
or
jne
out
mov
mov
popa
or
out
lods
inc
inc
xor
clc
hlt
das
dec
aaa
pop
faddl
call
pmuludq
push
dec
sub
or
adc
dec
aam
icebp
lds
push
stc
aas
xchg
mov
ror
shlb
adcb
cmp
es
jg
pop
jecxz
ja
and
ficompl
jg
rcll
or
sti
repnz
add
lods
pop
or
mov
mov
icebp
xchg
jno
xor
popf
aam
mov
out
push
add
pop
call
bound
fdivrs
ss
icebp
aam
out
cmp
in
xchg
fucomip
insb
jo
pop
jp
push
xchg
dec
and
mov
std
mov
mov
enter
push
sbb
sbb
push
jae
adc
dec
mov
outsb
into
sbb
aas
mov
jg
scas
cmp
mov
lahf
pop
xor
js
loopne
sbb
lahf
inc
in
mov
dec
sub
cmp
mov
fsubrs
jo
mov
pop
push
repnz
mov
dec
popf
add
mov
dec
xchg
icebp
pop
inc
fidivrl
lcall
sbb
xor
jecxz
adc
and
fwait
mov
adc
jl
cmp
sbb
jb
sub
frstor
mov
add
dec
and
dec
ljmp
sarb
in
ja
mov
imul
shlb
mulb
stc
int
movsb
loop
jns
dec
test
scas
cmpsb
xor
ss
add
sbb
pop
and
ret
cmp
insl
mov
pop
xor
adcb
test
stos
xor
adc
push
mov
in
pop
jg
jo
lods
mov
cmp
arpl
adc
push
add
mov
add
in
in
fnstcw
ror
inc
push
xchg
test
inc
shrl
push
and
cld
sbb
dec
dec
or
fsubrl
sub
cmp
dec
in
stos
add
hlt
dec
adcb
int3
je
les
xor
nop
cmp
mov
mov
popa
xchg
and
jle
mov
dec
notl
pop
cltd
and
add
incl
push
inc
pop
scas
stos
push
call
push
outsl
fidivrs
dec
test
mov
dec
mov
inc
or
and
and
out
mov
shlb
adc
xchg
in
dec
lods
add
dec
mov
mov
or
mov
or
sbb
add
in
mov
and
add
or
xor
jnp
push
cs
inc
pop
icebp
jle
rcll
cmpsb
mov
adcl
arpl
loope
in
dec
pop
inc
pop
pushf
dec
jge
pop
enter
or
push
jge
lea
sub
pop
repnz
rclb
xor
icebp
mov
pop
lcall
sub
and
adc
stos
je
push
mov
imul
mov
add
lcall
add
sahf
shlb
sbb
aam
test
lret
rorb
loopne
mov
jns
loop
outsl
ficoms
mov
jno
push
push
jg
add
pop
add
mov
sbb
cltd
xchg
add
push
mov
iret
loope
mov
sub
dec
mov
test
fisttpll
pushf
dec
sub
sub
fldcw
add
cmc
dec
push
pushf
xchg
mov
or
pop
imul
mov
jp
in
icebp
sub
jge
cwtl
dec
add
mov
xchg
ss
sub
jle
sub
outsb
and
pop
pop
gs
sub
inc
mov
adc
jnp
dec
xor
shll
push
fdivr
cmp
dec
inc
rolb
pop
int
pop
lcall
push
sbb
sub
aad
jno
xchg
sarl
cmc
xchg
and
stos
ficomps
outsb
xor
lcall
stos
popf
fcoml
inc
xor
faddl
xchg
xchg
outsl
daa
inc
dec
add
aam
and
xchg
and
stc
aam
movsb
movsb
add
or
movsb
lods
push
pop
out
stos
test
push
inc
jns
mov
std
mov
movsb
dec
popf
in
out
mov
loop
adc
sbb
adc
fdivs
sbb
add
dec
push
lods
test
cmp
pop
cmc
dec
test
cmc
fs
cmp
push
cmp
jge
insl
or
mov
outsl
add
lods
mov
ljmp
lea
xchg
jne
orl
test
popl
sbb
ret
ds
mov
ss
xchg
xchg
xor
lea
fcmovnbe
push
ds
mov
cmc
leave
lret
ss
mov
sbb
aam
leave
cmp
daa
adc
push
cmp
xor
test
xchg
stos
adc
add
xor
ss
xchg
cmp
cmpsb
xchg
xchg
mov
gs
xlat
lea
or
lahf
lds
addb
rep
mov
ds
aas
aas
dec
roll
cmp
mov
mov
addr16
or
sbb
push
fs
mov
lcall
pushf
add
pop
mov
cmpsb
mov
push
leave
xchg
arpl
push
jle
leave
in
jmp
shrl
inc
enter
leave
les
xchg
scas
xor
sbb
dec
inc
into
mov
dec
mov
rorl
pop
push
xor
icebp
push
in
popa
push
sbb
and
pop
push
inc
mov
sbb
pusha
and
xchg
cmp
sbb
pop
add
cwtl
scas
or
out
fstps
dec
sub
add
adc
or
mov
outsl
add
stos
cmp
and
or
mov
dec
out
mov
sbb
mov
mov
cmp
ds
xor
cmpsb
push
or
push
jo
push
mov
imul
sbb
movsl
cmp
push
mov
jle
ret
das
adc
lods
jns
and
ljmp
data16
push
xchg
or
xor
idivl
jg
xor
add
jb
mov
imul
and
movsl
mov
aas
dec
and
inc
mov
push
test
out
test
sub
adc
out
test
add
add
inc
in
pop
sub
sbb
cmpsl
jno
lea
dec
mov
sbb
cmpsl
lock
add
and
inc
test
add
inc
shrb
lea
rcll
pusha
fadds
flds
fdivr
push
pop
xchg
or
sbbl
in
mov
out
mov
xor
pop
arpl
or
je
mov
int3
bound
jne
into
icebp
or
adc
nop
xchg
mov
mov
or
inc
ss
cmpsb
sbb
pop
mov
cmp
in
je
pop
add
inc
pop
or
fisubl
mov
les
xor
mov
pushf
fbld
mov
pusha
xor
enter
add
outsl
or
mov
pop
jp
mov
xchg
aas
mov
fidivl
icebp
stc
cs
push
pop
movsl
in
cld
dec
and
sbbb
lret
and
rcrb
dec
ss
mov
lock
pop
sub
movsl
jmp
and
sub
dec
fsubrl
push
adc
mov
test
jg
add
push
jmp
jo
jo
addr16
cmp
cmp
add
ret
cmp
lds
jmp
cmp
sub
push
lcall
dec
loopne
stos
mov
push
cmpsb
rcll
mov
inc
and
cld
dec
in
sarl
cwtl
jmp
inc
dec
sub
leave
and
jno
inc
xchg
out
jecxz
push
mov
in
cli
add
xchg
pop
push
dec
fs
adc
push
add
aas
sbb
aad
sbb
dec
mov
ret
push
std
sbb
dec
or
sbb
sbb
pop
in
scas
pushw
mov
pop
lret
push
mov
sub
inc
push
jl
ret
xchg
lret
mov
rorl
mov
iret
nop
mov
inc
dec
pop
jp
lcall
scas
cmp
inc
lods
loop
fisubl
mov
cmp
jp
je
fs
push
inc
out
push
cld
addr16
lea
inc
dec
loope
into
jl
pxor
xchg
cmp
jno
out
pop
std
pop
mov
mov
sbb
cmp
push
push
movsb
paddsb
mov
stc
push
rorl
fistpll
jge
mov
inc
push
hlt
sahf
cmp
daa
out
arpl
mov
popa
popf
fisttpll
adc
pop
out
mov
addr16
xchg
lods
adc
daa
or
lahf
pushw
mov
adc
repz
popa
popl
sub
pusha
mov
cwtl
mov
mov
or
jno
cmpsl
add
pushf
or
or
mov
rclb
and
movb
les
or
adc
add
psubusw
imul
ret
cmp
sbb
or
fstl
int3
sbb
dec
out
push
jle
jae
insb
sbb
lret
inc
shl
shrl
mov
cmp
fcomi
sbb
cmp
dec
negl
xchg
mov
pop
sahf
loop
js
in
sbbl
or
mov
xchg
pop
xor
ds
je
fwait
pop
ljmp
xor
les
push
sbb
lcall
mov
cmc
mov
shlb
mov
cld
inc
arpl
iret
gs
add
pop
cmc
fwait
xor
mov
sub
shrb
push
orb
sahf
jae
mov
add
cwtl
inc
test
into
fstpt
adc
out
pop
adc
adc
pop
imul
cmp
lret
pop
sub
rolb
ljmp
dec
and
ror
out
add
xor
daa
jbe
dec
pop
out
mov
in
and
cmp
pusha
pushf
jns
add
cmpsl
test
xchg
xchg
cmpsb
sub
or
or
or
scas
fsubrs
mov
mov
and
inc
aam
adc
fnsave
mov
inc
data16
sub
je
outsl
sbb
inc
push
andl
sub
push
ja
sbb
into
push
repz
leave
xchg
aam
dec
lret
ja
cmp
lock
imul
addl
fwait
xorb
sub
ret
pushf
arpl
icebp
out
stc
bound
imul
stc
mov
jno
push
sbb
in
inc
inc
mov
fists
xor
mov
in
mov
cmpsl
lret
sar
jl
add
les
bound
decl
push
les
dec
xchg
leave
mov
gs
iret
sahf
cmpsl
in
sub
lea
pop
sbb
cli
dec
and
cmpsb
outsb
mov
in
imull
cmc
out
push
mov
adc
pushf
fimull
pop
fcoml
mov
imul
fsubp
ficoml
xchg
xchg
mov
into
jmp
test
movb
and
into
jge
andl
cmp
std
insl
cwtl
addr16
push
out
outsl
and
cmp
pop
data16
pop
les
cld
jbe
test
push
out
out
ljmp
mov
push
and
test
arpl
sbb
xor
out
roll
aas
ss
or
cmpl
sub
cmpsb
push
adc
mov
std
sub
jno
rcl
std
mov
add
xchg
jge
cmp
sub
xchg
arpl
cmp
test
xor
pop
mov
es
stos
rorb
or
push
gs
aaa
jge
enter
popa
aas
test
jne
push
sub
out
dec
fxch
cmp
aas
push
adc
mov
stos
pop
jecxz
lret
leave
xchg
shll
popf
cld
mov
xchg
insl
jl
xchg
dec
jp
add
out
jbe
inc
idiv
lret
pop
cmp
inc
in
data16
pop
insb
push
inc
mov
inc
mov
insb
je
clc
out
fistl
jns
xchg
adc
fwait
aam
rcr
sbb
push
outsb
shlb
cltd
adc
test
jle
cmpsb
int
mov
aam
push
enter
dec
adc
pop
sub
pop
sbb
sti
and
out
mov
pop
mov
cmp
sub
adc
inc
add
dec
sub
sbb
out
pop
push
ds
adc
mov
xchg
pop
aaa
rcr
jno
bound
adc
test
mov
fcmovnbe
sub
rorb
repnz
pslld
xchg
adc
les
mov
es
lret
es
push
out
push
mov
cld
ljmp
cmp
xchg
es
into
sub
ret
pop
pop
xor
cs
ret
cmp
dec
mov
dec
add
nop
pop
pop
jmp
push
aas
repz
negl
push
lret
arpl
mov
flds
mov
dec
and
loop
scas
addr16
lahf
dec
bound
xor
lods
jge
sub
xchg
mov
mov
test
bound
insb
out
or
dec
sbb
mov
jmp
cmp
cmp
push
dec
xchg
cmpsl
jp
xorl
outsb
cmp
adcb
xor
not
outsl
cmp
pop
fmulp
outsb
xchg
sahf
pop
sahf
inc
loop
fmuls
loopne
inc
cmp
outsl
sub
add
out
mov
fists
mov
dec
repnz
pop
stos
lret
nop
adc
lods
mov
mov
adc
out
jmp
in
fsubrs
cmc
sbb
xchg
cmp
insl
jns
push
jle
or
mov
aad
pop
mov
xor
call
test
in
mov
aam
das
les
jnp
mov
xchg
sarb
stc
lods
cmp
pop
loope
xlat
xchg
jb
int
mov
cmp
xchg
jmp
out
mov
dec
mov
movsl
lcall
es
sbb
lret
sbb
test
inc
adc
into
cli
in
scas
adc
mov
sarb
mov
lfs
pushf
jnp
imul
add
insl
movsb
cmp
imull
test
ret
cmp
popa
shlb
and
lret
mov
js
rcrb
and
fwait
jmp
jge
xor
popa
sub
or
fs
push
pop
fistps
ret
adc
lock
pop
push
scas
mov
dec
jl
mov
sbb
xor
push
inc
icebp
mov
pop
xchg
sbb
das
mov
adc
pop
dec
jne
in
movsl
inc
sub
popf
ror
jno
shrl
cmp
sub
xchg
lret
test
mov
es
mov
cmp
test
mov
sbb
je
cld
jge
xor
pop
inc
and
aas
fsubrp
test
loopne
outsb
or
loop
cwtl
fisubl
add
jge
and
jmp
outsl
mov
xchg
mov
mov
call
rcrl
add
pop
addr16
testl
jae
dec
gs
ljmp
dec
fistl
adc
vpminub
mov
sti
jmp
inc
sub
data16
test
les
jbe
lahf
fdiv
addr16
mov
jns
sbb
jne
jge
jecxz
add
aad
cs
mov
xchg
jp
hlt
divb
pop
lods
pop
add
jp
outsl
cmp
pop
mov
mov
jns
or
xchg
and
adc
xor
loopne
cmp
inc
mov
sub
jnp
pop
inc
aad
sbb
es
out
cwtl
add
in
xchg
jns
push
push
adc
popa
insl
add
mov
jp
jecxz
data16
sub
dec
rorb
rolb
xor
mov
sbb
cwtl
int
test
outsb
ljmp
cli
lcall
repz
js
pop
in
cs
xor
or
fisubrl
loope
mov
add
mov
jbe
jo
sbb
fidivs
adc
push
in
sahf
mov
mov
loop,pn
add
dec
jp
repnz
cli
lock
test
rcrl
lahf
sbb
dec
adc
loopne
sbb
xchg
stc
dec
scas
mov
push
dec
stos
repnz
cmp
int
adc
lcall
mov
and
inc
cmp
ret
repnz
lahf
arpl
test
aam
je
lahf
push
fbstp
pushf
push
push
or
rcrl
adc
adcb
cmp
imul
out
mov
outsl
mov
push
rorb
inc
dec
push
enterw
sbb
inc
push
lcall
push
inc
pop
sub
sbbl
pop
lds
loopne
push
mov
jmp
jb
cmc
xchg
fdivrl
push
and
mov
outsb
lcall
sub
scas
dec
mov
jecxz
and
aad
jecxz
xchg
fsubrs
inc
outsl
xor
sub
into
in
aas
pop
jle
fisttps
push
jg
out
das
mov
fdiv
sub
das
cwtl
xor
sub
mov
xchg
or
mov
sbbb
push
std
sahf
stc
imul
cmp
fists
test
sahf
stos
dec
or
pop
pop
push
adc
inc
push
gs
in
hlt
jns
lds
or
push
dec
lods
lea
ret
mov
cld
dec
xor
jne
jp
cmp
mov
xchg
mov
