ds
mov
jmp
and
cmp
es
and
fnstsw
cld
jns
mov
cmp
in
add
ret
inc
cwtl
mov
sbb
mov
insb
mov
mov
pop
rorb
je
mov
xchg
lods
xor
dec
aas
push
sbbb
in
mov
popf
adc
mov
cs
add
dec
dec
push
testb
push
mov
jge
nop
mov
call
cltd
fcmovbe
inc
iret
adc
xchg
or
sbb
jae
sbb
out
pop
dec
adc
jmp
add
push
test
shl
nop
jle
xlat
mov
dec
pop
add
js
add
inc
test
into
repnz
cs
push
xchg
mov
repnz
xchg
pop
and
fwait
enter
inc
push
cmpsl
mov
jle
sbb
xchg
mov
mov
fnsave
shll
mov
or
mov
push
jge
lods
jne
inc
pop
pushaw
pop
adcl
lods
bound
mov
adc
xchg
js
push
movsl
cmp
loopne
sub
out
loopne
or
arpl
lea
mov
in
aas
push
mov
nop
int3
in
fwait
xor
add
and
movsl
popa
push
cltd
xchg
mov
out
js
jb
jnp
mov
add
sub
jecxz
stos
repnz
sbb
jl
out
jae
pop
sahf
arpl
in
lss
stos
mov
mov
dec
adcl
xor
ja
or
add
add
lret
movsb
sub
mov
mov
jecxz
js
xor
add
xlat
jp
and
movsb
into
jno
mov
and
dec
push
rcll
adc
adc
adc
ljmp
mov
in
pop
fildll
movsb
pop
insl
jb
sub
inc
and
fistl
aas
mov
fdivr
insb
mov
shll
lcall
inc
fisubs
loope
into
adcb
pushf
push
push
loop
shl
inc
fdivl
fistps
rclw
mov
mov
lret
xchg
xchg
xchg
dec
dec
or
pop
pop
fwait
add
xchg
pop
jae
xor
pop
adc
loop
das
fdiv
pusha
sti
into
aad
fimuls
or
inc
nop
mov
pop
mov
shr
sbb
and
arpl
dec
mov
sarb
jmp
repnz
and
push
jno
push
jl
dec
repnz
shrl
jae
mov
out
sbb
das
sbbl
add
and
mov
add
rcrl
outsb
push
jge
popa
aam
test
in
xchg
xchg
mov
ja
push
jnp
add
mov
and
add
out
ja
inc
outsb
call
inc
mov
mov
shll
fadds
inc
les
xchg
aas
jns
cmp
sarl
repz
sub
xchg
sbb
fst
test
arpl
mov
mov
inc
sarb
fmul
insl
pop
mov
imul
aaa
adc
repz
enter
xchg
inc
dec
lods
movsb
or
out
orl
inc
scas
imul
xchg
xchg
cwtl
sbb
mov
xor
xor
pop
inc
push
repnz
and
test
adc
jle
fbld
dec
cmpsl
lds
mov
pop
in
mov
xchg
dec
add
aas
mov
mov
add
dec
mov
sub
inc
out
addl
or
add
add
jno
out
nop
addr16
test
jmp
sub
push
or
jno
dec
mov
or
in
or
stos
xor
icebp
hlt
into
insb
mov
jge
cmc
fistl
inc
ss
iret
xchg
mov
mov
movsb
cmp
push
into
cmp
lret
aam
dec
pop
or
std
cmp
inc
mov
xchg
inc
popa
xchg
and
mov
xlat
pusha
loop
sbb
sbb
add
imul
jns
inc
lret
jg
mov
pop
pop
stos
or
out
inc
mov
out
jg
push
mov
insl
add
insl
dec
shrb
loopne
ja
pop
ret
add
pushf
ja
and
lret
movsb
fmul
mov
dec
sub
and
iret
xor
fs
dec
lea
bound
in
out
cli
aas
jge
adc
enter
stos
xchg
mov
pop
mov
sub
jnp
out
sbb
dec
test
jle
gs
test
icebp
pop
push
cli
sbb
adc
jbe
out
test
fisubrs
mov
mov
decb
or
shrb
add
pop
add
loopne
xchg
mov
mov
inc
out
adc
sub
jle
add
jmp
lret
and
andb
mov
scas
sbb
sbb
ja
shrb
sbb
aas
ret
loope
call
sub
mov
scas
lods
xchg
insl
push
mull
vcvtps2pd
mov
mov
lahf
sbb
cmp
mov
add
jnp
xor
inc
mov
pop
rclb
dec
insl
ret
or
mov
popa
es
lcall
sbb
cmp
or
pop
mov
int
bnd
mov
xor
ret
pop
cmp
mov
adc
loope
enter
push
mov
xlat
mov
inc
push
or
xor
dec
subl
xor
int
xchg
push
mov
lcall
adc
adc
test
add
pop
push
call
sbb
rcrb
mov
sbb
xor
imul
loop
sbb
inc
push
pop
int
add
dec
pop
and
dec
ss
jb
lcall
pop
lea
push
jno
and
pop
push
movzbl
stc
push
sub
pop
cmc
push
push
jae
push
jne
pop
pop
pop
jnp
dec
inc
stc
cld
loop
pop
and
dec
inc
clc
push
pop
jmp
aad
lds
xorps
test
mov
ret
dec
jnp
xchg
fisttpl
sbb
add
into
or
out
pop
cmc
add
fmul
mov
mov
mov
inc
pusha
mov
notl
add
ja
push
mov
pop
push
movzbl
jb
push
push
push
dec
pop
pop
pop
push
jo
push
test
pop
pop
jae
and
test
push
pop
and
or
cld
clc
loop
pop
cmp
stc
cmc
mov
movl
push
push
test
pop
pop
and
xchg
push
popl
or
or
xor
jne
push
jge
push
xchg
pop
pop
cmc
mov
movl
jge
and
jmp
mov
shrb
loop
push
jg
fsqrt
pushf
js
hlt
xor
mov
jle
dec
lcall
inc
xor
je
and
dec
inc
push
add
pop
push
call
mov
imul
adc
mov
lea
mov
sbb
sub
add
pop
cmp
push
push
sub
pop
pop
and
push
mov
pop
push
push
xor
pop
pop
or
cmp
push
dec
pop
nop
cld
call
loop
jecxz
push
xchg
sbb
cmp
jecxz
out
inc
mov
or
lret
and
inc
cmp
js
push
jno
and
pop
xor
add
test
push
pop
js
cmc
inc
dec
add
mov
jmp
cmpsb
shrb
xor
jns
repnz
xchg
addb
pop
incb
xlat
mov
mov
movsl
int3
pop
push
les
repnz
jecxz
ret
mov
mov
out
daa
shrl
in
xchg
jno
xchg
clc
push
push
aam
and
test
pop
icebp
scas
sub
in
pop
pop
stc
push
rol
pop
jnp
push
push
pop
pop
push
push
mov
pop
pop
mov
push
jp
jne
xor
pop
cmc
loop
jecxz
shl
mov
push
rol
fucomp
repz
cmp
in
stos
js
pushf
add
jae
push
add
push
call
dec
fsubp
hlt
jecxz
stos
jg
sub
add
mov
sbb
jnp
fmull
pop
push
add
mov
pop
jmp
leave
cmpsb
int3
push
mov
paddd
lret
mov
mov
jo
and
test
bnd
sar
dec
mov
jl
fisttpll
nop
das
lahf
cmc
test
cmp
and
and
aas
test
jno
and
inc
data16
fdivrl
fadds
lods
scas
jbe
lock
test
into
add
add
clc
cmc
test
je
push
movzbl
test
push
push
push
add
pop
pop
test
rol
jbe
push
push
sar
pop
pop
jl
xor
test
push
mov
pop
and
nop
sub
ror
jg
push
add
inc
dec
sub
loop
pop
test
shr
clc
ror
and
nop
push
mov
add
pop
loop
jecxz
movsl
insb
ret
inc
xor
pop
rcrl
dec
lods
jmp
rcll
and
mov
jo
ja
aam
js
dec
push
mov
sbb
pop
stos
mov
inc
push
call
sub
sbb
mov
ss
mov
orb
ror
cli
adc
jo
test
mov
xor
pop
push
and
pop
rol
push
push
add
pop
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
jmp
jecxz
xlat
dec
pop
popa
xorl
aam
ja
and
lods
aam
pop
negb
sbb
mov
jg
je
sbb
in
lret
dec
rolb
rclb
pop
xchg
pop
mov
in
lods
xchg
stc
sahf
jp
xchg
hlt
clc
lds
or
sbb
inc
mov
scas
sbb
je
ret
jmp
lods
xor
sub
rcrb
xor
out
and
lret
xchg
jnp
outsb
jb
mov
sbb
scas
lahf
mov
lods
imul
fcoml
mov
inc
cmpsl
jmp
mov
and
iret
and
testl
mov
add
fstps
flds
add
add
insb
mov
loope
js
sbb
dec
mov
cmp
or
inc
enter
adc
pop
dec
insb
jno
popf
mov
add
mov
jg
mov
scas
test
xor
push
inc
mov
adc
add
cmpsl
xchg
mov
pusha
fwait
out
gs
mov
cld
sbb
cwtl
shr
mov
lea
xchg
cmp
sbb
leave
or
and
into
adcb
inc
or
lcall
mov
pop
adc
xchg
cmp
push
mov
and
popa
stos
cwtl
inc
xor
ret
stc
push
in
mov
shlb
or
lods
sbb
fs
pop
pop
cmp
push
sub
dec
jne
loop
jecxz
out
clc
fs
cmp
scas
gs
lret
pop
xchg
pop
loop
push
sbb
mov
jns
jmp
or
xor
xchg
aas
push
adc
loope
imul
mov
movzbl
cmp
jns
sub
cmc
add
xor
cmp
rol
push
or
pop
and
jno
push
push
mov
pop
pop
push
xor
pop
ja
jbe
add
push
dec
pop
loop
pop
push
add
clc
nop
push
jl
push
and
pop
pop
push
push
push
rol
pop
pop
pop
push
shl
pop
push
add
ret
stc
nop
add
lods
jns,pn
or
mov
enter
in
lods
pop
jbe
cmpsb
mov
mov
fidivrl
lods
xchg
and
jbe
fsubs
stc
mov
dec
push
out
sbb
pop
cwtl
jle
cld
jne
push
aam
xchg
in
push
cmp
ja
and
pushf
in
fbld
loopne
jp
dec
cmpsl
fisubl
cmp
xchg
inc
das
roll
push
outsl
cmp
stos
adc
stos
cmpsl
bound
dec
and
and
xor
setl
lds
inc
fistpl
popa
sarl
decl
and
mov
aas
inc
adc
inc
subl
or
stos
into
std
outsb
dec
jo
ror
push
lea
movsl
outsl
or
adcb
pop
sahf
dec
sti
dec
ja
jmp
sti
movsl
xchg
pop
jmp
jns
shrl
sbb
jge
leave
outsb
or
cmpsl
lret
jg
pop
mov
pop
cmp
shll
es
xchg
and
sahf
je
shl
and
push
mov
stc
push
cmp
xor
andl
and
pop
jno
pop
fistps
cmp
mov
scas
fs
mov
xor
ret
lret
in
dec
in
or
or
mov
xchg
sbb
or
ljmp
sbb
nop
sbb
in
push
ret
and
popf
inc
jle
call
dec
push
in
cwtl
ds
mov
xor
mov
sti
adc
pop
arpl
and
adc
pop
jle
or
mov
sub
fs
mov
xlat
daa
int
sub
jnp
shlb
je
lcall
fstl
clc
cs
stc
ds
push
aas
out
cltd
out
flds
test
loope
inc
out
fwait
out
xlat
inc
hlt
mov
dec
mov
mov
jne
scas
iret
xor
mov
ret
outsl
add
sbb
jne
mov
mov
rclb
movsl
data16
data16
sub
in
and
push
pop
ret
scas
in
xor
or
iret
mov
lds
subl
das
movsl
test
cwtl
test
in
mov
fcoms
add
xor
cmp
aaa
popa
stos
orl
loope
sub
adc
jl
fwait
xchg
push
popf
push
test
or
loopne
cmp
push
movsb
cmpsl
mov
pop
cmp
cmp
xchg
inc
mov
sahf
push
outsl
lods
js
stos
xchg
stos
cmpsl
add
dec
adc
dec
and
and
mov
int
andl
or
inc
or
arpl
push
or
int
adc
sub
dec
dec
andb
mov
test
push
outsl
mov
lret
ret
stos
lea
fcomip
les
in
push
cmp
adc
sub
adcb
mov
bound
mov
scas
or
gs
idivb
sti
dec
loop
dec
mov
xchg
cli
test
pop
in
add
ljmp
sti
jbe
cld
adcl
fmul
stos
mov
add
pop
fisttps
mov
in
mov
and
jp
jne
mov
mov
scas
loop
dec
mov
test
jg
xlat
mov
and
imul
xor
pop
enter
stc
outsl
ljmp
mov
fwait
sahf
dec
mov
sbb
mov
cmpsl
cmp
fldt
cltd
aas
jo
bound
cmp
or
outsb
add
inc
insl
pusha
scas
add
outsl
sub
xchg
add
loop
mov
shl
xchg
out
mov
lahf
in
cmc
mov
cmp
push
push
mov
mov
pusha
pop
push
mov
jmp
xchg
rolb
push
jne
and
xor
xor
xor
sbb
sbb
cmp
and
and
movsl
in
jno
sahf
addr16
cmp
shll
pop
xchg
sub
mov
push
in
and
mov
xchg
loopne
xor
mov
out
je
xchg
mov
cli
iret
rcrl
outsb
loopne
sub
jl
fsubl
xchg
inc
mov
sbb
sbb
pushf
xchg
loop
cmp
and
jae
sbb
xor
sub
mov
jbe
jae
sbbb
lcall
mov
jecxz
fnstsw
cwtl
mov
push
add
xchg
and
dec
out
pop
leave
inc
cmp
push
fldenv
mov
lods
cmpsb
dec
cmpsb
lea
aad
jmp
test
push
or
sbb
loopne
jecxz
lret
push
adc
add
notb
addr16
enter
pop
and
push
push
pop
cli
test
lret
out
cmp
mov
mov
xchg
push
or
testb
cmpsl
bound
cmp
rol
fbstp
int
lock
loop
insb
jge
or
mov
mov
pop
je
pop
arpl
mov
cmp
xor
lock
test
jb
adcb
sbb
xorl
test
jl
push
add
xor
imul
aad
dec
ror
cwtl
jbe
add
xchg
inc
sbb
call
int
loopne
imul
pmuludq
int
xor
call
cli
faddl
adc
insl
mov
pop
add
nop
add
jb
sbb
xor
es
dec
jecxz
add
xor
cmp
sbb
xchg
push
xlat
and
shll
mov
sahf
xor
lods
lds
sbb
cld
enter
and
inc
and
mov
in
sub
push
dec
xor
xchg
cmc
mov
lcall
out
or
mov
lods
aam
xor
sub
mov
cltd
js
add
cld
sbb
jo
pop
sbb
loopne
sbb
cmpsb
dec
push
adc
inc
ds
sbb
and
cld
cmp
pop
xchg
ss
jge
jbe
dec
ds
or
das
sbb
inc
mov
test
fwait
inc
in
xlat
mov
or
jne
js
notb
fimull
push
mov
mov
in
loope
pop
fisubrl
xor
inc
xchg
xlat
sti
push
push
lret
int
mov
jle
lods
pop
xchg
outsl
mov
lret
or
add
stos
jmp
pop
jp
mov
iret
sub
fidivl
push
out
pop
jo
inc
stos
testb
gs
lret
cmp
pop
jb
cwtl
fmuls
push
dec
pop
fidivs
or
test
inc
dec
inc
cmp
lods
leave
mov
sti
test
xchg
or
dec
in
jmp
popa
or
outsb
fmuls
aam
jmp
inc
sub
dec
xchg
dec
fnstenv
sahf
shrl
out
pop
or
jg
sub
mov
adc
lods
sbb
stos
pushf
inc
lret
dec
add
cmp
push
pop
loope
xor
int
fcomi
xchg
rorl
sahf
cmp
adc
daa
pop
jno
jbe
pusha
dec
xchg
adc
jo
mov
xor
shr
mov
movsb
dec
sbb
jne
adc
mov
mov
ds
in
iret
pop
jmp
test
xchg
ret
cmp
sbb
mov
inc
subl
repz
popa
push
clc
ds
fstl
and
mov
jae
dec
push
out
popa
iret
and
insl
push
cmp
cmpsl
insb
mov
cmp
xchg
dec
fsubrl
sub
cwtl
imull
in
sub
lcall
js
jl
lods
test
mov
les
jbe
or
bound
mov
or
jne
or
int3
test
push
push
es
stc
or
add
sub
pop
mov
sbb
nop
in
dec
in
inc
roll
movsb
and
lret
push
xorl
pusha
fldl
mov
and
mov
loopne
rcr
cmp
test
addr16
jnp
rcrb
inc
push
insl
ret
pop
fdivrl
data16
pop
xor
icebp
push
mov
pushf
lcall
lock
mov
jl
repz
adc
sbb
out
dec
cltd
mov
mov
sub
enter
lods
add
popf
cmp
xchg
push
inc
repnz
fmull
adc
inc
pop
pop
shrb
lahf
mov
dec
sbbb
in
lds
scas
arpl
and
push
xor
xor
xchg
sub
cmc
push
or
cmp
out
arpl
daa
test
sbb
cltd
hlt
mov
loopne
sbb
aad
xchg
jl
cmp
cmp
frstor
int
aas
inc
mov
jecxz
xchg
int
jg
push
push
pop
and
dec
mov
pop
popf
test
fnstenv
mov
mov
outsl
pop
push
xchg
in
ds
mulb
mov
jle
ret
push
pop
sarb
pop
sub
push
call
dec
mov
pop
xor
mov
mov
xchg
add
imul
cmpsl
inc
dec
hlt
pop
rcr
sub
clc
add
fdivp
adc
fwait
add
dec
sbb
std
adc
shrl
sti
mov
cld
dec
cmp
mov
add
scas
test
inc
jecxz
push
jle
jnp
aaa
push
arpl
leave
pop
adc
xchg
push
push
popa
xor
sbb
dec
scas
popa
mov
fadds
lret
xor
loop
testb
pop
or
mov
inc
je
pop
pop
push
and
je
icebp
adc
push
xchg
pushf
fidivrl
imul
popf
mov
push
scas
out
xor
jne
mov
push
insl
push
jns
dec
sub
cmp
sbb
mov
jmp
leave
cmpsl
out
clc
mov
mov
or
cmp
aam
fmuls
sahf
pop
sbb
xchg
pop
mov
jmp
gs
hlt
xlat
or
jp
clc
jecxz
adc
aaa
sbb
bound
dec
mov
inc
das
inc
mov
mov
sub
or
roll
pop
test
loop
gs
lods
pop
cmp
or
xchg
shr
jns
pop
repz
dec
fidivrl
jns
rolb
shlb
push
mov
dec
mov
sbb
or
repnz
xchg
roll
pop
sbb
pop
push
mov
mov
add
sub
in
pop
ja
sub
add
jl
shl
sbbl
mov
icebp
inc
jbe
pop
add
loop
inc
mov
or
xor
gs
out
xlat
dec
mov
fwait
mov
push
mov
das
cs
inc
out
mov
scas
cmp
scas
adc
aas
loope
jb
rolb
loopne
adc
xchg
aam
fsubrs
ljmp
mov
stc
pop
daa
enter
out
out
or
in
xor
mov
sub
out
mov
pop
outsl
je
fldenv
or
push
xor
dec
push
push
ljmp
into
fiadds
loop
test
jnp
pop
cs
in
test
in
push
mov
popa
mov
pop
fwait
into
sbb
out
test
mov
std
fwait
mov
mov
mov
fldt
xor
mov
lcall
push
push
push
mov
bound
repz
pop
jecxz
enter
pop
ret
inc
and
subl
sub
push
add
ss
and
mov
fistpll
mov
adc
int
jp
dec
iret
bsf
movsb
mov
shrl
imulb
push
pop
add
mov
shrb
add
mov
sub
enter
lret
pop
shl
scas
dec
jnp
loop
xlat
shlb
and
iret
xorl
or
and
xor
outsb
inc
ds
pop
imul
jne
cmc
sarb
mov
xor
pop
fmull
cmpsl
imul
mov
xlat
inc
pop
jo
xchg
cmp
pop
fadds
jecxz
and
in
pop
aaa
adc
jae
gs
lcall
adc
cmp
mov
loopne
xchg
mov
fdivp
push
clc
ja
pusha
or
cmp
in
push
inc
test
pop
stos
and
sbb
xchg
leave
push
pop
insb
fidivs
jb
fmul
in
arpl
mov
lret
push
sub
xor
shrl
cmp
push
adc
cmpsb
and
xchg
mov
sbbl
xchg
add
inc
xchg
push
mov
fsubs
xchg
iret
adc
mov
cmp
push
and
es
sbb
mull
mov
arpl
inc
mov
jecxz
adc
orb
mov
in
iret
push
enter
add
push
rcrb
adc
div
or
sbb
fcmove
jmp
repnz
fdivl
sub
stos
mov
xchg
ds
cltd
leave
repnz
and
mov
les
mov
push
roll
in
dec
cmp
dec
push
push
pop
fstl
mov
dec
xchg
mov
addr16
cld
cmp
pusha
call
mov
inc
and
ljmp
inc
std
clc
mov
mov
daa
mov
xchg
fisttps
insb
pop
xor
jae
jg
lds
je
sbb
jmp
stos
and
jecxz
nop
cmpsl
sarl
adcl
popf
jo
jno
jge
ja,pt
gs
ds
dec
add
xor
pop
lret
lahf
jl
dec
push
or
decl
push
mov
sbb
dec
sub
cmp
lods
int
add
adc
iret
std
fisttpll
adc
lods
xor
imul
mov
js
nop
pushl
aad
jns
mov
and
xor
in
les
insb
mov
adc
lret
dec
xchg
adc
jnp
pop
mov
sbb
lcall
roll
mov
call
test
adc
mov
sub
and
push
aas
push
mov
sbb
cwtl
leave
mov
scas
inc
dec
adc
imul
mov
or
icebp
inc
sbb
sbb
orb
jno
push
movsb
bound
push
stos
addr16
inc
xor
dec
dec
fnstcw
enter
rcrb
int3
mov
pop
add
lcall
test
jnp
push
ja
pop
nop
rcrb
jg
leave
scas
or
in
or
stos
push
mov
dec
sub
dec
ret
dec
add
push
rorl
jmp
mov
in
mov
setae
mov
cwtl
out
cmp
insb
mov
xchg
hlt
dec
je
mov
cmpl
adc
add
mov
mov
popf
scas
stos
mov
mov
imul
xchg
mov
popf
popf
push
arpl
repz
sub
cmp
dec
loop
mov
js
and
out
pop
cli
pop
outsl
adc
jae
mov
aaa
lcall
aas
ja
jb
push
les
scas
loopne
rcll
sti
adc
mov
mov
cwtl
addl
test
data16
test
jbe
loopne
push
jno
iret
or
fisttps
xchg
cmp
xor
mov
sbb
jl
cltd
stos
cmpsl
mov
shr
dec
cmp
or
cltd
inc
jge
mov
pop
movsb
dec
aaa
leave
pop
cmpsb
test
xor
pop
scas
dec
jle
lods
call
fcomp
rorb
lcall
fcoms
mov
out
dec
and
call
pop
out
and
scas
jg
pop
fnsave
mov
xlat
addr16
ficompl
int
dec
sub
int3
mov
push
mov
and
and
sub
popf
shrb
xor
std
test
mov
cld
shlb
fisttps
in
pop
inc
jp
int3
repz
add
movaps
dec
insl
mov
push
enter
sub
ds
inc
insl
jmp
rorl
xor
dec
pop
lret
cld
cmp
cmp
push
jle
shll
mov
xor
js
test
lret
scas
or
frstor
cltd
xlat
iret
dec
aad
daa
sub
add
popa
out
pop
ret
sub
or
pop
outsl
pop
cld
cli
arpl
dec
sti
outsb
pop
adc
cmpsb
int3
andb
adc
push
xchg
pop
js
mov
sbb
push
jno
repnz
push
mov
cld
pop
cmp
jle
rcll
das
mov
cmp
mov
mov
jbe
jbe
in
jns
push
shrl
adc
andb
push
xorb
and
repnz
icebp
cltd
fwait
mov
push
cmp
push
cld
clc
dec
push
scas
adc
cwtl
js
cmpsb
out
daa
sbb
jmp
jle
pop
aas
pusha
sub
mov
mov
daa
inc
dec
clc
popa
fldl
cmp
test
popa
cltd
xor
jno
pop
sub
cmc
pusha
fcmovb
fsub
cmp
mov
mov
adc
js
sbb
mov
je
test
xor
stos
mov
subps
cmpsl
dec
dec
out
call
push
sbb
les
lods
pop
inc
test
sbb
std
lods
ds
in
pushf
jmp
movsl
rorb
push
and
push
adc
imul
adc
stc
jnp
fistps
scas
mov
cmp
push
stc
xor
ja
test
mov
mov
mov
pop
aam
and
fwait
sbb
sub
cmp
jmp
ljmp
rclb
test
lods
sub
mov
mov
enter
sahf
push
cmc
mov
mov
mov
mov
mov
mov
push
mov
nop
cmp
and
ret
fidivs
cmpsl
ficoms
xchg
aad
sbb
lret
and
repnz
jbe
fistpll
loop
and
fiaddl
nop
int
sbb
mov
ret
stos
and
xlat
and
ljmp
lods
hlt
insb
movsl
xchg
jbe
mov
jbe
xchg
loopne
int3
inc
and
movsb
aad
inc
scas
xor
sbb
mov
push
scas
jbe
hlt
cmc
rcrl
adc
sbb
shll
push
iret
mov
inc
adc
leave
dec
out
sub
jl
and
sbb
call
lcall
out
notb
jecxz
jno
pop
adcb
mov
fwait
jno
cmp
mov
sub
sbb
out
movb
das
dec
sub
or
adc
xor
insb
jbe
test
mov
jne
jae
jns
int
fwait
push
sbb
fucomp
insb
fsubrl
fistl
or
mov
ss
inc
cmc
jle
dec
dec
fs
sbb
adc
jo
dec
loop
mov
adc
insb
and
mov
repz
rol
mov
daa
into
fcom
ret
adc
mov
xchg
jno
into
push
dec
lcall
icebp
cld
ja
rcrl
sti
nop
icebp
xchg
aad
cmp
pop
dec
shll
or
or
bound
inc
jns
jl
std
fldl
repz
jp
in
mov
sbb
pop
out
dec
int
jnp
mov
xchg
add
pop
add
popa
aas
mov
les
pop
mov
add
dec
lds
jge
lcall
arpl
je
xchg
in
sbb
fidivrl
add
dec
fimull
and
adc
testl
mov
je
idivb
leave
addl
call
shll
les
pop
int3
gs
and
shlb
sub
pop
cld
jge
pop
outsl
clc
dec
fidivrl
pop
cmp
in
jbe
mov
mov
cmpl
dec
cwtl
jno
cmc
mov
and
xlat
std
sub
je
jb
mov
push
sbb
popf
cmpsl
outsb
js
add
or
lea
push
push
pop
int
adc
arpl
mov
cs
push
je
xor
cli
in
and
mov
lret
int
pop
rcrb
xchg
adc
imul
lds
push
out
add
cmpsl
int3
clc
or
or
and
xchg
lods
lods
cmp
xorl
mov
or
mov
call
push
and
and
lret
jg
je
imul
mov
in
jge
push
loopne
mov
push
mov
filds
mov
jmp
dec
pop
ss
jns
not
xor
xor
xchg
mov
lahf
ja
adc
mov
aam
push
movsb
cmpl
fisubrl
in
pop
and
sub
push
add
insb
push
jge
iret
lret
cmp
je
sub
mov
mov
xor
mov
loopne
in
hlt
es
outsb
xor
scas
push
test
push
test
dec
jae
sbb
int
aas
and
add
cltd
push
sarb
call
jbe
lret
push
push
fwait
xchg
sbb
scas
ljmp
mov
jae
scas
push
test
fadds
and
clc
push
mov
test
jg
sbb
stos
imul
adc
dec
mov
sub
aaa
cltd
or
push
movsl
or
insl
dec
push
adc
int3
pop
lahf
sbb
stc
xlat
bound
sbb
lods
fadd
sbbb
mov
dec
aas
aas
lahf
pop
or
xchg
push
lds
jl
mov
stc
adc
mov
cltd
or
ds
lcall
cmp
sbb
jnp
push
mov
cmp
sub
mov
cmpsl
or
call
das
pop
sbb
cmp
cmpsl
inc
je
mov
call
sbb
shr
es
cmp
mov
lahf
pushl
dec
fdivs
stos
andl
xor
lods
cwtl
push
mov
fimull
sub
sub
sarl
mov
idivl
inc
pop
xchg
stos
pop
test
jns
inc
dec
inc
aas
add
ret
in
dec
dec
loop
movsl
xchg
inc
nop
mov
or
sub
lcall
add
imul
sbb
lods
lret
push
imul
lahf
lock
sahf
and
cmpsl
lcall
repz
push
lock
lods
cli
mov
aad
push
jne
movsb
test
jmp
subl
in
icebp
scas
and
inc
push
daa
pop
stos
out
sarb
lds
sarb
test
loope
mov
filds
inc
insl
inc
and
out
outsl
lahf
loopne
push
xchg
hlt
jl
inc
test
daa
movsb
addr16
test
js
xchg
jo
cmp
loopne
add
lahf
and
shrl
push
je
jb
mov
ss
xlat
mov
push
or
sub
ss
cmp
add
bound
nop
sub
data16
fildll
push
add
test
std
stos
xor
dec
cmp
adc
jae
jns
repnz
pop
jbe
sub
adc
pop
insl
jb
cli
lods
call
push
xchg
dec
jle
ret
lcall
fwait
rcrl
cmp
int3
mov
sbb
pushf
lods
mov
mov
sti
imul
rorb
fnstsw
mov
sub
les
jge
enter
jle
insl
leave
outsl
cltd
out
shr
pop
ja
push
fisttpll
mov
adc
fs
xor
add
add
or
cltd
movsl
fcomi
cmpsl
dec
push
repz
cmp
sbb
push
mulb
bound
ljmp
popf
or
jle
lods
leave
pusha
push
sbb
sbb
fcomip
pop
call
cmp
inc
shr
ds
lret
test
out
cmp
pop
xchg
aas
addl
dec
cmpsb
xchg
jg
jmp
cmp
sub
inc
sbb
lret
sbb
mov
sub
jg
lods
inc
mov
icebp
pop
icebp
mov
add
cld
jg
hlt
mov
xchg
into
idiv
lcall
mov
out
add
lock
std
jo
rclb
out
xlat
push
sub
dec
call
adc
pop
and
movsb
das
xchg
pop
popa
int3
scas
jnp
scas
lcall
ja
movsb
xor
call
add
mov
lock
push
popa
mov
aaa
push
or
pushf
in
shll
pop
leave
test
ljmp
sbb
xchg
rol
pop
or
mov
js
mov
mov
rolb
jns
ljmp
cmp
int3
or
xchg
pop
xor
mov
lret
push
jmp
sub
and
fwait
cld
mov
es
std
dec
adc
or
jno
xlat
or
inc
cmp
pop
push
insb
das
mov
mov
out
inc
pop
int
xor
pusha
int3
xchg
lahf
andl
xor
dec
xor
and
les
and
mov
push
ss
and
and
int
loop
ret
push
mov
sbb
gs
lock
inc
mov
lods
xor
mov
cmp
xchg
bound
inc
xchg
mov
or
jno
in
add
es
outsb
dec
pop
js
sti
lcall
jnp
imul
test
mov
cmp
mov
imul
or
mov
push
ljmp
pop
out
orl
mov
pop
fucomp
jne
scas
mov
int3
shlb
push
shrb
inc
cmpsb
mov
scas
out
adc
incb
mov
jmp
addb
jp
nop
mov
pop
hlt
jns
mov
and
int3
and
mov
stos
loop
mov
mov
cmp
out
rolb
lock
insl
mov
mov
cmp
mov
outsl
repnz
pop
xchg
in
mov
or
stos
imul
fwait
inc
xchg
scas
push
in
outsb
cmp
ret
mov
repnz
jge
cld
cli
pop
cmpsl
jne
je
sahf
or
mov
dec
das
inc
jno
insl
data16
mov
dec
ja
sub
push
test
or
jae
out
cmp
fsubrs
out
mov
mov
and
leave
adc
aaa
loopne
inc
rorl
mov
fstpt
insb
mov
inc
fdiv
mov
fistpll
fsts
imul
mov
pushf
jmp
push
mov
mov
jae
mov
andb
push
mov
dec
dec
pusha
int3
lods
clc
dec
push
adc
imul
lcall
fs
mov
pop
mov
negl
xor
pop
ljmp
push
testb
pop
inc
pop
arpl
pushf
outsb
data16
popf
push
icebp
shll
pop
je
add
xor
pop
shr
inc
loop
push
mov
cmpl
inc
mov
pop
cwtl
ss
test
push
arpl
ret
mov
cmp
pop
jae
inc
adc
leave
jg
scas
and
jne
pushf
push
mov
std
or
and
pop
bound
sub
insb
je
adc
ret
or
mov
cld
sahf
pop
mov
mov
dec
mov
inc
pusha
into
mov
mov
pop
mov
dec
test
push
hlt
stos
add
mov
sbb
add
bound
fcmovb
stos
pusha
add
adc
aaa
cwtl
popf
mov
xchg
lock
xchg
pop
and
xor
mov
cmp
sarb
in
jg
icebp
push
pop
push
add
inc
jns
add
xchg
cmp
lock
adc
int
and
lds
stc
fwait
mov
inc
hlt
adcl
repz
pop
movsb
cli
sbb
out
xor
mov
nop
push
and
addl
outsb
xchg
fsubrl
lret
xor
mov
push
jle
out
inc
inc
into
push
imul
push
leave
inc
add
dec
test
pop
cs
hlt
outsb
xor
dec
mov
jno
shlb
icebp
les
movsl
aas
push
push
fstps
jns
jnp
es
mov
inc
cmp
ret
push
scas
mov
add
xchg
loope
cmpsb
out
fiaddl
and
adc
mov
adc
push
xor
popf
out
in
test
inc
pop
jns
push
fstpl
insb
sub
mov
cwtl
fdivr
cwtl
call
shr
cmp
in
scas
lea
mov
out
lods
outsl
push
fs
mov
in
ror
or
xor
xor
insb
idivl
rorl
insb
and
mov
movsl
xchg
push
mov
pop
ficomps
mov
sbbl
insl
sbb
cli
push
into
out
pop
mov
push
jbe
mov
jb
int
push
sbb
mov
mov
cmp
js,pt
shll
sbb
dec
in
sub
cmc
xlat
push
push
sub
aas
outsl
ss
cs
shll
jae
addl
lret
outsl
or
xor
lcall
sub
mov
dec
sbb
mov
sub
dec
push
insb
lahf
pop
xor
movsb
dec
mov
push
sub
cmc
movsl
xchg
mov
mov
push
daa
mov
cmp
lds
mov
cs
xchg
push
pop
mov
mulb
aam
out
insl
dec
lcall
lods
bound
inc
push
lgs
fimull
inc
and
xchg
inc
inc
in
stc
xchg
jb
das
mov
jmp
shl
pop
cmp
and
or
sbb
pop
andl
mov
insl
call
bound
fimull
mov
loopne
mov
loopne
out
mov
stc
cmove
cltd
xchg
lret
test
xchg
cld
int3
jle
push
mov
push
sti
jae
data16
pop
xchg
in
pusha
icebp
mov
into
push
into
push
addr16
shrb
hlt
jo
and
lods
mov
int
pop
fmuls
jo
in
push
fdivl
sbb
jae
mov
loop
mov
mov
fisubrs
sbb
out
sbb
leave
xor
int
cmp
shrb
sbb
negl
mov
adc
cld
enter
cmovge
jae
mov
shll
or
add
xchg
lods
loop
jnp
into
jmp
xor
cmp
out
xchg
sbb
add
pusha
imul
cmp
sbb
sbb
cmpsb
mov
movsl
or
mov
arpl
xchg
mov
mov
pop
cmp
dec
add
xchg
jne,pn
in
push
std
mov
into
sbb
pop
pusha
add
sti
ret
das
das
fisttpll
ret
sbb
mov
or
popa
ret
and
lret
mov
jbe
aad
movsl
jp
fbld
jl
mov
jb
cmpsl
push
clc
push
imul
push
add
std
add
insb
notl
mov
mov
dec
lods
mov
in
pop
les
lods
sarl
adc
xorl
xor
loop
out
movsl
jecxz
xor
in
push
mov
gs
cltd
dec
dec
pop
jne
push
mov
fisttps
shlb
cmp
repnz
add
jne
movsl
repnz
insl
call
xor
sbb
arpl
idivb
movsl
popa
sahf
dec
roll
lds
cltd
popa
push
lods
cmp
or
cmc
into
subl
arpl
xor
inc
pop
sub
push
subl
fiaddl
xchg
sub
sbb
repnz
jns
xchg
jecxz
repz
xor
lods
int
fisubrs
mov
cmp
sti
sbb
cmc
sbb
ljmp
cmp
inc
and
sbb
xor
cmp
and
cmpsl
cmp
lods
mov
adc
push
inc
stos
jle
sarl
inc
fsubl
insl
faddp
xor
ja
fistl
pop
jbe
pop
movsb
pop
ja
insb
fiadds
mov
test
xchg
aaa
and
cmp
dec
fistl
movsb
mov
xchg
loop
and
data16
xor
push
and
jo
mov
xchg
rol
sahf
outsl
out
into
repz
push
ds
in
std
push
xchg
fnsave
or
in
mov
rcrb
mov
movsl
dec
frstor
add
cli
xor
add
dec
repnz
push
gs
cmpl
shl
insl
scas
inc
call
shufps
or
xorb
test
fmul
mov
inc
fstl
mov
insl
mov
ret
adc
dec
cmp
or
mov
jne
jnp
loop
inc
loop
jnp
mov
clc
sub
push
and
aam
push
adc
pop
imul
fadd
loope
subb
xor
mov
jno
pop
mov
jne
fxch
inc
test
push
add
js
int
xchg
test
adc
push
push
cmp
adc
add
and
movsl
pop
lcall
sub
cld
rcll
lcall
xchg
divl
add
lea
and
ljmp
in
mov
xor
push
sub
movsb
cmp
cwtl
jns
mov
jl
mov
cmp
pusha
inc
aaa
shl
movsl
sub
lret
notb
repnz
mov
mov
call
ficomps
xchg
add
pop
aas
lods
mov
ret
inc
xlat
rcrl
rcl
mov
xchg
test
mov
or
aam
ret
out
push
mull
daa
mov
int3
mov
bound
adc
jb
add
xchg
dec
dec
cmp
xchg
fdivr
sub
imul
rolb
jp
jge
xor
push
mov
xor
xchg
jl
or
jns
imull
sar
ficomps
std
hlt
sti
mov
cmpb
or
mov
pop
or
cmpb
mov
fdivrl
lock
xor
push
dec
cwtl
mov
std
cmp
lock
cmpsb
dec
or
roll
decb
ljmp
add
or
push
push
xor
dec
xchg
mov
fld
mov
inc
cmp
lcall
dec
jg
mov
fs
pop
sarb
out
divb
xchg
add
std
stos
nop
mulb
sub
cmpsl
add
je
out
cmpsb
push
pop
lcall
mov
xor
lds
push
insl
aaa
push
jge
and
sbb
or
stos
pop
cmpl
jne
or
out
fidivl
test
xchg
insb
cmp
jns
jns
jl
mov
int3
sub
imul
es
out
mov
inc
xchg
in
adc
cmp
dec
movsl
cmp
lea
mov
push
ffreep
xchg
popa
jl
jmp
leave
mov
popa
or
pop
repz
mov
adc
test
pop
jp
cs
jmp
push
xorb
sarl
fdivrs
stc
pop
sarb
xchg
out
mov
iret
outsb
das
inc
lret
ret
xchg
mov
push
andnps
mov
add
pushf
movsl
cmpsl
inc
sbb
xchg
xor
cmp
dec
shlb
cmp
or
dec
mov
orl
stos
sbb
scas
mov
push
test
pop
jne
xchg
shl
pop
out
cmp
addr16
es
mov
stos
call
pushfw
out
cwtl
add
jge
sarl
scas
mov
ljmp
inc
inc
cmovns
mov
jne
cld
adc
lret
iret
ljmp
roll
xchg
iret
ret
xchg
ret
pop
mov
xchg
inc
int
xor
mov
js
sbb
lret
jmp
fcmove
mov
add
pop
lds
cmp
loop
stc
sbb
inc
sbb
pop
jg
repz
cmp
in
push
js
jo
popf
in
adc
enter
nop
jg
sub
lcall
fsubrs
inc
dec
cs
mov
jmp
enter
jle
addr16
imul
inc
mov
dec
testb
xlat
pushf
xchg
daa
push
ret
repnz
xchg
fdivrs
mov
add
push
loope
out
cmp
add
jp
jl
push
mov
mov
adc
sub
rorb
and
imul
cmp
mov
adc
add
ljmp
cmp
and
stos
mov
ja
popa
scas
dec
adc
adc
testl
mov
jle
int
in
jmp
fld
jno
pop
rcl
inc
cmp
data16
shl
sahf
les
cmp
mov
leave
add
arpl
mov
pushf
pop
sbb
add
pop
sub
push
movsb
dec
cld
mov
pushf
fidivl
xchg
sahf
aad
les
es
fs
xlat
mov
mov
or
fwait
add
push
dec
stos
leave
fimuls
sbb
out
fldl
stc
jmp
ret
or
lods
lret
jbe
adc
rolb
gs
add
and
mov
incl
les
and
in
in
xchg
or
mov
xor
mov
imul
and
jo
lock
fldl
ljmp
mov
stos
mov
jp
push
sbb
ret
mov
push
cmp
mov
xlat
out
daa
or
inc
push
jl
sub
into
sbb
push
cmpsb
iret
jne
subb
mov
inc
push
jb
mov
inc
nop
icebp
and
ret
ret
data16
push
repnz
test
mov
xchg
jns
mov
jb
inc
xchg
inc
cmc
jnp
gs
xchg
roll
ss
popa
mov
sti
pop
mov
sub
dec
popf
fmull
fisttpl
adc
dec
cltd
ljmp
lcall
popf
sar
gs
and
cmp
sarl
popa
loop
jb
fildl
sti
jns
or
xor
xchg
mov
mov
ret
stc
lcall
mov
xor
sub
dec
xor
and
push
cmp
mov
pop
fcompl
lret
std
call
shrb
adc
pop
aas
scas
cld
int3
scas
js
sub
es
int
jecxz
jb
pop
std
lock
aad
aas
mov
jbe
repnz
xor
dec
xchg
cmpsb
daa
jns
mov
push
syscall
mov
cmp
mov
int
dec
out
jmp
xchg
push
sub
stos
nop
cmpsl
mov
dec
arpl
insl
cli
xor
fsubp
shrl
adc
gs
sbb
push
jae
mov
cmp
add
sub
js,pn
adc
xchg
push
dec
scas
shlb
stos
jb
and
mov
or
xor
or
push
sarl
push
xlat
loop
shrl
dec
push
movsl
out
fdivl
mov
pushf
adcb
push
lock
xchg
dec
lock
xchg
dec
mov
xchg
dec
test
sti
pop
fs
lds
aaa
push
lret
add
or
jbe
adc
int
mov
leave
cmp
roll
adc
inc
add
add
nop
fs
test
dec
and
add
cmp
adc
push
sbb
adc
or
scas
xchg
pop
mov
pusha
mov
pop
mov
xchg
sbb
and
mov
dec
mov
mov
out
std
push
and
cmp
xchg
les
adc
xchg
mov
popa
and
mov
dec
cmpsb
push
sbb
imul
adc
sbb
adc
xchg
icebp
xchg
shl
sub
cmc
movsl
cltd
imul
es
lahf
insl
xchg
sbb
arpl
test
jns
jp
push
dec
lods
test
jmp
xor
rcll
lret
shll
and
pop
add
xchg
int3
cmp
fadd
inc
aam
sbbb
push
pop
xchg
iret
push
xchg
push
xchg
ljmp
mov
sub
ja
stos
shll
xlat
test
or
cli
mov
stos
mov
pop
lea
jo
leave
sbb
andb
inc
xchg
gs
or
mov
dec
jecxz
lahf
pushf
insl
jecxz
insl
test
jne
push
dec
js
or
push
vmread
imul
sbb
mov
setno
fiadds
test
arpl
pop
sahf
xlat
add
jecxz
mov
rorl
and
cmp
push
inc
jo
and
int3
mov
cmp
popa
cli
jle
jp
and
bound
sarb
push
inc
cmp
pcmpgtb
aad
push
push
jle
inc
jp
sub
or
cmp
fisttpl
bound
or
repz
mov
xchg
mov
dec
mov
mov
lock
inc
imul
sub
call
shrb
sub
insl
mov
xchg
cli
stc
rcll
sti
movsl
out
fnsave
sub
mov
dec
mov
jge
stos
lods
xchg
dec
sti
pop
lock
sub
in
and
xchg
pop
ret
stos
fidivrl
pushf
insb
and
aad
sti
sub
jno
cwtl
lods
cld
xchg
mov
mov
sub
cmc
or
nop
enter
ss
incl
bound
cs
mov
or
xchg
ds
pushf
out
xchg
shlb
adc
lea
push
subb
cmp
cmc
or
jmp
ret
movsl
mov
shr
test
xor
enter
std
add
leave
loop
daa
incl
xor
jbe
in
ret
or
mov
lahf
adc
out
lea
mov
push
jg
divl
adcb
mov
adc
xor
imul
icebp
mov
mov
push
and
mov
push
loopne
scas
test
sub
xor
dec
repz
outsb
cld
xlat
mov
pop
pminub
sub
or
xchg
ja
ror
ret
pop
inc
cltd
pushf
pop
mov
jns
mov
cld
ljmp
dec
xchg
mov
xor
ljmp
leave
xor
jmp
lds
sub
cld
fst
inc
aaa
dec
cmp
mov
cld
les
sbb
mov
pop
arpl
inc
mov
push
mov
in
dec
cmc
mov
popf
fstl
jge
dec
add
push
shlb
in
mov
movsb
pop
imulb
and
adc
sub
dec
push
mov
pusha
aas
adcl
and
pop
sub
aas
push
test
sbb
test
mov
sahf
adc
lock
out
out
pop
jmp
rclb
bound
stc
sbbb
sub
push
cld
addl
xor
cltd
cwtl
mov
sub
leave
jnp
push
cmpb
arpl
jno
push
inc
cltd
cltd
or
inc
or
int
sbb
das
arpl
cmpsb
sub
sub
and
or
in
andl
pop
cltd
icebp
lret
shrl
dec
mov
and
cmp
imul
test
push
repz
push
push
inc
add
imul
pushf
sub
icebp
dec
divl
lret
jecxz
and
mov
insb
lock
adc
lea
clc
or
jle
gs
ret
cltd
fimull
arpl
push
mov
push
icebp
call
xchg
into
daa
mov
aaa
sbb
inc
jae
push
cmovae
data16
shr
movsl
adc
sarl
ret
test
sahf
xor
addr16
jns
cli
xor
shrb
cmp
test
sbb
xchg
adc
mov
call
mov
inc
and
out
xchg
loop
push
mov
aaa
jl
call
arpl
or
clc
xchg
pop
adc
movb
pusha
enter
xor
andb
std
inc
mov
mov
test
push
mov
push
jnp
sub
repnz
aas
lods
dec
dec
lret
faddl
adc
pop
call
sldt
xor
and
xchg
int3
sub
fs
pusha
jne
pop
roll
push
push
movsb
ret
xor
mov
into
std
mov
test
int3
cltd
xor
popf
mov
lea
cmp
pop
aas
push
mov
sbb
jle
pop
movsb
or
inc
mov
jo
pop
aad
mov
rcrb
int3
and
scas
and
mov
icebp
test
pop
xchg
dec
aas
mov
or
xor
inc
imul
popa
adc
push
jmp
jge
push
fucom
mov
aas
push
es
push
repz
pop
aam
js
push
leave
pop
mov
sti
jg
mov
jo
out
scas
out
pushf
pop
add
popf
mov
hlt
lods
sub
imul
dec
push
iret
aaa
pushf
ljmp
repnz
int
jne
stc
imul
imul
cmp
mov
adc
sub
sub
sub
mov
outsb
sub
inc
dec
pop
lods
inc
sahf
psubusw
jnp,pn
fidivrs
mov
stos
scas
aas
repnz
loopne
lds
inc
shlb
cmp
out
pop
sub
inc
sub
xchg
lods
fs
sub
je
and
in
pop
loope
sbb
cltd
jno
lds
test
lahf
stos
ds
dec
mov
lods
dec
or
les
shlb
push
sub
and
dec
fs
push
cmp
jmp
jae
test
cltd
cmpsb
aad
lret
data16
shll
push
ror
jle
push
add
cmpsl
cmp
mov
sti
gs
sub
test
mov
fwait
xchg
mov
out
push
clc
imul
xor
sbb
push
dec
xchg
mov
jns
inc
mov
cmc
cmp
dec
repz
add
fstl
pop
push
lods
gs
or
stos
dec
ds
cmp
push
lds
mov
cmp
pop
aad
aad
add
xlat
nop
xlat
pop
scas
ret
mov
aam
ljmp
mov
xchg
adc
add
xchg
or
xor
call
imull
jne
test
cmp
inc
pop
mov
cmp
lcall
in
xor
sbb
mulb
adc
jae
shll
sub
cmc
mov
fnstenv
movsl
mov
inc
aaa
push
mov
and
fwait
loope
xchg
sbb
pop
pop
mov
out
mov
sbb
xor
aaa
and
bound
xchg
add
xchg
scas
pop
mov
xchg
test
fwait
or
cmp
push
repnz
jp
xchg
jno
jmp
aam
jae
inc
andl
pop
push
xchg
stos
lods
sbb
jecxz
into
xor
dec
fidivl
lods
sub
adc
nop
push
mov
dec
add
cmpsb
fistpl
and
pop
je
push
insb
dec
or
aad
or
mov
mov
gs
mov
mov
xchg
lock
jge
lock
push
imul
outsl
loop
roll
imul
mov
imul
inc
cmpsb
js,pn
xchg
sub
mov
push
mov
inc
pop
inc
cli
cwtl
mulb
shrb
and
in
jmp
stos
data16
mov
dec
dec
sbbl
dec
sbb
aam
aaa
cmp
jb
jo
cs
push
jo
in
xchg
daa
gs
and
insl
loopne
mov
jae
repnz
hlt
popf
or
in
iret
in
xor
clc
sti
arpl
movsb
insb
mov
inc
popl
pop
pop
or
cmpsb
jmp
movsl
gs
repnz
or
popf
and
test
jle
jge
dec
cs
mov
inc
push
or
pop
andb
iret
push
sub
mov
push
dec
xchg
aad
test
pop
mov
and
mov
cld
sahf
dec
push
xchg
dec
scas
dec
or
or
cltd
xchg
repnz
loop
aam
jge
pop
mov
pop
or
jno
adc
inc
mov
inc
clc
adc
cmpb
or
nop
jns
in
out
lods
dec
jl
int3
xchg
pop
out
mov
lods
fists
pushf
push
popf
iret
outsl
xchg
cmp
push
push
aad
cli
add
mov
mov
stc
dec
cmp
ja
push
and
lock
cmp
in
push
jae
mov
shll
push
push
dec
cmp
out
xchg
adc
cwtl
out
dec
stos
jae
out
imul
inc
inc
jge
sub
lods
in
sub
data16
into
std
sti
iret
mov
out
mov
jo
inc
mov
xchg
orl
xchg
adc
sti
aad
aaa
and
ja
jo
add
test
int
mov
adc
push
push
cmp
fnstenv
pushf
sub
mov
cmpsb
dec
lcall
cltd
mov
insl
mov
popf
xorb
in
mov
sbb
mov
ss
loopne
jl
or
int3
cld
aad
out
fldl
sbb
ret
adc
mov
in
fs
inc
arpl
in
bound
sbb
sbb
shlb
push
stos
gs
repz
push
or
arpl
push
aam
or
mov
mov
mov
sbb
test
jnp
lret
cmp
adc
es
aad
or
sub
insl
and
call
stos
mov
adc
imul
mov
je
cmpsl
rol
fistpl
lcall
jns
subl
cmp
xor
and
shll
mov
aad
int
xor
ror
mov
pop
pushf
dec
imul
outsl
xchg
pop
and
jb
test
pop
or
out
lahf
xchg
stos
xchg
ficoms
or
add
adc
mov
or
inc
shrb
repz
enter
sbb
sub
cmpsb
jbe
icebp
mov
lods
xor
js
in
inc
popa
mov
mov
push
scas
push
mov
subb
jl
mov
in
sahf
sub
in
dec
and
inc
sbb
jmp
add
dec
daa
push
pop
inc
adc
sub
icebp
es
gs
jp
push
repz
cmp
push
cltd
imul
mov
xchg
mov
xchg
sub
and
xchg
cmp
mov
xor
sbb
aaa
cmc
ss
cmp
mov
jp
pop
mov
push
cwtl
idivl
mov
ss
sub
outsb
cmpb
jbe
test
fnsave
push
pusha
cmpsb
addr16
mov
stos
jns
cmp
nop
fimuls
cwtl
cwtl
xor
mov
andb
inc
sub
jp,pt
pop
xor
outsb
jnp
or
mov
pop
xchg
mov
mov
insb
sarb
data16
pop
hlt
pop
xor
sbb
rcl
pop
add
cmp
lds
mov
add
push
sbb
rcr
out
sahf
sub
mov
sub
gs
in
insl
push
mov
inc
xchg
jecxz
cmpsb
add
mov
inc
mov
mov
mov
gs
mov
mov
cltd
add
movsb
lahf
push
aad
lods
cmpsl
jae
adc
jp
ss
cmpb
out
and
or
mov
pop
jbe
addr16
stc
mov
rolb
ret
stos
loopne
dec
push
testl
mov
jmp
sub
sub
mov
dec
push
sub
xor
and
enter
lods
scas
xor
jo
inc
into
xchg
push
cmpl
add
inc
add
cmp
jne
sahf
inc
mov
dec
mov
mov
or
push
push
scas
stc
test
cmp
pop
jno
out
insl
jno
and
stc
sub
push
add
adc
subl
fnsave
testb
and
insl
pop
cmpsl
adc
fnstenv
pop
inc
es
push
in
pop
mov
mov
iret
cmp
jne,pt
inc
or
xchg
push
push
sub
pop
movsb
loope
jo
jo
fcom
or
and
or
cmp
cmpsl
pop
pop
inc
repnz
mov
push
fs
push
daa
imul
dec
and
nop
add
movsl
cmp
mov
test
lods
push
xchg
xor
icebp
dec
and
push
add
sahf
popa
mov
push
movsl
mov
ret
gs
movsl
push
icebp
sarb
add
and
jle
adc
xchg
ret
adc
mov
arpl
mov
mov
ret
xchg
dec
push
imul
ljmp
loope
mov
loope
outsl
out
sbb
fldenv
ds
jne
fwait
mov
mov
dec
push
jp
mov
movsb
inc
xchg
scas
mov
mov
add
mov
rorl
ds
fwait
jno
sub
hlt
repz
xorb
inc
inc
push
mov
repz
fbld
or
lret
pop
sub
test
out
push
cmp
outsl
outsb
mov
sub
or
std
push
icebp
cmpsb
stos
mov
std
repnz
add
imul
jg
sbb
dec
jns
movsb
out
cmp
nop
add
jbe
xchg
pusha
mov
addr16
inc
das
in
push
and
icebp
lahf
aam
aaa
jnp
add
xor
or
jo
dec
xchg
dec
cmp
ds
fstps
sbb
push
shlb
in
push
pop
mov
inc
push
mov
imul
dec
andl
inc
ja
xchg
inc
jl
cmpsl
inc
sbb
adc
mov
add
add
inc
cltd
and
cmp
stc
mov
shlb
cld
add
jb
pusha
cltd
inc
into
cwtl
push
testl
and
icebp
ss
jbe
inc
lret
sti
inc
mov
enter
mov
xchg
insb
pop
pop
or
aad
or
jb
test
pop
dec
adc
pop
lcall
mov
add
lods
outsl
jo
xchg
clc
mov
pusha
in
lret
fsubs
or
cmp
mov
in
popa
dec
pusha
xchg
in
mov
les
xchg
pop
orb
fcmove
jecxz
sub
mov
ljmpw
pop
imul
dec
pop
ljmp
xchg
inc
xchg
cmpsl
cld
jg
aad
pop
mov
stos
arpl
fcompl
frstor
icebp
loopne
insl
push
sub
xchg
pop
dec
dec
xchg
sub
dec
pop
inc
mov
insl
stos
mov
fidivrl
shll
test
movsb
mov
cltd
les
xor
adc
lahf
sbb
push
daa
bound
jge
jno
movsl
jmp
stos
or
xor
dec
popa
ret
sub
inc
mov
add
fwait
std
ja
scas
divl
push
sbb
sahf
push
inc
fdivs
jnp
jle
jmp
div
gs
scas
cltd
jg
mov
xorl
xrelease
sbb
add
xor
hlt
mov
mov
sub
push
daa
sbb
cwtl
es
fwait
or
mov
fbld
mov
test
call
add
mov
shl
shlb
jb
pusha
sbb
cltd
sub
out
mov
sbb
pop
and
pop
pop
pop
push
cmpsl
and
popf
mov
dec
shl
lods
add
cmp
adcb
subb
pop
into
cs
or
aad
sub
rclb
xor
and
imul
sbb
mov
pop
push
inc
dec
lahf
mov
les
dec
cmp
popa
pop
mov
ljmp
nop
ret
lock
push
mov
jge
pusha
incb
repz
mov
pop
jmp
jle
sbb
inc
pop
pushf
daa
in
sub
jne
push
cmc
insb
adc
call
xchg
stos
xchg
adc
in
inc
out
fnstcw
nop
inc
ljmp
xor
dec
lret
rorl
mov
xchg
add
sbb
add
mov
or
xor
pop
adc
adc
clc
pop
mov
pusha
subl
jmp
jmp
mov
mov
mov
mov
jb
push
scas
addb
xlat
sarl
movsl
fisttpll
ss
mov
lds
pop
and
xor
leave
push
ret
loop
pop
jecxz
xchg
and
int
daa
iret
and
in
imul
insl
sahf
pop
sbbl
ds
lock
xor
ja
into
data16
mov
fwait
aad
jo
lret
pushf
sub
inc
inc
and
mov
aas
lea
out
cmp
out
and
mov
mov
sbb
jo
movsb
inc
jne
xlat
mov
shl
push
mov
aam
sbb
fldt
or
xlat
pop
push
ja
pop
adc
mov
lret
or
jne
call
xor
pusha
cmpsl
je
shlb
sbb
push
nop
push
call
mov
pop
adc
rclb
jl
in
repz
sub
push
jnp
shl
inc
dec
ljmp
xchg
jb
xchg
push
test
subb
jno
mov
and
int
mov
iret
mov
adc
jb
lea
cmp
loop
insb
pop
mov
mov
fdivl
xchg
iret
jne
hlt
shl
cmp
fsubr
push
sarl
sbb
out
xchg
and
jle
iret
push
imul
popf
pop
pusha
jno
cmpsl
lret
cmp
or
mov
subl
lahf
dec
mov
icebp
imul
add
jb
jne
pop
inc
xchg
mov
jno
adc
mov
inc
xchg
cmp
clc
lock
mov
rol
imul
cmpsl
test
stos
jae
mull
arpl
or
outsl
lret
adc
adc
out
fstpl
sarl
addr16
xor
xchg
ret
fistl
jo
std
and
xor
mov
sub
xchg
fimuls
jecxz
push
and
adc
pop
inc
les
das
scas
cld
je
inc
jmp
sbb
mov
cltd
fiaddl
sbb
pop
mov
push
subl
jecxz
lock
jle
fisubl
arpl
daa
cmc
cs
imul
popf
imull
data16
call
int3
imul
mov
add
in
jno
cmc
lea
xchg
pop
ja
push
add
in
adc
imul
jp
adcb
enter
jge
loope
jp
mov
and
cmpsl
jo
aam
jge
nop
and
rorl
xchg
cmp
pop
stos
mov
fwait
das
inc
shrl
pop
lret
mul
fucom
or
lahf
pushf
pop
dec
xchg
and
mov
lret
dec
xchg
xor
loopne
pop
movsl
inc
pop
mov
adc
xlat
jp
cmp
xchg
add
push
inc
mov
xchg
jle
inc
dec
mov
test
pushf
jg
ret
sub
inc
fists
xchg
dec
sbb
das
xchg
leave
in
insb
shl
push
pop
xchg
and
jno
ret
rcrl
xchg
dec
xchg
scas
call
adc
pop
icebp
xlat
stc
out
cmp
in
stos
add
repnz
or
test
inc
xchg
stos
push
adc
in
insb
mov
aaa
cli
shld
cld
mov
xchg
xor
dec
pop
roll
sub
shrb
jo
insb
add
mov
arpl
dec
mov
mov
sbb
mov
adc
shrl
dec
add
xchg
jmp
sarl
add
xor
push
pop
jecxz
mov
xor
das
aam
addr16
in
insl
cmp
jl
inc
sbb
aad
lea
mov
push
enter
add
scas
int3
xchg
test
push
pop
mov
and
xor
clc
mov
add
jp
es
jae
push
add
add
sub
cmp
cmp
xor
subl
gs
movsb
add
mov
iret
call
mov
mov
sub
adc
dec
fsubrl
out
mov
frstor
in
popa
jle
mov
ss
lret
and
mov
fiaddl
xchg
mov
and
jbe
xchg
inc
mov
dec
filds
or
iret
aaa
dec
jg
ds
mov
mov
addr16
pop
xchg
mov
fwait
mov
mov
adc
in
or
sbb
lahf
movsl
int
add
cmp
sub
sub
cmp
cld
stos
mov
jae
xor
inc
xor
rcrl
int
push
repnz
jbe
and
jae
mov
divl
mov
sbb
outsb
mov
xchg
lahf
adc
mul
cltd
lcall
lret
xchg
mov
int
add
mov
into
cmp
clc
xor
dec
dec
or
test
fs
jno
fnstsw
test
and
push
in
jns
addr16
rclb
enter
dec
sub
aad
xchg
movsb
fisubl
andb
cmp
cmpsl
dec
out
in
enter
add
fisubrs
adc
outsb
mov
addr16
and
lock
mov
imul
and
mov
mov
aas
aaa
ss
sysexit
cmp
pop
fimuls
push
and
daa
and
sbb
or
test
aaa
popf
add
ja
cs
dec
rcpps
jge
or
loope
cmp
daa
out
inc
je
test
mov
loopne
add
mov
sub
or
shlb
lcall
repz
daa
push
cltd
mov
and
dec
mov
xchg
test
or
xor
shl
out
sbb
pop
and
ja
dec
jmp
jb
iret
or
jnp
js
jge
xor
jecxz
ljmp
jb
shrl
jb
xchg
mov
push
jbe
testb
add
andl
js
sub
mov
scas
sbb
clc
cmp
inc
in
jns
test
gs
mov
add
aad
xchg
jnp
cmp
mov
out
xor
cld
pop
repnz
mov
lods
push
mov
sub
xor
dec
sbb
or
inc
fld
xor
xor
or
ret
inc
and
jb
imul
jge
xchg
xor
xor
mov
dec
or
sbb
push
pusha
and
push
out
cmp
mov
dec
ljmp
mov
or
lock
xor
outsb
gs
stos
fxch
push
sti
imul
fisubrs
dec
scas
ret
dec
xchg
loopne
cwtl
push
add
stc
mov
dec
mov
dec
in
cld
aas
iret
bound
jl
jno
fiaddl
leave
cmc
add
stc
pusha
repz
ss
jg
mov
pop
in
adc
jbe
push
repnz
push
in
cmp
cmp
clc
test
sahf
push
jecxz
xchg
jg
repnz
cs
push
in
inc
cltd
mov
iret
call
xor
xchg
sarl
loop
test
add
adcl
popf
cld
test
mov
mov
lods
push
call
mov
ja
sub
mov
outsb
pop
mov
ds
out
cmp
loope
jmp
cmc
andb
xchg
lds
in
cmp
aad
out
sub
or
mov
or
inc
shrb
repz
fwait
mov
dec
hlt
mov
lods
adc
jge
sbb
mov
in
add
lds
test
les
mov
dec
inc
cmp
dec
mov
xchg
aad
pushf
xchg
pop
dec
ret
push
sbb
ss
jge
push
push
or
mov
or
and
dec
and
stos
cmpsl
mov
hlt
pop
adc
ds
in
cmc
cmpsl
lea
aaa
int
xchg
mov
imul
cmp
push
insb
pop
ss
jae
push
subl
fisttpll
push
aaa
mov
mov
lcall
sub
mov
stos
mov
jne
bound
inc
xchg
je
sbbl
or
pop
push
icebp
fcmovnbe
push
cmp
or
pop
mov
in
xor
loop
inc
sub
jg
std
ror
fs
jl
fildl
mov
pop
mov
inc
adc
cld
cmp
fnstsw
push
jo
or
lahf
jecxz
or
sbb
cld
lods
popa
xchg
dec
aaa
adc
cmp
or
push
pminsw
sub
lcall
cli
push
loop
dec
cmpsb
mov
sbb
cmp
mov
ljmp
push
jecxz
or
add
inc
cmp
lds
arpl
cmp
and
mov
xchg
jmp
aaa
filds
das
sbb
out
pop
mov
out
leave
mov
jb
xchg
mov
sub
ljmp
add
mov
lds
outsb
mov
dec
inc
adc
mov
push
testb
inc
push
bound
lret
inc
mov
ret
pop
or
inc
jp
je
aaa
xlat
rorb
fdivp
rclb
jle
test
ffreep
aad
jns
push
fdivr
jb
in
sbb
fstps
sbbb
lock
sbb
xor
popa
shrl
cmp
dec
push
aad
cmp
pop
mov
rorb
cld
loopne
push
or
pop
add
leave
dec
je
mov
lock
pop
test
sarb
jns
and
mov
out
jbe
dec
daa
js
rcrb
insl
fwait
or
gs
and
pop
mov
pop
pop
frstor
andl
es
xchg
mov
and
mov
into
xchg
je
icebp
rcl
sub
pop
mov
mov
fwait
neg
inc
in
fldenv
shlb
ret
ret
pop
gs
bound
adc
icebp
mov
fcoms
repnz
mov
cmpsl
pop
mov
mov
push
adc
xchg
sti
or
loopne
jno
outsb
sbb
inc
das
fimull
push
xor
pop
cmp
psubusw
mov
pop
scas
rcrb
shr
lds
mov
bound
lock
js
pop
mov
subb
push
out
cmc
pushf
add
mov
insl
inc
sbb
mov
xor
jl
enter
xchg
add
shll
sub
push
sarb
and
popa
sub
push
lods
iret
cmc
hlt
or
pop
ret
push
inc
scas
jne
dec
idivb
pop
xchg
jmp
or
into
push
aaa
repnz
jmp
push
jb
fildl
push
mov
pop
test
aaa
lods
cmp
mov
inc
push
aas
mov
sar
addl
lahf
jnp
jle
dec
pushf
imul
jmp
pushf
out
push
shlb
or
fldl
fldl
pop
mov
pop
push
jno
test
add
push
pop
push
pop
inc
fs
ljmp
fdivrs
dec
out
xchg
mov
stos
push
push
cli
addr16
push
pop
pop
pop
xchg
js
add
nop
pop
dec
cld
and
add
sub
idivb
xchg
dec
add
push
and
in
jns
es
mov
test
inc
jge
inc
pusha
in
sti
and
pop
scas
inc
or
ds
cwtl
jle
add
jle
popa
dec
sub
sub
pop
push
jb
sub
jg
and
jns
mov
lea
jmp
lods
and
insl
je
sub
ljmp
fsubl
cs
inc
push
xor
pushf
xchg
cmp
in
adc
mov
popa
pop
aas
push
mov
addr16
dec
gs
in
sar
aad
jno
js
ret
jg
jg
cmpsb
sub
repz
mov
ret
nop
cmp
fstps
gs
jmp
test
std
cwtl
pop
xchg
roll
or
push
jp
cmp
xchg
or
push
adc
dec
cs
mov
daa
cmc
sbb
cmpsl
popa
jl
imul
leave
xchg
or
xchg
fisubl
orl
add
inc
xlat
and
cli
sub
adc
xchg
popa
iret
sub
sti
repz
xor
push
enter
movsl
fwait
les
dec
lods
mov
xchg
lcall
fsubrs
mov
or
mov
xor
and
sbb
negb
ret
add
or
popf
mov
stos
dec
and
insb
pop
idivl
mov
push
xchg
scas
cmp
mov
mov
push
sbb
fimull
popf
push
mov
pop
jle
or
hlt
fstpl
mov
pop
push
pop
in
in
sar
rorb
adc
sbb
mov
fildll
or
and
sbb
cmpsb
add
in
cmp
cmc
mov
inc
xor
xlat
jecxz
lcall
push
out
cmp
xchg
loope
sbb
stos
lods
outsb
roll
out
mov
push
loope
ss
add
pop
xchg
stos
imul
hlt
fisttpll
cmove
aam
mov
lcall
fwait
nop
sub
nop
fmull
aaa
adc
shlb
fsubrp
and
add
mov
mov
xchg
sub
adc
shlb
addr16
xor
inc
cltd
rcrb
add
xor
add
pop
dec
hlt
scas
pop
test
push
orl
sarb
mov
aam
mov
dec
sub
loope
subb
pop
mov
pop
test
in
fdiv
inc
pop
ffree
movsl
rcr
negl
rolb
std
sahf
push
scas
cltd
mov
mov
inc
pop
pusha
cmp
and
jl
scas
or
fstpt
lahf
cmp
lods
shll
xchg
cmpsl
xchg
jl
push
ds
pop
inc
ret
daa
sti
pop
fsubrl
add
sub
mov
dec
and
test
pop
jecxz
cmp
xchg
inc
push
xor
in
daa
add
mov
lock
mov
ficomps
incl
lods
popf
adc
sbb
xchg
mov
pop
push
int3
push
loope
mov
push
sub
data16
pop
inc
jbe
fninit
mov
mov
jp
jbe
lahf
sarb
scas
pop
xor
iret
pop
add
mov
lods
mov
push
sbb
lret
and
push
fistl
jp
test
and
xor
xchg
es
push
xchg
notb
add
leave
lods
fistpl
push
xchg
mov
sub
mov
xor
mov
or
pusha
pop
ljmp
jbe
pop
test
mov
sahf
pop
mov
adc
push
sbb
inc
arpl
pop
dec
fdivrs
push
xorb
mov
imul
mov
lret
imul
mov
jmp
lcall
xor
mov
lret
fs
xchg
sarb
in
xor
xor
or
es
movsl
movsl
pop
mov
cmp
pop
sti
mov
out
xor
push
fwait
mov
hlt
lahf
bound
mov
jns
adc
mov
mov
cs
xchg
lret
outsl
add
sahf
push
adc
dec
mov
nop
out
and
lds
xor
sahf
ja
sub
xchg
sub
mov
xchg
lock
cmpsb
sub
push
gs
cmpsb
fdivrl
sub
in
and
arpl
stc
loop
outsl
out
mov
add
cmpsb
xchg
scas
xor
xlat
dec
dec
movb
aas
cld
insl
dec
ret
outsl
xchg
push
or
dec
aas
inc
in
bound
loopne
enter
sbb
adc
inc
lds
mov
xchg
inc
mov
dec
lods
outsl
mov
inc
je
add
je
test
mov
cmpsb
ret
or
aaa
xchg
outsl
jb
push
xor
or
mov
ds
sar
push
jnp
push
and
jbe
xchg
jmp
movsl
push
sbb
loopne
inc
cmp
cwtl
jecxz
mov
dec
jnp
push
call
dec
pop
sti
adc
pop
out
xchg
outsl
call
cld
ret
inc
ljmp
cmp
test
in
sub
lods
bound
loopne
mov
xchg
fcoml
shlb
push
push
lret
inc
mov
inc
xchg
inc
test
cmpl
jo
push
sub
aas
in
aad
mov
in
xor
cmpsl
push
lods
lods
mov
cmpsb
sbb
jmp
lea
push
out
cmpl
xlat
dec
mov
xchg
mov
jo
sub
test
xchg
cmpsl
or
call
leave
in
jp
adc
movsb
test
sub
mov
rorb
gs
add
sahf
repz
das
ljmp
movsl
cmp
dec
repz
mov
pusha
mov
pop
mov
and
dec
test
push
cmpsb
imul
cmc
aam
js
jno
jmp
movsl
jg
xchg
mov
inc
cmp
xchg
sub
or
sbb
mov
movsl
rclb
inc
adc
fsubs
ret
das
out
shlb
fdiv
and
xor
rclb
jne
sbb
jmp
cmpsb
leave
pop
mov
add
sub
jg
cmp
sahf
mov
jmp
arpl
jnp
test
ljmp
push
add
and
xor
bound
mul
cmpsl
or
sub
outsb
pop
mov
rol
jns
fistpl
shll
pop
jmp
and
test
es
xchg
sbb
lcall
mov
pop
jecxz
idiv
movsl
rclb
xor
enter
scas
add
in
add
fdiv
cmpl
mov
jle
jno
out
mov
dec
sub
mov
mov
dec
outsb
dec
fs
mov
test
dec
jle
clc
mov
sbb
push
inc
das
in
into
loop
pop
orb
jmp
push
sbb
xchg
add
adc
jp
clc
dec
inc
xchg
outsl
push
jmp
push
cltd
push
inc
adc
sub
and
into
push
daa
or
es
andb
ds
sbb
inc
ljmp
cli
mov
mov
fwait
cmp
cmp
fisubs
mov
xchg
outsb
fbld
out
sub
jmp
mov
sbb
xchg
fmuls
jo
dec
dec
shlb
pop
and
fisubl
pop
sbb
shl
pop
stc
jge
aas
and
fcmovnu
mov
sti
stos
fdivrs
std
sti
push
sbb
icebp
pop
jno
mov
dec
sahf
inc
lods
test
inc
shl
arpl
test
jp
push
lahf
orb
scas
xchg
out
pop
int3
xchg
shlb
push
push
gs
and
stos
xchg
aad
lcall
push
ds
movsb
pop
fimuls
cmpsb
test
sub
ja
cmc
mov
xchg
xchg
lahf
mov
cmp
pop
pushf
cmp
inc
mov
cmpsl
xchg
movsb
and
xor
cltd
test
negl
sub
shlb
inc
in
mov
lds
jbe
out
lods
out
int3
jecxz
push
mov
xchg
xor
jecxz
call
mov
cmp
negb
push
pop
jno
push
sbb
push
movsb
aas
lds
sbb
xor
xchg
hlt
loop
fucomip
cmp
push
or
adc
pushf
push
arpl
xor
out
stos
pop
adc
push
sbb
mov
lea
push
insb
repz
rolb
mov
sub
cmc
insb
jl
idivb
ljmp
inc
mov
jne
mov
adc
pop
xchg
inc
cmp
mov
lret
xor
pop
jno
fisubrl
mov
xchg
jbe
inc
test
cmc
mov
ret
add
inc
mov
push
add
mov
popf
cmp
int
add
inc
pop
or
loopne
aas
mov
sbb
cmp
jg
sbb
andl
movsl
mov
sbb
jmp
push
mov
clc
cs
das
push
rclb
addr16
push
sbbl
mov
cmpsb
xor
fsub
sahf
pop
les
add
sub
lods
adc
roll
or
or
lods
dec
mov
cmp
stc
stos
inc
xchg
fwait
jl
inc
loopne
scas
and
das
and
dec
into
push
mul
push
mov
add
pop
inc
mov
out
inc
arpl
cld
in
push
xchg
das
int3
mov
repz
push
and
push
or
dec
stos
xor
push
repnz
jp
insl
and
test
jns
and
rcl
ja
leave
hlt
leave
mov
sti
fimuls
rolb
fisttps
cli
sbbl
add
icebp
gs
test
insb
cmpsb
cmp
inc
push
in
adc
js
iret
jl
popf
addr16
or
mov
in
add
icebp
push
adc
bound
insb
inc
mov
sbb
fldl
rcrb
xchg
test
sub
test
xchg
pusha
popl
das
add
push
or
aaa
std
mov
jno
gs
xchg
sub
scas
mov
adc
int
jl
mov
adc
mov
insl
push
mull
inc
xor
movsb
or
loopne
sub
hlt
cmpsb
mov
ja
andl
add
addr16
xor
sbb
or
push
js
or
xor
mov
dec
insb
jbe
xchg
sbb
jb
hlt
lods
fdivrl
shll
xchg
mov
adc
inc
pop
ficomps
in
xor
cmp
push
ficoms
inc
pop
pop
popf
xchg
cltd
adcl
repnz
adc
loope,pn
push
mov
mov
in
and
inc
shr
pushf
push
or
push
clc
jb
push
dec
sti
stc
lret
addr16
sub
push
add
pop
pusha
mov
mov
aad
jmp
sbb
push
adc
jmp
loope
xchg
insl
ljmp
gs
xor
testb
lahf
fistps
bound
pop
hlt
mov
push
out
sbbl
pop
dec
jmp
adc
inc
movb
gs
xchg
inc
dec
js
jg
daa
xor
mov
scas
lea
mov
push
and
icebp
lods
inc
mov
int
out
mov
pop
lret
mov
jns
sub
mov
jae
aas
mov
test
xor
or
xor
jg
into
mov
rorb
loope
adc
adc
ljmp
fcompl
das
sbb
in
fidivrs
in
sub
mov
dec
xor
loopne
or
pop
add
das
gs
mov
inc
push
nop
or
sub
sarb
imul
movsb
jnp
jge
inc
imul
mov
test
mov
lock
cmpsb
aad
stos
aad
ficomps
lcall
push
cmpsl
dec
mov
xchg
mov
lret
ja
dec
mov
loope
pop
ret
or
int
dec
das
lods
mov
and
inc
dec
insl
bound
enter
push
call
mov
outsl
inc
jno
cltd
shr
cmp
call
jo
xchg
cmp
jp
inc
inc
cli
cmp
adc
pop
movsb
cwtl
push
stc
mov
out
dec
pop
pop
push
out
push
dec
stos
mov
add
ds
ljmp
lret
dec
lahf
mov
inc
jnp
es
mov
push
push
cmc
push
dec
push
jnp
and
xor
nop
in
pop
enter
gs
out
mov
aad
mov
add
cmc
mov
mov
jg
push
mov
and
and
add
sahf
xor
hlt
cmpsl
fstpt
sub
sub
into
ljmp
sub
mov
adc
inc
bound
mov
in
sub
and
push
ret
xchg
push
iret
pop
pop
mov
mov
loopne
js
lock
adc
push
cmp
pop
or
inc
cmp
dec
in
cs
dec
test
mov
sbb
stos
bnd
enter
jae
es
sub
dec
gs
inc
inc
icebp
or
jnp
cmpsb
push
or
lods
ds
ret
sarl
lock
xchg
les
mov
sub
mov
ja
mov
adc
cmc
sbb
aam
mov
cmc
leave
out
pop
cmc
int3
adc
ficoms
mov
movsb
test
mov
notb
and
adc
push
nop
ret
stos
arpl
lret
push
pop
add
lret
jns
xchg
fmuls
rol
pop
mov
xchg
adc
sbb
inc
or
fidivs
adc
lods
jnp
sbb
pop
dec
pop
insl
cmpsb
mov
mov
adc
inc
js
cmpsb
pushf
push
cmc
jo
sti
out
or
mov
add
pop
cmpsb
testl
insl
pop
and
pop
call
rcrb
andb
das
sbb
mov
clc
flds
imul
sbb
jns
xor
imul
mov
in
cmpb
bound
xor
mov
stos
lods
push
leave
jmp
push
stos
icebp
leave
sbb
lods
and
lods
je
mov
test
mov
cmpsb
dec
pop
cltd
ret
imul
loopne
jge
cmp
and
push
push
mov
scas
sub
into
insl
or
mov
mov
inc
movsb
mov
out
fists
cmp
mov
xor
dec
fstpt
xor
xlat
mov
push
out
rcrl
mov
dec
or
xchg
sahf
push
cmpsb
push
js
jl
outsl
lods
cmp
or
js
adc
ds
test
insb
flds
in
pusha
les
bound
pop
jl
and
xchg
cltd
xchg
and
and
aam
push
aas
cli
mov
sti
sub
inc
fdiv
ret
dec
push
in
cmp
outsl
sarl
sub
dec
aam
cmc
aad
orb
icebp
mov
mov
lea
ja
or
jmp
lods
and
cmc
and
dec
int
jno
pushf
cmpsl
inc
sbb
loopne
jecxz
sub
stos
cmp
add
cmpl
and
ds
mov
cmpsb
fistpll
cwtl
clc
loop
stos
popa
lock
cmp
shrl
jmp
or
testl
cmp
xchg
leave
ret
xor
jne
dec
enter
cmp
dec
fbld
aam
mov
or
addr16
lcall
mov
les
clc
mov
and
loopne
insl
xchg
sub
fimull
test
mov
arpl
mov
dec
push
mov
add
push
push
mov
stos
rclb
cmovle
fnstenv
je
adcb
adc
dec
sub
dec
adc
sbb
mov
fadds
loope
cs
cld
or
inc
inc
dec
or
xor
in
mov
sti
fwait
push
test
xor
ret
test
lret
faddl
mov
xor
hlt
or
or
fidivl
std
mov
mov
aad
push
pop
add
add
fs
leave
push
cmp
pusha
je
jb
pop
mov
jae
and
jecxz
cmp
mov
mov
in
jp
cli
lea
add
lahf
fwait
repz
les
ret
ret
lahf
jbe
mov
gs
or
repnz
xor
jecxz
iret
vmwrite
push
iret
je
in
inc
enter
fcompl
or
push
das
mov
and
or
mov
jae
les
movsl
jmp
mov
jnp
mov
lods
or
mov
aad
jnp
mov
mov
shlb
sub
shrl
sbb
fldl2t
cmp
push
js
sbb
mov
aad
jg
cmp
xchg
inc
loope
jae
in
jl
int3
loope
xchg
inc
cmc
test
aad
xchg
mov
inc
xor
testl
sub
ss
and
xor
js
imul
inc
fs
popf
shrb
xor
pusha
into
jle
xchg
into
jg
repz
adc
cld
out
push
pop
std
dec
stos
sbbl
stos
xchg
mov
int3
and
sbb
and
ljmp
add
pop
mov
rcrl
lods
sub
cmpsl
jg
test
movb
mov
xchg
insb
pop
xchg
mov
lret
inc
popa
outsl
push
leave
xchg
or
outsb
xchg
mov
push
mov
cmp
fisubs
stos
or
sti
in
mov
loopne
xlat
insl
jae
adc
imul
repnz
enter
xor
das
ret
std
sub
into
lock
dec
fstl
fdivl
push
aam
push
sub
in
hlt
jb
fisubl
popa
aad
xchg
mov
adc
pop
xchg
rcr
mov
jge
jle
cmp
sub
lret
add
mov
loop
rcrb
out
cs
adc
pop
and
cmp
adc
jle
gs
ret
ds
sub
je
jge
shrl
and
fistps
into
jmp
movsb
adc
into
mov
mov
mov
pop
movsl
sbb
aam
add
ljmp
ret
xchg
lret
addr16
sbb
sbb
mov
in
sbb
mov
jo
es
sti
mov
ljmp
push
mov
cs
out
daa
jl
cmp
mov
xor
mov
pop
lahf
rdpmc
add
pusha
xchg
divl
or
into
out
cwtl
dec
lock
repnz
cli
shl
cmpsl
sub
fisubl
emms
dec
shrb
mov
push
ret
das
and
arpl
mov
jns
ljmp
loope
cli
fs
pop
adc
push
push
xor
and
lret
std
xor
adc
mov
jecxz
inc
lcall
sub
into
fcmove
sub
jo
pop
mov
cmp
sbb
hlt
cmpsb
push
add
jg
xor
stc
stos
push
daa
rcrl
mov
jge
mov
xor
fidivrl
dec
pop
cmp
in
push
xchg
inc
movlps
inc
sahf
fisttps
inc
xor
in
mov
pop
loop
fisubl
addr16
lods
pop
es
sub
call
ret
dec
jne
pop
xchg
sub
xchg
sub
fwait
push
adcl
mulb
lock
stc
popf
cld
cld
bound
sbb
in
xchg
gs
inc
xchg
jo
addr16
jge
mov
push
scas
repz
adc
out
cwtl
add
dec
pop
sbb
loop
mov
ret
mov
icebp
iret
pop
xchg
orps
out
es
test
cwtl
mov
cltd
sub
andl
shll
and
push
xchg
mov
push
shlb
dec
shl
pop
and
pushl
fwait
ret
js
outsb
lods
popa
repnz
and
gs
incl
or
lret
dec
xor
and
repnz
bound
mov
and
imul
stos
idivl
push
mov
push
xor
rclb
and
fnstcw
test
push
jmp
adcl
jmp
aas
lcall
mov
pop
ret
xlat
pop
pushl
push
and
or
ret
cli
out
jg
in
mov
jecxz
pop
add
pushf
xchg
sbb
rcll
or
cmp
out
mov
inc
ss
xchg
cmpl
mov
cli
add
xchg
inc
loop
lcall
add
addr16
xlat
and
aas
in
add
testl
test
adc
cld
sahf
jg
adc
push
mov
mov
aaa
out
shll
imull
sbb
xor
nopl
push
je
in
push
pop
mov
and
mov
jb
stos
dec
mov
cmp
xchg
dec
lret
mov
pop
push
clc
or
sub
ja
aaa
sub
int
cmp
outsl
jno
jo
out
mov
bound
pop
js
shll
fucomip
sub
jno
sub
sbb
inc
outsb
cmpl
adc
inc
mov
jl
jge
add
pop
test
sub
cld
lods
sbb
jb
and
xchg
add
insl
sub
outsb
jp
divps
hlt
lods
cmp
icebp
jae
xor
mov
es
out
out
cmp
add
dec
adc
loop
jge
sbb
mov
inc
lods
cwtl
sbb
sbbl
hlt
pop
or
es
jl
jb
mov
mov
repz
add
xor
sub
fstpt
aaa
jno
fdivrl
out
mov
add
incb
and
cmp
adc
adc
das
xor
pop
int3
ljmp
xor
int
xchg
sahf
mov
push
mov
push
rcll
js
aaa
leave
xchg
cmp
pop
sbb
mov
dec
test
mov
mov
jnp
pop
xor
push
jecxz
adc
insl
inc
jo
mov
int3
jecxz
jae
lds
loop
inc
mov
arpl
roll
push
jbe
push
fisttpll
punpcklwd
and
aaa
inc
iret
mov
lds
inc
and
fadds
scas
mov
leave
into
fildll
gs
mov
loop
ds
xchg
lock
or
out
adc
xchg
test
mov
and
jmp
xchg
jnp
aaa
aas
jae
inc
and
aas
xlat
in
mov
push
jno
adc
adc
cld
inc
clc
sub
inc
inc
mov
push
adc
pop
sahf
str
xchg
lds
and
inc
popw
mov
push
sbb
and
ljmp
lock
jne
add
xchg
cmp
iret
cwtl
popw
addr16
push
fists
call
mov
pop
add
xchg
out
mov
in
aaa
sub
push
ss
movsl
pusha
jo
bound
ret
push
lea
lcall
shlb
out
sbb
push
in
mov
sbb
cmp
mov
pop
repnz
js
pop
jg
andl
scas
incl
inc
inc
leave
adc
jg
jbe
aaa
xchg
pop
aad
jge
push
xor
sarb
repnz
sub
repz
dec
in
into
repnz
dec
cmp
leave
insb
out
sbb
in
xor
xchg
push
and
push
gs
jbe
sub
pop
cmpsl
sub
push
aaa
inc
push
sarl
xchg
pop
fidivs
cmp
cmp
outsb
jbe
push
cmpsl
mov
jnp
or
es
jb
mov
pop
in
mov
sub
xor
lods
jp
mov
ret
or
fistpll
lcall
push
lretw
mov
push
int
aam
pop
lahf
jo
lock
out
aam
call
push
cld
ret
pop
aaa
in
movb
jecxz
das
pop
pop
aad
push
outsb
fsubr
in
mov
pop
mov
xor
ret
mov
xor
lcall
bound
cmpsb
xchg
mov
rclb
scas
mov
mov
cmp
ror
cli
inc
adc
fisubrl
ljmp
in
mov
xor
mov
stos
xorl
int3
mov
fmul
mov
out
cmpsl
xor
add
sbb
cmpsl
mov
sbb
mov
pop
int
adc
fdivl
or
cmpsl
pusha
inc
lds
arpl
inc
cmpsb
jmp
inc
dec
out
jmp
arpl
push
add
mov
lret
pop
xor
cwtl
aam
lahf
divps
push
out
outsl
into
push
out
jo
mov
les
std
ret
inc
sar
orl
sub
pop
adc
push
out
push
sub
jmp
mov
jbe
cld
jg
mov
mov
and
pop
dec
sbb
stc
cmpsb
inc
bound
lock
push
xchg
lret
pop
or
cmp
adc
jmp
or
insl
lods
mov
pop
mov
jnp
mov
popa
dec
push
out
and
stos
xor
xchg
pop
imul
int
jle
cld
cmpsb
inc
clc
pop
xchg
and
cmc
dec
jecxz
aad
sbb
xchg
inc
and
xchg
popf
xor
jne
in
in
cmp
push
es
in
adc
xlat
cmpsb
jbe
xchg
or
test
sbb
adc
inc
sub
ljmp
dec
pop
aam
aas
cmp
push
inc
pop
jl
inc
ljmp
sub
dec
pop
push
shl
adc
pusha
ficompl
pop
pop
bound
dec
mov
outsb
xchg
ljmp
and
jb
mov
sub
jg
ret
mov
pop
shlb
std
shlb
int
sbb
pop
dec
add
mov
insl
pop
and
inc
ss
mov
loopne
lea
dec
push
scas
mov
leave
lods
loop
pusha
dec
adc
dec
push
popl
ror
fisttps
pop
shll
cli
mov
arpl
movsb
jmp
rcrb
daa
jo
sbb
fldt
movsb
aaa
jl
daa
movsb
xchg
sub
adc
xchg
das
pop
sub
mov
push
jb
xlat
int3
mov
pop
and
pop
cli
fisubl
mov
rolb
or
test
aaa
lcall
arpl
call
cs
pop
test
shll
add
push
sti
dec
pusha
push
lcall
fstps
pop
adc
cli
lds
fcmovu
jns
push
out
mov
jecxz
inc
fsubl
xchg
mov
xchg
mov
mov
jecxz
insb
hlt
cwtl
gs
xchg
fsubl
add
pop
nop
in
ret
mov
and
lods
push
mov
les
mov
mov
jp
enter
jmp
lcall
mov
inc
fs
clc
push
imul
cmp
sub
sub
sub
ss
pop
jbe
loope
xchg
loope
loopne
std
iret
xchg
mov
mov
repz
test
xchg
sub
xor
rol
adc
data16
pop
adc
fdivp
mov
mov
aaa
push
push
pushf
out
repz
je
ret
aam
xchg
stc
je
ret
jg
push
xchg
cltd
and
incl
stos
or
nop
sub
cmp
mov
popl
repnz
es
xor
jge
nop
scas
loopne
dec
int3
or
push
js
inc
xor
jmp
add
sub
sub
push
sti
dec
sub
shl
pop
call
fcoml
test
in
rcl
mov
es
cmp
add
iret
jp
movsb
xlat
test
push
enter
stos
xor
pop
iret
outsl
idiv
dec
in
in
ja
fdiv
mov
mov
jo
pusha
in
sahf
loope
pop
mov
pushf
mov
mov
push
mov
dec
cmp
mov
lds
gs
pop
dec
pop
stos
and
imul
inc
in
mov
enter
mov
pop
lret
loop
notb
pop
push
xchg
outsl
clc
insb
aas
xchg
sarl
dec
roll
mov
mov
stos
push
popa
out
shlb
jo
mov
xor
mov
jmp
add
jle
mov
ret
jns
dec
aas
out
add
xorb
sti
out
adc
sahf
lret
add
fbld
sbb
lods
cmp
out
push
bnd
or
lds
xchg
and
xchg
or
and
fists
stos
or
outsl
or
mov
int
fsts
iret
dec
imul
adc
adc
out
in
loope
dec
add
cmpsl
xchg
hlt
test
sahf
repnz
rclb
mov
mov
jl
dec
and
mulb
sbb
cmp
sub
xchg
mov
mov
ret
test
les
cmpsb
ja
sub
and
jle
mov
and
or
rcll
push
insl
leave
inc
ss
fdiv
in
mov
hlt
add
sub
fiadds
hlt
aam
addr16
lcall
adcl
mov
lock
mov
push
pusha
pop
psubq
cvtps2pd
ss
mov
lret
add
fcoml
sti
lea
mov
std
mov
call
stc
push
fdivp
das
lcall
or
xor
mov
mov
adc
test
lret
fsubrp
xchg
push
jg
repz
dec
ja
fists
sbb
mov
out
xchg
rclb
fiadds
pop
lods
jge
add
mov
lds
inc
sub
test
and
cmp
stos
lock
push
sti
dec
jmp
leave
loop
or
sub
das
dec
int
cs
arpl
mov
cs
pop
dec
dec
cmp
idivb
mov
inc
add
xlat
fiaddl
nop
jle
xor
mov
not
add
hlt
je
mov
cmp
cmp
lds
call
pop
dec
mov
inc
imul
cmp
lret
bound
and
add
dec
mov
inc
jge
jp
loope
push
inc
jle
sub
mov
sbb
push
and
mov
cmp
xor
mov
orb
jle
push
cmp
punpckhdq
fcompl
inc
mov
in
ljmp
sbb
cmp
sbb
insb
sub
mov
shll
mov
sarb
ja
jmp
mov
ret
lcall
xlat
out
xor
inc
dec
iret
cld
or
mov
xchg
idivb
add
lds
dec
xor
sbb
adc
push
rcr
outsl
maxps
add
pop
ret
add
pop
stos
sbb
ds
gs
outsl
mov
ljmp
dec
mov
mov
pop
inc
push
xchg
mov
inc
fs
xchg
out
mov
out
pop
xlat
and
cmpsb
sbb
fisttpl
test
sbb
je
scas
jmp
pop
inc
mov
or
and
mov
das
push
popf
push
pop
mov
push
push
mov
jecxz
inc
or
in
xor
mov
scas
in
mov
in
adc
test
andb
insb
cmc
cmp
inc
mov
in
stc
popa
pop
push
in
mov
out
push
daa
sub
mov
mul
xchg
or
pop
lret
sub
mov
pop
test
mov
fldcw
jecxz
pop
or
js
push
and
adcl
push
addb
push
sub
lods
jns
pop
cli
sbb
mov
sbb
mov
lock
mov
lret
in
call
adc
data16
repz
cmp
cmp
popf
in
dec
leave
mov
pop
notl
dec
arpl
and
stc
icebp
fld
jb
clc
mov
lcall
xchg
pop
pop
fdivs
jae
xlat
lretw
push
jmp
lock
ljmp
arpl
in
dec
push
arpl
ret
jbe
mov
insb
and
rclb
mov
push
subb
test
add
mov
pop
pop
xchg
cmp
mov
mov
fdivrl
std
scas
mov
dec
xchg
mov
fbstp
dec
dec
fwait
mov
cmp
fisttpl
fstps
fcompl
and
cmpsb
push
test
jg
mov
adc
or
pop
cli
mov
mov
loope
add
xchg
movsl
ljmp
in
jmp
jp
out
in
mov
aad
leave
pop
jl
cmp
mov
pop
pop
cmp
inc
jbe
cmp
into
movsl
sbb
imul
push
sub
in
neg
jl
icebp
ljmp
push
push
push
repz
das
cld
inc
int
sub
stos
push
lods
int
in
out
xchg
hlt
fisttpl
loop
js
ret
push
out
ljmp
loope
xchg
mov
jbe
fdiv
jg
iret
movsl
imul
or
iret
pop
sbb
jmp
aaa
les
sub
adcb
jmp
mov
cwtl
mov
int
mov
mov
mov
mov
repnz
and
call
adc
and
in
subl
fwait
mov
movsb
dec
pop
push
jbe
cmpsl
ret
popf
push
pushf
xchg
pop
lock
mov
scas
inc
mov
lcall
in
mov
popa
xchg
add
xor
sbb
movsb
xor
mov
pop
hlt
fldenv
mov
mov
sub
and
inc
cmp
lods
fwait
xchg
add
pop
push
lahf
mov
xor
sahf
sbb
dec
je
popa
add
adc
in
xor
cmp
cmp
sub
call
xchg
cli
push
loop
js
sti
inc
and
sub
outsb
push
and
mov
adc
sbb
and
int
push
sbb
icebp
pusha
pop
mov
sahf
xchg
test
xor
push
je
adc
ljmp
fisttpl
jl
out
pop
call
push
daa
jmp
sub
imul
mov
mov
bound
insl
movsb
pop
imul
and
or
xchg
xor
push
sbb
dec
add
xchg
in
repnz
adc
add
int
jg
clc
mov
in
push
mov
add
add
and
nop
sub
or
lret
ss
push
shlb
ficomps
or
jp
std
xor
mov
mov
dec
test
aam
adc
xchg
sahf
push
mov
push
insb
popf
arpl
push
pop
loope
mov
sbb
sub
fcomi
fmulp
adc
arpl
jbe
xor
jno
mov
loopne
mov
and
int3
mov
clc
sub
loope
loope
push
jle
or
dec
je
test
shrb
stos
stc
pop
fld
xchg
shlb
repnz
mov
add
lods
shll
sbb
mov
repz
rorl
sub
out
sysret
iret
xchg
out
fidivl
and
push
mov
sbb
lret
add
call
adc
push
popa
movsl
inc
std
and
and
or
inc
arpl
mov
ss
das
sub
pop
loope
outsb
lea
imul
lods
cs
sub
orb
loopne
jns
and
mov
adc
faddl
test
mov
add
fldcw
mov
mov
mov
pusha
sub
clc
aaa
add
sti
pop
incb
or
inc
movaps
aas
imul
dec
test
adc
jbe
inc
mov
pushaw
cmp
sub
mov
shll
movsb
cmpsb
int3
ss
testl
push
push
out
adcl
iret
in
aad
cmc
stos
and
test
out
dec
and
dec
lds
rolb
scas
push
outsl
loop
and
xor
sarb
lret
loopne
orl
xor
dec
add
sti
ds
dec
ljmp
xchg
andl
and
mov
cmp
pop
insb
xchg
into
daa
dec
out
mov
rclb
sbb
sbb
shlb
rolb
lret
lret
inc
js
mov
scas
xor
outsl
lret
rol
push
push
mov
add
mov
out
clc
cmpsb
dec
mov
inc
std
xchg
in
scas
loopne
fnstenv
mov
pop
nop
subb
cmpsl
pop
pop
call
xor
stc
xchg
pop
fadds
in
and
add
mov
shl
hlt
and
into
rcr
add
cmc
and
je
or
arpl
ljmp
add
add
daa
push
inc
icebp
shr
or
xor
popf
xchg
jecxz
popa
jo
sub
movsl
mov
sarl
cmp
lret
stos
or
outsb
out
jecxz
pop
clts
bound
pop
call
push
add
out
cmp
call
pop
mov
jl
nop
push
or
sbbl
dec
xchg
pop
add
xor
dec
pop
xchg
lret
stos
cmp
pop
push
push
mov
test
enter
jnp
sbb
mov
popa
mov
mov
add
and
jbe
mov
fldenv
push
xchg
push
int
shld
or
mov
lret
pop
leave
mov
out
pop
cmp
aas
or
sti
inc
dec
aam
push
arpl
add
jge
inc
fwait
lds
and
stos
mov
jp
sub
dec
jmp
test
in
out
jae
push
sbb
pop
inc
lods
sbb
jp
pushl
rorb
xor
pop
fisttpll
push
lock
jmp
mov
mov
popf
mov
pop
popa
into
push
and
sbb
packssdw
ljmp
sahf
pushf
xchg
pop
xlat
inc
movsb
imul
lret
or
jmp
notl
push
sub
test
ret
cs
je
xchg
pushf
xchg
aad
adc
jno
xchg
xchg
cli
jg
mov
and
or
ljmp
cmp
xorl
pop
mov
mov
xchg
call
dec
fidivs
cli
out
pop
adc
idivb
insb
stos
adc
jle
sub
mov
aaa
mov
mov
xchg
clc
pop
lods
xchg
loopne
jmp
ss
insb
icebp
in
xor
stos
xchg
int3
aam
adc
or
adc
lret
imul
push
jg
hlt
mov
jecxz
cmp
scas
fcomps
ret
xchg
or
scas
enter
rorb
lret
aam
je
data16
mov
dec
pop
cmpsl
fistpl
lcall
sub
lret
icebp
push
shlb
xchg
xchg
inc
mov
scas
adc
sbb
lea
push
leave
insl
lea
sbb
xorb
jb
mov
pop
jo
daa
push
push
shrl
lret
jle
xchg
lahf
enter
push
adc
in
loopne
in
mov
and
lea
xchg
cmp
stos
ljmp
decl
data16
mov
std
adc
and
push
pop
jecxz
in
mov
dec
scas
int
cmp
pop
pop
xor
lret
jl
out
adc
scas
iret
sbb
jle
stc
je
movsl
std
stos
arpl
or
dec
add
xor
fisubrs
aaa
stos
push
mov
and
arpl
ret
outsb
and
add
and
aad
out
and
movb
push
fdivrl
xchg
cmpsb
std
inc
imul
fstpt
mov
xor
jb
xor
fcomps
add
iret
xor
lods
or
out
test
xorl
orb
fistps
mov
xchg
in
mov
arpl
nop
sbb
cmp
cmp
test
add
inc
push
cmp
test
outsl
xor
sub
out
cwtl
add
sti
xchg
sbbl
shrb
mov
int3
out
mov
push
cmp
in
pop
fcmovnu
cmp
std
lods
shrb
mov
push
and
or
sahf
hlt
outsl
xchg
addr16
jbe
pop
add
fs
stos
aaa
xchg
inc
inc
jmp
rorb
je
test
test
rcl
and
push
scas
fldcw
outsb
rcrl
aad
dec
repz
fnstsw
arpl
jae
fldenv
inc
into
mov
or
popf
jbe
gs
push
sti
cmp
popa
sbb
sbb
and
adcb
nop
mov
in
push
pop
or
sub
cli
xor
push
jle
je
jnp
and
and
je
imul
clc
pop
mov
cmp
dec
xchg
mov
bnd
pop
cmc
ss
int3
jg
mov
mov
repz
rcrb
pop
push
lahf
xor
pop
push
push
pop
sbb
fstpl
sub
xchg
pop
icebp
jnp
insl
stos
mov
push
repz
push
imul
pop
pop
push
mov
test
loop
andl
pop
mov
insl
cld
scas
hlt
loope
and
lods
pop
mov
xor
test
mov
jl
pop
and
cmp
mov
test
cmp
idiv
out
lock
or
push
push
cwtl
fidivs
daa
pop
orb
inc
mov
fisubs
rcll
lret
xchg
sbb
and
mov
mov
ss
cli
inc
cmpsl
fs
mov
or
dec
xor
cltd
lods
repz
rolb
in
das
mov
loope
push
or
psrlq
lea
dec
lahf
or
rcrb
add
sub
andb
adc
adc
in
lock
sub
js
adc
adc
ja
hlt
js
or
push
cmp
add
enter
scas
es
sarb
movsl
adc
dec
mov
push
jbe
push
rorl
aad
mov
lea
jb
adc
test
je
mov
insb
push
ret
sbb
testl
test
into
rcl
or
enter
adc
cmc
fcomps
mov
xchg
xchg
xor
push
movsb
add
mov
mov
dec
push
int
pop
mull
in
dec
fwait
ja
pop
mov
fstps
or
and
data16
or
add
bound
mov
js
sbb
adc
fs
pop
pop
push
insl
add
or
jo
and
popf
loope
dec
sub
jmp
sarb
mov
and
cmpb
adc
xor
and
lods
lods
ffreep
xor
add
add
call
aam
pop
pop
inc
lods
lea
icebp
mov
aas
loop
and
mov
frstor
jmp
push
pop
cwtl
jg,pt
incb
mov
or
pop
das
push
mov
jmp
push
mov
push
cmp
jns
adc
stc
mov
dec
xlat
aas
mov
decl
popa
test
stos
out
adc
into
out
insb
lods
int
ret
andb
sti
jae
insl
mov
mov
ljmp
mov
daa
pop
adc
scas
mov
jb
xor
jnp
add
sahf
test
bound
cmp
sub
mov
lods
dec
mov
push
xor
or
repz
sub
mov
pop
into
push
xchg
push
mov
leave
testb
sub
sbb
loope
dec
pminub
nop
repnz
stos
mov
je
iret
cli
adc
inc
or
into
int
mov
pusha
hlt
imulb
add
mov
fistl
pusha
push
fidivs
xchg
daa
push
dec
mov
insl
lahf
cmp
inc
jnp
mov
adc
leave
out
sub
xor
mov
sub
push
cwtl
jo
dec
cmpsb
addr16
dec
jns
je
jns
fwait
mov
fmuls
mov
sahf
dec
push
in
jbe
jl
int
cltd
mov
movsl
idivb
sbb
mov
mov
fiaddl
pop
dec
adc
cs
jmp
inc
lods
push
aad
push
xchg
repnz
int
imul
loop
mov
mull
and
sbb
bound
and
sbb
fisttpll
xor
mov
sbb
or
jmp
leave
pushf
adc
and
push
push
imul
jnp
mov
outsl
jns
icebp
imul
cmc
imul
push
pop
jmp
jno
shl
fists
pop
pop
hlt
ss
push
int3
shr
sbb
xchg
adc
sbb
popa
adc
mov
xor
jne
jae
out
push
js
lods
clc
roll
subb
in
addl
lea
mov
hlt
ja
dec
orl
les
imul
add
fisubs
inc
jb
imul
cmp
imul
loop
test
xchg
test
test
jmp
clc
mov
mov
fstpt
or
xor
stos
mov
sti
popf
xor
jp
or
cmp
andb
push
or
addr16
stc
mov
pusha
dec
cmp
mov
cwtl
dec
push
xchg
mov
dec
icebp
add
jg
jae
mov
jno
neg
dec
cltd
loopne
xchg
enter
xchg
push
out
pop
dec
mov
loopne
push
inc
pop
ds
stc
pop
and
mov
int3
cs
jo
enter
lods
jb
movb
add
ss
imul
sbb
pop
fisttpl
inc
xor
pop
or
mov
fidivs
adc
ret
sub
imul
sbbb
out
mov
mov
pop
jg
dec
xchg
jge
dec
add
jae
inc
fbstp
addl
in
jne
test
xchg
jecxz
andl
sti
movsl
in
dec
inc
mov
inc
adc
shr
mov
and
aam
mov
aam
adc
fsts
repnz
clc
lods
jle
fxch
lcall
inc
mov
jbe
or
mov
into
dec
lock
jl
pop
sbb
mov
cs
adc
ret
movsb
lds
mov
cmp
push
pop
mov
lret
test
aaa
repnz
adc
movsb
pop
arpl
sub
faddl
push
inc
mov
cmp
shl
push
iret
data16
and
xchg
cmp
insl
cs
sub
inc
sbb
cmp
xchg
fcomip
loopne
std
pop
cmp
jno
out
scas
push
and
cwtl
pop
mov
rcl
movsl
insl
mov
sub
xchg
push
dec
adc
jge
nop
fldt
dec
or
jecxz
pop
and
negl
jg
xchg
and
push
mov
xchg
xor
movsb
lcall
dec
push
xchg
mov
and
push
cmp
stc
call
aad
sahf
dec
xchg
das
shll
xlat
xor
xor
mov
add
xor
dec
dec
sub
bound
adc
sub
cmp
sahf
shrl
fidivl
das
push
stos
jnp
xchg
cmp
data16
ret
xlat
add
adc
push
loopne
insb
pop
inc
cmpsb
pushf
cmpsl
shlb
xchg
inc
xchg
stc
dec
std
mov
sbb
leave
lcall
dec
mov
mov
mov
mov
popa
mov
mov
pop
mov
js
mov
xor
gs
cmp
and
cmp
mov
pop
mov
stos
lahf
and
sub
lcall
clc
mov
rcll
stc
test
ds
push
push
cld
cmp
inc
xchg
int3
stos
and
mov
gs
stos
stos
sub
adc
mov
ljmp
cltd
xor
inc
jmp
psadbw
pop
idivb
out
aad
repz
push
mov
pop
push
les
xor
sbb
push
popa
add
sti
sub
call
inc
pop
nop
adc
movsb
pop
sbb
inc
fwait
es
std
roll
sti
push
imul
std
inc
mov
shrl
out
in
or
fdivr
je
mov
or
je
stos
xchg
jno
fwait
ds
movsl
cmp
or
xlat
jl
adc
dec
xor
xor
jp
mov
out
pushf
xor
ret
jb
aaa
cmp
shr
outsb
outsb
xchg
mov
mov
and
jp
and
fisttpll
into
cmp
orl
test
sub
out
adc
cmp
cs
loopne
and
in
mov
cmp
loopne
cmp
nopl
lret
push
or
xor
int3
call
or
iret
push
ds
imul
add
cmp
mov
cld
mov
daa
xor
dec
mov
cli
imul
mov
movsl
in
in
fldl2t
addr16
mov
pop
pop
pop
push
test
out
inc
es
data16
sbb
sub
pop
roll
lret
ret
je
jno
dec
mov
leave
daa
lods
lock
sub
sti
pushf
cmc
fisttpl
adc
sets
xlat
or
scas
loopne
xchg
push
jno
bound
pop
cmp
test
insl
lret
and
leave
cli
nop
mov
scas
ret
das
sub
dec
push
and
notb
loope
mov
out
adcl
adc
pusha
pop
push
lods
fs
push
pop
mov
add
test
cmpl
rol
jle
lcall
jp
roll
jl
xchg
pop
pop
mov
jnp
nop
sub
xor
pop
bound
loope
jbe
fs
jmp
jbe
xor
out
xchg
clc
mov
es
jnp
mov
lods
fdivrs
sbb
push
inc
mov
sbb
scas
outsl
ljmp
mov
mov
jnp
xchg
in
test
cmp
bound
pusha
push
jmp
lret
adc
mov
int
out
dec
add
test
test
outsl
out
add
and
les
xor
and
lahf
push
sub
in
cs
pop
subl
lret
cld
rcr
stc
fsubr
xchg
psraw
push
lret
lods
dec
mov
arpl
mov
jle
clc
enter
js
inc
add
test
inc
mov
cmpsb
xor
xchg
xchg
pop
test
mov
dec
cld
mov
fstpl
and
dec
out
mov
idivl
cmc
mov
in
movsl
adc
lods
sub
stos
mov
leave
xchg
cmp
jp
aaa
shrb
notb
xchg
mov
psrlq
data16
sub
movsb
add
mov
mov
xor
mov
imul
or
mov
dec
mov
mov
ja
outsl
dec
adc
dec
inc
pusha
fs
jo
ljmp
mov
push
inc
xor
mov
in
cli
test
insl
fsubrp
xchg
pushf
sbb
jp
mov
insb
sub
mov
mov
sahf
into
xchg
aas
cli
int
pop
loopne
mov
sbb
cmp
fs
scas
fadd
leave
jb
insl
push
inc
fsts
fildll
mov
loopne
flds
cmp
hlt
orl
pop
scas
mov
sbb
push
test
je
hlt
movsb
arpl
mov
adc
or
stos
sbb
insl
push
push
push
inc
rcr
mov
mov
xchg
stos
icebp
and
insb
sbb
sub
aad
cli
mov
popf
repnz
es
movsb
dec
mov
inc
xor
fdivl
mov
add
xchg
sti
adc
inc
xchg
incl
imul
inc
clc
adc
xchg
out
add
mov
daa
add
inc
sbb
aam
and
iret
popa
pusha
in
push
lods
repnz
jnp
iret
pop
or
es
and
cld
fcompl
mov
mov
js
pop
or
cli
adc
in
and
add
jmp
push
cmc
rclb
push
arpl
outsl
jb
leave
dec
inc
mov
fldl
mov
push
test
test
and
loopne
lea
cmp
mov
adc
xor
sbb
scas
ret
add
insb
mov
test
nop
lret
mov
aas
sbb
add
jne
movsl
cmp
das
lahf
fstpl
xchg
cmpsb
cltd
outsl
xor
mov
mulb
jae
clc
mov
roll
test
mov
push
cs
test
xor
fs
pop
mov
jno
mov
fs
fiadds
and
xchg
cmpsl
fistpl
fwait
xlat
loopne
or
out
pop
cmpsl
subl
dec
sahf
dec
jno
imul
push
xor
icebp
cmp
adc
or
mov
jns
call
aam
xchg
sbb
fisubrl
mov
cmp
xchg
lret
mov
scas
fs
ljmp
sti
fdivp
mov
pusha
test
adc
movsl
lahf
dec
mov
mov
aaa
and
mov
repnz
inc
cmp
jmp
xorb
cmc
jl
push
js
das
dec
push
sarl
loope
push
mov
xor
mov
int
or
pushf
xchg
iret
cmp
pusha
addr16
mov
and
push
iret
fwait
xor
out
xchg
inc
cmp
jb
push
nop
repz
sbb
dec
rcrl
mulb
incb
loopne
push
cmp
nop
mov
xchg
cld
pushf
dec
mov
sbb
cmpsl
sar
inc
hlt
lods
aad
xor
sub
jbe
add
cmp
scas
xchg
sbb
mov
xchg
cmp
jmp
pushf
sub
mov
cld
testb
sub
dec
jnp
sahf
test
out
xor
mov
ljmp
and
inc
pop
orl
fldt
push
aam
dec
int
cmp
mov
push
and
movsl
push
incb
mov
push
pop
jbe
xor
call
in
loope
and
insl
scas
enter
or
or
pop
pop
push
mov
pop
or
stos
fcoms
sub
inc
fidivrl
cmp
loopne
jle
int
inc
mov
in
mov
jle
sub
out
sbb
inc
lods
pop
xor
lds
mov
adcb
sub
lds
popa
push
xlat
xchg
cmpsb
and
jecxz
xchg
dec
shll
push
push
or
and
cltd
clc
dec
dec
repnz
mov
nop
mulb
add
mov
push
xchg
xor
and
mov
imul
mov
mov
jmp
fcoml
mov
call
and
insb
jns
pop
and
xorl
stc
cmpsb
ret
imul
mov
mov
mov
js
xor
movsl
xchg
mov
cmp
cmpsl
sti
dec
faddl
jne
push
xchg
add
insb
call
stos
fwait
inc
in
cmp
sti
sbb
pop
pop
inc
sbb
jne
push
sbb
in
sub
and
jne
into
jns
mov
sbb
in
mov
jge
shrl
xor
add
jns
cwtl
jmp
insb
jns
lret
jg
sbb
xchg
jb
ss
push
xor
int3
cwtl
pop
cmc
stos
push
push
inc
push
scas
in
cmp
xchg
psubusb
adc
les
push
sbb
mov
push
xor
mov
jmp
jne
ds
cs
std
push
repz
rclb
jnp
mov
mov
mov
outsb
js
push
push
mov
out
xchg
mov
jb
sti
lret
rcll
add
or
xchg
sbb
mov
lret
loopne
das
sbb
ds
push
sbb
add
pop
xlat
std
jg
sar
mov
push
xor
imul
mov
mov
xor
dec
lock
ficoml
and
xchg
mov
out
pop
pop
push
outsb
int3
pop
mov
sbb
sbb
or
lcall
adc
sub
cld
inc
fcmovu
sbb
pop
dec
lea
inc
pop
pop
out
and
inc
mov
insl
loope
cltd
sarl
fstl
sub
dec
and
hlt
mov
pop
pop
scas
and
pop
ds
cmc
jge
ljmp
cmp
sar
mov
xchg
stos
jge
lret
orb
mov
cmp
push
cs
hlt
xchg
inc
cs
push
int
mov
jno
jle
pop
data16
pop
add
push
shll
add
xor
leave
cmc
sbb
mov
out
inc
lcall
cmp
ret
pop
adc
out
push
add
or
scas
popf
pop
negl
xlat
sbb
mov
and
xor
push
lret
or
jp
or
fistpl
in
out
mov
mov
in
outsl
fstpt
push
sub
jae
cli
shr
add
dec
push
xchg
adc
push
cmp
mov
cli
call
mov
dec
es
shr
adc
test
imul
xchg
movsb
fisubl
adc
stos
mov
cmp
dec
cmc
cltd
cli
mov
and
stos
das
push
cmpsl
mov
mov
push
cmp
mov
pop
push
lods
mov
cmp
jecxz
push
ficoml
mov
add
pop
jl
insb
enter
pushf
lods
pop
mov
popa
push
jo
adc
jecxz
ret
push
ret
add
inc
xor
xchg
rcrl
adc
xor
das
add
insb
sub
jmp
lcall
or
mov
call
aas
out
push
in
xor
mov
data16
movsb
mov
enter
push
mov
sar
movsl
sbb
shrl
jecxz
movsb
push
daa
push
sub
dec
mov
cld
push
aad
pop
scas
rorl
gs
dec
xchg
out
mov
push
daa
mov
int3
sub
ret
push
dec
push
pop
inc
ret
rclb
movsb
hlt
lahf
shl
cmpl
dec
xchg
inc
enter
into
hlt
xchg
in
loope
add
pop
mov
aaa
cmp
stos
les
rorl
mov
stc
xor
sub
mov
ljmp
jp
out
push
push
cld
in
les
adcl
mov
xchg
add
jle
push
adc
mov
xchg
ret
jnp
sbb
loope
loope
lods
mov
xor
inc
adc
or
test
dec
test
daa
icebp
into
lock
es
and
cltd
mov
stos
imul
push
imul
jb
pop
in
jp
mov
mov
and
dec
scas
push
and
lcall
mov
je
push
sarl
pushf
imulb
jo
cmp
in
adc
je
lock
sbb
xchg
ret
fadd
xor
sub
push
and
pop
or
sub
or
pop
adc
mov
fstp
fiaddl
out
mov
add
or
pop
add
ret
call
imul
sahf
mov
adc
sub
loope
shlb
lcall
out
xchg
fisttpll
loopne
push
jbe
cmp
pop
mov
addr16
lods
lcall
into
insl
ljmp
add
ss
rorl
push
out
rorb
add
leave
loope
xlat
or
and
xchg
inc
or
sbbb
sarl
add
add
negb
shr
aaa
orb
cmp
ljmp
loope
xor
inc
xor
mov
mov
jae
cmp
mov
subl
xor
dec
dec
rcrl
fiaddl
sbbb
lea
mov
push
xor
test
push
mov
xchg
scas
je
sub
pop
mov
and
scas
cwtl
out
gs
xchg
sub
dec
pop
dec
add
lahf
mov
leave
in
clc
sbb
int
nop
pop
ljmp
lahf
add
mov
xor
popa
fsubrs
mov
outsl
add
sbb
and
pop
cmpsl
dec
shr
and
xor
dec
pop
pop
mov
movsl
mov
push
jno
dec
xchg
adc
push
mov
mov
lock
fmul
dec
xorl
sbb
ljmp
push
fstpt
jbe
xchg
push
test
xor
pop
adc
fldt
dec
aaa
lahf
mov
sti
adcl
arpl
push
ljmp
lock
xor
dec
adc
imul
mov
stos
inc
mov
mov
jo
or
mov
or
inc
pop
repz
icebp
ud1
xchg
add
xchg
hlt
in
aas
js
or
pop
mov
lds
mov
and
push
mov
out
mov
xchg
pop
jle
xchg
leave
jecxz
fcmovb
ret
daa
or
xor
outsl
loopne
inc
pop
or
xor
out
mov
pop
aaa
add
sahf
pop
xchg
scas
pop
mov
js
and
adc
ffree
daa
pop
xchg
pop
adc
lods
cld
aas
add
xchg
insl
mov
xchg
push
cmp
sub
dec
adc
bound
ds
xor
xor
insl
xchg
ljmp
cmpl
imulb
rcr
cmp
xchg
les
cs
orl
inc
shl
vandnpd
mov
aam
fcomip
icebp
aam
int
push
arpl
mov
add
cmp
in
lahf
sub
stos
sahf
scas
inc
cwtl
enter
mov
out
push
cmp
imul
lcall
ror
mov
aad
xor
add
enter
jo
stos
scas
scas
insl
sub
fcompl
mov
ljmp
clc
divb
pop
pusha
call
addr16
jg
and
dec
test
sub
mov
orl
sbb
sub
testb
cmpsl
and
outsl
mov
jle
loope
test
lahf
std
dec
cltd
rorb
leave
not
imul
sbb
aaa
test
sub
push
mov
sarb
and
sbb
push
aaa
adcb
jl
shll
jle
and
xchg
mov
les
sbb
into
xchg
sub
mov
insb
sti
test
sbb
out
in
mov
jge
dec
xor
bound
int3
cld
movl
int3
push
dec
arpl
lea
std
ja
mov
addr16
sbb
bound
js
sbb
mov
xor
add
mov
xchg
jns
lcall
push
aam
fsubl
rorb
es
mov
xchg
pop
cmpsb
sbb
daa
sbb
jmp
xor
jno
loope
sub
pop
cmp
sarl
jbe
xchg
loopne
mov
inc
mov
or
pushf
pop
addr16
cld
sbb
adc
stc
add
sbb
sbb
xchg
inc
pop
pop
sbb
dec
or
mov
xor
mov
enter
ficompl
sbb
push
mov
xchg
mov
cmpsl
hlt
sti
loope
jecxz
mov
cli
cmp
in
and
jle
adc
inc
divb
std
clc
popf
lock
dec
sub
pop
sub
mov
bound
pop
test
jp
mov
je
cmp
jecxz
iret
push
mov
mov
mov
out
xchg
jp
inc
xchg
je
xor
sbb
lahf
fisttpl
push
test
cmp
cs
mov
fcmovu
push
lahf
cwtl
out
cltd
xchg
mov
cmp
rcrl
into
or
cmpsb
cmp
rcl
fsubs
dec
inc
out
sti
int
ds
clc
scas
jecxz
movsb
sub
leave
loopne
xor
cmc
test
pushf
sbb
sbb
push
and
lret
rcrl
jbe
mov
xchg
pop
test
loopne
mov
jle
add
xor
std
adc
lret
xchg
dec
sub
gs
sbb
pop
add
sbb
mov
test
push
adc
push
sub
gs
xchg
lahf
pop
daa
test
mov
inc
inc
cltd
push
je
gs
xchg
cmc
inc
jns
sub
sbb
call
ds
ljmp
jno
roll
in
je
stos
iret
insb
jmp
movsb
call
mov
pop
loope
push
jp
test
pop
pushf
fs
insl
xchg
cmp
shlb
pop
and
ret
int3
std
jg
fldcw
push
dec
cmpsl
mov
and
mov
mov
and
and
fimuls
lret
push
xor
movsb
jnp
js
enter
fsubl
out
push
enter
aad
dec
sub
cmp
and
sub
mov
clc
mov
in
xor
aaa
cwtl
inc
pusha
add
jae
and
and
mov
clc
out
pop
rorb
lret
mov
mov
sub
leave
cmp
jl
push
sbb
stos
enter
xlat
jb
out
ljmp
add
aas
not
lret
sahf
adc
sbb
inc
cmp
jecxz
movsl
popf
mov
ljmp
adc
fisubrl
lcall
loope
fists
jp
popf
lds
mov
enter
adc
xor
push
xchg
aas
addr16
xchg
lods
jb
lea
mov
stc
jecxz
mov
pop
dec
rcll
clc
xor
and
movsl
sub
jb
stc
xchg
aad
push
sub
sahf
pop
xchg
adc
push
fldl
add
dec
mov
sub
or
mov
out
jecxz
lcall
gs
cmp
jo
inc
jle
inc
inc
xor
clc
iret
jl
inc
lret
lock
push
aaa
imul
mov
out
in
leave
outsl
add
mov
xchg
int
cmp
push
xor
xchg
xchg
xor
adc
xchg
loopne
cmp
bound
aas
mov
cmp
daa
pop
mov
les
and
push
push
dec
mov
sub
aad
jle
sbb
inc
scas
fimuls
stc
jp
mov
mov
add
inc
lret
xchg
sub
adc
sub
dec
or
std
jns
push
es
push
aad
jae
scas
fstps
xchg
mov
jl
fs
lock
test
xchg
and
in
mul
dec
push
aaa
inc
outsb
push
jbe
fnstsw
std
mov
aaa
lods
push
fcoml
fimull
xchg
mov
ror
inc
xchg
push
jns
inc
jo
mov
push
sbb
add
push
xor
sub
outsb
adc
popf
pop
push
fdivrs
xor
leave
lcall
cmp
cmpsl
hlt
xchg
aam
sbb
xchg
and
scas
xorb
iret
ss
out
inc
cmpsl
lahf
cwtl
sahf
mov
sub
lret
cwtl
and
or
in
dec
imul
movsl
ds
or
mov
inc
lea
out
push
cmp
aas
adc
fsubrl
lds
stos
das
movl
sbb
mov
mov
cmpsl
mov
adc
dec
sbb
or
divb
fdivrs
in
icebp
pop
dec
popa
xor
bound
xlat
fnsave
adcl
stc
push
jns
sbb
cmp
mov
ja
std
pop
ljmp
ds
push
icebp
aam
sub
xchg
fldt
shll
fldt
scas
sub
or
jnp
pushf
repnz
xlat
pop
sbb
cltd
out
dec
lret
lods
loopne
jmp
mov
or
jnp
inc
sub
dec
jb
add
imul
inc
pop
mov
pop
xor
mov
std
outsl
pop
mov
dec
roll
inc
cli
out
sub
je
adc
aad
sbb
push
rolb
jb
dec
cmpsl
mov
sbb
and
daa
es
mov
sbb
mov
mov
sub
jno
mov
mov
in
out
lods
mov
shll
ret
es
sbb
xchg
into
jg
fwait
cmpsl
and
dec
sbbb
mov
lock
cmpl
add
xor
cmp
mov
testb
fcomps
les
add
and
inc
mov
cmpsl
je
cmp
mov
idivl
popa
fs
xor
arpl
cmp
mov
add
add
mov
loop
mov
dec
shrb
xor
fdiv
std
test
mov
mov
mov
rolb
dec
or
push
or
push
xchg
mov
xlat
ss
in
jnp
xchg
out
push
out
xor
or
inc
inc
test
xchg
pop
mov
xchg
mov
das
je
cs
jge
loope
inc
popf
cli
or
sahf
aas
jbe
jnp
data16
sbb
or
int3
cmp
rclb
cmp
les
adc
test
test
rorb
cltd
nop
adc
add
pop
push
push
sub
mov
repz
fsubs
xor
add
stos
mov
gs
testl
lcall
and
mov
jmp
jg
adc
popf
fidivl
cld
dec
out
and
jae
scas
or
mov
xchg
cmpsl
xchg
arpl
mov
push
mov
clc
scas
pushf
mov
ficompl
xor
repz
cmpsl
mov
mov
cmpsl
pop
dec
loope
xor
enter
fwait
add
mov
fdivl
sbb
push
fiadds
xor
int
shll
mov
mov
xchg
hlt
xor
test
sub
rcll
xlat
jb
lods
shll
cld
outsb
bound
scas
ret
insb
iret
mov
mov
xchg
mov
xlat
sbb
push
lea
mov
enter
adc
test
call
mov
mov
sub
ret
leave
mov
repz
inc
xchg
pushf
and
jmp
xor
dec
and
jecxz
mov
mov
or
pop
xchg
inc
adc
shr
or
mov
mov
push
xor
pop
fsubrs
xchg
jns
push
adc
fabs
call
jne
push
clc
inc
pusha
int3
shrl
jbe
jge
xor
pushf
inc
movsl
rcll
pop
push
incb
cli
in
cmp
cs
movsb
inc
dec
xor
imul
pop
jnp
mov
jno
icebp
das
xor
je
xor
add
lret
adc
dec
shll
mov
pop
lods
jmp
add
and
xorl
fxch
stc
repnz
mov
jns
jecxz
dec
shll
push
repz
pop
pop
xor
jbe
push
and
hlt
jmp
xlat
dec
cmpsl
fstl
fdivrl
and
test
cwtl
loopne
mov
lret
sbb
push
fidivs
std
negb
sbb
lret
in
add
add
mov
or
inc
gs
jo
nop
xchg
push
pop
push
xor
sub
inc
lahf
pop
nop
push
cmc
jns
sub
aas
popa
rcpps
jae
aam
sub
push
push
xor
mov
push
adc
or
inc
and
roll
mov
sub
jge
fsubrs
aaa
xchg
cmp
js
dec
inc
mov
fadds
lret
mov
cmp
cmc
sbb
jno
xchg
push
cmp
mov
xor
pop
pop
mov
adc
mov
adc
cmp
or
add
and
jne
mov
or
enter
int3
fbld
arpl
fidivrs
push
sarb
call
sbb
and
lcall
test
push
dec
scas
mov
xchg
fdivs
fs
cmp
mov
and
cli
cld
nop
jg
pop
xor
addb
pop
test
and
add
cltd
ficoml
xor
rorb
jo
movb
ss
mov
or
xchg
xorb
ja
mov
fcompl
or
adc
add
outsb
jecxz
inc
addb
test
lahf
imul
and
divb
incl
dec
push
shrb
cmp
add
add
leave
xchg
jno
int
pop
je
pop
enter
mov
or
pop
mov
cli
or
shll
sbb
add
inc
imul
cmp
mov
mov
daa
into
cltd
dec
out
mov
xchg
mov
int3
ja
js
loope
addr16
arpl
mov
sahf
test
mov
ret
dec
nop
pop
fwait
punpcklwd
ret
cwtl
mov
sbb
jg
add
dec
and
mov
or
in
out
or
sbb
push
pushf
js
fnstsw
push
ljmp
mov
xor
daa
dec
mov
inc
pop
test
xchg
jmp
cmpsl
insb
mov
lock
rclb
pop
data16
std
fidivrs
xchg
push
jo
cld
xchg
mulb
mov
aas
push
sub
lret
rcll
pop
fnstenv
jecxz
fwait
and
cld
fimuls
and
dec
dec
pop
loopne
push
inc
xchg
xchg
lcall
cmp
mov
mov
and
pop
outsb
mov
test
inc
xchg
pop
or
jae
jbe
lea
mov
xor
inc
test
fstpl
sbb
arpl
movsl
cmp
fcoml
das
sbb
cltd
in
clc
mov
icebp
mov
call
cmp
add
push
push
dec
movsl
pop
je
cmp
int3
xor
push
leave
inc
cmp
sbb
mov
or
mov
or
leave
je
imul
scas
movsl
in
mov
push
rcl
aas
push
rcrb
jo
movsl
mov
mov
scas
je
and
out
orl
sbb
inc
and
ret
add
adc
clc
adcb
push
sub
pop
jbe
jmp
push
adc
dec
sbb
push
test
sub
dec
mov
mov
sub
lods
or
stos
aas
or
pusha
xor
sub
imul
fs
outsb
adc
fiaddl
mov
and
fsts
sub
negb
leave
add
sub
aam
out
pop
stos
dec
sbb
daa
mov
add
lcall
cmp
mov
stos
aaa
int3
pushf
lods
data16
push
cs
and
sbb
xchg
je
loopne
js
xor
loop
stos
push
and
or
pop
jnp
sub
pop
push
jb
inc
cmp
shll
std
pop
ds
xchg
out
repz
mov
les
xchg
mov
mov
pusha
push
in
xlat
out
scas
mov
aad
pop
push
xor
adc
mov
mov
dec
jg
outsl
sti
adc
mov
pop
jg
mov
repnz
adc
insb
sti
jns
mov
daa
jge
mov
xchg
aad
sti
repnz
movsb
cmp
cmp
sbb
and
fcomps
push
mov
or
push
mov
fstpt
mov
fidivs
mov
inc
or
lods
cld
imul
arpl
push
lret
call
rolb
adc
pop
sbb
cmp
lret
cmp
jle
lret
sbb
and
mov
lret
xor
jb
cs
mov
or
repnz
hlt
mov
xor
lahf
lret
ficompl
mov
sahf
repz
cmp
jnp
push
mov
inc
mov
sbb
sub
xchg
sub
push
or
stos
stos
push
repz
cmp
jmp
cmp
inc
sbb
and
sub
push
xchg
sbb
or
and
divl
mov
sbb
repnz
das
mov
xchg
mov
mov
and
mov
gs
pop
inc
dec
dec
test
adc
and
cmp
mov
shl
fnstsw
adc
fwait
mov
push
mov
ud2
lret
gs
pop
mov
adc
or
icebp
mov
add
jbe
dec
ds
mov
loope
jo
cmpsl
loope
sub
adc
mov
or
pop
lret
mov
stos
out
inc
xor
xchg
cmc
test
lock
fwait
in
dec
test
aad
loopne
mov
fimull
push
pop
push
xchg
xchg
mov
bound
mov
xchg
fcmove
popf
lret
adc
mov
xchg
cmp
dec
xor
nop
lds
sub
push
aad
in
add
ljmp
enter
pop
gs
fisubs
and
js
dec
sbb
cltd
fistpll
push
sbb
ljmp
sub
outsb
je
mov
outsb
repnz
daa
outsl
jae
mov
stos
xor
dec
add
mov
mov
into
sbbb
gs
jle,pn
push
pop
xlat
adc
repnz
popa
mov
shrl
adc
cmc
pop
jl
cmc
test
mov
xor
fsubr
ret
into
fistps
aam
lea
push
mov
pushl
lahf
dec
inc
les
cli
insb
push
ds
jne
imulb
xchg
push
add
cmp
pop
sbb
or
inc
out
mov
mov
pop
xor
mov
clc
fsubr
pop
rcrb
fbstp
mov
cmp
movsl
jle
addr16
lods
add
or
rorl
add
sub
inc
jae
lds
sbb
mov
out
fnsave
divb
fdivl
xlat
inc
arpl
push
stos
nop
je
and
adc
cmp
cmpsl
out
mov
cmp
push
push
movsl
cmpsl
mov
mov
loopne
daa
fisubl
dec
clc
xchg
inc
std
in
jmp
add
and
dec
cmp
xchg
lret
shlb
daa
loope
inc
and
sbb
xchg
dec
sbb
scas
test
and
mov
add
pop
sub
int3
mov
jl
ficoml
adc
mov
sbbl
jno
cmpsl
xchg
test
push
pop
shlb
pop
loop
lds
in
and
xor
push
sbb
loope,pn
cmpsl
mov
add
addr16
and
adc
pop
rcr
jmp
xor
iret
sbb
cmp
cmpsl
mov
mov
cmp
mov
outsb
cwtl
xlat
sub
add
push
lahf
dec
or
inc
sbb
push
sub
mov
push
xrelease
inc
sub
xor
dec
jnp
inc
and
jl
mov
pop
gs
mov
mov
adc
rclb
add
pop
movsb
out
pop
mov
lods
loopne
scas
and
ja
ja
adc
push
xchg
or
fwait
fwait
pusha
mov
pop
orb
lcall
mov
in
add
rolb
outsl
jge
lcall
inc
mov
mov
lds
dec
nop
xchg
mov
int
mov
xlat
js
popf
mov
mov
outsb
mov
lcall
addr16
push
fwait
pusha
roll
adc
inc
mov
imull
sbb
cmpsb
jle
pop
pushf
push
stc
pop
ret
xlat
insb
jns
shrl
jae
mov
ds
ja
clc
test
pop
out
push
push
jnp
cmp
sarl
cli
xchg
rcl
mov
push
and
test
mov
add
inc
inc
pop
adc
mov
jmp
fwait
push
xor
dec
pop
dec
mov
xchg
stos
mov
out
mov
cs
xor
jmp
pop
adcb
fldcw
or
cmp
xchg
inc
lods
mov
std
adc
mov
repz
and
stos
rorl
cmp
arpl
sbb
sub
cmp
loopne
cltd
mov
sbb
nop
clc
flds
inc
jmp
adc
add
les
fucomi
leave
jbe
pushf
cld
and
push
out
dec
sub
cmpsl
and
std
lcall
dec
ds
dec
out
jo
xchg
clc
mov
jge
inc
mov
mov
mov
adc
pop
dec
xchg
addr16
or
stos
movsl
pushf
pop
test
dec
push
dec
test
sub
leave
sti
push
xchg
and
mov
or
jmp
push
lcall
clc
push
lds
out
cmp
call
cmp
add
subl
and
cld
daa
push
gs
std
sbb
hlt
xor
jp
popa
dec
push
sub
cmpsb
cmp
insl
int3
ds
pop
test
sbb
jno
xor
pop
mov
jmp
lret
shrb
mov
jbe
adc
mov
mov
jle
frstor
dec
adc
and
dec
push
mov
jno
xchg
call
je
push
in
xor
push
jne
int
and
jnp
push
xor
iret
ljmp
int3
and
sahf
repnz
bound
js
mov
mov
and
and
ljmp
ss
pop
jns
mov
fisubrs
ljmp
mov
dec
fnstsw
idiv
inc
xor
fiaddl
sub
lea
sub
mov
inc
pop
push
popf
sbbb
and
add
sti
adc
or
js
cmp
pop
in
lods
push
mov
ret
stos
out
imul
pop
call
sub
sub
jl
cld
mov
jno
xchg
out
xchg
mov
sar
mov
aad
je
sbb
add
mov
nop
data16
test
dec
jbe
push
rorl
cmp
out
sbb
pop
mov
jnp
xchg
sbbb
dec
cli
push
sub
fcompl
sub
or
adc
sti
pusha
jbe
sbb
cmp
out
fstps
call
rcr
lahf
imul
pop
xchg
mov
pop
cli
cmp
cmpsl
fs
sub
mov
push
xchg
mov
icebp
jl
fnsave
mov
aad
or
jne
lcall
outsl
addl
ds
add
sbb
ljmp
xchg
cmp
mov
add
std
inc
pop
jl
mov
or
stos
imul
or
lret
les
in
mov
icebp
popf
lcall
cmp
in
popa
data16
jae
shl
iret
lds
xorb
gs
xchg
sbb
add
or
sub
adc
mov
pop
inc
jbe
jb
aaa
lock
leave
out
fdivrs
mov
push
add
jo
mov
sbb
mov
popf
test
and
neg
cmp
nop
pop
iret
xchg
or
insb
inc
xor
and
aam
repz
dec
enter
pop
pop
loope
add
xchg
lret
pop
dec
adc
movsb
movsb
movsl
jp
and
jno
mov
repz
mov
iret
ljmp
stos
and
cmp
pop
sarb
icebp
and
lret
dec
sbb
in
pop
pushf
rcl
leave
fidivs
sub
iret
pop
clc
or
psrlq
add
pop
jne
pop
jb
and
xor
and
fwait
or
mov
mov
or
mov
test
inc
push
pusha
mov
std
js
pop
notb
xor
mov
mov
inc
loope
inc
mov
sub
test
in
cmpsb
push
out
mov
and
sbb
xor
call
add
pop
add
jecxz
or
mov
mov
cmp
test
xchg
push
lods
jae
aad
roll
in
into
pop
iret
inc
cmpsl
mov
fneni(8087
xchg
mov
mov
mul
jl
lds
fdivrl
xchg
loop
stc
jmp
mov
movsb
dec
mov
jae
pop
adc
test
out
sbb
push
cmpl
int3
repz
mov
pop
daa
xor
push
loope
data16
inc
ss
rorl
ret
lods
ss
adcl
leave
addl
movsb
hlt
adc
pop
imul
lea
enter
pop
lods
xor
gs
les
jno
xor
mov
cld
mov
and
xchg
xchg
mov
mov
xor
or
sub
pop
hlt
cmp
sub
aas
aad
xor
or
ucomiss
pop
stos
pop
mov
repnz
cmp
add
stos
andl
cltd
fstps
mov
ja
mov
jno
es
ljmp
movsl
adc
lods
insl
xchg
call
push
iret
mov
dec
aad
leave
cmp
es
cwtl
and
stos
inc
hlt
jns
add
or
jne
xlat
mov
lea
xor
push
dec
lcall
dec
insb
out
in
push
bound
add
dec
mov
fadds
icebp
shlb
in
frstor
fstpl
sub
xor
lock
fs
pop
fldcw
jbe
aas
sarb
jae
iret
mov
popa
call
mov
mov
out
cmp
iret
adc
xchg
dec
shl
lret
mov
mov
adc
fcoml
dec
xchg
test
add
mov
leave
push
cmp
jno
fwait
int
and
test
cmpsl
add
test
out
mov
adcb
inc
dec
mov
jnp
jl
adc
pop
outsl
aad
rdtsc
fisttps
sbb
mov
subl
stos
or
lret
pusha
dec
pop
loope
lcall
jb
xor
mov
dec
mov
inc
and
jmp
pusha
push
jle
xchg
loope
sti
mov
mov
subb
mov
adc
iret
aad
out
and
mov
stos
sub
pop
pop
leave
jb
dec
daa
adc
mov
test
cmc
test
sahf
cli
dec
rolb
cmc
leave
in
aas
jle
out
inc
and
inc
mov
pop
mov
popf
or
test
stc
cmp
ret
les
pand
xor
sti
jmp
jl
push
push
fidivs
ficomps
lcall
mov
add
pop
out
lcall
dec
into
lds
fisttpll
ja
aam
mov
cli
rol
cmpsb
xor
inc
adc
and
int
imul
inc
mov
stos
or
and
jo
pop
sub
cwtl
pop
imul
fnstsw
into
daa
adc
mov
cmpsl
std
shl
jp
mov
call
pusha
xchg
je
lahf
mov
fistpll
ffreep
cmpb
idivl
loop
mov
fmull
lret
imul
xchg
cs
leave
jns
scas
test
in
mov
mov
xchg
dec
test
cwtl
lcall
cmp
arpl
test
xor
inc
or
cld
push
pushf
data16
out
scas
negb
or
sub
jmp
or
imul
pop
pushw
enter
mulb
pusha
pop
stos
push
mov
lods
xchg
and
sbb
push
icebp
dec
mov
inc
stc
push
fwait
push
test
mov
or
aam
and
adc
out
mov
sbb
loopne
hlt
or
or
xchg
cli
xchg
add
inc
and
push
ret
pushf
jg
les
in
test
rcll
flds
lret
xchg
imul
cmp
shlb
push
xor
roll
cmp
fimuls
in
repz
imul
jbe
dec
mov
mov
daa
jg
sub
mov
repz
push
add
inc
fsts
stos
and
jb
pop
mov
je
inc
sbb
iret
addr16
outsb
cli
int3
cmpsb
pop
sbbl
xlat
cmc
xor
xorl
lahf
repz
cmc
fwait
sbb
adc
pushf
jb
stos
rclb
lcall
cld
int3
inc
inc
js
inc
inc
dec
xchg
test
push
xchg
pop
rcrl
mov
out
jp
jns
insb
pop
lcall
jo
rorb
add
mov
push
daa
mov
mov
shll
imul
cmp
mov
test
sub
fwait
int
fwait
push
push
jecxz
mov
out
fisttpl
add
xor
call
mov
xor
or
and
fwait
mov
cltd
in
and
add
sbb
jo,pn
dec
adc
sbbl
mov
jno
mov
add
in
enter
imul
cli
gs
imul
inc
loop
jbe
ds
arpl
lahf
lods
xchg
imul
or
sahf
cmp
cmp
ja
jne
dec
stos
aad
or
mov
mov
cmpsb
pop
sbb
dec
pop
stos
js
movsb
mov
inc
dec
mov
cmpsb
cmp
xchg
aad
lea
xchg
sti
sbbl
loopne
aam
movsb
and
xchg
outsb
mov
aam
in
pop
push
dec
stos
les
inc
sub
or
lods
cmp
shlb
push
add
sub
xlat
ret
pop
adc
aad
or
shll
cmp
out
stos
in
daa
lcall
into
xchg
into
jle
xchg
mov
mov
or
xchg
arpl
lea
xor
out
movsl
inc
inc
lcall
std
dec
les
pop
mov
and
bound
push
sarb
sti
ret
leave
push
es
xchg
icebp
adc
sbb
xchg
push
add
btc
data16
and
xchg
iret
mov
int
dec
insb
adc
or
cmp
outsb
hlt
roll
and
sti
in
sbb
mov
jg
cmp
jne
nop
push
ja
mov
push
cmp
pop
pop
test
shrl
adc
jne
cli
idivb
outsb
or
mov
cmpsb
and
jb
xchg
mov
add
aas
or
jl
or
mov
hlt
adc
mov
xchg
add
leavew
inc
arpl
lret
push
fs
pop
mov
cmpsb
inc
and
ja
or
mov
xchg
mov
push
sub
inc
lss
mov
mov
mov
mov
test
or
mov
dec
xchg
out
shrl
test
fdivl
adc
mov
sbb
nop
or
lods
std
or
jo
sub
insb
mov
ret
pop
add
imul
mov
adc
jecxz
lods
jne
outsb
fs
and
xor
cmp
daa
push
jle
repz
bound
lea
push
scas
xchg
sbb
icebp
and
push
xchg
aas
mov
pop
adc
push
das
aaa
orb
lret
sub
jmp
out
adc
push
pushf
insl
sbb
and
jmp
fdivrs
into
cld
aad
in
inc
or
add
cli
scas
xor
rclb
or
outsl
in
icebp
inc
leave
mov
xlat
mov
push
mov
xchg
inc
cmp
xchg
leave
cmpl
push
cmp
mov
lcall
lret
imul
daa
ss
aaa
xor
or
scas
pusha
nop
loope
arpl
dec
fisubrl
push
cmp
xchg
mov
add
xchg
add
cmp
jae
pushf
mov
lods
test
hlt
scas
pop
mov
fsub
add
aaa
repz
mov
pop
push
xor
imul
lret
push
inc
or
add
push
sbb
repnz
push
xor
push
dec
push
adc
xchg
fcmove
push
jno
cltd
aam
icebp
cmp
mov
pop
std
or
fstpt
aaa
sub
popa
movsb
xor
ljmp
cltd
jns
mov
stos
xchg
in
test
imul
xchg
xchg
insl
daa
pushf
clc
sarl
pop
xlat
pop
pop
dec
sbb
xchg
aaa
mov
hlt
inc
lahf
pop
push
cmpsl
insb
int3
daa
ret
jl
fwait
mov
cmp
nop
pop
std
das
loop
movsb
sub
xchg
jae
fwait
inc
mov
cwtl
add
daa
pop
or
int3
test
test
add
adc
rol
ss
mov
push
mov
rolb
scas
and
divb
pop
in
sbbb
jne
mov
mov
shlb
mov
rolb
test
pop
sti
repz
pop
push
std
adc
mov
jno
out
jp
mov
jo
call
push
jb
pop
xor
xor
push
jp
or
jecxz
in
xchg
cmp
aam
cld
test
addr16
cmp
cmp
ret
outsb
fisubl
push
cwtl
subl
xor
add
pop
xlat
out
sahf
jmp
aad
mov
data16
lods
lret
das
or
popa
inc
nop
enter
testb
push
call
in
ss
or
jl
ljmp
es
ljmp
or
lcall
lret
xchg
stc
in
repnz
jmp
jae
cmp
xchg
int
adc
push
fldl
nop
stos
xorb
mov
adc
push
add
inc
jg
movsl
in
push
adc
cmc
rolb
pop
repnz
scas
sub
or
cmc
pop
and
mov
stc
test
pop
mov
insl
cmp
xchg
mov
int3
and
repz
cmp
popf
clc
stos
xchg
decb
or
out
lock
mov
mov
jns
enter
or
mov
adc
sbb
out
pushf
mov
ss
call
jb
inc
stc
frstor
insl
ja
or
dec
mov
out
in
jne
push
xor
aad
fisubl
pusha
pop
loop
negb
sub
das
sub
leave
rcll
les
std
jno
mov
insl
mov
fcompl
lock
loop
in
shll
popa
inc
adcb
int3
jl
or
pop
lock
fmull
arpl
hlt
jge
in
fwait
jb
nop
fs
dec
cmc
mov
sbb
cwtl
mov
jecxz
pop
sbb
push
inc
test
push
pop
jmp
scas
mov
inc
fldl
movsl
jp
push
mov
sbb
aaa
and
adcb
cmp
flds
jge
inc
lods
call
fprem
imul
xchg
inc
clc
and
out
cmc
das
push
imul
pop
pop
fs
jge
outsl
mov
sbb
insb
test
fnsave
test
adc
stc
xor
xchg
in
mov
mov
mov
adc
cmc
icebp
xchg
movsl
fsubl
fsts
sub
dec
jg
dec
ljmp
dec
jns
xor
es
mov
or
outsl
push
mov
aas
jge
cmpsl
lods
xchg
xchg
rol
push
sbb
popa
adc
inc
icebp
or
outsb
push
imul
sub
jl
sub
cmp
cmp
rclb
scas
sbb
xchg
or
or
dec
or
pop
pop
xor
popf
in
cli
mov
mov
into
icebp
cld
jb
pop
xor
mov
imul
cmp
dec
jecxz
repnz
mov
jbe
ja
flds
mov
out
sub
xchg
fnstcw
loop
pop
scas
out
jg
cmp
and
push
jl
jae
and
sarb
aad
cmp
sbb
dec
ret
loope
pop
sbb
xchg
jne
out
repz
mov
ret
inc
xchg
test
sbbb
or
daa
mov
ds
faddl
mov
adc
add
or
rcll
xor
mov
dec
iret
mov
add
sti
and
enter
xchg
mov
pop
push
in
sbbb
into
in
xor
jns
cmp
push
sbb
add
lock
ss
pushf
loope
adc
push
fistps
add
aam
fisttpl
fidivs
xchg
fisttps
xlat
sub
out
push
imul
xchg
push
jnp
pop
outsb
adc
xor
push
addr16
mov
shrb
sbb
es
movsb
aas
cltd
push
popa
test
repz
popf
inc
xchg
lea
imul
mov
test
adc
mov
int3
sub
bound
sbb
jbe
pop
sub
sub
test
mov
mov
mov
cli
cwtl
add
lea
xchg
pop
mov
inc
test
add
test
scas
popf
cmp
adc
repz
out
das
pushf
xor
fwait
loop
in
fistpl
jg
imul
aad
push
into
sbb
pop
sub
cli
mov
decl
ljmp
adc
adc
insb
add
pop
fstl
xor
xchg
or
jno
xchg
mov
jno
ficomps
mov
ljmp
sarb
cmpsb
push
jbe
xchg
and
push
dec
test
imul
jecxz
cmp
and
cmp
and
movups
lock
outsl
push
gs
inc
pop
imul
stc
aad
push
mov
sub
mov
ds
dec
cmp
cs
in
sahf
rolb
jp
in
jno
sbb
xchg
jg
adc
push
pop
scas
pop
or
lret
pop
sub
jmp
daa
mov
dec
cmp
mov
cmp
in
fwait
and
cld
add
jl
je
jge
pop
gs
cmp
repz
jg
bswap
sub
cwtl
mov
insb
gs
mov
orl
lea
push
lock
adc
pop
pop
ja
sbb
movsbl
or
cmp
mov
xor
sbb
stc
ret
cmpsl
jnp
sar
sub
mov
mov
fwait
cmpsb
push
push
push
fcoms
scas
mov
in
pop
rcrb
int
mov
xchg
int3
pop
loope
inc
add
push
daa
fmuls
inc
add
movsb
adc
adc
lock
enter
and
sbb
test
mov
call
fnstsw
int
repnz
outsl
xchg
lahf
cli
push
dec
mov
in
iret
js
jnp
je
loop
xchg
popa
dec
jecxz
cmp
dec
out
cmpsb
adc
jb
jge
rclb
insl
mov
xor
lahf
pop
xlat
ficomps
das
or
jmp
add
adc
test
lahf
ja
mov
iret
arpl
jl
mov
lds
or
mov
jmp
shl
and
dec
jnp
mulb
and
add
leave
pop
or
sarb
adc
ss
ret
fsubr
data16
mov
loopne
roll
mov
or
arpl
fwait
repnz
arpl
xor
mov
sar
sbb
popf
cld
adc
in
dec
push
aam
inc
xor
sub
mov
push
jnp
mov
pop
lcall
and
mov
movsb
lods
pushf
inc
shr
stos
dec
inc
in
mov
push
pop
mov
jb
or
or
rcrb
jae
push
push
pop
push
xchg
xlat
xlat
mov
aam
cmc
jbe
fucomi
cltd
push
sbb
popa
ret
pop
mov
movsb
lret
sarl
jb
adc
jno
inc
ss
add
imull
mov
xchg
fs
jmp
ret
pop
addr16
jmp
int3
lods
lahf
call
cmp
cmpsb
cmp
mov
mov
out
int3
ljmp
sub
or
insb
inc
sub
stos
pop
mov
out
test
jb
popf
inc
xor
sub
ss
jmp
pop
cmpw
sbb
out
cmp
ret
mov
rorl
mov
inc
pop
jge
imul
ficoml
sti
and
test
sub
xchg
fstpt
test
sub
jo
sbb
inc
sub
leave
sbb
inc
add
adc
aam
jae
stos
push
jge
xchg
pop
ds
xchg
fbstp
pop
inc
test
xor
lock
addr16
fcompl
mov
push
jecxz
dec
sub
pop
fwait
incb
jmp
xor
xor
fldl
cmp
sbb
dec
stc
dec
ret
rorb
test
jae
pop
lods
push
popa
fcomps
std
add
mov
jnp
nop
sbb
sub
add
lods
aaa
cltd
adc
mov
insb
in
pop
ret
inc
mov
mov
cwtl
jbe
mov
cwtl
jae
loopne
mov
lret
and
push
imul
jo
mov
xor
inc
sarb
push
inc
mov
xchg
jmp
lock
aas
and
jp
jle
xor
sbb
jge
popa
iret
dec
xor
shrl
cli
jg
movl
jmp
pop
mov
xor
jmp
jg
loop
cmp
js
inc
popa
push
pop
movsb
insb
inc
sub
cmp
xor
pop
and
test
bnd
stos
ljmp
add
into
mov
repz
repz
pop
mov
mov
loope
addr16
xor
dec
pop
icebp
rcrl
sub
in
inc
fstps
cld
rcrb
push
daa
sub
sub
inc
sbb
add
mov
xchg
sbb
push
pusha
cmp
pop
enter
leave
xor
stc
inc
shlb
ss
mov
ljmp
xchg
push
xor
xchg
or
push
mov
shl
inc
fmul
sbb
mov
push
mov
popa
sbb
repz
ljmp
cmp
loope
pop
jno
testl
ja
bound
ret
mov
rcll
sub
loop
inc
into
mov
push
cmp
ja
imul
arpl
das
arpl
repnz
xor
mov
jae
nop
and
xchg
dec
cmp
xchg
jmp
pop
mov
or
lds
aam
pop
cmp
inc
xchg
nop
lret
adc
jne
faddl
stos
repz
shll
jg
jnp
les
xor
js
lds
push
outsl
xchg
xchg
mov
adc
aad
adc
sub
cs
stos
movsb
arpl
cmp
jae
sub
and
cltd
out
icebp
add
mov
in
adcl
hlt
xorb
shll
xchg
jnp
in
in
push
stos
sbb
jle
iret
dec
xchg
or
addb
subl
jge
add
inc
adc
mov
xchg
shrb
fdivrs
mov
mov
xor
pop
enter
addr16
lock
and
dec
std
cmp
ss
jg
sub
inc
push
cmp
or
insl
into
mov
sti
adc
insl
lods
jb
push
lock
xchg
dec
sbb
out
es
or
xor
add
bound
xlat
mov
push
sbb
jno
xlat
sahf
jns
mov
xor
and
bound
cmp
mov
ja
push
mov
xchg
pop
mov
enter
or
adc
imul
jbe
jge
fxch
jbe
aad
stc
and
inc
nop
dec
les
shll
enter
sbb
test
movsb
mov
ret
rcrl
js
sar
pop
xchg
out
pop
lods
or
popf
add
fidivrl
mov
inc
sub
lds
pop
lahf
sbb
mov
inc
out
or
fdivrl
mov
or
cmp
pop
addr16
out
je
and
imul
push
jno
addr16
cmp
push
sub
cmpsb
or
mov
into
out
jb
push
add
push
lret
bts
sub
test
mov
sbb
in
out
mov
pop
sbb
or
fidivrs
cmp
inc
cli
movsl
call
pushf
mov
jno
inc
daa
lret
clc
pop
jg
jl
sbb
mov
data16
adc
mov
mov
adc
loopne
aaa
es
mov
ret
in
push
daa
cs
or
push
pop
mov
out
mov
jl
lods
adcl
insb
sbb
mov
out
das
add
mov
mov
add
fldt
outsl
jle
mov
inc
cmp
shr
lret
imul
cmpsl
ljmp
mov
xchg
lahf
adc
out
inc
xorb
enter
mov
addl
sbb
cmpsb
sub
pop
in
xor
cltd
fsubrs
sbb
clc
mov
mov
sbb
adc
insb
popa
jge
push
mov
out
add
or
call
and
pop
test
sbb
mov
nop
shll
popa
push
sbb
xlat
hlt
fsubl
xor
mov
sbb
or
lods
mov
jge,pt
mov
test
mov
rcrl
cmp
popa
imul
arpl
jl
and
mov
mov
pop
lds
repz
rcrl
inc
xchg
add
and
pusha
xor
push
sub
mov
movsb
aaa
repz
mov
mov
in
adc
shrl
cmp
jne
sub
jl
or
out
push
cs
frstor
les
ret
je
lds
pop
jns
adc
adc
pushf
aaa
push
shll
cmp
lahf
dec
push
dec
xor
sbb
cs
bound
mov
lret
jmp
js
jge
inc
pop
add
jge
ja
dec
dec
mov
dec
pop
jo
sbb
sub
jnp
jns
jne
pushf
mov
pop
push
sbbw
jo
dec
jne
imul
dec
push
in
add
out
es
pop
fists
adc
or
sahf
arpl
sub
pusha
sub
inc
pop
loopne
pop
cli
data16
cmc
rol
das
pop
inc
sbb
jmp
xchg
cs
cmpsb
mov
lods
inc
sub
add
dec
orb
sub
mov
mov
call
scas
sub
enter
popf
cmp
xlat
mov
mov
adc
and
sarb
inc
cmp
mov
cmp
inc
sysret
shll
jle
cmp
or
pushf
xchg
dec
pop
fnstenv
push
cmp
or
movsl
sub
test
je
fabs
or
stos
pusha
mov
push
fsubl
shrb
mov
lret
cwtl
repz
sbb
icebp
and
daa
mov
xchg
pop
ret
out
out
push
popf
adc
cld
jns
xor
jnp
aad
lds
movsl
pop
fwait
mov
xchg
push
xor
scas
and
or
out
dec
es
dec
dec
xor
sub
test
ret
jmp
xor
adc
cmp
clc
pop
mov
push
cmp
pop
in
jmp
les
and
jne
inc
jmp
jo
icebp
inc
add
les
aas
or
repz
add
mov
jmp
fmuls
add
data16
rcrb
outsl
mov
das
mov
mov
mov
add
pop
pop
std
xchg
or
stos
fcmove
sti
fldenv
mov
leave
pop
jae
mov
add
icebp
mov
pop
aam
cwtl
sahf
insl
jmp
sub
leave
xchg
dec
mov
mov
dec
addb
pop
mov
cmp
sub
jns
ds
repnz
insb
mov
inc
fbld
cli
inc
sub
es
pushf
clc
sbb
sbb
loopne
pop
push
cmp
data16
ds
sbb
fcomip
cli
addr16
pop
loop
dec
inc
mov
or
dec
jne
movsl
call
xor
repnz
cmpsb
and
add
negl
inc
les
or
ja
or
outsb
push
in
inc
in
sub
pop
mov
push
and
pop
ljmp
aaa
pusha
iret
or
fsubs
jbe
outsb
inc
data16
pop
mov
outsb
in
rorl
mov
mov
gs
xchg
das
lret
negb
pop
lcall
imul
xchg
fstpt
ljmp
cmc
nop
imul
notl
aaa
int3
int
lds
xor
xchg
adc
loope
xchg
test
mov
cmp
aad
dec
mov
or
pop
in
sub
frstpm(287
movsl
xchg
daa
or
packssdw
pushf
mov
jnp
or
mov
jecxz
mov
push
add
fdivr
fstpt
ja
xor
outsb
cltd
jae,pt
fdivrl
push
je
shlb
add
mov
out
sti
std
negb
in
jbe
xchg
ljmp
sbb
fbstp
daa
imul
dec
mov
popf
mov
mov
int3
test
fldt
mov
and
jp
cwtl
dec
fdivp
push
sub
mov
cmp
jo
roll
push
je
jae
xor
dec
in
push
adc
jecxz
sbbl
pop
shr
cmp
inc
jbe
pop
push
outsl
in
loop
mull
ss
dec
lret
xor
xor
jnp
pop
sub
or
mov
rclb
jb
jne
dec
pop
pushf
adc
dec
cltd
cmp
sbb
dec
out
sbb
fsubl
add
stos
sar
aad
push
icebp
mov
pop
xchg
or
shlb
jbe
shlb
daa
inc
cmp
inc
mov
mov
pop
outsb
add
or
stc
pop
dec
mov
mov
sub
shlb
nop
shrl
stos
scas
ja
pop
inc
stos
mov
filds
ficoms
adc
fucomi
push
add
add
pop
nop
sbb
jecxz
sbbl
jl
push
mov
sub
mov
dec
nop
pop
cmp
shlb
sbb
mov
pop
loop
insb
push
dec
or
inc
jmp
sti
lahf
aad
mov
int3
dec
push
nop
fwait
mov
jmp
mov
fildll
sbb
mov
cmpsl
and
into
add
and
repz
insb
push
push
push
and
add
ds
ds
and
pop
mov
repz
xor
fstps
fwait
mov
cld
icebp
movl
adcl
cltd
sub
int
sub
xchg
inc
or
jp
pushf
inc
pop
mov
xor
loope
dec
and
mov
mov
adc
lahf
aaa
ror
dec
lods
mov
hlt
push
lea
jo
push
cld
mov
jp
push
das
out
movsl
jmp
cmc
sar
dec
lahf
sub
sbb
ret
bound
repnz
sub
add
insb
jnp
and
rol
sbb
ljmp
test
ja
aaa
dec
outsb
nop
int3
sub
dec
mov
out
or
cmp
mov
fcmovnbe
popf
push
cmp
sbbl
stos
adc
xchg
mov
fdivrl
aad
ss
xchg
sub
fistl
je
mov
std
ljmp
mov
or
in
fisttpl
fisttps
inc
cmpsl
lahf
aam
dec
push
xor
std
and
push
dec
fldz
xchg
mov
ljmp
ljmp
fisubrs
jae
ud0
add
fsub
xchg
sub
ja
sub
into
divb
loop
data16
rcrb
jno
punpcklwd
out
dec
fimull
loop
movsl
dec
insb
jnp
xchg
fmull
push
pushf
add
or
xor
inc
out
fcoml
inc
push
mov
movsb
or
pushf
push
in
mov
lret
lcall
aas
sbb
nop
in
mov
sarl
shr
hlt
sub
pop
lret
inc
dec
loopne
jp
mov
int3
jge
clc
in
dec
xor
sbb
les
pop
or
insl
cmp
test
or
addr16
int3
cmc
pop
lret
fwait
loop
movsl
mov
cwtl
enter
shlb
jno
notb
cld
jno
xor
jne
imul
mov
popf
pushl
xchg
xor
test
in
daa
mov
stos
dec
add
stos
rcrb
cmpsb
xor
scas
fsubs
xor
int3
imul
mov
shrl
sbb
inc
mov
hlt
sti
lea
out
adc
rcll
add
and
das
jns
clc
negl
adc
dec
inc
push
sbb
cmp
and
xchg
push
insb
insb
sahf
mov
sub
movsl
sbb
scas
xor
pop
or
xchg
mov
cltd
xchg
mov
jmp
movl
cmp
bound
and
xchg
adc
jb
iret
int3
pushf
daa
sbb
mov
pop
push
mov
inc
pop
dec
adc
das
xlat
das
mov
out
sub
aas
inc
and
aad
dec
mov
inc
mov
sub
cmp
divb
sub
add
cmp
ja,pn
stos
stos
shlb
test
inc
mov
ds
mov
int
cld
sbb
loope
adc
std
ja
stos
push
aam
xchg
fistps
pop
ret
adc
jg
sub
xchg
inc
aas
mov
dec
mov
daa
mov
fcoml
adc
adc
out
inc
das
pop
add
cmp
lea
jae
jno
dec
push
adc
rcrl
mov
addr16
aad
inc
mov
sub
cwtl
mov
jnp
cmc
ss
arpl
jnp
push
ret
cmp
arpl
lret
arpl
neg
and
loope
and
jge
pushf
and
fwait
in
repnz
sti
int3
pop
outsb
aas
es
jmp
mov
adcb
inc
out
cmp
or
adc
sbb
ja
cmp
cmp
mov
inc
les
cmp
mov
jne
es
in
lea
cmpsb
lods
fcomip
push
sub
cmp
add
add
pop
and
adc
loopne
mov
fisttpl
movsl
imul
frstor
outsl
push
dec
sti
mov
frstor
cmp
stc
dec
pop
jno
shll
jl
push
shlb
testb
js
addr16
add
jecxz
mov
pop
loop
pop
and
test
in
cli
repnz
mov
push
sti
add
xchg
push
push
dec
cs
pop
adc
pop
push
test
xor
fdivrl
scas
or
mov
test
ficoms
incl
cmp
shrl
inc
cmpsl
int3
gs
fucomi
mov
mov
fs
idivb
es
or
adc
push
subb
xor
or
xchg
stos
scas
pop
shll
jbe
outsl
push
icebp
in
sub
aad
xchg
lock
sub
pop
enter
in
jno
fcmovnu
in
add
fdivr
and
mov
ficoms
cmc
test
cli
int
add
subl
inc
insl
rcrb
adc
mov
into
scas
push
adc
push
test
test
xchg
xor
pop
vfmaddsub132ps
inc
mov
lea
fnstcw
lea
daa
fmul
data16
lret
sbb
cld
inc
pushf
jl
addl
pop
pxor
xchg
push
xchg
mov
bound
fnstcw
scas
dec
add
xchg
je
mov
test
mov
aad
add
js
adc
inc
or
clc
mov
int
mov
in
imul
lock
mov
pop
jge
sub
or
test
and
add
shr
fmul
xchg
test
pop
popa
je
shl
jmp
lea
call
dec
in
lock
roll
mov
mov
subl
push
stos
add
jl
shll
jo
and
mov
hlt
dec
cli
std
and
call
shl
pop
pop
rorl
xor
shll
sbb
add
lods
xchg
int3
movl
and
xchg
into
dec
xchg
shlb
lcall
xchg
push
jnp
or
testb
cli
sub
testl
mov
loop
cmp
dec
lahf
fstpt
fmull
mov
xchg
mov
add
out
cwtl
or
pop
out
jb
jbe
inc
push
xchg
divl
fcomps
and
fisttpll
cwtl
lcall
insb
scas
sbb
jnp
xor
xor
cld
outsl
cmp
cs
mov
xchg
mov
cli
dec
ret
inc
pop
ret
add
mov
fists
jo
cmp
sub
sub
cmc
inc
lahf
rorl
in
mov
fucomp
dec
cld
pusha
cli
shl
loop
ds
xor
xchg
mov
out
ret
fimull
add
dec
cld
sahf
adc
mov
jno
enter
push
cmp
mov
pop
out
scas
repz
pop
xor
mov
ljmp
js
sub
mov
or
mov
inc
xor
sub
xor
sub
shll
dec
cmp
xchg
adc
cld
or
shlb
hlt
adc
ss
jle
fists
xchg
mov
dec
shrl
int
mov
nop
xchg
sbb
aaa
pop
xor
and
sub
pop
sbb
jmp
dec
mov
inc
mov
mull
push
fs
push
sub
js
pop
cmp
and
or
push
lret
aaa
lret
dec
frstor
cmpsl
cmpsl
daa
loope
aad
cmpsl
ss
mov
push
adc
daa
int3
iret
xor
rcll
adc
aam
mov
fcompp
cltd
movsl
xchg
insb
jno
loope
mov
in
pop
mov
sub
loopne
ret
pushf
and
js
js
mov
sbb
sbb
push
fwait
stos
arpl
int3
cltd
inc
mov
arpl
std
sbb
and
cwtl
mov
cmp
lods
cmpl
aam
aas
lret
ss
lods
and
js
and
lcall
jo
xchg
pop
inc
ret
dec
xor
fwait
add
and
loope
fptan
dec
cmp
and
and
xor
xchg
mov
js
jl
sbb
jg
or
imul
pop
jl
scas
outsb
or
dec
inc
and
cld
sarb
jmp
jne
lds
js
pushf
stos
add
cmc
pop
sarl
jmp
call
sahf
jmp
in
mov
cmp
das
pop
xchg
push
push
insb
or
sub
ficoms
lahf
pop
pushl
pop
cmp
sbb
scas
push
in
and
push
in
imul
ljmp
mov
push
dec
aaa
jg
fistpl
movb
jle
and
xor
subb
adc
xor
loope
mov
pop
sub
or
dec
jo
into
pop
mov
add
mov
mov
ds
adc
push
and
mov
pop
inc
jmp
not
addr16
push
dec
cmp
xchg
xor
iret
fucomp
inc
loopne
push
push
dec
popf
xor
dec
pop
cli
adc
out
dec
sbb
out
pop
js
and
addr16
pop
mov
mov
jmp
jo
or
mov
fdivrp
ret
cmc
stos
jecxz
ror
dec
icebp
js
cmpsl
xchg
mov
ljmp
sbb
dec
or
mov
inc
push
popa
add
je
and
out
mov
lds
repnz
push
inc
mov
js
inc
jb
out
ret
mov
mov
add
sbb
and
lcall
xchg
mov
xchg
popl
push
pop
scas
fmulp
pop
adc
and
out
icebp
add
or
jbe
pusha
sub
data16
add
sahf
cs
call
ffree
pop
movsl
pop
push
icebp
push
jecxz
jg
out
push
fsubrp
lds
adc
cmp
inc
sarb
into
outsl
les
sbb
dec
cmpsl
fs
jmp
mov
mov
or
sbbb
adc
jno
push
nop
lock
mov
lret
add
cmc
daa
je
adc
icebp
insl
jnp
jno
inc
aas
in
cmpl
dec
and
push
pop
mov
xchg
xchg
jp
ret
pop
mov
popf
mov
dec
push
mov
xchg
ret
cs
in
xor
cmp
mov
enter
sub
hlt
jge
lods
ds
jp
aam
sahf
pop
arpl
push
adcl
xlat
mov
sti
sbb
mov
pop
adc
pushf
pop
popf
stos
je
mov
fsubl
stc
fdivl
sbb
dec
xor
pop
int
push
icebp
mov
mov
inc
fdivl
add
pop
lret
shr
sbb
jl
mov
test
popf
jl
push
sbb
sbb
loope
dec
cmp
popf
xlat
xchg
adc
push
mov
mov
jmp
push
stos
cmp
jmp
in
jmp
pop
stos
push
inc
insl
lea
xchg
inc
test
dec
aas
daa
bound
inc
push
push
adc
jno
scas
dec
mov
pop
jae
mov
mov
cmc
fsubrp
inc
mov
clc
mov
jno
mov
ret
and
movsb
mov
add
mov
lock
sbb
sub
or
push
xchg
into
ss
insb
test
inc
mov
lret
outsb
push
xor
fs
lcall
mov
cmp
adc
push
cmp
fsubrp
nop
rorl
movsb
fsubr
add
enter
jno
insl
loope
sub
mov
lret
fisubs
dec
xchg
add
aas
insl
ffreep
repnz
bound
sub
and
add
imul
jp
outsb
dec
aam
ficomps
pop
ds
add
lock
arpl
push
sub
push
jo
cmp
iret
mov
push
cmp
jle
push
rcrb
inc
jnp
jle
stc
dec
inc
xor
bound
ljmp
pop
inc
sbb
mov
subl
ds
push
push
push
repz
xchg
pop
inc
cmp
and
fs
add
pop
mov
xorb
pop
rorb
xor
xor
jb
data16
fidivrl
xor
shlb
and
xchg
loopne
cld
orb
push
bound
fdivl
inc
pop
daa
cmp
outsl
loopne
mov
xchg
fistps
push
inc
out
dec
sbb
or
ja
pop
arpl
xchg
clc
sbb
psraw
enter
mov
cmp
inc
cltd
lret
insb
nop
mov
jl
insb
sbb
jnp
jmp
push
das
sbb
sub
mov
int3
mov
pop
mov
fldt
and
les
sub
xchg
stos
mov
or
repz
mov
lret
xchg
mov
inc
mov
insl
xor
inc
lret
cmp
cmp
jle
rcrl
aaa
jns
jae
lods
jno
mov
cmpsb
cmp
leave
xchg
daa
std
out
or
jo
incl
ss
aam
cmp
shll
mov
xchg
leave
loop
movsl
dec
or
pop
stc
scas
imul
add
or
or
cmp
aaa
add
add
ret
dec
dec
scas
push
mov
outsb
cmp
jle
push
cmp
mov
mov
mov
pusha
and
dec
int3
push
mov
frstor
push
ss
lods
iret
xor
and
movsl
call
fildll
pop
push
loop
imul
insb
fistpll
dec
fsts
push
xorl
sub
jge
pop
test
pop
in
out
mov
ss
jno
flds
push
xor
not
push
xchg
or
inc
jl
adcb
sbb
call
xchg
cmp
mov
fisttpl
mov
adc
mov
stos
ret
dec
movsb
dec
pop
jle
and
rcll
sbbb
push
mov
cli
int
mov
scas
cmp
lret
aaa
sub
pop
in
xchg
js
push
jmp
cld
add
mov
xchg
xlat
inc
mov
mov
rcrb
fstl
jne
push
jnp
cmp
inc
dec
mov
sub
jo,pn
addr16
jbe
inc
push
ds
xchg
add
js
push
xchg
xor
andb
int3
or
xchg
xchg
pop
sub
mov
mov
scas
xor
out
rol
xchg
push
movl
jo
mov
mov
jle
loopne
adc
loop
push
bound
jmp
lret
dec
dec
mov
or
imul
sub
xor
sbb
inc
dec
imul
mov
loop
lock
add
jg
push
dec
lds
pop
xor
dec
push
pop
mov
mull
test
mull
daa
insb
inc
outsl
push
and
into
push
mov
xor
pop
xchg
sbb
lods
push
sub
inc
mov
push
mov
pop
lea
in
pop
sti
jbe
push
lock
lods
rcll
push
and
fstps
les
ud0
imul
outsl
dec
outsl
mov
mov
add
addl
std
adc
sbb
incb
faddl
cmpsl
incb
stos
div
add
pushf
mov
jmp
andl
les
add
mov
xor
mov
ljmp
xchg
mov
cmc
jl
js
cmpsl
cmpsb
test
test
adc
or
jae
aaa
adc
mov
dec
fmuls
fwait
cmpsb
ss
sti
cmpb
push
loopne
int3
mov
sub
lods
xor
sahf
sub
in
mov
bound
jle
pop
sti
inc
cs
nop
in
popf
stos
dec
repz
sarb
sti
jne
icebp
lods
pop
stc
push
mov
sbbb
mov
icebp
sbb
es
mov
cmp
stc
stc
out
lea
loop
dec
out
mov
in
cltd
int
mov
cltd
adc
sbb
jmp
fwait
in
gs
aad
sbb
js
xor
adc
lret
sub
popf
push
pop
mov
repz
push
lret
add
jbe
xor
movsl
frstor
dec
mov
clc
sub
stos
inc
rcl
aad
jg
movsl
test
lea
imul
clc
test
ja
sbb
pop
movsb
xor
aam
repnz
pmulhuw
jp
mov
or
sahf
sub
sbb
add
pop
mov
or
pop
adc
daa
dec
mov
push
scas
arpl
mov
outsl
sbb
les
ret
push
push
je
imul
push
test
aam
xor
or
mov
pop
movsl
nop
das
xor
lret
push
imul
loopne
stos
ja
aaa
movsb
stc
add
push
dec
jbe
mulb
jae
and
lods
inc
pop
sub
inc
or
push
jp
je
loope
xchg
sti
cmp
pop
push
jnp
clc
xchg
mov
leave
mov
and
xor
dec
aas
inc
cmp
adc
dec
popa
jo
mov
cmpsl
outsb
inc
das
ljmp
mov
mov
sbb
adc
pop
pop
in
loopne
ja
sbbl
or
inc
xchg
hlt
lds
sub
push
sub
ret
outsb
out
inc
js
fsubrs
je
insb
mov
xchg
hlt
stos
arpl
xor
addb
push
dec
imul
cmpsl
mov
test
mov
mov
lahf
fbstp
addr16
sbb
dec
inc
scas
and
stc
aad
push
xchg
mov
test
test
or
cmp
jmp
notb
daa
cmp
xor
pop
xor
sub
hlt
sub
subb
xor
sbb
repz
lcall
xchg
jmp
mov
mov
jp
stos
pusha
loope
in
ja
negb
xchg
add
orb
bound
adc
push
into
mov
fdivl
ror
mov
cmp
xchg
adc
and
jmp
jbe
cmp
and
fcomp
or
mov
sub
clc
inc
xor
inc
das
pop
lret
dec
lahf
sbb
out
xor
es
fildll
sub
scas
imul
pop
mov
sbb
dec
mov
push
pop
pusha
sub
sbb
ss
or
hlt
mov
sbb
cwtl
add
inc
nop
adc
shr
push
ss
ror
mov
xchg
mov
sub
jno
xor
xor
inc
cmp
mov
loopne
fcomps
adc
insl
pop
loop
popf
sti
or
lea
and
es
je
call
pop
je
je
mov
sub
jmp
jmp
push
ret
jnp
jp
xchg
add
mov
mov
sub
inc
cmp
mov
mov
js
cltd
pop
mov
push
pop
cmp
and
mov
and
adc
mov
add
clc
sbb
mov
imull
gs
cmpsb
push
pop
rorb
movsl
ljmp
sub
sarl
fcmovbe
jb
mov
pop
mov
or
mov
jmp
test
adc
push
cmp
out
sub
bound
inc
out
lret
xor
dec
lcall
iret
xlat
push
ja
adc
iret
add
xchg
adc
xor
in
cmp
inc
lret
test
dec
loop
lret
in
sub
add
mov
ret
ss
out
test
je
cs
shlb
cmp
cmc
jge
push
fldenv
xchg
mov
mov
scas
push
jb
jmp
dec
arpl
andl
mov
cli
jmp
test
mov
loope
int
push
sbb
es
jno
out
push
mov
push
xlat
or
push
and
lret
cmpsl
mov
cli
inc
fyl2x
jp
fbld
insb
icebp
mov
jb
cmp
pop
lret
lods
loop
stos
lcall
xchg
dec
mov
sub
std
arpl
fiaddl
leave
push
or
pusha
fnstsw
mov
xor
dec
xchg
dec
inc
pusha
idivl
pop
add
lods
sub
cmp
sub
repz
and
out
in
push
adc
stos
pop
stos
push
push
cs
call
fwait
mov
push
negb
dec
loope
mov
sbb
lods
or
sub
jo
sahf
jecxz
push
inc
adc
jbe
lods
xbegin
loop
adc
lods
inc
daa
lret
pop
adc
push
or
jge
cmpsb
fwait
or
mov
sahf
push
dec
mov
fwait
push
jle
pop
ljmp
mov
jae
fs
mov
lahf
rcl
jbe
add
mov
js
lock
lea
movsb
jne
inc
mov
orl
mov
mull
push
push
xchg
shl
push
fwait
xor
movsb
idivl
mov
xchg
push
push
mov
stc
bswap
in
sub
pop
push
fwait
std
int3
stos
adc
push
xchg
in
fdivs
data16
mov
out
aad
enter
lock
pop
sub
arpl
sub
js
and
das
std
mov
jge
adc
mov
mov
lcall
out
mov
adc
fs
lock
pop
sbb
pop
sahf
push
dec
dec
sbb
xchg
sbb
dec
xchg
and
ljmp
outsb
cmpb
cmp
icebp
out
adc
pushf
xchg
lds
push
push
insb
js
ret
and
jb
loopne
lcall
add
insl
ret
sahf
xlat
jmp
adc
add
pop
in
in
bound
mov
ss
inc
outsl
stc
jb
lea
mov
aad
call
adc
iret
fstps
mov
loop
out
push
sti
lods
and
stos
cmc
push
adc
push
inc
iret
sbb
ja
mov
adc
les
cmp
or
ljmp
and
ds
or
pop
pop
dec
hlt
cmc
mov
loopne
mov
cmp
outsb
mov
inc
test
stos
aad
lret
das
mov
adcl
adcb
sub
lcall
push
sbb
or
aam
mov
inc
and
pop
shlb
jp
dec
fucom
into
and
or
or
xchg
xor
adc
xor
imul
pop
add
cmp
add
call
inc
xor
sarb
stc
nop
lret
repz
mov
lret
mov
in
mov
cli
aaa
jnp
fwait
cmp
mov
loop
insb
test
lods
lock
mov
fisttpl
popf
mov
mov
call
repnz
jnp
xchg
je
mov
xchg
in
insb
or
push
in
sbb
sub
rcll
fsubrp
hlt
mov
mov
mov
in
mov
jnp
push
imul
loope
mov
mov
fldcw
jp
dec
sti
outsb
xchg
adc
pop
pop
xchg
pop
mov
mov
in
dec
inc
repz
jge
clc
insb
arpl
mov
js
push
jecxz
cmc
add
fisubl
ljmp
sti
out
pop
iret
cmp
cmp
jmp
mov
ja
push
fbld
cli
out
sbb
cmpsb
xlat
push
repz
and
xchg
sub
popl
pop
cmp
sbb
pop
jno
and
push
mov
add
movb
jne
aas
mov
and
xor
adc
lock
lret
lea
decb
jno
pop
stos
scas
or
dec
or
lret
or
es
sub
in
test
jmp
aas
inc
add
adc
jo
push
lock
mov
sub
inc
mov
loopne
ret
clc
fldenv
lahf
sub
adc
add
scas
out
mov
inc
mov
cwtl
xchg
lea
loop
xchg
int
cmpsl
xlat
mov
out
das
mov
ss
dec
cltd
mov
lods
xor
jbe
aaa
pop
mov
scas
in
gs
push
insb
dec
lahf
ss
pop
mov
fdivrs
mov
enter
mov
jns
test
mov
into
aas
and
cli
shlb
xchg
adc
sub
xchg
push
dec
pop
shr
pop
out
loopne
lcall
cmp
sbbb
movsb
mov
add
xor
scas
mov
dec
lock
ret
aaa
mov
jg
test
mov
mov
sub
rcrb
or
int
lds
mov
push
mov
out
rcl
pop
pop
fucomp
nop
stos
jmp
cmp
xor
push
inc
jle
cmp
rcr
int3
stos
pop
lds
stos
mov
push
outsl
pop
and
test
xchg
jns
add
mov
in
or
xlat
jb
xor
or
push
popa
insb
push
cmp
pop
mov
cmp
and
inc
addr16
mov
dec
inc
push
cmpsb
push
lret
in
jl
push
int3
jnp
outsb
rcll
iret
sti
lods
stos
xchg
lock
fdivrp
adc
mov
fs
in
mov
or
xchg
aaa
stos
xchg
inc
and
jecxz
push
mov
ljmp
mov
push
pop
mov
and
pop
repz
mov
adc
cmp
jle
leave
mov
nop
xchg
and
adc
lds
imul
sbb
adc
lock
outsb
aam
outsl
add
lahf
clc
mov
cmp
lcall
fisubs
es
popa
add
jmp
int3
repnz
lea
mov
ret
xchg
pop
dec
dec
or
hlt
je
fmull
in
xor
dec
mov
mov
adc
xchg
dec
mull
ret
or
pop
stos
pop
mov
data16
pushf
mov
int3
ds
testl
inc
xchg
in
out
lods
scas
mov
out
lahf
les
sarl
int
test
cmpsb
movsl
repnz
fisubs
add
iret
mov
inc
sahf
insl
cmc
mov
and
cmp
insl
mul
ret
sbb
ja
iret
test
dec
mov
daa
call
loop
fstcw
fcompl
fcompl
ret
xor
and
movsb
pop
sarl
lock
adc
ficoml
fucomp
push
and
mov
bound
jle
xchg
data16
pop
push
mov
cmpsl
sbb
roll
and
stc
inc
push
test
outsb
and
xchg
fs
lock
outsl
shll
push
pop
movsb
loope
dec
lds
movsb
pop
xor
add
jo
push
and
sbb
dec
mov
subb
or
mov
cmp
push
mov
adc
push
xor
mov
rol
pop
movsl
push
out
jne
in
in
mov
aad
sub
pop
ja
popf
mov
inc
pop
scas
in
pop
inc
ljmp
jg
inc
cmpsb
loop
xchg
inc
addl
inc
pop
iret
sti
dec
test
outsl
insb
dec
push
add
faddl
or
xchg
ds
jmp
push
addr16
xor
add
clc
pop
divl
fstl
dec
sbbl
mov
ljmp
repnz
adc
cwtl
inc
add
or
fstps
add
mov
aad
jmp
arpl
es
jbe
mov
xor
lahf
xlat
mov
sub
popl
movsb
mov
sbb
ret
shr
insb
sbbl
mov
jns
pop
jo
push
mov
movsb
ret
sub
jo
push
jne
jbe
call
repz
push
mov
xchg
std
cmp
sub
push
jbe
push
lret
ss
jp
mov
mov
shrb
mov
out
clc
out
aaa
movsb
dec
out
jbe
pop
sub
xor
or
scas
adc
mov
and
stos
stos
mov
push
insl
ret
or
out
ficoms
and
lret
movsl
push
cmc
and
mov
mov
fmull
arpl
loop
pop
idivb
lea
adcl
pop
nop
add
xchg
xor
lds
call
mov
mov
push
lret
mov
repnz
jae
out
mov
push
lret
outsb
cmp
pop
xchg
sbb
repz
add
out
mov
daa
mov
inc
lods
rcrl
push
daa
mov
fdivrs
push
arpl
inc
pop
mov
ljmp
shlb
or
nop
adc
inc
pop
out
hlt
es
cmp
lret
out
call
test
or
and
or
daa
mov
xor
stos
add
jl
lret
fildl
fmuls
pop
sbb
jnp
pop
push
push
pop
jl
outsl
arpl
inc
and
or
jmp
fidivl
mov
mov
insl
decb
xchg
fdivr
add
bound
fidivl
and
mov
xchg
cld
jo
mov
ret
mov
fldt
dec
lea
cs
mov
rcr
sub
or
cmpsl
adc
or
xchg
push
xchg
jno
xor
notl
inc
ja
test
jae
and
mov
inc
sub
cwtl
in
arpl
in
outsl
mov
iret
pop
sub
lahf
sahf
jae
sbb
add
imul
mov
or
add
testl
push
xor
lret
or
xchg
jmp
add
lahf
jle
adc
or
sub
sub
xchg
push
repz
inc
lods
stos
andb
adc
adc
negl
bound
jne
sbb
and
xorb
loop
fwait
hlt
and
inc
mov
icebp
cmp
int3
call
inc
int3
sti
cwtl
xchg
iret
mov
negb
hlt
mov
add
inc
mov
xchg
mov
into
inc
adc
mov
cmp
cmp
adc
xchg
jnp
daa
jg
adc
loopne
mov
adc
push
imull
pop
orl
jb
dec
inc
dec
xchg
push
jbe
sbb
jecxz
mov
pushf
arpl
mov
out
xor
add
mov
xor
pop
sbb
ds
inc
ja
dec
daa
add
out
loope
push
fdivr
mov
jmp
jb
or
stc
inc
xchg
xchg
and
mov
divl
and
inc
pop
lds
mov
mov
out
add
cltd
and
loopne
aad
cli
xchg
mov
mov
scas
inc
loope
mov
ret
sbb
popf
mov
dec
je
out
imul
imul
lock
cltd
adc
fbld
cli
push
inc
push
loopne
xor
jl
mov
call
sbb
dec
xchg
das
xor
jno
mov
sbb
sti
lods
mov
repz
test
sub
jmp
cmp
and
xchg
jae
pop
mov
enter
mov
mov
jp
mov
inc
mov
sub
fildll
cmp
int
push
xchg
aam
lahf
pop
push
adc
and
jge
lahf
shll
mov
clc
mov
sbb
mov
jnp
aas
leave
mov
imul
mov
movsb
or
inc
or
mov
rorb
mov
or
ficoms
out
inc
pop
decb
cld
stos
mov
fucomip
stos
out
out
push
add
cld
fidivs
push
jmp
jne
clc
jecxz
push
mov
mov
arpl
cmpsb
xlat
outsl
pushf
dec
inc
add
data16
push
adc
jecxz
sub
icebp
imul
mov
into
pop
jnp
or
ds
jle
fstps
xchg
inc
hlt
pminsw
jle
je
adcb
sti
loope
pop
ret
lea
popa
aad
cld
xor
movsl
mov
dec
in
cmp
push
repz
jae
dec
ret
cmp
mov
imul
mov
and
orb
dec
dec
jmp
scas
andl
push
insl
imul
add
xor
cmpsb
jbe
fiadds
sbb
movsl
sti
or
pop
jmp
add
popf
push
pop
divps
js
enter
repnz
sahf
xchg
ficoml
or
mov
push
xor
mov
setnp
jo
repz
xor
ret
adc
jae
xlat
xchg
sbb
mov
insb
or
dec
int3
mov
mov
jp
dec
xchg
xchg
jp
add
stc
clc
ss
mov
icebp
adc
fidivl
cmc
dec
fsubp
stos
ss
repz
int
jne
repz
or
out
orl
je
cmpsb
and
idiv
push
fistps
mov
lea
pop
inc
orl
mov
shrl
and
mov
es
das
mov
inc
psadbw
push
pop
ja
enter
stos
mov
shlb
dec
nop
mov
clc
push
mov
int
cmpsl
adc
int3
jmp
mov
inc
jno
xchg
xchg
mov
and
mov
jp
das
stos
and
cmpsb
fistps
pop
jae
jge
mov
rolb
jae
sbb
fmuls
xchg
or
mov
and
jo
mov
mov
scas
test
push
jp
mov
inc
rcrl
jl
aad
mov
push
fs
xor
lret
repnz
add
mov
sbb
cltd
loope
fwait
or
add
leave
sub
popf
xlat
sbb
inc
mov
jecxz
cmpsb
inc
mov
and
ret
sub
inc
mov
mov
mov
push
jmp
ret
in
xor
gs
fs
icebp
sub
mov
jns
push
mov
push
subl
cli
push
and
into
ret
mov
out
dec
jl
cld
lret
and
pop
clc
and
cmc
out
mov
addps
cmp
arpl
repnz
icebp
dec
sub
sub
icebp
jo
mov
sbb
jp
lds
dec
cmpsb
pop
mov
lahf
pop
push
inc
insb
cmp
xchg
sub
push
pop
fwait
call
jbe
push
ds
cmp
fwait
xchg
inc
pop
inc
cltd
push
clc
mov
mov
in
in
mov
pop
sub
xor
leave
hlt
nop
cwtl
dec
jecxz
xchg
in
pop
push
in
aaa
sub
imul
sti
ss
int3
xor
push
dec
xor
iret
out
sub
lds
popa
xchg
adc
push
sub
jmp
or
cmova
subl
pop
adc
add
iret
lret
pop
cmp
push
outsb
mov
gs
fisttpll
in
jae
mov
pop
sbb
incb
xor
scas
mulb
sbb
and
mov
idivl
pushf
insb
inc
loope
insb
lar
mov
xchg
inc
rorl
pop
iret
pop
icebp
es
push
mov
dec
mov
cmc
lret
out
add
ljmp
jae
and
icebp
mov
daa
iret
add
mulb
ds
adc
pop
push
out
adc
pushf
adcb
jae
cltd
jo
adc
lret
mov
sahf
clc
les
mov
mov
loopne
pop
cmp
mov
inc
adc
push
mov
lea
insl
out
fucomi
dec
xor
push
fisttps
xor
mov
jne
out
out
dec
adc
test
out
cs
cmp
fmull
cmp
lea
cmp
or
xor
or
test
out
push
addr16
sub
jnp
test
push
pop
dec
aas
sub
jae
cmp
mov
xchg
outsb
jl
fisubs
and
pushf
jp
sbb
les
mov
loop
mov
stos
movsl
inc
out
loopne
lret
cmpsl
dec
mov
cmp
repz
repz
fld
aaa
hlt
xchg
dec
enter
inc
cmp
sub
pop
lcall
adcl
insb
jae
leave
sub
rcl
gs
repz
es
inc
add
ficoml
les
mov
xchg
lds
jno
mov
mov
sub
lcall
pusha
and
mov
int3
stc
cmp
jl
dec
xor
and
fisttpll
jae
scas
xchg
or
pop
pop
and
add
hlt
push
jp
scas
aas
enter
xchg
aas
popa
cmp
in
stc
mov
lods
xchg
cmpb
orl
or
loop
imul
xchg
cwtl
pushf
jg
sub
mov
adc
cmovl
inc
ds
loope
or
sub
pop
pop
hlt
cld
ljmp
sarb
cmp
sbb
xchg
fs
roll
cltd
push
lds
jbe
test
sub
sahf
sub
hlt
data16
sahf
int
pop
or
add
cld
stc
inc
lods
mov
inc
push
or
popa
xor
inc
cld
stc
mov
std
or
pop
inc
lods
repnz
lea
inc
out
mov
mov
adc
mov
ror
mov
mov
cltd
hlt
loope
pushf
jmp
pop
scas
das
and
xor
sub
mov
xor
mov
and
mov
loopne
imul
ret
in
xor
insl
dec
subl
imul
jmp
scas
das
cld
jmp
mov
in
or
inc
icebp
mov
mov
pop
cmpb
in
insb
xchg
xchg
lds
push
cmp
out
sbb
jo
in
and
cmc
fidivrs
and
nop
dec
xchg
sub
inc
jns
xor
pop
fnstcw
jne
dec
jne
cmp
or
testb
pop
ljmp
lret
and
push
std
push
loop
scas
cld
mov
mull
jge
lahf
in
jne
mov
ljmp
inc
jbe
xchg
test
int3
mov
cmp
mov
xchg
add
cmp
fwait
sub
out
mov
daa
push
scas
jle
scas
ljmp
inc
cmc
outsb
pop
mov
sub
cmp
mov
dec
ja
mov
jmp
popa
or
int
fs
add
fimuls
and
dec
sbb
push
ret
je
fwait
cmp
adc
xor
or
mov
movsb
in
int3
imull
std
out
jo
jle
fiadds
mov
stc
dec
mov
inc
xchg
and
xchg
bnd
sti
cltd
bound
xchg
fs
scas
cmp
mov
icebp
xor
nop
and
inc
outsb
fs
ds
cmpsb
scas
push
push
push
data16
or
es
icebp
jnp
int3
push
sbb
hlt
pop
and
or
mov
shr
adcl
outsb
aam
movsl
in
in
cwtl
mov
sbb
cs
dec
or
pusha
sub
icebp
sbb
leave
in
mov
and
popa
cmp
mov
cmp
mov
mov
push
fwait
loop
pusha
stos
dec
jno
mov
lret
sub
dec
clc
test
dec
and
cmp
mov
pop
dec
xchg
into
cmp
dec
outsl
push
xchg
push
scas
xlat
sbb
mov
mov
push
cmp
outsb
xchg
pop
cld
xchg
xlat
in
dec
es
pop
loopne
inc
mov
leave
sbb
mov
loope
pop
mov
stos
pushf
jae
sbb
sbb
arpl
add
hlt
mov
in
inc
lds
in
lret
negl
cmpsb
fnstcw
push
xor
push
dec
cld
or
mov
xchg
or
pop
insl
int3
fildl
in
lea
adc
fdivs
imul
mov
mov
and
jb
or
push
and
xor
push
adc
dec
sarb
and
xchg
sbb
mov
jge
add
scas
push
mov
mov
lahf
cmp
shlb
lea
or
jns
push
lcall
ds
fistpl
mov
xchg
and
mov
push
ds
sbb
pop
inc
cmpsb
add
pop
incb
shl
nop
xor
cld
mov
jl
sbb
in
push
cmpsl
aas
mov
mov
out
jp
sub
pop
and
pop
sub
push
cs
jno
cmp
jle
test
mov
mov
xor
push
add
mov
testl
pop
mov
ds
sbbl
dec
cwtl
lods
push
inc
lahf
and
imul
cmpsb
mov
adc
int
les
in
daa
fbstp
xor
inc
or
mov
leave
adc
pop
add
mov
mov
pop
clc
cmp
idivb
inc
repnz
push
pop
or
imul
cltd
dec
aad
xchg
movsb
pushaw
lret
iret
pop
stos
stc
jle
add
mov
rcrl
sahf
movsl
sub
and
daa
cmp
and
cmp
rolb
insb
fsts
mov
sti
fimuls
imul
jae
clc
lret
or
mov
int
push
mov
cmpsb
mov
xor
add
ret
stc
dec
mov
adc
push
stos
pop
sti
mov
add
mov
fisttps
pop
jno
mov
cmp
adc
dec
jo
inc
faddl
ret
ret
mov
inc
xchg
dec
les
mov
or
mov
pop
scas
sub
sbb
add
sbb
push
cmp
xlat
ja
jno
pop
shr
cmpsb
cmp
cwtl
ret
xor
dec
sbb
adc
cmp
mov
push
sub
inc
or
icebp
scas
rorb
aam
mov
jns
aas
or
mov
or
fs
xchg
or
or
cmpl
in
jns
jnp
xchg
in
or
mov
jecxz
add
jno
sti
and
imul
enter
das
jns
out
sti
insb
push
imul
sub
leave
mov
test
sub
pusha
orl
xor
xor
jmp
fstpt
ds
in
dec
or
lock
je
popa
aad
fiadds
fdivl
cmp
push
sbb
push
pop
mov
lock
shr
inc
ja
inc
xchg
lea
xchg
push
ss
pop
loope
jle
mov
sub
movsb
xchg
cmp
dec
fs
sub
out
inc
lods
mov
xchg
mov
aas
out
xlat
cmpsl
lock
add
cmpl
inc
jbe
sar
fisubrs
fcompl
or
jns
lods
xchg
out
jl
addr16
push
xchg
test
push
gs
xchg
and
cmpsl
xor
inc
ret
stos
cltd
dec
mov
rcll
cmp
xor
sbb
lret
pushf
mov
jmp
xor
cmp
add
inc
pandn
test
pop
cmp
adc
daa
in
out
fs
xchg
and
fsubrs
dec
test
out
insl
scas
sub
xchg
xor
push
leave
jge
enter
jmp
repz
sahf
cmp
sub
scas
call
inc
push
jbe
sbb
in
and
mov
movsl
xor
ret
pushf
addr16
popa
aaa
dec
and
mov
bound
fwait
into
lahf
loope
mov
push
test
cmpsb
jecxz
into
jo
cmc
ljmp
or
movsb
or
cmpsl
xor
adc
jle
push
ret
int
xor
mov
mov
mov
mov
jp
sub
push
imul
lds
fucomi
aaa
adc
or
enter
adc
popf
add
mov
add
inc
jmp
cltd
pop
insb
lcall
out
pop
and
outsl
and
dec
into
test
mov
pop
andl
fsubrp
xor
push
mov
mov
xor
adc
xchg
lret
pusha
push
add
push
subb
cmp
and
ret
cmp
pop
bound
insb
in
adc
sub
in
xor
cmp
xchg
ljmp
pop
mov
xchg
mov
xchg
jle
testl
and
into
repz
cs
mov
lods
pop
int3
jecxz
jl
mov
add
insb
fnsave
inc
aas
inc
cltd
dec
js
repnz
adc
std
scas
jns
std
sbb
out
icebp
je
and
cltd
sub
mov
or
add
iret
aas
jo
rclb
test
sbb
loop
scas
add
cmc
push
std
pop
adc
xchg
pusha
daa
xor
and
orl
and
cmp
enter
fwait
xchg
lock
ss
inc
call
mul
cmpl
cs
sbb
sub
out
inc
sti
mov
loope
notl
mov
sbb
mov
jne
frstor
popf
outsb
dec
jo
test
mov
jbe
aaa
xor
and
aas
aaa
ret
lea
push
imul
movsb
adc
stc
mov
aad
pop
pop
mov
sub
sti
or
mov
xlat
inc
cmp
dec
sti
cmpsl
std
sub
movsl
push
mov
stos
arpl
fisttps
rcl
lahf
mov
sbb
lret
in
or
lock
stos
aad
enter
sbb
or
rol
mov
fwait
aad
mov
inc
ljmp
jnp
and
arpl
dec
cmpsl
data16
jle
dec
push
mov
ds
sbb
int3
pop
and
ja
sbbb
mov
and
dec
pop
aad
push
mov
dec
adc
xchg
in
ss
jle
or
and
and
add
fstpt
mov
jns
adc
int3
xor
mov
push
out
bound
pop
out
shr
cmpsb
lock
adc
inc
adc
shrl
sub
enter
xchg
insb
inc
lock
insl
ret
lds
aaa
data16
sub
insl
repz
ljmp
outsl
cmp
stc
fdiv
xchg
fsubs
stos
aam
xor
mov
push
mov
sbb
cmp
insl
or
fbld
data16
ficoml
push
test
aad
stc
sahf
sarb
mov
xchg
adc
pop
push
adc
dec
test
gs
xlat
cli
push
fisttps
adc
and
popa
mov
movsl
cltd
add
pop
adc
iret
test
inc
push
push
or
test
or
mov
outsl
inc
outsb
bnd
add
mov
clc
adc
dec
pop
cld
mov
dec
push
fiaddl
fwait
jne
cmpsb
push
add
ljmp
cmpsb
bsf
inc
cltd
dec
gs
fxch
xchg
mov
push
ss
or
in
add
hlt
lock
inc
push
sub
aaa
inc
mov
ds
dec
dec
lea
lret
lahf
jl
loopne
notb
cmp
xor
dec
gs
cmp
movsb
xor
dec
sbb
cli
push
insb
inc
dec
movsl
addr16
bound
movsl
aaa
push
and
loopne
repnz
repz
cwtl
jno
in
bound
repnz
aas
hlt
xor
out
lcall
test
cmovbe
jg
repz
movsl
mov
cmp
sahf
add
or
out
mov
lock
iret
ffreep
cmpsl
jns
push
lds
fwait
or
cli
mov
jp
arpl
insl
push
fisttps
push
mov
dec
int3
mov
fsts
xchg
adc
jnp
and
imul
fisubl
dec
movb
push
loopne
stos
adc
lds
xlat
aaa
pusha
xchg
sbb
mov
ror
or
sti
sbb
dec
pop
xchg
sbb
cmc
xor
stos
jmp
jmp
test
sub
adcl
jns
flds
inc
mov
jo
fs
aaa
dec
add
fstl
xchg
push
rcll
ret
rclb
pop
pop
sub
rcll
xchg
push
das
jle
lret
mov
leave
repz
xchg
mov
stos
mov
test
frstor
cmpsl
mov
xor
mov
ret
and
adc
mov
fistl
xor
orb
ffree
adc
daa
sub
xchg
mov
xlat
iret
ds
jnp
jbe
test
in
mov
inc
mov
mov
and
scas
lds
faddl
insb
ja
repz
in
cmp
pop
and
loop
xorl
bound
dec
push
test
pushf
xchg
and
pop
insb
sbb
rol
cmp
insb
adc
aas
fs
test
cmp
jl
xlat
jo
push
loopne
pop
inc
nop
jecxz
pop
cwtl
add
insl
addr16
inc
mov
xor
inc
aad
int
cwtl
mov
test
add
ret
cli
testl
fistpll
xor
repnz
enter
xor
dec
fbld
push
pop
cmp
jmp
mov
out
in
lods
xchg
add
stc
xchg
cmpl
movsb
scas
dec
out
jp
aam
inc
add
jb
mov
xchg
jle
add
mull
dec
jg
icebp
sbb
jno
push
negb
sub
aas
mov
imul
lods
into
enter
pop
sub
shlb
mov
jnp
push
lahf
xor
popa
mov
jmp
dec
xor
out
jo
mov
shll
or
cmc
pushf
mov
jb
and
push
dec
subl
scas
inc
mov
jg
lcall
jmp
mov
inc
add
imul
xor
mov
insb
cli
mov
js
push
dec
inc
testb
push
jecxz
iret
in
push
rcl
cmp
mov
imulb
lea
fdivs
pop
in
out
out
mov
into
pop
dec
push
pop
mov
pop
adc
xchg
jbe,pn
repz
ret
into
or
movsl
imul
dec
push
xlat
subb
mov
xchg
inc
in
enter
add
jecxz
popl
nop
ret
cmc
xchg
mov
shrl
add
js
das
and
mov
sbb
jne
xchg
lds
popf
cwtl
scas
mov
mov
mov
mov
ljmp
ret
shrl
arpl
pop
cmpsl
out
mov
push
fadds
mov
movsb
push
ss
and
int
xchg
hlt
xor
inc
cs
setbe
arpl
sub
leave
mov
sarl
ret
nop
jne
adc
js
cmp
cmp
lea
inc
lods
adc
mov
add
aad
int
mov
ss
jb
cmpl
testb
mov
mov
cs
stc
push
mov
rol
jno
sahf
int
cvtpi2ps
iret
out
pushf
jne
jnp
mov
xor
data16
jmp
dec
fcomip
in
rcrl
sbb
add
div
push
hlt
cmp
orl
iret
adc
push
pushf
out
into
jbe
cmpsb
mov
shlb
aad
popf
xor
sub
mov
call
fstpt
cli
or
movsl
add
dec
lock
mov
cli
call
loopne
int3
out
pop
out
pop
je
hlt
fbstp
add
sub
clc
mov
out
sbb
jecxz
xchg
ljmp
mov
shll
outsb
hlt
popa
mov
fisubs
add
pop
out
out
adc
inc
adc
pop
push
mov
and
jmp
ds
out
sti
pop
in
or
jle
test
fisttpl
pop
mov
aam
dec
fmul
int3
cmpsl
clc
movsb
cltd
sub
push
and
shll
jno
cwtl
out
out
std
lret
push
shrl
mov
movsl
mov
jo
push
push
adc
push
aaa
mov
sbb
sbb
mov
cmp
mov
repnz
pop
cmp
xlat
xor
dec
out
inc
add
adc
pop
js
or
push
mov
inc
iret
cld
jg
lods
imul
mov
push
pop
mov
sub
ja
js
xchg
and
cmp
xor
mov
inc
cmc
mov
xor
mov
js
lods
jge
push
sbb
das
inc
lret
shl
push
xchg
or
test
and
mov
sub
and
mov
add
push
mov
xchg
and
mov
imul
lock
jb
push
gs
in
fwait
mov
sub
ret
lds
xor
inc
add
clc
lea
test
inc
xor
push
insb
sbb
jge
dec
jne
rcl
lcall
or
aas
out
pop
bound
insl
enter
or
xor
daa
cmp
push
mov
push
outsl
dec
ficoml
icebp
or
xor
dec
xchg
push
cli
mov
inc
sbb
mov
int
gs
fmul
mov
out
or
fists
test
stos
mov
aad
ds
outsl
cmp
data16
push
idivl
push
sbb
ss
js
je
stos
pop
scas
mov
jp
lahf
cmc
sub
sbb
sbb
lods
loop
js
jp
and
mov
in
pop
test
sbb
pusha
cmp
mov
shlb
int
dec
add
insl
pop
xor
movsb
insl
mov
dec
leave
psubb
test
out
jmp
popf
and
push
inc
subb
dec
push
sbb
cmp
pop
fistl
iret
fs
mov
inc
js
addr16
push
mov
pop
cmp
pop
daa
push
jno
aaa
fdivrl
ljmp
or
pop
mov
push
mov
ret
and
or
std
mov
ljmp
add
mov
dec
out
wrmsr
je
inc
cmp
fdivrs
addr16
enter
xchg
mov
pop
movsl
mov
mov
cmpsl
jle
stos
push
inc
xchg
cmp
dec
dec
xor
scas
sbb
xchg
xchg
sarl
cmpsl
and
test
or
data16
mov
inc
repnz
shr
add
sub
out
lods
icebp
add
dec
daa
stos
adc
outsl
shll
bound
push
lock
inc
std
loope
lcall
lret
test
cmp
cltd
jg
gs
dec
mov
mov
add
and
mov
mov
and
imul
cwtl
les
imul
cmp
outsl
shl
jbe
lods
cmp
and
push
cwtl
loop
mov
stc
adc
pop
test
ret
jp
xchg
or
fwait
push
ja
cld
mov
dec
sub
dec
add
aaa
nop
and
cmp
popf
cltd
cmpsl
pusha
dec
pusha
fsubrl
push
sub
adc
cmc
xchg
add
sarb
mov
add
daa
mov
leave
daa
imul
cld
pop
push
repnz
shrl
cltd
out
jmp
mov
inc
inc
lds
jnp
cmp
mov
fnsave
sbb
aas
popf
imul
fisttps
rcrb
xchg
in
loopne
dec
clc
out
mov
scas
push
xchg
and
or
in
mov
pushf
test
pushf
dec
mov
testl
sbb
loop
mov
fistpl
pushl
scas
test
push
adc
call
push
rcrl
lea
in
sub
sub
sahf
lcall
adc
pop
mov
mov
sbb
scas
call
lea
int3
dec
sbb
sub
pop
add
roll
add
mov
fwait
push
out
andl
sub
sub
cmp
dec
sbb
les
mov
daa
sbb
mov
loope
sub
fidivrl
pop
sbb
arpl
lods
shr
mov
xor
cmpsl
test
pop
scas
subl
mov
and
rcrl
popf
cmp
test
push
push
out
inc
sub
cwtl
jge
int3
push
es
sub
les
dec
lahf
ret
cwtl
xchg
jmp
inc
xchg
lds
insl
cli
add
stos
std
stc
adc
ja
jp
fxch
ret
sub
insb
pop
add
lods
insl
mov
mov
push
xchg
or
push
cs
das
xor
imul
sbb
dec
insb
sub
pop
shrl
fnstsw
enter
lret
scas
aam
or
aad
roll
and
icebp
xlat
pop
jnp
mov
in
aam
jmp
sbb
xor
out
cmc
call
xchg
into
push
in
call
in
xchg
pop
pop
mov
roll
mov
sbbb
adc
out
out
mov
ror
sbbl
out
mov
mov
dec
or
clc
fcmovnb
lcall
pop
mov
or
adc
add
xchg
jg
dec
ret
notb
pushf
cltd
and
movsl
mov
sub
mov
inc
xchg
lock
adc
inc
and
pop
pop
mov
idivb
and
dec
lods
aas
cmp
mov
dec
fdivl
mov
inc
shll
sarb
test
mov
fnstsw
fcomps
mov
mov
ljmp
sbbl
mov
mov
std
mov
adc
xchg
push
cli
adc
xchg
mov
add
loopne
mov
loope
dec
dec
leave
out
mov
push
pop
ds
enter
cmp
cwtl
pop
cli
jns
repnz
in
jmp
ljmp
push
test
aad
jbe
mov
inc
sbb
dec
mov
popa
sbb
xor
daa
xchg
inc
mov
jmp
xchg
mov
andl
add
or
sub
fstpl
lahf
out
add
pop
and
xor
dec
es
inc
add
and
jnp
daa
cmp
pop
fnsave
cmp
sbb
nop
cmp
pop
out
inc
sbb
add
adc
jecxz
mov
jmp
push
shll
and
push
stos
sbb
sbb
out
int3
xlat
jp
out
pop
pop
xchg
cmp
inc
das
sub
inc
int
inc
lret
enterw
ret
mov
sub
adc
push
xchg
mov
icebp
sbb
gs
lds
sbb
jb
rcrb
imul
out
idiv
iret
cmp
adc
test
pop
sub
je
xlat
and
adc
mov
mov
mov
stc
add
xor
lcall
negb
adc
or
and
mov
and
sbb
movsb
in
mov
mov
dec
sarl
int3
xor
xchg
mov
cmp
enter
or
sti
pop
jle
pop
fsubrl
sbb
lock
imul
stc
insb
xchg
repnz
jle
sub
mov
pop
scas
fcmove
jge
daa
inc
pushf
mov
adc
or
int
jle
mov
xchg
mov
mov
rcl
sub
xchg
cmp
stc
testb
ja
sbb
outsb
jmp
movsl
lods
add
outsb
xlat
dec
cli
pop
popf
imul
imul
andl
gs
sub
inc
sub
lea
jo
and
dec
jp
sub
in
fcoms
add
mov
out
into
fcmovnu
loope
hlt
sahf
pop
decb
add
pop
out
rcrb
dec
pop
loopne
mov
shrb
sub
leave
fcmovnu
inc
lahf
jmp
lret
fcomps
inc
inc
or
imul
dec
rcl
cmp
mov
outsb
mov
jecxz
pop
add
jns
out
test
pusha
je
fadd
push
fdiv
test
loopne
pop
jmp
xchg
and
pop
add
out
add
push
roll
and
in
or
ror
inc
lcall
push
test
pop
shrb
xchg
rclb
imul
aaa
or
sbbl
outsb
aaa
test
cwtl
adc
insl
cltd
test
mov
xor
lcall
popa
jae
cmp
testb
dec
push
fcmovbe
insl
fcompl
fisttps
test
pop
incl
or
sarb
lock
push
cltd
lret
outsb
xor
push
gs
aaa
jnp
adc
push
mov
pop
call
pop
xorb
jbe
adc
push
ror
xchg
imul
cltd
std
adc
and
lcall
incl
loop
pushf
cmp
dec
cmp
and
and
cmpsb
sbb
dec
pop
xchg
in
add
cs
sub
imul
push
jno
les
std
ss
scas
subb
dec
adc
enter
sbb
dec
int3
mov
cmpsl
cmp
pop
sbb
pop
sbb
or
push
cmp
sub
popf
mov
mul
in
outsb
cmc
xchg
movb
sub
cmp
or
cmpsl
jl
in
loope
in
sub
dec
cmp
push
add
divl
push
das
add
sub
sarl
sbb
movsb
lds
jg
lock
xchg
fs
jle
or
inc
xchg
sbb
iret
insb
adc
mov
adc
in
add
sub
mov
and
repz
push
lcall
test
and
mov
das
in
push
scas
inc
mov
insl
in
rcrl
ja
int3
cmpsl
stc
lods
and
xchg
push
fisubrl
mov
and
cmp
inc
shlb
sarl
cs
push
repz
and
jnp
jnp
lahf
jnp
pop
cmp
mov
pop
js
mov
dec
out
sub
sti
cmp
cmc
bound
test
inc
rolb
push
mov
add
dec
push
sub
dec
test
incl
imul
mov
outsl
lock
ret
add
popa
icebp
jne
sbb
in
scas
pop
push
enter
sbb
mov
mov
test
insb
int3
fsubrs
sub
cltd
movsl
add
in
mov
pop
pusha
push
or
imulb
pusha
jp
xchg
add
aaa
cmpsl
adc
mov
mov
push
mov
lock
das
jnp
jmp
scas
pushf
rcrl
loope
sbb
repz
mov
in
add
pusha
push
in
aam
add
icebp
xchg
fadd
movb
enter
icebp
sbb
shrl
movsl
or
sub
filds
sahf
sub
out
and
scas
cmp
jnp
dec
jl
fnstsw
jmp
outsl
mov
sbb
cs
shlb
sub
adc
xchg
fbstp
cmpsl
jp
movsl
repnz
mov
sub
fcmovnu
div
push
xchg
lcall
addr16
test
mov
xor
adc
sbb
xorl
sbb
push
jmp
popa
in
pop
mov
ja
test
mov
scas
mov
mov
bound
or
aad
roll
js
mov
ja
incb
inc
xchg
rcrl
cld
mov
mov
gs
cmp
xor
stos
mov
int3
pop
xchg
lcall
js
inc
in
hlt
sbb
stos
pushf
sbb
adcb
shll
mov
mov
insl
ja
lods
mov
decl
mov
mov
mov
mov
pop
mov
mov
dec
jo
sbb
pop
movsb
fidivrs
loopne
ljmp
lods
adc
mov
jae
dec
out
jmp
cltd
and
xchg
std
stos
aaa
sub
idivb
sti
arpl
push
push
cmp
xchg
ja
daa
pop
inc
pop
mov
dec
mov
negb
test
orl
add
sbb
in
jp
cmpsl
fldenv
out
fs
or
sar
jo
dec
jp
or
in
shrl
orl
adc
cmp
pop
pop
test
or
call
pop
dec
or
inc
and
idivl
inc
dec
addr16
rcl
icebp
pop
sbb
imul
or
int
xlat
stos
lcall
fisttpll
push
jno
aaa
push
xchg
hlt
or
add
add
sbb
shrl
cld
mov
cwtl
mov
insl
cmp
iret
sub
outsb
cs
and
aaa
aam
xchg
xchg
or
push
cltd
xchg
inc
mov
fwait
imul
mov
in
push
in
scas
mov
into
mov
fisubs
ja
shlb
cs
ds
sbb
stc
dec
cmc
in
xor
rorl
sub
sbb
movsl
out
push
jno
xchg
imul
les
pushl
and
shll
insl
push
inc
ja
push
xor
jnp
outsl
push
jnp
jge
push
adc
jnp
loop
sub
adc
or
push
sub
nop
subl
es
test
imul
pop
mov
test
bound
bound
js
or
xchg
lods
lcall
fwait
pop
mov
push
in
stos
ficoms
int
fld
andl
dec
push
pop
rcrb
pmulhw
leave
push
fildl
call
adc
movsb
xor
orl
sti
clc
xchg
mov
outsl
mov
xor
sahf
or
push
lcall
addr16
mov
sbb
repnz
inc
xchg
arpl
xchg
add
movsb
daa
xor
imul
mov
aad
bound
adc
jno
jmp
movsb
and
add
popa
out
ja
xor
imul
pop
sar
xor
subb
fwait
shl
pop
ficompl
out
lods
rolb
and
pop
and
test
repnz
xchg
mov
shl
sbb
push
mov
shl
pop
sbb
loopne
cmpsl
adc
lods
and
aaa
dec
mov
dec
xchg
andl
loope
or
call
mov
hlt
add
leave
cmpsb
sbb
sbb
cmpsb
add
xlat
sbb
outsb
or
mov
fwait
push
out
pop
jb
stos
pop
jns
sub
arpl
mov
inc
cmc
outsb
push
hlt
sarl
mov
dec
pop
stos
mov
fnstsw
push
xchg
repnz
xor
out
add
enter
adc
subb
or
imul
out
ror
or
cmp
mov
mov
sti
and
in
shlb
mov
mov
xor
ret
sub
push
jb
inc
dec
cli
cmc
inc
mov
and
sahf
or
jnp
rorb
test
inc
inc
lcall
ror
pop
push
inc
cmpsl
add
pop
cmc
adc
cmc
inc
call
push
sub
mov
pop
lock
jmp
imull
mov
aas
xchg
sub
cld
push
cmp
cli
pop
mov
lds
stos
cs
shrl
cmp
xor
pushf
cs
lcall
add
shlb
idivl
cmp
jl
aaa
hlt
das
pusha
add
fimull
jnp
or
mov
push
or
sub
insl
pushf
cwtl
stc
aad
mov
fstpl
mov
dec
loopne
insl
add
jae
or
test
cmp
sub
test
pop
add
sub
push
xor
push
and
mov
cmc
pop
scas
call
shll
sti
jae
lahf
movsl
into
jno
pop
xchg
loopne
mov
mov
xor
lock
pop
jns
xlat
pop
dec
lret
fwait
lcall
push
push
ret
out
or
and
adcl
add
inc
pop
xlat
out
pop
hlt
mov
adc
add
ds
inc
jno
lods
mov
xor
mov
lods
adc
in
jg
jl
aam
add
or
jle
xor
loope
mov
stos
lods
cs
test
pop
jecxz
in
lea
add
dec
inc
lret
lret
lock
mov
data16
mov
aad
in
insb
ss
jg
out
repnz
add
pushl
adc
mov
test
rcrb
dec
repz
or
sbb
imulb
test
mov
dec
clc
push
mov
sub
sti
test
xor
cmc
sbb
lahf
sbb
or
out
inc
aas
mov
pop
sbb
rcl
xorl
lods
cmpsl
bound
inc
inc
stos
mov
cwtl
add
je
movsb
jb
shrl
lods
aam
lea
push
sub
fadd
es
mov
cmp
sbb
jb
mov
shr
cltd
leave
adcl
lds
jecxz
aas
mov
lock
mov
lret
ret
cmp
mov
shrl
mov
cwtl
shlb
cmp
add
and
pushf
fwait
and
mov
insl
out
fwait
cmp
inc
test
addr16
add
sub
push
sti
xor
rol
xchg
leave
cmpsb
cmp
xor
dec
fnstcw
in
fcompl
mov
xchg
xor
push
jo
andl
inc
or
mov
add
cld
test
loopne
cmp
rcrl
scas
push
aaa
addr16
or
pop
test
lret
adc
out
dec
add
call
rcrb
ljmp
iret
iret
sbb
int3
and
int3
sub
es
enter
sbb
mov
xchg
aaa
dec
movsl
rclb
or
lahf
ja
xchg
fsub
mov
out
scas
jae
mov
andb
push
mov
test
mov
std
pop
or
or
mov
and
icebp
outsb
add
jno
mov
scas
xchg
movl
lret
inc
xchg
scas
push
cmpsb
xor
push
data16
lret
loop
fimuls
and
xor
xchg
fidivs
sub
mov
xor
pop
lods
mov
dec
hlt
cmp
popa
pop
popa
shr
dec
jmp
sbb
mov
xor
call
stc
jns
in
bound
call
adc
in
pop
scas
aad
lods
mov
outsb
ds
insb
mov
dec
and
mov
push
xchg
sahf
add
inc
push
and
out
push
mov
add
inc
ja
sahf
mulb
stos
fisttpll
inc
ret
call
arpl
sub
sbb
out
popa
shr
jmp
loopne
xchg
imul
leave
lahf
fnstcw
mov
jae
pop
rorl
inc
pop
insb
mov
sbb
or
scas
and
mov
cmc
popf
push
fcomps
push
or
or
lret
aad
xor
cltd
daa
aas
or
lret
mov
scas
cmp
bound
addr16
inc
cltd
add
js
out
mov
insb
popf
xor
xor
outsb
mov
rcrb
pop
sti
outsb
inc
sub
shlb
mov
insl
dec
xchg
es
sbb
int
cmp
add
xor
dec
push
pop
fs
adc
fmul
mov
adc
dec
xchg
out
insl
jecxz
jge
inc
dec
in
shll
in
dec
sub
mov
icebp
dec
fdivs
or
incb
pop
pop
enter
xchg
mov
push
mov
and
add
cmp
out
mov
xlat
adc
lods
mov
pop
mov
add
jmp
xor
cmp
mov
xor
cld
push
js
dec
outsl
je
push
push
lods
sbb
inc
pop
icebp
lcall
or
scas
xchg
push
stc
add
add
push
cld
sbb
rclb
push
mov
push
pushf
xor
jg
jns
mov
push
mov
sbb
pop
adc
aam
push
push
pop
push
ljmp
hlt
or
std
mov
sti
ss
xchg
filds
fsubrl
mov
jo
fisubl
inc
add
les
inc
dec
mov
loopne
sbb
mov
ljmp
push
mov
test
fists
adc
inc
xchg
into
lds
insl
mov
mov
popf
icebp
fsubr
mov
xchg
loope
shl
xchg
js
adc
add
insb
std
mov
loop
rcll
push
mov
movl
lock
pop
inc
pop
sbb
int
pop
add
pop
out
dec
lret
mov
pop
aas
sarb
inc
pop
sti
and
sub
push
sbbb
les
les
inc
dec
ljmp
push
negl
inc
aad
mov
test
xor
shll
xor
and
jge
xor
sbb
cmp
pop
sbb
cli
pop
scas
stc
dec
cli
dec
push
int
xor
inc
or
dec
push
push
movsl
fwait
addr16
mov
dec
mov
popa
mov
cld
dec
jmp
jg
cltd
aad
mov
jl
mov
fcoms
xchg
jnp
xchg
mov
sbb
fildll
inc
sub
dec
cwtl
jo
mov
add
mov
mov
and
popa
jmp
lods
call
dec
ret
push
sbb
ds
xchg
inc
cwtl
push
xchg
outsl
cmp
adc
mov
adc
extrq
popa
std
pop
pop
push
xor
sbb
sbb
es
mov
and
icebp
pop
dec
mov
aad
add
scas
xor
das
loop
mov
fcomps
dec
inc
mov
shr
adcb
jnp
fcmovbe
call
xor
xor
add
sbb
mov
out
ljmp
fiaddl
fisttpll
push
insb
popf
cmp
xor
mov
pushf
dec
push
mov
cwtl
ja
filds
xor
cltd
fdiv
cs
pop
addb
push
and
sbb
sbb
mov
add
mov
movsb
test
mov
jno
push
fucomi
sub
test
sti
xchg
and
xor
push
jmp
hlt
popf
mov
jecxz
cmp
dec
mov
mov
inc
or
adc
push
scas
cmp
adc
jo
ret
sbb
loope
dec
daa
int
sub
faddp
cmc
fdivrs
sahf
js
stos
es
int
lds
filds
les
leave
outsb
pop
pop
cmp
js
pop
jo
cmp
pop
inc
push
js
cld
adc
cmp
cld
loop
sbb
and
inc
loop
adc
mov
pusha
dec
int3
idivb
gs
ss
scas
lcall
std
pop
dec
cmp
scas
aas
mov
mov
cmpsl
adc
dec
inc
adc
bound
xor
fisttps
pop
xorb
mov
fstps
cmp
mov
cmp
aad
flds
mov
mov
adc
ja
stos
data16
mov
js
pop
shll
sub
dec
cld
push
frstor
add
jle
lret
xchg
dec
jno
pop
xchg
cs
imul
xlat
jp
cmp
and
insl
sub
stc
in
xchg
aas
nop
cli
pmovmskb
mov
inc
mov
jg
out
lods
xchg
mov
enter
mov
js
adc
mov
push
inc
push
mov
sub
xchg
mov
cltd
ret
sbb
icebp
imul
shlb
mov
fbld
sbb
adc
sub
stos
mov
ret
push
adc
pop
adcl
shl
mov
test
xor
sub
cld
lret
loopne
shrb
repnz
enter
adc
shrw
or
cmp
je
scas
imul
add
sti
mov
shl
cs
or
inc
es
xchg
push
mov
dec
sbb
sti
push
sbb
aas
sub
pop
stos
cmp
outsl
sbb
into
in
xor
jo
sub
mov
in
mov
aad
push
jb
dec
call
sar
mov
add
inc
sbb
mov
xor
cmp
test
mov
dec
aad
out
bound
testl
ljmp
bound
add
addl
repnz
clc
std
repz
repnz
sbb
imul
inc
pusha
aaa
or
mov
xor
mov
pop
mov
cmpsl
pop
sar
insb
add
lret
push
imul
xor
aad
aad
rcpps
or
inc
add
imul
std
jg
fs
pop
mov
icebp
fimuls
jae
and
int3
sti
cmp
pop
cmp
sbb
sbb
fsts
or
push
nop
sbb
xchg
clc
dec
pop
push
cmp
sbb
in
call
jmp
sub
jle
scas
out
jmp
xor
and
into
sahf
fwait
ljmp
lcall
push
pop
push
cmp
and
xchg
push
cmp
loopne
xchg
leave
rcrl
jmp
lret
xor
sub
mov
dec
sub
lahf
enter
xchg
insl
aam
out
lcall
push
sub
inc
push
imul
out
popf
jnp
push
or
addr16
mov
mov
pop
in
mov
pusha
fwait
push
xor
mov
push
lahf
jo
xchg
jge
xlat
in
xchg
mov
mov
or
mov
mov
xchg
mov
and
in
sub
pop
or
inc
sahf
xchg
andb
pusha
adc
fisttps
lret
sub
fnstsw
mov
loop
les
and
mov
and
pop
sbb
into
sub
imul
fnstcw
divl
movsl
jp
push
adc
jae
add
sbb
mov
popa
add
aas
bound
pop
mov
xorl
ret
test
enter
in
mov
in
dec
dec
dec
es
dec
xchg
adc
and
inc
mov
adc
ljmp
in
push
lret
lcall
sbb
xor
jns
mov
lods
xlat
pop
in
pop
inc
addw
test
xor
jl
dec
jp
mov
xchg
pusha
jb
pop
cli
sub
pop
dec
inc
jle
dec
dec
jl
out
int3
inc
out
es
in
add
leave
and
data16
cmp
inc
js
inc
cwtl
add
repnz
xor
sahf
in
jne
cltd
lds
cwtl
mov
xchg
mov
pop
fdivr
mov
jno
jge
pop
mov
sub
sbb
pop
inc
lea
jnp
xchg
shr
mov
cmp
mov
xor
jl
adc
adc
mov
out
notl
jae
orps
and
mov
push
cwtl
mov
dec
and
mov
cmpsb
jmp
lcall
sbb
push
sub
inc
daa
cmpsl
xor
rcrb
rcrb
jnp
jg,pt
lahf
das
lcall
or
xchg
stc
and
add
lods
imul
jge
nop
pop
ret
mov
pushf
sti
mov
add
rorl
pop
cwtl
jmp
imul
sub
and
xchg
int3
iret
adc
repz
scas
xchg
mov
mov
fsub
mov
mov
push
mov
fiadds
pop
add
in
nop
dec
mov
cs
aam
cs
and
fistpll
jle
mov
ds
sbbl
and
cmpsl
js
popf
cmp
mov
jne
cmpsb
push
lcall
in
es
ds
adc
popa
cltd
mov
pop
decb
mov
das
leave
adc
mov
shlb
ficomps
rep
mov
pop
cmp
push
popa
or
adc
int3
lcall
jns
push
js
fnstcw
sti
adc
sbb
filds
loope
xlat
sbb
xchg
outsb
inc
push
loop
cli
cmp
xor
mov
jp
xchg
in
movsl
into
xchg
xchg
add
mov
popa
sub
aaa
xor
xchg
push
xchg
aam
xor
fmuls
and
popf
inc
out
cld
in
mov
add
or
sub
push
mov
mov
cltd
pop
loopne
lret
push
ja
and
pop
push
ja
es
jg
test
dec
sbbl
sbbl
lock
inc
test
push
and
cli
nop
push
and
ret
add
aaa
inc
lds
or
fs
mov
push
mov
popf
jl
mov
pop
jae
pop
cmp
jno
pop
movl
xchg
cltd
mov
add
jmp
stc
in
out
lcall
gs
mov
lret
fsubl
lret
and
jno
push
pop
and
push
sbb
cmp
rol
imul
movsl
and
add
or
sahf
mov
ljmp
pop
pop
imul
out
lret
addl
addl
cmp
test
arpl
mov
sbb
and
push
jo
stos
cmp
xlat
lahf
testl
cmpsl
mov
fidivrl
pop
stos
ret
adc
jo
into
mov
fsub
fsubrl
call
adc
imul
jmp
hlt
cs
jp
pusha
xchg
jle
cmp
in
xchg
xchg
shrl
aam
repnz
jmp
or
jecxz
das
lods
lret
or
mov
push
adc
cli
sahf
jo
hlt
inc
mov
push
imul
lcall
dec
push
jge
cmp
inc
mov
mov
fsubr
les
out
push
test
cmp
jbe
jl
xchg
add
fsin
mov
filds
rcll
mov
test
and
xor
stos
adc
mov
add
in
repz
mov
cli
mov
dec
xchg
mov
cli
cmc
int3
mov
call
push
mov
mov
pop
mov
cwtl
add
lods
cld
loop
cmp
popa
outsl
dec
ror
adc
les
bound
fimull
push
gs
sub
xlat
mov
push
ret
xor
daa
add
jno
pop
or
aad
inc
movsl
dec
jl
data16
mov
mov
mov
cmp
lods
add
add
cmp
push
inc
imul
out
hlt
cmpsl
jge
cld
sbb
push
cltd
daa
int3
mov
das
out
int
hlt
jg
insl
stc
add
aaa
hlt
mov
das
insb
sti
jbe
push
xor
dec
lret
test
lock
subb
outsl
test
ss
cli
sti
mov
movsb
icebp
cmp
adc
jmp
fidivrs
mov
jp
cs
in
imul
sub
testb
add
incl
cmp
or
cltd
jne
dec
jnp
cmc
rcrb
ds
cmp
add
faddp
adc
cmp
jb
and
arpl
addl
mov
hlt
mov
lods
mov
ds
cmpsb
dec
enter
xchg
mov
ljmp
jp
dec
push
cmp
add
jne
out
lods
adc
jl
shll
dec
ds
in
cmp
xorb
jl
xchg
push
fisubrs
or
jne
fmul
outsl
sbb
jle
xor
mov
dec
popf
pusha
push
jbe
out
movsl
out
inc
bound
and
dec
mov
adc
adc
fxch
out
outsl
pop
shlb
into
jg
and
add
cmp
imul
cmpsb
pop
loop
cld
sti
movsb
dec
mov
cmpsb
out
sti
push
dec
mov
enter
in
fisubs
jno
lahf
xor
mov
cltd
xchg
faddl
mov
add
pop
xor
add
stc
insb
pop
mov
jge
lret
jp
xchg
fsubrs
sahf
mov
pop
shl
xchg
pop
loop
aaa
fs
mov
or
pop
add
pushf
bound
jno
insb
inc
cltd
dec
mov
push
xorl
push
jle
and
repz
push
inc
arpl
push
cmpsl
adc
pop
xor
not
dec
push
fdivs
xchg
repnz
inc
sbb
add
icebp
fmul
test
popf
xchg
aas
xchg
push
jne
cltd
out
lret
xor
stos
ss
lea
sbb
fmuls
mov
push
push
daa
xor
aam
mov
stos
and
sub
stos
in
clc
pop
cmp
mov
pop
mov
cli
xor
das
jne
idivb
or
cmpsb
lret
in
shlb
lods
fnsave
sbb
cltd
xor
and
enter
loop
jo
mov
inc
shll
mull
xchg
leave
fnstsw
inc
push
mov
aaa
movsb
shrb
sbb
adc
sti
lock
aas
in
mov
clc
pop
jecxz
sub
mov
out
ljmp
mov
pop
jo
xchg
mov
addb
cmp
int3
and
rclb
loope
mov
mov
push
test
cmp
out
rcrb
aaa
pop
loope
adc
jns
and
xchg
add
or
sub
int3
inc
push
or
ja
and
cmc
das
movsl
cmpsl
sarl
pop
or
mov
fadds
movsb
ffreep
not
sti
or
sbb
enter
popa
pop
cmpsl
lock
pop
sub
jg
push
fimuls
pusha
mov
jle
xchg
fdivs
mov
mov
xchg
fisubrs
mov
xor
dec
sbb
test
pop
cld
in
jecxz
clc
lret
test
adcb
stos
ret
js
mov
leave
sbb
shl
loop
loope
call
lods
sub
mov
mov
lret
mov
inc
mov
popf
jle
push
xchg
cld
cmp
mov
pusha
daa
jne
push
clc
lds
cmpb
xor
inc
xchg
cmpsl
fadds
lret
push
das
add
mov
sub
cwtl
bswap
jae
mov
cli
adc
xchg
pusha
dec
pop
imul
sub
fstp
fsubl
lahf
sub
cmp
and
cwtl
inc
mov
push
inc
stc
sub
sub
daa
inc
test
and
inc
stos
insb
sbb
mov
xchg
inc
iret
js
cli
in
gs
cmpsb
ds
push
mov
and
jl
sbb
dec
call
std
pop
outsl
hlt
mov
pusha
cltd
inc
cld
mov
mov
lods
push
xor
sub
add
or
loop
cmpb
lea
lock
das
imul
xor
aad
mov
mov
sub
jns
mov
adc
add
xlat
xchg
aam
push
xchg
arpl
xor
sbb
mov
cmp
sbb
dec
hlt
and
pop
push
adc
jecxz
stc
mov
data16
push
test
inc
mov
jmp
lock
xchg
inc
push
loope
lea
pop
sbb
mov
cmp
dec
mov
push
mov
sub
cmpsl
mov
in
ss
pop
mov
cmpsl
daa
mov
negb
jb
push
inc
insl
fidivrl
sub
repnz
popa
rol
mov
es
ljmp
dec
loop
mull
dec
adc
faddp
jl
dec
push
iret
sbb
mov
jmp
mov
lds
mov
mov
add
jo
cwtl
adc
ljmp
pop
push
loop
mov
and
sub
fwait
ds
rol
fisubs
subb
xor
out
mov
pop
lcall
out
sti
sbbb
mov
test
xchg
imul
mov
movb
cltd
cwtl
test
mov
inc
adc
bound
fs
addr16
push
dec
mov
pop
int3
inc
sub
sub
adc
cmpsl
add
in
pop
add
dec
pop
test
xor
or
xchg
sub
mov
sbb
cmpsb
getsec
jno
ljmp
test
or
pop
test
and
push
push
leave
add
sub
stc
dec
adc
notb
call
out
cmpsl
cmp
lods
out
movb
out
test
mov
add
push
jnp
pusha
or
shlb
scas
or
mov
push
or
lcall
inc
xchg
insl
jmp
cmpsl
adcl
fisubs
mov
push
outsb
cmp
repz
cltd
mov
mov
push
lcall
shlb
adc
mov
xchg
cmp
push
xchg
insb
push
sbb
call
mov
aam
xchg
xchg
sti
imul
pop
xchg
adc
sti
push
dec
fs
insb
es
sub
sbb
dec
stos
xorb
xchg
flds
daa
inc
or
and
pop
mov
sub
les
cmp
sbb
std
push
fsubr
int
out
mov
mov
xchg
mov
mov
or
or
adc
vpackssdw
xchg
inc
orb
mov
push
mov
fdivl
lock
cmpsb
push
xchg
jl
xchg
xchg
xchg
lds
mov
je
loope
scas
pop
sbb
sbb
or
insb
call
mov
jle
mov
stos
or
xchg
in
dec
push
pop
lods
pop
lret
sbb
pmaxsw
mov
pop
scas
mov
cmc
data16
sub
jne
rorl
pusha
mov
ss
test
cli
and
mov
sub
fcoml
out
inc
iret
xchg
fists
sbb
jne
stos
jae
push
adc
arpl
mov
sahf
or
jge
sub
shll
sbb
fcomps
scas
imul
jg
arpl
jb
rolb
xor
inc
cmp
imul
mov
ficoml
mov
imul
cwtl
jecxz
test
in
dec
cmp
cs
jnp
test
xor
std
adc
mov
mov
push
xor
out
sti
fs
cmp
xchg
in
sbb
rcrl
mov
adc
xchg
aaa
je
sbb
shlb
jae
negb
out
sub
data16
jb
jp
outsb
gs
iret
sub
cmc
push
stc
xchg
scas
out
xchg
inc
sbb
lret
clc
rcrl
xor
loopne
mov
adc
shrb
and
clc
mov
je
popf
in
add
das
jo
sti
pushf
or
add
clc
sarb
jge
cmp
xchg
push
imul
jno
int
movsb
mov
cmp
rorl
filds
jp
iret
js
cwtl
movb
cltd
iret
and
pushf
lcall
push
mov
scas
ret
or
mov
call
ss
xor
xor
sub
xchg
pop
mov
push
dec
lahf
dec
push
mov
jne
cmp
stos
pop
les
mov
aam
mov
xchg
jbe
std
pop
push
mov
fsubrl
pop
xor
jecxz
mov
adc
ljmp
lret
stos
sbb
push
sbb
mov
pop
addr16
sbb
pop
xor
stos
and
shlb
sbb
fimull
fld
mov
in
nop
arpl
jge
lret
call
in
push
stos
fstpt
repnz
inc
aad
and
scas
jb
sub
decl
imul
repz
lods
pop
mov
cld
aam
jmp
push
fistps
dec
jae
dec
mov
xchg
dec
btc
dec
es
or
mov
cmpsb
mov
imul
cltd
add
jl
pop
pop
lods
lock
data16
jle
xchg
loope
xchg
push
shlb
outsl
ljmp
jno
int
dec
dec
fbld
into
int
int
sub
out
subb
js
inc
je
ljmp
mov
jo
mov
filds
addr16
push
dec
sub
sub
push
adc
push
sbb
mov
cwtl
gs
cmp
xchg
mov
rorl
pop
cmpl
js
push
loopne
enter
insl
enter
pop
addr16
mov
mov
xchg
movsb
add
sub
movsb
jno
mov
test
jmp
push
outsb
inc
pop
pop
inc
xor
sti
push
cmp
mov
mov
loopne
lcall
mov
mov
mov
rcr
cltd
sar
pop
subl
xor
movsb
stc
mov
stc
push
jns
or
push
dec
out
lea
addr16
pop
adc
insb
pop
and
shl
sbb
sbb
push
in
mov
dec
mov
call
ds
dec
out
mov
das
movsl
fsubp
push
leave
mov
adc
cmc
shlb
cmp
aaa
fldt
push
mov
mov
dec
out
test
stc
cmpsl
xchg
jle
cmpsb
fidivrl
and
notl
or
test
sti
addb
fmul
addb
sub
xchg
push
movsb
shrb
or
xchg
pop
add
xor
insl
pop
cmc
pop
outsb
jbe
aam
xchg
push
es
jmp
mov
jg
fs
mov
pop
pop
push
or
movsb
sbb
inc
inc
mov
sbb
shlb
xchg
fadd
push
cmpl
loopne
popa
push
scas
pop
testl
mov
pop
mov
dec
mov
pop
mov
lret
push
iret
sub
ret
into
popf
loop
mov
mov
and
mov
sbb
fmulp
aas
mov
inc
icebp
out
cmp
inc
jle
push
add
push
mov
cmp
sub
mov
add
cmpl
or
sti
test
lret
aam
fisttpl
sahf
inc
pop
aas
lock
push
lock
rorb
and
ret
aaa
jns
cs
jp
jnp
inc
dec
xlat
xor
loopne
dec
shll
mov
xchg
decb
cmp
js
pop
dec
lds
loop
jb
hlt
outsl
xchg
mov
inc
jge
gs
insb
adc
sub
mov
pop
insl
or
mov
shll
mov
mov
jmp
sub
or
or
icebp
push
mov
xchg
inc
mov
mov
cld
mov
inc
xchg
xor
mov
pop
iret
push
subb
test
and
jns
mov
loope
test
test
mov
mov
int3
or
les
add
into
add
stos
stc
scas
aam
orl
push
mov
or
lods
mov
jle
adc
inc
popa
lods
mov
cmc
ja
xchg
ja
std
jb
lret
sti
push
bswap
nop
sub
mov
xor
inc
jg
test
out
es
cli
push
adc
lcall
fcmovnbe
lret
push
int3
pop
mov
cvttps2pi
or
cmpsl
pop
stos
lds
cmove
lds
insl
scas
sub
and
mov
xor
adc
dec
jne
sub
pop
incl
fwait
lds
das
rorb
loope
fisubrs
adc
lds
lds
imul
ds
mov
add
adc
mov
psllq
lock
and
movsl
std
lods
fistl
xchg
ds
dec
add
insb
pop
dec
jecxz
test
and
mov
or
jbe
jbe
push
mov
icebp
mov
inc
pop
lcall
sbb
fsubrs
pop
lock
movsb
add
scas
movsl
cmpsl
mov
in
inc
mov
sub
push
lahf
daa
iret
lea
jno
pop
stc
lahf
jbe
mov
roll
xor
pop
pop
iret
and
cmpps
ret
xchg
es
lahf
adc
repnz
fldenv
adc
aaa
mov
dec
fldcw
xchg
xlat
in
sti
sub
pop
and
cs
jno
push
cmp
rolb
repnz
and
pop
xor
sbb
dec
int
mov
jp
cwtl
gs
cmp
jp
hlt
push
pop
xchg
inc
mov
mov
sub
fsubrs
rcr
sub
mov
push
mov
shrb
stc
mov
pop
xor
and
repz
sti
shrl
das
pop
ficoms
filds
push
stos
mov
add
pop
push
pop
add
lods
xor
cltd
ja
push
lcall
movsb
and
lahf
fxch
sub
push
inc
jns
mov
pop
push
inc
or
gs
sbb
cmp
sub
mov
mov
fstpl
in
lock
inc
mov
test
mov
xor
int
mov
xor
cwtl
loop
xchg
add
sub
ljmp
mov
pop
mov
xor
jmp
jmp
je
jbe
call
add
andl
pop
pusha
pop
push
in
mov
hlt
jmp
pushf
in
ds
test
ss
clc
xchg
mov
sbb
lahf
mov
mov
push
mov
mov
push
outsl
cltd
out
sbb
rcll
in
in
inc
add
sub
loope
in
lahf
loop
addl
mov
cmp
mov
fdivrs
repz
es
xlat
test
mov
repnz
inc
dec
test
lds
out
fistl
cmpsl
loopne
ffree
jmp
jg
ja
insb
into
dec
or
loope
mov
inc
and
ret
shl
push
or
or
jb
insl
ljmp
push
xchg
xor
jo
imul
imul
mov
push
push
popa
lcall
cmpsl
mov
out
sbb
pop
jl
dec
or
mov
mov
repnz
in
pushf
call
pop
pop
addr16
pop
icebp
push
cltd
scas
insw
jno
dec
jns
mov
mov
push
add
por
outsl
mov
cmp
sbb
sahf
sub
out
popf
mov
test
insl
or
mov
pcmpeqw
fsubr
mov
inc
and
jp
sarb
ljmp
xor
pop
das
or
cld
mov
dec
fsubp
outsl
lea
push
fistps
fstl
shrb
mov
inc
aad
add
push
add
leave
xchg
dec
or
jmp
mov
add
nop
cmp
sahf
xchg
sub
lods
icebp
scas
push
call
idivb
test
and
pop
stos
out
cmp
jb
fs
and
data16
fwait
fwait
cmc
jge
rclb
stc
iret
xchg
adc
cmpsb
lock
out
fwait
out
push
into
rclb
hlt
mov
xchg
pop
notb
mov
stos
inc
ds
adcb
fxch
adc
pop
lret
xchg
xor
or
xorl
jnp
push
pop
imul
scas
repnz
pop
push
sbb
inc
lretw
mov
cmp
sarb
mov
cmc
cmp
mov
incl
dec
push
sbb
jmp
adc
les
sub
dec
adc
into
xchg
and
xor
clc
int3
imul
mov
push
jae
mov
int
fstps
out
out
sbb
mov
push
das
xchg
int
scas
xchg
sub
clc
icebp
shrl
mov
dec
xchg
insb
and
scas
lret
xchg
les
dec
mov
mov
popf
mov
cmp
hlt
outsl
mov
addb
dec
popa
fcomps
aad
jg
rolb
and
sbb
andl
jg
mov
and
xchg
cmp
pushf
cmp
push
mov
jno
push
test
mov
ja
out
cmc
mov
aam
insl
stc
cld
jne
cmp
pop
push
adc
dec
mov
adc
idivl
inc
xchg
int
lea
into
dec
inc
repnz
fsts
test
xchg
and
call
mov
add
cmp
movsb
sbb
loop
into
dec
dec
lds
xchg
sahf
je
cmp
mov
mov
fldcw
pop
int
jno
lret
push
pop
iret
enter
push
ljmp
mov
jp
js
lret
mov
cmc
inc
clc
or
iret
mov
ja
or
pop
ss
add
das
imulb
aaa
nop
jge
inc
lcall
inc
addl
movsl
pop
mov
fmuls
ja
cmp
jns
push
loop
lods
outsb
gs
pop
out
lea
inc
cmpsl
imul
pop
cld
or
xchg
int3
xchg
inc
mov
hlt
mov
clc
mov
fwait
in
mov
into
mov
scas
mov
data16
bound
sub
pop
push
lock
fdiv
mov
mov
addr16
insl
stos
dec
mov
pop
cmp
test
std
mov
add
push
test
push
jmp
in
mov
insl
add
out
fwait
pop
fimuls
addb
and
xchg
and
adcl
dec
lock
jp
cmpsb
inc
adc
ror
jg
lods
cmc
lods
scas
ret
sub
bnd
jecxz
or
push
jecxz
repnz
pop
lods
sbb
xor
add
or
leave
xor
stc
in
or
inc
sahf
mov
fwait
xor
mov
mov
xchg
shll
add
dec
lcall
xor
mov
pop
movsb
mov
sub
xor
mov
and
out
hlt
popf
fcmovbe
cs
push
cmpsl
out
and
sbb
addr16
and
ret
lock
pop
test
mov
xchg
pop
sbb
loope
xor
repz
mov
dec
test
push
insb
mov
mov
cmp
push
loopne
sbbl
inc
cmpsb
xor
mov
loopne
fnsave
test
in
popa
fchs
xor
ds
jp
fs
xorb
sarb
out
lds
in
sbb
clc
sub
dec
hlt
and
cmc
imul
scas
pop
adc
xor
inc
mov
inc
adc
scas
outsl
mov
push
push
mov
cwtl
fs
repz
xchg
mov
jnp
inc
pop
int
mov
xor
fldt
dec
mov
movsb
fdivr
mov
aad
push
add
aas
xchg
std
scas
icebp
fs
ficoms
push
inc
jle
mov
inc
jnp
pop
js
repnz
add
idiv
jge
inc
inc
xor
andb
sub
test
scas
pop
jmp
lret
mov
mov
mov
cltd
insb
adc
jg
sbb
unpckhps
popf
imul
ja
shll
int
mov
scas
dec
enter
and
out
jbe
std
dec
mov
mov
data16
inc
jp
push
sub
pushl
shl
mov
out
jle
ror
push
sub
loope
mov
lock
pusha
sbb
inc
pop
mov
pop
scas
leave
fs
ss
fmuls
xor
mov
fnstsw
iret
sub
jp
xor
jne
ret
mov
and
sub
out
outsl
sarb
sub
ret
sbb
pop
inc
lret
aad
xchg
mov
adc
xor
ret
xchg
xchg
jno
or
imul
aam
xchg
enter
sub
adc
loopne
add
testl
xor
jnp
dec
ror
movsl
mov
mov
sahf
xchg
mov
pop
adc
and
jo
rol
xchg
cli
sbb
aaa
out
jecxz
jmp
fcom
jle
push
jns
adc
mov
shll
je
fcomps
xchg
dec
xor
dec
repz
jbe
inc
adc
or
testb
inc
loope
and
pop
in
inc
outsl
sbbb
pop
sub
test
test
jg
fimull
mov
mov
in
cs
xchg
or
mov
popa
in
rcll
cwtl
dec
or
call
mov
adc
dec
aam
je
in
or
xchg
adc
sti
jo
xchg
mov
sbbb
cmc
mov
or
int
pop
xor
test
xlat
adc
imul
shlb
and
mov
std
mov
dec
daa
mov
jp
cmp
sbb
pop
lock
inc
sahf
repnz
clc
mov
pop
xchg
sbb
call
jae
mov
icebp
loopne
cltd
in
cmpsl
orb
frstor
cwtl
mov
xchg
sahf
ficomps
mull
mov
mov
lret
insl
sbbb
es
aas
adc
pop
out
test
pop
sub
sbb
fidivrl
mov
fs
addl
shrl
lret
outsb
and
or
xchg
popf
adc
nop
mov
lret
movsb
jae
es
cld
jno
cmc
sub
sub
dec
pop
xchg
testb
bound
push
popf
cs
movl
sub
push
addr16
hlt
mov
imul
mov
inc
cmp
cmp
ret
test
pusha
xchg
xor
mov
daa
jne
sahf
scas
mov
add
pop
xor
lcall
xchg
xchg
loop
mov
sbb
aad
jge
lret
xchg
cltd
jne
push
mov
bnd
xor
cmp
daa
sub
sbb
cmp
and
pusha
in
jae
mov
test
lods
gs
and
movsb
sahf
adc
dec
cli
nop
add
inc
les
xchg
xor
cmp
and
shrb
sarb
pop
xchg
xor
or
testl
leave
movsl
xchg
sbb
stos
sbb
stc
mov
nop
jnp
mov
mov
outsl
dec
ret
pop
cld
out
dec
cmp
inc
sbb
mov
cmp
adc
pop
pop
sbb
xor
cmp
outsl
inc
jp
iret
insl
insl
mov
jno
insb
gs
mov
pop
out
cmp
mov
jno
push
dec
je
fiaddl
addr16
xchg
cwtl
shll
jge,pt
sbb
xor
push
mov
pop
or
add
xor
mov
inc
jae
and
jle
dec
push
push
loope
movsb
and
iret
daa
out
and
jmp
fiaddl
jo
rcll
outsl
xchg
outsl
inc
xchg
and
out
les
cltd
arpl
imul
and
push
xor
insb
aas
int
fcmovnu
fidivrl
mov
xchg
gs
fs
daa
cmp
ja
fs
adc
add
test
testl
jmp
cmp
cld
ffree
insl
mov
ret
pop
daa
leave
in
ficomps
inc
aam
jmp
leave
add
inc
pop
add
ljmp
popf
in
mov
xor
mov
imul
in
pop
and
add
adc
sub
aad
hlt
mov
dec
push
lahf
and
pop
imul
xlat
jg
adc
jmp
push
cmpsb
adc
out
aas
add
dec
inc
mov
pop
jge
push
or
lds
pop
daa
movsl
mov
add
movsb
pop
sbb
pop
xor
sbb
aaa
and
pop
mov
lahf
test
pop
aas
pop
pop
pop
ret
es
cmp
inc
inc
cmpsb
jnp
sbb
and
mov
mov
decb
pop
fnstsw
jmp
pop
dec
xor
add
leave
mov
dec
popa
mov
pop
das
mov
add
xchg
adc
ret
ss
jle
push
fsts
pushl
jmp
mov
xchg
add
fldcw
in
pop
out
pushf
sub
mov
xchg
pop
addr16
aad
sub
mov
lcall
out
cltd
mov
sbbb
add
int
mov
inc
cmp
pop
cmpsl
xor
dec
js
adc
insb
jno
or
mov
shl
adc
data16
rcll
iret
fstpl
insl
cmpsb
mov
dec
aad
mov
mov
pop
aam
sbb
shlb
testl
cmp
sub
shr
inc
fwait
jno
inc
push
mov
lahf
xchg
and
cltd
decl
mov
insl
xchg
mov
push
popf
fimull
dec
adc
rclb
and
rcr
sub
sub
mov
mov
ljmp
or
lods
das
xorb
cmp
mov
mov
mov
mov
lahf
mov
out
xor
push
mov
dec
jmp
aad
arpl
add
fldlg2
adc
ss
cwtl
fcoml
aaa
cmpsb
aad
jecxz
sub
mov
mov
xorl
and
in
cmp
adc
mov
mov
cmc
sbb
sub
repz
lds
pop
xchg
out
aam
jns
push
daa
decl
or
adc
lds
pop
nop
and
sub
inc
roll
popf
jo
scas
cld
aaa
loope
adc
negl
les
movsl
mull
inc
cmp
adc
loope
adc
inc
scas
test
call
xlat
xchg
sbb
mov
cmpsb
and
int
or
push
bound
mov
fcomps
loopne
or
cmpb
das
mov
sbb
adc
cld
add
mov
shll
push
shrb
lods
pop
scas
enter
pop
and
ljmp
inc
xchg
and
xor
pop
push
mov
push
inc
or
fst
inc
pushf
mov
xlat
and
cmpsb
leave
fdivs
scas
jnp
jbe
negl
mov
xor
movsl
cltd
adc
jg
jo
jp
int3
sub
es
rcr
ja
test
aad
ja
les
sahf
cmpsb
lea
dec
mov
je
jne
dec
verw
lret
adcb
cwtl
or
push
mov
stc
inc
test
ret
fldt
outsb
lcall
fidivs
pop
and
rclb
pminsw
dec
rcrb
aad
pop
push
stos
sbb
push
xchg
cmpsl
fs
setne
fbld
pop
inc
jp
jmp
or
fucom
repz
inc
push
mov
pop
xlat
sub
stos
or
sub
pop
and
mov
sbb
jmp
lock
xchg
fxam
inc
stc
int
adcl
xor
lcall
xor
lret
mov
dec
mov
jb
fists
xchg
pop
daa
loopne
and
mov
lret
ret
jl
jmp
inc
mov
xor
xlat
rcrb
lock
fildl
loopne
out
cmp
pop
dec
imul
and
fdivl
or
movsb
mov
lret
cmp
lock
bound
test
jmp
push
cwtl
notb
pusha
xchg
outsl
arpl
outsl
mov
sbb
push
arpl
mov
arpl
cmc
cmpb
sahf
enter
mov
sbb
aas
stc
lret
iret
loopne
rcrb
xchg
test
and
inc
decb
or
out
xor
xchg
sbbb
push
jg
mov
dec
test
and
sub
mov
sbb
sarb
sbb
pop
lods
xchg
gs
jno
xor
sub
ret
mov
pusha
in
ja
sti
loopne
cmpb
je
xchg
or
fcom
cmp
jb
adc
xchg
lret
outsl
add
out
or
out
push
push
sbb
ljmp
frstor
pop
iret
jmp
cmpsl
pop
add
fsubrl
sub
sub
xor
aas
and
mov
ret
outsl
pop
mov
dec
push
dec
mov
sub
add
jge
adc
pop
push
push
out
jp
mov
out
test
call
lret
sbb
ret
xchg
xchg
push
lds
pop
out
ret
mov
sbb
inc
imul
dec
ds
cmpsb
aas
sbb
mov
les
call
mov
push
jnp
push
loopne
sbb
xor
stc
mov
mov
pop
sahf
ds
fadds
scas
ss
pop
rcrl
mov
lahf
aas
push
pop
dec
inc
lcall
test
cs
out
sbb
push
xchg
dec
sbb
pop
arpl
push
xchg
sbb
insl
jbe
xchg
jo
outsb
stos
nop
stos
cld
push
out
xchg
stos
xchg
ret
sar
scas
incb
jno
out
inc
sub
je
xchg
in
sahf
mov
fsubl
pop
fidivs
adc
or
sbb
test
jecxz
or
pop
in
and
mov
outsl
fisubs
sbb
cld
gs
fiaddl
cmp
push
into
bound
pop
scas
cwtl
mov
shrb
rorl
mov
pop
bound
or
sbb
clc
dec
clc
cmp
mov
inc
js
adc
cs
ss
fs
push
stc
addr16
bsr
or
xchg
xor
pop
sub
imul
cmpsb
ds
and
mov
movsl
xor
fcoms
sbb
lret
dec
push
ret
cmpsb
fnstsw
jmp
mov
scas
movsb
adc
mov
insb
dec
lret
insb
or
loop
sbb
dec
mov
int
imul
scas
les
loop
push
mov
in
mov
dec
inc
lods
add
lds
lock
add
inc
cmp
cmp
xor
add
cmc
ds
in
pop
jbe
cmp
int
xor
mull
shll
jne
push
mov
pop
mov
daa
lods
lret
and
mov
pushl
lcall
lea
ljmp
mov
clc
xchg
jb
adc
jmp
mov
aas
call
jecxz
js
or
dec
inc
xlat
loop
fnstsw
in
xor
in
out
movsb
insb
out
xchg
cmc
iret
add
mov
pop
clc
sub
jo
mov
in
mov
cwtl
add
daa
xor
lods
in
mov
xchg
xchg
mov
rorb
jo
jp
cmpsb
repz
mov
pop
gs
loop
jmp
jnp
and
sub
mov
sbb
cmc
popf
cld
jnp
push
lea
xchg
add
xchg
loopne
into
cmp
sbb
or
imul
push
xchg
xorb
mov
fsub
pop
pop
andb
fmull
dec
loop
shrl
or
ret
push
push
call
out
jae
and
add
lea
push
mov
andb
iret
popa
mov
loopne
sbb
sub
mov
outsb
add
ss
mov
mov
pop
lcall
out
xor
pushf
add
out
ja
mov
shll
aaa
addb
lods
repnz
fisubs
sbb
jb
jp
out
jge
movsb
cld
cmc
cmpsl
mov
or
xor
inc
jo
int3
shll
inc
mov
into
mov
pop
arpl
ljmp
mov
or
mov
mov
dec
daa
cltd
cmpsb
faddl
push
popa
push
mov
fnsave
movsb
jnp
test
mov
cmp
sub
shll
addl
or
xchg
sbb
or
sub
cmp
mov
iret
scas
sub
std
dec
push
mov
cmp
lret
mov
mov
or
inc
xchg
call
adc
push
cmp
mov
lods
mov
xor
cli
and
dec
push
inc
add
pusha
cmp
fwait
out
inc
push
sbb
pop
imul
subl
add
xchg
push
cli
push
incb
mov
outsb
push
dec
or
sbb
aad
movsl
ljmp
subl
and
inc
hlt
outsb
lcall
scas
push
cltd
mov
loope
rol
push
das
jnp
mov
ja
cmp
mov
adc
add
pop
push
div
aas
popf
inc
pop
cmc
jmp
rorl
sbb
insl
lret
fisubrs
pop
pushf
nop
ret
nop
cmp
adc
mov
rcr
loopne
stos
sub
xchg
push
sbb
or
fcomps
mov
in
pop
cld
mov
lea
mov
sti
fldt
lock
mov
test
std
popa
std
sar
cmp
mov
pop
mov
bound
sub
adc
mov
sub
sbb
sbb
or
out
sbb
fidivrs
fwait
stos
mov
pushf
lahf
shr
sub
scas
bound
mov
or
mov
inc
cmp
jns
or
mov
cmpsl
cli
cmp
or
cld
fisttpll
adc
mov
push
stos
pop
inc
fwait
jo
ljmp
jl
mov
mov
xchg
stc
xor
insl
cmc
lods
fwait
adc
into
jns
xor
mov
std
or
and
mov
jle
shll
stc
xor
pop
inc
add
dec
std
or
jecxz
cmp
shll
mov
mov
fcmovnb
sub
punpcklbw
mov
ljmp
fs
lret
mov
and
sbb
cmp
cmp
cli
mov
mov
pop
out
dec
jecxz
mov
mov
rolb
cmp
into
xchg
or
pop
mov
pop
test
mov
adc
mov
aas
scas
pop
and
dec
int3
pushf
filds
pop
sbb
mov
jae
repnz
and
sbb
fistl
push
push
test
sbb
in
cmp
fldl
shll
sub
or
shl
rcll
arpl
cltd
mov
test
stc
xchg
hlt
nop
mov
std
test
test
sbb
inc
mov
sar
loopne
scas
and
cmp
inc
sub
sarb
push
pextrw
sbb
and
push
add
mov
imulb
xorl
mov
cltd
xchg
xchg
adc
dec
rcr
sub
out
ljmp
inc
dec
mov
push
inc
mov
xchg
adc
cmp
cwtl
add
mov
xor
test
mov
int3
popa
xchg
inc
mov
scas
mov
js
std
adc
mov
pop
sub
cmp
mov
xchg
psubsw
dec
add
or
sarb
push
test
jge
shll
and
dec
leave
mov
xchg
mov
cmp
jbe
shlb
movsl
xor
fscale
xor
jbe
stos
mov
test
mov
mov
jl
pop
and
sbb
pushf
sub
cmp
daa
movsb
mov
adc
jnp
mov
push
push
das
mov
dec
inc
and
sti
dec
adc
fmuls
mov
cli
repz
sahf
sub
sahf
add
movnti
ds
sbb
sub
movsb
ja
das
pushf
stos
jle
dec
xor
or
cwtl
insb
mov
rcrb
les
arpl
lods
pop
dec
mov
cmp
cltd
mov
add
pusha
adc
ljmp
pop
daa
stos
das
jle
dec
jnp
je
or
xchg
iret
push
xor
mov
jnp
xchg
cmc
dec
lret
jns
push
push
dec
in
and
decb
fistpl
aaa
xchg
push
clc
out
loop
mov
or
jp
xchg
lcall
mov
int3
sub
inc
and
in
rolb
repz
sub
or
or
popf
inc
xchg
or
das
iret
or
cs
mov
mov
ret
adc
or
enter
mov
xchg
jb
cmp
mov
pop
jge
call
int
repnz
dec
or
pushf
xchg
mov
int3
test
std
arpl
daa
mov
outsl
stc
push
je
xchg
push
in
pminsw
sbb
mov
inc
ds
faddl
pop
mov
int3
mov
sbb
pop
mov
mov
or
ss
stc
out
enter
mov
push
inc
pushf
mov
push
add
orl
sbb
fists
jns
xor
xchg
mov
movb
test
push
pop
movsl
scas
lahf
je
mov
lds
daa
dec
pop
in
ja
push
jae
xor
jbe
dec
aad
xchg
addr16
jle
mov
mov
mov
cwtl
es
ret
int3
pop
inc
lea
mov
in
pop
aad
cmp
icebp
pop
dec
xchg
fimuls
es
icebp
out
sar
in
lea
sbb
jne
jnp
jp
xor
and
into
cmpsb
mov
lcall
add
mov
inc
sbb
insl
mov
pop
push
inc
in
into
test
clc
cwtl
cld
sub
mov
daa
mov
or
aam
mov
test
jb
daa
or
mov
pusha
add
add
fstpt
sub
ret
mov
adc
mov
leave
mov
xor
imul
or
popf
mov
into
push
jnp
aam
jns
inc
push
call
xlat
jns
lods
and
mov
lods
push
fsubs
mov
into
scas
mov
and
daa
repz
push
adc
lret
xchg
iret
test
movsl
call
xchg
xor
sub
add
xchg
stos
lea
loopne
mov
into
mov
enter
jnp
test
les
insb
dec
inc
cmc
sub
dec
jns
adc
daa
icebp
clc
ret
sbb
shll
jle
test
gs
jp
mov
and
inc
cmp
xor
push
out
lret
dec
or
fimuls
mov
sbb
or
push
sbb
pop
xor
je
hlt
push
outsl
xlat
xor
imul
ljmp
push
scas
lcall
cmpsl
push
mov
xchg
fs
and
push
sbb
adc
inc
mov
inc
jb
fucomp
out
lahf
and
roll
call
ss
mov
lds
jns
repz
dec
xchg
mov
jnp
pop
lods
repz
sahf
loope
and
sub
lea
dec
push
gs
lret
stc
movsb
add
in
fidivrl
jno
mov
imul
xor
cmp
inc
mul
add
mov
sub
mov
int3
iret
sub
das
sub
int3
repnz
shll
int
testl
idivl
sbb
dec
add
inc
aaa
pop
sbb
mov
jmp
xor
inc
mov
xchg
dec
loope,pn
mov
addl
int
lods
xchg
sbb
dec
xor
pop
pusha
push
mov
lds
ret
arpl
shrl
inc
clc
loopne
mov
sbb
xchg
mov
fistl
mov
or
cmp
pop
loop
and
jae
xchg
stos
jl
lock
lds
sbb
cmpsl
test
out
lock
push
add
out
pop
xor
xor
or
push
std
adc
js
cmc
pop
repnz
jge
mov
inc
lods
enter
inc
jl
fcomps
cltd
sbb
mov
jmp
int3
mov
test
aad
loope
fmull
mov
lods
xor
xchg
insb
dec
jb
jmp
xchg
jbe
imul
popa
lcall
adc
pop
jb
fsubrs
jbe
stc
push
push
cwtl
cltd
xchg
adc
mov
sbb
cwtl
clc
sub
fsubr
mov
mov
xchg
inc
loopne
aaa
dec
pop
inc
fcmovnb
push
inc
ret
movsl
shll
out
xor
arpl
add
nop
dec
shlb
ja
popf
add
jmp
mull
jg
pop
lea
inc
push
je
xchg
dec
xor
inc
inc
jl
xchg
mov
loop
imul
jecxz
cli
cmp
cmp
hlt
jo
in
mov
xor
sub
cwtl
pop
xchg
in
push
test
stos
rcl
sub
mov
pop
into
ror
push
lcall
mov
adc
int3
add
fcomip
fdivp
cmpsb
or
test
leave
js
sahf
mov
call
test
out
mov
push
out
dec
dec
hlt
sbb
xor
mov
insb
and
push
cltd
insb
inc
add
pop
into
divb
test
jmp
dec
mov
fs
and
pop
xchg
push
jmp
clc
push
inc
and
mov
popw
sub
inc
lods
aaa
insl
shlb
mov
dec
jo
out
fdivrs
es
adcl
jno
xchg
xchg
cmp
or
adcl
xlat
sub
and
mov
pop
pop
mov
mov
in
mov
bnd
les
sbb
flds
or
cmp
xchg
into
cmp
xor
scas
pop
fwait
mov
cmp
rcrb
mov
nop
loopne
insb
std
out
stc
mov
arpl
test
pop
lods
pop
dec
in
cmp
data16
lods
leave
sbb
icebp
subl
inc
cs
push
pop
addb
add
pop
sbb
adcl
dec
inc
pop
out
les
xchg
sahf
adc
lret
in
mov
mov
rcl
cmp
inc
pop
stos
es
cmpsb
sbb
scas
popa
aas
rcrb
dec
cwtl
jns
xchg
outsl
dec
outsl
negb
cmpsb
mov
les
pop
in
roll
add
mov
jo
mov
enter
sub
mov
test
icebp
pop
int
fcmovu
insb
divb
fistpll
ja
imul
push
mov
pusha
xchg
insb
and
pusha
sti
sub
cmp
pop
push
jmp
aam
insl
cwtl
in
shr
mov
add
cmpsb
test
inc
mov
outsl
jg
je
mov
inc
stc
out
mov
sub
ja
icebp
lret
mov
pop
sti
fistl
mov
movsl
and
in
idiv
pop
fcompl
and
inc
fisubs
out
fdivs
ja
sarb
out
cmp
mov
pusha
aad
lcall
mov
mov
dec
cmp
movsl
lret
inc
subl
addr16
popa
jns
add
inc
inc
lods
scas
insb
and
push
stos
repnz
bound
jae
push
mov
xlat
push
sarl
daa
ljmp
sahf
mov
jno
in
popa
sbb
mov
dec
fcmovbe
sub
icebp
movsl
and
addb
fwait
or
push
pop
subl
sbb
pop
sbb
movb
lods
xchg
inc
mov
and
lret
lcall
mov
test
and
or
inc
je
dec
mov
push
mov
pop
repnz
test
cs
push
push
aam
jne
push
loopne
imul
cmp
mov
jnp
mov
cmpsl
aas
push
imulb
push
stos
out
xor
repz
icebp
push
add
push
ja
push
scas
js
ficomps
xchg
pop
loope
rclb
fstps
cmp
mov
pop
daa
jg
xor
jl
xchg
stos
pop
xchg
inc
inc
inc
test
js
enter
and
mov
xor
inc
jge
cmpsl
pop
icebp
push
mov
jle
stos
cli
and
aam
aas
inc
je
mov
scas
xorl
dec
mov
arpl
mov
inc
addr16
push
bound
rorb
push
inc
push
repnz
int
push
xlat
shrl
push
loopne
cmp
push
popf
sbb
shrl
daa
mov
aas
rorl
and
push
inc
imul
cmp
ret
push
dec
icebp
jge
ret
xor
fisubl
int3
repnz
into
mov
cld
div
inc
aam
in
aad
mov
insl
add
js
xchg
test
mov
test
imul
xchg
mov
jecxz
shll
stos
mov
jb
xor
loope
imul
shll
das
mov
testb
xor
and
xchg
mov
xchg
jecxz
mov
aaa
push
xchg
ret
pop
jge
lods
or
xor
add
les
sbb
nop
lcall
and
scas
aas
and
adc
rclb
iret
jnp
lods
jle
sbb
push
sbbl
ja
sbb
shl
ret
out
je
push
dec
iret
and
in
shrl
cmp
gs
daa
push
jns
dec
or
mov
out
add
mov
jle
mov
push
je
fbstp
sbb
sbb
or
out
dec
and
xchg
and
cmp
imul
fcompl
inc
and
fdivrl
scas
cmp
test
rcll
addr16
hlt
pop
jg
or
mov
sub
push
aam
cld
sbb
inc
or
mov
or
cltd
aam
addr16
mov
insl
popf
es
fistps
sub
ja
sahf
xchg
mov
out
testb
pusha
scas
and
jge
pushf
xor
cmpsb
mov
loopne
mov
dec
push
bound
pop
xlat
fwait
aaa
andb
jno
outsl
test
pop
mov
xor
arpl
pop
repz
pusha
jno
sbb
pop
pop
popl
xlat
push
int
push
or
cmp
xor
stc
mov
inc
dec
les
imul
popf
shlb
test
hlt
sub
mov
mov
pop
mov
stos
mov
cmp
adc
test
push
and
ja
pmulhuw
pop
vcvtss2si
mov
mov
fstpl
mov
inc
mov
iret
sbb
xchg
mov
stc
outsl
cwtl
lock
cmpsb
push
fidivrl
adc
jl
mov
xor
add
mov
add
xchg
mov
call
repnz
fnstsw
nop
lods
mov
mov
sti
cmp
lret
pop
stc
mov
sub
loope
aaa
or
sbb
or
dec
inc
shrb
lahf
outsb
mov
dec
sub
pop
nop
repz
push
lods
mov
loopne
fdivrl
shll
jno
outsb
pushl
fldt
mov
push
dec
jb
push
and
adc
sub
lods
lods
mov
add
mov
pop
jne
mov
jmp
pushf
xlat
in
xchg
inc
inc
xor
ja
das
repnz
mov
dec
test
mov
jno
mov
out
push
pop
leave
in
pusha
js
mov
sub
jp
xchg
lds
in
mov
rclb
jae
push
pop
sti
xor
mov
jle
dec
pop
push
dec
movb
xchg
subl
fbld
dec
mov
cs
gs
jge
incl
out
inc
shufps
leave
ljmp
scas
ret
sub
std
mov
lret
lds
sbb
pop
add
hlt
ret
pop
xchg
and
adc
les
ret
mov
lret
out
add
test
mov
mov
outsl
xor
dec
mov
rcl
mov
lods
and
lods
and
adc
pop
jae
shr
loopne
add
sti
jecxz
inc
out
fadd
stos
xchg
jg
js
ficoml
mov
pop
int3
fs
fistps
add
pop
xchg
enter
in
cltd
mov
adc
inc
mov
or
xchg
arpl
pop
xchg
lahf
and
int3
jecxz
loope
cmp
outsb
mov
shrb
xchg
out
mov
cmp
test
leave
mov
cmpsl
addr16
lods
ss
or
fs
pushf
dec
pop
push
fdivl
cltd
xchg
jne
adc
dec
or
pushf
push
cmpsl
mov
ljmp
jae
jg
std
push
jmp
lea
pop
sbb
das
pop
leave
icebp
push
pop
sbb
jbe
lret
jbe
jb
mov
mov
test
stos
or
jb
int
pop
ds
mov
pop
subl
add
es
mov
idivl
dec
jl
xchg
jbe
dec
or
repnz
dec
xorl
movsl
sub
xorl
mov
popf
arpl
mov
shll
jg
ljmp
and
out
sub
dec
mov
movsl
sarl
addb
mov
dec
or
jecxz
ret
mov
imul
mov
pop
cwtl
xchg
or
push
outsl
cmc
mov
mov
iret
adc
rcrl
loop
dec
xor
mov
pop
xchg
pop
ss
sub
sub
xor
jl
in
sbb
fisttpl
cs
roll
cwtl
mov
mov
mov
or
dec
push
cmp
push
mov
arpl
pop
xchg
rclb
xor
jl
sbb
jns
or
xchg
and
icebp
ds
int
xlat
mov
call
pop
xlat
pop
movsb
dec
jo
mov
cmp
aam
hlt
iret
cmp
iret
aas
int
xlat
insb
loop
xchg
add
in
shr
subl
lea
cmp
sarl
mov
cmpsb
xlat
repnz
add
les
pop
add
xchg
adcb
jno
repnz
push
inc
int3
insb
sbb
dec
jg
imul
cmc
xchg
lahf
or
adc
jg
push
jp
sub
inc
inc
dec
inc
cwtl
arpl
in
out
jge
out
daa
jae
loope
stc
mov
and
jp
xchg
sub
cmp
and
notl
mov
xor
mov
ds
insb
jns
mov
and
cmp
or
loop
cmp
cld
test
mov
push
pop
fdivs
xchg
lods
fs
je
fs
jmp
add
repz
cmp
xor
jo
out
xchg
icebp
nop
mov
mov
and
jbe
mov
enter
repz
addb
dec
sbb
add
pop
inc
mov
loope
repz
sub
pop
cmp
pushf
movsb
and
imul
stc
loope
mov
mov
mov
out
mov
mov
repnz
cli
push
and
sbb
xchg
roll
test
pop
jns
outsb
loop
mov
ret
pushf
out
mov
icebp
inc
lahf
outsb
pop
lods
add
and
insb
add
imulb
and
add
add
cmp
xchg
xor
rcll
pop
aad
mov
push
je
je
rcl
fidivl
imul
cmc
jmp
ret
mov
ds
mov
fsubl
ret
rorb
lds
lcall
mov
pop
push
xchg
jge
push
insb
push
push
add
mov
ficomps
sub
lods
inc
rorb
cmp
xor
sbb
hlt
cmpsb
aam
cli
xchg
stos
and
and
jl
repnz
data16
jae
gs
fwait
mov
pusha
mov
repz
adc
mov
leave
sbb
push
cmp
rcr
lret
xchg
xor
adc
aaa
imul
loopne
int
out
mov
fcmovnu
push
push
and
mov
pop
movsb
mov
xchg
and
adc
push
jns
fs
jno
jnp
nop
mov
les
dec
je
jecxz
pop
into
enter
stc
test
insb
mov
scas
lods
add
jns
shl
jp
pop
outsb
fidivrs
sbb
hlt
es
iret
xor
xchg
xor
sbb
cmpsl
xchg
dec
sub
pop
out
stc
repnz
lret
in
mov
push
cli
cli
test
mov
push
jp
dec
inc
aam
seta
xchg
or
mov
and
fstl
fidivl
xor
hlt
adc
jp
test
rclb
pop
inc
fbstp
cli
test
xchg
mov
xor
insl
rolb
callw
out
or
cmp
jmp
xchg
xchg
icebp
push
imul
repnz
or
pop
mov
bound
test
lods
pop
repnz
or
or
or
int
int
in
test
mov
jbe
dec
xor
cmp
inc
scas
fwait
shll
push
outsl
pusha
and
xchg
lea
hlt
hlt
and
mov
outsl
mov
lcall
into
jae
aas
aas
cmp
adc
mov
mov
loopne
mov
push
adc
sbb
xchg
adc
push
dec
inc
sbb
lea
test
shrl
insb
lods
aaa
sarl
dec
ret
stc
je
std
cltd
addl
add
dec
fists
repnz
mov
sbb
std
pop
sbb
inc
sbbl
aad
int
push
sbb
cmp
adc
aas
cmovg
or
mov
push
and
sub
sbb
adc
in
add
movsb
lahf
outsb
fbstp
or
mov
daa
and
adc
or
mov
add
lock
sub
notl
arpl
in
nop
and
pop
roll
ret
repz
inc
mov
or
push
mov
xchg
xor
push
dec
imul
scas
stos
dec
call
leave
sbb
aam
mov
dec
pusha
and
xchg
mov
fstpt
lock
mov
ficoms
sub
and
mov
jl
or
fadds
xchg
push
mov
push
mov
pop
sbb
lods
loopne
fcoms
lods
inc
mov
testb
dec
sbb
jae
lcall
lret
xchg
inc
dec
sbb
inc
xchg
mov
shl
insl
inc
cmp
stc
repz
adc
insl
movsl
dec
pusha
lods
leave
and
xchg
imul
and
gs
dec
and
stos
pop
push
jno
pop
test
paddsb
mov
test
adc
test
jg
loope
dec
dec
fs
dec
js
lahf
movsl
jo
dec
stos
mull
mov
dec
fmuls
pushf
aas
sub
cmp
test
push
push
mov
mov
iret
mov
popf
fs
push
add
mov
cs
fdivl
xchg
dec
out
push
test
mov
and
inc
mov
pusha
jnp
fdivr
push
add
es
enter
aad
push
mov
sti
test
lock
mov
push
mov
jl
lahf
mov
sgdtl
mov
dec
sbb
int
sub
ss
xchg
out
or
mov
cmp
fdivr
js
jnp
pushf
inc
adc
sub
sub
and
sub
mov
fwait
rcrl
jbe
sbb
push
add
into
mov
mov
incb
out
mov
sbb
stos
ds
es
imul
push
xchg
les
push
mov
addr16
dec
xorl
mov
decl
in
es
scas
and
push
mov
inc
gs
inc
outsl
sub
jle,pt
int3
les
mov
pop
outsb
cli
clc
mov
push
bound
adc
nop
lea
and
cmp
lock
incb
nop
jb
imull
mul
in
sbb
adcl
xchg
shl
aad
stos
rolb
sub
add
cmpsl
inc
lea
cmpsl
dec
ljmp
mov
push
movsb
test
xchg
push
pop
mov
ljmp
icebp
mov
icebp
mov
repnz
mov
loopne
js
notb
inc
and
fwait
movsl
pushf
fistps
dec
xchg
dec
cmpsl
sahf
dec
cmpsl
push
pop
test
cmp
retw
inc
repz
push
and
outsl
std
push
outsl
stos
outsl
stos
cmpsl
es
cmpsl
dec
pusha
test
and
int
and
out
int
or
or
or
mov
mov
int3
popa
mov
daa
int
dec
js
dec
dec
rorb
testb
repz
push
dec
imul
push
xchg
jo
lea
push
lea
das
pushf
les
cmp
cmp
cmp
push
xlat
sub
push
mov
mov
std
mov
fs
inc
gs
sti
cld
fwait
sti
dec
xor
dec
mov
loope
test
pop
cmp
pop
cmp
fsubr
ss
fdivr
andl
enter
stos
aam
stos
aam
xor
pop
fucomip
out
jmp
addr16
mov
jp
sbb
mov
mov
dec
or
dec
in
inc
dec
in
iret
in
mov
push
shlb
cmp
insl
dec
ss
ds
ss
mov
lret
lret
and
sub
cltd
popf
call
test
mov
idivl
mov
pop
lods
inc
pop
and
pop
and
xchg
mov
dec
jp
xor
mov
jg
xchg
shl
xchg
mov
int
addb
fsubrl
mov
dec
mov
push
test
stc
cmpb
aaa
cmp
xchg
push
xor
mov
hlt
mov
dec
mov
jne
sbb
xor
xor
xor
xchg
outsl
les
outsl
sbb
sbb
insb
cmp
lock
cmp
data16
mov
push
pop
imul
inc
sbb
inc
in
mov
in
mov
xor
mov
pop
in
pop
mov
pushf
mov
ljmp
xlat
icebp
mov
repnz
sub
adc
jecxz
sbb
dec
cli
fisttps
adc
push
jnp
push
cmp
push
cmp
cmp
addr16
push
xchg
inc
push
outsl
jno
outsl
stos
dec
outsl
stos
cmpsl
lcall
and
dec
and
je
int
inc
int
or
out
jb
or
sub
mov
xchg
mov
int3
aad
int3
daa
int3
daa
dec
in
daa
dec
dec
inc
dec
dec
sub
dec
sub
addr16
push
mov
lock
push
or
lea
lea
cmp
cmp
push
dec
sub
cmp
bound
bound
jno
lods
fs
lods
fs
mov
fwait
sti
dec
cmpsb
sti
dec
mov
push
mov
test
mov
pop
ss
pop
fsubs
fdivr
cmp
sti
sbb
or
aam
lahf
insl
inc
fiadds
pop
imul
ficoml
rorb
jb
mov
mov
fadd
adc
repz
sub
es
sbb
sub
add
add
add
inc
orb
xor
or
dec
orb
pop
orb
add
add
dec
orb
pop
orb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
