add
add
je
jb
arpl
fs
jae
add
jmp
inc
jns
ja
outsb
addr16
add
add
add
dec
add
add
add
add
add
xor
adc
add
insb
push
add
add
add
adc
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
cli
pusha
or
sub
add
cs
jo
arpl
add
mov
add
jo
add
sbb
add
add
add
jb,pn
jb
add
add
xor
add
mov
add
mov
add
add
add
add
and
dec
add
sub
and
or
and
test
icebp
and
push
in
test
decl
inc
dec
fldt
jp
sub
shr
cmpsl
xor
cmpsb
imul
ficompl
and
fcompl
mov
inc
mov
or
js
int
les
sub
out
dec
mov
push
nop
movsl
arpl
xor
fwait
ret
fwait
mov
arpl
pop
sarl
ficompl
sbb
bound
out
and
les
xlat
test
push
lret
mov
into
pop
test
cli
es
pop
mov
aas
push
mov
out
xlat
enter
lahf
enter
test
aas
jecxz
jo
stc
and
dec
call
aam
mov
jo
and
jge
push
cmp
clc
nop
test
mov
inc
lods
xor
sbb
scas
stc
or
loope
push
lret
out
jo
or
xor
xchg
jae
cwtl
mov
mov
sub
into
mov
call
push
popf
jmp
and
mov
adc
int
xchg
into
adc
mov
enter
in
sub
lret
cmc
jbe
lret
pushf
shl
rcrb
aas
mov
cmpsl
mov
cs
mov
adc
out
adc
fs
loopne
sbb
mov
ljmp
push
push
push
xor
imul
fisubs
scas
jo
cltd
cltd
sbb
push
jns
dec
ljmp
push
shlb
rcl
aaa
insl
mov
adc
push
pop
pop
into
xchg
aaa
aas
clc
cmp
jmp
popa
push
xchg
add
or
jne
sbb
lods
aaa
es
in
push
pop
lock
pop
adc
loope
xor
pop
aam
flds
subl
jb
push
test
pushf
or
fstl
rcll
das
mov
sbb
or
mov
mov
adc
inc
insb
pop
ret
add
push
jnp
pop
out
subb
and
push
daa
xchg
xchg
mov
cmpsl
pusha
outsb
sbb
xorb
mov
add
jne
leave
nop
push
out
cltd
lods
and
enter
hlt
xor
ja
dec
sar
rcrl
or
scas
dec
scas
pop
mov
out
inc
cmp
into
xor
and
ja
push
andl
push
enter
cltd
push
add
push
popf
jnp
and
repnz
xor
pop
lds
dec
ret
rorb
add
repnz
dec
sti
lds
xchg
imulb
dec
dec
mov
mov
loop
lods
jbe
xor
lds
xchg
pushf
jno
fimull
jle
pop
pop
dec
fsubs
lock
loope
jmp
pushf
mov
cmp
mov
out
popa
rcll
call
fstpt
stos
jno
repz
jecxz
dec
dec
in
xchg
mov
push
pushf
repz
xor
xor
idivl
mov
js
in
clc
jp
in
in
push
data16
cmp
aaa
js
and
dec
pop
loopne
inc
movsl
cli
aaa
push
pop
out
sub
jecxz
or
push
adc
jnp
test
test
stos
xlat
faddl
cmpsb
stos
gs
pop
push
mov
jle
mov
test
add
ficoms
add
cmp
sbb
imul
ret
mov
aas
shlb
gs
add
vmaskmovdqu
adc
in
icebp
ss
cmpsl
arpl
mov
imul
xor
scas
sub
or
push
jmp
cltd
mov
jmp
mov
ja
adc
jg
push
mov
pop
jge
lsl
mov
jp
add
pop
dec
jmp
ret
mov
pop
mov
outsb
mov
fsubs
push
pop
mov
sbb
test
jne
jno
or
mov
xchg
dec
cmpsl
ficomps
inc
std
and
push
fistl
lock
dec
cmc
repnz
fidivs
call
imul
inc
js
xor
adc
clc
xchg
inc
cs
add
xor
push
and
xchg
mov
sarl
cmp
cmp
dec
xor
popa
fisttps
xchg
out
mov
repnz
or
cld
mov
jne
pop
cmp
or
test
jo
es
mov
lods
jne
and
fisttpll
sbb
mov
les
insl
loop
cmp
orl
sbb
and
sub
xor
loope
stc
out
inc
lahf
xlat
dec
xor
mov
dec
cltd
jae
pop
mov
pop
in
adc
dec
sti
out
shll
out
pop
mov
lret
dec
sbb
mov
out
subl
push
lcall
lods
cli
xor
push
stc
dec
inc
mov
jno
mov
ret
jnp
aad
lret
adc
xchg
sar
xchg
in
or
inc
shr
mov
movsb
or
jno
test
push
jl
js
xor
and
arpl
lcall
push
inc
jl
or
daa
sbb
movsl
movsb
jmp
bound
inc
xchg
ss
into
movsb
test
add
test
add
je
outsl
mov
add
pop
pop
jbe
insb
adc
adc
mov
cmpsb
cs
ljmp
and
cmc
push
jbe
lds
inc
push
or
movsl
test
mov
sbb
daa
pop
test
xchg
mov
test
test
jae
cwtl
loop
out
pop
je
clc
jo
jo
or
inc
jp
mov
mov
or
sbb
cld
ja
lret
mov
ja
push
mov
outsl
jcxz
js
add
cmp
loopne
push
lcall
add
sub
sub
dec
xor
sub
add
cmp
icebp
jp
aas
lret
dec
sub
dec
pushf
xor
cmc
leave
rcr
sub
inc
jo
data16
pop
lret
cmp
cmp
sub
inc
inc
mov
imul
xchg
add
clc
inc
hlt
xchg
xchg
xchg
push
and
mov
sbb
pop
imul
lret
sbb
jle
call
jbe
aam
xchg
sub
add
aam
xcrypt-ctr
cmpsl
sbb
pop
imul
jne
aam
int
cmp
push
movsl
xor
push
pop
sahf
data16
jl
xchg
mov
and
insl
nop
lods
push
sbb
or
mov
cs
les
call
fwait
inc
xchg
cmp
lea
loopne
and
movsb
rcr
mov
and
inc
popf
add
lock
dec
ja
test
mov
fmull
or
mov
bnd
out
pop
jbe
push
aaa
adc
std
inc
push
xor
outsb
stc
hlt
lret
std
dec
mov
es
xor
mov
sub
js
push
xor
enter
mov
jecxz
pop
xor
sbb
adc
add
inc
lods
push
gs
cmpsb
loop
or
mov
dec
push
push
cltd
push
pop
push
notl
mov
mov
sbb
push
and
jg
hlt
loopne
pop
or
mov
mov
cwtl
out
ret
pop
inc
adc
jbe
pop
add
movsb
loop
jns
mov
into
orl
rcrl
js
dec
inc
fs
dec
out
mov
js
jne
or
lret
lods
jmp
sti
xchg
scas
push
xor
ss
test
mov
lods
outsl
divb
jl
push
or
fsubp
xchg
jl
xor
pop
inc
stos
jo
adc
daa
mov
leave
adc
mov
arpl
int
push
and
or
mov
rorl
pop
xchg
lea
push
jb
adc
test
sbb
dec
add
inc
stc
jg
mov
lret
inc
xor
stos
sub
mov
xor
mov
dec
and
xchg
loope
lret
icebp
test
fwait
mov
mov
mov
adc
data16
mov
jge
dec
xor
popa
mov
jne
rcrl
leave
sub
mov
movsb
adc
addr16
dec
jg
adc
sub
outsl
dec
jo
push
in
ljmp
das
fsub
daa
and
dec
xchg
mov
push
sbb
sub
inc
popf
xchg
lods
stos
pop
jns
stos
mov
push
dec
mov
aam
xor
cmp
sub
jecxz
jbe
pop
ret
pop
mov
xor
or
xor
dec
aad
out
call
mov
jb
nop
das
sbb
fsts
add
cmpsl
leave
mov
lret
or
xchg
ds
sbb
stos
pushl
mov
mov
scas
stc
out
mov
or
mov
sahf
dec
idivl
hlt
xor
mov
jl
clc
jns
push
call
icebp
notl
js
fildll
je
stos
out
xchg
pop
clc
mov
ja
xor
nop
pop
sub
jp
xchg
rorl
movsb
dec
sbb
adc
addr16
es
stc
mov
aam
adc
jl
inc
push
inc
loopne
and
mov
jg
jbe
cli
sub
add
jl
sbb
mov
xchg
xchg
inc
push
jecxz
setne
adc
mov
adc
add
and
incb
and
ja
xor
cmp
xchg
shrb
jbe
pop
mov
pushf
inc
and
outsl
cwtl
rolb
xor
cli
xchg
mov
xchg
ret
mov
mov
fmul
aas
adc
pop
push
imul
and
ds
loope
movsl
insb
addr16
mulb
and
add
cmp
jb
jae
mov
loopne
test
xor
bound
rol
es
ret
pop
xchg
mov
jbe
ret
add
mov
lods
push
mov
imul
pop
nop
into
in
fs
and
arpl
test
enter
sarb
cld
inc
push
xor
dec
adc
adc
aam
and
fistps
cltd
push
jb
imul
movsl
cmp
sbb
fyl2xp1
or
stos
stos
addl
push
pop
push
hlt
pusha
or
inc
int
ret
out
jnp
mov
push
dec
outsb
jbe
shlb
add
mov
xor
jns
punpcklbw
and
add
in
mov
loopne
sahf
icebp
dec
lahf
push
pushf
xchg
or
sti
push
push
je
sbb
leave
cwtl
ret
imul
push
outsb
sbb
mov
sub
xlat
frstor
mov
push
test
popa
pop
popa
and
mov
fsubl
icebp
sub
mov
xor
rolb
pop
pop
add
cld
scas
enter
pop
jmp
mov
cmp
lods
inc
mov
jp
clc
add
shll
dec
daa
cmp
xchg
xchg
scas
aam
ffreep
sub
add
neg
mov
sbb
pop
fstpl
cmp
pushf
fnstsw
mov
lret
mov
xor
scas
outsl
push
jp
aam
mov
pop
loop
xor
cmc
pop
or
fsubr
scas
pop
loop
inc
sbb
push
xchg
clc
jmp
cmp
dec
mov
idivl
push
test
jecxz
cmp
loopne
sub
push
fs
loopne
jp
mov
lahf
nop
cmc
rclb
jmp
scas
jbe
sub
jl
sbb
sub
ljmp
adc
sarb
sar
add
sbb
mov
mov
ficoml
mov
sub
jg
dec
ljmp
int3
ficompl
mov
add
mov
cwtl
lcall
push
iret
dec
scas
dec
push
in
xchg
je
and
in
push
addr16
fisttps
mov
sbb
in
pop
mov
push
ljmp
lds
lods
sub
aaa
jle
nop
xor
fs
or
movsl
adc
and
in
sbb
mov
mov
pop
inc
push
jmp
jns
test
fmul
xchg
xchg
and
mov
fdivs
clc
aaa
dec
jl
retw
pop
lds
jno
bound
fidivrl
sahf
xor
lret
pop
rorl
gs
pop
rcl
les
mov
cmp
or
stc
cwtl
nop
mov
in
aad
scas
xchg
xchg
in
movsb
inc
sbb
in
pop
or
arpl
fwait
scas
dec
jno
popa
adcb
cmp
pop
mov
mov
add
lcall
cli
cmpsb
pop
jge
popf
int
rcl
imul
and
inc
lea
scas
cmpb
and
sbb
pop
cmp
mov
push
pop
movl
leave
stc
xor
loop
hlt
or
sti
insl
sti
loop
test
xlat
dec
and
ja
inc
dec
test
loop
dec
lret
fs
cmp
xchg
outsl
mov
xchg
cltd
pop
aad
push
dec
lahf
out
lods
push
stc
xor
jno
scas
dec
leave
mov
xchg
mov
pop
push
adc
ljmp
faddl
adc
xchg
imulb
mov
shlb
jne
sbb
arpl
xor
addb
fs
push
leave
gs
mov
pop
andl
out
mov
push
mov
sbb
mov
imul
mov
pop
jne
shlb
xchg
jl
push
es
repz
data16
cmpb
xchg
xor
out
outsl
mov
and
nop
add
cmp
lret
sti
std
test
cli
repnz
lret
fwait
or
xor
fisttpll
loopne
adc
das
nop
push
daa
ret
mov
stc
mov
adc
dec
push
sbbl
cwtl
pop
jae
sub
gs
inc
xlat
inc
push
adc
fidivs
sub
shrb
mov
loop
jno
mov
out
or
adc
aas
inc
scas
ja
xor
cmpsb
aam
sbb
lret
or
mov
outsl
pop
push
bound
dec
cld
mov
pop
lds
rol
lahf
adc
cld
push
lret
icebp
inc
cmp
stc
aas
movsb
inc
ret
addr16
push
xlat
jnp
iret
lcall
xchg
sub
dec
and
pop
pop
out
xchg
ds
mov
sub
int3
vpshuflw
mov
xchg
push
pop
add
inc
sbb
push
or
les
notb
mov
das
test
jmp
or
and
sbb
pop
pusha
pop
int3
mov
fwait
add
xchg
enter
and
sub
sbb
cmp
int3
es
lods
icebp
repnz
mov
sbb
and
jns
lret
sub
adc
sub
push
addr16
sbb
xchg
imul
push
js
data16
jl
or
clc
rorl
xchg
pushf
jp
popa
push
push
gs
jp
rorl
lods
fdivr
pop
jo
ds
adc
outsl
andb
cmc
movsb
insl
inc
rorl
add
ror
into
dec
jmp
and
les
dec
mov
jp
jmp
cmp
dec
or
lea
sub
jle
test
sub
mov
stos
jns
push
ja
xchg
xor
lcall
mov
mov
inc
xchg
pusha
push
mov
mov
imul
dec
cmp
jge
xor
xor
cmp
scas
push
inc
dec
inc
mov
enter
add
jmp
inc
or
xchg
mov
xchg
int
mov
pop
mov
jl
xor
inc
mov
sub
mov
mov
ja
call
inc
add
lds
xor
cmp
mov
push
lret
inc
mov
sti
test
loop
imulb
popf
mov
test
xor
xchg
sarl
mov
inc
adcb
nop
in
adc
adc
xchg
stos
push
or
loopne
dec
sub
lds
push
dec
pop
adc
jecxz
dec
pop
push
pop
shr
pop
dec
push
add
out
dec
int
xor
test
adc
lds
ds
xor
add
scas
sbbl
test
push
jg
push
fcompl
arpl
cmc
insb
hlt
push
xor
enter
add
sbb
stos
mov
xor
inc
outsb
sti
inc
inc
push
es
jae
mov
sbb
mull
cmpsl
dec
decb
push
pop
lret
sub
lret
inc
popf
push
jb
xor
stos
inc
pop
inc
fists
adc
repnz
mov
test
int3
repnz
jae
inc
push
orl
and
fists
inc
pop
jecxz
sub
aam
or
add
lret
jecxz
pop
cmp
or
movsb
mov
inc
loope
pop
push
mov
leave
nop
mov
push
addl
rcrb
loope
jnp
jno
testb
pop
loop
pop
mov
xor
xchg
aam
fs
xor
daa
mov
mov
gs
leave
mov
nop
jbe
stos
out
mov
lret
sbb
cmpsl
mov
cmp
icebp
fsubrp
lcall
add
adc
mov
insb
mov
mov
cmpsb
dec
rcl
cmp
or
iret
pop
into
mov
jae
outsl
and
subb
cmp
insb
fisttpl
mov
jl
iret
jmp
jl
ljmp
nop
inc
mov
jne
mov
repz
pop
add
mov
fisubl
xchg
int
xchg
adc
or
push
inc
xchg
or
lret
jo
leave
xchg
call
pop
pushf
sarb
mov
ret
cmp
icebp
cs
adc
idivl
lock
adc
cmpsl
nop
mov
push
push
mov
xlat
sub
cli
repnz
adc
rcrb
xchg
mov
addr16
pushf
jmp
test
inc
add
out
sti
fistl
push
inc
je
or
rclb
inc
pop
fwait
adc
rclb
mov
adc
mov
mov
mov
mov
pop
pop
sbb
cltd
sti
lds
in
inc
fwait
mov
mov
repnz
fstpl
pop
sbb
mov
jns
dec
jns
sbb
pop
test
pop
movsl
cmp
xchg
in
xchg
mov
sbb
movsb
push
mov
out
xor
ljmp
xchg
fwait
outsl
add
pop
mov
popa
or
adc
dec
and
mov
push
push
mov
mov
popa
lea
stos
inc
xor
or
decb
ljmp
fwait
divb
nop
int3
and
fsubr
mov
rcl
push
sub
and
sub
aad
jno
mov
cs
stos
or
outsl
popf
andb
sahf
dec
hlt
dec
test
sub
xchg
shrb
pop
mov
loopne
sbb
push
xor
pusha
icebp
dec
int
loopne
in
cmp
and
sbb
mov
pop
arpl
imul
sub
aas
dec
shll
adc
cmp
fidivl
nop
ljmp
lahf
dec
fmulp
mov
dec
xor
test
mov
cld
sbb
out
mov
shrb
sub
test
outsl
pop
test
cmpsl
dec
mov
aad
push
mov
cld
sgdtl
hlt
in
cmpb
cmp
pusha
xchg
push
scas
push
not
or
inc
add
inc
stos
xchg
loop
loopne
cmpsb
mov
or
push
stc
add
jg
push
int
add
rorl
aam
ja
push
js
jmp
fistpll
cmp
push
bnd
mov
mov
arpl
test
push
pop
xchg
ljmp
psubb
push
popf
enter
pop
daa
cmp
lds
es
inc
inc
xor
in
outsl
and
sub
jge
dec
jb
divb
xchg
or
ror
mov
mov
loope
add
outsb
push
pop
sbb
call
mov
daa
sub
and
pop
clc
mov
sbb
add
pop
jns
jge
sbb
or
sbb
adc
fsubl
sub
inc
shlb
xchg
js
movsb
or
adc
rcl
sub
push
push
nop
sarb
xorb
mov
push
into
aaa
loope
adc
arpl
leave
pop
sbb
sbb
xchg
and
add
andb
sbb
dec
inc
mov
or
adc
nop
gs
cld
ret
fstpl
fiaddl
arpl
sbb
mov
pop
popa
mov
mov
es
testb
sub
js
pop
rep
dec
in
std
sbb
test
mov
xor
lock
mov
je
jecxz
jl
jb
cld
cmp
jge
aaa
clc
add
repz
jle
push
das
popf
push
outsb
cmp
outsb
cmc
loope
mov
clc
lcall
icebp
pop
gs
jae
xchg
jecxz
into
inc
rolb
push
gs
dec
push
divl
mov
sti
andl
sub
xchg
xor
and
addr16
aaa
mov
iret
mov
ss
lcall
fdiv
test
cmp
push
outsl
aad
test
xchg
pop
jns
lret
fnsave
dec
dec
insl
lret
outsl
insl
std
mov
adc
sbb
hlt
xchg
rcll
inc
add
minps
scas
pop
push
push
cwtl
xor
add
push
orb
jmp
ret
sbb
sub
movsb
ss
sub
inc
ret
dec
adc
in
sub
aas
or
adc
sti
repz
lahf
inc
xchg
out
das
xor
hlt
inc
rcrl
inc
lds
iret
movl
jecxz
and
lock
outsb
loopne
nop
movsb
push
pop
sarb
or
jne
mov
or
xor
dec
sub
sbb
push
adc
jle
or
scas
mov
pop
and
in
fstpt
repnz
clc
dec
push
mov
stos
pop
lods
imul
call
aam
jns
lods
in
pop
imul
xchg
push
sbbl
mov
sbb
jno
push
fstpl
movsb
and
sub
imul
pop
ret
push
sub
dec
popa
arpl
enter
int
xchg
das
sahf
and
cmp
mov
cmc
adc
and
ss
inc
pop
pop
xlat
cmc
xchg
imul
pop
jns
pop
jmp
sub
xchg
inc
popa
add
add
sub
ficompl
addr16
in
push
adc
test
mov
sti
mov
insb
dec
aam
pop
test
jp
inc
lea
jns
inc
std
test
pop
sbb
xchg
ror
call
stc
and
sub
ja
xor
ljmp
mov
rcrb
notl
jmp
pop
xor
mov
jg
popa
into
shll
jns
jp
inc
js
xchg
sub
daa
adc
pusha
fadds
cli
ja
jecxz
sbb
notb
jecxz
mov
lods
push
scas
insl
shlb
movsb
mov
notl
sbb
mov
outsb
jl
add
int
sbb
xor
inc
shrl
add
out
pusha
cmp
inc
adcb
int3
cmp
loopne
pop
lcall
mov
jp
sub
sub
xchg
jp
xchg
dec
xor
bound
jle
mov
sahf
loope
push
cmp
imul
outsb
int
push
outsl
push
lds
lcall
loopne
adc
pop
xchg
xchg
mov
inc
popf
movsl
pop
in
xchg
xchg
mov
js
sub
mov
test
xchg
fs
out
fs
cmp
sub
add
xor
xor
das
add
outsl
lea
or
or
aas
test
sbb
mov
inc
push
test
and
ret
lods
aas
mov
jg
mov
mov
mov
cmpl
xor
subl
xchg
icebp
and
test
out
sbbl
inc
or
dec
insl
loope
xchg
add
mov
cmpb
popaw
mov
xor
in
stos
push
cmpsb
nop
adcb
enter
fnstsw
mov
roll
fs
xchg
outsl
hlt
iret
ficomps
stos
inc
pop
inc
mov
out
mov
mov
jp
sub
lret
shll
sbb
or
cwtl
jl
mov
sbb
inc
push
test
lret
jns
out
inc
mov
mov
sub
push
icebp
mov
scas
cmp
aas
mov
into
add
punpckhbw
mov
xrelease
push
rcr
mov
add
fstps
or
out
cmp
cltd
inc
stos
sbb
das
inc
xor
adc
xchg
sbb
std
pop
pop
scas
fcmovu
rcrl
fldl
fisttps
jno
scas
sub
mov
sbb
adc
lds
mov
and
sahf
or
sbb
push
data16
or
andb
outsl
cld
pop
testb
rcll
ljmp
push
add
popa
sub
ret
cmc
inc
mov
rcr
es
mov
jnp
mov
push
cli
push
xor
negl
jl
js
mov
cmp
fmul
xchg
andl
fidivs
in
jo
and
cwtl
xchg
cmp
pop
imul
test
and
mov
ljmp
out
test
cmp
outsl
je
ljmp
setne
lods
ljmp
pop
test
jl
adc
subl
loopne
sub
adc
jnp
jne
jo
lret
call
clc
jne
out
fmul
mov
xchg
movsb
sub
pop
mov
add
inc
out
mov
js
aad
int
dec
adc
mov
lock
and
aaa
imul
add
pushf
pop
cli
arpl
add
lods
or
stos
sub
rol
pop
rcrb
mov
arpl
push
jb
daa
in
aam
mov
icebp
fs
cmc
dec
jo
lock
popf
push
xchg
push
mov
adc
jg
mov
push
nop
test
daa
je
std
pop
dec
sbb
std
dec
int
lods
testb
xchg
xchg
lcall
lret
mov
leave
mov
mov
cmc
jns
cmp
gs
mov
das
clc
pop
push
inc
ljmp
aas
adc
mov
pushf
addl
jl
ja
mov
cmp
pop
call
rorb
and
arpl
insb
filds
aad
adc
push
add
jmp
pop
sub
sub
sbb
pop
xor
pop
dec
cmp
popf
idivl
mov
stos
inc
or
fildl
aad
jp
xor
cli
push
xor
cmp
cmp
stos
outsb
add
fstpl
push
jmp
imul
sbb
dec
xchg
mov
cmp
ret
mov
outsb
inc
rcrb
sbb
imul
psadbw
sub
pop
andl
fwait
xor
add
into
lret
xchg
mov
mov
and
dec
mov
andb
scas
pop
jb
dec
das
xchg
insb
jg
mov
pop
xchg
add
mov
jecxz
testl
leave
xor
pop
xorb
mov
aaa
xchg
pop
aad
add
xor
lock
imul
in
and
ljmp
cmp
out
jno
xchg
lods
sub
mov
cwtl
pop
mov
and
dec
cmp
push
xlat
arpl
hlt
mov
xchg
out
pop
push
cmp
push
push
dec
movsb
lcall
xchg
divb
sti
aaa
add
xor
arpl
cmp
or
daa
inc
xchg
cmp
aad
or
xor
push
in
addr16
push
lcall
ret
jmp
push
mov
popf
inc
mov
mov
mov
popa
jp
sahf
mov
cmp
repnz
rolb
and
cvttps2pi
mov
add
xchg
push
sbb
pop
cmp
add
fisubs
sbb
mov
loopne
xor
jecxz
pop
loopne
xchg
in
add
push
sub
sbb
sar
cld
insb
pop
sbb
dec
pop
sub
stos
mov
push
pop
repnz
clc
cmp
popf
divl
pop
mov
lahf
sti
mov
lods
sub
jg
add
cli
cmp
leave
nop
es
dec
imul
mov
xchg
test
mov
sub
xor
mov
mov
cmpsl
call
lods
push
adc
inc
or
adc
push
fmull
xchg
test
stc
in
cs
sahf
outsl
lret
jg
lea
jns
out
fincstp
js
aas
jl
enter
out
shr
cltd
in
fcmove
jno
movsl
out
mov
xor
adc
mov
xor
popf
mov
add
js
out
lds
mov
pop
pop
jns
inc
xorb
and
and
adc
sub
pop
lock
loop
stc
gs
adcb
sub
jp
subb
xchg
jne,pt
mov
mov
iret
add
push
add
cwtl
xchg
lahf
shlb
out
iret
stos
xorl
mov
fisubrs
mov
mov
in
jge
call
mov
sub
nop
enter
ret
icebp
sbbb
jle
cmpsl
xlat
xchg
xor
mov
xchg
addl
sbb
adc
cmpsb
pop
or
and
cli
fisubs
xor
mov
dec
and
nop
adc
int3
cmp
loope
cmp
dec
xlat
roll
testb
inc
in
mov
xchg
pushf
roll
xchg
aas
mov
sbb
pop
mov
xor
or
add
jae
jle
xchg
cmp
xchg
mov
outsl
xchg
mov
mov
sub
or
imul
imul
xchg
push
or
into
dec
and
sbb
mov
movsl
pop
andb
clc
add
in
stos
lea
or
je
jne
mov
paddsw
int3
adc
ficompl
cmp
test
gs
sbb
xor
sub
data16
xchg
inc
imul
lds
cmp
ja
mov
jbe
push
xor
mov
inc
inc
mov
loope
cwtl
xor
scas
sub
push
dec
andb
aad
xor
in
pop
xchg
ss
mov
mov
scas
fnstenv
add
push
imul
mov
push
dec
repnz
adc
push
out
lods
lock
bound
mov
adc
adc
inc
lods
pushf
mov
sbb
cmp
cmp
mov
out
jb
jmp
dec
inc
mov
xor
loopne
push
insl
jle
sub
ja
xor
push
push
loopne
loop
push
lcall
cmp
mov
test
aad
clc
cmp
add
jb
dec
test
repz
clc
jb
fcmovnbe
push
enter
aaa
jl
in
adc
in
push
shrb
dec
xor
pop
jnp
or
add
xor
mov
push
adc
dec
inc
out
inc
and
adc
inc
bound
shlb
std
in
iret
pop
mov
jns
pop
out
iret
out
cmp
mov
test
repnz
dec
out
movsl
mulb
adc
sbb
xlat
ljmp
fmuls
jbe
mov
int3
and
minps
int
mov
out
cli
push
scas
and
fwait
mov
imul
lret
ljmp
push
jns
lcall
dec
bound
push
jb
add
push
push
outsl
adc
cmp
jae
out
hlt
mov
jns
sbb
in
xchg
and
sbb
lds
mov
imul
push
inc
nop
jbe
adc
and
sahf
xchg
movsb
inc
jns
ljmp
pop
mov
push
pop
stos
andb
je
sbb
sub
xor
insl
in
mov
adc
lods
jle
sbb
lret
les
adc
cmp
pop
mov
push
xchg
fistpl
das
fimuls
data16
mov
push
inc
subb
sbb
and
stc
lret
cmp
mov
cmpsl
cmpsl
mov
mov
mov
xchg
mov
stos
cmpsl
out
push
data16
mov
sub
mov
lock
xor
testb
xchg
push
jae
pusha
mov
inc
loope
outsb
and
pop
push
lock
push
push
aam
leave
fidivrs
fs
in
push
ljmp
mov
xlat
inc
js
mov
nop
mov
xor
lods
in
cmp
inc
mov
scas
adc
xor
aam
lahf
inc
icebp
hlt
add
sti
loope
cld
push
lret
fadd
push
xor
mov
into
pop
xchg
xor
lds
dec
pusha
mov
pop
outsb
sbb
enter
lds
int
push
xchg
sarl
fistps
mov
out
adc
das
mov
mov
loopne
or
mov
mov
fdivl
lcall
push
mov
dec
inc
pop
test
aas
daa
mov
jae
cwtl
incb
out
mov
jmp
jmp
aaa
les
xchg
and
sub
and
jae
jns
push
mov
out
insl
insl
call
out
aad
aad
and
push
mov
in
pop
addr16
mov
leave
repz
test
rep
lods
add
mov
aas
xchg
pop
or
adc
or
pop
lea
out
test
jg
in
mov
orb
mov
stos
repz
hlt
pushf
fwait
in
in
stc
jg
int
inc
aaa
popa
and
aaa
jns
sbb
or
cld
outsb
sbb
mov
dec
or
dec
mov
movsb
push
gs
sub
mov
sub
inc
test
mov
inc
lds
pop
lret
sbb
mov
jge,pn
xchg
cmp
jecxz
mov
cmp
rclb
repnz
pop
and
fs
jno
ss
js
mov
sbb
mov
and
adc
insl
cmpsb
cs
mov
xchg
sbb
or
ja
and
iret
xor
or
dec
pop
pop
outsl
in
call
fidivrs
adc
and
xchg
out
div
pushf
pusha
pop
adc
jl
int
sbb
cmp
fstpl
es
inc
cltd
push
popf
int
mov
sbb
enter
xor
repnz
sbbb
push
jecxz
subl
sbbl
in
mov
pop
dec
pop
or
inc
mov
dec
out
test
rcrl
cmpsl
add
pushf
or
shrb
jle
ljmp
jge
mov
sbb
jle
sti
xor
cmc
popa
fnsave
xor
mov
mov
stos
sbb
push
js
mov
mov
add
adc
loopne
sbb
adc
xchg
out
xchg
mov
arpl
aam
clc
sub
sbbl
or
mov
push
adc
pop
mov
hlt
daa
add
mov
cmpsb
lea
dec
fsubrl
shrl
or
call
jmp
mov
int3
cmp
jo
dec
pusha
cmp
scas
inc
aas
imul
jge
call
lock
pop
mov
xchg
xorb
inc
push
leave
lods
cmp
orl
xor
pop
xor
aad
xor
int3
dec
push
repz
int
or
mov
xchg
adcl
inc
cltd
inc
xchg
pop
idivb
hlt
dec
scas
aad
scas
lret
inc
pop
and
addr16
jne
jns
xchg
cmp
xchg
fdivr
pushf
and
popf
push
jg
and
inc
jmp
xor
xor
adc
scas
adc
mov
mov
inc
arpl
xor
ds
test
xor
movsb
mov
mov
mov
adc
cmpsb
lahf
jge
in
popa
jl
or
push
aad
push
dec
jnp
or
mov
sahf
stc
data16
pop
xchg
aaa
insb
pop
andl
and
jne
xorl
fidivrs
or
add
mov
mov
sbb
sub
mov
xchg
xchg
and
outsl
cmp
or
push
lock
arpl
pop
ss
enter
pop
mov
cmp
int3
sbb
pop
pop
cmc
xchg
jle
rcl
arpl
pop
pop
mov
js
mov
jg
outsb
int3
fcoml
push
mov
adc
cmp
mov
shll
andb
bound
pop
mov
jp
mov
jbe
xchg
or
mov
test
push
mov
dec
sti
div
push
adc
xchg
and
cmp
out
pop
pop
jo
dec
or
pop
out
cmp
addr16
lea
dec
cmpsb
add
mov
lcall
dec
cmp
hlt
iret
xchg
push
stos
xlat
mov
cmp
int
dec
inc
inc
lods
fdivrl
jle
pop
xchg
stos
das
fcompl
pop
jle
inc
dec
je
das
mov
pop
bound
icebp
movhps
orl
adc
mov
js
test
mov
jle
or
stos
xor
je
pop
and
out
cld
lods
or
sbb
or
push
lcall
sbb
mov
jg
inc
lea
xchg
in
mov
ja
mov
adc
inc
sub
pop
push
daa
cltd
or
add
daa
cmpsl
mov
cli
add
and
jmp
cwtl
jl
inc
fwait
mov
jl
xor
ret
aas
mov
sbbl
push
aas
fiaddl
mov
adc
xchg
xchg
adc
jp
mov
sbb
mov
cmpsb
inc
mov
inc
sub
popf
int
mov
lret
mov
sbb
outsb
cmp
jle
mov
mov
mov
loop
cmpsb
lods
jle
xor
das
clc
mov
mov
jbe
sub
vfrczps
test
negl
xor
lret
push
int3
sbb
or
cmpl
inc
sub
cwtl
pusha
or
inc
mov
mov
adc
mov
pop
sbb
icebp
push
add
pop
mov
das
idivb
add
into
xchg
sbb
aam
add
and
fstps
xor
imul
scas
fcoml
push
xor
inc
mov
negl
popa
int
cmp
mov
jo
add
frstor
test
mov
aaa
dec
outsl
sub
jbe
cmp
test
inc
outsb
in
xchg
pop
test
bound
ret
push
pop
gs
aam
fstpt
push
sbb
mov
scas
push
inc
fucomp
cmp
jg
sar
sbb
pop
test
ret
test
xchg
push
jo
pop
lea
xlat
mov
fsts
cmc
jb
repnz
je
ds
ljmp
loopne
or
iret
mov
mov
popa
xor
pop
xor
in
fcomp
arpl
and
cmp
mull
sahf
push
mov
ss
jno
dec
sub
dec
scas
int3
mov
movsb
rcrl
lock
or
mov
jle,pn
jo
mov
enter
xchg
into
and
shlb
imul
dec
jnp
pop
adc
repz
push
push
jb
outsb
or
mov
ja
cmpsb
in
scas
inc
push
sub
push
icebp
cmpsb
scas
adc
in
les
pop
mov
push
aas
cmp
and
cwtl
push
pop
add
push
andl
adc
test
dec
pop
cmp
sbb
sbb
aas
add
jnp
lahf
mov
sub
shrb
cmpsb
outsl
cmpsl
lds
push
cwtl
gs
popf
mov
shll
fmuls
push
hlt
stos
sbb
mov
movb
scas
out
mov
js
and
sub
test
cwtl
mov
lea
cli
xchg
hlt
lret
sub
lea
lahf
fisttps
push
data16
mov
sub
popf
or
movsb
addr16
and
sarb
push
jle
rorl
mov
cmp
repz
mov
addr16
into
hlt
jecxz
and
cmpsl
js
dec
stos
pushf
xchg
sub
loop
fadds
mov
cmpl
fwait
cs
cmp
mov
xor
xchg
inc
das
fs
insb
ss
xchg
inc
int
or
insb
jg
mov
movsb
repz
sub
ljmp
inc
push
cmp
jecxz
out
push
mov
mov
sub
or
clc
sbb
and
mov
cld
jmp
mov
cmpsl
mov
xor
jb
outsb
subl
pop
push
push
jb
fisubrs
sbb
push
adc
cmp
mov
outsl
push
or
iret
pushf
inc
push
daa
add
xor
adc
jp
lock
int3
data16
inc
push
dec
push
xchg
mov
enter
out
sti
lahf
or
ret
sbb
movsb
repnz
mov
mov
xchg
xor
lds
iret
jmp
popa
adc
mov
and
mov
mov
xchg
lret
mov
ficomps
sbb
cmp
add
push
and
aad
aaa
jnp
add
push
in
push
xchg
dec
arpl
cmp
insl
or
push
das
mov
or
mov
lock
xchg
sub
aas
inc
dec
gs
les
or
pushf
mov
rorl
es
mov
lea
scas
xchg
dec
bound
and
mov
and
mov
or
jge
add
dec
mull
int3
js
mov
xchg
rolb
push
out
add
mull
cmp
aas
xor
fwait
pusha
cmc
mov
popf
popa
lock
and
xorl
mov
pusha
dec
outsl
or
ds
mov
nop
cmc
dec
cmp
scas
lcall
push
cmp
fcomp
cmp
gs
jecxz
aas
mov
call
popl
pop
push
mov
sbb
sbb
loope
xchg
dec
pop
inc
test
fistps
or
pop
jne
lock
lds
pusha
sahf
push
or
jo
test
cld
push
out
orb
xor
loopne
xchg
sti
push
or
in
imul
sub
adc
out
xchg
ds
repz
adc
repz
and
adc
cld
push
add
xchg
movsl
setbe
mov
xlat
lret
loop
aad
fwait
add
inc
dec
faddl
iret
push
in
gs
iret
inc
inc
movsb
mov
les
pop
inc
pusha
cmp
outsl
into
ss
adc
adc
jge
test
mov
loopne
push
imul
xor
cmp
sbb
mov
jg
mov
call
add
das
aas
sti
imul
enter
jo
js
xchg
mov
test
cmp
push
mov
stos
xlat
insb
fwait
jo
int
lods
out
xchg
inc
add
mov
pop
movsl
and
mov
daa
or
imul
sbb
daa
sub
and
int3
cmc
dec
dec
sub
int3
inc
xor
sar
loop
les
outsl
mov
pushl
jb
and
sti
pop
mov
sbb
lahf
mov
loopne
enter
stc
mov
dec
sti
inc
pop
mov
jle
sub
and
call
mov
dec
inc
loopne
test
jp
sbb
rcl
pop
es
lock
push
mov
arpl
add
mov
icebp
push
andb
mov
cmp
xchg
mov
bound
hlt
jb
add
mov
push
push
add
or
je
mov
les
ret
mov
push
mov
mov
xchg
jmp
push
test
out
inc
cld
lods
arpl
or
mov
sub
pop
inc
mov
das
xor
ficompl
mov
xchg
test
push
pop
xchg
xchg
xor
push
inc
sbb
into
rcl
in
mov
repnz
jae
pop
mov
fucomip
xor
sub
into
sahf
adc
xor
mov
ja
idivl
adc
loop
or
dec
fwait
outsl
outsl
push
xor
out
loopne
mov
pop
push
ficomps
dec
dec
movsl
xchg
lret
xor
push
aas
push
loop
xor
in
add
mov
aam
aaa
frstor
out
dec
inc
stos
mov
imul
cmc
sar
into
mov
and
lret
sbb
mov
inc
stos
fcmovb
cltd
jae
ror
or
sbb
imul
in
or
ficoml
pop
orb
xchg
jns
divb
je
mov
xor
xchg
in
test
jle
gs
loopne
xchg
nop
mov
mov
cmp
add
mov
mov
add
jno
mov
scas
jp
outsb
fstpl
subb
popf
icebp
mov
lock
js
rorl
cmp
jg
lcall
imul
push
mov
scas
in
je
js
adc
out
aad
out
jmp
jb
or
sbb
fdivp
stc
or
xor
pop
popa
adc
xor
mov
push
mov
adc
aad
or
xor
test
outsb
mov
icebp
sub
pop
sub
pushf
dec
mov
mov
mov
push
orb
xor
pop
movsb
mov
jb
pop
or
pushf
js
iret
pop
push
je
xor
into
mov
aas
adc
pop
cmp
call
sub
cld
mov
fnstsw
jp
adc
out
cmpsb
cwtl
lds
xchg
test
shl
stos
imul
xlat
clc
xlat
insb
sbb
aaa
pushf
rcll
jbe
mov
mov
arpl
pop
rorb
fimuls
cs
cs
lea
pop
lea
adc
add
sub
add
cmp
xchg
scas
lock
mov
pop
addr16
or
lods
mov
out
jg
out
cld
out
sbb
xchg
ljmp
sbb
aam
fadd
test
jle
sahf
lock
ljmp
cmp
fwait
imul
popa
out
jae
dec
enter
jle
fs
jno
test
out
bound
mov
leave
lcall
addr16
sbb
imul
xchg
jno
dec
lds
push
sbb
sti
imul
push
pop
mov
test
dec
jmp
shl
cmpsb
je
shrl
data16
out
jae
mov
iret
ja
dec
das
or
push
xor
sti
fsts
cmp
std
ret
and
scas
mov
mov
pop
ret
jmp
test
mov
es
mov
xchg
arpl
cmpsb
cld
sar
rorl
adc
dec
js
fnstsw
loop
repnz
or
mov
cmp
clc
lcall
sahf
inc
leave
xor
jp
xor
jo
shll
arpl
cmp
mov
test
adc
clc
sub
rcrb
je
out
xor
setae
fadds
incl
dec
rcrb
lock
sbb
in
stos
cmp
xor
add
xchg
push
xor
add
push
sub
movsl
adc
pop
sub
fcomp
in
es
in
pop
cmp
ret
xchg
inc
xor
xchg
cmpsb
movsb
cmc
xor
arpl
mov
dec
adc
popf
pop
shrl
enter
imul
mov
jno
cmp
pop
inc
sbb
jno
or
push
fs
dec
into
push
push
mov
xchg
sbb
push
fdiv
inc
jno
lock
stos
out
mov
xchg
push
xchg
pop
xchg
outsl
adc
divb
aas
adc
mov
mov
iret
popa
loopne
inc
test
orl
rorl
add
imul
mov
out
cmp
test
bound
mov
decb
add
inc
test
pop
in
test
xchg
fisubl
sbb
or
fdivrl
and
nop
lret
inc
leave
jns
imul
pop
outsb
outsl
mov
loope
mov
aas
movl
jle
sub
and
adc
jle
imul
xchg
jg
leave
push
imul
imul
test
xchg
insl
bound
push
pop
pop
jne
push
mov
cmp
sahf
inc
rcrb
xor
xor
mov
imul
push
jns
xchg
cwtl
imul
mov
push
add
push
inc
xor
sbb
mov
pop
rcrb
movsl
mov
and
int3
movsl
aas
ficompl
aas
and
push
int
dec
loopne
add
aam
cmp
push
fidivrs
call
cmp
aam
mov
out
or
sub
or
mov
in
mov
orl
arpl
pop
dec
mov
into
cmp
fmull
arpl
sub
mov
outsl
lret
mov
out
call
sbb
inc
test
jle
pop
leave
push
adc
bound
shll
mov
sahf
adc
jle
cmp
xchg
mov
sahf
stos
jb
fldt
mov
enter
jl
jle
sbb
into
pop
insb
iret
mov
xchg
sub
or
dec
test
shll
in
cs
ss
ds
xchg
loope
ja
push
pop
movsl
push
or
imul
mov
mov
push
ja
in
fiaddl
xchg
loope
dec
sub
outsl
jmp
jns
xchg
insb
pop
call
sub
cmp
push
pop
mov
cmp
out
jp
dec
popf
cltd
or
fdivl
xor
or
cwtl
xchg
xchg
dec
stos
sarl
cmp
idivl
or
push
or
pusha
mov
mov
mov
mov
movsb
lea
sub
add
call
jno
mov
out
out
xor
insl
data16
jecxz
mov
adc
cli
outsb
adc
adc
cmp
inc
dec
sbb
sbbl
xchg
sahf
cmp
or
jmp
in
out
jns
out
mov
push
push
iret
and
cmp
jmp
lds
test
stos
mov
mov
in
movsb
dec
mov
mov
ret
mov
mov
jecxz
js
leave
xor
lea
mov
jno
and
push
pop
fidivrl
leave
das
arpl
mov
loope
mov
push
dec
inc
pop
imul
push
and
pop
popa
out
jge
in
gs
cs
nop
loope,pn
mov
cmpsb
addr16
mov
mov
loop
inc
mov
sub
inc
seta
cmpsb
lods
movd
fldenv
add
pop
shl
int3
fsubs
pop
jecxz
push
and
fstpt
cmpsb
outsb
jge
lods
mov
cmp
adc
dec
mov
mov
xor
jle
add
mov
jl
in
jp
mov
das
cmpsl
test
test
int
cmpsl
xor
cwtl
mov
jp
cmp
inc
or
data16
lock
lods
add
negl
das
sub
divl
push
jecxz
lds
das
sub
popf
push
mov
iret
out
xor
idivb
or
inc
icebp
cmp
insl
cmpsb
dec
movsb
inc
pop
mov
scas
in
sub
xor
sub
sub
dec
sbb
sbb
add
xor
movsb
aam
inc
fdivr
sub
faddl
xchg
pop
ds
daa
cmpsl
jb
xor
sbb
dec
mov
xchg
mov
sbb
sbb
iret
adc
popf
and
jmp
add
repz
sub
loope
sar
pop
xor
mov
sti
dec
dec
jne
push
cld
or
std
das
mov
mov
mov
inc
sahf
pop
xor
imul
ds
dec
mov
rol
int3
pop
jg
rol
dec
divb
adc
mov
es
xchg
inc
cmp
mov
cmc
fbld
sub
hlt
in
push
push
mov
and
int
cmp
int3
rol
out
insb
ret
mov
aas
mov
fwait
in
dec
iret
xor
adc
adc
mov
lret
push
sbb
mov
cs
loop
stos
xor
jecxz
aas
cltd
jo
xlat
pop
fnstcw
xchg
mov
push
jmp
daa
pusha
je
lds
leave
dec
mov
and
add
mov
insb
adc
lret
pop
push
and
rcrl
leave
testb
fistl
out
mov
mov
outsl
cmp
fsubr
jae
dec
shr
outsb
sbb
loop
mov
out
lea
mov
loope
xor
dec
into
ret
mov
leave
xor
mov
sub
and
nop
and
insl
mov
ficomps
addr16
test
shrl
in
or
les
fcomps
push
pop
outsb
sbbl
mov
pop
xchg
test
sbb
sarb
das
roll
add
mov
movsb
ljmp
push
and
and
mov
leave
inc
pop
xchg
ds
js
orb
xorl
xor
in
xor
dec
xchg
shrl
je
jnp
add
test
jnp
pop
add
gs
flds
add
imul
popa
xor
or
pop
push
ret
and
stc
int3
and
into
and
xor
pop
mov
shll
xchg
nop
lods
cs
and
movsl
dec
or
repz
sarl
std
dec
adc
xor
cmc
cld
pop
and
dec
cwtl
push
leave
hlt
or
push
leave
in
adc
inc
pop
add
xlat
jp
cmp
mov
push
sub
jae
dec
adc
rolb
cmc
mov
gs
clc
mov
jmp
cltd
movsl
loope
fldcw
repz
add
stos
cmpsb
adc
test
adc
inc
lea
test
fisubrs
dec
aam
int
or
sbb
outsb
aam
mov
test
push
dec
add
pop
sub
movsl
dec
sarl
adc
pop
cld
mov
fisttpl
dec
or
ss
loope
cmp
out
cmc
outsl
jbe
pop
xor
dec
cmp
sbbl
mov
imul
cmc
jg
jl
loopne
mov
xchg
js
ss
mov
das
mov
aad
cs
adc
xchg
lahf
mov
stos
shl
inc
mov
add
cmovno
and
fimuls
sbb
movsb
fsubrs
jmp
test
pop
ret
lods
push
aad
mov
push
or
lret
add
dec
stos
sarb
int3
and
orl
imul
cld
into
aam
pushf
aaa
sahf
out
add
pushf
mov
push
mov
xchg
aad
and
sbb
cli
xchg
cwtl
fs
and
mov
fbld
fisubrl
ficompl
inc
test
mov
shlb
sub
mov
pop
pusha
inc
adc
mov
pusha
cmpsl
mov
mov
fs
mov
inc
add
int
xchg
mov
lods
frstor
sti
inc
xchg
cmp
aaa
mov
cltd
pop
cmp
repz
add
repz
gs
iret
xor
push
cwtl
inc
jp
out
push
sbb
int
pop
add
dec
lds
mov
nop
mov
imul
shrl
push
mov
ds
test
push
ss
rcr
pop
mov
bound
test
stos
jecxz
xchg
lods
mov
jecxz
sbb
test
fdivrl
pop
ret
inc
mov
or
jge
pop
pop
add
push
movsb
jns
mov
mov
movsb
xchg
mov
xchg
inc
mov
lret
xor
jmp
hlt
out
cmpsb
jno
jge
xor
sbb
and
cmc
jno
fnstsw
sbb
sbb
movsb
punpcklwd
pop
out
mov
mov
not
inc
dec
xchg
scas
test
iret
or
pop
ret
jl
jns
shrb
int3
adc
xchg
push
dec
inc
daa
ret
arpl
aam
jb
ds
inc
inc
les
mov
je
lds
xor
sbb
inc
and
add
out
mov
dec
stos
sbbb
sub
push
xchg
out
in
in
add
imul
add
push
pop
sarl
pop
xlat
fstl
push
sbb
lods
inc
icebp
or
imul
xchg
push
jb
adc
aad
dec
orb
ja
xchg
rcrl
jg
push
cld
flds
xchg
xchg
sbb
mov
mov
scas
mov
sbb
push
les
mov
mov
mov
push
lahf
pop
mov
mov
dec
jnp
sub
add
mov
adc
push
add
das
push
inc
out
inc
lods
es
cmp
dec
push
iret
jnp
and
lods
jb
addr16
pushf
ja
push
mov
ja
movsb
popa
enter
push
mov
ret
xchg
push
pusha
jmp
int3
push
mov
sbb
push
mov
orb
xchg
stc
fstpt
xchg
push
lea
insb
sub
lret
mov
sbb
shlb
arpl
test
jbe
addr16
pop
repz
mov
add
push
aad
insb
je
ficoml
cmp
lret
jg
and
out
or
mov
fisubrl
faddl
sbb
push
sarl
pop
test
sbb
xchg
push
pop
xchg
inc
pop
jle,pt
inc
mov
or
repnz
movsl
aam
jbe
pushf
jle
add
or
xlat
pop
fistpll
stc
jo
dec
or
les
pop
outsl
test
fcmovne
adc
or
jle
ret
cmp
clc
and
adc
pop
xchg
insl
out
mov
iret
sbb
mov
and
lods
fdivrs
ret
gs
cwtl
inc
fnstenv
ret
leave
ljmp
popf
xchg
int3
mov
mov
fwait
adc
and
fadds
ss
inc
mov
test
dec
fdivs
cmp
add
dec
dec
or
popa
popf
lret
shrl
fdivs
adc
les
jle
repnz
int3
dec
out
fxch
mov
test
sub
mov
insl
iret
hlt
cmp
inc
sahf
das
cmp
test
ljmp
out
cltd
sub
adc
imul
xchg
dec
inc
push
pop
ja
inc
fimuls
cvtps2pd
aad
and
aas
lock
xchg
jmp
push
divb
fld
lods
fldcw
fnsave
idivb
sub
xor
std
inc
test
cmc
xchg
aas
loopne
cmp
aad
fnstsw
xchg
imul
hlt
pop
out
testb
inc
xchg
cmp
or
push
sbb
dec
fs
push
xchg
lods
cmp
out
push
ljmp
mov
loopne
jb
sub
pop
ret
inc
inc
or
push
stc
arpl
ss
out
cmpsl
pop
icebp
xchg
sbb
jl
push
cld
insb
xchg
outsl
insb
clc
push
add
clc
outsl
filds
xor
inc
into
fstl
and
and
sub
or
xchg
dec
andl
mov
dec
idiv
adc
inc
lock
jne
sahf
lahf
lds
fwait
pop
mov
mov
rclb
mov
adc
cmp
imull
cmpsl
addr16
mov
sbb
mov
ljmp
adc
mov
bswap
fimull
xor
inc
mov
or
fdiv
pop
cs
jb
je
sbb
or
test
push
ds
push
testb
in
push
add
imul
call
pop
sahf
clc
dec
ds
sarl
in
fdivrs
mov
add
shl
cwtl
mov
mov
sub
rorb
sbb
cmp
or
scas
orb
dec
jo
pushf
jp
insb
fisttpll
add
jno
out
inc
movsl
dec
out
mov
dec
popf
lahf
xor
test
pop
pop
jge
mov
pushf
nop
lret
insl
xchg
cmp
push
mov
lcall
or
add
mov
push
std
mulb
mov
aam
push
inc
ds
jmp
ret
test
gs
sub
shll
xor
repnz
out
mov
loope
in
push
sub
out
xchg
cmp
into
mov
lahf
pop
adc
les
mov
xor
inc
cmp
sahf
mov
jo
bound
ret
sar
adc
dec
std
sub
jecxz
in
lea
ja
enter
es
icebp
or
std
mov
pushl
dec
out
push
jmp
jp
xchg
rol
into
jne
imul
mov
les
sbb
mov
aad
adc
jne
and
iret
fwait
cwtl
or
or
or
push
ss
lock
in
stc
scas
das
dec
sbb
std
pop
mov
add
clc
mov
cmp
inc
fincstp
sbb
sbb
ret
out
gs
xchg
push
inc
mov
push
leave
dec
xor
sbb
std
outsb
shrb
pop
out
loope
int
stos
adc
mov
inc
jge
insb
std
movl
dec
lret
add
adc
mov
and
lods
sbb
push
fldl
stos
xchg
inc
ficomps
and
lods
imul
cli
test
stos
out
gs
jno
das
inc
rcll
pop
push
sub
dec
push
jp
xlat
dec
mov
sub
sub
ret
cmp
adc
or
aam
xor
jp
and
jns
and
push
test
push
sbb
dec
cwtl
adc
das
push
jmp
cmpsb
add
pop
mov
es
push
add
flds
nop
dec
mov
shl
xchg
mov
bound
in
cld
mov
adc
out
sub
lea
jno
cmp
cli
mov
aaa
jecxz
or
dec
xlat
or
or
mov
pop
xchg
lcall
or
cwtl
inc
sbb
cs
push
xchg
aad
mov
mov
sub
mov
xor
push
and
and
jno
cmp
int
sahf
insb
sahf
pop
inc
and
in
pop
xor
cmp
mov
je
outsb
push
in
test
ror
push
mov
das
or
movsl
jno
loopne
lahf
out
mov
cmc
bound
mov
aad
dec
xor
enter
lcall
loopne
ret
push
jo
cmpsl
rol
xchg
cmp
lahf
push
add
pop
mov
mov
sti
mov
sahf
adc
ret
dec
cmp
fs
ss
add
dec
push
loope
outsl
sbb
outsl
push
int3
mov
push
mov
into
jl
arpl
int
xlat
mov
sub
adc
dec
jl
jge
mov
fwait
cmc
push
pop
mov
sti
push
gs
dec
cs
jbe
outsl
andb
cli
sub
arpl
andb
mov
jmp
push
adcb
nop
dec
out
mov
js
lods
inc
sahf
cltd
push
lods
jmp
aam
sub
jb
pusha
popf
or
lcall
out
ss
push
or
mov
sub
jb
cmp
rcll
fs
sbb
pop
xchg
add
cmpsb
xorl
aam
gs
shl
jnp
or
ja
adc
ret
jmp
dec
mov
popa
ja
into
adcb
push
shlb
fs
jae
push
ja
xchg
adc
mov
mov
std
rcrb
out
and
orb
push
mov
add
mov
mov
movsb
sub
stos
cmp
mov
xor
out
sti
mov
and
out
incb
adc
push
arpl
sbb
insb
les
mov
mov
js
mov
add
cwtl
or
adc
pop
out
cli
iret
addr16
inc
notl
mov
xchg
mov
push
out
andb
xlat
xor
adc
popf
inc
push
shlb
inc
hlt
adcb
lcall
xor
inc
push
std
inc
sub
mov
cwtl
mov
jae
push
in
imul
andb
and
push
mov
cs
sub
mov
mov
mov
popa
mov
inc
push
in
inc
popl
push
out
dec
sarb
mov
xchg
or
cmp
cld
xchg
loopne
or
mov
xor
fwait
and
pushf
aas
pop
lret
push
mov
aas
xor
loopne
js
cmp
xor
sub
sti
push
cmpsl
aam
mov
mov
fistl
sub
push
add
xor
push
cmp
aam
iret
adc
inc
shrl
test
jns
sbb
fildl
ret
mov
push
cmp
xchg
sarb
pusha
idivb
mov
loopne
in
shlb
sbb
lds
jae
in
stos
pop
push
scas
xchg
dec
mov
int
je
mov
cmpsl
ret
jne
and
hlt
aaa
test
in
push
sub
inc
nop
movhps
push
push
jb
jne
lret
negb
and
push
push
loopne
inc
ret
adc
jg
jmp
arpl
xorl
and
push
in
out
adc
dec
movsb
les
gs
in
sub
and
or
push
cmpsb
pop
cmp
xchg
cmp
mov
cmp
cmp
dec
pushf
mov
in
dec
mov
add
popf
out
cmpsl
jecxz
mov
out
mov
mov
out
scas
ja
ds
rol
fistl
mov
andl
mov
sub
sub
hlt
das
mov
mov
aam
lahf
mov
jbe
jl
icebp
fmull
sbb
push
les
fildl
lret
jmp
dec
xcrypt-cfb
cmpsl
in
and
cmp
cmp
pop
into
pop
pop
push
mov
jae
es
rcr
xor
mov
gs
push
ror
popf
lahf
mov
xor
stos
xchg
popf
orb
ja
add
xchg
popf
adc
gs
and
or
loope
fildll
shll
in
loopne
push
fs
test
aaa
jle
sbb
mov
mov
out
jne
mov
pop
inc
dec
mov
mov
leave
cmp
and
ret
inc
stos
mov
and
push
pusha
call
mov
jecxz
mov
into
popa
push
cmpsl
mov
test
sub
mov
mov
dec
test
pop
scas
and
jecxz
fs
cmp
cwtl
cli
call
bound
jbe
int
mov
mov
test
xchg
cltd
ret
mov
xor
or
cld
jnp
cmp
jg
xchg
jo
popf
out
in
aam
iret
jb
inc
or
sbb
imul
out
jb
in
push
mov
in
pop
xor
cmp
xor
and
push
pop
cwtl
outsl
lea
add
mov
jle
iret
mov
sbb
lock
sub
mov
icebp
inc
stos
and
push
iret
ss
out
pop
popa
cmp
mov
mov
outsl
fidivl
adc
add
pushw
mov
fnstsw
scas
mov
and
lea
das
add
pop
cli
mov
xchg
inc
push
mov
push
xor
cli
inc
push
add
das
in
cwtl
loopne
scas
dec
arpl
inc
xor
mov
gs
push
cltd
mov
jns
sub
pop
loopne
mov
add
fcoml
xchg
adc
lods
pop
push
test
les
loopne
imul
xchg
into
push
je
cmp
xchg
cmp
sbbl
bound
cmp
sub
push
fidivl
lods
sti
jno
repnz
mov
sbb
cli
cmp
int
jmp
mov
xchg
xor
or
jp
cmp
sbb
aaa
ja
inc
and
dec
push
scas
mov
cs
fcos
mov
insl
nop
cwtl
cwtl
scas
inc
jg
lcall
adc
and
leave
out
xchg
jno
test
cmp
sub
repnz
push
les
aas
or
inc
js
mull
sbb
ljmp
push
inc
stos
inc
scas
jecxz
cmp
lods
sahf
dec
or
pop
jb
nop
xchg
and
xchg
inc
icebp
lcall
jmp
cmp
add
fldenv
mov
xlat
sub
fwait
mov
ret
sahf
cwtl
xchg
inc
mov
les
mov
in
pop
inc
sarl
dec
clc
out
mov
cmpb
repnz
and
cwtl
and
je
mov
aaa
fwait
stc
scas
lods
mov
xor
mov
cmp
jbe
dec
xchg
addr16
pop
xchg
pop
push
mov
ja
inc
sbb
shrl
sbb
jns
and
dec
or
adc
dec
push
sub
or
jo
jle
mov
sub
inc
mov
adc
stc
mov
jle
les
flds
xchg
xchg
xchg
adc
out
mov
das
imul
test
imul
shll
dec
repz
mov
fstpl
test
mov
into
mov
cmpsb
mov
fidivrs
mov
andl
dec
addr16
imul
cli
cmp
in
in
mov
mov
push
and
or
idivb
add
mov
mov
divb
pusha
iret
lret
lahf
cwtl
aas
movsb
sti
insl
lods
fwait
dec
jne
adc
in
test
jle
sti
inc
popa
movsb
cmpsl
in
lods
addr16
lret
xchg
movsb
test
xlat
pop
in
mov
push
lea
cmpsl
int
rcll
mov
lcall
and
pusha
cli
fcmovnu
inc
pop
scas
rcll
push
dec
loop
cwtl
lcall
push
scas
je
jno
shlb
mov
xchg
sbb
mov
mov
addb
mov
sub
cs
aaa
shlb
jmp
push
ja
mov
lods
jle
xchg
enter
lock
pop
sbb
leave
mov
int
out
mov
or
test
cmc
or
call
or
mov
cld
leave
dec
cmpsb
testl
mov
insb
lret
icebp
ljmp
arpl
fidivrs
pop
lret
or
sti
std
adc
ja
adc
mov
mov
xor
or
test
add
sub
das
and
out
fiaddl
jo
lock
xor
loop
jg
int
mov
pop
cmp
fisubs
ret
repz
push
sbb
das
movsb
pop
sbb
ret
cwtl
and
js
mov
in
push
or
mov
dec
jge
cli
icebp
cmp
aad
lret
jp
lret
stos
subl
addl
dec
sub
mov
ret
scas
das
mov
mov
sub
or
out
lret
repnz
ret
stc
push
shll
cmp
xchg
cmpsl
mov
fisubrl
dec
das
arpl
xchg
jnp
fwait
pusha
adc
push
push
pop
mov
les
xchg
popf
mov
xor
leave
xchg
mov
std
and
or
inc
repnz
sarl
xor
shlb
and
jb
hlt
popf
xchg
dec
icebp
xchg
mov
mov
add
roll
cmpsl
call
insb
aaa
call
sbb
cmpsb
cmc
mov
push
cmpsl
or
jecxz
rcr
or
jmp
push
jns
mov
mov
dec
fld1
cmc
sub
stos
aaa
aaa
pop
sub
stc
mov
enter
rcll
push
lods
addr16
loope
push
mov
jp
in
popf
in
push
sub
push
imul
inc
push
inc
sub
jno
ret
xlat
mov
push
or
mov
cmpsb
outsb
dec
adc
loope
mov
ret
ficomps
hlt
nop
arpl
or
rcrb
jg
jp
movsb
lods
outsb
push
jno
sub
cwtl
sub
sbb
es
icebp
sbb
jb
jecxz
xor
outsl
inc
sub
fcmovnbe
insl
mov
xor
and
push
ljmp
loop
sahf
stos
xchg
loop
aaa
out
out
decl
and
ja
xchg
sub
pop
xor
pop
and
hlt
or
daa
mov
and
mov
inc
xchg
outsl
out
dec
dec
ret
fcoms
enter
aam
pop
fildl
lret
shlb
or
cmp
test
mov
dec
and
jno
push
loop
imul
loope
mov
insb
inc
adc
cmp
out
xchg
cltd
inc
sub
push
int
jmp
lret
sub
mov
ljmp
push
fdivs
stc
fcomi
mov
jbe
adc
push
push
cltd
cwtl
pop
push
hlt
movsl
iret
das
adc
push
aaa
and
data16
cmp
push
andl
dec
push
in
push
mov
ljmp
dec
daa
pop
xor
xchg
cmp
lret
cld
ret
inc
pop
push
xor
scas
push
jno
add
lret
aad
xchg
in
push
loop
ljmp
push
cmp
inc
xchg
add
int3
xchg
adc
lret
pop
out
fisttpl
cmpsl
arpl
jb
les
mull
sub
stos
addl
xchg
jb
test
pop
sub
dec
cmp
lea
cli
pop
xchg
adc
lods
pop
pop
mov
pop
andl
mov
pop
mov
nop
scas
in
lods
cltd
jecxz
cmpsl
jl
test
enter
insl
addr16
or
ja
shll
mov
pushf
lahf
pop
jo
iret
inc
stc
xchg
jmp
cmp
mov
xchg
stc
or
or
aas
jno
mov
aas
loope
scas
sbb
inc
aaa
dec
pusha
lahf
int3
mov
in
and
mov
push
mov
pop
lcall
loop
add
mov
leave
xchg
add
pop
pop
lahf
adc
xlat
insb
std
ret
dec
or
pop
shlb
sbb
std
jb
push
dec
and
mov
xor
lret
jb
int
xor
sbbb
jle
pop
std
sub
mov
cmp
xor
jb
aad
and
add
data16
popf
dec
mov
or
push
mov
dec
mov
sbb
add
addr16
stos
inc
test
sub
scas
inc
fs
lcall
xchg
adc
jne
loopne
mov
dec
testl
iret
xchg
jmp
cld
adc
inc
test
cmp
out
and
fwait
push
pavgw
sbb
xchg
jno
inc
mov
bound
xor
hlt
jmp
dec
fsub
jns
arpl
add
shlb
mov
inc
outsb
inc
or
out
xor
push
xor
jp
jp
out
cmp
loopne
cmpsb
sbb
ja
adc
pop
dec
pushf
stos
mov
mov
mov
cmpsl
inc
nopl
aam
nop
pop
sbb
inc
scas
cltd
sbb
rorl
in
cltd
or
and
xor
out
inc
pop
iret
jnp
xchg
pop
lahf
jae
insb
xor
scas
xchg
cmp
jne
xor
mov
dec
push
fisubs
imul
out
fsub
mul
sbbb
and
dec
adc
stos
cmpb
test
scas
jmp
fstps
sub
xor
sahf
xchg
xchg
dec
loope
addl
lds
adc
dec
jne
test
jp
xor
push
jo
rcr
subb
sub
dec
sbb
and
xchg
sub
pop
xchg
and
push
sub
jp
sahf
adc
pushf
cmp
jmp
mov
mov
stos
xlat
mov
sbb
aad
fucom
pop
in
mov
int
xchg
adc
pop
les
arpl
or
repnz
mov
xor
movsl
and
mov
ret
mov
sbb
outsl
jbe
arpl
flds
sub
inc
jno
cld
enter
mov
adc
lods
xchg
and
xlat
push
addl
mov
push
bound
adc
popf
jb
jg
leave
scas
ljmp
lahf
mov
or
lret
lea
bound
popf
cmpsb
aam
adc
push
jg
jb
outsb
loopne
aas
movsl
and
dec
adc
sbbl
push
lods
jp
jne
inc
loope
add
pop
mov
hlt
mov
mov
dec
sub
lahf
adc
mov
jb
sbbl
dec
xchg
add
sbb
fimuls
jp
out
adc
arpl
pushf
lahf
pop
or
iret
inc
cmp
ret
jae
insb
bound
xlat
or
ret
dec
dec
or
out
mov
fcoml
int3
and
popf
addr16
int3
sbb
mov
sbb
inc
or
sti
repnz
jl
adc
cmp
leave
cmp
mov
mov
ljmp
shll
lea
xlat
outsb
lret
fisubl
in
addb
das
xchg
loope
call
outsl
dec
aas
movsl
nop
sahf
in
incl
ja
or
mov
inc
dec
xor
icebp
jp
adc
cwtl
xchg
loop
inc
inc
mov
nop
jmp
shlb
add
popa
jb
mov
repz
and
sbb
lods
rclb
and
leave
sti
and
push
sbb
xchg
adc
cmp
push
mov
mov
xchg
xchg
bound
jnp
fucomp
out
add
xor
xlat
popf
jnp
loope
outsb
cmp
fwait
or
lods
rcrl
fwait
mov
cltd
and
sbb
pop
stc
mov
loop
sti
cmp
jo
adc
push
mov
dec
lahf
sbb
lea
arpl
xor
data16
sub
imul
cmp
cmp
and
rcll
ja
pushl
xchg
lahf
negb
push
out
lock
nop
adc
fistps
mov
cli
xor
jle
xor
pop
inc
xlat
inc
pop
pop
dec
adcl
add
imulb
dec
mov
mov
jge
mov
fwait
loopne
ja
insl
jo
shll
in
ds
mov
mov
push
sbb
inc
push
push
fwait
sub
sub
dec
out
push
in
mov
je
pop
sbb
int3
into
push
adc
xchg
flds
xchg
push
sbb
xchg
imul
cwtl
fstpt
pop
push
je
dec
bound
cmp
outsl
das
or
cmp
or
push
int
push
outsl
jnp
repnz
movsb
enter
aam
out
movsl
scas
stos
pop
xchg
mov
add
call
or
dec
lods
faddl
loop
pop
push
add
sub
and
into
daa
dec
mov
sub
pop
rclb
xchg
shlb
push
lret
fsts
fwait
cmc
mov
daa
repz
inc
daa
dec
mov
mov
push
test
xor
jmp
sbb
pop
rcl
push
pushf
popf
dec
invd
das
pusha
ffree
inc
xchg
sbb
test
mov
lock
out
loope
int
daa
dec
cmpb
dec
xor
add
adc
add
xor
pop
mov
int
dec
andl
mov
pop
adc
push
mov
and
mov
out
push
inc
jb
loope
cmp
out
pop
cmc
imul
push
push
mov
cltd
mov
pop
mov
cs
sub
inc
fstps
inc
lea
add
call
fs
xor
cwtl
inc
push
inc
sbb
jnp
add
xchg
xchg
pop
or
rcr
ret
je
lods
cmp
insl
mov
fcompl
divb
push
jbe
mov
inc
test
add
jae
adc
inc
shld
push
add
hlt
xlat
cmpl
mov
cmp
ret
iret
test
push
dec
sub
sub
clc
ljmp
xor
in
je
inc
pop
in
inc
inc
pop
cltd
stc
pop
and
or
leave
aad
fwait
jnp
push
adc
push
into
movsl
fsubl
add
fdivs
push
jp
cld
imulb
test
mov
jno
lea
pop
shlb
cltd
aaa
loop
push
and
jno
enter
sub
add
and
add
and
mov
daa
outsl
js,pt
jb
xor
sti
add
cmp
dec
lock
out
adc
cmp
ja
sub
popa
dec
sbb
sbb
aaa
jb
add
jge
ss
clc
sbb
clc
push
mov
pop
insl
dec
xchg
xchg
ljmp
insb
pop
push
mov
out
cwtl
push
sub
xchg
cld
in
aam
add
jecxz
sarb
or
and
lods
lahf
std
ds
sti
out
sbb
std
add
adc
into
inc
js
and
ljmp
fcompp
scas
push
adc
mov
push
dec
add
aaa
and
dec
lock
xchg
out
xor
leave
mov
xchg
addr16
mov
in
xor
push
fisubs
jecxz
sbb
jb
out
sub
mov
sbb
es
ret
dec
mov
sbb
inc
hlt
sbb
mov
add
and
pop
pop
cwtl
lret
sub
push
popf
aas
lea
rcrb
xor
fstl
push
dec
jecxz
clc
stos
inc
push
clc
fnsave
pop
in
repnz
xchg
fidivl
call
inc
cmp
mov
dec
aas
adc
xor
shlb
sub
insl
push
rcll
pop
mov
stmxcsr
adc
add
push
lock
mov
scas
mov
mov
sahf
mov
or
xchg
testb
inc
dec
das
sahf
movsb
lods
push
cmp
and
lock
push
jl
fdivrl
es
xor
xchg
cmp
stos
jecxz
outsb
sahf
and
adc
gs
popl
push
xchg
ss
cmpsb
fcoml
or
leave
add
incb
push
cmp
fistpl
jg
sub
add
push
mov
cmp
outsl
fs
mov
inc
inc
mov
pop
out
imul
mov
mov
lcall
cwtl
idivl
faddl
bound
pop
xor
fwait
cltd
lahf
pop
and
push
idivl
pop
sbb
pop
jp
xorb
or
jnp
fwait
dec
sbb
popa
shll
shlb
inc
cmp
int3
inc
mov
stc
xchg
push
push
xchg
mov
add
rolb
cmpsw
jbe
idiv
inc
js
fs
ss
rcll
iret
pop
pop
push
add
adc
ficoms
pop
xor
inc
mov
push
hlt
iret
pop
or
iret
js
fnstenv
sub
push
loop
push
inc
nop
insl
jmp
outsb
cs
inc
pop
bound
lds
or
sub
sbb
test
js
stos
cltd
mov
cmpsl
scas
adc
mov
jl
inc
push
xor
stos
mov
adc
lret
lret
inc
mov
dec
clc
pop
shl
adc
mov
dec
inc
mov
scas
popf
mov
int3
test
mov
fisubl
shrl
jmp
xchg
cmp
lock
sti
mov
scas
out
jg
bound
bound
scas
leave
ss
adc
fidivrl
push
cwtl
dec
aas
add
not
or
call
movsl
mov
add
test
sub
push
adc
adc
ret
mov
imul
and
loop
fst
outsl
jb
mov
call
cltd
lret
in
inc
iret
fadds
shll
mov
outsb
sbb
cltd
sbb
or
sub
movups
sahf
mov
outsl
inc
pop
mov
popf
sbb
mov
rolb
mov
or
adc
push
in
aaa
push
shl
inc
ss
cs
out
scas
in
push
daa
mov
adc
or
mov
outsb
and
jb
shll
pop
mov
divl
call
and
and
bound
daa
jmp
cltd
xchg
loopne
push
int3
lret
dec
test
addb
xchg
in
cltd
push
pop
or
fbstp
push
inc
sarl
mov
dec
sub
jnp
or
jae
adc
mov
inc
ja
mov
adc
push
and
std
sub
andl
sbb
imul
decl
orl
xchg
mov
adc
int3
out
and
jmp
mov
pop
rcrb
rcl
shr
mov
scas
and
fisubrs
sub
xor
mov
xor
add
cmpsl
xor
call
jge
sbb
adc
add
sbb
jg
cmp
sub
mov
pop
or
loope
jmp
dec
out
jge
xchg
jb
xlat
or
xor
lret
dec
push
in
add
jb
scas
mov
sbb
or
jae
lods
mov
or
shl
ret
pop
imul
xchg
add
or
loope
pop
mov
dec
das
xor
mov
xchg
push
call
dec
inc
jo
dec
addr16
pop
push
enter
push
xchg
fsubs
iret
test
mov
mov
fcoml
out
jmp
jnp
js
inc
xor
cmc
or
xlat
hlt
jmp
dec
mov
pop
jne
imul
pop
mov
sub
ret
movsl
pop
xor
sbb
outsb
les
xchg
stc
andl
ffree
repnz
mov
stc
iret
sub
test
stos
shr
ret
mov
fmuls
popa
jmp
mov
push
je
adc
inc
and
or
stos
insl
jno
mov
pop
sbb
cli
inc
cmp
sub
jmp
add
xor
bound
shl
fnstcw
movsb
mov
mov
cmp
xor
mov
sub
test
sbb
xorl
daa
dec
jb
cwtl
loop
icebp
outsb
xor
push
fcomps
or
jnp
add
lret
inc
xchg
jns
popa
inc
repnz
sub
in
sbb
sub
jns
jecxz
push
sub
jbe
je
cmpsl
adc
add
leave
mov
inc
xchg
mov
das
rorl
cmpsb
enter
pop
ror
mov
mov
mov
dec
and
and
rcrl
dec
xchg
or
addr16
push
mov
mov
xchg
xchg
sbb
jns
inc
imul
out
cmp
pop
inc
mov
jb
iret
add
rcrl
out
push
ret
cmpsl
jle
xchg
or
out
xchg
enter
push
cwtl
inc
inc
cmp
push
sub
das
or
fistpl
roll
cbtw
cld
sbb
push
jg
xor
outsb
lock
fcomps
scas
sub
lret
jmp
add
jp
ds
jle
call
fisttpl
test
in
push
and
pop
inc
add
mov
xchg
lods
cmpsb
sti
out
xchg
test
xchg
in
outsb
xor
hlt
xor
jmp
xor
ja
lods
sahf
add
cmp
or
cmc
push
push
aam
fwait
loop
shl
fwait
jecxz
add
std
int
sahf
sti
or
xor
aad
enter
mov
out
mov
aaa
inc
repnz
adc
xlat
xor
and
outsl
lcall
pop
and
or
es
rcr
std
popl
cmp
add
sub
dec
js
ss
mov
lcall
cmp
data16
fwait
movsl
or
mov
adc
daa
movsb
cmp
int3
rcll
loope
dec
popa
dec
mov
fimuls
sub
fwait
jl
pushf
cmp
cli
xor
enter
mov
or
and
scas
fucomi
mov
cmp
lahf
jge
mov
xor
fcmovb
or
sbb
test
mov
sub
fldenv
cmp
and
decl
dec
xchg
sub
or
imull
mov
pop
sbb
nop
hlt
jp
fsubrl
xlat
xchg
xor
jns
push
call
mov
or
xor
mov
aaa
lret
pop
push
mov
leave
scas
insl
mov
nop
jbe
fs
push
fisttpll
adc
les
cmc
arpl
leave
xchg
ror
and
insl
inc
jecxz
sbb
in
jp
adc
jle
cmp
stos
mov
cltd
popf
sbb
iret
dec
dec
and
lods
dec
adc
les
std
xor
cmp
mov
cmp
aad
rolb
int
mov
mov
ja
int
cmp
stos
xchg
adc
in
int3
sbb
jp
push
xor
cmpsb
scas
loope
pop
cmp
add
stc
mov
repz
mov
aam
lock
hlt
fsubrl
mov
dec
je
inc
das
sbbl
mov
xor
adc
dec
dec
pop
aam
addb
jle
mov
mov
sbb
and
push
lcall
mov
popf
xlat
aad
in
mov
imul
ffreep
outsl
jp
jecxz
iret
sub
inc
xor
inc
scas
test
sahf
jae
ret
push
scas
adc
push
imul
std
pusha
cmpsl
inc
mov
shrl
mov
lea
sbb
cmp
lahf
rorl
push
push
popa
pop
rcrl
add
xchg
push
jge
jae
clc
jno
jmp
dec
jp
rcr
mov
aaa
xor
or
add
mov
pop
pop
add
xchg
movsb
rorl
mov
clc
loop
or
xor
sarl
and
adc
or
push
ja
mov
stc
int3
xor
xor
xchg
adc
in
repnz
inc
mov
pop
lods
push
pop
ret
ffree
adc
xchg
lret
icebp
pop
or
shll
pop
rclb
cmc
lods
xor
or
or
or
cmpsb
sub
or
mov
ficoml
inc
xchg
pop
push
add
imul
out
push
test
pop
loope
mov
add
inc
jge
test
xchg
xchg
push
mov
jl
repz
stos
and
pmaxub
cltd
lock
ret
dec
lret
cmp
cmp
loope
cmp
leave
scas
xor
push
jecxz
pop
sub
imul
xchg
inc
lret
push
inc
dec
mov
push
sbb
adc
mov
pusha
mov
les
div
loopne
lret
inc
cmp
fucomi
in
imul
pop
inc
sbb
mov
or
loopne
xor
mov
pop
inc
adc
jns
xor
adc
scas
xor
out
sub
scas
or
inc
jmp
shlb
add
pop
popa
lods
fs
out
les
push
stos
inc
xor
js
aam
roll
pop
and
test
jbe
pop
popa
pop
dec
ljmp
movsb
pusha
push
xchg
add
arpl
cli
not
ret
or
sbb
gs
xchg
dec
cmp
add
sahf
sub
pop
dec
dec
in
stos
sbb
call
fildll
jp
lcall
sbb
cwtl
adc
jo
cmp
loopne
and
aad
pop
adc
mov
dec
popf
mov
adc
loope
xchg
and
stc
mov
cltd
xchg
cmp
insl
add
mov
xor
sub
add
or
mov
movsl
mov
inc
shld
dec
adc
adc
cmpxchg
imul
sub
fistpl
mov
mov
inc
pop
repz
mov
push
jns
out
test
test
or
std
mov
icebp
mov
inc
inc
mov
sub
testl
sub
dec
mov
lds
popf
scas
sbb
in
ja
sbb
mov
add
inc
cld
subb
lods
test
jle
push
push
and
push
xchg
int
adc
dec
addr16
mov
in
sub
inc
mov
or
push
inc
xchg
or
shrb
inc
fs
fildll
push
dec
jb
and
fstl
mov
aam
pop
data16
add
andb
and
add
imul
mov
cwtl
dec
imul
scas
mov
adc
out
in
loop
or
lahf
dec
inc
mov
sub
stc
add
jb
frstor
imul
inc
js
jnp
push
es
sbb
hlt
sbb
mov
sar
push
cwtl
popa
sbb
dec
in
jmp
mov
lds
leave
cmp
cmp
dec
inc
jne
mov
xchg
or
pusha
dec
xchg
push
iret
push
inc
mov
das
daa
adc
imul
inc
aam
in
loop
in
cli
bound
fstpt
pop
int
pop
bound
scas
pop
inc
iret
inc
sub
push
andl
or
fimuls
inc
movsl
jecxz
adc
daa
adc
sbb
xor
cli
sub
ds
inc
ret
add
mov
xor
mov
aad
mov
sahf
scas
jp
int
cmp
in
pop
adcl
outsb
and
pop
mulb
dec
inc
dec
adc
mov
sahf
in
inc
sub
push
jle
cwtl
mov
idivb
add
cli
inc
data16
stos
and
scas
cld
push
add
cmp
inc
xchg
loope
aaa
add
adc
add
negb
dec
mov
addb
enter
das
dec
fiadds
mov
mov
mov
dec
and
mov
xor
adc
and
ficoml
iret
xor
xlat
adc
mov
ljmp
sub
xor
jb
xchg
ret
mov
pop
sbb
sub
out
enter
add
mov
push
ljmp
xor
mov
mov
loop
push
mov
dec
loopne
or
mov
leave
adc
cmp
xorb
scas
in
hlt
push
gs
dec
cmp
pusha
decw
outsl
adc
nop
dec
outsb
clc
fbstp
and
cmpsl
mov
inc
push
sbb
push
in
or
mov
mov
xchg
out
call
mov
mov
xchg
cltd
jb
jbe
inc
cld
or
or
pop
push
fisttps
jb
cmp
or
adc
inc
or
cmp
std
inc
cmc
arpl
out
lret
popa
mov
or
cmp
adc
mov
or
in
jge
ja
hlt
cmpb
aam
pop
push
push
inc
fnstcw
and
mov
addr16
pop
pop
pop
in
pushf
insl
sahf
loop
add
jg
jb
lods
push
push
mov
nop
out
lahf
out
cmpsl
and
leave
or
sbb
xchg
push
adcb
mov
push
sub
adc
jo
fdivl
xor
push
pop
fdivrp
jl
cmpsl
and
jg
inc
roll
test
lcall
xchg
and
std
adc
mull
xor
dec
push
inc
xor
cmp
lods
pop
call
sub
lock
dec
push
icebp
cmp
mov
mov
enter
sub
out
xor
add
out
cmp
mov
mov
push
lret
mov
xchg
nop
ficoms
fsubrs
and
adc
imul
mov
cld
lock
rcr
sti
push
xchg
jbe
adc
cld
push
dec
nop
test
or
sub
mov
mov
inc
xchg
dec
addr16
mov
es
sbb
pushf
xor
jne
dec
sub
stos
shll
imul
iret
clc
aad
cmp
test
mov
xchg
inc
ret
dec
ds
jnp
sub
js
call
xchg
push
cmp
test
aas
repnz
ljmp
dec
repnz
mov
dec
mov
mov
repz
stos
jne
push
lahf
push
jae
cld
mov
jg
and
mov
push
inc
mov
add
mov
dec
and
inc
out
and
xchg
ja
add
jle
add
sbb
adc
cmp
xlat
cmp
cmc
xlat
xchg
inc
iret
lret
call
sub
push
jg
jmp
adc
fcoml
in
dec
aam
or
push
adc
mov
xchg
dec
mov
jl
insb
push
dec
lods
in
and
ret
out
and
mov
outsl
mov
insb
cli
mov
xor
mov
push
pusha
subb
sbb
ja
dec
je
arpl
repnz
dec
mov
aas
clc
lret
push
cmp
sub
shlb
fbld
or
jmp
push
adc
dec
nop
lcall
xchg
daa
push
mov
jge
outsb
inc
mov
scas
xchg
xchg
mov
jge
and
jp
test
mov
adc
mov
je
jp
mov
inc
and
mov
mov
or
push
ret
lcall
inc
shll
nop
loop
fisubrs
xchg
in
xchg
in
frstor
xchg
adc
mov
pop
mov
or
ret
or
and
ret
or
xor
scas
mov
andb
out
mov
pop
cmpsl
dec
add
jb
inc
cmpsb
cmpsb
shrl
push
pop
pop
dec
cmpsl
testl
cwtl
xor
mov
cmp
mov
mov
call
push
jle
xlat
mov
aaa
fidivl
sub
fstl
bound
insl
sbbl
cmp
lahf
inc
dec
movsl
int
andl
pop
cmpsl
inc
fwait
bound
push
sub
inc
cmpsb
js
js
sbb
movsl
sahf
inc
dec
inc
mov
add
test
test
es
cltd
push
je
pop
ja,pt
sbb
xor
es
rclb
mov
cmc
jp
dec
or
mov
lret
loope
clc
add
jnp
andl
xchg
or
cld
lret
movsl
jle
outsl
outsb
in
inc
lds
aaa
lret
pop
fldenv
or
cmp
and
leave
pop
fidivl
dec
divb
push
lock
stc
movsb
mov
jge
xchg
shlb
hlt
std
mov
mov
xchg
test
pop
imul
mov
pusha
xor
xchg
shlb
inc
out
cmp
sbb
enter
add
and
cmp
pop
pushf
fwait
cmp
sbb
and
scas
pop
fadds
pushf
mov
mov
cli
lods
outsl
loopne
sbb
cltd
scas
mov
adcl
sub
data16
sbb
scas
jl
int
aas
mov
add
jg
adc
jle
scas
mov
insl
inc
adcb
mov
push
jmp
in
sub
and
pop
mov
fnstenv
sub
outsb
lods
mov
cli
dec
dec
add
das
out
lods
das
or
xor
ja
es
ja
jge
mov
testb
subl
gs
cwtl
inc
sbb
and
ljmp
gs
gs
jns
push
loope
cmp
jmp
jmp
jecxz
push
inc
mov
cmpb
fwait
pop
ret
mov
in
loopne
inc
imulb
outsl
pop
imul
xor
adc
sahf
int3
flds
push
jae
or
mov
adc
int3
dec
outsl
mov
outsb
flds
nop
pop
sti
ss
hlt
cltd
repnz
inc
push
je
rclb
roll
shlb
xor
into
bound
repnz
ja
and
pop
jge
inc
add
in
lcall
mov
jbe
sub
adc
out
xor
cld
pop
and
cs
mov
fnsave
xor
pop
cmp
pop
pop
sub
jne
mov
scas
mov
pop
mov
xchg
sub
sbb
sbb
or
mov
push
mov
pop
cli
add
cmp
aaa
sbb
xchg
loopne
add
and
lods
outsl
out
sub
stos
dec
outsl
subb
scas
leave
xchg
andl
push
cmp
aad
dec
mov
mov
insl
arpl
shrb
cmovle
bound
xchg
cltd
fldenv
mov
mov
sahf
fstpt
and
pop
icebp
leave
xchg
imulb
imul
xchg
dec
lret
push
push
jo
out
jge
dec
shll
xlat
jge
cmp
aas
and
cltd
pop
push
movsl
xchg
and
inc
movsl
pop
shl
lods
mov
nop
dec
loope
lds
and
test
hlt
into
dec
jge
mov
adc
jb
lcall
test
adc
push
into
outsb
pop
xor
iret
xchg
mov
sbb
and
adc
inc
xor
rorb
ljmp
mov
in
sub
cld
repnz
jecxz
js
in
or
sub
outsl
jl
cmpsl
xchg
add
sbb
jne
push
ret
fcomps
lret
icebp
adc
std
mov
hlt
stos
fistpll
pushf
pusha
dec
sahf
and
push
shl
loopne
sub
movsb
inc
ss
sarb
ror
lcall
out
std
mov
popa
daa
mov
enter
pop
cmpsb
add
mov
cmpsb
notb
in
push
add
arpl
sti
or
mov
jge
lahf
stos
push
mov
xacquire
xchg
mov
aaa
inc
cmp
push
xchg
jmp
push
leave
sub
pop
test
fwait
jnp
test
hlt
cmc
and
imul
fdivr
inc
addb
cmp
sbb
lock
push
mov
lods
shrb
mov
add
jg
sbb
inc
std
cwtl
pop
jo
faddl
test
lds
ja
dec
sbb
mov
bound
icebp
cmp
insl
pushf
popa
lret
or
push
icebp
lcall
aas
cltd
sub
pop
pusha
mov
adc
mov
inc
xlat
paddd
daa
sub
cwtl
and
lcall
mov
pushl
mov
xchg
mov
sub
movsb
shrl
mov
call
insl
jno
add
out
inc
aad
sbb
test
loope
stc
cmc
push
hlt
lds
dec
jb
jo
adc
mov
addl
sub
call
js
and
xchg
push
add
mov
js
adc
lret
stc
daa
nop
stc
mov
fmull
sti
xor
adc
or
adc
cmp
leave
test
adc
rcl
daa
ret
sbbl
jle
push
aam
lods
fdivrp
fbstp
sbb
hlt
in
enter
push
out
xlat
aad
aad
or
cmpsb
push
push
sub
lret
leave
jnp
mov
mov
sub
dec
enter
andl
dec
or
adc
pop
jo
and
jns
pslld
aam
jp
dec
stc
imul
xor
int
xchg
stos
insb
sbb
subb
nop
fwait
hlt
ret
push
aas
jge
pop
mov
jnp
add
mov
dec
pop
adc
push
sbb
in
push
nop
xchg
adc
mov
pop
repz
mov
mov
mov
push
sub
xchg
shll
lods
andb
jb
xchg
fstl
imul
imul
mov
mov
and
inc
cmovl
and
dec
dec
mov
movsl
xor
jae
add
xlat
mov
sub
or
stc
jo
jecxz
or
outsb
mov
push
jmp
jle
xor
js
test
sub
es
add
jae
in
adc
dec
loope
push
pop
inc
rcrb
or
inc
and
xor
ss
cmpsb
in
mov
iret
mov
dec
pop
in
lds
repz
add
cmp
mov
jle
aas
scas
imul
insb
mov
int3
test
and
pop
or
dec
imul
mov
leave
mov
adc
mov
add
jno
sbb
cltd
in
imul
fcoml
scas
mov
mov
lret
or
mov
insl
dec
pop
xchg
or
lret
mov
insl
add
into
in
out
mov
fstpt
inc
push
and
loopne
adc
ss
fdivp
sub
jecxz
loope
out
or
mov
stc
adc
sbb
dec
fstpl
add
mov
add
cmp
add
mov
sub
ret
shld
push
inc
ljmp
ja
sub
in
mov
xor
dec
icebp
cmp
push
pop
cs
push
xchg
lock
sbb
push
mov
aam
sub
cmp
mov
xchg
or
and
xor
dec
cltd
insl
pop
popf
ljmp
mov
mov
mov
sub
mov
jecxz
scas
popa
xchg
shrb
mov
sbb
daa
mov
push
jo
adc
mov
cmp
fstps
mov
mov
or
les
pop
xor
push
iret
xchg
pop
jmp
push
pop
imul
ret
xor
aas
sub
int3
lret
outsl
adc
pop
or
call
adc
mov
and
mov
nop
jbe
adc
dec
pop
in
leave
aam
lods
mov
ret
enter
mov
jno
or
push
jbe
orl
jne
push
imul
jp
rcr
xchg
xchg
jmp
fwait
adc
ret
out
sub
ret
xchg
mov
cmp
pop
xchg
jmp
jo
mov
cmp
sbb
arpl
outsl
test
fistpll
mov
or
or
push
clc
ds
mov
xchg
mov
fisubs
jl
sbb
out
inc
in
push
rorl
xor
lods
lahf
pop
mov
insb
insl
pushf
fsubl
dec
rcrl
int
ljmp
mov
movsl
dec
mov
into
lock
push
cmp
in
ud0
loopne
shl
sbb
dec
inc
iret
pushf
nop
sbb
mull
mov
call
rcl
jecxz
pop
das
sub
gs
popa
xor
cmp
xchg
or
aas
lret
or
cmpsb
dec
scas
flds
add
icebp
das
inc
xchg
outsb
aam
jl
sarl
minps
loopne
es
outsb
jecxz
push
sarl
enter
sub
lahf
in
push
xchg
hlt
adc
and
or
inc
sti
or
push
xor
mov
rorb
adc
xor
sbb
ja
cli
inc
mov
mov
or
cmp
cmpsb
jno,pt
add
aas
dec
add
adc
mov
inc
xchg
in
sbb
adc
dec
lret
fiaddl
stc
dec
jae
rorb
or
jnp
jae
fstpt
cmp
mov
mov
mov
int
dec
dec
insb
xchg
sub
je
push
mov
dec
push
test
lret
pop
jle
bound
xor
pop
push
push
mov
and
xor
jge
xchg
pop
mov
in
inc
into
jnp
or
and
incl
mov
in
adc
xlat
xor
mov
icebp
sub
push
dec
mov
lods
jp
adc
enter
sub
inc
adc
jge
sbb
pop
pop
stc
lahf
je
inc
aaa
xchg
inc
dec
xchg
data16
sti
aaa
es
repnz
cltd
add
jp
mov
test
pusha
psubusb
sbb
out
jb
ss
mov
ljmp
stos
push
mov
mov
mov
adc
inc
mov
xchg
sbb
sbb
sbb
movl
sub
outsb
js
pop
mov
lds
inc
cmp
pushl
jne
xor
dec
push
add
aad
clc
inc
testb
dec
in
sub
call
aad
test
xor
xadd
xchg
mov
mov
aad
add
sbb
cmp
stc
sar
in
dec
andl
adc
add
cmp
fcoml
aas
lret
mov
in
lds
mov
fisubrs
xchg
sbb
mov
add
inc
pop
daa
jae
pop
xchg
or
fbld
and
pop
enter
xor
jge
jo
push
xchg
adc
es
out
sbb
stos
icebp
call
imul
fisttpl
daa
xchg
dec
pop
xchg
mov
lock
aam
rcll
lock
dec
aad
mov
sub
repz
xchg
pop
jnp
out
test
lock
add
stos
mov
or
pushf
or
mov
cwtl
and
cmp
lds
lds
xchg
mov
sahf
xor
and
hlt
in
sub
pop
jne
mov
mov
ss
call
std
cli
daa
jne
fbld
mov
push
ds
imul
inc
mov
inc
or
int
jle
loop
insb
mov
inc
setae
imul
leave
aam
mov
loope
shll
pop
sarb
and
stos
mov
cmpsb
scas
es
lret
push
pop
inc
popf
jg
out
cmp
push
loope
mov
outsl
inc
add
insl
xchg
jecxz
cs
cs
js
mov
pop
push
daa
mov
insl
push
loop
pop
cmp
mov
jmp
dec
enter
mov
dec
sub
shll
inc
add
nop
jl
pop
xchg
mov
daa
dec
push
lods
mov
and
adc
sahf
pop
or
xchg
sub
dec
xchg
and
and
mov
lds
cmp
std
imul
mov
repnz
cli
in
leave
call
add
ret
scas
and
mov
push
push
jmp
jb
sbb
inc
lea
jbe
dec
scas
repnz
push
adc
icebp
xchg
cwtl
pop
addl
xchg
add
es
fcoms
jo
or
add
mov
adc
inc
movsb
addr16
fstl
insb
or
jmp
inc
ror
mov
pop
ret
add
jo
xor
fsubl
int3
popa
and
or
jb
ss
push
ja
jne
push
mov
je
sbb
cmp
mov
and
mov
movsl
and
push
mov
jno
jo
loopne
mov
add
fcoms
les
mov
xchg
pop
nop
xor
sub
push
sbb
mov
add
fistpl
dec
scas
cmp
in
jnp
loope
dec
inc
lret
ljmp
inc
xor
loope
insl
ljmp
cmovo
movsl
sbb
bound
pop
lcall
or
imul
stos
and
insl
mov
int
mov
or
sahf
lods
sarl
shll
or
add
lret
cmp
fnstsw
and
mov
jecxz
push
add
cmpsl
and
sub
push
xor
in
mov
repnz
sub
xchg
jns
lcall
add
test
out
popa
imul
adc
aam
gs
bound
lods
or
shl
adc
xlat
scas
sbb
dec
nop
fs
enter
add
push
push
call
xchg
push
pop
ret
dec
fs
mov
or
dec
std
lods
pop
jns
decb
shrb
pushf
dec
cmp
ljmp
test
mov
sbb
or
mov
xor
sbb
xchg
lret
sahf
cwtl
mov
jg
std
faddp
test
push
xor
cmp
lret
cwtl
xor
push
cmpsb
orl
mov
mov
aad
pop
sarl
sbb
call
ficomps
shl
loope
ljmp
lcall
lret
sahf
inc
cli
adc
je
adc
xchg
jbe
cltd
jecxz
repnz
add
popa
jns
lahf
mov
ficoms
and
stc
xor
pop
sbb
and
inc
jo
xor
inc
popf
std
push
and
xchg
push
xor
add
sbb
test
jo
mov
jno
jg
int
pusha
or
or
fst
mov
mov
ss
daa
andl
outsl
stc
push
pop
std
iret
aam
imul
mov
inc
loopne
xorb
imul
lds
insl
divb
cmp
rcll
aam
stos
cli
loope
xor
sub
mov
std
inc
xor
and
mov
or
push
mov
mov
inc
cmp
dec
pop
mov
add
out
jmp
add
sub
mov
loop
or
mov
nop
sahf
mov
mov
ja
pop
roll
stc
out
or
out
repz
adc
xor
nop
test
je
jecxz
jg
mov
sub
mov
enter
cmpsl
das
cmpsb
inc
test
into
push
mov
sub
roll
shll
mov
push
pusha
xchg
adcb
ja
js
stos
dec
cmc
adc
mov
inc
into
cltd
loop
int
sbb
dec
adc
lock
orb
inc
jbe
subl
xchg
scas
into
in
clc
cmpsl
mov
sbb
adc
lcall
bound
xor
loopne
xchg
repz
push
inc
lock
mov
adc
test
xor
inc
leave
mov
inc
adc
fisttps
pop
push
or
push
lret
sbb
mov
mov
cmp
adc
push
and
or
push
mov
xchg
xor
int
scas
inc
fstpl
mov
xchg
xor
mov
mov
sti
fistpll
xor
jl
mov
push
dec
mov
int3
xchg
fwait
adc
sub
enter
dec
dec
test
test
mov
pop
xchg
inc
mov
add
sbb
xchg
insl
fs
loop
popf
shlb
inc
mov
jle
movsb
pusha
push
out
push
ss
daa
sub
mov
jp
inc
push
ds
and
insl
lahf
xor
cmp
aam
cmpsl
fdecstp
ficoml
pushf
jp
xchg
and
and
movsb
pop
xchg
rolb
iret
repz
ss
dec
cmp
mov
cmp
pushf
mov
clc
jno
nop
xor
je
stos
ret
cmp
inc
sti
aas
pop
mov
xor
inc
lret
fnstenv
add
mov
cli
stos
push
inc
in
cmp
repnz
or
les
cli
fdivrs
inc
lods
dec
jb
or
sahf
pusha
enter
sarb
mov
xchg
repz
pop
mov
xor
jne
xchg
data16
cs
insb
add
or
imul
cmp
jno
out
mov
add
cld
pop
movsb
mov
dec
or
addr16
add
leave
scas
cli
fcompl
cmp
dec
dec
aad
cli
ljmp
popf
call
dec
sbb
inc
add
pop
mov
mov
mov
dec
and
pop
sub
dec
sub
or
xor
call
jge
aam
mov
xor
sti
adc
in
movsb
mov
imul
jo
add
push
idivl
xor
push
dec
dec
call
shll
lods
xchg
xchg
mov
xchg
mov
iret
mov
das
test
ret
cmc
mov
dec
rorb
aam
add
and
les
faddp
cmp
sub
loopne
loope
pop
or
mov
cmp
pop
fbstp
movd
push
pop
mov
adc
and
pop
inc
pop
xchg
je
mov
xchg
xchg
adc
test
ret
cwtl
sti
inc
xchg
lahf
enter
dec
arpl
rcll
add
fs
cmp
cmc
sbb
add
dec
cmc
pop
mov
shlb
popf
push
ficoms
loope
pop
adc
inc
int
pop
lret
jmp
repz
test
jae
or
cli
lahf
lds
add
xor
push
inc
or
idivl
jecxz
mov
jmp
or
ja
inc
lds
orl
call
out
test
movsl
mov
mov
jp
lret
sahf
xor
adc
mul
mov
lret
xchg
push
jmp
cmp
inc
pop
in
fdiv
jl
test
and
xor
ljmp
fldenv
in
fwait
push
sub
mov
xor
rcrb
test
in
jmp
mov
je
add
xchg
pop
push
ret
mov
sti
shrl
leave
and
repz
push
sbb
pop
and
xchg
jle
sbb
dec
lret
dec
add
sti
fucomp
jmp
jge
ds
ja
and
mov
cmp
popa
inc
push
jle
movsl
cmp
std
in
pop
popf
lcall
push
cld
jae
adc
mov
jp
cmc
ss
jle
rorb
inc
xor
pextrw
add
lea
or
std
xor
add
cwtl
out
mulb
shrl
or
andl
dec
hlt
scas
cltd
js
movsb
ja
jns
ficoml
jo
enter
fmuls
jl
mov
out
jae
lea
adc
rcrl
push
jle
pop
es
aaa
loope
aad
push
push
adc
subl
dec
stos
rcll
mov
gs
lds
pusha
mov
pop
ret
and
mov
stc
ljmp
dec
xor
xchg
cmp
or
iret
lock
mov
jg
or
or
popa
das
pop
movsb
lcall
mov
inc
movsb
pop
hlt
imul
shll
outsl
push
lea
mov
testl
xlat
movups
lret
movsb
fildll
add
and
and
hlt
adc
cltd
push
add
pushf
inc
movsb
or
mov
xor
push
xchg
shlb
sub
jns
push
aam
int
fwait
jnp
xor
mov
mov
xchg
push
pusha
outsb
cmpsl
push
mov
lret
adc
jle
in
rorl
les
int3
mov
xchg
mov
cltd
xchg
stos
mov
cmpsb
hlt
add
rcr
jo
xchg
mov
jmp
xchg
jnp
ja
cmp
in
sbb
mov
arpl
cmp
mov
cwtl
jmp
ret
js
mov
push
mov
dec
mov
pmulhuw
fnsave
inc
ss
test
pusha
xor
movsl
cmpsl
dec
and
pop
enter
and
dec
pop
bound
mov
mov
lret
movsl
sarb
outsl
lods
xor
xchg
cli
scas
pop
dec
loop
pop
mov
xchg
and
insl
xchg
lods
pop
mov
inc
push
orl
popa
jnp
push
pushf
fldcw
pop
push
cmc
cld
push
push
push
in
pop
and
adc
aas
mov
sti
adc
inc
push
pusha
and
leave
stc
imulw
call
mov
jmp
les
cwtl
xchg
fistpll
ret
jne
stos
inc
mov
jle
mov
repnz
push
std
divl
fwait
test
mov
jne
out
cmpsl
sbb
call
mov
mov
fwait
subb
loope
cld
pop
repz
loop
cmp
cltd
insb
add
dec
push
sbb
mov
or
hlt
mov
outsl
pop
in
pusha
xor
mov
lsl
push
clc
fmuls
inc
inc
inc
jae
rdmsr
dec
leave
pop
xor
ficoms
xchg
sub
lods
dec
sub
sub
adc
aam
pop
and
adc
lea
sbb
dec
pop
cmpl
fmuls
mov
dec
movl
imul
inc
lock
fsubrs
movsb
inc
sub
je
je
fstl
ss
nop
adcl
in
or
sub
repnz
xor
cmp
mov
mov
repz
push
ror
mov
rol
fiaddl
add
sub
into
jne
out
xchg
mov
pop
mov
and
shrb
repz
and
imull
sub
flds
adc
mov
cmpsl
cmp
or
lods
dec
push
sub
add
fcmovbe
push
inc
mov
addr16
xchg
inc
clc
xchg
mov
fsub
stc
scas
or
outsb
repz
nop
jbe
scas
loopne
adc
ljmp
jbe
inc
jle
mov
push
mov
js
fs
adc
mov
cmp
testl
repz
lret
mov
pushf
cwtl
popf
xchg
stos
lds
cwtl
insb
mov
pop
lds
pop
push
int
cmp
push
outsb
mov
dec
jnp
jmp
xor
pushf
aaa
jno
xchg
xchg
push
sbb
pusha
in
xor
outsb
sub
add
rcrl
mov
sub
movsl
xchg
mov
aad
in
push
ret
shl
in
ret
dec
or
adc
mov
into
mov
add
push
sub
dec
mov
adc
sbb
out
sub
ja
test
mov
add
das
jnp
arpl
rcll
mov
mov
out
dec
and
push
push
inc
ja
cmp
inc
repz
inc
inc
dec
loopne
add
dec
imul
rorl
pop
das
imul
mov
ret
std
fs
out
test
pop
ret
pop
mov
test
mov
ret
add
jbe
adc
aad
dec
mov
out
pop
dec
les
adc
vmwrite
fs
fs
and
push
jl
mov
lock
shl
push
ljmp
add
jb
mov
xchg
fwait
and
in
test
in
lds
jae
hlt
mov
cwtl
xchg
mov
push
inc
pop
jno
dec
ljmpw
stos
push
push
xor
adc
mov
stc
dec
mov
movsb
filds
mov
jl
adcb
out
loopne
aad
mov
test
lahf
ljmp
sbb
ret
cmp
push
cmp
sbb
sub
push
inc
jmp
leave
clc
scas
mov
mov
push
cmp
scas
inc
nop
push
sti
fldenv
lds
push
pop
mov
jl
outsb
sbb
cltd
ja
idivl
jg
fs
xchg
and
xchg
and
les
out
mov
in
xor
fmuls
ljmp
dec
lret
pop
add
sub
loope
fbld
aas
push
pop
rolb
imul
mov
jecxz
xor
leave
add
out
cmp
les
dec
mov
mov
inc
rolb
in
or
and
daa
pop
loopne
ret
inc
rorb
mov
les
andl
cwtl
rcrl
xchg
xchg
sub
loope
ret
sbb
aas
inc
lods
inc
outsb
and
je
sbb
insl
dec
inc
ds
adc
and
or
aas
lcall
jnp
sti
sbb
jp
mov
and
mov
icebp
mov
repnz
push
pop
xchg
loop
lahf
jb
and
cli
lds
ret
and
mov
and
ja
data16
addr16
popf
pop
push
mov
jbe
dec
movsl
jle
into
les
xor
test
andl
push
mov
adc
sbb
jns
xor
sub
sbb
jg
rclb
xchg
cmpsl
lock
daa
ss
inc
es
pop
bound
testb
sub
pop
add
mov
inc
xor
mov
xchg
mul
lods
or
sti
and
cmp
adc
in
adc
push
test
jp
in
push
lcall
adc
jp
mov
mov
jnp
adcb
subl
mov
fdivs
daa
test
popw
ljmp
insl
pop
idivl
pop
dec
dec
repz
jo
cld
insb
pop
add
xlat
pop
and
jl
pushf
jmp
inc
enter
inc
and
lcall
aad
cmp
jbe
adc
cmpsl
or
adc
cmp
pop
cmc
sbb
lods
xor
jge
int3
in
repnz
inc
ss
xchg
push
mov
stc
cwtl
pop
jo
movsl
jg
sub
cld
mov
adc
cmp
adc
lcall
mov
adc
cmpsl
fwait
test
push
mov
loop
leave
jno
add
jo
stos
sti
pop
test
pop
cmp
inc
stos
mov
je
pop
pop
xchg
sti
addr16
lods
fwait
ret
insb
and
sub
nop
and
mov
int3
fildl
daa
push
dec
call
int3
push
inc
mov
xchg
pop
sbb
push
addr16
or
cmp
rcrb
les
adc
jno
lret
inc
sbb
nop
add
ds
mov
ret
push
insb
in
cld
lods
call
dec
aas
xchg
cmc
andb
je
stc
jo
jne
mov
mov
add
dec
jb
jg
sub
andb
xchg
push
pop
sbb
loop
clts
test
sbb
mov
adc
or
jle
jmp
sub
and
dec
pushf
mov
and
imul
push
mov
nop
arpl
out
mov
or
dec
xor
pushf
ret
mov
or
cltd
sbb
dec
xor
stos
push
jbe
cmp
adc
cmpsl
or
clc
dec
adc
pop
hlt
jbe
in
and
or
sub
aam
dec
and
ficoms
push
call
sbb
xchg
std
xchg
insb
in
popf
adc
testl
inc
or
jnp
les
sub
and
fbld
inc
jg
stc
inc
sarl
out
and
fistps
mov
inc
mov
mov
inc
in
in
xor
mov
int3
mov
pop
push
add
add
dec
jle
std
hlt
adcb
inc
jae
pop
inc
rclb
pop
mov
mov
sbb
fsubs
pop
pop
mov
ljmp
lret
pop
fmull
cmp
xchg
int
jl
push
fidivl
fucomp
std
les
push
lock
sub
mov
mov
cli
nop
shrl
cmp
mov
jecxz
aas
xor
mov
orl
ret
ficoms
pop
inc
into
imul
sub
sti
mov
repnz
imul
fstps
sub
in
sbb
mov
add
push
xchg
ss
pop
push
lret
stos
sbb
push
sub
inc
jge
xor
repz
add
cmp
nop
stos
push
push
aas
aaa
cs
fsts
add
mov
push
call
shr
push
mov
pushf
mov
mov
xor
jno
es
movsl
loopne
mov
and
or
mov
mov
les
in
or
data16
cbtw
inc
call
mov
push
mov
mov
dec
jle
daa
sbb
nop
gs
aaa
popf
cltd
push
in
xchg
aad
repz
movsl
cmp
leave
adc
cs
jle
xor
add
clc
and
mov
jmp
cmpb
ljmp
mov
pop
orb
jge
adc
call
cmp
sbbl
xchg
xchg
push
lea
shrl
add
and
mov
cmc
jp
push
sub
mov
dec
sbb
sub
xchg
cld
inc
hlt
insl
and
lods
mov
mov
dec
in
mov
jne
inc
jle
cmpb
adc
jno
xchg
orl
pop
sub
fisttpl
push
in
lret
push
push
and
mov
cld
cmpsl
sahf
pop
adc
iret
hlt
mov
outsl
shll
xchg
mov
xchg
push
push
push
mov
cmpsb
das
data16
loope
dec
clc
in
or
rolb
xlat
cmp
mov
movsb
mov
adc
mov
in
test
mov
xchg
testl
out
cmp
mov
nop
pop
imul
stos
repz
cs
outsl
pop
cs
rorb
int3
pop
mov
lods
xor
push
aam
ja
pop
add
ss
aas
mov
clc
mov
sub
dec
ret
icebp
pop
mov
gs
dec
data16
xchg
xlat
xchg
fists
movsb
hlt
testb
mov
loopne
sbb
aas
aaa
test
in
in
add
mov
inc
das
jp
pop
testl
data16
jo
repnz
out
pop
mov
sbb
and
sbb
test
pop
loope
xchg
add
stos
inc
gs
inc
jge
repz
aas
or
cmpxchg
adc
in
mov
fldl
push
xchg
xchg
fmulp
loope
clc
push
and
mov
jno
push
mov
and
scas
ret
jecxz
rcll
inc
sub
bound
jge
jecxz
xchg
cmp
xchg
jmp
movsl
pop
cmp
xor
mov
loopne
into
push
jne
inc
mov
xchg
push
ret
inc
cmc
cmp
lea
adc
sbb
test
scas
jbe
adc
jno
fcmovu
jl
jno,pt
push
jnp
jbe
push
popa
mov
out
jle
es
cmpsl
inc
stos
xor
cmc
push
cltd
arpl
cld
inc
mov
je
dec
aad
fcoms
fidivl
pop
stc
sbb
aad
dec
mov
mov
in
sub
pop
and
outsl
mov
push
icebp
push
jl
add
push
xchg
rorb
dec
movsl
push
adc
sbb
sti
fdivs
add
push
out
cmp
fiaddl
xor
sub
test
sub
out
enter
dec
pop
in
arpl
adc
cmc
jb
jge
xor
xor
adc
jmp
jecxz
lahf
test
aad
repnz
fdivs
xchg
inc
mov
popf
scas
jno
outsb
ljmp
pop
sub
xor
jecxz
xor
cmp
pusha
pop
ss
fisttpll
mov
xor
out
sub
addl
cmp
mov
mov
mov
and
pop
clc
sub
sbb
sub
ljmp
inc
in
and
jns
lret
cmp
cltd
xor
adc
adc
mov
add
loop
shrl
scas
mov
dec
mov
jl
stc
adc
loopne
adc
pop
cmp
cmp
daa
push
xchg
inc
push
push
add
jp
or
lock
adc
and
pop
cld
dec
subl
mov
xor
mov
dec
cli
out
pop
cltd
rcrb
gs
cld
push
inc
inc
mov
mov
lret
enter
pop
mov
pop
adc
test
sbb
lds
int3
dec
icebp
jge
jmp
test
mov
insl
in
loop
inc
jp
outsb
push
jecxz
ret
pushf
lcall
stc
test
and
pop
addr16
pop
leave
ficoml
hlt
sbb
mov
popf
sub
xor
add
mov
out
mov
mov
outsl
fnstenv
lea
pop
push
dec
sub
mov
jle
jb
icebp
icebp
and
pop
out
es
jl
xor
mov
repz
fstpl
mov
and
in
xchg
adc
out
and
mov
push
loop
sahf
lds
js
push
sub
test
cmpl
ja
dec
pop
cli
mov
dec
sub
ljmp
or
in
vucomisd
jbe
cmpb
mov
ret
push
popf
xlat
xor
lods
push
xchg
mov
dec
and
push
sbb
xor
xorl
sti
vprotd
insb
movsb
jbe
mov
leave
mov
add
ss
xchg
adc
sbb
pop
push
add
pop
mov
loopne
mov
and
sub
pop
cmpsl
test
fsts
jp
cmp
jae
mov
insb
call
jae
arpl
sub
scas
mov
rcrl
sub
lock
sub
test
sahf
or
sbb
inc
inc
mov
inc
pop
xor
cmp
inc
scas
pop
cmp
sarb
insb
sbb
movzbl
dec
xchg
movsl
add
add
les
daa
rcr
jb
ja
out
xor
sbb
or
in
dec
loopne
inc
inc
outsb
fcom
sbb
filds
in
cmpsb
movsb
mov
outsb
push
jno
repnz
pushf
inc
jo
and
mov
or
aaa
pop
xor
mov
dec
test
add
scas
add
das
mov
sbb
sbb
jg
pop
pop
mov
mov
arpl
cmp
cwtl
and
sub
insl
and
scas
xor
aas
push
inc
fsincos
ljmp
dec
int
cld
cmp
pop
push
lods
mov
je
in
or
add
dec
push
jne
aaa
aam
imul
xchg
inc
je
jnp
jbe
bswap
cmpsl
pop
xchg
inc
insb
ss
mov
push
jns
ror
xor
or
jecxz
cld
rorl
pop
out
push
test
stos
out
pop
arpl
mov
arpl
xor
shlb
dec
and
in
stos
scas
stos
cs
xor
xchg
mov
daa
enter
shlb
movsl
xor
inc
sbb
jbe
xlat
enter
inc
leave
jg
sbb
imul
mov
xor
pusha
or
test
andl
mov
sbb
xchg
sbb
dec
icebp
xchg
jbe
mov
test
outsl
jne
jecxz
aas
rclb
mov
ficoml
adc
cmp
sti
sub
mov
loopne
cld
adc
and
fisttps
hlt
andl
shlb
and
pop
fisubrs
jno
add
pusha
adc
add
add
and
scas
mov
xchg
sbb
add
mov
out
sarl
incb
and
daa
mov
dec
push
and
mov
outsl
cmc
nop
jmp
or
retw
jge
pop
aaa
mov
jns
xlat
test
adc
inc
rol
cmp
jns
add
loope
sbb
ffree
jbe
or
aad
sub
mov
mov
ficoms
lret
aad
lret
les
or
adc
ret
ret
mov
jge
xchg
add
imul
mov
xchg
shrb
mov
insb
lds
jle
inc
xchg
ds
adc
pop
scas
push
aas
js
fwait
sbb
incb
mov
push
cwtl
push
or
sub
enter
pop
mov
arpl
xlat
leave
pop
xchg
cmp
dec
xor
bound
sbbl
mov
in
add
mov
mov
xchg
xor
cli
les
or
xchg
cmpsb
dec
mov
mov
push
leave
cs
sbb
sahf
xchg
jae
dec
xor
mov
and
cmp
jbe
div
pop
xchg
push
sti
mov
ss
inc
mov
inc
not
xchg
dec
jae
lcall
and
outsl
and
sub
mov
in
mov
fs
sub
lea
sarb
lock
aam
sahf
data16
mov
scas
arpl
negb
sub
fisttps
jo
mov
mov
mov
dec
cli
in
adc
gs
shlb
add
test
ds
jge
xchg
push
xlat
cmpsl
mov
jp
sub
in
les
mov
xchg
xor
cmp
ja
aaa
movsb
mov
out
pop
mov
icebp
mov
adc
cmp
jge
out
mov
outsl
jne
push
mov
fsubrs
les
mov
cmp
push
repnz
inc
insl
popa
jbe
pushf
mov
lods
sub
cs
ja
js
pop
lahf
jb
jns
pop
cmp
jl
add
fdiv
and
cmp
push
xchg
xor
or
mov
imul
bound
sahf
addr16
sbb
insb
sbb
sub
imul
or
jle
xchg
mov
push
jl
cmp
mov
mov
pop
sahf
in
imul
out
bound
push
pop
push
ror
notl
dec
xor
jno
arpl
dec
xlat
dec
rcrb
out
dec
cli
adc
fs
dec
lahf
dec
xor
fistpl
push
popf
jne
mov
sbb
mov
xchg
xchg
xchg
lret
sub
push
insb
push
pop
and
imul
add
inc
push
dec
into
pop
add
leave
cmp
xor
mov
test
stos
sub
sub
mov
adc
jmp
cli
inc
xor
out
iret
mov
cli
or
xchg
pop
jp
push
dec
push
aam
testl
push
sub
fs
idivb
pop
add
push
jae
outsb
jg
adc
inc
vhaddpd
pop
lahf
add
xchg
and
cmp
push
das
out
adc
daa
out
and
mov
mov
pusha
add
push
pop
jg
shll
or
lahf
inc
aaa
or
lret
xchg
test
jo
dec
ficompl
inc
pusha
jb
stos
mov
sub
cmp
gs
and
in
lods
loopne
mov
in
pushf
je
xor
hlt
adc
sbb
push
aaa
stos
fiadds
pop
lea
loop
mov
idiv
mov
into
lea
mov
xchg
cli
mov
cmpl
pop
cmp
xchg
imul
mov
and
mov
inc
cmc
mov
or
cmp
or
xchg
mov
dec
ror
sub
rclb
stos
test
int
adcb
push
fildl
push
es
fsubrl
dec
jae
mov
mov
cmpsb
mov
in
leave
sub
inc
xchg
test
inc
inc
push
sti
es
mov
or
test
inc
jbe
call
mov
scas
fwait
mov
mov
pop
adc
stos
pop
fadd
mov
mov
loop
mov
mov
and
imul
xchg
jge
repnz
test
adcb
clc
insb
jbe
stc
into
xchg
sti
lods
mov
or
sub
add
inc
xor
xor
sub
gs
roll
insb
enter
sub
xchg
mov
push
or
mov
pop
daa
jne
call
sub
sbb
dec
dec
or
outsl
inc
loop
xchg
pop
sbbb
jle
or
adc
out
cltd
inc
ret
js
sbb
stos
xchg
or
add
scas
test
sbb
mov
mov
mov
arpl
cmp
cmpsb
dec
pop
cmp
mov
pusha
cld
mov
sti
shl
cltd
repz
repz
xor
imul
sbb
aas
add
ja
adc
in
inc
xor
test
in
sti
inc
jmp
addr16
jbe
push
jo
mov
jo
aas
lcall
xchg
out
jo
mov
iret
ss
cltd
in
add
aad
dec
sbbl
mov
and
test
fisttpl
movsl
xor
mov
inc
xchg
test
mov
outsl
mov
repz
imul
inc
cs
inc
jae
xchg
out
sbb
test
push
mov
in
sbb
daa
xor
jmp
push
xchg
pop
mov
rcrl
dec
lret
jnp
aas
adc
minps
fwait
jg,pn
loop
ljmp
push
and
sub
xchg
data16
daa
loopne
add
inc
imull
stos
dec
or
stc
pop
inc
pop
xchg
dec
mov
sbb
rcrb
mov
sub
or
and
jo
pop
sbb
lock
aam
lret
lahf
pushf
mov
mov
mov
xorb
inc
xchg
cmpsl
xor
jb
sub
jmp
sbb
push
push
negb
lock
daa
jg
fldcw
imul
inc
inc
rclb
xlat
mov
jae
out
sahf
pop
loopne
push
bound
cmpsb
dec
ja
push
dec
sub
imul
mull
in
and
jae
shll
bound
sbb
cmp
inc
cwtl
cmp
mov
bound
push
add
mov
test
mov
inc
inc
jb
xor
push
mov
jns
jbe
pop
test
fcoms
inc
xor
adc
adc
sub
lret
xchg
push
sbb
pusha
mov
pop
fdivrs
jl
pop
scas
mov
add
add
inc
setne
add
and
out
sti
or
mov
repnz
mov
mov
scas
add
inc
jnp
cwtl
cld
pop
mov
fwait
push
jle
mov
out
inc
ret
or
cmp
outsl
sbb
emms
xchg
jp
dec
stos
ss
stc
jb
pop
xchg
xor
pop
cmc
adc
out
repz
xor
daa
push
sbb
imul
xor
lock
test
fidivrs
mov
jecxz
scas
sub
faddl
out
jnp
xchg
loope
imul
fninit
clc
and
sahf
sub
sti
out
jge
cmpsb
insb
mov
xor
test
cmp
ret
cli
mov
clc
nop
repz
mov
lahf
mov
dec
adc
outsl
dec
imul
xchg
mov
sarl
add
xor
jge
inc
push
in
daa
mov
push
xor
or
std
in
mov
push
pop
mov
cli
flds
rclb
pop
ljmp
push
adc
ja
mov
jns
mov
repz
andl
enter
xchg
adc
gs
inc
mov
or
loop
sub
and
mov
mov
mov
lods
outsl
mov
jmp
js
push
mov
and
ja
sti
pop
xchg
rorl
loop
push
and
lcall
sbb
test
rep
push
int3
mov
outsb
push
out
lods
mov
push
sbb
and
call
pop
mov
es
lcall
sbb
or
mov
outsl
pop
out
jno
xchg
fisubrs
inc
pop
jbe
addr16
add
cli
xchg
fistpll
cltd
in
dec
adc
jg
jg
cwtl
bound
cmc
dec
int
in
adc
lea
xor
xchg
cs
sub
mov
mov
into
adc
and
adc
clc
shrl
mov
in
add
mov
mov
outsl
testl
jae
cmpsb
push
ljmp
xlat
or
fisttps
dec
mov
cmp
add
mov
jecxz
mov
mov
xchg
or
pop
outsb
cmp
aam
mov
mov
in
xchg
lods
and
cmp
mov
lea
xchg
divb
add
scas
adc
cmp
lret
out
xor
arpl
xor
sub
and
leave
jns
enter
pop
and
incl
mov
dec
push
sub
out
clc
mov
adc
imul
and
or
movsb
lret
aam
push
incb
repz
lahf
or
push
jnp
lods
or
mov
es
into
mov
adc
scas
mov
xchg
cmp
mov
xchg
popa
imul
insl
sub
fcoml
cmp
push
pop
lods
pop
aad
movsbl
fsubrs
aaa
xor
cwtl
adc
xlat
cld
add
adc
inc
subl
pop
ja
lods
cmp
cwtl
in
js
and
adc
push
mov
mov
lock
sub
outsb
push
loop
mov
pop
pop
inc
test
pusha
mov
orl
push
adc
cs
lock
push
jg
mov
or
xchg
jae
ret
xor
rcll
and
stc
mov
outsb
adc
and
sub
lock
pop
xor
jno
xchg
fidivrl
mov
mov
out
lods
daa
inc
fiadds
rcrb
mov
xchg
or
jg
mov
cmp
outsb
icebp
adc
push
out
ss
out
shlb
test
push
xlat
popf
stos
mov
int3
xchg
aaa
adc
stos
fiaddl
dec
imul
mov
xchg
push
pop
out
nop
sub
repz
mov
cmpsl
inc
repnz
sarb
lds
pop
and
loope
and
jb
push
sub
or
int
adc
add
loopne
test
sub
adc
loop
jne
bswap
fimuls
push
mov
out
cmp
notl
jp
jnp
int3
push
shrl
shl
rcrb
jae
xor
xchg
cmp
cmp
shrb
sub
arpl
mov
notb
nop
add
int
add
orl
pop
out
mov
test
dec
pop
loopne
push
in
scas
sub
cs
pop
jmp
jbe
xor
repnz
add
pop
sti
pop
ljmp
mov
push
cwtl
sti
scas
jo
push
leave
leave
in
ljmp
ss
popa
sahf
repnz
inc
bound
push
push
es
push
pusha
xchg
testb
scas
sbb
test
xchg
cld
or
xor
js
sub
push
in
push
jae
out
data16
les
scas
mov
xor
mov
pop
stc
xchg
mov
mov
sbb
pop
mov
adc
jbe
into
push
jae
inc
dec
iret
movsl
sahf
sub
push
movsb
jo
enter
nop
out
inc
ljmp
xchg
cmpsl
mov
sbb
pop
jmp
jnp
inc
arpl
dec
out
clc
test
ja
adc
inc
mov
jb
push
cmp
insb
ja
sbb
inc
mov
jecxz
out
mov
mov
mov
cwtl
xchg
rcrl
xor
aad
and
push
rcrb
pop
sarb
scas
cmp
cmc
sbb
mov
inc
xchg
jne
aaa
mov
sahf
adc
xor
add
push
xor
dec
push
jge
jne
pushf
jne
outsl
inc
add
lcall
sbb
jge
lods
sahf
in
leave
sbb
ja
ret
aaa
rclb
scas
and
push
in
add
jb
push
lods
cmp
insb
mov
or
mov
and
negb
xlat
and
stos
icebp
cmp
loop
xor
cmpsl
out
and
popf
clc
and
sbb
fisttps
fbld
sarb
or
in
lock
fsubs
dec
andb
dec
push
push
in
push
pop
add
bound
pop
cmp
mov
scas
or
sti
fcmovnu
sub
mov
jns
jecxz
rcl
ljmp
bnd
lods
das
mov
sbb
push
mov
mov
lods
pop
push
add
leave
jae
ror
lret
adc
jge
aam
das
mov
sbbl
test
mov
jo
ja
fadd
fwait
std
imul
dec
mov
jo
and
lret
call
fwait
push
aas
aad
dec
cmpsl
pop
dec
idivl
outsb
xorb
fs
xor
les
es
sub
adc
pop
xchg
and
dec
outsl
jge
jno
jae
pop
imul
sbb
pop
dec
ret
jmp
xchg
xor
or
push
mov
adc
adc
or
mov
mov
ljmp
xchg
in
mov
loop
push
or
mov
inc
movsl
or
pop
fnstenv
dec
clc
lahf
arpl
cmpsl
scas
in
push
fmull
inc
pop
loopne
rcrb
enter
sub
cld
mov
push
cmp
test
and
in
or
lahf
outsl
mov
inc
mov
loopne
out
mov
add
mov
imul
jae
dec
cmp
cmp
jmp
push
add
in
fidivrl
xor
push
jnp
xchg
std
jne
adc
popf
mov
jp
loop
scas
cwtl
test
and
pop
cmp
sbb
hlt
pop
xor
mov
cs
hlt
push
int3
cmc
mov
nop
mov
mov
xchg
fdivrs
out
push
mov
pop
adc
and
aam
addl
cmc
in
and
or
hlt
push
fidivs
inc
out
xchg
mov
jnp
mov
xor
fcmovnbe
pop
scas
mov
btc
sub
loope
sbb
mov
pop
inc
pop
addb
xchg
mov
rorb
fucomip
xor
fdivrl
loope
arpl
adcl
mov
outsb
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
push
or
dec
push
test
aaa
cltd
inc
lock
cmp
pop
push
int
lret
cltd
and
shrb
dec
pop
mov
push
mov
inc
ret
in
jno
and
mov
pop
lods
aad
inc
das
sub
loop
inc
mov
sbb
inc
push
cltd
inc
dec
ljmp
adc
sahf
insb
insb
fdivrs
pop
pop
enter
out
cmpsl
sbbl
outsl
jne
push
popa
shll
aam
adc
iret
dec
pop
jae
shr
mov
jp
inc
mov
aam
in
xor
fisubrl
pop
or
add
lahf
lds
cmpsb
sahf
cmp
lods
add
or
or
in
pusha
sbb
mov
outsl
into
cmp
jno
fcmovnb
mov
sub
xor
jbe
xchg
cmp
inc
mov
xor
sbb
ror
mov
add
adc
dec
dec
push
add
xchg
cmpsl
xchg
cli
data16
pop
cwtl
orl
out
les
inc
jle
movsb
pop
bound
mov
pop
fwait
shl
lods
out
jnp
sub
pop
jno
adc
mov
push
jecxz
das
dec
mov
out
xor
sbb
cmc
add
ret
sub
je
cmp
or
jecxz
in
ja
out
cmp
mov
in
push
out
setnp
popa
mov
out
out
jl
fwait
xchg
stos
and
insl
or
adc
lret
or
mov
cltd
fbld
adc
push
aam
mull
div
jle
mov
jno
stc
data16
pop
inc
adc
jns
or
or
sti
outsb
insl
sbb
test
aaa
insb
sbb
ret
and
iret
mov
pop
xchg
les
test
cltd
push
push
clts
pop
fistl
inc
pusha
inc
mov
icebp
imul
repz
dec
aas
int3
sub
and
xor
dec
mov
ljmp
scas
sbb
inc
add
jb
insb
and
add
dec
sub
mov
jo
daa
pop
fidivl
stos
call
clc
rcr
cld
addr16
ss
das
cmc
in
push
adc
popa
in
popf
and
mov
shll
dec
mov
add
ss
leave
cmp
jecxz
lret
int
or
sbb
pop
icebp
lock
test
mov
lcall
ret
into
insb
mov
or
enter
nop
dec
pop
loopne
cli
and
leave
mov
stos
scas
pop
add
jecxz
jge
into
in
das
mov
mov
stc
dec
xorb
rcll
and
mov
xor
add
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
pusha
or
