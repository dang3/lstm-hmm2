cmp
inc
inc
mov
ret
adc
mov
js
lods
push
mov
popf
cmpsb
mov
hlt
out
divb
mov
mov
popf
xchg
adc
jecxz
xchg
orb
pop
inc
push
repnz
and
mov
add
pop
cmp
sti
mov
dec
sbb
lret
xor
xor
scas
xor
lds
mov
push
inc
mov
pop
in
subl
inc
inc
mov
cwtl
jmp
sub
imul
aam
popf
pop
dec
jle
xchg
lret
lock
mov
fnstsw
push
psrlq
fists
push
movsb
mov
or
xlat
and
clc
sahf
jmp
popl
pusha
add
mov
inc
adc
add
das
ss
nop
in
cmp
out
jae
repnz
inc
sub
ret
ds
xchg
fsubrs
fld1
aaa
add
or
movnti
inc
jbe
jne
scas
gs
out
mov
xchg
iret
and
lret
or
push
fsub
xor
fstp
xor
bound
lret
add
jge
xorl
mov
ret
pop
fadd
inc
inc
jnp
dec
xchg
icebp
push
mov
xlat
cmp
subb
jns
jne
shl
sbb
mov
enter
addr16
hlt
lock
outsl
xchg
dec
clc
mov
ja
enter
pop
lret
fidivs
hlt
into
repz
mov
push
mov
pop
pop
dec
call
add
mov
pop
mov
and
jl
popa
cmpsl
dec
movsl
es
ret
aaa
rorb
inc
adc
sub
cmpsl
push
cmp
and
jo
push
hlt
push
stos
jne
insl
cmp
loopne,pt
ds
mov
imul
sahf
sub
mov
pop
jne
outsb
scas
xor
sarl
leave
xchg
movsl
imul
popa
iret
sub
stc
stos
xchg
ror
jmp
pop
in
test
sbb
push
jns
or
adc
lret
rcrb
xor
ds
sbb
jns
vphaddwd
mov
adc
in
stos
adc
les
scas
push
fdivrs
fmull
aas
or
aad
push
dec
push
lret
pop
jns
sbb
pop
sub
mov
mov
shrb
adc
mov
xchg
mov
and
pop
and
mov
pushf
test
adc
aaa
or
sti
leave
in
dec
and
icebp
cs
pop
stc
idivl
xchg
push
sub
mov
inc
inc
fidivrl
lret
inc
mov
pusha
mov
bound
adc
rcrl
shll
ret
jl
shl
test
clc
push
pop
or
ror
push
push
pop
pop
cmc
mov
xchg
jae
jbe
and
push
push
jno
sub
pop
pop
add
call
push
add
add
xor
jo
xor
dec
inc
lea
nop
mov
xchg
and
sub
test
call
jmp
push
xchg
ret
addl
pop
mulb
mov
pop
and
lea
ja
push
popl
push
xor
pop
push
popl
jl
push
mov
pop
movl
ja
jns
push
ror
pop
fnop
jle
shl
jmp
mov
fbld
push
addr16
mov
int
push
cmp
repnz
xchg
xchg
sub
jmp
je
push
jo
js
or
pop
stc
push
test
pop
lea
clc
cmp
push
push
push
add
pop
pop
pop
pushl
pop
clc
push
pop
and
cmp
je
push
mov
pop
push
mov
call
xor
adc
and
or
fdiv
push
add
adc
adc
pop
negb
inc
cmp
aaa
xor
mov
add
test
jecxz
in
pop
pop
push
add
pop
mov
xor
test
and
add
inc
dec
test
xchg
pop
push
pop
xchg
or
jle
je
add
push
ror
pop
je
add
test
push
pop
add
push
movzbl
jle
test
push
jbe
push
and
pop
pop
add
xchg
xchg
push
add
cld
nop
push
jne
test
pop
jno
push
jae
jl
cld
pop
clc
lea
test
loop
pop
push
push
pop
call
imul
loopne
and
aad
jl
cmovg
in
fsts
pop
popl
pop
dec
jne
push
mov
call
push
mov
stos
les
dec
mov
xorb
ss
insl
test
in
cmc
jg
mov
leave
dec
mov
push
cmp
jno
cmp
push
arpl
movsl
leave
jg
js
lods
mov
lahf
jb
fidivrs
stc
jne
jg
ja
mov
adc
iret
cmpsl
dec
pop
mov
cmpsl
ja
sahf
mov
test
pop
cmp
add
push
loopne
in
adc
lret
into
stc
pop
pop
ret
push
push
pop
jmp
add
mov
xchg
negb
jo
cmp
pop
jmp
mov
loop
jecxz
mov
mov
pop
xchg
inc
add
push
push
jns
add
pop
pop
sub
add
jl
ror
push
rol
pop
nop
mov
jmp
nop
jmp
mov
inc
dec
jg
aad
and
inc
adc
data16
inc
pop
push
sub
sbb
fistpll
push
xor
pop
xchg
in
jl
shll
xorl
or
xchg
and
pusha
push
mov
sbb
out
stos
lret
xchg
mov
ja
pop
cmp
lret
xchg
daa
fadds
jne
pop
pop
loopne
and
in
mov
adc
stc
ljmp
xor
mov
cs
pop
xor
inc
push
inc
mov
push
mov
ljmp
xchg
xor
lret
jno
jmp
inc
cmp
sahf
cmc
pop
mov
repnz
testl
sbb
pop
psrlw
enter
mov
dec
lods
mov
stos
xor
in
push
popa
clc
testb
push
jae
push
mov
push
insb
xchg
jae
lcall
or
stos
jmp
rcr
jg
adc
adc
int3
out
loopne
pop
pop
cmp
outsl
int
pop
lret
lea
lret
pop
pop
lret
pop
fistpl
fcmovnu
cmpsl
mov
lret
lret
arpl
cmp
rcr
xor
sub
mov
loopne
and
jmp
sub
or
dec
or
scas
sbb
add
or
sub
pop
ret
adc
out
mov
leave
dec
xchg
fisubs
ret
sub
shrl
ljmp
ljmp
test
inc
sbb
inc
mov
mov
out
out
sub
add
fimull
lret
icebp
jmp
insb
popf
outsb
ficomps
and
lcall
mov
aam
or
push
jnp
xchg
mov
add
in
fimull
pop
mov
fisubl
lret
jle
or
in
mov
bound
cwtl
sub
or
jg
pop
cmp
pop
inc
fwait
pop
movsl
push
leave
stos
push
sbb
sub
inc
fsubs
jecxz
or
aam
cs
xchg
popf
mov
sahf
pop
push
or
dec
jle
mov
ds
xor
int3
movl
loope
jbe
adc
mov
clc
mov
and
cmp
jge
dec
jle
xchg
and
rcrb
ret
stc
jle
popa
mov
bound
add
fists
addb
pop
xor
mov
push
push
daa
lds
icebp
lds
ds
cli
push
dec
sti
lds
mov
pop
cs
loope
jge
sbb
push
sbb
scas
scas
or
xlat
cs
fsubs
ds
and
xchg
lret
cmp
sahf
push
push
in
push
sub
and
xlat
xor
repz
jb
adc
sbb
mov
sub
jge
adc
jg
sbb
test
adc
mov
rolb
dec
fidivl
fidivrs
fiadds
dec
add
sbb
outsl
repz
pusha
pop
nop
fs
in
int
in
cmp
pop
cmp
pop
stos
xor
out
out
mov
pop
je
pop
jecxz
repnz
repnz
lock
bound
roll
enter
cmpsb
pushf
outsl
aad
enter
or
sub
outsb
xor
jmp
popf
pop
sub
cltd
pusha
aas
xchg
aas
xor
xchg
fmuls
inc
outsl
lods
xor
lods
fld
sbb
call
cs
cmp
cmpsl
add
mov
or
popa
or
subps
ret
jae
xor
jecxz
inc
mov
mov
push
mov
push
jne
mov
gs
mov
dec
fmulp
and
arpl
cmp
rcr
xor
mov
loopne
imul
push
movsl
jmp
or
dec
or
scas
inc
lds
and
mov
lds
xor
mov
ret
xchg
mov
jecxz
inc
in
add
mov
adc
dec
push
jns
lret
cmp
aaa
idivb
cmp
popa
hlt
inc
mov
outsl
adc
cmp
arpl
cli
sbb
sbb
push
mov
in
cmp
in
cmpl
icebp
test
mov
lods
pop
es
int3
es
dec
inc
aaa
dec
cmpsl
jecxz
cmpsl
cmp
cmp
shlb
inc
inc
mov
mov
push
adc
mov
repnz
popa
mov
add
mov
pop
cltd
jmp
pop
in
jg
pop
subb
out
sub
lcall
gs
inc
scas
fadds
sbbl
jge
inc
in
push
adc
or
aam
mov
fwait
std
add
fdivp
repz
pushl
outsb
xchg
push
pop
insl
lret
pop
xchg
iret
orl
sbb
adc
jne
test
inc
pop
insl
jp
jo
mov
loopne
in
aaa
or
jne
jnp
popa
cmc
pop
cmc
adc
ret
pop
dec
icebp
les
repnz
inc
or
jns
mov
fs
mov
cmp
andl
xchg
and
xchg
xchg
repz
bound
sub
push
mov
leave
sub
xor
popf
push
sbbb
les
add
cld
inc
sub
scas
pop
push
in
test
scas
pop
adc
xlat
loopne
jbe
jge
mov
cmp
je
xlat
lock
xlat
mov
adc
xchg
stos
fwait
cltd
mov
fnstcw
mov
jp
mov
lahf
add
pop
mov
pusha
add
xchg
or
mov
xor
xchg
cs
shll
stos
pop
ja
inc
flds
fistl
and
mov
push
jmp
cmpsb
xor
cmp
fmul
jo
adc
adc
xchg
data16
repz
pop
mov
call
test
pop
jno
ss
cs
mov
dec
adc
jl
lea
std
xchg
sbb
cmp
add
add
jo
and
dec
mov
sahf
js
jnp
mov
stc
cli
dec
push
sbb
jns
push
mov
fidivl
dec
loopne
test
into
movsl
cmc
push
rolb
ss
add
stc
xchg
outsb
leave
mov
outsb
sbb
movsb
repz
push
call
cmp
lods
lret
movsl
xchg
xor
jle
sbb
into
aas
push
leave
jno
in
xor
add
mov
aaa
adc
mov
sub
out
sub
pushf
pop
insb
in
les
ss
xchg
lret
shr
adc
adc
test
jp
sbb
jp
push
sub
adc
and
xchg
idiv
xchg
xor
push
xchg
xchg
pusha
dec
sbb
roll
push
std
shl
movsl
arpl
sub
stos
xor
test
dec
jmp
sbb
fwait
mov
cmp
repz
adc
xor
call
xchg
pop
or
sub
adc
fsubs
test
sub
add
repnz
push
aam
sbb
sub
xor
adcl
and
ret
push
or
lahf
sbb
pop
jl
sub
jo
push
fisttpl
sbb
lds
jg
jl
bound
sub
jb,pn
hlt
inc
mov
dec
pop
jno
inc
xchg
cmp
leave
idivb
lea
movsb
mov
fwait
sbb
jno
imul
and
dec
pop
xor
push
push
and
and
mov
repnz
mov
rorb
insb
fstp
xchg
xchg
pop
lret
or
movups
shlb
rorl
mov
or
push
inc
cmpsl
lret
ss
sbbb
data16
sarl
sbb
js
pop
pop
xchg
add
mov
enter
sub
nop
outsb
cmp
cmpsb
stc
add
dec
sbb
outsl
xchg
push
aad
test
test
push
pop
mov
ficoms
js
rol
cmpsl
inc
or
out
pop
dec
push
inc
push
add
dec
xor
subb
loop
mov
test
push
lds
sbb
loopne
xchg
testb
inc
cmc
inc
sub
add
push
out
dec
cmp
scas
rcrl
out
shr
cwtl
sub
int3
pushf
pop
lock
pop
or
xor
pop
add
push
sub
inc
inc
mov
jns
shrl
dec
imul
fisubrl
cmp
iret
inc
fdivl
shr
dec
outsb
sarb
out
add
mov
inc
adc
out
xchg
fistps
mov
lahf
data16
hlt
and
popf
lret
fwait
and
ret
scas
inc
pop
fdivl
fcomp
add
icebp
daa
popa
jecxz
pop
popf
fnstcw
mov
imul
orl
test
dec
test
push
ficoml
in
and
or
adc
mov
pusha
mov
cmp
icebp
lods
dec
movsb
rcrl
adcb
mov
adc
cmpsb
jbe
shll
mov
outsb
mov
lcall
stc
adc
pop
lds
icebp
push
xor
enter
test
mov
mov
cld
push
test
xor
rorl
mov
ret
loope
orl
loope
mov
call
adc
ja
in
cmp
sbb
aaa
push
mov
shlb
push
in
ret
sbb
pop
sti
outsb
mov
sbb
mov
pop
sub
call
loope
xlat
jg
push
inc
pop
pop
inc
aam
sub
lcall
lock
and
sbb
mov
arpl
add
movsb
stos
inc
push
cmp
dec
mov
lret
xor
test
mov
pop
cltd
hlt
mov
mov
fisubrl
clc
daa
add
shlb
inc
fmuls
sbb
outsb
jmp
and
pop
or
stos
mov
mov
fwait
std
push
lcall
icebp
lret
fdivs
push
repz
inc
stc
sub
push
cmpsl
out
jl
int3
lock
jb
imul
xchg
lock
outsb
cmp
lea
fucomip
or
adc
std
daa
in
aas
dec
xlat
test
push
arpl
test
mov
stos
sti
add
jnp,pn
sub
mov
loop
stos
mov
stc
cli
test
mov
ret
mov
cmp
adc
lcall
js
out
imul
sbb
mov
pop
lcall
outsb
jge
pop
mov
das
lods
call
pop
std
testb
test
outsl
xchg
inc
clc
cmp
loope
xchg
pushf
ss
int
pushf
lds
cmc
and
sub
fs
pushf
cmp
pop
mov
cmp
outsb
imul
test
mov
pop
shlb
dec
mov
and
xlat
jg
nop
mov
rcl
test
lods
add
imul
repnz
xchg
cmp
add
xor
inc
cmp
nop
pop
outsb
out
and
pop
loop
sub
rorl
lret
out
popa
in
add
cltd
call
negl
repnz
jb
xchg
fyl2xp1
inc
jo
out
repnz
in
int3
jmp
or
call
dec
fs
imul
imulb
jne
jmp
in
and
fs
mov
inc
sbb
adc
xor
dec
iret
jge
in
jbe
mov
lods
inc
scas
ffreep
rcl
mov
lret
pop
xor
jo
xchg
adc
xor
xchg
cmp
adc
rcr
add
das
jle
repz
fwait
pusha
je
dec
jg
mov
jg
loope
push
mov
dec
notb
dec
and
or
js
jo
stos
fidivrl
or
sub
pop
clc
jno
pushf
inc
dec
jb
pop
movsb
inc
fisubrl
push
pop
jo
divl
inc
insl
rcll
adc
jne
jl
cld
mov
das
lods
arpl
jnp
xor
scas
inc
dec
out
add
xchg
sbb
add
rorb
mov
fs
insb
fmuls
add
lods
data16
pusha
xchg
cld
iret
imul
loopne
mov
jns,pn
aas
repz
mov
pop
lcall
test
lods
mov
inc
jno
xchg
xchg
std
movsb
pop
add
sub
and
sbb
jne
fsubrs
jae
cld
imul
fmuls
shrb
jecxz
fstpl
lds
inc
mull
inc
push
movsb
addl
into
xchg
sbb
bound
xor
out
sub
cmp
xchg
inc
aaa
sbb
pop
add
int
push
das
push
push
and
xchg
lods
ja
shlb
push
sub
mov
jo
addr16
mov
dec
movlps
sub
inc
mov
jle
out
dec
push
fldl
clc
or
fisttps
and
outsb
loope
mov
mov
push
cmp
fcmove
add
xor
add
cmp
push
jmp
repz
stos
insb
adcl
pop
pop
xchg
pop
or
pop
and
mov
pop
fdivr
nop
cwtl
xchg
inc
xor
mov
leave
les
stos
repnz
stos
xchg
vunpckhps
inc
sub
inc
add
inc
inc
rclb
stos
pop
cmpl
mov
dec
mov
mov
and
clc
outsb
sub
sub
push
daa
into
addr16
movsb
mov
stos
push
scas
pop
repz
mov
test
clc
testl
push
gs
lret
test
ret
cmp
call
xor
inc
test
inc
xchg
xor
dec
in
dec
inc
dec
dec
clc
mov
insl
mov
sahf
aad
lahf
pop
add
lock
jbe
cmpsl
cmp
div
push
ror
adc
ljmp
add
arpl
pop
jae,pt
push
push
mov
sbb
call
hlt
jns
mov
xor
adc
andb
xchg
mov
xor
xchg
or
sti
and
jmp
clts
aaa
test
sbb
cmpsl
cwtl
hlt
gs
mov
adc
push
movsl
pop
sbb
dec
jbe
call
mov
in
js
in
mov
loope
nop
xor
js
jnp
mov
insb
cmpsb
shl
loope
xchg
mov
pushf
into
addl
adc
inc
jle
mov
lahf
fmul
push
aas
sbb
iret
and
bound
pop
jg
popf
add
cs
sub
dec
js
sub
sub
mov
sub
iret
in
xchg
imul
mov
sbb
rcrl
idiv
xchg
mov
sbb
ret
outsb
pop
adc
mov
insb
test
sub
and
ficoms
cmpsb
fstl
or
cmp
jecxz
dec
cli
in
fidivs
std
in
jle
xchg
sahf
seto
mov
loopne
mov
lea
lea
lock
cmp
fiadds
lea
in
xchg
repnz
xchg
in
xchg
jnp
mov
xchg
push
test
imul
sahf
push
aaa
inc
adcb
in
xor
mov
inc
add
orb
inc
xchg
xlat
out
lret
rcll
and
and
out
ljmp
jo
mov
sahf
push
fdivs
push
movsl
stc
or
inc
dec
pop
mov
and
test
subl
mov
xor
jns
dec
fmul
inc
notl
aas
subb
and
xchg
test
sbb
imul
or
sbb
ss
leave
cmp
int
add
or
insb
push
pop
les
cmp
cmp
fwait
adc
nop
inc
loope
sbb
xchg
daa
mov
pop
popa
push
test
sahf
pop
stos
push
mov
fwait
adcl
mov
arpl
pop
sahf
dec
xchg
ret
aad
jbe
out
jp
sub
out
cmc
sub
cs
cmp
and
jae
jne
jp
aaa
nop
test
xor
cltd
call
dec
mov
cmpsl
ror
jb
mov
ljmp
add
out
rcrb
mov
pop
pop
int3
or
inc
das
or
adc
mov
jno
icebp
cwtl
add
and
inc
sahf
outsl
lret
push
mov
cmpsb
cld
cmp
or
arpl
cmpsl
in
pop
push
gs
stos
sti
jb
fprem1
gs
repz
dec
sbb
imul
push
rcll
pop
movsb
sub
pop
leave
repz
lds
lret
inc
das
dec
mov
jb
pushf
sub
adc
aaa
iret
pop
mov
stos
in
fimuls
mov
add
cmp
jmp
add
scas
scas
out
mov
aaa
push
pop
pop
mov
inc
enter
adc
push
or
out
jb
jns
fadd
mov
mov
and
pop
ror
mov
dec
sbb
lea
lods
int
or
xchg
ja
out
adc
fimuls
test
mov
mov
aaa
or
lret
mov
or
lods
int3
shlb
lods
cmp
mov
cmp
dec
cmp
or
mov
insl
dec
push
pop
xchg
adc
repnz
push
aam
xchg
jnp
jne
out
aad
ja
cmp
enter
sbb
jmp
sbb
bound
jno
sub
dec
cmp
pop
ja
and
or
mov
pop
mov
incl
lcall
dec
movsl
lret
fld
stc
mov
or
cltd
mov
cmp
and
mov
pusha
mov
add
das
mov
pop
or
outsl
repz
mov
fnstenv
adc
out
xchg
cmp
add
mov
xchg
test
cli
push
gs
ds
xchg
enter
dec
fdiv
subl
test
repnz
add
sbb
inc
push
xlat
sbb
adc
cli
and
enter
push
jne
mov
mov
xchg
xchg
mov
idivl
push
lods
ret
bound
lahf
xor
cmp
aas
jno
inc
ss
in
pop
and
sti
push
xchg
dec
xor
dec
stos
enter
and
pop
enter
mov
and
out
pop
xchg
aam
std
sub
scas
mov
cmp
std
or
jmp
in
mov
inc
out
push
cld
lock
xor
fsubrl
and
adc
loope
scas
dec
jne
mov
add
mov
mov
xchg
les
in
sbb
call
sti
movsl
int3
loopne
icebp
jnp
outsb
lock
mov
stos
ja
and
pusha
jno
jns
xor
lret
cmc
inc
xor
inc
ret
xor
mov
repz
adc
add
fcompl
into
adc
push
into
inc
xchg
fs
mov
xlat
mov
cmp
lea
cmpb
jae
loopne
sbb
scas
xchg
idiv
mov
loopne
arpl
in
sbb
mov
jo
inc
cmp
adc
ljmp
mov
test
cltd
push
xor
and
ds
stos
lds
pop
sub
jecxz
adcb
jecxz
dec
mov
mov
and
movsb
leave
add
xchg
out
shl
sbb
push
sub
inc
jp
jl
inc
icebp
mov
jns
add
adc
in
jle
loopne
xchg
loope
push
sarb
adc
xchg
sub
jno
mov
sub
xchg
fdivrs
hlt
sub
xchg
xor
lcall
dec
push
pop
pop
into
xchg
xorl
push
aad
mov
movsb
lock
lock
data16
xchg
add
inc
sub
out
jbe
cmp
mov
pop
jo
hlt
lock
and
jge
sbb
inc
add
ror
out
adc
sub
sbb
sbb
push
push
jbe
fistps
dec
ret
pop
or
and
jns
sahf
clc
shr
imul
out
mov
pop
outsb
cmp
pop
jp
js
add
sbb
cmpsb
add
jp
cld
adc
rorb
in
or
repnz
xchg
dec
xchg
xchg
repnz
subb
in
insl
push
jmp
jno
and
dec
ret
out
jge
xchg
mov
mov
test
aam
mov
sbb
rcrb
mov
das
mov
gs
loop
adc
jmp
pop
adc
aas
cmp
inc
dec
into
pushf
pop
mov
arpl
adc
sbb
fbstp
mov
adc
movsb
adc
ja
adc
sub
fadd
aam
pop
push
push
movsl
adc
cmp
push
and
fstps
mov
loop
into
fimuls
bound
pop
jnp
insb
dec
aas
pop
xor
dec
rorb
adc
jmp
pushf
int
adc
loope
stos
lods
hlt
mov
sbb
jae
movsl
cmc
cs
or
enter
movsb
aam
mov
fcoml
test
fisttps
popa
dec
adc
and
clc
das
divb
and
icebp
das
das
cmc
push
aas
scas
jl
jae
mulb
fnsave
out
out
lcall
cltd
loope
add
jae
and
push
fisubs
bound
dec
sbb
mov
push
mov
fldl
addr16
sub
cmpsl
cltd
mov
cli
push
fxch
push
fsts
imul
pop
add
dec
mov
js
pop
sbb
mov
push
pop
add
push
mov
push
push
imul
mov
mov
mull
fsubrp
xor
mov
fucomi
scas
inc
and
outsb
adc
pop
inc
inc
fs
adc
jmp
orb
push
ja
jge
scas
adc
movsl
sahf
jge
mov
shll
xchg
fistpl
ds
mov
inc
pushf
cmp
in
int
adc
mov
gs
lahf
cli
repnz
inc
pop
mov
pop
ror
dec
inc
sub
sbb
xchg
mov
lock
mov
stos
fstpl
rcll
sbb
push
imul
inc
ret
sbb
or
test
lret
pop
jb
mov
pop
xchg
shll
out
scas
push
dec
adc
add
adc
icebp
push
es
jns
sbb
inc
inc
icebp
rclb
sbb
int
pop
jbe
adc
fcoml
pop
inc
push
mov
shrl
mov
popa
call
out
lcall
fnstcw
icebp
bnd
out
or
and
push
cmp
stc
sbb
jno
lret
test
lret
xchg
fisubrs
jae
dec
pusha
shll
or
add
xlat
fists
fisubrs
push
mov
inc
dec
into
mov
dec
std
and
jl
xor
mov
jae
in
mov
fwait
or
jnp
movl
add
repnz
sbb
cli
out
std
cwtl
inc
loop
lods
test
jo
jmp
loop
inc
push
mov
shl
fnstcw
sub
sub
mov
fstps
mull
ljmp
test
in
loopne
mov
or
xchg
lock
mov
and
int
xor
lret
inc
test
out
pop
insl
push
xchg
jp
mov
ficoms
dec
cltd
fiaddl
es
mulb
pop
lea
out
les
shrb
repz
mov
add
mov
mov
mov
daa
push
ret
testl
or
push
cmp
enter
jecxz
psubw
inc
iret
xchg
adc
insl
and
sub
mov
xor
int3
addr16
imul
out
scas
sbb
cmpsl
inc
xchg
incl
add
add
xchg
mov
decl
adc
mov
ja
mov
shl
cmp
jae
mov
sub
xor
mov
and
repnz
outsl
or
xchg
xor
lods
ljmp
in
dec
fisubrs
repz
xor
mov
sbb
mov
cmp
dec
xor
int3
add
inc
and
mov
cmpsb
adc
mov
test
loope
jecxz
push
sbb
pop
adc
mov
sub
jne
xchg
ficoms
lahf
mov
iret
add
xchg
pop
pop
dec
mov
pop
sub
add
lahf
pop
pushf
push
push
in
or
push
jp
xchg
cmp
icebp
scas
in
mov
mov
inc
sar
loop
sbbb
mov
in
add
clc
fs
testb
inc
rolb
pop
popf
sbb
das
xchg
fidivl
xor
pop
aaa
jno
or
add
push
dec
adc
push
pop
pop
add
mov
cmpsb
call
cmp
push
pop
xor
cwtl
hlt
shll
dec
mov
add
jecxz
std
insl
jp,pn
mov
lret
loope
cmp
add
add
sarb
sbb
packssdw
jne
inc
dec
or
test
and
push
xlat
test
push
xchg
cmc
cmp
jo
cmc
push
cmpsl
in
dec
mov
arpl
and
scas
mov
imul
dec
sbb
sahf
mov
fldenv
mov
cmp
push
int
dec
and
loope
ss
leave
sub
inc
jbe
cmpsb
in
push
dec
pop
add
sbb
insl
xlat
nop
in
lret
test
rorl
mov
jae
insb
mov
sub
mov
push
or
test
mov
decl
ja
enter
push
jb
mov
out
mov
pushf
rcrb
sahf
xchg
inc
aaa
inc
adc
nop
mov
cmpsl
sub
add
aas
imul
jl
xchg
xor
push
insl
xor
mov
dec
bound
mov
and
and
movl
adc
xchg
cmp
adc
ficompl
loopne
xor
cmpsb
dec
sbb
pushf
iret
sbb
insb
mov
lock
dec
fsts
in
das
mov
push
push
mov
ljmp
adc
adc
pop
daa
pop
lcall
lods
test
ljmp
push
and
mov
popa
test
xor
pop
mov
fstl
fisubrl
push
dec
out
mov
add
dec
rcr
cmp
out
jg
mov
mov
mov
inc
mov
pop
loop
arpl
rorb
test
sub
pop
pop
in
adc
jbe
pop
out
inc
test
in
pop
mov
ret
mov
jge
into
lods
inc
push
pop
hlt
mov
pop
push
push
pop
jle
adc
jnp
inc
pop
jo
aaa
out
xor
pavgb
jnp
xor
inc
mov
push
add
jecxz
mov
jne
dec
imul
xor
in
or
enter
fsubl
inc
pop
loop
roll
das
jl
leave
jg
leave
mov
push
repz
mov
in
sbb
outsl
xor
add
fstpl
pop
and
push
pop
cmpsl
es
ljmp
out
lods
mov
mov
add
in
rep
cwtl
ss
aaa
je
sbb
cmp
fwait
lock
mov
dec
cmp
mov
push
nop
mov
adc
je
push
mov
dec
mov
dec
lret
ror
fldl
xchg
push
popa
mov
xlat
sbb
cmpsl
xchg
pop
cmp
loope
mov
sbb
sbb
adc
shrl
jne
push
int
sti
test
mov
rcr
in
push
int
adc
push
push
add
sti
lock
inc
or
sbb
in
adc
cs
bound
mov
push
fimuls
loopne
xchg
cmp
pop
mov
insb
ds
into
pop
pop
jmp
and
leave
mov
jb
dec
push
out
xor
xchg
pop
mov
dec
mov
cmp
mov
mov
hlt
dec
bound
mov
xorl
pop
sbb
xor
les
push
pop
mov
loope
gs
lret
xchg
xchg
cld
mov
jecxz
xchg
jp
icebp
sahf
lods
inc
loop
pop
aas
adc
jns
sbb
xchg
scas
in
aas
imul
icebp
mov
add
jle
aad
push
sub
sub
cmp
add
push
iret
ds
cmc
popf
fwait
inc
mov
daa
pop
pop
cmp
push
lret
jns
int
lret
mov
mov
push
cmp
aad
jmp
push
ret
outsl
repz
fmuls
shrl
and
out
lock
stos
adc
in
es
jnp
mov
pop
and
inc
sub
sbb
jl
loope
scas
divl
popa
insl
ss
sub
ret
or
cmp
dec
pop
mov
arpl
xor
sahf
stc
rorb
pop
movsb
mov
lock
xor
push
outsl
xor
add
ljmp
arpl
sahf
paddw
jb
xor
xchg
dec
fimull
xor
or
adcb
pushf
xchg
push
cmp
stc
mov
adc
and
repz
push
out
mov
mov
pop
jp
mov
push
pop
aaa
mov
imul
sti
dec
pushf
mov
mov
je
fcmovnb
out
stc
sbb
mov
and
aaa
jge
orl
imul
push
scas
fninit
clc
jmp
jp
outsl
sub
xor
inc
lds
pop
pop
dec
dec
std
add
sub
in
dec
adc
cmpsl
int3
add
test
pop
cmpl
jl
daa
call
xchg
sub
js
fistps
cmc
mov
sub
mov
pusha
mov
push
lock
inc
icebp
cmp
sbb
dec
xchg
addb
js
add
xor
js
mov
or
cmpsb
mov
ss
mov
dec
sub
clc
mov
sbb
sbb
aaa
inc
pop
mov
leave
ljmp
inc
cmpsl
jo
addr16
inc
push
scas
shrl
lahf
aas
cmpsb
jecxz
and
insl
loopne
test
push
insb
in
scas
fs
xchg
stc
sbb
dec
sub
loop
mov
aaa
inc
test
jae
mov
jecxz
pop
mov
dec
lret
mov
bound
or
std
pop
adc
jmp
stos
cmpsb
jmp
jb
stos
mov
jecxz
mov
pushf
mov
fwait
int3
ljmp
nop
mov
in
push
out
push
cmp
loope
test
jno
cmpsl
int
jp
mov
adc
and
lds
leave
loop
fisttpll
jg
push
jne
adc
fldl
inc
aaa
js
jb
andl
insb
sti
xchg
mov
je
test
lds
inc
cmp
cmp
sti
jp
push
das
and
xor
je
insl
mov
and
cmpsb
jnp
loop
mov
test
and
popf
and
movsb
and
cwtl
popf
xor
negb
repnz
push
adc
sub
fistps
cwtl
cmp
sub
sub
cld
pop
dec
test
xchg
push
and
jbe
push
jns
sub
repnz
dec
and
shrl
cmc
mov
pop
jl
fistl
stc
lret
sbb
push
xor
dec
shrb
jns
lds
fldcw
out
mov
in
inc
ss
and
sbb
insl
mov
add
push
sarl
movntq
pop
rcrl
jmp
lret
or
popa
idiv
fadds
pop
sbb
xchg
clc
adc
subb
mov
out
push
addr16
mov
mov
mov
ja
les
in
mov
outsb
test
mov
mov
scas
push
mov
inc
lahf
sub
cmpl
sub
dec
divb
cmp
jne
movsb
sub
mov
daa
hlt
sub
imul
ret
or
mov
hlt
pop
jno
xchg
jecxz
cld
xlat
xchg
dec
movsl
pop
subl
loop
push
mov
es
addb
das
dec
fimull
adc
mov
lods
dec
movsb
fstl
push
mov
std
mov
mov
cmpsb
cltd
lods
and
mov
out
add
stos
or
addr16
mov
dec
cmp
cld
ror
scas
lds
incb
fildl
incl
inc
pop
shll
xor
inc
pop
bound
outsb
imul
xchg
lcall
cmp
pop
out
jne
jno
sub
stos
cmp
fiaddl
sub
and
adc
push
xlat
imul
sub
xor
or
fstps
dec
lods
repnz
out
and
lds
lea
insl
add
sbb
cmp
pop
cli
cli
aas
shr
out
inc
fldcw
lods
int3
add
out
jae
roll
jge
mov
insl
ret
sub
notb
insb
mov
sbb
out
mov
xor
in
lret
push
jbe
jns
sbb
xor
andl
mov
and
pop
adcl
lea
lcall
out
movsl
sub
mov
inc
cmp
jno
jae
jmp
sub
mov
and
mov
pop
sub
outsl
movsl
mov
jecxz
cld
xchg
ja
adc
sub
cmp
xor
push
jnp
pop
flds
jl
lret
jge
dec
lea
ret
repnz
out
sbb
les
jns
insb
jmp
test
stos
outsb
pop
xchg
rcrl
and
add
fcompl
out
imul
dec
or
mov
xchg
dec
sbb
adc
mov
jns
push
mov
lea
pop
aam
popa
mov
sbb
jg
lods
jo
int3
das
pop
mov
leave
lds
rcr
insl
mov
test
add
loope
orb
push
iret
faddl
addb
pusha
hlt
aas
cmpl
add
jge
add
mov
lock
cltd
scas
test
sub
xchg
in
cwtl
stos
ret
and
add
fildl
mov
inc
cmp
add
lods
mull
jne
ja
jl
test
mov
into
adc
add
in
inc
push
les
mov
shlb
dec
xchg
fdivrl
or
hlt
adc
xchg
cmp
sub
std
flds
cwtl
and
leave
pop
imul
jmp
mov
repnz
lea
test
mov
call
and
lock
lahf
pop
pop
push
jmp
loopne
pop
inc
repnz
xchg
dec
push
inc
fcmove
jl
ss
push
hlt
negl
imull
lret
popa
lds
mov
stc
lcall
cmc
pop
in
js
dec
icebp
sahf
mov
jp
gs
mov
sub
sub
and
cmp
js
data16
cmp
sub
sub
ja
fwait
adc
test
push
push
mov
iret
push
push
push
arpl
cltd
fldl2e
push
cmpsb
add
lods
daa
loope
in
rorl
in
push
ja
into
fidivrs
sbb
shll
fcoml
lret
xlat
jle
xchg
div
ret
lret
or
mov
or
test
jno
in
js
xchg
iret
xor
test
push
pushf
inc
lods
aaa
push
adc
jmp
push
cltd
cmpsb
adc
adc
repz
std
sbb
mov
xorb
or
cltd
mov
inc
mov
adc
in
cmp
jno
mov
mov
popa
bound
pop
mov
adc
lods
nop
mov
and
and
ss
push
ja
popf
int3
inc
scas
xchg
mov
ds
jmp
rolb
xchg
fadd
jno
push
sar
call
mov
pop
or
mov
add
std
and
fists
mov
std
sbb
sub
or
sub
mov
fstp
enter
pop
mov
lea
and
sub
or
pop
es
test
jbe
sbb
lods
pop
sbb
add
sbb
mov
es
push
out
jmp
jge
xchg
pop
or
cltd
and
adc
adc
fwait
inc
inc
dec
inc
push
sar
and
jle
push
push
sub
pop
xchg
adc
out
mov
enter
push
shll
dec
js
repnz
mov
clc
fildl
mov
jg
jmp
or
inc
sub
ret
pop
enter
or
mov
jnp
sub
imul
enter
add
psubb
push
mov
xchg
xchg
dec
outsl
adc
sti
ja
or
fcmovnb
xor
dec
jb
mov
call
cmpsl
lcall
repnz
into
ret
stos
sbb
insb
mov
mov
dec
xor
adc
adc
xor
hlt
dec
cmp
xor
adc
mov
outsl
or
jnp
pop
icebp
pop
lds
in
adc
hlt
mov
daa
lcall
loop
push
testl
push
out
scas
or
jmp
xlat
aas
mov
mov
faddl
dec
lret
sbb
fisubrl
in
cltd
adc
xor
rcll
lods
out
movsl
lock
fs
push
cmp
adc
repz
push
add
out
cmp
jge
dec
mov
in
and
arpl
jo
dec
nop
add
ficoms
sbb
cmp
xor
jns
cmp
les
xor
in
stos
lods
sub
xchg
xor
or
add
out
clc
push
ds
popa
mov
or
mov
ret
mov
out
xchg
xchg
cmp
pop
aas
stos
mov
in
adc
rclb
inc
add
cmc
pop
add
dec
adc
push
xchg
out
jle
mov
cmpsb
inc
test
mov
sbb
je
fs
mov
xor
fildl
addb
cmp
inc
cmpsb
xor
push
add
jle
push
mov
repnz
mov
xor
inc
imul
int
call
fisubrs
outsb
xchg
and
ds
jne
xchg
pop
gs
adc
cmp
or
jno
dec
leave
and
fcoml
popa
shrl
imul
frstor
rorb
mov
and
mov
cmc
mov
ljmp
sub
adc
cmp
mov
mov
cltd
xor
xor
repz
xchg
and
daa
sub
or
xor
add
and
std
xchg
aaa
jb
cmpsb
mov
mov
add
jnp
mov
ret
cmp
imul
add
add
lret
shll
adc
das
dec
mov
cmp
dec
sub
popf
fldt
jl
pop
imul
in
sub
adcl
inc
iret
fdivrs
add
int
or
cld
out
dec
jbe
cmpsl
adc
xchg
push
pop
pop
xor
xchg
inc
push
lret
ljmp
rol
dec
xchg
push
das
cmp
mov
pop
push
mov
in
xchg
add
pop
jge
xchg
leave
inc
fistpll
ds
loope
sbb
jle
mov
clc
lock
fs
jg
jecxz
sbb
push
xor
sbb
cwtl
and
sbb
gs
int3
outsl
adc
sahf
push
loope
mov
test
movsb
sub
adc
mov
cmp
aad
xchg
loopne
lds
scas
lods
test
popf
aad
aad
xor
mov
sbb
jl
cmc
cmc
imul
cld
or
ret
inc
inc
cs
ja
xor
pop
push
pop
outsl
lea
loopne
dec
xchg
pushf
cmp
xchg
stc
push
jl
cmp
push
imul
sub
xor
mov
jl
pop
xchg
push
imul
sbb
test
dec
lea
pop
jo
out
lea
xor
das
xchg
xchg
sub
fistpll
mov
int3
xor
mov
dec
xor
cltd
jns
loopne
inc
outsb
cmp
pop
aas
cmp
sub
arpl
pusha
mov
nop
dec
repz
out
xchg
mov
div
jns
aad
fidivs
out
in
jle
push
into
and
push
ffreep
lret
mov
sti
mulb
cli
testb
rcll
cmp
jl
aaa
ds
push
xchg
cmp
xchg
movsb
repz
mov
int
xchg
push
mov
mov
jnp
xor
sbb
fcompl
push
push
icebp
repnz
lea
xchg
js
mov
sbb
das
jg
and
mov
mov
dec
mov
mov
inc
scas
mov
mov
adc
xchg
or
stc
push
ss
push
mov
xchg
bound
sbb
sarb
mov
popf
push
pop
jg
lcall
rorb
add
and
mov
dec
mov
cld
add
xor
sbb
dec
imul
divb
je
xchg
mov
mov
clc
not
sbb
push
lock
add
les
mov
and
aas
push
push
and
dec
pop
hlt
sbb
adc
addr16
mov
mov
decb
pop
pusha
mov
call
aaa
enter
les
push
lods
sbb
ljmp
and
cwtl
add
add
rclb
ss
sub
rclb
movsb
xchg
ljmp
inc
outsl
mov
js
inc
ss
mov
stos
or
xor
movb
lret
adc
into
pushl
lods
std
pusha
and
mov
jmp
pop
mov
push
test
xor
outsl
sub
inc
push
mov
out
sub
xor
push
and
adc
das
aaa
sarb
jnp
pop
leave
pop
mov
dec
or
add
imul
int3
clc
dec
and
adc
pop
and
xchg
add
lds
push
orl
xor
ja
add
mov
out
or
movsb
mov
jle
lods
clc
xchg
xchg
inc
popl
mov
push
sbb
dec
repnz
and
cmc
sub
and
jo
add
and
jne
mov
inc
or
stos
xlat
icebp
roll
add
add
sub
or
inc
aaa
jns
xchg
sbb
aad
ret
add
xchg
dec
in
mov
ret
pusha
pushf
scas
in
cmpsl
sbb
fwait
mov
inc
mov
jne
lret
mov
ret
and
sahf
add
test
jecxz
xchg
and
or
add
adc
push
or
repz
andb
lret
jnp
xchg
sub
jno
rcrb
in
lea
xlat
into
sub
sti
jmp
lods
std
push
insb
jo
js
fs
inc
fisttps
roll
outsl
sub
and
test
popa
push
push
in
xchg
lods
shrb
rorl
xlat
fists
mov
adc
jmp
je
pop
out
adc
loop
and
movl
ss
sbb
xor
push
sbb
inc
xor
xchg
rcl
mov
cmpb
inc
iret
insb
sti
mov
shll
dec
js
sub
rcl
lods
outsb
or
pop
into
push
out
scas
scas
iret
aaa
add
movsl
adc
lcall
mov
test
inc
inc
xor
mov
mov
out
shr
jle
adc
cmp
xor
add
mov
jl
daa
pop
jo
xchg
sub
mov
mov
in
jle
mov
mov
rol
jbe
cmp
insl
aaa
xchg
rcr
xchg
ds
jb
outsb
cmp
aad
xchg
outsl
cmp
mov
repnz
xchg
lock
xchg
bound
and
mov
and
mov
testb
shl
clc
iret
fsubrl
push
xor
sbb
das
insb
int3
and
cmpsl
inc
xchg
mov
jns
add
fldt
mov
ret
inc
fs
cwtl
test
inc
push
aaa
pop
adc
loop
push
fisubrs
out
xchg
add
xchg
push
dec
aam
cmp
clc
mov
mov
subl
xchg
or
sub
and
push
mov
cmpsb
je
mov
loope
lock
out
cmp
adc
pop
dec
nop
aad
cmp
stos
int3
rcrb
or
jmp
mov
xlat
add
outsl
push
call
cwtl
add
stos
xchg
aam
xor
sbb
lds
sub
pop
inc
into
fcoms
dec
test
insb
adc
nop
push
fs
popl
sbb
xor
mov
xor
dec
push
or
mov
idiv
out
pop
cli
mov
push
push
push
mov
stos
mov
gs
and
pop
cmp
cwtl
rcrb
cltd
pop
wrmsr
and
fildll
sub
insb
push
push
outsb
sarl
testl
sbb
out
and
int3
jmp
add
mov
fists
jg
mov
sub
xor
mov
push
or
imul
es
add
shll
jl
aas
mov
js
test
leave
dec
adcl
jb
sarb
in
outsb
mov
cmp
fildll
or
dec
negl
popa
hlt
mov
scas
cmp
ja
dec
adc
decb
mov
mov
adc
fiaddl
mov
and
mov
push
cmp
xchg
mov
push
mov
outsb
mov
sub
mov
int
pop
ss
sub
jns
push
out
sahf
pop
or
inc
cli
mov
jl
cmp
sti
pusha
pop
pusha
xchg
in
adcl
imul
fidivrs
lock
adc
and
popf
cmp
push
daa
testl
dec
mov
fmulp
sbb
inc
fistl
adc
mov
insb
pushl
push
mov
push
xor
xchg
rcr
dec
repz
mov
fidivs
mov
loop
jge
sub
iret
in
or
inc
sub
repz
incl
je
or
int3
adc
movsl
shl
int3
fidivs
push
sub
or
and
movsb
jmp
insl
add
dec
fidivrl
lods
leave
dec
add
add
daa
imul
cmpsb
fwait
xchg
adc
mov
fwait
xlat
dec
mov
add
movsl
mov
push
icebp
pop
cld
adc
dec
cld
call
cs
lds
mov
push
lock
popa
mov
push
scas
aas
sub
daa
cmpsb
and
cwtl
lea
push
inc
fmuls
cs
ja
lret
xor
shlb
ret
pushf
mov
add
loop
mov
inc
xchg
add
movsb
push
cmpsb
into
mov
dec
popf
ss
add
fwait
insl
aad
or
sub
mov
popa
jne
fsubl
jg
fstl
xchg
sub
mov
sahf
dec
mov
cmp
ja
stc
or
mov
mov
lcall
dec
sbb
gs
cwtl
stos
xlat
push
push
mov
pop
mov
dec
shr
push
xor
sub
and
int3
pusha
inc
pushf
inc
hlt
insl
or
jne
sar
fimuls
stos
jmp
int
jl
push
mov
test
push
jb
pop
loopne
and
mov
mov
cs
dec
out
ror
cmp
ss
in
push
adc
test
int3
mov
pop
xor
out
out
jo
in
cli
aad
pop
das
dec
addl
dec
mov
test
jmp
or
pop
fiaddl
push
mov
idivl
icebp
stos
addr16
xchg
outsl
mov
add
mov
jne
rolb
fnstcw
and
jne
sbb
gs
aad
adc
sbb
cmpsb
test
stc
mov
adc
aad
bound
test
fbld
rclb
shl
in
jecxz
cltd
and
jecxz
or
shll
cmp
push
sbb
fwait
out
and
add
int3
sbb
ret
loop
and
and
mov
pop
adc
fstpl
push
fs
pop
fbld
cld
in
push
cmpsl
lods
in
mov
fistpl
dec
jnp
add
lds
and
int3
shrb
xchg
add
into
cli
adc
pop
jecxz
jg
rcrb
nop
sub
inc
mov
mov
push
push
pop
das
pop
outsb
mov
in
cmp
js
aad
xchg
stos
into
mov
cld
and
or
inc
xlat
inc
xchg
sbb
shll
pusha
cmp
pop
sbb
add
xchg
dec
loopne
or
or
cmpsl
adc
inc
out
mov
outsl
shlb
xchg
loopne
jae
sbb
ja
mov
test
aam
mov
adc
cmpl
push
out
cmp
les
dec
repz
mov
cmp
stos
jg
repz
repnz
and
sub
je
jl
mov
test
push
fisttpl
addr16
sub
add
xor
out
lods
xor
mov
adc
mov
fstl
test
lret
mov
das
inc
dec
bound
pop
dec
cmpsl
jne
aaa
out
popa
jnp
xor
mov
into
jns
fildll
jg
movsb
mov
add
nop
aam
add
cmp
xchg
mov
mov
jp
sbb
cmp
mov
gs
or
stc
pop
xlat
xor
push
xchg
xor
add
sbbl
jmp
ja
fstps
lods
fcoms
sbb
mov
out
sti
mov
or
xchg
icebp
addb
scas
sarl
in
add
popf
fistps
cli
push
or
mov
outsb
adc
or
pop
pop
push
cwtl
lea
mov
imul
inc
ss
mov
mov
add
sahf
mov
ficoml
dec
jmp
jecxz
outsb
cmp
js
mov
cli
xchg
mov
jecxz
popf
cmp
inc
lock
push
mov
mov
test
lods
dec
or
out
sbb
jnp
shlb
into
sbb
xchg
mov
xchg
inc
out
pop
cmp
nop
cmp
inc
rolb
sub
scas
rorl
ret
shll
ja
add
mov
dec
and
mov
pop
ret
xor
mov
clc
stc
push
jle
adc
add
dec
jle
sti
adc
xchg
icebp
leave
jnp
jne
jb
test
popf
mov
andl
je
mov
adc
xchg
psraw
adc
ret
xor
sbb
enter
and
mov
and
lret
cmp
dec
mov
adc
cli
stos
testb
int
jno
lret
pop
ds
iret
xor
push
sub
cmc
jb
sbb
addr16
xchg
mov
lahf
dec
cli
call
push
pop
std
and
aad
call
in
test
movsb
mov
xchg
movsb
daa
adc
clc
addr16
or
out
jmp
repnz
rclb
insl
dec
lret
push
daa
mov
xor
xchg
xchg
and
and
aas
jnp
inc
push
push
sahf
aam
cli
sbb
mov
pop
sbbl
add
xor
mov
shr
lods
std
cmpsb
or
imul
mov
fisubl
mov
push
divl
out
jbe
je
lahf
or
push
jl
nop
rcl
and
scas
mov
out
xlat
xchg
inc
je
or
fsubrl
shll
scas
add
jae
and
outsb
mov
addr16
xor
subb
sarb
or
pusha
out
adc
push
test
shrl
mov
mov
inc
repz
dec
cld
shrb
cmp
push
push
cmp
jo
subl
mov
iret
or
fadds
adc
jb
and
call
fidivrl
pushfw
adc
pand
jecxz
call
and
sti
clc
cmp
andl
filds
mov
mov
or
dec
in
loopne
jns
add
cmp
dec
mov
dec
push
movsl
ficoms
cmp
leave
and
inc
dec
jle
sbb
in
scas
sti
dec
repnz
ja
dec
dec
or
xchg
and
int
push
sub
loope
sbb
loope
inc
imul
fiadds
out
test
stos
cld
jae
or
adc
movl
or
stc
mov
out
sub
jbe
sub
pop
jb
pop
mov
clc
repnz
imul
or
xor
scas
dec
das
push
out
push
sbb
pushl
dec
mov
sbb
mov
mov
in
mov
sub
in
cmc
imul
jmp
cmp
js,pn
inc
jb
daa
out
mov
add
mov
pop
jmp
or
das
enter
fwait
dec
mull
roll
mov
test
iret
daa
test
aaa
pop
shlb
les
dec
rcrb
dec
clc
push
ds
scas
add
insl
and
or
mov
xor
mov
nop
inc
add
mov
shlb
scas
pusha
pop
inc
in
pop
bound
bound
sub
mov
cmpsb
push
rolb
out
push
mov
ficoml
push
pop
add
xchg
xor
jb
hlt
add
pop
push
cli
sti
sub
xor
pop
in
mov
out
mov
fisubrs
jecxz
cltd
fs
hlt
std
loop
shrb
lods
cmp
out
lock
add
es
sbb
add
test
cmp
pushf
cmp
notl
repz
cmpsb
dec
inc
int
in
mul
push
dec
inc
lret
jns
cmp
push
sub
cmp
add
push
ret
pusha
jnp
sbb
lea
jns
or
dec
cmp
xchg
lods
stc
test
dec
popa
push
idivl
jnp
adc
push
add
cmc
cmp
jle
mov
mov
in
bound
lea
or
stos
jmp
test
div
lods
std
inc
add
dec
push
pop
and
push
notl
into
bound
notb
std
push
cmp
iret
xchg
lea
lods
stos
into
das
xlat
or
push
sbb
push
insb
jg
aam
imul
out
jmp
stc
rorl
xchg
into
mov
xor
or
dec
lret
or
insb
xchg
iret
loop
mov
inc
repnz
outsl
faddl
cltd
push
or
pushf
push
inc
out
push
xchg
sub
lock
xor
inc
jle
push
add
inc
mov
add
push
sbb
stos
push
mov
outsl
mov
push
ret
stos
fbstp
into
jno
ja
std
sub
mulb
and
int3
mov
fbld
dec
xchg
dec
mov
cmp
sub
or
repz
arpl
sbb
sub
lea
sahf
test
gs
es
mov
dec
inc
enter
retw
test
dec
clc
xlat
and
jb
add
sbb
fistpll
daa
sbb
subb
test
ret
in
ret
stc
ljmp
mov
jbe
icebp
inc
pop
nop
or
jge
les
cmp
sbb
mov
jo
xchg
inc
add
testl
ja
push
push
out
or
add
loop
insl
divb
mov
clc
fcmovnu
daa
aam
flds
scas
scas
ret
inc
inc
imul
add
sub
rorl
push
fwait
test
imul
adc
out
xchg
inc
add
call
or
divl
xor
cmp
sub
cwtl
adc
and
shlb
jmp
out
dec
lret
or
lods
ljmp
mov
cmp
test
inc
adc
push
or
es
inc
pop
inc
nop
std
les
pop
jmp
mov
jno
loope
pop
adc
jns
xchg
into
pop
adc
xchg
push
inc
or
add
repz
hlt
mov
pushf
and
mov
jo
ret
or
out
add
insl
icebp
fidivrs
rcl
int
test
and
jmp
pop
xchg
adc
jne
jmp
fnstcw
fwait
je
in
cmp
or
jp
jno
iret
mov
fs
movsl
cmp
xchg
adc
into
mov
adc
ljmp
popf
mov
cld
cmp
insl
jnp
mov
adc
mov
dec
insl
pop
mov
dec
jae
pop
fadd
push
mov
das
sub
or
pop
inc
aad
push
fidivrl
mov
imul
repnz
mov
je
jns
pop
and
dec
pushf
dec
daa
sub
xor
push
cmp
cli
sbb
or
or
mov
and
jo
sahf
lods
pop
cmp
lock
icebp
mov
xchg
and
cmp
aam
icebp
mov
ret
inc
xchg
push
and
inc
dec
or
fisttpll
outsb
stos
mov
xchg
pinsrw
repz
dec
pop
adc
daa
or
je
dec
xchg
rclb
lea
xchg
call
ja
pop
aas
sub
jnp
mov
xor
inc
jp
imul
lds
cmc
and
mov
aas
lret
aam
popf
lods
cmpsb
and
push
adc
insb
sbb
inc
pop
ds
daa
inc
push
iret
pmaxsw
clc
mov
popf
sub
jne
fisttpll
and
in
mov
pusha
mov
rcrl
out
out
je
jmp
cmp
cmp
push
or
and
imul
pop
outsl
flds
and
outsl
lret
aaa
mov
dec
mov
stos
notb
push
iret
ret
cmpsl
adc
imul
mov
movsb
std
aad
sahf
add
dec
sub
lret
incl
pop
fwait
xchg
arpl
leave
andb
pop
js
add
popa
fsts
push
or
out
and
cwtl
lahf
hlt
mov
mov
pop
xchg
fidivl
mov
mov
negb
sahf
and
push
add
aaa
jge
dec
je
dec
push
repz
in
mov
dec
lcall
shlb
orl
out
adc
xor
xchg
jg
fistps
sbb
cmpsl
adc
sarl
and
or
sub
sbb
je
mov
and
addr16
sub
sbbb
xchg
repz
sbb
mov
orl
or
mov
loop
mov
loop
adc
das
pop
mov
aaa
adc
mov
adc
push
inc
inc
or
fdivp
sbb
xor
and
ds
stc
mov
sbb
mov
stc
ret
add
mov
shr
das
std
mov
fiaddl
xchg
test
jns
add
inc
xlat
pop
cmp
sub
repnz
shll
into
shlb
out
dec
mov
aam
push
jge
shlb
sbbb
out
les
sub
clc
arpl
adc
ret
pop
sub
mov
and
jle
mov
or
inc
sub
sub
lods
daa
dec
xor
jnp
jb
sub
aas
aad
out
pop
push
lock
pop
push
fs
les
gs
push
or
cmp
inc
lretw
scas
cmp
mov
cwtl
xor
jl
mov
data16
adc
jbe
das
pop
xor
jnp
nop
xor
jno
lret
les
outsb
repz
js
cmc
out
dec
or
das
xchg
stos
pop
cmp
adc
lret
mov
je
in
xchg
fdivs
pop
mov
dec
cmp
push
inc
pop
xor
pop
xorb
mov
sub
iret
test
clc
bnd
push
jecxz
jge
inc
jns
mov
push
into
scas
ret
xor
mov
and
dec
xchg
inc
scas
ret
lcall
push
push
mov
pop
imul
cmp
ja
sbb
push
scas
xlat
mov
pop
or
mov
aas
mov
inc
sbb
fists
dec
mov
scas
dec
bound
test
enter
push
testb
scas
pop
repz
mov
cs
inc
adc
sbb
ret
mov
or
leave
movsl
fs
outsl
mov
and
les
jge
mov
bound
orl
adc
jmp
pop
data16
jge
jle
add
or
xchg
push
imul
insl
xorl
dec
dec
sbb
fistpll
add
aas
add
mov
cmpsb
clc
lock
xchg
insb
mov
in
sbb
xorb
mov
and
pop
cmc
pop
and
sub
cmp
pushf
xchg
mov
sarl
mov
xor
test
rcll
ret
xchg
mov
mov
jbe
sbb
fdivr
divb
into
in
push
dec
push
xchg
les
mov
inc
enter
loop
mov
fldt
pop
and
and
addb
mov
adc
push
push
and
mov
sub
aas
mov
jg
ret
xchg
xchg
bnd
fwait
ret
adc
xchg
add
shll
add
and
roll
jae
and
xor
and
aad
clc
shl
ret
mov
test
xchg
stos
fs
add
jmp
popa
dec
scas
test
inc
insb
stos
fcomps
push
dec
repz
mov
mov
mov
jl
xchg
push
xchg
pop
dec
add
pop
rcl
add
jno
test
decb
into
push
jle
cmp
jb
dec
test
mov
mov
out
mov
rcll
add
push
js
pop
adc
dec
stos
rclb
xlat
imul
daa
fs
in
inc
call
lds
stos
imul
push
lret
std
in
in
test
rorl
cmp
bound
aas
test
and
xchg
adc
test
lds
mov
movsb
xor
push
fwait
push
pop
cmc
dec
inc
lds
ljmpw
push
aaa
mov
roll
push
mov
je
in
shlb
mov
sub
adc
movsl
mov
scas
mov
xchg
jo
xchg
sub
mov
mov
adc
cmp
mov
or
fsubrs
fs
movsl
mov
lods
jbe
mov
pop
pop
dec
rol
cmp
push
cmp
mov
or
xchg
or
sbb
and
repnz
adc
or
es
rcr
jo
repnz
mov
into
xor
inc
or
jle
inc
push
in
mov
repz
fsubr
xchg
mov
movsb
sti
lcall
xor
mov
xchg
ss
sub
and
inc
adc
sbb
add
popf
and
jb
imul
dec
repnz
lret
pop
pop
call
jne
and
push
pop
pop
push
or
dec
or
add
icebp
mov
das
pop
clc
cmp
lret
scas
popf
or
mov
aaa
es
mov
push
pop
push
movsl
add
or
mov
or
sub
call
pop
imul
sbb
fyl2x
faddl
xorb
lahf
jno
mov
ret
xchg
lahf
movsb
or
orb
jge,pt
imul
test
jae
jb
fnsave
and
aas
cmc
inc
in
push
adc
nop
outsb
cwtl
push
das
and
dec
incl
mov
adc
pop
in
andl
in
cmp
mov
or
mov
mov
lahf
pop
mov
cmpsb
sar
mov
aad
and
pop
sub
ficomps
fnstcw
pop
and
repnz
cltd
js
push
fldt
xor
fdivrp
and
mov
nop
jp
leave
add
adc
das
ja
mov
sub
xchg
mov
loop
daa
mov
add
cwtl
cmovle
ds
mov
cmp
cli
jle
push
je
cli
aam
sbb
and
cmp
shlb
orb
aaa
pop
push
mov
push
xchg
sahf
cmp
cli
sbb
sub
push
test
pop
jns
mov
pop
push
xor
loope
shlb
mov
or
imul
mov
fiaddl
or
and
movsl
mov
mov
shll
cmp
cwtl
dec
push
inc
add
loopne
push
les
inc
mov
adc
jo
mull
jnp
and
jnp
sub
ret
insl
sti
cmp
cltd
push
mov
scas
sub
imulb
push
pop
pushf
xchg
mov
adc
sti
dec
mov
out
into
mov
sub
xchg
testb
lret
xor
xchg
out
popa
cmp
mov
mov
mov
nop
int3
jnp
in
sub
mov
inc
fldcw
dec
mov
aam
fs
or
out
rclb
data16
jmp
jbe
push
and
out
add
int
ret
push
jg
and
and
stos
xor
andb
mov
mov
mov
adc
cmp
int3
and
fidivl
push
cmp
insb
ja
mov
arpl
gs
loopne
adc
mov
leave
add
jne
xor
and
push
lea
jp
push
rep
xchg
sub
sub
jg
mov
xchg
sbb
mov
lahf
or
xor
pusha
jp
popf
std
or
dec
mov
jne
test
iret
push
and
xchg
jb
sbb
sbbb
loope
sbb
inc
or
testl
xlat
aas
stos
and
mov
push
mov
dec
add
jg
js
mov
xor
push
adc
jo
loopne
adc
test
xchg
jbe
in
dec
lea
out
popa
jge
cmp
push
mov
lods
cmp
push
sub
cmp
pop
mov
lock
sub
jmp
cmpsl
mov
inc
and
test
data16
cmp
pop
cmpsb
stos
pop
and
fcmovb
out
pop
pop
rol
dec
das
rorl
mov
in
nop
sub
push
ret
and
fwait
hlt
mov
mov
cwtl
das
aaa
jmp
negb
or
xor
int
and
jne
mov
mov
or
das
sub
push
insb
outsl
cwtl
repnz
pop
inc
adc
push
loop
add
and
adc
dec
xchg
sub
jg
add
pop
jp
and
mov
das
sub
mov
xchg
or
pop
inc
jns
imul
ss
ret
sub
cli
pop
push
cld
pop
and
cld
mov
pop
dec
clc
int
loopne
cmpsb
out
ror
repnz
pop
cld
fistps
cmp
dec
add
lahf
pop
addr16
dec
aas
out
int
bound
push
negl
in
adc
cmp
movsl
xchg
pop
std
nop
sub
cltd
adc
mov
pop
lods
in
mov
mov
sub
cmp
pop
gs
jle
push
mov
dec
mov
sti
scas
xor
aam
and
in
adc
pushf
mov
pop
cmp
mov
fs
sub
or
stc
xchg
lret
sbb
int
pop
ja
sahf
sahf
dec
repz
jo
cli
fiadds
mov
sub
xchg
imul
repnz
xlat
xchg
daa
inc
js
adc
mov
xchg
frstor
xchg
mov
adcl
out
sub
xor
inc
iret
out
sbb
mov
jg
cmpsb
mov
jb
pusha
andps
cmp
loopne
add
mov
mov
test
dec
call
inc
adc
sbbb
push
push
cmc
frstor
enter
adc
xchg
xor
dec
cmp
xchg
jp
mov
cwtl
inc
imul
in
lea
xchg
mov
ds
ljmp
sti
ss
mov
pusha
rorb
fs
cmp
shll
push
push
adc
out
xchg
idivl
in
xor
int3
add
jg
inc
or
aas
xchg
push
cmp
push
mov
mov
cmc
cmp
fs
call
mov
sti
push
frstor
xchg
in
cli
or
push
testl
cmp
add
out
imul
pop
cmp
xchg
push
jns
sbb
stc
jle
ds
mov
mov
sub
gs
int
or
orb
iret
insl
push
adc
cmp
in
xchg
add
xor
xor
jae
xor
ss
adc
out
inc
or
fstpt
scas
into
data16
sub
test
imul
xlat
mov
or
push
into
out
xchg
stc
subl
clc
cmp
hlt
jno
test
in
mov
pop
xor
call
ljmp
pop
push
lods
cmpsl
xor
pop
int
xchg
xor
mov
mov
dec
movsl
int3
loope
in
pusha
movsb
jge
popf
and
daa
mov
push
scas
lock
faddp
pop
inc
mov
dec
jl
inc
mov
mov
mov
iret
lods
push
sbb
jp
dec
lods
cmp
xlat
cwtl
xor
in
sub
jo
pop
pop
aas
mov
icebp
xor
xchg
add
cmp
or
or
out
into
out
pushf
int
mov
fiaddl
mov
out
insb
rcrl
cmp
sti
jmp
enter
add
ja
mov
or
adc
std
inc
rorb
or
cmp
push
out
aaa
lea
and
pop
std
repnz
add
jp
clc
fimuls
sub
das
loope
ret
push
in
ja
xchg
sbb
ds
daa
and
je
jns
rcrl
cmp
in
pop
lds
fnsave
ss
dec
enter
jno
inc
popf
cld
in
add
dec
aaa
dec
cld
mov
daa
in
cld
xchg
pop
or
inc
loope
loopne
mov
aas
jp
jb
aas
jle
das
inc
adc
es
into
push
icebp
mov
ss
xchg
nop
negb
dec
sub
sub
ret
adc
dec
mov
fbld
fistpl
subl
das
bound
inc
movb
mov
mov
mov
xchg
icebp
xchg
fiaddl
dec
mov
rolb
call
popa
pop
or
dec
fwait
jae
xchg
add
sbb
add
je
cmp
sbb
jne
insl
lods
inc
pop
imul
or
test
fcmovnbe
iret
mov
test
cwtl
pop
inc
cltd
xchg
xor
ret
lcall
sahf
pop
mov
adc
in
push
adc
lock
cmpsl
je
mov
xor
int
mov
and
sub
push
or
lahf
imul
fcmovu
push
jns
xchg
push
cltd
xchg
outsl
int
mov
int
dec
jo,pt
addr16
das
cmp
mov
sbb
inc
pop
addr16
push
pop
push
lods
jae
push
jle
notl
scas
repnz
xchg
cmpsl
cmp
jmp
mov
inc
xchg
mov
fnstsw
roll
stc
add
dec
push
or
and
add
add
cltd
add
insl
scas
test
mov
xchg
test
add
dec
mov
test
mov
mov
ret
jge
das
sarl
and
and
in
xorl
aas
test
ljmp
and
fwait
jbe
push
test
popa
xor
push
cld
je
cltd
xchg
jb
roll
in
jbe
stc
insb
fistps
cmp
mov
lock
test
pop
dec
dec
xlat
rorb
cmp
mov
sub
sbb
pop
jle
jp
in
xor
scas
lods
jmp
pop
aad
mov
adc
mov
sub
lret
xor
div
scas
xor
loop
loop
cli
jp
stos
push
xor
pop
das
fiadds
fdivl
cmpsl
movsl
imul
je
lds
fcoml
jno
mov
push
insb
jae
jmp
mov
sub
fld
dec
fdivr
lds
loope
cmp
int
and
push
pause
fldl
jns
jns
pushl
xchg
int3
ja
cmc
ret
jg
into
cmp
stos
or
lea
xor
mov
mov
adc
push
stos
dec
mov
jg
cmpsb
rcrb
lret
mov
or
mov
or
mov
insl
cmpsl
jmp
rcll
repz
orb
aas
addr16
aaa
and
mov
xchg
pcmpgtd
mov
mov
xor
xor
xchg
mulb
mov
movsb
push
mov
iret
gs
jle
sbb
pop
sub
xlat
addr16
imul
je
pop
fwait
shll
sub
or
stc
mov
dec
xor
jp
ljmp
inc
push
add
mov
leave
mov
and
jns
mov
cld
mov
mov
adc
out
ja
in
xchg
ret
xchg
push
xor
mov
mov
cmp
call
mov
call
loope
dec
scas
mov
dec
out
pushf
pop
pop
cs
jbe
je
mov
dec
push
ret
sub
in
jmp
sub
leave
aam
scas
test
xchg
fst
xor
and
daa
or
xchg
sbb
pusha
dec
insb
adc
pop
popf
out
loop
mov
loopne
std
imul
in
sub
mov
xchg
ds
call
jbe
jmp
push
jmp
shl
aad
es
or
ficoml
cmp
gs
int
leave
fisubrl
xchg
add
dec
mov
mov
into
adc
inc
adc
mov
or
sbb
movsl
jecxz
inc
jnp
sub
inc
popa
cli
and
popf
fs
out
sbb
fists
jb
mov
push
testb
inc
mov
shrl
cmp
adc
pop
in
inc
int3
sub
or
mov
arpl
or
mov
sbb
bound
xlat
pop
ljmp
aas
out
sbb
mov
cmpsl
jge
jb
push
pop
bound
gs
jns
cli
popa
adc
imul
mov
shlb
data16
aas
pop
nop
js
jns
out
mov
cmp
mul
xor
stos
push
sbb
int3
clc
das
scas
std
and
stc
cmp
lods
jmp
movsb
test
leave
loopne
dec
push
mov
outsl
mov
call
add
scas
xchg
in
fmuls
mov
lret
std
inc
arpl
add
lds
lret
jno
mov
xor
mov
mov
icebp
jge
in
sub
mov
push
jle
xchg
mov
pop
repz
je
add
int
divl
mov
sarb
jns
push
xchg
clc
iret
and
arpl
add
jbe
mov
push
sub
out
mov
dec
lock
mov
test
push
call
sbb
sbb
xchg
xchg
inc
ret
rclb
push
sub
fstpl
mov
or
mov
fisubl
push
ret
pushw
pusha
leave
scas
fsubr
je
std
add
push
jno
jae
je
lods
scas
std
sub
or
xor
popf
fbld
pop
ret
repz
mov
push
mov
mov
push
imul
dec
mov
mov
pop
mov
fcmovbe
pusha
cli
xlat
loop
addl
or
das
pop
jno
mov
pop
push
sbb
sub
cld
or
inc
lock
dec
pop
mov
pop
sarl
loop
ja
aad
mov
gs
jle
aad
and
movsb
mov
mov
outsl
mov
enter
cmpsb
je
popa
test
adc
repnz
popa
enter
out
subb
mov
fldt
mov
and
loopne
and
push
out
xchg
mov
mov
xchg
test
adc
xor
inc
jno
je
cmp
xor
push
das
std
mov
scas
dec
cmp
icebp
push
cmpsb
and
sahf
cmp
mov
push
out
aam
inc
aam
mov
in
sti
pop
cwtl
sbb
mov
mov
or
outsl
js
sbb
jmp
sub
add
test
mov
jl
xchg
add
outsb
insl
and
stos
loopne
xchg
cwtl
int3
jecxz
mov
lret
popa
repz
xchg
loope
cmc
cmp
mov
pop
and
in
in
stos
clc
xchg
cmp
jmp
dec
xchg
add
inc
jno
cld
js
sbb
sbb
mov
fisubl
out
inc
xor
movsb
stc
in
mov
mov
ja
lret
int
outsl
movsb
pop
dec
and
jmp
scas
sahf
xchg
pushf
sub
addr16
or
dec
int
pop
repnz
jno
pop
xchg
daa
clc
cwtl
push
cmp
test
jb
mov
push
push
pop
xor
bound
ljmp
shlb
fbld
call
cmc
aad
xchg
das
lds
add
and
and
sbb
in
xchg
movsb
add
jmp
insb
adc
jo
addb
xchg
push
inc
outsb
jno
les
push
sti
popfw
mov
fisubrs
stos
xor
push
rorb
lods
inc
dec
into
mov
sub
adc
push
add
inc
dec
sti
repnz
pop
adc
test
je
xlat
mov
jns
aam
add
sti
push
scas
xlat
ljmp
xchg
pop
out
xchg
mov
mov
fs
aas
push
aad
lahf
imul
fiaddl
mov
dec
add
inc
les
pop
xor
aas
or
adc
mov
orb
js
mov
pop
xchg
lcall
jb
mov
imul
xchg
add
lahf
adc
xchg
mov
lock
arpl
icebp
outsb
xor
icebp
ror
cltd
inc
imul
xchg
mov
stc
loopne
call
xor
into
xor
cwtl
sbb
out
add
aas
idivb
in
outsb
jne
into
inc
inc
push
pop
sti
lods
out
aaa
xor
out
ja
cmpsl
fs
and
push
sbb
xchg
or
icebp
push
ffree
ss
push
scas
sbb
cmp
or
fs
adc
push
lret
push
sti
daa
sbb
jae
fcmovnu
jp
out
xor
xchg
stos
cli
sbb
popf
xor
jo
lret
xor
rclb
ret
sbb
mov
mov
dec
es
das
mov
sbb
adc
push
stos
dec
lahf
mov
inc
xlat
sbb
xchg
lock
fisttpll
mov
in
leave
cld
nop
test
imul
aam
mov
lcall
inc
push
out
ret
gs
js
mov
push
cmp
cs
cwtl
dec
roll
pop
mov
sbb
xchg
and
pop
notb
call
lea
xor
sub
movsl
pop
jmp
lock
push
std
sub
mov
imul
mov
mov
xor
mov
cmp
enter
jecxz
sar
test
xor
jp
fcoms
push
ljmpw
rcrb
push
hlt
repz
pushf
or
movsb
sub
add
sub
xor
test
mov
add
xchg
test
mov
mov
sbb
shr
and
mov
faddp
es
xor
in
loopne
mov
aad
mov
adc
stos
into
orl
mov
pusha
incl
enter
insl
xor
aaa
ja
insl
mov
int
push
mov
mov
aam
or
push
mov
sbb
inc
mov
cmc
jmp
je
xor
or
dec
aad
inc
and
mov
pop
test
mov
mov
dec
sbb
add
xor
outsb
mov
scas
fwait
out
mov
mov
movsl
cmp
dec
stos
aas
shrl
xor
sub
mov
cld
inc
pop
lds
cmpsl
notw
aam
add
cwtl
dec
adc
add
pop
pop
andl
sbb
add
pop
in
scas
push
or
or
test
int3
jp
jne
mov
das
sbb
scas
jecxz
push
test
in
lock
pop
inc
mov
or
repnz
sbb
xor
js
and
mov
or
or
shlb
sbb
or
enter
mov
xor
lods
bnd
ror
lods
lret
push
scas
adc
hlt
ja
or
cld
add
pop
into
pushf
fs
lock
popa
mov
sbb
mov
push
fdivs
cmp
inc
jo
push
jno
adcb
lcall
lahf
fcomip
testb
jae
cwtl
gs
push
jno
sahf
cmp
and
pop
mov
xchg
dec
mov
adc
xchg
or
data16
xchg
mov
aas
pop
adc
call
cli
jge
add
cmp
dec
or
mov
in
in
out
adc
jg
xchg
jmp
fwait
pop
lods
cmp
repz
lods
mov
addr16
call
mov
jnp
int3
shrw
mov
enter
pop
xor
scas
jmp
jmp
inc
fstpl
xorb
add
insl
inc
inc
pop
mov
int3
dec
adc
popf
into
fistpll
xor
dec
outsl
scas
outsb
adc
mov
push
iret
inc
jecxz
push
stos
cltd
pop
jo
cmp
or
test
jge
jb
push
rclb
push
xchg
ljmp
jb
mov
mov
out
pop
mov
outsb
popf
mov
repz
fs
aad
mov
movsb
dec
lret
stos
mov
fs
pusha
jo
cmp
inc
dec
mov
fisubs
xchg
xor
jnp
mov
adc
ret
and
aaa
fs
andl
add
arpl
sub
fs
mov
jmp
xor
mov
sbb
xchg
ds
jns
js
loopne
or
mov
jecxz
inc
mov
and
mov
leave
push
leave
adc
mov
int3
in
adc
and
mov
fsubs
xchg
sbb
test
mov
mov
jecxz
add
pushf
xor
lock
pop
int
mov
push
lods
or
lea
push
mov
insb
arpl
test
mov
adc
push
push
and
es
add
adc
and
stos
mov
bound
cmc
test
stos
xor
xor
fistps
mov
xor
out
xor
push
adc
or
pop
push
mov
xchg
pop
repz
out
push
pusha
movsl
lahf
fwait
mov
xchg
lods
xchg
cmpsb
adc
imul
les
test
cmp
mov
or
dec
dec
loopne
cmpsl
es
insl
imul
mov
mov
or
addr16
ror
sub
push
push
inc
xchg
jge
test
xchg
sub
movsl
mov
pop
dec
loop
les
mov
gs
test
in
fcompl
outsb
jp
inc
js
mov
mov
fistpll
out
ss
cli
cmp
cmp
push
andb
pushf
std
inc
int3
iret
mov
je
aas
pop
jne
dec
jne
data16
jmp
enter
lahf
xchg
pop
dec
test
pop
pop
scas
mov
test
cmpl
push
mov
sbb
sub
call
push
or
mov
or
insb
sub
xor
pop
sbb
pop
dec
mov
test
pop
fwait
mov
and
dec
mov
cmpsb
das
mov
jns
mov
ljmp
xchg
adc
inc
dec
pop
mov
lods
mov
adc
jnp
and
dec
and
jo
xchg
and
cmp
loope
aam
ret
xor
lock
fcomi
repnz
hlt
fstpl
xchg
pop
sub
mov
scas
and
pop
ret
push
fs
lahf
movsl
or
pushf
or
pop
scas
jge
into
decl
leave
rol
ljmp
outsb
xor
lods
out
loopne
sahf
shrl
aad
std
std
add
lahf
call
xor
daa
pop
jmp
je
add
fwait
mov
xchg
test
or
pop
and
loope
mov
arpl
pop
std
test
or
loopne
jnp
xor
imul
div
shll
test
and
mov
test
in
das
mov
mov
pop
lds
cmpb
cmp
out
cmp
xchg
cmp
cmp
icebp
dec
int3
dec
pop
pop
bound
add
andb
mov
dec
mov
mov
rorl
repnz
ds
or
sub
and
adc
adcb
test
rcl
inc
out
add
aad
in
sub
mov
orl
loopne
test
shrb
out
pop
sub
mov
mov
push
mov
mov
incl
cwtl
lret
adcb
mov
xchg
outsb
adcb
je
mov
out
or
lock
xchg
or
aaa
pop
dec
mov
push
xchg
xchg
mov
fildll
aad
int
xchg
mov
rcrb
cmpsl
xchg
popf
in
inc
wbinvd
test
test
cltd
inc
dec
fisubl
push
push
mov
std
rol
test
and
popa
mov
aad
sti
aad
bound
ret
sub
cs
xchg
mov
mov
push
fstpt
inc
movsb
mov
jae
leave
pop
iret
lea
mov
inc
push
aas
jge
idivb
dec
xor
jns
sub
je
fnsave
add
inc
sahf
sbb
jl
out
addl
test
cld
out
daa
ret
xor
or
and
lret
stc
mov
aaa
dec
shrb
aas
dec
pop
push
cli
push
xor
sbbb
mov
fbld
faddp
fistps
inc
outsl
push
cld
xchg
push
push
push
rclb
ret
addr16
jg
cmp
sub
and
pop
jl
in
inc
movsl
xorl
test
fs
xor
mov
popa
mov
dec
sbb
xchg
aad
push
sub
inc
sub
xor
sbb
inc
in
jge
outsl
outsb
pop
push
out
out
sbb
fcompl
rcl
sbb
mov
mov
ret
movsb
mov
test
sar
xchg
dec
sbb
stos
jno
dec
xlat
mov
xchg
push
or
not
or
in
cmp
test
cmp
clc
adc
mov
xchg
jns
idivl
xor
xchg
ss
xor
adc
dec
lahf
cmp
jnp
adc
fisubs
stos
dec
jae
out
mov
xchg
pop
andb
dec
mov
rorl
test
lea
jp
inc
adcb
mov
rorb
adc
dec
cmc
or
jno
mov
xchg
cs
push
es
ret
and
lock
sbb
or
in
push
rorl
mov
movsl
hlt
sub
cmp
mov
inc
lea
mov
jb
shl
lret
out
mov
les
push
add
iret
push
out
rcrl
xor
gs
pop
jbe
inc
and
cmpsb
leave
and
dec
fadds
sbb
or
psrlq
rorb
notl
aaa
inc
xchg
pop
dec
mov
sahf
imulb
cli
sbb
inc
pop
xbegin
push
adc
cmc
dec
aad
scas
hlt
arpl
arpl
jae
cld
sbb
and
and
adc
loopne
cwtl
push
rol
es
rorl
call
es
bound
sbb
into
in
fsincos
sub
mov
pop
gs
or
or
adc
repnz
lahf
cltd
mov
ret
fwait
xor
jecxz
std
jp
imul
jp
inc
pop
cmp
in
pop
mov
scas
jmp
popa
pop
daa
mov
push
xchg
fwait
es
pop
jmp
stos
shlb
stos
jmp
xchg
add
sub
shl
inc
sbb
ja
xchg
out
subb
pop
fcomip
mov
imul
insl
xlat
fimull
xchg
mov
cld
scas
mov
push
dec
add
lods
mov
xor
js
cmc
push
xchg
les
jb
xlat
dec
mov
xor
inc
iret
add
jbe
fnclex
dec
xor
fmull
push
push
inc
popa
inc
inc
add
add
inc
inc
call
or
movsl
or
sbb
into
bound
popl
stos
cmp
mov
mov
adc
bound
std
and
sbb
or
pop
mov
enter
ds
movsb
cmp
roll
into
push
int
sbbl
into
mov
cwtl
cmp
or
lea
mov
scas
nop
iret
pop
jp
lock
xchg
mov
xor
shufps
pusha
inc
mov
jb
hlt
sbb
movsb
lcall
mov
lret
hlt
pushf
jo
pushf
insl
scas
sbb
fstpl
iret
stos
pop
or
jns
hlt
lock
mov
xor
cmp
jp
das
mov
or
sti
and
cli
ficomps
mov
call
pop
mov
mov
xor
pop
or
mov
mov
sbb
sub
dec
jo
out
outsl
nop
cli
adc
mov
xor
mov
xchg
mov
fcoml
jge
adc
adc
and
mov
fstpl
enter
mov
inc
aad
outsb
mov
popf
test
fdivrl
es
sub
in
lods
jns
adc
adc
nop
xor
dec
loopne
cs
xchg
mov
sub
fstpt
jns
sub
mov
nop
mov
dec
jne
or
or
adc
or
sbb
pop
aas
dec
jne
stos
ljmp
insb
call
lret
aad
and
dec
scas
jae
inc
inc
adc
add
or
lds
pop
iret
mov
dec
or
push
outsl
push
cwtl
mov
ss
sbb
and
enter
mov
aas
fidivs
iret
lds
pop
inc
fadds
cmp
push
pop
mov
mov
dec
and
ficompl
pop
dec
lahf
mov
mov
fisttpll
sar
sarl
or
pusha
mov
les
dec
scas
ljmp
iret
or
subb
or
pop
or
pop
ljmp
jp
sub
cli
cli
pop
aas
dec
add
or
movl
bound
push
test
sbb
jb
sbb
call
sbb
call
in
insb
fiadds
jge
sbb
cli
xor
jge
in
jle
fildll
scas
mov
jmp
pop
sbb
cmp
inc
in
cwtl
inc
stos
jecxz
xchg
cld
mov
repz
lret
out
shl
xchg
mov
jg
sub
jmp
test
mov
jno
test
adc
cmp
push
int
sbb
leave
mov
iret
jnp
sub
fnstsw
in
mov
jg
push
test
cli
xchg
arpl
pop
insl
push
xor
adc
push
sub
loopne
cli
decb
add
cmp
scas
xorb
jle
jl
xlat
or
in
xor
lds
sbb
add
and
jmp
mov
xchg
ret
cmp
sub
pusha
jecxz
dec
out
sub
push
mov
inc
gs
pusha
xlat
lret
orb
xor
sub
roll
dec
ficoml
arpl
pop
stc
cld
sbb
imul
cmpsb
rolb
shrb
add
adc
fdivrl
insb
mov
xchg
fiadds
fisttpl
mov
mov
sbb
cmp
insb
incb
sbb
aad
jno
xchg
jmp
inc
rolb
pusha
jg
test
out
in
enter
iret
xchg
cmp
rcrb
std
icebp
lock
pop
adc
fidivl
adc
fists
testb
cmp
fisttps
jae
frstor
mov
mov
jnp
fwait
shrl
jmp
push
and
mov
movsl
mov
cmpsb
aaa
mov
or
jns
repnz
cwtl
jmp
sbb
out
and
inc
or
sub
sbb
or
shlb
ss
and
adc
jg
jne
mov
pop
stc
push
out
adc
push
push
fildl
sbb
int3
jge
mov
pop
pop
in
inc
ret
mov
pop
ljmp
xchg
sub
or
pusha
test
pop
dec
sbb
push
add
scas
mov
bnd
jo
roll
pop
scas
fcoms
hlt
out
mov
push
shll
dec
xor
cmp
jns
test
ljmp
call
xchg
clc
daa
xor
mulb
mov
pop
lods
std
fsubl
into
sub
inc
pop
popf
inc
frstor
bound
pop
addl
fsts
adc
ret
inc
or
jno
mov
in
clc
push
out
cmc
xlat
subl
idivl
sub
rolb
xchg
cmc
out
jmp
repz
adcb
arpl
xchg
imul
lret
add
cmpsb
in
pop
ds
push
stos
cs
lods
mov
adc
dec
mov
das
scas
dec
movsb
jg
std
push
mov
stos
sbb
mov
xchg
loope
mov
adc
cld
stos
hlt
add
push
mov
insl
insb
roll
dec
lret
es
dec
jp
jbe
fdivr
shrb
add
test
rolb
test
js
inc
fsubs
fsubs
fidivs
hlt
daa
in
and
jbe
lret
mov
iret
frstor
cmp
ds
push
cs
mov
dec
je
insl
pop
outsl
mov
add
rolb
push
and
les
pop
mov
sbb
lods
mov
mov
imul
push
mov
test
je
xchg
stos
add
mov
xchg
mov
add
sub
repnz
stos
push
fxch
fwait
mov
into
jo
cmc
add
fmulp
mov
ds
das
adc
push
lock
mov
jb
insl
adc
pusha
aad
pop
out
imul
popa
mov
xchg
leave
pop
fldt
aas
out
aam
mov
arpl
pop
lahf
inc
stos
jg
inc
jp
sub
leave
es
mov
adc
out
fidivl
les
in
pop
fldcw
lods
push
xor
cmp
jnp
pop
push
sbb
sub
cwtl
mov
pop
add
hlt
in
shlb
and
aaa
pop
push
rorb
push
stc
push
movsb
add
in
pop
sub
out
dec
idivb
sub
mov
movsb
out
jns
fistl
call
push
inc
adc
es
sub
popa
pop
loopne
sarl
shl
ret
or
test
test
sbb
and
int3
lret
sub
mov
add
push
out
ret
mov
and
leave
mov
gs
lcall
aas
scas
cld
lahf
pop
stos
jae
out
and
xchg
xlat
lea
lret
sub
or
std
inc
loop
sub
stos
and
adc
mov
icebp
sub
popf
movsb
fsubl
cmp
jle
movsl
stos
sbb
jns
inc
or
xor
shll
push
cmp
xchg
and
in
fisubrl
add
out
sub
or
mov
and
pushf
dec
out
xor
ja
mov
cmp
testl
lcall
xor
sti
outsb
inc
into
cmp
sub
push
sub
inc
cmp
enter
pop
mov
jo
fs
nop
hlt
sbb
push
lret
mov
jno
push
je
mov
ss
inc
jge
scas
sar
lods
push
jmp
icebp
into
sbb
push
pop
test
pop
lret
push
and
and
std
mov
xchg
pop
rcrb
mov
or
lret
nop
mov
lahf
stos
pop
push
mov
dec
push
dec
call
adc
sub
arpl
inc
cmp
sub
add
outsl
pop
jle
pop
test
inc
lods
xlat
pop
inc
push
mov
xchg
aam
dec
add
inc
scas
movsb
inc
dec
pop
cmpsb
movsl
mov
clc
iret
fwait
loop
mov
daa
lahf
outsl
xchg
mov
push
out
pusha
imul
push
xchg
es
inc
repnz
repz
pop
inc
in
clc
pop
faddp
sahf
sub
jl
aad
loope
inc
mov
hlt
loope
push
cmp
mov
call
mov
std
and
outsl
xor
xlat
add
xlat
aaa
loope
bound
movsb
les
rorb
pop
jge
shlb
in
inc
inc
adc
adc
fcompp
int
pop
xchg
mov
xor
prefetch
or
stos
fcomi
cmp
movsb
sbb
cwtl
push
xchg
fs
bound
add
aam
add
in
inc
xor
xchg
xlat
and
mov
push
mov
loope
divl
ss
jg
inc
out
jnp
aam
ss
sub
cli
mov
inc
dec
lret
pusha
les
clc
subb
adc
add
sarb
sub
or
sbb
jge
sbb
mov
sbb
ja
inc
aaa
call
jle
outsb
rorb
xchg
mov
leave
xchg
pop
out
mov
cltd
or
imul
adc
insb
sub
iret
scas
daa
mov
movsl
dec
pop
cmpsb
movsb
mov
out
int3
pop
pop
je
sbbb
mov
and
jg
xchg
mov
xchg
add
or
push
shrl
aas
mov
hlt
mov
aam
rorl
js
gs
movsb
cmp
int3
push
cld
or
lahf
aaa
mov
fstps
adc
add
loop
mov
icebp
sbb
xchg
out
xchg
mulb
mov
sub
data16
sbb
inc
adc
jbe
in
ljmp
xchg
pusha
movsb
pop
leave
add
test
ss
push
sbb
dec
inc
lods
mov
pop
les
fistl
in
std
je
jg
pop
push
outsl
pop
outsl
push
inc
cmpl
cmp
push
aam
fisttpll
push
mov
in
mov
xor
fs
js
mov
loopne
push
push
ljmp
pop
push
xor
loop
nop
pop
out
or
ja
xlat
rorb
jecxz
inc
xchg
sbb
shlb
sbb
pop
loop
mov
outsl
sbb
mov
cmp
ret
adc
enter
loope
xchg
ds
sbb
sub
xor
iret
pop
rcr
nop
pop
fs
test
sub
push
jo
sahf
in
lods
shlb
cli
pop
push
push
das
xchg
dec
add
pusha
jmp
orl
outsb
inc
mov
add
push
sbb
movsl
adc
pop
jno
iret
add
push
or
pusha
leave
out
mov
adc
pushf
test
dec
cld
cmpsb
mov
loope
or
adc
inc
cmc
pop
test
cwtl
scas
lods
dec
shl
xor
mov
call
and
loope
mov
push
movsb
xchg
lret
xchg
rcrb
lods
movsb
jae
clc
frstor
dec
cld
pop
scas
enter
mov
or
pop
mov
into
icebp
inc
xchg
in
jns
sbb
inc
rcr
xor
pusha
adc
imul
adc
rcr
push
nop
inc
dec
inc
inc
jno
mov
push
sarb
shrl
lret
ss
and
mov
jmp
pusha
aam
inc
mov
loope
sar
sub
sbb
or
pop
dec
cld
cmp
cmp
mov
and
jp
xchg
and
in
add
sahf
dec
fs
push
fmul
mov
inc
pop
xchg
inc
push
in
out
push
xor
mov
iret
jp
mov
push
nop
cwtl
dec
mov
push
fstps
ja
xor
out
sub
cmpsb
mov
repnz
lcall
lahf
jg
push
push
stos
seta
sub
cmp
je
push
xchg
lahf
call
fcmovnb
test
aam
xor
jmp
adc
lds
inc
jne
or
add
mov
mov
lcall
fisubrl
imul
cmpsl
adcl
out
fs
es
xchg
cmc
push
aam
scas
jno
sub
sub
mov
dec
jnp
push
and
ds
sub
and
mov
mov
outsl
pop
repnz
daa
inc
and
aaa
shl
lods
jle
add
les
aam
jbe
sbb
sub
arpl
add
mov
mov
cmpl
icebp
imul
cs
outsb
in
xchg
jbe
cld
or
ret
adc
mov
movsl
rcrb
rorl
stos
pushf
dec
out
adc
sarl
xchg
inc
insl
cmp
insl
mov
push
adc
jns
xchg
or
mov
rcrl
xor
xchg
add
ljmp
pop
adc
cld
or
adc
pop
or
ds
pop
call
push
xchg
mov
xchg
cmpsb
sti
stos
xchg
in
in
push
mov
fists
or
gs
push
mov
dec
inc
push
fs
xchg
lods
jb
jae
icebp
lret
fdiv
push
int
adc
stc
mov
loope
and
pop
notl
cmp
stos
jbe
pop
outsb
scas
out
iret
cmp
sbb
std
pop
imul
mov
mov
sti
push
data16
xlat
gs
or
and
mov
cmp
xchg
jecxz
xor
das
imul
mov
jmp
sbb
add
imul
add
adc
pop
or
ds
js
mov
dec
test
jnp
push
arpl
div
adc
push
lret
pop
inc
cmp
arpl
or
rcll
xchg
push
cmp
lock
mov
fdivl
mov
out
cmp
xchg
xchg
mov
ljmp
pop
adc
sbb
adc
jbe
fs
mov
xchg
xchg
cmp
daa
out
or
test
movsl
int3
and
loope
adcb
pop
add
push
mov
aas
push
jp
fnstsw
cmp
mov
inc
loop
adc
arpl
roll
orl
pop
ss
ja
xor
stos
mov
subb
adc
cmp
xchg
xchg
xchg
mov
fsubs
fdivs
inc
or
jg
test
xchg
gs
sub
mov
inc
movsl
push
outsl
sbb
jbe
jecxz
inc
mov
mov
adc
pop
mov
fldcw
sub
mov
lea
dec
ja
div
lea
push
mov
dec
add
push
cld
cltd
sbb
sub
rep
cmp
fisttpl
mov
in
xor
jne
xor
out
sub
push
loop
and
jl
jge
xor
dec
lock
jmp
popa
shlb
js
ret
sbb
push
sbb
or
iret
neg
roll
or
jmp
pop
mov
out
mov
dec
test
and
mov
sub
jns
add
jno
xchg
and
jp
jge
or
scas
outsb
fmulp
je
jmp
or
jl
sub
lds
test
push
jae
repnz
adc
mov
clc
add
mov
sbb
xor
in
stos
push
in
std
cmp
rclb
sub
repz
loopne
mov
or
aad
pop
or
jg
xor
shlb
stos
and
je
loope
pop
cwtl
popa
mov
outsb
push
test
cmpsb
inc
push
adc
mov
in
jge
pop
out
jl
jmp
jge
outsl
test
mov
pop
outsl
fsubs
or
push
fsubs
mov
shlb
adc
hlt
push
xor
loop
das
fs
icebp
xchg
lcall
ljmp
cmp
jnp
pop
mov
push
out
iret
dec
sub
cmpsl
push
ret
imul
repnz
call
or
add
or
insl
mov
sub
pop
cmp
sub
or
mov
xacquire
lea
pop
fimuls
xchg
xchg
cmp
lret
jmp
pop
push
popa
lds
daa
aas
push
mov
sbb
xchg
call
data16
js
stos
sbb
scas
repz
mov
add
push
lret
popf
mov
out
pop
sti
sub
or
cmpsb
mov
aas
loope
test
pop
lret
jbe
rclb
aas
xchg
push
jmp
push
mov
mov
stos
dec
outsb
pop
fcoms
sahf
test
jge
int3
push
push
jae
jns
cmpb
or
adc
testb
xor
pop
mov
loope
icebp
sbb
dec
incb
or
jae
pop
gs
or
xchg
cltd
test
repnz
fwait
inc
sbb
xor
push
cmpsl
push
jp
scas
mov
inc
fcomip
rol
push
leave
mov
hlt
sbb
mov
jo
out
push
loope
add
enter
or
arpl
in
sub
pop
mov
test
xor
lods
push
hlt
sub
jne
mov
outsb
outsb
mov
jne
xchg
roll
cmp
das
pop
mov
sbb
add
loope
jp
and
pop
push
insb
add
pop
cli
jae
ds
scas
fidivs
xchg
outsb
ja
stos
in
mov
jo
rorl
test
jg,pn
adcl
or
and
mov
lahf
sub
add
or
pop
jmp
outsl
pop
inc
mov
push
jl
xchg
adc
push
push
je
mov
dec
std
in
pop
or
sbb
xchg
jge
gs
xor
imul
jbe
adc
int
cmp
or
cmp
and
rorb
outsl
dec
sub
xchg
enter
mov
jle
mov
das
jmp
fdivs
pop
icebp
or
int3
cld
xor
cwtl
inc
popf
sub
add
sbb
std
loopne
int
repnz
mov
mov
std
test
stc
test
imul
fisttps
jns
push
push
add
incl
ljmp
int3
pusha
das
inc
sub
mov
dec
jbe
enter
in
jns
dec
test
mov
cmp
or
sub
mov
decb
dec
xor
push
cltd
call
jo
and
popf
hlt
jns
fldt
stos
clc
xchg
shr
dec
or
sub
arpl
cli
dec
sub
outsl
pushf
push
ss
and
inc
cmpsl
push
xchg
jle
popa
xchg
push
mov
stos
pop
or
pop
lcall
xlat
out
add
clc
xchg
sbb
lods
sbb
pusha
mov
inc
sahf
lahf
int3
ret
std
mov
jl
sbb
mov
out
mov
cltd
lret
scas
clc
xor
cmp
jecxz
and
jl
pop
cmp
add
mov
imul
sub
hlt
ljmp
mov
and
idivb
dec
push
and
repz
push
lcall
sbb
bound
mov
or
cmp
jg
mov
pop
ret
push
addr16
pop
push
dec
fnstenv
mov
add
or
xorl
jno
mov
pop
add
sbb
test
inc
gs
xchg
pop
scas
cmpsl
fwait
push
adc
popf
push
jecxz
les
pop
movsl
into
xchg
mov
in
aaa
xor
cmp
xchg
pusha
and
ja
cmp
cli
mov
or
or
mov
xor
mov
pop
pop
push
xchg
nop
das
mov
xchg
xchg
out
push
fldl
sub
hlt
mov
arpl
jg
sahf
int
rolb
idivl
loopne
xor
nop
nop
jle
mov
pop
sub
in
sub
cmp
dec
mov
add
sbb
dec
int
arpl
push
lds
andl
js
add
sub
jo
and
xor
mov
outsl
mov
aaa
movsb
pop
stc
jo
sub
outsb
jle
or
xor
jno
jb
in
ret
sub
mov
xlat
fisttpl
jae
bound
stc
fdivrl
or
mov
rcr
mov
or
inc
iret
cs
pop
sbb
nop
jo
mov
sbb
mov
cmpsl
out
xor
xchg
pop
mov
int
ret
inc
or
xchg
adc
xor
xchg
sbb
mov
in
push
pop
inc
adc
sbb
loopne
sbb
inc
mulb
add
pop
rorl
out
adc
cmp
addr16
in
cmp
mov
xor
jae
out
std
jns
faddl
out
cmp
jnp
jecxz
iret
jbe
sbb
mov
call
stos
inc
pop
jnp
push
mov
inc
loopne
fadd
loop
mov
lret
scas
ljmp
imul
sbb
sbb
mov
nop
mov
mov
repz
xchg
mov
cmp
mov
sbb
mov
orl
xchg
inc
aam
adc
jbe
out
jb
sbb
jnp
aas
aas
cmpsl
aam
jp
inc
in
subl
xchg
aam
pop
or
add
sub
and
xlat
int
popf
xchg
dec
repnz
in
fbstp
leave
and
mov
shrl
push
out
repnz
xor
sbb
ds
xorb
lods
mov
xchg
ja
cmpb
sub
fsubrl
sub
rolb
xchg
dec
inc
or
dec
out
inc
sbb
rcrl
imul
add
hlt
dec
dec
icebp
frstor
lods
xor
inc
clc
outsl
pop
push
and
das
push
enter
out
jne
and
xchg
jmp
lea
pop
data16
xchg
loop
adc
add
and
dec
insb
inc
pop
xor
jp
cmc
out
jmp
dec
faddp
outsl
add
mov
clc
fsubrs
push
mov
jnp
and
test
es
daa
mov
mov
bound
lret
sub
adcb
sub
push
pusha
aaa
out
or
arpl
push
jb
add
aaa
xchg
jae
add
push
icebp
and
and
iret
mov
dec
les
mov
xor
xor
cwtl
mov
scas
sub
xor
jns
pop
pop
mov
xor
call
lret
mov
fidivs
lahf
outsl
mov
movsl
dec
test
xor
sbbb
insl
outsl
mov
mov
mov
push
loope
push
mov
dec
xor
push
std
insl
mov
push
mov
sbbb
jns
xchg
loop
push
test
mov
xchg
movsb
xor
shlb
test
scas
sti
sub
mov
inc
and
mov
dec
xor
outsl
fimuls
lock
mov
add
lea
fsubs
insl
pop
daa
push
popa
push
and
mov
jno
add
ljmp
fcomp
mov
lea
loope
push
add
loop
xchg
jno
lcall
pop
and
jle
pop
dec
jl
xlat
sbb
xlat
xchg
cltd
aas
in
test
jl
or
dec
add
ljmp
les
std
jecxz
sbb
dec
mov
jo
orl
push
xor
mov
push
inc
dec
scas
push
shlb
out
inc
dec
or
fisubrs
adc
sub
mov
sbb
fcompl
xor
cmp
adcl
ljmp
cli
shlb
xchg
stos
addr16
testl
in
iret
lcall
test
in
mov
loope
outsl
jmp
mov
enter
or
outsl
sub
dec
stos
push
ja
mov
andl
or
push
std
cmp
in
pop
xchg
stos
jmp
lcall
imul
xchg
into
int
ljmp
xor
dec
dec
mov
sbb
rcll
cltd
push
jecxz
pop
or
stos
orl
pop
int
push
out
dec
jb
push
sbb
shl
adc
das
stos
cmpsl
pushl
bnd
sbb
mov
lea
aad
sbb
mov
cmp
stos
jge
mov
xchg
fimuls
sahf
mov
xchg
mov
stos
add
push
loopne
in
sbb
popf
mov
je
cmpsb
mov
not
and
lods
pop
jl
sbb
int
shlb
je
jns
or
jae
mov
testl
jg
inc
fldcw
arpl
jnp
add
sarb
rep
mov
cld
popf
sbb
mov
dec
add
movsb
xor
mov
int3
cmpsb
gs
or
cs
insb
data16
clc
dec
push
movl
xchg
outsl
aam
ret
cmc
cltd
cs
cmp
notl
leave
adc
dec
inc
jnp
bound
rcrb
sub
cmp
movl
jmp
cwtl
xchg
std
inc
push
mov
fs
push
outsl
lcall
lahf
mov
and
jmp
pop
xor
stos
shll
icebp
cld
dec
lock
cltd
fdivl
dec
sbb
test
pop
mov
mov
fsubrs
repz
inc
gs
popa
addb
push
imul
in
xor
lds
mov
mov
insl
push
mov
lods
add
in
sub
sti
nopl
mov
push
subl
cltd
and
hlt
enter
or
ret
jnp
mov
shrb
mov
inc
inc
sub
mov
jne
mov
shll
push
push
repnz
mov
fdivs
js
popa
or
or
orb
mov
push
gs
cld
push
add
or
pushf
mov
aas
xchg
js,pn
std
add
mov
jg
mov
cmc
pushf
dec
std
sbb
mov
fsub
fucomp
adc
pop
movsl
frstor
pop
in
inc
inc
and
pusha
lcall
mov
repz
xor
arpl
fbstp
testb
pop
loop
loopne
std
mov
push
cmp
lret
lods
ljmp
aas
mov
cwtl
or
xor
mov
lds
addr16
testb
mov
in
xor
pusha
or
in
subb
sbb
xchg
add
push
repnz
imul
mov
push
push
mov
mov
mov
lret
push
insb
mov
add
sti
mov
add
ljmp
ret
xchg
cmp
idivl
mov
inc
out
inc
sub
je
std
fwait
mov
sbb
pop
aas
dec
mov
mov
repz
jnp
loop
movsb
and
hlt
scas
adc
rcrb
jae
ja
mov
dec
mov
fldt
jnp
mov
xlat
sub
ljmp
into
scas
and
sbb
out
fidivs
in
sbb
outsl
xchg
xchg
push
or
in
jnp
testb
andl
xor
pop
std
call
pop
push
inc
and
xor
int
xchg
jo
loope
pop
enter
addr16
stc
cli
jle
dec
iret
lcall
je
ret
sahf
xor
ljmp
jo
sti
add
dec
jle
jo
and
repz
outsl
and
popf
push
adcb
fcompl
int
push
stos
aam
cwtl
cltd
mov
mulb
cmp
pop
mov
imul
add
xchg
imul
adc
mov
inc
dec
mov
push
out
push
and
pusha
jnp
je
rcll
push
pop
add
repz
mov
mov
mov
xchg
loope
dec
sbb
dec
scas
mov
popa
lea
ja
mov
jno
lahf
xchg
popa
pop
xor
mov
outsb
test
lcall
into
lods
jge
xor
xlat
push
test
sbb
mulb
adc
jp
icebp
mov
and
imul
outsl
cmp
cmpsl
pushf
popa
push
pop
mov
cltd
mov
mov
add
cli
ds
pop
fimuls
xorl
mov
int
xchg
cmp
lret
xchg
pcmpeqw
mov
push
sub
nop
inc
jae
fwait
mov
xlat
loopne
mov
outsb
mov
mov
or
sub
sub
aam
outsb
mov
in
jo
mov
cld
mov
icebp
sub
scas
mov
pushf
dec
mov
push
inc
lock
xchg
test
imul
mov
mov
sub
gs
jae
shll
xlat
inc
lods
pop
fsubrl
jb
jp
or
repz
adc
cmova
xor
sub
xchg
lret
aam
sub
out
ss
dec
xor
adc
shlb
jmp
call
mov
insb
adcl
ret
add
outsl
mov
cmc
bts
sub
mov
call
mov
mov
inc
shll
dec
cmc
sbb
outsb
sub
sbb
mov
test
and
das
adc
or
add
inc
push
fs
aaa
jmp
push
out
cmovbe
iret
fs
jno
or
sub
dec
dec
add
push
cmp
jge
jno
int
mov
dec
fcmovu
int
movsb
cmp
mov
sub
push
add
xchg
xlat
mov
mov
push
scas
adc
sbb
sbb
js
inc
cmp
pushf
fisubrl
xor
daa
divl
rorb
imul
scas
and
mov
or
sub
dec
fs
jbe
pop
loop
sub
sub
bound
adc
add
cwtl
mov
cs
xor
aas
add
jne
fstps
mov
xchg
adc
inc
fldl
dec
sbb
dec
cli
jno
and
cs
add
call
pushf
aaa
mov
jecxz
movsl
sub
sub
pop
int
aad
outsl
jno
test
xchg
lods
lods
xchg
or
rolb
fisubrl
add
stos
rcll
fiadds
ds
daa
mov
sahf
jmp
cmpb
xor
mov
imul
xchg
jmp
dec
enter
sbb
mov
roll
sbb
lea
jecxz
inc
insb
jmp
hlt
int
jecxz
hlt
cwtl
jmp
fmuls
mov
and
cmpsb
or
loop
mov
shll
mov
push
hlt
or
out
cmp
insb
or
inc
and
cmp
movsl
lea
and
stc
pop
in
mov
jge
xchg
sbb
mov
mov
sub
add
loope
cmp
inc
xor
ret
mov
sbb
stos
lods
inc
cli
jno
xchg
dec
mov
add
subb
stc
inc
out
jbe
adc
scas
sysenter
fists
sahf
mov
mov
in
hlt
xor
rcrb
or
sahf
shlb
xor
sbb
repz
cmpsl
adc
dec
dec
xor
js
jl
notl
mov
jno
jecxz
js
jmp
test
sarl
or
jmp
pushf
jmp
mov
inc
cltd
and
inc
mov
loopne
xchg
dec
xor
mov
push
push
mov
add
push
jae
in
xor
call
into
addr16
negl
lret
cmp
add
gs
cmp
cli
shrl
cmp
add
jnp
ret
imul
cmp
jp
cmp
fnstsw
and
jmp
push
cmc
clc
xchg
add
fidivrs
or
sbb
xor
cmp
in
mov
adc
scas
adc
dec
jecxz
std
popf
test
rol
fs
insb
and
das
mov
data16
imul
pop
mov
mov
addr16
cmp
outsl
xor
jl
lock
adc
lahf
std
pop
dec
or
xchg
shrb
xor
add
sbb
dec
gs
inc
mov
inc
or
jmp
adc
icebp
mov
cmp
daa
orb
enter
cmp
fst
out
ja
push
sub
fiadds
push
ret
sti
in
jns
cmp
xchg
test
dec
scas
and
scas
std
cmc
jnp
push
push
and
inc
fwait
add
and
jg
dec
ror
mov
cmp
mov
in
fisttpl
cmp
cmp
dec
out
rorl
xor
sbb
pushf
int3
cmp
int
add
mov
outsb
aam
dec
cmp
push
xorb
dec
add
cmp
add
mov
sbb
loope
sbb
inc
jmp
cmp
test
lret
ja
dec
fsubs
add
cltd
cmc
inc
cli
sub
into
scas
mov
mov
mov
gs
movsl
xchg
outsl
out
and
xchg
out
les
add
xchg
jecxz
or
popf
subb
js
xor
inc
mov
cmp
and
jmp
mov
cmp
push
out
lock
jo
mov
jmp
push
sti
and
stos
mov
lods
in
push
mov
xchg
hlt
aaa
xchg
mov
data16
pop
stos
adc
and
pop
dec
fwait
ljmp
jecxz
popf
ret
lcall
push
pop
jg
adc
jmp
mov
or
cs
pusha
fistpll
mov
dec
pop
je
pop
adc
movsb
pop
and
xor
insl
pusha
pusha
sarb
int
repnz
mov
cmp
add
jp
push
test
mov
jae
mov
dec
sub
xchg
pusha
stc
ret
nop
cmp
fdivs
jecxz
and
stos
sbb
cmpsl
sti
aad
jmp
xor
in
dec
cmpsl
mov
movb
pop
pop
mov
shll
out
push
outsb
add
and
addl
imul
pop
dec
mov
cmp
xor
xor
fnsave
push
push
aaa
lret
mov
arpl
sarb
fcoml
dec
or
add
xchg
in
jo
lea
rcrb
add
cmpsb
pop
fsubrs
pop
inc
in
jecxz
sub
dec
pop
mov
dec
mov
adc
adc
mov
ret
jae
mov
or
mov
jl
push
xchg
test
or
stos
fucomp
push
clc
push
adc
add
aam
cmp
arpl
or
jge
int3
push
mov
mov
out
in
fsubrl
xchg
aad
push
pusha
out
jb
jl
mov
pop
stos
push
ss
mov
ficoml
lds
scas
add
push
fwait
insb
mov
loop
orl
pop
call
add
cmpsl
repnz
dec
mov
data16
in
sti
loop
roll
stos
inc
or
rcr
lret
inc
inc
gs
jl
pushf
and
shlb
aas
jl
mov
and
jp
cli
or
dec
scas
loop
mov
add
test
xor
xchg
mov
mov
enter
out
and
pop
pop
fnstenv
xorl
mov
xor
ljmp
sbb
std
mov
mov
cmp
jecxz
push
out
shrb
dec
mov
jbe
xchg
sub
mov
sub
cmc
xor
incl
mov
lahf
fisttpl
and
das
insb
fs
insl
jne
dec
xchg
mov
addl
negl
xor
gs
hlt
lods
add
cmpsb
mov
ret
pop
fs
inc
pop
mov
rorb
sbb
in
adc
xor
mov
lcall
into
cwtl
push
sbb
cld
ficoms
mov
inc
testb
into
and
pop
frstor
addr16
and
mov
js
clc
lock
or
cmp
stc
psrlq
push
cmp
scas
in
xor
dec
xchg
mov
mov
pop
nop
scas
push
mov
cmp
or
dec
int
std
mov
or
push
xchg
enter
cld
out
add
out
fxch
cli
popf
jb
out
psubsb
pop
aad
cs
outsb
dec
adc
mov
les
mov
sbb
insb
sbb
loopne
cmp
lahf
outsl
iret
fildl
sub
test
dec
or
fdiv
stos
adcl
fisttpll
orb
ja
aad
js
mov
adc
cmp
jae
mov
shrl
pop
aad
lods
divb
mov
aad
or
add
ficomps
loope
push
iret
dec
add
fdivl
and
jns
pop
and
aas
dec
xchg
aas
mov
xchg
pop
add
nop
test
jge
sbb
push
fst
sbb
icebp
xor
fs
mov
pusha
arpl
es
xor
aaa
pop
data16
push
andb
ret
or
flds
mov
daa
and
ds
int3
push
pop
inc
jmp
in
sahf
pushf
xor
lret
jno
xor
inc
mov
movsl
shrb
add
imul
jb
call
test
inc
loop
add
ficoml
pop
push
mov
mov
jo
cmp
sub
mov
lds
sbbl
jl
mov
inc
mov
dec
inc
mov
jns
data16
daa
add
cli
xlat
jo
cmp
jmp
cli
xchg
mov
mov
bnd
into
les
imul
push
ret
lret
xor
add
pop
jp
inc
adc
dec
movsl
sbb
fadds
mov
inc
test
add
or
outsl
pop
mov
mov
loop
cmp
fldt
sub
xchg
and
or
punpckhwd
shll
cmp
cmp
mov
mov
iret
jne
test
sbb
in
rclb
jae
aad
xor
xor
fstpt
ja
imul
mov
addr16
fldt
mov
repnz
int3
cmpsb
repnz
ljmp
push
gs
sub
xor
inc
out
dec
push
sub
or
lret
inc
daa
ja
ficomps
pop
xchg
les
shlb
xlat
lret
add
sbb
sbbb
pop
push
test
scas
cmpsb
ret
xor
movsb
jg
dec
out
cmp
int
cmp
mov
aaa
sub
mov
lods
inc
popf
iret
loope
pop
das
and
cmp
fxch
cltd
out
insb
xor
rep
xor
inc
mov
icebp
shlb
add
cld
cmp
js
aaa
cmc
aaa
dec
jne
out
mov
cs
ja
sbb
xchg
iretw
sub
sub
pop
jne
leave
lahf
push
cli
rorl
jmp
ja
fildll
into
out
incl
lea
inc
cwtl
ficompl
push
or
int3
mov
lea
ss
int
jge
add
push
cmp
jmp
xlat
hlt
dec
lods
fidivs
cmpsb
sbb
fimuls
push
lods
inc
ret
xor
sbb
lahf
or
jmp
and
mov
pop
cmpsl
shll
adc
int
call
rcrl
adc
mov
out
jmp
sahf
inc
push
add
outsl
popa
xor
dec
call
xor
inc
lock
add
subb
lock
pop
push
xchg
lods
mov
das
and
fcoml
fldt
sub
out
cltd
sub
dec
syscall
out
jecxz
pop
cmp
pop
data16
je
rcrl
sarb
sub
es
and
or
out
push
xor
inc
rcll
xchg
jne
outsl
int
scas
pop
test
push
push
fwait
jns
jno
aad
loop
clc
lods
in
jne
pop
sub
cmp
iret
loopne
push
xchg
arpl
movsl
jp
out
test
dec
lret
mov
mov
mov
cmpsl
lret
jno,pt
fbstp
mov
pop
subl
std
call
icebp
leave
mov
sbb
repnz
cli
add
push
adc
test
push
filds
xchg
in
test
lock
and
pop
cmpsl
aad
pop
fstpt
or
jne
outsl
insb
xchg
popf
out
cld
lds
fwait
cs
dec
inc
ret
mov
stos
lods
push
lock
aaa
sbb
jae
lock
xchg
mov
shl
test
adc
pop
xchg
jecxz
jae
jmp
pop
stos
pop
push
imulb
cmpsl
inc
or
loopne
push
clc
mov
add
cs
stos
cmc
inc
jno
cwtl
imul
lahf
sub
xor
adc
test
push
mov
fisubs
push
mov
jnp
jnp
sbb
test
xor
dec
mov
scas
stos
fcoms
cltd
inc
mov
jne
adc
ror
sbb
dec
lahf
jno
add
fidivs
pop
mov
push
inc
out
push
mov
adcl
stc
ret
inc
out
lock
push
xor
add
mov
xor
es
test
imul
sahf
lret
push
xchg
adc
lahf
sti
dec
pop
jp
cwtl
or
frstor
bound
adc
and
jno
and
add
xor
sub
lods
fistps
movsl
dec
pop
and
cmc
test
cmp
sti
fs
mov
mov
or
leave
cltd
stos
sahf
xchg
pop
cmp
mov
repz
cmp
push
push
fwait
push
xchg
inc
iret
mov
jb
mov
mov
jle
cmp
pop
mov
jno
ljmp
enter
imulb
or
adc
cld
add
into
stc
out
or
push
ffreep
mov
cmc
jb
jle
push
or
cmpsl
adc
mov
inc
cmp
or
in
cmp
sbb
sbb
pop
or
add
xor
mov
xchg
xchg
jae
pusha
inc
movb
std
xchg
into
jno
cmp
int3
jne
mov
and
and
imul
aas
repz
adc
cltd
repz
xchg
cmp
mov
jg
loop
xlat
add
mov
out
ds
je
mov
loop
pop
push
sub
adc
clc
in
jns
adc
pop
daa
adc
mov
adc
fdivr
jp
add
jg
adcb
hlt
lods
shrl
jmp
or
push
mov
inc
mov
add
shll
test
scas
int
mov
lcall
mov
pop
lret
lea
inc
and
cmpsb
mov
xor
xchg
inc
cld
inc
adc
xchg
xchg
clc
adc
int
repz
and
loopne
movsb
out
cmp
add
rclb
xchg
lahf
jle
mov
jno
jo
aas
ja
call
mov
arpl
cmc
pushf
mov
adc
int
rclb
xchg
loopne
xchg
js
clc
sub
push
mov
add
sub
and
xlat
jne
mov
mov
lds
lcall
dec
mov
push
loopne
sahf
mov
fdivl
fstpt
dec
jns
mov
mov
push
inc
and
shl
xchg
notl
in
jecxz
movsl
xor
and
push
mov
cmp
decb
dec
out
adc
sub
jnp
mov
repz
fs
sbb
mov
mov
mov
pandn
test
add
cmp
mov
sar
sbb
xchg
pop
pop
or
cmp
and
pop
sub
outsl
scas
pushf
and
sub
outsl
cmp
jp
stos
add
lea
out
shlb
icebp
jno
add
cmp
fs
out
daa
ficoms
out
dec
and
xchg
adc
neg
shrl
fimull
push
movsb
xchg
lcall
jp
scas
or
and
test
sahf
adcb
mov
ret
inc
pop
gs
in
fimuls
sub
repz
movsb
jp
hlt
rorb
add
inc
add
inc
xchg
jl
repz
cli
jbe
sbb
jecxz
and
mov
test
std
xor
and
dec
outsb
mov
ret
xchg
in
cltd
pop
mov
pop
xor
cmpsb
pusha
jl
add
mov
daa
or
jbe
movsb
add
repnz
pop
jle
das
push
dec
sub
aam
movsl
clc
jb
aam
mov
add
mov
aam
xchg
dec
insl
daa
sahf
in
xchg
cmp
pop
int3
cltd
push
and
cld
daa
repnz
push
es
xchg
ss
pop
icebp
lea
push
test
loopne
mov
testl
out
add
mov
out
xchg
mov
int
je
pop
je
aad
ljmp
ficoml
stos
xchg
pop
cmp
mov
adc
sbb
jb
sti
fldl
cmp
sub
mov
push
ja
imul
das
cmp
add
sbb
mov
outsl
jnp
popf
dec
arpl
add
jns
sub
outsl
mov
mov
mov
pop
cmp
mov
or
daa
sub
sub
ret
loop
movsb
lea
jmp
xchg
or
mov
cmp
jne
incl
enter
aam
and
pop
shlb
and
test
mov
push
sbb
lret
fists
clc
inc
xchg
cmpl
mov
inc
into
inc
adc
sub
test
cmp
int
fnsave
js
lock
cltd
and
pop
ret
pop
ret
inc
insl
scas
xor
mov
mov
mov
pop
es
pop
cmp
cltd
dec
dec
mov
sbb
inc
cmp
adc
xchg
outsb
sub
imul
pop
mov
and
sub
and
out
adc
ror
lods
adc
or
in
jae
push
jmp
push
push
test
daa
repz
sub
rolb
fcompl
mov
fwait
scas
mov
sarb
in
ja
pop
or
fistps
xor
lods
scas
imul
pop
mov
outsb
fwait
jmp
push
pop
fisttps
jl
add
fiadds
fisubs
push
js
sahf
dec
icebp
sbb
adc
scas
adc
das
mov
mov
lock
or
sub
sbb
cmpsl
add
jecxz
fsubrp
pop
and
push
push
push
das
mov
jne
stos
lea
pop
sahf
push
push
ror
decb
lods
std
pop
fnstenv
es
dec
xchg
clc
jmp
mov
dec
mov
cmp
mov
popa
push
xchg
test
loope
cmc
jge
adc
inc
pop
xor
mov
mov
mov
mov
sub
enter
push
cmpsb
movsl
inc
in
dec
icebp
leave
inc
push
push
xchg
cmpl
mov
mov
iret
cmp
les
sub
scas
sub
inc
inc
lods
push
jae
mov
xchg
out
sbb
mov
je
sbb
rolb
jl
and
test
xor
int
xor
mov
sbb
mov
fwait
int
push
nop
cmp
mov
jno
and
fldcw
and
xor
sub
jbe
cmp
je
rcrb
lods
scas
cli
fnsave
ret
data16
push
int3
push
mov
scas
pop
jne
nop
call
mov
mov
ljmp
les
repz
out
push
ljmp
or
xchg
or
xor
lret
negb
imul
loopne
jecxz
or
pushl
add
inc
dec
sub
aas
ljmp
adc
jmp
push
mov
cli
iret
push
push
es
inc
add
adc
lods
mov
stos
data16
int3
dec
leave
sbb
and
lret
dec
push
jmp
and
aam
andl
mov
insb
ret
xchg
pop
xchg
aaa
push
prefetchw
mov
data16
arpl
mov
icebp
dec
fnstsw
in
addr16
push
sbb
pusha
enter
bound
pop
push
cmp
xchg
je
sub
lds
adc
mov
psadbw
or
add
mov
xchg
clc
fcompl
jo
aam
int3
jmp
xchg
inc
sub
adcl
and
xchg
add
mov
notl
daa
inc
mov
test
pusha
out
xchg
cmp
rolb
jmp
lret
xor
insb
jne
xchg
mov
je
inc
xchg
faddp
imul
jno
ss
stc
popf
scas
dec
mov
and
lcall
mov
mov
mov
rorl
ljmp
inc
test
jp
jnp
add
xor
rcll
stos
loopne
jo
lret
enter
sbb
mov
adc
fisubl
lods
ljmp
int
in
sbb
mov
xor
shlb
inc
insl
mov
fimuls
in
test
enter
lods
out
shr
jae
xor
sti
push
inc
push
jb
pop
mov
dec
in
cltd
inc
dec
leave
lods
outsl
mov
in
jbe
xor
adc
adc
dec
dec
pop
add
pop
out
enter
out
les
mov
enter
cltd
xchg
cmpsb
sub
test
push
xchg
jge,pn
pop
sub
mov
pop
adc
scas
jbe
mov
in
roll
rcll
inc
or
push
sbb
dec
mov
dec
jb
sbbl
dec
pop
loopne
mov
rclb
rcrb
js
ja
jo
loopne
lcall
jg
test
icebp
inc
xchg
cld
mov
push
dec
jmp
sub
adcl
aad
mov
icebp
bound
cmpb
pop
push
lods
call
jmp
mov
mov
fs
add
es
add
sub
xlat
push
push
push
or
mov
xchg
push
inc
xor
pop
ljmp
sub
clc
sbb
sti
push
or
adc
shrl
sbb
test
sub
fs
fndisi(8087
std
push
xchg
xchg
daa
movsb
add
in
das
add
xor
andl
shll
fcoms
mov
cmp
pop
je
xchg
push
xchg
scas
lret
xor
and
adc
push
push
xchg
jb
arpl
and
repz
sti
jg
arpl
mov
ss
aad
push
ljmp
jnp
push
icebp
dec
rcll
and
xor
sbb
leave
gs
shll
jbe
icebp
jno
pop
sub
pop
cmpsb
pop
sbb
pop
lds
mov
inc
lea
fwait
sbb
add
cmp
std
dec
dec
popf
callw
sbb
int3
cli
mov
adc
mov
idivl
mov
push
xchg
jmp
clc
add
das
or
jge
mov
cwtl
insl
ret
mov
ja
sbb
jecxz
jae
jno
pushf
jmp
mov
out
add
mov
mov
xchg
cmp
stc
sub
stos
xchg
jmp
jae
fwait
andl
arpl
int3
push
push
fnstsw
call
xchg
ja
inc
and
inc
pop
gs
sub
pop
pop
pop
jmp
pop
in
stc
jb
imul
cmp
pop
fists
sarb
into
loop
mov
test
ja
sub
push
or
pop
movb
iret
lret
mov
push
hlt
push
or
inc
cmp
xchg
dec
aas
xor
pop
pop
xchg
das
mov
add
insb
mov
or
jle
mov
cmp
sahf
pop
subl
popf
push
mov
pop
outsb
jb
inc
js
insl
mov
pop
fwait
add
dec
ljmp
sub
jo
and
andl
push
lahf
sub
push
lock
imul
or
lcall
sub
imul
xchg
push
mov
push
pop
xor
filds
lahf
aam
xor
xchg
shll
adc
sub
mov
loopne
cltd
popf
cmp
jo
lods
imul
js
imul
xchg
fidivl
cs
lcall
daa
movl
cmp
jmp
sbb
leave
add
sbb
push
dec
xchg
mov
aad
lds
loop
movb
sar
jbe
mov
fs
mov
pop
jecxz
jb
mov
and
lret
shrb
sub
cld
xchg
pop
fdivs
data16
loop
in
add
add
addr16
or
int3
jae
and
sbb
lret
push
lret
and
subb
mov
cmp
pushf
lcall
ljmp
fisubrl
mov
and
test
insb
xchg
and
lea
sbb
pop
ljmp
add
imul
mov
sbb
lret
dec
in
xor
push
aas
test
sahf
or
testl
cmp
push
pop
mov
add
out
pop
xchg
jl
pop
movsb
int3
or
movsb
int3
std
xor
cltd
sub
daa
xchg
inc
mov
div
mov
mov
jae
mov
mov
dec
inc
push
cwtl
xor
adc
mov
rcr
movsl
test
in
cmp
inc
sbb
jge
pop
pushf
outsb
int
add
sub
and
add
fstl
add
hlt
jle
jmp
mov
movsb
scas
icebp
xorl
lahf
adc
cmpsb
je
cmp
pusha
mov
add
add
shr
test
bsf
push
test
push
or
shrb
shll
or
inc
cmp
iret
std
out
iret
push
scas
push
xorl
outsb
shlb
inc
jle
xchg
push
jmp
dec
mov
mov
jbe
inc
jge
sub
jecxz
xor
jae
lret
sbb
in
aaa
sbb
rolb
add
xor
add
pop
jmp
scas
xchg
addb
les
data16
jo
mov
out
cmpl
sarb
pushf
mov
dec
pop
or
or
inc
sub
cmp
scas
orb
in
jbe
mov
sbb
out
add
sub
pop
cmpsl
jecxz
shrb
loope
aam
sahf
in
mov
inc
cmc
pop
add
and
lahf
push
icebp
xor
ret
addr16
adc
sbb
jns
insl
shlb
and
daa
push
call
fidivs
push
lcall
test
or
inc
xorb
inc
shrb
mov
inc
mov
push
ret
jp
mov
lock
mov
xchg
or
mov
add
jge
xchg
inc
and
scas
cmpsb
mov
mov
stos
cmp
push
sub
lret
add
in
or
shll
icebp
pop
push
push
inc
loopne
xor
lahf
mov
xchg
ret
push
data16
sbb
mov
xchg
sbb
test
jecxz
inc
call
mov
out
mulb
inc
push
sub
mov
test
leave
adc
scas
jbe
aaa
push
mov
adc
sub
js
cmpsb
add
dec
fidivl
aad
inc
dec
ficomps
std
or
and
mov
sub
call
push
mov
dec
jae
scas
pop
test
div
add
jecxz
jb
sub
faddp
cmc
andb
sbb
sbb
lds
xor
cmpb
ljmp
popf
or
inc
mov
loopne
push
jbe
push
push
icebp
xchg
sbb
jl
mov
out
shrb
push
jl
imul
dec
mov
test
jmp
or
cmpb
pop
data16
xchg
jge
bound
bound
and
fwait
adc
cmp
fs
add
mov
inc
dec
sub
add
push
stc
jl
dec
fwait
cmc
and
jne
or
aaa
mov
dec
xchg
loop
push
call
jne
stos
stos
pop
pop
adc
add
mov
add
shrb
cli
cld
push
lods
ss
mov
lret
push
jl
and
inc
fisttps
loope
iret
addr16
dec
cmp
push
sub
lahf
inc
or
adc
pop
push
stos
mov
dec
mov
jmp
xor
lock
sahf
pushf
movsb
leave
sub
add
out
stos
out
fnstsw
outsl
data16
sub
or
xchg
pop
xchg
push
movsb
testl
int
ss
push
stos
cmpsl
popf
lret
mov
xor
mov
jnp
lret
jb
xchg
sub
pop
mov
sub
or
sub
dec
scas
mov
pushf
aam
sbb
jae
push
lock
inc
cld
std
call
repnz
dec
das
insl
sbb
pop
sbb
fwait
push
adc
xchg
or
pop
test
sahf
clc
jg
test
jb
hlt
push
into
jp
outsb
push
cltd
xchg
pop
adc
jnp
jns
or
daa
jg
loope
cmc
xchg
fwait
dec
popa
mov
hlt
fwait
push
aam
stc
add
bound
fistl
repz
mov
sbb
jo
inc
lds
sub
outsb
fwait
je
dec
cmp
xor
fsubr
arpl
push
repz
mov
insl
hlt
mov
insb
dec
inc
xchg
test
pushf
mov
adc
pop
xor
inc
mov
sbb
adcb
inc
sbbl
cmp
in
add
mov
lods
fs
push
insb
mov
inc
arpl
dec
push
mov
std
sbb
div
lods
sub
adc
xchg
jecxz
icebp
sbb
test
jl
call
movsl
icebp
xor
dec
mov
shrl
cmpsl
adc
enter
mov
jle
loopne
push
cld
sbb
xchg
sti
push
movl
xchg
mov
outsb
and
idivl
add
mov
sbb
adc
jg
xchg
shlb
ds
sub
lret
mov
adc
push
cmpsb
cmpsl
push
aas
pushf
sub
testl
shr
sub
sbb
rep
mov
loopne
aaa
lea
mov
in
pop
mov
notb
inc
js
or
push
mov
stos
or
sbb
leave
in
les
aaa
xor
push
in
and
jl
dec
movsb
into
adc
ficoms
popa
add
inc
fadd
mov
adc
dec
push
hlt
call
add
addr16
jnp
int3
and
jns
je
xchg
cmp
inc
fsubs
xchg
arpl
xchg
jne
cs
lock
test
pushf
sub
sbb
lret
push
xchg
sbb
aam
imul
mov
icebp
push
adc
xor
pop
icebp
sbb
sbb
mov
xchg
es
jns
sti
pop
mov
popa
shl
mov
xor
in
adc
out
jmp
je
jo
pop
shrl
push
xchg
out
and
outsl
cmpsl
xchg
xchg
jmp
cmp
jne
sub
pop
scas
stc
and
adc
jb
setg
xchg
outsb
dec
push
pop
ret
push
call
mov
mov
and
mov
add
pop
loop
insb
test
xrelease
bound
push
or
shl
xlat
sub
cli
popa
mov
inc
push
cmpsb
or
cmp
in
push
jg
pop
xchg
pop
fldt
aam
cmc
dec
mov
subb
xor
or
adc
les
stc
pop
les
jns
pop
cmc
sub
xchg
add
sub
push
rcl
daa
xchg
or
and
xchg
xlat
and
push
or
push
or
jle
out
and
lret
shll
add
repz
rorl
inc
fs
cmpsb
pusha
push
pop
cmpsl
or
and
test
int
repz
jge
in
or
cwtl
cld
cmp
xchg
lea
scas
cmp
dec
lods
dec
push
sbb
pop
lret
jno
loop
push
or
icebp
and
test
movsb
lcall
push
jo,pt
ss
popf
lock
mov
cmp
sub
dec
push
adc
add
lret
push
and
and
scas
mov
add
mov
jae
xchg
in
and
and
andl
jmp
jmp
inc
xchg
lock
daa
xor
cltd
jecxz
dec
push
in
cmp
push
xor
jns
jne
test
and
fisttpl
pushf
adc
pop
jmp
rcrl
lock
sbb
imul
and
sub
push
lods
cli
push
push
inc
pop
mov
jae
adc
iret
iret
mul
mov
sbb
pop
jp
mov
jno
hlt
imul
icebp
and
std
dec
jle
pop
jmp
push
sarb
into
hlt
cld
jns
adc
ss
mov
scas
lret
sbb
out
imul
jnp
mov
mov
aad
push
sub
dec
hlt
daa
sbb
cmpsl
fstpt
mov
sti
int
mov
sbb
sbb
push
out
mov
fucom
jmp
mov
call
lea
sbb
xchg
cmpsb
popf
fidivl
mov
mov
mov
mov
scas
and
adc
je
sbb
dec
leave
aad
push
mov
or
js
and
mov
mov
jae
aam
push
inc
jae
je
or
and
push
add
mov
or
mov
inc
cltd
xor
jb
scas
sub
sarb
stos
bound
rorb
fucomip
adc
lret
mov
sub
inc
ret
fidivl
adc
sarb
pop
or
lahf
push
orb
fmull
inc
icebp
adc
in
mov
add
xor
xchg
fiadds
in
push
xchg
xor
imul
repnz
sbb
sarl
test
push
rorb
sbb
and
jns
bound
dec
cmp
test
or
jne
push
lds
add
call
sti
or
xchg
scas
or
mov
test
in
xor
sbb
pusha
pusha
addr16
cmp
and
out
jmp
mov
cltd
jo
jmp
jle
jns
arpl
or
push
rolb
sub
enter
mov
stos
mov
mov
test
adc
push
sub
pop
inc
inc
adc
mov
scas
jle
shl
add
jnp
xchg
into
pop
imul
jns
jp
sbbl
mov
adc
mov
gs
repz
out
fcoml
gs
pusha
sbb
mov
add
xchg
and
popa
jno
lods
aad
lea
push
popa
sbb
add
and
mov
jo
dec
mov
add
ret
notl
shlb
push
add
dec
bound
mov
sahf
push
mov
ja
fiaddl
add
shlb
jp
shll
push
icebp
aaa
push
pop
sahf
mov
xchg
add
fbstp
js
mov
lret
sbb
aad
scas
sbb
in
mov
push
pop
mov
xchg
add
mov
mov
dec
in
lods
push
mov
mov
in
repnz
mov
inc
pop
sahf
mov
mov
mov
and
sbb
arpl
mull
dec
inc
and
and
xchg
idivl
mov
clc
stc
dec
jne
repz
aam
mov
loopne
cmp
iret
sti
add
push
popa
push
je
ret
lcall
mov
arpl
in
dec
mov
out
mov
jae
ja
repnz
xorb
popl
aaa
mov
adc
sub
ficoms
in
pop
xor
ss
xchg
pop
cmp
sub
movsl
pop
ret
push
mov
pushf
mov
ja
xor
cld
repnz
inc
das
and
outsl
popa
dec
jge
ret
mov
and
jno
in
inc
fcmovne
je
xchg
or
call
cmp
icebp
sub
enter
repz
int
push
or
out
mov
dec
push
mov
xor
sbbl
pop
stos
sbb
pusha
pop
pop
sbb
ss
nop
mov
cmp
js
sub
push
pop
inc
xchg
add
loop
dec
add
in
push
cmp
ret
sub
jns,pt
xlat
std
scas
daa
aad
scas
sub
testb
lahf
test
stc
or
cmpsb
inc
jl
pop
testl
push
push
test
addr16
pop
push
aam
xchg
enter
test
repnz
sbb
xor
add
gs
dec
or
push
fidivrs
imul
jb
xor
bound
loop
add
sbb
mov
cmpsl
rcll
inc
sbb
js
cwtl
andl
mov
in
test
std
pop
adc
les
pop
test
sbb
mov
lea
repz
stos
sub
push
xor
dec
cld
dec
repnz
std
and
xchg
inc
and
push
dec
inc
stc
lret
xchg
in
pop
push
leave
repnz
test
pop
mov
mov
repnz
mov
test
or
mov
pop
movsb
push
mov
movb
mov
fiadds
add
or
stos
int3
lea
pop
push
ficoml
jge
sbb
das
lds
dec
aad
fistpl
mov
imul
enter
ficoml
inc
scas
mov
push
sbb
stos
stc
fcomp
jbe
lock
fsubrl
xchg
push
cmpsb
rorl
jge
push
add
lds
orb
inc
jecxz
dec
pop
mov
mov
push
sub
cli
mov
sbb
rcrl
arpl
mov
loope
jnp
outsl
aas
neg
gs
mov
cltd
cmpsb
sub
jg
pop
pusha
or
pop
frstpm(287
or
mov
insb
pop
adc
icebp
imul
jmp
cmp
cmp
jns
mov
mov
push
jle
mov
xor
push
mov
aam
js
mov
pusha
dec
cmp
mov
movsl
push
lahf
lahf
mov
cmpsb
pushl
mov
std
inc
lds
lock
cs
cld
data16
hlt
cmpsb
jge
inc
lea
or
in
add
dec
outsb
ret
pop
mov
out
call
daa
out
push
test
adc
mov
jo
or
xor
xchg
in
cmp
and
ds
pop
xor
fucomp
lock
or
cmpsl
pop
js
enter
out
dec
pop
push
int
enter
mov
shrl
iret
loope
movsl
insb
int
mov
mov
pop
and
or
sahf
jmp
cmp
js
movsb
enter
mov
dec
pop
rol
ret
sbb
xchg
inc
rorb
dec
mov
arpl
xor
sub
dec
loopne
fidivs
add
hlt
lock
mov
adc
jns
je
int3
jmp
push
inc
std
jl
pop
inc
and
pop
mov
int3
divb
stos
stc
imul
push
mov
mov
cmp
push
test
jecxz
mov
mov
push
pop
xor
add
push
and
pop
sbb
dec
mov
imul
cwtl
adc
mov
mov
xchg
xchg
sbb
hlt
push
ljmp
sbb
arpl
lahf
int
inc
mov
pop
mov
arpl
lods
out
or
inc
lods
lret
inc
bound
lock
les
ror
repz
in
sti
jns
xorb
aad
dec
mov
bnd
popf
mov
pop
inc
and
int
cmp
popl
cltd
ret
and
sub
repnz
daa
cmc
jl
adc
fcomps
sbb
sub
push
hlt
outsb
stc
mov
daa
rcrb
jns
sbb
cmc
cltd
shlb
mov
es
adc
add
jg
ret
ljmp
sar
lret
mov
outsb
or
mov
pop
sbb
add
bound
lods
mov
cmp
pop
xor
pop
jae
rcl
sub
lods
out
shll
pop
pop
dec
in
loopne
sarb
ret
add
xchg
iret
test
xchg
xchg
in
aaa
aad
jo
cs
push
ljmp
mov
and
imul
hlt
ds
cwtl
xor
jp
vunpckhps
mov
or
xchg
xchg
add
dec
inc
outsb
scas
sahf
push
xor
xor
lret
sbb
iret
sbb
out
jo
push
jns
addr16
push
xor
mov
and
inc
pop
cli
inc
push
clc
in
loopne
stos
stos
adc
xorb
lods
hlt
xchg
lods
lods
xor
std
ss
jmp
jecxz
adcb
mov
subb
int3
repnz
mov
jl
jle
dec
push
dec
mov
loopne
and
pop
pop
add
sub
imul
add
add
mov
div
inc
cltd
adc
sub
sbb
lods
dec
inc
xor
push
fwait
outsb
jp
popa
scas
jns
mov
inc
cmp
dec
xlat
shll
xor
and
cmp
je
stos
cmpb
pop
xchg
les
out
gs
pop
movsl
ljmp
jo
aam
in
push
in
imul
sub
mov
js
jb
mov
add
hlt
iret
mov
scas
pop
loope
mov
fdivrp
icebp
add
xchg
popa
mov
cmc
and
lcall
in
sbb
outsb
mov
or
cli
icebp
divb
jl
js
nop
and
push
cmp
pop
imul
insl
xor
and
mov
sbb
xor
sub
and
cmp
cmc
lret
mov
push
lds
sub
cwtl
bound
and
push
mov
jge
mov
push
cwtl
lret
xor
and
jae
pop
imul
in
mov
lahf
daa
inc
dec
jle
jle
push
leave
sbb
daa
lret
movsl
imul
push
cltd
test
test
enter
pop
dec
dec
ds
lret
mov
pushf
call
push
fadds
jg
pop
lods
and
sbb
cmpsb
xor
ss
lds
sub
and
lahf
mov
shll
jo
xchg
jecxz
pop
inc
sbb
mov
out
pop
stc
xchg
inc
adc
mov
jne
shll
lods
fcmovne
mov
lea
add
adc
or
ljmp
lds
in
inc
popa
jno
out
or
lret
imulb
push
movsl
mov
cmpsl
push
pop
xchg
jnp
stos
sbbb
lods
and
mov
push
inc
or
sub
push
rcrl
sbb
lahf
jns
lds
fmull
mov
add
lods
mov
adc
sbb
pop
cmpsl
mov
stos
mov
fcompl
sub
divb
push
add
icebp
nop
mov
lahf
pushf
scas
sahf
cwtl
daa
dec
inc
dec
sbb
push
aam
jne
pop
pop
rcrb
push
jp
cli
sarb
bound
outsb
rcll
andl
out
rcrb
insb
pushl
movsl
pushf
fldl
inc
cs
ja
int3
or
lea
fs
je
out
cmp
adc
insb
cld
and
js
jae
cmpb
fdivrl
call
xor
and
sub
pop
dec
or
inc
dec
pop
int
in
adc
cmpsb
adc
mov
lods
sarl
mov
es
outsl
dec
xchg
fsubl
aas
push
mov
and
or
sub
fucomp
xchg
lret
xor
into
and
dec
cmpsl
sub
scas
outsl
mov
cwtl
inc
ficomps
sub
stc
popa
mov
and
or
imul
es
mov
xlat
outsl
fiadds
jge
mov
pop
sti
test
xor
xor
das
sahf
icebp
lods
popl
imul
or
xor
cmp
add
sahf
mov
and
jbe
cmp
popf
add
scas
sarl
add
lret
pop
mov
cmp
daa
icebp
lods
lea
or
or
test
fcoms
lcall
test
lret
dec
dec
aaa
mov
or
int3
pop
jg
or
mov
and
lret
mov
sbb
insb
pop
mov
dec
ds
roll
xchg
lret
sahf
and
jle
pop
dec
mov
xchg
stos
jne
xchg
ljmp
ret
dec
dec
adc
out
lret
std
lcall
mov
aad
jp
in
mov
cltd
icebp
adc
scas
idivl
adc
dec
sub
sub
dec
ret
or
jp
into
arpl
jecxz
sbb
sbb
cmp
adc
test
sarl
sub
push
out
sbb
cld
xchg
sub
stos
int
adc
in
cmpsb
les
xchg
push
stos
pop
mov
mov
insb
sub
outsb
testb
inc
fbstp
cmp
outsb
in
adc
test
loop
mulb
mov
xchg
fidivl
insl
mov
adc
jno
pusha
lahf
xlat
push
push
push
hlt
arpl
and
pushf
xor
lahf
mov
dec
cltd
ret
cmp
xchg
fcompl
das
or
mov
cwtl
aaa
repz
lods
mov
lahf
pop
scas
xor
iret
dec
popa
mov
jp
add
imul
jg
inc
or
loopne
mov
xchg
lods
inc
aam
nop
pushf
fidivrl
mov
inc
xchg
adc
lods
pop
jae
adc
jbe
adc
std
jns
xor
xor
pop
mov
cmp
mov
in
xchg
ljmp
push
repnz
leave
pop
mov
shll
sbb
push
lahf
or
cmpb
repz
adc
into
mov
scas
xorb
xor
jae
cmc
sbb
leave
jp
ljmp
sub
mov
dec
cmc
fs
call
ret
push
ficoms
in
push
mov
out
or
and
or
fmulp
and
sub
popf
and
subb
adc
jge
and
je
adc
mov
inc
loopne
in
cld
lock
and
popf
sbb
pop
lret
call
imul
int
mov
or
mov
adc
mov
jo
xchg
bound
pop
scas
loope
hlt
insb
notl
lock
inc
push
fisttps
jmp
cltd
clc
inc
idivl
xor
loopne
sbb
pop
mov
cs
sub
adc
inc
or
les
inc
mov
push
popf
xchg
push
pop
and
sti
pop
mov
ja
mov
mov
cmpsl
inc
cmc
xchg
dec
xchg
lret
cltd
push
mov
inc
rcll
loop
mov
xorb
push
leave
hlt
lcall
jno
add
ss
imul
mov
popf
lods
testb
push
xchg
lret
ret
xchg
lret
insl
in
pop
jg
xor
sti
jl
push
je
xchg
or
out
stos
jl
repz
int3
enter
lea
adc
cmc
jecxz
das
push
bound
pop
or
mov
cmp
sti
push
cli
jno
xchg
loopne
mov
xor
or
inc
pusha
sub
lcall
dec
add
xchg
or
jge
pop
inc
test
mov
jp
mov
jbe
and
add
add
in
out
push
jnp
rcrb
sarb
xlat
dec
mov
shll
repz
inc
rol
cld
js
jmp
inc
sbb
xor
sub
cmp
push
inc
jp
adc
mov
add
sub
aaa
adc
dec
sbb
push
cmp
int3
cmp
cmpl
popf
shlw
fdiv
mov
and
and
cmpsb
and
jo
pop
pop
lds
pop
sub
orb
sahf
popa
lock
ja
aad
pop
lret
popa
fimull
rcl
adc
xor
jp
arpl
jnp
jge
dec
mov
mov
xor
fucomip
dec
sub
gs
fisttps
xchg
aad
aam
in
sub
pop
fdivl
ds
push
add
cmc
add
aad
movsl
rcrb
push
adc
and
mov
ja
xchg
cltd
nop
das
mov
dec
fmull
in
outsb
or
adc
cld
insl
jno
dec
call
into
ss
in
negl
movsl
repz
jns
mov
outsb
push
dec
and
lods
xlat
inc
mov
push
jp
add
imul
cmp
pusha
enter
push
scas
inc
and
stos
or
add
sbb
pop
jae
bound
push
mov
dec
sbb
ror
sti
imul
ja
jp
cltd
push
xchg
cmp
mov
dec
insb
mov
leave
xchg
bound
out
sti
push
aad
sbb
mov
or
in
jb
jmp
xchg
mov
pop
dec
sub
shll
cmovs
mov
sahf
sti
add
pop
jbe
hlt
mov
repz
shl
inc
jno
dec
pop
dec
aas
mov
mov
stos
cmp
adc
xor
inc
push
fdivs
jnp
dec
jne
pop
aaa
out
js
xor
and
dec
pop
add
xchg
pop
pop
popa
inc
sahf
sbb
inc
adc
fstpt
shrl
insl
inc
push
xchg
addr16
fisttpll
mov
movsl
xor
jge
sub
andb
ret
mov
cmpsl
test
mov
shl
lcall
dec
jne
test
xchg
in
and
jbe
pop
sub
jae
cmp
leave
call
in
add
jbe
jb
mov
out
or
arpl
mov
jae
xchg
jmp
repz
pop
adc
rcll
fxam
and
xor
mov
iret
xchg
add
test
dec
cmc
add
in
test
rol
lock
and
sub
mov
cmc
xchg
lea
ss
mov
addr16
pusha
add
repz
jmp
aam
mov
jl
pushf
xor
clc
mov
lea
pushf
sub
pmaxsw
packssdw
out
xchg
inc
sub
or
xchg
add
fldenv
dec
lahf
push
jmp
xchg
das
cmp
mov
stos
xchg
out
adc
inc
xchg
sub
pop
xchg
sarl
xchg
loop
jb
sbb
cmp
rorb
mov
invlpg
jnp
stos
add
xchg
pop
lds
stc
and
push
repnz
fs
pop
leave
sbb
js
pop
in
or
inc
stos
pop
pop
push
nop
sarb
cmp
ja
je
xchg
xorl
in
ret
lret
pusha
sbb
les
sub
dec
in
dec
dec
int
stos
call
subl
out
fcoms
ljmp
and
inc
inc
mov
add
sahf
imul
es
cmp
clc
sub
inc
xchg
movsl
sub
xlat
xorb
ljmp
scas
mov
push
jbe
pop
mov
outsb
cltd
arpl
or
arpl
cmp
rolb
sub
adc
xor
cmp
xlat
mov
dec
sbb
les
fs
mov
sub
pop
and
xchg
lcall
jp
in
adc
sbb
xchg
xlat
pop
mov
ss
and
pop
mov
ljmp
rclb
imul
xor
sub
push
push
in
outsl
push
mov
push
inc
jno
xchg
lods
test
inc
lock
jecxz
movsb
mov
into
mov
mov
or
shll
pop
sub
clc
cmp
jne
fs
jl
cwtl
ror
push
lret
jmp
test
lds
das
adc
push
arpl
cmpsb
scas
into
insl
vorps
mov
jno
jno
cs
cmp
pop
scas
pop
clc
dec
dec
ljmp
cld
pusha
fldt
cmpsl
ljmp
aad
dec
adc
je
inc
jbe
int
iret
out
cwtl
mov
std
push
sub
jl
dec
popf
stos
cmp
popa
jnp
adc
insb
std
dec
sar
sbb
jnp
fldt
cmp
mov
mov
xchg
sahf
sbb
sti
in
iret
aam
lds
lahf
addr16
fwait
adc
mov
aaa
leave
int
shrb
js
movsl
sti
cs
mov
mov
enter
lods
sbb
loop
repnz
mov
push
lods
jp
and
das
dec
mov
mov
push
aas
xchg
add
xchg
jg
cmp
push
inc
aad
std
inc
lods
push
data16
inc
adc
mov
pop
fwait
adc
ljmp
dec
scas
sub
scas
sub
and
mov
out
mov
jo
insb
jae
mov
stos
cmp
push
es
dec
nop
mov
idiv
dec
cmpsb
push
sub
aad
int
inc
sbb
pop
stc
xor
pop
mov
lcall
jne
out
add
into
test
cmp
bound
das
jl
pop
imul
jle
sbb
push
scas
pusha
lcall
in
loop
ret
or
inc
in
mov
lea
pop
dec
add
test
jns
in
shlb
sub
fistl
xor
out
sub
ret
call
or
xor
and
lods
mov
loope
sbb
lcall
cli
jae
xor
repz
adc
out
dec
in
cmp
nop
iret
inc
jecxz
rcl
scas
test
dec
and
sub
cltd
movsl
lods
pop
int
fldl
mov
sub
aas
jp
in
mov
sbb
xchg
scas
cmp
out
mov
jl
mov
jnp
xchg
aaa
pop
push
rol
xor
xor
sti
enter
push
sbb
aas
jge
xchg
hlt
sub
sub
mov
les
mov
jns
xor
les
mov
lcall
pop
push
mov
pop
test
test
pop
leave
sub
out
test
dec
mov
movsb
aas
out
ljmp
scas
sub
add
shl
cmp
pop
push
add
loopne
cmp
xor
gs
pop
popa
lods
mov
mov
pop
or
adc
lea
rclb
mov
testl
stc
ja
in
ja
sub
or
or
mov
adc
pop
sub
add
fdivs
pop
jl
sub
leave
imul
jae
cmp
sub
fadds
ljmp
test
sbb
and
data16
xor
enter
pusha
xchg
out
flds
inc
mov
jge
jb
cltd
test
orl
dec
lea
dec
mov
adc
mov
sub
cwtl
mov
inc
scas
sub
pop
in
sbb
lret
jo
bound
mov
imulb
scas
inc
cmpsl
rorl
inc
popf
mov
cmc
mov
fisttpll
mov
xchg
ja
bound
pmovmskb
cmc
ja
mov
add
cld
jo
test
adc
lret
mov
mov
xchg
push
dec
push
sbb
dec
stc
sbb
leave
add
sahf
and
ror
daa
inc
pusha
xor
xchg
imul
adc
faddp
clc
rclb
mov
out
cmove
pop
mov
push
arpl
pop
xlat
into
adcl
xor
push
sub
mov
and
iret
xor
in
daa
je
and
dec
cmpsb
popf
movsl
popf
inc
popa
mov
dec
imul
fildl
inc
dec
cmp
pop
cltd
push
pop
enter
xor
xchg
mov
scas
loopne
aam
jbe
cmp
push
adc
repnz
cmc
or
xor
mov
imul
push
sub
aas
xchg
cmp
jmp
loope
in
mov
lret
popa
aaa
sbb
aad
xchg
mov
daa
mov
xchg
enter
cli
shr
mov
mov
mov
cmpsl
out
adc
pop
js
and
dec
stos
mov
mov
jo
mulb
xchg
fldt
aad
xlat
xchg
in
imul
xor
or
push
sarl
fisttps
jbe
lock
inc
addb
int
orb
mov
dec
in
mov
mov
aad
movsb
push
pop
jae
add
jp
mov
shl
dec
xor
add
push
clc
mov
push
or
outsb
orl
mov
popa
pop
cmp
imul
push
mov
mov
pop
mov
fcmovbe
dec
jmp
inc
mov
mov
fcomi
adc
dec
cmp
ret
mov
outsb
and
adc
repz
push
mov
push
push
jae
in
xor
data16
pop
test
push
insl
sbb
int
push
in
dec
fdivrl
xor
cmp
push
or
push
add
sub
dec
and
or
ljmp
loope
inc
mov
jge
dec
test
and
sti
jle
out
ja
lahf
pop
cmc
jmp
in
fistl
mull
popa
cmp
pop
hlt
je
sub
sbb
jge
mov
insl
aad
jb
lods
loope
outsb
mov
xchg
icebp
dec
in
cmp
jle
movsb
imul
pop
or
jns
jmp
scas
cli
idivl
ja
test
inc
out
mov
sbb
mov
add
cwtl
push
inc
mov
shrl
mov
cmp
mov
loope
push
xor
clc
stos
pop
xchg
mov
lcall
adc
imul
adc
hlt
out
lods
and
jge
into
xor
jno
push
ja
pop
push
jns
sub
sbb
movsl
add
jge,pt
fistps
inc
and
xlat
xor
mov
sbb
mov
icebp
xchg
loope
inc
addl
in
js
xchg
mov
push
or
mov
cmp
jecxz
out
inc
pop
scas
xchg
inc
adc
and
push
jae
cmpb
mov
sbb
aas
es
xchg
imul
pop
pop
ret
pop
stos
pop
out
xor
pop
add
sbb
clc
xor
data16
add
test
jecxz
iret
leave
cmc
out
dec
fistps
cmp
lcall
cmp
leave
imul
fwait
iret
test
add
es
add
movsl
cmp
push
pop
xor
xlat
pusha
mov
push
imul
push
out
inc
mov
adc
fldlg2
dec
push
adc
fcmovnbe
rcr
push
mov
movb
imul
sub
fimuls
cwtl
fcomip
fsts
jl
pop
aas
mov
out
fmuls
dec
mov
jnp
sub
sbb
fmul
cmpsl
outsl
and
call
out
mov
in
xchg
sub
and
mov
testl
iret
mov
add
mov
lea
leave
iret
outsl
or
mov
inc
jns
sbb
cld
jecxz
cmpsl
add
dec
sub
sub
loop
leave
ret
inc
jmp
or
mov
xor
loopne
and
fisubrl
test
mov
rcr
xor
in
loopne
sbb
mov
xor
cltd
push
mov
sbb
jae
cmc
sti
ret
int3
divb
out
adc
fdivs
pop
stos
dec
out
and
daa
dec
cmp
jecxz
daa
push
fiadds
mov
and
and
stos
adc
fs
dec
les
pop
inc
ljmp
mov
lods
adc
in
push
add
xor
add
test
les
jb
fdivrl
insb
stc
inc
aaa
cltd
pop
pop
call
and
adc
pop
inc
mov
and
jb
addr16
xchg
into
out
or
jmp
cmp
into
cwtl
jecxz
sub
push
or
dec
cmp
decb
sbb
jno
mov
insb
or
fists
ds
ja
sub
ljmp
call
shrl
sub
push
or
rcr
push
int3
aad
aad
pop
mov
scas
xchg
jb
mov
or
lock
or
inc
in
pop
mov
cmpl
cmc
lds
inc
arpl
repnz
jbe
mov
loopne
ret
lcall
and
and
cmp
xor
loop
setb
pop
ljmp
inc
sbb
xlat
inc
stc
push
mov
mov
fidivl
fs
scas
stos
test
jnp
lret
adc
push
sbb
pop
lds
and
adc
lahf
xchg
xor
call
fstps
shlb
adc
jp
les
mov
lret
pop
ljmp
push
aaa
lret
lahf
and
push
lods
ja
ds
outsl
add
fiaddl
jmp
pop
and
and
popa
aad
call
or
or
mov
fsubrs
arpl
mov
fists
inc
jmp
push
loope
mov
pcmpeqd
sarl
and
cmp
push
aad
jecxz
push
sbb
iret
push
xchg
ja
mov
adc
mov
sbb
or
xchg
pop
fistps
out
int3
int3
or
sub
aad
jmp
ret
lea
mov
mov
std
push
cmpsb
outsl
sti
iret
mov
in
fnstenv
adc
push
mov
xchg
push
test
inc
adc
mov
pop
xor
mov
pop
hlt
out
fstps
movsb
jp
cmp
outsl
sub
test
xchg
pop
mov
inc
popa
mov
popa
shlb
push
jg
push
pop
xchg
out
jl
out
nop
add
adc
push
es
addr16
stos
inc
inc
imul
cmpsl
loop
dec
cmp
clc
xor
pop
pop
mov
stos
jg
aad
xor
mov
push
icebp
imul
ljmp
imul
sub
adcl
repz
pop
jl
and
cmp
push
add
mov
insl
xor
pop
xchg
mov
popl
pop
push
push
fwait
aad
xchg
inc
and
outsl
das
or
fs
xchg
cvtps2pi
lock
out
push
ficomps
dec
dec
mov
and
push
mov
dec
push
enter
add
jne
cmp
mov
ljmp
cmc
insl
lock
scas
jg
push
and
ss
cmc
and
lock
fisttpll
enter
ds
sbb
xchg
xchg
xchg
pop
ljmp
sti
in
inc
fisubrl
icebp
sti
orb
push
push
pusha
inc
or
in
xlat
mov
mov
mov
lcall
push
push
sub
je
call
cld
mov
int3
xchg
mov
cmp
sub
xor
jle
mov
aam
mov
push
lret
test
int3
xchg
mov
inc
lcall
xchg
es
mov
xchg
or
pop
inc
ret
lret
mov
mov
loope
push
dec
inc
cmp
push
nop
std
int3
sub
dec
sbb
test
rcll
mov
add
icebp
xchg
and
and
push
xor
ss
pop
nop
hlt
lret
push
pushf
fs
push
aam
xchg
cmp
out
pushf
sub
cmp
push
push
push
ljmp
add
in
jb
cwtl
outsb
insl
and
das
pop
ret
bound
push
lret
rcrl
paddb
bound
in
mov
les
sub
sbb
inc
inc
inc
jmp
idivl
sbb
sti
jnp
decl
dec
mov
xlat
mov
jbe
lcall
and
loope
das
adc
nop
shlb
fbstp
les
xor
fwait
arpl
negl
add
push
adc
in
bound
ja
mov
adc
sahf
sar
mov
adc
or
inc
jo
and
push
xor
pop
sub
push
dec
ja
adc
test
xor
call
xlat
sbb
repz
push
cmp
inc
cs
enter
dec
addb
movsb
sub
mov
int3
push
inc
xchg
xor
xchg
pop
adc
sahf
mov
fmul
in
sub
lret
sbb
fdivrs
push
inc
les
sbb
mov
pop
mov
push
test
mov
sub
ss
jmp
and
lds
xor
arpl
push
xchg
rcll
push
inc
push
fwait
mov
mov
jns
mov
add
dec
sahf
or
jecxz
adc
lea
mov
xor
push
mov
mov
into
insl
loop
pop
lock
mov
ja
pop
loopne
mov
movsb
sub
mov
mov
pusha
push
jns
das
das
jle
fidivrl
rcrl
repnz
sbb
inc
pop
enter
or
cmp
jge
mov
or
jmp
and
movsb
xor
mov
jge
xor
inc
iret
mov
jl
push
lods
xchg
clc
out
out
push
ss
lds
lods
push
xor
scas
cmp
jae
bound
xchg
rorl
add
repz
push
mov
dec
and
mov
or
je
hlt
dec
leave
inc
scas
mull
leave
pop
pop
cli
sbbb
cli
add
in
and
js
mov
stc
mov
test
ret
cmp
mov
xor
cmpsb
xchg
cmp
dec
inc
test
xor
mov
xor
push
stos
shlb
lcall
push
jnp
and
mov
mov
nop
arpl
xor
fsubl
xchg
jo
jno
scas
test
xor
popa
les
xor
test
addl
xchg
add
pop
xchg
js
pop
adc
out
jbe
sti
scas
xor
ja
mov
pop
cs
fldenv
and
es
pushf
in
sar
ljmp
subl
jae
mov
cwtl
data16
movb
ret
cmp
icebp
pop
adc
lods
mov
in
mov
or
and
xchg
in
pusha
ret
push
into
jns
je
pop
mov
jecxz
das
ds
and
in
adc
dec
xor
pop
pusha
cmp
jmp
cmp
aas
cwtl
adc
in
or
add
jns
push
or
mov
push
adc
push
or
sub
shlb
cmp
inc
mov
mov
out
and
repnz
mov
mov
mov
cli
push
xchg
mov
xchg
push
mov
fwait
std
fisttpl
and
mov
mov
fisubl
mov
movsb
and
sbb
cmpsb
out
leave
dec
push
inc
cmpsl
lret
aaa
xor
pop
jbe
xor
imul
in
sbb
fildll
repnz
mov
mov
push
nop
daa
stos
pop
repnz
clc
jno
es
movsl
push
push
add
cmp
dec
adc
dec
ljmp
push
in
daa
mov
jecxz
push
popa
pop
xor
mov
mov
test
sahf
and
int
xchg
push
jbe
js
inc
ficompl
and
cmpsb
pop
fnstenv
xlat
and
stos
dec
imul
dec
aas
push
into
nopl
pop
dec
scas
xchg
addr16
int3
mov
push
jg
ret
aaa
call
push
or
sbb
cmpsb
sbb
sbb
push
sub
jmp
add
mov
in
cmp
punpckhwd
sahf
cs
addr16
cmp
popf
mov
repz
stos
dec
push
cmpsb
add
xchg
mov
pusha
jno
or
dec
lds
loope
hlt
xor
sbb
fiadds
fwait
push
xlat
mov
lock
jbe
lahf
repnz
sub
je
xor
arpl
in
dec
lods
lahf
inc
push
pop
fstps
dec
out
push
mov
xchg
push
or
mov
insb
jg
dec
dec
imul
das
stos
movsl
adcl
cmp
push
jge
leave
mov
and
aas
clc
and
mov
jns
add
xchg
jecxz
not
add
xor
mov
or
sbbb
testb
lret
cld
into
jns
movsl
add
loope
pop
fs
data16
add
xor
cmp
mov
cmp
js
sbb
pop
inc
mov
ret
mov
sub
add
ret
lods
adc
and
arpl
stos
pop
in
iret
pop
sbb
jecxz
daa
push
sub
cwtl
sbb
cmpsb
mulb
clc
insl
faddl
pop
aas
aaa
push
hlt
pop
adc
pop
adc
out
dec
lea
inc
lock
clc
dec
fimull
fnstsw
scas
call
adc
cs
into
std
mull
test
icebp
nop
sarl
dec
xchg
mov
inc
lret
imul
cmp
pop
push
jge
inc
add
push
or
xchg
movsl
and
das
mov
pop
fdivrl
lea
cmpsl
jnp
add
pop
jae
arpl
cli
adc
call
add
or
xchg
out
scas
leave
dec
push
xchg
ljmp
mov
lock
shlb
ret
dec
inc
adc
or
idivb
aaa
jo
sub
test
xchg
mov
adc
clc
xor
or
jmp
sbb
inc
popa
xor
scas
mov
xchg
fs
mov
xchg
in
insl
push
int
cmp
sub
lods
cmpsb
hlt
cltd
pop
inc
test
popf
or
xchg
pop
out
lret
xchg
in
sti
pop
add
dec
fdiv
lret
jmp
enter
sub
cmp
cld
xchg
add
cmp
mov
or
cmpsb
push
mov
xor
inc
jns,pn
nop
inc
cli
fcoml
fdivs
adc
pop
es
lock
test
jge
into
xor
xor
or
mov
inc
sub
adc
shll
xchg
aam
nop
std
adc
mov
arpl
cltd
idivb
mov
mov
nop
mov
fucom
add
or
pop
enter
dec
and
into
iret
mov
comiss
in
mov
loope
mov
leave
stos
cmp
add
mov
cmp
and
sub
xchg
jmp
mov
stc
sub
xlat
and
lea
pop
mov
mov
xchg
aas
fcmovu
pop
outsb
xchg
mov
sbb
mov
in
dec
aad
pop
push
aaa
add
ret
and
jmp
popf
cmp
lcall
ds
mov
in
mov
xor
cmp
jmp
cmp
shl
mov
mov
fcomps
adc
test
or
xor
jo
stos
imul
out
dec
xchg
mov
sbb
add
or
mov
mov
ret
xor
pop
pop
dec
and
iret
xchg
cmp
lods
stc
mov
mov
pop
fnstsw
jecxz
xchg
sub
push
popf
sub
ss
push
pop
push
cmp
push
bnd
inc
clc
imul
adc
mov
scas
xor
xchg
cmp
cmc
sbb
adc
cmp
subl
stc
push
out
mov
and
cmp
bound
jnp
lock
out
adc
lcall
cmp
cld
xchg
testl
mov
xor
scas
push
xor
sub
imulb
dec
jecxz
loop
rorb
addl
cltd
ljmp
pop
mov
dec
insl
jne
stc
nop
push
ret
add
xchg
lods
dec
inc
dec
or
test
addb
or
int3
gs
std
push
mov
xchg
sub
ss
jl
daa
mov
xlat
cmp
cmp
stos
xor
lds
icebp
hlt
mov
and
imul
push
sub
push
inc
sub
xorb
cs
aaa
cmp
jnp
stos
imul
cwtl
out
in
xsha1
cmpsb
leave
cmc
and
sbb
mov
adc
jmp
fiaddl
arpl
cwtl
mov
scas
cmp
pop
inc
jnp
cmp
mov
cli
aas
inc
and
adc
mov
int
call
jo
loope
in
mov
popf
mov
xor
mov
push
int3
add
xchg
cmp
push
dec
or
mov
jnp
mov
mov
mov
frstpm(287
xchg
loop
xlat
xchg
lds
loop
jo
outsb
mov
stos
cmp
gs
xchg
sub
jle
and
out
and
mov
jnp
pop
sbb
or
flds
aam
int
scas
sub
add
loop
push
cltd
xlat
ficoml
lods
sbb
pop
inc
sub
aad
ret
cld
mov
jecxz
scas
pop
pop
inc
bnd
dec
in
xor
stos
and
test
adc
es
add
sbb
iret
daa
lcall
mov
jnp
mov
or
shlb
mov
loope
xchg
test
cli
xor
mov
adc
pop
cmp
adc
jo
adc
mov
lods
sbb
pusha
lcall
mov
pusha
sbb
loop
sarl
xchg
into
push
sub
push
rclb
test
movsb
mov
inc
fadds
or
mov
cli
outsl
aad
leave
xchg
out
loope
inc
fistpl
push
lahf
scas
pop
insl
add
clc
sub
fistpll
stos
dec
ja
mov
jns
out
mov
mov
stos
pop
lcall
dec
sbbb
mov
sar
shl
lods
lcall
push
jmp
mov
mov
test
rorb
fldcw
jecxz
adc
orl
lret
xchg
movsl
sub
and
incb
xor
pop
xchg
add
add
test
mov
scas
lahf
push
loop
inc
bound
add
daa
cmp
jno
lret
pushf
inc
add
mov
or
cmp
test
cs
mov
out
in
mov
pop
or
lods
stc
lds
push
and
dec
das
nop
inc
aas
cmpsb
fmulp
and
push
jmp
stc
or
or
inc
jne
ret
lods
cmpsb
js
or
out
dec
das
repnz
lea
imul
mov
or
into
xor
rcll
and
ja
lea
inc
push
outsl
mov
push
nop
lret
xor
mov
push
test
pop
test
sub
inc
add
cmc
push
stc
dec
jg
pop
xor
bound
inc
dec
jecxz
sbb
popa
fcoms
dec
subl
lcall
gs
mov
les
cmpsl
mov
adc
adc
stc
pop
xchg
sub
add
add
or
inc
mov
ljmp
insl
out
loope
mov
mov
insl
ss
push
and
push
testb
ret
xor
imul
mov
adc
nop
inc
sub
lock
cmp
jmp
push
adc
and
jge
cmp
data16
in
push
mov
and
add
repnz
sub
stos
jns
addr16
dec
jno
or
mov
pop
cmp
outsb
into
pop
inc
loope
xchg
mov
iret
push
pusha
int
mov
jg
jmp
push
leave
adc
mov
jne
push
xchg
inc
sti
sarb
and
fstl
sbb
push
enter
jbe
out
cmp
push
dec
test
pusha
xor
sbbl
lret
ret
adc
movsl
fisttpll
sarl
add
mov
add
dec
ret
cld
dec
xor
add
pushf
jnp
sbbl
fwait
outsl
xor
test
pop
mov
sbb
negl
push
shrb
xor
pop
mov
xor
es
leave
or
hlt
pop
and
jl
mov
push
out
data16
jns
push
mov
or
sub
jg
xlat
mov
mov
dec
rcrl
mov
pop
out
push
adc
push
fmul
inc
popf
in
movsb
lods
inc
add
in
iret
lahf
cli
pop
out
cmp
cmc
sbbb
dec
cmp
addr16
inc
in
daa
lock
je
mov
call
lcall
test
and
sbb
dec
xchg
cmp
push
push
sbb
cmp
adc
mov
xor
testb
movsl
out
push
adc
adc
ss
sbb
movsl
dec
jno
outsl
xchg
repz
xchg
ja
es
inc
jnp
mov
jne
sbb
xchg
cmpb
xchg
jb
in
fisttpl
sti
push
and
das
jo
dec
inc
xor
pushl
xchg
decb
movsb
dec
sbb
mov
aas
cwtl
imul
addl
jge
jp
pop
int3
xor
inc
in
sti
testb
or
push
mov
xchg
or
xchg
aam
mov
or
test
popa
ud0
cltd
mov
pop
cwtl
inc
cmpsb
shlb
test
cmp
inc
jge
mov
push
mov
into
in
adc
aad
mov
sbb
cmp
pop
add
lods
scas
and
adc
push
in
rolb
jmp
out
and
fldcw
push
imul
loopne
mov
test
ficompl
xchg
adc
push
xor
loope
arpl
andb
pop
push
call
insl
test
hlt
cmpsl
out
jmp
push
push
jp
dec
add
push
popf
sbb
inc
push
add
mov
jo
sahf
movsl
dec
push
pop
out
pop
sahf
cmp
gs
fbld
sbb
sub
lret
cmpsb
ja
dec
hlt
or
gs
dec
mov
pop
div
adc
adc
dec
insb
pop
push
out
imul
rclb
rol
mov
mov
outsl
insb
xchg
movsb
fisttpll
scas
insb
push
push
sub
xchg
mov
push
pop
sbb
push
sub
add
fxtract
adc
pop
sub
mov
cmp
mov
jb
out
cld
mov
scas
or
popa
dec
dec
push
mov
sbb
ja
fistps
fdivrl
mov
daa
mov
fdivs
out
push
je
jae
xlat
and
mov
push
pushf
popa
sbb
fdivrl
fidivrl
pop
lds
popa
and
xlat
pop
inc
pop
js
loop
int3
adc
jp
cwtl
popl
cld
fwait
jl
das
push
jmp
dec
adc
or
jnp
fstl
xor
cs
inc
sbb
sbb
sub
ja
pop
popf
out
mov
dec
inc
xchg
inc
aas
ds
sub
fstpt
cli
lahf
daa
sti
jns
mov
fcoml
cwtl
adc
push
xor
push
xchg
or
add
inc
sbb
pop
fistpl
or
mov
andl
jae
pop
cwtl
cmp
stos
ret
std
pop
push
mov
imul
dec
in
andb
mov
cld
es
rolb
and
stc
dec
cmp
pop
push
iret
scas
test
cmpsl
in
imul
pop
movsl
mov
or
cmc
mov
into
xchg
popa
xor
adc
push
imull
mov
sahf
fadd
insl
cmp
adc
jle
outsb
ret
or
adc
mov
loopne
das
sar
sbb
adc
sub
mov
into
clc
popf
lret
leave
mov
stos
negl
dec
dec
sbb
mov
stos
movsb
mov
add
ljmp
adc
mov
lret
mov
cmpsl
daa
add
add
and
xchg
mov
fs
mov
adc
imul
sub
popf
movsb
push
hlt
repz
andl
inc
scas
iret
and
pop
xor
addr16
mov
xchg
jle
in
mov
nop
push
cltd
aaa
jb
pop
adc
enter
xchg
enter
ret
adc
xchg
ds
hlt
out
cmp
pusha
fsubrl
mov
push
jb
scas
hlt
ret
repnz
fs
xchg
idivb
lahf
jp
push
sub
mov
js
xlat
mov
sbb
adc
cld
daa
test
and
sbb
pop
add
jg
add
sub
cmc
imul
push
fs
jne
into
stos
cs
test
in
lock
pop
dec
into
lcall
and
and
data16
hlt
sar
jno
mov
push
lret
adc
xor
push
dec
xchg
les
dec
scas
les
fdivrl
and
sbb
or
int3
xchg
xchg
dec
mov
jnp
ljmp
pop
jbe
imul
out
ja
push
ror
dec
jl
pop
je
data16
leave
out
sahf
dec
xor
sbb
pop
rclb
adc
pop
pusha
shrb
ret
fnstcw
mov
or
popf
push
push
lds
insl
sar
sub
aam
or
pop
dec
pop
sub
prefetch
pop
or
nop
gs
je
jns
cmp
dec
sub
jp
je
cmp
push
mov
adc
cmp
stc
data16
jno
sbb
cmp
js
mov
pop
fildll
and
mov
rolb
aad
and
rolb
call
lea
insl
pop
ss
and
scas
insb
pusha
in
add
inc
ds
ret
add
cmp
out
gs
push
mov
cli
popa
push
mov
jmp
pusha
xor
sub
pop
pop
lods
ret
ret
or
push
orb
mov
mov
push
or
jae
scas
lahf
xor
ficomps
int3
adc
lock
fstl
and
sub
jns
add
testb
and
jne
pop
pop
sarb
ret
jb
dec
mov
add
add
inc
aaa
stc
arpl
lcall
mov
movsl
mov
stos
jnp
xchg
sbb
mov
jle
iret
mov
cmp
testb
mov
sub
movsl
out
push
sti
mov
jge
sahf
je
xlat
stos
dec
jb
jnp
test
mov
loopne
sbb
subl
jl
jne
dec
push
dec
ss
xlat
add
and
mov
mov
loope
mov
roll
into
fstpl
and
inc
loopne
xor
int3
aad
mov
dec
int3
jns
sbb
lods
push
ljmp
xchg
aam
sbbl
cmp
inc
outsb
hlt
clc
js
insl
in
out
xchg
push
loopne
mov
add
in
adc
in
sub
aad
add
sbb
mov
in
sub
aaa
rorl
and
inc
lock
dec
push
or
loope
lahf
jb
push
or
add
mov
add
pop
push
rcrl
ss
out
cs
and
mov
push
jle
sub
push
scas
cmp
sub
jae
xchg
nop
or
loopne
repz
pushf
imul
cwtl
das
mov
frstor
popf
adc
sbb
jne
xor
sbb
pusha
es
inc
sbb
out
mov
mov
stos
sahf
pop
pushf
std
ja
orl
out
jg
cld
inc
sub
inc
leave
cmp
mov
pop
and
mov
pop
inc
cld
fidivl
subb
pop
imul
adc
mov
adc
gs
sub
pusha
pop
mov
add
ljmp
das
adc
push
std
mov
pop
mov
out
jecxz
mov
mov
adc
das
or
mov
sub
orl
xor
in
push
ja
mov
pop
add
stc
pop
cmp
sub
xchg
cmpsl
and
mov
mov
mov
and
imul
sbb
ret
push
fmull
and
iret
stc
pushf
mov
das
fsts
mov
fs
loope
mov
daa
imul
mov
lcall
xlat
or
jl
call
jo
and
sub
pop
gs
bnd
testb
out
xor
cmp
inc
mov
adc
cmp
arpl
and
adc
push
push
fsincos
in
fisubrl
mov
sbb
add
andl
jmp
dec
in
scas
test
pop
add
jne
lahf
mov
inc
and
orb
cmpsb
rol
aam
push
lret
xchg
stc
in
cmp
mov
std
mov
dec
aaa
rolb
jb
mov
adc
cmpsl
mov
xor
lcall
dec
test
insb
cmp
adc
xchg
mov
inc
lea
and
dec
pop
loopne
mov
adc
fdivs
inc
xor
dec
int
pop
call
xor
mov
xchg
push
stc
jnp
mov
scas
std
or
mov
sahf
mov
or
lods
cli
mov
xchg
int3
add
or
push
andl
dec
fsts
mov
mov
loop
fdivrl
les
push
lds
mov
dec
mov
jo
jae
push
mov
daa
mov
sub
xchg
sbb
bound
lds
ljmp
adcl
leave
hlt
push
fisubrs
lcall
jnp
ret
jl
xchg
mov
lret
and
out
testb
movsb
fldt
push
aam
shrb
insl
sub
outsb
xlat
popf
mov
mov
js
in
dec
shlb
inc
and
mov
dec
adc
jb
call
pop
or
enter
cmp
jl
jge
mov
pop
leave
push
pop
pop
sahf
mov
jbe
sar
pop
mov
mov
fsubp
add
adc
rcll
out
xchg
pop
cmc
cmc
mov
cmp
jbe
or
mov
xor
aam
scas
fs
or
movsl
cltd
iret
inc
cs
inc
cmp
int3
idivl
fldz
fistpl
xchg
test
call
xchg
insb
mov
inc
cmp
in
and
xchg
and
int
inc
jb
cwtl
mov
shll
cmpsb
pop
dec
outsl
xchg
jnp
mov
test
enter
adcl
xor
cmp
mov
ret
mov
mov
sub
xchg
xorb
mov
stc
sub
daa
insb
dec
jg
insl
mov
sahf
xchg
xchg
dec
sub
inc
std
xchg
mov
adc
mov
mov
mov
inc
or
bswap
lods
call
or
xchg
jnp
cli
icebp
jg
ss
stos
sbb
mov
lahf
push
dec
movsl
jmp
ret
popf
neg
cmp
and
dec
or
test
ja
add
fwait
sub
subb
mov
gs
push
mov
cmp
insb
mov
dec
popa
and
sahf
mov
std
sbb
inc
lcall
jnp
out
imul
fcoms
shll
leave
jb
insb
mov
push
hlt
inc
or
pusha
mov
popa
add
lcall
inc
xchg
imul
mov
js
lods
and
movsb
pop
mull
call
cs
or
pop
push
out
roll
frstor
out
sbb
in
in
std
and
cmp
loope
add
das
dec
mov
fsts
shll
sub
lret
pop
mov
loop
out
xchg
or
add
mov
xor
aas
das
xlat
into
testl
aaa
lock
add
push
out
bound
jb
mov
mov
push
and
jle
sub
in
rolb
shlb
add
call
int3
sti
adc
fstps
lret
imul
lahf
xor
jbe
lret
cmp
fimull
orb
add
inc
mov
out
leave
adc
mov
insb
xchg
cmp
or
inc
clc
xchg
mov
into
cli
xor
jbe
push
adc
icebp
sbb
mov
jb
cli
int
popf
insb
clc
je
fisubrl
mov
movl
pop
sub
out
and
pop
mov
mov
cwtl
popf
dec
aam
das
scas
enter
andl
mov
cli
mov
fldl
stos
stos
ds
insb
adc
cli
mov
shrb
push
sub
js
cltd
ret
push
inc
xchg
adc
repnz
out
cmp
fwait
or
mov
into
jmp
or
mov
jo
popa
lods
frstor
fldt
cmp
add
inc
xchg
dec
xlat
dec
aas
repz
pushf
xlat
stos
lds
clc
inc
hlt
ret
or
and
push
cli
dec
fwait
sub
push
bound
mov
fwait
jne
sahf
rclb
xor
out
lods
dec
or
lds
mov
nop
and
icebp
lods
and
adc
mov
jns
shl
fnstenv
imul
push
cli
cmp
jb
jmp
fdivl
xchg
and
rcrb
scas
push
xor
out
outsl
in
xorl
test
mov
sbb
cs
arpl
push
les
push
hlt
or
inc
cmp
lahf
mov
and
lea
mov
jl
in
gs
insb
loop
mov
in
add
or
inc
push
aad
popa
adc
and
add
aas
pushf
pop
mov
sahf
lahf
loope
add
push
in
jbe
push
pop
jno
mov
mov
mov
xchg
xor
dec
pop
jns
inc
gs
imul
xchg
mov
xchg
addr16
inc
sar
cli
adc
or
mov
fidivs
and
sbb
ret
lahf
xor
aam
pop
and
je
fistl
repz
popf
jno
jp
sbb
into
mov
push
xor
data16
cmpsb
fcmove
add
stos
pop
and
sti
jbe
sub
mov
and
xchg
movb
ljmp
lock
fstps
add
in
lods
mov
and
sub
xor
dec
dec
loopne
sub
stc
pop
mov
mov
lret
push
insl
stos
subl
insb
aam
iret
fiadds
pop
ror
push
pop
inc
sahf
xor
call
jo
fsubrs
sbb
push
mov
xchg
pushw
dec
nop
mov
sub
lea
loop
lahf
cwtd
push
sahf
cmpsb
pop
repz
jbe
out
sbbl
adc
dec
pop
push
and
lret
js
jns
xorl
jnp
in
push
push
lahf
lcall
add
inc
cmc
and
aas
jnp
pop
clc
pop
pusha
cmp
sub
and
and
pop
loope
icebp
push
or
push
cmp
nop
cwtl
lea
push
insb
push
int
or
mov
in
inc
sub
adc
test
adc
mov
lret
sub
icebp
ljmp
maxps
sbb
imul
mov
push
out
std
jae
imul
mov
mov
mov
aas
test
inc
cmc
imul
jne
aad
sub
xchg
out
xor
ficoms
in
pop
add
mov
push
sub
call
jecxz
pop
and
sub
imul
daa
sbb
sbb
lahf
push
mov
dec
sarl
out
mov
out
push
lds
icebp
adc
dec
not
jle
incl
push
hlt
leave
adc
loope
lret
pop
sbb
rorl
and
inc
pop
test
in
arpl
dec
js
sub
jecxz
decb
lea
pop
cmp
cmp
shll
iret
stc
leave
fs
sbb
cli
es
outsb
fcmove
or
sub
ret
push
mov
js
rcll
loope
mov
and
xor
rcr
or
xchg
gs
pop
sub
or
mov
xor
xor
add
out
rcrb
jl
rcrb
ficomps
sbb
mov
mov
xor
bound
into
push
push
cld
push
shl
nop
cmpsb
test
jae
jge
jbe
out
js
into
shll
mov
pop
push
inc
repz
fcoms
and
pop
ss
push
shrb
jb
adc
fildll
out
scas
insl
jl
sahf
cmp
push
scas
xchg
scas
or
cmp
mov
in
jp
imul
jae
scas
aaa
out
ss
add
imul
xchg
pop
and
add
gs
and
shlb
ficompl
xchg
mov
and
jge
and
xchg
or
fs
addr16
icebp
loop
mov
xchg
out
fstl
xor
xor
xorl
pop
cltd
mov
xor
es
mov
enter
mov
fstpt
popa
fidivl
fwait
enter
pop
adc
es
mov
out
test
jae
fmuls
movsb
aas
fldenv
mov
mov
or
mov
pop
lret
leave
pop
mov
sbb
les
mov
lock
gs
add
shl
sub
enter
xor
addr16
lea
xor
js
ss
pop
xchg
inc
arpl
es
inc
add
push
cmpl
dec
std
add
jno
mov
mov
or
jno
loope
pop
dec
call
or
jns
rol
lods
test
sub
adc
fnstsw
push
push
push
mov
lret
fcomps
fdivrs
sbb
out
sbb
push
cltd
xor
pop
xchg
mov
add
dec
lret
bnd
mov
movsb
push
adc
adc
es
repz
cmovp
push
fldenv
repnz
mov
push
test
cmpsl
inc
pop
mov
adc
out
dec
pop
ss
lret
xor
inc
sar
test
and
test
push
mov
out
and
mov
insl
pop
pop
mov
loop
insb
lods
es
inc
icebp
fs
out
sbb
xchg
ljmp
orb
std
into
outsl
mov
xor
add
loope
push
add
lods
xchg
mov
cmp
xchg
push
xchg
add
mov
sbb
loop
cltd
xchg
fsubs
ja
in
bound
lods
fcoml
aas
xor
in
mov
outsb
mov
sub
jb
insb
mov
and
adc
shl
sbb
xlat
jnp
mov
daa
dec
divl
mov
test
lret
imul
or
pop
mov
sbb
sub
sub
inc
bswap
loopne
dec
dec
clc
es
jge
sbb
adc
jmpw
rcrl
mov
cmpsl
mov
cwtl
sbb
imul
adc
lods
ror
nop
test
jp
jl
cmp
sub
mov
addr16
xchg
lds
popa
cmp
orb
cmp
jne
xchg
jns
aas
and
cmpsb
mov
hlt
popf
pop
aad
lcall
test
and
lret
loopne
sbb
stos
movsl
mov
mov
testl
pop
adc
lret
pop
mov
sub
repnz
adc
xchg
xchg
aam
mov
adc
sbb
jno
lods
lods
push
lods
int
pop
ljmp
mov
scas
push
insb
mov
jmp
ss
cltd
sub
scas
fdivr
lea
insb
pop
push
cld
out
ror
push
mov
sub
dec
xchg
lods
adc
sets
into
mov
dec
frstor
or
les
lock
mov
les
xchg
out
insl
xlat
mov
in
jo
xchg
cmc
in
lret
sbb
jae
sub
xor
jno
mov
test
mov
xchg
inc
xor
in
pop
jp
sub
shrl
xchg
sahf
jb
jg
int
in
dec
aas
sub
lds
fisttps
fisubrl
sbb
repz
dec
gs
iret
lods
add
shl
mov
xchg
cmp
jle
xor
aad
dec
fsubrs
inc
out
test
jmp
pop
ffreep
and
imul
fidivrl
or
rcl
in
jl
push
mov
sarl
adc
cmpsb
imul
clc
sbb
adc
and
stos
out
int3
and
das
or
push
cmp
mov
cmc
xchg
leave
iret
xor
add
dec
sub
mov
cmp
fdivrp
xchg
lahf
and
xchg
sbb
leave
lret
sbb
pop
addr16
or
es
add
xor
sub
rcl
scas
and
inc
dec
inc
cld
lea
test
xor
aas
fistps
dec
daa
out
gs
test
aas
les
push
pop
int3
push
inc
jge
sarl
cltd
jo
in
dec
mov
cmp
sub
imul
sbb
rol
out
sbbl
push
sahf
hlt
xchg
stc
mov
cmp
movsl
push
mov
add
inc
pushf
jecxz
and
jl
xor
or
add
lahf
ljmp
mov
jp
fistpl
and
or
addr16
andl
and
shl
cmp
ja
idivl
sbb
dec
leave
mov
mov
mov
mov
pop
sub
dec
inc
ds
fnstsw
push
cld
mov
mov
ret
in
mov
inc
in
adc
adc
movsl
es
sub
mov
lods
iret
pop
push
xchg
xchg
push
icebp
xchg
stos
push
jbe
inc
adc
out
rcrl
inc
loop
inc
sub
xchg
jmp
mov
xor
jle
cwtl
inc
fiaddl
mov
mov
data16
push
mov
addr16
jp
or
sbb
xor
jb
xchg
xchg
arpl
popf
arpl
jnp
push
or
jmp
and
in
mov
insl
shrb
jno
mov
push
adc
cmp
pop
xchg
mov
mov
test
mov
or
push
in
rcl
dec
ljmp
fbld
jae
fistps
and
les
movsb
add
pop
stos
dec
call
xlat
ja
lea
leave
cmp
mov
xor
dec
loope
imul
mov
nop
or
jne
cwtl
das
test
popa
aaa
fcompl
add
adc
cmpsl
dec
mov
lods
xor
inc
imul
adc
cmc
xchg
imul
shlb
mov
add
jno
into
stos
sub
mov
insl
jbe
and
cmp
add
sub
nop
and
cld
data16
mov
mov
mov
pop
shll
aas
dec
sarb
pop
inc
adc
cmp
mov
xchg
mov
and
inc
inc
jbe
mov
hlt
movsb
insl
repnz
add
dec
jo
mov
cltd
adc
mov
cmp
xchg
mov
jecxz
jbe
push
rorb
aam
ret
nop
in
xor
div
sbb
fcomps
out
bound
mov
xor
in
cmp
inc
lods
jge
xchg
cmp
adc
movsl
mov
ljmp
fbstp
std
add
mov
cmc
pop
jae
cs
adc
lret
add
jb
or
shlb
xlat
mull
jbe
jne
cmp
fcomp
cmp
lret
into
lcall
mov
fucomip
stos
jle
dec
pop
jle
jae
jns
xchg
in
mov
nop
pop
sbb
xchg
hlt
aaa
push
mov
or
sbb
scas
xor
das
stc
mov
insb
popa
mov
inc
inc
sti
call
mov
jmp
add
stc
into
push
nop
xchg
jle
sbbl
test
loopne
fcmovb
xor
xlat
xchg
inc
or
xorl
push
stos
in
pop
mov
adcb
popf
sub
push
and
cmp
jae
sahf
addr16
jl
into
leave
mov
in
les
mov
iret
imul
jbe
add
xlat
ljmp
jae
cwtl
clc
addl
add
xchg
decb
inc
jb
push
cld
daa
mov
inc
push
roll
dec
xchg
iret
in
std
movsb
in
mov
fucomip
movsl
xchg
out
jo
and
bound
inc
adc
imul
cmpsl
in
inc
andb
or
xchg
pop
inc
fiaddl
arpl
gs
scas
pop
lcall
test
add
mov
inc
cmpsl
sbb
lds
fidivrl
das
mov
sahf
mov
xchg
ret
or
aaa
jbe
cmp
pusha
dec
push
sbb
hlt
outsb
int3
xlat
sub
xchg
fimull
mov
sub
push
hlt
aaa
xchg
jl
xorl
sbb
mov
adc
jg
push
or
shrl
int3
sub
pop
cld
sbb
sbb
mov
lahf
pop
push
push
mov
and
jbe
and
insb
cmp
mov
js
enter
jl
jl
clc
push
bound
sub
lock
pop
addr16
fimull
mov
jmp
sbb
or
scas
inc
repz
or
xor
inc
dec
jl
mov
push
adc
clc
mov
fwait
in
adc
popf
jmp
or
push
sbb
fdivl
in
jecxz
xlat
jne
movnti
mov
adc
mov
pop
ja
mov
loop
les
mov
lods
in
pusha
in
dec
ret
roll
lea
pop
jle
push
mull
jnp
call
in
jno
cmp
jmp
pop
ror
ss
mov
fidivrl
jbe
xor
mov
shlb
push
repnz
mov
ret
les
xchg
sbb
cmp
mov
mov
mov
daa
popf
sti
jb
pop
test
aas
fs
add
aas
xchg
inc
xchg
sahf
aas
cmpsb
mov
jnp
pushf
cld
pop
jne
ja
dec
dec
dec
enter
adc
jns
mov
dec
negl
pushf
add
push
loopne
mov
mov
push
data16
lret
test
lret
fs
sahf
dec
pop
or
and
inc
inc
jl
stc
loop
pop
dec
push
adc
ljmp
repz
outsl
sub
mov
mov
sbb
lock
mov
add
dec
add
or
int3
sub
ss
lods
cmp
hlt
jno
push
les
mov
pop
inc
das
hlt
imul
into
daa
fisttpl
cs
sbb
cmp
test
pop
mov
iret
rolb
dec
and
add
call
aas
fidivrs
arpl
jge
scas
or
push
fidivl
push
push
in
xor
push
test
jae
push
aaa
dec
mov
ficoms
mov
mov
imul
push
sarl
adc
rcrl
rcrl
cmc
scas
cs
sub
ja
sub
out
push
loopne
cltd
push
fidivl
popa
mov
sar
sbb
repnz
push
hlt
mov
adc
into
adc
pushf
call
in
push
fnstsw
lcall
or
bound
faddl
lcall
sub
outsb
push
repz
mov
mov
aad
sub
loop
sbb
pop
or
pop
xchg
test
dec
jne
inc
out
stc
rclb
stos
test
cli
cmp
jne
push
inc
mov
cmp
es
aas
mov
test
jl
push
imul
sahf
mov
sbb
stos
and
es
shlb
mov
push
mov
mov
hlt
in
or
outsb
inc
ss
test
adc
into
sub
outsl
jge
and
jmp
fwait
loope
cld
repnz
sbb
xchg
mov
pop
xchg
sub
xchg
pop
sub
adc
pop
jno
test
ds
repnz
xchg
cmp
orb
add
add
arpl
gs
fs
mov
mov
in
pop
shll
movsl
push
les
or
scas
bound
loop
sarb
jbe
data16
lods
stc
jg
lock
movsb
testb
pushf
xchg
ret
sbb
fwait
test
sbb
mov
shrb
test
jb
int3
dec
int
mov
ljmp
addr16
add
stc
and
sbb
dec
lods
clc
out
fimull
stos
jae
sub
enter
mov
xor
push
push
sbbb
add
sub
outsb
sub
push
dec
inc
sbb
jne
cmp
lcall
sbb
loope
xchg
ds
in
push
cmc
movsb
jecxz
movsb
pusha
scas
fsubs
pop
add
or
decl
cld
loope
stc
mov
cmp
cld
sarl
jecxz
mov
or
call
add
pop
cmpsb
push
adc
mov
xchg
sbb
mov
outsl
cmp
inc
out
mov
hlt
cld
add
cs
in
scas
ljmp
stos
mov
lahf
xor
popfw
int3
xchg
jge
jmp
cmc
lcall
mov
xchg
mov
cmp
sub
shr
arpl
jne
orl
mov
or
lods
lods
data16
ficoms
mov
js
dec
xor
sub
xchg
jge
mov
aaa
imul
ret
in
jo
push
dec
sti
pop
fwait
mov
sub
test
test
lahf
fdiv
mov
out
xchg
pop
iret
mov
pop
pop
mov
xchg
and
cmpsl
dec
sbb
adc
es
mov
sarb
rorb
dec
incl
xor
xchg
mov
ja
jle
repz
lcall
sub
std
sarl
mov
ss
movsl
lret
movsb
in
sbb
xor
sub
push
fimuls
xor
cmpsb
mov
xor
xchg
je
bound
pop
ret
daa
pop
xchg
imul
xor
inc
lcall
xchg
loop
call
mov
xor
fwait
adc
outsl
bound
mov
shrb
inc
decb
mov
inc
xchg
loop
ja
mov
out
push
dec
jns
cmp
into
push
arpl
bound
cmp
dec
lods
or
or
pop
nop
fstl
inc
stos
xchg
dec
mov
dec
aas
je
mov
and
lret
add
pop
lods
pop
and
add
andb
mov
scas
pop
lea
fdivl
mov
pop
cmpl
pusha
std
fs
pop
cmp
ret
xor
jns
lock
fdivl
shll
push
in
jbe
rorl
and
inc
and
ja
test
push
sub
xchg
in
pop
xchg
add
aad
xchg
push
jbe
sahf
sub
cmpsb
jecxz
xor
in
insb
popa
xchg
push
out
nop
cmpb
dec
lock
mov
fldl
pusha
mov
icebp
testb
push
mov
mov
repz
imull
decl
stc
sbb
push
fsts
lods
int
dec
mov
sti
jns
sti
xchg
hlt
sub
leave
aaa
push
push
les
pop
push
push
sub
mov
dec
jge
pop
mov
in
ret
xor
xor
and
mov
and
int3
in
pop
addl
mov
mov
and
mov
aas
rcrl
adc
cmp
arpl
repnz
jb
ret
jns
out
or
in
iret
call
loopne
call
inc
out
pop
lcall
bound
lcall
xchg
cmp
cmpsl
pop
cmp
hlt
cmp
movsb
sahf
mov
vpslld
sbb
bound
int3
idiv
xchg
adc
call
fadds
gs
sbb
fisttps
push
mov
test
xlat
lcall
pop
lcall
mov
call
sbbb
pop
in
out
dec
add
xchg
push
jge
popa
ljmp
ret
pop
ljmp
cld
mov
push
inc
mov
jmp
xchg
add
push
orb
lahf
stc
nop
xchg
mov
sub
inc
out
daa
cmc
pop
inc
repz
xchg
inc
and
add
xchg
mov
andb
mov
lret
arpl
xchg
jns
lret
mov
stos
inc
jmp
inc
mov
lcall
ja
jae
sbb
imul
aad
xor
pop
xchg
add
cld
jne
inc
xchg
sti
fdivrs
add
lods
jne
rorb
push
add
stc
inc
mov
pusha
jle
sbb
mov
jae
dec
jb
mov
subl
cltd
push
ficoms
out
add
mov
mov
popf
cmp
sbbb
cmpsl
push
scas
xor
int3
repz
loopne
cld
cmp
aad
pop
repnz
in
iret
inc
cli
ljmp
pop
and
inc
push
or
cmp
fstpl
mov
sbb
inc
jmp
mov
stos
call
clc
movsl
push
and
inc
sti
push
push
cmp
dec
stos
popf
movsl
sbb
mov
int
mov
outsb
jg
frstor
and
inc
mov
sbb
jp
jmp
jae
xchg
jmp
rolb
jg
dec
mov
hlt
cld
mov
data16
in
in
cmpsl
cmpsl
shr
aaa
lret
outsl
push
sbb
and
cmp
popl
fs
insb
dec
jne
aas
dec
and
lods
aam
mov
std
mov
jp
xor
pop
jns
es
pop
mov
stc
stos
lcall
pop
pop
sahf
xacquire
in
mov
push
les
adc
dec
lds
or
cli
add
addr16
xor
push
lcall
fstp
jb
cmp
xor
mov
leave
into
pusha
aad
or
push
xchg
xchg
in
push
add
out
adc
pop
ret
pop
inc
and
icebp
ficompl
cs
or
lock
lahf
sbb
iret
loope
mov
sbb
xchg
sub
push
adc
mov
fcmovnbe
fnsave
in
das
loope
std
jbe
fldl
or
xchg
orb
add
pop
fidivs
subb
inc
iret
lahf
cltd
addr16
sarl
xor
std
sti
hlt
mov
push
sahf
xlat
test
hlt
or
sbb
sub
in
in
xor
in
std
pop
mov
add
mov
scas
mov
pop
nop
fists
aaa
sub
in
xchg
cmp
add
in
fidivrl
adc
mov
imul
dec
stos
fstl
test
xchg
add
int3
xchg
shlb
test
sbb
jmp
pop
psubsw
cwtl
movsl
dec
mov
lds
push
in
add
cmp
addb
adc
sbb
arpl
mov
jmp
add
pop
push
out
and
adc
push
adc
je
lret
sahf
jno
pop
lcall
in
mov
aas
ret
and
lret
sub
pop
cmp
jecxz
jle
jg
or
lds
aas
call
adc
jecxz
adcl
mov
adc
ret
sub
cmp
movb
stos
jo
sarl
lret
and
and
sbb
push
stos
or
movsb
call
ljmp
xchg
iret
sub
lahf
inc
loop
outsl
jge
jecxz
mov
and
adc
loopne
mov
ficompl
mov
adc
iret
faddl
aas
xchg
sub
popa
lock
mov
ja
sbb
xor
pcmpeqd
lods
ss
es
decl
jno
or
in
enter
mov
jbe
lock
or
mov
mov
test
cmp
hlt
push
inc
mov
outsl
pusha
pop
out
imul
in
sarb
fcompl
sti
loop
jl
rcrb
pop
jg
addr16
ja
shll
pop
jne
mov
jbe
jmp
arpl
xlat
sbb
arpl
sub
mov
fcoml
mov
scas
add
push
inc
push
mov
popf
mov
xor
jge
sbb
sbb
lea
pop
mov
mov
sbb
in
xchg
cli
mov
mov
sub
clc
in
into
dec
push
int
mov
pop
dec
call
pop
fisttpl
jns
jne
lds
adc
inc
mov
adc
lods
loope
and
popf
cld
int
stos
fnsave
test
adc
mov
repnz
jecxz
sahf
icebp
push
lods
xor
sbb
sti
mov
insl
jns
shlb
fwait
jae
and
ret
jle
xor
sub
and
fmuls
subl
pop
mov
out
jg
jne
mov
mov
ret
jno
ja
fwait
jl
mov
inc
xor
sbb
inc
xchg
int
adc
pop
cmp
sub
or
test
stos
cvtps2pd
aas
int3
pop
mov
inc
sbb
cltd
mov
or
pop
mov
xchg
xchg
cmp
mov
cs
adc
insb
jecxz
dec
aas
mov
add
imul
addb
ljmp
adc
jmp
int3
std
lods
push
loope
test
adc
xlat
cli
inc
and
sub
rorl
push
sbb
mov
scas
and
loope
xor
pop
pop
das
xchg
dec
sub
xor
je
lds
je
rolb
loope
sti
add
mov
jnp
rclb
xor
in
negl
jbe
push
call
lret
test
scas
xor
loopne
cmpsb
out
out
jbe
mov
xchg
rorl
jno
ds
jmp
or
adc
jb
sub
mov
stos
ljmp
out
test
pop
cltd
rcrl
mov
cmc
or
jnp
mov
dec
push
sub
dec
popf
mov
pop
pop
or
int
pop
xor
test
jp
adc
cli
les
pop
cltd
jo
rorl
out
sub
xor
xchg
sbb
mov
and
jnp
mov
ja
call
loopne
pop
out
mov
add
fwait
mov
pop
mov
lods
push
sub
push
pop
outsb
inc
outsl
rorl
add
fcomps
sub
outsl
mov
into
fsubp
adc
xlat
inc
js
out
and
mov
fwait
add
aad
push
dec
loop
dec
int3
xchg
add
fdivp
jmp
je
jl
dec
pop
push
das
adc
int3
jae
mov
cld
fimuls
push
mov
sub
icebp
inc
movsl
sub
and
mov
pop
push
inc
into
or
or
imul
or
dec
xchg
and
xchg
mov
test
push
add
in
sarl
imul
push
pop
cmp
or
push
cltd
or
subb
dec
cmp
sub
xor
sbbl
ds
mov
jmp
rcrl
shrb
roll
pop
outsb
mov
adc
inc
in
and
jp
mov
loope
gs
cmp
cmp
adc
ljmp
mov
fucom
stc
movsl
popa
dec
cs
mulb
sarl
shrl
lods
fisubs
leave
mov
push
or
int
mov
pop
pop
push
outsl
cmp
std
mov
rcl
outsb
imull
push
inc
pop
and
mov
pop
mov
add
out
xor
inc
mov
fists
jp
loope
jb
jle
test
mov
shl
imul
fdivrl
adc
xor
movsb
or
jnp
in
mov
xchg
in
sbb
inc
pop
inc
mov
stos
pop
xchg
pop
jb
lock
les
mov
sbb
lea
push
pop
xor
xor
jae
push
push
shl
fbld
aam
es
and
mov
int3
fistpll
sbb
jp
jg
sbb
adc
sub
cltd
xchg
data16
mov
movsb
add
aas
ljmp
bound
pop
out
and
dec
outsb
lret
mov
or
dec
ret
loope
cmp
out
shl
push
int
pop
leave
add
stos
mov
gs
gs
adc
shll
mov
repz
mov
jmp
hlt
add
clc
cmp
or
mov
outsb
sbb
cmp
pop
jbe
nop
xchg
add
pop
ss
inc
fcmovb
mov
mov
dec
adc
das
leave
mov
cmc
fwait
enter
nop
lods
mov
scas
daa
roll
pop
cld
jecxz
pop
jae
cmp
test
xor
sti
test
xor
mov
orb
pop
inc
das
add
out
dec
gs
fidivl
rorl
cmc
vpaddsb
pop
fwait
sub
adc
jmp
movsl
xlat
pushf
aaa
cltd
outsl
ret
push
ja
dec
cld
fmul
pop
jge
nop
xchg
mov
pop
outsl
loop
cmc
mov
cmp
jecxz
xchg
mull
inc
aas
mov
fs
sbb
sbbl
pop
xor
mov
inc
shll
stos
pop
icebp
add
fmuls
xchg
sub
push
enter
jmp
sub
push
mov
lahf
lods
adc
movsl
mov
xor
pop
lret
or
imulb
xor
aas
popf
or
pop
repnz
pop
push
hlt
or
push
pmuludq
and
es
push
shlb
dec
push
mov
push
cmpsl
jp
mov
push
repnz
es
mov
pusha
aaa
cs
aad
andb
sarl
loope
jb
push
inc
add
repnz
sub
mov
clc
in
enter
data16
adc
cld
xor
pusha
fcmovu
iret
es
in
aad
aas
and
mov
loope
rorl
adc
shl
mov
sahf
mov
push
pushl
xchg
or
insb
mov
xchg
pop
lock
adc
pop
es
dec
xor
xchg
mov
mov
adc
and
mov
push
adc
movsb
xlat
fiaddl
bound
mov
sub
mov
cmpsb
jecxz
jb
jb
jo
lret
scas
and
dec
enter
cmp
push
sub
add
stc
movsl
add
pushf
lods
ret
add
inc
or
iret
iret
pop
cmp
pop
int3
repz
in
jo
or
pop
pop
and
mov
inc
int
mov
jno
mov
cmp
insb
cmpps
out
bound
cmp
or
jne
stc
xor
push
lods
lods
nop
out
xchg
pop
and
clc
imul
ja
outsb
xchg
cmp
or
dec
dec
in
inc
push
xchg
out
xchg
dec
testb
imul
lea
daa
inc
cmp
jne
imul
mov
aaa
push
outsl
adc
fwait
cmc
or
sub
insb
dec
inc
push
push
das
jp
in
in
mov
xchg
inc
mov
cmp
cmpsb
adc
stos
dec
movsl
mov
pop
imul
sub
jle
out
dec
xor
xor
lea
rol
dec
aad
fsubs
divl
loop
clc
rep
push
pop
push
push
xchg
push
mov
jo
outsb
mov
out
cli
mov
stos
add
popf
data16
or
sub
mov
jb
ljmp
daa
test
push
xchg
imul
jbe
pop
cmp
test
ljmp
pop
pop
sub
icebp
ds
xor
jae
int
in
pop
out
test
arpl
sub
push
jae
or
sbb
or
sbb
pop
lret
std
aaa
mov
aam
cmp
ror
pop
mov
mov
rcl
mov
out
mov
mov
stc
insb
lods
mov
lret
mov
rol
add
aaa
jp
arpl
cmc
out
jecxz
cwtl
das
hlt
push
adc
loopne
cmp
cmp
xor
in
test
addl
cmp
sub
ljmp
into
xchg
and
cmp
insl
xor
fcoml
lds
mov
cltd
inc
je
mov
scas
stc
test
int3
test
mov
cmpl
or
and
subb
orl
test
in
pop
push
les
push
stos
pop
xchg
movsl
mov
lods
stc
in
sub
cmpsb
dec
sbb
mov
pop
test
rcll
xor
xlat
es
pop
imul
push
popf
out
inc
movsb
idiv
fcom
shl
push
jne
mov
xor
into
mov
movsb
and
mulb
mov
pop
or
imul
pushf
lds
jo
out
push
inc
mov
pop
idivl
enter
cmp
ret
shl
out
or
in
fcomp
push
dec
adc
stc
hlt
sub
and
hlt
in
mov
pop
dec
jmp
pop
mov
or
mov
sbb
leave
add
es
pop
sbb
arpl
lcall
xchg
daa
test
test
test
stos
push
testl
test
mov
ds
xor
inc
js
bound
sbb
mov
jl
out
shlb
mov
pop
cmpsl
ret
fstpl
xchg
lret
andb
add
cmp
adc
sbb
pop
lds
js
sub
jg
stos
xor
mov
repnz
ret
in
or
movl
push
mov
inc
jb
pusha
lret
jmp
or
sbb
out
pushf
cmp
or
lcall
das
or
mov
iret
je
add
fildl
mov
push
mov
pusha
sub
xorl
movsl
nop
push
push
cs
push
push
xchg
stos
fmuls
sbb
pop
mov
push
rcll
push
mov
adc
mov
aaa
sub
aad
lock
add
add
cmp
in
jb
mov
push
cmp
es
adc
mov
xchg
pop
scas
xchg
mov
sbb
pop
mov
int
inc
push
xchg
dec
xor
dec
rcrb
jl
dec
testl
mov
push
mov
xchg
gs
push
push
sbb
ljmp
ds
aaa
scas
loopne
repz
lret
jle
fs
out
dec
clc
imul
mov
xchg
mov
loope
sbb
and
xchg
cmp
pushf
cltd
add
inc
add
xor
sbb
fsubl
stos
ret
int3
mov
add
pop
ja
sti
mov
add
lret
mov
xchg
fdivs
loop
add
cmp
xor
popf
mov
aas
adc
mov
fucom
lock
or
int
dec
mov
adc
add
loopne
xchg
mov
loop
dec
fcom
lds
xchg
imulb
pusha
lret
js
test
decb
pop
loop
inc
stos
mov
pushf
int3
iret
adc
je
xchg
daa
lds
fisubrl
pusha
pushf
jge
push
mov
sbb
daa
or
arpl
int
pop
dec
mov
stos
push
mull
lret
sbb
loope
xchg
bound
mov
and
jp
insl
rcrb
loope
jb
mov
aas
add
pushl
scas
in
stos
mov
adc
stc
mov
stc
or
and
push
mov
pop
lahf
pop
aad
pop
cmpsl
popf
ret
sub
cwtl
sub
enter
in
testl
sarb
jmp
xchg
orb
lret
push
xor
repnz
adc
jle
ds
add
sahf
js
add
mov
dec
in
ret
sub
test
push
test
lods
fnstenv
out
or
fwait
mov
sti
mov
push
mov
ss
and
ss
inc
lret
in
loope
divl
add
lret
pop
cmp
in
xorb
insl
mov
movsb
xchg
cld
dec
fdivrs
cmpb
cltd
lds
leave
xchg
pop
mov
push
inc
mov
nop
xorl
mov
push
test
cltd
ljmp
in
xchg
das
hlt
fdivl
push
dec
cmc
sar
mov
imul
pop
test
jb
in
insb
mov
dec
ja
lahf
and
and
addl
sbb
in
push
or
imul
or
pop
sbb
andb
mov
fisttps
pop
push
pop
add
and
lods
lret
pop
mov
pop
movsb
inc
mov
out
ret
jle
mov
sahf
push
repnz
leave
sub
mov
lds
jle
mov
arpl
mov
push
mov
fcomps
js,pn
jb
arpl
mov
test
adc
cmp
xchg
inc
lea
mov
pop
cli
push
xlat
jbe
sbb
inc
push
jecxz
rcrl
ja
cmpsl
stos
push
out
add
push
pushf
popaw
sub
add
loop
pop
cmp
loop
cmp
pop
and
cs
sub
les
stc
pop
xor
mov
xchg
mov
lret
jg
jo
cld
insb
pop
mov
mov
loop
mov
lods
sub
lret
xchg
mov
lret
clc
add
test
arpl
stc
cmp
sbb
dec
fs
jle
subps
pushf
into
stos
lret
push
and
lcall
mov
les
sahf
push
mov
jnp
fwait
bound
sarb
mov
js
xor
sub
xchg
insl
jae
test
xchg
adc
clc
les
jmp
fs
int
jg
outsb
push
or
popa
fwait
dec
pop
rolb
sbb
ret
xchg
jb
adc
adc
call
pusha
adc
add
jmp
test
aaa
icebp
addr16
lock
repz
insb
mov
xchg
sbb
test
jecxz
ret
jae
lret
jle
insl
cmp
pop
lock
pushf
aam
fsubrs
pushf
cltd
mov
or
sub
subb
xor
mov
mov
jmp
lods
aad
mov
xor
sub
xor
adc
jp
ds
add
mov
sbb
lea
jecxz
mov
repz
jae
xchg
inc
scas
xor
shll
movsl
dec
xor
cmc
add
in
fstl
out
rcr
in
cwtl
dec
fadd
ret
ret
dec
stos
pusha
sbb
sub
es
je
test
jnp
xchg
in
mov
test
xchg
inc
or
cs
sub
push
hlt
loope
jb
push
inc
mov
xor
fiadds
cmp
in
imul
sub
xchg
fbld
ss
std
test
adc
scas
stos
pop
lret
stc
mov
jmp
call
and
pop
faddl
cmp
lret
mov
pop
loop
dec
or
ljmp
push
fists
push
out
int
jnp
inc
les
lods
xor
dec
repz
mov
js
clc
sub
ficompl
mov
cld
call
add
in
lods
in
mov
mov
cmpsl
aas
insb
sub
movsb
ret
out
shll
push
stc
test
sarl
xor
fiadds
jnp
or
cmp
mull
pusha
gs
pop
mov
call
aas
fs
sbb
mov
mov
xlat
dec
cmp
pop
cld
jmp
and
jnp
pop
sbb
jge
adc
cmp
test
mov
clc
fimuls
push
dec
push
add
xchg
sub
jbe
xchg
mov
mov
lods
mov
shr
cmp
inc
cwtl
adc
in
jmp
mov
xchg
roll
rclb
sarl
adc
jae
xor
dec
pop
cmp
arpl
xchg
or
and
pusha
loopne
add
xor
xor
push
cmp
jno
inc
rcl
pop
lahf
out
jle
xchg
pusha
and
mov
mov
cmp
lcall
call
mov
es
cmpsl
test
pushf
dec
shll
sbb
pop
jl
jb
shrl
mov
or
stos
mov
rcrb
mov
das
int3
mov
xchg
jl
add
xchg
outsl
jbe,pt
xchg
mov
sbb
mov
cli
sarl
sbb
mov
pop
inc
add
push
ficompl
lods
xchg
call
adc
lret
sub
sti
sarl
adc
loope
push
xor
xchg
xor
int
or
xor
push
pop
pop
sbb
pop
mov
pop
rcll
and
add
cld
mov
jnp
movsb
test
fcmovb
arpl
add
pop
pop
loop
orb
cmc
push
imul
dec
mov
and
inc
cmc
ss
int3
pusha
push
adc
loopne
test
or
cli
inc
imul
mov
inc
xor
or
cwtl
lret
hlt
in
fldt
cmp
push
mov
mov
stos
or
push
sub
jg
pop
insb
pop
in
inc
js
mov
psubusb
lahf
xchg
bound
push
cs
popf
fxch
dec
sbb
xchg
shl
mov
cmp
shrb
mov
stc
outsl
xchg
or
mov
and
leave
shll
cltd
xchg
enter
lods
sub
mov
shll
sub
inc
in
jecxz
xor
fbstp
push
lea
xor
sub
sub
fcom
dec
push
movsl
inc
jp
aam
jo
jno
sub
push
insl
inc
fisttpl
cld
or
pop
mov
jmp
movsb
push
adc
sbbb
orl
ljmp
or
pop
mov
mov
and
add
pop
mov
aad
pop
jmp
inc
outsb
addb
push
stos
lods
in
pop
mov
jb
jecxz
sahf
jp
jg
repz
mov
sahf
outsl
test
jae
aam
shrl
flds
or
orl
out
inc
push
stc
add
xchg
dec
fwait
inc
dec
cmp
mov
xchg
andb
sub
sbb
jecxz
cmp
cld
jp
ljmp
sti
lahf
dec
js
push
jno
xchg
daa
rorb
fbstp
clc
out
cmp
pop
mov
fimull
pusha
in
dec
repnz
dec
shrb
jmp
mov
ficoml
mov
mov
lret
push
dec
and
hlt
sbb
jbe
clc
andb
loopne
popa
das
test
xchg
in
inc
dec
push
sub
dec
roll
or
ret
mov
inc
cmpsl
mov
jmp
cmp
sub
push
and
mov
fwait
shlb
add
fstpt
dec
es
mov
int3
adc
sbb
mov
imul
subb
out
jnp
lcall
ljmp
pop
mov
lods
pushl
add
ljmp
inc
push
outsb
xchg
decl
test
out
or
mov
mov
xor
pop
movsl
push
push
jecxz
fstps
dec
mov
in
adc
pop
addb
repz
pop
pop
pop
std
adcb
adc
fwait
mov
sub
dec
inc
stc
das
add
or
in
inc
inc
setb
inc
sahf
lret
adc
push
or
mov
or
repnz
es
adc
cwtl
or
repnz
or
cmp
lcall
jg
es
adc
add
sbb
adc
dec
or
mov
mov
addr16
enter
fsubl
push
ret
js
pop
inc
jp
rorl
push
mov
pop
mov
fwait
jg
xchg
pop
pop
scas
adc
out
in
movsl
out
push
fxam
xchg
mov
mov
push
push
cwtl
hlt
add
adc
into
ss
sbb
dec
xchg
rolb
pop
fstpt
lds
ss
ret
ret
inc
inc
out
xor
aaa
fs
mov
ficoml
pop
jno
dec
sub
repnz
dec
cmpsl
je
sbb
stos
ss
and
testb
hlt
cli
sub
push
out
sub
pop
sbb
in
dec
shrb
in
dec
cld
movl
fwait
imul
mov
add
jmp
movsb
cmp
cmp
push
adc
test
sti
imul
ljmp
ljmp
repz
xor
jb
pop
movsl
pushf
pop
jno
or
insb
mov
dec
mov
sub
fucom
push
xor
and
aad
push
jo
jge
jecxz
enter
and
les
shrl
ret
testl
bound
icebp
sarb
in
or
push
push
jne
mov
inc
mov
or
and
sbb
mov
sub
sub
mov
push
xchg
imul
and
fdivrs
in
mov
cmp
mov
sbbl
dec
daa
pop
xchg
or
roll
int3
mov
popa
lods
sub
xchg
add
inc
inc
ds
jmp
mov
push
mov
cltd
rolb
mov
out
adc
iret
les
loope
xchg
daa
xor
nop
test
aad
das
or
xor
fsubrs
lcall
lods
cmc
mov
pop
inc
outsb
lcall
sbb
mov
addr16
pop
push
sub
pop
jae
sbb
push
aam
dec
popf
sub
mov
mov
and
dec
lahf
das
push
push
xchg
lahf
das
leave
sub
sbb
jg
ficoml
xor
and
cmp
push
xchg
inc
xchg
testl
sub
xor
loope
push
rorb
adc
inc
mov
sbb
jne
cmp
inc
leave
and
and
cmp
jge
jl
das
cld
int3
andl
inc
scas
repnz
or
inc
and
mov
ret
xchg
pop
insb
adc
push
adcb
inc
xchg
std
dec
xchg
sbb
mov
mov
popf
mov
xchg
lcall
jle
pop
and
push
xchg
insb
mov
pop
enter
outsl
pop
subl
mov
jmp
pop
mov
mov
ljmp
es
pushf
jae
or
push
mov
or
pop
jb
mov
adc
xchg
xchg
lea
clc
insb
jle
dec
outsl
dec
cltd
sub
mov
loop
or
aad
insl
mov
mov
loopne
les
fisubrs
sbb
cmc
or
mov
mov
out
cmp
loope
aas
cld
mov
imul
inc
out
cld
mov
cmp
fadd
imul
sbb
mov
std
mov
push
push
lods
imul
cmp
int
sub
lret
add
mov
inc
lock
xlat
shll
jo
arpl
or
pop
mov
cmp
ficomps
inc
and
mov
cmpsl
push
neg
addr16
push
mov
in
sbb
pop
push
push
negb
aaa
les
idivb
push
push
iret
sub
mov
add
aad
or
roll
dec
aas
xor
jmp
fists
mov
test
mov
inc
jp
mov
pusha
xor
nop
cld
inc
je
adc
into
dec
je
je
sub
inc
imul
outsb
js
movsb
mov
js
leave
cltd
repnz
lods
pop
add
dec
int3
pop
add
cs
mov
xor
jnp
add
xchg
push
mov
lds
test
adc
adc
mov
mov
outsl
mov
xor
sub
fcmovbe
jecxz
sbb
sbb
mov
gs
inc
xor
ja
loop
cmp
cli
and
stc
or
xor
mov
sar
stos
push
jbe
imul
mov
icebp
pop
popf
sbb
jb
mov
test
cmp
sub
push
repz
xchg
data16
cmpb
loop
out
inc
imul
pop
out
iret
lods
dec
loopne
jo
std
in
popa
add
xchg
pop
sti
in
push
gs
or
fdivr
ja
decb
push
sbb
test
shll
iret
sbb
lea
push
pop
lret
pushf
je
jecxz
cld
dec
lcall
xchg
mov
and
jge
dec
sahf
imul
sub
sbbl
and
popl
loope
mov
scas
fwait
dec
out
lods
ds
jae
ret
inc
mov
fxch
enter
mov
inc
fnstsw
lods
rol
popf
rol
xchg
xor
and
jmp
xor
xor
insb
sbb
ret
lahf
mov
lds
es
sbb
pop
xlat
push
jle
call
dec
mov
dec
jle
mov
inc
mov
push
test
pusha
shll
mov
mov
xor
je
stc
sbbb
call
adc
xor
in
pushf
sbb
sbb
fdivrp
push
das
push
ffree
jae
mov
cmp
cmpsl
fidivrs
inc
scas
add
cmp
add
jo
or
lock
jae
and
jo
lcall
stc
or
xchg
ja
sub
jb
push
out
cmp
cmp
or
jne
insb
outsl
and
mov
mov
ss
mov
mov
pop
xchg
imul
cmpsl
sub
fmulp
mov
lea
pop
mov
jge
cli
xor
call
insb
xor
arpl
adc
lock
lret
popf
rcl
outsl
mov
add
pop
jbe
aas
xchg
lcall
les
xlat
sahf
stos
xchg
xchg
pop
push
mov
jp
gs
sbb
sti
fldt
and
nop
pop
xor
lret
insl
fistps
jbe
xor
push
cmp
std
inc
and
not
aas
sbbl
ret
and
cmp
and
mov
outsb
mov
and
addr16
cld
lahf
and
mov
scas
ds
fistpl
lret
ret
stos
call
mov
push
icebp
push
pop
and
sbb
in
jg
test
gs
jg
or
jno
popf
mov
jo
mov
push
cmpsb
int3
xlat
outsb
and
popa
das
ss
call
ja
cmp
inc
mov
mov
xchg
pop
fidivs
icebp
mov
adc
scas
xlat
sub
cmp
add
ds
and
pop
fnstcw
mov
sbb
lods
cmp
loopne
mov
mov
push
sbb
nop
push
faddl
lahf
cli
push
adc
adc
insb
and
cmp
in
lahf
push
pop
aad
les
mov
mov
sub
xchg
sub
dec
in
dec
aam
repnz
mov
adc
sbb
mov
roll
cmp
aad
push
jns,pn
mov
xor
dec
adc
cmc
mov
mov
js
scas
or
scas
sub
stos
push
sbb
mov
out
sbb
jp
loope
aaa
les
aad
cmp
pop
gs
movsl
dec
loopne
inc
or
adc
sub
sbb
sbb
shrl
decb
stc
mov
jmp
push
sti
sub
fwait
jmp
icebp
je
lods
je
and
fdivp
jns
push
ds
addr16
dec
bound
jne
fimull
push
xchg
jno
xchg
ja
pop
and
add
jecxz
adc
data16
jnp
mov
fmul
push
pop
and
leave
mov
int
mov
sbb
push
lret
popa
dec
pop
punpckhbw
adc
mov
popa
push
adc
jo
insb
sub
inc
inc
out
je
movsb
inc
in
xchg
scas
jg
dec
movsl
xchg
pushf
dec
or
push
shrl
aam
or
addr16
iret
inc
les
cmp
lds
cmpsb
loope
in
pop
pop
mov
xchg
aad
jns
aaa
jg
inc
push
leave
pusha
call
shll
mov
adc
shl
in
push
pushf
leave
in
cmpb
mov
fsubrp
sub
imul
aas
jecxz
jecxz
sbb
lds
push
outsb
movsb
es
mov
inc
lret
std
lods
enter
mov
lds
xchg
lcall
fnstsw
aas
dec
pop
pop
icebp
rolb
mov
test
push
jne
pop
les
hlt
lock
test
into
movb
pop
mov
sbb
add
popf
dec
repz
cmpsb
mov
or
jp
xchg
cli
add
nop
daa
pop
and
or
arpl
arpl
lock
mov
push
mov
out
xchg
fisubrl
lods
pop
dec
pop
dec
xchg
jae
and
inc
or
push
ficomps
pop
fldt
fldcw
add
push
lock
outsb
lret
sarl
aam
mov
add
xor
mov
imul
push
in
sbb
jp
mov
popa
cmpsl
jmp
lea
int
mov
ja
sub
dec
mov
cmp
int
pop
xchg
ljmp
push
and
ds
cmpsb
xor
addr16
pop
cld
pop
mov
jnp
hlt
je
pop
jns
xchg
shll
mov
cli
movsb
inc
cmc
ficoms
lea
loope
insb
pop
xchg
xor
loope
mov
lea
add
outsl
cmp
ss
jno
rcll
xchg
push
sub
daa
and
lcall
outsb
test
out
pop
cmc
jmp
fnsave
fildll
add
add
mov
inc
inc
loop
dec
sub
call
pop
loop
mov
jo
mov
ret
in
xor
aaa
cmp
mov
adc
jecxz
pop
arpl
pop
mov
pop
sarb
fisttpl
testb
mov
es
sub
jp
cli
inc
lods
call
stc
sub
repz
pop
test
rcrb
inc
imul
mov
sub
sarl
sub
fildll
jae
xorb
dec
jmp
and
mov
and
sbb
pop
dec
jle
scas
inc
fwait
dec
cli
outsb
mov
mov
jge
mov
jle
arpl
ficomps
nop
mov
in
mov
sbb
dec
dec
pop
sub
push
mov
sar
js
sub
pop
pop
testb
xor
mov
mov
movsl
push
ljmp
mov
ljmp
jg
inc
adc
xchg
pop
cmp
push
dec
and
leave
pop
outsb
pop
mov
stc
cmp
fldcw
popa
in
addr16
in
mov
cmp
push
add
mov
lret
das
imul
std
cld
adc
add
mov
test
rcrl
mov
cmp
xchg
shll
imul
and
mov
leave
sub
rorb
push
lock
popa
cld
nop
push
cmp
ds
in
je
jmp
out
jo
jbe
dec
cmp
sbb
and
pop
lahf
add
movsb
repnz
dec
cwtl
adc
xchg
nop
in
rclb
inc
adc
push
int3
aas
xor
adc
adc
mov
rorb
rcll
push
shlb
int
mov
sbb
adc
cmpsb
pop
cmp
mov
pop
mov
dec
aad
mov
lea
mov
jae
call
lods
std
shrb
inc
lcall
xor
addr16
pop
jg
mov
in
mov
shlb
cltd
test
out
jns
fnstcw
filds
inc
gs
cmpl
lahf
sub
jmp
xchg
jp
lods
loope
inc
inc
mov
clc
loope
hlt
jno
fcompl
push
rcl
fimuls
inc
sbb
fcmovnbe
mov
daa
cwtl
xchg
leave
inc
cmp
sub
lds
inc
xor
cmp
dec
movsl
sub
pop
add
push
dec
and
aas
pushf
xchg
cmp
int3
repz
popa
push
mov
fcomps
push
and
lea
ret
lods
push
std
out
push
mov
aad
hlt
jb
cltd
xor
add
dec
cmpsl
pusha
inc
pop
aam
lock
mov
mov
leave
fsts
int
testl
js
loope
scas
fcoml
clc
xchg
cmc
push
repnz
out
rorb
xor
sbb
xchg
mov
push
leave
adc
dec
mov
push
add
push
push
aas
dec
jns
arpl
inc
enter
cs
lea
and
and
push
out
imul
pop
loope
cmp
dec
mov
in
frstor
sbb
pop
inc
inc
inc
ss
xchg
mov
test
and
inc
pop
leave
int
xchg
repnz
fistps
cwtl
stc
add
cmpsb
xchg
mov
sub
push
sar
or
mov
in
test
dec
sub
movsb
mov
mov
push
pop
sub
test
pop
stc
imul
jo
adc
push
dec
arpl
divl
lahf
push
mov
push
mov
mov
inc
aaa
daa
dec
pop
repz
xchg
jge
cmp
shl
inc
data16
xchg
cmpxchg
push
push
daa
fdivrl
lahf
xor
lods
and
das
rep
ficoms
mov
imul
jmp
jecxz
out
cmp
andb
out
cmp
inc
xchg
xchg
sbb
mov
jle
xchg
sub
push
fisttpll
or
shlb
dec
cmp
shrb
icebp
leave
filds
loop
scas
stos
dec
mov
pop
pusha
xor
in
cwtl
outsl
iret
sub
push
add
xchg
jbe
bound
ss
add
iret
rcrb
clc
cltd
xchg
in
mov
mov
sbbl
push
es
dec
test
add
test
je
int
or
in
or
xor
call
mov
pusha
jp
das
xchg
mov
sbb
das
jns
imul
dec
ljmp
or
push
push
stos
out
sbb
jmp
sbb
in
call
pop
xchg
enter
and
aaa
push
jns
mov
cld
cmp
lods
mov
mov
cmp
inc
nop
xor
lods
ficoms
push
out
ret
aam
add
mov
jb
out
dec
out
imul
xor
cmpsl
mov
jnp
mov
jae
out
sbb
jbe
aaa
dec
sub
mov
shr
xorb
je
or
pusha
add
cmp
push
jne
test
mov
scas
sar
pushf
adc
xchg
rclb
fs
rcr
jne
das
cmc
cmp
leave
loop
mov
fs
pop
jnp
dec
sub
mov
aaa
sbb
into
xchg
and
push
in
mov
frstor
pop
mov
mov
insl
lcall
dec
dec
or
mov
jae
cwtl
cld
pcmpgtb
andl
or
enter
in
repz
shlb
mulb
mov
push
jo
ret
xchg
mov
arpl
daa
inc
jbe
sbb
addr16
mov
pop
out
scas
mov
mov
loope
add
jmp
in
out
loop
sbb
mov
cld
in
clc
push
out
mov
mov
push
dec
int3
ja
and
adc
xor
pop
sbb
push
and
and
ljmp
mov
mov
pop
fstpt
xchg
movsl
cld
movb
iret
cmpsb
aas
outsl
pop
rcr
pop
out
mov
loope
mov
adc
jecxz
lahf
pop
mov
xchg
cmc
mov
ror
mov
jl
sahf
sbbb
dec
xor
loop
je
and
lock
or
mov
cmp
ret
cld
enter
dec
and
inc
or
mov
fdivl
outsb
cwtl
mov
mov
xchg
or
dec
fsts
lea
jne,pn
lea
jae
loop
mov
pop
shl
rorb
lahf
mov
jne
mov
rcll
enter
bound
dec
jns
jg
ret
repnz
sbb
mov
idivb
jmp
cmp
jmp
mov
loopne
test
xchg
out
ret
and
dec
aaa
pop
aad
adc
rcrb
jo
xchg
lock
int
dec
sub
fistpl
push
jge
pop
lcall
sub
push
sbbb
xchg
fcomps
inc
jp
pop
fldcw
jge
mov
mov
lcall
rolb
stos
stos
inc
mov
xor
cs
enter
adcl
movsb
ret
loope
aam
push
sub
mov
cmp
cmp
mov
adc
mov
filds
orb
in
stos
imul
or
xchg
inc
in
sub
mulb
and
movsb
jecxz,pn
mov
inc
std
pop
mov
loope
adc
xor
jns
and
or
xor
mov
mov
add
sbb
aaa
stos
addb
add
sarl
insl
fwait
arpl
adc
jecxz
dec
push
imul
movsb
fidivrl
cmp
cld
arpl
push
inc
add
scas
mov
insb
cmp
iret
insl
jnp
push
orb
xor
mov
sub
rcr
cs
push
and
xchg
inc
and
mov
mov
mov
jb
scas
data16
lahf
mov
insb
mov
add
lock
dec
pop
stos
adc
sub
pop
jecxz
cmp
inc
cmpsl
sbbl
fcoml
mov
lret
dec
je
push
push
sbb
xor
mov
cli
push
outsl
out
mov
dec
shll
mov
push
mov
sbb
popa
repnz
enter
ficompl
xchg
or
dec
shl
jns
mov
or
sub
loope
daa
mov
cs
cmp
cmc
and
cmpl
sbb
add
aaa
xchg
and
roll
mov
adc
xor
jl
dec
mov
mov
andl
push
mov
bound
out
cmp
mov
jnp
pop
xchg
jg
pop
xchg
in
mov
jge
shll
mov
xchg
and
sar
in
xor
popl
imul
icebp
cs
cltd
cmp
dec
and
mov
jno
and
jl
push
lock
mov
int
push
dec
sub
xorb
cwtl
into
loopne
cbtw
out
loop
out
fmuls
out
pop
into
subb
pop
int3
into
xchg
scas
and
in
jns
aaa
mov
jno
lods
inc
dec
jo
pop
lods
pop
mov
mov
sub
and
fisubl
fistl
shll
xlat
mov
mov
jmp
dec
and
icebp
add
mov
fnstenv
jbe
jne
scas
jl
pusha
pusha
les
popf
jnp
inc
push
xor
or
cmp
mov
sub
inc
sti
sub
dec
xchg
mov
adc
lcall
clc
pushf
adc
cs
mov
mov
or
bound
add
xchg
mov
jno
int
insl
adc
int
movsl
std
mov
pop
mov
mov
repz
pusha
inc
push
out
mov
dec
or
sbb
pushl
fidivl
sub
scas
jmp
scas
out
xchg
jno
scas
sub
push
shlb
jns
fcomps
xchg
sti
push
pop
fiaddl
jl
mov
push
aaa
fucomip
pop
jg
rclb
adc
clc
aad
add
dec
adc
int3
inc
adc
inc
push
inc
pusha
sub
popf
or
jo
das
cmpsb
mov
xchg
jl
inc
pop
push
les
mov
and
mov
loope
test
in
aad
aam
call
jle
dec
daa
adc
ret
jno
mov
mov
dec
push
pusha
cmpsb
mov
xor
fildl
das
fsubr
divb
imul
test
fwait
outsl
jno
lcall
mov
loope
adc
push
xchg
mov
lods
repnz
mov
pop
mov
and
jge
jo
mulb
cltd
out
or
les
lods
cltd
imul
outsl
jp
das
test
mov
data16
cwtl
in
lcall
pop
scas
push
mov
adc
adc
push
or
lahf
xchg
into
jnp,pt
pop
push
jno
movsl
push
ret
adcl
cld
sub
jl
filds
xchg
inc
shll
jle
dec
testb
xor
inc
ljmp
mov
lret
stos
outsb
pop
mov
testl
cmp
lcall
cs
stc
push
inc
mov
test
push
int3
cli
les
cmp
xchg
push
xchg
loop
lcall
push
jae
popf
adc
ds
in
push
jno
sub
push
mov
inc
xchg
repz
push
mov
int
inc
cs
xlat
scas
xchg
lret
sbbl
btc
lods
push
aaa
es
fisttps
xchg
sub
sbb
shlb
xchg
fwait
loope
inc
sbb
int3
sub
into
loope
mov
in
mov
add
push
popa
mov
and
hlt
or
adc
nop
xchg
stos
idivb
jecxz
aas
nop
pop
sarb
push
cmp
dec
scas
testb
and
inc
inc
cmp
leave
fistl
or
mov
dec
xor
negb
outsl
sbb
jecxz
xchg
ret
or
xchg
and
sub
gs
and
mov
mov
ds
stos
inc
movsb
mov
addr16
mov
add
cmc
scas
inc
outsl
in
roll
shrb
and
jp
rcrb
xchg
xor
cmc
mov
mov
rcrb
adc
inc
std
push
jne
jl
xor
sti
cwtl
mov
fcmovnu
ret
cmpsb
push
sub
mov
daa
fcompl
sahf
test
sbb
aad
nop
jg
push
outsb
pop
or
arpl
lret
or
jae
sbb
jg
repnz
fmull
mov
bound
in
xchg
aaa
add
xchg
jne
jge
sahf
sti
and
push
lock
add
and
loop
xchg
push
ljmp
adc
mul
fiaddl
jne
sub
pop
out
int3
das
add
fildll
sub
mov
jp
xchg
inc
adc
hlt
and
sub
and
cld
xchg
int
mov
mov
inc
mov
push
pop
ret
pop
mov
aaa
pop
inc
sub
sbbb
cld
insb
outsb
shlb
dec
xor
mov
mov
mov
out
or
xor
fsubrs
sub
and
push
adc
xchg
cmp
insl
bound
pop
fisubrs
dec
dec
jb
and
int
incl
stc
nop
inc
movsb
test
dec
jne
sub
fistl
int3
sbbl
fidivrs
jne
dec
in
or
inc
jp
mov
outsb
lods
and
jp
lock
enter
fimuls
pop
pop
push
add
cli
mov
into
cwtl
lods
cmp
test
hlt
pop
lock
dec
and
dec
fcoml
ljmp
inc
mov
or
or
fnstsw
jne
fdivl
ds
add
mov
ret
push
add
jb
xor
xor
mov
shrb
dec
inc
xchg
lahf
insl
pop
sets
lds
pop
pop
pop
jno
arpl
or
jmp
dec
pop
cmp
push
out
and
cld
dec
mov
loopne
lock
roll
jg
xchg
push
leave
push
pop
pop
fdivrl
ja
lret
ja
pop
cld
repz
mov
mov
jo
add
jl
cwtl
adc
sub
sub
lcall
add
add
pop
push
cmpsb
pop
in
mov
jne
push
sbb
andb
jns
add
lcall
mov
mov
je
cmc
adc
sub
test
std
add
ficoms
and
fwait
dec
pop
and
aaa
decl
out
mov
fwait
ret
jl
hlt
sbb
aaa
pop
pusha
test
les
test
leave
repnz
xchg
std
test
fsubrs
aam
inc
mov
scas
test
aad
cmc
mov
js
sti
or
test
stos
xor
jns
insb
imull
add
xor
or
imul
dec
sub
stos
add
mov
lcall
sub
mov
js
pop
fiadds
hlt
imul
push
test
jmp
cmpsw
xchg
mov
in
ds
pop
popl
hlt
xchg
das
or
fistl
adc
cmp
add
scas
or
mov
fwait
cmc
jmp
notb
inc
movsl
lahf
and
ret
lret
inc
iret
xor
mov
icebp
mov
testb
pop
jmp
clc
icebp
jg
inc
aam
cmpsb
loopne
imul
cmp
fwait
mov
test
pushl
mov
ss
sub
add
sub
sbb
ja
mov
xchg
lds
out
push
mov
push
mov
call
and
xor
test
dec
call
or
sub
jae
fsubrs
jle
xchg
cmp
in
rol
nop
sbb
fsubrs
xchg
stos
fistpll
imul
or
testb
sbb
and
rorb
fwait
adc
dec
repnz
mov
cmp
mov
ds
pop
adc
push
in
adc
sahf
adc
mov
test
sahf
push
mov
divl
or
add
mov
add
push
mov
or
push
add
lea
xchg
out
in
inc
aaa
inc
dec
or
std
call
insl
fistps
lds
lcall
fidivl
jbe
xor
ja
pop
popf
add
lea
push
popa
xchg
add
push
loopne
mov
iret
add
pusha
push
into
mov
in
adc
xchg
pop
cmpsb
fnstenv
pusha
scas
xchg
outsl
fstpt
sbb
mov
mov
pusha
pop
jecxz
cltd
jbe
jo
cmc
es
jmp
fmuls
xor
icebp
movsl
sub
push
mov
xchg
popa
lds
pusha
sti
fcoml
insl
rcl
enter
adc
pop
cmpsb
popa
and
jg
or
add
or
inc
push
hlt
jle
mov
inc
out
lds
mov
sbb
fsubp
dec
lret
test
clc
test
jl
push
push
mov
pop
nop
push
mov
sub
or
add
mov
and
mov
xor
outsb
pop
jmp
sub
jecxz
leave
and
mov
cld
shll
jne
jge
or
mov
cmpl
das
clc
je
add
bound
mov
inc
movsl
fdivs
std
inc
xchg
hlt
pop
xchg
fstl
out
lret
test
call
shlb
xor
or
std
mov
subb
das
jl
mov
push
or
nop
out
xchg
clc
jae
or
hlt
pop
pop
rclb
testb
xorb
jns
mov
inc
pop
inc
add
bound
ss
cmp
lahf
std
cs
adc
lcall
adc
mov
inc
inc
sbb
pushaw
in
arpl
in
adc
push
jb
test
cmp
push
imul
pop
pop
fnstenv
je
stos
sahf
push
inc
in
cmp
in
push
out
sub
jb
nop
fcmovu
push
loopne
cmc
xor
push
testb
cmpsl
mov
and
xor
rclb
push
sbb
jl
cmpsl
adc
rorb
lret
les
aam
lock
lock
xchg
xlat
dec
or
movsl
lea
dec
mov
push
in
int
jno
repz
mov
neg
aas
inc
inc
aas
jne
lcall
xchg
adc
movsl
int3
mov
mov
adc
fwait
push
sbb
mov
daa
mov
scas
lods
push
mov
mov
adc
or
rolb
mov
ret
daa
lock
sti
fwait
ds
or
inc
lret
ret
sar
std
sahf
sub
mov
jmp
jns
jne
mov
xor
cmpsb
outsl
stos
xor
call
fs
into
aaa
nop
mov
outsb
movsb
jmp
cmpsl
aas
subl
ret
insl
loopne
fimuls
imul
ret
ficomps
mov
in
add
lods
sub
mov
cmpsb
cs
mov
hlt
dec
cmp
mov
xor
jae
adc
jp
ds
leave
jl,pn
jns
testb
test
xchg
push
cmp
fstps
in
inc
xchg
mov
mov
test
push
sub
inc
adc
push
inc
outsl
pop
pop
movsl
incl
lods
mov
roll
scas
repz
inc
adc
pop
pop
ljmp
inc
push
pusha
rorl
add
dec
push
mov
jecxz
sbb
cs
lahf
gs
loopne
dec
or
push
sub
xor
mulb
imul
adc
repz
xchg
push
enter
repnz
imulb
push
adc
mov
ret
add
in
insl
outsb
lods
push
add
mov
push
movsl
cmp
popf
dec
into
and
and
lahf
cmp
and
bound
js
movsl
dec
test
jo
cmp
lods
nop
inc
int3
ret
or
ror
out
mov
mov
out
mov
jb
jne
cmc
mov
test
adc
pop
dec
in
bound
xchg
roll
lds
incb
pop
and
sub
mov
pushf
shlb
sbb
ds
imul
shl
add
imul
push
adc
andb
pop
test
rclb
push
ret
int3
and
push
mov
pop
scas
cld
in
filds
int
fcmovne
pusha
xchg
nop
push
into
rorb
jb
out
imul
and
movsl
push
in
pop
mov
notb
and
cltd
nop
out
rolb
pop
lret
std
jb
inc
xchg
cmc
inc
bound
push
push
cmc
int
bound
jns
pop
ds
ret
addb
scas
jne
out
movl
cltd
ljmp
stc
xor
aas
adc
test
scas
and
out
inc
sti
adc
mov
aas
in
dec
dec
leave
push
outsl
pushf
or
hlt
push
and
mov
pusha
cli
popa
lods
ret
pop
inc
mov
test
sbb
jo
push
pop
stc
add
mov
int3
pop
divps
fisubl
add
fdivs
ja
bound
xchg
cmpsl
sub
fdivs
sub
jbe
adc
xor
lret
fwait
js
mov
jmp
sub
ret
nop
add
adc
add
adc
xlat
out
lods
jg
add
loop
adc
aam
subb
or
adc
filds
push
mulb
stos
test
inc
mov
jl
scas
cltd
jne
dec
lcall
popa
incl
adc
fisubrs
inc
out
fxch
rcrb
mov
fbld
adc
leave
je
fdivrs
dec
aam
lds
mov
fidivs
mov
aaa
jl
mov
fsubrl
cmp
adc
and
push
and
inc
addl
mov
test
sub
dec
lds
arpl
sahf
call
jle
jo
xchg
lds
adc
pop
xchg
lret
mov
mov
add
pop
inc
shll
or
cmp
lods
es
daa
idiv
mov
mov
stc
dec
lret
mov
pop
pushf
sub
jle
cwtl
or
pushf
jnp
xchg
sbb
data16
ret
mov
adc
sbb
cmpsl
dec
sub
sub
inc
addr16
inc
pop
leave
mov
insb
jge
xchg
dec
outsb
jle
sub
cmp
and
pushl
fildll
scas
dec
leave
push
cmpsb
mov
fnsave
int
push
call
scas
pop
js
cmpsl
cs
test
mov
push
inc
fiaddl
and
cmp
adc
mov
iret
mov
out
pop
mov
xor
mov
mov
enter
ret
or
sub
data16
and
jmp
jno
push
mov
arpl
cmc
xorl
pop
xchg
daa
cmp
jp
and
ljmp
mov
xchg
test
test
loop
lods
je
mov
insb
mov
lret
dec
mov
movsl
push
rcll
adc
fcmovnbe
out
mov
clc
sub
inc
and
xor
shl
mov
jp
inc
pop
push
cmpsl
sbb
loop
hlt
jb
fsubrs
push
mov
lea
adc
movsl
ficoms
inc
cmpsb
pop
int3
inc
add
loop
mov
std
or
push
out
jnp
jns
ret
pop
loopne
mov
sub
lret
pusha
cmp
imul
xor
aad
clc
adc
pop
dec
into
add
cmp
sub
aas
adc
sbb
aam
and
mov
mov
aas
push
mov
bound
mov
jns
jg
jecxz
mull
clc
test
out
jl
fidivs
xor
mov
addl
jne
fadds
or
jge
popa
xchg
jbe
jne
pop
mov
pop
out
test
sub
inc
bound
sti
rcrb
scas
mov
js
lahf
sbb
cmp
push
or
pop
inc
cltd
sar
dec
int3
in
loope
shlb
dec
inc
and
pop
movsl
test
aam
inc
jmp
das
xchg
xchg
repnz
enter
fnstcw
lahf
dec
insb
xor
hlt
adc
xchg
aam
mov
push
icebp
pop
fwait
pop
aas
lret
int3
cmp
test
sbb
dec
pop
xor
xchg
inc
pop
fisubrs
cli
xchg
daa
popa
inc
cmp
icebp
sbb
xor
dec
or
cmp
stos
imul
rolb
sahf
mov
pop
xchg
sti
test
sub
popf
inc
andb
movsl
addr16
dec
jo
pop
out
sub
jp
ret
dec
pop
ficomps
pop
jg
pop
ja
pushf
out
test
cmp
popf
dec
sbb
lahf
roll
jge
lods
fs
jecxz
push
lahf
dec
adc
add
dec
mov
jbe,pt
push
cmp
nop
pop
loop
orl
pop
movl
dec
lods
mov
inc
pop
outsb
pop
push
dec
or
rorb
sub
pop
push
das
jl
cmp
cmc
std
ret
lock
daa
pop
xchg
cltd
jae
je
inc
imul
sahf
cmp
imul
jmp
mov
mov
bnd
icebp
xlat
push
cmp
iret
pop
push
bound
test
push
lods
nop
cmp
mov
jp
jl
jno
push
dec
stc
dec
sub
jmp
jmp
shlb
dec
mov
jl
adc
lahf
cmp
push
push
mov
xor
jg
mov
sarb
fisttpl
xor
mov
jmp
mov
in
adc
mov
and
push
jae
inc
jns
pop
pop
into
dec
stos
jb
mov
mov
and
xchg
push
jno
sub
jo
and
cwtl
xchg
xchg
xor
iret
lods
sub
cmovns
fwait
daa
dec
add
pop
add
push
xchg
test
cmp
je
aad
outsb
rorl
sub
ljmp
and
sub
rep
jae
and
movsb
mov
mov
xor
pop
xlat
imul
pop
scas
pop
and
add
pop
jb
sar
mov
xor
fs
arpl
int3
pop
data16
fsub
pushf
and
mov
add
push
mov
push
mov
jl
ss
cmc
das
insb
stos
aas
in
mov
ss
sub
jge
mov
add
cld
xlat
int3
enter
and
inc
cmp
scas
loop
push
idivb
push
xor
and
stos
mov
or
cmpsl
stos
sti
push
cmp
push
or
int3
inc
lret
adc
xor
lock
sub
sub
sbb
dec
inc
fadds
test
cli
orl
rolb
push
dec
clc
xchg
loop
sub
cmpsb
add
movsl
cld
imul
pusha
cmp
repnz
fmull
icebp
inc
in
mov
pop
jg
sbb
scas
in
and
xchg
mov
popf
shrl
cmc
cmp
xor
aam
cmp
int
sbb
ds
icebp
push
sar
push
movsl
pop
dec
std
dec
inc
daa
in
mov
cmp
or
or
xor
out
mov
ud1
rclb
push
addr16
ja
add
push
jle
and
stc
inc
dec
cmpsb
sub
and
jle
test
push
leave
in
add
pushf
xchg
sub
sub
mov
jmp
iret
loopne
leave
sbb
das
hlt
jecxz
dec
mov
cli
cmc
dec
aas
das
pop
push
lret
xchg
mov
mov
or
iret
push
in
cmp
not
mov
pushw
xchg
pop
push
and
mov
scas
cltd
and
aas
les
mov
jl
mov
arpl
and
xor
and
or
xorb
mov
rep
idivl
mov
xchg
push
xchg
mov
inc
int
shlb
clc
mov
push
sti
adc
in
push
sbb
adc
movsb
rdmsr
push
in
mov
mov
addl
outsb
or
dec
gs
adc
mov
sub
lret
push
call
ss
mov
aas
sub
xor
js
out
xchg
mov
icebp
les
je
pop
adc
mov
out
and
call
inc
loop
aaa
xor
cmovle
push
insb
out
or
dec
add
out
pushw
cltd
call
das
gs
inc
sahf
xor
cltd
add
nop
add
jle
push
mov
jmp
aas
xor
icebp
jno
inc
pop
leave
push
sub
push
dec
repnz
leave
frstor
mov
popf
movsb
je
pop
mov
rorl
jnp
add
push
cli
orb
push
add
out
or
cld
pop
mov
pop
out
add
cmpsb
inc
or
fwait
add
sbb
mov
lock
and
inc
pop
scas
scas
enter
pop
jnp
je
ss
push
mov
or
scas
push
push
push
and
sub
add
jmp
mov
mov
mov
addr16
xor
push
or
sbb
cld
mov
ret
outsl
fmull
push
jecxz
mov
stos
mov
gs
filds
cld
lret
jmp
jmp
sti
je
das
aas
or
in
imul
lds
jb
ds
pop
pop
lock
dec
inc
push
mov
sub
sbb
xor
xchg
xor
mov
pop
pop
jp
sub
sbb
test
inc
cmpsb
dec
and
gs
in
sbb
movsl
mov
mov
stc
or
pop
in
and
in
ficoml
and
sub
dec
mov
and
add
pop
mov
inc
leave
fisttpl
mov
lock
int3
inc
jns
pop
shrl
adc
jb
cmp
cmp
jg
add
test
fmull
mov
inc
aam
inc
ljmp
mov
add
cmp
es
jns
xor
and
fdivrp
push
add
jno
inc
rcll
sbb
pop
dec
clc
outsl
icebp
filds
int
adc
mov
cwtl
mov
fists
in
test
push
out
movsb
lds
aad
mov
ja
int3
add
arpl
xor
adc
out
xor
jmp
outsb
scas
stc
dec
in
dec
add
loopne
pop
inc
xor
add
sbb
pop
jl
push
add
icebp
scas
sbb
mov
adc
push
mov
mov
orl
fiaddl
lods
test
pop
out
dec
imull
mov
test
mov
sbb
xor
les
jp
aaa
shlb
xchg
jno
mov
fldcw
pusha
push
scas
shlb
sbb
inc
out
adc
cli
xor
mov
iret
arpl
xor
fistps
fldenv
loopne
xor
lock
jb
pop
xchg
mov
popf
shll
negb
lock
rorb
add
and
and
test
clc
sarb
fsubrs
mov
sbb
push
fwait
cmp
repnz
js
pop
jnp
sub
or
cmpsl
jle,pt
sbb
aas
xchg
fsubrs
andb
je
mov
push
int3
and
jb
mov
ljmp
fs
mov
cmpsl
loope
cmpsb
inc
popa
lds
add
jbe
jae
inc
sarl
fwait
sub
ljmp
jle
ljmp
jno
sbb
cmpsb
pop
and
outsl
xor
sub
cmp
jo
sub
sarl
cwtl
loopne
mov
jl
push
outsl
ret
test
or
push
test
or
movsb
cmp
lret
inc
pop
movsl
push
inc
pop
cwtl
in
sub
mov
add
inc
mov
xlat
xchg
pop
sahf
xor
fld
or
mov
and
dec
mov
pop
adcb
fldt
in
std
ret
jbe
es
push
mov
and
loopne
cwtl
fbld
or
sub
test
mov
xchg
insl
into
mov
mov
cs
hlt
push
out
ret
adc
push
mov
or
fdivs
cmp
subl
mov
shll
flds
jp
inc
cs
fcomps
dec
mov
jp
xor
jnp
jbe
stc
dec
jg
inc
push
cmp
jae
xchg
stc
sbb
add
or
cmp
mov
cli
mov
jp
popf
iret
fcmovnb
dec
lret
test
clc
mov
adc
and
test
enter
inc
inc
into
mov
pusha
lds
push
insl
negl
aam
fs
in
dec
or
mov
into
sub
mov
mov
out
lret
cmp
leave
dec
pusha
cmpsb
popa
pop
jle
orl
roll
dec
mov
mov
sub
jbe
mov
mov
xchg
pop
pop
xchg
sub
adc
imul
dec
xchg
sbb
stos
insb
cmp
pusha
lret
das
dec
xchg
mov
add
flds
or
jae
mov
push
lret
test
dec
cmp
call
ret
sti
xchg
pop
into
pop
dec
add
cmpsl
sti
inc
loopne
loopne
jle
inc
icebp
in
cmpsb
and
cmp
insl
mov
push
into
lret
add
mov
inc
fstps
orb
push
rol
fstl
fs
sti
aad
cmc
test
clc
xchg
or
pop
in
xor
incb
fistl
pop
cmp
ficomps
enter
xor
icebp
hlt
dec
xchg
data16
leave
xor
in
cmp
or
push
cmp
cmp
jecxz
pop
mov
stos
loop
pop
xor
sub
adc
inc
icebp
dec
jnp
xchg
test
inc
mov
xchg
stos
and
xchg
test
dec
jecxz
popf
ret
sbb
xchg
push
imul
pop
jl
ja
add
jmp
ss
js
inc
cli
out
fcoml
cld
aaa
into
bnd
inc
push
mov
les
sahf
dec
nopl
push
inc
cmp
jmp
dec
lds
jge,pt
fstp
aad
cmp
jge
adc
imul
pushf
es
stos
dec
mov
mov
mov
fidivrs
orb
or
fstl
movsl
jecxz
jecxz
cmp
lcall
cwtl
mov
idivl
add
outsb
stos
push
cmp
adc
icebp
cmp
cmp
pop
arpl
xchg
jno
setae
pop
sbb
in
fbld
in
shl
les
inc
sbb
xor
js
mov
and
rcll
shl
das
sbb
xchg
movb
adc
mov
mov
mov
jmp
push
ret
scas
add
sub
xchg
out
out
mulb
mov
jnp,pt
adc
sub
iret
adc
adc
or
stos
and
lret
push
js
mov
and
and
xor
inc
pop
std
jbe
push
cli
jb
sti
arpl
lahf
sub
sar
mov
in
in
leave
push
aas
jl
dec
je
push
adcl
sbb
push
inc
movsl
repz
push
stc
dec
std
test
sbb
and
jge
sbb
dec
dec
pop
ds
into
aam
xor
lds
xchg
mov
test
inc
jo
dec
hlt
push
mov
nop
notl
movsl
inc
mov
andb
mov
inc
dec
aad
in
daa
and
mov
cltd
mov
nop
push
loop
hlt
cmp
jp
daa
push
andb
outsl
jns
aam
not
das
mov
ja
inc
loope
pop
call
or
rorl
sar
insl
add
test
xchg
out
cmp
inc
adc
xor
arpl
sbbb
mov
push
xor
pop
divl
and
xchg
jb
rol
outsl
aad
fistps
inc
fcmovbe
clc
jns
ljmp
scas
jns
lahf
mov
fisubl
test
add
ret
mov
shr
push
shll
sbb
and
lods
adc
adc
mov
xchg
es
pop
ret
dec
dec
aas
sub
popf
add
stc
arpl
cmp
dec
mov
push
push
aaa
loope
int3
xchg
pop
xchg
jns
fcmovbe
push
jecxz
cmp
add
fnsave
push
jnp
out
jns
and
mov
jmp
mov
popa
sub
add
bound
push
jbe
lea
popa
cld
jle
jmp
rcrb
inc
xchg
mov
iret
icebp
insb
sarb
movsl
mov
stos
cmpsl
or
mov
testb
es
jecxz
and
rcr
stos
or
mov
hlt
or
repnz
roll
loope
and
scas
sbb
rol
or
or
loopne
push
mov
xor
adc
jae
aam
dec
lret
movsl
in
decb
cld
pop
and
loopne
jg
leave
ja
imul
icebp
cmp
lret
xorb
adc
mov
cmp
jmp
nop
arpl
mov
pop
movsb
data16
adc
mov
cmp
and
sbb
inc
lcall
pop
mov
jmp
push
jle
xchg
sub
insl
rol
out
aaa
jecxz
sti
mov
adcl
pop
leave
dec
cmp
xlat
stos
lret
mov
push
xchg
mov
fimull
in
ds
stos
aad
loope
sub
movsb
ret
cltd
push
orb
xchg
arpl
aam
outsl
push
cld
xchg
push
fdivrs
mov
xchg
cmp
fcomps
mov
outsb
popa
mov
cmp
ficompl
subb
mov
jmp
jbe
fisubrl
idivb
fs
dec
pop
sub
out
int3
insb
cmc
or
lods
aas
cmpsb
fildl
mov
adc
andl
jno
in
jno
cmp
push
gs
inc
xchg
push
movsl
in
cmp
outsl
pop
add
push
jecxz
cmp
jnp
test
lret
push
out
les
mov
push
inc
push
movsl
pop
rol
mov
mov
cltd
mov
mov
push
add
cmp
mov
rclb
fsubs
jmp
ja
jmp
inc
jg
scas
cmp
pop
mov
pop
xor
xor
inc
insl
scas
lret
xchg
mov
out
lcall
pop
jne
add
push
test
jp
fucom
fisubs
xchg
mov
sbb
pop
mov
pop
rorb
xchg
and
mov
jae
mov
loopne
add
repz
and
fcomps
pop
aas
rcl
cmc
or
inc
xchg
jo
ss
lcall
les
inc
arpl
add
cmp
out
lret
sbbl
mov
xorl
retw
inc
xchg
jo
rcl
out
add
xor
repnz
xchg
pushf
add
es
cltd
test
mov
repnz
jnp
pop
icebp
stc
negl
mov
mov
fbld
sahf
mov
sub
pop
aad
cmp
or
data16
mov
adc
or
inc
test
sub
cmpsl
cmpsl
ret
dec
mov
lods
or
ss
jo
and
or
push
aas
inc
call
pop
jns
mov
mov
repz
mov
mov
shr
xchg
mov
xchg
pop
mov
and
sahf
ljmp
stos
pop
mov
data16
bound
cmp
xor
int3
sub
mov
bound
push
mov
push
lret
adc
insb
mov
enter
push
cmp
mov
sbb
orb
pop
fisubl
mov
xchg
lods
pcmpeqd
shll
cwtl
sarl
xor
das
or
sbb
das
dec
mov
push
inc
pop
mov
mov
push
adc
mov
ljmp
and
mov
sub
js
add
pop
pop
dec
and
in
jecxz
inc
js
daa
addb
aaa
mov
mov
push
or
mov
cmpsl
test
mov
jbe
jo
popf
outsb
mov
es
jne
or
xchg
call
xor
cld
cmc
jns
lods
addb
les
or
xchg
jle
inc
sub
push
mov
ja
mov
mov
mov
jl
scas
icebp
mov
push
sarb
cld
or
shll
insl
cmp
pop
sub
mov
pop
jb
push
jp
push
cmp
movsl
xor
dec
inc
ss
xor
add
push
xchg
lea
cltd
rcl
xor
inc
les
pusha
xlat
pop
lock
cmp
cmpsl
dec
mov
test
xchg
imulb
fcomps
mov
mov
imul
fs
lahf
rcrb
jmp
sbbl
sub
repz
sub
hlt
popf
aas
mov
lcall
adc
in
add
dec
addr16
adc
clc
pop
ret
mov
dec
cmpsl
add
notl
cli
popa
in
mov
jnp
out
pop
mov
insl
mov
push
repz
cmp
in
add
cmpsl
push
push
int
scas
inc
lods
xor
stc
pop
ss
pop
and
testl
pop
pop
jl
int3
rcl
enter
dec
and
insl
mov
repnz
mov
icebp
pop
loop
std
fwait
out
cmpsl
jb
mov
jbe
sbb
mov
aam
rorl
in
insl
mov
mov
ret
xchg
loope
push
aad
adc
outsb
call
pushf
jne
and
out
sbb
repz
xchg
adc
rcrl
test
imul
add
push
popa
pushf
mov
std
cmp
fcmovu
mov
jne
fstpt
ja
xchg
inc
xchg
movsb
cwtl
push
fistl
pop
stc
xor
mov
enter
pop
stos
sub
stos
movl
adc
sub
in
adc
xor
sti
cmpsb
jl
push
mov
ds
cwtl
pop
push
adc
jne
pop
dec
scas
dec
mov
outsl
movsb
dec
lret
mov
out
inc
jmp
jb
xchg
xor
push
mov
outsl
inc
pushf
addl
jnp
ds
mov
mov
addr16
cmpsl
jl
mov
mov
or
rcrl
inc
push
clc
mov
es
sbb
add
xor
cld
xorl
dec
xor
shll
clc
pop
test
sarb
fxch
ficompl
adc
jns
sbb
mov
repnz
in
and
push
inc
or
cmp
adc
mov
filds
push
push
or
push
popa
or
daa
xchg
mov
mov
dec
xchg
daa
adc
in
add
sbb
inc
and
and
movsl
add
sub
cmp
add
pop
fwait
inc
and
jno
js
sbb
sbb
jp
inc
or
mov
xchg
inc
hlt
les
xor
sub
push
fisttpll
lret
movsb
addr16
in
daa
mov
and
adc
add
adc
aas
shrl
mov
rcr
or
lock
cli
or
jns
jb
xor
shrb
mov
repz
dec
rcl
add
js
leave
mov
imul
rclb
xlat
add
add
or
stos
lock
sub
fisubrl
xchg
mov
test
mov
lcall
lret
or
mov
mov
test
cld
mov
mov
stc
hlt
andl
xor
outsb
into
or
enter
andl
sbb
popf
imul
scas
int
push
inc
movsb
sub
lahf
lock
call
iret
inc
movsb
sbb
xchg
roll
test
jg
pop
cmp
out
sub
pop
in
mov
sbb
push
sbb
dec
pop
jge
aaa
push
inc
sub
jnp
add
mov
push
mov
mov
or
xchg
xchg
or
mov
in
mov
sub
push
mov
cmp
xchg
shrl
ds
or
shl
cld
inc
or
dec
daa
sbb
jge
fsubrs
mov
xchg
pop
mov
mov
in
in
inc
ret
cltd
repnz
int
out
jecxz
shlb
push
lahf
mov
add
dec
xor
in
dec
mov
aad
sbb
or
in
fnstcw
xchg
dec
mov
pusha
loopne
xor
mov
or
add
ljmp
cli
or
push
cmp
inc
in
pushf
lock
stos
stc
cmp
inc
fs
jl
xor
ror
xchg
mov
pcmpgtb
mov
pop
daa
and
pop
xor
dec
ret
icebp
pop
xor
decb
shl
jnp
mov
repz
xchg
imul
cld
pop
fcoml
jno
fnstsw
adc
int
sbb
daa
fsubs
sub
aam
pop
pop
sub
jo
cmc
mov
dec
adc
sbb
sbb
adc
dec
cmp
rcr
ret
dec
mov
mov
loope
add
movsb
sbb
test
sub
clc
movsb
lahf
pop
call
add
adcl
push
xchg
js
inc
rcl
or
movl
idivl
mov
and
test
or
pop
and
jns
mov
mov
out
cli
push
and
inc
adc
pop
ja
ds
cli
add
mov
xor
mov
sbb
lock
cld
out
cmp
push
scas
mov
dec
cli
sbb
ret
rcrl
add
stos
ror
push
fnstsw
addr16
loop
xor
jecxz
in
lock
enter
clc
test
mov
andb
jg
add
mov
jp,pt
jo
shrl
adc
xor
adcl
insl
jbe
xlat
dec
adc
mov
popf
rol
sub
pop
cmp
inc
pop
xchg
and
jecxz
decb
mov
sbb
push
clc
sbbl
cmp
test
lea
cmp
call
aam
sub
nop
in
and
and
push
xchg
mov
sub
femms
pop
xchg
lock
icebp
mov
and
and
or
addl
mov
stos
test
cmp
push
aam
jbe,pn
loopne
bound
lds
add
jo
popa
cmp
fstps
jecxz
popl
mov
nop
js
out
xchg
push
add
out
cltd
lret
mov
fwait
das
clc
cmc
cltd
dec
movsb
imul
adc
push
daa
sarl
mov
mov
and
mov
scas
test
iret
push
sti
rcl
lods
cmpsl
test
and
cmc
mov
jnp
mov
arpl
aas
je
xchg
fstps
cmp
cmpsl
in
popa
jb
mov
add
push
fcmovnb
rolb
mov
leave
leave
movzwl
adc
inc
gs
mov
mov
shlb
lods
in
bound
sbb
test
jg
mov
jae
sub
ja
jno
nop
lods
dec
jl
push
in
pop
ss
rorl
adc
and
lea
pop
push
push
icebp
cmp
aam
gs
sub
adc
sub
cwtl
jne
jnp
mov
jno
enter
ficoml
icebp
dec
daa
push
sub
sbb
std
adc
mov
sbb
or
cmpsl
xchg
pop
popa
jmp
clc
jnp
add
pop
std
aad
in
jae
push
jl
xchg
or
jo
mov
or
pop
mov
sbb
add
lret
pushf
jb
push
push
out
scas
jne
push
lahf
outsb
xlat
dec
push
mov
pop
or
jmp
pusha
cld
xor
mov
xor
shlb
cmpsl
gs
fwait
test
fidivrs
push
sbb
xor
pusha
insb
ud2
cmp
xchg
xchg
pusha
sbb
xchg
nop
nop
dec
pop
mov
fwait
xchg
xor
cmc
notl
fistpl
jne
fildll
lret
std
pop
std
arpl
std
out
add
sbb
mov
cmp
andb
pop
aad
pop
cmp
imul
and
cmp
push
jae
orl
mov
fwait
clc
xor
sbb
shrb
push
jb
dec
mul
adc
dec
out
pop
xor
sbb
stos
jl
stos
cltd
pop
adc
inc
xchg
mov
sub
jno
bound
les
jmp
adc
adc
push
sahf
push
pop
adc
cmp
cmp
lods
fsubrs
mov
push
pushf
pop
lahf
add
aaa
dec
aad
or
ffree
das
lret
loope
adc
por
add
sarl
movsl
mov
stos
std
mov
in
mov
ror
xchg
lock
xchg
adc
lods
out
mov
dec
dec
cld
fwait
pop
xchg
in
xchg
fistl
cmpb
les
test
jp,pn
add
nop
outsl
jae
lds
je
rcrb
js
mov
not
cmp
fstps
jecxz
sub
jg
mov
or
cmp
in
inc
popl
cs
data16
cmp
xor
dec
je
fiadds
outsl
pop
mov
or
cld
ret
xor
and
dec
push
stos
dec
mov
xchg
imul
sub
push
jp
je
stos
fdiv
mov
bound
push
jne
adc
shl
insl
xor
or
push
sarl
nop
pop
in
shl
inc
sahf
mov
xor
xor
jge
icebp
gs
icebp
add
std
lret
into
adc
jae
or
in
aam
incl
arpl
call
and
xlat
inc
out
mov
loop
mov
fisubrl
cld
xlat
std
repnz
movsb
mov
pop
xchg
adc
dec
push
sbb
xchg
and
call
fsin
mov
addr16
xor
push
push
mov
mov
lea
stos
sbb
cmp
stos
lods
fs
sub
ja
adc
push
adc
pushf
mov
push
movsb
ljmp
or
repnz
es
sbbl
andl
push
sbb
in
push
add
mov
sub
cld
test
jne
mov
inc
inc
ret
mov
push
ds
cmp
stos
add
fbstp
iret
aad
stc
inc
xchg
adc
add
xchg
sti
popf
mov
dec
clc
cld
mov
out
fisubrl
test
push
cmc
rclb
xor
rcrb
je
fcoml
aam
lret
or
imul
addl
int
cmp
fcoms
and
loope
cmp
adc
push
mov
sub
movsl
shlb
xchg
or
push
mov
pop
mov
in
addr16
and
xor
mov
int3
fistpl
dec
insl
std
mov
out
mov
jl
int3
lret
jnp
insb
adc
adc
inc
dec
mov
add
repz
cmp
pop
sbb
xor
pop
xchg
ds
inc
lret
mov
xor
sahf
mov
dec
sbb
sub
f2xm1
add
sbb
sub
icebp
jmp
jp
jae
in
and
lcall
push
imul
ret
sbb
cmc
xchg
push
pop
push
mov
loop
push
sub
or
lret
imul
pop
xchg
or
xchg
shlb
add
jae
mov
pop
jl
xchg
sub
inc
xor
cld
or
ficomps
mov
cmc
jnp
lret
lcall
jnp
sahf
cmc
dec
leave
decl
jp
cmp
leave
sub
adc
out
stos
add
add
inc
cmpsb
leave
mov
arpl
lock
movsl
out
mov
mov
mov
sub
dec
jg
cmpsb
jle
push
mov
stos
lret
pushf
cmpsb
jg
pushf
outsb
xchg
inc
adc
push
aam
jne
in
jae
xchg
inc
xchg
push
ljmp
dec
or
xor
aam
punpckhdq
test
inc
add
and
jb
push
lock
pop
push
mov
ss
mov
fcoml
clc
mov
addr16
das
leave
ret
and
enter
das
data16
in
pusha
outsl
popa
cmpsl
in
rclb
fsubs
add
mov
mov
out
nop
pop
pop
test
xor
jg
jno
adc
lret
jge
sbbl
iret
sub
aaa
xor
or
test
sub
inc
xor
push
and
and
popf
and
pop
stos
dec
lds
sub
decl
pop
out
outsb
imul
xor
xchg
movsl
outsb
loopne
xchg
fistpl
adc
push
leave
popl
arpl
mov
repz
dec
adc
xor
outsl
xor
cmpsl
std
or
out
xor
outsl
gs
fildll
or
jmp
inc
repz
xlat
mov
bound
cmp
mov
cltd
cmp
pop
and
push
movsb
mov
scas
cmp
sub
and
into
test
and
fidivrs
outsb
adc
mov
add
daa
push
divl
mov
ret
out
xchg
out
repz
push
push
and
add
mov
inc
jl
test
sub
push
pop
jg
mov
push
das
or
mov
ret
lret
pop
dec
aam
xchg
add
pop
mov
cmc
add
leave
rcrl
push
inc
pop
pop
outsl
inc
sub
fidivs
mov
pop
cli
fbld
leave
out
test
mov
or
or
jmp
dec
add
imul
in
mov
mov
pop
cmpsb
mov
jg
and
imul
test
mov
xchg
in
imul
pop
mov
mov
leave
xor
imulb
push
push
xchg
ds
scas
jle
es
xlat
imul
bnd
repnz
jl
pushl
sbb
rcrl
xor
mov
xor
cmp
ljmp
fsubr
mov
roll
inc
mov
sub
in
mov
dec
dec
lods
add
mov
mov
imul
xor
into
insl
shlb
test
fs
mov
fxch
rcll
jns
jle
inc
in
jno
ret
pop
ss
test
mov
iret
pop
imul
pop
insb
pop
icebp
mov
movsb
clc
lods
fildll
mov
push
fnsave
xchg
nopl
jg
addl
jbe
jb
jg
add
and
mov
test
xchg
mov
daa
push
pop
inc
add
fs
es
repnz
sub
and
loope
xchg
xchg
repz
fisttpll
rclb
or
mov
pusha
cmp
outsl
xchg
cld
hlt
andl
shl
sarb
xor
xlat
push
push
fstpl
cmpsl
test
sub
addr16
jmp
push
testl
cmp
addr16
lcall
and
aam
sbb
xchg
xchg
dec
fnstcw
loop
push
dec
jbe
jns
ficomps
xchg
mov
pop
mov
mov
mov
jg
inc
jns,pt
test
std
sub
or
cs
testl
push
jae
fldl
in
and
pop
pop
popf
addr16
movsl
push
cmp
pop
mov
and
popa
push
into
cmpsb
addr16
adc
mov
push
fcompl
fwait
int
loop
in
and
add
jo
and
mov
cltd
cmp
stos
jle
cmpsb
cmp
push
sbb
add
lea
in
inc
sbb
mov
loopne
dec
pusha
aaa
js
lock
mov
notl
push
je
or
ja
scas
test
xchg
fmull
rclb
jnp
jns,pt
sti
cmp
mov
cmp
mov
mov
jne
xor
scas
inc
push
int3
add
scas
icebp
xchg
jne
mov
pushf
jb
mov
fstpl
xchg
lods
adc
and
push
push
mov
cmp
cmp
cmpsl
imul
popa
xchg
mov
out
pop
jae
addr16
into
arpl
mov
push
lret
pop
cltd
adc
shl
xchg
shrl
mov
outsl
add
mov
popf
jne
repz
divb
mov
call
test
jp
in
pop
mov
mov
xchg
sahf
jg
mov
dec
jp
addr16
mov
les
add
dec
call
imul
hlt
std
repz
enter
dec
cli
sbb
sub
xor
lods
or
mov
jmp
in
inc
ret
fwait
cmpsl
or
xlat
cmp
scas
insb
test
jg
pop
cmpsl
cltd
inc
xchg
and
mov
int3
mov
lods
xor
test
mov
jb
dec
pop
fsubrs
data16
subb
test
cmp
and
repz
cmc
je
clc
mov
mov
cmc
aam
aam
xchg
je
filds
lea
add
fiaddl
add
jbe
push
sbb
jge,pn
out
in
push
add
mov
cmpl
xor
pop
add
cmpsb
adc
pop
gs
inc
mov
movsl
or
and
imul
inc
pop
flds
dec
movsb
test
fildl
out
shrl
fiadds
je
jae
imul
jecxz
mov
fisubl
out
out
mov
ljmp
movsb
mov
push
out
mov
lcall
mov
xchg
sub
jb
repnz
decb
out
sbb
hlt
sti
add
js
popa
jg
mov
or
fdivrl
pushf
rorl
loopne
addr16
push
mov
ljmp
sub
sbb
mov
iret
fimull
mov
insl
fdivr
cmpl
daa
inc
cmp
fimuls
lea
test
pop
mov
repnz
xor
in
jne
in
stos
mov
jae
mov
jg
fdivr
jl
ret
mov
cmp
lret
test
mov
into
fstps
mov
cwtl
push
out
ljmp
jae
test
mov
mov
xchg
push
dec
jns
mov
inc
enter
int3
or
and
pop
sub
arpl
popw
pop
push
call
or
cmpsl
enter
outsl
push
dec
aad
imul
sub
adc
xlat
repz
inc
push
mov
scas
mov
or
lcall
push
sub
pop
ficoms
xchg
clc
add
js
aad
add
ss
ret
push
fistl
mov
dec
in
jecxz
sub
mov
mov
xchg
jge
push
cmc
and
adc
mov
push
jno
int3
addl
jmp
out
xchg
pop
add
push
call
push
aas
imul
pushw
rorb
scas
push
cmp
cmc
jp
dec
imul
outsl
mov
inc
in
lea
sub
and
popl
xlat
push
fdivrp
jnp
das
xchg
out
push
jnp
out
sub
nop
add
jl
dec
leave
std
adcl
or
cltd
fdivl
xlat
cmpsb
fildl
or
push
adc
mov
xor
sbb
push
mov
inc
das
xchg
jl
adc
mov
addr16
or
imul
xor
popa
push
lcall
fldcw
call
and
loop
dec
clc
push
xchg
cmp
xor
adc
xchg
sub
cmp
jmp
popa
push
or
fistps
jbe
mov
or
test
sbb
aas
and
push
test
adc
lret
sbb
pop
std
out
add
leave
lods
push
aaa
pop
imul
cs
stos
sub
cmp
imul
fimuls
fcomps
jbe
cs
aaa
cmp
jecxz
outsl
and
adc
fwait
jecxz
fs
adc
lds
in
or
xchg
and
call
push
cwtl
enter
xchg
lcall
mov
mov
push
adc
cmp
popf
push
or
sub
inc
push
xchg
stc
sbb
jp
ret
outsl
sbb
or
add
pop
sti
nop
scas
loopne
lret
and
aam
sub
es
dec
lret
negl
in
pop
xlat
test
outsl
aad
pop
je
pop
rcll
lock
pop
subl
adc
pusha
push
xchg
inc
and
xchg
scas
aas
lret
je
les
pop
xchg
dec
out
outsb
icebp
pop
adc
into
pushf
fisttpll
jecxz
xchg
mov
inc
pop
mov
dec
push
jne
testl
xor
addr16
mov
cs
mov
inc
fwait
ljmp
dec
dec
pop
mov
add
loopne
lret
dec
mov
in
daa
sub
cmp
add
xchg
dec
jns
cli
jnp
mov
and
out
loop
test
push
adc
nop
lret
inc
sub
pusha
jbe
and
mov
popf
insb
popa
cmp
cld
sbb
and
jg
push
popf
xor
insb
mov
xlat
cmpsl
icebp
lcall
add
mov
out
aam
aas
das
push
sub
dec
xchg
cwtl
jbe
notb
jno
repz
sub
aam
adc
int
cli
cmpsl
xchg
mov
mov
mov
js
loopne
iret
arpl
sbb
push
jecxz
push
sub
push
dec
dec
or
dec
mov
icebp
push
movsb
rcrl
das
mov
movsl
jp
lret
push
lds
stos
push
mov
rol
mov
xchg
sub
pop
push
imul
jg
es
inc
jge
pop
and
pop
jne
pop
push
inc
out
sbb
lock
xor
lods
test
xor
inc
jno
bound
push
jl
cmp
in
cmp
ret
cmpsb
push
inc
std
fistpll
out
scas
in
inc
and
add
mov
sahf
adc
and
inc
gs
in
divl
je
fnstcw
sub
roll
adc
mov
out
xchg
aam
mov
fidivrs
sti
fsubrl
cld
stos
rcrl
fdivs
sahf
shlb
fs
cld
and
pop
adc
daa
mov
and
mov
pop
loop
xor
dec
lea
inc
cmc
sub
add
mov
push
adc
pop
outsb
sub
pusha
jnp
les
test
popa
sahf
and
inc
and
xor
xchg
repnz
sbb
shrb
fistpl
pop
and
int
add
out
cmpsb
out
imul
push
hlt
pusha
cli
pop
adc
ds
xor
push
test
or
lods
pushf
xchg
ficoms
xchg
cmpsl
popf
fdivr
and
es
scas
inc
fwait
and
xchg
xor
outsl
adc
cli
ja
stos
mov
xchg
sbb
push
push
adc
insb
dec
add
sbb
sbb
ret
add
push
int
and
push
mov
mov
xlat
sahf
push
stos
outsl
mov
or
dec
es
jne
ljmp
xchg
repnz
cmp
inc
sub
neg
pop
cltd
xchg
push
pop
dec
ja
imul
lret
xchg
add
push
gs
lret
adc
push
jge
int
dec
xor
or
cmc
pushl
mov
jecxz
stos
lods
jae
push
dec
dec
aad
pop
pop
inc
dec
loopne
mov
xorps
lret
call
cmp
push
dec
pop
aad
mov
push
push
jmp
and
cmp
ljmp
mov
call
cmc
mov
add
out
outsb
lds
test
mov
js
push
pop
sbb
jbe
mov
or
lahf
add
jmp
sbb
mov
js
xchg
je
pop
arpl
or
xor
push
sbb
push
stos
enter
imul
dec
pop
dec
xlat
xor
cmp
sub
dec
lods
ds
ret
test
xor
in
ret
pop
sub
push
xor
add
cmp
idivl
mov
aad
clc
pop
or
cld
mov
mov
in
insl
jae
pushf
sbb
shl
xor
aaa
hlt
fstps
enter
mov
xchg
inc
fsubrs
mov
lea
sbb
hlt
es
mov
lea
jmp
rolb
cmp
mov
aas
nop
xor
ficompl
into
scas
das
lret
xchg
xchg
push
aam
and
jmp
dec
jne
dec
dec
stos
insb
fdiv
adc
mov
in
or
out
pop
jmp
xchg
aas
hlt
add
dec
mov
cmp
and
lock
mov
addr16
hlt
sub
repnz
push
into
bound
negl
adcl
rcrb
sbbl
mov
adc
sub
cld
pop
stos
clc
inc
mov
movsl
sti
ljmp
test
or
inc
cmp
xchg
daa
hlt
jge
cmpb
gs
xor
std
lea
jb
test
incb
adc
dec
fdivrl
fldl
xchg
js
xlat
aam
stos
pop
mov
xlat
les
pop
sub
inc
icebp
icebp
bound
jge
adc
cmp
cmc
xchg
jns
xchg
sbb
nop
xchg
and
fstpl
aad
xor
jno
aam
inc
push
cmp
addr16
adc
mov
mov
cmp
arpl
nop
lahf
cwtd
add
icebp
insb
pop
fdivl
mov
clc
cmp
add
movsl
rolb
insl
movsb
lea
xor
outsl
ret
shlb
mov
mov
cmp
xchg
imul
mov
dec
stc
arpl
push
mov
jnp
test
je
or
pop
add
xchg
leave
cmpsl
and
insl
daa
out
push
fdivrl
jnp
or
loope
push
push
jg
mov
xor
iret
jmp
ret
cltd
mov
icebp
mov
add
cmc
push
jb
pop
jge
pop
pop
push
ret
mov
cli
pop
and
mov
or
call
sahf
out
imul
cli
aaa
xchg
into
cs
and
fidivs
add
scas
inc
fnsetpm(287
fidivs
pop
jp
lods
dec
cld
scas
and
xchg
mov
mov
dec
cmc
popa
out
test
pusha
mov
stos
mov
sbb
push
popa
cmc
push
ret
xor
mov
repz
hlt
xlat
pop
fucomp
imul
cmpsb
mov
mov
and
jne
cli
and
movsl
cmp
xchg
mov
fisubs
fwait
jb
sbb
jns
ret
dec
cwtl
cmp
data16
mov
lahf
insl
imull
pop
jl
push
sub
mov
subl
call
mov
outsl
push
std
sahf
arpl
add
push
jno
mov
imul
dec
cmp
pop
adc
dec
cltd
dec
and
sbbb
loope
inc
lcall
xchg
ret
adc
subb
orl
fwait
enter
push
gs
and
dec
ljmp
push
inc
sbb
inc
jns
fadd
fwait
in
adc
push
jnp
in
pop
and
push
movsb
xor
adc
inc
jecxz
loop
pushf
fldcw
xchg
mov
jge
push
inc
cli
and
jmp
stos
xchg
jmp
xchg
add
test
shll
arpl
xor
lds
jb
dec
or
xor
enter
fdivrs
jne
int
xorl
mov
dec
xorb
mulb
stos
adc
std
xchg
lds
stos
bound
sbb
data16
test
ret
rcrl
les
loopne
addr16
into
addr16
mov
add
add
inc
adc
lds
ret
cmp
xchg
lods
ret
mov
data16
push
dec
adc
fwait
dec
inc
jp
xlat
ret
jmp
sti
mov
outsl
adc
and
jns
mov
cld
insb
fldenv
daa
pushf
cltd
or
cld
call
insb
adc
fmull
push
mov
push
aam
push
sahf
sbb
mov
frstor
dec
insb
cli
data16
push
pop
pop
movsl
dec
or
mov
jmp
jle
fisttps
mov
and
lret
push
test
pop
or
fcomi
mov
bound
adc
jne
lret
dec
cmp
adc
in
scas
ficompl
xchg
xor
mov
lret
repz
or
repnz
inc
xlat
pop
adc
popf
clc
lods
imul
dec
xor
sahf
pop
or
fldenv
mov
pushf
clc
jns
xchg
hlt
mov
sub
int3
in
add
mov
cmp
data16
push
dec
lcall
mov
xchg
or
ret
addr16
mov
pop
pop
js
xchg
mov
inc
stos
repz
or
imul
sti
mov
mov
push
into
sub
jge
rcrl
ret
ljmp
sbb
lahf
test
in
jno
cld
push
pop
pop
es
add
gs
je
or
scas
cmpsb
push
ret
aam
cld
data16
cmpsl
daa
push
push
add
pusha
xchg
push
shrb
sub
mov
xor
fcomps
or
push
mov
mov
sub
aam
int3
notl
js
jecxz
mov
xlat
outsl
or
ds
lds
sti
int3
xchg
adc
ret
andb
aaa
cmpl
sbb
xchg
cli
fisttpll
inc
and
mov
or
ja
sbb
sub
sbb
inc
out
push
adc
cmp
push
mov
add
jne
mov
jae
ja
cmp
mov
clc
pushf
jecxz,pt
aam
cmp
ss
push
hlt
or
adcl
cmp
mov
inc
jmp
pop
lods
inc
push
mov
shrl
push
hlt
mov
xor
filds
sub
addr16
mov
add
cmp
and
xor
int3
push
push
jb
lea
scas
daa
xchg
mov
push
or
in
jle
test
dec
je
jae
or
adcl
or
dec
ja
andb
leave
sub
or
test
xor
xor
dec
out
cmp
adc
push
pop
cmpsb
mov
nop
or
jl
int3
fcomps
lcall
xchg
outsb
jge
in
xor
fisubrs
fists
cltd
pop
xor
clc
xor
sub
push
and
sub
mov
inc
mov
gs
lret
in
and
ljmp
sbb
cmp
pop
lock
in
cmpl
cmp
pop
xor
adc
dec
fidivl
into
ror
sub
push
jno
lcall
jne
scas
xchg
clc
push
cmp
aas
xchg
add
or
pop
xor
cld
scas
nop
jb
cli
mov
outsl
jp
push
in
push
lret
jae
adc
jno
leave
mov
aas
add
xor
xchg
cwtl
iret
cmp
pop
fisttpl
dec
mov
cld
int3
data16
outsl
das
daa
sub
jne
cld
loopne
pop
lahf
mov
enter
pop
xorl
push
cmp
jno
icebp
test
jmp
pop
lea
push
movsb
cmp
stc
in
scas
adc
cmp
mov
jle
out
mov
hlt
push
mov
xor
mov
pop
lock
push
sub
popa
or
test
jne
push
cmpsl
sarb
sub
insl
sbb
xor
dec
lock
mov
xlat
mov
push
pop
xor
inc
lods
sbb
fsub
dec
fxch
inc
push
scas
std
jae
rcll
sar
cmc
mov
mov
xlat
lcall
sub
sub
sbb
fldcw
sub
mov
push
out
push
adc
div
imul
fnsave
adc
mov
popf
adc
lods
jecxz
push
add
loop
aam
out
enter
daa
sbb
jge
mov
mov
fdivr
adc
cmp
sub
lds
xlat
mov
cmp
xchg
inc
or
lock
inc
imul
mov
lret
lahf
jbe
insb
adc
es
les
insb
es
dec
cmp
xchg
push
or
sarb
sti
aas
adc
test
jl
movsl
pop
test
push
lock
dec
sbb
mov
mov
je
inc
dec
in
add
dec
adc
push
adc
test
and
pop
or
jecxz
mov
lcall
fstpt
adcl
lahf
xor
pushf
jno
adc
adc
lahf
mov
fs
sbb
mov
jne
xorb
shl
inc
rcll
inc
add
js
insb
xorb
sub
fnstenv
daa
xchg
pop
sbb
movb
mov
outsb
mov
push
gs
mov
fildl
jbe
add
nop
cmp
pop
pop
out
lock
dec
mov
mov
lds
sub
aam
in
pop
mov
bound
mov
addr16
mov
xchg
jbe
in
inc
dec
jle
jnp
movlps
lret
data16
and
std
push
ljmp
push
lock
fnstcw
xchg
push
aam
mov
or
dec
push
dec
mov
idivl
in
mov
jle
lock
mov
inc
mov
add
or
fmulp
inc
cltd
fchs
std
push
sub
or
jne
test
inc
in
cs
inc
and
popf
dec
dec
lea
cmp
push
cmp
test
imul
insl
dec
xor
out
ret
jecxz
psubd
add
mov
and
pop
push
je
mull
or
cmc
xor
loope
xor
push
mov
outsl
lods
inc
in
mov
dec
xor
add
cmp
lods
pusha
fwait
nop
inc
test
cmp
roll
xor
cmp
jmp
mov
pop
test
push
test
sub
jmp
mov
xchg
aad
es
mov
push
fists
je
out
dec
shlb
aas
mov
mov
xchg
and
scas
push
mov
sub
adc
pushf
rclb
andl
pusha
lret
mov
adc
mov
jb
in
ffree
push
xchg
xlat
fistpll
inc
mov
pop
ljmp
xchg
daa
lods
leave
jno
loopne
sub
scas
repz
xchg
ficoml
jo
aad
add
sbb
in
mov
iret
mov
cmp
mov
adc
adc
jbe
mov
insl
or
and
adc
pop
arpl
syscall
rolb
sarb
loopw
mov
lods
push
jno
add
jbe
out
or
gs
in
iret
mov
fisubs
pop
loopne
aaa
outsl
push
pop
popa
xchg
xchg
cld
pop
arpl
test
and
in
sbb
mov
dec
int3
dec
cwtl
dec
pop
mov
in
scas
and
jns
pop
sti
dec
ds
push
fwait
jmp
popa
cmpsl
sbb
ret
pop
mov
fisttpll
xchg
inc
pop
rcl
lods
clc
lcall
cld
cmp
mov
ds
pop
sub
add
or
push
mov
sahf
or
push
pop
sbb
jp
fwait
cmpsb
dec
stos
xor
adc
hlt
jno
out
sbb
dec
imul
into
xchg
sbb
je
pop
xchg
mov
pop
stc
jb
leave
repz
mov
mov
jbe
shll
fistl
xor
mov
and
std
push
es
cltd
dec
movsw
lock
das
loopne
call
mov
adc
pop
xor
pop
mov
mov
jge
lea
pushf
dec
add
push
scas
insb
dec
je
iret
add
mov
jo
and
imul
movsb
mov
or
xor
in
and
cltd
cli
jg
and
out
add
jp
xor
cwtl
sub
ror
lret
rcrb
leave
mov
popf
and
mov
inc
jo
bound
pop
mov
inc
mov
data16
xchg
sub
and
orl
fadds
add
push
stos
scas
mov
pop
js
imul
mov
or
push
inc
mov
cmp
xchg
das
adc
shlb
fdivl
inc
dec
popa
pop
lods
or
ficomps
mov
pop
cmp
aam
and
push
jg
mov
das
dec
out
add
xor
fsubp
mov
and
pop
lds
sbb
add
cmp
test
out
cs
mov
sar
inc
mov
lods
adc
xchg
div
lcall
dec
sbb
aas
xchg
push
push
add
mov
lods
sarl
dec
jg
rcrl
push
outsl
xchg
ljmp
sti
outsl
jno
inc
das
add
daa
or
call
fs
sahf
pop
mov
pop
fisubs
popl
jne
out
iret
pop
pop
fimull
jnp
enter
or
jo
aad
ljmp
mov
jle
sub
mov
lock
add
adc
adc
mov
or
xlat
sahf
add
pop
je
inc
cmp
sbb
test
scas
or
jnp
mov
pop
mov
sub
mov
xchg
sub
adc
scas
fsub
jno
divl
mov
mov
push
loopne
in
sub
lahf
movsl
movsb
inc
outsl
pmuludq
push
ret
in
leave
sub
idivb
or
sub
movsl
inc
cmp
ja
push
push
jl
scas
mov
adc
aam
je
fcoml
xor
mulb
and
pop
into
xorb
xlat
cs
mov
mov
jecxz
imul
rcrl
jb
xor
add
push
and
pop
pop
pop
xlat
lods
inc
lods
xchg
pop
and
iret
popf
lock
sbb
test
dec
xchg
pop
xor
jg
fcmovb
cmp
cmp
movsl
mov
daa
movsb
cmp
mov
jne
jo
cmp
aam
scas
sbb
sbb
andb
push
rcll
fistl
xchg
lods
rcll
or
inc
mov
xchg
or
sar
insl
xorps
mov
pop
sbb
mov
adc
xchg
mov
adc
sub
xor
push
sub
gs
pop
dec
lods
mov
mov
pop
jmp
mov
sub
incl
cs
push
das
lea
imul
dec
test
xor
xor
mov
es
xchg
fwait
test
pop
mov
mov
lods
xor
inc
mov
xchg
mov
stos
mov
ss
adc
loopne,pt
sbb
sub
setnp
sbb
enter
clc
fsin
fdivr
dec
dec
lret
jecxz
push
fucomi
push
inc
push
bts
jnp
dec
imul
mov
sub
clc
hlt
popf
aas
mov
pusha
enter
loope
or
adc
insl
das
insl
out
cld
ljmp
inc
pop
add
aaa
bound
sub
aas
jmp
lret
mov
push
cmp
xchg
dec
movsb
or
xor
fistpl
sub
push
fdivl
mov
dec
stos
sub
push
sbb
xchg
and
and
cli
iret
enter
clc
jo
shl
cmp
and
movsb
lds
jns
jecxz
xchg
arpl
add
outsb
or
ret
mov
sub
negb
fimull
inc
fwait
iret
push
inc
pop
bound
pop
xor
cmpsl
jns
jmp
add
rcr
dec
adc
push
xchg
gs
rcll
sub
ret
stc
cwtl
pop
hlt
je
push
loop
push
jbe
mov
movsl
insb
scas
cmp
rcr
ljmp
push
push
add
xchg
lret
cwtl
repz
out
out
mov
and
les
jl
xchg
mov
in
shl
repz
stc
out
xchg
insb
pop
inc
into
sbb
stos
repz
test
dec
xchg
xchg
adc
push
clc
lods
sbb
test
shrl
in
sub
push
dec
lods
jmp
out
pop
and
out
mov
pop
inc
orl
adc
ret
roll
les
int
sub
sbb
jne
mov
inc
lea
loopne
scas
fwait
push
sahf
insl
xchg
sbb
dec
shlb
aam
cli
mov
add
xchg
lcall
sbb
js
mov
out
add
outsb
cmp
jle
adc
jle
outsb
cmp
mov
xor
cltd
in
mov
test
insl
test
pop
aad
pushf
jne
adc
sbb
lret
orb
push
inc
cmp
aam
mov
out
mov
cli
pop
jmp
adc
push
mov
vpsubb
xchg
sbb
inc
add
sbb
cmp
fistps
xchg
jb
and
js
inc
sbb
xor
mov
adc
int
cmc
cmp
rorl
cmp
pop
inc
movsl
add
mov
inc
cwtl
jno
fidivrs
push
mov
pop
clc
les
inc
pop
imul
cmc
xor
xor
loopne
cli
mov
push
jnp
or
shr
enter
lods
inc
dec
fwait
or
out
jmp
bound
push
mov
sbb
or
mov
xor
mov
into
fnstcw
fwait
dec
mov
jmp
xchg
add
jbe
in
dec
push
jne
aas
sbb
mov
mov
inc
mov
jae
mov
dec
mov
jg
add
mov
ljmp
jecxz
and
sub
nop
outsl
test
mov
out
pop
inc
push
inc
add
cltd
jae
lods
testb
adc
pushf
dec
sub
int3
pop
cmp
push
aad
faddl
mov
std
lret
bnd
xchg
add
into
int
jb
stc
imul
pop
popf
xor
fcoms
fcoml
pusha
enter
and
jb
adc
jo
and
jl
push
dec
into
ret
arpl
fmuls
mov
test
jne
push
xchg
sub
xchg
cmp
xor
rol
cltd
mov
mov
fsubs
mov
xchg
leave
cmpl
pop
jne
test
aam
sahf
and
sbb
sbb
ja
int
sub
mov
xor
mov
addr16
cmpsb
jne
push
mov
jae
push
shrl
dec
scas
ret
dec
es
inc
arpl
dec
add
lcall
xchg
or
push
xlat
jg
push
fldt
test
pushl
mov
pop
ljmp
lret
fdivl
inc
jl
jle
mov
jno
call
sbbb
dec
test
jmp
cmc
stos
mov
pop
lods
pop
lahf
test
pop
add
int
sbb
lcall
mov
stc
lret
xchg
jecxz
lods
jp
jae
cmp
mov
pop
insl
dec
hlt
dec
push
div
sahf
push
stc
fstpl
jmp
sahf
nop
or
fwait
pop
rsqrtps
xor
xchg
push
inc
fadd
fldln2
cmp
cmp
cmc
push
cmp
jp
sar
scas
mov
push
mov
and
nop
dec
in
mov
jae
rol
mov
test
sbb
add
aad
xchg
sbb
mov
lahf
lods
loop
arpl
push
mov
adc
cmp
xchg
stos
hlt
and
movsb
push
jnp
in
jnp
das
ds
daa
cs
push
es
xchg
xor
jmp
and
xchg
push
cmp
mov
jg
mov
enter
xor
mov
mov
mov
pop
adc
sbb
jp
and
push
mov
mov
popf
xor
movsl
jmp
inc
aad
push
in
divb
in
jne
jg
ret
cmp
fbstp
add
inc
insw
add
je
ds
mov
test
shlb
sbb
lcall
ret
xor
aas
and
mov
lods
mov
mov
add
scas
je
jmp
dec
adc
and
lret
test
ljmp
add
loop
and
add
js
jbe
lcall
in
pop
jo
lret
inc
jmp
pop
movsb
mov
lcall
rorb
or
inc
ss
lods
iret
mov
shl
cs
xor
jg
xchg
cmc
cmc
fcompl
into
push
sub
ds
iret
inc
push
push
xchg
dec
jne
movsl
jne
shl
fs
adc
lods
hlt
xor
decl
in
ficoms
imul
enter
scas
dec
inc
dec
insl
lcall
out
xor
pop
ret
lds
sbb
stc
push
test
popf
sbb
xchg
lods
ret
add
xchg
jmp
lea
pusha
test
bnd
or
push
movsl
dec
pop
jns
push
mov
inc
repz
or
mov
mov
push
mov
cmp
fcmove
dec
adc
push
dec
fcmovnbe
jge
sub
test
ja
mov
dec
and
cmp
inc
xor
mov
xlat
in
loopne
movsb
ficompl
mov
subb
inc
in
mov
and
fstpl
mov
dec
xor
ret
push
pusha
mov
sar
popf
ds
jge
inc
cmp
jnp
jmp
sbb
xorb
and
mov
shlb
jo
lret
mov
xorb
mov
rolb
jge
pusha
lcall
adc
ficoms
push
rcll
out
in
adc
sub
cwtl
int3
xchg
out
jno
pop
sbb
jns
xor
test
mov
sub
out
mov
sahf
and
push
sbb
jnp
loop
pop
dec
popa
sub
cmp
sub
cmp
xchg
sub
repnz
xor
hlt
lods
sbb
xchg
inc
es
loopne
std
push
pop
dec
fnsave
adcb
lods
sbb
das
pushf
sub
xor
pop
mov
adc
adc
test
stos
std
mov
jmp
inc
daa
imul
jle
pusha
pop
dec
frstor
mov
add
jmp
addw
inc
es
test
out
fidivl
push
cmp
pop
sar
inc
dec
inc
mov
out
and
add
mov
imul
push
adc
sahf
dec
cmp
mov
fbstp
in
inc
xchg
mov
and
leave
icebp
adc
fstpl
sbb
pop
add
rcrl
loope
jl
ret
mov
out
mov
dec
push
cmpsb
ljmp
or
xlat
outsl
das
je
sarl
cmp
mov
mov
stos
pop
push
sti
push
jne
mov
or
sub
subb
cwtl
mov
lea
mov
mov
add
ret
xchg
lcall
adc
arpl
das
mov
lahf
sub
clc
sbb
ja
jno
repz
gs
xchg
xchg
std
leave
mov
iret
pop
dec
jo
data16
jo
movsl
js
aam
pop
lods
in
stos
mov
mov
inc
jnp
lock
mov
imul
aas
cmpsb
test
maxps
and
addr16
or
hlt
sub
fcoms
xchg
cmp
fldt
push
add
push
xchg
mov
xor
xor
dec
jge,pn
imul
pushf
movsl
adc
pop
sub
mov
setns
dec
in
mov
dec
inc
testl
mov
ds
addl
mov
popa
cmp
stc
xchg
mov
pop
dec
es
popa
mov
fwait
xchg
imul
imulb
out
enter
mov
or
mov
shrl
dec
in
jp
adc
or
cld
je
fistl
lcall
hlt
shl
push
jl
cmpsl
mov
into
mov
dec
fisttpll
cmp
gs
mov
lds
jl
mov
scas
popf
out
jecxz
mov
cmpsl
popa
ss
pop
call
in
movsb
xchg
in
cmp
movsl
out
dec
xor
addb
pop
lods
adc
adc
and
jp
mov
leave
rorb
sahf
mov
adc
dec
add
jb
mov
aam
sub
adc
ds
mov
mov
imul
adc
xchg
mov
jb
outsb
dec
cmp
sbb
cmp
rcrl
jae
push
ja
mov
out
inc
je
fbld
div
push
stc
mov
fisubl
das
fnstcw
mov
push
cmc
clc
mov
mov
cmp
mov
sub
mov
inc
mov
lods
and
add
lahf
hlt
out
loope
mov
mov
outsb
into
pop
sti
cli
mov
xchg
loope
sub
jmp
ss
popf
sub
xor
mov
add
ret
adc
inc
or
mov
cmp
mov
pushf
aas
sub
inc
sub
cs
adc
icebp
aas
inc
sbb
inc
sbb
lret
aad
loope
add
sahf
add
xchg
mov
mov
cmp
nop
push
in
jne
jmp
add
xor
add
repz
dec
mov
std
mov
cmp
js
inc
push
or
push
or
pop
pop
ds
inc
popa
sbb
mov
das
imul
inc
repz
push
iret
std
lcall
xchg
sbb
arpl
cmc
pop
xchg
ret
insb
in
das
sbb
cmpxchg
hlt
jae
or
jnp
cmp
bound
test
sbb
mov
lret
pop
pop
fadd
adc
stos
int3
nop
outsb
push
ss
xor
stos
mov
jb
xor
inc
xchg
adc
imul
xor
notl
jl
in
lock
xchg
adc
les
stc
imul
popa
lds
cmpsl
mov
in
fsubs
in
dec
add
fistl
pop
pop
jnp
popaw
push
call
popl
mov
aaa
mov
sub
test
xchg
aad
jns
xchg
sahf
push
ja
cmp
and
jo
fiadds
fildl
stos
ret
xor
xor
and
xor
lea
cld
imul
mov
pop
sti
insl
lret
fcmovnb
orl
or
movsb
mov
inc
insb
add
inc
outsl
test
mov
inc
jae
mov
xor
outsb
sub
lahf
int3
sbb
push
out
xchg
das
pushf
push
or
mov
pop
jae
movsb
in
daa
rolb
stos
pop
cmp
sub
call
cmpsb
das
test
or
add
xchg
xchg
inc
test
sbb
in
xor
andb
pavgb
push
mov
lods
loop
jle
mov
mov
pop
insb
mov
pop
scas
inc
pushf
cmp
fnstsw
mov
mov
je
ret
ret
pop
insl
mov
mov
rcrb
adc
push
loope
adc
sbb
aam
movsb
movsl
mov
sub
scas
bnd
jp
jmp
sub
cmpsl
pop
in
jl
pop
mov
loop
stos
lea
add
xor
out
mov
sbb
dec
xor
ljmp
cltd
xchg
ret
mov
xor
out
xor
lods
das
inc
idivb
sub
mov
xchg
stos
negb
pop
jecxz
sub
dec
std
push
outsl
fisubs
pop
push
popf
push
mov
stos
pushl
aam
mov
sub
fcomp
and
in
shl
pop
fstpl
sub
dec
push
pop
out
or
enter
mov
ret
fsubs
cmpsb
xchg
jne
imul
cltd
iret
sbb
sbb
loop
fs
adc
xor
mov
test
push
xor
test
shr
inc
cmp
repz
stos
ffree
mov
xchg
aad
adc
imul
xor
xchg
push
push
insl
push
pop
sub
adc
enter
cmpsl
push
mov
ficoml
leave
mov
in
dec
pusha
popf
sub
jbe
rolb
mov
inc
sbb
jge
sbb
cs
add
nop
sub
push
call
mov
sahf
or
xor
push
or
mov
and
loope
jg
xor
fldt
addr16
or
fisubrl
inc
rcrb
arpl
shr
xlat
imull
ret
push
stc
fiaddl
mov
mov
pusha
lock
ret
xchg
adcb
mov
sbb
int3
cli
aas
js
inc
pop
movsl
stos
out
insb
and
out
xchg
inc
dec
xor
jo
loopne
sub
mov
test
outsb
and
xlat
icebp
neg
fs
push
adc
sbb
inc
pop
ljmp
stc
cmp
test
sbb
stc
pop
rclb
jmp
mov
inc
outsb
or
aas
iret
xor
in
lcall
pop
fwait
cmp
int3
push
pop
jbe
cmp
aaa
jno
sarl
xchg
mov
pop
jns
out
repz
call
cmp
fistl
mov
popf
movsb
movsb
dec
icebp
punpckldq
cmp
sahf
test
cld
rcrl
pop
sub
bound
in
lock
int
rorl
sub
loop
push
push
dec
imul
mov
sub
fldenv
iret
lods
xchg
clc
outsl
jmp
mov
or
popf
xor
pusha
test
sbb
jmp
cmpsb
xchg
test
push
fs
sbb
xchg
insb
mov
mov
cmp
ss
cmp
imulb
stc
mov
pop
or
ds
sub
sub
out
popf
jge
jmp
adcl
mov
or
rcr
mov
ror
xor
imul
test
and
adc
cli
cmp
dec
out
in
sbb
sti
or
mov
into
xlat
cmp
in
and
gs
xchg
mov
xchg
mov
dec
fsubrs
sub
sub
jl
aaa
or
faddp
cmp
push
sub
push
mull
fwait
scas
inc
xchg
mov
lock
push
xor
popa
jle
dec
fnstsw
aaa
int
mov
lcall
pop
lods
sbb
and
add
gs
out
jae
std
test
lods
sub
shlb
mov
sub
cltd
pop
jo
aas
jecxz
jge
pop
js
mov
sub
into
pusha
outsl
pop
dec
mov
pushf
fdivrs
mov
push
les
inc
inc
out
adc
bound
sub
movsb
dec
inc
shlb
xor
std
cmp
iret
outsl
daa
add
xlat
sbb
jns
inc
and
fmuls
push
pop
ja
jle
fbld
shll
popa
repz
fadd
subl
orb
std
int3
sbb
fs
int
sbb
mov
jg
xor
xchg
fstpt
das
and
xor
loopne
sub
or
jl
pop
in
push
jb
push
and
ror
daa
mov
lods
fwait
pop
sub
pop
das
xchg
mov
push
push
inc
sbb
inc
ljmp
jp
fdiv
jge
lcall
cli
cmp
mov
xor
cs
into
in
movsb
fisttps
and
and
mov
mov
divb
pop
pop
ret
inc
int3
lcall
into
and
pop
mov
inc
scas
shll
add
xlat
insl
sahf
pop
and
lahf
loop
adc
jg
pop
jg
mov
or
daa
sbb
stos
lods
scas
lret
jp
dec
jp
ljmp
dec
pushf
enter
mov
rcl
shll
sbb
pop
scas
or
cmp
push
jns
cmp
test
mov
out
adc
in
test
sbb
inc
fsub
mov
inc
pop
jmp
mov
and
pop
sti
pop
lret
mov
add
sti
js
fisubrl
dec
pop
cli
call
xchg
adc
add
sbb
or
jo
mov
or
cmp
push
mov
in
push
xor
sahf
mov
iret
pushf
ljmp
xchg
xor
mov
adc
cmp
push
outsl
scas
sbb
mov
sub
mov
or
cli
mov
jnp
stos
fscale
mov
jecxz
mov
rcrb
in
testb
jmp
cld
pop
xchg
mov
mov
repz
insb
cltd
or
push
jle
mov
dec
dec
popf
mov
aad
pop
pop
in
pop
cld
ja
mov
or
outsl
push
xor
ja
mov
out
adc
jg
lds
iret
enter
std
pop
xor
outsl
int3
jle
cmp
lret
or
jg
filds
push
lret
push
test
mov
push
and
cmpsl
fsub
jecxz
fdivrs
test
popf
movsl
fstpt
arpl
es
and
push
pop
sub
sbb
pop
jb
jo
cs
xchg
call
fisubrs
jl,pn
inc
jns
mov
bound
scas
loopne
jge
mov
sbbb
ljmp
mov
or
inc
fwait
xor
enter
data16
enter
negb
fstpt
sub
popf
popf
clc
sbb
outsb
outsl
outsl
test
mov
inc
add
pop
jl
bound
gs
push
and
lds
bound
or
sbb
pop
sub
int3
das
shrb
lds
shr
out
sbb
push
aam
cmpsl
call
mov
out
and
inc
or
mov
out
hlt
outsl
adc
mov
lahf
add
jnp
pop
sbb
jnp
jne
and
jns
xorl
out
jo
and
jmp
inc
lret
cmc
bound
cli
dec
andl
xchg
bound
xchg
int
push
pop
xor
pop
cmpsl
pop
pop
pop
sarl
lock
movsl
xchg
inc
push
dec
pop
scas
mov
scas
test
pop
cmp
int
push
cltd
leave
sub
and
xchg
jae
inc
das
cmc
scas
fidivrs
das
cmp
icebp
mov
mov
inc
jmp
mov
sub
push
add
dec
push
mov
aaa
and
cmp
inc
jp
push
loopne
pop
xchg
loopne
mov
call
in
mov
mov
inc
add
mov
faddl
mov
xorb
testb
dec
leave
and
xor
inc
pop
dec
lods
out
mov
aad
in
sahf
mov
mov
jle
shr
aam
enter
jbe
sbb
mov
add
mov
xor
lock
clc
jecxz,pn
push
mov
jno
sub
imul
jmp
xor
and
das
jl
xchg
sub
loop
fwait
jge
test
addr16
push
add
or
roll
jno
fmull
jbe
out
push
icebp
das
adcl
sub
cmp
inc
outsb
stos
mov
mov
mov
clc
and
mov
ret
cmp
xchg
out
incl
jmp
jle
xchg
test
dec
rcrl
outsb
sub
repz
leave
sahf
out
fldt
mov
shl
stc
pop
add
out
pop
repnz
xchg
test
cmpsb
push
rcrl
jg
xchg
sbb
out
outsl
mov
shl
rolb
push
nop
inc
and
arpl
xor
aam
sub
sub
sarl
cmpsl
jp
adc
test
cli
pusha
lahf
lds
pop
inc
cmpsb
push
pushf
daa
push
arpl
cld
cmp
or
push
jno
int3
mov
mov
sbb
add
in
xchg
outsl
enter
push
pusha
iret
pop
cmpsb
push
xchg
xchg
pop
sbb
xchg
pop
mov
xor
cmp
adcl
inc
xor
ja
dec
mov
inc
mov
sbb
pop
jmp
fidivl
test
push
xchg
mov
or
mov
mov
inc
clc
adc
adc
pop
outsl
and
and
cmp
push
xor
addb
mov
xchg
xor
arpl
mov
daa
out
sahf
pop
adc
xchg
or
inc
inc
mov
push
sarl
insb
fimull
jp
pop
inc
dec
adc
fmulp
jno
cmp
jge
nop
fcmovb
cmpb
cmp
pop
fwait
push
or
sbb
xchg
mov
dec
mov
jge
inc
pusha
inc
je
loope
xor
rcll
and
push
arpl
daa
stc
mov
adc
nop
movsb
or
dec
inc
mov
outsl
les
xchg
nop
sbb
roll
xchg
push
push
stos
insl
popa
inc
out
push
rcrl
js
mov
and
aaa
scas
or
adc
xchg
jne
lods
cs
mov
cwtl
les
lret
mov
pop
sbb
shrl
dec
sbbl
push
and
into
daa
xchg
stos
inc
push
stos
add
push
ljmp
jne
pop
jae
cmpsl
scas
mov
or
ljmp
sahf
xchg
inc
pop
popa
lock
push
lret
mov
hlt
xchg
xlat
in
mov
adc
push
insb
jae
lods
loop
mov
popa
sbb
cli
jecxz
les
push
xchg
push
ss
cld
jnp
cmp
cmp
mov
jo
sbb
dec
mov
dec
lret
cmp
roll
mov
pop
xchg
ljmp
cltd
jo
repz
pop
jo
repz
fldt
popl
neg
adc
inc
cmpsb
popf
shr
mov
lods
xchg
jmp
xchg
js
mov
and
sub
loope,pn
lahf
xchg
sbbl
pop
out
mov
insl
mov
cmpsl
mov
mov
rorb
pop
sub
subb
test
scas
je
mov
jo
negl
and
xchg
pop
pop
movsl
les
in
push
popf
and
ja
enter
mov
mov
bound
add
into
out
aaa
fucom
mov
fisubl
cmp
mov
inc
and
in
js
pushl
mov
lds
xor
mov
cwtl
inc
adc
pop
inc
mov
lcall
mov
lahf
push
out
ljmp
cwtl
jae
dec
xchg
or
leave
xlat
cmp
in
in
inc
hlt
faddl
sbb
inc
xlat
adcb
xchg
in
fsubl
fimull
dec
arpl
add
and
sbb
sub
or
xchg
lods
xchg
int
xchg
stos
mov
push
cmc
out
cli
inc
sub
jmp
in
test
rolb
or
push
int
insl
insl
sahf
int
icebp
cmp
popf
xchg
sub
lahf
dec
mov
lret
and
addr16
pop
mov
in
jge
sbb
add
mov
rcrb
mov
xchg
inc
mov
add
sbb
mov
mov
and
xor
pop
test
addl
and
mov
xlat
push
cmp
ja
pop
add
rcrl
jecxz
or
mov
adc
daa
dec
pop
sbb
sbb
insl
bnd
mov
insb
add
test
sub
loope
xor
cmp
fstpl
adc
xorl
loopne
sub
stos
inc
out
add
in
sbb
outsl
sbb
cmp
enter
adc
adc
adc
mov
mov
jae
jae
imul
insb
insb
fcomip
mov
mov
test
add
pop
jecxz
inc
aad
mov
pop
cmp
lret
bound
fdivrs
filds
adc
cli
mov
jnp
out
jbe
xor
mov
or
test
cld
je
add
ficoms
lcall
pushf
push
or
dec
or
or
loope
and
pushf
or
cld
iret
ret
fdivs
sbb
ds
mov
imul
sub
js
push
test
inc
xchg
mov
scas
imull
push
aaa
sbb
into
inc
popa
pop
insl
les
sub
xchg
jge
mov
popl
jo
in
fs
aaa
mov
jp
or
repnz
pop
xor
nop
js
cmpsb
jo
adc
in
adcl
dec
popf
pushf
jecxz
imul
daa
push
pop
inc
test
sarb
push
out
rclb
mov
or
ds
xchg
inc
pop
ljmp
inc
add
mov
daa
ljmp
imul
adc
out
stmxcsr
ds
test
xchg
jmp
addl
cmpps
loopne
idivb
lret
xor
dec
or
push
sub
enter
xlat
xchg
ret
ja
jg
lods
xchg
lcall
xor
fstpl
cmpsl
xor
or
movsl
push
ja
cmpsl
fadd
stos
rolb
pop
jge
sub
imul
sub
es
dec
or
pop
addr16
mov
mov
push
and
or
mov
and
mov
arpl
pop
adcb
sub
push
jb
imul
call
aas
in
adc
addr16
sbb
xchg
xchg
or
rep
push
outsb
lock
pusha
push
push
clc
pop
lcall
jle
xor
test
adcl
out
sbb
xchg
arpl
inc
pop
pop
addps
add
mov
xor
mov
subb
in
mov
aad
dec
jg
adc
fidivl
push
lret
jge
mov
sub
data16
into
stos
dec
lock
or
cmp
mov
mov
aam
insb
mov
div
out
lods
insl
mov
jl
sti
shrl
mov
fsubr
sbb
cmp
pop
cmp
rcrb
dec
fisubs
push
pop
pop
mov
add
dec
xchg
push
xchg
cmpsb
mov
add
xchg
pop
dec
xlat
addb
inc
int
lea
lcall
test
int
push
mov
cli
fnstsw
fdivrl
sarb
mov
imul
push
aam
or
dec
lea
fnsave
xorb
aad
xor
jno
sbb
xor
js
in
sbb
xchg
bound
fldcw
ficoml
xchg
xor
daa
lcall
testl
int3
dec
sbb
mov
xchg
mov
sbb
mov
aaa
mov
dec
xchg
mov
or
and
xor
mov
mov
pop
insb
or
cwtl
cli
addr16
or
xor
in
jno
push
fs
icebp
adc
cmp
xchg
loop
rep
sbb
out
lret
ljmp
scas
jmp
push
clc
jge
gs
dec
push
repnz
cld
in
sbb
cmp
xchg
repz
dec
hlt
push
jecxz
mov
ljmp
lcall
add
pop
xor
int
inc
push
out
call
popa
dec
and
lahf
popf
cli
or
push
push
js
stos
push
jmp
mov
mov
xchg
addr16
aad
lahf
call
shll
sbb
inc
gs
imulb
shlb
sub
stos
inc
mov
mov
popa
mov
aad
push
pop
fwait
stos
xlat
jb
roll
pop
out
xchg
add
hlt
mov
ss
xor
into
pop
cmp
xchg
cmpsb
mov
in
jge
jmp
shrb
xlat
xchg
mov
outsb
sub
dec
pop
out
andb
mov
jnp
xchg
push
mov
push
mov
ret
xchg
es
jo
fwait
rcll
in
dec
es
mov
ficompl
cmpsl
mov
pop
in
sbb
push
fdivr
sub
jae
sub
rorl
push
pusha
pcmpgtd
mov
and
nop
or
adc
sub
sbb
push
sbb
pop
add
dec
scas
out
sbb
add
jno
pop
arpl
pop
xchg
and
pop
sbb
in
fs
sub
mov
arpl
popa
aad
xor
mov
jg
or
and
mov
xchg
ds
dec
push
pop
mov
outsb
lahf
dec
loopne
mov
adc
push
adc
pop
sbb
pushf
sub
mov
dec
nop
out
pop
iret
in
jne
mov
movsb
pop
rcrl
in
stos
jl
xchg
jmp
addr16
jne
sub
popa
mul
nop
arpl
test
dec
in
xor
lds
insl
daa
inc
icebp
sbb
test
xchg
adc
push
in
je
repnz
inc
bound
sbb
ljmp
ss
mov
and
jns
scas
std
pop
test
fisubrs
int3
jbe
or
jl
rolb
push
xchg
lds
jmp
mov
mov
inc
mov
jp
sub
or
jle
fnstcw
inc
test
shll
outsb
lock
xchg
lahf
pop
ror
mov
jle
mov
inc
xor
imul
xor
stos
clc
push
gs
insb
fsubrl
adc
out
mov
loope
sub
mov
push
rolb
divps
dec
pushf
in
inc
push
call
xchg
stos
aad
repnz
or
popf
cmpsb
adc
fldcw
adc
dec
push
ds
pop
ret
mov
cmc
test
sbb
jge
hlt
loopne
lcall
aad
push
test
xor
fldcw
push
jmp
sbb
sub
and
jle
pop
shll
inc
cwtl
dec
push
je
sbb
std
mov
shr
pop
adc
popf
int
sub
call
js
xchg
sahf
mov
add
push
and
dec
fisttps
lahf
pop
repz
push
lds
mov
hlt
add
jno
notb
pop
nop
cli
cmp
pop
jp
pop
dec
inc
les
push
repnz
dec
add
int
aas
lea
xor
das
test
or
movsl
rclb
and
add
mov
mov
cmp
int
scas
hlt
inc
push
mov
mov
mov
xchg
sub
cmpsl
push
sbb
jge
inc
es
xor
fiaddl
mov
outsl
mov
ja
cmp
or
jns
sub
arpl
pop
inc
sub
lret
or
adc
leave
mov
int
aad
adc
and
mov
or
test
pop
cmp
jo
cld
data16
lods
pop
cmp
insl
popf
jl
lret
sbb
test
mov
dec
fldenv
or
push
push
scas
je
push
sbb
add
dec
pusha
sub
loope
sbb
inc
std
nop
add
outsl
mov
pop
cmp
or
ss
mov
cli
push
ret
xor
test
fimull
lea
dec
js
mov
sti
lea
dec
fdivrs
or
imul
mov
sub
cli
rcrl
shll
out
mov
incl
in
dec
imul
bound
cwtl
sbb
add
mov
xlat
aaa
jecxz
push
adc
into
or
out
sub
sbb
lea
loopne
das
push
pop
xchg
xchg
jnp
sbb
iret
cmovl
xchg
jns
sub
fstp
push
out
and
int3
sub
test
js
in
vmwrite
insl
mov
xchg
mov
and
jge
adc
out
bound
gs
mov
jg
mull
pop
sub
cmp
mov
or
mov
insb
jne
xor
rcll
jne
xlat
cmpsl
hlt
es
cmp
stc
cmp
notl
mov
lahf
jecxz
aad
int
pop
sti
insl
pop
mov
jg
mov
mov
ss
xor
and
ljmp
ja
cmpsl
dec
add
out
jmp
xchg
cmp
mov
movsl
inc
addl
lods
repnz
add
xor
adc
cmc
mov
pop
xchg
mov
pushf
jmp
testb
dec
loop
sub
scas
or
les
push
inc
das
sbb
fdivrs
xor
add
jmp
jmp
push
into
stc
arpl
mov
mov
movsb
adc
sub
lods
loope
les
sub
iret
xchg
mov
shr
mov
cmp
subb
arpl
icebp
fiadds
cmp
fbld
in
imul
xor
ret
mul
push
jnp
fimull
loopne
push
mov
pop
fsts
mov
xchg
test
popa
xchg
push
int3
movsb
jae
mov
fwait
rorb
pop
pushf
and
push
into
xchg
adc
and
push
sbb
cmp
mov
mov
popa
sbb
adc
cld
cmp
pop
insb
aaa
xor
je
jecxz
lret
push
int
into
stos
pusha
xor
js
mov
pushf
jbe
mov
out
pop
push
push
fimull
test
sti
into
xor
pop
les
xchg
daa
jge
mull
insb
and
dec
cmpsl
in
pop
or
mov
fbstp
sub
mov
into
xor
fidivrl
xchg
inc
rolb
test
bound
mov
xor
add
dec
lods
lea
xchg
xchg
movsb
stos
or
push
ja
aas
ffreep
cld
sub
hlt
pop
andl
es
movsl
clts
fst
mov
shll
loop
sahf
jae
add
mov
cs
dec
jns
mov
push
mov
pop
in
js
mov
stos
push
sub
adc
pop
int3
push
icebp
cmp
shl
fsubrl
dec
xchg
jbe
fdivp
xchg
rcrl
xor
and
pop
mov
stc
xchg
cli
in
pop
rcr
loope
rolb
add
sahf
jne
movl
enter
add
sub
shlb
fcmovnb
sub
les
mov
jg
in
cmp
xchg
or
fdecstp
and
push
fwait
xor
add
fidivs
xchg
jmp
jmp
jl
in
dec
add
repz
fistl
xor
mov
xchg
lods
pusha
out
cmpsb
scas
xchg
adc
fs
mov
xor
jno
jne
jbe
or
sbb
in
int
mov
inc
push
jnp
aam
int
dec
mov
jle
add
mov
and
insb
mov
jle
cmp
test
popa
inc
mov
mov
fidivrs
nopl
mov
arpl
and
xchg
cltd
es
or
testb
addl
dec
testl
sub
sbb
xchg
mov
sahf
jle
call
sbbb
pop
lcall
lahf
xor
jae
cs
jnp
xor
dec
std
and
mov
pop
push
jmp
pop
jno
fs
sbb
mov
inc
jb
cltd
pop
dec
test
cwtl
sub
xchg
add
stos
arpl
in
testb
or
repz
arpl
add
jmp
xor
add
sbb
jo
xor
ret
and
hlt
mov
imul
lret
inc
adc
push
mov
xor
arpl
sar
cmp
mov
jecxz
sub
add
ret
test
sahf
jecxz
outsl
push
cmp
sub
pop
les
scas
iret
rcl
popa
das
cwtl
mov
inc
pop
mov
scas
adc
pop
xor
add
imul
add
popa
xchg
cmp
lret
push
lock
fnstsw
mov
pop
pushl
ficomps
imul
inc
fidivl
aad
adc
lret
mov
jb
add
call
xor
fisttps
push
ljmp
push
or
outsb
jno
and
pop
mov
dec
or
inc
mov
in
inc
inc
lret
xchg
adc
lods
cmpw
in
rcl
stos
dec
jns
movsl
std
dec
dec
lret
test
mov
sbb
xchg
ss
cs
adc
jmp
outsl
push
imul
inc
sbb
js
ret
popf
jns
ss
cltd
push
hlt
push
ja
xchg
int3
sbb
or
aad
adc
xlat
push
loope
pop
mov
repz
push
push
pop
or
mov
xchg
mov
xchg
lods
cmpsl
inc
mov
nop
fcom
mov
cmp
hlt
sarl
imull
ljmp
cmp
mov
loopne
cmp
subb
cmp
iret
sbb
lahf
lahf
in
dec
stos
pop
lods
sahf
cmp
test
iret
scas
mov
ret
push
inc
jae
lea
pop
call
inc
dec
xchg
ljmp
repnz
mov
push
inc
add
adc
fstl
xchg
cmpl
addr16
in
mov
jo,pt
xchg
jae
inc
popa
fnstcw
pop
fistpl
xorb
dec
cwtl
fcomi
test
scas
popf
lahf
shrb
cmp
sbb
stc
gs
pop
sbbb
jp
jle
mov
cmpsl
in
inc
repz
jb
iret
mov
mov
addr16
repnz
xor
daa
jp
stos
adc
popa
stos
push
pop
or
inc
test
leave
adc
lahf
pop
push
cmp
add
ror
sarl
push
addr16
pusha
or
mov
dec
pop
cmp
pop
mov
mov
in
aas
cmc
inc
push
cmp
adc
sub
xor
pop
cmpsl
add
dec
sub
lea
dec
pop
outsb
mov
imul
ror
xor
cwtl
cld
in
decl
test
xchg
xor
dec
js
push
aad
stc
aad
sahf
iret
mov
jne
dec
mov
clc
mov
mov
mov
das
bound
loope
add
sbb
jg
repnz
and
movsl
shlb
hlt
add
or
mov
out
pop
mov
pop
inc
pop
out
mov
dec
ret
adc
inc
mov
adc
je
lods
movsl
enter
and
jl
shrb
cmovb
lds
hlt
ftst
jmp
rcll
idivb
out
jne
cltd
mov
jecxz
jecxz
or
add
mov
xor
lahf
fiadds
jae
jbe
mov
bound
loope
in
xor
push
mov
inc
pop
or
lock
xchg
aas
jl
jns
popf
test
es
adc
in
aam
push
ljmp
inc
xchg
xor
lods
movsl
mov
incb
push
lret
jp
pop
pop
and
inc
and
rcll
lds
jmp
or
jnp
dec
rcll
in
mov
lahf
add
icebp
scas
sti
mov
jb
sub
mov
and
cs
sbb
or
sbb
ljmp
or
cwtl
xchg
xchg
pop
xchg
xchg
mov
and
and
rcrl
addr16
mov
js
push
mov
mov
loopne
jo
cmp
pop
dec
cmp
jge
hlt
daa
in
mov
fidivrl
jno
stos
xchg
sub
ret
add
inc
sub
and
hlt
cld
jno
jne
or
jecxz
sub
into
out
scas
jb
or
lods
negl
cmp
sub
jle
insb
xchg
mov
sbb
inc
mov
es
stos
sarl
testl
sbb
jle
leave
movsl
test
fisttpl
cltd
out
xchg
imul
dec
stos
add
jmp
jae
lea
inc
mov
inc
inc
mov
pop
xor
adc
loope
pop
push
lods
shll
push
aam
add
hlt
pop
cmpb
movl
fbld
call
shl
mov
or
insl
std
adc
xor
jae
ljmp
cwtl
cs
adc
lahf
mov
sub
or
mov
cmp
into
iret
cmp
ret
or
push
inc
fs
stos
jg
pusha
xor
iret
mov
dec
mov
icebp
cmpsb
mov
lea
push
out
sbb
stos
cmp
aad
push
loope
sbb
and
push
hlt
dec
mov
pop
push
daa
jbe
pop
sbb
dec
pop
jo
and
push
loopne
push
insl
pop
inc
mov
insb
sub
icebp
loop
push
push
jl
ljmp
pop
xchg
push
je
sub
inc
xor
cli
int3
lcall
mov
jecxz
and
sub
dec
push
or
mov
sub
push
call
enter
data16
ds
icebp
push
mov
outsl
add
xchg
push
sbb
fwait
adc
int
shll
push
inc
sbb
iret
inc
dec
mov
dec
ljmp
mov
testl
add
mov
mov
popa
add
adc
cmp
or
mov
lret
dec
jo
xor
std
clc
mov
out
loopne
fs
loope
sub
outsb
rcr
ds
or
pmaxsw
dec
out
dec
mov
fcmovb
popa
cs
push
out
dec
and
dec
ljmp
xchg
or
jnp
cltd
add
mov
movsb
lret
push
push
gs
and
cmpsl
jg
daa
dec
xlat
lea
mov
into
lods
outsb
push
push
fcmovb
in
xchg
dec
push
mov
fisubrs
mov
mov
loopne
insb
cmp
ret
clc
sub
inc
mov
push
mov
mov
aas
push
dec
xchg
jo
mov
into
xchg
mov
jge
fnsave
or
rorl
dec
pop
jo
loopne
add
xor
cmp
push
repnz
mov
pop
inc
or
cmp
mov
mov
jl
cmp
mov
loopne
icebp
fistl
xor
push
popa
jno
add
pop
sbb
or
movsl
shl
add
adc
cwtl
rcrb
dec
lea
push
mov
xor
jmp
xchg
popf
jae
xor
sbb
fistps
add
daa
and
sub
insb
xchg
add
out
lods
adc
enter
adc
lret
inc
cwtl
xchg
cli
push
mov
push
jae
pop
add
jmp
mov
mov
mov
adc
xor
pop
call
xchg
lahf
xchg
push
push
pop
icebp
jmp
call
aaa
cmp
stc
iret
jmp
test
jmp
out
sbb
or
push
sub
push
scas
mov
push
inc
aaa
adc
push
pop
jnp
mov
jecxz
or
and
insb
ret
add
in
popf
ret
pop
mov
js
jae
dec
cmp
mov
lds
movsl
push
call
inc
lcall
and
dec
arpl
or
in
testb
mov
ds
cmp
in
mov
test
mov
dec
mov
xor
adc
cli
in
faddl
ss
jbe
sub
cmpsl
push
and
mov
cmpsl
add
jle
arpl
pushf
ss
and
jmp
out
xchg
pop
lds
pop
repz
pop
es
in
xor
pop
xor
mov
sbb
imul
jle
and
sqrtps
pop
dec
imul
cli
xchg
and
inc
andb
push
and
adc
jne
pop
jl
repz
jmp
out
jns
mov
ja
ret
in
in
xor
xor
hlt
sbb
dec
add
cmp
sub
xor
dec
push
jecxz
daa
pop
adc
je
nop
jecxz
lcall
pop
mov
lods
inc
inc
mov
and
repz
inc
arpl
cld
les
in
adc
or
ss
xor
mov
fidivrl
int
je
cmpl
lea
sbb
add
pusha
enter
sqrtps
xchg
mov
push
sarb
mov
nop
or
add
sbb
in
xchg
ja
loopne
mov
mov
mov
cwtl
mov
push
mov
and
popf
jne
arpl
movsb
pop
outsb
dec
jmp
roll
add
andb
pushf
movsb
xor
pop
das
jecxz
gs
sbb
jecxz
dec
scas
xchg
add
loop
or
jle
xor
int
pop
jg
sbb
aaa
cmp
jnp
cmp
add
repnz
mov
cmp
xchg
mov
pushl
sub
xchg
fs
xchg
cmpb
cmc
dec
jae
xchg
jo
mov
lock
aaa
dec
js
xchg
mov
and
mov
mov
jae
popa
sbb
lods
ret
jp
cmp
mov
bound
mov
enter
or
shr
bound
sub
inc
push
fstp
xlat
cwtl
xlat
xchg
xchg
sub
sbb
dec
inc
mov
fdiv
fistpll
aaa
in
mov
stos
aas
notl
xor
add
push
jl
scas
je
mov
mov
stc
mov
jae
rolb
lods
or
mov
push
shrl
jo
test
mov
cmp
stos
rcll
adc
xor
jne
and
cltd
jge
ret
rcrl
cs
leave
cs
mov
stos
pop
sbb
jae
lds
jae
js
sub
lret
cltd
mov
js
nop
icebp
adc
js
dec
int3
je
add
je
xchg
in
cmp
ds
movsl
sub
aam
cmp
jnp
inc
mov
or
scas
out
out
dec
xor
dec
outsl
insl
cli
cmp
in
inc
fisttpll
int3
call
cmpsl
jge
std
jno
pop
adc
clc
in
in
push
out
test
imul
or
outsb
mov
pop
repnz
mov
outsb
mov
fdivrp
mov
sbb
sbb
stos
arpl
sbb
pop
fbld
adc
bound
daa
jnp
xor
imul
ret
pop
scas
jns
ja
cmp
lret
mov
dec
sti
cmp
scas
repnz
push
push
frstor
sbb
mov
dec
je
iret
add
test
cmp
mov
popa
or
mov
ss
imul
jns
add
out
inc
xor
insb
scas
xor
fldt
xor
aas
out
rcrl
outsb
xchg
sbb
add
mov
dec
out
mov
fdivrs
cmp
cmp
lret
imul
in
jne
dec
popf
xchg
in
jmp
addr16
int3
js
les
ret
je
add
lods
xchg
xchg
arpl
iret
out
pop
mov
dec
xchg
jb
and
lret
pop
je
int3
imul
jp
lds
scas
fwait
push
cmp
outsb
imul
test
insb
lahf
jmp
nop
aam
mov
lods
ja
mov
mov
dec
loopne
sub
or
js
dec
out
mov
in
cmp
lret
adc
dec
scas
orl
mov
push
outsl
pop
xchg
inc
add
pop
popf
adc
dec
xor
inc
xor
je
mov
inc
test
and
xchg
fdivrs
out
and
fwait
sub
cltd
scas
pop
push
shlb
push
add
sbb
xchg
mov
cli
push
pop
leave
scas
push
push
int3
pop
icebp
sbbb
xor
lret
mov
pusha
rclb
std
xchg
sahf
xchg
enter
rcrl
or
pop
cwtl
pop
adc
scas
ret
xlat
or
and
adc
xchg
dec
daa
test
push
iret
nopl
stos
bound
cmc
or
adc
pop
adc
jbe
fisubrl
mov
dec
data16
fwait
cld
mov
adc
clc
and
jmp
mov
add
aaa
or
xchg
sbb
in
inc
push
aad
add
dec
popf
fnsave
xchg
dec
pop
int
jnp
mov
xor
jge
shll
sbb
stc
add
pop
shll
lds
and
scas
push
ret
dec
lcall
orb
inc
lahf
imul
cmpsb
mov
inc
xor
lcall
inc
aas
pop
push
outsl
das
jmp
sbb
add
add
aam
ror
into
fwait
and
lods
js
pop
cmp
xorl
mov
lcall
push
mov
test
jnp
lods
sbb
adc
sub
sbb
jp
out
pop
arpl
imul
rorl
outsl
add
cmpl
and
or
repz
mov
test
sahf
mov
xchg
out
das
pop
jge
int
inc
xchg
pusha
roll
mov
dec
fdivrl
or
fidivrl
arpl
xchg
and
lock
jne
enter
push
sarl
dec
scas
loop
ja
inc
negl
lret
fnsave
popf
mov
fwait
mov
jle
rcrb
mov
cltd
jno
inc
xchg
out
out
rorb
outsl
inc
push
iret
mov
leave
fisubs
lahf
inc
jb
aad
clc
xchg
push
aad
push
cmc
ret
jno
sahf
push
jl
jne
int3
add
out
in
pop
cmp
xchg
sub
sbb
xchg
into
mov
outsb
jae
popa
cmovae
xor
dec
mov
adc
add
es
loope
popa
pushl
stos
ss
xor
mov
sub
cmc
pop
leave
xchg
inc
pandn
jnp
xchg
pop
xchg
adc
data16
cltd
cltd
cmpsl
cli
sti
repz
mov
mov
adc
pushl
loop
pusha
jmp
cs
pop
and
cld
in
pop
shrb
fistl
sbb
daa
lods
or
hlt
mov
jl
mov
clc
rcl
fldcw
adc
cmp
mov
cmp
sbb
dec
push
popf
pop
mov
xchg
sub
mov
jmp
xchg
fs
cs
fcomp
test
lret
mov
dec
adc
outsl
leave
lcall
je
lret
mov
imul
xor
push
repnz
fwait
leave
aaa
outsl
push
dec
fsubrl
faddp
xor
push
add
or
fs
arpl
cs
or
xchg
push
call
pop
lods
in
sbb
mov
arpl
mov
or
in
fbld
sbb
loopne
mov
lods
cmp
out
scas
dec
popa
test
sbb
push
or
jl
sbb
dec
mov
test
cltd
mov
push
insl
int
rcrl
sub
test
dec
cmpsb
insb
lret
mov
std
loopne
push
cmpsl
xchg
rorl
mov
inc
sub
fdivrl
cmp
divl
movsl
inc
jecxz
ljmp
arpl
sbb
push
das
add
push
push
add
sub
sbb
cld
nop
or
mov
cmp
pop
fstpl
sti
mov
add
cmc
jae
mov
cld
or
insb
testb
call
ud1
dec
pop
daa
out
test
adc
dec
scas
xor
repnz
pop
dec
push
xor
cmp
push
mov
lds
inc
call
or
inc
mov
popa
pop
shlb
rclb
adc
inc
mul
subl
push
cld
cmp
mov
lahf
push
inc
mov
mov
movsb
inc
hlt
repz
or
movsb
adc
js
jmp
pop
fldcw
and
sarl
enter
fcmovbe
leave
dec
cmpsl
int
cmpsl
cmp
cmp
cmp
mov
push
xor
shlb
in
sub
cmp
fwait
mov
xchg
pop
fs
jno
push
nop
in
jg
loop
pop
pop
std
xor
dec
fisttpll
js
cmpsl
mov
xchg
pop
pop
loope
movb
cmc
lahf
cwtl
in
repz
fstl
repnz
loope
push
jae
cmpsl
mov
pop
pop
ret
sbb
sahf
xchg
xchg
xchg
cmp
out
sub
and
mov
inc
out
xchg
inc
or
or
mov
push
mov
mov
int3
cmpsb
mov
xchg
push
pop
sarl
shl
push
inc
aam
enter
cs
push
popf
scas
push
mov
insl
fwait
mov
jmp
arpl
aad
stos
rcll
and
mov
aaa
jne
das
sti
dec
ss
add
aaa
xor
sbb
and
and
xchg
jmp
cwtl
adc
pop
push
and
gs
push
leave
jns
loope
pop
out
add
adc
jo
into
mov
aaa
xchg
pop
mov
mov
mov
inc
push
adc
sbb
hlt
fwait
into
mov
jb
mov
jns
sub
push
cmp
adc
ljmp
adc
mov
dec
xor
mov
add
outsb
cmp
aad
sti
das
mov
ss
fcomi
pop
nop
xchg
pop
nop
in
add
cmp
mov
xor
fidivl
out
jae
out
jae
mov
adc
popa
inc
lea
sub
fldcw
aad
push
enter
or
mov
aas
jmp
pusha
jp
pusha
aas
mov
aas
xor
rclb
lods
arpl
fprem
lods
fld1
ss
aaa
popa
jmp
add
mov
repnz
jbe
into
jg
adc
jae
ret
jae
inc
je
inc
repnz
inc
jbe
inc
jbe
ljmp
pop
cwtl
pop
pop
fcmovnbe
pop
fcmovnu
aam
xor
imul
fdivs
fcomp
xor
xor
loopne
sub
xor
cmp
mov
add
dec
or
scas
mov
scas
xor
push
ja
mov
insl
mulb
sbbl
mov
mov
mov
fstl
and
sub
insl
or
mov
jbe
test
test
std
xlat
mov
int3
xchg
rolb
cli
dec
cmp
sbb
sbb
in
outsl
pop
in
subl
ds
ds
cli
ds
es
pop
es
dec
jne
dec
cmpsl
push
dec
cmpsl
cmp
cmp
inc
xorl
inc
jp
inc
mov
mov
repnz
repnz
aaa
mov
cwtl
stc
mov
jmp
cwtl
jmp
jg
sub
sub
sub
push
movsl
imul
inc
push
jg
repz
movsb
repz
in
sub
in
jecxz
in
jecxz
and
into
aam
iret
aam
add
fwait
popf
or
dec
iret
pop
dec
jle
dec
jle
jg
ss
lods
ss
lret
fs
lret
mov
lock
lock
sbb
mov
mov
lret
fnstsw
fnstsw
add
push
mov
push
psrlq
shll
shll
repz
sub
xchg
dec
fists
pop
lods
in
pop
mov
pop
mov
mov
mov
push
movsb
mov
mov
fdivrp
lds
xlat
mov
loope
sbb
sbb
scas
sub
xlat
and
and
clc
sub
clc
sahf
sar
sahf
jmp
lahf
jmp
movsl
jmp
icebp
push
popl
sbb
pusha
add
pusha
add
pop
adc
adc
sub
add
inc
loopne
add
add
dec
loopne
add
add
add
add
dec
loopne
add
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
