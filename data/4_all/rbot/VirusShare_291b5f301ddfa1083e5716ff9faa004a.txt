call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
add
pop
pop
mov
inc
push
mov
add
push
lea
fidivs
js
and
std
fistl
cmp
les
jle
add
pop
pushl
daa
xchg
popa
ljmp
add
lea
push
jg
push
fcomip
fisubrs
pushl
push
pop
or
or
cmpsl
xor
pop
mov
pop
leave
ret
jge
push
pop
add
test
pop
jle
or
jg
mov
pushl
adc
rcrl
jnp
jmp
sub
iret
fsin
adc
divb
mov
cmp
pop
cmp
push
je
clc
loope
sarb
cwtl
fs
add
sti
mov
test
inc
mov
mov
lock
push
mov
sbb
mov
mov
in
out
add
inc
or
or
ror
jle
cwtl
sbb
popf
cwtl
verr
mov
jg
ret
xor
sbb
lea
push
test
push
movl
pusha
icebp
frstor
jmp
insl
xchg
out
add
cld
std
int3
push
and
sti
jge
sbbl
popa
and
loopne
add
addl
out
and
or
xor
cmp
mov
pop
pop
fnsave
cmp
push
test
jns
and
ljmp
cmp
pop
jmp
push
repnz
push
mov
cmp
inc
push
sub
lock
pop
je
mov
mov
daa
add
or
xor
in
enter
lds
and
int
sbb
dec
mov
push
sbb
and
sbb
add
repnz
and
or
ret
add
cmp
cmp
shll
sub
pmaxsw
fcmove
and
sub
loop
mov
push
add
xchg
and
rorl
fidivs
adc
inc
jne
adc
adc
lods
mov
bound
cmp
sub
adc
into
ljmp
jne
add
out
jg
dec
adc
mulps
xor
jmp
ja
push
pop
cld
mov
inc
sar
hlt
das
mov
in
adc
jne
sub
hlt
sbb
fisttps
dec
clc
cld
cld
mov
neg
jne
sbb
and
adc
or
xchg
loopne
sbb
add
mov
dec
pop
popf
mov
push
pop
jnp
or
pop
push
aaa
push
pop
push
jne
outsl
add
or
push
movw
inc
imul
bound
data16
push
lods
lods
repz
in
sbb
sbb
imul
pop
clc
pop
sahf
mov
mov
mov
adc
mov
int3
mov
adc
sti
setg
pop
add
cld
pop
sbb
adc
mov
or
mov
ficoml
xor
fmuls
add
cwtl
fcmovu
jg
push
pop
xor
jnp
fsubr
loopne
pop
in
push
fidivl
add
push
out
lock
cmp
lods
xacquire
push
sti
pop
mov
cli
pop
test
lods
mov
movb
aad
sub
dec
mov
out
inc
inc
mov
fbld
push
adc
jo
cmp
sti
and
push
insl
mov
pop
xchg
adc
out
add
mov
call
dec
lret
xor
cmpsb
adc
flds
andb
in
pusha
mov
aas
dec
xor
mull
adc
adc
mov
pushw
js
push
lahf
jmp
adc
ds
call
clc
push
rsqrtps
mov
mov
in
gs
shll
cmpsl
cmp
xlat
push
or
addl
js
sete
xlat
mov
loopne
push
pop
outsb
push
jne
lea
push
cwtl
rep
aam
orb
fdivrs
ds
inc
sbb
ficomps
hlt
stos
out
imul
xor
aaa
clc
mov
lock
je
cmp
cmpsb
add
pop
jmp
push
mov
call
mov
adc
push
movsl
je
std
insl
add
aam
sbb
xor
in
out
test
arpl
push
data16
cltd
fwait
test
loope
das
insl
push
dec
add
clc
xlat
or
pop
in
xchg
mov
popa
negb
test
pop
jne
adc
arpl
pop
cwtl
popa
mov
mov
clc
in
loopne
jnp
mov
lock
add
aad
inc
cmp
sarl
iret
imul
das
rcrb
hlt
lcall
mov
mov
les
int3
pushf
sarb
comiss
mov
jb
das
sar
call
pop
mov
add
add
add
push
out
mov
sbb
sbb
lods
cmp
add
mull
mov
pop
cltd
mov
mov
and
sub
test
mov
arpl
dec
push
pop
mov
bound
es
jo
jl
pop
mov
imul
dec
repz
inc
inc
xor
sub
loope
cmc
add
lods
pop
jne
push
xor
in
push
xor
jb
and
pop
lock
outsb
aam
xor
cld
jo
mov
cmp
adc
push
je
aam
jge
adcb
enter
lret
xor
shrl
and
mov
pop
fldl
int
mov
push
scas
or
fadds
test
orl
cld
jne
push
call
jmp
xor
or
inc
cmp
dec
dec
lock
jae
xlat
sbb
or
shl
pusha
ljmp
sub
mov
mov
push
jecxz
push
fs
popf
rclb
ja
xor
or
cs
popa
adc
cmp
push
cmp
mov
mov
roll
cld
sti
mov
mov
popa
cmpb
push
ret
adc
loopne
mov
ud0
testl
jmp
sub
imul
loopne
inc
sahf
je
ret
push
jo
add
fldl
push
sbb
push
add
mov
mov
mov
daa
dec
fcompl
xchg
cmp
xor
idiv
addl
push
push
push
jge
sbb
mov
int3
rol
rcll
push
sub
push
inc
jge
mov
adc
xchg
push
dec
inc
mov
das
rorl
cmpb
mov
jg
and
or
out
push
fistpll
fidivrs
movzwl
push
push
cli
or
sub
js
lock
ret
sbb
sub
or
sub
imulb
pop
addb
ja
mov
inc
push
push
push
jne
adc
stos
cmp
push
pop
push
xor
add
adc
sti
dec
sbb
sbb
js
cld
jmp
adc
iret
out
mov
jge
cmp
je
push
pusha
cltd
sets
dec
pusha
pusha
xor
les
or
pushl
pop
xchg
loope
sub
mov
movsb
xor
mov
add
cmp
jne
push
pushl
mov
adc
xchg
ret
push
pop
imul
or
jne
out
loopne
vmovupd
pop
pop
or
adc
add
or
push
and
xchg
in
xchg
xor
pop
cmp
aaa
push
cld
mov
jne
push
mov
stc
mov
mov
hlt
sub
mov
ret
mov
ljmp
jl
andl
popa
add
iret
xor
push
pop
cmp
xchg
cld
lds
ja
mov
push
jmp
cs
jecxz
aaa
and
orl
push
in
frstpm(287
xchg
add
pop
cmp
push
xor
out
xchg
fwait
cmp
xchg
xchg
call
icebp
mov
or
cwtl
lea
mov
push
add
ja
pushl
pop
movsb
stos
push
mov
je
mov
sub
lahf
jo
cwtl
push
lea
mov
fwait
cltd
jmp
pop
fs
adc
add
mov
mov
inc
jno
bswap
clc
mov
je
je
jg
das
clc
xor
mov
mov
and
and
xor
shr
add
sbb
rcrl
inc
and
inc
dec
jne
pop
ret
pop
not
ret
dec
sti
scas
mov
insb
movl
ficoms
mov
clc
ljmp
testb
outsb
mov
push
sub
lea
push
mov
cmp
faddl
sbb
orps
fdivs
and
push
cmp
sbb
ret
pop
jmp
jb
jge
sub
int3
push
std
push
jb
jl
add
or
int
into
and
dec
cs
lret
in
or
sub
or
and
cmp
jb
pop
aad
sub
pop
fsubrs
mov
push
fisubrl
sbb
seta
in
fimuls
loopne
loope
loop
lret
in
sub
in
pop
in
out
out
pop
cs
adc
or
jmp
pop
mov
in
out
push
pop
out
dec
lock
in
mov
repz
hlt
aaa
cmc
mov
cs
sbb
clc
sub
adc
pop
cli
push
sti
pop
mov
mov
or
xchg
insb
cmp
pop
mov
test
jb
aas
cld
sbb
jge
jne
pop
mov
mov
adc
inc
mov
sbb
stc
decb
test
call
loop
mov
mov
mov
mov
fiaddl
lret
and
inc
mov
push
mov
lea
jb
test
jge
mov
data16
adc
inc
and
xchg
inc
orl
and
mov
jne
mov
mov
mov
inc
call
mov
mov
mov
lret
inc
lods
dec
add
cmp
cmp
rcll
hlt
addl
hlt
mov
out
imul
mov
shlb
mov
xchg
ljmp
dec
ds
mov
dec
mov
stos
lea
jmp
addl
push
push
lea
out
dec
xor
fcom
cld
ds
pop
xchg
divl
push
push
or
jle
add
adc
xchg
push
icebp
push
jecxz
add
or
push
push
das
pop
psubb
or
xor
xor
pop
add
enter
push
jb
loopne
leave
inc
xor
pusha
mov
push
pop
lret
or
mov
mov
loopne
loopne
add
sbbl
push
cmp
je
inc
add
sub
loopne
jno
sbb
add
add
mov
cmpsl
add
cld
jecxz
sub
ret
sbb
xlat
out
inc
les
sbb
imul
fnstsw
in
mov
sub
sub
int3
nop
incl
shrl
dec
and
mov
sbb
call
cltd
pop
idiv
cmp
je
mov
inc
xchg
push
popf
sar
jnp
sub
je
xor
mov
mov
int
push
adc
add
jmp
rorl
pop
jne
push
push
mov
dec
test
xchg
or
out
pusha
aaa
mov
lock
dec
das
push
xorl
and
xor
xor
jo
push
push
in
push
inc
cmp
mov
push
mov
cltd
sub
sar
add
or
add
adc
mov
push
dec
xor
dec
or
jl
and
xchg
mov
leave
enter
int3
cmpsl
dec
mov
icebp
lea
and
xchg
inc
sbb
push
push
lock
shl
out
push
jne
nopl
out
stos
mov
mov
pop
stos
cmp
adc
mov
fdivs
test
test
call
popa
pop
rcr
adc
xlat
xor
enter
jge
fldt
push
sub
add
push
adc
push
xchg
pop
mov
pop
jne
mov
sbb
shl
mov
sbb
add
sub
cmp
jp
lods
cltd
cmp
push
add
loopne
fbstp
mov
mov
push
mov
jne
mov
mov
dec
push
jnp
cmp
pop
cmpb
jne
inc
in
cmp
lock
xor
push
sbb
popf
fstps
sub
pop
pop
cmp
int3
in
in
push
sbb
dec
mov
sub
in
push
pop
mov
push
add
add
cmp
test
into
and
add
mov
xor
add
dec
sub
mov
xchg
dec
movsb
cmp
fisubl
sbb
push
pop
or
mov
adc
xchg
insl
jne
pop
mov
js
jge
ret
clc
jne
push
mov
pop
push
jae
cmp
je
mov
movsb
push
xchg
in
xor
xor
adc
clc
jmp
mov
sub
adc
push
dec
in
and
inc
lcall
add
movb
push
pop
xchg
cltd
push
jl
jmp
jp
add
jge
addb
xchg
scas
push
cmc
cmp
je
cmp
add
pop
xor
aad
and
inc
lea
adc
push
mov
add
jno
call
add
sbb
mov
aaa
mov
and
pusha
lock
dec
fsubs
sub
js
in
lods
aam
mov
jl
ret
pusha
push
push
rolb
dec
mov
pop
and
fldl
inc
sub
push
mov
filds
daa
mov
sub
or
adc
daa
and
add
dec
add
mov
push
aaa
dec
orb
mov
out
stc
and
insb
out
jo
xchg
xchg
xchg
mov
adc
push
jmp
jb
dec
enter
or
clc
in
int
sub
cmpb
in
pop
and
sbb
pop
mov
call
cmp
in
std
sbb
sub
cmp
cmp
cmpsb
push
inc
mov
cmp
rcrb
int
xchg
add
movsl
pushf
add
xchg
jne
insb
lcall
add
nop
stos
cltd
stc
cmp
push
or
fwait
out
sbb
pop
push
jb
and
inc
pop
pusha
adc
mov
or
push
sbb
movsl
sarb
ficomps
into
jo
dec
test
jno
cs
push
cltd
js
cmp
mov
add
add
xor
jo
pop
jne
dec
loopne
mov
push
or
push
dec
xorl
loopne
mov
sub
xor
mov
cmp
push
lcall
pop
mov
loop
push
loopne
mov
filds
dec
daa
into
pop
jge
fidivl
daa
xchg
rcl
addb
lcall
out
movzwl
cltd
mov
add
idiv
push
xor
adc
in
push
push
inc
mov
test
adc
loopne
cmp
mov
pop
int3
pop
add
push
push
jmp
push
inc
and
aad
lahf
fistl
sbb
neg
sbb
and
add
mov
sbb
mov
push
push
cli
imul
mov
cmp
dec
jno
in
pusha
jl
std
cmp
mov
add
jnp
or
adc
adc
outsl
leave
enter
std
cmp
ror
jmp
push
fstpt
inc
ss
cmp
shl
shlb
adc
cmp
ss
dec
lahf
lock
pop
fsubs
jo
ja
push
or
inc
xchg
xor
fldl
xchg
loopne
mov
imul
sahf
sbb
mov
and
push
insl
sbb
inc
sbb
adc
int3
loope
sbb
mov
mov
add
adc
pop
jl
scas
xchg
xchg
dec
sub
inc
adc
popl
inc
enter
mov
pusha
ror
xor
sbb
les
push
xor
adc
jmp
push
stos
fcomps
and
inc
das
pop
ret
sub
or
int
aam
out
sbb
imul
adc
pop
mov
sub
test
aam
sbb
inc
sub
daa
mov
add
bound
jmp
repnz
js
add
xor
imul
push
call
mov
mov
inc
or
xchg
subb
repnz
dec
out
pop
cmc
movsb
adc
inc
cmp
sub
xor
mov
cli
lock
les
out
shlb
mov
cmp
and
inc
or
js
decl
pop
sbb
sbb
outsb
add
fadds
idivl
sub
sbb
adc
int3
je
cmp
and
push
cmp
pop
popa
popa
pop
ss
cwtl
sti
insl
icebp
mov
cmp
add
xor
add
xor
jge
ret
incl
add
ja
mov
adc
call
dec
subb
int3
add
jmp
adc
pop
push
or
sub
add
cwtl
loopne
xchg
adc
mov
je
mov
cmp
test
mov
out
push
push
jb
mov
imul
jl
mov
enter
lods
fists
insl
mov
pop
inc
popf
or
je
jg
dec
ret
cmp
jnp
enter
sti
cmp
das
lahf
in
arpl
xor
out
adc
ror
mov
scas
jge
out
push
mov
fmull
out
sbb
xor
pop
insl
fcmovnbe
xor
mov
rorb
rclb
push
add
int3
sbb
push
aas
mov
mov
and
add
sub
mov
push
negb
addb
push
and
mov
cld
adc
ds
add
mov
std
dec
push
pop
push
sub
mov
sub
push
addr16
jne
adcb
insb
sbb
push
and
call
sub
or
mov
sbb
push
mov
dec
mov
loopne
pusha
insl
add
leave
inc
outsb
jg
cld
or
mov
add
push
jl
ret
sub
push
fiadds
adc
scas
ret
xchg
rorl
push
add
xchg
xor
xor
push
sbb
subb
daa
or
test
sbb
mov
inc
and
stc
push
pop
add
or
mov
je
jno
ret
cltd
lods
lahf
div
stc
test
outsl
movb
inc
jmp
dec
inc
lea
js
jg
or
dec
jmp
andb
daa
push
push
pop
xchg
sub
add
sub
inc
mov
dec
je
dec
pop
and
mov
dec
ret
mov
pushf
dec
jo
inc
xchg
mov
js
adc
and
adc
cmp
repz
cmp
mov
or
push
pop
clc
test
push
add
out
or
movsb
push
xchg
call
cmp
jo
cwtl
cwtl
xor
mov
add
dec
jge
push
push
push
fimuls
ret
and
mov
xchg
in
push
sbb
xor
inc
mov
mov
js
mov
mov
mov
lock
adc
cltd
pop
or
lods
movsb
and
insl
push
mov
enter
jmp
icebp
mov
insl
mov
insb
and
fsubrl
cs
dec
pusha
xor
xor
sbb
orb
ja
loope
push
pop
sbb
adc
cmpb
jo
and
xor
add
push
push
js
jbe
adc
adc
sti
jg
jmp
ja
cmpl
or
mov
imul
and
sub
inc
adc
cmp
dec
inc
es
enter
stos
push
insl
cmp
insl
daa
cmp
mov
jns
push
clc
adc
popa
xor
mov
push
sbb
pop
int3
push
mov
jb
scas
pushf
add
adc
shl
fs
in
fsubrs
enter
mov
cltd
adc
sbb
lret
mov
loopne
xor
enter
pop
push
xor
hlt
push
ljmp
in
mov
pop
dec
sub
jne
pusha
sub
popa
rcll
push
and
add
mov
orb
cmpl
mov
sbb
sti
mov
push
daa
adcl
je
cmpb
jb
jne
in
xlat
inc
adc
je
rolb
xor
outsb
outsl
in
sbb
mov
das
mov
bound
loopne
sbb
ds
subb
lea
sbb
pop
adc
bound
cmp
adc
mov
dec
adc
stos
sbb
jno
cmp
enter
adc
sub
push
xchg
fnsave
mov
rorl
loopne
rorb
adc
jle
cmp
wrmsr
sub
mov
inc
or
inc
sub
inc
cmp
jl
xor
clc
incl
dec
push
jbe
and
push
dec
push
je
dec
je
loopne
dec
movsl
dec
shrb
push
xchg
or
push
rorl
pop
stos
aam
fcomps
rolb
push
popf
lret
iret
push
push
mov
je
fsubl
cmp
nop
lock
push
jo
or
mov
or
inc
hlt
pop
cmp
je
repnz
fdivs
dec
sub
mov
addb
jns
pop
cmp
lret
repnz
jge
and
aam
shrl
je
outsl
jae
arpl
loopne
je
imul
inc
or
cli
repnz
adc
inc
fisubrl
push
setge
inc
jmp
dec
push
mulb
sbb
inc
mov
jmp
sub
repnz
mov
or
lods
add
push
inc
add
popf
out
out
pop
jno
test
mov
das
mov
xorl
test
sub
mov
add
movsl
push
sbb
pop
cmpsl
int3
and
inc
les
movsb
mov
sub
fnstsw
js
xchg
insl
or
push
push
sti
adc
clc
test
adc
sbb
ftst
dec
popf
lock
mov
jle
mov
push
or
mov
add
addl
adc
jbe
lea
out
incl
je
inc
add
cmp
jb
pop
jne
das
inc
jae
mov
inc
mov
lds
mov
xchg
insl
sbb
adc
jne
loope
fs
push
fidivl
sub
sbb
pusha
inc
pop
es
arpl
jg
mov
mov
ss
mov
je
rol
inc
in
enter
sbbb
lea
adc
dec
nop
sub
lret
dec
cmp
loop
sub
std
or
sbb
arpl
repz
xchg
pop
sbb
out
mov
jo
test
test
push
pop
sti
xchg
pusha
dec
sub
jbe
push
ret
insb
push
pop
or
sub
inc
sbb
cmp
lcall
aam
xor
or
jg
pop
or
push
inc
std
cmp
pop
jb
cmp
mov
ret
sbb
xor
imul
ficompl
mov
imul
xchg
push
clc
aam
jae
pusha
push
out
fs
xor
lret
jle
mov
jp
loope
or
push
pop
or
inc
cmp
pop
imul
es
mov
adc
or
jbe
outsl
test
popf
mov
jne
push
cmp
sbb
cmp
pusha
pop
adc
cmp
mov
mov
mov
fnstcw
mov
cld
xchg
sbb
mov
cmp
dec
cld
push
fldcw
lods
stc
xor
cmp
pop
lock
push
push
jno
inc
xor
inc
cwtl
pop
mov
cmp
addr16
rolb
daa
lock
leave
and
dec
jl
push
fnstenv
jne
mov
lods
jmp
cld
and
and
je
mov
and
daa
push
add
mov
mov
das
dec
out
mov
sbb
push
mov
sub
inc
sahf
xor
lea
faddl
push
ret
jns
jae
les
ja
sbb
xor
addr16
aad
adc
pop
pusha
jg
enter
push
movb
push
mov
arpl
sbb
sarl
jbe
jg
jp
dec
jo
adcb
cmpb
and
xor
neg
ds
test
test
sub
mulb
cmp
jne
push
pop
pop
movsbl
mov
addr16
mov
decl
inc
mov
nop
xor
jns
mov
push
xlat
mov
es
ds
ljmp
lds
pop
je
ds
mov
cmpsb
dec
sub
popl
sbb
add
pop
mov
cmp
popf
cmp
or
insl
sbb
push
adc
pop
mov
addl
push
shlb
inc
aas
mov
je
cmpsl
dec
inc
pop
out
shlb
fs
cmp
jmp
push
xchg
ss
pusha
sbb
cmp
sub
test
hlt
mov
loope
mov
jae
test
mov
mov
cmp
push
push
lea
aam
push
test
test
jmp
lret
outsl
bound
push
lea
sbb
jne
push
adc
or
mov
adc
push
and
or
dec
ret
jecxz
daa
daa
insl
xchg
add
aam
jo
mov
and
pop
jae
or
xchg
push
leave
pop
mov
out
dec
adc
push
adc
push
addl
add
push
je
lods
popa
pop
cmp
insl
push
dec
xchg
push
test
push
loop
out
push
push
pop
sbbb
push
jnp
xchg
repnz
fdivr
sbb
je
or
nop
pop
pushf
mov
or
add
dec
mov
add
or
dec
adc
cmp
pop
add
hlt
inc
push
xor
push
mov
insl
and
idivl
enter
js
mov
into
lea
jle
adc
gs
scas
lock
ja
and
or
leave
and
or
pop
loopne
push
xor
loopne
sub
mov
mov
mov
or
ja
mov
add
adc
repnz
dec
mov
xor
ljmp
add
add
and
cmpsl
adc
outsl
push
inc
daa
xchg
dec
iret
push
inc
cmp
jo
xchg
sarb
sbb
notl
shl
dec
je
jmp
xchg
loope
pop
sbb
sbb
and
adc
jl
adc
test
pop
pop
inc
rcll
sbb
movsb
and
shll
xlat
pop
push
or
shrb
inc
and
loope
inc
dec
push
mov
sub
and
cld
aaa
or
sbb
mov
in
loop
pop
jge
in
xor
fs
inc
repnz
test
sub
lods
and
loopne
mov
fidivs
or
out
cmp
insb
js
or
mov
adc
daa
call
and
scas
xchg
fldenv
cmp
and
call
xor
xchg
sbb
pushl
dec
sbb
push
pop
adc
add
jne
sub
inc
stos
add
adc
and
add
xor
push
icebp
add
add
sbb
adc
sub
out
push
push
jo
aas
add
or
insb
add
repnz
or
add
pop
or
mov
xchg
mov
xor
push
loop
cmp
movq
pop
xchg
sub
jne
sub
in
out
and
adc
cmpb
jne
movb
shlb
das
push
inc
xchg
ljmp
mov
add
inc
test
xchg
fdivs
mov
repnz
jp
pop
jo
ret
test
sbb
push
push
cmpsl
and
sub
and
push
add
add
cmp
inc
mov
movsl
ljmp
xor
xchg
sbb
sbb
pop
test
inc
mov
sub
mov
fwait
and
pop
jne
push
daa
popa
es
add
add
push
xchg
inc
mov
and
call
add
xchg
ret
jne
aad
cld
sub
mov
out
push
jge
fcomip
inc
mov
dec
mov
shll
mov
test
ja
add
ret
pop
hlt
jnp
pop
icebp
add
in
mov
lret
fcoml
or
mov
test
mov
je
dec
push
sbb
or
mov
push
cltd
or
incl
mov
inc
rorb
xchg
sbb
movb
cmp
aam
mov
lods
or
cmp
orb
inc
popa
je
ja
shl
adc
fdivrl
pop
jmp
pop
test
push
cltd
repnz
mov
xor
mov
test
and
aam
adc
pop
jb
lock
test
adc
add
ret
lods
jge
adc
sub
idivb
push
sbb
cwtl
pusha
push
std
push
shrb
xor
sbb
sub
mov
inc
mov
into
cltd
sbb
jmp
mov
dec
divl
shr
push
mov
mov
cmp
sbb
test
dec
jg
or
inc
inc
xor
adcb
mov
rclb
push
mov
aas
sub
cltd
cmpl
mov
mov
mov
mulps
movsb
dec
fildll
or
or
test
lods
in
add
push
push
adc
add
xor
inc
sub
jp
loope
call
push
pushf
outsb
cmp
imul
std
test
pop
mov
push
mov
or
inc
mov
and
inc
dec
int3
adc
clc
jns
data16
lock
push
ss
cmp
movsb
and
dec
fstps
adc
je
xchg
addr16
clc
out
sysenter
sbb
in
jns
rcrb
push
push
lods
unpcklps
cwtl
aad
aad
add
inc
into
lds
mov
shr
cli
push
call
jmp
aas
mov
xchg
int3
pop
jno
dec
xor
fisubs
inc
xor
jb
sbbb
adc
nop
leave
in
fs
dec
cwtl
lods
xor
sbb
sar
cmp
jns
loopne
stos
mov
inc
push
cmp
xchg
addr16
xor
xchg
addr16
and
sbb
mov
int
pop
jmp
lahf
mov
add
cmp
loopne
xchg
mov
lock
xor
xchg
sbb
pushf
mov
adc
mov
in
push
mov
insb
and
fs
mov
mov
leave
sarb
mov
push
adc
push
mov
sbb
adc
xor
in
aam
dec
xor
leave
in
in
push
clc
or
inc
pop
in
or
mov
stc
adc
aaa
mov
mov
loopne
in
in
pop
jbe
seto
jl
int3
or
pop
mov
cmp
sub
jo
dec
push
and
jb
repnz
adc
xor
dec
hlt
pushf
enter
lods
fcoml
mov
cmp
leave
xor
out
adc
mov
pop
xchg
les
mov
and
push
je
sbb
xchg
and
rol
shlb
sbbb
int
movsl
add
cltd
pusha
nop
fsubr
gs
jns
daa
adc
and
xor
cmp
adc
hlt
adc
and
sbb
inc
in
dec
sbb
xchg
mov
enter
je
sbb
js
and
loop
sub
dec
inc
dec
xor
nop
xor
andl
dec
pop
sub
cltd
popf
mov
aam
jbe
cmp
xor
dec
jl
in
in
int3
in
xchg
in
cltd
test
sbb
insl
in
test
and
push
icebp
pop
test
adc
mov
xchg
flds
sbb
fs
pop
stc
add
fs
aad
xchg
ja
mov
mov
cwtl
mov
pop
movsl
fisubs
xor
sub
inc
inc
inc
call
mov
dec
rorl
adc
sahf
in
lret
pop
pop
sbb
nop
and
mov
push
sbb
xchg
dec
mov
inc
mov
inc
cmpsb
sbb
arpl
xor
xchg
jae
cmp
mov
xchg
inc
je
rclb
mov
fs
stos
mov
in
in
rol
aam
cltd
loop
or
jae
cld
shl
sbb
mov
cmp
iret
lret
wrmsr
add
lret
sub
je
cmp
mov
push
mov
adc
sub
xor
push
add
jne
sub
test
sbb
cmp
sub
je
mov
sbb
dec
and
jl
xor
shll
xor
sub
ret
sahf
dec
push
push
test
jecxz
sbb
xor
adcl
jb
adc
push
in
loopne
sbb
sahf
daa
adc
inc
test
inc
clc
add
inc
aaa
mov
adc
adc
adc
adc
adc
outsb
je
adc
fs
loopne
sarl
shrl
sub
and
push
orb
adc
in
nop
add
fs
cltd
pusha
mov
adc
hlt
lock
xor
enter
movsb
mov
int3
sbb
push
loop
inc
mov
xor
push
cmp
clc
lock
sbb
or
sbb
push
cmp
mov
insb
adc
xchg
add
in
lahf
push
add
sub
jl
xor
adcl
xor
mov
js
sbb
sbb
scas
mov
push
jl
mov
insb
stos
loopne
push
into
into
or
pop
push
nop
xchg
or
in
mov
fwait
mov
add
cli
pop
adc
cmp
sub
pusha
fstps
pushf
mov
loop
les
push
nop
mov
mov
mov
cs
call
push
int3
add
rclb
leave
and
sbb
xor
xchg
or
loopne
dec
leave
and
push
lock
sbbb
clc
cld
pushf
cmp
push
addr16
xchg
or
or
pop
and
rorb
xorb
pop
rcrb
add
sbb
out
mov
jno
push
fucom
cmp
js
aam
adc
pop
or
pop
xor
push
push
aas
movsb
outsb
mov
pop
push
rcl
nop
inc
pushf
push
js
outsl
pop
mov
push
inc
xor
xchg
cmpsb
adc
xchg
inc
mov
xor
xor
std
testb
nop
sbb
push
xchg
movsl
dec
stos
mov
sbb
pusha
pop
out
test
inc
ss
mov
and
sbb
test
push
pop
jne
add
ficoml
mov
inc
cmpl
push
add
les
sbb
sarb
inc
test
lods
inc
mov
mov
inc
inc
and
jl
push
sub
mov
sub
or
push
jl
or
arpl
cld
loop
out
test
inc
jg
sbb
fildll
or
dec
inc
cmp
and
xchg
ja
inc
jns
jno
jbe
scas
aas
xor
cltd
loope
adcl
sub
jecxz
mov
lret
faddp
or
mov
cmc
adc
test
fstps
scas
mov
in
fsubl
jmp
xor
mov
push
add
mov
sahf
and
and
fs
xor
push
dec
jno
mov
sbb
pusha
mov
push
cld
scas
in
mov
jbe
push
push
mov
xor
or
and
cmp
nop
ud1
jmp
addb
and
repnz
ja
icebp
jns
fwait
inc
sbb
inc
dec
sbb
mov
mov
sub
lods
pop
rcr
movsbl
les
mov
or
dec
jg
pop
push
pop
mov
clc
loopne
jle
push
push
adc
push
push
mov
mov
cmp
xor
mov
push
inc
popa
dec
jo
push
in
nop
and
or
push
inc
xor
jg
add
xchg
dec
cmc
pop
add
sub
push
popf
fmull
mov
jmp
leave
jbe
cmpsl
jl
cld
insb
das
push
dec
mov
aam
xchg
ret
xchg
movsb
stc
pop
movsb
fucomi
sub
jo
call
or
or
push
lods
and
cmpsl
xchg
xchg
dec
or
test
movsb
jnp
mov
ds
setne
call
repnz
in
shlb
nop
stos
ret
or
test
mov
sbb
sbb
sub
loopne
push
jb
cmp
das
fiaddl
sub
dec
and
repnz
pop
imulb
test
push
sub
dec
xor
pop
inc
repz
daa
push
jmp
test
push
push
and
jne
and
adc
inc
fwait
outsl
dec
push
mov
pop
dec
shlb
push
inc
jbe
in
std
add
or
scas
xchg
push
dec
xchg
push
xchg
clc
mov
je
cmp
incl
cmp
je
cmp
je
cmpb
insb
push
rcrb
int
ret
sbb
pop
test
je
pop
cmp
sub
xor
xchg
pop
in
jp
xor
and
and
add
and
and
or
and
mov
mov
xor
pop
xor
in
imul
mov
xchg
ret
mov
xlat
scas
addl
jmp
sti
sti
jae
leave
mov
push
mov
cmp
je
or
pushl
xor
cmp
jl
xor
push
cmp
mov
cmpb
jne
cmpb
cli
jg
decb
je
cmp
cmovae
sarb
jle
jne
push
pop
je
fists
pop
push
xchg
pop
fnstenv
test
and
mov
decb
or
jl
push
mov
cmp
mov
imul
jg
pop
cmpsb
pop
inc
mov
mov
dec
cmp
jle
lcall
mov
adc
jmp
in
cmp
pop
jl
cmp
jg
cmp
ret
pusha
ret
adc
or
push
jbe
mov
idiv
adc
icebp
mov
ret
hlt
into
push
dec
mov
cmp
xchg
popf
cld
ret
lcall
jo
sahf
out
pop
aas
pop
maxps
push
hlt
mov
arpl
fstpl
std
add
sub
xchg
lea
cltd
fdivp
mov
push
outsl
mov
cltd
arpl
shll
dec
jne
aam
xchg
add
mov
mov
and
inc
pushf
and
hlt
cmp
push
cmp
add
mov
cmp
jg
or
jne
inc
mov
dec
lea
je,pn
js
das
and
pop
mov
sub
push
sbb
adc
mov
mov
or
rclb
sbb
inc
imul
loopne
js
adc
out
test
cmp
cmp
pop
cld
scas
imul
cmp
je
mov
testl
adc
mov
mov
jae
mov
popa
mov
push
jg
lods
subb
enter
sarb
push
gs
sub
sub
push
or
popf
mov
xor
or
push
mov
mov
adc
mov
pop
jecxz
xor
xor
jp
cmpsb
lods
scas
lock
adc
rcrl
push
or
mov
fsubl
imul
in
shlb
push
sub
pop
mov
inc
lods
and
xor
add
fyl2xp1
lods
inc
add
sbb
mov
jne
sbbb
and
inc
aam
dec
sbb
mov
inc
sbb
sbb
and
imul
aad
add
sbb
xlat
mov
dec
pop
andb
cs
fs
xchg
arpl
movups
jne
pop
in
push
rorb
lahf
pop
in
jge
pushf
mov
mov
inc
int
and
mov
nop
mov
testl
test
rolb
xchg
stos
cmp
push
and
dec
sbb
les
daa
xor
leave
jge
mov
lahf
movsb
lods
push
mov
ficoms
lahf
ss
loopne
push
xor
dec
mov
insb
es
adc
rcll
jne
test
pushf
jae
fisubs
lcall
dec
test
or
push
dec
pop
cmp
mov
dec
popf
add
lods
and
xor
xlat
shl
inc
mov
shl
adc
loop
sbb
pop
outsl
aas
sub
push
push
mov
dec
push
mov
scas
sbb
inc
inc
pushl
mov
test
or
cmc
pop
bound
nop
adcl
orb
fmull
add
adc
jne
dec
fsubr
jne
push
sub
xor
pusha
repz
dec
std
sti
inc
or
ret
je
or
je
jle
vmovmskps
or
sbb
insb
jmp
sbb
adc
js
ss
adcb
and
jb
aaa
xchg
outsb
or
sbb
ss
xchg
xchg
xchg
sti
and
je
mov
sub
idivl
jmp
das
add
adc
and
test
in
and
fcoml
cmp
daa
hlt
xor
jb
cmp
je
lods
sbb
push
sti
add
mov
outsl
outsl
mov
js
jbe
push
shr
push
mov
add
ja
je
lea
adc
movzbl
jno
jmp
xor
ss
push
or
push
dec
cmp
adc
mov
sub
or
and
xchg
inc
aas
inc
daa
lcall
ret
mov
fnstsw
lcall
mov
out
add
add
add
or
add
or
inc
sahf
mov
pusha
aaa
dec
dec
hlt
mov
push
sbb
add
jb
les
xor
sub
loop
ljmp
das
ss
mov
or
sub
mov
inc
add
adc
push
cmp
cmp
xchg
and
cmp
int3
leave
movsb
cwtl
repnz
push
jle
popa
adc
pushl
inc
cld
pop
inc
fldt
cmp
dec
and
or
and
jl
add
adc
mov
imul
pop
pop
jmp
mov
lret
mov
hlt
or
jmp
pop
in
ljmp
mov
fs
jo
cmpl
jne
push
push
stc
add
mov
push
pop
add
insb
inc
das
jns
jg
jbe
mov
cmp
jle
outsl
adcb
arpl
and
add
jecxz
gs
and
inc
aaa
and
push
leave
inc
cmp
sub
add
stos
push
pop
add
push
push
fwait
cmp
cmp
cmp
xor
xlat
testb
add
call
adc
pop
rorb
pop
mov
pushl
mov
pop
pop
pop
pop
xor
xor
cmpsb
and
std
insb
sub
and
ret
addl
enter
fistps
push
and
lea
hlt
add
test
jl
xor
push
cld
test
push
mov
push
pop
and
pop
mov
mov
pop
push
push
push
push
push
out
jnp
adc
inc
aas
add
push
push
xor
xor
adc
pop
les
push
or
dec
add
enter
arpl
and
int
in
sbb
dec
adc
xchg
add
push
nop
mov
ret
inc
push
lock
stos
cmp
jbe
lahf
sbb
mov
push
pop
cmp
roll
jmp
mov
cmp
push
je
jle
mov
mov
cmc
and
insl
dec
adc
mov
lea
jbe
testb
out
cli
mov
mov
pop
mov
add
in
xor
cs
jnp
jge
sub
push
out
jmp
jbe
or
clc
shll
cmc
and
out
movsl
sete
rorb
jns
pop
cmp
xor
prefetcht0
into
pop
je
mov
fmul
and
mov
out
je
pop
pop
xchg
xchg
sbb
pop
loope
jns,pn
and
push
mov
je
imul
and
inc
mov
jns
cmp
ja
add
fdivrl
ds
gs
adc
add
mov
pop
lock
add
dec
cld
sbb
push
push
push
fwait
mov
add
rol
xchg
adc
aam
inc
sahf
andb
push
inc
iret
js
mov
push
mov
sub
hlt
jmp
sub
scas
outsl
xor
inc
fidivs
dec
cmp
mov
inc
test
sub
aam
ljmp
xchg
fdivs
addr16
push
nop
stos
fs
or
xor
mov
adc
adc
cwtl
or
mov
je
mov
ret
scas
adc
les
pop
and
and
clc
cmpsb
xchg
sbbl
xor
xchg
inc
and
xchg
inc
scas
xchg
cmp
dec
scas
xchg
inc
scas
xor
cmp
scas
xchg
inc
jo
sbb
sbb
dec
xchg
sbbl
mov
testb
popa
sub
push
aam
add
mov
push
out
pop
ljmp
js
gs
repnz
adcl
push
mov
les
lods
call
xor
pusha
pop
enter
hlt
je
test
fs
dec
ds
dec
inc
imul
jnp
popl
cmpl
sbb
sti
pop
jns
pushl
xchg
inc
sahf
cmp
lret
incl
imul
xchg
sbb
mov
stc
sbb
jmp
cmc
je
pop
xor
lock
sbb
cmpl
push
push
scas
pushf
or
leave
insb
insb
and
xor
adc
mov
cmp
lar
mov
pop
je
pop
and
or
je
xor
and
add
xor
in
mov
enter
fwait
aas
adc
cmpsb
sbb
test
pop
pusha
enter
je
sub
add
jne
push
mov
cmpsb
adc
ds
push
inc
insl
jg
lds
xor
lods
adc
push
mov
adc
xor
bound
out
std
cld
jle
inc
push
push
aaa
sub
pop
hlt
sbb
fidivs
and
sub
jl
movsb
aas
xor
add
mov
jae
or
adc
mov
sbb
or
stos
cmpsl
dec
cmpb
and
clc
scas
mov
je
jne
aam
push
mov
push
and
insb
fstps
xchg
dec
sti
shlb
pop
sahf
cld
movsl
adc
jl
test
xor
push
cmp
xor
sub
pop
push
lret
push
imul
jmp
inc
repz
push
cmp
sbb
das
and
cmc
loop
test
test
int
push
mov
jb
push
push
sub
xchg
push
je
xor
push
xchg
xor
cmp
out
fldt
or
and
andl
or
or
mov
or
test
xor
push
ret
gs
mov
sbb
sbb
cli
fiadds
negl
or
roll
prefetch
adc
pop
push
test
je
call
and
xchg
add
xor
je
pop
das
popf
mov
fsubl
sbb
enter
popf
jmp
movswl
je
dec
cmp
shll
lcall
cltd
ds
fwait
or
mov
push
add
add
jo
fstl
cld
inc
cltd
push
mov
inc
lahf
dec
xor
pop
pop
dec
dec
and
cmc
outsl
aas
mov
int3
cmp
jbe
lea
push
push
movsl
pop
sub
sbb
ds
rolb
paddw
imul
adc
repnz
fiaddl
and
std
mov
repz
mov
push
rclb
sbb
add
or
xchg
in
jmp
dec
jle
mov
push
shr
mov
neg
lea
decl
mov
add
inc
inc
dec
jne
pop
jmp
and
test
pop
je
xchg
or
inc
std
es
enter
shr
add
push
lock
enter
call
sub
sbb
push
or
add
lea
sub
sahf
notl
sbb
jne
mov
mov
xor
push
inc
add
cmc
and
mov
and
xchg
sarb
cmp
out
sbb
mov
addb
ret
loopne
xor
lock
mov
ficoml
das
movsb
pop
mov
sub
repnz
mov
mov
mov
sar
mov
pop
jb
ror
or
movsb
mov
imul
push
clc
and
call
out
daa
in
fadds
jle
or
jge
jge
or
sar
xchg
aas
pop
sarb
pop
ss
imul
adc
sub
cld
xlat
lods
es
push
cmp
jl
sbb
add
cwtl
sbbl
es
int3
pop
mov
loope
push
push
sti
xchg
cmpb
arpl
mov
add
out
or
xor
cmp
mov
push
and
int3
sub
call
dec
lcall
dec
push
loopne
jecxz
pop
sub
inc
jns
or
jne
icebp
out
pop
stos
adc
push
cmp
loope
outsb
mov
adc
js
inc
dec
push
adc
sbb
adc
test
repnz
rclb
xchg
jge
or
jecxz
jle
mov
aam
xchg
mov
cmpsb
jl
push
push
mov
push
pop
mov
xchg
pop
fs
cmp
pop
lods
cmp
jo
out
dec
jne
adcb
outsb
mov
loope
inc
jmp
outsl
in
or
xor
or
dec
pusha
xor
pop
add
cmp
mov
aas
hlt
mov
add
add
adcb
mov
stos
push
jnp
cmp
and
push
rcll
add
repnz
mov
out
loopne
and
dec
insb
fmul
mov
je
add
enter
mov
inc
push
push
or
jo
add
fmull
push
cwtl
mov
mov
shrb
xchg
jle
mov
pop
pusha
mov
icebp
pop
sbb
mov
fwait
sbb
aad
outsl
sub
sbb
clc
mov
pop
and
mov
sbb
pop
pop
xchg
test
jbe
mov
and
jmp
movsb
sbb
adc
daa
cmp
shlb
popa
push
dec
lea
and
imul
pop
jg
insb
mov
flds
xor
or
pop
shl
jae
add
inc
fsubrl
popa
mov
insb
mov
pop
movsb
adc
xor
inc
sbb
add
add
or
stos
xor
cltd
loopne
test
add
pop
mov
or
test
and
cmp
das
fwait
pop
mov
inc
cmp
inc
pop
push
mov
xchg
or
mov
mov
or
add
push
push
movsl
cmpsl
loope
cld
push
and
xor
jg
xor
loopne
mov
cmp
test
fcmovbe
mull
pop
test
sub
shrb
xchg
cwtl
or
push
and
out
clc
hlt
and
call
or
popf
cs
pop
jb
testb
jge
mov
sbb
dec
mov
lods
sbb
push
fcmovu
xchg
xchg
inc
ficoms
add
adc
fs
aad
sti
int
mov
xor
pop
sub
push
nop
test
mov
lds
mov
or
shlb
lds
add
fwait
sbb
mov
push
sbb
and
mov
ret
xchg
dec
inc
inc
cmp
jb
jge
mov
adc
jb
add
test
data16
in
das
push
inc
push
shl
mov
iret
xor
fidivs
shll
ret
jne
stos
cwtl
cmp
test
aam
push
jmp
and
and
pop
xlat
cld
in
and
mov
pop
or
rcl
cli
jge
or
jmp
and
loopne
and
repnz
in
nop
bound
lcall
popa
push
int
add
dec
push
insl
mov
and
call
and
mov
add
aaa
outsb
jle
cmp
jle
mov
add
sbb
lods
fildll
hlt
test
iret
xchg
aas
cmp
je
int
cwtl
aaa
insb
imul
adc
je
imul
or
mov
lcall
icebp
leave
xor
push
clc
mov
pop
jb
andb
or
push
cmp
aaa
sub
and
out
sub
loopne
cli
adc
sbb
int
hlt
jl
mov
out
je
je
decl
pop
sub
in
cmp
idivl
jl
or
add
jge
dec
cmp
add
test
andb
aaa
sbb
pop
cmpb
leave
and
mov
dec
mov
bound
cmpsb
nop
cltd
hlt
js
ss
mov
xor
nop
add
shlb
pusha
jp,pn
xchg
ficomps
cli
jnp
xorb
mov
jge
jbe
xchg
aaa
bnd
aam
sbb
xor
pop
fmuls
mov
xchg
add
cwtl
sub
jle
cli
pop
loop
and
mov
std
lock
testb
daa
add
add
fmul
and
or
into
pop
and
xor
push
add
pop
pop
inc
hlt
jge
adc
or
or
xor
add
add
mov
mov
ret
jle
add
inc
adc
inc
js
int3
pop
add
sbb
xchg
fmuls
loop
sbb
outsl
out
mov
mov
cmp
add
fisttps
inc
push
daa
test
and
xchg
nop
push
stos
jno
stos
xchg
stc
xor
and
fwait
mov
lods
add
frstor
roll
in
mov
pop
out
jnp
cmp
int
hlt
mov
repz
mov
dec
adc
popf
cmp
mov
ja
add
ret
xchg
and
adc
xor
aaa
add
push
ret
jle
or
testl
je
or
je
movsb
dec
outsb
loop
pop
out
movl
cmp
jl
add
xlat
jmp
lock
cltd
dec
js
pusha
enter
push
xchg
loope
lock
pop
lar
lods
test
in
in
mov
cld
cmp
sbb
push
sbb
cmp
notl
cmp
push
dec
sbb
pop
mov
mov
add
test
inc
mov
inc
stos
mov
or
dec
icebp
mov
xchg
fbstp
sahf
lea
out
pop
pop
push
push
pop
add
dec
pop
jne
dec
cmp
inc
dec
sbb
into
mov
pop
jnp
sbb
jmp
xchg
jle
xchg
pop
jge
add
cmpb
jne
cmp
fdivrp
lds
sub
mov
movb
and
dec
sub
cmp
jge
cmp
mov
jmp
push
fiadds
jg
jecxz
or
loope
pusha
add
pop
or
or
and
les
jge
and
js
call
inc
fcmovnb
jns
push
cltd
icebp
or
mov
sub
sbb
test
inc
pop
jbe
sub
cmpl
and
dec
sub
lods
aam
daa
push
fsubrs
sub
clc
dec
inc
pop
push
and
or
xchg
jmp
outsl
fdivl
push
ss
and
rcll
push
push
andl
jmp
cmp
xlat
pop
xchg
sbb
or
and
add
adc
pop
jne
in
test
clc
ds
mov
push
xchg
jge
or
cwtl
or
pop
int3
je
stc
inc
and
push
rorb
add
push
add
fld
adcb
sub
push
rcll
scas
loopne
outsl
into
mov
add
pop
and
push
ret
mov
xor
xor
add
push
pop
fiadds
mov
mov
jg
and
push
push
loopne
and
jmp
fnsave
pop
jle
movb
inc
std
dec
mov
lds
out
sbb
jne
mov
cmpsb
in
icebp
fldl
xorl
lahf
data16
xor
pop
mov
xor
cmp
je
xor
sarb
push
inc
add
fucomp
push
loopne
or
or
cmc
xchg
fidivrl
jle
ja
daa
stos
fnstsw
add
cmp
into
stos
mov
cld
xchg
fsts
inc
and
jns
fs
je
and
push
sbb
jne
pop
popf
cld
sbb
xor
pop
push
fdivrp
mov
jno
sub
add
inc
mov
pop
test
movl
lret
jmp
and
cmp
push
lea
push
and
mov
ficomps
mov
test
and
xor
mov
aad
pop
jb
mov
push
repnz
dec
test
push
inc
mov
sub
add
jecxz
test
sbb
insb
push
mov
lock
mov
add
sti
mov
cmp
dec
sarl
push
mov
cmp
loopne
pop
push
pusha
jne
lahf
mov
xor
fs
cltd
cs
xor
adc
pop
stos
and
add
jle
add
test
push
sub
rclb
cmpl
sbb
fcomps
enter
mov
or
adc
cmpsb
or
inc
add
divl
mov
xchg
pushf
inc
insw
je
cld
xor
bound
adc
sbb
sub
mov
pop
xor
xchg
cld
dec
rolb
jmp
mov
loopne
popa
ret
adc
cld
jecxz,pt
pop
enter
cmpb
je
mov
sbb
xlat
icebp
mov
or
in
add
add
inc
pop
mov
fidivs
adc
jbe
dec
cmp
or
push
jmp
icebp
fstpt
icebp
orl
mov
sbb
lock
lock
push
inc
inc
xor
cmp
and
insb
push
imul
inc
mov
lea
inc
insl
rol
add
das
pop
daa
cmpsb
or
add
xorl
imul
jecxz
push
adc
decl
subl
cmp
push
mov
push
ss
adc
clc
les
leave
adc
pop
lock
mov
mov
test
sbb
dec
fwait
imul
pop
or
lods
jne
js
push
cmpl
and
in
sbb
push
push
jmp
pop
mov
lea
cwtl
and
loopne
mov
push
mov
and
sbb
pusha
idivb
int
mov
sbb
mov
adc
jle
push
dec
mov
or
jle,pn
and
mov
pop
mov
jmp
sbb
pop
fldt
ret
push
in
inc
imul
fimull
pop
loop
jno
scas
dec
push
jnp
andl
bound
mov
ss
lods
int3
leave
and
mov
jl
aas
push
sbb
jl
mov
fisubl
pop
pop
jb
sbb
or
cmp
pop
cmp
add
mov
mov
adc
lods
add
in
enter
inc
inc
cs
cltd
cld
sahf
adc
test
cmpsb
cmp
inc
xchg
cwtl
popa
fs
inc
mov
cmp
sub
adc
mov
enter
inc
push
mov
dec
xor
sbb
adc
enter
lea
mov
mov
int3
enter
add
daa
stc
push
pop
add
push
add
push
dec
lcall
sbb
sahf
das
nop
and
push
das
nop
push
or
push
jo
inc
push
test
stc
add
mov
test
popa
push
rcrb
push
lds
push
pop
sarl
es
lds
lods
adc
xorb
inc
and
push
stc
dec
mov
or
aaa
push
clc
push
push
xchg
cmp
mov
push
sbb
je
sbb
pop
and
leave
xchg
pushf
pop
les
pop
xor
test
scas
mov
xor
and
pop
sub
or
xor
cmp
pop
xor
pop
push
pusha
pop
xor
cmp
and
nop
pop
test
clc
addb
inc
jnp
stc
ret
repz
pop
lea
inc
stos
xchg
or
or
stos
xor
mov
xchg
push
pop
pop
enter
pop
dec
nop
out
mov
js
or
mov
aam
xor
in
xchg
xor
and
cmp
inc
add
sub
iret
or
and
xor
sahf
pop
xor
inc
lahf
xor
in
mov
out
das
enter
int3
ftst
enter
xor
push
test
in
pop
in
cs
mov
xlat
pop
test
test
mov
pop
daa
fnstcw
push
push
add
rorb
pusha
push
jbe
sbb
insl
xchg
mov
adc
mov
add
inc
push
sub
sti
and
push
dec
adc
pop
daa
mov
xchg
mov
inc
negb
sbbb
fisubrs
leave
enter
faddl
pop
jb
pop
and
cs
push
jo
pop
enter
addb
cli
sub
mov
mov
mov
loopne
stc
imul
and
repz
inc
push
aam
pop
enter
mov
pop
enter
mov
and
mov
and
test
pop
pop
and
iret
or
mov
mov
cmpsb
aam
cmp
and
arpl
mov
or
and
or
push
fldenv
pop
and
xor
test
cs
and
and
mov
hlt
movsl
cmp
jb
and
cmp
sahf
pop
xor
fs
sarb
das
fs
sub
xor
in
test
sbb
enter
leave
push
inc
mov
mov
push
test
enter
stos
sbb
or
dec
or
les
in
adc
xchg
mov
fs
addl
or
call
lea
sahf
xor
push
inc
sti
pop
mov
stos
add
stos
jne
dec
cmp
jbe
subb
pop
mov
scas
arpl
rolb
mov
call
push
stos
add
xor
xchg
mov
dec
jb
pop
addb
xchg
pop
leave
adcl
insb
cmp
in
sub
cmp
push
imul
aam
movsb
mov
push
push
xchg
push
dec
fs
xchg
mov
lods
int3
cwtl
mov
test
pusha
adcl
and
push
gs
sub
lock
cmp
push
je
nop
imul
pop
hlt
and
clc
insl
jno
jb
push
cld
sbb
push
xor
test
int3
out
mov
insl
jne
jle
pop
jo
push
negb
subl
inc
cs
xor
and
pop
xor
push
pop
inc
cs
mov
pusha
jne
pop
enter
pop
nop
enter
mov
out
mov
lock
test
nop
cld
data16
xor
nop
out
dec
adc
cmp
addr16
sbb
or
mov
pusha
pop
xor
ss
inc
sahf
adc
mov
fs
ds
xchg
adc
push
mov
mov
mov
nop
out
ljmp
sbb
mov
in
dec
sub
in
sub
add
mov
or
or
daa
and
mov
dec
shrb
add
adc
adc
insb
mov
rolb
xor
test
xchg
or
sub
rolb
jmp
mov
fists
test
out
push
push
jb
sbb
fadd
mov
pop
in
fmuls
pop
cmp
insb
mov
inc
mov
sub
cmp
and
adc
loopne
mov
test
enter
ffree
adc
sub
das
fwait
add
xchg
push
lea
xor
and
xor
data16
cwtl
js
mov
inc
cld
sbb
dec
sub
jmp
xor
add
mov
inc
sbb
cmp
and
xlat
cmp
les
mov
adc
mov
pop
mull
push
cmpl
out
xor
cmp
pop
xchg
mov
sub
pop
nop
sbb
adc
push
ficoms
hlt
icebp
cld
sub
sub
jge
testl
insb
xor
or
sub
popf
cwtl
sti
mov
dec
enter
rorl
aaa
in
and
sbb
and
push
mov
mov
outsl
or
test
inc
dec
jb
test
push
sbb
enter
adc
or
mov
addb
sub
mov
in
insl
jmp
push
mov
inc
dec
sbb
cmp
mov
mov
cli
mov
xlat
cltd
lea
clc
test
je
jmp
jae
push
mov
dec
roll
cmp
andl
adcb
es
push
dec
sub
xchg
jl
mov
adc
add
mov
fcoml
push
sbb
sarl
cli
or
cmpsl
mov
push
mov
and
pop
mov
or
fstl
add
popa
ficoms
and
add
add
cmp
jbe
inc
cmpb
sbb
or
jle
pop
inc
adc
jmp
loopne
pop
and
inc
fcomps
or
insl
jg
cmpsl
push
jg
fistpll
pop
jne
jmp
lcall
imul
mov
or
jne
push
jl
mov
sti
mov
je
je
push
add
shr
sti
push
jmp
mov
cmp
outsl
je
ja
popf
mov
or
mov
es
enter
loop
inc
xchg
ds
ja
ret
and
xchg
mov
fistl
cmpsb
and
add
sub
pop
sbb
dec
rcr
push
sbb
ret
je
imul
xor
inc
inc
mov
dec
push
decb
push
sti
pop
mov
jle
mov
jg
push
movb
ss
cmp
inc
das
sti
cmp
cmp
mov
jl
cwtl
xor
int3
mov
add
loop
add
add
cld
cld
jnp
sbb
jg
jg
xchg
in
test
rolb
sub
xchg
and
and
push
jmp
mov
add
subps
push
movsl
enter
pop
sub
or
or
lea
pop
or
push
add
jecxz
mov
pop
into
je
scas
orl
cmp
push
shll
out
lock
and
xor
xor
pop
cmp
push
cltd
cwtl
sti
mov
sbb
adc
push
push
or
repz
push
xchg
ret
adc
add
sahf
ret
adc
cmp
pop
ljmp
push
movsb
pop
shll
mov
loopne
adc
sbb
xor
mov
js
jp
push
inc
pusha
and
lcall
cmpb
xchg
fsubs
and
or
xchg
push
lcall
jge
or
out
fistl
fistpl
cmp
and
test
adc
fisubl
xchg
jo
adc
lea
push
jge
add
dec
mov
loope
and
jo
xchg
adcb
or
mov
add
shlb
xor
nop
or
adc
cltd
pop
adc
and
fnstenv
int3
push
imul
orb
xchg
sbb
push
add
add
push
push
aaa
cwtl
and
or
out
fmull
fwait
jecxz
loop
popf
sbb
mov
sbb
dec
stc
hlt
sbb
jno
push
or
cmp
inc
mov
leave
push
loope
mov
test
cli
pusha
xchg
cli
sub
mov
cwtl
mov
loop
pop
sti
jb
filds
mov
xchg
sub
or
sbb
cli
and
repnz
adc
pop
dec
adc
push
mov
fsub
movsl
ret
test
sub
inc
leave
pop
cld
inc
lea
insb
dec
mov
data16
push
ret
popa
xchg
or
mov
enter
lahf
or
add
mov
jb
inc
ficoml
jb
pusha
loope
or
loope
hlt
sub
jl
lahf
movsb
lods
cli
test
and
xor
es
sti
sub
and
xor
push
cmp
mov
pop
push
dec
cmp
jno
mov
cli
aaa
nop
daa
cmp
inc
or
lock
mov
sbb
pop
loop
pop
xchg
xchg
push
xor
movsl
test
adc
mov
adc
scas
cmp
and
dec
pop
loope
add
xor
dec
bnd
sahf
sbb
cmp
insb
adc
orps
mov
pop
mov
mov
jle
add
hlt
lea
std
movsl
rolb
pop
mov
jae
and
shll
outsb
les
lahf
nop
xchg
pop
add
push
inc
jmp
mov
add
xchg
enter
xor
sub
roll
movsb
scas
sbb
pop
mov
cmp
add
and
lock
jo
in
mov
add
dec
clc
dec
andl
cli
sub
jne
data16
sbb
pop
outsl
push
xchg
gs
add
cmp
mov
mov
ret
iret
rclb
stc
push
add
add
daa
sbb
fisubrs
push
xor
jo
ret
dec
ja
aad
pop
pop
xor
or
cltd
inc
inc
jle
mov
mov
adc
mov
aad
imul
add
push
sbb
fcmovnbe
ret
sarl
in
and
jo
jo
clc
psubw
sarb
popa
dec
pop
mov
enter
sub
mulb
fnstenv
clc
jae
int3
push
push
or
adc
insb
dec
push
push
adc
push
mov
push
mov
test
push
enter
xchg
dec
xor
sub
movsl
cmp
cmp
push
js
dec
pop
sbb
adc
in
mov
ret
cs
and
xor
addr16
loop
cmp
mov
test
cmpsb
nop
adc
sbb
incl
ljmp
addr16
push
or
test
sbb
push
popf
fildl
int3
sbb
rcr
push
mov
ret
daa
scas
sub
or
addr16
sbb
inc
bound
fisubs
adc
jb
inc
add
mov
out
jno
stc
je
xor
or
cmp
mov
cltd
mov
loopne
movsl
pop
sub
dec
nop
pushf
mov
sti
push
les
xor
xchg
insb
movsb
mov
xor
aaa
and
addr16
inc
stos
int3
nop
pusha
je
xor
mov
or
addr16
fs
xchg
inc
or
sub
insb
movsb
dec
pop
enter
sub
xchg
in
fs
rcrl
inc
add
mov
testb
sbb
xchg
sbb
cmc
push
nop
add
pop
cmpsl
sti
add
cmp
sub
fwait
pop
and
iret
test
stos
dec
fcoml
cmp
jle
cld
scas
pop
loope
inc
nop
adc
push
push
sbb
jae
insb
in
nop
sbb
mov
dec
popa
and
ficoms
nop
sub
dec
xor
adc
test
inc
lods
sbb
movlps
add
sub
xor
mov
popa
call
add
outsb
mov
popa
add
sldt
add
iret
and
cmc
bound
int3
popa
mov
in
push
iret
mov
ja
and
lds
jecxz
dec
rolb
sub
rolb
or
in
sbb
xor
ja
jecxz
repz
cli
and
cmp
cmp
push
push
std
fnstenv
stos
xchg
testl
sub
clc
pusha
rorb
repnz
leave
adc
les
add
sbb
je
push
lahf
inc
aam
and
adc
lcall
inc
rorl
cmp
push
aam
push
xchg
push
jbe
repz
jmp
jmp
push
adc
push
fisttpll
idivl
add
sbb
test
fsubp
and
and
adc
and
jle
sahf
mov
xor
jecxz
icebp
xor
mov
mov
movsbl
loopne
lea
mov
fadds
dec
stos
mov
es
adcb
mul
in
pinsrw
daa
and
jo
or
bound
push
lret
and
lcall
mov
rclb
adc
sti
jne
aaa
inc
repnz
into
imul
fisttpll
mov
add
add
mov
push
jne
jp
jle
ret
xchg
rcrl
sub
orb
add
ja
ficoml
fs
sti
mov
into
pusha
leave
jmp
lcall
push
pop
insb
or
mov
fistl
xor
inc
pop
jb
cld
inc
orb
das
in
mov
pop
fcomps
xchg
notb
jnp
pushf
cmp
aas
pop
or
ja
pusha
out
nop
sub
fdivs
sub
cmpsl
adc
idivl
sub
cmpl
je,pt
push
das
cwtl
cli
popa
and
adc
sub
add
shll
daa
enter
pop
fwait
add
mov
sbb
testl
and
xchg
xchg
add
cld
dec
pushf
xor
xchg
dec
lea
adc
or
call
mov
bound
je
jge
or
inc
or
rolb
das
mov
mov
xchg
push
cwtl
inc
stos
jmp
push
shlb
sub
push
mov
sbb
sub
loope
inc
bound
xlat
mov
sub
negl
cmc
or
cmc
fwait
shlb
ret
arpl
fdivrs
push
xorl
sbb
shl
outsb
or
into
cmp
cmp
addr16
push
rclb
pop
and
inc
mov
sbb
popa
out
xor
outsl
ret
jne
fsubl
or
and
xchg
out
or
pop
nop
inc
mov
push
test
andl
imul
inc
sbb
and
add
xchg
inc
mov
loope
mov
jae
je
loop
xor
push
cmp
sub
rcrb
loopne
mov
push
sbb
xchg
cltd
xor
mov
jmp
adc
les
gs
fisttpl
add
test
sbb
rorb
nop
arpl
adcl
in
push
insb
xchg
fld
and
add
inc
test
xor
adc
das
add
add
sarl
sbbl
mov
mov
and
push
shlb
dec
sarl
enter
jecxz
daa
sbbl
shlb
lods
add
in
mov
testb
js
xor
jl
and
out
mov
push
push
mov
or
pop
iret
xchg
xchg
pop
sub
or
push
mov
mov
push
sbb
or
add
add
mov
orl
inc
fisubl
outsb
repnz
rol
mov
pop
dec
xchg
orl
sbb
sbb
mov
fisttpl
add
sub
and
movsl
lea
mov
je
dec
sub
gs
mov
xor
adc
sbb
and
adc
sbb
stos
dec
fcoms
mov
les
mov
pop
ret
enter
add
and
inc
fldl
sub
sbb
dec
jg
inc
imul
dec
pop
pop
adc
mov
rcrl
pop
xor
add
and
mov
out
je
push
sub
inc
loope
sbbl
cmpsb
mov
push
jb
test
mov
mov
inc
dec
jns
and
or
xchg
or
sbb
in
enter
sbb
rolb
xchg
pop
jg
in
push
xchg
imul
push
popa
popa
push
xor
mov
sub
pop
pop
leave
xchg
sbb
pop
push
insl
adc
in
rclb
jae
push
adc
jns
pop
mov
lret
dec
push
xor
xor
fs
push
inc
jo
inc
pop
shlb
mov
xchg
daa
xor
icebp
dec
pop
sbb
and
push
pusha
aas
mov
and
jp
cmp
cmp
inc
push
in
jle
jns
push
mov
push
jb
fcoms
rolb
jo
fnsave
inc
leave
pop
lcall
cmp
adc
test
or
jge
mov
xchg
mov
aaa
aad
les
lea
or
or
pop
mov
or
je
mov
faddl
shrl
pushf
xor
mov
shll
inc
mov
mov
and
inc
or
dec
push
push
or
and
cld
dec
sbb
shll
jns
dec
sbb
fcmove
add
dec
xor
mov
arpl
mov
leave
cmp
fcomps
lds
mov
std
pop
xor
jns
paddusb
or
mov
js
push
dec
sbb
leave
jo
sbb
ljmp
or
jge
sbb
sbb
push
loope
dec
mov
bound
aas
add
cmp
mov
sbb
getsec
loope
cmp
lea
je
inc
push
dec
mov
stos
adc
sub
mov
inc
andps
sbb
mov
mov
and
push
push
xor
lahf
jmp
pop
fidivl
sub
mov
jle
stc
in
inc
lods
rcr
mov
pop
inc
jle
sub
push
sub
fcoms
xor
dec
push
pop
sub
and
xchg
out
pop
std
sub
xchg
push
push
dec
and
xor
ficoml
fs
push
out
fsts
sbb
push
notb
adc
sub
lret
jns
xor
lret
and
mov
cmp
xor
adc
pop
data16
daa
or
loope
sbb
or
dec
jecxz
and
and
js
cmc
cmp
icebp
scas
pop
orl
fldt
ss
jmp
mov
fadds
decb
das
sbb
pop
mov
add
adc
lods
sbb
test
xor
adc
rcll
push
sbb
sbb
popf
rorl
movsb
xchg
movsb
push
dec
cmp
lcall
mov
mov
imul
add
notb
push
mov
and
add
push
cmc
sbb
dec
cld
push
push
adc
in
xchg
xor
push
adc
cwtl
inc
sub
xorl
pop
mov
cmpsb
and
scas
pop
orl
in
mov
aaa
push
push
test
add
or
pop
add
mov
lret
add
out
or
or
aad
in
add
mov
inc
inc
clc
cmp
add
pop
jae
sub
dec
outsb
es
cltd
add
jg
insl
ja
std
bound
adc
rcr
mov
daa
stc
dec
fistpl
hlt
sbb
sti
dec
repz
add
insl
sub
iret
addb
stos
and
dec
inc
rorl
into
scas
movl
arpl
and
push
and
mov
dec
push
xlat
xor
js
testb
adcl
add
xchg
outsb
imul
or
lea
bound
fcmovb
sbb
mov
add
push
mov
jo
out
pop
cwtl
dec
add
add
or
mull
pop
xor
push
pop
in
push
add
fwait
xor
hlt
or
add
int3
push
mov
les
mov
pop
pop
lea
mov
mov
addl
lds
jno
imul
push
push
fisttps
add
popf
lock
mov
adc
mov
dec
push
or
fdivl
shrb
push
fldt
push
call
pushf
sti
dec
fsubrl
push
aaa
pop
insb
in
add
push
mov
fldl
mov
add
and
xor
mov
daa
arpl
mov
dec
and
adc
repnz
aam
js
push
add
mov
push
xor
xchg
addr16
ret
jo
cmp
into
clc
push
push
cmpsl
adc
adc
into
jns
aam
add
popf
or
xchg
xor
adc
mov
dec
and
adc
pop
cmp
pushl
addr16
mov
sarb
cmp
cmp
inc
adc
dec
rolb
dec
arpl
pop
bound
or
rol
fldcw
je
scas
push
xor
scas
or
xor
inc
shr
mov
call
loopne
mov
pop
inc
sbb
lds
mov
add
jo
jne
jl
inc
fsubrs
pop
cwtl
loopne
cwtl
cwtl
rcrb
xor
and
jge
insb
sub
jl
loope
and
aad
or
push
lea
mov
mov
or
call
add
dec
mov
pop
stc
je
jle
mov
xchg
daa
dec
je
jmp
scas
add
aad
les
repnz
push
adc
sbb
or
mov
adc
inc
cmp
pop
xor
push
add
sbb
pop
cli
xor
cltd
in
sbb
movntq
out
hlt
push
push
adc
sub
movsl
mov
jne
push
jp
push
sub
and
xlat
loopne
mov
popa
or
push
and
and
shr
cmp
cmp
xchg
sbb
mov
les
pop
test
add
es
addr16
adc
fsubrs
iret
lock
sbb
and
or
fistps
cwtl
jl
lret
adc
inc
xor
les
or
xchg
je
lret
into
mov
fwait
enter
fdivs
jbe
adc
dec
les
rol
add
xor
push
dec
fcompl
inc
loopne
imul
adc
sti
mov
aaa
inc
in
adc
push
jno
jae
jecxz
lods
jle
mov
adc
inc
jge
in
in
lea
inc
xchg
shl
jae
lods
and
insl
push
or
sub
cmp
das
loopne
div
and
sbb
xor
or
or
and
dec
sbb
int3
sbb
dec
cmp
add
fsubs
jle
push
push
mov
orl
fadds
mov
sti
pusha
out
and
jge
incl
addl
pop
mov
pop
inc
cmp
jl
andb
les
dec
add
push
add
cmp
or
and
dec
shrb
mov
xorb
inc
pop
inc
cmp
cs
pop
jl
push
pop
jnp
call
inc
push
orb
push
jecxz
mov
mov
mov
stos
mov
add
add
loope
xchg
mov
or
jmp
add
lock
mov
lods
add
out
daa
sbbl
xchg
push
adc
mov
xchg
pop
adc
aaa
rcl
in
sbb
add
mov
insl
jmp
dec
or
mov
jne
mov
jnp
mov
push
pusha
jge
xor
and
add
mov
mov
test
adc
sbb
decl
pop
es
loopne
enter
dec
xorb
adc
inc
mov
jns
cmp
loop
mov
push
xchg
sbb
jns
xchg
and
nop
sbb
cmp
pop
insb
out
mov
xor
push
ret
inc
daa
sbb
jp
mov
subl
popa
add
stos
std
or
dec
adc
pop
push
lahf
or
mov
mov
rol
orb
adc
fdivrp
add
xor
add
call
and
cmc
jge
outsb
roll
fsubs
pop
pop
ret
mov
mov
fldenv
dec
decl
mov
fsubrs
sbb
add
jmp
pop
jmp
pop
orl
mov
aaa
loopne
fsub
mov
arpl
push
adcb
sbb
daa
jo
loopne
sub
jo
xor
sbb
iret
pop
or
cmp
fwait
mov
arpl
xchg
add
xor
andl
xor
push
inc
xchg
in
jb
bound
or
mov
push
mov
lcall
jmp
int3
cld
add
jne
sbb
clc
fwait
xor
sbb
pushl
pop
mov
cmc
pop
add
inc
adc
movsb
push
mov
and
sub
fcmovnb
sbb
add
push
sbbl
aad
je
mov
inc
jmp
stos
fadd
repz
fisubs
and
lock
cmp
push
jne
sub
out
pop
pop
jp
push
dec
adc
pop
sbb
add
push
mov
and
or
cli
mov
ret
faddp
adc
push
sub
ret
push
test
pop
lods
cmp
sub
push
pop
fstps
and
insb
cltd
mov
ss
andps
mov
add
nop
xorl
mov
sbb
mov
add
or
cmp
mov
mov
in
sbb
dec
push
or
add
lds
add
sub
mov
adc
jp
loop
push
mov
inc
xchg
imul
js
jno
call
bound
push
mov
lods
enter
les
cltd
xchg
xchg
push
and
or
adc
inc
xchg
shrl
mov
pop
jbe
adcb
lock
jbe,pt
lods
cmpw
pop
jne
adc
push
or
jmp
and
andb
mov
or
clc
push
inc
or
or
sbb
aad
pop
mov
or
sbb
jne
and
sbb
fs
sahf
shlb
adc
add
fs
sahf
and
loopne
add
cmp
test
loopne
add
inc
loopne
pusha
sbb
aam
mov
and
cmp
jne
jbe
sub
xchg
fstps
dec
nop
inc
sub
xlat
icebp
mov
fldenv
mov
pushf
inc
dec
outsb
aad
fistpl
loope
sub
mov
movsb
xchg
inc
and
clc
mov
push
mov
inc
mov
fadd
and
cmp
push
out
mov
lea
cmp
sub
mov
cs
adc
nop
ljmp
mov
ljmp
rcrb
jo
test
and
add
shll
push
ds
shr
addr16
and
imul
je
ja
xchg
jl
pop
push
xor
movsl
pop
sbb
mov
loop
pop
pop
loope
sub
or
pop
xchg
hlt
cltd
inc
je
xor
or
cmp
shlb
hlt
add
mov
lahf
adc
std
mov
xchg
inc
dec
out
cmp
dec
enter
cmc
popa
sub
xchg
pop
gs
jbe
jge
in
xlat
jo
int
jns
and
mov
or
mov
cmp
cmpsl
xchg
call
add
ret
je
dec
inc
adc
sub
cwtl
fidivl
mov
xlat
or
jmp
push
jmp
aad
or
mov
pop
cwtl
xor
push
ret
adc
xchg
popa
xor
push
push
rcrb
stc
jae
inc
push
mull
sbb
insb
adc
ds
inc
push
push
insl
push
push
int
jge
adc
adc
mov
sti
xor
sbb
push
dec
jmp
fs
fwait
pop
pop
sbb
cltd
roll
loope
scas
xchg
sbb
jmp
xchg
and
lret
cld
gs
call
movb
les
lds
push
push
stos
addr16
add
cmpsb
inc
fadds
mov
pop
jl
push
adc
adc
adc
push
push
mov
icebp
jp
test
pop
or
xchg
iret
sub
inc
inc
and
add
and
or
or
add
or
bound
mov
sarb
or
pop
loopne
dec
add
in
push
movsb
add
push
xchg
sub
pusha
add
fldt
adc
and
mov
ds
jne
mov
adc
jmp
jnp
lea
jb
inc
push
cmp
cmp
push
push
xchg
enter
js
jmp
aaa
adc
xor
rol
ja
ret
aas
jbe
imul
fisttps
test
jle
and
je
movb
mov
inc
inc
mov
cmp
test
dec
jb
xchg
and
ja
lret
pop
loopne
por
sbb
and
je
lret
and
arpl
mov
sbb
sub
fndisi(8087
popf
jmp
add
sbb
pop
cmp
push
fisttpll
jmp
mov
mov
cmpb
jo
push
cmp
je
cmp
das
vmread
or
sub
insb
cmp
jne
mov
jl
xor
and
stc
pop
cli
xor
dec
sti
cld
or
jmp
imul
xchg
jo
mov
mov
mov
sbb
and
bound
sub
add
dec
xchg
mov
shlb
push
add
dec
sub
setle
push
mov
jo
rorl
lret
push
daa
sbb
in
mov
xchg
and
push
pop
dec
enter
mov
push
adc
jo
fs
dec
add
push
std
out
cmp
pop
rcll
or
outsb
xorb
cmp
xor
movsl
clc
jle
lea
mov
divl
push
pop
mov
sub
push
fnsave
push
mov
je
add
xchg
imul
add
push
and
add
ja
movl
inc
dec
xlat
jle
fsts
push
push
dec
dec
cmp
repz
gs
adc
out
push
rcrl
cmc
stos
jecxz
or
adc
push
rorl
out
jecxz
pop
cmp
inc
pop
inc
rol
adc
stos
push
add
je
and
push
jno
add
cltd
or
std
mov
jmp
pop
and
and
leave
jne
inc
rorb
sbb
cmp
and
add
add
in
outsl
dec
test
pop
or
popa
or
pop
je
cmp
test
jo
push
push
mov
test
or
or
test
dec
movsl
lods
subl
mov
cmc
inc
or
push
push
sub
movsl
jmp
arpl
push
mov
negb
xor
add
xor
cwtl
mov
movsl
add
add
ret
cmp
in
into
mov
and
adc
mov
fstpt
nop
or
cmp
and
push
testb
or
sbb
loopne
and
jns
or
xor
mov
rolb
jb
push
inc
pop
pop
and
inc
pop
lea
sub
sub
pop
cmc
add
sbb
subb
or
sarb
sbb
fs
adc
add
pusha
mov
sub
stos
adc
xor
mov
mov
enter
lock
mov
and
int3
ja
jle
cmp
and
fwait
sub
fdivrs
loope
mov
inc
fidivl
in
psllw
fld
int
fs
daa
push
dec
or
adc
rol
or
enter
imulb
or
fldenv
sti
mov
or
pusha
dec
aam
popa
mov
inc
mov
add
lock
repnz
or
cwtl
xor
pop
stos
or
push
cltd
sbb
pop
mov
cmp
in
jl
loope
rorl
notb
inc
ret
pop
jge
dec
mov
sub
out
clc
and
clc
push
sub
add
push
mov
adc
push
mov
mov
pusha
jg
mov
iret
jl
in
sbb
add
and
cmp
je
adc
and
and
xchg
jnp
sub
or
jnp
mov
pop
cmp
xor
xchg
sub
or
jnp
adc
sub
jno
leave
mov
ljmp
dec
shr
adc
xchg
shr
pop
push
jb
and
xor
pop
adc
mov
nop
sub
nop
xchg
jne
add
enter
popa
xor
sub
loop
faddp
xor
lea
xchg
les
lods
mov
outsb
popf
push
movl
ror
cmc
and
fcoms
leave
clc
cmp
je
mov
lock
xchg
add
add
stc
and
push
push
lret
or
inc
faddl
sub
data16
rcrb
insl
das
add
into
mov
jg
add
xor
or
dec
in
pop
pop
adc
cmp
lds
mov
adc
ja
sub
ja
insb
mov
in
not
lods
fs
bound
or
cmp
cmp
mov
dec
and
insb
jecxz
inc
mov
enter
and
cmp
and
add
xor
shll
mov
lea
call
xor
outsb
test
mov
jmp
rcl
ss
dec
into
sub
movsl
cltd
shl
mov
pop
push
insb
jecxz
shrb
les
lods
sar
repnz
movsl
fmul
rolb
adc
cmp
inc
lock
and
dec
in
int3
push
fadds
pop
inc
loopne
addr16
sbb
jb
stos
mov
daa
mov
jg
loope
clc
cmp
mov
sbb
jnp
roll
clc
mov
and
shl
sbb
ss
test
add
xor
stos
adc
inc
mov
mov
mov
icebp
imul
fistps
jg
mov
div
das
xor
div
pop
mov
adc
pop
push
sbb
or
inc
les
jl
xor
dec
lods
or
pusha
xchg
fildl
inc
xor
adc
aad
insb
popf
jne
cmp
jne
cltd
jbe
push
ds
xchg
mov
mov
xor
fistl
cvttps2pi
sbb
subl
push
add
jmp
imul
pop
cmp
loope
fsubl
shrb
fisttps
daa
sub
push
sbb
push
call
jecxz
idiv
loope
pushl
jb
mov
sti
add
fidivs
xor
push
dec
mov
fdivrp
fbstp
ss
pop
ja
jb
cmp
jae
push
and
daa
int
and
push
inc
inc
cmp
daa
int
shlb
sub
and
call
sbb
or
mov
sbb
pop
sub
sbb
add
adc
js
and
clc
adc
mov
adc
mov
xor
mov
adc
lret
repz
cmp
ficoms
dec
shll
push
pushf
jns
xor
mov
lret
cmp
cmp
or
sub
inc
and
divb
sub
mov
xor
sahf
xor
and
mov
push
cmp
jne
cmp
dec
push
sbb
xchg
inc
jl
or
cltd
mov
pop
fidivrl
data16
jp
int
cmpsb
std
mov
jno
popf
or
or
fisttps
shrb
rcrb
xchg
clc
lock
add
xor
add
add
xchg
roll
sbb
lea
push
xor
add
push
fs
daa
aaa
andb
jl
and
inc
mov
orl
xchg
adc
xchg
jo
sub
jns
clc
shrl
and
adc
cwtl
stc
sti
inc
add
ret
and
xor
or
adc
inc
fisubs
inc
decl
cmp
mov
xor
or
cmp
pop
xlat
pop
rcrb
push
repz
inc
sbb
cwtl
or
cmpsl
lea
mov
les
lret
lods
mov
pop
and
out
and
cmp
daa
aaa
mov
stc
add
inc
sub
adc
pop
pop
jge
andb
pusha
sub
xchg
jmp
or
outsb
in
jmp
jae
shlb
push
pop
mov
insb
xchg
sub
mov
inc
or
frstor
mov
pop
sbb
push
mov
pusha
xchg
test
imul
test
and
arpl
add
call
jge
pop
testl
push
push
loopne
cmp
adc
inc
inc
pushf
push
insl
or
sbb
int3
push
nop
mov
sti
in
xchg
mov
pop
frstor
jle
sbb
xlat
pop
fisttpl
movsb
adc
hlt
mov
rcll
push
loop
loopne
pop
shlb
mov
sub
sbb
xchg
and
dec
sbb
mov
cs
push
mov
fmull
mov
adc
inc
mov
and
add
loopne
jmp
lea
inc
out
addb
inc
pop
in
test
and
cmpsl
jmp
mov
add
aas
inc
addr16
out
dec
jecxz
xchg
cmpsl
sbb
cmp
or
mov
or
jmp
aas
inc
push
xor
adc
jmp
inc
orl
int
cmc
rol
imul
loopne
pushf
mov
inc
xor
mov
ficomps
dec
movsl
pop
cmpsb
lea
jno
jl
pusha
call
icebp
cmp
pusha
clc
inc
andl
leave
je
leave
and
adc
js
lahf
pop
dec
mov
push
push
ret
sar
ret
xor
dec
js
push
and
shll
mov
lea
xor
jb
jecxz
cwtl
jle
mov
or
jg
xchg
mov
jle
movsl
pop
mov
test
test
add
jmp
subl
int
andb
lock
push
or
jnp
clc
in
jle
loopne
pop
and
jnp
rolb
jnp
in
loopne
jnp
decb
jno
cmc
mov
lods
lret
mov
int
sbb
pop
push
mov
out
lock
and
jne
test
lea
dec
arpl
inc
add
repnz
or
sub
ds
js
jne
fisttps
sbb
leave
addb
and
test
lcall
dec
sbb
sbb
sub
xor
xor
daa
jle
add
push
out
int3
add
rcl
movl
int3
inc
sub
jo
add
bound
xchg
sahf
mov
lret
iret
mov
addb
imul
imul
loopne
test
les
fadds
outsl
inc
test
lods
inc
sub
push
das
add
sub
pop
and
lea
pop
jnp
or
sub
push
test
cmp
pop
test
mov
lcall
adc
sar
sub
rorl
xchg
push
inc
arpl
or
lcall
aam
pushf
adc
adc
sbb
icebp
sbb
pushf
lret
es
test
sarl
dec
pop
int3
cmpsb
fisubs
inc
mov
cmp
icebp
pop
mov
cmp
and
add
add
int3
push
xchg
cmp
cwtl
mov
stc
add
jo
das
jne
inc
xor
in
xor
jmp
inc
pop
lea
mov
add
and
push
or
sub
push
movsl
js
loope
mov
sbb
jecxz
adc
pop
inc
add
mov
push
call
subl
xchg
cmp
add
push
jno
in
jg
fisttpll
sbb
inc
pop
cmp
pop
aam
popa
jno
xlat
pop
test
outsl
mov
cli
pop
mov
xorb
and
inc
cmp
jg
out
jmp
push
mov
mov
bound
xchg
in
sbb
lcall
pop
ja
stos
faddl
es
mov
cli
orb
sbb
ret
cwtl
or
mov
sub
or
mov
fiaddl
mov
mov
repnz
sub
or
iret
jle
or
sub
shlb
xchg
and
aaa
cmp
movsl
adc
push
mov
fists
ds
pop
outsb
js
xor
push
out
mov
sahf
dec
stos
add
mov
notl
sub
orb
lds
push
jb
jbe
mov
inc
mov
pop
dec
call
nop
push
add
mov
mov
push
fisttpl
inc
mov
dec
and
add
and
adc
popa
addb
and
jge
out
or
inc
or
dec
sti
and
jne
push
xchg
dec
mov
xchg
mov
pop
mov
pop
dec
fbstp
cmp
mov
sti
jne
inc
add
dec
jmp
arpl
divl
inc
inc
daa
and
ret
xchg
test
inc
and
and
mov
fwait
add
aam
lret
fdivrs
das
sbb
dec
sbb
mov
sbb
test
sub
push
stos
sti
int
fmuls
das
xor
cmpsl
decl
mov
addb
nop
pop
mov
daa
pop
push
movsb
cld
mov
push
push
adc
dec
push
hlt
add
lea
insb
push
xor
sbb
sub
push
addr16
push
rolb
outsb
pushf
arpl
mov
cltd
or
cs
mov
add
int3
jbe
out
rorl
mov
add
testl
fdivs
aam
enter
xor
fsubr
aam
outsl
lock
shlb
test
adc
mov
je
sub
mov
sti
mov
push
mov
add
adc
pop
adc
mov
push
sub
or
data16
inc
adc
imul
mov
pop
pop
cmc
lcall
or
cmc
push
loop
clc
popf
sub
inc
sub
xor
dec
pop
bnd
std
movsb
jno
or
ds
and
inc
sub
outsl
xor
sbb
test
jg
call
daa
push
or
adc
sub
pop
mov
or
cmp
aam
sbb
mov
xor
lea
inc
sub
or
mov
cs
fistl
dec
inc
inc
jmp
das
sub
loopne
fidivs
mov
adc
inc
adc
add
jne
cmp
pop
cmp
mov
jge
pop
cmpb
ja
push
mov
push
inc
mov
in
mov
sbb
sub
sbb
cli
ljmp
add
cmp
jge
cmp
je
hlt
decl
enter
sbb
pop
cmp
jg
sbb
pop
jmp
faddl
cmp
add
add
and
clc
das
shl
sub
stc
cmp
ret
jo
popa
add
lret
pop
std
out
xchg
xor
push
push
mov
maxps
fwait
add
or
mov
lods
or
mov
pop
aas
jmp
stc
fsubp
loopne
push
shrl
mov
cmp
pop
add
je
outsb
clc
fcmovu
sbb
dec
cmp
or
jne
incl
popa
cmp
sub
mov
adc
je
mov
xor
outsb
jmp
xor
adc
sahf
test
lods
xor
adc
sti
jne,pt
testl
subb
push
test
cld
gs
jmp
test
dec
pop
je
mov
inc
pop
cmp
and
out
jne
mov
add
xor
xor
cli
idivb
stos
test
stc
inc
cld
dec
pop
test
je
push
sbb
inc
inc
repz
and
dec
dec
jmp
sub
jmp
or
jmp
add
jecxz
in
adc
cltd
or
jne
jmp
push
inc
dec
mov
xor
and
jmp
mov
and
je
clc
aaa
mov
inc
cmp
add
cvtdq2ps
ja
push
mov
daa
push
adc
adc
adc
mov
add
fidivrs
test
je
imull
outsb
add
adc
inc
mov
adc
sbb
int3
add
cmp
push
shlb
fisttps
pop
mov
rorb
mov
imul
push
lahf
in
jae
loopne
jp
push
push
or
and
add
mov
leave
repz
or
pop
cld
sbb
xor
arpl
inc
or
dec
testb
mov
and
mov
or
xor
xchg
insl
pop
push
inc
or
and
pop
mov
ja
enter
add
ljmp
imul
add
add
rolb
xor
jne
and
mov
jmp
and
bound
mov
sbb
dec
mov
incl
pusha
sbb
leave
push
es
cmp
xor
adc
pop
mov
mov
leave
addr16
je
push
push
stos
add
pop
mov
lret
and
inc
lds
and
icebp
fdivs
inc
cmp
dec
add
push
mov
das
xchg
je
mov
dec
jnp
je
insb
xor
cli
pop
dec
scas
leave
and
inc
sub
or
out
jle
sbb
add
shlb
or
jne
pusha
jne
jne
das
xlat
popa
pop
push
push
loopne
lcall
insb
mov
mov
add
cmp
jbe
movsl
jb
or
loop
stc
or
sub
xlat
pop
sbb
mov
push
pop
jb
loopne
add
das
test
pop
fistpl
cmp
mov
jl
mov
and
pop
icebp
mov
mov
or
mov
loope
lods
adc
lret
insb
in
and
dec
push
dec
add
mov
cmpsb
nop
inc
inc
inc
imul
mov
or
push
add
cmpsb
imul
xor
aas
or
in
call
xor
in
lock
hlt
clc
mov
cld
cld
lea
add
imul
xor
jmp
inc
push
dec
pusha
and
into
nop
cmp
insb
shll
and
sbb
lea
or
xor
jl
cld
jmp
push
cld
out
rcrb
adc
adc
xchg
pop
stc
sub
pop
in
push
pop
nop
fcoms
clc
push
and
leave
imul
fildl
jne
add
dec
lods
mov
sub
outsb
xchg
aas
inc
out
add
push
in
pop
push
mov
loop
push
out
mov
pop
mov
mov
or
shll
xchg
pushf
movsb
lcall
sbb
sbb
imul
imul
aaa
sub
rorb
fadds
call
mov
das
lsl
subl
dec
or
adc
filds
jno
jg
dec
adc
dec
sub
sub
in
cmp
das
daa
imul
rol
es
loop
loop
orl
and
pusha
sbb
cmpb
inc
push
pop
inc
push
jg
mov
add
add
or
mov
push
aam
or
sbb
jb
push
jae
daa
shlb
lahf
add
shl
mov
jnp
add
inc
sbb
in
ret
flds
dec
rcrl
and
je
xchg
mov
lea
stos
sub
sub
and
test
je
lds
cli
xorb
jo
and
rcl
mov
cli
mov
push
or
lret
mov
push
rep
je
inc
dec
pushf
add
push
cmp
dec
ret
unpcklps
sbb
push
sub
jae
jmp
aas
cld
sbb
add
ret
push
jnp
lds
pop
test
cmp
or
cmp
and
cmp
jne
inc
enter
adc
jne
sub
out
sbb
mov
loopne
insl
jnp
stos
ret
ret
add
jmp
ja
jns
add
ror
pop
push
scas
jns
rcll
enter
push
imul
es
lods
adc
and
call
jp
js
mov
sbb
leave
push
shlb
mov
cmp
mov
ds
mov
test
and
pop
pop
push
pop
mulb
mov
orl
aad
inc
lods
xor
mov
adc
or
inc
aam
jle
icebp
rcrl
subl
push
mov
or
rorl
lock
clc
dec
sbbb
js
mov
popf
shlb
mov
push
lock
je
lahf
or
jmp
lods
ds
aas
mov
xor
cmpsl
hlt
in
jbe
xor
sub
adc
and
pop
cmp
mov
sbb
adc
cld
add
mov
jmp
dec
add
in
in
and
pop
imul
rorb
clc
mov
mov
aam
rorl
movsb
push
hlt
or
mul
sub
jmp
or
inc
rcrl
adc
cmp
nop
mov
in
cs
sbb
cltd
dec
hlt
dec
cltd
sub
enter
cmp
sar
rolb
dec
xor
sbb
cltd
adc
enter
cmc
cmp
jnp
lock
stos
scas
imul
clc
adc
neg
jmp
sbb
pop
in
mov
lahf
clc
xor
imul
std
cmp
mov
xor
cmpsl
inc
push
loop
arpl
mov
cmp
push
cmp
add
push
push
pop
lods
cmp
adc
mov
sbb
scas
jg
and
stos
jae
add
mov
adc
or
or
das
roll
in
cmp
iret
jl
into
mov
jl
jge
icebp
loope
or
jmp
bound
pop
jnp
idivl
or
movl
xor
xchg
pop
dec
jo
sahf
inc
leave
mov
push
adc
sbb
adc
je
pop
movsl
pop
push
push
mov
sbb
shrb
sub
mov
pop
fsubrs
lock
ds
mov
and
mov
pop
push
or
xchg
dec
adc
push
mov
jmp
cs
mov
and
or
ret
and
lock
jne
jmp
pop
push
cmp
jne
jmp
xorb
imull
lock
call
and
adc
xor
movsb
and
cld
mov
mov
cli
jl
in
dec
adc
lret
les
rorb
clc
cmp
pushw
xor
lods
or
in
rol
inc
push
pop
xchg
mov
pop
je
das
out
rclb
arpl
jmp
push
dec
sbb
xor
imul
in
push
push
jecxz
aas
call
add
in
fimull
xchg
pop
mov
fsubp
ja
and
loopne
sub
nop
dec
sti
mov
add
mov
mov
mov
add
inc
push
insb
adc
jecxz
add
in
loopne
dec
cmpsl
fiaddl
xor
cmp
test
sbb
mov
jecxz
inc
das
outsb
or
jge
je
aam
cltd
and
adc
pushf
sub
jns
or
mov
popf
cmp
and
cmp
xchg
ja
pop
fcompl
dec
out
cmp
sbb
or
idivb
jbe
push
sbb
cmpl
pop
prefetch
or
or
aad
adc
in
cmp
aas
inc
sub
lods
loopne
jno
clc
mov
in
or
clc
sbb
push
mov
out
and
sbb
xor
mov
int3
cmp
cmp
pusha
iret
popa
pop
andl
adc
push
add
push
sbb
mov
and
imul
cmp
sbb
sbb
mov
sub
testl
lock
adc
pusha
adc
jmp
and
sbb
pop
mov
imul
enter
xor
push
add
fists
pop
into
pop
fucomip
rcrb
xor
and
inc
loop
add
xor
dec
loope
mov
dec
adc
inc
add
rclb
insl
lock
icebp
js
sbb
outsl
adc
push
push
add
push
push
lock
ficompl
in
adc
push
scas
out
mov
arpl
pop
sbb
and
rclb
add
cmp
add
fbstp
faddl
into
mov
outsb
adc
nop
js
call
scas
pop
or
pusha
shll
aam
jp
hlt
add
or
js
daa
sub
mov
js
jmp
sbb
test
roll
jne
sbb
or
jnp
dec
aas
cmp
lret
dec
and
cmpl
add
clc
xchg
loopne
mov
rcr
or
jmp
sub
ret
dec
xchg
faddl
cmp
test
mov
out
outsl
inc
push
push
mov
lods
sub
mov
rolb
adc
pop
mov
dec
loope
sbb
loop
jbe
push
mov
pop
lahf
hlt
sahf
xchg
or
or
jge
jbe
es
sub
jmp
or
add
add
and
push
mov
pop
sbb
outsb
scas
pop
cmc
push
or
hlt
mov
shll
adc
das
or
aaa
xchg
mov
in
lds
pop
inc
push
cmp
ss
xchg
cmp
adc
add
push
add
pop
ds
jmp
mov
inc
leave
enter
addb
lahf
cmpb
daa
mov
stos
adc
cmpsl
lods
iret
scas
or
add
sbb
adc
mov
sub
out
push
mov
dec
pop
push
pop
push
xor
loopne
insb
mov
inc
push
add
iret
push
sbb
push
xlat
inc
and
push
adc
cmp
pusha
mov
inc
or
fldenv
inc
test
and
cmp
inc
inc
test
xorb
or
push
add
sti
xchg
rcll
enter
mov
jo
and
fadds
cs
dec
mov
xor
je
add
call
sbb
push
jne
insl
push
jecxz
cmp
or
ret
imull
jne
adcb
lods
mov
sbb
lahf
add
mov
adc
push
mov
mov
and
xchg
sub
out
xchg
sub
inc
cld
roll
out
das
les
xorl
pop
imul
pushf
mov
mov
jne
dec
pop
inc
mov
dec
fcmovb
out
pushf
cmp
cmp
loop
gs
loope
cmp
xorb
cmp
add
mov
push
adc
or
das
mov
jns
stos
jp
jp
add
dec
dec
es
loopne
push
and
xchg
pushw
je
sub
insl
out
push
sbb
fistl
repnz
ljmp
mov
cwtl
call
pusha
xchg
sbb
ja
mov
test
loopne
loopne
dec
cs
loopne
inc
mov
cmp
or
dec
mov
inc
sbb
adcl
loope
pop
test
inc
into
test
ud0
and
out
imul
in
leave
test
in
decl
fwait
xor
sub
call
fmull
mov
xchg
push
jmp
adc
imul
push
cltd
adc
add
inc
sub
add
xchg
inc
outsb
mov
daa
push
call
add
cmp
hlt
sub
aas
and
xchg
or
ja
nop
lea
sbb
jg
ljmp
pushf
mov
pop
rclb
in
pop
lcall
clc
shll
fwait
jb
cli
in
push
mov
jge
add
xchg
adc
or
xlat
aam
std
add
dec
push
std
cmpsb
mov
jecxz
jmp
stos
jmp
pushf
jmp
pop
sbb
sbb
sbb
push
pusha
sahf
cmp
arpl
xchg
pop
xor
fnstenv
cmp
je
jno
fdivs
fisttpll
pop
dec
jp
sbb
out
lret
les
xor
jne
push
jge
or
aam
not
push
push
push
push
pop
rcrl
shrb
fcomp
sbbl
mov
adc
lods
fdivrs
loopne
cmp
mov
jo
push
inc
sub
out
mov
jne
testb
push
push
das
mov
push
push
mov
add
rcll
or
add
xchg
or
xor
jmp
fs
pop
xor
int
cmpsl
add
sub
int
adc
add
jg
pop
mov
movsl
or
xor
outsl
mov
lret
mov
jecxz
fstpt
inc
hlt
add
addr16
dec
xor
jecxz
jnp
in
addb
lods
add
mov
xchg
pop
sbb
push
add
adc
in
pushl
or
xor
or
into
jg
imul
dec
int3
and
dec
aas
jecxz
pop
sub
add
adc
add
cltd
lock
add
popa
adc
cmp
cld
lds
mov
popl
enter
cmpl
lret
add
mov
xor
cmp
sbb
gs
xor
clc
sbb
push
sbb
xor
jle
xor
mov
pusha
cmpsb
jo
fldcw
clc
fwait
rclb
das
pop
sub
add
or
test
popa
negb
jmp
mov
data16
xor
outsl
push
mul
sbb
jmp
mov
or
dec
sahf
or
lds
mov
jo
xor
jno
nop
or
dec
and
sub
dec
or
inc
lret
fistpll
pop
lds
push
loope
cmp
jne
js
out
jae
cmp
cmp
mov
out
or
mov
and
repnz
nop
xor
loopne
cs
add
adc
nop
scas
adc
cld
scas
dec
xor
inc
fcoml
fistps
cmp
sub
fs
stos
pop
shlb
xorb
ja
scas
inc
shrb
jge
cmpsb
pop
popf
push
or
inc
sbb
or
insl
addl
mov
adc
roll
and
mov
jl
mov
add
loopne
push
or
mov
dec
ret
jle
inc
xchg
add
bound
cltd
imulb
addb
adc
mov
and
lock
push
or
xor
push
sub
aas
mov
cmpb
or
inc
rolb
or
in
imul
inc
adc
push
js
cmp
sub
hlt
scas
xchg
cld
hlt
mov
mov
cld
shlb
cmp
push
nop
sbb
push
mov
je
cmp
and
add
jl
xor
mov
jl
in
add
sbb
mov
lods
adc
adc
adc
mov
add
jp
int3
cmc
sub
inc
sub
adc
sbb
cltd
test
dec
xor
jg
rorb
enter
inc
add
mov
pop
mov
sub
lods
jmp
and
and
outsl
or
mov
inc
dec
mov
sbb
test
or
lock
add
loop
inc
mov
sbb
ret
push
or
ss
inc
cmpl
pop
pop
out
adc
push
pop
sub
push
jmp
or
mov
push
daa
or
mov
jmp
lock
insb
cltd
dec
sbb
sbb
pushl
dec
adc
mov
mov
push
push
jmp
ret
imul
je
lea
call
push
mov
sbb
test
inc
subb
xchg
jne
adc
sub
addb
sub
rcll
adc
sub
dec
hlt
ljmp
mov
cmp
scas
adc
in
push
addl
xchg
mov
mov
jmp
jns
adc
xchg
jle
sbb
lods
adc
cmp
lock
test
push
mov
inc
and
lgs
dec
mov
sub
inc
aaa
test
je
clc
pop
cwtl
cmpl
sub
mov
bnd
mov
pusha
mov
movb
movsb
call
jmp
mov
cmp
jns
xor
add
std
jnp
orl
mov
mov
mov
outsb
pop
or
test
xor
sbb
lret
aam
je
stos
shr
push
je
push
dec
mov
ss
or
ss
sbb
cmp
inc
push
cld
and
adc
mov
xor
pop
mov
add
and
inc
mov
jmp
push
jne
sbb
dec
scas
fisubrl
dec
xor
cld
cwtl
test
mov
inc
test
adc
push
cmpsl
cmp
adc
les
add
sbb
jmp
lock
lock
push
push
push
sbb
adc
or
pusha
clc
jo
cwtl
inc
cwtl
sahf
in
sub
into
repnz
push
loop
add
or
je
cmpl
xor
xor
cmp
jae
or
sti
push
movsl
add
call
aam
add
mov
sub
and
add
dec
inc
sbb
ja
dec
add
pop
sbb
or
pop
scas
add
jb
xchg
mov
loop
jne
push
sub
inc
inc
or
jmp
pushf
mov
mov
jne
clc
cmp
mov
fwait
loop
in
les
add
and
push
testb
lahf
or
dec
mov
jb
lret
dec
and
popa
fcomps
mov
outsl
in
fbld
sub
iret
cld
mov
mov
push
cld
mov
clc
xchg
lea
clc
clc
mov
hlt
loop
insb
test
mov
adc
xor
sub
push
xchg
pop
ss
nop
xchg
test
rorb
loop
outsb
arpl
mov
sahf
mov
pop
pusha
cmp
push
ficompl
sahf
jo
sbb
stc
jmp
cmc
int3
rclb
adc
aas
inc
stc
cmp
inc
or
or
cld
addb
cmc
and
jmp
jbe
das
aas
add
es
cmp
insl
shlb
add
aam
mov
mov
fsubrs
or
push
jne
iret
xor
sbb
loope
push
mov
jge
mov
cmp
fs
add
loope
rcrl
call
sub
idiv
or
mov
mov
loop
inc
push
addb
sti
push
pop
mov
cmpsl
dec
repz
add
out
sahf
int
pusha
in
cmp
jo
inc
test
inc
inc
dec
arpl
inc
stos
mov
sbb
or
shll
dec
pop
test
jae
jecxz
mov
push
inc
xor
add
mov
xchg
js
xchg
add
inc
in
leave
sub
add
mov
jo
pushf
ljmp
add
sahf
adc
xchg
mov
mov
xchg
or
rcrl
lahf
jmp
inc
pop
xor
jmp
rcr
shr
rcr
or
lock
imul
das
xchg
mov
out
shll
cmp
or
cmp
mov
jmp
add
pop
pop
push
mov
frstor
arpl
fstl
insb
xchg
mov
sub
push
jbe
sub
and
push
or
neg
sbb
add
push
push
xor
pop
jge
inc
stos
pop
rorb
fisttps
sbb
es
sbb
cwtl
dec
mov
sbb
sbb
adc
xor
mov
jmp
icebp
nop
dec
inc
inc
sbb
adc
or
adc
pop
gs
pop
nop
push
leave
push
imul
pop
mov
mov
inc
test
cmp
jg
pcmpeqw
inc
dec
je
adc
jne
mov
mov
adc
loopne
nop
add
call
sub
pusha
or
mov
je
mov
push
cld
dec
adc
cmc
push
pop
fcmovu
jne
sub
sbb
mov
ffree
rcrb
imul
sha1msg2
sbb
test
loopne
adc
push
push
sti
fiadds
int
mov
xchg
es
lea
jno
push
add
cmp
rorb
mull
out
push
jns
or
lret
lret
jmp
std
jmp
cld
or
sbb
mov
mov
jmp
xor
push
out
jmp
out
test
xlat
loope
and
daa
aam
jno
frstor
pop
or
push
jbe
sbb
in
and
ss
clc
aad
cs
and
or
aas
aam
fcom
stos
mov
xor
add
jne
jl
pop
and
loopne
dec
inc
or
sbb
mov
clc
add
aam
add
jmp
rcrb
sbb
dec
pop
subl
push
movsb
mov
fcompl
je
ret
into
stos
js
and
test
icebp
cld
pop
xchg
pop
sub
dec
xchg
push
nop
pushl
adc
add
bound
adc
jae
test
push
ds
or
andl
inc
mov
ss
pop
and
pop
sarb
imul
xor
mov
inc
cmp
je
cmp
fprem
mov
jne
rcrl
fildll
lea
mov
jbe
and
mov
hlt
cmp
jne
mov
bound
mov
cld
ret
and
mov
push
rcr
xchg
lea
sbb
or
or
gs
mov
pop
push
mov
cmc
psrad
sbb
dec
mov
pop
test
lods
lahf
inc
inc
pop
test
in
or
push
dec
daa
cmp
adcb
adc
nop
or
cmp
jmp
add
or
inc
sbb
shlb
sub
aad
movsb
adc
mov
addr16
jne
rolb
or
pop
add
mov
stc
mov
inc
stc
mov
add
adc
xchg
adc
pop
stc
sbb
jo
sbb
js
sub
xor
es
and
loopne
fcmovnb
add
jne
hlt
movsb
inc
fldt
jmp
adc
cmc
add
jle
loope
or
outsl
lea
pop
ret
cmp
call
daa
push
add
imul
inc
das
je
mov
inc
cmp
je
mov
add
or
mov
push
add
mov
mov
lret
sub
stc
xor
mov
xor
push
or
not
out
mov
sbb
or
roll
shrb
sbb
cli
sub
fwait
pop
push
cld
cmp
je
cs
cmp
insl
add
out
and
add
push
aam
xchg
pop
arpl
outsb
or
cld
aas
sub
xchg
xor
sbb
mov
jg
pop
call
jmp
clc
inc
cltd
popa
push
mov
inc
mov
or
enter
adc
push
mov
dec
jns
sbb
add
mov
pop
js
aas
lret
xlat
xor
sti
cld
adc
xchg
pop
js
add
add
inc
es
pop
pop
fistpl
outsb
push
rolb
dec
xorl
js
xchg
mov
mov
sbb
mov
int3
jo
and
outsb
scas
pop
icebp
cmp
arpl
jp
push
sub
fwait
adc
or
or
aam
pop
add
aad
xor
gs
xchg
scas
jecxz
fiaddl
sbb
pop
sub
and
xor
ficompl
mulb
cmpsl
mov
add
cmp
xor
dec
jge
mov
movsl
ret
or
cmp
pop
or
sub
cmp
loopne
pop
adc
push
and
enter
push
and
and
or
shlb
dec
or
aas
add
mov
add
cmpb
pop
leave
mov
add
cld
popf
mov
negl
in
test
and
or
add
ret
lret
mov
loopne
outsl
inc
gs
subb
inc
lret
adc
aas
sarb
or
add
call
jmp
push
and
jb
nop
and
cmp
dec
push
das
lods
loopne
add
arpl
push
cmp
sti
add
pop
insb
test
sub
aaa
scas
add
nop
pop
leave
jg
and
or
or
jae
dec
lds
adc
ret
mov
xor
fistps
push
add
cmp
jne
mov
shrl
outsb
fisttps
cli
lret
xorl
add
add
xorb
adc
pop
mov
lret
pop
mov
scas
mov
push
sbb
mov
sahf
inc
loop
icebp
push
jmp
loop
ja
push
pop
das
sub
stc
pop
jne
divb
jae
jmp
sub
jne
xor
cwtl
sbb
inc
aam
sbb
lods
sub
inc
pop
cs
jno
adc
dec
or
movsl
pusha
xchg
stos
pop
mov
add
sub
les
inc
jecxz
mov
adc
push
cltd
cmpb
sub
jne
sahf
inc
cmc
or
cmp
in
dec
movsl
xchg
add
loope
insl
xlat
in
adc
sub
mov
addr16
clc
cmp
and
clc
mov
in
sbb
sub
pop
jo
sbb
sub
cmp
pop
repnz
cld
loopne
or
test
xor
push
sbb
gs
mov
in
sub
xchg
aaa
adc
cmp
or
movzbl
jno
sbb
jl
push
iret
sbb
sahf
mov
call
add
pop
repz
cld
and
jb
in
and
mov
loope
lods
mov
int
or
ret
lock
loop
loop
jmp
int3
mov
sbb
or
sbb
inc
aaa
push
push
sbb
popf
inc
lock
lcall
cmpsl
fwait
jb
push
pop
mov
jl
mov
ret
push
add
or
loopne
push
and
dec
icebp
call
dec
mov
in
clc
icebp
add
subl
sbb
movsl
push
aad
or
adc
lods
out
insl
addl
cmc
repz
mov
add
adc
cmp
push
add
fistl
lods
adc
dec
jne
ret
xor
js
rcl
js
or
xchg
adc
scas
faddl
adc
out
push
xor
inc
outsl
leave
jno
js
sbb
mov
and
add
test
xor
test
sbb
mov
lock
xor
xchg
imul
adc
or
jmp
lock
xor
idivl
add
cmpl
call
aaa
sbb
jnp
mov
movsl
jb
push
pop
loopne
mov
adc
lock
add
jne
mov
leave
pusha
addb
jns
in
or
hlt
jmp
sahf
add
popf
mov
jmp
and
add
jl
bound
movsb
sbbl
lods
sbb
pop
jo
cmpl
inc
and
inc
sub
and
loope
dec
hlt
push
arpl
cmp
push
xchg
mov
sub
addl
adc
into
mov
dec
cmp
mov
arpl
jecxz
fsts
pop
push
add
mov
scas
mov
ret
rorb
mov
cmpsb
mov
leave
cmp
add
incl
not
mov
pop
add
sbb
push
jg
js
push
and
xor
aad
sub
iret
mov
and
addps
xchg
add
pop
or
adc
sbb
enter
add
ds
inc
push
sub
dec
out
add
add
pop
xchg
lcall
adc
pop
add
mov
pop
ja
test
movsl
xchg
les
sti
cmp
lods
test
cld
or
xor
mov
add
test
cmp
or
jne
lahf
push
xchg
mov
mov
pushf
movsl
or
stos
ja
adc
in
cmp
test
xor
add
in
movsb
mov
cmpl
mov
and
sbb
add
jno
out
and
and
sti
jge
add
jno
hlt
fdivrs
roll
icebp
cmp
rolb
jnp
mov
insb
xor
jo
and
mov
or
mov
jge
sbb
or
cmp
adc
fs
xchg
fimuls
pop
shlb
mov
cmpsl
and
aas
add
movsl
shrb
pop
add
xor
xchg
int
add
xchg
mov
xchg
pushf
pop
and
lea
test
mov
mov
xor
adc
mov
mov
rol
mov
cwtl
arpl
and
jl
inc
xor
xor
imul
sbb
mov
pop
xor
xor
mov
pop
push
jecxz
clc
enter
pop
das
clc
int
ror
orb
mov
dec
std
or
dec
mov
or
pop
jns
cmp
dec
xor
or
sbb
sarl
add
mov
xchg
ret
ss
pop
and
and
sub
and
iret
cmp
hlt
push
js
cmpb
jne
fiadds
subps
lock
hlt
pop
insb
jne
gs
xchg
ret
jbe
bound
push
insb
xchg
sbb
or
fcoms
loopne
sub
jge
bound
push
pop
rorb
sbb
and
inc
fsubrs
push
jbe
sbb
imul
sarb
cmp
push
pop
add
push
mov
test
jmp
loope
clc
addl
out
loopne
imul
sbb
sbbb
insl
nop
stos
inc
movsbl
adc
sbb
les
lods
into
or
push
leave
push
or
jmp
xchg
je
std
leave
aaa
push
dec
dec
pop
gs
mov
sub
fnstcw
test
lret
push
popa
andl
sub
inc
je
fadds
punpckldq
fcmovbe
or
mov
mov
dec
cmp
jl
push
jae
ret
mov
jg
out
mov
out
and
jns
or
push
or
dec
ret
aaa
push
lret
sub
xor
call
int3
insb
ds
or
ja
pusha
fisttpll
jbe
xchg
in
sub
fcoms
push
inc
out
mov
int3
fsubs
int3
or
addr16
in
jo
and
xchg
movsb
rorl
sbb
scas
sbb
int3
andl
push
or
mov
adc
add
adcl
or
out
jbe
test
adc
mov
or
bound
jbe
scas
mov
or
lret
ss
dec
sub
push
adc
add
ds
or
push
mov
mov
lea
mov
push
sti
sar
or
jge
pusha
mov
scas
insb
dec
mov
imul
mov
push
lea
xor
inc
stos
xor
daa
cmp
int3
push
jge
div
imul
lea
imul
jo
inc
adc
push
and
add
inc
fs
ds
mov
mov
mov
inc
adc
sahf
inc
inc
std
adc
xor
jne
adc
ret
mov
adc
cmp
enter
pop
mov
cmp
orl
js
or
mov
enter
call
or
xchg
push
in
sbb
jl
data16
sub
and
push
cld
mov
cmpb
imul
cmp
sbb
fadds
jge
jo
and
loopne
mov
xlat
jo
ljmp
mov
push
lods
mov
pop
xchg
fs
aas
ret
sbb
mov
jmp
cld
and
and
inc
loopne
push
and
xchg
or
outsb
xor
jecxz
mov
push
sbb
outsl
jge
mov
fsubrl
lret
xor
stos
pop
xchg
test
dec
xchg
and
daa
add
test
leave
rol
jo
jno
mov
dec
les
dec
mov
inc
fs
jecxz
push
test
pop
sbb
sbbb
mov
mov
pop
mov
pop
xor
in
jle
mov
xor
cmp
push
test
inc
sbb
adc
aas
xchg
sar
loopne
pop
iret
or
push
add
mov
push
sub
adc
jnp
mov
mov
sarb
jbe
or
jmp
cmp
mov
mov
cs
andl
push
add
aas
push
and
adc
push
mov
mov
pushf
xchg
mov
imul
mov
sub
outsl
loop
test
inc
addr16
push
scas
cmp
xchg
sbb
jne
fldenv
mov
xchg
outsb
dec
orl
adc
aaa
inc
dec
mov
pushf
push
mov
xor
pop
test
push
cmp
aaa
jb
test
xor
xlat
jbe
in
or
icebp
sbb
xor
mov
cmp
es
loopne
sbb
xchg
xchg
cmc
sarb
push
test
enter
pop
jnp
push
sbb
in
imul
lea
adc
mov
mov
dec
loope
call
shrl
lcall
and
add
sub
xor
add
mov
mov
insl
mov
pop
and
dec
and
push
mov
and
rcrb
jmp
xchg
cld
aas
insb
and
cs
sbb
sbb
aaa
pop
push
xorl
and
std
pop
lea
add
jl
adc
mov
aas
jnp
popa
push
adc
neg
jns
ds
sbb
mov
fistl
pop
inc
pop
mov
or
sbb
xor
inc
pop
or
idivl
jns
test
pop
stos
xchg
jmp
push
push
int3
int3
jg
imul
enter
out
mov
push
popa
sub
insb
mov
inc
cmp
push
xchg
cs
nop
dec
ja
leave
adc
addb
xchg
in
lea
insl
add
mov
test
mov
rol
xchg
loopne
into
push
sbb
pop
rcl
js
sub
cmc
sub
xor
ficompl
jns
movb
imul
adc
dec
lahf
into
and
andl
xor
test
inc
xchg
inc
outsb
xchg
xor
ja
or
pop
faddl
les
or
loopne
int
int3
jl
cli
xor
push
mov
aaa
repz
jns
test
or
or
push
es
nop
and
pop
xor
enter
jle
inc
ds
rcr
jl
jl
loope
xchg
inc
jl
insl
dec
jp
mov
jno
imul
or
shrb
imul
adc
mov
fsubl
pop
addl
js
icebp
mov
sbb
mov
jp
inc
cwtl
push
jns
std
in
pop
push
imul
pop
ss
push
sub
fwait
repz
lcall
addl
arpl
xchg
add
add
insl
shll
rcr
add
mov
sbb
add
gs
fidivl
pop
inc
outsl
jmp
push
mov
mov
cs
xor
inc
rcl
insb
pusha
pop
cmc
push
je
mov
add
jle
jle
add
add
add
push
adc
or
push
adc
or
fistpll
mov
cmp
cltd
js
sahf
arpl
and
mov
jl
xchg
adc
test
adc
jecxz
add
lea
xor
rorl
mov
mov
or
gs
ja
add
or
ja
push
cld
xchg
xor
sbbb
mov
and
mov
adc
cmp
outsl
add
lahf
addl
cli
lahf
add
movsl
xor
ret
mov
inc
lret
push
mov
and
or
ljmp
push
inc
cmpw
imul
and
jge
fimull
add
ja
sbb
adc
je
cmpsl
lods
cmp
lods
jmp
add
inc
cwtl
movsb
insl
movsl
adc
hlt
lds
lea
pop
rcl
pop
cs
arpl
jo
mov
xchg
cld
jne
push
push
push
and
mov
mov
daa
xor
hlt
xlat
jno
int
xchg
or
xchg
and
or
adc
push
dec
out
cli
inc
mov
sub
movb
add
stc
iret
xchg
or
lds
push
nop
pop
jb
lock
sbb
loopne
inc
mov
fsubrs
xor
insl
sbb
andb
adc
adc
lea
movsb
imul
out
inc
fnstsw
push
jno
hlt
iret
or
insl
cmovne
lea
push
inc
pushf
inc
fcmovu
xor
pusha
add
sbb
push
stos
rcr
pop
dec
stos
xchg
push
push
stc
pop
rclb
pusha
paddd
sbb
imul
cmpl
dec
xchg
xchg
push
pushf
movsb
push
ljmp
mov
push
mul
or
test
sub
adc
pop
or
jle
clc
cmp
xchg
pop
out
push
mov
lea
lcall
cmc
fildll
push
push
push
fstl
jo
ds
mov
mov
push
cmp
xor
xor
imul
pusha
sub
shrl
mov
pop
out
mov
or
xor
sbb
or
mov
pop
pop
and
add
dec
aam
js
lahf
pushl
add
mov
adc
sub
ja
and
pushf
jne
or
loope
add
leave
mov
adc
dec
fmul
popa
ds
aam
lds
lea
or
sub
add
ljmp
xchg
fisubl
jmp
xor
inc
nop
push
stos
es
cmp
jb
fwait
dec
std
jne
push
aam
or
or
mov
enter
loop
jmp
xchg
jo
jmp
sbb
mov
mov
aam
pop
and
add
es
mov
jbe,pn
outsb
jne
push
cmp
out
xor
cmp
imul
xor
in
push
mov
sub
sub
dec
mov
mov
in
sub
push
inc
add
aad
or
adc
call
imul
popa
outsb
dec
inc
push
loopne
rcrb
sub
ds
or
fadd
fdivl
insb
fsubs
ss
push
subl
insl
push
xor
insb
rcrb
ss
xchg
push
cmp
or
inc
lcall
enter
in
lods
jno
iret
lret
loopne
in
in
fcom
shrb
fsub
int3
nop
lret
xchg
mov
out
hlt
out
mov
cmp
adc
add
xor
pop
push
or
jne
push
add
push
test
push
xchg
stc
mov
cli
jbe
xor
mov
aas
mov
xchg
ror
mov
or
std
faddl
pop
push
push
mov
jmp
push
push
loopne
add
rcll
add
jnp
insl
es
jno
adc
jae
xor
inc
add
adc
mov
outsb
repz
je
mov
movl
jp
xchg
cmp
xchg
sub
xorl
mov
mov
mov
arpl
loopne
sbb
lret
cmp
popf
xor
push
mov
cmp
ret
jmp
mov
ljmp
sarl
je
mov
sub
push
pop
sub
and
nop
push
push
insb
inc
and
xor
enter
sub
xor
xchg
pop
cmp
inc
jb
test
inc
xchg
imul
push
xchg
pop
and
sbb
popf
ss
and
cltd
jp
add
lahf
je
in
out
push
dec
je
or
nop
lret
xchg
sub
add
movsl
nop
xchg
out
or
sbb
sub
and
jb
mov
xor
or
addb
sbb
aad
push
add
or
xchg
push
or
pop
or
adc
mov
orb
adc
insb
cmpsl
flds
and
js
jmp
aaa
or
or
scas
adc
rorb
data16
dec
adc
sub
pop
mov
xchg
or
lcall
in
lock
lock
mov
mov
mov
mov
fistpl
dec
call
in
js
add
pop
addr16
pop
jle
call
ds
push
xor
fildll
test
mov
push
mov
movsb
hlt
add
add
and
sub
or
or
dec
cltd
adc
in
adc
jnp
sarl
lea
jb
jbe
cwtl
mov
idivl
add
adc
or
xchg
inc
jl
fpatan
data16
enter
sarb
jmp
mov
ss
mov
push
add
sbb
or
push
clc
adc
and
push
and
jmp
jge
add
or
and
std
ret
jo
inc
ficoms
cmp
push
pavgb
testl
sbb
mov
inc
cmp
loopne
mov
push
test
in
out
and
xchg
push
je
testl
sbb
push
lret
lcall
or
push
jnp
movsb
cmpsb
mov
or
jne
mov
sbb
mov
mov
dec
and
test
sbb
push
push
fcmovnu
push
daa
dec
cld
mov
mov
add
mov
xchg
or
pop
stos
dec
xchg
es
push
jmp
pusha
xor
leave
jle
mov
pushf
out
rcrl
and
inc
in
lock
dec
mov
arpl
push
sub
movsb
lea
or
sbbb
fsts
jno
sub
or
aaa
lock
cmp
stc
xchg
jne
pop
pop
orb
pop
jne
hlt
pop
mov
xchg
adc
test
hlt
movsl
lcall
movl
rolb
adc
sbb
mov
adc
pop
maxps
and
push
in
mov
adc
aam
jge
sbb
fbld
mov
dec
mov
xor
sbb
arpl
mov
jge
xchg
cmc
dec
jp
inc
pop
imul
jmp
mov
add
adc
cmp
jg
rorb
push
in
clc
mov
lock
jg
aaa
mov
stc
inc
or
ret
ss
xor
jbe
add
les
cmpb
sbb
xchg
cmp
repz
jo
add
test
or
push
add
loope
fistps
inc
or
push
or
shlb
daa
add
push
shlb
ret
xchg
sub
scas
sbb
push
ss
jge
jbe
test
inc
ljmp
xor
and
ja
mov
dec
in
mov
daa
jle
inc
les
xchg
andb
repnz
iret
sub
sub
repnz
adc
push
fsubrp
bound
cmp
sarl
addr16
cmp
je
movsb
mov
pop
inc
nop
andl
jae
add
pushf
sub
mov
add
add
cli
push
push
mov
push
rorb
loop
cwtl
mov
into
shr
cwtl
jmp
daa
sub
adc
and
sub
pop
pop
or
cmp
imul
xchg
sub
pusha
mov
dec
pop
dec
sbb
dec
and
add
and
jle
pop
jne
mov
js
imul
dec
lods
xchg
or
shlb
loopne
orl
jbe
sbb
add
push
cmpsb
or
add
ret
push
outsb
pop
adc
stos
nop
mov
fsts
inc
mov
or
lea
mov
ret
shll
inc
adc
lods
iret
nop
xchg
ja
insb
rorl
lcall
add
repnz
add
xchg
fsts
hlt
std
hlt
pop
cmpsb
add
sub
cmp
mov
repz
mov
in
add
sub
mov
arpl
mov
mov
add
inc
je
clc
inc
adc
out
rcpps
pop
fwait
sub
orl
sbb
pushf
or
fcompl
push
andl
xor
fwait
jp
notl
xor
aam
pusha
pop
cs
jbe
orb
pusha
add
hlt
jo
js
xchg
sub
xor
lock
pop
cmp
mov
js
test
loop
or
lds
pop
and
leave
inc
in
in
in
movsl
and
and
pop
jb
loopne
add
add
jmp
jp
mov
add
rcl
xor
push
outsl
sbb
lods
call
gs
lds
or
outsl
add
push
jle
jecxz
jnp
mov
popf
inc
jne
lcall
je
les
pop
int3
int3
test
and
enter
test
adc
sbb
enter
adc
sub
test
add
lods
jbe
add
rcrb
popa
iret
push
loopne
sub
cmp
bound
mov
sub
xlat
pop
and
stos
adc
fwait
test
and
cli
jle
adc
inc
xor
add
aam
call
dec
xor
ret
inc
add
dec
xchg
jnp
add
push
mov
fistps
and
mov
cmpl
je
movsl
sarl
lret
dec
divl
xchg
out
adc
ret
mov
mov
in
sbb
dec
in
or
push
scas
xorb
pop
add
mov
pop
gs
adc
inc
lcall
nop
xor
movb
shll
mov
sub
sub
ss
xor
mov
or
icebp
sub
mov
insb
js
xor
and
leave
xchg
loopne
sub
pop
insb
test
inc
mov
push
adc
push
add
lods
xor
xchg
cs
xor
ljmp
mov
pusha
push
jmp
jmp
jg
pop
mov
and
arpl
xchg
pop
fsubr
or
repz
adc
xor
jmp
int
fldenv
or
dec
and
mov
adc
rorb
cmp
push
jno
mov
gs
jb
xor
lea
mov
mov
or
orl
fiaddl
cmp
fists
mov
outsb
je
inc
mov
push
sub
int3
adc
aas
push
xor
mov
mov
and
pop
cmpsb
mov
std
dec
xchg
rolb
aad
aaa
ficoms
push
add
add
lar
xchg
pop
add
add
add
push
pop
xchg
xchg
mov
repnz
pop
nop
mov
push
ficoml
add
add
add
add
add
inc
and
dec
jg
pop
cmpsl
subl
mov
or
adc
aaa
clc
jmp
rorb
cmp
adc
fistpl
or
jns
or
pop
mov
outsl
test
xor
dec
adc
add
pop
push
cs
add
jns
in
push
jo
lea
scas
add
push
or
outsl
lcall
jmp
dec
orl
pop
mov
lcall
cmp
test
imul
and
mov
sub
stc
stos
or
and
sub
pop
test
mov
int
movsl
pop
add
insl
clc
popf
push
sub
hlt
and
sub
shrl
int3
lahf
push
and
add
inc
sub
incl
cld
sbb
push
or
loopne
inc
pop
xchg
xchg
xchg
add
pop
adc
or
orl
xor
add
mov
js
aaa
mov
stos
orl
stc
or
jns
push
or
adcb
cmp
and
js
aaa
sahf
adc
jge
loopne
add
jo
repnz
fadds
jge
ret
scas
test
imul
iret
fadd
pop
lea
sbb
test
movsb
fs
movl
aas
sbb
jb
testl
sub
pusha
sub
jb
adc
mov
ja
or
test
rorb
popf
jl
or
dec
and
push
xor
pop
xlat
mov
sbb
mov
filds
and
in
xor
leave
mov
or
shlb
sbbb
mov
adc
jne
xchg
popa
cmpsb
add
add
shrb
stos
sub
add
stos
push
sbb
push
dec
pop
xchg
cmc
xor
fisubrl
mov
nop
mov
mov
test
push
xor
sbb
pop
cmp
je
test
loop
mov
jns
faddl
xor
int3
insb
jo
aas
xchg
and
leave
adc
movb
lea
add
clc
roll
adc
adc
inc
jno
add
mov
ss
nop
rorb
mov
mov
or
jg
dec
or
add
jbe
cmp
cmp
rcrl
dec
stos
clc
les
cmpsl
xor
and
push
sbb
jns
rol
call
add
sub
adc
or
adc
adc
or
push
add
clc
jp
or
cmp
into
imul
or
dec
negl
or
pop
inc
jle
push
repz
clc
frstor
dec
stos
icebp
gs
mov
xor
add
xchg
std
jmp
daa
ret
inc
xchg
adc
sbb
lods
and
ss
adc
push
dec
lods
lret
jae
push
xchg
xor
push
hlt
mov
sahf
xor
into
test
inc
adc
mov
push
sbb
jb
mov
jnp
pop
nop
push
push
ss
jne
inc
fisubrs
adc
or
in
shll
jne
movsl
push
cmc
jecxz
push
cmpsl
into
sub
cmp
sub
shll
rorb
call
sub
into
push
or
inc
sbb
movl
adc
push
sbbb
pop
push
xor
movsl
cmpb
cltd
rcll
xor
in
aaa
pop
dec
jg
lcall
outsb
ret
push
out
push
add
adc
movsb
insl
ds
js
sbb
push
dec
pop
jnp
push
mov
pop
inc
pop
cmp
jge
lcall
xor
and
je
ret
fmull
or
sub
mov
pushl
mov
leave
xor
inc
insb
loopne
dec
jmp
test
inc
dec
sbb
sbb
ja
dec
push
lahf
inc
sbb
in
jl
loope
and
test
or
or
adc
or
xchg
jo
jle
sbb
cmp
cmc
or
jmp
push
fisttpl
out
popf
xor
jnp
push
inc
mov
pop
mov
test
les
in
inc
notl
bound
outsl
cmp
mov
inc
pop
icebp
push
ret
ss
add
push
or
push
fs
xchg
fldl
mov
pop
ret
jl
mov
lret
es
outsl
pop
pushl
mov
and
jo
and
mov
and
sub
mov
and
ret
adc
outsl
add
sub
add
out
jne
xchg
push
push
adc
ret
popl
dec
jns
fs
xchg
jns
rolb
adc
adc
jne
adc
sub
loope
mov
in
add
incb
imul
ret
push
inc
xor
pop
inc
xor
bound
je
sbbb
shl
leave
jne
add
mov
inc
jae
or
arpl
aaa
clc
xchg
je
push
push
lea
push
pop
pop
pop
orb
push
mov
xor
js
dec
push
xchg
sub
sbb
adc
push
sbb
insb
lds
pop
stos
or
or
hlt
fwait
pusha
xor
xor
jmp
mov
testb
mov
sub
sub
jne
mov
push
pop
sbb
adc
and
cmpsb
push
int3
cmpsl
xchg
sbb
fsubl
ret
sti
or
inc
mov
mov
mov
out
pop
add
sarl
add
adc
cmp
push
ja
inc
mov
cmpsl
and
and
das
xchg
loope
mov
xchg
mov
aam
daa
lahf
cmpl
xor
jae
mov
inc
cld
sub
shll
std
ret
shr
add
in
int3
xchg
arpl
testb
push
or
sub
shll
xadd
adc
cmp
scas
cmp
inc
dec
loope
loopne
mov
repz
fcomp
orb
shll
add
mov
add
or
or
cmp
movsl
mov
scas
addl
pop
xor
sbb
jg
add
adc
adc
push
outsl
loope
sbb
adc
mov
mov
loop
outsb
outsl
xchg
adcl
fadd
aam
enter
jmp
adc
push
adc
sbb
fcoms
mov
push
or
rorb
ds
in
nop
cmpsb
aaa
lret
scas
lock
xor
loopne
jo
xchg
jbe
or
adc
rol
jmp
mov
shll
adc
push
stos
imul
and
mov
adc
bound
xchg
pushf
into
pushf
outsb
mov
push
adc
adc
jno
and
jno
inc
jecxz
sub
mov
xchg
stos
xchg
loopne
sbb
scas
ret
pop
loopne
jno
test
inc
sbb
daa
xchg
stos
xchg
mov
cmp
cld
push
loopne
insl
pushf
lcall
test
je
mov
mov
fdivrs
mov
pusha
nop
sbb
jp
adc
out
fdivrl
push
push
dec
sub
mov
sbb
arpl
fcoms
sbb
jns
jnp
mov
xor
leave
add
cmp
cmp
js
fcoml
sub
cwtl
push
xor
into
add
or
and
dec
dec
out
or
and
add
xor
or
and
cmpsb
negb
add
add
leave
cmp
push
shlb
ljmp
arpl
sub
add
int3
or
pop
movsb
mov
cmp
xchg
int3
mov
inc
in
mov
sarl
enter
addl
addr16
insb
add
dec
bswap
xor
and
enter
pop
add
xor
sub
enter
sbb
sub
sub
mov
add
lds
or
inc
adc
std
fmull
sub
test
lahf
jo,pt
sub
or
xchg
sub
jo
popf
shll
mov
adc
xchg
jnp
pop
data16
jmp
aad
pop
add
popf
loopne
mov
adc
fcompl
xchg
cmpsb
loopne
jnp
mov
push
loope
adc
xchg
sbb
add
adc
cltd
adc
xor
adc
cmp
mov
add
pop
ret
or
imul
cmp
xor
sbb
mov
movzwl
js
sbb
data16
ficoml
or
mov
fistps
addl
adc
add
mov
lock
inc
fcomps
popa
and
sbb
sbb
push
out
xor
xchg
das
add
add
pop
inc
mov
outsl
aam
jecxz
cmp
and
and
sbb
out
jae
push
jl
adc
mov
sbb
and
int
fldpi
cmp
cmp
and
sub
mov
mov
ret
add
mov
pop
push
rorb
aaa
add
or
mov
outsb
add
enter
int3
xor
fidivrl
jnp
push
or
pop
imul
or
mov
clc
mov
jae
orb
push
fnsave
xor
or
lcall
adcb
dec
pop
or
pop
mov
ljmp
xchg
shr
mov
mov
jne
cwtl
loopne
dec
push
jge
test
pop
push
xorl
inc
movsb
insl
mov
jge
or
roll
out
xor
jno
jmp
add
push
testb
or
ljmp
or
and
sbb
inc
xor
xchg
enter
in
dec
cld
movsb
sub
cmp
push
push
and
xchg
test
inc
in
sar
clc
les
pop
aaa
aas
jbe
or
cmpsl
add
inc
or
lock
aaa
lds
jae
mov
mull
andb
and
sbb
mov
fmull
mov
xlat
mov
sub
mov
dec
nop
sbb
inc
and
inc
jmp
sub
ret
jge
mov
mov
and
sti
mov
sbb
mov
mov
mov
dec
push
ljmp
mov
sub
sub
sbb
in
pop
add
adc
enter
sub
test
inc
fiaddl
cmp
les
dec
add
rol
stc
add
sbbl
leave
ss
or
and
fcoms
push
add
cwtl
hlt
pop
ja
xchg
in
aam
mov
sbb
mov
mov
arpl
jmp
leave
inc
mov
dec
aam
xor
or
and
aam
or
jae
pop
sub
fistl
fwait
nop
xchg
or
jns
fcmovnu
adc
cmp
cltd
in
mov
xchg
aaa
push
adc
fadd
lea
inc
jbe
test
loopne
mov
nop
sub
mov
adc
mov
fcomps
fdivs
rcr
fadd
add
mov
push
pop
cmp
or
sbb
stc
mov
pcmpeqd
decb
jmp
mov
jle
pop
xor
fwait
mov
leave
les
mov
adc
pop
jne
sbb
adcb
push
dec
cmp
enter
cmp
pop
cmp
aam
testl
mov
mov
push
push
call
pop
or
popw
ja
add
pop
dec
aaa
in
loopne
adc
adc
fmuls
xchg
xor
xor
sub
int3
inc
sbb
das
sub
and
cltd
fld
cmp
and
add
add
fcomps
push
or
cmp
ficoml
loopne
cmp
adc
cmp
scas
add
sub
jnp
rcll
adc
fwait
jo
ljmp
adcb
add
push
cmp
in
call
pop
or
aas
rolb
sbb
ret
cmp
stc
jp
xor
sbb
inc
or
cwtl
mov
inc
sar
int3
push
push
jecxz
inc
adc
cmp
jmp
shl
in
lcall
jae
inc
xchg
sub
or
jl
xchg
or
dec
movsb
mov
sbbb
inc
out
jmp
push
jbe
pusha
icebp
cltd
push
fistps
je
add
fcompl
push
mov
dec
jnp
rcrl
sti
les
pop
in
leave
loop
dec
xlat
popa
push
jp
and
es
add
push
add
mov
stc
lods
jge
push
subl
cmpsb
mov
sbb
cmpl
dec
mov
mov
add
mov
je
xor
jne
mov
adc
jmp
popa
mov
push
addl
sbb
cmp
rcl
push
cmp
pusha
repnz
sub
dec
lea
mov
xor
sbb
and
mov
adc
pop
in
cmpl
or
xlat
ss
add
and
lea
addl
mov
test
shlb
push
add
sbb
mov
pop
shlb
xchg
pushf
movsl
cmp
add
mov
jno
pop
sbbl
rolb
adc
call
test
adc
roll
and
xchg
loope
test
mov
test
popa
jo
jae
sub
sbb
adc
popf
or
ret
iret
pop
lock
and
add
push
scas
repz
fmuls
sub
lea
lock
adc
ss
mov
pop
or
or
inc
in
push
fidivrs
stc
add
adc
leave
or
sbb
in
xor
fdivrs
or
rcrl
and
jmp
mov
pop
int
mov
arpl
push
mov
push
xor
sbb
jmp
cmp
sbb
cld
lock
push
addr16
add
btc
es
rolb
out
imul
dec
repz
mov
or
jge
mov
arpl
xchg
mov
aam
push
push
lods
mov
pop
dec
add
pop
ja
stos
mov
js
push
mov
or
leave
adc
leave
pop
cmp
push
sti
jnp
js
fldt
in
xor
adc
rolb
daa
cld
ret
aam
xchg
cli
mov
cmpl
jp
jns
addr16
sub
in
ja
dec
xchg
or
test
or
movsl
test
nop
inc
or
sbb
pusha
inc
mov
add
sahf
or
aam
jne
adc
clc
pusha
jb
loop
dec
shl
push
clc
mov
out
mov
ret
dec
hlt
jae
ja
and
or
jge
je
sbbl
popf
push
outsb
in
sub
mov
loop
push
sbb
adc
add
and
push
inc
push
xor
xchg
add
jo
test
pusha
ljmp
pop
add
ja
and
pop
sub
pop
ret
sbb
jns
movl
shll
in
sbb
dec
add
jns
xchg
jmp
addr16
xor
adcl
lock
divb
sbb
xlat
in
pop
xor
in
or
or
icebp
adc
xchg
pop
ficomps
inc
test
mov
testb
inc
movb
jae
adc
mov
testl
fmuls
jle
adc
sbb
lcall
rolb
ret
dec
es
rcrb
or
in
jo
pop
add
push
xchg
pop
aam
ss
cld
adc
pop
fmuls
mov
cltd
jecxz
mov
in
popf
sub
ret
jae
push
mov
sbbb
or
aas
xor
pop
loopne
and
cmp
aad
sub
data16
ret
jb
rcl
rorb
je
addb
pop
fwait
imul
inc
sub
xchg
dec
add
inc
add
scas
mov
dec
pop
push
stc
outsl
or
xchg
call
testb
pop
nop
cs
and
ret
or
fcmovne
inc
imul
popf
stos
add
xor
call
jb
leave
loopne
shlb
xchg
loopne
fs
jno
mov
push
dec
or
or
aam
pop
cmp
or
nop
in
in
paddusb
xor
lods
daa
out
xor
outsb
ja
aas
sub
inc
andl
jbe
cld
addr16
dec
push
test
loop
fcoms
xchg
mov
ljmp
lret
in
insb
sbb
nop
or
js
call
push
mov
add
std
push
mov
out
pop
lea
dec
fdivrl
bound
je
cwtl
aad
or
mov
xor
insl
aas
cs
cwtl
cmp
outsl
pop
ret
shll
mov
dec
fs
fsubrs
xchg
mov
and
cmp
and
sbb
mov
jne
jae
add
cwtl
mov
out
mov
dec
std
sub
push
add
test
adc
xchg
sbb
pop
and
cmp
or
cmp
jp
xchg
pop
lock
add
and
cmp
in
inc
pushf
sbb
ret
mov
mov
mov
int3
jnp
xor
inc
mov
dec
dec
adc
or
or
pop
or
fsubs
add
add
cmp
or
xor
adc
xor
out
add
in
mov
fcoml
cmpsl
xchg
push
iret
outsb
dec
clc
adc
mov
test
call
mov
add
sub
fdivr
fsts
rol
pop
loope
fisttpll
jp
mov
out
sbb
clc
test
sarb
dec
jl
add
test
fstl
lea
ja
cwtl
sub
add
pop
or
mov
aad
mov
mov
xchg
cli
ja
cmp
mov
aaa
xor
imul
mov
lods
mov
or
sarl
or
or
imul
sub
jle
sub
in
clc
inc
test
sbb
cmp
jb
mov
ja
lods
rolb
or
hlt
mov
imull
mov
je
stc
xor
in
in
and
das
mov
add
mov
push
notb
lods
jb
movsb
adc
cmp
pop
rcrb
popf
ja
pop
sbb
push
sub
dec
insb
jb
push
add
out
cmp
and
lock
pushf
pushf
arpl
adc
push
and
jno
and
sub
cmp
ret
adc
mov
adc
shrl
and
gs
push
or
cmc
inc
testl
dec
dec
xchg
mov
cmp
mov
popf
loope
ds
outsb
push
add
stos
jb
insb
add
comiss
jmp
xchg
aas
cmp
cs
fldt
test
pop
lcall
push
loop
sbb
int3
cmp
mov
lods
xor
icebp
lea
add
mov
cmp
and
in
jne
sub
lret
test
jmp
xor
push
and
pop
push
adc
cmp
jo
add
mov
mov
push
sti
cmp
adc
mov
jnp
inc
jb,pn
jbe
ret
mov
sahf
nop
test
test
add
xor
ret
repz
cmpl
cmpsb
inc
mov
adc
and
add
push
cs
mov
inc
int3
roll
aaa
cmp
xchg
imul
imul
stc
push
jo
adc
and
ss
and
adc
cld
jmp
push
cmp
push
jb
push
dec
adc
sub
adc
cmp
mov
xor
shl
loop
add
add
and
inc
pusha
or
jecxz
xchg
ss
sti
les
jecxz
jge
out
insl
sub
movl
imul
adc
dec
lock
lret
mov
mov
push
scas
jp
sbb
loopne
sbb
cmp
push
push
loop
lds
pusha
movb
fadds
jmp
sub
pop
rol
and
push
hlt
daa
sbb
and
outsl
mov
add
add
add
cmp
test
xor
mov
outsl
fldl
xor
xchg
or
jmp
test
mov
xchg
lahf
mov
popa
call
add
or
dec
stos
cltd
lods
inc
lea
loope
jbe
adc
hlt
dec
call
cwtl
cld
mov
or
push
jg
loope
cmp
loop
enter
mov
mov
les
lods
push
lea
ljmp
lock
cld
jbe
pop
adc
jp
mov
pop
cmp
popa
in
bound
movsb
fs
lahf
dec
test
lock
adc
dec
pop
inc
jo
adc
jl
or
xchg
sarl
enter
or
stos
mov
xor
das
mov
inc
mov
jmp
jmp
mov
mov
mov
jge
popa
inc
adc
ffreep
jae
testb
dec
popl
push
xchg
xchg
xor
jb
sbb
lret
test
and
aam
jb
cld
dec
subb
cli
push
mov
std
sub
jmp
es
cmp
arpl
push
lea
aaa
xchg
jae
stos
add
lret
xor
inc
sar
dec
xor
push
cmp
xorl
or
add
mov
inc
aaa
cmp
pop
js
ljmp
out
and
sbb
or
movsb
lock
sub
bound
pop
push
and
loopne
shll
out
inc
call
gs
xchg
lret
std
rclb
dec
lock
jae
jl
adc
les
inc
or
ja
mov
jmp
mov
inc
clc
aad
sub
dec
andb
loopne
or
fsubr
pop
push
cmpb
cmpsl
sbb
sbb
adc
push
or
lock
adc
inc
mov
scas
fiaddl
mov
add
push
jno
xchg
xor
sbb
repnz
or
stos
mov
lock
cmp
lock
add
pop
jbe
cmp
push
in
adc
roll
rclb
shl
mov
and
test
adc
add
in
enter
adc
sahf
les
fstps
push
call
push
mov
call
pop
inc
dec
sbb
sub
movb
and
jmp
adc
loopne
sbb
dec
jae
inc
sub
pop
push
or
mov
sbb
cwtl
push
push
mov
pop
and
cld
invd
comiss
pop
test
clc
and
es
inc
sub
push
cmp
add
fnstcw
lds
jp
add
pusha
jp
jno
dec
dec
adc
xorb
andl
mov
and
mov
mov
std
xchg
mov
sbb
test
push
sbb
fwait
adc
nop
ss
or
xchg
push
push
std
adc
or
jle
lret
and
add
or
sub
or
cwtl
jbe
xor
jo
mov
or
adc
test
inc
es
add
jns
filds
sub
dec
jmp
sub
xchg
inc
sub
loop
pop
add
outsb
movsb
xchg
fdivrp
shrb
loope
sub
push
jp
inc
aam
sbb
jne
add
ss
dec
rcl
ds
hlt
push
pop
adc
sub
xor
dec
je
dec
rolb
and
sbb
mov
in
cmp
adc
or
shl
dec
dec
lcall
inc
outsl
int3
ret
aaa
gs
pusha
and
aas
rcll
jb
out
in
mov
add
inc
xchg
pop
invd
push
sub
repz
jb,pt
dec
inc
popa
lahf
push
inc
dec
add
xchg
mov
push
xchg
imul
jbe
and
push
sub
ret
shrl
ret
mov
add
stos
call
jnp
scas
or
inc
fsts
mov
cmp
aaa
jo
push
or
lock
jae
or
in
lock
sub
inc
or
lahf
and
adc
or
rclb
rcrl
jae
das
mov
inc
ss
cmp
clc
adc
fucomi
ds
scas
pop
mov
push
xchg
int
sub
push
cmp
dec
adc
add
add
scas
in
popa
pop
dec
push
lahf
sub
adc
pop
fisubl
lahf
sbbl
sti
mov
aad
fsubr
in
xor
dec
sub
aaa
popa
and
mov
std
jecxz
jno
inc
add
in
jl
clc
xor
jne
fcompl
push
sbb
fstl
ret
inc
or
lret
fistps
icebp
inc
and
sbb
sbb
cmp
jb
dec
or
sub
or
xor
aaa
std
add
and
lahf
or
ja
cmp
fstps
mov
cmp
add
pop
cltd
call
jecxz
push
xor
xorb
lock
lock
ret
ret
mov
sbb
adc
or
mov
inc
fidivrs
sti
xor
xor
in
and
in
dec
in
jnp
or
sbb
lods
and
bswap
adc
jmp
jmp
adc
lret
mov
ret
test
sbb
or
mov
xorl
mov
adc
push
xor
stos
adc
add
fcompl
cmp
lea
and
nop
jecxz
ljmp
xorl
adc
add
pop
cmp
adc
in
mov
leave
push
add
fwait
testl
adc
mov
data16
insb
push
shlb
push
outsl
rcrb
xchg
adc
dec
add
lds
jl
fistps
loope
jg
sub
ret
out
jae
mov
or
xchg
ficompl
lock
jae
aam
push
jmp
jae
test
xchg
pop
mov
inc
mov
cld
lret
repnz
inc
or
and
sub
pop
cmp
call
pop
jl
pushf
push
sub
adc
inc
int3
cltd
popa
sti
dec
je
mov
cmp
mov
int3
add
or
dec
dec
jmp
push
divb
lock
fsubrs
stos
ret
push
testb
or
je
adc
je
add
push
fs
int3
xor
xchg
aaa
pop
negb
les
or
sbb
push
imul
rolb
in
pop
ror
mov
stos
add
call
sbb
sub
mov
push
pop
sbb
mov
dec
add
sub
cltd
xchg
clc
xchg
jmp
inc
jge
nop
xor
ss
nop
outsb
xorb
movsl
inc
inc
inc
imul
adc
test
mov
loopne
movsb
lea
lea
pop
cmpsb
hlt
adc
pusha
insb
cmp
test
call
xor
pop
jb
or
movsl
imul
adc
lods
fists
rcr
into
adc
pop
js
jnp
popa
or
jno
push
fsub
xchg
sub
test
mov
sbb
cmp
jge
sbb
or
mov
test
ret
pop
jns
and
js
jb
xor
sub
cmpsb
inc
nop
push
idivb
xor
and
adc
mov
adc
pop
push
adc
inc
and
xor
into
or
cmp
test
push
dec
or
negl
js
daa
mov
adc
dec
lea
out
push
xor
dec
jp
mov
add
sbb
cmp
sbb
or
cltd
or
xor
push
add
cmp
fisubrs
pop
mov
and
adc
or
mov
inc
stos
or
jl
add
dec
jne
pop
inc
mov
add
and
mov
imul
cmp
pop
adc
jne
adc
adc
add
cli
push
in
in
push
push
rorl
push
inc
sub
push
pop
jne
mov
cmc
adc
shll
shll
jb
call
adc
sbb
clc
push
arpl
xor
jecxz
mov
adcl
and
add
sub
cmp
xchg
mov
leave
add
adc
dec
es
stos
add
lds
and
test
mov
sbb
les
scas
inc
lret
cmp
jecxz
sbb
xchg
sbb
andb
aaa
pop
aad
mov
lret
imul
or
mov
or
jmp
mov
aas
out
push
lods
push
mov
icebp
decl
inc
cwtl
fld
or
add
push
add
inc
mov
sbb
test
mov
xchg
add
xor
or
lods
mov
lock
jle
and
movsl
xor
or
lock
dec
mov
movb
shl
hlt
xchg
cmpsl
adc
sub
rolb
hlt
in
mov
mov
fists
in
adc
dec
jne
ja
push
cli
pop
cmpsl
loope
fildl
or
jmp
or
jo
loope
jno
loopne
sbb
rorb
jge
cmovno
shrb
dec
adc
adc
sarb
mov
and
in
in
lret
in
sbb
lock
push
aaa
adc
xchg
and
adc
push
adc
adc
mov
cmpb
je
or
or
adc
xor
test
inc
in
sub
sbb
push
outsb
mov
sbb
sbb
mov
testb
loop
add
or
cmp
cmp
outsl
in
jl
inc
dec
cld
fildl
adc
sub
fcoml
or
pop
sub
ljmp
inc
add
lock
mov
pop
push
js
outsl
loope
mov
xor
scas
and
outsb
and
sub
cmp
data16
rorb
je
rorl
inc
mov
xor
inc
fdivrl
mov
adc
inc
inc
mov
subb
sbb
push
mov
leave
and
inc
subb
inc
inc
es
sub
inc
inc
pop
adc
xor
cmp
andb
cmp
cmp
enter
sub
je
fdivrs
ss
mov
daa
sarb
or
enter
push
adc
push
lea
adc
push
jns
es
adc
xchg
pop
cmp
clc
mov
adc
call
add
in
es
push
pushf
push
sarb
insb
shll
arpl
or
add
in
fimull
jns
add
push
dec
in
les
mov
test
pop
dec
xor
cld
je
add
push
cmp
and
dec
and
les
enter
pusha
scas
cltd
ljmp
xchg
push
scas
inc
adc
push
clc
mov
push
push
jne
dec
mov
xor
jl
add
dec
cmp
xor
call
mov
add
add
add
or
dec
imul
cmp
cmp
movsl
lcall
popf
andb
sub
popf
imul
jmp
cs
sbb
call
adc
mov
popa
std
sti
in
rcrb
jle
push
inc
fstp
jne
fmull
insl
clc
fstpl
xor
pop
sbb
icebp
sub
inc
jne
inc
or
enter
in
or
repz
sti
outsb
push
rorl
push
mov
fwait
pushf
gs
ret
pop
mov
jno
xchg
popf
and
inc
nop
pop
pusha
mov
jle
clc
gs
push
rcr
add
mov
js
test
inc
mov
push
mov
xchg
mov
shlb
mov
orb
sub
cld
mov
pushf
adc
adc
cmp
daa
sbb
imul
mov
fimull
and
xchg
sbb
and
adc
cmp
imul
ljmp
jne
ljmp
adc
add
sub
dec
mov
sbb
mov
in
das
addb
push
mov
and
and
add
inc
mov
cmpl
push
sub
sbb
add
push
mov
in
lock
cli
ds
dec
ja
imul
add
mov
scas
fwait
scas
mov
loopne
aas
sub
mov
int3
mov
dec
cmp
shrb
sarl
sub
loope
cmp
fimuls
lahf
ret
inc
mov
push
xor
lcall
dec
inc
sbb
adc
cmp
sahf
inc
sbb
leave
mov
into
and
jecxz
test
jo
fsts
and
loopne
adc
je
mov
add
sbb
inc
jp
call
clts
scas
sbb
ficompl
rolb
pop
mov
pusha
pusha
xchg
cmp
out
jl
cmp
scas
mov
shlb
sub
fs
xor
fs
lods
pmaxub
cmp
add
xchg
sub
xor
data16
or
gs
cmc
add
inc
sbb
adc
or
sbb
ficoml
push
orb
xor
sahf
rcll
add
mov
mov
sbb
jg
and
fsubrl
mulb
stos
or
bound
je
or
je
xor
mov
fcmovb
sbb
adcl
push
daa
sub
sti
adc
push
push
cmp
inc
cmp
xor
or
xor
pop
adc
nop
push
repz
imul
pop
or
or
test
add
inc
aam
mov
lock
cmp
fwait
out
sub
iret
or
subl
ja
fists
stos
inc
enter
push
enter
enter
and
xchg
movsl
ljmp
inc
adc
setl
mov
daa
lock
cld
jl
rclb
jl
push
xor
cmp
stos
jmp
adc
adc
sbb
add
sbb
loop
jmp
inc
incb
jg
xor
js
mov
adc
jle
cmp
data16
aaa
sbb
sbb
loopne
lock
enter
ja
pop
xchg
bound
fs
faddl
add
or
lret
cwtl
xchg
pop
or
add
adc
inc
pop
sub
sub
cmc
or
push
cmpsl
pop
push
cmpl
aad
and
inc
jmp
push
mov
adc
and
or
loop
sub
adc
lret
addr16
jae
push
mov
or
pop
fmuls
in
out
jbe
call
xor
sub
icebp
call
inc
and
push
outsl
lods
jo
pop
cmp
outsl
fwait
int
sub
pop
add
call
les
or
mov
loopne
movsl
lods
test
or
call
xor
lahf
add
clc
lods
dec
jne
ret
inc
pop
dec
push
sub
and
loop
jo
popa
jo
push
ret
add
lea
test
push
scas
pusha
sub
pusha
and
or
stos
xchg
adc
xchg
inc
mov
push
icebp
cmp
js
jne
mov
sub
push
sti
xchg
adc
popl
push
js
push
lods
incl
pop
jns
sub
push
cmp
enter
mov
xor
add
inc
ret
test
test
sbb
xor
adc
and
sub
fadds
pop
in
mov
enter
xor
adc
andb
xchg
push
fidivrl
push
and
xchg
movsb
loop
pop
or
lock
xchg
or
pushf
cmp
cwtl
or
push
data16
mov
mov
adc
gs
movl
decb
enter
sbb
jmp
insb
add
sub
push
and
lea
dec
jmp
lock
addb
repz
sub
lock
fisttps
xchg
and
and
call
add
pusha
jbe
and
add
outsb
xchg
push
push
fwait
adc
sbb
adc
or
push
dec
pop
call
pop
inc
aad
scas
orl
fs
add
push
lea
cmp
insl
fldl
cmp
jle
xor
imul
add
cmpsl
xchg
insb
dec
add
sbb
lea
gs
lods
add
addr16
xlat
mov
or
scas
insl
pop
inc
ficompl
mov
fstl
xchg
mov
adc
cmp
jmp
outsb
add
xor
mov
adc
gs
hlt
inc
cli
adc
shrb
test
add
pusha
int3
popa
adcl
rcrb
dec
cmp
sub
addr16
push
jnp
frstor
mov
add
inc
push
push
mov
dec
add
daa
in
in
mov
mov
das
cmp
xchg
lea
sub
imul
shll
adc
mov
insl
jl
push
mov
jno
or
call
movsl
sub
sbbl
aad
jne
pop
and
push
inc
xor
out
sbb
inc
pop
lods
pop
movsw
in
adcl
shrb
rol
idivb
mov
inc
lret
clc
pop
addl
mov
mov
adc
js
in
sbb
add
cmpsl
xor
cmp
add
scas
dec
fisubs
fsubr
rorl
push
imul
out
jl
adc
xchg
dec
and
daa
enter
std
adc
icebp
mov
fstl
add
sarb
mov
xchg
es
push
popa
aas
lea
xlat
sub
push
or
push
shrb
js
inc
std
xchg
jmp
dec
mov
movsb
call
rorb
cs
or
add
adc
stc
aad
add
int
adc
sbb
aam
adc
or
enter
les
jmp
and
popa
push
mov
cmp
jge
int
test
mov
shl
jne
jge
clc
push
jmp
mov
push
and
pop
je
out
or
mov
in
inc
push
pop
cmp
rorl
sub
push
xchg
jl
jne
lahf
rol
cmp
sub
mov
add
ret
dec
add
movsl
and
pop
in
test
xchg
and
rorl
inc
add
xlat
rclb
sbb
outsb
repz
push
adc
cmp
inc
pop
mov
push
mov
push
jo
popf
nop
add
add
jno
push
les
das
es
xchg
movsb
add
fidivs
icebp
fucomp
jle
sahf
dec
roll
rcll
push
jne
imul
jmp
fnsave
aam
xor
and
push
push
and
shrl
in
shlb
and
nop
and
pop
inc
lea
sub
ret
pop
clc
enter
and
xchg
mov
sub
shlb
mov
loope
jmp
pop
mov
xor
mov
popf
faddl
fisubl
cmp
xor
adcl
fadd
xor
push
mov
gs
mov
inc
push
repnz
inc
inc
dec
sarl
mov
sahf
jmp
add
ljmp
int3
xor
jmp
dec
enter
mov
sbb
mov
in
sti
add
sbb
add
shrb
hlt
add
push
shlb
jmp
jmp
push
sbb
pop
bound
ret
pop
ss
bound
jecxz
sarb
adc
push
stos
enter
jg
and
dec
jp
mov
sub
fldt
bound
stc
add
sub
push
xor
jae
dec
or
daa
mov
ljmp
adc
sahf
jo
jne
mov
or
mov
pavgb
out
shlb
mov
stos
pop
xchg
stos
leave
imull
fdivr
xorl
movb
inc
jl
or
cmp
cmpb
sub
add
add
inc
in
ja
loopne
cmpsl
add
fdivl
fbstp
cmp
ja
rorb
jl
in
or
sbb
aam
or
mov
or
xor
push
sbb
mov
movsb
imul
push
jae
cld
jae
mov
mov
or
nop
sub
or
mov
mov
add
xchg
andb
inc
push
xchg
cmp
cmp
fsubrl
enter
push
xorb
outsb
imul
test
cmp
ret
out
fcomp
sbb
or
es
xor
add
xchg
fstps
mov
mov
mov
jmp
imul
les
xor
lock
or
xlat
mov
cmpsb
push
jecxz
adc
ss
pop
dec
clc
loope
or
movl
das
sub
daa
jecxz
loop
mov
jmp
sbb
mov
ficompl
pop
repz
movsb
jne
xor
cs
mov
fisubrl
das
sarl
xor
sub
aaa
cwtl
sahf
push
inc
adc
cmpsb
ljmp
add
xchg
push
or
adc
outsl
xor
adc
dec
mov
push
push
dec
xor
dec
cmp
dec
add
add
add
mov
mov
push
orl
mov
push
jge
bound
adc
je
fistps
mov
and
dec
ss
pop
adc
aam
cli
ds
les
cmpl
dec
mov
sbbl
lea
dec
mov
add
or
ret
out
je
cmp
cmp
lods
push
mov
mov
shr
lods
dec
cmp
lea
or
dec
push
jbe
xor
cs
push
call
push
add
inc
adc
add
call
xchg
push
outsl
sbb
inc
xchg
pop
inc
outsl
sbb
stos
inc
push
mov
jmp
std
fldcw
test
fcomip
in
sbb
outsl
mov
xchg
jbe
ret
cwtl
leave
mov
jns
and
jnp
orb
pop
popa
fstpt
xorl
popa
cwtl
gs
xchg
or
andb
cli
mov
cmp
aad
jb
adc
xor
jbe
fdiv
and
out
divl
mov
sub
mov
xchg
mov
and
adc
xchg
stc
inc
icebp
dec
adc
cmp
cwtl
fadds
imul
add
sbb
or
testl
insb
sbb
jnp
sti
mov
imul
leave
fldenv
or
sub
popf
or
push
test
sub
push
or
enter
aas
ss
or
iret
jmp
push
push
adc
in
push
cmp
call
and
xor
xor
sub
or
and
rolb
dec
cli
xchg
inc
push
mov
xor
xor
rorb
and
pop
call
add
call
add
inc
sub
arpl
add
sub
inc
mov
xor
incl
add
pop
std
cld
or
dec
add
add
jae
repz
stos
stos
je
outsb
enter
jno
pop
and
rolb
lods
add
and
bound
sub
push
enter
cmp
loope
add
mov
push
in
ljmp
popa
rorl
xchg
push
push
push
adc
pusha
outsb
add
mov
mov
inc
int
ret
sbb
add
mov
cmpl
pop
sub
in
aaa
sarl
fs
pop
dec
call
lods
and
clc
inc
sub
dec
fisubs
cmp
jae
addr16
popa
es
or
add
jmp
sub
adc
mov
shll
cmp
inc
and
pop
and
jo
inc
or
push
cld
mov
mov
lods
les
in
adc
mov
cwtl
add
mov
xor
stos
test
adc
mov
push
mulb
cmp
fnstcw
sbb
jmp
jns
mov
sbb
inc
inc
and
mov
ja
xchg
and
xchg
mov
add
push
clc
lea
push
imul
xor
sub
mov
fmuls
test
push
push
sub
add
gs
add
dec
sbb
inc
xchg
or
out
pop
inc
jp
add
add
push
jns
mov
pop
mov
rclb
push
repnz
ret
daa
jbe
xchg
add
test
subb
or
test
add
in
cmp
mov
cmc
jmp
xchg
mov
xchg
cmp
adc
subl
lahf
mov
sub
cmp
and
pop
jns
jno
cmp
movsb
pop
test
xchg
sub
imulb
mov
add
popl
cmp
mov
push
push
lret
or
push
decb
adc
pop
loope
and
jmp
pop
jnp
repz
lock
sub
data16
pop
aam
shlb
adc
pop
and
bound
mov
mov
sbb
inc
push
push
adc
sbb
jp
add
mov
mov
inc
cli
sub
call
ds
mull
jne
adc
leave
cmp
pop
mov
xor
adc
outsl
or
rorl
xchg
pop
push
leave
mov
jmp
ficoml
frstor
jg
fisubs
pop
sub
ret
ror
orl
mov
sub
lds
test
xchg
jno
pop
adc
pop
lret
push
and
xchg
sahf
test
scas
adc
or
push
jb
icebp
add
mov
or
shr
cmp
lea
sub
aaa
testb
jmp
add
cmp
nop
sbb
les
mov
xchg
adc
mov
js
cmovns
mov
adc
and
push
and
xchg
sbb
pop
test
sarl
or
add
mov
data16
insb
add
out
es
dec
adc
push
hlt
lock
insb
dec
inc
out
xchg
mov
sub
mov
test
test
adc
or
sbb
dec
xchg
mov
pop
and
jecxz
inc
push
lahf
or
sarb
inc
xor
outsl
das
je
shll
add
mov
ret
mov
mov
enter
clc
notl
and
cmp
push
mov
xchg
sbb
gs
or
pop
insb
mov
adc
push
fadds
and
jl
adc
cli
mov
insl
arpl
je
mov
scas
lds
fwait
cmp
jmp
mov
add
arpl
test
mov
mov
add
jae
mov
mov
test
add
or
adc
and
and
ss
xchg
sbb
sub
icebp
xchg
lds
or
std
loopne
cmp
add
popf
or
mov
mov
adc
movsb
inc
ret
aam
sbb
push
ja
cmp
inc
cmp
loope
push
pop
dec
or
mov
mov
imul
fisttpl
add
sub
jae
dec
inc
cmp
cwtl
mov
ja
inc
lods
cwtl
and
fs
decb
rol
sbb
add
int3
fadds
sbb
xor
pop
mov
fldcw
je
dec
cmp
push
xor
xchg
cmpsl
inc
pop
xor
adc
sbb
sub
mov
or
sub
xor
lods
lahf
sub
scas
sub
or
aas
lcall
inc
dec
dec
or
cs
add
xor
mov
xor
jl
or
mov
lahf
jne
aad
sub
or
xchg
fadds
xchg
add
mov
sbb
aam
in
sar
popf
jbe
cmp
popf
rolb
aas
shr
pop
negl
push
push
xchg
adc
push
push
add
shlb
sbb
call
sti
xor
fcoml
pop
push
sbb
pop
add
mov
or
dec
or
pop
call
push
xchg
pop
add
adc
test
sbb
mov
dec
ret
push
mov
rorb
mov
repz
adcl
and
mov
push
or
movsb
or
lret
nop
mov
sbb
xchg
out
mov
mov
shll
push
mov
pop
xor
ret
push
mov
and
sbb
pop
das
inc
imull
pop
inc
add
ret
and
push
adc
or
ljmp
and
jge
dec
pop
pop
inc
pushf
xchg
sbb
xchg
fwait
dec
and
cmpl
push
mov
cwtl
and
dec
aas
ret
or
movsb
mov
outsb
cmp
lea
jbe
test
mov
test
andb
and
outsb
inc
dec
adc
adc
push
push
dec
cwtl
add
jp
sub
sub
int3
mov
sbb
rcr
and
pushl
ret
inc
xor
cmpsl
ret
xor
pop
adc
jns
inc
je,pn
test
test
enter
mov
pop
fadds
ss
push
adc
test
add
mov
mov
push
jns
mov
inc
fildl
sbbl
js
inc
out
xchg
test
shl
mov
arpl
lret
enter
cmp
and
cmp
divb
add
mov
and
mov
rorb
xchg
sub
scas
cmp
cmp
mov
cmpsb
sub
test
jno
fmull
pop
mov
sub
and
xchg
adc
inc
jge
fdivrl
popa
inc
lods
aam
sbb
stos
adc
xchg
inc
cld
das
add
hlt
cmp
sbb
xlat
or
jmp
rorb
shrl
daa
addl
pusha
adc
lahf
fstpt
repz
push
inc
sbb
cmp
jne
push
adcl
sub
pushl
aas
andb
dec
push
jmp
sbb
imul
mov
bound
data16
pop
xchg
ret
pop
outsb
jnp
les
or
stos
aad
xor
cltd
push
push
daa
jo
push
mov
addl
lea
jmp
add
push
movsl
jo
sbb
sti
or
add
sbb
inc
and
test
adc
test
lea
and
inc
push
cmp
sub
mov
out
add
adc
mov
outsb
popa
xchg
mov
dec
mov
push
cmpsb
xchg
dec
adc
les
out
es
lds
cmpsl
mov
adc
xor
ret
cmp
jb
push
movsb
outsl
cld
cld
and
add
xorb
adc
rolb
fildll
movb
jo
jo
or
lea
dec
sbb
lret
and
lret
dec
lods
cmp
push
xchg
lods
test
sbb
popa
push
push
or
jae
xchg
orl
push
sub
cmp
mov
jae
aad
in
dec
mov
lea
xchg
cmp
mov
sahf
add
out
rolb
movb
add
or
jmp
push
pop
dec
or
push
pop
pop
cltd
sbb
inc
add
cmpb
cmp
test
adc
inc
outsw
xchg
adc
jmp
call
adc
adc
xchg
jne
sbb
dec
jmp
or
ret
xor
or
dec
popf
hlt
mov
xchg
imul
test
fwait
outsl
loope
outsb
push
jp
rclb
test
sbb
xchg
nop
and
push
push
imul
add
adc
cvtpi2ps
sbb
sbb
xchg
jno
inc
cwtl
rorb
xchg
adc
enter
lret
sub
nop
lcall
nop
mov
loop
popa
adc
cmova
jb
push
ja
jo
inc
adc
addr16
pop
push
gs
or
xchg
cmp
push
push
jb
stc
or
cwtl
or
push
shlb
ret
xchg
sbb
iret
shlb
or
adc
push
fistl
or
mov
dec
ja
inc
mov
push
shlb
adc
in
push
or
pop
stos
or
stos
inc
jge
orb
mov
pop
in
rorb
mov
fbstp
cld
test
mov
lods
push
dec
cli
or
fmul
and
cwtl
hlt
rcrb
adc
push
adc
push
mov
cltd
sub
jbe
mov
sbb
int
cmp
scas
pop
jbe
cwtl
sbb
mov
push
ljmp
cld
jb
xchg
incl
nop
add
push
repz
pusha
sbb
and
fbstp
adc
movsb
mov
inc
adc
jae
xchg
mov
mov
rcrb
insb
push
jmp
lret
enter
add
or
pslld
or
xor
push
push
jae
xchg
jp
cmp
in
push
pushf
mov
out
insb
dec
lds
push
push
dec
shll
push
pop
js
add
xchg
ret
inc
stos
pop
xor
xor
pop
ds
dec
jge
xor
or
cmp
je
cmp
or
or
jne
xchg
inc
outsl
dec
push
jne
lea
xor
sub
test
cmp
gs
mov
shll
mov
xchg
ss
or
in
cmp
sub
arpl
adc
pop
mov
nop
lahf
test
add
fsts
and
sti
jnp
inc
mov
push
jmp
mov
loopne,pt
and
add
and
mov
or
push
add
mov
fmuls
push
or
or
or
pop
ficompl
pop
cmpl
jne
push
push
negb
xor
xchg
testb
pop
subl
xchg
xor
subps
stc
stos
arpl
or
mov
and
or
test
cmp
or
push
add
shlb
arpl
xorl
loop
or
add
cmp
jb
leave
nop
sbb
sbb
sub
addb
je
push
divl
daa
and
movlps
add
pop
or
mov
add
push
cs
jnp
mov
pop
jae
adc
das
out
mov
add
cmp
xchg
sbb
or
lods
push
and
sub
stos
into
xor
pop
fwait
loopne
adc
lahf
test
adc
xchg
push
insb
in
loopne
xorb
or
call
adc
push
fprem
pop
xor
mov
xor
xor
or
xchg
mov
add
cmp
add
bound
xor
in
pop
sub
pop
cmp
stos
mov
or
push
pop
mov
push
ret
loope
outsb
dec
jne
sbb
cmp
xor
cmp
sahf
fsubs
mov
jae
or
inc
mov
push
bound
dec
lock
push
lea
aas
mov
test
in
push
xor
xchg
or
pop
add
jbe
inc
movsl
sub
push
jp
pop
lods
mov
cs
add
pop
jmp
mov
add
or
add
or
aas
cmp
add
xlat
push
inc
and
adc
xchg
add
mov
lcall
add
and
movsb
stc
mov
fwait
pop
xor
sub
cmc
sahf
clc
mov
mov
movsb
sbb
push
out
pop
inc
jg
adc
cmpb
pop
in
jp
out
and
imul
aaa
mov
cmp
testb
push
inc
loopne
test
push
mov
add
add
dec
inc
test
fsub
je
aas
pop
xchg
ficoms
add
dec
push
cmc
add
jmp
and
jmp
pop
sub
add
jmp
cmp
outsl
push
pop
adc
jnp
and
dec
mov
inc
mov
bound
insl
xor
and
sub
inc
xchg
dec
jp
ror
mov
bound
push
mov
jbe
insl
jb
inc
dec
sbb
mov
insl
lock
jmp
or
mov
not
cmpsb
adc
add
adc
pop
or
and
push
mov
jg
dec
orl
dec
add
xchg
dec
scas
xchg
mov
add
xor
lea
test
pop
dec
pop
dec
scas
or
enter
jg
inc
push
inc
cs
in
lahf
push
push
cmp
pop
mov
pop
and
movsb
inc
cmp
mov
jle
xor
lock
arpl
adcl
into
pop
je
and
add
ret
mov
incb
cmp
jae
or
jae
shld
shl
ret
mov
pop
pop
mov
loop
xchg
imul
cld
xor
cmc
or
in
jp
pop
sub
shlb
fisttps
pusha
and
je
or
inc
insb
mov
mov
icebp
sub
leave
dec
mov
cs
add
bound
add
movsl
or
jecxz
sbb
ret
mov
jg
sbb
dec
add
insl
pop
xor
mov
call
insb
adc
push
or
jbe
add
and
sbb
xchg
lea
repz
and
xchg
pop
cmc
in
ljmp
aam
dec
into
pop
lods
fcoms
mov
mov
mov
mov
push
and
scas
add
daa
jl
sbb
push
xchg
insl
frstor
add
sbb
loopne
push
cs
and
movsl
adc
in
loopne
adc
nop
sahf
repz
movsb
outsl
insb
cmp
push
adc
sub
fcompl
mov
enter
and
stos
xchg
sbb
addr16
cs
sbb
fcomps
add
enter
mov
add
add
jmp
dec
test
pop
push
jae
cmp
mov
adc
sarb
scas
cltd
sbb
adc
cmp
fildll
mov
and
dec
and
movl
cmpsl
pop
jbe
mov
add
push
adc
push
shrl
mov
jo
sub
loopne
hlt
stos
add
clc
inc
cs
hlt
jae
add
outsb
and
mov
pop
cmp
xchg
push
add
sbb
dec
loope
fisubrl
mov
rcl
push
es
mov
sub
xchg
mov
les
xchg
jno
push
sub
cltd
mov
sub
pop
adc
mov
in
or
push
pop
scas
fs
inc
test
cmpsb
xchg
je
repnz
mov
cs
jmp
cld
test
addb
xlat
jno
mov
mov
pop
andl
inc
sbbb
aas
sbb
mov
call
jbe
sbb
enter
mov
push
or
jmp
cmpsl
mov
jne
addr16
and
cmc
sbb
add
xor
pop
sub
add
bound
push
ss
lea
push
mov
or
inc
insb
insl
pusha
std
lret
loop,pn
ds
je
lret
cmp
add
sbb
and
movsb
sbb
push
cmc
or
mov
add
mov
sub
jo
fbstp
mov
push
xor
sbb
shll
or
adc
add
mov
mov
push
mov
add
mov
orb
and
je
mov
xlat
adc
pop
movsl
inc
test
sbb
fcmovne
ds
inc
jmp
and
jne
jbe
mov
or
jb
and
sbb
cmpsl
xchg
or
cs
cltd
nop
mov
add
and
sub
jo
xlat
bound
add
xchg
add
pop
add
dec
xchg
push
insb
add
ja
jmp
push
push
or
call
mov
out
imul
and
mov
sbb
movsb
jo
outsb
jl
push
and
test
jnp
jl
sbb
inc
das
imul
cmp
lods
sbb
inc
or
push
nop
mov
inc
lret
dec
ret
adc
fistpll
cmpsb
imul
push
in
in
mov
int3
rorl
jmp
xor
cmp
adcb
mov
inc
out
fisubs
loop
add
push
ficoml
push
call
and
fists
xchg
sub
sbb
or
push
je
lcall
cmpsl
sub
adcb
imul
rorb
push
fsubr
test
into
les
sbb
bound
cld
mov
into
push
pop
xor
or
es
add
push
inc
cmp
inc
int
jmp
sbb
push
lret
sub
cmpl
scas
or
fildll
cmp
xchg
jno
inc
enter
push
out
rorb
add
pop
sar
jae
sbb
int3
xor
add
popa
repnz
jmp
dec
mov
and
push
pop
mov
sbb
xor
mov
mov
loope
cmp
sbb
xor
stos
rolb
adc
cmp
out
cmpl
dec
fucom
popa
fistpl
xorl
mov
jmp
adc
inc
jmp
add
adc
mov
sub
es
out
jmp
adc
data16
add
adc
or
adc
addr16
icebp
inc
dec
fcomps
in
arpl
inc
mov
cs
lret
push
lock
lods
les
not
and
dec
movl
sbb
cmp
xchg
sti
or
scas
rorb
add
inc
cmp
cmc
and
fdivs
popa
fmuls
dec
outsl
adc
popf
mov
sbb
frstor
jmp
xorl
dec
fmuls
and
sbb
xor
xchg
push
icebp
dec
and
xor
nop
push
and
xor
sbb
repz
enter
enter
dec
icebp
in
lret
xor
jae
xchg
in
lret
and
loope
dec
and
adc
enter
mov
xor
xchg
into
mov
add
xor
cmp
or
or
push
bound
and
add
mov
pop
sarb
jnp
add
push
xor
loope
push
add
push
and
add
inc
sbb
jno
pop
lock
clc
dec
jne
mov
xchg
and
in
enter
inc
lock
in
scas
xor
jae
inc
inc
inc
insl
cwtl
cmpsb
imul
inc
sbb
jecxz
add
add
fstl
pop
aas
je
mov
sub
loop
sar
jb
mov
lock
jae
cmp
and
test
ret
xchg
xorl
xor
insl
lret
hlt
filds
xor
adc
cmp
cmp
inc
bound
mov
je
je
jecxz
rclb
jp
and
xor
and
lds
clc
dec
adc
in
sbbb
xor
xchg
or
mov
jns
cs
das
loope
push
shlb
nop
dec
scas
xchg
adc
and
add
cld
sbb
mov
cmpsl
xchg
jg
and
dec
and
or
je
jle
sbb
inc
fisubs
adc
daa
hlt
sbb
mov
and
adc
add
aad
xor
mov
sub
sbb
ds
outsb
adc
dec
add
and
push
cwtl
addr16
sbb
in
rolb
shlb
cmp
in
push
add
push
or
pop
add
pop
mov
leave
add
loope
xor
mov
add
pop
notb
mov
mov
jp
adc
jbe
ret
dec
and
mov
mov
int3
mov
es
repz
add
jmp
xor
jmp
fiadds
jmp
sbb
rcrl
pop
xor
jmp
int
popf
imul
adc
push
inc
fisubrs
sbb
into
in
fs
adc
add
pop
cmpsb
in
push
aas
test
mov
inc
mov
cltd
jns
ret
and
pop
vmwrite
inc
mov
fisubrl
shl
sub
xchg
hlt
js
and
loop
mov
mov
cmp
jge
or
push
pop
pop
jl
jmp
nop
or
dec
jecxz
adc
mov
mov
test
add
cmp
aam
ds
jle
push
cmpb
jl
or
or
test
mov
push
sub
les
adc
insb
rcll
mov
mov
sbb
xorl
xchg
loopne
mov
inc
push
xchg
clc
in
in
sbb
stos
inc
add
add
imul
sub
aas
call
fmuls
cmpsl
pusha
jbe
aaa
adc
mov
pop
adc
lock
es
lret
out
push
stos
dec
aas
xchg
outsl
shlb
mov
push
ss
or
es
mov
push
mov
mov
mov
pusha
or
or
add
add
xor
inc
jb
insl
jg
call
mov
fiadds
mov
in
add
sub
jecxz
insb
sbb
jg
xor
mov
and
inc
addr16
enter
ret
and
or
jl
imul
push
mov
jne
xchg
mov
mov
and
jmp
pop
sub
push
inc
mov
inc
fcoms
or
jg
sbb
jl
test
adc
faddl
mov
push
push
or
mov
add
jb
cmp
mov
movsb
xor
dec
pop
imul
cmp
andl
lods
mov
or
sub
xchg
imul
adc
sbb
jp
movsl
popf
adc
add
mov
jge
xorb
mov
adc
jg
je
outsl
lea
rclb
in
in
xor
loopne
inc
jecxz
push
or
pusha
sub
push
in
jl
adc
adc
fisttps
jl
jecxz
psrad
sub
cmp
insl
arpl
stc
fldenv
jo
push
fsubs
push
xor
addl
lret
xor
mov
push
sahf
sub
hlt
call
or
neg
sbb
or
cmc
xor
inc
pop
test
leave
push
fs
filds
cs
adc
mov
movsb
and
test
adc
add
mov
int3
cmp
jecxz
incl
pop
and
ds
aas
sub
enter
call
icebp
test
push
jns
adc
or
sbb
fs
add
mov
or
in
cltd
imul
popa
fs
shlb
pop
or
test
push
add
ret
adcb
aas
adc
adc
jno
div
jne
js
call
inc
aam
xlat
inc
add
xor
pop
and
or
js
ret
fiaddl
jg
cmp
inc
xchg
mull
sahf
and
xor
aas
test
cs
adc
mov
cs
mov
hlt
xor
cmp
test
xchg
push
xor
pusha
xchg
jno
lret
add
and
push
cmpsl
push
daa
subl
add
adc
mov
pop
sub
pop
dec
jg
xchg
icebp
push
mov
fisubrl
daa
push
xor
daa
adc
pop
fcmove
add
push
xchg
movswl
push
cltd
fcoml
adc
push
push
pop
test
jae
lcall
or
in
sub
push
lock
in
or
call
push
dec
femms
or
dec
mov
divl
mov
incl
dec
ret
pop
pop
pop
mulb
push
and
or
pusha
jo
cmp
xchg
xorb
flds
cmpsl
subl
sub
mov
cmp
ret
nop
push
aaa
mov
sti
pop
and
lock
or
enter
adc
dec
sbb
or
pop
inc
cmp
push
pop
cwtl
call
loop
subl
in
test
rcll
imul
cltd
inc
orl
sbb
push
or
xchg
cmp
jo
push
pop
fmul
test
sub
jo
add
mov
add
inc
mov
sub
xor
push
ss
sub
add
loopne
clc
mov
or
cs
push
adc
movl
fldenv
outsb
aas
imul
mov
jl
and
mov
mov
hlt
push
mov
enter
and
dec
jl
or
pop
push
xchg
gs
adc
xchg
and
pop
ss
sub
leave
sbb
cmp
leave
xor
xor
xor
sbb
sub
leave
xor
inc
sub
leave
xor
xor
xor
xor
push
nop
sub
leave
dec
pop
dec
sub
leave
xor
dec
add
xor
xor
xor
je
sub
leave
cmp
add
xor
nop
mov
test
enter
mov
and
add
mov
inc
add
enter
pushf
mov
and
mov
mov
movsb
and
push
jne
or
or
add
and
test
or
dec
lea
xchg
sbb
or
xchg
mov
leave
and
and
and
gs
jb
inc
xor
and
jb
cmp
and
jb
inc
dec
inc
jb
inc
dec
push
push
and
jb
pop
pop
jb
inc
jb
fs
insb
jo
and
jb
js
pop
or
imul
inc
andb
mov
xchg
add
add
cwtl
pushf
mov
movsb
test
add
push
aas
mov
insb
sbb
ds
inc
cmp
and
lcall
ss
mov
push
cmc
cmp
mov
scas
movsb
mov
mov
mov
jnp
call
lahf
insl
and
or
out
push
gs
jl
test
pop
push
dec
mov
dec
test
cmp
lea
insb
jo
adc
in
mov
mov
gs
mov
fsubl
add
and
lret
and
mov
pop
and
xchg
and
push
and
ret
mov
dec
or
shrl
adc
add
pop
push
push
jo
test
pop
shlb
mov
mov
or
inc
or
fidivl
fisttps
pop
push
inc
iret
add
and
test
xor
jg
shlb
mov
mov
cmpsb
sbb
inc
add
jecxz
popa
sub
daa
int
cmp
imul
mov
add
adc
xorb
pop
dec
dec
dec
pop
pop
or
pop
xor
insl
adc
sbb
or
dec
or
and
insl
fs
mov
mov
call
adc
mov
das
add
mov
dec
pop
orl
push
adc
pop
and
or
jne
push
imul
int3
adc
adc
xor
sbb
adc
sbb
sbb
and
and
and
push
sub
sbb
sub
andl
dec
xchg
sub
push
sbb
subl
push
subb
adc
jg
adc
lcall
orl
or
and
ja
add
sub
sbb
jl
add
adc
xlat
cmp
pop
inc
out
xor
sbb
and
push
inc
pusha
xor
lods
dec
icebp
stc
dec
xchg
scas
jae
dec
push
push
sbb
add
push
xor
add
in
pusha
arpl
add
push
and
out
push
test
sub
sbb
add
xor
fsubrp
push
orb
bound
push
js
jnp
dec
loopne
or
rcl
jmp
cwtl
cmp
jbe
lods
pop
xchg
fists
add
call
inc
or
repnz
adc
mov
and
mov
out
xor
loopne
add
or
sub
pop
mov
dec
aam
and
cmp
and
mov
rcl
add
inc
inc
xor
xchg
das
shlb
or
mov
sbb
push
icebp
icebp
icebp
cmp
fdivl
loopne
jno
shlb
fcoml
jmp
enter
add
add
jo
das
pop
into
leave
popf
pop
sbb
jo
adc
push
bnd
xchg
out
mov
fwait
or
aas
test
inc
sbb
faddl
shll
loop
add
jg
test
orb
pop
jmp
out
loop
movsb
or
push
or
dec
pop
push
jl
cmp
mov
and
or
xlat
and
and
aam
rorb
bound
dec
dec
xacquire
pop
fdivrs
shlb
push
dec
adc
out
mov
das
dec
movl
and
mov
movsl
cmp
or
fistpl
push
and
cwtl
pop
insb
jne
add
or
and
repz
lock
inc
mov
sub
mov
leave
and
push
add
jg
test
jle
or
lea
ja
add
jb
test
fstl
cmp
pop
mov
add
jnp
fwait
dec
arpl
ss
or
mov
icebp
or
je
or
mov
push
push
push
lock
mov
enter
js
push
or
push
push
imul
pop
xor
xchg
mov
mov
mov
cmp
jmp
or
stc
add
in
jmp
fsts
inc
push
shll
xor
mov
in
adc
test
imul
sbb
sub
and
subb
fstpt
mov
inc
shr
loope
push
xor
inc
push
adc
loop
subl
rol
add
aas
cmp
adc
outsb
jbe
and
inc
push
inc
imul
push
dec
inc
sbb
xchg
sbb
bound
pop
jge
or
bound
bound
push
dec
sbb
push
std
pop
xchg
mov
adc
in
push
add
in
aam
cmpb
or
or
andb
inc
jmp
jle
jmp
clc
add
jo
ficompl
nop
imul
movsl
xor
xchg
jo
in
sbb
sub
adc
sub
sbb
push
push
movsl
xchg
insb
push
jae
and
jno
add
add
inc
dec
sbb
pop
loop
dec
mov
sbb
loopne
bound
add
jl,pn
rcrb
pusha
sub
test
lea
push
inc
push
xchg
clc
mov
popf
add
push
mov
and
push
arpl
push
and
or
and
mov
mov
int
add
xchg
or
mov
sub
jmp
out
push
nop
pop
dec
mov
push
push
mov
mov
ficoms
rep
push
mov
xor
test
mov
fnstenv
lea
mov
lods
dec
fldl
testl
pop
icebp
fsubrp
xor
xor
mov
movsl
lods
mov
leave
add
inc
or
out
cli
bndstx
popa
in
ljmp
jae
adc
and
push
aaa
sub
pusha
push
mov
sub
or
lods
xorl
insl
fs
adc
push
inc
popa
ds
mov
pop
adc
jno
sbb
inc
cwtl
inc
sub
ljmp
mov
xchg
jo
push
or
dec
push
mov
add
test
mov
cwtl
push
stos
ds
mov
pop
or
mov
jnp
push
pop
lds
xorps
lret
xor
and
mov
mov
leave
add
mov
lds
outsl
cwtl
mov
in
js
adc
inc
xor
loope
pop
enter
adc
push
xor
mov
ret
dec
or
push
and
xor
or
sbb
fcompl
je
aas
dec
iret
adc
or
mov
test
pop
dec
add
mov
inc
cmp
cmpsb
cmp
and
push
jmp
subb
jo
incl
pop
and
mov
push
ret
sub
sub
clc
adc
inc
and
cmpps
and
fists
insb
dec
bound
push
subps
mov
cld
test
cld
daa
lods
js
push
inc
lea
pop
xlat
and
inc
sub
rcl
adcb
lock
sbb
andb
insb
insb
adc
dec
or
sbb
pop
sbb
fs
xor
sbb
shlb
lock
arpl
lret
inc
add
add
or
sub
sub
xchg
subb
pop
add
fcoml
cltd
or
or
adc
in
or
je
pop
je
popa
jl
subl
std
xor
add
add
jmp
mov
mov
arpl
adcb
addr16
inc
nop
inc
push
cmp
xor
shlb
add
and
push
jb
jg
shrb
xchg
rclb
out
add
mov
mov
jg
mov
mov
adc
test
xor
inc
in
inc
adc
loopne
cmpsl
icebp
add
aam
ljmp
mov
and
jecxz
addr16
lock
aas
popa
jl
cld
or
xchg
std
data16
clc
add
mov
sbb
inc
jl
inc
jg
stc
movsl
jnp
sub
xor
mov
xchg
stos
lods
idiv
clc
pop
mov
int3
dec
jnp
shlb
jle
imul
adc
aad
mov
or
mov
rorl
popf
jg
outsl
xchg
add
and
inc
jb
mov
aas
add
leave
push
repnz
push
dec
or
aas
adc
xor
sbb
aas
push
cmpl
pop
push
inc
mov
push
pop
cmp
mov
push
mov
pop
or
or
adc
movsl
or
inc
and
xchg
inc
repnz
mov
add
movsb
adc
adc
and
mov
rolb
jo
mov
push
mov
sbb
or
or
nop
hlt
or
cld
push
or
sub
jg
push
and
xor
xor
mov
pop
in
cmp
nop
les
lea
test
dec
xchg
aas
or
insb
fcoml
mov
dec
jmp
cmp
subl
jl
pop
repz
mov
lea
mov
xor
test
sbb
imulb
ja
push
sti
loope
in
inc
call
or
ret
inc
cmp
addl
mov
cmp
sub
rcll
popl
mov
mov
push
sub
loope
xchg
shr
push
push
cs
imul
in
sbb
xchg
add
sti
cmpsb
xorb
mov
push
lods
out
pop
add
mov
jb
add
lret
jmp
inc
sub
testl
or
dec
and
outsb
test
sbb
inc
xor
jge
xchg
push
in
enter
fs
pop
pop
or
pop
imul
orps
sbb
and
ret
add
or
xor
cmp
test
pop
or
mov
pop
fcmove
and
xchg
fcompl
shl
xorw
mov
or
fldl
or
clc
lcall
lret
push
fildll
test
dec
xchg
in
jbe
dec
mov
test
cmpsb
adc
jmp
adc
xor
or
or
inc
loope
mov
in
rcl
mov
sub
sbb
dec
ss
pushf
dec
fsubrl
jge
xor
arpl
lods
pop
mov
sbb
jb
aaa
xorb
sbb
fdivrs
or
sub
xor
incb
rcll
push
mov
sbb
les
or
mov
pop
das
or
lock
data16
mov
rclb
inc
sbb
and
and
fstps
cmp
imul
cwtl
nop
in
fs
mov
or
add
mov
sbb
jb
jb
mov
dec
sub
scas
sbb
adc
mov
aaa
je
je
mov
leave
jo
or
mov
mov
je
imul
mov
cli
cld
jnp
addb
ja
mov
popl
les
lock
les
adc
cmp
and
adc
inc
adc
inc
mov
mov
add
int3
orb
sbb
xor
inc
lret
push
popf
daa
pop
dec
adc
inc
sub
loope
dec
sti
sub
in
or
mov
mov
ja
aaa
movsb
sub
dec
stc
adc
jno
ja
dec
iret
or
iret
add
add
jle
dec
imul
sti
mov
adc
mov
dec
ret
loope
lods
or
cmp
or
adc
and
adc
fldenv
or
add
sub
imul
sub
loope
xchg
sub
sbb
adc
test
inc
std
sbb
adc
movsb
sbbb
nop
push
les
ds
test
or
nop
sbb
les
pop
and
push
sbb
aad
int3
cwtl
sub
cmp
inc
push
push
js
bound
push
sbb
popa
daa
pop
fldcw
or
popa
sbb
das
cmp
nop
xchg
jmp
fs
movsl
les
or
xchg
xchg
frstor
dec
les
add
push
jb
and
int3
xor
xchg
push
xor
push
nop
nop
faddp
inc
adc
sub
cwtl
sbb
fadd
out
fucom
outsb
dec
mov
mov
sbb
test
imul
xchg
push
aad
push
leave
push
pusha
mov
or
test
out
xor
pushf
jmp
adc
adc
jle
and
push
fists
jmp
sub
pop
out
sahf
andb
or
pop
pop
mov
lahf
adc
push
pop
or
pusha
jnp
cmc
or
arpl
inc
mov
inc
rolb
xchg
and
mov
enter
out
inc
test
enter
or
dec
adc
inc
or
adc
bound
es
push
xor
mov
or
jo
push
leave
xor
adc
or
xor
pop
mov
cld
push
adc
jl
scas
bound
lret
jge
movb
cmpsl
push
or
push
or
jmp
adc
pushf
orb
sbb
dec
sbb
sub
dec
jne
mov
pop
dec
push
daa
jbe
dec
loope
push
mov
adc
test
mov
nop
sbb
out
cmp
jl
fists
fbld
pop
movsl
movsb
cwtl
imul
jbe,pt
or
scas
dec
cwtl
jge
push
jb
jmp
lea
push
cs
pop
movsb
sbb
xor
je
jge
xchg
orl
xchg
mov
mov
shr
inc
and
ja
fsubr
mov
hlt
inc
sub
dec
cmpsl
in
sub
inc
and
and
out
xor
cmpsl
cmp
js
jnp
jae
das
mov
push
cmpsb
frstor
stos
jnp
scas
jo
sbb
xchg
mov
and
pop
movsl
clc
push
mov
sub
pusha
testb
testl
push
and
sar
jg
mov
mov
inc
jnp
je
stc
pop
add
pop
xchg
into
gs
mov
xchg
inc
add
and
push
and
mov
add
in
fnstcw
arpl
xor
or
mov
xor
int
mov
lret
fisubrl
add
add
add
daa
cwtl
cs
cmp
xor
dec
fmuls
jbe
jno
add
add
fisttpl
scas
sub
push
orb
fists
push
imul
cmpsl
scas
loop
xchg
push
scas
or
mov
xor
dec
push
iret
mov
push
je
pushf
adc
les
xor
mov
inc
imul
scas
mov
imul
lahf
test
adc
push
ljmp
faddl
es
scas
mov
push
jg
xor
data16
es
ja
adc
test
sbb
inc
add
inc
add
cmp
jne
sub
or
mov
rorb
dec
or
adc
in
add
sub
mull
in
movsl
in
xchg
mov
test
lods
incb
call
xor
add
js
add
push
jge
sbb
mov
enter
mov
imul
xlat
push
and
push
test
adc
movsb
rcrl
or
gs
push
inc
inc
lahf
push
inc
xchg
adcb
in
sbb
popw
xchg
lds
hlt
fadd
jmp
dec
pop
rclb
imul
in
enter
xchg
enter
mov
shrb
shlb
movsb
mov
push
pusha
nop
rolb
iret
sbb
lret
loope
insb
rcrb
out
inc
dec
fisubrs
jl
sarb
nop
imul
jp
enter
rolb
test
xor
inc
cmpsb
xor
and
or
jg
push
int3
loopne
mov
ja
jmp
push
cmp
dec
dec
sub
out
aam
adc
lods
or
xchg
shrb
xor
adc
test
dec
mov
and
xchg
xchg
bnd
rcrb
neg
rclb
add
or
jle
cld
jnp
sbb
cld
pusha
add
jl
push
add
add
jo
scas
popa
in
jns
pop
cmp
push
in
mov
mov
aaa
push
adc
add
loopne
xchg
scas
mov
xor
and
mov
in
loopne
pop
xchg
jns
push
and
test
jmp
test
xchg
in
sbb
add
jecxz
das
mov
ret
shlb
testb
jns
or
sbb
imul
imul
pop
bound
dec
add
lods
dec
add
sub
adc
pop
pusha
xchg
sbb
adc
mov
movb
xorl
xor
or
mov
dec
mov
lock
dec
nop
sbb
popf
rclb
add
and
movb
aas
dec
les
mov
pop
in
ret
stos
insl
fsubrs
movb
inc
movsb
movsl
pop
std
imull
aaa
in
jno
pop
push
xor
das
cmp
add
ss
inc
imul
pop
in
pusha
ljmp
int3
jmp
fldl
push
mov
pop
andb
or
xor
cmp
nop
add
push
mov
xchg
pop
shlb
arpl
arpl
xor
add
cmp
cmp
cmp
lock
adc
imul
das
call
daa
xchg
fs
pusha
arpl
mov
lods
add
jo
or
mov
fldcw
add
sbb
add
dec
or
adc
and
aam
inc
xchg
mov
mov
add
push
xor
sbb
adc
andl
call
adc
loope
xchg
sbb
outsl
in
insl
push
push
sbb
xor
sub
mov
mov
in
and
adc
enter
mov
enter
add
rorb
and
sbb
hlt
lds
pop
ror
add
sbb
sub
out
or
ljmp
js
iret
xchg
dec
add
xchg
xor
in
orb
icebp
in
cld
or
or
push
inc
movl
and
sub
dec
pop
push
arpl
adcb
lahf
shlb
lds
xor
popa
xchg
andl
sbb
adc
addl
nop
xchg
mov
pop
mov
adc
mov
pop
pop
sub
pop
out
insb
mov
and
jmp
push
ja
or
pop
mov
or
les
hlt
leave
lods
mov
push
xor
cmp
adc
adc
in
push
add
pop
mov
inc
mov
pop
xchg
pushf
xchg
xchg
les
rolb
add
push
incb
out
add
adc
fadds
sbb
roll
push
dec
arpl
mov
or
mov
mov
mov
testb
dec
dec
enter
adc
mov
adc
out
fdivrs
cld
mov
push
outsb
push
mov
ret
pop
xchg
lea
xlat
adc
push
inc
loopne
jg
sbb
sub
mov
sbb
aaa
mov
and
add
adcl
pusha
enter
pop
and
adc
sbb
dec
sub
jns
sbb
mov
add
mov
pusha
cld
sbb
push
clc
jge
sub
dec
sbb
sub
lods
xchg
pop
jl
arpl
push
cld
pop
xchg
test
lahf
ss
sbb
pop
ss
or
aam
test
and
fistpl
push
jo
cld
icebp
outsl
inc
lret
lock
and
cmp
adc
enter
sub
dec
adc
push
xchg
lods
jp
mov
aas
and
pop
ret
lret
or
js
push
jnp
sahf
pop
imul
loopne
mov
lods
xor
sahf
jmp
dec
dec
push
mov
and
push
fnstcw
push
push
add
add
pushf
or
push
push
pop
push
jns
fistpll
or
add
insl
adc
adc
xor
xor
adc
out
test
mov
outsb
push
fwait
repz
lods
rorl
jmp
lahf
ret
xor
push
or
stos
aaa
fwait
and
or
cwtl
adc
xor
push
and
test
les
mov
jbe
or
fsubrl
xor
es
stos
sbb
inc
add
dec
bound
int3
sbb
adc
or
mov
cwtl
mull
cmp
jbe
mov
shrl
mov
pop
in
jle
mov
mov
sbb
cmp
in
hlt
leave
clc
xor
mov
dec
sar
push
adc
mov
add
pop
jecxz
push
loope
pop
add
and
lea
add
xchg
pop
dec
loope
cli
shrb
mov
ret
ja
das
xchg
outsb
jecxz
daa
xor
dec
and
dec
add
movsb
dec
stos
and
or
out
jecxz
js
ja
sub
andl
and
inc
insl
jmp
or
mov
inc
sbb
mov
in
and
popa
inc
and
aaa
addl
jns
dec
add
xor
mov
fcmovnb
ds
inc
fcoml
push
stos
dec
dec
mov
xchg
xor
mov
aam
aam
scas
pop
leave
aam
jmp
and
rclb
mov
sbb
add
adc
pop
sub
int3
aas
lcall
jo
les
dec
and
xor
add
push
lret
cmp
pop
mov
mov
inc
jbe
cmc
lock
xor
and
dec
lods
mov
lock
mov
rcrl
roll
sbb
loope
jno
fs
lea
sub
add
mov
ficoml
and
lods
test
or
cmp
aaa
cwtl
cmp
repz
loop
int3
les
sub
pop
xchg
inc
and
pop
aaa
sbb
mov
sbb
dec
movsl
mov
pop
jae
dec
pop
daa
or
push
or
ret
daa
or
mov
and
shll
dec
faddp
and
pop
aaa
sti
sub
xchg
mov
or
jecxz
inc
add
or
mov
xor
aad
mov
cmpsl
pop
cmpsb
imul
cmp
and
and
mov
jo
or
pop
enter
or
fidivl
imul
or
push
mov
shll
xchg
lahf
movsl
and
inc
add
adc
or
imul
mov
xchg
push
add
bound
hlt
cld
mov
or
push
pop
test
inc
mov
or
shll
aad
mov
nop
xchg
aad
insb
adc
cwtl
adc
jbe
mov
movsb
test
adc
jns
hlt
and
arpl
pop
push
test
sbbl
popa
loop
int3
push
cmp
inc
movsb
ret
les
mov
dec
or
cmpb
mov
jne
inc
xor
loope
es
pop
or
adc
adc
mov
js
add
sub
icebp
pusha
cmp
sub
pusha
pushl
je
xor
sub
sahf
scas
fmulp
fmull
dec
xor
mov
push
xor
ja
mov
sub
sub
xor
ret
into
pop
or
dec
xchg
jmp
mov
push
sbb
into
ja
adc
adc
enter
add
add
in
xor
test
xor
sbb
cwtl
lahf
push
movsb
mov
pop
outsl
jne
cltd
push
mov
sub
inc
or
add
or
xchg
inc
add
push
arpl
loopne
arpl
fstp
dec
sbb
jge
push
insl
inc
and
test
lods
sbb
mov
adc
aam
sub
xchg
es
mov
sbb
mov
jns
int3
mov
inc
rcr
jno
pop
and
dec
aaa
test
sub
inc
movsb
xor
xor
outsb
into
xchg
aam
test
cmp
mov
loopne
ljmp
jb
subb
sub
lea
dec
loope
nop
lahf
adc
mov
rcrl
scas
ffreep
mov
lea
in
cmp
rclb
inc
jnp
lock
cmp
je
sub
cmp
sbb
and
roll
add
test
adcb
add
sbb
movq
jmp
popa
xor
add
add
mov
push
pop
fcomps
scas
mov
mov
xchg
adc
cmp
test
fdivr
sub
mov
ss
dec
jmp
jmp
push
pop
in
jg
stc
jmp
subb
mov
mov
mov
pushl
or
mov
jns
sbb
push
cmp
incb
add
cmp
adc
out
jne
dec
jne
xor
sbb
out
adc
adcb
fldcw
xchg
fistpl
pop
mov
fisttps
loopne
and
je
or
je
out
push
loope
aaa
cmp
dec
add
notb
je
jmp
add
stc
push
sbb
dec
sarl
dec
mov
sub
adcl
orb
inc
xchg
sarl
cmp
sub
arpl
xor
sub
adc
pop
sub
in
inc
pop
repnz
cmp
lock
dec
sub
push
pop
or
inc
pushf
xchg
mov
mov
test
test
ficoml
sbb
xor
lea
data16
add
cmp
xchg
dec
jns
loopne
push
mov
stc
pop
loopne
rcrb
or
adc
stc
jge
stos
mov
maxps
cmp
cmp
aas
aam
test
add
rclb
and
stos
push
les
enter
aas
and
rclb
adc
mov
gs
xchg
pop
lds
xor
xor
xor
jl
gs
mov
push
jbe,pn
mov
or
push
loope
dec
push
shlb
jae
mov
test
mov
xor
add
inc
push
fisttpl
jne
mov
movsb
inc
js
shl
in
push
loopne
mov
dec
aas
in
loop
clc
xchg
mov
lret
pop
shrl
movsl
int3
and
loopne
jecxz
jl
fcoml
add
call
repz
and
imul
cmp
pop
js
popa
lea
ret
sbb
add
ds
push
inc
adc
test
or
dec
xchg
add
cmp
xchg
movsl
add
mov
mov
movsb
aad
sub
imul
jecxz
add
adc
aaa
arpl
addl
sub
rcrl
inc
jg
mov
mov
xchg
pushf
ret
in
bt
movsb
shlb
mov
cmp
mov
fstpl
sub
loop
adc
out
ret
popa
popa
out
pushl
out
call
repnz
mov
pop
push
test
movsb
or
add
cmpsl
sbb
div
repnz
xor
jecxz
arpl
es
jl
scas
aam
mov
cmp
and
pop
fs
mov
cmp
sbb
hlt
rcl
lods
scas
push
and
inc
jecxz
jg
pusha
jns
mov
push
dec
xchg
testb
mov
ljmp
ja
cmp
sahf
jbe
rcll
sbb
orl
movsb
xlat
ds
add
sbb
movsl
adc
dec
adc
in
push
iret
ret
repz
push
call
and
jecxz
push
jmp
aas
inc
or
aam
pop
pushf
jne
push
mov
and
sbb
jbe
sbb
push
dec
lret
and
pop
inc
and
adc
pop
or
dec
cmp
mov
test
adc
dec
jl
add
inc
add
mov
out
sbb
pop
xor
cmpl
pop
push
xbegin
in
stos
push
or
cmp
in
mov
adc
leave
and
in
into
fdivrp
xor
pushf
add
lcall
sahf
mov
mov
ja
clc
je
pusha
fldt
adc
lea
add
mov
aas
fwait
xor
sbb
pushf
into
cltd
aaa
xchg
movsb
shlb
adc
loopne
inc
aas
mov
ss
dec
je
or
fimull
or
fcmove
jnp
adc
mov
xchg
push
lods
adc
xchg
lods
push
es
pop
xchg
hlt
rclb
pop
jmp
xor
cmp
inc
xor
movsb
clc
push
outsb
pop
fmuls
iret
mov
fisubs
loope
push
movsb
imul
sbb
add
lods
xchg
xchg
cmp
adc
pop
add
rolb
mov
imul
js
mov
cltd
xchg
inc
add
push
xchg
cmp
xor
aam
cmp
fdivs
mov
test
pop
ljmp
cwtl
shrb
mov
leave
jne
andl
popf
rorb
subb
shll
sbb
and
sub
loope
in
cmp
imul
pop
add
fdivl
sub
imul
mov
mov
adc
incb
xchg
dec
imul
dec
shlb
push
std
hlt
and
jne
or
jecxz
xor
out
je
mov
xor
mov
leave
and
inc
pushl
add
js
sub
push
cmp
test
mov
clc
imul
and
in
jno
fwait
cli
fwait
xchg
xchg
clc
fwait
negb
xor
cmp
sbb
jno
mov
or
inc
mov
jno
stos
je
adc
inc
iret
ret
cmp
mov
adc
popa
inc
lock
inc
add
bound
jecxz
cmp
cltd
bound
jmp
in
in
cs
jle
int3
sub
subb
popa
jge
adc
inc
jns
imul
jns
adc
add
lea
mov
fadd
stos
pop
bound
imul
divb
cwtl
ss
ret
into
sbb
int
cmp
iret
mov
inc
and
mov
mov
adc
mov
adc
pusha
mov
int3
add
sbb
sub
pop
call
je
insl
fwait
xor
imul
add
repz
popl
push
cld
rcrb
adc
hlt
sbb
std
sbb
leave
pop
add
cmp
movsb
pop
inc
call
mov
add
add
sub
push
mov
jnp
inc
cwtl
add
cmp
jle
mov
aaa
out
jmp
loop
cltd
cmp
jns
dec
in
pop
add
aad
ficoml
or
jp
lcall
cmp
cmp
add
or
dec
sbb
scas
add
xor
nop
mov
push
add
jb
mov
add
add
int3
jne
fisubrs
mov
or
or
mov
mov
mov
gs
sbb
lcall
jl
xchg
adcb
adc
ret
mov
sbbl
or
call
or
inc
jecxz
or
mov
cmp
mov
push
inc
lods
jne
movsl
or
pop
mov
mov
or
mov
xchg
add
jno
adcb
arpl
xchg
sub
fidivrs
je
cmp
sbb
decl
sbb
push
mov
sbb
push
push
cmp
push
push
mov
gs
adc
sbb
and
leave
pusha
pusha
mov
in
push
adc
and
xchg
pop
or
aas
in
cld
pop
sub
push
xor
jno
sub
enter
dec
sbbl
push
shlb
addb
pop
push
mov
rorl
ficomps
decl
mov
sahf
mov
inc
loopne
cmp
push
mov
xor
lds
jecxz
sbb
sbb
cmpsl
xor
js
cmpsb
je
outsb
ret
dec
adc
jp
movsb
mov
or
ret
add
fsub
xchg
mov
add
mov
pop
in
cld
xor
and
push
pop
cmp
inc
add
jmp
rolb
push
cmpb
cmp
and
gs
arpl
and
add
mov
add
inc
adc
adc
mov
nop
stos
mov
ss
pop
ror
or
mov
cmp
mov
in
xor
int3
inc
inc
inc
std
hlt
clc
es
xor
dec
imul
lds
xchg
mov
sbb
cli
maxps
inc
push
cmp
fs
and
add
mov
xchg
jbe
fs
dec
lods
lods
jecxz
mov
add
push
inc
pop
and
daa
adc
sbb
sub
mov
xor
push
mov
nop
daa
sti
lock
icebp
add
mov
and
je
int3
cmp
sbb
adc
jns
sub
jnp
add
add
add
aam
xor
mov
push
jl
sub
lahf
dec
and
cmp
mov
xor
in
nop
inc
es
les
jae
pop
mov
lret
inc
and
lods
mov
cmp
xchg
inc
jp
mov
sbb
pop
sar
sarl
mov
and
jmp
add
add
add
cmp
cmp
icebp
leave
jecxz
cmp
ret
sbb
icebp
dec
or
enter
imul
mov
mov
lock
imul
mov
add
mov
or
dec
push
pop
inc
inc
xor
xchg
dec
xchg
movl
movsb
sub
xor
fildl
sbb
mov
xchg
xor
aam
mov
sbb
les
cmp
pop
xor
rolb
std
add
or
push
pushf
jle
hlt
mov
jmp
inc
jmp
cmp
aad
out
lret
les
adc
inc
and
aaa
push
aam
nop
push
movsl
lds
inc
pop
inc
dec
in
mov
gs
cmp
jg
cmpb
and
push
or
call
mov
cmp
mov
hlt
dec
xor
dec
test
loopne
nop
adc
fbstp
roll
data16
imul
inc
js
std
xchg
add
push
add
and
push
adc
pop
jmp
cmp
js
xchg
ds
mov
inc
lds
sub
into
add
xchg
test
push
push
clc
mov
jo
pop
push
inc
subb
je
lahf
mov
ss
jmp
repz
imul
mov
leave
or
xchg
les
xor
sub
pop
aaa
test
shl
sbb
movl
and
cmpsb
je
cli
lock
mov
fisttps
inc
in
add
jmp
mov
push
repnz
sbb
sub
jbe
popa
test
ret
or
adc
push
mov
sbb
add
or
xor
jmp
pop
lret
sbb
mov
scas
addl
pop
and
out
fidivs
nop
stos
punpckhwd
loope
jmp
push
lock
lea
in
mov
xor
neg
xor
inc
pop
fsubrs
mov
adc
push
popa
cmp
add
mov
inc
cmp
mov
dec
inc
mov
inc
adcb
push
movsb
subb
push
or
pop
sbbb
scas
dec
or
cmp
jecxz
dec
subl
jbe
rorl
mov
loop
imul
or
jne
dec
insl
jno
inc
shr
xor
push
cs
xchg
mov
cmp
or
lahf
xor
das
imul
enter
and
sub
enter
xor
cmp
enter
inc
dec
dec
enter
push
push
pop
pop
enter
pusha
fs
enter
jl
enter
test
enter
pushf
enter
mov
enter
mov
mov
rol
int3
enter
rcl
fcomp
enter
loopne
call
enter
cld
xchg
xchg
xchg
out
mov
or
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
and
sub
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
inc
inc
dec
dec
xchg
xchg
xchg
xchg
push
push
pop
pop
xchg
xchg
xchg
xchg
pusha
fs
xchg
jo
js
xchg
xchg
xchg
xchg
addb
nop
xchg
cwtl
pushf
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
mov
xchg
rol
int3
xchg
xchg
xchg
xchg
rcl
fcomp
xchg
xchg
xchg
xchg
loopne
call
xchg
lock
clc
cld
push
inc
sahf
sbb
or
mov
or
jmp
hlt
je
std
add
cwtl
or
lcall
push
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
jmp
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
decl
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
incl
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
call
xchg
mov
mov
or
or
and
or
adc
lcall
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
test
incl
movsl
in
lahf
xor
mov
js
stc
ret
test
xchg
sbb
lcall
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
frstor
sub
rorl
popa
mov
into
pop
cmp
pushl
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
jmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
or
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
call
mov
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
cmp
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
lock
jo
lret
pop
or
adc
call
imul
push
js
or
push
addl
inc
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
inc
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
cmc
out
add
outsl
jb
popa
je
and
imul
jae
jb
outsb
je
arpl
push
je
aaa
aas
mov
arpl
xor
arpl
int
fdivl
popa
insl
push
sbb
out
ds
insb
imul
incl
push
add
negl
and
fistpll
dec
sub
inc
jb
cmp
and
insl
or
jg
dec
lret
pushl
outsb
and
sbb
sub
je
jo
jle
fbld
imul
inc
jo
sti
gs
gs
and
pop
testb
push
popaw
imul
fimuls
gs
jae
fwait
outsb
sbb
jle
adc
bound
or
ja
cmp
inc
jb
inc
sbb
pop
sub
inc
movq
add
repz
imul
add
cmp
sbb
and
jle
jo
popa
xor
cmp
dec
jne
jl
and
and
es
dec
gs
push
add
lods
negb
stc
dec
pop
mov
std
pop
push
pop
push
inc
sub
sub
mov
cwtl
lods
or
jbe
add
cmp
dec
inc
dec
dec
push
inc
xor
shll
inc
insb
pop
jno
xchg
or
fbstp
push
add
dec
jae
movl
gs
js
fistpl
popa
inc
daa
cmp
inc
mov
andl
jmp
sub
push
mov
lds
sub
mov
add
adc
xor
xchg
xor
insb
push
adc
fs
add
sub
cmp
aas
xor
mov
cmp
shl
pop
inc
inc
dec
inc
inc
inc
inc
popa
data16
femms
ficoms
sub
xor
cmp
and
push
bound
gs
lock
mov
pop
dec
push
pop
push
inc
mov
sub
inc
sub
adc
xor
or
cmp
ds
and
dec
adc
pop
sub
mov
lret
bound
sub
insb
and
jmp
imul
or
pop
xor
in
daa
popa
subb
jo
data16
ret
mov
mov
jge
inc
aaa
mov
jae
xlat
mov
ja
clc
push
shll
jns
sti
cwtl
pop
or
xor
push
inc
mov
inc
inc
push
inc
inc
inc
push
push
push
mov
jnp
push
repnz
dec
inc
pop
dec
xlat
mov
inc
inc
movsl
mov
jne
inc
pop
insl
inc
push
inc
addl
inc
sti
jne
add
test
push
cwtl
sub
cmc
sarl
lods
sbb
jns,pn
call
loope
push
scas
call
data16
aaa
andl
dec
bound
mov
fs
cmp
or
out
arpl
jge
pop
jne
push
cmp
cmp
sbb
insl
push
arpl
cmp
cmpsb
mov
push
mov
add
inc
add
mov
mov
sub
cs
adc
outsl
scas
in
iret
and
das
icebp
dec
and
dec
cmp
call
and
jg
jmp
shrl
sbb
and
insb
stos
jae
add
dec
cwtl
in
jbe
jo,pn
out
bound
jae
inc
mov
mov
add
fstl
push
fs
sarb
sbb
daa
and
lods
xor
inc
scas
inc
jbe
lds
push
pop
outsb
xor
push
adc
push
arpl
test
jae
push
or
cmpl
pop
dec
imul
shl
ret
lea
sub
aaa
arpl
jne
dec
dec
inc
xchg
gs
jae
ret
adc
pop
jo
add
bound
ds
imul
repz
mov
adc
add
add
add
add
xor
and
cmp
pop
or
aaa
xor
push
push
pop
push
and
add
in
pop
add
pusha
push
add
int3
out
mov
inc
add
or
xor
sbb
mov
in
sub
push
jno
insb
jno
aaa
adc
je
add
outsl
inc
push
inc
jae
in
daa
sbb
inc
mov
push
push
jg
pop
xor
cmp
inc
lods
mov
es
daa
ljmp
bound
gs
mov
mov
loopne
popa
mov
popf
and
push
lret
add
mov
xor
mov
bound
or
ja
xor
jp
pusha
xor
cs
cs
jae
pop
push
insl
jne
inc
sub
mov
mov
addr16
jb
jns
outsl
shr
inc
sbb
pop
sub
jnp
les
inc
sub
xchg
loopne
push
popa
je
jl
pop
mov
ja
in
jmp
mov
add
or
sbb
jmp
add
pusha
adc
pop
js
cs
jo
mov
inc
cs
push
inc
lds
add
dec
and
fcomps
pop
mov
daa
push
adc
adc
or
add
xchg
push
dec
je
sbb
test
insl
iret
out
add
cmp
adc
xorl
and
call
jp
jnp
imul
mov
arpl
test
fnstsw
mov
insl
xchg
lahf
sahf
in
inc
das
jns
imul
jp
xchg
mov
iret
stos
or
lea
lock
pop
inc
dec
push
pop
push
outsl
fmull
inc
dec
inc
inc
push
lea
dec
push
push
xor
data16
cmp
pop
xchg
shrl
dec
add
aas
dec
jae
ja
call
inc
inc
je
sar
sbbl
inc
push
dec
roll
fstpt
arpl
xor
push
dec
inc
daa
dec
mov
inc
push
lds
push
dec
inc
daa
dec
dec
arpl
xorl
pop
push
inc
and
dec
or
inc
xchg
pop
inc
and
cs
js
je
insb
xor
jo
sub
push
push
inc
in
popa
ss
pop
push
push
sub
push
push
xchg
insb
js
mov
outsb
jbe
push
xchg
jbe
mov
xor
popa
pop
sub
imul
sbb
sbb
gs
ds
push
jmp
push
rcr
push
mov
sbb
dec
dec
inc
sbb
ja
dec
inc
and
xor
adc
shrd
imul
sbb
mov
cmp
jnp
or
add
ja
jno
imul
inc
adc
cmpsl
rcll
jnp
dec
jns
inc
cmpsb
arpl
xor
scas
inc
or
shrl
mov
and
xor
out
pop
pop
ds
ljmp
fcomps
out
push
inc
lcall
xor
inc
aaa
insl
and
inc
dec
pop
pusha
pop
sbb
xor
das
imul
add
aaa
scas
jae
sbb
mov
cmp
push
cmp
pop
push
cmp
jns
mov
mov
repz
xor
fdivl
shll
fs
or
add
push
sbb
hlt
lret
pop
add
pop
je
mov
push
insl
rcrb
inc
sub
icebp
outsb
daa
pop
push
push
fs
sbb
sti
add
outsl
js
bound
ja
inc
addr16
push
lahf
lds
inc
pop
mov
xchg
and
sub
fdiv
les
lret
data16
sbb
inc
jo
push
cmpsb
sbb
insl
mov
arpl
sbb
sbb
movntq
adc
sub
mov
roll
inc
sub
dec
push
cmp
outsl
jg
push
mov
scas
fists
gs
das
sbb
mov
movsl
jne
adc
mov
jae
data16
pop
fnstsw
adc
xchg
arpl
fdivrl
push
jp
fdivrl
jp
lahf
arpl
push
xlat
addr16
mov
outsb
fs
mov
jae
fstps
jo
shr
jne
ss
stos
ds
inc
push
insb
inc
daa
addl
imul
popf
dec
mov
imul
movsb
outsl
movsb
xchg
xchg
jae
mulb
js
add
icebp
aam
insb
push
setl
cwtl
in
add
gs
mov
adc
dec
push
pop
cmp
arpl
loopne
jne
mov
sub
mov
in
pop
pop
push
dec
sbb
imul
xor
inc
outsl
out
and
aaa
and
add
and
popa
cmp
lds
mov
dec
pop
xor
push
and
bnd
outsb
jp
gs
jmp
int
popf
sub
pop
insb
daa
addr16
xorb
enter
iret
gs
fadd
int
arpl
add
ret
adc
add
adc
xor
xchg
mov
jbe
daa
jne
mov
inc
ficompl
lahf
and
add
fisubl
lods
cmp
pop
dec
add
jno
xlat
insl
mov
inc
inc
fidivrl
fs
lods
call
addr16
hlt
push
sbb
lcall
pop
fs
jb
arpl
pop
xchg
das
xchg
daa
mull
addr16
lods
add
xor
jbe
pop
popa
xchg
or
xor
xchg
in
dec
bound
jno
outsb
pop
adc
push
in
sbb
and
jae
daa
hlt
dec
dec
lock
or
lds
jb
fimull
dec
sti
xchg
cmp
pop
insb
cmc
daa
movl
mov
mov
jl
data16
xlat
ret
pop
daa
arpl
addr16
in
insb
insl
xor
sub
xor
or
arpl
das
in
sbb
dec
jbe
push
cmp
mov
in
popa
das
gs
fisubrl
dec
mov
daa
outsb
pop
xor
test
or
jo
je
inc
cmpsb
inc
mov
push
je
pop
daa
jae
popa
lock
and
imul
daa
daa
sub
or
add
add
jmp
out
aaa
inc
scas
lods
std
daa
and
cmp
pop
push
dec
inc
push
add
mov
cmp
adc
in
in
stos
and
inc
dec
push
dec
dec
inc
add
jne
enter
insl
insl
cmp
add
dec
jns
outsl
scas
and
jns
add
fs
or
push
dec
pop
inc
idivb
test
dec
outsl
jbe
fcoms
pushf
dec
arpl
adc
sti
je
addr16
mov
dec
jne
orb
cmp
inc
popf
or
jmp
inc
test
ja
aaa
fadds
adc
mov
jbe
xchg
mov
jbe
jbe
fnstsw
sahf
mov
ja
push
inc
stc
sbb
jae
push
push
jne
dec
and
mov
outsb
pop
dec
inc
ds
ret
fildll
jo
or
push
ja
popl
sbb
push
push
push
scas
or
data16
outsb
jl
cwtl
cmpsb
mov
or
add
insb
jp
addl
ror
or
clc
in
mov
lea
enter
dec
ret
insl
jns
push
pop
out
ret
cmc
push
ja
sbb
inc
pushf
insb
jle
insl
cmp
jg
xchg
inc
fwait
je
cmp
sbb
fcomps
xor
aas
cmp
and
xor
mov
jl
test
push
sbb
orb
in
jg
cltd
inc
add
or
sbbb
fs
xor
xor
sbb
inc
ja
test
xor
sbb
in
adc
add
in
fwait
int3
adc
sub
ficoml
insb
jae
adc
mov
mov
mov
add
aam
add
inc
inc
dec
pop
cmp
insb
outsl
cmc
push
test
jae
arpl
add
arpl
fs
mov
rcl
mov
jbe
int
or
push
push
mov
inc
js
jp
aaa
push
inc
push
jp
je
push
gs
sub
mov
xchg
sbb
int
js
popf
rcr
push
xchg
adc
lods
ja
push
int
adc
xchg
mov
inc
mov
xlat
dec
push
inc
fdivrl
xlat
fidivl
mov
fiadds
test
jge
jns
pop
outsl
shrl
add
fildll
xchg
sub
sub
dec
lock
add
sbb
ret
loopne
cmp
or
pop
sbb
and
sub
pop
addr16
mov
jae
out
fldcw
push
and
arpl
fcoms
mov
pop
mov
pop
or
fstpl
adc
sub
add
ja
pop
stos
adc
adc
push
or
xor
adc
sub
dec
jbe
pcmpgtd
fisttpl
jbe
jae
in
pop
jo
jns
sub
jg
in
adc
or
jle
outsl
addr16
lds
jo
pop
dec
dec
inc
push
mov
mov
daa
and
pop
outsb
pop
dec
test
iret
pop
xor
aaa
add
cmpb
inc
push
sti
ja
bound
add
inc
dec
push
jg
push
xchg
add
mov
decl
ss
mov
lahf
call
dec
pusha
add
xchg
and
add
call
fiadds
xchg
push
out
and
std
int3
inc
fs
mov
insb
jo
scas
je
xchg
shlb
or
jl
lock
ja
xchg
adcb
adc
jb
in
xlat
xchg
push
dec
inc
push
inc
addr16
hlt
decl
or
pusha
fiadds
dec
inc
dec
push
mov
mov
xor
sub
add
or
enter
xchg
outsl
pop
pop
in
inc
les
int
fs
ds
out
pop
movsl
xchg
and
xchg
cmpsb
movsb
lods
dec
jnp
sbb
nop
inc
movsl
or
ret
mov
dec
rorl
pop
jo
mov
and
pop
pop
int3
jo
mov
or
test
adc
xlat
decl
loopne
sbb
aaa
jo
cwtl
xchg
cwtl
dec
rclb
test
jb
push
mov
xor
xor
andb
adc
pop
inc
xchg
sarb
incl
mov
orb
dec
cltd
cltd
icebp
mov
inc
or
das
jp
add
cmp
cmp
mov
lods
dec
repnz
push
and
or
punpckhdq
mov
xchg
push
push
jae
sbbl
jbe
mov
add
seta
xor
push
int
xor
xor
xor
mull
add
xchg
pusha
push
mov
sub
add
sub
test
pop
fdivrs
int3
loopne
jg
xchg
add
mov
fstpl
xor
mov
xlat
daa
ljmp
imul
popa
jo
pusha
push
pop
or
lock
dec
outsb
jae
enter
xor
sbb
or
dec
int3
xor
xor
inc
orl
js
push
out
add
mov
nop
loopne
push
add
push
in
or
data16
pop
xor
rcr
xor
ret
adc
xchg
ljmp
cmp
add
jl
mov
ja
mov
or
add
cld
ja
inc
jl
jge
inc
inc
outsl
or
movsb
decl
loope
add
and
and
icebp
das
icebp
push
sub
outsl
jae
jae
pop
rclb
sahf
pop
popa
arpl
aam
int3
loopne
push
pop
mov
aaa
dec
push
dec
dec
dec
inc
lods
inc
mov
daa
je
inc
bound
pusha
dec
inc
sbb
test
fcompp
outsb
lock
movsl
loopne
sbb
js
and
scas
push
jo
rcll
mov
mov
inc
jns
jb
pop
mov
add
dec
inc
push
inc
cmpsl
inc
rcll
inc
pop
gs
xor
add
sbb
cwtl
imul
jae
dec
outsl
pop
push
movsl
mov
repz
sub
les
xchg
add
das
js
push
icebp
cmp
push
push
popa
fistpl
inc
dec
push
jno
push
sbb
mov
aaa
inc
cmp
jg
dec
gs
push
fs
inc
push
push
fucomi
or
push
stc
packsswb
outsb
pop
dec
mov
jb
imul
jns
jae
cmc
popf
mov
js
sub
enter
inc
lock
ja
xor
push
lods
je
sub
jl
ficomps
or
popa
jbe
lret
cmp
and
ja
aaa
pop
dec
inc
popl
inc
inc
push
adc
in
pop
or
fmuls
lret
xchg
pop
sub
pop
add
mov
mov
add
mov
mov
leave
adc
add
or
mov
push
incl
pop
rclb
test
add
es
sbb
fsubl
arpl
sub
inc
push
or
mov
or
imul
sub
push
fldl
sub
loopne
or
je
into
and
jmp
lret
push
sub
mov
jp
shlb
loopne
loope
jl
mov
das
xor
xor
xor
pop
dec
dec
popf
movb
adc
popa
jl
inc
cltd
sbb
inc
mov
mov
insb
cmp
sub
leave
notl
sbb
insl
popa
js
pop
cmp
lea
xchg
loop
subb
push
jns
mov
dec
mov
popf
jo
push
jno
mov
icebp
lods
cmp
scas
inc
mov
mov
inc
dec
push
and
and
repnz
lods
fldl
std
imul
jcxz
jecxz
mov
adc
xchg
adc
push
je
fisubrs
cltd
lea
ljmp
inc
testb
push
pusha
push
mov
pop
mov
adc
or
or
push
push
dec
push
dec
push
inc
xor
mov
pusha
sub
pop
std
cld
cmovne
push
dec
push
sarl
dec
outsl
imul
sbb
and
cmp
inc
pop
push
mov
jg
addr16
mov
and
inc
inc
push
cmp
mov
push
aaa
inc
icebp
dec
inc
push
dec
das
or
fnsave
mov
mov
pop
jbe
adc
xorl
or
pop
and
inc
dec
adc
jnp
dec
xor
add
inc
bound
aaa
or
xor
xchg
push
add
jg
and
inc
je
inc
or
push
nop
inc
pop
and
inc
and
bound
cli
add
and
xor
das
or
and
unpckhps
add
and
and
xorb
rorl
dec
push
das
pop
clc
hlt
adc
mov
jae
jge
das
push
cmp
push
aas
jae
adc
push
test
inc
xor
outsb
adc
add
es
daa
or
xor
mov
mov
or
andb
imul
adc
imul
push
sbb
pop
shl
fwait
cmp
neg
scas
add
mov
jb
jo
in
add
ss
sbb
dec
insb
cld
and
arpl
xor
push
gs
sahf
leave
je
or
or
movsb
push
xchg
loope
dec
inc
dec
push
clc
or
or
roll
cmp
sub
addr16
adc
push
bound
popf
dec
or
mov
pushf
mov
jbe
mov
aaa
adc
and
inc
aam
add
xchg
pop
push
mov
xchg
jno
xchg
push
imul
ret
outsb
inc
sbb
aad
or
inc
dec
inc
push
movsb
loop
cmp
push
fwait
inc
out
mull
in
hlt
insb
or
adc
mov
xchg
xor
and
dec
sub
insb
fimull
enter
outsb
popa
jo
je
add
mov
sub
dec
push
inc
cmp
xchg
inc
pop
clc
push
cld
inc
js
sbb
popa
or
xchg
dec
outsl
jae
and
addb
mov
cmp
sbb
jns
sarb
mov
pusha
sbb
out
and
mov
jnp
jae
je
sub
and
adc
in
lret
dec
push
push
fstpl
les
jns
lret
pop
add
jo
outsl
or
aam
orl
sub
ds
add
clc
cmpsl
jo
divps
and
dec
pop
adc
add
sbb
addb
std
and
push
mov
sub
test
or
dec
pop
adc
jne
sub
mov
outsl
loope
xchg
inc
xor
out
push
enter
push
fwait
pop
jb
push
popa
mov
mov
sub
and
cmp
out
dec
inc
cmp
daa
sbb
icebp
and
test
mov
sub
jo
cmpsl
mov
mov
nop
xchg
addr16
sti
inc
inc
inc
pop
dec
inc
push
xchg
xlat
mov
or
push
addr16
adc
mov
add
insb
mov
rorl
imul
mov
adcb
xor
push
push
inc
push
flds
push
notl
ja
pop
pushf
mulb
xchg
outsl
mov
std
jae
xchg
dec
xchg
push
cmp
add
outsb
cmpsb
sbb
pusha
fdivs
arpl
sbb
outsl
dec
idivb
mov
outsb
jae
cmpb
push
push
push
shlb
and
push
data16
inc
bound
or
xchg
sbb
mov
mov
xor
addr16
push
insl
mulb
ret
push
pop
bound
add
sub
push
jmp
xor
cmp
cmp
mov
sahf
pushf
rorl
mov
in
gs
sahf
aaa
sbb
stos
adc
dec
je
cmpsb
scas
lret
mov
add
imul
andl
jle
pop
push
jb
outsl
jb
dec
fistl
subl
mov
or
mov
xor
xor
movsl
call
fnstenv
push
dec
push
outsb
mov
push
scas
fwait
push
push
add
push
setle
lods
pop
int3
nop
mov
cmp
pop
fs
xchg
pop
adc
dec
popf
loopne
call
pop
daa
inc
xchg
inc
jne
dec
push
push
mov
movsl
dec
inc
pop
pop
pusha
outsb
in
pop
mov
ss
inc
dec
cmp
lods
dec
mov
mov
mov
jae
pop
inc
insb
sbb
push
or
lret
mov
sahf
fistpl
mov
rorb
xchg
gs
and
sub
nop
cmp
xor
push
inc
inc
cmpsb
or
push
dec
mov
inc
push
push
inc
adc
dec
loope
out
orl
outsl
bound
cmp
dec
xchg
insl
inc
setle
je
inc
xchg
jb
mov
nopl
pop
mov
dec
mov
mov
add
fadd
ss
rcrl
inc
xor
stos
stos
sbb
xchg
popa
rclb
mov
push
cmpsb
cwtl
int3
incl
shrl
dec
jo
and
mov
xor
pop
in
pop
dec
dec
xor
je
dec
ret
iret
add
adc
dec
dec
mov
and
cltd
loop
inc
jmp
add
fistl
test
adc
test
icebp
xchg
adc
popf
shlb
pop
or
es
icebp
stos
stos
das
out
ljmp
jno
sti
jge
xor
sbb
cwtl
bswap
icebp
cwtl
or
mov
add
pop
flds
adc
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
ljmp
sbbl
hlt
std
cltd
adc
test
movsl
mov
jnp
pop
fnstsw
or
mov
adc
int
enter
testl
out
test
test
jg
adc
enter
movsl
adc
mov
lcall
insb
stos
push
call
fdivs
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
jle
adc
mov
xchg
idiv
adc
fwait
push
xor
rcrb
ljmp
add
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
imul
nop
insb
xor
pusha
xor
jle
pop
loopne
pop
dec
jge
sub
movsb
or
ror
inc
adc
xor
out
jle
pushl
bound
xlat
lea
adc
shrb
rol
paddd
sbb
fdivrl
adc
cmp
pop
sti
pop
faddp
mov
sbb
adc
loop
arpl
sbb
adc
lcall
sbb
ret
iret
repz
and
mov
sub
pop
sahf
repnz
pop
adc
popf
in
fidivrl
daa
imul
jo
std
fstl
insl
cmp
pop
jnp
adc
mov
add
fbstp
iret
outsl
icebp
xor
push
sti
push
sbb
lret
jge
adc
test
enter
ret
xchg
ja
jg
jo
mov
in
leave
jmp
cli
fdivr
std
jmp
ljmp
fimull
clc
in
cld
and
fcomps
insl
cmp
jg
lods
aad
or
lock
jmp
jmp
das
std
out
cmp
lret
test
sti
lock
sar
inc
cmc
lock
jmp
ljmp
cltd
inc
test
push
dec
inc
pop
daa
hlt
xchg
nop
sbb
mov
pushl
hlt
addr16
inc
and
dec
push
dec
and
cmp
dec
rorb
and
das
xor
dec
add
push
push
lcall
mov
mov
popa
dec
dec
inc
xor
gs
mov
dec
push
and
and
adc
xchg
movsb
jae
shrl
incl
add
or
aam
imul
mov
test
mov
pop
in
in
add
dec
outsb
push
jnp,pn
ja
jae
jmp
cmp
in
and
inc
xor
adc
ficoml
and
cwtl
fs
add
add
inc
inc
inc
cmovo
insb
inc
push
add
adc
ds
scas
jo
dec
xchg
add
repnz
sbb
scas
roll
and
ret
pop
mov
jne
add
pop
push
outsl
mov
mov
pop
cs
add
push
mov
out
loopne
jecxz
add
fs
cmpb
faddl
sub
xchg
push
sub
les
adcl
add
push
insb
jbe
imul
aas
pushf
sub
push
dec
push
mulb
aaa
push
es
mov
or
mov
pop
inc
mov
xchg
inc
out
aam
sbb
mov
pusha
add
push
sbb
or
rclb
fwait
test
rorb
add
inc
or
sub
pop
and
mov
jo
inc
mov
adc
outsb
xor
ret
es
rorb
in
setne
lahf
roll
cmp
jo
cmova
js
iret
mov
test
add
adc
das
cwtl
jecxz
sbb
daa
push
inc
inc
pop
sub
adc
mov
sub
decb
lods
in
bswap
sub
ret
decb
fcomps
add
fmull
test
daa
out
or
fcoml
xor
insb
lidtl
rclb
mov
jmp
push
and
jmpw
les
cmpsb
sbb
les
popf
and
jns
lea
imul
std
inc
imul
jbe
bound
cmp
adc
pop
jecxz,pn
fs
push
push
xor
add
psubusb
jne
xchg
xor
add
and
ds
je
inc
lods
in
je
es
xchg
fidivl
iret
cmp
in
pop
das
sub
jle
sub
sub
jo
pop
sti
int
sub
sub
inc
in
sahf
push
push
inc
je
aas
imul
push
adc
icebp
push
xor
dec
loop
pop
pop
jmp
lahf
imul
loop
push
add
and
mov
popa
pop
insl
dec
push
xchg
gs
cmovo
sub
jecxz
addr16
push
push
pop
sub
dec
ss
incb
out
leave
data16
rcrl
into
test
lock
and
imul
inc
pop
int
shlb
and
push
cld
xchg
adc
das
arpl
xor
hlt
daa
xchg
xor
push
add
xorl
sbb
sub
dec
jnp
xor
pushw
dec
add
shll
pop
decb
push
add
lea
and
mov
mov
and
cmovno
push
jo
push
sbb
push
fs
inc
mov
pop
into
pop
mov
insl
jae
pop
movsb
dec
push
mov
aaa
aas
xor
inc
push
push
mov
pusha
add
push
push
sub
mov
dec
sub
dec
ljmp
pop
jbe
mov
cld
xor
mov
arpl
push
sub
mov
jb
ret
fisubrl
imul
arpl
subl
pop
inc
outsb
jo
lods
adc
je
jecxz
sub
cmpsb
mov
adc
fildl
mov
pop
inc
and
fs
cmp
loopne
jae
sub
imul
sub
fs
dec
nop
push
sbb
loopne
lods
sub
mov
jb
fsubs
lahf
test
mov
mov
sbb
fists
xchg
fsubl
jge
addr16
jge
add
loope
adc
mov
fbstp
loope
push
inc
daa
pop
shll
inc
xchg
or
pop
inc
orl
or
cmp
ja
insl
xchg
mov
and
push
inc
pusha
and
inc
or
cmp
je
insb
jae
arpl
add
xchg
or
pop
push
push
mov
jae
adc
arpl
sub
pop
and
lea
sbb
inc
and
pop
es
jecxz
fs
lds
jne
inc
jb
or
sub
jg
les
push
test
lds
andl
xchg
adc
xchg
insl
stos
bound
cs
fwait
mov
sbb
xchg
add
jns
insl
rorb
sbb
jae
es
movsb
push
out
cmp
stc
adc
arpl
push
iret
subb
xchg
je
push
into
add
xchg
fisttpl
pop
or
jb
outsb
outsb
add
add
push
loop
fisubrl
push
rcr
fdivrl
fldcw
mov
cmpsb
push
pop
sbb
cmp
cld
add
adc
push
sub
add
xor
das
xor
mov
inc
dec
addl
sub
ds
push
pop
add
loopne
add
add
mov
inc
scas
test
mov
cmp
sbb
out
xor
in
or
mov
fidivl
jne
xor
mov
or
adc
pop
and
or
adc
adc
jne
xor
dec
push
add
mov
mov
fsubrs
xchg
addr16
insl
and
sbb
inc
mov
inc
leave
sub
jbe
les
jb
outsl
add
dec
subl
faddl
popa
movsb
scas
dec
mov
icebp
mov
mov
mov
div
and
add
das
clc
jo
pop
mov
dec
jbe
popa
insb
andl
out
popa
and
and
adc
xor
sbb
or
push
in
push
cmp
xor
mov
js
sub
jb
das
addr16
stos
loopne
push
cmp
icebp
sub
test
sub
sbb
jp
sub
stos
mov
iret
cmp
mov
jmp
insl
mov
aad
ret
ljmp
and
mov
jbe
inc
adc
push
fadd
loope
mov
cs
and
xchg
add
js
jmp
mov
push
lahf
imul
add
push
sub
and
jo
mov
pop
xchg
out
jae
insl
inc
or
imul
mov
and
sysret
inc
jne
shll
sbb
shrl
mov
and
in
dec
leave
ret
or
adc
loopne
pop
jne
stc
rclb
or
jb
inc
or
scas
jo
clc
insb
fwait
and
cmpl
insb
mov
scas
inc
xor
mov
fwait
adc
xorb
test
inc
mov
dec
test
add
sub
sub
shll
fadds
outsl
icebp
imul
sub
jle
out
mov
lea
jb
insb
mov
into
mov
inc
sub
xor
stc
push
xor
cmpsl
mov
adc
and
insb
push
rolb
sbb
adc
shl
in
and
sbb
jbe
sar
push
pop
inc
dec
push
push
dec
inc
icebp
cltd
jo
xor
inc
push
push
and
test
les
jmp
or
mov
cs
sub
dec
lds
jns
dec
xchg
xor
and
gs
inc
inc
das
jmp
and
push
sub
or
mov
into
inc
scas
push
add
inc
push
xchg
mov
ficoml
inc
xchg
mov
stos
pop
push
out
scas
xor
add
insb
rclb
outsl
pop
and
cmp
sbb
push
sbb
shlb
jnp
dec
mov
aas
pop
mov
repnz
out
stos
inc
aad
repnz
add
push
sub
movsb
mov
jle
xchg
mov
out
push
loope
lock
xor
loope
xlat
das
inc
fdivs
cmp
mov
ss
jae
mov
gs
arpl
sbb
jne
push
outsl
in
out
push
jo
cs
lret
rdpmc
dec
xor
adc
jl
fmull
xchg
push
mov
jbe
out
jge
imul
cli
subl
and
cs
pusha
aas
xchg
aaa
adc
es
push
jl
sub
clc
fwait
push
push
jl
ror
sbb
repz
sbbl
gs
movsl
add
nop
imul
imul
test
push
add
pop
and
test
mov
inc
lea
xor
dec
inc
cs
push
push
inc
dec
xlat
cmp
sub
dec
dec
push
lods
mov
insb
outsl
jne
mov
nop
fs
loopne
sub
lods
sub
xor
xor
xor
hlt
push
add
adc
dec
shll
sub
cmp
xor
rorl
fs
shll
cwtl
imul
icebp
add
mov
xor
mov
in
lcall
or
and
cmpsb
imul
imul
imul
cmpsb
imul
enter
in
imul
adc
cmpsb
imul
imul
cmpsb
imul
mov
mov
lcall
popa
lcall
dec
shll
push
pop
or
sbb
xor
shll
xor
inc
dec
shll
fs
shll
mov
xor
mov
ror
xor
rcl
in
clc
add
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
mov
aas
js
pop
cmp
sahf
outsl
jbe
jo
je
dec
imul
jae
lret
aam
icebp
pop
mov
xor
imul
add
adc
test
add
enter
xor
xchg
imul
adc
je
lahf
pop
pop
jae
insb
addl
les
push
das
push
popa
push
mov
jne
mov
xchg
add
mov
pop
popa
jne
test
cltd
outsl
push
or
out
pop
adc
inc
lock
xor
add
testb
mov
pop
add
vmptrld
xor
adc
notl
aaa
add
ds
inc
ficomps
inc
push
xor
in
cmp
cmp
movb
in
enter
lfs
xor
or
and
push
outsl
add
sbb
outsb
push
mov
push
icebp
js
bound
mov
push
and
outsb
adc
ja
pop
pop
addr16
jno
dec
mov
lcall
jge
js
mov
imul
bound
imul
ss
sub
sbb
push
jne
movq
fcompl
mov
ja
xchg
pop
push
xor
fmuls
js
mov
mov
jno
jp
jae
jp
arpl
bound
jne
cmp
push
pop
test
inc
fs
cmpsl
lret
imul
or
jo
push
ja
fldcw
insb
jne
insl
pop
cmpsl
arpl
iret
push
adc
bound
dec
lods
in
mov
ja
and
mov
xor
outsl
nop
nop
test
imul
push
imul
pop
mov
pop
pop
xchg
and
cmp
test
mov
imul
pushf
mov
orb
pop
sbb
out
lds
mov
sbb
bswap
pop
dec
movsl
shll
ja
ds
dec
xor
ljmp
outsb
xor
data16
inc
push
sbb
adc
popa
lret
jb
mov
push
mov
push
mov
fdivl
dec
in
mov
jmp
imul
add
in
js
outsb
pop
icebp
sub
push
add
out
jmp
aaa
lahf
and
push
xchg
xor
cwtl
dec
and
lahf
outsb
mov
push
inc
push
push
sub
lea
inc
dec
push
push
inc
push
inc
xor
fwait
inc
call
mull
outsb
jg
movq
jmp
ja
sub
xor
arpl
fcomp
ret
pushf
dec
dec
push
push
xor
sub
imul
xchg
mov
dec
cmp
xor
movsl
push
or
cmpsb
push
xchg
mov
mov
mov
mov
into
out
inc
sahf
push
cmp
jmp
imul
mov
push
dec
push
test
mov
xor
xor
rcrl
lds
push
pop
mov
iret
outsl
xor
daa
lock
aaa
push
add
push
dec
lods
lea
sub
pop
fcmovb
dec
adc
inc
lds
jle
test
fisubrl
aas
orb
mov
add
pop
adc
es
rclb
xchg
push
imull
dec
jnp
pop
out
jo
bound
stos
cmpsl
mov
inc
negl
popa
add
testl
or
out
popf
mov
dec
mov
jl
insb
dec
jo
pop
pop
and
fucom
push
inc
and
push
popa
fs
adc
pop
ss
dec
lret
inc
pavgb
xor
ud0
push
jl
inc
rolb
in
aam
dec
mov
mov
or
test
aaa
aaa
or
add
lds
jae
out
xchg
push
imul
inc
push
dec
xlat
inc
mov
push
xor
push
lods
out
lock
pop
and
sbb
ret
in
and
nop
imul
cmp
sbb
in
dec
rcrb
push
popf
das
or
push
add
add
add
imul
xor
mov
outsb
mov
cs
test
jae
mov
lods
add
pop
xchg
aas
push
xchg
icebp
dec
shr
movsl
inc
push
mov
aas
filds
cmpb
data16
mov
mov
ja
inc
push
lahf
sub
ds
addr16
dec
pop
inc
push
pop
nop
pop
or
push
fs
mov
mov
inc
rcr
inc
push
sysexit
xchg
ss
orb
mov
adc
pop
movsl
fsts
scas
dec
mov
popa
dec
add
adc
aas
add
mov
data16
insb
pop
shrb
push
fcomp
cmpsl
out
jae
out
adc
mov
cmp
outsb
mov
push
ss
jno
xor
pop
daa
lods
jecxz
iret
ds
shrb
outsl
push
iret
adc
aaa
popa
fmuls
jg
add
fs
jb
sub
xor
sbb
subl
leave
arpl
sbbl
adc
mul
or
pop
inc
rclb
icebp
jg
jne
xchg
xchg
push
sbb
lahf
in
loop
jo
insl
das
xor
push
push
push
pop
inc
dec
xorb
bound
fsubrs
xorl
stos
imul
push
orl
mov
cmp
in
sbb
push
in
ret
das
aas
push
aaa
test
stos
push
or
add
add
add
shll
loop
pop
insb
cs
pop
addr16
push
sbb
cwtl
xor
daa
and
sub
cwtl
adc
test
rcll
dec
punpckhwd
insb
test
pop
ja
xor
inc
ficoml
inc
or
push
inc
into
andl
insl
divl
popf
bound
adc
pop
ret
cltd
push
mov
sbb
dec
out
je
fs
stos
test
cs
push
add
das
rep
sbb
mov
mov
sbb
pop
imul
ss
sbb
adc
adc
mov
dec
arpl
mov
and
push
jbe
lret
adc
and
arpl
or
inc
popf
jbe
push
or
mov
test
jb
or
fcoml
cmp
jle
outsl
xchg
loope
lock
add
cmp
push
mov
inc
ds
scas
xor
test
cmp
xsha1
cmpsb
or
sbb
xchg
and
rcr
lods
and
jg
and
push
adc
sahf
add
pushf
push
and
inc
push
xlat
imul
aas
dec
aas
pop
cs
inc
arpl
adc
pop
pop
push
mov
pop
lcall
imulb
cwtl
sbb
inc
xor
or
or
rcrl
or
and
and
outsl
adcb
jno
push
or
bound
pop
push
cmpsl
test
sbb
push
pop
push
xchg
sarb
addps
sub
mov
aam
cmp
mov
jae,pt
out
mov
push
aaa
les
sub
mov
cmp
mov
push
je
out
jl
in
push
outsl
jb
ja
jno
shrb
push
aaa
sub
aas
imul
inc
cmp
mov
mov
in
dec
sub
inc
cld
adc
fs
pop
lods
sbb
dec
int3
test
test
lahf
jo
sbb
and
pop
lret
inc
aaa
mov
push
lods
loop
add
negl
and
push
outsl
enter
daa
pop
arpl
add
push
movhps
inc
aaa
xor
pop
outsl
orl
mov
jecxz
iret
ud0
xchg
sub
push
sub
pop
and
sbb
cmp
rclb
jb
and
sbb
add
or
dec
adc
pop
ds
ret
aaa
dec
or
and
push
data16
imul
mov
and
imul
aas
imul
out
sub
xchg
pop
gs
fbstp
pusha
jbe
push
dec
push
fwait
inc
les
daa
pusha
lea
fcmovnb
loope
sbb
jg
mov
inc
mov
push
inc
adc
pop
or
xchg
scas
outsb
outsl
xor
and
out
mov
and
push
ret
jle
xchg
mov
and
and
dec
shlb
ficoml
in
sub
pop
fldcw
gs
mov
push
mov
and
mov
sbb
fistps
stos
test
insl
aas
icebp
inc
mov
jo
sbb
addr16
arpl
ret
notl
xor
push
fdivr
sub
aas
dec
adc
mov
and
mov
aaa
xchg
inc
pop
push
insl
bound
inc
xchg
daa
aas
popa
fldt
in
xchg
jne
push
es
inc
imul
js
xchg
inc
punpckhbw
jno
mov
jge
mov
inc
mov
dec
mov
fcomps
inc
inc
sbb
sbbl
pusha
cs
jo
mov
nopl
lret
xor
inc
dec
popa
jne
sbb
push
out
dec
shrb
arpl
popa
inc
sbb
push
testl
inc
data16
movsb
lret
aaa
xchg
orl
addr16
addb
stc
outsb
pop
lods
xchg
es
pop
data16
lods
addr16
ja
inc
mov
cwtl
insl
mov
jo
jmp
imul
adc
xor
mov
rcrb
push
lods
sub
and
test
imul
jo
mov
mov
and
push
je
daa
mov
popa
les
pop
outsl
test
add
jle
inc
pop
inc
inc
int
inc
xorb
lcall
add
stos
shr
xchg
adc
push
cmp
mov
movsb
add
je
xor
aas
sahf
aam
cmp
push
or
adc
aaa
inc
cmp
scas
xchg
push
outsb
or
push
shl
dec
inc
sahf
xor
addr16
fwait
or
outsb
add
mov
addb
cmp
and
arpl
adc
dec
inc
insb
lods
jb
pop
fsubrl
xchg
or
inc
es
lret
outsl
pop
test
movd
mov
loope
sub
mov
cmpl
push
loopne
dec
adc
xor
adc
mov
dec
push
popa
jns
add
insl
sarl
mov
test
scas
mov
insl
inc
mov
das
adc
mov
fwait
pop
lahf
push
dec
pop
hlt
push
sub
sbb
pop
xchg
mov
fsub
std
or
and
notl
sub
xchg
or
xor
and
adcl
dec
int3
dec
mov
nop
das
es
mov
pop
addb
adc
push
xchg
popa
std
push
fs
fsub
sbb
add
flds
xor
inc
das
call
and
push
pop
cmpsl
mov
bound
leave
fwait
dec
adc
test
stos
lea
daa
pusha
adc
xchg
add
push
add
orb
pop
mov
sbb
mov
pop
xchg
add
and
pop
fcmovu
jb
xchg
packuswb
outsl
push
mov
out
test
push
js
test
sub
pop
test
adc
xchg
pop
mov
xchg
mov
std
sub
and
lods
call
mov
loop
or
and
or
pushf
mov
out
lock
add
sbb
inc
loope
pop
rcrl
jp
das
push
pop
mov
mov
test
test
mov
sub
lahf
xor
xor
dec
push
pop
sbb
imul
pusha
bound
jg
lods
imulw
inc
add
bound
and
insl
xchg
mov
imul
mov
xchg
adc
add
push
push
sbb
sub
xorb
mov
dec
mov
aaa
mov
sub
add
insb
sbb
je
xor
fstps
movsb
inc
xor
jae
or
pop
pop
lea
imul
adc
stos
test
inc
pop
arpl
scas
or
inc
lret
xchg
inc
pop
xchg
das
pop
inc
lcall
add
mov
data16
out
add
es
daa
add
stos
es
out
cmpsb
sbb
scas
imul
pop
daa
push
jl
cmp
pop
push
push
cmp
xor
lods
loopne
sahf
push
xor
pop
or
rcr
pop
ja
cmpsl
add
out
mov
ss
push
lahf
rolb
jecxz
push
loope
lret
mov
sbb
and
mov
lcall
and
mov
rolb
out
inc
dec
jnp
sbb
test
inc
dec
js
sbb
dec
dec
enter
push
inc
shlb
xchg
mov
call
insl
addl
call
jp
aam
pop
std
test
push
mov
jg
dec
xor
jb
mov
lods
and
push
mov
fwait
push
pop
ja
dec
imul
xor
iret
and
into
and
dec
dec
mov
push
daa
fnstcw
scas
inc
fadds
jae
insl
aaa
xor
xor
mov
inc
mov
pop
outsl
sub
ret
call
mov
adc
addr16
out
and
shrb
arpl
sbb
adc
inc
inc
jb
insb
les
mov
pop
xor
fsts
and
mov
adcb
pop
addr16
xor
inc
xchg
cwtl
mov
das
lahf
xchg
cmp
push
jae
add
xchg
dec
adc
fbstp
sub
and
sub
mov
or
xor
jne
daa
jbe
sub
push
and
and
das
jno
mov
or
hlt
clc
fwait
or
je
sub
call
cmp
or
inc
loop
das
mov
or
pop
push
cmp
add
js
jno
inc
jo
lods
or
jb
xor
inc
jl
cmp
rolb
or
add
mov
mov
add
pop
rol
xor
push
push
and
adc
testl
je
adc
or
ret
add
cltd
xor
fldt
add
add
push
push
adc
xor
icebp
mov
js
pop
mov
ret
call
subb
in
dec
ret
pop
pop
pop
push
sub
out
jmp
xchg
cld
lea
mov
rep
mov
stos
push
push
push
push
push
push
or
jg
mov
les
ret
add
mov
inc
and
sbbl
lds
in
ret
push
imul
lods
pop
lret
stos
jne
push
test
loopne
xorl
cmp
into
ja
or
inc
add
and
sbb
adc
push
xor
out
or
in
inc
and
dec
popf
out
and
push
or
xor
adcl
cmp
sub
cwtl
jns
das
clc
dec
inc
push
mov
dec
push
pop
inc
push
push
push
dec
ss
dec
dec
jp
and
xor
imul
pusha
imul
cmp
mov
dec
leave
mov
lock
inc
jne
sbbb
roll
pop
mov
test
mov
push
mov
pop
insl
mov
arpl
pop
pop
push
xchg
or
popa
loope
inc
lea
inc
jle
cmp
xchg
lret
sub
sarl
aaa
das
inc
push
push
cmpsb
adc
xor
negl
push
dec
and
jo
inc
inc
and
adc
orb
xor
xor
mov
jo
mov
and
sbb
aad
loope
jb
das
addl
mov
add
call
and
inc
shl
add
add
loope
popa
mov
adc
pop
popa
mov
add
std
ds
or
push
adc
adc
cmp
je
insb
daa
mov
mov
inc
sub
sub
sub
dec
xor
add
or
popa
cmpsl
pop
push
adc
iret
inc
adc
ja
xor
xchg
mov
popa
xchg
insl
pop
sbb
nop
jg
mov
add
subl
mov
int
jne
pop
jae
dec
jg
pop
in
hlt
les
mov
inc
out
in
imul
push
add
movsb
mov
ds
shlb
sub
sahf
lock
mov
mov
add
and
fiaddl
cwtl
add
leave
inc
test
pop
or
add
and
cmp
or
ja
adc
inc
and
xor
mov
sgdtl
cmp
push
xor
add
add
aas
pop
cltd
dec
inc
sbb
jo
sub
in
add
addl
shl
movsb
push
and
and
xchg
adc
movsb
test
in
test
ss
pop
and
mov
or
mov
push
dec
xor
sbb
or
xchg
push
or
or
ficomps
scas
jbe
imul
repnz
and
pop
inc
inc
or
addr16
das
push
xorps
pop
imull
push
sbb
jb
pop
insb
fcoms
or
orl
or
addl
xor
mov
sbb
aas
into
aas
loopne
push
ret
xlat
pop
sbb
inc
push
inc
mov
bound
pop
js
xchg
or
icebp
inc
cld
popa
scas
push
mov
push
lret
inc
insb
pop
das
addr16
push
mov
mov
xor
cld
cwtl
aam
jp
cmpb
add
cld
in
cmpsb
fisttps
mov
cld
inc
jle
inc
inc
mov
mov
or
cmovo
sbb
mov
sbb
in
call
jnp
jle
adc
push
ficompl
jl
and
push
xor
fcomp
loopne
jae
jle
mov
mov
int
or
lea
enter
mov
or
xchg
xchg
xor
js
push
leave
add
fcmove
pop
ss
or
lcall
movups
adc
adc
sbb
sub
cmpsb
or
loopne
sbb
sbb
dec
js
xor
shll
sub
cld
dec
xor
adc
add
sti
jp
push
add
or
xor
leave
scas
incl
xorl
or
xor
popa
je
testb
xchg
lock
hlt
xor
insl
mov
xor
xor
in
xorl
push
fidivs
xor
inc
push
daa
push
fistpl
pcmpgtd
fdivrl
dec
push
dec
ja
push
jbe
lea
scas
mov
jmp
push
push
inc
push
sub
xor
dec
lcall
add
and
inc
pop
or
sub
xorl
rolb
push
xor
cs
mov
inc
orb
push
push
push
or
cmpsl
xor
js
dec
insb
ror
mov
popa
mov
cmpsb
nop
iret
push
push
dec
or
flds
push
mov
scas
adc
xor
popl
inc
push
dec
filds
fistl
dec
xor
dec
inc
sbb
and
idivb
pop
sub
scas
push
scas
sub
scas
dec
push
pop
loopne
push
cwtl
sbb
adc
int3
add
adc
nop
pop
add
inc
inc
add
push
mov
scas
inc
lret
aad
loop
lock
jle
dec
and
jbe
xor
push
das
push
push
rcll
imul
adc
ds
cmp
rclb
push
cmp
out
pop
mov
push
inc
rclb
inc
push
inc
sbb
pop
ficoml
mov
mov
adc
mov
out
divps
push
cmp
out
outsb
ds
add
fimull
pop
pop
orps
popf
jle
jle
or
adc
add
mov
decl
adc
or
cld
negl
inc
inc
jnp
pop
hlt
mull
fucomip
push
pop
jmp
insb
fsub
das
aam
int3
dec
dec
sbb
rorb
dec
daa
mov
pop
xchg
shld
mov
jecxz
mov
test
dec
add
push
gs
dec
pop
pop
dec
cmp
mulb
push
xchg
adc
out
sub
imull
add
dec
adc
cld
into
dec
pop
cmp
insb
add
in
sti
loopne
and
mov
pop
int3
pop
pop
jbe
push
pop
dec
dec
xchg
nopl
ds
das
xchg
pop
fcoms
fadds
nop
or
cmp
and
jbe
and
and
mov
push
dec
jg
mov
mov
mov
jo
cwtl
cli
scas
mov
jl
divb
imul
iret
dec
psubusw
mull
mulb
jnp
adc
aas
add
aas
lock
call
sarb
pop
aam
scas
rorb
jbe
sbb
pop
cmp
jnp
inc
jo
pop
pusha
setg
in
cmovg
rdseed
mov
stos
ja
stc
iret
clc
clc
push
ds
sbb
cmovs
sysret
fxch
scas
mov
bswap
pushf
nopl
cmpsl
js
inc
push
lss
inc
clc
iret
xor
mov
cmp
iret
sbb
scas
mov
pop
decb
bswap
rcrl
add
std
jl
lcall
insb
push
pusha
pop
push
inc
cmp
and
sbb
adc
lcall
add
xor
mov
cld
clc
hlt
in
loopne
imul
enter
mov
xor
cwtl
mov
sarl
add
daa
loope
fcoms
sysret
jg
xor
jo
lock
popf
mov
push
pop
aam
push
inc
jg
es
sub
fistps
mov
daa
jns
xchg
cli
or
or
ret
enter
mov
adc
repz
jle
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
out
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
lcall
in
xchg
cmp
xor
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
cmp
lock
leave
fwait
xchg
and
and
jg
fildl
add
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
call
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
xchg
test
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
cld
call
xlat
cmp
mov
sbb
add
pushl
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
inc
push
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
jmp
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
xor
shll
mov
imul
shll
pop
ja
imul
dec
mov
repnz
push
add
sbb
insb
popa
shrl
adc
add
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
dec
add
fwait
out
sbb
or
add
addb
gs
mov
addb
mov
xor
in
inc
rcrb
fisubs
mov
jbe
inc
sub
sbb
lcall
adc
xchg
add
or
xorb
sbb
adc
push
inc
outsb
fs
jo
outsb
dec
add
add
and
js
inc
inc
jns
outsl
push
imul
adc
add
dec
add
or
lods
xchg
gs
push
outsb
jo
mov
push
imul
add
sarb
lds
or
add
dec
add
and
jo
ss
fwait
sbb
xchg
pusha
pop
sbb
mov
sbb
or
push
insl
mov
sbb
shlb
pop
push
push
sbb
nop
data16
jo
mov
jne
aam
andb
xchg
nop
add
push
sub
outsl
sub
jnp
test
addl
scas
outsl
insl
mov
sbb
cmc
add
cmp
test
and
mov
jno
shll
mov
sbb
pop
daa
push
jo
imul
stos
pop
in
dec
sbb
sub
push
addr16
cmp
sbb
rol
jo
inc
pop
adc
ret
jmp
sub
jo
add
sbb
pusha
inc
rorl
rolb
jo
mov
adc
movsb
test
shrb
or
jge
mov
je
outsb
lds
aas
inc
and
sarb
fwait
sub
stc
push
xchg
inc
cwtl
sub
cmc
xor
dec
xor
inc
pop
push
lea
mov
adc
fs
pop
gs
addb
subl
xor
mov
pusha
push
mov
inc
jb
add
add
fs
sbb
xchg
or
add
out
and
outsb
outsl
jno
push
int3
fcmove
inc
jbe
push
orb
shrl
inc
mov
outsl
push
push
sbb
pushf
sbb
jle
fs
ss
loopne
jl
int
aad
and
adc
sub
shl
popf
orl
aas
cld
pop
and
mov
loopne
xchg
jno
cmp
sti
pop
lods
dec
adc
cmp
push
insb
jae
mov
xchg
cmp
fldcw
mov
jle
sbb
pop
popf
jge
jp
aad
adc
inc
ja
push
mov
add
je
ja
rorb
mov
jmp
xchg
mov
loopne
pop
push
pop
shll
sub
dec
push
iret
cs
daa
pop
xor
popa
fnstcw
push
adc
sbb
jne
xchg
mov
and
sbb
push
out
adc
inc
pop
cmovg
adc
xor
mov
ja
stos
push
or
xor
aad
add
sub
mov
push
or
fcomp
jns
or
push
sbb
pop
js
ja
add
cmp
sbb
insl
push
mov
es
dec
insl
outsb
jne
pop
or
insl
inc
gs
add
popa
mov
dec
inc
iret
push
arpl
pop
xchg
das
aad
push
inc
and
add
inc
cmp
adc
subb
add
out
incb
dec
add
inc
push
add
add
add
add
inc
ret
adc
daa
lods
insl
imul
inc
add
cmp
sbb
adc
addr16
mov
fimuls
push
sub
out
push
add
or
testb
sub
aas
xor
out
testl
sbb
outsl
fildl
scas
fdiv
add
fnstenv
ret
mov
les
add
jb,pn
cltd
adc
flds
enter
lods
pusha
imul
sahf
add
xorb
imul
insb
pop
dec
push
mov
pop
push
cmp
inc
xor
xor
clc
sti
cs
addr16
adc
dec
xchg
and
add
add
add
add
add
addr16
pop
and
call
int
in
inc
nop
nop
xchg
les
mov
adc
mov
test
in
mov
push
jne
mov
out
sti
inc
fistl
push
and
mov
xlat
out
cld
push
jb
dec
push
fistps
sub
adc
push
xchg
jmp
ss
sub
es
out
mov
inc
xlat
lock
sar
mov
jne
mov
out
sti
inc
fistl
into
push
fistps
sub
adc
push
popf
jne
inc
push
fistps
sub
adc
push
popf
add
je
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
push
mov
mov
mov
mov
xorl
add
sub
loop
jmp
