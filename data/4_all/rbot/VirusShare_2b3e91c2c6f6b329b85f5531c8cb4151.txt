adc
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sarl
add
adc
push
add
adc
add
push
add
push
add
add
push
add
add
add
add
addb
add
cld
adc
add
add
or
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
ljmp
add
add
jbe
add
add
add
pop
sbb
fistpl
pusha
call
pop
sub
lea
cmpb
je
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
sarb
add
add
add
sub
sti
fdivrs
sar
cmpsb
mov
les
adc
pop
lcall
pop
cli
jno
pop
repz
fbld
out
sbb
es
sbb
loop
shlb
ret
pop
mov
leave
and
inc
lret
push
pushf
inc
fadd
nop
xchg
fwait
jmp
cmpl
loopne
mov
jecxz
int
mov
pop
popa
and
shlb
aad
loopne
imul
adc
jnp
in
mov
int3
dec
mov
xor
inc
pushf
jo
cld
fdiv
inc
adc
and
lods
popa
and
pop
cmp
sbb
sub
popf
or
sbb
push
adc
sbb
pop
dec
xlat
jns
mov
scas
call
cmp
pop
and
xchg
mov
insl
test
cmp
into
syscall
insb
inc
push
jle
ljmp
lcall
jle
movsb
sub
pop
push
loop
rcrl
pop
dec
and
cli
enter
dec
dec
ficoml
popa
repnz
stos
pop
sub
test
inc
add
outsb
or
test
and
fs
mov
pusha
loopne
fucomp
adc
cld
inc
mov
mov
mov
mov
push
add
testb
xchg
push
push
loop
in
scas
or
sbb
hlt
loopne
dec
cmp
adc
add
xchg
cmp
sbbl
insb
or
loope
inc
lret
rorb
call
insb
scas
push
test
and
mov
ret
aaa
push
inc
push
imul
jb,pt
int3
fadd
fistpll
adc
mov
and
jo
aaa
movl
orl
jecxz
cwtl
lcall
mov
jl
mov
jne
or
sbb
mov
arpl
loop
fucomp
loopne
push
xor
out
jg
cli
push
cld
in
clc
mov
or
mov
mov
dec
sbb
scas
jns
sbb
xchg
xchg
in
stos
cmp
dec
sub
out
dec
cmp
jmp
test
gs
test
js
adc
mov
mov
mov
into
test
adc
cmp
out
das
mov
mov
sub
out
shr
lret
pop
xor
xlat
sub
push
sub
aam
xor
das
repnz
sbb
push
cmp
bound
test
icebp
xor
jl
xor
mov
sub
jb
cld
mov
outsl
rcrl
mov
or
shlb
push
push
mov
cmc
ds
pop
xor
shlb
aas
xor
insl
cmp
jbe
loop
ficoml
sub
cmp
iret
or
mov
fcmovne
or
mov
lea
mov
push
mov
pop
cmp
dec
sti
js
jno
xlat
jge
xchg
adc
jno
test
lock
sahf
rcrl
sbb
dec
mov
rol
jne
cmpsl
add
call
pop
push
outsl
out
outsl
jl
adc
jns
cmc
pop
cmp
cmp
hlt
xor
add
jmp
xchg
test
jno
sub
repz
outsb
ret
ss
adc
mov
int
lcall
jge
lods
movsl
sahf
xor
addl
movsb
stc
mov
inc
push
popf
cli
pop
dec
cli
pop
into
les
fimull
in
or
outsb
in
fwait
dec
daa
scas
jns
dec
adc
sti
sub
inc
pusha
test
jp
lahf
repz
insb
cmp
mov
xchg
inc
iret
sbbb
ficoms
push
push
pop
std
pop
jle
scas
ljmp
mov
std
mov
fcompl
lock
jbe
sub
cmp
pshufw
call
and
dec
orb
clc
adc
cmpl
sarl
xor
int
daa
jb
cld
jg
xchg
ret
mov
add
cmp
sub
mov
scas
shl
outsb
stos
std
xchg
or
push
xor
add
dec
pop
imul
lea
jl
xor
dec
sub
repz
sub
mov
aaa
jl
mov
sub
jmp
inc
xchg
mov
test
xor
enter
lret
cs
fisubrl
sbb
pop
mov
cmp
aas
cmp
pop
cmp
mov
adc
inc
das
pop
fldcw
ss
xchg
fdivrs
aam
push
push
jae
imul
xchg
xchg
fistl
icebp
rcl
mov
mov
jp
mov
insb
ret
rcll
cmp
scas
pop
call
add
dec
inc
pop
pop
in
dec
jmp
add
cmpsl
imul
insl
jne,pt
cmc
jae
pop
push
mov
pusha
jne
mov
dec
lods
sahf
pop
sub
outsl
out
sbb
jecxz
inc
adc
push
jmp
mov
loop
fstp
fldcw
add
and
ret
push
ret
cld
xchg
in
mov
out
mov
add
sub
fs
cmp
xchg
mov
add
pop
push
push
ds
and
jecxz
dec
cmp
push
lods
fstp
int3
addr16
lds
mov
lods
repnz
and
imul
stos
inc
loope
mov
push
popa
mov
cld
inc
cwtl
xchg
sarb
mov
scas
pop
inc
jle
hlt
sub
andb
lea
mov
mov
ljmp
inc
mov
jbe
push
in
sub
shll
sub
cmc
repz
inc
sbb
or
or
fldenv
arpl
shlb
into
mov
into
fsts
sub
repz
aas
pminsw
scas
push
xor
jnp
pushf
sbb
out
test
popf
enter
test
jb
ss
test
ret
fcmovbe
lods
ja
ret
cmp
orb
jno
icebp
sub
dec
and
xor
and
dec
rcl
out
ljmp
fsubr
mov
addb
sbb
jnp
inc
sbb
mov
adc
and
daa
jmp
cmp
cmp
test
mov
and
gs
call
sbb
mov
dec
stos
or
jns
dec
sbb
mov
ds
push
lahf
mov
push
xor
mov
sub
je
push
mov
rcrl
shr
pop
ljmp
jo
mov
es
and
outsl
pop
and
or
jae
xchg
mov
imul
cmp
sub
fs
sub
test
add
mov
sub
aaa
int
ret
jge
push
mov
mov
loopne
bound
dec
inc
fsubl
jne
mov
push
cltd
adc
push
call
sbb
xchg
in
lods
fistl
ds
xchg
sub
rcl
js
clc
mov
into
xor
adc
faddl
adc
sub
push
mov
scas
push
insb
xchg
fdivs
and
out
stc
and
pushf
sbb
les
out
mov
testl
imul
xor
adc
incb
leave
xor
outsl
iret
addl
cmp
or
rcrl
adc
sbb
dec
sub
xchg
mov
mov
iret
test
push
shrb
loop
cmpl
bnd
sbb
push
ret
mov
adc
je
fs
cmp
cmp
jae
aaa
dec
sti
push
imul
fdivs
mov
mov
in
lea
out
dec
insb
xchg
mov
inc
xchg
adc
or
or
add
xchg
and
cmc
xor
test
add
ret
inc
push
lahf
popf
xor
jne
das
mov
cmpsl
mov
xchg
xchg
mov
in
jp
cld
or
icebp
mov
mov
fwait
xchg
dec
clc
push
nop
fiaddl
clc
out
or
orl
cmp
push
pop
mov
call
add
mov
xchg
sbb
push
rcl
jo
mov
push
xchg
or
and
popa
es
cmovge
xchg
or
jb
or
out
dec
cld
xchg
xor
bound
or
mov
mov
lret
repnz
fldt
jbe
or
repz
mov
fildll
in
dec
mov
dec
jns
adc
xchg
or
sub
nop
inc
cwtl
dec
outsl
ljmp
lret
lds
xor
mov
pop
and
dec
pushf
adc
push
inc
cld
adc
mov
aas
mov
pusha
mov
push
sbb
mov
into
dec
dec
in
testl
and
ja
pop
xor
ret
pop
xchg
inc
aam
sbb
ds
mov
mov
icebp
sub
push
pusha
or
pop
les
fsubl
sbb
lock
mov
mov
arpl
sub
clc
xchg
pop
jecxz
mov
mov
push
xor
cwtl
sbb
add
xchg
fistpll
cmpsb
sbb
mov
mov
das
icebp
mov
sbb
stos
stos
mov
in
push
insb
fmulp
xchg
sub
push
sbb
jg
mov
cli
lahf
inc
xchg
sbb
into
loopne
jnp
adc
lea
jae
mov
mov
dec
sahf
fldlg2
jb
shr
dec
cmp
cmpsb
jp
sbb
push
sbb
pop
sbb
hlt
add
movsb
fwait
sbbl
xor
mov
dec
in
or
and
mov
test
cmpsl
call
push
jmp
mov
idivb
xlat
scas
inc
out
lods
aad
cmpsl
or
out
sbb
jno
pop
jp
sbb
jl
mov
and
filds
pcmpeqb
cmp
nop
xchg
mov
test
sbb
insl
push
pop
jns
sahf
adc
rcll
push
sbb
dec
aam
add
lods
rcrb
rol
fistl
push
adc
push
pop
jo
repnz
cmp
imul
cs
mov
cli
jb
lcall
out
fildl
outsl
add
nop
mov
jae
fwait
push
push
pop
mov
aas
inc
and
daa
inc
scas
not
mov
add
xor
mov
lahf
in
jo
sbb
lcall
enter
dec
adc
lods
int3
mov
xor
jne
mov
in
xlat
lahf
sbb
xor
hlt
mov
or
movsb
lret
data16
pop
adc
or
sahf
subl
push
incb
and
mov
les
out
out
stos
sbb
xchg
push
mov
xor
out
inc
add
add
xor
xlat
mov
test
out
inc
add
push
cli
and
add
in
inc
xor
lods
sub
ret
stos
cmc
inc
xchg
out
xorl
dec
popl
aaa
jg
daa
mov
sbb
jbe
mov
jnp
sbb
jle
sub
push
push
shr
lds
shrl
je
push
mov
lods
xor
push
inc
test
push
sahf
add
addb
pop
vmovhps
jb
xchg
xchg
sbb
add
cmc
mov
ret
dec
cmpb
and
pusha
aas
rcrb
mov
hlt
orl
pop
iret
mov
pop
ljmp
out
movsl
xchg
sub
mov
pop
stc
in
xchg
push
repnz
pop
inc
mov
xchg
insb
sub
fcomp
dec
rcl
inc
jge
mov
mov
or
xorb
in
repnz
scas
mov
pop
jmp
dec
inc
clc
dec
dec
pop
mov
cmp
jmp
outsl
jnp
lret
adc
jp
ljmp
out
movsb
jbe
add
inc
stos
out
es
add
add
les
sbb
ret
imul
mov
in
dec
mov
pop
cs
scas
test
add
pop
movsb
loop
popf
sbb
fdivr
stos
and
out
mov
scas
jp
add
xorw
fisttpl
sub
xchg
in
push
xor
add
cmpb
outsb
in
cs
outsl
out
je
xor
lcall
pop
dec
pop
cmp
or
and
popa
pop
lock
add
push
js
dec
push
mov
stos
adc
imul
jo
and
cltd
xor
xchg
daa
outsl
call
sbbl
mov
adc
jb
or
pop
repz
or
xor
pop
push
jecxz
movsl
jl
inc
pop
push
cmpsl
enter
dec
cld
mov
int
outsl
cmp
movsb
outsl
decb
test
inc
push
mov
cs
xlat
bound
cmp
mov
mov
or
jp
data16
cli
pop
cmpsb
roll
clc
push
jg
mov
cmc
cmp
mov
jp
in
xor
sbb
pop
inc
xor
iret
push
mov
out
fisttpll
sub
daa
mov
into
sbb
lahf
push
das
xor
or
sub
inc
dec
shll
outsl
mov
jo
imul
pusha
mov
jge
lea
repnz
lret
mov
or
movsl
test
mov
sbb
mov
gs
cmpsb
cmpsl
addr16
rclb
cmp
scas
daa
cmp
sub
xchg
loop
and
in
cmp
andl
enter
in
js
fistpll
test
mov
pop
xor
pop
adc
xor
std
ja
pushf
cmc
jmp
sbbl
add
jae
dec
call
cmp
jnp
mov
xchg
jo
movsb
dec
aas
fcompl
cmp
imul
pop
adc
ljmp
or
cmp
inc
sub
ret
loope
lds
mov
arpl
jo
mov
outsb
frstor
jae
sub
mov
cs
popf
popl
or
xor
pop
mov
test
sbb
lods
cmp
inc
pop
or
iret
lret
dec
mov
movsb
out
xor
fwait
pop
xchg
jmp
enter
imul
pop
icebp
dec
sub
inc
sub
fadd
mov
lret
jmp
sbb
adc
jmp
sahf
sbb
or
xchg
pop
add
in
push
jo
cmpsl
movsb
push
dec
add
sbb
rolb
leave
xor
mov
test
jmp
push
jp
shll
aas
xor
cmp
popf
movsb
sub
mov
pop
dec
xor
adc
xchg
shl
movsl
or
pop
inc
inc
or
push
pop
data16
mov
adc
test
scas
cltd
mov
in
mov
mov
push
cmp
dec
movsl
aas
nop
lods
push
xor
dec
ljmp
lcall
in
jno
mov
std
sbb
pop
xchg
pop
pop
xchg
or
cmpsb
sub
cmpsb
mov
push
cs
jmp
outsb
movsl
mov
aam
repz
xor
mov
movsb
into
in
fsubrl
cltd
fsub
add
imul
repnz
ds
add
xor
test
jnp
inc
jns
sarl
adc
lret
imul
xlat
inc
lods
add
add
lahf
sarl
fidivrs
ficoml
push
adcl
xor
cmpsb
addr16
cmp
mov
xor
dec
repz
aad
bound
add
jno
cmc
aad
test
pop
pusha
mov
cmp
iret
sahf
in
jge
mov
icebp
cmpsl
pop
pop
adc
and
or
inc
movsb
push
xor
sbb
mov
dec
and
push
or
mul
das
mul
inc
std
lds
ss
stos
pop
mov
adc
lcall
adc
lods
pop
sub
rorl
dec
or
lret
jecxz
mov
data16
ret
sbb
sbb
mov
loopne
and
and
inc
test
test
sub
mov
popf
mov
out
fs
mov
out
or
mov
ljmp
pop
sub
cmp
xor
pop
pusha
je
je
or
fs
call
lcall
jp
dec
mov
push
dec
cltd
inc
cmc
mov
scas
test
and
push
out
and
or
out
mov
scas
nop
push
pop
hlt
xor
mov
xor
xlat
mov
jns
push
inc
inc
sti
push
or
icebp
jb
cmp
fisttpl
scas
cli
pop
xchg
push
or
pshufw
loopne
mov
rorb
sbb
mov
push
or
out
jo,pt
jbe
cmpsl
addr16
lods
jmp
and
cmpsb
es
pushf
pop
xor
imulb
mov
add
adc
dec
sahf
ret
aam
mov
xor
xchg
notb
add
lea
fistps
cld
je
clc
into
adc
dec
or
mov
xchg
lcall
and
addr16
and
sub
dec
mov
test
daa
int
shll
inc
xorb
or
ret
dec
in
jge
or
insb
mov
sub
shrb
mov
cmp
mov
add
mov
jno
shll
push
mov
fldl
in
push
fs
mov
ljmp
xorb
out
adc
mov
xor
stos
sahf
flds
mov
sub
lods
out
cmpsb
fcmove
rclb
push
scas
sbb
mov
lret
jecxz
cmp
xor
push
lods
and
mov
dec
in
pop
dec
fiadds
test
cltd
and
xchg
jmp
and
repnz
or
cmpsb
in
mov
cmpsb
dec
dec
sub
outsl
insb
mov
add
scas
ds
jge
add
mov
cmpb
ret
lea
icebp
push
minps
stos
loop
das
test
adcl
jo
mov
stos
arpl
sbb
arpl
adc
dec
or
push
push
jbe
inc
add
cmc
adc
mov
out
pushf
xchg
pop
mov
and
push
cwtl
pop
sub
call
and
push
in
rcrb
loop
add
sbb
lods
xchg
xor
lret
xchg
movsb
add
push
sbb
arpl
repnz
and
out
scas
mov
jle
cmp
push
mov
andb
inc
lods
jnp
cmp
fidivrs
divb
dec
add
add
mov
and
test
inc
stos
ret
aam
sub
aas
sub
js
insl
es
fcoml
loope
sub
or
std
inc
push
fidivs
add
sub
loopne
out
repz
lret
ss
sbb
adc
adcb
mov
inc
sahf
pushf
sbb
ljmp
xorb
mov
or
sbb
mov
fstl
js
rcll
daa
push
add
mov
or
dec
push
mov
into
pop
push
js
neg
iret
push
xor
or
aas
loopne
lea
cmp
orb
cmp
cmp
push
jae
push
loopne
push
or
xor
cld
lcall
lea
pushf
mov
dec
sbb
insl
nop
jg
ja
and
test
ljmp
fabs
pusha
std
inc
pop
dec
fnstcw
loopne
in
jmp
and
mov
pop
jnp
mov
fs
sub
inc
enter
addr16
pop
xlat
nop
or
sbb
inc
mov
dec
add
inc
je
mov
insl
xor
push
mov
mov
arpl
int3
lahf
and
out
cli
sarl
xchg
xchg
aaa
icebp
or
xor
cltd
shll
out
push
push
scas
test
jo
xchg
pop
pop
pop
lock
test
xchg
and
movsl
mov
ljmp
xor
lahf
cld
int
enter
out
fsubl
sbbl
pop
xchg
aaa
out
cmc
lds
and
loope
inc
filds
push
cmp
test
ljmp
mov
test
mov
jmp
test
jo
add
rol
cmp
jl
jecxz
pop
inc
dec
xlat
les
lods
popa
push
xchg
push
enter
int
gs
mov
jmp
jb
jge
add
pop
adc
adc
ljmp
add
out
xor
xchg
test
and
or
out
aas
inc
mov
dec
lds
aam
xchg
xchg
push
es
movsl
lea
andb
sbb
jno
or
addr16
in
sbb
mov
in
add
gs
xor
xchg
jge
sbb
pop
add
dec
cltd
scas
es
ret
sbb
insl
dec
mov
push
cmpsl
sbb
lcall
jo
inc
int3
daa
jle
sbb
testb
dec
clc
enter
inc
sub
call
clc
mov
mov
pop
arpl
push
jne
sbb
stos
repz
xchg
imul
adc
or
mov
imul
adc
jo
sbb
pop
xchg
ret
fildll
jle
imul
adc
lods
pushf
push
bound
cmpsb
ljmp
movsb
add
push
pop
adc
xchg
xchg
cmpsb
loopne,pt
cmp
add
testb
test
push
ljmp
arpl
mov
js
repz
jno
cmp
adc
mov
inc
push
sbb
cmpsb
outsb
ret
mov
ss
mov
ds
push
aaa
loope
shlb
lock
cltd
icebp
cmp
push
add
data16
iret
jne
mov
push
lahf
stos
xchg
dec
jb
push
in
adc
das
out
test
mov
aad
sahf
loopne
cmp
cmp
int3
lods
jecxz
fsubrp
jno
push
mov
lds
push
push
xchg
mov
add
push
add
es
jmp
pop
dec
mov
mov
stos
loope
jnp
mov
ret
xchg
ja
and
and
sub
nop
jl
mov
popa
lcall
dec
jmp
ja
in
bnd
into
outsl
pop
inc
test
mov
adc
xchg
jo
fistpll
lea
dec
out
cmc
aaa
lret
loopne
jns
je
add
imul
push
adc
mov
les
xor
icebp
cmpb
cwtl
imul
outsl
cmp
es
fmul
fcompl
scas
mov
insl
insb
mov
dec
aaa
stos
pop
mov
cmpb
and
xor
test
cld
mov
leave
pop
xchg
enter
pop
pop
adc
movsl
adc
mov
les
or
pop
add
int
xchg
pop
je
dec
dec
int
mov
lds
sbb
ret
add
sub
xchg
mov
and
mov
push
lds
or
inc
mov
lcall
xchg
sbb
les
jns
mov
ds
in
adc
js
jmp
cli
add
in
ret
push
adcb
mov
xor
cltd
pop
int
inc
push
and
pusha
mov
sub
pop
sbb
mov
xor
lods
sbb
scas
rolb
inc
sbb
hlt
mov
in
ret
add
jae
sbb
xor
mulb
lret
xor
push
lahf
xchg
movsb
mov
jg
adc
aaa
dec
lret
lods
inc
mov
imul
ficoml
pop
mov
sbb
push
push
lods
out
or
scas
clc
cwtl
call
add
inc
pusha
lcall
jp
sbb
push
nop
push
rcrb
jb
lods
call
cmp
xor
or
f2xm1
scas
pop
cmp
pop
and
shll
sbb
repnz
sbb
cmc
movsl
int
ss
test
int3
orb
pop
add
iret
call
or
mov
mov
cmp
adc
xor
mov
shlb
mov
out
pusha
dec
adc
ja
in
mov
decb
jmp
jne
jecxz
iret
pop
sbb
push
and
xorl
add
jg
jl
ss
insl
popl
jns
cltd
mov
mov
sbb
sub
push
cmpsb
fisttpll
loopne
xchg
xlat
in
cmp
shll
test
aaa
call
jecxz
mov
push
and
imul
jae
mov
testb
push
test
xchg
rorb
jne
iret
ret
pusha
scas
adc
mov
xor
push
jmp
cmpsb
in
ds
icebp
loopne
ffreep
push
sahf
pop
lret
iret
in
or
jg
mov
jb
in
xchg
stos
xchg
dec
lods
and
add
cmc
adc
xorb
mov
mov
repnz
add
pop
mov
adc
aam
rolb
pop
add
gs
lods
loope
aaa
ss
mov
cwtl
jl
sub
dec
xor
call
clc
inc
outsl
sbb
cmc
pop
pop
jg
mov
mov
test
fistpl
push
adc
mov
mov
push
imul
pop
xchg
xor
int3
xchg
mov
movsl
loop
pop
ss
xchg
lahf
xchg
fidivrs
cmp
xchg
adc
lret
mov
iret
mov
jno
pusha
mov
mov
cltd
ljmp
stc
bound
fwait
enter
cmpsl
xor
in
imul
cmpsl
sub
cmp
lea
pop
fnstsw
jbe
fiaddl
pop
sbb
mov
xor
frstor
and
pop
mov
add
add
addr16
mov
pop
pop
lods
push
add
bound
ss
dec
test
mov
rorb
mov
gs
sbb
stos
mov
into
out
inc
adcb
sbb
pop
rorl
cld
pop
aaa
push
mov
fstp
xchg
stos
push
inc
aas
push
mov
arpl
push
repnz
int3
inc
push
add
mov
xor
pop
push
rorb
fs
cmp
insl
mov
jnp
pushf
push
aam
dec
jle
daa
jecxz
adc
or
mov
subb
test
sbb
mov
dec
test
repnz
ljmp
or
repnz
mov
mov
mov
insl
call
stc
cmpsl
ret
xchg
xorb
jno
rcr
into
mov
jnp
pop
loopne
adc
repz
inc
sub
sbb
mov
cs
cmpsb
cmp
xchg
into
lret
jp
subb
popa
cmpsl
adc
ret
add
std
dec
fldl
jo
and
iret
push
inc
pop
xchg
repz
je
ss
mov
addr16
push
ja
fstpl
je
loopne
adc
movsl
dec
sti
jecxz
popf
mov
shlb
cs
fimull
jecxz
mov
fwait
stos
out
lret
test
cmc
inc
imul
sar
xor
push
push
jg
add
inc
pop
mov
sbbl
fsts
sahf
add
sub
mov
in
or
lret
cltd
push
imul
add
daa
arpl
fwait
push
jb
iret
sub
daa
orb
lea
sub
loopne
aaa
shll
push
xor
sahf
das
fstpt
pop
cmp
rclb
scas
enter
sbb
jno
sub
mov
stos
dec
mov
and
loopne
inc
inc
xor
insb
lods
iret
inc
in
push
imul
mov
mov
sub
xor
in
les
pop
mov
inc
hlt
add
xlat
fsubrs
adc
sbb
lahf
shlb
inc
data16
cmpsb
sub
sbbl
inc
sub
sub
inc
aam
jae
loopne
add
data16
divl
jb
leave
movsb
jle
gs
mov
lock
cwtl
mov
lahf
roll
js
scas
out
notb
sub
sti
scas
shrb
xchg
inc
fsts
subl
pop
mov
call
jae
mov
les
adc
xor
push
jno
sbb
insl
or
jbe
push
mov
fadds
cmpsl
ret
or
or
xchg
pop
inc
and
stc
cmp
movsb
add
pop
mov
out
ret
and
shl
pop
movsb
xchg
aas
loopne
inc
pop
std
or
push
dec
sbb
add
adcl
fs
stos
adc
mov
sbb
push
lea
test
and
or
dec
pop
adc
jbe
orb
imul
xchg
push
xor
in
out
mov
mov
xor
pop
xchg
gs
rclb
mov
sahf
mov
jo
fldl
adc
pop
dec
insl
iret
and
xchg
lds
jle
sub
sub
scas
adc
jnp
repz
inc
add
inc
sub
testb
or
push
mov
rol
in
aad
stos
sub
or
mov
mov
xlat
in
das
jae
and
dec
cli
movsb
mov
test
enter
das
or
xor
sbb
cs
cld
mov
movsb
inc
jo
xor
scas
sub
ja
loopne
insl
push
sbb
and
lock
push
enter
xchg
xchg
sub
mov
mov
sbb
orb
dec
add
cmp
mov
mov
xor
in
testb
sti
daa
movsl
mov
mov
sti
sub
inc
pop
mov
lea
pop
and
push
lods
xor
andl
jo
adc
cld
xchg
dec
dec
and
outsl
push
fcomp
ror
push
lret
pushf
xchg
push
je
and
pop
mov
es
or
mov
in
call
dec
cltd
and
movsb
lret
loop
sbb
out
rolb
out
scas
xchg
cs
mov
pop
or
xchg
loopne
aad
push
in
testb
or
scas
push
imul
or
lahf
jmp
adc
dec
lea
test
jle
pop
outsl
cld
push
das
das
xchg
lretw
mov
xchg
aam
in
xor
mov
rolb
sbb
mov
dec
mov
xchg
data16
or
inc
movsb
jle
mov
rolb
push
jmp
sub
in
gs
arpl
pop
std
push
loopne
mov
sbb
xchg
loop
repz
sbb
xchg
adc
push
insl
push
or
test
push
fucomi
iret
inc
fcompl
sbb
in
test
fneni(8087
pop
mov
out
sbbb
imul
cli
jmp
mov
push
dec
pushf
inc
inc
cli
pop
sbb
xchg
shlb
aam
push
adc
lcall
cmpsb
pop
fsub
sbb
lods
ret
js
add
clc
fcoml
out
fs
mov
aam
pop
xchg
fdivl
imul
push
jp
push
cmp
fimuls
mov
xchg
or
sbb
inc
scas
push
sbb
mov
sub
fucomp
ds
dec
cwtl
out
jbe
sbb
adc
cmp
fsubl
sahf
push
jp
inc
cs
std
pop
inc
mov
test
dec
push
dec
mov
jp
lds
popf
adc
lret
pop
mov
add
in
in
lock
mov
dec
jo
dec
inc
add
or
rolb
fwait
jo
jecxz
mov
or
mov
orb
inc
ret
hlt
data16
cmpb
add
dec
pusha
imul
imul
mov
xchg
pop
xor
add
pop
js
mov
cli
cvtpi2ps
pop
icebp
mov
mov
scas
nop
inc
dec
sbb
cmp
push
cmova
popa
mov
sub
roll
jecxz
test
fcompl
mov
movsb
or
jl
inc
rol
hlt
lahf
push
stos
ficompl
mov
mov
test
or
jne
mov
push
or
fxch
pop
mov
pop
test
add
add
notl
inc
xlat
sbb
into
dec
shl
adc
pop
je
cmp
inc
jne
cmc
or
fists
adc
test
push
cmc
dec
in
pop
into
push
sbb
push
cmpsb
icebp
sbb
in
ljmp
ss
rcl
jns
pushf
mov
stos
add
sahf
pop
cmp
sub
push
je
mov
xor
cmpb
adc
stos
sbbl
sbb
jle
rorl
inc
lcall
xchg
movsb
push
cmpsl
sub
add
dec
fisttpll
dec
out
jnp
mov
cmp
xorb
push
cmp
dec
mov
push
fdivl
jo
in
push
xchg
sub
mov
xchg
pop
push
outsl
push
adc
shlb
hlt
test
ljmp
mov
dec
jb
popa
clc
inc
jmp
jno
adc
mov
add
jmp
scas
mov
mov
inc
add
stc
loopne
outsl
pop
out
sbb
fnsave
inc
pop
aad
mov
cmp
mov
xchg
or
hlt
jo
sti
xchg
cmp
pop
jno
insb
test
pop
adc
jg
and
adcl
fisubrs
jmp
inc
imul
ljmp
cltd
movsl
cmp
ljmp
and
xor
pop
mov
mov
ret
push
lcall
sbb
dec
push
jecxz
mov
cwtl
aam
int
cmpsl
push
sbb
mov
cmp
cmp
movsb
hlt
mov
mov
in
jb
jg
les
cwtl
mov
jmp
sub
jb
cmpsb
jle
pushf
mov
jecxz
sti
cmp
cmp
in
lods
test
in
xchg
ficompl
inc
fmull
daa
outsb
lret
mov
out
push
dec
scas
mov
cmc
mov
or
lret
loopne
xchg
in
js
sahf
xlat
dec
lahf
cmp
adc
dec
pop
sbb
push
arpl
fmulp
fmull
mov
xchg
dec
test
pop
shll
xlat
ljmp
mov
push
int3
std
or
mov
into
jecxz
out
mov
in
ficomps
shlb
jnp
lcall
xor
cmc
loopne
insb
sub
cwtl
inc
hlt
cmc
imul
and
dec
and
cli
divb
and
push
hlt
cmc
xchg
mov
outsb
jae
mov
mov
mov
test
sub
mov
int3
xchg
daa
push
das
sahf
cmp
lahf
out
xchg
mov
mov
ret
enter
jp
or
out
xlat
mov
add
lret
movsb
aam
mov
sbb
repnz
ss
jb
xchg
add
fists
mov
inc
sub
inc
pop
adc
xchg
loope
test
iret
jbe
fdivr
inc
add
cmp
addr16
sbb
and
pop
addl
mov
pop
cld
adc
les
data16
jmp
jp
lock
push
jmp
mov
add
sbb
cmp
inc
shll
or
test
int3
mov
hlt
xchg
adc
aam
mov
jo
sub
shrb
int
sbbb
mov
sub
fisttps
cmp
fsubl
inc
adc
dec
daa
and
ja
dec
inc
outsl
sti
in
xchg
ret
adcl
cmp
test
outsl
cwtl
jbe
mov
add
sbbl
lret
xor
insl
cmpsb
jb
icebp
push
sbb
int3
jmp
je
scas
les
mov
lock
push
mov
je
xlat
sbb
loop
rcrb
repnz
cltd
push
mov
inc
in
into
pop
mov
xchg
ret
fimuls
cltd
into
dec
sbb
dec
dec
cmp
scas
inc
inc
nop/reserved
mov
mov
movsl
push
lock
xor
jo
mov
or
idivl
pop
mov
sti
and
xor
push
mov
outsl
and
add
pop
iret
mov
mov
adc
aad
ret
push
dec
bound
sub
push
dec
shrb
sbb
jbe
push
cs
rcr
sbb
sbb
leave
imul
mov
pop
out
std
jp
out
lcall
inc
aaa
in
add
paddsb
push
jnp
sub
xchg
pop
loop
mov
adcb
stos
add
or
jl
mov
xchg
pop
shl
add
ljmp
repz
shrl
push
sub
cmp
dec
xor
test
adcb
into
inc
inc
in
enter
push
in
shl
jae
push
test
gs
sub
test
xchg
aaa
mov
mull
xchg
das
fwait
sbb
cmp
hlt
push
and
adc
test
test
fucompp
subb
ja
in
mov
adc
mov
std
add
mov
pop
aad
or
add
iret
aad
sub
in
mov
rclb
mov
jbe
sbb
pop
fsubs
out
xor
pop
bound
popf
xlat
ss
je
test
call
scas
add
daa
cmp
add
mov
jno
jae
xlat
out
shlb
gs
dec
loopne
dec
and
ljmp
push
repnz
pop
imul
aam
rol
aas
pop
sub
inc
mov
fidivrl
mov
arpl
dec
js
pop
push
in
inc
sub
js
data16
leave
int
test
addr16
xchg
stos
dec
add
adc
jmp
or
pop
ret
sbb
inc
or
mov
fs
pusha
notl
jo
push
loope
push
xchg
xchg
hlt
or
int3
jb
push
cmp
xchg
clc
popl
clc
aam
pusha
pusha
or
repnz
push
jo
jne
int3
or
sbbl
and
inc
cs
aas
in
push
cmc
repnz
push
xchg
stc
cli
xlat
inc
shlb
add
popa
cmc
mov
iret
out
cmp
xchg
jns
rcl
push
pop
aas
mul
sub
xchg
fisttpl
sbb
iret
mov
pop
add
std
aad
sub
xchg
inc
test
mov
pop
adc
dec
mov
cmpsl
push
testb
adcw
mov
dec
adc
jb
out
ja
sub
cmp
addl
xchg
add
loopne
ret
test
mov
dec
dec
and
cmp
mov
push
test
cmp
cmp
cmp
cwtl
sub
push
dec
ss
dec
cmp
in
js
sub
inc
xor
pop
mov
mov
out
push
arpl
cmp
insl
and
inc
add
loope,pt
xor
jns
arpl
dec
adc
mov
xchg
fs
cmc
pop
daa
enter
jno
pop
mov
xchg
adc
jb
jge
loopne
idivl
push
xor
test
cmp
push
sub
mov
add
push
push
int
sub
and
add
mov
dec
push
adc
inc
test
jne
xlat
cmc
xor
aam
mov
adc
iret
mov
xchg
xor
dec
test
cmp
sti
repnz
out
loope
fwait
jbe
xchg
rol
mov
xchg
dec
xchg
add
inc
fwait
dec
data16
lods
js
imul
mov
or
call
mov
pusha
int
push
inc
hlt
cs
subl
cmp
push
inc
std
dec
adc
pop
popa
out
cs
adc
jns
sbb
jnp
mov
or
adc
jg
xchg
or
pusha
out
sahf
inc
outsl
mov
xchg
fstpt
pop
lods
cmp
mov
std
or
test
mov
test
je
dec
dec
mov
cmpsb
mov
xchg
pushf
mov
lock
call
adc
or
in
in
repnz
hlt
cmc
push
js
jg
jmp
mov
add
lea
push
sub
or
fs
lods
mov
popa
or
lods
push
mov
inc
cltd
xchg
popf
dec
push
add
fildl
mov
mov
addl
ja
idivb
push
hlt
pop
mov
pop
cmp
xlat
fidivl
in
sti
mov
or
out
sti
push
inc
inc
inc
cmp
and
push
inc
rcrl
dec
int3
lcall
or
sti
icebp
das
mov
mov
outsl
and
negb
xchg
sub
add
and
std
test
mov
xchg
xor
outsl
add
test
popf
insl
int
pop
aas
jne
call
fldt
cwtl
add
pop
nopl
push
add
or
xor
xor
mov
push
in
mov
jmp
cli
adc
insl
aam
push
rcl
cwtl
push
nop
push
jle
aam
sbb
in
dec
or
pop
nop
cmp
in
insl
jmp
sahf
sarb
and
xchg
xchg
inc
movsb
jnp
mov
and
and
mov
lcall
je
fistpll
jno
mov
mov
fimuls
jmp
mov
cmp
fbstp
jle
out
fldcw
aaa
add
add
lahf
out
test
imul
cwtl
cmc
jmp
out
dec
repnz
sbb
mov
inc
aaa
psubusb
sub
sbb
dec
ficompl
cmp
fdivrl
or
pop
addl
inc
cs
data16
push
lods
loope
push
nop
adc
es
jmp
stc
out
cmp
outsb
push
shr
popa
pop
mov
cmp
inc
push
and
cld
bound
cmp
stc
mov
cmc
dec
daa
andl
xor
mov
dec
lods
xchg
jb
jg
rcll
add
and
repz
pop
aad
xchg
inc
mov
arpl
leave
xlat
outsl
xorb
dec
pop
jnp
lea
or
hlt
insb
pop
cmp
pop
les
in
icebp
mov
and
int
sti
in
decl
pop
arpl
xchg
mov
inc
sti
dec
push
mov
dec
movsl
mov
push
dec
xchg
sarb
sahf
inc
inc
test
push
jne
mul
mov
jmp
mov
pop
xlat
aas
push
das
es
ds
xchg
leave
inc
lds
cmp
sahf
lds
call
fiadds
rcrl
movsb
repnz
jecxz
and
fwait
or
mov
mov
shll
or
cmp
imulb
imul
fmull
arpl
push
sub
ds
lods
push
repnz
out
and
pop
sub
push
sbb
sbb
shlb
cld
in
adc
lock
mov
out
mov
mov
ds
sub
call
outsb
dec
lods
in
and
bound
imul
jno
xchg
cs
fmuls
pushf
mov
inc
xchg
leave
fwait
in
jg
in
out
addr16
lock
lods
ljmp
and
je
and
adc
shr
adc
lock
add
mov
sub
enter
xchg
int3
lea
adc
sub
dec
jno
xchg
fs
inc
clc
push
fcoml
jbe
ret
xor
lods
adc
or
dec
mov
lds
add
sbb
in
out
fidivl
movsb
sbbb
cmp
testl
xchg
jle
xchg
gs
call
cmp
imul
fsts
inc
rcl
dec
adc
andps
cltd
pop
filds
movsb
mov
jb
and
and
xlat
call
mov
in
in
call
fiaddl
mov
pushf
inc
outsb
mov
cltd
in
in
std
fists
fdivrl
dec
xor
inc
pop
ror
pop
sahf
xor
ret
sub
lahf
xchg
test
enter
push
jle
pop
mov
das
pop
push
aas
inc
insb
out
clc
cmp
iret
imul
push
cld
daa
repz
incl
push
mov
push
pop
in
pop
add
pop
negb
pop
out
mov
neg
inc
daa
jmp
xor
mov
cmp
clc
mov
movsb
daa
add
lea
ja
mov
adc
cmpsb
push
dec
std
push
sub
es
adc
adc
mov
fs
imul
std
add
ret
or
xlat
loop
mov
mov
insb
mov
stos
cmpsb
push
ret
sarl
push
cmc
push
jnp
loope
lcall
push
add
repnz
std
int3
icebp
xchg
int
cmp
push
and
fadd
pop
aad
mov
or
cmc
ret
aam
push
cmp
mov
mov
push
test
loope
movsb
sbb
sub
mov
fld
sti
mov
test
sbb
lods
jle
or
mov
into
xchg
shrb
sbb
insl
gs
lea
rcll
dec
pop
jns
mov
jl
jp
adc
ljmp
bnd
bswap
data16
in
repnz
push
push
cmc
bound
mov
das
fisubrl
pop
das
pop
push
cmpsl
les
jno
inc
or
inc
das
mov
mov
ljmp
xor
std
in
mov
stc
push
lock
push
stc
fldenv
fmuls
dec
gs
ret
call
adc
inc
imul
jns
mov
stos
mov
mov
inc
cmp
mov
aad
mov
cmp
test
ja
xor
lods
pop
jmp
jae
sbbl
cmp
xor
add
pop
pushf
sub
add
aaa
insb
dec
dec
mov
sti
testb
sahf
jnp
movsb
jns
cmp
loopne
pop
shll
inc
rcrb
sbb
cmpsb
cltd
leave
jg
mov
repz
cmpb
adc
ficompl
fisubs
mov
loopne
jge
test
mov
xor
cmp
scas
rol
sub
pushl
outsl
outsl
imul
es
dec
xor
cmp
cltd
inc
sub
stos
mov
adcb
cs
out
jecxz
adc
dec
dec
and
jmp
jmp
enter
test
sti
mov
pop
imul
icebp
mov
xchg
out
imul
int
bound
ret
fs
sbb
movsb
loop
jle
outsb
push
add
mov
mov
rorw
outsb
orb
ret
scas
pop
loope
and
popf
mov
inc
ret
xchg
fwait
subb
pop
dec
cmpsb
xchg
fcomi
cmp
mov
mov
mov
fcomi
jae
add
xor
test
ret
cwtl
nop
nop
and
sbbb
xor
pop
fwait
xor
xor
fdivrs
stc
jo
adc
cmpl
mov
wbinvd
in
add
test
and
xor
movsb
out
lcall
pop
jno
daa
adc
adc
roll
movsb
ja
mov
pop
adc
jo
jb
cmp
pop
ljmp
mov
pop
cwtl
push
roll
jle
lods
or
add
fldcw
nop
test
loope
add
mov
pushf
mov
sbb
adc
inc
push
push
xor
push
push
movl
cmp
fdivl
add
cs
and
clc
cmp
push
rcrl
add
mov
sarb
mov
inc
xor
cmc
push
movsb
ss
popa
jae
ljmp
or
scas
sbb
outsl
inc
xchg
sbb
sar
pop
push
fdivr
adc
cmc
mov
mov
xchg
ss
lahf
mov
stc
xlat
pop
insb
add
jo
cwtl
movl
sbb
cmpsl
mov
test
mov
std
sarb
jno
test
js
nop
mov
xchg
fildl
int3
filds
sahf
andps
dec
out
inc
sbb
xchg
adc
dec
clc
aam
adc
add
mov
xor
test
xchg
push
push
andl
lds
cs
loop
shll
and
mov
jb
in
xchg
sarl
lcall
into
in
jge
movsl
ja
push
std
es
push
sub
mov
mov
movsb
inc
ja
stc
repz
fldl
or
pop
dec
daa
mov
dec
popf
sub
bound
add
ja
push
pop
jno
in
and
lret
sub
jb
outsl
addb
mov
jl
fcompl
mov
and
ds
cs
pop
daa
mov
pop
stc
in
jmp
xor
icebp
es
cmp
pop
subb
iret
and
push
mov
mov
lret
adc
cli
shlb
push
or
maxps
add
mov
mov
lods
pushf
fbld
stc
fimull
arpl
push
nop
add
scas
jbe
jmp
in
xchg
xchg
xchg
inc
clc
push
iret
mov
and
or
hlt
sub
fdivrs
sbbb
idiv
paddusb
pop
jg
adc
popf
sti
fcmovnbe
sbb
mov
inc
sbb
gs
lock
xchg
sub
cmpsl
mov
cmp
cmp
xor
out
imul
lock
daa
or
das
cmp
fnsave
adc
sbb
sub
leave
or
out
int3
repnz
mov
xor
add
sahf
inc
imul
sub
jmp
pop
imul
pop
add
mov
mov
shrb
test
sbb
dec
fmulp
cwtl
cmp
cmc
jle
fwait
push
loope
or
pop
fcmovbe
inc
xor
lods
cld
xchg
fnsave
insb
scas
sub
sub
inc
sti
inc
cmp
cmp
ds
mov
mov
jb
push
jg
xorl
inc
fwait
sub
stos
notl
mov
aaa
popa
and
out
ffreep
scas
xor
ja
out
mov
dec
test
push
and
fists
out
add
push
mov
mov
inc
mov
call
cmpsb
mull
ljmp
pop
mov
xchg
mov
sub
dec
enter
push
mov
shlb
iret
mov
ret
out
stos
pusha
ret
fiaddl
test
addr16
in
pop
pop
popa
xor
mov
test
ja
pop
sbb
fs
nop
jns
cld
leave
loope
sub
in
insb
pop
mov
sub
movsb
inc
sbb
xor
int
dec
shr
out
daa
aad
ja
mov
cmpsb
cmpsb
mov
jl
mov
aam
add
js
gs
push
ds
lock
pop
pop
or
lahf
jecxz
enter
mov
inc
xor
jmp
or
cltd
push
test
inc
inc
lds
adc
loopne
mov
inc
add
jmp
std
imul
std
in
test
sbbb
xchg
nop
jae
cld
push
mov
cmp
popa
and
cltd
iret
mov
sbb
xor
jecxz
push
pop
pop
mov
fisttps
cli
cmp
mov
cmc
push
rcrl
loopne
xlat
icebp
sub
insb
mov
idivl
cmp
pusha
pop
ja
inc
leave
loop
xor
xor
ja
pop
scas
mov
lods
nop
mov
jl
or
adc
mov
sub
dec
jl
mov
pop
cmpsl
lret
push
dec
mov
ret
test
cmp
enter
pop
fmull
xchg
sbb
pop
cmp
lock
imul
xchg
jnp
lods
repz
lret
es
sbb
cwtl
and
jl
pop
sar
xchg
and
cwtl
hlt
jns
push
mov
sbb
inc
adc
test
test
ret
dec
cmp
adc
cmpsb
mov
in
jne
jecxz
repnz
movsl
mov
mov
inc
jle
icebp
sti
std
and
cmp
push
push
mov
jno
xchg
and
dec
fwait
push
flds
mov
shll
dec
cmp
notl
fldt
in
cmp
call
adc
jg
mov
or
or
in
insb
or
ds
jne
xor
adc
xchg
cmpsl
jp
frstor
mov
sar
xchg
imul
mov
sbb
mov
add
fdivr
jge
notl
mov
call
dec
enter
jb
cmp
popa
pop
xchg
add
mov
std
fsubs
jmp
movsl
adc
insb
mov
jnp
sub
cmp
das
add
push
leave
jo
jp
mov
jecxz
inc
nop
std
dec
imul
xor
xor
test
daa
testb
stos
inc
mov
int3
test
mov
popa
mov
subl
inc
cmp
and
sub
iret
ret
jp
aaa
dec
movsl
push
push
jg
arpl
icebp
sub
mov
mov
cltd
xorl
lahf
aas
cmp
mov
mov
loope
jmp
cwtl
push
fnstenv
cs
sahf
ljmp
sti
pop
cmpsl
lret
add
cmpsl
sub
xor
pop
and
inc
jle
lcall
cwtl
outsl
fucomip
adc
push
bnd
lock
inc
mov
ds
inc
mov
jg
push
mov
pop
sbb
punpcklbw
xlat
xchg
pop
push
ja
sub
mov
sub
sti
shrl
pop
lcall
cli
add
pop
dec
mov
inc
das
xchg
inc
in
fistpll
lock
fdivrs
jecxz
das
jno
scas
sub
xorb
sbb
pop
push
out
lret
push
cmp
or
push
es
xchg
pop
fists
xchg
sub
add
fdivr
sbb
xor
lds
xor
sbb
mov
frstor
sahf
mov
les
sub
subl
lcall
adc
mov
mov
mov
loop
ret
rcrb
ret
push
adcl
fstps
lods
add
mov
pop
clc
xor
cmp
stos
xchg
rcrl
or
push
les
jbe
out
jbe
fcom
adc
push
int
cmp
js
jmp
jecxz
dec
lods
rcrl
int
push
or
movsl
pop
cwtl
jle
ret
and
jge
and
ljmp
int
inc
je
mov
mov
pop
pop
test
mov
mov
mov
repnz
add
xchg
es
insl
cmp
adc
pop
test
pop
repz
mov
jne
xor
pop
daa
enter
das
in
fsubrl
inc
repz
mov
pushf
cwtl
xchg
xor
pop
mov
dec
out
into
dec
movsl
lea
test
xchg
mov
mov
fwait
jb
bound
lea
int3
pop
mov
or
leave
jp
adc
inc
adc
outsl
xchg
pop
jns
arpl
test
loopne
and
inc
call
lods
loopne
mov
sub
fst
jb
aad
pop
sbb
mov
adc
inc
cmpsl
push
pop
xchg
or
cmc
ds
cmp
mov
pop
cmp
push
in
cld
cmp
sub
leave
rcr
ljmp
outsl
inc
mov
xchg
bnd
jmp
fs
pop
pop
adc
and
add
or
jmp
pusha
test
sbbl
fwait
cmp
or
xchg
imul
mov
out
cli
stc
fdivl
out
mov
add
xor
or
in
jo
int3
mov
mov
ljmp
out
lods
sub
out
repz
jmp
fnstenv
aad
into
orb
enter
push
inc
push
dec
and
cmpsl
jne
xorb
fiaddl
mov
ret
popf
fimull
fstp
jl
add
dec
jae
call
xchg
jp
xchg
add
jo
mov
cmpsb
arpl
addr16
and
sub
sub
or
rorl
ret
js
ss
hlt
mov
xlat
nop
xchg
nop
jo
mov
add
push
xchg
ret
scas
movsl
aas
add
add
push
icebp
fbstp
xor
dec
out
push
sarl
hlt
mov
ljmp
mov
push
xchg
jo
mov
fcmovb
sarl
sbb
push
mov
push
lcall
pop
cmp
sar
mov
psubsw
dec
mov
mov
in
fmull
push
test
inc
pop
out
inc
orb
inc
jp
test
call
adc
xchg
int3
push
fildll
rcll
cltd
mov
in
mov
repnz
fwait
lahf
pop
inc
cmc
xchg
push
jo
push
fiadds
inc
aaa
aaa
cli
fs
jp
xchg
test
adc
outsl
repnz
dec
xchg
insl
movsb
ret
or
sub
dec
and
cli
pop
js
dec
leave
xchg
mov
and
mov
lcall
sbb
cmovl
out
stos
stos
xor
scas
sbb
push
popf
add
mov
loope
xchg
mov
out
loope
dec
mov
cmp
sub
dec
in
gs
sbb
fnsave
adc
sbbb
fcmovu
jl
xchg
fadds
sbb
or
leave
movsl
sbb
mulb
mov
add
cmpsl
pop
nop
xor
lock
mov
lds
ss
inc
fsub
call
ds
sbb
adc
call
loopne
fadd
mov
movb
and
or
arpl
push
lea
push
fimull
mov
std
mov
ds
outsl
xor
add
mov
loop
mov
jae
xchg
cmp
fucomip
mov
pop
jbe
iret
push
mov
mov
test
scas
fsubs
xorb
xlat
adc
jae
btr
xchg
xchg
outsb
int
arpl
lods
push
push
fisubl
cmc
push
sub
fistps
out
pop
add
hlt
fcmove
mov
sub
test
push
vxorpd
push
sub
mov
lcall
inc
xor
xlat
sbb
test
inc
hlt
addr16
pushf
xchg
sbb
mov
out
add
fnsave
nop
int
pop
out
mov
mov
mov
add
adc
fnstcw
xchg
xchg
pusha
test
sahf
mov
clc
outsb
and
or
add
xlat
pushl
sbb
stos
pop
or
or
jb
add
push
xchg
pop
movsb
lods
mov
mov
test
and
ret
in
es
out
out
jne
mov
sub
sahf
xor
scas
scas
sub
ret
shlb
xchg
mov
mov
lods
mov
inc
jl
rcrl
mov
and
cmpsb
popf
dec
arpl
mov
jnp
fidivrs
popa
data16
por
inc
push
js
jecxz
inc
sub
je
loop
call
dec
push
roll
loop
add
xor
out
adc
repz
lods
iret
out
add
mov
mov
shl
imul
or
jmp
stc
std
test
data16
and
pop
lret
push
movsl
pop
insl
inc
dec
jb
mov
pushl
enter
mov
repz
push
jbe
sub
inc
movsb
fidivl
fs
outsb
inc
aam
les
pop
jle
clts
sbbb
and
iret
fbstp
add
push
cmpsl
jl
mov
jne
mov
add
adc
push
inc
aad
add
scas
es
daa
lods
pop
xor
pop
adc
idivb
mov
es
push
mov
into
adc
lods
inc
fs
subl
leave
stos
out
sbb
xor
fldcw
shll
incl
int3
xor
mov
pop
hlt
inc
xchg
or
movsb
or
adc
mov
daa
xchg
int
sti
jmp
imul
jnp
adc
jne
add
pop
sbb
stc
lods
dec
cmc
jg
adc
std
sbb
inc
bound
pop
and
insb
icebp
xchg
mulb
imul
pop
inc
lds
out
xchg
jge
gs
loop
pop
out
sbb
sbb
into
call
dec
sub
sahf
ret
lret
call
mov
mov
jae
jl
cltd
xchg
cmp
pop
xchg
jns
mov
inc
inc
dec
xor
sti
inc
jo
out
ljmp
mov
ljmp
sbb
mov
xor
imul
mov
or
cmp
int3
cmc
lds
jge
push
scas
out
push
aaa
lods
jb
mov
iret
sahf
push
push
ja
add
inc
adc
pop
push
mov
call
js
nop
loopnew
inc
inc
inc
xor
pushf
cmp
cmp
cli
or
and
nop
fcomps
and
jnp
nop
in
fadd
xchg
sub
xchg
mov
out
jp
sub
pop
sub
push
pop
push
in
rcr
xor
mov
lret
js
cmp
dec
lea
rcr
andl
hlt
stos
addl
sbb
push
js
lret
xor
jmp
mov
shlb
scas
cmp
stos
sbb
imul
xchg
lock
sbb
aaa
nop
in
scas
dec
dec
fnstsw
movsl
adc
rcrl
shrl
out
mov
inc
or
cmp
orl
jg
pop
push
push
or
aad
scas
cmp
icebp
scas
rcrl
pop
rclb
loopne
xchg
inc
test
jle
mov
xor
daa
orb
pop
or
icebp
inc
adc
adc
or
cmpsl
aad
mov
movups
ja
dec
fstps
sbb
jge
jns
cmp
add
repz
je
hlt
out
frstor
xor
push
push
and
ds
add
repnz
jecxz
fistl
lods
fsubs
pop
repnz
int3
ret
cmpsl
test
out
inc
mov
pop
es
cmp
xor
cmp
inc
dec
daa
test
outsb
hlt
jle
sub
nop
jl
fnstenv
enter
cmp
cmp
dec
jge
add
outsl
sub
ret
out
adc
mov
call
jo
inc
cmp
sub
adc
je
inc
or
mov
inc
js
pop
mov
xchg
ret
push
les
cltd
jnp
dec
adc
repz
mov
stos
mov
scas
test
rcl
stc
ret
xchg
cmpsl
inc
ret
mov
pop
ljmp
test
in
xchg
popa
xchg
push
pop
jno
and
movsb
iret
cs
dec
mov
call
mov
xlat
movsb
dec
add
push
cmp
stos
ds
nop
cltd
jbe
add
xor
sub
mov
and
or
fwait
lods
sbb
test
test
mov
sahf
dec
xchg
push
lds
fscale
out
push
fs
mov
insb
or
xor
lods
sbb
sub
inc
movsb
imul
sbb
jecxz
outsl
adc
push
fildll
add
pop
mov
mov
and
push
les
mov
in
cmpsl
sbb
cmp
dec
jae
jno
or
imul
jns
das
loope
sahf
fdivl
fadds
test
push
scas
push
xchg
xor
adc
aam
or
adc
outsl
loopne
nopl
jns
and
mov
cld
jnp
inc
pop
aad
jg
rcrl
cmpsl
loop
out
imul
jbe
imul
insb
pop
fcom
mov
or
and
mov
enter
cli
xor
imul
bnd
add
lret
cmp
sub
and
cmp
xchg
pop
movsl
js
cli
sub
add
rorb
inc
pop
pusha
jp
aam
jmp
mov
ljmp
mov
xorb
push
imul
jmp
imul
adc
outsb
call
fnstcw
movsb
movsb
dec
add
jnp
int
mov
mov
fldenv
mov
dec
mov
pop
adc
mov
jo
or
sbb
repnz
cmpsl
stos
xchg
mov
jecxz
push
add
mov
pop
shlb
arpl
stc
sarl
cli
dec
adc
sub
and
pop
arpl
and
push
test
sbb
inc
in
jne
jnp
fucomip
cmp
fsubs
dec
pop
testb
mov
daa
push
dec
push
xorb
shrl
push
stc
bound
int
ret
and
adc
inc
and
clc
scas
xchg
bound
loopne
out
cmp
dec
adc
sub
jno
pusha
mov
pusha
xor
sbb
cmp
sbb
cmp
shlb
mov
xchg
cmp
daa
js
mov
adc
sub
in
jbe
lret
loop
insl
stos
sub
cmpsb
mov
jb
dec
jo
pop
dec
arpl
ret
lahf
inc
pusha
movsl
scas
in
addr16
dec
movsb
shrl
xchg
das
stc
adc
fists
enter
xor
jae
xchg
mov
add
inc
sbb
pusha
jno
inc
cmp
sbb
xchg
pop
cs
and
idivb
mov
add
mov
sub
into
es
cmpsl
fsubrs
outsl
mov
loop
loop
test
das
xchg
lods
mov
cmp
sbb
imul
test
cltd
cwtl
movsl
push
xchg
dec
xor
cmpsl
sti
movsb
adc
sub
add
xchg
and
ror
enter
ja
adc
call
aas
cs
adc
or
xlat
lret
xchg
in
pop
adcb
add
test
pop
inc
ret
inc
fisttpl
ja
jbe
in
clc
and
mov
popa
and
lret
jne
aad
dec
mov
jnp
push
xchg
dec
pop
add
dec
sbb
enter
adc
pusha
lcall
rorl
xchg
scas
mov
dec
scas
mov
bound
add
iret
push
pusha
test
orb
push
mov
aas
add
jb
add
imul
das
sbb
stos
jmp
call
lcall
jle
mov
daa
sti
sub
sahf
fistpll
xorb
arpl
and
fistpll
jle
lret
rclb
xlat
add
xor
divl
mov
imul
push
mov
add
test
push
jb
jns
jmp
loop
popa
lahf
push
jne
xor
xchg
mov
nop
sbb
inc
inc
ret
mov
je
mov
mov
shrb
dec
nop
stos
inc
cmpsl
pop
cli
mov
push
loop
xor
xor
aam
mov
dec
cmpsb
fs
lods
mov
pop
sub
jmp
ret
stc
shlb
pop
xor
je
inc
jns
adc
dec
inc
mov
sbb
addr16
xchg
adc
mov
xchg
sbb
or
outsl
cmc
insl
xlat
pushl
add
popa
push
or
leave
inc
sub
push
aad
pusha
inc
movsl
in
mov
inc
pop
cwtl
rcll
mov
push
xlat
sub
inc
mov
jmp
add
adc
jle
cmp
xchg
pop
add
pusha
inc
jb
andb
xchg
in
cmpsl
rorb
icebp
mov
push
sbb
mov
pop
xor
pop
jp
mov
fidivrs
and
in
push
cmp
cmpsl
lods
jl
das
adc
in
sub
xor
inc
pushf
xor
inc
push
data16
xchg
push
push
adc
aaa
rcrl
test
or
xor
imul
adc
inc
ja
mov
int
daa
cltd
movsl
cmp
xchg
or
enter
mov
push
jmp
sub
cmc
aaa
cmpsl
mov
scas
inc
mov
je
and
lret
xchg
pop
adc
and
and
add
mov
push
test
jae
xchg
push
enter
cmp
inc
in
ret
loop
addr16
aas
mov
call
push
loop
jge
or
adc
sub
jns
lret
sbb
into
fcomp
in
ror
push
xor
push
sub
sbb
out
xor
add
data16
mov
pop
push
xchg
test
xor
cmpb
hlt
fs
xor
incb
sub
bound
inc
cmp
xor
out
push
jge
ret
add
mov
in
inc
add
jne
test
pop
cmp
lahf
mov
jp
xchg
adc
outsb
mov
setg
cmp
rcrb
clc
mov
call
jnp
sahf
mov
adc
stc
and
out
insl
adc
xor
dec
lods
push
je
push
mov
jmp
xchg
xchg
lock
xor
ljmp
ja
lock
jne
mov
mov
ret
andb
lods
inc
jbe
std
sar
imul
fldt
je
xchg
shrb
dec
lcall
push
lods
hlt
stc
add
xchg
adc
int
rclb
push
jbe
dec
and
mov
fimull
inc
clc
cli
mov
mov
or
sub
subl
fwait
xor
fldt
lahf
xchg
stos
loope
pop
loopne
test
icebp
cltd
cld
add
pop
and
loop
sub
jae
mov
push
popa
dec
js
mov
notl
popf
push
mov
dec
nop
jp
ljmp
xor
and
fsts
loopne
scas
sbb
and
ficoms
daa
mov
jbe
fdivl
adc
fistpl
int
cmp
out
pop
xchg
dec
test
pop
push
adc
fsubr
jp
xlat
bound
lret
xlat
ds
lahf
movsb
mov
dec
jae
mov
loop
push
push
lcall
mov
jb
jne
sbb
inc
pop
aad
cmp
adc
movsl
cmpsl
push
outsb
pop
jl
and
jb
rol
mov
fwait
scas
dec
test
rcr
jno
inc
decl
cmpsb
addr16
lret
jmp
ja
sbb
jnp
mov
pusha
fs
out
xchg
out
mov
dec
cmp
cmp
jmp
cmp
mov
loope
cmpsb
js
inc
outsb
sub
xchg
sbb
mov
mov
jmp
cli
lods
add
mov
xchg
lock
push
cmp
lret
int
iret
dec
test
lock
or
xchg
sub
test
pushf
push
mov
adc
jo
cmp
rcrl
xor
cmp
sub
mov
cltd
and
jge
and
js
ja
fiadds
fwait
lret
test
test
cmp
cmp
scas
ret
sub
jb
mov
mov
ss
int3
jp
insb
scas
push
rorl
pop
scas
test
jns
es
inc
and
int
mov
dec
arpl
mov
popl
test
subb
out
sahf
jmp
xor
sub
cmp
adc
push
jno
in
outsb
add
inc
mov
adc
add
jns
xchg
fistpll
clc
dec
in
jl
in
or
jg
dec
das
js
ss
jecxz
dec
jl
cld
sbb
pop
andb
jne
inc
bound
movsl
out
sub
cli
cltd
add
sbb
popl
pop
in
and
mov
das
in
in
psadbw
jb
idivb
mov
sub
movsl
mov
leave
test
mov
cmpl
in
cmp
push
dec
add
insb
leave
popa
dec
pop
pushf
flds
sbb
nop
cmp
shll
cmp
pop
daa
or
loopne
out
push
push
xchg
add
or
in
push
sbb
addr16
in
popa
jmp
cmpsb
jae
inc
shll
das
push
xor
out
jmp
push
and
xchg
test
cmpsl
sub
push
scas
jp
push
inc
xchg
sbb
fcomps
pusha
shll
and
out
fstpt
pop
push
dec
mov
mov
dec
cmp
pop
inc
lret
xchg
add
lods
lods
adc
test
enter
adc
fidivrl
inc
negb
cmp
jae
inc
xor
jge
push
aam
sub
adc
aas
add
das
cmp
cmc
lods
nop
mov
add
cld
hlt
xorl
sar
adc
cld
in
jle
jb
cld
in
enter
mov
cmpsb
aad
inc
loope
xor
lds
in
and
scas
clc
stos
sbbl
mov
sub
pop
sub
rcr
das
cmp
xor
mov
cltd
sub
bound
inc
sbb
loope
xor
push
aam
loope
lea
dec
mov
push
mov
ss
mov
icebp
add
stc
sub
iret
inc
dec
mov
cwtl
adc
jp
xor
jne
or
mov
loop
je
mov
cltd
idivb
push
pop
sti
dec
push
fsub
leave
lds
push
test
xchg
pop
mov
out
pop
jns
lahf
sbb
mov
dec
cwtl
not
in
jno
inc
pop
fstps
cmpsl
repz
andl
mov
cmpsl
int3
cld
mov
sbb
gs
sub
test
fisttpll
mov
mov
rcll
pusha
push
jb
inc
repnz
adc
ja
mov
loopne
xchg
shl
adc
popf
xchg
sahf
in
popf
jg
xlat
js
push
mov
xchg
adc
mov
mov
test
faddp
and
add
movsb
sub
movsb
dec
test
std
test
jmp
inc
fsubrs
mov
fstps
jb
ret
pop
mov
push
sub
cmp
jae
fildl
xchg
push
xor
in
in
aad
fnstsw
das
cs
popf
or
lahf
call
mov
mov
pop
mov
mov
leave
mov
int3
insl
xchg
xchg
sahf
push
xchg
ja
mov
in
repz
xor
push
bound
bound
test
pushf
cmpsl
mov
mov
lods
pop
scas
and
mov
enter
inc
xlat
and
add
dec
dec
sub
sbb
add
ja
imul
push
lds
mov
mov
enter
insl
dec
out
lock
push
das
fbstp
mov
fyl2xp1
push
adc
jg
mull
or
sub
lods
xor
aad
ret
adc
inc
add
sub
lods
inc
pop
pop
xchg
jp
pop
bound
sahf
gs
outsb
jo
add
sub
ljmp
ds
fnsave
cmp
jb
adc
fsubs
dec
outsl
cld
imul
leave
cmp
pop
mov
icebp
jg
pop
lods
xchg
jae
add
xor
fs
sub
sub
push
in
and
inc
inc
push
jecxz
mov
imul
movsl
lods
je
push
and
lcall
xor
shll
das
lcall
loopne
push
mov
or
push
sbb
movsl
or
div
xorb
mov
shl
and
push
or
pop
mov
popf
nop
ljmp
mov
ljmp
cmp
leave
mov
pusha
dec
cmp
mov
xor
jno
mov
rclb
cmc
jl
pop
out
sahf
adc
mov
xor
inc
cld
push
imul
mov
jo
fstp
xor
leave
mov
jns
cmc
loop
cmpsb
cltd
imul
mov
cmp
lret
andl
clc
sbb
fldcw
stos
xor
ret
sbb
insl
fimull
cli
pusha
xchg
lahf
adc
cmp
cmp
sbb
sbb
inc
data16
xor
aaa
movsl
add
mov
jg
mov
cltd
mov
mov
and
hlt
out
test
dec
dec
adc
sub
orb
stos
shl
cmpsl
jb
dec
or
clc
fwait
outsb
adc
sub
pop
enter
and
lret
dec
xor
lock
and
cmpsl
repz
scas
mov
xchg
dec
mov
sbb
ret
aaa
movsl
dec
cwtl
stos
fdiv
int
mov
cmpsb
leave
cmp
push
pop
fisttps
jnp
mov
or
sbb
sbb
or
sbb
fs
insl
and
stos
hlt
inc
test
inc
and
stos
fxtract
jo
dec
in
or
xor
inc
pushw
aaa
cmp
cmc
ljmp
enter
inc
dec
fcmovbe
sarb
adc
leave
loop
pop
gs
cmpsl
xor
add
clc
ss
adc
push
repnz
push
push
out
fadd
inc
std
scas
in
icebp
scas
mov
push
cld
mulb
test
into
daa
repz
outsb
xchg
push
sbb
cmp
or
xor
das
cmpsb
jbe
enter
shll
push
stos
mov
cmpl
je
xchg
ja
sub
out
lds
subb
or
in
cld
mov
sbb
call
and
js
inc
push
push
scas
jns
sub
idivl
or
icebp
pop
lret
mov
push
les
lods
dec
inc
xor
sahf
repz
inc
stos
gs
outsl
sbb
pop
mov
imul
mov
outsl
mov
fwait
addr16
sbb
mov
mov
pop
lret
gs
je
jl
and
sar
ret
inc
sub
clc
orl
jge
xor
add
les
movb
outsl
add
pop
imul
push
loopne
fsubl
aam
dec
cltd
cld
adc
mov
cmp
mov
movsb
es
mov
daa
lret
out
outsl
and
or
popf
out
sbb
lock
aas
fistps
mov
lcall
cs
jecxz
or
test
ret
out
jnp
inc
decw
pusha
out
or
mov
loope
mov
sub
rorb
mov
sar
sub
cmp
xor
pop
in
iret
idivl
xor
cmp
clc
insl
jo
and
repz
mov
xor
fisttpl
repz
lds
and
je
clc
and
adc
xchg
jo
xor
mov
push
inc
fcmovu
mov
lret
or
imul
sbb
mov
mov
xor
cli
mov
mov
sbb
jle
enter
mov
jns
cmp
inc
out
or
scas
sbb
sub
adc
inc
sub
jo
cli
inc
mov
pop
add
mov
inc
xchg
sbb
addr16
mov
and
add
call
cwtl
shrb
das
mov
movsb
ret
add
bound
and
dec
pop
pop
or
out
dec
into
icebp
pop
cmpb
xchg
sbb
ret
out
mov
loope
stos
in
notl
inc
pop
cmp
das
push
jo
lods
ja
bound
pop
lds
mov
ljmp
mov
push
cmp
sub
pusha
nop
lds
out
imul
cmpl
out
pop
lods
mov
arpl
addr16
push
push
sbb
push
cmpsl
cwtl
in
cmc
imul
in
lret
add
ret
out
or
scas
loope
push
mov
scas
int
imul
pop
xchg
loop
adc
call
idivl
inc
dec
repnz
loopne
gs
xchg
addr16
and
les
int3
jbe
inc
fstpt
and
pop
pop
aam
add
or
pop
sbb
inc
lods
dec
pop
dec
xchg
imul
jge
xchg
pop
pop
mov
out
aas
stos
sub
fstps
dec
sbb
lret
lds
pop
dec
mov
add
cmp
scas
out
ficompl
mov
add
xchg
mov
call
mov
cltd
mov
and
pop
sti
dec
rcrb
shll
mov
and
hlt
jb
inc
sbb
push
xchg
pop
xor
jbe
sub
mov
cmp
xchg
jmp
add
mov
and
pop
mov
aam
adc
and
or
mov
mov
rorl
sub
jl
ljmp
mov
fs
test
mov
aas
movsb
mov
sarb
fistpl
std
into
je
jl
jne
cmp
jecxz
clc
inc
cwtl
stos
sub
ficoml
notb
push
mov
cmp
xor
mov
outsl
sti
out
test
in
adc
xchg
sbb
repz
je
xchg
aaa
idivl
adc
adc
mov
dec
sub
fcomi
bound
into
aam
ret
jle
cmp
and
sbb
pop
ljmp
addb
pop
sbb
test
or
clc
outsb
roll
pop
aas
cld
sub
push
mov
push
adc
xchg
push
cmc
and
lods
push
cmpsl
gs
xor
xchg
fidivrl
mov
orb
ret
std
cmpl
cli
and
mov
cli
cltd
pop
mov
stc
popa
sbb
cld
lahf
or
jp
into
dec
or
dec
or
fwait
mov
inc
jnp
inc
test
sub
in
mov
pop
sbb
jns
sub
loop
jle
add
push
fiadds
popf
push
cli
add
iret
mov
fwait
mov
mov
jle
lret
sub
cmpsb
int
xchg
dec
popf
lcall
fwait
cwtl
outsl
in
es
dec
dec
scas
pop
sbb
sbb
clc
mov
xorl
es
repnz
fwait
popf
and
pop
add
cmpsb
pop
stc
sahf
xor
repnz
mov
aam
cld
xor
mov
push
mov
jg
cmp
sub
clc
add
loope
hlt
test
mov
cs
int3
push
scas
mov
std
cmpsl
jmp
enter
sub
or
jg
adc
lcall
mov
pop
fiadds
push
and
lock
iret
xchg
push
icebp
or
popa
fdivrl
pop
mov
sahf
cmp
mov
mov
mov
jne
jnp
mov
sub
fildll
inc
cmp
icebp
pushf
sub
inc
js
shl
icebp
or
xchg
pop
push
fdivp
and
scas
cmp
outsl
inc
jae
mov
xor
mov
test
sub
repz
imul
cs
sahf
out
dec
lds
dec
mov
and
push
out
mov
int
xchg
rclb
jno
mov
icebp
cmp
jecxz
pop
xchg
sub
mov
adc
xor
shlb
int
stos
pop
gs
rol
mov
scas
push
pop
jg
pop
fadd
repz
cwtl
and
pop
loopne
xor
rcl
xor
clc
xchg
push
add
ja
pop
jge
cmp
mov
cmp
xor
mov
jo
mov
rcr
mov
sub
mov
iret
jge
or
jle
dec
nop
dec
lcall
sub
push
fildll
inc
push
pop
push
or
adc
mov
sub
nop
inc
dec
loop
loop
movl
lcall
fs
push
imul
or
sub
movsb
scas
xor
ja
adcb
sub
shl
lods
pop
sbb
add
iret
and
repnz
lock
xchg
pop
mov
adc
test
push
sub
dec
ljmp
cmp
or
nop
sub
fisubs
jmp
test
insb
and
sub
cli
xchg
add
cmp
pop
mov
or
adc
lahf
inc
rolb
rolb
nop
movsb
je
cmp
inc
test
outsl
jmp
jl
mov
cmpsb
dec
push
add
cmpsl
jge
movsb
push
mov
dec
push
adc
jnp
cli
icebp
or
addr16
mov
stos
inc
test
sub
divl
iret
xor
mov
cs
in
insl
jbe
ds
lock
and
cmp
sub
scas
push
hlt
pop
jg
daa
sbb
sti
adc
sbb
add
sub
sub
push
cmp
insb
ljmp
push
aam
outsb
enter
imul
outsb
push
add
dec
mov
push
jbe
and
dec
push
repnz
mov
mov
or
add
movb
ret
dec
lods
rcrl
mov
jp
imul
jno
sbb
push
mov
decl
and
xor
or
pop
neg
loop
xchg
orl
movsb
fadd
in
push
cmpsb
inc
cmc
daa
xor
dec
or
add
jae
movsb
inc
inc
adc
cmp
inc
mov
popf
cmp
cmpsb
push
jecxz
cmp
stc
sbb
stc
dec
mov
out
scas
popa
imul
lods
aaa
dec
inc
ret
dec
mov
adc
push
add
icebp
cmpsb
clc
aam
fs
add
lods
loope
lret
xchg
in
cs
rorb
lds
sub
xlat
fisubrs
lcall
push
jns
dec
aaa
inc
push
js
inc
add
in
add
movsb
pop
push
scas
inc
les
mov
lret
mov
mov
test
inc
sbb
cmpsl
adc
cmpsl
and
rclb
iret
nop
arpl
fimull
mov
stc
imul
loop
and
mov
stos
xor
dec
or
push
sub
push
scas
xchg
aad
and
fs
sub
mov
inc
mov
xor
sbb
cltd
mov
out
ss
daa
push
push
test
imul
jmp
icebp
out
outsb
icebp
xchg
sahf
xchg
sahf
adc
popf
adc
lea
xor
fdivrl
or
ljmp
xor
xchg
imul
enter
dec
cmpsb
cmp
repnz
and
lods
int
ret
xchg
adc
jno
adc
cltd
pop
ja
dec
sbb
dec
and
pop
int
xor
sbb
sbb
push
mov
movd
pop
mov
push
mov
fst
mov
and
adc
mov
ret
movsb
jg
inc
sub
adc
dec
lods
std
cmpsl
outsb
bound
fs
out
jae
mov
jmp
pusha
push
cmp
hlt
pop
sbbb
fwait
hlt
test
mov
mov
imul
int
ljmp
sbb
jbe
xchg
lahf
dec
jle
jl
aam
xchg
in
xchg
shlb
or
nop
shll
leave
shl
cmp
mov
das
and
mov
fdivrl
rcl
jno
dec
bound
push
sub
mov
cmpsl
cmp
pushf
in
iret
and
shll
int
shl
pushf
insb
jb
xchg
lar
inc
xor
jno
cmp
ja
xchg
xor
stos
mov
add
mov
pop
or
add
push
popa
push
icebp
nop
and
sti
fisubrl
fbld
rcrl
insb
cmc
and
lret
push
xor
pushf
aas
pop
cmpsl
push
pop
subl
jecxz
sub
inc
xchg
out
imul
add
popf
popf
inc
jge
and
mov
inc
xor
das
aam
aam
daa
repz
sahf
pushf
xchg
inc
aas
int
sbb
pop
loopne
bound
sbb
adc
xchg
jmp
call
fcmovnbe
mov
dec
jmp
xor
mov
lahf
pop
dec
rcrl
pop
repz
testl
cmpsb
test
mov
bound
sbb
nop
fs
or
xor
int3
xchg
phaddw
fistpll
inc
xor
jge
pop
pusha
pop
mov
stos
les
orb
sub
ret
dec
dec
cmp
pushf
pusha
mov
cmp
pop
push
lcall
add
ret
pop
fs
sub
loop
xlat
clc
inc
divl
sub
mov
lahf
add
enter
lcall
ret
sbb
xchg
cmp
test
rolb
sbb
arpl
imul
xor
jo
and
mov
mov
or
cmp
inc
xchg
mov
filds
push
dec
rcl
int3
xchg
ss
inc
aas
outsl
jmp
mov
xchg
popf
cltd
pop
sbb
push
mov
or
ret
call
imul
jne
in
stc
and
fsubrl
loope
roll
jp
loope
out
jp
iret
outsl
push
std
push
dec
insl
xchg
jle
fdivs
call
sbb
adc
dec
xor
sub
add
pushf
int
mov
xchg
mov
and
cmp
mov
inc
sti
addr16
mov
cs
je
xchg
insb
mov
sbb
sbb
dec
push
insl
dec
cmp
iret
jle
ffreep
test
xchg
aas
shll
jecxz
xchg
and
popf
xorl
jmp
push
cmp
mov
mov
test
dec
ror
cwtl
xchg
cmp
jne
rorl
pop
adc
jl
mov
push
popa
adc
dec
popf
xchg
inc
aas
lret
add
and
cmp
add
ret
out
in
inc
repnz
loope
cmp
out
xor
add
je
stc
call
stos
jp
mov
js
push
bnd
repz
rcrl
pusha
or
push
and
push
les
ss
sbb
mov
push
leave
lock
add
cltd
push
subb
pop
adc
je
ret
adc
sub
test
dec
and
out
add
push
push
lock
jmp
sbb
scas
add
sti
daa
in
iret
mov
mov
dec
or
pop
ljmp
mov
and
hlt
dec
push
or
dec
sahf
fstps
jb
dec
clc
pop
repz
icebp
dec
pop
jae
xchg
sbb
sbb
pop
aaa
mov
scas
push
mov
fwait
sbb
repnz
mov
or
add
jle
push
dec
cmp
xchg
iret
enter
dec
fmull
dec
add
out
rcrl
mov
lods
sbb
sub
add
mov
pop
int
jns
out
xchg
push
mov
xor
jbe
mov
xchg
idivl
jge
xchg
push
int
pushf
fcoml
stos
mov
rolb
aad
add
pause
dec
jb
pusha
scas
lods
mov
inc
shrb
jge
and
cmc
aam
cmpsb
mov
mov
jbe
pop
mov
adc
stc
or
add
lahf
shr
movb
sub
pop
repnz
fs
inc
pop
in
and
bnd
or
cs
clc
cwtl
adc
mov
add
enter
leave
mov
out
inc
cmc
jno
aad
cmp
xor
pop
and
pop
push
mov
stc
mov
mov
inc
subl
rcrb
add
add
adc
xchg
into
sbb
inc
push
call
jmp
dec
inc
inc
ret
aam
aam
xchg
repz
fidivrl
rcl
arpl
outsb
sbb
cmp
push
mov
aam
dec
jnp
sub
aas
sub
out
cmp
mov
int
in
into
sub
repnz
je
or
cmp
clc
lds
fdivr
xchg
or
out
pushf
shrb
les
sub
inc
xor
cmp
xchg
fidivs
test
and
insl
out
pop
pop
jge
and
push
inc
add
and
jle
scas
fistl
ss
in
xor
cmp
imul
inc
bound
push
dec
popa
fisttpll
rcrl
fisttpl
sub
stos
sahf
adc
inc
ja
ret
push
sbb
call
fdivrs
inc
or
jle
dec
add
adc
adcl
cmpsb
ret
movsb
xchg
outsb
push
pop
out
jmp
add
fsubrs
jnp
mov
test
push
and
mov
adc
add
cmc
insl
sub
xor
cwtl
out
sub
call
pop
mov
jg
cmp
dec
adc
and
cmp
ss
loope
mov
out
cmpsb
lods
cmp
test
pop
es
dec
mov
outsb
pop
rclb
jmp
mov
loope
idivl
testl
popa
loope
mov
xor
xchg
shll
insl
jp
push
pop
xchg
jo
or
mov
mov
rcrb
movsl
loopne
mov
push
fwait
jnp
cmp
jp
and
xchg
ja
cmp
repz
or
dec
out
and
test
adc
pop
xor
xor
lods
mov
imul
inc
js
cli
mov
mov
das
inc
pop
cltd
lret
pop
test
lea
lret
jg
sahf
pusha
es
mov
push
out
push
movsl
add
cld
addl
pop
inc
mov
jnp
add
je
or
nop
mov
je
pop
stc
filds
les
sbb
jae
cli
mov
adc
jo
xlat
adc
sub
sarl
dec
mov
dec
xchg
pop
jo
adcb
push
repz
mov
cld
dec
in
inc
sbbb
movsb
mov
push
push
cmp
push
jno
and
cmp
scas
jae
sub
pop
lods
xchg
dec
jp
mov
hlt
lret
cmpsl
cmp
mov
stos
mov
rclb
cmp
xor
add
xchg
ljmp
jl
mov
leave
fs
in
pop
adc
into
xchg
xchg
shrl
push
push
xchg
lock
rcrb
sbb
out
jno
mov
ja
cmp
push
inc
nop
dec
ss
mov
xor
jb
cmpsb
ret
rcrl
fldl
arpl
ja
push
stos
insl
xchg
xchg
fldl
lods
pop
out
das
ret
cs
sbb
pop
lahf
ds
iret
mov
lods
or
loopne
out
popf
aam
rcrb
clc
add
cmp
aaa
ss
lahf
out
and
push
sub
in
hlt
sub
leave
inc
leave
cmp
leave
mov
xchg
pop
jnp
jle
xor
or
push
sub
fcoml
mov
mov
pop
fnstcw
sub
lds
ds
jge
mov
jae
out
pop
test
out
jnp
mov
scas
les
lret
xor
cmp
lret
push
mov
dec
lret
add
lret
hlt
push
loopne
and
out
and
sarl
cmp
cmp
pop
add
mov
orb
fidivs
enter
fldt
sbb
cwtl
in
lods
add
xchg
insl
jge
sub
mov
adc
sub
std
lods
and
movsl
fsts
adc
dec
aad
push
mov
ret
mov
or
mov
sbb
lret
test
arpl
outsb
xchg
pop
or
adc
ljmp
mov
or
push
cmp
xchg
cltd
icebp
push
insb
cmpsl
add
xor
stos
or
lods
push
ror
jns
inc
outsb
gs
shrb
pop
jns
leave
mov
jl
sbb
outsb
pop
aad
dec
cmp
faddl
das
mov
rclb
pop
pushf
decb
fcoms
sbb
fidivrs
sub
fiaddl
mov
lds
mov
aas
sbbb
mov
enter
jp
rclb
or
into
movsb
jno
loopne
enter
outsb
icebp
and
xorb
aaa
fdivrl
sarl
repz
jecxz
jecxz
std
push
and
xor
dec
sub
inc
mov
or
aad
add
inc
fstpl
fldt
cltd
and
push
inc
aaa
cld
or
mov
sbb
sub
sbb
sbb
aam
push
scas
cmp
cmc
mov
mov
arpl
mov
imul
pop
add
fnstcw
jecxz
dec
aad
stos
test
xchg
xlat
fstl
push
mov
lahf
xor
scas
lods
out
mov
or
test
dec
jne
xor
dec
ds
jecxz
mov
lds
push
xor
jg
mov
shrl
and
test
mov
testl
mov
pop
dec
pop
cld
fs
or
into
push
into
mov
ds
sbb
addr16
mov
icebp
xor
imul
adc
mov
jb
mov
sbb
dec
dec
stos
adc
daa
ret
and
rcrb
arpl
cmp
cltd
and
mov
aaa
or
mov
mov
fisttps
stos
xor
aas
add
nop
inc
fistps
push
sub
sbb
add
adcl
mov
mov
cmp
mov
jg
push
inc
push
mov
rol
jae
cmp
out
rorl
cmp
and
xor
xorl
mov
mov
jmp
jbe
jns
sub
jmp
dec
push
test
out
ficompl
mov
mov
mul
sbb
jp
inc
adc
das
fs
lcall
or
dec
aam
add
mov
cmc
mov
lods
fidivrl
stos
lret
inc
xor
mov
jp
ja
or
mov
imul
pop
pop
pop
testb
dec
mov
dec
dec
pop
xor
fs
push
xor
xchg
in
xlat
fisubl
adc
push
gs
mov
push
mov
iret
sub
xchg
or
push
add
cmp
cmp
clc
dec
rcr
push
xchg
or
gs
repz
hlt
ss
sbb
inc
stos
sti
test
dec
call
or
aad
pushf
movsb
jecxz
subl
imul
sub
lret
xor
cmp
js
mulb
mov
jne
cltd
lock
pop
rcrl
cmc
repnz
cwtl
mov
and
inc
and
cmp
mov
cmp
adc
repz
aaa
and
enter
out
cmp
pop
loop
adc
dec
dec
fsubrl
add
outsl
adc
mov
repnz
xor
push
push
pushf
mov
loope
daa
mov
pop
mov
or
dec
inc
push
mov
cmc
or
andb
in
jb
sub
push
call
pop
dec
pop
cmp
dec
ret
into
jp
xor
js
add
sub
out
inc
repnz
subl
popf
mov
stos
fcompl
or
push
ss
popa
repnz
add
mov
rcr
inc
out
push
ret
or
push
call
pop
cmp
popf
xor
imul
test
jl
imul
or
or
push
xchg
lahf
jbe
sub
adc
mov
mov
and
push
out
mov
xor
mov
dec
mov
mov
add
inc
lock
nop
push
mov
sbb
mov
pop
adc
mov
mov
sbb
and
das
jbe
sbb
and
mov
xchg
sub
shrb
popa
jno
fsubrl
out
cmc
daa
jmp
adc
mov
mov
jns
pop
xchg
clc
sbb
and
inc
and
sarl
mov
and
xchg
int3
and
shll
sub
cmpsb
sbb
adc
out
out
test
cmp
je
bound
fstpt
push
jno
in
jp
and
js
add
mov
xchg
cld
push
pop
ret
inc
sbb
hlt
test
xchg
daa
xlat
jo
push
iret
mov
jmp
sub
fs
xchg
push
sbb
sub
inc
pop
incb
mov
or
cmp
aad
pop
jle
xchg
cwtl
sbb
or
ficoms
gs
shlb
xorb
fsubrl
in
cltd
mov
lret
lahf
dec
fcmovnbe
inc
lahf
jmp
test
pop
xor
or
lods
and
adc
jo
or
mov
add
addr16
mov
push
sbb
adc
lea
fcmovnb
xor
test
pop
jecxz
and
adc
push
hlt
and
mov
dec
jp
jo
pop
push
arpl
jg
inc
and
push
cmc
out
jg
xchg
fsqrt
and
dec
jnp
mov
add
outsl
mov
shr
jl
les
shrb
inc
lock
xchg
jmp
addb
cmp
jmp
lret
ljmp
mov
push
and
add
xchg
mov
xchg
imul
inc
stc
scas
xor
adc
xlat
das
mov
xchg
frstor
dec
mov
aaa
pusha
dec
into
jmp
jge
addr16
xor
jb
mov
outsb
ja
jle
stos
out
cmp
clc
xchg
lcall
iret
adc
add
cld
fidivrl
hlt
dec
mov
stc
cmp
inc
add
in
dec
dec
sbb
loope
rcrl
xchg
jmp
int
jp
and
jecxz
iret
sub
hlt
call
inc
pop
aad
test
or
mov
in
imul
sbb
jp
stc
int3
test
fdivp
sub
xchg
jecxz
xchg
xor
cwtl
and
add
xor
aam
bound
cmp
pop
popf
insl
and
mov
pop
daa
inc
pushf
outsb
cli
je
cld
outsl
or
mov
pop
sti
mov
pop
das
lods
nop
ret
roll
outsb
mov
popf
mov
jp
xchg
scas
sbb
test
cmpsl
mov
fsubrl
pusha
jp
adc
cmp
cli
pop
nop
out
xchg
dec
sbb
jmp
sbb
xchg
das
cli
outsb
xchg
data16
mov
jecxz
imul
adc
dec
jae
adc
lea
in
mov
ret
mov
dec
in
mov
push
cmp
xchg
ret
jmp
push
add
cmp
inc
push
mov
push
addr16
stc
enter
in
mov
mov
in
pop
pop
nop
add
fldcw
and
outsl
sbb
fucom
jmp
andl
cmp
and
lcall
scas
dec
arpl
test
sbb
jbe
mov
stc
shll
movsl
and
ds
nop
rorl
push
xor
dec
cmp
mov
ss
push
pop
sub
sub
dec
mov
in
xchg
dec
sti
pop
orl
inc
push
jle
xchg
adc
pop
jecxz
rorb
push
int3
jb
sub
jne
rorl
lahf
rcrb
sbb
scas
pushf
mov
iret
inc
cmc
pushf
test
push
xchg
outsb
into
enter
outsb
mov
gs
cli
dec
clc
in
or
imul
aam
adc
xchg
inc
gs
push
sbbb
lea
mov
xchg
std
mov
decl
mov
xchg
push
xchg
pusha
ss
jl
movsb
and
dec
sti
mov
mov
mov
sar
lea
shrl
dec
cwtl
fists
stc
out
lcall
jo
or
lds
repz
dec
js
sti
push
shll
testl
rorl
mov
mov
pop
jmp
stos
push
shrd
sbb
pop
cmp
push
mov
add
mov
pop
scas
mov
std
xchg
dec
dec
aaa
adc
xchg
push
ret
pop
decl
add
or
lods
scas
stos
repnz
dec
loopne
xchg
ret
inc
mov
negb
lock
add
outsb
dec
mov
jns
inc
aaa
jl
jl
subb
jo
pusha
dec
sub
popw
into
call
adc
xchg
push
sbb
aad
dec
pop
xchg
sub
fs
imul
push
dec
xlat
fisttps
mov
mov
arpl
or
ret
dec
insl
jle
pop
in
cwtl
pop
aas
test
push
pop
ljmp
cmpsb
insb
addr16
and
and
fiaddl
call
mov
mov
fcom
scas
cmp
inc
add
lods
sbb
mov
je
cmpb
aaa
cmc
mov
ja
or
repnz
push
push
int
stos
push
inc
lret
clc
inc
int3
pusha
pop
dec
bound
xchg
and
lods
jp
aad
pop
bound
sbb
lods
cmp
insb
cltd
ss
in
dec
arpl
out
mov
movsb
out
inc
fistpl
fs
and
test
and
repnz
mov
stos
je
jmp
orl
mov
and
push
insl
mov
sbb
fstl
pushf
daa
xchg
push
negl
inc
fisubrs
cmpsl
out
jl
inc
out
xor
add
and
div
outsl
jmp
aaa
ficompl
sarl
vorps
fwait
jge
adc
sbb
pop
shll
add
clc
scas
cmp
ds
mov
int
das
jns
sub
mov
std
or
mov
mov
mov
repz
lret
shrl
test
lret
test
dec
mov
pop
dec
lods
mov
sub
sbb
or
subl
mov
xor
fwait
xorl
sahf
jmp
jp
call
scas
sbb
and
rcll
in
daa
iret
mov
fstpl
jl
mov
test
sub
jl
movsl
clc
push
lea
test
jge
xor
outsb
lea
test
mov
ja
insb
stc
mov
mov
js
scas
cmp
test
shlb
adc
add
xchg
mov
jle
mov
addr16
xchg
imul
lcall
movsb
mov
or
hlt
xchg
inc
xchg
out
sub
mov
jg
xor
mov
les
data16
xorl
aam
cltd
xor
les
pop
mov
loopne
ret
pop
cld
add
cmp
lahf
mov
jge
cmc
enter
stos
lds
je
sbb
sahf
outsb
sub
push
loopne
insb
jp
lods
stos
sub
lea
dec
dec
scas
and
outsb
sbb
mov
aam
sbb
inc
nop
ds
pop
mov
mov
jecxz
fs
adc
and
loopne
add
sbb
mov
xor
and
ror
adc
or
hlt
mov
mov
cwtl
or
add
adc
push
xor
inc
cmp
popa
movsl
mov
pop
jno
in
add
loopnew
clc
dec
scas
cli
fists
iret
enter
push
inc
mov
je
jmp
daa
mov
mov
in
pop
leave
xchg
lock
push
and
dec
cs
mov
lret
sbb
daa
mov
scas
fst
inc
lahf
xor
jns
jae
add
lcall
mov
cmp
sysenter
pop
push
mov
push
testb
mov
push
mov
jle
sbb
sar
in
jl
pop
inc
xchg
xchg
sti
cmpsb
outsb
cli
xchg
and
pop
aam
jge
das
sbb
push
sub
dec
dec
dec
lock
mov
cs
adc
es
dec
pop
test
mov
cld
jbe
stc
mov
adc
rcrb
js
or
xor
iret
repz
shll
and
xchg
sahf
add
shlb
push
or
mov
inc
js
jge
leave
cmp
stos
xchg
daa
xchg
out
leave
imul
arpl
xor
jecxz
stc
and
lret
cmp
dec
arpl
jmp
pushf
mov
mov
test
mov
add
ret
test
lret
xlat
adc
gs
mov
or
add
lds
fistpll
stos
insb
insl
xor
sub
adc
mov
stos
pop
xchg
test
push
xchg
js
lcall
mov
mov
lea
mov
adc
pop
in
das
inc
mov
sub
mov
and
fisttpll
push
inc
ds
pop
jbe
sbb
mov
fbld
lds
arpl
push
scas
mov
mov
shrb
pop
jmp
popf
in
fists
add
in
xchg
mov
jne
xchg
insl
mov
xchg
sbb
rcrl
sbb
add
sti
aam
jmp
pop
cmp
and
push
mov
sub
lret
mov
pushf
adc
test
shl
mov
mov
mov
jle
xchg
stos
stos
gs
mov
dec
mov
imulb
pop
lods
jae
or
add
dec
test
mov
repnz
iret
xor
stc
leave
les
leave
sti
sahf
ret
mov
stos
fstpt
mov
aaa
xor
addr16
orb
push
inc
std
ret
mov
fdivl
ret
adc
mov
shl
cmp
or
cmp
cwtl
sbb
push
mov
push
daa
stc
cmc
pushf
mov
pop
xchg
cli
sbb
xchg
sbb
stos
out
mov
mov
in
jo
addr16
and
int3
test
lds
shll
enter
loope
fnstsw
movsb
mov
sbb
js
shll
mov
fucomip
rcrl
int3
hlt
addr16
and
cmpsl
mov
mov
add
pop
sbb
js
loopne
cmp
inc
lret
pop
pop
mov
dec
callw
dec
test
cli
out
divb
imul
cmp
jb
rcr
fs
lods
mov
or
lcall
shll
scas
jae
icebp
jno
jp,pt
mov
cli
fisttpl
fisttpl
mov
lret
sub
xchg
out
jmp
jmp
jg
int3
mov
jo
lret
fbstp
out
sarb
xor
cmp
cmp
jae
cmp
emms
cld
push
adc
ret
ret
sti
mov
in
mov
popf
daa
push
xor
or
mov
pop
pop
jbe
inc
sub
push
mov
sbb
fistpll
mov
sar
xchg
popa
in
adc
int3
mov
rcll
in
stc
jmp
imul
jmp
mov
int3
ret
out
data16
fs
mov
adc
insb
sbb
mov
xchg
imulb
in
mov
aaa
rcl
mov
pop
mov
outsb
sub
mov
pop
les
std
aam
xlat
out
arpl
subl
and
inc
sti
inc
add
pop
pop
dec
mov
std
test
sbb
mov
sbb
decb
sbb
mov
sbb
imul
dec
cltd
les
aaa
inc
scas
jns
xchg
cmpsl
and
imul
mov
dec
mov
je
fs
mov
add
sub
enter
mov
sub
xor
cld
mov
fldenv
jmp
pop
ljmp
push
mov
push
pop
inc
cmp
gs
sbb
shlb
not
add
pushf
push
dec
cli
fisttpll
mov
jmp
ljmp
add
pop
mov
dec
pop
pop
dec
pop
inc
orl
pop
jne
cs
add
lods
jb
notl
popf
xchg
jl
xchg
jge
or
insl
fs
aas
test
aaa
mov
sbbb
out
or
push
add
cmp
add
addl
pop
lock
ret
sub
jl
fsubrs
push
in
lods
jae
push
cmpb
push
jg
and
in
out
push
jg
arpl
xchg
insb
xor
out
xor
lahf
pop
cmp
cltd
mov
insl
lea
mov
push
int
and
idivl
jge
push
inc
inc
xor
pop
jo
mov
adc
stos
in
aaa
xchg
mov
adc
aaa
in
xchg
jb
test
sbb
xor
fs
dec
lds
add
imul
mov
jnp
xchg
pop
pushf
or
ss
jg
xor
lea
xchg
pusha
push
cmp
and
outsl
lds
ljmp
pop
sub
shrl
push
mov
pop
adc
lret
cmp
adc
loope
jns
stos
leave
scas
inc
mov
shrb
or
jns
sbb
leave
lahf
push
int
or
lret
mov
mov
add
sbb
jae
mov
push
or
pop
popf
and
jmp
dec
inc
hlt
jno
into
andb
lahf
js
add
jge
adc
or
test
jg
xchg
mov
out
sbb
mov
pop
add
sub
sahf
popf
data16
dec
mov
pushfw
ja
sub
dec
and
mov
nop
sub
rorl
jb
mov
and
stc
or
dec
jo
les
fs
scas
jb
sub
adc
sub
jge,pn
mov
add
xchg
pusha
push
cltd
sbb
lea
mov
and
std
and
iret
push
jmp
mov
cmpsl
int
in
cmp
or
out
nop
mov
adc
cltd
xchg
loopne
or
xchg
push
mov
mov
add
or
stos
hlt
outsl
in
jns
mov
push
mov
fildll
mov
mov
dec
pushf
push
dec
inc
xchg
shr
stc
xlat
testl
leave
pusha
inc
cmpsl
sbb
rcrb
push
mov
pop
ret
mov
pop
ret
xor
xor
jle,pn
mov
call
gs
jnp
les
cmpsl
mov
push
push
aaa
mov
mov
push
in
xchg
pop
mov
add
ja
mov
in
addb
les
cmp
outsb
mov
push
cli
xchg
and
inc
in
das
cmp
push
ss
mov
pushf
adc
gs
loopw
dec
pop
xchg
call
jae
mov
hlt
out
repz
int
ds
mov
or
ja
jmp
xchg
or
and
cmp
scas
mov
mov
scas
xchg
cmp
or
test
push
jle
sbb
fisttpl
sub
adc
lods
cmp
std
mov
ja
pop
mov
je
xchg
stc
cli
fsubl
mov
stos
clc
and
jle
das
dec
mov
aas
jo
mov
pop
cmp
inc
in
repz
add
movsb
adc
cmpsb
push
xchg
jle
stos
int3
jae
push
arpl
pop
or
cltd
mov
arpl
add
mov
pop
andl
xchg
aaa
mov
sbb
add
or
lock
cmp
xor
iret
dec
jecxz
mov
loope
fs
pop
ds
pushf
mov
fmul
and
adc
xor
inc
stos
outsb
push
mov
or
je
popf
ss
sbb
ficomps
dec
lock
addr16
es
call
out
push
movzwl
inc
nop
xchg
cmpsl
dec
xorb
out
repnz
in
mov
in
inc
loopne
leave
or
mov
push
neg
jle
jo
ret
xchg
cmc
jmp
lods
fwait
adc
mov
sub
ret
dec
mov
sbb
repnz
test
and
fsqrt
test
shlb
sbbb
xchg
scas
push
mov
test
cmp
addr16
sbb
and
dec
jp
enter
inc
fisubrl
daa
xor
pop
xor
lea
mov
fistpll
inc
out
mov
add
adc
adc
xor
inc
and
xor
mov
popa
imull
dec
outsl
or
dec
insb
mov
inc
xchg
and
and
dec
mov
mov
lahf
mov
inc
mov
fcoml
lret
add
pushf
and
mov
mov
fidivrl
inc
xor
fisubrs
push
inc
and
mov
scas
gs
mov
xlat
ret
sti
mov
adc
into
cmp
pop
scas
jl
adc
and
mov
adc
leave
insb
mov
pop
imul
nop
and
pop
xchg
add
dec
loopne
xor
sub
repz
push
pop
mov
fwait
mov
in
les
stos
xchg
lea
xchg
fwait
in
pop
xchg
xchg
xor
scas
sbb
dec
add
jb
cwtl
xor
pop
pop
mov
mov
or
shll
add
inc
shlb
mov
gs
inc
aas
testl
push
push
inc
pushf
cld
scas
lret
in
mov
xlat
out
and
push
std
cmp
out
movsl
lods
adc
dec
test
and
inc
pop
or
mov
inc
mov
and
inc
jl
addb
sbb
xor
add
inc
lahf
sbb
stos
sbb
int
and
subb
mov
xor
iret
xor
adcb
stc
inc
jg
adc
xor
sbb
aam
xchg
or
lock
sbb
push
out
sub
ljmp
jnp
mov
rclb
test
mov
push
mov
ljmp
cmp
lret
sahf
or
stos
clc
test
mov
pop
xor
ds
fmull
fstl
push
int
xchg
lret
in
inc
in
fs
test
and
ja
rclb
push
lret
std
mov
push
mov
jmp
xor
je
mov
jno
mov
out
sbb
jnp
aad
mov
clc
dec
mov
out
cmc
or
mov
in
les
test
or
cltd
mov
push
std
fmuls
into
sbb
jb
mov
push
xlat
jmp
inc
xor
movsl
hlt
xor
scas
call
pop
jnp
cmc
fldl
pop
call
jge
push
cwtl
call
jg
xchg
stos
xchg
mov
dec
loope
adc
push
mov
jo
sbb
push
add
xchg
lret
pop
sahf
notb
fs
pop
or
aam
cmpsb
mov
xchg
pop
fwait
movsl
xchg
mov
add
int
cmpsb
sub
dec
fiadds
insb
test
pushf
leave
dec
mov
sub
cs
add
ror
mov
xor
mov
xchg
jecxz
lds
add
mov
fmuls
pop
rep
adc
inc
mov
adc
addl
out
movsl
push
xlat
inc
xlat
sarl
or
sbb
inc
leave
push
fdivrp
orb
arpl
push
cmpsl
rcrl
jnp
push
sbb
roll
scas
cmpsb
mov
ja
in
std
shrb
cmc
pop
cmpsb
sub
mov
sub
call
adc
std
jl
cs
and
cmpsl
std
shufps
movsb
and
mov
cs
mov
push
insl
rol
sub
jg
sub
jne
sbb
ss
in
aaa
mulb
in
in
mov
cmp
frstor
popf
adc
cli
xor
rorl
xchg
push
shll
dec
sbb
test
jo
jae
xchg
mov
mov
jb
in
std
push
movsb
imul
add
iret
ret
and
push
hlt
mov
dec
loopne
xchg
push
inc
icebp
cmpsb
xor
into
dec
jb
pop
pop
lds
mov
rorb
ja
repz
mov
in
push
jg
sti
inc
sbb
cmp
aas
or
fstpl
sub
decb
scas
or
push
lret
leave
nop
push
pop
add
ja
add
xchg
xor
std
jns
and
mov
sub
mov
cld
sahf
out
xor
mov
mov
xchg
mov
cli
cmp
jl
ljmp
shlb
xor
mov
inc
jbe
pushf
inc
arpl
in
add
inc
movsl
aam
out
push
or
cmp
sbb
and
adc
aam
cmp
repz
pop
pop
jl
in
jbe
sbb
inc
fwait
test
icebp
jno
pushf
shll
cmp
int
dec
cld
xchg
and
push
cmc
popa
inc
cmp
andb
fdivl
rorb
xor
orb
mov
dec
insb
push
insb
test
mov
lret
fwait
test
pop
data16
push
sub
mov
xlat
scas
xchg
mov
in
jb
sub
sbb
xchg
sarl
mov
xchg
mov
push
cld
popa
int
jge
xchg
popa
pushw
and
dec
xchg
mov
orb
mov
pop
test
rcl
sbb
clc
mov
pop
sub
scas
lods
rol
fsubr
jnp
js
in
sti
add
push
and
xor
inc
mov
sub
mov
incl
fadds
xor
repz
fidivs
jne
push
push
clc
cmpsl
roll
and
pop
push
jmp
aam
xchg
lret
loop
xchg
cmpsl
mov
or
test
adc
mov
lcall
sub
in
jge
lahf
mov
std
mul
inc
out
push
push
rcr
push
arpl
int3
jg
loop
sbb
jecxz
lret
sub
hlt
andl
and
xchg
add
and
add
imul
pop
xchg
jo
insl
nop
movsb
push
lahf
test
jle
add
pop
sbb
imull
aad
sub
dec
std
adcl
aas
fsubs
inc
jmp
and
xchg
js
add
icebp
fcomps
jmp
outsl
xchg
sub
inc
mov
in
jbe
cmp
inc
xchg
dec
scas
jecxz
sub
mov
adc
xor
mov
cmp
inc
mov
loopne
lahf
sbb
jecxz
popf
ret
data16
std
lret
xor
pop
jb
jne
adc
or
notrack
mov
inc
mov
addl
jb
dec
push
mov
sub
outsl
mov
or
xchg
xor
sarb
movl
and
arpl
das
xchg
sub
jnp
and
jl
pop
pop
dec
xor
pop
in
rorb
mov
sti
dec
rclb
ds
test
into
dec
sub
cmpsb
cmp
test
xor
jg
add
lock
je
pop
xchg
divb
loopne
cmpl
jno
rorl
sbb
add
dec
cmpsb
and
and
mov
pop
jnp
ja
push
dec
xlat
orb
notl
and
sub
sbb
test
lods
fimull
inc
dec
sbb
sbb
ds
pop
xchg
sub
pop
mov
xor
sbb
test
cmp
mov
in
testl
imul
pop
int
cmpsb
mov
cmp
test
push
out
aad
je
fst
int3
inc
pop
xor
jne
cli
rorl
dec
addb
pop
sbb
xlat
dec
dec
icebp
mov
xsave
xor
ret
dec
or
pusha
jg
inc
sbb
sub
pop
mov
mov
add
gs
ds
rclb
jns
sbb
xchg
mov
and
sub
mov
sbb
lea
or
shl
fidivl
jns
jae
sub
mov
jle
mov
in
dec
int
scas
sub
rcrl
cmpsl
scas
cwtl
daa
sti
test
jge
shll
ret
jmp
sarb
imul
stos
lock
fbstp
aaa
jno
mov
lods
dec
push
xlat
lods
mov
push
pop
adc
jno
arpl
aam
inc
mov
cwtl
aam
sub
lcall
fnsave
sarb
js
lahf
push
pop
outsb
scas
in
or
iret
dec
cmpsl
xchg
add
mov
out
pop
mov
push
arpl
je
jae
lods
rcrb
or
jae
je
push
les
stos
jl
cwtl
arpl
ret
xchg
and
orb
inc
out
loope,pn
andl
in
cmp
or
mov
clc
lcall
filds
lods
loopne
jo
xchg
push
pop
lea
out
rolb
push
mov
int3
xor
hlt
leave
clc
cmp
fwait
es
pop
xor
xchg
hlt
insb
adc
pop
push
sbb
mov
mov
ret
stos
pop
loope
outsl
dec
push
inc
add
imul
cmp
inc
sahf
dec
jl
test
adc
aad
adc
xor
ss
cmpsl
nop
loopne
outsl
out
pop
enter
inc
daa
fs
aam
ret
add
lret
inc
dec
lock
sbb
sbb
pop
cmp
push
adc
push
nop
pusha
decb
out
adc
repz
or
pusha
sahf
xor
xchg
xchg
std
stc
lds
mov
lds
xor
sti
enter
fadds
dec
sub
fists
cltd
popf
loope
xor
xchg
mov
pop
das
mov
imul
shrb
jno
bound
jno
push
add
mov
and
sub
mov
ja
xchg
insl
or
es
sbb
pop
push
cmc
dec
loope
sar
aad
rol
push
sbb
imul
and
jb
cwtl
aaa
xchg
jle
cmp
sahf
cmp
sti
test
xor
outsl
es
inc
cmp
sti
es
movq
jne
es
lret
cmp
test
sbb
pop
popa
cmp
cmp
movsb
lds
mov
test
enter
jmp
pop
jne
bnd
mov
push
dec
stos
std
mov
into
test
addl
and
cwtl
std
xorb
xor
pop
repz
adc
adc
aad
mov
mov
push
dec
cmpsb
js
and
sbb
jge
adc
mov
scas
rcl
and
je
sub
inc
bnd
js
mov
ja
js
daa
cmp
pop
fs
subb
stos
fdivrl
lret
xor
and
push
in
jb
pop
sub
mov
inc
shll
sbb
and
add
push
bound
push
pop
mov
mov
pop
dec
rolb
in
push
icebp
mov
mulb
pop
pop
cs
jo
lds
jge
stc
cmp
dec
xchg
loop
ret
roll
xchg
nop
loope
scas
mov
and
mov
fadd
lods
add
xchg
cltd
and
aam
fcmovu
sbb
and
fdivl
dec
push
jp
mov
xchg
add
cltd
dec
sub
sub
xor
imul
sbbb
xlat
dec
pushl
aaa
fs
add
fistps
mov
aas
dec
cld
pop
ja
mov
sbb
fcmovnbe
cs
sub
xlat
rcrl
push
cld
and
xchg
dec
pop
and
push
adc
and
loopne
jecxz
sbb
cmpb
jle
iret
mov
enter
dec
outsb
in
mov
cmc
mov
andb
xchg
mov
jnp
or
pop
add
ds
lcall
cmp
adc
in
push
pop
hlt
dec
lcall
das
sahf
insl
stc
cli
push
inc
pop
sub
shrb
icebp
addb
in
sarb
mov
shr
mov
cmpsb
jmp
sarl
sbb
divl
jg
ss
in
ret
mov
pop
imul
bound
pusha
mov
popf
or
pop
jl
outsb
pop
faddp
push
stc
out
xor
fidivl
into
adc
es
ss
add
add
push
jno
pop
lods
mov
fisubs
lcall
dec
xchg
pop
cmp
repnz
push
inc
mov
adc
jp
pop
mov
fists
arpl
inc
pop
jp
popa
insb
test
mov
into
jae
call
jl
fmul
rclb
into
test
jl
xor
mov
cmpsl
push
mov
lods
int3
push
xor
cmp
pop
mov
xor
push
xchg
cli
loopne
sub
xor
xchg
je
rorb
data16
fdiv
outsb
ret
inc
jg
adc
sub
pusha
loop
xchg
mov
inc
push
inc
adc
fbstp
mov
pushl
xor
and
pop
cmpsl
divb
loopne
lds
ret
mov
aam
xchg
sbb
inc
xor
add
jp
jge,pt
push
imul
sbbl
inc
dec
inc
adc
loope
scas
pushf
std
push
mov
sub
mov
inc
popf
insl
push
gs
xor
push
adc
sbb
int
dec
inc
cmc
adc
push
cmp
jbe
lcall
imul
aad
adc
mov
rolb
push
mov
lret
add
push
or
and
jge
inc
arpl
push
clc
sbb
sbbb
jno
jl
mov
jno
xor
cmp
jle
rclb
push
lds
movl
mov
movsl
mov
test
xor
mov
rorl
pushf
testl
clc
push
je
mov
ret
xor
and
pusha
pop
scas
mov
jbe,pn
xor
sub
pop
loope
mov
pop
sub
mov
pop
out
add
and
int3
rcr
or
insl
int
mov
js
mov
inc
inc
jl
adc
mov
test
lea
mov
hlt
sub
jmp
popa
ret
xchg
mov
sub
jl
and
mov
repz
jg
pop
jg
push
jle
fidivl
mov
out
sbb
add
pop
lcall
popa
add
lcall
mov
shll
pushf
or
jns
into
dec
imul
sbb
fsubs
xor
mov
xor
mov
and
xchg
push
in
rcl
mov
int
scas
out
rcl
jne
pushl
or
fcomps
xchg
fucomp
imul
sub
push
sub
popa
adcb
shl
test
and
xchg
mov
out
ficoml
mov
and
inc
sub
int3
iret
and
sub
imul
lods
mov
pop
ja
inc
ja
jp
pop
insl
push
xchg
adc
push
xorl
sahf
test
push
movsb
add
mov
into
movsb
loop
xlat
jg
push
xchg
jle
and
mov
jecxz
lea
mov
in
stos
cltd
es
ret
mov
mov
jnp
insb
sbb
mov
dec
adc
pop
adc
call
out
cmp
or
mov
data16
mov
adc
xchg
xchg
repz
addr16
into
add
lea
ficoml
mov
mov
pop
int3
push
jo
mov
fnsave
rcl
pop
adc
sbb
or
lods
add
into
lea
push
inc
pushf
faddp
and
pop
lods
add
hlt
cs
addb
mov
mov
cmpsb
adc
bound
fnstcw
xchg
outsl
inc
int
cmp
jno
std
divl
jnp
lcall
sbb
push
mov
inc
push
test
out
jne
push
mov
add
xchg
dec
enter
sub
or
movsl
aaa
ror
out
or
lds
adc
test
mov
lods
dec
inc
pop
mov
dec
jne
cltd
notl
in
add
sub
and
mov
adc
ja
mov
jl
mov
fst
or
in
xchg
mov
adc
push
loopne
add
in
pop
pop
cltd
rorb
test
sbb
es
jle
mov
das
in
xchg
enter
mov
lret
mov
push
or
std
test
setne
jmp
pop
les
push
adc
and
add
push
jle
in
mov
xor
jecxz
repnz
xchg
inc
nop
xchg
stos
jmp
or
jne,pt
mov
cmp
arpl
nopl
mov
js
popf
mov
lods
fstps
add
fnstenv
xor
popf
mov
inc
out
cmp
xchg
jle
lods
int
pop
inc
mov
stos
lock
dec
xor
mov
stos
cmpl
stos
mov
push
stos
js
dec
mov
pop
push
lds
adc
add
arpl
jno
sbbl
lea
inc
fldz
ret
out
stc
insl
lods
mov
jbe
xchg
mov
mov
lcall
das
js
mov
test
stos
mov
pop
nop
fsts
inc
push
shll
dec
sub
xor
fwait
ret
sbb
mov
jge
push
sub
cld
jecxz
sub
mov
fisttpl
popf
sub
ja
fistl
stc
std
and
inc
test
mov
popa
aam
push
add
in
mov
dec
in
jbe
outsl
movsb
clc
jp
out
cwtl
das
test
and
pop
clc
jns
jp
mov
push
mov
repnz
rorb
mov
pop
push
sbb
inc
out
inc
xchg
jne
sbb
outsl
adc
push
sub
push
or
lcall
daa
test
mov
movsb
loop
jns
clc
xchg
xor
add
ss
lret
dec
jno
popa
lret
mov
mov
iret
push
and
pop
add
sub
cmp
push
adc
jb
inc
jge
pop
ljmp
push
addr16
and
sub
loopne
orb
stos
adc
jne
adc
dec
push
sub
arpl
addr16
pusha
cli
mov
inc
push
dec
insl
mov
xor
imul
jns
mov
mov
fdivrl
jle
ficoms
jb
adcl
jo
cltd
mov
fisubrs
xchg
dec
js
cmp
inc
f2xm1
adc
mov
andb
dec
sbb
dec
or
leave
push
inc
xchg
and
cwtl
insl
push
bound
push
mov
das
mov
sub
and
enter
adc
and
add
flds
aas
or
in
cwtl
xchg
mov
test
xchg
xchg
data16
lods
data16
aas
mov
add
or
outsb
or
and
dec
mov
xchg
mov
insl
mov
test
mov
test
cmp
mov
clc
aaa
iret
mov
xor
stos
lahf
mov
hlt
xor
cmp
pop
xchg
shll
outsl
push
xor
cltd
push
cmpsb
mov
je
pop
jne
cs
sarl
nop
fsubrs
fidivrs
pop
add
std
bnd
push
mov
mov
lret
loop
and
loop
jno
push
sar
loop
popf
mov
cmp
daa
fwait
cmp
sub
jecxz
mov
xchg
lock
cmp
jno
je
cwtl
dec
dec
shlb
push
aaa
xor
xchg
or
jno
mov
inc
adc
cmc
jae,pt
aam
jl
xor
cld
lea
mov
ficoml
push
mov
jbe
cmpsb
stos
mov
out
mov
jmp
jbe
in
push
cmp
cmc
outsl
daa
sahf
mov
std
push
and
and
and
ret
fwait
out
cmp
mov
testl
clc
xchg
out
int3
aad
cmp
dec
cmp
les
ror
std
andl
pop
out
inc
xchg
repnz
mov
or
jecxz
movsl
cmp
adc
or
es
or
lea
pop
imul
inc
mov
movsb
sbb
test
adc
push
xchg
iret
sbbl
stos
jecxz
popa
push
mov
sbb
mov
cmp
pop
and
cmp
dec
fisubrs
ror
mov
adc
push
pop
in
pop
push
inc
add
insb
sub
xchg
jnp
and
pop
push
push
xor
push
in
lods
popf
scas
or
outsb
mov
std
imul
mov
add
xor
test
push
mov
mov
pop
and
enter
test
mov
jg
mov
dec
dec
jo
repz
xchg
mov
xor
xor
ret
push
imul
jmp
adc
inc
xchg
fistpll
add
popf
aas
lds
test
leave
adc
xchg
adcb
jb
push
cmpsb
adc
orb
dec
mov
pop
lret
mov
out
xor
pushf
mov
addb
mov
push
mov
jae
push
sbb
pop
movsb
xchg
pop
imul
test
jg
xchg
lds
aas
jge
jae
mov
push
fisttpll
cmpsl
fsubr
xlat
push
fadd
jle
sbb
jecxz
push
and
mov
pushf
loopne
loope
hlt
inc
xlat
sub
push
inc
in
int
mov
movsb
add
inc
arpl
aaa
push
stos
mov
ror
scas
cli
int
cli
enter
data16
mov
sbb
pop
frstor
mov
dec
int
out
dec
int3
outsl
adc
test
test
imul
push
cmpsb
sti
out
rorl
mov
inc
cli
divl
bnd
or
std
cmpsb
mov
lock
push
in
stos
xchg
adc
lods
xchg
sarb
test
jecxz
mov
push
stos
sahf
jmp
jg
test
jno
fcoml
out
or
iret
cli
imul
loopne
and
in
sub
jo
data16
rorb
xor
insb
xor
imul
shlb
in
and
push
ret
lods
sbb
js
xchg
xchg
js
das
imul
inc
nop
inc
sbb
lret
xchg
sbb
jne
out
ljmp
mov
sub
mov
hlt
jbe
fisubs
rcll
test
and
cltd
repz
push
int3
test
sub
add
pop
cmp
daa
xor
imul
rolb
shrb
pusha
sbb
and
pop
aad
xor
inc
mov
fs
mov
inc
aaa
cmp
xchg
cltd
filds
pop
or
sbb
jmp
sub
mov
sbb
xor
lds
xor
fmull
or
repnz
xor
loope
lahf
arpl
lock
stos
jns
popa
imul
jae
mov
mov
mov
daa
hlt
push
dec
movsb
add
iret
mov
cld
jmp
mov
jne
mov
test
sahf
es
es
ljmp
xor
cmp
pop
and
test
mov
int
mov
jge
je
pop
pop
sti
data16
sub
cmp
adc
out
es
pusha
dec
jae
or
sbb
push
mov
sahf
xchg
rcll
lods
mov
mov
adc
cmpsb
sbb
popl
arpl
js
in
in
pop
outsb
pop
rcrl
xor
pop
in
xor
mov
push
push
fistpl
mov
cmp
sbb
mov
mov
lods
wrmsr
jge
sub
fimuls
int
pop
jmp
mov
lahf
pop
lahf
fwait
dec
xchg
movsl
repnz
int
data16
inc
ret
cltd
aad
sub
adc
cmp
out
sbb
nop
sti
arpl
bnd
mov
ret
and
jno
inc
ds
and
mov
jae
out
xor
mov
insb
sub
test
fcomp
cmpsl
jle
and
mov
pop
add
ss
inc
fdivrs
int3
stc
sub
pushf
pop
cli
sahf
cmpsl
andl
nop
sub
add
movsb
pop
mov
adc
shlb
dec
cmpsl
sub
rcll
jne
dec
inc
in
push
inc
cmpl
mov
fnstsw
add
sbb
enter
gs
mov
aas
add
xchg
mov
outsb
push
aaa
pop
jnp
mov
sbb
sbb
and
pusha
add
cmpsb
fcoms
jge
and
lcall
xor
mov
push
lahf
loopne
arpl
out
idivl
cmp
pop
add
mov
inc
and
dec
stos
loop
leave
pop
mov
rolb
cmp
sbb
sarb
jp
cmp
mov
les
icebp
fisubl
outsb
inc
and
cwtl
add
mov
or
lret
xchg
or
adc
cltd
mov
sarl
xor
rcrl
dec
dec
push
fbld
adc
push
enter
aam
push
outsl
stc
aad
mov
mov
inc
mov
setbe
xor
pop
or
add
push
inc
jg
sahf
mov
cmp
pop
xchg
jo
fcmovbe
push
test
jnp
xchg
mov
shrb
aad
bound
jnp
push
pop
cmpsb
and
out
loop
jb
fsts
notb
insb
loopne
pusha
call
dec
sti
add
xchg
int3
int
xchg
and
out
jns
xor
add
mov
cmp
test
movsl
sbb
pop
inc
adc
mov
std
arpl
dec
lds
addr16
push
fisubl
dec
cmp
add
sbb
cmc
js
stc
ret
sbb
stos
mov
cltd
mov
rorb
mov
sahf
popa
dec
xchg
not
dec
es
or
sbb
adcl
pusha
sbb
sbb
push
ds
lods
jns
dec
dec
jae
loop
les
pop
leave
shll
cmp
rcl
jg
and
mov
addl
ret
pop
lock
xchg
roll
push
push
into
loopne
mov
dec
sbb
shr
xchg
out
add
fisttpll
add
dec
jns
ret
fcoms
dec
jae
ljmp
cmpsl
je
cmpsb
pop
and
add
push
dec
xchg
negl
mov
movsl
ret
push
repz
sub
add
or
jo
pusha
mov
push
cmp
xchg
fwait
roll
and
add
mov
mov
pop
into
and
mov
lock
cmpsb
sbb
aas
out
cmpl
xor
adc
inc
aad
mov
stos
sahf
adc
pushf
adc
add
insl
out
push
cli
push
xchg
sub
ss
jno
sub
xchg
lock
leave
std
push
mov
cmp
push
inc
sub
fwait
cld
fs
aad
or
lret
js
enter
cmp
fmul
adc
rorl
shlb
push
aad
mov
or
je
cmp
mov
push
cli
pop
mov
das
bnd
ljmp
icebp
test
fmul
jg
and
shrl
dec
sub
mov
out
xchg
movsl
xor
lahf
imul
xchg
test
je
ds
nop
dec
movsb
xor
cld
push
ret
jno
ds
lds
add
imul
outsb
cs
daa
daa
push
enter
into
add
scas
fisubs
mov
cs
xchg
inc
and
loop
clc
mov
fs
sbb
inc
nop
lret
inc
lea
es
mov
call
mov
mov
mov
pop
xor
ret
enter
cmp
imul
mov
dec
fstp
dec
pusha
insl
jbe
push
fsubrs
stos
fnsave
std
jg
nop
push
jp
push
sbb
into
out
xchg
jnp
mov
push
mov
jae
jecxz
push
jno
inc
call
jecxz
das
loopne
les
inc
fs
ja
sbb
mov
sub
imul
imull
stos
adcb
pop
or
and
sahf
fst
mov
lods
jnp
dec
hlt
lahf
repz
dec
aam
and
lock
gs
into
mov
jae
mov
xchg
adc
mov
sbb
mov
xchg
lds
in
andl
jnp
xor
xorl
pop
push
xor
inc
les
ds
dec
sub
jg
mov
dec
out
push
mov
push
pop
fs
add
push
ret
and
or
pop
nop
out
mov
jne
xchg
repz
in
inc
loopne
inc
dec
add
dec
pushf
cli
ss
mov
mov
add
pop
cli
shl
jecxz
out
xchg
insl
jle
arpl
jnp
xabort
inc
push
notl
push
mov
push
xor
sub
jg
in
mov
cs
mov
pusha
cltd
mov
pand
pusha
insl
cmp
push
cmovnp
mov
push
or
orl
sub
mov
js
mov
imul
fwait
enter
repnz
adc
jp
popa
lret
adc
mov
sub
xorl
dec
jecxz
xor
mov
pop
loop
jo
push
push
sub
cs
iret
mov
lahf
popf
fnsave
aam
dec
inc
std
roll
imul
sarl
insl
mov
jnp
cmpsb
loope
mov
aas
into
add
fsubrp
dec
aam
xor
mov
cmp
call
nop
push
hlt
xchg
popf
lret
dec
test
loopne
pop
mov
pop
and
jmp
into
inc
cmp
mov
pop
cs
sbb
jp
pop
leave
jecxz
loop
int3
cmpsl
mov
popa
xchg
lock
jmp
in
sarb
cld
push
fadds
cmp
jae
and
imulb
inc
mov
and
mov
mov
ret
xchg
sub
xchg
out
push
cmp
stc
aad
cmp
inc
test
xchg
int3
leave
vunpckhps
outsl
aaa
cmpsb
cmp
mov
je
pop
add
jb
adc
adc
fists
bound
add
push
test
jo
icebp
ljmp
sbb
cmp
cwtl
cli
lods
popf
lret
hlt
repnz
ret
stos
addr16
out
pusha
ret
fidivs
pop
sbbl
xor
movsb
adc
inc
pop
and
sub
push
ja
xor
ss
push
lret
jecxz
mov
pop
adc
pop
mov
xchg
jo
xchg
mov
mov
and
orb
push
inc
push
cs
lret
sbb
sti
mov
scas
and
jecxz
xor
ja
cmp
shll
orl
mov
sbb
push
xor
mov
cmp
add
nop
xorb
bound
pop
jmp
sahf
sti
jo
xchg
xchg
dec
dec
rol
aas
jnp
inc
ljmp
pop
imul
jbe
test
int
mov
arpl
jnp
lods
or
mov
xchg
ds
xchg
addb
inc
sbb
js
jno
loopne
xchg
mov
in
or
js
adc
sub
mov
mov
xor
in
out
pop
inc
sub
mov
aas
stc
sbb
pop
mov
pop
xchg
push
cmc
mov
aaa
or
jl
pop
push
mov
cltd
xor
sbbb
pop
gs
mov
ret
test
sub
test
and
icebp
ss
adcl
sub
mov
xchg
js
pop
mov
mov
in
mov
cmp
popf
gs
and
out
jne
adc
incl
mov
sub
lods
lods
dec
and
mov
in
ljmp
call
imul
popf
popf
inc
in
or
cmpsl
mov
in
fcompl
inc
daa
test
mov
xchg
sbb
push
sub
int3
scas
push
in
jne
dec
push
outsl
push
cmp
in
out
sub
mov
nop
js
or
sub
pusha
inc
scas
jle
mov
sar
dec
mov
sbb
outsl
inc
shl
scas
leave
jne
leave
int3
inc
movsb
cmc
roll
shr
pop
jmp
movsb
or
jl
out
js
mov
arpl
pop
sub
adc
in
lea
div
push
push
outsb
out
mov
fbld
jb
imul
pop
inc
sub
push
jmp
push
pop
pop
dec
sahf
jmp
cmc
je
and
adc
bound
sarl
orl
and
outsl
inc
mov
imul
lods
adc
pop
sbb
stos
jle
dec
xlat
inc
push
xchg
rcrb
push
push
jle
fbstp
xor
insb
sbb
xchg
cmpsl
out
and
js
sub
mov
dec
mov
mov
dec
nop
mov
rclb
js
sub
dec
xchg
adc
idiv
cwtl
dec
sub
outsl
sbb
cmp
pop
jle
push
cmp
push
mov
shl
rcrb
enter
testb
popf
outsl
stc
ss
out
xchg
inc
lods
mov
insl
dec
enter
out
add
push
mov
jbe
push
mov
pop
popf
adc
cmpsb
lea
mov
int3
adc
and
loope
mov
lods
xchg
mov
leave
test
xchg
mov
cmc
pop
testb
pop
movsl
adc
fsubr
and
fwait
push
mov
cmp
loope
hlt
cmp
mov
mov
dec
sbb
mov
stc
xchg
jp
mov
jb
fiadds
jecxz
rcll
push
loopne
ds
addl
mov
sbb
repnz
cmp
adc
cmp
les
push
dec
push
cmp
mov
fwait
pop
inc
cwtl
lods
frstor
jne
aad
mov
notb
popa
adc
jbe
xchg
mov
divl
jae
mov
jge
in
or
stos
addl
test
and
lds
jge
test
or
pushf
aad
lret
je
mov
cmp
add
jno
adc
inc
hlt
push
sub
inc
hlt
test
ret
mov
nop
idiv
pop
out
pop
ds
rol
xor
cmp
sbb
push
bound
dec
mov
movsb
js
cmp
std
dec
aaa
clc
lcall
mov
push
pop
cpuid
cmpsb
test
inc
lods
aas
es
xchg
mov
and
inc
sub
lret
xchg
movsl
jmp
stos
ss
lds
fildll
cmp
daa
sbb
xchg
and
pop
jo
hlt
push
jb
mov
mov
or
bound
out
aad
add
mov
push
sti
dec
mov
mov
jo
xor
jmp
and
jae
mov
or
xor
repnz
aad
sbb
sub
push
cmp
out
sub
popa
mov
pop
ljmp
mov
popf
idivl
mov
aam
xlat
xchg
adc
push
mov
test
jno
inc
pop
ds
cs
and
fdivrl
in
cmc
pop
dec
cmp
or
xchg
mov
imul
lret
movsl
pop
mov
clc
fstl
cmpsl
in
push
add
lds
mov
push
sub
inc
xorl
mov
out
push
enter
add
sbb
cltd
and
sub
lret
call
adc
mov
sti
adc
movsl
push
or
ret
mov
xchg
loope
movsl
xchg
and
adc
cmc
cmp
test
push
mov
cmp
mov
fwait
mov
pop
pop
lret
fdivrs
adc
stc
scas
sbb
jo
mov
sbb
xor
mov
mov
mov
imul
add
mov
dec
mov
xchg
cwtl
pushf
xchg
add
and
sbb
pop
mov
mov
push
jecxz
push
repnz
shrl
pop
test
adc
fs
jno
shrl
sarb
js
dec
sbb
mov
out
daa
jmp
insb
cs
pop
dec
jmp
sub
dec
jl
xchg
clc
imulb
dec
xor
dec
mov
bound
mov
in
je
ja
mov
mov
push
loop
pop
fmul
jmp
out
notb
push
je
mov
fwait
pushf
mov
mov
add
mov
std
mov
mov
jmp
push
mov
loop
lea
scas
out
jle
mov
rorl
repnz
pop
aad
push
jne
sub
hlt
test
or
insl
push
dec
mov
cli
popf
and
inc
stos
ljmp
ret
aad
rorb
dec
mov
mov
addl
adc
and
ret
mov
dec
pop
and
or
js
push
push
mov
xchg
inc
push
xchg
loope
xor
and
cmpsb
pop
daa
mov
xor
adc
push
addb
mov
popf
inc
mov
sbb
addr16
push
aad
or
mov
add
cli
lahf
push
bound
sbb
inc
idivb
jns
jo
cmp
sub
fisubs
popl
sti
pop
sarl
cmpb
fidivs
sahf
push
pop
jne
xor
das
aad
pusha
loop
mov
in
inc
out
popf
imul
xchg
mov
lock
jns
push
pop
xor
jle
mov
js
xchg
es
hlt
lods
and
mov
mov
rolb
xchg
aam
and
or
mov
pop
lret
cmp
lret
xor
mov
and
int
negb
movsb
lods
inc
mov
inc
shlb
jbe
loop
orb
jle
roll
cmp
and
jbe
xchg
fstl
mov
aad
leave
xchg
xor
or
dec
cmc
xchg
sti
out
add
jp
sbb
fstpl
pop
adc
mov
call
pop
sahf
mov
fimuls
mov
inc
xchg
lcall
mov
aad
inc
mov
xor
xor
test
sbb
mov
daa
jp
mov
in
popa
jno
inc
lods
sbb
mov
fs
sbb
imul
and
or
les
push
adc
mov
push
sub
jbe
xor
sbb
mov
popa
lret
shll
ss
loop
cltd
add
loop
iret
enter
jl
mov
sub
mov
jle
push
ds
fcomps
fcoms
aaa
pop
jbe
bound
mov
dec
daa
inc
insl
or
sbb
ja
arpl
mov
fildl
outsl
jne
sete
out
loopne
dec
js
cmp
int
enter
or
and
inc
dec
xchg
out
nop
repz
fldl
mov
jg
aam
cmpsb
pop
insb
xor
cmp
cmp
jnp
arpl
add
fidivrl
cmpsl
push
cmp
icebp
push
aas
ja
cmp
xchg
in
mov
jne
mov
insl
scas
decb
dec
sub
ljmp
jb
adc
rcrb
pop
ss
stc
pop
adc
ljmp
sub
decl
scas
lret
in
les
jecxz
aad
adc
inc
jecxz
mov
and
or
loope
push
ja
in
pusha
addl
mov
mov
jns
pop
mov
push
xchg
mov
push
fisubrs
sahf
inc
xor
nop
mov
neg
je
and
mov
and
loop
lods
sbbl
lcall
xor
pop
lret
cmpb
push
outsl
addb
outsb
adc
sbb
std
out
addr16
int
xor
jp
sbb
mov
das
jno
std
or
xor
cmp
jl
jnp
pop
adc
sub
or
or
fsts
sbb
rol
push
or
loopne
adc
sti
mov
pop
out
negl
mov
das
jno
xor
adc
xor
ljmp
std
imul
ret
out
cltd
pop
addl
xchg
pop
mov
pop
xor
mov
fs
pop
mov
sub
xchg
cmp
lds
mov
aaa
pop
in
jl
adc
and
adc
jo
pop
adc
jo
dec
out
dec
sub
fidivrl
das
push
jecxz
rorb
lods
lods
sub
jb
jle
sarb
mov
incb
xor
push
shrd
inc
push
hlt
leave
cmp
subl
inc
andl
sbb
dec
adc
rcll
lods
outsl
pop
sbb
sbb
adc
es
jbe
mov
cld
push
mov
jl
or
jge
cmp
sub
ss
mov
cmpl
ss
fucomip
and
call
jg
out
inc
cli
sbb
xchg
mov
adc
test
fs
movsb
jne
pop
pop
scas
push
pop
add
adc
gs
pusha
or
ret
dec
dec
dec
lahf
cmp
jns
cwtl
push
loope
cmp
and
xchg
test
hlt
cmp
stos
xchg
js
mov
add
push
cld
mov
cmp
idivl
cltd
push
mov
and
lock
fadds
in
or
test
cli
pushf
pop
jp
jno
test
ret
add
push
push
ja
pop
xchg
xchg
cmp
add
out
fsubrl
mov
dec
int3
fisttps
or
push
jle
and
mov
add
loope
outsl
or
adc
or
xchg
sahf
jmp
cmpsb
pop
popl
sbb
push
and
pop
imul
aad
mov
sbb
jne
mov
cmp
insb
cmp
inc
or
icebp
push
jecxz
push
pop
repnz
jb
addl
andl
pop
sub
fldcw
pop
movsl
rcll
leave
push
jns
cmp
and
dec
fadd
push
or
inc
sbb
mov
push
fnstcw
nop
out
loope
je
jmp
mov
invd
fstl
popa
add
pop
notl
xor
sbb
stos
lock
or
ja
imul
sti
daa
jne
jae
js
out
adcl
je
and
and
addr16
push
xchg
out
xchg
jbe
dec
clc
pop
scas
loopne
mov
xchg
repnz
mov
push
idiv
push
adc
hlt
scas
adc
lcall
scas
enter
or
negb
shll
and
mov
cmp
push
in
push
push
cli
cmp
push
push
mov
xchg
push
sbb
add
jns
mov
dec
dec
jge
js
mov
leave
mov
inc
jns
add
pushl
loopne
in
inc
call
jg
pop
ret
cld
and
cmp
orb
jge
push
dec
outsb
mov
cmp
fwait
inc
sar
fdivrs
js
mov
push
insb
xlat
mov
outsl
add
js
mov
inc
xlat
xchg
outsb
add
and
pop
pop
call
bound
sub
or
adc
mov
push
jo
stos
xorb
not
cmp
push
mov
lods
or
arpl
mov
sub
mov
xor
loop
jns
stos
or
ljmp
jne
jle
fimuls
add
aas
lahf
xchg
mov
movb
into
popf
mov
repnz
cmp
mov
push
cltd
shlb
jno
imul
xchg
mov
daa
insb
push
xchg
mov
mov
jle,pn
mov
iret
dec
inc
and
pop
and
pop
push
cwtl
xor
xlat
add
mov
idivl
xchg
pop
jno
mov
cmp
movsb
sbb
xchg
fs
pop
jno
mov
ror
jae
adc
dec
fdiv
push
xor
test
inc
cmc
fdivs
ret
sbb
xchg
jp
bound
out
adc
jo
aad
mov
mov
dec
sbb
mov
xor
dec
addr16
dec
cmp
shl
mov
mov
in
lods
mov
lds
imull
into
xchg
aas
lcall
mov
cmp
jg
jae
push
shrb
dec
xchg
dec
push
add
push
xchg
stc
xor
mulb
sub
xchg
les
lret
mov
scas
inc
int3
jne
lahf
pop
popa
push
out
mov
cmpl
cwtl
jnp
clc
loopne
mov
cmp
test
fiaddl
jns
jne
in
lcall
lret
xchg
inc
lds
xchg
xor
sub
mov
jle
ret
loop
insb
cmp
imul
cwtl
rolb
test
imul
pop
ss
mov
adc
jmp
rcrb
popa
arpl
mov
lahf
push
cld
imul
sub
lret
bound
push
xchg
fcompl
loopne
sbb
inc
stos
adc
mov
test
iret
jp
or
popa
pusha
push
inc
sub
jb
jge
loop
add
sbb
dec
aam
stos
sbb
adc
cld
out
arpl
mov
rorl
push
or
cli
ja
jb
lea
dec
xor
ret
and
pop
test
cs
inc
test
jo
mov
adc
mov
mov
push
adc
pop
cmpsb
mov
and
jmp
fbld
add
jnp
mov
jno
dec
adc
xchg
std
xchg
or
es
mov
lahf
inc
cmp
out
inc
xchg
test
push
inc
repnz
leave
pop
and
lcall
mov
sahf
cmp
jp
scas
pop
repnz
sbb
and
int3
add
outsl
mull
je
mov
mov
or
mov
jecxz
add
xchg
dec
sahf
std
mov
or
lock
imul
insl
outsl
es
pop
loop
inc
cwtl
jg
mov
lods
or
push
sub
mov
ret
mov
xor
xor
mov
in
sbb
xchg
add
cs
jmp
inc
clc
imul
mov
loope
mov
bswap
and
lcall
outsb
adc
fdiv
xchg
and
mov
push
pop
fwait
add
repnz
enter
enter
sub
movsl
push
cmp
into
pop
push
lods
mov
jo
mov
cmc
aad
nop
sbb
stc
out
mov
gs
jae
add
push
insl
inc
stc
mov
movsb
inc
popa
iret
daa
cmpsl
fs
ljmp
sti
jecxz
xor
in
call
cmp
or
aas
outsl
mov
sti
lods
enter
jl
jg
push
neg
sub
dec
in
icebp
xchg
into
jmp
push
push
addb
in
rclb
mov
repz
outsb
mov
push
popa
sub
xor
int
xlat
inc
adc
lock
sbb
les
out
test
das
mov
mov
add
fistps
imul
stc
aas
cmp
xchg
jbe
negb
sub
cltd
mov
leave
mov
sbb
push
pop
xor
stos
xor
clc
sub
inc
jp
add
jns
popf
xchg
xchg
mov
mov
xchg
cwtl
test
lock
dec
mov
daa
pop
push
and
jmp
or
cmp
push
nop
and
mov
cmp
sbb
xchg
mov
xor
push
or
hlt
sbbb
adc
sar
jle
repnz
push
and
lahf
xchg
xchg
das
in
jle
clc
sbb
popa
pushl
dec
movl
test
pop
mov
mov
cmp
dec
pop
idivb
stos
push
add
addr16
xchg
push
in
sub
into
sub
pop
xchg
cli
pop
int
popa
sbb
add
gs
mov
insl
leave
push
inc
leave
out
mov
jae
add
in
cmp
in
xor
test
addr16
into
dec
push
lret
pop
lcall
outsb
sbb
sbb
idivl
xor
push
inc
int3
sbb
std
rol
cmpsl
pop
lea
cmp
push
mov
addr16
push
das
adc
dec
rcr
sbb
cwtl
mov
iret
sbb
mov
push
aad
jecxz
sbb
data16
cmc
imul
inc
pop
popa
sub
xor
aaa
ret
pop
push
adc
mov
xchg
xchg
fwait
sub
shl
inc
sbb
or
adc
mov
test
adc
xor
loope
rcl
shrb
or
out
fiaddl
or
push
inc
jne
xor
ss
xor
call
add
inc
pop
mov
xchg
je
popa
shrb
in
mov
add
in
or
xor
xor
xchg
in
data16
jmp
dec
jle
pop
pop
sarb
vpaddusb
mov
mov
test
inc
or
cltd
dec
iret
lods
dec
icebp
ficoms
add
pcmpgtw
pop
outsl
jmp
jbe
sbb
test
sbb
push
add
leave
in
and
cmp
dec
outsl
fadd
push
fisubl
push
out
mov
pushf
mov
xchg
cltd
icebp
mov
sbb
sbb
rolb
or
std
sub
xor
mov
xchg
push
mov
sub
or
lcall
int
push
lcall
push
filds
sub
xor
into
les
jbe
enter
push
mov
adc
mov
hlt
scas
jnp
cmpsl
inc
and
leave
jecxz
inc
mov
sub
pop
cmp
push
popa
lahf
int3
sahf
fidivs
push
fs
sarb
ss
or
jnp
stc
loopne
fs
std
daa
sbb
xchg
push
testl
mov
adc
xor
jp
pop
test
fs
imul
xchg
and
pop
lds
jb
outsl
push
push
sahf
push
test
andl
fnstsw
cli
mov
popa
cmp
sbb
sbb
or
mov
and
repz
cld
les
pop
outsl
sub
dec
mov
cmpsb
adc
lahf
inc
movsl
mov
in
xlat
leave
outsl
or
aas
adc
xchg
aas
cmp
pop
lcall
int
inc
pop
arpl
jge
xlat
xlat
push
mov
add
mov
fsubl
cltd
push
mov
jns
jbe
sti
jge
mov
addr16
scas
jl
js
pop
aas
mov
sub
jne
cmp
shr
loop
call
or
cmp
mov
movsb
test
lods
fnstcw
out
add
and
lods
push
cmpsl
std
xchg
or
sub
dec
dec
mov
jge
sti
addr16
mov
xchg
pop
push
fisubrs
jle
mov
outsb
aaa
jae
dec
pop
hlt
adc
jecxz
cmp
sbb
or
int3
xchg
ror
pop
arpl
lods
ret
aas
mov
sti
cmp
dec
cwtl
out
push
pop
xor
mov
xor
jb
xlat
jle
jmp
fisubs
xor
pop
xor
subb
mov
rorl
or
xchg
jmp
pop
and
sti
jle
jb
fstps
and
cwtl
inc
cmp
sub
push
xor
data16
cmp
xchg
les
insl
sbb
and
xchg
cltd
popl
pushf
lea
mov
ss
out
imul
sub
dec
mov
mov
nop
inc
imul
push
mov
clc
scas
ds
stos
js
test
xchg
inc
xor
mov
test
jle
out
into
fs
pop
stos
pop
cltd
dec
or
push
cmpb
aaa
ja
test
movsl
mov
dec
inc
add
lds
mov
dec
sarl
andb
xchg
flds
stos
cmp
lods
pop
lods
ss
push
lods
mov
sub
pusha
or
rcrl
addb
mov
daa
push
dec
arpl
int3
jge
test
fbld
or
rcr
repnz
das
pop
shll
sub
adc
lock
add
mov
cmp
mov
mov
lcall
jle
sahf
inc
or
shl
mov
jmp
mov
mov
or
repnz
mov
pop
adc
inc
xchg
lret
cltd
js
in
add
bnd
xor
mov
xchg
inc
dec
sarl
js
subb
sarl
adc
sbb
xchg
cmp
into
jge
pop
jge
adc
popf
jmp
xchg
and
pop
inc
nop
or
xor
fs
aas
adc
adc
inc
xor
cmp
push
nop
jmp
rorl
jge
scas
fcmovnbe
stos
aam
decl
test
mov
cmp
fidivs
ret
cmc
push
gs
stos
cmpsb
add
pop
jne
les
test
or
in
icebp
sub
cmc
leave
mov
mov
sbb
pop
es
sbb
clc
rcl
inc
scas
mov
popf
nop
lea
dec
mov
shlb
mov
mov
push
pop
jns
adc
xor
imulb
or
add
in
insl
mov
les
dec
mov
sub
inc
fwait
movsb
xchg
and
into
in
jnp
add
xchg
leave
ffreep
les
mov
pop
fistpll
push
out
rcrb
or
aas
cmp
mov
push
xor
test
dec
sbb
lahf
jns
xchg
cld
mov
mov
repnz
add
pop
jns
mov
sub
mov
pop
lret
std
mov
cmp
pop
les
ljmp
pop
inc
inc
test
gs
es
sub
sbb
fwait
jmp
inc
out
or
sar
mov
nop
jl
adc
xchg
or
es
adc
adc
push
jnp
add
push
pop
sub
out
orb
ds
insb
mov
cmc
lcall
mov
outsb
pop
inc
inc
lcall
aaa
stc
pop
pop
adc
push
fimull
repnz
jne
push
xor
pop
push
fstpl
sahf
add
ret
push
shlb
ja
testb
repz
jmp
pop
rorl
inc
pop
inc
inc
lcall
popf
mov
adc
push
stc
fdivrs
addr16
arpl
outsb
lods
sahf
xor
loopne
pushf
and
xor
jg
aas
call
push
mov
jbe
aam
mov
mov
mov
xchg
mov
lock
repnz
mov
inc
mov
or
loope
stos
inc
loop
negl
pusha
loop
out
insb
shll
xor
enter
push
mov
or
mov
xorb
enter
pop
int3
call
cmc
lea
mov
sub
insl
inc
lret
sahf
dec
add
ret
push
aad
out
or
mov
ss
push
inc
dec
inc
cmpsb
push
jbe
sarl
and
icebp
addr16
popa
std
cs
dec
xchg
loope
scas
jl
fidivl
cmp
cmc
inc
mov
cld
cmpsl
fimull
loopne
sub
bound
jnp
mov
cld
mov
mov
out
lock
outsb
adc
pop
cmp
ljmp
adc
movsb
sbb
fstp
mov
fcmovb
ficoms
cmpsb
cmp
pop
dec
sub
fisttpll
sbb
rcl
mov
and
stc
out
fsubrl
lret
lcall
jmp
cmp
ja
in
sub
fcom
fnstsw
xor
fcomip
dec
jb
mov
lds
push
push
sbb
pop
mov
iret
add
aam
xor
scas
xor
cmp
movsl
add
bound
int3
fxtract
push
dec
clc
xchg
daa
lret
out
insl
filds
dec
out
sub
int3
popf
out
mov
loop
ds
pop
xor
fistl
xchg
add
insl
andl
stos
rorl
sbb
sahf
pop
inc
push
xchg
pop
inc
dec
jmp
pop
dec
sbb
imul
xor
inc
out
enter
mov
add
mov
rclb
rclb
and
dec
pushf
dec
sbbl
rorb
lds
mov
add
push
sarl
or
mov
xor
push
inc
pusha
pop
or
sub
xor
insb
dec
push
cli
dec
dec
adc
inc
jl
push
int3
shlb
xchg
into
ret
xchg
popf
dec
sarl
lock
popa
xchg
mov
sbb
shl
and
sub
dec
aad
jg
jecxz
jl
in
cmp
cmpsl
inc
push
inc
out
mov
jb
sbb
cmp
push
iret
inc
outsb
mov
cmp
dec
xchg
outsl
stos
mov
out
cld
in
loopne
sbb
lret
mov
xchg
fcos
cmp
add
sbb
cmpsb
pop
or
or
mov
push
sbb
std
andl
imul
or
cmp
iret
dec
sti
daa
mov
add
clc
mov
push
and
xorl
dec
inc
or
adc
inc
aaa
pop
adc
cmp
dec
pop
xor
cmp
inc
pusha
scas
clc
adc
test
sahf
out
dec
xchg
sub
dec
repnz
jnp
movsl
leave
imul
jmp
test
mov
jecxz
cmp
mov
ja
push
mov
xor
sbb
orb
and
mov
cwtl
adc
andl
adc
xchg
xor
rcr
jmp
jbe
push
iret
dec
lods
xchg
inc
inc
xor
mov
xor
inc
add
xchg
fcmovu
cmc
jp
jecxz
inc
push
mov
lret
fisubrl
fildl
pop
cmp
xchg
xchg
out
fidivrs
dec
aaa
push
xor
xor
pop
mov
dec
add
bnd
ljmp
sahf
dec
push
shrb
scas
out
jmp
pop
push
call
add
aad
mov
outsb
std
inc
push
scas
jno
cmpb
hlt
mov
ja
cs
sbb
mov
outsl
cs
es
add
stc
std
jle
xchg
pmaxub
ljmp
rol
pop
movsl
xor
add
lods
mov
jmp
or
test
cli
jne
jno
imul
sbb
mov
jl
mov
cmpsl
mov
inc
or
test
outsl
cmpsl
xchg
jnp
sub
sbb
pusha
dec
repz
negb
insl
pop
jecxz
xchg
push
pop
les
sbb
lahf
cmp
xchg
enter
in
dec
add
adc
sbb
cmc
mov
std
aas
push
cmp
jmp
mul
cmp
sub
inc
adc
and
shrl
pushf
and
ror
jle
or
push
out
lock
aas
pop
lods
lock
lcall
dec
imul
xor
xchg
push
sub
cmp
out
ficoms
ja
jge
jle
test
inc
das
shrb
jle
push
cmp
mov
adc
xchg
xlat
cmp
fld
icebp
mov
lret
adc
xor
and
mov
sub
nop
dec
jp
enter
insl
sub
cmp
leave
xor
aas
sub
in
and
sub
jns
pusha
int
mov
jne
scas
push
loope
jmp
outsl
subb
mov
sbb
lods
jge
pop
lock
cmp
dec
icebp
pop
subl
test
pop
out
xchg
mov
sbb
push
hlt
loop
inc
xchg
xchg
std
inc
cmpb
stos
iret
mov
ret
and
inc
insb
xchg
adc
cmpsl
push
sbb
xchg
bound
jne
xchg
xor
test
pop
lret
setns
inc
mov
movsb
testl
data16
mov
inc
jno
push
int
jnp
pop
inc
or
lea
xchg
adc
outsl
popf
sub
pushf
clc
outsb
ljmp
dec
push
popa
xchg
fcoml
cld
decl
sub
xchg
mov
pop
sub
inc
jns
test
or
out
cmp
adc
add
mov
and
aad
daa
fcomip
stos
mov
dec
add
sbb
sbb
xchg
mov
mov
icebp
sub
add
pop
into
mov
jo
pop
inc
jecxz
pop
xor
loope
inc
dec
aas
mov
cmp
shll
adc
and
addb
mov
pop
repz
mov
push
cltd
jo
sti
push
or
xchg
pop
arpl
sahf
pop
lods
mov
roll
test
aas
dec
xor
and
jo
push
sub
lea
aam
sub
cmp
sbb
mov
xlat
dec
sub
and
pop
addl
push
mov
dec
loop
addr16
or
cmp
loop
or
pop
push
iret
shrb
push
lret
sbb
je
pop
orb
imulb
sbb
mov
lea
sub
push
pop
push
adc
subb
in
xor
mull
sbb
aaa
loopne
inc
mov
insl
pop
jns
fwait
imul
sub
mov
ss
test
subl
push
ljmp
test
lods
repnz
mov
fnstsw
jbe
imul
pushf
das
les
popf
push
pop
cmp
cmp
inc
cmp
add
push
fs
dec
jno
idivl
mov
mov
testl
movsl
xchg
or
rclb
mov
out
lret
dec
jmp
xor
movsl
rcll
dec
call
repnz
jmp
pop
fiadds
mov
cs
fbstp
xchg
jp
lds
call
in
stos
inc
in
aaa
mov
sti
lea
loope
lret
xchg
cmp
and
jne
xor
mov
or
push
mov
sti
mov
inc
mov
ja
insb
lods
pop
sahf
cli
pop
dec
add
mov
pop
mov
out
insb
dec
jmp
fimuls
fldt
mov
daa
aaa
and
pop
in
push
add
cmp
test
mov
push
or
addr16
sub
pop
fdivr
jb
dec
jmp
xchg
fwait
dec
jmp
iret
push
test
daa
adc
fistl
add
add
mov
jmp
adc
vunpcklps
adc
cmp
mov
sub
xchg
bound
arpl
lahf
sbb
jle
aad
in
pop
movsl
pminub
fs
stos
jnp
push
or
jns
sbb
mov
push
jl
sbb
push
jnp
sbb
jp
inc
xchg
mov
adc
or
cli
push
fisttpll
xchg
xchg
out
adc
addr16
gs
js
addb
sub
jnp
popa
cli
dec
repnz
pop
cmp
xchg
lcall
adc
mov
movsb
xchg
loop
imul
lret
repnz
fyl2xp1
mov
and
mov
scas
push
shrl
mov
dec
jne
lret
sbb
push
mov
mov
inc
stos
clc
add
pop
leave
data16
popf
leave
sub
add
mov
push
in
cld
test
fsubs
cmpsb
movsl
dec
push
or
ficoms
notb
loopne
daa
js
mov
inc
sbb
cwtl
stc
inc
rol
jne
stc
insb
push
mov
fnsave
pop
dec
push
sbb
and
jo
xor
xchg
lock
and
dec
jmp
sub
sbb
test
sub
in
adc
mov
clc
fsubs
or
pop
xor
mov
mov
sub
lods
jle
mov
sbb
js
push
or
pushl
sub
popf
sub
inc
ss
mov
mov
add
pop
aam
xor
data16
xchg
and
pop
jbe
cmp
scas
arpl
inc
sbb
hlt
sar
in
xor
aam
pushf
jmp
cmc
push
lea
scas
mov
jae
sahf
mov
test
jne
jns
aas
out
xchg
sub
cmp
lret
clc
repz
icebp
call
mov
mov
out
mov
shll
mov
xchg
cmp
je
movsb
lods
ds
rcl
mov
fwait
rolb
jle
out
mov
ljmp
cmp
fisubrl
pop
adc
loope
bndldx
pop
xchg
sub
lods
bound
rclb
imul
adc
add
mov
mov
dec
cmp
push
cmp
sbb
push
pushf
jg
mov
adc
cmpsb
push
cmp
test
mov
adc
sub
sti
and
int3
out
mov
pushf
loop
cmp
in
fs
imul
push
notb
leave
mov
pop
addb
mov
movsb
stc
jae
int
arpl
icebp
shlb
negb
or
aaa
mov
cs
sub
in
mov
loop
mov
arpl
mov
insb
into
cmp
sub
add
call
divl
into
stos
dec
mov
or
pusha
jp
mov
mov
stc
push
or
shlb
xor
pop
adc
pop
or
sahf
lods
mov
test
sub
cltd
and
and
inc
sub
cli
jmp
xchg
xor
xchg
lea
pushf
jp
push
mov
pusha
xchg
jl
addr16
cld
pop
fimuls
push
or
insl
xchg
fsubrs
sbb
mov
sub
add
je
cmc
inc
out
adc
lret
scas
mov
cs
push
cmc
int3
data16
scas
imul
loope
and
ljmp
cld
mov
notb
add
xchg
jge
adc
push
rcrl
mov
push
repz
pop
sbb
dec
xor
sbb
fsubrp
fs
aaa
jmp
add
pop
repz
dec
dec
rcrb
pushf
xchg
inc
dec
jg
xor
adc
dec
mov
fmuls
push
mov
push
xor
or
or
cmpsl
mov
mov
int3
imul
mov
pushf
xorl
xchg
ds
mov
lcall
cltd
iret
pushf
or
dec
aas
jmp
mov
idiv
mov
and
movsb
mov
sbb
sbb
xchg
xchg
xor
jecxz
popa
stos
aam
mov
fwait
jae
out
jge
pop
xlat
inc
dec
fbstp
jp
nop
push
divb
jge
mov
push
sub
sti
sbb
negl
push
push
or
jbe
fucomp
cmp
clc
idivl
mov
xchg
test
rorl
and
sahf
fsubrp
es
xchg
pushw
mov
fnsave
pop
jge
push
faddl
les
fsubr
js
pop
jno
dec
adc
addr16
cmpl
movsb
mov
pop
jne
inc
arpl
push
add
xor
dec
fwait
shlb
jne
inc
mov
adc
jae
stos
mov
clc
sbb
out
push
jl
outsb
aad
rcrl
fiadds
sub
dec
sbb
lahf
daa
jb
and
iret
sub
xorl
dec
pop
dec
push
test
mov
daa
lret
adc
imul
push
push
ja
xchg
and
insl
pop
fsts
adc
jmp
in
cmp
idivb
pop
pop
jp
call
sub
adc
imul
lds
insb
out
leave
popf
dec
push
push
sbb
mov
jl
pop
dec
ds
xchg
std
les
mov
sbb
mov
dec
add
cmpsl
mov
add
xchg
xlat
dec
mov
cld
cli
out
inc
not
xchg
fisubl
ds
sub
rcr
insb
in
jge
ret
iret
add
shlb
jo
int3
dec
xchg
xchg
imulb
repz
jae
jecxz
mov
xchg
mov
xor
sti
outsl
dec
and
popf
mov
sub
xor
popa
pusha
cmpsb
test
sub
loopne
icebp
sub
add
ret
inc
insl
add
outsb
and
or
cmp
cmp
push
jge
in
loope
xchg
pop
mov
xor
testb
pop
popf
push
cmp
cltd
xor
jmp
xchg
xsha256
cmpsb
aad
les
push
into
das
mov
ja
inc
mov
xchg
mov
std
sub
arpl
mov
push
cmp
bound
adc
shll
push
popa
arpl
les
inc
das
cmp
or
cmp
or
mov
clc
cmp
mov
inc
add
mov
xor
pop
push
push
movsl
mov
mov
pop
es
stos
mov
outsb
pop
fcmove
jmp
enter
pop
repz
and
adc
addr16
pop
adc
pop
in
mov
push
or
xchg
cltd
and
into
adc
sbb
sbb
add
imul
jo
push
dec
cmpsl
orb
int
loop
sub
lret
pop
daa
cwtl
inc
push
pop
test
cmp
add
imul
daa
bound
cltd
bound
mov
adc
fs
adcb
in
xor
sahf
testl
push
imul
xchg
or
jnp
cmp
xchg
jb
xlat
add
mov
xor
enter
les
icebp
enter
mov
jmp
mov
fsubr
sbb
in
pushf
aam
cmp
clc
pop
or
fs
push
sarb
popf
cld
push
cmpsb
mov
int3
pop
lret
jnp
imul
test
sub
mov
decb
mov
pop
iret
mov
mov
cmc
adc
xchg
in
outsb
inc
std
mov
mov
and
sbb
pop
adc
cmp
jl
mov
popf
movsb
std
adc
or
and
cs
push
xchg
mov
sbb
and
xor
adc
mov
aam
ret
xorb
mov
sti
jae
or
pop
pop
shrl
lret
and
jno
jle
dec
jae
addl
dec
mov
fwait
std
icebp
movsl
cmp
pop
push
sbb
mov
arpl
mov
in
pop
int
cltd
jo
test
inc
test
cltd
shr
mov
add
clc
xor
sbb
lods
xchg
aas
and
cmpsl
subb
cmp
ret
inc
and
xlat
jne
sbb
cltd
add
insb
jns
mov
addr16
cmp
mov
repz
sub
arpl
aaa
push
pmullw
cmp
mov
mov
xchg
xchg
jae
jecxz
jnp
dec
mov
pusha
push
jnp
xor
fldenv
inc
in
push
fadds
inc
ja
jbe
addr16
jmp
mov
inc
loop
cmp
out
pop
push
jbe
les
mov
fstl
and
sub
mov
in
movsb
jp
imul
xchg
adcl
jg
and
scas
test
cmovns
lds
pushf
movb
fiadds
or
hlt
inc
dec
push
xchg
add
shll
adc
hlt
push
add
push
cmp
ljmp
push
cmp
mov
add
fwait
insb
pusha
movsb
cwtl
adc
imul
shr
lret
xor
jb
jg
sub
mov
test
imul
or
loop
pusha
xchg
jl
cmp
cmp
fldt
lods
mov
outsb
adc
add
bound
or
mov
mov
jge
push
inc
push
push
nop
inc
push
pop
jg
shrb
pop
iret
mov
mov
add
lahf
outsl
add
testb
dec
pop
cmp
rcll
xor
mov
inc
inc
adc
lret
sub
push
leave
test
cmpl
sarb
xchg
in
xchg
in
into
loop
or
pop
cmp
push
push
pop
aam
popa
pop
jp
sub
or
mov
add
xchg
push
jg
iret
push
add
lret
dec
lret
add
adc
pop
mov
add
mov
inc
sbb
out
in
ret
pop
mov
mov
out
or
jmp
pop
cmpsb
jnp
add
jb
das
and
mov
adc
in
or
mov
test
adc
lds
push
inc
or
rcll
add
pop
jae
inc
fwait
jo
and
dec
test
adc
fsubs
xchg
dec
xor
fldl
cmp
ret
mov
adc
lds
daa
add
xor
adc
pusha
mov
lahf
pop
xor
mov
mov
nop
cli
cltd
std
lock
jno
imul
popf
or
imul
sub
shrb
mov
sbb
push
pop
into
and
mov
inc
or
xchg
sbb
rorl
or
add
xchg
sub
adc
or
lods
test
mov
mov
xchg
mov
jg
pop
int3
xorl
jmp
sarb
jne
stos
jae
fstps
xor
push
icebp
and
movsl
cld
xchg
or
cmp
clc
mov
mov
sbb
pop
pop
cli
push
cmp
push
fldcw
xchg
test
xchg
inc
and
cld
out
out
sbb
lock
and
pop
hlt
clc
negb
fsubrs
jns
mov
jbe
mov
push
jl
cmp
pop
out
jmp
stos
jo
lea
jmp
sub
mov
daa
cmp
push
adc
adc
aad
pop
mov
out
push
and
jo
data16
inc
sbb
jae
mov
orl
xchg
dec
push
in
arpl
inc
cs
test
es
sbb
push
pop
lea
lahf
lahf
xor
mov
inc
fs
sbb
jbe,pt
sar
jnp
jbe
addr16
jbe
pusha
push
and
cmp
cmp
add
test
mov
ret
jge
pusha
shrl
sbb
call
jl
xorb
pcmpeqw
bound
sub
xchg
insl
ja
mov
xor
pmaxsw
jns
rolb
lods
popf
fcomp
pop
ljmp
cltd
movsb
mov
adc
jo
cmp
pop
adc
push
incb
and
inc
pusha
pop
push
adc
rolb
aas
mov
cmp
cmpl
sar
loopne
cwtl
and
xor
push
and
mov
pop
loop
cmp
mov
xor
bound
divl
fisubs
xor
mov
sub
aas
pushf
out
xchg
adc
or
pop
ljmp
ss
push
mov
mov
cli
in
pop
or
mov
inc
lods
loope
out
sub
xchg
or
addl
shr
push
mov
js
or
out
push
out
outsb
jp
dec
dec
addr16
loop
das
sbb
xchg
stos
inc
pop
sbb
fs
add
and
fistpll
jecxz
fadds
addb
push
inc
and
xchg
cmp
std
in
adc
int
call
ja
inc
add
cmp
into
scas
insl
lods
cmpsb
lret
in
subb
movsl
pop
mov
test
aas
inc
sbb
sub
xchg
imul
inc
outsb
shll
pop
les
arpl
or
add
enter
jecxz
jne
inc
mov
cwtl
mov
sbb
fisubrs
sbb
sti
adc
stc
inc
xchg
cmpb
leave
icebp
push
mov
mov
lcall
loope
push
in
cld
test
nop
enter
sbb
les
ret
sub
add
dec
ja
mov
repz
sub
lods
fldcw
cltd
fstp
data16
jmp
in
cmp
imulb
push
jne
sub
or
test
mov
xchg
in
lea
pop
or
rorl
icebp
lea
and
rorl
aaa
gs
mov
sti
jns
push
xor
adc
movsl
mov
pop
in
push
sbb
mov
fistpl
aas
out
add
int
in
inc
sbb
xchg
mov
push
cli
cmp
sbb
repz
xchg
testb
cmpsb
popf
pusha
outsl
dec
and
arpl
jbe
das
mov
jecxz
jl
int3
lock
cld
mov
mov
inc
test
loop
repnz
hlt
lds
int
fnstcw
dec
lods
mov
sub
pop
insl
dec
mov
lds
push
or
push
jp
cmp
stos
or
sbb
push
dec
add
inc
call
add
lcall
sub
fs
int
mov
jo
mov
fyl2x
in
push
out
lahf
adcl
xchg
fadd
es
lock
repnz
js
out
ss
push
xor
das
fsts
cmp
movsl
lock
das
xor
int
mov
sub
stos
aam
dec
daa
add
out
adc
and
mov
push
stos
iret
pop
test
mov
out
lods
xchg
pop
inc
jecxz
jp
xor
jle
pop
lret
in
nop
jle
adc
inc
jnp
fsubl
imul
pop
or
out
mov
inc
movsl
out
lahf
inc
xchg
insb
ja
add
and
decl
xor
addr16
mov
call
or
jecxz
test
add
imul
popf
sub
aam
js,pn
jmp
sti
ret
ret
xor
mov
aas
xchg
sbb
mov
movb
fsubrs
jne
outsl
imul
aaa
inc
jle
jne
cmpsl
pop
cmp
shrl
dec
mov
test
add
fists
jnp
in
cmc
out
movsl
push
or
pop
cmpsl
xorb
jl
out
inc
movsb
or
push
pop
mov
mov
jb
xchg
jo
shr
insl
mov
fmuls
xor
xlat
int
je
test
jns
outsb
xchg
test
xchg
push
outsb
sub
es
mov
jecxz,pn
xor
mov
nop
mov
sbb
std
jnp
sahf
outsb
inc
xchg
ds
cmp
or
les
push
insb
xchg
sub
pop
sub
lock
aad
push
rolb
outsb
adc
and
data16
dec
and
std
nop
mov
xor
fadds
and
cmpsb
hlt
and
aad
scas
mov
test
sub
mov
sbbb
or
push
lcall
es
inc
mov
push
lea
movsl
or
aas
and
and
das
cmp
fcom
jns
push
dec
mov
aad
pop
adc
shlb
arpl
add
loopne
jmp
xchg
fnstenv
or
xlat
mov
aad
xchg
cltd
lret
cli
or
ja
movb
ret
outsl
mov
repnz
sahf
push
loopne
push
xchg
cmp
xor
and
rorl
push
stos
mov
mov
decb
mov
shll
ds
shll
xorl
gs
out
lea
and
fwait
xchg
std
jmp
cli
xchg
hlt
aaa
sbb
rcrl
push
cmp
sub
shlb
mov
and
dec
stos
loope
and
imul
adc
xor
cmp
sbb
pop
stos
xchg
mov
sahf
jns
xchg
imul
ret
cli
pushf
mov
cwtl
xor
pop
cmc
popa
sahf
jne
jne
inc
rcr
pop
cltd
out
add
arpl
lods
mov
sub
sarl
cmp
sbb
xor
add
or
fnsetpm(287
mov
xor
sarb
jnp
sub
jo
mov
push
push
das
jns
jno
pop
pop
enter
and
add
test
mov
and
add
or
ret
mov
sbb
and
push
aad
xchg
cmp
inc
ljmp
adc
sbb
mov
shl
or
xchg
and
mov
repnz
jle
mov
shl
push
addr16
xchg
sahf
ljmp
mov
mov
push
in
iret
push
inc
test
mov
xor
mov
sub
ds
into
xchg
out
popa
mov
inc
or
pop
cld
mov
rclb
cmp
jge
dec
repz
jne
adc
inc
mov
shl
inc
xor
or
mov
insl
sub
arpl
xchg
mov
movsb
adc
popf
pusha
push
push
outsb
mov
and
or
or
mov
fstl
add
cmp
xor
inc
push
add
and
push
mov
push
push
or
ret
loop
sbb
jle
jp
push
test
xchg
or
cmp
jb
shll
int3
test
jle
shll
jno
ret
and
fldl
test
push
add
icebp
sub
fsubl
pop
jo
inc
test
vhaddpd
loop
divb
scas
inc
jmp
push
outsb
cwtl
rcll
push
in
movsl
mov
pusha
xor
xor
push
imul
mov
or
lahf
stos
inc
adc
push
addl
push
push
gs
add
sbb
imul
push
sub
sahf
mov
fistl
sub
popa
lock
jmp
and
lcall
fdivr
adc
notl
fistl
test
mov
arpl
int3
div
mov
nop
cmpsl
mov
mov
std
fisttpl
popf
rol
aaa
aaa
push
clc
xchg
dec
xchg
inc
lds
or
cmp
push
test
iret
mov
add
inc
leave
stos
sbb
mov
jb
dec
xchg
sbb
out
sbbb
idivb
add
xchg
cmp
xor
jl
mov
popf
stos
add
iret
ret
addb
dec
jae
adc
add
mov
pop
fcmove
add
inc
sbb
outsl
ljmp
js
outsl
mov
pusha
nop
sarl
lea
and
push
push
jmp
cs
mov
es
mov
cmpsl
mov
sahf
lock
leave
cmpsl
adc
enter
movsb
iret
cmc
ret
pop
adc
ret
sub
inc
sbbl
adc
dec
jbe
call
jo
mov
push
push
in
xchg
rol
xor
jge
mov
pop
push
mov
popa
or
mov
mov
dec
out
lret
out
stc
sbb
push
inc
xchg
lahf
mov
cmpsl
xor
dec
leave
and
enter
sbb
loope
mov
loope
std
arpl
rclb
xchg
pop
shrl
sahf
sbb
imul
adc
sub
stc
and
test
sub
shlb
jl
mov
push
je
movsb
popf
imulb
jg
cmc
fcompl
enter
add
fdivrs
out
push
mov
stos
push
jp
mov
sbb
aam
mov
push
push
bt
ret
in
dec
insl
mov
imul
push
push
add
xor
lea
test
outsl
mov
pop
loope
jae
testl
loope
out
pop
popa
aam
dec
jmp
rcr
dec
xchg
lock
pop
ljmp
mov
jecxz
jg
and
flds
xor
mov
gs
jecxz
add
xor
push
lea
fbstp
aam
nop
mov
push
xchg
sbb
std
icebp
inc
jmp
push
cmc
push
inc
rol
inc
dec
sub
dec
mov
hlt
push
out
push
cld
xchg
xor
cmp
outsl
pop
push
pop
cltd
clc
dec
js
mov
push
fdivrl
pop
data16
push
add
xor
push
adc
div
imul
jle
faddl
mov
faddl
fadd
push
fs
mov
stc
repnz
iret
into
pop
jnp
sub
sti
mov
push
adc
negl
mov
mov
jo
xchg
xor
jp
xchg
pushf
mov
xorl
insl
and
cmp
pop
adc
fisttpl
jnp
xor
push
cli
cmp
push
loope
js
pushf
in
inc
int
stc
dec
dec
fisubrl
adcb
adcb
aam
int
xor
jne
sahf
adc
stos
xchg
pop
and
sysexit
cmp
loope
add
inc
mov
mov
or
push
shl
add
xor
jae
call
mov
lods
add
outsb
fwait
mov
stc
lea
and
int
test
inc
incb
fcoms
shlb
sar
mov
lret
lods
mov
ss
pushf
sbb
lock
stos
pop
in
data16
les
sub
lea
or
fwait
mov
arpl
mov
rsqrtps
mov
inc
jo
test
js
mov
push
cmp
mov
mov
cmp
xor
push
inc
loope
aas
cli
shlb
sbbl
fldcw
or
or
xchg
movsb
jmp
adc
bound
xlat
sbb
xchg
insl
pusha
jmp
lock
ljmp
fists
lcall
jnp
inc
sbb
inc
popa
insb
imul
add
faddp
xchg
stc
sbb
insl
mov
xchg
and
fxch
adc
jle
pop
cmp
jmp
jae
and
push
icebp
adc
pushf
repz
mov
add
in
mov
outsl
scas
push
cmp
fldl
pusha
test
in
jl
or
fadds
icebp
fwait
lahf
icebp
sbb
es
movsl
pusha
adc
in
fiadds
aam
push
movsb
mov
fdivrp
mov
dec
xor
sahf
mov
test
dec
lods
cmp
out
and
inc
in
sbb
lret
xor
pop
jecxz
stc
shlb
and
xchg
mov
or
fldcw
popf
pop
mov
cwtl
and
cmp
push
mov
xor
push
or
mov
lods
pop
jb
mov
cs
fwait
xor
mov
cwtl
psubusb
cmp
push
inc
loop
dec
sub
lret
lretw
mov
inc
xchg
push
pusha
frstor
insl
add
push
lret
in
inc
cmpb
mov
push
or
lds
dec
int3
pop
jg
lods
shl
xchg
pop
adc
xlat
adc
mov
push
mov
inc
dec
loop
mov
cmpl
mov
xchg
rorl
pusha
and
and
push
clc
test
lret
fmull
dec
scas
push
cltd
mov
mov
arpl
lods
decl
dec
mov
int3
adc
xlat
xchg
shlb
sbb
cs
sub
add
pop
xor
sbb
sub
je
pop
and
push
sti
cmpsb
pop
jmp
pop
out
movsl
add
jge
push
test
and
jmp
mov
mov
jl
mov
ja
dec
cmpb
mov
mov
lret
sub
mov
dec
fmul
dec
jbe
dec
gs
push
popa
pop
pop
xor
xor
adc
fwait
imul
and
cld
cwtl
bound
imul
mov
or
jno
push
cmp
xchg
and
shl
cltd
mov
out
or
or
jecxz
add
adc
or
jmp
movsl
ds
aas
mov
jecxz
inc
aad
les
dec
adc
scas
aaa
movsb
mov
js
cmp
stc
pop
imul
push
or
repnz
fimuls
push
in
das
xlat
sbb
enter
pop
adc
scas
jmp
sbb
xchg
dec
adc
pusha
mov
out
add
in
lock
iret
xchg
push
mov
fsubrs
ror
mov
call
xchg
mov
pop
jno
movsl
pop
cmp
mov
repz
ror
sbbl
mov
add
cld
sub
push
sub
aaa
mov
or
xorb
dec
lds
dec
add
aaa
sub
mov
adc
jns
and
out
int3
xchg
ja
xlat
add
mov
pop
test
repz
dec
push
mov
jbe
incb
aas
fsubl
scas
mov
dec
icebp
gs
cmp
inc
add
cmpsl
in
or
sub
cmp
xor
aaa
and
and
mov
mov
js
stc
push
imull
or
cli
imul
dec
xchg
sbb
cmp
sti
xchg
jmp
jo
jnp
mov
add
lahf
subb
sbb
stos
lret
jg
data16
mov
sub
fldenv
mov
out
rcr
push
cmp
loopne
sbb
jg
std
dec
stos
adc
inc
jmp
or
xchg
xor
int
test
push
jmp
cmp
pop
ret
mov
xchg
add
xor
das
cmp
dec
mov
add
jo
and
jne
das
push
leave
stos
mov
icebp
pop
repz
rol
roll
ss
outsl
push
push
loop
shrl
sub
dec
loop
sahf
jbe
pop
out
iret
push
pushl
pop
roll
fcoms
xchg
movsb
mov
push
out
adc
pushf
test
mov
bound
push
into
lret
insl
std
enter
iret
rcll
and
add
enter
enter
les
insb
repnz
mov
cltd
shlb
jns
cmp
shlb
or
nop
icebp
out
movsl
jno
sbb
or
jno
int3
adc
sbb
popf
pop
inc
mov
mov
or
mov
sub
test
test
sbb
popf
push
mov
lods
in
adc
mov
jae
cmpsl
xor
inc
dec
sub
outsb
mov
bound
je
sub
cmpsb
dec
xchg
bound
mov
sbb
popf
nop
test
mov
and
and
addr16
imul
mov
pop
sbb
xchg
adc
push
or
or
mov
add
xlat
inc
pop
pop
xor
in
ret
cltd
push
insl
add
jp
ficompl
clc
or
out
push
mov
popa
xchg
lock
outsl
dec
pop
cld
outsl
ljmp
cmpl
pop
addr16
push
cs
cmp
xor
dec
pop
aad
sti
movsl
dec
jb
out
cmp
add
pop
clc
rcr
lock
xchg
dec
aam
scas
mov
cld
cmc
pop
mov
jo
pop
fcoms
xor
lret
xor
jno
add
cmpl
or
pushf
bnd
add
xchg
mov
ds
mov
xor
add
lods
mov
xchg
dec
push
jge
mov
ds
aam
mov
movsl
ret
sar
and
dec
add
and
out
and
mov
xor
inc
and
decl
pop
cmc
std
outsb
pop
lret
rep
daa
iret
arpl
sahf
dec
mov
mov
or
inc
jns
out
add
pop
je
rcll
je
fucomp
and
lods
jl
push
or
mov
jmp
daa
fmuls
sbb
rcll
movsl
rol
adc
std
and
dec
sti
push
mov
pop
fs
pushf
xor
add
xchg
push
aas
inc
sub
insb
fisubs
jae
add
repz
pop
pop
gs
imul
dec
imul
dec
into
add
mov
ja
push
jno
idiv
mov
bound
outsl
cmp
inc
inc
or
adc
jae
stc
push
es
inc
mov
xchg
jb
mov
dec
mov
pop
dec
add
mov
es
add
add
mov
in
cmp
add
add
stc
rolb
mov
dec
not
or
movl
sbb
test
lods
adc
sub
insb
cmp
cli
fs
pop
sub
xor
sbb
pop
out
and
mov
jge
mov
das
sub
jmp
int3
lods
fs
imul
jmp
popa
shufps
inc
movq
sbb
lret
push
inc
add
and
xor
fs
xor
dec
dec
aad
int
cmpsl
sub
fmull
out
lcall
mov
lret
jle
push
adc
bound
add
xor
add
sub
mov
cmp
fcmovnb
inc
add
aas
push
jb
xchg
cwtl
nop
cmpsb
jge
and
pushf
pop
stc
push
adc
xchg
popa
add
pop
orb
scas
insl
shrb
mov
jle
xchg
lret
mov
mov
int3
leave
jb
jcxz
pop
inc
insl
add
adc
cmp
xchg
pop
sbb
add
dec
push
adc
cmp
sbb
mov
push
insb
fst
mov
test
adc
cmp
add
and
pop
or
test
call
sbb
aad
push
sub
or
push
sub
pop
pop
mov
popf
inc
in
rolb
xlat
inc
mov
pop
nop
mov
xchg
stc
mov
cmp
add
fiadds
pop
cmp
iret
lahf
or
cld
sub
iret
dec
sti
out
or
sbb
mov
fcompl
jle
mov
push
leave
sbb
jmp
cmp
mov
mov
jp
stos
mov
lods
lds
pop
cmp
dec
pop
adc
mov
cmp
mov
push
dec
ja
lret
fnstenv
enter
push
sub
fwait
adc
hlt
sub
int3
pop
imul
add
sub
imul
aad
jecxz
test
pop
loop
lcall
or
sbb
arpl
xor
and
xchg
dec
ss
rol
add
jns
imul
and
cltd
decl
stos
sbb
loope
jnp
test
jecxz
cs
repnz
scas
pop
repnz
xchg
repnz
stos
addl
mov
lods
dec
enter
ss
sbb
add
sbb
fsubrs
roll
outsl
jns
push
push
cmp
popf
icebp
shll
cmp
sub
insl
ret
xchg
cs
lods
pop
ficoml
adc
mov
pop
sbb
and
lock
leave
outsb
xor
sbb
inc
ret
jmp
pop
xchg
push
and
push
out
shrl
rol
mov
lret
mov
stc
int
xchg
sahf
sarb
push
xchg
jecxz
and
and
xor
push
sbb
gs
push
add
add
outsb
add
push
mov
into
int
aad
adc
ja,pn
xchg
cs
in
fbstp
push
pusha
icebp
cmpsl
rcr
in
rolb
mov
lock
in
add
pop
sbb
mov
add
decl
push
mov
pusha
fmull
inc
xor
cwtl
lret
sahf
aam
mov
cmp
cmpsb
mov
pop
arpl
mov
mov
mov
sbb
inc
aas
mov
add
jns
loop
xor
fstpt
jb
add
imul
outsb
movsl
lret
aam
jo
stc
push
xchg
popa
jae
mov
ror
mov
inc
aas
stos
push
gs
fs
mov
je
es
dec
mov
dec
loop
inc
push
flds
std
add
cltd
sbb
insb
jge
push
es
vmaxsd
jo
pop
mov
out
adc
add
in
repnz
int
pop
xchg
xor
hlt
hlt
adc
cmpsb
jns
jae
cmp
pop
nop
imul
mov
loopne
out
xchg
and
pop
and
pop
test
imul
jae
and
jae
test
xchg
xor
sub
stos
and
movzwl
sub
jns
pop
es
cmp
push
or
sbb
sti
sub
sbb
fwait
push
out
lds
test
aaa
lret
pop
push
dec
adc
icebp
jl
repz
inc
dec
xor
inc
pop
dec
sbb
cs
adc
pop
jl
dec
in
sub
repz
pop
jbe
lahf
fdivl
mov
xchg
xor
push
loope
fdivrs
mov
movsb
out
shll
inc
sarl
xchg
sahf
das
subl
cmp
out
or
sub
pop
jge
mov
sbb
pop
lret
mov
mov
jo
push
jne
adcl
xor
push
out
leave
push
add
test
fisttps
mov
es
pop
push
mov
clc
push
or
cld
cmc
xchg
aam
mov
in
cld
into
mov
test
pushf
test
call
pop
js
xchg
pop
fnstcw
inc
mov
adc
add
pop
mov
or
adc
aam
mov
pusha
cwtl
lds
xchg
mov
sub
adc
sbb
popf
xchg
gs
jl
cs
in
pop
adc
hlt
data16
scas
sub
daa
cmc
ficompl
dec
xor
scas
mov
jge
imul
cmp
push
jg
imul
and
jb
cld
pop
cmpl
fs
dec
cltd
scas
arpl
xchg
jo
and
stos
sub
mov
int3
add
pop
daa
push
pop
lcall
jno
in
ret
push
xlat
mov
test
jne
pop
dec
fs
mov
test
add
insl
or
or
ds
push
cmp
push
mov
roll
mov
adc
mov
hlt
fmull
incb
outsl
xchg
sarb
pushf
fsubr
popf
movsb
mov
cwtl
pop
int3
push
repz
pop
rorb
and
xchg
mov
add
dec
test
jno
add
in
jnp
jmp
or
outsb
fbld
jmp
or
push
les
push
inc
pop
dec
arpl
rorb
enter
andb
outsb
test
ficompl
xor
mov
mov
mov
adc
cmpsl
jb
xchg
push
mov
loop
xchg
fsubp
sbb
inc
or
iret
cmpsb
and
stc
or
fbstp
push
dec
gs
dec
nop
push
cmp
bound
xor
push
mov
arpl
xor
mov
clc
repnz
incl
xchg
pop
sub
cmc
or
push
movsb
loop
inc
roll
lods
xor
mov
fistpl
push
mov
sbb
and
mov
xchg
or
addr16
scas
incb
push
inc
incb
jp
xor
sub
and
scas
sub
push
xor
inc
fsubl
data16
sub
add
sahf
jae
cmp
data16
jno
adc
pop
jns
hlt
outsl
rclb
cmp
and
xor
push
fwait
pop
in
movsb
jp
pop
test
jl
push
insl
xchg
mov
shrb
fimuls
push
xor
jae
sbbl
push
mov
dec
pop
sub
lock
fcompl
inc
push
insl
popa
xor
dec
push
push
test
imul
dec
add
sbb
pavgw
pop
mov
int3
lock
xchg
dec
mov
repnz
cwtl
outsb
xor
adc
push
leave
mov
out
add
pop
fcomi
xchg
add
hlt
mov
int3
cmc
push
jae
or
incl
sub
fidivrs
inc
push
repnz
xchg
insl
sub
cmp
in
cmp
ja
fstpl
in
cmp
adc
or
pusha
pop
mov
add
cmc
mov
ja
je
or
and
push
xor
cmp
jle
lret
sbb
sbb
push
mov
add
adc
jne
fsubrs
ss
loop
fwait
or
test
cmp
out
mov
mov
rclb
divb
push
out
and
popa
adc
sbb
enter
insb
lret
cwtl
pop
inc
add
leave
iret
xorl
into
mov
ror
jle
or
sbb
inc
xor
test
cmpsl
les
addr16
xchg
pop
fwait
sarl
scas
mov
push
and
enter
hlt
xchg
pop
add
sbb
lock
into
push
inc
fbld
call
imul
and
adc
ror
addl
cmp
ja
jmp
in
imul
push
inc
fcoms
and
and
sahf
js
ja
sbb
lods
insb
lock
mov
cmp
pop
mov
mov
test
inc
movsl
or
jp
pop
rorl
mov
lret
sub
pop
mov
test
adc
mov
decb
pusha
je
inc
mov
rcll
push
and
fs
adcl
sbb
mov
add
and
gs
pusha
or
xor
and
pusha
inc
pop
sbb
sub
aas
jmp
les
mov
xor
addr16
sub
pop
and
add
cvtpi2ps
cld
fistpll
push
test
adc
sbbl
negl
sbb
addr16
cmc
dec
dec
repz
mov
sub
inc
ljmp
mov
ds
mov
shrb
test
decl
cmp
stos
push
clc
orl
ljmp
mov
jo
and
mov
pop
inc
fwait
push
mov
dec
jle
dec
sub
pop
jo
ficomps
jmp
xchg
fcomip
mov
push
loope
gs
adc
dec
cmp
je
aad
pusha
pop
jne
dec
mov
data16
inc
push
faddl
cwtl
xor
inc
jecxz
aas
lods
push
out
dec
insb
mov
fisttpl
pop
and
cmp
dec
out
insl
and
popa
lea
stc
insl
inc
xchg
jae
jecxz
nop
pop
and
cld
ret
outsl
inc
fbstp
jbe
js
int3
pop
std
inc
push
fidivl
divl
dec
pop
push
cwtl
sbb
add
das
adc
test
stc
jl
lea
ds
cltd
imul
jge
mov
jb
ret
cltd
mov
in
mull
xchg
scas
xor
andl
sub
mov
lock
pop
xor
ficompl
scas
mov
ret
rcr
inc
jne
sub
push
push
xchg
out
shl
int3
ljmp
dec
and
sti
leave
mov
es
push
addr16
int
out
repnz
lcall
mov
insl
mov
cmp
push
lcall
lahf
out
lods
xchg
pop
jp
popa
ds
jbe
sbb
sahf
lahf
jp
pushf
pop
add
push
cmpsb
dec
lock
cmpsl
adc
and
mov
and
fs
bound
add
mov
in
push
mov
add
xor
mov
xor
loope
fldcw
xorb
jmp
cli
imull
mov
jbe
jmp
int3
out
or
xor
adc
adc
frstor
les
or
jle
fadds
insb
lret
mov
rorb
imul
push
div
jnp
fsubp
ret
jge
daa
xchg
popf
push
xor
rcrl
leave
imul
pop
mov
inc
and
mov
fidivrs
push
rcr
repz
or
jno
test
mov
jno
sbb
jno
xor
cmp
dec
lds
and
cld
sbb
adc
jecxz
aad
je
clc
mov
fisttpl
inc
fisubrl
lret
lcall
icebp
mov
xchg
bound
xor
in
divb
ljmp
popf
idivb
nop
mov
jle
pushf
jno
dec
fwait
scas
mov
stos
xchg
xchg
sub
sub
or
inc
sub
or
adc
ljmp
sbb
aad
lea
loope
aaa
in
hlt
fisttps
ficoml
orb
mov
out
dec
scas
fnstsw
lds
outsl
fdivrl
adc
enter
xorb
test
rclb
mov
out
dec
cwtl
stc
mov
cmp
subl
inc
stos
inc
ja
cmpsb
pop
sub
inc
jecxz
les
lret
popa
jb
insl
in
leave
or
xor
push
cmp
dec
mov
stos
lds
add
xor
jg
sub
mov
mov
sub
outsl
or
insl
movsl
sub
push
mov
popf
inc
sbb
lret
insb
int
xchg
stos
and
rolb
cmp
movsl
dec
pop
jns
mov
xor
pop
pop
out
mov
or
xor
fstl
lods
ds
mov
sbb
mov
hlt
add
pop
out
or
xchg
xlat
dec
arpl
loopne
sub
push
adc
push
add
stos
xchg
out
xchg
adc
hlt
ljmp
pop
aaa
je
jge
sbb
push
mov
popf
jbe
adcl
add
push
dec
or
dec
xor
push
je
test
stos
outsb
pop
arpl
xorl
add
mov
or
xor
push
mov
inc
add
int3
dec
cmp
push
ret
je
imul
inc
imul
in
fwait
add
imul
mov
mov
dec
sbb
fldenv
mov
mov
jnp
pop
scas
adc
bnd
push
cld
cld
jnp
xor
test
push
leave
xor
or
sbb
cmp
pop
das
jne
popf
ss
pop
insl
and
sbb
icebp
cmp
outsl
xor
stos
xor
fisubrl
lock
leave
scas
ds
dec
fnstsw
cmp
out
add
enter
add
movsb
or
push
adcb
fst
ret
pop
in
movsb
aaa
inc
leave
push
enter
loope
jmp
lret
es
addr16
mov
and
adc
add
cwtl
mov
mov
loop
enter
mov
iret
loop
sbb
sbb
dec
shll
out
mov
mov
adc
add
mov
jle
mov
ret
sub
loopne
shr
arpl
testb
stos
xor
int
and
loope
addr16
lahf
mov
xorl
cli
mov
or
push
push
enter
mov
sub
lret
les
mov
lea
mov
nop
lods
adc
icebp
les
popf
imul
int
into
loopne
or
or
in
lea
cltd
xchg
cmpsb
rcrb
sub
inc
xchg
sbb
jle
mov
icebp
and
adc
xchg
dec
add
cmc
cmc
insb
into
mov
cmpsl
test
icebp
je
jb
lcall
push
add
int
test
dec
mov
mov
mov
mov
loope
inc
mov
mov
add
cs
repnz
push
mov
or
push
shrb
mov
loope
xchg
data16
dec
arpl
mov
fcoms
inc
repz
mov
je
js
mov
cmp
pop
cmp
mov
xchg
insl
rorl
test
shrb
loop
scas
lock
pop
mov
adc
aaa
andb
mov
push
int
mov
lret
cltd
xchg
mov
or
xchg
subb
pop
addb
or
cmpl
out
jae
push
fcomps
fsubrl
sahf
lock
dec
insb
adc
mov
out
mov
std
adc
cmpsl
inc
lods
xchg
add
or
lock
iret
pop
iret
arpl
push
in
cli
popf
movq
jmp
daa
mov
dec
or
xor
xchg
lcall
div
js
pusha
sub
in
dec
mov
movsb
jp
pushl
jbe
push
lods
out
es
iret
jmp
xor
int
lret
into
inc
outsl
ficoms
jp
test
int
movsb
in
jmp
or
imul
sub
cs
xchg
cmp
gs
mov
and
lcall
jo
cmp
xchg
sarl
pop
push
sub
aad
jns
inc
pop
xchg
hlt
mov
mov
mov
int
add
push
arpl
outsb
movsb
hlt
pushf
or
xor
push
in
bound
mov
inc
jmp
xchg
adc
out
sarb
push
and
pop
jns
stc
fidivl
sahf
mov
stos
pop
gs
dec
repz
in
inc
xor
or
and
sub
dec
out
xlat
jo
xor
cmp
inc
or
and
inc
pushf
icebp
neg
xchg
shrb
les
mov
gs
cmp
sbb
insl
test
mov
or
cmpsb
jmp
push
jmp
xor
stos
popa
cmp
roll
push
cmp
or
sti
test
and
sub
or
or
push
inc
xchg
cmp
enter
xchg
nop
call
adc
sbb
add
arpl
dec
es
push
sahf
push
lds
pop
leavew
add
dec
sub
mov
out
mov
movsl
ja
sub
xchg
mov
arpl
icebp
or
pop
test
and
cmp
aas
jae
push
in
int
jne
add
imul
push
add
ds
loope
cmp
mov
adc
repz
xchg
cli
xor
aam
adc
popf
xchg
mov
mov
les
addr16
add
xchg
mov
add
pop
bound
ja
cmp
dec
in
xchg
pop
push
lock
jo
arpl
inc
aad
subb
or
out
xchg
iret
jne
js
add
sub
add
jl
rcl
adc
shrb
pop
out
rcrb
cmpsl
stos
lds
nop
adc
fdivs
sub
aas
sub
add
arpl
jno
movsb
cmova
cmpb
or
orl
lods
lods
std
add
out
jb
lds
cli
or
jg
pop
pop
cmp
jae
es
jb
inc
dec
mov
sbb
aam
hlt
ja
cmp
out
imul
test
ja
je
lahf
out
mov
inc
je
cmp
xchg
push
add
icebp
leave
sbbl
pop
cmpsl
out
mov
call
arpl
xor
cmpsb
out
stos
inc
adc
mov
daa
outsl
xchg
lds
mov
test
arpl
xchg
xor
out
iret
insb
sbb
dec
push
nop
aaa
mov
mov
add
xchg
and
mov
data16
sub
jb
loope
sbb
out
loope
add
iret
lods
pusha
pop
fildl
fcoms
cwtl
mov
or
jmp
adc
push
dec
dec
test
pop
data16
int
mov
xor
insl
xchg
lods
int3
mov
pusha
lcall
add
inc
jbe
scas
sbb
test
dec
mov
enter
xor
fstps
orl
inc
or
sub
push
mov
inc
arpl
sub
cmp
dec
enter
adc
sub
js
test
cmpsl
mov
xor
jb
inc
iret
incb
clc
xchg
add
fistl
and
pop
ret
cmp
or
leave
cli
jno
lret
out
outsl
dec
push
add
les
inc
sub
imul
mov
js
and
int3
cmp
mov
cmp
cmp
push
shl
and
sbb
ret
pop
pop
mov
int3
jecxz
fldcw
divb
mov
add
and
push
adc
mov
add
jbe
mov
xlat
daa
or
add
fsubrl
mov
clc
and
add
stos
push
imul
mov
xor
and
int
mov
outsl
shlb
inc
push
fisubrs
addps
jge
pop
das
scas
push
dec
xchg
scas
pop
mov
jbe
ja
cwtl
mov
sbb
inc
lret
test
das
jle
prefetchw
shll
sbb
dec
pushf
pushf
pusha
jne
add
mov
xlat
push
xchg
enter
push
stc
dec
xchg
nop
cmp
lea
sbb
mov
add
dec
mov
mov
xchg
xorb
inc
repz
test
pop
inc
jne
pop
or
bound
pop
stos
add
shrb
inc
push
insb
inc
dec
inc
mov
cli
insb
inc
xchg
sub
xor
icebp
pop
jmp
jge
aad
popf
mov
jmp
inc
xchg
dec
ds
movsl
push
stos
push
ljmp
aaa
sbb
xor
pop
push
mov
mov
sbb
divb
cwtl
jns
mov
imul
cltd
mov
adc
stos
inc
dec
je
jbe
lcall
dec
jge
pop
lea
jl
cvtps2pd
mov
cmp
pop
insb
cmc
xor
xchg
jno
ss
ficomps
mov
adc
sbb
ror
mov
jecxz
jne
int3
pop
lret
jge
pop
xchg
push
subb
js
cmp
cld
cli
es
pop
fisttpll
inc
push
adcl
or
out
nop
jbe
mov
jle
jbe
les
int
fwait
call
in
or
cs
js
xchg
sub
push
push
pop
sbb
adc
shlb
mov
clc
cld
lret
pop
imul
or
dec
push
in
out
xor
pop
add
rcll
sub
sbb
aaa
sub
xor
das
add
stos
in
pop
daa
pusha
jl
and
jle
cmp
pop
mov
adc
adc
cld
out
std
push
cmp
add
jne,pn
movsl
aas
loope,pn
or
adc
scas
mov
jl
xchg
pushf
xor
adc
int
pop
rep
xchg
in
cmp
in
jno
clc
mov
cmp
pusha
inc
push
sahf
aam
or
pop
push
shrb
dec
xchg
mov
jbe
push
sub
andb
xor
xor
xor
mov
sbb
push
add
add
out
nop
or
aaa
cwtl
xchg
push
add
inc
clc
testl
sti
xchg
mov
cmp
lret
lahf
in
cmp
sub
sub
xor
cmp
arpl
aam
mov
sub
mov
push
dec
xchg
imul
dec
insl
mov
insl
imul
sub
dec
sub
jne
jle
cmpsl
sbb
orl
adc
das
sahf
pop
add
cli
pop
adc
push
inc
into
shll
jnp
cli
and
mov
gs
xor
outsl
sbb
jmp
das
outsl
mov
xchg
outsl
pop
cmp
pop
push
ja
adc
jo
dec
add
jmp
ds
iret
loope
ret
jbe
cltd
mov
ds
loope
sbbl
push
or
aas
xchg
cmp
jae
hlt
mov
push
int
adc
mov
sahf
popf
xor
sbb
dec
pop
loopne
xchg
xor
jp
dec
push
cmp
fidivs
lock
nop
jnp
cmp
and
loope
rcll
rcl
lea
scas
add
xorb
cmp
adc
lahf
mov
orb
ljmp
add
nop
mov
sahf
push
fstpt
pop
dec
push
popf
stc
jb
jl
jb
push
sub
push
jo
insl
popf
or
cmp
xor
int3
adc
and
test
into
xchg
decl
pop
fsubr
addr16
movsl
xchg
push
in
mov
popa
fldt
in
pop
bound
addr16
jnp
popf
adc
mov
dec
pop
dec
daa
pop
or
shll
sti
stos
rcrb
mov
xor
loope
mov
inc
xchg
repnz
pop
adc
xor
inc
mov
rorb
loopne
lods
aam
jnp
xchg
leave
nop
mov
sub
adc
test
sub
adc
popa
add
test
sbb
mov
lock
adc
sub
lea
jo
add
mov
stos
cwtl
clc
shl
loopne
stc
or
add
data16
mov
mov
gs
div
sahf
dec
int3
adc
shll
add
cltd
test
int
clc
add
repz
ss
cltd
daa
inc
add
push
mov
pop
jmp
cld
aas
cwtd
dec
jge
gs
insl
imul
xor
inc
adcl
int3
mov
jno
lods
int3
js
rorb
push
or
loop
mov
adc
data16
and
aad
test
or
jno
aas
imulb
imul
andl
inc
adc
roll
xchg
mov
fsubr
ja
mov
sbb
test
jmp
or
cltd
or
cli
test
and
pop
shlb
test
dec
lret
scas
add
fmuls
xor
xlat
mov
mov
fwait
clc
or
aaa
ss
sbb
insb
jmp
and
into
jne
jg
movsb
iret
inc
xor
scas
fadds
imul
lock
mov
dec
nop
sbb
jb
xor
leave
pusha
sub
jecxz
stos
popf
std
dec
arpl
lock
sub
mov
movsl
xor
idivb
arpl
rcll
frstor
and
push
dec
xchg
and
in
fisubl
mov
cmc
push
push
xor
cmpsb
add
ja
add
in
pop
sub
outsb
mov
cmp
add
call
push
hlt
dec
mov
movsb
or
adc
shr
nop
loop
loope
dec
jp
pusha
jl
inc
pop
jecxz
mov
addl
push
popf
cmpsl
imul
pop
negl
jp
fldl
vunpcklpd
sbb
lret
jg
movsl
sti
fstl
push
pop
pop
aam
cmpl
dec
mov
cwtl
xlat
stc
mov
jmp
mov
cmpsb
pop
daa
pop
test
lahf
and
xor
and
push
adc
jne
aad
sbb
inc
cld
int3
lcall
sbb
push
push
mov
jmp
nopl
pop
pop
leave
mov
addr16
cmp
and
sbb
jp
insb
xchg
push
lods
loopne
scas
jb
sub
jl
jbe
pop
imul
pop
mov
fcomp
xor
das
dec
scas
jg
and
sbb
pop
add
inc
adc
cmc
pop
int3
das
clc
and
orb
pop
out
repz
jmp
ficoml
test
jb
lahf
lea
scas
jnp
loopne
inc
xlat
pop
out
jecxz
xchg
adc
mov
fistpll
lret
cmpb
and
jbe
jno
sub
xlat
mov
lret
cmp
jle,pn
or
aam
mov
movl
inc
add
add
dec
fdivrp
pop
lods
pop
lods
mov
test
cmp
mov
mov
shl
cmp
push
mov
icebp
or
in
cmc
or
leave
fistl
mov
ficompl
cmp
xchg
dec
movsb
push
fwait
inc
out
xor
aas
aas
cld
xchg
pop
mov
lret
dec
xor
mov
push
ja
int3
or
and
les
xor
loope
mov
xchg
aas
sub
inc
xor
cwtl
fisttps
cld
int3
cmp
jns
push
ljmp
jmp
pop
push
call
jns
xchg
shr
add
xorl
dec
imul
ja
btr
jle
leave
xchg
cld
ret
dec
and
mov
lret
sub
shrb
shlb
add
lcall
in
pop
movb
and
cwtl
sbb
loop
add
scas
or
cmp
push
push
xchg
fldt
or
inc
dec
in
data16
sarb
stos
in
ficoml
inc
inc
or
aad
test
insl
adc
mov
jecxz
ljmp
mov
popf
sbb
push
push
rcrb
xacquire
add
stc
mov
repnz
xor
jns
inc
push
add
ret
addb
sub
faddl
notl
into
mov
lods
inc
jmp
lea
movsb
jo
js
das
mov
sub
repnz
out
sahf
mov
fbstp
cmp
sub
rol
leave
dec
or
dec
jns
jmp
je
cmp
rcrl
sahf
pop
xor
xor
xchg
add
add
lea
dec
mov
fnsave
loop
xchg
xor
dec
sbb
jle
and
pop
ds
inc
cmp
and
out
adc
push
cmp
loopne
sbb
loopne
int3
fists
mov
mov
pop
dec
sahf
sti
mov
push
jecxz
sub
rorb
xor
outsl
idivl
pop
mov
jo
pushf
int
xorb
lret
addr16
shl
decl
adc
jb
pop
xor
cmp
cltd
mov
or
out
dec
lret
push
mov
push
xchg
imul
mov
scas
cld
clc
push
jmp
pop
dec
xchg
sbb
lds
xor
jp
dec
xor
mov
cmpl
or
cmovno
sti
mov
les
fucom
mov
or
add
movsb
imul
or
out
into
xchg
push
test
test
ds
sti
dec
clc
and
and
sub
sub
jmp
push
clc
les
js
adc
in
add
mov
xorl
fstl
pop
push
mov
sbb
ja
inc
and
test
imul
lods
add
mov
mov
lock
mov
dec
je
sub
arpl
insl
mov
fisubrs
cmp
fisttpll
lcall
xchg
iret
orl
dec
jno
std
js
cmp
or
and
loopne
xchg
lea
mull
popa
stos
mov
mov
loope
loopne
sub
into
jge
xchg
inc
inc
pop
outsl
mov
push
movsl
xchg
or
mov
mov
mov
and
call
icebp
cmp
push
cmpsb
push
jl
lods
repnz
xchg
ss
sub
xchg
push
push
fists
mulb
nop
mulb
jp
and
jl
sub
and
pop
push
pop
xchg
push
lret
fbstp
outsb
shrl
les
inc
mov
int3
pop
out
es
arpl
sub
add
jp
sbb
cltd
inc
adc
int3
leave
cli
and
and
inc
jae
call
or
sahf
inc
sbb
lahf
jl
jg
jne
imulb
cmp
aam
sahf
adc
ret
xor
in
xorl
daa
adc
hlt
fs
mov
data16
pop
sarb
xchg
outsl
xor
lds
dec
mov
pushf
and
sbb
mov
stc
inc
mov
mov
cmp
addb
mov
lea
enter
and
outsl
pop
je
les
mov
xor
pop
dec
fdivl
xchg
hlt
sbb
mov
pop
push
jb
dec
xchg
cmp
arpl
xchg
sbb
and
jns
testl
in
lret
jne
ret
add
push
mov
insb
lods
xor
mov
xor
sub
js
dec
dec
pop
jmp
fimull
dec
and
push
cmp
push
jno
je
jmp
sub
sbb
das
stc
push
faddl
and
dec
aad
imul
pop
bound
lret
ja
push
mov
xor
xchg
stc
xchg
inc
stos
mov
xchg
fs
outsl
js
mov
mov
xor
inc
imul
cmp
test
fisubl
lret
adc
sahf
mov
push
cltd
xchg
loopne
sbb
jge
fsts
std
sub
sarb
call
fsubl
je
pop
hlt
insb
repnz
or
sahf
popf
mov
rolb
shll
push
bound
fnstcw
int3
xchg
and
insl
cli
fnstsw
bound
push
jl
mov
mov
cmc
sti
cwtl
shrd
cmp
movsb
shl
dec
jmp
cmp
jo
aaa
and
push
mov
daa
pop
in
pop
outsl
mov
fsubl
inc
pop
js
pop
push
push
jmp
add
insb
add
jno
mov
loope
jl
dec
sub
mov
fdivrl
imul
fadds
ds
add
xchg
sbb
loop
test
int3
inc
xor
outsb
gs
cmc
imul
stc
push
cli
repz
mov
cwtl
and
lock
adc
push
inc
mov
pop
xchg
ss
mov
and
sbb
outsl
or
bound
jb
xor
pushw
frstpm(287
popa
add
add
xchg
repz
mov
testb
in
or
fisttps
mov
imul
jle
add
rcrl
jae
mov
add
inc
in
or
sbb
adc
mov
jb
mov
fwait
jmp
sbb
cwtl
ljmp
stc
cmpsb
ret
mov
push
jl
divb
pusha
lock
and
pop
ds
loopne
shll
mov
imul
imul
mov
idivl
enter
xlat
ljmp
inc
cmp
scas
notb
imul
jmp
lret
jae
aas
in
sub
mov
repnz
jne
and
mov
pushf
dec
pop
xlat
push
cmp
xor
insb
lcall
lcall
stos
test
shrb
lock
pop
add
mov
xor
dec
pop
ret
test
xor
loope
int3
fisttpl
mov
pop
repnz
xor
mov
ja
and
add
push
rorb
cwtl
mov
sbbb
loopne
iret
imul
mov
je
pusha
or
cmpsb
testb
enter
add
stos
popf
lods
lahf
imul
ds
xor
les
das
sub
mov
in
lahf
xor
jnp
scas
fwait
je
mov
cmp
jo
clc
into
ds
and
push
jo
ret
mov
jno
pop
imul
js
movsl
icebp
xchg
div
aad
adc
jb
push
dec
adc
ret
lret
lods
fidivrl
out
sbbl
ret
mov
dec
inc
nop
ss
mov
mov
mov
add
int
test
pop
into
sbb
push
or
in
cs
rclb
inc
adc
or
push
enter
ja
fdivrs
cltd
dec
jle
iret
mov
js
aaa
mov
sbb
adc
filds
sahf
push
mov
xchg
je
jp
stc
xchg
sti
gs
cwtl
and
add
jo
xchg
xchg
stc
cld
fidivs
stc
push
adc
xchg
push
ss
insb
sub
fisubl
outsb
xchg
add
movsb
xor
mov
sbb
jge
cli
xlat
inc
push
daa
cmp
dec
xchg
iret
pusha
pushf
xor
dec
jno
add
dec
clc
rcl
je
test
jne
add
push
xchg
sub
out
jb
sub
lea
jae
and
scas
das
bound
roll
fistl
test
out
jmp
jp
ret
stos
inc
insl
jmp
testb
pop
mov
cltd
adc
inc
jo
adc
add
jo
jns
fimull
aaa
fdiv
mov
pop
data16
out
jb
test
sub
mov
cld
mov
dec
loopne
pop
fistpll
mov
jnp
enter
xor
je
xlat
outsl
dec
adc
aaa
push
stos
add
cmp
push
cmp
pop
mov
xchg
dec
test
test
xchg
hlt
clc
sbb
ss
fs
shll
insl
fidivl
hlt
xor
or
push
popf
and
pop
stos
stos
pop
std
mov
jmp
adc
into
xlat
jp
jp
popa
xchg
add
les
sub
hlt
cmp
sahf
outsl
movsl
inc
and
mov
repz
mov
xor
cmp
inc
sub
imul
in
lret
imul
push
out
ljmp
and
adc
lock
dec
jp
or
inc
sbb
sub
and
jb
stos
dec
xor
rclb
lds
pop
push
mov
insb
addr16
push
xchg
loope
push
push
shll
icebp
sub
out
add
divb
sbb
and
dec
jg
sbb
addr16
aaa
adc
push
or
fimull
inc
cmp
leave
shl
test
test
orl
call
jp
jl
pop
add
roll
push
repz
imul
jo
jbe
ja
lcall
push
icebp
inc
jb
insb
mov
inc
inc
push
hlt
cmp
ljmp
ljmp
or
mov
sub
mov
sbb
mov
movsl
cltd
cwtl
push
ljmpw
mov
mov
bound
sti
jne
insb
mov
pop
int
outsl
mov
push
push
jns
test
sub
dec
adc
ds
xchg
fildl
jb
inc
lcall
loope
xchg
jae
movsl
mov
cli
mov
aad
outsl
in
mov
int3
dec
dec
jmp
xor
xchg
leave
sahf
push
push
and
adc
mov
mov
insb
jge
xor
and
ja
dec
cltd
xor
and
mov
lods
xor
mov
inc
dec
popf
in
add
or
cmp
out
mov
cmp
or
aaa
movsl
sub
idivb
inc
dec
cmp
mov
jmp
inc
mulb
dec
mov
inc
jae
std
fstpt
fisttps
ds
or
in
adc
ret
hlt
sbb
dec
loope
pop
pop
mov
or
jae
pop
lret
or
out
sub
sub
adc
adcl
insl
mov
pop
fisubrl
push
lcall
pusha
jle
loop
xorb
push
jmp
mov
xadd
cmp
fdivp
mov
int3
ficoms
or
pop
mov
test
jnp
push
repz
cmp
cmp
addb
sbb
add
test
xor
pop
mov
mov
das
faddl
cmp
sbb
mov
fistpl
push
je
ljmp
shrl
bound
cmp
lea
inc
mov
mov
inc
into
clc
or
jmp
ficoms
mov
pop
sbb
push
mov
js
test
xchg
pop
push
cmp
adc
inc
in
in
ret
mov
inc
inc
or
rsm
lods
std
mov
in
dec
push
cmp
adc
push
shll
fiaddl
test
imul
pop
xchg
test
pop
fildll
cli
leave
stos
dec
shll
sub
jge
imul
shlb
lret
mov
or
xor
dec
mov
mov
push
call
inc
cmp
sbb
loop
mov
ja
clc
jno
vpcmpeqd
outsl
and
jmp
loop
mov
fcompl
sub
xor
sti
and
and
dec
and
mov
and
inc
in
add
sub
call
mov
and
xor
jmp
xchg
or
add
inc
mov
mov
mov
out
shrl
divl
lret
js
inc
push
out
mov
sbb
test
cltd
pop
mov
or
mov
pop
out
ss
daa
jmp
sub
jb
mov
xor
mov
pop
inc
mov
mov
scas
xor
clc
jne
xor
test
cmpsb
and
test
fwait
mov
ficomps
aad
xor
sbbb
xchg
dec
xchg
inc
fmull
lret
push
pop
imul
jo
add
hlt
mov
pop
jns
mov
sbb
ret
adc
call
fmull
into
js
cmc
andl
not
xchg
sbb
push
cmp
cld
pop
lods
aaa
xorl
jl
scas
pop
pop
or
dec
pop
pop
adc
xchg
shlb
mov
stc
push
push
out
shlb
jge
jmp
jge
imul
xchg
xor
sub
adc
jno
nop
jno
shl
jnp
pop
in
loopne
inc
imul
mov
push
not
inc
addr16
mov
xlat
stc
scas
lret
xchg
test
add
xor
in
lret
adc
cmp
xchg
cmp
mov
insb
outsl
add
out
or
jb
or
pushw
pop
fsubrl
lahf
sahf
gs
lcall
push
adc
es
xchg
sub
or
popf
adc
dec
iret
mov
add
pand
mov
and
sub
imul
inc
pop
lds
push
lods
shl
mov
pushf
jno
and
jno
or
cmp
add
pop
sbb
mov
xlat
stos
shll
xchg
add
jbe
sub
mov
outsl
das
sti
add
stc
cmp
subl
sub
jmp
les
rcrl
xor
inc
aaa
inc
out
imul
lret
pop
jle
out
jmp
xor
notl
repz
call
leave
pop
sub
xor
adc
lret
xor
pushf
or
leave
cmp
fildll
or
sbb
mov
lds
popa
sbb
pusha
dec
push
jp
repnz
lods
dec
jnp
push
jle
sahf
insb
mov
daa
jl
mov
mov
and
xor
cmp
das
out
dec
xchg
jae
mov
cmp
inc
push
ja
xor
cwtl
imul
test
sub
push
sbb
stc
inc
sub
cmp
xchg
xor
out
inc
pop
push
aas
xchg
je
push
jbe
enter
jg
pop
jecxz
fcmovnbe
and
pop
and
stc
pop
push
or
shrl
adc
outsl
ljmp
in
xchg
imul
push
cwtl
rcll
lcall
dec
jns
test
push
nop
sub
xor
dec
sbb
aas
push
mov
xchg
outsl
add
jl
jb
int3
xchg
je
mov
sub
sbb
sbb
out
mov
push
cmpsb
pop
repnz
andb
or
jl
in
movsb
dec
jge
dec
add
aad
bound
cvtpi2ps
gs
cmp
xor
adc
adc
lods
stc
sbb
xchg
repnz
push
ret
jnp
adc
stos
mov
and
fildll
or
push
pop
xor
sub
jnp
jne
push
push
mov
push
mov
pop
mov
sbb
add
aam
add
cmpsb
dec
insl
stos
push
mov
das
mov
xchg
mov
and
push
das
movsb
mov
cmp
dec
mov
mov
hlt
in
dec
xor
xchg
movsl
push
imul
adc
mov
movntq
int
out
sahf
lret
cmpsl
xlat
mov
mov
adc
aad
fucomip
jl
lahf
adc
aad
out
inc
and
xchg
loopne
stos
cltd
or
mov
dec
std
js
popa
xlat
inc
xchg
mov
push
xor
loope
lahf
ret
mov
pop
jno
into
lret
popa
mov
lock
outsb
or
sub
fidivrl
inc
outsl
lods
sbb
dec
xor
arpl
scas
ds
leave
adc
xor
xor
inc
movsl
int3
or
cmpsb
adc
rorb
or
pop
cld
jae
dec
ret
cmp
adc
xor
adc
in
sbb
ret
sub
in
pop
cmp
outsb
mov
cmpsb
mov
or
adc
xchg
inc
gs
dec
fisubl
shrl
dec
loope
add
xchg
pop
dec
add
and
xchg
sub
js
shr
imulb
nop
repnz
add
divb
enter
push
and
mov
mov
insl
xor
pop
push
sub
std
loopne
mov
xchg
or
cmpsb
mov
xchg
je
add
shll
cmp
test
ljmp
push
popf
lret
pop
enter
mov
mov
enter
push
pop
sub
or
inc
mov
mov
rclb
sbb
xchg
stos
out
repnz
dec
bnd
lock
xchg
pusha
pop
fimull
fimuls
out
pop
sbb
cmp
or
dec
inc
xor
mov
sahf
sbb
push
lock
test
fstpt
inc
mov
dec
xchg
bound
aas
bound
test
dec
mov
pop
addr16
push
leave
sti
testb
aad
jno
test
das
inc
mov
or
add
pop
dec
pop
cltd
fwait
adc
pop
out
or
or
dec
jecxz
cmp
fwait
rorb
mov
cld
fwait
bound
dec
test
loop
mov
test
xchg
outsl
dec
addl
sub
test
inc
pop
loopne
jg
mov
mov
call
adc
bound
mov
cli
repz
in
rcll
mov
adc
lea
orl
hlt
jno
fcom
out
push
pop
sti
sbb
bound
jg
les
jns
jmp
roll
call
subb
adc
shr
aam
mov
imul
pop
xchg
cmp
cmpsl
pop
mov
enter
addr16
addr16
imul
pop
aad
popa
fs
mov
mov
inc
addl
xor
jp
jo
nop
xchg
cmc
jle
mov
xchg
jae
add
and
xchg
shll
sub
leave
rcrb
lahf
jno
es
addr16
popf
add
adc
clc
stos
stos
push
pop
ds
sti
push
dec
inc
fcmovnb
stc
fwait
les
inc
or
sub
jg
and
inc
jg
add
addr16
lcall
cmpsb
pop
sub
andl
adc
aam
in
stos
jns
fwait
or
rolb
ret
fldl
xchg
sub
sub
add
dec
stos
cmpsb
fcomip
pushf
enter
mov
les
mov
outsl
ja
movsb
fs
icebp
cwtl
ljmp
sti
inc
aam
sub
popf
lcall
ljmp
inc
add
xchg
imul
testb
push
hlt
ljmp
lret
fldl
in
iret
insb
dec
cmp
int
ljmp
sbb
add
xchg
jno
push
push
pop
insb
add
leave
pusha
pop
clc
out
popl
or
or
lock
mov
sbb
xor
idiv
mov
or
ja
mov
adc
sbb
repnz
frstor
mov
sti
sub
into
mov
addr16
add
addl
inc
mov
mov
jns
ss
dec
and
cmp
stos
jbe
sub
jmp
aas
or
das
lods
in
mov
push
mov
and
pop
ss
xor
shll
push
pop
sub
outsl
sbb
test
iret
fimuls
push
mov
cmp
push
jge
cmp
inc
js
push
cmp
and
mov
orl
enter
jecxz
pop
or
jle
mov
sbb
or
xchg
add
dec
cli
ss
aad
loope
xor
aaa
out
cmp
push
icebp
fadd
sti
mov
mov
push
call
cli
mov
sub
sahf
clc
inc
pusha
mov
aaa
aaa
imul
dec
cmpsb
cmpsb
sar
mov
out
mov
loope
and
nop
sub
cmp
inc
lret
mov
mov
add
repz
fbstp
aad
mov
mov
sti
andb
dec
push
sub
in
nop
xor
pop
dec
mov
pop
jbe
icebp
movsl
aaa
adc
repz
call
push
ret
cld
mulb
sbb
adc
int3
push
xorl
popa
jno
push
jmp
adc
pop
jmp
inc
js
fwait
ja
in
repz
outsb
mov
call
outsb
imulb
jb
sub
cmc
mov
xchg
dec
test
cmc
inc
push
jbe
mov
stc
sahf
ret
xchg
shrl
in
mov
lds
push
cwtl
jne
sti
mov
fs
pop
daa
pusha
loopne
mov
imul
xor
ljmp
sarb
frstpm(287
cmp
or
jno
push
int
fisttpl
movl
dec
mov
cltd
xor
aad
mov
les
sbb
adc
hlt
cwtl
dec
mov
or
notl
rorl
sbb
ds
ja
ljmp
lret
clc
mov
push
loopne
jae
loop
aaa
pop
pop
xchg
mov
movsb
add
dec
aam
bound
shll
pop
xchg
ds
cmp
push
aaa
mov
inc
je
mov
lahf
pop
xchg
inc
icebp
iret
cli
clc
push
stos
js
sub
adc
push
stos
je
dec
loopne
xchg
jp
push
adc
movl
mov
and
pop
into
cmp
test
mov
dec
andb
stos
jbe
push
imul
lret
pusha
test
sbb
lea
add
cmpsl
xchg
pop
pop
dec
lea
aad
out
adc
sub
fstpt
adc
add
cmpsl
outsb
repz
dec
fmuls
mov
ss
cmp
lock
icebp
ljmp
mov
push
cmp
push
mov
cmp
push
xor
mov
add
mov
xlat
adc
cmpxchg
add
mov
iret
jl
test
test
jae
in
mov
dec
sbb
lret
jo
cld
inc
dec
pop
push
jne
ret
adc
and
cmp
xor
dec
loop
and
mov
dec
pop
push
lods
jecxz
jae
pop
mov
or
push
out
cwtl
dec
pop
stc
lea
mov
xor
int
inc
mov
test
call
aam
dec
dec
pop
test
das
fstpl
xor
sub
rcrb
xchg
xchg
ret
dec
add
stos
scas
int3
cmpsl
jnp
lahf
mov
xor
movd
call
mov
jl
pop
call
insl
sub
nop
repnz
leave
mov
lock
inc
das
xor
cmp
ficoml
push
sub
adc
mov
dec
dec
ljmp
insl
pop
pop
ljmp
lods
bound
inc
mov
orl
sahf
push
stos
repnz
icebp
and
imul
pushf
push
iret
or
stos
or
in
mov
mov
pop
fwait
xchg
imul
ret
aas
adcb
mov
nop
mov
shlb
cmp
lea
pop
jnp
adc
xor
je
jbe
cltd
and
mov
mov
and
adc
sahf
cmp
adc
xchg
and
loop
sbb
out
rcrl
fucomp
jge
mov
pop
test
adc
cwtl
cld
jg
and
jecxz
outsl
push
scas
lds
mov
and
cmp
popa
loopne
outsb
arpl
insl
sbb
loope
ss
insl
inc
testb
and
popf
pop
cmc
aad
or
or
je
ss
jae
adcb
or
push
or
ja
push
dec
inc
push
dec
inc
cld
imull
xchg
or
push
cltd
cmp
in
outsl
stos
movsl
jo
adc
cmpsl
jmp
adc
push
mov
dec
sbb
cltd
pop
negb
push
pop
add
or
or
lods
fs
xchg
lcall
xchg
dec
pop
cmpb
jl
mov
inc
xchg
mov
push
icebp
fnsetpm(287
shrl
push
das
imul
ja
mov
shrl
mov
ret
aad
sbb
int
cmpsb
ret
imul
jl
iret
outsb
push
ficoms
xor
roll
cmpl
pop
je
xor
lcall
xchg
test
pop
mov
and
out
addr16
inc
int
data16
clc
and
dec
jp
dec
inc
jg
and
jl
mov
test
xchg
jp
mov
xchg
push
mov
add
rcrl
outsl
push
adc
dec
or
cmpsb
cmp
stos
imul
arpl
fwait
sbb
add
or
pushf
inc
dec
inc
add
mulb
pop
pop
add
xor
jmp
addr16
adc
mov
inc
sbb
lret
xor
iret
repnz
cmpsb
pop
xchg
xchg
mov
aas
nop
fmull
test
pop
mov
cmpsl
dec
cmpsl
mov
pop
aam
sahf
dec
ja
clc
xor
add
inc
scas
or
mov
jl
stos
and
or
sbb
popl
shll
fldcw
nop
idivb
arpl
push
clc
std
pop
fsts
testb
push
or
fwait
jne
arpl
adc
stos
mov
push
out
shr
mov
add
test
out
pop
xor
sub
mov
fwait
sbb
xlat
out
outsl
jp
imul
fucomi
iret
push
xchg
push
inc
adc
scas
add
sub
push
fildll
and
cmc
fldl2e
call
imul
lds
pop
ljmp
sbb
pop
fnstcw
fwait
mov
lea
out
mov
jbe
movsb
xor
add
jle
cmpsb
mov
xbegin
inc
fs
jp
sti
rol
es
push
dec
fbstp
lock
popa
out
push
pop
pop
xchg
add
add
push
ret
into
sub
lea
stos
aas
std
and
sbb
jo
popa
push
mov
xchg
fsts
popa
or
ss
fmulp
shll
xorl
xchg
movb
mov
or
in
adc
ds
mov
jle
mov
lds
rol
or
ret
insl
inc
jle
push
inc
adc
adc
imull
fsts
cmp
push
bound
fdivr
enter
fdivrs
std
popl
xchg
xorl
push
ficompl
add
cmp
pop
inc
jae
test
xor
fildl
push
test
pop
fnstenv
jg
or
imulb
int
lahf
js
xor
in
outsl
xor
ja
push
addb
mov
pop
fdivl
ja
fsubrs
jl
arpl
adc
mov
jnp
mov
jb
mov
inc
mov
jmp
imul
orb
cmpsl
add
pusha
xchg
stc
jp
lret
mov
xor
sub
lea
mov
std
jae
stos
xor
jmp
add
inc
mov
fnsave
xchg
xchg
lahf
nop
cmp
cmp
add
std
add
add
stos
push
int3
pushl
mov
in
sbb
std
std
sar
fistps
movsl
rcr
mov
xchg
loope
insl
in
pusha
cmp
scas
push
cmp
jne
je
out
pop
cli
popa
dec
scas
pushf
xchg
inc
outsb
dec
mov
daa
aam
sbb
fcomi
clts
add
lods
das
pop
push
in
fsts
dec
mov
pop
sbb
push
fwait
lods
sub
pop
mov
push
addr16
pop
xchg
inc
sbb
jno
mov
aam
dec
insl
jge
pop
daa
imul
sbb
into
je
es
js
cmpsb
in
mov
pusha
xchg
lock
dec
mov
xchg
lods
stc
pop
xchg
add
lds
xor
adc
add
stc
sbb
inc
jbe
hlt
mov
jecxz
dec
mov
xchg
dec
mov
pop
mov
cmp
out
lea
ljmp
data16
dec
and
fwait
mulb
xchg
les
adc
or
adc
mov
dec
pushf
dec
mov
cmp
sub
mov
jbe
into
jo
pop
cmpb
stos
ror
scas
fwait
xor
ficoml
push
pop
sbb
fcoml
inc
jecxz
mov
js
andl
lods
pop
jb
and
adc
dec
pop
cmp
loopne
ss
mov
xchg
lret
pop
dec
in
mov
out
ljmp
lds
insb
and
and
sub
sbb
xor
aad
fistl
mov
add
jecxz
jle
cltd
lcall
add
mov
mov
std
cld
xchg
dec
xlat
ja
bound
mov
push
cmpsb
sbb
cld
dec
mov
out
xchg
test
ret
push
outsl
inc
fistpl
inc
ret
jp
lret
sub
pop
xor
inc
les
add
repz
rorb
aad
sahf
outsb
mov
xchg
xchg
arpl
jne
push
cmc
sub
clc
push
scas
fs
shl
cld
adc
pop
mov
enter
sub
scas
cmpsb
stc
xchg
fwait
enter
inc
pushf
and
call
xor
pop
cli
mov
rol
xorb
xor
fdiv
mov
cmp
rorl
sahf
lret
clc
fcoms
jmp
cld
inc
adc
xchg
sahf
fsubrs
sar
enter
clc
push
jmp
stos
xchg
pop
jp
mov
xor
mov
dec
mov
iret
std
jle
repnz
test
andb
test
stos
jae
jle
shl
addr16
sub
jae
movsb
hlt
inc
xchg
or
inc
adc
out
adc
sete
ret
xchg
outsb
mov
ret
xchg
push
insl
mov
movsb
scas
sti
out
pop
pop
js
mov
iret
daa
iret
lods
mov
or
or
and
mov
jp
outsb
jae
mov
outsl
movsl
mov
mov
and
sbb
hlt
push
inc
lahf
jbe
xor
jnp
jnp
lret
stos
enter
inc
repz
insb
adc
mull
sarl
add
imulb
test
test
stos
jl
mov
push
cmp
push
inc
mov
sahf
sahf
inc
or
movsl
pop
xchg
outsl
cmp
test
ret
out
dec
sti
xor
in
xor
addb
stos
ret
arpl
jle
mov
and
push
cmc
push
mov
stc
mov
mov
pop
lret
nop
fisttpl
pop
sbb
clc
out
xlat
out
mov
mov
cmpsl
cmp
leave
and
sbb
mov
lock
pop
add
xchg
int
xor
popf
mov
and
xchg
mov
xor
mov
push
aas
sbb
gs
push
xor
into
inc
cmpsb
or
adc
push
movsb
mov
scas
adc
lods
xor
fcomip
xchg
sbb
jb
mov
mov
xchg
aaa
stos
xor
hlt
pop
outsb
sar
sub
es
out
testb
scas
ret
pop
insl
inc
in
icebp
cmp
stos
lret
and
sub
rol
fldenv
daa
push
ljmp
push
loope
inc
mov
xchg
inc
addr16
in
jmpw
dec
sti
pop
push
mov
add
push
sbb
and
cmp
xchg
cmp
dec
cmp
dec
in
je
sub
jmp
and
inc
leave
ret
mov
test
pop
xchg
xchg
pop
xchg
pop
leave
lock
lcall
add
cmpsl
addr16
sbb
pop
push
js
push
insb
repz
bound
and
cmpsb
cmp
xorb
jae
sbb
xchg
outsb
jmp
mov
cmp
jecxz
inc
cmp
add
mov
jp
pop
mov
ret
jg
das
ja
jl
cmp
jle
sbb
mov
in
mov
out
outsb
cltd
or
ficomps
cwtl
call
test
fwait
sti
push
inc
loopne
push
scas
jo
dec
arpl
pop
mov
xchg
push
daa
leave
loopne
lcall
jmp
flds
dec
ljmp
lahf
inc
lss
xchg
testb
pop
push
and
or
fistl
inc
xor
imul
xchg
push
test
xchg
push
divl
rcrl
out
cmp
adc
sbb
mov
adc
adc
mov
and
sbb
add
daa
fwait
cmp
mov
sub
into
mov
ja
outsl
inc
int3
push
and
and
push
arpl
add
enter
stc
subb
loopne
adc
jbe
jo
idivb
bound
xlat
sbb
lret
jne
push
sub
loope
cltd
js
xchg
lret
sub
mov
jmp
lahf
fwait
leave
loope
cld
divb
rcl
xlat
pop
adc
pop
int
insb
adc
jnp
js
xchg
push
mov
repz
rclb
jmp
xor
xor
out
scas
iret
fmulp
mov
sbb
in
sub
adcl
ja
out
pop
dec
pop
dec
lds
cwtl
push
xor
push
xchg
sbb
sub
cmp
lea
addr16
andl
push
inc
dec
mov
cmpsl
add
aad
sbb
nop
sbb
rol
into
jnp
pop
dec
add
mov
stc
ja
cmp
addb
pop
inc
imul
mov
pop
ret
repz
shll
pusha
bound
popa
pop
cmp
ds
or
push
sub
xor
or
pop
pop
sub
jo
mov
jne
mov
sarb
push
and
xor
rolb
cmpsl
inc
pusha
sub
add
and
xor
push
add
pop
les
pushf
addl
sbb
dec
out
inc
fimuls
xchg
in
push
pop
outsb
or
jl
mov
inc
dec
rolb
inc
aas
call
cmc
xchg
outsb
dec
loope
loopne
jno
fstpt
dec
sbb
xchg
and
ret
pop
jg
sub
dec
mov
jns
icebp
imul
fs
scas
sub
ss
push
add
shrb
outsl
mov
add
pusha
jmp
jp
push
cmp
jge
mov
xlat
add
sub
mov
aam
arpl
in
xor
dec
popf
insb
pop
cltd
movsb
movsb
clc
daa
lods
add
xchg
popf
and
out
jo
mov
jg
mov
mov
sahf
xor
dec
mov
sbb
inc
test
sbb
ds
or
mov
inc
xor
rep
pop
inc
inc
dec
pop
insb
fmuls
les
or
aam
xor
aam
mov
test
mov
stc
inc
jnp
rorl
dec
in
dec
sbb
popf
out
mov
ret
sbb
fwait
pop
jecxz
les
dec
add
outsl
cmc
dec
scas
lahf
mov
not
int3
icebp
shr
push
jne
cli
lods
daa
movsl
scas
adc
dec
fucomi
in
dec
in
std
icebp
push
in
pusha
xchg
dec
pop
jae
mov
adc
nop/reserved
mov
ss
aam
and
push
fildl
je
pop
and
out
and
mov
cmpsb
mov
or
sti
rol
lock
dec
xlat
push
push
mov
push
lds
dec
jbe
push
in
out
inc
dec
outsl
mov
push
stos
lret
inc
leave
or
dec
in
and
pop
dec
sbb
mov
jno
ret
loope
stos
fwait
hlt
mov
sub
pop
sarb
std
sarb
inc
lods
icebp
pop
jnp
mov
lret
mov
and
stc
lods
inc
leave
pop
negl
pop
out
outsl
lcall
ds
repz
inc
out
sub
sub
cld
jo
push
lods
lock
push
scas
mov
push
dec
dec
loopne
jp
or
jne
or
mov
push
adc
inc
or
cmp
les
cmp
mov
sbb
sbb
sti
cld
icebp
mov
inc
sbb
jge
out
orb
cwtl
mov
lcall
rorb
in
call
fst
adc
push
mov
push
test
dec
sub
mov
xor
scas
gs
xlat
cmp
mov
xor
mov
push
mov
ss
ss
xchg
sub
cmp
out
stc
fldln2
fbstp
jo
xchg
cmp
add
and
push
idivb
lcall
sarb
pop
js
shll
xor
sub
sti
sar
shll
les
xor
pop
mov
inc
ds
ljmp
sti
enter
xor
or
sti
push
loope
aaa
cmpsb
les
movsl
push
cmc
add
add
cmc
sub
je
into
ja
call
mov
and
pushf
cmp
iret
sbb
add
mov
cltd
pushf
push
lods
fstpt
dec
xorb
jno
cmp
ret
cmpsl
push
push
mov
jo
push
xchg
pop
jecxz
mov
fiadds
xchg
sub
xor
mov
mov
je
test
sub
data16
jl
popf
mov
sbb
xor
lods
pushf
jns
sbb
and
test
adc
test
xchg
cmp
outsb
hlt
lods
or
hlt
or
rcrl
test
cwtl
aam
dec
fstl
push
ja
loope
js
mov
insb
loope
xchg
jne
inc
cltd
sub
data16
test
xor
mov
mov
insb
jnp
sti
xor
dec
and
mov
xlat
adc
xchg
gs
movsb
xor
std
and
adc
inc
out
lea
xor
loop
sbb
jmp
lret
std
pushf
int3
loop
jl
mov
dec
xlat
push
inc
sbb
jno
das
adc
sbb
dec
sahf
pop
fldenv
or
fsubrl
add
mov
sti
pop
imul
sub
inc
sub
imulb
fldl
cmc
mov
cmpsl
xlat
xor
xor
cli
cmp
jmp
frstor
pusha
add
je
pushf
bnd
inc
shll
and
mov
nop
ljmp
cmp
imul
and
hlt
inc
std
adc
das
dec
lcall
rclb
repz
aas
xlat
and
pushf
subl
or
push
sbb
stos
sub
ret
push
inc
loope
add
movsb
dec
add
int3
test
aas
subb
cmp
jp
xchg
stos
sbb
clc
cltd
js
pop
push
add
mov
mov
lea
scas
insb
pop
orl
dec
adc
xchg
mov
jmp
mov
addr16
mov
popa
sub
mov
add
cmp
mov
pushf
lcall
negl
ljmp
mov
push
mull
add
fmul
push
add
dec
adc
push
jb
sar
lcall
jno
mov
adc
loop
pop
pop
andb
repnz
pop
lret
fdivrp
push
test
jb
shrl
and
cmpl
mov
sub
inc
lods
jge
and
pop
mov
sti
notl
gs
cwtl
xor
mov
lcall
rcll
mov
out
iret
mov
pusha
and
adc
add
add
jo
lret
ret
sbb
add
repnz
sub
cmp
and
cld
ret
popa
push
inc
or
or
and
cmp
leave
jns
push
jp
push
sbb
insb
pop
lods
in
mov
daa
jp
inc
outsb
sbb
cmpb
adc
fcomp
shll
iret
outsb
aam
xchg
xlat
sbb
sar
inc
bound
sub
pop
xchg
mov
loope
aam
fimuls
sbb
sub
ja
or
stc
xor
cmc
xchg
push
adc
add
cmp
xchg
rcrl
sub
shlb
jmp
clc
out
arpl
mov
lret
jmp
xchg
enter
lret
pop
lea
outsb
mov
scas
mov
mov
das
hlt
fsubl
add
xor
push
push
repnz
inc
jo
adc
cmp
and
jns
lahf
cltd
add
mov
sahf
inc
pop
lock
or
out
mov
jns
call
insb
pushl
jno
inc
jns
movsl
xchg
add
adc
neg
movsl
sub
sar
fsubs
in
fimuls
movhps
outsb
enter
subb
and
jmp
cmpsl
fwait
push
dec
xor
incl
xchg
fadds
cli
xlat
fs
mov
jnp
loop
and
push
sub
cwtl
or
cmpsl
push
das
mov
lahf
pushf
repnz
ja
scas
xchg
jae
jl
mov
rcrb
mov
push
pushf
nop
mov
sub
adc
addr16
jl
sbb
push
sub
scas
pop
aaa
or
movsl
dec
addr16
mov
loopne
fs
mov
scas
and
push
and
jecxz
call
xchg
lods
sbb
sub
pushf
je
pop
or
xchg
leave
and
aad
add
lods
in
mov
adc
out
sbbl
popa
mov
dec
lea
das
lret
and
into
mov
dec
inc
test
mov
sbb
mov
add
dec
sti
pop
inc
pop
sbb
adc
cmp
or
cmpsb
jl
mov
dec
fwait
dec
xchg
jnp
rcrl
mov
int
mov
testb
das
scas
popa
imul
les
in
in
cs
xor
das
fwait
neg
call
js
aas
out
aas
xchg
roll
int
test
outsl
test
lds
scas
jecxz,pt
push
and
scas
adc
dec
cltd
mov
outsl
xchg
cltd
lods
mov
jp
cli
sahf
fs
inc
add
mov
cmpsl
clc
rcrl
iret
loopne
mov
adc
push
shll
ja
or
mov
aas
adc
shlb
and
addr16
push
and
push
mov
cmp
lods
ljmp
jge
test
in
and
inc
fsub
push
push
ja
mov
leave
and
insl
cli
int
iret
adc
pop
ljmp
sbb
adc
test
xchg
pop
jo
push
inc
stc
loopne
add
popa
xor
mov
push
mov
adc
pop
jle
movb
mov
insl
and
push
push
pop
or
cmpsb
aad
sbb
jl
mov
jge
test
movl
mov
mov
lcall
cmp
cmpsb
nop
jns
aas
xchg
push
pusha
mov
ror
push
pop
mov
mov
addl
push
or
cmp
ja
fisubrs
sbb
jo
add
inc
dec
test
jb
fs
fdivs
xlat
mov
mov
lock
push
dec
lock
repnz
lods
fmull
pop
xchg
addr16
fisttps
loope
fwait
xchg
xor
cld
dec
loope
pop
push
sahf
lcall
add
lods
mov
gs
push
flds
imul
pop
insl
ss
in
shl
ljmp
sub
mov
mov
mov
test
xlat
loopne
mov
sahf
cmp
jno
out
sbb
das
inc
pop
or
mov
push
mov
jg
pop
rorl
mov
and
jne
xchg
sbb
dec
mov
sbb
std
mov
icebp
mov
and
xor
pop
test
xor
lret
fucom
cmc
jb
pop
ljmp
