push
call
ret
ret
aad
mov
jae
jmp
into
or
sti
lea
or
or
jecxz
daa
fists
aaa
and
or
xchg
mov
sbb
mov
pop
sbbb
mov
add
rclb
test
mov
jg
test
roll
jmp
add
data16
adc
lods
into
jno
clc
loop,pn
loope
push
cmp
and
jns
mov
add
cmp
fisttpl
lret
inc
insl
imul
mov
inc
push
fsubrs
or
dec
test
movsl
mov
scas
iret
iret
xor
fildll
loope
ljmp
add
or
sbb
mov
rclb
das
cmp
xchg
cmp
roll
out
jcxz
call
push
shrl
jnp
xchg
jo
or
ficompl
jns
push
imul
dec
push
cmp
daa
and
mov
leave
lock
jmp
pushf
aad
mov
out
mov
ret
xlat
daa
adc
ror
aad
je
add
jl
out
cs
jbe
jo
xchg
xchg
inc
aad
or
test
and
cwtl
jbe
or
mov
jo
insl
aam
mov
ljmp
or
mov
jge
cmp
mov
cmp
push
or
mov
push
pop
mov
sti
push
xor
xlat
lcall
cmpsb
pop
dec
aad
push
cwtl
cmp
ds
inc
test
lock
jmp
or
pop
adc
mov
mov
sbb
cmp
pop
inc
ja
mov
rcll
pop
pop
xor
adc
pop
ljmp
decl
test
and
sbb
fucomp
pop
xor
xchg
insl
jns
insb
xchg
test
mov
xor
std
mov
cmpsl
pusha
pop
out
mov
dec
and
sub
insb
movsl
cmp
inc
out
sub
test
push
adc
andb
xor
lock
cmp
daa
mov
mov
mov
lods
push
jp
aad
xor
gs
or
mov
lahf
dec
mov
shlb
or
or
ljmp
psubb
loop
enter
and
sti
ja
sbb
hlt
mov
cmpsl
out
and
fnstenv
add
imul
dec
les
nop
mov
call
adc
jmp
data16
mov
bound
xchg
xchg
mov
in
jo
mov
dec
iret
mov
cli
jb
out
test
jo
mov
sbb
in
jmp
adc
jp
fdivrl
sub
pushf
push
nop
lea
aad
sbb
push
int3
adc
sahf
push
jg
ja
sahf
cmpsb
push
imul
pushf
lcall
mulb
popa
push
xchg
mov
movsl
out
sbbl
pusha
test
icebp
xchg
or
add
aas
pop
rclb
int3
das
jb
fs
mov
pusha
adc
mov
sbb
mov
xchg
pop
xchg
aam
and
or
in
jl
jns
push
mov
push
push
xchg
filds
insb
int3
stos
fcmove
sahf
sti
iretw
push
or
rclb
mov
loopne
lock
test
push
mov
push
test
sub
xchg
adc
test
lods
cld
add
adc
in
outsl
loop
add
xchg
inc
shll
push
mov
jnp
loopne
fldcw
jle
pushf
push
fstpt
or
add
or
lcall
sbb
mov
addr16
dec
add
add
int3
dec
jmp
push
mov
inc
divb
xchg
mov
push
xor
pop
dec
out
jnp
xchg
inc
je
ret
xchg
xchg
rorl
clc
mov
incb
cvtpi2ps
fldenv
mov
out
lock
fcmovne
mov
pusha
inc
dec
or
push
adc
or
sbb
movsl
or
sbb
lahf
mov
cmp
xchg
adc
test
fimull
jno
bound
and
sub
mov
mov
and
and
push
fwait
mov
jnp
lods
adcl
mov
enter
lahf
fst
out
call
jne
sbb
pop
pop
cmp
into
xor
aad
cmp
data16
sahf
xor
movsb
ljmp
bound
mov
dec
or
orl
cmpsl
test
daa
cmp
or
rcrb
aad
shrb
xchg
lock
cmc
push
jl
iret
sub
imul
ret
sahf
mov
jl
jle
push
fcompl
xchg
test
mov
ss
popf
insb
int3
cmp
push
repnz
jne
xor
es
xor
fs
jo
mov
shlb
mov
cld
insl
loope
js
push
aas
test
inc
lcall
push
test
pop
mov
mov
dec
lret
test
cltd
dec
pop
outsb
add
lcall
push
loop
mov
lods
mov
imul
aaa
rcrl
dec
xchg
pop
xchg
lds
bt
cmpsl
xor
push
enter
nop
push
jmp
cmpsl
or
les
mov
lret
dec
jl
xchg
push
push
mov
dec
cwtl
cmpsb
lret
push
mov
dec
adc
iret
jns
adc
or
jg
xlat
mov
lea
ss
and
push
and
in
mov
int
loop
inc
cwtl
fisubrl
add
fistpll
pop
sub
xchg
fdivrl
lock
js
lods
dec
mov
pop
or
dec
dec
adc
sub
push
cmp
ljmp
adc
dec
and
iret
mov
aad
scas
push
mov
aaa
inc
push
fisubs
les
xlat
dec
mov
sub
and
js
sub
pop
popf
data16
popf
out
xchg
pop
pushf
int3
bound
push
nopl
inc
cmc
pop
push
push
ja
jle
jae
lret
movsb
push
pushf
xchg
mov
stos
outsb
in
test
add
mulb
in
ljmp
cmpsl
les
lods
mov
dec
mov
mov
call
lcall
cwtl
and
sbb
jno
frstor
mov
or
adc
xchg
pusha
xchg
dec
cmp
mov
ja
ss
jns
xchg
jge
adc
push
or
int3
mov
xchg
jo
push
lods
iret
cli
and
mov
xor
addb
xchg
jns
iret
or
cmp
or
jno
ja
add
dec
loop
sbb
fistl
scas
cmp
das
push
mov
call
aaa
push
push
add
lret
loope
in
and
mov
shrb
pop
ss
sti
xchg
inc
fs
jg
gs
pop
ja
fistpl
xchg
push
mov
push
cwtl
loopne
das
out
cmc
aas
mov
jns
imul
or
mov
push
cmp
test
aad
notl
add
pop
or
xor
mov
jge
mov
xchg
test
adc
daa
call
test
mov
and
mov
xor
mov
sbb
nop
or
enter
cwtl
xchg
mov
pop
notl
mov
dec
stos
movl
xor
jae
les
xor
shl
push
sbb
ds
clc
sub
jno,pn
add
cld
xlat
psraw
sbb
les
dec
hlt
popf
lahf
inc
xor
cmp
rol
cmpsl
roll
dec
sub
fisttpll
inc
jmp
mov
sbb
or
aas
jbe
div
push
xlat
jle
ret
aam
lea
add
xchg
pusha
jl
lock
mov
popf
dec
fists
lcall
sub
xor
sbb
gs
pop
xor
xlat
inc
and
or
pop
add
jb
lahf
adcb
mov
rcll
enter
pop
cmpsb
xchg
xchg
fidivl
mov
dec
insb
orl
js
fxch
push
dec
xlat
sbb
sbb
outsl
leave
iret
pop
stc
les
xchg
sbb
dec
pop
int
call
mov
inc
lret
hlt
dec
mov
pop
push
xor
in
adc
mov
frstor
rcrl
add
mov
insl
dec
sarb
xor
add
movsb
cmp
xchg
enter
push
sbb
dec
int
add
aaa
mov
mov
mov
xor
dec
xor
adc
or
daa
fwait
mov
stc
xor
xorb
add
ds
rorl
in
inc
pop
dec
repnz
int
je
rclb
sbb
fsubs
inc
test
movb
add
test
stc
mov
xor
xchg
repnz
pusha
xchg
sbb
rcrb
mov
dec
push
push
aas
test
xor
mov
addl
shrb
pop
pop
outsb
movsb
nop
jecxz
in
adc
mov
push
inc
push
inc
or
or
cwtl
movsb
sahf
test
and
daa
dec
mov
pop
lcall
xchg
mov
ret
sub
add
out
call
jecxz
leave
inc
push
movsb
call
jae
inc
leave
add
jl
mov
and
rcrl
shll
xchg
pop
cmp
lcall
addl
je
xchg
pop
adc
imul
in
insl
xor
sub
inc
xchg
cmp
jl
jge
imul
popf
sbb
out
bound
pop
ja
push
cmp
lret
add
addb
adc
es
mov
mov
in
fcompl
in
push
push
lods
fcomps
rcll
pop
shrl
into
daa
in
mov
push
sahf
jl
fcomi
aas
test
and
pop
mov
cmp
lods
sub
pop
xchg
xlat
jb
mov
pop
jl
jnp
pop
push
xchg
sbb
int
inc
shl
cmp
xchg
pop
in
cmp
add
cmp
mov
mov
call
mov
push
imul
xchg
or
xchg
fcoml
insb
jnp
call
cmp
jle
sub
cmp
jnp
popa
test
repnz
mov
push
add
ret
fbld
push
pushf
shlb
data16
test
push
std
and
rorb
lret
xchg
push
js
mov
into
push
xchg
mov
adcb
popf
mov
and
mov
ds
rcrl
xlat
es
pusha
shll
add
fsubrl
enter
fstps
push
aaa
cltd
sub
and
cli
std
push
sub
loop
or
jl
pop
fimuls
adc
shlb
fbstp
sbbl
cld
fldl
inc
int
adc
lods
jb
pop
insl
ss
enter
adc
sbb
sahf
test
and
fistpll
mov
scas
mov
push
insb
add
fwait
jle
scas
xor
adc
sti
pop
mov
inc
lret
pushf
outsb
pop
jb
add
or
add
addr16
fsubrs
and
xor
jno
xchg
ds
push
insb
ret
into
fs
scas
aam
sub
mov
pop
mov
jge
out
add
dec
xchg
mov
loope
nop
xchg
imul
pusha
in
std
pop
mov
pop
jmp
inc
mov
xchg
xchg
rcr
mov
shrb
popf
ret
fs
das
fisttpl
out
xrelease
mov
jmp
enter
mov
cltd
sub
inc
fnstenv
ret
enter
adcb
jb
and
mov
insl
xor
and
dec
clc
xchg
sbb
xchg
cmc
mov
aas
jl
dec
pop
sub
outsb
and
insl
lds
ds
call
or
shrb
mov
mov
inc
iret
dec
imul
adc
repnz
adc
and
jmp
push
repnz
arpl
addr16
mov
in
or
pop
mov
jb
xor
adc
mov
inc
mov
sub
mov
leave
sbb
into
jmp
add
shl
rorl
int
mov
test
jmp
pop
mov
xor
cs
out
inc
icebp
stos
movsl
out
pushf
test
pusha
in
rorb
out
mov
dec
push
mov
je
decl
pop
jl
insb
and
and
inc
enter
lret
inc
hlt
mov
or
xchg
mov
inc
scas
rcr
sahf
sbb
inc
xchg
xchg
jge
lcall
sub
popa
lods
pop
xchg
inc
outsb
addb
pop
leave
out
icebp
out
ret
xchg
jl
mov
push
mov
and
mov
sahf
fcomps
inc
pop
repnz
inc
jns
push
arpl
dec
xor
push
dec
jnp
push
sti
out
xor
gs
jnp
and
int
shlb
mov
or
mov
inc
addr16
jae
rorl
fstpt
ds
xchg
aaa
sbb
mov
xlat
or
jle
cld
nop
cmpsb
sbb
mov
out
xchg
stos
dec
cli
dec
pop
outsb
addb
fnstsw
xor
xor
jo
adc
adc
fidivl
std
lret
andnps
xchg
lds
imul
mov
pop
test
xor
sub
push
icebp
mov
dec
inc
xlat
sbb
mov
inc
inc
pop
aaa
pop
mov
add
adc
xor
je
push
enter
inc
mov
dec
int3
pop
movb
into
jl
jns
sub
adc
fimuls
mov
outsb
mov
xor
sarb
dec
fisttpll
ret
add
sub
lret
incl
aas
mov
ds
test
fs
push
ret
and
add
push
pmullw
add
cwtl
push
lahf
jbe
jg
xchg
dec
loop
sub
in
mov
les
jecxz
add
shlb
mov
lret
jb
fiaddl
push
mov
inc
std
mov
idiv
mov
out
cwtl
repnz
or
sbb
jp
jnp
fiaddl
xor
cmp
mov
mov
nop
rorb
cld
imulb
std
fbld
xchg
stos
push
fsubl
rorb
inc
xchg
mov
and
jbe
fcompl
iret
mov
push
sub
xor
cmp
pop
call
ljmp
and
or
sub
sub
inc
aas
fwait
xchg
mov
out
push
adcb
inc
movsl
push
xor
adc
clc
or
pop
aam
cltd
sbb
push
mov
push
in
mov
movsl
add
stos
xchg
gs
mov
test
dec
lods
jle
dec
or
push
cwtl
idivb
lea
dec
mov
cs
in
in
std
and
outsb
or
test
cltd
jbe
mov
inc
jnp
sub
lcall
jns
clc
xor
stos
push
pop
loopne
sahf
mov
or
add
adc
mov
mov
xor
jb
pusha
pop
inc
xor
imul
nop
sahf
loop
call
insl
jo
rolb
out
adc
and
pop
or
divb
mov
mov
je
aam
mov
jg
push
mov
loop
xchg
pop
mov
jmp
aas
push
test
mov
mov
ljmp
add
mov
ret
ljmp
and
lret
jne
mov
shl
inc
jnp
xchg
arpl
mov
shlb
sbb
dec
xor
imul
gs
aaa
xor
insb
js
mov
or
enter
push
jno
adc
pop
push
les
jae
sbb
cwtl
pushf
push
ljmp
pop
scas
stc
into
dec
and
rcrl
push
jecxz
sahf
shrb
shrl
cmc
dec
cmp
mov
mov
stos
out
mov
sub
repnz
cmpsl
decb
jmp
shrl
and
jl
pop
shll
pop
aam
add
and
ficoms
pop
mov
xchg
roll
fldenv
cmp
xor
push
loope
fcomps
call
jg
sub
pop
mov
xor
mov
fcmove
repnz
mov
sti
and
adc
xor
insb
imul
jb
xchg
and
movl
or
mov
std
and
jnp
adc
pop
xchg
cmc
shlb
adcb
clc
loop
jo
ret
lock
popa
lods
jl
and
dec
jns
jbe
ret
je
das
popf
outsb
lods
popf
mov
insb
sbbl
mov
ljmp
sbb
mov
push
add
jae
push
xchg
aad
add
push
pop
pusha
sub
dec
sbb
inc
push
xchg
test
push
loope
fs
dec
push
loope
repz
add
pop
enter
mov
movsb
jle
pop
lods
arpl
push
in
add
jmp
push
mov
in
insl
ficoml
ljmp
dec
std
ljmp
mov
imul
iret
sub
orl
test
scas
ljmp
jp
loope
insb
iret
sub
adcb
jbe
cmpsb
in
lea
sbb
cwtl
adc
jle
popl
adc
push
loop
fwait
jecxz
nop
push
push
es
ret
sub
loopne
inc
repz
ficomps
mov
cmp
pop
stos
out
inc
xchg
repz
push
xor
sub
aaa
ss
xchg
cli
mov
cmp
fsubrl
test
outsb
cwtl
pusha
adc
sti
sarb
pop
xchg
mov
clc
pop
dec
arpl
fwait
or
inc
imul
dec
sbb
lret
fadd
add
pop
lahf
pop
int
adc
fildll
bound
cmp
dec
mov
dec
stc
imul
addl
lret
inc
call
jmp
mov
mov
cld
cmpb
sbb
dec
mov
test
or
out
cwtl
pop
ror
push
fstl
lret
stos
mov
pop
push
pop
daa
mov
sub
adc
enterw
hlt
xchg
sub
test
push
scas
fwait
mov
call
mov
js
xor
mov
push
push
sahf
movsl
xchg
inc
decb
rorb
inc
push
push
add
shrb
jns
inc
adcb
jge
push
sahf
inc
pop
in
add
xchg
sahf
fmull
mov
jmp
push
stos
cmp
scas
aaa
xchg
adc
inc
sbb
xchg
pusha
test
popa
jns
mov
push
sbb
cmpsl
jb
jno
int3
mov
stos
jne
xor
and
xor
and
adc
je
pop
and
cli
in
in
jp
and
nop
mov
mov
push
mov
mov
pop
inc
stos
xor
dec
rol
fs
pusha
inc
hlt
inc
mov
std
inc
stc
mov
pop
test
loop
add
scas
dec
xchg
push
inc
mov
movsl
dec
mov
xor
and
loopne
inc
add
pop
repz
add
cld
out
mov
push
add
cmpsl
loop
cmpsl
pop
xor
call
cmc
xchg
int3
and
mov
stos
mov
sbb
cmp
mov
add
sub
mov
ret
std
enter
insb
sbb
popf
mov
push
push
inc
mov
nop
nop
push
pop
pop
orb
push
test
dec
movsb
ds
adc
repz
lds
movsb
inc
insl
pop
inc
insl
pop
adc
cmp
xchg
lods
xlat
bound
mov
outsl
xor
fdivl
ds
sbbl
aad
pusha
cwtl
and
jnp
push
pop
lret
out
aaa
int
and
mov
cltd
std
mov
call
add
xchg
push
daa
sbb
adc
mov
xor
int
push
test
imul
js
leave
cmc
adc
jo
adc
popl
xor
faddp
dec
icebp
sbb
mov
jp
enter
int
sub
rcr
sbb
sub
stos
pop
or
and
jns
mov
inc
add
clc
insl
pop
popa
cmp
cmpsl
adc
mov
mov
mov
push
rol
xchg
mov
xlat
imul
ljmp
lods
sub
jmp
lea
sub
iret
nopl
dec
es
insl
inc
dec
aad
decb
jbe
cmp
divb
or
sti
nop
pop
dec
aaa
or
add
movsl
pop
cli
iret
xor
es
xchg
test
call
xor
sahf
mov
sti
jnp
jp
leave
mov
adc
mov
lcall
or
mov
pusha
jge
es
ret
add
xchg
adc
jo
aam
mov
mov
scas
jmp
imul
ja
call
xor
roll
fcomps
cltd
movb
clc
xor
mov
out
test
push
mov
xchg
dec
push
adc
fs
cmp
sbb
in
mov
and
mov
jmp
ret
int3
cld
xlat
mov
pop
mov
jle
icebp
xor
icebp
fmull
gs
jo
push
and
outsb
sbb
mov
add
cs
decl
sub
xor
lret
mov
mov
sti
xlat
enter
and
dec
arpl
or
ja
fistpl
push
sti
gs
cmpsl
leave
ret
mov
clc
add
call
rorl
sahf
rorl
jecxz
add
fstl
fnsave
sbb
jo
adc
dec
lahf
mov
stc
fbld
add
sbb
or
lret
divb
hlt
insb
mov
xchg
cmp
data16
xor
mov
xchg
out
pop
mov
xor
jmp
dec
mov
adc
inc
ljmp
daa
mov
and
das
icebp
mov
out
repz
js
repnz
xchg
dec
dec
ret
stc
shrb
fucomp
and
mov
mov
cltd
xor
movsb
inc
pop
test
stos
jmp
scas
aad
jno
mov
pusha
aam
adc
cmp
mov
fwait
add
fwait
mov
insl
xchg
mov
mov
jno
inc
ja
push
cmp
leave
mov
stos
push
loop
xlat
test
scas
adc
cmp
cmpsb
punpcklbw
outsl
scas
out
push
and
arpl
lcall
and
cs
or
test
ror
in
and
cmpsb
jmpw
sahf
adc
mov
push
jbe
cld
ret
dec
sbb
push
call
daa
stc
sbb
cmp
pop
xchg
insb
ljmp
popa
jne
call
jmp
ficoms
mov
sub
and
pop
insb
xchg
neg
xchg
pop
movsl
pop
mov
sarb
divb
les
fistpll
lret
popf
rcll
out
test
cmp
fadd
mov
mov
and
inc
sbb
test
push
xchg
and
sub
dec
mov
ret
adc
movl
mov
sahf
xchg
push
daa
adc
mov
fists
adc
fisubs
cmp
mov
add
adc
scas
xor
cld
pop
ret
mov
ljmp
add
xchg
rorb
pop
std
aaa
xor
pop
aas
loopne
fsubl
jno
push
push
push
outsl
repz
push
cmpsl
xchg
or
stos
mov
pop
mov
sbb
repnz
repnz
pushf
pop
xorb
out
cld
test
insb
lea
adc
push
gs
add
aaa
loopne
xor
push
je
repnz
push
andb
leave
testb
xchg
int
jae
lea
and
test
aas
add
dec
adc
push
iret
jp
fucom
mov
cli
add
mov
pushf
je
mov
cmp
jne
orb
dec
mov
aam
cwtl
xor
rcll
or
or
testb
xchg
push
cmp
push
into
xchg
adc
aaa
sti
lret
cli
or
ja
jle
mov
push
mov
lea
nopl
jo
loopne
mov
shrl
daa
push
lret
sbb
inc
xchg
jnp
ljmp
cmpsl
adc
sbb
inc
rcll
xor
out
imul
push
cmp
sub
push
out
ljmp
scas
hlt
movsl
lods
hlt
sbbb
pop
jne
or
iret
jne
cs
je
outsl
aam
dec
pop
inc
jecxz
pushf
scas
cld
inc
sub
movb
pop
mov
push
pop
push
jne
mov
pop
in
int
test
fcompl
and
pop
sub
push
lret
sti
jg
scas
dec
out
pusha
das
mov
neg
xchg
fwait
movsl
add
ret
xchg
in
popaw
add
data16
lods
sbb
jno
or
imul
sub
pop
and
mov
movsl
sub
pushf
adc
in
aad
add
dec
mov
outsb
xor
mov
pop
lret
les
das
lods
xor
cmp
mov
les
push
je
sahf
in
cmp
mov
dec
movsl
and
sub
xchg
dec
inc
cmp
pop
push
fisubl
or
loop
cltd
outsl
adc
dec
push
xor
xchg
ficoms
dec
lock
idivl
fstl
sarl
mov
jbe
jge
add
xor
das
xchg
add
xchg
aaa
mov
aaa
pop
wbinvd
fcmovb
repz
or
mov
shlb
es
enter
mov
mov
pop
shlb
jge
dec
inc
sub
mov
adc
sbb
jp
and
push
add
add
int
cltd
sub
cmpsb
mov
subb
adc
mov
xchg
add
out
mov
cs
lods
fldl
mov
jo
movb
inc
mov
and
into
popf
jmp
arpl
aas
pop
das
pop
fs
test
pop
cli
into
dec
jne
adc
push
add
ret
andb
dec
je
jbe
out
pop
movsl
lock
lret
js
cmp
into
fcompl
jecxz
in
cmp
rcr
sub
push
dec
mov
cli
mov
inc
pop
fsub
or
xchg
data16
lods
subl
add
dec
jp
or
scas
xor
mov
xor
ja
xchg
inc
jo
out
pop
das
cmpsb
cld
stc
shl
popf
scas
jge
inc
add
add
add
cmc
inc
mov
sub
imul
xchg
add
mov
out
push
and
cmp
imul
pslld
inc
xchg
leave
sub
decb
lcall
sbb
enter
mov
jnp
movsl
aaa
inc
enter
call
jno
cs
into
mov
lods
push
mov
rcl
sbb
insl
or
ds
pop
mov
lock
popf
push
adc
add
bound
mov
dec
mov
xchg
xchg
xchg
or
lret
sbb
xchg
jbe
jo
ret
add
in
test
sub
lods
dec
ret
int
xor
push
and
lret
stc
in
addr16
mov
pop
fstpl
add
mov
inc
jne
movsl
pop
stos
ss
mov
push
stc
xor
add
cltd
mov
and
or
retw
jg
daa
imul
pop
sub
mov
cmp
mov
lock
mov
jecxz
jecxz
syscall
push
cmpsb
scas
xchg
jecxz
loope
mov
sbb
inc
cli
sbb
add
ss
fimull
push
xchg
push
dec
or
lods
cmp
stos
loopne
cmp
push
sbb
push
test
jo
or
xor
in
lret
mov
and
fiaddl
gs
jo
jne
hlt
cltd
jno
jmp
or
or
or
dec
add
push
fldcw
out
mov
sub
mov
xchg
and
stos
enter
cs
inc
push
ret
jne
hlt
cmp
inc
aaa
dec
cltd
repz
out
adc
inc
cmpsl
push
mov
ret
push
dec
rorb
lods
push
mov
dec
iret
clc
into
loop
push
shll
shrl
adc
ret
das
jecxz
stos
xor
pop
jle
nop
mov
sbb
bound
and
in
cli
in
xchg
jecxz
cltd
sbb
pop
mov
push
and
idivl
mov
mov
dec
sbbl
mov
mov
inc
stc
js
fisubrl
cmp
pop
inc
subb
mov
shrb
or
rorb
std
cld
paddb
and
ficomps
je
and
jbe
cs
in
mov
popa
push
add
push
movsb
inc
fsubr
cmp
cmc
lods
xchg
cmp
jbe
shrl
shll
push
lock
popf
lock
mov
xchg
int
fiaddl
sbb
push
mov
cmpsl
mov
push
adc
int3
outsb
mov
hlt
inc
lods
inc
out
test
xchg
or
lcall
pusha
cmp
mov
xor
fwait
lahf
mov
inc
inc
xor
pop
and
xor
push
sarb
xchg
dec
jge
push
mov
in
lods
xlat
mov
addr16
mov
pop
cmpsl
icebp
lcall
or
sub
push
mov
pop
fcomip
out
lods
pop
loope
push
mov
sbb
lods
movsb
scas
mov
std
mov
mull
cs
sbb
std
xor
push
mov
fmuls
data16
in
adc
aaa
inc
push
aad
push
jb
dec
out
into
lcall
xlat
add
xchg
test
loope
jne
lods
ja
jno
xchg
fisubl
mov
loope
push
cmp
mov
loope
mov
jnp
pop
jecxz
push
and
repnz
push
int
dec
daa
ss
push
push
int
or
sub
inc
lods
and
clc
or
inc
shr
or
mov
cwtl
or
iret
inc
test
fdecstp
xchg
pop
sbb
dec
adc
push
jmp
mov
add
test
mov
dec
mov
test
jb
push
addr16
xor
cwtl
xchg
push
pop
dec
mov
aaa
inc
scas
ud0
es
rcll
fcoms
les
adc
je
and
jp
lcall
xchg
in
inc
add
pop
mov
data16
lea
mov
sbb
jno
ficomps
test
pop
add
jne
xchg
xchg
jge
xchg
aaa
loop
mov
mov
jge
mov
push
dec
adc
add
sbb
push
sbb
ds
mov
das
fsubrs
test
lcall
lcall
and
popf
cmpsb
fstpl
adcb
je
sbb
sub
mov
xchg
fnstcw
xor
mov
out
insl
popa
adc
inc
mov
push
in
jmp
or
test
loope
mov
fcomps
in
cld
push
adc
add
mov
loop
sub
pop
fstpl
sbb
mov
xchg
out
movsl
lock
mov
sbb
adc
jns
cmpsb
outsl
xchg
in
call
out
lret
jo
fadd
push
arpl
jecxz
loop
jae
mov
test
pop
rorl
mov
ja
scas
insl
out
xor
outsb
mov
fcmovnbe
sbb
add
je
mov
xchg
push
jbe
test
ret
jnp
dec
iret
imul
mov
mov
inc
movsl
inc
or
cmp
xchg
or
fwait
jbe
mov
adc
scas
shrb
clc
fnstenv
jbe
testl
into
jge
cmp
mov
dec
loopne
rolb
lcall
stos
ret
outsb
cmp
mov
mov
loope
aaa
enter
mov
div
xchg
xchg
xor
pushf
pop
mov
hlt
addb
sbb
dec
insl
jge
es
int3
inc
push
jae
sbb
iret
xchg
dec
fildll
jns
mov
scas
push
mov
add
scas
pop
pop
pushf
cmpsb
aad
ljmp
sub
xchg
dec
cmp
fildl
das
xchg
mov
inc
push
inc
mov
scas
dec
push
data16
add
dec
jo
mov
jns
xor
xor
daa
jo
dec
stc
inc
into
push
arpl
cmp
xchg
mov
lret
mov
rcll
negl
mov
loope
out
cmpsl
and
push
xchg
nop
int
dec
xchg
int3
das
xlat
fsubs
jno
rcll
cmc
testb
dec
adc
xchg
xchg
push
pop
loop
call
pop
sub
mov
es
sahf
mov
jmp
push
rcll
aas
sbb
int
or
add
movsb
hlt
repz
xor
cmp
sub
xor
and
xchg
pop
clc
stc
jecxz
cwtl
shr
adc
in
lods
cwtl
stos
pop
jmp
jle
test
jp
inc
loope
sub
pop
cltd
mov
out
pop
push
test
or
movsb
rorl
jl
ss
cld
mov
fst
and
adc
jmp
xor
cltd
push
or
jp
sub
sbb
faddl
orl
jl
sbb
push
insl
mov
sbb
sahf
mov
adc
jbe
xchg
ss
jecxz
or
sub
adc
pop
mov
dec
and
jle
sbb
inc
sub
test
sbb
aad
pop
sub
or
std
lret
jo
sub
mov
xchg
sbb
or
xchg
mov
mov
repz
inc
mov
shll
sbb
outsl
xor
leave
adc
pop
jmp
push
sahf
mov
adc
dec
mov
in
pop
inc
sbb
ds
gs
mov
lret
dec
mov
outsl
mov
fnsave
nop
ljmp
ror
jns
or
and
fadd
leave
adc
mov
negl
jno
daa
jne
ret
xor
pop
mov
jl
cmp
lods
xchg
push
mov
inc
call
je
fnsave
cs
fbstp
daa
out
aam
fisubrs
mov
sub
jg
cmp
out
xlat
out
jle
adc
mov
push
push
sub
mov
iret
jge,pn
test
xchg
sub
dec
std
ljmp
lods
daa
dec
addl
xchg
sbb
adc
dec
movsb
not
sub
scas
lahf
dec
outsl
test
adc
cld
jns
nop
xlat
or
pop
std
insb
mov
xchg
aas
jb
adc
rclb
data16
lods
dec
sbb
cmp
bound
movsb
out
pop
push
lods
mov
std
or
xchg
pop
add
jne
ja
int3
shr
dec
mov
popf
mov
pop
sub
adc
and
shl
sbb
xchg
mulb
test
aad
push
mov
outsb
ljmp
jge
xor
sub
fs
loope
sub
into
mov
pusha
and
mov
sarb
imul
add
rcrb
inc
and
adc
xor
and
or
clc
pop
push
xor
test
ja
outsb
call
in
shr
inc
add
js
adc
mov
xorb
and
test
loopne
stc
push
sub
pop
lea
scas
jg
scas
cltd
test
jne
lods
pop
loop
mov
shlb
out
scas
push
sub
jo
inc
cwtl
loopne
mov
popf
lcall
xor
cmp
dec
in
cmp
movsb
fdivrs
dec
je
cmp
stc
imul
xor
dec
in
dec
test
call
pop
in
popf
stos
ret
adc
xchg
fsubrp
arpl
xor
inc
gs
sti
xchg
rcrl
and
mov
mov
push
pushl
fnstsw
clc
push
pop
jnp
icebp
pop
pop
std
and
scas
gs
push
inc
mov
add
cmpps
and
sbb
push
mov
out
enter
lret
out
clc
xchg
jmp
mov
pusha
jmp
ljmp
cmc
cli
sti
xchg
xor
mov
pop
loop
add
mov
adc
push
push
sti
inc
mov
jmp
inc
jo
in
notl
mov
aas
daa
pop
push
adc
pop
or
xchg
add
fisubrl
sti
nop
dec
adc
add
outsb
sti
sahf
cmpsl
clc
or
inc
rol
sub
in
dec
fisubl
insb
imul
push
fwait
in
sub
jge
push
jns
or
mov
push
shlb
popa
pop
mov
std
pop
pop
mov
add
xor
jo
xor
lods
lods
xor
sub
das
jmp
xchg
fstpt
jnp
add
js
outsb
push
insb
xchg
mov
mov
sub
pop
cmp
dec
into
dec
enter
add
loope
fistpll
jge
pop
ficompl
jae
iret
arpl
nop
std
insb
js
cmp
dec
jl
dec
idiv
ja
out
dec
loopne
scas
jbe
xchg
fsubrs
xlat
and
jo
or
mov
jns
push
sub
mov
xor
push
clc
into
cmp
out
imul
mov
jg
mov
jmp
pop
imul
inc
xor
rcll
pop
or
lret
out
jl
adc
sbb
addr16
adc
jae
xor
dec
lahf
pusha
mov
mov
xchg
hlt
int3
xor
jae
add
aad
xor
mov
pushf
sub
push
fldl
sub
mov
lock
fisubrs
cmc
addr16
scas
sub
sbb
sub
xor
daa
inc
mov
imul
cmp
loope
cmpsb
arpl
sahf
mov
lods
mov
repz
clc
xchg
iret
mov
mov
pop
es
sbb
stos
mov
push
xor
aaa
test
push
sub
test
outsl
xor
call
imul
xchg
inc
xchg
jne
pop
addb
lods
mov
bound
mov
loopne
out
mov
or
lret
sub
jmp
xlat
lods
mov
aam
sar
sbb
negb
add
dec
out
sti
mov
mov
dec
sti
pop
into
adc
xchg
scas
int
sbb
outsl
gs
add
shrl
clc
jg
icebp
bound
push
mov
sub
pop
call
pop
imul
sbb
imull
fwait
icebp
dec
sbb
push
push
jle
and
cmp
cmpl
and
sub
cmpb
cmp
jg
sub
or
or
xchg
ret
xor
ss
push
cmpsb
jns
cmp
shl
cmpsl
repnz
js
or
xchg
sub
lcall
xchg
and
test
fcoml
mov
and
fcmovbe
push
mov
push
mov
and
and
pop
jp
jp
cmpsb
pop
mov
mov
mov
and
cmp
cmpsl
xor
cmp
push
test
stos
loopne
dec
xchg
or
mov
pop
inc
jmp
or
in
int3
aas
dec
add
push
xor
sub
lds
mov
pop
xchg
imul
and
jp
pop
adc
jl
add
into
sarl
cmp
out
pop
lahf
mov
mov
dec
xchg
inc
dec
add
pusha
bnd
insl
outsb
mov
pop
push
test
or
pop
out
ss
clc
inc
sbb
jbe
and
and
shll
push
mov
test
mov
mov
mov
pop
adc
mov
out
cmp
or
hlt
daa
lds
cmp
insb
add
xchg
repnz
cwtl
shr
test
in
gs
scas
fidivl
mov
cmc
in
push
push
cs
cltd
sbb
aam
xchg
decb
ret
push
pop
das
sub
stos
ficomps
pop
sub
sub
push
or
call
int3
adc
cmp
flds
mov
aaa
fistpl
push
dec
dec
dec
out
test
sbb
mov
mov
mov
dec
repnz
lock
out
je
or
push
adc
pop
jo
pop
add
push
not
xchg
shrb
or
pop
xchg
mov
outsb
nop
cld
sub
mov
xor
into
sub
push
pop
aas
cmpsb
add
js
gs
js
push
scas
lods
sbb
addr16
jbe
mov
stos
inc
sub
pop
lret
lret
shlb
lea
xchg
and
xor
loope
push
sub
out
fisubl
push
dec
shlb
xor
cmpsb
adc
xchg
rcrb
adc
sarl
lods
push
fmul
pop
test
xchg
push
dec
jecxz
sub
jecxz
addr16
testl
and
xchg
stos
in
aad
insl
cmp
pop
xchg
mov
cmp
jbe
addb
stos
arpl
std
push
push
adc
sarl
dec
xchg
ds
sub
in
sbb
add
mov
pop
aam
dec
xor
rcll
sub
cmp
pop
and
inc
orl
repz
fldenv
xor
insl
jecxz
pop
cli
xor
xchg
jns
add
jnp
aaa
xor
leave
imul
in
mov
testl
clc
xor
jg
insb
mov
adc
dec
or
cmp
jmp
pop
nop
or
sub
cmpb
adc
ret
dec
dec
cmpsl
int
lahf
push
ja
popa
les
mov
stos
lret
xor
ljmp
dec
sub
mov
inc
aas
out
adc
cli
fidivrs
cmpsb
mov
xchg
shll
cmpsb
xlat
mov
jb
mov
sbb
xor
or
and
pop
pop
out
add
cmc
loopne
and
fimuls
sbb
sub
cmp
js
mov
jae
outsl
addr16
imul
movsl
sbb
adc
icebp
push
shll
xlat
inc
dec
outsl
scas
adc
lret
push
push
or
xor
in
aaa
xchg
ljmp
lcall
shll
adc
pusha
push
push
inc
shrd
fistl
dec
scas
lods
movsl
sarl
cmpsb
sub
dec
rorl
jne
nop
lods
movsb
inc
mov
push
pop
jmp
cld
sbb
andl
jle
lods
xchg
mov
jl
sarb
scas
insl
pop
and
inc
ds
and
push
movsb
jae
fisubs
lods
mov
pop
imul
xor
loope
and
or
lods
dec
faddp
pop
inc
pop
daa
pop
jl
and
jne
xor
addb
and
std
nop
loop
jns
or
xlat
jae,pn
js
gs
dec
lock
jp
xchg
outsb
movsl
insb
subl
push
mov
pop
aam
faddp
jmp
xchg
imul
pop
stc
fisubs
and
loopne
dec
add
push
test
xor
adc
test
add
sub
inc
jmp
dec
outsb
ret
mov
das
xor
jns
adc
push
inc
shll
sbb
scas
pusha
imul
and
fdivrp
dec
loopne
jg
pop
cmp
xor
ds
cli
pushf
subl
inc
xor
pusha
movsb
jae
push
fbstp
mov
push
outsl
or
in
enter
mov
add
jo
shl
outsl
cld
out
and
mov
pop
mov
stos
inc
xchg
scas
mov
rcrb
lds
jae
pop
aam
lods
jb
push
mov
pop
dec
pop
incl
xorb
fcomip
mov
ss
xchg
sub
ret
xchg
fs
icebp
je
sbb
lock
leave
test
push
mov
push
int
int
xchg
add
dec
pop
lock
fldl
sbb
shlb
rcrb
cmp
fstps
loope
dec
or
cwtl
loope
je
or
sahf
out
clc
inc
mov
ret
imul
addr16
jno
mov
or
mov
xlat
je
push
pop
dec
mov
mov
hlt
mov
and
xchg
jns
roll
jle
jecxz
fisttpll
xlat
push
lock
idiv
out
ja
imul
sbb
sub
jno
push
xchg
pusha
push
cmpsl
fidivrl
xchg
xor
push
xor
pusha
dec
cmp
arpl
push
pop
sub
adc
xchg
mov
jo
and
imul
pushf
inc
adc
das
sbb
mov
testl
cmp
mov
pop
adc
ret
dec
adc
xchg
fisttpll
inc
ficomps
std
loop
gs
xchg
dec
pusha
inc
mov
mov
inc
negb
fcoms
lock
push
rclb
mov
test
xchg
aam
inc
cmp
pushl
js
inc
ja
push
je
cmp
je
ficoms
jno
clc
and
es
xor
cmp
cmp
or
or
cmp
test
popf
clc
aam
sub
jg
loopne
or
out
add
push
in
dec
js
dec
lcall
cmp
aad
or
jge
shll
je
popf
std
cmpb
or
sbb
stos
lea
lock
cmp
inc
clc
pop
add
clc
addr16
xor
insb
jae
clc
or
push
in
ss
bound
lods
xchg
push
sbb
jmp
outsb
aaa
sahf
cmp
dec
out
dec
or
loopne
add
lcall
je
rorb
rcrb
fildll
cmc
inc
movsb
jo
cmp
fildl
mov
or
notl
fisttps
and
rcl
nop
add
fdivrl
jecxz
jbe
push
mov
adc
js
call
jge
out
subl
jg
mov
push
mov
push
sti
xchg
pop
sbb
aam
cmp
push
mov
lods
inc
sahf
or
imul
sub
jp
ret
or
push
out
loop
jmp
shlb
repz
call
int3
out
pop
mov
cmpsb
les
xchg
xor
mov
ret
insb
fs
pop
sub
inc
push
outsb
ffreep
pop
fistl
int
or
outsb
aam
cmp
in
aas
sub
pop
call
pop
rclb
pop
ljmp
push
pop
push
iret
call
jno
enter
or
pop
fs
mov
or
cld
ficoml
es
mov
addl
push
sahf
addl
negb
popa
fimull
jo
mov
popa
daa
ret
lcall
xor
cmp
pop
cmp
shlb
arpl
dec
cmpsl
enter
mov
movsl
inc
lock
cmp
pop
call
jecxz
push
cmc
and
mov
lods
jb
jae
xor
mov
sub
aas
test
in
fwait
xchg
jbe
fmuls
add
sti
shr
dec
icebp
aaa
lds
sahf
xchg
cmpb
dec
movsb
xorl
sub
and
imul
std
jb
aas
sbb
arpl
cmpb
or
xchg
mov
lods
iret
in
aas
dec
mov
rcll
or
es
and
repz
aad
pop
and
inc
fcomps
dec
iret
pop
in
mov
ret
out
inc
push
add
xchg
in
enter
in
nop
push
in
sahf
mov
aas
outsb
filds
jg
mov
mov
dec
cmp
movsw
and
xor
inc
sahf
ljmp
push
imul
daa
or
leave
iret
jne
test
lea
sub
sub
pop
in
inc
xchg
adc
fs
dec
jns
es
cld
cmc
inc
inc
arpl
enter
jbe
adc
xor
cmpsl
xchg
lods
in
aad
shrl
nop
mov
push
push
out
icebp
das
dec
inc
cmp
pop
inc
mov
push
jns
mov
fistl
and
and
out
cmp
popf
mov
sahf
mov
in
inc
mov
dec
sbb
add
lahf
push
test
jmp
movsb
sti
push
into
add
sbb
mov
inc
ret
add
cmp
loop
scas
jns
outsl
cltd
cltd
jb
daa
or
cwtl
int3
adc
jnp
loope
mov
aas
data16
mov
fwait
push
in
xor
pop
cmp
rcll
cltd
inc
pusha
cli
xchg
jae
dec
add
pop
jl
aad
arpl
cltd
into
xchg
shlb
dec
or
aam
shrb
mov
xor
cmc
into
and
jb
pop
repz
mov
lods
add
dec
inc
popf
das
call
mov
insb
or
mov
cwtl
dec
cmp
bound
jns
adc
les
fistl
push
sbb
ret
mov
subl
pop
cs
add
test
mov
lret
xor
addr16
xchg
shll
stc
cmp
iret
xor
adc
popa
imul
stc
xor
mov
xchg
dec
ds
daa
push
pop
enter
sti
add
pusha
cmpsb
cmp
mov
sbb
adc
clc
xchg
fistl
push
hlt
repz
cmpsl
xlat
add
mov
dec
jl
sti
das
mov
inc
arpl
mov
sub
adcb
push
jns
sub
or
sub
out
stc
decl
push
pop
jg
test
sub
xchg
xor
push
addl
or
or
ret
aam
arpl
sub
jbe
and
pusha
loope
inc
push
cmp
and
mov
ret
fldcw
jmp
aam
xchg
movsb
sahf
roll
cmp
cmpsb
or
out
jno
or
sbb
xor
adc
ljmp
pushf
push
lods
jp
push
sbb
or
cmp
je
pop
xor
mov
jle
repz
popa
jnp
pop
push
rcr
dec
xchg
sbb
cli
mov
test
dec
or
loop
mov
add
jnp
xor
ljmp
mov
outsb
mov
fs
dec
test
dec
mov
mov
div
inc
orl
filds
push
addr16
dec
roll
pop
insl
adc
push
and
pop
mov
mull
sti
push
jp
push
into
ret
lret
push
push
shl
ret
test
mov
sub
lock
lds
dec
xchg
mov
add
push
decb
insb
jo
xor
popa
into
mov
aad
and
lret
adcb
cmp
cmp
or
mov
movsb
roll
out
xchg
xchg
into
les
pop
lods
lods
inc
and
inc
and
push
sub
iret
pop
loopne
test
xor
lea
fists
inc
pusha
mov
in
test
andl
jl
out
lods
outsl
aas
mov
mov
mov
out
sub
fldcw
add
lds
cli
xor
add
pop
mov
cmc
enter
fnsave
lods
xchg
jecxz
test
adc
test
rcl
jae
inc
js
rcl
cmp
mov
ret
lea
or
movsb
jmp
inc
test
out
loop
xor
sbb
dec
shl
sub
dec
adc
add
mov
jg
mov
cmp
loopne
inc
sbb
sub
int
mov
push
xchg
mov
add
cmp
pop
dec
divl
mov
xorl
cmpsl
int3
leave
addl
xchg
push
push
jg
andb
xchg
data16
xchg
mov
mov
jmp
iret
adc
inc
das
xor
stos
lcall
rorb
adc
add
sub
stos
test
jae
adc
mov
mov
mov
push
mov
scas
fs
or
cmpsb
fcomps
rorl
shlb
push
sub
sbb
push
cs
xchg
int
add
addr16
fdiv
jns
fimull
mov
and
in
movsl
cmp
xorl
or
jmp
ja
divl
cmp
fwait
jmp
jbe
pusha
fisttpll
test
xchg
adc
stos
outsb
enter
repnz
cltd
jne
pop
cltd
pop
fisttpl
daa
pop
add
dec
les
add
mov
jnp
addr16
cmp
pop
arpl
mov
shl
inc
add
insb
shlb
fidivrs
inc
and
inc
and
jns
jnp
inc
xor
inc
push
call
mov
jno
lds
sbb
sti
push
or
stos
je
xor
sarl
dec
push
xchg
fnstcw
mov
sub
mov
mov
fmull
sub
rorl
cmpsb
jns
les
gs
adc
daa
sub
adc
jmp
fidivl
lods
in
mov
mov
push
outsb
insb
shrb
push
jns
mov
mov
push
ficoml
adc
push
mov
push
addl
daa
rcll
ficoms
mov
imul
inc
mov
fbld
popa
xchg
fcomi
gs
xor
mov
pusha
jle
adc
add
std
ljmp
or
sub
dec
inc
cmp
pop
cli
pop
js
aaa
adc
or
cwtl
jae
enter
pop
pop
or
xor
arpl
incb
inc
mov
push
xchg
fistps
mov
out
daa
cli
pop
mov
movsl
mov
sbb
mov
or
mov
lcall
mov
and
scas
in
fstpl
xchg
std
sbb
jbe
rclb
pop
sbb
mov
sbb
adc
jo
cmp
mov
mov
and
insl
xchg
cmp
xchg
pop
and
mov
aam
flds
jb
dec
fnsave
test
test
push
pop
mov
test
mov
mov
or
hlt
stos
in
andb
jno
lahf
jns
mov
stc
push
pop
push
daa
les
dec
and
movsb
jmp
dec
imul
jle
mov
dec
lea
dec
mov
xchg
sub
dec
xchg
cmp
xlat
mov
jns
xchg
jl
dec
adc
std
out
cs
xor
pop
es
imul
adc
lcall
fs
sbb
out
adc
xchg
lock
jge
mov
add
xchg
mov
loop
cmp
dec
push
or
xchg
mov
scas
inc
lds
jle
xchg
notb
inc
cmpsb
lock
out
and
cmp
sbb
mov
dec
jo
or
xor
js
fwait
mov
mov
push
stos
mov
insb
push
xor
cmc
or
cwtl
dec
sahf
sub
inc
and
lods
rcl
fadd
sub
pop
add
daa
adc
jae
ret
add
gs
cmc
fdivl
inc
lret
shl
inc
pop
pop
loop
iret
mov
jns
cmc
pusha
inc
add
jle
into
sarb
add
int
mov
xor
rolb
in
ret
push
in
inc
daa
dec
xor
ret
insb
sti
adc
icebp
scas
rolb
out
or
arpl
loopne
jne
in
je
xor
jnp
cmp
xchg
inc
in
xchg
mov
pop
mov
ret
ret
les
mov
mov
sbb
inc
ljmp
xchg
pop
mov
fcomps
imul
mov
inc
enter
inc
and
sub
imul
jbe
decl
dec
call
icebp
push
popa
aas
jp
jge
enter
pop
xchg
jno
add
xlat
ret
and
lahf
xchg
or
pusha
das
nop
insl
push
stos
cmp
sahf
shll
leave
sub
xchg
test
lods
shrb
and
sbb
xor
inc
ljmp
stos
fs
ljmp
sarb
adc
outsl
or
addl
adc
rcrb
repnz
sub
lock
cmp
mov
jp
sbb
xor
dec
fs
jae
push
and
mov
mov
push
aad
and
testb
repz
cli
add
popa
push
push
mov
lods
test
push
ret
leave
adc
jno
mov
mov
cmp
stc
loopne
push
xlat
jne
rorb
mov
lods
mov
mov
nop
scas
andl
xchg
leave
or
in
mov
fdivrl
lret
outsl
mov
xlat
std
xor
sbb
je
mov
std
jne
sub
mov
xor
movsb
out
bound
cmp
and
inc
out
movsb
sub
dec
lock
ja
std
repz
test
in
xchg
bound
out
mov
mov
jg
mov
fcmovbe
movsb
adc
stc
scas
xchg
jne
imul
push
daa
mov
andl
sbb
add
and
pop
dec
sub
or
cltd
and
xor
jb
outsl
or
sbb
idivl
pop
popa
jno
aad
mov
or
imul
add
or
jnp
stc
adc
outsb
xchg
bound
ret
inc
inc
shl
inc
push
mov
and
insl
push
dec
iret
mov
inc
inc
leave
xchg
lret
mov
jbe
lcall
mov
push
push
sbb
ret
add
jg
dec
lahf
cmc
stc
enter
xorl
xchg
cltd
jno
fstl
xor
aas
cmc
sbb
shrl
xchg
inc
jmp
popa
sub
out
pop
xor
mov
mov
test
fiaddl
les
pop
jge
dec
cs
lret
shll
dec
stc
mov
xor
xor
stos
mov
push
cmpsb
and
and
popa
adc
idiv
mov
movsb
arpl
idivb
mov
mov
mov
mov
cmp
or
cmpsb
ror
fdivl
testb
jne
push
inc
fcoms
ds
test
cmp
inc
or
dec
jbe
adc
movsb
movsb
fidivrs
mov
iret
sbb
vpcomud
test
and
mov
ret
bnd
popa
inc
pop
xchg
into
push
lret
out
dec
insl
les
adc
ja
sbb
adc
stos
sti
dec
fdivp
fadds
adc
das
test
sub
inc
or
adc
out
add
andl
cltd
ficompl
loop
iret
pusha
negl
out
mov
cmpsl
add
mov
jae
inc
inc
hlt
enter
les
fwait
gs
sahf
aam
lret
adc
sbb
data16
sub
adc
sub
in
aad
lods
adc
sub
jmp
mov
decb
adc
jg
test
dec
and
pop
mov
frstor
jmp
push
fwait
and
repz
lods
push
cmp
and
data16
shrl
nop
cmp
cmp
repz
in
test
inc
push
push
mov
xchg
stos
sbb
mov
xchg
sub
call
sbb
int
je
das
outsb
xor
fwait
movsb
mov
cmp
icebp
or
rsqrtps
iret
aaa
ret
lea
lahf
dec
push
lahf
arpl
mov
sbb
xchg
dec
repnz
dec
cmpsl
xchg
outsl
mov
cmp
pop
clc
out
and
std
push
pop
in
adc
sti
ljmp
mulb
xchg
ds
mov
sub
pushf
xor
in
call
outsb
sub
or
in
aam
mov
hlt
adc
in
cmp
inc
mov
call
aaa
sub
inc
ficompl
dec
clc
sbb
xor
fsubl
cmpsl
pop
mov
in
jo
call
iret
cmp
push
loopne
adc
aad
aad
dec
loopne
mov
push
cmp
aad
cmp
mov
xor
sub
xchg
loope
push
xor
or
jmp
data16
or
in
and
pop
adc
pop
fsubs
pushf
pop
xchg
adc
in
fidivrs
mov
xchg
lahf
out
aad
sbb
jmp
lahf
out
aas
inc
mov
xchg
movsl
lock
or
mov
cli
imul
cmp
push
out
mov
mov
jmp
jecxz
add
adc
mov
movsl
or
xor
ljmp
loope
out
mov
test
jne
arpl
dec
rclb
adc
or
mov
xchg
push
fcom
and
push
sbb
ds
mov
xlat
mov
fwait
nop
or
shll
scas
jo
dec
mov
dec
in
int3
data16
sub
sub
mov
test
jbe
mov
push
loop
xchg
pushf
and
scas
xor
mov
mov
dec
popa
hlt
ret
or
inc
sahf
mov
rcrl
jle
es
xchg
sub
int3
cmp
es
mov
xor
test
dec
rol
orb
mov
dec
jle
ljmp
inc
leave
lea
adc
push
sti
dec
cmp
inc
mov
cmp
cmpb
cmp
adc
movsb
mov
or
mov
pop
push
vandps
xchg
ficoml
fxch
jno
cld
pop
sbb
jae
arpl
sub
cmp
mov
jecxz
or
xlat
and
mov
ds
addl
xlat
dec
pop
mov
cmp
cmp
mov
and
sub
jne,pn
lods
and
mov
adc
add
dec
push
push
aad
add
popf
aaa
sbb
movsb
pminsw
insb
mov
js
mov
push
xor
cmp
xor
add
xor
fldl
fistl
into
lcall
pop
xorb
rcrb
inc
jnp
xchg
adc
fs
test
jmp
aas
iret
add
inc
jmp
mov
cmp
jg
push
test
ret
imul
lret
adc
cld
xorb
push
mov
aam
sub
xlat
inc
sbb
inc
add
xlat
sub
je
pop
or
test
test
negb
out
mov
mov
sbb
push
push
cli
adcb
imul
add
cmp
pusha
ret
pushf
push
cmp
in
bound
jnp
stos
mov
sbb
add
push
inc
test
pop
scas
inc
lods
test
push
mov
xchg
repz
fsubl
ljmp
js
lods
aas
fdivl
imul
cltd
in
mov
shrb
rcl
rorb
cmp
fwait
xor
pop
inc
xor
test
or
jns
ds
test
push
leave
add
sub
and
shll
lods
leave
test
sub
aad
orl
add
sub
adc
xor
cmp
loope
sbb
lock
imul
pop
mov
test
into
or
and
rorb
cmc
sub
les
aas
jo
stc
mov
inc
mov
aad
stos
or
outsb
or
pop
std
arpl
rolb
mov
mov
jo
and
in
sbb
leave
inc
popa
pop
test
loop
pandn
ret
push
pusha
fstl
mov
or
nop
push
cmpb
xchg
lea
outsb
adc
stos
cmp
push
sbb
or
push
pop
ud1
out
mov
outsl
mov
dec
push
es
pop
mov
imul
test
fwait
pop
fstl
movsb
or
push
pop
pop
daa
inc
sti
pop
jns
pop
insl
shrb
mov
inc
aas
jb
rorb
stos
stos
mov
or
and
and
in
pop
dec
dec
sbb
xor
int3
and
adc
jo
cmp
jmp
lcall
out
dec
xchg
push
xor
mov
cmp
mov
xchg
scas
cmp
aad
aad
dec
or
dec
rep
movsb
es
lret
sub
sub
enter
xchg
cli
popa
sbb
push
ljmp
or
enter
leave
inc
add
int
loope
fstl
pop
push
call
sbb
lds
inc
jg
or
movsl
nop
aas
lret
orl
and
hlt
outsb
shlb
sbb
pop
adc
dec
lds
pop
mov
cmp
xor
in
sbb
stos
or
addl
mov
adc
fmull
push
jl
aam
out
inc
mov
fstps
js
std
dec
shlb
icebp
lods
dec
lcall
ffree
stc
filds
fidivl
dec
lea
movsl
fnstenv
mov
cmp
outsb
push
fsts
and
add
mov
and
lcall
stc
pop
cmpsb
mov
and
rcrb
pop
inc
mov
pop
fwait
or
push
inc
int
into
aad
mov
movsb
repz
test
pop
mov
mov
bound
out
sbb
adc
pop
cmp
xor
outsb
jnp
adc
jo
stos
dec
inc
pop
sarl
inc
dec
inc
or
jae
cwtl
jnp
fadd
sbb
imul
rorb
add
and
stos
and
movsb
into
or
iret
cld
fldl
shr
lock
inc
fsubrl
xchg
xchg
enter
jb
cmpsl
les
repnz
call
stos
xor
mov
jmp
pop
inc
xor
jmp
jecxz
or
int3
inc
sahf
daa
or
enter
mov
rcrb
pop
out
jb
stc
into
adc
add
inc
mov
push
cld
jecxz
sub
cltd
adc
lret
jo
adc
pop
and
and
out
ret
cli
outsb
xchg
and
dec
and
lock
mov
mulb
and
bound
ret
lods
icebp
js
xlat
mov
push
xor
lds
lods
cltd
aam
xor
inc
fwait
sbb
or
or
inc
mov
cmpb
icebp
jge
pop
rorb
xchg
aas
pop
mov
out
sahf
mov
out
loope
mov
cmp
dec
mov
pop
or
aad
sbb
in
cmp
fs
adc
or
and
sub
cmpl
and
lock
mov
push
xchg
xor
loope
mov
cltd
std
xor
pop
lret
repnz
daa
jmp
add
mov
lds
ret
sahf
push
cmp
xorl
pop
in
sub
cmp
jns
aad
roll
aad
push
jl
or
outsl
mov
out
repnz
pusha
dec
pop
ret
push
fs
and
mul
lods
pop
fisttpll
cmp
mov
sub
inc
mov
mov
xor
sub
repz
idivb
ljmp
pop
arpl
insl
dec
pusha
xchg
add
pop
pop
inc
mov
xor
and
ljmp
popa
hlt
inc
xor
and
shl
stos
mov
daa
in
xor
push
ret
dec
fidivrl
popf
into
mov
inc
fs
dec
xchg
sbbb
inc
push
sbb
cmc
adc
repnz
mov
ret
lea
inc
jbe
int
clc
mov
fimull
add
xchg
jne
pop
or
jl
aad
shll
fmull
xor
mov
cmp
sbb
or
dec
outsb
pop
or
leave
out
xor
xor
ja
mov
inc
push
mov
cmp
das
shll
pop
test
mov
das
icebp
add
imul
adc
cmp
lods
sub
jae
and
mov
fistl
stos
lahf
or
push
add
daa
mov
repz
insl
hlt
into
imul
call
js
in
aad
inc
fnsave
fldl
push
les
int
dec
nop
movsb
xchg
push
xor
add
scas
popf
shr
sbb
test
popa
lods
clc
fbld
adc
mov
pop
pop
leave
popf
mov
loopne
bswap
inc
or
dec
mov
mov
hlt
mov
mov
or
pushf
add
in
dec
jb
loopne
ja
ljmp
cli
int3
pop
mov
int3
pushf
out
adc
lret
inc
fistpll
les
js
nop
in
cmp
mov
int3
cmpsl
or
rorb
push
outsb
out
int
mov
aam
jno
loope
pop
inc
and
add
scas
mov
imul
aaa
jne
cmpsl
jmp
sbb
repz
pop
jecxz
aam
mov
lcall
mov
in
and
or
inc
ss
xor
jle
mov
enter
mov
mov
inc
in
aaa
push
outsb
adc
xchg
mov
add
fmuls
or
in
xchg
inc
outsl
mov
and
pop
push
mov
call
xchg
call
or
dec
shr
add
mov
add
xchg
cltd
inc
sbb
push
movsb
xchg
js
cmp
cmp
test
sbb
cmp
push
mov
mov
repnz
scas
popf
or
or
rorl
xor
inc
xchg
lods
outsl
ret
ror
xlat
imul
daa
add
jbe
ljmp
daa
lret
dec
cmpsl
xchg
cmp
out
es
push
sbb
lret
andl
in
aam
lods
insb
cld
mov
mov
mov
out
icebp
adc
inc
leave
xchg
jg
mov
and
sahf
test
into
xchg
aad
and
xor
mov
out
movsb
pop
lds
jnp
repz
stos
mov
arpl
call
push
cld
shlb
jne
adcb
pop
insb
ds
mov
xor
insb
daa
cmp
cmp
scas
int3
mov
ss
cltd
xchg
push
nop
or
lret
jno
sbb
add
jg
and
cltd
cs
mov
add
js
add
ret
cmpsl
push
loop
lock
mov
fdiv
sahf
sub
daa
mov
jb
mov
push
add
sbb
out
dec
xchg
mov
mov
or
adc
ljmp
adc
pop
cli
dec
dec
int
lret
adc
add
out
lcall
ss
arpl
jg
mov
scas
xor
aam
adc
shl
mov
xchg
cmp
mov
lods
xor
jns
mov
or
jae
pop
push
frstpm(287
psrlw
sbb
push
or
sti
sub
xchg
test
fadds
mov
aad
pushf
js
imul
mov
dec
inc
dec
mov
nop
pop
sahf
loop
cmp
push
push
dec
movsl
jae
stos
mov
cli
out
icebp
mov
mov
loop
loope
fistpll
inc
inc
loop
jns
jmp
cmp
aad
bound
lods
pop
add
shlb
iret
lock
cmp
and
or
xor
pop
mov
mov
jl
inc
xlat
push
rcl
adc
loopne
sbb
roll
into
add
inc
pop
es
out
mov
cmp
sbb
or
mov
call
cwtl
stos
sti
dec
xor
xor
std
mov
in
not
popa
push
push
mov
fisubs
jmp
pop
mov
fcomps
outsl
dec
pusha
popf
fbstp
ja
xchg
popf
icebp
loop
idiv
mov
loope
and
cmp
outsl
shlb
add
ret
xor
xchg
int3
rcl
and
cmpsl
mov
inc
outsb
ret
push
jne
xchg
xchg
xchg
jge
push
or
sbbl
inc
add
and
sub
cmp
addr16
and
data16
out
xor
or
nop
repz
sbb
xor
repz
out
push
rorl
fbstp
xor
pop
aaa
ja
movsl
jno
insb
cmp
sahf
mov
jns
mov
pop
cmp
dec
push
push
add
outsl
loope
xchg
loope
subl
clc
dec
dec
dec
push
jo
xor
decl
xchg
adc
xchg
or
lcall
packssdw
cmp
je
fsubp
clc
adc
dec
call
out
sbb
sbb
sbb
lahf
mov
pop
push
stos
sub
mov
sbb
push
nop
push
mov
push
mov
mov
xchg
movhps
je
jbe
int
and
outsb
push
sbb
pop
hlt
lcall
mov
xchg
inc
mov
lea
inc
js
mov
cmpsb
xchg
imul
scas
push
xchg
sub
sub
push
push
add
repz
mov
int
test
jbe
jl
sub
aam
fiaddl
pop
adc
rcll
lea
adc
roll
sub
hlt
fwait
or
sub
hlt
sbb
sbb
pop
mov
jp
jmp
sub
dec
sub
mov
daa
inc
mov
add
pop
pop
xor
xor
jl
loop
aam
pop
jp
subb
jle
pop
pushf
call
sarl
out
jno
call
add
mov
push
ja
push
stc
mov
ds
cld
cmp
leave
jb
xchg
std
jmp
mov
push
test
mov
iret
cmp
xor
inc
stos
cmp
or
sub
sbb
adc
imul
pop
fisubrl
fldcw
inc
mov
jmp
xor
leave
imul
cltd
insb
add
sub
mov
in
jmp
lret
dec
jge
sahf
int
dec
mov
cmpsl
out
clc
or
fwait
pop
nop
mov
push
pop
fildll
sub
dec
scas
in
neg
sti
dec
sti
scas
mov
data16
jno
call
xchg
ds
add
jge
int3
fisttpll
es
jp
adcl
test
cmpsb
mov
sub
xchg
in
les
lock
lcall
fsubl
pop
xchg
into
xor
fstps
ffreep
sti
pop
pop
dec
adcl
mov
or
ret
aad
lret
sbb
jecxz
daa
and
or
push
jmp
leave
jl
cli
rcrb
dec
xchg
lret
loop
push
inc
outsb
push
sti
rorb
push
lcall
sub
std
imul
ret
out
js
scas
jmp
cmp
test
das
stos
mov
xor
push
add
into
scas
push
and
sbb
cli
scas
les
pop
pop
and
or
lods
push
sbb
dec
loopne
lea
mov
loope
push
loop
or
int
cmp
mov
call
jl
paddusb
imul
mov
fwait
adc
sarb
fsubs
or
ret
das
repz
js
pop
scas
jb
xchg
xchg
add
dec
clc
pop
pop
es
xchg
mov
sbb
sub
pop
xchg
les
push
hlt
stc
lods
ja
outsb
test
and
cmp
lret
ficomps
sbb
iret
pop
push
or
xlat
in
rolb
fistpll
lcall
cli
icebp
dec
push
int
ret
es
js
xchg
push
aas
mov
xor
xchg
sbb
insl
ljmp
sub
pop
negb
push
shrl
pop
pop
jmp
sarb
and
inc
dec
aas
add
out
jmp
pop
sub
xchg
xor
aad
lock
test
into
nop
mov
xorl
xchg
outsb
out
xchg
subb
addr16
in
jle
repnz
cmpsl
xchg
lds
xor
in
and
xchg
insl
mov
sbb
lcall
jecxz
dec
je
imul
test
loopne
fistpll
outsb
push
mov
loope
mulb
movsl
pop
mov
adc
outsl
add
xchg
ja
push
mov
lcall
push
negl
ljmp
xorl
push
sbb
orl
ret
stc
incb
push
out
mov
clc
imul
pmullw
and
add
imul
je
lea
lea
or
movsl
inc
mov
stc
lret
outsb
or
jp
fistps
mov
inc
scas
jle
out
pop
outsb
iret
imul
pop
loope
jle
jno
push
jl
pushf
pop
mov
cmp
inc
inc
pop
pusha
xor
jbe
xor
inc
pop
cmpl
push
addl
sub
hlt
add
xchg
pushf
rolb
pop
icebp
movsl
inc
popa
sar
scas
scas
imul
xchg
rcrl
xlat
dec
repz
out
add
pop
pushf
xchg
xor
lea
std
xor
dec
outsb
xorb
lcall
cltd
andb
cmp
fdivrl
adc
dec
add
add
mov
xchg
and
ds
and
sub
adc
arpl
xchg
imul
sahf
and
push
and
or
dec
and
mov
jbe
xchg
jno
cmp
arpl
sub
mov
into
ret
xchg
inc
outsl
fisubl
les
in
xlat
call
jnp
cs
lret
mov
imull
sahf
push
ror
inc
in
pop
cli
push
shrl
cmp
js
outsb
je
mov
cmp
xor
adc
sbb
sub
xchg
mov
pop
sub
cmp
in
btc
in
mov
pop
bnd
pushf
out
xor
mov
add
mov
outsl
sarl
popf
cwtl
cltd
fadds
pop
xor
mov
mov
sarl
aam
sti
pop
or
dec
imul
xchg
adc
cmp
js
clc
mov
loope
jg
mov
sub
sbb
leave
mov
dec
pop
pushf
fwait
stos
mov
mov
sti
popf
daa
push
rolb
push
mov
jmp
daa
jnp
xor
ret
sbb
mov
insl
insl
pop
out
push
xor
loope
add
mov
sbb
mov
imul
mov
lcall
cwtl
lods
pop
push
cld
ljmp
das
xchg
pop
shl
in
dec
fldl
out
mov
push
push
inc
fcmovnbe
sti
rclb
movsl
sub
ret
daa
ds
cmp
lock
rorb
lahf
enter
add
mov
jb
outsl
stc
mov
push
js
dec
push
adc
andb
inc
hlt
outsb
xor
movsl
or
push
and
mov
jecxz
or
jl
mov
sbb
mov
js
cmp
and
mov
or
inc
fstps
xlat
cmpsb
xchg
xchg
leave
cltd
xchg
inc
inc
inc
mov
insb
invd
popf
stos
or
loop
les
imulb
cwtl
decl
mov
movb
jg
and
daa
inc
jae
loope
mov
sbb
inc
dec
cmp
mov
jmp
into
xchg
mov
xchg
cmp
pushl
push
cmpsl
stc
sub
adc
outsb
pop
mov
inc
shll
sbb
fcomp
pop
pop
enter
cmpsb
rcrl
add
movsb
jnp
imul
dec
popf
cmp
xchg
sbb
out
push
add
lock
ret
je
add
loopne
push
loope
push
inc
ret
ss
xchg
adc
sbb
movsb
clc
mov
push
insl
mov
mov
cld
jo
jecxz
aam
or
mov
out
dec
shlb
cmp
aaa
sub
xor
jae
mov
add
mov
test
cli
mov
pop
rcl
scas
dec
inc
popf
mov
nop
mov
nop
ja
lret
fwait
push
xor
out
sub
xchg
cli
cli
test
addr16
jmp
xchg
mov
shlb
push
or
ror
out
cmp
xor
jne
icebp
mov
or
or
xlat
das
lds
mov
and
cmpsb
stc
fldenv
repz
mov
push
pop
movsl
pop
dec
shrb
std
and
xchg
in
stos
pop
aad
cwtl
sub
add
scas
add
sub
iret
pop
insb
test
jae
dec
in
jle
mov
xchg
adc
hlt
or
jmp
fsubl
pop
bound
out
js
pop
xor
pop
inc
out
xchg
or
in
out
test
cwtl
fwait
sub
mov
sub
mulb
sbbl
add
jbe
xor
imul
push
or
and
inc
fcomps
test
stos
cmp
jl
fisttpll
push
mov
xor
push
xor
pop
aas
or
sbb
clc
es
out
pop
push
clc
enter
add
enter
int
outsl
stc
pop
mov
lods
inc
das
and
inc
adc
cli
pop
push
pop
pop
fsubp
pop
out
sub
cmp
icebp
stos
cmp
stos
xchg
loopne
jae
sbb
rorl
mov
inc
sbb
js
add
push
push
int
sbb
imul
xor
cld
ljmp
scas
mov
shlb
push
nop
out
inc
dec
stc
test
repz
sti
aad
or
fdivl
mov
repz
mov
fimull
pop
sbbl
out
outsl
and
dec
dec
repz
push
adc
dec
loope
das
sahf
mov
faddl
scas
repz
pmulhuw
xorps
mov
mov
dec
leave
jp
nop
pop
sbb
mov
imul
jae
cmp
pop
add
fisttpl
movsb
xor
rclb
inc
or
mov
add
int
push
in
decl
jmp
mov
add
jns
call
stos
shl
mov
jge
sbb
push
inc
loopne
imul
push
xchg
mov
imul
xor
xchg
ja
inc
call
cmp
mov
addr16
pop
js
jno
test
mov
shll
mov
es
pushf
mov
cmp
mov
pop
cmp
inc
jge
adc
in
dec
adc
cmpsb
lock
lea
push
aas
std
inc
sbb
or
inc
scas
out
into
push
jne
or
out
repz
out
out
jbe
jae
test
call
shrb
add
pushf
pop
sahf
push
jnp
orb
shll
mov
xor
outsb
and
mov
loop
push
sub
orl
mov
hlt
and
xchg
ret
std
pusha
cli
mov
jp
or
mov
mov
push
sub
sahf
mov
mov
or
xlat
movsb
sub
dec
lea
mov
fistpll
leave
out
ss
xchg
jecxz
jle
aas
sbb
xor
sbb
jge
inc
dec
push
leave
pop
mov
mov
out
push
mov
mov
xchg
mov
mov
enter
xchg
arpl
adc
push
and
or
cmp
push
sbb
pop
adc
shr
ss
xlat
shrb
in
js
lret
dec
pop
cli
adc
xchg
cwtl
push
test
repnz
loop
bound
adc
pusha
push
dec
sub
daa
mov
dec
xor
mov
fs
or
cmp
call
xor
jg
addr16
loop
xchg
mov
gs
dec
hlt
repz
cs
cmpxchg
insl
mov
and
or
in
mov
sbb
cld
fimull
ss
add
sar
mov
fcomip
jecxz
sbb
pop
sub
jae
enter
sbb
or
and
mov
push
pushf
jmp
lcall
popf
pop
adc
push
sarb
xchg
addr16
jnp
sub
cld
movsb
cmc
enter
scas
pop
cmpb
jle
aam
out
into
repnz
adc
jo
sahf
pusha
xchg
dec
mov
into
scas
adc
dec
test
ret
jl
insl
shlb
aam
ja
push
mov
push
push
aas
lret
and
out
pop
test
xor
out
int
sbb
popa
sbb
dec
sbb
add
sub
xchg
movsl
jns
push
lock
inc
ret
sbb
cmp
cmp
outsb
fldl
mov
stc
inc
bound
in
mov
sarb
xchg
xor
and
aad
adc
imul
xchg
push
mov
jae
aad
fdivrl
jb
sbb
xchg
push
fidivrl
iret
ficoml
xchg
mov
sub
adc
call
sub
cmc
fbstp
loop
cld
in
xchg
enter
sbb
test
add
loopne
xacquire
mov
xchg
sub
mov
std
push
jl
in
mov
enter
pop
das
cmp
hlt
cmp
nop
add
mov
adc
inc
jp
sbb
das
mov
fisttpl
in
push
insb
jecxz
jo
mov
nop
mov
in
jo
rorl
and
xchg
nop
sbb
jmp
adc
adc
pop
or
sti
jp
mov
dec
push
jg
mov
insl
fadds
jae
inc
out
and
cltd
popa
aad
push
fcompl
add
ret
iret
inc
fisttps
rorl
add
mov
mov
mov
cwtl
outsl
mov
insl
aas
or
inc
test
push
subl
push
push
add
mov
int3
jge
mov
adc
ret
bnd
mov
jmp
mov
js
frstor
mov
out
xchg
cmp
mov
pop
cmp
pop
pop
jg
ret
push
adc
push
pop
adc
push
adc
cmc
cld
addb
fs
notb
jmp
push
push
mov
lods
test
xchg
es
push
push
leave
mov
loop
cwtl
push
inc
lret
cmp
pop
pop
jecxz
movsl
gs
adc
mov
sbb
inc
and
xchg
aam
cmpsl
mov
jo
jmp
and
aam
adc
inc
add
decb
divb
bnd
jmp
mov
daa
stos
int
repz
fistps
jo
ss
mov
popf
inc
fdiv
cmp
stos
dec
lods
clc
mov
sbb
fwait
adc
xchg
xchg
test
pop
push
or
xchg
sti
jl
mov
inc
sub
xchg
aas
lcall
cmp
outsl
aam
adc
dec
xlat
test
xchg
fstl
outsl
mov
aaa
js
outsl
inc
loopne
mov
addl
addr16
push
or
sbb
xchg
and
push
sbbl
ja
mov
js
mov
out
leave
pop
or
jge
or
push
mov
lock
int3
movsl
jmp
add
imul
int3
fildl
mov
cli
adc
addr16
pop
xchg
jae
mov
pop
mov
or
fs
mov
movsl
movsb
jg
mov
xor
mov
jl
jecxz
lahf
rclb
popa
mov
or
jle
out
stc
ret
fmul
xchg
in
in
inc
dec
jae
rcrl
push
rorb
clc
push
sub
into
insb
stc
push
cltd
imul
or
xchg
sbb
sahf
jbe
orl
jnp
js
inc
push
or
adc
jae
or
iret
and
ret
and
mov
and
or
scas
jmp
xor
cld
sbb
divb
mov
xor
add
fistps
or
adc
adc
lock
mov
sbb
push
push
hlt
dec
data16
xchg
sbb
nop
and
jmp
adc
push
fs
add
in
pop
jae
popa
bound
xchg
dec
in
fsubp
push
cld
cli
arpl
scas
int
outsl
cvtdq2ps
ljmp
enter
mov
inc
ret
push
or
nop
xor
js
sbb
jmp
add
jg
ja
pop
pop
shrb
out
pop
out
dec
aad
fmul
cmp
out
andl
ljmp
and
aad
aas
fprem1
ja
cld
cmpsb
mov
loope
shll
and
pop
jmp
call
fs
mov
xchg
mov
test
xor
je
cmp
mov
xchg
mov
out
cmpsl
adc
sar
call
jnp
jge
mov
push
push
shl
xor
add
mov
inc
roll
fcmovbe
lds
mov
mov
or
inc
mov
mov
pusha
scas
in
movsb
cmpl
xor
cmp
iret
cmp
out
dec
stos
popf
jge
dec
push
or
push
jge
and
fists
lock
es
xor
je
push
sub
fistpl
lock
mov
mov
lcall
jne
sub
std
into
icebp
cmpsl
es
cmpsl
fildl
cmp
mov
fbstp
adc
in
inc
jb
imul
fcompl
out
mov
movsb
jo
jge
test
fwait
std
jae
ljmp
jb
cmpsb
jmp
xor
aad
iret
sub
or
pop
lds
sbb
mov
loopne
out
sub
mov
aad
cmp
insl
cld
scas
mov
sbb
dec
aas
clc
fisttps
push
fwait
sub
cli
cmp
out
and
andl
nop
das
jnp
push
mov
mov
fnstcw
mov
iret
shll
mov
adc
dec
fldcw
sbb
negl
and
loop
sbb
in
mov
and
call
mov
mov
adc
add
js
cmp
dec
push
test
cmp
loopne
dec
fmuls
in
sub
mov
stos
dec
pop
outsb
aaa
wrmsr
jb
arpl
xor
incl
inc
jmp
mov
shll
cmp
or
add
mov
xor
mov
push
inc
sub
mov
cwtl
xor
fiaddl
outsl
mov
out
inc
xchg
or
idivl
sbb
lret
cmpsl
mov
out
sub
cwtl
ja
ljmp
push
jmp
inc
cwtl
dec
aaa
push
lahf
mov
nop
not
jne
or
mov
inc
pop
sub
add
lahf
xchg
pop
pusha
repz
mov
adc
dec
fld
cs
mov
cli
push
mov
jns
rorb
int
gs
js
push
inc
or
js
bound
and
sbbb
cmp
or
insb
stos
mov
ffreep
dec
int3
jns
stc
jle
ret
pop
popf
data16
lods
cmp
and
push
adc
sbb
lock
add
and
inc
imul
jbe
aaa
and
out
sub
mov
dec
or
enter
fisubrs
je
pop
vcomiss
int3
xor
int3
cmp
jae
jae
push
push
mov
sub
rolb
popf
cmp
daa
or
xchg
xor
push
cmpsl
fdivs
xchg
bound
mov
mov
pop
fsubrl
xor
sbb
loopne
decl
filds
sbb
hlt
stc
xchg
cmp
xchg
mov
test
das
inc
jg
jge
xchg
into
push
mov
push
sahf
jmp
xor
sar
das
mov
lods
stos
call
adc
xor
test
adc
cmp
push
ds
xor
cmp
and
mov
jge
gs
or
push
mov
popf
jg
iret
mov
cmovb
in
fiaddl
pop
pop
fcos
mov
xlat
bsr
mulb
repnz
mov
sbb
mov
mov
push
jae
out
stos
jno
mov
lds
push
mov
out
test
nop
ds
imul
pop
insl
jle
test
inc
into
repnz
xor
or
jbe
xchg
push
jae
rcll
cmp
sbb
pop
mov
adc
jo
sbbb
or
icebp
mov
mov
enter
jno
popw
sbb
das
xchg
or
out
mov
xor
fbld
push
ja
imul
xchg
and
lret
loope
sub
cmp
add
fcoms
aam
mov
outsb
sbb
add
push
xchg
jge
jle
push
pop
arpl
lock
imul
scas
popf
sbb
mov
je
int
cs
pushf
jecxz
mov
cmp
fidivl
xor
sbb
jmp
sti
mov
cltd
mov
jmp
dec
jb
mov
sbbl
pushl
push
ljmp
or
test
jo
mov
jmp
add
cmpsb
xchg
add
sahf
in
into
es
aaa
cmp
sahf
cs
jle
cmp
js
int
dec
imul
sbb
lahf
mov
es
in
pop
loopne
dec
cwtl
sbb
add
outsb
add
enter
nop
loope
repz
xchg
mov
cmpsb
and
fadd
xor
push
xchg
push
out
cmpsl
mov
gs
push
and
push
lods
aam
mov
xor
cmp
idivl
mov
inc
mov
inc
mov
lahf
xor
loopw,pn
cmp
imul
jnp
movsb
mov
xor
xchg
idivl
push
xchg
inc
add
pop
popa
ret
pusha
jl
in
pop
push
xor
xchg
and
mov
mov
cmp
loop
and
stos
and
cmp
iret
sahf
out
imul
lds
jne
movsl
jne
test
xchg
push
cmovbe
mov
imul
clc
nop
xchg
mov
pushf
cs
inc
popa
push
xor
pop
add
push
stos
js
or
icebp
sub
loop
ret
mov
mov
insl
int
loopne
mov
hlt
stos
xlat
push
in
sub
add
mov
push
movsl
adc
test
mov
fwait
ljmp
repz
sbb
bound
fstl
xor
mov
xor
mov
mov
insl
mov
jg
stc
cmp
hlt
cmp
add
push
orb
subl
ja
leave
mov
lods
add
mulb
sub
loopne
incb
test
xchg
push
pop
add
pop
in
xchg
les
mov
xlat
in
sahf
data16
sbb
fmull
sahf
inc
sbb
imul
dec
push
cmp
fwait
iret
out
insl
repnz
add
dec
ds
fsubl
and
out
fstpl
test
push
es
into
mov
sbb
testl
push
in
xor
in
ss
inc
test
or
or
int
sub
sub
dec
and
sub
cs
ja
mov
out
stos
or
int
insb
cmp
inc
aam
andl
sbb
loop
out
jno
jnp
outsb
jg
js
mov
cli
or
hlt
sub
cli
lret
add
sub
int
jae
xor
dec
push
out
fstpl
imull
adc
icebp
add
das
pop
push
mov
xor
push
les
dec
cmpsl
ret
int3
js
lds
ret
dec
cld
aad
popa
loopne
cltd
lock
lea
stos
inc
sbb
rcrl
test
lock
cmp
cli
aad
mov
mov
jmp
add
lock
xor
sub
lret
push
scas
icebp
jne
adc
div
sbb
jg
iret
xchg
fstpl
mov
cli
shrb
je
mov
bound
lea
fimuls
sbb
sti
push
xchg
das
xchg
push
mov
cmp
ja
mov
test
push
iret
fisubrs
int3
lock
mov
nop
mov
sbb
push
pop
push
sub
dec
mov
fbstp
add
or
fsts
sarl
nop
and
pop
mov
mov
jns
xlat
and
mov
and
mov
xchg
lock
jb
xor
pop
xlat
jle
pop
rcll
sbb
mov
inc
in
or
xchg
imul
lcall
clc
imul
mov
xchg
ljmp
add
test
mov
xchg
bnd
mov
mov
aad
shlb
fdivrs
aam
ret
sti
cs
nop
add
insl
in
mov
shll
push
aad
and
adc
push
cli
jno
stc
fidivrl
pop
mov
xchg
cmc
sub
call
mov
bound
xor
xorl
nop
push
int
mov
test
and
test
enter
scas
push
in
dec
add
decl
mov
lahf
test
sbb
push
subb
push
fistpl
mov
roll
pop
mov
add
mov
fldl
mov
jp
push
xchg
call
push
and
jns
movsl
add
call
cli
mov
add
clc
les
test
roll
mov
in
ret
out
inc
xchg
out
ja
mov
mov
push
or
xchg
shl
push
push
fisubl
dec
inc
js
or
adc
xlat
ds
jns
add
adc
jecxz
cmc
addr16
and
sub
pop
pop
rclb
jae
in
xchg
dec
pop
sbb
or
imul
popf
popa
pop
adc
mov
or
les
es
xorl
jle
mov
mov
popa
jge
mov
pusha
imul
iret
lods
cwtl
cmp
imull
push
and
daa
cmpsb
dec
test
pop
ja
push
mov
add
lret
lock
addr16
ljmp
jg
stos
lods
mov
andl
add
sub
mov
loopne
sub
test
xchg
lea
mov
xchg
insb
dec
inc
scas
cmp
adc
icebp
mov
sub
xchg
mov
ljmp
fldcw
out
xchg
inc
repnz
rolb
push
sub
and
lret
dec
mov
dec
xchg
cli
test
ljmp
mov
mov
lret
jl
stos
sti
mov
divb
adc
or
jle
inc
jmp
adc
cmp
xlat
push
adc
lahf
xchg
mov
in
xchg
scas
fs
fmull
insb
lds
aam
pop
ret
push
insb
adc
inc
hlt
push
in
es
lret
faddl
inc
jge
jmp
mov
push
pop
sbb
out
xlat
roll
fs
xchg
stos
and
aaa
mov
jp
out
xchg
test
out
mov
adc
mov
call
adc
jmp
cmp
inc
pop
into
mov
pop
pop
fdivrp
scas
xor
push
and
xchg
push
mov
inc
daa
mov
es
cltd
test
sahf
cmpsl
jg
in
aas
lcall
out
push
jl
shll
inc
mov
push
pusha
mov
aad
cs
mov
out
lcall
cmc
lods
cmp
cmp
cwtl
jb
add
test
xchg
sbb
dec
sti
add
les
jno
cmc
push
xor
or
iret
cmp
xor
xor
push
add
push
cmp
pop
mov
jno
sbb
mov
mov
jb
inc
orl
test
push
inc
mov
subl
fistl
mov
fwait
inc
hlt
xchg
sbb
push
mov
fcmovbe
fistps
arpl
fildl
rcll
mov
lahf
xchg
sub
jle
push
mov
lret
flds
and
fldz
lahf
jb
xor
lret
inc
adc
lret
inc
dec
imul
ljmp
or
shll
mov
jbe
jb
adc
inc
lods
loope
jns
stos
lea
mov
jmp
adc
xor
xchg
add
lea
mov
mov
xchg
repz
ror
inc
push
into
jl
add
push
je
ds
sarl
pushf
hlt
repz
sbb
leave
add
sahf
cltd
xor
ljmp
and
xor
cmp
push
xchg
xchg
nop
leave
iret
cmp
add
icebp
lods
or
aaa
pop
mov
jbe
adc
pand
jb
xchg
nop
mov
push
stc
adc
movsl
and
mov
add
sub
cmpsl
es
ja
fwait
mov
sbb
push
shll
jne
jnp
inc
jb
ja
xchg
and
mov
sbb
push
inc
sbb
xchg
jge
clc
out
shrb
test
adcb
arpl
test
out
testb
sub
mov
and
movsl
jb
mov
gs
and
aam
sub
popl
insb
out
cmpb
mov
mov
loopne
sbb
dec
xchg
and
in
or
pop
and
push
lods
aas
dec
jbe
ja
lods
xchg
mov
movsl
iret
imul
jae
or
loop
mov
test
inc
mov
sbb
ja
push
nop
xchg
add
mov
rolb
mov
pop
mov
push
repnz
scas
mov
dec
push
inc
cmp
cmp
test
push
xlat
sub
push
rolb
cmp
push
cmp
push
rcr
add
shll
push
pop
cmp
and
icebp
push
loop
xchg
stos
add
in
int3
mov
add
xlat
pop
pushf
pop
mov
rclb
inc
incb
stos
push
inc
aas
adc
icebp
adc
sub
jp
inc
jne
sub
inc
adc
xor
andb
rorb
repnz
je
cmc
test
xchg
sti
fdivrl
jns
inc
jns
jbe
movsb
sti
jo
popa
mov
loop
fisttpll
loopne
test
popf
and
into
je
int
add
add
adc
hlt
in
outsb
jb
setno
sub
push
jns
test
jo
push
fs
clc
mov
pop
sub
das
add
add
dec
mov
jbe
imul
sub
cld
add
loop
loope
xchg
lods
insl
call
push
je
rcl
adc
xchg
cmp
pop
cwtl
stos
pop
mov
cltd
mov
daa
or
lret
aas
xlat
jnp
sub
test
insl
push
in
push
sahf
inc
jno
inc
divb
cli
es
inc
dec
cmpsl
push
lods
lret
aaa
jmp
mov
scas
add
addr16
pushf
xor
dec
sbb
cmp
xlat
int3
int3
mov
bound
xor
xor
loop
movsl
enter
sahf
add
mov
mov
imul
cs
idiv
sbb
mov
insb
in
shll
call
out
cmp
lock
dec
leave
mov
cmp
inc
stc
xlat
fisttpl
push
jne
mov
stos
cmp
stc
sub
jnp
push
and
js
scas
hlt
mov
leave
sbb
mov
int
xchg
push
insl
or
imul
popa
popf
call
stos
ljmp
inc
out
xor
cmp
int3
cmp
loopne
ficoms
les
add
fstpt
cmp
push
inc
aad
push
shll
mov
shrl
pop
lret
jbe
lcall
pop
xor
sbb
mov
pop
dec
in
shl
xchg
push
mov
enter
out
es
test
dec
cmc
call
movsl
mov
enter
shll
shrl
sub
push
pushf
fnstcw
sub
lahf
jg
mov
bound
sbb
test
repnz
inc
push
test
andb
repz
xlat
jns
pop
dec
sbb
out
cmp
arpl
lcall
pop
pop
inc
inc
pop
andl
divl
inc
lcall
shlb
xchg
sub
jg
insb
repz
test
inc
dec
fneni(8087
mov
mov
test
sub
pop
push
inc
js
in
cli
bound
bound
mov
mov
aas
stos
or
mov
mov
gs
lea
addr16
les
sbb
sbb
mov
cmpsb
cmp
mov
in
fs
mov
dec
cmc
add
fsqrt
loope
or
loopne
stc
lods
mov
enter
rorb
inc
ljmp
add
loop
jns
fst
dec
aad
lods
lods
mov
push
out
pop
mov
pop
push
xchg
pop
or
pushf
cmp
jg
aad
push
out
jns
shlb
push
jno
xor
dec
jae
xor
lret
mul
mov
negb
in
mov
pushf
gs
pop
inc
jae
lea
jg
xchg
jae
xchg
movsl
in
mov
ss
cmp
pop
push
cmp
fistl
cmpsb
adc
mov
lds
add
insl
scas
adc
andb
aad
jle
addr16
arpl
xchg
cmc
outsl
jbe
movsb
pop
test
pop
xchg
adcb
adc
shl
mov
lcall
cli
sub
test
pop
adc
fldcw
icebp
std
lds
pop
sub
and
dec
sub
mov
cld
adc
cmp
loopne
dec
test
or
mov
fsts
fucom
mov
rolb
push
jle
lahf
in
loope
inc
int3
sbb
or
std
test
jmp
add
xor
cs
push
jl
dec
imul
lock
jecxz
nop
sub
cmove
adc
or
loop
dec
push
and
jle
call
popa
inc
cmp
jae
adc
sti
lahf
jmp
sub
leave
addb
push
pop
push
stos
mov
inc
loope
mov
cmpsb
mov
mov
jns
pop
pop
enter
test
repnz
pop
mov
fs
mov
or
aas
xor
mov
and
xchg
mov
sbb
int3
mov
mov
sub
out
aaa
movsb
arpl
cwtl
pop
cmp
out
test
fs
xchg
sbb
fisubl
mov
xchg
fs
shlb
mov
repnz
cmp
out
shrl
clc
jns
mov
push
pop
cwtl
sbb
cmp
jcxz
scas
pop
sbb
push
jbe
jmp
push
ljmp
jecxz
loope
and
jae
jo
jns
xor
cs
inc
add
mov
stos
pop
mov
add
sub
das
cmpsb
popa
and
std
stos
decb
sub
cmpsb
int
mov
clc
mov
ja
mov
pop
fsubrl
cmp
out
xchg
mov
pop
pop
add
jno
add
ret
cmp
and
adc
adc
jno
cwtl
adcb
inc
loope
adc
pop
mov
je
mov
ja
ja
mov
and
push
push
xchg
out
jns
dec
fnstsw
sub
push
mov
lock
cs
adc
lcall
sub
pop
mov
test
test
sti
mov
iret
mov
push
mov
pop
sbb
xchg
in
in
push
push
aad
xor
shlb
lret
dec
jne
sub
mov
gs
pop
lods
cltd
mov
int3
sub
cwtl
inc
loope
cmp
dec
push
je
cmp
pop
or
imul
in
mov
xorl
push
mov
shll
xchg
inc
sub
mov
xor
icebp
mov
push
jno
cwtl
xchg
jle
fldcw
cmp
dec
enter
add
xchg
xchg
fwait
lea
or
push
xchg
subl
jg
enter
jle
xor
ficoms
sbb
pop
jns
sbb
popa
cmpsb
inc
cwtl
adc
xlat
stos
test
cld
lea
and
cmpsl
sahf
and
stos
out
test
push
jg
jmp
jno
fdivrp
mov
jb
addr16
ja
dec
fcoms
scas
sub
dec
inc
pop
push
lea
test
dec
leave
mov
aas
inc
add
js
cld
sub
rol
negb
xor
cmp
mov
ljmp
into
stc
jbe
cmp
adc
iret
je
or
pop
lods
push
test
emms
mov
pop
hlt
inc
sahf
fdivl
xorb
or
jecxz
jg
loop
decb
jmp
sbb
jle
ljmp
mov
push
lret
test
lods
sub
test
mov
mov
lcall
scas
jecxz
cld
jbe
mov
cmpsl
out
aam
jae
fiadds
push
icebp
xor
xchg
gs
rclb
or
cmp
imul
int
js
pusha
cmp
cmp
in
push
addr16
insl
shrl
scas
inc
and
dec
aad
jg
loopne
js
jmp
stos
nop
inc
adc
mov
loop
jnp
stos
jne
mov
inc
movsl
sub
xor
popa
sti
pop
xor
insb
inc
loopne
and
fstl
ret
movsb
pop
xchg
cmp
mov
aam
add
push
arpl
pop
cltd
jns
test
push
out
mov
imul
loop
and
cmp
fisubl
in
inc
mov
stos
sub
je
aam
mov
mov
add
data16
mov
lcall
push
cld
jle
dec
gs
mov
mov
decl
rolb
or
cmp
jo
inc
adc
add
test
jnp
pause
dec
jno
adc
fld
jmp
xor
fcmovnbe
mov
jle
push
and
jp
movsl
scas
push
add
addr16
and
inc
rolb
sti
mov
aaa
jmp
jns
sar
push
mov
aas
dec
cmp
lahf
sbbl
dec
xchg
mov
das
inc
mov
sbb
push
fistps
add
mov
cmp
loop
outsb
and
and
cmp
push
xor
mov
gs
sub
adc
jecxz
fimull
das
es
repz
and
stos
mov
nop
insl
mov
insl
ja
data16
inc
das
iret
jg
cmp
dec
mov
jg
inc
or
jecxz
jle
ret
loope
inc
inc
repz
mov
arpl
fnsave
adc
movsb
fisubrs
shr
pusha
cmp
xchg
movsb
xlat
mov
add
cmc
jo
and
inc
sbb
inc
hlt
xchg
in
pop
push
jbe
gs
cld
subb
or
dec
cltd
aad
jl
je
add
xlat
scas
cwtl
sbb
add
adc
and
xor
sub
les
cmc
enter
pop
imul
dec
jno
push
cli
xchg
inc
mov
stos
push
clc
cmpsl
data16
sub
cmp
aas
add
daa
out
add
std
jmp
fimull
lds
pop
jno
push
xor
das
fstpl
mov
ja
lret
dec
jmp
and
push
outsb
mov
lahf
gs
push
push
jmp
insb
sub
lahf
sbb
out
inc
ds
mov
push
pop
pop
xorl
push
dec
into
and
or
mov
in
lahf
pop
sti
cli
mov
cmpb
sbb
jp
dec
test
insl
add
lea
dec
shll
mov
dec
std
pop
or
lret
mov
hlt
xchg
inc
adc
xlat
lret
pop
mov
xor
xor
popa
xchg
lret
mov
dec
or
add
test
sahf
pusha
les
and
push
inc
outsb
in
push
outsl
inc
pop
lret
adc
fadd
xchg
push
cmp
stos
repz
pop
fs
mov
push
mov
sbb
push
xchg
test
adc
jg
test
inc
ret
pop
cmp
and
cmp
lock
push
movsb
aam
rcrb
push
lods
rolb
inc
lcall
aas
ret
mov
add
add
stos
adc
lret
fwait
out
insb
sarb
xchg
pop
aas
or
fstpl
or
cli
shrd
mov
fists
push
sbb
push
movsb
add
mov
sub
jns
jb
cmp
test
stos
cmp
add
loopne
mov
out
cmp
mov
adc
je
lret
cmpsb
sbb
push
insl
ljmp
push
push
pop
push
mov
int
xchg
or
sub
in
popa
lea
mov
loop
pusha
pop
or
xchg
pop
xor
dec
fdivrl
pop
ret
cmp
jmp
sub
sbb
and
mov
push
pop
bound
cmp
imul
out
xchg
aam
fidivrs
mov
aas
ljmp
push
das
pushf
add
push
cli
mov
add
lahf
outsb
movsb
sarl
dec
mov
dec
sbb
bound
pop
rcll
mov
mov
xchg
jge
test
inc
xor
add
scas
or
and
or
outsb
fists
shrb
and
mov
xor
lds
mov
xchg
xchg
sbb
outsb
in
jbe
or
or
push
push
mov
ljmp
jg
mov
cli
sbb
sbb
jecxz
mov
sbb
dec
sub
pop
insl
outsl
push
fs
popa
rcrl
pop
lock
loope
inc
pop
xor
fwait
push
push
imul
push
in
push
in
daa
xchg
das
pop
outsl
sbb
cli
out
mov
shld
imul
arpl
jae
hlt
sub
addr16
iret
cmc
pop
data16
popa
insb
mov
mov
ljmp
sbb
gs
adc
sbb
inc
js
dec
ja
in
jae
or
fsubp
mov
pop
subb
clc
call
push
enter
les
jp
add
sbb
test
or
sub
idivb
jecxz
je
add
sbbb
aam
push
ljmp
cmp
loope
aam
cwtl
ja
icebp
jb
xchg
in
sbb
repnz
pushf
or
cli
inc
fsubs
sub
insb
and
add
or
sahf
jle
insb
xchg
movsb
mov
mov
dec
lds
xchg
fwait
pop
nop
add
adc
sbb
adc
data16
insl
fldt
xchg
xor
ds
pop
aam
inc
sar
adc
stos
outsl
or
les
inc
xor
dec
add
jno
mov
jne
xor
imul
pop
xorb
push
adc
dec
xor
mov
ret
pop
mov
shrb
andb
aam
inc
add
out
loope
xchg
jecxz
sbb
inc
push
jae
test
and
add
jbe
add
push
adc
and
or
adc
aaa
fwait
add
popf
push
aad
xorb
xchg
push
insl
xor
std
xor
insl
jnp
icebp
pop
pop
mov
ret
ja
filds
adc
sub
inc
dec
and
xlat
push
ss
lret
outsl
inc
xor
cld
lock
cld
pop
gs
lods
sbb
inc
pop
mov
adc
std
inc
mov
in
loope
push
test
idiv
jns
xor
pop
cli
xchg
or
xor
je
mov
testl
es
repnz
data16
or
fdivs
dec
xor
jmp
test
daa
xor
cmp
or
repnz
cmpsb
push
ljmp
inc
ret
dec
push
pop
and
orl
xchg
mov
std
sub
mov
adc
inc
ficomps
fcomps
xchg
in
mov
std
in
clc
mov
shll
leave
push
dec
push
iretw
fisubs
dec
ss
ss
cmp
pusha
repnz
popa
pop
cwtl
data16
loopne
repnz
or
mov
adc
imul
lret
in
jge
stos
mov
pop
sub
jb
jmp
xor
das
fldl
adc
sub
jl
add
imul
scas
loope
and
addr16
inc
jb
test
repnz
inc
ljmp
or
jmp
repnz
in
mov
inc
lret
pop
testb
sub
lds
icebp
mov
sub
xor
push
lcall
lret
sti
das
pop
xchg
lahf
data16
fnstenv
stos
mov
jecxz
mov
sub
or
xchg
and
inc
mov
xlat
and
lock
ss
inc
adc
xor
inc
movsl
jbe
mov
mov
in
sub
and
jecxz
push
dec
jecxz
aam
xchg
mov
movsl
dec
dec
stc
pusha
in
lock
or
imul
mov
push
mov
mov
shrl
xorb
in
add
int3
jnp
mov
add
iret
push
add
mov
gs
ret
xor
sub
movb
jnp
dec
xor
push
pop
adc
and
mov
rorl
sbb
and
das
addr16
xor
mov
jbe
test
test
cltd
popl
imul
fs
xor
cmp
rclb
movsl
mov
notl
or
add
xor
in
mov
popf
sbb
lods
pop
pusha
or
xor
movsl
icebp
adc
call
inc
out
xchg
lahf
adc
dec
int
pop
mov
shrb
push
cwtl
cltd
sbb
xchg
adc
loope
mov
mov
mull
int
mov
inc
jg
or
fcom
pop
fs
and
pop
sbb
out
sub
cmpsb
push
fdivrs
pop
and
jnp
sbbl
fldt
icebp
fbld
imull
cmp
xor
ss
pop
sub
repz
add
test
and
test
lock
xorl
and
xor
pop
or
popf
sbb
mov
sahf
pop
popa
or
xchg
adc
fnstcw
xor
andl
pushf
mov
xor
fistl
lea
xor
in
push
les
xchg
sbb
hlt
xchg
fildll
popf
pop
arpl
adc
fsubs
push
pop
addb
xchg
inc
and
outsb
cmc
mov
adc
and
xor
push
out
std
out
lret
in
xor
dec
test
pop
mov
shrl
ljmp
jb
xor
fnstenv
mov
mov
mov
loope
loopne
adc
cmp
mov
xor
aaa
stos
insl
mov
inc
sub
dec
outsb
in
jnp
inc
add
dec
arpl
leave
adc
notb
shl
jp
mov
mov
inc
jl
pop
js
push
mov
inc
mov
mov
test
subb
in
comiss
or
pushf
dec
mov
cs
aad
stc
inc
call
test
mov
mov
dec
pop
lods
movsb
lret
xchg
sub
int3
fdivl
pcmpgtd
addr16
popf
adc
jb
adc
dec
mov
jnp
add
push
mov
fnstsw
pop
iret
xlat
ja
popa
lret
into
pop
jae
cltd
pop
mov
pushf
sti
push
in
push
mov
sbb
jne
push
or
mov
xchg
clc
imul
xchg
ss
xor
push
adc
cmp
call
or
lods
frstor
mov
into
cltd
sbb
jae
or
jo
jb
addr16
xchg
sbb
lret
mov
cmc
dec
or
fsubrl
push
fcoms
test
jl
loope
pop
test
jecxz
pop
nop
mov
mov
inc
imul
sbb
inc
push
add
fwait
es
adcb
aas
cmp
call
adc
das
fimull
mov
rolb
jnp
and
js
out
js
and
scas
mov
sub
out
jl
sub
fs
jo
fcomps
jp
test
push
inc
pop
adc
mov
hlt
sahf
scas
push
shr
imul
dec
loop
xchg
cs
mov
scas
lahf
lock
add
jecxz
pop
popf
or
and
adc
sub
insb
mov
push
add
enter
dec
push
js
sahf
sub
aam
nop
dec
add
adc
in
int
stos
sub
adc
lods
add
jne
mov
jne
or
jecxz
es
dec
leave
push
outsl
es
adc
lods
and
mov
aas
je
and
hlt
push
mov
adc
mov
add
les
cmpb
shl
into
xor
jbe
sub
iret
lret
inc
sub
xor
and
and
cmpsl
xchg
lods
test
lret
adc
rorl
mov
and
daa
push
test
jg
mov
and
es
mov
fs
in
sbb
les
enter
inc
in
add
imul
repnz
bound
aam
sti
xchg
sub
dec
movsl
push
pop
mov
pop
push
cmp
cmp
aas
fstpl
lods
pop
or
mov
xchg
clc
stc
int3
inc
js
loope
adc
xchg
jo
out
mov
cmp
sbb
leave
dec
add
cli
jne
push
aam
shlb
out
sbb
out
xchg
faddp
jmp
hlt
cwtl
daa
dec
pop
or
popa
loopne
sub
push
mov
adc
addb
sub
stc
mov
or
insl
inc
in
dec
pop
js
test
inc
dec
out
pop
rcrb
inc
hlt
lcall
bound
pop
hlt
lret
cwtl
divl
mov
sub
ljmp
sbb
add
sbb
push
lock
pop
mov
bound
xor
mov
int
pop
fsubl
loop
lret
mov
lcall
pop
faddp
imul
sti
ret
or
push
jecxz
mov
push
fdivl
fidivl
addr16
bound
imul
icebp
bound
add
sbb
test
outsb
sub
jp
push
stos
lahf
jp
lret
addl
sbb
testb
add
xchg
dec
or
sub
xor
sbb
cmp
aam
sbb
out
dec
adc
das
jle
dec
lea
nop
stc
ret
dec
imul
pop
aam
or
icebp
out
sub
jnp
lret
mov
jnp
testb
pushf
test
and
fildll
ljmp
dec
lret
push
cmp
sub
jb
add
out
cltd
mov
pusha
jg
into
adc
arpl
or
inc
test
roll
cmpsb
call
xor
mov
pop
loopne
xor
test
sub
out
sub
sub
and
dec
outsl
xor
xor
roll
cmpsb
and
cmpsb
fadds
or
xchg
cmc
enter
decl
imul
lods
popa
adc
repnz
stos
pop
sbb
push
imul
jge
add
and
cmp
jnp
aad
insb
test
stc
xchg
push
inc
mov
jg
mov
xchg
sbb
push
mov
lcall
lret
shll
sub
sub
mov
arpl
add
mov
or
xor
repz
fwait
lahf
cld
push
jne
cs
and
aad
inc
andl
mov
or
cmp
cmc
lods
adc
aaa
lahf
pop
pop
outsl
loopne
cwtl
push
xorb
and
bswap
jo
xchg
jge
adc
mov
adc
imul
pop
stos
or
pop
lods
aad
mov
lret
outsl
rclb
inc
jmp
mov
push
adc
mov
add
test
sub
xor
xor
lahf
add
hlt
hlt
insb
jl
in
xchg
lret
bound
sbb
outsb
or
imul
jge,pt
xchg
jp
fcoml
inc
je
nop
dec
push
cli
or
mov
xchg
mov
mov
stos
ret
xchg
adc
hlt
popf
xchg
push
insb
jbe
and
dec
addr16
add
mov
in
add
std
xchg
cld
shl
xchg
ret
out
hlt
dec
mov
lds
cmp
jno
fcmovne
ds
dec
jo
sbb
pop
sbb
dec
pop
popa
jo
mov
mov
fistpl
shlb
repz
sub
mov
mov
sbb
loop
push
sbb
jge
sbb
lods
xchg
adc
push
sub
fucomp
sub
xchg
jne,pn
pop
icebp
or
xor
push
lods
dec
mov
push
sub
inc
mov
pusha
cmp
cmpb
push
hlt
cli
leave
cli
addl
lcall
popa
imul
mov
pop
fnstcw
int3
aaa
bound
fdivrs
lea
rorb
mov
mov
nop
outsl
aaa
mov
sbb
dec
cmp
xor
aaa
sbbb
jno
cmp
lahf
lea
jno
popf
stos
sbb
push
sbbl
vcvttss2si
imul
imul
fs
cmp
test
lds
scas
cmpsb
popa
inc
xlat
sub
outsl
inc
dec
mov
cli
fcmovbe
movsb
xor
mov
push
fdiv
mov
stos
push
cli
jl
jl
push
sbb
pop
idivb
scas
cmp
fldcw
pushf
or
mov
imul
push
xor
sbb
push
aas
xchg
adc
jp
fsubl
add
mov
pusha
pop
addr16
pop
mov
pop
outsb
cmp
sbb
mov
jbe
gs
sub
push
sbb
pushf
roll
mov
mov
data16
imul
inc
out
cmpsl
mov
jno
insb
test
jne
clc
mov
lret
xchg
mov
test
std
push
xor
pop
sarb
push
pop
push
add
add
jl
inc
fs
std
push
sar
cmp
pop
movsb
rorb
mov
mov
inc
xor
xchg
insl
aam
arpl
es
jbe
mov
lea
mov
pop
and
mov
aad
xchg
adc
popf
in
out
xchg
pop
test
sahf
and
int
sbb
aad
dec
mov
lahf
mov
cmpsl
insb
icebp
push
int
pop
loope
cmc
gs
cli
sti
ds
loope
xor
iret
or
push
jb
pop
push
inc
and
lods
mov
push
push
std
mov
sbb
divb
jecxz
add
push
inc
add
dec
call
push
mov
repz
adc
xchg
inc
mov
xlat
sbb
sti
push
mov
add
test
jg
sub
push
cmp
push
mov
push
mov
sbb
mov
push
pop
pop
sub
push
sbbl
pop
clc
lret
cld
subl
loope
outsb
test
mov
test
std
adc
jmp
loopne
push
and
mov
sub
insl
aad
lods
xor
jg
or
xchg
ret
mov
pop
lods
dec
mov
movsl
jns
in
mov
ljmp
mov
push
in
sub
cmp
push
fisttpll
fidivs
into
mov
xchg
movsb
sbb
sub
mov
cwtl
inc
mov
push
fwait
sti
arpl
and
jae
out
jecxz
pop
mov
cmp
mov
mov
jmp
mov
je
push
lds
mov
ja
sbb
ret
mov
int
add
fmull
or
add
insb
sbb
int3
lock
in
fcompp
jp
out
sub
clc
int3
scas
push
or
into
insl
lret
scas
orb
pop
sub
jmp
mov
test
sbbb
testl
xor
pop
xchg
pushf
ljmp
sub
repz
push
shl
dec
push
sub
jp
xor
pop
mov
xorb
cmp
sbbb
xchg
pop
lret
dec
test
cwtl
dec
sbb
push
push
push
inc
adc
inc
inc
outsl
addr16
js
add
sti
mov
and
jge
test
mov
pop
mov
mov
fnstsw
movsb
xor
addr16
fdivl
mov
fisubl
into
pusha
movsb
jl
push
cmp
lods
push
adc
xlat
scas
hlt
push
int3
test
pop
aas
mov
cmpsb
nop
lods
aam
push
sbb
push
jl
mov
mov
and
fucomip
cmp
xor
loope
jge
rorb
mov
push
push
fnstcw
sub
lea
jnp
in
cmp
xor
shl
dec
jnp
call
cmp
push
cmpsl
cmp
test
push
cwtl
pop
jae
push
xor
cmp
xor
scas
into
fwait
xor
testb
mov
inc
mov
mov
xlat
outsl
mov
add
negl
jae
mov
mov
xchg
mov
mov
and
fwait
inc
and
cmp
mov
cld
enter
lcall
jne
lods
inc
or
rorl
mov
add
das
xchg
aaa
pusha
js
idivl
out
or
dec
test
inc
or
push
out
cmpb
negl
iret
adc
shlb
mov
jnp
dec
aas
addr16
call
mov
mov
movsl
pop
pop
pop
mov
ja
je
or
pop
lock
add
lods
or
pop
fildll
sti
xchg
in
adc
lea
mov
push
loopne
or
pop
mov
push
and
push
pop
jns
sub
fsubrl
add
mov
and
fsubr
std
incb
out
mov
xor
les
shlb
call
fildll
pushw
ret
jge
cmc
xchg
das
add
int3
mov
xchg
mov
sti
jle
scas
push
and
cwtl
cmp
mov
sub
xchg
or
and
out
leave
mov
aad
arpl
outsl
out
sub
xor
push
mov
push
and
xorb
fidivs
adc
pop
lret
insb
dec
or
pop
and
arpl
and
shlb
pop
ds
pop
out
cmp
outsb
sub
or
cs
adc
sbb
addr16
adc
pusha
popf
hlt
sti
flds
sub
jge
sbb
popl
sub
shlb
sbb
mov
pop
jl
in
cmp
and
mov
out
addr16
lahf
pop
xchg
mov
sti
dec
pusha
cmp
jg
movsl
pop
mov
ja
or
std
pop
int
fcomi
shll
popl
test
shrl
cmp
xor
mov
mov
xchg
xor
int3
inc
in
cltd
sbb
rcl
pop
jb
ds
xchg
or
inc
mov
outsb
pop
mov
push
movsb
rorl
adc
cmpsb
aad
push
inc
mov
push
lds
xchg
inc
dec
sub
jge
sahf
pusha
ds
mov
ljmp
and
mov
mov
int3
mov
push
sub
pop
push
inc
jg
mov
add
test
sbb
je
add
mov
loopne
inc
jns
mov
jge
mov
insb
bound
or
in
push
mov
ret
jbe
or
in
pop
cmp
push
daa
xchg
outsl
cld
dec
shrb
leave
jno
movsl
mov
divb
pop
js
add
cmpsl
pop
es
sarl
ret
push
add
es
jg
dec
pop
outsl
call
cmp
mov
xchg
mov
adc
mov
and
shll
sub
testb
lods
add
push
std
incl
mov
jle
imul
out
hlt
cmp
jmp
fdivl
fmuls
add
cmp
popf
or
loop
jb
mov
sub
mov
inc
ds
adc
jo
cs
mov
cwtl
repz
jge
push
movsl
mov
sti
ss
aas
loopne
addr16
pop
xor
ljmp
pusha
pop
push
xor
xchg
imul
movsb
enter
das
test
mov
movsb
cli
push
lcall
inc
xor
add
gs
dec
adc
mov
aaa
sbb
sub
lods
hlt
inc
aas
gs
ret
jp
mov
add
xchg
cmp
jno
jmp
icebp
lahf
shlb
mov
inc
xor
push
mov
dec
fisubrs
sbb
adc
jnp
je
test
jb
mov
mov
repnz
sbb
movsb
xchg
add
gs
in
mov
sub
popa
lock
dec
pop
lcall
add
jl
sbb
mov
in
push
ret
mov
imul
pop
in
xchg
sub
ds
mov
orb
enter
lock
sub
jp
xor
mov
popl
outsl
andl
test
je
adc
jl
jbe
or
cltd
xchg
adc
mov
insl
loopne
mov
sbb
popa
mov
jg
aam
and
in
xchg
lret
xchg
pop
add
inc
mov
imulb
sbb
ljmp
or
mov
xor
or
jge
mov
pop
arpl
push
inc
sbb
dec
adc
mov
xchg
xchg
xor
or
inc
into
cmp
cmp
pop
push
aaa
adc
sbb
xlat
rorl
jae
add
je
sti
in
adc
sub
mov
into
sub
rcrb
sub
dec
dec
mov
inc
push
lea
and
pop
outsb
mov
aaa
fadds
mov
mov
fstpl
inc
dec
push
inc
cmpsl
mov
femms
mov
sub
or
insl
xchg
test
outsb
jnp
mull
sti
test
lcall
test
mov
jg
adc
add
cmpsb
gs
frstor
adc
jo
ds
aaa
cmc
xor
xlat
sbb
sbb
in
inc
je
or
inc
dec
xor
test
test
fwait
adc
movsl
jb
aad
lea
mov
aad
popa
cs
hlt
in
add
bound
jb
pop
jl
rorb
ljmp
adc
jb
in
into
loopne
cmp
mov
xor
loope
addr16
cmpsl
mov
jmp
adc
sbb
push
or
sub
xchg
xor
repz
inc
cltd
stos
ljmp
ficomps
pop
xor
mov
sbb
out
push
dec
lret
sub
lock
fcoml
jge
mov
xchg
fst
enter
int3
fisubrs
sbb
mov
dec
mov
push
mov
and
xor
jle
rcrb
jb
ret
sub
xchg
scas
or
cltd
adc
sbb
jb
lea
fstps
bound
cmpb
cmp
ret
in
jo
lret
dec
test
jle
mov
pop
sbb
sbb
ljmp
adc
sbb
fwait
xchg
imull
fbld
incb
add
fadds
ja
sar
mov
xchg
xor
mov
jnp
out
xchg
adc
xchg
dec
aas
inc
ret
lds
popa
mov
jecxz
sub
lods
and
enter
cld
flds
push
addr16
mov
ror
aam
mov
xchg
pop
or
icebp
jge
loope
jmp
or
ljmp
movsb
iret
pushf
fldenv
mov
sbbl
xchg
xchg
stos
into
call
xor
stos
xchg
jl
imul
xlat
push
cli
outsb
jne
roll
dec
cmp
cltd
and
aaa
movsb
test
stos
or
cmpb
pop
sub
insl
jge
and
int
out
mov
imul
cmp
sarb
lret
xchg
jae
mov
call
and
in
fwait
push
jge
test
pop
pop
sbb
jle
adcb
mov
test
popf
std
insl
mov
int
jge
jo
fcom
cs
jno
addr16
in
push
cli
ds
rcrb
dec
or
repnz
aaa
in
rol
out
dec
cmp
sbb
add
test
andl
aaa
xchg
cmp
push
sbb
push
mov
loope
push
insl
push
int
addr16
xchg
add
call
xlat
dec
cmpsb
imull
inc
insb
push
ret
aad
xor
add
mov
mov
inc
bound
xchg
stos
test
add
inc
adc
sub
jg
sbb
stos
sbb
int3
lahf
adc
cmp
sub
test
mulb
mov
into
cli
ljmp
or
lret
xor
jmp
and
sub
sarb
pushf
ret
mov
add
xchg
sbb
data16
int
sub
sbb
pop
push
sub
push
insl
in
insl
sbb
adc
push
xchg
sbb
fcmovnbe
cmp
lds
aaa
gs
lods
inc
lods
mov
mov
or
xchg
xacquire
cli
insb
out
lret
sbb
jp
icebp
adc
pop
add
ret
sub
add
jno
in
sbb
cmc
hlt
sbb
adc
inc
nop
adc
mov
jb
insb
mov
loopne
add
mov
inc
bound
xor
mov
lods
or
jecxz
xchg
es
xchg
vmread
outsl
jmp
aad
je
loop
loope
push
es
push
ret
sbb
incb
adc
paddb
aad
pop
lds
cld
xorl
sbb
pop
xor
xchg
jle
add
cmp
shl
push
inc
inc
dec
xorb
mov
jp
push
outsl
mov
cld
mov
jne
addb
cmp
and
or
dec
dec
or
mov
callw
loope
ret
or
sbb
push
xchg
cmp
insb
cltd
rclb
mov
adc
arpl
pop
cmc
xchg
dec
jb
cmp
repnz
mov
sub
pusha
and
in
aam
fidivs
xor
adc
and
std
pop
mov
ja
fs
add
out
shlb
out
mov
inc
les
test
loopne
xchg
movsb
cwtl
cltd
mov
popa
mov
sbb
in
out
stos
icebp
or
arpl
int3
sub
sbb
mov
ja
push
in
aas
cmpsl
mov
lods
dec
leave
push
pusha
cmpb
call
lods
and
out
push
add
out
push
gs
and
repz
fwait
scas
mov
cld
aam
jo
in
mov
add
inc
pop
out
in
pop
or
xor
push
repnz
mov
ret
mov
stc
fcoml
dec
loop
loopne
push
jle
inc
mov
leave
jae
gs
mov
sbb
pushf
fdivrl
incb
int
xor
adc
sub
repnz
mov
fiaddl
sbb
cmp
outsl
mov
add
hlt
ds
sti
push
or
cmp
hlt
rcr
ret
mov
arpl
lret
rcrb
mov
out
sahf
add
cmp
das
pop
aam
subl
and
sbb
popl
into
inc
arpl
aam
sbb
jmp
je
xorl
add
push
cli
push
div
sub
lret
mov
mov
cmp
sub
mov
fs
lret
add
xlat
pusha
movsb
popf
js
xchg
dec
jmp
imul
mov
lret
les
mov
and
sub
dec
add
pop
hlt
or
out
push
and
addr16
mov
mov
mov
sbb
mov
mov
adc
adc
pop
lahf
pop
jae
lret
cmp
js
sub
sub
std
loop
lods
add
sti
lods
cmp
inc
sub
sar
mov
outsb
sbbl
push
pop
and
iret
mov
mov
push
lret
jo
mov
ror
add
ss
paddb
mov
ljmp
loop
inc
mov
adc
add
and
mov
fimull
push
movsl
addl
aas
js
daa
incb
dec
add
mov
insb
sbb
and
imulb
jge
add
fcomi
cld
fistps
pop
stos
fsubrl
std
fldt
ret
dec
sbb
adc
int
sub
test
push
mov
fs
int
mov
or
push
push
sub
adc
dec
imul
jb
fisttpl
cli
add
jg
jno
adc
pop
in
mov
jmp
sub
mov
lcall
or
addb
js
lea
pushf
cli
in
int
adc
inc
fdivrs
fwait
jp
sub
ds
sub
bound
mov
xchg
lahf
push
sub
pop
cmp
mov
aaa
sub
or
push
push
mov
sbb
sub
stc
jns
xor
rol
jmp
cmpsb
fisubrl
pop
sub
and
ret
hlt
jmp
xchg
test
push
dec
out
test
call
sbb
sbb
pop
jp
push
arpl
sarb
cli
sub
push
push
dec
orb
idivl
mov
or
out
mov
dec
cmpsb
add
rclb
mov
repnz
adc
inc
adcl
andb
jbe
fadd
idivl
pop
pop
xor
cltd
or
add
test
outsb
jns
cmpsl
adc
enter
dec
mov
insb
push
push
fdivrs
and
repnz
lahf
mov
ret
negl
dec
aam
addr16
mov
aaa
jbe
arpl
enter
cmp
mov
pop
xchg
stos
mov
stos
push
mov
xlat
leave
inc
adc
frstor
xchg
mov
cmp
popa
in
ss
push
movsl
push
jo
fcmovnb
popl
adc
imul
scas
pop
sarl
pop
iret
xchg
xchg
push
sbb
scas
bound
in
in
dec
call
loope
int
jns
rcrl
fcmovne
push
and
inc
fildl
mov
mov
add
ret
add
xor
andb
insb
les
iret
movsl
aad
mov
jl
shrl
sub
ffree
cs
in
jmp
cmp
push
jg
pop
aam
xchg
and
cmp
jae
jbe
testb
sahf
inc
sbbb
repz
lock
cmpsl
push
pop
push
mov
scas
jmp
shlb
mov
std
pop
adcb
ds
or
xchg
repnz
scas
leave
add
cmp
and
sub
std
gs
pop
lahf
or
adc
shll
cmp
cmpsl
pop
push
pop
dec
std
and
or
pop
xorl
je
lahf
mov
fs
jne
adc
pcmpeqw
outsb
dec
cli
ljmp
mov
ret
std
rclb
push
mov
out
hlt
je
dec
in
ret
inc
stos
inc
dec
push
movb
hlt
cltd
js
cmpsb
rol
cltd
dec
cmp
xchg
fcoml
lods
cmp
mov
addr16
ret
stos
in
fbstp
pushf
add
std
add
dec
out
mov
jg
mov
scas
jle
jge
adc
enter
adc
arpl
movsl
fbld
jge
dec
push
add
add
in
mov
movsl
jnp
ret
ds
push
sub
repz
lret
stos
adc
je
pop
jge
xchg
call
mov
pushf
mov
outsl
in
in
jo
gs
cmp
mov
enter
adc
xchg
or
lods
mov
jno
push
xchg
fisubrs
sbb
fs
mov
pushf
add
mov
jmp
stc
jle
push
or
sbb
lret
sbb
popf
jb
mov
cmp
mov
push
out
cwtl
stos
xchg
call
xchg
sarb
fildl
inc
adc
es
sar
mov
xchg
jb
rcrl
ret
ljmp
aam
jge
dec
cltd
cmp
xlat
inc
shl
jbe
das
scas
cmc
cltd
pop
mov
mov
pop
cmpsb
sahf
pop
xchg
adc
lret
pop
stos
xchg
mov
rolb
roll
push
leave
mov
mov
ror
xchg
sbb
ret
add
push
in
inc
prefetch
or
add
add
ret
lret
sub
in
cmpsb
mov
mov
shlw
ds
mov
mov
pop
sbb
xlat
les
xchg
cmp
data16
lock
sbbb
add
and
pushf
stc
push
imul
mov
dec
dec
or
sub
loop
sub
add
lcall
dec
mov
clc
jnp
cmp
cld
incl
or
test
mov
je
out
sub
inc
lea
std
sarl
out
or
das
mov
daa
add
dec
sbb
sub
pop
mov
rorl
mov
test
cmpsb
lods
les
adc
int3
cmc
push
pop
enter
mov
in
pop
or
or
jmp
into
jmp
sbb
adc
mov
mov
xchg
or
cld
sahf
mov
lods
mov
outsl
rcrl
je
jbe
test
mov
inc
xchg
negb
jmp
lcall
inc
cld
dec
stc
jle
popa
xchg
cmp
cmpsb
loope
or
aaa
jle
js
push
xor
insb
lcall
bound
inc
test
xchg
out
cmpsb
aas
and
sahf
cmp
sbb
call
rol
pop
and
insb
clc
fisubrs
imul
lahf
mov
jbe
or
push
jge
pop
loop
adc
cmp
sub
addb
les
xor
add
rcrl
cli
mov
cmp
nop
call
fadd
notb
repnz
adc
push
mov
pusha
or
push
in
fbstp
and
dec
aaa
cmp
pop
enter
sbb
sti
out
xor
mov
or
in
push
aad
les
jae
xor
insb
adc
xor
add
bound
cmp
pop
sub
mov
arpl
push
jo
andb
stos
adc
cs
or
mov
adc
xchg
addb
push
ds
and
outsl
repnz
adc
aam
sti
xor
mov
xchg
push
and
or
jg
pop
ret
dec
ds
pop
les
mov
sub
clc
fcomi
xchg
push
sbb
xchg
out
aam
repnz
roll
jo
mov
movsb
lea
sub
sarb
and
fidivrs
inc
aas
jno
xchg
les
or
xor
xor
lcall
fsub
push
adc
fcomp
aad
pop
int3
out
daa
push
icebp
mov
jl
push
mov
inc
test
es
sti
dec
mov
in
mov
das
in
dec
push
movsl
sti
lock
loop
test
inc
sahf
xchg
inc
xorl
cs
mov
add
push
enter
or
in
ret
inc
addr16
and
insb
nop
ret
loopne
mov
in
mov
cmpsb
pop
bound
inc
rcrb
fnstenv
dec
stos
lds
mov
mov
xchg
jg
mov
pop
inc
jg
or
adcb
add
jno
dec
mov
sbb
push
or
pushf
loop
dec
mov
dec
call
fsubs
sbb
lret
movl
push
push
out
iret
test
jbe
jb
lods
jl
adcb
arpl
sbb
pop
sub
mov
lods
mov
fcoml
jl
stos
imul
aas
cmp
gs
insb
sub
jb
mov
bound
ret
repnz
push
out
outsl
pop
mov
insl
cmp
lahf
adcl
icebp
sbb
mov
mov
dec
int
lahf
hlt
arpl
dec
and
mov
aam
inc
aas
inc
ljmp
notl
out
inc
pusha
rorb
aam
add
fistps
data16
pusha
loope
or
pop
sub
xchg
add
and
leave
xchg
aad
popa
in
fimuls
push
mov
xchg
rsm
jmp
movsl
mov
sti
xchg
dec
in
pushw
mov
adc
push
aaa
mov
cwtl
adc
mov
fidivrs
int3
jns
icebp
inc
fwait
xchg
fstpl
sbb
xor
jo
sbb
cmp
insb
pop
or
mov
jp
cld
push
jae
mov
mov
arpl
inc
cwtl
pop
dec
add
or
lea
xchg
sub
jle
jle
mov
push
pushf
inc
xchg
adc
cmpsl
aas
mov
dec
push
pop
dec
push
lods
cmc
jp
push
cmpsl
mulb
or
mull
jecxz
es
push
aaa
cwtl
loopne
scas
cmp
jp
movsb
xor
aad
mov
gs
pop
inc
xor
xchg
mov
jne
in
in
clc
lods
inc
mov
arpl
push
gs
cmp
adc
mov
and
mov
out
mov
inc
push
clc
jg
jns
ja
fdivrs
mov
testb
xor
cmp
xchg
jno
pushf
fmuls
aas
out
dec
out
cmp
sub
lahf
popa
mov
push
psubusw
inc
xchg
stc
jge
test
in
mov
jle
movsb
loop
fcompl
mov
adc
ret
in
jne
movsb
mov
rorl
adc
sbb
in
mov
rcrl
add
push
adc
xlat
mov
scas
and
ja
arpl
jmp
push
sub
xchg
mov
and
clc
and
xchg
je
mov
fdivrl
adc
pop
iret
mov
pop
pop
xchg
adc
pop
cmp
push
add
mov
lcall
lds
xchg
xor
mov
loop
mov
movsl
andb
dec
lret
cmp
sbb
imul
lahf
sub
and
xor
mov
sub
jnp
mov
sbb
cmp
mov
popf
mov
inc
in
add
sbb
xor
sub
call
cmpb
cmp
sub
pop
sub
scas
push
out
xor
call
sub
addr16
sahf
inc
add
and
gs
sub
pop
rcll
xchg
push
push
push
push
add
xor
lds
sub
nop
imul
mov
xchg
sub
in
sbb
and
arpl
and
and
pop
add
lcall
sarb
pushf
adc
push
hlt
lods
outsl
lds
cmp
loopne
pusha
stc
es
sub
jle
ljmp
int
mov
mov
dec
ja
outsb
or
inc
sub
sub
sub
adc
fdivs
inc
mov
mov
sbb
fwait
addl
or
lahf
out
arpl
popa
les
mov
hlt
inc
leave
push
cli
rorb
outsl
pop
push
call
jb
scas
add
sbbb
jbe
and
sti
int
and
xlat
dec
lea
dec
dec
dec
push
cld
jecxz
popa
inc
pusha
jnp
xor
clc
mov
es
inc
xor
pusha
jae
repz
inc
xlat
and
adc
mov
or
ja
inc
pop
loop
mov
push
inc
cmp
fnstcw
mov
inc
cmp
orb
fldcw
mov
stc
dec
jle
jl
test
je
daa
aas
push
inc
sub
insb
in
cli
push
sub
lahf
or
data16
repnz
iret
fcomps
leave
push
movsb
call
fcmovnbe
xor
mov
pop
push
js
out
rorl
mov
mov
inc
xchg
test
int
subl
clc
mov
jbe
and
mov
adc
cmpsb
iret
add
dec
sub
cmp
or
adc
lea
adc
push
sub
lcall
rorb
in
xchg
inc
mov
sub
sbb
jb
push
xor
bound
movsl
fs
int3
cmc
sub
loopne
mov
push
mov
pusha
cmp
lret
sbb
jp
ret
divl
xchg
mov
pop
jbe
negl
bound
xchg
mov
sbb
push
push
inc
outsl
aad
ss
out
pop
sbb
lods
repz
jl
xlat
imul
pop
add
sbb
dec
lret
xchg
dec
xchg
add
adc
sbb
sahf
pop
xor
cmp
push
sub
or
out
mov
xchg
sbb
jp
inc
into
dec
fcmovu
push
dec
xor
fiadds
into
dec
cld
add
mov
int
xor
hlt
repz
mov
pop
popf
loopne,pn
rorl
inc
xor
cmp
js
aas
mov
jge
movsl
cmp
js
or
dec
inc
ss
leave
aaa
js
lock
popf
test
pop
jle
sub
pop
push
adc
jns
push
lcall
lea
adc
mov
mov
imul
cmpsl
adc
lock
jp
push
mov
cmp
push
stc
cmp
jg
sarb
add
leave
fisubrl
rcrb
lcall
shll
lahf
lea
sbb
cld
push
sub
pop
sahf
lods
add
leave
pop
fsts
mov
decl
push
outsl
mov
adc
jb
arpl
movsb
shll
and
ds
sbb
fcomps
pop
cs
add
test
popf
and
out
jns
mov
rcrl
jmp
sbb
iret
hlt
add
pop
cltd
out
int3
and
ret
test
pop
sbb
or
lahf
sbb
repz
int
ljmp
add
pop
jnp
inc
cwtl
and
xchg
mov
dec
lock
xor
push
pop
mov
btr
aas
cmpsl
pop
adcl
xor
jne
xchg
lock
sahf
push
and
mov
adc
xor
jae
pusha
ret
popf
mov
push
and
lret
mov
push
push
jbe
xor
aad
xchg
pop
sub
jnp
add
insl
stc
out
lods
rorb
mov
mov
add
add
pop
ljmp
aam
push
xor
lds
adc
xchg
outsb
js
inc
test
mov
dec
icebp
and
push
ror
iret
sahf
dec
movsl
stos
cmpsl
scas
adc
out
fidivl
lds
inc
ficompl
addl
inc
cmpsb
jbe
negl
mov
add
lds
mov
movsl
repz
jle
inc
movsb
ss
arpl
mov
push
negl
pop
ljmp
lahf
mov
jge
mov
lock
xchg
cmp
sbb
mov
fistl
jns
adc
fwait
cmp
sbb
push
sbb
sbb
bound
cmc
mov
movsl
lea
popf
xchg
loop
test
fwait
cmp
test
jle
repnz
push
mov
push
cmp
scas
cltd
mov
mov
cmpsb
fiaddl
sbb
cmpsl
jae
jle
push
cs
repz
sub
lret
fsts
imul
mov
test
loopne
dec
dec
ljmp
arpl
xorl
pusha
sbb
lock
sti
mov
pushf
in
sti
push
pop
jp
scas
and
xor
sbb
iret
stc
fimuls
push
pop
popf
call
pop
cmp
lcall
jp
adc
jg
mov
inc
mov
repnz
mov
push
sub
mov
std
andb
fisttpl
mov
aad
imul
pop
xchg
fcomps
in
lret
aaa
js
ja
push
pop
ljmp
movsl
mov
repnz
push
in
imul
sub
lcall
jge
mov
mov
jl
fadd
or
sbb
ja
pop
push
mov
pop
dec
xchg
aad
mov
rolb
or
insb
add
incl
out
stos
xor
out
int3
or
int3
cmp
or
int
nop
push
les
xchg
lcall
xchg
mov
push
fists
or
pop
jl
pop
xor
loopne
test
data16
mov
scas
mov
sbb
cltd
flds
flds
not
lcall
mov
fdivp
push
jge
jne
mov
mov
daa
push
mov
lods
cld
cld
loopne
cli
clc
stc
cpuid
adc
popa
testl
mov
mov
jnp
inc
mov
cmp
sub
jecxz
mov
push
jne
rorl
mov
in
xchg
jae
mov
and
rcr
jl
outsl
cmp
js
jp
pop
push
mov
lds
sub
mov
dec
mov
shlb
push
pop
adc
inc
lea
push
sbb
stos
in
fdivrl
adc
fildl
jbe
in
xor
add
les
dec
inc
mov
xor
sub
sbb
lret
aam
iret
loope
sbb
mov
jnp
adc
mov
cmc
add
mov
mov
mov
pop
or
adc
roll
es
mov
push
ja
lods
scas
out
mov
lock
andb
fsts
sbb
push
cmovae
arpl
xchg
je
cmpsb
mov
enter
pop
lods
cmpsb
int
xor
xor
fneni(8087
xor
out
fwait
repnz
enter
xchg
lock
fmull
cmp
fmuls
pop
pop
stos
out
jnp
jb
mov
sub
add
loope
xchg
mov
in
call
int3
dec
mov
xchg
loopne
sbb
test
stc
sbb
scas
inc
popf
dec
js
lahf
push
ss
insb
cwtl
jmp
into
in
or
addl
ja
lea
adc
mov
or
pop
cmp
popa
scas
cmp
xor
mov
pop
cmp
hlt
fidivl
sbb
adc
add
pop
or
sub
mov
stos
lods
mov
push
or
push
aas
mov
fldt
lcall
mov
or
push
sub
adc
dec
out
adc
push
jl
jle
mov
jmp
notb
insb
pop
shlb
pop
xchg
mov
xor
push
dec
outsl
lds
push
int
fxch
enter
test
sbb
sbb
outsb
and
xchg
dec
mov
idiv
stc
lea
outsb
sahf
dec
dec
repz
jmp
jae
lret
icebp
pop
xor
or
xchg
jbe
lock
inc
or
mov
mov
in
stos
inc
dec
cmp
add
fcoml
incb
sarl
or
pop
out
cmp
jle
and
mov
jnp
bound
inc
xor
inc
jg
mov
enter
push
pop
and
or
outsb
push
and
pop
stc
mov
xchg
in
mov
cmp
xlat
popf
cs
lret
sti
inc
dec
div
addr16
pop
sbb
inc
in
adc
inc
pop
jbe
push
scas
or
ds
dec
cwtl
push
orl
pop
add
mov
fdivl
popf
jns
cmp
imul
inc
xchg
lds
arpl
mov
bound
mov
loope
out
in
pop
dec
and
inc
xchg
mov
xchg
test
pushf
cmp
xchg
rol
mov
or
int3
ret
fadds
mov
mov
add
and
xlat
hlt
adc
xor
loop
fsubrs
mov
rol
dec
sub
test
pop
stos
mov
xchg
xor
leave
clc
fdiv
push
shrl
das
repnz
push
std
xor
push
sub
sbbb
aas
dec
sub
adc
test
nop
push
out
add
outsb
imul
push
mov
mov
cmc
aas
mov
cld
jns
mov
ds
movsl
aas
fs
stos
push
xor
add
orl
repz
or
dec
imul
mov
dec
sub
cmp
push
mov
aad
fstpl
push
push
mov
cmpsl
out
mov
je
subl
push
fstps
mov
xchg
xchg
add
jp
sub
imul
sbb
jns
mov
or
mov
sarb
adc
xchg
adc
inc
inc
pusha
fists
dec
or
movsl
cltd
or
push
fdivs
shlb
mov
or
xchg
dec
cli
and
xor
dec
cmp
sbb
out
lods
cli
xchg
sahf
data16
cmc
pushf
add
mov
cmc
data16
cmp
cli
jbe
push
sub
xchg
cmpsl
enter
icebp
mov
aaa
cmpsl
mov
jmp
rcrb
mov
mov
shlb
push
mov
pushf
jle
push
stos
inc
mov
mov
mov
in
adc
jmp
push
cmp
out
mov
mov
mov
push
aam
xchg
cmp
sbb
cwtl
pop
fmull
imul
mov
or
or
push
data16
cwtl
cmpsl
out
push
je
fsubrs
es
fisubrl
pusha
add
jg
flds
pop
aaa
pop
cli
in
pop
jg
popa
add
adc
cmp
inc
stc
sub
faddl
je
faddl
or
ja
aas
inc
push
adc
lahf
dec
push
push
push
cltd
pop
lods
ljmp
adc
cmpsb
imul
cli
add
inc
mov
mov
jne
cmpsb
dec
aaa
pop
dec
stos
xor
decb
lahf
orb
sbb
xor
adc
clc
cld
or
pushf
inc
lcall
dec
adc
adc
cmp
aam
jno
pop
sbb
and
es
pushf
ljmp
sub
int
std
inc
or
and
mov
mov
mov
jae,pt
fcomps
or
fwait
scas
in
push
insl
jns
and
xchg
push
aaa
xchg
mov
in
mov
jbe
fnstsw
loop,pt
xor
mov
xchg
lret
scas
xchg
push
adcl
mov
cmpsb
movsb
cwtl
cmpsb
adc
lret
jmp
xchg
and
cli
loope
or
aas
jno
lock
dec
push
movsb
jbe
test
shlb
xor
xor
and
pop
shrb
fsts
mov
ret
or
pop
aad
add
fwait
bound
ret
mov
jecxz
jg
mov
add
jecxz
xchg
add
mov
mov
imul
cltd
test
insb
pop
push
dec
push
shrl
jo
push
xor
push
add
das
mov
insl
inc
loope
imul
cmpl
sub
loope
fistl
adc
roll
push
ja
add
add
sub
pop
aad
and
ss
pop
push
push
add
insl
xor
shlb
or
or
cmp
test
mov
push
daa
dec
mov
xchg
and
bnd
roll
dec
or
xchg
mov
dec
or
lock
xor
mov
shrl
std
js
outsl
testb
jg
sahf
adc
cld
cwtl
jmp
mov
fdivrl
push
and
cmp
icebp
cmc
fwait
mov
cmp
adc
xchg
stos
adc
scas
iret
push
and
sub
cmp
call
mov
xor
sbb
cmp
sub
ret
popf
fsubs
iret
cmpsb
fldt
imull
mov
push
or
fdivr
mov
or
scas
enter
stc
movsb
add
mov
dec
inc
pusha
test
xchg
mov
das
sbb
cmpsb
popf
xor
and
mov
or
inc
iret
fcmovu
jo
sbb
cwtl
rorb
ret
and
fnstcw
stc
inc
inc
xchg
int
mov
mov
nop
pop
fldt
sbb
push
inc
mov
jp
in
sbb
daa
fs
and
push
xor
cwtl
xchg
dec
in
xchg
test
mov
pop
jo
cmpsl
ss
fmuls
mov
dec
inc
cld
xchg
ret
ljmp
push
inc
ljmp
sbb
shl
adc
clc
leave
jg
stos
addr16
addb
dec
aaa
adc
and
movsb
sub
xchg
pop
or
push
jge
aas
hlt
clc
or
push
pop
adc
sub
mov
xlat
and
mov
jle
jl
movsl
sbb
pop
cwtl
repz
jg
cwtl
or
dec
jmp
inc
dec
and
or
popf
add
or
mov
cmpsb
out
xlat
dec
insb
inc
sbb
outsb
repnz
rclb
je
push
adc
jbe
hlt
stos
mov
push
in
lods
fstps
clc
jl
sarb
in
in
mov
cmp
mov
inc
jo
inc
lods
push
and
je
into
test
rorl
or
mov
mov
rcrl
adc
push
inc
dec
leave
jo
outsl
sbb
lahf
cs
js,pt
or
in
fcmovne
inc
or
dec
push
in
int3
push
jno
add
sbb
aam
fbstp
xchg
xor
add
xor
pusha
xor
mov
cmc
sbb
daa
test
xor
mov
je
jno
mov
pop
pop
xchg
mov
dec
aam
dec
ret
jecxz
cwtl
ja
rcl
out
lds
je
or
lods
test
mov
in
cwtl
xchg
in
mov
notl
dec
icebp
hlt
push
fdiv
cmc
stos
dec
test
shrb
negl
xchg
sbb
xor
mov
inc
fs
iret
fnstcw
xchg
clc
sbb
push
mov
pusha
mov
cmp
mov
lock
arpl
cltd
jp
mov
insl
inc
fldcw
mov
sbb
or
pop
mov
nop
pusha
movsb
inc
xchg
push
pop
jmp
shr
iret
inc
xchg
mov
ret
nop
mov
iret
sub
xchg
data16
test
andl
pop
or
iret
jge
xchg
pushf
jecxz
jns
stos
cmpsl
lods
dec
and
mov
sub
mov
inc
dec
push
cld
xor
mov
push
test
xchg
into
sbb
les
add
int3
pop
jne
testb
adc
sub
frstor
fists
or
loope
mov
inc
repnz
aaa
shll
cs
sub
insb
aam
loope
push
inc
sub
cli
mov
inc
insb
add
and
dec
aas
adc
jb
cmp
dec
xchg
data16
jmp
jnp
lock
xor
jg
dec
cmp
xchg
push
adc
dec
std
mov
cmp
mov
pop
mov
pop
fidivl
xlat
flds
imul
int
aam
xor
dec
cmovno
lock
outsl
pop
jne
daa
out
jge
xchg
xorb
shlb
mov
jnp
mov
xchg
xor
cmp
es
mov
js
inc
and
adc
dec
jb
dec
add
mov
cmc
test
sub
or
stos
mov
fstpt
decl
call
aaa
pop
outsl
lret
out
adc
pop
mov
and
mov
push
pop
mov
into
inc
xor
subl
sub
sub
shrd
pop
dec
ret
pushf
test
cld
repz
pusha
sbb
jo
xchg
mov
xor
insb
andb
daa
shlb
cmp
out
bound
mov
xchg
and
sub
jnp
add
repz
xor
imul
fistps
cltd
fwait
mov
push
pop
xor
nop
js
jne
or
ja
jg
int3
out
lahf
int3
ret
out
jbe
fucomip
mov
loop
sub
sbb
push
mov
adc
das
cli
mov
popf
cmp
into
xor
rol
push
loop
jno
push
popa
or
pop
je
clc
sub
ret
adc
inc
jl
push
or
dec
xchg
jge
dec
cltd
leave
xor
add
pop
jmp
insb
ret
movb
stos
dec
popa
in
ret
ds
insl
idivb
call
lahf
xor
fucomp
mov
mov
fstpt
xchg
das
outsl
adc
or
dec
movsb
cmp
fwait
mov
imul
ja
push
aaa
dec
adc
xor
mov
xchg
aaa
jp
dec
sbb
xchg
sub
mov
cmp
mov
sbb
mov
sub
int
fwait
sahf
dec
movsb
mov
fstpl
jbe
cli
cltd
push
xchg
decl
aas
jmp
cmpsl
call
data16
cs
fadds
xchg
ljmp
mov
xor
mov
adc
cmpl
push
xor
mov
and
mov
aaa
frstor
sbb
push
mov
cmc
inc
mov
popf
jno
cmpsb
or
in
lret
aas
xchg
mov
rolb
sub
mov
or
fs
jmp
rcl
mov
les
int
push
fldcw
push
cmp
adc
mov
mov
in
ds
pusha
xor
addps
push
test
pop
orb
jp
neg
mov
and
sbb
xor
nop
adc
shlb
pusha
je
data16
dec
lret
mov
cli
leave
lods
test
adc
sub
loope
cmp
cmp
inc
test
or
or
repnz
inc
xchg
testl
rclb
out
push
pusha
fdivs
mov
iret
jg
push
dec
fists
shr
test
mov
jbe
repnz
fwait
rolb
and
sbb
dec
jno
cwtl
fscale
mov
rol
pop
mov
push
jns
rcr
fbld
stos
movsbl
inc
add
cmp
imul
sub
mov
lret
xor
xor
testb
or
loopne
sbb
sbb
mov
jae
adc
adc
loope
orl
cs
and
es
call
enter
pop
cmpsl
xchg
leave
xchg
push
jl
out
into
and
faddl
jmp
pop
xchg
xchg
lock
pop
into
mov
or
fcomi
add
lods
xchg
dec
dec
sub
push
mov
subb
inc
iret
fidivl
inc
adcl
out
repnz
adc
add
and
ss
cmpsl
add
testl
lds
ret
and
lods
lods
jne
test
push
sbb
shll
in
mov
jnp
popf
into
mov
mov
mov
in
movsb
pop
aaa
or
cmp
adc
push
lret
rorb
and
pop
mov
cmovo
mov
aas
into
outsl
or
push
jle
adc
dec
mov
rcll
das
cmpl
mov
cmpsl
cli
loopne
mov
cmpsl
in
mov
dec
inc
das
scas
sub
loop
lea
pop
clc
pop
aas
push
fs
nop
mov
pop
pushf
lock
inc
outsb
jle
sub
jbe
cli
inc
jnp
ds
xorb
add
or
inc
mov
repnz
and
sub
push
dec
dec
jmp
addr16
inc
out
popa
xchg
nop
fwait
lods
mov
stos
pop
xorl
mov
push
addr16
and
scas
not
xor
addr16
xchg
shlb
and
mov
jl
pop
xchg
cmp
push
xor
fwait
xchg
ficompl
lods
lds
and
adc
mov
mov
add
cltd
cmp
mov
popa
jns
cmp
jmp
mov
inc
pop
enter
dec
js
loop
cmp
stos
aad
mov
mov
orl
mov
movsb
add
das
les
lods
xor
and
ret
cmc
shl
cltd
lcall
arpl
cmp
jle
out
inc
dec
outsb
inc
add
jmp
jecxz
and
ds
loop
aam
ficoms
fsts
inc
xchg
cmp
out
dec
and
inc
insb
loope
jg
push
and
lret
push
fmul
out
addr16
adc
rcll
testl
mov
xchg
jmp
iret
out
cmc
mov
stc
mov
daa
ljmp
icebp
pop
push
xchg
add
mov
xor
sbb
and
inc
addl
sbb
ret
sahf
pop
xchg
pop
pop
loope
rol
inc
push
cmp
pushf
fildll
xchg
in
fcompl
movsb
xchg
sti
aas
inc
add
inc
iret
push
inc
in
loope
mov
inc
sti
mov
adc
xchg
xchg
mov
ss
and
push
inc
inc
and
jl
testb
loop
add
mov
adc
pop
out
pop
mov
mov
test
push
scas
mov
or
sub
outsb
mov
pop
movsb
fldcw
scas
add
sbb
call
jle
cmpl
inc
sarb
adc
icebp
out
dec
push
jmp
sahf
in
into
lahf
cmp
int3
jge
xchg
dec
loopne
push
repz
test
outsb
cmpsb
inc
or
inc
mov
rep
loop
cltd
pop
je
mov
outsb
ret
loope
add
add
cwtl
mov
sbb
jo
cld
dec
add
lahf
inc
pusha
nop
push
or
xor
adc
sahf
jns
out
test
sbb
adc
mov
or
ja
xor
pushf
adc
push
adc
jmp
xor
or
minps
sub
xor
imull
lods
pop
cmp
xchg
int3
shll
test
push
sbb
or
xlat
aam
enter
push
out
stos
dec
push
dec
fs
stos
pop
xchg
int
inc
cmpsl
fwait
sbb
data16
add
and
inc
jae
int
mov
out
cmpsl
xlat
mov
lds
jg
sub
in
cmp
adc
les
pop
xchg
push
xor
pop
pop
mov
insl
mov
movsb
pop
popf
xchg
popf
movsb
jl
fmuls
ja
out
sub
loope
adcl
xor
nop
adc
jae
adc
sbb
jmp
add
fs
lods
inc
sahf
outsb
in
adc
and
push
jbe
call
out
mov
xchg
dec
mov
movsb
les
out
sub
sti
lods
jmp
outsl
xchg
jns
push
pop
scas
js
mov
scas
gs
sbb
cmc
sbb
xchg
jmp
fisubrl
add
fistpl
adc
mov
xchg
daa
int3
mov
jbe
xor
lods
stos
pop
xlat
xlat
int
pop
or
faddl
outsb
mov
adc
sub
cs
repnz
xor
fistl
leave
and
mov
arpl
aaa
stos
or
xchg
insb
or
insl
xchg
pusha
dec
lock
shlb
cmp
cmp
insl
aaa
fsubs
cli
andl
cli
jmp
adc
rcrl
sub
daa
in
std
lods
mov
pop
shlb
mov
jno
cmpl
mov
mov
inc
shlb
out
xor
sbb
xor
xchg
in
aad
adc
fmuls
mov
lcall
inc
fsub
xlat
and
pop
aam
or
loope
scas
test
out
fwait
push
ds
and
adc
push
inc
mov
mov
mov
inc
dec
inc
push
stc
inc
hlt
outsb
insl
push
lahf
mov
stos
cltd
test
adc
or
push
inc
sti
lcall
cltd
xlat
cmp
sbb
jne
ret
push
and
xor
xor
dec
enter
fucomip
sbb
pusha
scas
aam
mov
add
xor
test
in
dec
mov
icebp
adc
lret
adc
jmp
lret
outsl
loope
fisttps
lods
cmpsb
fwait
std
in
adc
adc
outsl
mov
outsb
xor
icebp
mov
icebp
mov
pop
sub
ret
inc
nop
jg
out
inc
or
lret
jmp
aas
addr16
in
mov
aaa
mov
stos
and
jle
and
jmp
push
in
outsl
ljmp
fdiv
dec
fs
and
pop
fcomi
nop
mov
ss
xor
jb
sbb
ja
pop
push
cld
xchg
mov
jae
xchg
add
and
mov
dec
lods
in
addr16
push
add
test
lea
stos
jne
pop
out
mov
decb
jp
lds
cltd
mov
pop
testl
sub
pop
test
sub
cmp
or
jmp
rcll
push
dec
and
mov
out
xchg
xor
push
call
xor
push
xchg
cmpsb
adc
test
push
in
xchg
mov
xchg
test
mov
cmp
adc
pop
popf
xor
pop
xchg
xchg
ret
enter
in
cmp
xchg
inc
lods
lods
sub
dec
add
out
dec
mov
fsubs
push
mov
sub
cmp
add
jp
test
mov
sbb
push
add
xor
dec
xchg
or
xchg
cmovp
jp
sahf
sti
jae
push
addr16
cmp
iret
mov
scas
push
in
cmpsb
insl
push
mov
fs
pop
fs
jle
jo
sti
js
add
mov
mov
xchg
jno
gs
sbb
cld
andb
js
pop
xchg
aad
ficoml
rcll
les
in
sub
int
imul
pop
cmc
jne
sub
cmp
jnp
movsl
mov
inc
out
fldenv
popa
jge
xchg
les
sub
movsl
sub
or
das
ret
call
scas
aam
loop
popf
and
push
imul
sbb
psllw
xchg
jns
arpl
mov
jge
mov
xlat
test
push
xor
in
cmp
cpuid
in
stos
sbb
jnp,pt
sbb
sahf
loopne
mov
xchg
stos
inc
push
push
ss
or
push
dec
add
fsubl
scas
inc
lcall
imul
popf
adc
dec
mov
mov
es
sub
sbb
sbb
aas
push
inc
pop
pop
rol
imul
add
mov
cli
sub
xchg
mov
lret
jnp
xchg
adc
repnz
aam
sub
push
mov
cmp
idivl
jne
iret
dec
shl
fidivrs
mov
ss
movsb
and
test
negb
or
gs
ja
xor
xchg
mov
lret
mov
out
mov
dec
aaa
leave
loopne
sbb
and
pop
daa
sbb
xor
mov
push
xchg
mov
les
mov
push
xor
dec
int
repnz
sar
sbb
jge
xor
add
pop
stos
adc
mov
push
pop
cmpsb
stc
xchg
rol
and
jge
in
pop
shrl
test
add
repnz
sub
or
xor
or
movsb
cltd
xchg
gs
rclb
jo
out
jne
mov
lahf
jmp
lds
add
xchg
icebp
push
loopne
lods
jae
pop
push
es
or
cwtl
sub
icebp
jnp
pop
pop
jb
sti
lock
push
cmp
push
imul
mov
and
ret
sub
pop
scas
add
mov
pop
movsl
xor
adc
ja
pop
insl
jo
repnz
insl
pop
sbb
cmpsb
mov
add
push
inc
push
jno
shrb
sbb
sbb
mov
ret
dec
mov
negl
push
cmp
mov
mov
add
imul
imulb
nop
push
mov
adc
pop
ljmp
popf
cmpsb
sti
push
cmp
out
mov
rcll
paddd
adc
inc
ds
and
mov
mov
push
jg
dec
mov
adc
ficompl
add
inc
lds
mov
mov
jge
jns
das
adc
adc
jo
jno
aaa
pop
insb
dec
rolb
insb
push
or
inc
mov
fnstcw
mov
sbb
mov
push
xchg
or
sbb
sbb
into
lods
lret
mov
and
ds
movl
jmp
inc
rclb
sbb
jle
push
jb
arpl
cmp
js
jge
push
pop
addb
iret
adc
xor
ja
sti
ss
popa
add
loop
mov
mov
ret
pop
clc
or
mov
adc
inc
icebp
xlat
ss
sub
mov
cmc
daa
cmp
aaa
arpl
call
mov
push
mov
dec
adc
push
add
cmc
or
std
inc
fists
mov
jl
lods
addb
imul
pop
dec
adc
lret
cmp
or
pop
mov
movb
push
jns
cmp
sbb
jne
add
jg
lret
xchg
sbb
push
cmc
and
cmp
ljmp
sbb
adc
or
lea
and
daa
inc
pop
dec
bound
xchg
andb
xchg
in
push
jne
xor
push
mov
push
insl
and
mov
fmull
mov
dec
adc
xor
test
mov
divb
or
ret
and
aas
jne
imull
xchg
push
jno
xchg
mov
cli
push
pop
aad
inc
and
lret
lods
jae
mov
repnz
cwtl
pop
imul
icebp
cwtl
rorl
cmp
dec
loope
sbb
xor
mov
xor
out
cmp
imul
cmp
jae
push
mov
imul
mov
push
mov
and
mov
fsubs
aad
sub
pop
jnp
jo
and
sub
cmpsl
mov
loopne
imul
adc
pop
in
test
call
pop
push
xchg
shrl
mov
cmc
out
add
dec
jns
ljmp
movsb
dec
add
dec
or
mov
dec
mov
pop
add
and
rolb
mov
inc
je
push
mov
mov
arpl
push
daa
jbe
mov
cmp
movsl
mov
icebp
hlt
aad
dec
xchg
dec
cmp
cmp
lds
push
sub
lret
clc
pop
arpl
aas
daa
in
addr16
popf
mov
shlb
loope
in
shll
cmp
push
popf
sub
int3
xchg
adc
xchg
test
cmpsb
das
outsb
mov
mov
shlb
insb
cmp
xchg
fnstsw
addr16
jbe
aas
cmp
mov
and
jmp
sbbl
or
iret
orb
sbb
push
aam
scas
and
sub
int3
mov
inc
nop
dec
pop
sarb
push
jbe
mov
ljmp
int
pop
scas
fldl
cmp
sbb
inc
or
cmp
loope
arpl
cmp
sub
scas
and
rcpps
push
and
scas
hlt
inc
cltd
lcall
adc
push
mov
cmp
lock
pop
xchg
mov
ret
jle
aam
pop
add
pop
ja
ja
or
movsl
mov
lock
xchg
adc
cmp
data16
adc
pushf
rcl
or
xor
xchg
pop
jge
ja
or
movsl
outsb
push
push
fcompl
in
lods
aad
push
jb
sub
mov
lods
movsb
pushf
dec
rorl
jge
insl
lret
ja
out
loopne
push
movsb
call
les
out
adc
xorb
pusha
add
and
adc
xchg
mov
test
ss
push
xor
or
sub
adc
popa
cmpsb
add
insl
pop
testl
jae
jne
add
std
xchg
shll
and
inc
xor
fisubrs
mov
jo
nop
lret
push
push
jo
leave
or
push
dec
enter
repz
add
push
or
jmp
cli
pop
outsb
mov
frstor
in
adc
cmp
mov
and
jns
jns
inc
lds
cld
cld
mov
or
aaa
cli
push
xor
mov
xchg
rcrb
mov
lret
fdivrs
push
shrb
and
stos
xchg
aad
das
push
or
jns
frstor
adc
lret
cmpsl
sahf
sub
push
sub
pop
popa
mov
outsl
test
movsb
xor
xchg
fnstsw
push
or
dec
mov
push
or
bound
and
dec
cltd
shl
les
inc
jne
stos
push
cmpb
push
add
jecxz
shll
cmp
pop
repnz
fwait
inc
rcr
jmp
lds
fisttps
imul
cmpsl
ja
dec
addr16
lret
movsb
pop
push
adc
out
lock
inc
movsb
push
jae
ror
jge
bts
mov
and
sub
mov
add
mov
xchg
mov
push
js
into
jle
outsl
movsb
sbb
push
sti
loop
divl
dec
ljmp
daa
add
xor
ret
and
push
xchg
mov
mov
dec
iret
popf
or
andl
pop
push
sub
jae
add
imul
rorl
jecxz
and
push
push
xor
cmp
jg
or
sbb
into
pop
pop
push
js
xchg
scas
pop
adc
jg
ss
xor
jecxz
pop
int3
repnz
loop
subl
stos
lcall
lret
sbb
jg
or
lea
dec
sub
movsl
imul
retw
pop
mov
add
out
jecxz
inc
jb
push
add
loop
pop
fidivrs
mov
cli
push
icebp
xor
in
movsl
loope
mov
add
jo
ljmp
inc
xchg
cltd
pop
ficoms
add
loop
lods
pop
orl
push
sbb
jbe
adc
pop
cs
sbb
lds
cmp
or
adcl
xor
pop
lods
push
movsb
add
sbb
push
incl
js
insl
cmpsb
test
mov
adc
fdivr
mov
xor
jg
add
icebp
ss
xor
test
bound
sti
out
xchg
je
mov
fisttps
pop
stos
out
jmp
iretw
lds
sbb
xor
push
dec
mov
push
ret
movsl
add
lods
addl
push
repnz
sbb
mov
push
in
push
cli
cmp
sbb
cli
pop
popf
xchg
add
mov
jg
push
movsb
mov
int3
test
and
and
outsb
push
mov
mov
clc
scas
inc
sbb
mov
fldenv
rcr
out
rol
and
ljmp
pop
int3
sbb
test
and
mov
push
out
data16
add
push
push
lcall
les
mov
test
and
mov
mov
mov
push
mov
jae
cmpsl
inc
pusha
addr16
loopne
cmp
push
out
lock
jns
xor
rorb
lock
jg
les
ret
cs
pop
jecxz
pop
daa
incb
mov
ss
jmp
int
push
int
inc
dec
into
cmp
aam
push
pop
loopne
mov
sub
ret
mov
cmp
jnp
fwait
inc
ljmp
jns
mov
rcrb
mov
testb
jb
cmp
mov
or
imul
rorl
fnsave
enter
data16
pop
sub
push
push
pop
xchg
inc
inc
stos
inc
bnd
in
and
leave
lds
test
adc
push
test
addr16
cmpsl
mov
addr16
outsl
fwait
sub
imul
sbb
incb
inc
repz
dec
add
pop
fmull
pop
imul
pusha
pop
mov
repz
adc
divl
inc
pop
shlb
insb
xchg
and
jbe,pt
shl
pushf
ljmp
push
faddl
loop
jl
jp
daa
pushf
xor
adc
addb
xchg
lahf
pop
pop
add
and
jo
out
lret
and
dec
ja
inc
xchg
adc
icebp
out
dec
push
cmp
sbb
mov
out
ss
sub
adc
popf
shlb
mov
lea
aas
into
add
xor
ret
ret
xchg
fwait
cmp
jl
mov
lret
mov
bound
mov
pop
scas
lods
fs
xchg
ja
std
clc
dec
and
in
mov
rcll
xor
xor
dec
in
insl
jne
sub
sub
mov
mov
inc
mulb
int3
stos
sbb
stc
imulb
xchg
sbb
pop
stos
clc
dec
in
xchg
mov
stos
in
xlat
sbb
cmp
jo
addr16
pop
test
ds
int3
xchg
lcall
add
xchg
jg
xchg
jge
ret
adc
mov
hlt
cmp
das
testb
repz
pop
pop
mov
ds
cwtl
insb
mov
add
mov
cwtl
pop
adc
scas
fnsetpm(287
pop
mov
int3
and
jns
xor
gs
add
push
testb
ja
dec
lock
pop
out
inc
push
enter
jmp
mov
jo
jne
lahf
push
fs
movsb
in
ffreep
push
mov
aam
inc
notl
shr
andb
popa
fs
mov
pop
cld
repnz
mov
popa
lret
add
xchg
lcall
dec
sub
add
dec
loope
out
dec
xor
js
pop
push
xchg
repz
inc
mov
xchg
xchg
sbb
or
pop
pop
push
push
mov
out
cmp
xor
pop
xchg
scas
jge
rcl
push
jl
mov
fsubrl
xchg
ret
test
jp
in
pop
shrl
nop
lea
sub
out
outsb
xorl
xor
loope
pop
call
push
mov
mov
mov
mov
pop
out
or
mov
adc
and
push
mov
push
lock
int
mov
sbb
rol
nopl
cmp
arpl
xchg
inc
test
mov
xor
adcl
int
ror
and
cmc
jno
in
mov
loope
mov
sbb
cwtl
xor
test
scas
add
repz
dec
sbb
imul
add
dec
fistpl
xchg
cli
outsb
push
sbb
mov
mov
mov
lods
jmp
cwtl
mov
cmc
aas
pop
sub
dec
out
mov
ret
and
sbb
jmp
in
es
lret
lahf
cmc
sbb
rol
addr16
mov
mov
std
test
or
dec
aad
jae
mov
add
push
xchg
sbb
sarb
fsubs
push
mov
xorb
and
push
adc
shlb
push
jp
mov
sbb
dec
sbb
fistps
mov
js
xchg
adc
push
add
sub
cmp
dec
cmp
mov
into
std
add
dec
sub
xor
mov
cmp
jle
mov
std
mov
pop
mov
pushf
mov
xchg
outsb
jmp
aaa
jmp
out
adc
cltd
jle
lock
xor
cmpsl
and
jl
aaa
inc
dec
add
mov
out
pop
jae
insl
fdivr
adcl
out
jnp
imul
ffreep
arpl
outsb
ret
and
inc
push
outsl
mov
ljmp
sbb
repnz
in
mov
sub
sbb
or
dec
out
or
mov
scas
fidivrl
loope
add
out
lds
movsl
mov
adc
test
sub
in
mov
push
fwait
mov
out
icebp
pop
loopne
inc
out
or
loope
jb
mov
and
cwtl
xor
adc
gs
je
sarl
pop
jmp
in
lock
xchg
test
loope
xchg
lods
movsl
and
or
sar
pop
xchg
loop
hlt
pop
subb
shll
hlt
push
lret
sbb
cmp
cmp
in
or
out
insl
xchg
inc
out
push
cmp
mov
mov
push
ljmp
mull
and
in
inc
daa
xchg
ds
mov
add
repz
enter
mov
in
mov
sbb
mov
jg
shrl
out
or
push
lock
add
adc
stos
jmp
xchg
repz
sti
sbb
outsl
mov
fnstsw
outsb
mov
stos
mov
lahf
iret
sub
leave
fsubrl
or
daa
imul
push
sbb
sti
mov
mov
or
ret
cli
ljmp
mov
mulb
fcmovb
sub
cmpsb
loope
pop
mov
in
xchg
rcrl
cmpsl
push
sti
mov
lea
xlat
and
cli
inc
hlt
dec
jae
inc
mov
sarl
icebp
push
outsb
push
js
lret
leave
stos
hlt
inc
testb
out
in
loop
xlat
jmp
fmul
mov
out
movsl
dec
ja
and
adc
sbb
inc
shl
rorb
sahf
repz
xor
addl
jmp
push
or
sbb
icebp
xor
movsl
sbb
loop
addl
sub
mov
xchg
std
adc
adc
fdiv
add
sti
jmp
repnz
or
sub
add
stc
mov
jg
cmp
ljmp
adc
icebp
mov
xchg
push
stos
addr16
inc
cmpl
outsb
popa
push
mov
cs
push
adc
jno
push
lahf
xor
cmp
stc
push
push
dec
out
imulb
push
push
sbb
stc
pop
dec
in
mov
push
xchg
push
imul
outsb
aaa
imul
mov
mov
and
icebp
add
sub
dec
fs
sub
and
mov
out
pop
outsl
mov
mov
shl
fsubs
dec
mov
daa
sub
into
jl
mov
sub
lods
in
test
stc
xor
lret
xor
xorl
pushf
lods
fsts
jle
in
sub
ror
xchg
xor
movsb
xchg
pop
mov
jle
jnp
sub
sub
mov
insb
or
or
mov
hlt
mov
imul
adc
icebp
xor
mov
pop
or
ss
xchg
adc
arpl
das
lds
mov
test
mov
pusha
fwait
mov
mov
pop
icebp
scas
jecxz
into
fiaddl
cmc
sbb
sbb
and
int
scas
movsb
xchg
or
add
jb
push
loop
enter
pop
pushf
imul
leave
adc
jne
mov
es
xorb
sub
lahf
xchg
cltd
mov
scas
pop
dec
jns
fistl
iret
scas
mov
xchg
hlt
iret
xchg
cmpsb
adc
adc
fidivl
stos
adc
pop
les
nop
adc
inc
ds
cmpsl
mov
insl
fidivl
out
popa
lea
xor
push
cmpsl
pop
lods
mov
pop
popf
sbb
mov
stos
cmp
xchg
aam
and
or
lds
out
aaa
incl
pop
sub
push
out
and
jle
cltd
pop
dec
adc
xchg
cmc
pushf
ret
shl
jp
xchg
fs
movsl
xor
adc
mov
arpl
sti
and
mov
lcall
les
push
xchg
mov
or
dec
ss
cmpsb
and
jo
cmp
rorb
lods
call
mov
and
inc
dec
test
mov
jnp
repnz
fwait
adc
repnz
inc
push
cli
jmp
inc
aaa
push
jmp
pusha
hlt
scas
xor
in
and
or
and
cmp
loop
mov
mov
lea
shll
popl
lret
shlb
jg
xor
and
lock
outsl
xchg
stos
jge
push
inc
icebp
xchg
cmpsl
imul
sbb
mov
xchg
fucomi
mov
push
dec
addr16
ja
xchg
cmp
push
sbbb
lods
adc
test
testb
repnz
adc
adc
dec
and
lds
fnstsw
dec
push
add
ds
test
fnstcw
sbb
cmp
jno
stc
ret
xchg
rorb
cwtl
movb
mov
out
dec
sbb
xor
cltd
insb
add
adc
mov
popa
data16
mov
aaa
mov
jle
sbb
mov
notl
mov
out
mov
adcb
jle
imul
xchg
into
xor
push
ss
imul
xorb
adc
not
xchg
or
divl
or
cs
cmp
xchg
xor
pop
jb
inc
xchg
fcmovnbe
mov
ret
lods
sub
cmp
and
pop
mov
sbb
daa
ds
outsb
ficoml
cmpsl
sti
outsb
mov
data16
jne
mov
and
inc
inc
sti
test
add
ss
add
mov
mov
test
and
int
or
and
pop
cmp
pop
jmp
pop
or
adc
cmpsl
mov
pop
push
inc
mov
pop
fsubl
pop
adc
adc
scas
sbb
mov
lock
jnp
fstps
fcmovbe
xor
mov
mov
xchg
and
mov
xchg
daa
xchg
adc
dec
in
add
lock
xchg
fdivrl
out
mov
xor
inc
add
aam
rcll
sub
sbb
test
mov
sub
mov
sbb
inc
push
shlb
clc
cmp
cli
incb
testl
cmp
cwtl
cmp
das
cmpsb
outsb
subl
pusha
push
das
lock
bound
adc
sbb
imul
dec
ja
dec
adc
inc
xlat
pop
mov
mov
clc
inc
push
aam
outsb
mov
mov
sbb
nop
mov
push
inc
push
insl
or
pop
je
and
cmp
xchg
clc
je
lods
fisttps
push
adc
leave
sub
mov
pushf
add
xor
and
movsl
js
inc
sub
mov
pop
jne
mov
push
sbb
cmp
enter
jo
fistpl
jp
xchg
mov
cwtl
mov
sahf
mov
cvtpi2ps
jnp
or
pushf
movsl
pop
lea
mov
jae
iret
loope
imul
fdivr
dec
movsb
hlt
mov
shll
mov
mov
test
inc
mov
aad
maskmovq
imull
sub
shlb
ret
jge
dec
cmc
adc
jne
dec
outsl
pop
dec
cli
jo
fnstsw
mov
notl
test
mov
cmpsb
sbb
out
cmpsl
ja
inc
fcoml
mov
mov
pop
lret
clc
lahf
push
cmp
nop
enter
sub
insb
xlat
shr
inc
out
push
sbb
push
rcr
xor
adcb
hlt
cltd
xchg
xchg
xchg
and
xor
add
dec
call
xlat
push
cs
xchg
sbb
push
lret
or
dec
je
rcr
loop
scas
int
or
push
or
adc
mov
sub
sahf
sbb
xchg
push
cld
xorb
and
movsb
inc
adc
and
jl
repz
inc
leave
loop
cmp
fs
sbb
sub
sar
addb
in
mov
pop
cwtl
dec
mov
out
cmp
sbb
xchg
loop
lahf
inc
xchg
call
loop
jnp
stos
pushf
pop
lret
xchg
inc
cmova
and
xchg
and
ljmp
sub
mov
xor
mov
and
xchg
sub
adcl
ficompl
sbb
add
lock
jg
jo
jge
xchg
int
movsb
divb
xchg
pop
ja
add
jg
dec
push
xchg
mov
je
into
cmp
sbb
mov
into
mov
hlt
sarl
sbb
aam
incb
pop
lahf
ss
shr
in
repz
lods
or
sbb
push
mov
in
xor
mov
scas
enter
call
loopne
push
stos
sahf
pusha
sti
adc
jge
adc
daa
dec
xchg
sbb
add
pop
popa
sub
xor
scas
pop
or
sahf
cmp
out
add
fsubr
stc
mov
cmp
push
push
inc
mov
test
adc
and
mov
lahf
add
push
scas
cmp
and
push
dec
push
xor
stos
ds
and
cmpsl
lock
sbb
stc
push
outsl
add
shll
jns
lret
ret
ds
cmc
add
in
add
adc
lds
sbb
andb
stos
add
sbb
scas
cmp
jae
sbb
xor
shr
test
je
inc
in
pop
fstl
jecxz
das
jmp
mov
xchg
je
jns
mov
xchg
fstpl
xchg
cmp
ljmp
dec
out
push
jnp,pn
jno
push
pop
scas
lods
inc
push
out
loopne
leave
imul
repz
filds
push
jp
inc
lods
leave
mov
fsubrs
add
cmpsl
pusha
mov
pushf
mov
sub
loop
sbb
out
mov
iret
and
in
dec
idivl
clc
lods
jl
cs
and
mov
popa
xorl
fnsave
ret
add
or
sbbl
lcall
push
push
jns
push
inc
and
mov
nop
xchg
sbb
dec
adc
adc
arpl
cmp
lret
or
imul
leave
and
xchg
jg
mov
jmp
loope
or
xor
fbld
jmp
inc
add
push
lret
out
jmp
dec
call
jle
mov
aas
addr16
jne
xchg
jne
das
sarb
or
out
cmpsl
jbe
imul
mov
push
cltd
adc
sti
andb
scas
inc
add
cmp
movsb
mov
sub
sbb
push
cmp
xorl
inc
xor
mov
pusha
mov
cmp
sbb
outsl
js
and
inc
cli
pop
insb
sbb
cmp
push
nop
add
push
dec
int3
lock
ficoms
out
stos
loopne
aaa
fs
sarb
jae
insl
aam
jnp
mov
icebp
sbb
loop
and
mov
sti
imul
mov
dec
imul
loopne
cmc
and
scas
subl
dec
inc
sbb
add
aaa
adc
test
sub
xor
dec
jbe
aad
adc
sub
mov
mov
fdivr
stos
stos
in
xchg
pop
ficomps
mov
int
lds
pop
in
rcrb
sub
stc
sub
mov
outsl
xor
rorl
adc
rcr
push
in
push
xchg
mov
add
inc
popa
int3
mov
lods
outsl
loope
pop
rolb
lods
cmpsb
lods
stos
ljmp
inc
testl
jbe
decl
mov
adc
mov
pop
arpl
mov
in
adc
jbe
push
imul
fwait
roll
jnp
loopne
mov
fisttpl
rolb
mov
outsl
cmp
pushf
xlat
cmp
in
loop
outsl
add
mov
inc
les
int
test
inc
insl
ss
mov
int
mov
les
lcall
inc
jo
push
and
movsl
sahf
and
cmpsb
in
push
and
dec
dec
mov
mov
in
jmp
mov
mov
sub
loope
je
orb
dec
inc
push
outsl
inc
xchg
jne
cmp
inc
sub
sbb
sbb
sbb
jb
fstpl
incl
cmp
loopne
out
adc
icebp
mov
mov
std
xor
scas
and
rolb
mov
scas
lcall
cmp
lret
xorl
push
mov
lods
imul
dec
aam
mov
mov
adc
int3
gs
adc
aas
sbb
add
and
popf
push
xlat
ja
adc
sub
push
and
mov
mov
push
imul
xchg
stos
push
and
cmp
ret
ja
test
sub
lret
loop
decl
out
lahf
xlat
flds
shr
icebp
xor
cli
xor
pop
cmp
sub
in
cld
nop
mov
fcmovne
and
stos
aam
dec
rcr
inc
lock
imul
cmpsb
inc
add
or
movsb
add
nop
shrl
dec
fdivl
inc
fadd
dec
stc
mov
xor
xchg
mov
and
mov
pop
ret
dec
push
das
fsubr
pop
cwtl
mov
.byte
aad
