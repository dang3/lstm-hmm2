movsl
push
sub
sbb
stos
mov
xchg
xlat
enter
scas
mov
xor
inc
data16
dec
pop
bnd
data16
dec
arpl
mov
rcll
xchg
dec
sahf
imul
mov
outsb
scas
aad
mov
xor
in
dec
nop
push
cmp
nop
dec
sbb
add
dec
loope
inc
jg
scas
push
mov
adc
into
out
stc
cwtl
jmp
repz
js
push
popf
cmpsb
mov
sbb
clc
lcall
pop
mov
dec
loopne
in
into
mov
pop
mov
mov
bound
lahf
xlat
cltd
push
pop
and
movsl
fnstcw
mov
sbb
mov
lahf
cli
cmpl
or
xchg
mov
inc
mov
pop
adc
dec
cwtl
adc
mov
xchg
pop
pop
jecxz
adc
mov
inc
add
filds
mov
pop
xor
scas
mov
ret
pop
mov
scas
lcall
jmp
sub
xlat
xlat
rcll
mov
pop
xor
sti
push
aas
repz
xchg
ds
push
popa
push
out
cltd
cmpb
loope
adc
pop
adc
and
xor
push
pop
cmp
sub
lods
popf
lock
xchg
sub
adc
sub
mov
mov
mov
cmp
mov
xor
arpl
lret
test
jp
xchg
in
jns
xor
dec
in
bound
cld
jb
test
push
in
jl
dec
mov
dec
sbb
mov
dec
shlb
inc
lock
dec
adc
xchg
cmpsb
and
pusha
push
mov
out
sbb
mov
lcall
pop
mov
jb
mov
outsb
adc
or
or
aad
dec
aaa
lahf
cmp
shll
jo
gs
inc
inc
pop
inc
mov
and
sbb
mov
add
fdivl
popf
or
cltd
cmovs
ret
jmp
add
xchg
xor
add
sub
stc
xlat
inc
fidivrl
fdivl
aaa
sub
and
cld
cmp
movsb
mov
testl
or
dec
fildll
adc
push
inc
ret
out
jno
xorb
xchg
push
pop
popf
lret
inc
test
lret
adc
lret
lahf
mov
pop
subb
mov
add
push
xchg
push
lods
rcl
adc
inc
xchg
stc
inc
push
and
xor
inc
aaa
push
xchg
pusha
mov
cmp
scas
mov
cld
cmp
test
jg,pt
movsb
push
dec
outsb
jg
add
insl
sti
mov
xchg
stos
dec
leave
mov
pop
pop
dec
push
iret
inc
repz
mov
jmp
sarb
fcmove
lret
inc
push
add
sub
mov
test
scas
bound
testl
sbb
lahf
popa
push
std
fwait
cmpsl
jmp
out
mov
in
xor
lret
xor
aam
mov
outsl
or
lret
cmpsb
out
cld
fistps
fdivrs
cmp
inc
pop
insb
je
jo
xor
mov
pop
sbb
adc
xchg
pop
xor
in
stos
dec
jno
popa
jne
sti
pop
and
jbe
fcom
jmp
jne
inc
xchg
in
shl
sarb
pop
mov
int
mov
pop
or
jecxz
jmp
out
sbb
loop
jle
push
aad
cmp
popa
nop
ret
cmp
mov
loop
js
jmp
ret
sub
ret
aam
jae
mov
and
ret
adcb
sbb
cmc
push
dec
add
imul
jge
adc
xchg
mov
inc
fcomp
outsl
stos
pop
mov
ret
dec
dec
push
popl
add
psraw
xchg
sarl
ret
test
in
das
in
mov
mov
or
sub
add
stos
push
std
lods
mov
and
fs
inc
push
pop
push
inc
mov
xor
mov
jne
adc
mov
and
xor
xchg
cmp
lret
dec
lods
inc
xchg
cmp
push
inc
andl
dec
mov
lret
hlt
push
xlat
ljmp
cmp
sub
adc
ficompl
mov
lcall
imul
and
imul
push
leave
pop
xlat
sti
push
pusha
shlb
icebp
fs
cmp
mov
pop
push
mov
sbb
mov
lds
sub
test
pushf
test
dec
roll
push
in
and
scas
inc
cmp
movsl
xchg
int3
icebp
pop
rcr
inc
rcrl
lret
test
int3
xchg
insb
mov
rol
and
in
roll
xlat
lahf
icebp
out
mov
call
or
popl
popf
jo
aaa
adc
inc
xchg
mov
adc
sub
add
shll
dec
cld
stc
pop
xor
addl
cwtl
dec
outsl
ret
push
test
sub
loope
movsb
enter
lret
and
roll
mov
sahf
decl
shlb
mov
dec
jo
sub
ficoml
enter
fwait
or
roll
push
stos
or
fcoms
lock
jnp
es
imul
scas
stos
fidivrs
fisubrl
dec
jmp
das
std
hlt
dec
inc
insb
jmp
sbb
mov
inc
std
pop
mov
js
dec
pop
imul
mov
in
push
aas
mov
add
test
imul
pop
push
sbb
in
pop
aad
call
cmp
loop
push
test
push
pop
or
push
and
cwtl
cmp
out
rcl
cmpsl
jnp
cmp
rolb
lds
dec
leave
sub
push
mov
stos
and
jg
addb
dec
loop
mov
sub
add
ja
lret
fimuls
sbb
sub
rol
clc
push
mov
xor
xor
dec
leave
out
test
adc
adc
mov
push
xor
aam
clc
hlt
enter
sbb
das
pop
cwtl
mov
enter
jbe
cmc
out
aad
or
push
movsb
call
cmp
imul
lock
push
push
xchg
lds
or
xchg
and
orb
lock
fdiv
sub
push
xchg
stos
stc
pop
es
out
dec
push
sbb
cmp
outsb
and
sbbb
arpl
outsl
int3
rcl
in
daa
in
jae
fwait
lret
sub
inc
xchg
adc
mov
subl
dec
dec
and
cmp
mov
pop
xor
outsl
push
int
stos
push
loope
mov
fucomp
ficoml
jnp
dec
push
add
and
jo
push
mov
scas
xlat
out
push
push
fisttpll
mov
scas
pop
xchg
ja
das
adc
jne
add
scas
arpl
shll
shr
or
pop
dec
jne
xchg
cmp
fistps
pop
mov
hlt
hlt
inc
mov
cli
out
add
xor
das
in
push
sbb
adcl
in
scas
sarb
jbe
adc
dec
jg
cltd
insb
hlt
and
in
stc
ja
add
xchg
popa
adc
movsl
mov
lcall
xchg
adc
loop
xchg
ja
push
idivl
repnz
cmp
mov
xor
cmp
jae
pop
add
mov
test
sub
dec
lds
hlt
pop
xor
lahf
dec
add
bound
sub
push
in
push
pop
push
cwtl
push
inc
cmp
jnp
mov
adc
xor
mov
adc
fnstenv
subb
dec
imul
dec
push
fdivrs
sub
pop
repz
jo
or
push
xor
int3
cmp
xlat
and
sbb
pop
into
popf
cmp
sbb
push
xlat
dec
pop
iret
mov
sub
pop
push
or
loope
mov
cmp
test
adc
mov
inc
push
mov
sarl
out
out
fcoms
mov
pop
cmpsb
xchg
mov
mov
iret
testl
popa
lods
pop
mov
jl
int
push
push
ja
sub
pop
addl
push
add
cs
rclb
daa
jo
sub
mov
mov
xor
push
jp
popf
sub
arpl
jl
cmpsl
pop
lock
adc
rcr
les
mov
jecxz
ficompl
push
enter
outsb
std
mov
call
mov
pop
inc
fcoms
jo
fs
add
popa
ljmp
pusha
and
les
jb
xor
and
scas
add
cmpsb
lahf
clc
repnz
inc
enter
mov
sub
xchg
jle
mov
xchg
sahf
jo
in
mov
inc
in
xchg
aas
pop
or
call
push
push
imul
cli
test
aas
sub
repnz
enter
xor
dec
cmp
lcall
loopne
jle
jnp
push
adc
aad
cmp
mov
sub
add
adc
add
cs
test
add
mov
test
outsb
hlt
push
lods
jbe
lea
jg
xchg
push
cmp
fldenv
xchg
pushf
lret
call
jmp
cs
repz
je
adc
add
mov
div
ja
pop
xor
sbb
pop
xchg
das
shll
pop
into
fistl
jle
xchg
pusha
push
pop
pop
cmpsb
jl
cs
add
jbe
add
outsb
mov
jg
cmp
fs
movsl
lods
xchg
imul
popf
adc
jb
scas
jae
inc
dec
jg
fsubrs
lret
mov
add
sarl
jecxz
dec
subb
and
xor
divl
in
push
jb
sahf
call
insb
jae
and
fdivl
jno
lock
add
bound
imul
ret
mov
je
sub
push
pop
jg
push
cs
sti
pop
mov
mov
es
popa
movsb
fwait
xchg
mov
testb
jmp
and
fwait
push
xchg
sub
mov
mov
add
sti
das
mov
inc
inc
das
xchg
pop
add
fcompl
jle
stos
sub
lds
repnz
sbb
bound
and
and
iret
test
add
test
call
cmp
ret
insl
dec
jb
rolb
jl
sbb
adc
in
sahf
mov
fsubr
xchg
jle
rcrb
pop
outsl
xchg
clc
sub
gs
movsl
jb
push
rcll
mov
out
lock
xor
je
lsl
lret
fcoml
enter
rcl
cmpsb
adc
test
push
mov
js
dec
or
icebp
inc
js
xchg
popa
fpatan
xor
jo
inc
sti
mov
add
leave
mov
lea
pop
aaa
ljmp
ds
in
sbb
int
outsl
loopne
out
mov
sarb
dec
mov
out
xchg
jmp
and
cltd
jl
cmpsb
jmp
pop
inc
push
imul
push
in
mov
jg
popf
xchg
mov
mov
stc
hlt
in
iret
push
inc
daa
cs
mov
mov
xor
iret
jnp
sar
push
mov
repz
ret
popf
out
sbb
cmpsb
es
mov
scas
repz
cwtl
sub
iret
stos
mov
and
das
in
xchg
and
push
xchg
sbb
jle
hlt
xchg
cmp
mov
and
and
and
jno
subl
ljmp
jmp
int
std
lret
jae
xchg
push
clc
jns
xchg
and
sbb
cmp
dec
into
or
adc
scas
jnp
xchg
inc
inc
aas
pop
mov
push
cltd
mov
jmp
arpl
mov
pushf
adc
cs
lahf
mov
xchg
or
ret
call
nop
push
jp
out
push
add
aas
es
dec
out
xchg
jae
sub
jb
adc
mov
sahf
inc
push
jns
shlb
sub
xor
dec
sbb
fidivs
xchg
int
icebp
fcomps
or
push
mov
lahf
mov
and
ss
cld
mov
dec
rolb
mov
adc
fucom
pusha
inc
jnp
jge
pop
hlt
jmp
sti
dec
dec
in
and
out
in
out
mov
add
dec
push
mov
pop
sub
jb
pop
stos
das
mov
sbb
jge
push
sbbb
xor
out
shll
dec
inc
enter
jmp
add
stos
sbb
out
test
fisubrl
push
gs
cltd
mov
sub
mov
pop
jmp
add
imul
mov
shr
fstpl
xchg
dec
movsb
sbb
or
hlt
ss
xchg
inc
or
addr16
call
add
inc
outsb
mov
movsl
add
sub
push
mov
pushf
gs
mov
int
mov
push
into
sarl
loop
pop
xchg
push
imul
or
outsl
pop
pop
or
test
mov
nop
cwtl
lods
cmp
jl
or
fcompl
aaa
and
or
data16
mov
mov
and
inc
inc
mov
insb
jge
fsub
jmp
add
shrd
stos
pop
xchg
jge
sbb
jnp
fidivrl
xchg
inc
push
loopne
jbe
mov
pop
das
repnz
test
mov
int
movsl
pushf
and
mov
or
mov
cltd
xorb
aaa
push
push
push
inc
insb
rolb
sub
call
dec
and
jecxz
call
and
jns
jmp
adc
mov
leave
iret
push
mov
lds
mov
ljmp
sbb
add
add
imull
rcll
mov
push
jl
xchg
mov
and
jb
xor
mov
add
dec
call
pop
das
jp
je
shrl
adc
fucomip
movsb
jp
fistl
je
rclb
pop
stc
loope
aad
sub
adc
mov
mov
addl
xchg
dec
or
jle
mov
mov
lods
movsl
cmpsb
mov
jle
sbb
pushf
punpckldq
mov
mov
and
mov
stos
jae
cmp
cli
cmp
jl
rolb
push
rclb
dec
push
xchg
fsub
push
ror
xor
add
jmp
push
inc
jbe
jno
jns
ja
jno
bound
dec
call
pusha
lcall
xlat
popf
in
jno
or
lods
xorb
scas
mov
nop
or
gs
push
aad
jg
lahf
sub
in
push
xor
jbe
sbb
ret
imul
xchg
outsl
out
ffree
dec
pop
ja
sbb
rclb
mov
imul
jno
sub
inc
int
and
loop
ljmp
outsb
sbbl
hlt
aas
sbb
stos
mov
push
in
fsubl
lods
ljmp
std
int3
or
add
add
xlat
cmpsb
jno
ret
rclb
mov
add
inc
pop
sbb
ds
add
push
int3
cmp
insb
mov
mov
pop
inc
mov
jno
incb
push
jns
mov
incl
xchg
xlat
movsb
popa
iret
ss
pusha
mov
jb
inc
dec
cwtl
aas
sbb
xchg
jge
loopne
inc
ss
jb
bnd
cmp
mov
xchg
mov
pop
mov
ret
pop
jg
jnp
clc
xchg
push
nop
sub
xchg
shrb
or
lods
xchg
jl
movsb
mov
pop
aas
and
push
jge
dec
addl
outsl
andl
pop
aam
mov
pop
cmc
std
push
xor
sbb
ret
xchg
in
xor
pusha
xchg
stc
int
mov
insb
push
into
out
ja
out
incb
dec
imul
outsl
iret
or
ss
enter
jle
mov
cmp
mov
insl
scas
test
orb
cmpsl
jge
mov
cmp
leave
and
push
andb
movsl
push
dec
lcall
jp
sbb
adc
aad
lods
int3
xor
or
jb
pop
cmp
out
xlat
popa
imul
stc
lret
xchg
inc
push
cltd
dec
cmc
daa
mov
mov
adc
je
add
push
xchg
scas
les
in
or
rolb
stos
in
bound
lock
out
jg
sbb
mov
pop
jg
push
lds
mov
jge
and
cmp
jnp
loop
pop
xchg
cmp
test
lods
lds
cmp
lret
mov
pop
insl
out
pop
mov
ljmp
les
in
mov
in
pop
cld
cmp
sbb
push
fisttpl
pusha
pop
test
loop
std
lods
in
push
fdivrl
sub
jae
fwait
push
mov
sbb
or
icebp
dec
and
lods
mov
repnz
les
cmp
ss
jbe,pt
mov
mov
dec
pop
mov
or
jnp,pn
adc
test
mov
aad
lahf
jns
dec
jne
imul
xchg
lcall
shrb
mov
mov
jb
push
cmp
adc
test
adc
cmc
rol
mov
mov
mov
arpl
jo
shrb
mov
cmpb
icebp
xchg
loop
fistpll
imull
dec
push
cmp
jmp
push
cmc
push
fs
pop
mov
fstp
xor
xchg
jnp
sbb
adc
les
pop
iret
addl
arpl
mov
mov
push
or
add
pushf
sbb
jle
fistpl
lret
xchg
inc
and
pop
mov
cltd
sub
mov
cmp
lret
pop
inc
xchg
in
xchg
lcall
js
ss
pop
and
lret
loop
cli
stc
mov
and
xchg
and
ja
mov
jno
repnz
push
or
push
mov
addr16
jo
hlt
mov
shrl
dec
movsl
xchg
jl
outsb
mov
movsl
icebp
shrb
incb
pop
in
cmp
ss
cmpl
fs
in
stc
testl
shll
mov
and
jns
inc
xor
mulb
std
mov
out
push
sarl
lcall
fdivr
shrb
stc
inc
lcall
pop
fsubl
pop
loopne
sub
arpl
aam
movsl
aad
ret
movb
mov
testl
clc
stos
movsl
xchg
sbb
andps
dec
sbb
mov
or
add
pop
shrl
xchg
push
cmp
sbb
test
stos
fildl
lods
sub
adc
btc
cmpsb
xlat
loopne
xor
call
scas
rorl
sbb
insl
and
inc
ds
sub
push
cltd
add
pop
adc
in
mov
xor
popf
hlt
pop
sub
jmp
incl
inc
cwtl
mov
or
push
daa
or
and
adc
test
ret
inc
jmp
pandn
cmpsb
lret
cmp
xchg
std
mov
push
jne
jle
mov
push
test
push
mov
jl
clc
push
ja
fwait
mov
cmpsb
pop
popf
and
add
cli
imull
mov
sub
mov
test
out
inc
inc
or
lret
push
xor
cld
or
pop
lea
jge
mov
jne
mov
pop
or
outsl
cmc
adc
or
out
xchg
leave
jl
jbe
cmp
roll
or
dec
clc
sbb
sarb
mov
xchg
xor
icebp
mov
out
loop
add
adc
stc
or
ja
xchg
mov
imul
jl
add
mov
fdivrs
aad
and
cltd
pause
jnp
add
hlt
addl
cmc
jns
test
and
push
fmull
popa
imul
mov
pop
cmp
push
cmp
test
fnstenv
mov
adc
push
jnp
xchg
rcrl
insl
addr16
iret
fs
out
inc
icebp
push
outsl
xchg
fadd
cmpsb
outsl
cmpsl
out
and
mov
jecxz
fwait
inc
jns
pop
out
dec
lea
or
xor
imul
xchg
cmp
pop
dec
leave
xor
adc
popa
cmp
out
adc
in
mov
mov
mov
int
and
shr
lcall
movl
fcmove
push
lds
push
fdivl
mov
mov
dec
lret
test
cmc
push
sbb
lret
shlb
mov
pop
fneni(8087
fsubl
and
scas
sahf
fs
and
arpl
sub
mov
or
inc
movsb
shll
sbb
hlt
gs
movsb
mov
roll
jns
add
loopne
push
iret
mov
pop
stos
aaa
popa
push
shlb
mov
in
xor
pop
sub
jb
popa
and
jne
movb
idivb
push
mov
dec
inc
sbb
push
aaa
mov
fldl
mov
cmpsl
push
insb
cmp
inc
sub
fs
xor
jae
cmpb
nop
repnz
iret
dec
jp
test
inc
cmp
pop
aam
lods
xchg
enter
hlt
xor
xor
loopne
daa
dec
and
xor
and
push
lcall
sub
clc
call
cmc
bnd
jno
icebp
sbb
add
mov
popa
pop
inc
mov
inc
inc
in
push
sub
pop
rolb
push
dec
iret
lcall
inc
shl
repz
pop
lcall
int
sub
mull
cmpb
scas
mov
stos
roll
ja
sarl
mov
fwait
cmp
jmp
jge
movsb
insb
jg
iret
rolb
xchg
test
mov
ret
adc
in
mov
std
push
shll
fsubrs
test
shrl
out
into
jbe
xchg
push
mov
fcmovnbe
stos
int3
push
out
jle
shrl
mov
test
jbe
loopne
and
les
lcall
lret
xchg
mov
bound
inc
dec
dec
inc
data16
or
rolb
cli
aas
xchg
dec
sahf
scas
inc
sbb
movsb
notl
or
ss
data16
insb
sarb
adc
shrl
scas
cmpsb
cmpsb
incl
push
push
adc
ljmp
jne
mov
das
sbbl
push
pop
xchg
cltd
shl
cmp
add
adc
addl
pop
cmp
add
mov
arpl
push
sti
and
daa
rol
cs
leave
out
adc
cmp
mov
xchg
js
cltd
sub
mov
sub
test
fwait
cmpsl
and
cli
mov
sbb
sarb
add
sbb
jb
jae
mov
cmp
hlt
sbb
sub
dec
sbb
mov
in
bound
rcll
push
dec
dec
lcall
jo
sbb
push
in
imul
mov
dec
or
testb
lret
in
inc
dec
cmp
jne
sbb
sub
aaa
add
imul
into
add
mov
jle
das
xchg
test
fnstcw
call
daa
sbb
jb
cmpsl
call
fbstp
aad
les
push
mov
adc
test
shlb
inc
mov
lock
pushf
dec
insb
divb
add
sbb
xchg
imul
cltd
push
or
cmp
fsubrs
xlat
adc
push
inc
adc
fld
lea
lret
test
mov
mov
adc
lret
fcoms
sbb
mov
mov
ljmp
movsb
cltd
and
arpl
xlat
rcrb
add
js
inc
call
jae
pop
jmp
lock
push
pop
loope
cmpsl
xchg
shlb
push
ja
cs
mov
imul
jmp
mov
in
push
mov
pop
sbb
add
pop
cld
add
fwait
movb
cmpb
push
dec
pop
pop
bound
xor
mov
loop
fisubrs
ja
dec
jg
add
pop
enter
fmuls
int
gs
sbb
std
int
out
sub
into
xchg
sub
mov
ret
xor
rcrb
push
xorb
imul
push
mov
or
mov
rcr
leave
je
xchg
pop
and
loope
lods
push
pop
lret
rorl
scas
cmp
fcomip
imul
mov
sti
ja
je
add
jl
and
inc
iret
xchg
es
stc
dec
sbb
mov
dec
xor
adc
out
cltd
fldt
lds
std
mov
push
jmp
push
int3
xor
aaa
mov
fcoml
jmp
sub
andl
mulb
and
xor
push
in
lcall
jl
cmp
mov
inc
out
aad
leave
sbb
test
mov
in
js
dec
mov
mov
cmp
pop
mov
cli
mov
in
add
or
in
inc
sbb
pusha
mov
mov
or
push
xor
das
hlt
test
jne
and
xor
es
push
adc
jle
cmp
jns
mov
fdivr
idivb
dec
pop
mov
jno
jno
bound
add
fbstp
dec
icebp
jno
in
int
dec
mov
mov
xor
test
xlat
pop
jbe
addr16
pop
adc
mov
push
pop
clc
ret
adc
in
push
xchg
in
dec
ljmp
mov
fwait
sbb
jno
out
add
aas
cwtl
clc
xchg
orl
sub
and
popf
jo
adc
mov
sub
fmulp
jae
or
mov
int
bound
mov
ret
dec
das
fsubrl
int
pop
cmp
mov
out
push
jb
adc
lds
sub
xchg
out
pop
mov
adc
push
dec
or
out
stos
lods
incl
push
jns
dec
and
ret
jbe
add
cmp
jmp
mov
mov
stc
xor
in
fwait
push
add
gs
arpl
jecxz
jae
mov
inc
loop
mov
pop
and
lods
sti
add
mov
pop
ljmp
shll
hlt
sarb
pop
inc
xchg
cli
dec
cmc
sbb
divps
scas
mov
sahf
in
sub
aas
mov
cmp
jae
sbb
popf
and
jl
jno
inc
insl
fildl
pop
inc
sub
push
jb
fstpl
pusha
data16
sarl
bound
mov
popf
push
push
mov
lahf
and
scas
pop
jns
push
add
mov
imul
lret
incb
cmp
inc
add
pop
in
xor
and
jecxz
lret
inc
cmp
inc
das
popf
inc
adc
inc
lds
adc
mov
pushf
test
jle
cmp
sub
fnsave
cmp
inc
mov
insb
stos
sar
jmp
push
add
lahf
loop
mov
xor
mov
mov
addr16
add
or
pop
scas
xor
jns
adc
jle
dec
pop
mov
les
push
jmp
mulps
inc
clc
sub
dec
int
push
outsl
ja
xchg
shll
cmpsb
pop
stos
adcb
shrb
mov
and
sub
mov
out
in
adc
xchg
cmovle
jmp
push
out
jmp
inc
xor
mov
sub
aas
jmp
es
inc
repz
lock
pop
in
into
adc
pop
and
or
or
add
rcrb
loopne
or
fcoml
mov
outsl
push
or
lock
xchg
jno
add
jbe
outsb
mov
sub
sub
cltd
add
or
aad
in
loope
iret
sbb
movsl
loopne
popf
sahf
push
filds
out
xchg
and
and
mov
clc
push
mulb
jae
out
push
cmpsl
popa
mov
pop
into
lahf
faddl
aaa
pop
sahf
xlat
bnd
sarb
xor
xor
fcoml
mov
push
data16
lret
punpckhdq
pop
inc
mov
into
insb
pop
outsb
outsl
mov
in
jno
dec
nop
imul
mov
je
jnp
mov
ds
mov
call
add
pop
scas
and
xor
xor
xor
and
inc
jno
repz
cmp
sub
leave
and
jl
mov
push
push
aam
xor
jmp
loop
jae
cmpb
hlt
cs
push
dec
cmc
pop
enter
imul
cmp
push
adc
sub
cld
cltd
mul
jnp
mov
jle
les
bound
xchg
fiaddl
ja
jno
idivl
hlt
outsb
xor
lds
inc
out
adc
sub
aad
sbb
insl
mov
insb
mov
gs
mov
insl
mov
sub
scas
pop
shl
pop
lea
subl
addr16
clc
cmc
push
popf
daa
xchg
mov
jle
and
cmp
stos
mov
ljmp
add
and
xor
xor
sahf
push
call
leave
or
std
sahf
xchg
fsubrs
mov
jg
dec
jo
dec
xchg
mov
daa
mov
or
nop
push
fsubl
adc
imul
xor
outsl
cmpsb
orl
repnz
fs
jo
xchg
ficompl
jns
mov
mov
cmp
ret
sbb
mov
xchg
lcall
mov
orl
pop
je
cmpsl
ret
mov
inc
cmp
fisubrl
jg
jno
dec
loopne
mov
sbbl
movsl
addl
adc
mov
test
push
gs
push
push
mov
aam
fstps
xchg
pop
scas
push
mov
push
mov
sbb
fisubrs
popf
rcll
xchg
jge
dec
cmc
leave
mov
orb
or
and
sub
call
dec
push
jae
mov
mov
add
enter
add
jnp
sub
or
psrad
xlat
inc
imul
stos
repnz
push
sbb
inc
mov
dec
inc
xor
sarl
xor
jne
and
mov
cmp
inc
sbb
xchg
and
jp
ret
sahf
stc
addb
scas
and
sub
lret
jb
push
rcrb
fs
lret
jl
repnz
aad
addr16
ljmp
mov
addr16
xor
scas
dec
add
jns
fbld
xor
and
xchg
mov
push
cli
dec
lods
fstl
and
aas
xchg
xchg
fstl
pop
pusha
cwtl
dec
push
sbb
push
fisttpl
cmp
add
jno
icebp
pop
mov
mov
out
pop
inc
lods
movsl
into
push
cmc
adc
pop
sbb
leave
leave
lods
sbb
mov
test
push
movsb
jecxz
adc
add
sub
rolb
jp
xchg
push
inc
mov
jns
dec
push
jbe
mov
sub
aad
xchg
std
iret
pop
jbe
addr16
popf
fistl
lcall
in
fs
pop
mov
pop
mov
add
lea
in
rorl
mov
cmp
shrl
je
jecxz
mov
cmp
xor
xchg
stos
xchg
inc
fistps
lods
mov
mov
dec
aaa
and
fidivrs
loopne
shrl
sarl
call
sbb
fldcw
sub
outsl
xchg
push
and
in
inc
or
movsl
fisubrs
repnz
scas
call
call
lret
bound
xor
pop
pop
cmpsb
mov
cmpsb
imul
dec
insb
loopne
scas
lcall
scas
mov
stos
in
mov
jo
lock
push
imul
sub
mov
add
addr16
std
push
out
sub
pop
mov
jmp
inc
dec
cld
and
push
insl
mov
push
outsb
jo
jg
sbb
mov
xor
fildll
mov
mov
sub
mov
je
mov
fsubs
dec
jle
fstpt
into
into
mov
fcom
inc
aad
push
loope
fucomip
xor
movsb
push
ss
push
sub
flds
in
addb
jg
shl
test
xchg
add
pop
fildl
popa
cmp
test
jne
xchg
adc
das
inc
jno
sbbb
cmpsl
push
lret
add
test
push
mov
shlb
stos
push
or
mov
dec
bound
xchg
xor
jecxz
adc
add
push
cmp
xchg
cmp
shr
js
sub
rclb
pop
data16
gs
or
sahf
push
test
lds
insb
test
or
pushf
insb
subb
jge
shll
imul
inc
fnsave
popa
lock
lcall
sbb
aam
cmp
cmp
outsl
call
and
mov
and
push
ret
add
add
jno
adc
je
mov
fmuls
dec
test
out
aam
add
adc
push
imul
jl
out
sbb
xchg
inc
sti
lahf
push
cmp
adc
sets
mov
dec
xlat
mov
pop
adc
and
push
cmpsb
sbb
scas
mov
and
fs
xlat
cmp
sbb
test
pusha
sbb
das
pushf
mov
lcall
outsl
and
cmp
das
jg
cli
pop
inc
mov
scas
dec
jae
mov
sbb
mov
call
bswap
sti
add
rolb
shlb
lcall
push
push
xor
inc
sti
pop
add
fistpl
or
xor
inc
daa
pop
dec
xor
test
rol
cmp
ficoml
pop
movsb
cmp
call
push
iret
inc
adcb
enter
shl
xchg
iret
sahf
and
mov
push
xchg
in
jle
flds
push
push
dec
inc
in
or
jo
jae
xchg
jge
dec
cmp
or
insb
inc
daa
sbb
inc
mov
stos
and
test
or
and
jae
jecxz
fadds
pop
dec
rorb
sub
insb
fs
lock
cli
push
xchg
cmp
leave
jmp
daa
sbb
lea
cwtl
stos
or
mov
fadds
inc
gs
mov
mov
or
mov
mov
ds
jmp
sub
pop
js
in
js
xor
das
pushf
sti
lea
dec
scas
out
mov
pop
pop
push
push
adc
cs
icebp
push
dec
fisubrl
jno
ret
dec
sub
shll
push
ret
jb
popa
pop
loopne
clc
popa
sti
mov
cmp
mov
cmp
negb
dec
in
xor
adc
arpl
inc
dec
pop
enter
or
hlt
mov
ret
xchg
cld
push
test
xorb
nop
loop
pop
std
ljmp
je
inc
out
jmp
dec
pop
shll
xchg
xchg
push
pop
add
lret
stos
cmp
dec
cmp
shr
outsb
mov
fisubs
shrl
leave
xorl
fs
lret
mov
shl
mov
ret
pop
sbb
faddl
jge
push
mov
mov
popa
pop
loope
movsb
test
mov
and
outsb
leave
fwait
adc
negb
push
xchg
sbb
dec
lods
cli
cld
pop
sbb
push
jge
iret
clc
inc
mov
mov
addr16
xchg
insb
sbb
jne
inc
fmuls
daa
es
and
mov
xor
insb
sti
add
repz
daa
xor
add
mov
jno
shrl
pop
es
xor
and
lahf
pop
cmp
push
add
mov
fwait
cmpl
cs
cmc
jecxz
adc
sub
push
inc
je
push
lds
adc
cmc
inc
jle
inc
sub
and
in
dec
and
jno
sub
dec
decb
hlt
fdiv
jbe
jo
pop
push
dec
inc
cmp
int3
out
insl
mov
inc
stos
mov
and
sub
int3
adc
cli
dec
mov
fsubs
push
popf
int
out
sub
sahf
lds
pop
cld
sub
mov
pop
fwait
stos
cli
ret
jne
sbb
outsb
jge
sbb
enter
jns
sub
jae
xor
sbb
dec
daa
fstpl
and
pop
xchg
ja
mov
fs
pop
stos
cli
pop
jb
sbb
jno
adc
cmp
mov
arpl
xchg
js
pop
inc
sub
inc
or
pusha
lods
mov
es
mov
push
cmp
aam
mov
mov
pop
xchg
insl
cmp
adc
add
mov
testb
dec
data16
xchg
sub
clc
push
and
movsb
out
imul
push
bound
adc
mov
sub
je
add
fsub
xchg
movsl
hlt
rcr
std
das
std
inc
sub
xor
pop
add
sub
dec
popa
sub
mov
mov
pop
jmp
cmp
or
pop
cmp
pop
leave
add
fwait
rcr
sbb
aas
in
adc
dec
stos
or
or
push
push
inc
mov
in
add
in
adc
out
pop
or
mov
cli
jecxz
jb
mov
mov
aaa
repnz
push
or
push
nopl
jecxz
popf
xor
add
jae
cwtl
fldl
pop
fcomps
fs
lcall
lret
mov
pop
inc
cs
xchg
sub
dec
sub
sti
xchg
orl
out
mov
je
jae
push
sub
movsl
xchg
jmp
rcl
xchg
mov
lcall
scas
lret
sub
inc
imul
dec
pop
add
ljmp
xchg
stos
or
mov
js
in
mov
out
test
xchg
ljmp
fstp
in
jecxz
cwtl
pop
sahf
lahf
sbb
mov
fucomi
popa
xchg
mov
mov
scas
sbb
clc
mov
ret
inc
test
lock
and
mov
icebp
xor
insb
or
or
nop
sti
add
pop
es
sbb
sub
jecxz
repnz
in
mov
pop
addr16
mov
es
xchg
and
xchg
dec
mov
fiadds
pop
sbb
addl
outsl
push
cmpsb
std
cmc
dec
mov
loope
xor
and
or
xor
inc
sbb
fwait
pop
or
ja
adc
fldenv
adc
add
aam
repz
mov
stc
inc
pop
int3
das
and
gs
xor
cmc
stos
aad
in
push
push
jge
loopne
insl
jmp
sbbl
and
jbe
xor
adc
mov
xchg
jb
lods
sbb
jmp
jmp
pushf
adc
xchg
mov
je
lahf
frstor
jo
js
das
add
push
mov
push
pop
out
jno
outsl
mov
daa
and
mov
xchg
rolb
enter
pop
das
sub
popa
aam
pusha
jb
test
dec
cmpsl
and
jmp
or
sub
mov
cmp
bound
adc
add
aam
dec
sbb
lods
cmpsl
les
xchg
jnp
pop
sbb
imul
sub
inc
cli
daa
outsl
mov
and
data16
outsl
jmp
inc
or
xor
pop
pop
mov
mov
push
movsl
add
enter
aaa
mov
lods
imul
lret
dec
push
pop
scas
loope
xor
sub
rcl
sub
loope
jge
cs
jmp
test
sbb
xchg
mov
call
or
imulb
sbb
ficompl
sbb
fucom
xor
scas
cld
xchg
pop
mov
cmpsl
cltd
mov
pop
mov
adc
inc
dec
gs
shlb
jbe
jno
movsl
sbb
test
out
push
scas
mov
sbbb
popf
xchg
iret
xor
outsl
int
clc
scas
mov
mov
inc
jle
pop
cmp
pop
fmuls
mov
loope
mov
enter
add
mov
mov
stc
sbb
push
jg
mov
movsl
mov
ja
jp
jg
cmp
ss
xchg
jne
sbb
xchg
addr16
cmp
and
icebp
cmp
jecxz
stos
mov
arpl
and
jl
mov
add
lods
rorl
lea
lcall
insb
loope
cwtl
ret
adc
xlat
icebp
sub
imul
aaa
sbb
aaa
mov
inc
add
and
sub
cltd
push
adc
movsl
or
cltd
rcl
cld
mov
insl
std
dec
fsubrl
xchg
fcomps
jecxz
dec
and
mov
repnz
adc
sarl
or
sub
pop
jle
sbb
add
fcoml
sub
jecxz
cld
ret
push
out
push
pop
fcompl
xchg
mov
add
xorl
or
ja
fimull
loop
fwait
roll
fistps
mov
dec
sub
jle
pop
fst
sbb
dec
inc
jnp
insb
mov
movsl
mov
inc
mov
pop
xchg
adc
mov
adc
pop
dec
ds
into
inc
pushf
fmuls
ror
sbb
icebp
mov
std
cwtl
popf
mov
and
sahf
adc
int3
cld
adc
lcall
in
cmp
push
xchg
fldenv
xchg
fwait
xlat
cmp
jle
fs
xor
testl
movsb
imul
pop
xlat
cmpsl
mov
ja
imulb
and
mov
cmp
mov
lret
mov
pop
lahf
imul
jo
jp
inc
adc
mov
pop
cld
insl
insb
xor
xchg
and
or
and
mov
test
cmp
add
pop
pop
mov
pop
add
dec
sbb
cmp
hlt
xor
sub
ret
cmp
add
lods
out
xchg
or
mov
mov
adc
xchg
cmp
movl
jle
out
out
mov
xlat
repz
dec
dec
xchg
daa
ds
lahf
push
aad
inc
icebp
out
jecxz
push
subb
nop
mov
or
xchg
xchg
jne
xor
out
add
lock
mov
addl
repz
mov
dec
push
xchg
and
or
pop
popf
mov
test
sbb
jmp
jns
loope
jle
popf
mov
test
mov
fdivs
lret
stos
pop
xchg
push
aaa
dec
or
pop
xor
jb
mov
lret
mov
orb
test
dec
sbb
or
dec
cld
imul
imul
adc
xchg
fnsave
in
imul
cmp
add
scas
dec
cmpsb
test
push
inc
fcomi
xchg
or
dec
stos
mov
jle
inc
xor
cwtl
fcoml
leave
or
jbe
sbbl
push
mov
int
mov
fisttps
out
jns
cmp
dec
mov
mov
mov
aas
in
adc
ds
repz
das
xchg
loop
add
jo
aaa
out
push
jbe
mov
mov
jae
ds
arpl
add
inc
sbb
mov
inc
das
jnp
dec
mov
cltd
sbb
pop
shl
inc
add
dec
je
push
cmp
dec
test
sub
loopne
adc
push
fcoms
pxor
lahf
and
cmove
mov
aad
rcrb
test
dec
lahf
mov
loop
jne
aaa
leave
into
jbe
mov
sbb
icebp
or
leave
push
movsl
xchg
int
popf
fs
imul
es
jo
std
mov
aad
imul
gs
mov
xchg
stos
subl
sub
loope
fisubrl
push
push
mov
inc
popf
mov
inc
xchg
fisubs
nop
fsts
inc
cwtl
sahf
push
fstps
cltd
aas
mov
pop
inc
std
fisttpl
cmp
sub
fwait
out
pushf
rorl
ret
out
lahf
movsl
cmpsl
lock
push
and
jae
inc
test
adc
insl
push
lret
pop
jmp
out
xchg
test
pop
aas
mov
jmp
enter
lods
pop
pop
cmp
addr16
es
jnp
or
pop
out
mov
popa
cwtl
and
inc
and
xor
jbe
rclb
imul
jb
push
push
call
dec
rolb
jp
xchg
ret
and
pop
das
pop
pop
mov
xor
xor
inc
neg
imul
xchg
mov
push
cwtl
or
add
aad
sbb
mov
or
mov
dec
jnp
ror
xchg
ret
pop
rcll
mov
and
int3
xchg
xor
cmp
mov
mov
in
enter
push
mov
adc
mov
cmp
fwait
mov
outsl
fcoms
popa
scas
push
pop
iret
jbe
xchg
in
movsb
mov
jns
adc
inc
mov
call
je
pop
sub
xchg
jo
fisubs
aad
sbb
pop
sbb
iret
std
je
dec
dec
sub
pop
mov
test
lret
lcall
mov
in
pop
and
loope
and
push
xorl
mov
movsl
imul
sbb
add
fsubrl
rcrl
je
xor
sarb
mov
sub
loope
mov
enter
cvtps2pd
add
adc
add
and
add
fistl
sub
sbb
pop
pop
or
jae
fs
imul
mov
jo
or
sub
fimuls
mov
out
out
or
or
mov
mov
fistps
sub
jecxz
jb
pop
jbe
inc
pop
push
and
or
movsb
gs
jecxz
xchg
jo
lret
pop
xchg
xor
scas
jg
or
cwtl
out
fldcw
ds
cld
ljmp
mov
xchg
repnz
pop
mov
test
add
leave
sti
fwait
scas
jle
psubusw
mov
in
cmp
jno
out
dec
push
lock
sbb
js
testl
aaa
cs
cmp
lcall
mov
fildl
dec
push
mov
inc
jecxz
xchg
fidivrs
add
scas
and
jmp
jns
test
push
pop
lret
insl
push
inc
popf
or
jg
cld
lods
les
pop
sti
sub
insl
nopl
lods
sar
out
sbb
sub
into
lret
push
dec
pop
cmpsb
fcoms
cmp
imull
rolb
popf
popa
dec
xor
add
mov
js
sbb
dec
scas
lock
les
sbb
push
cmp
enter
daa
movsb
dec
icebp
fldl
fldenv
sbb
leave
dec
test
mov
sbb
insb
xor
lret
xlat
mov
scas
sub
jae
jae
jb
mov
mov
dec
shrb
int
add
push
add
out
fdivrs
mov
push
lds
inc
clc
cli
xor
mov
pop
in
and
repnz
and
pusha
pusha
mov
mov
hlt
loope
add
test
lods
orl
mov
cmpsb
movsb
inc
mov
mov
movsl
jno
jb
pop
pop
mov
dec
xor
lahf
jb
nop
and
xor
xor
gs
push
pusha
dec
sarl
das
call
fdivr
movsb
lock
pop
out
mov
test
sub
das
cmp
jns
pushw
pop
mov
rcrl
xor
out
sub
push
popa
add
icebp
dec
dec
leave
mov
jo
or
pop
cmp
mov
xchg
sbb
lods
call
int
jno
std
sbb
jne
loope
mov
das
inc
mov
mov
and
scas
jnp
aaa
xchg
xor
pop
pop
push
sbb
cld
imul
out
nop
mov
and
mov
push
out
jbe
push
jb
pop
ficoml
push
inc
jae
inc
imul
popa
repz
divb
cmp
add
jb
sbb
mov
arpl
repnz
mov
cmpsb
dec
push
hlt
adc
cmp
adc
imul
and
jmp
inc
fwait
popf
lods
je
adc
ss
shrb
es
aad
sahf
jl
jge
sbb
stos
popf
incl
je
jne
mov
xor
pop
adc
and
mov
lods
into
jl
shll
jecxz
lods
movsl
cwtl
dec
or
sarb
int
mov
mov
clc
adc
adc
mov
mov
jo
push
cwtl
mov
jmp
fldt
imull
test
idiv
test
shlb
repz
ret
and
out
mov
stc
pop
dec
adc
add
add
loop
in
cmp
lods
adc
insb
movsb
cmp
jae
inc
out
jne
jo
outsb
sbb
inc
and
mov
mov
lods
jl
push
cmp
scas
sbb
and
imul
push
mov
xchg
loope
out
xchg
fadds
pop
mov
or
mov
pop
into
lock
repnz
arpl
jmp
and
imul
and
push
dec
es
mov
push
inc
adc
pop
sub
inc
cmp
push
and
ljmp
mov
mov
push
jmp
inc
pop
aam
div
inc
ret
add
fwait
dec
int3
aad
aas
fcmove
loop
sbb
jmp
fwait
call
fs
add
es
je
shrl
lods
inc
shll
pop
out
inc
into
jnp
jns
movsl
cmp
pop
enter
and
es
stos
sbb
shlb
stos
sarb
js
jl
pop
lahf
movsb
in
mov
push
ds
xchg
sbb
rclb
sub
mov
insl
xchg
int3
lods
mov
sahf
fs
ljmp
les
inc
std
adcb
xchg
xor
ss
in
mov
and
add
sub
push
inc
loop
sbb
mov
push
movsl
cmp
and
fdivrl
fsubl
or
xor
ljmp
dec
push
pop
add
fwait
xchg
xchg
xor
bound
sbb
sbb
sbb
xchg
pop
adc
cld
enter
or
pushf
aad
xchg
jne
pop
sbb
leave
fistpll
push
or
mov
ds
sbb
aaa
and
sbb
bound
pushf
loop
mov
cld
mov
jge
arpl
out
les
pop
inc
shll
ffreep
dec
mov
adc
daa
std
mov
call
mov
ficompl
sub
xchg
mov
mov
mov
into
nop
cmp
cmp
push
pop
out
cmp
pushf
int3
cld
xor
rorl
pop
outsb
sarb
arpl
cli
mulb
aam
xchg
xchg
sub
das
ja
jecxz
addl
nop
pop
mov
mov
sbb
dec
adc
inc
and
out
mov
jo
dec
jns
mov
xchg
mov
into
daa
adc
pop
or
pop
xor
pop
icebp
stc
movb
in
std
lds
stos
and
cwtl
aaa
mov
mov
iret
mov
or
shrb
cld
lret
in
jl
stc
out
pusha
mov
jmp
cmc
mov
xor
sti
sub
pop
xor
mov
pop
clc
mov
xchg
loopne
pop
sbb
pop
inc
fistpl
stos
cmpsl
repz
push
ret
mov
jne
inc
lods
out
out
cmp
cld
adc
cmp
and
mov
sbb
add
fs
popa
xchg
add
enter
in
jae
je
ds
push
clc
test
pop
xchg
aas
xor
int3
inc
add
imul
cmpsl
dec
out
push
push
xchg
cmp
repz
cmp
inc
jns
mov
push
lds
loop
jno
sub
pop
aam
lds
mov
mov
ja
imul
outsb
inc
or
fdiv
imul
push
xor
aas
dec
popf
pop
cmp
stos
lods
loopne
nop
jmp
dec
test
outsb
mov
push
push
sbb
pop
push
pop
mov
sbb
xor
pop
or
jmp
push
addr16
push
insl
ja
inc
fwait
test
pop
mov
cmc
pop
lcall
mov
dec
incb
bnd
scas
addr16
jbe
dec
out
lods
xchg
adc
and
stos
pop
inc
cld
add
ljmp
fs
pop
jne
inc
aad
data16
mov
xor
mov
int
xor
in
xchg
sahf
repz
clc
dec
mov
enter
xor
movsb
mov
mov
popa
xchg
sub
add
das
stos
inc
lods
aaa
subl
scas
or
pusha
neg
aas
lcall
lock
loop
xchg
fsubr
loopne
out
cli
mov
clc
sahf
sub
cmc
jg
sti
mov
sbb
cmp
xchg
lcall
pop
and
push
mov
call
sbb
xor
cmp
mov
cwtl
fs
add
lret
mov
mov
xlat
ret
adc
xor
adc
push
cwtl
mov
ss
test
mov
jp
and
imul
xor
insl
pop
adc
nop
jle
dec
imul
mov
adc
orl
cs
dec
aad
push
clc
xchg
xchg
mov
jp
dec
insl
cltd
pop
cmp
div
rcrl
orl
fwait
xchg
fistl
pop
push
or
dec
test
mov
sti
xchg
test
mov
fldenv
mov
pushl
push
cs
mov
jne
ljmp
cmp
sahf
pusha
or
push
fstpt
les
adc
jl
imul
arpl
je
rcrl
rcll
sub
outsl
add
dec
xchg
xchg
mov
repnz
mov
inc
loope
jle
mov
nop
rcr
mov
adc
sbb
pop
icebp
test
sbb
or
push
lcall
and
gs
cmc
in
pop
movsb
shrb
inc
mov
ficoml
enter
push
mov
push
aas
fwait
jle
and
mov
mov
test
and
out
sbb
mov
les
ljmp
lds
xchg
sbb
and
sti
jmp
adc
jle
lods
push
mov
or
sub
cwtl
pushf
jge
mov
xor
int3
rcrb
nop
cmpsl
insl
xchg
ss
mov
adcb
xor
mov
xchg
pop
sub
stc
cmpl
aaa
pusha
test
jbe
push
xchg
fdivs
ret
mov
xor
aas
pop
sub
jns
sub
push
fsts
xor
sbb
adc
out
jl
mov
mov
jp
fcompl
or
xchg
adc
loopne
xlat
imul
movsl
cwtl
adc
xor
inc
imul
lods
fistpll
push
pop
outsl
lret
sub
fistpll
aam
add
jnp
negl
iret
mov
xchg
jle
pop
cmp
clc
fsts
mov
add
dec
je
cld
out
mov
mov
mov
shlb
adc
dec
push
cmc
mov
push
out
pop
add
add
andl
mov
dec
xchg
inc
inc
dec
sub
push
iret
lea
loopne
test
out
cmpb
or
ss
xor
out
push
push
out
out
cmp
mov
les
dec
imul
cmp
ss
sbb
inc
sbb
add
cli
test
repnz
mov
add
dec
adc
mov
out
aas
push
scas
fnstcw
mov
test
xchg
add
mov
fcompp
je
adc
pop
in
lods
mov
in
rcll
in
outsb
pushf
enter
add
inc
mov
pop
scas
test
test
mov
aam
enter
lcall
popa
clc
add
mov
lock
mov
hlt
sub
add
repz
sbb
push
sub
mov
out
xchg
fs
or
and
pop
mov
jecxz
outsb
test
out
and
sti
aaa
jge
lds
cmpb
stc
ja
ficomps
subb
push
sub
gs
loopne,pn
jnp
mov
sarb
mov
jne
cli
jb
in
or
jg
dec
dec
and
mov
pop
hlt
sbb
ret
outsl
jno
or
adc
ss
add
imul
cmpsb
test
lock
jno
test
pop
scas
jno
and
mov
xchg
mov
sahf
mov
xchg
xchg
mov
stos
xchg
wrmsr
iret
xchg
mov
cmp
push
inc
jp
es
lea
shll
jl
xchg
std
cmp
scas
out
sbbb
mov
jg
aam
mov
adc
mov
sahf
dec
mov
mov
xchg
xchg
test
jmp
jns
inc
mov
cmp
mov
jle
pop
shll
push
xor
or
out
cmp
fcmovbe
add
out
jns
sarl
sbb
cwtl
fistpl
adc
mov
cld
popf
daa
hlt
xchg
jmp
cmp
xchg
xchg
adc
xchg
add
rolb
push
mov
mov
into
pop
or
mov
insl
sahf
in
rcrb
xchg
cmp
xorb
daa
cli
ss
xchg
xchg
fbld
mov
inc
ljmp
es
add
call
fistps
movsb
iret
xor
movsl
xchg
outsl
mov
sbb
cld
or
ret
roll
mov
jo
mov
mov
and
movsl
pushf
shll
xchg
and
lock
inc
sti
xchg
xchg
push
push
sub
out
jne
out
call
fnsave
enter
mov
fimuls
movsl
pop
clc
dec
cmpl
roll
or
push
ljmp
mov
stos
cmpsl
sub
inc
lods
mov
mov
repnz
cltd
pop
mov
mov
xor
loopne
out
lock
push
mov
and
loop
pop
jg
sub
dec
sbb
lods
test
mov
and
xchg
ret
mov
int3
cld
and
lock
outsl
mov
daa
in
push
movsl
mov
test
mov
xchg
cmpsl
lcall
add
stc
jb
in
fwait
dec
dec
jbe
lret
mov
ret
push
adc
lret
lods
mov
mov
inc
addr16
data16
mov
pusha
adc
xchg
lret
jo
lea
mov
add
repnz
adc
jle
iret
cmp
sbb
xor
stos
xor
leavew
insb
push
pop
int3
lods
into
and
hlt
mov
jb
movsl
pusha
sub
leave
or
shl
daa
mov
jns
fwait
pop
sti
repnz
add
jnp
sbbl
dec
push
adc
stc
xor
popf
dec
rcrb
mov
std
fwait
lahf
adc
bound
in
ja
stos
jno
or
cld
jle
fs
inc
adc
stos
cmp
mov
stc
out
or
je
cld
jbe
mov
lret
lcall
pop
and
xchg
imul
xchg
addr16
adc
cmp
cmp
push
in
out
mov
test
cmp
or
and
adc
icebp
dec
aad
pop
sbbb
movsb
jl
adc
js
cmp
push
daa
lock
aam
sbb
shlb
ret
mov
ret
mov
in
xorb
add
dec
mov
rclb
call
xchg
pop
dec
jae
into
sub
mov
stos
in
mov
adc
jae
mov
out
or
adc
mov
scas
hlt
pushf
in
insb
aad
mov
jl
test
fimull
xor
ja
push
aas
cltd
cld
js
inc
jge
xorl
shll
loope
mov
iret
mov
dec
out
movsl
cmc
imul
xchg
inc
jo,pn
test
add
fwait
sbb
jge
bound
cmp
adc
lock
fdiv
in
push
cmp
adc
sbb
push
mov
jg
out
and
inc
inc
movsb
xlat
or
jnp
dec
pop
dec
mov
out
push
sbb
cli
ret
insb
std
arpl
repz
pop
xchg
xor
mov
mov
stos
adc
add
or
xorb
rorb
push
jg
cld
in
cmp
jmp
pop
adc
sbb
les
js
jb
dec
lahf
xor
pop
loope
pop
and
outsb
pop
mov
sbb
or
sbb
cli
nop
lock
jecxz
jnp
push
pop
idiv
sub
in
pop
sub
je
pusha
fwait
adc
sbb
dec
fisttps
out
mov
stos
inc
push
mull
and
iret
lea
sub
or
xchg
mov
cmc
jo
imul
test
jp
pop
jp
jnp
add
jns
push
push
stc
ret
xchg
sbb
mov
sbb
dec
dec
bound
call
push
out
sub
aad
rol
ja
pop
idivl
and
inc
xchg
jmp
lods
xor
rcll
call
lret
add
loop
cs
sbb
daa
fldt
in
dec
cmp
sub
or
push
pop
adc
cmp
js
xchg
stos
ljmp
int
ds
xor
xchg
pop
and
dec
arpl
mov
repz
ds
stc
sbb
push
out
and
jae
call
and
loop
pop
jb
mov
and
pcmpgtw
je
sub
cs
mov
fbld
lret
mov
cmp
or
mov
dec
sbb
xchg
in
mov
rcrb
mov
dec
mov
or
xor
and
daa
mov
pop
add
lahf
or
mov
push
mov
pop
pushf
jl
push
xorl
mov
scas
stc
cmp
gs
push
bound
data16
jnp
lods
adcb
out
lea
sub
xchg
lods
mov
pop
xor
sbb
add
outsl
int3
lahf
jle
into
mov
xchg
out
adc
jge
xor
repz
jo
test
cmc
mov
mov
out
popa
jp
cmp
sbb
pop
and
add
xchg
jmp
in
mov
ja
out
in
cmp
pop
mov
ljmp
lahf
aas
loopne
loop
and
add
movsl
pop
xorb
or
gs
rcrb
call
mov
addr16
outsb
xor
cmp
mov
fldcw
mov
inc
rcrl
mov
or
mov
push
and
aas
adc
fwait
out
or
inc
xlat
and
or
and
cmp
cmpsl
mov
and
fwait
push
mov
aam
pusha
mov
jp
sbb
mov
test
mov
dec
jne
pop
lock
mov
es
add
frstor
int3
clc
stos
dec
adc
outsl
and
mov
and
mov
dec
jnp
xchg
adc
sbb
inc
mov
xorb
sbb
int
jle
into
adc
sbb
sub
fs
insl
push
or
push
cmp
in
mov
loope
rolb
cmc
fwait
add
in
push
xchg
popa
xchg
aam
pop
mov
andb
mov
jnp
lods
repz
pop
lret
insl
add
sbb
lahf
ljmp
jge
adc
outsl
stos
push
mov
xor
push
lidtl
mov
push
daa
cmp
lock
and
movl
std
sarl
mov
outsb
add
inc
jbe
dec
jg
daa
aam
push
int3
cmp
xor
pop
xchg
cld
sub
lcall
into
lock
ret
and
mov
and
xchg
movsb
dec
xchg
hlt
daa
mov
and
lea
inc
adc
push
test
jmp
loop
data16
dec
mov
out
mov
arpl
pop
push
shrl
jecxz
and
cmpsl
inc
fdivrs
ja
inc
mov
cmp
sti
loopne
adc
cmp
ja
movsl
dec
enter
hlt
xorl
pop
push
fs
sbb
cmpsb
inc
cwtl
enter
adc
repnz
jnp
xchg
ss
cld
adc
lahf
mov
jmp
insb
xchg
xor
das
enter
mov
clc
js
jbe
cmp
sbb
push
cwtl
repnz
or
fbstp
pushf
mov
popf
push
mov
fmul
jno
stc
mov
xor
inc
aam
outsl
jno
es
int3
cltd
stos
aaa
popf
add
sbb
scas
sub
cmc
sbb
insb
adc
cmp
fs
addr16
add
inc
orb
jns
out
insb
pop
push
xchg
rorl
mov
outsb
dec
inc
inc
fbld
xchg
sbb
push
sbb
fwait
jle
iret
mov
adc
mov
rcrb
fwait
sub
or
dec
popa
in
push
mov
bound
dec
test
push
mov
shl
push
jmp
add
fld
enter
dec
jo
xchg
push
xor
mov
loopne
ficompl
aad
fmuls
inc
jl
mov
dec
mov
scas
sbb
shlb
sub
lods
pop
and
mov
aad
xchg
call
sub
pusha
cmpsb
popf
pop
call
cmp
jne
hlt
out
jle
lahf
mov
mov
rcl
sbb
cwtl
cmp
dec
sub
mov
xchg
mov
mov
or
mov
xchg
in
jae
lds
shlb
jge
scas
mov
aas
int
and
jnp
mov
std
sub
and
in
cmp
rcr
cmp
pushl
jg
cmp
xor
or
dec
sahf
mov
push
test
jno
mov
push
push
push
cmp
jecxz
mov
or
jno
addr16
test
or
mov
data16
push
loopne
fcoms
mov
and
rcrl
int3
or
popf
adc
adc
leave
mov
pop
gs
pusha
sub
notl
jae
or
in
aam
mov
movsl
loop
sub
xchg
pop
add
mov
pop
sti
das
mov
ret
ret
mov
shll
dec
sbb
arpl
out
loop
test
sub
mov
movsl
dec
movsl
inc
inc
jle
addr16
arpl
fcmovnb
pop
cmc
fisubrs
arpl
rcll
scas
lods
in
sub
sbb
cmp
data16
push
movsb
repz
or
rorl
adc
lds
mov
fwait
jecxz
mov
cltd
push
cmp
iret
gs
pop
stos
lds
push
popa
add
pop
push
push
imul
cmpsb
adc
inc
lods
jge
inc
mov
sub
pop
out
in
pop
in
dec
xor
iret
cmp
jp
sbb
test
push
insl
add
ja
add
or
cld
in
std
xchg
mov
xchg
mov
out
sub
cld
inc
mov
dec
ret
aad
pop
mov
scas
push
or
and
popf
out
or
outsb
dec
push
adc
pop
andl
bound
movsl
mov
rclb
inc
push
sbb
mov
shrl
nop
push
cltd
add
rorb
jns
incl
leave
sbb
xor
push
adc
ljmp
xor
fsubs
in
cmp
fisttpll
ljmp
jecxz
ds
insl
and
out
sbb
jnp
sbb
mov
ret
lret
adc
sbb
ja
hlt
or
jmp
mov
push
xchg
leave
fwait
xchg
push
sub
inc
inc
push
int
imul
fsub
or
test
mov
sbb
push
pop
dec
cmp
push
or
and
mov
add
xor
mov
xor
pop
aad
into
jnp
sub
add
mov
sbb
or
fdivrs
cmpsl
pusha
mov
int3
sbb
mov
out
and
cmp
popa
fidivl
pop
cmc
repnz
and
jecxz
add
cld
imul
pop
push
jg
nop
dec
nop
in
jo
leave
sbbb
lds
cmp
and
faddl
clc
xchg
arpl
bound
cmp
jns
in
adc
adcb
loopne
aas
add
movsb
mov
call
cmc
mov
cwtl
mov
repz
mov
test
mov
cmp
iret
dec
xchg
pop
popa
inc
cltd
out
stos
inc
cmp
push
jae
fwait
test
lock
add
xor
ja
into
nopl
pushf
hlt
jno
push
scas
cs
sbb
push
inc
xor
inc
loopne
js
xchg
jb
and
sbb
adc
shrl
lea
ret
in
dec
sahf
in
hlt
enter
in
mov
jno
daa
dec
clc
pop
rcr
xor
popf
dec
push
lock
jle
nop
mov
jge
sahf
stc
pop
shlb
out
sarb
push
lahf
std
xor
jmp
data16
out
jp
adc
ss
lcall
int
dec
popf
fsubrl
pop
orb
xor
push
aad
pop
test
mov
shl
outsl
jl
push
jecxz
push
lock
cltd
aaa
scas
icebp
xchg
add
aam
je
stos
cmp
pop
and
outsb
mov
xchg
data16
ja
mov
mov
dec
outsb
jmp
adc
ret
push
lret
xchg
mov
loop
pop
cmpsb
jae
add
mov
fadd
pop
shrl
mov
roll
xlat
bound
add
dec
lea
fisttpll
jb
mov
mov
pop
push
cmc
push
jae
mov
dec
pop
lods
pop
sub
das
cmc
xor
cs
lods
int3
jb
inc
cmc
sti
pop
out
fcmovnbe
stos
int
sub
pop
adc
add
push
pusha
aam
js
mov
xchg
shl
out
fisttpl
scas
adc
mov
es
leave
mov
pop
movsb
mov
out
sbb
cld
js
xor
rcrb
sub
jnp
inc
push
aas
int3
jmp
mov
movb
push
mov
out
sub
xchg
xchg
xchg
pop
mov
test
pop
dec
int3
push
xchg
mov
pop
call
dec
add
pop
mov
pop
sbb
pop
jnp
and
add
stos
pop
mov
int3
jle
dec
fbstp
lock
xchg
mov
and
sti
divl
cld
fdivp
sbb
std
add
push
sub
aaa
cwtl
outsl
popf
push
xor
fldcw
rclb
test
enter
cltd
arpl
dec
leave
imul
push
xchg
jno
cmp
or
addb
rep
jbe
and
sbb
or
cmp
adc
mov
int3
leave
xor
pop
jmp
xor
lods
add
test
xorps
cltd
pop
sbb
xchg
mov
das
out
lret
imul
popf
xchg
inc
stc
bound
nop
xchg
mov
pop
xchg
push
adc
shll
mov
fpatan
imul
xchg
push
repz
incl
enter
fscale
ds
fwait
data16
rolb
mov
enter
cmp
add
mov
gs
fs
enter
adc
bound
adc
cmp
outsb
or
mov
and
popf
into
das
addl
inc
in
inc
decl
and
scas
cmp
push
cmp
and
data16
jbe
sub
xlat
mov
sub
xchg
mov
loope
dec
imul
mov
inc
lret
adc
je
ret
mov
out
test
sbbb
mov
iret
aam
scas
xor
iret
sub
or
cmp
jecxz
mov
push
fs
jecxz
fs
in
sub
xor
cltd
mov
les
lret
into
and
sarb
pop
insl
mov
fistl
jb
nop
loop
cli
mov
adc
data16
mov
jmp
call
test
push
cmp
es
or
pop
mov
xor
cmp
cmp
add
lods
sbb
add
add
je
lahf
cltd
leave
fisttps
mov
push
sub
pop
and
aas
arpl
push
adc
insl
cld
in
xor
cld
push
or
mul
add
xor
dec
lret
test
sbb
cld
jg
dec
cmp
mov
jbe
adc
test
sbb
jne
jno
pop
scas
dec
xchg
adc
mov
push
ljmp
insl
dec
ja
push
in
fwait
jbe
in
enter
xchg
mov
jno
add
push
jmp
xor
daa
outsl
imul
jmp
movsb
call
jl
jl
cmpsb
inc
xor
dec
stos
insb
test
jge
or
sahf
cmp
cmc
pop
mov
ds
cld
fstps
dec
hlt
sbb
arpl
cld
and
dec
adc
nop
mov
test
mov
adc
mov
jle
dec
xchg
test
adc
jnp
sub
xchg
push
jae
test
adc
dec
pop
lret
outsl
lahf
sbb
daa
add
leave
aam
mov
cltd
pop
pop
sub
in
cltd
add
sti
lret
cmpsb
add
mov
sbb
adc
scas
aam
hlt
scas
out
call
sar
cmp
in
int
or
and
xchg
sub
ror
jnp
pop
mov
aaa
lahf
inc
fimuls
int3
mov
push
mov
and
data16
mov
cltd
fcmovu
subl
and
rep
jno
mov
inc
sub
jns
outsl
stc
mov
daa
int
pop
lock
fmull
andb
sbb
clc
jle
jne
mov
lcall
push
cmpsl
mov
aas
movsl
xor
cmp
lods
mov
rol
insl
repnz
sbb
shrb
ret
push
adc
lds
pop
sub
shrl
stos
or
inc
shl
sbb
xor
stos
mov
test
scas
cmp
aam
repz
xor
insb
into
inc
inc
push
jge
adc
cmp
addr16
inc
lods
mov
popa
setno
imul
mov
insb
xor
dec
rclb
popf
wrmsr
cmc
outsb
ljmp
jp
cmp
popf
and
clc
dec
mov
sahf
push
sub
testl
xchg
imul
pop
negl
jp
pop
mov
xorl
cmp
cld
sti
push
test
xorb
add
dec
cmp
js
fld
ret
add
fldenv
and
bound
xchg
and
sbb
dec
jo
daa
mov
mov
lcall
hlt
mul
es
jmp
cwtl
push
movsl
lods
or
cltd
pop
stc
in
cmpb
aad
sub
sbb
dec
push
sbb
adc
push
jge
mulb
sbb
and
sub
jle
xor
cmc
inc
cmpsb
or
clc
ljmp
test
enter
data16
or
sub
enter
lock
add
adc
adc
aas
popa
inc
mov
popf
movnti
jb
lret
adc
into
mov
mov
mov
sarb
cmp
adc
psubd
stc
push
jae
lahf
pusha
cmp
inc
imul
int
and
and
dec
dec
fisttpl
cld
pop
cmpsb
insb
add
lret
adcb
dec
xchg
data16
std
push
fwait
inc
pushf
jmp
sbb
dec
ja
bound
insb
inc
js
fwait
lcall
std
ljmp
loope
or
adc
xchg
fwait
xchg
aam
mov
xchg
cld
mov
push
pop
enter
test
jb
pop
xchg
jnp
pop
cmpsb
shl
fcmovne
je
pop
stos
jmp
hlt
pop
mov
jp
stc
xor
cmp
xchg
sbb
sub
pop
pop
adc
popa
sbb
jge
movsl
jge
mov
mov
xor
scas
inc
fnstenv
mov
sarb
sub
sub
repz
inc
push
into
roll
fisubrs
inc
or
pop
rdmsr
std
pop
sbb
loop
xor
fstpt
cmc
push
mov
dec
movb
nop
fisttpl
pop
pop
test
mov
ret
fistps
sub
lcall
fisubrl
xchg
and
addr16
push
into
add
jge
xor
pop
or
push
std
out
es
mov
dec
mov
pop
mov
clc
jb
mov
arpl
out
pop
test
ljmp
xchg
mov
or
mov
add
scas
xor
push
jnp
mov
jae
xor
mov
add
out
cli
out
scas
nop
and
xchg
mov
xchg
sbb
adc
aad
push
mov
aas
jle
mov
add
in
leave
into
test
jns
jae
out
adc
sub
insb
xor
test
test
sub
les
adcl
pop
and
dec
push
imul
adc
push
in
inc
jno
pop
pop
push
jp
gs
xor
add
lock
scas
sbb
call
adc
cmpsb
mov
xchg
aas
mov
pop
das
stos
mov
xchg
sar
inc
out
mov
pop
xor
push
xor
xchg
push
stc
shrb
ja
mov
les
js
inc
bound
xchg
dec
xchg
lret
lcall
xchg
iret
sub
push
sub
dec
mov
arpl
jae
repnz
addl
inc
pop
sahf
inc
inc
add
decb
lods
cmp
divl
subl
stos
dec
xchg
push
xor
insb
mov
testb
or
or
inc
nop
frstor
inc
inc
add
fisubl
pavgw
insb
lret
jno
iret
mov
and
add
cmc
sbb
adc
cmp
xchg
xchg
dec
xor
cmp
or
pushf
lock
mov
insb
pop
xchg
mov
and
sbb
mov
out
adc
sti
psadbw
mov
jns
insb
pop
fsts
das
popf
xchg
stos
lea
jbe
cli
std
mov
push
js
cld
jnp
inc
jecxz,pn
cmc
andb
jne
cli
sbb
dec
out
sbb
jecxz
adc
arpl
test
and
ret
push
cmp
jl
out
xchg
mov
bound
add
outsl
jge
sbb
lock
ret
push
popl
push
scas
or
loop
mov
mov
mov
sub
mov
mov
pop
add
lret
pop
mov
fcmovne
mov
jecxz
clc
sub
in
roll
sbb
and
mov
sub
fcomip
jp
add
in
imul
sbb
iret
xchg
mov
stc
add
jo
pop
mov
popf
fimull
mov
lea
dec
incb
insl
xchg
loopne
movsb
and
lock
inc
addr16
es
test
arpl
and
xor
into
push
loop,pn
cmp
push
xlat
add
and
mov
stc
in
aam
mov
and
inc
mov
jg
mov
aam
mov
mov
test
xor
in
push
jle
and
int3
cld
xor
mov
adc
mov
or
add
mov
les
lods
inc
sub
cmp
in
push
mov
push
xchg
loop
repnz
add
rorb
jne
loope
add
int3
lds
xchg
adc
pushf
mov
loopne
rorb
pop
sub
les
cmp
out
pop
sti
add
les
inc
or
mov
lcall
popa
cmp
cmp
mov
pop
or
outsb
aad
adc
fbstp
fcoms
fnstsw
pop
or
ror
xchg
cmp
push
mov
je
xlat
arpl
and
jae
ret
dec
cmc
mov
xlat
mov
jecxz
pop
and
loop
xor
jle
inc
imul
and
inc
stos
int
sarb
xor
movsl
es
lds
divb
out
in
aas
xor
add
mov
push
add
cmpsb
xor
lret
sub
sub
add
xchg
inc
mov
pop
in
pop
xchg
pusha
xor
les
lods
idivl
xchg
dec
repnz
pop
cli
add
adc
cmc
or
xchg
filds
mov
stos
mov
push
sub
push
pop
inc
sbb
push
outsl
movsb
rolb
iret
sub
ljmp
push
push
or
cmc
xchg
shr
shrl
pop
jno
mov
inc
aas
lea
cmp
cmp
adc
fwait
pop
aad
mov
xlat
xchg
xor
idivb
lret
mov
dec
orb
inc
xor
dec
mov
push
lcall
inc
insb
repnz
fwait
mov
push
ljmp
push
inc
dec
mov
dec
addl
push
mov
test
push
adc
mov
pop
insb
rep
add
pop
adc
jp
jp
rep
and
out
adc
pushf
and
jl
mov
insl
out
sti
sub
sbb
clc
push
arpl
cli
stc
mov
pusha
xchg
sbb
imul
mov
ret
inc
or
jb
and
push
mov
mov
cli
fwait
jno
add
xor
inc
cmp
xor
lahf
test
dec
test
or
daa
xor
int3
int
mov
push
mov
xchg
and
cmpsb
sub
les
mov
in
and
rclb
aam
sbb
cmp
fdivr
stos
cs
dec
push
or
stos
pop
stos
ja
push
mov
es
push
divb
mov
aad
xor
dec
popa
ljmp
aam
and
mov
push
faddl
push
pop
jbe
push
adc
xor
sub
mov
hlt
add
pusha
aam
dec
and
rcl
loop
out
filds
xor
add
test
pop
mov
cltd
mov
or
pop
je
test
popf
add
mov
outsb
adc
lea
inc
jmp
lcall
inc
add
popf
sub
mov
mov
ffreep
into
jl
je
cltd
ss
lahf
pop
mov
cmpsl
inc
pop
dec
jecxz
fwait
adc
dec
stos
sbb
jl
adc
jae
arpl
jb
lea
jbe
pop
daa
xchg
pop
cwtl
shrl
dec
aad
mov
cmpsb
cwtl
adc
xchg
inc
ds
jno
std
fsubs
dec
dec
ljmp
adc
mov
xor
ret
lret
jge
jbe
adc
cs
rclb
dec
push
jmp
and
movsw
outsb
int
add
out
addr16
ja
mov
mov
pop
pop
gs
push
movb
jo
cmp
outsl
push
xchg
jmp
loop
xchg
subl
imul
dec
fildl
dec
push
adc
js
pop
pop
inc
out
xlat
jne
decl
scas
leave
mov
dec
xchg
and
cmp
xorb
shl
popf
push
shll
dec
lea
loopne
fsts
into
fs
mov
jno
or
out
xor
cmc
mov
sub
cmp
mov
pop
test
fldl
cmp
int
popf
dec
out
gs
jl
lret
in
push
add
fldcw
pop
and
mov
insl
nop
daa
mov
inc
inc
push
cwtl
mull
imul
daa
mov
cmp
jmp
mov
mov
fisubl
outsl
jns
pop
lods
push
addr16
cmp
std
sbb
pushf
popa
icebp
sub
repnz
psubw
cwtl
scas
push
inc
mov
ds
cmc
xchg
hlt
inc
mov
insb
inc
mov
jb
in
outsb
movsb
movsl
and
push
mov
shl
fmul
mov
and
xor
push
test
in
pop
and
ja
ja
inc
jge
and
fsts
rclb
jecxz
sti
sarb
inc
or
pushfw
clc
popa
adc
repz
inc
sbb
aad
adc
sbb
push
lea
xor
stc
inc
cltd
mov
dec
xchg
testl
in
sbb
jae
push
cwtl
test
sbb
cmp
cwtl
inc
pop
les
shlb
adcl
jl
push
cli
push
divl
enter
scas
cmp
ljmp
mov
nop
inc
pop
push
cmp
stos
and
cwtl
jo
or
ja
inc
ljmp
daa
clc
adc
leave
or
ss
add
imul
push
orb
sub
adc
cmp
or
hlt
jl
jo
jge
cmp
orl
jl
mov
lahf
dec
inc
mov
lret
hlt
jnp
cs
loope
dec
mov
dec
iret
inc
gs
loopne
les
sub
xchg
jbe
cmp
test
inc
out
incb
scas
add
inc
imul
mov
out
hlt
lret
fmul
andb
mov
jo
jp
pop
adc
cmp
mov
xor
das
aaa
push
sbb
jns
jmp
fs
cmp
fcoms
fnsave
pop
jmp
lds
jnp
xchg
and
cmp
sarl
add
loopne
jmp
int3
jnp
fcmovnb
dec
fisttpl
fnsetpm(287
movsb
sub
popa
push
js
push
adc
movsl
xor
fucomp
test
icebp
xchg
xchg
mov
popf
cmp
xor
xchg
jle
cwtl
mov
sarl
jo
inc
mov
mov
pop
in
stos
repz
andb
jmp
sub
stc
addr16
lock
or
mov
insb
in
fstp
aad
sbb
inc
sahf
mov
cli
leave
adc
loop
fildl
push
sub
sahf
je
mov
out
and
dec
subb
stos
dec
add
and
pop
and
sub
pop
dec
adc
in
sbb
mov
sbb
shlb
xchg
test
roll
jle
les
add
into
pop
mov
mov
mov
add
mov
inc
and
lret
imul
sub
cmc
stos
mov
or
insl
enter
jmp
fisubl
push
hlt
jl
lds
cmc
cmpsl
pop
mov
xor
inc
push
test
rolb
adc
hlt
pop
and
rol
push
adc
push
rcll
jnp
pop
in
incb
bound
add
fdivrl
pop
lock
mov
ja
pop
push
adc
das
in
repnz
or
int
or
ret
cmp
cmpsl
cli
data16
js
xor
xlat
jl
jmp
xchg
lcall
in
mov
fwait
xor
fsubrl
popf
sub
xchg
int
pop
push
inc
pushf
push
sub
jns
cmp
adc
sahf
mov
test
sbb
call
xchg
loope
push
add
and
cmp
xor
bound
call
or
lret
cmpsb
and
add
testb
mov
inc
push
imul
inc
mov
outsb
shlb
and
cmpl
jmp
sub
add
ret
adc
cmpsb
mov
decl
cmp
out
mov
mov
jno
jle
dec
adc
iret
insl
jle
or
dec
stc
mov
push
gs
lods
scas
loop
sarb
push
aad
fistpl
aaa
mov
movsl
cs
xor
loope
out
repz
push
xchg
or
inc
mov
xchg
insl
mov
mov
out
xchg
clc
jmp
push
xchg
xchg
mov
add
sti
nop
pusha
cld
sbb
and
dec
sub
shrl
test
xchg
fwait
or
jnp
sub
jle
pushf
dec
or
dec
ljmp
test
imull
das
or
stc
insl
sbb
insb
cmp
xchg
jg
push
subb
push
adc
push
sbb
or
stos
into
jl
mov
push
jnp
mov
sub
out
jmp
adc
cmp
jle
mov
sbb
arpl
sub
outsl
loop
movsl
xlat
mov
in
test
push
jp
pop
or
shrb
cltd
test
xchg
mov
mov
lods
enter
sbb
push
and
or
sbb
adc
ror
outsl
push
test
ljmp
cmc
aad
cmp
filds
inc
mov
mov
outsb
cmp
call
das
push
data16
cmpsl
xor
aaa
mov
in
add
mov
sub
aad
pop
mov
out
insl
push
xor
repnz
push
xor
fwait
pop
xlat
outsb
test
dec
sbb
rorl
roll
and
pop
push
cmpsb
xchg
or
push
pop
cmp
in
jecxz
sub
jge
into
std
sub
call
mov
cmp
add
inc
mov
ljmp
push
push
push
lcall
insl
icebp
xlat
adc
les
sbb
jmp
in
lods
push
xorl
stos
mov
cmpsb
dec
icebp
push
cmp
sub
out
mov
rcr
or
mov
movaps
dec
cli
outsl
ja
int
bound
and
leave
adc
cld
js
jne
lret
fcomp
xchg
xlat
and
xorb
sub
mov
in
fbld
jge
jnp
cmpsb
xchg
pop
lahf
mov
cmpsl
inc
xchg
insl
sti
sahf
pop
arpl
push
stos
in
shlb
jmp
mov
imul
lahf
add
inc
cmp
out
cld
cmpsb
xor
in
cli
pop
mov
addr16
lcall
xor
cmp
or
ret
mov
pop
mov
pcmpgtd
fmul
add
mov
ss
sbb
es
xor
push
jo
js
das
enter
xor
pushf
dec
call
jecxz
les
mov
fsubrs
xchg
sub
cmpsb
sbb
shll
clc
xchg
jg
push
xchg
sbb
xor
int
adc
push
mov
pop
cwtl
xor
fwait
ja
mov
sub
or
leave
int3
xchg
sahf
ret
sub
lods
imul
push
decl
cmpsb
popf
mov
pop
hlt
insl
shrb
sub
push
jne
jl
das
xor
mov
enter
mov
int
adc
popaw
adc
addr16
lcall
jl
ljmp
out
mov
scas
lcall
mov
aas
cmp
cmp
mov
outsl
add
scas
sbb
push
pop
xor
xor
dec
mov
pop
xchg
and
mov
dec
pop
pop
dec
std
mov
loope
sub
or
or
fsubl
mov
andb
loopne
scas
jo
aas
rclb
data16
jmp
sub
daa
aad
jae
inc
xor
adc
xchg
dec
cmpsb
test
sub
nop
push
cmp
mov
jno
scas
lahf
imul
mov
iret
lds
inc
les
cmp
push
pop
xchg
icebp
daa
adc
mov
fs
xchg
lock
loop
into
aaa
bound
sub
pop
lea
xor
or
adc
pusha
rorl
stos
xor
adc
sbb
rolb
out
push
add
cmpsl
sub
sbb
cltd
popf
imul
mov
dec
dec
xor
movb
push
sub
push
fs
jbe
pop
mov
sti
sub
xor
aam
dec
das
iret
rcrl
inc
lcall
negl
push
push
mov
out
out
inc
fwait
lods
int3
enter
add
mov
sarb
and
inc
lret
sbb
in
imul
lea
sbb
aad
pop
mov
adcl
repnz
bnd
dec
add
jae
sub
rcr
out
jge
fstpl
lock
sbb
push
rcll
loop
sub
movsl
push
cmpsb
pop
sub
cmp
mov
inc
mov
push
in
mov
sbb
jbe
leave
lock
mov
mov
mov
pop
adc
xchg
pop
and
or
ret
push
pop
repnz
push
hlt
dec
test
inc
sahf
add
adc
pop
mov
push
xchg
adc
sbb
test
cmp
imul
in
inc
sbb
popa
mov
adc
loope
nop
js
repnz
and
jl
jecxz
mov
repnz
push
loopne
push
pop
js
int3
pfrsqrt
adc
pop
adc
add
popa
push
or
out
in
cmpsl
lods
out
push
dec
xor
push
and
arpl
pop
in
rclb
test
addl
lahf
cmp
jb
out
insb
fs
cmp
test
dec
movsb
scas
sub
adc
sub
into
jo
repz
stos
lret
xchg
mov
jae
mov
aam
add
into
add
adc
je
icebp
push
sbb
mov
ljmp
adc
clc
icebp
xchg
repnz
add
ljmp
lea
xchg
jo
add
push
mov
xchg
sbb
inc
out
jns
aad
mov
mov
sti
in
aad
in
aas
faddl
leave
sbb
dec
sarl
cld
ljmp
xchg
jb
add
jnp
push
call
mov
or
and
lahf
pop
stc
cmpsl
and
imulb
and
ljmp
cmp
adc
lods
ret
xchg
lock
mov
pop
ret
push
insl
sub
fcom
and
popf
or
pop
push
xbegin
jl
xor
lds
cmp
call
insb
add
pop
cmp
add
cwtl
rolb
movsl
cmc
inc
mov
push
add
arpl
nop
jmp
inc
cmpsl
cmc
sti
pop
jmp
fnstenv
repnz
cltd
cwtl
xor
nop
push
xor
jecxz
xor
negb
addr16
inc
jle
push
jmp
mov
push
f2xm1
jo
cwtl
push
mov
fcomps
popf
cmp
cmpsl
rorb
fwait
mov
addb
add
sbb
shll
jbe
push
jbe
daa
aad
jmp
cmc
js
inc
pop
sbb
and
insb
mov
adc
scas
jg
nop
repz
lods
push
jbe
or
sbb
into
or
cmp
lcall
inc
jmp
in
out
addb
push
xor
fbstp
add
sbb
mov
outsl
aad
xor
rorl
mov
out
xchg
out
sub
sbb
push
push
xchg
pop
ljmp
daa
dec
mov
subl
mov
mov
sub
xlat
daa
pop
repz
mov
insl
mov
fld1
mov
repz
pop
in
sti
or
sub
push
cltd
mov
inc
scas
inc
jne
out
jae
cs
push
gs
aam
mov
dec
mov
inc
push
cmp
jg
loope
lea
jno
sbb
fcmovb
sub
andb
fucomi
sbb
cld
fisttpll
lock
sub
stos
lcall
mov
shrb
pop
int3
decb
jg
xor
mov
shl
pusha
or
and
movsl
aad
pop
mov
mov
xlat
mov
outsb
adcl
dec
jae
sbb
inc
ds
out
stos
push
push
mov
inc
cwtl
and
dec
dec
test
jmp
aad
nop
push
fisubs
xor
fimuls
cli
sub
cs
popf
mov
mov
cs
hlt
pop
addb
xchg
jge
or
cmp
popa
add
test
int
push
stos
fisubrl
loop
xor
add
sub
xchg
out
icebp
sahf
pop
mov
xlat
repz
or
test
pop
dec
mov
mov
jns
sub
outsl
mov
in
xchg
jg
jb
mov
pop
sbb
mov
fldl
fildl
es
addr16
mov
mov
shll
bound
push
xchg
fisttps
stc
movb
jge
roll
sbbl
shrl
es
or
jne
add
lret
fstpl
leave
cli
jbe
xchg
mov
pop
adc
fwait
inc
test
insb
cld
iret
pop
push
outsl
enter
lods
mov
inc
xchg
dec
insb
sbb
stc
repz
push
mov
cmp
and
pop
loope
adc
movsl
je
divl
adc
push
nop
sub
lock
int
addr16
aam
mov
inc
insl
or
fstpl
imul
movl
or
jb
push
cmpsb
test
aas
pop
push
cs
jbe
cld
out
into
sbb
xor
stos
sbb
scas
add
jns
cli
out
push
and
mov
push
and
mov
mov
mov
xchg
jecxz
popa
addl
mov
insl
xchg
adc
mov
lcall
pop
jns
cmp
fidivrl
pop
sbb
ret
inc
rcll
sbb
cli
insb
decl
mov
fnstcw
or
sbb
leave
push
pusha
pusha
das
leave
sti
dec
gs
mov
repz
pop
addr16
cmpsb
daa
int
sub
jmp
and
add
loope
cmpsl
jmp
addl
sti
and
cmp
imul
cmp
mov
jns
test
mov
adc
jle
or
aas
jmp
psubsb
push
add
mov
pop
xor
jecxz
lret
mov
aaa
lahf
jns
dec
enter
adc
int
push
push
dec
test
inc
inc
adc
sbb
subps
mov
aad
cmpsb
jb
loop
mov
xor
jno
fcompl
xchg
outsl
and
lret
mov
xchg
arpl
fdivr
movsl
int3
scas
negl
mov
lahf
xor
fwait
sub
jnp
pop
cmpsb
dec
pop
inc
imul
pop
das
inc
mov
cwtl
jo
and
xchg
test
loope
pop
push
mov
lods
cs
and
subl
fmull
xchg
mov
push
or
insb
mov
jge
mov
or
nop
ret
mov
pop
popf
inc
mov
dec
lcall
ret
push
jle
ja
shlb
push
lea
mov
ja
push
and
sub
xor
add
test
mov
sub
xlat
jmp
rolb
pop
ficomps
sbb
mov
pop
sqrtps
cmp
cmp
inc
jbe
dec
jle
ret
xchg
fs
mov
enter
insl
mov
enter
cltd
xchg
sub
dec
sub
icebp
push
mov
xchg
sbb
shll
inc
orl
hlt
pop
xchg
cmp
loope
cmp
mov
xchg
jmp
dec
aad
cmp
popa
fildll
jmp
ret
dec
pop
sub
gs
repnz
jae
jns
push
inc
insl
mov
js
pop
test
mov
frstor
mov
daa
out
punpckhwd
sahf
inc
rorl
push
and
mov
loope
or
pop
andl
adc
xor
out
es
xchg
xchg
jo
ljmp
jb
out
cli
repnz
or
and
inc
in
xchg
and
insl
jecxz
repnz
aad
push
push
lret
ss
cmp
inc
jo
xor
cmpsb
jne
repz
cmp
lret
mov
mov
es
pop
lret
bound
and
outsl
sbb
mov
pop
out
or
dec
fadds
adc
lea
daa
mov
pop
xlat
cmpsb
xor
xchg
xchg
xchg
cmpsb
mov
lahf
je
dec
arpl
orb
aam
lahf
fcmovu
cmp
cmc
scas
push
sbb
pop
pop
fidivs
loope
xor
or
pop
fwait
addr16
fwait
out
insb
xchg
push
neg
jns
scas
or
into
mov
shrb
sahf
les
out
push
insb
movb
xchg
xorl
sbb
and
dec
push
xor
fstpt
sti
cmp
jecxz
or
lods
mov
xor
lods
cmpsb
jo
pop
adc
push
test
mov
sub
mov
pop
ja
sbb
sbb
push
inc
xor
ficomps
cld
cltd
imul
je
std
pop
dec
stos
ds
mov
imul
rcrb
cmp
in
out
fsubs
adc
xor
into
cld
negb
iret
insb
sub
jge
mov
mov
inc
pop
aas
dec
mov
sub
pop
loop
call
rorl
inc
xchg
nop
in
dec
out
call
push
cld
xchg
repz
jbe
mov
insl
sub
jle
xor
pop
xchg
repz
sub
or
add
out
rol
inc
fadd
inc
fs
xchg
cmp
pop
mov
popf
popa
push
dec
dec
cmp
pop
shrb
xchg
testb
pushf
jae
add
push
mov
xor
mov
sbb
push
repnz
cmc
ror
andl
ja
cmp
mov
mov
lea
movsb
out
in
adc
inc
inc
push
sub
lock
cmp
inc
cmp
mov
lahf
jbe
and
add
test
and
test
pushf
cmc
dec
int
push
add
bound
lret
shr
arpl
test
jae
mov
push
outsl
insb
and
test
mov
jecxz
push
prefetch
movsl
decl
dec
push
or
cwtl
xlat
movsl
ja
cltd
addr16
push
xor
cmp
mov
call
and
cltd
lods
mov
into
mov
mov
add
jnp
jge
or
adc
sbb
loop
mov
adc
cltd
test
push
ljmp
xor
je
pop
int
dec
jecxz
adc
add
sub
test
into
lods
test
cmp
mov
pushl
add
jae
loope
dec
idiv
pushf
adc
clc
mov
add
push
mov
ljmp
or
notb
aas
pusha
sahf
fimull
imul
in
pop
fdivrp
loopne
mov
sbb
in
push
jbe
pop
decb
cmp
lods
xchg
imul
xor
adc
movsl
jne
test
jo
rclb
and
push
lcall
int
mov
sub
and
xor
lret
imul
mov
call
notl
sbb
out
xchg
bound
rorl
jae
outsl
sub
dec
inc
sbb
and
xchg
jo
xor
scas
dec
int
dec
push
aad
arpl
sbb
cmp
sub
shr
xchg
aaa
or
add
shll
std
inc
pop
xchg
mov
mov
jmp
scas
xor
dec
sub
xlat
rorl
ds
leave
mov
add
fcmovnbe
fucomp
in
inc
or
jmp
pop
mov
lock
cmc
popf
mov
pop
jne
and
add
or
scas
scas
pop
jecxz
sbb
mov
ret
js
sahf
lret
push
push
add
jno
cmp
arpl
sbb
lods
xorb
jl
mov
icebp
adc
ds
adc
inc
xor
dec
jnp
cmp
jg
and
fs
dec
and
call
inc
call
and
je
push
lods
scas
or
pop
sbb
push
inc
gs
adc
sbb
adcb
sbb
or
daa
pop
sahf
add
mov
push
in
mov
pop
xchg
subl
cmp
addr16
std
and
mov
jae
mov
mov
mov
test
subb
loopne
dec
adc
nop
mov
ss
mov
test
inc
push
push
add
sbb
add
xchg
jle
jge
sti
loop
mov
sub
scas
addr16
cld
sub
dec
in
test
sub
cmc
sub
sbb
sti
mov
xchg
xorl
hlt
pop
pushf
aad
in
xchg
sbb
into
sub
sbb
dec
jge
sub
add
push
fimuls
movb
cs
stc
outsl
movsl
mov
add
jo
mov
mov
inc
mov
mov
jae
adc
mov
and
out
stos
jle
inc
subb
fnstenv
test
inc
subl
mov
sub
mov
mov
add
mov
pop
inc
mov
push
adc
xchg
fadd
mov
outsb
mov
test
jle
and
jb
pop
call
lock
xchg
jbe
add
pop
in
lock
fcoms
fxch
and
dec
mov
push
shl
mov
pop
fiaddl
dec
lods
and
std
test
aad
fcompl
pop
cs
jmp
xor
cmpsl
xor
xchg
imul
or
dec
pop
repz
icebp
pop
pop
je
fcmovb
into
mov
push
insb
sahf
jb
test
neg
xor
inc
pop
ja
ja
sbb
dec
xchg
imul
mov
pop
lock
imul
enter
arpl
in
jmp
pop
inc
pop
mov
or
cmp
adc
fimuls
lea
lock
push
loope
adc
mov
in
mov
imul
inc
mov
test
fcmovu
cwtl
or
stos
push
mov
pop
adc
rorl
outsl
ret
sahf
adc
outsl
push
fldt
leave
andps
and
adc
or
push
lea
pop
pop
insl
iret
inc
lock
lock
mov
cmp
push
stc
cmp
sub
ficoms
test
inc
cmc
add
lds
cmp
add
jb
out
rcr
ret
iret
popl
inc
jp
pop
xchg
push
rcrb
adc
and
aam
enter
add
hlt
pop
repnz
mov
addr16
sbb
xlat
es
cwtl
xor
mov
push
fs
inc
hlt
inc
sbbl
pop
sbb
or
stos
add
daa
mov
push
jecxz
add
scas
movsb
push
pop
pop
sbb
and
xor
sbb
mov
xor
lea
or
pop
in
jnp
lret
sarl
in
mov
out
add
add
scas
add
pop
sahf
sub
out
out
cmp
nop
inc
dec
ror
call
xchg
mov
loopne
rcrb
js
inc
xchg
in
and
mov
xor
repz
cmp
jb
jno
sub
dec
js
fisubrs
cwtl
mov
add
mov
sub
out
cmpsb
jp
fidivl
mov
sbb
pop
repz
fdivrp
icebp
adc
cmp
lcall
fwait
out
mov
push
in
lcall
out
sbb
cmpl
lahf
fidivrl
mov
shl
xchg
and
mov
rolb
mov
bnd
xchg
sbb
add
lock
and
or
fwait
mov
add
iret
mov
test
mov
test
cmp
addb
sub
dec
lret
aam
sub
xchg
enter
scas
mov
lret
jmp
mov
lds
popf
and
fwait
xchg
add
or
ljmp
dec
mov
inc
sbb
jl
pop
mov
push
xchg
xchg
sarb
pusha
rorb
lods
iret
lret
neg
xlat
dec
lea
cmp
enter
ret
out
dec
aaa
sub
mov
add
pop
icebp
int
pop
stos
inc
xor
cld
cmp
or
popf
xchg
adc
sti
pop
jb
into
rolb
je
jg
pop
test
test
jb
test
rorl
inc
loop
lret
movsb
leave
sub
jns
fists
cmp
adc
adc
inc
mov
notb
and
dec
or
xchg
jae
je
mov
sbb
add
cmpb
cli
cld
inc
jo
jne,pt
inc
sub
push
mov
ficoms
jns
outsl
cmp
lea
test
jecxz
cwtl
mov
and
add
pop
aas
pop
imul
call
int
jmp
aam
das
ds
mov
pushf
xor
push
js
dec
jp
and
mov
xchg
jne
mov
lret
pop
repz
rol
xor
jno
adc
ret
out
lock
mov
and
cmp
inc
aas
jmp
mov
xor
popf
add
inc
jbe
xor
jl
cmp
test
xor
imul
pop
jne
push
adc
and
frstor
out
jge
ret
adc
mov
jne
stos
cld
xchg
and
adc
or
fwait
jae
jmp
ja
fdivl
imul
cld
xchg
xlat
mov
dec
into
ss
loope
push
dec
and
lea
xor
cmpsl
fidivrs
in
lods
call
das
mov
jmp
or
insl
shrb
xchg
jmp
fisubl
mov
jbe
xchg
mov
jno
xor
push
cmp
fcompl
pop
adcl
imul
xor
and
mov
cmp
add
push
and
pop
sbb
push
shrb
pushf
ss
pop
out
aas
insb
jg
pop
icebp
pop
cld
rorl
adc
ret
repz
sbb
test
push
dec
pop
fimuls
mov
cld
out
xchg
lret
add
je
sahf
lahf
dec
mov
xchg
std
xor
out
adc
inc
mov
mov
jl
outsb
xchg
stos
cmpsl
repz
repz
imul
xchg
dec
icebp
jnp
mov
cmpsl
out
call
aam
cmpsb
xor
sub
dec
sbb
jno
sbb
or
js
imul
fs
push
outsb
rolb
inc
mov
lock
les
sbb
push
jg
xor
rcrl
fstps
clc
push
rorl
into
sub
jmp
idivb
jmp
in
adc
jns
idivl
mov
lds
repnz
out
add
mov
ret
imul
inc
mov
add
lret
dec
cmp
adc
cmp
out
cmp
subl
mulb
scas
fstpt
sub
arpl
mov
xlat
neg
sbb
mov
xor
cmp
jb
adc
mov
clc
push
jne
popf
mov
push
sbb
fdivl
lret
ljmp
inc
sbb
xchg
push
cmp
xor
ja
jecxz
fwait
dec
sbb
nop
repnz
mov
scas
sub
fnstenv
enter
and
xchg
fcompl
or
adc
jnp
adc
xchg
int
sar
pop
stc
and
popf
fldenv
nop
scas
and
js
sbb
arpl
stos
cld
xchg
xor
push
bound
clc
dec
orb
icebp
test
popf
out
jbe
add
mov
pop
xor
jnp
sti
jne
insl
lock
mov
xchg
sarb
jmp
shlb
loopne
jbe
mov
cmp
xor
repnz
jmp
and
push
sbb
sahf
push
test
dec
mov
addr16
and
push
mov
fistpll
cmpsb
gs
or
jmp
xchg
mov
push
out
out
add
and
loope
movsl
in
lcall
push
sbb
mov
xchg
or
xchg
xchg
inc
xor
mov
aas
push
sahf
and
ljmp
and
and
inc
rorb
sbb
scas
ljmp
push
js
or
mov
jle
inc
mov
inc
add
iret
rol
sbb
sub
ljmp
push
xor
rcrl
push
pop
push
mov
movsb
or
scas
jmp
lock
xor
std
jb
adcb
test
data16
jmp
push
loop
pop
cmpb
lods
fnstenv
bound
push
adcl
sub
les
fnstcw
inc
sbb
or
bound
into
xlat
jo
lret
in
xchg
les
dec
inc
cmpsb
adc
rclb
adc
mov
loope,pt
mov
aam
fnstcw
mov
and
or
and
mov
mov
adc
push
sub
add
mov
mov
adc
push
iret
sahf
cmpsl
cmp
fimuls
sub
lods
scas
lahf
pop
addr16
jb
lods
les
sub
dec
jae
cmp
pop
inc
int3
aam
jg
in
in
ror
mov
insl
and
out
je
js
jnp
add
or
daa
sahf
lods
dec
mov
shl
mov
into
pop
xchg
clc
pop
mov
mov
gs
push
daa
pop
repz
pop
test
call
cmp
lahf
clc
pop
je
sub
popf
imul
lcall
adc
movl
mov
add
gs
loop
fisttpll
lcall
push
test
sbb
inc
inc
adc
in
mov
xor
pop
pop
push
sarl
loope
lahf
mov
mov
dec
sarl
mov
aam
stos
test
add
push
push
cmp
dec
and
in
mov
imul
push
movsl
mov
rcrb
jg
sti
shl
mov
addb
pop
sub
add
xchg
or
xor
cmp
in
dec
ja
add
or
xchg
popf
push
sub
shl
hlt
shrb
and
jge
dec
dec
fwait
xchg
dec
sub
push
mov
arpl
and
imul
xor
cld
loopne
int3
mov
pusha
dec
xchg
icebp
inc
popf
dec
dec
xchg
sbb
pop
and
addr16
sub
dec
int3
insl
inc
mov
imul
fildll
repz
lcall
mov
out
sbb
xchg
lds
xlat
in
loop
add
and
jne
imulb
je
iret
addl
jae
mov
push
push
push
cmc
pop
sbbb
stc
cli
dec
sbb
je
push
dec
lods
pop
cltd
lock
dec
shlb
mov
sahf
int
pop
lret
xor
in
in
cmp
fldenv
js
and
mov
mov
mov
xor
mov
cmpsb
or
sbb
push
repz
pusha
fstl
dec
jp
insb
inc
xorl
add
inc
sbb
push
jb
push
push
pop
cmp
int3
sti
leave
or
and
sub
test
xchg
add
add
sub
dec
mov
scas
test
mov
mov
je
mov
cwtl
daa
movsb
frstor
mov
int3
xor
add
sahf
pop
cmp
rcr
jae
pop
out
aam
cmp
xchg
ret
call
jmp
cs
fildll
popf
jns
sub
pop
push
out
sub
ljmp
cld
int
dec
xor
pop
jle
push
call
mov
push
das
push
jae
xadd
xchg
fst
adc
mov
mov
imul
mov
and
or
push
xor
sarb
fcompl
pop
xor
jo
or
out
adc
std
xor
push
popa
nop
insl
inc
popa
and
mov
dec
sub
xor
push
push
sbb
jge
mov
jns
mov
ret
movsl
ja
andl
mov
out
xor
cmpsl
mov
mov
push
mov
pop
mov
movsb
jl
mov
inc
sbb
rolb
jb
xchg
jne
cmpsl
fstpt
adc
add
je
sarl
ret
aad
sbb
pop
xchg
mov
iret
hlt
adc
cld
dec
mov
jne
inc
lods
sbb
sub
cwtl
orl
pusha
popa
imul
xchg
movl
in
cmp
loope
push
in
pop
fs
sub
outsb
ficompl
je
imul
stc
mov
push
push
mov
jl
and
jmp
push
inc
and
test
lods
int
fwait
cld
adc
or
jle
push
and
pop
shll
in
sti
push
repz
sub
push
jae
fiaddl
mov
mov
sbb
adc
xchg
test
ljmp
xchg
pusha
fwait
out
dec
les
push
addb
loope
in
pop
xor
pushf
mov
pop
je
in
aad
xchg
mov
mov
fucomi
add
xchg
iret
mov
pop
adcl
inc
cmp
xor
mov
mov
adc
inc
out
push
xor
push
pop
test
sub
mov
sub
mov
pop
adc
test
inc
xor
mov
inc
divb
sub
ljmp
call
or
mov
and
out
int3
dec
int
xchg
mov
cmpsl
iret
ret
aas
dec
cmp
mov
or
xchg
mov
out
dec
call
mov
mov
les
loop
int3
dec
movsb
cmp
ffree
and
shlb
inc
dec
nopl
pop
jae
jnp
jo
sbb
aaa
xchg
push
inc
dec
iret
push
mov
adc
jb
ret
mov
sbb
fmuls
bound
in
xor
mov
adc
ljmp
test
and
fidivl
les
out
dec
mov
sti
aad
sub
xor
out
sbb
add
stc
testl
sbb
adc
mov
jbe
loope
jo
loopne
into
ret
adc
and
aas
dec
xor
push
adc
int3
lea
in
and
mov
pushf
js
adc
xor
push
test
fdiv
enter
inc
out
daa
push
adc
jge
jmp
cld
and
cmp
cmp
sbb
outsb
hlt
imul
push
dec
test
jmp
xlat
or
rolb
mov
add
mov
pop
ljmp
inc
ret
gs
aaa
xor
repz
pop
xchg
or
jo
jl
lret
xchg
in
psubw
push
dec
sbb
inc
jb
bound
adcl
fisubl
sti
xchg
adc
jne
or
push
cmp
movsb
stos
dec
mov
loopne
lds
sub
cmpl
sbb
movsb
push
sub
mov
dec
push
push
cmp
xchg
leave
or
test
cltd
inc
clc
popa
dec
addl
add
je
clc
mov
jge
pop
dec
sbb
add
sub
mov
pop
mov
push
hlt
mov
popf
pop
je
lea
and
cmp
es
add
cmpsb
mov
inc
xor
mov
jns
cmp
repnz
sub
loop
subb
test
out
add
jns
stos
pop
idiv
gs
mov
pop
out
or
in
mov
jg
scas
out
roll
adc
sbb
and
inc
push
movsb
jb
outsl
jne
aad
jne
xlat
cld
fmull
mov
ffreep
pushf
nop
out
mov
ja
rolb
loopne
in
sbb
je
lret
aaa
fsubr
movb
mov
xor
pop
in
xchg
jl
fdivp
xor
lcall
and
push
iret
in
imul
cmp
sub
mov
dec
pop
ds
nop
movsb
xchg
and
loopne
push
cmp
cmp
xlat
sbb
jecxz
out
mov
inc
sahf
gs
cmpsb
mov
inc
int
xchg
movsb
mov
ds
lds
adc
sub
dec
xor
out
push
nopl
shl
mov
cs
insl
or
in
mov
ret
je
jle
fmul
mov
or
mov
jns
test
stos
xchg
cmp
xlat
adcb
testl
or
fstpl
sbb
mov
call
icebp
xor
pop
icebp
int
sbb
incb
lret
scas
dec
rep
push
or
les
jb
jne
xor
stos
aam
je
or
dec
insl
xor
in
daa
lret
xchg
jle
mov
movsl
pop
cs
lods
test
mov
lock
cmp
mov
mov
subb
andl
orl
add
push
mov
test
sbb
fistpll
pusha
xlat
cmp
fcomps
mov
adc
push
mov
data16
jb
push
and
jno
lods
stos
cmc
fldenv
leave
inc
aaa
aam
adc
in
pop
cmp
movsl
mov
fsub
pop
push
mov
push
mov
cwtl
out
mov
js
ds
inc
data16
fadds
push
imulb
imull
pushf
fisttpll
xchg
xor
js
sti
mov
xchg
test
mov
and
mov
and
push
add
std
es
imul
insb
and
mulb
mov
ret
stos
js
lret
jne
jp
mov
arpl
push
mov
xchg
add
bound
mov
dec
push
jne
scas
mov
xor
sahf
in
sub
or
or
or
lcall
push
and
repz
lods
pop
test
push
mov
loopne
cmp
fdivrp
test
std
adc
aas
add
add
xor
or
imul
pop
aaa
mov
out
xor
xor
mov
leave
loope
aas
xor
scas
ja
dec
mov
mov
dec
filds
leave
fdivr
add
stc
addr16
or
shlb
loope
js
in
and
pop
lea
mov
aas
xchg
scas
push
clc
adc
jae
icebp
xchg
out
mov
pop
test
stos
jae
inc
pop
fbstp
into
mov
sti
je
call
mov
aad
add
xchg
repnz
cmp
xor
pop
aad
pop
mov
sub
lods
mov
sbb
cmpsl
out
pop
inc
mov
aad
aaa
xchg
dec
sti
jmp
jp
push
mov
adc
mov
movsl
jp
xchg
movsb
lcall
add
pop
sarb
popa
pop
ds
ret
xor
push
in
mov
inc
pop
lahf
arpl
and
das
ja
idivb
addr16
pop
mov
arpl
clc
sbb
aad
xor
lods
pushf
cmpsb
mov
outsl
daa
ficoml
das
call
cmpsl
mov
into
lcall
mov
pop
jle
lret
xlat
dec
test
loop
icebp
aad
xor
and
xor
push
mov
inc
mov
scas
push
xchg
sbb
jmp
mov
push
loopne
add
cltd
lcall
pop
je
dec
xchg
int3
aaa
les
cmp
cmp
mov
mov
ret
pusha
lds
adc
movsb
ffreep
clc
mov
pop
cmp
dec
loopne
lock
aam
hlt
les
xor
mov
add
push
push
scas
lcall
jmp
jbe
rclb
push
cmp
push
ret
idivl
sahf
ficoms
jecxz
addb
cwtl
fwait
ja
int
mov
and
sub
cli
add
lret
sbb
mull
dec
dec
lods
out
jnp
push
sbb
or
pop
dec
dec
fcompl
sti
pop
xchg
fnstcw
das
imul
mov
clc
roll
adc
inc
rolb
push
dec
lahf
sarb
sbb
test
inc
test
lods
xchg
test
js
rcrb
mov
sbb
into
dec
pop
sub
scas
cmc
rcr
lcall
je
test
clc
in
lahf
jmp
in
adc
lods
test
mov
fs
cmp
mov
pusha
pop
mov
leave
out
lret
pop
sbb
scas
xchg
jo
push
bound
inc
pop
test
xorb
pop
lods
sub
stos
pop
add
cwtl
sub
ret
cmc
out
shrb
loopne
in
adc
and
mov
jo
mov
xor
stos
out
mov
repnz
clc
push
push
sub
inc
out
shl
pop
pop
std
xchg
mov
sbb
xchg
cwtl
pop
or
pop
data16
inc
repz
lret
xchg
fbstp
xchg
lcall
mov
fnstsw
out
ret
repz
adc
xor
mov
xchg
dec
adc
aaa
test
lret
add
les
pop
mov
ret
xlat
dec
mov
aas
out
pop
mov
pop
jmp
pop
and
xlat
inc
push
sub
jae
stc
add
jg
ja
push
cmp
or
icebp
or
cmpsl
lcall
jmp
cli
lods
push
mov
sub
pop
aad
daa
test
rolb
jl
xor
hlt
inc
call
ret
mov
sbb
mov
out
shlb
fsubs
sub
stc
sub
sahf
inc
cmp
pop
es
sbb
les
cmp
lods
pushf
sahf
imul
ds
decb
pop
popf
xchg
mov
xchg
jp
mov
jae
push
jno
push
push
ret
adc
sahf
loop
repz
rcrl
dec
push
jle
mov
inc
incl
icebp
repz
sbb
lods
xchg
pop
add
out
int3
hlt
sbb
push
loop
jne
dec
inc
or
ss
inc
sub
cmp
cmp
inc
jae
mov
popf
sbb
lods
js
hlt
jl
popf
jae
shr
in
or
fmulp
mov
push
je
fmull
mov
push
int3
mov
stos
in
test
or
xchg
hlt
stc
xchg
mov
bnd
stos
sbb
orl
in
cld
inc
negb
add
push
mov
aam
xor
dec
xchg
dec
add
add
test
pop
roll
sahf
dec
pop
jns
test
test
push
arpl
xlat
out
sub
movl
scas
movsb
addr16
stos
jns
int3
arpl
test
jg
mov
mov
adc
or
test
nop
hlt
outsl
sbb
popf
std
mov
jmp
iret
les
lret
pushf
sbb
jno
pop
aam
loop
jg
cli
fldl
and
or
jnp
mov
repz
mov
jo
repz
fnop
hlt
lods
maxps
inc
or
in
mov
xor
lods
pop
cli
sub
pop
inc
mov
inc
testl
aas
int3
mov
inc
cmp
jo
loopne
aaa
mov
push
or
jo
mov
xchg
mov
js
ds
and
push
repnz
jae
clc
xchg
in
insl
or
shrb
nop
jbe
mov
xchg
fs
dec
and
out
jbe
stos
push
insl
sub
loopne
movsb
jno
nop
int
cmpsl
je
jne
push
or
jae
xchg
mov
sub
xchg
pusha
xchg
lock
mov
inc
mov
lret
call
pop
adc
dec
rorb
inc
jbe
rcll
fcmovnbe
xchg
dec
dec
sbb
je
mov
inc
inc
std
insl
aam
add
int
mov
inc
pop
or
aam
int
bound
ror
inc
push
cld
test
push
movsl
gs
jg
sahf
sub
adc
xor
add
loop
pop
and
dec
fbstp
dec
mov
lods
sub
shll
pop
mov
jl
adc
enter
jb
das
out
inc
xchg
leave
icebp
divb
adc
mov
sbb
mov
movsb
inc
add
lock
push
pop
push
mov
mov
ss
push
cmpsb
loope
mov
push
repnz
xchg
push
add
mov
dec
mov
mov
cmp
xchg
jle
lea
cli
sbbl
fstpl
cmpsb
add
add
jae
jge
imul
add
sub
dec
sbb
cmp
lea
dec
rolb
push
sbb
hlt
insb
mov
into
outsb
xor
mov
cmp
ficoml
divl
jo
rol
or
je
dec
lods
mov
jl
xchg
das
xchg
dec
fdivrs
jge
jge
outsl
inc
lret
les
loopne
jecxz
mov
jecxz
jp
lea
xchg
push
xchg
lret
cmc
mov
fistpll
stos
int3
sub
push
js
cmp
popf
adcl
in
out
ret
repnz
mov
push
push
ds
and
mov
dec
xchg
jo,pn
mov
xchg
mov
insl
cltd
sbb
add
push
fs
push
fstl
insb
pusha
subl
fstl
add
sar
push
mov
dec
jmp
add
sbb
mov
adc
data16
inc
jae
add
mov
or
dec
fcmovu
mov
lods
xor
pop
mov
jmp
or
dec
add
adc
cmc
push
in
xchg
or
fs
pop
lret
shll
sarb
idiv
cmp
pop
lahf
cmpsl
inc
fstpt
negb
pop
mov
pop
xorl
scas
fisubl
loop
xor
popa
add
xor
mov
dec
cld
mov
inc
stc
ds
es
dec
cwtl
inc
lock
lret
push
sub
and
movsb
xchg
inc
xchg
lret
and
loope
push
int
dec
jle
xor
sub
rclb
int
sbb
push
dec
dec
or
test
pop
adc
sub
xchg
mov
fwait
dec
push
mov
mov
push
repnz
mov
jne
mov
inc
lidtl
lret
outsl
and
je
inc
pushf
inc
add
int
ss
pop
into
jl
push
clc
adc
dec
xor
mov
push
out
jae
out
jge
insl
dec
call
lds
pop
pop
mov
call
push
gs
xchg
push
sti
popa
shll
xor
test
mov
cmc
aad
in
push
sahf
mov
fimuls
ss
xchg
cltd
aaa
pop
pop
scas
adcb
push
add
jno
xor
ror
adc
cld
jl
mov
dec
inc
xchg
mov
test
repz
pop
dec
sbb
mov
lahf
lahf
sahf
out
lea
sub
and
sub
mov
lea
cmp
shrb
ret
jmp
xor
push
pushf
scas
pop
jbe
bound
mov
inc
mov
dec
xchg
sub
jecxz
fdivs
arpl
add
popa
popl
and
aas
scas
ss
cmp
inc
loopne
and
add
cmp
fs
xor
cltd
xor
push
adc
lock
xchg
jmp
fistpl
push
mov
cmp
xchg
mov
mov
sbb
scas
adc
into
repz
scas
push
xor
sbb
test
es
push
fidivrs
rclb
dec
enter
ljmp
loope
push
daa
aad
leave
pop
sbb
mov
jl
or
jb
int
arpl
stos
aam
xor
sub
out
inc
sbb
jb
insb
fs
ficoml
pop
sbb
xchg
subl
jbe
icebp
aad
sub
xchg
shll
mov
and
and
xchg
pop
ret
fdivrs
imul
inc
es
fnstcw
push
adc
and
or
jg
mov
aas
dec
cs
shrb
jbe
dec
and
pavgb
pop
pushf
mov
cmp
scas
push
and
ds
inc
pop
adc
mov
enter
sbb
fistpll
jg
aas
xchg
pop
mov
lahf
pop
xchg
in
mov
lods
xchg
insb
mov
fcoms
loope
mov
push
or
add
push
adc
movsb
cmc
mov
or
loope
aaa
jbe
dec
jg
outsb
xchg
push
popf
pop
mov
insl
repnz
dec
pop
cwtl
sub
ret
stc
dec
xchg
loope
movsl
ret
insl
pop
push
add
sub
rcr
push
and
shrb
cs
mov
push
lahf
xchg
cli
lahf
xor
repnz
ja
pop
out
test
dec
xchg
dec
stos
and
fiaddl
mov
pop
lcall
insb
push
movsb
hlt
fsts
xchg
cmp
test
out
lret
cmpxchg
iret
cmpsl
ret
jns
xchg
dec
icebp
jmp
sarb
mov
push
xchg
std
inc
adc
dec
dec
adc
mov
loopne
mov
or
pusha
mov
push
cs
dec
pop
adc
or
pushf
push
and
scas
jmp
and
adc
std
lds
pmaddwd
addr16
in
divl
and
aad
scas
test
dec
or
pop
or
mov
loope
es
test
sahf
sbb
sub
push
addl
mov
push
mov
mov
loope
add
cmp
push
adc
push
xchg
enter
sbb
call
mov
scas
sub
dec
lods
out
mov
mov
and
sbbl
bound
push
jo
mov
dec
sub
jmp
or
jge
loopne
mov
fbstp
decl
pusha
inc
jno
testb
ret
std
dec
ja
addr16
adc
decb
shlb
add
and
sbb
cmp
iret
push
inc
or
add
int
arpl
mov
mov
hlt
jb
cmpsl
inc
push
push
or
lahf
xchg
sbb
cmc
ror
mov
iret
adc
out
popa
push
ror
dec
push
mov
into
push
dec
mov
shrl
mov
neg
fucomip
fimull
icebp
xabort
cmp
pushf
out
pop
ljmp
cmc
mov
xchg
fistl
sbb
push
lret
in
mov
rep
ret
int3
lcallw
adc
xchg
sbb
fcmovbe
idivb
jge
andb
lock
jl
repz
or
shll
int3
outsl
push
cmp
faddp
pop
arpl
adc
outsb
mov
adc
movsl
inc
fucomp
add
mov
in
stc
mov
movl
outsb
jno
in
scas
mov
loop,pn
in
pop
xor
leave
xor
sub
sub
gs
jbe
pop
daa
add
mov
add
dec
movsb
mov
add
rclb
adc
mov
sub
aas
pop
jne
xor
loope
cmp
je
pop
mov
mov
adc
push
fwait
jle
jns
xchg
inc
xor
jae
inc
scas
push
sbb
push
fildll
xchg
xor
jge
pop
add
inc
ja
pop
mov
xor
scas
lcall
je
inc
clc
dec
sbb
cmp
sub
jmp
and
add
inc
jle
jmpw
or
dec
mov
pop
inc
push
fisubrs
pop
loopne
or
push
adc
pop
out
mov
sbb
icebp
mov
sbb
mov
mov
outsb
and
and
mov
call
and
cmpsb
mov
xchg
fs
or
adc
mov
mov
mov
mull
jecxz
fdivrs
jge
out
or
xchg
lock
xchg
push
cmp
sub
cmp
xor
lods
es
jnp
jecxz
push
pushf
ja
insl
fcomip
outsb
pop
std
call
mov
stos
fnstsw
test
ljmp
mov
adc
in
mov
jl
dec
in
sub
fs
les
pop
cmp
subb
loopne
cld
sub
mov
mov
xor
mov
andl
popa
push
jge
adc
jecxz
mov
mov
dec
push
sbb
push
lret
loop
sub
lret
add
jecxz
jne
adc
mov
jmp
popf
push
pop
add
test
jae
mov
xorb
shll
xor
inc
push
popf
ja
out
mov
inc
xor
orl
ficoml
or
jo
icebp
cmp
xlat
and
rorb
movsb
xchg
mov
ficomps
mov
pop
rorl
lcall
xchg
popa
scas
or
adc
sarb
adc
pop
stos
xor
pop
subl
mov
pusha
push
jle
pop
imul
xor
pop
fwait
and
loopne
in
jno
cmp
or
shlb
cli
js
fstps
mov
cmp
dec
bound
sub
xchg
mov
mov
test
cld
mov
int3
mov
xchg
jecxz
fs
and
adc
cmp
sbb
ja
jecxz
add
xchg
mulb
xchg
imul
sbb
and
xchg
out
add
add
popf
movsb
dec
cmp
add
jne
xchg
jmp
sbb
shlb
add
je
cmovbe
enter
xchg
cs
mov
cmc
test
stc
inc
mov
cmp
mov
lret
or
lahf
dec
xchg
fstl
pop
jo
push
aaa
xchg
push
lea
inc
imul
movsl
shrl
mul
adc
cwtl
testb
test
mov
inc
es
or
fcompl
out
outsl
aad
inc
xchg
push
int
xchg
fwait
xor
movsl
pop
sub
push
test
fistpl
lock
cmp
shrb
xchg
mov
stos
push
sbb
stc
insb
in
leave
jns
push
pop
jno
jmp
leave
stc
fwait
sahf
jecxz
sub
mov
mov
sub
xchg
std
dec
mov
add
jo
fsubs
cmpsl
lcall
inc
pop
out
shrl
aad
out
incb
mov
push
push
mov
adc
scas
in
das
clc
lcall
enter
pop
rorb
mov
mov
repz
push
add
sahf
dec
lods
inc
les
test
add
push
in
cs
cli
imul
aad
sbb
iret
mov
add
neg
sbb
insl
stc
lds
sub
push
jp
fisubs
repnz
fistl
imul
test
jp
nop
fadds
sub
xor
xor
std
test
repnz
pop
mov
push
cmp
outsl
sti
adc
jno
popf
roll
and
lods
fcomps
cld
mov
jge
mov
ret
inc
sbb
rcrb
insl
cmp
push
fnstenv
fistpl
not
push
call
rol
cld
inc
adc
es
sub
xor
cmpsl
arpl
add
push
fisubs
dec
stos
scas
xlat
xchg
lock
xor
xor
rorl
aaa
dec
cmp
movsl
neg
repz
notl
les
mov
mov
mov
stos
and
sti
js
jg
inc
cmpsb
daa
and
xor
lret
xchg
orl
dec
dec
xor
pop
out
pop
cmpsb
in
sbb
mov
popf
insl
test
inc
bound
outsb
movsl
pop
mov
mov
inc
pop
popa
cld
xchg
sbb
ja
rol
js
lock
shrl
sti
push
fidivrl
test
psubsb
fisubrs
cmp
daa
jl
mov
jns
mov
clc
push
mov
outsb
mov
push
pop
push
mov
cmpsb
xlat
addb
jae
divb
xchg
inc
mov
jl
add
dec
seta
mov
insb
int3
popa
jg
or
push
xchg
adc
mov
bound
cmpsb
jnp
divb
fadds
dec
out
pop
inc
lahf
inc
call
jb
out
fwait
push
imul
jne
int
cmc
adc
mov
xchg
ficoml
movl
test
add
add
cmp
adc
insb
nop
cmp
divl
mov
push
lahf
jno
xchg
insl
clc
hlt
xor
or
jecxz
dec
insl
sti
adc
sub
mov
aam
fiadds
cmp
sub
mov
push
aas
xchg
xor
xor
mov
loope
and
std
out
addr16
hlt
test
and
pop
pop
lea
dec
cmp
lahf
xor
mov
adc
push
sbb
pop
and
lods
xchg
sub
cld
jb
pop
xor
cli
stos
dec
adc
cmp
push
adc
pop
iret
daa
popf
repz
sub
aaa
daa
data16
sti
sarl
sub
nop
or
lret
xor
add
mov
jp
sahf
ljmp
fists
inc
xor
aas
jg
cmp
jl
es
sbb
lods
jmp
mov
cwtl
jae
xchg
xorb
dec
sbb
sbbb
or
out
cmp
mulb
add
repz
dec
arpl
out
push
scas
inc
and
pop
add
test
xor
clc
aad
mov
callw
xlat
movsl
and
rcl
cmp
sbb
inc
mov
jp
adc
test
call
pop
mov
sbb
xor
mov
nop
leave
stc
daa
xor
push
mov
add
xchg
pop
in
imul
testl
fldt
shrb
fistpll
aaa
inc
pop
sbb
pop
addr16
jmp
pop
int3
jg
cmp
xor
push
aam
stc
xor
shr
jb
iret
test
xchg
mov
push
fstpt
lcall
cli
xlat
inc
jno
mov
pop
inc
into
push
mov
mov
push
repnz
nop
out
daa
popa
push
int
or
lret
sti
and
mov
loop
lret
int3
adc
clc
or
lds
jmp
adc
cli
lea
mov
nop
bound
sbb
scas
xchg
pop
jno
xchg
inc
call
pop
xlat
repz
bound
outsb
mov
insb
mov
or
cmp
jnp
arpl
into
sar
cmp
cli
popf
test
fildll
mov
das
mov
out
mov
mov
cmp
pop
adc
insb
mov
jmp
fnstcw
insl
aam
mov
enter
push
or
add
add
sbb
sbb
xchg
jo
xor
pop
lea
lock
ss
imul
fcomp
test
ret
lock
jecxz
test
arpl
test
mul
xlat
add
arpl
out
cltd
push
outsl
push
ds
lcall
rcrb
cmc
cmp
js
popa
fucom
nop
jmp
adc
sub
stc
cld
clc
dec
or
mov
jae
xchg
call
subb
out
xorl
in
add
inc
insl
mov
adc
mov
and
add
sti
mov
into
mov
and
sub
or
std
lds
popa
repnz
repz
push
push
repz
pusha
xchg
comiss
mov
bound
jne
inc
xor
sarb
xchg
mov
or
add
subb
fistpll
and
call
inc
cmpsb
stos
movb
add
cmp
jle
ret
mov
adc
and
jl
out
add
sbb
out
rorb
add
xchg
xor
test
scas
loop
pop
cmp
inc
mov
insb
pushf
inc
lret
dec
fisubrs
sbb
sti
push
rorb
jno
jo
repnz
and
sahf
mov
outsl
insb
and
xor
inc
jne
fs
ds
pop
push
sbb
xchg
fistps
movsb
sub
je
fidivrs
jb
push
and
cmp
out
push
iret
or
roll
fdivp
repnz
js
repnz
lcall
sbb
pushaw
jno
stc
imul
in
arpl
sub
data16
mov
add
movsb
fcoms
scas
fistpl
stos
lahf
cmp
incb
hlt
sbb
mov
mov
cmp
mov
jmp
addr16
ds
fwait
jno
xlat
mov
mov
aam
jp
cmp
out
dec
add
adc
adc
es
jno
pop
lea
imul
leave
repnz
xor
lret
xor
cld
xchg
sub
das
lret
adc
push
nop
xor
bound
das
and
sbb
mov
lods
fildll
mov
fildl
pop
icebp
test
cmpsl
sbb
lock
jl
xor
sub
xchg
testb
dec
lahf
push
mov
xor
add
xchg
or
loop
mov
inc
inc
addr16
lea
dec
pushw
aas
popa
into
insl
mov
ja
out
in
fdivl
dec
xchg
fiaddl
inc
pusha
mov
xchg
fidivrl
movsl
or
int3
sbb
xchg
and
adc
xor
cmpsb
icebp
push
push
sub
pushf
or
push
orl
call
xchg
loopne
inc
xchg
leave
dec
xchg
cmp
fimull
clc
adc
pusha
fcmove
lock
mov
mov
int3
and
or
mov
cmpsl
inc
cmp
imul
sub
or
push
push
cld
sub
loopne
mov
dec
cmp
mov
iret
or
mov
mov
mov
pop
in
push
xor
mov
scas
mov
adc
shlb
lahf
push
mov
out
sub
sbb
mov
sub
cltd
xor
or
test
sbbl
mov
subl
stos
lret
push
lock
lret
or
jg
cmp
repz
testb
insb
andb
mov
add
test
enter
dec
fcmovne
or
push
mov
pop
lock
sub
out
pop
jl
jae
or
cmp
test
stos
cltd
pop
inc
and
dec
fwait
jne
mov
ror
and
jecxz
mov
xchg
repnz
fs
pop
xor
or
xchg
outsb
dec
mov
jge
pop
jmp
loop
ret
jmp
sub
add
mov
and
xchg
dec
cwtl
das
push
and
cmp
loop
popa
add
cwtl
call
dec
cmp
inc
xor
xor
ret
jbe
mov
outsb
aam
xor
xchg
push
and
fisubl
cmpsl
pushf
add
icebp
mov
sbb
aad
repz
fbstp
fidivrl
ret
bound
orl
decl
neg
loop
mov
out
mov
cmp
insl
cmp
adc
dec
das
jg
xchg
mov
pop
jmp
and
rorl
pop
fsubl
cmpsb
es
mov
nop
add
push
pushf
pop
push
mov
and
mov
cmp
push
les
mov
outsl
mov
lds
jmp
and
mov
mov
mov
dec
push
cmp
sahf
adc
mov
scas
out
testb
cld
ljmp
add
imul
loopne
fidivrs
dec
jno
mulb
xor
bound
inc
pop
mulb
adc
movsl
and
mov
xchg
iret
scas
mov
xor
adc
pop
idivl
ljmp
mov
dec
jle
subl
or
push
sbb
fnsave
pop
dec
pop
cpuid
pop
clc
push
sahf
in
pop
mov
cmc
lahf
and
divb
in
out
pop
or
push
and
fsubs
lods
je
cmp
mov
dec
mov
push
test
fdivrl
pop
sbb
in
std
or
in
add
jno
icebp
pop
xor
repz
sti
cmpsb
insb
inc
insl
pop
push
jnp
insl
xchg
cmp
inc
xor
adcb
inc
fstps
dec
test
ffree
sub
into
sub
jns
mov
sar
jmp
repnz
xchg
fldl
mov
jmp
lods
pop
outsb
mov
inc
sbb
xchg
mov
das
leave
sub
js
jmp
mov
movsl
mov
jo
push
cwtl
dec
mov
xadd
out
push
sub
pop
movsb
pop
or
into
loopne
dec
xchg
test
xchg
and
out
out
mov
out
into
sbb
xchg
neg
in
fwait
dec
mov
mov
enter
ss
outsl
push
xchg
mov
and
andl
daa
vpavgw
xlat
enter
jne
xchg
cmp
and
and
adc
imul
cwtl
loop,pt
int3
xor
xchg
add
xchg
jno
cmpsl
fcompl
adc
insl
add
mov
cmp
std
test
cmp
push
lret
jmp
adc
scas
push
cli
nop
mov
ds
cmp
inc
cmp
outsl
pop
xchg
lahf
pop
xchg
adc
pop
dec
pop
scas
xchg
jp
or
std
xor
jle
icebp
sti
int
repz
xchg
inc
xchg
loope
mov
loope
inc
or
xor
notb
mov
xchg
inc
das
jnp
push
std
push
lahf
push
or
cld
aaa
in
int
test
jmp
cmc
imul
in
mov
data16
xlat
andl
mov
inc
lods
std
push
sbb
dec
movsb
out
les
push
movsl
xor
push
shr
cmc
jb
leave
mov
bound
xor
jecxz
add
popf
or
xor
pop
movb
inc
pop
maxps
and
xor
imull
das
rorb
jb
mov
std
cmp
fcomp
popl
int3
shll
sti
push
add
mov
mov
aaa
pop
pop
movsb
jmp
mov
or
and
scas
and
lahf
int3
inc
ljmp
push
push
dec
xchg
popa
sahf
aam
pop
push
dec
sub
jnp
cmc
movsb
or
pop
cmpsb
lret
jo
into
push
jbe
and
nop
lret
subb
sub
push
repnz
mov
xor
dec
scas
sbb
fisubrs
pop
adc
dec
adc
lret
mov
sub
sbb
mov
pop
inc
dec
decl
rolb
not
fs
push
insl
sbbl
loopne
lds
aaa
pop
dec
fidivs
sti
or
or
popa
push
jle
jnp
and
pushf
cs
sbb
jne
inc
cmp
aad
dec
cmpsl
adc
imul
test
pop
loope
push
mov
push
enter
cmp
jl
mov
loopne
xchg
int3
jns
xlat
daa
push
outsb
push
cmp
jae
stos
dec
hlt
mov
mov
cmpsb
xlat
cli
scas
mov
inc
cmp
sbb
enter
rorl
inc
shrb
jecxz
cmpsl
dec
mov
lock
adc
add
xor
repz
clc
notl
sbb
jns
addr16
sbb
pop
push
xor
dec
lahf
aam
sub
mov
add
fdivrl
cltd
mov
mov
ds
lea
pop
jmp
and
clc
ficompl
aaa
pop
dec
pop
nop
bound
stos
mov
mov
inc
xchg
push
xchg
inc
ss
cmp
out
aam
subb
mov
push
jp
or
int3
dec
popa
loope
xchg
dec
jge
sbb
repz
jmp
jno
les
dec
movsl
out
decb
pop
mov
and
repnz
cmpsb
call
in
adc
jp
xor
repnz
sbb
int
inc
mov
jp
mov
sub
xor
pop
scas
sub
cmpsl
jle
ja
pop
lcall
daa
bound
push
xchg
movsb
push
jg
rcr
sbb
mov
sti
sbb
xchg
stc
xor
mov
or
push
ss
mov
push
lahf
test
mov
mov
clc
adc
mov
sbb
pop
dec
pushf
push
cmp
cld
mov
xor
adc
push
dec
xchg
pop
call
dec
loope
mov
jae
inc
arpl
xchg
into
jmp
lods
push
idiv
cmpb
bound
test
cli
mul
dec
shlw
mov
or
mov
add
repnz
ret
mov
or
stos
mov
pop
out
xchg
push
outsb
xchg
divb
cmc
mov
adc
mov
sbb
loop
xor
jns
push
popf
test
int
push
loopne
dec
xor
fcoml
js
es
subb
aad
in
sti
mov
mov
loopne
mov
dec
daa
push
jge
lret
jl
or
xor
mov
insl
sub
lods
cmp
outsb
add
xor
cltd
rcll
and
dec
in
orl
add
mov
lahf
mov
ds
or
inc
arpl
popf
jns
repz
pop
movsl
cmp
out
loopne
pushf
xlat
enter
sub
loopne
stc
pop
iret
xchg
mov
pop
vunpckhps
add
mov
loopne
inc
cmp
js
fsubl
xchg
enter
pop
pop
cmp
jae
je
or
inc
cmp
ss
lods
cmc
mov
pop
loopne
call
incb
data16
movsb
xor
push
scas
push
inc
ja
sub
repnz
outsl
arpl
pop
jb
mov
cmpsb
stc
adc
jb
pop
and
inc
lds
inc
sbb
cwtl
fiaddl
scas
mov
or
pop
mov
mov
and
pop
xchg
push
in
push
adc
sub
sub
adc
aad
int3
jbe
cmpsl
pop
inc
out
and
pop
sub
insl
data16
in
xlat
push
add
or
and
adc
mov
fdiv
pop
sbb
inc
sbb
mov
pop
inc
mov
rcll
or
add
and
lret
in
adc
nop
pusha
dec
loop
insl
push
sbb
lods
mov
sahf
xchg
mov
dec
scas
outsl
xor
jecxz
leave
call
cmp
cs
rorb
mov
std
ja
mov
int
lds
push
xchg
jbe
orb
in
mov
inc
aaa
in
jge
adc
mov
nop
jnp
adc
out
cmp
adc
mov
jmp
ret
out
cmp
shl
inc
xchg
xchg
dec
punpcklbw
je
hlt
pop
jle
enter
fdivp
or
push
adc
divb
ljmp
outsb
mov
adc
pop
inc
jnp
sbb
mov
hlt
mov
test
ja
sub
icebp
roll
je
clc
pop
nop
sub
mov
mov
mov
loopne
lods
mov
sbb
adc
and
xor
insb
stos
into
add
sbb
js
out
js
cld
add
xchg
ficoms
out
inc
xchg
cli
pop
test
push
nop
sbb
or
cmp
or
jnp
or
sub
pop
mov
lret
popa
jecxz
pop
movsl
addl
ret
cld
sub
call
mov
push
push
out
and
loopne
push
out
jo,pt
int
push
mov
adc
jl
dec
cmp
fucomp
mov
imul
adc
sbb
mov
cwtl
or
mov
stos
xchg
adc
add
mov
cltd
fstl
mov
fnstsw
out
push
movl
xor
dec
dec
dec
cmp
cmp
dec
int
push
adc
pop
mov
stos
xchg
sub
adc
jle
push
test
lahf
mov
xchg
mov
in
xchg
pop
mov
jb
jmp
xlat
data16
hlt
adc
sub
lahf
xchg
not
repnz
pop
test
dec
bound
cmpsl
xor
push
push
popa
jb
xlat
ds
loopne
add
dec
cmp
or
shll
inc
in
por
hlt
push
pop
loope
shrb
dec
cltd
dec
in
jnp
dec
in
lret
out
in
repnz
jmp
inc
lea
jb
idivl
jb
jmp
in
fcoms
pop
add
sub
scas
inc
xor
data16
cli
sub
jge
outsb
mull
mov
in
sub
push
fcoms
je
lea
aad
dec
popf
xchg
repz
mov
out
out
jmp
out
cs
scas
test
scas
fistpll
push
into
jnp
cmp
add
mov
shrb
push
adc
sub
push
jbe
test
pop
loop
filds
je
shll
mov
outsb
mov
loopne
fstl
sahf
sub
xchg
lods
lret
push
add
jnp
dec
clc
push
dec
rclb
inc
push
inc
in
fs
mov
repnz
sub
icebp
inc
adc
sarb
push
ljmp
adc
adc
fmuls
and
pop
out
sub
stc
sti
int3
dec
mov
cmp
stc
jg
jp
mov
push
jae
ja
daa
imul
inc
jge
and
jns
int3
test
or
mov
xor
mov
xchg
aad
inc
and
out
aad
enter
popa
push
mov
je
std
add
addb
movl
pop
pop
setnp
add
jecxz
shlb
test
xor
mov
adcb
mov
sub
adc
cmpsl
das
jl
mov
stos
stos
aad
out
inc
aad
test
fwait
inc
jbe
push
mov
stc
enter
pop
sbb
test
mov
fstpt
push
fsubs
inc
sub
js
data16
aaa
mov
addl
in
pop
jmp
or
fcoml
dec
notb
add
test
or
jmp
jo
pushf
rcrl
xchg
call
sub
add
jecxz
and
xor
mov
sbb
xchg
bound
fidivl
lret
xor
jmp
int3
fimuls
or
loope
in
cmp
dec
inc
mov
pop
cli
dec
cld
sub
aad
leave
hlt
push
jbe
dec
lahf
push
out
xor
and
popa
test
gs
mov
dec
cli
addr16
ds
decb
lds
dec
call
mov
mov
stos
mov
repnz
sbb
xchg
stc
stos
mov
lcall
jb
test
xchg
cmp
pop
lods
push
loop
frstor
jmp
jmp
push
sbbb
fldt
adc
sub
mov
test
jbe
inc
fiaddl
loop
nop
jns
loope
pop
and
rcr
add
xchg
sub
fldl
mov
test
mov
add
stos
addb
mov
jnp
push
xchg
outsb
pop
test
push
popl
rcl
scas
pop
into
or
cli
adc
mov
mov
inc
inc
out
call
loopne
ret
dec
pop
pop
fwait
loopne
sbb
or
cli
popl
hlt
mov
pop
inc
ret
xchg
cmc
sbb
sarl
lods
sub
sbb
cwtl
jne
xor
xchg
popa
pop
dec
rcll
push
stos
xor
mov
dec
mov
jns
shrb
push
inc
add
loop
push
mov
inc
add
std
mov
mov
xor
push
sbb
aaa
mov
clc
lds
int3
scas
mov
popf
dec
mov
pop
xchg
xchg
rorl
and
lcall
or
out
cmp
call
cmpsb
addw
in
mov
or
mov
push
clc
repz
scas
push
cmp
outsb
mov
data16
mov
aas
js
fdivr
xor
fmulp
dec
xchg
aam
push
je
and
lret
or
xchg
les
out
repnz
mov
lods
gs
cmp
xchg
pushf
sub
push
cld
or
js
test
loope
loopne
mov
popa
repnz
repnz
outsb
jle
mov
add
mov
mov
pop
push
into
pop
mov
sti
cmp
jo
jne
pop
or
sub
jo
scas
mov
mov
dec
cmp
fisttps
pop
jae
pop
adc
and
cmp
outsb
push
xor
das
dec
aad
test
aaa
test
pop
jns
jns
clc
dec
pushf
add
es
aas
fs
xchg
and
pop
aas
mov
xlat
aaa
jle
push
and
jmp
stc
aaa
repz
xor
xchg
push
push
inc
pop
push
mov
sbb
mov
sbb
cmp
in
mov
scas
xchg
push
cli
mov
push
hlt
dec
or
add
fcomps
mov
mov
adc
scas
mov
sbb
and
outsl
stos
mov
cltd
nop
sub
push
dec
xor
or
push
cmp
mov
push
das
jmp
mov
mov
add
sar
mov
out
xchg
add
mov
sahf
rorl
or
popf
jmp
push
jbe
inc
xchg
in
adc
stc
xor
scas
cmp
jge
xchg
xor
xchg
pop
ret
xchg
xchg
int3
stos
mov
repz
pop
test
jo
enter
xchg
mov
xchg
push
xor
jge
int
cmpsb
and
scas
insb
cmp
sbb
lea
dec
nop
add
bound
dec
sub
sarb
push
nop
pop
jo
sbb
sbb
push
mov
cmc
push
bound
or
je
les
mov
adc
fimull
in
lcall
xchg
dec
xchg
push
xchg
xor
les
cmp
push
xchg
adc
mov
hlt
ret
jns
jle
aad
mov
dec
fiaddl
inc
fst
fwait
mov
outsl
mov
popa
mov
push
mov
pop
clc
pop
add
ret
mov
sub
fwait
mov
pop
insb
push
and
lret
jp
pop
in
out
jae
jno
out
aas
cltd
rsqrtps
and
inc
jmp
repnz
das
inc
pop
aaa
aam
sbb
into
sub
mov
dec
test
pop
xchg
xchg
pusha
jns
sbb
inc
adc
stos
cmp
add
cld
push
je,pt
inc
xor
add
sbb
sbb
ds
js
adc
nop
push
xchg
mov
outsb
or
aaa
pop
aad
lock
pop
jp
mov
inc
je
xor
movl
jae
push
scas
adc
jno
bound
in
fdivs
addr16
push
fdivrp
daa
test
out
call
ljmp
addr16
mov
sub
pop
adc
mov
xlat
std
lret
out
fmull
push
jg
ret
mov
mov
scas
xchg
add
cld
movb
add
arpl
add
mov
mov
jae
pop
arpl
hlt
and
add
and
dec
xor
sbb
mov
sub
aad
push
stos
out
mov
mov
bound
dec
mov
push
pop
inc
xchg
and
mov
cmp
pop
mov
push
dec
aas
fmulp
pop
aaa
pop
lea
mov
test
sbb
shl
and
or
sub
or
stos
sbb
fstpl
loope
push
push
sbb
jg
sti
repnz
inc
ror
divl
ja
jecxz
rcrb
fs
negb
movsl
cltd
add
inc
jno
movsl
xor
and
adc
jp
adc
add
popa
inc
jno
test
leave
push
cmp
cmp
adc
stos
mov
xchg
cmpsb
rcrb
daa
or
movb
lods
rcrb
dec
jecxz
xchg
adc
enter
aaa
pop
rcrl
jb
fnsave
push
mov
xchg
lea
sbb
in
flds
test
fs
sub
sbb
jp
rcl
xchg
mov
mov
int
sbb
dec
scas
adc
inc
mov
aad
dec
inc
ljmp
out
xchg
xor
loop
mov
popa
mov
lahf
pop
popa
jbe
sbbb
pop
adc
xchg
add
mov
pop
sbb
jmp
mov
pop
cmp
movsl
movsb
add
out
cmp
rcl
pop
mov
cmpsb
jge,pn
push
pop
cmpsb
mov
xchg
scas
and
xchg
cmp
mov
xor
jp
rorb
pop
add
push
addr16
inc
inc
data16
stc
lret
pop
mov
add
mov
or
inc
jecxz
jno
mov
pop
dec
das
shll
pop
sub
xchg
loopne
sahf
inc
sub
cltd
cmp
mov
das
outsl
push
dec
jp
mov
hlt
mov
push
jae
movsl
push
mov
daa
or
clc
mov
sahf
loopne
loopne
sbb
dec
xchg
jne
xor
ret
or
mov
sub
imul
ret
fldt
aad
and
adc
arpl
cmc
loopne
mov
rcrl
leave
ret
lds
mov
lods
orb
push
shrl
push
popa
mov
or
mov
jg
mov
dec
lods
inc
jb
nop
out
scas
mov
mov
cmc
idivb
iret
cltd
mov
jmp
dec
or
add
cmp
xchg
btc
mov
add
push
dec
lea
inc
jb
lahf
test
sbb
fisttpll
jge
adc
cmpsl
lock
bound
pop
mov
or
pop
pop
push
xchg
jns
sub
repnz
jo
out
sub
jns
jae
push
jp,pn
sub
sbb
mov
xchg
add
jns
mov
imul
cli
clc
pop
subl
xchg
pop
mov
aad
jne
xor
sbb
mov
xor
mov
test
inc
xchg
mov
mov
int
mov
cmp
inc
dec
xchg
add
xor
call
sahf
inc
push
fimuls
lret
inc
bnd
sbb
out
sti
loop
arpl
lods
inc
mov
std
jmp
out
pop
mov
sub
add
aaa
and
leave
imul
cmp
add
repnz
mov
shlb
sbb
mov
ja
not
aaa
aad
sbb
push
popa
mov
push
push
shll
aam
fiadds
mov
xchg
push
mov
fdivr
push
out
aad
lods
addr16
mov
inc
push
xorl
int3
hlt
xchg
int3
mov
cmp
fstpt
enter
add
ss
rolb
xor
sub
lods
adc
mov
sahf
inc
pop
out
cmp
xchg
lock
andl
mov
jge
cmp
xor
cmpsl
push
mov
or
rcr
push
push
lret
sbb
jbe
call
dec
inc
int3
inc
int3
xor
xchg
shr
lahf
jmp
mov
insb
pop
stos
push
add
lea
xchg
repz
aaa
sbb
mov
xlat
sahf
cwtl
xor
in
fnstcw
repnz
iret
fadds
mov
sbb
mov
pop
int
imul
push
ret
insb
and
stos
xchg
sbb
adc
mov
add
loope
and
sbb
aam
fildll
aaa
add
add
in
mov
iret
leave
xor
jns
rcrb
in
cmp
dec
cmp
push
stc
mov
nop
or
jne
sbb
cltd
push
jmp
movsb
stos
fdiv
leave
mov
jae
lret
daa
addb
loopne
xor
out
push
push
ret
lock
fsts
jmp
xor
push
fsubrs
nop
insl
int
fwait
mov
es
sbb
shlb
imul
sub
fldt
add
aaa
loope
cmp
jmp
adc
sub
cmp
in
std
xchg
push
pushf
xchg
dec
ds
popa
ljmp
inc
pop
aas
lock
pop
es
sbb
icebp
stc
xlat
mov
lret
and
sar
outsl
and
incl
leave
push
andl
mov
psadbw
test
jo
push
xor
pop
xor
scas
popa
jo
scas
invd
iret
cmpsl
fstp
aam
xor
push
nop
sbb
xor
inc
xor
push
mov
shll
fnstenv
xchg
xchg
gs
stc
fsub
test
cld
lods
divl
fadds
pop
lea
test
and
mov
in
mov
and
lret
mov
mov
cmp
adc
push
or
cmpb
imul
jmp
and
jge
and
std
loopne
popa
xchg
fimuls
xchg
aam
test
cs
push
adc
mov
and
jle
cmpsb
ret
mov
cmpsl
fidivs
test
or
xorl
adc
scas
test
sbb
mov
cltd
sub
mov
into
insl
pop
aam
pop
push
aam
mov
mov
dec
out
push
fs
inc
fcomps
imul
xchg
and
pop
outsb
sarl
test
pushf
repz
insl
mov
aam
cmc
lock
sbb
cwtl
pop
dec
mov
jb
cmp
xchg
push
xor
mov
mov
mov
repz
nop
js
loopne
shlb
arpl
iret
xor
popf
mov
scas
dec
inc
les
repnz
sub
sti
fcoml
aam
or
pop
fwait
cli
jle
jecxz
push
push
mov
idivl
aaa
cli
add
sbb
cmpsl
cmp
pop
dec
mov
pushf
or
rcr
mov
in
test
pop
sub
mov
mov
call
fsubs
sub
push
pop
inc
jecxz
in
sbb
das
lret
sub
xor
sub
inc
addr16
inc
mov
jno
test
mov
imul
mov
popf
cwtl
imul
xchg
jne
inc
dec
outsl
and
mov
adc
sub
or
ljmp
cmpsb
aas
sahf
cmovae
sbb
sub
rorl
std
cmpsl
mov
cmp
aaa
movb
mov
daa
add
rclb
in
cltd
in
mov
test
jg
lcall
xchg
jle
mov
cmc
jnp
push
dec
jo
or
outsl
pop
mov
xchg
rolb
lcall
jecxz
sti
sbb
ja
imul
pop
xchg
jnp
inc
sbb
dec
add
iret
xchg
jp
lods
pop
xchg
outsl
icebp
xor
adc
call
xchg
std
jp
push
xchg
pop
aaa
cld
mov
out
mov
lahf
les
add
fwait
push
outsl
enter
push
lea
jp
mov
lret
pop
mov
mov
adc
adc
push
and
fisubrs
ja
imul
xchg
adc
or
inc
xor
into
mov
sti
sub
sbb
inc
out
sbb
aas
lahf
mov
enter
xchg
ret
lds
push
jle
loopne
or
push
movsl
dec
cld
inc
mov
cld
mov
cltd
jne
setbe
loopne
and
repnz
arpl
repz
pop
push
adc
and
loopne
je
push
and
in
test
in
inc
xor
mov
and
mov
jmp
cmp
xchg
push
fldcw
adc
movups
dec
insb
push
cmp
mov
mov
cmp
test
aad
lods
lret
daa
cmp
xor
aaa
ljmp
jne
or
ja
mov
daa
push
push
std
std
jae
mov
pop
jecxz
cwtl
icebp
dec
aas
pushf
clc
push
mov
flds
jmp
mov
cmp
aaa
enter
pop
lds
dec
lahf
jnp
mov
xor
cmc
add
push
lods
or
cmp
shll
xchg
dec
rolb
sti
shl
mov
popa
lcall
dec
sbb
lods
cwtl
mov
mov
enter
bound
or
dec
mov
addr16
or
mov
xchg
jl
aas
aam
movsl
pushf
xor
lock
mov
lods
loope
shrb
shrl
imul
loop
insl
ret
fdivl
imulb
pop
dec
adc
movsl
xor
sbb
andl
adc
cmp
dec
fwait
lret
adc
in
pop
hlt
mov
nop
fs
push
push
insb
out
loop
sub
mov
aaa
lret
or
dec
push
or
sub
cltd
loop
fsubrp
icebp
jmp
es
pop
push
mov
test
cli
cltd
mov
adc
sbb
popf
and
pop
imul
in
add
test
cltd
cltd
push
add
add
cmp
stos
xorb
sub
sbb
int3
pop
repz
movsl
push
cltd
stos
pop
dec
ret
rolb
std
mov
cmpb
inc
mov
cmp
jns
cmp
sahf
addb
xchg
out
add
mov
jno
xchg
xchg
pushf
movsb
inc
arpl
shrl
lds
sub
ljmp
or
push
mov
aam
push
inc
gs
xor
iret
mov
in
out
push
int3
mov
jp
pop
jbe
jg
loope
xchg
les
insb
les
movsb
push
pushf
jecxz
inc
stos
mov
and
aas
inc
xor
mov
outsb
sub
add
xor
adc
mov
xor
dec
jmp
stos
mov
inc
imul
cli
loop
push
dec
sbb
pop
sti
fdiv
test
lcall
insb
scas
sti
inc
or
mov
add
jg
in
cmp
pop
lock
lods
push
inc
jmp
xchg
xor
mov
mov
dec
in
arpl
testb
addl
cli
jno
ja
sub
jae
inc
add
mov
cmp
loopne
in
adc
das
xor
dec
call
pop
test
pop
push
mov
xchg
xor
jnp
xchg
loopne
dec
jo
lahf
mov
xchg
icebp
mov
outsb
cmp
insb
inc
aaa
adc
imul
dec
shll
mov
mov
rclb
int
push
faddl
cmp
mov
or
push
xchg
push
in
sbbl
mov
in
stc
inc
in
scas
xchg
lock
or
dec
pop
lock
stc
in
add
out
push
cmpsb
loope
lret
mov
aam
pop
shlb
jb
xlat
daa
cld
cmp
mov
jge
mov
jl
ret
test
insl
ret
mov
mov
sub
cwtd
sti
xchg
or
fdivs
sbb
xchg
push
cmpl
adc
call
xchg
dec
jl
icebp
pop
and
push
adc
push
stc
dec
sbb
push
dec
pop
push
insb
inc
xor
in
setb
and
daa
mov
xor
into
das
pop
push
dec
sets
movsb
dec
pushf
nop
jmp
xor
jmp
dec
inc
test
fcmovne
enter
xlat
jno
xchg
loopne
pop
cli
and
sbb
notb
mov
jns
shlb
cli
add
inc
pop
cmc
fcompl
mov
xchg
xlat
aas
lds
add
pusha
lahf
ja
sub
cmpsb
pop
xor
dec
adc
enter
mov
div
ja
cmp
js
sbb
pop
divl
shl
jecxz
into
jl
cld
jmp
aas
imul
in
popa
cmpsb
push
notb
cmp
sub
ret
mov
pop
push
test
add
jg
cmc
push
arpl
loope
xor
test
into
push
in
cli
xchg
lods
add
lahf
add
and
mov
fnstsw
sbb
es
pop
mov
pop
cltd
lea
ret
push
sarb
sahf
jbe
stc
jo
xchg
inc
clc
xchg
add
dec
pop
xor
fsts
sub
sbb
jg
and
cltd
in
dec
rcll
repnz
in
push
push
xchg
cmp
add
loopne
jl
sub
scas
out
push
mov
and
and
ret
and
xchg
xchg
imul
das
dec
pop
clc
bound
and
or
mov
push
lds
xchg
adc
add
mov
repnz
aad
ljmp
mov
mov
jnp
mov
in
jmp
adc
and
sub
fwait
dec
cmp
daa
repnz
sbb
push
mov
in
sbb
inc
jp
mov
cmc
mov
jp
fmull
mov
fists
xor
ss
lods
mov
js
addl
inc
add
stc
notb
inc
outsl
adc
jge
xchg
fcomp
cmp
mov
popf
leave
das
or
mov
add
push
pop
pop
lahf
xlat
rolb
pop
xor
add
in
cwtl
movl
aam
js
add
addl
fcompl
sbb
stc
mov
inc
aaa
cwtl
jb
add
jae
pop
adc
inc
leave
pop
lds
xchg
sub
sub
jne
adc
addr16
out
mov
sub
mov
out
inc
loop
jne
pop
xor
jp
inc
dec
ficoms
dec
and
ret
lret
xor
rcr
cmp
jecxz
push
mov
mov
mov
fisttpll
adcl
mov
dec
leave
xchg
push
push
out
and
jnp
ret
test
lds
es
inc
test
popf
outsl
or
iret
pop
mov
xor
mov
lds
fmulp
mov
jg
mov
aas
and
ds
ficoml
fsubr
je
stc
cmp
push
je
pushf
adc
cmp
and
add
sub
sbb
adc
cwtl
xor
pop
gs
inc
fnstsw
out
shrl
add
mov
pop
pop
mov
out
cs
es
pop
outsl
jmp
pop
js
les
inc
stos
jl
xchg
insl
adc
xchg
les
test
std
insb
pop
jle
pop
je
scas
or
mov
adc
shlb
dec
ss
hlt
div
orb
es
inc
fidivl
test
mov
cld
pop
repnz
lods
or
jle
and
in
or
js
push
push
xor
xchg
dec
xchg
jl
pop
xor
mov
sti
xchg
push
adc
adc
jns
inc
pop
push
je
jno
mov
frstor
jle
fiadds
inc
mov
lea
repz
lds
mov
xor
push
popa
je
sub
xchg
adc
imul
int3
mov
dec
jecxz
stc
insb
jl
xchg
pop
jmp
mov
mov
rcrl
call
das
sub
push
arpl
pusha
je
pop
or
jae
les
xor
loope
das
push
push
cwtl
jmp
mov
xor
sbb
push
cs
leave
cltd
arpl
sbb
sub
dec
je
mov
xchg
lret
sub
cmp
adc
gs
je
ljmp
cmp
imull
push
daa
inc
arpl
or
les
jne
inc
je
jg
add
out
cmc
sub
xchg
jg
arpl
shll
lods
pop
out
cli
adc
arpl
test
inc
adc
imull
mov
stos
test
xchg
insl
movsb
jle
mov
jbe
repz
lahf
or
sbb
inc
movsb
js
test
dec
aad
jno
or
lahf
mov
mov
insl
mov
unpcklps
adc
jns
sar
push
pushf
lods
mov
lret
repnz
loop
ss
out
push
adc
add
add
pop
or
mov
andl
cltd
loopne
loopne
ds
or
aaa
mov
loopne
fadd
mov
aas
out
dec
jno
cmp
sub
dec
rorb
adc
sbb
cmp
mov
inc
les
xchg
pusha
push
sub
mov
jge
popf
stos
sti
out
add
dec
cltd
stos
xchg
mov
imull
pop
gs
xorl
addb
and
mov
ljmp
das
jns
mov
dec
push
adc
lods
xor
divps
popa
sub
or
inc
pop
aad
push
rclb
enter
push
push
data16
clc
fldcw
pop
fsubs
orl
dec
or
jecxz
mov
test
push
shlb
adc
add
dec
test
in
xchg
addl
int
fwait
mov
test
jbe
jg
stos
das
daa
push
int3
ret
cmp
cmpsb
insl
fnstsw
sub
dec
sbb
ljmp
pop
push
and
jns
or
mov
push
jb,pn
pop
cltd
jns
add
sti
inc
lock
insl
xor
add
outsb
mov
xor
xchg
in
sbb
out
pop
cmpsb
mov
xchg
outsb
jecxz
xlat
pop
jmp
pop
arpl
mov
push
xor
inc
mov
cmp
push
adc
lcall
mul
mov
or
data16
push
scas
mov
lret
fimull
jecxz
mov
or
sbb
adc
push
xchg
enter
sbb
data16
push
cmp
xchg
mov
jnp
in
fldt
call
jecxz
mov
aaa
push
mov
cwtl
out
dec
fstpt
sbb
mov
mov
pop
or
out
fwait
iret
add
sbb
je
jmp
or
test
xchg
xorl
leave
sub
cltd
lmsw
xchg
std
xor
mov
adc
mov
or
sub
inc
sub
push
fwait
out
popa
andb
dec
cld
imul
pop
ret
inc
lods
mov
stc
mov
inc
pop
push
xor
ljmp
enter
ret
ficomps
ret
mov
stos
push
mov
mov
add
sub
sbb
push
and
ja
sbb
pop
in
xchg
fsts
gs
aad
mov
ss
jmp
ljmp
jnp
fistpll
enter
fsubl
mov
add
xchg
mov
jb
inc
sub
int
jge
pop
inc
xchg
ds
mov
sbb
je
jecxz
inc
adc
cs
and
std
lcall
bound
push
stc
and
scas
mov
pop
xor
inc
pop
call
mov
mov
and
xchg
jne
fsts
dec
jnp
adc
fs
daa
fsub
les
pop
dec
jb
test
movsb
test
les
arpl
sbb
pop
mov
xchg
xchg
int
xchg
scas
popa
repnz
pushf
fbld
pop
push
lahf
push
xor
fidivl
dec
hlt
add
subl
ja
inc
mov
rolb
sbb
adc
cld
repnz
bound
cmp
repnz
mov
cmpb
dec
and
dec
lea
shrb
mov
xchg
pusha
mov
test
xor
cmp
inc
xabort
add
repnz
mov
pop
dec
push
add
mov
fildl
out
mulb
out
inc
lret
popf
mov
into
pop
dec
jo
iret
mov
stc
push
mov
imul
mov
jge
arpl
notl
push
or
push
pop
adc
lods
into
aas
out
mov
dec
or
and
fsts
xor
cmpsb
xchg
dec
push
popa
stos
xor
gs
es
into
jge
or
xchg
xor
push
xchg
scas
add
mov
lret
test
inc
sbb
sbb
testb
xchg
xchg
sub
ret
sbb
inc
roll
and
ret
push
je
loop
mov
dec
adc
addr16
out
fsubrl
mov
xchg
mov
inc
bnd
push
jb
out
sarl
mov
jg
fwait
pop
mov
dec
imul
mov
imul
fwait
xchg
push
cmp
popa
mov
and
xchg
xchg
or
xor
aam
push
movsb
popf
sti
sahf
mov
push
fimull
jp
insb
mov
add
lahf
lock
xchg
fistpl
fstl
ret
sbb
out
push
repz
outsb
xchg
aad
sbb
repz
popf
mov
mov
out
xchg
dec
gs
idivb
sbb
fisttps
sti
lods
mov
dec
xor
js
adc
and
mov
mov
out
mov
jb
mov
sbbl
lds
pop
add
icebp
pushf
mov
aas
mov
xor
ds
inc
mov
mov
rcrb
jae
or
sarb
cmp
and
add
push
ret
dec
add
pop
testb
sbb
sub
cmp
dec
push
mov
lret
imul
push
andl
icebp
cwtl
addr16
test
jnp
cmp
bound
scas
mov
mov
jns
mov
es
cmp
mov
mov
xchg
push
or
ror
inc
loope
xchg
xchg
data16
lock
push
ja
scas
push
add
inc
in
mov
jg
test
mov
or
push
dec
and
fninit
lahf
sub
mov
xorl
jecxz
lret
ret
adc
jno
xor
stc
mov
cmp
je
inc
xchg
psubb
inc
bound
fst
ret
push
rcll
sbb
xor
dec
or
mov
mov
cltd
subl
lods
aam
enter
jg
lds
xorb
xlat
cmc
pop
in
push
lahf
push
cmp
inc
stc
push
sub
push
inc
fistps
add
pop
faddl
mov
call
cmpsl
rcr
or
xchg
dec
jnp
ss
sarb
adc
es
insl
je
pop
dec
hlt
mov
shlb
xor
pop
cmp
inc
jo
pop
lret
mov
cmpsb
nop
inc
clc
in
dec
push
adc
inc
or
inc
xchg
xor
aam
pop
movsb
sar
sub
lcall
xor
leave
test
cli
dec
pop
sub
adc
mov
shll
xor
adc
add
jmp
insl
jp
mov
je
pop
rcll
cmp
xor
xchg
int3
insb
or
mov
pop
add
jb
push
call
lods
mov
loope
dec
stc
lods
mov
add
sbb
jo
ss
xor
mov
punpcklbw
insb
ja
dec
cmp
mov
lods
clc
jg
lahf
adc
into
sbb
adc
xor
push
ss
arpl
enter
pop
dec
xchg
addr16
jo
sahf
dec
mov
roll
test
inc
push
popa
sbb
xor
aad
xchg
rcrb
and
add
dec
imulb
lea
sbb
add
add
pop
and
fnstenv
jne
pop
sub
jb
cld
mov
mov
lock
in
loopne
jmp
and
ret
shlb
push
xchg
lock
xchg
mov
lcall
mov
jmp
in
push
or
test
inc
test
popf
dec
fldenv
push
inc
mov
pusha
enter
mov
mov
out
in
mov
pop
out
mulb
mov
or
jb
adc
pop
popa
setbe
mov
push
push
mov
pop
mov
dec
push
je
shl
scas
ja
inc
in
mov
inc
cmp
add
jnp
bound
cmc
shll
sub
jl
sarl
cltd
lods
and
cmp
fmul
xor
mov
gs
out
mov
mov
leave
inc
jecxz
mov
pusha
add
cmp
sub
dec
cwtl
repnz
mov
and
movsb
cli
sbbl
mov
push
and
push
cld
adc
in
jmp
push
dec
push
fstl
in
imul
pop
xchg
aas
dec
inc
xchg
push
xchg
mov
jp
dec
jl
dec
and
fidivrl
daa
iret
in
mov
cmpl
jns
int
leave
pop
and
pop
call
stos
in
add
inc
inc
cmp
dec
dec
lods
int
rcrl
and
inc
mov
inc
pop
data16
das
lods
inc
sub
scas
icebp
pop
push
aaa
mov
lds
xchg
out
pop
test
sbb
adc
adc
popf
scas
out
ja
aad
xor
xorl
jmp
xchg
xor
iret
ljmp
ljmp
andl
push
pushf
imul
mov
push
out
dec
jle
xor
jne
arpl
enter
mov
aas
leave
jb
cmpb
dec
pop
push
jmp
xor
push
adc
jnp
loop
fs
mov
cli
jmp
ds
push
xlat
sub
and
aad
hlt
jl
push
inc
dec
xor
adc
ds
add
xchg
pop
push
jg
mov
std
cmpsl
cltd
gs
xchg
in
orl
pop
mov
ljmp
jnp
inc
sub
outsl
ret
jns
jb
outsl
outsl
test
mov
xchg
mov
inc
xor
or
mov
lret
fnsave
fbld
push
adc
mov
push
sbb
divb
jbe
mov
xor
pop
hlt
fucomip
insb
and
dec
push
lcall
adc
cwtl
aaa
arpl
mov
ss
ja
or
sarb
movsl
ja
pop
xchg
test
fxam
and
rcll
dec
cmp
jno
cmp
mov
daa
int
or
mov
mov
sahf
xchg
mov
std
outsb
cmc
sbb
cs
out
adcb
stos
push
arpl
or
cmpsb
sbb
nop
or
fldenv
icebp
mov
mov
out
add
pop
je
push
jb
lahf
lret
push
sub
lcall
into
out
xor
push
add
aas
enter
mov
fbld
cltd
xchg
daa
jb
aam
fs
mov
shrb
andl
fildl
add
inc
scas
fsubrl
push
sti
push
xor
stc
sub
aad
push
mov
in
xchg
lds
and
rolb
shrl
push
popa
push
and
loop
jecxz
cld
xchg
dec
mov
out
cmpsl
in
lea
int
xchg
adc
add
xchg
loope
popf
jg
rcrb
ret
daa
pop
add
mov
adc
jbe
lds
and
jmp
xor
push
pop
mov
aam
test
or
lea
push
jne
pop
gs
iret
out
ds
ljmp
xchg
test
dec
adc
xor
repz
jl
fs
int
xchg
insb
adc
sub
adc
addr16
test
jns
mov
fcomps
jge
mov
cmpsb
sbb
movsb
push
pop
outsl
fmull
xchg
jle
lods
and
fdivrl
cmc
dec
mov
adc
ds
scas
dec
fwait
mov
sub
cmp
cli
mulb
add
push
fcmovnbe
adc
xchg
jg
dec
in
pop
and
or
test
or
popa
rclb
sbb
jne
push
aam
mov
stos
jns
inc
shrb
push
sbb
imul
sub
mov
pushf
cmp
mov
ja
outsl
test
or
lahf
jge
frstor
imul
imul
xor
pop
ljmp
rorl
repnz
push
mov
jge
adc
sub
xor
sahf
mov
push
sbb
fildl
je
ret
insl
inc
lea
mov
mov
clc
ret
add
mov
mov
lods
repz
hlt
clc
adc
jbe
inc
jne
fcomp
jne
xchg
movsl
mov
mov
add
imul
ss
mov
pop
fstps
loope
jbe
push
dec
push
mulb
jecxz
xorl
pusha
cmp
or
or
xchg
lods
int3
leave
loopne
xor
outsl
std
daa
sub
fdivr
insl
scas
movsl
out
loop
adc
jns
sub
jmp
leave
int
rorl
enter
xchg
stos
pop
repnz
lcall
ss
decb
sub
add
or
cmpsl
ds
inc
andl
push
mov
test
pop
push
xor
mov
sbbl
mov
pusha
add
xor
ja
in
pop
and
shll
push
hlt
pop
lds
adc
fs
pmullw
mov
leave
sbb
push
leave
sahf
out
pop
mov
cmp
push
pop
fldenv
clc
lahf
adc
mov
fnstsw
pop
cld
in
inc
jp
andb
popf
lods
popa
xlat
add
sbb
mov
push
jbe
imul
ss
movsl
mov
fildll
push
mov
ret
std
sbb
dec
push
and
xlat
iret
or
inc
enter
dec
loop
cmp
mov
subl
dec
sti
cmpsb
dec
dec
lods
pop
push
jmp
jge
push
mov
xchg
fidivrs
cwtl
push
or
loop
push
test
sti
shlb
pop
invd
ret
or
pop
jge
ljmp
jne
pop
xor
test
in
pop
jae
mov
mov
rcll
xchg
lods
pusha
lods
inc
add
mov
xchg
jne
movsb
sbb
pop
mov
push
mov
xor
lret
lock
sahf
int
sarl
xchg
imul
adc
dec
pop
add
test
pushf
pop
pop
push
xor
mov
in
inc
stc
sub
cs
mov
jmp
sub
daa
mov
add
jmp
sub
pop
and
xlat
sub
sbb
stc
sub
dec
and
repz
adcl
xchg
out
lar
cmpsb
out
outsl
jb
pop
and
cmp
lcall
lcall
pushf
adc
mov
or
in
insl
ret
dec
adc
addr16
in
testl
xor
dec
inc
in
addr16
iret
or
mov
sub
test
neg
cvtps2pd
or
ret
adc
adc
test
inc
or
daa
lret
test
pop
mov
xchg
and
in
flds
in
jge
xor
or
mov
cmp
jl
xchg
sbb
data16
js
es
fnsave
adc
cmp
daa
test
xchg
or
ds
divl
dec
or
bound
add
out
mov
xchg
cmp
data16
out
xchg
or
xchg
pop
cmp
loope
test
mov
mov
inc
loop
push
adcb
lret
adcl
mov
lods
mov
loopne
hlt
mov
loope
jnp
mov
and
mov
and
push
add
xchg
adcl
and
lea
pop
and
les
pop
out
mov
lahf
sbb
xlat
imul
into
sub
xchg
imul
xchg
add
or
shlb
push
pop
cmc
cmovns
cmp
pushf
test
mov
mov
push
and
insb
fwait
imul
bswap
aad
add
xchg
adc
mov
jne
or
xchg
mov
inc
aad
pop
adc
cli
mov
out
pusha
ljmp
pop
sti
and
fistpl
push
mov
insl
cmpsb
jmp
xchg
push
es
clc
cltd
sbb
pushf
push
gs
adc
jp
xor
add
movsl
sub
in
dec
xor
jb
xchg
cmp
jo
pop
inc
mov
stos
pop
mov
stc
jge
pop
aaa
add
jp
jmp
and
pop
dec
hlt
sbb
cltd
mov
je
scas
mov
mov
jno
adc
cmp
jp
sbb
push
out
aaa
inc
cmp
fistpll
test
mov
les
add
sub
and
push
xchg
sbb
inc
popa
flds
mov
outsb
cmp
fldt
lret
lret
arpl
lods
jl
in
std
add
add
add
std
xchg
loopne
dec
add
dec
out
out
inc
mov
pop
andb
inc
push
add
ljmp
add
inc
fnsave
jnp
inc
aam
adc
ja
push
mov
xchg
popa
sub
mov
icebp
out
sbb
lods
aad
arpl
cmp
in
mov
pop
pop
inc
cwtl
pop
aam
aad
mov
dec
into
ds
adc
cmp
jmp
add
push
cltd
mov
pop
or
mov
shrl
pop
push
xor
mov
or
shlb
pop
shl
hlt
push
xchg
icebp
loop
fdiv
xor
mov
lods
cli
cwtl
lock
mov
icebp
jg
dec
aam
xchg
mov
push
add
btc
mov
mov
aaa
inc
pop
xchg
add
mov
mov
das
adc
and
out
mov
cmp
sub
push
fisubl
xchg
frstor
mov
mov
sbb
and
mov
in
mov
mov
pop
inc
mov
xchg
adc
fnstcw
mov
out
inc
and
jb
pop
and
lods
push
into
outsl
mov
mov
cmp
rorb
shrb
nop
push
arpl
outsb
or
out
loope
stc
or
pop
mov
inc
out
adc
aaa
mov
xor
dec
dec
mov
xchg
fnsave
gs
mov
inc
pusha
push
cmp
in
sbb
movsb
jge
pop
leave
cwtl
fldenv
pop
fs
out
mov
push
add
dec
lods
mov
adc
or
xor
mov
jg
push
mov
shrb
mov
sub
cli
add
push
nop
rcrb
out
pop
inc
dec
into
sub
out
cmc
sahf
mov
push
lods
pop
insl
int3
mov
dec
jb
inc
add
mov
test
inc
jmp
cmc
adc
xchg
test
jnp
jecxz
or
outsl
push
mov
add
or
push
gs
mov
push
jg,pn
cmpsb
mov
push
mov
push
inc
insb
and
inc
movsb
adc
cli
mov
gs
xor
pop
pop
popa
pop
jp
or
xchg
sbb
outsl
push
mov
lahf
imul
jns
xor
cmpb
xor
fsub
or
lahf
cmpl
or
adc
dec
xchg
fbld
mov
out
sbb
mov
lds
gs
jns
jmp
inc
sub
jno
shrb
arpl
xchg
in
add
cmp
imul
mov
adc
dec
inc
pushl
inc
mov
loop
ds
or
sub
fs
roll
divl
jmp
cmp
clc
mov
xchg
jge
or
xlat
inc
xchg
lret
sub
push
mov
das
cmp
aas
xor
idiv
push
ret
jbe
push
mov
adc
mov
jge
fisubl
inc
mov
das
scas
inc
pop
cmp
call
cltd
incb
lea
push
add
inc
cmpb
sbb
cltd
add
call
dec
mov
add
mov
cmp
aas
add
sub
push
xorl
xor
lods
cmp
xor
add
cmp
xchg
mov
enter
cmp
int3
and
sbb
out
xchg
mov
push
popf
int
lds
into
lret
fbstp
shll
ljmp
movsb
add
jge
lret
imul
mov
adc
das
mov
xchg
adc
test
mov
fstp
loop
lret
sub
out
or
pop
xchg
jecxz
out
shr
cwtl
push
imul
in
mov
sub
and
push
jne
mov
repnz
mov
in
xor
and
add
sub
add
or
fistl
fadd
mov
filds
fidivs
repz
cltd
pop
lcall
dec
lods
sub
daa
and
add
xchg
inc
lcall
lahf
or
aas
lods
lea
mov
jle
test
pop
adcb
out
jg
sub
pop
mov
lods
push
js
clc
pop
pop
hlt
cmp
fiaddl
jmp
cmpb
lods
pop
mov
inc
mov
scas
xchg
out
xchg
out
dec
outsb
xchg
in
imul
scas
out
xlat
stos
in
pop
insl
ss
out
pop
jge
int3
mov
add
stc
mov
mov
mov
gs
and
push
inc
and
shll
into
shrl
lahf
pusha
mov
xorl
jle
fdivp
popa
into
cli
fcoml
dec
push
test
inc
mov
hlt
imul
cld
icebp
rol
rcr
ss
jge
jae
pop
or
mov
push
add
pop
jns
xor
and
jmp
pushf
sbb
push
sub
js
jl
repnz
cmp
stos
dec
mov
sar
push
xchg
pushl
fs
les
nop
dec
cld
and
adc
dec
cltd
imul
and
cmp
sub
mov
push
pop
lods
sub
ficoms
fldenv
insb
push
mov
aaa
cmp
cmpsl
cld
in
clc
notl
mov
mov
pop
inc
adc
mov
push
cltd
inc
pop
xchg
and
cmp
sbbb
mov
add
jp
sar
or
cmc
loopne
jo
jnp
filds
shll
std
fadds
push
cmp
lret
sub
fisttpl
leave
popa
ljmp
lods
jns
dec
jbe
cmp
push
pop
pop
aam
cmp
enter
addr16
sbbb
orb
orl
and
inc
xchg
pop
mov
and
push
mov
ja
and
mov
iret
lea
cmp
push
out
push
lods
outsl
jno
add
es
cmp
lea
je
dec
ret
sbb
jl
xchg
jle
cmp
xor
push
cmpsl
sub
out
push
push
std
ja
jb
fdivs
mov
inc
js
xchg
xor
xor
sbb
scas
mov
jmp
ret
jbe
jge
rorl
rcll
rorl
sbb
lods
xchg
push
ret
movsl
mov
shrl
mov
jl
ljmp
sbbb
jns
push
js
scas
leave
sahf
mov
stc
ss
pop
adc
shr
loop
ja
fnstsw
js
sbb
in
sti
inc
ret
shrb
or
andb
xchg
lea
add
pop
pop
cmp
add
mov
inc
lret
cld
jmp
in
mov
in
idiv
out
in
dec
loop
xchg
fsubr
push
push
cmp
xor
sub
sbb
mov
add
cwtl
xor
dec
or
inc
jmp
sbb
inc
not
lcall
or
ljmp
pop
imul
pop
or
push
and
cmp
sub
jbe
add
and
roll
scas
sub
flds
fwait
xor
loope
leave
adc
pop
pop
lods
outsb
js
fidivrs
psubq
dec
sub
movsb
jg
test
mov
sub
cmp
jle
aad
cmpsb
mov
stos
mov
adc
cwtl
test
pop
lcall
stos
adc
call
or
adc
pop
js
mov
loop
mov
xor
insl
mov
push
imul
movsb
lock
cli
add
fdivrs
mov
inc
sub
adc
inc
call
fsubrl
lock
add
jns
jb
sub
cli
out
cmp
mov
jmp
mov
enter
clc
pop
dec
repz
outsb
xchg
rclb
dec
pop
mov
sub
inc
jae
fdivrs
or
cmp
nop
jmp
sbb
sti
loope
mov
insl
pop
dec
and
xchg
push
lods
xchg
into
xor
xchg
xor
lret
xor
test
inc
dec
lahf
mov
addr16
movsb
mov
xchg
jle
test
loop
aam
mov
cmp
in
repz
and
fstl
sub
mov
imul
xchg
jmp
xchg
cmp
aam
daa
mov
lock
test
mov
jecxz
sbb
popf
aam
mov
push
and
push
int
es
pop
gs
test
sub
push
mov
adc
xor
sub
jge
xor
sbb
cmp
ss
dec
lock
xor
negl
sbb
sbb
push
imulb
jmp
jle
xor
pop
pop
add
and
out
pop
test
lcall
bound
out
mov
inc
in
stos
aad
shll
inc
decb
int
sub
push
imul
xchg
lret
repz
loope
mov
hlt
sub
sbb
in
jns
and
push
test
mov
adc
jns
arpl
lock
cmp
pop
aad
lcall
jno
mov
pop
pop
les
test
inc
js
fsts
push
xchg
xchg
inc
adc
add
jae
jl
push
jge
pusha
pop
cmc
fwait
or
call
in
mov
insl
xor
addl
cmp
xchg
addr16
mov
inc
loopne
ss
jne
aaa
pop
mov
mov
sahf
mov
pop
and
add
or
arpl
mov
dec
xor
lahf
lahf
sbb
pop
ds
xchg
mov
pop
pop
push
negl
data16
mov
adcb
add
mov
mov
fs
in
jecxz
pusha
sbb
sbb
inc
jnp
xchg
in
test
js
fmuls
lahf
cmp
fisttps
in
mov
mov
mov
dec
dec
ret
adc
xor
jb
imull
outsb
adc
or
sarb
push
dec
inc
pushf
lret
mov
pop
sbb
shrb
jle
enter
sub
rcrl
daa
sti
and
cmp
cmp
and
je
test
pop
pop
inc
mov
pusha
mov
xchg
push
sub
mov
or
inc
aaa
mov
and
xor
jp
into
push
sbb
jg
jae
rcrb
sbb
ja
orl
fdivrl
pop
mov
test
pushf
stc
mov
inc
or
dec
repz
push
jecxz
imul
mov
in
addr16
pop
sbb
sbb
push
cmp
mov
sub
test
enter
cmovge
ret
push
dec
jmp
pop
dec
jno
stos
lea
inc
jmp
adc
mov
repnz
sti
dec
int3
push
shll
aas
jl
mov
mov
mov
mov
std
jns
dec
iret
cli
lods
test
inc
cmp
xor
and
movsb
pop
aam
test
xchg
pop
mov
jno
in
xadd
sbb
and
loopne
or
push
fistl
jp
rorl
aam
mov
mov
inc
mov
scas
xchg
dec
pop
cmc
mov
xchg
xchg
sbb
jns
enter
and
mov
sub
out
mov
sub
popa
shll
sbb
inc
out
fnstcw
fiaddl
jbe
rcr
aas
jno
mov
mov
mov
test
les
jne
hlt
inc
ds
jnp
mov
xchg
mov
push
lcall
push
lods
cmpsb
call
test
xlat
jno
nop
test
push
das
jmp
dec
loope
mov
cmpsl
sbb
push
push
pop
lea
push
push
mov
adc
pop
push
jne
sub
pop
ret
jo
add
inc
ja
lcall
mov
jnp
dec
push
jo
daa
sub
xor
ljmp
xor
adc
out
lret
cmp
mov
jmp
adc
lcall
cltd
sub
popf
std
inc
sub
pop
mov
test
adc
mov
cli
xor
sahf
fcompl
cltd
pop
add
cld
sbb
jecxz
mov
clc
rolb
mov
ja
jae
aas
xor
jecxz
lds
mov
repnz
inc
push
pop
mov
mov
xchg
pushf
bound
add
or
add
imul
nop
mov
add
sub
xchg
mov
add
imul
jb
push
sbb
pop
pop
xchg
sbb
push
mov
mov
jb
data16
cmp
loope
xor
or
cmpsb
or
mov
in
insb
dec
cld
hlt
sub
lahf
jle
sar
clc
adc
cs
in
imul
mov
scas
jb
adc
or
out
dec
pop
int
mov
or
out
jmp
fists
mov
sbb
adc
wbinvd
add
cmpb
js
push
mov
and
stos
test
dec
cmp
adc
fildl
sahf
or
mov
or
xchg
mov
scas
mov
ljmp
and
and
xor
loop
add
jl
mov
lret
jb
push
ja
test
shlb
fmul
push
add
adc
iret
jbe
clc
imul
leave
mov
push
cmpsl
inc
cmpsb
cmp
pop
pop
repz
sub
sarl
imul
clc
add
dec
movsl
adc
enter
inc
jnp
jmp
rorl
call
push
push
fwait
adc
push
xchg
cmc
or
cmp
xor
inc
adc
mov
and
icebp
test
call
xlat
int3
rorl
mov
xorl
push
jmp
cld
cmp
sub
orl
xlat
jne
fcompl
mov
test
and
stc
sub
push
cmp
lods
xor
mov
outsb
in
lret
push
test
pop
mov
sbb
ret
movb
loop
xlat
mov
adc
pop
ficoms
hlt
mov
push
daa
jle
pop
dec
mov
jge
popf
scas
cmpsb
push
ficoml
sbb
in
es
cwtl
pop
insb
adc
mov
cwtl
insl
clc
xor
jns
xor
or
call
leave
mov
shrl
pop
jmp
cli
sbb
mov
icebp
lods
loopne
in
xchg
jns
dec
movsb
out
add
arpl
lods
lock
mov
pop
cmp
mov
insb
add
push
mov
mov
xor
orl
jmp
fbstp
inc
ss
js
in
clc
dec
mov
faddl
cmp
and
dec
jge
xchg
repz
mov
mov
xchg
add
insb
inc
jne
push
cmp
dec
cltd
daa
or
push
dec
inc
mov
push
clc
popa
pop
push
in
call
mov
push
lea
arpl
das
int
push
lahf
mov
scas
in
int3
pushf
xlat
movsb
mov
mov
dec
mov
bound
xchg
out
test
sub
fstpl
jmp
jne
fiadds
and
xor
mov
andb
insb
ret
or
cmp
fld1
fdivr
pushf
flds
cmp
popl
sbb
pop
aaa
fisubl
shlb
dec
cltd
movsb
mov
xlat
lret
dec
jb
stc
stos
into
dec
or
push
in
xchg
inc
xor
jle
push
lea
push
xchg
aad
cmp
pop
xor
pushf
in
les
adc
or
sub
lcall
or
push
pop
add
imul
xor
sbb
ds
lcall
fstpl
lea
roll
dec
iret
sub
xchg
cmp
fscale
loop
out
xor
fcomp
shlb
shlb
sbbb
add
pushf
pop
popf
dec
dec
test
bound
addr16
cmp
cwtl
mov
mov
cmpsl
sahf
add
mov
int
xor
mov
cmpsl
fisttpll
int3
mov
mov
cmp
lock
adc
pop
mov
je
inc
fcomps
aas
cmp
rclb
shrl
push
pop
xlat
cmc
sti
mov
int
xchg
xchg
adc
inc
ret
mov
pushf
push
mov
add
mov
xlat
je
dec
ror
jnp
push
aas
mov
cltd
out
repz
jp
mov
cmc
lds
loope
sub
mov
sub
call
push
insb
xlat
pop
or
sbb
daa
lcall
movsl
push
jnp
je
push
push
out
hlt
and
xor
pop
and
imul
mov
push
movsl
jg
push
in
popf
mov
bound
pop
mov
fwait
add
in
insl
test
daa
out
jecxz
loop
push
test
jns
cltd
inc
call
dec
cmp
out
popf
jecxz
addr16
es
mov
sub
imul
cmp
andb
mov
xor
sbb
cmpsb
xchg
lock
jbe
leave
mov
jge
fimuls
xor
divl
add
jecxz
sub
jle
jo
adc
cmp
je
ja
fisttpl
add
cmp
imul
dec
daa
mov
incb
xor
lahf
xchg
rcr
aaa
leave
mov
mov
repz
push
mov
mov
in
cltd
sahf
int3
push
mov
in
js
push
pop
enter
adc
repz
pop
sub
and
sbbb
test
or
jmp
gs
push
test
es
lret
call
dec
xor
insb
cmp
icebp
movsb
lds
push
adc
dec
iret
inc
dec
insb
mov
insl
sub
add
fdivrl
xchg
das
mov
test
mov
sahf
std
cs
std
insl
fisubs
cmpsl
and
lock
ror
dec
cmp
sbbb
pop
push
add
push
call
push
mov
jb
mov
xchg
loope
sarb
push
xorl
xchg
ja
adc
sub
xchg
mov
cs
ja
loopne
daa
lea
int3
ret
mov
mov
frstor
mov
out
lods
jl
ret
sub
test
repnz
or
icebp
jg
imul
dec
in
ss
aas
lcall
mov
cmp
xchg
mov
les
mov
mov
or
adc
mov
sbb
scas
mov
mov
fstp
pop
out
cmp
mov
xchg
out
push
sbbb
adcl
std
mov
xchg
iret
js
sbb
sbb
cmp
aad
inc
inc
pop
sbb
sbb
insb
inc
gs
cmp
xlat
cmp
mov
jmp
ficoml
sub
pop
sbb
pusha
aas
call
aaa
mov
push
test
enter
pop
in
lahf
push
mov
in
pop
pmulhw
rcr
mov
lcall
adc
pop
pusha
test
adc
jmp
push
frstor
sub
repz
hlt
stos
movsb
pop
push
ret
outsl
inc
mov
inc
dec
iret
jno
testb
fcoml
shl
cli
add
xchg
mov
push
pushf
xlat
sub
jmp
and
in
mov
push
repnz
or
cwtl
loope
add
mov
mov
jg
push
sub
ljmp
add
test
mov
lret
add
decb
loopne
shlb
arpl
sbb
push
sbb
xchg
aaa
mov
mov
scas
add
mov
cmp
adc
jle
stos
push
stos
popf
mov
stc
stc
inc
xchg
jge
adc
dec
iret
and
imull
icebp
xor
addr16
ds
lahf
repnz
cmc
movsb
cmc
enter
incb
in
es
jl
int3
sbb
mov
and
and
sahf
adc
sub
adc
andb
int3
inc
icebp
xchg
out
pop
shlb
lea
mov
mov
xchg
push
dec
addr16
sarb
adc
adc
and
pop
jl
or
or
pusha
mov
imul
mov
xchg
fcoml
cmp
jg
insb
unpcklps
cwtl
jecxz
movsl
sbbb
pop
pop
or
xor
mov
ja
push
scas
orl
dec
out
pop
rcrl
lock
js
xor
cmp
dec
cli
lea
outsb
cmp
std
jo
jnp
mov
push
shrb
inc
mov
ljmp
jmp
pop
in
ja
fisubrl
loopne
int
ds
mov
inc
or
loopne
xlat
stos
popa
fwait
int3
pop
inc
xor
mov
shr
insl
cmp
pop
incb
fdivrs
in
or
push
pop
dec
addr16
clc
or
addr16
icebp
andl
outsb
in
pushf
mov
mov
cmp
xchg
cld
imul
mov
aas
mov
cld
xchg
test
enter
ret
jge
push
dec
mov
cltd
mov
pop
sti
fisubl
lret
xor
jle
mov
sub
mov
sbb
ret
lret
push
mov
xor
gs
sbb
fadds
mov
data16
fstl
sub
jo
xchg
imul
dec
xchg
cmp
mov
lods
push
mov
out
outsb
enter
push
rcrb
sbb
leave
pop
fiaddl
cltd
mov
and
push
and
fisubrs
pop
jp
lock
push
movsb
leave
adc
inc
les
movl
inc
rcll
xchg
rorb
inc
cmovae
cld
xor
addr16
pop
fldt
fcoml
xchg
dec
pop
sar
jl
xor
pop
dec
or
push
adc
fsub
inc
cmp
mov
aad
and
dec
dec
fiadds
push
xchg
inc
cmp
mov
adc
mov
mov
dec
sbb
or
xor
inc
out
adc
or
sbbb
fs
adcl
into
out
aam
std
cmpsb
mov
sub
clc
inc
inc
inc
inc
cmp
jge
push
rolb
and
push
xchg
mov
imul
in
pop
smsw
adc
pop
test
pop
cmp
ja
out
push
clc
push
or
les
daa
xchg
movsb
cmp
nop
add
lahf
adc
stos
or
in
pop
mov
mov
lret
cmp
call
ljmp
scas
add
xchg
cmp
push
push
add
adc
pop
push
jbe
lods
mov
and
lds
int
sbb
leave
mov
inc
jmp
inc
clc
push
mov
mov
daa
dec
push
mov
sarb
sbb
mov
mov
xchg
lcall
sbb
jmp
push
and
loope
cmp
xor
arpl
xchg
lock
or
testl
cmp
shlb
in
cmp
in
cmp
push
mov
dec
inc
test
pop
imul
dec
sub
std
xchg
ss
int3
enter
add
in
inc
cmpsb
hlt
push
cltd
dec
shlb
xchg
add
scas
push
mov
sbb
hlt
inc
pop
add
xchg
movsb
mov
daa
mov
cmp
xor
push
sub
movsb
outsl
inc
xor
add
sbbl
sbb
repz
jnp
inc
or
lcall
cli
jns
cmp
popf
ret
scas
nop
sbb
push
in
adc
adc
testb
stos
jo
jo
in
push
push
clc
rcrb
push
dec
lds
mov
lds
fdecstp
pop
or
loope
push
cs
jno
shr
push
outsl
pop
ja
xchg
and
inc
pop
ljmp
push
lods
lret
add
ret
pop
mov
fwait
xor
adc
incb
pop
mov
mov
and
sbb
xor
in
add
pop
mov
sub
mov
pop
jo
mov
sub
lcall
jae
mov
call
aas
mov
jno
push
enter
jge
push
insb
daa
push
cs
movsl
pop
mov
shrl
mov
addr16
outsl
mov
xor
jnp
ret
sbb
xchg
outsl
mov
jg
inc
shl
push
push
push
push
add
cmp
fidivl
nop
js
mov
pushf
nop
mov
in
insb
dec
lcall
fnstcw
ss
leave
pop
cs
push
pop
imul
repz
or
sub
rorb
jecxz
cmc
mov
pusha
imul
mov
push
sub
inc
jle
aaa
xchg
mov
inc
mov
mov
setp
enter
jg
std
jg
push
dec
outsl
and
mov
fwait
xchg
adc
mov
es
nop
fbstp
add
sub
mov
int3
dec
adcb
dec
push
movsb
cmp
add
sub
adc
lahf
mov
lcall
bound
add
jp
arpl
xor
sbb
rolb
mov
push
adc
mov
mov
cli
fildll
imul
mov
fprem
xchg
pop
or
in
mov
mov
test
cltd
mov
sub
jb
xchg
cmp
mov
sahf
lods
iret
mull
ds
negl
loopne
repz
addr16
cmp
adc
insl
cmp
add
xchg
lret
fwait
negb
and
dec
cmp
mov
xlat
cmp
mov
adc
stos
or
push
imul
enter
ror
iret
cmp
pop
adc
cmpsb
aad
sbb
mov
mov
jns
dec
leave
shrb
lock
cmp
pop
xchg
jo
arpl
xchg
pop
into
scas
es
rolb
jo
mov
add
sbb
out
mov
mov
inc
jo
add
cli
pop
inc
pop
popa
ss
mov
push
lock
movsb
adc
sahf
fildll
ret
fisubl
xchg
adc
mov
dec
xchg
push
xorb
jne
inc
push
std
loope
and
lods
fcompl
inc
in
stos
mov
int3
fsts
adc
mov
or
insl
xchg
popa
out
cmp
mov
outsb
repz
or
xchg
mov
xor
stos
xchg
dec
xor
fnsave
pushf
pop
cmp
fwait
iret
mov
add
mov
add
out
adc
addl
cmc
mov
insb
and
cmp
mov
icebp
bound
cmpxchg
fnclex
insl
lret
dec
std
xchg
inc
push
adc
cmc
jmp
mov
imul
aaa
xchg
add
adc
lods
les
mov
fsubr
cmpsl
cmp
ret
mov
sbb
pop
or
aad
sar
psrld
insb
and
iret
ds
adcl
and
mov
push
inc
cmp
mov
repnz
rcl
and
mov
lret
push
das
pop
adc
push
jnp
fisttpll
pop
mov
sbb
stos
mov
out
andb
rcrb
inc
mov
and
sbb
or
pushf
aas
mov
ljmp
and
mov
out
jne
inc
cmp
mov
cmpsb
pop
xor
in
pusha
xchg
xchg
add
lods
xchg
stos
sub
cli
mov
es
jae
cmp
scas
pop
jae
jl
push
insl
test
hlt
outsl
scas
in
jmp
xor
xchg
movsb
mov
or
or
andb
out
icebp
mov
sub
fcoms
xchg
inc
and
and
shll
jbe
sbb
dec
push
les
fcomi
cmp
cmpsb
push
push
jl
sub
mov
adc
inc
adc
inc
in
and
push
shrb
cmc
lret
idiv
jg
je
jl
pop
cmp
int3
mov
fiadds
xchg
mov
cmp
lods
dec
push
mov
sub
pop
pushf
xor
xor
mov
xchg
pop
int
mov
cmp
xor
pop
pop
popf
clc
popf
mov
inc
into
aas
lret
or
in
fadds
das
test
sbb
iret
push
jl
mov
leave
dec
pusha
jl
scas
fs
sub
mov
inc
cld
xor
std
aaa
das
loope
jge
or
xlat
das
or
jo
das
test
pop
stos
pop
adc
cltd
pop
xor
orl
icebp
adc
scas
mov
leave
jno
dec
xchg
pop
or
xor
inc
in
js
clc
icebp
hlt
pop
add
out
data16
adc
push
out
inc
jmp
adcl
scas
mov
xchg
arpl
daa
or
test
sti
into
psraw
sub
out
cwtl
decl
mov
jmp
out
adc
mov
adc
cmp
filds
imul
sub
incb
push
cmp
test
xchg
or
sti
rcrb
test
xchg
adc
lods
sub
or
das
push
loop
or
jns
stos
jns
bound
push
fdivs
lahf
sbb
and
lcall
out
pop
adc
dec
cmpsb
or
push
movsl
cs
lret
out
outsl
mov
out
f2xm1
push
sub
iret
dec
add
mov
or
outsl
jg
cmpsb
pop
mov
inc
add
jmp
sarl
addr16
push
xrelease
sbb
aam
cld
enter
cmp
mov
fs
dec
xchg
testl
cmp
xorb
dec
stos
insl
xor
int3
xchg
lahf
jae
enter
sahf
movsl
cmpsl
pop
icebp
and
jecxz
dec
pop
adc
mov
push
rclb
dec
jnp
mov
sbb
or
jmp
nop
jl
push
adc
stc
adc
jmp
int3
inc
outsl
xlat
xchg
sub
adc
cmpsl
cmpsb
scas
gs
lods
add
inc
out
clc
sbbl
jmp
cli
xchg
ret
int3
pop
sbb
mov
lcall
jne
mov
inc
decb
insb
dec
push
fsts
pop
add
push
mov
mov
or
fmul
das
jge
cli
sbb
cmp
pop
in
jmp
xchg
cmp
jp
out
cmp
jmp
jl
inc
mov
and
dec
mov
rorl
lds
scas
adcb
sahf
lahf
mov
add
xchg
xchg
push
fdivs
push
xor
por
xchg
outsb
loope
jno
jae
sahf
loop
in
jmp
mov
ret
sbb
aad
cld
cmp
ds
loopne
cmpsl
push
mov
imul
adc
pop
shll
imul
cwtl
pop
pop
adc
and
movsl
out
rcl
xor
mov
int
or
mov
sub
mov
dec
mov
xor
jnp
test
arpl
rcr
mov
ljmp
fiaddl
push
daa
cmp
xor
xor
sub
dec
jo
pop
lea
jnp
mov
pop
jns
push
mov
divb
test
and
sbbl
leave
jecxz
pop
mov
bound
push
in
dec
push
push
stc
pop
or
mov
cmp
pop
push
mov
sbb
out
loope
rorb
out
push
xor
sbb
mov
repnz
jae
mov
stc
fisubl
enter
imul
call
insb
int
cld
ja
jmp
mov
jno
cmp
hlt
mov
rclb
cltd
and
stc
mov
loope
sbb
or
adc
out
mov
xor
daa
mov
insb
nop
mov
loopne
mov
rcrl
lret
lret
mov
push
push
xchg
aam
into
mov
adc
ret
je
shrb
andb
or
rorl
test
push
ret
pop
inc
push
mov
push
inc
lahf
push
in
pop
adcb
es
rcrl
int3
cmpsl
cmpb
mov
sbbb
adc
je
pop
add
lar
fcoml
dec
fdivrl
aas
das
inc
push
rcll
sbb
shrb
rolb
mov
push
inc
lret
inc
fcompl
add
test
in
or
das
mov
shlb
mov
lcall
pop
in
testl
mov
iret
cmpl
adc
xchg
add
sub
packuswb
aam
lahf
fmulp
sub
or
je
sub
mov
gs
mov
loope
xchg
repz
lahf
dec
das
sbb
loope
shlb
fsts
jnp
inc
test
cwtl
cmp
mov
cmp
cmp
push
iret
pop
cmc
mov
cmp
fsubrs
pushf
lret
xor
xchg
js
cmp
mov
lret
sub
stos
xchg
sbb
negl
aam
repz
jl
inc
lret
push
in
inc
into
mov
pop
adc
xchg
addl
aad
xchg
addr16
icebp
sbb
int3
fists
or
xchg
mov
repz
xor
pop
inc
loop
cmp
xor
adc
fwait
test
int3
sbb
inc
mov
sarb
pop
es
mov
shll
cwtl
addb
es
popa
adc
fwait
das
pop
lret
pusha
fwait
inc
imul
das
or
daa
mov
mov
cmp
add
mov
and
adc
icebp
gs
lret
mov
xchg
inc
jle
shr
fsubs
int
jns
sub
bound
cmc
leave
mov
cwtl
das
cld
in
fs
scas
sbb
cmpl
cwtl
mov
cli
out
pop
and
jns
adc
fs
pop
mov
imul
leave
popf
pop
dec
pushl
add
popf
or
mov
test
dec
push
je
push
inc
fadds
adc
mov
sbb
lds
mov
pop
cmpsb
pop
xchg
mov
inc
mul
lods
div
mov
sahf
adc
daa
out
xchg
mov
clc
pushf
xor
mov
lret
sbb
inc
pop
in
xchg
xchg
xor
or
jl
pop
dec
js
aaa
fisubrl
imul
sub
push
in
pusha
and
cmp
cld
jnp
pop
jns
mov
add
mov
fwait
mov
mov
cs
rol
sbb
add
mov
mov
mov
mov
sub
cwtl
jo
or
or
pop
and
xchg
iret
aas
pop
das
jmp
xchg
lret
xchg
fadd
cmp
mov
and
leave
adc
cld
sahf
sbb
int3
dec
jns
sbb
cmp
jmp
lahf
push
test
add
sub
sbb
in
sub
jge
mov
xor
fwait
aad
daa
gs
dec
mov
push
fwait
movsl
test
imul
mov
pop
sahf
lahf
outsb
sahf
cmp
sbb
arpl
stc
xor
jb
rorb
call
das
jno
pop
adc
nop
sub
daa
dec
xchg
or
sub
scas
inc
sbb
pop
mov
pop
jnp
lock
daa
mov
cmp
dec
cld
call
mov
mov
sti
xor
cmc
sti
push
notb
mov
nop
jge
dec
inc
fnstsw
cmc
push
imul
fs
mov
test
cld
stos
sub
in
inc
pusha
sahf
loope
aam
adc
pop
lods
fidivrl
dec
mov
cld
test
std
enter
mov
inc
xor
test
inc
inc
test
jns
jb
sub
rcl
arpl
jp
add
imul
mov
push
paddw
adc
cwtl
cmpsb
mov
jecxz
stc
insl
lock
call
rclb
ss
lret
mov
dec
inc
pop
mov
cs
dec
xchg
fists
xchg
ret
jg
str
mov
cli
mov
hlt
stc
test
sbb
push
or
dec
aad
cli
jmp
mov
ret
out
icebp
jne
loopne
push
iret
test
outsl
fdivrp
push
and
inc
movsb
insb
lea
jmp
adc
in
cmp
adc
notb
lcall
dec
int3
testl
out
insl
shl
xchg
inc
js
dec
mov
mov
mov
jb
or
lahf
jno
add
pusha
and
push
jp
mov
push
lea
push
fisubrl
inc
ret
inc
gs
cmp
jecxz
ja
dec
mov
inc
out
aad
jge
cmp
incl
xor
xchg
or
ljmp
fidivl
mov
mov
jmp
xchg
mov
xor
pop
jns
test
push
push
pop
and
inc
aad
lcall
mov
loop
fs
outsl
push
rcrl
popl
mov
pop
lods
insl
push
xor
xchg
jbe
add
or
sti
xor
pop
xlat
cld
icebp
jmp
pushf
or
in
daa
jo
inc
cld
mov
push
cwtl
sbb
daa
or
out
movsl
jae
xor
add
sbb
or
ret
std
add
and
mov
out
mov
gs
sub
aad
movl
mov
add
mov
mov
jmp
add
movsb
out
mov
stc
xor
xlat
mov
mov
pushw
inc
mov
adc
sbb
ret
mov
cmp
cmp
adc
test
dec
adc
in
lds
shlb
movsb
mov
jo
shl
xor
inc
mov
es
loop
cmpsl
imul
popa
jmp
ds
dec
cmp
adc
cmp
lahf
pop
shll
loop
dec
sti
testb
repnz
ja
ljmp
pushw
mov
inc
popf
xchg
jb
push
push
cmp
push
push
lds
lcall
jbe
rcrb
xchg
mov
push
call
xchg
push
lock
mov
add
dec
inc
sub
jo
add
sub
push
sbb
ds
mov
in
pushl
repnz
push
std
push
arpl
pop
jmp
clc
dec
inc
sub
in
sub
xor
pop
add
xor
sbb
and
adc
push
testl
jb
test
jp
and
pop
dec
stos
pusha
sub
pop
aad
pop
push
xchg
stos
jg
jo
add
inc
lret
push
jge
out
jge
sar
imul
dec
mulb
ss
pop
ss
lock
ljmp
icebp
lods
fcomps
mov
or
mov
in
mov
and
adc
fistpl
mov
daa
test
add
aad
pop
insl
ljmp
xchg
push
mov
daa
std
mov
popf
adc
inc
mov
scas
push
aad
and
cltd
ljmp
dec
int
mov
enter
mov
add
dec
jmp
cmp
xor
cld
out
mov
mov
adc
les
out
iret
inc
dec
mov
aaa
addr16
cli
push
jge
pop
mov
sbb
repz
movsb
cmp
and
std
add
sbb
adc
aaa
ret
ljmp
cmp
xchg
loopne
xchg
cmp
inc
dec
dec
fwait
es
jl
test
xor
jae
push
int
lea
dec
sbb
mov
mov
in
mov
out
xor
dec
add
decb
insb
aas
xor
iret
sbb
std
push
xchg
lds
add
mov
sub
xchg
sub
fldcw
ljmp
cltd
dec
pop
pop
iret
dec
jbe
jp
fst
jb
imul
jg
ret
adc
std
out
xchg
cli
push
push
jge
ja
inc
jp
cmp
ljmp
sub
cmp
orl
jl
jge
jg
push
cmpl
stos
xchg
jae
sti
jbe
aas
pop
push
andb
jbe
jp
cmpsl
test
ds
jp
divl
push
jp
ret
sbb
in
test
cwtl
mov
cmpsb
cmp
pop
xor
addr16
outsl
gs
les
aas
rcl
and
jmp
add
add
lods
fwait
fwait
jne
lcall
push
jne
repnz
rcll
out
inc
les
cmpsl
adc
std
icebp
and
cmpb
push
lods
jo
insl
ret
sbb
adc
xchg
adc
dec
popa
fistps
test
mov
sbbl
adc
adc
loopne
sub
inc
int3
clc
sbb
ja
lcall
cmc
aaa
out
xchg
nop
and
mov
jne
jbe
and
or
in
enter
mov
jle
push
xor
in
dec
shlb
xor
popf
inc
add
leave
pop
sbb
dec
jl
lods
fisttpll
inc
lea
sub
dec
add
mov
inc
add
cmc
push
xchg
stos
cli
xor
xchg
or
lret
bound
push
and
cmpsl
inc
pop
clc
ror
xchg
or
and
and
sbb
and
ds
pusha
inc
aad
and
and
sub
push
and
inc
xor
dec
aas
ret
sub
nop
lods
mov
sbb
gs
jle
je
repnz
or
std
pop
fistpl
dec
push
or
shrl
xchg
fsubrs
jp
in
jae
xchg
xor
push
pop
mov
jg
push
dec
negl
jle
insl
push
popf
outsl
push
sbb
xchg
xorl
sahf
cmp
clc
std
je
push
mov
and
cmpsl
mov
sub
jecxz
outsl
cmpsl
test
mov
add
add
lahf
popw
pop
pop
push
push
ss
or
cmc
sbb
or
js
stc
les
outsl
cmp
dec
mov
enter
push
jmp
pushf
xchg
jns
xor
in
xchg
icebp
jg
stos
xchg
inc
adc
mov
pusha
jp
test
mov
nop
fwait
sub
push
insl
pop
push
outsl
xor
es
repnz
xchg
pusha
mov
iret
das
loopne
movsl
dec
sbb
xor
stc
dec
xor
in
mov
fwait
mov
mov
jge
push
add
in
fldl
fs
call
mov
add
mov
xor
xchg
fnstenv
cmpsl
cmc
push
sub
dec
scas
mov
mov
ljmp
and
testb
stc
test
gs
clc
fisttpl
mov
dec
fs
stc
fiaddl
dec
mov
mov
or
push
xchg
aad
push
xchg
jge
jle
fsubrl
sbb
out
jns
jmp
and
fmul
xchg
nop
dec
jle
icebp
mov
adc
adc
orl
test
mov
loopne
dec
hlt
sbb
arpl
iret
xchg
enter
sub
cltd
push
outsl
xor
pop
sub
lods
xchg
mov
pop
jle
data16
fidivl
push
insb
sub
aam
adc
fsts
sub
xor
imul
loopne
sub
dec
out
mov
pop
lock
add
jecxz
cmp
mov
outsb
andnps
and
je
add
jmp
add
xchg
filds
xor
sub
stos
cmpsl
pop
mov
movsl
sbb
lock
pop
push
ret
in
fidivrl
in
push
test
mov
pop
jnp
jg
dec
mov
and
cmpsb
pusha
push
adc
adc
dec
or
shll
test
or
pusha
out
movsl
add
add
cwtl
xchg
mov
xor
sbb
int3
js
pop
jns
out
push
fldl
pop
mov
ss
xchg
xlat
adc
outsl
shlb
xchg
mov
jp
es
js
xchg
lahf
aas
stos
int
dec
cmp
add
jl
pushf
sbb
and
xchg
mov
push
push
pop
mov
jns
rorl
stos
dec
pop
cltd
inc
arpl
dec
dec
sub
leave
pop
and
add
add
dec
xor
imul
fldl
jns
iret
xchg
jb
add
and
je
add
insl
test
pop
lods
jmp
clc
movsl
insb
cmp
ret
pop
and
test
cmp
ror
xor
add
mov
or
addl
add
cmp
mov
rcrb
int
sub
stos
dec
push
movsb
jo
jbe
dec
jns
push
jmp
inc
pop
jne
sub
or
or
push
mov
iret
and
inc
pop
in
mov
shll
pop
inc
icebp
insb
mov
push
jo
mov
adc
xchg
dec
push
lds
push
jbe
mov
or
lret
icebp
or
adc
fcoms
aaa
mov
out
and
cwtl
sbb
pop
ljmp
ret
push
loop
pop
into
inc
xchg
add
xor
lods
test
and
and
inc
gs
lods
pop
pop
add
sarl
leave
mov
pop
out
cmpsl
push
cltd
pop
subl
arpl
cwtl
xchg
sbb
lods
fdivr
mov
jb
jecxz
sub
rolb
and
xchg
mov
mov
add
cs
nopl
sub
cmp
and
pop
mov
xchg
add
adc
or
add
and
pop
stos
jb
sbb
and
movsl
iret
sbb
sub
sub
jno
out
mov
xor
inc
test
mov
fs
fsubrs
push
in
xchg
out
jle
xchg
enter
int3
rclb
sub
dec
lds
adcb
mov
and
pop
inc
push
or
pop
sub
sti
lret
imull
mov
push
jecxz
addl
fstpt
adc
test
or
and
inc
inc
mov
dec
in
ss
clc
xchg
loopne
mov
ret
jl
shlb
imul
stos
clc
jle
or
pop
into
fdivl
jnp
test
aam
or
mov
inc
xor
mull
dec
sbb
and
cmp
mov
inc
rol
loopne
cmp
ds
adc
pop
dec
std
mov
loop
or
out
ljmp
lret
mov
in
mov
sub
push
fnsave
push
pop
in
xor
ret
cs
stos
icebp
test
ljmp
mov
dec
push
fcomp
adc
repnz
jns
enter
gs
scas
sahf
sub
and
adc
outsl
and
mov
lret
mov
scas
ljmp
dec
mov
orl
movsb
xchg
dec
mov
mov
sbb
xlat
loope,pt
adc
hlt
xor
cltd
fdivrs
je
or
push
pop
lock
mov
cmpsb
mov
loopne
sbbb
and
test
enter
mov
pop
push
pop
jg
outsl
mov
xchg
push
cmp
add
insl
mov
inc
aad
divb
push
lcall
dec
fsts
nop
les
ret
je
xchg
and
sub
xchg
cmp
jmp
xchg
ror
fmul
pop
aaa
test
or
add
fcmovnb
sbb
lods
mov
mov
xchg
adc
mov
and
and
xchg
lcall
out
and
cmp
inc
cmp
lock
or
push
xchg
test
pop
sub
ret
pop
cmp
xchg
jb
int
push
adc
dec
inc
pop
push
hlt
addr16
outsb
adc
sti
or
xlat
jg
sbb
inc
mov
js
or
and
daa
or
subl
mov
stos
fimuls
jmp
xchg
notb
cwtl
pop
fstpt
inc
mov
push
push
xchg
and
mov
mov
inc
mov
orl
push
inc
cmp
shll
or
int3
fsubl
sub
xchg
and
lock
stc
mov
in
or
xor
xchg
jnp
fs
mov
movsl
jecxz
rcrl
cmp
test
jno
mov
test
mov
jecxz
ss
aad
out
fwait
push
xor
inc
jp
push
arpl
and
loope
js
mov
pop
in
test
inc
fcmovne
push
ret
pop
movsl
pop
add
dec
adc
jns
mov
jno
xchg
into
dec
sbb
mov
mov
mov
pusha
idivl
cmc
fisttpll
mov
sbb
jmp
jg
pop
rorl
lods
xorb
inc
mov
lods
cmp
push
inc
in
mov
popa
sub
ljmp
mov
popa
sbb
scas
lcall
inc
and
mov
dec
repz
es
mov
rcll
imul
pop
mov
stos
aas
and
fwait
adc
dec
mov
fwait
xor
mov
or
lds
jns
xor
shll
cmp
rcr
ret
pushf
and
lcall
test
aas
inc
scas
dec
cltd
xchg
out
xchg
and
pop
or
ret
mov
and
movsb
aas
push
ficoml
sub
lcall
stc
jp
xchg
inc
add
pop
add
shl
jno
pop
jnp
or
into
sbb
jg
fistpll
mov
enter
push
and
or
repz
pushf
push
rorb
repz
push
or
lcall
cmp
call
push
push
iret
cmp
ret
les
sbb
lock
loop
in
or
out
pop
sti
je
push
jae
les
push
lds
xor
and
dec
or
notl
jb
adc
sbb
mov
js
add
dec
shrb
movsl
lds
mov
jecxz
lock
ret
pop
cmpsl
popf
adc
test
sub
ljmp
imul
pop
aad
sbb
and
inc
xchg
outsl
pop
or
xchg
push
std
xchg
dec
hlt
mov
les
push
andl
sarl
loope
mov
fwait
int
cmp
sub
ret
inc
cmp
mov
lods
inc
and
popa
xchg
sub
in
adc
mov
and
mov
pushf
push
sahf
and
clc
in
dec
or
and
fwait
int3
scas
xchg
stos
dec
mov
cmp
cmpsb
xchg
sbb
int3
or
imul
mov
nop
popf
fadd
adcl
pop
dec
out
scas
xchg
movsb
rorl
dec
into
and
mov
xchg
mov
stc
enter
sbb
mov
jl
mov
push
cmp
das
stc
lods
mov
in
mov
aas
inc
or
repnz
jo
cs
mov
jbe
xor
stos
jp
jo
xchg
add
rsm
mov
xorl
sti
cwtl
addr16
jl
push
sbbb
jno
pop
push
push
xlat
ljmp
call
jg
push
xor
scas
notb
or
into
pop
cmp
sub
adc
daa
inc
or
data16
pusha
movsb
inc
push
xor
push
test
jp
lret
cwtl
mov
push
or
je
push
add
pusha
cmpsl
cwtl
push
push
xchg
mov
inc
cmc
pop
jp
lea
mov
outsl
add
fs
in
jecxz
stos
cs
icebp
lds
ss
cmp
cmp
mov
jnp
pop
add
cmp
dec
nop
loopne
sbb
add
jae
mov
negb
push
xchg
outsl
inc
cmp
out
push
imul
insb
mov
fisttps
lock
mov
xchg
sub
lahf
es
pushf
jle
ret
std
dec
xchg
lret
sbb
mov
enter
addl
std
fwait
popa
cmpsb
popf
mov
fnstenv
call
pop
push
es
sub
aam
mov
js
dec
repz
addr16
movsl
sbb
in
xchg
mov
stc
inc
mov
movsb
outsl
outsl
sbb
pushl
jbe
cmc
xor
jecxz
push
jecxz
std
loop
js
fnsave
cwtl
call
cmp
icebp
cli
xor
lods
lret
out
pushl
in
shll
js
nop
jbe
loopne
cmpsb
and
pop
arpl
inc
jl
gs
orb
adc
jecxz
cltd
cwtl
sub
cmc
inc
xchg
push
and
mov
fs
fsubrs
movsb
pushf
cmpsb
test
mov
cmp
jne
and
pusha
pop
sub
stos
js
mov
rcll
test
jge
pop
out
call
inc
out
das
sub
mov
mov
pop
cmc
sub
mov
xchg
jne
dec
add
or
cmp
xlat
dec
mov
cmp
paddsb
xchg
cs
or
pop
mov
jmp
cld
arpl
xor
es
out
add
and
adc
mov
mov
stos
cmpsb
adc
mov
or
cs
push
mov
out
in
lods
xchg
inc
mov
xor
mov
pop
fcmovu
mov
mov
out
jecxz
inc
arpl
loopne
jge
and
mov
cmpsb
test
nop
mov
adc
or
movb
fcmovb
push
ja
and
add
popf
int3
stos
jns
push
sarl
je
sti
jp
inc
xchg
and
cmpsl
xchg
insb
pop
mov
pop
mov
addr16
sahf
dec
stos
and
xor
loopne
mov
int3
mov
xchg
addr16
lods
adc
les
movsl
mov
adc
das
scas
in
incl
int3
iret
punpcklbw
inc
add
jns
adc
loop
fiaddl
jge
je
push
inc
add
ja
mov
or
mov
stc
jmp
xlat
mov
das
lods
add
insl
sub
int3
mov
mov
in
inc
ret
fildl
add
pop
or
imul
and
inc
sbb
cwtl
adc
iret
fildl
dec
cli
cmpsl
dec
mov
fs
lods
fisttpl
in
add
je
inc
fildl
rol
data16
jg
ret
test
add
ss
xchg
call
int3
stc
jmp
setp
xchg
repz
lock
bound
fmull
mov
lret
fwait
mov
adc
mov
imul
ljmp
add
cmp
mov
mov
xlat
in
inc
repnz
xchg
scas
in
shlb
xchg
out
add
cmp
push
hlt
mov
inc
imul
sbbb
addr16
or
int3
sbb
fstpt
jg
pop
xchg
jo
jle
xor
aad
loopne
mov
les
mov
pusha
mov
xchg
std
sbb
ljmp
shll
jo
sbbl
cmp
or
repz
mov
or
cli
lock
cmp
pushf
sbb
cltd
ja
scas
or
push
dec
cmc
sbb
std
inc
xchg
mov
dec
pop
dec
push
js
stos
sub
dec
lds
sub
pop
inc
adc
stc
dec
fdivl
lcall
minps
mov
xchg
stos
mov
cwtl
lea
xor
loopne
pop
mov
pop
lods
jg
bound
or
xor
shlb
xorl
and
mulb
jo
mov
push
mov
push
sbbb
jns
cwtl
xchg
fimull
mov
lret
call
je
std
ds
rcrb
inc
jecxz
bound
xor
inc
in
das
sub
pusha
addr16
repz
lods
mov
push
xor
pop
dec
dec
push
sbbl
das
dec
xchg
or
popa
rcll
add
push
cmp
push
mov
out
js
loope
outsl
or
mov
lock
aaa
jno
gs
push
idivl
daa
pop
popa
fwait
xchg
pop
data16
mov
dec
pop
lcall
push
popf
fimuls
mov
push
mov
jb
lods
dec
dec
mov
in
cmp
jp
and
xorl
mov
add
sbb
jl
sbb
aaa
jnp
jbe
ret
push
fdiv
sub
dec
dec
divl
mov
pop
iret
sbb
xchg
test
cld
mov
xchg
add
jmp
jae
jne
pop
pop
and
push
xchg
lret
push
xor
stos
xor
mov
scas
mov
lds
daa
leave
and
shlb
insl
cld
rcll
push
insl
in
mov
adc
aad
mov
dec
les
nop
push
sub
or
sbb
fcmovnu
inc
fsubl
shll
push
sub
cs
inc
movb
adcb
sub
and
push
cmpsl
ds
mov
sbb
fs
nop
pusha
subb
out
or
mov
adc
cmp
pop
jae
shrb
daa
in
add
add
pop
mov
ret
pushf
sahf
cltd
sbb
sbb
subb
lret
lahf
jnp
adc
pop
stc
mov
lea
adc
insl
es
push
pop
shll
mov
or
test
mov
or
rclb
in
push
mov
out
lock
addl
and
lahf
add
lods
and
jae
or
push
lods
aaa
push
fmuls
mov
cwtl
andl
jnp
rcr
nop
or
sbb
jmp
rcll
inc
cltd
and
push
test
add
xchg
push
dec
jp
jo
insl
pushf
jge
cs
mov
inc
dec
dec
cwtl
lea
ficomps
out
fistps
push
rorl
push
dec
pop
lock
imul
sbb
sarb
jo
lods
in
lds
xorl
mov
stc
fisubrl
fdivs
cmp
jae
out
test
cmpsl
push
cli
rcl
lock
cmpsl
pop
or
in
test
sub
mov
insl
sbb
call
lret
movsl
je
les
add
imul
loopne
mov
push
mov
fldenv
inc
loope
je
fsubrl
fisubl
ljmp
sub
les
sahf
add
or
xlat
lcall
in
sbb
ljmp
fcmove
mov
lahf
aad
cmp
sub
mov
and
imul
xor
mov
pop
xchg
and
jge
xchg
movsb
mov
call
xchg
dec
pop
adc
mov
add
adc
rcll
cmpsl
addr16
push
les
and
and
dec
mov
push
enter
out
and
in
inc
mov
xchg
repnz
call
fidivrl
dec
adc
out
dec
mov
ds
popa
out
push
in
xchg
or
adc
out
shlb
and
pop
imull
pushf
push
scas
rcrb
pop
mov
out
hlt
mov
mov
fucomip
jno
orb
in
dec
imul
or
fdivrl
dec
gs
cld
push
jbe
push
outsl
xor
stos
in
jge
in
fisttps
push
pop
lea
repnz
fldl
repnz
pusha
jmp
lock
sub
aam
jg,pt
iret
shlb
sbb
iret
pop
pop
mov
push
test
and
testb
and
pop
cwtl
es
ss
repnz
pop
jae
mov
cltd
xorb
mov
mov
addb
or
push
dec
mov
xor
sub
pop
hlt
add
adc
ds
xchg
loop
sub
push
pusha
fptan
cmp
mov
out
test
jle
lret
test
inc
out
lahf
into
sbb
repnz
outsb
cmpsb
out
push
mov
adc
sub
imul
adc
mov
cltd
adc
mov
inc
or
mov
dec
push
repz
fcomps
mov
push
mov
push
xchg
inc
cwtl
mov
inc
testb
sub
xor
popf
fimuls
clc
push
pop
fsubl
ja
and
outsl
daa
fmulp
fldl
lcall
jg
mov
mov
rcl
test
imul
or
mov
pusha
popf
jp
lds
and
jl
mov
fistpl
stos
nop
xor
aad
push
mov
xchg
push
fcomps
cmp
test
shlb
adc
sbb
push
ret
loope
inc
aad
pop
cmc
int3
inc
and
push
stos
addr16
ds
ss
xchg
hlt
cmp
dec
xor
mov
sub
pop
sbb
xchg
adc
out
push
mov
mov
inc
fcompl
and
aad
add
dec
sbb
fwait
pop
xor
ss
and
xor
out
pop
scas
xor
push
pop
mov
mov
adc
sbb
popf
into
pop
int3
mul
out
lock
sti
fcomps
sahf
or
sub
jecxz
cltd
into
stos
dec
std
push
mov
dec
iret
out
lret
dec
pop
or
mov
decb
pop
lahf
xchg
xchg
adc
sbb
pop
cwtl
std
mov
xchg
dec
out
xchg
pop
js
outsb
stos
popf
xorl
clc
stos
decb
aas
cmp
sbb
sbb
clc
sarb
loopne
mov
jecxz
mov
adc
test
out
push
call
cmpsl
sbb
fistpl
xlat
sbb
mov
out
hlt
inc
das
mov
dec
outsl
repnz
test
jmp
xchg
enter
xlat
lret
fsubr
mov
scas
xor
in
pop
xchg
xchg
movsl
lods
and
inc
or
cltd
insb
push
xor
push
pushf
and
sub
adc
adc
lret
nop
jl
dec
scas
popf
cmpsb
lcall
loop
mov
mov
sbb
ja
or
outsl
insl
ficomps
stos
call
mov
cmp
int
leave
sub
movsl
and
call
inc
dec
mov
adc
mov
das
loop
cmp
hlt
in
sub
lret
int
test
movsb
out
pusha
es
jg
fsubs
dec
inc
inc
xchg
out
clc
mov
xor
cmpsb
fsubs
xor
jno
adc
scas
int3
sbb
rcr
add
lea
rorb
sti
xchg
adc
and
cmp
xor
xchg
fsts
cmpsb
or
insl
mov
dec
mov
orb
push
dec
push
test
jecxz
es
push
push
mov
mov
xor
sbb
mov
adc
cmp
jge
cmp
lods
mov
push
add
cmp
sub
popa
loopne
adc
sahf
and
lcall
cmpsl
xor
cmp
pop
scas
mov
or
lcall
cmc
push
xor
outsb
fistps
divl
mov
sahf
jmp
add
repnz
mov
xchg
adc
push
mov
ret
cs
icebp
icebp
mov
cmc
adc
jo
mov
jbe
lds
in
mov
adc
popf
out
stos
push
adc
movsb
sti
jl
scas
dec
push
cmpsl
sub
add
scas
lods
dec
and
scas
adc
test
outsb
pop
mov
popf
ds
dec
inc
xchg
pop
add
cli
test
mov
xlat
adc
xor
aam
and
mov
mov
cwtl
push
jle
or
in
es
push
out
jns
les
ss
das
add
add
cmpsb
xchg
jg
xchg
push
mov
mov
je
mov
js
sti
adc
pop
push
dec
adc
sub
loopne
pop
push
int
test
mov
add
bound
jbe
inc
cmpsb
jne
popa
scas
push
movsl
insb
xchg
cmpsl
or
mov
ja
or
inc
inc
test
adc
mov
jns
push
sbb
push
jb
push
mov
push
lahf
inc
loopne
or
mov
xlat
std
and
dec
dec
lret
lret
sbb
fsts
arpl
mov
aam
movsb
push
gs
inc
push
jle
pop
push
jge
xor
jge
mov
dec
mov
push
lret
cmp
sbb
inc
dec
mov
jmp
and
stos
sbb
push
leave
fisttpl
push
cmc
and
adc
lret
lea
xor
xchg
and
rol
adc
imul
adc
mov
clc
dec
pop
imul
out
push
push
mov
icebp
xchg
push
push
xor
shrl
push
push
mov
dec
pop
adc
lock
dec
or
rcrl
movsl
iret
negl
adc
mov
dec
xor
orb
mov
pop
stos
inc
jb
aad
cmp
jno
xor
lds
dec
cmp
jo
mov
imul
push
or
shrb
addr16
orb
jns
push
push
inc
cmpb
mov
mov
outsl
ret
mov
fwait
mov
lret
lret
xor
stc
sub
mov
les
movsl
shll
sub
test
cmp
or
sbb
xor
mov
fldenv
adc
data16
mov
xchg
pop
imul
mov
sbb
inc
push
jp
jno
pushf
cwtl
int
pop
jg
sub
mov
sbb
fucomp
inc
sarl
mov
out
xchg
pop
add
jbe
aad
xchg
out
nop
pop
loop
lret
pop
push
mov
stos
push
lods
or
imul
in
push
es
mov
mov
les
cmc
decl
lret
inc
popa
inc
insb
push
fmul
sbb
lret
leave
xchg
iret
ds
repnz
push
xchg
clc
popl
fs
ret
sti
xlat
test
mov
xchg
fistpll
mov
flds
fistps
loopne
jae
pop
sub
cli
xor
mov
mov
lret
xchg
rorb
inc
push
sub
xor
clc
sbb
stc
mov
sub
orl
leave
andb
ret
push
mov
pushf
push
sbb
loopne
movsb
xor
add
sub
pushf
out
pushl
adc
push
pop
lds
xlat
mov
push
out
in
mov
rorb
inc
cmpsb
js
push
dec
cwtl
adc
xchg
into
or
mov
stos
mov
sbb
ja
xchg
arpl
xchg
incb
mov
jmp
push
adc
xchg
jl
mov
inc
pop
xchg
adc
xlat
add
decl
jb
jae
cmc
int3
hlt
sub
xor
inc
test
sti
lret
xor
add
nop
xor
mov
adc
sub
aam
popf
push
js
adc
aas
bound
roll
mov
rol
lea
xchg
insl
iret
lock
push
mov
add
sub
xchg
xchg
cwtl
es
xchg
mov
or
mov
mov
std
inc
jl
rcrb
lcall
add
xlat
add
cmp
jl
push
push
sti
in
jl
jge
dec
mov
sahf
cmc
pushf
inc
add
aaa
jle
and
pop
fldcw
mov
loope
adc
add
hlt
nop
pop
push
std
mov
leave
cmc
jmp
sbb
ret
adc
xchg
cli
jne
loop
repz
xchg
js
inc
dec
das
mov
push
inc
xchg
sub
mov
outsb
ror
jb
or
cli
sub
js
pusha
cmp
scas
loope
je
fildll
cmc
mov
xchg
rcrb
push
mov
adc
gs
and
xchg
pop
mov
cmc
dec
in
icebp
sub
push
xor
xorb
mov
rcll
mov
push
cmp
int
mov
xor
scas
xor
in
in
xchg
jge
fistpl
mov
popa
mov
mov
lods
cmp
or
js
fcomp
pop
push
push
aas
iret
pop
sub
mov
pop
mov
fwait
hlt
push
test
rcrb
inc
add
and
int
test
mov
add
jl
adc
xchg
mov
in
mov
dec
cmpb
and
das
out
lret
popf
mov
pusha
clc
adc
insb
adc
jge
push
add
mov
push
in
mov
jp
dec
sbb
dec
stc
imul
adc
sbb
pop
mov
fadds
cmp
ljmp
cmp
and
push
and
mov
fidivrl
dec
ret
repz
outsl
xchg
faddl
and
repnz
mov
pop
push
jb
cld
lret
aas
stos
cmp
push
lods
push
xlat
dec
push
subb
int3
xor
mov
inc
loop
ret
inc
scas
add
or
fstl
sbb
jns
js
or
ror
ljmp
pop
je
aas
push
dec
std
fstps
push
fdivrl
xchg
mov
pop
lcall
movsl
sbb
mov
lock
ds
adc
xchg
sahf
sarb
xor
popf
mov
ljmp
imul
test
das
rcll
pop
xchg
and
fdivr
leave
sbb
pop
dec
in
hlt
pop
dec
cmp
test
in
pop
aas
fiaddl
pop
test
xchg
dec
cmpsb
loope
pop
sub
aam
pop
add
adc
cmp
jl
jne
xchg
subps
xchg
les
cmp
pop
insl
and
add
stc
cltd
mov
mov
inc
jns
dec
inc
jns
jo
pop
dec
fsubr
out
pop
add
insl
iret
imul
jns
stc
leave
push
scas
xchg
lea
inc
out
mov
mov
lods
xchg
jns
adc
insl
out
aad
jbe
adc
mov
push
jp
inc
dec
jl
leave
jl
xor
jae
test
ret
jp
mov
das
call
sbb
mov
sub
data16
fistl
out
das
fidivrl
test
pop
push
loope
pop
adc
jmp
pop
nop
xor
adc
cmc
loop
aad
jp
adc
cmp
or
outsb
and
pop
fnstenv
cli
dec
pop
imul
xchg
pop
pop
mov
rcrb
cld
pavgw
push
sti
adc
loop
daa
mov
mov
rorl
and
ret
repz
mov
rcll
push
push
inc
xchg
lods
loop
movsl
shlb
or
je
mov
jbe
aad
pop
fmuls
xchg
inc
imul
inc
dec
mov
xlat
xchg
dec
jecxz
and
icebp
sarl
outsl
adc
into
pop
push
test
fsts
and
adc
mov
cmp
mov
fsubl
or
es
icebp
jne
in
mov
sbb
cltd
lock
cmpsb
mov
leave
pop
inc
mov
dec
xor
sbb
in
pop
inc
aad
outsb
xor
add
adc
jg
hlt
dec
push
xchg
xorl
or
mov
jae
mov
inc
mov
shrb
pop
xor
pusha
cld
mov
dec
and
imul
ret
sub
adc
pop
neg
imul
loope
cmp
push
push
sub
sub
mov
inc
lods
inc
add
xchg
jmp
test
jb
sbb
sub
ja
push
mov
sbb
sbb
cli
mov
xor
cld
push
lock
jp
stc
xorb
outsb
jno
int3
repz
mov
or
outsb
dec
jecxz
pmulhuw
aaa
mov
lock
fsubrl
cs
jecxz
sub
xor
pxor
push
dec
mov
jmp
movsb
sub
daa
rolb
test
xor
in
imul
inc
leave
pop
pop
mov
inc
sbb
or
pop
sub
mov
sbb
mov
ret
xor
or
mov
fcoml
out
aaa
or
mov
cmp
push
push
dec
clc
popf
xor
lea
and
sbb
js
int
xchg
loopne
iret
cmpsl
sbb
bound
jae
sbb
fs
das
test
ja
dec
mov
into
pusha
aad
lcall
xchg
shll
or
ret
insb
or
inc
jmp
stc
ja
xchg
outsb
push
jle
dec
cli
sti
bound
dec
push
mov
std
lret
dec
scas
xor
add
xor
cmpsl
out
push
sub
dec
mov
pusha
add
inc
mov
push
fdivrs
aaa
mov
in
ret
sub
mov
out
popf
push
dec
dec
jbe
test
jg
pop
xor
jp
xchg
lret
push
inc
shll
aas
inc
ljmp
shrb
popf
inc
cli
fwait
cwtl
shl
dec
xchg
jo
xlat
sbb
add
add
repnz
dec
sub
enter
addb
fdivr
fcomps
cs
dec
out
aad
lret
cmpsb
daa
insb
sbb
repnz
push
js
pop
test
pop
lods
push
mov
notl
sbb
shll
mov
arpl
mov
adc
movsb
inc
cltd
xchg
inc
sub
push
xor
cmpsl
cmc
movq
lock
in
mov
sub
lock
sbb
aas
rol
imul
in
cmp
cld
cmp
outsl
arpl
insb
int3
pop
out
incl
scas
roll
imul
ja
pop
cmp
or
jmp
adc
in
push
aam
push
lret
outsl
jg
aam
call
aaa
call
jo
ret
ficompl
pop
int3
and
pop
sub
data16
mov
aam
flds
xor
cli
sti
jmp
jnp
xchg
jae
ds
stc
xor
push
hlt
jb
mov
cmp
les
movb
and
out
push
aam
lcall
and
dec
insb
dec
or
or
jl
and
mov
dec
mov
xchg
cmp
fldt
lods
cmp
arpl
mov
add
mov
test
jp
cmpsb
aas
sbb
sarl
dec
ret
adc
nop
test
push
je
mov
stos
imulb
pop
insl
inc
push
loop
imul
and
sub
cmp
xchg
xor
xchg
popa
cmp
dec
dec
ret
jle
nop
loopne
push
add
fisttpll
ds
test
cmp
into
hlt
or
popa
flds
test
add
fimuls
xchg
push
pop
mov
pop
bound
fmuls
pop
mov
stos
nop
dec
addr16
and
cmp
jp
cmp
fbld
fsubp
cmpsl
fnstcw
jg
lock
mov
adc
movsl
adc
cmc
xorl
lahf
in
stos
inc
mov
stos
imul
sub
ja
bound
bound
ret
pop
das
int
scas
cmp
ss
outsb
std
rclb
je
test
xchg
mov
sub
testb
mov
orl
imul
add
icebp
int
jp
and
fcmovb
xchg
mov
call
push
jnp
push
aam
outsb
sub
push
bound
xlat
negb
mov
push
in
lds
icebp
push
adc
pop
jns
repz
lcall
cmpsl
shlb
pop
data16
test
inc
enter
inc
push
test
xchg
mov
leave
push
lret
pop
cmpsl
inc
xchg
mov
xchg
daa
push
or
ss
mov
and
cmpsb
scas
js
sub
aad
rolb
add
int3
or
jg
add
stc
mov
jmp
gs
sub
clc
jnp
fildl
cli
pop
aas
ljmp
push
push
cmpsb
test
rol
push
mov
sub
dec
insl
xchg
mov
lds
mov
push
adc
or
les
sub
scas
mov
ljmp
push
mov
jae
adc
call
push
jl
fnstsw
js
inc
pop
jp
cmc
xor
addr16
stos
mov
int
arpl
test
jne
push
std
addr16
outsl
cmp
push
outsb
pop
out
dec
push
or
jno
rcl
jns
into
fcmovne
cmp
jmp
mov
fcomip
jl
into
jmp
nop
sub
in
ret
loope
sub
xor
jmp
mov
push
ret
fsub
xchg
test
mov
push
ss
pushf
enter
adc
push
pop
pop
jns
loopne
xorl
sbb
add
loope
push
cmp
lret
fisttpll
sbb
lock
dec
imul
cmp
repnz
negb
inc
fwait
dec
pop
sbb
outsb
jg
lods
sub
xchg
jno
jecxz
loop
cmp
inc
jmp
xchg
sbb
hlt
scas
add
mov
je
ret
add
add
add
add
add
es
cmpsb
push
jle
sub
leave
cmpsl
and
shl
shlb
pop
sub
xchg
add
and
rolb
idiv
leave
es
addr16
dec
cmp
gs
mov
add
lods
dec
pop
lret
or
sub
cwtl
in
out
ss
xor
adc
das
xchg
cmpsl
cmp
dec
les
or
or
ret
mov
xor
and
and
and
xor
or
or
imul
cltd
mov
mov
test
mov
mov
lods
div
outsb
fdivl
push
cmp
jnp
movsb
pop
imul
cli
arpl
mov
js
popf
iret
cmp
or
add
mov
aas
sub
stos
in
movsl
rcll
push
iret
in
xorl
popf
cwtl
or
push
cmp
std
pop
js
icebp
mov
aaa
icebp
add
sub
jno
cmp
dec
cltd
gs
pushf
shlb
pop
aad
sahf
mov
andl
out
jl
call
pop
insl
testb
mov
xchg
push
sub
xorb
aas
sbb
dec
les
enter
jp
aad
mov
pop
jns
and
aaa
jle
push
xchg
movsb
mov
int3
mov
push
mov
and
xor
out
mov
outsl
loopne
dec
movsb
push
ret
sub
cmp
mov
ffree
or
arpl
out
les
xchg
push
mov
cmp
test
lods
and
mov
cmp
in
adc
mov
insb
or
jmp
scas
jp
dec
dec
outsb
ficoms
dec
hlt
test
rol
cltd
mov
inc
faddl
insl
jo
rol
jecxz
movsb
lods
push
in
addr16
mov
jo
ret
fs
mov
inc
ret
inc
addr16
pop
mov
mov
mov
adc
mov
xchg
scas
into
or
rorl
or
movsb
inc
clc
out
fsincos
mov
stc
notb
or
push
xchg
sub
fisubrs
xchg
cld
mov
leave
sub
pop
scas
mov
pop
nop
push
mov
bound
popa
leave
sub
cwtl
les
ss
xchg
push
sub
movsl
adc
mov
int3
sub
mov
add
shll
push
pop
lods
xchg
outsb
and
pushf
jle
repz
and
subl
push
lcall
arpl
aaa
pusha
fldt
divb
xor
jmp
jno
pop
test
push
pop
jb
outsl
test
adc
xchg
insb
cmc
jno
dec
daa
lcall
stc
lret
ds
sub
xchg
push
mov
mov
or
mov
jo
in
lds
movsl
mov
mov
inc
das
lret
jge
repnz
mov
gs
sahf
inc
push
mov
in
cld
insl
mov
rolb
adc
cmp
and
loope
dec
fimuls
test
pop
pop
add
ficompl
jns
pop
mov
xchg
nopl
cmpsb
add
lahf
mov
sbb
cmp
or
addb
lret
push
repnz
and
add
mov
cmpsl
imul
mov
dec
pushf
mov
out
cmp
sub
clc
xor
inc
or
mov
or
jns
or
lret
ds
mov
pop
lret
jo
and
and
jno
mov
mov
xchg
orb
aaa
cld
ret
cli
dec
les
adc
rorl
fnsave
inc
test
lcall
rcrb
xlat
xchg
xchg
dec
stc
pop
aaa
jno
mov
inc
or
push
mov
xchg
dec
or
cmpsb
xchg
sbb
daa
cmpsl
mov
push
stos
add
jo
or
lret
sahf
inc
sti
push
scas
mov
sti
bswap
aam
movsb
loope
ds
sbb
test
out
mov
xor
jnp
sub
sbb
cmp
out
outsb
imul
add
notl
loope
imul
xor
xchg
sti
adc
enter
cwtl
sbb
orb
stos
shll
inc
push
cmpsb
daa
shl
lret
loope
scas
jl
xor
pop
xchg
mov
push
cmpsb
xor
or
inc
out
popa
dec
pop
sub
cmp
jbe
mov
mov
push
xchg
std
push
or
mov
cmpsl
imul
ss
out
xchg
imul
pop
push
mov
and
xor
xchg
xchg
inc
rcl
jb
sbb
jle
sbbb
cmp
arpl
shrl
fidivl
dec
js
addr16
ljmp
loope
xor
shll
jl
test
jb
add
andl
pop
mov
mov
nop
lds
or
mov
mov
loop
icebp
aam
cmp
js
stos
arpl
aas
jge
test
xor
js
cmp
sahf
cmc
jnp
insb
shr
add
push
or
test
or
sbb
jge
pop
cli
inc
int3
dec
loopne
or
jns
lea
sbb
stos
dec
jo
push
lods
mov
xor
sbb
idivl
sub
cmpsb
fstps
out
in
or
or
scas
loopne
adc
xorb
or
adc
les
sbb
inc
daa
inc
test
jo
dec
dec
pop
addr16
shrl
xor
mov
das
mov
jnp
adc
mov
aam
and
daa
incl
sub
mov
out
out
cwtl
mov
mov
mov
mov
or
inc
cmpsl
mov
andb
mov
cmpsl
popa
test
push
mov
aam
stos
pop
cmc
pop
jmp
scas
xor
cli
addr16
ljmp
rol
jne
mov
mov
sbb
jno
jle
sub
in
pop
pop
lcall
inc
sbb
jne
in
movsb
or
xchg
leave
sbb
or
fmuls
push
loope
xchg
in
sub
mov
ds
enter
pop
stos
clc
fidivl
iret
leave
cld
cld
cld
inc
cmp
jo
mov
iret
dec
aaa
popa
cmp
inc
addr16
fisttpll
mov
cmp
mov
scas
loope
lcall
jl
in
lea
or
mov
std
test
fmul
dec
mov
ja
jns
or
push
popa
mov
stos
std
stos
aaa
adc
push
adc
pop
push
movb
ljmp
jne
arpl
xchg
addb
dec
lea
pop
push
mov
sbbb
push
mov
and
lock
jg
je,pn
sub
jg
shlb
aam
lret
and
lea
sub
push
jp
aam
push
push
add
incl
fiadds
mov
dec
pushf
dec
jb
ljmp
inc
push
cmp
push
scas
cmpb
fcoml
cmp
repz
adc
adc
jno
arpl
ret
mov
pusha
cmp
add
inc
lret
fcomp
bound
xchg
dec
adc
das
cmpsb
int
pop
push
xchg
pop
imul
movl
xchg
popa
popa
sub
xor
pop
out
jnp
icebp
push
xlat
add
adc
sub
pusha
cwtl
dec
repz
jns
cmc
insl
sub
ja
cmp
and
scas
mov
and
jns
mov
pop
mov
imul
fcompl
mov
pop
adc
in
out
xchg
mov
push
lds
xor
add
jp
std
mov
jne
and
inc
test
lods
push
rep
into
mov
lret
mov
inc
lret
add
mov
sub
mov
mov
mov
cmpsb
aaa
lods
sbb
cmpsb
dec
fimull
inc
addr16
pandn
fs
cmp
les
cmp
mov
jp
xchg
jae
lds
xor
push
sti
orl
vzeroall
sub
mov
shll
es
mov
jmp
pushf
shll
xchg
mov
fs
lcall
push
rolb
sub
xchg
push
int3
cmp
cs
lret
pushf
scas
mov
imul
push
pop
mov
xchg
add
cld
dec
pushf
push
sub
jle
enter
pushf
jp
mov
ret
cmp
in
stos
push
and
add
cmp
cmp
or
mov
mov
addr16
add
inc
xchg
es
gs
lds
shll
iret
xor
addr16
xchg
dec
loope
in
gs
outsl
movsl
mov
leave
ja
lds
sub
pop
jo
push
andl
ss
stos
lret
leave
push
xchg
sysret
hlt
mov
jecxz
clc
mov
jmp
je
push
xchg
test
cmpsl
mov
and
xor
push
and
mov
or
pusha
outsb
lods
dec
and
cld
clc
push
xor
unpcklps
xor
xchg
out
mov
sbb
sbb
addr16
clc
cltd
jno
mov
dec
scas
mov
mov
mov
dec
jnp
pop
xchg
xchg
mov
call
psrld
jbe
sub
fadds
add
xor
into
ds
xor
mov
cmp
push
xchg
int3
out
ficompl
outsb
mov
pop
and
dec
rcll
jg
pop
mov
mov
jg
cmpsl
test
cmp
gs
xlat
aas
pop
leave
add
cmp
das
jmp
mov
sub
mov
clc
mov
loope
mov
daa
inc
es
sbb
stos
add
mov
mov
aas
mov
je
xchg
shl
dec
and
cmp
fnstenv
ss
adc
sub
mov
mov
push
mov
enter
or
xchg
cmp
pop
daa
inc
pusha
js
or
mov
lock
in
shl
cmpsb
and
cmpsb
or
cmp
sub
jecxz
imul
pop
int
xchg
adcl
xchg
jo
adcl
ljmp
sub
adc
mov
dec
inc
cmp
push
aaa
in
jmp
imul
scas
mov
push
dec
jo
insl
cmp
sti
pop
dec
sahf
adc
arpl
xor
std
into
cld
fimuls
sbb
jg
cmp
mov
cld
inc
push
out
out
loopne
es
inc
stos
cld
pop
cmp
xlat
and
jl
test
sub
mov
outsl
loop
inc
pop
adc
loope
mov
dec
movsb
sub
in
dec
inc
aas
jge
test
movsb
out
stc
or
adc
gs
add
pop
dec
lret
in
pop
enter
mov
mov
popf
mov
int
sbb
xor
pop
jo
push
js
inc
sbb
test
mov
rcl
jecxz
je
sbb
in
sub
incl
push
add
loope
or
sub
jg
mov
sarl
mov
hlt
mov
pop
xchg
dec
lods
or
cld
cmp
jl
mov
icebp
adc
jnp
pop
stc
stos
cmp
cmp
icebp
add
sti
dec
mov
iret
pop
xor
add
lods
jge
sbb
repz
mov
jns
xor
push
ljmp
jge
sub
bound
mov
sti
popf
adc
pop
test
push
cwtl
enter
insl
and
push
fmuls
cmp
mov
jge
in
mov
mov
cmp
fadds
aas
fs
sbb
jg
clc
jmp
ret
scas
adc
movsb
in
lods
mov
and
dec
jmp
pop
push
inc
mov
sbb
mov
cmp
loop
and
xchg
add
cmp
add
test
ja
mov
pop
cmp
lret
and
or
pusha
cmp
mov
jnp
sub
and
xor
push
dec
mov
idivl
int
mov
fistps
or
ljmp
popf
inc
mov
dec
inc
mov
add
add
cmp
in
in
push
xchg
cmp
stos
testb
std
jbe
sbb
cli
mov
inc
add
mov
hlt
int3
into
push
adc
xchg
je
aad
pop
test
adc
push
scas
fwait
mov
push
outsb
push
pop
lret
push
adc
ds
inc
jns
aam
mov
popa
sbb
cmpsl
mov
addr16
add
popl
pop
lahf
adc
jno
jbe
scas
pop
push
fcomp
popa
jns
cld
in
cmp
xchg
mov
pop
adcl
insl
mov
dec
and
cmp
loop
xchg
pushf
sbb
test
or
sub
jl
adc
add
jp
inc
clc
stos
adc
popf
mov
xchg
or
pusha
iret
in
movsb
add
clc
inc
xor
iret
inc
out
jbe
and
fs
subl
outsb
xor
out
imulb
out
insl
movsb
push
out
add
rcr
pop
in
cmpsl
mov
fstps
lcall
xor
cmp
dec
mov
jmp
aas
pop
ret
mov
mov
xor
add
ficomps
cmp
push
jns,pn
lods
in
dec
nopl
inc
mov
mov
inc
stos
mov
push
cmp
fcoms
push
into
es
rorl
mov
outsb
iret
fisttpll
sbb
jmp
sbb
popa
imull
pop
rorb
mov
cmp
data16
sub
jne
lret
mov
aas
mov
mov
repnz
jmp
lea
fucomi
bound
push
jo
iret
add
enter
cmp
xchg
pusha
inc
pop
nop
popf
inc
nop
cld
or
mov
pop
add
iret
movsl
sub
int
into
cwtl
scas
push
sar
pop
cltd
test
sub
pop
rol
fldenv
paddb
adc
sbb
push
nop
xchg
scas
xor
in
mov
push
fistps
xchg
sub
dec
imul
adc
mov
lock
adc
insl
dec
xor
movsl
lahf
inc
inc
xchg
pushl
clc
pop
mov
or
ljmp
pop
subl
xlat
andb
js
pop
fcom
push
or
ds
or
push
pusha
cmp
popa
mov
sbbb
jne
jp
loope
adc
jle
mov
mov
dec
sarl
add
xchg
mov
hlt
mov
out
arpl
mov
shlb
or
mov
xlat
fists
icebp
aas
movsb
mov
push
inc
pop
and
out
inc
in
mov
add
sub
push
repz
push
out
mov
sbb
pop
cmpsb
pop
and
aaa
push
test
ss
and
outsl
and
dec
mov
xor
jg
adc
stos
int
mov
and
mov
xchg
jge
sub
loopne
mov
dec
mov
pop
outsb
dec
out
les
sar
int3
pop
mov
add
inc
int
je
add
mov
fcmovne
scas
and
loop
sbb
pop
and
test
scas
inc
jbe
and
test
mov
and
loop
pop
icebp
sahf
cmp
insl
ss
aaa
clc
addl
xor
push
mov
or
mov
jb
sub
xor
daa
sahf
mov
push
gs
roll
lds
insl
sbb
stos
test
mov
xchg
mov
movl
rolb
insb
jmp
push
xchg
in
add
test
mov
pop
cmpsb
shlb
inc
pop
sbb
mov
orl
daa
dec
jnp
sahf
pop
or
cmc
or
fildll
sub
dec
inc
mov
out
mov
sub
adc
inc
aas
in
clc
lock
or
div
adc
sub
inc
repnz
pusha
lea
cmp
stos
fadd
or
sub
sub
xchg
mov
lds
dec
mov
jns
decl
pop
lock
inc
ljmp
popf
cld
sbb
imull
mov
cwtl
push
mov
sbb
pcmpeqd
or
std
cwtl
adc
ret
xor
ret
dec
addr16
dec
mov
mov
out
stos
xor
or
in
pop
xchg
push
in
pusha
jp
testb
mov
inc
jecxz
das
ss
test
mov
into
in
cmp
bound
outsl
jns
mov
xchg
shlb
mov
cmp
mov
jle
clc
stc
cli
or
add
cmp
ss
or
pop
mov
jb
push
sbb
loopne
xlat
stos
and
sbb
mov
ud1
adc
mov
push
scas
inc
sbb
sbb
mov
cmp
jmp
mov
mov
mov
add
stos
sbb
mov
test
jl
sbb
ret
cmpsl
fisttpll
pop
loopne
ret
and
cwtl
adc
pop
sbb
pop
sbb
pop
test
xor
subb
add
push
add
xor
pop
gs
in
inc
push
add
shlb
and
sub
push
dec
xor
ljmp
notb
cmp
add
xor
jmp
rcl
add
or
aaa
jg
sti
jp
cwtl
push
jmp
pop
sub
popf
movsl
pop
outsb
adc
lea
mov
lret
out
adc
shrb
lret
inc
ret
dec
shlb
sti
shlb
sar
jl
xchg
push
ret
mov
adc
ljmp
push
ljmp
jns
push
sub
shlb
xchg
in
cmp
add
dec
test
mov
sbb
dec
lret
mov
pusha
imul
in
mov
cmp
adc
enter
xchg
sub
stos
out
xor
mov
adc
inc
mov
xchg
int
cs
mov
fsubr
xor
leave
push
mov
jp
dec
pop
daa
push
add
je
les
out
cmp
roll
frstor
pop
inc
inc
adc
add
ret
imul
cmp
rolb
pop
adc
and
xor
sbb
fdivrs
xchg
xchg
divl
jge
and
jno
pop
aas
dec
mov
ret
xor
cmpsb
pop
sub
xchg
pop
sub
out
dec
out
idivb
clc
in
nop
fbld
jl
mov
xchg
mov
mov
xor
cwtl
lds
loop
or
sub
push
das
lock
test
lret
mov
dec
ljmp
outsl
xchg
sub
lds
mov
or
pop
adc
xlat
cltd
into
in
call
idivl
add
dec
pop
fsubl
xchg
js
movsl
or
shr
sti
sbb
pop
loop
mov
aaa
and
jg
adc
insl
mov
sbb
nop
mov
push
stos
jne
mov
rorb
dec
lock
xor
adcl
xchg
or
jl
sub
test
jb
mov
js
pusha
aas
add
inc
or
xchg
int
push
test
mov
std
lret
lea
push
das
cmp
das
mov
fiadds
out
mov
icebp
fisubl
sarl
xor
mov
push
or
or
jg
adc
int3
inc
ljmp
mov
cld
cmp
fldt
ja
mov
jo
jp
mov
jns
add
sub
andb
in
adc
loopne
and
pop
fsts
pop
mov
popf
mov
add
loope
adc
cmp
ja
push
fisubrs
mov
insb
es
and
call
lds
nop
lods
cmp
faddp
nop
insl
xchg
leave
cmpsl
and
imul
sbb
inc
stos
sub
adc
add
or
pop
in
in
dec
movl
xchg
mov
sub
jge
push
fstp
pop
nop
sub
wbinvd
pop
movsb
cld
cli
xor
push
push
mov
cltd
inc
roll
pop
jae
icebp
ret
jns
scas
pop
mov
loopne
test
fildl
lret
sbb
movsb
inc
es
push
repnz
cld
ret
add
push
mov
jle
cs
jp
insl
fstpt
imul
jl
imull
cltd
mov
inc
dec
imul
sbb
stc
scas
sti
mov
pop
pop
les
int3
inc
dec
fnstcw
push
or
ret
inc
fists
lcall
pop
xchg
lods
push
data16
lcall
jg
sbb
ret
ds
pop
decl
inc
loope
mov
and
or
lret
cmp
daa
imulb
ret
and
mov
pop
not
movsb
mov
mov
xchg
pop
sub
push
adc
les
pop
ja
xorl
scas
add
pushf
loopne
pop
push
or
pop
insb
aas
push
insl
mov
jge
stos
cmp
adc
sarb
mov
push
pop
push
adc
sub
int
fmul
enter
or
xor
pop
xor
lods
push
mov
sub
ds
mov
dec
fdivr
mov
fwait
hlt
imul
cmpsb
jl
insb
mov
sbb
sub
cmp
nop
sbb
jg
repnz
mov
sub
loopne
sub
mov
dec
adc
add
xchg
repz
add
inc
scas
xchg
sub
rcll
inc
push
insl
mov
aad
sahf
enter
popf
popa
stos
mov
addb
shll
fucom
jb
je
aas
call
cld
mov
cs
sbb
call
pushf
call
movsl
mov
xor
and
sub
jp
loop
xor
xor
je
mov
cld
mov
fsubs
pop
push
test
es
cmp
pushf
dec
xor
adc
and
jge
pop
pop
pop
int3
loope
pop
repnz
mov
xor
aad
inc
adc
fdivrl
and
adc
or
cmp
shll
mov
mov
dec
xchg
gs
pop
mov
jecxz
hlt
jns
sbb
cld
or
jg
cli
cwtl
ja
xor
call
fcomps
mov
outsl
add
rcrl
xchg
adc
testb
int3
jo
cs
es
mov
jmp
lods
ror
sub
xorb
and
pop
lock
or
jae
imul
dec
mov
xor
subb
lahf
and
jno
inc
out
lods
xor
mov
pushw
add
mov
xor
fs
test
in
int3
test
sbb
mov
outsb
fsubrl
push
xchg
push
mov
es
js
dec
movsb
rcr
out
mov
scas
jecxz
mov
push
rcr
shrb
popf
out
movsl
cwtl
hlt
mov
dec
xchg
inc
mov
push
jle
fwait
pushf
fsubs
mov
and
aaa
inc
dec
cmp
out
je
flds
xor
je
cs
pop
sub
iret
push
mov
mov
movsb
cmp
mov
jg
jg
adc
mov
push
or
and
out
lods
mov
dec
shr
fildll
jl
adc
pop
and
mov
or
push
adc
inc
jns
push
scas
scas
sub
push
cld
adc
fcomps
fcomps
neg
out
insb
pop
fistps
hlt
test
xchg
popa
stc
xchg
daa
mov
lcall
dec
lock
mov
lods
pop
test
test
xor
nop
xor
std
dec
xor
inc
cmc
decl
aad
in
js
jmp
test
xorl
xchg
cmp
mov
sub
loope
adc
xchg
sbb
imulb
popa
insb
in
fsubrs
popa
xor
pop
fsub
pop
insl
inc
or
js
or
jle
rclb
xor
add
sub
insl
aam
jo
les
sub
out
movsl
addl
cmp
mov
mov
in
fisubs
mov
sbb
pop
cmp
push
xchg
jp
jmp
xor
test
add
add
sub
jns
out
ret
mov
cmp
cmp
pop
cmpb
or
in
jl
popa
cmp
imul
fcmovu
jecxz
out
fcoms
gs
adc
mov
je
sbb
and
or
je
in
adc
add
cld
xchg
scas
popa
add
cmc
cli
jbe
test
adc
jp
pop
mov
inc
repnz
outsb
mov
inc
iret
sysret
jo
cmp
pop
loope
mov
mov
lahf
subb
adc
sbb
mov
adc
xchg
pop
outsl
pop
or
popa
mov
imul
lcall
mov
xchg
or
xor
dec
mov
stc
adc
shlb
ret
sub
inc
aas
sbb
test
add
rcrb
sahf
es
psadbw
je
mov
jns
adc
xchg
push
cli
movsl
mov
and
push
cmp
add
std
adc
push
xorb
dec
jg
mov
add
push
clc
jae
dec
adc
add
dec
pop
xchg
out
xchg
flds
ret
rorb
mov
inc
bound
lret
nop
fldl
fidivs
xchg
fstpl
xlat
dec
aam
and
sbb
cmc
test
and
jmp
ret
jmp
cmp
das
imul
pop
sar
in
or
cmp
or
jae
int3
cmp
mov
mov
aam
clc
imul
inc
loop
lret
add
pop
out
xlat
std
push
jae
jbe
int
inc
mov
mov
fwait
arpl
add
adc
add
lcall
mov
or
fimuls
mov
push
pop
xchg
ficoml
xacquire
mov
xchg
shll
mov
rclb
mov
popf
dec
add
cmp
or
mov
cmpsl
negl
stos
lods
and
push
push
cli
sbb
jbe
pushl
jp
stos
fmull
push
adc
push
xlat
xlat
movsb
mov
mov
dec
lahf
cmp
mov
jg
mov
inc
dec
icebp
jb
cli
andl
cli
sub
dec
out
inc
sbb
push
into
ret
mov
pop
pop
dec
fld
mov
cmp
cld
push
movsl
leave
fmull
ret
outsl
pop
pop
roll
or
lods
test
or
push
aaa
and
mov
push
fldl
cmpsl
jge
jae
shl
xchg
push
int3
lcall
xchg
mov
adc
std
pop
xor
es
cli
arpl
repnz
dec
faddl
inc
sub
repz
xor
into
nop
jl
adc
sbb
cmp
or
xor
add
adc
or
int
call
pop
fdivr
je
and
dec
sbb
clc
push
sub
dec
stos
jle
xor
jnp
xor
and
jbe
sbb
dec
push
mov
pop
lods
and
pushf
cmpsl
data16
push
or
or
andl
ficoms
loop
xchg
in
pop
test
shl
mov
sbb
lcall
gs
sti
loopne
jne
cwtl
mov
sub
or
cmpsl
mov
and
loope
cmpsl
loop
ret
inc
pop
and
sub
mov
aaa
call
mov
lock
outsl
and
jp
and
lods
dec
lcall
repnz
shll
add
mov
or
inc
sbb
sub
shlb
sbb
lds
jo
popf
lfs
cmpsb
cmp
into
or
bound
sub
cld
orb
pop
xchg
add
loope
inc
pop
push
or
xchg
fisubs
decl
push
rcl
mov
xchg
inc
fwait
aas
mov
jecxz
mov
lock
lods
push
fldcw
scas
ljmp
std
insl
mov
jge
or
cli
mov
insb
mov
or
lds
sub
fcomi
mov
jns
or
cmpsb
loope
push
test
inc
out
int3
pop
lds
xor
xor
push
stos
add
inc
inc
push
lret
and
cmp
and
aas
in
push
adc
repz
pop
add
pop
sub
push
aam
mov
notb
mov
lock
nop
mov
pop
push
dec
inc
pushf
jns
jle
pop
add
test
sbb
scas
dec
adc
lock
cltd
xchg
pop
sub
jge
xor
lcall
mov
push
test
loope
push
xchg
or
das
and
push
jo
mov
addl
cmc
popa
fs
pop
add
movsb
mov
mov
mov
test
std
sub
test
add
cmc
mov
pop
adc
mov
flds
dec
dec
fstpt
adc
ss
lcall
adc
pop
test
cltd
es
imull
dec
cmp
inc
xchg
adc
gs
adc
insl
adc
mov
sbb
ja
js
or
loopne
out
test
push
repnz
and
jl
pop
rcll
out
sti
iret
in
mov
jmp
lcall
bound
fwait
adc
dec
in
icebp
int
stos
fcomps
aam
bound
insl
xorb
inc
mov
cwtl
loop
jno
in
cmc
call
xlat
ja
xor
sbb
fldt
sbb
rcl
fisubrl
stos
arpl
mov
iret
idiv
jns
pop
test
lcall
nop
sahf
test
mov
cs
jg
icebp
and
sbb
cmp
pusha
add
cld
mov
add
sbb
insb
pop
fs
jle
movsl
lods
mov
ds
lods
loop
mov
jnp
cs
int3
outsl
sbb
xchg
and
adc
cli
lock
cmp
stos
sbb
add
pushf
cld
push
bound
mov
jl
out
mov
pop
sbb
icebp
or
inc
xor
hlt
mov
push
sub
ljmp
lds
loop
insl
or
mov
cltd
mov
cld
orl
xchg
jmp
mov
call
jl
call
mov
lock
sbb
leave
stos
mov
into
adc
es
andl
push
xchg
insb
dec
mov
xor
cmp
loopne
lods
pusha
cwtl
lahf
xchg
test
mov
sub
hlt
push
shll
xlat
jno
mov
inc
int
inc
lds
in
dec
xor
pop
cmpsl
in
xchg
aas
popf
mov
inc
add
lea
xor
mov
mov
mov
in
insb
push
adc
sarb
jle
cmp
orb
add
sub
pop
add
test
pop
shlb
ja
mov
test
int3
out
lds
cmc
push
cmp
cld
xorb
fmull
movsl
jo
pop
pushf
stos
std
xor
lcall
fiadds
mov
sub
mov
pop
shlb
xchg
jbe
stc
push
mov
cmp
xchg
movsl
lahf
cmp
out
sub
std
xor
push
pushl
sub
push
cmc
and
sbb
pop
lods
aas
mull
adc
cmp
dec
sbb
nop
in
popa
mov
inc
loop
xor
pop
xchg
xchg
sbb
inc
mov
jne
inc
cmp
cmc
cld
rclb
cs
hlt
ja
pop
stos
xor
adc
shll
scas
ret
popf
mov
cltd
xor
cs
mov
push
pop
outsl
and
cmc
cs
pop
dec
xchg
adc
pop
and
mov
mov
xorl
cs
push
dec
nop
sbb
pop
push
not
jae
std
mov
fcoms
add
adc
bound
cmp
out
test
mov
jg
aad
mov
cli
stc
adc
cmpsl
jno
ret
sub
and
add
xchg
cmp
sub
sub
dec
pushf
pop
or
fwait
popf
or
add
and
push
pop
imul
mov
add
mov
xchg
or
jle
fsubl
lahf
arpl
mov
mov
sbb
sub
adc
jne
loopne
cltd
sti
stos
test
cmpsb
cmp
jo
jp
ss
aad
shrb
add
jg
mov
aaa
data16
sub
sub
cmp
ds
sub
or
mov
mov
sahf
imul
adc
sub
je
jmp
sbb
xor
mov
xchg
cmp
ret
repz
test
inc
inc
mov
xchg
push
test
jns
jae
sub
loop
sahf
je
cli
xchg
lea
mov
add
mov
mov
inc
std
jmp
scas
push
adc
fs
sbb
imul
mov
in
lods
ficoml
dec
cs
and
and
shlb
addr16
mov
cmp
aam
out
std
shlb
mov
pop
and
jne
rcrb
es
adc
arpl
or
mov
outsb
clc
popw
imul
dec
xor
sbb
pop
xchg
loopne
sub
sub
or
roll
inc
mov
mov
adc
in
clc
bswap
aam
daa
arpl
and
pop
in
in
popl
or
mov
ja
pop
fs
jg
and
mov
les
lret
cli
xor
add
sahf
add
xor
xchg
insl
dec
aas
inc
and
or
mov
cmpsb
sbb
shl
or
sub
loop
inc
inc
ljmp
stc
mov
pop
in
push
push
and
push
movsl
push
dec
sbb
das
sub
add
pop
in
pop
imull
and
push
mov
outsb
inc
push
dec
lods
push
pop
or
sub
pusha
dec
mov
data16
mov
jbe
mov
scas
das
push
outsl
repz
add
data16
dec
scas
clc
inc
int3
out
sahf
add
cltd
jmp
jg
mov
out
adc
cmp
movsb
out
es
loop
outsb
rclb
sub
mov
shll
cmp
jo
icebp
push
clc
lcall
js
xor
in
jmp
sub
lcall
test
test
lcall
frstor
pop
sub
popf
leave
je
pop
jle
aaa
mov
or
xchg
sub
jge
jp
hlt
cmpsb
mov
pop
sbb
add
mov
idivl
shll
xchg
push
scas
ret
mov
scas
cmp
fadd
pop
sbb
mov
push
sub
xchg
lahf
ret
sub
mov
adc
sti
inc
orb
ss
pop
xchg
push
mov
inc
shrb
fsubl
mov
in
hlt
sti
dec
dec
mov
push
mov
jl
mov
mov
jmp
xchg
out
adc
sub
nop
fwait
mov
inc
dec
mov
out
shrb
add
addl
mov
mov
cmp
fnstsw
xchg
xor
je
or
mov
jle
add
pop
imulb
sub
popa
cld
outsl
jl
xchg
test
aaa
aam
adc
push
cmp
aad
hlt
xor
or
pushf
sub
flds
popa
push
add
int
fmul
xlat
lret
shll
sbb
dec
mov
sub
pop
or
aas
push
lret
mov
loopne
movq
dec
dec
jecxz
and
fwait
mov
add
pop
add
sub
mov
pop
jo
adc
jmp
adc
and
rcrb
pop
in
and
int
push
adc
pop
hlt
and
das
pop
adc
call
in
test
mov
out
pop
adc
lea
fidivrs
push
out
jp
mov
mov
scas
mov
aaa
rcrl
jns
scas
std
mov
fbld
add
fcmovbe
outsl
iret
dec
stos
lea
je
popa
mov
stos
scas
mov
mul
or
fstpt
ret
and
dec
frstor
decl
iret
add
jmp
mov
xor
pop
adc
push
push
and
es
or
mov
pop
jo
test
xchg
shl
ss
arpl
aad
popa
test
jno
push
movsl
in
inc
popa
xor
cmpsb
shll
ljmp
aas
lret
cmc
inc
rorl
or
xor
imul
cmpsl
and
mov
or
mov
sbb
cmpsl
rorl
fmulp
xor
jns
out
pushf
or
in
jns
ja
sbb
cmc
inc
fimull
dec
mov
mov
cs
and
xor
aam
or
lock
rorb
cmpsb
scas
or
int3
imul
leave
mov
push
or
xor
hlt
jno
mov
pusha
fldl2t
jmp
push
sbb
imul
in
aad
mov
sub
pop
cld
jg
cmp
cmp
cmp
ljmp
mov
inc
pop
mov
ret
jle
cmp
jle
aaa
dec
out
xchg
inc
loope
jmp
dec
sub
add
cwtl
lds
in
mov
ret
pop
xchg
out
repz
cmp
pop
pop
cmp
jne
pop
scas
stos
sahf
xlat
mov
xchg
mov
push
or
fwait
dec
cmp
out
fnsave
mov
imul
or
enter
inc
aad
sahf
imul
je
mov
jb
push
out
mov
in
mov
in
push
cltd
gs
jmp
cmpsb
into
mov
sub
fwait
sbb
in
mov
insl
loop
and
notb
repz
jle
mov
sbb
in
outsl
pop
mov
and
lret
call
addr16
xchg
sub
or
aad
push
and
loopne
dec
loope
repnz
mov
adcl
rolb
test
cmp
pop
shrb
into
ss
icebp
pushf
add
into
aas
inc
pop
add
fcompl
fidivrl
fsub
jnp
scas
lods
and
leave
push
cmp
push
push
outsb
addl
stos
cld
addr16
mov
insl
popa
nop
addr16
test
stos
adc
lcall
call
out
lret
scas
out
push
stos
shr
fwait
lea
sub
jmp
pushf
ja
dec
adc
movsl
inc
pop
lcall
jle
popf
or
insb
hlt
xchg
test
mov
or
sarl
push
pop
xor
mov
mov
rolb
sub
pop
pop
inc
dec
je
xchg
xchg
jne
pop
test
negb
add
test
cmp
sbb
hlt
std
or
clc
cmp
addr16
xchg
pusha
xor
int3
or
dec
mov
out
mov
insl
lret
sbb
rcll
dec
icebp
inc
aam
inc
ds
jge
pop
ds
arpl
loopne
push
dec
mov
pop
or
scas
mov
and
cmpsl
test
push
imul
mov
sbb
lods
popa
dec
insl
lea
fs
fidivrl
fcmovbe
ficoml
pop
mov
push
push
ss
inc
xor
sub
fdivrl
jg
les
mov
sub
sub
arpl
inc
cmc
push
jne
pop
lods
push
loope
iret
test
pop
adcb
jmp
mov
xor
je
test
imul
fsts
jbe
dec
pushf
jnp
cwtl
push
or
fstp
push
mov
cmp
and
cmp
xchg
divl
jb
stc
mov
sbb
fsts
testl
mov
es
pop
lret
inc
push
adc
cmpsb
mov
dec
loopne
lock
adc
pop
lcall
xor
std
push
lods
cmp
shll
xchg
jp
inc
sbb
pop
inc
jns
movhps
inc
ds
ss
sbb
bound
mov
outsl
mov
add
ret
jo
jno
sahf
pop
mov
ret
dec
mov
inc
fisttps
pusha
pop
pop
jno
lock
inc
xor
popa
pop
xchg
mov
mov
bswap
cmp
out
subl
into
ss
jmp
mov
repnz
popa
mov
pop
pop
push
mov
dec
xchg
sti
jo
and
add
xchg
mov
push
jg
xchg
push
test
sbb
sbb
pop
push
out
movb
sti
mov
sub
out
mov
xor
je
mov
mov
mov
adc
daa
roll
stc
lods
mov
hlt
mov
loope
mov
rclb
or
lret
sub
or
pop
inc
pop
mov
insl
repz
popf
and
lret
pushf
mov
mov
push
in
jecxz
pusha
jae
add
fildl
stos
movsb
stos
jp
pop
sarb
lods
pusha
ljmp
rcrb
adc
xorb
pusha
inc
or
jp
divl
es
add
xor
sub
js
jecxz
pop
iret
pop
loope
icebp
outsl
jns
xchg
clc
xor
clc
repz
rcrl
jb
cld
fucom
lret
push
loopew
cwtl
or
mov
push
and
pop
insl
cmp
add
lock
xor
insl
cmpl
imul
mov
call
call
add
and
nop
dec
push
in
fistpl
pushf
inc
jge
add
dec
push
push
cmp
mov
lods
push
jmp
clc
data16
cmc
adc
cmpsb
gs
mov
enter
jmp
insl
leave
jnp
jns
dec
jmp
pop
lahf
adc
dec
push
cwtl
ficomps
ficompl
adc
lock
stos
jmp
mov
movsl
mov
or
mov
fwait
ret
das
enter
outsl
fdivrl
or
fdivrl
xor
dec
or
xchg
sub
int
pop
mov
push
call
sbb
inc
mov
movsl
jmp
loopne
push
rep
test
mov
adc
icebp
int
and
mov
sbb
adc
test
dec
sub
pop
pusha
les
mov
icebp
mov
pop
dec
aas
dec
out
dec
mov
push
clc
cwtl
bound
adc
loop
aad
test
add
in
adc
mov
frstor
add
rol
pop
in
jae
into
inc
dec
push
add
and
int
jp
aam
cmp
cwtl
sub
rcrb
dec
cmp
and
push
ret
lods
call
jno
xchg
sbb
nop
lds
xchg
xchg
inc
mov
cld
bound
push
int3
bnd
insb
lret
les
mov
xchg
mov
adc
fs
inc
push
lea
cmp
test
sub
push
inc
int3
cmp
mov
sbb
arpl
popf
xorb
pushf
aam
ja
loope
fcompl
dec
orb
frstor
inc
scas
aas
mov
xor
divb
hlt
xchg
outsl
sbb
out
test
test
outsl
or
flds
xor
add
sbb
mov
imul
adc
sub
ret
xor
fs
mov
xchg
push
inc
xorb
mov
xor
mov
mov
push
ja
iret
movsb
mov
scas
lds
dec
lea
jg
movb
mov
mov
scas
mov
js
data16
mov
pop
add
loope
push
lcall
test
and
frstor
repnz
fcom
lock
lcall
xchg
add
fisubrl
mov
js
imul
add
lret
cmp
fsubr
iret
cmp
jecxz,pn
fiaddl
dec
insb
mov
pop
push
dec
punpckhdq
ret
add
jne
mov
fimull
mov
xchg
daa
fwait
xchg
mov
push
nop
rclb
xor
cmpsl
movsb
add
xchg
mov
les
or
pop
int
rclb
enter
fidivs
inc
cmp
dec
in
xlat
ja
jb
jae
imul
lods
jb
out
xor
bound
mov
popf
clts
pop
mov
test
ret
out
insl
hlt
in
mov
cmp
push
sbb
aam
cmp
mov
jns
test
pop
hlt
in
mov
push
add
mov
loop
cltd
jo
movsl
dec
movsb
stos
and
jge
xchg
xor
es
inc
stc
lds
frstor
sbb
cmp
imul
rorb
inc
int3
popf
lds
lahf
rolb
repnz
dec
lret
push
xchg
cmpsb
sbb
bound
cmp
mov
mov
sbb
aaa
jle
repnz
nop
in
inc
xor
jle
push
dec
call
outsl
in
dec
cmp
mov
and
nop
int
iret
stos
xchg
repz
mov
mov
add
mov
pop
sub
jns
inc
lret
loope
pusha
pop
in
into
mov
js
iret
enter
sbb
int3
popa
or
addb
lcall
jle
add
cwtl
push
xor
mov
push
jle
and
sahf
sub
add
in
ret
test
mov
or
andb
inc
lret
inc
outsl
das
xor
mov
jnp
jb
roll
dec
dec
jae
cmp
mov
jle
fidivrs
mov
fsubrs
mov
ficoms
je
push
das
cld
loopne
mov
iret
in
imul
cltd
loop
aaa
xor
arpl
cmp
daa
sbb
jne
loop
push
notl
addr16
xchg
cli
mov
and
or
dec
push
imul
xor
push
mov
sahf
push
shll
fisubs
clc
jno
xchg
push
int
rcll
sbb
arpl
pop
dec
mov
ja
imulb
fstpl
gs
subl
in
lock
xlat
into
cltd
mov
mov
jne
addr16
movsb
rcrl
inc
xor
icebp
or
or
jbe
and
repz
leave
std
inc
cltd
or
cmp
ljmp
aas
iret
arpl
int
inc
mov
les
sub
cltd
cmp
add
sbb
add
negl
arpl
sbb
out
dec
ss
adc
in
sbb
je
jno
enter
int
cli
imul
pushf
mov
lret
push
imul
or
mov
jae
fsubrl
test
cmc
mov
pop
hlt
roll
lret
cmp
icebp
fisttps
jne
lods
fiadds
lret
scas
or
test
gs
leave
shrl
adc
xchg
jae
in
ds
incb
aas
popa
in
jne
xchg
cmpsl
jge
add
or
lock
push
or
sbb
cmp
xchg
test
xor
cli
sub
test
std
mov
push
enter
clc
xchg
jmp
cmp
ret
loop
stos
test
mov
call
mov
fisubrs
push
push
js
mov
test
lahf
das
pop
in
es
adc
into
xor
dec
sbb
fimuls
imul
bound
inc
or
ret
ret
xor
cmpsb
adc
push
stc
jae
out
aas
inc
adc
fstl
je
pop
jge
sub
es
nop
pop
mov
xchg
pop
lock
dec
mov
incb
popf
add
hlt
jmp
outsl
hlt
pop
inc
mov
scas
fstpt
fimull
sbb
popf
jns
cmp
out
insl
cmc
rcl
push
or
add
or
lret
aas
dec
pop
mov
mov
sti
adc
cmpsl
mov
insl
bound
push
popa
int
xchg
xchg
xor
or
nop
jg
cmp
and
inc
rcll
out
movaps
or
das
pop
or
xor
jecxz
mov
fdivrl
bound
push
das
and
nop
sub
lret
sbb
insl
xor
mov
test
dec
into
loope
jbe
enter
fs
push
subb
xchg
lds
out
sub
gs
in
push
sbb
pusha
mov
cmp
sbb
sbb
add
cmpsl
nop
jb
add
adc
notb
test
mov
push
jl
adc
cltd
aad
arpl
bnd
inc
xor
sub
mov
mov
fidivrl
mov
stos
addr16
in
sahf
cld
in
push
pop
les
mov
push
mov
add
or
js
lcall
or
lods
inc
or
es
aas
mov
fdivrp
ljmp
jnp,pt
nop
xchg
decb
int
push
cmp
mov
lea
mov
or
jg
popa
and
js
mov
sbb
out
sarl
cmp
les
movsb
ds
and
cltd
add
sarb
es
cmp
ss
rorb
mov
mov
add
call
mov
cmp
xchg
aas
test
and
hlt
hlt
imul
mov
and
and
push
cld
fisubrs
rorl
vcvtss2si
jb
xchg
subl
jp
sbbb
add
outsl
stos
jns
ror
les
xchg
mov
aad
push
lret
cmpsl
out
inc
pop
sbb
adc
dec
scas
mov
aaa
cwtl
xchg
popa
dec
icebp
pusha
xchg
push
pop
cmp
lods
and
jo
roll
push
pop
sub
pop
aad
mov
adcb
int3
push
mov
xor
push
and
push
push
cmp
rorb
cmp
push
bound
in
dec
lock
pop
sub
xchg
cmpsl
jmp
pop
dec
ljmp
cmp
and
sub
aam
pop
push
pop
and
xor
adc
loopne
test
cmp
in
xor
repnz
ficompl
dec
mov
or
or
pop
push
out
mov
out
lcall
jbe
cmpsl
jmp
loop
push
push
hlt
jmp
push
in
sub
movsl
loope
les
xchg
mov
movl
ss
jns
mov
xchg
sbb
ss
adc
push
cwtl
mov
shlb
or
sbb
push
lods
mov
icebp
aaa
jb
ret
sbbl
scas
inc
or
imul
in
flds
lods
mov
sub
sbbl
fcoms
pushf
dec
mov
data16
xchg
cs
inc
sbbl
out
mov
pop
mov
xor
and
lahf
jl
sbb
inc
jne
dec
xor
add
dec
lea
fildll
int
xchg
mov
cmp
je
and
push
inc
inc
pop
mov
insl
or
cmp
loope
lds
lret
test
jns
sub
je
into
sarb
dec
outsb
mov
add
call
or
fmul
aam
pop
mov
xor
pop
movsb
and
xchg
mov
repnz
push
repz
xchg
add
hlt
adc
ret
or
or
ja
push
fiaddl
sbb
sets
cmp
jge
popf
push
dec
mov
adc
mov
add
ljmp
and
xchg
xchg
aas
ss
mov
xchg
xor
xor
and
lret
sbb
sbb
inc
sbb
call
or
adc
nop
cmp
push
pushl
adc
test
mov
pop
adc
iret
arpl
test
push
fsub
fdivl
xchg
dec
aad
jmp
gs
or
dec
mov
mov
popf
jecxz
sbb
cmp
sub
in
xor
push
sub
dec
pop
xchg
inc
or
pop
jno
lods
push
sub
push
dec
aam
jne
adc
inc
fsubr
mov
imul
adc
std
and
add
div
dec
xchg
loope
hlt
push
ss
mov
lods
xor
in
sahf
mov
inc
sub
adc
push
pop
mov
in
cltd
cmp
jb
jecxz
fs
dec
mov
jbe
repz
and
rcll
mov
cltd
and
xchg
push
cmp
pop
sbb
jbe
sbb
jle
mov
adc
bound
pop
dec
lret
adc
imul
lods
pushf
rolb
pushl
or
mov
add
xchg
mov
decl
inc
jo
cmpsb
and
or
sahf
jb
xor
adc
lock
xchg
loope
inc
or
xchg
ror
adc
mov
inc
aam
sub
clc
div
inc
xchg
setnp
les
lret
xor
xchg
in
lcall
add
jmp
dec
mov
or
clc
lods
test
cmp
cmp
loop
out
mov
out
pop
add
xor
pushf
mov
orl
and
inc
in
xor
push
cmpsb
int3
lret
movsb
inc
xor
jle
pop
cmc
popf
sbb
push
dec
nop
sbbb
shrl
into
icebp
adc
shlb
inc
cmpsl
or
fwait
inc
in
mov
shlb
fistpl
inc
pop
mov
pop
inc
cld
xorl
dec
loopne
sbb
xchg
jmp
or
fs
int3
lods
and
cmp
ds
imul
fs
lds
add
xchg
mov
repz
push
push
sahf
enter
das
icebp
dec
xchg
scas
adc
mov
and
or
das
mov
dec
hlt
or
adcl
or
mov
popa
imul
gs
sub
inc
ret
mov
sbb
fsubrl
popa
sbb
mov
jo
push
insl
push
int
push
mov
adc
xchg
jmp
sbb
sbbb
pop
hlt
cli
dec
mov
or
adc
iret
sbb
mov
adc
pusha
addr16
xor
pop
add
cwtl
sbb
repz
adc
std
outsl
hlt
xchg
push
std
or
mov
cmp
div
mov
pop
ja
inc
aad
aaa
popa
adc
or
lods
pop
loope
test
push
aam
xor
push
xchg
imul
dec
xchg
lret
mov
cmp
adc
mov
cmp
and
lcall
vmwrite
adc
and
or
pushf
inc
dec
dec
mov
cmp
mov
pop
leave
sub
dec
adc
aas
and
xchg
jmp
sbb
push
xchg
imul
fnstenv
jle
and
mov
push
dec
sub
movl
pop
jb
aas
mov
iret
sarl
jnp
sahf
jp
jno
lahf
or
roll
sbb
cmp
jecxz
mov
push
lods
scas
mov
movsb
jno
cmp
inc
inc
and
mov
xchg
ret
push
icebp
xor
mov
xorl
mov
jns
mov
sub
outsb
sbb
sbb
stc
insl
mov
cld
fidivrs
mov
adc
js
push
fmuls
cli
mov
add
mov
adc
mov
pop
adc
fmul
gs
in
fdivr
scas
loop
ret
std
into
add
and
or
add
push
addl
push
sbb
dec
push
lahf
push
ret
lret
insb
jecxz
or
ljmp
ljmp
lret
cld
adc
loop
inc
pop
mov
cltd
mov
dec
mov
xor
xchg
hlt
sub
test
and
lds
nop
dec
fwait
dec
iret
mov
sbb
sbb
mov
call
test
jbe
sbb
insb
dec
and
sti
add
movsb
push
stc
mov
scas
adc
mov
jnp
sahf
aas
lahf
inc
test
xchg
mov
xor
xlat
imull
subb
mov
inc
add
jp
dec
lods
bound
adc
cwtl
insb
pusha
mov
scas
push
push
xchg
imul
jbe
jmp
cmp
mov
pusha
sahf
test
cs
cld
rorl
jb
dec
xor
inc
adcl
out
ret
mov
mov
sbb
sbb
insl
lret
arpl
dec
pushf
jae
fcoms
jge
std
jns
fsubs
dec
hlt
fcmovbe
int3
je
adc
xor
and
and
and
lahf
pushf
or
cmp
sub
jmp
imul
mov
jo
cmpsb
nop
pop
jo
lods
mov
ljmp
loopne
and
mov
xor
sti
mov
add
ja
mov
insl
mov
xor
xor
push
xchg
out
push
hlt
hlt
je
movsb
out
test
bound
dec
sti
adc
lods
add
shl
cmp
dec
push
cld
mov
sub
les
test
mov
mov
out
inc
add
and
loope
mov
xchg
mov
scas
loope
out
mov
dec
pop
cmp
jp
lods
ret
les
xor
pop
pop
mov
sbb
das
adc
mov
pop
dec
jae
lods
jp
js
inc
jbe
mov
ljmp
and
add
jp
push
fsubrs
lods
lods
sbb
adc
push
aas
sbb
push
gs
out
mov
dec
enter
andps
xor
add
inc
fwait
and
test
mov
shrl
out
pop
cmp
ja
sub
lret
test
xor
pop
lds
bound
call
mov
mov
inc
loope
notl
orb
mov
call
xlat
mov
sbb
push
mov
push
sbb
and
and
mov
dec
rolb
test
es
icebp
xor
test
jo
xchg
mov
push
push
aam
pop
loopne
cmp
sub
frstor
xchg
rolb
cs
imul
clc
push
inc
clc
aas
fs
shl
pop
repz
jg
aas
cmp
cld
lcall
xchg
dec
cmpsl
and
stos
mov
adc
jbe
jl
or
mov
repz
pop
outsb
incl
cwtl
and
add
fcompl
je
stc
pop
inc
orb
and
mov
out
into
lds
mov
add
subl
cwtl
pop
and
mov
out
mov
jmp
out
sbb
pusha
lret
insb
push
sub
push
mov
xor
xchg
sub
stos
mov
pop
mov
inc
sbb
and
aam
outsb
fwait
cmc
testl
jl
jb
mov
mov
dec
adc
dec
stos
dec
dec
fisttpl
sar
test
insb
add
cwtl
fwait
sub
push
imul
xor
out
xchg
fidivs
inc
cmp
inc
loop
fildll
xchg
xor
jle
push
mov
ljmp
jge
cmp
or
xchg
js
aaa
lds
and
jle
mov
rorb
adc
mov
fbld
loope
and
sbb
or
pop
sub
or
sti
ds
cwtl
mov
push
jle
ljmp
pushf
mov
dec
mov
cmp
pop
gs
mov
and
jb
push
push
ret
cs
mov
sti
push
dec
scas
push
cltd
xchg
les
cmp
jge
test
inc
inc
inc
movsl
and
push
dec
mov
data16
push
xchg
std
sbb
mov
xor
xlat
jae
loope
vpor
cmp
push
inc
stos
call
outsl
mov
sub
push
xor
add
fsubrp
cmc
sbb
nop
ja
lds
and
dec
push
data16
sub
outsl
push
jns
adc
dec
cltd
sub
push
je
fistl
fistl
movsl
push
stos
or
cmp
in
xchg
pushf
mov
dec
in
out
and
mov
mov
iret
inc
xorl
xor
les
sub
mov
or
xor
in
mov
pop
inc
mov
mov
out
loop
jle
fdivl
cmp
scas
xchg
mov
jmp
mov
in
in
jne
mov
push
fsubrs
jl
push
int
repz
or
std
mov
iret
roll
add
lcall
cmp
inc
xor
popl
xchg
add
mov
xchg
add
ret
pop
sub
cmpsl
imul
push
lcall
push
repz
mov
std
into
sahf
popf
lea
jne
cmpsb
xchg
and
out
test
call
push
sbb
mov
or
mov
adc
adc
push
dec
pop
jmp
pop
out
add
repnz
cmp
pop
sbb
subb
int3
test
jno
inc
or
xchg
fmulp
mov
lea
pop
xchg
sbb
adc
push
dec
pop
cmp
add
add
jo
jmp
inc
push
int
or
sbb
xchg
fnstsw
in
jmp
fstps
ja
and
dec
mov
cmp
lahf
or
iret
sbb
leave
fs
popl
sarb
inc
add
push
push
adcb
movsl
les
add
inc
int3
bound
xlat
loopne
pop
xchg
pop
sbb
push
addr16
out
push
xor
pusha
cld
out
pop
xchg
sti
dec
fwait
add
and
and
out
jle
pop
inc
mov
xchg
cmp
clc
imul
sbb
mov
mov
insb
mov
mov
mov
cmp
sbb
xchg
movsl
xchg
call
jbe
adc
outsb
cmp
jo
clc
sub
adc
inc
mov
test
ret
das
cmc
fsubrl
and
clc
test
sti
pop
push
adc
or
sbb
pop
movsl
mov
clc
nop
aaa
or
fwait
xor
cmc
xor
sarb
lock
cmp
mov
lcall
arpl
stos
dec
push
enter
pop
pop
test
das
lds
fildl
dec
imul
faddl
in
cmp
clc
call
add
in
sbb
inc
mov
pop
push
roll
pop
cmpw
sbb
bound
mov
rorb
in
ret
sar
inc
imul
cmpsl
pop
add
out
cld
mov
outsl
std
cmc
out
cmp
mov
push
mov
inc
pop
mov
mov
adcl
outsb
cmp
dec
inc
xchg
push
pop
inc
orl
inc
jecxz
pop
xlat
mov
rcrb
mov
sub
repnz
mov
xchg
enter
popf
dec
push
test
sub
xchg
enter
pop
and
stos
insb
loope
fisubrl
lret
mov
cmp
inc
movsl
arpl
add
cmpsl
repnz
ret
aam
cltd
cmpsb
inc
imul
sbb
xor
push
inc
arpl
imul
adc
leave
movsl
cmp
and
rolb
jbe
mov
inc
ss
arpl
mov
mov
sbb
repz
sahf
jp
sbb
push
cmp
movsl
pop
or
sub
mov
lea
adc
pop
rorb
dec
push
sti
mov
jne
pop
into
mov
push
push
fcmovnb
mov
add
bound
ret
pop
or
and
push
dec
negl
aaa
and
mov
push
or
or
dec
loope
adc
and
pusha
cmp
stos
pop
pop
cmc
adc
inc
mov
aad
imul
mov
mov
pandn
mov
inc
mov
add
mov
test
scas
sbb
sbb
lret
add
dec
insb
push
push
pop
push
ds
ds
stc
sbb
les
out
xchg
imul
testl
arpl
ret
push
jmp
sbb
test
xchg
mov
lcall
mov
enter
pop
fnstenv
je
jns
in
test
sahf
dec
outsl
fisttps
mov
mov
push
lds
std
xor
fsubl
bound
push
pushf
add
push
cmc
inc
xchg
into
lock
ret
add
xchg
jo
fwait
lcall
shrl
into
cmp
test
or
xchg
test
push
jns
sti
mov
mov
push
xchg
lods
cs
mov
aas
loop
dec
cmp
iret
lcall
mov
add
inc
or
xor
neg
movsl
jle
mov
decl
cmovno
jmp
test
dec
fildll
pop
lods
outsb
popa
push
int
xchg
push
mov
lods
cltd
insl
hlt
cltd
xor
xor
mov
dec
fdivrl
imul
add
inc
in
jle
xchg
push
cwtl
dec
js
scas
or
test
testb
mov
mov
dec
mov
or
addps
push
jns
or
jns
aas
out
mov
mov
pop
andl
xor
andb
jns
xchg
out
outsb
dec
ret
dec
into
dec
cwtl
nop
jecxz
pop
test
xchg
les
mov
sub
lods
sbb
sbb
std
xor
cmpl
icebp
adc
sub
loopne
mov
movsb
pop
pop
mov
dec
sub
sub
sub
pop
sbb
ret
xor
pop
or
or
bound
lds
sub
sbb
sbb
loope
cmp
push
loope
sub
xchg
int
shlb
mov
or
cmp
stos
cmpsb
sbbl
ret
or
cmpsl
or
mov
setno
push
pxor
mov
test
aad
sbb
loop
mov
jns
mulb
inc
mov
nop
outsb
icebp
fadd
jno
xor
push
das
in
and
popa
cmc
rclb
shrl
sub
mov
cmp
mov
and
rclb
sub
faddp
leave
and
jp
mov
icebp
loope
ffreep
gs
push
add
pop
pop
ss
fdivrs
mov
test
mov
je
add
jae
pusha
cltd
xor
jo
and
js
pop
xchg
pop
cmc
pop
and
mov
je
std
mov
dec
or
mov
pop
int
xor
das
add
inc
push
mov
dec
mov
shrl
jno
mov
pop
addr16
inc
add
pop
ret
add
add
inc
enter
divb
dec
add
pop
xchg
int3
pop
pop
shlb
imul
call
outsl
push
or
adc
sbb
or
fs
xor
andb
stos
xor
int3
xchg
nop
aas
movsl
push
clc
mov
sub
xchg
iret
and
sbb
jo
insb
lock
daa
sar
fcoms
ficoms
jmp
lods
inc
mulb
xor
mov
xor
sub
xorb
ret
jnp
pop
dec
mov
add
or
cwtl
outsb
push
loop
insb
push
mov
lods
arpl
pop
pusha
subl
loopne
xchg
mov
xchg
scas
xchg
mov
dec
inc
jge
jmp
andl
pop
jg
mov
cld
mov
fmull
mov
inc
lret
jno
sub
jns
je
dec
push
mov
arpl
inc
jae
pop
xor
ret
imul
nop
jmp
outsb
clc
xor
loop
lea
xchg
hlt
or
test
xor
jns
and
cli
or
dec
mov
cs
cltd
js
inc
div
xor
pop
xor
adc
push
je
js
lcall
inc
sbb
aaa
jle
mov
imul
ret
cltd
and
jge
push
aas
mov
and
ljmp
jo
popf
mov
aaa
pop
cmp
mov
repz
pop
mov
mov
sahf
mov
dec
fld
xor
repz
mov
int3
push
stos
cmpsb
jnp
inc
fcoms
loop
fwait
sahf
sbb
mov
leave
fidivs
push
cmc
jo
aam
xor
out
faddl
cld
enter
dec
adc
cs
mov
insb
xchg
stos
imul
fistl
ds
cmp
mov
jecxz
addr16
pop
in
icebp
call
push
adc
push
pop
pop
aad
jb
add
mov
ss
push
fidivl
pop
push
cwtl
jge
and
or
adc
je
test
pusha
in
imul
sbb
repnz
aam
jmp
sti
push
popl
sub
ljmp
clc
ret
mov
pause
push
imul
std
daa
mov
daa
xor
das
jae
iret
out
aas
pop
push
sarb
adc
addr16
std
test
adc
or
adc
xlat
add
test
outsb
dec
or
cmp
lock
mov
and
xor
stos
adc
in
push
in
xor
jmp
mov
pop
iret
int
mov
mov
dec
popf
inc
push
out
or
mov
dec
fnstcw
push
inc
or
decl
pop
pop
popf
das
in
push
push
test
ss
xchg
pop
inc
loopne
addr16
xor
in
pop
lods
rorb
jbe
call
push
jo
std
es
adc
lods
insb
inc
push
xor
fiaddl
aad
mov
mov
cmpsb
rorl
test
fcoml
jecxz
jno
ja
lea
fcoml
pop
xchg
adc
push
mov
imul
mov
ret
mov
adc
xor
adc
daa
add
adc
into
fincstp
pushf
and
pop
mov
adc
vandnps
jb
popa
imul
cmpsl
sub
scas
push
out
aad
fiaddl
sub
mov
and
sar
jo
into
and
scas
inc
fwait
pop
addr16
repnz
cs
nop
mov
and
push
or
pop
cmp
nop
icebp
stos
lock
sbb
loopne
aad
mov
in
cmp
comiss
mov
test
adc
testb
pop
dec
dec
stc
sub
mov
pop
lods
jp
pop
mov
or
pusha
inc
jmp
loope
leave
je
iret
jmp
cli
gs
dec
dec
out
inc
add
push
test
int3
mov
int3
int
pop
and
aas
dec
shl
loope
ss
sub
sub
bound
adc
std
push
xchg
sub
xor
push
push
sarl
roll
pop
mov
jmp
sbb
mov
stc
cmp
xor
fsqrt
rorb
xor
andl
ret
adc
xor
push
bound
inc
mov
aam
inc
sbb
sub
addr16
xor
pop
push
test
lret
rol
xor
enter
pop
push
dec
addr16
xor
mov
int3
addr16
movl
insl
int3
mov
sbb
xchg
or
or
or
and
out
frstor
adc
cmp
cltd
fcoml
inc
adc
fistl
xor
cmp
push
int
scas
push
call
insb
ss
cmpsb
mov
xchg
outsb
pusha
push
inc
orl
subl
int3
jbe,pt
in
fwait
cltd
repnz
push
fwait
lods
js
push
push
andb
jl
cmc
or
jb
adc
pop
outsl
mov
lea
ror
pop
dec
push
cmpsb
popf
cld
cltd
mov
clc
outsl
mov
xchg
inc
xor
outsb
jbe
fwait
mulb
push
dec
lods
or
cwtl
add
dec
mov
test
out
cwtl
xor
and
adc
mov
and
leave
out
sbb
xor
and
jae
mov
mov
icebp
xor
add
scas
in
lods
mov
and
lock
js
mov
xchg
dec
mov
jno
outsb
sub
push
lods
aaa
jecxz
pop
lods
or
sti
mov
popf
pop
xchg
sbb
loope
in
inc
cmp
pop
frstor
ret
fs
inc
arpl
inc
pop
xchg
lds
out
inc
ret
shl
xor
jne
je
xlat
insl
push
fldenv
in
sub
adc
sbb
aad
adc
loope
mov
arpl
mov
test
stos
fwait
insl
pop
pop
push
cmc
ror
fsub
sbb
imul
js
and
in
je
jne
into
cmpb
or
scas
mov
sbb
inc
fmuls
dec
adc
inc
add
or
inc
je
enter
xchg
sbb
pushf
ficomps
mov
adc
cmc
je
rorb
inc
in
aad
std
mov
and
clc
mov
jno
je
jnp
or
jle
sar
ret
xchg
jne
add
sub
movsb
test
and
mov
pop
vpshlb
movsl
fucomi
arpl
cmpl
flds
mov
or
es
xorl
fs
subl
xchg
add
mov
repnz
xchg
dec
adc
pop
xchg
dec
xchg
ss
mov
popa
int
in
sbb
adc
and
jg
in
call
mov
push
movsb
mov
xchg
or
pop
mov
mov
sbb
lods
or
ss
in
in
nop
sub
inc
mov
bound
xlat
stos
stc
lods
jo
add
fbld
add
fdivl
cli
das
pop
fcoml
fdivr
iret
jnp
in
sub
loop
sbb
in
mov
and
xor
jno
movsb
xchg
das
mov
cs
test
test
adc
sahf
fcomps
decb
rcll
repz
mov
push
jmp
loopne
popf
cmp
lods
xchg
and
mov
inc
mov
mov
push
cli
and
or
ljmp
test
shl
shll
push
jp
mov
mov
push
int
ret
cmp
sbb
cmp
adc
sub
inc
lahf
and
mov
lock
or
repz
cli
jo
loope
aaa
lcall
out
sub
outsb
into
mov
mov
push
cld
push
push
andl
pusha
ds
lret
mov
in
aas
jmp
std
fldt
mov
arpl
fsubr
rolb
push
sub
dec
xor
orb
sbb
clc
jecxz
mov
cmpsb
ds
push
inc
clc
lret
scas
scas
int3
stc
add
mov
das
mov
and
les
imul
mov
repnz
mov
andb
out
xchg
inc
shr
and
mov
gs
jb
push
dec
fs
jnp
jge
roll
or
mov
pop
lock
test
data16
or
add
or
enter
sub
xor
cmp
or
pushf
stos
leave
roll
bound
fst
pop
aas
mov
cmp
mov
nop
in
jl
xor
adc
mov
enter
cmp
jb
cmp
jno
movsl
jg
stos
dec
lods
neg
fdivs
inc
push
ja
ret
repz
stos
into
int3
insl
mov
fidivrl
fcompl
test
bound
popa
clc
jae
cmp
xor
add
ljmp
pop
les
pop
inc
jl
js
jbe
lret
cmpsl
pminsw
shl
pop
mov
inc
jns
addr16
push
enter
jns
call
adc
pop
pushf
pusha
push
adc
xor
lcall
push
ja
and
mov
aam
xlat
repz
xor
pusha
xor
cli
ja
mov
movb
mov
ljmp
sti
pusha
mov
lods
pop
xchg
and
call
dec
lock
out
repnz
addr16
fs
cmp
sub
sti
ret
stos
stos
sti
xor
sbb
shlb
adc
jae
stc
mov
add
inc
jnp
dec
lock
sub
lahf
mov
clc
dec
xlat
mov
xor
cmpsl
pop
loope
lea
cmpsl
cwtl
outsb
cmp
bound
cld
add
ret
gs
cli
bts
mov
repnz
fidivl
repz
out
scas
cli
or
cltd
inc
cmpsb
fstps
outsb
pushf
mov
js
push
or
mov
out
jnp
xlat
xor
les
xlat
mov
fcoml
push
fcmovbe
mov
das
jno
mov
pusha
pop
xor
mov
mov
push
pop
push
mov
mov
xchg
mov
rclb
jno
leave
push
stos
test
and
xor
cmpsl
popa
gs
aas
iret
jge
arpl
bound
pusha
lret
std
mov
into
pusha
adc
push
aaa
enter
andl
outsl
dec
clc
lds
popf
sbb
mov
push
adc
xchg
nop
xchg
push
pop
scas
mov
push
jns
sub
xor
bound
scas
mov
mov
fldl
jmp
push
mov
cwtl
aaa
mov
aam
sbb
push
push
scas
add
int3
adc
arpl
jmp
addb
test
xlat
adc
mov
mov
xlat
sbb
lahf
mov
jb
pop
shl
jno
adc
in
jge
loope
std
inc
out
and
xor
shlb
cltd
push
mov
lock
mov
mov
adc
or
dec
popf
outsl
loope
add
fwait
sahf
jae
xor
dec
pop
push
rcll
xor
imul
mov
push
cmp
dec
cmpb
lods
ja
lret
jnp
dec
rcrl
es
xchg
mov
dec
clc
inc
sub
pop
rclb
sub
lods
jbe
in
scas
fwait
out
mov
inc
ss
pop
loop
or
and
add
mov
subb
fstps
adcl
jbe
pop
inc
xor
cmp
popa
sub
jle
pop
inc
cltd
cwtl
mov
adc
dec
cmpb
ror
and
imul
xchg
inc
xchg
jge
or
jecxz
loopne
add
and
push
dec
imul
push
push
test
loopne
test
xchg
shrb
or
inc
jbe
mov
jecxz
xlat
push
mov
inc
fistl
inc
cmp
sub
push
mov
rcrb
xchg
or
jo
xchg
push
int3
gs
xchg
jg
stos
je
push
orb
or
cmc
shrb
insl
push
jg
cmp
xchg
xor
cmp
dec
fdivl
in
inc
out
out
cltd
std
mov
push
je
pusha
lods
inc
dec
jbe
stc
in
cmp
xchg
dec
inc
gs
xor
sub
mov
rolb
cmp
jl
stos
data16
les
sbb
cwtl
mov
sbb
xor
xchg
inc
adc
xchg
test
push
pop
or
mov
mov
scas
roll
jnp
dec
int
lret
test
mov
mov
add
jecxz
pop
es
imul
out
mov
or
cltd
ss
inc
fcoms
lret
daa
lods
pop
cltd
jo
pop
out
aaa
add
xlat
ror
ret
cli
jno
or
sub
movsl
push
mulb
fsts
push
jns
xor
or
pop
mov
adc
push
fdivl
pop
rorb
movsb
sbb
out
add
das
popf
stos
sahf
dec
not
xor
sub
mov
icebp
in
push
inc
mov
fwait
or
push
push
lods
aas
pop
cmpsb
inc
enter
gs
add
adc
or
jno
adc
dec
in
lea
iret
ret
adc
and
ja
fs
push
adc
ffree
mov
shlb
int3
cmpb
adc
or
aam
or
mov
mov
adc
mov
mul
xchg
cmp
roll
mov
xchg
testb
gs
pop
jnp
sbb
jns
pop
pop
mov
jbe
sub
pop
pop
jo
sahf
popa
sub
sete
scas
fldenv
lock
xchg
add
dec
xchg
jl
dec
sahf
pusha
xchg
ficompl
xchg
cli
int3
sub
lret
add
dec
dec
inc
jmp
daa
pop
push
mov
push
push
pop
pop
aaa
or
daa
sub
sub
sub
pushf
jbe
pop
sub
dec
adc
cwtl
pop
sub
pop
cld
dec
stos
adc
add
lret
jno
outsb
dec
mov
aad
xor
es
xor
aam
popa
mov
inc
loopne
les
adc
ss
aad
xor
pop
in
jle
pop
sbb
mov
cmpsl
jbe
add
popa
inc
scas
or
or
xor
test
cmpsl
or
fcomps
dec
movsl
xlat
mov
mov
mov
add
cmc
mov
gs
or
cltd
mov
loope
jle
in
jle
out
cmp
outsb
cmp
mov
add
stos
andb
jg
cs
imul
lret
mov
jns
iret
insb
pop
icebp
popa
ret
stos
in
sahf
movsl
mov
mov
cmp
cmp
mov
scas
push
push
shlb
into
pop
xchg
jg
jecxz
xor
adc
jae
in
xor
dec
out
push
push
in
aad
in
out
push
sbb
cmp
add
sbb
add
leave
lods
push
mov
ret
das
mov
fwait
cltd
loope
sti
lret
dec
push
repnz
leave
data16
sub
pop
fmull
mov
insl
scas
leave
out
int
jmp
ss
pop
jnp
cld
pop
xor
into
xchg
insb
insl
roll
inc
cmpsl
adc
push
ljmp
add
loope
popa
scas
dec
rcr
iret
ret
add
popf
es
pop
insl
out
cld
mov
fwait
js
lahf
add
je
pushf
xlat
push
pop
out
leave
pop
adc
mov
in
sbb
cmc
iret
sub
stos
add
fstpt
idivl
ja
lcall
or
push
hlt
jge
or
imul
cmpsb
xor
inc
out
xorl
fcomp
jmp
pop
mov
mov
push
movsl
and
push
fsubs
lahf
popa
sub
sbb
movsl
stos
inc
repnz
loop
xor
jae
rolb
sub
and
mov
or
pop
popa
sub
pop
daa
out
loope
sub
dec
lods
pop
xchg
or
sbb
ror
dec
loop
push
add
xchg
les
dec
lcall
sub
fwait
mov
jo
push
push
lods
jns
scas
clc
bound
xor
rcr
add
divb
lods
scas
and
dec
adc
out
cmp
sub
insb
bound
fildl
mov
pop
mov
mov
ljmp
sub
or
insl
cmp
mov
fwait
dec
ret
test
inc
mov
test
iret
sbb
mov
out
out
pop
fistps
sub
repz
incl
iret
xchg
mov
push
xchg
lds
stos
jo
bound
mov
add
sub
sbb
iret
adc
dec
das
lcall
push
push
mov
mov
fnstsw
sub
pop
xchg
add
mov
push
cs
pop
insb
es
cwtl
jns
dec
in
mov
ret
jmp
fwait
dec
ret
jl
adc
lahf
popa
pop
repnz
insb
sub
in
int
dec
or
movsl
pop
dec
rcrb
cmp
scas
imul
adc
push
int
in
mov
call
mov
outsl
xchg
mov
cli
je
stos
icebp
xchg
daa
push
icebp
in
cmp
es
or
bound
sub
lods
icebp
pusha
jmp
mov
dec
subb
jg
pop
ja
out
test
aad
cld
xchg
call
xchg
or
sti
jnp
int
sbb
rorl
ss
pop
jne
xor
out
and
xchg
add
mov
in
dec
sub
outsl
enter
in
push
and
pop
imul
add
pop
movsl
mov
dec
xchg
xchg
dec
xlat
leave
aaa
js
xor
sub
inc
xchg
lret
sti
fwait
and
sarl
xlat
test
and
push
fdecstp
sbb
test
add
mov
addr16
scas
cmp
jnp
stos
data16
mov
cmp
repz
cmp
clc
cli
test
jno
push
xor
push
xor
in
sub
push
pop
inc
push
stc
out
test
aaa
out
jl
test
out
std
cmp
data16
xchg
dec
enter
arpl
sbb
mov
jne
xor
mov
xchg
imul
test
pop
or
or
cwtl
xor
xor
xor
jo
loopne
data16
cmp
add
inc
pusha
test
push
jne
je
push
dec
lea
ja
std
push
mov
lods
xor
scas
inc
pop
aaa
pop
mov
push
dec
arpl
fs
adc
or
test
data16
sbb
lcall
testb
adc
ss
cmp
jl
or
adc
xor
and
dec
in
adc
push
fs
add
mov
and
xor
sub
adcl
std
pop
xchg
sbb
cld
out
cmp
xor
mov
dec
lea
add
pop
fisubrl
jmp
clc
pushl
aaa
andb
movsl
or
and
sub
nop
stc
adc
data16
mov
adc
mov
sti
mov
repnz
sub
push
mov
xchg
push
mov
add
and
mov
pop
pop
arpl
rclb
pop
addr16
insl
lret
push
jl
mov
xor
sub
dec
mov
jno
in
fsts
xlat
addr16
xlat
idiv
jne
mov
jle
mov
pop
dec
add
xchg
xchg
lcall
jbe
sub
push
sbb
dec
sbb
out
and
xor
push
inc
lds
mov
mov
int3
and
fldt
xchg
or
mov
in
fmul
mov
out
mov
lock
jbe
dec
cwtl
movsb
and
xor
ret
repnz
test
xchg
fstps
cmp
mov
nop
xchg
or
or
sar
cld
nop
add
lahf
and
and
repz
xor
xor
inc
fdivs
sbb
mov
or
hlt
jnp
movsb
js
mov
adc
jb
sub
shrl
pop
jno
sub
divb
pop
repnz
ljmp
imul
mov
mov
inc
std
xor
js
mov
inc
mov
xor
dec
push
fwait
loop
subb
lea
stos
sbb
dec
das
insl
enter
and
cmp
mov
mov
pop
pop
inc
push
pop
movsb
cmp
mov
cmpl
cmp
fistl
jl
into
fstpl
mov
mov
stc
mov
scas
xchg
add
add
sbb
and
shlb
movsb
sbb
xchg
adc
orl
icebp
cli
pop
cmp
pop
mov
mov
mov
or
imul
std
jo
sub
xchg
cmp
into
cmp
fiaddl
sbb
mov
push
mov
in
jl
pop
add
add
repnz
mov
cmc
lds
add
cmp
dec
into
ss
sti
sbb
adc
add
mov
in
dec
test
cwtl
push
cmpsb
xor
fidivs
lods
cmp
jbe
enter
mov
lcall
mov
dec
mov
adc
popf
nop
jnp
fcompl
xor
dec
and
mov
and
inc
mov
fadds
sbb
mov
mov
insb
dec
loope
lret
mov
int
cmpsb
mov
pop
mov
insl
fisubrs
test
inc
pop
inc
repz
test
cmp
pop
xor
pusha
xchg
xorb
shrl
xor
lret
outsl
dec
sarl
mov
add
jecxz
xchg
add
cmp
jp
and
lods
jmp
pop
lcall
mov
pop
scas
xor
jo
or
out
dec
inc
push
xchg
mull
movsl
cld
hlt
inc
mov
inc
jge
or
ja
mov
xchg
xchg
jno
nop
mov
dec
mov
xchg
mov
rcl
jp
hlt
or
aas
cld
and
mov
fwait
push
js
out
rclb
arpl
sub
loopne
lahf
and
xchg
stos
xor
inc
je
addr16
lds
mov
test
cmc
pop
cli
jns
fldenv
cltd
mov
mov
sbb
mov
outsl
pop
lds
sub
xchg
cmp
fsubl
xchg
and
test
fsubl
inc
jg
or
add
push
outsl
jae
stc
or
sti
cmp
inc
std
pop
or
cltd
dec
jl
outsb
mov
jns
mov
fcomp
push
push
cmp
incb
xlat
es
andl
cli
pushw
loope
inc
dec
ja
aas
aad
push
cmp
outsl
or
loop
inc
mov
cmpsl
lock
aad
in
sti
dec
insl
popf
sbb
sbb
jno
cmp
icebp
jb
addl
call
adcl
jb
roll
jo
pop
sbb
or
bound
xorl
mov
addr16
sub
pop
cwtl
push
movb
jge
daa
out
adc
push
inc
fmuls
push
clc
test
gs
inc
adc
sbbl
stos
mov
je
es
xchg
xor
rcrb
lret
xor
cs
icebp
and
sbb
pop
jne
clc
mov
sub
sub
fwait
mov
enter
lock
scas
inc
mov
jno
int
int3
push
sbb
in
push
sahf
add
addb
fildl
mov
test
or
std
cltd
shlb
mov
adc
call
adc
cmp
fscale
jp
stos
jle
outsb
pop
push
adc
std
movsb
or
aas
mov
jp
push
std
icebp
mov
add
addr16
int3
push
xor
sub
inc
rorb
fidivrl
dec
lea
shll
adc
xor
push
pop
pop
pop
rcrl
fdivl
and
hlt
insb
pop
cli
mov
sub
jae
mov
in
add
jg
xchg
call
ror
scas
cmp
jmp
xor
mulb
dec
ja
cld
adc
adc
repz
add
pusha
cltd
shrb
push
dec
bound
pusha
pop
xchg
jle
push
sbb
scas
or
add
clc
jecxz,pt
and
xchg
fiadds
pop
dec
testl
push
test
xor
repz
inc
inc
jno
call
call
inc
jg
sbb
jno
lock
cmp
sbb
fiaddl
mov
flds
xchg
stc
mov
jo
cli
push
lret
mov
or
flds
adc
push
aas
mov
mov
xchg
jge
leave
fisubl
test
les
insl
les
inc
mov
xchg
std
add
stc
out
lock
lds
stc
ss
dec
xchg
loope
xor
and
adc
ja
xchg
push
idiv
jns
jnp
inc
sbb
push
ljmp
inc
insb
les
inc
jbe
mov
mov
add
inc
cmovle
sbb
add
mov
das
es
sbb
int
aaa
and
inc
daa
xchg
scas
pop
and
pop
ljmp
add
je
cmp
push
push
mov
imul
pusha
int
and
sbb
icebp
mov
fadd
mov
jno
divl
inc
xchg
aad
push
push
adc
adc
mov
lahf
clc
ja
testb
cmpsb
addb
stc
ret
push
mov
add
fwait
ds
in
xchg
aas
testb
cmp
fldenvs
xchg
pop
inc
leave
lock
movsb
fstps
fdivrl
loop
lods
add
adc
cld
fdivrs
cmp
cmc
xor
pop
arpl
sub
cmp
inc
jl
inc
cmp
or
dec
movsb
addl
cmp
hlt
sub
mov
test
xor
out
pop
push
and
jl
mov
push
jne
stos
mov
pop
xchg
xchg
orl
lahf
mov
cwtl
pusha
mov
mov
or
fildll
insb
daa
rolb
das
outsl
and
push
gs
lahf
cmp
pop
add
cwtl
ret
push
dec
cwtl
jge
lods
xor
cmpsl
loop
sbb
fisttpl
lock
ror
adc
mov
fcoms
out
cmc
insl
push
xlat
sbb
push
loope
aaa
incb
and
sahf
sub
loop
outsl
sbb
mov
pop
repz
xlat
fcompl
xchg
inc
xor
pusha
ret
add
jae
mov
adc
lcall
or
sbb
insl
and
dec
pop
imul
mov
test
pop
loope
sbb
lods
cmpsl
cltd
pop
ss
mov
movd
shlb
je
add
stos
dec
out
aad
xchg
push
lock
cmc
in
xchg
shl
pop
or
lock
in
cmc
hlt
xchg
popl
mov
fucomp
sub
sahf
xor
mov
cmpsb
out
adc
mov
dec
cmp
push
fs
js
push
movsl
call
int3
mul
jge
add
mov
push
sbb
xchg
pusha
sub
inc
or
idivb
icebp
add
enter
mov
and
push
pop
data16
mov
push
inc
mov
jp
sahf
arpl
stc
jae
dec
xchg
mov
sbb
pop
mov
in
dec
rclb
mov
mov
movaps
and
mov
add
nop
leave
inc
sub
stc
stos
jae
in
pop
insb
repnz
cli
icebp
push
lods
fisubrs
data16
add
std
shrl
jne
dec
sub
cld
mov
fbstp
dec
dec
push
push
enter
mov
fistpl
jno
jnp
jmp
adc
out
xor
mov
adc
fsubl
insl
xor
push
inc
popa
dec
enter
loop
jmp
outsb
les
leave
dec
add
push
fadds
std
add
mov
mov
xchg
cwtl
xchg
adc
push
das
xchg
add
inc
fdivl
daa
lret
les
dec
mov
pop
sbb
into
jno
cmp
outsl
ret
mov
add
adcb
popa
imul
cmp
cwtl
repnz
mov
inc
mov
sub
fnstcw
push
push
jno
inc
push
mov
inc
or
mov
adc
sub
adc
mov
push
sbb
mov
js
mov
insl
adc
das
arpl
ljmp
aad
xchg
mov
jecxz,pt
rorl
std
test
mov
mov
push
test
lret
inc
insb
push
sub
repz
fsts
mov
cmp
xchg
adc
push
pop
xor
into
ret
dec
mov
xchg
xchg
mov
inc
sbb
mov
jne
xor
xchg
mov
or
hlt
cmpsb
mov
stos
pop
xchg
sbb
push
cld
cmpsb
test
fsubs
movsl
cmpsl
mov
sahf
dec
cmp
push
outsb
jbe
loop
push
das
jo
add
mov
adc
sbb
xchg
iret
inc
jmp
movsl
in
sbb
xchg
adc
add
and
std
pop
cmp
sub
ljmp
pop
lods
filds
or
push
nop
sbb
jae
add
cmpsl
cvttps2pi
mov
cmp
sub
cltd
adc
mov
cmp
mov
fisubs
nop
imul
xor
dec
gs
xchg
jecxz
or
fbld
imul
sbb
dec
pop
int
inc
insb
push
mov
cwtl
iret
mov
adc
loop
mov
mov
outsb
adc
push
and
add
fdivrs
js
sub
jmp
int
pop
xchg
in
jmp
push
adc
cmpsl
xor
adc
mov
push
or
fnstsw
sbb
test
push
add
das
mov
cmp
cwtl
aam
and
rolb
aam
lahf
push
cwtl
ljmp
enter
mov
inc
in
lea
or
shr
lahf
stc
mov
in
mov
pop
inc
push
dec
or
jmp
jbe
cmpb
pop
jnp
adc
or
mov
push
jge
shll
arpl
and
sbb
fs
push
add
cmpsb
cmp
lahf
xchg
in
aad
je
cmp
jmp
xchg
shrb
cli
scas
sbb
pop
xchg
and
pop
jg
mov
ficomps
push
inc
mov
dec
dec
subl
gs
mov
dec
aaa
adc
jb
xor
frstor
jno
ficoms
inc
aas
xor
fldenv
mov
lods
jle
test
push
mov
ret
sbb
mov
cmc
add
jecxz
xchg
scas
sub
dec
xor
daa
movl
push
xchg
stos
int3
xchg
insb
int
and
sub
sub
stos
mov
clc
push
xlat
je
xchg
xchg
jle
jg
subb
dec
add
int3
lcall
out
in
cmp
out
or
clc
mov
xchg
xchg
add
lds
cwtl
jb
or
roll
in
xchg
mov
dec
add
mov
mov
int3
shrl
add
xchg
cmp
in
mov
les
mov
adc
out
mov
scas
insl
pushf
imul
sbb
das
imul
lcall
xchg
lods
sbb
xor
lods
cwtl
xlat
ja
inc
into
out
or
mov
in
and
xor
stc
xchg
or
push
mov
jp
xchg
sbb
gs
ficomps
sahf
or
xchg
inc
mov
test
push
xor
test
ret
dec
add
cwtl
push
push
aaa
fs
mov
lret
fsubrl
loope
sbb
jl
xor
sub
sti
insb
divl
dec
adc
mov
xor
imul
leave
fwait
call
into
and
or
mov
sub
jp
mov
in
mov
xor
repz
dec
dec
dec
ficoms
movsb
divb
mov
sub
daa
xchg
push
push
mov
mov
ds
sub
xchg
and
push
sahf
sahf
xor
dec
int
lret
punpcklbw
xlat
fsts
jle
insl
sub
adc
sub
dec
fwait
daa
add
mov
mov
leave
adc
cmp
roll
js
jo
lea
inc
lcall
int3
fimuls
push
push
outsb
adcb
mov
cwtl
mov
popf
mov
mov
enter
outsl
xor
push
leave
pop
mov
ficoms
jl
xchg
jae
xor
out
add
mov
pop
popa
dec
pop
pop
jb
mov
sub
leave
adc
push
or
iret
movsb
inc
mov
sub
mov
in
push
outsb
lret
xor
jb
or
pcmpeqw
jno
add
and
and
ss
rcl
mov
or
push
rclb
mov
mov
jmp
or
jbe
daa
fmuls
jno
inc
push
dec
dec
cld
and
stc
ljmp
add
aas
out
jg
movb
push
and
adc
or
sub
fstl
adc
mov
mov
mov
stc
popf
push
mov
enter
xchg
sahf
scas
cwtl
or
fcmovb
jmp
je
mov
xchg
sbb
jg
sub
inc
pusha
fwait
xor
dec
test
cmp
fldenv
sub
jecxz
push
jl
cli
cmpsl
jbe
cmp
inc
pop
popf
roll
fnstcw
pop
and
sub
mov
xchg
inc
scas
adc
into
push
push
and
adc
jmp
les
shlb
and
sbb
sub
lods
xchg
or
push
sub
mov
adc
xor
popa
inc
push
les
outsb
in
test
leave
sub
push
leave
xchg
out
aaa
xor
ljmp
icebp
adc
pop
pop
lahf
jns
pop
sti
mov
pop
mov
ds
adc
mov
pop
mov
mov
jle
mov
jns
insl
inc
and
ds
cli
dec
lods
lods
in
sub
pop
pop
add
repnz
xchg
popf
pop
shll
mov
mov
mov
mov
lds
loop
in
dec
int3
inc
fidivrl
pop
clc
pop
clc
mov
nop
dec
add
pop
fsts
stc
fstl
cwtl
stos
or
and
sub
sbb
rdpmc
std
mov
sahf
pushf
inc
jg
mov
jp
mov
xor
enter
push
sub
popa
rcll
add
sarl
es
call
xor
mov
pushf
push
add
out
aam
and
aas
mov
in
idivb
xchg
sub
xchg
rorb
gs
or
add
in
pop
cmp
insb
dec
jmp
lds
jno
lock
scas
out
or
shr
shll
pop
or
or
push
pop
inc
jmp
test
ljmp
mov
sub
mov
mov
inc
cmpsl
ds
xor
outsb
dec
inc
push
test
cwtl
repz
sub
int
cmp
imul
pop
popa
and
mov
rolb
mov
adc
or
inc
adc
or
out
insl
mov
fsubl
xor
filds
stc
xor
loopne
ja
xor
push
popf
arpl
lret
xor
pop
sbb
inc
ret
pop
stc
xor
and
pop
adc
out
mov
xchg
mov
and
cmc
roll
sarb
loope
outsl
lret
dec
arpl
pop
adc
mov
or
mov
fwait
notl
cs
pop
icebp
xchg
adc
mov
inc
inc
pop
rcl
mov
or
int3
adc
enter
fs
and
and
adc
in
repnz
pop
fwait
push
lods
int
imul
popf
mov
pusha
mov
fisttps
and
sbb
dec
push
mov
push
sub
push
add
sub
sbb
jp
in
xor
aad
ljmp
and
test
xchg
and
jo
int3
test
rorb
int3
push
xchg
add
pop
cmc
mov
push
xchg
dec
push
pop
and
rcl
dec
ljmp
mov
add
roll
xlat
andb
sub
shll
xorb
mov
push
das
push
cmp
fidivrl
mov
push
push
les
rorb
loop
xor
jnp
xchg
aad
and
xor
push
dec
xchg
inc
push
sbb
or
xchg
pop
movsb
sub
stc
icebp
lcall
mov
pop
or
xor
xor
fstl
jecxz
lret
or
int3
ffree
xor
mov
push
mov
out
push
push
repz
mov
lea
lret
sbb
lds
push
leave
imull
popf
push
mov
les
xchg
jnp
dec
cmp
xchg
mov
mov
add
pusha
or
adc
incl
mov
add
icebp
leave
dec
repnz
mov
pop
pop
jmp
das
lret
xchg
pop
and
cwtl
test
jmp
dec
movsb
mov
push
jg
or
xchg
enter
pusha
cld
scas
pop
inc
int3
out
mov
pushf
mov
mov
fdivl
mov
xorps
subl
hlt
js
loopne
add
lret
movsb
stc
cmc
push
aam
push
add
cld
mov
cmp
shll
lock
mov
sti
mov
sub
inc
fimuls
pop
mov
cld
or
mov
scas
sbb
scas
test
jmp
pop
ss
out
loope
dec
or
mov
ss
loop
stc
fildl
or
inc
xor
push
xchg
bound
mov
push
push
les
insb
cmp
inc
lea
lods
sahf
pop
mov
iret
or
scas
and
cmpsb
cltd
push
rcrb
int3
pop
mov
jmp
pop
xchg
pop
jp
out
movsb
into
push
dec
lock
lahf
push
add
sahf
out
mov
cltd
jl
jnp
add
cmp
or
sbb
shll
fists
aad
dec
cltd
aaa
enter
dec
push
cmp
jmp
insb
jb
data16
jae,pt
mov
and
fisubs
ss
push
adc
scas
out
sbb
sbb
cmp
leave
jo
mov
xor
movsl
dec
movsl
push
sbb
adc
int3
xor
hlt
scas
ljmp
push
adc
je
xchg
movsl
push
dec
mov
lcall
fs
lock
xor
icebp
fbstp
aas
xchg
mov
jno
pop
add
in
pop
fwait
int
popf
inc
dec
push
push
pop
cmp
mov
mov
movsl
adc
outsb
fbstp
cmp
pop
sub
mov
push
push
movsl
inc
or
sub
cwtl
add
push
addr16
add
inc
adc
push
mov
xchg
lahf
mov
jns
pop
ret
lds
mul
call
das
dec
cmp
lret
mov
jg
in
imul
fistpl
inc
inc
hlt
addr16
cmp
fisubl
push
or
inc
or
xor
ret
dec
stc
je
cltd
gs
and
cltd
jmp
aad
addr16
sub
in
cmpsl
cltd
fdivp
sahf
xor
fisubl
icebp
mov
mov
and
test
in
arpl
push
outsb
call
add
bound
lret
or
push
lahf
xor
ret
xchg
push
inc
dec
mov
jle
pop
addl
xor
push
fwait
xorl
sub
mov
inc
sub
outsl
sbb
hlt
aam
cmpsb
cltd
ja
es
push
inc
mov
push
add
flds
mov
mov
fnstenv
add
adc
cltd
and
aam
repnz
push
sbb
or
fucomip
dec
dec
sbb
pop
in
lret
nop
das
nop
int
cmc
outsl
sar
jge
aas
mov
pop
cmp
cs
jge
into
dec
push
pop
test
mov
and
sub
cld
push
cmp
mov
xchg
scas
mov
mov
inc
lds
and
pop
ja
cwtl
mov
adc
jle
test
scas
bound
mov
cld
jp
add
loopne
xchg
add
jo
sbb
dec
pop
lea
hlt
aad
outsl
iret
shl
jecxz
mov
mov
pop
mov
jb
cmpsl
popf
rcrl
loopne
mov
int
pop
adc
cmp
ret
jns
sub
xchg
sbb
and
sub
fbld
mov
push
outsl
xor
rcrl
adc
rorb
arpl
loope
movb
stos
jg
jmp
push
test
or
jnp
dec
pop
in
mov
push
dec
cmp
test
test
mov
xchg
test
insb
jge
or
xchg
push
jg
imul
cmc
cli
or
shlb
js
repnz
jmp
enter
sahf
jno
xor
int3
adc
adc
xor
mov
lret
nop
pop
ljmp
ja
loopne
outsl
pop
icebp
sbb
dec
sbb
outsl
js
loopne
repnz
iret
mov
lods
xlat
sub
xor
mov
popa
ret
sub
scas
leave
or
inc
aam
jae
test
xor
push
jnp
xchg
movsl
insl
outsl
pop
inc
sbb
aas
sbb
into
mov
jg
js
cmp
inc
jne
sbb
jnp
test
add
xor
cmp
scas
rorb
ljmp
pop
mov
les
xchg
mov
arpl
inc
dec
inc
jno
mov
pop
sahf
pusha
test
push
jle
push
loop
in
cmp
outsl
jo
add
jns
psrad
mov
das
sub
lahf
pop
scas
mov
add
stos
cmp
enter
pop
sbb
data16
add
pop
arpl
mov
cmp
adc
sbb
jbe
xchg
inc
jge
pushf
cmpsl
aad
imul
inc
xor
mov
push
mov
mov
ds
sbb
movsl
xchg
xchg
rorb
xchg
dec
inc
das
out
je
pop
inc
push
addr16
stos
dec
stc
xor
out
sub
fcmovnbe
inc
xchg
and
lods
les
lods
jae
popa
pop
sbb
out
mov
mov
and
jl
iret
or
push
addr16
cmp
aad
inc
sub
clc
xchg
pop
mov
push
add
mov
push
outsl
dec
cld
push
scas
insb
mull
fs
xor
fnstcw
rorl
jns
cli
cmp
mov
lret
cltd
dec
and
push
call
daa
jmp
adc
push
adc
stos
loop
cmp
or
scas
ret
pop
inc
enter
sar
add
insb
hlt
mov
cmpsl
test
les
into
fdivl
out
hlt
js
sbb
push
push
adc
call
mov
pop
or
cmp
jnp
or
lods
sub
andl
xorb
cmp
and
cld
mov
int3
popf
push
add
push
movsb
shr
push
push
pop
jg
loope
gs
xchg
push
notb
or
and
inc
fucomi
shl
cmp
rorb
movsb
mov
add
mov
xchg
pop
add
inc
inc
jbe
xor
xchg
notb
lcall
push
add
add
daa
addr16
xor
fmull
jl
jle
mov
inc
xor
movsb
fisttpll
jno
arpl
mov
mov
push
movsl
jmp
push
mov
xor
xchg
mov
lret
mov
or
iret
mov
jbe
dec
jmp
jae
or
lcall
cmp
dec
adc
imul
xor
in
shrb
pop
lds
lcall
pop
filds
movsb
add
xchg
cld
enter
sbb
out
or
adc
mov
and
data16
push
lret
scas
in
sbb
sarl
inc
jmp
lret
add
pushf
enter
repnz
mov
pop
out
mov
push
aam
outsl
addr16
in
jo
xor
jmp
sarl
mov
sbb
xor
les
jp
dec
lahf
and
mov
aam
mov
push
mov
jl
aaa
nop
inc
ljmp
xchg
dec
out
rcl
mov
cld
inc
dec
pop
bound
mull
sbb
into
ja
mov
mov
xor
sbb
xchg
push
enter
test
les
ret
roll
cmp
push
enter
and
inc
lahf
fsub
fnstsw
sub
fs
std
pop
sbb
leave
sub
fildll
fidivrs
ja
mov
sub
imul
and
and
cmc
sub
sbb
cmp
push
jns
ret
out
not
jge
aad
test
sti
mov
mov
test
test
and
fstl
movsb
adc
pop
popf
fidivl
sbb
xor
hlt
sbb
je
aas
loope
pmaxub
fistps
pop
cld
push
xor
fstpl
add
xorb
rcll
pop
adc
and
outsb
cmp
jno
xlat
out
fstpt
ss
mov
lods
jecxz
jp
jae
clc
mov
call
jg
lea
hlt
lock
mov
xor
mov
dec
xchg
xchg
xchg
cmp
or
loop
movsl
cmp
and
inc
sbb
lock
aam
outsl
cmpsl
inc
enter
inc
pop
idiv
ficoml
adc
mov
dec
repz
xor
dec
and
pop
add
cli
cmp
ds
xchg
mov
shld
sub
loope
sub
mov
cmp
push
and
mov
and
cmp
xlat
das
ds
jmp
inc
scas
adc
not
mov
inc
xor
dec
lds
pop
in
sbb
ds
inc
stos
rcrb
mov
jno
xor
pop
push
cmp
in
loopne
mov
enterw
je
push
jb
mov
mov
je
sub
jle
pop
pop
es
fnstcw
movsl
xchg
adc
jnp
sub
fwait
sub
das
mov
xor
arpl
out
popf
insl
pop
dec
int
mov
jae
std
adc
or
fdivl
cmp
loopne
mov
jge
shrb
inc
jnp
mov
pop
jg
out
and
orb
in
push
inc
xchg
ss
push
xchg
mov
sbb
andb
jb
xchg
in
ret
pop
adc
cmp
pusha
xlat
adc
mov
lcall
jge
or
xchg
clc
jecxz
lds
pop
rcll
decb
lcall
xor
mov
rolb
xchg
xchg
in
jne
mov
dec
ret
mov
cs
sub
adc
lcall
mov
xor
add
movb
loopne
adc
mov
dec
rcrl
outsb
ljmp
testb
stos
mov
dec
jmp
lret
subb
jo
xchg
cmpsb
pop
push
mov
jae
dec
lcall
movsb
lock
dec
push
xlat
adc
xor
sub
lahf
loop
push
outsl
add
jl
xchg
adc
in
js
mov
frstor
cmpsl
stos
daa
mov
test
inc
movb
imul
pop
push
icebp
fcompl
or
jo
xor
test
pop
push
xchg
fs
mov
push
cmc
call
fsubrs
xlat
inc
sbb
push
ror
and
push
xor
sub
into
stc
jmp
and
pop
dec
stos
jg
ret
xor
fisttpll
cs
gs
mov
or
add
pushf
jmp
ja
cli
mov
inc
push
scas
int
lds
ja
jo
lods
mov
lcall
sub
push
out
paddsw
pop
and
enter
jbe
in
dec
inc
push
or
incb
outsb
nop
aam
dec
jecxz
testb
mov
inc
int3
pop
inc
inc
sahf
insb
cmpsb
jmp
shll
jae
mov
mov
jg
jae
stc
ljmp
or
cltd
jmp
jg
orl
xchg
xchg
dec
and
stos
aam
cmp
ret
rol
sbb
jmp
ret
adc
shl
stos
jae
cmp
add
adc
inc
test
in
cmpsl
cmp
and
in
and
add
mov
gs
aas
stc
out
sub
inc
out
mov
cmp
push
sbb
leave
dec
or
jae
sub
pop
inc
sub
mov
xor
aas
or
bound
pop
hlt
jne
stos
adc
xchg
pusha
or
add
test
inc
dec
cmpsl
and
jne
rcl
push
lret
in
add
fs
adc
rorl
cwtl
int
daa
push
stos
pmulhuw
mov
dec
iret
and
fisubs
jae
push
push
add
and
push
test
or
mov
pop
jbe
out
push
mov
jo
sub
inc
int
mov
xor
jecxz
outsl
jecxz
sbb
jae
ja
fcomp
das
mov
sub
dec
js
push
imul
push
inc
cld
shlb
adc
xchg
adc
std
pop
das
aas
pop
and
mov
xlat
test
rcrl
jmp
mov
test
js
add
cli
imull
xchg
pop
mov
lret
xor
dec
adc
shrl
or
or
dec
imul
je
jno
xor
js
bound
pop
sub
daa
scas
cmp
cli
sahf
jns
movsl
rorl
inc
leave
int
pop
inc
inc
notl
or
or
xor
push
testb
fildl
or
jp
popf
test
adcb
mov
scas
mov
jl
shl
dec
imul
dec
cmpsb
sbb
sub
add
jl
in
push
cmp
insl
add
or
mov
cmp
mov
xor
fwait
mov
xlat
clc
shrb
xor
or
popf
xor
inc
imul
insb
dec
aaa
xor
or
xchg
mov
mov
adc
jecxz
sbb
insb
lcall
add
aad
push
popa
ficomps
jno
fcompl
mov
data16
lods
pop
pop
mov
mov
and
test
scas
jbe
call
or
lret
popa
push
out
or
xor
arpl
sbb
cs
pop
into
adc
add
int3
cmp
or
mov
dec
sar
pop
mov
dec
push
popa
mov
pop
std
sub
shrl
dec
ret
xchg
ret
mov
sbb
ljmp
std
mov
and
pop
sub
cmp
lock
pop
outsl
mov
ds
push
ret
mov
ds
xchg
or
adc
leave
sbb
jae
and
push
add
jae
mov
repnz
iret
mov
jecxz
je
add
hlt
inc
inc
push
mov
cli
xlat
mov
mov
popa
cmp
outsl
sub
xchg
sbb
imul
dec
jno
movsl
vpunpckldq
test
mov
clc
popa
leave
cmpsb
pop
bound
fdivs
xchg
cmp
movsw
loope
iret
mov
inc
sub
mov
fwait
jl,pt
xchg
sbb
sub
sbb
outsl
popf
cmpsb
add
add
das
mov
jmp
int3
insb
test
xchg
lret
xchg
jl
jns
cmp
mov
mov
cmp
or
sub
lods
push
popf
or
jge
inc
repnz
scas
dec
push
scas
mov
bnd
sbb
inc
mov
fisubl
icebp
in
iret
xchg
in
loopne
stc
sub
jo
cmc
sahf
push
cmp
call
bound
push
dec
mov
loope
subl
sub
mov
adc
rcll
sbb
adc
in
mov
jl
xchg
mov
cmp
mov
jle
jmp
scas
xchg
jmp
into
les
push
lcall
add
sahf
mov
popa
pop
and
push
lahf
dec
sbb
cltd
jne
call
daa
and
mov
adc
push
out
adc
test
and
xor
jnp
xor
in
popa
cmp
inc
push
popf
push
or
push
mov
repz
dec
dec
sub
pusha
push
repnz
push
cmpsl
fstpl
mov
aam
or
in
push
movsl
lock
inc
or
das
push
in
and
outsl
xor
fidivrs
adc
dec
xor
sub
xchg
mov
inc
add
xlat
sbb
dec
and
out
and
adc
adc
addr16
bound
xchg
leave
aam
or
adc
jns
cmpsl
inc
xchg
stos
add
imul
btr
adc
or
lcall
sbb
xchg
stos
inc
cmp
xchg
fdivrs
fildl
xchg
inc
pop
sahf
sti
jno
sbb
out
nop
push
sbb
lahf
mov
in
fs
rcrl
stc
insb
movsb
addl
push
fistpll
dec
xchg
rclb
pop
and
xor
jbe
and
stos
adc
sahf
fstpl
xchg
xchg
mov
mov
fs
mov
in
push
xchg
ret
push
push
loopne
push
xchg
pop
push
adc
xchg
jo
js
mov
and
mov
inc
add
mov
mov
fucomp
nop
jp
pop
or
cmpsb
push
lods
ja
pushf
jbe
leave
adc
inc
xchg
shll
jne
xchg
pop
inc
repz
sub
stc
sub
addb
and
adcb
jae
xchg
xchg
xchg
out
pop
sub
shlb
mov
mov
test
out
jno
adc
gs
mov
insb
push
cmp
fstpt
out
je
out
mov
js
jle
in
sbbl
rcrb
lahf
or
xchg
mov
pop
mov
loop
xchg
popf
stos
jbe
jb
jmp
enter
lods
in
ret
xlat
add
mov
ret
mov
fisubrl
int
inc
xor
xor
sbb
lret
into
es
nop
insb
mov
and
gs
xchg
in
inc
inc
filds
mov
loopne
jmp
xor
faddl
repz
dec
xor
imull
inc
loope
stos
sub
push
sub
int3
dec
loope
dec
mov
dec
das
jbe
mov
mov
test
xchg
and
mov
daa
xchg
push
ficompl
popl
outsl
add
xchg
sbb
mov
rorb
mov
sub
xchg
xlat
jge
enter
popl
stos
loop
inc
out
and
and
popa
sub
ljmp
sub
jno
pop
or
in
pushf
or
out
push
dec
outsl
stc
or
pop
std
mov
shrl
xor
cld
stos
dec
pusha
dec
stos
out
ret
jle
dec
pop
inc
jb
mov
and
shr
adc
cmpb
lods
inc
mov
jo
cld
pop
fcmovbe
fs
sub
int3
mov
and
mov
sub
jl
dec
jno
out
popf
pop
mov
xor
push
pop
lods
pop
test
jecxz
fcoml
cmp
mov
pop
cmp
data16
pop
pop
xor
xchg
repnz
and
out
js
sbb
hlt
pop
or
hlt
cwtl
jo
mov
adc
cmp
fdivs
jge
or
fimull
dec
dec
pop
loopne
mov
mov
rorl
jnp
cmp
addb
and
sub
vmovapd
fs
jmp
gs
sub
loopne
jb
fistpl
jmp
into
mov
pop
pop
adc
cld
pop
test
jp
add
arpl
shlb
and
ja
inc
lret
jl
cmp
es
cmp
push
adc
jnp
sahf
xor
add
pop
dec
pop
mov
gs
sbb
ja
jl
dec
imul
imul
insl
js
mov
adc
mov
sbb
faddl
push
imul
loopne
jge
cld
or
and
pop
mov
pop
dec
int
or
sahf
mov
cli
sbb
test
rcl
dec
adc
sar
and
push
inc
lahf
data16
das
mov
xor
fsubs
movsb
adc
cmp
jp
in
inc
aaa
push
sub
push
aad
test
sub
cmpsb
sub
xchg
adc
inc
rcrl
and
fistpl
test
popf
les
mov
call
cmpsb
sub
aas
into
mov
outsb
pop
popf
cmp
nop
shrb
jno
mov
add
sahf
mov
mov
sti
rcr
add
fstpl
fwait
xchg
fstl
stos
adc
into
fcomps
jmp
xor
mov
pop
mov
popa
mov
inc
leave
test
ja
push
xchg
mov
mov
sti
mov
rcr
jl
daa
ljmp
enter
xchg
dec
or
lcall
js
pop
stos
jb
push
fst
mov
mov
adc
inc
movsb
sbb
mov
push
divb
sti
in
and
xor
mov
xchg
aaa
and
pop
add
jl
inc
pusha
in
fsubr
fnstsw
mov
test
int
add
aaa
push
fstl
test
xor
push
enter
pop
adc
outsl
lods
lods
xchg
lcall
add
jg
in
and
push
xorl
idivb
lcall
fisttpl
cmp
incl
aas
pop
lds
cmp
sahf
clc
mov
adc
xchg
sbb
int
sbb
xor
cmpl
cmp
jo
xchg
mov
push
jae
vphadduwq
adc
xor
pusha
test
inc
lea
add
lahf
xchg
ljmp
sub
xchg
lret
int
in
aas
xchg
fmull
push
adc
dec
addl
lods
xchg
jl
and
jno
xor
pop
sub
xchg
push
dec
and
jp
jo
mov
dec
movb
jg
inc
sahf
arpl
xchg
popa
mov
dec
cli
pop
push
jecxz
push
int3
mov
lds
mov
cs
xchg
push
cli
icebp
incb
test
dec
push
mov
xor
fcoml
pop
jb
jb
lcall
or
jmp
ret
or
in
nop
push
or
push
hlt
add
mov
and
fildll
cmp
in
mov
mov
jl
test
outsb
mov
inc
mov
in
fmull
fwait
adc
mov
and
inc
rorb
in
data16
aaa
push
push
dec
stc
ficompl
cwtl
mov
add
jecxz
sbb
push
sahf
xor
ss
repnz
dec
arpl
adc
add
popa
and
mov
xor
add
mov
mov
cmp
inc
sbb
add
or
imul
mov
dec
and
xchg
push
scas
cmp
pushf
mov
inc
push
adc
cld
dec
cli
idivl
fisubs
dec
je
and
cmpsb
hlt
hlt
xor
jb
pushf
movsb
rclb
sti
insl
pop
dec
call
mov
push
lea
mov
mov
dec
or
jno
insl
pop
out
dec
inc
in
or
pop
shrb
dec
fstl
movsb
nop
enter
out
inc
pop
pop
adc
xor
in
insb
cmp
test
mov
cmpsl
cmp
sub
push
lea
push
cmovl
in
not
ret
out
push
int3
adc
pop
into
lcall
pop
mov
adc
test
mov
pop
dec
mov
push
push
adc
addr16
or
dec
inc
mov
pop
cmp
arpl
sarb
and
mov
xorb
mov
icebp
stos
outsb
xor
push
aad
fxch
jmp
and
xchg
stos
fdivr
sahf
and
mov
push
mov
sbb
les
xchg
rclb
inc
push
xor
ficoms
mov
les
shrb
shrl
and
and
or
pop
sbb
xchg
mov
pop
dec
sahf
das
lret
mov
push
test
sub
push
or
cmp
sarb
stc
mov
mov
push
imul
fsubs
mov
pop
sbbl
cmpsb
add
mov
in
inc
cwtl
arpl
mov
stos
push
jns
sbb
cmp
push
pusha
aaa
into
lock
cmp
xchg
push
fldl
pushf
mov
jo
cwtl
mov
outsl
push
fnstenv
scas
mov
mov
inc
ficoms
outsl
inc
jns
jl
pop
fidivrs
in
jg
lods
jne
fwait
cmp
rcll
cmpsl
adc
or
mov
jmp
mov
and
rcr
sbb
fwait
or
mov
xchg
test
rol
xchg
pop
mov
push
lcall
cmpsb
pop
clc
xchg
xorl
lods
cmp
pop
push
push
repnz
push
xchg
pusha
lret
or
xor
arpl
cld
in
mov
icebp
incb
jns
mov
dec
nop
pop
pop
fs
xchg
jp
fldenv
notl
push
xchg
cwtl
and
das
aam
aad
out
repnz
mov
sub
out
lret
xor
mov
xchg
divb
fisttps
into
xchg
jns
jo
jbe
push
andl
cmpsl
bound
stos
mov
loope
mov
out
test
enter
rclb
cli
push
fwait
mov
jmp
aas
aad
mov
and
or
mov
pop
push
pop
loope
xchg
stos
lods
sub
xchg
pop
pop
add
xor
mov
mov
mov
fwait
sar
and
add
ljmp
mov
xchg
or
fiaddl
and
je
clc
push
xchg
xchg
int3
div
xchg
mov
and
add
xlat
sahf
xor
pop
xor
sarl
xchg
mov
loop
xadd
loopne
std
xchg
fisubrs
xor
in
jle
cld
daa
icebp
outsl
je
fnsave
mov
sarb
push
aaa
pop
and
mov
lcall
add
cmp
jnp
rorb
jne
gs
add
ror
jle
jae
sub
mov
jnp
movsl
popf
lods
lea
je
add
mov
call
out
or
jb
jae
scas
insb
mov
jns
mov
add
mov
xor
data16
mov
pop
inc
push
inc
nop
jmp
push
add
stc
lds
mov
sbb
fbstp
daa
xorb
psrlw
xor
ret
push
mov
hlt
ds
push
mov
xchg
sar
mov
enter
sarb
xor
inc
cmpsb
divb
cmp
inc
cmp
ss
popf
sub
pop
or
mov
mov
xor
xchg
cmp
popa
cmp
les
pop
repz
sbbl
or
sbb
jmp
in
aaa
fstpt
rolb
stos
jl
mov
lock
out
inc
push
sbb
and
add
add
and
adc
sbb
and
addr16
scas
negl
sbb
cmc
sub
aad
or
cmp
push
push
lahf
mov
lahf
dec
mov
lods
mov
mov
shrl
inc
fnstcw
mov
cmp
lret
lret
je
inc
shlb
inc
in
dec
rolb
mov
add
test
subl
mov
jno
imul
push
pop
pop
sbb
add
arpl
or
or
push
shr
add
cmpb
or
int
ret
pop
lods
mov
in
jbe
xchg
mov
in
dec
out
push
test
cli
outsb
mov
sub
push
out
aaa
int3
loop
pop
fwait
fwait
ss
in
pop
std
rcl
add
jne
cmc
iret
and
gs
or
push
dec
and
shlb
notl
pop
lock
jb
xchg
adc
mov
pushf
and
cltd
xlat
mov
icebp
sarl
icebp
in
jno
int
sbb
cmp
aad
icebp
jns
pop
mulb
jge
xlat
jnp
movsl
xchg
fistpll
movsb
dec
sbb
mov
shlb
jg
mov
test
push
out
mov
or
js
mov
push
out
test
xor
imul
pop
test
or
fwait
dec
xor
mov
xchg
stc
or
sahf
xor
in
sbb
iret
sub
mov
add
push
mov
aam
mov
mov
pop
popl
test
cmp
add
test
pop
ss
int3
inc
or
rorb
mov
fistpl
pop
inc
mov
sbb
ret
arpl
cmc
and
fdivr
pop
inc
jmp
jbe
pop
dec
fdivs
lcall
in
jecxz
cmp
push
scas
fcomps
inc
inc
test
mov
outsb
jle
xor
and
lock
mov
addr16
js
or
nop
xlat
popa
sbb
push
mov
imul
popf
jg
adc
lods
into
loopne
cmp
dec
jmp
push
sbb
shll
inc
lahf
and
push
cli
ss
xlat
iret
jne
jo
mov
cltd
mov
xor
int
pop
call
je
jle
cmpsb
fisttpl
stc
cmpsl
shll
fnsave
cltd
fsubr
mov
xchg
lret
sbb
shll
repz
imul
scas
mov
roll
cld
es
and
or
es
mov
mov
add
dec
in
pushf
es
jae
mov
sbb
fisttps
gs
cli
cli
lret
nop
mov
leave
out
adc
cmp
jg
popa
mov
mov
lods
jb
test
xchg
sub
cmp
cmp
pop
test
mov
cmpsl
cli
aad
inc
lahf
je
or
xor
mov
adc
jl
dec
fcoml
imul
cmpsl
jg
enter
pop
imul
aam
lock
sbb
loope
gs
jge
mov
adc
mov
cmp
or
cmpl
lea
divl
xchg
hlt
sbb
cmp
dec
sbb
jl
dec
aas
jge
mov
ss
mov
scas
aad
out
jns
std
imul
sbb
psrlq
fmul
inc
ret
leave
sarl
mov
jbe
arpl
add
leave
xor
shl
fmull
dec
mov
cs
adc
adc
sbb
or
pop
mov
adc
mov
sbb
or
mov
push
jecxz
dec
lret
out
mov
lods
lahf
enter
les
stos
lods
rol
fists
cmp
repnz
pop
popf
jmp
xor
hlt
fwait
sbb
xchg
sbb
ficoms
pop
fcomip
int3
xchg
adc
xor
ret
lock
adc
adc
loopne
mov
fistpl
xor
pop
adc
lahf
les
mov
test
pop
or
mov
cmp
aam
iret
add
scas
dec
out
aam
inc
mov
test
pusha
les
sub
cltd
ret
xchg
add
and
ja
mov
jb
sbb
sub
push
cmp
pop
adc
gs
iret
es
mov
mov
stc
inc
in
sbb
sbb
xchg
fdivs
lret
daa
inc
cld
xor
mov
shlb
mov
xor
adc
in
int
and
and
sub
sub
roll
fidivl
pop
rorl
push
jl
sub
mov
das
pop
lea
mov
xchg
push
sub
xchg
loop
adc
jle
mov
lock
pusha
xor
add
cli
hlt
aam
xchg
and
jns
xor
das
testb
xchg
dec
fistl
jl
lcall
cmp
mov
int3
aaa
ficomps
adc
and
xor
test
xor
shrl
insl
push
bound
bound
or
scas
stc
scas
hlt
stos
inc
aam
nop
mov
repnz
inc
jno
bound
mov
and
into
sbb
scas
ret
mov
frstor
cmc
mov
mov
scas
or
sub
inc
add
adc
push
insl
lcall
es
stos
mov
sub
cmp
les
es
jae
shrb
hlt
lea
add
or
cmp
lret
pushf
js
sub
jb
aas
sub
xchg
add
pop
rolb
out
mov
mov
mov
jno
cmc
xorps
mov
xor
xor
shr
jge
push
repz
pop
sub
jle
mov
sub
lock
push
push
jmp
in
jle
jnp
xchg
gs
aaa
jbe
into
jp
int
sub
cmc
das
iret
aaa
test
push
mov
adc
mov
mov
jno
mov
and
push
aaa
xchg
lret
fcompl
xor
pop
iret
in
add
sub
mov
fildll
stc
mov
dec
shll
pusha
push
mov
adc
mov
sti
pop
cmpsl
aad
add
push
aaa
or
cmpsb
mul
jo
popf
and
nop
sbb
movsb
jmp
xchg
test
inc
inc
scas
sbb
jle
dec
jb
icebp
in
jno
movsb
xlat
mov
sti
push
add
pop
or
pop
es
das
adc
popf
dec
insb
dec
movsb
jge
jmp
pop
xor
jb
mov
inc
js
inc
popa
rorb
cmc
add
out
leave
mov
mov
loopne
cmp
pushf
mov
mov
addr16
outsb
inc
or
sub
xchg
inc
outsb
mov
jo
jnp
push
mov
add
jge
fs
repnz
or
mov
aam
xchg
test
jg
cltd
dec
imul
jnp
das
shlb
push
xchg
fsubrs
xor
jbe
ret
shlb
les
inc
out
jno
inc
fcoms
les
pop
aaa
sahf
cmc
aam
sbb
mov
push
pop
test
stos
pushf
push
add
sub
jge
mov
cs
sbb
bound
mov
mov
mov
cmp
test
mov
inc
jg
in
pop
mov
lds
scas
lret
inc
dec
cltd
jl
loopne
insl
inc
pop
jecxz
loop
dec
leave
es
add
lcall
subb
mov
shl
lods
jl
sahf
divl
pop
iret
iret
icebp
leave
in
add
and
testb
shl
jle
repz
xchg
cmp
cmpsb
enter
jmp
fnstcw
outsl
jne
mov
xchg
xor
xchg
fisubs
sbb
inc
out
test
mov
inc
dec
jg
fisttpl
pop
jge
imulb
pop
push
mov
sbb
or
enter
fnsave
cmpsl
pushf
pop
fsubp
out
jl
aaa
cmpsb
dec
clc
inc
sbb
jne
insl
or
jb
ljmp
inc
jb
mov
fadd
test
adc
jl
lods
or
repnz
les
sbb
jge
mov
and
cltd
leave
fidivl
aam
push
adc
sbb
sub
xchg
icebp
mov
insl
xor
mov
sbb
in
int
lea
fisttpll
enter
insl
mov
push
jg
xchg
mov
mov
mov
fsubrp
mov
mov
ljmp
sti
lea
outsb
pop
jmp
std
mov
jl
in
std
cwtl
test
or
pop
test
and
ffreep
neg
lds
xchg
pushf
mov
inc
lock
xor
jnp
jnp
lret
jecxz
fisubs
out
sub
scas
jnp
pop
icebp
icebp
gs
test
les
stos
aaa
mov
cmc
add
loop
push
stos
sahf
fidivl
jl
clc
lods
loop
lea
add
jmp
push
sbb
mov
jmp
mov
stos
jl
sbb
or
sti
shrb
xorl
mov
push
push
mov
pop
dec
std
adc
add
ds
inc
fstl
cmpsl
xchg
add
add
aaa
inc
lret
pop
jns
loop
aas
mov
mov
sub
icebp
shl
insb
shlb
ficompl
test
xor
movsb
popf
ret
mov
icebp
addr16
test
jle
in
jge
jbe
adc
xlat
test
jmp
lahf
ds
fs
add
jbe
stc
xchg
lods
xchg
mov
lret
loop
mov
sbb
pop
jbe
sti
mov
cmp
mov
adc
pop
aad
cld
andl
adc
xor
lock
fdivs
pop
rcrl
clc
push
jne
cmp
mov
std
jg
mov
pop
push
pop
inc
cmp
adc
fdivrs
cmp
je
enter
roll
xchg
jno
mov
add
fcoms
dec
dec
idivl
sub
jno
mov
xchg
or
sahf
mov
jg
and
shl
repz
pop
push
mov
test
mov
adc
xchg
dec
mov
mov
pusha
sub
imul
call
cmc
pop
leave
sbb
lods
pop
lahf
jno
test
xchg
adc
inc
fstps
inc
ret
jbe
dec
mov
lret
test
sti
hlt
rcll
ljmp
loopne
pop
xchg
pop
sbb
push
add
cmpsl
cmc
inc
mov
lret
cli
pop
fisubs
lock
out
out
lds
cltd
loop
popa
inc
in
into
xor
divb
pop
xchg
cld
jg
push
popa
popf
mov
inc
xchg
stc
aam
es
mov
ljmp
shrb
mov
xor
jno
fstpt
jp
sbb
ss
jb
add
adc
cli
leave
xchg
mov
ret
shlb
testl
into
loopne
test
dec
jle
je,pt
push
js
add
sub
fwait
push
jmp
lahf
hlt
movsb
mov
cmp
inc
fsubrs
lea
adc
daa
pop
add
xlat
sub
xor
cmp
pop
sub
sub
gs
sbb
hlt
adc
sub
mov
enter
mov
fisubrl
pop
xchg
pop
mov
lock
adc
into
cld
pop
sub
je
fsub
mov
repz
pop
sbb
xchg
int
mov
inc
xor
ss
adc
mov
insl
aaa
dec
cwtl
xchg
iret
xchg
in
sub
sbb
inc
push
in
repz
pop
lea
and
loopne
push
dec
lods
in
sub
pop
xor
pop
mov
mov
jl
sub
adc
mov
xchg
sahf
stos
loopew
xchg
adc
lods
cmc
xchg
mov
enter
jne
or
aaa
mov
cmp
popa
xor
xchg
ds
xchg
sbb
dec
nop
lea
cmc
xlat
dec
scas
scas
jmp
in
sbb
call
sbb
repz
rol
sarb
pop
and
push
fstl
loopne
scas
pop
fwait
push
sbb
lret
aad
xor
jae
sub
push
mov
mov
jle
imul
test
pop
cmp
sbb
mov
mov
outsl
push
xor
test
fistps
or
dec
and
into
sbb
mov
ljmp
out
cwtl
jo
decb
sbb
lret
insl
mov
xchg
add
lahf
sub
dec
jle
xor
xchg
or
out
cwtl
iret
jbe
lahf
lret
subb
je
hlt
fdiv
xchg
and
mov
daa
lock
in
inc
loop
pop
sub
cmp
push
das
push
rorl
xor
mov
push
dec
hlt
jbe
in
aaa
fistps
push
pop
push
aam
pop
mov
dec
inc
insb
aad
bound
sahf
leave
push
mov
imul
subl
stos
lock
mov
aam
jae
xchg
add
leave
hlt
add
jns
lret
sti
jmp
mov
sti
mov
mov
sub
stos
fsubrs
testl
adc
and
movsl
lds
sahf
dec
jae
mull
inc
rcll
pop
inc
push
push
push
xchg
ds
fcomps
sub
daa
imul
arpl
mov
jp
test
in
loope
pop
shlb
test
add
cld
and
mov
insl
or
push
ss
stos
mov
jo
pop
adc
stos
inc
shrb
pop
and
mov
pop
mov
je
sub
mov
push
pop
stc
imul
mov
mov
out
pop
repz
idivl
add
ja
mov
not
ret
jle
addl
in
mov
hlt
dec
nop
and
lea
imul
inc
xor
pop
fnsave
insb
pop
shrb
pushf
rorl
sbb
and
mov
or
pop
cmp
pop
or
adc
popf
and
int
pop
mov
push
scas
fldcw
leave
pop
test
call
mov
test
out
insb
pop
cld
fxch
add
mov
jge
mov
test
rol
dec
lahf
gs
sbb
mov
jecxz
in
jl
clc
xlat
aas
jno
and
into
fidivrl
arpl
pop
sub
imul
mov
sub
sub
cmp
loop
sbb
mov
ja
jns
cmpsb
mov
inc
fnsave
adc
add
mov
xor
adc
rol
sbb
addl
jp
outsl
xor
mov
js
imul
sbb
mov
sub
cli
or
or
xchg
mov
xchg
shr
leave
or
inc
ss
mov
push
sub
sub
adc
and
stos
or
or
mov
xchg
pop
jg
aam
fwait
negl
cmc
sub
in
inc
mov
xchg
inc
movsl
movsb
ja
js
repnz
and
outsb
dec
rorl
cwtl
push
mov
sbb
bnd
xor
and
mov
hlt
xor
jp
sub
aaa
xor
outsb
sbb
mov
mov
inc
fwait
jne
xor
sti
mov
leave
divl
xor
sti
int
lea
adc
xchg
or
out
bound
mov
popa
nop
cmpsb
jecxz
sub
xor
in
cmp
pop
repnz
fstl
test
test
movl
or
xchg
lods
das
inc
adc
movb
mov
add
add
jo
dec
sub
inc
cmpsl
xchg
out
and
aaa
mov
pop
mov
sub
jl
sbb
inc
cmpsb
clc
aam
dec
push
xchg
cmp
fcmovnbe
test
cmp
push
jl
jnp
pop
test
adc
out
xchg
and
adc
mov
aam
fwait
lods
or
lds
mov
in
sub
jg
ror
sbb
inc
inc
push
mov
adc
sub
andl
repnz
sbb
pushf
rcl
loope
cwtl
and
push
pop
js
add
data16
push
xor
sub
inc
dec
jge
repz
cmp
adc
bound
mov
stos
push
push
jge
xor
aas
mov
js
mov
xchg
lret
arpl
hlt
lds
test
pop
sbb
push
lods
or
sbb
or
adc
ret
out
mov
xorb
sahf
js
fs
and
sti
and
jmp
cmpsb
jae
mov
mov
mov
sbb
adc
lods
repnz
daa
pop
adc
rclb
lahf
rcrb
dec
into
sub
push
jecxz
inc
jl
or
cmp
movsl
int3
push
in
shll
mov
imul
aad
mov
and
pop
jle
xor
sbbl
cmp
cmc
xor
inc
cmp
lahf
adc
std
dec
adc
adcb
xlat
in
xlat
sub
jbe
fmul
mov
xchg
add
dec
add
mov
clc
dec
mov
inc
jecxz
stos
sub
mov
jnp
and
outsl
adc
jne
xchg
or
insb
test
push
fldcw
dec
jle
xchg
or
fdivrl
xor
sbb
sub
shlb
mov
ret
ljmp
push
movsl
or
inc
orl
aam
loope
notb
ja
mov
xorb
ret
in
lcall
lock
push
sbb
flds
sub
mov
or
adc
imulb
subb
mov
push
sub
outsl
mov
mov
lahf
push
xchg
sbb
fnstenv
mov
icebp
pop
push
lods
mov
cmp
push
mov
push
cltd
cmp
addr16
and
adc
mov
out
jns
push
mov
cmp
xor
add
xchg
ss
push
stos
xchg
jp
jo
scas
fiaddl
mov
stos
sahf
imul
cmc
xor
leave
ret
sbbb
adcl
xchg
dec
hlt
popf
cwtl
cmp
mov
xchg
sti
icebp
out
adc
inc
les
mov
mov
push
stos
push
or
dec
and
mov
out
adc
outsl
loopne
scas
ret
xor
mov
mov
inc
cmpsl
cwtl
iret
lods
subb
xor
adc
push
dec
sub
imul
pop
pop
nop
mov
cmpsl
xor
sbb
orb
daa
and
repz
nop
sbb
jb
mov
pushf
pop
sub
push
lods
cmp
mov
mov
jmp
lret
aas
pop
les
xor
inc
shll
dec
fnstsw
adc
out
mov
pop
imul
xor
push
and
pop
ds
adc
sub
push
dec
or
insb
mov
cwtl
or
or
loopne
pushf
or
inc
dec
mov
push
xchg
push
aam
jnp
xor
push
imul
movsl
orl
fldl
sub
jp
orl
into
add
push
mov
sbb
popa
mov
je
mov
mov
add
nop
mov
mov
xchg
cmpsb
cmp
je
add
es
pop
pop
inc
xor
enter
pop
push
ret
mov
cmp
call
mov
mov
scas
sub
clc
icebp
push
std
rorb
pop
fsubrl
jbe
ja
ret
lret
sub
mov
ret
xchg
arpl
jb
fldcw
inc
sbb
cmpsl
fwait
mov
daa
sbb
sub
mov
faddl
dec
or
mov
pop
mov
add
push
shl
lret
test
adc
repz
pop
or
mov
nop
jnp
ljmp
popa
nop
push
shlb
xor
test
mov
dec
repnz
dec
add
sarl
ret
fisubrl
call
sbb
hlt
inc
mov
lods
mov
mov
cmpsl
sti
cmp
jae
push
js
dec
cli
ficompl
adc
adc
movsb
imul
imul
and
js
xchg
mov
in
fisttps
mov
adc
icebp
cltd
jbe
lcall
jmp
iret
dec
movsb
mov
stc
push
imul
jl
dec
lea
mov
xchg
popf
add
push
and
popa
xchg
xchg
xchg
bound
jle
mov
sbb
aaa
imul
xor
mov
mov
mov
and
push
addr16
into
sbb
adc
and
cmpb
ret
ljmp
popa
pop
dec
dec
cmc
push
inc
push
lahf
popa
aam
imul
sub
lret
ds
fld
inc
fists
adc
std
xchg
push
sbb
roll
outsl
int
stc
adc
push
xor
mov
push
call
mov
dec
in
icebp
cltd
add
and
lock
scas
xlat
rorl
cs
xchg
and
lahf
mov
adc
repz
icebp
fwait
mov
movsb
add
js
pop
hlt
std
add
xor
test
xchg
arpl
xchg
rcll
ret
scas
and
call
outsl
pop
aaa
cmp
push
addr16
push
lcall
out
fists
jnp
insb
repz
or
jle
xchg
sbb
mov
dec
sub
aad
andl
inc
cs
xor
mov
pushf
leave
xor
movsl
sti
push
fistpl
or
push
std
arpl
arpl
testb
and
mov
pushf
jne
stc
pop
xchg
push
mov
lea
int
clc
xchg
cmpsb
pop
outsb
and
adc
dec
cltd
inc
mov
dec
add
rol
gs
fidivl
dec
inc
jne
iret
sub
movsl
movsl
inc
xchg
cmp
xchg
std
decl
out
pop
or
shlb
xor
ljmp
nop
incb
std
or
push
jp
xchg
inc
in
or
addl
lds
xlat
inc
push
inc
push
test
dec
adc
jae
jmp
shlb
inc
mov
or
lods
jb
out
shll
fwait
cmpsl
or
lds
test
mov
push
push
cmpb
sub
adc
in
inc
cltd
test
adc
scas
push
js
fiaddl
mov
and
mov
pop
xchg
movl
fldt
daa
int
dec
pop
cmp
popf
dec
add
xor
push
arpl
jmp
and
inc
mov
cmpsb
ficomps
push
rcr
add
fmuls
sbb
jl
movsl
adc
pop
int
gs
cmp
xchg
fldt
arpl
test
repz
stos
xchg
fisubs
xor
stos
imul
pop
cli
xchg
rorl
mov
inc
xor
add
inc
outsb
mov
jp
cld
pusha
fs
xchg
inc
sbb
ret
rcll
adc
dec
mov
push
xor
ret
loopne
insl
mov
in
scas
push
imul
jns
add
adc
loop
idiv
sub
aad
shl
fst
clc
outsb
int
inc
js
mov
daa
sarl
pop
call
movsl
adc
loope
dec
xchg
ljmp
and
lahf
or
clc
cwtl
ror
and
mov
movsb
cmp
fsubrl
subl
xchg
mov
outsb
lods
or
xchg
xchg
cmpsb
outsb
lods
xor
testl
mov
test
or
cmpl
not
push
mov
jb
pop
outsl
out
in
sub
sarb
mov
les
addr16
and
pop
and
sub
icebp
std
mov
fcmove
xrelease
xsaveopt
nop
pop
ja
push
fstps
xchg
push
in
sbb
xchg
cmp
push
popa
hlt
arpl
adc
mov
pop
roll
xlat
mov
mov
pop
push
xchg
pop
sub
inc
pop
and
test
add
lea
sbb
out
jns
add
sub
push
jmp
mov
addr16
lret
mov
hlt
jmp
mov
fsubrl
lods
mov
dec
scas
lods
aas
push
inc
push
lahf
scas
or
sbb
leave
aaa
pop
push
fs
mov
daa
int3
in
and
out
in
jnp
adc
cmp
mov
cltd
push
jae
xchg
inc
lods
inc
ror
icebp
push
mov
ljmp
sub
int
stos
dec
cld
lea
push
inc
cmp
sti
call
xchg
mov
roll
iret
out
das
or
push
pop
cmp
lcall
lods
pop
pop
sbb
mov
faddl
pushf
pop
sub
jo
pop
xor
scas
les
push
mov
aam
adc
mov
in
pop
xor
les
mov
clc
sbb
pop
mov
cwtl
sub
scas
inc
repz
xlat
xchg
aaa
xchg
or
hlt
shlb
and
ljmp
pop
adcb
sarl
sahf
and
leave
mov
cmp
frstor
pop
jmp
mov
fwait
in
aaa
sahf
in
lock
xchg
out
mov
lock
stos
std
incb
inc
fistpl
xchg
mov
cmp
push
stc
pop
jnp
div
cld
mov
push
pop
cmpsb
cmp
popa
mov
aas
in
fidivrl
cld
sub
adc
jge
out
lock
fsubrl
mov
loop
xchg
pop
adc
cmpsl
mov
orb
push
and
xlat
call
pop
push
std
adc
sbb
mov
in
jge
mov
leave
jp
dec
xchg
jp
push
aam
shrb
data16
loopne
loop
sbb
dec
pop
xor
test
sub
dec
imul
mov
xchg
push
push
aad
jg
jle
cmpsb
lahf
bound
lds
imul
jne
xchg
imul
cmp
mov
inc
fucomp
out
xchg
add
rolb
mov
push
gs
push
xor
mov
mov
or
lcall
popf
push
decb
loopne
cmp
addr16
and
unpcklps
pop
lea
add
jae
in
lahf
lret
or
xchg
dec
cmc
nop
cmp
inc
xchg
addps
push
movsb
mov
pop
and
xchg
xchg
int3
xchg
loope
and
std
adc
cmp
or
dec
adc
xchg
stos
jg
in
insb
out
addb
sub
jp
jbe
xor
jmp
lret
jne
mov
fidivl
or
es
cld
pushf
dec
xor
and
lods
lods
mov
dec
mov
mov
aam
imul
push
jbe
xor
lret
xor
add
nop
rcrl
add
arpl
jb
lahf
cli
ret
adc
sar
nop
pop
dec
addb
aas
cmp
dec
cmpsb
jl
add
push
subb
add
scas
insb
push
and
arpl
lahf
xor
scas
lea
push
out
push
xor
jbe
icebp
mov
mov
add
jge
loope
ss
iret
sub
lock
sti
inc
add
loope
or
xlat
pop
jmp
mov
lds
test
in
in
add
adcl
xlat
lds
jns
loop
lods
dec
mov
add
jbe
daa
mov
jnp
aad
sbbl
and
dec
divb
adc
and
mov
xor
dec
jge
sarb
push
mov
rolb
jo
xchg
adc
fs
hlt
sahf
cld
xor
sub
push
jne
ja
dec
pop
in
push
xor
mov
scas
mov
andb
and
mov
cmp
push
dec
mov
dec
adc
cs
out
push
fcomps
cmpsl
fadd
stos
mov
sub
cltd
sbbl
pop
std
loop
cs
adc
jp
ret
ret
mov
mov
sub
mov
xchg
hlt
loopne
mov
aad
in
gs
xchg
jmp
pop
cs
outsb
jecxz
mov
cmpsl
stos
dec
fistps
jge
fmull
das
adc
mov
or
sub
inc
mov
pop
ljmp
pusha
out
int3
aad
sahf
inc
std
pop
inc
sbb
icebp
in
inc
mov
loop
int3
xor
cmpsb
pop
dec
jbe
mov
cmc
lods
les
sbb
mov
int
xor
sbb
mov
push
dec
dec
mov
frstor
or
adc
or
popf
jecxz
cmpl
cmp
mul
repnz
jnp
mov
lcall
cmp
mov
rorl
push
mov
adc
jno
jns
pop
xchg
fcmovbe
jns
jmp
testb
mov
das
and
lods
mov
aad
das
imul
jmp
out
push
and
lret
aam
push
xchg
cmpsl
or
leave
lds
test
outsb
in
jae
xchg
dec
pop
ret
jae
test
aaa
push
cmp
mov
rcrb
mov
ss
xor
add
hlt
mov
jl
lds
inc
jbe
addr16
in
insl
cwtl
inc
fsubs
sbb
mov
fmull
mov
in
cltd
das
xlat
jmp
mov
sbb
sbbl
or
pop
jg
dec
jp
pushl
push
push
jmp
sub
push
add
sub
inc
push
stos
or
push
push
adc
out
and
arpl
neg
rcr
divl
sub
or
dec
xor
stos
aas
stos
pop
sbb
cltd
xchg
jo
mov
ret
out
lods
pop
mov
scas
xor
and
xor
jb
pushf
mov
mov
cltd
mov
sbb
jecxz
je
pushf
and
pushf
push
push
sbb
mov
sbb
je
cwtl
fisttpll
in
cmp
push
test
xchg
negb
cmp
imul
into
dec
popa
mov
stos
fsubrp
sub
mov
fcmovu
inc
xchg
cwtl
bound
cmp
cmc
and
lret
je
adc
mov
add
pop
or
cmpl
jb
and
les
scas
test
inc
addr16
repz
add
jg
add
ss
cmp
xchg
sbb
test
add
xlat
sbb
popf
mov
push
call
inc
mov
dec
dec
mov
sub
loop
mov
xlat
or
jnp
in
mov
sbb
rcl
outsl
jg
outsb
or
repnz
pusha
sbb
ja
cwtl
mov
push
and
out
aad
test
fsubs
mov
xchg
sub
dec
out
xor
imul
filds
loope
ret
dec
mov
or
sti
xor
mov
stc
push
lret
pop
insl
iret
out
add
mov
xchg
xchg
dec
js
sbb
scas
mov
pop
inc
cmp
mov
dec
popf
adc
roll
loop
add
rclb
pop
aad
movsb
test
fnstsw
jge
lahf
imul
sub
in
push
or
xor
sahf
cwtl
fstpl
test
notb
jo
jl
stos
inc
push
ja
ss
sbb
mov
add
shl
inc
cmp
mov
test
sub
mov
inc
notl
pop
les
adc
mov
mov
inc
cli
sub
or
push
imul
imul
push
in
scas
sbb
cmp
fidivrs
jmp
sub
clc
std
push
pop
inc
and
sub
fisubs
jge
xor
fcoms
pop
add
in
scas
lds
add
ds
mov
pop
leave
xchg
dec
inc
mov
xor
mov
push
sbbl
inc
insl
loopne
push
cli
xor
jl
jl
pop
arpl
imul
dec
movsl
ja
and
jmp
mov
fisttpll
mov
xchg
cld
mov
mov
out
pusha
or
mov
sub
int3
rclb
cmp
jb
push
loope
movsb
xchg
ja
inc
push
inc
lds
or
in
push
lcall
sub
pop
ret
add
outsl
cmpb
scas
leave
and
aaa
jmp
les
xchg
loopne
push
lock
repnz
imul
js
or
pop
stc
iret
and
add
bound
xlat
hlt
mov
cld
mov
aad
add
jge
negl
sbb
add
dec
adc
rcll
sbb
sahf
dec
aas
add
test
pop
mov
sahf
xchg
adc
hlt
movsl
fadds
push
repz
jecxz
in
and
adcb
gs
sahf
lret
mov
jge
mov
rolb
cmp
notl
pxor
inc
pop
jne
sub
clc
push
out
dec
sub
movsb
insl
xchg
sbb
jle
out
leave
popf
cltd
stc
sub
pushf
jge
addr16
cmpsl
xchg
test
leave
in
cmpl
dec
iret
popl
lcall
adc
loop
jge
jno
sbb
ja
xor
push
sub
cld
mov
cmpsl
call
jecxz
mov
jmp
pop
jno
or
ret
jmp
or
fidivl
inc
pop
pop
loop
js
add
mov
jno
aad
ss
adc
jecxz
or
loopne
ss
scas
inc
mov
xor
push
sarb
sbb
lea
mov
pop
pop
not
add
loopne
jmp
lcall
aam
mov
and
add
aam
and
outsb
fsubl
insl
cwtl
stos
mov
arpl
jne
dec
xor
jbe
dec
clc
and
aas
clc
enter
cli
test
outsb
mov
call
add
jge
out
and
mov
cwtl
iret
inc
outsb
es
aam
add
std
jae
addl
dec
and
jge
push
int
mov
mov
mulb
push
jecxz
inc
dec
mov
mov
ljmp
xchg
repnz
fdivrl
pop
stos
icebp
sub
movsl
lods
jbe
fists
icebp
push
adc
movsl
xor
fdiv
loop
mov
and
pushf
xchg
xorb
je
shrb
xor
mov
mov
test
mov
inc
mov
imul
es
pop
sbb
ds
or
iret
or
aam
sar
in
add
dec
faddl
jmp
sarl
decl
and
inc
jbe
adc
lret
mov
inc
scas
sub
pop
data16
sub
and
adc
gs
jge
repz
ljmp
mov
stos
cwtl
shlb
sub
push
adc
loopne
ds
jnp
dec
xchg
dec
xor
cmp
iret
push
sub
bound
xor
sti
push
addr16
inc
jle
mov
xor
mov
jnp
mov
xor
and
jg
les
cmp
je
or
mov
ds
in
adc
aaa
out
ret
lods
js
cmp
shlb
jae
ja
and
movsb
mov
ficompl
inc
add
scas
popa
sbb
pop
fldl
lods
out
cltd
push
pusha
into
add
repz
adc
adc
mov
and
and
icebp
jg
mov
cmc
add
sti
divl
cld
stos
jbe
in
xchg
lods
int3
fs
or
sub
inc
pop
sbb
xchg
inc
push
xchg
addr16
aaa
pop
mov
lock
or
ror
dec
cmp
je
push
loop
clc
les
pop
dec
dec
fistpl
mov
xor
xor
jle
mov
lahf
stos
sub
lods
arpl
lahf
mov
inc
and
xor
add
xor
decb
inc
mov
cmp
xor
fsubl
lret
mov
movsb
pop
and
ja
adc
dec
push
int
cmpsb
int
cs
sbb
push
mov
imul
movsb
stos
call
icebp
imul
push
xorb
nop
push
int3
leave
test
lds
lret
mov
sub
ja
or
pop
or
pop
push
cmp
cmp
pop
aaa
mov
push
ret
cmp
scas
popa
loope
adc
sahf
dec
mov
dec
sbb
les
pop
ret
dec
not
int
sub
mov
add
and
aas
test
dec
test
test
imul
xchg
cmp
and
dec
repz
jmp
mov
sub
inc
sahf
cmp
outsl
fisubl
mov
test
jl
push
sarb
cltd
jb
lret
or
mov
and
jle
lock
les
sbb
ja
in
pop
outsl
pushf
jno
mov
xorl
popa
or
push
cmpsb
mov
shlb
sub
imul
jl
push
inc
lcall
sub
xchg
mov
mov
lock
lods
mov
jmp
call
and
test
xchg
pop
movsb
mov
mov
fisubrl
mov
int3
dec
aad
andl
out
js
pop
mov
and
insb
mov
jecxz
mov
ficoms
stc
or
std
vunpcklpd
aas
ss
pop
fwait
lods
sahf
sti
xor
mov
js
jne
lahf
ljmp
pop
enter
xor
dec
cmpsl
rol
mov
fwait
and
ja
sub
jmp
mov
pop
nop
mov
inc
stos
pushf
bound
outsl
pusha
cmp
imul
sbb
mov
addl
cmpb
dec
stos
cmpsl
cmp
repnz
sarl
add
flds
and
out
jnp
inc
addr16
add
js
adc
std
scas
cmpsb
mov
mov
std
adc
cwtl
dec
and
inc
xorb
lahf
xchg
or
cmc
negb
out
push
add
cmp
roll
les
jle
aaa
dec
out
lret
jge
sub
mov
les
rolb
js
pop
xchg
fwait
xchg
jnp
xor
nop
loop
or
pop
popa
stos
cli
and
xchg
and
in
outsb
fwait
inc
loope
inc
pushf
icebp
xchg
cmc
inc
mov
dec
div
aad
sarb
xchg
inc
or
sbb
or
add
xchg
mov
rcr
shl
icebp
lock
mov
inc
add
adcb
inc
ss
and
inc
mov
xchg
fwait
stc
push
cmpsb
int3
xchg
or
ret
jno
test
push
movsb
push
outsl
jbe
jo
sahf
or
jecxz
xor
jle
mov
mov
bound
sub
mov
sbb
rcll
xchg
mov
mov
and
jl
repnz
cmp
xor
pop
xchg
mov
sbb
add
outsb
sar
mov
rcrl
and
lcall
mov
jbe
and
sub
cmp
aas
fimull
xor
dec
push
ret
cmpb
mov
sbb
dec
mov
push
mov
int
xor
fmull
xor
mov
shl
xor
aaa
jg
cmpsb
cs
push
mov
loopne
pop
aas
xchg
xchg
fldenv
stos
mov
add
fcoml
cs
push
inc
in
test
loopne
xor
enter
pop
sti
test
idivb
inc
out
jne
cmp
and
jns
or
jnp
out
dec
into
mov
jne
fisubrs
arpl
sbb
jne
scas
out
dec
mov
out
sub
xchg
and
push
clc
jmp
stos
repnz
jbe
xor
arpl
fldl
jo
sti
push
xchg
push
add
add
pop
dec
inc
inc
addr16
pop
add
or
mov
les
mov
mov
inc
jnp
out
mov
in
xchg
inc
out
out
fadds
cmpsb
sub
stos
jae
roll
push
mov
cmp
std
loopne
xlat
outsb
jmp
inc
pop
jno
jbe
push
sbbb
jl
in
testl
jge
rorl
lahf
cmc
cwtl
fdivs
and
test
sub
push
xlat
xor
pop
inc
dec
mov
cmc
push
mov
lcall
pop
push
cmp
or
pop
addr16
pop
test
or
xlat
sub
push
sahf
insl
aad
in
mov
sbb
test
inc
test
daa
ja
push
pop
std
pop
adc
sbb
mov
xor
bound
orl
outsb
jns
icebp
jp
adc
test
jne
mov
xchg
out
je
int3
outsb
xor
notl
pop
push
push
mov
leave
sbb
imul
mov
iret
in
pop
jnp
or
aam
and
sbb
aaa
aaa
mov
or
ja
and
lea
xor
popa
sarl
fadds
lods
out
adc
cmp
mov
das
aaa
mov
mov
sbb
pusha
test
or
mov
fnop
and
int3
push
rorb
add
xchg
jmp
mov
dec
or
mov
mov
pop
mov
or
fsts
jo
mull
test
sbb
popa
pop
call
jb
mov
jnp
mov
lods
mov
pop
pusha
push
or
pushf
out
sub
das
enter
mov
test
mov
decl
negb
popl
push
dec
xchg
and
xchg
fwait
mov
sbb
cli
mov
push
lea
lods
mov
cwtl
testl
je
es
jne
shrb
or
movl
movsl
push
or
xor
xor
test
mov
jo
dec
cmp
inc
stos
daa
outsl
pop
test
loope
mov
stos
cmp
sti
into
pop
push
adc
add
inc
fildll
imul
mov
ss
sbb
addr16
call
nop
sahf
and
loope
sbb
and
cmovae
imul
xor
stos
mov
sub
pop
arpl
cmp
jge
pop
push
xchg
add
mov
imul
aaa
xor
ret
inc
add
ds
sti
fsubrs
test
lahf
divb
popf
cmpl
cmovle
jae
hlt
lea
or
dec
push
mov
mov
test
or
lock
ja
lds
dec
sub
sbb
les
popf
sbbb
pusha
stc
lock
xchg
add
ret
pop
pop
xchg
loop
pop
or
outsb
fsubs
jb
out
push
call
adc
cmp
mov
lret
jg
sub
stos
mov
stos
xchg
add
sbb
sbb
imul
adc
movsb
cs
insb
push
sub
dec
int3
adc
add
adc
jae
lret
cmp
sub
lret
mov
stos
dec
idivl
int
test
call
adcl
rcr
aas
arpl
out
test
shlb
xchg
mov
mov
dec
sub
push
mov
addb
dec
ljmp
mov
lea
addr16
mov
dec
jle
adc
mov
mov
inc
lock
scas
nop
out
mov
in
xor
insl
jecxz
aam
adc
inc
jg
adc
and
mov
ss
leave
aas
stos
lret
xchg
cmpsb
imul
mov
dec
popl
cltd
xchg
les
sbb
pushf
sbb
test
cli
sbb
fnstcw
inc
pop
daa
add
sbb
xchg
and
aad
mov
js
cli
cmpsb
adc
or
je
adc
cld
mov
inc
dec
int3
test
cmp
mov
mov
jmp
test
imulb
mov
push
dec
je
mov
sahf
fsubrp
popf
ljmp
movsb
subb
out
daa
shrl
das
mov
sub
cmp
mov
movsl
cwtl
les
sbb
lods
jnp
popa
repnz
or
ret
out
sar
xor
mov
int
leave
jl
pop
imul
fldt
jae
fisubrl
jne
es
into
sar
ret
cs
lcall
cmc
mov
fiaddl
and
sub
cmc
fldenv
rcll
das
stc
fdecstp
repz
sub
lcall
sbb
or
ret
dec
stos
pop
negb
test
jne
ja
and
clc
pop
sub
loope
xchg
cmpsb
sarl
int
cmp
adc
and
insl
push
cmpsl
mov
aas
dec
sbb
fldcw
scas
out
xor
imull
in
push
xchg
add
xor
add
xor
loopne
mov
push
arpl
sti
and
icebp
push
out
xchg
fwait
sub
test
mov
xor
out
int
cltd
int3
fdivs
call
jmp
or
arpl
pop
and
call
pop
add
adc
nop
jbe
dec
jle
orb
popa
inc
iret
jecxz
imul
push
sbb
test
scas
cld
rolb
push
aaa
outsb
addl
or
mov
jmp
push
cltd
mul
mov
dec
mulb
jle
cmc
cmc
cmp
in
data16
add
shrl
mov
cwtl
mov
negl
outsl
mov
loopne
in
nop
jp
jno
jb
lret
push
in
sub
mov
lret
or
sbb
mov
in
aaa
scas
and
mov
scas
shrb
aad
popa
inc
mov
xchg
test
bound
cmp
or
in
aad
xchg
aaa
and
roll
leave
or
jae
sub
cs
rolb
pop
icebp
xor
cmp
push
ss
test
aad
mov
xor
cmpsl
fcom
sarb
cltd
dec
mov
xor
mov
push
out
mov
rcr
xchg
hlt
or
outsl
loop
sahf
push
fidivs
cmp
fmulp
dec
icebp
and
lods
xchg
loopne
sbb
xchg
xor
js
mov
adc
xchg
fldcw
push
push
aaa
inc
sbb
cmpsl
sbb
inc
inc
xor
popf
sahf
out
lcall
inc
ret
push
cmp
push
std
xlat
push
jnp
lods
xor
fdivs
pop
lcall
fcoms
inc
xchg
fs
xchg
in
add
xchg
pop
fisubs
pop
add
mov
adc
cmc
lock
scas
outsl
or
ja
aad
imul
push
lds
fadd
mov
lcall
dec
adc
or
imul
clc
rorb
data16
dec
daa
out
inc
xchg
jmp
sub
data16
adc
adc
rcll
clc
popa
notb
jne
and
daa
jle
mov
popf
iret
es
cmc
sti
lods
loopne
cwtl
jo
jle
pop
jns
es
mov
fwait
jge
outsb
cmp
fildll
mov
jecxz
sbb
pop
pop
jmp
or
scas
jns
movsl
jp
ljmp
movl
ljmp
sub
mov
test
sti
in
or
jecxz
dec
enter
outsl
gs
jge
ret
mov
movsl
lret
mov
pop
jns
mov
cmp
xchg
lock
fiaddl
and
xchg
mov
jecxz
dec
xor
out
inc
out
adc
push
sbb
adc
push
hlt
mov
aas
jae
scas
mov
in
jecxz
push
jns
hlt
mov
addr16
or
aam
mov
in
dec
mov
cld
mov
mov
bound
sahf
insb
sbbl
mov
mov
scas
sbb
bound
push
rclb
mov
sar
mov
mov
out
sbb
out
adc
fcmovnu
mov
push
xor
push
push
cmp
cltd
xchg
xchg
int
sbb
call
xchg
adc
inc
cmp
pop
pop
xor
fisubs
pushf
inc
rolb
sbb
imul
filds
xlat
add
or
cmc
movsb
filds
js
fs
data16
jp
testb
push
inc
ss
leave
xchg
gs
ret
mov
imul
fisttpll
pop
shlb
or
loope
inc
fistpll
or
add
je
mov
shlb
and
inc
jg
cmpsl
or
cmp
fs
ficompl
imul
jmp
adc
mov
lahf
and
mov
adc
mov
push
lods
add
and
or
jecxz
int
sub
jp,pt
imul
inc
and
push
push
inc
repz
mov
sbb
push
loopne
icebp
out
int
addr16
insl
mov
push
cli
fcoms
cli
sub
add
dec
mulb
mov
pusha
loope
movsb
insb
and
arpl
ror
lods
shlb
in
lea
dec
push
mov
repz
and
pop
xor
in
mov
mov
and
add
std
xchg
inc
pop
rcrb
mov
add
sub
inc
stc
daa
clc
insl
arpl
sbb
mov
sub
cli
cmp
in
ret
push
lahf
sbb
push
out
sub
mov
jns
cld
in
push
xchg
xchg
cmp
addr16
push
inc
dec
or
mov
fdivl
pop
repnz
movl
scas
sub
xor
lret
xchg
xor
insl
mov
std
dec
ljmp
xor
sbb
jo
cltd
test
popf
fs
adc
jno
mov
mov
sub
shll
fiadds
enter
fcoms
push
jecxz
xlat
ret
mov
mov
leave
mov
inc
sahf
das
mov
mov
sub
andb
sahf
dec
jae
and
mov
jb
rcrb
cmc
incb
pusha
lods
out
sar
adc
mov
mov
and
xchg
ret
xor
sub
add
cld
pop
cmp
pushf
out
sub
arpl
mov
in
cltd
daa
sub
push
dec
cmpsb
pop
push
inc
or
sbb
dec
push
sbb
inc
pop
mov
pusha
cld
or
sub
fldl
icebp
or
mov
stc
aas
cmpsl
add
stos
aas
popf
or
sub
ss
lcall
pushf
mov
in
sub
leave
dec
mov
jno
mov
inc
mov
cli
mov
mov
pop
shrl
test
call
scas
rcl
das
sbb
sub
mov
bound
or
ret
fucomp
addl
adc
xchg
push
aad
xchg
or
cmp
cmp
mov
lods
idivb
mov
dec
xchg
lock
ljmp
sub
in
mov
mov
xchg
add
inc
leave
pop
mov
in
jecxz
push
sub
pop
pop
dec
dec
pop
or
push
xchg
fs
sub
dec
lods
lds
mov
and
sub
imul
mov
inc
sbb
lods
sub
xor
or
stc
mov
mov
mov
out
iret
pusha
or
mov
scas
or
cmp
out
mov
mov
xchg
push
cmpsl
iret
or
test
rolb
ret
mov
dec
ds
repnz
lret
in
cmp
add
add
add
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
push
add
add
add
mull
xor
insb
sub
orl
ljmp
jg
cmp
mov
dec
in
gs
inc
mov
mov
sub
cld
lds
rcl
jae
cmp
sub
clc
je
orb
into
repz
add
inc
leave
icebp
mov
lock
nop
and
jo
popf
xchg
jnp
xor
shrb
sahf
inc
movsb
daa
sbb
aam
sbb
jmp
fadds
imul
mov
lea
pusha
fidivs
mov
inc
cmpsb
push
addr16
arpl
lcall
mov
loopne
add
test
mov
ficompl
ror
mov
xchg
mov
in
js
mov
xchg
mov
and
adc
subl
cltd
or
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
