bound
cmp
fs
pushf
xor
push
int
sub
jge
jb
sbb
ss
iret
mov
xor
inc
inc
repnz
movsb
repnz
jne
fmuls
dec
cmpl
push
cmp
mov
push
hlt
mov
cmpb
data16
cmp
push
lret
rolb
mov
xor
not
cmp
arpl
iret
cmpb
cmpsb
jmp
cmp
scas
push
out
jo
pusha
pop
insb
adc
push
data16
jo
mov
pop
jmp
sbb
cmp
loop
jne
loope
loopne
pushf
shll
xchg
mov
adc
lds
push
lods
andb
pusha
xor
jp
jno
iret
fbld
lahf
xchg
jne
push
sbb
mov
out
jecxz
in
xchg
add
xchg
andb
les
xor
mov
mov
test
inc
insb
imul
and
lods
icebp
sbb
les
ds
sub
aas
stos
xor
xor
xor
idivb
test
loopne
cld
mov
shll
arpl
inc
inc
fimull
enter
cld
test
jmp
into
outsb
sbb
rcr
push
les
pop
sahf
mov
cmp
shlb
pslld
mov
out
add
cli
inc
jp
and
pop
negb
dec
inc
aad
ljmp
jns
push
mov
sub
fs
fcom
test
sub
fidivl
movsb
xor
dec
rclb
xor
outsb
mov
jp
enter
sub
adc
mov
enter
les
dec
cmp
inc
push
push
jae
repz
jo
jmp
sub
jns
push
gs
xor
and
sbb
cltd
loop
lods
mulb
out
daa
add
imul
fnsave
cmovg
jg
add
ja
cmp
xchg
xchg
dec
test
in
data16
inc
pop
sub
xchg
add
inc
movsb
lods
xchg
fistl
adc
test
mov
es
and
aaa
mov
push
ljmp
loope
xor
cmp
xchg
or
push
adcl
mov
xor
ret
adc
pop
xor
loope
adc
stc
gs
mov
dec
in
sar
popa
je
adc
lock
inc
addb
mov
mov
cmp
stos
push
sti
add
xchg
mov
xor
fisubl
jg
sub
je
into
jo
cmp
inc
fldcw
sbb
es
nop
sub
insl
and
mov
sub
adc
out
aam
stos
insl
and
insb
jp
push
pop
call
test
out
fdivrl
sub
dec
fidivs
jno
cmp
mov
xor
pop
and
inc
cli
xor
xor
dec
inc
subb
imul
or
ret
cmpsl
adcb
mov
test
daa
clc
arpl
out
mov
icebp
inc
xchg
popa
xor
js
jmp
clc
push
pop
nop
push
push
pop
pop
push
or
pop
nop
mov
test
call
push
jne
or
pop
clc
cmp
ja
push
jl
or
pop
stc
nop
push
pop
jb
and
push
mov
pop
push
inc
dec
pop
nop
cmc
cmc
mov
and
jns
jge
xor
xor
jp
jp
test
and
test
push
je
sub
pop
or
stc
push
push
mov
pop
pop
stc
call
test
and
push
ja
ror
pop
je
push
push
mov
pop
pop
stc
mov
movl
clc
and
mov
movl
push
mov
pop
clc
movl
je
cmp
stc
nop
dec
jne
lea
nop
stc
cmc
push
pop
add
jno
cmp
sub
or
ja
push
test
pop
push
push
test
pop
pop
push
cmp
pop
jae
push
cmp
pop
sub
push
add
pop
xchg
lea
mov
cmp
push
push
push
rol
pop
pop
pop
test
jnp
push
add
testl
jne
jmp
push
call
xchg
into
sub
xchg
push
in
cmpl
sbb
sub
xchg
cwtl
push
cwtl
cltd
outsl
pop
add
pop
add
loop
jecxz
sbb
in
sahf
or
dec
in
fimull
push
mov
nop
stc
jae
cmc
and
cmc
mov
xor
loop
jecxz
shll
lcall
jae
push
push
xorb
stos
inc
push
cmp
pop
push
or
pop
push
mov
pop
push
push
mov
pop
pop
sub
je
jle
rol
push
mov
xchg
movsl
mov
pop
test
add
add
sub
cmc
dec
inc
clc
stc
inc
push
movzbl
xor
ja
push
mov
pop
push
push
jne
test
pop
pop
push
or
pop
push
push
pop
pop
jns
or
test
nop
push
add
pop
test
shl
stc
loop
pop
test
stc
sub
dec
jne
push
mov
jmp
and
rclb
xor
fidivl
mov
scas
adc
je
aam
repnz
add
loope
and
inc
adc
clc
fiaddl
fidivrs
sbb
mov
cmp
fsubs
mov
mov
pop
jmp
push
call
and
cld
cmpsb
arpl
lock
call
js
push
mov
mov
mov
mov
lock
mov
pop
push
test
dec
mov
push
sbb
dec
stos
loopne
mov
sub
cmp
xchg
subb
xor
in
jge
jne
das
ret
inc
and
xchg
cli
jo
jmp
notb
sbb
nop
xor
aad
fdiv
and
dec
repnz
add
pushf
pop
mov
rol
mov
adc
in
insl
mov
cmc
push
sbb
pop
int
cmp
add
dec
and
ljmp
xor
pop
add
loopne
call
pop
loope
aad
inc
and
cld
mov
mov
pop
ffreep
pushf
in
push
xchg
or
nop
lret
mov
daa
lea
xor
or
cld
sub
call
or
dec
sub
test
cmp
push
jge
sub
sub
or
mov
dec
ret
add
nop
cmp
and
add
cltd
rolb
inc
cld
aam
cmp
adc
and
sbb
addr16
ret
in
in
jle
add
popf
add
cmp
dec
stc
popa
iret
lcall
out
fnstcw
sahf
mov
aam
pop
lods
mov
pop
pop
mov
jmp
sub
jle
jno
jne
add
sar
jl
push
or
pop
cmc
push
push
test
pop
pop
push
andb
mov
pop
rorb
inc
jo
jecxz
out
je
aam
lcall
pusha
adc
xor
ja
dec
in
dec
aad
jno
movl
out
jnp
mov
xorl
cltd
inc
iret
pushw
xor
loopne
ret
daa
ror
sub
dec
cmp
sbb
outsb
sbb
andb
loop
push
xchg
or
xorl
jo
lcall
jmp
dec
jmp
test
sarb
xchg
dec
jle
push
daa
popa
int
push
jns
adc
push
lock
mov
cmc
mov
int3
cltd
in
loope
std
xchg
mov
flds
andb
push
out
dec
and
lods
ss
repnz
addl
jmp
push
icebp
adc
leave
add
cmp
mov
xor
add
pop
jge
jg
cwtl
pop
xchg
xor
sbb
out
psraw
out
push
out
mov
loop
ret
jbe
jmp
popa
mov
mov
test
sbb
inc
dec
sbb
lds
outsl
imul
and
mov
jb
cltd
xchg
fwait
or
or
and
mov
and
rorl
pushf
in
push
and
outsb
scas
icebp
add
repnz
sbb
push
ret
ret
fucomi
jmp
insl
sub
pop
jnp
pop
adc
sbb
mov
in
sub
push
or
lods
xor
shlb
fimuls
fbstp
iret
add
repnz
sbb
push
int3
xchg
idiv
cmp
mov
add
add
stos
test
sbb
rcrb
loopne
inc
loope
test
jnp
mov
mov
and
and
add
shlb
pop
enter
adc
adc
fwait
adc
loopne
xchg
xchg
lcall
adc
jbe
loop
sahf
jecxz
cmc
or
inc
jg
dec
and
and
mov
pop
mov
push
inc
sub
add
adc
pop
push
xchg
leave
incb
es
pop
push
std
test
add
cmp
mov
jmp
pxor
adc
push
mov
outsl
sbb
sbb
ljmp
fidivl
jp
push
ss
or
cmp
jmp
dec
and
je
sub
xchg
mov
or
bound
fdivrs
cmp
das
fs
out
movsl
push
cli
cmpsb
fisubs
fists
add
shll
iret
adc
divl
repz
inc
lret
out
out
in
adc
fdivl
and
lea
mov
adc
test
out
or
add
cli
inc
jmp
dec
jp
outsl
jnp
xchg
and
pop
leave
aas
jp
gs
jns
mov
mov
cmpsl
pop
jmp
or
fisubrs
negl
sub
jo
iret
xchg
mov
mov
push
pop
dec
and
xlat
inc
jg
inc
aad
push
pushf
jo
popf
ljmp
pop
addr16
mov
adc
ret
jns
jmp
fs
popf
mov
jp
inc
jne
inc
sub
bound
dec
push
int3
orb
nop
call
mov
xchg
stos
mov
shrl
clc
test
rcrl
push
jmp
sbb
arpl
pusha
sub
xor
xchg
jo
dec
aad
jo
push
cld
enter
jnp
shll
jb
gs
inc
iret
jp
rcr
dec
mul
mov
in
sub
dec
cmp
adc
fsts
lahf
mov
mov
jne
mov
out
jae
or
add
sbb
cld
test
and
mov
mov
jg
xchg
dec
xchg
mov
sub
inc
dec
add
sbb
lock
adc
mov
shlb
xchg
add
mov
push
and
cmp
push
mov
andl
xchg
adc
into
cmp
mov
fbstp
pop
xchg
jmp
andl
xor
mov
push
lea
mov
out
gs
mov
loop
jbe
jmp
dec
mov
test
stos
cmc
inc
push
sbb
lds
insb
push
in
insl
imul
and
dec
or
lods
xchg
fisttpl
cmp
or
mov
mov
and
jmp
jbe
ljmp
lods
scas
jge
icebp
sbb
repnz
sbb
inc
ret
ret
fildl
jmp
insl
xchg
jmp
pop
jg
pop
ds
cmpb
adc
sbb
idivb
sub
in
sub
jl
out
loopne
inc
stos
lcall
ficomps
fbstp
jecxz
xor
mov
xor
pop
xor
push
loopne
pop
testb
mov
arpl
add
stos
test
sbb
sbb
dec
inc
loope
mov
mov
mov
mov
mov
and
mov
shlb
insl
out
cmc
cmp
jae
sbb
adc
cmp
mov
dec
sub
dec
ja
jne
loop
popf
jecxz
or
incb
and
mov
fcmovbe
data16
addr16
adc
dec
adc
ss
push
lcall
xchg
out
jmp
dec
and
insl
cld
imul
inc
cmp
push
in
jns
adc
push
iret
outsb
div
outsl
sbb
sbb
inc
push
shl
repnz
inc
stc
fildl
dec
add
les
lds
cmp
dec
sub
jae
sub
lcall
sahf
adc
les
cmp
cmp
shlb
stc
cmpsb
fidivrs
int3
fists
inc
mov
test
and
repz
push
leave
leave
jecxz
out
in
sub
fdivl
cmp
lea
mov
adc
adcl
outsb
or
add
or
ret
cli
pop
call
dec
jp
outsb
jnp
fwait
mov
and
jae
aas
jp
fs
lea
cmpsl
pop
dec
or
repnz
pushf
outsl
inc
shll
xchg
mov
mov
lock
cld
adc
push
sahf
jne
inc
xchg
cld
inc
aad
imul
ljmp
pop
sub
fwait
lea
adc
push
adc
gs
jns
call
fs
mov
push
mov
jns
inc
mov
inc
sub
jbe
cs
pusha
push
int3
sbbb
nop
cld
cmpsb
xchg
fs
gs
mov
mov
rolb
stos
lods
xchg
scas
rcrb
push
pushl
and
and
inc
popa
xor
xor
test
aad
outsl
imul
jp
in
jnp
out
pop
jno
xorl
mov
fistps
mov
stc
enter
dec
cmp
adc
adc
daa
lds
cmpsb
fwait
out
xchg
or
push
inc
xlat
sti
sub
cld
test
and
mov
scas
sahf
xchg
xchg
ret
xchg
dec
cmpsb
mov
sub
push
dec
add
sub
adc
mov
out
in
xchg
mov
xchg
add
mov
push
and
dec
dec
xchg
and
andl
fwait
adc
loop
xchg
mov
mov
mov
lods
fadd
pop
cmpsb
ljmp
dec
test
lock
push
mov
ret
jbe
call
test
xchg
fsubrs
dec
fldcw
sub
insl
imul
and
pusha
or
rcll
mov
fs
ds
es
dec
jbe
lcall
ret
icebp
sub
repnz
ds
ret
ret
fistl
call
insl
stos
ljmp
cmp
sbb
or
sub
jmp
out
push
out
hlt
or
scas
lods
xor
shll
fidivs
fbstp
testl
repnz
push
xor
push
hlt
test
mulb
cmp
mov
mov
mov
test
test
ds
test
loopne
inc
loope
roll
std
mov
and
and
and
sub
shlb
add
divl
sbb
mov
cmp
mov
dec
cmp
je
loop
pushf
jecxz
sbb
and
mov
fisttpl
jnp
sub
sub
pop
xor
bswap
sti
xor
stos
in
jmp
arpl
imul
std
test
and
cmp
addr16
pop
in
jns
adc
jle
iret
outsb
or
outsl
sbb
sbb
aas
push
shl
icebp
rcr
pop
clc
fildl
pop
add
les
lds
dec
aad
sub
jb
sub
scas
push
cmpsb
pop
mov
or
mov
mov
and
fdivrs
std
cmp
sarb
clc
cmpsb
fimuls
fists
pop
mov
test
cmp
adc
pop
xor
movsb
enter
jecxz
out
in
cmp
fdivl
dec
adc
adcb
orb
add
add
cli
outsb
out
inc
sub
dec
jp
insl
jnp
scas
lahf
bound
loope
and
xchg
aas
jp
fs
mov
xlat
cmpsl
pop
adc
or
push
sub
pushf
outsl
push
shlb
xchg
mov
lret
pop
adc
push
mov
xlat
inc
cmpsl
sti
inc
aad
push
popf
ljmp
pop
addr16
mov
adc
dec
adc
jns
ret
jns
out
arpl
lahf
fs
lds
mov
popf
aad
sub
mov
lret
je
int3
xorb
nop
adc
gs
rorl
aad
rolb
stos
lods
xchg
ret
pop
jmp
jbe
and
inc
popa
xor
xor
cwtl
pop
dec
aad
outsb
jg
enter
jnp
sti
lahf
pop
jno
xorb
xchg
inc
iret
mov
hlt
loopne
incb
daa
or
dec
cmp
adc
adc
cmp
xchg
jne
mov
out
fwait
or
sbb
sub
sti
inc
sti
cld
test
and
mov
scas
sahf
xchg
cmpsl
ret
mov
je
add
add
inc
sub
jecxz
adc
mov
or
xchg
lahf
adc
cmpsb
sub
push
jne
xchg
bound
es
andl
scas
unpcklps
mov
mov
rcl
pop
mov
addb
pop
lock
adc
addr16
out
lea
ret
ret
jbe
out
popa
rcrb
test
xchg
in
test
dec
in
imul
ds
imul
and
je
jo
aad
fisttpl
pusha
decl
arpl
das
fs
push
dec
es
dec
jbe
adc
pop
lods
jnp
icebp
inc
shl
sbb
cmp
ret
fldt
out
les
jmp
pop
ds
cmpb
cmp
sbb
push
ds
sub
ljmp
or
inc
stos
ret
xor
shlb
fiadds
add
icebp
mov
repnz
push
xor
push
or
idivl
enter
mov
add
test
test
int
sbb
sbb
je
loope
in
gs
stos
mov
mov
mov
scas
jnp
push
lahf
and
inc
inc
shlb
xchg
arpl
divl
sbb
mov
adc
aaa
fs
roll
leave
dec
push
in
dec
ja
jae
loop
pushf
jecxz
xor
incb
and
mov
inc
fisttpl
scas
sub
ds
adc
xor
push
ret
enter
mov
and
imul
test
and
cmp
cmp
ljmp
into
xchg
sahf
iret
outsb
pop
rep
sbb
sbb
aas
push
rorb
icebp
rcr
insl
neg
push
jb
pop
les
lds
popa
aam
sub
sub
ret
pop
leave
or
sahf
ret
xor
fdivrs
popa
rcl
in
movsl
push
mull
xchg
xor
mov
test
dec
int3
adc
xor
mov
jl
leave
jecxz
in
in
push
or
mov
pushl
cmp
adc
out
or
add
add
cli
and
inc
inc
pop
dec
jp
insb
jnp
ret
sahf
bound
cmc
test
mov
fwait
aas
jp
arpl
mov
mov
lock
cmpsl
pop
daa
lret
or
sbb
lcall
jo
or
pop
and
pop
dec
pop
jle
jae
inc
mov
addr16
pushf
lods
stc
popf
ljmp
pop
addr16
subb
mov
adc
dec
adc
lea
ret
jns
out
arpl
sahf
fs
flds
mov
mov
inc
sub
sahf
push
cs
mov
addb
xchg
fdivs
fdivrs
cld
rolb
test
cwtl
pop
std
mov
sbb
lahf
cmp
popa
xor
xor
lods
push
dec
aad
insl
xchg
stc
enter
jnp
setg
jg
inc
mov
fs
test
loopne
adc
daa
and
sub
dec
cmp
adc
adc
dec
ret
xchg
jne
mov
in
cltd
out
scas
or
sbb
ds
xlat
sti
push
cli
cld
test
xchg
xor
mov
mov
mov
daa
ret
add
add
push
daa
lock
adc
mov
or
xchg
mov
xchg
add
daa
push
and
jbe
xchg
es
mov
andl
ret
push
adc
or
xchg
mov
mov
mov
aad
lds
call
test
cmpsl
xor
mov
addr16
mov
out
mov
adc
jbe
out
popa
aam
test
xchg
add
dec
movb
insb
push
ljmp
jbe
and
mov
jo
jmp
decb
arpl
cs
dec
es
dec
jbe
es
in
push
int
lock
ljmp
dec
stc
inc
xchg
mov
mov
cs
iret
fstpt
imul
pop
mov
mov
nop
pop
ds
jno
mov
mov
addr16
sub
std
mov
xlat
test
les
cs
cmc
fwait
gs
aaa
mov
inc
xor
jo
fdivrs
lcall
pop
inc
mov
lahf
push
mov
pop
lods
inc
push
int
sbb
push
stc
mov
daa
es
xchg
add
test
jp
imul
arpl
rclb
cs
mov
std
lahf
sbb
jae
xchg
sti
sbb
xchg
adc
push
xchg
fs
mov
fs
push
sbb
mov
inc
scas
out
mov
adc
ret
sub
aad
mov
mov
femms
data16
les
insl
jmp
in
lods
scas
push
rorb
mov
sub
xchg
xor
mov
dec
jns
push
testb
iret
outsb
cmc
mov
or
sbb
clc
sub
and
pop
ror
neg
out
add
in
ljmp
rorl
sbb
out
xchg
mov
pop
pop
aas
jmp
icebp
shll
aad
bound
arpl
idiv
sbb
and
cmpsb
ficomps
std
mov
jno
shrl
and
sbb
sub
jecxz
das
mov
xchg
out
lea
push
fisttps
stos
adcl
scas
or
mov
daa
add
dec
mov
js
cmp
shl
xchg
mov
out
mov
scas
dec
mov
sub
jnp
enter
fwait
push
mov
xchg
insb
jg
sub
lcall
xor
xrelease
movb
inc
or
adc
aad
push
dec
and
addl
in
xor
lcall
arpl
push
in
mov
jp
subb
cs
pushf
push
or
addr16
imul
cmp
sti
inc
shlb
pop
cmp
std
sti
pop
or
into
test
sbb
pop
or
sbb
test
mov
or
mov
xchg
clc
enter
push
pop
and
ficoms
int3
inc
orb
pop
mov
test
fwait
xchg
daa
xor
dec
cmp
cli
push
in
lahf
mov
push
xor
mov
out
dec
adcb
push
test
lret
jno
push
in
out
and
and
lcall
push
iret
fwait
inc
sub
pop
int3
ljmp
cmpsb
mov
pop
mov
and
sar
sub
popa
into
fsubrl
dec
or
mov
int3
les
out
push
mov
ljmp
push
imul
push
cmp
push
addb
xor
pusha
adc
dec
sbb
out
push
inc
pushf
mov
loopne
in
fs
bound
js
xlat
roll
sub
sti
sti
testl
sbb
pop
jp
mov
shll
or
sahf
pop
enter
call
and
out
push
imul
xor
inc
lea
xchg
sub
sbb
cmp
inc
inc
dec
ret
pop
xor
fmull
into
sub
cli
aad
ds
testb
popa
repnz
xchg
cmp
aam
lods
and
int3
ret
push
aaa
js
inc
and
out
sbb
jnp
cs
xor
ja
cltd
bound
mov
pop
mov
ss
xor
idivl
inc
cltd
mov
mov
mov
test
push
test
lock
mov
in
xchg
fcomp
xchg
fwait
add
lods
xchg
rcl
and
fildl
fisubl
dec
in
cmc
add
or
ret
mov
sahf
jmp
adc
or
cmpsb
into
inc
dec
ja
ret
xor
flds
xchg
dec
mov
bound
add
and
mov
pushf
pop
push
adc
xor
push
dec
fsub
lahf
stos
out
movsb
or
mov
mov
sahf
inc
iret
test
inc
sbb
inc
jns
icebp
enter
iret
in
sbb
cmp
lds
insl
movsl
int3
mov
mov
cmc
mov
mov
out
dec
fimull
clc
mov
cs
fisubl
pop
pop
int
mov
rcrl
inc
insb
cli
aad
cmp
shrl
jle
mov
add
lea
and
xor
adc
or
movsb
and
leave
jecxz
sub
cmp
push
xor
cmc
mov
sub
and
dec
or
out
push
in
add
sahf
xor
stos
in
xor
subb
cmp
jmp
cmc
test
mov
xchg
cmp
pushf
adc
pop
xchg
cmpsl
test
cmp
lcall
cwtl
ret
mov
or
mov
adc
fs
out
cld
movsb
jb
xchg
inc
sub
mov
push
mov
sub
lahf
adc
stos
jmp
jb
je
imul
sbb
xchg
movsb
jb
dec
jne
scas
jns
in
push
cmc
shrb
adc
add
cmp
ss
dec
enter
enter
test
xlat
jge
imul
jmp
push
nop
mov
adc
in
jno
cmp
mov
lcall
mov
xchg
sub
push
adc
pop
repnz
outsb
mov
mov
icebp
loopne
mov
inc
dec
shl
insl
dec
lcall
sbb
shlb
or
negb
outsb
ljmp
push
jecxz
mov
shll
cmc
push
test
popa
arpl
or
mov
xchg
push
daa
imul
nop
ljmp
mov
or
sbb
or
push
stc
xor
ds
mov
dec
imul
mov
fnstcw
jp
mov
les
shll
hlt
imul
add
xor
bound
in
jb
nop
scas
dec
out
leave
fbld
les
cmp
cmpsb
outsb
jne
jg
outsb
cmpsl
and
xchg
in
data16
jns
xchg
sbb
inc
jmp
call
pushf
ret
add
xor
rcll
add
pushf
out
fsubr
and
add
mov
ret
xor
test
adc
lcall
std
add
cmp
pop
add
jo
movsl
add
popa
iret
and
ret
pop
xchg
js
sahf
sbb
jno
sub
jecxz
outsl
inc
inc
or
fstpl
xor
mov
sbb
adc
icebp
movsl
cmp
mov
cld
push
in
fwait
loopne
call
mov
inc
fnsave
leave
add
or
add
and
sbb
cld
out
es
mov
subps
popf
scas
push
test
es
ret
pop
dec
or
push
in
adc
push
data16
aas
pop
add
dec
test
and
xchg
leave
dec
push
cs
cli
dec
mov
add
lret
xlat
push
leave
pop
mov
mov
and
mov
movsl
pop
push
jne
scas
mov
je
jae
xchg
mov
pop
cld
call
lods
or
cmp
std
sti
iret
and
jns
lea
call
cwtl
mov
push
and
subl
push
scas
jns
dec
cmp
and
pop
xchg
mov
outsl
jg
sub
jae
pop
clc
std
nop
pop
sbb
lods
cmp
mov
daa
ret
rcll
cli
push
cmpsl
pop
test
cs
xor
and
add
ljmp
and
xor
daa
and
enter
mov
sti
imul
jno
sub
jb
std
cmp
and
inc
movsl
sbb
das
and
test
ja
jb
mov
notb
bound
mov
push
loop
cs
push
dec
out
test
dec
pop
les
shlb
aad
jb
sbbl
idivl
stc
js
adc
mov
mov
test
out
pushf
arpl
jmp
repnz
aam
ja
jp
cmpsb
mov
nop
mov
dec
mov
cmpsb
xchg
cmp
xchg
cmp
adc
xlat
out
and
sub
pop
movsl
lret
lret
dec
dec
jl
lahf
cmc
sahf
loopne
mov
xchg
dec
test
pop
cmpsb
pusha
es
adc
cmpsb
jecxz
popf
cli
xchg
pop
cmp
mov
lods
push
pop
sub
test
mov
sub
daa
aas
inc
jp
fs
mov
mov
inc
mov
adc
repnz
mov
push
dec
test
pop
movsl
mov
out
push
mov
pop
or
jg
mov
sti
in
xchg
inc
inc
scas
inc
or
jp
aaa
outsb
nop
divl
jmp
sub
jne
aas
sahf
xchg
mov
notl
add
add
adc
loopne
sub
mov
add
loop
jl
push
mov
inc
jbe
adc
cmpsl
scas
xchg
es
adc
dec
lret
pop
mov
push
dec
repz
shll
imull
push
lds
xchg
lret
sbbl
aam
dec
rcr
pop
ja
lock
aam
in
pop
inc
in
xchg
sub
push
int3
xor
ds
cmp
imul
xchg
repnz
dec
leave
ror
adc
test
addl
dec
lods
jecxz
xchg
mov
lcall
lahf
arpl
inc
inc
ja
test
jle
insb
std
jmp
adc
cmp
ret
ja
xor
push
sbb
xchg
dec
ret
and
mov
lea
or
stos
lahf
jl
xchg
sub
in
test
cmp
mov
and
insl
sbb
adc
out
xor
or
xchg
mov
cli
xor
mov
fwait
clc
outsl
call
mov
add
add
mov
test
out
and
mov
add
fcmovne
xchg
fwait
cmpsb
or
or
fwait
sbb
or
mov
push
push
push
dec
sbb
pop
and
inc
dec
lods
aas
adc
or
jecxz
imul
popa
jno
sahf
xor
sti
mov
cs
fdivl
inc
mov
mov
pop
mov
add
dec
adc
out
jns
loopne
add
jnp
mov
mov
inc
shl
ljmp
xchg
icebp
test
mov
xchg
add
ljmp
outsl
sti
int3
or
in
pop
push
cmp
and
add
sti
aam
hlt
popa
jo
cmp
mov
sbb
jnp
dec
inc
movsl
xchg
mov
cmp
test
fdivrs
faddl
sub
ja
and
pushf
test
into
dec
cmp
dec
pop
mov
adc
popa
fisubl
xor
and
jmp
push
shll
add
andl
sbb
pop
call
mov
pop
push
mov
and
stc
pop
addr16
outsl
in
xchg
jle
jnp
lods
daa
dec
inc
aam
das
xchg
mov
shrl
std
mov
int
sub
xor
andb
lret
cmp
adc
adc
xchg
or
pushf
xlat
dec
lods
adc
inc
or
sub
xchg
ds
cmc
popf
outsl
js
xor
pop
shl
in
xchg
xchg
jae
add
aam
lock
ret
dec
lds
jno
dec
push
push
mov
stc
std
stos
test
ja
dec
imul
rcrl
imul
movsl
stc
sahf
imul
out
push
or
and
xor
push
bound
add
movsl
push
out
mov
out
pop
adc
pusha
mov
lea
mov
fisubrl
cmp
mov
inc
test
jg
jno
xchg
iret
sbb
xchg
rorb
arpl
fists
xchg
cwtl
or
fs
movsl
add
ret
xlat
mov
dec
adc
sub
and
mov
incl
jb
lods
loopne
fdiv
jo
cmp
std
test
fsubs
gs
insl
pop
mul
jmp
hlt
pop
sbbl
icebp
jecxz
lret
stc
mov
push
sub
nop
test
call
int3
jo
jp
mov
sbb
orb
or
lds
movsb
xchg
data16
mov
jmp
mov
add
sbbl
add
sbb
or
add
jp
pushf
mov
cmp
add
jl
lahf
jg
icebp
in
dec
fistpll
mov
or
and
jmp
test
out
push
movsl
movsb
int
rorb
in
out
stos
lods
add
cmp
pop
data16
xchg
int3
ljmp
mov
popa
arpl
subl
sbb
xor
test
cmp
int3
repnz
xor
inc
cmp
fs
push
dec
imul
scas
push
mov
and
icebp
xlat
add
fldt
pop
out
es
mov
loope
mov
mov
popf
mov
jae
stc
mov
xchg
popf
aam
mov
pop
jge
jbe
decb
jge
and
adc
rcll
insl
dec
mov
test
adc
in
dec
stc
daa
es
lea
dec
push
xchg
cmp
pusha
enter
fwait
mov
or
repnz
insl
adcl
cli
popf
iret
adc
testb
sbb
inc
ss
lods
mov
add
loop
sbb
gs
add
cmp
inc
in
xchg
jno
add
sub
int
sahf
ror
out
icebp
bswap
sbb
cwtl
mov
sahf
loop
subl
cld
jo
mov
or
cmp
cmp
scas
or
jnp
imull
sub
push
jbe
adc
xchg
notl
hlt
inc
mov
lahf
movsl
scas
and
cmpsl
sbb
stos
shlb
pop
cmp
mov
addr16
push
dec
in
arpl
cmpsb
add
push
xchg
cltd
xchg
and
xchg
mov
outsl
dec
movsl
push
adc
xor
adc
inc
adc
pop
xchg
add
inc
sarl
shl
xchg
xchg
lods
pop
cld
mov
pop
out
mov
insl
lret
stc
fidivrs
loope
int3
push
icebp
dec
dec
sub
lcall
mov
or
je
data16
rcrb
jae
mov
subl
and
int
int3
aaa
std
adc
sub
mov
xchg
inc
mov
adc
inc
mov
cmc
popf
ljmp
rol
dec
adcb
mov
pop
sbb
xor
xchg
fbld
cmpsb
mov
add
out
das
mov
sub
sub
or
and
mov
and
push
pop
enter
outsl
mov
push
push
popa
out
fcoms
jl
jle
es
shl
mov
adc
ja
jp
xor
sbb
rolb
sub
adc
jb
sbbl
inc
sub
xchg
insb
icebp
lret
cmp
ja
mov
xchg
fistl
ss
in
pusha
stos
sbb
stc
inc
mov
ds
mov
sti
xor
outsl
outsb
sbb
xor
push
mov
je
fstpt
sub
out
test
in
adc
or
xchg
pop
xchg
imul
sahf
mov
outsl
popa
jge
mov
aaa
ja
mov
dec
and
push
xchg
xchg
nop
mov
xchg
adc
movb
jmp
sub
xor
push
stos
cld
je
scas
xor
loop
es
mov
adc
fisubrl
stc
mov
ja
jecxz
out
call
push
xchg
mov
ret
push
in
sub
jmp
adc
gs
push
outsl
or
sbb
inc
mov
int3
popf
add
and
out
lods
xchg
scas
jbe
cwtl
pop
xor
inc
lods
dec
jmp
push
iret
jnp
out
repnz
rcrl
and
testl
das
push
dec
leave
jp
sbb
lcall
enter
push
and
mov
xor
xchg
pop
hlt
std
xor
lds
xchg
inc
push
xor
inc
ret
jg
jnp
enter
jnp
mov
or
inc
or
test
or
test
mov
cmp
add
shll
add
je
aam
mull
enter
xor
mov
adc
xor
daa
scas
int
insl
xchg
inc
or
jge
cltd
adc
or
insl
js
or
test
cmp
push
sti
outsl
cmp
aam
inc
dec
xchg
mov
pushf
roll
mov
jmp
js
ss
cmp
loop
lods
popa
clc
insb
adc
or
test
jno
int3
lcall
data16
stos
adc
or
idivl
in
cmp
jmp
xchg
ret
push
xchg
popf
mov
int
xor
fistl
ja
int3
icebp
and
pop
jmp
into
dec
movsl
dec
iret
repnz
movsb
pop
xchg
les
dec
sar
dec
inc
es
cmp
movsl
push
shrl
sbb
and
and
js
lods
std
iret
repz
sub
dec
fdivs
rcr
dec
sbbl
lret
push
into
add
pop
lods
js
mov
mov
push
je
std
jns
xor
imul
inc
ds
push
jp
loopne
sub
and
adc
fists
inc
mov
jle
pop
mov
lods
jmp
add
or
mov
repz
shr
mov
dec
adc
out
push
xchg
js
ds
adc
inc
or
sbb
xor
mov
push
dec
pop
mov
lret
gs
inc
xchg
pop
imul
stos
jmp
frstor
push
sarl
mov
aaa
cmp
xor
mov
std
cmp
jmp
aaa
jns
mov
pop
and
sahf
pop
gs
movsb
lock
adc
stc
push
mov
leave
pushf
mov
xchg
fmuls
repz
pop
mov
inc
lock
out
xchg
inc
fsubl
inc
sbb
in
insl
pop
orb
mov
cltd
inc
in
sub
lret
mov
and
sti
adc
xor
mov
lcall
fwait
loope
pop
cmpsb
aad
int3
mov
ds
hlt
xchg
add
lds
sub
adc
xor
nopl
sub
sub
int
xor
jmp
pop
das
inc
in
adc
lea
lods
ficompl
mov
cmpsl
cs
and
sub
mov
xchg
adcb
cmp
mov
movsl
arpl
inc
data16
negl
mov
xchg
arpl
push
xchg
adc
outsb
push
xor
or
cs
jbe
and
xor
push
lock
mov
mov
cmp
subl
sbb
stos
lds
mov
sub
mov
jbe
jb
pop
popa
jne
sahf
test
mov
andl
xor
nop
in
pop
rcrw
dec
lret
repnz
loop
xchg
call
pop
mov
xor
dec
cli
kmovb
ljmp
sub
pop
xchg
inc
xchg
lcall
int
sbb
mov
out
jno
mov
outsb
into
push
adc
mov
rcl
andb
and
es
jmp
fwait
lods
icebp
sbb
repz
or
lea
and
add
idivl
sub
or
cmp
mov
pop
sub
mov
cmc
out
addb
jnp
xor
iret
sbb
mov
adcl
lahf
imul
push
push
repz
push
insl
leave
inc
lretw
push
sahf
into
xorb
ds
adc
jle
mov
aas
setnp
dec
gs
mov
test
sbb
xchg
add
pop
mov
jmp
ds
sub
or
push
fcomp
xor
push
adc
decl
fucomi
adc
xor
scas
das
fistl
xchg
cmpsb
push
jl
dec
mov
xor
in
int
inc
daa
cmp
and
mov
push
mov
dec
daa
loope
mov
adc
or
pushf
test
insb
ss
fdivp
sub
scas
sub
sar
dec
sub
fs
mov
pop
push
dec
cmp
in
push
mov
or
jb
adc
gs
mov
fucomip
sbb
add
mov
inc
add
orl
xchg
jmp
cwtl
mov
movsb
addr16
lret
imul
cmp
imull
clc
xchg
jo
fidivrl
cli
pop
cmp
jnp
orl
out
mov
iret
in
imul
mov
sub
stc
sti
fildl
aad
in
pop
mov
or
sub
inc
xlat
mov
jbe
addr16
mov
add
lods
push
aam
xor
mov
orl
dec
js
dec
lds
stos
jne
pusha
mov
push
cltd
ret
mov
fs
sahf
xchg
loope
fidivl
jbe
daa
mov
hlt
rolb
add
shlb
lret
xorb
enter
cmp
and
mov
aaa
ja
pop
mov
mull
test
fwait
jo
or
fnstcw
xor
fwait
mov
push
aas
jg
loop
sbb
or
jecxz
mov
adc
pop
mov
dec
dec
or
mov
jb
push
xchg
cmpsb
sub
jle
and
js
xor
pop
fcmovnu
fsubrs
lods
cmpsl
jge
push
daa
lret
lods
movsl
mov
sti
adc
mov
and
xor
jl
nop
mov
sbb
andb
adc
add
dec
sub
fnstcw
sub
repz
popf
leave
jmp
inc
pop
xorl
pop
xchg
xor
xor
jge
lds
xlat
out
adc
jns
cmp
lock
subl
out
mov
stos
decl
xorl
popa
in
sbb
je
dec
jp
fs
mov
xchg
and
ja
mov
add
push
mov
push
sbb
and
clc
pop
or
loope
adc
jne
iret
orb
xchg
in
iret
sbb
je
lret
aaa
sbbb
adc
addr16
mov
outsb
fisubrl
repz
mov
addr16
jecxz
cmpsb
shlb
mov
and
jecxz
and
push
mov
push
ret
daa
icebp
lret
lods
and
cs
pop
negb
mov
jbe
push
sbb
loopne
adcl
pop
push
and
xchg
pop
imul
fs
rol
into
sub
sub
jg
push
das
shl
ds
dec
sub
xor
add
add
imul
push
sti
scas
movsl
sub
lret
or
mov
sbb
fwait
cmpsl
stc
push
sbb
je
dec
and
jbe
cwtl
mov
jno
cmp
test
mov
add
mulb
out
and
enter
or
movsl
imul
gs
negl
lret
rorb
cmp
fldl
test
aam
jnp
stos
ret
mov
insl
out
adc
int3
ror
leave
cmp
mov
ficompl
mov
inc
mov
xchg
add
sbb
sub
and
pusha
fimull
out
repnz
pop
dec
push
and
hlt
insl
popa
dec
pop
test
loop
xlat
dec
shlb
mov
cmpl
pusha
cs
les
xchg
imul
jecxz
mov
xor
stos
testl
aas
push
out
jns
push
pop
call
push
push
roll
jg
sub
shlb
and
ss
dec
mov
in
push
fucompp
sbb
rol
cmpsb
sbb
ret
pop
push
cli
popa
mov
xchg
pop
cwtl
xchg
imul
xor
cwtl
in
insb
xchg
sbb
shlb
popf
ljmp
pop
shrd
sub
test
push
ret
xchg
je
jp
xchg
lds
sub
push
fmuls
repnz
fmull
push
lods
pop
jle
jle
push
movsl
add
push
xchg
into
stc
je
out
gs
xchg
fcom
aaa
push
out
mov
andb
jmp
cwtl
pop
cmp
pop
adc
cmp
out
bound
icebp
xor
cld
repnz
shrb
xor
cwtl
pop
dec
icebp
xor
mov
inc
mov
jnp
pop
shlb
fcomps
hlt
lods
mov
repz
mov
dec
mov
adc
cmpsb
std
arpl
sbb
mov
ljmp
dec
std
and
sti
hlt
ja
mov
out
sbb
lret
sbb
add
xchg
pop
aas
push
cmp
sbb
mov
add
in
stos
mov
jo
mov
out
mov
cmpsb
test
pop
dec
xchg
mov
push
sub
aam
mov
mov
gs
pop
push
arpl
popa
lea
insl
arpl
popf
shll
out
mov
push
sub
mov
xchg
mov
jp
les
icebp
arpl
mov
mov
hlt
ja
ret
test
mov
sub
pop
aad
push
xchg
pop
mov
mov
dec
shrb
aas
xor
stc
loop
sbb
popa
lods
test
mov
lock
subb
and
stos
mov
adc
aam
push
adc
outsl
scas
icebp
mov
icebp
in
enter
in
ret
mov
fisubl
int3
mov
int
shlb
sub
nop
mov
shll
sub
mov
ret
inc
add
sbb
jg
push
aaa
mov
mov
xor
ljmp
jnp
lcall
clc
loope
and
stos
outsl
in
cli
rolb
lds
pusha
push
cmp
push
lahf
jl
negl
stc
dec
movsl
adc
fdivrp
push
addr16
lcall
jo
or
jae
adc
js
sbb
fwait
les
mov
sbb
mov
ja
mov
or
fs
std
pop
cmpsl
js
inc
push
call
into
and
adc
and
jbe
aas
inc
dec
cmpsb
ret
jb
enter
mov
mov
mov
in
lret
dec
lds
ljmp
pop
pop
in
jns
out
jns
inc
xchg
es
shr
outsl
in
xor
sti
aaa
push
xchg
pop
call
and
imull
sub
lds
add
movsl
jb
fcom
fs
dec
sahf
sbb
enter
ljmp
int3
mov
lods
mov
sub
fadd
rcl
out
adc
subl
in
push
arpl
into
and
iret
fsts
pop
cmp
dec
imul
or
fstps
jp
loopne
das
jb
add
pop
imul
sbb
mov
arpl
repz
test
sbb
pop
pop
mov
dec
test
mov
xchg
icebp
jle
mov
or
mov
xor
jecxz
and
clc
and
int3
mov
enter
lahf
jae
cmp
aas
dec
adc
movsl
fsub
cmp
jbe
mov
xchg
or
bound
icebp
popf
popa
add
scas
lods
xor
loop
jae
inc
enter
jbe
dec
aaa
xchg
ret
dec
mov
mov
arpl
lds
fdivrs
jecxz
leave
mov
cmp
lods
mov
mov
dec
and
dec
out
sbb
push
popa
mov
sbb
inc
cmc
xor
test
mov
addr16
sub
and
cld
adc
dec
xchg
pusha
mov
push
ret
sub
jl
neg
jecxz
mov
push
pop
jno
cmp
dec
scas
push
rcr
push
addr16
stos
nop
out
cmp
xor
push
mov
mov
rorl
pop
mov
sahf
xor
out
out
mov
fstp
xchg
push
cmp
rcll
repnz
or
jbe
sbb
jne
fstl
pop
testl
fcomps
stos
pop
jmp
insl
dec
or
mov
add
addr16
mov
scas
xchg
jne
jne
ss
jl
xor
add
cwtl
sub
add
jmp
mov
gs
outsb
pop
test
cmp
ret
xchg
push
inc
sub
mov
push
hlt
clc
xchg
aaa
and
or
mov
aas
les
fdivp
mov
jecxz
lcall
loopne
mov
jmp
inc
jo
test
hlt
or
xor
in
sbb
or
or
movsl
pushf
and
je
pop
ret
clc
cmpb
adc
xor
adc
jno
icebp
cmp
sub
lahf
in
cmpsl
daa
pop
dec
sahf
cs
cltd
and
loopne
ss
cmp
pop
hlt
roll
lea
push
pop
mov
sarl
xor
loopne
fstpl
xor
lcall
mov
inc
rorb
movsb
scas
ret
fidivrl
push
in
idivl
imul
jmp
fsts
clc
stos
pop
and
test
push
repnz
arpl
jg
jbe
pop
arpl
xchg
sbb
test
mov
or
loope
imul
in
or
jle
xchg
adc
leave
lret
fsts
test
test
sbb
inc
mov
pop
fildl
jbe
adcl
jns
push
adc
movsb
roll
jns
inc
test
and
cli
adc
imul
jbe
inc
repz
inc
shrb
jne
and
push
push
in
jns
outsb
das
lea
add
mov
xchg
andb
sti
push
jo,pt
testb
cmp
pop
adc
in
ficoml
cltd
fisttps
cmpsb
mov
int
add
cmp
push
mov
mov
adc
cmpsb
sbb
aam
std
stc
jno
lret
iret
aad
jmp
sahf
or
repz
mov
mov
cmpsl
fidivl
push
xchg
dec
jae
inc
inc
mov
aam
adc
cmc
sahf
ret
out
sbb
in
das
add
clc
pop
pop
ret
jns
and
test
mov
cmp
mov
xchg
lds
insl
push
adc
cmpsl
fdivrp
lcall
jo
mov
pop
jg
out
pop
cmpsl
movsb
or
ficomps
enter
aad
push
in
ja
in
mov
mov
fmul
addb
jl
pop
adc
xchg
or
jg
sub
jmp
subl
movsb
nop
push
js
lds
mov
rol
sub
adc
callw
push
sub
loop
pop
hlt
paddusw
test
mov
dec
add
imul
sub
popa
mov
imul
mov
out
inc
fs
scas
iret
mov
xchg
das
movsl
xchg
pop
hlt
dec
add
sub
pop
pop
pop
clc
pop
pop
pop
mov
iret
inc
sub
mov
not
inc
mov
inc
and
lock
daa
out
xlat
jne
insl
scas
mov
mul
push
ja
int3
adc
stos
sub
ds
loopne
add
clc
inc
les
jae
repnz
repz
sbb
shr
pop
push
and
imul
add
mov
sbb
mov
add
adc
adc
adc
add
or
xchg
pusha
push
js
pop
inc
inc
xchg
jbe
sub
mov
mov
mov
and
push
jg
xchg
pop
sub
inc
movsl
jl
nop
mov
aas
sahf
bound
xchg
sbb
adc
lea
add
mov
sub
ret
jbe
sbb
xor
mov
cli
or
xchg
out
mov
adc
loope
mov
sbb
adc
mov
dec
dec
cmc
or
push
scas
sub
xchg
pop
jne
outsl
std
and
cmp
jno
mov
jb
faddl
dec
and
dec
outsl
mov
mov
cmpl
bound
xchg
mov
jae
roll
pop
sbb
aam
flds
sub
and
inc
out
pop
enter
or
xor
stos
and
sub
mov
pop
pop
bound
lret
sbb
jge
divb
mov
addr16
inc
pop
xor
and
rcll
out
mov
jno
ja
jbe
int3
hlt
add
fisubl
cmp
pusha
outsl
add
outsl
pusha
out
es
dec
scas
or
sbb
push
ss
cmpsb
mov
mov
loop
sbb
xor
add
xchg
or
inc
jno
or
xchg
pop
js
adc
cmp
mov
out
js
dec
sub
dec
cli
fwait
loop
pop
fwait
dec
movsl
imul
insl
jno
xor
jnp
inc
or
cmp
outsl
loop
dec
lcall
outsb
jl
adc
call
pop
arpl
cltd
sbbl
dec
cmc
test
xor
dec
mov
pop
and
daa
xor
dec
lcall
push
pop
out
and
cmp
lret
fdivrs
daa
inc
rolb
xchg
out
sahf
shrl
cmpsb
pop
mov
pop
add
dec
cmpsl
add
repz
dec
popf
inc
repnz
dec
cmp
enter
outsb
andb
jl
in
mov
mov
push
xor
out
mov
mov
adc
jae
gs
xchg
mov
sbb
lds
test
arpl
pop
or
jg
addr16
aam
cmpsl
pop
mov
pop
fwait
inc
adc
push
ret
iret
sbb
pop
les
mov
std
inc
aad
pop
pop
pop
mov
and
mov
outsb
pop
lods
xchg
cwtl
mov
sub
sahf
bound
xchg
test
movsl
and
cmp
inc
cltd
adc
lods
mov
mov
inc
int3
add
lret
sbb
js
call
ret
addr16
rolb
pusha
inc
pop
adc
inc
xchg
xchg
cmp
bound
movsl
sub
jbe
or
and
cld
lods
lea
mov
pusha
push
aas
mov
xor
lcall
mov
inc
xlat
insb
xor
ret
repz
test
jbe
inc
orb
or
dec
je
adc
lcall
and
js
sub
mov
push
push
push
ja
mov
pop
ret
ds
mov
pop
push
push
int3
and
jb
popf
cmp
push
jl
mov
and
mov
mov
cmp
add
das
test
pop
adc
lahf
add
pop
mov
xchg
xor
jno
fsubrl
inc
mov
push
sbb
pop
out
js
cmp
imul
ljmp
cmpb
sub
daa
push
xlat
pushf
dec
outsl
mov
push
jnp
in
mov
hlt
push
adc
xchg
icebp
mov
add
mov
imul
int3
jge
jp
cld
cmp
inc
aas
push
dec
sub
cmc
scas
sbb
push
mov
aas
es
mov
mov
rcrb
leave
push
sbb
iret
cmp
imul
or
lds
jle
ret
dec
push
mov
mov
insl
scas
mov
aaa
jp
rcl
push
sbb
xchg
nop
dec
xor
dec
and
sbb
aas
clc
jb
pop
loop
fwait
rorb
lds
xchg
push
or
test
or
fbstp
mov
pushf
dec
mov
add
xor
cmp
icebp
ret
mov
js
dec
pop
sbb
stc
fs
fidivrl
mov
xchg
mov
mov
popa
cmp
shlb
xchg
cmc
jae
mov
pop
jb
xor
and
push
rcrb
pop
cli
stc
enter
js
nop
and
jo
in
mov
bound
mov
push
lret
insl
cmp
pop
mov
mov
aaa
pop
jg
scas
inc
mov
fisttpl
rolb
clc
cmpsb
xchg
inc
xchg
sahf
mov
jmp
loope
jl
add
dec
xchg
xchg
pop
mov
sbb
sub
dec
test
push
and
dec
cwtl
pop
in
rcll
or
sub
mov
mov
pop
cmp
andl
dec
lret
jo
cmp
pop
push
dec
pop
pop
and
pop
lret
ss
fists
sbb
and
cmp
jmp
mov
xchg
enter
adc
jo
inc
aam
hlt
in
fsubrl
imul
mov
movl
cli
rcrl
rorl
pusha
jnp
and
bound
xlat
mov
cld
pusha
dec
mov
ret
mov
xchg
mov
in
movsl
pop
lcall
pop
out
nop
cmpsl
fdivl
sti
mov
pop
lahf
inc
push
int3
mov
push
mov
sub
into
mov
xor
testb
mov
push
sub
repz
cs
sub
jns
pop
repz
sbb
and
cmp
mov
sub
mov
pop
cs
dec
xchg
sbb
aaa
inc
xchg
repz
jge
mov
aad
pop
or
push
jp
pusha
cltd
xchg
pop
push
push
int3
out
and
fiaddl
repz
dec
mov
jle
pop
pop
jle
aaa
test
mov
sahf
lds
sbb
std
xor
cmpsb
mov
repnz
sub
orl
lret
adc
imul
push
roll
scas
push
jbe
xor
sbb
cmc
pop
dec
push
lods
jnp
add
bound
add
outsl
pop
dec
lahf
sbb
push
imul
xchg
dec
in
xchg
aaa
mov
mov
out
inc
hlt
adc
pop
lods
jne
out
push
imul
dec
inc
sbb
fldcw
push
ss
or
leave
pop
lahf
addb
aam
imul
push
mov
inc
mov
pop
mov
xor
xor
pop
les
cmp
lea
adc
ret
popa
xchg
ret
repz
outsb
lret
ja
gs
daa
mov
idivl
adc
xchg
sbbb
push
sub
xchg
xor
test
mov
orb
push
stc
mov
xor
aam
or
stos
and
ja
lods
adc
js
pushf
outsl
jb
sti
out
movsl
shr
rolb
mov
sub
cmp
adc
cmp
shlb
popf
dec
push
je
sbb
xor
push
pushf
sub
sbb
in
pop
test
pop
fisubl
mov
and
cmpb
xor
ljmp
jne
xor
xchg
scas
and
dec
inc
loope
fstps
dec
repnz
hlt
js
loope
lods
fsubrl
jnp
popa
mov
mov
sub
imul
cmpsb
call
addb
mov
xchg
into
int3
and
push
les
or
lahf
je
lahf
adc
stc
lods
sbb
out
xchg
mov
ret
loope
xor
mov
dec
pop
push
inc
adc
enter
cld
ret
inc
push
pop
out
lds
xchg
inc
mov
and
popf
iret
mov
pop
cmp
sub
push
into
xchg
pop
inc
push
sub
outsl
fdivl
jnp
arpl
int3
dec
icebp
inc
fmuls
out
xor
repz
dec
repz
scas
test
cmc
mov
and
dec
dec
mov
sti
mov
mov
dec
push
loopne
pop
inc
pop
lret
fdivrs
pushf
add
shrl
sbb
dec
popa
mov
pop
or
sub
ret
adc
adc
cwtl
push
pop
add
xor
or
fwait
push
and
scas
inc
popf
add
push
push
dec
in
sbb
or
inc
iret
pop
mov
and
int
in
sbb
mov
jp
xchg
ja
cmp
dec
test
mov
pop
cmp
icebp
arpl
in
dec
xor
or
pop
sub
mov
adc
gs
xor
fucomip
rcl
pop
test
insb
ja
mov
aad
push
popf
xchg
inc
adc
ficomps
arpl
xchg
lods
nop
mov
movsl
pop
jnp
dec
mov
adc
sub
mov
sbb
inc
aad
test
aam
xchg
jl
jl
fdivrs
inc
and
sub
aad
sub
jne
mov
pop
jge
pop
shrb
shlb
aam
jbe
les
or
andb
lahf
outsb
lods
xchg
insl
xor
jno
clc
aas
mov
int
clc
pop
pop
sbb
subl
clc
mov
cmp
movsl
inc
sub
xorb
jg
out
cmp
inc
pop
in
lea
nop
addr16
dec
ds
insl
shr
out
fidivrl
cmpl
sbb
nop
cwtl
pop
daa
mov
sbb
add
pop
cld
add
dec
pusha
jmp
jg
cmpsl
mov
ljmp
jnp
xchg
dec
mov
daa
xlat
aaa
lock
ret
add
mov
mov
mov
pushf
lret
lds
test
mov
insb
es
xor
adcl
daa
movsl
push
mov
out
into
ret
sbb
ljmp
mov
addb
mov
mov
or
jp
or
push
arpl
adc
push
inc
jo
cli
push
clc
dec
fwait
es
iret
daa
jne
outsb
sbb
mov
add
jns
scas
icebp
fnstsw
test
daa
outsb
inc
icebp
or
shrl
mov
insl
pop
mov
xor
insb
pop
add
nop
xor
scas
rolb
out
out
push
shrl
cmp
insb
and
push
jl
jg
cmc
mov
js
push
or
pop
divb
xchg
mov
adc
outsl
mov
jmp
inc
cmpsb
push
mov
imul
mov
fmull
fwait
add
ds
fnstcw
mov
cs
idivl
sbb
call
mov
es
sti
jae
insb
adc
into
fucomp
pop
outsl
and
add
enter
mov
les
push
mov
loop
mov
mov
push
or
push
ss
scas
and
sub
fs
lret
push
pop
enter
mov
icebp
out
ret
mov
insb
cld
sub
lock
xor
stos
sbb
pop
cmp
mov
sbb
aam
mov
enter
pop
jg
lea
loopne
clc
mov
push
dec
pop
push
xchg
mov
jns
lea
pop
or
rcrb
mov
mull
pushf
pop
mov
movl
cmp
outsl
mov
sub
dec
mov
imul
aam
cpuid
cli
in
testl
movsb
enter
jmp
xchg
pushl
pushf
loope
mov
idivb
sbb
sub
push
cli
sti
out
mov
or
jg
adc
lret
mov
repnz
lea
mov
mov
xlat
mov
jnp
subb
and
aas
mov
xchg
adc
jnp
out
or
lret
sti
fwait
jnp
add
cltd
adc
fsubl
lea
in
aad
rcll
jge
rcrb
in
scas
push
mov
daa
mov
or
mov
icebp
adc
adc
inc
mov
jle
test
inc
sub
loopne
loope
mov
int3
adcb
sbb
cmp
adc
push
cmp
les
sbb
adc
sahf
outsb
sbbb
xor
mov
xor
xor
inc
dec
dec
rcrl
mov
xchg
jmp
xchg
pop
cli
movsl
push
bound
sti
inc
daa
xor
fists
mov
pusha
push
push
ljmp
jg
stos
mov
fwait
and
jecxz
mov
cmc
lret
push
add
fnsave
enter
imul
inc
push
xor
repz
data16
out
js
jp
icebp
shr
incl
mov
dec
or
adc
push
sbb
in
or
popf
addr16
lods
outsb
push
je
cmp
fstps
rcll
fldcw
cmp
push
push
andb
pop
mov
or
pushw
xchg
lock
mov
outsb
xor
sub
call
inc
lret
inc
inc
testb
cmp
mov
pop
hlt
xor
ljmp
mov
jb
push
movsb
mov
mov
pusha
cmc
sub
xchg
les
or
imul
movntq
out
adc
pop
fs
or
test
sub
jle
lods
add
mov
add
cmpsl
sub
sbb
xchg
add
mov
sub
stos
and
decb
jecxz
outsl
rcrb
lea
test
rcrl
das
ret
mov
aad
and
adc
and
enter
mov
or
aam
ja
jge
jp
les
mov
aad
push
adc
std
push
mov
inc
fsubr
cmpsb
push
fsubrl
test
outsl
push
mov
call
sub
mov
cmp
adc
add
push
int
pop
xchg
xchg
jne
mov
loop
sub
out
add
inc
push
test
das
ja
out
push
lret
adc
cltd
std
inc
dec
pop
mov
fisubrl
push
fildl
inc
mov
xor
or
pop
xor
sub
sti
ljmp
imul
movsb
mov
cmp
inc
xchg
mov
cltd
xor
push
dec
add
push
add
jge
adc
lahf
test
lsl
sub
add
nop
shlb
int
lea
sbb
mov
and
pop
aas
xchg
add
cmpsb
out
mov
or
inc
roll
lcall
sbb
jmp
imul
cmpsb
push
add
fistl
cwtl
inc
jle
push
xlat
and
xor
mov
imul
dec
adc
clc
fnclex
sarb
stc
cmp
shll
cmpsl
pop
adc
xor
out
sub
push
test
out
adc
jmp
scas
fcoms
sbb
adc
out
mov
xor
js
out
repz
mov
mov
mov
cmpsb
hlt
jp
add
mov
subb
shrl
adc
repz
lock
pop
pop
dec
add
push
pop
sbb
stos
out
pop
adc
fwait
ljmp
jl
jge
in
fwait
jne
sub
out
adc
push
dec
ret
mov
popf
fs
add
push
add
adc
pop
jg
inc
mov
mov
mov
imul
dec
jnp
push
push
sub
repnz
fwait
and
cmp
cwtl
pop
out
jmp
push
mov
scas
inc
pushf
xchg
mov
xor
dec
pop
dec
aad
adc
cmp
jnp
jbe
add
int
mov
adc
fstpt
in
enter
dec
dec
xor
aam
cmp
mov
xor
adc
mov
adc
ja
xchg
jnp
pop
cltd
test
mov
push
mov
cmc
dec
and
loope
pop
mov
shrb
pop
arpl
adc
mov
dec
add
lea
stos
cmp
jae
push
add
fbld
icebp
mov
push
lret
out
ficompl
push
fisubl
outsb
lods
pop
pop
or
arpl
cmp
cld
mov
xor
inc
mov
movsb
fdivs
inc
dec
xchg
jmp
aad
jecxz
sbb
mov
sarl
icebp
inc
jno
movsb
mov
adc
and
ret
std
ret
outsb
cwtl
mov
sbbl
xor
adcb
pop
cs
or
insb
daa
mov
movsl
adc
or
ljmp
cmp
adc
scas
push
stos
leave
sub
ja
les
jbe
pop
ja
fucomi
or
scas
push
mov
mov
xchg
ret
rcll
aam
sub
pusha
les
sbb
mov
mov
jge
adc
popf
fmul
pop
jp
imul
mov
sbb
fimuls
aaa
stos
out
hlt
xor
adc
or
mov
pop
or
xchg
or
mov
pop
mov
xchg
inc
add
cmpsl
test
insl
mov
and
push
cld
ljmp
xchg
cwtl
mov
in
cmp
shll
nop
mov
test
sar
mov
jl
and
mov
push
call
aad
bound
inc
jns
add
iret
lret
adcb
adc
repnz
jo
in
push
sbb
jbe
cld
rorl
sbb
adc
rclb
or
pop
jae
add
add
jo
popa
cli
ret
sub
cmp
fsts
push
mov
xlat
push
mov
mov
out
dec
mov
push
inc
sub
add
jae
mov
push
push
inc
out
dec
cli
fnstcw
fnsave
and
mov
dec
test
les
pop
repnz
gs
mov
rolb
ror
ljmp
push
push
cmpsl
sbb
loop
gs
mov
in
push
fisubl
loopne
or
enter
mov
cmp
and
cwtl
bound
repz
cmpsb
repz
mov
pop
push
jnp
mov
mov
mov
xor
pop
sbb
je
repz
cmp
shll
in
aaa
adc
outsl
shlb
roll
and
adc
xchg
mov
xchg
iret
pop
loope
add
sub
popa
aam
adc
in
mov
das
sub
xlat
jp
cmp
push
out
jo
ljmp
sub
sub
inc
int3
sarl
xchg
mov
js
xchg
lock
daa
and
push
xor
xchg
and
cs
movsb
fwait
out
mov
pop
mov
in
xor
imul
fildll
call
cmp
js
call
mov
xor
dec
nop
xor
in
xor
stos
fiadds
scas
xchg
test
or
push
cmc
mov
cmp
insb
jae
inc
adc
sub
xchg
je
sub
sbb
je
outsb
in
clc
pop
sbb
cmp
cmp
pop
out
cmp
or
xchg
icebp
mov
repz
dec
push
in
scas
movzbl
pop
inc
in
mov
shr
dec
pop
dec
lahf
sti
add
movsb
rcll
gs
cs
mov
movsb
lock
movsl
fistpll
mov
lds
nop
dec
test
mov
test
add
push
enter
jmp
inc
je
popf
cmc
rcrb
dec
dec
add
ljmp
lea
xor
pusha
insb
rclb
mov
pop
adc
mov
ja
movb
sbb
pop
shll
subb
xor
pop
lret
mov
mov
jnp
add
test
xor
dec
repz
sub
fiaddl
sub
insb
push
test
stc
outsl
push
mov
cmpsb
xchg
and
fbstp
repz
sti
sbbb
rclb
pop
ret
jae
sub
cmpsl
lret
xlat
mov
cmc
jb
mov
pop
sbb
xchg
mov
ljmp
or
out
outsl
aam
inc
mov
sarl
sbb
push
test
cmpsb
mov
jno
aaa
cmp
add
icebp
jnp
mov
mov
ljmp
jge
shll
pushf
mov
hlt
pop
add
xor
and
repz
or
dec
hlt
sbb
das
test
or
or
dec
sbbl
push
iret
cmpsb
test
out
and
sbb
inc
jo
mov
cwtl
nop
popa
leave
jnp
mov
adc
rcl
std
test
add
dec
dec
vphadduwd
test
into
out
divl
arpl
ljmp
mov
and
push
inc
out
roll
cmp
aam
add
push
movsl
adc
imul
cmpsb
pop
xchg
aas
loopne
outsb
jecxz
xor
mov
fdivrs
pop
adc
stos
add
icebp
push
movsl
cmpsb
pop
dec
mov
pusha
mov
xchg
pushf
pop
or
in
popf
ja
fimull
fdivrs
mov
jae
sbb
je
jmp
dec
jae
dec
pushl
fisttpl
adc
out
bound
mov
pop
nop
adc
mov
pop
jp
push
sarb
xorb
imul
xor
mov
push
test
jl
add
push
test
rorb
outsb
push
sub
inc
pcmpgtd
fadds
mov
jmp
repnz
movsl
jb
sub
je
sub
clc
jb
xchg
cs
lret
inc
daa
xchg
jg
jno
xlat
in
or
xor
lds
push
or
sub
inc
rcr
xchg
mov
sbbb
sbb
popf
cltd
fs
xor
sub
cmp
and
push
outsl
xor
movsl
cmp
inc
pop
sub
or
dec
xor
sbb
incb
rcrb
rcr
sbb
dec
or
jb
or
push
daa
daa
xchg
jmp
test
mov
cld
fdivl
mov
into
jbe
rorl
js
ret
mov
in
fnstenv
loopne
in
push
popf
mov
sti
test
iret
pop
pop
mov
or
cwtl
add
add
movsl
dec
es
mov
jnp
insb
or
push
jne
xor
mov
cld
xchg
cmpsb
add
push
xchg
or
mov
cmp
ret
inc
mov
add
dec
adc
call
daa
jge
fsubrl
mov
mov
fmuls
jns
push
loopne
in
fstpl
or
jmp
xchg
sti
cmp
fwait
xchg
stos
mov
mov
or
ds
rolb
stos
into
cwtl
out
ret
push
cwtl
pop
sub
and
dec
loope
arpl
scas
gs
mov
push
push
ja
jbe
push
lods
cld
test
cmp
int
dec
jne
fwait
test
das
inc
ret
xor
les
setb
leave
outsl
pop
lar
xor
sbb
xchg
outsb
out
xchg
cmpl
jmp
fsubrp
inc
pop
dec
arpl
cmp
xor
ret
out
js
pop
jne
fdivp
mov
xor
inc
out
jns
ljmp
xor
pop
in
inc
fsubl
dec
or
int3
test
or
sub
jnp
std
jp
pop
sub
mov
in
jo
add
xor
cmpsl
clc
xchg
add
push
enter
jle
cmp
push
mov
inc
and
ljmp
std
ret
das
int
mov
and
push
out
sub
xor
cmpsb
mov
out
cmc
aad
mov
js
scas
add
and
inc
and
sbb
aam
push
xchg
stc
orb
mov
stos
sub
mov
jmp
pop
mov
nop
outsb
roll
fistl
jle
imul
andb
push
aad
das
jecxz
add
pop
leave
dec
int3
and
ret
pop
in
clc
stos
ucomiss
lahf
dec
jb
mov
insb
push
adc
xchg
push
dec
sahf
adc
push
insb
into
in
fisttps
and
xchg
ja
mov
sbb
dec
lahf
sub
iret
test
repz
out
or
lahf
fdivl
in
pop
jecxz
mov
pop
mov
aad
adc
idiv
out
cmpsl
jno
into
inc
lret
leave
adc
add
cmp
mov
jnp
test
dec
pop
testb
int
jmp
lods
cmpsl
insl
mov
or
or
lea
and
test
jnp
js
mov
pusha
and
adc
mov
sub
sbb
pop
push
in
adc
xchg
sub
mov
dec
inc
mov
pop
shll
aam
das
call
lret
cmp
pop
and
cmp
aam
mov
hlt
adcb
pop
loope
sub
data16
shll
fsubrs
outsb
xchg
fcoml
out
call
out
push
fsubrs
dec
popa
cwtl
fistl
into
sub
shrb
sub
sub
ret
ljmp
cmp
push
jno
mov
xchg
add
and
loopne
mov
cmpsb
test
int3
mov
cmc
cmp
ret
and
sub
cwtl
std
pop
mov
mov
dec
or
iret
sub
popf
testl
cwtl
sbb
jbe
sub
out
mov
add
aas
mov
inc
out
out
inc
jnp
jo
sbb
jl
dec
cwtl
jge
imul
pop
jno
adc
mov
cwtl
and
loop
xor
fwait
mov
daa
call
xchg
and
mov
aaa
mov
daa
inc
jnp
fcomps
xor
rcrb
ret
dec
hlt
jmp
cmp
jae
mov
cmp
mov
adc
inc
jno
data16
loopne
aas
in
and
sbbb
out
push
or
jo
and
jge
cmc
push
add
testb
shrl
pusha
bound
add
push
sti
fstps
cld
adc
add
scas
mov
ror
shll
mov
xchg
movsb
jno
aad
xor
dec
add
fdivrs
aam
fsubrs
and
mov
jo
cmp
stos
lret
pop
lds
int
int
cli
cmp
popa
xchg
inc
jl
ss
loopne
in
out
jge
mov
inc
inc
mov
push
add
inc
cld
scas
dec
jl
sbb
popa
popa
jo
hlt
ja,pn
jbe
test
jnp
push
sub
mov
in
mov
stos
push
xchg
jnp
or
shlb
xchg
inc
scas
and
cmpsl
dec
mov
inc
daa
push
jne
hlt
movsl
cmc
std
xor
xlat
or
xor
ficoml
in
je
sub
adc
stc
adc
fs
inc
int3
arpl
push
add
loopne
cmpsb
scas
stos
xchg
xchg
ficoms
add
jne
nop
int3
mov
test
out
add
arpl
sahf
xor
sub
adc
sub
sub
dec
cmp
mov
mov
mov
pop
inc
xor
mov
mov
pop
leave
dec
lea
pop
sbb
in
fwait
pop
test
add
xchg
push
jae
cmpsb
push
les
std
mov
mov
sub
fwait
bnd
cmpsb
push
mov
and
and
loop
sub
pop
jecxz
xchg
mov
jb
or
enter
in
sti
aam
lret
mov
sbb
popa
aas
mov
xchg
pop
test
sub
pop
xchg
push
jb
mov
sbb
cmpsl
in
mov
mov
rcrb
mov
nop
sbb
in
xorb
or
loopne
in
or
pop
pop
mov
nop
aaa
jmp
sub
add
mov
or
add
aad
pop
outsb
out
outsb
aad
cltd
or
js
movsb
dec
imul
jbe
mov
and
sub
push
rcrl
test
xchg
inc
dec
inc
pop
xchg
stos
sub
popa
fwait
inc
imul
or
lods
mov
adc
push
xor
out
jb
adc
repz
insb
mov
in
jecxz
cmp
adc
cmp
mov
cmpsb
je
mov
jb
jb
nop
or
jmp
loop
daa
dec
xchg
mov
mov
adc
dec
pop
xchg
loope
jo
xor
les
movl
inc
cmp
cwtl
sti
shrb
jns
orl
push
addr16
inc
arpl
sbb
int3
adc
rcr
bound
add
sti
or
xchg
in
std
testb
cmpsb
je
data16
adc
movsl
xchg
or
push
and
add
lods
add
in
mov
xchg
mov
adc
inc
jl
outsb
xchg
mov
in
iret
mov
cmp
mov
and
mov
fwait
and
inc
dec
mov
adc
into
push
mov
pop
and
add
add
mov
mov
adcb
push
or
jg
mov
lock
addr16
sub
inc
fwait
or
dec
sbb
pop
aaa
es
ja
scas
mov
push
mov
rcl
and
es
push
jmp
and
push
imull
rcll
jmp
mov
pop
jle,pt
jp
int3
push
pop
cmc
loope
sbb
das
nop
clc
inc
inc
pop
sbb
stos
pop
push
push
stc
jae
rorl
scas
lock
jo
fmull
cltd
inc
lret
lea
sub
add
mov
movsl
imul
int
xchg
lcall
mov
icebp
ss
add
jge
mov
lock
mov
mov
into
mov
lds
int3
ljmp
dec
adc
div
jae
xor
ss
add
cmp
out
fstps
pop
xchg
jge
addl
cld
shl
jp
dec
dec
test
adc
xlat
xchg
arpl
scas
mov
pop
xlat
sub
lahf
insb
lcall
lret
adc
push
lods
aaa
add
test
mov
sbb
and
push
dec
icebp
jns
mov
xchg
jl
jnp
sub
lahf
iret
outsb
imul
out
push
jns
adc
and
xor
and
arpl
in
sbb
ljmp
mov
push
cmp
sub
push
xlat
cs
lahf
mov
cmc
dec
shrl
xor
in
enter
sbb
aam
mov
pop
and
dec
scas
vdivps
pop
sub
das
bnd
out
pop
and
call
insl
jecxz
in
es
mov
cmovs
loope
sahf
pop
shl
xchg
push
push
pop
lret
sbb
stos
jbe
push
idiv
ret
sbb
in
sub
pop
mov
jp
pushf
ds
pop
fs
jp
scas
sub
imul
inc
push
xchg
dec
mov
les
push
pop
cmc
or
xchg
clc
lods
mov
addr16
pop
or
cmp
aam
adc
adc
scas
mov
test
inc
sahf
popf
ljmp
sarb
push
test
in
or
and
cmp
rclb
out
fdivs
push
sub
shll
mov
fidivrs
xchg
call
dec
pop
pop
or
mov
xorb
dec
es
add
mov
mov
mov
lcall
pop
fdivl
ret
jge
or
in
mov
cli
add
cmp
push
xchg
jnp
fidivl
cltd
outsl
orl
lcall
pop
stos
aas
jo
cmp
js
ljmp
adc
cmc
push
sbb
testl
ds
ret
imul
pop
cmp
bnd
aam
adc
inc
xchg
dec
imul
int3
lods
sahf
movsl
lea
push
or
sub
push
jbe
js
lock
in
push
push
add
scas
fwait
ror
mov
adc
xor
or
fsts
push
pop
pop
inc
stc
lods
add
mov
stos
push
pop
cmp
pop
inc
sub
lret
enter
add
push
adcb
je
ret
xchg
or
mov
popa
repz
inc
jp
js
push
mov
mov
stos
cmpsl
sub
jp
xchg
jg
repz
incl
fadds
xchg
fisubl
fnstenv
leave
stos
sti
dec
adc
jo
adc
adc
push
test
and
into
mov
xor
cmp
iret
rcrl
xorl
ret
outsb
aas
rep
jp
shll
dec
movsl
pusha
loope
out
js
or
cltd
fsubl
push
test
in
int
xlat
int
or
add
and
sbb
mov
sar
pop
and
mov
xor
test
rclb
push
iret
push
in
aaa
xchg
fcoml
movsl
int3
or
add
xor
imul
sub
in
cmp
ds
mov
pushf
cmpsb
fstl
arpl
cbtw
scas
popf
dec
and
cmp
inc
jb
fmuls
insl
pushf
inc
or
jge
es
popl
adc
push
out
sub
pop
insb
in
sbb
sbb
push
inc
fmul
ds
fwait
ljmp
dec
and
imulb
mov
cmp
mov
add
rcl
aad
test
sub
stos
icebp
aas
ficomps
loop
in
jg
popl
push
shrb
loopne
push
lahf
mov
sub
lods
lds
inc
rol
push
cmpsb
rcr
imul
test
in
dec
stos
outsl
not
fsubrs
push
rorb
rcll
rorb
push
cmpsb
ficoms
pop
dec
and
addr16
inc
inc
aad
leave
shrl
lret
in
popf
jbe
fisttps
scas
inc
movsb
enter
adc
mov
mov
jecxz
test
rcrl
pop
inc
out
insl
test
and
sbb
jecxz
push
ret
stos
xchg
inc
nop
sti
lret
add
and
iret
bound
jg
mov
sub
or
icebp
pop
push
jle,pt
cmp
out
mov
jo
clc
pop
pop
adc
sub
jo
jmp
imulb
fdivrs
dec
jmp
xor
pop
out
stc
fcoms
cmc
out
sub
shrb
addr16
addr16
ds
int3
and
adc
nop
sub
sbb
fisttpll
sbb
push
cmp
push
xchg
loop
hlt
pop
mov
sub
insl
in
ret
mov
imul
rolb
movsl
mov
lods
xchg
test
xchg
aad
xchg
inc
pop
push
mov
mov
mov
dec
lret
dec
bound
mov
and
jno
call
scas
rol
mov
cmpsb
fdivrs
loopne
xor
es
and
iret
xlat
xlat
add
sub
mov
divb
cmp
cmp
mov
mov
dec
stos
das
xlat
and
sti
ret
into
xlat
jne
and
jecxz
xchg
sbb
jecxz
aas
out
pushf
out
jecxz
lahf
js
xchg
dec
loope
dec
leave
popf
jge
push
mov
xor
adc
jmp
cmp
cmp
pop
lcall
jmp
pop
cli
scas
xchg
fidivrl
and
push
push
adc
in
sbb
jge
lea
ret
lret
cmp
lock
mov
movsl
mov
adc
mov
hlt
dec
aad
jae
mov
loopne
test
cld
cltd
popl
inc
cmpsl
jecxz
lahf
iret
addr16
sbb
xlat
inc
js
sbb
clc
ret
rorl
jae
lahf
loope
xchg
js
jp
push
add
pushf
and
mov
mov
push
xchg
int
xchg
sub
cmc
jl
sbb
jnp
jecxz
jg
pop
mov
inc
mov
push
popf
cmp
mov
jbe
dec
jae
jne
mov
add
jp
push
fisttpll
sahf
xchg
mov
bound
sbb
rcrl
xchg
cwtl
shlb
jbe
xchg
jle
insl
push
add
inc
mov
dec
scas
jbe,pt
sub
cmp
sahf
xorb
dec
sarl
fbld
xchg
pop
insb
pop
jbe
bnd
shlb
lods
arpl
ret
or
add
adc
test
out
sbb
sub
cld
out
cld
in
lock
arpl
push
lcall
mov
mov
cli
xchg
cmpsb
shlb
inc
xor
jecxz
add
ljmp
fwait
mov
aad
dec
fstps
pop
xor
cmp
dec
add
out
dec
or
mov
int3
ljmp
mov
inc
ss
jle
push
imul
arpl
push
cltd
pop
ss
mov
adc
test
sub
pushf
fs
pop
sbb
adc
jmp
into
cmp
cwtl
sti
sub
iret
mov
push
jg
sub
jg
sub
es
insl
mov
mov
xor
pop
xchg
push
sbb
hlt
dec
xchg
dec
pop
push
add
fsin
cmp
imulb
push
ficompl
mov
testb
insl
test
rorb
scas
xchg
cmp
jecxz
lea
or
out
iret
test
testb
add
pop
mov
fisttps
and
fsub
mov
jmp
popa
jmp
in
lcall
enter
fsubs
out
jle
jp
imul
dec
jg
ret
test
mov
add
push
lods
jno
add
ja
fidivrs
das
add
dec
xchg
or
mov
sti
stos
ja
pushf
mov
sahf
adc
lcall
and
cmp
out
sbb
and
pushl
test
out
mov
jmp
lods
mov
addr16
js
jp
gs
sub
push
jnp
push
and
push
push
in
xchg
jae
adc
es
inc
in
push
push
les
aad
cmp
cld
fnstsw
clc
ror
fs
je
jns
loope
shrl
ret
loope
js
xchg
lods
fst
cwtl
dec
mulb
pop
and
scas
jne
pop
xor
xchg
gs
pop
lods
aaa
pop
ja,pt
in
sub
mov
sbb
aaa
xor
pop
stc
adc
cmpb
movsb
mov
fdivs
cmp
dec
jo
inc
mull
jle
xchg
mov
fmull
shlb
xlat
push
idivb
pop
mov
mov
pop
mov
scas
outsb
outsl
add
into
xor
call
inc
pop
jnp
rolb
add
pop
jnp
mov
ljmp
popa
pop
imul
mov
lcall
into
mov
xor
xor
xor
lret
loopne
xlat
xor
sarb
xor
sub
cmp
ret
aad
mov
aam
rcrl
jbe
fld
in
insl
add
fadd
fisubrs
aam
inc
xor
lret
ret
and
iret
xchg
test
movsl
out
inc
or
xor
xlat
adc
jl
sarl
adc
push
les
lret
or
ljmp
dec
cli
ss
pop
xor
jbe
in
orb
cmp
xchg
add
in
add
inc
fcmovnbe
mov
sub
lds
fdivrs
push
and
jl
test
ret
sub
out
mov
inc
aad
test
rorl
popa
mov
daa
test
inc
mov
mov
icebp
xsaves
aam
gs
and
popl
es
sahf
ljmp
xor
ds
pushf
sti
popa
repnz
mov
sbb
adc
jmp
mov
clc
sub
mov
dec
lds
mov
std
jnp
jg
sti
cmp
mov
xlat
popf
sbb
enter
ja
cmp
stc
sbb
adc
aas
sbb
sub
sub
pop
cltd
push
sbb
pop
rolb
test
fistpl
movsl
cmpsl
inc
data16
xor
hlt
loope
popa
push
cld
test
xchg
iret
jo
mov
mov
lea
lret
xor
fucom
pushf
add
mov
int
inc
lcall
lea
push
pop
xchg
and
lret
dec
sub
imul
aam
and
mov
mov
push
mov
addr16
adcl
das
mov
les
roll
iret
and
repnz
mov
sub
not
mov
je
xor
and
outsl
ret
add
mov
int
mov
sbb
xor
push
xchg
pop
push
lcall
or
cld
aas
dec
jp
fildll
and
jo
ljmp
imul
and
sub
mov
mov
add
ds
xlat
jle
mov
lock
mov
push
fstl
push
add
jl
mov
or
and
add
add
cwtl
push
xchg
cmp
mov
add
sbb
repz
cmp
stos
movsl
add
sub
adc
enter
mov
pop
aaa
int3
out
cmp
add
push
push
or
xchg
and
cmpsb
push
push
xor
cmpsb
dec
add
imul
jo
in
mov
aaa
xor
nop
push
pop
pop
pop
or
pop
ljmp
xor
or
mov
jg
out
out
outsl
jmp
ss
mov
iret
enter
adc
testl
imul
imul
push
divl
pop
stos
jle
add
repnz
sub
rorl
sti
mov
add
sar
mov
inc
adc
cli
cmp
and
cmpsb
xchg
jg
xor
in
push
out
push
and
inc
fs
push
mov
or
jge
pop
adc
addr16
push
xchg
fiadds
subl
jp
xchg
inc
jno
nop
mov
lret
sbb
add
push
insl
xchg
adc
enter
inc
dec
scas
addr16
std
jns
adc
pop
jo
jns
inc
das
push
mov
int
dec
and
mov
xor
repnz
addb
sub
icebp
xchg
lods
popf
add
dec
xor
jg
stos
lret
lret
aaa
jbe
cwtl
andl
daa
sbb
shrb
add
sub
filds
or
fcoml
push
rcrb
pop
fs
add
scas
lods
or
xchg
xchg
sub
add
and
call
ret
and
fdivrs
push
mov
cli
mov
adc
cltd
mov
in
xor
sbb
or
test
push
dec
push
in
push
xor
pop
push
mov
test
adc
mov
push
ret
test
inc
lret
xor
and
pop
adc
dec
popl
fcmovb
rcll
jns
jmp
aaa
push
sub
cmpsb
enter
push
pop
cmc
outsl
cmp
jp
cmpb
dec
inc
xchg
push
test
pop
dec
inc
xchg
outsl
leave
mov
pop
push
andl
loope
sbb
jecxz
cmp
sub
or
xor
imul
nop
add
testl
mov
mov
mov
sar
add
call
xchg
push
jne
fdivrs
incb
pop
loop
fildl
cmp
push
inc
scas
xchg
mov
les
lods
push
pop
sub
daa
out
pop
clc
pop
jecxz
push
cmc
jb
mov
les
hlt
loop
rol
dec
sarl
icebp
shll
pop
outsl
pop
fucompp
adc
pop
sti
or
push
enter
js
movsb
lahf
ss
data16
sbb
imul
sbb
sahf
pop
adc
xorl
movsb
enter
mov
dec
cs
das
add
clc
loope
inc
push
push
mov
aad
dec
xorb
dec
sarb
mov
sub
ret
dec
push
jecxz
push
sub
ja
dec
popa
movsl
sti
pop
sub
jge
mov
sub
pop
push
cmpsb
sub
and
pop
adc
bound
or
push
addr16
in
pop
mov
jmp
add
jnp
stos
das
sub
int
xor
jno
fisubl
inc
mov
pop
cmp
mov
lcall
and
sub
sub
out
shl
insl
mov
xchg
lods
sbb
outsb
gs
movzwl
jg
lods
in
fcmovnbe
sahf
int3
mov
enter
ja
pop
xlat
stos
lret
jae
and
js
cltd
mov
jb
lret
and
lret
or
movsb
add
arpl
mov
dec
xchg
push
cmp
ja
sbb
xchg
jne
and
jmp
flds
push
imul
xlat
sti
xor
mov
xchg
sbb
repz
pop
sbb
push
insl
lret
and
addr16
daa
sub
inc
sbb
repz
jbe
dec
mov
xchg
add
cmpb
lods
xlat
arpl
and
cwtl
inc
icebp
enter
add
lock
repz
or
fildll
lcall
dec
xor
push
adc
js
js
push
xchg
xor
mov
mov
arpl
lahf
adc
fs
movsb
sti
ret
dec
mov
pop
popf
pop
icebp
loopw
add
add
movsl
outsb
scas
sbb
dec
push
and
out
and
and
xchg
jg
hlt
sbb
dec
xchg
seto
mov
arpl
inc
lods
dec
xor
jne
cli
mov
push
addr16
popf
out
push
cltd
mov
mov
pop
jno
dec
int
lods
into
push
ret
pop
fisubs
insl
mov
call
mov
loopne
adc
pop
std
adc
imul
xchg
ds
sbb
fdivl
mov
pop
fucom
jmp
out
xor
mov
inc
adc
sub
lcall
mov
jne
jle
inc
fstp
test
test
outsb
push
sub
arpl
inc
and
sahf
icebp
lds
ja
jge
inc
mov
imul
aad
add
cli
jae
jmp
push
stos
addl
dec
cmp
dec
rclb
jp
aam
out
test
jae
in
lods
lea
mov
push
inc
jns
lea
lahf
out
or
lahf
lcall
iret
sbb
pop
cwtl
jmp
repz
mov
mov
jecxz
subb
fwait
mov
xor
jge
dec
mov
fisubrl
decl
repnz
fsubrs
in
jge
cwtl
push
ret
push
jno
nop
adc
flds
inc
mov
xchg
ret
cmp
lds
pop
sub
push
popf
jne
mov
mov
lahf
xor
jb
insl
push
dec
add
in
inc
inc
mov
shlb
xchg
loope
pusha
push
mov
mov
xchg
pop
mull
dec
mov
xchg
das
lgs
test
cmc
push
mov
shll
pop
mov
xor
call
testb
add
inc
mov
push
out
mov
mov
or
pop
jns
mov
fdiv
jb
imul
fidivrl
fisubs
and
ljmp
inc
inc
fiaddl
dec
jb
add
pop
inc
testl
mov
push
sub
test
xchg
dec
xchg
dec
mov
fstl
mov
lea
divl
adc
test
nop
out
sbb
lea
out
arpl
lret
arpl
dec
imul
mov
out
adc
pop
lret
jl
inc
mov
adc
inc
xchg
lds
cltd
and
and
xchg
js
aaa
jae
sbb
gs
sbb
filds
mov
lret
sbb
test
enter
test
inc
and
and
inc
inc
xchg
std
test
daa
enter
and
jo
imul
pop
cmp
or
ds
xchg
inc
in
test
pushf
inc
xchg
test
cmp
iret
mov
cmp
ret
sbb
fistl
mov
xchg
adc
bnd
call
push
adc
push
xchg
dec
stos
mov
fs
sbb
clc
mov
loope
adc
mov
xchg
add
xor
dec
push
jecxz
popf
fcompl
das
into
xchg
into
sub
andl
scas
pusha
fstpl
sub
jne
mov
lods
jnp
mov
or
xchg
aam
movsl
js
lods
nop
inc
jnp
lret
xor
push
pushf
push
test
aaa
or
lret
sahf
pop
icebp
ja
inc
into
push
daa
outsl
icebp
bts
or
hlt
xchg
into
test
scas
cmp
lret
xchg
mov
or
out
loop
in
and
sbbb
sarl
jle
mov
jl
sbb
ss
dec
or
mov
mov
and
mov
or
inc
mov
mov
jecxz
xor
sub
stos
lds
mov
or
inc
lods
int
inc
enter
mov
mov
dec
add
jnp
lret
pop
xor
jo
fs
xor
add
mov
mov
pusha
es
push
adc
jl
sbb
push
push
or
test
outsl
push
inc
ja
test
mov
pusha
imul
into
into
xchg
xchg
jnp
mov
pusha
rorl
outsb
and
andl
gs
es
push
push
insb
pop
iret
cmpsb
lahf
loop
ja
orb
out
std
adc
or
lds
adc
sub
out
push
mov
sbb
pop
xor
sbb
das
add
testb
icebp
or
std
test
sub
pop
dec
mov
cli
adc
insb
cld
add
into
adc
mov
pop
clc
sbb
dec
or
mov
sbbb
dec
and
mov
fimull
cmp
lods
cmpsb
jns
and
and
lret
iret
or
hlt
xchg
lods
test
mov
cli
dec
ret
lcall
mov
or
mov
mov
imul
jecxz
pusha
fcmovne
movsb
dec
mov
rorb
insb
dec
loop,pn
test
mov
nop
sbb
cmpsl
in
inc
xor
in
cmpsl
sub
pop
inc
cltd
push
cltd
popf
ds
sbb
mov
add
add
in
aam
adc
xorb
stos
sub
add
insl
test
and
mov
divb
jmp
push
inc
das
jecxz
int
adc
sbb
adc
dec
pop
dec
jmp
sub
aam
outsl
push
ds
xlat
inc
dec
outsl
pop
sub
mov
sub
mov
push
addr16
cmp
inc
cmc
dec
and
cwtl
jnp
mov
xchg
pop
jge
xchg
pop
out
fstcw
loop
in
mov
inc
sub
cmpsb
mov
and
push
int3
orb
hlt
in
mov
arpl
jns
in
sarl
mov
fiadds
rcrb
push
add
gs
pop
dec
jne
sub
xor
jmp
xor
aaa
sti
inc
pop
or
fadd
fwait
or
cmp
aam
lcall
add
push
sbb
sub
mov
mov
dec
ds
imul
dec
sbb
or
and
ffreep
pop
pop
es
sarl
jne
xlat
sti
fldenv
mov
cltd
xchg
adc
xchg
repnz
shrb
dec
pop
lods
dec
jbe
lretw
xor
subb
mov
cmp
out
mov
inc
aaa
lods
xlat
clc
push
mov
imul
pusha
and
inc
fldt
dec
pusha
push
mov
out
lock
jmp
add
mov
ss
fld
mov
xchg
push
mov
jns
sbb
and
mov
or
push
mov
ljmp
ret
jbe
cmp
sub
dec
sub
mov
rcll
dec
ret
imul
sub
sub
mov
adc
daa
add
arpl
xchg
sub
jmp
into
fstps
pop
test
int
popa
scas
sbb
repnz
pop
pop
add
push
ret
mov
stos
lahf
les
das
in
lahf
iret
nop
jge
imul
add
sbb
int
sbb
iret
mov
ss
sub
test
lods
mov
mov
outsb
arpl
sarb
xor
sub
cwtl
and
xchg
ss
cmp
dec
adc
test
jae
test
mov
call
jle
arpl
outsl
std
or
pop
push
shl
jnp
movsb
aam
shll
sub
and
loope
and
inc
leave
mov
outsb
adc
mul
stos
in
outsb
lds
xchg
lret
dec
out
cltd
mov
stc
xlat
cmc
mov
jl
ja
push
cmc
jae
or
mov
inc
xchg
jp
imul
push
imul
pop
divl
and
loope
add
or
adcl
mov
ret
nop
stos
cli
jne
cmp
add
xchg
js
test
or
in
dec
je
addr16
test
pop
mov
shlb
lcall
xchg
cli
mov
roll
xlat
in
aad
jmp
sbb
add
mov
push
add
cmp
dec
jecxz
mov
out
xchg
sbb
push
and
test
fisubl
repnz
shrl
in
repz
adc
cmpsl
stos
int
mov
dec
sub
sub
and
jecxz
jns
aas
je
xchg
popa
sub
add
cmpsb
divl
in
rolb
add
shll
jp
fisubrs
pushf
and
addr16
jns
mov
mov
outsl
xchg
lods
jnp
mov
jge
test
inc
fidivl
ret
nop
insb
int3
inc
mov
jbe
jg
cmc
pop
inc
jbe
sbb
xlat
inc
xchg
pop
adc
ljmp
insl
cmpsl
out
lods
sbb
fstpl
sub
adc
nop
enter
test
cwtl
cmpsl
stos
dec
pop
lcall
inc
jp
outsb
mov
or
andb
hlt
test
popa
jmp
cld
and
ficompl
xchg
js
fldl
popf
repnz
dec
daa
mov
bnd
and
xor
gs
cwtl
or
fadd
scas
mov
cmp
jnp
mov
mov
or
ljmp
out
rclb
or
scas
sub
jl
fildl
adc
idivb
mov
clc
sbb
in
subb
jge
adc
ja
pop
js
jle
sbb
jp
out
push
mov
pop
test
pop
xlat
sub
adc
ficomps
mov
je
push
loop
xchg
sub
je
fiaddl
xor
fstl
lods
fidivrl
lret
push
mov
adc
dec
and
add
push
shll
nop
fadds
ficompl
push
jmp
inc
mul
or
jno
sub
ret
out
ljmp
adc
jecxz
stc
aaa
or
ljmp
mov
fistpll
cmc
inc
mull
movl
mov
andl
in
outsl
sti
inc
jb
loopne
hlt
pushf
xchg
movsl
add
ds
in
xor
clc
movb
mov
hlt
push
sbb
pop
mov
cmp
adc
add
add
je
fldt
dec
ret
mov
movsl
inc
mov
out
iret
out
movsb
add
sarl
cmp
sbb
rcl
xchg
fmul
repnz
inc
push
xchg
mov
jno
dec
ljmp
out
repnz
cmp
adc
imul
pop
add
lock
jnp
add
jg
lret
int3
jmp
pop
bswap
movsl
mov
insl
sub
pushf
ljmp
lea
mov
jge
fstl
xor
fmull
lock
out
movsl
insb
in
incb
cmpl
imul
pop
repz
lahf
cltd
ret
add
mov
dec
xor
xorb
dec
ret
pop
int
push
mov
mov
in
xlat
stos
test
push
outsb
mov
pusha
push
std
push
lods
mov
cmpsl
mov
mov
rorl
mov
mov
sub
in
adc
xchg
cmp
sub
cmp
hlt
dec
lcall
int
mov
sub
fnsave
dec
and
cmp
es
ja
mov
aam
call
aaa
imul
cwtl
pushf
or
inc
cld
dec
sub
loop
aas
mov
nop
incl
lods
shlb
mov
or
lret
push
dec
push
fcoml
in
stos
xor
lods
ss
push
sub
mov
lods
fcmovnu
xchg
xor
js
pop
pop
push
in
sbb
loopne
inc
repnz
push
push
stos
repnz
sti
lret
mov
pop
mov
xor
hlt
inc
lahf
pop
mov
mov
inc
mov
clc
test
xchg
int3
dec
adc
sub
imul
out
add
lcall
or
neg
sub
jno
mov
sbb
adc
cmp
dec
sub
pop
adc
adc
insb
inc
xchg
xor
xchg
jle
test
jnp
inc
mov
fldcw
mov
rcl
xor
outsb
icebp
mov
mov
nop
lds
jno
xchg
fsubrs
leave
pop
xchg
mov
jnp
xor
xchg
push
std
push
sub
xor
pusha
pushl
jo
add
dec
fdivrl
mov
ret
and
stos
jge
mov
sub
cmp
ds
fistps
mov
fsubl
jl
in
int
sub
sbb
sbb
xchg
clc
xchg
mov
add
push
nop
lret
inc
jecxz
xchg
dec
jmp
loopne
insl
fidivs
xchg
jecxz
or
ja
bound
cmpsl
ret
mov
mov
or
pop
cmp
mov
or
ds
inc
mov
testl
sbb
sbb
loope
rolb
call
hlt
pop
fwait
adc
hlt
adc
cld
pop
imul
cmp
mov
xor
in
mov
sti
mov
xchg
jno
fiadds
loop
adc
andl
dec
stos
loopne
sti
insl
mov
dec
jo
int3
xor
idivb
mov
push
arpl
loop
movb
xchg
lcall
add
in
ret
and
xchg
das
into
sub
adc
in
stc
fdiv
repnz
adc
and
add
fldt
push
inc
fwait
sbb
xchg
imul
outsb
sbb
aaa
icebp
pop
arpl
out
cmpsb
mov
ret
das
jl
stos
pop
in
iret
xor
and
jmp
fmulp
cmp
pop
xlat
lea
xchg
cmp
xor
add
add
jl
inc
shr
or
push
aam
imul
test
sti
mov
pop
mov
and
out
add
fs
dec
fucomp
xor
arpl
and
cs
sub
aad
fldenv
xchg
in
push
sbb
std
je
pop
sti
add
mov
outsl
xchg
xchg
call
shlb
mov
inc
imul
fisubrs
add
add
enter
cmp
fisttpl
lds
les
fimull
std
sub
out
aas
push
xchg
rcl
jne
inc
push
xorl
and
cmp
rorb
test
push
fsubrs
outsl
repz
adc
jb
add
lret
jg
rcll
push
sahf
push
pop
jmp
les
xchg
mov
ja,pn
sub
cmp
insl
clc
xchg
fsubrl
out
push
in
push
dec
lods
sti
js
pop
inc
and
inc
ja
rcl
inc
and
and
lea
fnstsw
mov
cltd
setno
push
mov
call
and
adc
mov
call
jbe
jl
rcrl
loop
sbb
xor
rolb
stos
mov
cmp
scas
or
xor
ret
mov
scas
leave
popf
fcompl
and
xlat
cmp
mov
fidivrl
sub
mov
test
lods
dec
bound
dec
mov
jae
jge
xchg
push
movsl
cmpsl
rclb
pop
push
enter
aad
sbb
pop
jp
pop
in
cmpsb
mov
addr16
mov
adc
imul
cmp
mov
sub
loope
flds
mov
inc
sub
pop
leave
shrl
jae
orb
imul
inc
outsl
std
adc
push
mov
jecxz
inc
cmc
sub
sbb
iret
and
in
pop
inc
xchg
icebp
sub
dec
cmc
dec
pmullw
add
out
and
push
pop
push
add
sbb
int3
testl
push
outsb
cs
jmp
sub
add
cmp
roll
mov
adc
mov
leave
xchg
adc
ds
out
add
lahf
mov
xchg
cld
repz
mov
lret
nop
xchg
adc
pop
insb
mov
aam
fs
push
push
dec
dec
or
xchg
and
xchg
jbe
adc
add
mov
xchg
je
lahf
mov
fs
and
and
es
daa
cmpb
jge
mov
in
clc
or
dec
dec
std
xor
fidivrs
rorl
xchg
mov
je
mov
cmp
mov
mov
sbb
filds
fs
jbe
rclb
sbb
mov
push
in
dec
cltd
hlt
adc
out
std
das
cs
cmp
int3
imul
add
nop
or
inc
jmp
ficompl
push
and
or
cltd
in
inc
fsubrl
int
jnp
jne
outsb
xor
sub
jno
jne
mov
dec
push
inc
sbb
addl
and
sub
jmp
fs
ja
sarb
cmpsl
mov
xchg
inc
dec
cmp
imul
inc
in
inc
sub
std
test
mov
les
aas
sbb
push
xchg
fcomi
fnsave
sub
and
inc
out
mov
jb
add
les
pusha
repnz
mov
cmp
fcompl
xor
cld
nop
or
insl
jo
mov
push
sbb
cwtl
sub
pop
sub
push
scas
in
sub
inc
or
ja
scas
dec
scas
dec
sub
ds
or
push
or
push
or
sub
aam
scas
sahf
jg
incb
add
daa
cltd
push
mov
je
sbb
loope
push
pop
pop
in
in
mov
xchg
cmp
add
jg,pn
xor
jnp
add
jae
xor
jns
dec
loop
add
fstps
jp
ret
sub
mov
xchg
testb
addr16
outsl
and
sbb
negb
inc
les
pop
ud1
lock
stos
das
dec
add
clc
push
fisubl
adc
inc
pusha
dec
or
dec
mov
arpl
ret
and
jns
cltd
cmpsb
push
ds
and
fs
rorb
sub
sub
inc
or
bnd
and
es
out
sbb
and
or
inc
jb
sarb
push
xchg
and
outsb
mov
mov
add
cli
sbb
pop
inc
adc
ret
cmpsl
test
loope
daa
lret
adc
and
push
inc
sub
mov
cmpsb
mov
cmpsl
xor
push
sbbl
cmp
xchg
or
jnp
push
pop
movsl
mov
xchg
add
lret
inc
inc
push
mov
sub
inc
mov
cmpsl
jbe
repz
loope
jb
jns
ret
mov
xor
dec
test
dec
cld
nop
test
insb
fucomp
cli
mov
cltd
mov
lds
lret
imul
lcall
imul
scas
xchg
fsubr
mov
and
loope
push
cmp
jp
cs
in
pop
int3
push
loope
aas
lods
test
loopne
in
xor
push
setno
adc
inc
daa
xchg
sub
subl
pop
das
dec
jo
mov
xlat
aas
jae
push
sub
inc
test
cmp
ret
mov
adc
push
mov
and
pushf
out
adc
cmc
cs
and
sti
lods
sub
out
pop
pop
push
pop
test
fisubl
popf
adc
pop
insb
mov
repz
jmp
add
clc
pusha
dec
jecxz
or
adc
ss
mov
cmc
push
mov
jns
lods
fbld
jns
subb
mov
fildll
sahf
sbb
roll
out
les
lds
fcoms
mov
mov
xor
inc
into
addr16
dec
in
stc
out
add
aas
xor
and
mov
xchg
sbb
in
stc
test
scas
lret
jl
push
add
test
ja
push
std
mov
jecxz
fdivl
lret
add
loop
xchg
mov
mov
lods
mov
incl
adc
xlat
ss
scas
mov
jg
cli
sbb
movsb
xchg
aas
xchg
mov
pop
lock
xchg
sti
imul
push
nop
mov
mov
mov
out
push
repnz
lods
sub
push
mov
cltd
mov
xchg
jle
jp
xlat
outsb
sub
repnz
fs
sti
rorl
push
not
push
ljmp
aaa
mov
test
mov
jmp
imul
ja
call
cmc
mov
add
xchg
sub
jns
in
in
outsb
sub
push
scas
add
loopew
cmc
div
rorb
xor
inc
cmpsl
sub
enter
dec
mov
push
js
and
adc
cld
inc
pop
ss
jnp
pop
xor
stos
pusha
loop
xlat
mov
adc
pop
lock
sub
lock
sub
pushl
insl
or
std
repz
mov
or
std
sti
test
repz
mov
pop
push
sbb
and
add
sub
test
pop
push
inc
and
xlat
cmp
icebp
dec
repnz
inc
in
mov
mov
xchg
add
xor
out
jecxz
xor
mov
add
frstor
cmp
movsl
cmp
mov
shll
dec
stos
fstl
fcomps
push
int3
inc
popf
ja
in
or
push
ja
sbb
sti
in
aam
mov
cmp
inc
jb
loope
pop
cld
sbb
out
fcoml
add
addb
lods
leave
jbe
sbb
mov
or
pop
popa
das
pop
mov
cmc
mov
out
int3
test
idivb
icebp
jg
pop
mov
mov
xchg
std
cmpl
dec
or
aam
mov
cli
xor
mov
gs
xor
mov
mov
xor
aas
sub
dec
push
mov
fmul
adc
or
mov
pop
rclb
sub
xlat
cli
aad
add
leave
jp
addr16
inc
push
inc
xor
mulb
cmp
ljmp
sub
hlt
mov
jle
sub
adc
iret
pop
push
mov
loop
and
push
push
imul
pop
sub
shll
or
mov
mov
adc
fmull
test
pop
jnp
ss
pushf
pop
mov
cld
and
fnsave
sbb
or
xchg
js
stos
push
ss
xchg
pop
rcll
fwait
loopne
nop
mov
jg
dec
cmp
pop
popf
testl
or
std
sub
arpl
xchg
add
fdivl
jle
nop
xchg
iret
and
push
es
mov
jmp
pushf
cmpsb
imul
pop
xchg
in
adc
clc
push
mov
dec
lods
daa
jle
add
loop
ror
dec
jg
ret
inc
pop
push
push
daa
data16
aam
in
jl
cmp
dec
imul
flds
mov
mov
jnp
ret
out
pop
mov
dec
std
or
out
mov
cmp
xchg
ret
dec
sti
mov
xlat
inc
icebp
repz
add
xchg
jae
int3
mov
dec
inc
or
je
mov
cmc
in
shr
hlt
jmp
fisttpl
push
out
fwait
test
mov
dec
push
xchg
sub
cmpsb
and
lods
push
pop
scas
cmp
mov
lock
mov
jg
ss
xor
lcall
iret
movsl
cmp
dec
pop
sbb
jle
jge
cmp
repnz
out
int3
leave
dec
stos
ss
cli
fisubl
lods
xor
pop
mov
outsl
dec
loope
ss
icebp
add
adc
inc
cmp
mov
imul
ds
mov
lock
test
cs
test
adc
hlt
jb
arpl
mov
std
mov
test
testl
loop
push
in
cwtl
mov
jle
or
mov
lods
push
adc
jne
mov
fwait
loope
out
mov
fs
andb
imul
push
push
stos
bnd
or
dec
ret
ret
jle
je
or
xor
dec
ja
aaa
cltd
test
out
pushf
mov
std
add
rcl
adc
mov
mov
push
scas
xor
jns
push
cmp
imul
mov
aam
xchg
rorb
fldt
jmp
mov
int3
adc
and
sub
push
pop
mov
push
loopne
mov
xchg
jno
jge
pusha
adc
xchg
pop
ret
rcrb
xchg
pop
push
pop
lods
push
or
and
stos
pushf
sub
adc
pop
mov
push
divb
push
pop
inc
jb
shl
or
ds
mov
pop
jle
mov
sbb
in
out
addr16
in
out
ret
xchg
mov
loope
testl
and
fwait
popa
mov
sbb
jnp
mov
out
mov
xor
jno
jae
call
push
mov
mov
jmp
dec
test
xchg
mov
add
sub
lret
popa
dec
hlt
bound
je
pop
mov
es
incb
sub
xor
sbb
sbb
cmp
push
orb
mov
leave
mov
mov
sarl
cmp
orb
mov
and
pextrw
sub
sub
mov
test
sahf
out
pop
loope
sub
push
jge
in
data16
cmp
dec
popf
pop
sarb
cmpsl
mov
into
mov
js
inc
jb
rcr
in
lcall
pop
and
cmp
leave
out
out
push
jge
mov
int
and
das
insl
jmp
popf
or
pop
or
les
fdivs
jge
cmp
jg
push
pop
dec
jno
and
jle
incl
mov
mov
add
scas
mov
mov
dec
shlb
xchg
mov
popf
in
test
rclb
xchg
push
xorb
repz
in
scas
adc
mov
xchg
mov
mov
push
outsb
idivb
sbb
shlb
push
or
fcomps
insl
jge
shrl
sarl
xchg
sti
lock
push
cs
test
testl
adc
dec
test
insb
rorl
jg
jae
jg
call
in
xchg
fisubrl
sbb
mov
or
push
push
in
loopne
sub
mov
pop
scas
cmpsb
and
push
push
out
adc
sub
dec
push
mov
sub
mov
call
sbbb
xchg
mov
push
sbb
shlb
in
aas
mov
fisttps
cltd
dec
cmp
add
push
dec
int3
mov
pop
pushf
xor
sbb
sub
adc
popf
movsb
lds
and
and
sub
cld
in
aaa
fnstenv
loopne
push
jecxz
or
push
jno
pop
ljmp
repz
fidivs
cld
ds
jecxz
push
cmpsb
outsl
test
xchg
and
fisubl
movsl
popf
or
and
add
adc
or
xchg
loope
cwtl
xchg
push
dec
adc
icebp
or
loop
cmp
lods
scas
pop
scas
adc
cld
dec
inc
dec
and
mov
lret
pop
jbe,pt
je
faddl
sarb
pop
push
aad
lock
out
inc
shrb
test
mov
inc
lds
jmp
insl
popa
cld
enter
jbe
pop
mov
xchg
mov
sbb
insl
int
mov
and
mov
repnz
mov
aam
lods
jns
outsb
into
fsubp
push
pusha
into
xchg
or
rolb
enter
pop
popa
ret
aas
add
movl
stos
mov
inc
bound
sahf
dec
loop
xchg
sti
loopew
adc
roll
repz
add
popf
mov
jmp
xor
rorb
arpl
push
adc
push
add
loopne
mov
sti
inc
pop
inc
mov
xchg
mov
jno
lsl
jl
push
inc
or
insl
pop
mov
addr16
adc
dec
push
lods
popf
jne
ss
lret
lcall
cwtl
sub
jo
push
add
adc
ss
inc
gs
loope
mov
dec
in
and
xor
stos
shrb
aas
repnz
test
jecxz
pop
mov
mov
mov
xlat
xor
lods
nop
push
mov
mov
jnp
sbb
adc
data16
out
sarl
cmpl
cwtl
pop
sbb
enter
xchg
push
loopne
popa
pusha
push
out
dec
popa
lret
mov
into
adc
iret
ret
out
mov
rcrb
xor
ret
das
or
arpl
scas
cmpsb
in
lock
arpl
jbe
cmp
inc
mov
psrlw
sbb
mov
sbb
push
adc
xchg
pop
dec
mov
sti
call
add
sub
pop
mov
dec
call
inc
mov
clc
xor
out
test
and
call
hlt
outsb
push
imul
in
sub
or
test
push
mov
mov
and
lds
mov
les
push
in
adc
mov
push
imul
rcrb
inc
rolb
test
lods
xchg
xor
nop
loopne
out
add
jae
xor
hlt
mov
dec
cld
or
popa
push
mov
out
xchg
mov
scas
cmpsl
mov
insb
mov
call
call
pop
outsb
pop
jo
call
push
dec
add
fimull
push
and
arpl
mov
pop
lret
mov
scas
icebp
pop
cmpsl
sub
jl
lcall
mov
and
cs
roll
add
mull
sbb
lods
jge
pop
and
dec
xor
inc
sub
xor
jp
flds
data16
mov
xchg
repnz
jo
outsb
js
inc
jo
repnz
shlb
test
call
pop
fstpl
jbe
mov
jmp
imul
aas
sub
fidivs
mov
mov
jb
sti
je
or
pushl
mov
fadd
and
rorl
inc
or
and
cmp
cld
mov
add
add
cs
mov
sbb
lods
sub
adc
addb
leave
decb
pop
mov
ja
and
mov
mov
inc
mov
jns
mov
sahf
mov
daa
pop
stc
shrl
sbb
pop
fwait
push
add
sbbl
push
shr
dec
sti
pop
les
xchg
movsb
sub
sub
shll
xchg
xor
jbe
inc
sahf
mov
arpl
sbb
das
aam
sub
rcl
lds
push
scas
pop
dec
pop
std
push
push
scas
sub
add
or
lods
popf
mov
inc
js
stos
xor
leave
push
xor
shll
pop
icebp
mov
or
adc
out
pop
sbb
cmp
stc
popa
jmp
mov
or
loope
add
jbe
adc
mov
in
or
popa
imul
xchg
ss
mov
pop
jg
add
orl
ret
out
sub
divb
mov
pop
dec
sbbb
inc
out
push
iret
fucomip
inc
outsb
jo
popf
mov
imul
add
imul
pop
out
sbb
das
inc
arpl
xchg
dec
scas
xchg
lret
out
xchg
stos
cmp
scas
mov
scas
shlb
scas
or
ss
cmpb
js
mov
in
roll
adc
cmp
sub
test
loopne
jle
pop
sbb
dec
sbb
push
in
mov
lods
lods
repnz
dec
xlat
pop
mov
stos
add
das
aam
enter
jae
outsl
xchg
mov
dec
enter
pop
inc
pop
lcall
rep
mov
xor
cltd
push
mov
adc
cmp
sti
jmp
xlat
jne
jo
jbe
gs
mov
iret
add
jno
dec
js
lds
dec
pop
jb
nop
xchg
arpl
mov
sub
js
imul
and
fpatan
or
outsb
pop
jne
push
in
xchg
movsb
in
repz
fsubrl
test
es
fsubl
sbb
cli
cli
sbb
xchg
loop
fdivs
pop
cmp
clc
xchg
mov
insb
pusha
mov
xchg
sbb
xchg
repz
push
insb
out
sbb
add
jne
xor
sahf
lahf
andl
test
mov
mov
movsb
inc
iret
leave
inc
cmp
das
or
xchg
cmpb
xorb
mov
xor
sbb
fisttpl
sbb
sbb
sysexit
test
inc
and
xor
rorl
into
jns
xchg
jne
xchg
mov
in
mov
fucomi
ds
dec
jnp
pop
test
sub
repz
insl
ret
add
arpl
insb
out
dec
xchg
dec
dec
in
aam
arpl
out
add
cltd
loope
imul
lods
popa
pop
sub
and
jbe
push
lea
fmuls
lods
fdivrs
mov
xchg
jp
pop
add
mov
test
mov
cli
pop
shlb
sbb
jo
arpl
push
daa
jmp
sub
jmp
mov
int3
jo
cmp
and
mov
or
or
jno
jb
xchg
jecxz
jmp
mov
inc
and
les
sub
insl
and
int
int3
nop
and
mull
mov
cmp
negl
sub
inc
mov
mov
add
mov
add
arpl
lcall
adc
xchg
mov
xchg
les
stos
test
jecxz
sbb
mov
xchg
and
sub
fucomi
popa
fiaddl
les
dec
sub
dec
mov
pop
stos
or
push
inc
lods
int3
outsl
cs
jecxz
xchg
mov
or
lods
jns
or
cmp
loop
and
add
add
shll
movsl
push
push
jge
xchg
jp
push
inc
popf
dec
and
sub
pop
inc
mov
out
adc
cmp
int3
outsl
add
xor
push
jecxz
jae
xor
mov
out
pushf
cmp
cmp
add
sub
xchg
cmp
sti
inc
adc
es
cli
ss
fisttpll
lret
cld
mov
mov
jp
mov
lret
mov
pop
shr
or
add
xor
cli
fwait
mov
mov
lret
cmp
iret
repnz
orb
mov
cmp
mov
sbb
pop
cmpsl
pushf
push
xor
cmpsb
ret
in
cmp
rolb
jbe
jge
mov
push
ja
data16
push
pop
fcoms
iret
inc
xor
dec
pop
jnp
mov
gs
lret
sbb
fwait
jbe
adc
loopne
fisubrl
test
imul
sbb
sbb
mov
bnd
mov
dec
add
mov
push
pushf
and
popa
pop
jno
aam
xchg
mov
inc
push
rcr
lret
or
jns
cmp
stos
inc
inc
xlat
ret
popa
call
pop
lea
mov
sbb
and
or
ja
iret
mov
push
imul
test
cli
lods
push
cmpsl
in
add
and
jp
ss
bound
mov
repz
stc
xor
test
mov
dec
push
pusha
pop
mov
loop
cmp
aam
add
fld
fisubl
lods
dec
mov
jge
in
sub
in
hlt
enter
ja
adc
je
inc
mov
xchg
push
pop
mov
ret
lahf
jge
mov
repz
aaa
imul
daa
inc
cmp
mov
pop
xor
mov
push
loope
mov
mov
jg
icebp
xor
nop
sbb
add
jecxz
ss
and
pop
filds
ficompl
sub
sub
xor
out
nop
leave
inc
xor
fdivl
xorl
outsl
pop
mov
inc
pop
lret
rep
insl
push
sub
mov
into
sbb
sbb
loopne
out
jbe
cmpsb
dec
in
fstpl
mov
add
fisubrl
xor
cmc
fwait
test
loope
jp
ret
add
inc
enterw
movsl
push
or
stc
aas
popa
adc
inc
push
lock
and
inc
loopne
lods
sbb
dec
in
mov
addr16
add
push
pusha
dec
add
int
sbb
pop
mov
movsl
movsb
push
cmp
fbstp
stc
mov
lea
repz
mov
icebp
xchg
mov
lahf
stos
lods
sub
push
ficoms
xchg
mov
xor
push
fisttpl
inc
push
movsb
popf
mov
rcrb
jg
adc
jp
inc
jb
mov
mov
andl
xchg
inc
cmp
std
xchg
mov
movsl
cmp
aas
xchg
in
sbb
scas
mov
and
pop
out
pop
cmpsb
inc
fiadds
add
les
aaa
mov
mov
mov
stos
loope
iret
pop
push
jle
adc
fildll
icebp
and
std
in
sub
cmp
sbb
scas
xchg
inc
and
push
sbb
inc
push
cltd
sub
mov
cmpsl
jno
and
or
imul
nop
pop
ss
and
fisubl
mov
jnp
fwait
dec
lahf
fdivrs
xchg
cmp
imul
and
jb
add
cli
push
hlt
ret
pop
decl
orl
xchg
sub
and
and
add
test
xchg
sub
shlb
jge
int3
mov
pop
adc
cmp
movsl
dec
adc
or
sbb
dec
dec
sub
push
pop
pop
or
jl
cmc
mulb
jmp
sbb
sbb
xchg
push
repnz
mov
cmp
bound
or
test
aam
sbbl
sub
mov
cmp
iret
pushf
or
or
jl
xchg
call
daa
ficompl
push
add
inc
mov
xchg
lods
xchg
sub
loopne
xor
adc
push
sbb
in
mov
or
bound
dec
aad
je
mov
push
inc
lret
test
sbb
or
mov
push
pop
sub
adc
push
pop
out
jns
cmp
mov
into
add
sbb
out
popf
ret
in
cmc
push
std
adcb
pop
adc
idivb
popa
xor
xchg
jne
xchg
or
shll
dec
add
push
jb
insb
cmpsl
pop
mov
ret
shll
cli
call
mov
out
and
jae
xlat
jg
jnp
cmc
xchg
add
sub
imul
es
loopne
pop
mov
and
sahf
inc
daa
ljmp
add
dec
cmp
cmp
popa
cmp
mov
aaa
push
jns
sbb
mov
dec
cmp
shll
mov
jbe
jp
movsb
cld
mov
or
aad
mov
orb
inc
lds
sbb
sub
shrb
push
cmpsb
testb
sub
jmp
frstor
and
jne
adc
int
es
je
pop
sbb
insl
sub
test
xchg
sbb
cmp
mov
xchg
stos
adc
shl
inc
sub
fmull
cs
into
pushf
or
sti
jno
sbb
dec
movb
mov
fs
test
lods
lods
xor
or
push
addr16
mov
leave
jns
bound
in
int
xor
mov
mov
mov
add
ficoml
mov
pop
aad
adc
xchg
push
in
popa
and
adcl
and
xor
mov
mov
shlb
addr16
xor
xor
inc
das
lret
dec
sbb
push
xchg
cmp
adc
iret
dec
jae
and
pop
mov
xor
dec
xor
clc
int
mov
cld
sbb
pusha
std
test
rolb
inc
imul
add
cmpsl
imulb
xchg
fimull
cwtl
or
gs
mov
xchg
es
push
frstor
stos
hlt
jecxz
dec
adc
mov
lds
mov
divl
add
mov
and
mov
ret
xlat
mov
cmp
pop
pop
or
xchg
or
jb
or
cmp
xorb
pop
loop
mov
and
in
fcmovu
cli
ss
lea
shll
aam
fisubrl
mov
ret
ret
or
les
sahf
mov
jns
and
jp
mov
cltd
push
rolb
insl
pop
cmpsb
aam
loop
mov
daa
mov
pop
jl
mov
test
cmp
sbbl
jnp
pop
dec
lret
cwtl
mov
xlat
sub
enter
inc
cltd
ljmp
push
lods
mov
sub
adc
test
mov
stos
adc
inc
cmp
lcall
xchg
mov
sbb
inc
cs
pop
sbb
sbb
xor
dec
sbbl
jmp
xchg
and
fcomps
sarb
in
sub
enter
mov
fcoms
cltd
out
sbb
sbbb
pop
adc
jecxz
add
mov
xor
adc
repz
aam
fcompl
mov
sub
rcrl
xchg
xchg
mov
daa
mov
or
jle
push
pop
dec
es
mov
mov
je
jge
iret
mov
sbb
jecxz
inc
sbb
dec
jne
sti
cltd
cwtl
mov
jno
lret
sbb
arpl
mov
xor
adc
das
adc
cld
push
push
outsb
lods
cmp
mov
jg
std
jmp
out
jnp
rcll
pushw
movsl
adc
dec
insl
xchg
iret
add
jle
in
lahf
mov
aad
add
xchg
mov
cld
stc
mov
mov
scas
push
mov
jg,pt
mov
inc
jecxz
jbe
iret
xor
or
stc
mov
jp
adc
lock
notl
stc
mov
xor
and
and
sbb
testb
xor
das
ss
pop
out
fildll
jle
faddl
aaa
sbb
into
lcall
sbb
or
es
jmp
add
loop
out
pop
outsb
xor
flds
cmp
jl
outsl
mov
fisttpll
mov
mov
sbb
neg
adc
mov
lret
ret
add
inc
mov
push
jmp
and
fisttpl
jg
repz
lahf
or
inc
jns,pt
jl
jmp
mov
add
jge
adc
in
mov
pushf
xchg
pop
jmp
movsl
arpl
aam
xchg
loope
jo
xor
mov
scas
push
and
outsl
sub
jmp
lret
scas
lea
scas
mov
out
or
popf
aaa
adc
std
add
sub
mov
icebp
push
dec
dec
inc
add
xor
mov
xlat
mov
add
add
jnp
lret
repz
out
adc
cmp
lcall
jp
pop
mov
xlat
into
movsl
insb
jno
jge
test
add
rorb
je
lock
loopne
sti
pop
adc
imul
inc
cmp
xor
adc
xchg
fucomi
out
hlt
pop
cli
inc
cmp
dec
jns
fisttpl
sub
push
insb
imul
insl
cmpsb
mov
mov
lahf
xor
fdivl
cmp
xchg
rorl
ds
stos
nop
movsl
jmp
jecxz
pop
pop
ljmp
mov
out
ljmp
sbb
ss
scas
mov
dec
fldenv
fcompl
dec
jb
lock
pop
popa
add
push
mov
arpl
in
pop
pop
xor
inc
ret
add
cmp
adcb
pop
cs
and
shl
and
andb
fsubr
jnp
xchg
pop
ftst
pop
idivl
aaa
ret
sub
xor
vcvtps2dq
aam
icebp
cmpsb
sub
gs
adc
stos
inc
cs
vpminub
jae
jmp
jl
dec
fs
pop
xchg
mov
cmp
sti
or
lods
lcall
xchg
fs
xor
mov
test
push
rcll
outsb
push
pop
adc
adcb
push
xor
in
pushf
push
xchg
jge
stos
xchg
flds
and
test
fiadds
pushf
popf
cmc
into
jb
xchg
mov
leave
adc
add
shl
rcll
mov
ficomps
stc
cli
lds
and
lods
lcall
int3
xchg
daa
sub
cs
jmp
xchg
mov
imull
mov
pusha
sahf
pop
sub
push
jge
rcll
adc
cmc
orb
mov
xchg
cmp
xorl
adc
in
mov
pop
fldt
jbe
dec
xchg
push
out
js
sub
sbb
loopne
add
push
and
mov
sbb
adc
push
push
inc
dec
xchg
xchg
push
mov
imul
dec
and
add
adc
out
push
loop
fwait
cmp
dec
mov
push
je
pop
into
jbe
mov
jnp
lods
iret
imul
jmp
jmp
mov
ret
ja
orl
push
int3
scas
insl
lds
adc
test
or
imul
push
fisttpl
out
add
fs
inc
jge
sub
jbe
fldl
cmpsb
inc
ljmp
xchg
or
icebp
push
jmp
xchg
cmp
sub
idivb
jae
or
in
sbb
outsl
adc
mov
and
les
and
xor
icebp
fidivs
pushf
stos
push
std
inc
les
popa
lock
adc
sahf
lret
arpl
scas
jo
loop
xor
xor
xchg
pop
or
push
inc
div
pushf
mov
pop
arpl
and
cmp
cld
mov
push
aam
and
sbb
shrl
pop
sub
movsl
loop
cli
fwait
sub
mov
dec
mov
fs
add
xchg
leave
sbb
rorb
sbb
cmp
je
test
or
cmc
jbe
iret
xor
pop
mov
sbb
xor
cltd
jne
and
add
or
add
sub
dec
cmp
dec
addr16
xor
adc
jmp
ret
mov
sbb
inc
movsl
push
sbb
cmpsl
sbb
rorl
insl
aad
scas
mov
cmc
pop
imul
and
mov
jae
bound
inc
subb
pop
fdivs
fsts
imull
in
data16
pop
xchg
sub
dec
in
add
sbb
mov
dec
int
jb
outsl
rcl
out
scas
pop
std
sahf
movsb
shrl
lea
mov
popa
out
mov
adc
jno
dec
mov
iret
sahf
mov
push
orl
lret
and
cs
aas
jp
aas
mov
xchg
icebp
inc
dec
stos
jnp
pop
vcvttsd2si
daa
jl
int3
outsb
mov
insl
je
sti
jae
mov
out
add
push
cmpsb
iret
sbb
imul
stos
aad
inc
aad
xorb
xchg
popf
push
vminsd
jmp
in
lods
sub
xor
ficompl
ficoml
repz
scas
ljmp
adc
ljmp
imul
outsb
mov
sub
adcl
aas
xchg
xlat
fadds
es
mov
fiaddl
xor
cwtl
sbb
push
mov
and
jns
gs
fmull
int3
mov
dec
rclb
insb
fdiv
sbb
sbb
imul
cltd
dec
mov
lret
nop
iret
loopne
pop
les
aam
and
jne
inc
mov
pop
std
into
push
rcrl
out
out
and
dec
lahf
jmp
push
xchg
iret
pop
and
maxps
repnz
fimuls
xchg
insb
sbb
xchg
pop
push
int3
pop
scas
nop
inc
mov
xchg
cltd
loopne
popa
in
jne
jb
adc
adc
pop
test
or
mov
sub
pop
push
test
push
imul
iret
ljmp
cmp
mov
mov
inc
push
adcb
sub
jmp
and
out
add
loop
sbb
xor
ljmp
pop
add
insb
push
mov
cmp
jp
push
fdivl
int
in
push
js
cmc
lods
mov
xchg
pop
stc
push
test
cmp
pop
sub
or
pop
or
adcb
loop
push
in
stos
imul
add
mov
jne
fadd
out
push
lods
push
mov
push
lahf
es
mov
sbb
add
and
dec
ret
push
sbb
pop
insl
stos
jp
push
ds
pop
push
jb
add
shrb
mov
ds
xor
mov
imulb
mov
iret
sub
jecxz
popa
cmp
call
inc
test
inc
and
neg
into
mov
popa
mov
and
ret
ret
mov
arpl
adc
lret
lea
imulb
xchg
sarb
lahf
fidivs
inc
xchg
mov
sbb
pop
lcall
push
adc
sbb
imul
mov
out
out
nop
jnp
jne
jge
incl
scas
push
lret
mov
sub
fcoms
loope
and
icebp
in
mov
out
add
inc
mov
mov
push
sbb
xchg
sbb
div
add
test
lock
cld
or
icebp
add
lret
dec
scas
adc
xor
and
iretw
shlb
xchg
shlb
adc
sub
jns
dec
sbb
shl
imul
enter
sbb
into
cmp
mov
ret
lea
xor
mov
lahf
cld
shrl
cld
pop
lods
fiadds
fmulp
repz
sbb
test
pop
addr16
push
jecxz
fsubs
in
cwtl
incl
jne
jo
add
mov
add
cmp
fsubrs
jmp
sbb
cmp
jp
add
adc
inc
jnp
mov
adc
mov
ds
adc
jns
idivb
jae
cmpsb
clc
mov
pop
inc
idivb
ss
xor
adc
jno
outsl
mov
pop
hlt
mov
inc
ljmp
push
xlat
sub
pusha
test
fsubrp
aad
add
and
pop
loop
sub
scas
lcall
out
ret
lods
adc
jg
stc
cs
lahf
stos
dec
or
mov
rcrl
jno
in
cmpsl
test
int3
subb
nop
lods
divl
fwait
pop
gs
pop
fs
in
rcr
cmp
fcom
test
jnp
jle
stos
cwtl
pop
jne
cmc
push
inc
mov
js
outsl
sbb
lea
and
or
scas
and
jp
inc
jnp
das
adc
jne
inc
sub
mov
dec
mov
mov
fwait
mov
cmp
jg
push
mov
jne
ret
and
stc
mov
push
es
push
pop
sbb
cmp
in
jecxz
inc
leave
jp
popa
fcompl
mov
mov
imul
out
popf
imul
push
mov
xor
int3
into
in
fwait
sti
xchg
sarl
cmc
add
dec
es
sub
jae
and
out
mov
push
loop
lods
adc
rclb
and
test
push
sbbb
aad
cmp
fsubl
aad
gs
cmp
ds
dec
xchg
mov
add
xchg
lahf
je
je
test
cmpsb
lods
inc
xchg
lock
scas
push
push
inc
jo
xchg
pop
test
out
xchg
xchg
push
imul
or
outsl
sbb
xchg
loope
cmpl
ds
xor
cs
iret
insb
outsl
xchg
mov
push
rolb
mov
adc
lock
mov
shll
fcmovu
aaa
out
add
or
push
sbb
loop
shrl
nop
movsl
aas
aam
mov
fs
mov
mov
arpl
fistpl
xor
in
pop
das
jmp
push
mov
xchg
test
iret
out
dec
cs
mov
popf
sub
stos
xchg
pop
pop
popa
push
add
pop
loope
out
insb
ja
jmp
sub
mov
sysenter
pop
sub
inc
mov
les
xor
jecxz
xchg
fwait
adc
jbe
sahf
dec
inc
mov
lods
dec
js
mov
adc
out
std
inc
or
movsb
mov
inc
jns
sarb
mov
xor
aas
ss
cwtl
push
or
xor
add
addb
cli
add
mov
fs
mov
adc
sahf
lret
mov
cltd
inc
popa
mov
cwtl
jo
xor
cmp
cmpsl
insl
nop
sub
cmp
pop
sti
xchg
mov
cmpsb
fxch
push
test
dec
testb
cs
mov
jle
jb
cmpsl
pop
jns
add
push
pop
inc
stos
sarb
cmpsb
xchg
cmp
sub
lds
jae
fstpl
cmpsl
or
incl
sub
dec
js
mov
movsl
push
inc
and
lock
mov
pop
aam
pop
xor
rorl
inc
sti
aad
lret
in
ret
ret
lret
nop
nop
mov
jb
adc
stos
inc
test
out
push
push
or
pop
aas
iret
and
bound
arpl
jo
js
icebp
scas
int
or
push
cmpl
stos
std
lcall
icebp
jmp
mov
pop
pop
data16
adc
ret
adc
out
aam
ret
mov
sbb
xor
xlat
xchg
clc
movsl
out
and
jmp
push
or
ret
xor
inc
cmc
and
mov
dec
notl
lcall
cmpsl
pop
ret
xor
and
nop
push
and
sub
lea
test
push
adc
subb
subb
outsl
int
push
pop
sbb
push
mov
mov
adc
movl
push
cld
mov
sbb
sub
lahf
popa
iret
das
lret
mov
stos
adc
mov
into
dec
vpand
adc
and
outsb
je
adc
test
mov
neg
mov
test
rclb
inc
bound
xchg
sub
xchg
fucomi
push
xlat
cld
dec
cmpsb
dec
adc
jge
cltd
adc
add
ja
push
mov
cltd
push
mov
pop
pop
int
cltd
jecxz
imul
andl
testl
adc
jns
mov
les
dec
sbb
inc
sahf
notl
std
xor
mov
jbe
adc
arpl
out
aad
mov
mov
ds
sub
mov
jl
mov
insl
dec
leave
jl
int
lods
lods
leave
lret
cmp
jnp
imul
mov
ficompl
mov
sub
lcall
adc
sub
sbb
pop
push
inc
add
stos
repnz
xor
sbb
and
inc
adc
sub
mov
dec
and
stos
shlb
mov
insb
cmpsb
shl
cmp
xor
rorl
adc
outsl
out
or
int3
sbb
addl
out
xor
xorb
fcomi
or
push
mov
cld
sub
push
insb
enter
fwait
inc
mov
out
pop
dec
insl
xor
pop
pushf
shlb
gs
popa
add
jl
jne
divb
and
xchg
xchg
test
jns
aad
adc
push
adc
fwait
idiv
je
jle
loop
sti
jne
xchg
xchg
and
inc
sub
cltd
ret
adc
mov
xor
mov
adc
jnp
sbb
pop
lret
mov
je
daa
arpl
lret
cs
sti
div
mov
sbb
push
add
inc
jl
xchg
hlt
outsl
loope
and
add
push
test
subb
mov
loope
stos
push
jp
outsb
addr16
cmpsb
fdivrs
mov
and
pop
enter
nop
push
inc
aam
sti
mov
popa
inc
mov
push
push
and
jge
insl
xlat
movsb
or
sbb
add
pop
mov
dec
mov
leave
cmp
shll
enter
xchg
push
pusha
shll
test
push
push
nop
mov
movsb
shlb
adc
pop
ss
mov
and
xor
test
dec
bound
stos
aam
push
push
push
sbb
and
in
adc
cmp
or
fisttpll
test
inc
xor
incl
jp
push
xor
rcll
jnp
movsb
inc
jp
adc
scas
add
das
inc
add
repz
outsl
mov
mov
push
pop
mov
push
xchg
clc
mov
in
pop
dec
addr16
push
xor
repz
mov
ds
repnz
dec
dec
call
push
push
sbb
sub
cmp
rol
aad
mov
mov
jbe
ror
jge
mov
pop
out
test
pop
push
movsb
sbb
pop
xor
ds
fbstp
loope
loope
and
lds
fsts
sub
push
xchg
mov
jecxz
addr16
mov
or
nop
mov
out
xor
fsts
xor
xor
adc
enter
outsb
sub
add
imul
and
xchg
test
scas
pop
frstor
cmp
popa
sbb
xchg
and
jmp
popf
clc
xchg
les
and
or
cmc
testb
sti
aad
mov
dec
jecxz
inc
add
pushf
outsb
shlb
fwait
sbb
push
adc
ret
jl
inc
lock
in
loop
xchg
out
push
xchg
rep
push
ja
adc
add
jae
enter
ffree
into
jae
fdivrs
inc
jge
sbb
jmp
inc
adc
sbb
enter
sbb
mov
dec
cmp
xchg
mov
rcrb
insl
xor
rorl
in
inc
movsb
mulb
shrl
jmp
cs
mov
xchg
pop
jl
xor
out
icebp
fcmovb
pop
sub
dec
xchg
push
in
out
push
scas
jle
inc
scas
xchg
das
push
loop
int3
xchg
and
dec
aas
jecxz
fdiv
out
jecxz
push
int
aam
jne
stos
xor
in
sbb
fldenv
lods
xor
pop
adc
mov
ret
pop
inc
inc
mov
fildl
mov
adc
inc
or
jbe
scas
cmp
sbb
rclb
jecxz
rcrb
cmp
mov
lods
xor
or
shlb
test
inc
imul
enter
fistl
mov
jnp
push
pop
pop
sarl
out
scas
cmc
outsb
pop
sub
call
xchg
inc
fucomp
add
sahf
movsb
cld
xchg
jb
cmp
lahf
ljmp
mov
mov
or
sbb
add
pusha
lret
ret
lds
or
mov
lea
fidivl
pop
mov
stc
adc
pop
dec
int3
pop
mov
and
add
jb
adc
movsb
popf
dec
fsubr
mov
xchg
jmp
repz
repz
icebp
in
push
mov
or
jmp
mov
test
lds
ret
in
fwait
nop
outsl
ret
xchg
outsb
outsl
xchg
xchg
xor
out
mov
cmp
adc
leave
ja
mov
and
lds
in
dec
mov
mov
jo
cmp
xchg
fldt
pop
into
xlat
add
and
stos
mov
nop
sub
pusha
cmp
jno
push
inc
inc
sub
incb
pop
pop
and
scas
mov
imul
rcrl
or
pop
dec
mov
lods
sbb
cmp
aas
rorl
push
lret
xlat
cmp
cmp
cs
loop
jne
or
aaa
ret
add
mov
notl
and
jae
out
jp
push
pop
arpl
addr16
hlt
dec
push
jp
dec
jae
pop
xorb
mov
loopne
addb
loop
adc
pop
inc
mov
sbb
cld
rolb
xchg
jb
inc
pop
pop
push
push
int
xchg
inc
pop
cmp
fwait
cltd
push
dec
jmp
lea
ja
sbb
outsl
push
ret
jns
mov
test
xlat
into
or
xor
into
push
int3
fildll
lret
addr16
rolb
insl
jns
rorb
pusha
test
lret
rolb
dec
fiadds
insb
cmc
mov
cwtl
decl
mov
stos
xor
sbb
xor
mov
ret
adc
inc
mov
sub
imul
jns
in
add
test
test
in
xchg
pop
fdivrs
jbe
ret
rcr
push
cmpb
outsl
mov
cmovnp
rcl
xor
inc
bound
xlat
outsl
add
jp
xchg
sti
loopne
mov
std
iret
sbb
xchg
or
or
dec
ret
daa
push
in
int3
inc
sahf
and
jl,pn
mov
loopne
outsb
mov
jmp
add
fwait
or
scas
mov
adc
rcrb
mov
inc
pushw
lahf
outsb
das
push
xchg
and
mov
out
inc
lds
out
test
cmp
mov
nop
cmp
add
subb
out
sti
cwtl
mov
ret
sti
cs
sbb
add
fstps
test
std
gs
out
jge
inc
or
imul
cwtl
adc
jl
bound
pop
mov
lahf
or
out
xor
xchg
push
das
sub
xchg
test
jno
inc
jmp
and
mov
cmp
rcrl
inc
test
push
push
mov
push
shr
dec
bound
push
imul
lods
mov
add
lret
pusha
jno
pop
xchg
dec
jmp
jns
mov
add
out
setg
xchg
xor
push
xchg
je
orl
ds
xchg
inc
jb
out
push
cld
jns
fnsave
shlb
pusha
ret
push
mov
ljmp
lret
jns
andb
sub
inc
popf
push
hlt
pop
push
or
dec
lret
adc
test
pop
jl
insl
outsl
cmpsb
adc
dec
ja
scas
cmp
sub
cmp
push
dec
test
jne
pop
and
push
push
int
mov
cmp
mov
cmp
and
cmp
pop
xchg
push
movsl
imul
out
push
jmp
js
xchg
test
xchg
ret
mov
adc
lret
mov
outsb
data16
xchg
jge
rcr
xchg
and
cmp
and
add
xchg
inc
dec
xor
js
adc
shrb
dec
pop
pop
mov
cld
pusha
xor
dec
pop
sub
dec
pop
int
sbb
ds
les
shl
xlat
sbb
cs
dec
rclb
push
mov
or
add
leave
or
xor
mov
loop
and
repz
test
xor
and
mov
adc
out
mov
into
jb
and
inc
add
cmp
mov
loop
mov
call
testb
int
mov
repz
jmp
xchg
sbb
pop
push
xchg
shl
jb
pop
xchg
pusha
sub
xchg
or
fwait
lret
iret
repz
mov
arpl
pop
pop
add
stos
stos
cmp
arpl
scas
and
sti
mov
or
xor
mov
dec
lds
sbb
dec
pop
jp
push
sub
xchg
jne
adc
or
rcrl
pop
cmc
iret
push
test
sbb
xlat
outsl
es
add
cmp
les
addr16
test
aam
sbb
loop
sub
in
lods
in
sahf
int3
xor
jg
mov
add
inc
or
lcall
mov
test
cmp
ret
pop
sbb
leave
imul
push
out
ror
lds
and
inc
pusha
inc
nop
jae
test
fwait
cmp
insb
jne
pop
xor
cld
clc
mov
imul
dec
les
sub
ret
or
xlat
xchg
cld
xor
loopne
or
xchg
lds
xchg
xor
cmp
cmpsb
shl
sti
adcl
std
mov
and
scas
outsl
pop
rcrl
inc
push
xchg
aad
bound
add
mov
out
clc
and
mov
inc
mov
jae
mov
and
aad
enter
pop
test
mov
out
inc
ljmp
adc
stos
inc
mov
dec
mov
ror
aaa
lods
xor
push
or
out
out
pop
inc
divl
decb
dec
popa
cmp
ljmp
subb
loop
clc
push
cs
jmp
or
aad
and
in
jg
sub
fcos
xchg
sub
arpl
je
push
in
sahf
outsl
push
push
push
sbb
sub
roll
fisubrl
aam
insl
inc
test
das
push
jmp
sub
iret
imul
sub
sub
fwait
lret
dec
bound
inc
cmp
mov
jne
shll
sti
aam
test
and
inc
mov
sahf
popf
dec
add
mov
mov
pop
loopne
xor
cld
test
nop
jae
shlb
sbb
clc
adc
fs
cmpsb
sar
mov
add
dec
test
mov
loope
add
sub
in
sbb
and
cmp
adc
or
xchg
enter
push
ret
dec
ja
shlb
clc
mov
std
inc
fidivs
enter
pop
cmpl
andl
aaa
sub
ret
pop
push
add
popl
bswap
sbb
cld
in
stc
insl
outsl
ds
fidivrl
data16
test
jecxz
dec
popf
push
enter
push
outsb
xor
jns
addr16
push
jne
jle
leave
pusha
lods
pushw
addr16
sbb
fmuls
jnp
xorb
repnz
push
std
push
jae
and
sub
xchg
es
outsl
sub
adc
sub
mov
xor
xchg
out
aam
and
xor
xchg
sbb
int3
loope
into
pop
xor
xlat
int
in
aas
push
push
mov
push
lcall
out
xor
cmp
and
addb
jmp
mov
sbb
fimuls
shrl
shlb
insl
stos
out
out
loope
int
fildl
ljmp
inc
les
lock
scas
pop
bound
jns
test
mov
mov
jle
outsl
lock
shll
cmpsb
je
sub
inc
stos
or
sahf
push
jl
push
int3
fwait
outsl
in
lret
mov
into
outsb
jne
and
mov
sub
movsl
lds
call
dec
pop
sub
aad
jecxz
scas
lods
jb
scas
fsubs
lret
xchg
xchg
fldcw
push
stos
int3
stos
inc
sub
in
mov
xor
xchg
or
ja
fs
add
mov
jmp
popa
rcrl
fldcw
pop
lock
shlb
push
xchg
cmpsb
rcl
jo
mov
dec
and
push
mov
mov
cmc
jb
mov
inc
sti
loopne
aas
push
xchg
adc
les
pop
cld
or
mov
push
dec
sub
xchg
xlat
push
jnp
jg
data16
inc
pop
pop
lcall
or
scas
add
ljmp
shl
stc
fcomp
js
sar
test
cmp
xor
mov
xchg
nop
adc
pop
push
scas
cmp
int
fldl
loopne
in
mov
push
inc
add
insb
adc
sbb
or
inc
sti
cmp
sub
shrl
loopne
inc
inc
jo
mov
jge
sub
ljmp
inc
imul
push
jbe
sti
mov
lock
dec
cmp
inc
sub
add
jae
stos
popa
cld
mov
fcmovnbe
jecxz
int
fdivrs
or
xor
cli
in
hlt
xlat
cmp
mov
xchg
or
iret
pop
out
addb
out
pop
in
movsb
stos
xor
sub
outsl
loopne
add
pop
pop
xor
mov
fisubl
cs
paddw
andl
sbb
cltd
or
loope
cmp
dec
stc
aam
sti
fcmovb
sub
pop
faddp
push
jae
mov
fcomps
decl
js
fcmovne
outsl
aas
cmpsl
mov
lock
enter
int
mov
fiaddl
jge
fstps
call
imul
out
sbb
sbb
dec
jnp
int3
ja
iret
and
push
fcoms
imul
outsb
or
and
out
adc
sbb
lret
icebp
or
fistpl
fwait
cmp
aam
cmpsb
fdivrp
test
insb
mov
inc
jne
outsl
dec
pop
shll
fnsave
and
sbb
js
leave
dec
push
mov
xor
adc
xchg
sarb
jle
je
pop
fisubrl
pop
push
pop
imul
loop
push
clc
cmpsb
xor
push
cltd
dec
je
inc
cmp
mov
xchg
fnstcw
cmp
daa
sbb
ja
sub
je
in
jecxz
sbb
loop
call
imull
loope
add
orb
mov
pop
dec
adc
jg
mov
shrb
clc
insl
xchg
add
mov
jns
rorb
mov
pop
and
cmpsb
mov
pusha
test
xor
sub
in
fwait
xchg
mov
enter
scas
aas
cmp
mov
rorl
cmp
pop
adc
push
dec
das
mov
movsb
out
cmp
sub
mov
add
sti
lcall
xor
daa
sub
or
in
mov
enter
inc
push
push
jmp
add
pop
imul
pop
mov
pop
mov
test
xlat
fdivl
popf
ljmp
adc
push
popa
lea
fs
rolb
lea
mov
add
in
pop
sbb
stos
dec
stos
inc
sub
adc
mov
xchg
test
jno
jp
xchg
mov
cs
cmpl
aam
ljmp
out
in
aad
cmpsb
pop
fs
adc
xor
scas
cmp
mov
dec
push
pop
cmpb
cmpsb
int3
fcmovne
sbb
lret
dec
arpl
xorb
loope
das
xor
or
ja
xor
mov
adc
maskmovq
notl
cmp
aad
and
sbb
pop
aad
cmp
test
jle
mov
loop
mov
sbbb
adc
sub
dec
stos
ret
clc
out
arpl
and
mov
mov
rolb
sub
dec
es
ja
daa
loop
fcoms
popa
pop
cmpsl
ljmp
dec
push
and
mov
or
lds
call
push
adc
cmpsb
movsb
in
xchg
adc
mov
dec
ret
lea
out
xchg
sbb
ret
loopne
push
mov
mov
dec
insb
ljmp
push
cli
ds
and
cmp
or
andb
sbbl
mov
lahf
gs
push
push
lock
cmpsb
bnd
inc
or
cwtl
ret
push
mulb
cmp
sbb
rcrb
xchg
add
pop
aas
sbb
aaa
roll
cltd
push
outsl
mov
cmp
lods
xor
inc
divb
cmc
xchg
mov
outsl
repnz
mov
arpl
adc
lahf
loopne
not
inc
call
cmp
jne
jmp
imul
adc
std
and
push
test
insb
stos
fistpll
or
push
std
int
leave
inc
outsl
jg
mov
int3
aam
sbb
mov
int3
inc
fsubrs
mov
xor
xor
lds
shll
jo
cmpsl
adc
stc
inc
decl
hlt
add
sti
cmp
cmp
mov
xlat
jg
popa
fcomps
out
jmp
ss
mov
or
stc
in
aad
mov
push
lods
or
push
jle
mov
mov
pop
sbb
cmp
es
iret
outsb
fwait
dec
sub
dec
orb
in
or
cmp
xor
fildl
xchg
in
mov
lods
mov
cs
inc
cmp
xchg
fstps
mov
pushl
insl
or
adc
mov
shlb
inc
ja
pop
loope
cwtl
dec
push
mov
push
test
mov
loope
jno
insb
and
xor
fsub
fildl
je
cmp
insl
je
mov
jmp
in
add
in
lret
rorl
mov
sahf
sbb
in
dec
xor
mov
inc
sbb
push
cmp
es
xorl
movb
stos
lods
mov
jno
cmp
mov
or
add
ret
add
sub
inc
cwtl
dec
cwtl
in
pusha
mov
loop
sub
or
lahf
add
int
sub
jne
xchg
pop
dec
mov
pop
mov
pop
push
xchg
stos
and
dec
adc
gs
dec
es
fsubs
or
sub
sbb
xchg
insl
push
and
pop
pop
cmp
mov
lret
pop
mov
cmpsl
pavgb
cmpsb
sbb
push
inc
jmp
sti
xchg
cmpsb
xor
shl
pop
fwait
jns
cmp
xlat
dec
jb
inc
aas
sub
mov
cmpsb
pop
inc
dec
mov
cmp
js
pusha
jb
ja
insl
fldcw
mov
bound
adc
pop
dec
xchg
and
imul
in
out
imul
sbb
cmpsl
sbb
test
repz
push
cmp
add
push
add
rcrb
test
sub
mov
mov
mov
xchg
mov
xchg
adc
mov
scas
scas
push
mov
push
fisubs
pop
sub
fwait
adc
xchg
fistl
test
jl
mov
or
pop
mov
pop
jl
mov
mov
arpl
jae
xor
mov
sbb
mov
cmpsb
mov
addr16
mov
or
divl
loop
shlb
jge
lcall
mov
in
cltd
ljmp
mov
out
push
out
dec
into
push
sbb
inc
movsl
and
sahf
outsb
jle
sub
decl
sbb
jno
je
inc
sub
ret
jns
int
nop
loope
divb
pop
ds
adc
sbb
push
subl
xchg
sbb
fisubrs
imul
ret
popf
add
ss
sub
dec
and
xlat
popa
xchg
inc
inc
test
pop
dec
cli
adc
mov
cmc
sbb
das
push
test
adc
dec
lret
outsb
mov
loope
arpl
scas
jbe
jns
mov
push
and
dec
sub
cld
push
cltd
sub
cmp
mov
mov
fs
rcl
push
movsb
jo
cmpsb
xor
mov
cli
cmc
cs
inc
je
or
loope
sbb
sub
sub
cmp
or
dec
and
lahf
jne
xchg
jbe
fbstp
jecxz
cwtl
lahf
insb
jno
xchg
cmp
sub
test
xchg
adc
out
cmp
mov
jp
fnstcw
outsl
xchg
xor
pop
xchg
cmp
dec
les
lods
jae
add
roll
mov
jb
pop
mov
pushf
dec
and
inc
lods
ret
inc
cmpsb
enter
and
in
into
jo
outsb
pop
in
dec
sub
xor
lret
jle
xor
orl
cmpsl
fisubs
sbb
rcll
addb
mov
pop
add
dec
ret
fs
insl
das
int3
in
cltd
daa
mov
mov
jae
and
f2xm1
test
xchg
test
sbb
mov
inc
es
sub
movl
idivl
xchg
dec
push
lea
cld
call
aas
mov
pusha
lock
popf
jb
pop
dec
pop
jecxz
out
lahf
jl
mov
in
js
out
ret
int
mov
xor
sbb
in
pop
push
shlb
adc
loop
das
int
lods
cli
les
andl
jb
fucomi
xor
and
cmp
ret
hlt
mov
jle
jecxz
lds
fcompl
push
cmp
mov
push
ficomps
and
int3
or
in
xor
pop
jge
mov
es
mov
in
adc
aas
lods
sbb
pusha
xchg
pop
mov
or
lods
pop
adc
sahf
xchg
insl
sbb
and
add
scas
ret
mov
jg
iret
jb
cld
leave
push
lcall
sti
test
mov
sub
movsl
lcall
fdivrs
pop
adc
and
nop
fs
mov
loop
inc
sbb
cmc
in
jmp
jo
jbe
aam
push
jns
jge
add
jle
out
push
pop
mov
cmpb
lock
xchg
loopne
test
adc
add
or
cli
mov
xchg
mov
mov
jle
lods
lds
andl
rorl
and
jl
add
mov
xchg
stos
mov
push
adc
xchg
xor
xchg
dec
out
sub
inc
in
je
cmp
ss
inc
out
add
pop
inc
sub
and
cmp
mov
and
fmull
lods
add
and
rorl
jge
hlt
cwtl
insb
or
lret
nop
orl
xlat
xchg
les
fxch
mov
flds
sti
xchg
mov
adc
loope
cli
mov
stc
cld
inc
or
xchg
fs
clc
push
out
mov
xor
cmp
mov
insl
push
xor
mov
lods
rcrb
mov
aam
push
push
add
sub
mov
pop
fwait
xor
mov
repnz
ss
inc
add
pavgb
sub
adc
dec
add
xchg
lea
push
int
lcall
loop
daa
mov
stos
adc
icebp
fnsave
push
sub
stos
stc
push
sbb
dec
or
pop
adc
push
push
mov
sbb
mov
loope
fnsave
jecxz
je
fs
cs
jge
add
push
int3
les
test
call
adcl
cmp
mov
mov
push
idivb
arpl
ds
push
sarb
scas
pop
pop
icebp
jecxz
mov
notl
cmp
jmp
cli
outsb
jo,pn
in
popf
arpl
test
jne
div
push
sub
mov
or
cltd
mov
dec
sub
sbb
jg
jmp
push
jnp
fs
xor
cwtl
roll
inc
mov
in
out
inc
stos
fsts
loopne
push
jbe
pop
mov
jge
xchg
lcall
notl
xor
aas
dec
and
sbb
out
loopne
lret
dec
add
bound
pop
insb
sub
pop
push
cmp
out
jge
or
jecxz
pop
xor
inc
sbb
das
test
clc
mov
add
or
pushf
sbb
add
mov
and
repz
add
hlt
adc
or
sbb
shll
inc
sbb
dec
adc
aas
icebp
out
mov
ds
inc
ljmp
mov
sbb
jp
push
and
jge
add
fisubrl
push
fstl
addr16
adc
and
cld
adc
test
push
dec
jmp
sub
hlt
xchg
es
mov
add
cmp
lret
or
mov
sbb
inc
push
imul
or
inc
sbb
cmp
ss
push
jno,pn
cmpsb
adc
sti
fisttps
aas
push
enter
subb
pop
pop
inc
data16
movsl
enter
push
sub
xchg
add
mov
jne
movsl
xlat
cmpsl
mov
sub
ds
jnp
dec
les
and
pop
adc
pop
mov
pop
cmp
test
nop
dec
fstpl
adc
add
lock
ret
jns
cmp
outsl
bound
or
mov
jmp
sub
fadds
sub
jmp
lret
imul
in
xchg
xchg
insb
jbe
or
inc
fcoms
repnz
incl
push
inc
xchg
pop
into
push
jle
jg
inc
fistpll
mov
aam
adc
push
mov
popf
cmpsb
or
fmulp
insb
push
repz
cli
mov
jnp
adc
out
mov
jne
fs
push
push
cmp
jl
ja
ss
pusha
icebp
pop
fcom
test
es
lock
inc
mov
jle
test
mov
subb
mov
fldcw
sti
popa
pop
int
xchg
xor
pop
cmpsb
adc
add
mov
push
xchg
xchg
out
lock
xor
inc
inc
jecxz
out
nop
lea
sub
movzwl
out
sub
nop
pop
out
cmp
lea
out
jle
dec
stos
stos
ficomps
fscale
pop
arpl
lods
mov
xor
mov
out
outsl
push
lock
mov
pop
dec
divl
pop
cmp
mov
shll
je
mov
push
push
mov
mov
loopne
je
arpl
jmp
in
add
cmp
and
adc
cmp
mov
mov
xchg
in
stc
pop
xchg
loope
mov
sub
xchg
xor
popf
inc
dec
outsl
and
sbb
dec
cld
les
insl
jecxz
pop
xor
adc
jnp
push
out
ficoms
and
cmpsl
fidivrs
pop
ret
push
mov
inc
stos
lock
or
jae
xor
in
popf
sbb
add
xor
dec
jne
cmp
stc
popa
push
ljmp
aas
xor
imul
outsb
sbb
lea
xorl
cltd
push
xlat
pushf
cvttps2pi
fld
scas
add
inc
movl
push
jle
cli
xor
sbb
popa
dec
aas
fs
sbb
lret
xor
push
push
xor
mov
mov
dec
stos
arpl
adc
ficompl
iret
vpor
pop
lahf
popf
ja
sti
or
shlb
and
jo
sbb
ficompl
ficoml
mov
popf
cmp
jo
push
push
adc
jl
cltd
xor
bsr
rolb
jno
push
push
scas
xlat
push
sbb
rclb
jns
stos
cwtl
ret
test
lret
loopne
push
push
mov
add
dec
imul
push
or
push
int
adc
sub
cmc
mov
mov
adc
pop
pop
push
lea
mov
lods
and
mov
jp
pop
pop
and
xor
jecxz
mov
cmp
stc
push
lea
andl
and
push
test
adc
loopne
xchg
bound
scas
mov
jmp
xor
test
push
mov
gs
cwtl
xlat
sbb
pop
jne
cmp
sub
or
pop
adc
test
jmp
lahf
les
arpl
nop
jno
xchg
sarl
xlat
xor
test
sti
xchg
add
mov
daa
pop
fisubrs
and
das
dec
inc
cmp
cmpsl
adc
sbb
dec
in
xor
out
fwait
or
jne
mov
sbb
aad
sbb
std
dec
in
cltd
push
aas
xor
cld
aad
mov
pop
sbb
jg
pminub
or
insl
and
outsl
mov
dec
jo
daa
aad
cltd
cmc
or
ret
loop
adc
mov
mov
pushf
mov
pop
jae
dec
cld
add
in
or
stos
sbb
loopne
sti
cld
jg
xchg
or
lret
popa
push
jo
into
push
pop
inc
pop
cmp
jne
jb
and
into
mov
push
das
rol
lret
pop
or
outsl
push
cwtl
sbb
in
and
mov
sub
lret
ja
xor
fwait
push
nop
mov
or
orl
icebp
xor
aas
mov
test
popf
xchg
add
in
movd
jecxz
inc
mov
stos
xchg
xor
das
hlt
xor
shr
xor
and
mov
js
push
cmp
sbb
scas
icebp
insb
dec
loope
insl
sbb
stos
cmpsl
dec
sbb
mov
pop
xor
push
mov
fstpt
xchg
mov
mov
mov
in
mov
add
sub
fidivs
push
mov
xor
mov
cmp
add
popa
jmp
stos
lea
push
add
dec
or
cmp
ret
cmovs
mov
lahf
lds
sub
fucomi
mov
adc
arpl
sub
clc
sub
repnz
cmpsb
jnp
mov
ficoms
pop
xchg
ret
sub
jge
jecxz
xchg
in
call
leave
pop
rolb
cwtl
sbb
sti
mov
or
jecxz
pop
shlb
push
insl
test
aam
or
lds
pop
inc
mov
ljmp
mov
xorl
xchg
add
jbe
in
ret
push
sub
mov
in
sub
or
popf
fsub
cmp
inc
sbb
call
int3
rclb
or
jecxz
fiaddl
aaa
mov
idiv
xor
cmovs
movsb
loop
pop
mov
and
mov
std
popa
xorb
xlat
xor
sub
push
sbb
cld
push
inc
push
xchg
mov
test
lock
lods
jno
cmp
out
inc
xchg
leave
cwtl
mov
dec
xadd
fsts
lcall
mov
jge
and
push
in
mov
push
jne
out
es
mov
jno
sti
ret
cld
test
sub
out
jl
xchg
das
mov
jecxz
aaa
test
jae
mov
mov
mov
gs
jl
adc
fs
loope
sub
jae
cmp
push
test
xor
xlat
inc
mov
jle
jge
ds
jg
popf
mov
jp
daa
lcall
mov
dec
push
push
sub
xor
adc
inc
rclb
adc
mull
push
loop
dec
jl
mov
cmp
xor
jmp
xor
es
outsb
fcomip
fidivs
mov
inc
mov
push
push
popf
pop
push
dec
push
push
shrb
arpl
adc
add
xchg
dec
imul
pop
mov
pusha
add
push
sbb
and
adcb
cwtl
loop
jbe
mov
mov
ja
jnp
in
pop
mov
mov
fadds
pushf
xchg
repz
pop
cwtl
pop
dec
in
movsl
es
jbe
adc
incb
shrb
sbb
dec
jno
das
mov
xchg
jbe
xchg
mov
sbb
mov
scas
sbb
sub
pushf
into
in
add
loope
mov
loope
fsts
andb
ss
xchg
push
inc
mov
jg
das
out
lock
sti
filds
out
and
sub
inc
xchg
adc
cmpsl
dec
shlb
mov
mov
xchg
adc
sar
dec
in
add
push
movsl
test
mov
ds
frstor
and
pusha
shlb
jmp
insb
push
add
lods
xchg
out
sahf
blci
mov
sub
aaa
and
sbb
test
scas
jg
and
inc
mov
and
aad
pop
lods
pusha
sahf
inc
int
adc
sub
loope
outsb
call
xor
jo
cmp
sbb
pop
enter
cmp
rcrb
or
dec
outsl
shrl
push
add
out
mov
cmp
pop
inc
cmp
inc
out
xchg
xchg
rcl
pop
arpl
and
movsl
ret
sub
jl
pop
push
int3
out
pop
mov
xlat
ss
xchg
fsubrs
mov
jmp
fildl
push
pop
inc
push
test
pop
insl
adc
popf
rcll
sbb
xchg
sbb
and
out
cmpsl
jne
mov
mov
xchg
mov
sub
subl
jns
leave
cmpsb
testb
in
push
scas
movsb
pop
shll
jge
or
aaa
ja
cmpsb
sbb
mov
add
pop
subb
pop
sub
cmp
sub
jge
pop
jmp
push
and
bsr
push
lahf
lret
xchg
aad
xor
stc
xor
add
mov
xlat
xchg
inc
cmp
jno
or
dec
lea
xchg
rolb
sbb
push
sbb
jg
add
pop
int
or
and
and
sti
sub
mov
jo
in
pop
inc
xchg
sub
sbb
cs
sub
out
pusha
jnp
popa
sbb
insl
dec
aas
lods
jle
ret
rorb
jno
xchg
fisttps
stos
jl
xchg
lahf
lods
inc
jp
sbb
mov
test
push
adc
repnz
imul
jae
and
inc
sbb
lods
ret
sub
iret
jo
add
orl
out
cld
xchg
or
and
cmp
lret
mov
js
aas
subl
scas
add
pop
adc
jg
call
out
mov
mov
jno
inc
aas
cmp
outsb
cld
into
add
add
dec
in
cmp
push
cmp
dec
insl
dec
add
sub
add
mov
jl
pop
adc
sahf
adc
movsl
jb
mov
in
sub
cmp
jnp
jns
cmpl
shll
scas
fidivrs
dec
push
cmp
jmp
or
mov
cs
adc
repz
lods
xor
or
mov
cmp
push
aaa
xor
and
or
movhps
push
push
aam
mov
inc
add
inc
test
add
mov
ficoms
pop
fcomps
pop
jg
dec
aad
mov
mov
sub
popf
jg
ja
pop
lods
ljmp
arpl
sbb
cltd
scas
or
sub
mov
mov
xchg
pusha
rorl
inc
and
subl
out
call
pop
ljmp
loopne
cld
xor
hlt
adc
jp
mov
mov
imul
adc
jle
or
jmp
adc
push
int3
add
cmp
and
into
adc
lret
jge
je
push
fsubr
ljmp
ret
jbe
divb
and
xchg
push
repnz
jmp
cmc
push
pop
std
push
aaa
push
cmp
ret
int3
mov
push
subl
push
lahf
mov
notb
push
sbb
int3
ficompl
es
xchg
inc
xlat
sub
add
push
adc
sbb
into
fs
repnz
jmp
dec
inc
stos
and
ret
pop
mov
push
mov
daa
out
lea
ds
mov
ds
jb
xor
ds
ljmp
shll
out
xor
inc
and
and
daa
cltd
sub
pusha
mov
dec
pop
push
and
or
leave
dec
ljmp
jns
dec
mov
pop
push
or
inc
sub
rcll
mov
fistpll
pushf
negb
hlt
sahf
cmp
push
test
sub
cmc
cs
sub
in
out
out
stos
fsubrl
xor
sarl
xor
cmp
mov
cmpsb
adc
daa
dec
test
js
jnp
mov
mov
in
lret
fsubl
xor
xor
mov
sbb
leave
test
incb
mov
lcall
jecxz
movsl
idivl
in
inc
lret
js
movl
popl
xchg
ss
ud0
fmul
mov
js
fs
xor
inc
iret
pop
inc
jno
ret
push
lock
mov
sub
xchg
daa
xchg
movl
jbe
adc
outsb
dec
aas
in
daa
ret
ljmp
shl
jecxz
sub
pop
and
jne
cmpsb
sub
xor
dec
cmp
sbb
rorb
in
enter
sbb
ja
dec
fs
mov
leave
scas
ljmp
xor
aad
and
dec
inc
pop
dec
add
cmp
mov
push
mov
or
jg
and
cmp
cmp
sub
test
imul
pop
rorl
jmp
sub
outsb
add
xchg
adc
mov
mov
and
dec
imul
or
cmp
bound
movsl
push
sahf
mov
jb
mov
mov
dec
mov
jl
imul
in
mov
inc
mov
cmp
inc
sub
ret
mov
cwtl
rcrb
add
jae
xchg
xor
fsubp
int
rolb
push
pusha
jo
icebp
je
fldl
push
xchg
jge
in
mov
popf
add
lcall
bound
dec
aaa
mov
or
xchg
mov
xchg
aaa
adc
cmp
pop
fcoms
sbb
inc
int
fsts
cmc
test
adc
lret
ljmp
cmp
mov
lcall
daa
add
test
xor
scas
or
jbe
mov
scas
xchg
fists
pop
iret
loopne
sub
sub
push
pop
cmp
mov
stos
xor
cld
iret
sub
jno
fistpll
and
or
sahf
cli
scas
and
jb
imul
ret
or
outsl
and
lahf
cs
imulb
sbb
mov
mov
jmp
out
repz
xchg
push
mov
lds
aad
add
jo
rcrl
movsl
adc
xor
jns
add
jns
cmpl
loopne
icebp
stos
push
repnz
push
call
lret
out
pop
push
jns
pop
lods
ljmp
adc
shrl
sub
bound
add
jmp
mov
ficompl
and
adc
stos
push
std
icebp
pushf
sbb
xchg
or
or
bound
fldt
mov
lods
lds
in
dec
xchg
nop
push
ds
add
add
dec
addr16
jp
mov
out
inc
xor
add
mov
jmp
jo
gs
shlb
xor
adc
mov
je
insb
in
insl
in
cwtl
outsl
push
test
cmp
or
sub
fsts
xchg
imul
or
call
loop
mov
jnp
inc
test
add
inc
push
in
int
test
and
movsb
xor
mov
sahf
xchg
cli
xor
mov
dec
sub
and
outsl
negb
add
and
sub
xor
movsl
inc
test
xlat
sbb
add
dec
xchg
jae
es
sbb
dec
mov
sub
inc
mov
jnp
pop
and
push
pop
inc
jp
scas
movsl
pusha
jae
ficoms
ds
pushf
outsb
outsl
sbb
ds
jae
ret
rolb
jb
loopne
fildl
jle
push
leave
and
mov
mov
mov
in
dec
add
pop
clc
pop
adc
sahf
jne
loop
xchg
nop
cmp
test
or
orb
fldl
mov
loopne
sub
and
pop
push
sub
pop
addb
in
or
cs
enter
sbb
push
jbe,pt
dec
jae
scas
push
mov
cmp
adc
out
xor
pusha
es
icebp
pop
jl
aas
mov
sti
pop
dec
sub
jnp
stos
int
imul
outsb
cmp
pop
test
loope
pop
xlat
pop
dec
sbb
cltd
or
cmp
jae
jo
xor
test
xor
xchg
sbb
dec
push
cli
or
mov
push
xor
bound
mov
ret
scas
cmp
xor
jg
adc
lds
mov
out
xchg
fwait
lods
inc
fstpl
stos
mov
into
js
mov
aas
dec
inc
add
or
adc
jmp
lcall
cmpsb
and
lock
or
mov
xor
addr16
cmpsb
mov
ficomps
pop
lods
lret
mov
out
ds
movl
scas
lds
adcb
shr
sub
dec
data16
shlb
js
pop
jmp
cli
ljmp
push
or
mov
inc
xor
add
mov
mov
sub
movsl
xor
pop
pop
sbb
jb
orl
dec
xchg
inc
pop
or
push
jae
cmp
xchg
mov
mov
add
sbb
mov
inc
mov
icebp
push
push
mov
clc
push
repnz
push
int
in
xchg
sub
int3
push
rorb
cmp
out
dec
ljmp
and
fcompl
mov
adc
and
push
push
mov
mov
fiaddl
lock
data16
test
pop
xchg
aas
jle
push
insb
cmp
movsb
dec
mov
cmp
or
or
adc
pcmpgtd
aam
mov
lds
cmp
lods
insl
loop
aas
sub
xor
jbe
push
and
sub
mov
mov
hlt
movsb
push
add
push
into
roll
fldenv
sbb
imul
fs
out
mov
in
push
dec
inc
dec
lds
mov
or
xchg
pop
lret
cmp
pop
outsb
test
mov
dec
ds
cmp
sub
push
sbb
outsl
mov
mov
sub
adc
jl
das
fidivl
push
or
push
shrl
jae
lea
idivl
adc
mov
sub
test
repz
and
arpl
rol
mov
std
or
sub
or
js
int3
outsb
xor
cmp
pop
stos
jl
ficompl
mov
std
scas
stos
icebp
and
add
cwtl
movsl
and
pusha
xchg
ficoml
das
xchg
or
mov
pop
lods
stc
push
popf
pusha
jecxz
subb
cmp
out
mov
mov
out
jns
scas
push
and
aad
xor
loop
ss
jnp
mov
xchg
insb
jg
push
add
rorb
or
daa
adc
out
scas
jns
popa
js
fiadds
daa
insl
imul
nop
pop
decl
mov
popa
push
ret
shrl
stos
dec
testl
cmp
jno
int3
in
dec
pop
cmpsl
pop
xchg
push
push
ljmp
dec
xchg
ss
cwtl
int3
insl
roll
les
scas
jnp
addr16
xor
jno
shl
in
dec
cltd
icebp
pop
mov
jle
mov
mov
sbb
ljmp
mov
inc
lea
mov
mov
mov
jge
mov
insb
loop
cmc
ret
mov
mov
dec
icebp
jp
mov
pop
das
push
repnz
outsb
iret
test
mov
add
out
pop
push
mov
adc
inc
adc
pop
lock
and
cmpsb
add
fstps
mov
and
clc
mov
push
jp
or
aas
fwait
xchg
sub
xchg
inc
loope
cmp
shll
push
and
mov
std
mov
pop
cmc
daa
jae
test
ret
mov
in
je
push
loopne
lds
fnstcw
push
lret
rolb
mov
adc
push
sbb
or
and
int
in
out
int3
mov
pop
dec
aad
mov
aas
push
inc
pop
inc
pushf
inc
test
push
push
xchg
clc
inc
mov
inc
iret
or
gs
mov
test
shr
sbb
out
cmp
cmp
push
xchg
jne
mov
nop
sbb
insl
and
mov
xchg
icebp
ret
test
or
mov
out
daa
jb
jle
mov
stc
jecxz
or
push
stos
mov
aad
xor
cmc
out
mov
or
movsl
lods
xchg
xor
xor
push
test
sbb
imul
daa
or
push
pop
pushl
popa
test
sbb
cmp
inc
adc
testl
lds
cmpsb
shrb
je
sarl
fimull
fstpt
mov
insl
cmp
pop
out
call
mov
xchg
sti
lahf
in
mov
or
hlt
dec
sti
jo
and
mov
stos
lahf
mov
scas
sub
add
roll
iret
mov
fnstcw
dec
repz
fsubrp
pusha
cmpsb
stos
xchg
aad
push
es
jp
xor
pushf
and
mov
push
lock
shl
loop
sbb
fimuls
stos
mov
cmp
inc
pop
cmpsb
repz
cmp
xchg
stos
pop
cmp
ja
das
cmc
insl
push
xchg
sub
pop
inc
jno
fimuls
xchg
icebp
cmpsl
popf
shlb
fs
pop
jnp
add
mov
testl
test
in
pop
aad
ja
xchg
or
add
fs
pop
fdivs
test
and
pusha
rorl
pop
mov
stc
xchg
out
cmpsb
xchg
mov
pop
push
mov
das
js
xchg
mov
jp
lret
jno
lret
aas
js
mov
mov
mov
jmp
lret
rorl
jne
dec
out
aam
lock
cld
int
mov
cmp
jae
inc
add
sub
js
push
js
jne
test
xor
add
mov
push
mov
mov
sbb
mul
xchg
repnz
mov
cwtl
and
xor
sbb
dec
lahf
xchg
inc
mov
sbb
stc
sub
pop
or
sti
ss
shrl
mov
pop
push
scas
xchg
fiaddl
es
loopne
cmp
popa
mov
mov
push
ret
inc
and
jge
imul
adc
addr16
popf
add
pusha
rorb
lods
cwtl
clc
icebp
pop
decl
nop
loop
dec
pusha
push
sub
xchg
pop
and
cltd
inc
cmp
jb
adc
std
mov
pop
dec
xlat
ret
lock
sub
ds
and
scas
das
xchg
pop
sarl
mov
ljmp
mov
jmp
idivb
nop
push
and
jl
dec
sbbb
aas
into
pushf
and
loopne
adcl
pop
dec
sahf
lock
aad
lea
into
dec
lret
sbbb
mov
adc
cmpsl
jb
in
outsb
out
push
sbb
ret
adc
pop
jo
shlb
cmp
out
pop
add
hlt
rcl
jp
and
sbb
aam
cli
or
adc
flds
xor
jp
aam
bound
dec
addr16
jnp
sbb
jmp
in
mov
out
xor
xor
adc
inc
cli
push
mov
cmp
ret
movsb
xchg
fwait
mov
enter
std
inc
iret
push
pop
rorl
shrb
pop
fcom
sbb
aam
ret
test
inc
adc
in
test
xchg
jne
inc
mov
shll
mov
adcb
orl
xor
dec
cmp
in
outsl
mov
ror
iret
popa
movsb
xchg
mov
in
ret
ret
pop
daa
and
mov
dec
or
outsb
clc
sub
jbe
xchg
jbe
xchg
push
dec
xchg
pop
or
inc
xchg
imul
bound
adc
adc
fisubl
pop
daa
ljmp
aas
inc
inc
dec
mov
arpl
add
pop
mov
jae
es
arpl
mov
push
push
pushf
ficoms
lods
ret
das
in
or
add
mov
jg
and
or
cmc
sahf
enter
pop
xor
mov
or
nop
je
outsb
add
stc
pop
je
imul
xor
std
pushf
jns
adc
jb
fstp
push
std
rorl
push
loop
iret
or
jo,pt
lock
rol
mov
pop
pop
mov
mov
inc
mov
insb
mov
and
push
je
cmp
mov
mov
xor
shl
cmp
xor
jge
xchg
sbb
into
push
sti
lods
stos
cmc
mov
rcll
test
xor
pop
or
mov
imul
ja
mov
add
aas
mov
outsl
and
mov
shl
lahf
xor
stc
pop
fimull
shrl
mov
dec
lds
jle
jge
addr16
sbb
out
inc
inc
sub
fisttpl
add
push
dec
sbb
mov
add
stc
mov
adcb
cmc
xor
push
cld
in
pushf
cltd
jnp
outsl
enter
or
dec
test
mov
test
inc
or
outsb
xchg
ja
dec
insb
scas
repz
or
jne
mov
fiaddl
mov
repnz
inc
je
dec
cmp
insl
jg
stos
xchg
pop
push
mov
xchg
iret
fisttpl
sahf
mov
ljmpw
mov
sarl
stos
jge
pop
cmp
out
xchg
fists
xor
pop
sbb
push
cmovl
or
cmpsl
lcall
or
mov
push
inc
push
cmp
sub
pop
lods
mov
inc
bsf
push
insb
sti
lcall
add
pop
mov
cli
mul
pop
pop
icebp
scas
dec
mull
xchg
popf
subl
addr16
mov
jp
stos
sbb
sub
jne
xor
out
add
mov
and
dec
mov
jg
out
fcoms
fs
add
mov
push
sbbb
cwtl
inc
aas
and
sbb
and
aaa
dec
addl
inc
cmc
outsb
loop
aas
sahf
icebp
ljmp
lahf
cmp
pop
int3
xchg
je
ss
pop
sbb
pop
mov
frstor
js
sbb
or
enter
dec
sub
stos
add
test
popf
mov
enter
loopne
mov
or
mov
lcall
icebp
std
dec
fsubl
and
ret
jg
add
mov
jge
sbb
mov
cmp
add
adc
es
push
mov
ljmp
ret
mov
mov
adc
lret
mov
movsl
lcall
sbb
negb
sbb
cld
test
fildl
cmc
mov
dec
adcb
icebp
sti
jp
fimull
cld
or
xchg
push
fistps
add
mov
out
or
jno
mov
aaa
es
addr16
adc
mov
inc
imul
bound
xchg
cli
ret
xchg
jne
ficoml
mov
xor
cmpsl
adc
repnz
mov
mov
ret
cs
push
pop
ljmp
jbe
loope
rorb
es
enter
or
xchg
je
cmpb
xlat
insb
cmp
arpl
filds
add
cmp
xchg
negb
lods
dec
cltd
cmc
push
es
push
mov
xor
outsl
mov
je
shl
push
dec
leave
sub
lods
movsb
dec
int3
cmp
aas
hlt
push
xchg
movl
sbb
xchg
cltd
add
dec
rorl
inc
fistpl
rcrb
and
adc
mov
and
hlt
push
pop
lret
jecxz
das
in
xchg
les
lret
inc
push
add
daa
push
jg
push
inc
in
movsb
jb
mov
jle
or
xor
mov
jnp
xor
out
aaa
xchg
adc
push
mov
jne
and
mov
mov
mov
movsl
lods
sbb
es
les
clc
pusha
repnz
add
mov
cs
cwtl
xchg
std
xor
leave
fidivrl
sub
fwait
aas
xchg
std
inc
popa
lcall
iret
or
add
and
and
aam
je
movsb
add
push
add
clc
mov
daa
insl
xchg
je
jp
xchg
sub
in
xor
ljmp
jecxz
lods
clc
xor
add
pop
leave
cli
leave
pop
xchg
sbbb
lods
sub
cmp
sub
mov
cltd
mov
pop
mov
or
jo
or
xlat
mov
ret
fwait
xchg
out
xchg
push
and
dec
inc
add
outsb
push
stos
mov
push
jo
cmp
mull
and
or
xchg
clc
xchg
ja
or
leave
add
or
cwtl
xchg
lahf
mov
int
add
cmpsl
lea
out
jmp
and
out
push
aam
pop
xchg
call
push
pextrw
add
jmp
arpl
jmp
fsts
das
es
mov
popa
mov
cmpsb
jmp
dec
cmp
sub
bnd
push
insl
mov
cmp
mov
mov
dec
in
cmp
dec
ds
test
jno
inc
jl
pop
jno
sahf
add
push
jp
mov
gs
xchg
test
lahf
cmc
pop
pop
ret
xchg
push
xchg
in
popf
push
fnstcw
rcl
adc
mov
rcr
xchg
mov
push
daa
and
ds
cmpsb
lock
xchg
fadds
sbbb
dec
fdivrs
add
lods
inc
in
xchg
pop
lret
je
push
push
es
ljmp
imul
xor
mov
dec
xchg
clc
int3
jp
jo
cmpsl
xchg
orl
jno
inc
iret
clc
push
fucom
mov
out
shll
push
jbe
loop
cmp
rcll
dec
sub
bound
push
in
mov
mov
movsl
xchg
sbb
std
xor
and
or
push
insl
add
cmp
popa
push
push
mov
aaa
mov
dec
mov
mov
out
inc
add
fnstsw
xor
mov
sahf
dec
mov
sbb
add
and
lret
xchg
mov
jae
xchg
inc
adc
stos
jmp
xchg
mov
xchg
lret
mov
jnp
mov
les
loop
or
ljmp
and
aaa
into
sub
mov
xchg
inc
push
test
mov
ja
lods
enter
pop
or
sti
filds
mov
add
ret
test
or
ficomps
outsb
jecxz
shrl
sbb
pop
xor
leave
or
ss
call
and
lods
adc
inc
sbb
std
sbb
sti
or
adc
xchg
push
lods
flds
inc
ret
lock
aam
enter
cmpsl
mov
push
mov
ret
mov
pushf
cld
cs
ljmp
in
sbb
mov
sub
xor
lods
push
or
jmp
push
popf
loope
lcall
mov
icebp
ja
mov
lock
jbe
test
or
push
pushf
or
inc
incb
cmp
xor
bound
fiadds
and
mov
into
jo
mov
pop
loop
adc
mov
pusha
xor
leave
dec
and
aas
jg
out
mov
int3
shrb
and
shll
divl
movsl
movsl
sub
add
mov
roll
insl
mov
inc
sbb
pusha
imul
shrl
cmpsb
ljmp
jp
into
ss
inc
mov
sub
ficoml
in
dec
in
push
cmp
int3
nop
xchg
jne
fs
shll
sub
push
lea
xor
add
adc
aam
lret
loope
jl
out
stos
fidivl
insl
jb
js
inc
sar
sub
lods
jmp
ret
xchg
pop
movsl
inc
bound
sub
jl
inc
aad
loope
ret
and
pop
mov
stc
sbb
mov
pop
dec
fsub
jmp
out
rcr
ds
mov
cld
lock
push
push
mov
std
je
std
sbb
mov
in
pop
add
ret
cmp
xchg
leave
xor
popa
shrb
lret
fs
adc
xchg
fnstsw
aad
aas
paddusw
mov
test
dec
lahf
outsl
add
cmp
in
dec
test
pushf
shlb
pop
sub
imul
cmp
decb
dec
sbb
cwtl
adc
and
jno
repz
mov
push
js
push
jne
mov
adc
jmp
jp
mov
dec
inc
pop
int3
or
push
mov
aas
xchg
adc
jnp
jle
adcl
dec
sbb
or
mov
mov
movsl
lcall
stos
ret
mov
and
test
xor
sub
mov
cmp
mov
fnsave
test
and
scas
das
cmp
fwait
inc
pop
and
mov
mov
stc
push
mov
loop
push
pop
idivl
fmull
xchg
popf
push
inc
mov
jmp
cli
add
rorl
fistpl
cli
mov
adc
in
hlt
inc
iret
fld1
cmc
shrl
push
sbb
sbb
xlat
cld
sahf
aad
imul
sub
dec
bound
adc
outsb
cld
dec
call
add
add
xchg
adc
jge
pop
jle
insl
mov
in
andnps
push
pop
inc
inc
dec
push
xchg
jae
mull
pop
push
insl
inc
icebp
int
cmp
jno
dec
js
mov
gs
pop
xchg
mov
stos
adc
xchg
adc
cmp
xchg
pop
sbb
fwait
shl
lret
test
jb
mov
cmp
cmp
pop
arpl
insl
imul
pushf
adc
outsl
scas
jb
outsb
and
mov
loop
jb
pushf
cli
adc
daa
stos
push
lods
jmp
jg
xor
add
fsts
sub
push
push
push
fidivl
mov
fbstp
ret
xor
or
mov
inc
mov
xchg
and
pop
cmp
push
sub
ljmp
sub
jno
enter
fbld
mov
mov
xor
repnz
mov
fwait
adc
call
inc
data16
jp
jle,pn
cmp
add
test
pop
and
or
mov
fcoml
and
arpl
test
shl
and
xchg
mov
sub
adc
js
xor
push
lahf
mov
xchg
jl
leave
xchg
enter
or
out
mov
inc
fwait
aam
das
xor
lret
sbb
push
pop
filds
push
js
jbe
adc
add
mov
dec
add
push
comiss
in
in
insb
insl
add
or
push
add
pop
les
mov
testl
fsubl
pop
inc
sub
rcr
loop
fisttps
sub
inc
leave
push
mov
sub
popf
adc
cli
jl
jnp
jg
lcall
push
std
arpl
adc
sahf
dec
cmp
push
jns
xchg
aad
mov
dec
dec
pop
lcall
fs
xchg
je
rorl
test
ja
dec
test
cmpsl
inc
sub
hlt
xorl
rorl
dec
mov
aas
mov
and
int3
shll
test
jns
adc
addl
mov
mov
dec
or
scas
push
lcall
cmpsb
sub
inc
das
ret
cmpl
jb
gs
lods
in
ja
cmp
test
pop
aad
lock
sub
sbb
cmp
and
ret
shlb
add
popa
add
mov
aaa
mov
aad
jno
fcompl
sahf
xchg
scas
sub
stc
push
test
mov
adc
ss
mov
sbb
inc
rclb
js
mov
fwait
ja
out
pop
push
shll
ds
xorb
pop
popf
jnp,pn
iret
adc
cmpsl
aas
push
lea
dec
mov
xchg
mov
adc
cwtl
rcr
cmp
jnp
mov
push
sbb
sbb
and
inc
shrb
xchg
lods
pop
addr16
insb
jmp
mov
sbb
in
aam
push
addr16
jo
jne
add
nop
ret
cmp
les
push
xchg
and
cmp
outsb
ret
jno
inc
mov
jmp
xchg
stc
jne
jno
retw
jnp
scas
subb
and
jmp
scas
xor
mov
add
stos
sbb
add
cmpsb
fcmovnbe
xor
dec
xchg
stos
push
imul
mov
cs
stos
fbld
fwait
or
imul
test
int
loop
ficompl
test
add
mov
mov
inc
and
xor
push
rorb
scas
fadds
es
and
cmc
popa
js
dec
mov
sti
pop
xor
call
les
int
rorl
outsb
mov
outsl
or
leave
imul
and
rcll
std
ljmp
test
lcall
pop
pop
ss
lock
add
pop
cltd
out
inc
push
ja
enter
inc
jecxz
outsl
shrl
into
sti
shll
loop
dec
jg
mov
push
sti
mov
rolb
scas
xchg
ja
xchg
fildl
inc
mov
mov
into
xor
in
cwtl
fdivl
or
jae
xor
inc
or
addb
test
mov
les
or
loopne
ds
cs
xchg
scas
pop
sar
shll
mov
int3
or
push
js
dec
loopne
aam
pushf
sbb
sbb
mov
or
mov
xchg
shrd
or
pop
js
int3
push
data16
mov
and
cwtl
lahf
scas
loop
pop
enter
and
enter
inc
jg
jmp
cs
test
pop
std
or
and
cld
lds
mull
jg
into
nop
and
popa
or
xchg
scas
jp
push
cmp
mov
fidivrl
roll
dec
dec
shrl
insb
sarl
sbb
mov
pop
or
mov
xlat
clc
adc
ret
cmp
cmp
shll
and
fbstp
sub
or
loope
inc
scas
pop
fisubrs
inc
int3
addr16
jecxz
icebp
sbb
cld
idiv
mov
dec
cmp
int3
mov
inc
cld
outsl
mov
cmp
pop
shlb
inc
xlat
lret
mov
mov
inc
add
or
cmc
js
out
lods
mov
dec
pop
and
fisubs
mov
icebp
bound
or
mov
rcrb
dec
bound
sbb
lret
gs
pop
int3
lret
int
aad
push
sbbl
gs
pop
mov
cli
loopne
aad
test
mov
aad
lods
fildll
sbb
xchg
mov
mov
stc
out
es
xchg
inc
sub
xor
fbld
and
cmpb
xchg
xor
xchg
stos
or
push
and
rcll
push
nop
jo
rcll
adc
add
jmp
xchg
fs
popa
xor
push
dec
cmp
fmull
pop
shll
mov
daa
pop
test
mov
xor
sub
jmp
cmp
push
rorl
lret
cmp
repnz
sahf
ffreep
sahf
sbb
loop
pop
sub
loope
scas
out
jno
sub
xchg
xor
mov
sbb
out
clc
adc
sub
imul
test
xlat
xchg
popa
xchg
mov
fimull
mov
jne
pop
dec
mov
out
xchg
jmp
adcl
daa
xchg
cld
push
imul
sbbl
sub
jb
cli
push
test
imul
xchg
jg
testl
mov
mov
xchg
add
or
xchg
fmull
push
xor
cmpsb
ret
mov
push
inc
mov
ret
mov
cmp
rolb
in
insl
push
je
xchg
mov
test
insb
les
outsb
mov
mov
dec
test
xor
jecxz
mov
int
inc
jmp
sub
out
mov
jmp
outsb
sbb
in
jle
sub
dec
push
fidivrl
inc
jg
cmp
inc
aas
fists
xor
repz
cmp
pop
aas
cmp
jge
and
stc
test
leave
aam
mov
pop
fcomps
mov
test
xor
pop
pop
popf
xor
xchg
inc
or
jns
xor
mov
jmp
out
arpl
test
outsl
in
mov
mov
ret
arpl
cmpsl
push
pop
pop
hlt
and
jnp
out
and
repz
sbbl
mov
xor
xlat
fwait
or
jecxz
or
movsl
rcll
jge
stos
xorb
cmpsl
cmp
push
decb
jo
pop
cs
inc
dec
jbe
les
dec
mov
add
aam
sti
cmpsl
aam
adc
mov
test
icebp
pop
outsl
jno
stc
push
mov
sbb
sbb
or
cld
imul
iret
mov
cmpl
arpl
sub
xchg
call
outsl
fmull
cmpsb
add
sbb
sbb
lahf
mov
cmp
dec
fistps
cmc
mov
jae
jp
movsb
mov
pop
pop
pop
adc
pop
popa
ljmp
adc
int
les
adcl
dec
adc
outsb
and
adcl
rolb
pop
out
inc
adc
insb
popf
jl
xor
mov
pop
fidivrl
push
pop
iret
cmp
mov
call
out
push
push
mov
push
push
inc
test
cmpsl
insb
jnp
pop
and
pop
dec
subb
mov
jbe
in
aaa
dec
pop
inc
adc
mov
push
enter
loop
cmp
mov
and
push
pop
jg
dec
jnp
adc
out
pop
push
push
je
mov
xchg
mov
push
dec
outsl
pop
jg
add
ljmp
dec
imul
cld
mov
dec
mov
ds
adc
sub
xchg
mov
inc
sbb
js
cmp
cmp
dec
push
popf
outsb
jnp
or
and
lods
jg
inc
sub
adc
cmp
pusha
xlat
mov
int3
mov
push
dec
adc
enter
xchg
aaa
test
xchg
jmp
ja
inc
lcall
xlat
das
push
adc
pop
lods
mov
jbe
xor
cmp
shr
push
adc
lds
cmp
push
sbb
mov
sbb
jns
notl
shll
in
sbb
xchg
pop
jbe
mov
je
cmpsl
jne
scas
fcoms
mov
or
ret
in
pop
daa
adc
cs
out
test
mov
es
adc
push
and
cmpsb
mov
hlt
push
push
pop
popf
push
arpl
sub
jmp
adc
cmp
mov
cld
lret
dec
lods
das
fisubrl
xor
test
lock
es
cwtl
and
out
ja
out
jge
and
cmp
sub
xlat
imul
pop
push
and
push
psllq
sbb
cmp
and
dec
in
push
push
push
loope
outsb
push
and
lahf
dec
and
ds
push
movsb
in
mov
sarl
adc
jne
int3
into
dec
ss
push
lods
xchg
pop
and
lock
out
dec
dec
inc
sub
xor
xchg
enter
dec
subl
cmpsl
mov
sbb
out
pop
cmp
in
sbb
sbb
push
xor
mov
stc
sbb
divl
add
jne
push
cmpsl
push
or
inc
cmp
or
pop
mov
std
jb
mov
in
test
test
imul
cmpsl
inc
xchg
xchg
jnp
and
push
and
mov
out
cmc
dec
xor
cmp
out
adc
mov
repnz
dec
sub
dec
mov
lds
sub
sbb
nop
inc
cmp
out
add
movsb
aad
pop
insb
inc
subl
mov
in
sub
stos
adc
add
addb
enter
mov
pushf
push
xchg
addr16
and
xchg
divb
mov
or
xor
pop
loope
xlat
add
iret
into
outsb
pop
out
in
sub
sbb
xchg
xor
leave
cmp
rcr
fcmovu
daa
push
rorl
cmp
and
dec
lcall
enter
and
scas
pop
mov
dec
bound
sbb
stos
jne
cmp
sub
fdivrs
xchg
ret
mov
daa
pop
jmp
or
mov
or
mov
stos
outsb
dec
lds
or
enter
pop
adc
rol
push
cmp
mov
jno
int3
add
fwait
stos
out
out
sub
jmp
lret
fbld
fsubrl
cmp
js,pn
test
and
pop
int
out
js
mov
or
jnp
and
xor
mov
add
hlt
shrb
loopne
test
negl
out
add
ficompl
push
jecxz
pop
mov
mov
pop
mov
js
push
and
adc
test
in
std
mov
cli
mov
jb
pop
pusha
lods
mov
cmp
and
inc
popf
pop
push
shl
les
jne
mov
xorb
fcompl
lret
push
jecxz
fistpll
xchg
sub
mov
ds
jo
movsb
jle
fistpl
lds
loop
jle
mov
xchg
adc
lods
jbe
les
aas
cmc
xchg
repz
mov
mov
mov
es
enter
jb
mov
sbb
arpl
sbb
add
jne
jl
adc
stos
mov
sbb
xchg
sbb
sub
in
dec
xchg
adcl
fsubl
adc
push
cmp
out
test
push
push
bswap
mov
mov
int3
insb
cld
mov
rcrb
pusha
ljmp
stos
mov
les
orb
jae
pushf
jmp
adc
movsb
mov
inc
fcomps
imul
jnp
out
jecxz
repnz
ss
fbld
mov
mov
jmp
push
cld
sub
cmpsl
flds
test
jge
outsb
cmc
inc
jle
test
sti
test
les
pop
cmp
xchg
fdiv
adc
in
dec
je
test
sub
or
or
xor
out
stos
ds
es
sti
sti
cmp
sarb
push
imul
or
push
flds
addl
push
and
rcl
mov
mov
mov
clc
and
fadds
sub
pop
sbb
imul
mov
int3
and
inc
jbe
mov
sbb
mov
sahf
fwait
inc
dec
js
decl
xor
mov
inc
xor
ljmp
clc
dec
arpl
jnp
ss
xchg
rcrl
or
cmp
scas
adc
and
test
lret
aaa
das
imul
mov
cmp
xlat
outsl
xor
movsl
shrl
xorl
ja
cmp
in
xor
fcomip
dec
inc
jb
mov
jne
dec
add
jnp
adc
mov
or
wbinvd
aam
mov
adc
imul
dec
push
out
cwtl
add
imul
popa
mull
into
push
xor
mov
in
lahf
mov
mov
mov
sbb
inc
and
cld
rclb
jns
adcl
data16
push
shlb
cmp
xchg
xor
jnp
aas
mov
movsb
rol
test
iret
test
pop
pop
jae,pn
sbb
jo
daa
jle
sub
pop
imulb
pushf
adc
xor
cmp
push
push
and
cld
loopne
lahf
fisubl
lods
ret
and
out
faddl
out
cltd
insb
repnz
movsl
hlt
sub
cli
cmp
scas
out
mov
hlt
push
xchg
in
es
dec
lret
cmp
hlt
pop
mov
jg
jl
fdivrl
mov
movsl
in
ret
cmpsl
pop
daa
nop
shll
aaa
insl
leave
imul
movsl
and
aam
pop
inc
push
ds
jno
mov
int3
bound
pusha
pop
push
addr16
inc
push
cmp
setle
gs
mov
xlat
and
adc
hlt
clc
mov
loopne
sub
mov
or
hlt
pusha
int3
arpl
nop
cmova
sub
sub
push
push
sti
shr
daa
mov
jle
mov
or
scas
icebp
imul
xor
xchg
lds
clc
ds
test
inc
dec
push
or
dec
stos
popf
and
scas
cmpsb
cli
sub
enter
mov
mov
stos
sbb
lahf
jnp
cs
jne
sub
adc
sub
out
and
clc
loop
mov
sub
fiaddl
test
outsl
repnz
notb
mov
xchg
and
cmp
xlat
add
testb
in
push
mov
roll
std
mov
push
mov
mov
fs
adcb
dec
jge
lds
mov
pop
je
ja
rcrl
mov
dec
and
cmp
push
mov
add
jl
int
shrb
mov
mov
aaa
push
mov
mov
xor
pop
adc
je
or
hlt
loopne
inc
xchg
loope
sub
rcll
push
testl
adc
or
in
and
dec
es
repnz
adc
adc
xchg
jae
mov
scas
xor
lcall
stos
ficompl
lea
mov
sub
fwait
stos
fcoml
cmpsb
pop
jecxz
mov
add
sbb
sbb
aas
dec
cmp
andl
and
int
push
xchg
xlat
push
mov
cltd
fstpl
mov
in
push
loopne
mov
push
hlt
test
mov
mov
pusha
sub
rorb
test
push
adc
and
loopne
test
out
or
pop
lock
push
cmp
leave
jg
xlat
outsl
mov
test
sub
clc
mov
mov
xchg
cmp
enter
fucom
xorb
pusha
mov
into
cmp
sub
mov
test
ds
fistps
mov
mov
sti
xchg
inc
jle
shlb
lret
int
int
push
std
aad
outsb
je
into
popf
test
pop
fidivrs
jae
cmp
not
mov
outsb
xor
mov
xchg
or
int3
pop
or
int
cmp
and
mov
pop
add
adc
inc
ret
mov
push
xor
pop
xor
into
jno
pop
mov
popf
push
fisttpl
in
jo
push
mov
lds
sarb
test
data16
sahf
mov
push
or
subb
push
ds
mov
je
arpl
sbb
push
aas
and
aas
ja
es
in
cmpl
pop
mov
mov
out
jno
out
dec
int3
out
xor
sub
cmp
cmpsl
push
jecxz
aas
ja
xchg
cwtl
cmpsl
arpl
xchg
jmp
ret
add
test
cmpsb
ret
adc
push
add
cs
pushf
push
adc
pop
js
dec
adc
mov
or
enter
jbe
xlat
push
in
xchg
pusha
rclb
push
lods
jp
rcrl
xchg
cmpl
jno
pop
stc
movsl
adc
int3
xchg
mov
pushf
mov
dec
mov
iret
dec
push
imul
std
sub
arpl
inc
push
aas
in
nop
sub
outsl
add
pushf
imul
mov
jle
pop
mov
mov
lods
mov
adc
in
mov
jle
in
cmp
into
and
mov
pop
inc
xlat
popa
clc
xor
push
cmc
push
inc
jb
lock
inc
daa
cmp
das
and
enter
mov
inc
add
ret
inc
cmp
arpl
adc
pushfw
js
sti
incl
ja
and
sbb
int
xchg
mov
sub
cmp
leave
loopne
mov
add
jo
js
jp
iret
xchg
sub
xchg
out
outsl
xchg
adc
scas
mov
and
sbb
lea
xor
add
into
and
cmpsb
push
xor
daa
hlt
test
cmp
shrl
sarb
jbe
les
mov
cmp
xor
xchg
xchg
xlat
bound
out
mov
or
lcall
mov
mov
add
cltd
mov
add
lds
xor
ficoml
pop
stos
xchg
adc
aas
xor
xor
imul
adc
or
push
fs
xchg
out
jge
insb
and
and
int
insb
in
dec
lds
fnstcw
cmp
xchg
push
fmuls
movsb
mov
push
fdivr
fadd
iret
sub
push
push
lds
push
shrb
stos
and
sbb
ljmp
filds
pop
xor
inc
repnz
jae
mov
out
in
sbb
or
sahf
rolb
stc
lock
lock
xchg
jp
inc
add
pop
push
insb
sub
sub
popf
mov
mov
fiadds
or
dec
shll
xor
xchg
lock
push
pop
lea
mov
arpl
cmp
dec
loope
mov
mov
push
test
js
cmp
mov
int
sbb
push
mov
xor
sub
sbb
mov
sbb
out
jb
ljmp
imul
add
inc
in
in
lret
clc
imulb
lods
in
jns
testl
cmp
inc
push
push
sbb
mov
orb
mov
ljmp
mov
mov
in
bound
push
scas
and
adc
cmc
addr16
and
jmp
adc
mov
sub
dec
xchg
mov
sub
adc
push
mov
sbb
lock
dec
fs
or
ss
test
cmp
fidivrl
or
or
and
sub
inc
adc
xchg
xchg
clc
sub
inc
cmp
mov
pusha
rclb
scas
cwtl
xchg
ficomps
pop
dec
jecxz
mov
and
cmp
adc
adc
clc
mov
test
in
lcall
cmp
aaa
cli
bound
mov
je
mov
adc
pop
xor
aad
mov
lods
pusha
xchg
aad
adc
dec
pushf
ljmp
shlb
jns
lea
jns
das
pop
sbb
sti
mov
stc
ret
or
push
mov
sbb
inc
xor
mov
and
cmp
pop
dec
push
sbb
xchg
lods
sbb
aas
pop
or
and
xchg
push
push
pop
lds
mov
dec
mov
rorb
xor
pop
sahf
loop
cmpsb
fdivrs
hlt
mov
jns
filds
cld
or
pop
inc
daa
daa
mov
movsl
out
cmp
mov
dec
add
mov
add
in
pusha
xchg
je
xchg
ja
jl
xchg
test
push
test
sarl
mov
mov
outsb
sahf
cmc
xchg
in
inc
inc
iret
fnstenv
mov
test
pop
jmp
shl
icebp
sti
dec
cmp
pop
insb
push
jge
mov
rcrl
dec
sub
in
add
scas
jne
ja
rcrb
jnp
shrl
xchg
dec
pop
or
mov
xchg
push
xchg
popa
ja
fs
pop
test
dec
push
movsl
inc
jle
clc
mov
jno
dec
xchg
js
je
fucomp
cmpsb
arpl
out
leave
cmpsb
xchg
jnp
sub
and
pop
mov
xchg
mov
setns
clc
jnp
sbb
inc
and
imul
jae
push
cmp
jecxz
ss
lcall
xlat
pop
add
mov
scas
mov
into
inc
mov
mov
lods
lahf
mov
jecxz
xchg
mov
inc
adc
aam
fwait
and
fcoml
stc
stos
xchg
mov
ja
sub
sahf
push
call
out
lcall
jbe
aad
push
jp
popa
ds
jno
xorl
or
cmp
sahf
popf
inc
int3
pop
out
and
jmp
inc
out
add
inc
mov
call
shrb
dec
jo
outsb
cmp
arpl
ljmp
aam
jne
push
cltd
out
mov
mov
sub
adc
xlat
arpl
das
or
pop
adc
xchg
and
dec
mov
jmp
pop
mov
aas
in
mov
mov
jnp
int
dec
insl
aaa
jae
arpl
lock
or
roll
mov
movswl
mov
insb
cld
sahf
add
xchg
loop
sub
sub
sub
aaa
stos
jnp
sub
in
movsb
dec
into
pop
ljmp
int3
stc
push
lcall
ljmp
jb
lods
loopne
stos
sti
or
xchg
movsl
sub
jle
andb
ljmp
cmp
jo
xor
xor
dec
sub
fistpl
mov
ficoml
push
orl
jbe
mov
pop
insb
dec
lret
xor
jnp
cltd
mov
in
add
cmp
adc
pop
pushf
pop
in
jmp
leave
fwait
lret
out
bnd
cld
cs
call
out
or
xor
jno
add
and
sub
jnp
add
pop
incl
arpl
lcall
jle
or
or
mov
idivb
daa
pop
jo
pushf
call
cmp
add
mov
push
inc
push
daa
dec
outsl
adc
and
repnz
ds
and
push
mov
std
cld
jg
cmc
mov
sub
mov
testl
loop
jmp
mov
jg
popf
xchg
popa
mov
mov
add
xchg
cwtl
and
cmp
jo
sbb
pop
out
pop
test
inc
insl
ret
pop
xor
mov
pushf
movsb
mov
pop
inc
cmp
adc
movsb
jne
lcall
mov
ret
xchg
add
out
loopne
ret
lret
aad
pusha
sbb
repz
adc
or
test
sub
mov
rorb
rcrb
imul
imull
mov
push
lahf
stos
xor
jns
fbld
stos
cmpsl
insb
cmp
jbe
xor
xchg
test
insb
adc
xor
sub
testb
scas
mov
xor
dec
pusha
xchg
data16
or
push
test
test
lds
push
popa
xchg
les
inc
in
jnp
cmp
add
pusha
ret
mov
lea
ljmp
mov
cmc
insb
mov
mov
aad
pop
je
daa
add
lret
mov
pop
dec
jo
das
in
sbb
xchg
cmp
fimull
sbb
sbb
dec
lea
push
adc
arpl
or
scas
out
pop
scas
jge
ret
jo
repz
mov
xchg
daa
icebp
flds
ret
mov
and
xchg
xor
lret
clc
pop
cwtl
mov
test
add
and
out
fwait
and
xchg
in
flds
push
xor
mov
test
push
inc
xor
fprem
pop
pop
pop
inc
jge
jne
dec
dec
pop
mov
jg
fists
and
sub
mov
cli
dec
std
mov
cwtl
ficomps
aam
mov
rcl
xor
dec
jo
xchg
lods
cmp
mov
pop
scas
push
arpl
int3
imul
push
cmp
pop
or
xor
xchg
gs
int3
sub
jmp
fisttpl
xchg
bound
inc
add
or
leave
sub
sahf
push
inc
aaa
in
outsl
and
and
imul
push
xor
cli
add
xor
sub
pop
scas
pop
into
push
ret
push
nop
sub
jmp
cmpsb
pop
orb
cmp
or
sub
lods
xor
rorb
adc
pop
roll
lock
faddl
xor
lock
xchg
xor
xor
push
cmp
repz
lea
lock
cmp
sub
adc
addl
lods
dec
lret
leave
mov
outsl
jl
mov
mov
pop
inc
icebp
rcr
lret
jb
cld
into
fistl
mov
mov
clc
cmp
hlt
int
test
js
mov
xchg
and
jecxz
es
or
aaa
bound
cmp
push
adc
fcomip
dec
addr16
outsb
mov
adc
inc
push
cmp
push
stc
xchg
push
cmp
cmp
pop
push
fldl
aad
imul
mov
adc
add
sbb
adc
outsl
in
jnp
cwtl
mov
ret
inc
mov
ss
push
mov
jg
leave
dec
jle
push
cmpsl
pushw
lods
xor
addb
sbb
std
mov
xor
mov
adc
popf
xor
pop
cmp
xchg
inc
jbe
shl
loope
mov
fucomip
das
mov
push
pop
cmpsl
daa
mov
mov
pop
bound
ja
xor
daa
mov
lea
arpl
cmpsl
sub
aam
sub
mov
leave
mov
imul
mov
add
movsw
imul
rclb
jnp
incb
scas
jge
fisubrl
xchg
xchg
fs
movsb
shlb
adc
in
add
fcmove
les
test
add
cwtl
fldlg2
fs
push
inc
iret
jg
mov
ss
ljmp
adc
sbb
jg
js
lcall
cmc
mov
xchg
inc
leave
jecxz
add
or
mov
inc
add
addr16
pop
stc
shll
imulb
pop
or
xor
jnp
push
insl
add
cmc
mov
enter
data16
push
fstl
add
push
and
leave
lds
mov
mov
lahf
scas
pop
pop
and
lods
cld
dec
bound
mov
jge
rclb
les
icebp
idiv
repz
rcrb
inc
outsb
xchg
inc
dec
shrl
cli
mov
dec
sub
inc
js
or
push
mov
jp
dec
sub
movb
imul
lods
pusha
pop
mov
xchg
int3
push
lods
lcall
lock
and
insl
inc
pop
or
pop
jge
mov
in
pop
mov
mov
sub
jb
push
es
or
scas
repz
push
mov
mov
jnp
adc
icebp
insl
xchg
adc
imul
jb
dec
mov
mov
xor
aaa
push
cmp
xchg
pop
aaa
movsb
rcl
and
jp
inc
imul
sub
xorl
push
outsb
pop
lret
scas
add
mov
mov
pop
add
dec
jl
test
sti
mov
cli
je
fldcw
stos
repz
adc
jns
inc
inc
xor
dec
jnp
pop
push
jl
test
aad
pop
sub
data16
test
xor
mov
mov
shr
and
loope
fistpll
cmp
mov
sub
xlat
aam
loope
mov
in
les
lds
fadd
push
or
outsb
shll
inc
addr16
mov
rcll
pushf
mov
out
shlb
and
pop
scas
lret
or
inc
inc
out
mov
jge
mov
mov
mov
dec
inc
arpl
cs
mov
shrl
arpl
pushf
outsl
cmpsl
popf
into
aad
lret
mov
sbb
jb
mov
ds
mov
outsl
mov
sahf
mov
sbb
loopne
or
out
push
xor
cli
int
pop
lahf
mov
jae
cwtl
sub
inc
dec
jae
ds
xor
inc
mov
push
je
mov
mov
stos
pop
xor
scas
ds
push
inc
fcmovbe
inc
jge
adc
out
push
lock
or
and
push
imul
pop
cmp
xchg
jbe
mov
ret
add
aaa
mov
daa
cmp
or
fdiv
sbb
nop
cmp
pop
mov
shrb
andl
dec
pusha
outsl
jo
imul
popa
jnp
sbb
push
popf
xchg
jnp
fmull
dec
cmp
pop
pop
es
aam
push
sub
icebp
or
loope
dec
and
imul
mov
lret
cmp
lods
fwait
aam
lahf
stc
mov
js
mov
mov
xchg
adc
insl
adc
insl
cwtl
aam
add
test
inc
add
outsb
inc
ficoms
sub
ret
pop
dec
xor
frstor
movsl
inc
test
lods
sub
xchg
cld
fptan
mov
mov
pop
xchg
inc
gs
mov
gs
es
push
dec
mov
and
pop
shl
adc
scas
xlat
push
dec
lahf
sti
lahf
cli
notb
push
mov
xchg
mov
cmp
adc
rcrl
in
cwtl
push
icebp
sbb
mov
bt
ss
fs
out
imul
xchg
push
mov
add
orb
sub
loopne
dec
addb
cmp
push
push
test
dec
orl
ficoms
pop
xor
sahf
bound
push
sub
addl
or
addb
cmpsb
cltd
pop
movsl
push
std
cmpsb
sbb
lock
adc
fmul
iret
and
scas
xor
mov
lds
outsl
xor
setle
mov
pop
xchg
movsb
add
pop
adc
dec
movsb
fcmove
pop
rcr
xor
dec
xchg
xchg
int
inc
pop
or
cmc
sbb
pop
push
imulb
loop,pt
aas
sbb
cld
jbe
test
out
xchg
movsl
sub
sbb
mov
imul
imul
xchg
leave
pop
test
pop
aad
lods
ss
jns
xor
xchg
js
and
out
stos
push
add
mov
xchg
inc
sub
int
loop
pop
jecxz
xchg
sub
inc
sub
xorb
adc
pop
pop
adc
testb
shl
push
stc
adc
mov
mov
pushl
and
lods
movsl
push
and
mov
mov
push
cmp
lods
inc
into
bound
ljmp
pop
call
or
sub
inc
mov
mov
xor
call
les
fdiv
jmp
test
xor
cmc
popf
das
movsl
mov
lea
push
xchg
shll
mov
push
sub
pushf
pop
and
mov
hlt
fwait
in
sbb
repnz
jl
mov
ja
stos
stos
xlat
fstpt
lahf
or
cmp
sub
push
fmull
lea
pop
and
adc
add
movsb
add
out
cmp
outsb
enter
xchg
dec
stos
pop
bound
outsb
or
mov
ljmp
jne
push
test
int3
sbb
or
sti
mov
ficompl
test
rdtsc
or
sbb
aad
inc
aas
xor
push
dec
push
fldcw
arpl
test
in
iret
pop
loop
sbb
cmpl
push
xchg
sub
inc
sub
retw
jns
cld
jmp
xchg
adc
les
aas
fnstenv
xlat
inc
jnp
xchg
mov
xchg
pop
gs
inc
xor
and
fs
add
xchg
lods
xchg
xorl
mov
insb
lds
fmuls
rcr
push
jne
nop
sub
fistps
jne
xor
in
adc
dec
mov
jp
add
ret
xchg
sub
scas
rorb
jo
mov
jle
repz
push
inc
mov
mov
popl
xor
adc
push
and
pop
jle
adc
sub
loopne
mov
add
icebp
mov
cmp
lods
push
insl
inc
xor
add
push
stos
mov
and
mul
test
xor
mov
mov
sbb
xor
xlat
add
js
xor
mov
les
ja
inc
imul
test
mov
adc
inc
scas
int
lods
mov
inc
push
xchg
xchg
mov
daa
pop
orl
add
loopne
cmc
mov
dec
jnp
loopne
in
ljmp
mov
hlt
push
jl
and
movl
es
jb
xchg
ljmp
push
pop
xor
dec
js
inc
lods
xchg
lock
ret
or
adc
and
arpl
push
inc
mov
popf
flds
mov
cltd
lret
cmp
lea
repnz
lret
inc
gs
fwait
rclb
mov
and
les
in
dec
test
fwait
push
sub
mov
mov
leave
and
lock
stc
addr16
inc
mov
lods
xor
xlat
mov
push
sbbl
push
xchg
mov
sti
adc
repnz
pop
xchg
xlat
scas
cltd
repnz
add
in
xlat
rcrl
xchg
add
mov
ss
popf
fisttps
fimuls
shlb
jecxz
push
je
shlb
adc
xchg
dec
cmp
icebp
rcll
sub
leave
sbb
mov
mov
and
or
into
inc
sub
orl
aam
inc
jecxz
jle
lahf
shrl
fwait
stos
dec
dec
xchg
dec
jo
inc
insl
mov
subl
cld
jmp
dec
int3
cmp
fld1
jns
iret
adc
pop
pop
test
dec
nop
dec
je
mov
and
int3
rol
stc
test
int
pop
fsts
push
mov
insl
mov
shlb
cs
int3
pop
clc
lods
fsubrs
mov
pushf
mov
or
xor
les
inc
push
movsl
pop
sub
and
shrb
mov
adc
cmp
pop
pop
xor
sahf
repz
adc
loope
out
add
divb
inc
movlps
sub
pusha
fcmovu
sahf
inc
adc
push
jb
sbb
iret
cmp
jno
cmp
lret
sbb
push
inc
jg
or
and
xor
out
test
jp
xor
inc
add
pop
and
push
dec
pushf
dec
add
add
fwait
into
mov
xor
scas
lret
push
rcrb
add
inc
mov
cmp
jmp
add
repnz
sub
aas
fcomps
push
xchg
int
shr
jp
inc
rdpmc
fsubp
lcall
sub
xchg
enter
int
xchg
filds
inc
lea
out
dec
jne
xor
ud1
sub
mov
fidivrs
jne
addr16
fs
loope
pushf
inc
repz
stos
mov
cld
mov
in
clc
inc
xor
sarl
fildll
shll
data16
fwait
cld
sbb
or
stc
shl
inc
iret
jns
fistps
mov
mov
sbb
sub
mov
pop
push
xchg
adc
add
xchg
jb
jne
dec
stos
pop
sbb
mov
orl
aaa
inc
dec
imul
sbb
call
ret
xlat
lock
mov
inc
push
pop
dec
add
push
xor
mov
cmc
jne
or
in
xchg
mov
add
lret
cmpsb
lods
xchg
loopne
push
cmpsl
mov
aad
outsl
sub
in
pop
mov
lcall
hlt
xchg
addl
gs
pop
lds
and
jg
dec
add
adc
jne
andl
adc
or
inc
cmp
das
pop
cli
in
scas
popf
push
inc
adc
and
jne
pop
xlat
scas
inc
lea
movl
dec
outsb
sbb
xor
push
lock
out
out
xor
jge
inc
es
ljmp
xchg
pop
mov
inc
nop
or
cwtl
popl
xchg
leave
stos
inc
pop
and
and
dec
inc
ret
rclb
xlat
cmpsl
daa
inc
jle
dec
scas
pushf
inc
rcrb
adc
ret
rcr
int
mov
fstpt
into
sti
test
jae
adc
jae
xchg
xor
out
ljmp
in
add
inc
or
adc
add
aad
js
cmc
mov
call
jmp
inc
and
xchg
mov
jno
insb
xchg
addr16
fldl
xchg
movsb
cmp
sub
push
cmp
push
mov
not
jle
push
es
hlt
pop
or
dec
xchg
enter
mov
push
adc
pop
icebp
and
push
sbb
inc
cmp
dec
sub
add
jbe
push
mov
inc
out
aaa
or
pop
jnp
arpl
and
mov
popf
movsl
into
daa
inc
push
cmp
sbb
jp
scas
fs
cmp
mov
jne
insb
mov
int
adc
mov
pop
mov
popa
scas
aaa
and
int3
sar
adc
mov
ss
xor
pushf
xchg
jg
jecxz
jns
jbe
cmpsl
pop
pop
push
cli
push
and
cmp
ljmp
jmp
cltd
pop
sbb
jae
in
fildl
stos
ficompl
adc
xchg
jge
or
lds
pop
xor
push
mov
and
mov
fldcw
in
stc
cld
lods
pop
sub
sbb
xchg
dec
and
ljmp
aad
lds
test
enter
cmp
xchg
and
adc
and
stos
lahf
fcmovu
pop
add
dec
out
lea
jle
and
xlat
mov
shlb
idivb
xlat
pop
test
jge
cmp
cmc
dec
adc
fisubrl
repnz
and
mov
sub
ljmp
das
cmp
pusha
push
rclb
xchg
xchg
xchg
jns
xchg
inc
repnz
stos
es
cld
test
enter
aaa
pop
lds
sub
cs
fstps
hlt
xchg
dec
aas
sahf
and
je
hlt
andl
ffree
dec
dec
shlb
out
cwtl
jbe
xchg
inc
lret
xchg
push
ffree
xor
xlat
and
push
mov
sub
jns
imul
push
add
int
scas
mov
push
fisttpl
shlb
jp
mov
cli
loope
inc
repz
pusha
outsl
jg
fwait
bound
es
lcall
and
dec
cli
hlt
mov
cmp
shr
xchg
add
mov
mov
xchg
mov
add
notb
daa
add
popf
outsl
mov
imul
fistpll
out
or
and
mov
push
cld
push
inc
push
addl
leave
dec
sbb
jmp
mov
push
int
mov
xor
sbb
xor
xor
lret
out
jp
stc
adc
push
test
xor
daa
inc
dec
out
add
sub
mov
pop
bound
lea
xor
and
scas
ljmp
arpl
stos
and
lds
sbb
mov
xchg
sbbl
mov
stos
mov
scas
inc
cmc
test
push
add
fwait
xor
imul
repnz
mov
out
fnstcw
push
push
sahf
les
push
mov
mov
lds
lcall
lret
dec
rclb
cmpsl
adc
lret
loope
dec
mov
push
inc
add
cmp
inc
int
out
fwait
or
inc
cmpb
jp
jmp
add
xorl
add
mov
and
lcall
mov
jns
cwtl
data16
fldl
std
loopne
test
roll
std
pop
xor
orb
cld
jmp
fs
imul
leave
aad
leave
ret
mov
mov
mov
push
mov
cmp
or
ja
mov
stos
mov
stc
push
repnz
fmuls
cmp
cmp
and
inc
lret
outsl
loopne
out
cmp
jnp
out
jae
rclb
mov
test
sbb
rolb
rol
insb
cmpl
in
loop
movd
push
and
cmp
cmpsl
pop
xor
push
jge
mov
pop
mov
into
aas
stc
lds
into
sbb
jne
cmpsl
in
arpl
xor
sub
mov
push
bound
repnz
test
pop
xor
and
incb
pop
push
insb
mov
cld
sub
enter
sub
outsl
xchg
jmp
arpl
mov
js
push
out
sub
push
inc
out
sahf
or
adc
mov
inc
imull
sub
pop
lcall
sbb
xlat
mov
lods
dec
ss
or
or
into
fisttpl
fnstsw
fwait
xchg
nop
out
mov
rorb
xlat
push
rorb
cmp
push
test
cmpsb
in
mov
popa
mov
daa
insb
repz
popf
loope
sub
insl
scas
jmp
ja
addl
sub
push
fwait
dec
cli
imul
aad
inc
shll
insl
lds
or
jne
test
ucomiss
push
xchg
cmc
sub
add
adc
pop
adc
sub
cmc
cmc
cmp
loopne
insl
int
lods
adc
shll
mov
xor
push
cmpsl
adc
sbb
in
js
inc
dec
rclb
mov
add
jnp
pop
jno
shlb
push
push
adc
mov
pop
push
faddl
pop
cs
lahf
jns
pop
outsb
loop
push
in
pop
jp
outsl
jmp
mov
xchg
and
test
cmp
nop
pop
add
sub
dec
ja
xor
inc
inc
sub
mov
mov
pop
ret
out
xchg
mov
pop
or
or
and
test
xchg
loope
adc
inc
repnz
dec
push
jne
jmp
sub
xlat
shl
inc
sub
ret
mov
rcll
mov
mov
adc
rorl
gs
sbb
pusha
dec
idivl
fldcw
inc
repz
jo
dec
insb
cmp
jae
xor
call
test
xor
cwtl
or
pop
and
jg
pop
ss
loope
or
and
sub
jecxz
jno
and
xlat
mov
out
mov
dec
insb
lea
adc
cmp
lods
adc
mov
mov
inc
and
mov
adc
xchg
js
xchg
xor
sbb
cmp
cmp
dec
mov
and
and
dec
repnz
movsl
loopne
xor
cmp
divb
shlb
push
push
and
mov
cwtl
mov
add
rolb
aas
pusha
imul
fwait
rcr
sbb
cmp
pop
dec
jmp
in
lret
testl
idiv
sub
push
cmpb
fsubs
fcomp
push
sahf
ficoms
pushf
imul
dec
sbb
xchg
stc
ret
enter
adc
mov
jge
add
shll
sub
icebp
jne
orb
aaa
add
inc
pop
bound
fildll
adcb
jnp
xor
outsb
gs
lret
bound
in
jns
fdivrp
sbb
jecxz
add
clc
jae
int3
add
rolb
dec
push
idivl
out
and
adc
sub
dec
imul
sub
pop
arpl
mov
repnz
xchg
add
xor
roll
ds
fcmovb
cmp
iret
test
cld
andb
add
repnz
xchg
out
inc
push
and
out
mov
push
aas
testl
cmp
mov
pop
mov
xchg
xchg
pop
es
cmp
movsl
std
gs
out
jmp
mov
push
test
f2xm1
cmpsb
rorb
inc
out
or
lret
fisubrs
xor
cmp
pop
xor
sbb
iret
or
dec
adc
mov
rol
ret
ss
pushf
and
aad
out
data16
push
mov
stos
xchg
insb
xchg
sub
jo
jns
hlt
sub
lods
pop
stos
daa
xor
xor
test
rcl
mov
xor
addb
push
jle
test
repz
mov
xchg
dec
mov
jp
popa
les
dec
fucomp
lahf
das
aad
iret
xchg
lods
fistl
fistps
fldl
aaa
cmpsb
jle
pop
mov
mov
xchg
cmpsb
pop
cltd
out
lea
sub
rcl
leave
enter
jmp
lock
loopne
adc
add
pusha
insb
inc
hlt
pop
mov
jo
add
stc
daa
sub
xchg
push
pop
or
or
jns
push
cmpsb
fmul
jge
popa
add
jb
out
lahf
jb
stos
maskmovq
cld
mov
sbb
sbb
jmp
jbe
stos
jp
xchg
imul
xor
sbb
or
rcr
sbb
pushf
nop
add
and
xchg
jl
in
jl
jbe
inc
xchg
jb
fdivrs
ss
insl
cmp
sub
jnp
mov
xchg
push
fwait
jmp
into
call
xchg
xchg
arpl
lahf
adc
stc
ds
jae
repnz
sbb
shl
pusha
pop
sar
movsb
xor
cmpsb
fdivl
int
out
das
daa
cmp
cmpsl
outsb
mov
movb
lahf
sbb
fisttpll
fsubp
mov
hlt
pushf
sub
shrb
mov
and
out
in
push
outsl
adc
test
loop
and
lock
out
cmp
enter
push
lea
les
pop
out
clc
push
inc
pop
sub
sbb
jp
adc
aam
sub
pop
iret
jmp
and
add
out
xor
cltd
jno
call
test
mov
jnp
adc
aad
push
dec
push
inc
loop
or
test
or
in
fcoms
pushf
ds
inc
outsb
mov
dec
aas
pop
pusha
xchg
mov
movsl
fldl
ret
mov
pop
mov
in
jnp
jbe
mov
push
xchg
push
lahf
or
inc
pop
push
mov
call
repnz
fldt
idivb
mov
clc
xlat
adc
sub
shlb
cmp
andl
lock
add
dec
add
jp
mov
dec
call
divl
jp
xorb
cmp
call
insl
inc
xchg
cmpsb
lahf
jecxz
or
pop
fwait
in
aaa
dec
mov
cmp
mull
add
mov
andb
jno
imul
pop
xchg
js
mov
les
xchg
jg
or
adc
insl
dec
or
pop
xchg
push
lcall
mov
out
adc
cmpsl
jmp
or
repnz
pop
cmp
pop
andb
test
push
stos
dec
shll
mov
fsubr
adc
out
xor
movb
xor
cli
pop
mov
dec
jp
daa
repz
push
bound
pop
out
mov
leave
ds
sahf
scas
mov
pop
outsb
pop
outsl
add
jnp
pop
xchg
push
aad
add
test
pop
mov
into
xlat
lret
scas
sub
movsl
sbb
nop
scas
push
ja
int3
popa
sarb
dec
ljmp
lea
and
or
in
sbb
sbb
aad
popa
mov
dec
or
stos
cmc
nop
repz
pushf
push
imul
dec
into
sub
imul
push
jmp
jmp
out
mov
jo
into
jnp
int3
mov
ror
in
and
or
aam
ljmp
xchg
add
aam
bound
int
test
sub
mov
pop
adc
incl
jle
cli
cli
cli
cmp
lcall
dec
sub
aam
pop
mov
push
fucomip
inc
into
addb
cmp
pop
xor
lock
repz
ret
loop
adc
adcb
lea
jl
xlat
cld
jo
add
push
add
into
in
das
into
mov
add
nop
xchg
xchg
sbb
hlt
les
or
and
lods
stos
int3
andb
pop
adc
pop
mov
xchg
push
mov
inc
repnz
cmp
jns
dec
xchg
cmp
sbbl
ret
jnp
ret
xchg
add
ja
adc
int
xchg
push
adc
stos
mov
popf
jno
nop
incb
outsl
cmc
inc
outsb
adc
insl
movsb
and
sbb
push
out
push
pop
imul
scas
dec
mov
loopne
in
and
mov
add
fs
pop
in
push
mov
mov
mov
repz
jb
aas
adc
xchg
push
aad
pop
dec
push
dec
xchg
movsb
mov
clc
jp
das
icebp
popa
xchg
in
pop
adc
insb
call
cld
cmp
loop
int
push
push
int
dec
cmc
fwait
mov
out
inc
int
jge
ja
cld
iret
xor
xor
jmp
push
mov
inc
inc
adc
adc
in
pop
aas
popf
inc
jecxz
js
xchg
loopne
icebp
pop
fwait
test
fwait
add
jge
jecxz
cmovp
test
aam
es
cmp
test
test
fimuls
mov
and
imul
insb
aaa
out
mov
mov
dec
dec
testl
test
inc
arpl
cltd
out
push
xor
mov
and
fstps
inc
es
movsb
int3
aas
ljmp
jno
bound
sar
insl
call
movsb
into
adc
inc
popa
repnz
lret
jp
push
mov
lock
mov
jb
les
push
sub
fdivr
sub
popf
jmp
les
scas
add
inc
into
aam
jge
lea
mov
dec
jo
jl
adc
sub
pop
nop
test
cmp
roll
movsb
fwait
bound
mov
shll
push
test
push
cmpsb
outsl
xchg
rcrb
and
xchg
test
push
xchg
mov
insb
andl
mov
shrl
lock
mov
sbb
cmp
xchg
loop
lods
sbb
mov
aaa
lods
mov
xchg
popf
lahf
dec
xor
repnz
inc
jp
sbb
fdivrl
pop
cmpsl
jecxz
lcall
add
mov
inc
xchg
cmpsl
xchg
ljmp
addl
mov
mov
outsl
arpl
push
test
jno
mov
mov
mov
aad
iret
push
in
pop
test
sub
sub
mov
mov
stos
cmp
pop
fmulp
mov
data16
xchg
sbb
mov
stos
jl
push
cli
call
dec
sub
inc
dec
sbb
inc
ljmp
repnz
repnz
or
jne
dec
pushf
dec
ret
nop
data16
fisttpll
add
js
mov
loope
inc
mov
in
and
stos
mov
sti
pop
and
cwtl
push
ret
sub
mov
inc
out
push
popf
loopne
ja
inc
subb
rorl
lea
lret
pop
sbb
shll
mov
dec
add
jno
out
and
aam
jbe
mov
sub
daa
pop
cld
push
cld
xchg
mov
mov
inc
push
orl
bound
cwtl
adc
add
lahf
add
in
push
and
push
xchg
daa
mov
jecxz
test
jmp
mov
jo
xchg
andb
adc
mov
mov
sub
lret
mov
or
fs
mov
dec
push
xchg
adc
aas
or
dec
clc
out
stos
out
jl
xlat
or
xor
pop
mov
das
inc
movsb
out
cwtl
mov
or
mov
add
sbbl
out
test
shl
lret
push
sti
pop
mov
sub
mov
or
mov
or
stos
js
cmp
loopne
pop
xchg
movsb
inc
cmpsb
and
lods
mov
sub
jp
faddl
pop
les
or
cwtl
je
loope
arpl
clc
mov
jl
scas
or
repz
fdivr
fldcw
rcrl
sub
jo
push
push
sub
bound
mov
adc
scas
inc
lods
add
sbb
xchg
cmp
cmpsl
test
jnp
and
adcw
mov
jbe
sbb
in
inc
aad
insb
mov
cltd
imul
dec
les
cmpsl
dec
add
addr16
cmpsb
add
test
xor
jmp
xor
shrl
popf
or
xlat
sbb
call
lock
xchg
push
jb
aas
fsubp
imul
add
js
loop
jp
es
fidivl
xor
shr
xchg
ljmp
imul
outsl
sbb
jne
movsb
xor
xor
jno
xor
or
push
cmp
sub
test
pop
or
fsts
and
mov
mov
add
xchg
shll
xorl
adc
stc
repz
jmp
ss
jg
jbe
pop
push
lds
sub
jnp
xchg
inc
jb
cwtl
xchg
mov
mov
sbb
aaa
mov
jns
cmp
add
lods
popa
xor
cmpsb
push
rcr
jne
pop
rcrl
test
test
cmp
data16
test
lods
neg
fwait
outsl
insb
js
ja
dec
ficoms
pop
jmp
push
dec
in
mov
lret
mov
xlat
pushf
jmp
mov
sbb
mov
cld
sbb
shrb
pop
addl
xchg
mov
sahf
pushf
fsubr
fdivrs
fsin
out
arpl
into
jb
test
das
stos
mov
or
inc
add
imul
sbb
loope
jecxz
xchg
push
xor
cmp
dec
push
jp
call
mov
push
cmpsb
stos
ficomps
aaa
xchg
call
arpl
xor
dec
mov
xor
jp
sahf
fstl
dec
sti
lods
xor
adc
or
sbb
inc
ss
add
mov
inc
xchg
imul
call
push
std
mov
lods
lret
dec
scas
popa
stc
sub
lock
aad
sbb
sbb
lahf
insl
inc
or
mov
stc
push
pop
push
scas
pop
mov
aad
orl
lret
fldlg2
js
rcr
xchg
adcl
dec
mov
push
mov
mov
std
jbe
inc
lret
jg
addb
imul
sti
push
mov
imul
hlt
pop
dec
dec
push
sub
test
jl
decb
adc
aam
scas
xor
ljmp
cmp
cmp
ret
sbb
sbb
rorb
les
push
xchg
roll
add
xchg
test
ds
subb
sbb
sarb
sub
mov
mov
out
sbb
cmp
and
xchg
test
lods
push
daa
sub
cmpsl
fidivrl
dec
xor
mov
push
and
mov
xor
xchg
mov
xor
std
stos
in
scas
push
jo
sub
xchg
xchg
mov
cmp
push
iret
int
mov
lea
xor
into
xorl
xor
xor
cmp
or
mov
jmp
and
add
lahf
cli
clc
andb
cld
fstpt
mov
inc
adc
sub
lahf
fists
mov
mov
cs
or
scas
inc
out
into
or
dec
jp
cltd
cmpsb
pop
rorb
adc
mov
cmp
mov
or
dec
push
xchg
stc
and
rcr
sub
subps
mov
and
movsl
jmp
cmpb
lds
shll
jp
xor
push
cmp
rcrl
jne
adc
inc
call
sbb
outsb
mov
repz
cmp
sub
aad
scas
fldl
mov
mov
in
scas
push
stos
leave
mov
or
sub
cltd
or
insl
fisttps
loopne
xor
aas
jno
daa
ret
xor
xchg
or
push
dec
push
add
adc
inc
addr16
or
jecxz
shll
outsl
dec
mov
pushf
fwait
jle
mov
and
push
ss
sbb
adc
cmp
cltd
jp
sbb
jg
dec
cmpl
mov
sahf
pop
sub
and
repnz
mov
or
fmul
pop
mov
movsb
or
sbb
mov
fcomi
dec
fadd
xor
outsb
wbinvd
mov
popf
or
ret
mov
sub
adc
fcoml
and
jns
or
jmp
xchg
fsubl
lock
cmp
pop
call
mov
icebp
aas
push
mov
leave
fs
imul
movsl
add
dec
jg
imull
js
xchg
loope
xor
sbb
fnstcw
mov
mov
add
mov
fadds
sbb
pop
pop
mov
mov
sub
lret
sub
ds
repnz
fwait
push
inc
sar
insl
cmp
shlb
dec
mov
dec
jae
mov
ss
add
in
insb
fisubs
pop
subb
addr16
popa
jne
jbe
aad
insb
adcb
xchg
adc
pop
jae
inc
std
test
adc
jns
jnp
lahf
fs
fstpt
inc
adc
xor
test
push
and
out
pusha
mov
popa
dec
inc
rolb
daa
into
jb
insl
xor
sti
imull
fcoml
mov
dec
xchg
cmp
mov
shrl
mov
adc
adc
bound
mov
jg
ss
pop
outsb
sahf
jno
shrb
stos
jl
inc
enter
pushf
dec
out
cmpsl
fcompl
scas
sub
cmp
in
dec
xchg
clc
mov
jbe
jp
lods
out
ljmp
hlt
lock
push
subb
pushf
pusha
movl
inc
scas
sbb
mov
insl
fiaddl
mov
pop
out
jb
fcmovu
push
cmpsb
mov
lea
adc
xchg
clc
cmp
dec
fidivrl
mov
or
aam
or
and
adc
ds
cmp
pop
xlat
call
rolb
movsl
cmc
jmp
and
ljmp
inc
sti
fstp
es
mov
fsubp
scas
lahf
je
mov
repz
push
ds
or
sbb
js
cli
idivb
or
push
mov
jbe
frstor
mov
dec
inc
hlt
fidivrs
mov
xchg
and
movsb
jbe
jmp
mov
mov
sub
sub
xchg
mov
sarb
ss
push
mov
push
lahf
push
push
add
add
sbb
mov
mov
loope
jo
jnp
sbb
mov
add
in
cmp
mov
cmp
fsubr
fldcw
add
inc
roll
imul
sbb
fwait
pop
add
movsb
xchg
andb
lahf
mov
sub
xchg
inc
inc
scas
arpl
sub
iret
mov
in
in
or
cmpsl
imul
rol
lahf
xor
nop
push
enter
xlat
mov
pop
roll
shr
or
pop
mov
in
and
sahf
mov
cmp
xchg
add
lods
dec
ret
xchg
mov
aas
arpl
push
lret
push
pop
lea
add
lock
ja
mov
jno
addr16
les
and
pop
pop
decl
jecxz
in
jl
mov
imul
je
xchg
xchg
into
jo
mov
pop
scas
notb
sbb
sub
lea
dec
lock
cmpb
pop
popf
outsl
jno
mov
loop
or
cmp
mov
or
inc
mov
or
rcrl
les
aad
repnz
stos
xchg
iret
mov
sbb
and
mov
idivl
fstpl
cmp
lods
rcll
adc
mov
push
xor
test
stos
dec
insl
ljmp
cmp
and
fdivl
js
and
push
test
jle
mov
xor
imul
xor
data16
mulb
jns
fcomp
aad
push
and
movsb
adc
cltd
cmp
dec
push
aad
lock
mov
pop
test
decl
lods
in
ss
pop
xor
pop
rep
imul
mov
sbb
test
jecxz
addr16
xchg
dec
adc
lahf
ret
fidivrl
shll
pop
push
adc
push
mov
into
leave
clc
loop
es
sti
or
mov
sub
mov
lock
jo
les
adc
xor
aad
stos
out
sub
ja
mov
roll
pop
inc
mov
adc
lahf
adc
rcl
out
push
push
inc
mov
into
mov
out
add
bound
add
std
sbb
adc
in
mov
out
pop
addl
lret
jecxz
enter
in
mov
fs
int
fdivrl
dec
outsl
into
cs
xchg
xlat
mov
fidivl
add
pushf
or
xor
cmp
lret
sbbl
mov
sbb
jecxz
mov
lods
mov
fnsave
xchg
mov
add
aam
inc
xor
fistps
call
push
inc
pop
scas
cltd
sbb
mov
mov
jns
xchg
pop
ret
mov
fstpl
imul
jmp
imul
hlt
scas
inc
mov
sub
dec
xchg
int
push
repz
movsl
jns
sbb
inc
out
mov
xor
jl
and
test
or
xor
stc
or
xor
insb
andl
and
cmpsl
sbb
jae
insl
and
jnp
mov
jl
add
xchg
mov
inc
call
dec
jnp
jnp
popf
sub
jae
pop
pushf
sub
pop
cld
cmc
mov
inc
inc
xchg
mov
xchg
mov
std
inc
mov
mov
jb
dec
fidivrl
dec
jp
jae
mov
cs
pop
in
push
push
cpuid
dec
add
in
push
or
jns
xor
inc
push
into
xor
roll
in
adc
adc
lock
pop
pop
iret
outsb
setp
addr16
movsl
mov
push
rcr
std
inc
and
dec
dec
test
lods
mov
movsl
cwtl
push
enter
out
out
and
js
mov
lock
xlat
pusha
push
cli
mov
repnz
stc
int
insb
and
js
stos
lcall
insl
sti
icebp
mov
pop
pushf
xchg
sbb
incl
popa
fwait
test
sub
push
mov
addr16
aaa
inc
sub
repnz
lock
cmp
or
daa
sbb
mov
loop
mov
imul
inc
mov
mov
dec
sub
bound
and
fnstsw
pop
in
loop
lahf
jl
sub
cmc
cmp
and
shll
testb
sahf
push
repz
nop
push
sub
jbe
push
lods
pop
js
xor
push
jl
aaa
repz
imul
pushf
test
sbb
xchg
mov
cwtl
adc
or
sub
dec
iret
sub
stc
xchg
adc
mov
stos
jno
decb
cltd
sub
push
or
and
mov
fwait
sbb
frstor
xchg
dec
xor
adc
lods
aad
and
jmp
loope
jb
andl
lods
xchg
add
mov
enter
test
ds
push
aaa
icebp
pop
sub
stos
movsb
cmp
xor
mov
hlt
xor
xchg
sbb
out
pop
pop
add
out
xlat
mov
ret
fdivr
lea
je
data16
sbb
rorb
xchg
es
into
fisubl
loope
pop
dec
insl
and
sti
les
mov
int
popa
sbb
adc
pop
mov
stos
xchg
dec
push
xchg
inc
cmpsl
repnz
in
shlb
adc
and
xchg
testb
in
pop
mov
iret
add
jle
pop
mov
xor
and
push
pusha
fwait
mov
xchg
inc
lds
inc
mov
jns
ja
mov
adc
lahf
or
xor
jnp
fs
aam
movsl
inc
fs
xchg
inc
sub
stc
cmp
test
mov
cmp
jg
jno
jp
mov
xor
xchg
mov
loope
jbe
jle
in
sub
and
dec
mov
arpl
or
jbe
sbb
and
adc
ret
dec
cmp
push
ret
in
repz
outsl
or
mov
mov
pop
adc
mov
lahf
xchg
cmpb
pop
nop
icebp
rol
jb
scas
addr16
jecxz
insl
aaa
in
push
push
mov
lahf
push
xor
mov
jl
push
fdivr
cmc
repz
sbbb
push
pop
rcrb
mov
jb
fistpll
jb
xchg
mov
test
push
dec
inc
adc
push
push
divb
adc
in
mov
jnp
mov
mov
mov
fldcw
dec
ret
adc
sbb
xorb
xor
mov
push
outsb
inc
or
adc
popf
cmc
scas
lods
mov
jbe
pop
xchg
xor
mov
xor
sub
test
out
insl
push
and
push
cmp
mov
mov
mov
or
inc
lods
insb
push
aad
mov
pop
push
cmp
roll
mov
testl
das
lds
ss
xchg
inc
inc
lahf
lods
idivb
pusha
lods
fildl
sbbb
mov
pop
push
mov
sub
push
mov
std
adc
popa
adc
xchg
xor
aaa
inc
mov
out
shll
add
fsubl
cs
xorb
or
test
dec
aaa
jge
js
sub
sarl
popf
xorb
repnz
and
mov
push
sbb
addr16
adc
pop
adc
mov
sbb
adc
sbb
inc
push
or
xchg
aam
sub
clc
dec
and
outsb
pop
shlb
rolb
add
cmpsl
leave
or
test
jge
or
xor
adc
pop
dec
mov
mov
sub
fstpl
and
inc
out
xor
push
in
mov
pop
in
jbe
outsb
cwtl
dec
fsubs
mov
enter
jmp
inc
add
sub
xchg
std
test
sub
jne
sub
subb
repnz
es
lahf
push
inc
dec
xor
outsl
xchg
push
imul
pop
mov
mov
jge
jp
pause
inc
mov
jg
pop
pop
push
lock
psubd
pusha
mov
mov
push
push
outsl
sub
push
or
mov
mov
mov
xor
xchg
mov
test
jl
mov
sarl
std
in
pusha
adc
psubd
xchg
das
push
cld
xor
cmc
xchg
mov
sub
add
mov
fcomip
xchg
add
ret
sti
push
pop
lahf
emms
xchg
dec
jmp
push
daa
scas
dec
cli
inc
shr
xor
loope
in
cmp
add
mov
insb
jno
xor
jle
xor
mov
out
mov
mov
cmpsb
fisubrl
sbb
nop
xchg
mov
stc
insl
cmp
loop
xlat
mov
aaa
test
xchg
notb
aaa
mov
arpl
inc
pop
xor
pop
jl
xor
mov
push
sbb
ja
mov
mov
je
lret
fcompl
pop
les
dec
loop
xchg
insl
imul
enter
or
xor
push
std
inc
fisttps
fisttpl
cwtl
ds
cmp
arpl
rclb
fidivl
mov
jne
sub
iret
les
mov
rcr
into
sbb
lret
sbb
and
lock
in
loopne
mov
and
mov
xor
and
adc
xchg
dec
lods
xchg
xchg
sub
push
out
aas
enter
sub
xchg
push
addl
add
xor
dec
pop
jns
inc
adc
int
cmp
pushf
mov
ss
call
cmc
add
push
and
outsb
shll
add
or
pop
adc
js
cmp
mov
loopne
movsl
inc
push
and
aam
ficoms
add
loop
xor
movsb
les
scas
inc
rol
ret
or
arpl
xchg
mov
push
mov
jo
pop
mov
dec
addr16
sub
std
adc
ds
loop
ret
dec
push
pop
out
je
pop
sub
pop
mov
push
pop
cmpsl
mov
inc
mov
and
mov
jo
insb
cld
mov
sub
pop
ror
movsb
insl
in
add
fsubrs
jl
nop
fcompl
xchg
mov
movsl
pop
sub
pop
sbbb
lods
pop
lret
pop
sti
lods
mov
pop
cmp
dec
push
jge
mov
sbb
sahf
movsl
jbe
ret
xchg
jo
mov
sub
cld
cmp
out
int3
fiaddl
xor
cwtl
rcl
jo
and
jb
lock
clc
jmp
mov
in
dec
jg
pop
sbb
mov
mov
or
jnp
lods
inc
sub
sub
arpl
push
sbb
jne
iret
push
daa
xor
cmp
cli
out
inc
out
xchg
or
pop
cwtl
lcall
xor
pushf
stos
lods
mov
outsb
jne
pop
cmpsb
jecxz
in
jp
fmul
daa
pop
cmp
jnp
and
lcall
and
or
and
enter
out
sub
stos
adc
inc
mov
test
pop
pop
xchg
mov
adc
and
lods
out
outsb
pop
sub
mov
and
cmpsb
mov
push
sub
scas
fmulp
test
and
addl
lock
cmp
pop
sbb
xchg
mull
mov
rcrb
pop
mov
mov
test
dec
imul
jo
mov
in
mov
arpl
xchg
mov
insb
sub
adc
dec
call
nop
lcall
mov
xor
dec
out
jecxz
mov
movsl
rorb
cmpsl
lds
sub
cmpsb
ss
outsb
ret
pop
cmc
stos
lods
loop
notb
clc
scas
scas
andb
repnz
jbe
jo
leave
pop
scas
addr16
andl
xlat
nop
add
incl
mov
insb
cmp
add
inc
leave
sbb
mov
frstor
js
sbb
imul
mov
fildll
adc
ret
into
pop
imul
inc
dec
dec
aad
into
mov
int
test
push
leave
in
in
mov
mov
aas
push
call
mov
mov
mov
sbb
or
jo
pop
cmc
inc
inc
aam
test
inc
mov
popa
xchg
cmp
sub
ficoms
pop
gs
pushf
pop
outsb
out
mov
mov
and
out
adc
lahf
imul
stos
sbb
or
test
lret
cmp
fildll
add
roll
sbb
xchg
sti
push
repz
test
outsl
or
rclb
out
shl
jl
mov
sbbl
jecxz
lret
xchg
fwait
push
mov
jb
adc
xor
cmp
push
out
insb
std
mov
repz
and
into
imul
mov
ja
sahf
inc
xor
stos
lods
add
cmp
or
adc
pop
je
xchg
pop
gs
xchg
mov
xchg
sub
cmpsb
inc
inc
dec
mov
es
sub
push
bound
inc
enter
loop
pusha
in
lods
in
scas
lret
xchg
mov
ljmp
xlat
hlt
or
cltd
stc
add
push
fsubrl
je
adc
cli
pop
aas
imul
sub
lret
add
cmpb
mov
ficoms
xchg
out
push
in
nop
mov
add
arpl
in
lret
xchg
divl
cwtl
and
dec
xor
jmp
dec
push
sub
mov
stos
mov
inc
shlb
inc
frstor
stc
mov
popa
addl
enter
js
push
insl
sbbl
stos
and
jae
cmp
insb
mov
rolb
or
push
mov
and
push
xor
in
cmpsl
clc
jg
mov
rcrb
mov
aad
mov
inc
push
hlt
push
sbb
addb
pop
xchg
cltd
hlt
icebp
stc
cmp
jne
pop
xchg
xor
in
xchg
and
xchg
out
stos
lods
mov
outsl
jne
push
lret
loop
xlat
outsl
or
cmp
sub
int
stos
push
imul
gs
cmp
mov
jp
fadds
popf
xchg
repnz
xchg
xlat
push
into
mov
jg
push
ljmp
mov
mov
ret
add
xchg
pop
addr16
sub
test
adc
hlt
scas
stos
les
test
shr
push
popa
cli
xor
mov
sbb
xchg
lcall
push
sub
sub
add
nop
dec
fldt
lock
in
dec
add
aaa
pop
call
hlt
mov
ja
push
aas
lock
push
aas
xchg
xchg
int
lods
mov
cmp
mov
and
pop
es
mov
xlat
mov
cmp
out
sti
mov
or
ja
mov
mov
xchg
mov
mov
jle
and
mov
push
add
add
mov
jbe
add
pop
and
inc
sub
mov
and
and
imul
les
push
xchg
mov
scas
push
fstl
fcomp
jl
xchg
imul
mov
push
mov
aas
fwait
sahf
sbb
xor
jno
imul
jmp
pop
push
fmulp
push
lret
or
mov
je
adc
cwtl
jge
mov
push
scas
stos
inc
cmp
dec
lcall
pushl
jp
xchg
adcl
pushf
xor
out
xor
push
push
lret
lea
cmc
psraw
sub
jecxz
jl
mov
aad
add
scas
movsb
dec
xor
cmp
sub
stos
inc
insl
mov
loop
cmp
jb
cltd
cmp
arpl
mov
and
xchg
in
jmp
add
xchg
les
in
jge
out
mov
fsqrt
and
in
and
push
je
loop
mov
test
bound
lret
or
pop
and
enter
ss
idivb
mov
sbb
add
fistpl
clc
jmp
inc
and
in
or
mov
mov
addl
mov
sub
das
jl
aad
and
add
into
or
mov
es
loop
jnp
lds
cmp
xor
adc
cwtl
andl
outsb
ret
mov
int
scas
loopne
mov
lcall
jae
js
jbe
pop
loopne
cwtl
dec
scas
es
cld
sbb
or
pop
push
je
mov
rcrl
ficoms
mov
sahf
adc
mov
jb
scas
xor
push
scas
fwait
cmp
lds
std
test
out
fwait
push
ffreep
clc
fcompl
dec
icebp
aad
jg
leavew
lds
mov
call
jmp
push
sbb
dec
mov
test
sbb
push
rcll
pop
and
sbb
aaa
lods
fwait
mov
cltd
lods
jecxz
jnp
push
adc
ret
mov
das
scas
adc
inc
outsb
sub
and
add
mov
xchg
push
mov
sbb
inc
daa
mov
loope
or
or
faddl
inc
cmp
sub
pop
aad
and
jo
jl,pt
jecxz
stos
adc
pop
sub
dec
jbe
or
ret
or
rorl
mov
adc
fs
add
shll
fistps
dec
iret
dec
inc
aad
jae
iret
imul
jae
mov
sahf
pop
addr16
aas
sub
sub
cmpsl
aaa
stc
out
adc
sbb
add
in
push
shlb
push
sub
sub
inc
sub
sar
inc
lret
mov
push
mov
push
add
scas
sbb
sub
jo
movsb
push
jmp
inc
shll
lock
fsub
movsb
out
test
jmp
adc
cmp
scas
test
aad
les
or
pop
bnd
dec
cmp
or
test
lods
xchg
cld
test
xor
mov
jecxz
addr16
lahf
orl
addb
scas
add
mov
leave
pop
fcompl
or
mov
outsb
movsb
pushf
pop
sbb
les
pop
and
insb
ret
pushf
fsubrs
add
mov
imul
xor
sarl
insb
cld
dec
add
mov
nop
lods
stc
lods
pop
sarb
jg
or
sbb
or
lods
dec
push
addr16
lods
push
dec
mov
sub
pop
out
pop
cmp
mov
fnsave
mov
and
fnstcw
xor
insl
cmp
sbb
mov
popf
push
jg
cli
test
inc
add
sub
or
test
xor
xchg
out
mov
mov
push
fldl
mov
cmp
out
and
cmp
xor
dec
add
scas
dec
dec
add
add
bound
sbb
in
and
dec
pop
in
cmp
inc
lds
sub
in
cmp
leave
cld
lret
xlat
fidivrs
sbb
outsl
inc
add
aas
lods
jne
adc
push
cmpsb
push
or
pop
push
jns
and
mulb
gs
adc
jmp
idivb
out
mov
bound
out
cs
and
ret
test
push
add
fs
dec
repz
enter
and
hlt
add
or
mov
mov
push
jbe
cmp
negb
outsb
adc
ljmp
mov
dec
pusha
or
or
movsb
inc
add
jb
sub
push
push
inc
fisubl
arpl
sub
out
jae
loop
mov
lret
cmp
setnp
rclb
in
shrl
inc
aas
jno
push
push
jnp
pop
fdivrs
sub
inc
pop
xchg
aas
xor
mov
jmp
mov
pop
and
rcr
shrl
test
add
sbb
test
or
mov
test
jg
mov
adc
pop
incl
loope
int
pop
nop
loope
pop
fisubrl
ret
push
std
mov
inc
clc
ds
or
roll
loop
dec
cltd
xchg
ds
and
repz
mov
pop
shll
adc
mov
jge
or
mov
add
fst
mov
adc
push
addr16
sti
cmp
fsts
mov
xchg
xchg
pop
lcall
lret
imul
and
jp
push
and
scas
test
pop
clc
dec
mov
sahf
gs
push
ljmp
xor
into
test
movsl
int3
lds
fstpl
fisubrs
mov
or
in
je
js
shlb
cmp
cwtl
push
int
push
push
sti
inc
push
xchg
imul
dec
mov
lods
xchg
sbb
cltd
jns
xor
adcl
and
repz
xor
jae
leavew
cmp
sbb
cmp
aam
sub
pop
aaa
movsl
inc
push
jge
addr16
mov
adc
int3
xlat
jae
dec
mov
xchg
pop
mov
push
aaa
xchg
mov
adc
xor
push
inc
inc
xchg
xlat
fwait
mov
pop
or
mov
pop
stos
dec
and
ret
js
popa
dec
jecxz
mov
loopne
pop
arpl
adc
sbb
mov
stc
push
adc
iret
fcompl
xchg
sub
jmp
xor
mov
xchg
mov
adc
add
add
out
lcall
cli
std
mov
pop
adcl
pop
push
push
imul
cmp
pop
incb
mov
rclb
fwait
mov
cld
aad
mov
adc
mov
dec
call
imul
ja
fcoml
ds
cmc
in
add
adc
add
ret
lock
es
fdivl
js
bound
push
mov
adc
push
cmc
mov
movsl
je
sub
pop
sub
sbb
outsl
test
fistpl
jecxz
out
pop
pushf
loop
pusha
shlb
cmp
popa
sbb
jmp
mov
sub
cmp
icebp
clc
and
dec
jmp
sbb
fnclex
sbb
mov
test
cld
xchg
movsb
bswap
fxch
stc
into
rorb
inc
insl
mov
sbb
iret
ds
mov
neg
or
lcall
adc
ret
add
mov
sub
sti
fidivrl
xor
mov
shrl
lret
int
inc
pop
and
scas
mov
sbb
push
fdivl
jle
daa
shrl
mov
or
mov
movsl
sub
nop
fiaddl
cmpb
shll
std
adc
sub
sbb
cmp
js
test
push
arpl
or
pop
mov
cmp
fcmovb
mov
jp
addl
add
jecxz
ljmp
nop
xchg
fwait
insb
in
mov
mov
pop
mov
jmp
into
gs
mov
popf
sbb
outsl
in
dec
frstor
xor
popa
xor
mov
and
clc
mov
and
push
sub
lcall
loopne
lret
sbb
xchg
aad
lahf
cmc
fs
adc
jae
ret
je
mov
fsubr
jns
sub
shrl
xor
in
pop
or
dec
addr16
movb
cli
sbbb
ljmp
dec
adc
adc
pop
es
mov
inc
xchg
mov
adc
pop
push
in
out
xchg
cmp
xor
sub
mov
das
dec
repnz
mov
andnps
in
mov
cmp
stos
iret
sbb
dec
in
cmc
js
mov
testl
int
xor
arpl
xor
and
mov
cmp
pop
mov
pushf
mov
mov
loop
lds
sub
jae
push
add
push
out
cld
jo
test
mov
test
sub
rcl
jb
insl
lret
xchg
cltd
cmp
xchg
lcall
in
test
sub
test
push
push
jb
pusha
mov
adc
out
arpl
lahf
int3
icebp
pushf
ja
mov
loope
outsb
or
test
mov
mov
mov
pop
pop
test
pop
pop
outsb
sbb
nop
lret
test
pop
adc
jno
pusha
and
xchg
shl
subl
lds
andl
pop
xor
repz
cwtl
sub
rolb
and
in
sub
popf
ret
fisttpl
mov
xchg
mov
or
out
lret
adc
nop
mov
adc
push
in
lea
dec
mov
or
shlb
push
inc
sbb
xchg
xchg
dec
in
imul
xlat
mov
xchg
jb
insb
into
xchg
fdivs
mov
xor
sbb
les
inc
xchg
xchg
adc
xchg
lods
mov
inc
outsl
outsl
faddp
xchg
mov
mov
test
inc
lea
inc
cmpsb
popa
out
or
addb
cmp
dec
les
mov
and
pop
inc
nop
and
jmp
sub
aaa
loope
cmp
ss
int3
fsubl
loope
imul
pop
inc
bound
xor
mov
push
inc
dec
inc
cmp
mov
aas
nop
lea
inc
xchg
xor
pop
mov
add
jno
inc
xchg
movsl
jg
pop
sbb
and
or
mov
rorb
cmpsb
xchg
test
call
mov
imul
adc
lds
push
and
cmp
ljmp
orb
roll
add
lahf
mov
lea
jbe
add
pop
fiaddl
loop
cmpsb
lock
cmp
mov
repnz
and
xchg
mov
pop
popf
mov
sub
xchg
cmp
xorl
dec
jecxz
jne
or
sub
sbb
in
cltd
mov
fildl
decb
jae
mov
mov
add
jbe
inc
mov
iret
add
or
cld
xor
test
mov
mov
daa
repz
sarb
sub
xor
and
rcll
push
fildl
sub
outsl
dec
mov
and
sub
movsb
test
dec
add
andb
mull
jp
mov
testl
inc
mul
ds
xchg
and
rolb
addr16
pop
lret
adc
addl
xor
aaa
or
mov
xor
xor
jne
jae
hlt
jg
mov
sbb
inc
and
sti
cmp
mov
pop
mov
xor
sbb
in
mov
pusha
mov
cwtl
mov
fbld
mov
in
xor
cld
add
and
aas
add
cwtl
cmc
out
insb
or
scas
imul
push
xchg
push
xchg
fldt
mov
lret
xchg
dec
dec
jno
fcomp
inc
mov
mov
adc
fwait
inc
dec
push
cmp
fwait
adc
xchg
xor
sbb
xchg
xor
xchg
jle
pop
add
add
mov
shlb
inc
insb
dec
movsl
jge
push
sub
lods
aaa
fldl
mov
imul
ret
fsub
fbld
arpl
jno
lret
lret
enter
lea
in
cmp
push
inc
mov
into
das
mov
sub
mov
fists
dec
outsl
subl
ret
dec
mov
adc
sbb
aaa
pop
jae
lock
movsl
push
mov
and
adc
push
add
imul
cmp
inc
jno
adc
cmp
pop
pop
out
insb
mov
ret
dec
cmpsb
dec
sti
mov
pop
dec
xlat
sub
cmp
jbe
adc
in
sbb
aas
imulb
scas
fcmove
xchg
test
jmp
cli
inc
daa
insl
lods
pop
adc
aaa
mov
xlat
and
les
iret
mov
and
cmp
shrb
lret
dec
lock
popf
dec
je
sub
cld
push
mov
inc
add
ret
mov
push
sahf
pop
loop
mov
bnd
lds
jp
outsl
sbb
sbb
xchg
fs
push
pop
call
add
jl
and
stos
int3
cltd
mov
pop
scas
mov
popf
arpl
pop
sahf
int
xchg
repz
lock
or
push
push
lcall
jbe
pushf
lock
adc
sbb
cs
js
data16
pop
jmp
jg
mov
ficomps
in
push
jl
sbb
dec
cli
inc
insb
daa
fistl
lcall
adc
sub
repnz
insl
adc
lahf
pop
lret
ret
push
call
adc
mov
xchg
and
je
test
or
aas
test
pop
stos
jbe
and
je
sbb
add
and
adcb
pop
pop
adc
xor
mov
push
xchg
adcb
adc
je
fsubr
xor
in
push
adc
std
cmp
mov
imul
cltd
pop
mov
push
je
int
sub
fwait
hlt
jmp
dec
mov
push
aaa
cli
cmp
jmp
rol
sbb
jae
int
jno
js
push
xor
sbb
mov
dec
cmp
jns
rorb
loop
fst
cwtl
or
std
dec
notb
pusha
sub
in
in
rcl
cmp
push
xor
mov
arpl
ljmp
pop
inc
cmpsb
mov
popa
enter
adc
pushf
orl
out
push
insb
sub
xchg
in
sbb
cmp
push
dec
lods
inc
jecxz
imul
cmp
xor
test
add
repnz
ljmp
dec
jae
mov
fildl
iret
ljmp
loope
cld
mov
adc
fwait
push
mov
sarb
sahf
pop
mov
cmpsb
movb
loop
ss
mov
push
adc
rorb
imul
idivl
stos
pcmpgtw
xchg
jne
add
cmpsb
sti
ja
or
ljmp
cmp
inc
adc
cmp
fstps
jb
dec
es
aad
and
dec
xchg
sbb
movsb
xchg
popf
lods
inc
push
hlt
repz
jl
jns
push
cs
insb
ret
addr16
add
std
stos
outsb
pop
sbb
gs
inc
xchg
insb
daa
gs
jns
leave
insb
push
and
pop
jp
movsb
sbb
call
pop
jecxz
mov
mov
hlt
enter
jae
ljmp
push
aaa
mov
jnp
push
movsl
mov
in
add
adc
dec
pop
pop
pop
jnp
mov
jne
mov
in
movsb
inc
mov
shlb
sbb
lea
and
jbe
sub
pop
push
cwtl
push
out
sub
ljmp
out
roll
dec
aad
popa
out
xor
fcomps
mov
pop
cmp
adc
jle
jae
adc
jb
xchg
js
jecxz
lcall
pop
fildll
loopne
sub
jg
mov
mov
in
pop
push
xlat
ljmp
data16
mov
xor
mov
mov
test
lock
test
div
lods
cmp
inc
pop
jl
ret
mov
xchg
lea
addr16
stos
cmp
jle
cmc
xor
imul
dec
rclb
roll
xchg
xchg
in
cltd
leave
xchg
scas
push
hlt
pop
and
mov
aas
lock
cld
mov
jb
std
push
push
or
insb
pop
mov
pushf
je
adc
into
insl
push
ret
sbb
mov
pop
cs
jmp
popa
mov
aas
fidivs
or
in
pop
test
jmp
sti
inc
insb
xor
int
mov
popf
jns
pop
jns
dec
int
aaa
inc
repnz
jns
into
lahf
inc
scas
cld
push
cld
cmc
xchg
cmpsb
rclb
or
inc
mov
incb
sub
inc
or
mov
mov
pop
jecxz
icebp
cmp
push
pop
jbe
mov
cmp
mov
mov
pop
iret
pop
adc
jae
push
pop
jae
pop
aaa
mov
add
cltd
imul
or
mov
bound
js
sbb
ficoml
int
push
in
ret
fisttpl
sub
jl
mov
xor
push
sub
jbe
outsb
arpl
pop
dec
xchg
adc
jge
inc
mov
mov
and
mov
mov
jp
add
xor
pop
xchg
adc
adc
sahf
add
pushw
insb
xchg
cmp
add
mov
shrb
mov
rclb
adc
es
pop
mov
fs
insl
add
xchg
sub
ret
push
ret
dec
rcll
stc
cmp
rorl
mov
sub
pusha
pushf
push
push
lock
and
pop
cld
in
ss
and
push
push
and
pop
push
pop
scas
jns
dec
mov
pop
roll
out
jp
mov
xchg
ret
dec
add
imul
orl
and
adc
jo
movsb
cmp
pop
push
mov
bound
cmpsl
rcrb
insl
fldcw
push
lahf
cmpsb
xchg
sbb
push
jae
cmpsb
out
rorl
fmuls
and
pop
push
mov
addr16
pop
and
lcall
repz
mov
or
cmp
adc
xchg
shl
and
mov
push
ss
sub
mov
outsb
xchg
cmp
cwtl
loopne
adcl
sahf
call
fcomi
adc
push
cltd
and
rolb
mov
aaa
aam
mov
out
andl
lahf
movsb
ds
jo
cmc
mov
pop
cli
mov
call
xor
add
call
das
and
and
jne
adc
mov
mov
mov
dec
in
nop
clc
mov
in
sbb
push
es
inc
pop
sbb
pop
adc
cwtl
xchg
leave
adc
scas
shr
cld
inc
test
or
sub
sarl
sub
mov
stos
fmuls
mov
jb
xchg
mov
out
jno
std
pop
ja
cmpsl
jns
pop
repnz
fwait
inc
sbb
in
pop
jg
movsb
adc
in
dec
push
adc
ficomps
mov
dec
hlt
mov
shr
add
stos
lret
inc
lock
lds
icebp
lods
xchg
push
mov
inc
cmpsb
outsl
into
ret
mov
adc
sahf
aaa
sbb
mov
hlt
ja
sahf
cmp
mov
adc
mov
das
inc
pop
call
test
jle
and
subl
sahf
xchg
push
hlt
outsl
dec
lahf
arpl
xchg
mov
ja
mov
push
push
mov
mov
push
sahf
add
loopne
adc
ret
sbb
cmp
cmp
pop
cs
push
jmp
push
shlb
shrl
push
push
add
fwait
mov
inc
insb
dec
rcll
fucom
stos
popf
ret
pop
cmc
call
inc
repnz
xchg
or
lahf
xor
push
adc
xchg
cmp
pop
or
imul
xchg
adc
jl
stos
push
cld
ret
mov
js
in
jbe
and
add
dec
mov
mov
inc
adc
lcall
dec
cmp
movsb
mov
enter
mov
mov
sbb
and
push
push
mov
out
add
stos
ja
push
cmp
mov
setb
xor
cmp
pusha
addr16
dec
xchg
pop
push
jle
inc
lcall
jnp
aam
decl
notb
add
pop
push
xor
jnp
sahf
jnp
adc
adc
mov
dec
inc
jp
and
daa
cmp
in
test
mov
mov
add
pop
xor
bound
arpl
xchg
cmp
pop
or
dec
rcll
push
xor
rorl
jecxz
shll
push
lock
mov
ja
pop
cmp
add
aaa
leave
and
rcrb
and
jb
xor
xchg
jp
in
sbb
jmp
movsl
sahf
jo
push
xchg
inc
sti
pop
clc
xchg
ret
lret
pop
mov
jg
cmp
imul
xchg
pop
rcrl
and
inc
mov
outsb
shlb
fisttpll
push
add
mov
testb
icebp
int3
or
in
aad
xor
sub
in
adc
insb
sub
mov
test
lock
mov
dec
dec
mov
mov
inc
imul
lods
push
call
xor
inc
jle
std
adcb
and
xor
ds
ret
pop
add
shrb
gs
push
imul
icebp
outsb
push
sbb
pop
jp
mov
frstor
sbb
lahf
test
filds
mov
hlt
lock
enter
fists
addr16
aaa
ss
jnp
xchg
cld
mov
add
out
das
jmp
jecxz
gs
or
push
mov
push
xchg
repnz
or
rclb
jge
arpl
add
jecxz
repz
mov
pop
fisubl
sbb
pop
pusha
jns
call
adc
dec
inc
cmp
stos
orb
ret
test
scas
jmp
arpl
les
and
adc
pop
popa
push
fisttps
pop
sbbb
push
ds
outsl
cld
loop
nop
adc
adc
ror
ljmp
jg
jnp
loope
xchg
es
push
mov
pop
clc
adc
adc
inc
adc
xor
jl
cmp
pop
inc
js
orb
movsb
ret
test
jae
lcall
inc
jnp
sub
sub
dec
add
or
xchg
adc
cmp
pop
stos
filds
clc
ret
jle
add
subl
es
orl
out
out
jmp
fyl2x
std
mov
mov
mov
mov
jge
rorb
iret
cmp
in
or
sbbl
insb
and
lds
cmp
iret
jge
jmp
sub
test
scas
rcrl
aas
js
jl
jo
xchg
and
push
dec
movsl
aas
xor
and
and
fadd
mov
ja
cmp
popa
shll
mov
stc
add
je
dec
xor
add
cmpb
adc
jmp
mov
in
add
cltd
add
sbb
lret
sbb
or
push
fsts
xor
addb
pop
test
sub
pushf
mov
icebp
xlat
in
hlt
adc
fimull
and
xorb
je
xor
mov
inc
pop
inc
bound
cs
movsb
mov
mov
dec
enter
add
iret
and
dec
dec
xchg
add
dec
or
stos
or
outsb
mov
adc
imul
xor
mov
movsl
mov
loop
dec
daa
jbe
xchg
xchg
int
rolb
cmp
push
repz
mov
loop
mov
jp
pop
clc
out
sahf
sahf
pop
ss
inc
xchg
movsl
inc
adc
ret
lahf
adc
adc
pop
dec
cmp
sbb
in
addr16
jns
andb
xchg
arpl
xor
aaa
inc
loop
jecxz
sbb
daa
xchg
dec
adc
lds
jb
xchg
int3
sbb
sbb
sbb
icebp
mov
xchg
sti
cmp
pop
pop
sub
rcrb
mov
fstpl
ja
ret
dec
lea
jne
mov
pop
js
in
test
call
or
pop
ljmp
cmc
out
cmp
sbb
sub
mov
lcall
jnp
insl
sub
aam
mov
mov
mov
xlat
pop
mov
aad
push
pop
cmp
arpl
iret
lods
or
mov
popf
and
leave
jle
sar
subl
js
xor
loopne
inc
adc
dec
lock
les
imul
pop
jp
in
out
xchg
xor
xchg
add
and
movsl
cmpsl
pop
fistps
dec
mov
mov
cld
into
inc
fstps
adc
pop
aaa
test
cmp
into
je
and
push
sar
inc
xchg
out
das
and
bt
ret
lods
mov
repnz
in
adc
lret
cmpsw
insl
xchg
nop
shl
mov
mov
mov
inc
sbb
movsl
adc
imul
cmp
insb
xor
insb
pop
mov
insb
shll
mov
xchg
insl
push
lret
scas
fcomp
imul
jb
adc
mov
jne
ret
xchg
or
lret
std
into
pushf
fcomp
xchg
rcll
imul
mov
or
fimull
xchg
loope
cld
inc
mov
sbb
inc
popf
jl
mov
cmp
hlt
lret
mov
push
sbb
jae
pop
shrl
out
xor
xchg
inc
addr16
xor
mov
mov
xor
or
mov
imul
jecxz
xchg
stos
out
popa
ret
fidivl
nop
pop
dec
push
push
inc
aas
sbb
add
hlt
pushf
lret
push
and
jge
add
outsb
fidivrs
adc
shll
xchg
test
faddp
lods
pop
mov
fistpl
push
xor
fidivrs
mov
sbb
push
adc
pusha
add
add
jae
sbb
mov
incl
or
stc
cwtl
jnp
shlb
sbb
inc
xchg
dec
clc
mov
inc
jne
or
roll
enter
div
ljmp
adc
mov
jbe
inc
leave
jp
fsubrl
pop
xor
push
and
stc
lods
cmc
push
cmp
lea
cmp
inc
aam
sbbl
and
sub
stc
negl
mov
add
mov
mov
insl
adc
push
je
push
xlat
push
test
pop
addb
and
add
sbb
and
jno
cmp
add
jp
jnp
add
cltd
xchg
cmp
hlt
push
mov
xor
fs
out
inc
scas
or
arpl
gs
adc
push
sub
leave
mov
push
sarb
pop
or
je
sbb
popa
dec
repnz
xlat
mov
pop
adc
or
push
xlat
jo
pop
sahf
das
in
push
lock
fisubs
and
push
lock
push
repnz
pop
pop
xor
jb
data16
and
pop
das
mov
jl
shrl
pop
cltd
xchg
add
ljmp
xor
dec
aad
add
mov
pusha
xchg
aaa
sahf
or
ret
xor
daa
pop
or
jl
lea
cmp
arpl
testl
insl
inc
nop
addr16
sbb
js
jno
outsl
jp
cmpsb
or
sbb
lods
xor
or
lahf
into
test
test
in
sub
sub
ljmp
jbe
ret
or
xlat
push
cmp
out
mov
lods
cmc
mov
int
push
xorb
dec
adc
mov
adc
nop
xchg
adc
gs
push
mov
push
xchg
mov
pop
data16
fucomip
xchg
sarl
xchg
mov
out
aaa
fwait
jmp
popf
call
or
imul
mov
jl
fwait
xor
push
stc
add
xchg
into
test
mov
adc
cmp
push
or
push
stos
inc
push
pop
shrb
xchg
divb
pop
cld
jbe
mov
pop
mov
push
dec
adc
mov
cltd
int3
jbe
pop
lods
out
adc
xchg
mov
pop
sbb
push
std
mov
push
sahf
outsl
sbb
push
pop
or
inc
jle
imul
xchg
out
mov
sti
sub
jnp
out
xchg
jecxz
insb
push
jne
inc
push
addr16
mov
xlat
lcall
mull
jmp
mov
pop
sbb
mov
orl
repnz
dec
adc
addl
gs
adc
mov
cmp
jns
out
mov
add
add
xchg
ja
jns
mov
insb
sub
hlt
inc
ret
out
jmp
imul
shlb
mov
aas
out
mov
lods
or
iret
jl
sbb
jp
or
push
leave
mov
and
jmp
fiaddl
dec
cltd
xor
ret
fisubrl
push
inc
ret
pop
cmp
adc
mov
outsb
sbb
pop
xchg
mov
sti
out
mov
test
jg
sub
rorb
mov
xor
xchg
mov
inc
push
fcomi
mov
push
clc
mov
movsl
fbld
imul
mov
out
mov
fidivl
sub
xchg
int3
loop
fldl
adc
aas
mov
jae
add
dec
dec
inc
pushf
add
xlat
enter
dec
push
sarb
imul
subb
fwait
repnz
and
rolb
jmp
or
adc
decl
add
or
fwait
mov
xchg
mov
push
dec
inc
mov
mov
jge
cld
hlt
mov
sbb
fwait
int
addr16
fidivrl
and
jne
add
call
sub
aam
mov
dec
sub
and
add
mov
or
pop
enter
mov
and
pop
loopne
dec
scas
sahf
pop
mov
lret
sbb
mov
shrl
xor
outsb
sahf
pop
int3
mov
or
je
mov
mov
cmp
fcmovb
jne
dec
scas
test
popa
lcall
std
andl
push
inc
in
fldt
sbb
mov
xor
bound
mov
mov
mov
cwtl
outsl
neg
lods
mov
sbb
cmc
pop
mov
jge
mov
les
sub
leave
dec
adc
mov
mov
inc
scas
mov
jb
fwait
adc
in
aam
dec
mov
mov
jecxz
rclb
adc
movsl
aam
fdivl
dec
hlt
add
test
bound
inc
js
fwait
jmp
in
das
shll
mov
jg
adc
insl
xchg
mov
inc
and
xchg
ljmp
pop
mov
test
cmp
push
shrl
or
jecxz
xchg
pop
stos
out
lea
test
cmpsb
pop
adc
pop
add
xchg
push
dec
add
push
lds
fwait
pushf
loopne
fstpl
inc
movsb
mov
fistl
add
xlat
xchg
into
sbb
pop
bound
inc
repz
xor
push
scas
xchg
sti
addr16
mov
pop
sbb
popf
mov
xchg
adc
lahf
xchg
call
push
daa
or
xchg
xchg
push
push
jecxz
mov
loop
inc
pop
in
pop
jb
jg
cmpsb
xor
cmpl
es
sbb
out
mov
lods
fstl
xor
pushf
arpl
adc
out
loope
xor
xchg
or
mov
xchg
cmp
mov
stos
imul
mov
cmpsl
cmpsb
movsl
xchg
adc
pop
out
rcl
mov
jg
push
xchg
cld
cltd
popf
mov
push
aam
mov
mov
addb
sbb
cld
imul
jle
call
dec
jp
push
push
pop
and
push
repz
mov
popa
xchg
inc
inc
test
aad
push
push
adc
push
out
pushf
cwtl
iret
sbb
and
shlb
test
xchg
jb
mov
sbb
imul
push
xor
call
sbb
sub
xchg
lds
add
xor
ljmp
shlb
pop
in
cmp
js
pusha
lods
ja
inc
in
jo
sub
ljmp
xor
cmp
xor
ret
mov
xor
test
adc
lret
mov
jecxz
lods
addr16
into
icebp
inc
sub
inc
xor
insl
fwait
push
pop
popf
ss
cmp
sbb
jg
lret
ret
mov
cwtl
mov
jmp
mov
add
mov
jae
push
mov
popa
repz
xchg
insb
push
das
cld
cs
in
mov
lock
adc
stos
scas
jns
cmp
xor
pushf
test
xchg
in
inc
inc
and
shlb
repz
mov
clc
cmp
jns
scas
cmp
mov
xorb
arpl
rcrb
push
out
fdecstp
push
sbb
imul
andl
rolb
sub
jmp
mov
push
add
mov
xorb
out
xlat
ja
and
enter
sbb
imul
mov
sub
fimuls
jge
jb
lods
mov
inc
aaa
cmp
cmpl
fmuls
arpl
cmpsb
pop
faddl
mov
das
in
stos
test
jge
test
out
mov
adc
in
cmpsl
sarb
dec
pop
xor
xor
jp
aaa
sub
scas
xor
out
lock
pop
mov
xchg
nop
mov
sbb
out
xchg
cltd
xlat
xchg
and
pmaxub
push
das
sub
sti
pop
mov
pop
xor
adcb
push
push
add
or
stos
mov
insb
in
in
leave
push
jnp
or
sub
insl
mov
imul
iret
mov
call
sbb
pop
fldenv
je
push
lods
xchg
shrl
insb
jle
inc
stos
packssdw
out
pusha
and
mov
cmpl
mov
push
mov
add
stc
ds
cmpsb
jge
fcoml
pop
xchg
and
sbb
push
ljmp
arpl
sub
scas
mov
test
cli
clc
dec
outsl
pop
fstl
call
mov
mov
loopne
sbb
pop
stos
popa
insl
sti
pop
aad
fnstenv
cmp
ret
nop
rep
lods
jmp
xchg
nop
inc
rolb
dec
jbe
cltd
aas
and
dec
mov
sti
scas
xchg
adc
arpl
adc
push
sahf
fcom
inc
cmpsl
call
adc
cmp
xchg
pop
and
jno
in
inc
cmc
jns
cmp
or
mov
xor
mov
jae
mov
or
je
xor
inc
push
cmpsb
arpl
std
imul
sbb
xor
cmpsl
lods
jge
push
sub
cld
cmpsb
jmp
sub
sub
mov
mov
mov
xchg
pop
fimull
dec
int3
and
lahf
enter
lcall
mov
inc
je
cmc
prefetcht0
inc
and
cmp
jns
ljmp
out
adc
repnz
lods
pop
adc
pop
dec
dec
push
lock
inc
in
fsubrl
ret
mov
rcrl
xlat
lcall
in
cmp
cmc
xorb
push
rcrb
mov
jl
inc
addr16
dec
jge
mov
mov
call
or
lea
and
cmc
adc
sub
mov
mov
out
xchg
inc
jne
sbb
cwtl
popa
pushf
pop
loopne
aas
mov
lret
enter
mov
test
dec
and
inc
loopne
push
inc
cld
mov
aaa
icebp
push
iret
sahf
data16
jo
aad
dec
or
pop
inc
ficomps
fdivrs
inc
mov
cmpsb
aaa
adc
mov
mov
inc
stos
es
jl
int
jmp
push
xor
test
mov
repnz
sbb
in
int3
jg
xor
fimull
cmpsl
insl
les
pop
test
decl
out
or
xchg
lahf
sti
mov
or
or
in
inc
lods
xor
mov
sarb
fiadds
xor
addr16
jmp
push
xchg
mov
and
out
loopne
mov
insb
sbb
sub
ret
jb
das
and
inc
mul
shll
cmp
mov
add
pop
jo
add
push
cmp
stos
dec
push
jnp
loopne
mov
sahf
shll
repnz
sub
icebp
dec
jecxz
mov
mov
xchg
fdivrl
or
xchg
loopne
ret
aad
cmc
adc
cmovl
mov
scas
mov
bound
cmp
cwtl
popa
ljmp
xlat
and
lret
push
push
xor
lahf
rorl
cmp
or
lret
loope
mov
nop
repz
cmp
inc
sub
ja
cmp
push
lcall
movsl
push
es
mov
es
adc
fs
int
lcall
sbb
pop
xor
fucomip
pop
dec
cltd
int3
es
adc
push
aaa
test
pop
xchg
imul
mov
pop
fcomip
das
aaa
subb
loop
and
cmp
xor
dec
in
bound
pusha
insb
in
add
sbb
adc
cmpsl
dec
clc
loop
lret
pop
sub
out
test
cmc
inc
add
arpl
int3
popa
mov
xchg
shlb
jecxz
push
popa
cmp
stos
cmp
inc
sbb
dec
jbe
adc
adc
pop
push
push
jg
imul
sbb
mov
bound
jo
dec
mov
mov
jmp
mov
dec
push
or
fs
cmpsl
mov
cmp
dec
xor
es
mov
push
adc
mov
into
loop
cmp
cmp
and
js
sbb
lods
and
cmpl
insb
mov
mov
shrl
lock
stos
les
or
out
mov
pop
cmp
xor
popf
rcl
mov
fisubl
mov
push
push
xchg
repnz
push
inc
adc
lahf
sti
fildll
push
into
test
cmpsl
xchg
movsb
stos
mov
ret
xor
stc
pop
inc
add
cmc
test
cmp
fstpt
mov
popf
mov
ja
push
movsl
push
and
arpl
dec
sbb
mov
popa
push
pusha
stos
and
dec
addr16
add
mov
roll
xchg
mov
and
sub
mov
cmpsb
movsl
loopne
gs
js
iret
add
daa
add
pop
xchg
adcl
pop
sub
inc
out
xor
orb
mov
xor
lcall
js
imul
fsub
xchg
pop
aaa
enter
jmp
sbb
lock
cld
xchg
je
xor
adc
jns
cmpsl
movsb
and
mov
mov
pop
adc
xor
jmp
insl
mov
jp
stos
aam
iret
push
repnz
xor
jp
lahf
sahf
xor
xor
repnz
xor
mov
rorl
sbb
cmp
pop
dec
ja
outsl
dec
mov
shl
xchg
shll
mov
sub
fsubs
repz
lds
ds
popl
pop
mov
pop
addr16
mov
jae
out
dec
out
or
xchg
pop
aaa
add
inc
sub
sbb
cmp
in
adc
sbbl
rol
aad
loopne
imul
xorl
jb
scas
push
mov
ja
xchg
lret
out
mov
lret
cmp
pop
mov
lcall
in
cmc
push
or
adc
addr16
cmp
and
ret
imul
and
aad
xor
adc
dec
stos
inc
aad
push
pushf
jp
adc
xchg
adc
mov
movsb
in
in
int3
jb
rcl
jmp
and
xchg
pop
mov
mov
adc
jle
xchg
xchg
fdivs
adc
sbb
cmpsl
lcall
lds
sub
mov
test
xchg
out
dec
sahf
and
loopne
lods
in
push
lahf
int3
mov
add
cmp
inc
adc
test
sbbl
cltd
xor
repz
lcall
pop
cmpsb
data16
cmp
movsl
mov
psubsw
testl
mov
out
mov
cmp
cli
push
in
add
dec
cmp
dec
scas
repnz
sbb
inc
xchg
lds
jbe
int
push
push
daa
inc
sbb
shrb
xchg
out
fwait
lock
xchg
stos
cwtl
xchg
dec
pop
xchg
push
movsb
adc
sbb
push
rcrl
ja
adc
sub
stc
mov
ds
mov
add
mov
les
aad
lret
or
jl
dec
jge
dec
add
mov
sbb
inc
add
fistpl
pop
push
inc
icebp
jnp
or
jne
mov
push
adc
insb
sub
fcompl
push
sbb
cmp
in
sub
or
arpl
inc
outsb
dec
dec
jb
jne
add
pop
jno
push
lods
push
adc
hlt
js
dec
cmpsl
cmp
xchg
xchg
sbb
push
jmp
and
gs
sbb
pop
inc
lods
pop
adc
pop
cmp
faddl
faddl
lahf
dec
mov
jge
mov
mov
mov
push
mov
test
mov
je
stc
gs
sbb
int3
arpl
mov
jmp
mov
iret
in
fdivrl
pop
loopne
add
push
cmpsl
xchg
shlb
sbb
mov
pop
divl
fwait
jg
aas
jns
mov
mov
or
dec
sub
dec
pop
divb
cmc
or
inc
and
sti
repnz
pushf
pop
mov
lahf
dec
scas
out
mov
sbb
cmp
or
aaa
in
and
jne
dec
ja
inc
shl
or
mov
aaa
pop
xor
lods
insb
int3
and
xchg
xor
and
jg
xchg
jns
stos
sbb
cmp
in
jns
in
push
iret
es
cltd
cmp
adc
xbegin
cli
xchg
scas
pop
cmpl
and
push
sub
es
jae
ljmp
aam
test
insl
cmp
outsb
mov
xor
pop
cmp
jp
mov
clc
xor
shll
add
data16
push
xor
mov
adc
out
xor
es
add
aaa
xchg
scas
mov
mov
mov
mov
test
inc
sub
outsl
ficompl
filds
dec
xlat
sti
push
lea
adc
mov
arpl
and
mov
scas
mov
dec
xor
mov
fidivl
lock
aam
and
mov
mov
pop
aam
fwait
outsl
jno
mov
pusha
ffree
lock
ja
icebp
mov
aam
mov
sub
mov
add
mov
pop
loop
jno
clc
pop
mov
fisubl
sub
in
cmp
and
das
push
xor
inc
clc
test
sub
ljmp
mov
lods
xchg
mov
das
popw
mov
mov
jg
ror
push
xchg
dec
lods
adc
loope
push
ss
faddp
int3
sbb
push
test
sbb
jnp
mov
aad
loopne
inc
pushl
test
jbe
xchg
cmp
mov
pop
out
push
jno
call
insb
aas
jbe
inc
in
lock
xchg
inc
jp
sbb
in
pusha
mov
inc
xchg
add
mov
sbb
gs
outsb
pop
pop
scas
in
xchg
addr16
lahf
push
pusha
push
ret
mov
and
notb
push
or
pop
push
push
or
xchg
dec
insb
cld
inc
clc
sub
inc
xchg
stos
and
packssdw
mov
je
add
mov
in
adc
adc
gs
insl
xchg
inc
insl
xorb
fldenv
sbb
dec
mov
xor
out
mov
loopne
pusha
test
xor
call
sbb
adc
mov
inc
mov
jns
mov
mov
xchg
bound
out
push
ss
andb
loope
mov
in
sub
adcl
ds
and
dec
pop
iret
sarb
push
sti
sub
ja
lock
shll
test
in
jg
cs
push
or
icebp
aam
test
mov
ret
mov
xor
stos
cmp
cmpsb
sbb
jne
ss
fbstp
cmp
xor
dec
scas
cld
nop
sub
sbb
int
imul
add
xor
mov
pop
add
jbe
xchg
adc
loope
fldl
and
fildl
jp
push
lock
jg
rcll
fs
pushf
aas
cmp
data16
xor
adc
ljmp
clc
and
push
inc
mov
test
cmp
outsb
mov
stc
lcall
enter
cmpsb
bound
sub
enter
pushw
push
pop
pop
xlat
fdivrp
sub
xchg
mov
insl
add
push
scas
cmp
sbb
test
lea
push
cmpsl
xor
adc
xchg
mov
nop
xchg
fsubl
in
notl
cmp
mov
sbb
cwtl
adc
icebp
in
out
and
cmp
sub
sbb
sub
stos
je
xchg
sbb
push
in
mov
or
subl
icebp
outsl
push
pop
push
xchg
scas
dec
jl
cli
pop
jecxz
mov
in
js
mov
outsb
cmp
xor
loope
jnp
pusha
push
ret
adc
dec
mov
push
adc
dec
sbb
push
mov
jno
out
cmc
pop
and
push
rclb
mov
sub
out
pop
aad
test
pop
outsb
out
inc
sub
xor
orl
sbb
repz
testb
fwait
test
cltd
clc
sbb
cmp
adc
movsl
sbb
imul
xchg
out
mov
cmp
push
repz
add
icebp
adc
push
rcr
adc
jae
xor
add
cli
repnz
inc
dec
xor
out
jecxz
test
dec
jmp
sbb
arpl
lcall
pop
test
pop
push
ss
or
inc
jge
xchg
fwait
ret
xlat
pusha
push
shl
pop
mov
mov
inc
sub
push
push
shl
hlt
mov
push
push
arpl
push
sti
and
scas
pop
fdivp
jmp
xlat
ja
jmp
scas
subl
lret
add
cmpsb
mov
out
xchg
scas
pop
mov
mov
lock
cwtl
sbb
xchg
xlat
jne
fwait
sub
and
sbb
out
shrl
mov
or
mov
xorb
movsb
popw
mov
push
out
mov
jge
arpl
fdivrs
in
sbb
insl
movsb
ds
jnp
ds
ret
lea
pushf
mov
push
stos
dec
mov
pop
mov
sub
adc
hlt
push
shlb
and
addb
or
xor
loope
mov
adc
inc
mov
addr16
data16
sub
cli
shlb
ret
xlat
mov
sbb
scas
in
jge
jne
scas
test
test
mov
xor
flds
xor
mov
mov
negb
outsl
pop
push
and
cld
pop
hlt
ret
daa
and
add
jne
das
insl
xorl
scas
push
dec
cmp
test
add
sbb
loope
mov
out
out
hlt
and
shll
adc
push
and
add
imul
test
xor
imul
and
cmpsb
fcmovbe
pop
add
int3
mov
mov
jg
lahf
pusha
enter
or
mov
mov
mov
inc
inc
aam
ljmp
jnp
dec
push
and
push
in
pop
sub
in
sub
or
mov
das
or
jb
cmp
push
lods
lcall
pop
mov
test
and
add
in
pushf
insb
xchg
lahf
imul
addl
jp
pop
mov
mov
dec
in
cmc
cltd
into
pop
dec
inc
jo
sbb
loope
mov
push
sub
mov
pop
pusha
ss
cmp
out
add
aaa
cmpsl
mov
enter
scas
insb
movsl
mov
mov
mov
subb
jnp
dec
mov
xchg
ret
stos
xchg
fistpl
and
adc
addr16
outsb
and
pop
mov
shl
stc
shrl
pop
dec
jo
das
mov
enter
xor
rolb
or
inc
sbb
stc
pop
fistpl
ljmp
sub
sub
enter
adc
mov
adc
xchg
icebp
and
ljmp
addb
daa
or
push
data16
out
in
lds
inc
pusha
dec
push
xor
test
pop
sbb
js
int3
movsl
stc
test
sbbl
and
ret
inc
fidivrs
sti
les
cmp
jnp
push
in
cmp
fldcw
mov
test
pop
notl
pop
mov
daa
mov
mov
pop
mov
fisttpll
clc
aaa
shrb
cmpl
out
nop
mov
cli
fisubrl
mov
scas
mov
in
ja
cmpb
cltd
bound
ret
jnp
mov
fs
adc
and
std
push
dec
mov
fbld
rcl
sarl
movb
icebp
xchg
mov
pop
in
xchg
shll
repnz
mov
xor
in
xor
and
dec
scas
jns
sub
in
sbb
sahf
ud0
repz
jno
mov
test
or
lcall
out
popa
fldt
pop
mov
or
mull
fsubs
xchg
fwait
xor
mov
mov
mov
dec
push
lahf
cmp
push
mov
jmp
pop
ss
and
les
mov
lods
adc
stos
push
pusha
pop
cmpsl
mov
jmp
in
push
sub
pop
mov
pop
ret
adc
out
arpl
pop
xlat
rcrl
clc
les
pop
sbb
ret
mov
lods
sbb
mov
lret
adc
fcmovnbe
mov
xlat
xor
adc
pop
pusha
lock
ret
stos
lods
iret
cmp
jge
xor
stc
xor
sar
frstor
cmpsl
ja
rolb
movsb
xor
xchg
mov
clc
fistl
loopne
mov
hlt
or
aaa
popa
call
and
cmp
inc
lret
xorb
outsl
fcmovnu
fldl
sub
adc
test
in
sbb
pop
or
shll
dec
jae
mov
add
pop
cmp
daa
mov
jp
pop
push
in
or
scas
adc
push
insl
xor
jmp
add
loopne
pop
adc
es
int
xor
push
int3
mov
and
add
notb
nop
inc
inc
cmp
lds
incl
mov
sub
mov
in
and
les
pop
movsb
lock
gs
jp
jge
add
pop
not
scas
test
enter
out
popa
pushf
push
cmp
or
divb
jge
cmpsb
outsl
inc
or
insb
xchg
leave
mov
mov
outsl
adc
push
pop
repz
int3
push
and
add
negb
mov
inc
pop
push
add
test
pop
cmp
jge
iret
mov
cli
icebp
fwait
lods
cmp
mov
add
fstps
jl
sbb
adc
data16
test
in
push
jecxz
xor
or
sub
arpl
pop
ret
push
dec
movsl
dec
sub
addr16
adc
or
sub
xchg
mov
mull
das
dec
out
push
xchg
add
pop
jmp
ret
in
lods
negl
gs
and
movsl
aam
divl
push
popa
shll
sub
xchg
test
lcall
or
fsts
ficoms
fcmovnb
pop
testl
jl
xchg
dec
shll
fs
out
mov
cli
cmp
aam
cli
inc
xchg
pop
inc
incl
mov
and
std
addr16
xchg
xchg
shrb
shrl
pop
aas
sub
out
add
dec
push
fs
repz
jo
xor
add
xor
stc
xlat
xchg
pop
mov
cmp
lock
jl
xor
gs
addr16
mov
iret
xchg
jns
sub
inc
push
ret
xor
inc
mov
add
fs
xchg
jae
test
adc
sub
pop
mov
cmp
mov
mov
sub
sbb
xor
cli
mov
test
and
jge
sbb
dec
repnz
and
lahf
pop
and
imul
insb
jge
and
push
xchg
mov
in
jnp
out
call
sbb
jae
sbb
mov
xchg
loopne
ficoml
daa
cmpsl
sbbb
out
mov
mov
movsb
lcall
ss
or
out
cmpsl
pop
inc
sbb
pmulhw
shll
mov
cmp
loope
jne
je
xchg
jecxz
and
or
or
pop
inc
out
jae
int
add
mov
xorl
inc
lea
adc
push
es
push
pop
xlat
es
mov
movsb
mov
call
mov
xchg
and
jmp
dec
add
mov
xchg
xor
mov
xchg
lods
hlt
mov
ds
dec
out
jno
lahf
or
mov
sub
ret
dec
aaa
or
and
add
pop
mov
popa
pmaddwd
mov
arpl
shll
frstor
cmp
cs
xor
jl
outsl
mov
xchg
inc
scas
shlb
and
test
xlat
int3
push
inc
ljmp
fistpl
jno
sbb
ret
fisttpl
fidivrl
insl
mov
arpl
mov
lret
mov
sub
cli
xchg
shll
lock
jp
es
xor
mov
fnstsw
test
mov
lods
jmp
or
mov
jo
out
out
loop
cmp
fdivp
out
adc
in
popl
push
pop
and
xchg
loopne
pop
fwait
ja
cmp
sbb
iret
jb
xchg
mov
insb
cs
adc
or
outsl
imul
mov
ss
jb
fildll
xchg
mov
insl
mov
inc
add
hlt
jp
push
js
mov
mov
stos
cld
sub
addb
mov
fsubl
xchg
insb
in
sub
adc
int3
mov
xor
mov
cmp
lods
push
stos
addr16
mov
ds
mov
in
cli
pusha
movq
jns
jbe
iret
in
lcall
test
int3
bound
ds
sbb
push
add
les
ret
js
cmp
cmp
scas
push
push
jns
outsl
arpl
sbb
push
imull
mov
xchg
dec
outsl
je
leave
gs
xchg
out
lock
push
shrl
jo
mov
xlat
mov
mov
insl
jecxz
nop
pusha
sbb
test
mov
cmc
mov
sahf
dec
xorl
cld
lods
out
iret
outsb
pop
mov
and
xchg
mov
in
xor
lret
fcompl
sub
sbb
ret
push
jmp
ds
leave
test
and
push
sbb
or
mov
mov
addr16
ss
or
pop
movsb
inc
adc
jo
pop
sub
dec
mov
pushf
nop
negb
xor
pop
popa
cmpsl
rcrl
xchg
sub
leavew
and
xlat
xchg
test
jp
movl
add
dec
dec
cmp
popf
std
inc
adc
pop
sub
hlt
lret
xorb
mov
aaa
cmpsb
lea
jbe
push
into
movsb
lods
cmc
fstl
jnp
mov
lods
xchg
in
nop
pop
mov
hlt
aad
adc
ja
movsl
fdivl
rclb
add
xor
push
fwait
sbb
fcomp
aaa
test
mov
shll
jb
jp
cmp
in
add
and
mov
add
mov
jnp
cld
ret
xor
xchg
rclb
cwtl
jb
out
or
cli
mov
sahf
xchg
daa
lret
add
bound
sub
cltd
mov
fwait
fs
mov
popa
pop
jmp
push
fs
xchg
repz
mov
push
fdivl
push
loope
stos
inc
cmc
sub
fcmovnu
mov
nop
pop
sbb
and
mov
pop
lahf
mov
nop
push
loop
push
int3
repnz
sarl
cmp
pushf
pop
scas
rclb
inc
mov
jg
lret
andl
inc
out
dec
iret
test
insb
jg
jbe
dec
or
nop
and
js
in
cmc
xor
shrd
insl
pop
mov
arpl
xor
jnp
in
cmpsb
ficoml
and
hlt
orl
sub
and
aaa
in
and
adc
sub
outsb
push
pop
jb
xor
mull
mov
mov
ret
cmp
dec
fisubrl
lods
push
lahf
popa
xlat
rclb
jae
xchg
lods
push
insl
adc
add
je
lock
jo
cld
mov
addb
je
sub
adc
add
jmp
or
jae
mov
rol
jle
and
jge
inc
lods
enter
dec
lods
push
outsb
dec
addr16
dec
jmp
movsl
sti
call
scas
jle
outsl
jnp
dec
sbb
aad
push
lret
jbe
xchg
dec
lock
data16
movsb
movsb
sar
xchg
xlat
popf
aam
cmp
add
xor
jg
pusha
je
sbb
jecxz
mov
into
dec
inc
lods
push
mov
jge
decl
lahf
scas
shll
fwait
and
fimull
test
push
clc
sub
stos
mov
in
inc
stc
imul
cmpsl
popa
mov
cmp
or
sbb
stos
jns
add
mov
or
cmp
sbb
mov
inc
inc
movsb
mov
fisubl
mov
add
int
loope
dec
mov
lods
xor
out
add
out
lds
repz
sbbl
pop
mov
in
mov
arpl
aaa
xchg
jecxz
rcl
dec
iret
dec
scas
inc
insl
cmpsb
arpl
add
push
cmpsb
mov
ljmp
cmpl
mov
enter
clc
and
and
in
mov
pop
adc
pusha
iret
ljmp
cmc
call
ret
ret
cmc
icebp
stc
inc
cmp
aas
sub
imul
xchg
and
mov
sar
pop
jg
sub
pop
clc
fwait
lods
push
andl
mov
ss
jo
imul
xlat
idivb
jecxz
pop
cmpsl
decl
scas
sub
ljmp
cwtl
dec
xchg
fsubs
jmp
loopne
push
and
sub
sub
mov
xchg
aam
arpl
sti
fs
shrl
pop
cmp
push
sub
movb
push
adc
dec
adc
loope
stc
lcall
pop
mov
pop
fst
insb
pushf
cmp
scas
xchg
into
and
push
or
call
arpl
push
jo
fs
cmp
je
and
lock
jmp
pop
pop
jno
push
jae
cltd
mov
das
mov
mov
cmp
push
push
mov
adc
add
test
mov
jmp
ret
pop
push
popf
cmc
insl
sub
xchg
sub
cld
test
mov
adc
pushf
mov
lods
ljmp
inc
or
fadds
aam
xor
shr
jecxz
cmp
fcoml
mov
push
dec
ret
jmp
inc
add
mov
push
sti
push
gs
or
jmp
in
or
lret
es
outsl
xchg
adc
jmp
push
xchg
push
xor
mov
stos
jle
lds
mov
and
jnp
aas
dec
xor
fs
mov
fwait
dec
mov
inc
xorb
or
loope
aaa
es
cltd
dec
jp
jge
add
inc
or
cmp
or
addb
sbb
les
xor
pop
stos
push
sub
dec
pop
subl
xchg
cmc
add
stos
dec
test
and
ret
xchg
cwtl
sahf
jb
in
rcll
mov
xor
and
aaa
popa
mov
dec
aaa
cwtl
test
dec
test
xchg
int
cli
cmp
dec
outsb
lock
inc
test
mov
stos
xor
cld
mov
jle
and
push
mov
ret
test
shrl
call
push
call
inc
iret
lcall
xchg
dec
cli
test
nop
xchg
and
shlb
jne
mov
pop
enter
xor
rorl
mov
imul
int
xor
mov
shll
fldcw
out
aad
rcrl
inc
ja
adc
sub
aam
cld
cmp
xchg
rorb
or
mov
stos
jne
out
inc
shll
in
sub
pop
mov
lods
dec
mov
cs
cmpsb
test
jl
xchg
inc
jne
mov
ljmp
icebp
or
testb
das
xchg
in
xor
addr16
mov
mov
cmpl
out
sbb
out
inc
sbb
add
shlb
shll
sbb
xor
mov
in
cmc
aad
jbe
jns
pushf
aad
mov
ds
push
rcr
movsl
pop
pop
jecxz
insl
cmpl
movsb
lock
push
shrl
in
repz
stos
push
dec
lret
xchg
repnz
mov
lret
push
sbb
pop
test
mov
rolb
inc
fwait
popf
lods
mov
push
out
mov
mov
andb
push
int3
xchg
sbb
dec
jp
dec
xchg
aas
lret
and
cmpsl
addr16
aas
fiaddl
dec
es
mov
inc
cmp
or
lret
inc
fs
mov
call
and
sarb
xchg
sbbb
fidivrs
fs
popf
int3
popf
lret
add
ljmp
daa
push
fs
mov
cltd
add
adc
mov
rol
fsubr
xor
pop
push
push
mov
in
and
fcoml
or
xor
xchg
aaa
cmp
push
shll
lret
fisttps
mov
sahf
rorb
xchg
cmc
jne
sahf
push
imul
clc
xchg
pop
or
lahf
lock
xchg
roll
and
adc
jno
inc
dec
out
adc
ret
mov
dec
pop
les
jle
dec
jp
out
add
fisttps
ja
inc
rcr
js
mulb
and
stos
je
in
cmp
hlt
add
sbb
lahf
xchg
data16
fcomp
ds
mov
lcall
pop
sar
pusha
push
dec
iret
sbb
xchg
sbb
jnp
mov
idivl
bound
or
ficoml
mov
adc
insb
movsl
fsubrs
dec
fs
mov
daa
mov
cld
xor
notb
dec
xchg
sub
ljmp
lds
outsl
adc
push
jo
lcall
inc
jb
loop
int3
sbb
orl
mov
shlb
inc
in
scas
cmp
fistpl
decl
addl
movsb
cmp
push
xchg
es
mov
jbe
arpl
repnz
das
push
shll
sbb
inc
jne
sbb
adc
scas
lds
pop
or
pop
daa
and
int3
jmp
add
test
add
xor
sbb
test
sahf
push
xchg
insl
mov
outsl
pop
int
data16
and
out
pop
dec
ds
cmp
mov
sarb
lods
loop
les
pushl
xor
fldt
xor
jge
mov
jns
pusha
push
fmul
xlat
fiaddl
mov
in
ss
add
inc
inc
out
push
insb
mov
test
mov
call
mov
mov
in
flds
push
mov
movsl
sub
xlat
add
out
aad
cld
xchg
lock
aas
insb
or
fdivr
sbb
arpl
jl
jns
mov
gs
arpl
subb
mov
test
jne
ja
pop
mov
roll
adc
aas
clc
aad
mov
xchg
xchg
fsubrs
dec
add
stc
pop
addr16
or
inc
hlt
out
xor
test
out
mov
movsb
xor
daa
jge
xchg
outsl
cltd
push
aas
jae
xor
addr16
pop
jmp
sub
into
xchg
mov
push
fisttpl
in
dec
mov
sbb
lret
sub
fstps
xchg
pop
adc
cld
insl
dec
inc
xor
inc
je
push
pop
adc
pop
imul
pop
dec
sub
mov
ss
and
mov
decl
stc
mov
and
jae
jecxz
dec
jge
mov
and
jg
or
scas
mov
sbb
push
mov
lret
push
sbb
ja
ss
js
test
data16
fucomp
stos
addr16
movq
jle
cltd
shl
inc
mov
mov
xchg
in
and
xchg
idivl
mov
fistps
cmc
rcr
dec
fs
add
mov
sub
pop
or
lods
cmp
sbb
sahf
adc
mov
scas
sub
pop
xchg
sub
fwait
xchg
mov
shrb
xchg
cmpsl
add
mov
add
inc
push
mov
inc
sub
dec
cmp
ror
jmp
fwait
lea
fcomps
fcmovnu
jge
loopne
cmpsl
aam
lods
leave
or
jne
test
nop
mov
lret
jne
adc
xor
in
xchg
cmpsb
test
xchg
dec
in
xor
das
enter
loope
adc
mov
sbb
fcoms
jle
adc
outsl
and
adc
lahf
push
in
sub
pop
dec
cmp
push
lahf
and
mov
jmp
add
std
fdivl
ret
icebp
pop
into
es
and
or
dec
out
mov
js
adc
pop
mov
outsb
dec
xchg
jge
nop
push
adc
lret
cmpsb
xorl
cmp
scas
cmp
in
jmp
fadds
xchg
mov
sbb
mov
outsl
xchg
xchg
inc
loope
in
mov
xchg
scas
gs
sbbl
and
inc
dec
mov
outsb
mov
xlat
jp
push
mov
in
jg
xchg
jno
hlt
push
push
xor
and
test
insl
lahf
jbe
std
mov
insb
decl
shll
jle
xchg
jecxz
adc
inc
js
and
push
mov
lcall
jp
adc
imul
mov
in
pop
adc
stos
push
ret
xor
push
xorl
ja
or
popa
aad
jae
outsl
or
dec
dec
xlat
xor
aam
loopne
mov
inc
idivl
cmp
xor
cld
mov
arpl
ret
xor
rcrb
shl
xor
sbb
bound
adc
aad
fcomi
cmp
xchg
xor
and
xchg
sub
stos
and
push
push
pop
xchg
scas
mov
mov
movsb
stc
mov
sub
pusha
nop
bound
inc
xor
ja
shrl
ss
cmp
mov
fwait
xor
sahf
out
and
pop
mov
and
xchg
lea
xor
les
mov
stc
or
push
mov
sub
jmp
faddp
xchg
pop
pop
push
mov
leave
inc
mov
jb
xchg
add
xchg
pop
shrb
roll
mov
fcompl
xchg
scas
jmp
xor
pop
and
mov
loop
push
aad
pop
mov
sbb
adc
xor
inc
mov
decb
sbb
adc
jae,pn
push
clc
add
inc
sbb
and
sub
xchg
jns
imul
cs
push
and
fwait
cmpsl
popf
sub
sub
adc
lock
push
ret
ja
ds
pop
inc
xor
mov
or
jmp
hlt
sahf
cmp
mov
inc
and
xchg
ds
inc
cltd
stos
add
push
das
mov
xchg
clc
adcl
popf
jne
lcall
cmp
mov
add
cmpsb
dec
mov
pop
rorl
out
lret
movsl
pop
sub
sti
jnp
jns
adc
adc
ficompl
fnstsw
mov
icebp
std
sub
repnz
cmp
jmp
imul
fstpt
ficoms
ss
lcall
mov
test
out
xchg
or
repz
or
push
inc
movsl
fdivp
sub
and
dec
sbb
pushf
in
shl
pop
nop
xor
es
and
leave
push
pop
jo
pop
xor
sbb
push
gs
or
mov
jne
leave
xor
movl
mov
mov
rcl
xor
or
xlat
or
xchg
loopne
loopne
sahf
mov
jmp
mull
je
push
je
popa
or
lahf
lret
lret
out
nop
xor
push
jecxz
test
adc
jb
shl
mov
lret
jmp
fs
jne
test
add
xchg
adc
out
imul
arpl
out
mov
out
sub
cmpsl
xor
in
jnp
scas
xchg
add
rolb
adc
stos
cmp
lds
shl
ljmp
aam
shl
inc
sti
gs
cld
dec
dec
ds
int
cmp
test
stos
pop
mov
xor
into
rcrb
out
aad
xchg
mov
jno
jbe
or
push
xor
rolb
dec
cli
mov
jne
xlat
mov
or
insb
subb
jecxz
add
fcmovnu
or
dec
cmp
scas
pusha
push
pusha
adc
jge
push
and
call
mov
xor
andl
add
add
mov
adcb
xor
fisubrl
cmp
mov
scas
out
xchg
cmpsl
inc
stos
push
rclb
sub
ss
fbstp
add
mov
fistl
xchg
pushf
push
cmp
mov
dec
push
jle
inc
jmp
leave
mov
outsb
loopne
inc
push
loopne
fucom
stos
out
cmc
out
or
je
into
pop
add
mov
aad
fmull
lret
frstor
lcall
les
jnp
sub
pop
push
leave
cmpsb
sbb
cmp
js
movsl
std
inc
mov
ret
mov
xorl
sbb
mov
xchg
cmp
or
faddl
setle
or
hlt
cmp
or
lods
push
test
xchg
cmp
lea
repz
inc
sub
nop
jb
out
or
iret
roll
es
rorl
inc
bound
ror
incl
mov
cmpsb
push
mov
rcll
dec
sahf
cmp
repz
cmp
xchg
daa
ret
gs
shll
sub
int3
lds
cmpsb
imul
scas
push
movsl
ds
test
sbbb
jno
mov
push
and
jecxz
or
test
add
mov
mov
push
out
mov
cmp
inc
fcoms
ja
or
jno
mov
dec
fdivp
cmpsb
mov
jnp
mov
in
mov
pop
aas
in
scas
xchg
xor
jg
mov
sti
lock
mov
stos
sub
psllq
pusha
ja
push
pop
sti
adc
ljmp
ss
mov
push
sub
scas
data16
in
xchg
cmp
shl
out
repnz
lods
dec
es
or
mov
jp
dec
jle
adc
xchg
test
ljmp
jns
lcall
push
aas
xlat
sub
je
jp
out
pop
std
push
pop
adc
addr16
sbb
lahf
pusha
dec
cmc
mov
orl
and
dec
xor
jle
push
subb
ret
int
loopne
dec
test
int3
imul
aas
push
xor
popa
popa
insb
sbb
js
je
lret
loop
cmp
dec
cmc
cmpsl
pop
dec
jmp
pop
and
pop
xchg
push
xor
jo
leave
inc
cwtl
mov
sub
fs
add
insb
popf
adc
jmp
or
into
sarb
adc
pushf
xchg
add
xchg
adc
fldcw
mov
xchg
mov
fnstcw
and
mov
lcall
jmp
inc
sti
jns
sbb
mov
mov
pop
push
psrlw
inc
fnstsw
or
fistpl
xor
cltd
mov
add
push
jmp
movsl
pusha
xor
jle
mov
out
ja
xchg
sub
cltd
scas
ja
ja
jp
mov
dec
scas
lret
cmp
pop
std
jp
push
filds
xor
adc
insb
iret
into
jmp
pushf
xor
addr16
dec
es
ds
jne
bound
adc
xor
mov
dec
bound
mov
inc
jecxz
cmp
xchg
sub
outsb
imul
xor
push
pop
icebp
sahf
sbb
cmp
mov
std
pop
mov
aas
out
push
sbb
mov
ret
xchg
push
ja
int
sub
push
fldt
xor
dec
lods
hlt
push
sti
mov
out
adc
jl
pop
out
ret
mov
test
sbb
lret
xchg
fdivl
mov
dec
pop
imul
negb
dec
mov
jno
repnz
jl
sbb
inc
add
mov
faddl
sub
test
cmpsl
gs
out
xchg
dec
jmp
jnp
adc
idivl
push
ficompl
lea
xlat
shrb
sbb
popf
jle
out
mov
loope
iret
mov
jb
cmpsl
rorl
lcall
adc
xchg
add
jle
adcb
mov
pop
fstl
stos
data16
fcomps
xor
stc
jns
test
outsb
gs
cwtl
and
popf
xor
imul
push
jne
dec
jns
adc
cmpsb
jnp
adc
loope
and
cwtl
negl
and
jp
add
jo
xlat
mov
add
rcrb
mov
arpl
andl
xchg
aad
stos
int
and
in
push
js
or
aaa
push
sub
or
pushf
mov
jg
fisttps
fs
adc
out
dec
sub
ret
dec
or
in
inc
rorb
loope
fwait
loopne
jmp
mov
xor
ds
ljmp
rcl
mov
dec
je
mov
jbe
negb
sub
jne
je
addr16
jns
je
xlat
or
in
xor
flds
pop
inc
ds
pop
push
fadds
cmp
cmpsb
shr
pop
push
ret
sub
adc
adc
hlt
jnp
test
pop
sbb
dec
or
sbb
shll
outsl
cli
push
daa
ret
in
lcall
stos
mov
es
mov
or
lods
inc
add
cli
push
out
or
stos
cmp
loope
xor
call
mov
xor
mov
jno
xchg
mov
aas
ss
or
fisubs
xchg
pop
sbb
sub
lahf
out
cmp
sbb
jae
leave
sbb
stos
fiadds
je
sti
cwtl
sahf
xchg
inc
mov
and
sbb
cmp
pop
xor
fiaddl
inc
fidivrs
dec
mov
fcomip
rcrb
inc
push
mov
aaa
loopne
leave
rcrb
sub
mov
jecxz
push
stc
add
fldl
mov
and
lcall
adc
andl
dec
and
popf
mov
dec
jp
sub
jge
pop
test
repz
clc
js
inc
cmpsl
pop
comiss
push
jmp
sub
rcrb
std
in
sbb
into
out
in
cmpsb
in
int
jb
ss
mov
inc
push
or
add
push
cs
mov
and
mul
mov
fcomps
xor
scas
bound
ret
pop
sbb
adc
push
lds
jnp
call
push
push
leave
cltd
cli
cmp
fsubrs
cmp
lods
shrb
xchg
xchg
gs
ds
or
cmp
cmpsl
cmp
test
rcrb
nop
sub
inc
stos
xchg
inc
jmp
push
scas
repz
ja
mov
bound
sbb
inc
sahf
sbb
mov
aam
lahf
inc
movl
mov
xchg
add
or
imul
shlb
jo
mov
test
fistpll
mov
and
clc
test
rorb
into
dec
adc
sbb
add
outsb
add
mov
sbb
int3
sbb
mov
mov
hlt
xor
push
shl
mov
jne
and
sub
dec
mov
mov
mov
or
and
icebp
lods
and
sbb
push
scas
out
loop
cld
add
lret
xor
push
add
es
jmp
sti
sub
rorb
aas
xchg
test
repz
and
pushf
inc
mov
xchg
jns
cmp
lock
fildl
adc
jae
mov
shl
inc
xchg
lods
fdivrp
insb
mov
mov
data16
pushf
mov
xlat
dec
xor
cmp
xlat
std
sarb
test
movsl
fwait
sbb
sahf
xchg
in
push
sahf
push
adc
test
ss
lcall
arpl
jecxz
inc
daa
xor
movsb
rcrb
or
arpl
mov
xchg
pop
andl
add
cmp
outsb
mov
in
into
pop
jnp
jecxz
jnp
fistpll
mov
aas
dec
and
jl
pusha
jae
mov
shll
pop
fwait
outsl
fcomps
mov
jae
pop
int
loop
sbb
ds
adc
inc
jp
enter
es
jp
adc
sbb
xchg
xchg
movsb
hlt
cs
in
push
je
lret
cmp
jge
cs
or
xor
mov
daa
enter
cs
lock
mov
xchg
xchg
inc
enter
cmpsl
nop
push
loop
xor
pop
fnstcw
xchg
jne
jnp
sub
xchg
lods
fwait
xchg
inc
insl
leave
jg
push
sbb
inc
push
and
subl
sbb
or
cmp
sbb
outsl
jmp
adc
adc
mov
add
fcomip
ss
mov
sub
add
pop
lret
iret
jb
scas
sbbb
aaa
sbb
adc
inc
sti
push
fwait
pop
mov
xlat
cmp
jp
pop
aas
mov
pop
int
xor
mov
add
inc
neg
int
sub
out
out
shrb
sub
push
stos
in
shlb
and
scas
xchg
add
add
mov
imul
rcrb
mov
push
push
push
arpl
daa
adc
xlat
jp
mov
call
bnd
and
enter
pop
dec
mov
lds
push
xor
scas
mov
clc
pusha
and
xor
lock
jb
ret
shll
fcompl
add
jo
and
xchg
clc
inc
aas
int
gs
or
or
outsb
clc
cmc
loop
sbb
pop
inc
popa
dec
lret
xor
into
pop
jp
push
ljmp
lea
push
lods
pop
jg
sub
repnz
mov
jo
mov
ret
sub
dec
call
jnp
mov
in
insl
sahf
enter
jl
sub
add
movsl
aas
fs
mov
pop
jb
or
push
push
incb
sarb
cmp
and
mov
imul
movsb
cmp
push
inc
xadd
and
outsb
xchg
push
in
cmp
push
and
out
xor
fists
dec
jecxz
mov
ss
pusha
shrl
shll
adc
scas
divl
cmp
and
test
stos
ss
lds
add
aaa
xchg
mov
mov
cmp
sahf
into
jp
mov
adc
fwait
cs
fbstp
sti
enter
sbb
add
and
movsl
or
push
les
pop
stc
imul
sub
sub
mov
cmp
mov
mov
jl
inc
scas
push
xor
mov
mov
mov
jg
push
push
pop
add
pop
cmp
or
pop
js
loopne
movsb
shrb
lcall
rorl
cmp
insb
fdivrs
add
aas
adc
and
or
cmpsb
sbb
aad
aas
cltd
ja
in
or
in
lock
repnz
pop
mov
mov
cmp
sub
sbb
jb
cmp
pop
mov
dec
sahf
pop
mov
out
sbb
daa
jecxz
jo
mov
andb
sti
push
lock
lret
xor
in
pop
pop
loopne
imull
sahf
jae
sub
mov
adc
pop
and
or
test
in
mov
mov
das
aaa
add
lock
or
pop
or
lcall
imul
pop
sbb
popf
ljmp
push
cwtl
sub
pop
nop
lea
add
je
rolb
inc
xor
cmpl
or
adc
sub
nop
in
sub
sub
sbbb
test
fldenv
imul
xchg
jo
xorb
lods
les
fisubl
mov
bound
xor
mov
or
idivl
jne
xchg
xchg
jnp
pop
jno
nop
mov
iret
mov
add
dec
or
enter
mov
fcoml
das
adc
dec
xor
leave
cmp
in
int
sbb
fst
mov
cmc
inc
xchg
xor
nop
or
insb
jl
pop
lods
fmul
mov
in
es
in
iret
sub
or
shl
aaa
lods
jnp
lcall
pusha
dec
pop
into
push
in
movsl
or
mov
imul
push
push
xorl
fcmovnb
mov
mov
inc
xor
inc
cmp
mov
in
fdivrl
dec
push
inc
dec
dec
xacquire
cmpsl
mov
add
cmc
cmp
cmc
scas
and
daa
loope
popa
cmp
cmpb
popa
aas
push
mov
adc
sbbb
stc
mov
sbb
jmp
jns
fistpll
push
jp
mov
pop
repnz
push
inc
jno
les
test
sbb
out
jecxz
push
pop
ds
mov
das
dec
fld
sub
clc
xor
cmp
fdivp
stos
xor
sarb
sbb
xor
dec
cltd
imul
div
loope
int
jnp
cmp
push
mov
scas
jg
mov
ss
gs
jmp
les
fs
add
sub
and
mov
cmp
scas
lods
subl
or
push
rolb
lahf
lret
out
pushf
xor
xor
pop
and
movsb
imul
test
mov
mov
sbb
xor
fimull
stos
pop
scas
out
mov
xor
sbbb
cmc
add
mov
xchg
mov
sub
test
xor
movsl
mov
stos
and
inc
mov
jle
jp
in
mov
or
das
xor
jae
dec
insl
and
add
lret
mov
loopne
pop
bound
lds
in
movsl
fisubrs
pop
ficomps
sti
sahf
mov
mov
nop
xor
lds
aam
aas
sub
xor
cltd
add
push
cwtl
inc
fdivrs
pop
ds
ss
out
push
or
xor
sub
pop
pop
mov
int3
jb
mov
jb
xchg
pop
push
lods
cld
imul
out
out
out
add
out
lea
or
mov
orl
sahf
movsb
push
jmp
pop
mov
cmp
decb
das
loopne
inc
call
push
into
push
dec
fs
aaa
sarl
out
pop
fdivrl
wbinvd
xor
adc
sbb
pop
sbb
pop
dec
mov
push
pop
push
lods
xor
and
aaa
ljmp
adc
mov
jne
xchg
in
lea
cld
addr16
cmp
nop
mov
lds
fldcw
add
aas
sbb
mov
call
das
lods
lods
push
xchg
push
sbb
aam
mov
sbb
mov
push
jns
pop
mov
out
dec
daa
lods
sub
xor
xor
test
int3
pop
jmp
sub
inc
cwtl
icebp
jns
add
xlat
jno
pop
sahf
int
in
adc
adc
jecxz
mov
out
dec
xchg
lea
addr16
xlat
mov
adc
aaa
push
in
mov
xchg
lea
jae
jbe
sub
push
mov
repz
sbb
jge
adc
or
push
outsb
fs
inc
sbb
xchg
cmpsl
adc
orl
mov
fsubs
push
call
or
jmp
jbe
stos
rorb
xchg
mov
fmull
mov
andl
sub
into
orl
or
sub
and
jl
fistl
inc
ja
dec
and
add
adc
mov
pushfw
sahf
dec
cmp
in
cmp
test
lcall
icebp
negl
jp
cmp
add
test
cltd
add
mov
imul
shlb
dec
cmp
jg
pop
outsl
lock
xchg
imul
and
add
xorl
sahf
outsb
aam
pop
sbb
imul
mov
cmp
xchg
inc
xchg
cmp
fsts
or
or
ds
mov
nop
and
and
sub
aas
or
cwtl
jmp
imul
inc
pop
push
or
mov
xor
leave
or
jmp
imul
adc
cmp
add
ret
decb
dec
mov
sub
popa
sbb
jae
fidivrl
test
jg
fisubrs
adc
xlat
insb
jno
data16
mov
xchg
mov
xchg
mov
out
sub
sub
sahf
cmpsb
cmc
jge
ja
sub
jno
mov
mov
dec
leave
out
dec
fisubrl
cwtl
loope
push
dec
mov
pop
push
dec
testb
sbb
dec
pop
ror
lods
add
and
test
sub
mov
or
les
jecxz
pop
js
sub
shrl
out
negb
sub
addr16
mov
inc
cwtl
dec
jmp
ficompl
sti
fistl
or
les
xorb
incl
shl
xchg
imul
in
sbb
or
es
push
stc
in
sti
dec
push
mov
shll
pcmpgtb
aas
out
inc
xor
jle
gs
call
or
pusha
and
leave
and
sub
xor
mov
sahf
loopne
pop
dec
xor
sarb
add
mov
add
in
mov
adc
and
xorb
mov
loopne
mov
inc
cmp
mov
test
pop
cmp
icebp
test
sbb
jmp
std
lock
jge
stos
outsl
and
mov
adc
and
iret
loope
dec
aad
push
pop
loope
sbb
add
std
adc
mov
cltd
out
jnp
mov
mov
mov
call
inc
add
xor
sarb
mov
adc
sub
dec
mov
mov
push
inc
in
mov
mov
mov
imul
sbb
pop
and
movups
or
and
enter
sbb
dec
ljmp
in
mov
push
sbb
aam
clc
xchg
pop
outsb
enter
mov
jg
xor
lahf
pop
jb
xchg
sub
and
lea
out
xlat
sub
and
add
mov
movsb
mov
pusha
fnstcw
pop
rcrl
pop
sbb
js
sbb
fisubl
mov
or
out
loop
roll
mov
dec
cltd
clc
xor
and
push
push
movsb
adcb
xor
mov
dec
sub
mov
push
mov
test
inc
mov
dec
adc
fs
imul
mov
jns
push
mov
adc
sti
pop
dec
rclb
xlat
xor
mov
push
jmp
pop
orl
or
clc
lods
add
push
cmp
mov
std
mov
inc
popf
jg
mov
add
jno
loope
rorl
fwait
leave
cmp
adc
xchg
scas
imul
sub
inc
out
jbe
pop
bound
aas
push
rol
lea
mov
stc
and
push
pop
and
push
leave
stc
mov
jb
dec
mov
or
leave
adc
ret
pop
add
lahf
xchg
test
push
mov
push
js
out
and
iret
mov
add
pop
frstor
xor
inc
lock
repz
fwait
addr16
outsb
sbb
sarb
push
lahf
loop
cli
jns
or
rcl
jp
mov
xchg
xchg
dec
test
les
in
cltd
sarl
sbb
movsl
push
mov
out
mov
inc
fisubl
jl
push
mov
clc
xchg
je
fwait
loope
in
mov
mov
sti
jo
xor
loope
and
adcb
xchg
fnstsw
add
push
in
mov
pop
jle
fidivrs
mov
xchg
xlat
cmp
add
or
lea
bswap
dec
or
imul
mov
inc
out
icebp
mov
inc
addr16
scas
push
cld
jle
cs
enter
jne
movsl
aaa
sub
mov
sbb
or
sbb
cmp
gs
and
inc
pop
or
rcll
shl
jge
lods
mov
mov
popa
add
jmp
testl
fldenv
shrb
and
adc
jecxz
enter
cmp
adc
movd
or
jb
sbb
aaa
sbb
aad
pop
rcrb
addr16
xor
cltd
popf
ljmp
pop
repz
jb
jg
dec
test
jp
mov
test
cmp
repnz
jae
aas
jp
mov
ljmp
arpl
adc
mov
aas
cwtl
xlat
cmpsl
and
mov
adc
cmp
out
push
push
xchg
cs
jnp
jno
ljmp
int3
loope
push
adc
cmpsb
mov
addr16
in
pop
ja
ret
sub
cmp
cmp
push
sub
jo
popf
cmc
push
jo
adcl
mov
inc
or
mov
mov
mov
push
aas
lea
test
fimuls
insb
xchg
imul
or
daa
pop
fdivs
adc
mov
mov
xchg
call
pop
and
xor
cmc
cmp
insb
inc
shrd
adc
mov
mov
ret
cmp
mov
inc
xor
mov
mov
dec
mov
pop
jns
into
sbb
cmp
inc
push
lock
mov
cmp
cli
inc
pop
pushf
dec
out
and
pop
movzwl
pop
mov
sbb
iret
add
push
xchg
add
sbb
divl
dec
enter
into
lods
fdivrs
out
mov
sahf
mov
lods
jl
mov
mov
dec
jne
sub
insb
cmp
adc
lret
cltd
inc
jns
lods
fcompl
popa
scas
shlb
jmp
cmp
add
xor
mov
cmc
out
out
rolb
pop
lods
movsl
cld
shr
loop
insl
cmp
movsb
jle
xlat
shrl
stc
push
xchg
mov
nop
or
jmp
fstl
dec
jmp
lds
int
loope
mov
into
adc
daa
sahf
push
or
xchg
xor
xchg
scas
icebp
sbbb
dec
push
enter
cs
inc
shll
xchg
sti
pop
pushf
sbb
lcall
add
xchg
js
sarl
cmc
inc
sbb
test
sbb
gs
test
pop
and
jge
and
rcrb
xchg
fwait
maskmovq
imull
sbb
dec
inc
ljmp
repnz
pop
xor
test
pop
mov
loopne
inc
mov
or
and
cld
lock
lahf
outsb
push
jb
sarl
scas
mov
pop
out
sbb
rorl
jne
push
xchg
inc
iret
xor
cmc
xchg
sarb
or
or
mov
sbb
cmc
push
mov
int
inc
fcmovbe
cld
push
xlat
sbb
cld
ljmp
sbb
cmc
add
sbb
lret
insl
icebp
bndstx
ja
mov
push
cmp
inc
jnp
ds
mov
pusha
lret
sbb
or
sub
mov
into
xchg
or
pop
mov
push
sbb
xchg
mov
jnp
mov
xchg
out
mov
cmc
or
mov
in
aam
js
roll
pop
imul
jae
pusha
dec
sub
and
jge
xor
aas
stc
rcrb
insb
rcrl
sub
sub
push
rorl
test
js
fdivrs
cmp
bound
sub
sbb
scas
in
das
je
andl
dec
pop
adc
rcl
shl
out
ja
inc
cmp
ret
xchg
jno
std
pop
pop
daa
ja
aas
mov
jae
je
pop
repnz
gs
cmp
mull
mov
addl
mov
dec
je
xchg
cmp
sub
fs
cmp
xor
bound
or
aad
lods
daa
pushf
or
and
popf
xchg
out
pusha
out
mov
jge
pop
ret
data16
cmpsb
push
rclb
jae
arpl
xor
push
mov
mov
pop
shrl
sub
daa
inc
fimull
or
ja
aad
mov
nop
cli
shll
jmp
fs
lret
mov
jg
xchg
mov
inc
data16
pop
sub
adc
aam
fidivs
pusha
push
fisubrl
inc
mov
ficoml
mov
in
mov
out
incl
bound
xlat
sub
fs
stos
mov
js
mov
mov
dec
cmp
sbb
daa
pop
pop
adc
repnz
outsl
lock
dec
jg
loope
cltd
sub
popa
sti
insl
add
mov
xchg
int3
jne
popa
adc
inc
fwait
xchg
dec
test
jle
fbld
pop
xchg
xlat
push
sbb
pop
adc
adc
into
and
mov
cld
push
jns
sahf
jno
frstor
pop
into
ss
loope
jns
cltd
in
pop
push
add
push
xor
dec
sub
and
pop
inc
mov
pop
js
xchg
cmp
adcl
jo
adc
and
inc
movsl
xchg
xchg
adc
inc
jmp
ror
mov
mov
or
stc
fs
mov
dec
jns
lods
push
push
or
mov
mov
cmp
push
movsl
inc
dec
daa
aam
movsb
mov
loop
inc
jp
sti
mov
dec
fwait
test
out
scas
hlt
or
pop
mov
jno
adc
loop
std
push
inc
scas
icebp
sub
lods
sarl
test
dec
push
adc
mov
repz
cmp
sbb
movsl
jo
insb
mov
out
outsl
xchg
ljmp
outsb
lock
ljmp
les
and
in
jle
in
cmp
xchg
xor
mov
xchg
push
xor
pop
mov
xchg
dec
push
stos
sbb
mov
mov
aas
mov
xchg
push
rcll
jmp
aad
inc
loopne
inc
fidivs
adc
jp
test
hlt
mov
sub
rcrl
nop
inc
arpl
jge
sbb
cli
mov
push
bound
jl
imull
sbbb
cld
mov
nop
mov
int
scas
xchg
adc
mov
push
or
add
test
imul
cltd
sbb
and
and
inc
shrl
inc
sbb
push
mov
xchg
inc
test
jmp
add
movsl
fidivrl
jno
jmp
xchg
and
xor
xor
in
xor
mov
jg
les
lods
xchg
popa
aas
mov
setnp
push
xchg
add
sahf
pop
movsl
pop
pushl
subl
outsb
pop
ret
mov
lahf
or
inc
outsl
iret
adcl
cli
jo
fists
mov
pop
lea
xor
imull
push
ljmp
inc
sti
sub
mov
jecxz
jb
xor
mov
dec
outsl
aam
out
pushf
adc
fists
cmp
jbe
cld
negl
or
jge
stos
inc
mov
sub
jo
xor
ret
push
out
jmp
xor
jnp
negb
xor
inc
xchg
loopne
lcall
xchg
jo
pop
sub
pop
sub
inc
and
or
lret
dec
mov
sub
fucomip
jg
data16
push
iret
imull
repnz
outsb
mov
or
inc
mov
or
push
mov
icebp
data16
out
mov
call
dec
inc
arpl
jmp
push
add
xor
mov
xchg
jne
data16
aad
inc
scas
lods
xchg
cmp
xchg
sbb
lret
xchg
stc
mov
jmp
mov
mov
ret
enter
or
or
fdivs
jbe
test
lahf
sti
iret
push
sub
mov
or
mov
cmp
addr16
jmp
clc
aaa
xchg
arpl
leave
daa
sbb
out
fcomps
xor
jno
cs
movsl
push
jl
outsl
cltd
cmc
sbbl
fdivrl
and
test
rclb
jns
into
pop
out
ret
cmpsl
sti
shrl
xchg
inc
cli
arpl
call
iret
dec
movsl
adc
aas
jbe
xchg
mov
in
cmp
push
insl
roll
pop
push
or
sbb
pop
mov
xchg
ja
int
push
lret
sub
dec
ds
pop
fiadds
lods
rol
ja
mov
xchg
mov
and
int3
xchg
ljmp
xor
mov
mov
sbb
aad
jnp
or
popf
repnz
jg
mov
jg
fucom
aas
loop
jo
loop
dec
xlat
and
pextrw
sub
arpl
lret
jl
mov
mov
adc
mov
pop
sub
xor
push
cltd
and
mov
ret
test
mov
or
dec
out
sub
adcl
xchg
mov
out
cmp
cmp
mov
dec
mov
imul
stos
es
or
int3
push
ss
mov
scas
xor
nop
xchg
push
add
jge
arpl
mov
js
push
jnp
pop
je
int3
mov
sti
sbb
mov
nop
inc
pushf
hlt
jbe
mov
movsl
repnz
aaa
or
xchg
xor
inc
divb
loopne
push
push
jle
out
mov
leave
loop
or
sub
ja
pop
xchg
test
mov
add
in
test
out
inc
fidivrl
fstps
das
imul
inc
lock
ss
ds
cld
jb
xlat
sarl
adc
lret
xchg
ja
sbb
push
sub
mov
sbb
or
leave
loop
lret
inc
sbb
out
mov
mov
xlat
pop
lahf
int
push
mov
arpl
cmp
cli
jo
outsb
loope
int3
mov
and
in
mov
mov
je
or
pop
and
push
add
js
aaa
jp
pop
cmp
adc
stos
test
les
pop
lods
mulb
mov
stc
adc
lret
rorl
lret
test
repnz
dec
sbb
ljmp
sarb
lock
jo
xor
vrndscalesd
arpl
xor
jp
add
pusha
icebp
jno
das
xchg
js
outsb
jg
aam
push
jb
inc
xor
mov
pop
and
dec
jnp
data16
jb
sub
jmp
fprem1
out
mov
fisttps
dec
inc
daa
adc
xchg
sub
into
mov
arpl
lea
rclb
sub
jb
test
in
arpl
mov
cltd
pop
xor
das
hlt
xchg
and
mov
inc
lods
push
mov
arpl
rcrb
adc
shll
cmp
xchg
or
es
pop
enter
cmp
in
jmp
fcoml
enter
lahf
jmp
inc
push
int3
fs
aad
add
push
dec
aaa
sahf
mov
loope
pop
and
popf
jle
popf
ret
pop
and
dec
add
out
xchg
sbb
dec
fimull
fmull
or
pop
subl
xchg
das
rcrb
sub
out
stos
lahf
mov
aas
cmp
sti
add
stos
push
jl
inc
cltd
in
inc
rcr
adc
nop
stos
and
adc
fmul
insl
jmp
in
les
sub
mov
in
int3
add
xchg
imul
add
in
jecxz
ret
in
outsb
push
push
scas
dec
daa
xorb
inc
je
jmp
jl
cwtl
js
sbbb
mov
mov
mov
xchg
mov
shrl
data16
insb
arpl
sub
inc
push
dec
sub
push
jae
xchg
cmp
cltd
fsubrp
mov
test
icebp
lret
lret
mov
test
xchg
movsl
test
das
out
mov
jne
fidivl
sti
mov
js
and
and
ret
in
hlt
mov
repnz
pop
mov
daa
hlt
pop
push
xchg
or
ja
fstpt
jl
or
daa
push
pop
mov
sbb
push
adc
push
sbb
pop
das
rcrl
loop
and
daa
in
loop
inc
mov
sbb
pushf
xchg
add
fstps
cwtl
mov
push
icebp
xor
arpl
aad
and
sahf
jge
cwtl
jno
fwait
je
pushl
test
loop
in
inc
xor
xor
mov
loopne
mov
push
xor
cmp
stc
adc
and
mov
mov
mov
out
pop
out
cmc
js
jg
push
and
push
les
xchg
jl
lea
mov
lret
dec
ja
dec
cmp
js
pushf
std
inc
xlat
scas
pop
int
sub
fisubrl
jl
lahf
adc
out
inc
loop
fnstenv
push
ret
and
and
movsb
test
mov
insb
cld
sub
and
mov
or
shrl
loop
jmp
sbb
inc
and
fdivrs
repnz
in
cmpl
aaa
push
adc
lea
dec
and
sahf
push
sub
mov
pop
pop
adc
xchg
enter
dec
sub
stos
push
jno
sahf
mov
mov
xor
fwait
dec
lea
cwtl
test
push
shll
popa
jp
sub
add
aad
pop
leave
mov
aad
fidivl
jne
pop
jp
fimuls
dec
inc
ss
push
adc
out
cmc
jecxz
icebp
mov
ret
rorb
jnp
scas
bound
in
add
out
xor
insl
sub
loope
mov
inc
pop
aas
stc
out
mov
lock
lcall
icebp
je
loopne
xlat
or
das
mov
out
imul
cmpsl
lahf
hlt
push
push
int3
iret
sub
fldcw
lds
ret
insl
mov
ljmp
shll
pop
mov
jmp
mov
test
ret
es
add
ds
push
sub
lret
adcb
sbb
mov
pusha
imul
jge
cmpsl
orl
insb
jno
lods
aaa
pop
dec
fcoml
test
inc
test
cmc
jo
mul
loopne
lret
int3
sub
das
pop
push
sbb
int
jl
jecxz
mov
adc
and
sub
mov
add
pop
dec
mov
pop
sub
mov
xchg
dec
jae
lahf
push
cmpsb
fwait
faddl
dec
rcrb
cmpb
xchg
arpl
cmc
xor
sub
jbe
or
pop
pop
mov
mov
sahf
insl
arpl
inc
or
add
gs
adc
loopne
jbe
jne
js
mov
xor
or
jb
stos
and
or
movsl
and
lret
repnz
mov
push
lret
mov
pop
int3
ret
push
jmp
mov
xchg
or
and
andb
jmp
lret
adc
mov
les
ficoms
xor
icebp
ss
sub
popa
in
stos
xor
mov
movb
movsb
sub
and
out
push
pop
dec
imul
xchg
imul
and
inc
rcrl
adc
andb
adc
and
jne
ss
add
shll
out
mov
cmpsb
cltd
fxch
mov
je
das
sbb
cltd
and
cltd
adc
mov
cmp
ss
lea
mov
inc
mov
in
pop
xchg
mov
rcrb
stos
imul
push
mov
icebp
pop
adc
pusha
add
xchg
sub
aam
pop
iret
idivb
in
lret
jmp
jmp
push
inc
jnp
lret
sub
sahf
cwtl
dec
sbb
xchg
movsb
arpl
cmp
mov
arpl
inc
jnp
stc
ja
shlb
shl
dec
mov
xchg
cmpsb
adc
scas
pushf
aad
sub
cmp
jl
pop
dec
leave
idivb
or
loop
mov
mov
repnz
shll
faddl
pop
jb
in
cld
mov
pop
out
push
mov
push
setno
or
xchg
das
int
test
addr16
rol
mov
jno
add
inc
jecxz
mov
dec
fisttps
mov
dec
stos
push
add
push
or
adc
push
pop
lds
sub
sahf
test
out
add
les
adc
jg
or
push
push
out
rorl
add
sahf
popa
cltd
lods
jo
inc
mov
pop
in
movsb
nop
outsl
ret
adc
sub
jbe
icebp
push
add
adc
pop
rolb
cmp
movsl
loope
stc
hlt
inc
sub
shrb
mov
daa
mov
mov
inc
fwait
sbb
jmp
push
and
insb
jle
mov
inc
cmp
andl
out
sahf
addr16
sahf
and
dec
sbb
shrb
divl
insl
leave
dec
pop
inc
out
lahf
mov
negl
or
les
dec
sarb
daa
lds
or
mov
cltd
cwtl
adc
jl
sub
les
test
mov
ja
sub
int3
push
mov
lahf
dec
add
mov
popf
mov
sahf
loopne
sbb
loope
pop
lock
fdivrl
jle
scas
push
jle
ret
icebp
push
and
dec
out
jecxz
push
push
mov
scas
jne
inc
outsb
fsubrs
fsubrl
push
out
sub
sahf
int3
adc
dec
pop
data16
cs
lods
push
jae
sub
xor
xchg
mov
fdivrs
mov
and
in
jecxz
mov
or
mov
loopne
in
pusha
loope
pop
push
aaa
xchg
jnp
cmpsb
push
scas
mov
mov
loop
fsts
jg
loopne
into
dec
push
jl
ds
add
sub
cwtl
dec
js
and
stc
dec
jg
sbb
clc
js
das
inc
cli
adc
pop
outsl
inc
stc
fnstenv
fimull
sbb
sub
jnp
fisttpll
sarb
test
imul
iret
push
cmp
jg
lods
pop
lcall
mov
sarl
jbe
ror
cs
std
lret
sbb
insb
ret
mov
pop
mov
cmpsb
push
inc
stc
sub
pop
fisttps
mov
pop
inc
lods
fcomip
and
jne
pop
andb
movsl
and
push
imul
mov
xor
and
outsl
push
or
sahf
popa
jg
xchg
mov
dec
shrl
ret
int
pop
imul
xchg
fistpll
je
adc
fwait
or
mov
test
xlat
int
cmp
mov
bound
sub
int
pop
adcb
xlat
mov
sub
mulb
cmp
fs
out
mov
pop
das
mov
ss
or
pop
sub
jl
sub
sbb
imulb
mov
icebp
in
data16
and
mov
pop
aam
xor
pop
jmp
lods
sbb
cmpsb
out
cli
fisttpl
shrb
mov
cmpsl
adc
andb
out
rorl
cs
insl
in
psrad
pop
and
popl
mov
mov
ds
push
jno
stos
loop
stos
int3
scas
nop
inc
es
es
xor
add
and
push
jb
cltd
sbb
scas
aad
cld
jae
mov
inc
mov
cmpsl
cmp
pusha
jbe
xor
pop
ds
jp
mov
in
push
pop
negl
inc
dec
add
outsb
push
pushf
fwait
and
addr16
arpl
xchg
xchg
fcompl
mov
scas
sub
sbb
xlat
test
enter
roll
pop
xor
imul
cmc
add
mov
mov
test
xlat
jg
std
add
repz
mov
movsb
pushf
xchg
add
ret
aad
in
test
push
sub
cmpsl
and
xchg
aaa
sbb
rorl
shrb
mov
inc
push
mov
push
push
out
test
push
mov
leave
int
andb
xchg
xchg
cmpb
scas
ljmp
sarb
daa
dec
xor
pop
roll
jp
or
lock
movsl
in
jmp
pop
pop
pop
push
adc
mov
aas
in
xchg
je
das
out
cs
pop
sbb
xchg
pushf
fdivrp
push
xchg
mov
pop
aad
mov
je
inc
arpl
or
cwtl
add
add
jnp
push
add
pushf
or
pop
push
fsubs
loope
xor
cli
jge
xchg
mov
iret
push
or
push
call
in
fdivrs
push
mull
nop
andb
je
jg
lods
callw
jo
test
sbb
daa
arpl
push
lods
sbb
scas
or
das
stos
inc
test
sub
xchg
mov
pop
sbb
xor
scas
dec
shr
negl
mov
sbb
push
cs
sahf
push
lahf
movsl
dec
shll
push
push
xor
mov
out
push
stc
loop
in
jne
adcl
mov
push
xchg
int
or
lcall
xor
lods
xor
ficoms
mov
fs
xchg
adc
repz
syscall
inc
pop
add
test
mov
xor
scas
mov
jecxz
dec
lods
dec
sbb
xchg
mov
cltd
pop
pusha
fstl
mov
xchg
inc
mov
xor
mov
test
aad
ljmp
cwtl
fsubr
mov
xor
gs
cmp
jbe
sub
ljmp
or
or
cmpsl
add
je
out
add
orl
ret
insb
sahf
mov
pop
ret
mov
and
fisubl
addr16
inc
mov
repz
ds
push
dec
iret
jmp
add
dec
adc
dec
aas
outsl
cmp
sbb
mov
fs
xlat
out
cmc
sbb
mov
call
int
cmc
or
stos
into
and
add
out
xor
sub
ljmp
dec
pop
inc
lret
aas
mov
xchg
das
inc
jnp
hlt
fsts
popa
fldt
cwtl
sub
into
jmp
cltd
js
pop
neg
mov
and
pop
int
sub
sbb
divb
fmull
mov
popf
imul
fwait
or
push
leave
test
xchg
add
int
sti
add
ja
outsb
fucomi
sahf
mov
out
mov
add
inc
jnp
test
sbb
or
lret
fiaddl
or
mov
adc
or
adc
pop
mov
xor
test
push
mov
rorl
mov
xor
loop
outsl
clc
inc
add
jp
shll
inc
sub
and
into
outsb
and
sbb
or
mov
addr16
push
mov
pushf
xor
rcrb
and
test
mov
mov
mov
ret
sub
mov
push
push
das
dec
cmp
aaa
inc
pop
inc
cmpsb
jg
inc
ficompl
stc
test
mov
xlat
int3
std
orb
sbb
xchg
nop
push
mov
inc
int
mov
lret
mov
outsb
mov
push
sub
lcall
call
js
mov
ret
data16
or
or
and
fstpl
cmc
out
ret
xchg
sbb
and
xchg
pop
lds
cmp
int3
pop
lret
fsubrs
push
mov
xchg
jae
fidivrl
adc
hlt
xchg
xor
cmp
insb
mov
orl
xor
stos
aas
out
shlb
xor
lret
adcb
adc
int
addr16
xor
and
push
sbb
cmp
jp
or
loop
lret
pop
dec
cmpsl
ficoms
jb
adc
roll
mov
ret
cwtl
mov
dec
mov
addl
and
pop
fwait
xor
adc
sub
push
mov
dec
lock
das
ss
ret
dec
pop
out
cmp
sbb
xchg
test
push
xchg
movsb
push
mov
je
pop
xor
add
subl
cmp
cwtl
aas
adc
lret
test
push
daa
push
outsb
xchg
hlt
mov
mov
mov
and
imul
inc
in
xchg
push
mov
cmpsl
inc
mov
stc
push
pop
push
push
lcall
mov
out
xor
ljmp
dec
inc
or
mov
and
mov
jb
mov
fmull
push
sbb
adc
test
jb
jp
ret
jbe
pop
cmpsb
and
cmpsb
lods
sbb
sbb
test
daa
jae
dec
mov
scas
ret
and
mull
subb
sub
ficompl
and
sbb
mov
int3
arpl
mov
jmp
lahf
jne
sbb
adc
add
out
iret
icebp
mov
iret
iret
or
std
sbb
adcb
insl
pop
negb
pop
outsl
in
mov
icebp
popf
cli
sbb
push
xor
pop
mul
push
icebp
out
out
add
ficoml
enter
pop
cld
sbb
in
xor
daa
ret
popa
scas
mov
enter
daa
jne
in
jl
add
cmp
inc
mov
test
pop
aad
aad
jns
loopne
sub
xchg
xor
mov
mov
cmp
dec
pop
adc
mov
andb
in
jmp
sbb
xor
xor
dec
inc
ret
jge
mov
or
mov
add
mov
fwait
daa
jns,pt
mov
xchg
decl
jns
rclb
ret
out
iret
icebp
aaa
in
fadds
jno,pn
jecxz
dec
xchg
outsl
sbbl
xchg
pop
mov
test
sarl
data16
adc
int
push
aaa
or
dec
xchg
in
int3
in
mov
ljmp
das
fsubl
adc
fcomps
fsubrs
jp
dec
rcll
movsl
and
ss
mov
push
sbb
lods
loope
push
in
pop
stc
stos
lea
push
jmp
shll
xchg
pop
inc
bound
pop
jp
and
jb
cmp
dec
movsb
jnp
aaa
gs
cmpsl
mov
pop
outsl
cmp
pop
xchg
jb
jo
lahf
jmp
cwtl
pop
adc
xchg
push
out
ljmp
pushf
add
cli
mov
pop
push
icebp
out
mov
xor
xor
pop
cmp
jg
cmp
pop
add
cmpsl
mov
mov
pop
scas
mov
fnstsw
popf
xorl
sarb
dec
jae
movsl
out
std
dec
adc
jg
mov
shlb
jne
fldt
stos
sub
lahf
pop
lahf
jns
and
ljmp
inc
dec
add
pop
aam
xchg
adc
fidivrs
dec
push
add
mov
sub
xor
lret
add
nop
or
test
outsb
fwait
push
sbb
mov
fstps
sub
mov
dec
jp
std
sbb
push
lds
xchg
adc
pusha
movl
aam
scas
cmp
stc
mov
mov
mov
add
adc
xchg
push
pop
movsb
in
sub
mov
pop
mov
adc
adc
pusha
push
xor
dec
sahf
and
sub
test
pop
sahf
sbb
sbb
std
nop
jle
test
js
add
xchg
in
adc
ds
xchg
sbb
mov
cmc
lcall
or
jae
mov
adc
cmp
sub
pop
rcll
cmp
adcl
jne
fmull
lods
inc
pop
mov
push
jns
inc
dec
in
test
inc
jne
dec
inc
shll
jmp
lods
sub
xorl
and
inc
and
stc
cs
rorl
nop
test
and
cmpsb
or
jg
jmp
pushl
testb
dec
ds
add
jb
lods
sbbb
jbe
add
and
sbb
adc
fisubl
enterw
sub
scas
jno
sahf
repnz
inc
icebp
jmp
into
inc
inc
ds
pop
sub
outsb
dec
and
and
push
ds
adc
shlb
xchg
lcall
cmpsl
pop
insb
mov
xchg
stos
mov
or
stc
out
fsincos
inc
xor
fsubl
inc
jnp
fcoml
not
dec
sbb
dec
stos
mov
jne
cmp
fldcw
mov
icebp
iret
push
repz
test
loopne
in
arpl
xor
nop
mov
aam
jp
mov
sub
das
lret
shll
pop
jp
data16
mov
jge
xlat
cmc
adc
cmpsl
push
mov
enter
dec
lds
cld
or
pop
cld
sub
fldl
mov
mov
add
add
mov
xlat
inc
lds
ss
popf
or
dec
adc
sub
lods
mul
cmp
push
test
mov
mov
add
xchg
testl
jmp
sbb
or
xchg
mov
mov
sbb
nop
clc
cmp
lds
hlt
cmc
mov
push
lahf
out
movsb
push
pusha
lods
mov
cli
mov
dec
inc
mov
pop
cld
int3
cmp
sub
xchg
pop
cltd
fldcw
outsl
push
add
test
dec
inc
dec
mov
or
cltd
cmc
cs
cmp
adc
xor
stc
imul
push
in
sbb
mov
mov
fstpt
pop
mov
jecxz
mov
and
fldt
pop
and
jbe
push
mov
xor
adc
or
inc
leave
mov
fwait
outsl
fcompl
cmp
fnsave
or
pop
pop
popa
cmp
jbe
sub
push
xchg
and
jne
imul
push
sub
adc
dec
es
fwait
pop
xchg
xchg
sub
cmp
pushf
push
cmpsb
stos
mov
or
adc
pop
add
jle
je
inc
mov
mov
das
xlat
ret
jo
rcrl
push
scas
xchg
xor
mull
rcrl
test
dec
xchg
push
addr16
hlt
sbb
jo
xor
dec
jae
int
lahf
and
cmp
inc
fdivl
stos
lods
pop
inc
shll
test
fsubrl
sbb
out
ret
sarl
clc
ret
insb
mov
aaa
add
push
pop
or
adc
test
aam
or
mov
pusha
fwait
add
arpl
push
xchg
jne
adc
sbb
jge
dec
jmp
jmp
mov
test
ds
jg
sbb
sbb
lcall
int3
mov
cld
roll
mov
mov
in
iret
in
or
sbb
loopne
insb
pop
cs
scas
ljmp
jle
imul
pop
sahf
or
lahf
jnp
lods
xchg
dec
popa
mov
sbb
std
mov
lods
pop
adc
js
bound
push
xchg
in
out
mov
mov
out
sbb
enter
ja
adc
adc
repnz
mov
add
cmp
in
inc
dec
std
mov
mov
decb
jl
add
sbb
sub
call
js
int
pop
es
cwtl
fnstenv
jmp
hlt
push
jp
in
inc
push
xchg
rcl
mov
jp
mov
popf
jbe
adcb
adc
pop
sub
mov
inc
push
aas
cmp
xlat
sub
rcrl
sbb
lret
decb
push
int
sbb
fsub
int3
aas
iret
insb
pop
mov
cmc
aad
xor
jmp
mov
stos
ss
in
inc
incb
jne
in
dec
add
mov
adc
inc
xlat
nop
imul
dec
dec
dec
aas
mov
xchg
sarb
fnsave
xchg
jp
mov
adc
push
das
push
mov
inc
xchg
out
fisubrl
outsl
ret
inc
ret
aad
mov
lret
jecxz
adc
add
mov
fdivrl
xor
and
xchg
pop
out
cmp
mov
mov
icebp
aaa
cmp
cmp
xor
adc
insb
jbe
fbstp
inc
cmp
movsl
cmp
xchg
fstpl
divb
mov
sbb
mov
inc
pop
lahf
sub
sahf
fisubrl
push
iret
scas
sub
cmc
mov
adc
and
loope
push
sub
rol
jbe
mov
mov
fistpll
inc
fwait
daa
aam
mov
xchg
stos
jno
rolb
fistps
mov
test
mov
and
sbb
jbe
sub
push
cli
sbb
das
or
aaa
push
mov
sub
aam
ffree
sbb
daa
out
dec
leave
btr
gs
inc
cs
fwait
loop
mov
aas
pshufw
enter
xor
mov
and
and
jns
pop
and
mov
sub
sub
movsl
negl
popf
mov
jb
lock
jo
fdivp
pop
adc
lock
pop
dec
imul
pop
test
add
xchg
cmp
inc
mov
and
aad
lds
dec
lcall
mov
add
stos
dec
sbb
inc
lds
push
lret
jg
mov
shrb
sbb
sub
pop
stos
insb
xor
mov
adc
cld
jp
pop
daa
jge
adc
in
pop
rorl
mov
aad
pop
and
pop
in
push
or
lret
mov
lea
cmp
stc
ret
mov
rcr
xlat
insl
int3
pop
aas
add
test
pop
adc
and
pop
and
push
xlat
add
pop
loopne
pop
add
adc
xchg
arpl
mov
pop
lods
ret
pop
aaa
cltd
mov
mov
sub
mov
push
cmp
and
sbb
pop
roll
cmpsl
push
daa
dec
or
inc
add
imul
inc
pop
addr16
dec
xchg
or
mov
ret
inc
mov
pop
mov
fcoms
inc
xor
das
int3
sub
push
scas
adc
cs
out
cmp
mov
add
cltd
mov
sbb
ljmp
mov
aam
xlat
pusha
rclb
inc
mov
xchg
sahf
jge
mov
jp
jns
mov
mov
inc
sbb
out
cmp
mov
pop
jle
xchg
or
adc
pop
fnsave
test
mov
stos
cmp
xor
daa
xor
mov
popa
and
loop
sbb
lahf
jns
mov
inc
sbb
fs
sahf
and
clc
dec
or
pusha
jecxz
inc
fimuls
sbb
pop
xchg
adc
adc
push
xchg
fisubs
push
sbb
and
fcomip
mov
out
or
aad
jge
sbb
int3
into
mov
and
sub
xor
jns
push
push
pushf
xchg
inc
subb
or
insb
sub
nop
jg
adc
out
inc
lods
xchg
fmulp
push
cmp
jae
test
scas
mov
lock
pop
pop
xchg
test
push
out
jl
test
jae
and
pop
pop
daa
adc
dec
enter
aam
enter
or
xchg
sarl
fisttpl
scas
or
mov
rcrl
lret
lea
sub
sub
sub
bswap
bound
jo
cmpl
in
sbb
out
movsb
push
insb
inc
pusha
jnp
rcrb
inc
jp
jmp
lret
popa
test
flds
in
pop
mov
addr16
fistps
int
xorl
mov
test
pusha
mov
add
scas
sti
std
sub
fbld
test
push
lcall
int3
popa
fdivrs
int
rolb
lea
xor
adc
fdivrp
pop
fistps
xchg
cwtl
xchg
pop
sarb
add
jns
sub
jmp
push
bound
cmp
pop
cmp
mov
push
dec
sahf
and
add
push
push
mov
and
fs
pushf
xchg
jae
int3
fwait
scas
cs
stc
sbb
sbb
add
xlat
adc
xor
les
icebp
stc
sbb
pop
and
loope
dec
push
sbb
stos
jl
pop
and
jle
or
insb
mov
cmpsb
dec
and
fsts
add
inc
or
test
ret
fs
mov
sub
mov
jne
push
pop
jnp
inc
xor
dec
jns
xor
fdivrs
stc
loope
add
sub
mov
lods
aaa
push
cmpsb
mov
adc
push
pop
imul
jecxz
xchg
xchg
add
fimull
mov
fldl
enter
sahf
pushf
fcmovnb
add
or
jl
xchg
rcrl
aaa
inc
xchg
ret
sarb
cli
sbb
sub
loope
repz
lcall
jp
inc
stos
movsl
jns
mov
in
call
sub
adc
movsl
sarb
dec
cwtl
pop
inc
jae
sbb
pop
push
adc
mov
test
shlb
mov
mov
push
mov
daa
sub
mov
int
ror
pushf
dec
addb
sub
gs
xchg
mov
xchg
add
sbbb
nop
stos
rcr
mov
xchg
pusha
or
xchg
out
in
push
pop
cld
xchg
xor
out
or
add
or
lods
mov
adcl
ja
add
cmpsl
ja
insb
sub
ss
jmp
lret
stc
je
sti
push
outsb
inc
sbb
ret
pushf
imul
gs
xchg
sub
sbb
movsb
test
jnp
inc
cs
adc
jns
cs
das
in
popf
mov
mov
sti
xor
shll
xchg
adc
arpl
dec
mov
inc
popf
popa
jne
pop
dec
ljmp
test
inc
jge
push
mov
mov
inc
cwtl
sbb
fwait
leave
dec
imul
and
jle
cmp
je
movsb
subl
out
repz
outsl
test
pop
mov
int
fimull
push
int
sarb
fsts
dec
int3
push
in
sub
jbe
mov
lahf
inc
push
dec
in
jnp
xor
inc
icebp
sub
xchg
ljmp
aaa
and
stos
mov
xchg
and
xor
mov
dec
lcall
lods
bound
call
mov
js
adc
push
push
jge
pop
push
or
and
out
aas
pushf
imul
sbb
mov
mov
mov
sub
inc
cmp
pop
mov
mov
and
mov
and
or
rcl
lock
out
dec
inc
cmp
push
stos
mov
push
push
jp
mov
stos
mov
xor
adc
sbb
xchg
dec
loop
xchg
jo
insl
sbb
jbe
into
or
addr16
out
inc
lahf
pop
inc
sbb
jns
jb
gs
inc
dec
pop
mov
jmp
cs
sbb
cltd
cmpsl
popa
std
adc
notb
fidivl
mov
lea
inc
jmp
lret
movsl
mov
pop
fistps
mov
mov
or
sbb
mull
mov
stc
loope
jp
push
cld
imul
adc
push
xchg
popa
jae
das
or
push
sbb
sub
cld
pushf
imul
jno
cwtl
popf
into
test
aas
iret
xchg
dec
aaa
sub
insb
mov
jle
in
pop
in
sub
jns
mov
jmp
scas
mov
pusha
inc
fildl
or
lret
mov
orb
in
mov
dec
or
add
inc
sbb
sub
mov
popf
mov
xchg
push
cmpsl
xchg
mov
jp
add
add
loop
fisubs
xor
dec
xchg
shll
test
sti
add
lret
aas
pusha
and
movsb
adc
dec
or
xlat
ret
xor
hlt
aam
xchg
in
push
in
lret
pushf
adc
fmul
rorb
xchg
jae
sub
aaa
lods
rorl
test
lods
dec
lock
std
in
add
fucomip
lcall
test
movsb
mov
jns
xchg
jl
sbb
xchg
cmp
lret
repnz
cld
in
ret
das
rcr
outsb
cmp
pop
bound
out
out
out
xchg
notb
pop
test
fstpl
subl
adc
sub
popl
mov
call
sbb
ja
jbe
mov
int3
sbb
movsb
adc
sub
sarb
sub
jnp
addr16
adc
jmp
mov
mov
add
push
add
xchg
js
push
and
adc
scas
mov
sbb
ret
imul
sbb
sbb
inc
cmp
repnz
mov
outsb
push
lret
fdivl
mov
pusha
in
sub
mov
push
andb
insb
lea
enter
push
stos
or
mov
jnp
xchg
std
cld
lods
out
loop
lcall
or
cli
push
and
je
lds
push
adc
popw
sub
clc
xchg
cs
cmpsb
sub
pop
and
jge
scas
int
negb
movsl
xlat
cmp
cmp
xor
shrb
dec
xchg
outsb
or
jns
mov
call
dec
mov
loop
sbb
and
inc
mov
mov
shlb
fwait
push
test
mov
inc
or
call
mov
loop
ljmp
je
lds
mov
lret
jo
test
mov
and
lods
cmp
jnp
scas
aam
fsubrp
sbb
xchg
cld
sbbl
add
ss
sbb
and
stc
push
xchg
xchg
pop
mov
loopne
outsb
mov
jle
aas
mov
mov
jbe
ds
xchg
test
mov
movsb
dec
cs
int
mov
and
lods
mov
popf
inc
and
push
sub
lcall
aaa
into
or
imul
adc
jp
or
cli
cmp
jo
lahf
add
sahf
repnz
cwtl
sub
std
pop
mov
and
sarb
mov
js
xadd
add
shrb
ret
and
mov
jo
inc
jne
out
add
ja
daa
ret
add
dec
das
aad
pop
fimuls
sub
cmp
aas
add
test
cli
out
mov
sbb
push
pop
pop
inc
add
sub
ljmp
shr
cmpsl
mov
mov
xchg
cmp
inc
mov
sbbb
shll
addl
clc
xor
test
into
icebp
scas
js
out
addr16
inc
lret
aaa
pushf
shll
mov
sub
aad
mov
rorl
or
sbb
cmpsl
lret
xchg
mov
pop
pop
lods
cltd
verw
cmc
shll
iret
cld
xchg
mov
cmp
or
lods
std
ret
gs
sub
cmp
int3
cmp
jl
js
inc
aas
sub
enter
xchg
icebp
lods
sbb
jmp
dec
imul
sbb
mov
sarl
cmp
push
xchg
mov
xchg
stos
inc
push
add
rorb
sti
popa
jo
jg
pop
cwtl
pop
dec
add
repnz
pusha
lret
adc
xor
inc
or
jl
add
mov
mov
jmp
mov
pop
stc
mov
jp
xlat
mov
call
fstps
fsubrs
clc
xchg
jmp
popl
loop
cmc
xchg
sahf
adc
sti
test
into
mov
aad
sahf
or
std
inc
lods
lock
push
jp
sti
or
mov
mov
insl
hlt
inc
lcall
mov
dec
adc
sbb
out
fistps
cmpl
sbb
pop
mov
out
add
hlt
ds
mov
mov
lds
cmp
jecxz
dec
pop
sbb
adc
inc
popf
jb
les
cmp
js
jp
les
stos
cwtl
mov
inc
clc
jae
xor
push
jecxz
test
inc
cmp
inc
clc
xor
push
js
dec
cmp
mov
testl
or
xor
popf
push
in
xorb
sbb
lds
pop
cld
popa
decb
call
rclb
es
out
mov
mov
mov
pop
push
and
pop
xchg
mov
xlat
hlt
xchg
push
ficompl
pushf
xor
inc
in
sub
sbb
push
cmp
ja
out
in
xlat
or
inc
pushf
push
movsb
int3
pop
cltd
out
and
or
pop
clc
fs
or
pop
loopne
pushf
mov
xchg
dec
repnz
imul
stos
jo
test
mov
jo
aam
sbb
cmp
adc
ljmp
arpl
lock
jns
out
xchg
imul
push
adc
rcl
push
mov
jg
pop
sub
adc
ret
arpl
and
jge
pop
mov
daa
jbe
cld
jmp
sub
push
adc
ss
xlat
lock
inc
inc
arpl
rol
out
pop
rcrl
add
push
xchg
mov
sub
mov
jne
ja
imul
inc
stc
or
mov
xor
repz
sbb
and
ret
jmp
mov
xchg
push
fistps
shr
lahf
mov
push
fldenv
dec
push
aad
cwtl
push
push
push
jbe
scas
popa
ljmp
push
cli
cmp
sub
stc
jecxz
in
fdivr
sbb
push
mov
fmulp
xchg
into
mov
and
mov
mov
clc
fsts
xor
imulb
ds
fwait
cmp
xor
gs
ret
sub
insl
std
int3
insl
stos
bound
out
pop
notb
ret
cs
or
mov
mov
jp
mov
outsb
lret
fstpl
loop
jnp
add
jb
divb
pop
sub
ss
xchg
jl
jmp
jg
mov
xchg
mov
out
scas
pop
ljmp
mov
insb
insl
cmp
test
dec
loop
push
sbb
ret
sub
xchg
push
and
popf
pushf
mov
fildll
stos
les
push
sub
lret
lahf
test
adcl
mov
loope
lcall
ffree
mov
jg
pop
cwtl
pop
mov
xchg
insb
push
int
push
dec
int3
jbe
insb
pop
mov
push
test
mov
in
cld
js
ja
push
aam
sub
cmpb
jb
dec
push
sub
xlat
out
dec
aam
lods
mov
mov
lcall
xchg
iret
pop
xchg
jne
or
jp
out
repz
pop
sbb
jle
sar
sub
add
sbb
cmp
les
in
popa
and
push
out
mov
inc
dec
arpl
divl
pop
push
out
sub
adc
lods
idiv
mov
cmp
xchg
dec
lret
add
inc
adc
or
push
xchg
sbb
jle
push
mov
and
sbb
insb
push
mov
ret
loopne
pop
lods
lahf
jae
push
pop
pop
cmpsb
pushf
cmp
dec
repnz
xor
xor
mov
outsb
dec
fisubs
push
dec
lret
lods
mov
fidivrl
xchg
std
push
sti
add
mov
leave
jns
fwait
xor
or
inc
ljmp
mov
clc
mov
jle
add
push
xlat
rcrl
or
push
ja
out
shlb
frstor
clc
sbbb
pop
or
push
imul
imul
cs
stc
add
cmp
mull
xchg
sbb
aas
nop
adc
mov
loop
int
push
jmp
outsb
loopne
test
pop
xor
or
or
mov
mov
or
scas
xor
dec
mov
cli
push
dec
pop
sahf
and
idivb
sub
roll
mov
push
xchg
imul
or
sbb
shll
or
push
test
inc
call
inc
lcall
or
sbb
in
shll
out
jbe
mov
xchg
arpl
iret
mov
mov
xchg
aam
bound
ja
das
add
idivl
iret
mov
xor
lcall
enter
and
or
movsb
stos
push
cwtl
sbb
iret
inc
pop
repnz
in
movsb
mov
outsb
jmp
jns
jb
jno
sub
aam
xchg
mov
push
int
xorb
xor
daa
inc
pop
loop
shll
mov
xor
lods
ret
pop
xlat
sarb
mov
sti
icebp
push
pop
adc
add
dec
pop
jge
daa
ljmp
nop
adc
andb
jmp
xor
dec
lea
in
mov
test
or
push
push
mov
xchg
mov
fnsave
fnstenv
ljmp
lock
push
lock
outsb
jno
jl
or
cmpsl
ljmp
mov
xchg
xchg
movsb
and
xor
dec
notb
and
mov
sbb
pop
loope
lock
jp
xlat
lret
scas
sub
add
aad
or
jne
out
dec
jmp
mov
sbb
mov
jbe
push
push
cmpsb
mov
pop
fcompp
adc
sub
mov
mov
dec
mov
clc
push
pop
shll
jmp
jl
js
daa
aam
xchg
fwait
mov
setne
mov
xchg
fcompl
inc
adc
cmp
jg
in
pop
mov
add
gs
pop
jmp
jb
imul
std
cmp
icebp
inc
cmpl
outsb
sti
dec
lea
inc
iret
imul
jo
loopne
loop
out
in
sub
xorl
add
lahf
lds
mov
mov
fwait
repnz
sbb
outsl
and
add
test
rolb
enter
pop
je
push
int3
popa
cmp
xor
mov
les
in
std
inc
std
xchg
aas
add
inc
mov
fdivp
fsubp
popa
xchg
sub
push
into
inc
fsts
push
mul
fcmovnbe
lahf
mov
jl
jno
fnstenv
sarl
xor
push
shl
in
cltd
aam
loop
imul
pusha
cwtl
cmp
fdivrp
push
or
test
mov
imul
mov
push
sbb
mov
dec
sub
jb
mov
pop
xor
mov
jnp
rcrl
in
fninit
sti
jle
pushl
cmc
movb
cmp
and
jae
in
addr16
push
jp
jecxz
pop
pushf
movsl
lahf
stc
es
imul
inc
xchg
and
and
pop
push
mov
mov
or
das
std
sbb
loop
mov
cli
xchg
popf
loop
int3
clc
or
scas
fistpll
mov
pop
sub
dec
and
cmp
inc
stos
dec
repz
pop
pop
mov
into
pop
add
arpl
sbb
pop
cmpsb
lret
push
jne
icebp
into
mov
add
mov
ret
and
cld
adc
imul
jo
js
sbb
mov
inc
rclb
subl
pop
arpl
jne
mov
dec
fwait
js
fstl
fldenv
stc
sub
push
ja
pop
xchg
fidivl
divb
arpl
xchg
into
mov
inc
or
jne
xchg
mov
sub
dec
cmp
icebp
dec
jno
and
add
mov
pusha
lods
in
or
inc
mov
ljmp
clc
mov
sbb
rolb
imul
mov
xchg
mov
in
inc
inc
pop
xor
adc
clc
push
int3
lret
popa
push
mov
enter
out
inc
dec
rcr
movsl
mov
fisubs
out
cmp
fcoml
ret
std
mov
xorl
outsb
sub
shlb
fimuls
push
mov
xor
cwtl
dec
call
aas
and
or
gs
mov
ret
nop
andb
push
sbbl
shrb
pop
sbb
dec
imul
imul
out
cli
cmp
faddl
sbb
and
ja
jp
add
lret
mov
shlb
jp
add
ljmp
xchg
xor
xchg
repz
jg
notl
fdecstp
sti
pop
sahf
mov
inc
pop
push
dec
pop
or
add
test
icebp
aad
lods
sbbl
call
or
jmp
mov
jnp
add
push
es
cmpl
aas
mov
adc
hlt
mov
lret
mov
sub
sahf
ror
pusha
jnp
jg
and
push
jp
push
mov
fwait
imul
xchg
fdivrs
xchg
pop
xchg
addb
rcrb
sbb
aaa
lcall
out
xchg
pusha
addr16
jo
insb
mov
xchg
xchg
jle
cmpl
cltd
sub
xchg
cs
cmp
ds
and
mov
iret
push
lret
movsb
push
jnp
daa
out
cmp
loopne
cmp
mov
in
lock
sti
sbb
xchg
jne
mov
adc
xchg
adc
adc
test
inc
inc
repnz
dec
mov
ficomps
xor
les
clc
inc
pop
ret
sub
aad
mov
mov
in
xchg
fbstp
mov
push
inc
push
add
insb
and
loop
lcall
dec
inc
sub
dec
fcompl
mov
test
push
push
xor
push
xor
cmp
fbld
shlb
xor
popf
loop
jecxz
pushf
mov
mov
adc
bound
std
jg
test
es
js
scas
shlb
outsb
aam
jae
add
cmc
scas
cmp
je
add
test
sbb
aam
outsl
fiaddl
add
pushf
jne
leave
and
rcrl
aad
mov
push
jl
mov
out
cmc
mov
jns
and
pop
sub
cmp
inc
in
mov
aas
sbb
xchg
inc
icebp
mov
lret
add
out
aam
add
addb
ss
fidivs
pushf
dec
add
das
aaa
aaa
sub
mov
jo
push
pop
sbb
mov
pop
jmp
adc
add
or
mov
jns
int
lock
int3
shl
mov
adc
ror
out
push
adc
and
lea
sbb
test
enter
mov
push
arpl
sub
das
in
push
leave
std
sub
sbb
add
pop
inc
inc
nop
incb
push
sub
adc
xor
mov
sub
pop
and
jae
mov
decb
js
insb
movsl
cmpsb
fildll
inc
cmp
dec
push
inc
xchg
xchg
pop
and
jmp
xlat
sbb
mov
adc
push
fisttps
jl
mov
pop
dec
stos
fwait
ljmp
xchg
es
pop
push
ljmp
loope
jle
adc
es
fldl
les
sub
mov
rclb
das
mov
mov
ja
dec
sub
addr16
mov
xchg
lods
outsb
scas
jp
mov
or
pop
outsl
and
xchg
in
mov
add
stc
add
cmp
xchg
out
adc
ret
fs
xchg
outsl
mov
mov
bound
pop
adc
sub
mov
inc
out
ds
scas
mov
into
clc
mov
dec
stos
shl
xchg
mov
xchg
pop
insb
pop
jle
cmp
popf
fldcw
test
push
pop
lahf
sbb
xor
sbb
add
sbb
loopne
and
sub
sub
jl
adc
popf
out
ret
dec
scas
pop
xchg
icebp
movsl
imul
stos
dec
aas
add
shlb
fiadds
bound
pop
fnstcw
jno
cs
xor
mov
jge
push
mov
shr
inc
test
lods
mov
test
or
adc
pop
and
lcall
lret
push
dec
in
dec
aad
negb
icebp
or
xchg
es
pop
aad
js
aam
jne
pop
lods
test
mov
repz
shrl
ret
or
sub
cmp
jl
pop
inc
jbe
mov
push
dec
rcll
sbb
and
and
push
jns
mov
andl
pop
lcall
into
adc
in
aas
scas
inc
jb
add
test
pushf
addr16
ret
xchg
test
ss
xchg
scas
insl
xchg
inc
sub
sti
inc
inc
adc
mov
xchg
or
scas
fstpl
fnstsw
jo
add
jmp
rclb
jl
std
inc
mov
sub
dec
sbb
mov
add
mov
and
push
or
stos
mov
int3
add
fisubrl
leave
or
adcb
call
insl
ret
jbe
ljmp
fimuls
or
fisubrl
pop
pop
pop
cs
fstpt
xchg
loop
xor
ljmp
dec
je
ljmp
sahf
dec
mov
xor
test
sub
lds
scas
push
fxch
imul
mov
lea
push
add
leave
dec
orl
adc
mov
outsb
push
iret
sbb
mov
xor
mov
repz
sub
ret
aas
pop
ja
stos
ljmp
fisubrs
je
cmpsl
mov
xchg
xchg
sahf
mov
cli
xor
push
cld
mov
test
mov
rolb
ja
and
push
scas
jp
sub
jns
sbb
xchg
inc
jecxz
or
rclb
call
test
sub
xchg
fs
xchg
aaa
in
mov
fdivp
lcall
sahf
out
inc
pushf
imul
and
int3
jne
sbb
leave
fistpl
or
repz
test
mov
aas
push
xchg
movsl
xor
shr
test
icebp
mov
mov
ljmp
fwait
jo
sub
cmp
add
mov
into
adc
test
in
mov
das
fnstenv
or
jmp
pop
jmp
cwtl
pop
dec
popa
inc
pusha
sarl
pop
push
jnp
xchg
lcall
mov
xor
test
mov
jge
incl
int3
xchg
or
xor
or
std
or
cmp
shll
push
xchg
pop
push
push
insl
push
ret
stos
gs
stc
add
movsb
int3
test
lods
clc
imul
xor
mov
pop
add
mov
push
or
mov
jbe
insb
adc
bnd
in
mov
cld
sub
xchg
hlt
jp
jmp
mov
mov
ret
pop
push
repnz
jmp
pop
or
outsl
mov
mov
jg
pop
sahf
xchg
mov
inc
sub
dec
pop
or
out
xor
aad
xlat
fcom
push
mov
jnp
outsl
cwtl
mov
jns
mov
pop
jecxz
lock
mov
movsb
push
into
out
push
push
mov
test
jmp
cmp
jmp
dec
fsubs
mov
jmp
lods
ret
aad
ret
jl
loop
fnstcw
mov
push
imul
cli
pop
and
inc
out
xchg
or
rorb
aad
jge
popf
or
pop
aaa
stos
adc
add
mov
sub
mov
les
and
insb
stos
xchg
jns
gs
push
dec
lods
mov
jmp
shlb
xorb
lods
pusha
ret
pop
dec
out
pop
xchg
inc
sahf
call
aad
hlt
xor
mov
mov
xchg
pop
push
jle
arpl
jbe
pop
dec
pusha
cwtl
adc
popf
mov
test
mov
xchg
push
pushf
jg
adc
and
and
xchg
dec
sbb
orb
and
inc
dec
push
shlb
xor
mov
and
pop
sbbl
xchg
lock
mov
je
les
imul
ss
loopne
ljmp
push
addr16
das
repnz
adc
lock
mov
xchg
cmpsb
sbb
jp
xchg
sbb
insb
ficoms
and
int
in
pushf
xchg
jae
pushf
xchg
add
arpl
das
outsl
mov
sarl
shll
rcrb
cmpsl
lock
sbb
bound
or
push
or
mov
jo
push
cmp
push
sub
loope
jle
dec
xchg
inc
sar
loop,pn
test
mov
ss
je
mov
int3
std
xor
daa
and
negb
and
inc
sti
ljmp
and
jp
pop
pop
stos
and
dec
add
das
pop
bound
fiadds
lods
cmp
test
pop
ror
jno
jae
sarl
pop
frstor
mov
cltd
cltd
idiv
data16
in
or
inc
xor
sbb
mov
mov
in
add
std
inc
aas
dec
idivl
mov
fimull
jg
je
inc
jnp
cltd
sti
push
push
pop
pop
xor
fiadds
div
and
hlt
jae
mov
mov
lods
cwtl
loope
mov
xor
fs
cmp
in
cmpl
and
outsl
sbb
sbb
movb
stc
adc
push
in
mov
test
pop
sub
pop
cmp
scas
mov
sub
sub
sub
fdivr
mov
lea
mulb
fimull
mov
xlat
popf
cmp
cmp
out
mov
mov
jecxz
sbb
and
dec
sbb
call
push
jp
loop
and
inc
ja
push
pop
cltd
mov
movb
pop
je
pop
cld
push
mov
sbb
pop
sbb
pop
insl
in
popa
adc
lods
aam
jbe
lods
pop
mov
jecxz
mov
lcall
out
enter
movsl
fcmovnb
test
sub
xchg
mov
scas
adc
cmp
inc
fbstp
mov
mov
add
pop
in
push
mov
int
icebp
cld
or
sbb
call
notb
lea
jmp
add
aam
inc
xor
ret
adc
fistpl
xor
mov
push
rcl
push
adc
mov
ror
add
jmp
mov
pop
imul
lods
add
or
mov
push
push
into
lahf
fisubrl
sbb
subl
xor
and
push
jle
aad
inc
int
repnz
jbe
movsl
repz
lret
dec
rorl
fcom
add
push
inc
aad
mov
lds
in
dec
fcom
nop
test
and
aas
sahf
shlb
aad
cwtl
lcall
sti
in
ja
mov
mov
or
xorb
cmc
push
daa
add
scas
out
mov
popa
pop
stos
jo
mov
push
imul
into
push
and
mov
ljmp
jp
cmp
mov
cli
fldenv
in
imul
xchg
xor
adc
cmp
stc
mov
mov
pop
cmc
xor
fisttpll
pusha
add
inc
mov
adc
dec
divb
addr16
sti
xchg
mov
rep
out
scas
adc
and
iret
or
inc
push
scas
insb
orl
xchg
add
insb
sbbb
sbb
jnp
xor
push
enter
ss
pop
das
ficompl
out
cmpsl
pusha
pop
mov
pop
arpl
and
pop
repnz
test
ret
push
inc
out
ret
gs
jg
or
pshufw
xor
pop
ds
push
push
sbb
ror
outsb
les
jne
shrl
cmp
inc
icebp
pop
push
int
xchg
cmp
mov
pop
cmp
push
xor
insl
jmp
lahf
dec
jmp
test
test
sub
scas
jns
add
or
das
loope
and
in
xchg
cwtl
test
mov
push
xchg
mov
and
jmp
sub
outsb
xor
test
cmc
je
or
mov
in
pushf
add
lahf
imul
test
mov
fistps
roll
xor
cmp
mov
mov
clc
aam
adc
mulb
rcl
mov
push
jae
imul
faddl
push
inc
xchg
xchg
and
or
adc
les
mov
roll
xchg
icebp
pop
enter
xor
jg
pop
cmp
or
cmp
dec
sub
inc
nop
dec
sbb
pop
shrb
pop
loop
aas
arpl
popf
cwtl
iret
sahf
mov
mov
mov
dec
sub
sarb
cmp
inc
loopne
lods
sub
and
mov
push
sbb
addr16
push
outsl
jno
mov
das
adcl
cli
das
fsubs
push
test
mov
enter
xchg
xchg
mov
adc
mov
sbb
mov
insb
cmp
pop
and
das
andb
lahf
in
mov
and
jmp
xlat
add
jmp
mov
sti
gs
or
push
mov
mov
mov
daa
pusha
jnp
jl
pop
mov
push
xchg
push
pop
inc
or
fistpl
fwait
in
aad
std
repnz
jae
adc
fistps
add
cwtl
push
test
inc
adc
into
mov
lret
cmpsl
sub
out
add
imul
rorb
xchg
mov
daa
xchg
aas
pop
cmp
mov
jno
aaa
jae
shll
rcrl
test
push
mov
fisubrl
ficomps
imul
sub
fists
sub
dec
xor
xor
lods
push
or
inc
jnp
and
rorl
adc
leave
dec
iret
loope
fistps
and
daa
sbb
stc
fdivrs
pop
push
jae
xor
pop
jae
mov
xlat
lahf
mov
repz
decl
sbb
sti
std
or
pop
jl
sbb
push
or
push
movsb
ja
daa
mov
push
mov
mov
add
in
xchg
imul
lahf
int
inc
fldt
inc
shrl
pop
mov
test
roll
gs
ljmp
nop
fldenv
ret
inc
dec
ljmp
pop
xchg
ljmp
or
push
push
adc
fs
pop
fdivl
push
ss
inc
pushf
jo
outsb
push
inc
cmp
xchg
cs
repnz
or
pusha
mov
jmp
jno
mov
sbb
and
outsl
fidivrl
icebp
mov
cmp
mov
inc
fcmovu
out
inc
push
in
jbe
popa
fistl
in
add
pop
add
mov
lods
push
insl
arpl
push
or
ret
cmp
outsb
mov
mov
pop
mov
call
lahf
mov
mov
out
loope
nop
push
fsts
int3
push
outsb
push
aam
outsl
fdivrs
ja
fwait
xor
adc
jmp
cwtl
sarb
sub
jae
gs
test
roll
cwtl
mov
and
cmp
movsl
loop
cli
dec
push
adc
call
and
mov
mov
adc
iret
adc
mov
pop
outsb
adc
push
outsl
sbb
mov
ror
dec
ss
mov
popa
and
sbb
push
lgs
cmpsb
dec
leave
cmpb
fisubl
fildl
fists
or
mov
mov
arpl
adc
jae
and
push
in
adc
cld
cmc
std
int3
sub
ror
mov
push
adc
pop
inc
xchg
cmpsb
pop
xchg
jl
aas
xchg
sbb
mov
add
push
xor
insl
jbe
xor
les
outsl
fnsave
jmp
test
pop
std
pop
fldcw
dec
mov
lret
mov
xor
enter
shlb
aas
inc
cs
xchg
iret
ja
movsl
mov
dec
imul
js
dec
jge
shll
rcrb
push
fs
and
sbb
push
xor
dec
xor
aas
inc
sub
cmp
xor
or
inc
mov
sbb
dec
scas
ret
popl
sbb
jo
push
sub
jp
stos
hlt
lahf
frstor
xor
push
cli
mov
loop
jmp
dec
loop
pop
outsl
aas
pop
dec
div
jns
fbld
sbbb
xchg
out
aaa
pop
lahf
jae
je
movsb
dec
mov
sub
adc
mov
pop
adc
sbb
lahf
push
xor
fwait
out
pop
push
addr16
addl
and
push
aam
inc
jge
ret
out
daa
test
fs
lods
jp
dec
adc
push
daa
add
cmpsl
dec
sub
lret
addb
sbb
divb
gs
mov
mov
cmp
nop
xchg
xchg
add
sub
push
mov
push
add
and
scas
inc
insl
xor
or
rcr
dec
pop
divl
inc
mov
divl
xor
or
ljmp
std
sbb
mov
sbb
cmp
stc
pop
adc
add
cmp
fucomi
push
out
mov
popa
jle
and
xlat
movsl
xchg
movsb
jmp
push
xor
daa
ljmp
in
imulb
pop
xchg
mov
adc
push
int
lock
push
lods
cltd
out
jb
jl
xlat
xchg
es
jns
mov
dec
add
push
adc
pop
xchg
sbb
adc
and
pop
leave
pop
adcl
mov
mov
adc
in
push
xchg
gs
add
data16
cmp
bound
negb
addr16
fs
jmp
bound
call
js
add
cmc
push
orl
gs
lahf
xor
fisttpl
shl
push
dec
pop
aas
xorb
jne
mov
adcb
aas
adc
scas
jl
orb
icebp
jae
in
scas
cmp
jl
mov
fmull
mov
mov
dec
ror
dec
bndldx
jl
out
cwtl
pop
out
and
pop
fsubrl
pop
shl
cmp
and
mov
shll
ss
jle
pop
lahf
push
subb
adc
xorb
sahf
pusha
rcll
pop
daa
mov
test
sub
int
frstor
xchg
mov
jnp
dec
movsl
outsl
or
call
pop
mov
push
jo
xor
mov
jge
xchg
xor
ljmp
inc
mov
push
clc
xchg
aaa
mov
mov
cli
cmp
mov
push
add
mov
sbb
jne
push
pop
aad
lret
out
push
inc
rclb
pop
push
jg
repnz
push
popa
jns
inc
jae
test
sbb
sbb
sbbb
lret
sbb
dec
cmp
pop
cld
cltd
sbb
lahf
sub
add
mov
sub
clc
pop
fisubrl
and
mov
out
or
xchg
mov
out
mov
dec
jo
in
mov
pop
outsb
out
pusha
dec
inc
scas
lods
cmpsl
push
cmpsb
pop
cld
in
dec
fwait
push
xchg
sub
inc
xor
push
mov
imul
push
call
imul
arpl
addr16
mov
jecxz
ret
icebp
enter
stos
mov
push
cld
in
jmp
fcomi
sbb
lea
mov
int
and
add
adc
mov
cli
cmp
out
scas
jno
fcompl
js
cmp
dec
mov
mov
fmull
pop
movsl
pop
lahf
cmpsl
int3
inc
insb
dec
cmpsb
adc
daa
fcompl
mov
repnz
fcoml
movsl
pop
out
ficoml
repnz
inc
arpl
cmp
fistps
add
pop
test
pop
addr16
out
lahf
mov
out
mov
sub
adc
cmp
call
fs
and
fistpll
popa
fsqrt
sar
sub
les
dec
ret
cs
pop
xchg
cmp
or
test
lods
and
jo
addr16
sub
push
ret
push
inc
in
lret
mov
jo
push
pop
dec
iret
xorl
push
xor
stc
pop
xchg
xor
in
lahf
call
cli
cld
imul
lcall
sbb
fwait
xor
fldt
ja
insb
mov
popf
lds
jno
lret
loop
cmp
push
xor
xchg
shll
lea
xor
hlt
lds
decb
xor
inc
jg
adc
push
clc
pop
adc
jno
aad
ret
mov
mov
scas
int
cmp
sub
push
inc
clc
aas
or
js,pt
addr16
mov
in
shl
mov
cmp
jp
icebp
cmp
stos
sbb
out
xor
out
sub
je
cmp
cltd
sbbl
inc
or
jle,pt
je
mov
fwait
sar
or
add
arpl
mov
gs
jg
sti
addr16
adc
outsb
jmp
outsl
nop
and
sbb
movsl
adc
int
mov
push
andb
mov
jecxz
mov
sbb
xchg
leave
adc
xor
mov
and
xchg
cmp
mov
cmpsl
shll
xchg
mov
push
push
jnp
jg
mov
push
shrb
es
push
int
push
iret
fdivr
outsl
iret
push
fidivrl
jno
lahf
xchg
cltd
pushf
adc
or
cmp
mov
jle
mov
push
arpl
push
mov
add
aad
adc
add
xor
leave
rep
add
or
test
fisttpll
inc
inc
test
xchg
fldl
xor
or
mov
or
mov
out
xchg
imul
cltd
ret
push
add
mov
xor
push
pushf
negl
inc
jne
lret
mov
xchg
jg
jge
push
pop
dec
inc
inc
pop
inc
stos
cwtl
inc
mov
clc
lock
push
loop
add
pop
lods
cmp
jmp
aam
sub
mov
shrb
mov
xchg
insb
mov
add
mov
cwtl
popa
add
xor
mov
pop
lea
mov
jl
dec
mov
rcrb
or
xor
pop
mov
in
mov
pop
jl
dec
jp
cmp
push
cmpsl
daa
cli
xchg
xorl
gs
ds
and
rclb
jns
cwtl
sarb
jnp
xchg
clc
adcb
inc
ret
dec
sub
pop
dec
daa
dec
sbb
cmpsb
push
and
movsb
push
cltd
enter
sub
stos
push
fdivl
mov
stc
cmp
dec
push
scas
mov
xor
ljmp
and
fcomps
mov
bound
test
aas
add
or
pop
ret
test
jp
or
cs
movsb
iret
cmc
cmp
dec
xchg
dec
mov
loopne
outsb
out
rcll
dec
jp
rclb
pop
movl
mov
and
cmp
jb
fcomi
daa
lahf
icebp
ds
out
scas
xchg
xchg
pusha
and
mov
call
cmp
sbb
jle
shlb
sbb
ljmp
lcall
mov
rolb
mov
adc
test
fisubrl
lahf
movsb
xchg
in
mov
imul
das
ret
test
loop
fsave
add
xchg
int3
iret
lods
pop
xor
arpl
push
pop
sbb
push
push
psubusb
mov
push
in
clc
or
insb
xor
cmp
xlat
lods
dec
stc
fmull
and
add
cwtl
dec
jns
jp
out
lods
nop
sub
and
mov
pop
iret
in
push
frndint
xchg
push
push
push
sub
add
jne
pop
xor
insl
sar
adc
cmp
and
jbe
mov
dec
push
arpl
sub
dec
push
mov
jns
mov
dec
aas
mov
or
repnz
mov
lret
xor
inc
frstor
adc
ret
mov
push
test
cmp
movsl
xchg
mov
pushf
or
or
or
lret
arpl
add
sub
and
fs
in
add
das
movsl
outsb
cmpsb
jne
scas
pop
incb
pushf
faddp
mov
xchg
popf
stc
bound
push
insb
test
dec
out
jmp
mov
insl
sub
stos
sti
xchg
and
jnp
mov
loope
xchg
lods
ljmp
and
icebp
xchg
sbb
loopne
cs
sub
xlat
scas
and
inc
imul
into
sti
jp
addl
xor
jnp
adcl
stos
sub
jmp
and
insl
pushf
and
or
mov
pop
cld
add
jp
mov
hlt
add
loopne
jnp
lock
cs
or
jmp
mov
stc
xchg
xchg
out
pushf
mov
pop
jge
lds
int
arpl
push
loope
xchg
pop
mov
mov
mov
cs
shlb
cld
shl
daa
pop
push
in
push
gs
dec
cwtl
jae
stos
add
call
jae
add
or
adc
xor
adc
call
jno
or
xlat
push
xchg
loop
adc
pop
push
mov
sbb
and
in
push
cmp
lods
mov
aam
and
jle
xchg
js
lds
ret
sub
gs
push
jb
and
xchg
sub
inc
add
xchg
sub
cld
xchg
fidivrs
mov
xchg
pop
fdivs
aas
cs
cmp
js
ret
repnz
mov
dec
aaa
jecxz
addl
popa
sbb
movhps
fiadds
daa
int3
push
cltd
cmp
xor
std
clc
fsts
mov
jo
es
outsl
call
rcrl
push
neg
dec
sbb
dec
mov
adcb
dec
mov
fsubl
mov
dec
push
in
push
subl
xchg
int3
idivl
dec
adc
imul
leave
xchg
mov
jp
mov
int
push
jnp
mov
call
icebp
add
push
xchg
out
fcmovb
add
xchg
in
imul
xchg
cmp
inc
pop
int3
pop
dec
mov
push
push
inc
xor
mov
mov
adc
adc
sbb
test
dec
mov
lods
xchg
and
xchg
cmp
dec
lods
mov
fistpl
repz
pop
dec
sbb
xor
int3
sub
xchg
mov
sahf
in
and
or
sbb
aaa
data16
push
pop
aas
or
sbb
loope
outsb
and
in
aad
insb
movsb
ja
inc
mov
sti
push
cmp
loop
and
sub
xorl
imul
cmpsb
nop
add
int3
icebp
popa
insl
xor
or
mov
sbb
call
cmpsl
sarb
sub
fisubl
pop
ret
jne
cld
in
mov
push
scas
int
push
fldt
repnz
mov
sub
cs
adc
mov
or
scas
jp
xchg
mov
ljmp
out
fildl
das
cltd
pop
mov
test
jg
jecxz
in
dec
das
inc
sbb
lret
mov
xor
subl
lods
scas
scas
dec
inc
xor
cmp
movsb
in
xchg
cmc
or
cmp
fdivs
and
push
sbbl
sub
xor
add
adc
ja
push
cltd
test
mov
sbb
out
inc
movl
push
jecxz
ret
sub
or
cltd
cwtl
ret
cld
std
xlat
jle
sbb
xchg
sub
push
mov
es
int
cmp
jge
mov
shll
push
jmp
pop
out
test
call
inc
int3
ss
or
inc
outsl
mov
ja
push
pop
insb
mov
push
repnz
shl
pop
ret
ret
jne
jmp
dec
movsl
pop
xchg
xchg
fisubrl
mov
or
pop
in
pusha
dec
jle
mov
stos
lahf
out
adc
in
xchg
in
arpl
xchg
sbb
enter
cmpsb
cli
nop
cmpsl
adc
imul
inc
ret
test
adc
punpckhdq
sub
inc
xchg
bound
mov
mov
aad
mov
in
push
mov
mov
sarb
sbb
xchg
adc
fs
jecxz
nop
and
std
mov
cmp
loop
add
and
scas
shl
pop
lret
clc
xchg
mov
xchg
pop
xchg
jg
sub
sbb
xchg
sub
popa
loopne
leave
push
cmp
test
aad
sbbl
jecxz
movsb
sbb
pop
jnp
dec
in
ds
pop
and
sti
lea
cmp
mov
pop
jecxz
stc
jnp
sti
bndstx
xor
jb
xor
cltd
and
ljmp
or
or
pusha
add
pop
in
rcrl
mov
cmpsb
arpl
lcall
fmul
mov
and
mov
mov
mov
pop
add
gs
or
dec
inc
cwtl
cmp
mov
mov
sub
inc
sub
inc
mov
jg
sbb
jnp
xchg
jae
repnz
int
lahf
sub
fnstcw
xchg
sub
push
inc
xchg
stc
loopne
div
mov
xor
and
lcall
jmp
fs
sbb
fsubs
jne,pn
dec
jp
pushf
mov
push
dec
ret
push
or
lods
push
cmp
in
xor
xchg
jbe
mov
push
leave
stc
adc
das
dec
shll
test
fbld
inc
add
sbb
clc
xor
lds
push
sbb
inc
cmc
jo
pop
cmp
lret
adc
cmp
aas
sbb
stc
pushf
fisttpl
sub
addb
dec
and
in
aam
loope
sti
mov
call
rclb
sbb
cld
ficoml
adc
stc
bound
imul
test
jg
push
clc
insb
insb
orb
push
insb
push
scas
mov
inc
xchg
xor
xchg
sbbb
mov
cli
cli
sbb
jl
inc
movl
jbe
lods
xor
jnp
sbb
aam
icebp
neg
pop
jg
ljmp
ljmp
xlat
sbb
imul
xor
lahf
fs
popf
jb
or
jns
jp
pop
xchg
outsb
mov
call
mov
movsl
ret
sbb
stos
outsb
jb
ja
sbb
call
cmc
pushf
js
call
shl
fidivl
pop
adcl
lock
and
lods
or
lods
shll
push
or
test
loop
mov
in
or
pop
sbb
cmpsb
push
mov
sbb
call
adc
call
pop
loop
sub
fsin
repz
popa
loopne
imul
push
in
sti
call
mov
orl
push
mov
sub
push
inc
pop
stc
in
into
jmp
cmp
movsl
xchg
or
idivb
int3
or
test
add
mov
xchg
jnp
sti
bound
popf
add
and
fisttpll
adc
dec
sbb
movsl
mov
insb
xor
push
or
test
mov
outsb
dec
mov
mov
test
inc
hlt
or
pop
push
mov
subb
cwtl
int
out
cs
dec
out
nop
sbb
test
sub
add
cmp
push
adc
xor
outsl
rol
jmp
out
inc
cwtl
xchg
push
inc
cmp
js
push
repz
out
cmc
jnp
cmp
imul
mov
xor
cmpsb
or
mov
mov
repz
mov
xchg
push
outsl
dec
fists
fisttpll
outsl
adc
xor
dec
lock
inc
minps
leave
pop
in
insl
and
stos
jle
add
hlt
sbb
fsubr
push
jle
inc
insl
stos
stos
dec
loope
fcmove
add
push
addr16
push
in
jp
inc
mov
and
push
mov
mov
mov
ja
in
fisubrl
stos
out
or
cmpsl
push
repnz
cmp
mov
cmpsl
pushf
mov
out
jl
fildl
ret
lock
inc
inc
ds
bound
inc
jmp
mov
ja
xchg
jae
imul
ficoml
cmp
mov
xchg
movsl
inc
loopne
fsubr
cld
or
add
mov
jns
mov
subl
sub
out
mov
xchg
add
add
mov
lret
xchg
fdivrs
test
xchg
mov
dec
adc
jbe
cli
fsubs
loop
mov
fwait
xor
cmc
jno
jbe
and
popa
in
cmpsl
xor
mov
pop
sbb
aad
insb
jecxz
test
rclb
inc
cmp
test
jb
imul
fbld
dec
cmp
inc
sub
inc
int
rclb
adc
push
sahf
and
mov
xchg
call
cmp
sub
inc
into
out
insl
cs
loop
and
ds
sub
adc
nop
mov
sbb
jmp
lods
push
or
pop
inc
xchg
aaa
add
jle
lret
add
clc
xchg
xor
mov
add
add
insl
clc
push
mov
push
out
stc
scas
jge
ret
mov
or
and
pop
fildl
adc
dec
in
je
sti
aam
mov
and
mov
inc
pop
pop
dec
xchg
setle
jmp
sahf
mov
flds
sbb
sti
andb
adc
leave
push
fs
xor
and
je
stc
cmpxchg
pop
or
sbb
xchg
mov
out
das
fwait
adc
mov
sbb
dec
fidivl
stc
ret
scas
xor
push
shll
popf
dec
shl
aad
insb
test
jbe
and
or
mov
xchg
sbb
mov
addl
or
inc
or
add
sbb
jae
add
push
ret
ret
popa
stos
sahf
mov
mov
test
xor
adc
loope
icebp
pop
les
mov
inc
pop
sahf
ret
mov
bound
and
jnp
into
test
push
and
int3
mov
mov
jmp
pusha
jae
jp
call
and
jecxz
mov
mov
add
or
adc
je
sbb
dec
mov
xchg
and
leave
dec
inc
jns
decb
jecxz
movsb
jmp
js
cmpl
push
lcall
xchg
sarb
sti
or
inc
push
dec
lock
jbe
cltd
enter
addr16
fwait
push
insb
inc
dec
scas
std
mov
or
test
stos
jns
sbb
mov
mov
pop
xor
cmp
ds
jb
pop
sbb
outsl
inc
lret
enter
sub
dec
pop
lahf
and
aad
mov
cltd
mov
sbb
sbb
xlat
rcrb
es
mov
das
jb
sub
dec
mov
sarb
cmp
pop
out
subb
mov
push
jb
mov
mov
fcmovnb
push
insb
ds
xchg
ljmp
mov
pop
jbe
mov
outsb
pop
xchg
sbb
xchg
ss
cmpsl
jb
sbb
sbb
mov
std
add
pop
jle
push
mov
test
ds
jmp
mov
mov
xlat
mov
mov
ja
shrl
loop
in
xchg
push
push
xor
testl
stos
lcall
repnz
dec
jmp
push
pop
rcr
mov
pop
jo
mov
nop
push
imul
sbb
scas
mov
cmpsb
les
call
test
loop
and
daa
cmp
pop
ret
data16
pop
fs
xor
inc
insb
push
inc
vpcmpeqb
cmp
movsb
cmp
xchg
jle
addl
fmull
ja
ret
test
lock
ds
and
jl
ret
xchg
call
dec
scas
adc
mov
or
adc
jnp
and
or
test
xlat
dec
push
mov
xlat
outsl
sub
in
imul
jno
inc
adc
mov
fucomip
mov
mov
aam
imul
adc
cli
sub
in
pusha
pushf
fmulp
subl
jbe
inc
sbb
xor
jo
xlat
fcompl
roll
loop
xchg
push
int
mov
into
jp
push
mov
bnd
adc
movsl
and
jge
pop
adc
xchg
in
je
jbe
adc
nop
sbb
push
addb
cmpsb
or
les
mov
adcb
addr16
cmc
mov
and
adc
push
mov
mov
cmp
dec
xchg
inc
cltd
sarl
or
adc
jo
rcll
subb
mov
ss
xor
in
inc
lock
rclb
movsl
jne
adc
or
ljmp
sbb
scas
shll
xchg
sub
std
inc
lahf
inc
sub
fdivrs
aaa
mov
in
mov
or
fisubs
stc
xchg
jno
cmpsb
dec
ja
cld
adc
xor
xchg
mov
data16
std
jl
outsl
es
jnp
add
int3
jge
mov
inc
out
subb
xchg
inc
ljmp
shr
mov
mov
push
int
lret
jmp
jno
lds
aad
fnstenv
xor
clc
mov
adc
jle
cwtl
xlat
mov
xor
ret
or
test
dec
loopne
and
in
mov
lods
aam
std
dec
sbb
les
mov
mov
shll
mov
in
jp
es
shrl
adc
push
aaa
jg
dec
pushf
xchg
sarl
es
push
mov
inc
mov
mov
insb
jmp
fimull
jge
movsl
adc
out
pop
call
sbb
pop
mov
aaa
add
fwait
pop
loop
mov
xchg
arpl
test
shl
sub
ds
mov
jbe
in
out
mov
and
dec
and
lock
dec
and
xor
add
sub
mov
cmp
loopne
cltd
cmp
in
cld
push
cmp
jns
ret
out
xchg
shrb
jbe
jae
dec
mov
daa
jmp
int3
std
xchg
or
pushf
sti
arpl
movsb
mov
sbb
inc
jae
arpl
jne
cmpsl
std
mov
adc
fsubl
fcomip
add
pop
xor
mov
dec
lock
ret
sbb
mov
sbb
mov
gs
push
mov
shll
and
and
repz
stos
inc
and
pmullw
jp
popa
push
push
cmpsb
pop
xchg
cmc
jae,pn
mov
sub
mov
xchg
lcall
fs
adc
mov
jmp
pop
mov
jle
xchg
inc
cmpb
je
js
sbb
enter
xor
mov
mov
xor
and
pop
mov
leave
out
ds
xor
stos
push
shlb
adc
xor
adc
xchg
jmp
sub
push
cwtl
push
enter
test
cld
cld
mov
cmp
aad
adc
stc
xlat
jo
stos
nop
mov
mov
pop
adc
mov
loope
movl
hlt
pop
jno
sbb
push
inc
daa
mov
mov
out
shll
sbbb
pop
mov
arpl
lret
mov
push
fisttpll
setb
sub
mov
adc
pop
mov
push
mov
push
iret
push
jg
add
es
in
inc
cmpsb
mov
jbe
pop
mov
mov
xchg
cld
mov
add
sub
and
push
mov
imul
adc
adc
je
xchg
mov
pop
movsb
jecxz
add
addr16
sar
rorb
scas
sub
out
fdivl
into
js
mov
jns
enter
js
jg
sbb
dec
out
push
roll
lock
test
jo
inc
imul
ss
loope
and
js
outsl
fisubrl
call
cli
cmp
pop
and
add
and
and
push
std
jl
mov
out
cld
pop
push
cltd
mov
cmp
lods
mov
cmp
push
out
or
pop
stos
jge
int
pop
les
mov
shll
movb
mov
mov
xor
outsb
and
xor
inc
xor
cld
xchg
xor
xor
bound
addr16
push
int
incb
neg
sar
loopne
fldenv
test
dec
repnz
lcall
aam
iret
jne
repz
jne
loope
mov
and
mov
or
inc
out
cmc
xor
jg
inc
adc
in
push
sbb
xor
std
jge
sbb
jecxz
mov
mov
dec
mov
jo
adc
ret
jl
es
repz
iret
add
xchg
inc
orl
adc
and
pop
fbstp
call
xchg
cmpsl
dec
das
out
xlat
mov
rolb
decl
rcr
nop
mov
lret
scas
push
aad
push
out
jp
xchg
xchg
subb
out
push
addr16
addr16
cmp
ret
insl
rcr
mov
lret
lea
hlt
xchg
add
add
mov
les
fs
and
push
loopne
mov
inc
cmp
dec
js
fcomps
aas
ffree
outsl
mov
xchg
inc
mov
cmp
push
lret
jg
imul
es
scas
pushf
jbe
jb
xchg
sub
dec
sub
fildll
in
adc
mov
adc
sbb
dec
xlat
dec
int3
inc
subb
insl
fbld
loop
mov
mov
mov
scas
mov
pusha
stc
mov
aaa
shrl
lahf
fldl
inc
inc
popf
jno
notl
aam
outsb
jg
bound
addr16
fwait
in
cld
xchg
movsl
out
cmp
jecxz
sub
xlat
inc
push
clc
mov
mov
lret
cli
shrb
enter
cmp
sarb
aas
adc
leave
mulps
scas
test
aam
movsb
and
dec
xchg
mov
cld
adc
test
push
stos
dec
mov
inc
into
push
into
xor
xor
daa
mov
test
ja
les
arpl
fdivrs
notl
insl
mov
or
test
xlat
out
fistps
sbb
mov
push
out
adc
cmp
lahf
clc
icebp
and
lahf
pop
ja
cld
adcb
iret
cmp
dec
sbb
xchg
push
jmp
inc
stos
les
mov
in
push
jecxz
hlt
lahf
ficompl
fdivl
mov
inc
fstp
or
sti
or
filds
insl
or
out
push
pop
push
aam
shll
imul
mov
rcrl
pop
mov
popa
cmpsl
jno
adc
xchg
sbb
lret
dec
out
test
popa
xchg
inc
pop
js
dec
sub
mov
push
adc
movl
adc
hlt
mov
pop
ljmp
shl
and
add
add
or
in
inc
arpl
sbbb
cld
jns
popf
cld
or
add
dec
inc
xchg
xchg
inc
xor
push
mov
test
add
add
or
mov
imul
outsb
pop
daa
cmc
sti
mov
xchg
mov
int
cld
fisttpl
in
dec
mov
je
push
lods
out
xor
les
out
xchg
sbb
jns
push
out
lock
jl
dec
mov
subps
jbe
nop
and
icebp
xchg
les
jne
sub
or
mov
insb
fdivrl
jo
mov
xor
xor
stos
push
push
push
fsubs
and
fidivs
add
xor
pop
cmp
mov
add
test
pop
xchg
mov
iret
mov
in
cmp
out
std
add
add
mov
inc
sahf
mov
adc
jmp
xchg
jecxz
pop
push
jmp
daa
imul
aaa
lds
in
pushf
sbb
lahf
enter
mov
in
xchg
lock
inc
popa
pop
cmpsl
cld
dec
push
or
into
mov
pop
rol
and
sub
ror
xor
push
jle
mov
outsb
sbb
jbe
in
and
jno
in
or
jbe
jnp
fxch
jne
mov
jmp
clc
mov
out
fucomi
outsl
sbb
inc
cwtl
int3
push
insl
shlb
test
mov
bnd
mov
sub
jge
jb
andl
inc
sub
mov
pop
dec
xor
cmp
shl
popa
adc
repnz
or
rolb
popf
cmp
in
mov
out
sbb
jo
adc
lahf
mov
cmp
mov
aam
out
cltd
push
loopne
sub
clc
push
pop
out
xchg
push
test
sub
and
cli
ret
xor
into
sbb
sbb
popa
and
sahf
fstpl
pop
shl
repz
loop
cmp
jp
mov
iret
xchg
notb
inc
out
hlt
jge
pop
jnp
jno
lock
std
fwait
aas
or
dec
adc
idivl
lock
cmp
mov
sti
dec
pop
jecxz
es
cs
sbb
pop
icebp
cmp
push
mov
lods
xchg
leave
push
psllq
mov
loope
sbb
dec
aad
movsb
in
cmp
pop
add
fwait
lods
sbb
push
mov
sbb
lret
leave
push
fisubl
repz
xor
xor
inc
jge
mov
ja
mov
mov
pop
das
sub
test
or
lods
pusha
pop
mov
lret
push
lcall
cmp
hlt
pop
add
jbe
jmp
sarb
cwtl
mov
icebp
jb
lret
or
lret
jno
xor
xor
xchg
inc
clc
mov
daa
cmp
inc
xor
push
ss
lods
in
pusha
xor
sbb
mov
xor
mov
or
pop
clc
loop
xor
xchg
sbb
clc
int
insb
mov
ss
sarl
mov
push
push
insb
mov
arpl
daa
mov
and
pop
xchg
rcll
sbb
xchg
pop
lret
xor
arpl
fiadds
gs
add
test
mov
jno
insb
into
xchg
mov
cmc
pop
sahf
xor
sbb
inc
mov
addb
push
popf
push
mov
xor
pop
popa
gs
fidivl
aaa
aad
and
push
xor
out
fidivl
sbb
imul
ret
push
notl
cmp
jae
stos
dec
xchg
sub
xchg
mov
ljmp
in
lods
xor
into
sbb
sbb
movsl
test
or
andl
sarb
push
lock
and
or
or
adc
fsts
mov
mov
adc
push
add
jg
insb
insb
push
push
cmp
cmp
movsb
push
out
push
rclb
shrb
dec
push
adc
les
nop
push
xchg
adc
pop
fwait
pop
mov
sub
mov
imul
jae
push
int
mov
push
cmp
and
enter
sbb
push
test
pushf
push
lret
mov
lock
mov
jne
and
mov
and
subl
pop
lret
sub
scas
std
cld
push
add
fcompl
call
sbb
sub
sbb
aaa
fcmovnb
pushf
in
imul
out
sbb
mov
cmpb
and
lods
ja
mov
imul
cmp
jae
adc
loope
ficoml
mov
sub
cmp
sbb
pop
ficompl
decl
cwtl
rcrl
add
sbb
jae
or
lret
arpl
sahf
rcrl
out
fldpi
jns
dec
das
inc
push
fwait
and
outsl
outsl
lcall
cwtl
int3
jmp
mov
sahf
notb
ds
cmc
sub
cs
dec
jg
add
jne
adc
es
xor
cmp
mov
sahf
xlat
jo
repz
pop
pusha
push
fdivs
push
xchg
xchg
movsl
inc
mov
cmpsl
add
rcrl
inc
pop
mov
push
and
pop
xchg
xchg
xchg
repnz
xor
scas
cmp
sbb
mov
cmp
dec
jnp
dec
das
loope
mov
mov
test
jmp
add
in
popa
out
paddb
xchg
shrl
inc
insb
lret
mov
aaa
mov
lods
movsb
mov
inc
inc
aas
sub
push
aas
inc
or
dec
enter
jne
xchg
jg
dec
imul
dec
out
dec
cmp
dec
mov
xlat
stos
mov
mov
popf
jmp
cmp
pop
addr16
xor
fsubrl
adc
push
xchg
xor
and
daa
es
add
repz
push
repnz
mov
xor
jl
sub
and
loope,pt
adc
xchg
insl
inc
adc
xlat
or
lods
adc
mov
xchg
xor
sbb
test
inc
or
mov
xchg
aas
jne
push
xor
push
xchg
fistps
loope
xor
push
movsb
cs
scas
xor
popf
clc
add
imul
mov
sub
jne
leave
hlt
repnz
cltd
jnp
rcr
push
pushf
or
jns
xchg
jp
scas
je
cli
scas
xchg
gs
test
push
out
jle
rorb
jns
mov
cmp
popf
xchg
mov
in
mov
cld
xchg
jmp
add
out
or
or
mov
cmp
sbb
leave
aas
push
adc
xchg
int3
aad
push
imul
cmpsb
xchg
shl
mov
and
mov
scas
mov
leave
dec
imul
pop
cmp
hlt
lods
cmp
stos
mov
decb
jno
jae
push
sub
je
addr16
xor
inc
ficoms
pop
ret
sti
mov
daa
popf
push
dec
push
sbb
xchg
test
adc
pop
cs
insb
repz
cmp
pop
jg
hlt
rorl
jo
jecxz
aaa
inc
push
push
nop
aas
and
pop
sub
jbe
pop
and
pusha
xchg
sbb
adc
cltd
sub
divl
imul
xchg
mov
xlat
xchg
cltd
and
cmp
adcb
out
aas
sbb
cmpl
sub
scas
or
and
stos
int
mov
push
cmpb
clc
lret
xchg
jne
sbb
and
lahf
arpl
mov
call
cld
mov
ror
push
or
xchg
and
sub
inc
lods
jo
lds
in
xchg
imul
out
ljmp
aas
in
jp
push
cwtl
repnz
add
in
jae
in
add
fwait
in
pop
je
jge
sbb
mov
or
aam
mov
out
ja
pop
push
jecxz
mov
add
mov
push
hlt
push
iret
imulb
je
aaa
ret
jle
jp
xchg
cmc
mov
dec
mov
jmp
cmp
sbb
cld
jle,pn
pop
xchg
adc
inc
movsl
inc
cmp
and
scas
in
jo
jp
into
sbb
outsb
mov
in
push
dec
and
rcl
lods
into
into
inc
cmp
out
cld
push
idivl
mov
adc
clc
pop
inc
cmpsl
mov
movsl
jbe
int
stc
inc
or
jl
enter
call
ret
rcrb
jmp
mov
out
mov
rcrb
dec
shll
nop
test
enter
xchg
mulb
mov
inc
leave
jecxz
push
and
repz
xchg
pop
inc
or
push
adc
pop
fwait
in
test
xchg
jnp
cmp
xlat
and
cmp
popa
add
pop
fcmovu
in
mov
loop
sbb
mov
inc
in
std
stc
xchg
xchg
mov
divb
ljmp
dec
pavgb
mov
cmpsb
fwait
addr16
push
mov
push
insb
mov
sti
clc
into
xor
lds
adc
mov
sub
mov
lock
jns
aam
and
lock
popa
jp
xor
cld
xlat
std
decb
xchg
ret
mov
and
cli
xor
xor
inc
into
add
gs
in
jnp
add
xor
sub
in
push
pushf
lds
adc
cltd
mov
pop
fstp
pusha
and
je
sti
test
pop
adc
sub
lods
and
pop
jno
mov
movsb
call
mov
shr
hlt
fildl
pop
fdivs
jle
cmp
pop
scas
mov
insb
jb
pusha
out
mov
test
int3
mov
sbb
loop
sub
cs
add
outsl
js
lods
scas
jge
inc
jbe
xor
arpl
ret
xchg
std
jo
mov
jbe
call
fdivs
push
adc
fcmovnb
jmp
mov
push
jg
and
imul
mov
push
xchg
out
mov
scas
out
push
loop
test
cld
inc
mov
mov
rclb
lods
rcrl
inc
inc
add
hlt
dec
rcl
inc
movsb
rorl
lds
dec
add
mov
xchg
jmp
lcall
or
inc
bound
movb
insl
orl
xchg
jg
inc
jne
jb
xchg
lds
sbb
notl
lret
les
mov
mov
ficoml
dec
repnz
icebp
imul
push
ljmp
sub
ljmp
inc
or
dec
mov
clc
sbb
xchg
cmp
jecxz
in
clc
lret
pushf
shufps
stos
iret
or
or
pop
jge
sbb
leave
bswap
fists
xchg
or
mov
or
aas
inc
add
out
jle
fisubs
and
pop
pop
and
jne
in
cwtl
push
xchg
cmp
cmp
mov
xchg
lcall
cmp
dec
das
pop
push
push
fwait
mov
or
add
push
jp
add
xlat
pop
sti
adc
std
adc
mov
adc
add
or
mov
test
mov
leave
dec
hlt
add
clc
pop
dec
out
mov
nop
aaa
add
arpl
sti
ds
loope
out
lret
popf
mov
inc
shrl
loopne
or
in
fnstsw
cmpsb
ret
hlt
in
ja
xor
test
mov
and
cwtl
push
inc
add
mov
int3
adc
add
in
xor
jns
sub
xor
jg
or
jle
sub
jb
or
int3
jp
movsl
push
into
repz
loop
push
jno
daa
push
ret
arpl
sbb
pop
mov
push
pushf
mov
lret
aas
cwtl
nop
sub
ret
iret
popf
xchg
or
cmp
mov
sbb
inc
xchg
add
cmc
stos
fcom
push
out
imul
jnp
les
loope
cmp
cmpsl
jle
imul
lret
out
cmpsb
xchg
jne
fnsave
push
daa
dec
adc
jp
mov
pop
mov
orb
into
xchg
fwait
test
mov
jno
mov
lock
js
pop
dec
inc
adc
jno
pushf
add
push
mov
sbb
sub
addr16
inc
adc
add
ret
add
arpl
and
nop
add
mov
inc
add
ljmp
ljmp
scas
les
rcrb
fs
fnstcw
add
fdivrl
clc
xchg
lods
js
call
pop
xchg
jae
push
fs
sbb
mov
mov
mov
add
push
lea
das
sub
cli
mov
movsl
pushf
xchg
inc
cmp
mov
inc
or
int3
insl
daa
out
test
jne
pop
int3
mov
orb
fistl
leave
or
imul
std
loop
shll
cld
jnp
pop
jb
loop
rcl
xchg
stos
adc
ss
jnp
push
jp
mov
hlt
addb
add
stos
lret
jmp
ds
adc
lcall
popa
insl
int3
mov
test
push
stos
jb
out
loop
sbb
lcall
and
dec
or
adc
pop
fsincos
fmull
xor
push
ljmp
push
scas
jl
xlat
fdivr
repz
repz
jl
mov
ja
jns
stos
add
jb
cmp
jb
cli
test
sahf
pop
sbb
dec
jno
movsb
fldenv
das
rolb
cmp
lods
in
xchg
fimull
jmp
cmp
xchg
push
sbbb
add
repz
int
inc
cmpsb
xor
or
test
adcb
popa
in
ds
adc
push
dec
repnz
xchg
sbb
mov
cmpsb
ret
lea
and
add
mov
pop
pop
rcrl
fucomp
dec
ret
sub
or
xor
cmpsb
jp
out
xor
nop
xchg
adcl
pop
rcrb
adc
jo
loopne
mov
mov
repnz
adc
sbb
pop
sbb
add
repnz
jnp
outsl
je
or
sub
sbb
jns
imul
in
mov
push
add
enter
mov
loop
in
loope
sbb
mov
shlb
xor
mov
xchg
insb
cwtl
imul
and
mov
out
xchg
add
std
jmp
jb
inc
push
pop
pop
mov
pop
mov
sub
pop
adc
sbb
dec
pop
push
cmpsb
xor
mov
sub
add
adc
test
jp
test
sahf
mov
mov
sar
std
mov
ss
mov
enter
or
xor
xor
rcr
imul
and
fiaddl
inc
aam
cld
pop
jle
fistl
push
dec
xchg
push
jmp
mov
rclb
lret
jo
push
adc
cmc
mov
pop
icebp
mov
sub
and
lock
mov
rclb
out
enter
js
mov
es
push
rcrl
dec
inc
adc
fmulp
mov
scas
pop
xchg
inc
ret
test
inc
adc
sub
dec
xor
push
jl
mov
mov
sbb
clc
jo
sbb
mov
jg
mov
jae
inc
aam
inc
xchg
clc
dec
mov
ja
xchg
fisubs
stos
mov
xchg
mov
add
cld
sbb
sub
aam
sahf
out
ret
sbb
fistps
lahf
mov
stos
pop
in
dec
mov
xor
jb
pop
scas
movsb
lock
es
cmp
outsb
pop
xchg
mov
xchg
into
out
shlb
xor
mov
mov
push
jae
xchg
imul
dec
test
sbb
add
cmp
cs
mov
mov
test
mov
icebp
dec
add
mov
loope
ljmp
mul
das
xlat
and
xor
cmp
push
sbb
clc
mov
jbe
mov
xchg
filds
jns
inc
fnstenv
lds
ds
mov
div
pushl
jg
mov
xchg
arpl
int
mov
pop
and
clc
mov
popa
add
adc
and
out
sbb
rclb
orl
loopne
nop
sub
jmp
dec
add
jno
mov
or
inc
das
enter
mov
mov
adc
cwtl
insb
sbb
mov
fsubrs
adc
or
imul
inc
jo
adc
insl
sub
add
lea
and
and
mov
jecxz
movsb
loope
repnz
hlt
sbb
adc
mov
lods
mov
mov
mov
in
aas
shlb
loop
adc
mov
xchg
jbe
sbb
push
pop
push
push
sub
jns
push
into
add
cmp
icebp
sub
and
mov
js
jbe
scas
jae
push
loopne
ret
test
cmp
add
imul
mov
int3
cld
dec
cmp
scas
nop
ret
adc
out
test
mov
pop
jo
jno
mov
loop
sbb
cwtl
sbb
test
arpl
fidivl
and
sbb
ja
out
mov
test
stos
in
mov
cmpsl
adc
loopne
mov
cld
es
adc
stc
test
and
inc
push
cmp
mov
movsl
int
ds
pushf
test
les
lahf
jo
pushf
imul
push
lea
leave
dec
int
cmp
cltd
push
sbb
mov
lds
sbb
jp
pop
jbe
mov
push
pop
adc
icebp
punpckhqdq
mov
mov
pushl
sub
xchg
mov
cltd
test
out
sub
inc
inc
inc
jmp
mov
repz
jmp
sbb
pop
or
mov
in
jno
rolb
nop
and
push
pop
jno
cmc
jecxz
and
sbb
insb
stc
pop
js
xor
push
mov
test
mov
movsl
xchg
inc
shll
mov
imul
mov
aaa
jg
or
jmp
push
int3
outsl
std
hlt
incb
pop
aaa
pop
mov
xchg
ljmp
dec
jae
rorl
xor
sub
lock
mov
ficomps
sbb
add
packuswb
rorb
add
mov
ja
push
inc
insb
call
not
push
mov
sti
jbe
call
pop
adc
or
pop
jle
in
add
lock
adc
inc
jnp
mov
pop
sbb
std
cmp
inc
xchg
mov
sub
push
sub
cmc
xchg
mov
add
jl
lods
pop
adc
repnz
icebp
dec
cmp
add
mov
push
mov
mov
push
ffreep
inc
insl
lret
cmp
in
sbb
xor
xchg
fcomps
pushf
adc
out
mov
jge
mov
dec
cwtl
jge
pop
add
out
dec
enter
pusha
pusha
js
mov
in
cmp
scas
std
mov
lcall
xor
adc
xor
push
adc
cli
sbb
mov
ret
inc
push
scas
pusha
loope
xor
out
or
pop
out
push
xchg
es
and
mov
gs
push
in
push
xchg
pop
das
lea
test
insb
mov
pop
mov
push
cmp
scas
push
es
add
insb
daa
mov
pop
add
and
cld
fdivrs
mov
jl
mov
cmp
ljmp
shr
push
push
repz
shl
jl
fistl
lods
xchg
movsb
xchg
add
or
mov
cltd
sbb
insb
dec
clc
aam
ljmp
xor
ret
ret
push
ja
aaa
popa
mov
cmpsl
xor
popaw
push
sbb
dec
pop
sbb
into
and
cmp
loope
mov
jns
jmp
push
and
call
arpl
cmpsl
or
mov
and
adc
jmp
push
xchg
stos
pop
and
or
or
cs
cmp
lret
shlb
mov
xor
pushf
aad
popf
cs
mov
dec
lods
scas
dec
mov
fidivs
movsb
aas
iret
or
jo
int3
cmc
orl
jo
scas
add
or
push
rorb
movsl
xchg
in
test
xor
mov
ret
dec
jp
lahf
roll
and
cli
and
pushf
mov
insb
jno
mov
xlat
xchg
push
fstpl
insl
push
mov
and
or
je
xor
lcall
std
xchg
scas
cmp
mov
jmp
addr16
dec
mov
add
ret
rcrb
fidivl
add
pop
cmpsb
cmp
pop
imul
fisubrs
rorb
sbb
dec
std
mov
rorb
mov
sbb
cmp
or
icebp
mov
xchg
or
jnp
outsl
adc
cwtl
and
daa
xor
ds
test
mov
test
sub
repnz
dec
mov
xor
cmpsb
insl
push
enter
jp
cmp
inc
xchg
and
sbb
rcl
pop
pop
loopne
ds
fsubl
mov
sarb
test
xchg
test
add
jg
cmc
aad
lahf
cmp
dec
sbb
imul
sti
icebp
pop
mov
movsl
sbb
lock
adc
outsl
push
outsb
sbb
sti
jno
ret
cmp
inc
rcrb
push
adc
test
pop
sarl
fcmovnu
jp
sbbl
sbb
dec
mov
imul
mov
jle
fs
cltd
push
cmpsl
dec
add
cmpsl
and
fcomp
cmpsb
es
mov
cwtl
xchg
xlat
jg
mov
shll
sub
cltd
jae
mov
xchg
stos
aam
or
xor
push
sub
stc
mov
and
out
and
addr16
add
push
pop
popf
fidivs
fsubrl
pop
leave
dec
int
cwtl
or
or
outsb
fwait
cmpb
push
mov
sub
outsb
xorb
insl
dec
outsl
or
dec
aad
mov
dec
add
jg
idivl
pop
dec
sub
adc
lahf
test
scas
mov
cltd
sbb
mov
addb
mov
cmp
shrb
ret
cmp
mov
mov
ja
ficomps
sub
adc
push
insb
xlat
mov
stc
das
mov
jo
cld
bound
lcall
jbe
ds
jne
pop
pusha
insl
sbb
iret
inc
xchg
frndint
pop
dec
dec
or
fimull
adc
xchg
inc
pusha
sbb
pop
rcll
adc
and
mov
sbb
out
sbb
inc
mov
and
mov
or
dec
lds
adc
jl
mov
pop
cmp
in
addb
adc
in
inc
cmp
aad
lahf
cli
sbb
popf
mov
jg
jp
sbb
nop
scas
inc
out
sbb
cmp
das
inc
sbbl
xchg
jg
outsl
xchg
testb
loopne
jl
ficoml
cmp
sahf
jne
ss
mov
mov
add
repnz
sbb
or
mov
out
xchg
arpl
cmp
daa
pop
fadd
dec
pop
clc
andb
xchg
or
dec
sar
fyl2x
sti
lods
mov
jp
ljmp
sub
sub
daa
stos
mov
pop
xor
mov
pop
or
xchg
xor
cwtl
call
negb
hlt
or
xchg
inc
imul
aad
push
push
jnp
or
sbb
in
or
stc
test
mov
push
iret
xchg
clc
push
or
test
push
jg
lcall
cmc
std
pop
pop
movlps
outsb
fcmovnb
xchg
mov
leave
dec
movsb
xor
xchg
aad
jae
xor
pop
inc
fisubl
mov
xchg
adc
add
push
jl
push
addl
enter
add
repz
xchg
scas
or
std
inc
imul
pop
push
jl
mov
sub
adc
xor
cmpsb
xchg
outsl
xchg
pop
and
mov
dec
cwtl
dec
sub
xor
in
out
xchg
push
dec
loop
arpl
mov
jae
mov
xlat
fcmovne
out
movsb
adc
repz
sub
or
cmpb
cmp
jge
rorb
xchg
pop
adc
push
push
rcrl
clc
ret
fxtract
push
and
xor
dec
push
xor
lock
inc
popf
jl
movsl
repnz
enter
xor
in
jp
int3
mov
mov
jo
cmpsl
sbb
mov
xchg
mov
fbstp
ret
jle
sbb
scas
xchg
in
test
dec
push
stos
xchg
cld
and
sbb
pop
mov
lods
iret
xor
or
jbe
leave
dec
adc
scas
or
rcrb
xor
jecxz
cmp
gs
jnp
and
test
cmp
inc
enter
xchg
dec
popf
adc
ds
ja
pop
imul
imul
lods
xchg
addb
insl
aad
push
lret
fbstp
dec
dec
cmp
insb
test
adcl
in
imul
negb
das
xchg
or
rclb
xchg
sub
mov
xor
xor
mov
sbb
mov
inc
les
sbb
das
rcrl
test
cwtl
shl
lahf
or
daa
lea
insl
das
sbbb
ja
xchg
push
or
cli
fnsave
in
or
add
cs
sub
mov
sub
and
lods
or
jp
push
sbb
les
je
adc
iret
ret
and
addr16
addr16
cmp
sbb
ja
repz
inc
push
fistl
ret
fmull
inc
inc
sub
adc
out
imul
int
arpl
jg
sub
ljmp
inc
jl
xlat
push
mov
fdivrs
cmp
shlb
and
lds
je
dec
dec
and
xorb
adc
sti
xchg
cmpsb
cmpsl
push
ret
notb
scas
ja
cld
pop
es
cmpsb
jno
popa
ljmp
mov
out
or
xchg
jo
or
add
sbb
jl
loop
ja
and
xor
push
xor
scas
dec
and
xor
and
add
test
xlat
jo
std
jl
adc
mov
dec
and
ficoms
cmp
jle
movsl
mov
or
fbstp
fdivrl
aam
or
sarb
int
ljmp
and
sahf
mov
dec
cmc
dec
dec
xchg
xor
pushf
ja
fldt
add
or
jg
arpl
cwtl
dec
iret
in
push
ja
push
dec
mov
in
mov
test
mov
cmpsl
test
fstp
jge
frstor
sarb
fwait
or
mov
push
incb
jmp
bound
add
push
aaa
es
xchg
es
aam
push
sbb
lcall
test
mov
cmp
dec
mov
fiaddl
xlat
mov
cmp
push
out
xchg
lock
dec
and
cmp
or
adc
xchg
mov
loop
inc
cmp
pop
and
pop
sub
xchg
pusha
dec
adc
cmp
mov
cwtl
lcall
cmp
sub
inc
sub
iret
add
inc
mov
xchg
mov
mov
test
inc
cmpb
xor
dec
filds
mov
inc
jge
sub
dec
lahf
cmpsl
sbb
fidivrs
add
test
insl
inc
and
push
push
out
rcr
lods
jae
and
or
sbb
cmp
jl
and
test
inc
push
add
mov
sbb
cmp
add
or
outsb
sti
popa
cmp
inc
adc
mov
and
cmp
lods
ret
outsl
negl
orb
mov
push
mov
mov
pop
sub
int
pop
sub
cmp
push
inc
je
xlat
mov
jg
ret
pop
sub
add
sub
arpl
dec
jnp
mov
shrb
aad
out
xchg
scas
iret
adc
enter
shll
xchg
adc
sub
mov
rorb
bound
jg
pop
push
scas
jns
pusha
add
rcl
jp
leave
or
and
inc
mov
xchg
mov
ljmp
xchg
aas
jl
fiaddl
dec
pop
mov
fcmovb
dec
loop
inc
es
test
movl
pop
dec
inc
iret
jecxz
mov
ret
xchg
mov
fnstcw
dec
ja
movsb
push
xor
add
lahf
push
addb
insb
inc
mov
movzbl
imul
push
ss
or
inc
stos
adcb
jbe
jecxz
insb
insl
and
cmp
inc
push
aaa
jp
stos
xchg
cld
adc
pusha
jmp
mov
popa
mov
je
inc
jecxz
push
fmuls
inc
push
jb
frstor
jle
adc
rcr
rcrb
dec
sbb
jg
lahf
cld
jns
cmp
inc
mov
outsb
jb
xchg
or
xchg
je
adc
fldl
loope
jbe
cmp
xchg
xchg
jecxz
in
sti
add
out
sti
mov
hlt
cmp
cltd
lret
mov
xchg
bound
mov
out
add
mov
mov
or
arpl
std
cmp
jl
and
mov
or
jb
rcll
leave
ret
cmp
aaa
leave
and
cs
mov
mov
sbb
aaa
add
adc
mov
pusha
fmull
sub
and
mov
cli
int
sti
ficompl
xor
or
xor
ret
fdiv
lret
mov
lcall
pop
enter
jp,pt
pop
rorl
test
pop
pop
sub
test
in
imul
jbe
subl
jnp
pop
jmp
or
mov
jp
cmp
mov
push
mov
lret
sbbb
sub
pushf
in
sub
mov
sub
xchg
sbb
xorl
imul
movsl
sbb
fimuls
mov
sbb
fdivrl
mov
add
jb
movsb
sbb
xchg
add
dec
adc
or
xorb
xlat
xor
mov
xchg
mov
iret
out
push
arpl
aas
or
xor
subl
mov
enter
mov
cmp
mov
movsl
lcall
shlb
cmc
outsl
inc
sub
xorb
leave
dec
xchg
mov
push
inc
sub
adcb
cmpsl
pop
loope
dec
pop
pop
shll
imul
inc
or
in
jge
add
ss
in
ss
mov
and
sub
dec
jae
adc
mov
mov
xor
push
push
bound
insl
sti
sti
or
addb
es
inc
js
ret
aaa
scas
mov
cli
iret
popf
push
adc
inc
sub
push
aas
cmp
xlat
divl
stc
jns
pop
in
mov
mov
jmp
rep
je
jo
addr16
cmc
out
es
mov
emms
or
shll
xchg
imul
or
cmp
sub
mov
pop
push
es
add
subb
int
push
inc
cmp
cmpsl
subl
fwait
lods
imulb
mov
add
test
cmp
out
dec
lds
movsb
sub
push
ljmp
sarl
cmp
in
clc
sub
std
pop
mov
out
ja
push
movsb
repz
pusha
mov
push
arpl
cmc
lock
mov
ljmp
and
jns
mov
cmc
xchg
and
out
data16
jns
rcl
addr16
sub
lahf
mov
adc
imul
out
outsb
test
dec
mov
nop
add
push
sbb
int3
ja
popa
pop
imul
sbb
mov
ret
push
push
jo
ja
jl
add
js
bound
mov
xor
push
mov
mov
mov
gs
mov
imul
pop
fnstcw
and
sub
cli
xlat
jmp
arpl
divl
inc
lea
mov
sbb
mov
ret
or
push
bound
sbb
cwtl
subb
push
inc
hlt
inc
cmp
lcall
sbb
mov
test
loop
add
and
cmp
out
push
xchg
jg
mov
mov
sbb
orl
into
dec
inc
clc
ret
movsl
out
pop
jne
ds
fcmovnu
mov
data16
data16
adc
dec
incb
inc
mov
pop
adc
mov
inc
dec
adc
clc
jae
cmp
out
decb
das
jg
fistps
push
cs
fdivrs
aam
xchg
cmp
js
mov
ja
push
fildl
xor
cmpsl
mov
pushf
fwait
xor
insb
stos
pop
xor
fwait
gs
inc
movsl
enter
out
pop
mov
js
jb
rorl
jo
lcall
stos
dec
push
mov
bound
push
push
jecxz
adc
mov
inc
subl
mov
lret
pop
lret
or
std
dec
add
adc
not
xchg
mov
sbb
in
stc
bound
dec
add
enter
fimull
outsl
scas
lods
push
jmp
shrb
testb
adc
xchg
mov
jae
test
adc
fisubrs
mov
mov
mov
into
sub
jmp
or
in
pop
dec
cmp
addr16
les
sub
sbb
jae
sub
mov
push
or
mov
xlat
cmc
shlb
mov
pop
jbe
les
mov
int3
jmp
fimull
shrl
and
mov
inc
dec
fisubrl
xor
pcmpeqb
inc
jg
mov
push
sbb
in
sub
xorl
test
jmp
cltd
jne
in
aas
out
sahf
aas
test
inc
es
dec
ret
mov
jo
enter
test
pop
xchg
mov
stc
and
bound
jp
push
pop
bound
xor
in
add
jne
jno
cs
pop
cmpsb
outsl
dec
xor
cmpsl
mov
add
or
or
dec
cmp
sbb
adc
dec
sub
pop
test
lea
mov
arpl
adc
int3
call
ljmp
scas
loopne
sub
in
cmp
fistps
stos
pusha
inc
cli
pop
push
popa
jb
pusha
fimuls
jno
push
cmc
lahf
std
and
cli
das
lret
push
call
adc
dec
xlat
lcall
scas
movsb
cmp
jg
movsl
push
push
das
jns
push
cwtl
xor
pop
fldl
test
inc
inc
fistps
shr
int
or
inc
push
cmpsl
loopne
xbegin
mov
push
aaa
cmp
or
jb
iret
fucomip
sub
mov
repz
add
sub
cmp
inc
mov
inc
in
pusha
push
xlat
ja
and
cmc
cwtl
inc
bnd
sbb
idivb
push
mov
pop
outsb
daa
add
in
pop
cmp
jge
fwait
ja
lcall
cmpsl
add
mov
adc
mov
int
sub
xchg
adc
lret
iret
movsl
cmpsl
mov
fs
int
sbb
push
xor
mov
rcr
push
movsb
xchg
cltd
push
push
pop
mov
dec
push
mov
ss
or
mov
in
adc
arpl
jae
sbb
test
sbb
sarl
lea
push
cwtl
shlb
ja
or
mov
push
scas
xchg
xchg
xchg
dec
jno
add
lret
jg
stos
pop
nop
jnp
aaa
xorl
xchg
and
xchg
scas
inc
pop
pushf
fisubrl
fcmovnu
mov
mov
shlb
and
int
xor
ss
fimull
dec
js
cmp
or
das
xchg
mov
push
ds
mov
mov
in
loope
mov
pop
mov
mov
xchg
adc
mov
stos
xor
xor
loope
push
ss
adc
dec
sbb
xchg
movsl
sub
dec
and
push
mov
xchg
jbe
cmc
in
and
mov
imul
mov
loope
fs
sbb
mov
std
leave
sub
push
and
mov
xchg
icebp
add
aam
push
jb
cmpsl
push
adc
sti
out
mov
stos
pop
add
pushf
mov
in
add
or
xchg
or
movsl
mov
mov
jb
fiadds
test
add
add
add
lock
push
mov
jmp
loope
mov
mov
mov
and
jmp
fnstsw
sbb
nop
outsb
adc
loop
mul
in
shl
ret
pop
repz
sub
out
pop
adcb
or
cld
cmp
les
out
ret
shrb
cmp
inc
cli
dec
bound
ja
shrb
mov
dec
push
mov
xchg
ret
add
sahf
pop
mov
ret
leave
jne
aas
loope
daa
cmpsl
push
fdivl
mov
test
mov
pushl
jecxz
mov
mov
jb
test
push
popa
mov
mov
mov
xchg
add
dec
aad
int
jbe
inc
inc
xor
mov
ja
test
push
pop
lret
inc
pop
outsb
add
sbb
mov
int3
out
lahf
jnp
ret
nop
roll
pop
mov
or
mov
push
cmpsl
inc
xlat
sbb
adc
stos
mov
and
pop
outsb
xchg
addr16
inc
sbb
dec
add
cmpsl
cwtl
aad
in
and
xchg
out
fwait
xchg
mov
push
pop
dec
mov
sub
rcl
and
lds
sahf
sbbl
and
aam
pop
jno
sub
push
out
mov
cwtl
stc
and
push
repz
fisubrs
mov
jp
flds
mov
aaa
sbb
das
sub
shlb
lods
cld
in
lcall
idivb
and
lahf
das
inc
jmp
movsl
mov
inc
ret
dec
popf
xchg
dec
adc
sub
outsl
inc
mov
mov
and
sti
loop
adc
xchg
add
jns
pushf
ret
dec
lods
pop
inc
rolb
les
daa
leave
dec
sbb
les
out
and
or
or
test
lds
xchg
test
movsl
addr16
and
repnz
shlb
jns
jle
ss
mov
std
mov
xor
adc
push
jo
and
dec
xor
roll
pop
xchg
or
xor
bound
das
jecxz
inc
xadd
push
xor
push
cli
push
ret
dec
pop
xchg
push
enter
jnp
icebp
in
lea
jne
les
insb
int
popf
sbb
xchg
jg
ret
add
das
lahf
cltd
add
or
and
dec
and
xor
and
popf
push
pop
repnz
and
add
push
push
mov
cmp
aam
jne
pop
fsubrl
pop
xor
pop
xlat
neg
mov
pop
cmp
iret
ret
scas
mov
sbb
cmp
sub
stos
leave
push
xchg
jns
icebp
xor
mov
push
popf
jb
add
push
cmpsb
aaa
jle
mov
rcr
out
jnp
jnp
adc
test
sbb
repz
sbb
pop
jmp
mov
je
in
lahf
mov
cmpsb
mov
mov
imul
jne
dec
jae
lahf
std
in
pushf
shll
adc
xchg
push
ja
ljmp
ss
mov
pop
push
lds
shlb
das
xlat
out
int
in
mov
hlt
push
enter
lods
nop
aad
shll
mov
cmp
das
stc
test
push
sti
imul
fdivs
stos
cmpb
repnz
fldcw
daa
mov
outsl
in
dec
fldcw
sbb
xor
lock
enter
pushf
insb
shlb
xchg
gs
dec
js
mov
stc
push
lret
ret
cmc
out
iret
int
popa
pop
cmpb
fcoml
mov
sbb
lods
mov
shll
xor
data16
and
mov
mov
sub
les
mov
fistpl
xor
xchg
add
loopne
shl
or
psubsb
or
xchg
push
sahf
outsb
lcall
pop
xchg
dec
jp
lcall
adc
loope
clc
std
cli
cmp
pop
mov
xor
movsb
cmpsb
clc
mov
push
dec
lcall
jo
cwtl
xlat
pop
clc
dec
bound
cld
pop
sub
adc
or
scas
cmp
adc
pushf
mov
imul
xlat
mov
add
addr16
cmp
call
or
es
test
mov
sub
jnp
pop
push
fdivrs
add
add
fwait
sub
lret
rcll
js
cld
outsb
fwait
arpl
xchg
test
sbb
es
sbb
sarl
add
xchg
fiadds
push
rcrl
jno
mov
and
and
hlt
dec
pop
cmp
aad
cltd
rcl
das
enter
test
scas
adc
iret
mov
andl
sub
aam
xor
movsb
in
int3
scas
and
fidivl
clc
insl
shll
pop
outsl
dec
pop
xchg
lret
bound
or
pop
insb
pop
lds
xchg
mov
mov
sahf
pop
dec
mov
add
aaa
sbb
pop
jne
pop
out
pop
cltd
bound
jno
jbe
hlt
loopne
and
dec
icebp
rcrl
bound
jle
sbb
nop
xor
add
in
je
cmp
adc
sbb
jl
dec
lds
fistps
lret
adcb
scas
lods
lret
pushf
xlat
iret
addr16
jno
imul
adc
dec
movsl
hlt
lods
stos
loop
sbb
ljmp
neg
xchg
sub
shr
pop
pop
out
cmp
pushf
sbb
jle
test
icebp
rcrb
xchg
outsl
cmc
ljmp
adc
mov
es
pop
adc
clc
cmpsl
pop
mov
andb
jge
inc
faddl
cmp
xchg
pushf
lods
pop
lahf
fwait
add
dec
push
out
mov
add
daa
pop
xchg
lahf
std
mov
mov
aam
scas
ljmp
add
ds
daa
jp
mov
mov
cs
fidivs
dec
je
sbb
or
and
inc
test
popa
or
push
xor
or
push
dec
popa
decb
std
jnp
push
inc
in
adc
inc
repz
push
sahf
dec
xor
jecxz
test
out
mov
lahf
pop
loopne
pop
xor
fldl
std
cwtl
dec
popf
in
enter
cmpb
jle
in
addb
sbb
push
sbb
or
sub
repnz
test
lahf
es
push
xchg
jb
jne
mov
aam
enter
inc
popf
rcrl
mov
int
inc
xchg
add
imul
lea
add
clc
test
inc
dec
mov
mov
mov
ret
xchg
sbb
push
pop
movsl
outsl
mov
loope
sti
dec
in
out
and
ficoms
mov
popf
pop
adc
daa
push
data16
cmp
sbb
sbb
shl
mov
cwtl
sbb
jmp
inc
sub
cltd
pop
clc
outsl
mov
imul
pop
lods
or
mov
jp
aas
aad
outsb
ds
fcomip
mov
enter
aas
pop
push
cmp
and
jmp
mov
jns
jo
pop
shll
sbb
sub
dec
jae
mov
pop
cltd
mov
and
pop
test
or
add
mov
fcoml
mov
or
aas
adc
dec
cmp
dec
testb
push
sub
movb
stos
jns
pop
sahf
pusha
dec
adc
movsl
mov
inc
ds
sub
lahf
fst
pushf
sahf
add
mov
test
jo
aam
jbe
lahf
cmp
in
cmp
js
es
rorb
mov
gs
jge
push
xor
pop
std
cmp
or
mov
and
cltd
xor
jo
roll
or
je
push
push
cmc
inc
sbb
inc
negb
and
inc
imul
repz
leave
mov
xlat
and
stos
push
icebp
ja
adc
adc
les
xchg
aam
xor
imul
mov
ret
add
insb
pop
aaa
xchg
jns
adc
sbb
imul
mov
loope
call
sbb
cmp
sbb
jns
movsb
dec
jg
sub
add
xchg
repz
insl
aas
jnp
mov
ja
stos
push
sbb
adc
jae
jbe
cmp
add
xor
out
inc
pop
sbb
dec
movsb
xchg
xchg
jbe
fs
sub
fxch
arpl
cmpb
pop
imul
lods
movsb
cld
push
sahf
movsl
push
cmp
add
pop
hlt
pushf
pushf
sub
mov
test
fcmove
xchg
adc
jno
pop
addr16
adc
cmp
cmpsl
mov
lahf
push
daa
incb
flds
test
cmc
lcall
sbb
xchg
sarb
in
outsl
xchg
sahf
popf
movsb
cld
and
push
jno
sbb
popa
pushf
mov
cmpl
test
testl
lret
inc
jns
iret
adc
mov
das
mov
dec
xchg
nop
xchg
add
adc
aas
jg
ds
ficoms
cmp
push
adc
jmp
cmp
inc
stos
repnz
mov
dec
lods
fisubs
hlt
addr16
out
mov
xor
xor
or
subb
ds
dec
mov
jo
imul
test
mov
lahf
shll
and
jno
cwtl
insb
jne
sbb
and
jg
dec
sar
xor
pusha
dec
icebp
adc
insb
push
adc
jne
xchg
dec
adc
stos
popa
es
scas
inc
xchg
jbe
push
lods
cmp
add
repz
dec
and
adc
mov
pusha
jg
add
popf
fistpl
mov
stos
rcrl
lcall
and
out
lret
mov
cwtl
xchg
in
fdivs
roll
outsb
dec
xor
das
mov
pusha
aas
xor
arpl
clc
cmp
adc
xchg
movsb
mov
xlat
sub
cmp
call
aaa
jle
in
loop
adc
popa
dec
xor
ja
cwtl
dec
xor
and
inc
arpl
push
ror
push
lret
push
mov
jb
mov
sarb
and
cmp
movsb
push
jg
das
dec
rclb
push
addr16
outsb
lahf
mov
mov
add
mov
mov
sbb
sub
jmp
xchg
sub
push
dec
test
mov
pop
xor
add
pop
fstps
jno
ret
ljmp
sbbl
fistpll
or
mov
ficoml
loop
ret
rcll
jge
add
mov
addr16
das
xchg
mov
fcomp
cmp
xor
adc
lock
cltd
add
mov
cli
inc
out
cmp
das
sbb
lods
pop
stos
lods
add
insb
leave
out
ret
outsb
lods
aas
rolb
sub
outsl
rcl
sahf
loopne
and
xchg
lcall
pop
xchg
jne
jnp
mov
sti
stos
out
sbb
imul
fidivs
and
cmc
fmuls
cmp
sub
mov
xchg
and
test
adc
xor
test
jo
pop
pop
stos
test
gs
push
xchg
mov
das
ss
and
ror
sub
ja
pop
xchg
or
sti
pusha
lret
stc
xchg
inc
sbb
push
in
xor
sub
jne
pusha
daa
sub
mov
jl
sbb
push
mov
ja
call
lea
sbb
cmp
mov
push
mov
sti
xchg
scas
imul
mov
imul
fidivrl
imull
imul
jmp
repz
cs
xchg
xor
xor
push
sbb
les
lock
enter
cwtl
testl
loop
out
mov
fiaddl
cmp
sbb
repnz
lret
hlt
popf
mov
pop
push
enter
adc
xchg
add
cmp
lret
cmp
shlb
jmp
ret
ficomps
jbe
scas
or
xchg
out
xchg
jle
sbbb
ljmp
fisttpl
test
jg
int3
in
push
jp
lods
sbb
out
push
inc
lods
mov
and
xor
push
xchg
cmp
mov
xchg
movsb
adc
sbb
addl
xchg
dec
ss
cmp
cli
pop
shr
add
int
icebp
sub
ret
ds
and
ret
add
mov
jnp
ss
fwait
rol
or
bound
mov
std
jnp
sarb
cld
in
push
imul
loopne
and
jbe
sbb
xchg
fsubl
fstpl
inc
mov
jno
sub
fnstenv
cmc
outsb
inc
dec
inc
adc
push
adc
lock
and
cmp
insb
test
xchg
add
and
fs
mov
adc
shlb
pop
sub
les
mov
push
or
inc
push
push
inc
cmp
jmp
cmp
cld
insb
mov
test
hlt
pop
xor
outsl
pusha
xlat
xor
jg
inc
pop
jmp
and
pop
ret
test
icebp
int
dec
xor
push
mov
cmpsb
test
faddp
xchg
jo
mov
into
loopne
inc
sub
mov
out
push
shl
or
outsb
jecxz
mov
daa
insb
add
shrl
sub
fsubl
cmp
fmulp
xor
xchg
jns
ds
mov
cwtl
sub
fucom
jecxz
lock
mov
mov
push
aaa
aas
mov
adc
stos
xlat
mov
out
push
test
aam
rclb
jp
xchg
test
outsl
pop
sbb
add
push
adc
mov
daa
inc
xor
movsl
jge
and
fnsave
test
mov
xor
hlt
in
loop
negb
jno
mov
fwait
cmp
das
sti
jnp
test
and
aaa
push
jge
int3
in
adc
mov
js
pop
sbb
popf
ljmp
push
loop
push
cwtl
jae
hlt
packuswb
fbld
cmp
inc
fidivs
xchg
pop
lahf
scas
loop
or
dec
adc
es
inc
sub
mov
cmpsb
cmp
mov
pop
add
sbb
call
pushf
cld
daa
fstps
sbb
insb
add
jnp
cmp
sbbl
inc
test
mov
call
pusha
pop
insl
dec
or
jp
dec
iret
or
xchg
in
inc
cld
mov
scas
sbb
inc
out
je
adc
and
loope
mov
fwait
leave
xlat
ret
xchg
fstpt
mov
inc
jge
mov
into
aaa
test
xor
mov
in
pop
aad
jns
ficoms
bound
push
and
ret
pop
je
into
jg
lods
fnstenv
cmc
arpl
hlt
adc
iret
bound
sub
rorb
xor
or
adc
mov
dec
data16
imul
notb
rcr
mov
jns
test
out
or
popf
pop
out
sub
jmp
push
xchg
cmpsb
stos
insb
inc
mov
mov
sbb
add
jl,pn
in
popf
les
hlt
out
mov
test
dec
imul
dec
mov
add
jbe
fldl
icebp
lret
xor
jl
movb
pop
dec
sbb
testl
or
mov
loop
sbb
pop
outsl
inc
insl
popa
arpl
test
pop
inc
ficompl
out
les
sub
pop
mov
xchg
flds
cmp
pop
das
or
lds
pop
cmpsl
cwtl
test
out
sbb
cmp
jge
jle
out
out
stc
ds
dec
jo
lds
call
inc
xchg
iret
pusha
or
push
add
or
in
inc
lret
lods
pushl
pop
loopne
cltd
test
adc
lods
int3
lods
pop
dec
sub
mov
fstl
sbb
mov
rcrl
mov
and
or
add
scas
pop
sahf
imul
xchg
enter
mov
fucom
ja
sahf
pop
outsb
jno
xchg
mov
repz
fcoml
fiaddl
lret
mov
xlat
sbb
ficomps
in
mov
pop
mov
mov
cmp
add
dec
nop
in
outsb
jle
xchg
jmp
jmp
enter
jge
test
xchg
mov
js
lods
lcall
fbstp
xor
ja
sbb
xchg
es
dec
enter
data16
cld
push
mov
cmp
aas
rcl
shr
sbb
jl
loope
push
jbe
xlat
sahf
mov
hlt
mov
mov
xchg
inc
push
cmp
stos
dec
mov
test
aas
cmp
pop
xor
mov
jp
loope
jg
sub
aaa
test
sbb
jge
rorb
sbb
cld
mov
jmp
mov
adc
imul
dec
ja
cmpsl
add
adc
lods
xchg
or
repnz
jo
shl
xor
mov
xchg
ds
mov
scas
dec
inc
cmpsl
or
mov
divb
mov
xorb
imul
es
lret
enter
mov
movsl
mov
push
mov
loope
stos
mov
sbb
add
loop
adcl
mov
stc
fisubrl
inc
inc
sub
pop
aas
xchg
xchg
out
ds
xor
mov
sbb
stos
jo
mov
pop
push
lret
or
in
jp
nop
or
fwait
inc
shr
adc
sbb
inc
stos
push
sbb
sahf
js
xchg
jno
push
mov
outsb
xchg
call
jecxz
popf
int3
inc
mov
andl
push
lcall
cmp
aad
sbb
jno
xor
stc
or
inc
sub
mov
lock
fcom
jb
ret
dec
cmp
dec
adc
test
pusha
mov
dec
or
bound
imul
inc
loope
pop
sbb
pusha
in
cmp
jl
xchg
and
in
pop
pop
add
jg
lahf
adc
xchg
dec
out
out
lods
jmp
xor
mov
out
xchg
xlat
or
cmp
mov
fidivl
xlat
mov
mov
shll
movsl
fisubl
or
mov
lret
push
pop
mov
dec
inc
jbe
hlt
inc
push
das
cmp
sub
xchg
out
shll
xor
andl
pop
cltd
std
out
mov
in
shll
lret
cmp
divb
cltd
pop
in
test
insl
mov
jmp
int
adc
insb
cli
imul
into
lods
and
xor
outsb
ficoml
jmp
mov
cmc
and
jne
pop
negb
ret
lods
inc
jmp
and
add
out
inc
cli
repz
fcoms
outsb
lds
sub
jecxz
in
mov
out
adcl
aad
push
sbb
out
sub
mov
xor
pop
andl
mov
mov
sub
mov
jae
inc
mov
mov
add
lahf
test
mov
ss
imul
addr16
jb
jnp
repnz
mov
jecxz
lods
xor
shrl
ficoml
mov
mulb
xchg
pop
xor
and
sti
pusha
rcrl
push
mov
jne
leave
gs
dec
ja
data16
out
jne
mov
pushf
pushl
iret
adcb
and
outsl
mov
sahf
xchg
push
movsl
sbb
out
inc
inc
loop
mov
lock
lock
aad
sub
repz
sbb
add
fs
jp
lret
pop
pop
fsub
push
lret
mov
imul
mov
and
aaa
push
inc
cltd
cmp
int3
pop
sti
sbb
fcmovu
mov
pop
and
inc
jbe
push
mov
incb
sub
push
mov
into
inc
adc
jne
sti
leave
xchg
enter
dec
fcmove
rcl
fwait
adc
mov
es
fists
cltd
sub
mov
jp
fs
fwait
pop
out
cmc
mov
push
inc
inc
and
bnd
dec
test
fisubs
out
adc
mov
out
fistpll
ret
cmp
insl
ss
inc
ficompl
icebp
mov
test
ficompl
inc
pop
sar
push
sti
faddl
movsb
hlt
dec
pop
mov
jp
mov
cmp
sub
mov
cmp
adc
lock
sbb
jmp
mov
xchg
adc
jmp
popf
outsl
push
cwtl
fimuls
push
jb
push
fdivrl
popa
adc
mov
sub
repnz
mov
fwait
add
or
cs
mov
sbb
add
outsl
mov
cmpsb
jle
nop
xchg
outsl
fwait
xor
bound
mov
stc
dec
es
pop
jle
orb
pop
jno
outsl
jmp
mov
sub
fwait
scas
insb
xchg
inc
and
nop
ficoms
or
sbb
jp
add
adc
cmp
cmp
jne
dec
fwait
inc
mov
mov
adc
or
hlt
sbb
mov
jb
lods
enter
aas
xchg
xor
in
pusha
mov
xor
ja
xor
push
js
arpl
adc
ljmp
scas
lea
add
shl
popa
pop
cmc
mov
std
add
mov
and
and
dec
pop
insl
scas
test
inc
push
mov
sub
icebp
cmp
push
imul
push
jae
or
fsubl
mov
jecxz
int
andl
sub
adc
int
cli
push
dec
mov
sarl
movsb
jl
insb
inc
cmp
lds
inc
jg
in
mov
push
push
out
mov
outsb
dec
int3
enter
ljmp
xchg
or
nop
std
fsubrs
or
ret
inc
mov
cmp
sub
loop
add
out
orl
adc
pop
into
in
or
fnstenv
and
xchg
mov
cli
clc
add
push
push
stos
cmp
repz
jnp
out
add
movsl
shlb
ret
lods
roll
insl
lds
sbb
aaa
jb
rcrb
in
xchg
popf
insb
dec
push
jl
outsb
out
inc
xchg
xor
sub
out
xor
lret
cmp
pushf
xor
scas
inc
popf
mov
adc
in
or
xor
ret
cmp
inc
xchg
ljmp
mov
xchg
push
pusha
test
inc
cli
shrb
sti
sbb
push
mov
adc
jmp
popf
jne
dec
nop
xorl
cmpsl
xor
dec
cs
pop
cmp
leave
cwtl
lock
orl
push
mov
mov
imul
and
dec
jecxz
adc
pop
sub
adc
lahf
int
sbb
pop
push
add
jmp
xlat
test
mov
stos
pushf
in
add
xor
add
sarb
or
fs
insl
cld
adc
jl
les
enter
out
jns
icebp
aaa
ds
pop
pushf
jecxz
xchg
cwtl
xchg
xchg
mov
out
pop
fimuls
clc
xchg
scas
jg
in
push
xor
sub
fldl
or
stos
in
hlt
add
mov
adc
dec
adc
push
or
fwait
jg
mov
subl
and
nop
addr16
mull
dec
jmp
stc
sub
cs
sub
ss
or
xchg
je
xor
addr16
xchg
dec
add
push
mov
in
mov
mov
out
adc
mov
mov
jp
test
cld
scas
gs
inc
movsl
sbb
mov
inc
xor
pop
mov
dec
div
sbb
lcall
out
call
jae
test
xor
outsl
lahf
das
mov
mov
push
sub
sub
sahf
adc
into
jge
shlb
insl
sbb
xchg
add
jmp
sahf
push
cmp
into
adc
pop
fcoml
xor
out
inc
add
hlt
inc
outsb
mov
lahf
loopne
sahf
or
cmpsb
and
es
xchg
pop
rcll
push
das
pop
test
inc
adc
xor
fnstsw
cli
enter
pusha
mov
test
or
jne
sub
negb
jecxz
and
shlb
mov
loopne
push
sub
push
mov
xlat
sub
dec
jle
aad
in
dec
mov
lock
xchg
cmpsl
popl
lock
cmc
movsb
push
mov
les
push
xor
push
add
faddl
in
mov
out
lret
xchg
ret
scas
fdivrs
incb
out
push
push
fwait
push
jecxz
loopne
push
movsb
ja
jno
mov
xchg
sti
scas
jb
aam
stos
loopne
fdivrl
jle
adc
subl
frstor
in
xchg
je
adc
imul
xor
out
dec
cmp
jmp
push
cmpsb
adc
push
loope
jecxz
bound
sbb
jae
xchg
in
cmp
pop
adc
ja
inc
dec
lret
aas
dec
fidivrs
pusha
lods
out
cmp
inc
incb
popf
inc
out
inc
dec
add
cmp
xchg
push
or
jecxz
xchg
std
xchg
testl
adcl
fisubrl
lock
xor
mov
daa
jg
popf
ljmp
dec
cmpsb
clc
xor
push
hlt
shrb
push
add
mov
cmp
out
sahf
dec
cmp
sub
sar
sbb
inc
mov
arpl
jecxz
push
dec
lret
push
push
mov
cmp
int3
arpl
int3
lahf
dec
adcb
enter
jns
ds
mov
push
dec
mov
insl
dec
insl
jnp
add
sub
or
lock
imul
insl
jns
push
jae,pt
sub
xchg
std
sbb
fstpl
imul
mov
jae
js
xchg
cmpsb
incb
pop
and
and
adc
das
out
pushf
or
cwtl
loop
mov
out
fwait
adc
pop
mov
cmpb
pushl
sbb
push
ret
jb
sub
clc
inc
inc
out
mov
inc
insl
jae
pop
ljmp
hlt
fbstp
cld
mov
lea
ljmp
outsb
sahf
pusha
mov
lds
lret
iret
popa
fisubrs
pop
lock
and
xorl
add
insb
add
pop
xchg
pop
std
push
sub
mov
sub
jnp
jnp
xor
xor
push
sbb
icebp
pop
cmc
ret
xchg
push
xchg
iret
fwait
addr16
dec
mov
adc
out
divl
fcmovb
test
mov
or
inc
cmp
sub
cmp
repz
cli
push
jae
pop
jle
int3
cs
ljmp
mov
insb
lcall
and
push
push
sti
les
xchg
sbb
sub
adc
pop
mov
jne
or
lods
mov
scas
into
jp
or
mov
xor
and
sub
icebp
xor
imul
mov
clc
mov
rorl
mov
mov
sub
xchg
outsl
add
xor
aaa
stos
cmp
testl
loop
and
push
push
andb
mov
mov
sbb
leave
mov
out
popf
xor
jae
pop
mov
mov
and
xchg
push
mov
mov
mov
popa
test
je
aad
mov
jge
mov
xchg
fs
add
sub
popa
inc
ret
dec
cmp
lods
sub
cmp
pop
mov
mov
decl
rcl
lods
push
and
pop
xor
sti
lret
mov
or
notl
jne
sub
lods
data16
inc
jno
pop
mov
call
mov
sub
push
out
movsl
push
arpl
xchg
sbb
ret
mov
arpl
das
mov
mov
mov
jecxz
xchg
inc
push
mov
inc
int3
pop
in
sbb
fiaddl
stos
ljmp
jle
mov
xchg
arpl
add
xchg
sti
icebp
jge
imul
mov
test
xor
outsw
mov
out
mov
out
mov
jge
xchg
xchg
es
icebp
into
dec
push
jle
fstl
fnstenv
gs
add
mov
lsl
pop
or
dec
push
mov
scas
loop
aad
cmpb
loop
inc
push
push
or
xor
xchg
hlt
loopne
data16
cli
pop
or
add
push
or
es
enter
inc
out
inc
ret
cmpsl
adc
lahf
push
fadd
pop
imul
mov
std
pop
mull
std
xor
push
cmp
movsb
clc
fnstcw
mov
push
and
lret
rolb
int
pop
xor
std
xor
cmp
push
cmp
movsl
xor
insl
test
xchg
mov
imul
out
stos
outsl
cld
sbb
sbb
mov
add
dec
aam
in
jnp
clc
or
adc
pusha
mov
std
or
icebp
and
pop
pop
cwtl
movsl
test
xchg
shll
leave
lret
or
push
push
and
mov
int
std
addb
dec
inc
pop
xlat
test
inc
xor
movsl
mov
pop
sti
mov
xchg
adc
add
ljmp
lock
push
dec
adc
call
cmp
add
fldt
shrb
out
jne
out
push
cmp
adc
push
les
adc
scas
dec
push
fimull
mov
xchg
fildll
sub
push
dec
adc
lret
outsb
pop
jbe
mov
xor
cmp
mov
int3
xor
cmp
xor
insb
rcll
push
lock
xor
cltd
sahf
mov
xor
nop
mov
mov
inc
adc
imul
pop
inc
mov
arpl
push
add
mov
jne
sub
divb
lret
fistps
dec
fwait
inc
mov
int
iret
push
mulb
cmp
adc
divb
jns
ljmp
push
jecxz
inc
mov
mov
xchg
mov
sub
sbbl
sbb
adc
roll
cwtl
cltd
aas
add
or
cwtl
int
test
pop
xlat
stc
in
adc
fadds
es
out
inc
lods
cmpsb
rclb
dec
cmp
ror
cmp
xor
nop
int3
add
repnz
push
in
aad
xchg
fs
sub
inc
push
fs
fisubs
stos
mov
fcomip
sub
and
pop
and
mov
cltd
cmp
aad
cmp
inc
lcall
mov
add
lea
out
mov
fsubrp
pop
fcoms
fs
aas
js
pop
lods
repnz
xor
pop
xlat
lret
cld
sub
mov
sahf
adc
push
push
addb
xchg
imul
cld
movsl
push
jb
inc
sbb
and
sahf
ret
xor
rcl
inc
xchg
fisubrs
out
adc
test
add
aad
insl
shlb
addr16
fldcw
push
in
adc
jae
mov
inc
into
and
add
cmc
popa
mov
jge
xchg
aas
das
cld
mov
jb
sub
mov
sbb
push
sbb
xor
rorb
fmull
mov
cmp
inc
xchg
cltd
mov
scas
pop
ja
sub
mov
test
shlb
in
push
cmc
inc
out
jne
stc
cmp
out
scas
pop
add
loopne
cli
subb
out
outsb
xor
pop
lret
xchg
cltd
push
pop
icebp
and
push
adc
dec
jae
or
push
adc
inc
lods
xchg
in
lock
adc
lods
jg
aas
jno
mov
cmp
scas
and
push
out
lahf
adc
notb
into
fisubl
sub
mov
decl
stc
adc
xor
xchg
int
mov
repz
hlt
mov
pop
pusha
lahf
inc
xor
div
sub
mov
add
test
inc
nop
test
or
test
mov
sbb
shl
mov
idiv
mov
jbe
loop
test
orl
in
push
popf
cltd
loopne
jnp
das
xchg
pushf
daa
in
mov
push
push
movsb
adc
push
sbb
movl
std
adc
mov
clc
push
cltd
mov
xchg
je
mov
sub
add
sahf
fldl
adc
add
push
arpl
aad
loope
roll
mov
pop
pop
dec
cwtd
imul
xchg
push
rorb
and
push
cwtl
xor
xchg
enter
pop
mov
popa
fucomi
lods
and
cmp
jb
fs
mov
push
push
movsl
pop
dec
and
cmp
jle
sub
xor
jbe
fsubl
or
jno
jbe
aam
add
push
add
dec
addl
loop
sbb
sub
std
fstpt
and
push
inc
std
imul
push
andb
sbb
fcmovnu
sbb
pop
hlt
inc
popf
inc
fwait
pusha
in
scas
pop
mov
push
mov
xchg
pop
test
mov
aas
pop
cld
mov
ds
repnz
lretw
fcompl
out
cs
je
adc
aad
mov
mov
mov
mov
jb
cmpsl
gs
jb
sbb
mov
mov
insl
sti
fiadds
call
xchg
inc
cli
sub
cmp
ds
loop,pn
jmp
je
sbb
push
cmpb
mov
pop
outsl
adc
lock
sub
pop
adc
movl
mov
addr16
insl
adc
repz
lock
xor
in
dec
xchg
or
push
and
and
test
addl
fstl
jae
ds
pop
and
lahf
cmp
das
cmpsb
ja
out
xor
in
dec
cmp
adc
cmp
xor
jge
popf
cmp
inc
pushf
and
inc
mov
inc
lds
and
iret
and
pop
adc
rorb
and
push
xchg
and
jp
out
sbbl
int
xchg
repnz
icebp
les
dec
icebp
xor
in
cld
loop
jbe
xchg
sti
lcall
lods
fsubrs
sbb
cwtl
or
out
in
jl
mov
pop
adc
xchg
mov
cwtl
mov
lods
and
frstor
fsts
jmp
je
add
stc
icebp
cli
popa
adc
bound
dec
sub
push
test
sti
inc
dec
fcomps
mov
fsubr
push
lret
adc
dec
stos
addl
scas
stos
mov
xchg
sub
inc
mov
cmp
cli
in
inc
stc
popf
push
stos
or
jp
sub
divl
xchg
and
dec
jb
popa
sub
stos
out
dec
mov
orb
dec
sbb
loopne
cld
pop
inc
int3
xchg
push
call
scas
hlt
and
mov
adc
mov
pop
lods
cmpsb
mov
mov
mov
pop
fs
lods
fwait
lcall
cli
dec
push
mov
mov
ja
fdivr
adc
jae,pt
cmpsb
sbb
jg
sub
mov
insl
jb
sbb
int
rcl
int3
pop
xchg
iret
pop
sub
imul
data16
xor
lea
pusha
xchg
cwtl
jmp
xor
repnz
adc
std
or
and
test
lret
subb
jle
insl
gs
sub
mov
adc
xchg
fistps
push
clc
jae
pop
dec
push
sub
xor
jg
adc
pop
pushf
pop
in
or
inc
jl
xor
fidivrs
and
cld
popl
pop
loopne
mov
mov
rolb
dec
movl
pop
inc
shlb
push
inc
jae,pn
add
mov
xchg
sub
outsl
jno
sub
jnp
mov
sahf
mov
mov
arpl
mov
sti
enter
xchg
scas
pop
cwtl
inc
add
sub
ret
lahf
push
or
pop
andl
and
cmpsl
xor
movsl
xchg
xor
paddb
sbbb
cltd
sahf
mov
lods
je
add
mov
jg
mov
loop
rcl
popa
sahf
pop
fucomp
jmp
pop
out
roll
fiaddl
enter
xor
repnz
scas
dec
mov
jmp
xchg
and
cmp
pop
clc
test
xlat
push
adc
adc
push
out
and
push
add
pop
push
dec
jb
int3
test
sub
cli
popf
fstl
jmp
shl
clc
aas
push
ret
test
lahf
jecxz
shl
test
adc
lahf
mov
adc
jg
sbb
arpl
sbb
mov
fidivrs
mov
pop
pop
imul
fwait
sub
mov
mov
arpl
repz
xor
mov
lahf
xchg
subl
xorl
sub
add
mov
sbb
and
gs
out
shrl
pop
test
cmp
mov
mov
out
and
xlat
das
rcrl
and
and
outsb
aaa
lods
or
push
in
mov
aad
ficompl
xchg
xchg
arpl
fucomip
int
outsl
pop
hlt
cmpb
into
xchg
cmpsl
sub
loopne
inc
pop
mov
xor
je
test
dec
pop
adc
ja
ja
rcrl
data16
repnz
cmp
dec
adc
bound
add
or
pop
jbe
dec
popf
push
jp
imul
outsb
shlb
add
bts
outsl
mov
mov
jbe
xchg
repz
in
mov
pop
insl
scas
ficoml
push
sbb
and
movsb
idivl
dec
shrb
in
test
les
pop
adc
inc
or
mov
cmp
sbb
jg
adc
mov
xchg
dec
stos
xor
mov
sub
stos
dec
cmp
inc
xor
lahf
movsb
jo
add
outsb
icebp
push
out
jl
int
test
sbbb
rcl
cs
sbb
addb
adc
or
outsl
fidivl
jl
add
addr16
arpl
xchg
jmp
pop
jecxz
and
or
cmp
sahf
hlt
adc
es
inc
sbb
xor
mov
jno
test
in
fistl
cltd
int3
push
test
sub
outsb
pop
mov
mov
orl
ret
pop
sub
int
gs
lea
insl
and
ss
xor
inc
push
int3
mov
sbbb
in
idivb
push
mov
add
fwait
in
mov
xor
pop
pushf
and
push
add
jnp
sbb
jae
mov
inc
sub
mov
aaa
sbb
add
jmp
mov
xchg
mov
cmp
lahf
dec
xchg
mov
jno
mov
mov
addr16
loope
xchg
push
out
dec
inc
aad
je
dec
pop
adc
xor
mov
leave
sbb
clc
ja
jb
lea
arpl
in
cwtl
push
jmp
cmp
mov
test
jecxz
fimuls
mov
fnstcw
push
pop
fisttpl
or
scas
out
inc
mov
mov
xlat
jge
jnp
loopne
stos
dec
jge
iret
notl
xchg
ret
out
mov
pop
push
cmp
into
inc
mov
and
arpl
pavgb
dec
jae
push
lock
arpl
subb
push
shll
pusha
inc
test
sub
mov
call
adc
jno
or
jmp
sbb
pop
loope
enter
dec
sbb
inc
inc
push
inc
jp
aam
cmp
data16
out
scas
hlt
mov
movsl
mov
mov
sbb
ret
decb
testb
popf
in
fsubs
mov
ret
inc
pmovmskb
popa
pop
dec
jb
adc
bound
aad
lods
mov
ljmp
popf
xor
repnz
jecxz
mov
fiaddl
icebp
mov
sti
or
fwait
mov
out
mov
sub
mov
cmp
stos
push
test
in
sbb
push
imul
stos
dec
and
fwait
sub
xchg
fbld
sbb
xor
test
mov
outsb
adc
cmp
pop
push
xor
movsb
test
mov
leave
mov
mov
cmp
cmpsb
stos
mov
jl
ret
shr
iret
lock
dec
dec
in
sub
sub
cmpsl
pusha
in
aam
dec
jmp
stc
gs
clc
push
rcrb
lock
icebp
les
sbb
sub
pop
iret
rcrl
stos
xor
popf
hlt
mov
data16
rcl
cmp
addr16
inc
mov
push
jb
adc
fcoms
jb
pop
dec
sbb
add
stos
scas
les
cs
sahf
cmp
loope
lods
push
push
into
and
inc
inc
inc
repz
negl
mov
pop
pop
in
mov
fcomp
into
mov
incb
xor
cmp
cmp
pop
iret
inc
je
cmp
lock
clc
inc
cmpl
jmp
out
mov
jle
out
or
jl
dec
fcmove
jns
repnz
adc
sub
popf
fimull
fisttpl
hlt
gs
lcall
loop
or
dec
mov
dec
or
adcl
popf
xor
enter
or
xchg
adc
xchg
jmp
add
insl
icebp
pushf
sti
sbb
xchg
gs
jb
jnp
in
xchg
movsl
ds
aas
mov
cmp
cmp
and
movsl
aad
sub
rorl
mov
or
mov
int
push
rclb
xchg
fwait
add
lcall
sahf
adc
pop
nop
addr16
stos
mov
test
jne
idivb
dec
mov
pop
cmc
pop
imul
addr16
stos
cmc
pop
sub
xor
xor
xchg
insl
dec
mov
mov
das
adc
dec
std
adc
ja
add
xchg
inc
rcll
ret
shr
pop
aaa
jb
aaa
mov
enter
dec
mov
mov
daa
cmovp
or
lcall
repnz
lcall
dec
cmpl
xchg
rcl
xchg
adc
fildl
xchg
push
push
lods
orl
dec
xlat
jae
inc
in
imull
push
inc
inc
hlt
popa
inc
fwait
popa
movsl
mov
int3
jecxz
dec
jns
arpl
shrb
sbb
xchg
scas
scas
xchg
inc
lods
fsubrl
movsb
xchg
or
jle
push
repz
mul
les
js
mov
push
in
dec
loop
divl
shlb
adc
in
negl
out
cs
pop
sub
add
into
jmp
ret
aam
mov
mov
mov
dec
iret
mov
icebp
mull
dec
rep
sbb
dec
push
inc
ret
push
sti
pop
sbbl
stos
sub
cvttps2pi
sub
cmpsl
add
mov
cmp
sahf
aaa
dec
mov
pusha
pushf
xchg
cmp
or
dec
push
mov
adc
sub
lods
ret
mov
fstl
imul
push
mov
out
subb
adcb
call
loopne
loop
in
lret
movsl
arpl
inc
inc
and
xchg
xor
dec
stos
jnp
int3
je
std
aaa
pop
jne
call
test
pusha
enter
jnp
clc
jae
pop
jle
popf
inc
cltd
adc
sti
scas
lret
inc
daa
push
pusha
mov
ficompl
daa
xchg
fisubrs
jl
and
aaa
cmp
lahf
insb
push
fisubl
shll
data16
jo
and
sbb
sti
les
mov
and
mov
shr
push
inc
jbe
pushf
sub
imul
call
or
push
lret
adc
add
cltd
insb
push
gs
inc
push
xor
push
in
pusha
sbb
aam
mov
inc
xlat
inc
arpl
lock
pop
sahf
mov
cwtl
jmp
pop
adc
jecxz
inc
or
fadds
test
xor
popf
nop
aad
xchg
rcrl
clc
ret
cmp
cmp
jae
mov
xor
imul
mov
out
mov
test
clc
imull
cmp
xchg
cmpsb
lahf
dec
jecxz
sub
fimull
xor
nop
addr16
aad
push
pop
fsubs
cmp
insl
sbb
inc
adc
icebp
enter
and
pop
xchg
and
mov
insl
fadd
pop
lods
ljmp
mov
push
or
icebp
out
sbb
mov
cld
aam
stos
into
and
fs
add
mov
sahf
aaa
cs
mov
cmp
xchg
jg
int
in
pop
sbb
jnp
dec
test
ja
pop
or
iret
arpl
cmp
cmpsl
cltd
out
cld
shlb
dec
xchg
fcomps
adc
or
sti
cmp
add
outsb
js
and
mov
push
pop
cmp
or
cmp
cmpsl
adc
fstps
dec
in
jecxz
jns
std
inc
and
inc
mov
es
fimull
ret
sub
mov
sahf
or
mov
enter
xchg
loop
mov
pop
mov
jnp
test
js
sub
int3
cmp
adc
xchg
jne,pt
pop
jg
ficompl
adc
repz
icebp
and
and
mov
push
adcl
cmp
pop
out
test
cmp
or
and
pop
push
out
nopl
xlat
fldt
loope
hlt
aas
orb
shl
push
pop
xchg
cmp
push
and
sub
pop
incb
outsl
jb
pop
pop
andl
nop
test
xchg
rcrl
jae
inc
dec
stc
pusha
mov
popf
sub
inc
push
sbb
cld
sub
sahf
out
das
xor
in
sub
adc
inc
push
mov
xchg
lea
push
and
in
jno
aam
xchg
enter
jb
lock
dec
lcall
stc
mov
mov
repz
notb
in
cmp
dec
ljmp
inc
jecxz
fldenv
loopne
or
fisubrs
pop
adc
adc
std
repnz
adc
shll
add
fisubs
rcrb
pop
jno
movsb
outsb
stos
shr
mov
push
mov
mov
and
loope
icebp
out
xchg
push
sbbl
test
imul
pop
test
pop
mov
out
shlb
out
hlt
cmpsl
jmp
xor
mov
cwtl
xchg
cmpb
inc
mov
mov
sti
add
dec
adc
scas
push
loop
shlb
inc
mov
mov
jns
cmc
cli
lret
movsb
cmp
xchg
jbe
push
into
pop
outsl
jne
aad
ds
sti
mov
std
test
or
cmc
insb
popf
pop
jns
pop
xchg
cmpsl
push
jbe
test
push
cmpsl
aad
repz
daa
jmp
lahf
add
cmp
cmp
outsl
mov
jo
pusha
fistps
stc
pop
lcall
pop
movsl
cld
jp
pop
daa
imul
push
cs
inc
jl
xchg
iret
je
jmp
popf
ja
test
sbb
movsl
jl
xchg
ret
sbbb
jo
clc
inc
lcall
in
out
xchg
aaa
loope
and
ret
aad
fisubl
das
jp
icebp
test
pop
xchg
test
mov
or
cmp
xchg
call
cmc
imulb
outsl
pop
xor
jle
arpl
das
dec
and
jb
test
clc
scas
ret
and
mov
cmc
sub
out
stc
mov
xchg
aam
or
xchg
enter
popl
push
xor
outsb
push
ljmp
aad
scas
inc
dec
fdivp
out
shl
stos
loop
es
lret
int3
and
mov
push
push
jg
mov
push
xor
insb
jmp
idivb
mov
mov
pop
repnz
xchg
shrb
mov
in
int
call
inc
push
aas
and
mov
push
dec
dec
jo
and
mov
mov
cmp
cli
andb
pushf
out
cli
std
adc
lods
jmp
mov
and
pop
push
dec
cs
adc
hlt
fsubrs
cmc
int3
xchg
roll
pop
pop
repnz
mov
mov
dec
add
popf
outsl
cmp
cmc
and
mov
outsb
push
mov
mov
scas
leave
push
lds
mov
push
push
testl
sub
pop
sub
pop
jno
inc
cmpb
dec
xor
clc
fwait
pop
push
pop
pop
popf
test
inc
sbb
out
cmp
dec
cmp
mov
mov
loop
movsb
idivb
sar
sub
fldcw
jge
aam
jb
inc
fdivs
mov
daa
ret
addr16
cmp
adc
das
bound
movsb
mov
xchg
fisubrs
xchg
hlt
enter
xchg
into
inc
mov
out
dec
cmp
ret
enter
push
dec
push
xchg
mull
out
xor
dec
mov
push
add
add
mov
cmp
push
mov
ret
cmp
divl
xor
dec
pop
inc
ret
rorl
scas
mov
ss
shl
arpl
test
ret
out
jnp
dec
inc
jns
mov
fstpt
jns
inc
aad
int3
sub
xlat
fsub
mov
je
mov
mov
inc
inc
adc
mov
cmp
mov
andb
loop
xor
imul
sbb
push
dec
fwait
jg
pop
imul
jno
imul
out
fwait
rcrl
loopne
adc
adc
scas
push
pop
cld
push
stos
pop
pop
sbb
mov
inc
pusha
xor
mov
fsts
cmp
sub
mov
sub
dec
inc
lret
mov
inc
sub
ret
jbe
mov
xchg
dec
in
repz
or
adc
ja
inc
sub
imul
stc
xor
sub
lahf
repz
xchg
fcmovne
push
std
lahf
ljmp
scas
xor
daa
mov
adc
popa
pop
arpl
sub
jne
sub
mov
loopne
in
shr
adc
xchg
add
bound
mov
jl
fstpt
mov
fsubrl
mov
fwait
out
loop
addb
adc
arpl
push
adc
push
push
out
cmp
jp
jl
push
mov
pop
xchg
loopne
pop
out
movups
and
mov
dec
jbe
hlt
cmpsb
cmp
sbb
mov
fcomip
or
pop
xchg
and
ds
test
cmp
sbb
sub
push
xchg
pushf
hlt
pushf
xchg
mov
fcmovu
add
fstpt
jo
ficoms
je
mov
or
add
add
int
adc
xor
es
cmp
xor
cs
mov
ds
loope
inc
xor
pop
in
je
pusha
bound
push
lds
pop
mov
mov
mov
inc
insb
add
push
or
pop
cli
push
add
cmp
mov
mov
or
fsubl
mov
sub
loopne
xchg
adc
fists
btr
inc
push
mov
push
mov
vphsubdq
ret
andl
push
out
ljmp
fimull
adc
jne
jg
jae
adc
rclb
scas
and
scas
xchg
push
add
out
out
icebp
jne
mov
jno
cld
or
push
mov
or
sbb
sahf
cs
dec
or
jnp
lock
repnz
cs
sub
inc
dec
push
rorl
repz
and
fnstenv
imul
ret
push
lods
fdivrs
fwait
repz
cld
mov
les
mov
xor
out
dec
lds
lods
in
jae
push
enter
cmpsl
out
push
mov
lds
leave
dec
xchg
pop
jb
roll
cs
add
mov
push
stos
or
out
imul
pop
shr
jecxz
push
xor
mov
lods
ljmp
xchg
dec
mov
jge
xor
push
lret
outsl
mov
fs
pop
cmp
repnz
sbbb
mov
ljmp
mov
mov
mov
jp
push
jnp
insb
or
outsb
std
out
cwtl
scas
or
jmp
jnp
sub
add
mov
pop
push
mov
mov
sub
les
data16
pop
shll
out
lea
add
sbb
call
lret
mov
ljmp
cli
xor
ljmp
pop
int3
jnp
aaa
or
sbbl
add
loope
adc
cmp
sub
sub
fsubrl
pop
xor
dec
add
fnstcw
and
test
mov
cld
aaa
adc
cmp
pop
shrb
xlat
or
movsb
rol
dec
xor
push
movsl
jmp
daa
mov
mov
aam
out
imulb
jl
push
scas
rcrb
and
sbb
int3
movsl
mov
popl
lods
or
sahf
xchg
lahf
cwtl
push
add
sub
and
jns
out
push
or
ficoms
jns
mov
sbb
jne
roll
loope
adc
dec
insb
or
mov
outsb
clc
mov
pop
daa
push
test
push
adcl
out
fidivrl
adc
push
aaa
mov
out
mov
lcall
cmp
mov
aad
aaa
out
add
or
xchg
fucom
call
icebp
popf
adc
insb
sub
and
xor
mov
jne
out
icebp
mov
jns
lods
insl
push
ss
pop
inc
inc
push
fcmovnb
out
out
insl
lods
add
xor
out
mov
addr16
dec
inc
int
outsb
jge
and
jbe
adc
sub
pusha
daa
in
pusha
xchg
push
push
mov
fwait
ds
and
inc
xor
cs
insb
dec
pop
xor
dec
aad
shrl
idivb
cs
dec
dec
sub
stos
stos
mov
mov
dec
outsl
es
cmp
test
jl
mov
mov
push
pop
test
scas
lcall
sub
test
xorb
paddw
push
lcall
add
mov
cmp
mov
aam
roll
xchg
pop
inc
sub
mov
mov
rcrb
stos
jne
jne
mov
js
clc
jp
int
sub
lret
add
push
add
xchg
xlat
xchg
ja
mov
add
lret
sbb
adc
mov
ffree
pop
add
sbb
adc
call
push
pop
or
lea
leave
xchg
aaa
lds
lods
cmp
cmc
ja
push
rorl
aas
jmp
pop
xor
xor
jb
sahf
jne
addb
lahf
out
stos
xchg
popf
sub
adc
pop
or
add
dec
int3
dec
add
xlat
dec
and
push
cmp
es
mov
xchg
ds
lock
ret
xchg
dec
mov
or
jo
pop
call
mov
or
int3
adc
pop
fsubrs
xchg
sub
inc
negb
ret
lds
dec
pop
xor
lock
xor
mov
lret
xchg
or
mov
dec
fucomp
rorl
jmp
es
xlat
sarl
or
stos
pop
imul
out
xchg
out
push
test
arpl
cli
call
jns
je
mov
or
in
sub
mov
or
cs
xor
mov
jl
dec
loopne
les
stc
push
cmc
mov
inc
or
cmp
jge
and
or
fnstsw
jp
sbb
xor
push
stos
xor
and
fisubl
in
mov
mov
adc
sbb
inc
addr16
out
leave
daa
popa
or
fiaddl
addr16
outsl
mov
fildll
xor
xchg
ret
sti
shrb
mov
js
inc
mov
test
int3
and
icebp
mov
xlat
scas
sub
jp
ljmp
test
test
lods
out
cmp
in
jo
jge
or
shll
xor
pop
pushf
jae
shll
pop
cmpsl
outsb
or
inc
cmpsl
adc
pop
fisttps
enter
inc
add
popa
adc
sbb
xlat
clc
push
out
into
sub
lds
mov
sub
es
pushf
adc
nop
sub
stc
fcmovne
dec
mov
mov
xor
sbb
scas
int
pop
aad
mov
pop
popa
cmp
mov
inc
push
iret
xor
xor
in
mov
mov
icebp
pop
lahf
imul
andl
out
jecxz
jmp
xor
dec
dec
scas
lahf
lahf
mov
inc
dec
aaa
inc
ret
sub
sub
xchg
mov
xchg
ret
int
adc
inc
fwait
fs
leave
outsb
or
popf
or
imul
out
gs
sub
adc
xor
mov
lods
adc
scas
pusha
mov
icebp
loopne
ljmp
in
sbbl
push
dec
hlt
mov
xor
dec
fildl
data16
mov
icebp
mov
sti
enter
and
popa
movsl
leave
out
in
cmp
outsl
aas
aad
mov
and
mov
test
xchg
les
xlat
pop
test
jo
fisttpll
add
add
xchg
aad
clc
aam
hlt
sti
fistpl
lcall
cs
pop
or
pop
sbb
scas
push
ret
mov
sub
push
arpl
mov
rorl
inc
lret
outsb
push
adc
ret
adc
inc
or
in
cmp
jl
inc
inc
rolb
pop
iret
sub
shr
insb
loope
inc
and
xchg
sbb
and
das
ljmp
outsb
mov
out
dec
scas
or
dec
mov
sbb
jle
jl
jbe
movsl
lock
test
pop
inc
xor
xchg
fiadds
pop
pop
in
lds
fmull
or
mov
jne
stc
cmpsb
pushf
mov
adc
mov
dec
inc
jno
jo
sahf
divb
cs
mov
pop
dec
add
add
sbbb
subb
int3
cltd
adc
std
int3
jo
inc
and
adc
repz
test
xor
sbb
pusha
xor
negl
std
jp
in
xor
decl
lea
push
adc
cwtl
pop
xchg
xor
sbb
mov
push
xor
rorl
mov
mov
movsl
mov
and
sar
daa
push
inc
std
push
aad
dec
loop
sub
and
imul
aad
cmc
xchg
pushf
movsb
pusha
cs
push
leave
loopne
loopne
pop
lahf
cld
xlat
sub
shr
jp
mov
lcall
ret
icebp
adc
inc
and
fmul
sub
dec
idivb
push
and
aaa
roll
adc
jno
cmc
cld
jo
fwait
call
sbb
sbbb
aam
mov
xchg
rcrb
jo
cwtl
decl
pop
inc
aam
test
lock
jmp
cli
and
or
aaa
fst
divl
cmp
nop
jae
fwait
dec
pusha
ret
pop
xor
sarl
jae
andl
mov
into
popa
and
mov
mov
add
test
addb
dec
ds
cmp
add
icebp
push
cs
test
aad
in
cltd
jns
mov
add
popa
push
imul
imul
in
add
stc
push
pop
xor
daa
dec
pushf
arpl
jge
sbb
nop
les
pop
or
inc
test
mov
mov
or
fisubs
dec
cmpsl
cld
xchg
push
sarb
pop
sarl
jecxz
test
xor
push
push
cwtl
lcall
cmp
mov
ja
repz
and
jp
bound
in
gs
or
cld
inc
xor
stc
jno
dec
or
lds
icebp
jle
xchg
jmp
push
cmp
and
aas
fld
pop
mov
mov
inc
pusha
jo
fs
xchg
or
or
mov
sahf
sub
cmc
test
jecxz
fucom
xor
cmp
cltd
xchg
movsb
xchg
pop
test
mov
add
iret
icebp
pop
push
std
jnp
mov
cmp
mov
mov
mov
repnz
insl
aas
mov
jnp
sbb
testl
mov
lock
insl
mov
xor
ljmp
xor
cmc
adc
jmp
inc
ja
pop
push
jo
ret
shrl
pop
gs
mov
into
ljmp
stc
sub
arpl
lret
sbb
adc
mov
pusha
mov
xchg
cltd
inc
andl
lret
add
mov
mov
cmp
sbb
rcrb
cmp
lret
movsl
xchg
or
in
pop
mov
mov
call
push
xchg
call
xor
pop
outsl
pusha
mov
xor
int3
xor
fpatan
add
or
daa
es
jb
pop
add
mov
cld
jmp
rcrl
mov
xor
jmp
xor
in
mov
je
ffree
clc
add
push
popf
in
cli
test
hlt
ret
cld
and
add
les
push
or
cmpsb
cmp
popf
nop
pop
mov
ss
rcll
lods
push
sbb
lock
add
xor
in
sub
and
lahf
decl
popa
insl
aas
add
mov
sbb
aam
ja
pop
jns
jecxz
ret
mov
fistpl
imul
mov
idivl
outsb
lds
sbb
ficoms
add
popa
fwait
std
inc
jmp
icebp
jnp
dec
cmp
scas
push
sbb
push
hlt
pop
or
cld
adc
dec
ljmp
lahf
xlat
pop
shl
pop
lock
inc
mov
fistpl
mov
ljmp
push
sarl
inc
xor
mov
test
jg
mov
mov
and
lds
inc
lods
xchg
iret
or
enter
adc
push
shll
in
andl
pop
lods
sbb
outsl
sahf
fcoms
ret
into
fwait
sbb
mov
call
cmp
and
mov
sub
sbbl
dec
cmpsl
mov
fidivrs
arpl
movsb
inc
das
lcall
push
gs
cli
mov
fwait
test
add
es
out
icebp
imul
xchg
jo
punpckhbw
outsl
jle
pop
add
cwtl
add
pop
pop
or
das
popa
pop
decl
dec
hlt
lret
out
popa
popf
out
dec
test
cld
sbb
andb
jne
xchg
test
nop
popa
xchg
mov
xchg
dec
xchg
add
test
cltd
sbb
ljmp
adc
pop
shll
cwtl
push
mov
into
dec
int
push
push
sbb
out
fnsave
jl
or
jbe
push
rcl
jae
ret
stos
push
and
or
popa
jno
repz
je
jbe
xor
insl
inc
add
jo
cmp
into
xchg
xchg
mov
out
loop
shr
mov
or
cmc
sbb
xchg
mov
or
push
push
jge
out
mov
xchg
cli
jmp
lock
cmpsl
out
pop
pop
insl
push
mov
xchg
in
jno
pop
sahf
scas
mov
mov
pop
or
cmp
sahf
lds
sub
sub
mov
cmpsl
jbe
sub
sbb
andb
add
push
cmpl
aas
arpl
jp
mov
mov
mov
cmp
jmp
mov
dec
test
mov
push
xchg
ds
mov
inc
mov
pcmpgtb
inc
mov
andb
test
aad
fldcw
pop
xchg
xchg
hlt
data16
sahf
inc
loopne
jb
mulb
icebp
jp
pushf
shll
fldl
enter
push
sub
insl
out
cld
mov
loop
std
dec
pop
andb
cmp
inc
push
divl
jmp
lds
adc
inc
dec
call
pop
push
adc
mov
stos
jle
in
and
cmp
leave
sarb
xor
dec
sub
cmp
pusha
sub
xor
shrb
mov
cld
sahf
mov
push
rclb
cltd
add
sub
sahf
sbb
dec
fmuls
dec
movsl
dec
test
rclb
movsl
pop
and
or
rcr
or
aas
je
fdivrs
pop
outsb
aas
fidivl
xchg
push
lods
insl
mov
push
and
imul
add
fsubrl
push
repnz
adcl
jecxz
or
mov
popl
mov
cmp
mov
push
jmp
jmp
out
mov
adc
push
xchg
mov
add
mov
jle
int3
subb
mov
pop
mov
cmp
adc
cmp
fimull
pop
jae
out
psadbw
into
mov
xchg
outsl
in
dec
inc
jne
jae
loope
cmp
dec
in
mov
jl
cmpsb
mov
jmp
xor
push
fildl
aad
popf
lea
or
aad
sub
je
scas
in
push
xchg
dec
cld
lods
mov
cmp
gs
in
daa
dec
mov
push
call
jge
mul
fwait
xor
cmp
xor
push
lods
out
push
mov
rclb
clc
push
notb
or
test
loope
ss
shlb
jmp
cmp
dec
xor
push
jmp
pop
enter
sub
shrb
jno
mov
xor
xor
daa
and
push
sub
aas
cmp
insb
gs
mov
pop
xchg
repz
add
bound
je
ds
cld
sub
call
xchg
or
insb
jbe
sbbl
sub
xchg
daa
push
adc
adc
lods
jmp
int
out
pusha
jo
imul
xchg
or
ror
jnp
data16
jl
fistpl
mov
xchg
ja
pusha
jbe
popf
jae
ret
push
shl
sahf
sti
adc
in
xor
loopne
dec
insl
inc
dec
and
xchg
subb
sbb
lret
movsl
stos
mov
push
jo
pop
xchg
test
arpl
mov
imul
xor
xchg
mov
imull
pop
jbe
jge
out
in
pop
pop
shl
std
xlat
mov
cmovl
dec
cmp
inc
hlt
out
xorb
bound
loop
repz
sbb
xor
in
cltd
pusha
out
adc
aad
nop
and
jb
and
adc
bound
mov
inc
faddp
insb
or
dec
adc
pop
aas
repnz
or
xchg
ss
mov
cmp
hlt
mov
adc
out
adc
movsl
cmp
popa
loope
xchg
repnz
mov
into
xchg
int
outsb
inc
mov
and
mov
pop
test
inc
scas
cmpl
inc
and
jnp
add
and
rorb
cmp
fucom
or
popf
add
notb
arpl
sub
xor
sti
or
mov
inc
stc
mov
lret
cmp
inc
adc
imul
leave
push
add
pop
ja
push
mov
clc
mov
mov
inc
movsb
and
rol
push
add
push
mov
iret
rorl
out
sub
fwait
sbb
xchg
test
daa
add
cmpsl
popf
jle
xchg
inc
jmp
pop
roll
sub
std
test
push
sar
cmp
push
stc
jns
ss
xchg
rorb
xchg
pop
repz
push
jmp
xor
cmp
mov
aas
ret
pop
push
lods
push
cmpsl
subb
xor
sbb
dec
fnstsw
loope
orb
mull
fmul
out
push
inc
sub
adc
jle
fdivrp
iret
xchg
shlb
xlat
movsb
ljmp
sbb
movsl
pushf
in
xor
cmc
sbb
inc
lcall
mov
out
leave
mov
mull
jnp
xchg
sub
and
mov
push
adc
push
push
repnz
mov
jle
daa
xorl
xor
call
jl
mov
sub
or
ficompl
jb
mov
cmpsb
add
mov
and
inc
pop
inc
jl
jnp
loope
cmp
out
cmp
push
dec
cmc
mov
ja
xchg
xchg
inc
push
mov
sbb
movsb
bound
cmp
mov
xchg
clc
pop
mov
sub
fnclex
cmp
or
and
mov
daa
lcall
leave
mov
sub
and
xchg
pop
dec
fcoms
pusha
xor
adc
nop
push
lods
xchg
mov
xor
rorl
aam
adc
in
xchg
popa
ljmp
dec
dec
aaa
cmc
call
xchg
mov
dec
aad
fwait
pop
das
mov
orl
cwtl
bnd
lock
ja
cmp
sbb
sti
in
mov
std
es
mov
test
rcrb
dec
popf
mov
cld
dec
jae
jbe
mov
sub
sbb
fucomi
pop
cld
jp
sbb
enter
pop
sbb
xlat
mov
jmp
fmuls
xorb
inc
out
adc
pop
sbb
push
adc
mov
call
sbb
imul
add
mov
sbb
add
inc
adc
mov
or
lcall
push
mov
dec
adc
mov
cltd
cmp
jae
pmaxsw
out
xor
mov
xor
cld
push
jnp
gs
das
or
xchg
and
loopne
sbb
or
sti
es
jne
repnz
mov
and
inc
stos
inc
out
decl
push
sub
sahf
xor
and
mov
adc
sub
rolb
or
xchg
xchg
in
or
lds
iret
or
cmp
shl
cmp
lods
lret
jb
insl
out
loop
push
icebp
shll
add
dec
outsb
lods
jp
insb
fsubrs
aas
mov
imulb
stos
int
xor
repnz
xchg
xor
xor
lcall
jecxz
lods
lods
arpl
in
or
test
dec
clc
je
insb
push
enter
je
jnp
cwtl
clc
jle
mov
sub
loopne
divb
std
push
out
jbe
sbb
jo
mov
shr
sbb
movsb
xchg
push
sub
or
divb
xchg
notl
out
pop
cmc
pushf
imul
leave
dec
stos
lret
sub
cmpsb
cld
lea
dec
push
in
dec
jo
push
cmp
aam
fcom
jmp
aam
or
scas
pop
jecxz
xor
jae
stos
scas
mov
pop
test
add
xchg
jecxz
movl
inc
or
imul
adc
sbb
sbb
jp
bound
inc
sub
lcall
aas
push
aam
push
aam
sahf
lcall
adc
hlt
dec
or
mov
mov
push
shlb
stos
test
arpl
mov
mov
dec
sub
stos
jg
cld
enter
stos
mov
stos
stc
cmpb
cwtl
sub
inc
test
stc
inc
sub
lods
dec
jne
xchg
jmp
inc
adc
dec
lahf
mov
dec
lcall
scas
push
push
clc
loopne
scas
mov
adc
cs
js
stos
push
add
sti
das
xor
or
mov
std
aaa
scas
jmp
pop
pop
pusha
test
xchg
or
daa
jo
movsb
pop
sarl
jge
andb
adc
fs
repz
dec
cltd
psrld
push
stos
or
mov
push
shll
inc
pop
mov
or
ljmp
mov
roll
movntps
je
or
sbb
arpl
cld
xor
dec
outsl
push
dec
xchg
lods
mov
mov
xor
lret
cmp
jle
push
adc
divps
lds
and
push
cmp
popf
out
cld
sbb
dec
addr16
pop
sbb
gs
and
dec
cwtl
sub
sbb
mov
pop
mov
or
enter
dec
pop
xchg
and
daa
adc
xor
or
adc
cld
out
es
xor
xlat
insb
add
xor
dec
nop
notb
stos
mov
ja
out
imul
jb
ret
push
push
ljmp
sarl
dec
popa
cwtl
cmp
iret
xchg
int3
insb
pop
adc
adc
in
das
push
jl
add
into
adc
and
int3
das
out
in
mov
nop
push
dec
sub
test
pop
sbb
rcr
stos
xchg
es
jae
lcall
push
repnz
sbb
push
mov
mov
arpl
jle
pop
rcr
add
lret
adc
cli
pop
fidivl
call
mov
insl
lea
jns
mov
lea
les
sbb
test
dec
and
sub
fst
fstl
push
inc
outsb
jmp
lcall
dec
jns
daa
mov
jmp
mov
and
mov
ds
fsubp
pusha
push
lods
cltd
outsl
sub
dec
push
aad
add
fwait
inc
push
dec
mov
cmp
xor
jl
push
jae
scas
xchg
jae
push
push
mov
inc
mov
and
inc
data16
enter
xchg
cmp
mov
pop
mov
xor
dec
cmc
xor
jae
or
out
divb
cmp
test
jne
mov
testb
push
inc
adc
in
fsubl
sub
imul
xorl
xlat
mov
rorl
dec
pop
adc
gs
subl
xchg
packssdw
xor
loop
jmp
mov
lea
mov
jl
mov
cli
ret
cmp
sub
cli
fwait
sbb
and
jle
mov
roll
and
sbb
test
clc
sar
cmp
pop
push
scas
orl
scas
cwtl
add
fucomp
push
into
push
in
adc
jmp
sub
push
pop
inc
pop
cmp
dec
addr16
dec
and
dec
rorb
sub
rolb
add
dec
mov
int3
daa
mov
push
outsb
xchg
inc
mov
sub
inc
mov
push
ficompl
in
pop
mov
sti
test
in
push
push
hlt
xchg
repnz
ret
jne
xchg
pop
mov
cli
loopne
fildl
je
insl
lret
cmp
jmp
in
push
pop
pop
xchg
sbb
jp
jo
stos
add
int3
inc
jne
sbb
imul
or
mov
sub
mov
dec
mov
adc
lock
push
lcall
outsb
sub
imull
dec
insb
pop
das
cvttps2pi
mov
in
sahf
dec
pop
lret
flds
push
dec
cmp
arpl
fadds
jle
jmp
sub
dec
cltd
out
insl
sub
adcl
ds
xchg
ret
frstor
sbb
or
in
dec
push
push
std
mov
xor
rol
jl
shll
stc
inc
cmc
dec
daa
sbbl
inc
out
pop
dec
addb
clc
xlat
pop
loopne
lods
jp
mov
es
push
imul
sbb
pcmpgtb
fdivs
les
ret
pop
addb
adc
jge
and
xchg
xchg
repz
xor
mov
and
and
inc
xchg
stos
flds
and
mov
lahf
ret
cmp
push
repz
sbb
ficoms
inc
sub
leave
sub
jne
jmp
cmp
in
ljmp
shll
out
adc
iret
jno
frndint
mov
test
jecxz
xor
mov
into
pop
test
pop
sub
shl
fcomps
scas
xor
imul
push
ret
shl
sub
repz
insb
in
loope
imul
mov
mov
cld
cmp
mov
cmpl
pop
in
repnz
push
push
xchg
sub
out
jmp
mov
inc
push
xor
jbe
in
and
clc
fs
fxch
daa
or
test
pop
lods
add
aam
ss
and
insl
mov
out
xor
jecxz
andl
or
mov
sbb
movsb
and
jne
gs
push
xor
rolb
das
repnz
adc
aad
enter
pop
lds
movl
sbb
jmp
jne
scas
add
js
jmp
stos
pop
inc
jg
sub
mov
fstl
mov
jmp
fsub
jle
dec
rorb
mov
pop
cmp
add
test
xorb
out
int3
mov
arpl
out
mov
cmp
stos
and
cs
adc
shll
push
out
popf
mov
int
adc
xchg
arpl
cmc
adc
icebp
lahf
sti
shll
sarb
add
mov
cmpsl
fcom
rcl
sub
sub
scas
call
mov
sbb
push
mov
std
in
mov
add
pop
incb
xchg
shrb
mov
pusha
xchg
push
fs
into
jecxz
imul
inc
lock
fwait
movsb
sti
xchg
in
xor
fldenv
pop
pop
les
sub
movsl
or
into
sub
xchg
scas
dec
pop
lcall
xchg
lcall
sbb
pop
cmp
shlb
testl
mov
jp
inc
sbb
mov
inc
test
jg
xor
repz
stos
and
jecxz
push
in
and
sarb
mov
xor
dec
adc
fisubs
rcrb
out
or
push
stos
adc
jo
sbb
mov
aam
mov
jb
push
xchg
ljmp
lock
jb
add
sbb
in
mov
jbe
psllw
stos
push
jae
out
loopne
fcomip
mov
gs
nop
int
push
mov
adc
andb
int
sti
cmp
xor
ret
sbb
loop
push
xchg
sub
push
push
icebp
add
jne
push
inc
testl
les
sarl
loop
mov
in
cmp
add
jne
dec
push
push
mov
adcb
outsb
testl
ret
and
inc
mov
mov
jns
mov
inc
test
in
inc
lret
test
in
pop
xor
leave
add
scas
mov
dec
enter
fstl
mov
xlat
mov
in
xchg
adc
fimuls
aas
pop
mov
out
stc
mov
repnz
fstl
sahf
jo
jae
mov
xchg
fisttpll
jmp
sub
push
xchg
cmpsl
int
push
daa
sbb
mov
in
jo
je
jg
or
testb
jmp
adc
sti
je
imul
mov
daa
addb
mov
or
test
sbb
xchg
xchg
mov
loop
mov
and
dec
ret
xchg
xchg
cmp
out
leave
sub
inc
rorl
sub
cltd
jg
in
inc
mov
inc
jbe
sub
icebp
pop
loop
xchg
mov
scas
rcl
dec
scas
xchg
xchg
pop
fisubrs
sbb
fistps
outsb
sbb
clc
xor
lds
mov
mov
ja
iret
inc
mov
stos
mov
sahf
or
addl
inc
mov
ret
ja
rorl
push
jge
inc
xchg
mov
outsl
xchg
mov
or
out
aas
cmovno
cltd
mov
mov
stos
arpl
inc
jmp
mov
dec
mov
gs
or
jo
ficomps
dec
imul
ficoms
xchg
adc
adc
sub
mov
mov
lock
mov
shr
pusha
pop
lcall
lock
adc
rcr
leave
pop
and
data16
or
xchg
or
mov
repz
mov
in
into
inc
popa
mov
jae
addr16
out
loope
notl
xlat
or
dec
aaa
xchg
and
dec
into
pop
jmp
mov
mov
xor
push
aad
fcomps
in
dec
pop
outsl
je
hlt
das
cwtl
outsb
mov
jno
insb
adc
dec
inc
enter
incb
sub
pop
sti
ljmp
mov
jno
pop
xor
faddl
xchg
lret
push
icebp
pop
push
lret
jmp
mov
push
cmp
push
stos
xlat
sub
lods
movsl
in
js
cwtl
push
mov
push
and
mov
inc
mov
lods
push
ret
push
mov
inc
xor
or
mov
popf
roll
xor
js
pop
notb
aaa
adc
jmp
and
es
jae
adc
jmp
stc
xor
sbb
in
or
xchg
fcomip
mov
push
addr16
jmp
jnp,pn
icebp
jae
xchg
dec
jno
sub
inc
mov
and
jp
mov
and
flds
int
or
adc
clc
jae
add
stos
jecxz
sqrtps
in
dec
filds
pop
inc
shlb
roll
push
inc
or
lds
mov
dec
cli
jg
ffreep
xchg
aad
sub
in
lods
mov
sub
mov
repz
push
xchg
xchg
xorl
push
mov
xchg
inc
inc
mov
lock
xor
pop
mov
fsubs
imul
dec
test
xchg
cmp
xchg
mov
lahf
inc
mov
cmp
mov
insl
or
ljmp
shll
add
pop
decb
sti
inc
int3
and
or
testl
mov
push
daa
fcoms
lahf
mov
xchg
inc
in
cmc
jbe
jg
pop
sbb
je,pn
cli
cmp
iret
inc
nop
test
cltd
mov
dec
arpl
dec
dec
pop
out
inc
aam
cmpsw
mov
mov
mov
xor
in
sahf
mul
lea
adc
subb
and
and
adc
push
mov
xchg
and
jp
push
xchg
sbb
mov
lcall
pop
mov
mov
fldl
out
insb
sbb
mov
pusha
out
mov
ljmp
or
loope
test
test
or
jmp
inc
insl
imul
sbbb
loop
add
or
outsl
mov
push
fisttps
pop
pop
loop
mov
mul
and
jne
iret
jo
or
jmp
mov
push
lods
sarb
sbb
xchg
jno
shlb
ret
sub
es
fsubrl
popa
outsb
pop
mov
fstpt
out
xor
jno
rcrl
pop
cwtl
es
mov
lock
pop
stos
xor
sub
push
loopne
mov
cli
inc
lds
xchg
fldenv
jmp
idivb
inc
push
xor
lods
stos
xchg
adc
aad
push
mov
or
dec
es
sbb
jo
pop
mov
push
movsb
mov
inc
pop
in
icebp
mov
push
inc
vmovlps
and
jecxz
je
add
arpl
aad
and
jne
les
push
mov
orb
jl
mov
cmp
mov
repnz
insb
scas
push
dec
cltd
pop
test
pop
xlat
push
xor
mov
in
pop
fimuls
xor
ret
push
xor
dec
les
add
jl
fs
testb
aad
sbb
jp
mov
inc
and
inc
sbb
ja
lcall
add
ror
imul
add
xchg
sub
or
jg
in
jmp
rolb
cmp
xchg
lret
xlat
iret
adc
ret
dec
adc
sbb
sti
pop
xlat
popf
xchg
addr16
sub
shll
push
pop
movsb
in
pop
imul
int
fsubrs
sub
arpl
pop
test
mov
or
xor
push
out
mov
adc
gs
inc
ret
into
add
sub
mov
or
and
out
pop
sbb
mov
dec
ror
xor
testl
subl
dec
lret
mov
jne
mov
cmpsb
mov
and
pop
inc
mov
ret
test
stc
arpl
sbb
pop
add
mov
push
mov
pminub
mov
jecxz
push
rorb
mov
sbb
xchg
pop
cmp
fimull
mov
es
lcall
xchg
orl
insl
lock
in
gs
jecxz
lret
ror
shll
test
jp
xor
fadds
mov
lock
and
sbb
into
adc
or
pop
jg
lock
mov
enter
add
repz
inc
jnp
or
clc
and
mov
or
push
imul
je
sub
xlat
pop
pushf
into
pop
cli
insl
xor
lahf
mov
adc
mov
cltd
cmp
stos
fs
inc
inc
fst
adc
pushf
pop
mov
mov
push
in
mov
or
mov
mov
sbbl
adc
cmpsb
mov
data16
popa
popf
fs
imul
mov
add
pop
adcb
lahf
inc
sbb
inc
nop
lret
nop
out
xlat
xchg
test
or
fs
fwait
cli
lea
test
add
cmpsb
mov
sub
lret
and
fists
setns
jo
ljmp
dec
sbb
mov
cmp
sub
loop
arpl
test
mov
or
orb
mov
xchg
dec
fstpl
sub
xor
sbb
ficompl
enter
pop
hlt
inc
and
and
and
jmp
roll
cmpsl
xor
mov
and
icebp
scas
or
jmp
xor
out
sub
and
arpl
sub
out
dec
inc
push
jb
pop
ss
loop
stos
adc
stc
into
push
mov
push
xchg
inc
xorb
push
rcll
and
popa
sub
repnz
xchg
loope
push
fiadds
and
lahf
stos
fucomi
leave
push
insl
es
mov
cmpsb
fildl
mov
mov
lret
daa
rcll
test
out
or
mov
mov
sbb
cmp
gs
je
mov
insb
lcall
out
daa
adcl
mov
mov
movsb
jg
cld
sub
xor
insb
dec
adc
push
or
nop
fsubrl
mov
inc
pusha
inc
aad
test
cs
mov
hlt
lock
insb
xchg
dec
lock
jmp
mov
lock
pop
in
rcll
in
sbb
cwtl
cmp
pop
fldl
lahf
insl
dec
nop
aas
inc
sbb
fnstsw
in
mull
je
test
je
scas
dec
addr16
xor
mov
sti
cmp
or
pop
and
dec
sahf
mov
or
sbb
sbb
lcall
popf
ds
out
mov
push
popw
pop
addr16
out
cmpsl
lret
pop
es
xlat
ret
jg
mov
into
and
loopne
cltd
mov
outsl
adc
jo
sub
dec
or
inc
push
xor
lock
out
dec
or
push
and
popa
sub
dec
cmpsl
outsb
sub
mov
xchg
and
jbe
in
rcll
push
mov
cmpsb
mov
pop
adc
dec
mulb
je
fsts
negl
gs
and
pop
xchg
mov
loope
data16
mov
aaa
cmp
jb
shrl
in
mov
pop
pop
adc
cmp
lahf
addr16
mov
sub
scas
mov
nop
dec
cmp
int
mull
push
jmp
movsl
push
cmp
test
jge
mov
ret
lahf
rcl
dec
jmp
mov
xchg
je
mov
xchg
jecxz
shll
pop
icebp
mov
mov
push
xchg
cmpsb
adc
aaa
aad
push
or
insb
shrb
test
jmp
jae
lds
scas
mov
dec
incb
test
or
jno
pushf
mov
js
push
rcll
rcl
sbb
push
mov
std
insb
in
jmp
push
lahf
push
jns
int
loop
xor
mov
add
xchg
es
adc
add
xchg
sbb
lret
popa
bnd
pop
jbe
cmp
fcoml
pushf
adc
add
outsl
push
daa
adcl
mov
inc
ficomps
ret
imul
and
mov
push
ljmp
jg
popa
pavgb
dec
add
fistps
mov
dec
add
inc
xchg
inc
icebp
les
adc
mov
xor
and
sbb
int3
lahf
into
addr16
in
sahf
add
inc
in
pop
jmp
pushf
inc
mov
and
push
outsl
jp
xor
mov
pop
push
sti
xor
lds
dec
mov
imul
shll
jmp
mov
sub
stos
dec
arpl
lods
lret
xlat
pop
loope
add
push
addr16
xchg
sbb
jae
fwait
adc
add
sub
inc
add
push
pop
lds
cmp
or
mov
shll
xchg
sub
lahf
sub
stc
rcrb
aaa
and
mov
ret
push
in
pop
lock
push
xor
xor
jns
push
test
sub
call
inc
cwtl
cmp
sub
sahf
jns
hlt
leave
inc
jne
loope
jbe
inc
sbb
je
mov
daa
adc
xchg
imul
enter
sub
and
cmp
cmc
outsb
mov
mov
cmp
pop
xor
push
nop
mov
sbb
dec
std
push
in
pop
sarb
adc
mov
mov
push
outsl
push
pop
dec
adc
sub
mov
popf
sub
push
xor
test
aaa
jne
test
in
cmp
testl
mov
add
pusha
inc
pop
push
or
jp
pop
pop
xchg
mov
in
repz
addr16
add
cmp
out
cs
xchg
mov
cmp
jnp
arpl
inc
movsl
mov
xchg
scas
lret
roll
pop
mov
lea
sub
xchg
push
lret
sub
shrb
mov
fists
outsb
sahf
mov
jmp
jno
stc
or
jo
sub
lahf
and
test
leave
jecxz
mov
daa
mov
xchg
inc
setns
xchg
test
fs
jns
xchg
daa
mov
jge
je
dec
xor
inc
or
cmpsb
aas
adc
xor
popa
and
addr16
into
fidivs
ds
dec
sub
ret
or
not
sbb
clc
lahf
or
in
pop
popa
cltd
into
psrld
loopne
add
and
push
and
rclb
cwtl
clc
out
gs
fbld
push
adcb
jb
fiaddl
add
test
or
loop
cmc
test
mov
shlb
sub
les
xor
daa
outsl
jge
mov
aaa
mov
outsl
jmp
hlt
or
and
out
push
pop
jne
sub
push
mov
and
addr16
cmpsl
out
in
movb
cmp
leave
sbb
lahf
mov
das
pop
cmp
pop
cmp
addr16
aaa
test
jne
stc
cmp
mov
push
xor
in
int3
mov
std
ret
clc
dec
js
jbe
aas
lahf
fbstp
outsb
mov
mov
or
stc
pop
out
pop
int3
mov
sub
jae
jp
nop
sahf
jecxz
cld
xchg
add
pop
jbe
cltd
or
xchg
push
lret
push
lock
into
in
das
sub
xchg
adc
xchg
sbb
sub
int
add
xchg
push
mov
popa
test
dec
push
call
int3
dec
xchg
add
aas
loop
lahf
push
mov
sarl
inc
test
xor
cmpsb
icebp
dec
cmp
lcall
xchg
and
fnsave
stc
enter
xlat
dec
xchg
gs
shl
xchg
arpl
sbb
sub
fcmovnb
dec
sti
inc
popf
mov
push
and
fistpl
mov
sarl
cmp
dec
push
xchg
imul
jo
jecxz
mov
and
pushf
cld
popa
aaa
fmul
pop
ficoml
dec
ret
xorb
mov
push
pop
and
or
mov
sarl
cmp
cmp
cmc
mov
mov
movsb
mov
mov
out
push
or
cmpsb
xchg
cwtl
rcrl
xor
out
int
xor
push
fldt
ljmp
push
push
mov
add
out
mov
sub
inc
inc
pushl
std
insl
adc
and
fstl
in
and
pushf
loop
fadds
pop
ja
mov
imulb
aaa
sub
ret
sub
pusha
loop
sbb
xchg
or
psubq
xchg
jb
sbb
inc
mov
mov
mov
xchg
shlb
jae
mov
sahf
cmp
and
shrl
popf
sti
mov
mov
pop
and
aaa
add
adc
push
adc
ret
frstor
stos
add
pop
js
out
dec
ss
or
sub
nop
in
into
loop
mov
sub
sbb
xor
mov
mov
out
mov
das
ds
fsubrl
and
loopne
les
push
pop
mov
repz
mov
inc
sub
cmp
hlt
daa
ret
xchg
mov
cmp
test
dec
das
rcrb
push
scas
cmpl
jno
cmp
ds
mov
jp
aam
xchg
jae
das
scas
xchg
pop
aaa
pop
cmpsb
ds
pushf
enter
lahf
and
or
dec
jae
mov
mov
mov
and
jg
bound
add
xchg
vrsqrtss
test
mov
pusha
dec
dec
and
shl
ja
push
aad
sub
mov
call
fistpl
pop
adc
mov
mov
bound
mov
jae
sub
and
bound
ret
ljmp
rcll
aad
test
fnsave
jae
hlt
and
ja
in
pop
fidivrs
add
mov
and
pop
ss
lret
mov
lock
stc
xor
fsubrl
jp
mov
pop
push
xchg
cmp
ja
icebp
adc
sbbb
and
les
mov
dec
sub
xor
scas
inc
notl
test
pop
xor
pop
or
dec
xlat
mov
push
dec
mov
mov
push
mov
dec
rcr
push
movsl
add
js
jge
in
mov
dec
push
stc
sbb
movsl
fimuls
mov
jbe
mov
mov
push
pusha
or
pop
orl
frndint
push
repz
xchg
xchg
sub
sub
adc
and
push
push
repnz
pusha
rcrl
and
xchg
daa
imul
mov
imul
in
adc
popl
bound
xchg
js
loop
mov
or
cmp
push
mov
push
int3
sbb
dec
push
pop
js
mov
push
scas
push
push
jne
inc
cmp
push
cmp
xor
add
sahf
jp
sbbb
lret
xor
cmp
mov
repz
lods
adc
mov
jecxz
movsb
hlt
pushf
scas
cmp
xlat
popa
pop
jmp
add
add
test
jecxz
scas
icebp
mov
jp
pop
xchg
xchg
or
adc
cli
dec
rol
or
and
js
xor
pop
repz
lret
data16
mov
xchg
mov
mov
sbb
push
mov
push
push
sti
fmuls
fsubr
stos
int
mov
test
fcmovu
xchg
out
mov
or
push
inc
clc
adc
and
sub
into
dec
pop
xor
cmc
push
push
adc
or
loopne
jg
xchg
int3
mov
cld
pusha
add
mov
bound
fsubrl
pop
shlb
and
mov
add
dec
cmpsl
add
add
pushf
hlt
ret
xchg
jge
sub
out
cmp
pop
pop
dec
ja
and
mov
fistpll
jecxz
dec
test
shl
or
out
popf
in
pop
test
fmul
pop
out
sub
aaa
rol
cmp
test
add
dec
aaa
adc
cld
fisttpll
push
or
addl
xchg
mov
pop
out
inc
adc
addr16
fiadds
and
inc
add
sub
loopne
int3
jmp
fucompp
fstps
and
notl
xorl
in
pop
int
pop
std
in
push
cmp
das
in
sahf
push
pop
ds
scas
and
mov
cmpsl
addr16
in
andl
out
fdivrl
hlt
movb
fwait
imul
push
cmp
insb
or
cmp
cmpsb
xor
pop
insl
std
lods
jmp
lods
push
xchg
loop
push
in
lahf
sti
dec
decl
sti
inc
gs
mov
xchg
mov
stc
sub
lret
imul
loop
jp
mov
push
pop
scas
clc
push
shl
int3
pop
jge
ret
lahf
mov
addr16
jo
dec
sbb
cmpsb
mov
mov
or
mov
ds
xchg
inc
out
push
mov
jb
sbb
adc
outsb
popf
pop
loop
addr16
fldlg2
roll
hlt
fxam
imul
lahf
mov
jmp
mov
or
icebp
ja
inc
mov
inc
shl
popa
in
and
xor
shll
es
repz
pop
sbb
jnp
test
add
add
lods
xchg
lret
mov
ljmp
int
jmp
leave
out
and
mov
sarb
cmp
fildl
inc
pop
divb
lret
mov
pushf
iret
fistpll
jae,pn
mov
fisttps
mov
dec
cltd
mov
xchg
pop
hlt
mov
pop
mov
test
adc
sti
pusha
out
daa
stc
jg
pop
push
cld
test
mov
test
cwtl
add
mov
shl
push
lea
add
mov
adc
mov
lds
arpl
leave
clc
adc
mov
adc
inc
pop
add
out
mov
fmuls
popa
adc
bswap
xchg
pop
jg
fmuls
and
push
inc
jmp
out
subl
into
cmc
aam
xor
mov
cmp
push
mov
inc
fwait
mov
xor
inc
cmpsb
adc
and
jnp
stos
cwtl
adc
pop
addl
cltd
cmp
jbe
sahf
in
fistpll
add
sub
data16
or
xchg
lahf
movb
inc
insb
ja
call
inc
daa
and
sar
sbb
nop
push
js
pop
lret
enter
ret
fsubs
popa
dec
in
jae
pushf
mov
or
insb
out
lods
icebp
dec
fs
in
out
mov
push
jo
pop
mov
and
cmpsl
inc
lods
xchg
outsb
pop
out
fxch
ret
push
pop
jae
sbb
xchg
das
or
mov
decb
fadds
lret
scas
cmp
test
sbb
test
mov
punpckhwd
andl
mov
jbe
ss
jmp
enter
mov
test
cmp
sub
mov
inc
pop
lea
fwait
and
add
xchg
mov
pop
xor
pushf
push
lea
inc
push
xchg
or
inc
xor
arpl
repnz
into
sub
loope
xor
imul
std
inc
adc
fnstcw
fistpll
jne
push
bound
clc
fwait
rcll
lahf
sub
lahf
xor
lahf
orb
popf
popf
xchg
ja
push
jge
scas
test
push
rol
jno
jne
lret
jb
pusha
inc
xchg
xchg
bound
xor
xor
sbb
fincstp
xor
imul
cmp
clc
dec
xchg
jno
outsb
clc
sbb
aad
dec
gs
bound
and
notl
xorb
xlat
jge
dec
rcrl
xor
jl
cmp
mov
mov
pop
push
imul
pop
jp
in
sub
sub
xchg
mov
dec
jne
pop
inc
xchg
in
dec
and
jl
ficompl
push
dec
xor
out
xor
cltd
pop
mov
jmp
addr16
or
out
mov
or
aas
test
outsb
add
and
add
jb
sti
js
out
cmc
pop
xor
rcrb
lret
aaa
xchg
negl
aaa
sahf
cmp
mov
xor
and
xchg
movsl
lock
pop
pop
stos
xlat
inc
repnz
inc
sahf
dec
push
je
jb
adc
jmp
daa
mov
pop
jae
mov
dec
shrb
push
lret
test
push
ficoms
dec
stos
mov
xor
add
push
pop
pop
xor
xor
nop
insl
cld
jl
mov
sub
in
xor
scas
sub
push
jnp
sarb
fcoms
test
add
lods
mov
gs
fisubrl
and
pushf
sbb
aaa
div
xchg
xchg
sub
int
pop
mov
and
les
movsl
pop
into
mov
das
mov
cmp
fstpl
insb
push
lock
icebp
sti
push
out
call
dec
addr16
add
sti
push
out
outsl
push
mov
imul
bnd
mov
rcrl
pop
ljmp
gs
add
pushf
insb
cld
pushf
fsubr
lods
in
fnsave
xor
imul
out
imul
fmull
xor
sti
lcall
aad
mov
lret
pop
jo
adc
push
push
sbb
jae
jmp
xchg
adc
or
and
cmp
movl
leave
sbb
push
insl
mov
jb
mov
cmp
loope
adc
xchg
into
push
aaa
outsb
sub
or
xchg
add
push
xor
stos
hlt
mov
sahf
push
jno
cmp
dec
imul
test
mov
and
or
mov
mov
xor
std
xchg
int3
rolb
dec
in
push
sbb
cmpsb
cmp
or
sub
dec
inc
push
into
and
lret
fistl
push
push
mov
les
sti
andl
push
inc
ret
mov
std
insl
cmp
jns
leave
jae
push
cmp
inc
lods
add
in
mov
mov
add
adc
inc
sub
sti
xchg
mov
cmp
sub
mov
gs
in
jb
mov
xchg
and
adc
shrl
xor
push
mov
dec
xchg
xchg
adc
mov
lock
add
adc
loop
mov
insl
xor
cmp
sbb
add
std
mov
xor
aaa
add
xchg
int
xchg
ja
push
jg
mov
inc
dec
lahf
testl
mov
push
test
mov
xchg
mov
lret
imul
lock
and
sbb
cmp
pop
mov
movsb
shrb
les
sub
lock
jge
jl
cmp
push
ret
add
inc
scas
mov
testl
pop
cmp
lcall
cmpsl
addr16
pop
xor
ds
dec
dec
fsubr
jns
jns
arpl
mov
push
pusha
leave
test
mov
pop
shlb
loope
cwtl
ficoml
mov
fcomps
aaa
xor
or
jne
mov
ljmp
and
lock
jb
vmwrite
mov
out
rcrl
rorb
lcall
les
mov
sbb
cmpsl
add
or
aaa
lret
mov
mov
scas
cwtl
test
xchg
mov
cmp
pusha
mov
sub
sbb
rorb
dec
cli
or
fcmovnb
shr
imul
jno
pop
jge
mov
outsl
faddl
or
xchg
mov
jl
rol
adc
jge
mov
arpl
push
sbb
mulb
mov
fdivrl
xchg
inc
fistps
push
push
mov
cmp
sub
cmp
mov
movsb
cld
mov
add
and
inc
inc
push
mov
pop
pop
outsl
aam
fisubrl
movsl
in
mov
pop
dec
in
bound
jbe
sub
imul
xchg
nop
sbb
mov
loop
pop
idivl
in
mov
repnz
jbe
push
xor
std
ja
ljmp
leave
and
maxps
sbb
pop
pcmpeqb
pop
add
adc
lea
add
mov
roll
ficompl
loopw
flds
xor
pop
or
adc
enter
mov
out
dec
stos
mov
sub
test
mov
lret
adc
faddl
mov
fadds
or
cwtl
inc
sub
cwtl
cmp
scas
mov
mov
adc
push
cmp
insl
hlt
popf
rcll
mov
clc
dec
cmpb
test
sub
pop
adc
add
cmc
add
loope
lods
cmp
and
fmul
and
popa
fidivrl
sbb
push
test
and
push
push
inc
imul
push
or
xchg
dec
les
or
and
xchg
xor
xchg
mov
xchg
bound
or
gs
mov
mov
xor
aad
repnz
adc
sbb
ret
scas
sbb
dec
movsl
and
jns
lock
cmp
loop
inc
scas
lret
push
push
stc
leave
std
jnp
jae
add
cltd
cltd
adc
insb
pop
scas
out
xchg
jge
leave
std
mov
ret
jne
mov
cmp
push
insb
fmull
out
cmc
jmp
or
scas
adc
rclb
enter
stos
xor
iret
jle
mov
adc
scas
sti
nop
mov
outsl
inc
and
sub
adc
out
cmp
xchg
out
add
repz
out
jle
aaa
inc
mov
mov
xchg
lret
xchg
mov
pop
jg
add
mov
mov
jp
lahf
nop
xchg
fwait
mov
xchg
pop
scas
pop
repz
sbb
and
sbb
or
or
jl
mov
mov
in
in
dec
lock
pop
pop
mov
sub
jnp
jge
xor
jecxz
dec
aas
push
xor
and
adc
fiaddl
or
sub
sub
push
sti
pop
pop
frstor
cmp
inc
popa
sbb
fcom
mov
push
aas
shl
gs
cli
popf
cltd
adc
cmp
jecxz
push
cmp
sub
cmc
subl
mov
inc
sbb
test
andb
xchg
jl
dec
xchg
lahf
dec
ret
push
cmpsb
jg
push
loopne
push
dec
jge
and
sbb
and
mov
mov
or
ret
stos
mov
sbb
ret
inc
pop
cmp
add
fs
mov
mov
leave
out
cmc
out
repnz
aas
xchg
and
and
sar
stos
push
imul
lret
stc
or
jg
mov
daa
mov
out
add
imul
lcall
xchg
adc
cmpsl
aam
int3
adc
jp
aam
pop
lds
test
lods
jle
fbld
lea
and
mov
sbb
mov
add
mov
pop
adc
shll
pop
ret
or
adc
pusha
xchg
pop
outsl
mov
inc
add
data16
xchg
cmp
cmp
aaa
push
add
push
push
jo
sub
add
add
or
sahf
xchg
stos
xor
test
or
stc
pop
xchg
push
addr16
mov
jg
push
out
fsubrp
sbb
add
jl
fbstp
adc
subb
es
sbb
fldt
jl
js
push
fs
ret
inc
pushf
adc
pop
orl
jns
movsl
insb
imul
stc
xchg
gs
shrb
arpl
cmp
pminub
sbb
jp
lds
inc
pusha
mov
mov
in
sbb
jne
xchg
out
movsb
xchg
jno
negb
and
test
data16
push
push
out
pop
mov
xor
and
lock
mov
mov
xchg
inc
xor
fldenv
cmp
fnstcw
movsb
ret
movsl
sbb
daa
pop
mov
jg
jge
cmovl
shrb
cwtl
push
mov
fmulp
pop
movsl
popf
xor
rorb
lods
cmp
in
popf
pushf
push
mov
and
or
xchg
pop
cltd
int3
ss
into
std
jnp
sbb
xchg
jno
add
fists
inc
out
test
out
and
and
inc
inc
stc
sbbb
ficomps
sub
or
out
adc
xlat
mov
lcall
imul
xor
adc
cli
outsl
sbb
mov
adc
test
inc
pop
fistpll
aad
cld
shl
pop
out
out
xchg
aaa
push
dec
add
xlat
int
sbb
mov
lods
mov
add
movsb
mov
inc
adc
jne
test
or
xchg
in
push
sahf
push
insl
mov
and
pop
sub
jg
rep
mov
test
push
test
stos
shrb
inc
rcrb
xor
jg
adcb
fwait
imul
add
ret
insl
cmp
inc
adc
and
aaa
jge
negb
push
out
cli
in
or
leave
xchg
dec
cmp
outsb
dec
cld
pop
and
sti
lods
cmp
inc
shlb
cmp
pop
cltd
inc
test
nop/reserved
dec
xor
subl
sti
movl
in
sub
mov
lcall
mov
mov
cmp
cmovge
xchg
or
pop
add
jmp
shl
mov
push
rorl
rorb
mov
jg
sahf
mov
bound
push
pop
add
popa
data16
imul
or
adc
xchg
aas
add
imul
lods
cmp
and
sbb
inc
sub
lds
and
mov
pusha
imul
cwtl
imul
fs
xchg
adc
roll
mov
loope
jge
scas
jbe
cwtl
jmp
test
cli
lds
pusha
add
xlat
hlt
daa
mov
pop
call
sub
mov
fildl
xor
fbld
fcomip
adc
mov
mov
pusha
lock
stc
mov
pusha
add
out
outsb
adc
jge
xchg
testb
mov
psubw
movsl
out
xlat
adc
adc
std
lock
insb
jbe
gs
cwtl
xchg
push
cld
jnp
xchg
cmc
repz
loopne
push
mull
into
data16
gs
in
test
call
ficompl
ficoms
jo
and
dec
inc
fucom
adc
adc
xchg
mov
mov
xor
jmp
pop
push
mov
cwtl
sub
ljmp
pop
stos
inc
stos
sub
insl
cld
fildl
int3
sti
fwait
inc
dec
rol
inc
mov
cmp
cltd
xchg
je
test
lock
cld
sbb
jle
scas
test
mov
xchg
sub
in
clc
or
or
xor
mov
and
mov
cmp
sub
or
outsb
jns
push
xor
pusha
adc
pop
push
je
sub
in
sbb
stc
pop
ds
cmp
sti
adc
mov
adc
adc
sbb
xor
lods
sub
lret
out
cmp
push
push
test
jbe
int3
xor
stos
mov
pop
sub
jnp
test
add
call
adc
dec
or
push
in
insl
decl
xchg
pushf
push
sbb
push
ds
out
xchg
lea
sub
cmp
je
pop
data16
pop
mov
cwtl
or
rol
in
cltd
add
push
jbe
jo
cltd
xchg
and
or
sahf
cmpsl
xchg
adc
xchg
jo
inc
lea
daa
push
cmp
jp
nop
imull
ret
popa
out
aad
ja
iret
push
movsl
bswap
push
aam
xchg
mov
adc
mov
adc
test
push
add
mov
inc
cmp
cmp
cmpsb
mov
mov
daa
adc
mov
fwait
cmpsb
inc
push
data16
test
ljmp
enter
mov
lock
in
cmpl
sbb
xor
adc
pusha
push
xrelease
sbb
es
popa
cmp
in
push
mov
cmp
cmp
ds
lea
divb
add
ret
and
movsl
sbb
in
jb
cmpsl
cmp
sahf
icebp
add
dec
cmp
dec
push
push
iret
sbb
sti
fnstenv
out
mov
fidivrl
jne
insl
or
push
ret
cmc
add
mov
mov
mov
iret
and
or
test
pop
and
mov
ds
inc
in
es
mov
jecxz
jge
mov
xchg
cmpsl
cltd
outsl
icebp
xchg
inc
insl
clc
pop
push
in
lock
cmpsb
cs
cmp
push
andl
aad
lcall
outsl
shlb
mov
mov
dec
sub
jmp
jmp
adc
push
cmp
add
mov
lock
aas
cmp
cmpl
sub
mov
pusha
cmp
inc
push
out
push
not
xchg
fadds
les
cmpsl
xlat
sti
inc
sub
fisubs
loopne
cltd
xchg
dec
lret
cmpsb
cmp
sub
inc
pop
stos
mov
dec
push
mov
js
push
pusha
mov
push
adc
test
adc
push
dec
and
xlat
test
push
outsb
in
aam
fists
les
sbb
or
mov
sbb
das
pop
pop
sbb
adc
fwait
or
jb
mov
and
or
popf
xchg
cmpb
xlat
repz
mov
jno
xchg
push
lret
jp
in
push
nop
insl
outsl
pushf
call
pusha
jbe
jp
cmpsl
pop
cmp
pop
imul
es
addb
out
sbb
fadd
and
cli
repnz
lods
cli
cmp
push
mov
insb
jno
mov
push
adc
frstor
mov
or
out
mov
out
icebp
xor
repz
jle
sahf
dec
add
sahf
jp
sub
add
test
pop
loopne
xor
add
xchg
or
add
int3
test
outsb
rcrl
daa
data16
xchg
cli
movsl
nop
inc
add
shll
pop
insb
movsb
mov
divl
aas
add
sbb
addb
ret
out
sarb
add
hlt
mov
popf
add
mov
imul
subb
dec
inc
cwtl
pop
mov
mov
xchg
sub
daa
xchg
int3
push
add
pop
lock
mov
xor
jns
or
int3
pushl
jno
xor
pushf
cmp
scas
mov
jns
repz
pop
adc
pop
inc
jo
loop
imul
mov
xchg
mov
roll
jnp
cs
mov
sub
scas
out
cmc
into
and
mov
fdiv
mov
inc
test
dec
cmp
loope
pop
xor
or
cltd
jno
pop
jae
push
pop
inc
mov
dec
dec
orb
std
adc
scas
push
inc
or
xchg
out
lods
jns
jne
into
jle
subl
add
mov
cmpsl
imul
out
dec
pusha
jecxz
push
and
jp
mov
iret
and
mov
xchg
nop
mov
jmp
xor
mov
sbb
fildl
jns
ret
pop
jmp
movsb
mov
xlat
cmpsb
out
lods
fs
movsl
movsb
pop
arpl
roll
aad
xor
bound
adc
shlb
fcoms
movsb
fnstenv
push
sub
xchg
lret
push
test
xor
adc
xor
outsb
lcall
adc
lods
dec
pop
imul
pop
adc
add
sub
pop
in
mov
cmp
xchg
dec
jp
incb
pushf
js
sub
cmp
sahf
nop
sahf
cwtl
dec
or
in
icebp
xchg
inc
sti
jae
mov
pop
or
cli
adc
inc
push
pop
mov
jb
push
in
adcb
pop
add
mov
pop
add
or
add
stos
das
jns
sub
cmp
push
ljmp
pop
sub
mov
xchg
add
int3
enter
sbb
inc
mov
push
aas
pop
scas
bound
inc
pop
or
je
stos
out
lods
inc
shlb
mov
lret
cmc
std
insl
pop
jge
xchg
sbb
fidivrl
add
es
loopne
push
inc
mov
test
lcall
xor
out
call
xchg
mov
in
sub
ret
enter
aad
mov
mov
stos
push
xor
ja
rcrl
inc
aaa
inc
dec
push
call
or
gs
es
fdivrl
aad
daa
xor
dec
mov
mov
test
and
cmp
dec
cld
test
push
cli
in
jo
jns
dec
jmp
test
out
insb
shl
es
daa
add
repnz
xchg
pop
arpl
test
je
add
scas
xorl
jge
jne
fmuls
xor
dec
repnz
out
js
pop
fs
dec
adc
or
fadds
ss
orl
leave
les
pop
loope
jmp
adc
int
cld
xchg
sub
mov
mov
arpl
in
mov
mov
sbb
dec
mov
push
cmp
jl
adc
push
adc
pop
xchg
jne
mov
cmp
test
jno
ljmp
es
sub
pop
repnz
ss
xchg
mov
and
hlt
sbb
out
push
xchg
push
mov
mov
and
out
icebp
and
mov
in
cmp
pop
inc
fisttpll
lods
mov
aas
in
data16
push
popf
jmp
int
out
roll
dec
xchg
mov
or
test
adcl
push
pop
fwait
mov
add
dec
jns
sbb
out
mov
pop
cmp
xchg
and
rcll
fcomi
mov
nop
jmp
aaa
jmp
xchg
out
pushf
add
adc
stc
loopne
xor
shl
dec
xchg
xchg
cmp
les
inc
mov
dec
andb
pop
out
rcl
mov
pop
out
test
cmp
icebp
mul
dec
popf
mov
jns
out
cltd
pusha
cmp
test
cmpb
loope
jns
mov
xchg
adc
pop
ret
pop
in
mov
cmc
lcall
lret
mov
mov
bound
mov
sub
xlat
test
fsubrs
dec
cmpsb
jge
in
shl
cld
pop
cmp
adc
ret
xchg
add
inc
cmpb
cmpsl
fdivl
xlat
mov
xchg
pop
fistpll
andb
inc
xor
xor
pop
loopne
jns
jne
arpl
arpl
push
cld
mov
sub
push
pop
cmp
jb
pop
repnz
sub
adc
push
and
repz
jns
pusha
and
add
push
or
or
sbb
xor
push
xor
daa
jae
add
dec
test
rcrb
addr16
cmpsl
pop
push
imul
les
adc
and
test
sbb
test
into
pop
fcmovb
inc
jp
cmp
out
cwtl
insb
add
adc
arpl
and
dec
pop
rorb
aaa
adc
xor
inc
push
adcb
fdivr
sub
jno
fnsave
rcrb
cmp
arpl
xchg
mov
adc
push
and
and
orb
sarl
pop
adc
and
out
mov
cwtl
loope
mov
pusha
inc
sbb
mov
imul
add
mov
icebp
mov
jecxz
jno
push
or
into
pop
inc
or
xchg
test
test
mov
sub
dec
xchg
jmp
mov
addr16
or
jmp
pushf
pop
push
xchg
sti
lds
test
sti
lret
jmp
xchg
mov
pop
add
fsubp
adc
jae
pop
test
mov
or
stos
push
insl
push
iret
je
add
jl
insl
sar
inc
fwait
gs
inc
xlat
add
imul
jb
imul
dec
xor
pop
aad
cmp
push
and
lret
mov
clc
and
in
or
pusha
gs
test
lods
mov
and
jp
loop
out
mov
sub
push
cmp
jl
hlt
xor
mov
push
divb
out
jmp
test
add
add
or
loop
mov
sbb
ds
mov
cli
arpl
aad
lcall
mov
sbb
or
sub
or
lcall
adc
push
pusha
cmc
xor
xor
out
leave
out
lcall
dec
in
cmp
dec
inc
and
cmp
and
sbb
mov
inc
and
push
fcmovnb
jbe
push
jg
mov
jmp
jnp
outsb
mov
cld
mov
mov
dec
loopne
xchg
sub
lcall
dec
adc
imul
arpl
test
mov
rcll
xchg
cmp
lods
push
lods
cmc
cmpsb
mov
mov
loopne
orl
pop
adc
mov
cmpsb
adc
push
adc
movsl
mov
in
dec
rcrl
mov
mov
lock
test
stos
pop
insb
pop
movl
aas
fimuls
mov
xchg
shlb
or
and
std
add
lret
arpl
mov
inc
mov
jns
xor
sbbl
jecxz
add
jo
inc
in
dec
adc
rcr
mov
repz
mov
mov
pop
inc
or
mov
jp
test
movsl
inc
mov
dec
xchg
inc
outsb
test
mov
mov
pop
ja
fsubs
mov
mov
ret
outsb
ljmp
fstpt
and
les
ds
lds
into
leave
popa
adc
imulb
cmp
jne
adc
cmpsb
and
sbb
pop
int
jne
add
push
dec
dec
bound
pop
push
aaa
jg
sti
dec
pop
mov
cmpsb
lcall
pushf
aaa
aaa
xchg
cs
sub
cmp
lret
mov
dec
xor
notl
jl
test
sbb
icebp
je
sub
cmpsl
out
out
pop
mov
mov
aas
pop
pop
mov
pop
pusha
inc
push
pop
nop
test
lds
mov
cld
aam
xchg
outsb
xchg
add
outsb
sarb
jae
lock
lods
pop
divl
mov
in
xchg
dec
das
lret
popf
jle
mov
popa
movl
push
jmp
pop
adc
notl
out
jb
addr16
loope
sbb
or
cmc
cmp
stos
jge
mov
mov
out
addr16
and
jl
and
ffreep
test
repnz
and
add
cmp
and
scas
pop
stos
or
ret
xor
scas
dec
aas
lahf
fcmovnu
in
pusha
xor
sahf
sbb
ds
mov
cmp
stc
and
sbb
xchg
stos
pop
aad
sbb
mov
mov
out
inc
gs
dec
movl
mov
out
notb
jmp
loope
repz
enter
movsb
push
stc
lret
or
adc
arpl
je
stc
scas
push
das
dec
pushw
sub
pop
ljmp
imul
cli
push
fwait
jb
xchg
mov
ja
cmp
shlb
ret
mov
leave
pushf
jp
addr16
adc
mov
cwtl
jg
ret
adc
pop
or
lahf
inc
jp
xor
sahf
aas
lods
cmp
mov
add
les
in
aas
push
arpl
imul
mov
pop
lahf
aaa
pop
cmpsb
imul
out
xchg
xor
mov
subb
popf
mov
inc
movsl
adc
and
jmp
sub
or
mov
add
push
lds
cmp
adc
push
push
movsb
xlat
jne
ret
out
aas
mov
add
shrl
and
shl
add
aas
dec
es
insb
mov
mov
fiaddl
mov
lahf
cmp
push
or
jnp
xor
cld
je
pop
ja
jnp
ds
push
lods
imul
out
cmp
push
das
je
std
pop
mov
sahf
cmp
or
mov
adc
push
imul
dec
jne
lahf
mov
jg
imul
scas
ret
cmpsb
aam
aas
mov
loope
add
pop
std
lds
jo
daa
jne
rclb
add
xchg
in
popa
out
mov
adc
icebp
xchg
int3
cmovne
inc
les
or
and
mov
outsb
and
int3
sub
mov
cmp
push
adc
call
adc
pop
jae
lods
test
jno
add
push
add
idivb
and
incl
call
shrl
sti
rcrb
push
mov
out
ror
cmc
popa
mov
push
dec
popa
out
pop
fsub
fldenv
mov
add
xchg
pop
rolb
int3
pop
sub
mov
or
mov
nop
dec
push
lock
jge
cwtl
pop
inc
icebp
data16
aam
xor
lods
test
divl
mov
pop
call
cmp
pusha
ljmp
cmpsb
push
mov
cmpsl
sti
dec
jmp
aas
add
mov
inc
test
or
jle
aad
ret
fs
mov
out
test
aas
dec
pop
jge
addr16
fsub
loope
enter
imull
or
sbb
bound
aad
cmpsb
int
mov
cmp
fwait
mov
fildll
daa
xchg
mov
cmp
inc
cmp
inc
out
jb
out
punpckldq
std
pop
js
hlt
stc
test
push
andl
mov
sub
cmp
aam
pop
xor
or
test
or
imul
shrl
pop
call
push
push
add
icebp
movsl
idivb
out
adc
loop
sub
les
push
mov
xchg
popa
add
insb
lds
repnz
dec
inc
inc
cltd
pop
sbb
push
or
pop
neg
jmp
ret
dec
mov
arpl
test
pusha
jp
ret
imul
jle
clc
nop
xchg
mov
inc
sub
mov
out
jl
je
add
rol
mov
mov
scas
addr16
fcomps
pop
sbb
mov
popa
inc
adc
insl
pop
push
inc
ljmp
int3
fs
imul
dec
ret
mov
into
ret
imul
pop
cld
rol
mov
xchg
push
xchg
lret
dec
pop
inc
sub
call
out
xchg
sbb
cmp
adc
pop
arpl
scas
jae
pop
cmp
scas
sbbb
cmp
xor
sahf
cmpsl
mov
mov
jnp
lea
cmp
jns
sbb
push
xchg
lods
mov
pop
sub
xchg
imul
sub
stc
shrb
fisubrs
fisubrl
fdivs
cmp
pop
sbb
ss
icebp
mov
out
pusha
push
test
in
dec
sub
lods
lret
and
xchg
xor
movsb
inc
sub
repnz
inc
in
dec
lock
loop
cmp
inc
ja
out
loope
clc
stos
hlt
icebp
stos
fcmovne
ror
and
lret
fistl
xchg
int
and
cmp
loope
fwait
jnp
jo
inc
adc
imul
fldenv
std
insl
fsubl
pop
cltd
in
sub
add
mov
jno
loopne
jne
xor
stos
fcompl
imul
in
xchg
pop
adc
or
xchg
mov
mov
sub
inc
mov
ss
into
orb
adc
add
aaa
inc
test
pop
xchg
jl
pop
adc
fildll
jg
icebp
aas
sbb
xor
and
mov
mov
pop
and
int3
ss
mov
push
data16
sub
test
dec
jno
xchg
int3
int3
loop
jb
in
mov
lcall
sarb
dec
mov
cli
cmp
mov
adcb
sarl
leave
push
sub
xor
mov
fistpll
mov
adc
aam
lea
popf
iret
sub
jmp
pop
and
scas
adc
pop
shlb
sahf
mov
sbb
gs
pop
add
cwtl
sbb
les
or
outsb
testl
pop
int3
sbb
jns
in
movsl
sbb
xchg
add
aaa
mov
and
jge
xchg
or
outsb
repnz
xchg
int3
jg
dec
jno
xchg
in
int3
in
int3
out
cmp
xchg
jb
mov
ds
push
pslld
pop
dec
jno
add
xor
xor
aad
fmull
mov
jb
cwtl
aad
sbb
les
in
cmp
sbb
inc
adc
cmp
jp
cmp
push
mov
xor
shr
pop
xchg
xchg
idivl
mov
pusha
lea
fwait
fs
ucomiss
xchg
mov
prefetch
xchg
add
in
ljmp
dec
sub
insb
lahf
mov
divb
sub
subl
ja
or
cmp
test
stos
repnz
cwtl
pop
jnp
mov
push
faddl
mov
lret
sbb
dec
fiadds
jecxz
pop
ss
insb
fcomi
mov
out
in
adc
sbb
and
cmc
mov
loop
or
dec
or
insb
insb
movsb
jns
mov
inc
jbe
cmp
and
cmpsb
fcmove
scas
fsubrs
mov
jmp
push
cld
adc
mov
scas
popa
and
pusha
or
jnp
in
insl
cld
xchg
jne
adc
pushf
inc
out
sarl
shlb
gs
leave
xlat
loope
pop
out
and
sub
jo
mov
xlat
dec
jl
add
jl
add
je
les
mov
adc
xor
aas
mov
adc
dec
sub
cmp
and
add
cmp
dec
or
xchg
add
or
jle
lahf
test
movsb
xchg
sbb
cmpsl
dec
jne
jo
dec
cmp
xchg
hlt
pushf
js
xchg
int3
cmp
fcmovb
sti
add
cmp
and
sbb
lcall
push
push
xor
dec
mov
inc
mov
xor
stc
jecxz
out
cmp
xor
xchg
repnz
out
pop
dec
jle
push
jnp
push
sbb
mov
add
leave
push
fistps
jo
xor
mov
jp
fsub
cmc
cmp
pusha
aas
or
or
test
stc
adc
ja
dec
pop
insb
sahf
mov
push
in
and
and
sub
inc
fbld
jp
sahf
aaa
xchg
shlb
push
ss
push
sbb
xchg
or
or
stos
movsb
jnp
pop
jb
and
lret
rcrl
sub
push
cs
sbb
mov
es
inc
inc
loope
inc
in
mov
clc
ficoml
mov
int
push
and
dec
daa
or
mov
aam
xchg
sahf
cld
insl
dec
cmpsb
jp
inc
jnp
shrl
adc
cmp
cmp
push
mov
xchg
mov
insl
push
lds
adc
and
sub
addr16
dec
or
jnp
jbe
and
sbb
shrb
jmp
out
mov
mov
mov
inc
ljmp
scas
data16
sub
push
pop
cmpsb
aaa
sbb
push
add
orb
xor
dec
out
das
ds
jmp
mov
cmpb
jnp
jae
ja
inc
xchg
lahf
mov
sbb
pop
cli
xchg
adc
ljmp
xor
std
addl
lahf
push
int3
cmpsb
adc
lods
out
nop
pop
push
cld
imul
out
rol
cltd
cmp
out
imul
insl
clc
push
mov
and
mov
es
adc
sahf
mov
dec
ss
arpl
sub
xchg
dec
pop
adc
bound
rcl
rcl
xorb
add
jno
jns
cli
out
out
sti
sbb
adc
mov
cld
sub
cmp
xor
mov
lret
cltd
cmp
push
ss
mov
insl
mov
jns
lret
sbb
in
jno
in
mov
jo
add
push
icebp
jne
cmp
lods
dec
neg
lahf
jo
call
les
pop
mov
dec
pop
cmp
mov
movb
inc
mov
test
dec
xor
mov
in
mov
movsl
mov
fs
dec
data16
js
pop
scas
sahf
jecxz
jnp
jp
fisubrl
mov
cmovnp
sub
icebp
aas
push
sub
or
push
cmc
inc
outsl
stos
movsl
or
xor
jne
insl
sbb
pop
cmpl
into
imul
sub
pop
push
jo
sahf
sbb
push
mov
sub
sub
xchg
aad
sub
imul
loopne
shlb
outsb
es
pop
sbb
cmp
jl
sti
pop
in
xchg
jg
jbe
xor
inc
or
xor
hlt
mov
inc
mov
lcall
mov
ret
lahf
out
mov
lahf
adc
jnp
mov
or
xor
xchg
addb
mov
arpl
or
pop
xor
fwait
arpl
lcall
imul
test
or
fstps
mov
push
mov
xor
pop
cli
and
pop
hlt
out
cs
fmul
sahf
sbb
xchg
repnz
in
loop
in
push
pop
arpl
repz
fiaddl
lahf
loope
push
dec
or
cmp
pop
jl
in
cltd
lret
lahf
ljmp
pop
mov
push
lret
scas
inc
inc
mov
jmp
push
jnp
jns
inc
fisttpll
push
inc
jb
outsb
add
loopne
pushf
fimuls
cmpsl
add
xchg
jne
ret
inc
inc
or
mov
aaa
test
ret
mov
int3
dec
fisubs
pushf
imul
pushf
aaa
sub
and
mov
cltd
jl
bound
loop
xchg
xchg
add
jnp
mov
leave
xor
in
test
loopne
pop
inc
mov
add
enter
add
cmp
adc
add
rol
push
test
sbb
hlt
out
or
fsts
ja
mov
lea
xchg
stos
in
adc
stos
mov
xchg
and
adc
sub
test
fucomi
cmp
xor
ret
cltd
dec
mov
js
imul
loope
add
push
out
mov
mov
mov
sbb
daa
ret
or
ds
mov
adc
ret
push
imull
jl
int3
push
mov
xor
ss
sub
cmp
pop
std
sbb
mov
mov
mov
jb
mov
jmp
inc
inc
imul
sbb
dec
bnd
aas
pop
stc
dec
sub
add
out
mov
ds
mov
bound
shlb
and
bound
pop
clc
out
lcall
jno
fs
fisttpl
sub
fnstcw
mov
movsl
mov
xchg
mov
std
aas
mov
sub
xchg
pusha
adc
mov
xor
xlat
divl
ret
in
sub
inc
aas
xchg
jb
lahf
sub
cs
mov
mov
mov
and
pop
ss
mov
insl
lahf
push
jns
sar
lcall
in
and
fdivs
movq
nop
dec
ljmp
out
push
pop
fstpl
push
das
int3
cmp
dec
and
inc
inc
mov
enter
xchg
cwtl
lea
movsb
cld
jo
mov
cmovg
adc
pop
pop
cmpsl
std
fisubl
addr16
pop
add
in
dec
push
sbb
inc
pusha
insb
ror
sbb
stc
mov
jecxz
and
adc
mov
cmpsl
mov
aas
clc
dec
sub
xchg
outsl
outsb
stos
or
add
pop
je
ja
icebp
push
or
push
ret
scas
fcoms
fsubp
incb
pop
rcl
push
sub
sbb
rcl
insl
push
je
inc
push
ljmp
jmp
loope
dec
push
and
stc
fmuls
mov
add
jne
in
sbb
adc
rcrl
scas
mov
xor
cmp
dec
cmp
add
pop
into
push
jno
lret
and
out
inc
ja
gs
add
inc
inc
mov
pop
ret
rorl
into
into
mov
cmp
jl
pop
sahf
jp
loop
or
ret
popf
call
test
dec
daa
dec
movq
insb
test
pop
testl
pushf
int3
clc
push
fcomp
das
sbb
pushf
push
dec
cmpsl
sbb
cmp
cld
push
fldcw
xor
out
rcrb
aas
mov
dec
aas
mov
mov
xchg
cmpb
inc
pop
rcll
mov
mov
mov
shlb
es
int3
aaa
addr16
ret
jb
stc
pop
sbb
lret
in
lcall
xor
jnp
add
adc
and
dec
push
mov
push
xor
das
xchg
xchg
jmp
add
out
mov
cmp
dec
adcl
in
outsl
sbb
or
mov
adc
shlb
add
in
out
push
mov
js
mov
inc
ret
popf
xorb
cmpsb
push
sbb
add
mov
xor
mov
movsl
push
sahf
out
jno
rcrb
xchg
aaa
mov
or
icebp
mov
clc
ss
sbb
insb
push
movsb
cbtw
xchg
insb
fidivs
or
jmp
scas
sub
imul
in
mov
xor
int3
push
sbb
inc
fildl
sub
ret
cmp
std
mov
repnz
pop
movsb
dec
pop
inc
xlat
cmpsb
jp
lods
sbbb
arpl
push
lods
or
daa
lock
or
sub
jp
sub
arpl
jmp
enter
stc
add
insb
repnz
cmpsb
ljmp
push
xor
mov
inc
jo
dec
fwait
mov
lret
cld
mov
mov
leave
push
jg
cld
xor
cmp
out
xchg
dec
xchg
adc
sahf
lcall
mov
and
sub
fistps
shll
dec
testb
push
mov
test
in
rcrl
mov
push
sbbl
xor
mov
push
dec
sub
jne
ljmp
xchg
stos
sub
xchg
sub
outsb
add
stos
push
test
ret
jge
cmp
mov
clc
movsb
xchg
mov
stos
testl
loope
adc
ss
arpl
fistl
jle
sub
shll
fisubrl
sbb
xchg
cmp
or
out
xchg
iret
mov
call
cld
jmp
lahf
comiss
mov
pop
test
inc
xor
and
fcomps
jno
mov
mov
std
aas
ss
fs
inc
or
lock
es
xor
cli
je
jg
sub
push
leave
sbb
sub
lret
out
xchg
mov
inc
pushl
inc
xchg
jbe
test
cmp
inc
add
je
shlb
mov
mov
cwtl
in
inc
jmp
inc
sbb
adc
push
inc
inc
mov
jno
mov
mov
add
push
int3
scas
xor
push
pop
fmuls
pushw
fisubrs
pmaxsw
repz
xchg
filds
cmp
add
sub
fisttpll
stc
jns
lret
and
xor
gs
push
cwtl
gs
insl
pop
int
jl
and
jbe
mov
mov
repnz
mov
scas
dec
das
mov
enter
call
ds
push
sbb
xor
xchg
and
and
xchg
adc
jmp
push
inc
mov
jb
inc
sti
cmp
jmp
bound
inc
aam
test
pushf
cmp
rorb
sub
loop
xchg
rolb
aaa
int3
sbb
fdivrs
jge
mov
mov
or
mov
xor
insl
adc
in
ret
jne
int3
out
mov
aad
ja
or
mov
adc
in
lods
xor
inc
shll
push
xchg
xchg
out
and
arpl
pop
mov
adc
xchg
jle
adc
imul
adc
ret
and
dec
adc
lcall
loop
push
outsl
xchg
xor
cld
inc
add
mov
mov
pop
add
sbb
jae,pt
inc
sbb
mov
outsb
or
out
das
sbb
inc
xor
inc
shll
fstp
jmp
subb
jns
out
test
js
lds
sub
adc
adc
shl
sub
cmpsl
mov
inc
cmp
repnz
cs
push
cmp
mov
sub
test
movsb
fwait
outsl
inc
xlat
mov
fnstenv
xlat
jmp
adc
nop
jno
addr16
push
cmp
sub
cmp
sbb
dec
pop
pop
jmp
push
aas
cs
mov
add
out
or
add
cs
push
out
ss
negl
and
xor
jb
adc
test
es
xchg
sbb
and
les
xor
iret
add
sahf
test
inc
mov
cltd
sub
jp
add
sbb
sarl
dec
pop
mov
cwtl
test
mov
jae
movsb
xchg
inc
test
jle
and
aam
jle
mov
and
stos
sub
inc
cmp
or
insl
add
inc
adc
jecxz
scas
out
sub
daa
aas
das
dec
int
xchg
push
ficoml
sub
mov
mov
pop
das
lods
dec
push
cs
pop
test
or
inc
pushf
ljmp
jno
ljmp
adc
push
ljmp
pusha
roll
lods
jle
jle
call
mov
fwait
cld
ja
lods
inc
add
cs
fdivs
mov
outsl
jae
cmp
stos
mov
fistl
movsb
mov
xchg
into
mov
loope
xor
mov
ret
or
jp
sarl
ret
aas
inc
incb
and
das
and
imulb
xor
sbb
imul
movsb
lret
das
push
jle
inc
mov
jns
sbb
cltd
and
adc
mov
insb
mov
add
fcmovu
xor
push
inc
iret
adc
rcl
jnp
lods
arpl
int3
add
arpl
xchg
loopne
jecxz
xor
fistl
stos
in
ljmp
dec
arpl
adc
fsubs
imul
into
or
fimuls
data16
mov
leave
and
mov
bound
jecxz
cwtl
ror
push
lods
add
mov
xor
mov
xchg
jo
sub
test
mov
nop
cltd
or
sbb
and
lea
cmp
lret
mov
and
sbb
push
scas
nop
orl
loop
stc
xchg
rcr
mov
fiadds
push
fnstenv
adc
icebp
cmpsb
mov
popf
stc
cmp
xchg
mov
mov
int
xlat
sti
xlat
push
out
push
test
cltd
dec
xchg
sbb
push
sub
or
mov
test
push
int
push
ret
pop
cmp
shlb
andl
sbb
sbb
pop
xor
or
sub
mov
std
fs
mov
inc
ds
out
mov
sahf
negb
popa
rclb
mov
xor
enter
inc
jo
insb
shll
pop
push
cmpsb
or
push
popf
test
jo
mov
pop
mov
cmpsb
addb
or
adc
scas
xchg
mov
or
add
lahf
jno
jne
test
mov
mov
sti
sub
enter
popf
lret
leave
je
pop
in
and
xor
adc
aaa
ds
sbbl
sbb
andl
cmc
add
or
int3
cmp
or
clc
cmp
xor
fst
mov
dec
ds
nop
andl
pop
clc
mov
clc
ja
aas
popa
dec
scas
fmull
test
icebp
or
daa
and
test
pop
and
mov
cltd
es
inc
ss
out
ds
or
dec
dec
fstps
roll
lret
sbb
sbb
fidivs
push
inc
mov
sbb
test
in
out
mov
mov
inc
xchg
mov
imul
mov
xchg
xor
insl
pop
mov
rol
insl
inc
or
rclb
dec
shll
movsl
mov
pop
clc
es
cmc
cmp
or
mov
cmp
das
lods
outsb
roll
mov
dec
cmp
cwtl
mov
push
mov
xor
cwtl
stc
xor
jae
in
ret
jg
bound
test
push
fwait
xchg
lods
scas
cmp
cmp
and
dec
xchg
js
mov
xor
data16
add
sub
cmpsb
sub
and
fsts
xlat
adc
or
shr
mov
icebp
test
out
lcall
mov
xor
sub
or
hlt
into
inc
xor
test
mov
cmp
xchg
push
xor
je
pop
jne
aas
pushf
fs
movsl
mov
push
or
or
sahf
xlat
xchg
jg
jp
mov
mov
mov
sbb
scas
clc
nop
sbb
sub
cmpsb
inc
xor
lock
out
xor
popf
xchg
xor
xchg
dec
inc
add
cmp
add
int
out
jecxz
pop
in
xchg
push
mov
xchg
in
xchg
sub
add
jno
and
out
xchg
xchg
es
xorb
andb
adc
adc
pop
adc
add
les
lds
xor
push
lret
xorl
xor
adc
out
mov
pop
mov
stc
addr16
sbb
out
mov
jp
ret
jbe
xor
dec
in
icebp
dec
icebp
test
pop
test
js
hlt
inc
or
jns
insb
lret
imul
sub
and
in
loop
add
fisubl
fimull
in
inc
or
js
and
ficoms
jne
sahf
loop
push
in
pop
push
lods
les
sbb
pop
sbb
inc
ret
ret
das
fadd
xor
insl
dec
xor
xor
pop
ds
ds
stos
sbb
stos
xchg
sub
out
xchg
push
inc
stos
dec
lods
stos
xor
mov
xor
inc
lahf
icebp
xor
pusha
push
xchg
int
test
idivb
push
sub
test
outsl
test
ficoms
sbb
add
fs
ss
mov
idivl
fsub
and
int3
mov
mov
and
out
cmc
out
pop
divb
arpl
loope
arpl
rclb
fnsave
ja
xchg
in
cld
mov
push
inc
inc
mov
fimull
inc
mov
sbb
sub
lret
pop
addr16
push
dec
lret
push
enter
decb
jmp
add
cmp
cld
sbb
imul
jmp
movsl
jmp
insb
pop
jp
push
out
outsb
stos
cmp
fistpl
addr16
xchg
dec
aam
rclb
aas
fildl
incb
les
xor
sub
mov
sub
pop
push
adc
sahf
leave
je
mov
or
cmp
inc
cmp
rcrb
shll
out
adc
xchg
rorl
stc
add
cmpsl
mov
test
fsts
repnz
pop
mov
jecxz
xor
in
and
adc
lret
insb
and
add
push
add
bnd
cli
push
das
sti
inc
int3
addr16
jp
mov
popa
dec
out
and
mov
jp
stos
jp
inc
out
cmpsb
jl
cmpsl
pop
mov
or
cmpsb
je
lcall
jo
xchg
fdivl
pop
mov
pop
dec
jmp
mov
inc
aad
scas
aad
cmp
ljmp
pop
addr16
mov
mov
pop
stc
sub
jl
adc
sbb
jns
das
jp
scas
out
push
rclb
dec
shlb
cltd
scas
sub
lret
adc
lret
adcb
adcl
jae
xchg
fadds
jne
rolb
icebp
lods
xchg
bound
cwtl
pop
mov
push
mov
sbb
sub
pusha
xor
int3
xor
mov
aad
pop
inc
enter
jnp
fwait
out
jno
enter
fiadds
inc
lods
iret
fists
cmp
mov
lods
movaps
xchg
cmp
repz
adc
pop
adc
fisttpl
xchg
jne
add
pop
loop
push
cmp
sbb
lret
sti
loopne
cld
test
repnz
fdiv
popf
xchg
inc
or
daa
dec
mov
add
loope
out
jecxz
pop
in
cmpsl
push
mov
lcall
add
jo
and
add
daa
addb
aad
mov
adc
adc
add
les
lds
xor
imul
xor
lock
sub
mov
clc
addr16
sub
pop
mov
jbe
das
ja
pusha
jecxz
icebp
adc
icebp
test
pop
test
mov
hlt
inc
push
popa
inc
lea
insl
imul
addb
and
in
loop
adc
outsl
fidivl
fimull
add
arpl
arpl
repnz
and
jmp
loope
push
add
lods
jbe
lods
icebp
loopne
repnz
pop
sbb
inc
ret
ret
cs
inc
dec
lds
xor
inc
ficompl
out
ds
stos
sbb
mov
xor
inc
cwtl
out
test
inc
stos
bound
fisubs
dec
xor
push
sahf
icebp
xor
mov
push
not
xor
mov
mov
sub
add
lock
repnz
sbb
xchg
arpl
sar
mov
push
jp
lock
shl
shll
xor
pop
divb
bound
loopne
arpl
jle
xchg
jno
xchg
enter
dec
icebp
xor
ja
mov
loop
rorl
inc
cmp
inc
push
mov
ficompl
inc
mov
das
imull
adc
xchg
adc
jl
push
lret
scas
jp
pop
xor
in
imul
dec
push
insb
cld
xor
cld
test
icebp
inc
cmp
lods
cmp
mov
into
xor
into
outsb
mov
fistpl
addr16
addr16
pop
ror
shrb
aas
fildl
adc
les
jae
scas
inc
xor
sub
mov
sub
pop
adc
sahf
fnsave
mov
or
cmp
inc
cmp
shrb
shll
add
fists
or
sub
paddsw
adc
sarl
mov
sbb
leave
jecxz
xor
dec
add
lea
clc
pop
adc
leave
adc
addb
add
push
add
push
jo
cli
and
sti
inc
loopne
dec
jp
mov
popa
arpl
popa
and
mov
jp
stos
jp
push
out
cmpsb
nop
push
cmpsl
pop
adc
idivb
bound
mov
pop
les
dec
std
lds
mov
pop
inc
inc
aad
scas
aad
dec
inc
popf
ljmp
pop
addr16
leave
mov
mov
insb
clc
sub
nop
xchg
adc
sub
jp,pn
ret
in
push
mov
mov
lea
sub
lock
lret
xchg
ror
orb
xchg
fs
mov
xchg
negl
fcmovbe
int
roll
mov
fwait
pop
lds
or
sbb
add
pusha
lods
lret
arpl
xchg
mov
dec
into
fmuls
hlt
repz
or
lret
jp
je
pop
mov
xorl
push
lods
iret
fisttps
jecxz
mov
mov
cmp
aas
mov
jmp
adc
cmp
pop
mov
out
dec
pop
add
dec
aaa
push
add
aad
ds
test
and
mov
rorb
adc
mov
and
add
add
jns
in
jecxz
push
out
push
or
xchg
sbbl
or
push
and
sahf
aad
es
mov
andl
dec
call
xchg
mov
xchg
mov
mov
pop
pop
mov
mov
out
cmp
out
mov
adc
out
lcall
mov
jbe
insl
je
sub
test
pop
xchg
mov
inc
stos
icebp
lds
outsb
imul
and
scas
loope
ljmp
or
xor
and
adc
jne
shlb
sahf
mov
push
lods
into
subb
insb
pop
sbb
inc
ret
rcr
outsl
ffreep
mov
jno
pop
mov
test
push
mov
das
out
in
push
adc
ljmp
cmpsl
xor
or
icebp
loopne
repnz
sbb
arpl
into
mov
mov
inc
fs
test
xchg
cmp
sbb
sub
loopne
jecxz
sbb
addr16
je
decl
outsb
mov
and
cmpsl
and
test
mov
mov
sbb
jae
and
mov
cmp
xchg
enter
dec
in
dec
ja
cli
je
jmp
loope
test
sub
push
repz
fiaddl
add
sub
rcll
pop
adc
pop
push
faddl
lret
loopne
cld
in
push
imul
outsl
cld
pop
sahf
incl
mov
cmp
adc
call
into
inc
in
outsb
fidivrl
outsl
lcall
addr16
outsb
ror
push
mov
rcrl
fildl
adc
scas
or
dec
xor
sub
mov
sub
jbe
movsl
pop
add
sahf
ja
popf
mov
dec
mov
jo
fstpt
add
sarb
rolb
cmpsb
pop
push
adc
pop
fimuls
inc
aaa
add
daa
xlat
sub
repnz
and
mov
arpl
jp
fimull
dec
sub
pop
fstp
negl
into
enter
jg
dec
push
out
or
inc
or
jp
sub
dec
cli
sub
popa
mov
cwtl
lea
cli
lret
xor
in
es
cmpsl
xchg
jb
sbb
popa
fwait
out
pop
push
jo
mov
or
pop
push
dec
sbb
sub
xchg
inc
outsl
inc
ret
out
dec
xchg
xchg
pushf
nop
jns
ljmp
push
addr16
in
int3
sub
stos
push
ret
ret
cmp
into
and
test
mov
in
lock
sbb
sub
inc
repnz
lret
and
mov
jb
shlb
and
test
aam
out
je
rorl
fcoml
lods
push
dec
in
xchg
fs
pop
xchg
mov
pop
and
xor
xor
jae
mov
or
test
call
cmp
or
xor
xor
iret
mov
fistpll
mov
stc
loop
cmp
cmc
jle
lds
push
lahf
and
fstl
loop
aaa
in
shll
mov
pop
insb
adcb
add
mov
mov
jnp
rorb
out
push
daa
add
test
out
loopne
scas
jecxz
movsl
mov
dec
mov
or
cmp
push
adc
aaa
jmp
adcb
jecxz
push
mov
xchg
cmp
stc
mov
test
test
out
addl
ret
es
call
leave
int
ds
mov
mov
xor
xorb
ss
inc
jge
icebp
mov
xchg
hlt
popa
jb
inc
ret
dec
sub
insb
out
sub
add
sub
sbb
test
fcmovb
imul
pop
mov
fs
addl
push
lods
sahf
push
lods
das
and
icebp
loope
mov
ficoml
ret
sbb
in
les
test
lds
pop
jmp
sbb
mov
push
pop
movsl
jp
sub
popf
movsb
aas
xchg
test
jmp
fimuls
fs
xor
inc
jo
stos
gs
xchg
mov
and
add
push
idivb
jae
mov
adc
inc
test
je
test
pop
jmp
sbb
loopne
jl
arpl
mov
cld
xchg
in
mov
jp
lcall
repz
jecxz
loope
lods
cmc
iret
sbb
ss
in
push
arpl
cmp
xchg
sbb
mov
or
loop
cmpsl
mov
inc
out
or
jecxz
fcmovbe
stc
cwtl
mov
sub
sub
cmpsb
push
fadd
push
pop
daa
adc
push
mov
sbb
in
imul
cld
adc
inc
rorl
jmp
int3
test
into
lcall
sbb
fstps
addr16
ror
shrb
xchg
fidivl
mov
xchg
sub
dec
sub
dec
xlat
shrb
xor
pop
mov
or
mov
mov
cmp
rclb
cmp
and
dec
cwtl
shlb
ljmp
jns
mov
inc
or
cmpsb
ficompl
dec
sub
lea
fcomps
adc
xor
push
sbbl
add
push
add
into
leave
cmp
sub
inc
jecxz
or
mov
popa
jb
and
mov
and
ds
jp
add
mov
in
cmpsb
fwait
mov
pop
jmp
fnstenv
shrd
mov
fnstenv
pop
in
pop
dec
jle
or
inc
ljmp
pushf
add
jmp
dec
cld
sbb
adc
mov
jns
sub
cmp
ret
ret
test
arpl
jecxz
push
sbb
adc
mov
add
jne
sub
orb
nop
in
ljmp
scas
into
xchg
fdivrs
daa
cs
ljmp
in
out
lods
xchg
push
loope
pop
lds
sbb
mov
and
mov
lret
mov
xor
aad
pop
xchg
mov
xor
fmull
jno
lds
jo
add
jge
iret
fildll
mov
daa
fsubl
cmp
insb
adc
adc
adc
xchg
jne
push
aaa
in
push
sbb
inc
sbb
jge
xchg
sti
push
inc
cld
test
les
repz
sbb
sbb
popf
xchg
es
rorl
cld
dec
daa
cmp
add
add
fadd
lods
jecxz
pop
in
sub
enter
in
xchg
cmpsb
call
add
cld
add
les
and
sub
or
nop
andb
or
adc
subl
std
mov
les
cs
subl
xor
jle
lods
mov
pop
and
mov
lret
and
xor
icebp
or
test
pop
test
cltd
inc
mov
pop
pop
inc
xchg
sbb
jl
cmpb
and
inc
mov
fcmove
jb
or
fisubs
and
mov
mov
jo
test
lods
sbb
icebp
sbb
icebp
pop
inc
mov
inc
ret
sbb
sub
les
xchg
outsb
pop
push
jge
ds
lds
sbb
add
out
add
aas
test
xchg
xchg
out
adc
add
idivl
fidivs
jmp
jo
xchg
fwait
icebp
xor
icebp
jbe
mov
bound
xor
call
and
add
inc
test
test
inc
ljmp
mov
loopne
xchg
loop
cld
xchg
cld
mov
enter
jp
inc
dec
arpl
sbb
xchg
jecxz
push
or
cmc
mov
pop
je
push
jbe
arpl
jl
xchg
cmp
enter
dec
cltd
or
loop
dec
mov
inc
iret
int
inc
xchg
mov
ficompl
add
sub
xchg
adc
rcrb
mov
push
enter
fwait
xor
in
ret
cmpsl
imul
mov
inc
addl
jmp
or
jp
jbe
mov
aaa
outsl
sbb
addr16
andl
jl
rcl
xor
cltd
push
dec
inc
pop
les
xchg
add
movaps
mov
sub
cmpsb
xchg
movsl
pop
in
mov
sahf
mov
stos
repz
sub
fdivrs
cmpsb
rcl
test
ficomps
popf
xchg
sub
cwtl
sarb
andl
mov
repnz
sbb
jecxz
sahf
cmpsb
fisubrl
jl
lea
pop
pop
adc
cmp
sbb
out
inc
push
add
inc
insl
ret
add
jp
mov
popa
fninit
popa
and
lret
aas
jno
ds
push
lods
arpl
sbb
cmpsb
int
cmpsl
pop
fwait
ljmp
push
pop
fwait
outsl
mov
je
out
mov
cmc
sbb
cmp
sub
inc
xchg
aas
inc
aad
add
ljmp
pop
addr16
mov
pop
push
ret
cmpb
jp
testl
mov
adc
inc
jb
mov
sub
dec
cmp
outsl
xor
shlb
fwait
imul
fsubrs
daa
cs
in
nop
test
cmp
xchg
dec
ljmp
cld
inc
out
adc
bound
mov
aas
fs
ja
mov
fistpl
xchg
jl
enter
cmp
sbb
mov
imul
iret
xor
mov
add
xlat
ret
pop
cmp
dec
in
xchg
mov
lahf
xor
jne
stc
out
mov
in
inc
mov
sbb
sbb
cld
test
xchg
repz
jbe
sub
popf
sub
popf
xchg
jae
rorl
sti
dec
daa
jno
add
add
lret
shrl
repz
mov
push
or
add
sti
add
insb
push
and
lods
jno
push
adcb
ljmp
adc
std
mov
les
sub
jl
sbb
out
pop
cwtl
jl
sub
addr16
or
mov
fisubs
jbe
sub
dec
and
test
push
in
fucomp
hlt
inc
mov
insb
cs
insl
imul
and
push
sbb
fcmovb
xlat
fimull
sub
dec
arpl
gs
xchg
and
jmp
fsubrp
push
repz
adc
icebp
cmpb
pop
iret
addl
sub
les
sub
pop
ds
les
sbb
lock
push
add
pop
rcl
sbb
inc
stos
js
jmp
fidivrs
int3
popf
xor
inc
xor
pop
gs
int3
clc
pop
xor
stos
pushf
pusha
push
xor
jg
mov
mov
fdivr
jnp
push
test
in
test
jb
jmp
loopne
jg
arpl
mov
cld
and
mov
jp
int3
cmp
inc
jecxz
sarl
xchg
mov
dec
cmpsl
lods
cmc
jae
gs
pop
je
mov
push
arpl
jnp
xchg
ror
enter
dec
inc
xor
mov
sbb
add
pop
mov
inc
hlt
dec
add
out
test
mov
inc
mov
jg
sub
cs
adc
js
push
data16
mov
in
pop
movsl
imul
test
lcall
ds
stos
repnz
cmp
and
outsb
getsec
outsl
sbb
sbb
andl
xor
sub
jge
dec
pop
arpl
fstl
mov
push
sbb
cmp
sub
clc
scas
mov
sahf
mov
test
fdivrs
out
jg
pop
movsl
rcl
xchg
ficomps
mov
cwtl
rolb
cmp
cmp
adc
sti
test
enter
jecxz
xor
fiaddl
push
sbb
pop
xlat
or
out
jl
out
dec
out
push
dec
add
das
das
cmp
sub
inc
xor
jp
mov
popa
mov
popa
and
aaa
pusha
mov
mov
aas
jp
pop
cmp
movsb
in
pop
pop
invd
testb
negb
and
xor
into
sbb
sbb
ret
mov
inc
stos
ds
aad
stos
aad
arpl
bound
hlt
push
pop
fldcw
mov
hlt
sub
js
push
ret
ret
sub
adc
arpl
lret
push
mov
inc
dec
mov
std
stos
sub
lret
pop
nop
pop
cltd
jne
adcl
xlat
int3
xchg
fsubrs
inc
rolb
inc
out
xchg
adc
pop
xor
mov
bound
mov
test
sahf
fcmove
push
aad
jae
mov
xor
jmp
pop
jno
ret
jno
xchg
flds
pop
push
xor
js
mov
daa
add
cmp
jne
lock
adc
pop
add
insb
iret
sti
jne
xchg
and
sbb
cs
sti
inc
ds
test
pushf
jns
push
orl
dec
in
or
add
aas
inc
out
inc
imul
push
out
mov
dec
mov
jnp
scas
xchg
adcl
add
add
xchg
adc
lea
test
andb
mov
adc
cld
mov
sbb
pop
jg
sbb
int3
lds
out
mov
addr16
div
notl
test
ret
jbe
sub
fisubs
ja
icebp
test
pop
mov
mov
scas
insb
inc
cs
imul
call
outsl
fisubl
sub
arpl
ja
cmp
lret
jb
data16
lea
push
fucomp
push
gs
push
lods
fidivrl
or
inc
fldl
sbb
sub
insl
jecxz
std
inc
test
pop
ds
jge
inc
cmpsb
sbb
and
sub
test
out
repz
push
cmpsb
push
jmp
mov
jno
mov
pop
xor
lret
fwait
pusha
push
or
push
test
or
in
stc
mov
lock
inc
test
pop
ljmp
mov
loopne
inc
mulb
cld
stos
lret
cld
mov
icebp
jp
xchg
push
arpl
inc
mov
mov
sahf
or
cmc
xchg
mov
mov
push
arpl
jp
xchg
sub
enter
dec
pop
orb
adc
mov
inc
mov
scas
inc
fidivl
sbb
sub
inc
push
dec
nop
adc
lds
lds
enter
shrl
jmp
push
aam
imul
mov
inc
and
cmp
test
test
into
xor
outsb
xor
fs
add
add
adc
mov
les
sub
sub
sub
ficoml
sahf
pop
outsl
sahf
mov
mov
xlat
es
cmp
mov
jo
rcl
xchg
xchg
movsl
jbe
cmpsb
ficomps
popf
xchg
sbb
sarb
cmpsl
or
test
or
mov
movsb
or
jecxz
andl
jmp
testb
pop
adc
lds
inc
enter
dec
out
std
inc
ret
ret
lcall
mov
cmp
loope
and
jnp
mov
js
jge
xor
lock
ficompl
cmpsl
pop
sub
negb
pop
add
adc
out
rcrb
pop
add
rorl
add
or
xchg
pushf
test
pop
cmp
jno
mov
into
mov
mov
xchg
adc
adc
cmpb
jp
test
and
lret
pop
push
repnz
pop
inc
sub
cltd
xchg
sub
xorb
shlb
testl
in
aas
rolb
in
lods
xchg
ficoml
cwtl
pop
incb
call
and
xor
xor
xor
cs
xorb
jp
das
jnp
pop
push
sbb
loop
mov
movsl
mov
mov
loopne
push
inc
mov
cmp
mov
xchg
pop
dec
in
pop
lods
push
lahf
hlt
jns
xchg
jl
jne
add
cmpsl
push
mov
pop
sbb
mov
mov
out
pop
pop
mov
jbe
ss
fists
mov
mov
add
cmp
push
push
jecxz
jecxz
mov
mov
adc
lods
insb
cld
test
push
mov
push
and
pop
mov
aas
inc
sti
orb
dec
out
ljmp
adc
add
dec
inc
test
cmp
loop
xorl
jbe
mov
jecxz
addr16
or
adc
mov
ljmp
sahf
das
push
icebp
test
hlt
add
hlt
inc
fwait
in
add
insb
dec
fwait
das
imul
imul
out
outsb
mov
aad
or
dec
arpl
pushf
ficoml
addr16
cmp
jmp
fsubr
push
and
adc
push
cmp
cmpsl
out
or
cmp
les
cmp
inc
sub
stos
pop
out
stos
test
out
rcl
sbb
and
aas
ss
inc
stos
push
in
int3
and
das
pushf
xor
inc
xor
push
cs
fbld
and
fistpll
jmp
mov
or
xchg
popf
mov
jmp
test
loopne
and
cld
cmp
aam
jp
lock
fs
arpl
pop
mov
mov
lea
jge
js
divb
pop
aaa
adc
ficoml
arpl
arpl
sti
enter
mov
roll
xor
cld
or
data16
scas
inc
fidivrl
inc
mov
cmpsl
icebp
sub
push
adc
jbe
push
and
ret
cs
call
cmpsl
imul
jmp
stos
sar
test
movb
inc
cmp
cmp
add
jp
push
pop
xor
mov
sbb
ss
rclb
cmp
push
aaa
testb
insl
les
jnp
dec
sub
mov
pop
decb
fwait
xchg
sahf
mov
add
xlat
dec
pop
fdivrs
mov
shll
mov
cwtl
sarb
cmpsl
cmp
test
push
jbe
mov
mov
pop
cli
inc
das
in
xor
mov
inc
mov
js
lea
repz
adc
les
pop
test
sbb
dec
add
inc
rolb
inc
adc
scas
jp
sbbb
sub
mov
jp
movsl
jp
int
mov
or
cmpsl
pop
aas
or
or
in
outsl
jg
imul
xlat
push
arpl
push
pop
dec
movsl
lds
fidivs
inc
aad
test
popf
ljmp
sbb
dec
shl
fcmove
mov
sbb
imul
movsl
js
jns
sub
cmp
arpl
lods
dec
jbe
repnz
jmp
test
outsb
lret
mov
xor
lock
xor
lcall
cmp
xchg
out
adc
push
aas
mov
and
jns
int3
pop
jle
dec
les
xchg
stos
cmp
jp
xchg
cmp
loope
jno
jns
inc
mov
pop
fistps
jmp
daa
cmp
sub
mov
push
lahf
or
xchg
push
mov
jne
fldenv
push
dec
pop
sbb
push
adc
cmp
xchg
sub
mov
jg
popf
orps
xchg
rolb
xchg
dec
nop
inc
or
add
xor
out
insb
imul
mov
dec
mov
mov
scas
xchg
lret
add
imul
mov
rorl
ljmp
push
xchg
and
mov
lret
push
mov
or
int
out
ret
xorl
ja
mov
out
mov
addr16
repnz
mov
stos
inc
cmp
out
ja
jmp
and
sahf
icebp
test
out
addr16
test
stos
test
insl
imul
imul
out
outsb
pop
mov
and
mov
arpl
lret
daa
leave
and
jne
mov
repnz
push
adc
add
repnz
push
sbb
inc
ret
cmp
repz
push
je
sub
addr16
jnp,pt
sbb
sbb
dec
jg
sub
sub
das
outsb
sbb
push
testb
into
mov
xor
imul
icebp
xor
xor
repz
pusha
push
lret
cmp
or
mov
xor
and
test
jmp
test
loopne
jg
pushf
test
es
leave
cld
mov
fmul
jp
ljmp
dec
xchg
mov
roll
cmc
push
divb
pop
je
sbb
ret
pop
rorl
dec
xor
or
mov
ja
xor
dec
std
inc
bound
pop
push
mov
mov
inc
sbb
mov
xchg
pop
jbe
push
out
ret
push
enter
ljmp
xchg
cmp
cs
popf
aam
popf
inc
bound
cmp
cmp
push
sahf
jmp
or
jp
mov
lret
nop
in
outsb
pop
addr16
test
aad
int3
int3
rorb
cmp
push
sahf
inc
pop
les
sub
xlat
arpl
push
xor
movsl
pop
add
imul
xlat
pusha
push
fdivrs
cmp
aas
sub
jle
cmpsb
fmulp
mov
xchg
inc
inc
or
fwait
std
shlb
or
repnz
test
leave
jecxz
rcrl
and
mov
daa
xchg
lea
lea
sti
push
adc
ret
adc
or
out
ret
add
xchg
cmp
inc
dec
lods
jp
mov
and
movl
jp
push
and
xchg
mov
fwait
out
inc
insl
negb
xchg
add
aaa
aad
out
or
lock
push
push
pop
dec
jbe
mov
push
sete
ds
insb
test
pushf
inc
xor
ljmp
pop
addr16
addr16
int3
mov
pop
push
aad
movsb
sub
mov
pushf
cmp
fbld
fbstp
mov
mov
inc
sub
lret
lret
mov
lret
xorb
nop
fs
or
fsub
stc
fcom
in
nop
test
ljmp
sub
pop
push
lods
dec
out
lret
jle
pusha
xchg
test
cltd
lds
dec
fcomps
xchg
mov
jp
pop
cmp
pop
jno
insl
xor
inc
iret
jecxz
iret
fbstp
inc
mov
cmp
lea
nop
mov
adc
push
push
xlat
jne
cld
out
push
sub
sbb
push
mov
test
popa
xchg
mov
ret
pop
jmp
mov
add
daa
out
mov
add
push
in
mov
push
scas
xchg
call
inc
clc
add
bound
and
mov
stc
es
andb
mov
orb
repz
mov
sbb
lds
sub
or
xorl
lret
adc
push
pop
jle
icebp
addr16
and
push
mov
jbe
daa
ja
add
popa
icebp
dec
cmp
jnp
ljmp
mov
cmpsl
test
insl
imul
imul
in
outsb
dec
mov
cwtl
or
jo
and
xchg
mov
jmp
push
mov
or
icebp
adcl
sbb
inc
ret
ret
sub
movl
pop
xlat
fstps
ds
sbb
pop
pop
jle
sub
sub
sbb
rorb
stos
std
pop
push
int
adc
faddp
xchg
fidivs
dec
inc
xor
notb
je
pop
cltd
pusha
push
dec
lds
divb
idivb
nop
sub
add
sbb
test
loop
test
or
pop
loopne
jg
arpl
aaa
add
popa
mov
adc
roll
mov
cmc
fldl2e
mov
out
pop
je
neg
adc
ja
xchg
adc
xchg
enter
dec
mov
fsubrl
mov
loop
xlat
mov
inc
and
inc
hlt
lods
inc
fidivrl
movsl
fimull
arpl
adc
adc
leave
sbb
and
popf
rorl
enter
mov
imul
insb
cld
rcl
cld
test
test
push
mov
jmp
popf
jmp
hlt
in
cmp
repnz
pop
xor
out
pop
addr16
jg
int3
std
lret
int3
rorb
rcr
lods
aaa
fildl
dec
sar
mov
xlat
dec
mov
adc
sub
lea
pop
dec
mov
sahf
jge
sahf
mov
add
cmp
cmp
sarb
adc
and
nop
aaa
cmpsb
fisubs
push
pushf
xchg
je
cwtl
rorb
test
lea
repnz
mov
jecxz
sub
pop
out
mov
push
ret
and
out
dec
out
push
icebp
inc
ret
ret
es
inc
sbbb
popf
pop
cmp
fbld
xor
and
fiaddl
aas
jp
scas
cmp
xor
cmpsl
pop
or
negb
negb
mov
cld
lods
dec
aam
out
iret
push
mov
push
pop
dec
lea
inc
sti
cmp
jle
sub
test
ljmp
sbb
nop
ret
push
jno
sub
icebp
sub
sbb
push
ret
ret
fwait
cmp
fisubs
pop
jne
mov
mov
inc
sub
ficoms
lret
add
adcl
inc
je
fdivr
clc
fcom
inc
adcb
sbb
adc
push
fs
and
bound
test
push
jns
dec
int3
xchg
fcmove
mov
xor
jp
sub
pop
dec
fistps
add
jno
loope
inc
iret
or
and
mov
daa
cmpsb
mov
cmp
jne
lock
ja
xchg
arpl
xlat
jne
clc
jne
push
push
out
dec
pop
sbb
cmpl
test
add
sbb
mov
popf
xchg
sti
add
daa
add
adc
lods
jecxz
push
in
pop
test
outsb
jmp
mov
push
xchg
add
stc
inc
push
cli
addr16
and
mov
xchg
es
addb
jg
xchg
pop
loopne
ret
or
dec
adc
clc
mov
les
sub
loopne
jl
sbbl
and
je
in
into
addr16
jne
mov
pop
sahf
xorl
push
lret
mov
mov
test
inc
jmp
inc
movb
insb
insl
aad
xchg
jge
sub
ret
pop
mov
ret
sub
fimull
xor
pop
outsl
arpl
cmpsb
mov
jmp
es
cmp
adc
icebp
add
sbb
push
ret
push
ret
fadd
pop
xor
pop
sti
rcrl
mov
mov
cmp
hlt
xchg
outsb
out
mov
pop
dec
inc
stos
es
call
fcompp
xchg
fidivs
pop
inc
xor
or
lret
lahf
lret
and
pop
les
notb
mov
ret
inc
cli
mov
std
jnp
fcmovnb
test
call
jmp
int
sbb
iret
shll
in
js
mov
jne
add
mov
jmp
push
divb
pop
je
or
adc
mov
mov
aaa
mov
xchg
or
sbb
xchg
inc
mov
lods
inc
fidivl
sbb
xlat
mov
adc
out
mov
jmp
int
adc
frstor
cld
jb
mov
pop
icebp
call
jnp
ds
jmp
xor
jp
out
into
outsb
jae
outsl
sbb
sub
and
shr
xchg
fcmovb
fildl
add
les
xchg
push
fidivs
fwait
mov
sub
push
xchg
movsl
pop
sbb
or
repnz
ret
jne
jg
mov
fwait
xchg
movsl
cmpsl
cmpsb
fidivs
inc
cwtl
rcl
andb
or
repnz
mov
rolb
leave
jecxz
sub
fisubl
dec
jae
xlat
iret
pop
mov
pop
adc
add
xor
mov
ret
cmp
and
nop
pop
dec
jp
mov
popa
and
and
out
add
test
push
lock
adc
jp
or
mov
pop
fwait
outsl
mov
shll
pop
xchg
cmp
inc
aad
mov
pushf
add
popf
ljmp
pop
movsl
shll
xor
aad
xor
inc
mov
ret
cmpb
jp
aam
and
ret
adc
add
sub
lret
fcoml
adcl
cmp
xchg
fmul
cmp
test
lods
jp
lods
xchg
repz
pop
push
sti
pop
push
lahf
je
and
jl
pusha
push
inc
and
loope
mov
aad
mov
enter
jnp
arpl
pop
jno
mov
mov
xor
mov
je
sub
dec
jle
fwait
lcall
fsubl
xchg
mov
divl
and
in
add
sbb
cmpsb
inc
xchg
sti
test
cld
test
les
test
sbb
sub
mov
xchg
dec
out
out
daa
push
mov
add
mov
out
test
push
in
nop
mov
scas
xchg
pop
push
xchg
add
aaa
inc
push
packuswb
add
xchg
enter
pop
ss
andb
add
adc
xchg
pop
xlat
mov
push
sbb
les
push
lds
sub
int3
jl,pt
arpl
jbe
lock
out
mov
xchg
into
addr16
out
addr16
dec
or
lcall
js
fisubl
lahf
mov
lds
push
call
inc
push
stos
insb
pop
xchg
xchg
rcll
or
and
and
ret
aas
rcr
or
dec
arpl
outsb
arpl
mov
mov
test
adc
int
adc
icebp
movsb
shlb
inc
push
mov
ret
out
lock
add
sub
lock
rcrl
out
mov
test
inc
sub
decl
out
fcompl
stos
sub
xor
in
xchg
fidivs
jae
xor
loope
push
int3
cmp
jbe
das
xchg
pusha
push
daa
add
jns
mov
xor
mov
test
test
mov
leave
pop
loopne
jge
arpl
andl
mov
popf
enter
jp
add
arpl
mov
mul
in
hlt
add
cmc
push
xchg
mov
sbb
adc
arpl
test
ja
mov
loop
sbb
inc
sbb
inc
fimull
cwtl
mov
mov
shrb
adc
mov
push
cmp
push
enter
xor
mov
insb
cld
xchg
or
test
sub
cmp
pop
test
into
arpl
mov
xor
jl
pop
arpl
int3
nop
or
ficoml
negb
les
stos
xchg
push
rorl
sub
dec
outsl
movsl
xor
movsl
pop
aad
dec
sahf
mov
mov
jg
repz
mov
or
xchg
popf
inc
cwtl
rcl
shlb
cmc
out
or
and
shl
add
cmpsl
fidivrl
cmp
lea
out
pop
adc
aas
jmp
add
out
pushf
lea
iret
retw
loopne
inc
stos
pop
dec
jp
outsb
cmp
frstor
and
pusha
mov
mov
jge
xchg
lock
pop
adc
dec
testb
fldcw
std
outsl
mov
push
imul
dec
sbb
pop
pop
xchg
sbb
mov
xchg
inc
sub
inc
aad
popa
xchg
pushf
sbb
popf
ljmp
pop
addr16
and
sub
sub
push
lea
ret
cmpb
jp
mov
push
mov
jae
inc
or
inc
sub
adc
dec
mov
out
shlb
fs
ss
fdivs
fcom
nop
test
and
xchg
sets
aas
push
push
xchg
mov
and
andb
pop
jno
setbe
sub
out
enter
cmp
fstpl
sarb
pop
aam
iret
jmp
xor
mov
test
dec
jle
out
sahf
mov
ret
lahf
jp
lahf
xchg
cwtl
jne
divb
or
cmpsl
push
xor
sbb
cmpl
in
mov
sbb
cs
mov
jl
popf
shrl
dec
mov
or
add
inc
out
xchg
gs
jecxz
xchg
cmpsb
mov
sub
add
xor
pcmpgtd
pop
je
xchg
lock
jns
loopne
cmp
push
xchg
inc
jne
mov
sub
mov
xor
xchg
daa
pop
sbbl
xor
in
out
das
push
lods
mov
sub
mov
pop
push
ret
jbe
loop
popa
add
popa
icebp
mov
test
push
test
sbb
mov
rclb
push
outsb
test
insl
imul
loop
and
cld
ret
outsl
rcr
or
arpl
into
xchg
jmp
sub
imul
mov
adc
cwtl
mov
ret
jecxz
les
lds
loopne
pop
add
enter
ds
mov
lcall
out
mov
aas
test
stos
rcrl
xchg
lds
add
jo
xor
pusha
inc
xchg
pusha
push
scas
or
js
mov
sbb
sbb
sbb
test
out
test
or
loopne
jl
arpl
push
mov
jp
and
and
fsubl
rcl
dec
xchg
mov
push
lods
cmc
fmull
jae
nop
adc
adc
mov
pop
rcrl
cmp
ja
mov
loop
cld
lods
inc
std
inc
pop
pop
dec
inc
iret
push
mov
mov
mov
mov
push
mov
mov
push
enter
cmp
jmp
push
test
imul
cld
incb
mov
pop
and
mov
jmp
lcall
push
fmul
outsb
fwait
xor
adc
in
xorb
rclb
xor
push
int3
cmc
inc
imull
scas
adc
repnz
ficoms
dec
sub
addr16
mov
movsl
jb
out
inc
pop
or
sbb
mov
fcomp
lcall
push
adc
and
movsl
dec
std
in
pop
fists
jecxz
shlb
or
jmp
jno
mov
clc
add
jecxz
sub
fcmove
inc
and
jb
or
pop
adc
mov
movsb
out
dec
out
sub
gs
ljmp
sbb
popa
cmp
popa
and
test
jp
mov
lock
imul
add
negb
in
cld
outsl
mov
sbb
out
push
pop
lock
in
fwait
sbb
mov
inc
iret
das
add
mov
aaa
popf
ljmp
pop
xor
jae
add
sub
sub
add
ret
ret
jmp
arpl
movups
mov
add
mov
lret
xorb
nop
fs
cmp
xchg
inc
ret
pop
sarl
fcom
adc
xchg
test
out
xchg
push
push
cwtl
pop
jns
pop
push
pop
dec
out
mov
pusha
jecxz
pusha
xor
or
sub
xchg
or
loop
pop
mov
pop
jno
jbe
inc
sbb
inc
iret
sub
xor
mov
fwait
add
cmp
inc
jle
ret
cwtl
and
call
adc
lret
add
dec
xlat
in
sub
sbb
out
mov
sti
shlb
cld
test
xchg
les
lods
out
mov
lret
popf
lret
xchg
dec
xor
dec
dec
hlt
dec
daa
mov
gs
mov
out
inc
scas
lods
jecxz
push
ja
xchg
inc
mov
cmpsb
repnz
xchg
das
dec
xchg
add
gs
and
or
ds
mov
pop
add
adc
xchg
test
jp
cli
mov
sbb
pop
dec
es
subl
cmpsl
negb
xchg
out
mov
in
addr16
sbb
dec
mov
jbe
fisttpl
icebp
and
bound
mov
push
inc
jge
insb
into
daa
insl
imul
orb
mov
ret
fs
or
and
pop
insb
arpl
loop
and
jmp
sub
int
adc
call
sub
inc
imul
fstpt
cmp
xchg
movsb
arpl
sbb
mov
sbb
sahf
pusha
test
mov
sub
xor
out
cwtl
inc
inc
stos
push
mov
int3
and
pushf
xor
pop
mov
mov
xchg
pusha
push
int3
fistl
les
mov
pop
sbb
add
sbb
test
pushf
jnp
lock
test
or
loopne
jns
jp
inc
fs
mov
pop
mov
jmp
and
rcl
adc
mov
pop
adc
dec
divb
fwait
adc
adc
mov
xchg
enter
dec
shrl
adc
mov
inc
sub
inc
inc
test
fimull
jmp
push
into
mov
pop
xchg
mov
push
enter
decb
in
lods
cmpsl
imul
in
int
test
movb
inc
cmp
cltd
jmp
jo
jp
frstor
xchg
fwait
loop
sbb
aad
jle
jnp
int3
imul
rcr
std
xor
push
add
les
push
dec
mov
fisttpll
sub
test
xor
mov
pop
push
push
or
pushl
cmp
mov
rcrb
shll
repnz
fists
clc
shlb
or
repnz
mov
mov
jecxz
sub
ficoml
cltd
mov
cmp
iret
in
pop
adc
jae
out
jne
out
mov
ret
cmp
and
inc
sub
jp
pop
adc
and
add
jp
push
cmp
mov
in
mov
cmpsb
mov
sbb
outsl
mov
sub
out
xor
mov
cmpsb
push
pop
dec
xchg
inc
mov
inc
xor
add
lds
fucomip
ljmp
mov
into
sub
sub
xor
ret
ret
in
cmp
fisubl
movsb
or
mov
mov
inc
lcall
sub
add
lret
and
ret
nop
test
ds
imul
lcall
std
lods
xchg
loopne
mov
cwtl
pop
loope
push
push
mov
sbb
das
jp
pusha
testl
mov
xor
fmul
aaa
test
out
pop
pusha
and
mov
jae
inc
xor
inc
iret
sbb
fbstp
mov
cmp
mov
negl
lahf
xorb
and
insb
mov
cmp
in
sub
stc
aas
inc
pop
sbb
mov
xchg
sti
sbb
add
pop
xchg
shl
mov
mov
add
rorl
repz
daa
push
mov
add
arpl
jecxz
push
cmpsl
mov
ljmp
movsb
repz
js
and
push
xchg
fmull
mov
xor
jmp
jg
push
xchg
lcall
mov
sbb
pop
mov
jno
xor
loope
imulb
push
iret
addr16
in
addr16
xor
out
mov
xchg
sbb
jbe
fmull
icebp
pop
ret
mov
in
inc
cld
lcall
or
das
imul
xor
ret
in
ja
inc
outsl
fimull
cmp
arpl
arpl
testb
adc
add
push
lods
jbe
out
icebp
les
popa
add
push
sbb
pop
ret
ret
and
les
lds
and
movsb
ror
jl
rcrb
sub
outsl
out
mov
aas
lods
inc
inc
stos
data16
xor
insb
and
out
jo
pop
xchg
icebp
xor
xorl
lret
neg
jbe
mov
outsl
sbb
test
bound
repz
loopne
jnp
arpl
es
dec
cld
mov
enter
jp
inc
or
loope
shll
cmp
out
cmc
iret
sahf
mov
push
push
je
mov
arpl
jb
xchg
test
enter
dec
sbb
scas
ja
pop
pop
mov
inc
ret
inc
pop
test
fisubrl
cmp
adc
mov
pop
bound
push
enter
addr16
in
mov
cld
or
test
xor
cmp
mov
test
into
push
sub
add
fs
popa
int3
shrb
xor
push
push
cmp
push
cmp
repnz
cli
out
mov
nop
jge
sub
in
pop
out
xchg
cli
mull
mov
mov
add
js
lcall
dec
adc
fildll
inc
jecxz
fiadds
push
fists
push
clc
shlb
pop
adc
add
xor
sub
leave
jecxz
cmpsl
inc
add
lea
in
pop
adc
inc
jmp
push
mov
inc
ret
cmp
inc
sbb
cmp
and
pusha
mov
and
jge
inc
popa
test
or
cmpsb
imul
clc
clc
aam
testb
and
dec
out
imul
mov
dec
pop
dec
popa
movsl
or
push
inc
pop
ss
aad
mov
popf
ljmp
pop
or
jae
mov
jo
sub
xchg
mov
ret
ret
sbb
arpl
fldenv
jge
push
mov
mov
inc
push
adc
insl
mov
mov
and
ret
loopne
fs
out
daa
xchg
mov
xchg
fcomps
fcom
jb
sub
lods
enter
or
repnz
mov
and
arpl
andb
shlb
push
xchg
dec
aad
test
aaa
test
cmp
ficompl
repnz
iret
clc
jb
fildll
das
loopne
sbb
loope
movb
cmp
push
jle
setl
lahf
nop
jb
xchg
cmp
repz
stos
pop
cmpsl
push
push
inc
pop
sbb
out
sti
pop
out
test
pop
mov
mov
push
std
xchg
dec
bound
or
add
push
inc
out
cmc
out
jecxz
popf
cmpsb
mov
cmp
add
arpl
mov
push
test
pop
xchg
ljmp
push
xchg
stos
jb
mov
jbe
and
outsl
adc
pop
cmp
xor
jecxz
out
inc
xchg
out
mov
dec
mov
adc
adc
adc
mov
cmpsl
sbb
jbe
add
js
popa
icebp
sub
icebp
test
in
inc
leave
stos
mov
insb
and
jb
int3
imul
loopne
outsb
sub
outsl
fimull
cmp
arpl
fiaddl
adc
or
aaa
jmp
aam
push
fistps
lods
icebp
sub
mov
outsb
push
mov
js
ret
sbb
pop
cmp
insl
ja
outsb
pop
pop
int
ds
inc
shl
dec
pop
sub
outsb
out
mov
aas
ds
add
rorl
xor
movsl
mov
xor
cmp
icebp
xor
push
xor
jg
pusha
push
aas
inc
jmp
mov
sbbl
inc
test
test
or
test
loopne
test
pushf
mov
es
in
jmp
rorl
mov
mov
cmc
sbb
jae
push
je
xchg
sub
pushf
mov
ret
mov
mov
sub
bound
loop
loop
adcb
inc
sbb
fidivl
in
leave
sub
sub
jl
push
pop
xchg
outsl
pop
push
out
imul
repz
imul
cs
inc
lret
cld
test
movl
je
jmp
xchg
jmp
push
sahf
cmp
inc
fxch
outsb
add
sub
sub
jne
int3
shrb
xchg
fisubrl
xor
push
shr
inc
les
les
or
dec
sub
xchg
pop
insl
add
sahf
shll
mov
ret
ficompl
fnstenv
cmp
cmpsb
ficomps
add
cwtl
shlb
push
lock
rclb
lret
imul
push
mov
jecxz
daa
in
or
mov
cmp
unpcklps
out
jae
out
nop
movsl
add
inc
add
insb
mov
cli
sbb
pop
sti
pop
dec
jp
test
popa
jnp
popa
and
andl
dec
in
lock
mov
push
fiadds
mov
xor
outsl
and
outsl
mov
into
mov
xchg
adc
pop
and
or
pop
jb
inc
aad
adcb
idiv
ljmp
mov
jae
cmp
push
fildl
jns
add
arpl
fsubs
xchg
ret
jp
mov
imul
rcl
lcall
cltd
sub
fs
out
fs
lahf
ret
xchg
fdivs
fcom
mov
iret
jp
aaa
ss
xchg
mov
cwtl
pop
push
and
ljmp
and
pop
and
and
xchg
dec
aad
test
dec
xor
jp
flds
pop
mov
inc
iret
xchg
mov
loopne
lret
daa
flds
sub
xchg
loopne
dec
in
pop
push
lahf
mov
push
xchg
jne
ss
aam
push
addr16
pop
sbb
idivb
sti
repz
cld
mov
sbb
loope
nop
jo
mov
jae
xchg
dec
xchg
dec
daa
jp
daa
add
xchg
out
repnz
adc
fwait
cmpsb
mov
inc
mov
xchg
ds
xchg
push
xchg
add
bound
js
xchg
push
addl
sbbb
ret
mov
pop
add
adc
adc
or
icebp
les
cmc
sbb
xchg
mov
jbe
je
jl
pop
dec
mov
into
and
pop
out
mov
mov
and
jae
sahf
push
mov
mov
or
in
mov
ja
mov
and
imul
and
fiaddl
cmp
arpl
and
push
test
jmp
shr
push
shlb
out
icebp
sub
popa
add
sbb
pop
ret
ret
and
les
lds
and
mov
movsb
shr
jl
sub
sub
mov
aas
aam
inc
stos
mov
xor
scas
outsb
and
shr
jo
mov
dec
xor
sti
mov
push
aam
push
testb
idivb
xchg
sbb
jnp
mov
test
out
mov
pop
test
loopne
jns
arpl
ret
clc
pop
mov
pop
test
sub
arpl
sub
inc
mov
rcr
scas
cmc
das
dec
divb
push
je
adc
arpl
jo
xchg
bound
imul
and
fsubrl
lods
ja
add
mov
inc
addr16
dec
inc
andb
mov
ds
sub
pop
push
jbe
dec
enter
decb
pop
in
js
insb
cld
mov
movl
lahf
cmp
stos
mov
jns
dec
jp
pop
fmul
outsb
jmp
outsl
sbb
int
and
add
mov
cmc
das
inc
ret
cmp
fildl
jle
inc
les
les
sub
stos
sub
adc
mov
fwait
xchg
data16
mov
xlat
add
fdivrs
ss
rcrb
into
pop
and
cmp
fnstcw
test
jns
jmp
sbb
adc
ljmp
mov
dec
add
jecxz
fstps
and
push
cmp
xchg
sub
int
adc
mov
out
bound
xor
ret
cmp
inc
sub
cmpsb
jp
pop
and
sarl
add
jp
pushf
jp
jle
dec
pop
push
in
repz
notb
mov
lcall
sub
imulb
imul
sub
inc
xchg
aad
mov
bound
das
mov
cwtl
cmp
scas
rcrb
lcall
ret
ret
and
out
xlat
arpl
rcll
dec
dec
mov
stc
movsl
mov
lret
add
nop
lock
xchg
mov
xchg
fdivrs
daa
cs
nop
test
sub
mov
loop
xchg
fisubrl
pop
push
repz
sbb
imul
xor
xor
inc
int3
mov
dec
or
push
inc
ficomps
enter
cmp
fcomps
lea
inc
iret
sbbb
pop
cmpsb
in
daa
int
mov
mov
mov
adc
sbb
xchg
jne
icebp
jne
gs
stc
negl
mov
or
sti
les
mov
sbb
jecxz
mov
out
xchg
js
insl
mov
sub
sbb
add
sub
jecxz
dec
in
out
mov
in
xchg
jg
xchg
add
paddb
test
lea
xchg
es
addb
ljmp
adc
sub
mov
push
mov
jbe
xchg
and
dec
arpl
xor
in
imulb
out
mov
iret
addr16
addr16
insl
dec
dec
mov
jbe
fisttps
icebp
jae
bound
dec
lret
pop
push
inc
int
insb
push
and
imul
jg
dec
pop
mov
ret
mov
fimull
call
push
and
jne
xorb
sub
adc
call
mov
jbe
ret
ret
and
les
fstl
bsf
push
pop
test
fsubs
sub
test
inc
stos
mov
test
xor
mov
xor
addr16
cmpsl
xchg
pusha
push
call
je
mov
push
out
decb
roll
pop
pop
mov
loope
test
das
ljmp
js
arpl
cmp
cld
mov
movsl
jne
sarb
cmp
adc
mov
and
mov
jne
in
cmc
inc
dec
divb
push
je
xchg
rcll
arpl
pushf
imul
pop
push
xor
dec
ja
test
jmp
inc
std
inc
jnp
dec
inc
xchg
movsl
inc
fisubl
bound
sub
sub
mov
push
pop
mov
bound
imul
pop
cld
mov
imul
cld
jno
cld
test
add
and
cmp
inc
jp
lret
jns
xchg
cmp
jne
into
outsb
pop
repnz
addr16
lods
and
lret
jecxz
rcr
jmp
cmp
les
les
inc
or
xlat
rcr
pop
outsl
movsl
mov
fmuls
sbb
sahf
mov
and
xlat
adc
fdivrs
out
jg
dec
lcall
xor
cmpsb
fimuls
popf
xchg
adc
das
andb
fists
xor
mov
dec
sub
fidivl
inc
inc
adc
jmp
pusha
push
out
jno
out
cltd
movsl
add
xchg
fildl
cli
push
xor
dec
jp
movsl
jp
mov
mov
pop
shl
jl
cli
fwait
jp
xor
cmpsl
pop
test
dec
neg
popa
sbbl
outsl
rcl
sub
jmp
mov
mov
dec
pop
dec
cmp
push
sub
add
popf
ljmp
pop
xor
mov
jmp
in
cmp
je
jmp
push
dec
ljmp
xchg
or
sub
lret
xchg
jne
jg
bnd
nop
add
nop
fs
les
rcrl
xchg
test
test
or
push
clc
push
out
lods
bound
sbbb
lea
xchg
jb
enter
cmp
sub
test
inc
iret
fldl
filds
mov
inc
sub
ret
test
inc
cltd
mov
pop
movlps
rolb
insb
mov
sub
in
xlat
jbe
mov
sbb
push
jp
sti
xor
cld
test
pop
xchg
adc
sbb
pop
cmp
add
out
dec
daa
adc
add
xor
dec
in
sti
inc
mov
adc
adc
xchg
roll
aad
nop
dec
fwait
pusha
push
and
push
adcb
addl
jge
adc
xchg
ljmp
mov
adc
xchg
and
add
xor
loopne
out
mov
lods
mov
mov
xor
mov
loop
ret
jbe
les
call
test
loope
inc
jb
inc
loope
insb
xor
insl
imul
jg
adc
loop
fdivs
imul
cltd
or
arpl
mov
and
adc
push
test
mov
mov
icebp
dec
es
mov
inc
int
inc
ret
ret
pop
fadd
fs
cmp
mov
mov
pop
adc
sub
and
cwtl
mov
aas
cld
inc
inc
stos
dec
arpl
aam
ficomps
dec
sub
cmp
icebp
push
mov
cld
dec
xor
mov
mov
idivb
call
adc
test
int3
jmp
inc
add
sbb
push
cmp
cld
popa
aas
add
test
jp
jecxz
cmp
and
cmp
xchg
mov
mov
in
cmc
push
dec
divb
push
je
push
das
in
pushf
cmpsl
mov
xchg
in
pop
rcll
enter
or
js
ja
std
shl
cld
and
pop
dec
inc
push
pop
mov
mov
xor
xor
test
pop
iret
insb
pop
push
mov
push
enter
mov
jmp
xchg
movsb
sbb
int
popf
or
inc
out
int3
add
and
jmp
aam
jp
xchg
into
outsb
in
aam
in
pop
pop
addr16
aad
ret
int3
shlb
nop
fisubl
fildl
data16
pop
les
les
stos
repz
out
jne
sub
mov
movsl
pop
push
sub
sahf
xor
xchg
cli
mov
sub
cmp
sub
data16
xchg
leave
push
fcmovnb
popa
hlt
shlb
add
repnz
insb
repnz
mov
mov
loopne
sbb
mov
int
pop
rcll
mov
out
sbb
lods
lahf
movsl
add
cmp
loope
mov
xchg
pop
test
push
inc
fstpl
mov
roll
sub
adc
pop
in
testl
xchg
lods
fs
and
sub
adc
mov
out
movsl
mov
imul
xor
add
lret
arpl
in
fucomip
int
adc
addr16
push
into
sub
pop
aad
sub
push
ret
cmp
arpl
sub
dec
push
dec
mov
pusha
rcl
popa
push
outsl
lret
xorl
test
ret
nop
out
outsl
fwait
lds
es
and
imul
cs
lock
lods
out
push
push
push
or
test
insb
mov
lahf
mov
int3
mov
push
or
push
mov
enter
cmp
xlat
pop
jno
mov
inc
xchg
int
iret
stos
pushf
iret
filds
loop
daa
xor
cmpl
mov
adc
adc
inc
sti
xchg
jne
out
jne
cmp
lahf
inc
sbb
inc
cmpsl
xchg
sti
dec
xor
test
out
nop
scas
jne
popf
add
ficoms
ret
daa
mov
daa
add
add
mov
adc
xchg
cmpsb
mov
inc
mov
mov
scas
xchg
cmpsb
dec
xchg
add
xor
lods
pop
push
and
imul
andb
ljmp
outsb
xchg
mov
mov
roll
sbb
shll
xor
mov
mov
mov
cmp
mov
cli
pop
ret
jbe
shll
inc
bound
hlt
mov
mov
mov
movsb
jge
insb
dec
and
cltd
pop
sub
lsl
fidivrl
or
mov
and
jne
xorl
outsb
inc
push
lods
push
insl
out
icebp
pop
or
sbb
je
ret
sbb
push
fadd
push
call
outsb
pop
sbb
sbb
inc
mov
sbb
inc
pop
cmp
sub
xchg
aas
ficompl
stos
xor
fdivs
mov
jo
sahf
icebp
xor
xchg
jbe
out
pusha
push
sti
arpl
jb
mov
repz
mov
test
aas
ljmp
in
loopne
jae
jp
cmp
nop
mov
jp
in
and
and
dec
jge
mov
mov
dec
divb
mov
adc
mov
xchg
fstpt
mov
and
ja
dec
xor
in
ds
inc
outsl
push
inc
fiaddl
pushf
fimull
xchg
out
adc
mov
lret
enter
inc
and
in
mov
insb
cld
adc
mov
inc
xor
add
push
cwtl
stos
repnz
cmp
lcall
sbb
sbb
jbe
int3
cmp
xchg
ficoml
dec
pop
jnp
pop
aad
xchg
imul
sub
xor
loopne
sahf
gs
stc
mov
inc
cmp
cmp
rcl
sbb
movsl
pop
cmpsb
ficoms
fcmovb
push
notb
sub
test
leave
xor
cmp
mov
test
enter
in
cmpsl
shlb
testb
pop
adc
mov
call
inc
out
outsl
inc
add
outsb
pop
ret
loop
mov
pop
cmpsb
jmp
and
lea
jecxz
mov
jp
lcall
pop
repnz
clc
or
dec
testb
addl
sub
adc
mov
out
lock
sub
pop
dec
gs
xor
mov
imul
test
addr16
mov
mov
aam
sub
pop
jp
cmp
pop
sbb
jp
aad
push
mov
adc
mov
sahf
sub
lret
outsl
ja
jg
mov
jge
jmp
xchg
fwait
xlat
fadd
out
fcom
icebp
xor
test
lods
xchg
and
addr16
pop
mov
cmpsb
je
pusha
testl
dec
mov
dec
aad
movsb
aad
fwait
xor
jp
faddl
jmp
int3
inc
iret
add
loopne
sbb
mov
cmp
cmpb
push
push
lahf
fsubrs
mov
xchg
jne
fdivl
in
shl
push
mov
pop
sbb
inc
js
sti
mov
mov
sbb
in
nop
shlb
xlat
ficoms
in
dec
daa
lret
add
mov
cmpsb
mov
cmp
cmc
pop
in
xchg
xchg
je
add
pop
push
and
jle
xchg
lods
adc
jg
pusha
ret
fidivs
rep
std
ljmp
outsb
xchg
mov
mov
or
mov
xor
fidivs
stos
insl
lods
mov
jle
out
out
fyl2x
lods
mov
or
ret
jbe
sbb
popa
icebp
jo
push
jnp
scas
hlt
or
hlt
inc
mov
mov
das
imul
clc
cltd
jge
and
call
outsl
leave
fimull
jl
or
arpl
or
jne
xorb
xor
mov
mov
icebp
mov
mov
mov
sbb
inc
ret
ret
sbb
cmp
jecxz
enter
sbb
sub
sub
rolb
stos
and
int
in
fiadds
cmp
icebp
repnz
xor
jecxz
pusha
push
and
push
notb
idivb
push
idiv
add
mov
test
test
add
loopne
xchg
mov
cld
and
push
mov
push
cmp
dec
shlb
mov
mov
in
cmc
jg
divb
push
je
ror
adc
xchg
pushf
imul
enter
dec
jns
or
loop
xor
inc
lcall
fisubl
js
mov
xor
push
jp
addl
pop
push
dec
mov
sub
fisubl
jmp
xchg
pop
in
enter
push
cmp
jnp
mov
inc
ret
filds
es
jmp
xchg
jmp
xchg
into
outsb
mov
sub
jle
jne
int3
add
daa
rcr
mov
pop
les
loope
mov
jmp
sub
filds
inc
sahf
pop
bound
xlat
push
or
cmp
sarl
test
xchg
movsl
insb
sub
popf
xchg
push
cmp
cmpsl
inc
sbb
repnz
push
mov
lcall
fisubl
jle
lea
add
adc
mov
movsb
out
inc
out
mov
pop
ret
clc
mov
jp
inc
cmp
aam
and
pusha
mov
rcrl
jl
daa
cltd
jp
mov
or
dec
mulb
negb
xchg
cmc
outsl
mov
cs
ljmp
dec
push
dec
xchg
inc
xor
out
jns
pushf
call
imul
pop
cmp
insl
mov
mov
call
test
ret
cmp
arpl
aam
push
and
test
pop
iret
or
sub
xchg
andb
nop
or
fcom
out
fcom
not
nop
test
push
mov
fildll
sbb
pop
push
inc
stos
sbb
mov
jp
xor
int3
mov
push
aad
mov
and
xor
mov
pop
mov
lods
mov
mov
cmp
cmp
cmpl
scas
jmp
lahf
xchg
sub
jne
in
jne
movsb
sub
sbb
pop
ja
sti
adc
mov
sbb
add
mov
notl
daa
fldcw
inc
out
jo
out
jecxz
lods
cmpsb
mov
ds
mov
scas
xchg
into
inc
xchg
add
pop
push
and
sahf
jg
mov
addb
mov
ljmp
insl
xchg
mov
rclb
les
jmp
pop
addl
xor
mov
lods
mov
pop
jle
out
out
sub
dec
mov
jbe
sbb
popa
lock
pop
inc
push
jnp
lods
hlt
sbb
hlt
inc
xchg
push
jne
and
mov
lds
outsb
movsb
cmp
fiaddl
lret
hlt
pushf
mov
mov
addr16
jp
repnz
iret
jmp
jmp
mov
icebp
jo
repnz
dec
sbb
inc
ret
cmp
xlat
xor
sub
test
ds
scas
pop
dec
jae
sub
and
aam
out
cmp
stos
or
jecxz
ficoms
cmp
icebp
ss
xor
testl
idivb
insb
repnz
add
pop
test
addb
sbb
je
arpl
inc
add
mov
jp
jecxz
and
arpl
push
jle
mov
ffree
scas
cmc
xchg
inc
divb
dec
je
out
adc
insb
arpl
or
outsb
mov
ja
jge
mov
inc
lret
push
dec
inc
in
inc
fisubrl
lcall
pop
add
outsb
adcb
loopne
sbb
shlb
enter
mov
imul
insb
cld
rol
test
test
and
jmp
insl
adc
adc
into
ret
outsb
dec
sub
mov
adc
int3
in
ror
cmp
rcr
pushf
sub
push
mov
pop
xchg
xchg
or
out
sahf
imul
mov
pop
sahf
insl
popa
sahf
mov
or
push
xor
sar
sbb
movsl
popf
lret
in
mov
dec
mov
cwtl
sarb
cmpsl
push
sbb
repnz
mov
push
add
sbb
lds
stos
fwait
xor
mov
out
adc
mov
out
outsb
out
aas
out
push
mov
sti
inc
and
or
mov
and
add
jl
ds
jp
in
mov
and
pop
push
add
divb
test
outsl
cwtl
hlt
outsl
mov
cs
das
or
push
dec
pop
dec
std
mov
imulb
inc
aad
pushf
aad
fsubrl
popf
ljmp
sbb
xorl
mov
ret
cmpl
shll
or
mov
push
idivb
out
cmpl
jg
ret
ficoml
xchg
pop
mov
fcom
out
sub
lods
push
fisubrs
or
stos
sbb
and
pusha
xchg
jns
xor
mov
scas
mov
aaa
test
sub
cs
fisttps
pop
pop
push
shl
daa
scas
add
ret
or
mov
push
in
mov
push
lahf
fists
shll
adc
push
and
clc
loop
mov
xchg
mov
add
mov
out
aaa
pop
mov
lea
sbb
fists
mov
or
cld
aad
inc
out
jp
adc
mov
jne
scas
or
cld
fiadds
push
cli
pop
push
and
mov
xchg
es
fs
andb
sti
ljmp
insb
xchg
mov
notl
mov
stos
in
pop
ficomps
int
sbb
ja
int3
out
mov
addr16
out
rol
out
mov
ljmp
sahf
out
and
dec
inc
push
jnp
mov
or
into
pop
cmp
cmp
pop
es
aaa
and
arpl
fwait
pushf
fimull
push
addr16
insb
xchg
aaa
jmp
lret
js
scas
inc
push
lods
testb
sbb
dec
sbb
inc
ret
ret
es
jmp
lds
push
outsb
pop
mov
sbb
stos
sbb
bound
sub
sub
push
into
inc
stos
shlb
xor
leave
mov
xor
jp
xor
pusha
or
push
test
cmc
mov
push
sub
test
pop
test
xchg
icebp
stos
sbb
jae
arpl
cmp
cmc
decl
dec
fdivrl
xchg
shll
roll
mov
cmc
jae
cmc
jae
dec
je
cli
int3
adc
and
insl
dec
xchg
enter
dec
xchg
and
enter
push
lcall
iret
push
inc
clc
mov
fimull
adc
adc
adc
imul
sub
std
in
imul
cld
aad
cld
test
pop
xchg
das
inc
cmp
cmp
cs
jmp
and
jp
ror
outsb
arpl
outsl
sbb
sbb
xor
iret
rclb
arpl
push
or
les
pop
scas
jle
mov
daa
inc
dec
sub
in
sub
inc
into
cmpsb
pop
es
sahf
mov
fstpt
rol
sarb
insb
movsl
fisubs
jno
rorb
stos
setge
repnz
icebp
mov
sar
jecxz
imul
xchg
cmp
mov
jbe
mov
dec
mov
cmpsb
pop
adc
cmc
pop
out
sub
out
js
add
sbb
cli
pop
clc
inc
jbe
dec
jp
in
popa
int
bound
jmp
mov
scas
mov
jns
mov
mov
je
movsb
pop
inc
mov
cmc
lcall
insb
mov
mov
pop
mov
testb
aad
arpl
aad
pushf
mov
ljmp
pop
addr16
mov
test
adc
adc
and
sarl
jns
mov
pusha
push
fcos
push
mov
out
mov
cmc
or
pop
shrl
sub
jb
enter
adcb
stos
addr16
jae
xchg
fdivr
in
fcom
aaa
jae
test
xchg
inc
fwait
pop
mov
adc
sub
and
cmp
jae
xor
leave
dec
aad
jecxz
dec
outsl
lret
jp
bound
aad
pop
jno
divb
mov
fcmove
fisttps
mov
cmp
ret
aas
mov
mov
mov
sub
sti
lods
jbe
pop
out
mov
add
scas
pusha
push
pop
xor
sti
push
outsl
incl
les
mov
imul
test
and
mov
sbb
jecxz
push
out
aas
jge
in
push
add
add
sbb
push
jmp
xchg
es
lods
and
mov
mov
adc
lods
mov
jmp
pop
pop
cmp
xorb
aaa
out
sub
in
mov
pop
fsubl
add
push
mov
jbe
pop
je
pop
icebp
stc
repnz
popf
testl
ffreep
insb
or
mov
cld
and
xchg
loope
int3
cmp
arpl
or
sub
adc
es
out
jbe
adc
call
lods
daa
scas
lods
jno
add
sbb
jno,pn
inc
pop
pushf
ret
sbb
inc
pushl
lds
push
insl
pop
lods
pop
ds
sbb
jbe
lds
push
push
sub
test
in
out
inc
stos
mov
test
ljmp
xor
jo
icebp
push
mov
xor
xor
push
mov
push
mov
idivb
dec
dec
mov
add
adc
add
pop
test
adc
test
mov
stos
sbb
add
pusha
pushl
jecxz
cmp
mov
mov
sbb
jp
scas
shlb
push
mov
and
sub
jne
inc
div
add
int3
adc
mov
adc
mov
enter
dec
divl
iret
loop
std
cmp
movl
cwtl
fimull
dec
xor
dec
aad
push
imul
lods
or
mov
push
mov
movsb
test
push
fidivl
mov
push
jmp
nop
aam
or
and
aaa
jl
sbb
les
sbb
adc
or
mov
push
xchg
xor
mov
mov
aas
fsubl
sub
cmpsb
dec
dec
push
out
pop
rcrb
repnz
sti
pop
pop
mov
add
cmp
sub
movsl
mov
cmc
pop
aad
lret
mov
stc
push
cwtl
ror
lcall
rorb
loop
or
mov
pusha
mov
lock
fs
sbb
xchg
fs
jnp
cmp
roll
data16
pop
popa
mov
xor
push
fstl
adc
iret
lahf
jge
and
push
inc
xor
adc
push
mov
outsl
cmp
cmp
pop
nop
mul
adc
xor
add
negb
lods
lahf
add
push
or
cmp
aaa
pop
dec
out
sub
test
stc
movsl
in
sub
test
inc
xchg
gs
adc
jle
mov
mov
inc
ja
loope
mov
imul
sbb
and
push
or
add
inc
dec
testb
mov
sbb
pushf
fs
mov
mov
xchg
pop
loopne
jl
cmp
jnp
mov
push
sbb
dec
pusha
fnstenv
inc
mov
inc
sub
mov
xlat
movsl
shlb
add
adc
jno
aad
das
xchg
enter
in
mov
mov
or
gs
jecxz
data16
popf
cmp
ljmp
jmp
mov
cmp
gs
add
movsb
les
or
hlt
sub
adc
dec
xchg
popf
xchg
mov
lcall
xor
cmp
mov
pop
stc
cwtl
or
bound
sbb
xor
cmpsl
nop
xchg
mov
lea
sbbb
int
roll
push
sbb
lret
jo
push
jne
mov
lds
push
cs
in
inc
iret
fisubrl
in
and
xchg
rolb
shlb
cmpsl
pop
inc
jae
popa
sahf
int3
adc
scas
dec
enter
cmpsb
adc
das
sub
xchg
and
mov
fbld
xchg
mov
movsl
jns
addb
or
or
push
and
adc
or
push
repnz
das
mov
pop
pop
or
pop
jo
ret
xor
lods
mov
dec
push
mov
pop
dec
popf
cmp
hlt
push
jne
lock
jo
dec
pop
jo
mov
mov
into
pop
cli
lret
arpl
orb
cwtl
push
std
xchg
inc
sbb
pusha
insb
aam
jae
ret
rolb
xchg
into
cmp
adc
add
sub
negl
rcr
inc
sbb
adc
cltd
push
mov
cli
and
fdivs
jmp
dec
aad
pusha
mov
push
sbb
adc
jge
jmp
or
pop
lret
mov
notl
in
sbb
mov
inc
add
pop
js
and
out
and
imul
push
outsb
and
enter
fwait
pop
dec
xchg
xchg
dec
insb
cld
mov
scas
call
cld
faddl
dec
std
je
xor
mov
xor
mov
ds
dec
or
mov
add
popa
mov
lahf
mov
pop
mov
les
jle
sub
mov
inc
sarl
lret
je
adc
aad
cmpsb
leave
movsb
aam
mov
fcomps
mov
pop
mov
std
pop
ret
mov
into
push
std
mov
scas
shlb
lahf
popa
xchg
fimull
test
je
int
lea
lea
xor
jmp
aam
sub
cli
jne
sub
out
fnstsw
cmpsw
imul
xor
inc
push
push
movhps
or
adc
jno
es
xchg
js
lock
addr16
mov
rclb
xchg
hlt
andb
outsl
test
cmp
add
js
or
sub
sub
cmpsb
xchg
xor
aaa
mov
lock
jmp
and
add
in
cld
dec
decl
cmp
cmpsw
mov
scas
sbb
dec
adc
ljmp
ret
aad
je
es
jle
pop
scas
mov
inc
adcl
cmp
out
dec
mov
sarl
dec
mov
test
sti
daa
add
adc
mov
cli
leave
js
outsb
and
adc
mov
cmp
cmp
mov
std
pop
cmp
setl
insb
cmpsb
and
inc
iret
fisttps
repz
loop
inc
dec
cmp
dec
mov
test
repz
idiv
fidivrs
jne
pop
int3
cmpsb
imul
pop
ret
jb
sahf
mov
popf
testb
imul
sbb
aam
hlt
rcrb
negl
push
mov
dec
bound
cmp
mov
sub
jp
movsl
xchg
pop
xor
cmc
mov
inc
xor
fs
cmpsb
pop
xchg
movsl
push
loopne
ret
cwtl
push
in
or
rcr
mov
cltd
jge
xlat
adc
xlat
add
out
repz
in
fisubrl
mov
outsb
imul
inc
lods
mov
xchg
fldl
xor
test
rorb
ret
xchg
sbb
pop
aaa
sub
cwtl
call
and
xor
fistpl
imul
loope
movsb
mov
push
mov
test
or
dec
push
aas
xor
inc
or
push
push
fwait
adc
ds
rolb
leave
cmp
lods
icebp
adc
cmp
sub
lcall
dec
push
mov
inc
dec
sbb
push
mov
jns
enter
int
cmpsl
pop
sbb
out
push
xor
inc
xor
adc
pop
adcl
pop
std
sub
cs
jns
mov
div
adc
into
ds
enter
push
xlat
dec
or
sar
jp
cmpsl
fwait
jge
xchg
sbb
pop
add
nop
pop
fistpll
pop
and
push
mov
inc
mov
ss
ss
or
inc
push
aam
adc
aas
repnz
mov
xchg
mov
pop
or
jo
add
sti
addl
xor
sbb
or
mov
pcmpeqb
pop
insb
xchg
inc
pusha
lret
sbb
add
inc
cmpsb
out
mov
andl
out
cmp
xor
arpl
cltd
sbb
xor
mov
fisubs
sbb
adc
movsl
mov
popa
mov
xor
xor
les
dec
aad
xchg
insb
cs
add
dec
or
sub
jne
lcall
ja
aad
mov
jae
mov
scas
mov
ja
shlb
xchg
out
pop
lret
movsl
lahf
fwait
test
psllq
pop
xchg
pop
xchg
jg
aad
lahf
popf
mov
xchg
sbb
mov
pushf
pop
xlat
jmp
int
pop
adc
mov
addl
xchg
xchg
jae
mov
xchg
dec
insl
mov
outsb
push
lcall
popf
inc
arpl
movsb
add
in
shrb
mov
std
or
push
movsb
ror
adc
std
dec
cltd
cmc
ss
cmp
sbb
xchg
aam
sub
pop
mov
fidivrl
adc
mov
mov
dec
dec
out
ljmp
push
adc
xor
jecxz
sub
mov
push
xchg
adc
mov
mov
adc
push
inc
pop
jnp
push
mov
sbbl
inc
dec
hlt
std
divl
add
xor
cmc
lods
dec
cltd
cltd
shrl
cs
jmp
push
test
and
jb
in
mov
inc
imul
add
mov
cs
nop
jmp
mov
lea
fistps
cmp
xor
add
push
repz
add
mov
outsb
xchg
lret
movups
loopne
loope
sahf
imul
or
shlb
mov
xlat
sub
imul
cmp
test
push
rorl
mov
push
or
fmul
fmulp
rorl
mov
dec
inc
movsl
rolb
sbb
cmpsb
cmp
or
aad
mov
pop
inc
cli
add
lea
dec
xor
push
int3
ret
inc
out
or
inc
lret
xorb
icebp
mov
xchg
lahf
jg
inc
std
xchg
les
lret
jnp
les
dec
cmp
pop
xchg
xchg
pop
lea
mov
repnz
orl
out
mov
mov
aaa
push
push
inc
push
jp
or
test
mov
sub
mov
ret
xchg
mov
sbbl
add
inc
cmp
pusha
outsl
and
movsl
sbb
ret
test
movsb
mov
pop
in
lods
icebp
rolb
movsl
push
dec
xor
or
mov
idivb
mov
push
ret
push
movsb
aad
push
mov
sub
pop
jmp
shl
cwtl
cmp
inc
shll
push
mov
ljmp
xor
sub
or
pcmpeqw
gs
mov
sbb
xchg
sbb
pop
adc
insl
push
icebp
int
mov
in
push
pop
mov
mov
jns
sub
out
xor
mov
mov
jp
and
jbe
mov
inc
dec
lret
adc
adc
xchg
gs
enter
dec
ja
movsb
ja
popf
int3
loop
lds
std
inc
das
push
dec
inc
dec
popf
inc
ficoml
das
mov
and
sub
sarb
pop
outsl
gs
push
push
mov
enter
push
sbb
in
inc
cmp
sar
stos
push
test
fiaddl
ret
jmp
jmp
je
jp
es
into
outsb
mov
outsl
sbb
les
cmpsb
outsl
addr16
push
mov
rcr
add
fildl
push
xor
les
sbb
sub
mov
sub
pop
pop
cli
pop
sahf
rcrl
xor
mov
enter
fldcw
shlb
shll
idiv
ficoms
add
shlb
cld
pslld
repnz
adc
enter
in
in
hlt
or
adc
mov
out
imul
add
cmp
cli
pop
ret
pop
sti
inc
aam
dec
jp
popf
jp
push
iret
popa
and
ja
ds
idivl
jp
xchg
jp
dec
iret
mov
test
cmpsl
pop
mov
pop
negb
cld
out
outsl
mov
les
pop
mov
scas
dec
pop
movsb
inc
dec
sub
aad
aad
inc
sub
pop
cwtl
aas
pop
addr16
mov
mov
pusha
loope
adc
ret
pop
jp
mov
arpl
mov
mov
inc
add
sub
lret
sbb
lret
sbbb
adcl
jnp
xchg
fmuls
fcom
jge
rolb
fldcw
xchg
in
pop
push
mov
outsb
and
je
xor
mov
dec
inc
mov
adc
enter
jnp
mov
mov
inc
xor
xchg
iret
fistps
and
mov
mov
daa
cmp
jl
mov
nop
mov
sysret
adc
jecxz
xchg
jne
call
in
inc
cmp
sbb
shlb
sti
call
push
xchg
ficompl
mov
mov
dec
repnz
dec
out
daa
push
movsb
daa
add
jl
out
jmp
inc
in
scas
cmp
xchg
inc
inc
xchg
add
pop
push
and
or
es
orb
fst
mov
adc
adc
call
mov
imul
pop
xorl
xor
fdivs
xor
mov
loopne
out
xor
inc
mov
jbe
pop
ja
push
mov
test
fxtract
inc
es
inc
xchg
fwait
insb
out
insl
imul
orb
and
aad
outsb
sbb
outsl
fidivrl
fimull
or
or
pop
arpl
cli
jns
jne
jns
jmp
leave
jmp
or
lods
jle
lods
icebp
call
inc
sbb
inc
ret
ret
push
fadd
dec
xor
insl
sbb
dec
ret
imull
sbb
insl
sub
and
mov
inc
stos
push
stos
xor
pushl
fisubrs
xor
icebp
pop
xchg
xor
mov
mov
push
neg
push
mov
jo
mov
test
push
test
cli
cld
test
sbb
outsl
loopne
lea
cld
push
mov
mov
fidivrs
clc
into
and
call
and
in
cmc
or
jae
dec
je
pop
enter
data16
call
dec
ja
mov
loop
fnstenv
std
inc
inc
push
dec
inc
pop
pushf
inc
fisubl
mov
aaa
fildll
adc
jl
pop
andl
mov
enter
data16
in
push
in
push
cmp
sar
mov
flds
xchg
cmp
xchg
mov
jns
aas
jp
cmp
into
outsb
and
sbb
sbb
outsb
addr16
gs
rcr
adc
das
pop
les
pop
les
or
sub
push
movsl
pop
outsb
stc
pop
sahf
in
sahf
mov
repnz
faddl
cmp
sub
shlb
shll
or
ficoms
adc
adc
pmaddwd
pslld
arpl
mov
and
enter
in
clc
aaa
or
lea
loopne
adc
mov
out
push
out
add
push
pop
ret
push
sti
inc
call
pushf
jp
imul
and
jbe
ds
idivb
jp
xchg
jp
pop
into
mov
cwtl
push
cmpsl
pop
iret
cli
pop
test
negb
adc
outsl
mov
ret
mov
xchg
lock
int3
inc
pop
dec
add
mov
inc
aad
xchg
aad
push
sub
pop
lods
ds
addr16
mov
mov
mov
je
sub
cwtl
jle
ret
ret
push
jp
lret
int
push
xorl
inc
sub
inc
subl
nop
int3
aam
fs
xchg
add
aam
xlat
lods
cwtl
rorl
xchg
test
lds
sbb
inc
bound
loope
pop
and
loopne
pusha
pop
ljmp
dec
and
xchg
jae
mov
mov
sbb
adc
inc
cmp
add
or
filds
mov
daa
shrb
mov
jge
adc
push
lahf
inc
push
shlb
call
movsb
push
cld
das
inc
sbb
xchg
cmc
xchg
sti
sbb
sbb
dec
pop
mov
enter
fcoml
ret
jle
daa
insb
cmp
cmp
inc
out
lret
hlt
fbld
in
mov
add
dec
inc
push
push
clc
adc
cmp
aad
test
sbb
shll
dec
stos
adc
adcb
xchg
mov
lret
les
loopne
pop
jmp
pop
ret
cmp
scas
mov
lods
int
aad
es
sub
inc
mov
xorl
shll
icebp
mov
hlt
adc
mov
jmp
filds
jle
sub
cmc
mov
outsb
lea
fidivrl
dec
cwtl
or
mov
and
push
jns
jne
js
jmp
enter
jbe
out
xchg
stos
lods
icebp
lods
push
mov
inc
lds
ret
pop
lahf
arpl
lds
dec
daa
or
fcompl
and
dec
mov
xchg
inc
jb
aas
jo
loopne
xchg
stos
xor
jmp
adc
test
xor
jle
pusha
mov
loope
mov
icebp
es
shl
dec
imul
test
mov
lds
cld
sbb
adc
arpl
lcall
mov
std
adc
mov
and
in
jp
in
cmc
push
push
mov
imul
pop
adc
push
push
xchg
sar
std
ret
pop
sbb
ja
xchg
inc
loop
cli
sar
mov
pop
sbb
mov
fimull
jnp
sbb
mov
cmp
pop
orl
ja
dec
dec
dec
popa
testb
test
std
xor
test
ds
jp,pt
jge
std
outsb
xchg
push
imul
lcall
or
jne
and
les
xchg
cld
inc
xor
inc
pop
add
and
push
or
push
or
push
movsl
roll
mov
cmp
xlat
je
enter
fdivrs
dec
push
mov
clc
movsb
mov
cs
fidivs
mov
mov
cltd
shlb
sahf
jl
fwait
or
mov
jle
mov
dec
inc
fucompp
jg
jge
mov
adc
ret
out
add
pusha
push
cmp
push
xor
and
ds
or
in
adc
ret
xchg
jne
ds
movsb
lock
ret
daa
xchg
cwtl
jo
mov
decb
orl
jmp
xor
imul
insb
push
pop
sub
sbb
sahf
mov
sahf
xor
jns
mov
add
lods
inc
rorl
ret
lods
sbb
scas
mov
xor
pop
aam
insb
sbb
xchg
sub
scas
aaa
mov
jecxz
xchg
repz
out
inc
cmc
adc
mov
movsl
sub
test
mov
cld
cltd
clc
pop
leave
cwtl
jle
xchg
sarb
dec
sbb
inc
sbb
xor
push
addr16
pushf
aad
and
or
outsb
adc
jmp
xor
pop
ficoms
cmp
out
mov
inc
test
mov
or
dec
loopne
jl
add
hlt
idivb
out
repnz
pop
mov
call
daa
jl
cmp
xchg
add
test
mov
std
popf
js
hlt
cld
add
es
sbb
pop
je
pop
insl
iret
jns
pushf
xchg
int3
sub
std
mov
out
lahf
lret
xchg
push
dec
lock
adc
push
and
inc
or
adc
mov
lret
xor
push
mov
mov
shr
cmc
data16
cs
jns
sub
in
push
inc
notb
ds
sub
sub
add
push
xor
in
fildll
pop
in
ja
cld
lods
adc
loope
es
sub
dec
outsl
jp
add
shrl
pop
int3
jecxz
push
mov
add
push
inc
js
hlt
xor
add
sbbl
test
adc
into
cmpsb
test
mov
inc
popa
push
mov
fs
fwait
enter
ror
ja
lds
push
cmp
push
in
xor
aam
xchg
out
imul
out
dec
xchg
je
out
negb
ficoms
mov
ficoms
ljmp
jmp
sub
add
testb
mov
and
lcall
daa
mov
data16
loop
fildl
add
mov
rclb
mov
ret
lahf
and
or
mov
add
dec
mov
in
xor
adc
sub
arpl
mov
add
insl
push
daa
adcl
jmp
xchg
inc
imul
rcr
loopne
aam
jecxz
dec
out
or
mov
jb
adc
sub
mov
push
fbld
dec
pop
mov
sbb
inc
dec
xchg
adc
xchg
in
mov
movsl
daa
push
mov
cmp
enter
mov
cmp
lret
sbb
sbb
sbb
test
mov
idivb
add
or
xchg
nop
daa
push
imul
push
xor
sbb
mov
jae
in
test
mov
jle
push
mov
cld
jmp
movsl
dec
dec
mov
xor
ficoms
sbb
pusha
sarl
push
push
enter
mov
lea
push
mov
lods
xor
lea
lcall
mov
ja
faddl
mov
pop
andl
ja
or
ret
cmp
inc
xor
jp
cmc
adc
imulb
add
rolb
add
hlt
jp,pt
mov
cld
cmpsb
movsb
insl
imul
ja
mov
es
sbb
sbb
mov
fisttpl
cmpsl
xor
aaa
shr
or
insl
pop
sti
push
fstps
iret
jge
sarb
xor
repz
shr
jmp
jl
ret
cmpb
jp
and
loop
fldcw
xchg
bound
outsb
jg
lret
jbe
mov
cmp
stc
xchg
cmc
push
fimull
lock
lret
shl
fcoml
lods
fucompp
in
ror
jecxz
mov
int3
jle
das
sbb
xor
push
faddl
adc
sub
mov
push
hlt
sarb
or
mov
fldl
lds
sub
mov
icebp
hlt
daa
cmp
jns
mov
mov
call
jnp
negb
fildl
in
push
aaa
pop
sbb
insl
add
test
mov
in
jb
mov
outsl
in
popf
cmp
test
add
inc
cmp
in
mov
mov
fucomi
xchg
out
repnz
mov
and
orl
inc
jbe
push
in
pop
in
mov
add
adc
sbbl
and
jge
jg
loop
ret
out
and
out
mov
clc
dec
mov
adc
dec
inc
mov
add
shlb
test
popa
daa
jmp
lock
and
mov
mov
push
insl
add
mov
shl
int3
sub
test
sub
ffree
fimull
or
cmp
inc
decb
adc
test
movsb
test
gs
ds
fists
inc
sbb
xor
cli
lods
mov
out
lds
jo
cs
lret
xor
lea
cmp
mov
cmpsl
jnp
out
mov
inc
ljmp
movl
test
xor
cli
sbbb
pop
pusha
iret
in
adc
shrb
cmp
fucomip
xor
leave
fsubrs
and
bound
push
test
inc
mov
outsb
sub
sbb
aas
add
pop
mov
rorl
lret
cmovbe
mov
mov
rcrb
sbb
adc
mov
inc
cmc
xchg
mov
push
jne
push
push
leave
adc
in
enter
pop
mov
sub
mov
repz
fisubrl
mov
add
arpl
or
cs
sarb
cmp
xchg
cmp
add
adc
lahf
in
sti
dec
test
mov
push
test
pop
pop
mov
ja
or
xor
add
loop
enter
sbb
mov
in
xor
and
jne
pop
dec
in
add
enter
stos
testb
inc
xor
fsubp
mov
imull
sbb
inc
pop
stos
and
lods
mov
jle
test
ret
and
pop
in
out
cmp
fstpt
cwtl
jbe
aaa
adc
call
addr16
mov
and
out
sub
pop
jle
sub
xchg
jno
mov
and
push
mov
sbb
das
jne
xchg
adc
sahf
aas
inc
das
cmp
inc
mov
and
sbb
or
cmc
mov
xlat
sub
je
nop
cmp
dec
sub
rol
outsl
xchg
pop
jl
sub
sub
mov
testl
pushf
repnz
jmp
sub
adc
lret
fprem1
pop
nop
test
jl
push
inc
mov
cmp
mov
xor
rcl
nop
cmp
je
pop
sahf
mov
dec
out
sub
hlt
xor
out
cld
jno
call
int3
mov
lods
decl
jmp
mov
clc
jns
cmpl
mov
adc
pop
ds
insb
sub
in
mov
cmp
mov
insl
jle
ds
pop
and
icebp
hlt
mov
pop
inc
mov
dec
pusha
nop
daa
cmp
sbb
aad
sub
or
notl
in
in
mov
push
insb
ss
and
sti
outsb
push
nop
jmp
or
jl
mov
loopne
push
mov
repz
xchg
daa
aad
dec
gs
jno
pop
cmp
lea
mov
xchg
mov
fdivl
xchg
jbe
mov
iret
inc
clc
pop
jbe
es
mov
cli
adc
std
dec
mov
mov
hlt
push
jp
mov
out
cmp
std
fdiv
imul
frstor
cli
pop
shll
pushf
iret
in
pop
add
pop
mov
jmp
mov
xchg
sub
enter
adc
xlat
ja
pop
mov
ret
or
ljmp
sub
stos
in
insb
ja
and
int
in
jp
mov
add
pop
dec
mov
sarb
or
lods
filds
das
sbb
test
mov
pushf
out
enter
shll
mov
xchg
ret
jo
stos
testb
call
mov
pop
ja
ljmp
test
xchg
mov
pop
and
xor
pop
mov
insl
dec
pop
xchg
xor
push
daa
inc
adc
imul
ljmp
fwait
dec
out
jno
in
cmp
lret
lods
mov
int
insl
stc
sbb
add
push
cmp
inc
sub
dec
cmp
add
sbb
mov
int
cltd
mov
sub
add
fsubl
push
cmc
mov
cld
mov
dec
sbb
cs
adc
or
fisttpll
repnz
pusha
xchg
cmp
out
pushf
or
dec
cmpsl
scas
inc
bound
je
shll
push
fmulp
popa
mov
ret
orl
jno
scas
test
xor
popa
jbe
lcall
nop
test
pop
clc
dec
adc
pop
outsl
sbb
fdivrl
push
push
push
mov
fsubrs
fidivl
inc
mov
in
ja
into
in
fnstsw
xor
add
decl
call
dec
test
adc
insb
fildl
fmulp
adc
pop
imul
mov
addr16
mov
inc
mov
mov
das
xor
andl
inc
jl
mov
pop
mov
jecxz
jo
das
inc
std
jo
pop
jnp
lods
inc
xchg
cmp
mov
pop
push
xor
ret
popa
movsb
xor
cmp
adc
adc
shlb
xchg
scas
sbb
lea
les
testl
lcall
stc
add
mov
andb
outsl
adc
cs
cli
mov
rclb
mov
leave
inc
popf
ljmp
aas
adc
in
loopne
mov
pop
adc
loope
popf
or
ja
movq
daa
nop
xchg
xor
enter
and
adc
cmpb
sbb
push
stc
or
loopne
lahf
les
loope
arpl
mov
sar
cld
xchg
pop
xchg
mov
outsl
les
or
adc
jo
xor
filds
mov
movsl
mov
gs
pop
xor
jmp
add
jmp
mov
lret
imul
cmp
sbb
jb
imull
popa
data16
inc
jmp
aaa
xchg
push
mov
sbb
cmpsl
xor
imul
popa
xchg
push
insl
test
sub
mov
mov
sub
decb
add
and
test
orl
lds
push
lock
add
add
sti
dec
bound
mov
out
xchg
cli
inc
fcmove
inc
xchg
rcr
mov
scas
insl
mov
movsl
jnp
repz
shll
jmp
stos
imul
adc
sbb
mov
jns
sbb
mov
nop
pop
fistps
cltd
popf
aam
inc
call
rep
add
mov
hlt
ret
cmpsl
add
push
add
add
sbb
ss
sbb
push
xchg
cwtl
aaa
or
lods
or
scas
cmp
inc
cmpsl
pop
xor
es
mov
ja
mov
or
ds
xor
lds
and
cmp
popa
jne
mov
or
aas
jbe
xor
mov
xorl
shr
stos
adc
push
jno
scas
in
nop
pop
jo
adc
mov
mulb
or
mov
mov
and
test
loope
pop
clc
test
jecxz
outsb
mov
lahf
dec
or
jp
pop
std
stc
sub
dec
mov
sahf
inc
iret
mov
xchg
in
cmc
or
and
popa
stos
lods
jl
insb
push
push
cli
mov
in
dec
pop
ja
push
mov
mov
xchg
push
xor
inc
aam
pop
cs
cmc
test
addr16
stos
popa
cmc
mov
pop
aaa
test
outsl
mov
aaa
xchg
mov
dec
in
jmp
push
mov
leave
fmul
dec
sub
popa
sahf
hlt
adc
pop
mov
mov
lahf
push
and
push
dec
insl
sbb
sub
push
test
cmp
mov
pop
jp
mov
and
dec
push
xchg
adc
out
pop
dec
xorl
jno
xchg
xlat
daa
xor
nop
xchg
jecxz
xor
dec
jno
pop
movsb
add
psrlq
add
ljmp
jbe
das
je
pop
xchg
dec
sub
mov
inc
jno
mov
push
mov
add
shl
adc
lea
mov
xor
addb
push
pop
push
pop
ss
cld
je
cs
dec
jp
and
inc
imul
rorb
sbbl
dec
call
inc
xchg
outsl
xchg
imul
sbb
add
jbe
out
mov
dec
jp
pop
iret
and
mov
sub
std
lret
push
ljmp
push
sub
cmp
adc
pop
mov
pop
dec
lcall
pop
lods
xor
inc
lods
inc
pop
xchg
sarl
in
nop
xor
hlt
inc
pop
mov
jns
xchg
jl
xor
cmc
iret
push
movsb
loop
mov
fadds
xchg
in
push
inc
movsl
clc
inc
mov
in
sahf
in
pop
mov
xor
and
inc
dec
jb
sti
jbe
in
lret
push
fwait
mov
dec
mov
xor
ljmp
fldenv
out
stos
jp
sarb
inc
int
dec
orb
pop
push
fcoml
out
jno
jno
in
xchg
push
mul
jnp
repnz
lds
inc
bound
and
xchg
adc
imulb
jmp
push
mov
out
dec
call
mov
test
cmp
xchg
dec
stos
mov
and
dec
push
mov
pop
pop
in
int3
jae
cwtl
test
lea
stos
jb
dec
inc
out
std
in
loopne
cmp
out
shlb
mov
lret
sbb
inc
inc
std
dec
xchg
mov
and
cmc
sbb
inc
mov
icebp
and
push
mov
out
iret
fstps
cmpsl
outsl
jg
jbe
jle
or
aad
stos
sbb
loopne
jle
cltd
sub
sub
mov
jo
inc
imul
cmpsl
xchg
mov
inc
sbb
in
dec
gs
lds
and
adc
inc
push
sbb
ret
xchg
xor
dec
and
xchg
mov
cmp
cs
and
xchg
ret
je
in
inc
movsb
pop
mov
aad
sbb
sbb
call
cmpsl
pop
jge
inc
xchg
cmpsl
pop
out
inc
push
xor
xchg
out
inc
pop
ficoml
cwtl
in
insl
sub
test
pop
sub
andb
stos
push
idivb
fwait
popa
fidivl
sub
xchg
xor
test
imull
rol
adcl
dec
add
movsb
xlat
mov
cmp
dec
cmc
inc
pop
mov
push
aad
xchg
rclb
sub
pusha
mov
jnp
xor
mov
xor
pop
dec
ja
clc
add
pop
scas
orl
fs
mov
mov
decl
fdivl
jae
imul
mov
stos
xchg
xchg
jmp
xchg
pop
int3
xor
ret
pop
cmp
xor
roll
cmp
dec
andb
push
gs
pop
into
out
mov
sbb
fistpll
push
add
test
scas
std
inc
mov
mov
mov
fidivrs
clc
lea
adc
sub
xchg
jg
repz
sahf
xor
scas
ret
fsubp
jp
scas
pop
gs
mov
imul
cmpsb
xchg
shl
mov
jno
int
or
pslld
sub
mov
icebp
enter
subb
fs
repnz
xor
scas
add
ret
ja
mov
jmpw
cmpsl
hlt
and
xor
dec
dec
jp
clc
sbb
lods
and
mov
int3
xchg
dec
pop
data16
cmpsl
cmpsl
ror
jne
dec
or
negb
in
rorl
pop
sahf
fimuls
inc
ds
dec
xor
or
mov
inc
aad
mov
sahf
jle
cs
push
sub
push
les
call
clc
or
xor
inc
out
xchg
adc
and
je
ret
daa
mov
hlt
add
mov
in
jl
mov
xchg
scas
add
pop
mov
fdivrs
dec
cmc
lock
inc
std
leave
daa
cmpsb
fdiv
pushf
jnp
enter
out
insb
sbb
adc
inc
in
ret
or
in
xchg
mov
mov
icebp
add
sub
mov
adc
cmpsl
imulb
fimull
push
xchg
push
pop
add
in
mov
mov
adc
jne
fimuls
fdiv
aad
iret
xor
sbb
insb
pop
out
je
cld
test
xchg
imul
mov
scas
fwait
out
addl
and
xor
sti
pop
push
out
xchg
add
mov
addr16
je
dec
fs
and
dec
push
xchg
inc
repnz
adc
mov
mov
mov
cmp
xchg
pop
adc
fdivl
xchg
fnsave
andb
cwtl
ja
adc
out
loop
xor
loopne
rcl
push
cld
add
pop
mov
dec
enter
mov
mov
pop
cmp
sti
lret
repnz
and
sub
jge
call
push
lods
fists
in
xchg
movsl
xchg
mov
inc
sbb
push
mov
arpl
inc
dec
cmc
adc
and
jmp
stos
cwtl
aaa
notl
lea
enter
cltd
jns
pop
jne
jg
inc
ret
cmpsl
mov
ds
or
adc
sahf
aad
pop
out
int3
push
push
jmp
cmpsl
inc
dec
js
xchg
fdivrs
aas
dec
pop
and
push
and
fidivs
jns
pop
popf
test
xchg
pop
sbb
push
push
lahf
in
add
test
sahf
fbstp
mov
add
outsl
jmp
sub
test
in
imul
fcoms
pop
fwait
mov
inc
mov
aas
jnp
int
into
iret
shl
sbb
pop
ret
popa
push
popa
enter
dec
cmp
push
stc
test
in
cmp
mov
loop
stc
push
mov
inc
adc
add
cltd
mov
mov
adc
xor
enter
repnz
mov
cld
jno
mov
inc
addr16
add
jmp
shrl
into
jp
mov
inc
sub
or
pop
addr16
push
mov
dec
inc
nop
fimull
sub
les
jnp
scas
in
repz
cmp
sub
cli
and
inc
sahf
jno
sahf
mov
hlt
xlat
mov
xchg
cmp
jb
rcrb
xchg
movsl
jle,pt
fisubs
movsb
popf
xchg
imul
cmpsl
int
jmp
sub
pop
repnz
shrb
ficoml
cwtl
mov
inc
testl
stos
adc
test
mov
add
pop
inc
ret
ret
and
jp
mov
and
jge
popa
mov
lahf
cmpl
push
call
in
or
negb
les
imul
adc
lock
in
push
dec
cli
or
stos
repnz
inc
out
and
leave
mov
fsubrp
fiadds
cmp
inc
call
imul
jge
xchg
push
cmp
test
push
mov
hlt
inc
leave
mov
imul
mov
mov
fs
cmpsl
popf
rcr
xor
xchg
test
test
mov
push
push
jg
pop
and
and
or
orb
mov
mov
jnp
pop
inc
cmpsb
sbb
lds
inc
pop
loop
iret
push
loopne
fildll
mov
daa
push
stos
fs
sbb
fwait
mov
lahf
mov
ret
xlat
jne
mov
in
lods
cmpsb
push
jnp
inc
sbb
push
pop
xchg
sti
loopne
mov
sbb
pop
mov
mov
incl
or
mov
add
inc
out
push
cmp
jecxz
push
cmpsl
mov
pop
leave
in
mov
rolb
jmp
cmp
and
into
push
xlat
es
pusha
pop
ret
mov
out
test
xchg
mov
xlat
mov
out
imul
pop
add
pop
subl
ja
xor
lods
mov
iret
divb
insl
fildll
ret
xorb
xor
mov
shlb
mov
mov
sub
xor
jnp
or
pop
out
mov
loop
roll
scas
jl
scas
sub
sub
add
fiadds
out
push
pop
jg
js
test
lods
cmpb
inc
pop
rclb
ret
popf
out
cwtl
jbe
inc
adc
sub
sub
sbb
mov
addr16
add
loope
push
bound
adc
dec
xchg
jb
xor
push
cltd
push
stos
movsb
or
sti
xchg
adc
inc
ds
cs
shlb
jbe
cld
aad
xor
into
jno
outsb
insb
movsb
test
shrl
insb
fadds
test
pop
inc
fs
adc
mov
push
call
outsb
shll
scas
jmp
test
add
inc
out
std
xor
rclb
lods
rcrl
cmp
xchg
adc
add
rorb
dec
xor
mov
fimull
mov
sbb
negb
bound
and
push
adc
dec
xor
sub
hlt
xor
pop
js
sub
divl
mov
pop
addb
pop
inc
inc
jp
loop
sub
add
test
sub
add
fxch
stc
dec
xchg
adc
daa
pop
les
bound
inc
lock
dec
inc
das
jne
movsl
fwait
out
loopne
pop
mov
ret
pop
xlat
mov
lcall
cmp
push
or
test
mov
sarb
stos
repnz
pushf
in
cmpsl
push
push
aas
fcompl
xor
int3
xchg
pop
sarb
jecxz
lahf
and
cs
xchg
test
mov
pop
adc
lret
sub
out
inc
xorb
insl
cmpsb
lret
ds
cmpsl
outsl
mov
inc
dec
jp
mov
mov
nop
stc
les
out
jp,pt
test
sti
push
rcll
notb
daa
xchg
call
ret
xchg
add
and
mov
mov
das
mov
push
pcmpeqd
and
lret
mov
movsl
fadd
lods
scas
gs
outsl
push
mov
test
and
inc
push
lock
ret
jge
adc
adc
push
ret
and
js
mov
pop
gs
lcall
into
mov
cs
push
pop
ljmp
push
aad
mov
and
mov
cmp
bnd
bound
mov
and
or
jp
les
in
mov
enter
pop
mov
shrl
out
mov
mov
fistps
push
out
pop
pop
lahf
push
jbe
and
mov
xor
insl
outsb
test
add
in
adc
jne
adc
idiv
stc
movsb
mov
aas
xchg
sti
js
in
addr16
sub
jmp
mov
add
in
aad
xchg
sub
xlat
enter
daa
add
adc
mov
push
bound
xchg
lahf
jb
xor
inc
xor
imul
jno
mov
inc
mov
inc
shrl
xor
pop
push
loop
sbb
cmpsl
jns
mov
xorb
adc
ss
inc
push
mov
sbb
mov
aaa
aam
xor
xor
cmp
dec
cli
sub
mov
cmp
inc
lea
stos
pop
call
insl
imul
pop
mov
mov
loop
cmpsb
pop
sbb
mov
push
jb
push
arpl
xchg
inc
dec
cmp
and
rcrl
shlb
aaa
push
lods
jae
icebp
sbb
out
xchg
pop
sahf
je
in
jp
push
fadd
jo
xchg
das
pop
imul
or
cwtl
mov
jl
mov
in
push
pop
and
xor
jno
fistps
xchg
inc
fimuls
pop
inc
test
cwtl
pop
fs
add
push
fnstenv
loop
xchg
into
sub
fidivrs
xchg
arpl
out
test
ret
fidivrs
hlt
sbb
mov
dec
or
mov
jp
mov
dec
shl
add
in
sahf
orb
jg
je
jge
popa
pop
out
sub
xchg
push
scas
xchg
enter
and
pusha
cs
adc
loop
int3
pop
mov
movsb
cmp
xor
ficoml
in
mov
ds
enter
dec
jle
je
pop
fs
jp
lds
imul
push
jp
nop
rorl
imul
fwait
test
shl
sbb
roll
jmp
push
test
loopne
pop
pop
pop
or
pop
xor
jne
lcall
insl
test
sbb
cmpsl
repz
push
fildl
mov
cmp
ret
outsl
jno
dec
rcll
or
ja
movsl
pop
outsb
sahf
data16
cld
aaa
mov
mov
rolb
adc
sub
repz
ds
mov
test
out
pop
ljmp
xacquire
out
xchg
data16
ljmp
cmpsl
mov
popa
xorl
add
mov
stos
in
icebp
mov
js
pop
push
xchg
xchg
cmpsb
pop
xchg
data16
cmp
xor
and
sbb
inc
and
lret
pop
xlat
cltd
push
pop
pop
stos
sbb
jge
mov
das
mov
jne
sahf
push
hlt
mov
cld
outsl
test
push
rcll
adcb
mov
test
testb
pop
and
clc
mov
es
clc
sahf
lcall
adc
fisttpll
jmp
pop
mov
je
mov
cmpxchg
arpl
add
sbb
les
lahf
mov
push
ss
dec
cli
inc
dec
ficompl
inc
movsl
nop
sbb
out
loope
repz
fs
and
cmc
stos
cmp
test
outsl
in
ret
mov
adc
xor
pop
push
add
lds
sbb
mov
cmpsb
cmpsb
cltd
inc
call
xor
jne
sbb
leave
and
jbe
fisttpl
ret
mov
pop
push
sbb
pushf
cmp
std
adc
mov
pop
lcall
mov
lds
pop
popa
je
jl
clc
lcall
out
xor
jg
mov
out
int3
mov
mov
xchg
sub
popa
or
fwait
daa
add
add
rclb
sbb
push
pop
stos
into
dec
cmpsb
into
mov
push
lods
and
outsl
jb
cmc
mov
mov
movsl
addr16
mov
cltd
fmul
lds
cmp
pop
xchg
mov
js
shl
xchg
mov
or
sbbl
xor
mov
orl
cltd
xlat
cmpb
bound
add
mov
xchg
xchg
xchg
mov
xor
jae
mov
iret
jne
imul
repnz
mov
pop
xchg
scas
sub
or
cmp
push
inc
iret
push
inc
cmpsl
sbb
jne
adc
cwtl
jbe
pop
ja
xor
ret
cltd
subl
xor
sbb
mov
mov
scas
movsl
jae
lds
je
sub
fdivs
jbe
std
js
cli
inc
mov
out
ja
aas
pop
sbb
into
pop
fcoms
adcb
pop
fidivs
pop
pop
pop
xchg
add
icebp
xor
push
pop
or
adc
shll
or
aam
pop
jne
xor
dec
addr16
mov
adc
fldt
xlat
mov
xchg
xchg
adc
arpl
pop
add
repz
pop
pop
movsl
dec
adc
add
aam
sbb
in
push
mov
add
fs
fdivl
shll
add
xor
xchg
enter
and
sbb
repnz
fwait
xor
and
sbb
test
jg
mov
dec
sbb
pop
fstpl
or
dec
lods
xchg
mov
sbbb
pop
setns
cld
test
cmc
xor
int
dec
popf
xor
mov
adc
cmpsl
je
into
outsb
leave
jo
jg
fnstsw
out
add
or
mov
int3
inc
bound
push
push
sub
repnz
pop
adc
inc
adc
outsl
push
sahf
repz
jge
sahf
xlat
in
mov
roll
dec
movsl
test
sub
mov
mov
loop
xorl
lahf
shrb
addl
mov
mov
test
clc
mov
mov
popa
xorl
xchg
and
out
xchg
push
pusha
cmpsl
mov
mov
xchg
mov
ret
sbb
movsb
adc
fiaddl
or
pop
jmp
pop
nop
add
cmpsb
pop
xchg
icebp
pop
testb
fwait
outsl
ret
in
mov
mov
lock
out
pop
dec
mov
lcall
aad
imul
ljmp
pop
addr16
mov
sub
xlat
sub
push
jne
ret
ret
or
arpl
scas
push
mov
sahf
mov
push
sti
inc
sub
aaa
js
lret
enter
dec
adc
nop
fs
scas
xchg
fdivrs
fcom
sbb
rolb
iret
lods
xchg
pop
notl
push
ficomps
and
push
xor
stos
xor
jle
aad
xchg
aad
push
and
jp
adc
cmp
pop
jno
cmpsb
jno
pop
mov
iret
fistpll
sub
cmp
jb
mov
xchg
lahf
and
xchg
jmp
fidivs
jo
in
push
xor
sbb
adc
sti
jnp
cld
test
rcrb
mov
mov
ja
xchg
dec
adc
dec
daa
mov
jno
out
loope
out
jecxz
cmp
mov
aam
xchg
add
xchg
add
dec
push
and
into
outsl
xchg
es
addb
mov
jg
ljmp
pop
xchg
mov
inc
add
pop
pop
divps
or
out
mov
cmp
jg
out
mov
push
jge
jbe
jbe
popa
push
mov
mov
in
hlt
mov
add
popf
jmp
insb
es
imul
ret
loop
mov
outsb
cmp
sub
in
cltd
or
dec
arpl
das
and
jp
data16
adc
test
inc
dec
adc
fucomi
icebp
pop
lea
inc
leave
sbb
ret
sbb
cmpsl
pop
xchg
jne
pop
stos
ret
scas
fistpll
fdiv
pop
ficompl
test
or
out
or
aas
loopne
add
cli
jno
imul
jno
bound
mov
fadds
pusha
sbb
push
rcl
div
sbb
mov
xor
test
ss
test
mov
test
mov
sbb
mov
rcrb
mov
cld
push
aam
mov
leave
jp
scas
cmp
enter
enter
jb
loop
sarl
and
aaa
adc
les
mov
and
movsb
mov
imul
loopne
loop
mov
mov
inc
test
add
ss
mov
pop
enter
imul
or
lret
and
enter
push
push
cmpsb
imul
das
cld
adc
cmp
inc
addr16
push
icebp
jnp
xabort
jns
dec
cmp
mov
lea
bound
outsl
ret
sub
and
aad
rclb
nop
sbb
push
pop
inc
scas
cmp
repz
jmp
in
imul
or
inc
sahf
and
xchg
repz
insb
adcb
cld
adc
jo
movsl
bound
ficomps
jns
ror
andl
mov
and
enter
jecxz
imul
mov
testl
fstl
xor
movsl
out
dec
movsb
add
xor
cli
inc
jne
inc
mov
or
call
and
inc
shlb
imul
jp
out
mov
mov
in
orl
lcall
sub
xchg
shl
ja
lods
pop
mov
repnz
sub
inc
xor
aad
cmc
xchg
pushf
xor
fsubrp
ret
pop
je
sbb
mov
scas
imul
std
and
jns
pop
cmp
mov
adc
xor
cmc
outsb
sub
fmuls
mov
insb
mov
fs
daa
xchg
xlat
fcoms
pop
xchg
test
lods
cmp
out
xchg
aam
add
pop
and
arpl
cmp
xor
sti
jo
mov
std
xchg
mov
imul
aaa
mov
xor
roll
mov
dec
mov
daa
jge
fs
dec
cmp
aad
mov
ret
sti
adc
xchg
call
jne
adc
pop
sbb
mov
sti
xchg
pop
cld
test
inc
xchg
cld
iret
sbb
xchg
rcrb
dec
add
dec
daa
pop
cltd
daa
add
add
xchg
dec
out
jecxz
cmp
mov
sub
in
xchg
gs
add
faddl
push
imul
xchg
movsl
outsb
xchg
es
adcb
mov
js
ljmp
pop
xchg
mov
dec
add
pop
or
out
inc
jmp
push
nop
xchg
xor
jnp
cmp
mov
xchg
mov
mov
pop
insl
int3
lahf
xchg
adc
sub
popa
icebp
push
sti
xchg
movsb
mov
fdiv
fisttps
inc
mov
imul
or
scas
fucom
mov
jno
fidivl
icebp
mov
popf
push
jg
arpl
leave
incl
test
dec
push
out
push
xor
jmp
mov
aam
mov
inc
sbb
or
fistpl
js
insl
or
outsb
pop
adc
sbb
sub
cvttps2pi
inc
jne
aas
xchg
inc
stos
popa
mov
fidivs
fidivs
leave
daa
xor
es
xor
cmp
cmp
push
les
idivb
cmp
add
test
test
xor
sbb
sbb
jne
loopne
or
fs
xor
mov
sarl
mov
pusha
xchg
test
mov
sbb
divb
aas
je
js
adc
pop
arpl
dec
fistl
dec
ja
cwtl
ja
cli
xchg
into
xchg
sub
inc
push
xchg
inc
fcmove
iret
jmp
shll
mov
jl
adc
jno
pop
sub
push
pop
cmpsl
push
enter
mov
push
push
shll
inc
cs
cld
jb
leave
fldcw
mov
mov
jmp
fsubs
xor
into
jno
cld
xor
sub
stos
arpl
push
cmc
lahf
xchg
cld
adc
fildl
push
sbb
dec
fmull
pop
pop
or
add
popa
clc
mov
mov
dec
stc
xlat
cmp
add
in
insl
or
movsl
iret
push
mov
loopne
mov
jns
jbe
les
lods
jo
enter
cmpl
fcoms
cmp
mov
sbb
xchg
dec
dec
xorl
jo
fisubs
pushf
and
lock
sub
dec
pop
imul
shrl
iret
in
cmpsb
pop
ficoml
cltd
idivl
cmc
or
lea
xchg
enter
fwait
iret
xor
sbb
es
lds
movsb
jle
mov
movsl
mov
jnp
ljmp
ss
rcll
sub
sub
in
jno
dec
xor
push
jns
jp
xlat
lods
add
push
fdivrs
aad
jmp
sub
sub
js
lret
orb
loop
in
jecxz
sbb
add
sbb
mov
daa
test
mov
enter
hlt
or
pop
push
frstpm(287
pop
and
push
adc
jno
xor
gs
ljmp
mov
jno
rcrl
sbb
mov
mov
xlat
lahf
arpl
jo
mov
shll
enter
sbb
clc
push
dec
mov
xor
scas
gs
sti
jecxz
cld
test
sbb
inc
lcall
xchg
popf
xchg
push
and
aaa
data16
pop
cwtl
daa
jmp
jo
out
fs
aaa
mov
int
mov
std
mov
movsl
push
and
push
push
dec
push
xor
mov
sub
mov
shr
adc
out
mov
mov
cmp
sub
mov
dec
add
cmp
ds
xorl
mull
push
scas
push
sbb
sub
mov
mov
dec
std
ret
ret
jbe
or
sbb
test
cmp
inc
sub
insb
ljmp
orb
xorb
jp
adc
and
cmp
scas
jbe
push
jbe
ret
in
leave
ficoml
bound
xor
shlb
adc
push
popf
jb
bound
jp
sbb
ret
jo
dec
sbb
mov
mov
cmpsb
test
push
mov
and
cmpsb
dec
lcall
jnp
mov
lret
xor
xor
std
jb
rcrb
mov
dec
mov
or
fwait
je
shlb
ja
into
fwait
sbb
arpl
out
out
pop
jge
aas
add
ret
addr16
rcl
repnz
addr16
inc
jmp
xchg
ficomps
adc
and
mov
xlat
adc
xchg
mov
dec
push
das
repz
idivb
in
std
pop
jno
sbb
sbb
lret
xchg
orb
mov
pop
icebp
cmp
rcll
inc
jne
xor
ret
xor
jne
enter
lods
and
adc
aam
rol
pop
shrl
push
adc
sbb
ljmp
xchg
mov
repnz
pop
inc
and
mov
mov
push
aas
rcrb
addr16
mov
in
xchg
loop
xchg
push
jns
push
and
jbe
inc
jo
inc
lods
popa
lods
push
xchg
inc
xor
lahf
jle
pop
jno
or
imul
aaa
fs
shr
test
push
stos
xor
jnp
jae
xorb
dec
and
insb
sbb
je
int
sub
test
int3
jbe
sarb
xchg
push
sbb
push
lcall
mov
ljmp
cmp
scas
xlat
jp
ljmp
and
or
ss
inc
jle
push
fbld
mov
or
test
and
sbb
leave
inc
cmpsl
lret
xor
inc
loop
inc
shl
mov
inc
jge
xchg
mov
sbb
jecxz
pop
lods
cmpsb
cmp
aaa
lock
jle
adc
call
push
jp
iret
clc
test
mov
xchg
cmpsb
ret
lahf
cld
inc
sub
mov
adc
and
lret
mov
mov
xchg
and
dec
movsb
sti
test
lock
pop
test
cwtl
sbb
jp
ss
imul
pop
jnp
push
rclb
jnp
fidivrl
pop
jno
icebp
and
pop
orb
loope
xor
push
arpl
out
xor
adc
adc
aad
repnz
push
leave
cmpb
pop
sbb
sahf
add
test
mov
mov
add
loopne
jp
dec
daa
push
mov
bound
push
add
jecxz
sbb
mov
adc
ja
pop
cmp
stc
push
xchg
sbb
dec
xchg
mov
sbbb
int
scas
int3
ljmp
jge
mov
mov
ss
cmp
insb
mov
imul
inc
sarl
mov
iret
jno
push
adc
add
rolb
popa
ljmp
fsubs
and
inc
and
imul
enter
js
cli
out
mov
inc
and
arpl
adc
jbe
stos
and
daa
rep
jne
xchg
call
ds
lock
lods
icebp
push
nop
test
lock
mov
cmpsl
or
insl
das
dec
aaa
or
stc
jne
inc
out
sbb
sub
insb
push
xchg
add
jns
sti
mov
xchg
xor
or
mov
scas
inc
jns
xor
cs
push
pushf
divl
movsl
xchg
das
sbb
cmp
fisubrs
push
dec
stos
jp
mov
test
movsl
in
adc
add
arpl
je
xchg
or
cltd
sti
in
inc
mov
test
outsl
xor
icebp
addb
int
dec
adc
push
jbe
xorl
out
mov
pushf
push
xor
push
and
push
shr
fcomp
xchg
or
xor
push
pop
mov
mov
xchg
add
adc
cmp
push
mov
das
mov
push
or
fisubrs
shll
int3
inc
cmp
adc
jmp
sti
jmp
std
xor
aas
adc
inc
add
inc
mov
bnd
mov
push
jo
jae
dec
and
imul
pop
inc
xchg
mov
int3
sub
push
in
xlat
icebp
neg
aas
adc
test
rorb
or
enter
xchg
hlt
and
shll
xchg
jecxz
mov
mov
ljmp
sti
aaa
adc
or
les
shlb
in
sub
add
daa
dec
ret
or
inc
add
jp
jp
xor
xor
xor
sub
test
push
je
mov
dec
xchg
fs
es
repz
dec
lret
mov
out
mov
push
jg
cmp
push
mov
sub
out
mov
cld
mov
pop
aaa
or
in
fdivrp
pop
jmp
imul
popa
sbb
jecxz
arpl
lcall
inc
into
jo
cld
mov
pop
lret
jns
lret
sbbb
fstl
xlat
sub
fcomps
fcom
iret
imul
nop
scas
lods
xchg
repz
je
stos
jb
idivb
inc
ss
inc
inc
adc
adc
sbb
imul
mov
mov
jno
rclb
out
add
stos
jmp
jns
xorb
pop
xlat
push
sbb
push
out
mov
pop
lea
aam
call
adc
rcll
jns
insl
jl
cwtl
or
ljmp
sbb
and
xchg
dec
clc
mov
dec
mul
pop
bound
jbe
jns
cwtl
mov
cli
mov
push
mov
mov
data16
das
and
sbb
in
imul
sarl
inc
mov
je
pop
jbe
lods
sub
aad
mov
ret
mov
repz
sti
push
push
mov
out
mov
call
into
adc
pop
enter
lods
sbb
leave
adc
xor
popf
test
icebp
test
scas
fwait
xor
sub
jbe
sbb
inc
xchg
loope
push
scas
mov
push
xchg
mov
inc
push
or
and
inc
mov
add
push
mov
das
enter
cwtl
jp
sarl
push
jl
lods
pop
inc
ret
mov
xchg
addr16
dec
mov
dec
cmp
dec
pop
xor
xchg
sub
enter
aas
mov
and
pop
popf
fbstp
fidivrs
dec
push
xchg
stos
or
adc
inc
adc
repnz
gs
jb
or
mov
stc
gs
jne
and
cmp
movsb
into
int
int
es
test
lea
loopne
and
inc
pushf
push
inc
mov
lods
cmpsb
xor
ja
xchg
adc
movsl
jge
mov
mov
lret
pop
inc
xchg
jle
imul
add
aaa
pop
scas
test
sti
mov
mov
das
or
popa
inc
insl
mov
xchg
inc
mov
push
arpl
mov
and
fmuls
ljmp
dec
jae
sarl
insl
loop
jp
ret
cmp
mov
and
in
sub
or
jmp
pop
jo
push
lret
fmuls
fwait
push
mov
jp
xor
lods
or
xchg
jl
mov
lods
mov
ja
scas
cmp
in
and
leave
or
sahf
dec
pusha
cwtl
sub
pop
aam
dec
lret
shlb
icebp
xor
ljmp
int
cmp
and
rclb
mov
movsl
push
push
lock
cmpl
sub
jb
push
fwait
jl
jne
popf
les
cmp
int
xchg
scas
inc
inc
lods
fnstsw
and
jg
sub
ja
fldcw
xchg
xchg
divps
addr16
pop
push
dec
cmp
sub
dec
jp
jmp
push
clc
mov
add
pop
iret
dec
sbb
mov
scas
aad
lods
xchg
shll
mov
shlb
cmp
mov
sar
rcr
cwtl
fst
shll
pop
dec
inc
lds
sub
xor
adc
js
cwtl
jle
xorl
movsb
addr16
loopne
shl
dec
xor
mov
and
adc
fwait
rcll
and
repnz
fsubl
icebp
xchg
xor
xchg
cld
inc
pop
add
scas
cs
adcl
enter
in
fcmovu
rcl
ja
lock
in
xchg
ljmp
mov
pop
push
mov
insl
push
pop
jno
or
pusha
xor
iret
pop
and
and
mov
jp
outsb
movaps
aad
inc
sbb
xor
xor
nop
rorb
lea
add
ficomps
xchg
popa
sub
movsl
mov
xchg
xchg
jne
mov
shlb
pop
sbb
ja
mov
jmp
pop
loope
mov
ss
inc
stos
mov
sub
stos
jne
mov
daa
add
sub
mov
les
ljmp
les
xor
out
clc
and
loopne
inc
mull
or
in
jns
lret
xchg
rcr
mov
cmp
andb
aam
fcmovnu
mov
subb
lods
xchg
lods
adc
out
mov
xchg
dec
inc
in
mov
decb
scas
mov
repz
xchg
pop
pop
lock
lret
jnp
sahf
ljmp
lcall
test
inc
dec
rcrl
sub
push
outsl
fimull
pop
outsb
dec
mov
popf
adc
push
cwtl
add
jbe
inc
xor
fucomi
ficoms
je
sbb
add
aad
hlt
sti
inc
jp
stos
cld
inc
mov
ss
fistpll
dec
push
xor
and
sbb
inc
or
inc
test
mov
aaa
mov
fcomps
cmp
push
or
cmp
mov
cmpl
sbb
push
inc
jb
xorb
xor
sahf
add
movsb
cmp
cmpsl
iret
mov
out
movzwl
lea
add
inc
test
lret
jp
jmp
sysexit
lret
jp
test
into
push
mov
aad
push
sti
jns
cmp
lock
sbb
xchg
mov
lcall
cmc
sbb
jp
mov
lea
mov
mov
ficomps
mov
inc
loop
xor
cmp
rep
mov
xchg
cmpb
int
lock
dec
cwtl
push
xchg
cwtl
test
and
fs
aas
test
jmp
cwtl
jno
cwtl
jp
into
outsb
xor
cli
push
aas
fimull
push
mov
leave
sbb
fiaddl
inc
mov
and
les
hlt
fdivs
sub
sub
inc
or
stos
jb
pop
cli
mov
rolb
push
inc
cmp
movsl
mov
adc
out
mov
push
ffree
cmpsl
pop
inc
sti
pop
xor
retw
adc
sarb
xor
dec
inc
test
xchg
mov
sbbl
out
imul
cmp
xchg
and
jbe
sub
loop
cmp
imul
call
loopne
into
cmpsb
and
outsb
stos
xlat
inc
pop
cmp
mov
push
jae
insl
and
cld
adc
jne
inc
nop
xchg
lcall
insl
push
cmp
xor
xchg
inc
xchg
cmc
or
cmc
cmpsb
mov
into
scas
je
scas
jge
ud2
sub
inc
mov
mov
daa
mov
cmp
mov
mov
arpl
daa
mov
icebp
sub
nop
and
sub
aas
xor
or
nop
mov
nop
jmp
notb
push
sar
inc
in
iret
sti
icebp
xchg
pop
mov
aad
fistps
and
and
arpl
sbb
aad
rcrl
dec
and
add
out
aas
add
sti
jb
scas
mov
lcall
divl
cmpsl
jne
mov
mov
shl
mov
scas
mov
ret
fdivs
in
sti
mov
fadds
inc
inc
dec
sbb
leave
or
mov
pop
sbb
sbb
data16
icebp
test
or
fsubrs
and
out
push
mov
roll
mov
mov
gs
push
rcll
push
and
pop
rorl
ja
arpl
arpl
ljmp
push
ficoml
int
out
clc
scas
sbbl
out
jno
enter
xor
dec
stos
mov
out
fsubp
mov
xchg
scas
xchg
repz
ja
jmp
das
movsl
cmp
ret
jae
mov
leave
hlt
inc
sub
lret
or
pop
inc
cld
jmp
into
mov
test
lahf
shll
inc
xor
jge
dec
push
jne
and
mov
jae
psubsb
fwait
lods
icebp
imul
or
sbb
sti
mov
xchg
xchg
repz
pop
xchg
dec
ss
mov
jmp
aaa
addl
sub
cmp
stos
jmp
mov
nop
scas
xor
icebp
in
mov
cmp
cmp
push
mulb
mov
xchg
andl
shr
loop
lock
dec
in
test
movsb
push
movsb
aas
or
cld
icebp
loope
int
push
movsb
aas
cwtl
mov
sbb
outsl
nop
jg
cwtl
mulb
in
cmc
or
inc
cltd
outsl
daa
cmp
loopne
arpl
sub
nop
pop
fxch
dec
sbb
ret
mov
cmc
mov
inc
rorb
or
aam
or
push
mov
faddl
inc
sbb
repz
lea
enter
mov
cs
insb
cld
mov
push
pop
mov
lea
jmp
cmp
loopne
out
outsb
dec
push
sub
aas
and
aas
mov
push
xchg
sahf
sub
inc
ss
pop
les
or
or
adc
inc
xchg
sub
sti
sub
pop
xchg
fidivl
mov
xlat
cmp
dec
push
sub
test
push
push
cmpsb
fimuls
mov
int3
xchg
sub
test
fs
pop
mov
mov
out
jecxz
pop
mov
or
pop
mov
or
sbb
adc
mov
stos
cmpsl
cmp
ret
mov
adc
aas
jae
jp
jmp
jmp
nop
stc
and
jnp
out
jp
sarb
icebp
repz
test
mov
fcomp
jg,pn
outsl
xor
shr
stos
push
sbb
pop
sbb
dec
xchg
rclb
js
nop
pushf
decb
mov
pop
push
addr16
and
mov
outsl
adc
js
and
out
and
mov
call
sti
mov
sbb
mov
int
outsb
mulb
shl
test
fsub
xchg
mov
inc
jecxz
mov
rcrl
xchg
pop
js
int
and
adc
dec
sub
sub
inc
loope
or
ja
aad
lret
xchg
pop
push
ds
pop
cli
out
fisubrs
outsb
fsubr
add
out
cmp
mov
paddsw
ljmp
inc
fidivrl
mov
and
insb
pop
pop
sbb
insb
and
stos
dec
sbb
sbb
dec
jae
lds
mov
popa
out
daa
add
inc
mov
add
int3
pop
sub
fs
push
jecxz
pop
ja
rorb
shrl
sub
adc
les
pop
std
popa
pop
shrb
int3
std
sub
stos
out
xchg
fadds
orl
insb
stos
cwtl
js
mov
int
inc
lahf
xor
fdiv
stos
mov
mov
push
inc
dec
xchg
loop
icebp
xlat
idivl
movsb
rorb
inc
test
dec
and
call
leave
mov
stos
arpl
lahf
in
fimull
and
dec
and
jmp
and
insl
and
mov
xchg
scas
push
xor
push
lods
mov
stc
mov
mov
pop
inc
mov
cmpsb
xchg
jecxz
test
cli
sub
repnz
ds
jg
movl
pop
dec
imul
xchg
clc
add
mov
fwait
xor
popa
ret
jmp
leave
sbb
xorl
cmp
mov
add
mov
popf
cmpsb
incl
iret
mov
shrl
test
dec
mov
lods
data16
out
out
les
movsb
aas
mov
jb
sbb
dec
in
icebp
movsl
mov
ss
je
xchg
testb
adc
mov
sbbl
loop
loop
test
imul
test
inc
ficompl
mov
inc
push
movsl
insl
mov
adc
sbb
and
or
lret
mov
lods
repz
fnsave
outsl
repnz
add
insl
sarb
stos
xor
sub
cmp
cmp
inc
rcrb
lahf
cwtl
cli
loop
inc
push
rcr
cs
sahf
inc
shlb
xor
int3
adc
add
mov
insl
sub
popf
and
push
clc
lods
pop
fisttpl
sahf
mov
mov
lahf
or
test
rcl
push
nop
mov
dec
jecxz
and
test
out
out
loop
inc
test
push
mov
cmpsb
mov
insl
out
fbstp
test
and
dec
test
sbb
sbb
adc
mov
pop
mov
ret
lock
pop
mov
and
std
clc
cmp
movsl
and
ljmp
mov
out
and
jb
inc
idivb
mov
sub
outsl
mov
loope
mov
stos
add
pop
dec
ds
mov
sbb
add
lcall
into
scas
add
xor
sub
lahf
jmp
outsl
adc
pop
mov
pop
in
cmp
inc
jp
pusha
in
sub
cmpsl
jge
mov
mov
xchg
mov
push
cltd
aad
mov
rorb
adcl
mull
cltd
adc
adc
inc
aad
mov
push
ljmp
sbb
out
ds
or
popf
mov
pop
out
jbe
jnp
dec
notb
inc
in
add
xchg
loope
int3
push
loopne
jno
out
jge
ja
mov
xor
cmp
lods
push
lahf
push
push
mov
pop
cmpsl
xchg
jne
xchg
es
out
xor
insl
pop
pop
cs
sbb
aad
inc
mov
dec
adc
fxch
adc
rclb
xchg
mov
daa
add
das
push
mov
add
or
mov
int
xchg
nop
push
push
imul
and
jo
xchg
arpl
or
scas
cmp
jne
xchg
dec
adc
out
js
xchg
negl
mov
sbb
jecxz
jl
xchg
pusha
shr
stos
mov
jno
xor
popf
dec
stos
jmp
jb
xchg
push
mov
xor
cli
and
fnstenv
hlt
inc
mov
orl
insb
xor
and
fsubrp
and
andb
mov
pop
and
and
and
or
outsl
sub
mov
cmpl
cmpsl
pop
xchg
jno
add
pop
inc
ret
mov
in
popf
sub
pop
outsb
pop
cwtl
icebp
sbb
aaa
and
or
aam
sub
stos
mov
in
jb
add
xchg
xchg
xor
mov
mov
and
jle
pop
lds
mov
in
std
mov
loopne
xor
jbe
test
lret
mov
fsts
data16
into
cmpsb
cld
mov
imul
stos
lea
xor
shll
aaa
cltd
in
pop
vpmadcsswd
aad
mov
xchg
push
cmp
out
push
arpl
loopne
cli
imul
ja
aam
mov
or
jp
add
or
or
sbb
outsl
push
and
or
push
mov
dec
lea
lea
leave
add
daa
popf
push
mov
sbb
sarl
pop
cmp
dec
sub
mov
push
ss
jmp
xor
mov
and
dec
popf
popf
mov
sbb
xchg
cwtl
lahf
dec
shrb
sbb
outsl
movsl
pop
mov
sbb
xlat
or
outsl
out
lret
shlb
pop
ljmp
and
loop
cmp
repnz
pop
mov
nop
in
enter
mov
xor
sahf
jmp
sbb
fcompl
jb
add
out
add
mov
movsl
insb
pop
xchg
push
mov
sub
push
aas
popa
mov
cs
in
jecxz
and
push
mov
aas
les
mov
std
in
lods
testb
inc
movsb
push
jge
sub
cli
lods
inc
stos
mov
sbb
into
popa
xchg
mov
inc
and
cwtl
int3
push
lds
js
adc
daa
mov
aam
test
addr16
cmp
dec
xchg
push
xor
add
add
int
inc
test
jge
xchg
push
ret
enter
lods
subb
lock
adcb
shr
sbb
dec
ficoml
push
sbb
dec
je
adc
sub
sub
jbe
cmpb
and
inc
subl
mov
and
xchg
push
loope
fimull
lock
cli
or
mov
insb
sbb
mov
ficoml
shlb
mov
pop
mov
subl
adc
pop
cwtl
dec
sbb
test
lret
push
sbb
rcr
jo
popf
xchg
cltd
lds
mov
push
imul
imul
int
imul
xlat
imul
cwtl
adc
push
xlat
and
outsl
cmp
inc
vmovaps
mov
pop
mov
push
int3
imul
add
scas
loop
mov
inc
or
jno
xorb
xor
mov
rolb
cli
xchg
addr16
aas
mov
cmp
loopne
icebp
sti
loopne
xlat
shlb
movsb
or
inc
jne
test
aas
inc
push
push
fucomi
xor
lcall
cmp
push
in
and
orb
or
push
and
call
jge
dec
addr16
sbb
test
pusha
sbb
and
cmc
mov
out
icebp
sbb
add
hlt
push
sub
insl
cmpsl
inc
sub
insl
mov
fcomps
sbb
mov
adc
clc
mov
test
fwait
mov
popa
mov
outsb
jbe
and
adc
inc
mov
jbe
loop
cmp
inc
mov
inc
faddl
xchg
loope
mov
sbb
cld
sbb
dec
mov
sub
sub
repz
in
push
cmp
in
cmc
aam
mov
pop
mov
sbb
push
loopne
enter
pop
shll
das
stc
nop
ja
push
ljmp
std
jnp
add
jns
mov
arpl
insl
jmp
push
pop
pop
sbb
pop
lods
int
lea
adc
mov
jmp
mov
cld
xchg
test
add
ja
sbbl
cmpw
insb
sub
xor
adc
outsl
sbb
out
sub
or
mov
mov
addps
sub
inc
inc
lcall
xchg
fdiv
dec
sub
fsubrs
pop
and
aam
std
inc
out
sahf
cmp
sahf
xchg
xchg
xlat
and
pop
test
inc
add
movsl
les
lcall
cwtl
shr
xchg
repz
inc
jmp
mov
push
repnz
in
mov
mov
int3
fs
testb
pop
ds
or
aam
aam
adc
add
jnp
fwait
int
lock
pop
mov
xor
int
push
aad
cmp
mov
icebp
insl
test
jp
mov
mov
dec
jno
pop
mov
dec
negb
hlt
cltd
sub
insl
hlt
in
stos
pop
imul
pop
adc
add
enter
xlat
xchg
adc
push
sbb
stos
inc
fcmovnu
inc
cmpl
sarl
jb
sub
mov
sub
inc
sub
jne
cmp
adc
loop
cmpsb
mov
push
xchg
xchg
sub
mov
ds
cmp
pop
cmpsb
xchg
fdivrs
xchg
adc
rorb
fsts
push
adc
pop
imul
call
or
repz
movl
in
jno
fldenv
pushf
rol
lcall
divl
jae
pop
xor
sarl
out
jecxz
pop
lret
fcmovb
stos
sarl
mov
test
or
and
clc
mov
or
push
daa
mov
int3
test
cwtl
frstor
mov
daa
mov
jae
test
stos
aad
out
jecxz
jne
enter
mov
jmp
xchg
add
xchg
dec
pop
mov
adc
fisubs
jmp
shll
int3
nop
imul
into
xchg
mov
mov
push
cmpsl
jo
shl
sub
mov
mov
lock
pop
sbb
lahf
hlt
sbb
lret
xor
dec
stos
sub
ljmp
inc
ja
inc
stc
aaa
mov
in
push
hlt
jbe
mov
sahf
jl
insb
les
daa
pop
popf
pop
scas
jmp
xorb
cmc
cmpb
xor
ss
je
pusha
jge
and
daa
and
call
fsincos
mov
mov
inc
add
les
fstpl
sub
push
outsb
pop
mov
mov
pop
fidivrs
dec
xchg
cmp
call
out
cmp
in
call
mov
inc
mov
xor
inc
jae
xor
jae
dec
push
sub
inc
cmpsb
iret
add
xchg
jo
mov
test
fsubr
sbb
test
rcr
lcall
push
mov
cld
mov
jne
aas
dec
mov
shr
adc
mov
push
stc
test
loope
cmc
loop
mov
dec
inc
mov
arpl
add
int
mov
nop
sub
enter
sbb
popf
int3
inc
sarb
mov
inc
stos
outsb
add
jmp
pop
sbb
push
fiadds
push
bound
push
inc
int3
inc
mov
or
in
insb
lods
and
repz
test
xchg
or
jnp
add
and
jp
xchg
jmp
sub
scas
sbb
or
andl
or
cwtl
dec
lock
dec
sub
pushf
ljmp
pcmpgtw
ret
push
push
inc
cmp
xor
mov
repz
ret
mov
js
cli
sbbb
dec
jecxz
loop
pushf
aad
pop
rolb
push
jmp
stos
cmp
mov
popf
mov
in
shll
in
in
mov
leave
popf
sbb
int3
inc
scas
outsl
adc
mov
ja
xor
mov
mov
dec
jp
sub
sbb
and
scas
mov
push
and
aas
mov
hlt
cld
out
push
mov
mov
sub
sti
cmpsb
addr16
pop
dec
in
sbb
pop
pop
inc
aad
les
scas
rcrb
pop
xor
lret
dec
lock
sub
imul
mov
pop
lcall
cld
xor
imul
sahf
cmpsb
hlt
jno
fiadds
jne
subl
xchg
and
lds
xchg
sub
jecxz
shrl
xchg
fmuls
notb
push
sar
and
iret
push
dec
fcoms
push
rorb
mov
cmp
push
mov
addr16
xchg
int3
aad
xchg
push
fwait
xor
dec
aaa
pop
jne
add
repnz
decb
out
and
jnp
es
adc
add
sub
push
jecxz
push
scas
or
das
inc
sbb
mov
inc
rol
add
sbb
xchg
pop
dec
or
iret
into
mov
mov
push
xchg
jb
aad
inc
lret
out
in
adc
int3
aas
popa
mov
push
test
inc
cmp
pop
outsb
cmp
jno
xchg
gs
inc
sub
in
cmpsl
lock
fcmovb
cmpsl
mov
movntps
xchg
sbb
repz
ljmp
dec
sbb
pusha
in
xchg
je
mov
pusha
int
pop
sahf
dec
stos
mov
out
mov
pop
mov
cmp
das
and
mov
icebp
lahf
in
cld
jg
mov
xor
xchg
jo
xchg
add
andl
sub
xor
imul
out
cmpsl
ss
and
jns
xchg
dec
xchg
push
inc
sub
pop
mov
jo
xor
mov
shrl
lods
jge
loope
lock
dec
pop
jl
adc
iret
pop
cltd
les
and
pop
imul
fwait
ds
cmp
xor
or
sbb
xor
jno
in
jp
xor
scas
aaa
mov
xor
pop
pop
lds
pop
sbb
or
sub
in
mov
push
idivb
addr16
ljmp
add
test
out
divl
pop
scas
sbbb
add
and
jge
and
aas
jns
mov
xchg
add
in
mov
in
cmc
mov
dec
fs
es
pop
and
pop
cmp
xor
sahf
add
pop
or
lret
cmp
xchg
and
inc
mov
or
cmp
sbb
sbb
leave
outsl
mov
xor
jno
adc
int3
and
push
pop
stos
mov
jge
cs
pusha
insb
cld
mov
jge
add
sbbb
mov
stos
xor
mov
into
outsb
ss
cmp
and
pop
addr16
push
hlt
lea
mov
fildl
fwait
dec
dec
xchg
testl
mov
mov
jp
add
push
dec
push
pop
sarl
cmp
xchg
push
std
loopne
push
cmpsb
fimuls
pop
rolb
dec
out
pop
in
and
mov
in
int3
lea
stc
insl
sahf
out
push
bnd
out
mov
sbb
fildl
jo
enter
add
insl
xchg
jmp
enter
xchg
and
adc
out
mov
jnp
push
cmp
notl
mov
dec
lret
enter
inc
negb
out
aaa
lock
or
jg
sbb
inc
push
push
push
lcall
popf
ljmp
adc
lahf
fdivrs
leave
and
pop
adc
sub
ret
adc
cmp
add
lret
adc
add
pop
mov
insb
ds
add
sub
shll
test
and
shlb
in
mov
mov
or
xchg
test
push
enter
adc
test
pop
add
mov
and
pop
and
jecxz
imul
dec
aad
filds
aas
jle
jnp
daa
out
or
jne
cmp
jmp
adcl
pop
mov
insb
add
jg
jmp
icebp
adc
in
mov
cmp
mov
push
inc
addr16
dec
sub
mov
pop
sti
cld
push
mov
aas
outsl
test
enter
push
sbb
clc
lcall
jp
pop
or
bound
cltd
xor
icebp
push
mov
int3
jnp
mov
sub
pop
xor
add
push
add
iret
xlat
pusha
xchg
xchg
and
arpl
lcall
test
mov
cmp
mov
pop
lods
pushf
subl
or
insl
mov
insb
xchg
ret
mov
sbb
and
mov
inc
hlt
mov
xchg
mov
cmp
cwtl
and
mov
arpl
mov
stos
jbe
daa
aad
cmp
jmp
shll
ss
addr16
dec
aam
or
sbb
jae
xchg
adc
aaa
test
mov
push
xchg
jns
sti
jns
xorl
pop
adc
sbb
jae
ret
push
popf
test
add
pop
pop
decl
xchg
jnp
imulb
xorl
sub
pop
cmp
push
fs
jno
xor
dec
pop
cmpsb
arpl
fbstp
jne
pusha
jge
xor
cmp
sbb
in
insb
test
push
mov
outsb
shl
ret
test
subb
lods
sbb
es
pop
fs
pop
ljmp
push
mov
les
cltd
xchg
push
loopne
cmc
xchg
outsl
mov
dec
outsl
mov
arpl
adc
shrb
lea
inc
add
mov
inc
int3
cmp
cmpsl
cld
jecxz
scas
adc
pop
outsb
insl
filds
fsubs
jo
mov
adc
bound
pop
jns
and
je
mov
pop
push
popa
xor
add
arpl
or
out
jge
sbb
mov
mov
into
outsb
push
sub
sti
inc
xor
cmpsb
int3
sarb
push
xchg
xchg
mov
lea
dec
push
jmp
ss
call
sub
fnstsw
jne
jne
ss
movsl
pop
jg
push
lret
loop
inc
cwtl
sahf
xchg
lock
xlat
cmp
inc
jne
lea
sbbl
xchg
mov
shr
fisttpl
cltd
jmp
mov
sbb
xchg
and
lock
jecxz
inc
mov
xchg
jb
xchg
pop
in
leave
aam
mov
cwtl
push
push
lret
mov
push
mov
add
or
iret
fadds
add
cmp
jb
and
sub
and
dec
mov
sub
pop
cld
ljmp
mov
mov
outsl
cltd
lcall
jge
mov
cwtl
cs
dec
xchg
into
pop
out
psrlw
insb
push
push
aad
xlat
test
neg
ljmp
fldcw
fcomps
jecxz
outsl
inc
lret
sub
and
inc
xchg
xchg
movb
xchg
mov
add
je
subb
sub
inc
aas
bound
sti
or
aaa
jle
and
push
mov
sahf
sbbb
xchg
mov
jmp
push
mov
push
push
ffreep
push
jb
jbe
cmp
sarb
gs
aad
inc
pop
test
roll
push
lods
cld
add
stc
push
xchg
add
xchg
lcall
repz
mov
cmp
lahf
aas
hlt
inc
scas
movsb
push
xlat
dec
adc
ret
fstl
mov
cmc
stos
inc
jbe
sub
add
mov
scas
jg
pop
movsb
les
mov
rcrb
fcoml
bound
imul
sbb
mov
movsb
test
fs
push
int
dec
pop
add
or
mov
fs
imul
ljmp
adc
std
movsl
sarb
mov
inc
push
push
pushf
xorl
jb
dec
inc
fistpll
jp
addr16
push
imulb
ret
mov
pop
inc
and
pop
sti
sub
mov
movsl
lret
mov
shrb
or
sbbl
out
shrb
sti
mov
ficompl
loopne
pop
mov
and
and
call
arpl
fcos
mov
cmc
sbb
mov
push
pusha
pop
push
vmlaunch
into
xchg
add
sub
outsb
pop
insb
loopne
jg
fsubrl
and
in
subl
imul
cvtpi2ps
fwait
or
pop
jnp
jnp
fbstp
push
pusha
or
sub
rcrl
xchg
adc
mov
pop
mov
test
lahf
mov
dec
into
mov
pop
xor
imul
lret
sarb
dec
enter
sti
xchg
stc
test
fucomip
cmc
test
mov
sbb
dec
jnp
adc
push
aaa
mov
jmp
xchg
xchg
inc
popa
xor
loop
out
into
mov
mov
inc
jle
add
es
mov
push
cltd
imul
ds
pop
and
or
js
dec
nop
rorb
add
mov
test
mov
sbb
mov
fnsave
adc
cwtl
cmp
jb
jmp
sub
popf
xor
xchg
sub
loopne
and
adc
imul
xchg
xchg
or
fidivl
pop
sub
outsb
dec
jecxz
test
insl
rorl
jge
sbb
repz
add
mov
jle
mov
cmpsl
xchg
cmp
mov
rcl
mov
negb
int
iret
clc
sbb
shlb
loop
nop
in
repnz
or
lea
enter
movsl
popf
xchg
fs
imulb
mov
or
lret
enter
adc
add
or
enter
mov
std
and
addr16
jecxz
sbb
jge
mov
and
cmp
mov
inc
cli
mov
scas
filds
xor
outsl
mov
aaa
clc
fsub
cld
mov
subb
in
dec
pand
addl
pop
int
or
mov
xor
outsl
push
lret
cmp
inc
xchg
inc
adc
cmp
mov
xor
das
out
pop
sahf
bswap
cmc
inc
js
adc
add
push
flds
mov
sti
enter
fs
cs
fwait
or
xchg
fdiv
jne
ret
sbb
lea
out
fmuls
or
js
out
pop
pusha
xor
jp
sub
lea
out
sub
aam
push
sub
jno
push
push
mov
fisttpl
or
mov
jb
sarl
add
adc
lcall
mov
jbe
dec
dec
in
jno
call
adc
test
outsl
int
std
xchg
dec
rolb
cmpsl
fmuls
fstps
sbbb
pmullw
inc
xor
xchg
adc
cmpsb
loopne
in
loop
int
mov
sub
add
not
pusha
xchg
mov
xorl
and
out
mov
lods
inc
push
jp
mov
clc
xchg
cld
outsb
fdiv
pushf
sbb
les
push
sbb
xor
iret
sbb
and
enter
dec
lret
xchg
and
push
add
lcall
xor
adc
cs
stc
cs
leave
xchg
fiaddl
inc
ja
enter
mov
inc
sbb
cmpb
cmpsl
and
gs
lahf
jno
fimull
mov
sbb
or
clc
pusha
and
loope
xor
mov
int3
call
inc
jbe
push
or
sbb
fwait
add
lea
pop
negb
inc
ss
inc
stos
pop
ds
enter
xor
call
out
daa
mov
mov
out
pop
jge
xor
cmpsb
xchg
ja
mov
ja
pop
outsl
icebp
xor
pusha
pusha
sub
xor
fcompl
xchg
or
hlt
pop
mov
add
test
inc
mov
sbb
push
adc
xor
push
in
mov
xchg
sub
ret
xchg
fcompl
mov
gs
mov
outsl
divb
je
pop
push
loop
xor
or
shrl
xchg
enter
push
test
leave
das
cmpsl
movsl
mov
cld
mov
adc
or
fcmovu
sub
push
outsb
nop
insl
adc
add
jo
push
lea
push
test
inc
js
pop
data16
sub
outsl
aad
adc
cmp
and
jp
loopne
jecxz
outsl
sbb
dec
sub
add
mov
dec
inc
push
mov
add
mov
cmp
lock
mov
fucomi
jg
mov
cltd
xorb
outsl
jp
sarb
movsb
xor
mov
fldt
lods
scas
ret
mov
cmpb
xchg
andb
addl
pop
fucom
cltd
mov
and
out
aas
xchg
mov
mov
push
ja
insl
and
cli
inc
cltd
pop
cmp
add
les
inc
loop
and
jle
jp
cli
jnp
mov
in
enter
imul
test
ss
outsl
mov
mov
mov
test
je
xor
mov
xor
aad
or
hlt
mov
push
aas
adc
movsb
mov
aas
xchg
imul
lods
adc
xchg
or
adc
leave
fisubrs
nop
mov
sbb
jo
rclb
sub
inc
push
cmpsb
out
or
xor
mov
out
add
jbe
test
ficoml
out
mov
push
nop
ficomps
push
sub
inc
dec
sbb
sub
jbe
addb
insl
adc
stos
mov
jno
fnstsw
adc
sbb
scas
sbb
daa
out
mov
push
xlat
add
adc
int3
decl
xchg
mov
shlb
cmp
xchg
dec
sub
ljmp
sahf
xchg
inc
mov
ficompl
jl
ret
add
mov
out
cmp
inc
jp
fs
mov
dec
nop
in
dec
mov
out
lahf
loope
inc
hlt
retw
iret
add
add
and
popa
push
out
mov
test
pop
stos
cmpl
adc
mov
xlat
mov
out
les
fs
or
loopne
push
mov
mov
mov
mov
adc
cld
xchg
scas
pop
push
xchg
xor
int
idivl
call
sub
sub
stos
push
ds
push
repz
outsl
test
adc
arpl
add
jne
adc
mov
popf
xor
orl
out
ss
add
fwait
mov
or
or
aaa
pop
lea
jl
stos
adc
mov
push
xor
lret
fisubs
gs
xor
pop
sbb
adc
pop
pop
push
adc
jns
pushf
push
notb
push
aad
adc
outsl
in
push
out
out
scas
fmull
push
xchg
sbb
or
mov
scas
pop
xor
pop
mov
mov
and
push
movsl
popf
cmp
aam
jg
test
mov
lcall
jecxz
aaa
mov
arpl
ror
dec
pusha
push
pop
push
in
loop
cld
mov
shll
nopl
outsl
push
stos
jo
movsb
xor
stc
shrb
or
orl
jae
pop
hlt
imul
cmp
imul
lahf
jmp
push
cmc
inc
and
pop
lahf
jecxz
mov
std
daa
jp
xor
cmp
imul
addr16
sbb
mov
mov
insl
cmc
insl
inc
jle
ljmp
mov
data16
cmp
xchg
loope
add
adc
pop
or
jb
xchg
jo
lcall
mov
adcl
mov
adc
mov
mov
mov
cli
mov
cmpsb
lahf
mov
xchg
pslld
sarl
scas
add
fidivl
lods
popf
jns
shr
jle
out
xor
stos
xor
cltd
adc
out
xchg
enter
sub
popa
aaa
mov
pop
xchg
cltd
xor
push
cmp
pop
popa
add
push
or
clc
push
lret
in
rcll
jp,pt
or
ror
movb
or
negb
pusha
mov
mov
jmp
shll
inc
xor
mov
sbb
xor
xchg
sbb
mov
push
sub
in
push
clc
adc
mov
adc
adc
or
lods
sbb
shll
and
sbb
in
inc
sub
cmp
scas
scas
pop
imul
sti
scas
or
loop
lock
in
jns
faddl
mov
es
ljmp
sub
push
add
dec
in
push
sub
dec
sbb
mov
xor
xor
xchg
cmp
xor
enter
or
fists
js
xchg
daa
cmp
adc
shll
call
out
adc
xchg
test
adc
push
and
sbb
xchg
mov
int3
push
in
movsl
mov
mov
xor
xchg
dec
sub
dec
daa
and
daa
add
add
push
add
in
cltd
and
in
xchg
xor
xchg
add
add
and
es
andb
andb
in
adc
adc
cmc
mov
aam
pop
dec
xor
mov
mov
cwtl
cmp
stc
cltd
inc
call
cmpl
mov
pop
dec
rolb
mov
adc
jmp
sahf
mov
inc
movb
pop
inc
mov
sbb
inc
aam
popl
test
pop
xor
adc
push
inc
push
gs
pop
cwtl
scas
fisttpll
cmp
sar
jmp
cs
jp
in
bnd
mov
cwtl
scas
mov
jbe
or
das
pop
jo
pop
jbe
jo
shll
add
pop
outsb
xchg
dec
loop
and
loopne
into
sbb
mov
dec
outsb
fidivs
sub
sbb
out
push
adc
mov
xor
fwait
mov
jle
ss
jle
mov
movsl
mov
fdivs
fdivrl
xchg
arpl
lret
xchg
add
mov
mov
mov
xorb
cmc
push
sbb
pop
inc
pop
inc
cmp
cmpsb
jl
sahf
arpl
sti
clc
xchg
xchg
enter
pusha
and
addl
nop
cltd
jno,pn
daa
sub
repz
in
movsb
mov
mov
jns
adc
sub
and
in
push
xchg
out
or
in
or
inc
inc
push
pop
shlb
jmp
pop
jmp
push
xchg
sbb
mov
leave
sub
into
addr16
inc
shll
pop
xor
mov
or
mov
popa
mov
ss
pop
les
repz
and
in
pop
pop
ficoms
pop
mov
pop
enter
pop
sahf
xor
sahf
push
testl
lods
dec
sbb
lret
cmpsb
ficoms
shr
mov
add
mov
bound
jecxz
repnz
js
mov
xchg
out
xlat
mov
mov
and
mov
adc
jmp
jp
sarb
mov
inc
insl
mov
and
ss
jp
mov
dec
mov
push
or
xchg
push
aad
jae
pop
sub
or
push
fcmovnb
rorb
cld
fiadds
lcall
pop
fwait
mov
mov
test
pop
dec
adc
out
dec
sbb
jb
mov
cwtl
jno
xchg
jae
dec
xor
cltd
mov
add
jmp
gs
arpl
or
mov
fs
mov
subb
dec
mov
add
pop
cmpsb
mov
adcl
lcall
cld
fidivs
icebp
subb
xchg
cmpsb
xchg
stos
aad
cmp
cld
daa
js
cmpb
xor
pop
ds
push
pop
idivb
dec
inc
pop
jle
jb
in
sbb
aaa
mov
stc
sbb
lods
inc
iret
dec
dec
clc
icebp
js
rorb
repz
push
aad
dec
fiadds
cmp
cmpb
dec
lahf
xchg
and
movsb
pop
scas
loopne
lret
mov
inc
jb
xchg
imul
mov
out
outsl
xchg
mov
in
sbb
in
mov
stos
lock
jg
xchg
dec
mov
movsb
pop
sub
js
mov
aad
mov
jecxz
fstpt
les
adc
icebp
adc
sti
dec
add
orb
mov
aam
jge
dec
jl
loopne
sti
aad
into
mov
ljmp
sub
aam
lock
dec
pop
pushf
dec
or
out
sub
push
mov
xchg
jno
iret
mov
negl
imul
scas
stos
add
mov
and
clc
mov
gs
add
inc
lret
loope
dec
fiadds
shrb
and
push
lea
adc
pop
pop
or
xchg
xor
pop
dec
cmp
outsl
lahf
xchg
sbb
daa
and
add
fcmovnb
and
add
lcall
jnp
push
push
or
mov
jne
sbbl
push
and
xor
and
add
pop
jle
mov
mov
cmp
push
movsl
lcall
test
stos
mov
shll
aam
stos
test
and
sbb
pop
mov
dec
push
daa
loopne
sbb
sahf
cld
mov
xor
aad
mov
pop
mov
int3
and
fucomi
clc
cmp
negb
pop
sub
out
das
insl
popf
xchg
enter
dec
sub
ja
pop
jnp
cld
or
dec
inc
jae
rol
addb
rorl
into
adc
mov
sub
mov
in
add
cwtl
push
inc
pop
pop
enter
jne
dec
cmp
pop
insb
cld
in
loopne
out
ss
cmp
inc
mov
cmp
jmp
call
mov
mov
outsb
jle
sbb
xchg
fadd
push
addr16
jge
into
shl
push
xchg
inc
or
pop
les
subb
ljmp
mov
movsl
mov
iret
sub
pop
mov
xlat
cmp
cli
and
inc
ja
push
and
shlb
cmp
ss
shlb
loop
sbb
dec
repnz
push
fldl
ja
in
shl
mov
pushf
aaa
pop
cmp
mov
stos
mov
into
out
dec
outsl
gs
and
add
sub
pop
cld
cli
into
fwait
scas
dec
jp
rcll
jns
les
pop
mov
test
movsl
mov
jo
rcrb
rolb
adc
push
xor
fimull
inc
xor
push
idivl
in
in
mov
xchg
arpl
mov
jmp
clc
cltd
jns
cmpl
sub
mov
movsb
sub
enter
gs
ret
cld
adc
rclb
daa
mov
cmp
jmp
mov
ljmp
pop
add
pop
scas
pusha
or
nop
xchg
or
test
icebp
fcoms
adc
test
test
out
pop
aad
pop
push
xchg
out
imul
adc
sbb
pop
sub
or
daa
pusha
test
sub
sbb
mov
adc
ret
mov
loopne
pushf
mov
push
rcrl
rcll
adc
daa
fsts
in
scas
in
xchg
pop
sbb
push
push
sti
sub
cld
test
xor
sbb
and
popf
xchg
xchg
xlat
xchg
dec
cmpsb
mov
lcall
out
sub
sub
mov
sbb
in
xchg
mov
xchg
add
int3
add
cmp
and
es
adcb
mov
adc
dec
xchg
mov
mov
mov
lods
fwait
lods
xor
xchg
sub
push
aaa
fdivs
add
orl
jns
out
mov
ret
cld
jbe
lods
mov
icebp
pop
fwait
icebp
test
test
fdivrs
inc
flds
cmp
dec
movsl
sarb
xchg
sbb
ficompl
aam
loopne
inc
arpl
ds
push
out
pop
jne
or
xchg
ret
jp
inc
lock
ret
jmp
ret
sbb
adc
insl
cld
test
shrb
pushf
mov
xor
sbb
mov
xchg
aad
mov
aas
and
js
xor
and
push
pop
out
lock
adc
icebp
xor
loop
push
hlt
cltd
lahf
jecxz,pt
ss
out
mov
inc
lret
into
cmp
ds
dec
xor
mov
out
popa
xchg
sbb
inc
xchg
xlat
mov
sub
pop
pop
dec
mov
cltd
mov
jae
divb
daa
ja
sub
int
clc
jmp
enter
jle
ret
pop
jbe
cmc
xor
sbb
mov
inc
mov
neg
mov
lcall
sub
lahf
pop
dec
xlat
lea
inc
dec
jno
add
insl
loopne
in
cwtl
inc
xor
add
test
iret
inc
cmp
inc
cmp
jno
std
fildl
outsl
or
aaa
xchg
int3
sub
incb
bswap
test
int3
in
or
out
or
push
push
xchg
loop
lcall
and
jmp
sub
jmp
pop
clc
dec
and
sbb
mov
dec
xlat
and
subb
mov
mov
lock
fimuls
sbb
and
cmpsb
cs
je
push
jno
xchg
mov
stos
sub
in
cmp
push
jne
jmp
xlat
adc
fsub
and
pop
adc
inc
adc
int3
jo
out
pop
call
cmp
outsb
sti
mov
jp
pop
jp
scas
pop
ss
lcall
or
jp
js
mov
out
pop
inc
cmpsl
pop
adc
negb
push
fucomi
mov
test
push
mov
adc
dec
xchg
daa
shlb
mov
sub
push
popf
ljmp
pop
addr16
pop
jae
jnp
jl
addr16
ret
jno
popa
sti
jns
clc
in
cmp
inc
scas
push
mov
in
inc
popf
jmp
sub
lret
je
inc
adc
test
mov
gs
rcrl
daa
cs
pop
test
or
mov
xchg
pop
mov
mov
jo
lods
jae
or
int3
fimull
insb
dec
aad
rolb
jp
aas
test
push
lret
sbb
shrl
std
fwait
mov
repnz
mov
in
ficoml
addr16
pusha
outsl
and
je
int3
jne
sub
in
fwait
dec
cmp
cltd
iret
sbb
movsb
pop
out
jp
lret
or
mov
insb
jbe
mov
popf
xchg
clc
adc
dec
daa
scas
fsubrs
out
adc
sbb
mov
rol
in
xchg
mull
add
cmp
and
loope
xchg
es
dec
andb
ljmp
in
imul
xchg
mov
jbe
mov
push
jmp
pop
push
in
pop
leave
clc
pop
in
pop
mov
or
mov
cmp
stos
push
sub
test
repz
shlb
jecxz
mov
and
inc
xchg
sbb
xchg
frstor
xor
loop
iret
jae
mov
fldt
jno
ror
movsb
fsts
jno
inc
add
sub
jge
inc
mov
outsb
int3
cmp
dec
xlat
mov
jnp
inc
add
dec
inc
or
data16
inc
xor
dec
fs
ds
pop
cmp
call
test
mov
ret
imulb
and
imul
cli
adc
enter
rol
imul
pushf
sti
shll
in
mov
push
adc
cmovb
push
sbb
jl
sbb
dec
scas
sbb
xchg
adc
sub
repnz
push
pop
popa
inc
aas
mov
sub
lret
lods
pop
cwtl
sub
pop
mov
adc
int3
push
cltd
lret
mov
jge
fnstenv
cmp
cmpsb
icebp
movsl
lcall
pop
add
lods
dec
inc
pop
addb
and
jmp
inc
jge
xchg
xchg
fbld
es
loopne
pop
inc
enter
outsl
je
cmpsl
jne
cmp
cld
insb
add
adc
movsl
adc
test
ljmp
jo
ljmp
xchg
decl
add
pop
sub
xchg
inc
dec
std
fwait
dec
xchg
loop
xchg
push
jmp
insb
aas
fdiv
js
mov
ja
mov
xchg
push
dec
xchg
push
lods
rorb
and
inc
and
jns
lods
aad
lods
push
sti
in
inc
pop
push
ss
repz
dec
pop
movsl
xchg
push
std
inc
push
aaa
mov
aaa
lahf
fnsave
bound
mov
pop
jae
xchg
je
rorb
lock
int
push
int
addb
jbe
fdivl
push
mov
testl
push
shlb
ljmp
or
scas
or
ljmp
and
pusha
jp
xchg
mov
xchg
data16
data16
mov
jmp
dec
jge
pop
and
pop
dec
pop
xchg
inc
aad
xchg
inc
repz
inc
aad
jnp
pushf
jl
dec
cld
ds
pop
add
xchg
data16
mov
int3
les
adc
bound
ret
ret
cli
jns
daa
out
jmp
xor
mov
dec
sub
lret
mov
addb
nop
fs
fs
add
shr
adc
test
or
xchg
in
pop
iret
jmp
stos
jmp
jge
das
and
into
adc
or
imul
adc
jp
add
jae
push
jno
xchg
jno
mov
inc
iret
ss
ds
dec
cs
jb
pop
mov
cmp
sub
adc
inc
daa
ds
fcmovne
jne
pop
out
push
iret
push
pop
sbb
jae
cltd
lods
push
push
cld
test
mov
mov
adc
dec
into
lret
add
add
add
mov
pop
mov
push
ret
mov
fwait
add
pop
iret
pushf
jb
push
and
pop
pop
xchg
es
int3
cmpb
mov
adc
and
xchg
or
mov
mov
mov
adc
or
aad
sbb
xorl
xor
and
daa
mov
les
mov
daa
mov
jbe
cli
jbe
aam
popa
mov
cwtl
icebp
test
test
sarb
andb
insb
imul
imul
mov
outsl
fisubrl
cmpsb
fimull
je
or
push
fwait
and
jne
pop
jne
mov
lods
sub
icebp
pop
lods
sub
inc
lea
ret
ret
cli
fcmovnb
sti
adc
insl
repz
insl
pop
ret
movsl
pop
ds
xchg
sbb
sbb
xor
sub
xor
sub
arpl
aas
push
test
mov
mov
jecxz
ficomps
push
xor
lret
xor
xor
fldt
push
sbb
push
testb
mov
fdiv
mov
test
mov
test
mov
sbb
mov
arpl
pop
fs
mov
xor
jp
shll
test
in
sbb
std
or
in
scas
shr
cmc
ja
divb
sub
adc
in
xchg
enter
dec
add
cwtl
xchg
gs
cld
sbb
xor
inc
leave
jg
fisubl
inc
sbb
call
pop
fldl
push
xlat
test
enter
xor
in
dec
rol
sbb
cld
movsl
mov
test
mov
sub
outsl
jmp
xchg
and
mov
outsb
jle
and
cmpsb
sbb
push
addr16
rcrl
rcr
orl
pop
les
sti
scas
dec
jne
dec
outsb
pop
test
sub
xlat
movsb
pop
pop
sbb
popf
shll
ja
sub
sbb
cmp
shl
not
movsl
data16
xchg
dec
push
cwtl
rolb
scas
shrd
ret
ja,pt
repnz
nop
fcmove
jecxz
fucompp
fisubl
mov
adc
dec
les
and
adc
testl
add
add
cmp
lcall
and
inc
mov
lods
mov
and
cltd
or
out
pop
mov
jp
jbe
mov
mov
cmpsb
add
adc
cmp
negb
adc
fs
cmpsl
mov
repz
out
pop
cmp
pop
dec
jno
dec
cli
xchg
inc
iret
or
aad
pushf
or
ljmp
sbb
mov
sahf
mov
adc
bound
nop
dec
repz
stc
dec
arpl
mov
push
fcompl
addl
jp
sub
clc
movsb
cmp
adcl
aaa
push
pop
adc
lret
fcom
int
incl
xchg
mov
pop
adc
pop
push
adc
pusha
jl
pusha
xor
push
aad
adc
xchg
or
jp
call
mov
jno
xchg
pop
inc
test
lahf
push
les
jo
bound
sbb
ds
lods
push
fiaddl
fcmovbe
es
xor
jmp
inc
pop
ja
pop
xchg
pop
adc
shlb
pop
add
pop
int3
mov
fcom
mov
or
ret
bound
sbb
sub
stos
cmpsb
add
int3
push
iret
test
andb
insb
popl
mov
pusha
jnp
pusha
ror
sbb
arpl
mov
mov
repnz
repz
scas
push
xchg
fs
rcrl
sar
add
testl
mov
jno
pushl
cmc
cs
into
and
xchg
stos
lock
xchg
xchg
cmpsl
mov
and
mov
shrb
push
stc
mov
jecxz
add
and
cs
lds
fstps
mov
push
dec
es
es
fbld
aas
sbb
jle
xor
int3
addr16
mov
mov
pop
add
xchg
xchg
mov
sub
loope
jnp
xlat
jnp
and
pop
addl
subl
outsb
mov
jne
add
ja
cmpsl
ja
call
push
ja
fwait
sub
jno
stos
das
and
mov
or
pushl
mov
shl
shr
in
in
aas
lcall
fsts
mov
adc
aas
test
hlt
fs
sub
dec
in
clc
xchg
test
into
popa
mov
xchg
imul
es
or
sarl
lea
cmp
or
jmp
jmp
mov
xchg
add
arpl
lahf
iret
pop
push
into
insl
repnz
and
push
sbb
sbb
rorl
jb
lea
fidivl
cs
pop
sub
jp
rolb
mov
scas
push
sub
mov
cmc
mov
add
pop
fsubp
pop
and
and
je
xchg
lahf
rorb
fists
in
sub
cmp
mov
pop
dec
push
insb
in
movsl
pop
jo
mov
push
sti
ret
lcall
sub
lea
movsl
mov
adc
ret
lods
leave
mov
cwtl
rcl
mov
dec
mull
repnz
repz
hlt
xor
push
ljmp
out
mov
dec
faddp
ret
aaa
xchg
adc
loopne
in
mov
sbb
ret
aas
jns
imul
jp
pop
mov
and
das
test
fdivrs
jp
mov
mov
cmp
inc
sbb
cmpsb
mov
pop
pop
testb
cwtl
mov
shrl
mov
in
pop
clc
dec
es
movb
dec
out
or
jecxz
inc
pop
shrb
pushf
aam
pop
call
insl
and
hlt
das
jnp
jmp
fs
test
fwait
fwait
and
ret
jns
pushf
clc
jns
and
sbb
repnz
sub
ljmp
adc
adcl
pop
fwait
xchg
fsubrs
in
rcll
push
or
xchg
outsl
and
and
out
and
cmpsl
bound
xchg
xor
shrb
aad
jg
lret
enter
jp
aaa
cmp
sbb
xchg
jno
xor
cmc
inc
fildll
mov
cmp
xlat
mov
lahf
sbb
inc
xchg
ja
sbb
xchg
lret
jnp
addr16
xlat
sbb
aam
cmp
sti
jl
adc
xor
popa
icebp
dec
mov
sbb
xchg
dec
neg
pop
ss
cmpsl
add
fmull
mov
call
ss
icebp
mov
out
pop
cmpsb
insl
xchg
and
sahf
sub
dec
push
lret
das
in
push
aad
mov
and
xchg
xor
mov
mov
std
call
xor
jno
icebp
inc
lahf
fistps
mov
dec
jecxz
dec
ret
mov
dec
fldcw
fwait
cltd
sbb
xchg
test
mov
inc
sub
insb
jp
insb
imul
imul
fcmovbe
pop
mov
or
fnsave
bound
adc
ret
pop
sub
dec
clc
xchg
clc
push
push
call
adc
xchg
jns
daa
pop
ss
xor
add
lds
cli
insl
pop
jecxz
pop
mov
sbb
pop
dec
sub
sub
loopne
out
inc
sbb
stos
jne
xor
xor
shrl
inc
adc
icebp
repnz
xor
pusha
add
push
inc
xchg
push
divb
idivb
add
mov
test
aaa
test
mov
test
mov
sbb
mov
loopne
and
fs
out
cld
mov
mov
sarb
mov
sarl
mov
rcl
in
cmc
lahf
push
lahf
sbb
rcrl
sti
jge
cli
enter
dec
decb
rolb
insl
sbb
inc
xlat
xor
lock
fidivrl
jbe
mov
adc
adc
adc
inc
pop
push
scas
les
mov
cmp
cli
std
scas
mov
sbb
insb
cld
xchg
movsl
inc
mov
fwait
ljmp
jp
mov
mov
enter
scas
xchg
int
data16
stc
pop
sub
into
mov
test
adc
cmp
inc
arpl
or
sub
mov
sbb
or
cmp
xlat
cmp
int3
or
sar
adc
hlt
pop
sbb
cmpsb
ficomps
lahf
pop
shrl
addr16
pusha
adc
jns
loop
sub
fmul
jecxz
lock
mov
in
je
mov
mov
mov
fcoms
nop
or
mov
ret
mov
jbe
or
inc
mov
jge
popa
je
bound
jno
fwait
outsb
xchg
mov
jp
icebp
and
movsl
lahf
cmpsl
pop
arpl
out
push
cmp
or
rol
mov
sub
popa
and
rcl
test
insb
or
sarb
adc
or
pop
inc
jge
ds
aaa
xor
cwtl
mov
loopne
sub
sub
adc
leave
inc
int
pop
or
push
adc
or
sub
js
adc
lret
or
outsl
lahf
dec
clc
bound
fs
and
fcom
and
cmp
lahf
inc
mov
call
arpl
mov
mov
andl
xchg
dec
aad
sbb
scas
icebp
and
sbb
xor
or
ret
aaa
bnd
sti
mov
jae
mov
cli
loopne
ret
jmp
mov
adc
mov
xchg
jne
leave
jp
loopne
sbb
bound
inc
ds
push
sti
js
cld
test
rcrl
insb
mov
mov
cmp
ret
fwait
sbb
sbb
insb
cmp
out
jecxz
and
mov
push
jmp
lods
fisubrs
mov
cmp
test
xchg
andb
ljmp
divb
out
cmp
mov
adc
or
pop
mov
aaa
mov
fadds
out
mov
shll
cld
out
mov
icebp
ret
mov
pop
xchg
pusha
icebp
ret
xchg
decb
fstp
jp
cmp
sub
test
sti
insb
imul
js
mov
mov
pushf
aam
sbb
daa
ud2
arpl
dec
dec
cwtl
and
out
pop
jne
cmp
lods
leave
daa
mov
sbb
es
jp
ffree
ret
popf
test
je
vmovsd
adc
xchg
mov
repnz
lahf
nop
ds
pop
adc
outsb
sbb
aam
je
out
aas
mov
push
in
mov
mov
xchg
mov
pop
movsb
mov
pusha
pop
cmp
xchg
inc
xchg
push
not
and
mov
sbb
mov
test
shrl
sbb
fstpl
insl
inc
and
arpl
cwtl
cld
mov
mov
and
dec
push
fisubrs
outsl
shll
or
and
jae
sub
push
test
arpl
fistps
pop
mov
xorl
lods
jecxz
and
std
inc
jmp
dec
inc
les
fimull
fcmove
inc
jnp
lcall
push
push
cmp
enter
in
xor
imul
insb
push
mov
test
mov
cmp
cmp
jns
and
scas
into
outsb
outsl
add
icebp
xchg
scas
or
test
sub
push
ret
sysret
leave
cmp
scas
test
dec
sub
fbld
movsl
add
pop
xchg
dec
imulb
jno
mov
sub
cmp
nop
push
cmc
shlb
mov
adc
cmpsl
adc
fisttps
repnz
add
enter
jecxz
std
jecxz
pusha
sbb
mov
lret
mov
rcrl
xchg
adc
xor
mov
xchg
add
sahf
cmp
cli
shl
cli
inc
xchg
aas
inc
jp
mov
lods
fldt
insl
cmc
add
xor
jp,pt
jae
mov
scas
mov
inc
out
pop
ja
pop
imulb
negb
mov
mov
dec
ret
and
and
dec
stos
mov
scas
test
inc
or
inc
aad
ja
pushf
cld
or
pop
push
pop
pop
addr16
xchg
mov
pushf
mov
sub
inc
pop
adc
sbb
idivb
aad
arpl
cwtl
push
mov
mov
imul
sub
lret
sbb
adc
adc
mov
fs
fs
negl
fcoms
jl
test
loope
push
dec
int3
pop
push
pop
test
and
push
pusha
xor
xchg
xor
addr16
aad
jge
rorl
enter
jp
pop
mov
mov
iret
dec
ret
inc
ljmp
cld
pop
pop
bound
daa
jno
daa
cmp
pop
cmp
mov
mov
lret
out
lahf
inc
inc
lahf
xchg
lahf
rcll
in
stos
in
lcall
pop
sbb
mov
sti
movsb
or
test
sbb
dec
mov
or
xchg
dec
push
dec
daa
adc
and
aaa
out
jecxz
and
in
pop
mov
xchg
add
add
sbb
push
and
pop
xchg
es
enter
pop
andb
ljmp
inc
xchg
mov
lcall
or
mov
cmpsl
cmp
and
addr16
xor
push
icebp
fwait
out
mov
push
lock
divl
cmp
jne
xlat
xchg
icebp
test
mov
or
sti
insb
imul
imul
mov
sub
adc
fimull
add
or
aas
arpl
xchg
and
jne
pop
je
imull
inc
adc
jnp
mov
inc
cmp
js
fisttpl
adc
insl
and
insl
pop
or
sbb
or
cli
inc
out
pusha
out
mov
dec
stos
es
xor
xor
leave
dec
shlb
outsl
adc
icebp
sbb
xor
xor
sub
push
outsl
xchg
push
neg
dec
scas
mov
sub
and
dec
xor
xchg
sbb
fmuls
arpl
fs
js
inc
mov
mov
fisubrs
int3
mov
stc
aam
cmc
and
jae
sub
test
arpl
xchg
xchg
enter
dec
mov
dec
ja
xorb
stos
mov
inc
int3
xor
jl
ficoml
jmp
imul
sub
mov
and
inc
outsl
push
pop
xchg
aas
enter
adc
shl
mov
sbb
lahf
cld
test
lea
jne
hlt
mov
cmp
jle
jns
pop
jp
jle
ret
add
mov
imul
fwait
int3
shrb
rcr
roll
fildl
push
pop
les
clc
in
dec
and
sub
xorb
pop
outsl
movsl
pusha
popa
std
pop
insb
fstps
out
mov
shr
xlat
sbb
ret
gs
mov
xor
shlb
push
dec
dec
pop
or
push
aaa
sbb
and
bound
shll
outsb
mov
pop
jo
pop
jae
insb
jae
and
dec
and
and
push
ja
int
push
int
in
test
fdivs
push
ja
pop
mov
jbe
push
xor
fsubr
dec
jmp
icebp
mov
icebp
mov
add
xor
out
loop
and
jbe
xchg
sbb
data16
stos
data16
or
pop
pop
jmp
sarl
leave
sbb
filds
adc
lcall
sbbb
pop
sbb
mov
pop
mov
fs
dec
test
iret
je
mov
ljmp
sbb
jnp
fsubp
dec
mov
mov
sub
pusha
sub
lret
jno
lret
subl
xchg
pop
cmc
and
mov
test
inc
lret
mov
lods
aaa
add
inc
insl
push
por
or
mov
adc
mov
fwait
xchg
js
sbb
mov
sub
pop
jno
rcll
aad
mov
test
rclb
popa
mov
cmp
pop
cmp
or
pop
fists
xchg
mov
xchg
jne
jne
xor
pop
sbb
dec
inc
mov
push
cs
sub
testb
dec
inc
icebp
out
dec
inc
gs
fldt
xor
sub
jge
add
cltd
or
adc
in
pushf
and
addr16
lods
sbb
lcall
jbe
sub
xor
fmul
lock
pop
loopne
inc
adc
push
leave
xchg
lods
inc
in
mov
push
cmc
aam
xor
xchg
lock
or
ja
add
cmpsl
mov
mov
cld
clc
fistl
dec
sbb
jbe
xchg
and
cwtl
sti
loope
repnz
push
xor
or
out
mov
jp
mov
push
adc
jle
push
push
leave
sbbl
pop
pop
fwait
xchg
sti
push
or
mov
adc
lods
js,pt
shr
mov
test
inc
rol
stos
or
push
adc
sahf
mov
rorl
mov
sbb
icebp
jnp
int
lods
push
fistps
les
sti
fsubrs
mov
mov
popf
pushf
cld
push
sbb
filds
stos
add
aam
push
cld
push
repnz
outsl
push
mov
xor
faddl
subl
xchg
sub
cli
push
pop
jns
rclb
int3
push
xchg
fnstsw
xor
sub
cmp
add
in
pop
lcall
daa
sub
cmpsl
adc
inc
arpl
enter
dec
ja
xorl
test
xor
sub
inc
fidivl
fimull
pop
mov
adc
inc
pop
push
cmp
enter
in
xor
imul
cld
or
test
mov
cmp
bound
jns
push
jp
or
outsl
sbb
mov
addr16
xor
call
add
pop
icebp
cmp
scas
sbb
scas
dec
dec
sub
jg
sub
cmp
pop
fadds
sahf
mov
sahf
mov
cwtl
negl
or
cmpsl
xor
mov
lods
adc
cmpsl
out
mov
cmp
jle
mov
jecxz
sti
jecxz
jo
scas
ret
lods
mov
js
nop
adc
pop
inc
out
mov
xchg
jb
jbe
mov
aam
xchg
sub
jp
popa
or
push
push
sti
dec
shll
xchg
or
mov
push
xchg
jno
mov
lods
mov
push
flds
notb
sub
mov
mov
out
pop
pushf
and
aad
dec
ds
xor
inc
aad
jne
pushf
jae
ror
out
lahf
ljmp
jmp
std
dec
jmp
add
add
adc
add
hlt
jns
pushf
jns
and
repnz
jo
xchg
inc
test
sub
add
cmp
adcb
ret
fs
pop
xchg
xchg
fdivs
fcom
popa
or
test
lods
xchg
dec
fists
push
lahf
sbbl
pop
dec
and
push
pusha
xor
xchg
xor
dec
aad
jnp
or
enter
jp
xchg
jno
sbb
add
mov
cltd
aad
cmp
pop
cmp
fildll
adc
in
lahf
push
cwtl
fstl
testb
test
push
jnp
fsubrl
pop
imul
insb
nop
jmp
test
sbb
les
xchg
dec
inc
lds
cmp
add
int
out
jecxz
and
mov
mov
xchg
add
ss
and
out
push
xchg
es
xorb
andb
aad
adc
sbb
xchg
mov
sub
mov
dec
in
pop
inc
negl
push
nop
xorl
xor
adc
out
mov
and
sbb
mov
jbe
cmc
jbe
dec
test
icebp
test
jecxz
inc
or
inc
push
push
mov
mov
call
in
loop
mov
outsb
add
lods
jge
bound
cmp
or
stc
dec
and
lahf
push
jne
jmp
pushf
and
inc
fildll
and
inc
gs
inc
ret
xor
negb
xchg
add
xor
sbb
and
inc
enter
aas
xchg
sbb
dec
jb
xor
stos
inc
test
clc
addr16
fbld
or
pusha
push
pushaw
push
testl
aam
inc
mov
pop
in
add
in
leave
mov
int
inc
mov
loopne
sbb
arpl
fdivl
mov
xlat
inc
pop
xor
pop
push
fsubrl
iret
push
insb
rorl
iret
cmp
jle
mov
lret
dec
push
divl
mov
das
pop
xor
sbb
popf
jbe
or
xor
pop
and
in
insl
stc
push
cmp
jno
adc
sub
repz
mov
fisttps
or
mov
mul
rolb
inc
ret
lcall
push
sbb
les
mov
cmp
into
cmp
jbe
mov
loope
imull
pushf
arpl
pusha
inc
mov
insb
mov
or
sub
cmp
sahf
cli
pop
test
out
loop
cmp
cmp
pop
icebp
cld
push
jecxz
out
aaa
xchg
fiadds
jle
mov
rclb
and
lea
xchg
push
adc
repnz
scas
ficoms
mov
xor
out
and
bound
adc
cli
sub
sub
lds
add
clc
je
sbb
cli
xchg
push
pop
xchg
loope
in
dec
daa
clc
xchg
mov
push
push
nop
sub
test
fstpt
jle
icebp
xor
cmp
mov
mov
mov
push
and
push
lods
lock
pop
dec
xor
and
imul
shlb
xlat
xor
stc
xor
pop
xor
mov
sub
mov
add
rcr
test
leave
arpl
jb
cmp
add
and
mov
sbb
jne
sub
gs
stos
pop
fs
jp
jno
ficoml
mov
and
or
shl
das
sbb
dec
or
arpl
sbb
mov
lods
pop
loopne
add
sub
mov
inc
mov
clc
je
clc
mov
shll
enter
fcoml
test
ss
xchg
cmp
icebp
test
sub
pop
fnstcw
int3
imulb
jnp
mov
push
out
push
jg
sub
xor
rol
test
adc
xchg
das
mov
call
cmp
adc
push
fsubrl
push
jo
jne
fsubrp
jle
dec
xor
lods
lods
lock
jns
inc
repnz
jg
cmp
mov
fs
cmp
or
in
out
out
jns
dec
cmp
inc
into
add
xchg
jge
cmpsl
mov
popl
mov
mov
xchg
imul
out
sarb
ret
mov
cmp
icebp
test
test
xor
push
dec
vmwrite
insb
fdivp
insb
imul
or
insb
repz
dec
fldl
fidivrl
iret
mov
arpl
arpl
rcrl
fistpll
sbb
addl
rcr
rolb
shlb
dec
leave
xor
ret
pop
fiadds
ret
jge
mov
imul
sub
out
js
xchg
mov
es
mov
fnstenv
sbb
mov
mov
stos
inc
call
xchg
push
fildll
std
mov
mov
fisubrs
adc
dec
mov
es
stos
das
fldl
push
pop
cmovo
sub
or
push
xchg
lret
inc
lock
cmpsl
fstps
push
dec
jp
adc
xchg
gs
mov
mov
cmp
xlat
ds
mov
add
xor
pusha
cmpsl
or
xchg
ss
adc
adc
inc
out
sbb
sbb
ja
pop
stos
in
jecxz
jo
mov
and
fwait
mov
push
sub
les
std
pushw
shll
jle
iret
idiv
sahf
add
jns
fldz
sbb
jbe
dec
push
adc
lea
jnp
inc
push
jmp
cmp
test
jecxz
aam
or
sub
ljmp
xlat
sbb
fildl
stc
sbb
mov
icebp
mov
js
js
rolb
js
js
rcl
test
aas
aaa
inc
mov
mov
in
sbb
lret
sarb
call
in
inc
popa
lds
sbb
push
push
cmp
jp
gs
shll
and
adc
movsb
or
das
test
cs
mov
dec
dec
scas
adcb
fistpll
adc
fcomps
shlb
mov
jecxz
es
stos
lods
int
inc
push
andb
xchg
rcl
mov
cmpsb
mov
int
sub
pop
xchg
mov
cltd
dec
pushf
outsl
daa
jae
ret
or
push
pushf
addl
inc
ja
andb
or
jmp
lahf
jl
or
lods
sbb
push
jge
cli
adc
add
xchg
mov
sti
add
mov
or
aaa
push
cli
inc
cmpsl
xor
mov
das
daa
out
mov
push
popa
jno
xlat
fxch
pushf
dec
pop
or
das
mov
aas
int
sub
imul
aaa
jge
inc
and
scas
sub
lret
leave
mov
mov
mov
out
in
popa
fiadds
jecxz
xor
sti
sbb
mov
jae
lahf
mov
mov
ljmp
and
sub
push
sarb
ror
imul
incl
push
imul
cmp
push
dec
push
pop
cwtl
inc
fs
xchg
lods
dec
sti
hlt
push
scas
dec
lods
sub
sbb
mov
mov
mov
pop
into
xchg
dec
outsb
mov
pop
dec
pop
or
mov
adcb
cli
pop
stos
fldl
pop
fisttpll
lea
jle
xor
jb
out
inc
sti
popa
and
push
xlat
aaa
and
xlat
lcall
adc
jecxz
mov
xor
mov
jae
jg
int
aaa
clc
jns
or
fidivrs
cmpsb
mov
out
pop
jecxz
icebp
adc
ret
jmp
test
daa
xchg
icebp
test
and
mov
lods
mov
enter
popa
jno
imul
mov
outsb
sub
outsl
fimull
neg
inc
inc
inc
inc
xor
arpl
xchg
and
jne
push
jne
movsl
jmp
adc
xchg
sbb
jge
loop
xor
shlb
bnd
imul
push
bound
mov
sbb
dec
mov
out
pop
aas
mov
jo
inc
jo
xor
fildl
ficoms
arpl
xor
xor
pusha
int3
inc
ret
pop
mov
inc
idivb
jl
mov
test
xor
push
rorl
cmp
dec
icebp
imul
sub
jp
outsb
jp
test
lahf
mov
push
mov
hlt
pop
pop
divb
push
adc
inc
arpl
enter
dec
aaa
cmp
in
mov
std
push
dec
cmp
inc
iret
cmp
cmp
stos
inc
mov
test
mov
inc
stos
jp
movsb
insl
lahf
sbb
nop
in
das
mov
adc
into
test
sub
inc
imul
jmp
push
sub
outsb
mov
add
push
lahf
imul
xchg
cld
rorb
add
push
push
or
les
hlt
scas
adc
mov
push
jl
sub
jbe
movsl
pop
jp
pop
sahf
icebp
aaa
sahf
mov
into
dec
sub
call
cmp
roll
add
fisubs
out
fisttpl
mov
adc
mulb
xor
and
aad
ret
mov
jns
cwtl
jecxz
clc
fiaddl
in
and
mov
mov
mov
adc
imul
movsb
call
lsl
sbb
cli
ss
inc
hlt
sub
sub
gs
and
mov
and
lods
ds
sarb
jp
outsb
jp
imulb
cmpsb
pop
fcmovnbe
pop
test
negb
sbb
lahf
mov
xchg
in
pop
fisttpl
pop
dec
dec
mov
or
inc
sbb
jb
pushf
pusha
add
ljmp
into
push
xchg
mov
andb
inc
inc
ret
bnd
xlat
mov
add
gs
sub
push
pop
sub
cmpb
sbb
in
mov
fs
fcmovne
xchg
enter
rcl
or
lods
fdivs
adc
pop
push
xchg
sbbb
push
dec
and
inc
fsubs
and
dec
aad
jns
sub
inc
stos
dec
pop
add
cmp
mov
mov
inc
push
shl
push
mov
out
daa
inc
outsl
pop
xchg
push
cmp
sbb
das
loop
lahf
movsb
inc
xchg
addr16
pushf
fidivs
stos
ret
jne
cmpb
sbb
repnz
sti
or
and
hlt
mov
sub
mov
outsl
int
dec
add
daa
jbe
daa
mov
or
call
in
mov
iret
add
ret
imul
es
jg
xchg
mov
es
es
andb
shr
adc
adc
ret
mov
les
test
xor
mov
out
push
fs
mov
pop
mov
mov
out
mov
mov
ret
bnd
mov
icebp
test
mov
inc
inc
and
mov
insb
push
imulb
in
sub
sub
outsl
ficompl
jp
arpl
xchg
and
jne
push
jne
cmpsb
aam
push
sub
push
lods
sahf
xchg
sbb
sbb
push
ret
fs
icebp
fcmovnb
outsl
or
insl
xchg
jge
nop
into
push
jl
mov
sbb
push
push
out
sub
cmc
sub
insb
pop
out
rcrb
lret
xor
and
sahf
xor
or
push
cmp
cwtl
and
rorb
out
mov
mov
add
cli
add
xchg
test
sbb
mov
loopne
dec
loopne
add
fs
jb
cld
mov
sub
stc
out
insb
xchg
sub
sbb
cmc
sub
je
jle
or
dec
adc
ret
enter
dec
ja
jle
loop
cmpsb
loop
stc
inc
std
ret
insb
js
inc
jl
inc
fiaddl
or
sub
mov
dec
pop
mov
lea
lret
enter
in
cs
sbb
insb
cld
pop
fwait
cmc
test
sub
cmp
jo
jmp
iret
stos
jns
sbb
pop
test
outsb
sbb
sahf
sbb
dec
addr16
test
rcr
xor
or
les
les
sub
dec
sub
jl
sub
mov
mov
pop
sahf
lahf
lahf
fidivs
cld
cmp
pop
cmp
rorb
add
xchg
cld
or
shlb
xlat
pslld
repnz
inc
ror
jecxz
mul
fiaddl
or
push
aad
dec
mov
xchg
sub
jp
loop
adc
and
sub
bound
adc
ficoml
or
call
mov
jp
sub
jl
mov
out
mov
xor
lea
jmp
push
cmpsb
dec
xchg
repz
cltd
cmp
insl
cmp
js
and
lods
popa
das
mov
je
popf
ljmp
pop
addr16
in
mov
loop
inc
jno
cmp
mov
dec
shll
xor
mov
nop
stos
mov
and
adc
sub
xorb
in
scas
nop
mov
xchg
xchg
fadds
pop
rolb
mov
xchg
sahf
fistl
push
out
jg
and
and
dec
pusha
xor
bound
inc
js
sbb
sbb
cli
sbb
fimull
add
jg
mov
jmp
cmpsl
jg
iret
lcall
jl
fcoml
pop
xor
in
push
cmpsb
push
xlat
in
sbb
mov
mov
sbb
mov
ficoms
scas
xor
mov
cmpsl
inc
out
cmp
in
cmpsl
mov
jecxz
in
fimuls
xchg
das
popa
rolb
fnstenv
inc
push
add
and
ret
es
subb
stc
pop
loope
sbb
adc
push
xchg
push
mov
mov
mov
icebp
les
xchg
add
adcl
shlb
ja
fmuls
mov
dec
and
cmc
lods
mov
pop
sbb
popa
adc
and
iret
pusha
mov
inc
rol
hlt
mov
roll
test
add
sub
jl
mov
fiaddl
stc
dec
arpl
popa
and
data16
mov
test
vunpcklpd
lock
inc
push
test
ret
sbb
inc
in
insl
fwait
rep
pop
sbbl
movsb
sbbb
test
sub
push
aas
inc
sti
add
bound
jno
in
mov
icebp
out
mov
nop
lock
iret
lea
push
andb
dec
stos
mov
mov
clc
mov
push
push
inc
test
test
pop
jmp
xor
jmp
inc
cmp
pop
cmpsb
mov
cld
jle
mov
jp
push
cmp
int3
inc
mov
mov
repnz
xor
aaa
adc
dec
push
arpl
jg
enter
dec
mov
xchg
xor
insl
dec
mov
inc
or
or
cwtl
add
stos
out
cltd
mov
enter
imul
mov
sbb
enter
ficompl
mov
imul
test
movb
add
push
sahf
jnp
lret
jns
idivl
into
xchg
inc
lea
adc
or
jns
sarb
pop
xchg
ficoml
in
les
pop
in
dec
std
xor
sub
mov
out
cmp
inc
sahf
mov
fnsave
xchg
xor
sub
xchg
movsl
jbe
in
outsl
cmp
rcrb
in
imul
mov
inc
int
enter
jecxz
push
mov
mov
out
mov
iret
pop
or
push
adc
push
out
scas
movsl
out
clc
movsb
add
fldl
inc
clc
lds
jp
lcall
or
mov
mov
cmpb
sub
jl
in
cmpsl
cmp
fnstenv
outsl
aam
sub
outsl
jno
out
cmp
lods
pop
push
out
sbb
fs
xor
aad
popf
xchg
pushf
cld
out
fsubrp
jbe
test
addr16
and
fwait
fs
sub
fcoms
mov
cmp
push
and
popa
adc
fnstenv
add
ss
lret
and
ret
nop
inc
inc
shll
daa
xchg
inc
icebp
xlat
fsubrs
ljmp
rolb
xchg
jbe
aam
gs
push
xchg
mov
repz
pusha
add
jo
inc
mov
aad
cwtl
xchg
dec
out
mov
sbb
pop
incl
xchg
xor
jae
iret
es
mov
mov
pushf
mov
add
fs
mov
icebp
adc
stos
fcoml
das
sub
in
dec
cmpsb
push
pop
clc
inc
sbb
fisubs
mov
sbb
lods
lret
pop
ficoms
jp
or
adc
inc
out
dec
fisubrl
lahf
cli
leave
in
into
int
xchg
cmpsl
pusha
rolb
xchg
sub
ret
and
mov
sub
aam
ret
mov
dec
cmp
xchg
cli
stos
xlat
mov
orb
pop
scas
sbb
xorl
ja
mov
iret
addr16
and
lods
jg
mov
add
popa
sbb
icebp
ret
gs
aad
hlt
dec
pop
mov
ljmp
insb
pop
push
das
imul
sub
or
xor
sub
xorl
arpl
jp
and
and
test
inc
repz
into
outsb
out
icebp
xor
mov
jp
pop
inc
cmp
cwtl
sbb
ja
xchg
sbb
pop
pop
jb
ds
pusha
jge
nop
test
mov
sbb
or
add
mov
jno
add
jno
cli
mov
xor
mov
push
mov
lods
mov
in
lret
mov
add
push
mov
loopne
jmp
bound
loopne
mov
fs
pushl
mov
lds
dec
xor
and
push
imul
mov
int
jmp
in
cmc
and
repnz
add
aad
adc
aaa
or
mov
mov
dec
ja
or
xchg
adc
inc
out
dec
and
test
insl
fimull
push
lret
cs
adc
dec
cmp
mov
int
mov
pushf
adc
ljmp
test
pop
jl
push
jmp
pop
xchg
pop
mov
adc
in
aad
outsb
addr16
sbb
or
jg
push
adc
mov
stc
rcr
sub
jp
les
push
mov
dec
xor
pop
dec
inc
movsl
xor
jne
rolb
sahf
sbb
sahf
mov
movsb
sarb
push
test
fiadds
cmpsb
fidivs
mov
mulb
js
aad
pop
aad
repnz
pop
adc
pop
mov
xchg
jecxz
and
or
inc
mov
pusha
andl
mov
ss
insb
scas
cmp
cli
pop
adcb
add
popa
ror
add
orb
dec
out
iret
jp,pt
test
pop
xlat
enter
mov
push
arpl
call
sub
outsl
mov
repz
outsl
ds
cmp
insb
cmpsb
push
jo
pushf
in
insl
hlt
lahf
pop
lret
xchg
insl
cmp
cld
in
xlat
fcoml
xchg
aas
jnp
push
inc
ret
mov
or
or
mov
in
sub
scas
xor
outsl
sub
movsl
sbb
clc
adcb
roll
loopne
call
mov
mov
jae
test
fsts
aaa
fs
and
sub
push
dec
pusha
xor
mov
pop
add
jp
lea
sub
shr
sbb
ljmp
iret
filds
je
daa
arpl
cmp
daa
or
popa
sbb
pusha
sti
rorl
lock
stc
repz
iret
aad
je
imul
inc
sbb
pushf
inc
add
test
push
shrl
clc
dec
stc
stos
lret
into
sarb
add
out
jecxz
jns
std
jb
mov
xchg
iret
mov
fistpl
xchg
add
imul
pop
push
and
push
xchg
es
movsb
push
loope
push
andb
iret
ljmp
aas
xchg
mov
int3
test
cmp
mov
scas
stc
out
add
pop
test
popa
out
mov
push
mov
addr16
cmpsl
lods
out
mov
xchg
pushf
cmpsl
jbe
mov
icebp
adc
and
adc
das
icebp
and
lcall
imul
in
push
enter
bound
fisubrl
push
or
mov
push
push
push
push
and
cmpb
push
sbb
sti
into
xchg
sbb
data16
fldl
ret
mov
pop
out
fcmovnb
fsubrs
pop
cmpsb
test
lcall
sbb
add
movsb
inc
xor
sub
cmp
xor
test
fcoml
xor
mov
or
icebp
sbbl
push
push
push
cmp
and
mov
mov
out
test
subl
dec
out
loopne
jbe
push
fdivrs
mov
dec
sub
adc
cmpsl
and
jne
loope
fmul
nop
fstpl
sub
inc
mov
je
mov
add
mov
scas
lods
sub
nop
cmp
loop
rcll
testb
fstpl
das
stos
arpl
test
dec
loopne
sub
xor
pusha
cmp
in
movsb
adc
enter
int
or
in
ret
push
cld
test
and
aam
cmp
pop
out
fs
xchg
jbe
mov
inc
lcall
jg,pn
hlt
stc
stos
hlt
ljmp
jmp
inc
ss
jge
les
push
in
jl
dec
jns
sub
imulb
pop
sti
loopne
sahf
je
lods
adcb
jecxz
jnp
cmp
out
popf
outsl
jmp
mov
jno
shlb
loop
repnz
push
rcll
std
sti
xlat
sbb
jecxz
ss
mov
push
aam
or
inc
out
adc
insl
or
imul
inc
daa
dec
jp
adc
adc
cmpsb
popa
and
mov
pcmpgtd
mov
ret
iret
cwtl
fisubs
xchg
xor
lcall
outsl
mov
std
pushf
xchg
test
pop
dec
outsb
cmp
xchg
movsl
or
inc
iret
jne
mov
outsl
aad
repz
shr
xor
pop
pop
addr16
or
mov
nop
cmp
xchg
ds
fimuls
daa
cmpsb
arpl
loope
aad
adc
ss
inc
sub
pop
sub
sub
jecxz
dec
leave
nop
fs
std
daa
fistpll
sbbl
arpl
lods
xchg
xchg
xchg
aam
dec
les
push
js
dec
je
or
pusha
aas
or
addr16
xor
adc
addl
hlt
jp
popa
xchg
imul
cmc
and
fdivrl
mov
pop
out
cmp
sbb
frstor
mov
rcr
sbb
and
fistpll
sbb
es
sti
cmp
cwtl
loopne
sub
mov
sub
stc
aas
iret
clc
xchg
enter
mov
jnp
add
cmp
ss
pushf
scas
jno
in
push
rcrl
dec
insl
xor
pop
and
jl
xchg
pop
adc
stos
mov
in
or
out
xor
adc
fwait
xchg
xchg
in
les
cwtl
pop
add
mov
out
ret
stc
push
sbb
movsl
xchg
out
mov
aaa
fcmovb
jbe
popl
xchg
mov
testb
and
inc
pop
stos
add
cmpsb
in
push
in
stc
hlt
loop
leave
orl
sti
scas
imul
js
jecxz
arpl
pop
sub
inc
push
jne
mulb
lods
xchg
repnz
icebp
cmp
jl
icebp
inc
inc
ret
scas
mov
popf
fcmovnb
sarb
push
xlat
lock
pop
aam
sub
xchg
sbb
push
sbb
pop
and
dec
adc
sub
iret
and
stos
test
mov
mov
icebp
mov
sbb
or
and
enter
mov
shl
add
scas
test
pop
mov
jno
aam
loopne
sub
mov
popf
ljmp
sbb
cmpsb
and
sub
mov
in
movsl
xor
jl
add
idivb
dec
arpl
ror
push
andl
out
jp
loop
aam
popf
sub
sub
mov
insb
fimull
rorl
push
adc
dec
cmp
mov
enter
mov
sub
imul
loope
sub
push
inc
insl
cmp
jp
xchg
jns
je
into
lret
les
jae
ljmp
insl
daa
adc
aad
int3
shlb
mov
icebp
fiaddl
fisubs
mov
xor
scas
iret
mov
cmp
dec
sub
or
call
movsl
xchg
das
lret
bound
repz
mov
mov
das
add
mov
sbb
ficoms
test
shlb
mov
xchg
dec
cmp
mov
xchg
into
enter
lea
push
mov
cmp
ljmp
in
jns
xchg
push
xchg
xchg
fdivl
insb
or
dec
scas
xchg
hlt
in
cli
inc
xor
or
pop
or
mov
in
dec
rcrb
mov
jp
fwait
rol
imul
fwait
repz
dec
call
ficoml
mov
mov
subb
jb
cs
cmp
inc
xchg
gs
mov
jmp
pop
pop
jb
push
pop
loopne
clc
test
mov
adc
jno
lret
push
cmpsl
or
mov
push
mov
adc
inc
xchg
fildl
inc
or
ret
xor
lret
leave
sub
nop
sbb
stos
inc
mov
adc
nop
out
mov
fdivr
lea
mov
fistl
les
xor
nopl
shrb
and
inc
inc
fldcw
cmp
stos
add
jp
addb
fisubrs
sbb
fnstsw
cli
out
in
dec
jg
inc
push
stos
inc
dec
xchg
aaa
jbe
sbb
cld
xor
cmp
push
mov
loop
cmp
mov
or
fdecstp
js
cmc
cmp
imul
xor
into
add
jmp
mov
mov
add
in
push
or
out
jecxz
dec
xchg
pop
popa
out
sahf
imul
xchg
add
ja
stos
cs
and
jmp
in
or
jno
shll
mov
mov
adc
movsl
adc
int
fnstsw
mov
cmp
andb
daa
and
push
xor
pop
mov
mul
dec
movsb
xchg
xor
in
jbe
out
sub
int
mov
mov
daa
test
mov
addr16
insb
imul
pop
sub
pushf
and
lcall
xor
jg
test
push
pop
mov
and
inc
jno
lahf
xor
sti
lods
pushf
cld
data16
sbb
sub
call
sbb
ja
subb
mov
sub
jmp
cmp
push
xchg
dec
rclb
aas
add
jb
test
ficomps
loop
out
aaa
mov
add
or
fisubl
push
inc
jns
push
cmp
jae
mov
aam
jno
pop
int3
or
in
test
ffree
dec
out
and
mov
fcomps
xor
jmp
mov
xchg
add
and
xchg
loopne
lret
in
cmc
sbb
jae
das
jmp
lods
fninit
sahf
loopne
mov
mov
mov
or
into
loope
test
bound
stc
jmp
or
ret
cmp
xor
adc
add
dec
push
pop
popa
cmp
or
and
dec
and
jb
cmc
sbb
mov
xor
rcrb
jp
iret
mov
inc
inc
test
xchg
out
fdivrl
in
sbb
data16
jo
filds
fnstcw
mov
jp
es
inc
sti
inc
jge
lcall
mov
mov
adc
jle
ds
push
add
loop
mov
testb
xor
cmp
inc
sbb
jb
fdivl
fdivrs
repnz
cmpsb
or
adc
mov
jb
mov
cmp
loop
mov
stos
bound
fs
adc
xchg
add
out
push
cs
cmp
lods
test
xor
mov
call
or
pop
in
fdivs
sub
add
sub
xchg
fisubrl
outsl
lock
pop
clc
mov
test
push
pop
test
lea
mov
or
imul
aam
fnstsw
leave
inc
loopne
int
push
or
scas
pushf
dec
aaa
mov
mov
mov
mov
stc
xchg
xchg
mov
sbb
adc
or
out
jb
cli
loope
pop
pop
cmpsl
aas
lret
push
dec
push
or
mov
inc
and
mov
dec
xor
push
jo
cmpsl
push
pop
push
sahf
pop
inc
pop
fiadds
jo
gs
mov
outsl
out
push
or
mov
movsl
jb
sbb
pop
movsb
jmp
test
int
dec
int
cmp
or
xorl
mov
jmp
push
jmp
push
mov
and
es
imul
mov
out
outsb
cltd
imull
aad
sbb
sbb
cmp
movsb
cli
and
sarl
inc
sbbb
mov
mov
aaa
nop
icebp
xor
lods
lret
cli
mov
out
and
and
mov
xor
inc
cld
xorb
adc
inc
scas
nop
sub
adcb
lods
movsb
test
lea
cmc
inc
inc
mov
arpl
mov
fimull
in
xlat
lea
pushf
call
jne
dec
inc
into
adc
jmp
into
fmulp
jo
loop
xchg
stos
add
rorb
int
ffreep
repz
and
jnp
jmp
push
jmp
inc
xchg
add
shl
adc
xorb
outsb
pop
pop
xchg
and
dec
add
arpl
xor
lea
es
jg
pop
int3
scas
add
insl
pop
lods
xor
xchg
rcl
mov
jbe
jb
and
data16
ret
mov
movsl
xchg
jbe
insl
fwait
xchg
sub
testb
sbb
test
pop
rcrb
test
mov
adc
jno
lret
cmpsb
inc
mov
pop
fidivs
cmp
lahf
xchg
aaa
roll
je
inc
jae
inc
jne
jecxz
xchg
push
xor
enter
leave
or
mov
ljmp
test
loope
iret
je
mov
xchg
pop
add
in
in
push
adc
sbb
movsb
and
repz
andb
divb
jbe
jae
icebp
ja
adc
mov
out
cmc
cmpsb
pand
adc
or
lea
adcl
inc
xchg
and
jo
inc
mov
cmp
cmp
pop
jle
outsb
in
fwait
sub
cmpsb
nop
fwait
orl
lahf
jp
mov
dec
jmp
mov
inc
cmp
push
orb
ja
stos
shlb
sbb
adc
and
mov
mov
cwtl
scas
push
add
lret
ror
shrl
sbb
dec
aaa
pop
test
addr16
movups
fistpll
fcmovbe
cmp
bound
adc
mov
out
les
pop
insl
jmp
fnstenv
aad
jecxz
push
push
dec
popf
subb
stos
addb
mov
fldenv
loop
mov
xor
cmc
jne
inc
pop
xchg
out
arpl
mov
cmpsl
lahf
mov
out
inc
sub
push
push
adc
subb
sti
mov
sbb
fwait
int
aam
fsubl
cwtl
je
lahf
jmp
fisubl
mov
jae
pushf
sub
icebp
mov
mov
pushf
lcall
lahf
mov
cwtl
sbb
ss
in
add
rcrl
inc
aaa
jae
jecxz
cmpsl
adc
add
add
sbb
fsubl
test
dec
stos
and
movsl
scas
xor
out
fwait
in
mov
ret
imul
cli
dec
jmp
fmuls
arpl
fiadds
xchg
pop
pop
movsl
jae
inc
sbb
dec
mov
cs
cmp
fstl
mov
jp
aam
jae
shlb
mov
xor
mov
jge
sbb
jo
jo
lock
out
mov
cmp
xchg
stos
lods
mov
mov
shlb
arpl
jnp
xor
sbb
lahf
mov
mov
and
cmpsb
cmp
scas
sbb
jmp
mov
cmp
and
add
add
jg
sbbb
cmp
dec
mov
xchg
cmp
rolb
xchg
dec
inc
push
pop
fstl
and
out
xlat
cmp
xorb
ret
mov
inc
cmp
xchg
ljmp
mov
push
icebp
fnsave
xchg
add
or
shlb
ja
cmp
lods
mov
addr16
pop
and
add
mov
jbe
xorl
dec
and
mov
test
arpl
andb
inc
movb
movsl
or
inc
daa
xor
shll
mov
mov
cltd
inc
mov
or
jnp
jno
int
pusha
cli
add
and
test
ljmp
jns
filds
xchg
sub
pop
lods
cmp
mov
lds
sahf
xor
xchg
repnz
call
jp
sbb
orl
pop
jl
pusha
leave
jp
test
mov
adcl
aaa
popf
adc
push
or
gs
ss
in
sahf
lcall
test
mov
push
lock
cs
test
mov
mov
test
push
inc
sahf
xchg
loop
sti
stc
add
push
inc
mov
pop
movsl
mov
test
mov
rcll
pusha
ja
xor
inc
mov
lods
mulb
inc
push
sub
cmp
mov
mov
das
sub
xor
mov
popa
out
int
push
fs
push
push
out
imul
rolb
outsb
cs
fcomip
nop
in
push
std
xor
fisttpll
push
dec
or
jmp
test
outsb
push
test
loop
aas
add
inc
mov
pop
cmc
rcr
test
cmp
stos
mov
cmp
stos
xor
int3
xor
jle
adc
daa
into
pop
sahf
stos
pusha
leave
hlt
iret
mov
arpl
lea
leave
pop
jns
fs
out
jo
pop
dec
decb
dec
xor
out
lahf
add
loope
into
sbb
cmp
mov
or
dec
mov
mov
inc
mov
shrl
inc
xchg
sahf
adc
jbe
in
out
hlt
push
jnp
and
in
fdivrs
les
adc
mov
and
inc
pop
jae
pop
push
cmpsl
cmp
fisubl
hlt
cmp
test
ror
out
hlt
loope
jbe
imull
push
mov
dec
flds
repz
pop
shl
xchg
xchg
mov
mov
add
and
pop
sbb
xchg
fnstcw
test
jno
in
jecxz
jg
fsubl
dec
addr16
repz
push
jae
mov
xor
fldenv
cwtl
stc
repz
out
movsb
add
lahf
add
imul
ja
sahf
fadds
in
pop
adc
movsl
sbb
mov
cmc
xchg
int
pop
in
icebp
pop
xchg
add
jp
and
fstl
lds
cs
aas
pop
cmp
or
mov
pop
cmpsl
fwait
lcall
adc
lods
push
loope
xor
ja
lock
repnz
int3
fdivl
sbb
gs
push
mov
push
gs
xor
mov
repz
loope
mov
sub
mov
sti
test
ja
js
sarb
int
mov
xchg
sub
inc
sub
rorb
out
inc
imul
fidivrs
xor
pop
xchg
mov
xchg
mov
sbb
xor
and
rcrb
rolb
cs
cli
mov
adc
mov
mov
rorl
and
xor
xor
lock
mov
mov
out
js
in
rclb
xor
in
jbe
xorl
mov
or
test
push
inc
lods
inc
out
into
inc
adc
insb
sub
imul
subb
loop
faddl
incl
or
mov
and
mov
jne
imul
adc
pop
leave
adc
test
icebp
test
in
sbb
ret
fistl
add
insl
iret
adc
pop
fdivrs
pop
add
movb
mov
aas
std
mov
stos
sub
out
adc
push
outsb
aad
xor
mov
mov
fcomip
push
jo
fwait
dec
out
idivb
xor
xchg
repz
or
test
mov
rcrb
loopne
stos
push
bound
aas
movsb
dec
rclb
xchg
and
xchg
xchg
dec
test
mov
pop
shlb
xchg
faddp
lret
inc
movsl
xor
pusha
push
bound
push
add
pop
call
fiaddl
loop
cli
mov
jo
cmp
jg
and
mov
mov
divl
adc
cmp
sub
mov
in
dec
xchg
push
jp
or
jg
repnz
and
sti
or
cwtl
aaa
adc
adc
jg
mov
loop
outsb
sbb
xchg
sbb
inc
addr16
and
hlt
rcr
aad
fiaddl
fiaddl
pop
scas
test
pusha
fistps
js
sbb
sub
rcrb
dec
inc
lods
arpl
int3
dec
in
shll
xlat
iret
mov
pop
jns
mov
lea
mov
out
imul
cmpsl
call
pslld
sub
cmpsl
xchg
lock
mov
add
mov
test
dec
cmp
out
or
add
mov
ret
jmp
dec
jp
outsl
jp
sub
and
add
jp,pt
data16
sbb
fisubl
testb
fwait
outsl
rol
outsl
mov
xchg
mov
inc
fucomp
pop
mov
pop
dec
mov
sub
inc
push
xchg
sub
lds
movsl
scas
es
xchg
ret
les
jno
test
sub
sub
pop
push
adc
dec
sbb
mov
cmp
je
inc
sub
sbb
addl
lret
inc
add
nop
aam
add
inc
mov
xchg
fsubs
andb
adc
test
lods
cmp
xchg
pop
pop
inc
inc
adc
dec
movsb
repz
inc
pusha
mov
adc
sbb
sti
cld
add
mov
pop
jno
inc
jae
or
lret
mov
push
inc
movsl
out
jge
cmpsb
repz
jne
hlt
fsubrs
jb
mov
arpl
lahf
add
ret
shufps
ss
insb
test
pop
sbb
cmpsb
inc
ds
mov
and
mov
and
mov
popf
cli
daa
lds
sub
mov
add
mov
pop
daa
xorb
ja
in
sbb
xor
jge
aam
xchg
ja
cld
fimuls
fidivrl
adc
mov
mov
adc
adc
lea
test
insb
les
in
pop
subl
pop
out
add
mov
outsb
jecxz
adc
mov
insl
shr
cld
xchg
jo
jbe
ljmp
out
mov
hlt
push
inc
test
or
insb
mov
xchg
imul
cmpsl
loop
scas
push
out
cmp
mov
jne
mov
adc
mov
js
fstl
push
repnz
sub
out
mov
push
inc
push
cld
test
dec
mov
cmp
insl
or
subb
gs
repnz
sub
out
push
mov
test
stos
xor
shlb
fiadds
xlat
pop
pop
xchg
icebp
xor
pusha
push
faddl
dec
ret
gs
push
add
loop
test
imul
sub
loopne
jle
push
or
clc
xchg
out
push
test
outsb
sbbl
lds
mov
test
pushf
cmpb
sbb
jne
lea
ret
stos
lds
sahf
and
jl
xchg
sti
orl
inc
pop
sub
add
mov
dec
jns
inc
xor
sub
xor
ja
xor
and
add
hlt
fcomp
inc
fistps
dec
insl
push
lahf
gs
cmc
out
divb
jmp
xor
mov
into
outsb
int3
nop
or
mov
sbb
cs
add
xchg
mov
lea
mov
push
mov
cmp
scas
and
imul
dec
lret
dec
jns
bound
jae
orl
aam
iret
mov
cmp
mov
xchg
mov
icebp
cld
jp
fsubs
pushf
test
mov
jmp
mov
mov
ss
movsl
sbb
jae
cmpsl
out
jecxz
dec
pusha
fdivl
inc
pop
mov
aam
mov
adc
roll
and
out
sub
cli
push
pop
cli
inc
mov
outsb
jp
test
mov
push
dec
sub
sbb
cmp
sub
cmpsb
pop
dec
mov
notb
sbb
xchg
shrb
sbb
movsb
fsubr
pop
mov
in
in
jbe
daa
inc
lods
xor
pop
cltd
out
cltd
mov
pop
aaa
add
jle
leave
push
and
jle
push
xor
cmpsb
or
ret
call
arpl
out
pop
or
inc
pop
scas
xor
add
sub
add
lret
addb
adcb
mov
xchg
arpl
fcom
gs
rclb
mov
push
mov
and
sbb
pop
sub
inc
mov
xlat
jno
mov
into
ja
jns
mov
movsl
clc
cli
or
sub
sbb
sarb
pop
out
insb
dec
out
lahf
sub
cltd
mov
xor
data16
sub
xor
cmpsb
out
call
out
fisubrl
sbb
lcall
les
cmp
mov
dec
scas
xchg
jg
loopne
inc
insl
lret
mov
adcb
push
sbb
popa
xchg
fistpll
push
and
testb
xchg
inc
jne
pop
dec
andb
and
xchg
xchg
xchg
mov
pop
xchg
push
mov
adc
sub
mov
inc
ss
cwtl
xor
or
adc
lea
xchg
jp
mov
test
push
adc
popa
icebp
dec
in
test
mov
cwtl
or
xchg
outsl
outsl
and
mov
decb
subb
xchg
or
sub
scas
pop
xchg
insb
bound
cmp
imul
inc
and
shll
inc
fldenv
jne
fimuls
int3
xorl
js
sbb
or
mov
dec
jmp
pop
push
lock
icebp
icebp
push
js
adc
lds
sub
cwtl
dec
xchg
inc
and
push
std
imul
into
shll
fidivs
mov
mov
pop
nop
xor
xchg
pop
call
add
ss
cmpsl
push
xchg
cmp
mov
divl
in
leave
adc
rol
loop
test
jbe
jnp
jo
rclb
push
xchg
in
mov
aam
push
into
rcll
mov
or
push
out
cltd
lahf
xor
popa
inc
lcall
dec
loope
mov
mov
push
nop
in
out
ret
inc
test
sub
add
ljmp
inc
jns
inc
jg
dec
adc
inc
aas
jl
imull
test
add
cwtl
mov
subl
out
hlt
rorl
push
stos
inc
cmp
adc
push
sub
ds
add
mov
sbb
xchg
sbb
dec
and
jno
mov
cltd
std
xchg
fisubl
negb
les
subb
fisttpl
sub
jg
sub
push
pop
loope
cmpsb
movl
pop
enter
ficoml
rclb
xchg
movsl
pop
repnz
add
xchg
cmc
push
fadd
and
out
jecxz
lods
les
jecxz
mov
repnz
enter
jecxz
out
fimull
push
lahf
mov
pop
lock
fmulp
pop
or
sbb
test
jo
out
push
je
jo
cmp
ret
lahf
xor
adc
sub
add
add
stos
mov
xchg
imul
js
push
adc
jbe
andb
mov
mov
ret
loopne
mov
cltd
mov
ja
inc
outsl
mov
pop
adcl
fdivl
mov
adc
test
outsb
push
shlb
mov
pop
mov
adc
aas
push
push
xor
dec
inc
fwait
enter
out
ret
imul
inc
stc
pop
pop
pop
push
sbb
stc
mov
loope
stos
inc
sbb
pop
movsl
pop
mov
mov
mov
mov
sbbl
jle
shll
icebp
pop
imul
push
add
jne
add
jno
xor
aad
pop
xchg
sub
push
and
adc
sub
xor
mov
xchg
lods
dec
adc
push
pop
xchg
test
mov
and
jg
lock
mov
aad
stos
fldl
jb
jge
ret
stc
sti
insb
out
int3
lods
xchg
jmp
dec
icebp
push
mov
push
ljmp
xchg
jg
jb
dec
cs
push
cmp
xchg
pop
aad
out
and
test
icebp
sbb
jae
mov
push
pop
inc
sub
inc
mov
repnz
mov
sbbb
jns
out
push
stc
shr
fcmovbe
fistpll
fidivl
jno
sub
inc
ljmp
add
and
loopnew
in
dec
xchg
adcb
mov
dec
push
mov
sarl
aam
icebp
jae
stos
xchg
icebp
fmulp
push
jbe
mov
sub
add
mov
mov
push
aaa
daa
sbb
outsl
je
push
push
push
add
cmpsl
push
dec
cmpl
pop
fistpll
sbb
dec
jle
les
adc
cld
sub
and
inc
ret
ret
mov
inc
push
les
sub
ss
xchg
hlt
push
jnp
push
cmp
les
enter
dec
ret
rolb
fsts
mov
mov
fnsave
lahf
aas
and
adc
bound
push
jbe
popa
fcomi
cmp
clc
outsl
sbb
fldcw
leave
add
ret
cmp
lods
jne
push
imul
rclb
pop
jbe
icebp
inc
mov
xchg
ret
or
int
xor
les
sub
pop
cltd
adc
pop
sbb
sbb
cmc
out
xchg
clc
outsb
fisttpll
add
cmc
dec
scas
push
jp
jle
push
or
addr16
sbb
adc
jl
cs
js
aam
mov
in
and
imul
popf
stos
lgs
leave
cs
mov
xor
xchg
clc
inc
repz
cli
jle
rorl
lods
stc
cld
pushf
lret
jle
mov
ljmp
scas
dec
add
push
push
inc
out
dec
mov
xchg
daa
inc
test
ljmp
cwtl
test
fmull
out
aas
pop
loopne
sbb
test
call
rcll
pusha
xchg
mov
mov
repz
lcall
xor
popf
inc
inc
loopne
inc
xchg
fidivrs
lahf
insb
cmp
cmp
out
fs
push
pusha
gs
ds
repnz
test
adc
pop
pop
inc
shlb
imul
adc
dec
jl
imul
pop
cld
or
in
xchg
lods
inc
mov
add
fwait
outsl
inc
scas
adc
shlb
xor
mov
jg
adc
sarl
jl
sub
mov
imul
inc
data16
pusha
lods
inc
inc
cmpsl
or
mov
pop
xor
out
ret
add
sahf
and
mov
arpl
jb
xchg
cli
scas
sbb
mov
cli
xchg
mov
std
out
cmc
imull
call
jmp
stos
pop
pushf
les
pushf
and
dec
cmp
push
inc
ss
jge
movsl
push
addr16
arpl
insb
sub
pop
repz
xchg
push
add
pusha
mov
aaa
out
out
push
icebp
xchg
xorl
cmp
dec
cmp
inc
push
enter
jae
mov
mov
add
inc
push
push
xchg
sub
sarb
lods
xchg
xchg
lahf
ljmp
sub
insb
add
leave
mov
mov
outsl
inc
cltd
jle
push
inc
adc
out
mov
xchg
mov
es
jmp
jo
push
jle
add
adc
xchg
inc
out
sub
mov
les
ljmp
pop
out
sarl
repz
mov
xor
mov
ljmp
cmpsb
add
sub
xor
into
cmc
je
mov
xchg
fnclex
pop
cmp
and
xlat
xor
sbb
mov
lahf
mov
or
addr16
cmp
pop
fcomp
inc
pop
inc
mov
and
lret
inc
imul
mov
pushf
gs
repz
pop
dec
shr
inc
push
sub
jbe
mov
lret
add
xor
stc
or
ss
sbb
ds
fildl
hlt
enter
arpl
xor
int
push
mov
das
call
flds
push
clc
xor
adc
mov
stos
out
push
lock
in
mov
add
push
addr16
or
push
pusha
inc
sub
inc
lea
idivb
in
mov
ja,pn
xor
leave
fadd
push
orb
pop
dec
lods
aas
inc
stos
or
cwtl
out
push
stos
pop
xor
pop
adc
scas
sbb
test
ret
xchg
les
in
cmc
push
jge
sbb
jbe
cmp
ret
push
or
stc
out
mov
sub
inc
int3
hlt
mov
cltd
sub
push
or
pop
jae
sbb
fisubrs
jg
jecxz
sub
out
imul
jg
mov
int3
lret
lret
lds
jecxz
mov
ss
add
xchg
dec
cmp
out
xor
loope
mov
dec
call
outsb
push
test
add
push
lahf
fwait
test
out
adc
xchg
push
rolb
inc
outsl
sbb
sbb
push
test
notl
jecxz
test
lret
je
scas
mov
xchg
mov
ficoms
mov
cmpsb
push
xchg
xchg
ret
out
sub
xchg
cmp
sbb
out
aad
rcr
inc
jno
lret
or
in
cmp
jbe
out
dec
lret
mov
cs
and
dec
fs
mov
leave
lret
imul
and
xor
cmpl
ds
push
sbb
sbb
mov
mov
fldln2
inc
insl
mov
dec
rorb
fldenv
mov
xor
mov
xor
xor
popf
lcall
inc
and
adc
push
call
dec
pusha
mov
data16
push
mov
or
push
pop
sti
repz
mov
daa
les
dec
lahf
insl
lgs
pop
jmp
inc
add
and
out
shl
icebp
adc
lahf
mov
repnz
shlb
lods
xchg
out
jecxz
rcl
js
mov
dec
sbb
sub
push
sub
pop
or
negb
jle
jns
jno
xor
xor
pop
cmpl
cmp
es
mov
adc
bound
stc
cmp
mull
mov
push
xchg
mov
in
in
xchg
jbe
sub
int3
outsl
stc
fidivrs
fsubp
loope
xchg
sbb
out
jno
mov
add
daa
pop
push
push
bound
dec
add
dec
bound
roll
fstpl
test
ja
push
dec
cmp
repz
das
mov
out
gs
jns
lret
sahf
aaa
cmpsl
lcall
push
mov
sahf
dec
mov
movsl
ljmp
in
mov
pop
mov
cmp
dec
int
or
push
aas
fisubrl
cmpsb
xchg
adc
repz
push
arpl
nop
xchg
lds
mov
jp
add
ljmp
pop
rorl
lock
imul
cmpsl
call
inc
dec
ljmp
xor
pop
clc
rcrl
dec
mov
jbe
das
cmp
xor
mov
cmpl
scas
fwait
pusha
push
xor
xor
jo
or
out
push
test
jmp
dec
out
pushf
xor
mov
mov
jmp
ficomps
cmp
addb
push
inc
cmc
cmp
jns
ljmp
lds
into
mov
iret
sub
and
out
mov
imul
into
arpl
xchg
in
jnp
push
decl
inc
icebp
cs
mov
in
and
xchg
add
sbb
rcll
lods
gs
jmp
icebp
movsb
and
dec
ja
sbb
xchg
pushf
fldcw
inc
inc
push
jb
movsl
sbb
out
or
or
and
sub
call
out
mov
dec
pop
insb
dec
xchg
cs
cwtl
loope
jle
outsl
jae
inc
cmp
or
mov
icebp
outsb
sbb
jnp
lea
lods
stc
div
lock
call
and
push
les
decb
dec
mov
pop
or
scas
jne
daa
hlt
cmpsl
jne
sub
mov
mov
xor
sbb
inc
inc
movsb
mov
subb
insb
lea
scas
jg
scas
enter
punpckhdq
popf
adc
or
subb
lahf
shr
in
pop
and
addr16
in
jnp
enter
inc
sub
and
jbe
pop
push
loop
sub
dec
jp
pop
jecxz
push
inc
roll
xor
push
sbb
fcmovnu
leave
shll
data16
fwait
outsl
adc
push
xchg
repnz
mov
stos
mov
aad
jg
or
jns
cmp
sub
cmp
arpl
xchg
out
cmpsl
addr16
in
pop
in
popl
mov
cmp
inc
ss
out
cmp
loope
aad
pop
divb
or
dec
xor
jp
mov
jae
cmpsb
mov
sar
test
pop
icebp
shll
icebp
mov
icebp
out
xchg
stos
fmuls
out
bnd
aad
xor
sbb
push
pop
adc
or
pop
testl
das
bsr
lret
jnp
mov
pop
xor
loopne
jmp
cmp
xlat
pop
sar
pop
pop
ret
sub
dec
sub
jmp
sbb
jmp
loop
sbb
hlt
test
pshufw
repz
fdivr
arpl
jecxz
mov
dec
int3
test
popf
push
stc
sti
cmc
cmpsl
loopne
lcall
and
insl
xchg
mov
mov
scas
mov
and
and
dec
jo
roll
pop
mov
ds
push
ss
add
cmpsb
andb
lret
mov
push
repz
fwait
xlat
fistps
xchg
mov
cmc
mov
mov
mov
adc
dec
and
movsl
sbb
mov
cld
add
cmp
fnsave
fnstenv
add
daa
int3
movsl
shrb
rcrl
pop
inc
mov
sbbl
orb
aam
outsl
xchg
int3
pop
je
pop
jmp
ss
imul
lods
in
dec
push
sub
decb
mov
cs
fld
or
orl
adc
int
sub
outsl
mov
xchg
aaa
mov
inc
xor
push
ja
fwait
pop
mov
mov
adc
out
mov
dec
cmpsb
test
mov
mov
test
inc
sahf
mov
orb
ja
push
aas
or
mov
mov
mov
sahf
outsb
ljmp
mov
fdivrl
cmpsl
jae
cmp
test
movd
leave
jmp
adc
ret
jae
dec
mov
test
pushf
sub
int3
push
les
bound
push
outsb
sahf
mov
xchg
enter
and
push
or
dec
loop
icebp
xchg
xchg
jp
cltd
inc
das
insl
sub
out
and
jmp
or
xor
adc
scas
mov
sbbl
mov
xchg
jecxz
or
jnp
popl
xchg
outsb
jnp
movsb
xor
sbb
movsl
or
clc
insb
add
ss
mov
mov
mov
outsl
and
push
les
inc
stos
fndisi(8087
mov
popa
sub
pop
adc
and
sub
mov
movsb
mov
scas
fisubs
imul
mov
mov
cmpsb
mov
scas
ja
shlb
out
popf
jge
xchg
rorl
int3
cmpsb
data16
pop
cltd
mov
and
out
xor
jecxz
and
jne
mov
xchg
pop
inc
push
xchg
inc
es
mov
adc
xor
out
xor
mov
adc
cs
pushf
mov
cmc
cmpsl
pushf
daa
popa
mov
xchg
jp
jmp
fiaddl
mov
pop
dec
sbb
jne
aad
mov
out
xchg
sub
add
mov
xor
scas
mov
or
fimull
movsb
and
mov
sub
pop
or
mov
jae
pop
nop
aaa
loop
sub
int
pop
inc
push
dec
sub
in
lahf
in
jo
les
call
hlt
icebp
mov
mov
pushf
lock
xchg
xchg
mov
xor
pop
dec
add
bound
inc
mov
cmp
mov
sbb
cs
pop
jno
das
adc
call
xor
negb
lds
cmp
sub
cmpsl
adc
inc
mov
push
iret
out
cmpsb
in
in
mov
pop
sbb
sub
sti
xor
sti
test
fdivrl
cltd
cmp
div
int
sub
loopne
ja
and
sub
mov
push
inc
sub
lcall
add
cmp
dec
ds
jns
inc
lock
icebp
inc
inc
les
in
push
sbbb
push
mov
bound
les
cmpl
int
loopne
ds
push
iret
sbb
out
popa
jecxz
xchg
lea
mov
xor
loopne
scas
in
popa
std
add
lock
icebp
fwait
nop
cmpsb
hlt
inc
add
mov
dec
cmpsl
add
push
push
aad
sbb
xor
xlat
mov
add
fidivrl
cltd
imul
test
adc
jae
push
mov
in
xor
mov
iret
icebp
sbb
jbe
sub
fstl
lods
mov
call
xchg
dec
cmp
push
or
inc
adc
imul
sub
sub
ffreep
adc
lods
or
xchg
inc
test
and
inc
mov
sbb
in
lahf
pop
pop
xchg
into
repz
into
int3
fdivrl
testb
movsb
leave
in
ss
sbb
or
loop
in
and
mov
fistps
push
xor
add
cli
add
loopne
mov
shll
jnp
lock
or
in
test
xor
adc
fucomp
lea
jmp
cmp
stos
js
mov
or
es
mov
dec
and
and
out
test
into
aam
add
xchg
loop
mov
xchg
jno
adc
xorl
sbb
repz
into
outsb
popa
xchg
movd
sbb
pop
adc
cwtl
vpsllq
mov
mov
mov
lret
mov
or
movsl
fsubrs
rcrl
mov
ljmp
aad
pop
mov
sbb
mov
mov
inc
gs
lahf
push
lret
test
es
mov
pushf
ljmp
xchg
insl
test
push
cld
mov
pop
mov
xor
adc
mov
xchg
out
andw
imul
cmp
and
or
or
xchg
add
out
jo
pusha
jp
lret
lret
cmpsb
pop
push
dec
popf
cmc
push
arpl
ficomps
mov
xor
cs
fbstp
inc
enter
push
push
mov
xchg
ljmp
or
mov
nop
in
jns
les
ret
xchg
dec
or
aam
pop
in
mov
pushf
addr16
dec
sub
sub
hlt
push
addb
int3
mov
xchg
mov
mov
mov
xchg
loop
call
cmp
jb
and
push
push
add
sub
or
push
sub
jno
fbstp
aad
into
cwtl
mov
jle
push
jnp
cmc
sub
or
das
sti
mov
stos
mov
cltd
mov
bound
int3
push
popa
in
pop
mov
jge
jge
repz
mov
lock
test
jne
mov
mov
mov
popa
dec
xorb
sti
sbb
xchg
insl
leave
outsl
call
das
cld
cmpsl
xchg
push
mov
adc
imul
xchg
cli
imul
jb
cwtl
cli
xchg
jl
data16
dec
insb
push
inc
std
push
and
lret
test
mov
mov
insl
jp
fwait
adc
lret
fnsave
mov
xchg
cmp
sbb
push
iret
mov
ret
stos
aaa
adc
mov
mov
jbe
ret
jecxz
popa
enter
jnp
icebp
test
test
hlt
movsl
hlt
inc
xchg
insb
inc
out
imul
imul
mov
outsl
fcmovu
fimull
push
sub
push
push
push
aas
xor
sbb
ja
xorb
sub
lds
out
xchg
jge
xor
lea
aaa
mov
add
lret
faddl
xor
jle
sbb
cmp
mov
popa
mov
jmp
orb
xor
xchg
and
push
push
movsl
push
mov
jp
push
lods
lcall
inc
adc
cmp
pop
in
test
xchg
filds
repnz
out
jae
cld
push
ror
stos
xlat
rol
xchg
in
sbb
movsb
arpl
add
scas
mov
jp
cmpl
push
imul
cmc
imul
xor
add
daa
xchg
fildl
mov
or
inc
xor
adc
mov
inc
je
add
add
fimull
outsb
ror
sub
test
pusha
push
pop
loope
pop
mov
push
dec
enter
sarl
je
sub
and
xor
inc
mov
xorb
mov
lcall
or
and
les
xchg
ficompl
faddl
andl
das
or
jmp
aad
or
dec
insb
sub
stos
push
pop
jb
inc
sahf
or
fidivl
sub
xchg
cmp
xlat
js
mov
rcl
loopne
and
xlat
jmp
rol
je
shlb
jecxz
mov
push
mov
mov
in
jecxz
into
cmpsl
fisubrl
mov
sti
mov
push
mov
adc
pop
push
out
xor
push
and
ret
xchg
mov
cli
mov
dec
ds
stos
mov
and
ret
addr16
pop
in
jp
fidivrl
mov
lcall
xchg
call
mov
adcb
out
pop
lahf
sub
pop
imulb
iret
int
or
jb
xchg
inc
push
aad
aad
arpl
sbb
fsubr
cli
xchg
scas
pop
xor
sbb
jle
or
movsb
enter
outsb
adc
push
ret
ret
sarb
push
mov
mov
cmp
push
sub
cli
outsl
imul
xchg
leave
les
adc
and
xchg
pushf
rorl
xchg
test
lods
pop
stos
in
rcll
in
lahf
push
push
dec
push
pop
and
popa
and
leave
scas
ja
mov
imul
jp
ds
mov
pop
jno
jnp
ror
add
ljmp
mov
sub
arpl
pop
js
mov
adc
sub
xlat
jne
lods
xor
aam
in
xlat
sbb
jb
pop
add
xchg
sti
pop
idiv
add
insb
xchg
xchg
jbe
leave
add
iret
xlat
lahf
call
and
sahf
or
sub
cmp
stos
push
jl
call
ss
loop
push
push
das
xorl
ret
and
sbb
push
push
fistl
scas
daa
in
aas
aam
fcomps
or
xchg
inc
jl
in
outsb
cmc
ljmp
mov
jge
cmpl
pop
sbb
push
ljmp
pop
sahf
fcmovu
mov
icebp
or
ret
mov
adc
out
test
pop
jo
xchg
rcl
je
and
cld
sub
insb
or
or
or
and
iret
test
out
sbb
insl
sbb
inc
jnp
jns
push
and
orb
and
or
test
mov
xor
fs
lea
insl
mov
sub
cmp
xor
jo
push
push
test
inc
mov
test
pusha
pusha
in
mov
filds
scas
adc
arpl
sarl
jge
sbb
push
pusha
push
jg
jns
xor
xchg
enter
lcall
movsb
xchg
sbb
pop
enter
enter
push
xchg
jbe
push
cltd
lcall
pop
mov
add
mov
mov
adc
cltd
test
mov
fdivl
pop
add
mov
in
xchg
outsb
sarl
mov
les
xor
lock
sub
mov
stos
stos
sub
or
push
or
cmp
dec
pop
mov
shrb
xchg
inc
sub
shll
sub
push
lahf
addr16
cs
js
jecxz
into
scas
sbb
sbbl
pop
push
or
inc
in
rcr
shlb
push
mov
pop
inc
insb
cmp
fwait
sub
jae
stos
imul
xchg
test
movsl
pop
movsb
cmpsl
lfs
add
mov
cmp
stc
mov
in
icebp
add
hlt
inc
and
repnz
std
lods
mov
mov
aad
aad
or
xor
jnp
andw
xorb
jae
in
push
cmpsl
mov
push
sub
or
iret
dec
lds
sarl
adc
xchg
loopne
push
xchg
lret
mov
cltd
pop
dec
xchg
mov
fdivr
cs
pusha
into
clc
stos
test
mov
or
or
xchg
or
mov
adc
mov
fstps
xor
jmp
lcall
clc
mov
cmc
xchg
push
adc
or
mov
jb
inc
sahf
addb
and
out
inc
scas
cmp
mov
shl
pop
test
and
popf
test
xchg
mov
pushf
icebp
ret
movsb
pushl
ror
rolb
bound
add
jl
icebp
pop
add
shlb
push
sub
jb
mov
lret
inc
sbb
add
mov
iret
fcomip
mov
lock
dec
pop
pushf
xor
in
xor
xor
mov
fidivs
add
stos
mov
xor
inc
pop
push
jp
pop
cmp
sti
sub
mov
jg
cmp
aas
jmp
sub
pop
inc
and
xor
pushf
sub
jle
sti
inc
jo
mov
cmp
xor
and
sbb
jbe
push
push
mov
addb
lock
loop
xchg
jge
sti
dec
pop
negl
xchg
xchg
repz
mov
add
lcall
mov
cmp
push
adc
add
inc
fnsave
mov
repnz
ret
xchg
mov
mov
dec
jmp
adc
push
adc
or
loop
mov
int3
fisubl
test
std
xchg
imul
dec
jmp
inc
mov
sbb
cltd
and
inc
fisubs
and
cmp
or
packsswb
fisttpl
scas
popf
nop
cmpb
ds
sub
adc
sub
jge
or
mov
pop
fs
popf
cmp
lods
xchg
adc
shll
jl
inc
movsb
and
xchg
add
enter
mov
fidivl
int3
outsb
int3
ficoml
int3
mov
xchg
add
pop
cli
rorl
xchg
int3
pop
and
seta
inc
mov
test
cli
adcl
cmpsl
loopne
adc
je
mov
ret
in
and
or
push
clc
lea
mov
adc
scas
stos
fs
dec
aam
inc
bound
xor
push
dec
sub
xchg
jl
enter
lcall
lods
add
insb
push
loope
nop
call
xchg
shlb
pop
sub
sarl
adc
push
cmpsb
mov
mov
sbb
jbe
cwtl
mov
scas
mov
imul
push
mov
mov
add
aaa
gs
jae
inc
test
lods
push
fsubl
mov
dec
pushf
sub
movsl
fnstcw
clc
add
fildll
jne
lret
arpl
imul
pop
add
mov
enter
jecxz
rorl
out
mov
loopne
or
das
jnp
adc
xchg
xchg
lcall
xchg
jle
filds
es
xchg
push
rcl
or
hlt
inc
lret
jns
pop
mov
pop
sbb
sub
in
mov
xor
push
lahf
std
ret
push
ljmp
out
jg
cltd
xor
ja
dec
ficoms
sub
mov
sub
rclb
xchg
push
dec
aas
or
lds
inc
jbe
cmp
les
test
lds
inc
push
dec
cmp
mov
inc
mov
add
push
jg
xchg
add
cwtl
jns
rcl
popf
loope
cmp
shll
inc
lret
dec
lret
fmuls
mov
sub
xlat
fsubs
lret
cmp
xchg
pop
inc
shrl
add
pop
je
jbe
and
call
jno
mov
mov
mov
push
push
aas
pop
idivl
sarl
xor
mov
fbld
xor
sub
sarl
fdivl
mov
lods
test
pop
fstl
xchg
mov
xchg
arpl
inc
inc
sahf
xorps
loopne
dec
jecxz
adc
ja
lcall
decb
aad
pop
repnz
daa
add
sub
repnz
popf
xchg
test
cmp
movb
xor
push
lea
and
lret
and
push
cmp
push
out
xchg
cwtl
lret
ljmp
jo
std
cmp
mov
cmpsl
jge
nop
sub
push
cmp
adc
loopne
stos
lahf
push
test
adc
or
in
mov
iret
sahf
push
test
adc
pop
rorb
movsb
out
jg
xchg
popf
sub
insb
shrl
cmp
cli
int3
in
xchg
ljmp
pop
ljmp
inc
dec
inc
adc
call
dec
sbb
add
test
test
fistpll
icebp
xchg
imulb
and
sub
or
stc
les
lods
sub
mov
cmp
jl
sub
or
movsl
or
pop
xchg
mov
cmpsl
pop
pop
je
fnstenv
divl
jae
sti
pusha
out
add
cltd
inc
xchg
cltd
dec
icebp
xor
dec
jge
dec
jb
es
sub
js
idivb
pop
cwtl
call
loope
imul
jp
lret
mov
mov
imul
dec
adc
aas
mov
inc
sub
inc
negl
cwtl
out
iret
xchg
fucomp
mov
aad
or
jae
jbe
adc
push
adc
dec
xlat
cmc
movsb
adc
xchg
or
lods
push
and
aas
cld
mov
stos
jae
daa
mov
ficompl
sbb
out
pop
sti
pop
jmp
jne
aas
cs
push
push
xor
add
lcall
imul
mov
mov
cmp
sahf
int3
inc
cmp
sbb
xchg
test
not
mov
push
xor
adc
cmpl
lock
in
je
fmull
scas
mov
mov
insl
sarl
inc
lret
mull
jecxz
repnz
ljmp
lea
movsb
cmp
lret
out
shrb
lods
aam
mov
push
cmpsl
setno
pslld
mov
mov
lea
xchg
mov
push
clc
xchg
int
cmp
adc
daa
push
mov
xchg
iret
and
lods
les
lahf
mov
mov
sbb
push
pop
cmp
push
add
push
rolb
rcrb
mov
adc
ret
enter
push
call
ret
aam
decb
ss
inc
xor
pop
and
nop
fldenv
out
test
rorl
adc
ds
inc
imulb
pop
sub
sahf
sbb
mov
or
jo
cmp
es
sub
pop
fsubrs
scas
mov
fwait
mov
fs
loope
sarb
mov
andb
sub
fsub
inc
aaa
push
hlt
pop
adc
xor
adcb
lret
adc
adc
sub
movsl
add
stos
sbb
mov
cmp
adc
iret
test
lods
out
mov
push
push
dec
sub
xchg
ljmp
mov
shl
adc
lds
xorb
xchg
and
pop
push
jae
out
data16
call
out
add
jl
xchg
push
in
mov
movsb
cmpsb
int
mov
jnp
cmp
add
out
lret
mov
dec
mov
add
xor
sahf
std
cltd
pusha
lock
ret
mov
sub
shr
push
inc
cli
lds
lcall
rcl
lret
insl
xor
and
cwtl
add
cwtl
loopne
mov
mov
cmpl
inc
iret
int3
push
mov
cmp
inc
mov
scas
push
loop
mov
and
lea
pop
cmp
test
inc
ret
mov
mov
adc
push
clc
pop
repz
rol
fsubrl
mov
ficomps
push
sbb
mov
jbe
and
pop
bound
mov
loop
cmp
sub
lret
push
and
mov
mov
inc
push
and
mov
std
pop
and
jmp
imul
mov
mov
scas
mov
aas
xor
dec
sbb
ja
lea
mov
xchg
push
rorl
test
dec
jne
pop
adc
xchg
clc
inc
lcall
clc
mov
xlat
in
loope
jns
test
jecxz
test
jbe
in
push
fsts
movl
icebp
jp
xor
jp
sti
clc
inc
movsl
out
pop
mov
mov
jle
and
jge
jge
loop
and
pop
adc
inc
hlt
ret
ret
in
ja
cmp
mov
scas
mov
xchg
insb
sub
sub
loopne
pop
fimull
adc
ds
and
dec
pop
pop
push
ja
lods
adc
mov
mov
and
lock
jbe
popa
pushf
lds
pop
ljmp
sahf
pop
pop
sub
subl
scas
imul
xlat
test
cmp
lea
mov
repnz
cld
loopne
dec
pushf
mov
inc
jno
ss
insb
jnp
pop
sahf
dec
clc
les
mov
stos
ss
mov
leave
mov
stos
out
sti
xchg
rolb
hlt
inc
jecxz
das
mov
addr16
fcmovnbe
xchg
out
xchg
mov
cmpsl
lcall
repnz
pop
adc
or
pop
inc
cmpl
add
testl
pop
stc
arpl
jp
pop
pop
adc
popa
and
dec
adc
sub
jns
mov
and
jecxz
sahf
pop
add
cmc
cmpsb
xor
or
fwait
pop
mov
cmp
flds
imulb
xchg
aad
cmpsl
ljmp
mov
je
les
or
push
mov
cmp
jne
xchg
push
mov
pop
pop
stc
add
fnstenv
mov
dec
mov
push
jmp
cmp
pop
mov
pop
sbb
clc
mov
xchg
mov
test
and
bnd
je
sbb
xchg
inc
push
add
xchg
sbb
insl
xor
lcall
adc
mov
jnp
jl
add
cs
stos
lods
stos
cmpb
rclb
pop
fs
fidivs
fidivs
sti
jmp
mov
das
lahf
xchg
hlt
aam
add
cmpb
gs
je
adc
adc
mov
fnstenv
jns
cmp
lret
jne
xor
lock
cmp
cmp
insl
add
jo
enter
in
in
add
incb
sub
sbb
aas
push
icebp
dec
push
icebp
test
leave
push
jmp
leave
std
rcrb
bound
pop
out
mov
fldenv
inc
sarl
inc
pop
in
mov
cmp
xor
or
lahf
icebp
adc
cmp
adc
sbb
scas
sbb
in
leave
or
subl
aaa
pop
test
sbb
push
jecxz
cmpsl
leave
cmpsb
in
mov
sbb
adc
mov
mov
daa
arpl
fisubl
adc
sub
lahf
or
lret
pop
mov
add
pushf
mov
dec
pop
add
clc
dec
dec
out
mov
xchg
mov
dec
rcrl
je
sub
push
push
push
cmp
out
inc
test
mov
xor
add
jge
xchg
or
fldcw
sbb
xor
and
push
cmp
bound
add
cltd
lcall
icebp
inc
scas
mov
movsb
dec
shl
jmp
lock
fnsetpm(287
xor
xchg
pop
into
arpl
xchg
push
xchg
jb
mov
pushl
push
inc
fistps
shl
dec
icebp
lret
int
movsl
jmp
pop
loop
mov
push
push
aaa
pop
imul
pop
mov
push
xchg
enter
and
les
xchg
add
pop
ljmp
popa
imul
add
lahf
xor
cltd
fbstp
movsb
iret
scas
stc
jge
out
push
sub
or
enter
bound
mov
imul
sub
loope
jno
daa
jl
add
lcall
jns
pop
jp
xchg
into
outsb
mov
outsb
sbb
mov
addr16
addr16
sub
rcr
fldz
fiaddl
fdivp
push
in
les
int
dec
sub
inc
sub
pop
xor
pop
sahf
test
mov
xlat
cmp
repz
xlat
pop
rcl
movsl
mov
rcr
mov
mov
cmpsl
xchg
fsubl
repnz
sub
mov
call
in
fidivrl
mov
int3
iret
mov
test
adc
jns
out
xor
out
add
add
add
rcrb
ret
inc
lods
push
dec
jp
arpl
das
xchg
popa
and
and
pop
mov
jp
and
cmpsb
pop
xchg
ret
xchg
negb
aam
outsl
mov
mov
pop
nop
or
leave
jne
xor
inc
daa
repnz
aad
pop
aad
sbb
pushf
ljmp
pop
addr16
orl
inc
adc
stc
sub
jns
xchg
arpl
jg
mov
outsl
mov
sbb
pop
sub
lret
hlt
dec
lret
xor
adcb
lods
fs
push
adcb
hlt
roll
mov
xchg
pop
imul
and
cmp
fnstcw
dec
sbb
aad
fs
push
jp
jecxz
pop
jnp
pop
jno
ja
inc
or
pop
iret
fcomip
ljmp
lea
cmp
rcll
adc
int
lahf
pop
cs
xchg
mov
scas
jne
cmp
pop
sbb
stos
cmp
sti
shl
test
xchg
pushf
mov
mov
daa
mov
dec
daa
imul
ljmp
jecxz
or
mov
movsl
in
xchg
pop
or
push
es
push
and
loop
xchg
es
andb
mov
push
mov
adc
scas
mov
les
les
loopne
orl
xor
sahf
xor
or
mov
cmpsl
addr16
or
or
cmp
jbe
inc
xchg
popa
icebp
repz
test
or
hlt
insb
mov
inc
insl
insb
mov
mov
loop
and
fwait
loop
hlt
std
outsb
ficoml
fimull
loopne
or
arpl
rolb
jne
inc
jne
xchg
nop
jmp
loope
push
lods
push
jb
icebp
ror
sbb
or
inc
ret
ret
fstp
les
test
pop
daa
mov
iret
jbe
sbb
sub
sub
and
out
mov
inc
stos
inc
pop
stos
xor
dec
fidivs
mov
xor
ss
icebp
xor
dec
pusha
push
mov
divb
mov
add
add
lahf
test
rol
test
cmc
ret
sbb
hlt
xor
arpl
sub
mov
jp
rclb
shll
adc
or
jae
adc
adc
sub
xchg
enter
dec
shl
dec
ja
push
loop
xchg
loop
mov
cld
inc
sbb
dec
inc
xor
inc
fidivrl
fimull
sub
mov
sub
inc
jns
enter
jecxz,pt
in
sbb
imul
cld
adc
test
mov
cmp
push
jmp
pusha
push
jp
adc
outsb
sbb
mov
addr16
xor
int3
rorb
in
fiaddl
repnz
push
stc
and
scas
and
scas
dec
loope
dec
sub
sub
addr16
sub
pop
inc
rolb
mov
mov
xlat
cmp
repnz
jmp
rcl
fcmovnbe
movsl
shr
movsl
fsubp
rcr
mov
xchg
shr
shlb
ret
mov
repnz
cld
mov
jecxz
sar
fidivl
loopne
mov
cmpsl
pop
adc
js
out
das
out
push
add
add
add
out
ret
inc
rclb
popa
inc
xchg
popa
and
and
sbb
jp
xor
int
pop
cmpsl
roll
lcall
outsl
call
mov
pop
movsb
or
fnsave
inc
push
inc
cmp
inc
aad
pop
aad
sub
pushf
ljmp
pop
sarl
mov
mov
dec
cmpsl
sub
jo
adc
or
fdivrl
mov
jle
mov
outsb
mov
xor
inc
sub
push
dec
sub
addb
adcb
stos
fs
addr16
fdivrs
scas
fcom
imul
test
xchg
pop
jge
pop
push
cmpsl
imul
pop
xor
pusha
out
pusha
xor
jp
dec
sub
dec
aad
arpl
adc
jp
loop
pop
xchg
pop
jno
jbe
inc
and
filds
fbld
mov
inc
cmp
out
mov
sti
int3
adc
iret
mov
jne
dec
nop
in
das
add
sbb
mov
lock
test
sbb
int3
mov
xchg
dec
dec
lods
dec
daa
inc
push
add
inc
add
aad
out
jecxz
or
mov
movsb
in
xchg
xor
xchg
add
push
push
and
idivb
xchg
es
cmpb
andb
mov
adc
scas
mov
les
les
fistps
pop
js
xor
popf
xor
sbb
out
mov
or
and
mov
jbe
fnsave
push
xchg
popa
icebp
pop
jl
test
or
inc
adc
inc
movb
insb
imul
xor
and
lcall
imul
arpl
out
and
jmp
jmp
cmc
add
lods
icebp
aam
icebp
sbb
or
inc
insl
xor
pop
ret
les
test
push
fildll
cmp
ds
pop
sbb
mov
sub
out
pushf
add
push
pop
stos
xor
dec
fidivs
lahf
clc
xor
dec
dec
icebp
xor
pusha
push
pushf
jp
test
idivb
pop
aad
add
aad
test
sbb
test
sahf
test
out
test
or
sbb
or
arpl
jle,pt
mov
push
mov
movsb
jp
in
and
aam
shll
sub
divb
adc
mov
arpl
sub
xchg
gs
enter
dec
in
dec
ja
imul
inc
das
pop
dec
inc
dec
bound
xchg
pop
fimull
and
adc
sub
push
js
enter
push
loop
in
sbb
imul
cld
and
push
test
lahf
inc
cmp
pop
cmp
jle
jmp
je
jp
es
into
outsb
mov
outsb
sbb
mov
cmpsb
xor
int3
push
or
fiaddl
in
fiaddl
push
cmc
push
les
fisubrs
sub
data16
push
inc
movsl
pop
pop
mov
sahf
mov
mov
xlat
cmp
icebp
cmp
call
shlb
shlb
idivl
xchg
rolb
shlb
rorl
sub
mov
adc
jecxz
in
fidivl
hlt
int
pop
int3
cmpsb
pop
adc
ja
out
cs
sub
out
sti
add
cli
sbb
cli
inc
aam
dec
jp
bound
push
xchg
popa
and
cmp
ds
mov
jp
dec
xchg
mov
test
cmpsb
pop
mov
and
lcall
outsl
mov
mov
pop
mov
jae
pop
imul
aad
pop
aad
inc
out
pushf
ljmp
pop
addr16
mov
mov
pusha
cmpsb
sub
test
and
jns
fdivrl
mov
arpl
jge
mov
insl
mov
inc
lret
mov
inc
sub
sbbb
adcb
stos
fs
jnp
xchg
fmuls
fcom
jge
roll
sahf
lods
xchg
push
xchg
pop
xchg
mov
push
mov
xor
pusha
sti
cmp
add
dec
inc
dec
dec
aad
arpl
daa
out
jp
loope
pop
mov
jne
inc
xor
pop
iret
fistps
jmp
mov
cmp
inc
cmp
sti
push
mov
bswap
adc
jecxz
xchg
jne
lods
jne
bound
push
sbb
shlb
sti
call
adc
sbb
loopne
popf
xchg
dec
mov
dec
bound
add
inc
add
jmp
or
mov
mov
xchg
add
sbb
and
fisubrs
andb
mov
adc
lods
mov
les
les
ficomps
jae
xorl
xor
xor
mov
or
xor
or
fdivl
push
jnp
test
sahf
hlt
inc
es
inc
xchg
pusha
insb
out
insb
imul
orb
and
lcall
jge
fimull
or
or
and
and
cli
ds
jmp
mov
push
or
lods
icebp
call
or
inc
xorl
ret
fcmovnu
les
les
fisubrs
dec
xchg
divl
in
sbb
xor
sub
inc
out
mov
aas
stos
push
stos
xor
les
fisubrs
divl
icebp
pop
dec
icebp
xor
dec
pusha
push
mov
push
neg
das
idivb
jo
mov
test
sbb
cli
shrl
sbb
loopne
stc
arpl
push
jge
mov
adc
jp
clc
xchg
and
call
ljmp
or
divb
pcmpeqb
pop
lea
arpl
sub
jns
xchg
enter
dec
stc
loope
ja
push
loop
fsincos
cld
inc
inc
push
dec
inc
pop
popa
inc
fisubl
repz
aaa
movsb
sub
out
adc
sub
push
push
enter
data16
in
sbb
imul
cmp
test
sahf
inc
cmp
pop
cmp
xchg
push
jmp
mov
into
cmp
outsb
sbb
mov
addr16
or
mov
rcr
adc
hlt
push
les
and
scas
dec
sub
sub
push
movsl
pop
outsb
mov
sahf
mov
mov
xlat
fmul
xlat
cmp
lock
adc
shlb
shlb
or
xchg
rclb
cmpsl
pmaddwd
pslld
sub
mov
and
enter
jecxz
clc
cld
fidivl
or
mov
movsl
pop
adc
jbe
out
sub
out
sldt
push
sbb
cli
inc
call
popa
jp
imul
mov
inc
mov
jp
pop
xchg
mov
cwtl
lret
cmpsb
pop
iret
mov
negb
adc
out
xchg
out
pop
int3
or
add
push
inc
aad
pop
aad
push
out
pushf
ljmp
pop
addr16
jbe
mov
mov
je
sub
cwtl
inc
adc
xor
fstpt
lret
xchg
arpl
jl
mov
insb
mov
pop
leave
inc
sub
inc
inc
sub
subb
adcb
test
xchg
fsubs
fcom
xchg
icebp
roll
popf
lods
xchg
jle
xchg
pop
movsl
mov
push
iret
imul
pusha
pusha
xor
dec
dec
aad
aad
cmp
jp
loopne
pop
mov
pop
jno
je
inc
dec
mov
pop
pop
iret
fildll
fbld
leave
mov
cmp
andnps
lahf
cwtl
sub
jne
lods
jne
jbe
in
push
incb
sbb
out
sti
cld
out
sti
test
sbb
hlt
mov
xchg
dec
jbe
dec
daa
push
daa
add
inc
add
std
sbb
jecxz
pop
in
ret
cld
mov
mov
in
xchg
pop
add
add
sbb
and
push
ds
repnz
andb
mov
dec
mov
adc
lods
mov
les
les
fstpl
xchg
xor
pushf
xor
inc
dec
out
mov
pop
mov
movsb
addr16
dec
sub
and
mov
jbe
jl
popa
icebp
das
jp
test
or
inc
cmp
insb
cli
fisubrs
test
push
test
outsb
xor
outsb
ficoml
repz
and
mov
and
jne
cmp
jmp
sbb
outsl
lods
icebp
cld
push
or
inc
xchg
xor
pop
ret
fcmovu
les
les
arpl
ds
push
sbb
fidivl
sub
out
aas
stos
jle
stos
xor
ret
xor
inc
dec
fidivs
divb
icebp
jb
icebp
xor
or
orl
js
div
idivb
test
mov
test
test
push
shrl
xor
loopne
mov
jl
mov
adc
jp
mov
and
cld
cmp
mov
push
mov
divb
push
je
jb
adc
sub
lea
enter
dec
or
addr16
lds
cld
inc
push
adc
inc
fidivrl
repnz
dec
mov
adc
sub
jle
push
enter
jp
in
pop
in
push
test
test
adc
inc
arpl
cmp
cmpsb
push
jmp
pushf
add
dec
xchg
into
outsb
outsb
sbb
xchg
addr16
xor
jns
int3
rol
in
fisubrl
jmp
push
cs
les
fsubrl
sub
sub
jle
movsl
pop
cmpb
mov
mov
xlat
lock
lock
daa
push
rcl
fcom
movsl
push
jmp
ficomps
mov
xchg
shrb
shlb
rorb
out
daa
repnz
cmp
jecxz
or
fidivl
sbb
mov
movsb
pop
adc
jne
out
sub
out
out
and
add
and
cli
ds
inc
cld
adc
xor
popa
jg
popa
and
cmp
jp
push
jp
jno
mov
lods
lret
jecxz
pop
not
pop
negb
and
outsl
mov
xchg
pop
loopne
pop
dec
sbb
andb
ja
inc
aad
pop
aad
push
mov
pop
rolb
addr16
jg
sub
inc
adc
dec
sub
jns
fidivrl
fists
push
mov
imul
leave
pop
sub
lret
inc
inc
lret
addb
nop
loopne
nop
fs
test
xchg
mov
lods
fcom
movsl
lock
pushf
lods
xchg
xchg
les
push
jecxz
sbb
pop
xor
pusha
and
pusha
xor
js
dec
push
popa
aad
dec
in
jp
fistpll
lret
xchg
pop
jno
jae
inc
pop
mov
jb
iret
filds
fbld
fnstsw
cmp
and
aaa
lret
lods
sub
jne
stos
jne
mov
push
sbb
cli
xor
sti
adc
sti
test
adc
mov
mov
ja
xchg
dec
mov
daa
add
aas
add
adc
out
jecxz
push
in
xlat
sti
mov
lret
xchg
outsl
add
add
stos
add
sbb
out
and
es
lods
xorb
add
mov
adc
stos
mov
les
fcompl
fwait
jne
xor
fwait
xor
pop
dec
out
mov
pop
mov
mov
out
mov
mov
fidivl
nop
mov
inc
jns
test
pushf
hlt
inc
dec
or
mov
fisubrs
test
xor
loop
inc
cli
outsb
fisubl
repnz
and
lret
and
jecxz
jne
loop
jmp
xor
push
lods
cmpsb
outsb
lods
icebp
adc
icebp
sbb
sbb
inc
ret
ret
les
les
fsubrl
ja
pop
ds
jae
sbb
sbb
out
xor
sub
out
inc
out
fdivr
aas
stos
xchg
push
stos
xor
ret
push
dec
fidivs
fcomi
xor
xchg
xor
or
xchg
dec
pusha
push
fdivs
testb
mov
cwtl
sarb
test
test
and
test
inc
rcrb
inc
xor
arpl
jnp
mov
adc
and
xchg
and
adc
shll
gs
divb
or
adc
sub
mov
stos
enter
dec
ja
data16
cld
inc
imul
test
fcmove
push
fimull
pop
mov
adc
daa
pop
push
xchg
jne
enter
decb
push
in
jl
imul
cmp
out
test
pushf
inc
cmp
pop
cmp
mov
add
bound
outsb
sbb
sbb
xor
lea
rcr
jecxz
fidivrl
repnz
les
les
xor
dec
sub
sub
xchg
inc
movsl
pop
xchg
mov
sahf
mov
mov
xlat
add
xlat
cmp
out
cmp
cmp
lahf
xlat
shlb
xor
xchg
sarb
cmpsl
nopl
repnz
dec
mov
jecxz
and
fidivl
xor
mov
movsb
pop
adc
je
out
sub
out
std
out
aaa
incb
ret
ret
fsqrt
inc
adc
dec
jp
pop
jp
xchg
xchg
popa
and
js
mov
imul
mov
xchg
mov
ror
pop
idivl
negb
cmp
mov
scas
int3
out
pop
hlt
push
pop
dec
sub
data16
inc
mov
inc
aad
pop
aad
jl
pushf
ljmp
pop
and
mov
mov
adc
pop
sub
jns
fnstcw
pause
arpl
jp
mov
push
inc
add
sub
lret
pop
inc
lret
adcb
nop
hlt
xchg
nop
fs
fs
mov
xchg
fmuls
out
roll
fwait
lods
xchg
cmpsb
ret
xchg
pop
int
pop
push
mull
and
and
aaa
pusha
xor
dec
dec
aad
pusha
aad
arpl
jp
fidivrs
fists
jno
jno
inc
iret
xchg
fists
mov
icebp
mov
cmp
aaa
push
mov
dec
leave
adc
pop
mov
jne
stos
jne
sahf
mov
push
jg
push
sbb
push
xor
sti
and
sti
test
adc
mov
mov
xchg
dec
sahf
test
daa
add
add
and
push
in
jmp
mov
fisubs
xchg
add
test
push
and
inc
cmp
sbb
andb
mov
adc
stos
mov
les
fistpl
scas
je
xor
lcall
sbb
mov
mov
out
mov
rcl
ret
fnstenv
movsb
lea
push
js
test
test
rcrb
inc
rcrl
insb
and
insb
imul
and
xchg
loop
pop
stc
outsb
fidivrl
icebp
or
and
fidivrs
and
idivl
jne
testb
lods
mov
icebp
sbb
sbb
inc
ret
ret
les
fldt
mov
sbb
push
sbb
add
sub
fsubrl
out
inc
out
in
cld
aas
stos
cmpsb
push
stos
xor
shll
imul
icebp
lcall
pusha
stos
dec
pusha
push
in
jbe
negb
sub
mov
add
add
lcall
pop
mov
loopne
leave
mulb
mov
mov
adc
and
and
and
shll
jns
in
cmc
inc
add
jae
or
adc
sub
mov
xchg
enter
dec
xor
gs
in
loop
adc
adc
cwtl
pop
inc
push
fimull
jae
sub
and
adc
es
push
cmpsb
je
enter
mov
adc
imul
cmp
sti
adc
cmp
pop
cmp
into
dec
jmp
les
jp
jbe
into
outsb
add
outsb
sbb
sbb
xor
mov
loop
ficoml
fiaddl
push
icebp
push
les
les
inc
dec
sub
arpl
sub
cmpsb
inc
movsl
pop
stos
mov
sahf
mov
mov
xlat
sbb
xlat
cmp
out
cmp
dec
push
rcl
shlb
inc
mov
xchg
rclb
cmpsl
or
cmpsl
rdtsc
mov
repnz
pusha
mov
jecxz
xor
fidivl
inc
lret
sbb
pop
adc
jae
out
sub
out
cld
out
dec
std
add
dec
sbb
cli
data16
inc
and
dec
jp
pop
jp
cmpsl
nop
popa
and
ja
mov
jg
jp,pt
push
jp
cltd
nop
mov
aam
cmpsb
pop
or
negb
dec
mov
mov
test
pop
or
pop
dec
inc
jo
stos
gs
inc
lahf
in
inc
aad
pop
aad
nop
jmp
ljmp
pop
addr16
jge
sub
inc
adc
jno
ret
fdivrs
pop
nop
arpl
jns
mov
imul
sub
insb
inc
lret
subb
nop
or
fs
lret
jp
fcomps
out
roll
fwait
lods
xchg
mov
lods
pop
push
or
and
ss
xor
xor
dec
dec
aad
pop
aad
ja
jp
fidivrs
pause
pop
jno
jno
inc
test
iret
fildll
fbld
add
cmp
mov
pop
enter
sub
jne
test
in
xchg
sti
push
sbb
and
sti
cmp
sti
test
adc
mov
lahf
popf
xchg
lahf
mov
dec
mov
dec
daa
cmpsb
gs
add
add
cmp
out
jecxz
add
mov
repnz
in
xchg
xchg
add
push
sahf
sbb
push
and
cmp
pushf
cmp
mov
xchg
adc
stos
mov
les
ficompl
ret
jae
xor
cltd
xor
orb
xor
addr16
test
mov
out
ret
fdivs
mov
ja
test
test
in
hlt
inc
jbe
inc
in
insb
fsubrl
subb
addl
fcmove
test
or
or
and
bnd
and
or
jne
or
push
lods
into
insb
lods
icebp
cmp
icebp
sbb
cs
ret
ret
fcomp
les
fisubrl
lahf
sbbl
jno
sbb
sbb
push
das
sub
fldt
out
inc
out
add
aas
stos
mov
shll
jge
fidivs
add
xor
scas
inc
icebp
xor
pop
xor
mov
jbe
imulb
idivb
rcl
add
pop
test
dec
mov
sbb
insb
xor
arpl
cmc
arpl
mov
adc
and
and
cmp
shll
lea
divb
or
mov
arpl
sub
leave
js
enter
dec
dec
fimuls
jl
ja
add
cld
inc
xchg
adc
lods
pop
inc
push
fimull
xchg
adc
and
push
enter
mov
in
adc
imul
test
adc
cmp
push
cmp
loop
jmp
fadds
jp
mov
outsb
sbb
sbb
xor
mov
int3
rolb
loop
fisubl
fiaddl
push
push
les
les
pop
lds
bound
sub
mov
mov
sahf
mov
mov
xlat
sub
xlat
cmp
in
cmp
arpl
rol
aad
movsl
dec
call
ficoms
lods
shlb
mov
repnz
je
enter
jecxz
dec
stc
fidivl
pop
leave
mov
mov
adc
fsubrs
out
mov
out
pop
cld
add
pop
sbb
cli
jp
cli
inc
cmp
dec
jp
pop
jp
mov
jbe
mov
xchg
mov
jp
push
jp
lods
mov
call
mov
negb
pusha
mov
mov
test
pop
sbb
pop
dec
push
outsl
dec
mov
jmp
aad
pop
aad
movsb
ljmp
cld
lcall
dec
jae
mov
mov
adc
test
ret
xlat
jns
sbb
push
mov
push
inc
sub
xchg
inc
sub
cmpb
nop
sbb
nop
shlb
xchg
fdivs
in
roll
lcall
cmc
lods
pop
push
pop
sbb
xchg
and
xor
xor
dec
dec
aad
pop
aad
mov
jp
fnstsw
pop
nop
pop
jno
jo
inc
cltd
xchg
scas
push
iret
fistpll
mov
sbb
cmp
pop
push
mov
jae
adc
inc
mov
jne
test
in
mov
push
cmpsl
cli
push
sbb
ss
sti
dec
jmp
test
xchg
sub
mov
mov
xchg
dec
cmpsl
dec
daa
mov
cmp
out
dec
sbb
jecxz
add
mov
stc
mov
push
lahf
in
xchg
stos
add
push
mov
push
and
outsb
cmp
mov
andb
mov
adc
sub
stos
int
int
les
fstps
xlat
jb
xor
cwtl
xor
xchg
dec
out
mov
addr16
mov
out
mov
cli
rol
jbe
xlat
jbe
int3
mov
jg
icebp
test
test
clc
cltd
hlt
inc
mov
inc
stc
pop
insb
dec
fldt
subl
insb
xchg
loop
xor
sbb
insb
out
or
pop
arpl
pop
cmp
jmp
mov
push
insl
add
loop
lods
icebp
dec
ret
mov
sub
ret
xlat
fcmovnb
mov
les
fldcw
mov
pop
ds
jo
sbb
sbb
sub
sub
sub
mov
out
adc
aas
stos
into
push
stos
xor
shlb
xchg
inc
fidivs
pop
repz
ret
xor
xor
rorl
push
adc
push
testb
mov
aam
mov
test
cwtl
test
pop
mov
sbb
subb
arpl
hlt
arpl
mov
cld
mov
adc
and
rorl
mov
mov
add
jae
or
mov
arpl
daa
arpl
test
dec
ja
arpl
adc
idiv
inc
cmpsl
adc
rcrb
push
fimull
fwait
lahf
sub
dec
cmp
pop
push
into
jb
enter
dec
fdivr
in
adc
imul
cld
test
adc
cmp
push
cmp
testb
jns
sahf
mov
outsb
sub
outsb
sbb
sbb
das
addr16
leave
jnp
rclb
out
push
jle
push
les
fsubrs
sub
sub
into
inc
movsl
pop
sarb
sahf
mov
mov
xlat
inc
push
in
cmp
ja
rcl
aam
movsl
pop
out
fisubrs
ficoms
jns
shlb
mov
repnz
mov
jecxz
pop
clc
fidivl
insb
enter
mov
adc
in
sub
out
cli
out
jae
add
jb
ret
cli
inc
dec
cmovs
pop
jp
iret
mov
add
mov
cmpsl
mov
jp
push
jp
rorl
pop
xor
negb
je
outsl
mov
test
pop
xor
dec
imul
inc
ljmp
mov
mov
pop
adc
pop
addr16
jb
mov
jnp
sub
mov
adc
cltd
es
jns
das
mov
in
push
mov
addr16
mov
push
sub
lret
xchg
inc
lret
adcb
nop
fs
fs
repz
fadd
test
shl
in
roll
cltd
lods
xchg
loop
xchg
pop
or
and
xor
xor
xor
inc
dec
aad
pop
aad
lahf
jmp
jp
sbb
jno
lods
test
ret
fists
hlt
mov
cmp
cmp
jae
mov
xchg
adc
pop
mov
jne
cmpsl
jne
fimull
push
sbb
dec
xor
sti
pusha
ljmp
cmp
sbb
pop
popf
popf
xchg
mov
dec
fisubl
daa
add
pop
out
jecxz
add
mov
clc
mov
sbb
xchg
add
cmpsl
add
pop
push
and
cmpb
es
test
add
andb
mov
adc
adc
test
mov
int3
mov
loope
les
fcomps
jmp
xorl
xor
test
out
mov
mov
mov
out
mov
push
rol
jbe
jbe
loopne
popa
icebp
xchg
jne
test
test
or
hlt
inc
sahf
or
or
fisubrl
subb
jg
loop
xchg
loop
xchg
imulb
cmc
sbb
sub
arpl
push
arpl
jb
and
jmp
mov
push
cmp
lods
icebp
pusha
shl
mov
sbb
inc
ret
ret
fcmovnb
out
les
fsubrs
movl
sbb
ds
sub
les
out
sub
aas
stos
loop
stos
xor
mov
fidivs
sub
xor
inc
icebp
xor
add
pusha
push
sub
push
sub
mov
call
into
add
xchg
test
jb
test
xchg
mov
loopne
add
ja
mov
jp
popf
jp
jo
and
pusha
xor
mov
cmc
addl
jae
or
xchg
arpl
arpl
test
dec
jno
dec
ja
bound
sub
cld
inc
mov
pop
inc
ficompl
push
fimull
scas
sahf
sub
pop
cmp
pop
sti
and
loop
push
enter
in
adc
imul
imul
jg
test
adc
cmp
cmp
or
add
jns
mov
into
outsb
aas
loop
sbb
cs
fnstsw
shrb
loopne
fimull
out
push
les
xlat
scas
dec
add
sub
loop
movsl
pop
out
pop
sahf
pop
sbb
xlat
push
xlat
cmp
jmp
rorb
shlb
cmpl
rorb
cmpsl
mov
repnz
pushf
mov
jecxz
fsub
fidivl
fidivl
add
pop
pop
mov
adc
add
out
mov
out
xchg
add
xchg
ret
aad
inc
pusha
push
dec
jp
pop
jp
jecxz
popa
and
xor
jp,pt
push
jp
aad
mov
adc
cmpsb
pop
inc
mov
negb
mov
mov
dec
out
pop
inc
add
jge
dec
out
inc
fucomi
inc
aad
push
aad
int3
call
ljmp
jno
mov
jp
sub
lahf
sub
adc
adc
lods
and
jns
inc
lea
stc
jbe
mov
data16
rol
inc
sub
mov
inc
lret
andb
nop
fs
mov
xchg
fcomp
cmpsl
fcom
or
roll
cwtl
lods
xchg
idivb
pop
push
inc
sbb
mov
xor
lea
dec
int3
inc
dec
aad
pop
aad
mov
jp
fstpt
das
mov
loope
jno
roll
movsb
loop
mov
inc
mov
cmp
cmp
xchg
adc
es
xchg
outsl
mov
jne
cmpsb
jne
out
mov
push
iret
clc
push
sbb
pop
xor
sti
je
sti
test
xchg
push
cltd
sbb
insb
pushf
popf
xchg
dec
daa
loop
daa
add
push
out
jecxz
add
mov
testl
add
push
push
and
xchg
cmp
fdivrs
andb
mov
adc
std
adc
cmpsl
mov
cmc
vminps
xlat
pop
cmp
xorl
xor
mov
add
sarl
pushf
add
out
aad
popa
hlt
mov
cmpsl
je
test
cwtl
hlt
inc
mov
inc
and
insb
jb
insb
imul
imul
xchg
loop
test
outsb
fimull
sbb
xchg
in
or
sbb
and
jne
cmp
inc
mov
push
xchg
push
lods
or
icebp
je
icebp
sbb
add
inc
or
push
ret
aad
fucomi
les
xlat
insl
pop
fildl
sbb
sbb
push
sub
sub
sub
fdivrs
out
cmp
aas
stos
notb
xor
xor
mov
icebp
xor
ljmp
pusha
sti
inc
pusha
push
cmp
push
imulb
idivb
cld
int
add
adc
test
xchg
test
xchg
sbb
test
loopne
sbb
arpl
fidivs
mov
mov
pushf
jp
test
shll
leave
mov
cmc
xchg
add
jae
or
xchg
arpl
arpl
cmpsl
enter
dec
ja
popa
ja
cmp
cmc
cld
inc
iret
cmovs
pop
inc
fidivl
push
fimull
ret
popf
sub
jb
adc
and
divb
enter
repnz
in
adc
imul
imul
jle
test
test
xchg
inc
cmp
cmp
push
dec
jmp
adc
jns
mov
outsb
push
loope
sbb
sub
int3
sarb
in
push
cmpsb
in
push
les
scas
dec
xchg
ret
jg
sub
idivb
movsl
pop
cli
mov
sahf
jno
sahf
mov
mov
xlat
push
ljmp
add
shlb
xchg
mov
xchg
shlb
cmpsl
jno
and
mov
mov
enter
jecxz
test
fidivl
xchg
mov
lahf
pop
adc
jo
out
daa
out
lret
add
push
ret
aam
inc
je
dec
jp
pop
jp
testl
ds
mov
jp
push
jp
jmp
lds
testb
lcall
outsl
mov
xorb
pop
add
xchg
insb
dec
cli
popa
inc
out
call
aad
loopne
pushf
ljmp
pop
test
mov
jns
sub
lahf
sub
and
adc
shll
test
jns
push
mov
or
gs
in
inc
sub
sarb
sub
cmpb
nop
fs
fs
sbb
fsubr
cmpsb
fcom
sbb
in
lods
pop
xchg
lods
xchg
or
pop
push
pop
arpl
and
sub
pusha
fwait
xor
mov
inc
dec
aad
pop
aad
out
jp
fidivrl
inc
lea
cmc
insl
jno
aad
inc
iret
ljmp
mov
push
mov
cmp
cmp
fwait
dec
mov
scas
les
lahf
and
lahf
xchg
xorl
in
mov
push
jecxz
push
sbb
jb
sti
mov
sti
test
xchg
fs
sbb
sbbb
dec
add
daa
add
adc
in
dec
testb
out
xchg
add
add
adc
and
es
es
andb
mov
adc
cld
adc
cmpsb
mov
les
vminps
xlat
pop
adcl
xorl
xor
rolb
mov
sahf
addr16
aad
out
mov
ss
ret
aad
popa
or
icebp
test
xchg
hlt
inc
movb
xor
fsubrs
jg
subb
loop
mov
sbb
arpl
sbb
and
jne
aaa
jne
pop
xchg
push
test
imul
inc
and
inc
ret
ret
aam
out
in
les
xlat
insl
pop
out
jg
ds
insl
sbb
sub
sub
in
cmp
aas
stos
or
xor
xor
int
fidivs
push
lock
incb
xor
xor
cmovbe
push
jb
idivb
mov
adc
mov
test
adc
lcall
loopne
sub
arpl
jne
mov
jp
pushf
jp
cwtl
mov
rorl
jecxz
in
fnsave
cmc
jae
pop
je
incb
arpl
cmpsb
enter
dec
ja
pusha
ja
push
mov
cld
jns
cld
inc
jecxz
dec
inc
cld
pop
inc
fiaddl
fimull
xlat
pushf
sub
xchg
adc
and
or
enter
incb
in
adc
imul
imul
jge
test
test
xchg
inc
cmp
cmp
xor
jns
std
jns
fimull
outsb
sbb
sub
int3
add
fidivl
in
push
scas
in
aad
dec
test
pop
sub
or
movsl
pop
push
mov
sahf
test
sahf
mov
scas
mov
jl
xlat
cmp
jmp
rcl
rcl
movsl
lcall
xchg
jge
xchg
shlb
cmpsl
setne
repnz
les
ficompl
in
mov
test
mov
sahf
pop
adc
outsl
adc
sub
out
fdivp
out
scas
clc
add
scas
adc
cli
inc
mov
jp
pop
jp
or
mov
jecxz
jp,pt
push
jp
std
mov
pop
outsl
mov
negb
mov
outsl
mov
xorl
dec
movsl
imul
popa
inc
add
inc
aad
push
aad
hlt
out
ljmp
pop
addr16
outsl
mov
jns
sub
sub
cmp
ret
ret
sarl
imul
mov
gs
stc
roll
push
sub
lret
sarb
lret
or
adcb
mov
xchg
fadds
cmpsb
fcom
xor
roll
xchg
lods
xchg
push
mov
pop
push
outsl
bound
and
sub
pusha
scas
xor
mov
xor
inc
dec
aad
pop
aad
jp
fnstcw
push
mov
or
inc
jmp
push
iret
loopne
mov
imul
adc
ret
adc
xchg
mov
jne
movsl
jne
push
xchg
push
div
push
sbb
xchg
sti
pushf
out
test
sbb
sbb
xchg
lcall
push
movsb
dec
daa
or
add
cmp
out
popf
adc
jecxz
add
mov
mov
push
fwait
in
xchg
sti
std
xchg
add
add
adc
and
es
movsl
addb
andb
mov
adc
cld
adc
movsl
mov
les
pop
andl
xorl
xor
in
out
mov
addr16
jmp
mov
jbe
aam
popa
sbb
popa
icebp
iret
jb
test
xchg
hlt
inc
fiaddl
insb
lcall
cmpb
loop
shl
outsb
fidivl
sbb
mov
sbb
and
scas
ss
jmp
xchg
push
mov
push
icebp
sbb
add
inc
xor
push
ret
rcr
les
in
les
insl
pop
add
ds
insb
sbb
sub
sub
out
cmp
aas
stos
push
push
stos
xor
xor
loope
fidivs
addr16
xor
adc
xor
pusha
and
push
fs
notb
pop
mov
add
lret
add
xchg
test
scas
mov
sbb
shrb
loopne
inc
icebp
arpl
push
jne
mov
fwait
jp
lods
mov
rcrl
mov
cmc
mov
pop
je
adc
arpl
movsl
enter
dec
ja
pop
ja
gs
cld
repz
inc
testl
fimull
jmp
sub
lcall
push
push
outsl
push
enter
sbb
in
pmulhw
imulb
in
jl
test
test
xchg
inc
cmp
dec
jmp
cmp
jns
out
mov
outsb
jnp
outsb
sbb
jg
outsb
sub
sbb
shlb
rcr
leave
jecxz
push
into
jmp
aad
les
mov
pop
sub
push
movsl
pop
and
sahf
mov
scas
mov
nop
rcl
mov
dec
rcl
rcl
movsl
scas
jecxz
fidivrs
out
xchg
ror
shlb
mov
repnz
fdivs
jecxz
lods
hlt
fidivl
mov
popf
pop
adc
outsb
adc
cmp
out
repnz
add
testl
cli
cli
inc
pushf
or
rcrl
popa
pop
mov
push
jb
mov
divl
jp
adc
cmpsb
pop
xorl
lcall
outsl
mov
xorb
addb
dec
mov
pusha
inc
pop
out
aad
push
aad
or
pushf
ljmp
pop
lods
outsb
mov
js
sub
popf
sub
dec
cmp
ret
ret
sarb
jg
arpl
je
mov
fs
or
push
sub
lret
in
lret
and
adcb
mov
xchg
fcoms
movsl
fcom
inc
jmp
test
mov
pop
push
andl
sti
sub
pusha
ret
xor
leave
jo
dec
or
ficompl
out
in
jp
fdivrs
imul
inc
std
addl
loopne
fbld
jge
daa
cmp
cmp
ret
dec
mov
xlat
ret
dec
and
jne
movsb
jne
sub
push
sbb
lcall
test
xchg
mov
mov
pop
scas
xchg
dec
sub
daa
add
aaa
add
mov
out
jecxz
jmp
mov
mov
push
in
xchg
paddw
push
push
adc
and
shlb
adcb
mov
mov
adc
sti
adc
movsb
mov
les
ret
les
aad
cmpl
xorl
xor
clc
inc
out
mov
pushf
addr16
std
ja
mov
pop
int3
ret
shll
xor
icebp
test
add
inc
out
add
pop
push
insb
scas
insb
imul
and
nop
loop
in
outsb
fiaddl
fimull
shr
or
sbb
push
and
jne
xor
jmp
sar
push
lods
inc
lods
icebp
mov
icebp
sbb
add
inc
dec
sub
push
ret
rcr
les
in
les
aad
pop
pop
jle
ds
dec
sbb
mov
sub
sub
adc
out
js
aas
stos
xor
xor
inc
fidivs
jnp
xor
es
icebp
xor
xor
aaa
inc
pusha
push
js
push
mulb
mov
add
lret
cli
adc
ret
sbb
mov
loopne
push
lock
sbb
pushf
or
jp
lcall
mov
shll
add
std
cmc
jae
push
je
test
arpl
jae
enter
dec
rcr
ja
pop
ja
jns
loop
mov
or
inc
fisubrl
fimull
lcall
adc
and
xor
enter
cs
in
push
in
sbb
imul
jl
test
xchg
inc
cmp
dec
jmp
push
sti
jns
add
outsb
sbb
jle
subb
int3
sub
fcmovu
loop
push
loop
push
jmp
aam
dec
sarl
sub
xor
pop
sahf
lods
pop
sahf
mov
scas
mov
movsb
rcl
mov
cmp
fisttpl
aas
rcl
movsl
ret
mov
xchg
movsl
out
xchg
rcr
shlb
mov
repnz
add
jecxz
fsub
fcmovb
repz
rol
mov
pushf
pop
adc
insl
adc
push
and
out
mul
add
testb
adc
cli
repnz
inc
mov
dec
jp
push
jp
xor
and
or
jp
and
ret
xchg
mov
testb
fwait
outsl
fsubrs
mov
dec
vmulsd
dec
ss
inc
sub
inc
aad
push
aad
sbb
pushf
ljmp
pop
shrl
xor
sub
sub
pusha
cmp
ret
ret
sarl
xchg
mov
dec
jae
mov
arpl
sub
push
cmp
lret
xor
adcb
mov
xchg
fsubrs
movsb
fcom
pop
call
test
mov
pop
push
xchg
pusha
sbb
movaps
pusha
xlat
das
pusha
xor
outsl
xor
inc
dec
aad
pop
aad
add
jp
xlat
jp
jg
pop
jno
imul
addl
hlt
mov
xchg
mov
cmp
aaa
cmp
xlat
dec
mov
jmp
adc
mov
mov
in
pop
cmc
push
sbb
scas
sub
sti
in
test
sbb
sub
xchg
sub
dec
daa
xor
add
ss
lds
out
jecxz
jecxz
mov
mov
jle
in
xchg
and
xchg
add
adc
lcall
es
andb
mov
adc
cli
adc
mov
mov
inc
ret
ds
orl
xor
xchg
xor
or
out
mov
addr16
adc
mov
jb
ret
shlb
inc
xchg
divl
test
add
inc
add
jno
insb
ret
imul
and
and
loop
clc
icebp
outsb
ficompl
fimull
in
or
sbb
jle
and
jne
xor
jmp
test
push
in
push
lods
pop
lods
icebp
les
inc
pop
sub
push
ret
rcr
les
jmp
insl
inc
aam
pop
sub
shrl
sbb
dec
sbb
mov
aad
out
cmp
aas
mov
aas
stos
inc
dec
stos
xor
inc
fidivs
in
xor
cmp
xor
pusha
push
mov
idivb
add
mov
test
adc
mov
sbb
mov
loopne
sub
arpl
arpl
jae,pn
mov
cltd
jp
aam
and
les
shll
sbb
cmc
jae
add
adc
and
push
jb
enter
dec
aad
dec
ja
pop
ja
lea
cld
inc
pop
or
inc
cmp
fiaddl
jmp
sub
ret
pop
pop
pop
pop
push
inc
insl
push
enter
incb
in
or
imul
jnp
test
xchg
inc
cmp
inc
jmp
fs
jns
push
mov
outsb
mov
jge
addr16
sub
inc
jbe
rorb
loope
push
imul
push
std
adc
scas
dec
in
dec
sub
pop
sub
inc
cmp
pop
dec
mov
sahf
rcll
mov
lods
mov
mov
out
shr
rcl
iret
shlb
out
ficoms
icebp
cmpsb
shlb
mov
repnz
repnz
add
jecxz
aam
fidivl
in
mov
fwait
pop
adc
insb
adc
fs
out
cmc
out
jmp
add
ljmp
inc
les
dec
jp
push
jp
inc
mov
jns
and
pop
mov
jp
dec
jp
cmp
cmpsb
pop
stos
mov
negb
add
outsl
in
test
mov
arpl
out
pop
test
pop
dec
loope
dec
dec
pop
inc
aas
in
aad
push
aad
xor
pushf
ljmp
pop
addr16
mov
mov
push
fwait
sub
je
adc
adc
ret
sarb
cmpsl
mov
pop
jb
mov
bound
sub
and
orb
adcb
lahf
fs
imul
mov
roll
xchg
lods
xchg
pop
mov
pop
push
stos
pop
sbb
and
and
cs
xor
outsb
xor
inc
dec
aad
pop
aad
pop
in
jp
jp
xchg
mov
inc
push
inc
and
dec
iret
fisttps
mov
movsl
mov
cmp
ss
jmp
mov
inc
adc
shrl
jne
push
test
push
xor
push
sbb
ret
sti
fsub
sti
test
xchg
sbb
rclb
xchg
dec
push
mov
daa
add
ss
fsts
out
jecxz
std
jecxz
lahf
repnz
xchg
cwtl
in
xchg
aaa
sti
xchg
add
adc
scas
pop
and
es
mov
andb
mov
adc
adc
mov
mov
pop
rol
push
rcrl
arpl
sti
xchg
xor
and
mov
std
mov
lcall
add
mov
jbe
shll
pop
test
or
test
incl
push
add
test
insb
aam
imul
cmp
and
mov
outsb
or
outsb
fisubrl
fimull
clc
call
arpl
ljmp
jmp
sub
stc
stc
push
lods
outsb
lods
icebp
fdivrs
sbb
inc
ret
ret
rcr
les
ljmp
aas
jl
ds
ds
dec
sbb
mov
sub
cmp
aas
mov
dec
stos
xor
inc
fidivs
mov
inc
icebp
xor
inc
pusha
push
mov
and
mov
pusha
leave
mov
test
adc
ljmp
loopne
sub
arpl
arpl
inc
jb
mov
or
and
mov
rcr
das
shll
sub
sti
cmc
jae
add
adc
adc
and
imul
dec
jmp
pop
ja
mov
lock
inc
xor
dec
inc
dec
push
inc
ficoml
call
sub
adc
push
pop
push
pop
insb
push
enter
push
in
or
imul
jp
test
xchg
inc
cmp
dec
cmp
addb
js
jns
sub
outsb
sbb
jge
stos
sub
push
jne
shlb
loope
push
or
push
les
adc
scas
dec
stc
mov
sub
pop
cmp
sahf
aad
sahf
mov
lods
mov
int3
mov
cmp
add
shlb
shlb
sti
mov
xchg
int
xchg
rolb
cmpsl
pmulhw
repnz
adc
enter
jecxz
call
jmp
mov
lcall
js
out
cs
out
push
add
adc
cli
sbb
cli
inc
fmuls
dec
jp
push
jp
pop
mov
lea
mov
xor
jp
dec
mov
pop
mov
adc
fwait
outsl
add
mov
ja
out
pop
mov
addr16
pop
pop
inc
push
in
aad
push
aad
inc
jecxz
ljmp
pop
addr16
jne
sub
adc
and
jns
sarb
mov
jno
mov
popa
mov
dec
mov
sub
lret
and
lret
sbbb
adcb
sahf
fs
jg
xchg
fcoms
fcom
and
test
mov
pop
push
mov
daa
and
sub
xor
inc
dec
aad
push
aad
sub
jp
aad
pop
cmpsl
mov
pop
imul
dec
dec
iret
fistps
mov
cmp
xor
mov
adc
adc
out
xchg
jne
mov
in
inc
repz
sbb
sub
sti
in
jecxz
test
sbb
in
popf
xchg
push
stos
xchg
dec
data16
daa
add
xor
out
jecxz
cld
jecxz
mov
mov
cmpsb
xchg
in
xchg
dec
cli
xchg
add
adc
ret
xchg
push
xor
push
xor
mov
cmp
adc
mov
mov
insl
rol
data16
ja
xorl
xor
xor
out
mov
cld
mov
cltd
addr16
cmp
mov
lcall
popa
insb
test
pop
outsl
icebp
test
incl
sub
inc
cltd
push
insb
ljmp
orb
and
mov
outsb
and
outsb
fiaddl
call
arpl
xor
jmp
sub
or
lods
icebp
in
mov
sbb
inc
ret
ret
iret
fcmovnb
push
jmp
insl
pop
push
jnp
ds
push
sbb
lret
sub
out
mov
aas
stos
outsb
dec
stos
xor
mov
fidivs
mov
xor
bound
icebp
xor
pusha
push
mov
push
mul
and
mov
je
mov
test
je
test
mov
sbb
mov
loopne
sub
arpl
jno
mov
or
and
xchg
shr
shll
inc
scas
in
cmc
psubq
jae
add
adcl
xchg
jge
xchg
enter
dec
std
aad
ja
pop
ja
mov
loop
fucomp
cld
inc
inc
or
pusha
push
inc
fisubrl
out
sub
cwtl
sub
ljmp
push
outsb
imul
mov
aad
in
or
imul
cld
cmp
or
cmp
dec
cmp
xchg
inc
jmp
mov
jns
ds
outsb
lret
fldt
pop
jl
addr16
je
shlb
loopne
push
push
call
les
or
pop
sub
outsb
cmp
sahf
jmp
stos
mov
loopne
xlat
cmp
in
rclb
rcl
int
movsl
fbld
xchg
loope
xchg
rcrb
shlb
mov
repnz
mov
sub
jecxz
cld
lock
or
mov
cltd
pop
adc
push
out
and
out
repz
adc
add
adc
ret
iret
cli
inc
in
pop
dec
jp
push
jp
outsl
xchg
mov
das
mov
jp
dec
jp
popa
xchg
pop
shll
negb
adc
outsl
mov
jl
out
mov
out
pop
sar
pop
dec
or
jb
inc
jcxz
aad
dec
aad
pop
loop
ljmp
pop
addr16
push
mov
mov
js
sub
pushf
aaa
adc
cmp
ret
iret
jns
iret
xchg
test
mov
pusha
mov
pop
mov
sub
lret
xor
lret
xorb
adcb
popf
fs
xchg
jno
fsubs
fcom
xchg
in
test
fiadds
cmpb
push
rcrl
and
and
sub
xor
inc
dec
aad
push
aad
aas
loop
jp
aam
pop
mov
push
inc
iret
bound
fbstp
mov
int
daa
cmp
xor
mov
dec
mov
daa
mov
lahf
xchg
sti
stos
xchg
jne
mov
in
pop
repnz
sbb
ljmp
test
xchg
sbb
clc
xchg
popf
xchg
stos
xchg
dec
jp
dec
daa
outsb
pop
daa
add
xor
out
add
out
jecxz
sti
jecxz
lock
mov
stc
xchg
add
lahf
add
adc
pop
and
mulb
andb
scas
ljmp
pop
xchg
mov
pop
lds
pop
jp
pop
orl
xor
dec
inc
out
mov
sti
mov
cwtl
addr16
dec
je
mov
scas
enter
iret
jbe
addb
test
xchg
hlt
inc
add
lods
push
insb
shrb
jns
andb
and
loop
xor
outsb
ficoml
out
arpl
outsl
and
jne
xor
rolb
push
lods
xchg
arpl
sbb
sbb
inc
ret
ret
into
fcmovnb
addr16
insl
pop
addr16
punpckhbw
sbb
dec
sbb
fisubs
sub
fs
aas
enter
orb
mov
fiadds
fidivs
lret
ljmp
enter
xchg
push
enter
hlt
and
mov
mov
mov
test
test
adc
sbb
xor
loopne
movsl
in
arpl
push
cld
mov
or
and
xchg
roll
shll
push
lods
in
cmc
and
cmc
jae
add
adcb
repz
arpl
mov
dec
ja
pop
ja
leave
and
icebp
out
cld
inc
pop
or
je
inc
fidivrl
out
sub
sub
xor
pop
fwait
sbb
push
subb
iret
sbb
jle
in
or
imul
push
js
test
or
cmp
dec
cmp
stos
inc
jmp
mov
xchg
outsb
outsb
sbb
jnp
shlb
jge
int3
ror
fcom
fisubrl
out
les
adc
scas
shrb
sub
pop
sub
cmpb
pop
xchg
sahf
mov
stos
mov
hlt
mov
cmp
sub
rorb
fbld
xchg
cmc
ljmp
in
cmpsl
prefetch
mov
cmp
enter
jecxz
adc
fidivl
and
mov
cwtl
pop
adc
imul
push
repnz
daa
repz
es
cli
inc
into
cli
inc
add
dec
jp
push
jp
addl
mov
pop
scas
jp,pt
dec
jp
jne
mov
mov
cmpsb
pop
out
pop
neg
adc
lcall
outsl
mov
jnp
out
lahf
shr
in
pop
dec
sbb
pop
inc
jnp
inc
aad
dec
aad
insb
loope
ljmp
pop
adc
mov
cwtl
sub
mov
adc
dec
push
ret
into
jns
jecxz
arpl
outsl
push
mov
pop
mov
jno
inc
sub
pop
cmp
addb
nop
in
nop
fs
pushf
fs
cmpsl
jo
fdivrs
fcom
test
fldl
xchg
mov
pop
push
out
sbb
pop
and
pusha
xor
aas
dec
aad
push
aad
push
loope
jp
sarl
iret
xchg
andl
iret
jbe
iret
filds
mov
loope
daa
cmp
xor
and
sbb
lret
bnd
cmpsb
inc
test
out
nop
imul
adc
push
mov
call
clc
arpl
jo
repz
repz
les
inc
cli
ss
outsb
cmp
mov
jl
mov
xor
lods
out
pushl
call
cmp
jecxz
pop
lret
inc
push
clc
push
jle
das
in
add
aam
loop
xchg
nop
dec
in
xchg
loopne
push
stc
ret
int3
rolb
mov
lock
cmp
testb
push
loopne
and
in
test
pop
popf
mov
lahf
in
mov
mov
ds
sub
xchg
lock
lahf
call
push
and
movsl
scas
xor
sbb
add
loop
adc
cmp
in
pop
clc
mov
sub
mov
cmp
outsb
push
inc
mov
inc
inc
sub
in
and
sahf
xor
jge
lcall
push
and
xchg
movsb
mov
or
mov
int3
mov
cmp
or
inc
mov
pop
mov
or
xchg
loop
into
leave
cmp
dec
mov
push
stos
aaa
push
mov
stos
lea
jmp
adcl
inc
adc
add
out
fcomps
fucomi
mov
gs
jnp
mov
inc
int
das
sarb
sub
mov
push
mov
gs
or
fwait
or
inc
mov
mov
andl
stos
push
nop
cltd
push
loop
sbb
push
pop
jno
stc
les
mov
dec
cmpsl
and
ss
mov
sub
bound
xor
mov
inc
adc
gs
bound
mov
loope
pushf
xchg
xor
add
lahf
sbb
adc
data16
or
cmp
cmp
mov
sbb
lds
xchg
xchg
adc
dec
imul
stos
test
sbbl
jle
ret
sbb
adc
cmp
leave
push
pop
shl
shlb
mov
rol
enter
sarl
test
xchg
mov
mov
insb
cltd
mov
cmpsb
mov
pusha
lahf
push
xchg
pop
xchg
and
xchg
nop
mov
mov
pop
xchg
mov
sub
cmp
or
shrb
jb
mov
mov
and
sbb
pop
ds
adc
sbb
int
dec
push
xlat
pop
imul
fst
mov
gs
aam
orb
negb
push
aam
sarl
xchg
cmp
mov
inc
add
out
sub
mov
xchg
nop
stc
mov
int
xor
or
push
lds
push
add
mov
daa
mov
push
and
cmovbe
repz
cmp
fidivs
pop
mov
inc
pop
adc
scas
das
push
mov
dec
cmpsb
in
mov
repz
repnz
iret
push
divb
xchg
mov
jae
out
mov
fsubr
cmc
jnp
sarl
sahf
dec
imul
pop
adc
and
push
cmp
pop
pop
movsl
aaa
or
push
xchg
mov
ds
in
and
sbb
mov
xor
lods
aam
sti
rolb
leave
inc
pop
ret
rcrl
xlat
popa
es
ja
mov
sar
int
adc
std
pop
xchg
aam
ljmp
jne
movsl
jno
movsl
xchg
push
test
cmc
test
js
stc
jo
call
in
int
leave
icebp
daa
lret
repz
inc
or
push
pop
fwait
inc
jge
xchg
gs
in
mov
in
xchg
std
xchg
testl
push
sub
das
outsl
clc
dec
jg
inc
out
inc
jmp
data16
jo
mov
out
fucomp
out
mov
test
shll
out
cmp
inc
lcall
ljmp
add
leave
and
enter
leave
sbb
xchg
add
subl
hlt
pushf
lods
cld
stos
xor
mov
test
xor
adc
mov
xor
mov
cmp
popa
adc
gs
pop
gs
dec
adc
pop
jle
andb
aaa
cmp
add
xchg
push
out
jns
xchg
push
mov
ss
xorb
mov
mov
mov
add
sbb
pop
inc
adc
inc
xor
je
scas
inc
cmpl
faddp
and
push
stos
add
mov
out
dec
scas
lock
pushf
pop
xchg
xchg
push
or
sahf
push
jae
outsl
xor
faddp
mov
arpl
pop
jle
leave
stos
jmp
notl
jg
fdivl
sub
adc
push
mov
adc
clc
push
inc
pop
jmp
fadd
mov
rcrl
dec
sahf
xchg
sub
je
pusha
nop
sbb
je
icebp
out
out
push
mov
add
loopne
mov
lahf
and
je
es
or
test
mov
cld
pop
jne
push
jbe
mov
and
cmc
add
xchg
jle
iret
test
out
cmp
or
sbb
cltd
mov
loopne
dec
js
push
mov
and
es
xchg
or
sbb
adc
add
mov
push
mov
mov
in
and
into
inc
ja
xor
stos
dec
inc
shll
lock
dec
dec
cli
fucomip
int
mov
dec
xchg
push
rorl
test
call
scas
enter
mov
lahf
cmp
mov
jl
push
lahf
int
add
xchg
popa
xlat
fsubrp
es
cmp
xchg
add
xchg
out
push
and
lret
jp
leave
jne
jbe
sbb
std
add
dec
xchg
icebp
jae
pop
out
iret
popa
adc
adc
stos
jb
fistps
or
lds
xor
pop
shl
lods
mov
push
jle
sub
mov
sub
sub
inc
adc
mov
int3
mov
addl
call
jmp
dec
jp
pop
jl
add
sbb
push
xor
out
iret
and
sbb
inc
fsts
mov
pop
mov
cmc
jle
cmc
or
test
rep
sbb
mov
mov
mov
fmul
out
dec
or
jge
fadds
add
dec
imul
pop
cmp
pop
andb
mov
aaa
adc
add
ss
das
mov
shll
push
dec
rcrb
sub
repz
xor
jb
negl
int3
adc
adc
outsl
arpl
fmull
mov
arpl
nop
jo
clc
jne
incb
imul
std
sar
sub
out
sub
dec
insb
pop
push
pop
cmpsb
insl
inc
mov
std
data16
in
sahf
lock
test
ja
std
bound
dec
jne
imul
pop
icebp
push
dec
int
repz
in
jmp
in
int
out
sahf
jnp
lcall
push
ljmp
iret
mov
fildl
out
push
sub
pop
orl
testb
subl
aad
mov
lods
mov
sbb
pop
pop
ret
mov
movsb
ljmp
mov
mov
mov
gs
push
xlat
adc
add
hlt
xchg
add
shll
mov
scas
mov
nop
outsl
or
test
jo
inc
sbb
cltd
sbb
cmpsl
xor
cmpsl
or
xchg
jns
call
sbb
mov
mov
xor
push
cmp
pop
add
cmp
stos
jbe
cmpsl
inc
nop
mov
orl
pop
fyl2xp1
sub
jbe
fnstcw
out
pop
mov
push
mov
sbb
scas
jbe
mov
cmpsb
dec
push
jg
pcmpgtw
xchg
mov
int
ret
jmp
movsl
out
int
sbb
rcrl
dec
xchg
or
add
sbb
lock
mov
xchg
andb
lcall
pop
dec
outsb
in
sbb
lods
jae
movsl
adc
mov
sub
pop
mov
sub
xor
mov
lods
xchg
pop
out
dec
imul
cmp
or
jae
mov
mov
gs
cwtl
subl
loope
jae
push
shl
sub
cmp
mov
stos
aas
cmpsl
loopne
mov
imul
jb
xlat
adc
mov
jne
mov
mov
sub
jmp
inc
nop
push
and
loope
ret
pop
cmpsl
outsb
ljmp
out
xchg
pop
aam
jb
cltd
dec
xchg
sub
sarb
jecxz
xor
nop
repnz
pushf
shrl
jle
shll
ja
pop
adc
mov
sub
mov
xor
addb
in
imul
xchg
out
int
xchg
pop
add
mov
or
sub
push
inc
and
dec
sahf
sbb
mov
popa
stc
into
inc
push
push
pop
and
ficomps
out
popa
test
test
or
mov
fildl
sub
sub
aad
cs
dec
sub
mov
roll
adc
or
shrb
sti
pop
mov
insb
jg
jle
adc
sbb
insl
xchg
cmp
mov
xor
and
cmp
mov
movsb
lock
xchg
out
loop
in
jg
icebp
adc
push
divl
mov
les
rcr
stc
mov
jns
dec
aas
inc
dec
cli
push
inc
or
or
push
int
xor
and
mov
or
adc
push
imull
adc
or
stos
in
sub
mov
or
mov
cmp
xor
mov
addr16
lahf
xchg
pop
test
jne
mov
lret
jle
push
stos
out
push
sbb
ds
push
test
xchg
sub
sbb
inc
sbbb
lret
daa
mov
xor
call
out
jecxz
clc
jecxz
pop
in
mov
sbb
rolb
adc
and
jb
xchg
and
fbld
xorb
ljmp
sbb
sub
shll
enter
xor
mov
cwtl
cmp
andb
and
lret
js
mov
addr16
lret
dec
cmp
addb
in
xchg
lock
mov
mov
imul
js
sub
jmp
ficoml
jecxz
arpl
adc
repz
bound
and
jmp
jle
inc
jno
push
lret
jge
lods
icebp
push
mov
sbb
and
push
dec
movsl
inc
js
fcmovnb
mov
les
int
pop
mov
pop
aaa
pop
or
pop
and
sub
iret
sub
movsl
xor
cmp
rorb
dec
sub
and
out
xor
js
xor
cli
dec
pusha
xlat
cmp
push
sbb
testb
and
mov
add
cmp
ljmp
sbb
test
loopne
in
push
jns
mov
push
aam
jp
pusha
andl
push
and
insl
insl
fwait
mov
cmc
jae
cmc
jae
bound
iret
jle
clc
add
arpl
popf
enter
dec
jle
mov
mov
ds
inc
stos
add
dec
fmuls
mov
dec
xor
dec
jmp
pop
cs
and
enter
dec
sar
in
pop
hlt
imul
cld
test
xchg
cmp
pop
cmp
clc
add
lock
and
outsb
sbb
mov
int3
push
sbb
rcr
jge
ficoml
sub
nop
adc
int3
sub
dec
sub
cmp
nop
xor
pop
sahf
dec
adc
fiadds
dec
jle
loopne
sar
rcl
enter
fldt
inc
out
dec
jge
shlb
mov
repnz
mov
repnz
imul
jecxz
mov
mov
xchg
pop
adc
ja
out
repnz
out
cld
out
add
jbe
ret
lret
mov
or
push
jp
roll
and
aaa
call
divl
add
sbb
push
jo
outsl
js
outsl
mov
imul
dec
loop
dec
push
inc
fcmovu
dec
xlat
jle
xchg
pushf
mov
movsl
ljmp
outsl
gs
sub
mov
ret
sarl
enter
andb
stc
push
mov
pop
mov
shrl
outsl
scas
xor
lret
adcb
cltd
data16
add
xchg
dec
lret
sar
loopne
xchg
cmp
xchg
test
mov
pop
or
pop
or
cmpsb
and
xor
xor
cmp
mov
into
mov
sarb
mov
jno
mov
aad
fists
mov
sub
ljmp
lahf
add
lahf
xchg
pop
cmpsl
xorb
mov
push
mov
nop
dec
xor
repnz
sbb
xchg
fisttpl
mov
sub
rorb
lcall
mov
add
gs
push
fnsave
adc
push
xchg
in
xchg
ret
hlt
addl
cltd
adc
mov
push
and
xchg
es
cmp
loopne
mov
adc
repnz
add
mov
shlb
fmulp
pop
xchg
out
insb
sbbl
lods
cmp
mov
addr16
xchg
jbe
mov
idivb
jbe
lret
in
popa
clc
xchg
sbb
cmp
hlt
inc
mov
dec
iret
outsb
jmp
je
and
jae
loop
mov
jg
jecxz
push
addr16
or
arpl
jg
mov
jmp
fucomi
push
test
push
lods
cli
dec
lods
clc
data16
mov
and
dec
ret
lret
jo
xchg
int3
insl
repz
jne
jae,pt
or
sbb
frstor
sub
and
xor
aas
sub
cs
out
inc
mov
fisubrs
out
icebp
fisubrl
icebp
cmp
ljmp
xchg
negb
idivb
lret
pop
clc
add
or
jbe
stos
inc
push
repnz
cwtl
and
or
arpl
into
imul
pop
push
aad
stos
xchg
jp
je
and
fs
mov
mov
cmc
cmc
jae
std
jae
fidivrl
arpl
push
jae
enter
jne
dec
ja
push
ja
sub
test
inc
mov
dec
inc
fisubl
dec
lret
mov
loopne
mov
xchg
sub
bound
pop
push
out
push
shll
push
in
push
in
shr
imul
jae
xchg
mov
push
dec
cmp
push
inc
jmp
add
jnp
push
ret
into
outsb
inc
fistpl
xchg
jbe
and
call
aam
ficoml
loop
les
imul
sub
push
sub
divl
add
popa
setle
ret
xlat
pop
mov
ds
push
rcl
imul
lods
iret
xchg
push
in
pusha
rcrl
cmpsl
scas
pslld
repnz
mov
stos
enter
jecxz
je
fidivl
jns
into
pop
pop
xchg
pop
test
gs
add
out
mov
lods
add
mov
jg
cmpsb
leave
cli
inc
add
xchg
dec
jne
movsl
andl
ljmp
mov
jae
pop
fcomi
flds
cmpsb
pop
dec
scas
pop
imulb
ud0
mov
mov
add
pop
and
dec
ljmp
aad
dec
int
xlat
ficomps
sub
pop
addr16
fwait
adc
outsb
mov
lock
sub
push
xor
test
leave
jns
inc
andl
in
repnz
aad
inc
sub
les
subb
add
xchg
outsl
or
ficomps
xlat
test
subl
mov
pop
daa
lahf
pop
push
xlat
ret
ret
and
pusha
mov
bound
xchg
sub
cmp
mov
fmul
jp
iret
fadd
jno
pop
jno
bound
js
iret
ret
out
daa
dec
stos
daa
cmp
mov
mov
inc
mov
lahf
mov
xchg
lcall
fiadds
shr
mov
add
sbb
sti
jp
std
test
add
mov
and
xchg
cs
cltd
dec
daa
out
and
out
jle
out
jecxz
mul
mov
jmp
in
xor
xchg
add
lcall
push
push
and
outsb
fwait
es
andb
test
adc
cltd
mov
stc
mov
cmp
inc
xorl
xor
ret
mov
mov
xchg
addr16
lds
mov
dec
pop
xorb
jbe
clc
jge
icebp
lods
push
test
and
hlt
inc
mov
dec
and
int
imul
imul
xchg
insb
lods
jmp
fimull
and
arpl
push
and
dec
sub
jmp
jle
push
cltd
repnz
lods
push
pop
stos
icebp
js
pop
orl
ret
fstpt
fadd
les
lret
insl
pop
int3
je
ds
stc
jl
je
sbb
push
and
sub
int
out
xor
aas
inc
in
aas
stos
cli
inc
mov
inc
cmp
xor
xor
in
cmp
xor
xor
cmp
inc
addr16
mulb
idivb
add
mov
test
or
mov
sbb
clc
pop
out
cld
loop
cld
mov
mov
nop
jge
mov
shll
adc
cmc
fwait
hlt
cmc
jae
cld
jno
call
sbb
or
enter
dec
mov
dec
jmp
push
ja
inc
jle
cld
imul
inc
lret
add
in
dec
inc
fidivl
inc
fimull
out
push
jbe
adc
pop
pop
push
cld
fs
enter
test
in
add
pop
pusha
mov
test
test
mov
jle
aas
jmp
sbb
jns
movl
sbb
and
rep
aam
inc
rcl
fisubl
loope
les
lret
cltd
mov
sub
das
sub
stos
pop
sahf
jle
sahf
mov
cmp
xlat
insb
mov
cmp
fidivrs
shlb
shlb
fwait
lods
xlat
xchg
insl
in
pop
out
shlb
scas
or
jae
cmc
mov
mov
enter
jecxz
loopne
cwtl
mov
loope
mov
xchg
inc
adc
data16
sbb
out
into
in
ljmp
or
cli
mov
add
mov
jge
sti
andb
push
mov
jp
inc
jp
in
xorb
pop
scas
pop
notb
negb
mov
jbe
out
pop
mov
pop
dec
lea
aam
push
inc
repz
pop
dec
aad
pop
inc
fsubrp
jbe
ljmp
fs
cld
outsl
mov
add
sub
sub
push
ret
and
out
enter
andb
push
mov
pop
mov
jmp
dec
sub
lret
das
scas
mov
pop
xchg
xchg
sbb
fdiv
lcall
fcomps
xchg
push
mov
pop
aaa
sahf
adc
push
push
and
pop
and
es
xor
movsb
or
mov
aad
lret
fcmovnb
jp
into
bound
sbbl
popa
jno
fnstenv
iret
out
inc
loopne
aad
mov
pop
test
cmp
mov
adc
in
cmp
jne
lcall
loope
push
sbb
jbe
sti
mov
stc
test
test
mov
mov
pop
mov
jmp
xchg
dec
push
cltd
dec
daa
cli
push
daa
add
xchg
lods
jecxz
cmc
jecxz
push
ljmp
in
lock
add
add
or
push
mov
sbbb
mov
fisubrl
adc
pop
cli
mov
mov
pop
add
inc
adcl
xorl
xor
aam
ljmp
xchg
addr16
fldcw
mov
and
lds
jbe
or
popa
icebp
scas
addr16
test
hlt
cmp
inc
aas
dec
fisubrs
insb
imul
imul
xchg
sub
fisubl
jne
or
adc
imul
jmp
out
push
lods
icebp
push
lods
and
icebp
mov
sbb
inc
ret
enter
loope
insl
or
insl
pop
icebp
jae
andl
mov
push
sub
sub
and
stos
push
inc
test
cmp
xor
xor
add
out
push
not
std
push
cmp
push
pushw
testb
mov
add
rolb
ret
test
pop
ljmp
scas
sbb
and
arpl
in
cld
imulb
mov
jp
nop
imul
daa
shll
stc
cmpsb
ljmp
sti
jae
push
jp
arpl
and
lcall
xlat
push
ja
push
jge
cld
jge
stc
inc
out
fiadds
inc
fimull
fimull
ret
nop
das
adc
push
pop
push
and
je
mov
or
in
add
imul
jae
fidivl
test
test
mov
jp
data16
ds
sub
jns
fdivrl
outsb
jae
imul
pop
and
adc
shlb
fcomp
push
mov
or
scas
test
dec
sub
cmpsb
cmp
pop
adc
cwtl
mov
mov
xlat
cmp
fnstsw
mov
pop
nop
movsl
sahf
fsubs
xchg
xchg
pop
mov
cmpsl
setns
insb
cmp
mull
jecxz
into
in
test
fnsave
lods
mov
pop
adc
std
push
out
sbb
out
jmp
add
or
cli
into
cli
inc
mov
add
ret
dec
sar
andb
and
movsb
notrack
jp
add
cmpsb
pop
je
inc
mulb
negb
mov
ja
push
ja
out
sub
pop
dec
test
push
inc
pop
faddl
loopne
fwait
call
push
lock
mov
mov
into
sub
xchg
sub
cmp
adc
fists
fidivrl
lds
outsl
jg
push
and
pop
xchg
fnstsw
dec
sub
lret
int3
xor
adc
adcb
xchg
fs
outsl
cmc
fadds
lcall
jle
pushf
lods
ja
lods
xchg
and
or
push
inc
mov
mov
pusha
xor
cmp
lret
jp
int
pop
es
sbb
popa
jno
in
jbe
iret
add
xlat
fbld
insl
test
cmp
sub
mov
mov
lahf
sbb
ja
cltd
jne
sbb
push
mov
xchg
pop
mov
sti
mov
add
mov
mov
xchg
pop
mov
dec
daa
push
push
daa
add
sub
out
mov
hlt
jecxz
addr16
in
xchg
jp
rolb
popa
cwtl
add
or
jo
cmp
es
cltd
addb
mov
lods
cmpsl
ljmp
sbb
mov
mov
les
lret
mov
shll
xor
call
hlt
xchg
addr16
xchg
addr16
in
insb
out
mov
dec
rcrl
enter
jl
icebp
shll
test
mov
inc
fdivrp
inc
dec
dec
insb
cmp
imul
and
test
outsb
shl
outsb
fidivl
fisttps
arpl
adc
test
push
and
jmp
jp
push
shl
lods
ss
lods
icebp
out
mov
sbb
inc
cmp
inc
ret
rcr
mov
insl
pop
lret
pop
jae
ds
pusha
mov
jle
sub
sub
cmp
and
xor
xor
sbb
pushf
xor
xor
push
aaa
repz
sub
cmp
push
sbb
mov
push
mov
test
push
subb
lods
test
aad
sbb
rcrl
loopne
dec
inc
and
or
mov
bound
mov
and
mov
scas
in
cmc
movsl
loop
xor
jae
adc
adc
mov
fs
xor
enter
dec
mov
repnz
cld
xchg
out
inc
std
add
adc
ficompl
fimull
out
cmpxchg
sub
pop
push
and
enter
cld
push
int
in
add
imul
cld
mov
inc
pop
mov
mov
jmp
cmp
jns
idivb
outsb
jnp
jl
shlb
addr16
inc
int3
sbb
rcr
fcmovb
xlat
enter
es
out
add
scas
dec
shll
inc
sub
xchg
es
pop
sahf
popf
or
mov
mov
idivl
inc
rcl
xchg
xlat
xchg
test
xchg
mov
xchg
ror
shll
lods
pslld
mulb
jecxz
int
fidivl
fbstp
pop
cwtl
xchg
pop
adc
bound
out
sbb
out
ret
jmp
ret
ret
cld
inc
cmp
jg
and
and
sub
sti
cmpsb
jp,pt
inc
jp
adc
mov
add
or
lcall
arpl
aas
mov
pop
dec
mov
push
rolb
fildl
mov
ficompl
jmp
addr16
mov
insb
mov
sub
sub
inc
das
adc
int3
push
ret
jb
cmpl
cmp
mov
pop
xchg
inc
adc
sub
lret
xor
test
iret
adcb
xchg
fs
inc
imul
adc
lods
test
xchg
adc
pop
push
xchg
and
sbb
jl
lret
pusha
adc
cmp
rorl
repz
jp
int3
pop
push
dec
jno
jo
inc
add
iret
push
inc
iret
rcr
mov
andl
nop
adc
mov
lahf
inc
pop
lahf
xchg
scas
mov
jae
in
pminsw
sahf
and
sti
mov
fiaddl
orl
popf
stos
lea
dec
cs
pop
daa
and
fisubrs
or
mov
int
nop
repz
outsb
call
in
xchg
pop
icebp
xchg
pop
push
xchg
add
or
mov
sub
sbb
andb
cmpsl
ljmp
pop
xchg
mov
adc
rcrb
int
cmpl
xorl
xor
cld
cmp
mov
addr16
add
fdiv
mov
jbe
ret
push
popa
xor
popa
icebp
cld
gs
test
cmc
test
jnp
repnz
sar
inc
popa
dec
fisubrl
insb
imul
ja
shrb
loop
test
outsb
cmc
out
fimull
fimull
hlt
fimuls
sbb
cmp
sub
jmp
jge
push
aad
push
lods
push
pop
lods
icebp
mov
icebp
sbb
negb
inc
outsl
sbb
loop
sahf
fcmovnb
sbb
call
pop
sbb
loop,pt
sbb
sbb
sub
sbb
les
jl
aas
stos
ss
lahf
xor
fidivs
pop
loop
icebp
sub
icebp
xor
sbb
pusha
push
jl
xor
test
idivb
cmp
add
mov
push
enter
call
in
cld
push
push
stos
jp
mov
jecxz
and
mov
shll
sub
fnsave
cli
jae
sub
arpl
addr16
enter
dec
ja
push
jno
pop
jnp
cld
movsl
out
inc
sidtl
sub
je
clc
mov
mov
add
adc
adc
or
push
enter
xor
in
add
cld
add
add
cmp
inc
ds
jl
jmp
push
out
push
into
push
jle
outsb
xchg
shlb
sbb
jbe
xchg
pop
imul
jge
rcr
mov
fiadds
in
or
scas
sbb
scas
dec
aad
adc
mov
sub
cmpsl
xor
pop
sahf
orl
mov
enter
fstpt
filds
rolb
shlb
shrl
xchg
rcl
shlb
stos
or
test
repnz
lock
enter
fcmovb
jecxz
mov
fidivs
pop
lods
nop
pop
adc
popa
adc
jbe
out
or
roll
fucomi
add
fiaddl
mov
lock
mov
inc
jp
dec
jp
aaa
jle
and
gs
insl
mov
jp
inc
jp
sub
cmpsb
bound
pop
divb
stc
lcall
jae
out
push
mov
pop
dec
rcrl
cmp
hlt
inc
das
fiaddl
popl
pushf
and
pushf
ljmp
pop
lds
mov
imul
sub
ret
ret
lds
xchg
jge
push
frstor
mov
push
mov
and
inc
sub
lret
cli
xor
cmp
adcb
xchg
fs
ret
push
fcom
pop
fsubr
test
mov
xchg
dec
mov
pop
jno
pop
push
fistl
adc
data16
ret
arpl
dec
and
or
repnz
aad
pop
fldenv
xchg
iret
pop
pop
cmpl
ja
jno
adc
inc
leave
fcmovnu
rcr
mov
xchg
cmpsb
daa
cmp
sub
adc
mov
lahf
and
lahf
xchg
ret
mov
jae
pusha
jns
push
and
inc
sbb
mov
sti
into
fstp
test
mov
mov
mov
dec
inc
xchg
or
ss
daa
add
sub
jecxz
repnz
out
in
orb
pop
stos
xchg
add
pop
sbb
ljmp
subb
mov
push
cmpsb
ljmp
push
xchg
mov
es
or
int3
jle
push
popa
xorl
xor
adc
out
mov
repnz
addr16
adc
icebp
mov
jbe
ret
dec
jp
icebp
mov
icebp
test
hlt
test
test
repnz
and
dec
insb
leave
insb
imul
sub
mov
outsb
cld
in
ficompl
fimull
add
or
jo
arpl
fisubrl
and
jmp
js
push
stos
out
pop
mov
enter
push
cmc
sbb
inc
ret
ret
lds
sub
ret
fsubrs
das
jno
xlat
pop
ds
inc
sbb
mov
leave
sub
jl
out
nop
jmp
lods
subb
xor
xor
adc
aaa
pusha
push
ret
idivb
mov
add
mov
test
fsubrl
sbb
test
loopne
insl
jecxz
cld
sub
lea
lea
fdivrs
ror
and
mov
sbb
lock
jae
stc
jae
push
ja
addr16
adc
ror
xchg
enter
push
adc
loop
jp
in
mov
add
cmp
inc
fiaddl
fisttpll
adc
sub
pop
inc
adc
dec
popa
pop
enter
incb
in
add
imul
outsl
cld
test
mov
xchg
inc
cmp
jb
mov
push
jge
outsb
mov
jno
rcrb
int3
inc
push
rcrb
aad
push
cli
fstpl
add
les
out
mov
sub
dec
sub
dec
xor
lcall
in
xlat
mov
fisubrl
shl
loop
push
ret
shlb
jmp
ficoms
xlat
lcall
aad
pslld
icebp
or
cmpsb
enter
jecxz
fsub
fidivl
lret
pop
rorb
out
pop
ret
jmp
push
shr
push
ret
cli
or
cli
inc
enter
decl
popa
sub
and
xchg
add
sbb
js
cmpsb
pop
test
or
lcall
outsl
mov
jb
jmp
mov
cmp
in
dec
dec
push
fiaddl
frstor
leave
inc
aad
push
fcomps
cwtl
in
pop
arpl
pusha
mov
jmp
push
sub
loopne
cld
les
ret
jl
push
popa
push
mov
push
mov
sbb
sub
lret
adc
out
orb
addl
xchg
fs
outsl
addr16
fsubrs
jae
roll
xchg
cltd
lcall
daa
sbb
pusha
out
and
cmc
bound
dec
xor
dec
aad
dec
aad
and
lret
xchg
jge
jno
pop
jno
sub
ds
iret
fisttps
fbld
test
sub
out
ds
add
lahf
xchg
xlat
mov
jne
push
js
push
aaa
call
sbb
sti
sti
test
sbb
aam
popf
xchg
inc
mov
dec
daa
dec
push
daa
add
sub
out
fldl
jecxz
mov
mov
xchg
cmp
xchg
add
push
push
and
daa
xchg
rclb
andb
movsl
ljmp
adc
mov
les
les
pop
andl
xor
test
and
out
mov
icebp
mov
mov
sub
mov
mov
jbe
pop
jns
icebp
pcmpgtb
test
repz
mov
inc
mov
insb
fcmove
insb
imul
cmp
and
and
adc
outsb
fidivl
fimull
cld
fmull
arpl
arpl
out
daa
and
jmp
ja
push
std
in
push
lods
jb
lods
icebp
fsubrl
sbb
inc
ret
ret
fcmovnb
inc
faddp
insl
pop
insl
pop
inc
jo
ds
ds
inc
sbb
mov
enter
cs
movsb
call
stos
xor
xor
xor
push
xor
xor
pusha
push
movsb
bound
not
sbb
mov
fs
add
xchg
sbb
stos
sbb
adc
arpl
inc
data16
mov
decb
and
jl
rcr
and
mov
xor
cmc
jae
clc
jae
push
jbe
arpl
adc
xchg
insl
gs
enter
dec
in
lret
and
loop
jns
cld
int
cld
inc
aaa
incl
push
dec
inc
ficompl
fmull
adc
sub
pop
ja
pop
push
pop
pusha
push
enter
pop
lret
adc
in
dec
out
cld
sub
incb
lret
jmp
cmp
jns
in
jns
jl,pn
outsb
mov
jno
scas
sbb
int3
pop
imul
fimull
aad
push
push
fldl
les
scas
dec
std
mov
sub
dec
sub
pop
das
movsl
pop
bound
sahf
mov
mov
xlat
cmp
fnstcw
pop
aas
rcl
ret
out
aam
fdivrp
cmpsl
ficoms
or
cmpsl
psubsw
repnz
sbb
jecxz
in
in
mov
fnsave
pop
aam
pop
adc
pop
adc
jl
out
xor
out
add
add
add
ret
cli
inc
fdivr
inc
jp
dec
jp
pop
jl
and
and
ds
movsb
jp,pt
inc
jp
push
jl
cmpsb
mov
divb
clc
lcall
jno
out
jnp
out
pop
shl
dec
stc
pop
dec
bound
inc
push
fadds
fldl
dec
xlat
pushf
ljmp
pop
addr16
pop
mov
mov
push
sub
ret
ret
les
mov
gs
mov
push
mov
dec
mov
sub
cmp
sub
andb
adcb
xchg
fs
andl
push
xchg
fcom
test
roll
xchg
cltd
cltd
pop
push
ret
push
sbb
cmp
and
and
or
dec
dec
xor
aad
das
xlat
jp
leave
jp
stos
jl
jno
pop
jno
cmp
inc
iret
fbld
rcr
mov
mov
sub
add
mov
pop
mov
lahf
mov
xchg
jmp
xchg
jne
xchg
jne
push
in
dec
out
sbb
ficompl
sti
lock
sti
test
xchg
mov
mov
push
lahf
xchg
dec
push
dec
daa
pop
push
daa
add
sub
out
icebp
add
jecxz
lock
mov
mov
stos
mov
xchg
dec
out
xchg
add
add
and
es
adcb
in
mov
adc
adc
xchg
mov
les
les
pop
cmpl
xor
test
cmp
out
mov
lock
lea
cmp
lock
jbe
les
jo
popa
icebp
and
test
xchg
inc
testb
dec
insb
out
insb
imul
adcb
and
and
and
outsb
fiaddl
fmull
arpl
arpl
add
and
jmp
jbe
push
adc
push
lods
xchg
icebp
lock
icebp
sbb
sbb
inc
ret
ret
ret
fcmovnb
push
ffree
insl
outsl
insl
pop
push
outsl
pop
lcall
in
aas
sbb
into
sbb
sub
sub
aas
stos
jb
stos
xor
lods
xor
xor
fbstp
icebp
xor
xor
xor
push
mul
pop
idivb
js
mov
test
add
add
sbb
and
loopne
xchg
loope
cld
pop
gs
mov
std
mov
mov
add
lock
mov
inc
mov
cmc
jae
divl
data16
arpl
adc
andl
add
dec
ja
push
ja
mov
jecxz
inc
dec
incb
fs
inc
fisubrl
fisttpl
adc
sub
pop
mov
pop
push
jb
push
enter
outsb
leave
in
add
imul
inc
insl
cld
test
std
test
xchg
fiadds
jmp
cmp
jns
in
jns
inc
jnp
outsb
iret
iret
outsb
sbb
jo
addr16
int3
insl
push
rcr
sbb
faddl
les
or
scas
push
lds
sub
dec
sub
jb
movsl
pop
jbe
pop
sahf
in
or
xlat
in
xlat
cmp
fdivrs
sbb
rcl
rcl
add
movsl
ficoms
cmpsl
ficoms
sbb
shll
jecxz
repnz
sub
enter
jecxz
add
fidivl
adc
pop
adc
pop
adc
nop
adc
out
pop
call
ret
ret
cli
inc
lock
inc
jp
dec
jp
jae
popa
and
and
jp
aas
jp
gs
cmpsb
mov
cmpsl
pop
test
negb
sbb
out
mov
pop
aam
pop
dec
or
push
inc
imul
aad
inc
aad
pop
pushf
ljmp
pop
add
mov
mov
jl
sub
mov
adc
jns
ret
jns
sarl
push
mov
jb
mov
popa
mov
sub
dec
cs
xorb
adcb
xchg
fs
xchg
gs
fsubrs
fcom
cltd
test
rolb
xchg
pop
push
xlat
push
sbb
dec
sbb
pusha
pop
and
sbb
xor
aad
dec
aad
inc
jp
enter
jnp
jno
pop
jno
push
jb
iret
inc
iret
fbstp
fbld
shll
cmp
pop
cmp
adc
lcall
jne
jle
in
pop
out
sbb
out
sbb
sti
test
sbb
cld
mov
dec
jle
dec
daa
jb
daa
add
sub
out
add
out
jecxz
lret
in
in
mov
in
xchg
add
xchg
add
add
and
es
es
xchg
subb
mov
push
mov
adc
xchg
mov
les
lds
pop
xorl
xor
dec
xor
mov
mov
push
push
mov
jbe
ret
jbe
test
icebp
aaa
test
mov
hlt
inc
inc
cmc
inc
mov
insb
add
insb
imul
and
and
ficompl
fisttpl
arpl
arpl
jne
and
jmp
and
push
lods
icebp
add
icebp
sbb
sbb
inc
ret
ret
ret
imul
insl
add
pop
imul
adc
add
sbb
loop
sub
out
int3
out
stos
xchg
xor
stos
xor
dec
xor
xor
fidivs
icebp
jp
icebp
xor
icebp
xor
xor
push
int3
pusha
push
idiv
push
idivb
mov
add
test
sbb
test
loopne
test
fs
mov
cld
mov
mov
adc
and
add
shll
pop
mov
cmc
jae
divb
jp
adc
adc
xchg
arpl
adc
dec
ja
int
loop
cmc
loop
inc
pop
std
inc
inc
js
inc
fcmovb
inc
fimull
push
mov
adc
sub
pop
lahf
adc
xchg
enter
incb
jmp
imul
cld
push
insb
cld
test
cld
test
test
repnz
cmp
scas
cmp
jns
jmp
into
push
jp
outsb
jecxz
outsb
sbb
outsl
sbb
sbb
andl
fidivl
rcr
push
fildl
les
les
sub
dec
sub
xchg
pop
sahf
add
sahf
mov
sahf
mov
clc
mov
cmp
fdivrs
das
cmp
shlb
daa
cmpsb
ficoms
xor
cmpsl
movups
repnz
inc
mov
jecxz
adc
fidivl
and
mov
mov
aam
adc
movsb
adc
out
out
add
out
ret
ret
ret
add
inc
jp
dec
jp
xchg
and
and
jp
jp,pt
jns
mov
mov
cmpsb
pop
jmp
pop
neg
pop
negb
sub
outsl
mov
outsl
mov
mov
out
pop
dec
and
mov
inc
jg
inc
aad
inc
aad
jo
pushf
ljmp
pop
addr16
mov
nop
mov
adc
ret
ret
out
arpl
arpl
xchg
inc
jne
inc
sub
bound
lret
orb
nop
call
nop
fs
stos
fs
fdivrs
fcom
lods
fcom
test
roll
lcall
push
jmp
sbb
arpl
and
and
xor
dec
jo
dec
aad
dec
aad
push
aad
jp
jp
sarl
jno
pop
jno
gs
iret
jp
iret
fisttps
fbld
in
daa
cmp
daa
cmp
sub
adc
mov
lahf
mov
lahf
xchg
adc
sub
add
inc
rolb
rolb
add
add
add
pusha
rolb
add
add
add
pusha
rolb
add
add
jb
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
