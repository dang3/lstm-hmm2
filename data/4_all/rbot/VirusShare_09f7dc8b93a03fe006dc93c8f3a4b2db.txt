push
add
push
mov
add
idivb
lea
push
incb
aas
pop
prefetchnta
pushl
add
aaa
push
adc
cmp
je
sti
orl
out
sbbl
push
push
push
cld
enter
jmp
or
in
lret
cwtl
sub
mov
mov
pop
pop
leave
ret
mov
mov
into
incl
push
push
lea
mov
add
push
fnstenv
ret
lods
out
inc
add
test
xchg
lock
jne
pop
pop
clc
pop
imull
rol
cmpsl
sbb
call
add
and
pushl
add
lock
mov
int3
je
add
inc
or
jne
inc
xchg
loop
push
fnstcw
sub
add
inc
test
decl
call
add
jmp
cmp
sarb
push
jbe
cmp
fcomps
push
repz
push
stc
insb
inc
fildl
scas
and
pushf
sbbl
into
push
inc
adc
or
push
add
and
iret
dec
add
or
shrl
add
or
shll
add
cmp
aad
add
sub
xlat
pop
add
sub
fstps
add
sub
fcompl
add
lar
dec
add
inc
add
push
add
add
loop
push
jecxz
and
adc
in
and
cmp
out
and
or
ljmp
xor
and
push
add
dec
add
cmp
icebp
adc
repnz
add
pop
add
aaa
add
sbb
notl
clc
sub
stc
sbb
adc
pop
mov
cld
call
mov
inc
enter
nop
add
sbb
xor
sbb
adc
es
test
shll
pop
adc
je
xor
inc
adc
adcl
mov
out
sbb
mov
cmp
icebp
jb
mov
icebp
sub
dec
mov
lea
lret
and
inc
mov
adc
sarb
and
mov
pushf
xchg
adc
or
andl
sub
clc
dec
mov
pop
pop
mov
stos
or
fmuls
aas
mov
mov
mov
loopne
mov
out
xor
inc
adc
push
sbb
pop
movsb
adc
jb
xor
sbb
jns
dec
fcmovbe
or
and
or
cmp
movsl
arpl
loopne
fnsave
push
mov
pop
push
mov
xor
lock
push
cmp
or
inc
xchg
lods
pop
push
sbb
sbb
iret
push
popa
movsb
mov
movl
outsb
fsubrs
or
sbb
mov
test
or
jecxz
outsl
movsb
jnp
std
es
sub
push
lds
shlb
test
xor
adc
sbbb
sbb
in
fwait
push
hlt
or
inc
adc
xor
test
rcrl
mov
or
sub
mov
enter
scas
jbe
push
xorb
xchg
pop
push
and
loop
clc
daa
imul
xor
cs
xchg
insb
sbb
punpcklwd
mov
test
sub
adc
sub
push
call
mov
push
repz
lea
and
add
je
push
sub
mov
fwait
or
mov
aad
daa
xor
adc
sarb
sti
je
push
lock
mov
in
enter
test
sbb
or
mov
adc
popa
or
or
inc
and
lock
call
or
popa
mov
jge
nop
les
je
adc
fs
mov
xor
jae
xor
js
and
lock
adc
pop
adc
push
or
addb
jne
or
add
or
xor
insb
sub
push
shrb
cwtl
dec
jle
sbb
and
jge
sub
sub
sub
cwtl
xor
test
mov
lods
int3
inc
mov
xchg
or
shlb
cmp
movsb
sbb
sub
or
inc
fdivl
mov
lret
xchg
arpl
sub
or
int3
les
js
arpl
les
push
test
adc
outsl
or
pusha
nop
push
aam
inc
or
xchg
jp
push
adc
dec
xor
sbb
and
sbb
nopl
mov
and
or
in
xor
addr16
sub
push
les
js
clc
xor
inc
cwtl
and
adc
xor
mov
test
and
push
cmp
and
cmovl
adc
test
add
adc
call
test
daa
dec
popa
fs
and
dec
pop
inc
inc
roll
sub
bound
cmp
dec
dec
or
dec
or
rol
jl
aam
nop
or
mov
sub
nop
jl
jo
or
loop
shl
xor
loop
and
dec
dec
scas
mov
leave
das
std
jp
sahf
into
inc
pop
inc
sub
shlb
sub
out
call
xor
nop
or
aam
and
lods
je
dec
or
rclb
out
add
je
inc
in
dec
inc
int3
and
aam
adcl
or
popa
inc
lret
fs
jno
sub
sub
ret
sub
out
orb
mov
fs
xor
je
or
int
enter
adc
loopne
xor
sbb
dec
dec
call
and
xchg
xor
or
xor
test
xchg
and
xchg
mov
xchg
mov
xor
lret
sbb
or
mov
and
or
push
sbb
jo
sbb
sbb
and
and
pushf
bound
mov
inc
inc
and
les
je
lahf
adc
sbb
sub
or
sbb
test
xor
adc
enter
xor
movsb
and
xor
movsl
cmp
dec
or
fs
mov
adc
sbb
or
test
sbb
bound
fmul
and
or
inc
imul
pusha
inc
pop
or
dec
or
mov
cmp
inc
cmp
inc
adc
test
sub
insb
xchg
push
pushf
lret
push
hlt
adc
xchg
nop
lock
lret
or
inc
and
movsl
call
mov
pop
bound
and
out
inc
or
subb
or
mov
or
mov
jbe
cmp
jno
xor
pop
xchg
mov
test
xchg
mov
sbb
add
test
call
call
sbb
sbb
das
mov
dec
and
testb
mov
adc
adc
lds
rcll
adc
cwtl
incl
int3
mov
sbb
jo
aaa
mov
adc
adc
sbb
or
mov
cmp
adc
mov
int3
fs
mov
or
xchg
and
fs
addr16
inc
or
lret
inc
pop
or
or
inc
dec
sbb
lret
jnp
sbb
mov
add
or
or
dec
rolb
loope
gs
pop
dec
inc
test
adcb
test
out
cli
fcoms
movsb
mov
adcb
push
adc
movsl
dec
lahf
and
xor
or
iret
push
and
notb
push
inc
push
and
jge
dec
nop
pusha
enter
je
xchg
sub
inc
xor
lock
cwtl
inc
movsb
push
adc
lret
inc
cld
movsl
dec
inc
movsb
xor
jl
fsub
lock
dec
cmc
mov
xchg
fisubl
dec
inc
lret
and
xchg
add
xor
jae
les
mov
inc
dec
cmp
inc
and
es
and
out
fmul
xor
mov
mov
mov
jne
add
pop
pop
pop
ret
push
mov
or
xor
idivb
xor
jge
je
sub
pop
push
mov
add
test
push
call
push
adc
push
xchg
push
movsb
lods
pop
test
xor
push
sbb
mov
or
pop
nop
pop
loop
sbb
div
jb
cmp
aam
xor
insb
jno
or
inc
std
mov
je
or
inc
enter
inc
js
jl
inc
and
xchg
pop
daa
or
adcb
or
repz
cmp
lods
mov
xchg
jno
or
inc
cld
mov
and
mov
movsb
cmp
and
test
lods
les
arpl
aam
sub
lock
adc
jne
jno
call
mov
adc
push
xchg
inc
push
popf
cmp
jge
mov
jle
divl
sbb
add
test
int3
je
arpl
inc
loopne
daa
jo
add
sbb
in
sbb
sbb
divb
call
xor
imul
or
and
lods
leave
jne
sar
jle
mov
and
rorb
sub
ret
add
add
rcrb
lock
pop
push
push
sub
sbb
daa
sub
or
ret
mov
out
aam
adc
test
je
call
mov
sbb
and
ret
subb
faddl
push
mov
lods
pop
inc
arpl
mov
lock
inc
sub
shrl
and
or
pop
push
push
sub
jmp
scas
cli
dec
out
or
sub
clc
call
mov
push
test
stc
adc
adc
xchg
aam
bound
xchg
xchg
sbb
push
enter
imul
and
imul
and
cld
xchg
ret
cmpb
cmp
jbe
out
pop
add
cmpsb
loope
inc
add
mov
rclb
push
pop
mov
mov
mov
adc
aas
movzbl
repz
repnz
icebp
adc
inc
sahf
hlt
sub
int
rcrl
xor
std
fiaddl
or
dec
inc
lods
add
test
push
shr
jns
neg
lea
inc
push
sysret
mov
add
inc
adc
negb
jmp
and
test
pop
je
add
and
mov
jmp
jg
call
mov
movsl
or
inc
test
cld
data16
enter
cmp
sub
or
int
fmuls
mov
add
add
out
push
stc
cmp
sbb
mov
mov
test
call
mov
or
in
inc
xor
test
adc
pushf
pop
adc
xchg
pop
fs
cmp
mov
pusha
icebp
hlt
add
sarb
div
mov
inc
adc
dec
jecxz
in
enter
adc
xor
fistpll
loopne
push
xchg
mov
jno
push
inc
pop
cmp
in
ds
notl
dec
cmp
adc
ret
jne
mov
push
adc
jge
cmp
and
cmpsl
int3
loop
adc
daa
into
shlb
adc
xor
cmp
and
adc
ds
or
xchg
rcpps
dec
add
push
loop
orb
bound
sbb
es
sub
ss
sbb
inc
xchg
push
loope
lods
mov
je
add
lcall
and
mov
stc
push
orb
popa
mov
test
and
clc
sub
mov
push
jne
testl
incb
lret
je
dec
es
fistpl
or
int3
xor
mov
icebp
cmp
cmp
movsl
sub
xor
pop
and
and
jmp
je
call
and
push
jb
push
add
add
test
mov
pop
push
and
push
jne
mov
xor
dec
mov
addr16
dec
popw
in
xor
dec
mov
in
cld
adc
inc
adc
in
vmread
push
outsl
jo
aaa
jmp
jo
push
push
shr
sub
xor
ficoms
mov
inc
leave
push
mov
cmpl
jle
xor
add
mov
lcall
movups
or
out
sbb
sbb
mov
or
push
or
lahf
pusha
daa
sub
aad
lcall
cmp
mov
cmp
fimull
add
into
mov
and
ds
pop
xchg
dec
pop
mov
xchg
loopne
cmp
adc
jl
fildl
jo
push
imul
dec
mov
sbb
push
push
jne
cs
cli
enter
arpl
mov
subb
insb
sub
hlt
sub
addl
js
int3
sbb
pop
cmp
mov
or
add
cs
stos
pop
mov
dec
call
mov
mov
jo
sbb
imul
mov
ret
call
and
sbb
mov
les
dec
inc
scas
clc
add
inc
lock
add
je
jmp
dec
mov
cld
push
cmpl
jl
sbb
add
or
hlt
je
popf
inc
lcall
lea
enter
jmp
ss
sbb
inc
and
add
cwtl
loop
xor
pop
hlt
inc
mov
and
fsubl
pop
add
rcrb
ret
int3
outsl
nop
inc
add
or
pop
lcall
and
movsl
movl
xchg
cli
stos
icebp
or
shrb
lcall
and
scas
or
or
mov
sbb
aam
jo
adc
pop
mov
xor
clc
or
int3
imul
es
lcall
jb
icebp
sub
fwait
adc
or
push
jp
orb
in
mov
or
xchg
jg
jmp
pop
dec
xor
repnz
dec
adc
movnti
xor
mov
jo
rcrb
hlt
sbb
dec
inc
negb
pop
into
test
fdivl
jmp
jne
cwtl
in
cmp
sbb
je
or
shrl
mov
call
pop
mov
inc
add
mov
mov
xor
fldt
cmp
enter
pop
mov
add
mov
bound
add
repnz
ffree
scas
fisttps
dec
test
test
adc
sub
xor
xor
icebp
lea
bound
xor
dec
sub
shrl
dec
adc
movsb
adc
adc
cs
mov
cmp
dec
adc
int
cmc
mov
sti
jecxz
iret
xchg
add
dec
mov
mov
cs
xor
lret
mov
sti
inc
xchg
sub
mov
or
or
call
dec
nop
out
or
repz
push
movb
mov
and
sbb
test
cli
push
rcrb
cmp
jl
cs
add
jecxz
push
sbb
mov
mov
lods
stos
jge
and
pand
or
dec
add
out
cmp
lcall
cld
sbb
inc
call
sbb
pop
enter
sbb
test
mov
sbb
and
or
mov
movsb
push
pop
push
and
jge
push
adc
push
loopne
pop
xor
movsb
mov
rclb
test
inc
sub
repz
xor
xchg
lea
pop
push
mov
add
add
aam
jmp
mov
rolb
cmp
adc
repnz
adc
negb
ret
in
xchg
pop
loopne
mov
and
cmp
add
lcall
sbb
test
push
xchg
add
dec
sub
cmp
jge
push
cmp
inc
loopne
inc
push
and
sub
add
cmpb
in
xor
sub
hlt
mov
mov
lcall
call
push
adc
and
pop
pop
icebp
push
cmc
jl
int
inc
or
mov
dec
push
or
cmc
loope
loopne
sub
test
push
aam
or
movsb
aaa
mov
scas
jl
cld
inc
hlt
push
adc
inc
jge
sub
or
test
add
push
push
mov
lea
call
je
inc
sub
subb
cmpsl
mov
jo
adc
fcoms
add
int3
test
mov
jmp
cli
dec
jle
cmp
mov
leave
jb
pop
push
or
inc
es
pop
loopne
nop
jno
lea
jne
ftst
mov
inc
sbb
rcl
ret
inc
sub
push
cmp
mov
xchg
out
jns
test
or
jl
sub
sub
inc
dec
adc
push
fwait
dec
cmpsb
ror
bound
mov
xchg
sbb
pop
mov
mov
mov
push
pop
push
pusha
pop
xchg
fildll
adc
test
loopne
adc
dec
sub
mov
push
inc
out
in
mov
inc
inc
repz
popa
pop
sub
inc
lret
lds
and
push
inc
cmp
sbb
and
push
pop
jle
movb
push
inc
stos
and
sub
push
sub
imul
sub
dec
or
mov
push
cwtl
push
insl
rcll
or
sub
lds
adc
and
xorl
jge
and
idivb
pop
je
pop
sahf
xchg
int3
arpl
shlb
mov
jl
fucomp
or
enter
imul
pop
adc
shll
loope
adc
dec
jle
sbb
shl
pop
cmp
adcb
sbb
sahf
add
sub
cwtl
call
andl
push
addr16
loop
icebp
movsl
lea
and
lds
adc
int
add
dec
mov
jo
xchg
test
mov
add
push
or
loope
nop
sbb
mov
mov
out
and
or
dec
js
xor
or
pop
lea
inc
inc
inc
adc
gs
mov
push
inc
cmp
dec
xchg
daa
andl
pushf
or
test
and
movsb
adc
fsubs
mov
ja
and
adc
test
dec
mov
inc
or
add
xchg
mov
adc
pop
in
cmp
mov
mov
or
or
sub
push
inc
add
add
pushl
mov
pop
sbb
repz
ror
and
inc
xor
sub
pop
jmp
sub
and
movsb
sbb
adcb
add
inc
inc
or
cs
push
ret
addl
ss
sbb
push
or
clc
adcl
jne
mov
and
popa
fdivl
push
push
and
push
pushf
push
jg
jo
inc
or
and
push
imul
push
pop
adc
inc
pop
imul
dec
fisttps
xor
out
test
adc
ljmp
sbb
pop
mov
nop
mov
popf
mov
xchg
imul
sub
nop
push
push
mov
mov
das
repnz
sbb
std
add
dec
or
cli
cwtl
cs
cmp
shl
add
xlat
jmp
dec
fildll
shl
cmp
ret
jae
lcall
arpl
and
mov
and
aas
and
mov
nop
cmp
loopne
push
out
cli
test
in
and
ret
add
test
mov
mov
fmuls
xor
dec
pusha
ret
test
push
mov
iret
popa
jmp
mov
inc
mov
adc
xor
cmp
call
sbb
gs
daa
bound
pop
aad
jnp
pop
outsl
dec
out
push
lock
mov
fdivs
test
dec
in
ret
cmp
adc
pop
jnp
popa
push
sbb
push
jge
sbb
mov
shl
test
push
mov
or
test
push
ds
adc
or
inc
adc
pop
push
jno
inc
jmp
cwtl
lea
jo
pop
cmp
sub
stc
dec
aas
xchg
xor
gs
in
or
and
push
mov
arpl
ja
adc
dec
sub
and
and
pop
xor
imul
mov
sahf
add
bswap
out
call
out
adc
lahf
or
cmp
jmp
das
dec
cwtl
pusha
mov
xchg
imul
clc
fimuls
lcall
movlps
mov
or
jo
movsb
xchg
inc
cs
sbbl
icebp
push
mov
xlat
in
dec
mov
loopne
mov
int3
inc
mov
pop
cmp
dec
mov
push
push
mov
lods
fs
xor
jo
jl
sub
sbb
inc
mov
orl
sub
cmp
jne
in
sub
cmpsb
cwtl
add
or
mov
test
andb
stc
dec
sub
insl
adc
add
inc
mov
enter
adc
clc
out
dec
and
cmp
test
inc
sbb
adc
push
or
out
inc
pop
jg
push
test
and
xchg
lods
inc
pop
and
xor
jge
push
movsl
sub
xchg
push
dec
or
js
adc
and
adc
xor
orl
push
inc
mov
test
in
je
scas
xor
add
scas
xor
push
movsl
rorb
call
push
pop
and
cmpb
movsb
or
add
sub
or
in
dec
mov
lods
adc
std
mov
mov
repz
test
pusha
std
stc
add
mov
sub
adc
call
sub
or
fcoms
and
pop
inc
push
rolb
add
and
xchg
xchg
mov
cld
lret
jmp
xor
insb
adc
push
sbb
push
into
fistpl
adc
mov
add
out
and
mov
pop
adc
test
call
pop
push
xchg
and
sbb
mov
cmp
xorb
sldt
mov
sbb
outsl
test
push
dec
push
aaa
adc
mov
pop
aaa
and
and
xchg
adc
out
or
inc
pushf
and
push
inc
push
adc
dec
and
fs
inc
adc
push
mov
pusha
and
dec
adc
inc
mov
and
gs
sbb
push
test
and
push
inc
js
xor
es
sbb
adc
and
out
xor
int3
or
test
dec
shl
jne
pop
clc
or
or
or
fwait
subb
enter
pop
repz
les
jge
adc
jbe
sub
push
sbb
and
and
xchg
and
inc
mov
or
push
dec
adc
or
imul
and
repnz
add
xor
inc
sbb
and
in
mov
pop
and
nop
fs
push
repnz
and
adc
push
xor
push
or
sahf
fsubs
dec
adc
sub
hlt
adc
add
dec
and
adc
push
adc
or
dec
push
sub
adc
in
inc
adc
and
push
adc
sbb
sub
push
aad
test
insb
pop
adc
sub
push
das
call
mov
inc
and
test
push
push
test
push
push
test
jbe
or
rolb
and
mov
int
adc
pop
push
sub
clc
and
push
pop
and
push
and
lods
aas
mov
dec
adc
and
ret
push
pop
xorl
lock
sbb
jnp
jg
adcl
xor
inc
sub
adc
and
sub
jnp
inc
in
sub
popa
in
or
clc
dec
xor
add
pop
and
insb
adc
sbb
sub
sub
inc
sub
xlat
loop
add
cmp
ret
or
stos
push
adc
adc
xor
xchg
and
push
xor
pop
icebp
and
enter
mov
inc
xor
nop
adc
xchg
and
pop
or
call
adc
loop
nop
inc
scas
adc
lret
cltd
and
adc
or
dec
adc
or
nop
sbb
fs
popa
sub
inc
adc
jo
dec
mov
sbb
aaa
test
and
or
enter
push
in
aaa
add
dec
jecxz
out
test
and
shlb
sub
mov
xor
pusha
test
enter
and
inc
xor
adcb
jne
mov
jge
sbb
mov
jbe
lgs
fldcw
fdivl
push
xchg
jg
sub
stc
testb
jmp
rorb
adc
adc
test
fbld
clc
bound
and
sub
xchg
and
mov
pusha
adc
mov
sub
xchg
and
adc
int3
mov
fmul
adc
or
push
inc
and
adc
xchg
cld
or
jno
pop
and
and
add
and
nop
inc
test
fisubrs
inc
or
mov
sbb
or
test
scas
sub
xchg
pop
mov
mov
dec
nop
mov
sbb
outsl
test
pop
sub
xchg
and
push
xor
xor
and
pop
jmp
and
fs
enter
mov
jmp
ljmp
in
push
in
sub
mov
or
dec
sbb
ljmp
cmpsl
lret
mov
sub
jmp
add
jo
out
inc
cmc
xor
add
pop
fcomps
push
xor
sahf
push
into
rorb
loop
pop
les
pop
aam
xor
jl
push
push
std
inc
mov
pop
sbb
pop
adc
xchg
lods
and
push
pop
mov
push
call
adc
push
mov
inc
inc
lods
fiadds
xor
ret
leave
or
jmp
pop
inc
stos
fsubrl
std
or
inc
mov
and
testl
test
ret
fs
adcb
pop
and
adc
or
sbb
jl
add
pop
test
adc
mov
or
push
push
mov
inc
les
scas
test
and
cmp
and
jp
pop
mov
into
es
push
inc
pop
xor
jo
push
inc
enter
pop
inc
jmp
call
cmp
lods
jmp
test
jae
push
int3
and
or
xchg
test
and
fimull
jne
jae
mov
push
jmp
add
lret
cmp
and
inc
mov
test
lods
int3
mov
call
int
jmp
mov
cld
adc
icebp
popf
mov
xor
adc
rclb
mov
mov
es
mov
sub
inc
test
bound
icebp
sarb
icebp
test
dec
xchg
pop
es
aaa
sbb
stos
or
sub
mov
push
ret
inc
or
sbb
xor
push
and
or
sbb
add
enter
sbb
add
sarl
push
int
je
clc
rcrb
lock
test
js
sar
sub
push
sbb
and
mov
cmpsb
je
push
mov
and
testb
inc
fmul
xor
cltd
lret
inc
movl
jmp
inc
repnz
shl
mov
mov
pop
sbb
adc
sbb
lahf
pop
pop
rclb
jmp
mov
mov
testb
add
test
push
out
push
adc
mov
xlat
add
popf
add
in
inc
les
push
inc
pop
add
sti
mov
jle
cmp
sbb
movb
ds
test
inc
das
addb
mov
iret
test
test
xor
mov
fcomps
adc
mov
dec
daa
xchg
dec
andb
or
xor
outsb
mov
les
and
popa
rcrb
and
xor
push
pop
repnz
movsb
xchg
movsb
fwait
enter
or
sbb
test
inc
adc
cmp
xorb
inc
clc
test
inc
xchg
adc
les
and
mov
mov
das
sub
sub
xorl
or
jno
mov
in
mov
pop
add
and
lods
pop
sub
cmp
sbb
fisubs
bound
pop
rcll
pop
repnz
ja
and
repz
leave
lret
push
jns
rorl
or
daa
push
sub
rolb
and
popf
mov
xchg
pop
stc
jae
sub
sbb
dec
repz
add
int3
pop
and
adc
subb
mov
test
lods
shrb
push
rcrl
ds
adc
rcrl
add
sti
pop
lods
add
or
clc
lret
or
std
roll
push
adc
dec
adc
cmp
xor
and
sete
and
inc
je
xchg
test
push
nop
xchg
into
fldcw
sub
push
stc
rclb
cmp
mov
inc
call
cmp
push
jmp
add
sbb
pop
in
pop
int
pushf
xor
mov
sub
inc
lds
lods
mov
out
dec
cld
and
dec
push
adc
pop
test
sub
lret
and
adc
mov
add
mov
adc
adc
mov
inc
cs
sbb
call
bound
xchg
mov
push
push
jmp
mov
jno
xor
or
xor
dec
mov
inc
movsl
into
mov
stos
fcmove
inc
adc
test
mov
xchg
dec
push
dec
enter
out
movsl
jno
add
sbb
sub
inc
out
pop
push
nop
jb
sbb
or
push
cmc
rorb
adc
or
out
or
out
mov
xor
ds
adc
out
sar
outsb
lock
shlb
not
inc
out
inc
xchg
inc
push
out
push
gs
daa
add
sbb
call
add
add
mov
add
call
mov
lock
mov
jae
inc
jns
loopne
in
or
jmp
xor
mov
das
rcll
push
cld
pop
lea
push
mov
imul
out
imul
jmp
or
jnp
fs
mov
push
add
cs
clc
fnstsw
fs
push
pop
movsl
test
or
cmpsl
iret
rorb
mov
sbb
nop
sbb
int
sbb
or
adc
sub
dec
push
dec
loope
and
out
pop
int
popl
push
mov
cmp
jae
addl
pop
ret
xchg
mov
sub
adc
and
bound
adc
push
xchg
movsb
test
push
pop
fcoml
add
call
pop
sub
mov
and
inc
out
sbb
lcall
hlt
les
lret
xor
loop
arpl
pushf
popf
ret
sbb
enter
push
xor
scas
or
push
mov
cmc
sbb
js
push
adc
leave
mov
lods
push
mov
and
shl
call
cmc
rol
cmc
adc
push
xchg
rcrb
jne
push
inc
mov
and
mov
push
rcl
mov
and
push
out
inc
or
mov
add
test
fs
stos
movsl
mov
movb
xchg
test
adc
jmp
sub
push
bound
sub
inc
bound
fcoms
sub
sbb
sbb
cltd
das
sahf
adc
fistl
mov
insb
ljmp
sub
daa
js
shll
mov
lret
adc
mov
leave
js
mov
jmp
hlt
repz
les
enter
and
in
ljmp
xchg
inc
in
ljmp
mov
test
in
iret
mov
dec
aaa
call
and
push
mov
push
es
or
enter
push
xor
int
pop
mov
push
jbe
hlt
dec
fldcw
add
push
test
or
les
add
pop
jno
hlt
or
mov
js
hlt
xchg
hlt
adc
sub
ds
dec
mov
jg
push
pushf
sbb
mov
mov
cmovnp
inc
nop
enter
xor
jmp
addr16
xor
bound
or
sub
push
test
punpckhbw
dec
adc
inc
ljmp
xchg
mov
pop
pop
in
mov
inc
dec
enter
dec
and
and
adc
sbb
ja
lret
dec
mov
pop
push
adc
bound
xchg
push
popa
or
inc
jl
and
mov
xor
push
subl
in
xlat
add
push
and
sub
dec
or
enter
xor
push
and
daa
adc
and
pop
and
adc
and
lea
jmp
mov
andb
jns
dec
cmpb
xor
loopne
das
cmpsb
mov
movaps
scas
dec
xor
adc
xchg
or
xor
cmp
xorb
mov
ret
adc
fdivr
mov
dec
shlb
inc
test
adc
pushf
mulb
fnstcw
in
add
or
and
sbb
mov
sbb
test
add
imulb
xchg
std
or
xor
push
int
mov
sub
xchg
leave
icebp
loop
dec
adc
jmp
movsl
push
adc
adc
pop
mov
or
and
mov
rcrb
sar
dec
mov
mov
scas
leave
popa
je
nop
and
dec
add
lock
sub
sahf
jecxz
xchg
push
insb
cmc
test
push
cmp
add
hlt
ljmp
jb
icebp
adc
movsb
pop
scas
bswap
fidivrl
mov
adc
sub
jno
in
cmc
or
loopne
in
cmc
push
test
cmc
daa
lds
into
addb
insb
push
sbb
add
dec
dec
sbb
cmp
fimull
or
and
ss
add
les
addl
add
mov
int3
enter
pop
cmp
lea
je
mov
es
repz
popa
mov
adc
inc
nop
adc
mov
mov
push
enter
push
loop
inc
jno
out
dec
lods
leave
adc
inc
xor
cmp
jl
bound
cmp
stc
ret
test
lahf
nop
push
mov
test
adc
push
inc
je
push
sub
pop
imul
xor
pop
gs
xor
nop
pop
mov
sarl
mov
push
adc
adc
shl
add
mov
xchg
shl
adc
test
jmp
push
sti
sub
sbb
xor
stos
movl
xor
cmp
dec
dec
rol
adc
and
pusha
pop
adc
dec
out
xchg
xchg
popf
xchg
add
leave
sbb
outsb
cwtl
push
and
or
pushf
push
repnz
pop
push
adc
in
ja
cmp
push
lds
call
inc
fpatan
sbb
sub
lds
scas
dec
mov
push
push
jle
into
push
pop
and
xchg
fdivrp
mov
in
cmp
and
test
aaa
cmp
cwtl
pop
jg
cmpsl
loope
out
and
lds
cmp
dec
test
adc
pusha
mov
cmp
xchg
pop
sti
dec
mov
adc
adc
mov
ficoms
fcomip
aad
stos
dec
sbb
sub
push
cld
pushf
dec
jne
cmp
je
popf
in
xor
mov
repnz
mov
js
iret
pop
push
mov
nop
and
sbb
cmp
aad
scas
lret
mov
mov
mov
or
mov
mov
pop
dec
test
stos
les
mov
inc
or
or
in
dec
rcrb
pop
xor
fidivrl
inc
push
pop
xor
pop
push
enter
xor
xor
mov
inc
sbbb
outsb
movups
push
mov
adc
ret
xchg
add
and
jbe
aas
incl
add
push
jne
popa
xchg
and
dec
xor
mov
and
fs
xchg
mov
enter
sub
xchg
out
sub
and
cmp
push
push
inc
shlb
adc
fcmovnb
outsl
and
sbb
sbbl
xor
es
add
jmp
aam
cmp
sub
add
cmp
mov
xchg
and
aas
inc
clts
idiv
mov
dec
call
jo
jbe
mov
cmp
test
aas
sarb
shl
push
ss
xchg
inc
gs
stos
cmp
dec
mov
adc
and
and
xchg
test
in
xchg
dec
int
orb
test
xlat
push
lods
aaa
enter
sbb
adc
mov
ficoml
jae
daa
ja
inc
dec
enter
jbe
jo
les
push
dec
and
or
push
and
jp
push
add
test
xchg
push
or
and
fs
sbb
bound
lcall
hlt
inc
clc
mov
test
test
jo
inc
cs
lret
pop
xchg
push
sbb
inc
sti
or
push
cmp
push
popa
loope
bound
cli
inc
mov
test
xor
inc
inc
and
or
mov
pop
mov
loop
pop
hlt
arpl
push
and
jb
fisttpl
jmp
idivb
clc
out
and
inc
dec
mov
sub
inc
xchg
mov
scas
jne
dec
fcoms
cmp
lret
loope
mov
dec
mov
mov
dec
sbb
pop
mov
in
pop
sub
in
xor
add
fisttpl
xchg
lods
dec
stos
cmp
cmp
inc
dec
and
inc
cmp
movsl
lret
sbb
dec
out
bnd
icebp
mov
or
aam
or
movsl
sub
cs
icebp
mov
mov
repnz
dec
and
or
movsl
cmp
movb
test
sarl
or
mov
add
inc
dec
shll
mov
inc
inc
dec
fistl
pop
mov
and
xchg
movsb
aaa
mov
cmp
mov
insl
push
and
dec
adc
ss
int3
inc
arpl
sub
jge
test
arpl
jmp
xchg
push
dec
pop
push
and
les
lock
xchg
xor
and
add
cmp
inc
sbb
mov
js
and
bnd
xchg
es
lret
repnz
sub
inc
mov
xor
or
mov
mov
jg,pt
add
mov
fs
push
push
xchg
add
jge
les
and
mov
ds
mov
add
xchg
fcoms
data16
cmp
push
inc
sbb
lock
clc
test
enter
fs
sub
xchg
and
xorb
adc
and
nop
jo
push
pop
sbb
test
les
sub
adc
cmp
push
pop
sub
add
sbb
test
mov
and
mov
sbb
enter
sub
xchg
or
enter
cmc
inc
cmp
sbb
outsb
fs
xor
adc
sub
xchg
jae
nop
sub
push
inc
das
sub
xchg
and
into
cmp
mov
sbb
mov
mov
adc
and
fldt
xchg
and
imul
and
adc
mov
xchg
and
sub
xchg
and
ror
inc
inc
dec
sub
inc
aaa
and
xor
push
test
and
push
inc
jmp
mov
push
hlt
test
enter
imul
and
mov
sbb
cmp
adcl
inc
push
and
rorb
test
and
push
cmp
mov
pushf
int3
xor
jne
adc
sub
jecxz
cmpsb
push
adc
mov
push
pop
inc
daa
icebp
lds
jne
jno
leave
or
popa
scas
jns
and
test
icebp
sub
inc
loop
icebp
sbb
cmp
clc
imul
jge
xor
imul
gs
and
addl
or
inc
jmp
jle
adc
clc
pop
mov
sub
mov
push
add
call
mov
push
ret
cmp
adc
adc
lock
scas
sbb
int3
push
clflush
and
cwtl
lock
mov
rcrb
lock
push
sub
ret
and
adc
push
das
inc
push
jo
imul
or
cmp
inc
mov
cmp
mov
jae
cmpl
addb
fsubrs
sbb
inc
xchg
jno
dec
jo
xor
mov
mov
add
and
cmp
dec
pop
popf
pop
xchg
xchg
push
push
mov
inc
aad
or
dec
movsb
daa
and
notb
xchg
xchg
adc
mov
and
gs
add
dec
lcall
inc
cmp
inc
insl
in
mov
je
jb
and
sub
insl
mov
ljmp
in
adc
mov
adc
push
add
movsb
repz
outsl
fsubrs
sbb
hlt
sub
cmpsb
pusha
sbb
xor
stc
push
mov
or
inc
and
xchg
lds
mov
inc
and
mov
push
and
shrb
stos
xchg
and
sub
test
sub
test
hlt
test
and
adc
insb
cmp
inc
push
arpl
lods
mov
jnp
les
je
adc
outsl
and
adc
das
lea
xor
gs
pop
push
xchg
jno
mov
scas
sbb
mov
jne
xor
or
enter
popa
mov
mov
mov
or
andb
and
inc
xchg
add
adc
mov
mov
mov
mov
push
cld
test
ret
sub
add
mov
sbb
sti
adc
add
adc
or
insl
lock
and
jecxz
les
push
adc
insb
add
inc
cmp
or
lret
jmp
insb
sub
inc
lods
dec
in
outsb
mov
inc
xor
daa
and
adc
fildll
and
and
rcrb
or
jg
js
aad
adc
jo
andb
jb
pushf
dec
xchg
sbb
adcb
lcall
cmp
pop
push
push
mov
test
icebp
or
mov
fimull
fmul
pop
xchg
mov
mov
int3
and
cmp
test
pop
hlt
jmp
inc
pop
xor
int3
aam
je
test
or
jo
adc
mov
test
shrl
sub
inc
mov
jno
test
and
sub
cmc
add
and
mov
jb
push
imul
or
inc
inc
push
sub
mov
and
push
or
test
lock
cmp
inc
lods
mov
in
and
push
and
pop
lods
jb
adc
fmull
mov
adc
inc
test
mov
push
inc
mov
dec
adc
add
push
or
mov
les
sub
inc
dec
and
cmp
test
in
and
pop
xor
mov
push
loop
je
lahf
sub
inc
and
test
enter
mov
mov
and
mov
adc
adc
mov
mov
adc
mov
stos
adc
and
and
nop
test
enter
and
inc
les
mov
jbe
mov
sbb
test
pop
sub
inc
sbb
fcoml
inc
mov
cmp
das
or
push
nop
push
mov
pop
lcall
mov
and
jmp
xor
aam
gs
and
mov
stos
inc
js
scas
sub
sbb
mov
cmp
pushf
sbb
mov
sbb
test
enter
jns
dec
sub
int
cmpsb
mov
dec
push
lods
flds
add
aas
enter
push
inc
test
mov
xchg
iret
lods
int
test
in
fstl
mov
push
add
add
adc
hlt
inc
cmp
test
test
or
imul
iret
adc
xchg
in
loop
jns
sub
dec
push
jge
mov
test
mov
lds
sbb
adc
out
dec
adc
pop
leave
bound
test
fmul
xchg
push
adc
adc
push
fs
push
out
cmpsl
test
adc
stos
sub
pop
fs
outsb
leave
dec
push
adc
cmpsb
or
and
mov
lahf
insb
test
pop
lret
inc
pop
leave
sbb
jae
or
and
push
nop
clc
test
cmp
or
rcrb
inc
jbe
xor
inc
pop
and
aas
ret
adc
jnp
clc
cmpsl
or
repz
filds
jns
inc
lret
loop
jl
mov
mov
inc
pushf
fisubs
mov
xor
enter
sub
inc
push
and
and
cmpsl
adc
inc
lea
push
sub
es
sbb
and
add
sub
pop
mov
in
cmpsb
push
sub
and
fs
jno
jle
mov
adc
mov
test
enter
jg
jns
arpl
and
bound
mov
adc
add
fs
xor
hlt
inc
add
insb
adc
orl
out
movsl
adc
push
adc
andb
dec
xchg
xor
mov
sbb
call
bound
js
adc
mov
adc
nop
pop
mov
fistl
stos
hlt
cmp
test
xor
ds
mov
imul
popf
icebp
jmp
push
movw
inc
jg
jg
jecxz
dec
pop
stc
jb
pop
out
sbb
adc
push
mov
push
mov
pop
dec
into
dec
stc
cmp
mov
push
gs
adc
bound
ja
dec
and
dec
add
fcoms
out
cld
xor
addl
shl
push
xchg
or
xor
pop
or
mov
jmp
inc
adcb
movsb
sbb
and
push
adc
add
push
dec
or
or
jg
push
cmp
mov
out
mov
in
sbb
sub
rcrb
ss
sub
sbb
sbb
mov
pop
mov
inc
mov
or
xor
push
cmp
push
lahf
aam
dec
mov
mov
add
mov
adc
sub
push
and
mov
jno
push
lret
adc
xchg
adc
pop
icebp
jp
xor
dec
mov
and
fistpll
dec
inc
fs
dec
mov
sub
adc
arpl
movsb
push
push
insl
ret
sbb
adc
pop
xor
notl
lods
in
mov
and
in
jb,pt
icebp
in
or
adcl
movsb
cmpsb
xor
jne
sbb
push
dec
adc
bound
add
enter
mov
mov
fsubr
or
test
mov
sahf
sbb
movsb
push
and
clc
inc
inc
pop
test
sbb
popf
outsb
stos
sub
out
cmp
lret
mov
cmp
out
lods
push
rorb
lcall
mov
test
cmc
lcall
test
mov
jns
out
adc
jo
add
nop
adc
adcb
adc
repz
test
test
jmp
adc
xchg
testb
push
push
lcall
xchg
add
xchg
jo
clc
rclb
cli
jmp
add
jmp
das
icebp
ja
inc
hlt
cmc
inc
inc
cmp
xchg
sahf
test
adc
pop
in
add
pushf
and
fisubs
or
ja
adc
push
add
lret
xor
clc
mov
push
mov
ficomps
mov
push
add
pop
push
or
aam
jg
mov
dec
lea
and
jecxz
mov
cltd
aas
sub
xor
and
sub
das
dec
or
addb
pushf
repz
adc
sahf
test
xor
lahf
daa
mov
sbb
push
rcrb
dec
aaa
mov
in
decb
add
sub
repnz
rol
insb
and
push
sbb
mov
dec
ds
lock
jle
test
dec
das
cmp
bound
cld
push
loope
jg
jl
cwtl
test
adc
lret
jmp
call
push
lret
add
pop
fwait
in
adc
lods
and
jle
insl
mov
mov
stos
inc
fiadds
adc
mov
subl
or
push
fistps
out
sub
lods
xchg
loopne
xor
in
push
clc
stos
mov
mov
mov
add
cmc
movsb
cmpsb
roll
shl
sub
mov
adc
shrb
sub
inc
stos
push
xchg
pop
pop
push
test
push
adc
loopne
insl
sub
inc
les
out
push
int
adc
push
cmc
mov
jne
push
or
filds
push
adc
or
call
ret
std
xor
sub
add
sbb
sbb
mov
mov
jmp
fabs
dec
push
and
push
shlb
aaa
lock
cmpsb
es
or
pop
movsb
or
cmp
pop
cmp
jbe
loopne
adc
pop
inc
gs
cmp
lcall
jg
mov
test
sbb
call
les
xchg
sub
lods
cld
insb
nop
decl
add
jne
and
popf
jp
dec
jl
dec
adcb
xor
in
aas
jl
xor
js
int3
pop
test
lret
mov
scas
inc
mov
add
inc
add
adc
dec
and
mov
or
mov
std
jbe
movups
sbbb
dec
push
test
mov
cmpsl
inc
mov
insb
xor
adc
cmpsl
hlt
stos
subb
fcompl
sub
das
stc
inc
mov
out
cwtl
out
fcomps
sti
test
call
mov
adc
cld
sbb
xchg
mov
jb
pop
mov
cmpb
jne
push
fistps
in
les
mov
mov
fwait
push
mov
xchg
shll
cwtl
enter
nop
push
cld
push
mov
inc
xchg
les
jno
cld
or
jl
mov
mov
cld
inc
inc
or
cld
sar
sbb
cwtl
xchg
mov
mov
cmp
push
sub
and
adc
push
push
pop
mov
inc
sub
sbb
jb
and
outsb
or
cmc
push
movsl
or
dec
push
sbb
mov
jl
mov
insb
pop
dec
sub
sbb
or
mov
ret
inc
push
aam
push
call
mov
icebp
cmp
pushf
les
push
and
out
lods
pop
dec
pusha
pop
cmp
cld
sub
adc
orl
ficoms
add
push
or
xor
add
fwait
and
dec
rorb
inc
rcll
jecxz
xor
pop
insb
jmp
call
pusha
jle
mov
bound
lea
daa
adc
xchg
movsl
lahf
mov
call
xchg
fcmovnb
lock
or
pop
test
pop
push
xlat
fwait
sahf
mov
mov
and
xchg
dec
clc
les
pop
jae
int3
and
inc
jb
loope
lcall
jecxz
mov
in
xchg
xchg
rclb
enter
inc
mov
frstor
xchg
adc
stos
xchg
sbb
mov
jno
insb
nop
cmp
clc
inc
orl
jmp
cmp
add
stc
and
xchg
cmp
push
sub
ss
stc
test
lock
sbb
xchg
xor
dec
mulb
mov
sbb
or
jo
inc
orb
enter
ss
imul
stc
inc
in
clc
sbb
jl
cmp
nop
stc
test
ror
pushf
xchg
jl
lods
rcrl
out
push
int3
hlt
fisttpl
mov
push
xchg
cmc
pop
mov
inc
out
fsts
ror
mov
in
adc
push
bound
pop
in
xor
aad
jns
push
xchg
cld
shl
mov
leave
inc
mov
push
xchg
mov
into
in
and
out
inc
enter
inc
jecxz
adc
out
call
fld
call
fidivs
mov
xlat
cmp
and
out
inc
adc
fadds
fs
add
daa
xchg
es
pop
popf
sub
fsubp
je
adc
adc
or
cmp
les
leave
insl
adc
out
nop
lret
push
dec
add
pushf
inc
fsts
or
mov
test
lods
scas
fnstcw
adc
mov
std
add
inc
mov
ds
sbb
incb
xlat
adc
mov
test
and
cmc
sub
call
fwait
sub
jne
stos
xchg
sbb
lret
xchg
push
push
jo
cmpsb
jne
mov
xchg
int3
lret
push
push
jns
cmpsb
jne
je
cmp
movups
mov
mov
adc
and
jo
mov
inc
mov
int
sbb
into
es
fdivrs
movsb
shlb
mov
push
cwtl
adc
call
dec
call
pushf
sarl
mov
iret
test
push
and
and
mov
xchg
imul
movsb
roll
repz
or
sbb
sub
inc
nop
adc
sbb
mov
les
push
enter
adc
cmp
lds
jl
mov
ret
adc
mov
and
sbb
sub
adc
ret
in
lds
or
inc
repnz
mov
jno
jecxz
add
cmp
mov
dec
xchg
imul
mov
cwtl
fldcw
xor
je
or
fcmovu
mov
push
push
sub
fimull
and
inc
jmp
arpl
jmp
or
js
mov
xlat
or
rep
or
fucomi
or
gs
out
xor
in
push
mov
adc
adc
lds
mov
mov
test
pushf
ja
jbe
notl
and
cmp
fidivrl
push
pop
and
or
cmc
ret
in
mov
pop
insb
stos
xor
pop
jbe
pop
push
inc
dec
add
jmp
push
sbb
mov
and
sub
jne
push
ret
xor
aas
jno
cld
shrb
int
call
hlt
je
cs
xchg
lods
lea
aad
ret
mov
jg
jl
arpl
mov
sarb
ret
mov
test
or
jbe
mov
mov
push
jno
add
or
js
les
stos
push
adc
call
ja
hlt
xchg
ds
xor
inc
xor
cmp
add
adc
xchg
xchg
mov
les
call
adc
jne
mov
mov
call
sbb
and
sub
push
mov
pop
fisttpll
push
pop
scas
je
test
adc
xchg
mov
sub
dec
jns
jmp
dec
add
orb
test
js
xor
xor
mov
pop
add
mov
push
ss
inc
test
out
repz
xchg
dec
dec
test
push
ret
lret
xor
fcompl
icebp
xor
adc
xchg
les
addr16
adc
add
mov
cmp
sbb
loop
fcoml
mov
test
test
adc
ret
sbb
inc
dec
lret
pop
mov
dec
mov
nop
push
pop
out
sbb
arpl
mov
fcompl
sub
sbb
out
repz
cmp
int3
pop
test
shl
xlat
xor
jl
xchg
jne
push
mov
or
cwtl
dec
incl
repz
mov
xor
clc
sub
pushl
push
push
shll
push
xchg
aam
mov
js
push
xchg
sub
sub
cmove
stc
outsb
imul
jb
add
inc
jmp
inc
and
mov
mov
jo
loope
jp
lea
push
xor
or
test
mov
sub
sub
roll
ret
leave
push
dec
xchg
cmp
and
test
lds
sub
adc
jno
add
cmpsl
push
jne
jne
push
cmpl
loop
or
in
or
mov
adcb
ficomps
paddsb
into
sbb
mov
or
jo
int
and
or
call
je
add
sbb
insb
fisttps
adc
fstp
push
andl
fdivs
dec
adcb
and
push
js
jmp
and
mov
sbb
test
loopne
loope
fcoml
xor
rolb
sbb
fcomp
sub
adc
cmpsb
ds
sbb
cmp
ret
mov
adc
xchg
sbb
xchg
cmp
cmp
into
xor
push
sub
jb
and
push
je
jmp
mov
jae
imul
xor
sbbl
mov
pushf
push
jae
inc
jmp
sub
adc
adcl
je
inc
mov
mov
adc
push
pusha
fs
filds
fs
mov
fsubl
adc
loope
adc
repz
in
xor
pop
add
sbb
clc
cmpb
jmp
lret
or
lret
mov
inc
sbb
push
clc
ffree
inc
jmp
or
sub
jne
addl
push
inc
push
add
push
movsb
outsl
pop
sub
test
add
and
cmpsl
inc
mov
pop
sub
ret
cmp
out
jbe
push
loopne
mov
xchg
xor
in
dec
ss
and
stos
mov
int3
push
or
xchg
jmp
mov
push
cmp
xchg
mov
loopne
fs
in
nop
xacquire
adc
adcb
jle
clc
pusha
mov
call
inc
mov
dec
jmp
xchg
adc
jge
jae
and
fmuls
fs
xor
orb
test
xor
xchg
insb
out
daa
test
fwait
jno
mov
lods
adc
sti
xchg
fadd
xchg
insl
ret
add
and
add
mov
push
or
icebp
xchg
push
or
test
mov
or
xchg
cs
adc
adc
lods
jge
sub
jl
out
add
sub
mov
in
sbb
fisttpl
icebp
mov
mov
dec
or
bound
sbb
mov
adc
push
dec
cltd
mov
sbb
sub
dec
sub
es
cmp
jecxz
cs
inc
push
outsl
test
stos
add
sbb
pop
and
outsl
sub
lods
mov
pop
rolb
scas
lods
mov
bound
adc
shl
lret
inc
inc
sub
and
mov
and
adc
jp
and
adc
test
sub
adc
lret
xchg
mov
sbb
mov
mov
aas
ficoms
mov
addb
test
popa
jle
mov
loop
movl
test
jmp
test
adc
or
out
push
sub
mov
subl
jnp
stos
dec
clc
jae
data16
stos
jle
push
ficompl
iret
outsl
or
mov
adc
stos
jge
mov
cltd
cmpsb
or
dec
in
sbb
lock
push
pop
mov
test
push
mov
adc
fisttpll
or
mov
jmp
push
pop
sub
fisttpll
mov
pop
dec
in
dec
mov
mov
mov
push
iret
test
std
adc
mov
jle
lds
or
lds
sub
inc
orl
mov
or
xor
cld
movsb
push
xchg
jns
pop
jmp
aad
sub
jle
jns
test
xor
sbb
loop
gs
inc
mov
pop
clc
sbb
jne
sbb
mov
mov
pushf
cmp
fsubr
into
inc
jle
cmp
sbb
loopne
cmc
mov
test
loopne
stc
pop
lcall
fists
outsb
mov
dec
push
test
js
clc
enter
paddsb
jl
loope
inc
or
adc
cli
sbb
push
dec
js
lea
daa
nop
pop
das
insl
mov
cmpsb
push
sub
and
cmpb
mov
int3
loop
xchg
mov
add
notl
mov
stos
cmp
adc
js
xchg
les
adc
or
push
movsb
push
xchg
cmp
push
pop
stos
ja
cmpsb
xor
or
mov
into
pushf
xor
pusha
in
lock
fists
jmp
adc
push
popf
push
int3
and
enter
aaa
push
pop
adc
stc
jns
dec
sbb
fsubrl
outsl
hlt
in
sbb
sub
xor
iret
pop
jbe
jnp
xchg
mov
mov
push
jmp
xor
cmc
loop
sbb
xchg
sub
es
dec
hlt
in
mov
dec
xor
adc
mov
push
lea
sub
pop
cmp
sub
les
adc
pop
leave
lea
xchg
insb
dec
push
xchg
jle
mov
mov
adc
lret
fstl
test
call
sbb
xchg
mov
add
gs
insl
clc
cmp
sbb
gs
xlat
push
mov
push
add
jp
imul
cwtl
sbb
dec
mov
fs
js
out
ret
push
add
js
lock
pop
stos
cmp
adc
frstor
xchg
dec
add
push
mov
push
hlt
xor
call
mov
mov
daa
pop
mov
sbb
adc
push
add
stc
mov
cmpsl
jnp
or
lock
lea
or
movsb
sub
mov
repnz
andb
fs
and
out
ja
mov
or
cmc
mov
mov
testb
pop
je
xor
push
std
jl
fisubs
in
and
std
dec
mov
clc
and
je
test
sbb
sub
pop
das
add
jbe
add
fisttpll
adc
fcoms
cld
lds
cmp
xchg
pop
cld
rolb
inc
sbbb
lea
adc
add
std
jl
dec
int
das
and
fs
rep
or
cmp
cwtl
loop
push
movsb
sbb
adc
jmp
mov
daa
adc
adc
mov
adc
mov
and
sub
inc
arpl
fiadds
sub
adc
pop
int
xchg
and
and
mov
mov
imul
or
shr
jmp
adc
dec
test
gs
xchg
enter
gs
adc
mov
gs
test
or
fistpll
mov
add
inc
aas
pop
dec
movsb
jno
xchg
bound
fs
inc
push
fcoml
jmp
adc
jns
scas
and
dec
sbb
mov
dec
ret
jbe
mov
dec
mov
sbb
jl
fsubrl
cmpl
mov
dec
push
inc
push
or
gs
and
inc
fsubs
fldenv
sub
mov
movl
mov
cmp
sub
jge
sbb
cmp
js
xor
and
jb
test
int3
pop
mov
aad
or
or
pop
jne
shll
xlat
xchg
cltd
push
aam
das
push
popf
jo
mov
in
jg
or
pop
gs
daa
fcoml
aas
nop
mov
popa
test
inc
sbb
inc
arpl
xor
xor
lods
sub
and
mov
jno
add
push
jae
mov
or
sarl
add
mov
jl
loop
xor
loopne
inc
ret
dec
rolb
jno
inc
testb
jle
call
or
and
mov
jo
xchg
inc
cmp
mov
pop
pop
ret
sub
inc
js
mov
fadds
push
push
aaa
and
js
pop
sbb
xchg
sub
mov
add
jle
incl
xor
loope
sbb
andb
pop
inc
cmp
jl
fisubs
or
ret
aad
popa
arpl
mov
sub
test
xor
sub
imul
add
cmpps
inc
ja
ss
add
add
cmp
jl
repz
popa
adc
jnp
mov
inc
or
push
lret
inc
mov
mov
or
adc
ja
insb
cmp
out
push
or
test
jl
out
mov
or
fldt
les
mov
outsb
jne
js
sbb
out
int3
or
adc
or
js
xchg
inc
add
andl
out
inc
je
lret
push
and
jl
add
and
jle
inc
test
push
pop
daa
add
jne
mov
pusha
pop
jne
and
addb
push
nop
adc
mov
and
aaa
cwtl
sbb
jp
push
outsb
inc
or
jbe
inc
test
movd
push
sbb
stos
sub
rcrb
push
es
mov
iret
and
and
jno
rcrb
out
ja
clc
sub
dec
mov
cli
push
sub
and
int3
cld
adc
push
mov
mov
loopne
mov
jbe
test
sbb
loop
jno
xor
pop
rolb
shrb
leave
mov
push
adc
hlt
call
neg
pop
sti
inc
sti
jmp
mov
xor
cmp
and
mov
inc
cmp
lret
jmp
cmpsl
sbb
adc
js
idivb
ljmp
pop
push
pop
pop
ret
rcl
or
sbb
inc
push
sahf
adc
test
rcll
pop
pop
push
popa
xchg
call
inc
or
sub
dec
or
add
leave
mov
mov
lret
dec
jnp
cli
inc
out
clc
repnz
add
push
lea
mov
popl
or
jge
pop
push
sub
arpl
or
push
mov
inc
orl
mov
adc
adc
xor
add
mull
xlat
adc
inc
adc
in
sub
aas
inc
ds
push
insb
and
lock
andb
mov
call
mov
and
xor
sti
push
jp
dec
jno
notl
shr
mov
xor
xorl
xchg
call
ja
cmp
or
inc
push
xor
add
or
xor
mov
fisubrs
cmp
cmp
es
add
pop
pop
xchg
orl
add
mov
aam
loopne
iret
test
ja
addb
mov
daa
pop
les
push
add
incl
push
mov
jmp
rol
or
adc
dec
cmpsb
inc
or
sbb
inc
xor
sub
fiadds
jmp
dec
adc
mov
or
leave
jbe
mov
xor
enter
or
inc
add
inc
cmp
jb
mov
ja
push
adc
jne
push
insb
cmc
adc
stc
ret
jp
pop
ja
adc
jmp
mov
mov
pop
add
cmpsb
jbe
aaa
push
shrb
cmp
lret
mov
inc
subl
scas
aam
jmp
push
cmpb
add
pop
add
mov
out
jmp
or
pop
sbb
je
dec
adc
pop
test
outsb
add
iret
mov
fiaddl
xchg
cmpsb
push
inc
or
pop
dec
xor
cmc
push
mov
cli
and
sbb
add
movsl
clc
adc
sarl
scas
imul
pop
push
vpcomub
popf
in
cs
adc
mov
cld
mov
mov
adc
pop
sahf
sub
loop
fs
out
or
mov
sub
ret
sarl
lods
nop
fcoml
decb
into
pop
inc
and
and
std
push
sbb
push
push
inc
and
in
cmp
xor
and
dec
jno
xchg
test
das
mov
mov
popa
cmp
je
cmc
sbb
pop
das
add
push
movsl
not
ret
aam
adc
and
pop
inc
mov
mov
aaa
push
cmp
mov
inc
xor
adc
push
pop
mov
lds
pop
xchg
sub
mov
jns
std
call
jbe
inc
scas
mov
dec
out
push
cmpsb
adc
or
mov
sbbb
jne
test
jle
cmp
pop
popf
push
fists
cmc
or
dec
imul
and
aam
int
and
into
adc
push
jae
jno
inc
add
push
es
aas
sub
shlb
or
cmp
inc
inc
bound
pop
shrl
cmp
fstl
test
out
sub
mov
jle
repnz
loopne
rolb
sub
or
inc
xor
add
sbb
in
jmp
movsl
jo
aam
add
cmc
popa
ficoms
bound
or
fs
xor
pop
or
mov
leave
sbb
jae
mov
or
push
addb
fsubrl
lahf
or
adc
stc
sub
js
xor
or
cmp
mov
inc
pop
stos
or
lea
inc
inc
push
or
mov
imul
lock
inc
xor
call
dec
inc
inc
jmp
nop
out
jle
push
or
test
adc
sarl
repnz
pop
sbb
aam
imull
clc
or
and
pop
cmpb
sarb
or
cmpsb
or
xor
sbb
cmp
cmp
sub
inc
push
sbb
jge
dec
cmp
jge
pop
cmp
je
cmp
jns
jae
hlt
mov
cmp
fdivrs
test
mov
pop
jmp
sti
out
cmp
mov
inc
incl
andl
movsb
andb
sub
adc
stc
cmp
les
leave
je
push
and
stos
mov
xor
push
push
ret
mov
mov
sub
insb
adc
pop
and
jmp
fisubrs
ljmp
add
js
or
cmp
je
dec
outsl
fwait
sbb
dec
add
ss
jne
cmp
pop
bound
mov
mov
mov
repnz
xor
icebp
adc
adc
dec
jb
add
lock
or
lds
or
popa
pop
push
bound
lret
arpl
mov
cltd
call
xchg
add
das
add
and
xor
imul
call
push
mov
mov
sbb
movb
dec
clc
loopne
cmp
fiadds
inc
clc
or
test
add
jecxz
sbb
and
rcll
es
jo
enter
cmpsb
or
jb
lea
call
and
cmp
adc
or
adcl
xor
mov
rclb
cmpsb
es
fsubrl
mov
jns
or
test
mov
push
xchg
clc
mov
cmpl
or
add
push
mov
not
enter
pushf
enter
pop
push
imul
test
movsb
lea
push
mov
lret
sub
add
lods
sbb
popa
test
jl
movb
mov
push
xor
and
sbb
mov
lock
inc
loopne
push
popf
add
lea
enter
mov
jno
clc
iret
xor
aad
loopne
sbb
sbb
ret
in
sbb
mov
test
fs
stos
int3
pop
decl
xor
or
or
mov
push
sbb
adc
in
cmp
jo
mov
adc
cwtl
dec
lods
iret
mov
fstl
xchg
push
fsubl
sti
movsb
sbb
outsl
or
int
orb
pop
mov
cmp
push
push
push
and
test
ljmp
in
adc
or
enter
add
sbb
push
sbb
push
enter
or
or
sbb
loopne
add
push
les
sub
dec
xchg
inc
add
clc
out
cltd
dec
cld
dec
mov
repnz
mov
pusha
aam
mov
ret
mov
clc
and
sub
jns
movsb
rcrl
add
fdivr
jno
or
arpl
xor
or
dec
or
lahf
and
or
adc
enter
dec
pop
xor
repz
or
fwait
sub
add
mov
xor
and
mov
loopne
mov
cwtl
push
add
inc
cmpsl
das
mov
mov
pop
lods
inc
push
mov
pusha
add
push
push
mov
mov
in
arpl
add
push
fisubl
dec
out
movsb
andl
sbb
lea
inc
pop
push
dec
pop
int
jne
sbb
stos
ret
jae
cwtl
in
add
mov
sbb
fs
ljmpw
cld
push
pop
xor
inc
comiss
sbb
enter
icebp
out
mov
xchg
inc
jg
fwait
repnz
inc
sbb
or
pop
test
dec
outsb
and
popl
daa
cmp
jnp
mov
sub
push
into
mov
int
jl
loopne
aam
sub
adc
les
sub
mov
loop
sahf
and
jl
inc
les
outsb
pop
loop
add
hlt
xor
cmp
inc
je
sbb
inc
clc
jo
pop
sbb
xchg
jle
stc
loope
push
cmp
inc
add
adc
int3
cmc
into
cld
adc
loop
lret
pop
mov
lret
inc
inc
in
sbb
jge
mov
bound
and
and
test
and
pop
and
add
repnz
adc
aam
frstor
push
mov
outsb
mov
pop
and
mov
imul
add
stos
hlt
sbb
pushf
rclb
mov
ja
subb
inc
add
and
inc
shll
bound
cs
pop
xchg
jns
aas
xor
test
sub
adc
xchg
sbb
inc
mov
push
sub
adc
mov
pop
das
je
mov
xor
leave
dec
fs
test
lea
ds
jo
insl
lahf
je
out
mov
inc
mov
test
ficoml
dec
dec
std
xchg
push
push
mov
jns
adc
mov
inc
cld
lock
fwait
xor
and
sbb
or
adc
sub
add
mov
adc
sbb
cmpl
sbb
nop
cmp
mov
cmc
sub
pop
ret
add
sti
push
push
pop
jmp
dec
hlt
movsl
or
push
push
mov
andl
add
mov
fistpl
push
add
mov
cmp
andl
in
lret
jmp
inc
push
ds
and
rolb
fstpt
clc
scas
mov
loopne
js
in
mov
mov
sub
xchg
sbb
fdivrs
sti
setg
fisubl
mov
arpl
movsb
mov
lods
in
dec
jnp
xchg
gs
fsubrs
fisubrl
jge,pn
rclb
out
loopne
sub
in
hlt
push
mov
add
adc
enter
lock
inc
daa
js
lret
call
clc
int3
or
and
mov
push
imul
or
mov
outsb
adc
pop
inc
int3
cmp
and
out
call
aaa
jmp
and
push
xor
inc
bound
lret
ss
cld
sbb
and
rorl
xor
push
imul
roll
cld
xchg
mov
push
in
push
or
adc
adc
je
sbb
sub
movsl
pop
ret
outsl
leave
ljmp
sbb
jmp
dec
mov
push
data16
adc
mov
xor
jae
shll
xchg
sub
rclb
xlat
xor
mov
push
or
mov
jmp
adc
es
and
js
adc
or
loop
lds
nop
mov
jl
aam
orb
gs
fmuls
mov
ficomps
cmpl
or
rorl
mov
je
lea
lcall
roll
inc
or
xor
mov
adc
mov
test
adc
ss
cltd
jne
mov
fs
xchg
push
dec
mov
popa
loopne
jnp
or
out
cli
inc
movsl
or
shlb
or
in
and
out
pop
dec
lret
insl
fldl
xchg
call
sbb
fisttps
lret
imul
test
clc
es
repnz
shll
je
add
and
sub
pop
sbb
sub
or
mov
shlb
fidivs
adc
mov
in
xor
adc
fsts
in
cmp
subb
icebp
mov
lcall
ljmp
mov
int3
add
sub
pop
lcall
mov
addr16
rol
xchg
fs
push
jne
or
cld
pusha
call
or
push
add
aas
imul
pop
sub
lods
inc
mov
cmp
dec
mov
xchg
mov
test
mov
push
and
les
mov
sub
mov
xor
dec
pop
stos
xor
add
xor
mov
movsb
imul
enter
mov
xor
push
cmpsb
jl
sbb
adc
cltd
rorb
in
fcomps
lock
popf
sbb
adc
dec
fimull
mov
fdivrs
cwtl
jbe
push
call
jmp
pop
clc
dec
jo
inc
sub
movb
push
xchg
mov
sub
jbe
rolb
mov
push
mov
in
mov
push
cltd
mov
nop
mov
bound
lcall
push
shll
ljmp
fiaddl
adc
push
popf
jmp
fstpl
sub
pop
push
insb
inc
ja
adc
mov
nop
stc
es
and
jmp
pop
nop
sub
inc
movsb
pop
and
add
mov
jne
pusha
ret
ss
enter
push
push
jo
hlt
xchg
out
in
movsl
adcl
stos
je
mov
and
lods
mov
pop
push
adc
push
jecxz
adc
mov
frstor
inc
push
xlat
and
cmp
sarb
jne
and
and
mov
aam
outsb
in
pop
or
xchg
ja
movl
mov
mov
inc
lock
test
adc
pop
push
sub
repnz
in
cld
and
imul
setle
int
insb
and
cmp
loop
dec
pusha
jge
mov
pusha
outsl
sub
xlat
in
cli
mov
mov
mov
test
push
add
dec
das
pop
sub
fistpl
push
push
or
icebp
xor
aam
in
rolb
push
jo
loopne
and
xchg
cld
jg
les
and
sbb
or
je
cmp
jmp
nop
fs
xor
das
or
repz
dec
inc
adc
or
jmp
inc
xchg
and
notb
scas
lret
cwtl
add
cmp
jl
lods
add
lret
xlat
cmp
test
leave
xor
push
sbb
or
adc
out
xchg
insl
pop
push
sub
sbb
aad
sbbl
mov
scas
push
mov
push
sub
jmp
pop
fmuls
dec
and
adc
push
imul
cltd
push
mov
mull
mov
pop
xchg
jns
imul
ja
dec
xchg
jnp
jle
out
sbb
adc
push
mov
shlb
cwtl
dec
jl
shlb
dec
cltd
mov
adcb
mov
xchg
dec
pop
sbb
loope
pop
push
subb
addl
dec
fdiv
test
push
mov
xchg
aaa
cld
and
sbb
mov
dec
mov
incl
adc
je
xor
jns
xchg
and
xor
inc
push
adc
or
and
and
je
je
cmp
inc
lock
sbb
inc
test
jle
mov
push
add
xchg
or
pusha
push
movsl
add
mov
mov
fldenv
mov
rep
pause
mov
scas
inc
mov
pop
nop
xor
outsb
xor
push
test
jbe
push
lods
cld
test
cmp
stos
and
xchg
sub
cltd
mov
adc
or
orl
mov
cmp
adc
inc
adc
sbb
lcall
and
add
aam
dec
leave
push
pop
sbb
es
mov
in
mov
shl
movsb
adc
out
loopne
pop
out
in
xor
cmp
out
jecxz
in
push
data16
imulb
jns
mov
lret
push
jne
std
in
push
mov
adc
push
or
push
mov
movsl
adc
aad
sbb
cmpsl
inc
mov
inc
test
int3
xor
push
nop
ret
add
push
xlat
xor
mov
pop
inc
or
push
cmp
cmp
in
xchg
mov
dec
and
cli
or
mov
mov
je
adc
and
sub
mov
or
push
jne
mov
and
je
inc
and
lods
mov
or
inc
ds
lcall
xor
test
repz
adc
leave
loopne
daa
push
pushf
lods
push
nop
repz
pop
mov
popa
bound
and
adc
cmp
adc
fs
loop
sub
sub
ret
sub
or
xchg
mov
hlt
push
mov
nop
and
mov
subb
xchg
fisubs
shrb
mov
ja
add
inc
push
inc
loopne
fs
add
mov
push
push
call
push
pop
adc
pop
gs
mov
sbb
lds
mov
add
xchg
cwtl
pop
jne
jne
push
inc
push
call
jp
inc
add
leave
loopne
mov
add
xor
push
sub
push
inc
jnp
adc
mov
arpl
dec
xchg
rsqrtps
scas
or
stc
gs
inc
in
stc
jg
mov
pop
aaa
add
adc
std
or
outsb
nop
or
je
adc
call
lock
xor
shrl
mov
push
loopne
dec
cwtl
push
xchg
adc
jle
bound
push
pop
in
movsb
aam
popf
sti
in
adc
push
xchg
adc
adc
dec
jmp
push
mov
mov
or
in
dec
xor
adc
sti
sbbl
popa
mov
pop
jmp
push
xor
clc
inc
inc
aaa
mov
xor
insl
out
fsubl
aas
gs
mov
mov
mov
sbb
push
test
sub
vcvtpd2psx
or
jmp
xchg
jo
rol
lcall
pop
push
daa
cmp
push
jge
std
je
xchg
lret
inc
loope
out
jmp
pusha
hlt
and
pop
cld
jmp
scas
sub
add
and
push
popf
mov
call
sbb
ljmp
sbb
mov
cmp
jne
pop
out
inc
cwtl
dec
lea
pop
jg
aas
inc
sbb
mov
dec
sarb
call
cmpsb
and
add
in
inc
inc
pop
xor
std
std
fldcw
shrl
insb
dec
or
mov
jp
rclb
daa
call
lods
xchg
xchg
xchg
adc
push
mov
or
sub
popl
jns
aaa
adc
add
jmp
call
shll
ret
sub
xchg
out
push
call
xlat
popf
pushf
xchg
shlb
mov
xor
sub
sub
pushf
aad
pop
cmpsl
inc
movsl
or
mov
jl
popf
mov
jnp
jb
mov
and
mov
outsb
lea
add
sbb
les
int
inc
push
or
pop
push
push
rolb
mov
inc
pop
outsb
je
dec
mov
adc
xor
ljmp
or
dec
or
inc
or
lock
jle
cmpsb
or
pop
adc
mov
dec
and
les
sbb
xor
add
in
mov
sbb
pop
inc
pop
fiaddl
inc
fsts
mov
jmp
and
xchg
mov
nop
lret
add
loop
pop
push
sarb
fs
adc
pop
mov
shll
mov
push
pusha
ss
and
fsts
loop
orl
cli
mov
fdivl
or
dec
mov
xor
and
in
sub
dec
add
cmp
push
and
ret
xchg
push
mov
xor
or
dec
clc
mov
adc
push
scas
and
enter
and
and
sbb
lea
xor
int3
push
pusha
les
test
cli
pop
xor
adc
xchg
adc
mov
push
das
and
dec
sub
js
inc
es
xchg
sbb
loopne
or
enter
daa
aam
pop
popa
mov
dec
je
daa
and
adc
sub
in
cli
inc
push
jo
fisttpl
sbb
sbb
test
jo
fdivl
mov
or
xchg
mov
xor
or
test
adc
dec
call
adc
std
and
nop
iret
in
sbb
and
mov
in
push
enter
std
pop
sub
sub
sarl
jl
push
xchg
sbb
push
and
imul
sub
dec
jb
xor
inc
and
sbb
adc
imul
cmp
nop
fs
xor
roll
or
mov
xchg
ja
jne
push
adc
sarl
inc
adc
add
push
and
aam
xor
push
fs
rcl
sti
adc
ss
fcoms
sbb
popf
sub
jmp
hlt
outsl
sub
add
dec
das
push
dec
lea
lea
adcl
mov
cmp
mov
mov
mov
mov
movl
loop
or
cld
int
aam
mov
fcoml
or
js
aad
data16
lret
inc
in
inc
fisttps
mov
loope
adcl
mov
popf
pusha
and
mov
cs
jnp
mov
mov
or
clc
shl
out
out
inc
cmpsb
push
jp
and
inc
add
fstpl
cmpsb
movsb
lods
xlat
mov
mov
les
inc
mov
push
cmpsb
sub
call
loope
adc
pop
mov
out
outsl
and
mov
daa
pop
sahf
rcll
inc
test
idivl
stc
push
mov
push
push
mov
les
add
loope
in
mov
adc
je
or
sub
shlb
ret
out
jb
test
incb
mov
inc
mov
out
jno
add
push
aas
xor
or
mov
mov
adc
push
pushf
cld
push
push
jbe
mov
cmovg
adc
or
daa
loop
xor
mov
out
push
xor
and
pusha
jne
loopne
mov
or
lods
and
lea
or
inc
jae
jns
stos
mov
sbb
in
xlat
sub
insb
xchg
clc
fimull
aam
or
push
xor
cmp
fimuls
dec
or
adc
mov
and
lea
xchg
sub
mov
cmp
mov
adc
xor
push
scas
and
push
push
inc
out
push
movlps
in
call
inc
mov
fs
xchg
out
and
jbe
mov
mov
cmp
idivl
push
sbb
stos
dec
jbe
popa
push
push
mov
or
push
call
push
and
fbstp
fistps
xchg
jmp
pop
ljmp
fnstsw
push
cmp
icebp
or
mov
cmp
pop
movsl
fstl
jge
adc
adc
xor
ret
rcrb
push
or
outsl
inc
jmp
add
mov
popf
dec
add
add
push
fldenv
movsl
shlb
shr
and
mov
test
das
xor
mov
push
shlb
push
daa
mov
stos
push
xor
in
in
and
cld
mov
pop
sbb
mov
cmp
call
inc
loop
movsb
sub
nop
enter
or
inc
xchg
and
add
mov
cs
mov
adc
rorb
in
mov
nop
aam
jl
subb
adcl
xchg
lds
inc
rcll
mov
movsb
fistl
leave
and
invd
loopne
dec
xor
jl
in
lret
insb
jge
xor
adc
fbld
cmp
push
mov
idiv
add
add
out
aaa
aam
jno
or
lock
movsl
pop
pop
pop
out
fsubrs
nop
push
lahf
insb
insb
sahf
push
pop
push
mov
and
test
dec
ljmp
lods
stc
and
and
or
inc
dec
daa
mov
inc
lock
test
leave
test
add
sub
je
dec
into
frstor
xchg
inc
push
push
mov
push
sub
cli
cmc
insl
daa
push
jmp
mov
and
mov
adc
imul
and
jb
push
aam
lret
and
mov
sbb
mov
icebp
shlb
arpl
stc
adc
lods
sbb
push
dec
adc
adc
or
xor
mov
adc
dec
mov
dec
and
js
jne
and
nop
sub
leave
fisubrs
sbb
dec
mov
push
int3
insl
sub
add
fisttpll
bound
mov
sbb
push
adc
xor
jbe
dec
loopne
fcoml
lods
or
dec
pop
dec
sbb
cli
sbb
adc
push
add
sti
dec
in
and
jl
or
dec
dec
sub
stc
mov
push
rcr
dec
or
inc
push
adc
enter
clc
icebp
call
mov
mov
or
dec
dec
popa
add
or
and
push
adc
pushf
push
xor
dec
cmpl
pop
push
mov
sub
sub
lods
sub
repnz
sbb
js
adc
repnz
pusha
dec
mov
mov
xchg
mov
or
nop
mov
adc
dec
enter
andl
loope
into
inc
dec
ja
mov
push
cli
jmp
loop
in
adc
test
jne
xor
or
add
push
xor
aam
cmpsb
lods
test
pusha
inc
and
mov
sub
dec
jge
mov
cltd
movsb
adc
scas
sub
and
inc
cwtl
enter
sbb
ja
les
jg
push
jbe
cltd
dec
frstor
cs
dec
push
int3
pop
push
mov
into
pop
mov
pop
repz
jmp
adc
push
and
test
cmp
sub
inc
add
mov
das
sub
xchg
dec
or
add
test
add
or
add
mov
lret
xchg
sub
cmp
push
lret
mov
into
or
push
popf
lds
mov
sbb
and
jp
in
fs
mov
mov
and
cmp
mov
mov
clc
mov
push
push
push
je
sub
call
leave
lods
hlt
cmp
mov
int3
xor
lods
adc
popf
popa
add
fiadds
sub
add
rep
call
pop
mov
shr
inc
push
ja
fsubl
push
mov
add
lock
inc
mov
testl
pop
adc
inc
outsl
dec
sbb
and
out
inc
pusha
ret
xor
mov
popf
sbb
push
add
adcl
adc
inc
or
add
cmpsl
adc
pop
add
and
loop
das
sbb
dec
or
inc
sbb
outsl
repz
cld
sub
or
adc
cmpsl
dec
rclb
push
mov
adc
orl
mov
les
mov
scas
add
adc
roll
mov
xor
mov
add
mov
or
mov
daa
push
or
xor
mov
cwtl
lea
ret
mov
inc
in
rcrl
pusha
add
pop
mov
movsl
icebp
leave
mov
push
or
orb
and
mov
inc
add
aas
dec
jl
inc
push
stos
ret
pop
push
push
icebp
dec
call
bound
inc
imull
into
sbb
and
push
movsb
inc
loop
sbb
jb
ret
pop
shll
fmuls
mov
dec
push
test
add
je
in
adc
adc
bound
jmp
addr16
push
adc
inc
mov
sbb
pop
xor
adc
popa
push
mov
adc
mov
es
call
and
jge
xor
add
jg
popf
ret
dec
dec
out
jbe
add
xchg
mov
std
pop
fldcw
push
dec
enter
scas
pop
sti
sub
jp
pushl
cmp
in
ss
jmp
sbb
mov
and
jbe
add
subl
cmp
push
push
mov
cld
mov
push
adc
pusha
inc
fcomp
sub
and
stc
fisubrs
sbb
cld
inc
sub
push
adc
sbb
adc
jne
mov
inc
xchg
arpl
ds
inc
in
stos
call
and
fdivrl
es
jg
push
jno
nop
jb
ret
clc
mov
insl
jge
push
loop
test
das
stos
pop
pop
push
add
or
lret
sbb
xchg
or
ljmp
mov
mov
mov
ret
aad
jecxz
in
inc
inc
push
movsb
imul
ret
xchg
imul
pop
lret
imul
mov
mov
jle
mov
adc
xor
and
pop
or
mov
dec
shr
es
loopne
push
xchg
inc
push
inc
lret
push
test
dec
or
add
cld
and
ret
pop
cmp
scas
cmpsb
out
add
sub
xchg
mov
cmp
xadd
pop
inc
notl
push
xchg
add
inc
cld
fucomip
xchg
or
mov
pop
push
and
mov
and
je
and
xor
pop
test
mov
push
in
outsl
add
int
push
dec
sub
inc
pop
mov
adc
inc
arpl
mov
out
or
lods
jae
or
dec
push
inc
in
xchg
inc
inc
inc
pop
mov
stos
imul
sbb
and
mov
aad
inc
adc
xchg
sub
mov
jno
call
dec
lret
nop
in
and
enter
mov
or
dec
sub
push
cld
iret
cmp
push
es
enter
mov
push
push
lods
test
je
jb
cmpsl
dec
and
cld
js
pop
mov
aad
addb
push
fsubl
xchg
repz
push
icebp
xchg
int3
pop
or
xor
gs
jae
sti
or
lock
cli
xchg
fstl
fsubl
or
fdivs
fdivrs
sti
cmpsb
pop
lds
push
int3
push
pop
hlt
pusha
iret
inc
fcmovnbe
inc
mov
pop
or
pusha
insb
sbb
push
inc
mov
xor
movsb
xor
push
fs
and
test
cmp
sbb
sub
decl
or
pop
mov
or
jmp
dec
adc
adc
test
adc
pop
mov
lock
repnz
pusha
pop
out
arpl
inc
add
mov
mov
or
sub
xlat
push
lods
cmpsl
test
sbb
mov
rcr
pop
adc
jle
mov
imul
shlb
or
mov
xchg
push
xor
mov
push
movntps
xchg
add
jne
out
pop
inc
aaa
cld
dec
es
pop
in
mov
push
es
pop
push
xor
xor
andb
mov
call
jae
cmp
and
push
call
add
push
push
dec
adc
test
pop
hlt
inc
fs
push
test
xor
fucomi
cmp
push
call
in
inc
lret
xchg
hlt
add
or
sbb
je
cmpsl
and
jne
adc
or
pop
mov
mov
int3
pop
dec
push
loopne
mov
sbb
enter
push
roll
les
xor
mov
cltd
xor
xor
xchg
adc
sub
fisttpll
lea
fildll
fmull
inc
add
sbb
enter
test
call
jmp
dec
cmp
dec
stos
push
js
mov
addb
sub
pop
repz
cmp
call
xchg
pop
sbbb
xchg
xchg
pop
sbb
jne
mov
xchg
in
out
shlb
jb
push
pop
jmp
pop
dec
add
jmp
testb
pop
fadds
rorb
out
rol
test
add
inc
call
mov
shll
add
xor
cli
and
in
pop
pop
mov
jae
push
xadd
add
add
icebp
push
add
lidtl
repnz
add
inc
icebp
cs
in
repnz
xchg
xor
add
xor
sarb
push
out
jbe
push
add
add
inc
int3
mov
push
ret
in
inc
cmp
jecxz
in
mov
push
adc
inc
mov
or
pop
repnz
jae
sub
sub
dec
cld
repnz
in
orb
xchg
fwait
pop
pop
xchg
sub
call
mov
sti
pop
and
hlt
mov
sysret
mov
test
dec
adc
pop
sbb
inc
mov
in
nop
popa
mov
jg
dec
movb
sbb
dec
call
adc
or
imul
sub
push
mov
and
test
mov
sub
pop
imul
je
add
add
mov
xchg
js
clc
jmp
inc
xor
or
add
andb
ja
popf
int3
std
frstor
push
adcb
in
mov
inc
in
sbb
in
push
je
in
and
or
enter
add
inc
imul
dec
jmp
dec
pushf
push
adcl
cmp
aas
mov
scas
leave
popa
cs
dec
sbb
je
and
out
push
cmpsl
mov
dec
push
sub
xor
cltd
popf
sbb
or
sub
xor
cmp
leave
push
clc
add
sbb
subl
push
pop
sbb
sbb
adc
ret
out
movzbl
jmp
inc
mov
inc
push
hlt
pop
xor
jl
iret
mov
jp
jne
in
call
jmp
mov
fs
sbbl
rorl
mov
mov
call
stos
and
sbb
xor
into
fcmove
sub
sub
sub
sub
jnp
sub
add
pop
inc
jge
push
xor
mov
cmp
jo
das
lret
xchg
cmp
xor
clc
xor
loope
adc
sub
fcomps
ja
call
in
xor
mov
fadds
jle
lds
sbbl
inc
add
add
das
and
das
and
mov
out
ljmp
mov
push
xchg
pop
inc
xor
or
js
cmp
push
mov
xchg
inc
dec
bound
push
and
pop
dec
inc
adc
mov
insl
cmp
pop
mov
add
cltd
ret
and
dec
add
xor
iret
cs
clc
cmp
sub
push
pop
daa
jae
add
cmp
jne
xchg
sahf
aas
sub
arpl
stos
pop
mov
setne
imul
jg
mov
pop
add
ret
xor
cmp
daa
jae
js
gs
leave
je
or
push
push
push
mov
push
lds
adc
push
outsl
inc
jmp
int3
push
insl
jge
cltd
sbb
lret
ja
adc
mov
scas
sub
pushf
sub
xchg
or
mov
cmc
std
and
add
fistpll
pop
or
popf
or
dec
add
lea
enter
call
leave
outsb
xchg
daa
add
mov
dec
mov
dec
mov
or
cld
xlat
adc
testb
adc
fistps
ljmp
adc
decb
ret
dec
adc
sbb
add
adc
add
call
mov
sub
fildll
je
push
pop
ja
jmp
sbb
cmp
dec
sbb
and
ret
dec
mov
lods
xchg
adc
popa
ljmp
cmp
adc
popf
enter
call
scas
sub
pushf
sbb
data16
inc
dec
inc
mov
or
or
rol
adcl
push
cltd
jo
lea
lcallw
push
call
ja
xchg
cmp
adc
mov
inc
or
push
movsb
jae
add
mov
dec
add
movsb
add
mov
mov
es
mov
imul
dec
jns
fiadds
cltd
stc
js
inc
mov
inc
lret
test
add
loope
sti
leave
sar
lea
daa
loop
test
adc
lock
int
cld
or
pop
call
mov
pop
repnz
lea
lock
loope
mov
loop
xor
push
call
ret
mov
pop
out
mov
jb
jo
xchg
in
lods
add
rorb
push
and
leave
adc
gs
into
lds
jecxz
jp
and
and
cmp
enter
jo
inc
loop
push
std
inc
dec
hlt
cmp
mov
movsb
jbe
add
mov
push
mov
rcr
inc
ljmp
in
and
pcmpgtd
sub
jp
fsubl
lods
mov
or
add
aad
ja
pop
mov
add
cmpsb
mov
add
cmp
fldl
mov
gs
adc
and
faddl
lock
inc
das
or
sbb
push
pop
aad
or
xor
xchg
jo
mov
add
sbb
in
push
clc
cmp
and
mov
das
nop
xchg
fs
adc
fsub
pop
call
push
push
data16
push
mov
mov
shll
les
add
inc
and
sahf
daa
je
stc
pop
mov
test
outsl
dec
mov
jbe
jo
leave
test
shll
dec
push
push
lea
push
add
aas
stc
xor
or
jg
icebp
leave
ds
jmp
or
push
mov
shl
andb
push
or
cmp
add
lea
jmp
pop
or
test
aaa
inc
jno
sti
loop
cmp
adc
pop
and
shlb
not
ljmp
lea
inc
pop
decl
mov
data16
inc
add
cmp
jb
ljmp
fwait
add
xchg
jno
adc
push
sbb
jp
or
mov
jbe
lcall
push
cmp
inc
addl
bound
imul
fstl
xor
add
add
xor
pop
pop
jmp
in
xchg
insl
jae
decb
jl
mov
hlt
cmp
mov
sub
fbld
lret
jnp
sub
imul
aam
ljmp
call
loop
std
lods
in
mov
lahf
inc
cmpsb
stc
cwtl
loope
mov
xlat
cs
int
test
andb
push
or
or
addr16
pop
mov
or
ret
push
sub
push
cmp
in
test
popa
xor
xor
inc
into
sbb
test
test
movsb
cwtl
dec
lock
add
sahf
pop
add
push
mov
lea
lret
into
or
jle
and
or
inc
sub
or
add
call
pop
ds
aam
lock
inc
dec
test
cmp
dec
test
xchg
clc
ss
add
adc
sbb
fadds
mov
ja
push
in
test
cmp
sbb
sbb
lds
in
sub
push
xchg
test
mov
shrl
rclb
imul
test
loopne
xchg
les
mov
xchg
mov
aad
inc
lock
mov
aas
mov
adc
add
jg
nop
frstor
pop
shrl
cs
xchg
mov
ret
adc
mov
add
mov
and
nop
push
hlt
fsubr
mov
or
jmp
inc
xchg
out
rorb
inc
push
jne
cmc
cs
or
dec
mov
sbb
scas
lcall
and
or
xor
and
dec
or
push
sub
mov
inc
cmp
mov
aad
sbb
ret
sbb
dec
mov
cld
sub
ret
and
add
out
sbb
call
dec
dec
or
mov
les
inc
adc
xor
jmp
fs
pushl
xchg
pop
or
push
add
daa
in
jmp
pop
daa
lret
clc
inc
sub
movzwl
rorl
jge
sbbl
sti
bound
jns
and
lods
add
mov
int
and
push
shlb
aad
cmp
dec
push
les
test
cmp
mov
xchg
pop
jmp
push
inc
lret
jecxz
bound
adc
in
adc
pop
adc
pushf
fists
mov
dec
cmp
into
sti
jno
adc
les
rcll
and
loopne
pop
xchg
dec
out
push
fwait
push
dec
xor
xor
xchg
xchg
jg
or
fwait
mov
pause
pop
dec
jmp
enter
dec
fsubr
add
aad
call
and
inc
jge
les
in
inc
pop
lahf
jae
mov
fiaddl
dec
in
daa
outsb
sbb
mov
or
and
jg
pop
add
in
imul
inc
clc
sub
jmp
cld
push
cmp
rcrb
sub
or
repz
sub
mov
cmc
icebp
call
and
push
imul
out
inc
stc
and
int3
adc
add
push
jp
jns
sbb
jnp
xchg
jbe
cmp
and
sbb
and
and
int3
sbb
and
je
add
push
leave
jnp
inc
hlt
test
std
int
aaa
and
jnp
mov
inc
lock
sti
mov
adc
cmp
add
sbb
cltd
xchg
sub
adc
imul
jp
sbb
and
pop
mov
mov
lret
mov
adc
cmp
mov
mov
clc
mov
aam
out
lcall
rclb
in
sti
jnp
pop
sub
dec
clc
dec
das
je
pop
push
stc
cwtl
cmpsb
xor
scas
cmp
cli
mull
sti
imull
fcomps
dec
cld
ds
pop
xchg
push
in
add
add
push
add
repz
stc
adc
pop
push
lahf
dec
mov
in
push
mov
incb
icebp
push
inc
enter
mov
or
push
mov
in
cli
add
or
pushaw
in
je
lahf
mov
jmp
sub
call
pop
cmp
stc
cltd
push
or
cmpsb
jo
jecxz
rolb
cmp
or
testb
push
mov
std
mov
push
mov
dec
dec
and
lds
lods
imul
inc
sub
add
pop
scas
jne
and
scas
cwtl
dec
add
faddl
call
cmpsb
jb
outsl
test
push
dec
je
sarl
repz
loope
xor
aam
mov
pop
mov
out
rorb
push
mov
std
jp
or
fcompl
adc
jne
mov
inc
jo
ss
jae
add
xor
test
divb
pop
adc
loopne
mov
adc
mov
push
test
inc
mov
in
and
bound
pop
push
nop
jns
in
sti
and
scas
loop
add
cld
adc
fcoml
push
je
push
mov
shr
jmp
mov
daa
repnz
cmp
xchg
or
mov
lret
cmp
nop
jne
scas
or
hlt
call
xlat
push
pop
jnp
jle
mov
mov
mov
and
decb
subb
and
xchg
jnp
cs
stc
inc
sub
mov
sbb
mov
pop
mov
or
push
adc
test
icebp
and
movsb
fdivr
xchg
xchg
adc
inc
ret
mov
add
mov
push
cmp
or
inc
les
push
sbb
decl
repnz
and
lock
sti
inc
cmp
icebp
push
aam
inc
shlb
and
inc
roll
test
xor
adc
or
inc
and
repz
inc
and
inc
add
push
push
dec
movsb
loop
and
rolb
dec
pop
add
and
stos
dec
mov
adc
xchg
pop
mov
lcall
xchg
and
js
or
jle
add
leave
insl
inc
lret
sub
fs
subl
adc
cmp
adc
adc
into
cmc
sbb
rcll
or
add
sbb
push
add
cmpsb
repz
insl
ret
bound
sbb
std
adc
mov
push
push
mov
pusha
mov
jns
dec
pop
mov
cwtl
dec
mov
je
push
das
jmp
rcll
clc
push
xchg
jmp
sbb
or
ret
lods
adc
sbb
dec
repz
sbb
and
sub
jmp
xor
pop
cmp
inc
loopne
push
sti
lcall
xchg
out
push
dec
mov
fcoms
mov
shlb
scas
shlb
mov
xchg
adc
test
mov
mov
cvtps2pi
jmp
les
inc
in
adc
sub
cmp
adc
and
add
jl
or
mov
call
or
mov
or
scas
inc
enter
push
aam
bound
fiaddl
ljmp
or
mov
cmp
xor
push
mov
test
negl
and
dec
xor
inc
pop
ss
arpl
sub
jmp
mov
ljmp
adcb
adc
sbb
lods
fisubl
add
add
std
xor
sub
adc
or
xchg
popa
cmp
ror
or
and
jl
mov
mov
add
cmp
out
mov
mov
cmp
mov
cs
inc
mov
jbe
pop
mov
jno
inc
and
testb
cmp
and
jnp
call
pop
pushf
loop
or
inc
mov
jp
mov
sbb
sbb
lret
mov
test
shl
adc
jo
daa
rolb
adc
test
cmp
jl
pop
mov
in
sub
ret
adc
mov
push
pop
sub
lcall
add
fnstcw
call
nop
rcrl
and
aam
mov
mov
inc
push
inc
outsl
or
int
push
das
sub
push
push
sbbb
or
sahf
jno
daa
pop
lds
divb
xchg
pop
inc
bound
movsl
push
sub
repnz
inc
xchg
data16
pop
pushf
imul
das
outsl
pop
arpl
or
movsl
fdivl
mov
fisttps
mov
cmc
sub
cmp
mov
pop
jl
lret
xchg
dec
lret
dec
or
lods
mov
mov
jmp
cmp
pop
sbb
and
in
xchg
insb
popf
pop
or
xchg
xchg
pop
xchg
mov
sti
add
xor
movsb
jl
add
push
xor
inc
push
and
add
xchg
adc
mov
mov
or
inc
mov
cmp
stos
stos
mov
aas
loop
test
fdivr
xor
mov
xor
daa
and
imull
popa
lea
xor
or
inc
add
lcall
xor
push
scas
cmp
mov
mov
shrl
mov
sbbl
add
xchg
dec
mov
cwtl
pop
cmp
mov
fucomp
inc
mov
lea
xchg
adc
fisttpll
orb
jno
sbb
adc
addb
clc
adc
popf
push
xor
call
cltd
xor
mov
pop
mov
push
movsb
sub
push
rclb
or
mov
and
or
xor
and
xor
push
test
dec
enter
pop
scas
mov
mov
cmp
je
out
add
jge
in
daa
js
mov
adc
xor
mov
pop
add
inc
jb
push
push
cli
adc
jne
inc
nop
lret
dec
push
mov
pop
jle
mov
adc
stos
in
lahf
loopne
mov
pop
ret
dec
xchg
inc
mov
cmpsl
xchg
jmp
int
sub
das
ret
inc
cmpsl
and
inc
out
cmp
xlat
rcll
enter
addr16
gs
decb
add
ja
int3
das
add
xor
fadds
mov
push
adc
sbb
pop
std
adc
stos
xor
mov
fst
cmp
test
clc
pushf
mov
or
jge
and
xchg
jo
pop
pop
adc
cwtl
cmp
pop
push
daa
repz
in
imul
loopne
and
inc
adc
and
ds
data16
stos
push
xchg
xor
sbb
sub
sub
mov
call
pop
and
mov
aad
fldenv
cmpl
bnd
mov
add
inc
ljmp
adc
test
pop
and
sarl
dec
daa
in
add
popa
and
mov
or
mov
subl
pop
adc
or
sbb
aas
sbb
mov
dec
or
dec
mov
cld
mov
mov
pop
xchg
cmp
push
ret
push
sbb
xor
sbb
and
andb
xor
mov
movzbw
adc
adc
fiadds
cmp
lds
cmpsl
add
dec
adc
xor
pop
wrmsr
xor
fs
subl
inc
js
scas
sub
mov
std
pop
fldcw
xor
xchg
idiv
push
mov
les
mov
dec
xchg
test
aam
and
add
in
inc
xchg
pop
or
add
jmp
dec
xor
push
cmpsl
cltd
and
adc
and
sub
cmc
dec
ret
lcall
push
mov
dec
mov
test
adc
or
push
mov
arpl
enter
jns
sbb
int3
mov
inc
loop
dec
bound
xor
ficompl
or
je
adc
and
pop
pop
adc
ret
add
jmp
andb
cmp
mov
lods
test
dec
jp
inc
inc
push
test
dec
inc
jmp
shll
pop
daa
add
filds
pop
sahf
or
fiaddl
fcomps
mov
jnp
ja
mov
or
sbb
addb
sbb
adc
pop
inc
mov
xor
mov
std
bound
cmp
icebp
out
xchg
or
js
orl
inc
adc
rclb
mov
add
add
push
push
pop
mov
cmp
outsl
add
cmp
xchg
shlb
popl
into
inc
popf
lret
addr16
hlt
hlt
pop
cmpsb
sbb
inc
daa
in
bound
jnp
jbe
sub
add
jns
sbb
arpl
adc
push
jecxz
mov
mov
inc
inc
fs
jl
dec
mov
loope
or
cmp
and
ljmp
out
pop
mov
fstps
leave
push
and
jne
fadd
sbb
addb
negb
jecxz,pn
dec
jbe
push
scas
pop
sub
and
cli
sbb
adc
ljmp
loop
adc
idivb
dec
je
clc
sub
ds
push
push
enter
add
lret
dec
inc
cs
lods
cmp
mov
test
sub
scas
mov
sarl
ds
sti
das
frstor
adc
mul
or
lea
mov
and
xchg
inc
jmp
std
sarl
mov
pop
ficoml
jle
imul
mov
fsubr
push
mov
mov
in
fldenv
ret
mov
cwtl
sbb
lcall
loop
jge
fistpll
in
push
aas
mov
out
mov
enter
ror
mov
mov
mov
inc
sbbb
push
gs
mov
hlt
into
push
or
rcr
or
fbstp
and
and
shrl
nop
test
call
mov
push
mov
rclb
das
mov
fwait
data16
xor
je
call
lods
repnz
idiv
inc
add
rorl
js
mov
cmpsb
and
leave
fstpl
sbb
cmp
mov
jne
fsubr
and
pop
clc
sbb
fs
or
sbb
adc
mov
stos
push
sub
test
cs
or
mov
mov
jne
or
push
or
mov
or
call
mov
jno
rolb
in
enter
cmp
movups
push
adc
sti
cmpsl
call
xchg
jmp
out
in
jne
sub
hlt
cmp
jne
sub
sbb
add
pop
aam
and
lds
jne
push
mov
add
sti
mov
shrb
test
or
xchg
cmc
push
test
mov
mov
fs
push
mov
rorl
adc
pop
xchg
mov
inc
sti
jnp
ljmp
jne
inc
push
mov
mov
push
xor
call
mov
sbb
cltd
jne
insb
nop
dec
ljmp
or
adc
sub
and
push
mov
imul
dec
insl
jns
imul
les
fadds
mov
lahf
dec
lcall
faddl
ja
dec
orb
jmp
scas
and
push
jl
jl
cli
lahf
icebp
aad
aam
and
sahf
push
add
and
push
pop
or
leave
test
addr16
push
pop
sub
mov
xchg
fildll
sub
sbb
pop
sti
sub
pop
xor
and
mov
cltd
cmpsb
pop
pop
cmc
add
adc
jle
push
mov
repz
jo
push
sbb
mov
mov
nop
cmc
or
xlat
in
mov
push
jle
nop
std
fs
mov
push
push
ds
xor
dec
in
add
push
mov
push
ljmp
hlt
sti
in
mov
push
dec
inc
cmpsl
hlt
fisubs
jle
inc
andl
in
jbe
jle
jno
pop
stc
mov
clc
movsl
push
fsubs
inc
out
or
cld
inc
mov
sub
or
cld
push
push
lea
sti
xchg
std
inc
inc
or
add
push
dec
push
stos
push
data16
popa
cld
jb
jl
mov
pop
pusha
inc
std
inc
jno
idivl
pop
push
adc
mov
dec
inc
xchg
call
call
sub
fisubl
push
adcl
clc
je
std
push
bnd
lods
imul
add
leave
cmp
xchg
scas
lock
inc
add
cmp
push
or
or
push
cmpl
mov
adc
mov
mov
mov
movsb
aas
shr
lods
push
fs
lods
xchg
dec
loop
adcb
mov
loop
sbb
jbe
inc
and
je
add
add
jb
jmp
es
push
jae
lea
inc
mov
xchg
xor
aaa
jb
aad
mov
outsl
pop
jnp
lods
popf
decl
je
push
cmp
pop
call
sbb
inc
adc
std
and
dec
mov
jg
sub
mov
xchg
inc
out
ret
push
and
mov
cmp
jnp
stos
adc
and
les
push
push
sub
xchg
mov
ret
scas
pop
mov
mov
push
and
popf
clc
jecxz
add
adc
out
xor
or
and
mov
mov
mov
or
and
pop
pop
adc
shrl
xor
dec
mov
outsl
push
sub
mov
cmp
mov
cmp
push
or
por
inc
and
cs
xor
stos
loop
imul
dec
call
add
js
cmp
lret
and
mov
outsl
inc
cmp
movsb
and
movsb
pop
lcall
adc
push
cmc
adc
and
sbb
jns
shr
or
hlt
lcall
push
sbb
jmp
aam
pop
sti
test
loopne
pop
sub
push
sti
mov
inc
sbb
sub
inc
adc
andb
mov
push
inc
ja
addr16
mov
and
sbb
mov
cmp
push
sbb
inc
adc
icebp
out
adc
inc
mov
movsl
jne
push
pop
fs
xor
sbb
and
lock
pop
jmp
and
pusha
jmp
pop
adc
jae
or
sbb
test
js
repnz
inc
cmp
mul
push
jmp
sub
jecxz
lret
mov
ffreep
pusha
and
pop
sub
jl
aam
xchg
adc
cwtl
hlt
lahf
lcall
xor
mov
inc
adc
add
in
in
xlat
das
out
push
test
cs
pop
sti
xor
stos
std
inc
xchg
adc
test
mov
jle
into
addr16
inc
inc
or
jne
ds
mov
fs
cli
mov
stos
jecxz
inc
adc
inc
scas
push
sbb
add
cmp
pusha
leave
cmp
cltd
sti
popa
dec
lock
stos
cmp
mov
adc
scas
fs
mov
mov
add
adc
lahf
pusha
sub
push
lcall
fimuls
loopne
push
aam
hlt
in
sub
ret
std
pop
fmull
dec
and
pop
push
dec
mov
adc
mov
test
xor
sub
mov
mov
popf
enter
clc
push
test
mov
push
push
add
es
adc
or
inc
cwtl
lods
int
pop
or
add
add
mov
xor
xchg
addr16
jmp
cmpsl
xchg
xchg
dec
mov
jbe
lea
or
or
idiv
adc
adc
pop
or
mov
cmp
cmpsl
jge
jmpw
adc
xlat
push
push
xchg
xor
pushf
and
mov
addr16
stc
int3
rcl
stc
mov
jns
jg
jbe
enter
cld
pop
add
je
cmp
xchg
mov
in
xor
enter
pop
sub
popf
enter
push
add
dec
popa
lahf
jmp
xchg
scas
cmpsl
sbb
push
mov
mov
sbb
xchg
cwtl
add
mov
adc
lods
xor
insl
stc
cmp
mov
movsb
pop
lret
inc
add
add
outsb
mov
lods
mov
xchg
jno
adc
loop
repz
outsl
mov
adc
pop
xor
loope
daa
mulb
xor
inc
adc
out
mov
enter
call
cmp
pop
mov
cmp
rorl
inc
xchg
ljmp
icebp
jmp
cmp
jmp
jge
test
push
rolb
shll
sbb
repnz
imul
or
andl
out
xchg
sti
imul
mov
jl
das
hlt
add
pop
outsb
push
cmp
sbb
jmp
mov
xor
jl
mov
test
pop
out
or
mov
jne
and
xor
mov
sbb
mov
jb
mov
pop
or
lods
or
xchg
in
xchg
push
adc
call
fisubrl
pop
mov
fildl
out
fsubl
mov
jno
enter
adc
inc
call
mov
xor
cmp
sbb
lock
cld
xor
mov
inc
cwtl
adc
nop
inc
xor
mov
mov
push
push
sub
mov
dec
daa
cltd
and
mov
adc
pop
xor
sar
dec
sub
and
cmpb
and
adc
adc
sub
test
xor
xchg
int
sbb
jne
push
std
inc
sbb
jmp
scas
push
push
pop
push
and
pop
inc
pop
test
pop
xchg
push
in
push
or
or
xchg
leave
mov
xor
mov
mov
je
je
add
push
sahf
or
push
pop
ljmp
cld
or
call
inc
add
dec
es
adc
ja
movl
es
add
cmpb
xchg
adc
sbb
hlt
adc
inc
movb
subl
sbb
and
das
cmp
ficoms
movsbl
mov
out
dec
push
inc
call
lock
jb
gs
dec
push
in
push
adc
push
adc
push
xchg
adc
push
cmp
clc
push
mov
je
leave
mov
jmp
sbbb
dec
add
push
lret
cmp
daa
popf
cmp
sbb
je
popf
and
pop
pop
enter
loope
or
inc
stc
call
push
push
sbb
cmp
and
ljmp
cmc
inc
imul
xor
jmp
in
push
push
imul
je
mov
iret
mov
cwtl
lahf
mov
and
mov
and
sar
adc
testl
data16
push
adc
mov
and
test
push
ficoml
clc
dec
int
int
add
lcall
mov
mov
in
ror
cld
adc
push
mov
lods
push
cmp
test
cli
adc
es
pop
shrl
push
mov
cli
add
cwtl
push
clc
call
or
or
xchg
push
std
inc
insb
mov
lret
je
pushf
mov
ja
outsb
push
mov
jmp
outsl
push
icebp
imul
call
mov
cmp
aaa
xchg
pop
test
enter
dec
gs
dec
movsl
mov
out
dec
rolb
inc
or
pop
jl
call
add
sub
mov
add
mov
jmp
adc
lds
cmp
sbb
push
sbb
loopne
sbb
jno
fwait
loope
mov
je
std
test
push
in
push
adc
outsb
or
cmp
mov
jne
inc
push
xor
in
outsb
in
and
push
sub
inc
push
fldenv
js
mov
and
push
dec
sub
imul
leave
inc
add
xchg
adc
popf
push
and
push
or
out
push
cs
dec
xor
push
inc
push
in
pop
mov
int3
sarl
sbb
adc
pop
jecxz
int
in
or
ja
add
mov
or
push
adc
lea
inc
out
das
ljmp
push
out
adc
not
int3
adc
outsl
inc
add
out
cmpsb
cmp
and
adc
add
int
out
fwait
mov
daa
sbb
imul
dec
jmp
je
pushf
and
and
xchg
out
lock
xchg
jp
pop
stos
mov
push
push
jg
xchg
movsb
call
add
pop
cwtl
adc
xor
les
xchg
cmp
mov
add
bound
jo
lods
push
push
stos
inc
out
push
loop
out
ljmp
aaa
push
jge
addr16
inc
inc
cmp
rcrb
jg
push
xchg
adc
sbb
sbb
movsb
and
jl
out
je
cs
les
out
push
adc
mov
and
loop
and
in
pop
xchg
adc
push
orb
or
js
add
adc
lahf
pop
xchg
lret
test
pop
pop
sub
pop
mov
ja
ret
movsl
mov
out
mov
adc
les
xor
xor
push
cmpsb
shrl
movsl
enter
ret
sub
scas
mov
jecxz
divl
scas
adc
sbb
cmc
push
clc
ss
push
push
jo
mov
pushf
add
sub
xor
out
imul
popf
jno
xchg
adcb
push
mov
or
insb
rcl
das
lretw
xchg
pushf
and
jge
xchg
or
neg
popf
jno
cmp
cld
xchg
negb
sub
inc
xchg
push
lods
adc
mov
stos
roll
sub
daa
xchg
push
sbb
inc
leave
push
test
mov
mov
cmp
pop
jne
jb
in
das
add
mov
mov
sti
loop
mov
outsb
cmpsl
call
test
mov
loopne
cmc
out
xchg
sbb
adc
imul
daa
pop
ja
push
sub
mov
dec
sub
mov
add
xchg
push
mov
mov
lock
sbb
push
and
cmp
inc
nop
sbb
adc
pop
sub
outsl
repnz
push
lds
cmpsl
imul
repnz
jns
cmp
call
subb
sbb
adc
push
inc
pop
out
mov
insb
inc
cmp
js
pop
xchg
pop
or
shl
mov
in
push
cwtl
push
push
mov
scas
fs
call
pop
sub
cwtl
push
cwtl
mov
in
push
repz
push
push
je
jb
repnz
dec
sbb
xor
rcl
scas
fs
or
adc
adc
mov
push
hlt
call
sti
je
scas
or
mov
and
jle
psrlw
jb
lahf
fwait
pop
adc
jg
push
fdivr
sbb
aad
out
loop
ja
mov
and
and
push
mov
loope
pop
sbb
bound
test
xchg
hlt
inc
cmp
lock
sbb
sub
mov
movsb
les
dec
and
iret
push
inc
mov
bound
pop
push
push
jp
subb
inc
dec
adc
pop
mov
xchg
enter
neg
stos
cmp
jne
mov
pop
repnz
mov
jns
xchg
add
stos
nop
adc
ljmp
call
mov
sbb
jmp
or
inc
mov
movsb
scas
sub
mov
fisubrl
rorb
rclb
mov
cld
rolb
push
adc
xlat
add
cmp
pop
inc
ljmp
xchg
loopne
mov
inc
dec
inc
rcrb
cwtl
enter
jno
cmp
mov
or
icebp
dec
jb
pop
dec
int
mov
or
lcall
das
ds
test
inc
dec
cmc
loope
inc
jae
lret
lods
and
std
xchg
jno
xor
insb
jp
adc
push
jne
fdivl
inc
ljmp
xor
sbbb
or
test
sub
enter
ficoml
icebp
xlat
dec
push
out
daa
push
stc
sub
lock
pop
ljmp
and
mov
punpckhdq
xchg
mov
jae
call
and
pop
sub
xor
fwait
push
mov
std
scas
pusha
push
in
ja
int3
dec
pop
and
dec
rclb
lds
mov
jne
xchg
cltd
mov
in
mov
mov
fisttpl
adc
add
lea
pop
sub
ret
jmp
xchg
fldl
jbe
or
inc
mov
out
imul
outsb
shl
repnz
adc
push
pop
jl
fmuls
xor
imul
xchg
mov
movsb
sub
mov
movsl
jge
fnsave
pop
sbb
fs
sub
mov
in
inc
rclb
push
sti
sbb
add
nop
js
sub
stos
add
ret
sub
fmul
or
mov
jp
add
pop
jae
popf
or
testl
push
mov
int
jo
pop
jne
xlat
cmp
xchg
outsl
les
and
sbb
mov
test
mov
adc
cmp
mov
pop
xchg
lret
je
cwtl
cmp
fdivrs
ja
push
push
dec
or
call
call
dec
fs
jl
sbb
jl
mov
mov
inc
cmpsb
ficompl
cmp
jg
jno
push
rolb
jne
or
push
clc
xor
xorb
mov
and
rcrl
cli
dec
pop
shll
dec
and
cmp
cmpsb
loope
push
inc
mov
dec
test
jl
push
push
push
insl
stos
cmc
push
push
in
xor
push
mov
inc
orb
jne
out
dec
sub
popa
and
popa
push
sub
aas
scas
add
xchg
pop
sub
or
push
call
daa
sbb
push
push
jmp
dec
jmp
movsb
add
in
std
hlt
ja
pop
mov
pop
cli
mov
imulb
loopne
sbb
mov
push
mov
and
ljmp
xchg
pop
fsubrl
cmp
pusha
xor
sahf
mov
cmp
dec
mov
push
add
adc
or
loop
and
dec
in
sarb
xchg
loopne
dec
inc
in
add
fmuls
add
movsb
xchg
shl
or
orl
adc
insb
lock
rcrb
lret
fst
sub
mov
jnp
adc
subb
enter
out
in
sti
subb
jecxz
sbb
adc
xor
push
jecxz
nop
or
insl
mov
mov
dec
shlb
faddl
fmull
call
mov
or
jbe
and
and
inc
imul
pusha
sub
test
or
sub
pop
cmpsl
ja
push
mov
or
inc
lret
and
or
xchg
imul
jmp
inc
jo
xchg
xchg
pop
or
sete
pop
enter
xchg
mov
cli
gs
or
jmp
inc
and
pop
jl
outsb
push
xor
xlat
cmp
cmp
jne
sub
mov
xchg
orl
push
ljmp
jne
sub
add
adc
mov
jmp
mov
adc
or
das
or
es
loop
push
lods
call
je
dec
insl
sub
cli
mov
sub
mov
mov
xlat
or
sbb
movsb
jg
dec
or
enter
sbb
sbb
push
or
repnz
cmp
fnstcw
pop
mov
popw
dec
sbb
push
bound
sub
divl
mov
dec
rcrl
xor
xlat
out
or
addr16
xchg
push
cwtl
call
movsb
jle
lds
mov
jmp
ja
arpl
sbb
jg
jecxz
push
inc
adc
pushf
mov
mov
inc
xchg
jmp
cs
call
mov
mov
jle
pop
inc
aas
push
cmpsl
sarb
mov
add
cmp
in
add
loopne
or
cld
adc
and
and
push
inc
and
clc
fwait
shlb
mov
aaa
icebp
xor
bound
test
call
into
lods
jbe
mov
inc
sarb
push
fmul
pminub
push
mov
daa
sar
inc
in
dec
test
push
cmp
sub
mov
and
mov
int
jne
js
xchg
je
dec
pop
xor
and
and
rolb
dec
adcl
xchg
sub
int
ret
test
orl
xor
mov
sub
cmp
or
jne
cli
or
add
or
mov
mov
cmp
dec
sbb
mov
mov
push
data16
cwtl
sub
in
push
insl
je
push
xorl
mov
fsubl
and
adc
jne
dec
or
inc
and
mov
sub
test
fimuls
enter
dec
sub
or
je
mov
add
mov
pop
in
jmp
insb
icebp
stc
push
xchg
mov
or
and
stc
inc
pop
cli
mov
adc
or
adc
jmp
lods
pop
sub
arpl
cmp
out
or
and
gs
adc
repz
es
mov
and
push
lock
clc
push
insb
or
dec
xchg
jmp
out
xchg
dec
pop
add
mov
lea
jmp
sub
or
loop
or
inc
lock
sti
xchg
arpl
mov
and
inc
pop
sub
pop
cli
fucomp
daa
pop
icebp
pusha
adc
orl
ret
push
es
cmp
mov
add
jae
xchg
test
repnz
xchg
sti
xchg
and
pop
sub
mov
sub
mov
sub
jge
push
jl
arpl
mov
and
rcl
or
movlps
xor
dec
xor
int
cmp
les
and
aas
adc
cmp
push
les
push
push
call
test
dec
dec
push
adc
sbb
push
in
xchg
adc
adc
into
dec
and
and
mov
ror
or
or
in
xchg
bound
inc
pop
xor
sub
or
test
fdivs
ds
pop
push
les
cmpsl
imul
aam
gs
jno
adc
sti
adc
ja
test
pop
repnz
push
into
lods
mov
push
js
inc
add
xlat
pop
aam
mov
out
push
cli
adc
jl
xlat
sbb
scas
sub
cmp
stos
sbb
jg
inc
mov
cmpb
in
xor
inc
xor
add
push
lods
sti
das
ja
seta
jae
call
popa
movsl
push
mov
and
xchg
cmp
nop
push
pop
loop
addr16
ljmp
aam
lds
or
pushf
xchg
xchg
xchg
xchg
in
mov
data16
sub
mov
xchg
stos
and
ret
sti
mov
stos
cmp
js
call
icebp
pop
cmovne
outsl
enter
jle
loop
scas
adc
data16
dec
or
xchg
fs
dec
in
mov
repnz
nop
pop
mov
push
xchg
adc
ljmp
xorb
lcall
adc
ljmp
loopne
cmp
and
out
sbb
jb
or
rclb
adc
xchg
outsl
sub
lret
sbb
xchg
xchg
in
adc
push
popf
dec
das
in
sub
push
xor
les
dec
mov
inc
pusha
push
dec
lcall
sub
outsl
mov
inc
mov
je
je
inc
in
je
xor
cld
mov
pop
mov
pop
mov
and
and
or
inc
pop
xchg
or
clc
daa
andb
jno
nop
scas
lret
jecxz
jno
mov
adc
or
inc
lret
aas
popf
movsl
push
sub
mov
inc
and
bound
lods
mov
or
jmp
rcrl
pop
sbb
xchg
push
int
cmp
pop
mov
ret
ja
aaa
dec
push
mov
insl
inc
leave
mov
jge
mov
rorl
push
mov
jns
xchg
push
or
sbb
les
mov
inc
xor
popa
scas
mov
push
lret
xlat
inc
push
adc
jne
cmp
adc
push
and
call
pop
adc
imul
cwtl
xchg
dec
lahf
xchg
or
mov
call
aad
xchg
cmp
fincstp
xor
sub
enter
scas
inc
mov
outsl
data16
mov
mov
iret
mov
mov
scas
dec
pop
push
sbb
adcb
pop
dec
and
pop
test
dec
enter
daa
movsl
mov
sub
add
leave
dec
mov
xor
xor
call
jno
jge
jp
sbb
pop
pop
jb
or
test
mov
bound
sbb
les
and
test
adc
mov
push
mov
enter
and
mov
pop
jmp
add
in
mov
lea
sbb
xor
mov
shlb
nop
push
push
mov
and
rcll
lea
movzbl
leave
push
leave
ja
lret
fdivl
sub
lds
test
orb
ret
shl
sub
mov
jne
repz
jge
mov
mull
mov
sahf
jne
sbb
roll
mov
dec
mov
sbb
push
jge
xchg
pop
std
dec
mov
mov
sahf
push
je
cwtl
mov
es
xlat
loop
pusha
pop
or
jnp
in
testb
les
push
jecxz
and
xchg
sarl
cmp
push
ss
mov
mov
jae
inc
and
lds
push
mov
adc
ja
in
test
cli
test
testb
push
call
or
popf
lods
lods
pushf
into
mov
decl
out
xor
dec
cli
out
and
insb
pushf
push
sbb
icebp
dec
xchg
mov
add
mov
xor
pop
fdivrl
mov
loope
movsl
and
xchg
xchg
jb
mov
and
cmp
mov
xor
loope
push
sbbb
and
mov
lahf
call
je
scas
sub
std
enter
push
adc
xchg
xor
lea
test
cwtl
add
pop
notb
cmp
adc
movsb
xchg
sub
push
adc
sbbl
bound
call
mov
js
loopne
push
mov
les
adc
sbb
pop
pop
pusha
jle
pop
mov
adc
adc
test
add
rorb
ret
jge
scas
sub
cmp
adc
adc
xor
add
xor
mov
cvtps2pi
sub
fisubs
call
mov
inc
std
pusha
add
jnp
mov
xor
and
push
and
mov
xchg
jl
pop
loope
or
test
pusha
test
or
cmc
adc
ret
lahf
divb
test
ret
xor
xchg
jmp
inc
incb
je
popf
or
push
add
add
inc
aam
pop
xchg
test
shrb
call
jp
sub
cmpl
daa
incb
rolb
call
pop
mov
mov
ja
call
dec
dec
jne
or
lods
and
cmp
rorl
ret
div
sbb
in
and
les
bound
mov
xor
out
mov
stc
dec
pop
imul
push
push
add
dec
push
or
aas
inc
sahf
gs
pop
jl
inc
sbb
aam
dec
test
mov
call
dec
rclb
push
push
sbb
mov
fwait
nop
in
jne
pop
jle
js
and
cmpsl
xor
cmp
adc
cwtl
orl
mov
loop
sbb
push
and
daa
cmp
es
xchg
or
jo
xchg
mov
pop
dec
and
jmp
push
aaa
push
push
jne
mov
insl
cmpsl
inc
loop
jne
mov
je
push
outsb
lret
iret
popf
dec
pop
or
inc
push
addb
adc
adc
or
cmova
sbb
push
inc
dec
and
pusha
rorb
xchg
adc
imul
jg
fwait
kandb
pushl
mov
inc
ficoml
pop
xor
aas
or
mov
fildll
mov
int
mov
pop
test
add
adc
pop
mov
cmp
xchg
fstl
decb
mov
mov
push
lret
push
lock
pop
adc
ret
pop
jle
mov
dec
sbb
jmp
pop
es
adc
fisubrl
enter
push
mov
mov
adc
mov
dec
test
fs
cmp
sbb
push
inc
cmpsl
les
push
dec
test
xor
cmp
cs
nop
sub
adc
in
pop
aam
and
js
movl
xchg
es
fs
dec
cmc
clc
bound
adc
adc
and
sub
inc
sub
dec
xchg
xor
cmp
les
sbb
inc
das
adc
mov
sbb
cmpsl
jbe
pop
lret
push
fs
mov
in
jo
mov
jl
and
xor
adc
xchg
sbb
and
sub
gs
pop
mov
adc
enter
and
and
sbb
punpckldq
mov
mov
popf
dec
cld
xchg
pop
xchg
pop
bound
psubusw
lahf
push
out
jne
loop
pop
adc
sbb
ss
movswl
or
and
or
out
adc
add
jb
xchg
sarl
mov
mov
lock
das
mov
adc
les
and
rorl
and
test
ja
bound
push
lret
call
jp
das
mov
mov
dec
jle
test
xchg
lock
dec
mov
aam
push
adc
push
in
and
cmpsb
dec
adc
and
mov
dec
dec
lock
fxch
rcrb
mov
dec
int
sbb
xchg
mov
sbb
je
popf
adc
xchg
movsb
pop
outsb
mov
fs
std
icebp
xor
fucomp
adc
inc
or
mov
mov
pushf
and
hlt
dec
and
jno
and
or
push
cltd
dec
nop
out
adc
in
adc
cmpb
inc
or
rclb
or
inc
cmp
dec
cmp
pop
sub
decb
dec
test
adc
and
and
xchg
in
ret
jmp
je
cmp
adc
gs
inc
pop
sub
xor
push
mov
adc
outsl
les
or
sub
inc
mov
and
xor
arpl
loop
cmp
sbb
rcrl
pop
xchg
mov
push
xchg
movsl
les
nop
add
jp
add
les
std
dec
push
fisubs
call
mov
xor
test
push
clc
or
inc
sti
and
add
std
mov
stos
mov
mov
es
mov
jo
aam
push
lcall
dec
out
pop
push
adc
pop
movsl
mov
dec
dec
ljmp
in
dec
jo
clc
decl
pop
sbb
outsb
mov
xor
cmp
inc
mov
sbb
fldl
and
pop
or
and
mov
fisubrs
incb
xchg
sub
pop
hlt
xchg
cli
jb
adc
into
or
jge
xor
xor
orb
push
fdiv
pop
inc
out
call
bound
cltd
mov
stc
push
sbb
js
xor
adc
out
lea
and
sbbb
or
call
or
add
push
push
cmp
add
jmp
push
cmp
stc
xchg
stos
inc
dec
mov
bnd
and
sbb
cmpb
push
psrlw
lds
cli
xchg
sub
cltd
incb
adc
xor
aas
in
fs
sbb
adc
xor
ss
pop
adc
jo
lret
outsl
cld
mov
roll
aas
add
pop
in
mov
shl
xor
or
push
jg
lds
stc
iret
mov
push
jbe
out
and
fcoml
mov
xchg
inc
push
int3
xchg
xor
fisttps
cwtl
out
pop
and
mov
push
jb
ljmp
xchg
sbb
in
leave
ja
cld
inc
int3
and
xor
sbb
pusha
and
xchg
hlt
je,pn
adc
inc
sub
ss
das
cltd
repz
sub
mov
adc
or
cmp
mov
mov
les
jae
jmp
mov
push
out
xchg
adc
push
xchg
inc
add
test
cmp
xor
jmp
jl
lea
lahf
lods
adc
add
mov
sbb
out
fdivs
fstpt
push
and
lea
sbb
pop
and
cmpl
jecxz
pushl
sbb
push
stc
xchg
adc
enter
xchg
pop
pop
je
loopne
add
mov
stos
or
fcompl
mulb
xor
sub
sbb
jo
push
movsb
sbb
sub
cmp
inc
nop
cmpsl
fnsave
inc
and
enter
jno
leave
test
hlt
pop
lcall
push
shl
rcll
mov
or
inc
sbb
cmpsl
sarl
inc
jne
fwait
push
lret
mov
cmpsb
lea
dec
push
xchg
adc
add
mov
push
xchg
jbe
pop
xor
popf
jne
sbb
or
inc
sub
xchg
idivl
pusha
inc
outsl
rorb
daa
xchg
or
add
shlb
mov
sbb
push
mov
sbb
orb
sbb
call
push
shl
hlt
mov
adc
jbe
nop
sbb
xchg
sbb
pop
jmp
ja
add
mov
sbb
fadds
xchg
xchg
add
cmp
adc
sbb
and
pop
out
push
mov
sub
mov
notb
sub
mov
inc
push
push
mov
cli
lods
sub
outsb
mov
xchg
mov
xor
jmp
push
cmpsl
xchg
cmc
dec
popa
ret
or
cld
sub
mov
sbb
and
movsb
rcrb
xor
dec
xchg
out
imul
cmp
enter
cmp
or
adc
cmpl
inc
and
push
pusha
ficoml
les
scas
test
mov
dec
cmp
pop
inc
and
add
sub
mov
jl
sbbb
sbb
cmp
pushf
sbbb
and
int3
std
push
mov
es
lods
jne
fnstcw
push
xchg
xor
cli
loop
sbb
cmc
aaa
mov
rcrl
jmp
pop
dec
jns
cld
lcall
or
mov
movsb
insl
je
insl
jle
or
enter
or
idiv
adc
jle
pop
adc
push
ja
mov
inc
sarb
stos
add
sarb
fstp
sub
cmp
insb
mov
dec
jecxz
xchg
mov
ds
int3
dec
cld
sarb
and
sub
out
inc
mov
cmp
sub
inc
lods
xchg
int
pop
movsb
addr16
aaa
dec
mov
lods
and
xor
cmp
pop
dec
scas
addr16
test
int3
xor
jne
or
fiadds
adc
mov
sbb
loopne
in
inc
jle
jp
test
mov
sub
sar
or
call
ljmp
insl
cmp
cmp
stos
adc
xchg
and
shlb
iret
lds
mov
jl
jne
adc
add
jle
adcb
out
sub
xor
out
imul
filds
mov
aas
out
aas
call
ds
sub
icebp
divb
pop
jne
fldenv
xor
dec
lret
or
mov
sarb
dec
mov
mov
adc
lods
scas
adc
sbb
adc
roll
adc
and
stos
mov
inc
add
sub
xchg
jo
sti
sub
add
popf
lock
xor
push
out
addr16
pop
mov
or
ret
and
add
lcall
adc
into
mov
mov
xchg
je
adc
push
mov
inc
pop
cmp
jne
xor
aad
pushf
push
movsl
add
data16
dec
fs
inc
and
push
add
aad
repnz
sbb
out
mov
mov
clc
fldenv
or
mov
and
push
push
push
lahf
cld
aad
stc
daa
mov
pop
pop
dec
xor
inc
das
mov
cmpsb
flds
in
pop
inc
sahf
les
popa
jno
sub
arpl
sarb
mov
sbb
xor
call
cli
jge
push
imul
inc
mov
and
loop
mov
add
and
and
stc
jne
sbb
cltd
dec
into
cwtl
sub
cmp
push
les
flds
lret
outsb
xor
call
fmulp
clc
pop
les
adc
rolb
clc
mov
dec
adc
fcoml
call
iret
int3
in
mov
jl
or
leave
mov
hlt
inc
jecxz,pt
mov
adc
int3
push
push
and
sbb
add
push
or
xchg
xor
pusha
aaa
js
sbb
and
cmpsl
loop
scas
sbb
dec
inc
jns
icebp
fists
mov
hlt
sbb
daa
jns
test
cmp
hlt
fmulp
xchg
test
mov
mov
lock
push
sbb
hlt
js
lods
test
jnp
mov
std
mov
fidivrs
fisubl
std
adc
lret
xchg
fiadds
push
gs
dec
cwtl
and
mov
arpl
pop
sub
pop
mov
pop
aas
mov
pop
test
bound
stc
addr16
mov
cmpsl
rcll
adc
mov
fists
popa
ret
mov
pop
sbb
shrb
add
movb
sbb
popa
push
addb
push
mov
and
xor
adc
push
ljmp
aam
push
mov
mov
and
or
dec
int3
aad
or
stos
sub
jns
mov
adc
movsl
mov
stc
ljmp
dec
test
push
aam
mov
leave
icebp
cmc
sub
cmp
inc
dec
push
sbb
or
cmp
xor
pop
daa
ja
cmpsl
pcmpeqd
pop
jne
add
sub
cmp
or
imull
test
mov
inc
int
and
loop
or
rclb
push
fcomps
sbb
cmpb
fdivl
add
aam
mov
imul
jnp
mov
mov
xor
fiadds
mov
in
and
xchg
mov
scas
std
mov
sti
inc
jmp
out
sbb
dec
inc
mov
mov
ficoms
add
xlat
mov
cwtl
push
mov
mov
inc
and
or
and
push
shl
popa
sbbb
mov
ljmp
shll
in
jo
sub
xchg
xor
rorb
mov
sti
daa
call
pop
xor
or
sar
push
les
std
adc
xchg
sbb
dec
adc
iret
loopne
pop
dec
jae
jne
sub
inc
adc
mov
push
cmp
cmpsl
jl
and
jno
push
fs
outsb
lcall
fsub
adc
pop
add
inc
mov
push
mov
mov
shll
add
adc
cltd
out
cmp
xchg
and
xor
sub
adc
push
mov
or
xor
fldl
je
addb
out
cltd
lret
or
test
add
jno
inc
test
sub
outsl
ror
dec
mov
in
jg
andl
push
jmp
mov
mov
call
add
and
je
jae
jno
fndisi(8087
daa
shr
add
add
push
pop
and
js
push
lock
cmp
inc
jl
xor
test
jno
cli
aam
pop
cmp
push
mov
jecxz
loopne
pushf
add
jmp
aaa
cli
int
clc
and
xchg
movsb
mov
push
pop
cmpsb
les
and
imul
fdivl
or
push
or
dec
ss
scas
pop
cmpsl
or
adc
out
pop
jne
or
pop
inc
mov
pusha
jb
xchg
inc
ficomps
and
fs
cs
repnz
mov
std
jno
inc
or
inc
sti
les
fs
jecxz
sbb
ljmp
loope
out
adc
std
mov
aam
fsts
fcomps
mov
loop
xor
inc
popf
divl
cs
lods
pop
sahf
push
jge
pop
mov
fwait
mov
aas
cld
jb
pop
imul
inc
or
sahf
pop
mov
fmuls
and
call
imul
lods
fcoml
call
lret
push
xchg
scas
je
clc
pop
bound
mov
out
cld
std
inc
int
xchg
jae
sbb
cmp
pushf
mov
add
lods
adc
mov
call
out
std
pop
and
dec
cwtl
cli
sub
dec
decl
pushf
mov
sahf
test
in
repnz
pop
sbb
popf
mov
adc
test
loope
inc
xchg
arpl
hlt
inc
stos
test
repnz
jl
mov
aaa
lods
adc
lret
push
loope
scas
call
mov
int
mov
int3
xor
mov
or
ss
shl
dec
or
mov
fsts
adc
loope
or
ret
xchg
and
mov
into
sbb
sub
int3
adc
mov
cwtl
mov
sarb
int3
test
sbb
adc
mov
mov
inc
and
fs
test
mov
leave
repnz
push
enter
mov
push
lahf
pop
xchg
mov
sbb
and
and
je
push
mov
pop
push
adc
push
loopne
adc
mov
jne
jp
lods
dec
lock
daa
sbb
cld
jmp
dec
aad
scas
mov
enter
inc
mov
push
ds
xor
and
jmp
movl
add
push
add
fs
adc
fwait
mov
or
mov
mov
pop
and
push
not
xor
sbb
xchg
mov
pop
push
leave
imul
dec
in
repnz
xchg
loope
jg
sbb
mov
push
mov
jae
pop
sbb
lods
sbb
popa
cltd
mov
lods
xor
ja
cwtl
imul
inc
loopne
mov
scas
xor
xor
dec
lcall
or
sbb
cwtl
and
mov
loope
call
neg
enter
mov
minps
popa
je
adc
add
mov
nop
push
enter
push
or
cltd
call
push
fs
inc
inc
mov
inc
shll
rorb
dec
lods
push
xor
jns
xor
pop
push
movb
mov
and
add
jmp
dec
cmp
orb
cmp
enter
int3
cmp
test
push
inc
cmp
add
mov
dec
and
mov
cmp
push
cwtl
sub
lcall
inc
sub
sub
or
jb
add
mov
and
sti
push
sub
push
and
xchg
and
fists
imul
sub
xchg
xchg
repnz
or
lods
jbe
cli
adc
les
mov
lret
shlb
in
icebp
ljmp
dec
nop
sub
jae
mov
sub
movsl
hlt
mov
or
push
or
vmovsldup
aas
fwait
into
enter
mov
sub
mov
pop
cwtl
or
inc
push
adc
push
inc
mov
out
mov
mov
ja
inc
jne
push
daa
cmp
dec
xchg
pop
mov
adc
ret
cs
shrl
and
jns
bsr
ja
vpaddd
or
iret
jmp
in
push
cmp
jno
and
xchg
sbb
cmp
mov
add
sub
cld
xchg
push
pop
adc
scas
mov
mov
lods
cwtl
xchg
je
mov
pop
neg
sbb
addb
or
xchg
adc
push
rcrl
push
mov
int
jno
mov
push
and
sar
mov
popf
cwtl
aad
test
adc
cld
and
push
enter
adc
push
add
pop
mov
nop
inc
push
adc
pushf
jno
mov
xchg
test
xor
or
sbb
cltd
add
enter
int3
and
or
sarb
adc
faddl
adc
nop
mov
stos
mov
add
call
pop
cld
fsubs
pop
orb
lea
jbe
fs
dec
mov
test
dec
xor
out
loop
aas
filds
call
jo
pop
clc
enter
repz
xchg
rorb
pop
mov
rclb
jo
stc
mov
pop
mov
add
gs
out
aaa
pop
inc
mov
cli
sbb
lahf
jg
lahf
push
pop
ja
in
adc
inc
rorl
or
xchg
clc
inc
leave
sbb
jge
mov
sahf
push
call
sub
test
sbb
mov
xor
test
daa
xchg
sub
xor
movb
insb
sbb
push
xchg
push
popa
pop
xor
ss
js
mov
adc
or
lds
inc
bound
xchg
je
cli
enter
lret
add
test
adc
loope
ret
adc
or
ds
sbb
nop
lret
subb
push
shl
mov
movsl
push
data16
mov
inc
dec
jge
and
andps
push
mov
lock
cli
jl
mov
or
inc
aam
mov
ret
mov
xchg
addl
mov
jmp
mov
cmp
adc
das
add
pop
mov
je
mov
dec
pop
adcl
or
call
push
mov
fs
test
push
icebp
adcb
lods
les
pop
and
mov
cmp
cltd
bound
aad
or
call
adc
xor
push
rcll
pushl
daa
orl
and
das
push
mov
adc
fidivl
xchg
subl
sbb
rcll
push
add
loopne
and
ficomps
dec
stos
jl
xchg
mov
mov
shlb
mov
jne
push
fadds
inc
pop
repnz
imul
sub
nop
rcll
jae
and
aas
lea
dec
std
outsb
les
push
inc
inc
cltd
sub
jge
aam
dec
inc
adc
inc
test
ror
pusha
lea
sbb
push
adc
mov
xchg
or
into
into
adc
stos
inc
inc
jb
mov
repz
repnz
pop
rep
push
mov
mov
loope
cmp
adcl
and
add
jecxz
sub
push
cld
subb
ss
sub
xor
cmc
scas
xorl
mov
mov
gs
sub
les
dec
fcmovnb
jge
push
mov
jne
push
inc
and
dec
test
sbb
je
and
imul
je
mov
int
ret
xor
add
sub
lcall
daa
in
adc
movsl
imul
lds
ds
jle
repnz
mov
mov
add
mov
cmp
push
mov
imull
dec
inc
loope
adc
add
jnp
dec
ret
push
jge
stos
scas
call
bound
ds
inc
xchg
imul
adc
fst
jbe
ficoms
leave
cmp
sbb
mov
mov
les
or
push
dec
lock
cmpsl
cmpsl
cld
xor
jne
push
popa
adc
or
xor
inc
sti
loopne
in
adc
orb
hlt
mov
int3
js
das
xchg
ds
push
stos
scas
cmp
mov
cmp
ss
mov
cmp
ret
je
push
scas
jbe
push
jb
js
push
sub
dec
popf
call
pop
pop
cmp
xchg
loope
push
dec
sbb
popf
nop
dec
inc
dec
and
ljmp
sub
xor
out
mov
jbe
push
je
pop
adc
test
loop
pop
mov
repz
hlt
xor
and
pusha
cmp
xor
adc
push
sub
mov
fistl
mov
add
jmp
les
test
mov
cmp
sub
cmc
gs
enter
sub
mov
push
nop
adcl
int3
sbb
adcl
pop
lret
inc
jbe
add
cmp
push
cmp
push
cli
es
jg
and
or
push
pop
imul
jb
cmp
xchg
imul
or
cwtl
xchg
adc
out
add
xchg
orb
out
dec
inc
fcmove
stos
aas
leave
sub
dec
adc
les
inc
dec
adc
bnd
adc
aas
sbb
aaa
mov
pop
pop
cltd
mov
mov
rolb
push
pop
out
dec
mov
je
push
or
push
push
dec
push
cld
jmp
loop
pop
mov
sbb
dec
push
sbb
mov
pop
clc
adc
dec
in
inc
mov
jmp
cmpsb
or
push
or
insb
cmpsl
mov
sub
push
jecxz
or
dec
fmul
xor
or
dec
pop
movsb
das
jmp
sub
je
call
or
inc
in
xor
mov
jmp
mov
sub
push
movsl
sub
lahf
add
and
adc
adc
cld
xchg
and
jbe
xor
movsl
arpl
mov
ja
sbb
xor
jmp
in
outsl
adc
dec
pop
repnz
clc
clc
js
mov
xor
lret
jg
add
jo
ret
lds
mov
dec
cs
push
adc
mov
and
sub
sub
sub
mov
push
lods
jno
mov
push
lcall
xchg
dec
push
lret
adc
daa
outsb
ljmp
imul
movsb
mov
jmp
mov
cmpsb
stc
inc
cld
lods
leave
lea
addb
repz
push
mov
and
popa
insb
pop
scas
xchg
das
fstl
stc
inc
cld
adc
lahf
jbe
sbb
and
sbb
add
and
push
cmc
xlat
adc
push
insb
in
pushf
andb
inc
lcall
ficoms
dec
pop
add
imulb
aam
pop
sbb
push
inc
pop
loop
cs
adc
loop
dec
inc
ds
aad
inc
lods
fsubs
inc
mov
fsubl
lea
or
cmp
cmp
xchg
je
mov
rorb
clc
adc
xor
jbe
andb
dec
adc
mov
jbe
inc
push
dec
mov
mov
jge
int
ljmp
test
dec
outsl
pop
mov
ds
imul
fildll
adc
or
xchg
push
xor
jo
mov
in
leave
push
iret
int
add
mov
scas
nop
in
test
xlat
push
sub
push
dec
fwait
arpl
daa
adc
adc
jnp
je
push
mov
push
cli
ror
jbe
push
in
pop
sub
std
and
flds
xorps
xorb
outsl
outsl
mov
dec
mov
jmp
inc
pop
inc
push
test
jge
xchg
cltd
push
adc
push
inc
es
cmp
lret
jo
hlt
cmp
sub
cli
insl
outsl
dec
mov
xor
jno
roll
push
rclb
inc
adc
jo
or
int3
push
and
mov
leave
push
or
divl
jnp
cmp
mov
call
push
insl
or
inc
decb
shr
mov
mov
daa
inc
movsb
dec
inc
xchg
repnz
mov
inc
movsb
lock
push
jae
out
xor
clc
mov
push
sbb
adc
xchg
mov
repz
and
rorl
jle
cmp
xor
mov
or
pop
cmp
in
rsm
and
std
xchg
rol
fcomps
cmp
and
cld
lds
dec
sbbl
jo
push
cmp
aam
popa
imul
je
pop
sahf
adc
or
int
mov
dec
test
ret
cld
rolb
xlat
bnd
shrl
or
mov
negb
xlat
bound
mov
mov
cmp
call
mov
dec
sti
and
push
and
dec
shrb
int
inc
push
leave
mov
aad
push
nop
jl
mov
cmp
push
push
sbb
dec
stc
add
mov
push
test
imulb
and
mov
cld
rorl
or
clc
push
sub
or
sbb
pop
dec
inc
jns
in
jbe
int
push
aam
and
xchg
cmp
loop
sub
sub
dec
popf
enter
or
sub
aaa
cld
and
mov
inc
call
stos
dec
cmpsb
js
scas
scas
lret
push
add
iret
fcomps
dec
sbb
push
adc
into
mov
sbb
out
cld
daa
enter
lods
flds
insb
push
pop
loopne
test
cli
inc
xchg
jbe
jo
aas
sub
jg
and
sub
sbb
int
sub
xchg
push
mov
jl
xchg
mov
in
mov
mov
sbb
sub
bound
in
dec
cmp
xlat
xor
xchg
andl
das
jge
div
movsb
fwait
nop
cmpsb
dec
subb
sub
gs
xchg
stos
ss
xor
lds
imul
push
sbb
adc
inc
add
ret
jl
cld
or
mov
repnz
mov
js
xchg
add
sub
call
scas
sub
adc
sub
cltd
jne
leave
and
cwtl
push
dec
pop
lcall
es
mov
incb
pop
inc
ret
dec
popa
mov
xor
les
cmp
and
cmp
fwait
mov
xor
cld
jo
mov
jmp
and
clc
push
push
mov
push
mov
xchg
adc
pop
jnp
add
push
fistl
pusha
jne
push
inc
push
dec
popa
xchg
rclb
jle
sub
xchg
mov
and
push
mov
movsb
outsb
adc
les
and
out
inc
daa
cmp
shrl
inc
mov
pop
outsl
sub
lcall
inc
and
mov
mov
jge
push
dec
cmpsb
loope
hlt
sti
pop
and
cwtl
lods
adcb
pusha
mov
adc
jo
mov
pop
xchg
jb
test
mov
lods
push
ds
dec
data16
call
dec
in
test
lods
add
test
sub
ret
or
dec
xchg
cld
pop
xchg
jle
mov
push
or
mov
pop
cmp
adc
das
mov
xor
lret
test
mov
sub
xor
mov
mov
inc
add
es
add
pop
adc
loopne
pop
dec
sbb
jle
inc
push
cmpsb
jecxz
mov
pop
xor
cwtl
adc
std
into
xor
adc
jno
lock
and
in
inc
and
cmp
in
divb
pop
and
push
call
adc
stc
cmp
cmp
mov
adc
mov
adcl
xor
add
lea
faddl
lahf
mov
fimuls
pop
mov
sti
jae
mov
sub
sahf
ljmp
in
adc
jnp
jge
scas
jno
add
dec
cmp
pop
add
xor
mov
push
adc
adc
js,pt
jl
repz
or
popa
pcmpeqb
mov
inc
jmp
xor
push
aad
pop
lods
movl
ljmp
cmp
jmp
icebp
in
movl
inc
inc
inc
sbb
or
push
repnz
inc
and
in
adc
push
clc
mov
mov
mov
cltd
mov
inc
add
xchg
adc
sti
fs
out
mov
in
jge
or
or
push
orb
ss
nop
sbb
popa
jg
dec
jnp
and
outsb
mov
jmp
jmp
mov
or
pop
mov
icebp
cmpsl
enter
loope
pusha
push
ja
jp
test
outsb
cmp
jmp
add
ljmp
mov
insl
lret
insb
jmp
pop
push
and
mov
dec
out
xchg
daa
cmp
jle
mov
dec
sbbl
rolb
sub
xchg
inc
sbb
lahf
jns
scas
loope
adc
scas
xor
push
or
xor
push
pop
pushf
hlt
rcrb
jb
mov
add
sarl
push
adc
subb
jle
adc
xor
xor
and
call
stc
imul
mov
test
cmp
add
add
imulb
jne
sbb
mov
xchg
pop
nop
imul
je
mov
ljmp
shlb
movb
inc
jmp
dec
popa
gs
cmp
jb
or
out
jmp
andb
notb
pop
mov
test
xor
sub
cltd
or
push
sbb
sldt
mov
ret
fildll
inc
inc
and
nop
xor
sub
xor
sbb
or
xchg
lods
jb
fs
hlt
or
add
xor
test
clc
or
nop
sub
pop
jecxz
call
aam
cwtl
add
inc
push
lcall
lahf
jge
pop
dec
fisubrs
les
enter
hlt
enter
and
xchg
xchg
faddl
loope
fwait
in
mov
ss
das
xchg
es
xchg
dec
mov
sbb
bound
pop
mov
gs
cwtl
adc
dec
xor
pop
jo
icebp
mov
jns
add
call
daa
nop
js
inc
and
or
cmp
push
cmp
pop
push
popf
in
jmp
adc
jle
jmp
pusha
nop
iret
lahf
fs
mov
xor
mov
add
adc
outsb
loope
repz
dec
pop
sahf
scas
dec
or
outsl
mov
adc
mov
mov
jge
push
jecxz
push
in
adc
dec
mov
dec
ja
lods
pop
xor
in
xchg
loope
lea
xchg
out
and
adc
test
xchg
aad
push
dec
mov
imul
jmp
mov
ror
jle
lret
popa
out
loopne
xlat
sbb
aad
add
call
xchg
clc
push
cmc
dec
adc
jl
dec
test
inc
outsb
aaa
jl
xchg
leave
decb
add
fwait
je
pop
sub
int3
jne
sub
test
in
mov
inc
in
xor
xchg
adc
pop
cmp
and
daa
sbb
sbb
arpl
fs
daa
lock
test
inc
jmp
adc
fs
jo
push
push
xchg
loop
dec
or
pop
daa
sbb
sub
cmpsb
popa
insb
sub
ret
je
sub
popa
aam
setg
call
in
mov
test
les
mov
and
mov
in
shrb
mov
nop
push
je
push
notb
adc
pop
sub
jne
adc
pusha
test
or
dec
cmp
sub
and
push
shll
sbb
and
loope
sbb
js
mov
lea
and
call
adc
je
fs
jge
jle
pop
sub
aas
call
bound
loop
je
cwtl
inc
mov
inc
sub
push
push
xchg
mov
push
sub
cli
pushf
pop
add
pushf
and
adc
xor
jle
sub
flds
xchg
addb
and
and
lds
call
shlb
push
push
sub
sub
push
sar
fidivrl
and
enter
xor
sub
js
psubusw
int3
outsl
loop
cmp
mov
data16
repnz
fs
jg
outsl
ss
lret
scas
shr
in
mov
sbb
test
call
add
fwait
inc
adcl
ret
push
js
mov
pop
fiaddl
mov
jb
popa
xor
dec
inc
test
add
mov
mov
lock
inc
lea
cmp
push
mov
sub
fisubrl
jns
nop
clc
sbb
push
adc
outsl
les
imulb
and
push
cmp
inc
inc
xor
aas
fcoml
or
adc
or
pop
cmp
aam
adc
jge
mov
sbb
push
and
jge
lods
rorl
push
xor
xor
clc
movsl
inc
push
incl
sbb
mov
rclb
scas
xor
sbb
call
je
arpl
push
add
jb
cmpw
add
lods
adc
inc
in
jae
icebp
push
loop
cmp
pusha
sub
fdivrl
lea
movsl
push
pop
push
sub
jne
mov
jl
arpl
add
cld
push
or
or
pushf
xor
mov
xchg
push
pop
pop
and
ret
stos
std
scas
ucomiss
add
xor
orl
mov
call
mov
sbb
and
mov
out
sub
sbb
jb
lods
popf
fimuls
cmpl
fs
mov
fisttps
lock
repnz
push
inc
fbstp
test
and
jnp
loope
and
pop
xor
enter
clc
xor
sub
sbb
sub
dec
push
add
std
mov
insl
ret
jmp
push
lahf
push
cmp
adc
push
sub
imull
and
pop
cmp
inc
aad
add
pop
pop
int3
and
xchg
mov
es
mov
push
cmpsb
dec
push
roll
mov
fs
call
sbb
sub
call
adc
add
int3
cmp
jg
and
enter
adc
and
mov
cmp
mov
or
out
sarb
and
jg
mov
insb
or
mov
dec
pop
loopne
add
jle
sbb
push
lea
test
xor
add
ret
cmp
and
lock
insb
jge
and
nop
dec
sub
cmpsl
movsl
lods
push
into
and
cmpsl
shlb
ret
cmp
jmp
and
fdivrs
addb
je
je
mov
ds
in
jae
mov
cld
and
cmp
in
jbe
and
push
insb
cwtl
xlat
mov
and
andl
test
inc
into
xor
and
push
call
cs
dec
imul
in
pop
in
mov
call
push
out
out
movsb
andb
sub
pusha
dec
mov
cmp
xchg
pop
xor
mov
xor
cmp
sbb
je
inc
sti
ret
lods
jnp
xchg
lds
out
push
mov
xchg
or
jo
mov
jb
cli
or
test
test
loope
inc
sub
xchg
leave
push
call
add
mov
cli
mov
ljmp
adc
inc
out
sti
movsb
mov
cmpsb
xchg
add
call
dec
push
cld
cmc
jb
sbb
jns
adc
cmp
inc
jb
mov
mov
mov
inc
add
test
scas
subl
orb
das
in
jle
lret
jbe
ja
movsb
dec
mov
test
mov
out
adc
jne
cli
and
clc
xchg
jge
jle
jbe
inc
jecxz
popa
sarb
push
jb
xor
xchg
std
add
inc
or
cmp
sbb
push
push
sbb
hlt
add
jbe
les
sub
clc
mov
out
scas
cmp
imul
in
jp
jge
and
movsb
inc
mov
pop
adc
add
push
jge
rolb
xchg
je
loope
adc
cli
dec
aaa
aam
mov
mov
mov
adc
loopne
add
in
pop
xor
sbb
sub
xor
add
add
jmp
or
fisubrl
cltd
mov
sub
sbb
mov
push
ja
xchg
sbb
jmp
out
inc
mov
fs
or
pop
loop
pop
jl
ret
stc
negb
inc
jmp
xor
add
gs
punpckhbw
sbbl
imul
sarl
mov
les
inc
inc
lcall
adc
adc
lods
les
mov
icebp
inc
bound
adc
ret
fstpt
and
std
or
add
and
ffreep
in
addr16
sbb
mov
mov
iret
and
push
pxor
dec
fidivs
sub
xchg
add
inc
sub
push
and
push
lea
or
and
aaa
enter
and
jl
adc
inc
mov
or
test
fistpl
or
sbb
add
mov
test
or
movsb
jmp
cmp
dec
mov
cmc
or
adc
and
adc
popa
je
inc
cmp
subb
jmp
sahf
and
mov
cmp
jbe
push
cli
into
aam
clc
dec
dec
loop
rcrl
cmp
gs
mov
je
add
cmp
add
mov
xor
ret
mov
pop
jp
stos
mov
jle
psubb
push
inc
pop
push
mov
adc
mov
clc
mov
mov
popa
adc
fldl
xchg
aam
xchg
shll
lock
jo
mov
sbb
push
fmull
push
inc
in
xor
ds
push
jle
lahf
pushl
mov
and
mov
mov
xor
mov
xchg
pop
js
sbb
adc
movb
jb
cmp
and
iret
scas
sbb
fimull
negl
inc
sbb
incl
inc
jle
lret
adc
pop
lret
add
push
fldl
push
cltd
dec
enter
push
nop
or
or
lods
push
xchg
shl
pop
dec
lahf
sub
or
jp
dec
fwait
push
fs
and
push
mov
dec
sbb
mov
leave
mov
int
dec
pop
arpl
pop
gs
push
insl
and
cwtl
jno
adc
xor
mov
mov
jp
daa
les
sti
cmp
inc
lahf
xchg
es
ja
std
cmp
inc
and
and
incl
pop
jns
sbb
add
repnz
inc
add
out
inc
and
pop
sub
mov
sbb
cli
test
aaa
add
cmp
push
inc
outsb
lahf
mov
jmp
das
movsl
and
or
add
cmc
inc
xchg
inc
pop
stos
mov
or
adc
mov
mov
push
xchg
repnz
dec
ret
orb
and
push
push
sub
add
insl
jl
xor
push
xchg
out
cmovp
es
adc
jne
lea
push
adc
icebp
fldl
push
cmp
mov
add
mov
jmp
enter
sbb
xor
mov
jae
or
icebp
insb
xchg
fimuls
jns
mov
pop
call
nop
pop
rolb
push
mov
mov
adc
cmp
dec
cmp
sub
push
xchg
and
popa
adc
mov
xchg
std
mov
push
adc
cmp
sub
sbb
or
loope
jmp
cmp
hlt
jecxz
xchg
imul
jmp
ret
adc
push
mov
shll
inc
scas
push
ffree
stos
loop
iretw
stc
pop
jg
outsl
xchg
sub
dec
repz
xchg
xchg
idiv
in
je
test
out
mov
adc
popa
into
fs
shrb
sub
sbb
inc
push
dec
hlt
ds
dec
nop
cs
ljmp
mov
and
jecxz
sub
cmpb
jge
sbb
mov
dec
inc
je
push
mov
je
or
jne
xchg
daa
call
jle
mov
sbbl
ret
inc
jmp
dec
add
sub
ja
dec
negb
mov
adc
pop
xor
cmpsb
or
jecxz
mov
jb
cmp
loop
lock
insb
xchg
sar
sbb
jo
shll
and
push
rorl
add
push
call
das
adc
scas
jg
je
add
mov
adc
xor
mov
or
jae
inc
stc
push
adc
or
repz
sbbb
mov
and
inc
xchg
ret
pop
aad
push
lahf
xor
pop
lret
dec
push
ja
shrl
xor
cld
add
pop
repz
push
and
add
hlt
pop
jge
jnp
jae
cmp
pop
sub
xor
or
sti
rolb
enter
rclb
cmp
push
jg
dec
cmpb
jne
fnstcw
cwtl
rorb
das
cmp
or
movl
jecxz
or
pop
je
lods
addb
sub
cmp
in
and
pushl
adc
inc
push
inc
repz
lea
jb
jl
push
mov
cmp
adc
fs
inc
in
cmp
sbb
xlat
jle
pop
pop
pop
inc
push
xchg
and
cmp
sbb
jl
push
jp
pop
test
cmpsl
or
pusha
ret
xor
cwtl
mov
sub
jge
sbb
sub
adc
and
hlt
jmp
push
aaa
sub
jb
and
incb
jle
xchg
int3
rcrb
pop
fsubs
nop
pop
pop
and
fiadds
jb
loope
hlt
std
test
add
xor
lock
sbb
cld
cltd
sub
lea
rcrb
xchg
push
clc
cmc
pop
sbb
dec
adcb
mov
dec
jmp
xchg
add
icebp
fisubrl
les
mov
push
jl
dec
sbb
adc
or
aam
pop
pusha
mov
cmp
pop
jg
or
jne
add
lods
cmp
rcrl
mov
jb
sbb
add
jl
xchg
das
inc
ljmp
and
dec
sub
popf
pop
mov
mov
div
xchg
dec
pop
repz
sub
pop
js
aam
jle
sbb
sbb
cli
dec
ret
adc
xchg
or
cli
int
push
mov
dec
push
test
orl
mov
call
orb
movsb
imul
lcall
inc
insb
pop
pop
mov
xchg
fs
lds
jmp
push
add
push
mov
inc
bswap
xchg
push
push
sbb
addr16
mov
test
stos
mov
ficompl
xchg
dec
mov
jns
xor
inc
je
mov
sbb
jae
xchg
cwtl
scas
test
mov
shlb
pusha
mov
jg
dec
lods
dec
pop
xor
sub
or
sbb
or
add
mov
test
lret
jae
jmp
cmp
push
inc
add
mov
pop
aaa
lods
sbb
insb
int
push
sti
xor
es
bound
pop
dec
xchg
mov
push
je
xchg
fdivl
mov
mov
add
jle
mov
xchg
cmc
add
push
and
pop
ret
ds
imul
loope
add
push
dec
enter
mov
popa
mov
das
xor
je
movlps
cmp
xor
lret
dec
dec
sbb
rclb
mov
adc
push
mov
roll
mov
and
lahf
scas
frstor
and
and
push
cmp
les
sbb
cmp
push
mov
aas
shrb
push
jle
sub
addr16
bound
push
xchg
inc
pop
cli
adc
pop
jge
mov
incb
roll
mov
push
aam
sub
mov
dec
push
out
bound
sub
hlt
bound
adc
fwait
push
jae
movsl
and
mov
sbb
movsl
sub
sub
aam
outsl
repnz
repz
daa
pop
lods
cltd
xor
add
stc
das
dec
out
imul
pop
push
add
scas
in
adc
xchg
fnsave
in
sub
dec
ret
adc
or
int3
xor
jno
or
sahf
cltd
pop
mov
sbb
insb
hlt
sub
test
and
cmp
mov
lret
xchg
sub
sbb
dec
in
movsl
cmp
out
dec
adc
scas
ret
xchg
fsubr
mov
push
push
lock
leave
pop
loope
cld
inc
call
dec
push
ljmp
enter
test
dec
sub
mov
pusha
inc
cli
push
xchg
in
aad
add
pop
add
nop
sub
dec
les
xchg
xchg
pop
lret
scas
cltd
les
push
mov
mov
popa
xor
xor
imul
adc
je
das
fwait
nop
or
mov
pop
push
xor
mov
imul
stos
fistpl
adc
nop
or
stc
out
cmp
push
or
jp
int3
dec
aam
xchg
lock
rcrb
stos
sbb
icebp
mov
or
daa
icebp
xorb
loope
dec
adc
jmp
loop
call
adc
mov
pop
stos
pop
or
pop
jb,pn
dec
jl
cmpsl
mull
shll
stos
fsubrl
popa
fstps
or
or
or
push
loopne
dec
neg
das
or
js
sub
pop
lahf
sub
dec
adc
sahf
dec
lea
xchg
shl
rcll
mov
jne
loope
push
ret
das
pop
xor
sub
mov
dec
jbe
cmp
push
mov
into
mov
push
loopne
add
and
xor
sub
test
enter
sbb
fldl
mov
out
ret
jae
psubusb
jbe
int
pop
lds
inc
mov
lahf
sub
and
in
clc
sbb
je
or
aam
jle
aaa
push
push
jg
push
or
adc
push
int3
mov
pop
insb
dec
jb
push
or
daa
adcb
xchg
pop
pop
cmp
lahf
and
rorl
pop
movsb
and
xchg
lahf
sbbl
je
mov
insb
jmp
mov
int3
push
and
push
clc
adc
or
out
out
dec
sbb
ja
ljmp
inc
mov
inc
or
mov
adc
sub
sbb
out
je
scas
sbb
cmpsb
pushf
test
adc
inc
test
cwtl
jns
jmp
aam
pop
aas
jbe
movsb
jp
outsl
adc
ja
sub
insl
je
lea
stc
jge
add
mov
xor
inc
ret
lock
or
movups
cmp
ss
or
pop
sub
call
inc
pop
sbb
insb
test
adc
cmpsl
packsswb
push
jnp
add
cld
sub
dec
add
xor
xchg
scas
adc
lahf
push
in
orl
adc
and
dec
lods
xchg
ret
inc
cmpsb
icebp
mov
add
add
push
add
push
or
fs
and
les
daa
out
in
mov
sub
inc
dec
dec
xor
imul
xchg
adcb
mov
cmp
xchg
cld
push
cmp
mov
xor
mov
js
add
inc
and
cmp
and
add
push
popf
xor
lahf
and
lahf
sbb
jle
inc
hlt
and
mov
push
flds
je
add
jbe
xchg
mov
xchg
cmp
pop
xor
in
cli
or
inc
inc
sub
and
push
sysenter
mov
mov
lret
mov
push
notb
lock
outsb
lods
add
test
inc
mov
xor
xchg
testw
or
scas
add
adc
and
call
cs
aad
add
orl
jbe
mov
adc
test
stos
cmpsl
pop
dec
mov
jae
aas
test
and
or
mov
pop
lret
push
pushf
or
dec
pop
mov
add
or
test
xchg
call
sub
sbb
testb
mov
push
or
mov
mov
push
call
or
ud2
pop
pop
pop
mov
mov
push
jg
push
adc
movsb
mov
daa
adc
xchg
inc
jg
and
gs
inc
mov
es
in
push
sub
xlat
clc
jge
cld
push
inc
test
dec
push
test
insb
rolb
into
cmp
sti
dec
notl
jg
lds
enter
adc
aas
add
xchg
adc
aad
mov
int3
mov
jae
dec
adc
xor
jg
and
mov
mov
jmp
out
inc
inc
lock
iret
cwtl
push
xchg
call
pop
adc
call
aam
mov
mov
nop
cmp
loopne
cmp
xor
pop
jbe
inc
stc
jge
mov
test
cmp
into
cmp
and
insl
outsb
add
pop
bound
lea
ja
mov
mov
and
cld
rorb
push
shll
sbb
sub
in
inc
and
dec
mov
inc
adc
pop
xor
cmp
mov
lods
push
ljmp
sti
and
arpl
push
cmp
xchg
xchg
test
push
sub
daa
je
jb
clc
cmp
movsl
shrb
and
out
or
xor
cmp
mov
jnp
cmc
sub
add
cmpsl
js
dec
and
add
mov
inc
jge
nop
push
mov
or
sub
or
out
or
mov
or
inc
sbb
pop
mov
leave
outsl
and
sbb
and
daa
lret
xchg
leave
pop
and
mov
push
dec
jnp
jg
fmul
mov
fsubl
call
dec
lods
pusha
mov
dec
push
dec
std
addr16
mov
cmp
jae
sub
jle
pop
adc
pusha
adc
or
or
lret
inc
push
dec
into
les
and
push
es
popf
pop
xchg
inc
jb
sub
xor
jge
mov
aam
jge
cli
adc
movsb
xchg
mov
inc
push
jmp
pop
jne
cmp
jo
or
jl
inc
xor
sub
in
jb
sbb
or
call
in
sub
dec
and
inc
jle
out
add
pop
push
repz
lret
sbb
and
adc
xchg
adc
xor
nop
pusha
test
inc
inc
mov
inc
xor
cmp
push
xor
adc
cmp
inc
dec
enter
sbb
xchg
mov
and
xchg
pop
sub
repnz
loop
cmp
cmp
mov
and
push
pushf
mov
nop
fadd
fisttpll
xchg
mov
push
xchg
adc
sub
dec
mov
add
adc
push
negl
test
lock
cmp
sub
xor
push
push
xchg
test
sub
test
inc
sub
jo
mov
popf
insb
mov
das
jne
xor
loopne
mov
outsb
ljmp
xlat
dec
pop
adc
enter
aad
xchg
dec
es
and
fs
xchg
adc
cwtl
fwait
inc
dec
aas
cmp
push
xchg
or
outsb
fsubs
adc
int3
push
push
mov
push
outsl
xor
cli
adc
cli
fsub
ds
push
gs
sub
cmp
push
jbe
dec
lock
lea
into
push
je
pushl
xor
unpckhps
and
popf
sbb
out
add
pop
adc
ret
jmp
dec
cmp
jge
gs
test
je
dec
push
das
xchg
jmp
xchg
mov
pop
cmp
cli
pop
fs
jle
nop
or
test
hlt
mov
pop
and
xchg
add
jnp
pop
je
popf
push
add
jmp
and
xor
jne
cmp
fsubrs
jmp
and
adc
inc
push
and
mov
and
adc
adc
sub
sub
sbb
js
outsl
add
pop
xchg
rorb
and
jle
or
aas
ja
inc
orb
mov
xor
lods
fstl
int3
push
dec
test
jne
xor
orl
aam
or
or
lret
sub
pop
ljmp
das
sub
sbb
pop
and
adc
imul
or
lds
call
lcall
sbb
push
push
mov
call
fcomi
sub
mov
bound
push
pop
xchg
jo
adc
adc
cld
or
inc
popa
cmp
sbb
adc
xchg
test
aaa
cwtl
stc
push
adcl
stos
push
mov
pushf
scas
mov
sub
loop
mov
pop
pop
sub
adc
sub
test
ja
mov
lahf
aam
in
and
dec
ds
cmp
push
aas
dec
ja
fs
xor
mov
dec
clc
add
jl
mov
push
xor
mov
mov
mov
lret
movsl
stc
push
popf
sbb
dec
mov
sahf
push
cmp
mov
shlb
rep
mov
mov
test
test
pop
mov
pushf
lret
push
lock
fldenv
call
popf
mov
pop
lods
jle
gs
dec
push
sub
ds
je
or
push
push
pop
es
sbb
xchg
jle
dec
sub
dec
mov
push
mov
sbb
scas
or
push
pushl
fnstsw
push
adc
bound
xor
add
fwait
mov
fucomp
in
in
mov
fmul
addr16
repnz
sahf
fwait
fwait
cld
scas
sub
test
dec
lcall
lds
adc
push
sahf
or
push
or
push
cmpl
xchg
or
and
jbe
xor
jecxz
inc
lock
lret
xchg
mov
push
lahf
and
std
cwtl
inc
inc
test
push
and
adc
mov
lods
cli
mov
clc
inc
cmovne
aaa
adc
cmp
or
call
mov
daa
inc
pop
test
lds
push
or
xchg
mov
mov
sahf
and
dec
mov
adc
sbb
jne
test
jmp
out
dec
or
jbe
push
sub
fildll
mov
out
call
sub
clc
lcall
dec
push
add
gs
and
push
mov
std
outsb
mov
pop
pop
cmp
inc
pusha
or
enter
lea
mov
test
mov
fdivrp
aas
iret
dec
inc
rolb
in
js
das
or
sub
ja
sbb
mov
push
adc
pushf
pop
mov
push
dec
jo
addl
stos
aam
or
inc
xchg
ja
pavgw
xchg
dec
jmp
test
or
rorb
mov
sbb
sbb
data16
mov
push
xchg
pop
cmp
or
scas
ds
add
mov
dec
lods
jo
dec
adc
pop
rclb
pushl
or
jo
push
mov
pop
sbb
push
xchg
or
xchg
hlt
cmpsl
adc
imul
jg
call
xchg
inc
gs
mov
jecxz
dec
andl
fstpl
push
jle
xchg
les
mov
jne
sub
dec
sbb
rcr
add
xchg
cltd
sub
mov
jmp
push
mov
jbe
outsb
les
add
push
inc
cmp
enter
lds
jge
xchg
inc
iret
hlt
mov
sub
sbb
jle
xchg
roll
insl
cltd
pop
push
mov
add
sub
jbe
inc
jmp
nop
xchg
jmp
push
pop
and
dec
push
or
xchg
adc
es
mov
sub
and
adc
sub
cmp
sbb
adc
push
push
call
test
das
mov
lcall
push
lock
mov
cmp
out
xchg
sbb
scas
xor
lock
sbbl
cwtl
xor
fisttpll
orl
jl
xlat
lcall
out
xor
cmc
and
enter
sbb
xchg
dec
jg
push
push
stc
jge
mov
and
push
sti
dec
xchg
mov
jne
pop
dec
es
or
jbe
dec
mov
popf
mov
inc
fcmovu
mov
clc
ret
or
xchg
mov
testb
add
adc
lods
enter
hlt
inc
push
sbb
out
xlat
clc
mov
in
dec
fsubr
and
lods
cmp
xorb
dec
pop
repnz
dec
dec
inc
mov
jne
mov
cld
adc
xchg
mov
dec
scas
je
dec
push
icebp
shrb
jno
rcll
dec
sub
adc
je
call
sub
add
fsts
ficoml
jecxz
cmp
sbb
cltd
cmpsb
mov
pop
mov
jbe
adc
lret
or
push
mov
lahf
into
xorb
xchg
bound
xchg
je
lods
xor
push
in
psubd
jle
test
xchg
mov
adc
dec
and
push
je
or
leave
mov
push
pop
adc
test
sbb
dec
leave
cmc
add
inc
mov
xor
xor
cmpb
inc
xchg
test
mov
clc
sbb
mov
in
mov
fdivs
addb
bound
jmp
pop
in
push
sub
daa
mov
push
mov
daa
clc
into
push
dec
push
lea
mov
lock
je
cwtl
stc
jno
dec
jo
mov
add
sbb
jb
rclb
fnstenv
cmp
nop
test
and
mov
or
xor
iret
lods
cmp
or
cmp
dec
jmp
je
imul
pop
fdivrs
idivb
jl
and
jne
lds
jle
in
insl
sahf
or
xchg
and
dec
test
sbb
mov
xchg
pop
inc
xor
cmp
xorb
cmpb
fiadds
aas
adc
dec
cmp
push
jne
push
aaa
or
push
jne
mov
stos
sub
dec
test
adc
icebp
sbb
sbb
and
cmp
repnz
fst
cmp
and
loopne
insb
mov
cmp
inc
loopne
out
das
je
dec
cmc
stos
addr16
inc
sbb
pushf
cltd
pop
adc
repnz
lock
cmp
and
sub
mov
push
mov
and
adc
ljmp
push
push
inc
mov
jno
push
cmp
out
xchg
jno
fisubrl
sbb
loope
sub
addb
dec
mov
shll
and
add
cmp
xchg
notl
push
sub
jge
mov
push
xchg
fnstsw
js
fistps
adc
leave
outsl
xchg
stos
pusha
mov
add
addr16
fs
mov
or
aam
call
cmpb
das
call
and
out
or
dec
xor
lods
cmp
xchg
pop
sub
push
test
sbb
pusha
mov
sub
cmp
sub
pop
or
and
mov
pop
xchg
xchg
sub
movsbl
dec
out
rcl
mov
fsubs
jb
movw
pop
das
and
dec
aas
xchg
sub
push
mov
jne
outsb
sbb
lea
xchg
sti
adc
mov
sub
movsb
jae
lahf
repz
sbb
and
ljmp
movl
mov
mov
jno
adc
test
and
and
jle
daa
cltd
jle
xchg
lock
pop
popl
sar
adc
dec
push
push
mov
or
mov
push
fs
lock
test
push
or
cmp
test
add
hlt
jecxz
sar
enter
sahf
insl
add
jmp
push
add
popf
fsubl
je
add
or
fs
pop
cmp
sub
icebp
sub
fmuls
fsts
repnz
loopne
jne
add
mov
subb
xchg
sbb
cmp
fadds
test
xchg
or
adc
lock
adc
aas
mov
repnz
fimuls
gs
add
cld
add
les
out
and
int3
mov
call
fmuls
inc
mov
fcompl
loopne
xor
adc
movsb
js
test
test
lods
cwtl
iret
mov
les
mov
in
adc
cld
ret
lea
inc
mov
pop
lock
hlt
dec
xchg
clc
push
sub
cmp
les
xchg
daa
lods
adc
push
and
ljmp
xor
jmp
push
sub
stos
add
loop
rcll
enter
dec
in
adc
lcall
shr
adc
sub
cmp
call
sub
mov
jne
mov
sub
cmp
jmp
inc
dec
es
dec
xlat
ret
mov
add
add
cs
xor
fs
adc
inc
xor
testl
push
inc
ss
gs
sahf
xlat
adc
sub
popa
out
movsb
inc
jbe
inc
cli
mov
jmp
in
mov
sbb
repz
out
push
test
xchg
div
out
xor
sub
pop
cmc
aaa
std
jl
push
fistps
jns
addr16
repz
push
xor
mov
popf
in
out
dec
jns
fcompl
push
mov
shlb
test
outsb
cmp
mov
mov
xchg
divl
dec
xlat
fmuls
xchg
out
bound
jmp
pop
fimuls
cmc
sarl
negb
movsb
inc
jnp
inc
and
cmp
push
add
or
jbe
dec
push
ja
inc
inc
mov
or
add
and
adc
sub
mulps
test
movsl
push
sub
add
fidivs
adcb
lret
sbb
and
jb
cmp
pusha
jecxz
outsl
dec
and
and
test
inc
dec
inc
les
and
and
bound
adc
adc
xor
or
mov
sbb
test
shlb
sbb
add
ret
adc
mov
pop
add
outsb
mov
cld
jmp
stc
ss
sub
dec
cmp
push
cmp
inc
or
leave
addr16
mov
inc
add
mov
fsubrs
jmp
xchg
sub
xor
and
imul
inc
inc
and
pop
push
sub
add
call
and
in
push
je
hlt
xchg
enter
daa
stos
aaa
xor
jmp
jnp
test
bound
test
cmp
mov
aas
icebp
lock
cmpsb
pop
adc
lret
cli
sub
shr
lea
in
sub
fistps
idivl
xlat
push
dec
dec
clc
sti
insl
popa
mov
sbb
sbb
lods
adc
jmp
loope
ja
sti
inc
push
popa
std
sbb
pop
push
xlat
lret
insb
roll
add
mov
aam
inc
xor
pop
popa
iret
mov
dec
inc
sti
push
cltd
scas
cwtl
inc
jo
cmp
incb
ja
scas
lret
sbb
cmpsl
scas
push
lds
nop
daa
cltd
push
and
lret
pop
sub
pop
aas
pop
out
cmp
daa
aaa
push
xchg
scas
adc
xor
icebp
cmp
or
nop
cmp
clc
hlt
and
mov
loop
loope
and
mov
jl
scas
mov
stos
jmp
xor
xor
or
mov
addb
clc
cmp
or
cmp
jne
inc
sub
jno
sub
sub
push
add
adc
xor
inc
add
sub
lret
hlt
sbb
or
daa
and
and
sub
stos
cmp
pop
jge
dec
in
xchg
pop
into
outsb
shrl
and
sbb
xor
sti
pop
lds
in
gs
and
jmp
cmpsl
xchg
xor
lock
hlt
adcb
mov
cmp
sbb
sbb
mov
sbb
clc
sti
xor
stc
movsb
adc
inc
push
add
sbb
push
jns
dec
mov
fadds
loopne
call
dec
push
sbb
test
cmp
int3
jbe
ljmp
cwtl
adc
mov
sub
shlb
adc
cmp
mov
cmpsl
cltd
adc
nop
xor
cmpsl
test
cmc
scas
cltd
adc
xchg
xor
mov
subb
xchg
push
mov
cmpsl
push
and
es
clc
xchg
clc
lea
jp
push
fs
jnp
in
cld
aas
je
call
push
div
test
xor
cli
cli
jl
jecxz
xor
add
lock
cwtl
inc
cmp
ret
cli
test
mov
cli
inc
xor
test
sub
call
test
and
fs
or
mov
imul
lods
loop
push
fs
mov
mov
test
movsb
mov
fsub
fs
sub
insl
cli
aas
xor
mov
pushf
add
inc
test
sbb
or
das
sub
je
jp
pop
fs
bound
rcl
aas
insb
push
and
sub
adc
pop
cli
pop
push
pusha
sbb
or
das
je
xchg
hlt
sbb
xchg
das
flds
push
icebp
dec
adc
dec
fsubl
mov
jbe
je
lret
mov
xor
js
add
add
filds
push
and
xor
lods
xchg
mov
leave
pusha
sub
sub
aam
dec
cmp
stc
xchg
pop
insb
sbb
xchg
adc
adc
lods
outsl
inc
js
pop
sbb
mov
cli
xor
out
loop
rorl
lods
in
pop
push
lea
aas
int3
cmp
mov
push
mov
lret
rolb
ljmp
js
call
sbb
out
push
loop
inc
movsl
js
mov
loopne
push
insl
add
push
pop
scas
cmpsl
lock
add
jmp
push
insb
scas
jp
xchg
fwait
push
pop
or
jmp
test
xor
and
enter
inc
ret
add
rolb
je
xor
scas
sbb
nop
test
mov
xor
sub
pop
sub
loope
movsl
inc
imul
sbb
push
cmp
repz
das
inc
add
mov
mov
jns
add
and
aas
arpl
loopne
mov
push
loopne
ds
or
mov
sbb
jge
std
pusha
xchg
jl
xor
adc
rcrl
sub
and
pop
mov
dec
nop
call
scas
push
cmp
in
xor
std
nop
imull
inc
clc
sub
bound
add
rclb
pushf
xor
dec
pushf
movsb
jo
sub
push
mov
sbb
and
sti
pop
xor
sub
mov
ret
sub
and
fwait
inc
sti
mov
cmp
mov
push
jae
mov
rcrb
jns
dec
push
push
lods
jo
sub
push
inc
stc
inc
mov
fdivrs
push
inc
adc
jecxz
cmc
loopne
push
mov
lret
jnp
sub
outsb
in
testl
mov
add
sub
jne
add
mov
add
cmp
lock
add
xchg
mov
inc
cld
pop
xor
mov
jl
outsl
movups
add
int
inc
incl
sub
ret
enter
std
or
cld
mov
cmpsl
pop
push
adc
and
or
push
push
rcrb
cmp
or
call
std
jo,pn
int3
push
in
sub
inc
int3
push
or
and
scas
clc
scas
xlat
gs
mov
xor
push
inc
xor
push
clc
push
clc
sub
push
or
incb
sub
sbb
in
xchg
rorb
xor
cwtl
mov
mov
fmul
test
adc
xor
and
je
dec
incb
adc
xchg
adc
push
dec
adc
cmp
outsb
ss
sub
je
jmp
push
andl
sbb
mov
xor
test
xor
lcall
push
push
push
add
xchg
sbb
packuswb
hlt
cld
mov
xor
adc
push
mov
pop
xor
lcall
daa
inc
or
inc
rclb
and
les
or
inc
push
jae
and
dec
mov
jae
mov
sbb
push
mov
in
adc
call
xchg
jne
mov
add
in
push
hlt
cmpl
jno
dec
movsl
push
ljmp
lock
int
pop
and
shlb
cs
add
adc
hlt
xorb
mov
mov
xor
sbb
and
pop
daa
or
out
ds
dec
or
and
push
rorb
mov
jbe
cmp
add
jmp
or
movsb
test
xchg
aad
hlt
xchg
pop
mov
in
je
xchg
cwtl
inc
push
inc
call
sbb
shlb
jmp
mov
movsl
cld
push
sub
xchg
xchg
xor
jmp
or
out
aas
cmp
testb
jecxz
add
dec
lock
ja
enter
fiadds
pop
push
add
xor
xchg
iret
mov
sub
dec
sub
jb
sub
add
inc
mov
push
push
bound
fiaddl
add
dec
pop
call
push
test
test
add
je
shll
dec
lds
inc
add
or
inc
or
xor
mov
cmp
adc
xor
or
mov
lock
dec
or
orb
xchg
mov
mov
adc
mov
push
or
add
cmpsl
xchg
pop
add
je,pt
fst
js
jg
or
rclb
push
std
out
dec
xor
stos
inc
and
adc
clc
and
call
push
in
rorb
push
dec
adc
mov
or
adc
cmp
inc
dec
xchg
push
and
push
inc
or
mov
add
inc
sub
and
pusha
sub
pop
sbb
in
push
mov
xchg
dec
dec
rcrl
mov
jmp
jnp
jnp
and
mov
loope
in
inc
jne
add
push
dec
clc
cmp
cs
movb
inc
cwtl
add
cs
jp
outsb
rorb
addb
ret
xor
mov
inc
xchg
call
lcall
adc
repz
nop
fcoms
jo
call
jmp
sub
cs
mov
add
aam
daa
fwait
and
mov
out
mov
jns
lock
add
inc
lock
push
movsl
mov
lock
inc
imul
sub
sahf
nop
add
rol
test
or
inc
or
xchg
arpl
test
les
or
aaa
mov
fldt
lods
xor
and
or
and
push
mov
cli
add
leave
ficompl
lock
pop
pop
test
and
outsb
icebp
and
pop
mov
and
sbb
scas
jns
sub
and
out
shlb
cmpl
iret
cmpl
sub
adc
pop
sub
xchg
push
sub
add
sahf
out
add
stc
pop
inc
and
ror
clc
pop
nop
jg
popa
ss
dec
shrl
stos
addb
nop
or
lds
addb
jmp
nop
xchg
add
xchg
xlat
inc
call
and
mov
mov
rorl
add
hlt
mov
adc
or
in
or
jno
push
pop
mov
adc
mov
push
or
mov
leave
rorb
sbb
jl
and
sub
idivb
and
xor
dec
xor
cmp
sbb
or
test
sti
push
lods
ficoml
xor
in
repnz
imul
das
dec
push
or
les
sub
push
cltd
pop
scas
mov
jmp
int3
cmp
jns
push
add
push
jmp
mov
and
xchg
ss
xor
iret
inc
add
add
je
and
xchg
stos
unpcklps
adc
cmp
mov
iret
in
or
mov
push
int
test
pop
andb
lods
and
adc
ffreep
pop
xor
std
and
jmp
or
loope
ret
popa
cli
decl
pop
bound
into
inc
xchg
subb
inc
xchg
in
or
push
sbb
lret
dec
mov
mov
and
pop
ret
sbb
sub
pop
push
ret
add
cmpsb
push
pop
mov
or
xor
mov
push
loop
pop
adc
sub
test
adc
mov
xchg
leave
jg
jmp
adc
inc
shl
jns
insb
fwait
inc
sbb
add
add
mov
or
cltd
mov
cmpsl
cmp
les
jb
xchg
ret
mov
pop
add
sbb
pop
cwtl
les
pop
lods
mov
inc
xchg
stc
loopne
rol
push
push
loope
pop
or
xchg
adc
and
add
mov
or
and
mov
int
mov
sbb
add
or
push
mov
xchg
push
pop
frstor
lods
inc
outsl
adc
jmp
inc
add
jl
dec
daa
ret
cld
dec
cmp
xchg
icebp
jl
cmp
lods
pop
test
sahf
xor
sbb
add
test
cmp
enter
test
add
pop
inc
stos
xor
push
xchg
inc
and
inc
insl
push
std
xlat
int
dec
jp
cmp
push
jp
push
mov
add
dec
cmp
dec
les
jmp
push
mov
push
sbb
inc
clc
test
xchg
imul
sbb
and
push
adc
dec
mov
and
aaa
pop
stos
cmc
mov
or
sub
or
cmp
popf
fcoml
push
lods
lea
arpl
pop
mov
push
and
cmp
loopne
jns
xchg
loopne
scas
push
jno
test
xor
gs
enter
mov
movups
in
dec
bound
imul
sbb
push
es
fisubs
pushf
add
inc
popa
xchg
inc
xor
pushf
je
dec
imul
push
jno
in
repz
and
cmp
inc
push
repnz
into
push
popa
mov
daa
adc
adc
repz
dec
cwtl
push
add
aas
jl
mov
pusha
test
add
imul
or
adc
xchg
xchg
mov
mov
push
clc
push
mov
xorb
pop
mov
das
ljmp
dec
nop
sub
push
nop
adc
or
loopne
inc
les
add
mov
pushf
cmp
cmpsb
sar
shrl
push
out
sbb
in
loope
add
pop
out
and
mov
jo
push
iret
or
addl
add
jmp
call
jo
push
jecxz
inc
imul
jns
and
sub
sbb
jmp
ret
sub
cmc
push
jnp
push
or
int
sub
arpl
add
sbb
lods
adc
outsb
add
nop
add
pop
fdecstp
lahf
or
add
ds
nop
and
ror
sbb
sbb
add
rcrb
xor
aad
push
stos
push
jge
fldenv
push
mov
push
jne
inc
inc
les
inc
mov
aam
add
notb
jae
int
test
mov
dec
loopne
loopne
lds
pop
inc
sbbb
cmp
xchg
mov
pop
rcr
pushf
or
pusha
adc
adc
adc
mov
dec
aam
or
sbb
pop
pop
inc
or
pop
test
fisttps
push
jbe
and
loopne
push
xor
or
test
mov
push
fcompl
xchg
clc
shlb
loop
cmpl
pushf
sub
movsb
pop
lcall
cmp
adc
jmp
cmpsb
xchg
cs
imul
xor
arpl
adc
xor
and
sub
addr16
and
lahf
sbb
dec
in
mov
repnz
inc
fidivl
mov
push
dec
adc
lods
add
jne
sbb
in
cltd
cs
mov
into
clc
push
and
insl
mov
xchg
mov
mov
pop
jbe
adc
bound
push
dec
and
and
sub
mov
xor
and
shll
xor
mov
mov
dec
aaa
push
lret
aam
je
movsb
xchg
ljmp
push
or
dec
mov
enter
cmp
sbbb
test
xor
push
jmp
add
jge
push
push
lock
push
cwtl
test
mov
lret
je
ds
das
adc
pop
push
pop
jmp
outsl
add
jb
jno
push
sbb
cs
or
ret
fwait
pop
and
or
mov
jb
and
mov
pop
fstpt
dec
cmpsl
and
inc
sbb
and
imul
in
or
jno
cmp
xor
dec
mov
popa
mov
jg
sbb
ficoml
or
adc
sbb
mov
and
popa
and
push
and
pop
mov
lods
inc
mov
lret
dec
sbb
lock
push
dec
popf
shrl
pusha
or
add
mov
cmpsb
push
lds
jae
lods
jne
jmp
stos
jmp
sbb
rcrb
xchg
add
data16
imul
dec
ds
xchg
mov
dec
sub
shlb
data16
iret
mull
mov
fwait
enter
cmc
push
daa
pusha
dec
mov
push
adc
inc
scas
sbb
sti
sbbb
cmp
inc
push
mov
push
pop
test
push
mov
mov
shrb
jg
pusha
clc
mov
lock
mov
int
notl
push
dec
push
lahf
or
arpl
cmpsl
jnp
or
ret
dec
or
subb
push
movsl
add
push
nop
sbb
rorl
add
push
xchg
add
test
jl
or
sbb
xor
sub
push
dec
adc
adc
or
insl
nop
outsb
adc
inc
sub
inc
out
push
adc
xor
nop
inc
int
mov
scas
lret
dec
cmpsb
jb
jo
xchg
loopne
or
dec
orb
push
or
dec
pop
lcall
dec
mov
dec
mov
mov
aad
cmp
nop
sbb
lcall
and
mov
test
adc
mov
out
mov
icebp
fnsave
stc
fdivl
sub
push
or
dec
mov
das
sub
xchg
leave
or
mov
shrl
sbb
dec
sbb
jno
movsl
adc
fistpl
sar
fisubs
cmpsl
dec
adc
ret
aam
dec
add
imul
dec
int
xor
add
test
jmp
jne
xchg
imul
inc
stos
inc
push
mov
ret
jmp
pop
enter
dec
enter
xchg
pop
gs
sub
or
push
ret
std
inc
icebp
clc
push
jle
divb
mov
jns
or
jns
nop
jge
jns
adc
sub
cmp
lcall
inc
and
nop
jbe
loopne
adc
push
mov
pop
rolb
mov
test
mov
mov
movsl
mov
pop
mov
inc
test
jecxz
and
jne
and
mov
or
jmp
xor
and
lea
shrb
adc
pop
and
adc
dec
adc
lods
or
loop
movsl
iret
push
enter
adc
out
clc
leave
sub
sbb
sarb
je
lret
test
aaa
loop
lds
bound
push
push
sti
push
dec
stc
loope,pt
jo
cwtl
fmuls
imul
or
subb
xchg
inc
xchg
and
cmp
stc
jge
lock
push
sub
push
cld
or
mov
fcompl
and
push
mov
das
lea
xchg
outsb
pushf
pop
cld
xlat
jecxz
fdivl
out
push
nop
and
pusha
stos
sbb
loope
out
popf
clc
or
lret
and
cmp
inc
fwait
repz
sub
push
jmp
mov
add
je
cmp
pop
loop
shlb
cmpl
adc
sbb
cmp
jae
push
push
sub
jnp
popf
push
lods
fwait
call
pop
add
mov
sti
xchg
sub
mov
inc
xchg
add
dec
dec
std
dec
out
js
sbb
roll
mov
in
sbbb
in
jns
jne
adc
ret
fsubr
push
dec
pop
in
mov
push
jae
pop
mov
jb
in
mov
lods
aam
lret
jmp
lock
arpl
loopne
sbb
and
popa
mov
loopne
inc
test
bound
or
inc
inc
mov
jae
mov
clc
mov
mov
push
fisttpll
mov
fiaddl
mov
xchg
adc
loop
xchg
test
xor
sub
cmp
fwait
lds
mov
mov
push
incb
inc
shrb
push
and
inc
aam
cmp
add
xchg
inc
mov
push
cmpsb
pop
cs
shr
loop
sub
jmp
push
ds
mov
adc
xchg
jb
clc
push
insl
inc
adc
jne
cwtl
aam
icebp
inc
xor
leave
out
pop
sbb
xor
jb
xchg
xchg
mov
paddsw
stc
shrb
sub
lsl
rorl
jne
mov
out
mov
adc
and
or
add
outsb
stos
ja
dec
dec
push
jg
pop
ret
or
and
iret
xchg
fdivl
lods
xor
mov
lods
push
sbb
adc
jmp
rorl
xor
mov
cmp
pop
aad
popl
pop
mov
mov
lret
lret
es
ds
add
sti
push
jg
xchg
dec
push
jl
mov
dec
mov
popa
sbbb
adc
push
dec
jmp
pop
push
sahf
rclb
inc
pushf
mov
mov
pop
dec
mov
cmp
jns
inc
mov
lods
and
pop
sub
jbe
popf
mov
push
inc
xor
cmc
setae
in
lea
das
mov
jg
movsl
clc
jnp
sub
and
loope
xchg
sbb
test
push
inc
adc
ds
nop
adc
ds
aam
dec
rcll
or
adcb
jl
call
decl
or
in
cmp
or
jmp
pop
jmp
xchg
mov
mov
and
mov
fwait
outsl
adc
inc
mov
xchg
xor
mov
mov
or
or
ss
dec
lock
cmpsb
daa
je
leave
lods
in
mov
fcompl
frndint
adc
add
movsl
xor
jne
adc
int
jl
popf
movsl
dec
scas
mov
mov
sub
inc
in
jmp
push
mov
add
mov
rorb
and
inc
lds
scas
mov
xchg
movsb
push
or
sub
fdivr
mov
mov
and
xchg
and
and
xchg
movsl
and
lock
mov
call
movsb
movsb
or
xor
hlt
add
sub
dec
popa
pop
wrmsr
cltd
add
jb
test
adc
lods
jmp
mov
push
jno,pt
rcrb
push
push
pop
leave
sbb
push
pop
xor
iret
movsb
mov
clc
scas
mov
dec
cmp
jb
sbb
xor
xchg
pusha
shlb
push
jo
sar
cmpsb
or
and
adc
shl
xor
mov
sar
js
aaa
aam
jmp
inc
jge
mov
lret
mull
sbb
jle
sub
sbb
nop
lds
pop
pop
adc
push
or
aaa
sub
nop
shrl
cmp
mov
gs
jl
adc
sbb
mov
mov
or
es
xchg
push
aaa
mov
or
xchg
push
jp
push
jnp
or
mov
cmc
cmpsl
and
sub
jne
outsl
jmp
mov
inc
jb
cwtl
pop
gs
sub
and
mov
and
je
and
push
dec
jne
jmp
adc
pop
pop
ret
notl
sub
cmp
mov
jne
cmp
cli
push
pop
mov
enter
scas
sub
cmp
push
lods
jae
pop
fiadds
sbbl
mov
mov
je
sbb
push
stos
in
adc
icebp
shrb
or
pop
pusha
and
mov
test
movsb
cmp
mov
or
add
add
or
sahf
adc
shr
loop
xchg
mov
inc
mov
mov
nop
sbb
shl
inc
sti
sbb
mov
inc
mov
inc
arpl
sub
or
add
lret
rcll
mov
lods
push
pop
push
sbb
or
scas
add
xchg
adc
adc
mov
adc
lods
call
or
and
stos
sub
lret
xchg
add
outsl
xor
push
and
push
popa
cli
out
inc
or
mov
or
jno
cmpsl
pop
pusha
daa
push
cmc
loope
add
add
rorb
out
adc
lret
inc
stc
sub
mov
mov
pop
add
test
or
scas
incb
frstor
cmp
adc
jge
adc
inc
jle
mov
mov
jne
push
adc
mov
loopne,pt
cmp
jl
jb
xor
sub
xlat
call
cmp
jmp
movsl
pop
or
loopne
or
jo
fisubrs
inc
out
sub
adcl
cmpl
mov
adc
popf
add
jmp
inc
addb
lahf
push
jae
sbb
mov
dec
and
leave
std
inc
cwtl
lods
add
rol
es
and
mov
sbb
and
cli
inc
fcoml
push
push
push
adc
imul
dec
not
xor
cmp
cmc
adc
push
mov
cmc
pop
es
pop
xlat
mov
jge
add
xor
les
frstor
xor
fisubs
xchg
jmp
pusha
shrl
jmp
lea
rcrl
or
movl
dec
pop
movsb
jge
inc
int3
dec
mov
clc
add
in
jns
cli
push
cmp
mov
add
lret
repz
movb
aaa
cmp
sti
jne
dec
loope
or
dec
cld
mov
int3
je
sub
add
cmpl
mov
xor
dec
test
sar
and
adc
subb
push
sub
mov
jp
jge
ss
inc
aam
or
or
in
jb
jmp
lea
icebp
mov
cmpsl
arpl
inc
jecxz
daa
cs
jns
mov
adc
push
outsb
leave
rclb
outsl
dec
sbb
add
test
sar
dec
xchg
enter
inc
inc
pusha
clc
stc
xor
pop
xchg
test
jne
push
mov
test
mov
addr16
movl
sbb
add
sub
cmp
leave
aas
dec
popf
lret
dec
in
add
sbb
xchg
xor
cmp
add
jmp
push
xchg
push
push
cld
lea
ret
and
cmp
jl
nop
adc
ljmp
push
lret
or
push
cmp
jb
adcl
test
test
jae
or
sbb
loope
or
add
push
ret
pop
mov
pop
lock
cmpb
enter
xor
mov
cmp
sub
pop
xor
orb
jg
sbb
adc
lret
or
xchg
mov
or
in
imul
jbe
outsl
lock
outsl
icebp
add
in
les
ja
xchg
xorps
fs
cli
xchg
jge
stc
pop
test
jne
adc
and
pop
xchg
repnz
sub
lcall
add
adc
lds
push
add
add
mov
aad
iret
adc
adc
mov
mov
jle
shrb
pop
pop
cld
test
mov
flds
dec
dec
cwtl
push
or
jnp
and
mov
and
loope
lods
sbb
push
repz
lock
clc
sahf
loop
stos
inc
rolb
cli
sub
or
adc
pop
ja
scas
hlt
mov
adc
and
jl
imul
jle
mov
mov
int3
add
dec
cmp
inc
or
je
push
call
aam
xchg
pop
clc
js
sub
aaa
pop
push
jne
xor
sub
mov
xorb
shlb
xor
pop
sub
popa
int3
push
mov
push
pop
sub
adc
test
les
pop
fbld
mov
test
sub
add
cmp
aam
jb
or
jmp
pop
mov
enter
push
test
dec
fs
ret
mov
fldpi
in
push
add
mov
dec
fiaddl
xchg
movsl
or
or
aaa
ljmp
jns
test
jb
adc
loopne
or
xchg
lods
sbb
test
jne
sub
cmp
push
in
ja
ret
je
scas
stc
ds
add
jmp
and
inc
rolb
divb
stos
mov
mov
dec
adc
pop
jmp
push
loop
inc
add
dec
push
xor
add
mov
test
cmpl
sbb
adc
daa
nop
and
call
push
mov
xchg
cli
push
push
jae
stos
inc
movsb
and
inc
out
adc
aaa
inc
and
sbb
and
xchg
mov
bound
int
xchg
push
push
imul
movsl
in
rorb
mov
lock
mov
and
add
std
mov
jns
dec
shlb
sub
or
cmp
int3
insl
cmp
or
cmpsl
popa
nop
or
call
cmp
das
fildl
push
add
dec
int3
aas
sbb
or
lret
hlt
pop
adc
frndint
add
or
repnz
dec
inc
mov
dec
mov
std
add
je
and
cld
mov
mov
add
jecxz
rcr
jg
insl
testl
jmp
repz
mov
mov
xor
orb
rorl
inc
mov
adc
scas
push
imul
push
mov
and
dec
cld
pushf
testb
inc
push
jns
pop
or
lahf
or
rolb
xor
ret
or
pusha
sbb
movsb
shrb
cwtl
arpl
jmp
add
fidivrs
insb
loope
popa
xor
adc
test
xlat
xlat
jb
cltd
data16
or
inc
add
or
or
xlat
out
jl
fs
stc
inc
test
pop
fadds
pop
shlb
inc
cmp
push
push
imul
shl
adc
orb
fwait
mov
add
in
adc
icebp
ljmp
push
push
fiaddl
mov
roll
stc
or
out
lea
pop
ljmp
fdivs
cmp
lock
loope
xchg
daa
adc
aam
jmp
pop
addr16
jo
pop
std
sbb
test
movsb
test
mov
push
mov
cmp
movb
fld
or
inc
adc
and
adc
ret
dec
inc
mov
sahf
or
mov
outsb
and
add
sbb
push
inc
dec
xchg
xor
dec
cwtl
add
pop
lret
rcll
dec
add
xchg
unpcklps
hlt
test
dec
lret
rcr
rclb
sub
and
test
add
adc
push
jp
cwtl
xor
roll
cmp
jbe
inc
clc
jb
hlt
sub
mov
xor
or
repz
aaa
inc
and
push
mov
add
or
loopne
sbb
xor
xor
adc
sub
adc
and
pop
mov
jl
fwait
add
or
pop
nop
int3
mov
dec
dec
sub
fimull
sarb
inc
cmpsb
lret
inc
inc
inc
push
inc
sbb
lods
xchg
or
mov
mov
mov
dec
adc
mov
mov
mov
add
das
dec
and
clc
mov
js
icebp
fs
in
pop
sbb
and
adc
sahf
nop
or
fs
xor
push
movsb
push
mov
or
lea
sarb
and
cmp
icebp
pusha
cmp
adc
nop
mov
push
cmp
js
cwtl
and
ror
add
xchg
mov
push
and
dec
movsb
xor
push
out
inc
jle
mov
lret
pop
push
dec
lods
mov
sub
scas
dec
add
pop
mov
sbb
nopl
or
sub
mov
inc
and
push
push
adc
je
adc
dec
xchg
adc
pop
dec
xchg
or
pop
dec
cmp
lods
and
or
pushf
mov
mov
jp
adc
cmpsb
cmp
and
in
sbb
mov
push
sbb
and
dec
bnd
and
dec
aam
xor
sbb
xchg
in
adc
ds
dec
ret
pop
mov
xlat
mov
ds
push
rorb
jne
inc
inc
dec
mov
push
cli
pop
ds
mov
sbb
repnz
xchg
jbe
mul
lret
mov
xlat
test
loopne
push
subl
cmpsl
mov
int
iret
cmp
cs
popa
aaa
jle,pn
ljmp
mov
sbb
pop
sbb
gs
fsubl
sha1msg2
out
sbb
jbe
push
pop
adc
loop
push
cmp
imul
mov
lret
add
jmp
idivl
ljmp
or
repz
imul
hlt
or
push
mov
into
addl
pop
and
pop
aam
mov
ret
loopne
int
inc
xchg
shlb
sti
adcl
sub
mulb
inc
fisubs
outsb
xor
and
inc
lock
mov
test
xchg
jge
mov
lds
mov
xchg
xor
cmpl
or
ret
fs
ror
dec
adc
or
cmpsb
inc
add
cmp
add
mov
push
mov
or
sub
dec
loopne
addb
cs
xchg
call
mov
jge
cmp
faddl
xchg
push
inc
in
out
dec
decb
mov
rcrb
add
xchg
adc
xor
or
push
aaa
andl
mov
mov
jns
mov
mov
xor
xchg
push
stos
add
ret
xchg
xor
dec
dec
and
and
jmp
lods
sub
jge
or
loopne
fwait
nop
les
mov
jmp
cs
aam
add
test
stc
add
imul
incb
lea
in
adc
hlt
sbb
call
movl
jo
xor
inc
jecxz
cli
mov
je
call
adc
addl
adc
sub
add
adc
pop
or
jbe
test
cltd
and
mov
sub
fldt
jo
aaa
adc
inc
mov
daa
frstor
ret
push
outsb
dec
leave
fs
mov
adc
jg
stc
and
iret
loop
rcrl
inc
cmp
je
sbb
xor
pop
enter
push
mov
sub
push
or
es
add
sbb
faddl
bound
and
sub
cld
call
jmp
jbe
enter
pop
clc
fdivl
fdivrl
inc
je
xchg
jge
pop
cmp
inc
dec
mov
and
and
lds
and
ss
lock
push
xchg
or
xchg
loopne
mov
push
adc
into
mov
pop
nop
mov
or
adc
dec
rcl
cwtl
mov
push
inc
pushf
dec
adc
mov
xor
in
mov
sarb
shl
fnstcw
call
or
jge
std
insl
int3
fistpll
hlt
or
cld
mov
pusha
mov
mov
mov
fsubr
call
out
adc
mov
adc
sar
inc
shl
mov
mov
pop
push
mov
xor
out
outsb
fs
sbb
in
outsl
fs
jmp
fnsetpm(287
arpl
loopne
lods
sbb
or
inc
inc
pop
pop
xchg
and
adc
stc
inc
dec
cld
mov
cld
mov
mov
sub
ds
mov
adc
inc
std
out
xor
pop
clc
sub
and
cld
movsl
mov
outsl
int
sub
repnz
and
inc
dec
hlt
inc
dec
sbb
xchg
inc
sub
cmpl
test
les
mov
lock
or
or
addl
cmc
add
call
mov
push
aam
and
jl
in
push
movsl
ljmp
sub
mov
jmp
xor
int
ds
and
stos
arpl
fdivl
push
loopne
mov
aas
dec
sbb
mov
sbb
hlt
jo
push
xor
jl
ja
gs
gs
clc
sub
fadds
int3
out
dec
mov
xor
scas
sti
xchg
lcall
popa
test
xchg
inc
int3
clc
js
pop
subb
push
adc
dec
int3
mov
aam
xchg
mov
dec
sub
jnp
adc
movl
imul
push
fs
push
inc
adc
mov
fmull
and
bound
xlat
or
jns
mov
fcomps
and
fstps
push
pop
iret
inc
mov
fwait
jp
loopne
and
push
lods
sub
jl
cmp
push
clc
ljmp
dec
pop
xor
lea
xor
cmp
jge
cmp
and
dec
lods
sti
std
fwait
pusha
mov
dec
push
test
sub
sbb
inc
mov
in
pop
cmp
ja
push
divl
xchg
out
shrb
mov
mov
adcl
pop
and
les
or
inc
inc
fstl
push
and
mov
dec
lods
lock
push
adc
and
lock
lods
add
es
mov
push
sub
jb
xor
jmp
cs
jecxz
sub
or
mov
ljmp
add
cs
inc
outsl
call
jmp
popl
cmp
inc
or
imul
mov
sub
pushf
orl
adc
or
shlb
pop
dec
sbb
imul
cwtl
mov
mov
in
adc
dec
mov
push
lea
or
cmpsl
pusha
test
inc
dec
loope
dec
or
inc
dec
aas
mov
jl
mov
or
dec
pop
or
dec
aam
inc
popw
or
int3
stc
hlt
or
mov
adc
sub
pop
mov
dec
dec
icebp
inc
inc
or
mov
aad
rorb
jo
outsb
mov
rorb
sbb
or
pusha
jo
dec
xchg
dec
lea
pop
je
or
pushf
xchg
movsb
and
mov
rcrb
adc
sub
xlat
sub
mov
or
leave
stos
outsb
into
sub
je
dec
clc
sub
cmpb
sbb
je
arpl
lret
in
sub
das
repnz
popf
sbb
mov
clc
cld
ror
shl
mov
leave
mov
fwait
lahf
ret
xor
adc
fldl
in
mov
sbb
int3
pop
sub
sub
jae
cmp
clc
dec
bswap
pop
inc
xor
in
mov
adc
aas
and
push
lahf
xor
sub
rol
add
push
rorb
rolb
adc
test
fdivp
ljmp
and
mov
adc
mov
push
cmp
call
adc
shlb
call
ror
xlat
test
test
or
mov
outsb
loopne
aam
inc
cmp
sub
and
pusha
add
call
jmp
sub
aad
jo
bound
clc
jno
cmp
outsl
std
popa
jmp
dec
dec
dec
adc
stc
add
adc
fldcw
xchg
adc
dec
enter
les
sbb
sahf
push
pop
adc
xchg
adc
cmp
xor
and
mov
inc
dec
ljmp
lock
out
data16
mov
outsb
cmpsl
inc
jb
adc
lcall
add
leave
hlt
mov
add
mov
xor
lock
dec
ja
andl
adcb
jbe
popa
call
popa
scas
cwtl
add
je
adc
xchg
sub
dec
in
cmpsl
add
xchg
mov
lods
jae
sub
ljmp
xor
ficoms
les
push
out
loop
fdivrs
or
jmp
in
cmc
fwait
scas
mov
jge
outsb
mov
add
lods
popf
or
push
ret
mov
push
das
enter
cmpsl
mov
jmp
loop
push
add
fwait
inc
or
insl
lret
mov
push
cmp
and
call
mov
loope
cld
outsl
and
inc
jmp
or
mov
jae
out
daa
icebp
push
dec
icebp
dec
adc
clc
add
xor
cltd
repnz
adc
adc
inc
adc
or
gs
push
cld
xor
mov
pop
cmp
mov
ja
jae
mov
mov
jp
adc
add
push
or
or
test
push
sbb
xchg
into
inc
test
inc
out
jne,pn
inc
sub
pop
dec
pop
sbb
mov
push
mov
sub
xor
cmp
orb
dec
dec
ret
xchg
mov
dec
leave
jmp
pop
adc
daa
lods
sahf
cli
loopne
or
test
inc
lods
lahf
or
fstl
pop
fdivrs
call
fdivr
scas
ljmp
aam
adc
enter
jne
and
loope
ret
fisttps
fcomps
jle
sub
or
loope
rcrl
int3
mov
test
pop
repnz
or
sub
inc
in
mov
ljmp
popf
push
jecxz
outsl
mov
add
and
xchg
fwait
and
adc
adc
push
mov
pop
fcoms
nop
jmp
and
and
std
pop
jg
cmp
cmp
pop
out
mov
hlt
mov
cmp
cmp
scas
clc
pop
sub
cmp
sub
adc
ljmp
xor
fsubs
pop
pop
repz
cmp
enter
int3
and
or
cmpsb
movsb
sti
pop
xor
adc
or
adc
jmp
pop
jecxz
pop
xor
shr
daa
fildl
pusha
fmuls
leave
jne
hlt
div
mov
mov
adc
out
shll
push
cmp
or
pop
jecxz
pop
jbe
dec
lcall
push
sub
outsl
mov
std
int3
or
sbb
push
push
outsl
adc
inc
enter
or
xor
adc
jbe
sub
cli
sub
sbbl
xor
mov
jge
inc
dec
mov
push
andl
in
lods
sbb
sbb
adc
adc
adc
sbb
jmp
mov
and
and
sbb
dec
mov
test
lods
fldenv
pop
mov
push
xlat
xchg
inc
xor
lock
cmp
dec
rcll
and
aam
inc
popa
jl
pop
mov
addl
add
push
cmp
es
aaa
bound
cmp
or
mov
gs
adc
sub
inc
push
hlt
cli
dec
scas
in
jmp
lods
aaa
mov
xor
daa
xor
or
pop
add
imul
add
cmpb
cmpsl
mov
fstl
xchg
mov
mov
sub
or
aam
aaa
movsl
nop
roll
add
push
push
and
flds
inc
dec
in
sbb
push
adc
push
dec
jne
or
jbe
popa
inc
call
shr
mov
in
and
das
or
sbb
pusha
imul
add
out
mov
mov
lret
daa
jl
jbe
add
adc
dec
adc
dec
mov
xlat
mov
adc
enter
add
inc
jmp
addb
push
mov
or
push
rcl
adc
popl
cmp
cmp
loope
add
mulb
fiadds
mov
repnz
xorb
clc
inc
dec
repnz
sarl
shrb
mov
cmp
or
test
add
or
pop
je
xchg
xor
jmp
jp
mov
shll
test
cld
dec
inc
and
xor
ja
jl
or
or
dec
lods
and
mov
rcrl
aaa
pop
mov
mov
or
shlb
mov
jmp
aaa
sti
gs
fbld
sti
in
dec
sahf
hlt
lret
xchg
jne
sub
sar
cld
xchg
sarb
inc
mov
daa
jno
push
in
fmul
stc
lret
cli
jb
inc
add
xor
mov
lcall
push
es
ret
xchg
sub
cld
or
aad
mov
sub
into
ss
add
add
or
push
or
fsts
cmc
test
into
rol
or
add
mull
adc
movsb
jl
gs
mov
add
push
lea
sub
xchg
adc
push
rcrl
or
push
nop
cmp
dec
fistpll
or
or
sbb
test
daa
adc
mov
shrb
insb
and
enter
sbb
aad
into
rol
or
enter
xor
push
pop
push
shl
mov
lods
add
sub
popf
push
or
daa
add
pushf
adc
sahf
mov
loope
std
mov
repz
mov
in
lods
lds
inc
cwtl
adc
adc
xchg
ret
aad
loopne
cwtl
enter
pop
popf
addr16
pop
xor
cld
lods
push
add
lods
cmp
ret
hlt
andb
adc
xchg
xor
outsl
adc
mov
std
jmp
je
test
push
cmp
fwait
ds
imul
test
xchg
loope
clc
cmpsl
inc
and
xchg
dec
ss
not
hlt
sbb
lea
aad
xchg
mov
mov
fs
cli
sub
mov
pushl
jne
push
stos
inc
js
aaa
mov
jmp
and
push
inc
xchg
sub
pop
mov
inc
xchg
mov
xchg
repz
mov
jae
add
cmp
dec
add
push
lea
mov
mov
inc
mov
add
cmp
inc
sbb
pop
test
out
mov
roll
filds
mov
scas
or
xchg
insl
test
inc
push
std
sbb
adc
push
mov
sbb
push
mov
cmp
adc
add
xchg
loope
push
jecxz
les
sub
xchg
sub
inc
aam
mov
call
inc
and
les
lods
stc
sub
in
bndldx
testb
mov
add
lods
mov
imul
inc
and
sub
inc
xchg
loope
fcoms
cwtl
adc
jmp
or
test
mov
call
outsb
sub
adc
call
addr16
pop
ret
inc
je
push
pop
popa
push
adc
shlb
inc
jge
xchg
pop
fsub
push
mul
push
add
dec
rcll
pop
and
rolb
jmp
push
mov
xchg
jnp
mov
sbb
movsb
sub
pop
jle
sub
gs
lds
inc
outsb
test
xorl
fisttpl
xchg
arpl
cmp
iret
jmp
lock
sub
sub
xchg
jp
add
mov
lods
fcomps
dec
adc
shl
ficompl
inc
add
popf
nop
mov
dec
fmul
lcall
ret
test
push
daa
mov
movb
andl
cmp
push
adc
ret
jl
ret
jo
adc
jecxz
ds
cmp
jne
push
inc
fiaddl
daa
pusha
enter
jecxz
jbe
testl
les
iret
ljmp
jg
xchg
xor
adc
adc
test
sub
gs
mov
jbe
outsb
mov
stc
rcll
add
cmpsl
mov
daa
xchg
roll
dec
out
xchg
stc
cmp
mov
push
xchg
or
repz
push
push
push
sub
cmp
dec
and
adc
sub
xor
aam
push
mov
icebp
adc
in
mov
inc
push
stos
inc
loopne
mov
mov
fsubl
outsl
fmuls
out
nop
mov
adc
xor
out
mov
mov
inc
dec
push
push
xchg
push
sub
cmp
or
jne
js
dec
repnz
fs
sub
fdivl
fcomps
aam
inc
shlb
int3
adc
aam
dec
inc
enter
ss
sbb
mov
hlt
out
or
int3
pusha
push
bound
out
push
mov
mov
jne
push
push
call
cmc
xorb
mov
icebp
jne
das
loop
xchg
iret
jo
stos
add
add
jae
push
sahf
out
daa
lds
or
adc
test
xchg
mov
or
push
or
mov
mov
jecxz
sub
iret
pop
pop
mov
jo
in
cmp
sub
loop
popf
mov
out
adc
pop
sbb
cmpsb
push
daa
sbb
mov
dec
lcall
pop
movsl
push
or
pop
mov
pop
repnz
nop
cltd
les
loope
cmp
add
leave
add
test
movb
mov
dec
addl
lods
lds
inc
xor
cmp
mov
sbb
idiv
mov
and
das
mov
das
xor
xor
idiv
jp
mov
push
bound
stos
mov
int3
dec
adc
icebp
dec
mov
xchg
add
aam
push
popa
pop
mov
jne
dec
ss
sub
sbb
cmp
sahf
mov
roll
adc
mov
mov
in
or
pop
mov
lcall
shrb
cmp
or
push
clc
adc
or
dec
or
test
push
test
lret
mov
push
add
sbb
inc
sbb
jne
mov
loope
clc
and
pop
mov
mov
and
xlat
xchg
sti
mov
pop
arpl
mov
sub
mov
shl
test
jne
out
dec
out
pop
stc
leave
xchg
mov
aas
mov
dec
dec
mov
nop
and
int
roll
mov
pusha
cmpsb
or
mov
das
js
or
cli
mov
aam
push
nop
push
lds
in
adc
pop
jne
push
lret
hlt
subb
push
es
xor
in
push
jle
and
bound
pop
lods
stos
cmp
and
mov
cmc
roll
jmp
inc
push
inc
dec
lods
lock
enter
or
or
lret
mov
int
adc
rorb
jns
das
jge
fsts
imul
adc
xchg
stos
dec
pop
sub
or
out
leave
hlt
out
orl
test
call
or
rolb
xchg
into
daa
adc
cmp
or
sub
adc
cld
sbb
pop
mov
aas
ss
inc
pop
movsl
xchg
mov
or
cmpsb
mov
adc
cmp
rorb
loope
push
cs
mov
mov
mov
or
call
mov
mov
enter
add
cld
popf
adc
pop
inc
sbb
pop
cs
adc
mov
jge
adc
aad
pop
gs
dec
and
rcll
sahf
pop
lcall
inc
sbb
hlt
lahf
gs
dec
xor
pop
testl
test
and
lea
inc
inc
jae
jnp
jmp
mov
cmpb
pop
inc
push
push
shrb
push
sbb
test
sub
js
dec
push
adc
lods
fdivs
add
xor
dec
outsl
les
fldcw
add
aaa
lods
or
decl
sbb
cmp
and
fs
pop
sub
andb
pop
adc
xor
sub
inc
sbb
lret
or
add
cli
adc
sarb
xchg
enter
in
loopne
dec
jbe
mov
push
ja
nop
leave
inc
inc
shrb
repz
stc
sbb
bnd
sbb
mov
rolb
hlt
fst
out
cmp
lods
sbb
mov
pop
sbbb
in
inc
cmpsb
sub
xchg
lods
jl
push
push
hlt
cs
ret
in
inc
or
jmp
mov
sbbl
orb
xor
mov
daa
adc
mov
bound
push
inc
add
sarl
and
pop
jb
and
stos
mov
cld
rcll
jmp
stos
ss
xchg
add
inc
loope
adc
mov
imul
adc
xchg
mov
filds
sub
dec
add
ljmp
aam
test
je
mov
lahf
sti
mov
xorb
or
mov
fs
adc
sbb
push
sub
xchg
sbb
sahf
jne
cltd
inc
stos
add
or
and
add
adc
push
xchg
adc
add
adc
inc
jns
fisttpl
lcall
jnp
aam
test
sub
jne
mov
flds
adc
or
call
mov
mov
cli
xor
arpl
sbbl
call
adc
aad
xor
jmp
movsl
stc
bound
adc
ficoms
cli
loope
jmp
xor
mov
push
push
xor
jmp
sub
orl
jmp
adc
lds
push
clc
jo
dec
cmp
ljmp
fdivl
xchg
xchg
add
sar
adc
jno
je
mov
mov
sbb
movsb
jae
call
or
test
test
or
je
push
and
pop
mov
cmp
jae
jl
push
mov
imul
xchg
lcall
and
cmp
dec
cmpsb
cmpsb
sti
inc
pop
jne
aaa
sahf
movsl
stos
into
mov
lahf
nop
mov
jbe
fs
jae
inc
inc
int
adc
jle
sub
out
fmull
dec
jmp
sub
fadds
les
stc
iret
ds
and
mov
add
add
fisttpl
jmp
add
iret
and
dec
das
pop
pop
ret
addr16
add
ja
inc
jns
or
xor
push
fldcw
int3
pop
idivl
out
lock
cwtl
mov
jg
sarb
int
and
dec
xchg
jl
int
push
shr
add
rclb
out
ret
jp
lds
and
mov
es
dec
xlat
mov
int3
dec
fwait
cmp
lcall
imull
cmpsb
mov
fcompl
sar
mov
push
cld
jb
enter
cmpsb
push
cmp
addr16
dec
dec
mov
fiaddl
push
xorb
adc
cmp
ss
sub
mov
dec
sbb
mov
testl
test
cmc
cmp
test
xchg
add
cmp
mov
aad
nop
push
leave
mov
sub
pop
sub
mov
insl
in
cmc
mov
mov
addr16
or
pop
push
or
cmc
lds
clc
roll
jmp
cmp
gs
hlt
pop
dec
fs
fadd
jno
cmp
adc
xor
in
lret
push
in
inc
xorb
xchg
imul
inc
jmp
xchg
mov
lods
push
ljmp
mov
fistl
cmp
es
lea
xchg
xchg
movsb
fistpll
pop
push
cld
push
mov
xchg
inc
hlt
jge
inc
sbb
xor
inc
push
sub
push
cmp
or
imul
sbb
cmp
mov
sub
divl
cmc
sti
pop
add
mov
and
jmp
xchg
and
mov
adc
clc
cld
and
mov
inc
fidivrs
jns
push
addb
inc
mov
cmp
add
test
xchg
adc
dec
sub
and
test
stc
push
sub
inc
sub
fwait
daa
inc
ds
fwait
mov
outsl
mov
cmp
cmp
sbb
int3
push
sbb
pop
pop
int
sub
add
sbb
inc
push
ret
subl
push
gs
xor
movsb
push
inc
nop
sub
pop
imul
mov
push
push
or
test
or
and
sub
out
jnp
jge
test
scas
pop
lods
cmpl
pop
rcrl
pop
ror
sub
cwtl
shr
mov
jbe
call
and
movsl
jbe
add
loopne
shlb
idivl
and
jne
jb
or
cmp
mov
adc
adc
setg
push
imul
les
xchg
mov
or
fidivrl
sahf
dec
xchg
shrb
jnp
pop
xor
add
rclb
adc
or
cld
repnz
jl
sub
test
adc
clc
sti
push
push
popa
pushf
aas
jbe
cmpsb
or
cmp
rolb
add
inc
or
push
rcrb
jae
mov
ljmp
mov
jl
movsb
lods
clc
mov
mov
push
stos
idivb
adc
add
cltd
outsl
daa
pushf
pop
mov
adc
aas
or
sbb
or
inc
adc
and
imul
shlb
pusha
push
or
rclb
mov
xchg
xchg
jg
jg
cmpsb
mov
push
enter
pop
mov
adc
xchg
sub
add
mov
mov
mov
xchg
daa
shlb
adc
iret
movsb
in
cmp
stc
add
gs
push
pushf
and
popa
mov
cmp
or
lahf
inc
shll
cmp
and
out
out
imul
fldenv
lret
adc
ss
xchg
fwait
sbbb
aam
out
aas
nop
aam
enter
aam
inc
aam
enter
sub
sbb
push
mov
outsb
shlb
sti
jmp
cli
hlt
fdivr
imul
and
sub
adc
mov
jmp
test
aad
sbb
inc
dec
and
ss
or
push
out
push
enter
pop
dec
mov
adc
aam
cmp
lods
sar
mov
dec
enter
mov
mov
push
and
daa
in
cmpb
and
ds
adc
addr16
stos
xor
mov
and
pushf
lods
mov
shr
adc
cmc
xchg
mov
add
daa
sub
pop
mov
fsubs
mov
inc
mov
shll
push
scas
and
int3
or
dec
jecxz
sub
adc
xor
mov
or
adc
xor
adc
and
sub
sbb
push
mov
and
mov
adc
mov
ja
mov
xchg
xchg
push
test
fs
je
mull
imul
dec
mov
pop
add
adc
test
adc
mov
movsb
shll
sub
adc
adc
xchg
insl
dec
inc
cwtl
mov
or
cld
mov
and
xchg
aam
push
and
movsl
test
pop
aaa
and
fldl
call
sbb
fcom
inc
int3
pop
jmp
cltd
xchg
movsb
xor
lods
loop
inc
adc
push
sbb
and
and
scas
mov
xor
or
xlat
aas
mov
dec
or
inc
addl
call
aam
dec
dec
adc
push
adc
cmp
cmp
add
add
test
or
or
mov
mov
xchg
push
pop
in
xchg
nop
jo
loop
jne
movsl
insb
inc
push
push
sti
push
xchg
pop
mov
adc
xor
lock
mov
fisubrs
fiaddl
outsl
lahf
pop
nop
dec
add
stc
mov
or
and
cmp
es
mov
xor
daa
sbb
data16
dec
add
push
mov
xchg
enter
xor
mov
pop
jo
dec
xor
xrelease
push
push
andl
or
mov
jmp
jl
mov
fldpi
notl
inc
imul
lea
pop
cld
cmp
popa
icebp
jne
nop
cmp
divb
das
jl
jl
shl
jmp
fcmovnu
xor
jmp
int
xor
dec
sub
mov
fmul
shrb
jl
in
cmp
cli
cmp
push
pusha
fcoms
and
xchg
js
pop
iret
fsubp
sbb
and
clc
ds
inc
mov
repnz
adc
inc
dec
mov
or
jae
test
shlb
test
jno
mov
cmp
in
and
sbb
add
rcr
sub
sub
dec
out
inc
push
xor
int3
test
inc
add
or
ss
ficompl
mov
iret
nop
inc
cmp
daa
inc
mov
fs
or
outsl
xor
cli
aad
mov
inc
push
popf
sbb
or
mov
ljmp
adc
xchg
sahf
sub
pop
stc
sbb
push
push
add
push
mov
cmpsl
jbe
or
and
je
dec
fsubp
mov
ds
add
inc
test
cld
sbb
dec
sub
fsubrs
movsb
popf
shl
es
les
stos
mov
dec
mov
push
xchg
and
jnp
adc
in
or
mov
adc
rcrb
outsb
add
xchg
push
xor
pop
cmp
or
dec
lock
or
adc
js
shl
jle
scas
mov
mov
adc
dec
mov
cmp
mov
or
push
dec
or
dec
adc
mov
loopne
xchg
xchg
nop
aam
or
mov
sbb
push
leave
pop
cltd
int3
jnp
xchg
sub
in
xchg
test
push
mov
das
movl
xor
imul
jb
push
test
pop
loope
and
sub
aam
hlt
mov
xchg
jle
lcall
add
push
lods
cmpsb
push
movsb
repz
push
shll
xchg
or
dec
nop
adc
adc
je
orb
dec
adc
ficoms
sbb
add
fsubp
push
rep
sub
lahf
jns
cwtl
cmp
pop
xchg
adc
cmpsl
adc
adc
shr
adc
add
lock
sub
loope
push
jmp
dec
lods
add
faddl
cmp
inc
jmp
lods
aam
clc
cmpsb
sti
dec
in
outsb
lret
or
sbb
sbb
pop
inc
push
in
lahf
and
mov
jnp
aam
mov
inc
add
int
imul
mov
mov
adc
sbb
data16
push
or
int
push
das
dec
xor
mov
and
push
adc
in
inc
mov
xchg
mov
cmp
push
sub
and
imul
push
jb
or
stc
add
push
adc
and
in
test
jle
sbb
add
add
jle
dec
ljmp
mov
pop
pushf
lods
sub
or
shr
xchg
popf
in
jmp
or
adc
lods
enter
push
jg
mov
adc
push
dec
push
push
fwait
lods
enter
cmpsl
clc
outsl
lock
shl
xchg
shr
sub
inc
add
in
mov
cmp
sub
push
je
icebp
ja
nop
imul
orl
ror
mov
push
or
dec
outsb
adc
mov
push
adc
out
movsl
out
lahf
loope
loopne
rolb
stc
sub
inc
loopne
shl
cld
sub
js
pop
mov
in
je
in
cmp
inc
jmp
and
shll
mull
adcb
xor
and
fadds
lcall
stc
nop
orl
repz
fidivrl
clc
mov
adc
enter
and
ss
lea
js
adc
jns
add
push
jp
orb
pop
outsl
lock
into
lock
adc
data16
daa
sbb
xor
negb
xchg
xchg
bound
pop
adc
fcomp
cli
or
loop
pop
push
push
mov
push
push
popf
les
push
cld
dec
mov
mov
movsb
and
jle
pop
inc
cmp
shlb
push
scas
xor
cmp
pop
push
adc
mov
jecxz
and
mov
jno
outsb
lods
test
push
pop
mov
in
dec
dec
je
sub
adc
hlt
pop
loopne
jno
sub
or
decl
push
cmp
mov
and
stos
pop
and
mov
dec
dec
add
sub
insb
mov
das
nop
or
jmp
sub
test
lret
lret
push
adc
test
push
sbb
add
adc
cmp
aam
inc
mov
aam
xchg
test
or
mov
sub
mov
cld
mov
jns
add
mov
add
push
adc
cld
adc
jo
enter
push
sbb
xchg
or
mov
lea
cld
clc
inc
ret
pop
pop
adc
mov
comiss
xchg
adc
adc
mov
cmp
mov
lea
push
lcall
jmp
in
push
pop
adc
daa
or
jle
cwtl
cli
inc
icebp
add
aam
push
dec
or
daa
mov
push
and
dec
out
das
into
enter
pop
push
mov
stos
adc
imul
imul
or
jg
repnz
or
inc
shl
lcall
rorb
inc
push
add
mov
xor
sbb
xor
inc
fnstcw
mov
push
inc
xlat
add
jmp
pop
and
adc
test
add
sub
test
sub
arpl
aaa
clc
cmp
inc
and
faddl
sub
rorb
lea
mov
and
fld
lea
cmp
xor
sub
and
xchg
fcomps
jb
lods
pcmpgtb
inc
sbb
popf
mulb
push
adc
pop
fsubrl
sbb
jmp
fisubl
pop
or
or
faddl
or
test
aad
jg
fists
pop
dec
ret
or
imulb
xor
shrl
xchg
and
cmc
adc
add
fnstcw
inc
hlt
inc
stos
sub
fs
rcrb
sbb
cwtl
sub
or
mov
adc
sub
popa
or
mov
sbb
xchg
les
or
sbb
js
inc
imul
xchg
stos
push
and
repnz
inc
hlt
lods
popf
test
mov
inc
icebp
sub
rorl
or
sar
test
test
xchg
cmp
es
dec
adc
mov
pop
mov
push
and
sub
add
dec
dec
pop
push
mov
push
mov
cmp
jne
adc
dec
shlb
movsl
out
adc
xchg
inc
les
adcb
or
sub
xor
aas
mov
mov
loopne
push
xor
jg
push
mov
rclb
cli
inc
fcomip
cwtl
test
and
sbb
in
jge
jg
lahf
pop
es
inc
or
pushf
xor
pusha
cmpsb
and
push
out
fs
push
pushf
inc
imul
cli
or
or
es
test
adc
sub
aam
or
cmovno
jle
inc
jl
adc
movups
adc
sbb
jb
sbb
and
mov
sub
movsl
push
setle
xchg
arpl
cld
adc
stc
lret
mov
lock
push
pop
test
and
sbb
mov
adc
sbb
push
sub
imul
xchg
push
adc
mov
cmp
repnz
mov
lock
movb
pop
shr
ds
mov
push
lahf
xor
pop
inc
je
adc
jae
jmp
xor
xlat
sbb
dec
in
rorb
inc
lds
and
mov
insb
or
adc
popf
and
xchg
nop
adc
dec
test
test
js
mov
cmc
icebp
jns
sub
insb
xchg
add
and
add
lea
test
imul
sub
and
or
pop
repnz
cmp
sub
loop
les
add
out
or
dec
sub
arpl
test
add
clc
jmp
in
in
xchg
shlb
pop
xchg
faddl
pop
adc
icebp
test
xchg
jmp
and
mov
mov
cmp
jp
or
pop
or
push
jne
and
int3
dec
sub
movsb
mov
mov
or
fidivrs
push
fstl
adc
sub
mov
fiadds
mov
hlt
call
lods
push
shlb
test
add
jbe
int
adcb
adc
push
nop
mov
adc
les
push
push
add
shlb
mov
cmp
and
push
adc
addr16
daa
mov
sub
jl
popa
sub
pop
fnstsw
adc
sahf
inc
mov
das
notb
xchg
repnz
stc
mov
sbb
cmc
sbb
and
or
adc
lahf
mov
dec
cmp
leave
and
lods
rcrb
lar
and
xor
std
sbb
roll
dec
lods
sbbl
fisubrl
test
sub
in
jle
pop
iret
ljmp
jne
jmp
cltd
xchg
pop
xor
adc
lcall
jae
mov
jl
out
leave
in
and
dec
jne
arpl
stos
notb
adc
aaa
daa
sbb
cmp
loopne
mov
insl
test
jp
dec
mov
add
pop
adc
push
lock
inc
mov
lods
dec
xchg
adc
outsb
lds
addb
mov
mov
sbb
sar
cmp
inc
cmp
xor
jne
add
xor
fs
xlat
xchg
mov
cmp
fcompp
imul
fsubrl
dec
inc
imul
add
in
aad
add
into
push
rcrb
in
lret
push
icebp
aad
add
in
mov
or
call
xor
scas
adc
jbe
nop
mov
movb
ret
mov
fnclex
jmp
inc
push
inc
cmp
adc
cmp
incl
or
leave
dec
and
cld
clc
xchg
fiaddl
insb
testl
js
push
pop
loope
leave
fs
xchg
outsb
or
ljmp
inc
stos
push
jecxz
dec
jp
sarl
inc
push
add
push
mov
dec
mov
dec
stos
jb
pop
gs
jp
ret
pop
testb
stc
js
mov
fcmovnu
cwtl
cmp
in
xchg
cwtl
sbbl
mov
movsl
subb
pop
cli
push
and
or
jno
add
xchg
sub
arpl
loope
inc
add
es
jae
push
aaa
fistl
cltd
enter
add
les
repnz
test
sahf
out
mov
je
loope
rcrb
xor
cli
out
or
push
add
cmc
bnd
loopne
in
xchg
jecxz
xor
cmpsl
lock
pop
hlt
stos
xor
lock
fstps
icebp
sbb
sub
sub
cld
sub
imul
or
into
jge
jg
push
jp
inc
js
mov
mov
sbb
popf
daa
xchg
ljmp
mov
mov
inc
inc
or
and
sub
fucom
and
bound
or
fildl
ret
adc
decl
insl
cmpl
cmp
mov
sbb
add
jnp
std
pop
xchg
mov
packssdw
mov
mov
jmp
mov
xor
scas
jle
xchg
loop
mov
movsl
push
cld
mov
jmp
inc
push
ljmp
or
nop
and
cmp
cvtpi2ps
std
mov
lock
push
negl
pop
stos
xchg
sub
loop
dec
out
inc
xchg
int3
or
cmp
or
ret
cld
lret
jbe
inc
aam
rorl
test
push
cmp
pop
mov
popf
and
lds
mov
pop
popa
lds
xchg
mov
push
sub
sub
add
sahf
gs
nop
xchg
sub
scas
and
or
mov
lds
fs
js
pop
add
jbe
jae
dec
mov
xchg
lret
fs
pusha
jg
lea
in
jl
pushl
repnz
and
in
loop
adc
inc
or
ja
xchg
add
test
pop
sub
mov
mov
jb
ss
daa
cld
jne
sub
xchg
out
and
test
and
or
lds
and
pop
cld
mov
js
and
test
sarl
and
dec
subl
dec
mov
outsb
xlat
repnz
xchg
stos
sub
cmc
ret
shrb
cmp
dec
jl
add
loope
or
call
dec
cmp
jmp
and
adc
popf
pop
xor
and
imul
sub
adc
adc
mov
pop
leave
lret
mov
mov
adc
fdivrl
pop
bound
or
xchg
adc
jmp
ljmp
mov
std
das
mov
test
and
mov
not
call
mov
cli
in
cmpsl
xor
xor
out
and
out
add
push
fs
rolb
sbb
notb
add
repz
adc
jle
in
pushl
int3
jmp
pop
and
enter
add
popa
rorb
gs
jmp
inc
movsb
scas
xchg
mov
lea
jl
jecxz
in
jmp
movsb
jnp
cmp
push
pop
ds
call
mov
push
dec
pop
ficoml
icebp
mov
repz
outsb
sti
es
call
int
jle
pop
or
or
shl
xor
or
xor
jae
call
push
cmpsb
cmp
icebp
sub
mov
and
je
mov
lahf
rorb
mov
inc
cmp
adc
pop
out
arpl
push
xchg
or
test
adc
rcrb
add
add
or
repnz
jmp
lds
int3
test
mov
lgs
xchg
pop
mov
pop
add
jae
dec
inc
scas
nop
test
jns
sbb
aam
mov
mov
pop
xor
lahf
ret
mov
clc
push
and
popa
clc
mov
fsubl
adc
and
mov
call
and
lret
add
add
aam
les
xchg
jle
push
mov
and
mov
push
ja
movsb
xchg
adc
ret
or
xor
push
adc
fmul
xchg
mov
cs
and
ds
mov
leave
cmp
mov
je
fs
or
pop
in
leave
sbb
jbe
in
fs
and
or
and
cmp
jae
out
xchg
or
mov
jecxz
out
xlat
pop
call
mov
daa
jno
inc
xchg
cmc
movb
jp
inc
add
dec
adc
daa
clc
push
notl
lea
aad
cmp
add
ret
mov
test
movsl
cld
mov
pop
mov
std
in
or
in
mov
lds
jmp
pop
dec
imull
xchg
lret
inc
andb
bound
mov
sbb
and
stc
add
pop
sub
outsl
push
cld
shld
inc
adc
dec
aam
mov
cmp
sub
push
stos
jne
dec
lea
and
fidivrl
jo
shrl
out
and
mov
ljmp
jne
xor
xchg
call
pop
or
cmp
mov
ret
adc
and
jne
push
dec
stos
or
and
mov
inc
out
dec
jp
test
out
enter
mov
xor
in
cli
mov
adc
decl
js
adc
xchg
inc
inc
or
sub
or
inc
pop
addl
push
dec
movsl
cmp
mov
shr
or
mov
or
popf
adc
cli
daa
pop
out
xor
xor
mov
dec
daa
test
fists
ret
dec
inc
mov
cmp
out
popa
imul
mov
add
fs
cli
or
loopne
shlb
xchg
or
loop
and
jne
into
inc
fadds
dec
add
push
imul
sub
mov
mov
sahf
lea
int3
push
adc
daa
dec
imul
jge
in
nop
sub
ja
sbb
jmp
lock
jns
xchg
popf
les
pushf
adc
stos
daa
xor
insl
mov
repnz
mov
and
aaa
mov
dec
loop
jbe
dec
jp
pop
add
call
push
jl
adc
lds
jne
jl
leave
xchg
jbe
adc
mov
add
mov
sti
push
mov
mov
movsl
pop
xor
aas
loopne
cmp
daa
out
or
jne
mov
jne
adc
mov
test
and
mov
jmp
in
or
jmp
pop
adc
jmp
and
ljmp
les
mov
sbb
mov
or
lods
add
loop
jmp
dec
test
pop
add
in
inc
rorl
sbb
dec
mov
sub
inc
or
xchg
push
insl
adc
dec
xchg
je
movsl
sbb
sbb
iret
adc
push
dec
lock
mov
or
dec
xlat
pop
clc
sub
nop
mov
inc
jo
xchg
add
dec
cmp
inc
jae
loopne
dec
es
mov
js
xchg
adc
dec
dec
xchg
sub
das
andb
mov
or
lock
or
sbb
dec
out
push
scas
lea
push
sub
or
lods
sar
int3
movsb
cmp
loop
mov
mov
dec
bound
or
push
push
loopne
cmpb
je
or
ja
adc
dec
xor
or
gs
ljmp
and
and
add
lret
push
and
and
dec
or
fnsave
fnstcw
mov
pop
rolb
sub
scas
xor
or
dec
ja
sbbb
mov
negl
mov
sti
sub
or
hlt
js
loope
push
push
mov
mov
cld
mov
dec
in
or
out
test
in
jmp
jo
rolb
insl
add
mov
jmp
dec
sbb
out
out
inc
adc
stos
pop
and
loopne
mov
mov
lock
adc
and
gs
push
or
inc
lods
fsubp
rcll
adc
loope
push
sub
inc
or
inc
xchg
stc
fiadds
pop
pop
sub
mov
into
adc
lcall
shrb
mov
ds
mov
mov
cld
ret
sbb
jge
lods
push
sbb
std
sbb
clc
add
push
fnstcw
jnp
inc
cmpsb
mov
or
inc
and
or
adc
or
iret
add
mov
sbb
add
dec
push
or
push
imul
imul
xchg
scas
xor
imulb
divb
clc
pop
je
sarb
sti
das
gs
sti
aaa
popa
enter
out
nop
call
je
gs
and
jmp
dec
mov
dec
jno
push
js
loop
test
cmp
push
inc
sub
lret
pop
ret
xchg
mov
inc
cmp
mov
push
les
add
jp
dec
jbe
xchg
arpl
adc
or
add
dec
clc
mov
fstps
mov
and
insl
loopne
mov
or
test
divb
lock
jb
xorb
or
inc
sbb
in
ja
out
adc
push
dec
cld
nop
lret
fisubl
adc
mov
mov
cmp
mov
jmp
pop
adc
lret
push
and
xchg
aaa
mov
paddsw
jnp
adc
sub
jne
xchg
enter
mov
enter
jne
shl
cmpb
pushf
jg
pop
lahf
sub
xchg
inc
xchg
cmc
xor
je
pop
adc
jbe
cmpb
je
dec
cmp
mov
cmpsl
mov
sub
inc
int
cs
pop
pop
mov
adc
sbb
ljmp
jle
pop
xor
lock
shlb
in
cmp
lahf
and
enter
push
push
mov
mov
enter
and
pop
xlat
mov
push
pop
inc
cmpsb
inc
sahf
jmp
xchg
pop
lods
cmpsl
adc
jns
jns
das
or
mov
xor
mov
or
in
out
cmp
mov
or
push
xchg
lret
push
xchg
jne
repnz
mov
pop
sbb
dec
cmp
jl
pop
sub
cli
js
jg
adc
jno
mov
or
lea
outsl
or
adc
mov
pop
inc
popa
push
xchg
rol
pop
movsl
cli
push
adc
xlat
stos
ror
push
pop
nopl
inc
or
movb
mov
mov
pop
lea
in
mov
xchg
mov
repnz
dec
aam
xchg
test
cmpl
inc
add
or
inc
movsl
mov
pop
in
test
nop
popf
push
addr16
or
dec
or
je
orl
mov
and
es
lock
shll
add
or
push
or
dec
and
mov
and
adc
dec
inc
pop
mov
xor
mov
dec
cmp
adc
pusha
cmp
inc
or
and
or
or
mov
out
dec
bound
mov
push
push
xor
inc
repnz
jnp
stos
or
sbb
xlat
imul
or
orl
or
dec
xor
push
adc
adc
out
pop
mov
frstor
lahf
mov
and
leave
and
inc
adc
or
mov
dec
rolb
or
decb
inc
fsubs
les
dec
sarl
negl
xchg
dec
mov
dec
adc
jbe
push
sahf
sbb
sub
addr16
and
or
mov
or
push
xchg
fists
push
inc
cli
or
or
xor
mov
and
lea
fisubrs
and
and
je
push
orl
shlb
xor
or
data16
mov
shll
or
dec
xchg
lods
jecxz
cli
and
sub
nop
adc
or
test
jbe
mov
test
jle
jmp
xor
movsl
xor
lcall
push
and
das
jns
dec
xor
pop
leave
or
pusha
in
pushl
cwtl
mov
leave
cmp
test
adc
xor
sahf
sub
aas
add
mov
jo
mov
push
mov
jae
movsb
ss
push
add
stc
adc
and
cltd
cmp
or
cmp
pop
jg
xchg
and
sub
dec
icebp
cmc
movsb
or
xor
lea
adc
je
mov
or
jbe
into
cmc
and
test
push
movsb
dec
add
mov
jno
cmp
cmpsl
lret
xchg
fwait
adc
xchg
inc
inc
or
and
sub
adc
or
cltd
push
lods
xor
sub
pusha
pop
rclb
push
pop
pop
int
mov
xchg
push
outsb
sub
jmp
xor
test
inc
push
adc
and
adc
lods
jecxz
and
les
jmp
in
rcl
ret
mov
cld
lret
ds
lea
repz
call
push
lds
xor
adc
cmp
rcrl
and
or
or
cmpsl
or
push
inc
mov
ljmp
add
and
lret
or
sbb
push
push
mov
or
daa
adc
pop
rorb
loopne
cwtl
xchg
jnp
pushf
and
inc
push
sub
and
and
mov
std
jnp
cmpsl
dec
je
test
mov
or
leave
add
sub
sub
and
xchg
sub
xchg
adc
test
xor
xchg
sbb
andb
jmp
pop
and
inc
les
mov
adc
sub
jne
adc
inc
pop
sub
or
daa
sub
adc
je
call
stos
mov
and
mov
mov
add
jns
insb
push
dec
or
bound
sbb
pop
enter
inc
mov
or
xor
and
dec
pop
imul
pop
fs
cltd
dec
xor
jae
push
inc
push
pop
leave
or
and
aas
dec
nop
sbb
push
enter
push
inc
sti
add
sbb
xor
inc
and
add
adc
pop
jl
call
sub
fsts
sti
or
nop
fs
xor
dec
sub
sbb
jae
sub
sbbb
mov
dec
in
and
jns
not
mov
cmp
inc
pop
in
and
fisttpl
adc
adc
mov
adc
ss
shl
stc
shrb
push
lahf
xor
ja
pop
mov
jnp
xor
and
and
sub
lret
pop
cmp
dec
or
add
sbb
mov
sub
jp
aam
outsb
scas
push
repnz
jno
ljmp
rcl
mov
add
inc
adc
in
fadds
xor
inc
fsubs
mov
pop
movsb
xchg
imul
add
adc
sub
or
cld
xor
xor
sub
sbb
mov
dec
sbb
mov
push
in
inc
hlt
andb
or
jne
mov
push
and
call
mov
push
mov
add
dec
enter
es
and
xor
inc
movsb
dec
scas
daa
out
jne
xlat
push
adc
lcall
sbbb
movsb
push
lea
insl
orb
pop
dec
add
push
movsl
or
je
fiadds
and
call
fists
sbb
add
push
mov
je
sub
cmp
or
sbb
popa
daa
jl
loop
sbb
je
clc
mov
add
pop
into
adc
mov
cli
out
or
jge
jmp
movl
and
inc
sub
sbb
and
movsl
inc
lcall
pop
add
add
mov
or
add
arpl
mov
adc
roll
int3
add
add
addr16
mov
add
loop
pushw
sbb
xor
or
push
mov
jae
xlat
push
add
add
mov
push
pop
aas
cmc
call
or
or
or
mov
or
ret
jg
and
es
mov
iret
int
dec
das
mov
adc
jno
jno
jg
lock
mov
adc
movl
cmp
jg
subb
cltd
stos
cmpsb
push
mov
pop
gs
adc
adc
or
fnstcw
aas
clc
add
sar
sub
inc
inc
enter
into
insl
out
jmp
stos
adc
mov
fldt
es
add
cld
movsl
and
out
rorb
xlat
sub
inc
shll
inc
inc
mov
call
adc
fdivs
call
add
popa
push
pop
je
add
and
sahf
ficoms
or
movsb
subl
inc
pop
ljmp
jecxz
fstpl
mov
mov
push
mov
arpl
mov
xchg
loopne
movl
leave
adc
jge
jl
hlt
inc
outsl
sub
mov
xor
dec
cmp
push
dec
out
je
sti
test
jge
mov
test
mov
out
lods
xchg
mov
imul
mov
outsl
xchg
outsl
shlb
cmc
mov
lds
dec
test
lahf
jns
xchg
push
adc
ljmp
jo
shl
xor
out
add
cmp
xchg
inc
out
adc
add
and
jns
push
dec
xor
int3
aas
cmp
dec
sarl
push
dec
mov
mov
push
call
jmp
fnstsw
or
pop
jne
enter
jo
and
add
sbb
mov
push
dec
in
xlat
ljmp
inc
clc
sub
imul
mov
call
enter
shll
insl
bound
mov
jecxz
jae
jl
cmp
sbbb
into
xor
iret
imul
add
lea
lods
repz
pop
cld
int3
mov
lock
inc
shl
fstps
jns
pop
adc
and
mov
xchg
loopne
and
jb
adc
leave
mov
sub
jl
jne
xchg
xchg
adc
dec
add
mov
call
push
jae
inc
ja
leave
push
mov
or
loopne
or
push
jo
jmp
jo
add
push
xchg
xchg
xor
fildll
mov
or
fwait
dec
pop
jne
cmp
addl
arpl
ret
push
sbb
dec
data16
fadds
mov
test
pop
and
fmuls
and
testb
jnp,pt
and
cmp
sub
cmp
loope
pop
mov
xor
or
push
xlat
in
imul
push
movsl
jb
and
or
repz
imul
test
popa
movl
sbb
sahf
mov
jmp
aas
or
sbb
outsb
adc
stos
mov
inc
mov
or
clc
cmp
test
orb
jne
adc
and
mov
xor
adc
adc
ret
sbb
lods
push
lret
sarb
mov
ja
push
stos
jbe
nop
mov
mov
xchg
popa
mov
push
out
mov
adc
mov
mov
int3
jle
test
or
cmp
add
scas
lahf
nop
mov
inc
mov
sti
bound
lea
xchg
sub
push
fwait
orps
mov
jecxz
dec
adc
cmp
adc
fsub
cli
xchg
pop
sbb
and
sbb
add
mov
push
mov
rol
push
test
and
lea
in
out
loop
xchg
ret
ja
scas
xchg
mov
rcrb
mov
add
mov
rol
adc
leave
lods
cmp
fsubrp
dec
shr
cld
inc
std
push
mov
daa
push
add
mov
and
xchg
call
or
dec
push
dec
sbb
jp
test
push
addl
iret
mov
pop
jmp
and
xor
rolb
stos
inc
mov
xchg
adcb
push
addr16
sub
lock
adc
adc
mov
adc
sub
stos
dec
stc
jb
xor
and
dec
cmp
inc
insl
push
mov
dec
or
push
test
cmc
or
xlat
clc
cmp
pop
adc
or
xor
adc
fs
and
add
push
lds
cmp
inc
jp
insb
sbb
test
sub
jecxz
lret
push
cld
sub
mov
test
xchg
lock
lret
mov
inc
enter
pusha
data16
call
mov
mov
inc
push
push
jne
out
into
nop
sbb
pop
jmp
or
cwtl
popa
jge
push
ja
cvtps2pd
insb
je
leave
repnz
mov
push
or
mov
or
rclb
or
inc
add
jmp
ljmp
or
mov
cmp
add
xchg
sub
dec
int3
sbb
pop
cmpsl
mov
imul
add
call
add
dec
jb
mov
inc
and
inc
cmp
mov
call
or
insb
fsubl
jo
jmp
int
push
pushf
adc
or
movsl
sub
addr16
andw
and
inc
lret
fbld
or
das
adc
dec
hlt
mov
or
cmp
inc
or
mov
lock
sbb
call
div
sbb
aaa
enter
jns
stc
add
cmp
inc
mov
push
adc
and
adc
mov
aas
pop
dec
imul
mov
push
xchg
cld
mov
inc
push
sbb
out
push
inc
shrb
lret
clc
pop
loop
test
cli
add
js
dec
and
pop
pop
lcall
and
mov
clc
out
adc
and
xchg
pop
test
pop
xchg
mov
loopne
sbb
pop
jae
cltd
jle
inc
jge
mov
aas
fwait
dec
mov
clc
xchg
inc
or
dec
or
lret
adc
xchg
shlb
leave
pop
lds
je
or
sbb
mov
inc
xchg
cld
push
cmp
sbb
and
inc
pop
nop
jae
sbb
and
push
bound
stos
testb
xlat
pushf
pop
rorb
xchg
inc
inc
dec
and
mov
movb
and
dec
sub
insl
xchg
rorl
aam
cli
shr
sub
or
cli
addb
sbb
cltd
std
inc
aas
sbb
sar
popa
and
sbbb
jg
inc
jno
inc
push
xchg
mov
inc
mov
rclb
rclb
add
fcoms
and
popf
scas
movsb
or
mov
xchg
jle
cltd
and
mov
loope
pushf
push
cmp
cli
or
adc
clc
xchg
pop
xchg
addr16
jp
adc
jns
lea
cltd
xchg
in
lock
adc
lret
into
push
call
xor
in
jnp
add
and
leave
push
ficomps
call
mov
movsl
push
push
sbb
add
std
cmp
jo
jb
pushf
adc
inc
sbb
push
mov
adc
sbb
lods
cli
out
and
dec
push
push
sarb
push
outsb
inc
adc
jg
movsb
or
push
dec
sub
mov
push
and
in
sbb
xchg
hlt
add
mulb
in
sub
adc
xchg
lods
pop
ds
push
ret
inc
push
xor
sub
xchg
sahf
loop
cmp
jns
jge
pop
enter
jmp
xchg
sub
enter
mov
adc
shll
cmp
sbb
dec
cmpsb
jmp
lods
nop
mov
lret
sub
cmc
repz
stos
dec
push
adc
push
xchg
test
add
and
push
je
mov
jne
or
push
adc
and
aas
or
jnp
sbb
sub
push
sub
jmp
mov
notb
lret
adc
hlt
adc
xor
inc
test
or
and
push
mov
cld
leave
add
adc
arpl
dec
or
mov
inc
ds
xor
inc
cmovge
jne
cmc
mov
sbb
pushf
mov
inc
dec
mov
lock
jmp
and
dec
pop
jge
fwait
cmpb
mov
stos
xchg
push
sub
nop
or
sbb
cmc
scas
dec
dec
mov
decl
dec
jne
movsb
lods
cwtl
jg
pop
pop
jnp
cwtl
lcall
es
jp
jp
ds
add
sbb
in
pop
lcall
mov
inc
xchg
sub
mov
cmpxchg
inc
bound
testl
andb
and
movsb
cli
cmpsb
mov
sarl
xchg
push
jnp
xor
cld
push
mov
loopne
push
sbb
int3
dec
imulb
or
pop
inc
and
aas
sahf
repz
clc
rclb
loop
mov
ret
sar
ret
inc
or
hlt
test
xchg
fwait
into
dec
xor
add
sub
mov
xor
out
std
test
push
lea
and
mov
mov
push
cmp
inc
mov
sub
js
push
fists
sub
or
xor
and
dec
rclb
mov
haddpd
xchg
stos
or
stos
or
je
mov
cmp
jl
sub
aas
repnz
xchg
int3
js
mov
int3
adc
pop
in
enter
test
dec
cld
xchg
scas
pop
fisubl
gs
mov
mov
inc
add
insb
adc
rorb
dec
cmc
arpl
stos
push
or
or
or
xchg
mov
cmp
les
and
int3
movb
testb
or
fsubrp
push
int
adc
aam
or
bound
repnz
cwtl
xchg
pop
dec
and
xlat
jp
mov
in
lret
mov
jb
jmp
pop
and
or
inc
xchg
clc
pop
mov
ffree
cmpsl
sub
lods
push
xchg
das
cli
dec
js
adc
cmp
pop
pop
and
sbb
ds
xchg
or
or
xor
mov
scas
or
movsl
wrmsr
or
pop
lret
add
jmp
lea
out
add
scas
fists
dec
sub
sbb
push
xchg
push
cwtl
in
clc
inc
std
push
and
push
add
mov
fisubl
je
mov
add
call
push
cmp
adcl
cmpsl
cltd
movsl
pushf
xor
cmpsl
test
sbb
xchg
addb
hlt
inc
sbb
dec
and
jg
lret
test
sub
cmp
clc
sbb
mov
je
dec
jmp
xor
mov
add
mov
adc
mov
dec
xor
rcrb
pusha
and
pop
xchg
aas
frstor
ja
ret
enter
adc
mov
jo
sub
shlb
jle
fwait
xchg
les
fwait
pop
pop
sbb
ljmp
mov
xor
dec
adc
pushf
loop
cmp
fnstenv
and
and
rorb
or
lock
lcall
lock
jno
sub
inc
pop
pop
fldt
mov
pop
shrb
and
or
orb
and
in
fwait
jecxz
in
outsb
ror
xor
push
sub
mov
and
insb
sahf
xchg
push
xchg
xor
shl
inc
ret
dec
add
or
pop
pop
mov
jbe
pop
sbb
pop
mov
bound
adc
insb
push
jge
rolb
iret
or
pop
int3
aad
sbb
je
mov
les
or
fwait
arpl
les
rclb
fsubl
dec
les
lods
add
imulb
pop
cmp
dec
add
xlat
pop
and
cmp
push
scas
jmp
sub
pop
daa
movsl
cmpb
gs
add
in
pop
mov
and
sbb
push
xchg
push
or
andl
loop
adc
jbe
sbb
call
push
inc
ja
cmp
sahf
fs
xchg
inc
xchg
cs
outsb
aad
xchg
fcomps
mov
repnz
and
add
ficoml
dec
popa
or
lret
sub
adc
je
mov
ds
cltd
add
ret
in
aaa
push
pop
ret
adc
or
into
mov
inc
push
pop
imul
mov
push
xchg
jp
pop
xor
jmp
insb
in
imul
add
fwait
xchg
dec
push
sub
push
test
inc
cld
add
lods
fs
loop
rorb
loopne
sbb
lret
push
out
jg
xchg
loopne
gs
cmp
out
push
gs
jne
mov
rcll
pop
test
cmpsb
sti
cmp
sub
push
push
xor
loopne
imul
aam
out
and
decb
jmp
cmp
je
into
orl
dec
fdivs
cmp
xor
dec
sub
lock
push
and
jmp
fnstsw
xchg
adc
sub
add
jbe
cmp
cmp
lods
mov
je
andb
cmpsl
push
jg
push
pop
ja
iret
jp
jns
fiadds
jb
sbb
enter
jbe
in
add
int3
sbb
jne
inc
mov
and
dec
add
in
mov
lock
int3
adcl
lock
fdivl
cli
sub
jmp
cmp
loopne
fisttpl
fmuls
lds
or
add
add
add
add
xchg
out
or
jae
movsb
test
or
out
jnp
sbb
data16
xor
and
in
add
mov
or
push
cmp
push
mull
pop
or
pop
mov
lock
pop
js
fsubrl
clc
jmp
push
test
loop
mov
pop
call
in
adc
inc
jns
decl
mov
xchg
lea
cs
lret
adc
adc
adc
jmp
test
leave
mov
insl
nop
dec
aad
pop
adc
std
adc
lret
mov
icebp
rclb
or
pop
push
aas
inc
sub
shlb
sub
xor
inc
jl
cmp
mov
push
gs
add
adc
add
aad
xchg
in
decl
mov
jle
pop
adc
movl
cmp
clc
add
push
sub
rcrb
leave
push
adc
int
lock
std
dec
push
sbb
addr16
or
jecxz
and
notb
call
call
dec
or
sbb
xchg
sbb
xchg
pop
call
test
dec
sub
jg
xor
mov
and
mov
mov
lods
xchg
jbe
add
call
jbe
mov
jbe
inc
and
and
cmpsb
cmp
sbb
add
cltd
jae
pop
outsb
sbb
inc
jne
cld
or
and
add
fucomip
ret
lea
test
cmp
fbstp
jo
mov
clc
in
ret
or
pushf
xchg
icebp
in
adc
dec
mov
xchg
dec
sahf
jg
cwtl
jnp
cmp
mov
xor
sbb
sti
mov
adc
lea
push
and
or
aam
arpl
lret
sub
mov
add
or
sbb
imul
xchg
mov
push
push
xchg
rcrl
sub
in
mov
addr16
pop
cmp
ret
pop
fwait
scas
daa
sbb
push
and
jne
or
adc
mov
xor
jbe
cmpsl
cld
push
mov
mov
or
add
jbe
xchg
mov
int3
lea
or
push
add
inc
leave
andb
xchg
mov
mov
inc
add
pop
mov
in
xchg
test
jmp
push
rolb
push
rcl
cmc
pushf
enter
pop
rcl
xor
pop
jb
push
data16
inc
lods
into
fmul
mov
cmp
das
cmpsl
sub
stos
loopne
sub
mov
or
aad
add
add
cli
add
mov
or
dec
mov
ds
inc
push
in
das
loop
and
iret
dec
xchg
xchg
enter
xchg
clc
loopne
jmp
or
movsb
jns
inc
pop
jns
fwait
pusha
inc
mov
int3
add
mov
add
and
sbb
add
inc
sbb
fs
mov
or
ds
jmp
bound
add
adc
ss
add
xchg
cli
bsr
add
mov
dec
push
sub
add
adcb
cmp
mov
clc
test
mov
fisubrs
adc
jl
iret
ljmp
nop
xor
into
cmp
push
adc
xchg
adc
rclb
jo
scas
sub
mov
frndint
testl
add
inc
add
push
dec
push
pop
dec
mull
or
and
pop
mov
andb
cmc
out
inc
adc
jo
mov
in
jo
add
fsubrl
std
insb
les
sbb
ljmp
fs
sub
inc
loopne
push
sbb
or
mov
clc
das
mov
mov
loope
sbb
and
adc
fsubl
decb
outsb
insb
sbb
mov
adc
mov
les
dec
mov
bound
xor
xlat
sub
mov
sar
dec
test
bound
jmp
mov
enter
sbb
lock
and
or
mov
add
sbb
outsl
sbb
cs
shrb
fcoms
loope
or
mov
or
xchg
and
jp
xchg
cwtl
jp
or
jnp
fmull
inc
or
call
dec
and
xor
xchg
push
jecxz
sub
adc
jb
adc
cmc
pop
push
mov
rep
not
xchg
push
xchg
clc
mov
adc
push
lds
popf
stc
jg
lahf
xchg
out
cmpl
into
leave
jo
mov
mov
nop
loop
adc
push
repnz
adc
cwtl
mov
rcrl
mov
dec
adc
add
movsb
xchg
inc
lea
test
loope
or
and
insl
inc
adc
rcrl
and
or
imul
mov
and
mov
fnstenv
fninit
jb
cmove
lahf
sar
cld
sub
cmp
stos
jge
or
jl
cmovns
inc
repz
dec
adc
add
and
or
loope
xchg
mov
and
sub
or
dec
mov
jmp
inc
or
add
lret
xor
inc
loop
fwait
jae
and
les
bound
sub
mov
cmc
xor
xor
mov
dec
push
loope
mov
hlt
mov
adc
and
inc
add
adc
xchg
inc
jbe
sbb
cltd
mov
xor
loop
cmp
cmpsl
lahf
scas
je
xchg
push
add
push
adc
arpl
add
roll
shrb
fs
inc
call
lea
mov
jge
movsl
rclb
and
and
xchg
divb
cmp
add
aad
xchg
push
outsl
call
shr
fwait
adc
adc
sub
ljmp
and
insb
popf
add
ja
push
gs
out
push
sti
mov
and
repz
stos
sub
sbb
xchg
add
or
scas
pop
pop
mov
or
or
sbb
and
or
aas
jae
sub
or
push
out
inc
inc
inc
and
sub
mov
cli
pop
sbb
or
cs
jge
shll
pop
xchg
mov
cmp
notl
pop
jmp
or
repz
sub
sbb
mov
enter
test
cld
dec
imul
xor
gs
sbb
xchg
and
ret
subl
and
adc
decb
jg
adc
enter
xor
rcr
dec
dec
adc
rolb
adc
movsl
test
mov
fsubr
or
add
loopne
fcoms
mov
jo
jmp
shlb
adc
rolb
jmp
movsl
inc
les
enter
push
int3
orl
mov
ds
aam
shrb
addb
inc
les
orb
jno
or
xchg
and
dec
dec
sub
dec
call
fsts
inc
test
add
jne
les
push
add
mov
repnz
bound
lock
pop
inc
push
xchg
call
into
clc
test
inc
lock
push
jmp
or
add
mov
out
push
fidivrs
adc
test
mov
shl
sbb
push
adc
jmp
cli
sub
mov
add
mov
mov
repz
les
dec
lock
mov
xchg
pop
add
or
in
hlt
sbb
push
loopne
xchg
test
pop
dec
dec
fs
and
or
jle
mov
add
jbe
mov
dec
jmp
and
adc
jle
push
add
mov
mov
shr
ja
stos
jne
adc
jno
sbb
and
pop
and
adc
lahf
dec
adc
negb
cmpsb
rorb
enter
dec
lret
inc
adc
adc
test
fs
mov
add
test
xor
sbb
and
cmpxchg
and
mov
aam
sub
push
and
jbe
add
jmp
call
cmpsl
rcrb
rorb
mov
in
nop
call
cwtl
adc
js
mov
adc
dec
aam
dec
mov
and
mov
test
stos
jne
lock
mov
inc
lret
xchg
add
add
add
sub
cmc
addr16
dec
push
xlat
adc
push
icebp
loopne
xchg
incb
divl
xchg
push
sub
addb
jg
dec
mov
hlt
fnstenv
inc
push
jno
lock
out
sub
cld
ficomps
ss
xchg
xlat
rorb
mov
das
cltd
cmp
sub
cld
cmp
pushf
pop
out
das
mov
adc
and
je
insl
or
cmpsb
popa
add
sbb
shl
push
lcall
mov
or
jns
xchg
popa
push
mov
pop
add
dec
movsl
lods
xchg
clc
sub
mov
nop
clc
mov
pop
fs
sub
push
inc
dec
je
add
ficoml
rclb
fstpl
icebp
je
push
add
ficoml
dec
mov
rclb
aad
mov
mov
mov
jg
in
cmpsl
cwtl
into
lock
push
frstor
xor
mov
xchg
in
mov
dec
cmp
into
or
cld
loop
call
adc
add
jmp
xor
call
mov
or
jp
or
in
ja
push
sub
lahf
dec
std
ret
push
jns
mov
cs
fisubrl
mov
movsb
or
xor
sarb
mov
push
or
push
push
shl
jb
and
fistl
and
lods
pusha
mov
adc
and
ja
not
es
push
inc
adc
inc
inc
or
sub
or
fldt
into
push
fwait
sub
adc
and
pop
sub
inc
xor
int3
mov
test
mov
cmp
out
add
fdivp
fstp
xchg
inc
and
push
fldpi
mov
jns
ret
addb
out
sbb
into
pop
das
pushl
inc
xchg
sub
cmp
popa
inc
dec
inc
pop
mov
xchg
push
jmp
sbb
jne
int
sahf
push
insl
jb
lock
mov
daa
push
cmp
jns
push
cli
mov
inc
push
test
movsl
lods
cmp
pop
sub
xor
lds
push
xlat
inc
xchg
add
mov
xor
in
loopne
andb
je
imul
dec
out
jno
push
pop
sub
movsl
cltd
shlb
pop
sbb
push
sub
jp
loop
mov
gs
int
loopne
xchg
fimuls
ss
mov
test
push
xlat
es
lahf
stc
imul
dec
leave
sub
lcall
jg
int
shll
mov
jmp
es
adc
xchg
push
xchg
test
mov
enter
daa
jne
cli
inc
cmc
fstps
ja
mov
cmp
stc
xor
scas
adc
jmp
push
lret
andl
lods
test
xorl
cwtl
xlat
mov
dec
out
clc
movsl
mov
rclb
pop
cmp
mov
daa
and
aad
mov
addr16
xor
adc
outsb
sbb
cmpsl
test
call
pop
stos
and
lcall
mov
xchg
je
dec
rclb
jl
call
push
jmp
sub
jg
sub
add
xor
outsb
enter
ret
push
inc
imul
or
fcoms
dec
loopne
sbb
mov
test
or
mov
lahf
dec
ror
cmp
pop
push
icebp
pop
sbb
jne
shlb
push
xchg
bound
es
xor
aad
xor
ds
jne
add
push
dec
sbb
das
or
pop
dec
sub
pushf
adc
rolb
out
les
cltd
pop
and
test
outsb
and
cmc
rcl
xchg
lods
clc
adc
inc
mov
notl
sahf
or
add
js
les
std
repnz
test
jnp
mov
jo
pop
lock
addr16
sub
xchg
shrl
rol
dec
mov
fwait
call
sub
cmpsb
cmp
in
stos
in
ret
push
outsl
adc
cli
and
or
mov
jp
push
aaa
cwtl
mov
clc
pop
popf
push
dec
jae
mov
data16
cld
dec
or
and
int
jle
sbb
clc
popl
push
mov
push
das
jmp
push
push
push
popa
xchg
mov
xchg
inc
xlat
jnp
xor
mov
addr16
jns
jge
pop
or
adc
es
inc
inc
adc
fdivrs
dec
mov
jmp
lods
adc
inc
adc
shrl
or
push
cwtl
fisttps
leave
mov
sub
cmpsb
mov
enter
sbb
xchg
fs
int3
cwtl
stc
movsw
shlb
mov
push
cmp
fs
sub
gs
int3
setl
mov
scas
adc
in
out
push
jl
in
inc
testb
inc
repnz
cld
scas
inc
adc
cmp
mov
jecxz
push
cs
xlat
jae
sub
sbb
push
loop
clc
pop
shr
sub
ret
jne
aam
pop
jae
or
adc
xor
inc
data16
cmp
and
jge
jmp
pop
in
das
in
aam
mov
std
mov
sub
or
test
ljmp
xchg
mov
xlat
or
mov
cmp
add
jne
adc
inc
or
loop,pn
in
das
rclb
jg
sbb
in
and
push
push
mov
call
mov
pop
xor
or
jg
cmc
cmpl
jne
dec
cltd
out
loop
add
inc
cmpsl
pop
sbb
inc
imul
and
gs
data16
lods
bound
adc
mov
sbb
mov
and
inc
xchg
stos
mov
xchg
icebp
mov
stos
in
les
jl
xchg
cld
lret
ja
addl
fadd
ds
call
inc
jne
cmpl
pushf
sbb
and
shl
test
mov
fildl
js
das
lods
push
sbb
add
sbb
pushf
push
test
or
inc
jo
adc
sbb
and
cltd
adc
xchg
inc
les
pop
lods
jb
jns
jle
adc
call
jmp
scas
mov
gs
cmp
pop
add
or
dec
xchg
cwtl
lock
imul
in
imul
enter
adc
aaa
mov
pop
jmp
push
push
rclb
lret
add
pminsw
inc
sbb
push
add
outsl
mov
pop
jle
xor
pop
scas
movsb
popa
in
and
popf
movsb
push
adc
movsb
cmp
or
xchg
mov
pusha
sbb
test
call
inc
jbe
sbb
movsb
lock
push
jbe
fs
add
mov
leave
mov
lock
push
or
addb
sub
ds
or
stos
xor
rorb
popf
cmp
inc
adc
cmp
mov
jmp
inc
mov
pop
dec
mov
or
or
cmpsl
sahf
ficoms
cmc
mov
adc
sbb
xor
xlat
leave
lds
ror
mov
out
fnstsw
or
mov
imul
xchg
ljmp
cmp
pop
inc
cld
iret
sahf
mov
out
bound
aas
push
and
ret
jl
xlat
add
in
scas
pop
call
in
or
add
add
xchg
inc
pop
pushf
add
clc
test
sub
adc
sarb
jns
pop
add
jmp
loop
repnz
test
fwait
cltd
in
add
jne
mov
sub
shll
and
test
push
sbb
mov
dec
mov
xchg
mov
jp
fidivrs
jae
aas
fcmove
in
imul
adc
and
aas
lret
mov
add
sarb
stc
in
pop
les
lock
das
out
sahf
adc
je
jle
xchg
dec
xor
mov
shrl
and
xchg
pop
dec
aad
xchg
rcll
enter
out
add
subb
push
loope
stos
fs
xchg
push
add
call
ret
mov
inc
sbb
jns
adc
mov
adc
xorb
mov
sbb
xchg
and
in
push
dec
cli
push
dec
lret
jmp
cli
xchg
aad
lahf
cmp
xchg
out
mov
shll
and
add
sahf
pop
cld
ss
cmp
sub
lds
scas
testl
jmp
int3
imulb
add
dec
in
xor
subl
add
ret
push
inc
lock
dec
or
xor
scas
sub
es
sub
or
pop
das
mov
nop
adc
jl
cmpsb
lock
das
or
addr16
call
inc
insb
ss
xchg
add
repz
push
or
into
inc
or
fidivs
pop
cmp
adc
aam
popa
xchg
xor
cmc
test
push
cmpsl
lock
in
sti
adc
outsl
lea
fdivr
cld
call
or
xchg
sub
sub
push
dec
out
mov
pusha
or
je
call
sbb
add
cs
dec
mov
xor
dec
pusha
sbb
ret
inc
mov
ds
lods
xor
hlt
movsl
mov
dec
lcall
mov
or
sub
pop
cmpsb
sub
jle
test
jb
fisubrl
pop
mov
imul
call
int
sub
stos
adc
out
or
in
add
push
bound
adc
mov
pop
jne
adc
sub
add
js
fs
test
jmp
adc
adc
int
sub
and
fnsave
cmpsb
push
arpl
or
sbb
rclb
and
lahf
pop
ficompl
nop
sbb
jp
push
or
enter
ds
xchg
in
jp
adc
sub
mov
lcall
jl
sub
sub
adc
mov
dec
test
mov
jno
test
or
popa
int3
pop
or
jae
push
jmp
pusha
cmc
mov
icebp
and
jmp
push
add
adc
sub
pushf
fsubs
jno
or
test
sub
dec
push
pushf
gs
mov
les
xchg
repnz
dec
lcall
jmp
sub
popf
sbb
pop
adc
mov
adc
or
mov
cmp
daa
xlat
lcall
mov
adc
and
mov
ljmp
push
push
fists
mov
jne
dec
mov
cmp
cs
cmp
rorb
sub
and
mov
dec
mov
pop
push
pop
leave
ret
cmp
enter
jmp
inc
pusha
subl
pushf
and
jb
adc
scas
inc
pop
loope
push
into
fstpl
adc
scas
cmpsl
loopne
call
pop
or
push
jecxz
add
adc
mov
or
mov
scas
shrl
lods
inc
loope
int3
push
lods
shrb
orb
addr16
iret
add
push
jle
js
cmp
mov
or
fadds
mov
lcall
sub
add
mov
jb
imul
mov
adc
xchg
mov
jmp
push
stos
out
imul
cmp
lret
loope
push
push
push
inc
mov
xchg
pop
adc
and
subl
inc
sub
outsb
mov
push
add
sbb
push
and
sbb
inc
jns
jne
push
xchg
inc
sbb
adc
sub
or
cmpsl
push
ret
out
outsb
dec
or
add
inc
pop
ja
push
mov
pop
jnp
or
push
jae
shlb
inc
orb
fnclex
mov
cmp
subb
ret
shll
insl
sbb
mov
shll
push
push
std
jnp
or
dec
push
mov
movsb
outsb
xchg
fdivs
push
push
xor
inc
sbb
push
jle
cmp
fisttps
and
loop
roll
add
dec
or
fistps
das
mov
mov
jne
cmp
or
fisubs
push
lahf
fsubs
or
notl
or
adc
in
lea
idiv
dec
leave
jle
icebp
mov
mov
ftst
imul
mov
cmc
pop
pop
enter
mov
pop
fisttpll
pop
inc
lock
loope
lock
or
notb
push
int3
mov
pop
xchg
sti
and
adc
out
or
or
out
sbbb
mov
ss
es
inc
repnz
inc
xchg
push
gs
add
fcoms
shll
call
cmpsb
lock
lea
xlat
pop
test
les
xor
cwtl
xchg
ret
push
test
mov
lea
call
dec
stc
loope
repnz
jno
enter
gs
out
mov
xor
xchg
mov
nop
shrb
cmp
fadds
and
out
call
push
movsb
and
ss
mov
out
popf
cmpsl
cmpsb
push
pop
cmp
orb
pop
ss
inc
pop
push
sarb
popa
pop
jg
sbb
cwtl
adc
add
mov
mov
lahf
or
xchg
enter
aaa
mov
xor
ret
sbb
aaa
adc
inc
push
movsb
popa
or
and
enter
inc
or
xchg
xor
cmp
fidivl
pop
out
inc
or
push
xchg
jo
dec
addr16
les
lret
call
xchg
mov
pop
sub
jle
xor
xor
push
add
shrb
and
and
out
leave
push
repnz
pusha
xchg
jo
dec
adc
test
mov
or
sub
push
push
push
pop
aas
jb
cs
push
mov
lret
or
outsl
out
mov
jmp
fdivl
lahf
pop
dec
movsb
inc
inc
push
mov
arpl
orb
inc
mov
and
data16
adc
test
cmc
inc
dec
jo
mov
js
adc
adc
cld
test
cmp
test
add
lds
scas
mov
mov
gs
mov
and
call
cmp
push
arpl
or
in
je
and
test
jo
adc
xor
jp
repnz
enter
jo
adc
test
fwait
inc
jmp
adc
and
push
jl
jb
mov
add
mov
dec
testb
inc
mov
or
nop
popf
push
loopne
inc
mov
cld
loop
shrb
cmp
add
out
jl
cltd
popf
add
mov
jmp
sub
mov
cld
and
bound
add
popa
jne,pn
cmp
xchg
ljmp
or
jo
adc
insl
stc
push
push
mov
pop
imul
lock
and
movsl
hlt
push
mov
and
mov
je
jp
cmp
mov
mov
push
sub
and
je
pop
sti
pop
movsl
cmpsb
inc
adc
popf
sub
xchg
sub
mov
sbb
subl
stos
lahf
stos
sub
test
adc
push
mulb
loopne
xlat
call
stos
sub
bswap
ljmp
push
or
pop
lcall
add
sub
addr16
pop
push
stos
dec
lods
cmp
mov
call
xor
iret
mov
es
xchg
or
adc
and
cli
fcompl
fucomip
sub
dec
push
mov
dec
cli
sbbb
push
xchg
imul
cmp
aam
fsubl
loop
jb
mov
in
inc
xor
cmp
xchg
sbb
pop
push
xor
sbb
popa
push
dec
sbb
shrb
mov
mov
scas
jecxz
pop
xchg
xor
testl
clc
cli
fdivrp
test
out
jae
jb
sbb
mov
pop
jne
mov
popa
add
jmp
jae
push
and
inc
xor
bound
xor
xor
dec
test
jae
loope
jne
add
out
in
jmp
xlat
push
and
add
pop
scas
and
cmp
sbb
sbb
insl
jns
and
test
pop
mov
pop
in
in
sub
sub
mov
ljmp
push
sub
sbb
rolb
adc
cld
nop
cmp
int
mov
dec
scas
jge
xchg
push
in
jmp
lock
jo
and
je
outsl
lcall
and
mov
adc
and
je
dec
xchg
dec
and
xor
push
and
popf
adc
stos
xorl
lret
xchg
add
aas
pusha
test
sub
testl
les
pop
and
dec
dec
movsb
incl
outsl
in
ror
dec
sub
cmpsl
testb
out
inc
jl
dec
sti
out
pop
mov
or
sub
mov
cmp
ljmp
jae
test
scas
fwait
push
lods
mov
sub
cmp
mov
pop
movsb
cmp
adc
out
xor
xchg
and
das
fmul
test
mov
push
or
xchg
and
test
adc
mov
jmp
mov
test
idivl
je
jnp
add
sbb
sub
sarb
push
dec
jge
rep
adc
jge
pop
add
mov
cmp
pop
adc
push
and
xchg
pop
dec
test
mov
pop
dec
stos
inc
test
orb
stos
cltd
push
pushw
pop
mov
or
mov
xchg
push
jg
xor
jecxz
lea
mov
jae
and
mov
lds
stos
xor
test
pop
xchg
fdiv
xor
cmp
les
int
jno
mov
aad
sbb
out
or
or
push
or
jmp
cltd
sub
adc
fdivrl
cmc
js
lds
std
pop
call
adc
jns
lret
jne
inc
jbe
or
push
sub
or
push
pushf
and
movsb
scas
xchg
dec
xchg
xchg
mov
das
and
cld
adc
lods
cli
pop
mov
std
xchg
xchg
ljmp
jnp
xlat
fldcw
shrl
mov
or
iret
incb
jecxz
rcr
rcrl
sbb
dec
jno
cvtdq2ps
push
pop
fsubrl
insl
fildl
xor
fsub
jnp
xor
ss
lods
cmp
je
xchg
jg
lcall
loop
sub
mov
and
dec
fsubl
jne
jmp
stos
fistpll
adc
aam
aam
fcoml
sub
flds
and
sbb
lcall
call
imull
loopne
dec
pop
jb
adcl
jmp
dec
mov
fs
fwait
jnp
pop
movsb
add
xor
and
xchg
enter
sub
das
pop
push
sbb
mov
jl
mov
subb
and
mul
pop
mov
pop
mov
sub
adc
sub
stos
sub
lcall
and
cmpsb
mov
xor
leave
xlat
pop
shrb
xor
cmp
inc
stos
cltd
stos
sub
cmp
test
out
mov
iret
push
aas
shr
outsl
movsl
das
dec
xchg
dec
sub
jge
orb
push
sar
lret
gs
sub
test
or
scas
push
mov
mov
dec
push
movl
les
sbbl
sub
jmp
cmpl
mov
mov
repnz
pop
and
inc
pop
test
pop
xchg
dec
and
inc
enter
xor
adc
lds
lods
push
or
loopne
out
pop
insl
inc
mov
ja
ja,pn
xor
inc
in
or
mov
sub
inc
jns
sub
adc
add
je
ja
in
xor
or
push
leave
lods
out
cmp
mov
dec
sbb
jle
movsl
rol
shlb
xor
xchg
push
mov
add
xchg
aad
mov
jne
jg
mov
adc
cld
add
cmp
loope
xor
test
outsl
in
clc
xchg
or
and
popa
and
push
and
mov
pop
mov
out
in
mov
mov
ret
movsl
insb
fdiv
outsb
clc
clc
dec
cli
cmp
sub
adc
sahf
pop
stos
sub
xchg
mov
in
push
mov
lret
push
clc
or
int3
or
sti
and
adc
mov
or
aas
sub
xor
xor
add
inc
mov
cmpsb
jg
pop
xor
add
jne
pop
xchg
aad
outsb
inc
imul
adc
sub
xor
adc
dec
fstps
dec
roll
cltd
xchg
nop
daa
shrl
andnps
in
les
leave
pop
jae
sub
enter
scas
int3
test
fcmovne
xor
inc
popf
adc
cs
leave
jmp
std
or
aad
outsb
inc
cmc
pop
fildl
ja
or
cmpsl
cmp
mov
mov
pop
mov
sub
pop
clc
pop
les
adc
in
rorl
loop
push
xchg
add
mov
daa
and
mov
hlt
mov
pushf
inc
mov
mov
xor
stc
or
cmp
movsl
sub
cltd
movsl
outsl
and
mov
fimull
scas
jle
cmp
les
insl
mov
push
loope
jo
fnstsw
mov
mov
js
je
dec
push
fstpt
mov
aam
mov
pop
insb
ret
icebp
add
das
xchg
cmc
or
out
and
movups
add
mov
xchg
popa
sub
iret
leave
test
adc
mov
test
das
dec
mov
in
stos
lret
and
rcl
mov
mov
and
xchg
lret
inc
jecxz
pop
mov
popa
inc
or
inc
inc
cmp
gs
sub
and
wbinvd
jne
mov
fildll
lods
jle
mov
push
call
dec
mov
ss
sbb
push
adc
scas
iret
adc
fstpt
insb
xchg
add
mov
mov
loope
jp
test
lock
stos
and
icebp
push
lds
hlt
dec
inc
and
pushf
add
cmp
inc
imul
stos
clc
or
mov
sti
in
sbb
pop
cmp
sbb
int3
and
leave
sbb
push
inc
test
stos
or
addr16
xchg
or
scas
mov
and
and
sub
and
jmp
push
mov
ss
shlb
jmp
or
adc
sub
dec
fists
mov
popa
add
cmp
fdivr
adc
push
insb
mov
xlat
xor
cld
fs
je
mov
das
test
sahf
push
mov
inc
xchg
add
in
mov
imul
dec
adc
jmp
pushf
das
sub
in
sar
xlat
movsb
sti
and
in
push
xchg
sbbl
sub
mov
mov
lret
jne
adc
loope
ret
mov
movsb
out
call
mov
loop
dec
call
jge
sti
sub
jno
mov
pop
jne
pop
push
cmp
loope
not
lcall
arpl
es
add
sub
mov
push
sub
or
in
daa
jne
std
adc
dec
and
mov
add
sti
incb
inc
lret
or
mov
shrb
pop
adc
xor
das
xchg
and
push
sub
ret
mov
push
add
push
enter
or
movsl
inc
stc
pop
inc
adc
adc
scas
cmp
adc
nop
test
stos
and
jno
mov
outsb
cmpl
jle
cli
dec
ret
cmp
imul
fs
and
pop
inc
or
xor
pop
dec
mov
into
mov
cltd
mov
popa
add
lock
roll
mov
cmc
mov
sbb
mov
add
pop
mov
cmp
sub
sub
dec
pop
sub
add
inc
add
xchg
lret
mov
call
mov
pop
sbb
mov
sub
mov
xchg
xor
subb
xchg
daa
inc
push
nop
fcoml
xchg
mov
sbb
adc
adc
lret
jne
xor
test
das
mov
lock
mov
push
pop
pop
imul
and
sarb
pushf
cmp
jmp
xchg
aad
aam
push
loop
xchg
mov
mov
adc
pop
fists
fsubrs
sbb
adc
cmp
jbe
push
repnz
inc
mov
xor
mov
mov
cmp
lock
dec
cmpsl
sbb
dec
push
jg
mov
lods
rcll
pop
jb
repz
mov
and
sbb
mov
push
arpl
shll
cld
cmc
in
mov
and
ds
mov
pop
sarl
jg
das
leave
arpl
jae
push
stos
push
mov
mov
or
je
lea
inc
xchg
lar
fcom
adc
xor
push
push
leave
pop
mov
ret
push
push
mov
outsb
aad
cmpsb
scas
and
cltd
jb
mov
ret
ret
sti
sub
inc
out
or
lret
lret
mov
push
xchg
or
add
or
add
adc
mov
xchg
femms
ljmp
sub
xchg
add
and
or
test
int3
loop
xor
push
ja
fdivl
int3
out
sub
mov
call
int3
cltd
stc
mov
cmpsl
cltd
imul
adc
pop
mov
mov
nop
andnps
xchg
sti
inc
push
mov
xchg
or
or
jmp
mov
or
or
adc
and
scas
mov
adc
enter
or
and
shrb
stc
mov
in
or
and
mov
mov
cmc
xorl
test
sbb
jmp
imul
add
push
jl
addb
dec
push
push
addb
sub
xchg
arpl
jmp
out
cmpsl
push
jns
faddl
aas
add
cld
and
inc
or
jge
shll
inc
rclb
movsl
add
add
cmp
sub
inc
leave
in
push
cmp
xchg
fmulp
mov
inc
aad
inc
orl
or
inc
fldl
inc
inc
ret
and
and
xor
sub
and
adc
fsubrl
cmpsl
adc
push
xor
adc
scas
loop
add
xchg
mov
dec
or
mov
sub
jl
cmp
sbb
lock
ds
adc
or
xchg
cmp
lock
hlt
daa
or
gs
dec
repz
rclb
test
sbb
enter
inc
fimull
fs
call
stos
mov
jmp
imul
dec
enter
call
and
test
fiaddl
jnp
and
jmp
out
mov
push
dec
incl
sub
jl
sub
push
xchg
mov
ret
fs
jmp
jnp
cltd
fists
fs
dec
mov
push
xchg
cmc
nop
daa
movl
jne
sbb
sbb
mov
cmc
inc
and
jne
inc
cld
fisubl
nop
and
sub
ret
mov
or
add
lods
sbb
push
test
shll
or
or
or
and
pop
and
add
add
out
shrb
stos
and
pop
adc
mov
push
nop
add
mov
mov
sub
mov
rolb
pop
mov
xor
cs
movsl
pop
loopne
mov
push
add
and
mov
and
mov
mov
push
sub
xor
or
dec
adc
fcoms
ficompl
inc
dec
cmpsl
aad
and
adc
or
mov
xlat
out
cmp
inc
jge
dec
in
mov
test
jne
out
cmpsl
jbe
jbe
hlt
ret
jae
push
push
lods
aas
mov
pop
mov
pop
cmp
adc
stc
and
insl
adc
sub
cmpb
mov
pop
push
jne
dec
and
je
sbb
addb
adc
cld
cmc
mov
add
shl
xor
stos
cltd
mov
mov
mov
cs
mov
mov
mov
mov
out
sub
addr16
xchg
jno
lahf
pop
and
mov
adc
fnsave
cld
cmp
jl
cmp
ja
mov
mov
inc
stos
push
dec
inc
leave
pop
cmp
rcrl
adc
xchg
incb
xchg
jge
adc
imul
cmp
adc
aaa
in
push
dec
add
imul
fs
and
negb
hlt
sarb
sub
cmc
push
imul
testl
jge
adc
add
push
sbb
pop
cwtl
bnd
cmpsb
jb
pop
in
mov
shlb
imul
jg
out
sub
dec
mov
out
out
adc
sbb
and
dec
in
adc
mov
inc
sbb
shrb
add
dec
loope
or
pop
mov
jae
fistl
je
pop
push
mov
loope
xchg
push
movsl
scas
sub
out
mov
jno
mov
mov
mov
mov
push
orb
fs
push
add
adc
std
pop
mov
pop
pop
jg
add
sub
leave
pop
cmp
sbb
movsb
fs
inc
jmp
and
add
adc
adc
imul
or
rol
jp
test
std
inc
popa
fiaddl
jl
cmp
mov
xor
pushl
and
test
in
dec
lret
rorb
sti
adc
and
pop
mov
mov
popf
adc
xor
in
inc
cli
das
adc
daa
pop
es
pusha
sbb
repz
lods
scas
jmp
dec
cmp
or
mov
jg
mov
test
enter
mov
jp
lods
jl
fists
lahf
arpl
adc
adc
sbb
and
inc
fdivl
or
adc
je
mov
rcrb
in
mul
adc
or
enter
mov
xchg
mov
jne
push
adc
or
pop
dec
pop
jl
ds
push
adc
inc
xor
jl
adc
leave
sbb
jae
fwait
jns
and
inc
sbb
cli
cmp
aad
test
jbe
bound
jb
push
sar
and
pushf
mov
xor
xor
rcr
nop
push
cmp
mov
mov
and
in
cmp
cs
int3
sbb
adc
das
aam
cli
call
xor
test
rorb
sub
adc
cmp
outsb
iret
leave
xchg
scas
fcompl
inc
inc
mov
and
lret
mov
scas
aam
pop
rcrl
add
mov
jmp
or
aas
les
lods
fcom
mov
das
mov
inc
pop
push
jg
inc
xchg
adc
out
fs
sub
dec
xchg
mov
sti
sub
push
mov
loopne
adc
dec
or
pop
lcall
loop
sub
test
or
enter
adc
movsb
xlat
dec
dec
aam
cmp
mov
cmp
add
ds
sbb
jmp
or
jmp
push
call
out
outsl
pop
jb
mov
jmp
sub
jmp
or
ss
push
xchg
test
neg
daa
xor
daa
push
andb
test
jnp
lea
fiaddl
mov
int3
mov
stc
jg
cmpsb
or
je
xor
je
push
sub
mov
jmp
test
add
push
or
push
mov
sub
inc
adc
add
and
andl
shll
push
dec
cmp
orb
and
xchg
cmp
les
xor
or
int3
add
not
xor
and
ds
pushl
je
jmp
arpl
add
or
pop
int3
sbb
xor
decl
mov
dec
subb
add
test
in
mov
push
or
aam
out
jg
mov
and
loop
mov
push
push
fbld
loope
add
sbb
or
fcmovu
mov
out
lea
xor
sbb
pop
mov
mov
and
loop
in
sbb
stc
jns
dec
dec
add
sub
dec
lods
movb
sbb
inc
adc
and
mov
dec
lock
mov
test
daa
repnz
mov
enter
in
leave
ljmp
mov
dec
stc
sbb
stc
aas
iret
loop
leave
out
xchg
inc
add
lret
mov
push
adc
nop
ja
add
jae
cmp
dec
in
outsl
rcll
adc
and
out
inc
sahf
das
dec
ja
sub
lea
push
test
fcompl
out
dec
dec
ds
sbb
das
xchg
les
push
jnp
adc
adc
mov
pop
pop
xchg
mov
repnz
imul
cmp
sub
pop
stc
daa
jne
inc
jne
fnstenv
inc
aaa
dec
pushf
gs
sarl
xchg
mov
call
call
movsbl
and
or
xchg
fldenv
loop
lods
or
mov
push
jns
pop
jns
xchg
jb
mov
rcll
stc
inc
adc
push
mov
sub
inc
pop
mov
xchg
js
xor
movsb
bound
lret
pusha
xchg
cld
sub
push
jae
xchg
cs
or
jle
call
push
push
lods
inc
popa
out
nop
fisttpll
or
adc
jl
lea
jmp
cltd
es
cwtl
lcall
dec
out
dec
push
leave
mov
add
adc
xchg
and
push
sbb
rorl
ret
in
jecxz
je
or
add
in
sahf
pop
inc
dec
xchg
fsubs
or
mov
aad
push
inc
or
clc
xchg
mov
jmp
jo
fimuls
and
movzbw
or
lds
scas
cs
sub
mov
rorb
sub
adc
aad
stos
xchg
add
sub
stos
push
jns
or
push
xchg
lahf
dec
xchg
aaa
sbb
inc
add
inc
popf
gs
adc
mov
xchg
pop
ret
dec
jmp
jnp
push
push
fnstcw
and
add
popf
or
inc
push
shld
shl
adc
mov
scas
jg
loope
cmp
rcl
gs
cmp
xor
or
adc
out
inc
decb
adc
lds
aaa
out
mov
push
inc
dec
mov
lret
lcall
leave
xor
and
or
xchg
leave
jg
xor
dec
or
mov
dec
repnz
sub
test
xor
mov
je
test
xor
push
loopne
shrl
adc
in
cltd
jmp
dec
push
pop
adc
call
aam
dec
push
add
addr16
lcall
xor
cmc
dec
inc
popf
pop
mov
push
nop
nop
mov
das
push
pusha
pusha
adc
gs
mov
inc
or
or
mov
and
mov
decl
pop
scas
cmp
push
call
movl
mov
or
pop
inc
mov
sbb
xchg
popa
movsl
xor
test
sbb
sbbl
dec
notl
mov
cmp
xor
add
imul
jns
imul
push
ss
inc
adc
or
mov
mov
enter
sbb
and
push
pop
pop
movsb
and
inc
inc
sub
cmp
mov
dec
pop
sbb
sub
in
pushf
cltd
aas
pushf
lods
xchg
and
and
jg
push
mov
and
movb
or
xor
cwtl
lea
dec
mov
xor
bound
mov
test
xor
push
and
push
dec
hlt
repz
and
inc
pushf
xor
inc
or
push
xor
fnstenv
xchg
mov
adc
ret
insl
add
aaa
test
and
cmpsb
or
pop
cmp
lcall
mov
push
adc
adc
cmpsb
push
and
mov
mov
push
xor
add
or
mov
inc
pop
add
arpl
out
jnp
fwait
int
or
sub
jp
fldt
loop
mov
adc
rclb
xchg
mov
hlt
cmp
nop
cld
roll
xor
jl
pusha
dec
cmp
popf
cld
imul
push
cmp
cmp
cltd
sub
dec
pop
and
xor
insb
xlat
lods
mov
sarl
inc
das
fldl
inc
notl
dec
rorb
xchg
fucomip
int
adc
inc
nop
and
cmc
dec
rorl
push
push
jae
mov
mov
enter
sbb
outsl
repnz
dec
shlb
mov
sbb
and
xchg
jg
inc
push
push
outsl
dec
and
add
lret
jnp
fs
inc
sbb
out
cmpsl
push
pusha
cltd
std
mov
je
push
js
xchg
jne
xor
hlt
mov
dec
and
nop
sbb
sub
inc
mov
mov
or
subb
cmpsb
add
pop
popf
pop
dec
lahf
jmp
pop
jbe
sbb
sbb
and
mov
inc
adc
inc
enter
push
and
cmp
and
mov
sbb
ss
cmpsb
mov
inc
pop
mov
add
fidivl
push
sbb
sub
mov
add
push
cltd
repnz
int3
lds
sbb
cmc
adc
jl
ja
sbb
mov
filds
or
mov
sbb
and
popf
pop
mov
inc
cmp
movsl
test
jg
cmp
inc
and
stc
and
pop
xor
mov
and
adc
mov
push
leave
call
pop
jne
sbb
dec
jl
data16
jnp
pop
pop
negl
rcl
and
jge
jl
aas
fucomi
int3
enter
pop
fdivl
lea
pop
lcall
test
mov
xlat
cmp
pop
call
xchg
insb
std
adc
add
add
mov
mov
popf
cmp
ljmp
add
imul
add
dec
cwtl
mov
dec
mov
push
dec
xchg
loopne
add
imul
and
add
aam
shl
inc
mov
out
pushf
dec
les
sbb
pop
mov
loop
jb
mov
dec
in
mov
adc
lahf
test
mov
fbstp
cmp
mov
test
cmp
add
sbb
in
call
ds
adc
ret
mov
cmp
int3
pop
inc
shlb
adc
test
mov
inc
pop
test
push
mov
and
add
xor
pop
ljmp
adcl
or
inc
inc
jl
roll
sub
leave
or
pop
inc
mov
push
and
sub
pushf
xchg
cmc
pushf
out
mov
push
call
sub
jne
stos
adcl
inc
cmpl
pop
dec
ja
shl
ret
sti
push
dec
mov
mov
outsb
xchg
or
jo
push
pop
pushf
mul
data16
fwait
mov
cmc
in
inc
call
lock
lea
or
add
adc
sbb
jmp
imul
repnz
mov
mov
push
push
fisubs
push
sbb
out
adc
imul
ja
push
mov
add
cmp
add
frndint
test
jnp
adc
jae
sub
or
push
mov
jmp
inc
or
daa
mov
icebp
xchg
movsl
mov
data16
mov
or
cltd
mov
pushf
lods
adc
je
jmp
inc
or
das
cmpsb
jmp
addl
ret
test
ror
or
push
lret
mov
subl
and
lcall
mov
inc
filds
xor
dec
fmul
fucomp
fdivrl
test
mov
dec
inc
push
add
mov
or
inc
add
jmp
adc
cmp
subl
movsl
dec
into
aaa
xlat
sbb
sbb
mov
popa
xchg
int
sbb
sub
test
mov
sbb
and
dec
sbb
inc
and
xchg
adc
or
repz
sbb
cmp
mov
ficomps
in
inc
lods
lods
inc
adc
cltd
mov
add
mov
negl
bound
enter
fcompl
push
sub
out
movsl
ss
loop
jo
out
fwait
hlt
aad
orl
sbb
imul
jecxz
into
add
xor
subl
mov
pusha
inc
nop
in
mov
push
nop
inc
lea
bound
call
cmp
mov
mov
test
and
and
outsl
test
xchg
call
pop
sbb
clc
nop
movsb
out
sub
jns
lcall
sub
dec
loopne
mov
mov
in
in
pop
cmpsl
enter
push
int3
mov
inc
decb
push
out
adc
jmp
pop
xchg
adc
inc
xchg
mov
add
mov
push
mov
adc
fstps
testl
movl
xchg
iret
add
mov
iret
mov
repnz
lahf
inc
leave
add
cld
mov
mov
cmp
jle
jns
xchg
mov
mov
push
push
loop
shlb
or
shll
lock
pop
pop
and
inc
inc
maxps
outsl
xchg
inc
xchg
or
fwait
mov
sub
jmp
movsb
lret
add
mov
cmp
call
jmp
dec
int3
jne
xchg
lds
cli
fyl2x
cld
ret
pop
mov
sti
xchg
mov
je
jg
mov
mov
fucomp
hlt
enter
inc
or
mov
or
push
push
push
stos
jne
xchg
push
in
fwait
and
shl
sub
jg
imul
imul
dec
xchg
push
mov
int3
jg
jmp
lea
sbb
dec
add
lcall
std
out
arpl
jbe
push
push
dec
rorb
leave
je
sahf
test
push
add
push
sbb
push
jge
mov
dec
pop
pop
cwtl
or
mov
xchg
adc
imul
int3
add
cmp
insb
es
cmpsb
mov
sub
nop
adc
cld
xchg
xchg
ret
sub
dec
mov
inc
and
stos
sbb
push
or
jge
or
adc
add
push
repz
jb
xor
into
xchg
pop
adc
leave
call
inc
fnstcw
dec
test
in
in
push
sub
inc
add
ja
dec
lock
or
dec
pop
insl
orl
daa
mov
xor
daa
xchg
sti
jge
mov
int
mov
jmp
adc
les
adc
xor
in
sbb
ret
test
fwait
std
mov
adc
jnp
lods
jge
mov
xchg
dec
push
sub
xchg
push
lock
hlt
pusha
clc
push
lea
cltd
cmp
dec
xorb
push
xchg
lods
outsl
jbe
sti
fildl
or
dec
push
pop
into
and
dec
call
xchg
rorb
adcb
movsl
sbb
out
jle
jmp
cmp
xchg
jbe
inc
hlt
add
cltd
out
mov
add
inc
xor
das
les
sub
adc
outsb
clc
loopne
mov
mov
dec
icebp
pop
xchg
adc
notb
hlt
xlat
inc
sub
xor
mov
xor
jmp
imul
add
cmp
mov
fidivl
xlat
pushf
loopne
push
adc
jne
mov
lahf
fs
es
int
push
ss
repnz
jns
leave
jmp
outsl
mov
dec
sbb
adc
mov
add
fisttpll
int
sub
dec
lea
insl
fimuls
inc
adc
mov
sbb
fisttpll
aas
mov
sbbb
adc
mov
inc
mov
shrb
mov
push
lcall
ret
cmp
mov
pop
sbb
dec
lret
or
pop
or
roll
loope
adc
stc
scas
out
js
or
inc
push
arpl
enter
and
mov
cltd
mov
lods
inc
xlat
xchg
sub
call
bound
repz
pop
mov
daa
daa
scas
aad
and
ss
xchg
ja
insl
dec
push
mov
sbb
add
stos
mov
or
dec
popa
cmp
dec
sahf
push
cli
in
dec
ret
bound
ret
subl
lret
pop
nop
lahf
jle
loope
jbe
pop
int3
mov
mov
pop
loopne
cs
pop
dec
in
lods
or
rolb
inc
imul
jmp
std
dec
fsubl
rcll
dec
mov
testb
mov
mov
jne
push
data16
and
adc
std
shr
mov
push
hlt
sub
sub
mov
mov
push
ljmp
xlat
or
jae
push
and
rclb
and
out
rorb
xchg
mov
loop
xchg
jmp
ror
cmc
fldenv
dec
mov
push
shrb
call
dec
push
inc
jl
scas
jno
shlb
ret
mov
mov
nop
orl
dec
push
lods
lods
shr
test
mov
mov
lret
insb
dec
push
cmp
enter
lret
or
push
adc
fisttpll
jmp
arpl
jns
jle
mov
mov
xor
sub
sub
add
ss
mov
push
clts
add
lock
add
push
jmp
xchg
mov
add
cs
add
push
or
fisttps
popf
or
mov
mov
xor
jmp
mov
int3
test
shlb
xor
lods
mov
mov
in
sub
jb
xchg
cmp
xor
lods
and
sub
sub
testb
sub
sub
subl
xor
das
in
das
and
xor
jp
cmp
inc
cmp
enter
fsubp
jns
add
sbb
inc
decb
and
sbb
test
dec
or
shrb
push
inc
dec
and
cmp
dec
enter
pop
cmp
pusha
adc
and
mov
repnz
dec
or
enter
cmp
add
jb
pop
nop
js
cmp
imul
imul
cmpsb
and
repnz
aas
sbb
test
mov
inc
cmp
dec
test
mov
inc
cmp
or
nop
fs
jb
pop
nop
xchg
enter
das
and
pop
inc
pushf
and
nop
cmp
mov
test
repnz
sbb
sbb
test
push
and
test
mov
in
orb
mov
mov
ds
bound
mov
add
adc
xor
add
inc
sbb
das
add
and
inc
sub
inc
sbb
sub
or
xor
xor
inc
mov
sarl
add
ss
cmp
lea
inc
or
dec
or
push
add
inc
push
push
lea
pop
or
fldenv
sbb
lea
mov
xor
jo
inc
xchg
js
mov
jl
cmpsb
sbb
mov
or
ss
bound
xorb
mov
lea
xchg
or
lea
pushf
or
lea
push
xchg
lret
xor
in
inc
test
and
bound
add
sub
cpuid
pop
jns
xor
pop
or
or
inc
mov
cmp
cmp
cmp
adc
sub
mov
inc
outsb
or
and
inc
bound
mov
outsb
or
fs
sub
mov
fadd
loopne
cmp
or
adc
test
and
push
adc
xchg
adc
cmp
xor
and
mov
sub
adc
add
xchg
cwtl
ficompl
ljmp
jl
lods
cmpsb
fsts
outsl
mov
xchg
mov
or
mov
add
test
inc
jns
xor
xor
sbbl
imul
pushf
mov
cmpsl
inc
mov
js
adc
xchg
enter
jmp
in
push
add
stos
or
cmp
sbb
or
and
jo
cmc
push
add
mov
mov
inc
jp
dec
lret
pop
imul
ret
and
adc
jg
and
mov
in
mov
xlat
loop
jne
inc
pop
std
jno
add
jmp
ja
inc
push
aad
mov
pop
or
dec
push
hlt
lods
sub
and
inc
out
sub
xchg
outsb
add
mov
xor
inc
sub
out
mov
inc
or
and
fmuls
adc
les
pop
subb
mov
sbb
aas
dec
xchg
imul
mov
adc
bound
push
repnz
add
fsubrs
add
ja
adc
inc
in
mov
adc
testl
mov
repnz
jb
pop
nop
sbb
sbb
test
xor
xor
insb
xchg
dec
nop
and
push
xchg
dec
pop
lods
sub
cs
sub
sbb
comiss
sub
adc
inc
mov
rcll
nop
sub
push
nop
mov
sub
test
cs
nop
je
das
adcl
mov
jmp
add
fistpll
stos
add
ljmp
jg
xchg
jne
xor
and
push
fldenv
inc
xor
rcrb
insb
xchg
mov
xchg
in
jo
xor
or
push
adc
daa
rclb
test
fdivrl
lea
repnz
ret
pop
push
fstpl
adc
sbb
adc
in
inc
pusha
mov
xor
sti
jb
aam
bound
pop
mov
shl
je
adc
cmp
stc
icebp
aam
enter
add
inc
push
mov
arpl
testl
loope,pn
lock
call
mov
stos
fdivr
jmp
stos
sub
mov
repz
in
add
call
xchg
test
xchg
test
repnz
mov
scas
fdivrl
ja
shrb
std
lret
out
stc
ds
xchg
test
sub
or
aam
dec
es
fbld
rolb
inc
fidivrl
out
fs
mov
out
movsl
shll
fdivr
in
out
inc
stc
xchg
inc
in
fsubl
sti
rorl
roll
gs
mov
push
dec
lods
mov
movsl
inc
adc
push
gs
inc
dec
in
stos
mov
or
push
idivb
ret
rolb
and
xchg
adc
sub
aad
jg
adc
jp
adc
sub
pop
ret
mov
adc
hlt
mov
test
testb
fcoml
xchg
add
ret
adc
fsubs
mov
mov
mov
test
dec
xor
adc
mov
adc
ss
fcoms
sub
adc
scas
dec
syscall
xor
add
jnp
insl
int3
fcoms
ds
dec
sub
add
and
mov
mov
je
jno
lods
jnp
mov
cli
pop
mov
push
xor
dec
test
add
stos
add
jmp
repz
inc
sub
bt
jae
mov
lret
pop
leave
ret
inc
pop
and
out
repz
push
cmp
cmp
out
dec
add
call
mov
jae
mov
mov
rclb
inc
or
jecxz
add
int3
cli
cwtl
push
dec
clc
scas
frstor
mov
or
inc
mov
call
loope
mov
push
aaa
push
inc
push
je
and
mov
mov
les
and
enter
dec
dec
adc
inc
dec
dec
mov
loopne
inc
clc
xchg
iret
sub
and
adc
inc
jae
xchg
mov
sub
jo
mov
mov
xchg
jae
xlat
xchg
daa
sar
std
push
test
or
fmull
das
pop
ds
jg
dec
sub
and
movl
fwait
xlat
cmpsb
repnz
jmp
push
je
pop
test
pop
add
mov
push
fildl
aas
aas
dec
pop
adc
or
cmpsl
and
adc
push
jl
or
pusha
pop
clc
mov
insl
or
jg
inc
push
fs
sbb
ret
jae
movsl
jo
gs
hlt
mov
mov
lock
into
xrelease
sbb
rorl
mov
jle
pop
hlt
in
xchg
sub
lock
inc
xor
inc
push
leave
ljmp
jle
hlt
das
mov
ss
movsb
js
in
mov
insb
das
mov
ljmp
sub
frstor
mov
xchg
xor
aam
mov
loope
clc
and
dec
adc
or
movsb
push
or
and
xchg
pusha
or
das
outsl
loopne
jl
adc
push
or
test
lea
mov
xchg
movsb
xchg
movsl
xchg
sbbb
sub
test
push
insb
int
icebp
or
cmp
and
mov
inc
mov
mov
sub
insb
add
or
test
aam
jo
cmp
repnz
bound
mov
pop
sub
cli
test
or
loopne
negb
adc
inc
lock
mov
adc
enter
lds
inc
fimuls
dec
test
enter
cmp
inc
popa
mov
jmp
cltd
popf
sub
add
sub
adc
push
mov
inc
push
cmovb
push
xchg
fs
mov
dec
icebp
insb
pop
cmp
mov
int3
mov
and
daa
ds
test
jmp
and
mov
and
addr16
xor
sub
stos
add
insl
cmpsb
pop
movq
sub
push
rcll
adc
mov
loop
pop
mov
in
push
popa
and
inc
cmpsl
xor
jne
push
inc
js
add
aaa
xor
dec
mov
cmpsb
lock
test
mov
or
pop
and
fs
jbe
mov
mov
sub
xchg
mov
cmpsb
push
pushf
cmp
push
ds
imul
roll
cmp
cmp
add
pop
mov
arpl
les
test
or
inc
cmp
test
xor
test
mov
int
add
mov
leave
add
inc
sub
cld
and
xor
jb
test
adc
add
jae
adc
jo
xor
push
enter
push
xchg
sbb
nop
test
bound
lret
xchg
test
sub
mov
add
sub
inc
out
fiadds
dec
sbb
test
adc
pop
cmpsw
das
sub
pop
into
mov
and
jae
inc
dec
sbb
and
bound
cmp
xchg
cmp
enter
pop
imul
mov
add
push
data16
jmp
mov
or
std
dec
out
jg
in
out
adc
mov
cmp
pop
pushf
pop
mov
jl
push
mov
rclb
clc
cli
inc
or
and
mov
js
inc
andb
mov
pop
sub
xchg
sbb
lock
scas
bound
dec
lock
jnp
out
sub
pop
movl
jl
or
cld
push
stc
sbb
stos
or
add
adc
out
adc
sbb
lret
scas
inc
aas
cld
jg
add
and
and
sub
cmpb
jo
jg
sarb
sbb
and
hlt
add
iret
or
xchg
out
andl
adc
push
cmpl
arpl
and
loopne
push
jl
into
add
cmp
and
pop
sbb
notl
jl
jg
dec
add
xchg
and
rcrl
pusha
mov
jne
sbb
push
nop
and
lods
mov
ja
fimull
cmp
lahf
out
icebp
dec
cld
loop
lods
cmp
jnp
ljmp
cmc
pop
test
mov
mov
dec
scas
sub
je
dec
in
rol
jl
mull
or
or
mov
sbb
inc
jl
sbb
jg
adc
dec
mov
xchg
inc
enter
push
popf
xor
lret
orb
jbe
js
pusha
cltd
clc
mov
pop
and
repz
mov
sbb
rep
xchg
jmp
nop
cmp
rcrb
insl
loope
test
fcos
cmp
push
push
popw
and
add
xor
leave
add
inc
inc
or
add
add
pop
mov
jl
push
mov
int3
mov
mov
add
sub
cmpl
and
sub
lods
adc
sarl
pop
mov
adc
xor
jge
ljmp
jg
dec
xchg
lcall
jnp
sahf
add
sbb
mov
adc
cs
mov
pop
dec
mov
dec
mov
push
mov
fidivl
and
push
ds
adc
in
mov
in
iret
or
push
mov
cwtl
and
pop
and
icebp
sbb
add
jl
push
mov
jnp
xor
std
rcrl
hlt
out
dec
push
cmp
je
sub
loope
mov
and
mov
nop
xchg
sub
call
or
mov
lea
enter
push
ja
movsl
call
aaa
cltd
pop
jl
sub
or
lock
adc
clc
adc
xor
xchg
inc
inc
adc
jle
jno
push
mov
and
mov
jg
sbb
or
loopne
jl
dec
jp
scas
xchg
addb
mov
xor
bound
pop
jns
bound
pop
scas
jne
jmp
xor
or
sbb
xlat
cmp
dec
in
mov
push
hlt
xchg
push
inc
pop
inc
jnp,pt
adc
shlb
nop
jnp
xor
mov
mov
push
daa
lret
dec
jo
movsb
std
movsl
lahf
pop
and
mov
je
sub
fsubp
mov
sub
clc
aas
mov
mov
insl
adc
xor
xchg
pop
into
repz
cs
imul
cmp
jbe
aaa
xor
add
shlb
xor
sbb
cmp
push
jbe
cwtl
add
lea
mov
add
push
xchg
mov
daa
add
fsub
cmp
mov
cmp
xchg
daa
jae
sbb
xchg
push
mov
fmull
test
mov
imul
adc
outsb
mov
in
mov
and
ja
lret
pop
mov
sub
sub
push
out
jl
add
xor
clc
xor
in
ljmp
lods
inc
mov
in
sbbb
mov
dec
sti
sub
sub
or
out
adc
push
adc
addr16
loop
stc
test
sbb
add
fcoms
popa
adc
clc
xorb
pop
loop
xlat
mov
daa
add
lcall
xchg
ljmp
sub
sub
jne
imul
dec
inc
inc
out
outsb
dec
repz
repz
adc
cmp
loop
xchg
inc
pop
jbe
dec
lahf
icebp
jle
adc
add
mov
inc
push
mov
xchg
push
mov
rorb
mov
cmp
ficoms
cmp
xchg
xchg
pop
rcl
sub
sar
or
cs
out
mov
inc
xchg
hlt
icebp
inc
shr
and
loop
repz
adc
gs
outsl
cmpl
icebp
adc
mov
lea
outsl
stc
mov
adc
aas
mov
lcall
dec
or
and
adcl
data16
sbb
or
mov
rclb
in
bound
lea
pushf
out
jge
outsb
in
and
shl
mov
bound
or
stos
mov
cld
test
push
pop
adc
jp
pop
mov
sbb
ret
xchg
adc
jmp
cli
test
jl
and
inc
xchg
shl
push
adc
jne
and
add
shrb
xchg
or
pop
mov
mov
dec
addr16
adc
je
or
xor
add
fists
loop
aas
pop
cmpsl
nopl
push
push
mov
cmp
pushf
add
push
or
stc
and
daa
sar
fnstsw
push
imul
mov
out
mov
sub
or
add
cmp
mov
scas
mov
test
ud1
adc
das
sub
je
push
and
sub
ret
roll
enter
aaa
imul
or
repz
jmp
and
mov
test
aad
les
xchg
cld
add
inc
inc
jo
pop
jmp
in
mov
movsb
mov
push
add
push
xor
dec
mov
adc
cwtl
fucomip
xor
lods
cwtl
jbe
mov
cmpsb
std
into
jecxz
jmp
les
push
cld
aaa
clc
xor
jecxz
orl
imul
loop
mov
cltd
push
or
stos
pop
clc
jge
xchg
mov
clc
int
adc
sub
loop
adc
movsl
push
sahf
push
push
dec
xor
aaa
sub
cwtl
and
xor
sub
rorb
dec
movsl
out
pushf
mov
aas
loope
movl
enter
mov
xchg
xor
add
sub
add
jns
les
popf
hlt
or
xor
test
daa
mov
sbbl
mov
pop
jo
sub
adc
repz
mov
or
mov
push
push
push
push
adc
xchg
inc
movsl
sti
lret
xor
sub
in
pop
mov
jno
mov
cmp
addb
or
loopne
jo
mov
push
cmp
or
scas
push
push
jo
add
bound
adc
dec
int3
push
incl
test
push
or
into
aas
sbb
jge
push
adc
jle
mov
add
aas
dec
test
into
aas
mov
add
into
rcr
and
test
dec
fs
into
dec
pushf
and
sbb
push
pop
sbb
sbb
pop
in
cltd
and
clc
stos
loope
xlat
gs
lods
call
adc
or
sub
sbb
xchg
hlt
inc
filds
icebp
push
or
cmpsb
xor
bound
fsubs
xchg
xchg
loope
cmp
push
dec
mov
out
iret
adc
push
nop
adc
cmp
jmp
lea
push
pop
xor
mov
mov
pop
in
imul
xchg
insb
cmc
ljmp
lcall
cmovb
int
cmp
add
aam
rol
addr16
and
and
leave
mov
pop
sub
dec
cmp
jge
cmp
mov
mov
stos
mov
sbb
daa
jecxz
adc
sub
clc
xchg
inc
or
and
push
inc
adc
mov
jmp
and
inc
sub
jg
fnstcw
inc
nop
inc
fwait
jp
push
ljmp
adc
adc
add
push
es
es
push
clc
loopne
add
pop
ss
and
mov
xor
scas
pop
cmpsl
mov
adc
adc
mov
cmp
ret
inc
jecxz
or
or
int3
pop
xlat
or
mov
adc
add
dec
add
xor
xlat
arpl
or
incl
add
add
sahf
scas
cltd
xchg
or
mov
adc
or
jne
sub
incl
sub
dec
ret
ljmp
push
jmp
lcall
scas
icebp
adc
je
leave
pushf
adc
or
mov
hlt
adc
xabort
fs
or
and
mov
mov
mov
mov
push
mov
outsb
daa
test
pop
imul
bound
loope
or
jg
push
aad
rcll
xchg
cwtl
dec
sbb
sbb
mov
dec
jnp
movb
sub
inc
in
xchg
sbb
mov
ret
jge
adc
xor
sub
dec
inc
hlt
inc
aas
add
xor
cmp
inc
inc
jbe
cli
ljmp
jae
cltd
dec
andl
jp
push
cmp
rcrb
daa
push
sbb
inc
adc
cli
xchg
gs
add
decl
xchg
fs
mov
shlb
mov
push
mov
add
andl
adc
mov
shl
or
xor
sub
and
add
pop
fdiv
xchg
clc
xchg
loop
cli
lret
arpl
xchg
inc
mov
out
shll
mov
and
imul
inc
les
sub
or
add
sub
test
shl
push
loopne
lret
push
xchg
daa
and
xor
ror
push
mov
and
pusha
xchg
and
push
rclb
pop
stc
in
jl
sbb
movsb
stos
cltd
push
jecxz
push
lods
add
enter
and
movsb
pop
adc
sbb
and
inc
push
lcall
mov
and
and
es
and
cmp
adc
inc
sbb
sub
aam
mov
hlt
idivb
lcall
sbb
sti
mov
jecxz
jmp
popf
mov
fmuls
mov
pop
xchg
xor
pop
enter
rcrb
clc
ficompl
shll
out
movsl
popa
es
inc
int3
mov
in
inc
cmp
cmpsb
sbb
lcall
jae
inc
sbb
mov
je
std
xor
outsl
hlt
cmpsb
les
fdivrs
pop
jecxz
leave
cli
fcomps
sub
jge
xor
cmp
movsb
cwtl
cmp
cmp
stos
mov
jne
sub
adc
adc
clc
and
dec
mov
and
adc
testb
mov
addb
jb
out
and
push
fists
sub
xchg
adc
and
dec
add
adc
adc
lds
jg
test
and
jae
xor
inc
inc
decb
std
lock
adc
xor
add
add
xchg
mov
jecxz
inc
ss
pop
je
mov
in
mov
outsl
je
in
and
mov
out
push
sbbb
fcoms
enter
cwtl
adc
stos
mov
shll
sbb
mov
ja
aaa
jmp
push
addb
subb
inc
test
jl
xor
or
inc
xor
sbb
adcl
push
and
inc
popf
out
dec
jo
stc
stos
sti
xor
and
fs
in
inc
push
and
and
xlat
or
inc
pop
and
inc
pop
adc
xchg
mov
pop
cmp
xchg
mov
call
push
lock
mov
out
fs
xor
sub
push
xor
push
and
mov
jbe
dec
xor
popa
fimuls
sbb
push
jno
add
inc
test
cld
inc
or
mov
inc
outsl
add
pop
add
mov
lds
sub
cmpsb
pop
popf
mov
sub
and
into
test
mov
hlt
xlat
shll
in
adc
jg
jmp
in
ja
xor
ss
jle
xor
bnd
call
mov
jns
push
es
jno
test
aaa
dec
push
aaa
inc
test
mov
mov
cltd
push
or
jb
xchg
fwait
call
jp
adc
orb
insb
and
jge
cmp
mov
mov
clc
movsb
test
enter
inc
xchg
test
lret
test
in
cmp
and
adc
xrelease
jno
push
adc
mov
mov
push
int3
and
sub
or
push
add
push
ja
pop
icebp
js
xchg
sbb
dec
adc
out
mov
or
daa
pop
jmp
adc
outsb
jp
pop
enter
jne
adc
cltd
ffree
sbb
in
or
js
mov
fldenv
mov
imul
out
sub
push
pushf
add
xchg
adc
inc
inc
dec
dec
dec
inc
and
call
aad
roll
or
or
scas
sub
cli
lret
addb
int
mov
test
adc
mov
or
xlat
pxor
ja
dec
sbb
or
add
push
add
xor
lock
ja
inc
cmp
push
sub
xor
jg
daa
jge
out
dec
sbb
rorl
rolb
cmp
inc
mov
sbb
js
je
outsl
adc
les
push
and
jae
and
mov
repz
repnz
mov
dec
adc
testl
add
call
sub
jmp
sub
push
xor
push
mov
inc
inc
or
inc
xchg
fstl
hlt
clc
adc
jo
or
and
adc
pop
or
push
cld
mov
jge
movsb
sub
fcmovne
xchg
sbb
leave
sub
lods
add
mov
pop
fldenv
sbb
jno
cmp
sub
test
sbb
popa
and
or
add
sar
xor
insl
and
ret
daa
sbb
mov
jp
push
repz
jecxz
add
nop
mov
enter
push
test
jns
cmp
jge
out
jb
sub
call
arpl
pop
dec
jl
cs
cmp
testb
dec
inc
cs
filds
loop
add
and
mov
mov
test
inc
sbb
jo
xchg
adc
fs
adc
loop
mov
mov
sbb
es
jl
movlps
mov
push
sub
mov
dec
adc
movsb
push
cmp
popf
lods
clc
mov
and
test
pop
pushf
neg
es
lds
pushf
shll
dec
inc
push
ds
mov
inc
mov
mov
mov
and
add
dec
sbb
mov
mov
mov
pop
pop
or
dec
push
push
add
test
add
add
pop
clc
or
or
and
dec
or
push
adc
adc
adc
mov
cli
xor
mov
daa
negl
scas
inc
rorb
jecxz
sub
adc
mov
mov
xchg
push
cmp
rclb
jg
mov
insb
sub
inc
out
mov
pushf
push
pushf
in
adc
xchg
xor
or
out
outsl
int3
repnz
sub
sbb
cmp
mov
xchg
mov
aad
push
or
sub
in
loope
add
mov
sti
mov
popf
jle
inc
or
push
fs
out
loop
jns
add
hlt
mov
clc
gs
mov
mov
aad
inc
add
jb
out
lcall
mov
loop
shl
add
nop
jns
pop
xchg
pop
out
fs
scas
lods
xor
stos
adc
mov
ret
sbb
jns
enter
shrb
push
or
xchg
add
das
push
and
les
cmp
mov
add
dec
adc
and
mov
or
inc
jmp
pop
jmp
sti
mov
js
mov
xor
push
test
loopne
cwtl
add
or
jns
pop
jmp
inc
fmul
add
out
push
insb
sub
push
loope
jmp
dec
mov
pop
add
in
cltd
jno
pop
cmp
mov
mov
pop
cmp
mov
dec
push
and
inc
pushl
mov
push
adcb
leave
add
jb
clc
jo
push
jno
lret
inc
or
sarb
or
pop
mov
jge
xchg
das
scas
test
lock
push
aaa
push
xor
sbb
mov
lock
fwait
xlat
decb
jecxz
imul
xor
cltd
fnsave
xchg
sti
adc
inc
mov
mov
and
test
clc
pop
push
pop
fdivrl
mov
inc
lods
movb
sbb
icebp
mov
or
jne
inc
inc
adc
inc
or
or
mov
jae
jmp
rorl
lret
sbb
loopne
loop
sti
inc
jne
mov
mov
jmp
pop
cs
dec
xchg
or
jecxz
repnz
fwait
scas
pop
inc
xor
push
cwtl
sbbl
imul
icebp
cli
xlat
cltd
sub
lret
mov
mov
adc
and
jl
ljmp
adc
add
add
or
call
add
add
or
or
xchg
adc
xchg
aad
pop
in
or
fadd
adc
data16
lea
jno
sub
jae
insb
cmp
orb
jl
adc
ja
mov
or
out
or
aad
jmp
or
call
mov
pop
dec
mov
sub
imul
xor
dec
lea
pop
cmp
cmpsb
push
inc
lods
pop
hlt
sub
call
orb
arpl
outsl
push
fs
les
xor
test
or
xor
daa
pop
sub
adc
sbbl
test
cmp
xchg
mov
sbb
mov
dec
adc
xchg
adc
add
nop
xchg
inc
scas
movsb
push
inc
pop
add
adc
scas
inc
dec
stos
cwtl
inc
mov
movb
lea
fists
push
push
or
lea
adc
dec
inc
mov
xor
repnz
inc
and
xor
jmp
pop
outsb
ror
and
mov
xchg
jge
cmpl
jg
movsl
inc
sub
int
and
insl
mov
nop
and
inc
ret
dec
xor
mov
push
inc
fildl
dec
sbb
jge
adc
mov
and
test
jge
mov
or
in
push
push
out
aaa
and
divps
out
les
insl
jg
adc
fdivr
aaa
adc
bswap
aam
loope,pt
mov
cmc
adc
pop
and
fsubrs
in
int
int3
xchg
xchg
adcb
xor
pushf
pop
loopne
in
lea
das
xchg
jbe
mov
mov
pop
fsubl
movl
or
sbb
loop
daa
fdivs
cmc
or
sbb
xor
ss
jbe
push
inc
incb
push
adc
sahf
aam
adc
test
shl
push
movsb
push
mov
jge
xchg
imul
cmc
jne
dec
mov
lea
pop
test
mov
cwtl
movsl
je
add
mov
inc
cwtl
daa
inc
cmp
pop
repnz
cmp
adc
and
inc
shll
lahf
cmp
je
xchg
add
xchg
jno
inc
mov
mov
mov
or
lret
mov
inc
sub
pop
inc
xor
nop
nop
shll
mov
adc
push
call
idivl
mov
fcoms
je
sbb
sub
sub
jle
jmp
mov
add
leave
lods
je
addb
mov
lret
or
fstpt
mov
inc
mov
mov
scas
shrb
es
call
sbbb
push
mov
out
clc
enter
xabort
jne
dec
arpl
xor
adc
flds
fprem1
adc
pop
out
xchg
sbb
mov
inc
lahf
lret
xchg
adc
les
je
and
shll
ss
nop
sub
ret
ret
mov
hlt
aad
cmp
je
jbe
push
push
push
pusha
sbb
rcll
call
lret
xchg
inc
jle
pop
jg
mov
iret
cmp
popl
mov
sti
mov
loope
in
or
xchg
cmp
cmpsb
mov
mov
stc
or
pop
pop
fnstenv
sub
sti
int
imul
mov
stos
jb
mov
push
decb
xchg
or
xchg
sbb
mov
dec
repnz
add
push
test
loop
les
pop
and
add
adc
out
inc
test
push
and
mov
adc
and
pop
adc
push
lahf
inc
dec
adc
push
adc
shlb
push
frstor
cmp
or
mov
sub
sub
xchg
loope
aam
shlb
xchg
mov
pop
das
fs
fs
inc
push
pop
iret
sbb
mov
push
repnz
sbb
insb
push
aam
dec
inc
call
scas
mov
pop
out
ss
cmp
repnz
ror
cs
xchg
dec
fstl
jge
inc
dec
loopne
and
jge
pusha
inc
rorb
fs
aam
scas
sub
or
out
dec
cld
cltd
test
dec
inc
enter
push
and
sub
or
sub
add
adc
mov
movsl
pop
cmp
scas
pop
adc
js
cmpsw
call
cmpl
push
xor
cmp
int3
mov
int3
inc
add
mov
xchg
mov
ret
test
lcall
fiadds
outsl
sub
cmpsl
movsl
shlb
mov
cmp
sti
jmp
movsl
in
stos
mov
add
cmp
shl
popf
aad
xchg
clc
push
dec
mov
pusha
mov
int3
sbb
mov
jl
mov
cmpl
inc
fmuls
shrb
stos
xchg
shl
imul
jo
inc
in
xor
insl
mov
call
and
sbb
fadds
aaa
gs
js
jmp
insb
imul
jmp
ds
dec
fistps
sub
dec
push
push
push
xchg
cli
dec
sbb
mov
sub
or
rcrl
or
dec
pop
imul
xor
jno
imul
xchg
sti
dec
insl
call
loope
lds
mov
fwait
in
sub
mov
xchg
repnz
push
insl
cld
and
mov
or
popa
lahf
out
sti
pop
clc
stc
jbe
enter
cmp
adc
sub
adc
xor
xchg
std
idivb
pop
inc
bnd
pop
movsb
stc
ljmp
jl
or
aam
dec
push
sbb
adc
pop
out
dec
fildll
push
and
inc
lock
xchg
and
push
jbe
jo
mov
push
call
js
das
mov
jbe
scas
hlt
into
mov
ljmp
sub
add
je
jae
daa
push
lcall
add
pop
repz
adc
clc
add
add
nop
into
add
xlat
mov
nop
cld
dec
mov
dec
insl
adc
and
xor
mov
fs
or
icebp
add
das
lea
sti
pusha
adc
out
mov
test
mov
imul
and
xchg
lret
and
stos
push
and
imul
sub
adc
and
ret
movsb
faddl
aad
movsl
dec
test
test
jmp
pop
and
pop
adc
frstor
and
cltd
in
cld
repz
pushf
inc
je
cmpsb
push
inc
add
sbb
decl
sbb
mov
fsubr
pop
sbb
dec
loopne
insl
gs
int3
mov
and
push
inc
and
and
xchg
and
pop
sbb
adc
inc
sti
inc
push
inc
mov
sarb
mov
xchg
mov
enter
push
leave
and
mov
ja
adc
sbb
xchg
and
sbb
cmpsb
lods
mov
loop
and
mov
sub
cld
test
flds
enter
sub
mov
mov
les
add
in
inc
mov
mov
mov
adc
sbb
leave
fbld
dec
repnz
jns
jp
jo
das
movsl
orl
push
icebp
ja
pop
dec
out
xchg
jp
je
addr16
mov
cli
ret
adc
push
xor
add
int3
sbb
adc
inc
add
mov
repz
mov
mov
addr16
add
xor
push
out
xor
aam
and
mov
dec
mov
or
jae
les
cmpsb
outsb
inc
xor
lret
push
in
jno
cmp
insb
imul
sbb
cmp
daa
jl
push
dec
add
xor
cmp
push
jg
sub
fldt
jmp
arpl
shll
xchg
arpl
repnz
fimuls
rolb
jnp
inc
cmp
repz
ret
mov
repnz
and
pop
mov
pop
or
xor
notb
mov
loope
and
loope
es
inc
sahf
xchg
mov
out
xchg
loopne
mov
fiaddl
cmp
fsubrs
bound
inc
add
pop
mov
and
jnp
loopne
rorb
js
rclb
add
mov
xchg
jns
mov
into
sub
add
jmp
out
cmp
dec
stc
fsts
inc
mov
and
jbe
cmp
or
push
push
call
add
out
mov
mov
lahf
xchg
pop
scas
jo
push
call
into
mov
add
xor
jmp
popa
dec
mov
jne
push
pop
and
rcrb
movsl
les
dec
mov
sbb
sub
inc
in
jb
sbb
push
adc
fs
aam
add
cmp
mov
jl
pop
mov
xchg
mov
cmp
jno
or
imul
cmpsb
iret
jne
or
xchg
add
data16
push
cmp
loopne
enter
mov
decb
leave
push
cltd
stos
or
in
mov
dec
or
jne
dec
mov
push
ja
push
orb
mov
pop
lods
adc
mov
stos
shl
sub
or
movl
jp
mov
xchg
loop
jg
in
gs
xor
pop
sbb
and
inc
lock
and
outsl
mov
mov
shrb
fists
das
inc
push
sbb
pop
in
pop
cmp
ss
ss
lret
mov
dec
faddl
push
lcall
or
dec
jnp
pop
adc
enter
sti
bound
and
std
add
cld
inc
and
push
mov
and
push
and
add
jb
push
movsb
adc
ds
insl
shrl
std
lret
dec
iret
xlat
xchg
sbb
lea
jecxz
js
xchg
inc
lret
call
mov
cltd
adc
sbb
lds
das
test
sarl
incb
lods
xchg
loopne
pop
push
outsl
dec
mov
xchg
scas
lret
jp
daa
aad
adc
mov
add
cmp
leave
popf
cmpsl
push
or
adc
mov
adc
push
movsl
inc
jmp
repnz
stos
jg
das
addr16
lea
mov
pop
fwait
outsl
mov
xor
xchg
mov
cmp
jg
dec
cwtl
push
mov
lea
inc
cmp
push
and
push
or
adc
push
pop
lret
jg
sbb
jmp
sub
mov
arpl
fimuls
adc
pop
out
cmp
cmp
ret
inc
rorl
imul
fwait
add
mov
mov
popa
push
or
call
test
inc
jge
push
xchg
or
daa
pop
xchg
adc
or
push
push
xchg
mov
mov
lds
jmp
cmpl
movl
adc
push
lock
push
test
sub
xchg
sbb
dec
and
je
jmp
push
cmp
xor
out
nop
jmp
mov
cmc
dec
rclb
xchg
inc
fidivrs
mov
call
pushf
xchg
and
jmp
pop
adc
sub
dec
cmp
adc
push
adc
rolb
mov
imul
out
cld
call
rcll
daa
rorb
arpl
adc
enter
xchg
adc
movsl
dec
ljmp
mov
sub
adc
or
sahf
addr16
sbb
std
jmp
inc
dec
hlt
fadds
je
adc
lods
and
mov
inc
insl
cmp
nop
cmp
test
sbb
inc
or
pop
inc
repz
mov
call
stos
adc
dec
pop
clc
adc
inc
or
and
inc
sub
xchg
stos
and
mov
and
or
ljmp
push
xor
and
or
nop
and
and
sbb
adc
adc
nop
add
and
xor
sbb
or
xchg
and
nop
loopne
fsubl
adc
push
insb
dec
push
sbb
and
and
sub
xchg
and
cmp
cmp
inc
xor
or
xchg
and
enter
xor
or
xchg
and
enter
xor
inc
nop
and
mov
or
xchg
and
shlb
sbb
or
xchg
and
nop
fmul
fsubl
in
call
lock
xchg
clc
push
and
mov
enter
xor
sbb
sbb
nop
and
sub
xor
xor
cmp
nop
inc
enter
xor
push
or
xchg
and
fs
xor
je
js
inc
jl
adcb
xor
xchg
and
lods
xor
xchg
and
nop
enter
xor
sbb
roll
add
and
xor
sbb
or
xchg
and
nop
loopne
fsubl
aam
rorb
xchg
and
nop
ror
scas
push
jo
xlat
outsb
shrb
test
xorl
xchg
adc
xor
mov
and
stos
lea
or
cmp
and
adc
jmp
daa
jl
jge
or
in
push
sbb
xor
test
mov
xchg
sahf
bound
push
push
movsb
jns
ljmp
lret
popa
clc
or
push
add
stos
and
stos
lods
mov
out
ljmp
mov
test
loop
cwtl
mov
shrb
inc
mov
pop
and
pop
sub
mov
xor
das
xor
mov
mov
adc
push
pushf
adcb
dec
push
dec
imul
mov
pop
add
dec
scas
iret
push
pop
lods
jo
sub
sahf
sbb
cmp
jle
das
dec
and
mov
mov
icebp
negl
cmp
gs
dec
mov
int
jns
xchg
stos
inc
jb
inc
negb
inc
imul
out
xchg
jo
lret
stc
mov
movsb
inc
dec
ljmp
mov
push
xor
stos
xchg
dec
pusha
jbe
adcl
push
outsb
mov
mov
dec
or
dec
loop
push
xchg
insl
cmp
lods
cwtl
stos
cmp
adc
cmp
sbb
push
mov
mov
mov
dec
add
push
xor
push
sub
sti
sbb
dec
xchg
push
std
and
mov
subb
jns
popf
je
in
xchg
xchg
jl
dec
fisubs
mov
inc
negl
mov
lock
outsb
inc
pop
mov
das
rorb
fldt
push
cmp
cmp
and
int
and
movsb
sub
and
daa
loopne
rorb
lahf
ret
jo
cmp
or
and
adc
shll
test
mov
enter
loopne
pop
movsl
stos
cmp
mov
pop
inc
add
push
std
add
and
pop
pop
inc
inc
insb
xchg
inc
jo
push
in
in
adc
mov
jmp
xchg
xor
mov
or
pop
jg
cmp
pop
movsl
sub
sub
je
cmp
ror
pop
jns
outsl
mov
mov
push
subb
rcl
adc
sub
lods
cmc
nop
dec
jge
jbe
imul
popfw
add
mov
xor
jno
lea
pushf
push
bound
and
sub
jmp
shr
aas
push
and
inc
sub
stos
out
icebp
sub
or
sub
mov
jno
cmovne
nop
mov
inc
pop
jne
stc
nop
jb
inc
push
lods
pop
ds
xchg
adc
mov
adc
cmp
jp
inc
cmp
in
imul
fisubs
push
aad
xchg
and
inc
data16
dec
lods
outsb
sbb
movsl
daa
aam
rolb
fdivrl
mov
clc
lret
mov
add
dec
push
out
and
jle
jns
cmpsl
stc
jns
das
inc
daa
sub
testb
jl
test
jmp
pop
sbb
sub
xlat
out
mov
jge
jae
push
xor
jne
bound
aam
and
jmp
xor
aam
fsubrl
nop
push
out
in
ljmp
and
lahf
hlt
jns
or
fldcw
pop
jne
or
inc
rcrl
leave
inc
jnp
inc
movsl
adc
sub
rcll
add
xor
mov
jmp
gs
jmp
sti
ficompl
jecxz
call
sbb
ds
push
fs
and
xorb
mov
sbb
cmc
outsl
add
sarb
dec
or
and
xor
or
sub
popa
mov
daa
dec
nop
test
push
adc
testb
adc
loope
adc
daa
int3
mov
or
add
add
cmp
sbb
dec
sub
lock
dec
ret
incl
and
sbb
es
lods
pop
adc
call
lea
inc
andb
and
inc
insl
ret
fadd
add
add
add
add
inc
jle
add
push
push
pop
xchg
xor
add
popa
push
out
mov
sbb
insl
mov
xor
mov
add
fdivrl
cld
aad
loopne
xchg
sub
mov
pop
sub
sbb
mov
repnz
mov
add
in
push
insl
push
mov
hlt
movl
test
fs
stc
std
in
leave
mov
pop
add
insb
push
arpl
cmp
or
outsb
add
pop
adc
in
pusha
add
jb
addr16
add
add
add
std
test
or
insb
cwtl
mov
inc
leave
mov
lods
jecxz
fdivs
jne
filds
add
shrl
cmp
ficoms
nop
xlat
enter
sarb
and
les
iret
femms
movsl
mov
sub
mov
or
and
or
mov
jl
das
adc
pop
stos
sbb
data16
push
jno
add
mov
adc
pxor
mov
push
movsl
add
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
add
hlt
push
imul
jge
add
xor
dec
xchg
cli
jnp
movsl
add
shl
adcb
pmaddwd
fnstenv
mov
ljmp
mov
bound
sub
rorl
pop
popa
mov
into
inc
sub
add
inc
movsl
fisttps
xlat
xchg
fadd
les
shll
jmp
fldcw
inc
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
xorb
insb
sbb
shrb
sbb
incb
loopne
rorl
add
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
clc
fs
add
repnz
pushf
mov
xchg
insl
add
add
jmp
addr16
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
jmp
sbb
mov
lret
mov
add
ss
fadds
xlat
int
sub
push
mov
jp,pn
mov
dec
popa
les
add
push
sub
aaa
mov
or
filds
add
sub
popa
aad
mov
bound
inc
sbb
testl
and
in
jmp
push
fnstenv
cld
xor
jae
cmp
and
jne
push
popa
jle
fsubrs
dec
gs
fistl
mov
push
pop
mov
push
dec
add
or
xchg
add
or
aas
and
xor
outsl
adc
and
sbbb
xor
or
adc
shlb
push
andb
inc
add
data16
gs
inc
adc
mov
and
cmp
jecxz
adc
inc
insb
imul
dec
addr16
inc
fldcw
xor
insl
popa
insb
int
inc
and
xchg
mov
rorb
rolb
insl
gs
jns
push
leave
aam
cmp
cmc
fs
pop
out
ds
jo
inc
or
pop
lds
fs
dec
gs
push
fs
jns
inc
fisttpll
scas
or
adc
stc
fucomi
jne
dec
dec
push
and
es
aad
xchg
pop
push
sub
cmp
mov
push
adc
je
sbb
mov
sub
add
jo
imul
cmp
movsl
fs
or
popa
sbb
andb
cmpsb
xchg
cmp
jl
sub
and
pushf
es
xorb
xchg
xor
jl
pop
jg
cmp
add
inc
sub
outsb
or
lret
bound
jb
sbb
jns
loop
xchg
icebp
add
push
inc
pop
jmp
mov
outsl
xor
adc
or
es
cmp
push
dec
adc
dec
jae
inc
test
dec
sub
push
outsl
cwtl
test
mov
inc
push
xchg
or
jo
out
dec
fmulp
jb
loopne
scas
fucomp
jecxz
sub
lods
mov
mov
and
shl
sub
xor
add
adc
repnz
shrb
call
push
je
sbb
aad
test
addl
lds
popa
xchg
push
xor
fsubs
sub
sub
pop
fiaddl
xchg
cwtl
jp
dec
sbb
mov
push
icebp
push
inc
inc
xchg
inc
sub
mov
cmp
pop
data16
movsl
sub
xchg
stc
daa
dec
test
arpl
das
xchg
and
cmp
xor
sub
shlb
mov
adc
enter
iret
gs
xor
daa
cmp
sub
popa
movsl
cs
repz
xchg
adc
jl
jo
ljmpw
scas
aas
and
dec
sbb
repnz
mov
mov
mov
outsb
std
in
lods
mov
push
cltd
mov
sub
add
inc
inc
push
inc
fwait
inc
mov
and
mov
pushf
sub
sbb
dec
cs
insb
fdivr
cmpsb
inc
push
and
clc
aad
bextr
xchg
cmpsl
jle
adc
jmp
fs
push
lret
sti
cltd
loope
cmp
or
cltd
imul
push
pop
loop
adc
imul
arpl
xor
dec
bound
lods
fisubl
insl
popf
js
outsl
or
xor
adc
xlat
sbb
cmp
xchg
test
push
sub
arpl
pop
les
ret
cmpsl
jge
enter
xor
sbb
inc
xor
fidivrl
leave
fsubl
imul
dec
cmp
push
inc
sbb
xchg
adc
jae
ds
cs
push
pusha
pop
push
ret
imul
push
idivl
mov
jae
js
mov
dec
cmp
lock
insl
and
adc
xchg
xor
and
sub
in
gs
fiadds
jae
xchg
mov
adc
pop
inc
and
adc
sub
aaa
cvttps2pi
mov
sub
jbe
jae
jb
lock
cmp
pop
cmp
sub
mov
or
pop
jae
clc
xchg
or
lahf
xor
lock
cmp
jo
push
sbb
js
adc
sbb
lods
not
test
cltd
jns
and
test
xchg
cmp
pushf
or
inc
inc
mov
sub
xchg
loop
adc
insb
outsb
stos
mov
aaa
adc
adc
mov
xor
xchg
adc
fmuls
mov
cmpsb
dec
xchg
push
lss
je
adc
loope
dec
cltd
jno
xor
test
scas
cwtl
js
popa
inc
ja
lcall
and
mov
push
cmp
xor
cs
dec
imul
xchg
cmp
push
sbb
sub
pcmpgtw
addr16
jb
fidivrl
dec
punpckhwd
pop
jmp
sub
and
jae
inc
sub
adc
inc
sarl
sub
xchg
bound
lods
dec
and
push
jne
or
mov
lds
or
sub
dec
mov
dec
nop
push
and
inc
or
xchg
pop
push
sbb
imul
or
jmp
adc
mov
dec
nop
es
es
mov
scas
lods
in
or
pop
outsb
or
repnz
jo
pop
mov
jmp
popa
addr16
mov
sbb
insl
bound
adc
xor
jo
or
jno
sbb
or
jo
jbe
or
xchg
loop
daa
jns
pop
mov
dec
out
inc
jmp
push
jle
and
xor
push
mov
xchg
pop
mov
push
pop
fcmovnu
pop
xor
and
mov
sub
bound
lea
sub
dec
sub
pop
outsl
jo
mov
imul
sub
push
push
add
into
or
or
faddl
xor
inc
and
cmp
pop
pop
or
aaa
jno
jns
icebp
mov
test
add
push
jb
add
mov
aaa
bswap
add
push
outsb
sbb
sbb
scas
lahf
sub
jge
movsb
pop
dec
pcmpeqb
ja
push
push
es
bound
pop
jae
xor
test
mov
hlt
hlt
mov
or
or
adc
mov
xor
les
movsb
out
inc
mov
jns
jmp
int3
jae
and
test
enter
push
es
loope
outsl
js
paddw
adc
test
je
ss
or
jno
rclb
lret
or
mov
pop
cmp
push
ss
mov
inc
das
or
and
out
andb
or
sub
cld
jbe
shll
bnd
dec
inc
push
dec
mov
or
pop
sub
push
push
cwtl
inc
dec
cmp
inc
xor
or
pusha
test
and
ds
dec
or
pushf
pop
adc
sub
sbb
sub
pop
sbb
sbb
or
in
and
dec
dec
repnz
or
adc
mov
mov
pop
mov
mov
jmp
inc
push
std
push
or
xchg
sarb
lcall
in
rolb
cmp
sete
imul
ja
movl
ss
pushf
sub
adc
or
jbe
fwait
sub
sbb
lcall
or
jb
and
pop
insl
das
xor
dec
xor
std
push
shrl
nopl
inc
cmp
dec
inc
sub
push
or
xor
cmp
sub
jnp,pn
jne
xchg
mov
xchg
and
or
aaa
dec
push
les
or
shl
jo
xchg
dec
sbb
add
ja
xchg
cmp
jno
adc
imul
xor
jbe
imul
insb
pop
pop
mov
xor
xor
pusha
xchg
pop
mov
das
shlb
mov
clc
repnz
aam
jp
call
xor
jns
test
and
aaa
repnz
loop
shrd
push
sbb
xor
lret
push
xor
mov
cmp
imul
xchg
cmp
mov
pusha
mov
cmp
xor
pop
cmp
xchg
mov
mov
mov
sbb
cmp
cmp
mov
std
sbb
inc
and
pop
rcll
push
adc
adc
push
push
fs
js
sbb
cmp
imul
dec
lcall
insl
insl
sub
pusha
inc
dec
inc
rol
push
jmp
jne
test
adc
lret
stos
jnp
xor
sbb
inc
push
insl
clc
pop
repnz
push
pop
popa
rorb
bound
fiadds
fwait
or
jns
dec
push
insb
repnz
push
push
sub
lods
cmovle
inc
xor
jae
inc
lret
push
pop
movsl
loopne
cld
mov
cmpsl
jne
add
cmp
cmpb
push
mov
inc
inc
jnp
repz
or
cmp
and
and
inc
loope
push
pop
aas
mov
dec
sub
cwtl
leave
in
hlt
imul
insb
xchg
xchg
lock
sti
xchg
leave
push
inc
inc
fcomp
xor
adc
fisttpl
jl
push
mov
jp
shlb
jne
pusha
pop
es
inc
jno
fs
imul
cmp
insl
push
movsl
ret
lea
mov
into
insb
cltd
xchg
inc
and
inc
dec
adc
and
jbe
mov
adc
loopne
fcoms
dec
outsb
xor
gs
push
jl
cmpsb
outsb
dec
or
sbb
cli
lcall
cmp
shrb
repnz
adc
test
sbb
jbe
nop
sahf
inc
lods
and
test
dec
mov
push
push
jae
lahf
ret
stc
ljmp
nop
mov
inc
dec
fiaddl
rcrb
les
movsl
sbb
inc
aam
aas
jbe
test
mov
das
fistps
shll
sbb
outsb
int3
jp
cmp
call
loope
mov
or
lret
adc
imul
imul
jne
sbb
push
pushf
sub
and
mov
add
add
mov
in
jg
pushf
lods
push
out
jb
xor
jbe
push
rcll
out
call
and
adc
mov
rclb
cltd
sbbb
and
and
insl
pop
push
rcll
adc
sbb
fs
stc
pushf
pop
dec
lods
hlt
fs
ret
and
arpl
adc
pop
inc
adc
sub
pop
jb
inc
sbb
mov
nop
jb
adc
into
jl
adc
mov
adc
mov
cmc
cmc
iret
push
dec
icebp
daa
mov
jb
outsb
xchg
mov
xchg
jns
sbb
adc
sub
sbb
aas
and
rclb
jb
loop
jle
add
bound
pop
mov
pop
insb
sti
hlt
je
or
push
repz
xchg
and
insb
sub
adc
dec
inc
adc
mov
bound
lods
je
xchg
aam
mov
jno
push
dec
xorb
pusha
push
xor
mov
push
push
jb
sub
inc
xchg
outsl
hlt
cmp
push
mov
shll
movsl
push
add
dec
mov
xorl
inc
je
outsb
inc
adc
cmovl
pop
stc
sub
insl
sub
push
in
or
dec
lock
je
fs
or
in
adc
cmpsb
add
loopne
pushf
sub
call
inc
or
cmp
ss
or
mov
das
jnp
mov
repz
sbb
and
jb
mov
ret
or
test
dec
cmp
out
adc
sub
dec
cs
aaa
jns
bswap
das
jl
sysret
push
pushf
or
pop
das
xchg
sub
adc
or
dec
ljmp
xchg
les
ficoml
pop
jb
cmp
adc
or
dec
pop
mov
in
rol
mov
dec
adc
and
push
or
inc
lret
inc
and
cmp
xor
jns
cs
leave
std
sub
ret
sbbl
cli
or
or
xor
adc
dec
or
or
sub
and
and
je
or
mov
js
mov
leave
add
arpl
xor
fmull
ja
jne
js
inc
sub
sbb
jg
test
or
arpl
push
imul
je
xor
xor
xor
add
in
repz
pminub
adc
mov
or
mov
test
and
adc
mov
loope
mov
mov
xor
pop
imul
loopne
les
in
jo
adc
and
sub
adc
or
xor
jae
push
jo
cwtl
add
nop
in
xchg
add
arpl
loopne
sub
push
add
adc
adc
push
mov
jge
add
mov
sbb
or
add
xor
dec
adc
lret
push
push
inc
push
xchg
adcb
inc
nop
adc
clc
cmp
mov
inc
loopne
shl
add
js
mov
dec
adc
dec
lret
cmp
push
cmpl
add
jb
pop
js
inc
or
rcll
xor
rcr
inc
cltd
and
add
js
push
and
sub
dec
inc
adc
in
dec
inc
add
loope
fcomps
nop
jecxz
add
js
pop
sub
cmp
and
add
rolb
and
stos
and
insb
addl
push
es
dec
dec
loopne
movsl
jo
jo
and
push
sub
shl
cmp
in
cmp
call
add
add
add
inc
sbbl
inc
sbb
in
push
add
pusha
cmp
or
adc
jo
sbb
or
add
subb
add
pusha
bound
dec
dec
push
dec
xor
adc
fcoml
cmp
sbb
jae
or
xor
cmp
or
cmp
subl
fs
push
pop
push
inc
je
jb
outsl
aaa
dec
aaa
fs
adc
inc
jnp
popa
je
push
mov
jo
push
push
outsb
hlt
xchg
jnp
je
arpl
arpl
in
sub
imul
dec
xchg
js
arpl
pop
push
inc
mov
mov
popa
push
inc
sub
adc
dec
outsl
imul
xor
lahf
or
aad
sbb
cmp
cwtl
jg
adc
push
sbb
jne
mov
jns
inc
cmpsl
insl
popa
outsb
iret
nop
inc
push
jne
movsb
jg
sbb
adc
jle
int
jae
mov
fisubrl
mov
outsb
lock
lds
sub
outsl
bound
dec
jae
or
sbb
cmpsl
fidivrl
adc
mov
addr16
ljmp
lret
cmp
iret
insb
fcmovbe
push
and
xchg
inc
jae
push
xor
inc
xchg
jns
cmp
jne
push
fs
mov
push
xchg
pop
inc
movsl
sbb
adc
aad
ljmp
movsb
jbe
cmp
hlt
fwait
lcall
enter
push
out
push
inc
jnp
out
and
dec
inc
or
inc
adc
out
std
dec
fisubrs
mov
xor
inc
jbe
or
adc
in
movsl
inc
adc
and
dec
inc
xor
sbb
push
xor
adc
jo
mov
pop
pop
addr16
push
mov
or
xchg
jae
pop
push
inc
dec
nop
iret
test
pop
les
je
mov
or
lret
adc
sbb
or
dec
iret
lods
fs
sub
jne
cmpsb
adc
mov
xchg
fwait
sbb
cs
orb
adc
nop
jae
cwtl
dec
push
aaa
or
insl
test
addr16
jne
popa
sbb
mov
sub
cltd
push
enter
jo
imul
out
jle
push
pop
jbe
push
dec
stos
or
ss
jle
mov
push
xor
xchg
out
cmc
dec
loopne
inc
sbb
and
pop
adc
pop
cltd
mov
sub
xchg
or
js
pusha
xor
pop
mov
outsl
cmc
inc
outsl
sbb
lcall
and
adc
repz
push
sub
lret
sub
xrelease
mul
repz
inc
mov
test
push
or
dec
or
adc
cmpsl
or
insl
es
adc
jbe
and
adc
subl
imul
xchg
push
pop
jle
jo
inc
sbb
mov
or
adc
mov
push
or
bound
push
test
adc
cmp
push
arpl
inc
inc
loopne
ja
and
in
rcrl
and
addr16
fs
inc
sbb
sar
dec
out
xchg
aam
push
es
call
mov
and
inc
enter
jp
inc
inc
insb
adc
insb
lods
cmp
enter
sub
sub
jl
cmpsl
sub
dec
mov
cmp
lock
xor
xor
sub
mov
sub
nop
scas
push
sub
rcrb
fsubs
push
adc
and
push
xorl
iret
test
dec
or
andb
mov
or
mov
in
push
dec
outsl
bound
cwtl
inc
jne
movb
sub
fldt
sub
adc
inc
adc
es
mov
mov
or
mov
push
sbb
or
inc
rolb
push
imul
popa
sub
fs
mov
inc
lret
sbb
iret
mov
jg
jbe
mov
scas
mov
mov
and
pop
movsb
imul
push
out
jne
xor
dec
not
cltd
std
dec
mov
sub
mov
dec
das
push
sub
popf
pop
fs
dec
adc
push
fs
in
insb
cmpsl
sub
jae
out
pushf
pop
in
adc
lods
cmp
pushf
mov
inc
push
dec
outsl
pop
data16
mov
bound
inc
inc
push
dec
jno
cmp
pop
mov
jbe
inc
in
jb
adc
dec
and
push
out
nop
aad
lret
pop
lahf
movsb
push
push
or
arpl
popa
mov
inc
lcall
loope
adc
mov
xor
inc
movsb
cmpsl
roll
sub
dec
cmp
and
popaw
mov
jle
imul
sbb
inc
mov
xor
inc
je
call
sbb
jae
xchg
dec
in
xor
dec
shlb
imul
sbb
hlt
js
dec
push
jo
mov
lock
dec
dec
in
push
sbb
cmp
sub
cmp
outsb
clc
hlt
and
inc
dec
hlt
pop
je
jns
push
and
inc
cs
fiaddl
or
sub
sub
inc
sub
xchg
mov
jle
js
ret
inc
push
push
dec
push
cmp
ds
faddp
sub
es
dec
sub
pop
inc
sbb
rorb
test
fucomip
jo
test
fs
jns
mov
ret
bound
aas
mov
push
or
nop
pop
js
sbb
inc
xchg
rorl
pushf
sub
cs
add
addr16
imul
insl
jns
mov
stos
xor
fcoms
nop
fs
imul
or
lcall
cmp
imul
sbb
cs
jl
inc
mov
lret
bndstx
mov
jmp
xchg
adc
push
adc
push
hlt
in
mov
inc
dec
and
orb
pop
push
dec
dec
push
in
lret
mov
imul
pop
pop
inc
inc
push
pusha
or
mov
adc
data16
es
dec
pusha
cmp
sbb
inc
cld
inc
in
outsl
push
cli
xchg
pop
fists
push
mov
dec
sbb
fisttpll
cmp
pop
cmpsb
cmp
or
dec
pop
jae
loopne
cmpsb
lods
lock
xchg
sbb
and
sub
mov
dec
and
dec
pop
xchg
pusha
and
jl
mov
mov
push
add
int3
test
test
or
inc
fsub
mov
adc
or
or
adc
sbb
mov
sub
dec
xor
dec
push
mov
and
dec
jl
test
mov
mov
mov
inc
fsub
mov
adc
and
pop
adc
or
mov
and
dec
cmp
adc
fs
insb
xchg
js
addb
cwtl
adc
xchg
mov
mov
mov
les
dec
aam
fsubl
in
in
hlt
mov
adc
daa
add
adc
adc
sbb
mov
sub
xor
cmp
les
push
adc
pusha
dec
insb
xchg
js
addb
pushf
adc
mov
mov
loopne
in
and
dec
cld
lea
inc
jmp
mov
adc
shll
dec
inc
dec
pusha
mov
and
dec
adcb
pushf
mov
mov
inc
rcl
mov
adc
and
dec
cld
mov
sub
gs
push
inc
and
ss
ret
dec
push
and
insl
sub
adc
mov
aas
xchg
xor
into
pop
ds
imull
dec
and
outsb
outsl
xchg
adc
cwtl
cli
shll
sahf
adc
pop
sub
sbb
imul
je
aaa
jne
lock
aad
outsb
or
jne
lret
popf
xchg
mov
add
aas
shll
insb
adc
jnp
xchg
or
das
xchg
punpckldq
fwait
int3
out
sbb
das
mov
pop
ja
shll
inc
and
test
xor
adc
or
xor
cmp
xor
and
or
aaa
sub
scas
and
sbb
shll
pop
mov
inc
xor
inc
xor
sub
outsb
mov
sub
jmp
les
or
mov
or
fs
and
dec
adc
mov
arpl
dec
sub
jo
adc
adc
rcrl
inc
imul
bound
xchg
dec
pushf
arpl
fidivs
or
sbb
movsb
je
or
fwait
adc
or
outsl
cli
or
mov
push
cwtl
hlt
inc
jp
xchg
or
or
cmp
sub
imul
js
iret
sub
popa
jno
jp
call
js
mov
add
push
pop
jmp
jb
fs
inc
aam
int3
imul
cmp
iret
jo
popa
movsl
insb
jne
sbb
pop
fisttps
cmp
and
adc
adc
adc
xor
cmc
dec
std
out
inc
nop
repz
insb
sbb
mov
sbb
push
dec
js
aam
sub
mov
xchg
push
mov
xchg
stc
sti
cmpsl
ficompl
bound
gs
mov
xor
jne
sub
sbb
test
mov
and
mov
call
mov
enter
inc
inc
cmc
lret
or
or
loop
imul
rcrb
movsb
imul
push
xor
jo
movsb
rcll
fs
mov
shlb
mov
stc
push
out
add
push
xchg
sub
imul
and
mov
fs
imul
hlt
enter
popa
mov
arpl
jecxz
mov
popf
adc
dec
xor
jo
cs
sbb
in
or
sub
das
jo
or
push
or
xchg
cmp
out
xor
test
push
sub
or
add
das
inc
push
cmpl
jbe
js,pn
inc
mov
adc
xor
sbb
push
sub
mov
sbb
mov
inc
inc
push
mov
ret
jp
pop
in
cmp
cmp
stos
xor
insl
repnz
add
xchg
xchg
adc
popa
push
inc
push
adc
or
inc
dec
xor
inc
outsl
push
adc
mov
inc
and
or
dec
inc
inc
lcall
push
pop
decl
jo
mov
push
lods
sbb
inc
inc
sub
cmp
xor
das
xor
xor
stos
xchg
jae
and
sbb
mov
cmp
mov
cs
mov
js
cmp
sti
dec
dec
cmp
push
push
adc
push
push
dec
sub
cmp
inc
xor
insb
loope
xor
dec
outsl
adc
add
and
popf
and
xor
out
adc
xor
fisubrl
push
movsb
imul
sbb
aaa
fldcw
xchg
sbb
adcb
and
inc
inc
aas
and
push
adc
and
scas
push
xor
lret
ret
pop
push
lods
daa
cmp
cmpsl
push
arpl
shlb
pop
mov
push
xor
hlt
data16
out
pop
aas
insb
mov
outsb
jns
mov
push
inc
dec
dec
inc
jl
mov
je
pop
aaa
lods
stos
xchg
stc
dec
test
push
pop
adc
sub
cli
out
negl
xchg
jb
xchg
test
jns
enter
fwait
push
xchg
jle
mov
inc
cmp
dec
sub
sub
push
sub
and
movaps
push
je
xchg
pop
in
clc
sahf
and
scas
and
mov
pop
daa
rorb
pop
pop
add
pop
pop
dec
test
hlt
std
cmc
inc
andb
ss
imul
lods
adc
leave
sub
insl
inc
cmp
adc
fmulp
shrl
cmp
aas
inc
jge
xor
clc
inc
xor
pop
insl
cwtl
sbb
fimuls
or
ds
push
fs
pop
scas
cmpsl
sub
mov
outsl
xor
cmp
push
jbe
int3
sbb
test
fnstenv
pop
push
es
jne
lcall
mov
mov
mov
out
sbb
mov
outsl
lahf
lea
jb
lret
push
inc
and
dec
jge
push
jle
mov
lods
test
jg
cmp
jb
dec
insb
push
mov
leave
rol
cmp
sub
sub
cwtl
std
roll
push
insb
std
outsb
push
data16
stc
cmp
dec
xor
imul
dec
adc
aas
sub
cmpsl
push
xor
jae
adc
jne
cltd
jns
call
jge
add
stos
or
xor
test
or
and
hlt
movsl
imul
add
jne
and
and
mov
xchg
mov
mov
je
jae
sbb
push
dec
xchg
adc
sahf
jno
dec
int3
mov
dec
xchg
push
in
lods
cmp
in
jbe
movsb
jbe
pop
pop
outsl
dec
mov
in
fs
pop
xor
sub
rcll
inc
mov
popf
in
cmp
cwtl
sbb
xor
sub
sbb
fs
je
cmp
mov
dec
iret
adc
xchg
mov
dec
aam
xor
scas
or
add
and
adc
xor
and
xor
mov
sti
daa
faddl
pop
and
jns
mov
inc
loopne
and
imul
insl
dec
sbb
daa
inc
sub
sub
adc
addr16
sub
push
push
or
movsb
and
and
inc
mov
push
sbb
add
adc
mov
out
inc
shlb
sbb
in
or
push
dec
ss
xchg
test
push
jae
js
imul
std
xchg
test
or
ja
inc
pop
push
push
test
inc
push
movsb
cltd
adc
dec
mov
adc
and
jne
xor
sub
nop
lods
stos
cmp
pop
test
mov
or
or
je
jae
xchg
xor
repz
and
inc
dec
xor
sub
xor
xor
lcall
mov
inc
lahf
outsb
mov
cld
fdivrl
push
pop
inc
sbb
xchg
xchg
cltd
fmull
mov
mulb
outsb
aam
sbb
shlb
lahf
cmp
add
xchg
popf
rorl
inc
or
adc
push
xlat
sbb
lods
mov
push
mov
pop
test
cmp
inc
jbe
or
insb
lret
pop
in
mov
mov
hlt
dec
cmp
inc
push
jno
and
outsl
adc
mov
mov
or
insb
push
xchg
jb
scas
add
loop
push
push
push
sbb
stos
pushf
sar
dec
mov
push
mov
insb
hlt
rorl
xor
add
and
repnz
fcoms
and
and
dec
jmp
pop
mov
movsb
adc
fst
js
mov
and
gs
push
lods
lcall
jb
adc
xchg
mov
or
jl
mov
test
cs
sbb
adcl
fwait
adc
push
outsb
in
aaa
outsw
adc
repnz
lods
sub
dec
cmp
sub
pop
and
inc
push
ficompl
sbb
mov
adc
les
jns
inc
or
adc
sub
scas
mov
inc
and
cs
lahf
adc
and
cmpsl
imul
nop
btr
and
pushf
insb
imul
je,pn
jne
lods
or
pop
and
xor
mov
jg
pop
mov
inc
iret
popa
inc
cmp
rorb
mov
pop
sub
pop
mov
dec
test
sub
inc
outsl
inc
sbb
outsb
daa
inc
jecxz
push
dec
push
cmp
push
movsb
pop
push
inc
pop
cmp
rcrb
sbb
out
adc
aam
dec
xlat
xor
cmp
sub
sbb
stos
or
dec
je
stos
cmp
sub
mov
popf
jl
fmuls
lahf
lods
xor
mov
inc
pusha
add
data16
mov
sub
xchg
dec
sbb
stos
scas
test
sbb
mov
adc
mov
fs
inc
dec
push
stos
push
aam
iret
fisttps
pop
pop
arpl
mov
or
sub
dec
mov
jmp
test
dec
jbe
ret
repz
sub
push
out
shld
mov
dec
mov
or
or
in
rorb
mov
imul
mov
iret
nop
out
xchg
das
pop
inc
and
mov
imulb
inc
test
cmp
mov
arpl
clc
dec
call
sbb
jmp
jb
mov
add
shll
lret
testl
mov
sbb
xchg
xorl
aam
jns
or
jo
pop
sub
in
jmp
jl
adc
inc
xor
loop
shrd
loop
inc
dec
popa
subl
data16
in
pop
test
vmread
mov
popf
es
and
ljmp
imulb
flds
dec
iret
shl
ret
dec
inc
pop
inc
jns
cmp
jg
mov
lret
js
sub
sub
jae
xchg
cs
mov
xchg
mov
cmpsl
aam
jl
outsl
pop
push
or
pop
xchg
sub
or
lock
popa
bound
sub
jno
insb
jns
stc
push
mov
or
mov
pop
inc
hlt
das
cmp
and
nop
and
xchg
pop
out
ja
andb
pop
insb
fimull
bound
mov
stc
psrld
jmp
pop
pop
and
gs
dec
add
push
xchg
fwait
popf
jb
dec
dec
mov
sbb
jb
insb
decl
inc
adc
jae
insl
jae
or
cmp
nop
jmp
dec
shl
mov
icebp
movsl
adc
lcall
das
int3
fsts
pop
push
mov
fs
cmpsl
sbb
add
out
cmp
xchg
and
js
adc
push
insl
mov
and
push
sbb
int
or
xchg
movsb
xor
pop
cmp
mov
mov
dec
inc
push
push
inc
jo
adc
pop
lds
shr
xchg
loope
out
leave
mov
add
std
daa
out
fmuls
leave
test
addr16
sub
xchg
inc
inc
jl
jo
jle
push
fs
je
mov
adc
mov
in
imul
lahf
mov
inc
cs
adc
shrl
sbb
push
and
and
and
sbb
into
sbb
adc
xor
cld
dec
lcall
shl
push
out
mov
fsubl
fs
mov
pop
mov
mov
cmc
fnsave
and
push
dec
test
jb
ja
and
jo,pn
mov
iret
pop
inc
lret
movsl
adc
push
insb
aas
lret
das
push
push
lock
cmp
addr16
hlt
and
outsl
notb
repz
dec
sub
inc
mov
mov
pop
xchg
fwait
dec
dec
adc
push
pop
or
add
adc
jo
inc
xchg
leave
adc
inc
sbb
jle
shrb
das
dec
adc
mov
push
mov
mov
sub
jge
jge
mov
fistpl
and
sub
push
imul
arpl
btc
push
push
movsl
ds
and
pop
and
mov
je
in
frstor
push
sub
xor
scas
xchg
pop
mov
xchg
lahf
pop
sub
cmc
jo
xor
sub
adc
dec
fxch
ret
call
and
mov
dec
mov
push
inc
sbb
push
cmp
inc
fmull
adc
mov
and
lahf
cmp
repnz
sbb
and
inc
and
inc
rorl
cmp
pop
jecxz
jnp
cld
fs
mov
or
mov
xchg
xchg
mov
jg
pop
xor
cs
and
xlat
test
out
fistl
in
jl
inc
jae
and
iret
jg
int
mov
mov
in
fcmovnbe
sbb
dec
mov
inc
aaa
xchg
test
jo
ret
xor
test
pop
cmp
inc
and
jbe
shlb
addr16
sbb
rcr
out
dec
pop
sbb
bnd
xchg
sahf
cs
sub
loope
mov
aas
push
inc
add
aam
in
sbb
and
or
sub
jo
cmp
or
inc
test
popl
bswap
jl
dec
adc
adc
adc
adc
and
cmp
cli
xchg
add
add
cmp
mull
lahf
mov
call
xor
sbb
lock
rorl
adc
mov
testl
fisubl
dec
cld
call
cli
adc
mov
in
sub
and
movsb
jmp
mov
shr
int3
out
movsl
insl
das
or
and
in
pop
pushf
das
dec
lock
inc
popa
mov
mov
cli
sbb
dec
pushf
orb
mov
fs
adc
lahf
and
rcll
and
xchg
mov
push
gs
negl
aas
je
jp
movsb
xchg
daa
ljmp
xchg
shrl
icebp
mov
xor
jo
test
rorb
dec
xchg
adc
lods
inc
sbb
inc
pop
ficomps
jbe
dec
xchg
mov
sub
inc
cwtl
sub
addb
test
in
or
inc
in
sub
les
cmp
ljmp
mov
scas
pop
jmp
andl
sub
sbb
data16
pushl
test
in
lret
clc
std
and
inc
sub
pusha
push
pop
mov
cmpb
cltd
xchg
ja
ja
cmp
jge
outsl
inc
mov
dec
loop
pop
lahf
cli
pop
mov
insl
scas
or
pop
out
outsb
adc
mov
movsl
mov
lahf
fs
push
push
mov
popf
push
js
or
data16
test
repnz
pusha
decb
dec
sbb
jge
xchg
or
inc
gs
je
mov
jns
hlt
push
sbb
inc
sub
popa
push
scas
int
rolb
daa
inc
push
rcl
and
mov
push
leave
or
and
test
dec
cs
add
lds
dec
popf
inc
shrl
fsubl
mov
inc
stc
dec
ja
sub
adc
mov
ss
adc
jmp
leave
pop
cli
mov
cmp
dec
xor
fisubrl
jmp
rcrb
pusha
daa
and
ljmp
dec
mov
cmp
push
sub
fisubrs
leave
outsl
imul
repz
outsb
adc
jmp
mov
stc
bound
xchg
jge
sub
xor
jge
mov
jo
je,pn
jns
inc
xor
outsl
js
push
push
and
xor
mov
ja
cwtl
dec
xlat
pop
cmp
roll
lods
lret
push
test
or
mov
test
das
in
mov
mov
in
and
cs
outsb
repnz
sub
push
arpl
sub
daa
sahf
jmp
xor
xchg
popf
ret
inc
bound
jge
push
xorb
outsl
adc
adc
shlb
mov
nop
and
mov
cs
and
pushf
lea
sti
das
mov
out
xchg
out
push
xchg
dec
adc
xchg
repz
cmp
push
sbb
xor
les
mov
nop
or
push
cmp
aam
insl
jb
sub
in
fiadds
sbb
push
or
into
pop
lods
jns
outsb
test
xor
xchg
in
test
jmp
add
push
mov
or
dec
mov
xchg
adc
sbb
sbb
outsb
scas
or
frstor
or
jb
loope
mov
rorb
test
xor
cmp
mov
pop
inc
cmpsb
dec
cltd
and
jbe
lods
adc
jmp
dec
cmpsl
sbb
enter
xor
js
cmpsl
pop
mov
pop
ror
push
mov
inc
jo
out
in
add
fs
cmp
pop
cld
adc
cmp
mov
ficoms
sbb
dec
or
ror
sub
daa
addr16
cli
jge
add
out
jg
add
and
and
fidivs
push
fnstsw
dec
loop
nop
cmp
sub
leave
jae
add
adc
lcall
lcall
or
mov
and
sub
out
jns
sub
insl
push
rorl
mov
pop
inc
stos
ds
fdivl
or
adc
sub
aam
sub
repz
cwtl
push
test
jmp
mov
add
in
lret
sub
sbb
xchg
shrl
es
mov
push
mov
dec
jo
movsl
jns
jp
xor
js
dec
push
cmpsl
push
jnp
jp
lahf
cmp
dec
push
push
jne
jno
dec
or
or
imul
insl
jmp
fiadds
ds
leave
inc
xchg
jmp
std
data16
iret
adc
or
nop
rcrb
mov
xor
ficompl
dec
push
aas
daa
lea
loop
push
adcb
cmp
and
mov
jnp
mov
mov
or
dec
pop
mov
xor
jne
ret
xchg
mov
ljmp
adc
ret
push
lods
xorl
pop
sub
dec
dec
sub
dec
push
sarl
movsl
jne
fldcw
arpl
cmp
jb
push
push
lods
rorl
dec
cld
cmpsb
push
xchg
sti
mov
data16
push
test
xor
mov
jp
cmp
out
xchg
scas
add
inc
pushf
jp
add
jle
nop
sahf
or
sarl
popf
push
in
es
dec
xchg
pop
xor
adc
and
lods
sub
mov
jne
test
popa
out
dec
mov
push
mov
and
fnstenv
dec
add
pop
int
sub
cmp
icebp
stos
adc
jns
mov
inc
xlat
mov
cmp
jo
in
cmp
xlat
mov
inc
mov
cmp
jecxz
aad
jnp
dec
add
data16
push
je
mov
or
sub
loopne
jb
icebp
dec
dec
add
insl
jo
in
dec
jle
xchg
jne
je
mov
mov
outsl
jae
pusha
add
sub
xor
xor
cmp
mov
pusha
adc
jo
js
andb
inc
nop
cwtl
mov
les
loopne
mov
adc
and
add
dec
sbb
xor
mov
dec
and
dec
pusha
xchg
push
mov
movsb
dec
lods
xchg
mov
mov
fcoms
loopne
call
adc
and
inc
sbb
mov
adc
cmp
dec
xchg
push
and
je
jl
mov
dec
pushf
xchg
test
mov
mov
loopne
call
push
cmp
adc
mov
adc
inc
dec
dec
xchg
pop
and
js
adcb
and
dec
test
mov
rolb
in
in
and
pop
sbb
inc
adc
mov
adc
cmp
dec
xchg
push
and
pusha
push
and
dec
nop
xchg
cwtl
and
mov
dec
fcoml
clc
add
fsts
and
sub
mov
dec
and
dec
pop
xchg
and
jl
test
nop
and
dec
mov
inc
mov
shlb
dec
in
in
and
inc
cld
add
pushf
icebp
xchg
js
in
and
pop
enter
xchg
push
and
pusha
push
and
dec
mov
test
mov
adc
and
dec
loopne
in
and
aaa
add
or
and
dec
xor
adc
dec
insb
xchg
je
addb
cwtl
adc
xchg
shlb
inc
aam
mov
adc
and
inc
or
inc
sub
mov
call
inc
fs
mov
and
dec
mov
movsb
lods
mov
int3
xchg
aam
loopne
call
add
add
sbb
xchg
sub
xor
cmp
and
dec
push
xchg
pop
and
push
andb
xchg
xchg
pushf
and
adc
and
dec
fcoms
hlt
inc
or
mov
inc
mov
pop
and
dec
insb
xchg
js
addb
cwtl
adc
mov
fmull
cld
inc
add
ror
or
sbb
and
sub
mov
call
inc
pusha
push
and
dec
mov
movsb
lods
mov
aam
loopne
in
inc
hlt
cld
mov
fucomp
and
pop
enter
or
and
dec
push
mov
and
dec
je
test
mov
mov
rclb
in
lock
and
je
mov
pop
or
adc
cmp
mov
pusha
adc
je
jl
test
mov
mov
dec
rclb
lock
mov
or
mov
adc
and
pop
mov
adc
dec
adcb
and
dec
mov
mov
aam
fcoml
call
mov
adc
and
sub
dec
cmp
inc
dec
mov
fs
dec
jl
mov
nop
inc
cwtl
movsb
mov
mov
inc
fsub
mov
adc
and
add
dec
sbb
xor
hlt
dec
push
xchg
pop
and
js
test
mov
dec
pushf
xchg
test
mov
mov
fsubs
dec
in
xchg
hlt
jo
cmpsl
rorl
adc
sbb
and
sub
cmp
push
pop
mov
and
dec
adcb
mov
and
dec
rclb
loopne
call
pop
pop
fs
or
dec
and
inc
dec
mov
fs
dec
je
jl
mov
mov
mov
inc
aam
mov
adc
and
pop
adc
sbb
cmp
inc
dec
push
mov
push
xchg
andb
inc
xchg
mov
and
dec
enter
fadds
mov
pop
add
or
or
adc
sbb
mov
xor
cmp
mov
pop
adc
dec
je
jl
test
mov
dec
enter
faddl
mov
pop
add
or
xchg
adc
sbb
and
mov
adc
dec
dec
push
xchg
pop
and
je
jl
test
dec
xchg
xchg
pushf
and
adc
and
dec
fcoms
hlt
cld
mov
orl
and
xor
cmp
mov
and
dec
insb
xchg
je
jl
mov
movsb
pop
loop
mov
mov
adc
and
dec
in
lock
loopne
orl
dec
sub
adc
dec
pop
xchg
and
jl
test
nop
and
dec
pushf
xchg
test
mov
ror
fcoms
in
in
dec
hlt
xchg
cld
adc
and
sbb
mov
adc
and
dec
dec
xchg
push
and
jo
jl
test
dec
pushf
xchg
movsb
and
rclb
fsubs
dec
in
xchg
clc
jo
scas
or
and
xchg
xor
cmp
dec
push
mov
and
dec
jl
test
nop
inc
cwtl
mov
and
dec
les
in
mov
push
inc
or
adc
and
xor
dec
push
mov
fs
dec
jl
test
mov
mov
dec
enter
faddl
mov
adc
add
adc
and
cmp
dec
adc
pop
dec
fs
insb
and
orb
mov
and
int3
adc
and
dec
call
mov
mov
adc
and
dec
and
sub
xor
cmp
and
dec
pop
xchg
and
jl
test
mov
dec
mov
inc
mov
fsubl
dec
lock
clc
sbb
loope
or
sub
inc
adc
push
dec
pusha
xchg
insb
and
mov
movsb
dec
lods
xchg
mov
aam
fcoml
in
in
dec
hlt
xchg
cld
sbb
shll
or
inc
and
mov
adc
dec
dec
push
xchg
pop
and
push
andb
xchg
xchg
pushf
and
dec
les
fsub
mov
adc
and
xchg
and
sub
xor
mov
dec
dec
xchg
push
and
push
andb
cwtl
xchg
movsb
and
enter
fmuls
xchg
in
and
inc
cld
add
mov
mov
and
dec
xor
adc
dec
pop
xchg
and
js
mov
dec
mov
inc
ror
rclb
fsubs
dec
call
and
mov
adc
mov
sub
xor
inc
xchg
dec
and
insb
mov
and
dec
xchg
xchg
mov
mov
and
dec
fcoml
lock
mov
orl
and
xor
cmp
mov
and
dec
jo
jl
mov
mov
pop
loop
ror
aam
loopne
in
dec
hlt
xchg
cld
sbb
loope
pop
and
push
or
mov
dec
and
dec
pop
xchg
and
js
mov
dec
movsb
xchg
lods
and
rclb
fsubs
dec
hlt
xchg
cld
adc
mov
and
shll
dec
inc
push
pusha
mov
and
dec
xchg
xchg
pushf
and
enter
fmuls
xchg
call
or
or
sbb
sub
dec
cmp
inc
dec
mov
and
dec
jo
js
addb
pushf
adc
shlb
inc
fsub
mov
adc
and
inc
add
or
adc
sbb
sub
cmp
call
inc
pop
mov
and
dec
mov
movsb
lods
mov
rolb
mov
adc
and
inc
add
jmp
and
mov
cmp
shll
push
inc
pop
mov
and
dec
mov
movsb
mov
mov
dec
loopne
in
and
inc
cld
or
leave
xchg
or
cmp
adc
dec
jo
js
addb
cwtl
adc
xchg
mov
fmuls
lock
clc
mov
sbb
xor
cmp
inc
dec
mov
pop
and
dec
insb
xchg
jl
test
mov
mov
mov
aam
fcoml
loopne
in
dec
lock
clc
push
fnsave
sbb
and
sub
xor
cmp
pop
bound
push
loope
repnz
cmp
clc
fs
jmp
push
mov
gs
arpl
stos
adc
mov
cmp
les
insb
bnd
mov
sbb
arpl
or
ds
imul
mov
addr16
inc
adc
sub
lods
xor
addr16
and
aam
and
add
pop
inc
insb
test
jo
repz
bound
jae
scas
and
xor
sbb
or
inc
or
outsl
inc
xor
jne
pop
or
stos
sub
cli
dec
jne
adc
jae
adc
or
je
iret
xor
ja
test
jb
imul
repnz
movsl
xor
lahf
and
jo
mov
xor
jns
sbb
mov
adc
push
js
lret
or
js
addl
jbe
fmuls
imul
push
insb
loop
js
jp
insl
test
mov
pop
or
fs
adc
pop
jbe
mov
popf
cmp
ljmp
ja
inc
mov
cmpsb
mov
inc
cmp
inc
gs
or
adc
and
mov
sbb
fimuls
mov
test
adc
pop
mov
gs
imul
dec
mov
outsl
jmp
or
dec
popf
jle
adc
jns
or
adc
or
or
xchg
mov
lahf
xlat
or
inc
je
inc
sbb
into
cwtl
in
insl
popf
fsts
gs
jae
or
mov
adc
insb
lcall
fisttps
movsb
cmp
adc
lods
outsb
push
popa
adc
sub
sbb
cmp
push
data16
stos
je
mov
jne
sub
je
xchg
push
repnz
js
or
aam
mov
sub
or
cld
xchg
jns
pop
dec
or
daa
dec
adc
jno
imul
xchg
nop
add
or
inc
or
sub
ljmp
lods
push
scas
jge
adc
push
jo
dec
addr16
xchg
call
lea
js
jb
mov
adc
imul
mov
ja
inc
cmp
or
insl
scas
adc
in
dec
movl
inc
dec
out
push
dec
lret
dec
scas
les
js
sbb
jns
stos
sub
mov
mov
jns
sbb
and
push
imul
in
pop
push
sub
pop
sbb
mov
sbb
jp
lahf
xchg
jae
repnz
and
popa
insb
js
xor
adc
ret
imul
mov
and
inc
adc
push
leave
mov
ja
fsts
js
pushf
jns
and
imul
mov
sbb
mov
mov
xor
je
adc
push
fs
push
lods
or
mov
sub
popa
imul
adc
or
inc
sub
int3
aam
mov
inc
imul
jns
in
adc
or
pop
mov
adc
les
aas
jge
cli
gs
or
adc
push
push
rorb
je
xor
ja
or
sub
jecxz,pt
adc
popa
sub
pushf
adc
gs
jecxz
lahf
sub
iret
aam
and
adc
or
ficompl
rcrl
or
lods
xor
jne
pop
or
out
das
je
nop
xchg
sub
in
je
jp
xor
jg
rcrb
jg
jae
and
jmp
sub
mov
or
adc
inc
mov
or
insl
mov
jae
mov
ja
mov
and
add
in
inc
jecxz
outsb
imul
sbb
jo
mov
adc
dec
cltd
addr16
cmp
jns
jmp
jmp
imul
call
sbb
fistpl
inc
pushf
or
push
sub
push
push
jp
or
movsl
outsb
data16
leave
xor
inc
aam
sbb
dec
sbb
xor
or
fisttpll
outsb
bound
jo
nop
xchg
orl
fpatan
mov
jns
mov
add
sbb
es
je
aam
fistpl
pop
mov
push
mov
push
loop
in
push
fldt
outsb
or
movsl
lret
push
or
mov
incb
nop
rolb
adc
mov
and
insb
adc
jmp
jne
nop
fistl
outsl
repz
into
insl
js
ds
fbld
ffree
repz
mov
inc
or
outsb
loope
or
jne
imul
jle
mov
sti
mov
push
adc
movsl
sbb
push
inc
cmp
out
test
sbb
mov
insl
bound
inc
xchg
sub
or
dec
and
pop
and
icebp
cmp
inc
add
or
popf
jle
adc
xchg
inc
dec
pop
gs
cs
sub
clc
dec
repnz
rcrl
dec
pop
push
daa
inc
mov
lea
xchg
sbb
xlat
cltd
int3
mov
in
push
adc
outsl
adc
mov
das
loop
cmpsb
sub
push
cmp
mov
mov
adc
imul
or
sbb
push
test
adc
imul
or
adc
bound
arpl
clc
imul
fildll
xor
adc
push
push
mov
daa
xchg
jp
cmp
or
sub
lock
cmp
andb
imul
or
int
les
mov
jae
xor
and
add
outsl
imul
je
adc
add
jne
xchg
int3
push
adc
dec
in
or
je
adc
stc
push
sbb
cmc
js
bound
mov
outsb
dec
sub
ja
jecxz
dec
push
les
dec
pop
leave
sbb
test
sbb
ret
lcall
sbb
sub
cmp
lock
sbb
jo
daa
jo
xor
sub
add
fildll
sub
mov
fcoms
imul
jbe
in
inc
xchg
adc
insl
adc
and
lock
leave
mov
jg
xchg
lods
mov
adc
repz
fisubl
mov
je
sbb
clc
jne
mov
adc
mov
inc
push
or
dec
xor
cmpsb
push
mov
mov
pop
xor
push
or
ret
fidivl
sbb
scas
adc
adc
lea
inc
add
popf
icebp
insb
notb
outsb
data16
insl
adc
movsb
sbb
adc
imul
dec
addr16
jb
mov
and
pop
dec
arpl
frstor
adc
sbb
leave
aam
and
cmc
fs
scas
sbb
sbb
or
cltd
push
rclb
adc
jns
pop
add
sbb
push
mov
int
cmpsb
adc
adc
inc
popf
inc
lcall
bound
insb
mov
pop
xchg
orl
lret
dec
adc
xchg
pop
arpl
lea
outsl
xchg
pusha
test
push
call
mov
or
xor
popa
mov
dec
aam
or
repnz
inc
adc
js
mov
jo
gs
or
aaa
imul
mov
adc
js
fs
and
js
nop
lds
or
xchg
inc
or
sub
jns
cmp
imul
adc
test
sub
imul
or
mov
or
ret
lods
ficompl
data16
adc
xchg
push
cld
stos
and
push
dec
add
or
mov
or
xor
adc
repnz
mov
inc
imul
leave
cli
push
shrb
or
sahf
inc
dec
xchg
jbe
adc
insb
adc
adc
sbb
mov
dec
mov
mov
icebp
dec
or
mov
and
adc
ja
inc
je
cmpsb
pop
lock
movsb
adc
lds
jg
xor
dec
js
imul
test
mov
in
xchg
and
insl
dec
push
arpl
or
push
jp
or
jle
loope
into
stos
leave
adc
pop
inc
adc
xchg
scas
and
int
pop
and
push
outsb
adc
movsb
xchg
repz
out
push
pop
or
sbb
lods
lcall
insb
mov
or
or
test
adc
jns
push
jp
push
loop
outsl
adc
or
add
je
arpl
xchg
xchg
mov
ss
rorb
push
push
icebp
mov
pop
dec
and
mov
scas
xchg
imul
sub
add
push
xchg
or
or
in
inc
movsb
lret
jns
and
dec
popa
jno
pushf
and
sbb
or
inc
and
loope
mov
aaa
sahf
mov
mov
insb
push
or
ss
push
xor
pop
lods
or
outsl
or
jae
ljmp
adc
or
push
sub
mov
pop
addr16
sbb
lret
imul
data16
adc
mov
ljmp
or
dec
push
sbb
and
cltd
fistl
sub
mov
ret
pop
and
sahf
cmp
dec
or
mov
add
sbb
shll
adc
jp
mov
stc
dec
ret
inc
or
lcall
push
outsb
adc
gs
fdivrs
push
jae
jb
out
jp
push
leave
lret
push
and
mov
scas
fists
jg
add
stos
inc
pop
adc
scas
imul
dec
adc
mov
and
mov
insl
adc
je
adc
js
ficoml
or
mov
sbb
lds
jecxz
and
push
or
jnp
xchg
xchg
and
sub
int
inc
dec
outsb
lcall
in
popfw
sbb
sub
insl
mov
movsl
inc
or
imul
adc
mov
and
sub
les
sub
adc
jne
mov
aam
add
adc
fwait
add
lods
lcall
mov
xor
je
popa
jbe
and
js
push
call
sub
push
jae
jns
or
mov
adc
and
lcall
bnd
adc
fdivrl
lods
pop
mov
pop
iret
dec
push
add
mov
dec
data16
mov
rclb
movb
or
std
fsts
imul
aas
push
or
repnz
aas
or
jns
ja
sub
js
imul
outsl
rorl
mov
pop
loop
rclb
mov
js
aad
sbb
repnz
repz
push
sub
fiadds
pop
jnp
movsb
or
insl
or
adc
inc
out
dec
jbe
or
jmp
dec
jo
frstor
mov
cld
push
mov
xor
sbb
test
inc
cmpsb
loop
cmpsl
dec
popf
cmp
call
test
dec
mov
lods
fdiv
jbe
adc
adc
mov
in
in
or
xchg
and
aad
xchg
mov
xchg
ss
adc
jp
pusha
adc
outsb
popf
adc
adc
loopne
push
add
add
fs
jbe
sbb
sbb
cmc
ss
inc
or
lahf
jmp
mov
or
cmpsb
mov
dec
or
ret
push
or
fnstcw
imul
mov
aas
cli
or
adc
fs
cmp
and
push
adc
mov
adc
cmp
push
sub
enter
push
repnz
cmpsl
sbb
inc
or
xchg
dec
orb
popa
and
xchg
sbb
cmp
jl
test
arpl
in
ret
xchg
or
dec
or
mov
frstor
scas
adc
pop
adc
lcall
mov
push
or
jae
shrb
or
sub
dec
xor
enter
adc
in
insl
or
rcl
test
pop
arpl
inc
fidivrl
sub
sbb
inc
or
in
sbb
icebp
imul
mov
stc
and
push
in
mov
pop
ss
sbb
sub
ds
or
pop
jo
adc
xor
jb
push
insl
sbb
pop
sub
pop
rcll
pop
pushf
xor
int3
jnp
push
jne
gs
testb
cwtl
jge
cwtl
sbb
lock
jo
movsb
adc
test
fwait
sbb
lea
mov
pushf
or
sbb
and
dec
sbb
sbb
shlb
pop
adc
push
jae
sbb
rclb
fcoms
jp
rolb
jl
in
sbb
popa
and
rcrl
xchg
mov
mov
jecxz
adc
cmp
dec
pop
movsb
mov
pop
les
adc
std
and
or
and
into
in
adc
std
cmpsb
jo
or
ja
or
jae
int3
adc
cwtl
data16
mov
filds
rclb
rcr
adc
mov
fs
cmp
mov
adc
dec
dec
adc
loopne
test
cltd
push
cmp
or
xchg
mov
or
dec
rorb
gs
push
mov
or
orb
insb
and
lret
sbb
adc
lock
popa
and
or
inc
or
out
cmpsl
je
stos
test
insl
sbb
and
movl
jno
adc
push
nop
cmp
sub
pop
jno
ds
insb
inc
adc
adc
sub
xchg
insb
ss
sahf
jl
ficompl
jnp
xor
gs
mov
stos
adc
and
shld
out
icebp
fnsave
mov
push
xchg
and
or
and
jecxz
push
faddl
push
sbb
xor
insb
rclb
jo
push
or
push
aad
sbb
je
outsl
sub
cs
lret
je
xorl
outsl
aad
int3
fbld
into
addr16
ficompl
dec
pop
sub
lods
mov
lret
rcrl
ss
adc
adc
lret
mov
insb
mov
ja
or
cmp
jns
test
les
or
mov
sbb
sbb
shrl
jns
adc
in
adc
inc
or
pop
or
sbb
cwtl
insl
lods
dec
lret
or
lcall
aaa
or
adc
jns
mov
lcall
push
in
xchg
or
dec
xchg
adc
hlt
dec
adc
jnp
inc
push
aam
sbb
leave
subl
adc
or
stos
imulb
adc
inc
cmp
lods
shlb
les
adc
mov
xlat
adc
popf
loop
inc
or
stos
or
rcr
sbb
push
out
insb
stc
test
mov
mov
jle
aam
jne
daa
inc
mov
cmp
push
test
push
adc
pop
push
xchg
jo
in
movsl
sbb
inc
or
sub
jns
mov
sub
xchg
fisubl
and
in
mov
inc
stos
lea
and
cmc
sub
movsl
sub
jo
xchg
push
xor
jae
push
adc
inc
push
dec
cmp
and
movsb
or
gs
jae
sbb
push
jb
aas
inc
and
sub
xchg
sbb
inc
or
sbb
fisubrs
ja
jns
adc
jne
add
hlt
and
xor
mov
jns
pop
push
xchg
push
fs
adc
or
sub
hlt
and
adc
xchg
fistl
scas
xchg
sbb
push
and
mov
fdivl
jo
cwtl
dec
adc
notb
test
outsl
xchg
pop
cmpsb
pushf
outsl
adc
sbb
push
push
or
bound
rcr
and
jl
dec
or
inc
push
outsb
jl
dec
jnp
inc
jl
inc
data16
or
jns
imul
or
mov
or
nop
sbb
or
and
aad
js
xchg
sub
or
sbb
ja
jl
sub
ror
icebp
lods
sbb
gs
pop
sub
lods
popa
adc
jge
dec
bound
addr16
adc
push
lcall
mov
mov
pop
call
sub
xor
pushw
cmp
into
or
lret
outsb
out
inc
enter
mov
data16
jbe
pop
mov
sbb
jae
jp
inc
fs
push
mov
mov
mov
adc
ficomps
bound
loop
lcall
call
push
or
imul
and
push
sub
fmull
lret
dec
lret
jb
mov
push
dec
mov
sahf
and
mov
rol
dec
xchg
mov
adc
call
cmp
adc
pop
jb
imul
adc
iret
leave
insl
mov
jns
lcall
pop
rcrl
or
or
movsb
mov
in
stos
or
movlps
push
shl
data16
movsb
loopne
adc
outsb
dec
nop
out
bnd
sbb
xchg
arpl
lahf
imul
addr16
xchg
popf
sbb
adc
sub
adc
lds
out
sbb
nop
push
ljmp
adc
push
sarl
cmp
fwait
mov
xchg
rcll
or
mov
sbb
dec
mov
jecxz
dec
idivl
enter
xor
and
sbb
inc
repnz
mov
dec
or
and
jp
push
sbb
inc
or
mov
test
and
stc
mov
or
and
push
cmp
sbb
test
mov
inc
loope
mov
dec
fwait
loopne
je
mov
and
int
insl
add
jl
rclb
add
insb
mov
lock
push
adc
xchg
sbb
nop
mov
jmp
ja
xchg
push
and
fwait
sbb
loopne
adc
adc
or
fstp
adc
arpl
popa
clc
push
lret
popa
mov
outsl
xchg
in
cwtl
dec
mov
or
adc
jb
jge
hlt
dec
mulps
cmpsb
sub
loopne
lret
and
cmp
push
sub
cmpsb
adc
lods
inc
sahf
adc
lods
adc
hlt
jns
lods
test
stos
leave
loopne
adc
mov
add
sbb
xchg
and
push
bound
adc
or
add
cmpsl
dec
mov
sub
sub
jns
and
and
ror
adc
mov
pop
xchg
inc
or
adc
les
int
push
xchg
inc
or
push
adc
xor
ja
f2xm1
jp
popa
mov
push
insb
in
dec
push
lcall
mov
mov
adc
bound
adc
add
sub
lea
or
jp
sbb
push
stc
arpl
mov
xchg
insb
int
cmp
ficoml
push
int3
lock
pop
inc
or
mov
push
fldpi
push
pop
stos
pop
fildll
pop
icebp
mov
or
dec
sbb
and
jo
ret
push
xchg
sub
sbb
in
cmp
jp
push
sbb
jl
inc
imul
mov
in
sbb
inc
stos
pop
add
mov
ds
sub
sbb
dec
pop
xchg
xchg
jb
xchg
and
push
sub
pop
fistpll
push
lock
jp
add
adc
and
or
insb
popa
sub
jns
push
xlat
push
mov
push
pop
mov
or
insb
lret
and
insl
xorl
lea
adc
movaps
xor
push
or
outsb
movsb
mov
in
jb
ss
xor
rcrb
fnstcw
adc
xchg
mov
dec
adc
cltd
and
jbe
sub
inc
add
test
sub
leave
pusha
jb
addr16
pop
cmp
fwait
lret
xchg
or
mov
push
jne
adc
add
rclb
mov
mov
adc
ret
mov
jb
mov
into
or
jb
push
jmp
push
pop
dec
popa
dec
mov
dec
dec
adc
adc
ja
gs
jb
dec
dec
push
les
movsb
loop
adc
inc
adc
bound
jns
je
cmpsl
cmp
les
or
push
inc
add
adc
inc
jl
cmp
inc
cmp
inc
xor
pop
inc
push
cmp
xor
add
cmp
push
lock
pop
dec
pop
popf
cmp
push
or
add
xor
xor
push
xorb
inc
sub
stc
sbb
mov
inc
or
add
shlb
xor
mov
jo
lods
ret
push
or
or
or
clc
rolb
into
or
cmpsl
dec
js
inc
and
pop
sbb
jb
cmp
push
loopne
or
cmpl
jne
int3
xor
add
sbb
cmp
ret
xchg
incl
add
enter
call
mov
and
xchg
cmp
jo
xor
pop
xor
ret
icebp
push
jbe
adc
and
test
push
cmpsb
ret
pop
pop
add
push
add
inc
ljmp
stos
push
push
push
loop
jb
pusha
add
add
test
ret
dec
fs
movsb
in
popf
aad
fucom
int3
and
adc
sti
iret
dec
or
test
mov
and
dec
and
and
jno
test
jge
inc
jl
outsb
pop
je
xchg
out
les
ds
jo
mov
xor
sbb
xor
dec
dec
and
sbb
xor
dec
inc
mov
xor
or
sbb
inc
shlb
xor
inc
mov
add
mov
test
add
inc
and
inc
out
add
out
inc
adc
mov
ret
cmp
or
sub
lods
inc
dec
inc
inc
mov
inc
dec
orb
mov
mov
sub
pop
inc
add
jae
gs
push
or
sbb
push
and
adc
imul
mov
inc
mov
xchg
and
lcall
addb
or
xor
and
sub
sbb
or
pop
pop
push
inc
inc
loop
sbb
push
enter
aaa
sahf
loope
cmp
leave
imul
push
xlat
imul
mov
orb
or
cli
hlt
inc
cs
push
add
bound
sub
xchg
subb
cmp
rorb
sub
jo
or
aad
dec
je
movsl
inc
dec
bound
xor
int3
rolb
jge
cs
dec
push
lds
addb
test
jo
lods
inc
mov
mov
inc
jne
je
and
push
inc
inc
push
insl
jo
push
or
push
dec
push
pop
mov
fistl
das
rorb
fsts
shl
ljmp
fcmovnb
pop
mov
inc
sahf
repnz
dec
inc
push
jle
lods
aas
add
or
adc
repz
hlt
adc
or
push
gs
mov
or
jg
test
inc
mov
xor
rcl
addb
xchg
sub
add
push
sbb
add
adc
xor
in
add
cli
js
out
jo
cwtl
out
loopne
and
adc
push
jmp
xchg
xchg
push
out
arpl
or
mov
lea
enter
imul
xchg
shrb
xchg
aam
sbb
pop
popf
fdivrl
adc
adc
mov
call
pushl
idiv
fwait
mov
test
cld
arpl
outsb
push
sbb
iret
dec
repz
in
fadd
sbb
gs
shl
popf
xchg
es
leave
add
cwtl
out
sub
imul
cwtl
and
pop
add
ficomps
fwait
sub
ss
sbb
adc
inc
shlb
test
jnp
bound
fbld
pop
leave
mov
push
int3
adc
mov
leave
iret
lret
addr16
or
daa
fiadds
sbb
xor
pusha
enter
dec
ret
shlb
inc
ja
pop
jno
addr16
fdivrp
in
leave
jmp
cli
cmp
std
div
ljmp
in
int
adc
jle
cmpsb
or
je
sti
std
fistl
ljmp
cmp
mov
call
jl
or
cli
fs
jg
sub
clc
and
mov
int
mov
pop
inc
add
and
push
sbb
push
outsl
xor
mov
push
rorb
jl
add
jle
inc
rcrb
or
dec
scas
sub
inc
push
jmp
jae
mov
dec
inc
loope
ret
sti
sub
movaps
push
push
xchg
fsubrl
cmp
xchg
out
sbb
mov
inc
cltd
ss
cmp
xchg
cld
add
push
xchg
in
adc
adc
jb
and
lahf
jge
sub
jp
repz
rcrb
mov
xlat
scas
cmp
nop
addr16
inc
xor
addr16
inc
outsl
mov
imul
je
and
pop
pop
rcll
leave
jge
dec
mov
or
mov
and
xor
push
cmp
xchg
sti
leave
or
sub
lock
movsl
adc
ds
xchg
xchg
push
scas
sub
adc
bound
cmp
in
xor
inc
lods
xor
aas
adc
ss
inc
stc
push
out
mov
xchg
inc
nop
jmp
dec
xchg
gs
imul
cltd
cmpsl
cmc
je
js
jp
cmp
outsl
cmp
inc
and
pop
mov
xchg
push
inc
aad
mov
popf
shl
rcrb
lods
push
out
adc
or
add
xchg
int
jg
add
out
push
sbbl
int
add
je
inc
xchg
add
sub
jb
test
inc
inc
jns
dec
das
jp
xchg
xlat
sub
sub
ja
les
sub
xor
lea
sub
cld
or
dec
je
cmp
jecxz
orb
adc
pop
dec
or
rclb
roll
mov
pop
inc
test
add
mov
sbb
call
dec
pusha
add
xor
mov
in
aam
xor
push
jns
inc
xor
std
add
inc
fs
mov
shlb
or
sbb
adc
dec
push
adcb
adc
push
outsb
jb
or
incb
push
inc
xor
or
or
add
dec
push
gs
mov
add
jecxz
sub
sub
mov
adc
sbb
add
ret
add
and
les
jo
aaa
sub
or
gs
adc
inc
movsb
enter
pop
inc
je
enter
nop
and
and
xor
enter
push
orl
add
inc
pusha
and
add
sub
pop
movsb
sub
sub
or
sbb
jo
cwtl
xchg
enter
adc
cmp
xor
xor
cmpb
inc
adc
mov
push
push
rcrb
cmp
dec
loopne
add
jmp
icebp
mov
add
in
call
outsb
push
sbb
fimull
push
or
sub
or
xchg
sub
or
xor
push
dec
movsb
js
mov
and
in
sub
pop
faddl
fs
xor
xorl
idiv
mov
jo
push
arpl
and
sub
add
sbb
cli
adc
dec
roll
jns
sbb
push
jg
add
sub
push
push
out
popf
adc
add
leave
sub
fldz
enter
hlt
pop
xorl
sbbl
cld
loop
xlat
out
pop
ret
je
mov
aam
mov
push
pop
push
pop
or
push
mov
dec
xlat
sbbb
lds
addr16
add
out
cmp
inc
jo
cmp
je
jbe
sub
mov
imul
mov
cmpsl
cwtl
mov
je
add
rcrl
popf
sbbl
inc
dec
in
jns
cmp
add
je
mov
addb
adc
jl
xchg
add
pusha
jg
jle
fsubr
sti
pop
in
sbb
and
push
std
mov
xor
push
jo
dec
cmp
mov
pusha
dec
cmp
addr16
jle
jb
jnp
arpl
jl
mov
icebp
inc
pop
inc
sbb
and
push
dec
push
inc
loopne
sbb
sbb
jle
push
mov
xor
add
xor
pop
andb
pop
popa
repz
in
pop
leave
inc
mov
and
sbb
add
pop
pop
mov
leave
nop
sbb
mov
jmpw
loope
fildl
jae
js
shrb
push
xor
adc
mov
push
jo
dec
gs
cmpsl
lock
lahf
in
loopne
or
add
pop
sub
jmp
jmp
ja
add
insb
pop
addb
pushf
fimuls
add
push
push
jne
push
jle
incb
mov
arpl
add
sub
xor
mov
mov
push
js
pop
lea
sbb
sti
out
mov
jle
aas
push
and
cli
sbb
and
add
or
rcrb
lods
add
jne
add
mov
or
cmp
jne
jne
add
pop
push
push
push
sub
inc
add
mov
dec
mov
add
inc
dec
or
decb
jne
ret
je
pop
and
pop
sbb
add
mov
push
pop
mov
jmp
push
mov
add
xor
adc
add
inc
inc
into
xor
push
movl
or
pop
sub
cmp
mov
lea
push
push
jl
sti
xchg
or
mov
add
fadd
mov
sbb
sarb
int3
fsts
add
lret
repnz
loop
js
xorl
or
cmp
push
mov
jne
out
or
xchg
inc
sbb
or
inc
dec
push
dec
pop
clc
dec
cmp
add
xor
dec
repz
out
les
and
enter
mov
add
pop
xorl
jl
out
xchg
or
jo
xor
jg
stc
cld
jp
sbb
cmp
xchg
arpl
pop
sbb
imull
shl
imul
jge
sub
in
sahf
rorb
out
fcmovnbe
jno
fdiv
mov
dec
cmp
push
xchg
incl
add
imul
testl
jecxz
xchg
cmc
add
les
add
das
mull
cld
mov
cmp
inc
ja
scas
adc
repz
int3
jns
xchg
dec
sbb
mov
shl
sbb
lock
clc
xchg
add
sbb
pop
jle
jo
sbb
jne
mov
dec
add
dec
dec
das
mov
mov
adc
lahf
test
scas
inc
dec
xchg
popf
jne
repz
wrmsr
sub
jle
jns
xorb
mov
pop
jo
adc
test
sbbl
mov
mov
xlat
add
in
push
mov
mov
dec
sub
mov
xorb
jp
lret
cltd
fmull
and
insl
jecxz
mov
notb
in
dec
fs
add
or
add
pop
adc
add
test
or
cltd
sbb
sbb
cmpsb
adc
or
loop
std
xor
aam
ljmp
sbb
or
sbb
bound
pop
popf
mov
fmull
loopne
in
inc
in
adc
inc
and
or
push
xchg
pop
lds
sbb
xor
pcmpgtw
ja
add
or
scas
mov
xor
adc
arpl
int3
ja
in
jb
cmp
xor
enter
jb
cmp
icebp
sbb
mov
adc
push
lods
aaa
inc
xor
push
xor
mov
xor
inc
and
mov
sbb
push
adc
mov
xor
add
adc
sub
push
sbb
mov
xchg
pop
in
sub
testb
jbe
sbb
test
xchg
std
cmp
xchg
les
and
add
pusha
jmp
jbe
or
inc
sbb
sbb
jne
or
or
push
insb
flds
inc
icebp
out
cwtl
jmp
lods
popf
jl
push
push
repz
lret
addl
test
adc
mov
pop
fs
fstl
push
movsb
adc
pop
rorl
aad
leave
adc
sub
cwtl
enter
ret
out
test
xchg
imulb
test
xchg
enter
fsubl
lcall
insb
pop
stos
push
rcr
xor
pop
jo
xchg
daa
mov
pop
mov
inc
fnstenv
add
adc
fcoms
aas
insb
pushf
push
xor
mov
add
xlat
xchg
add
sub
pushf
cmp
add
push
je
mov
jne
pusha
xor
jle
pop
push
repz
jge
xchg
or
dec
cltd
cld
in
xchg
pop
and
jp
aad
imul
lahf
sbb
pop
or
push
fcos
cld
fcoms
pop
jge
cmp
testb
lret
outsb
out
mov
loopne
inc
jbe
and
xchg
sub
neg
mov
mov
push
test
lock
jb
test
mov
gs
sarb
inc
push
push
dec
push
dec
jecxz
dec
into
inc
jmp
clc
les
mov
cmpsl
pop
mov
aad
mov
or
stos
or
jo
xor
dec
dec
sbb
pop
xor
xor
cs
leave
push
and
std
dec
jno
movsb
mov
and
jns
rorl
dec
pop
add
or
subb
lcall
add
loop
mov
outsb
and
xorl
ljmp
cmp
xor
rclb
dec
loop
mov
inc
fidivrl
test
fists
and
inc
or
push
loope
sbb
std
push
and
adc
orl
add
repnz
sbb
scas
xor
push
loop
gs
and
jne
mov
add
loopne
adc
shlb
xor
cmp
xor
mov
lret
adc
add
negl
pushf
enter
pushw
dec
pop
lahf
dec
add
cld
inc
cs
cld
add
dec
mov
inc
jne
aam
ret
jno
inc
insb
and
adc
sbb
xor
inc
mov
inc
mov
pop
cwtl
jns
adc
sub
or
sub
cmp
push
rclb
fwait
test
rorb
cmc
popf
aaa
cwtl
mov
or
pop
movsb
mov
mov
sub
mov
inc
sbb
or
add
or
xchg
adc
and
jl
adc
lret
or
push
js
adc
stos
pop
cmpsb
jmp
clc
adc
das
cmp
decb
xor
dec
or
inc
ds
push
or
dec
add
lods
or
psubusb
and
add
jo
test
test
sub
xor
and
or
add
lcall
adc
inc
add
leave
or
push
popa
popf
popw
lret
fisubrs
mov
int
mov
lahf
sbb
out
in
sahf
dec
dec
jno
movl
imul
cmc
into
push
adc
les
mov
mov
pop
adcl
insb
add
loope
jne
jnp
shlb
sbb
and
pop
imul
mov
add
ret
and
add
lds
into
add
mov
fldl
fs
je
jl
ret
add
mov
or
into
je
cwtl
loopne
or
lahf
dec
dec
mov
sti
in
xlat
pop
fdivl
mov
jo
and
pusha
mov
cli
jbe
sahf
pusha
test
inc
test
or
pusha
cwtl
fs
add
inc
inc
or
adc
orl
lock
mov
dec
pusha
push
and
sbb
in
or
test
icebp
dec
mov
popa
pop
mov
sbb
or
add
mov
push
js
push
jno
pop
loopne
mov
sahf
fldenv
and
cld
or
callw
push
pop
xorb
sbb
in
nop
out
dec
add
dec
and
mov
mov
or
and
dec
int3
cli
cwtl
out
ret
or
and
les
fadds
add
call
xor
fiadds
mov
repnz
int3
and
adc
arpl
or
mov
sbb
xchg
and
dec
mov
icebp
in
nop
cld
int
out
fmull
lock
ret
js
andnps
shrl
adc
fwait
sub
and
dec
cld
jmp
leave
jp
mov
lods
pushf
std
imul
ret
enter
xor
push
fiaddl
xlat
aad
mov
in
sub
mov
pop
add
adc
mov
cld
xchg
jne
dec
in
imul
lods
jnp
mov
enter
lret
and
cwtl
data16
or
outsb
sub
push
bound
push
xor
mov
mov
sahf
test
xchg
lock
lock
lahf
adc
nop
xchg
inc
pop
sub
jg
or
jg
push
loopne
adc
adc
xor
and
push
les
jmp
jo
jg
arpl
jae
in
push
sbb
lret
add
gs
or
lcall
testb
ret
xchg
or
dec
inc
ljmp
ljmp
add
repnz
add
add
push
out
cld
addl
dec
dec
dec
sahf
add
push
push
push
push
add
push
pop
pop
pop
popa
add
fs
push
insb
insl
je
adc
add
jne
ja
jns
jp
ja
shrl
sub
lea
gs
fwait
mov
call
ss
icebp
testl
jbe
shrb
lret
test
sbb
dec
xchg
and
mov
jecxz
fninit
adc
cltd
popf
add
stc
fadd
mov
or
xor
push
add
push
call
mov
pop
pop
pop
xor
jno
inc
and
or
pop
jl
inc
cmp
je
cltd
cld
mov
call
add
push
jl
out
jg
jae
xor
sbb
fcomip
pop
scas
je
inc
jmp
and
fs
cld
pop
popa
adc
pusha
mov
mov
mov
incb
add
stc
cmp
je
add
or
clc
sahf
cli
sahf
pop
jge
add
idivb
jl
or
inc
std
add
push
or
inc
jae
addr16
outsb
push
mov
add
lcall
cmp
push
add
dec
sbb
pop
and
jmp
cmp
out
out
xor
pop
xchg
cld
lods
shl
je
sarl
or
cmp
jne
fisttpll
jbe
xor
adc
mov
inc
fnsave
cmc
repnz
cli
push
push
repnz
pop
call
jl
out
inc
dec
pop
test
pop
rcrb
add
xor
jecxz
addr16
cwtl
dec
nop
jle
mov
sub
mov
xor
scas
add
pop
pop
lds
cmp
xor
punpcklbw
or
jb
cwtl
decb
out
out
mov
and
imul
loopne
mov
sub
add
das
add
inc
and
scas
cmp
or
repnz
scas
sbb
mov
out
cmp
sbb
or
testl
add
or
and
les
add
lock
and
sbb
cs
dec
cmp
add
insb
movsb
hlt
and
or
and
sub
and
dec
inc
sbb
cmc
adc
mov
lahf
adc
push
inc
dec
adc
outsl
insb
sub
adc
add
shl
out
jp
add
enter
pop
cmp
and
hlt
jmp
mov
cmp
out
xchg
roll
mov
jno
inc
push
xor
cmp
aaa
out
add
and
nop
inc
cmp
dec
mov
fcompl
sbb
fists
mov
xor
pop
stc
popl
pop
call
insb
mov
add
and
jg
aaa
add
add
sti
out
ds
loope,pt
jl
push
cwtl
sbb
enter
ds
pop
js
pop
iret
cmpsb
push
fs
inc
inc
inc
pop
lea
push
mov
sarb
adc
dec
or
aam
mov
loop
xchg
add
mov
dec
xor
rcrb
xor
loopne
sbb
pop
cmp
adc
inc
fmull
adc
int3
jb
mov
inc
sbb
mov
movsb
add
insb
inc
stc
cld
adc
in
mov
mov
add
dec
movsb
outsb
ss
push
add
and
lret
nop
outsb
sbbb
mov
fstl
idivb
in
dec
or
add
and
imul
jns
in
xor
sub
or
or
pop
sahf
data16
cmp
xor
pop
shlb
xor
sub
xor
arpl
ss
shll
cmp
gs
xor
inc
pop
das
pop
pop
test
xor
add
push
fists
cmpsl
or
dec
push
push
sub
xor
dec
cli
addr16
add
outsb
outsl
cs
scas
shrb
movsb
sub
addb
lret
xchg
into
test
push
pop
push
rcrl
inc
sub
insb
das
push
jl
cmpsb
push
mov
jmp
jmp
add
aas
clc
rorl
and
mov
loopne
xchg
pop
rclb
loop
or
sbb
rclb
and
adc
in
adc
inc
or
test
sbbb
or
jns
adc
sbb
insl
shll
imulb
rclb
je
push
cmp
rcll
js
push
jns
mov
and
push
dec
mov
sbb
push
lock
pop
jo
inc
loop
add
mov
mov
sub
mov
jno
push
add
lret
pushf
in
inc
xor
add
dec
pop
out
xor
loop
mov
loope
scas
cmp
pusha
add
ss
mov
cwtl
pushf
nop
pop
push
andl
add
ljmp
nop
roll
leave
adc
xchg
cmp
mov
es
cltd
adc
sti
add
test
xor
cmp
cmp
or
push
add
sahf
cmp
sub
jle
cmc
push
mov
xchg
push
aaa
cld
rcrb
add
fs
add
adc
pop
mov
inc
inc
fadd
ret
push
xlat
add
mov
pushf
inc
test
sbbb
in
mov
lods
add
push
lret
unpcklps
and
ret
push
scas
push
hlt
scas
mov
les
nop
pushf
mov
rorl
mov
mov
stc
pop
mov
dec
push
sbb
pcmpgtd
jge
cmp
std
mov
add
lret
in
call
sbb
and
shl
aam
inc
add
fsubrs
push
add
cmp
inc
mov
aam
mov
repnz
mov
dec
add
jl
mov
je
fists
dec
add
add
jmp
pushf
xchg
aas
cmp
std
add
mov
mov
sbb
xchg
cmp
or
adc
dec
add
iret
sub
divb
dec
fiadds
loop
dec
out
xchg
mov
inc
out
movsb
inc
jle
xor
add
jmp
xor
mov
cmp
sbb
adc
add
cwtl
sbb
add
hlt
inc
push
mov
or
in
ret
cmp
xor
test
lods
or
adc
ds
add
test
dec
ja
or
mov
add
out
mov
lods
add
ret
dec
cli
incb
mov
push
sbb
mov
repnz
sub
jo
or
jle
and
mov
icebp
rclb
inc
sub
add
ret
jne
or
incl
inc
test
test
es
adc
and
mov
adc
pop
adc
adcl
insb
shlb
ljmp
inc
pop
jae
or
cld
sti
mov
xor
inc
fildl
or
in
adc
sti
adc
les
inc
jo
xor
push
stos
or
test
andl
add
fs
inc
jle
subl
jns
or
lea
sarl
shl
jno
ret
or
add
and
fsubl
cwtl
pop
faddl
clc
outsl
mov
or
mov
inc
sbb
xor
sbb
sub
pop
add
loope
jmp
loop
cmp
adc
ret
enter
add
mov
dec
cmc
fildl
add
cmp
push
jb
add
bound
dec
lods
xchg
adc
or
push
pushf
aas
add
mov
dec
scas
inc
inc
sbb
je
pop
xor
adc
and
add
andb
fisttpl
sti
mov
cwtl
cmovle
xchg
aas
jle
ret
mov
add
jo
cld
sbb
pop
imull
dec
fisttps
pop
aad
sub
mov
lds
imul
add
aad
mov
cmp
push
int
mov
popf
test
orb
gs
aam
add
lcall
push
push
cmp
pop
add
mov
scas
push
out
mov
shr
and
jns
nop
aad
add
addl
jb
stos
add
popa
aas
ud1
shlb
ficoms
add
fcmovbe
add
loope
roll
mov
dec
nop
or
imul
push
add
cltd
fdivrs
mov
mov
lea
add
cmp
and
jnp
add
push
fwait
ror
sbb
add
xchg
xor
mov
sbb
aad
sub
add
or
pop
and
js
xchg
add
fidivrs
bound
loopne
add
scas
movsl
lret
xchg
inc
adc
push
pop
clc
ljmp
mov
xlat
fcomps
out
jecxz
sbb
insl
mov
mov
add
jae
xchg
stos
inc
xor
mov
dec
or
add
jmp
out
clc
ljmp
pop
fidivl
push
nop
lcall
scas
cs
add
imul
mov
add
frstor
aam
sub
cmp
xor
mov
sarb
int
lea
outsl
cwtl
mov
test
jl
lea
adc
inc
test
jo
inc
add
or
lock
xor
testl
push
ja
add
mov
movsb
pop
ret
enter
jl
add
insl
adc
decl
lods
mov
shlb
in
sbb
adc
je
mov
jb
lods
add
add
push
cmp
jb
test
enter
ds
add
and
inc
add
and
test
setl
pushl
jno
lret
loop
aaa
mov
push
mov
xchg
inc
mov
dec
outsb
je
adc
sbb
sbb
std
fiadds
bnd
stc
sbb
sbb
lea
cld
jle
fcmovbe
sub
jb
arpl
add
daa
xchg
rcrb
sbb
pop
stos
add
outsl
lds
mov
adc
mov
decb
sbb
fsubl
push
adc
loopne
scas
mov
dec
pop
inc
js
and
js
test
dec
add
adc
xor
dec
adc
pusha
test
mov
inc
sub
sbb
mov
ljmp
or
push
pop
sub
push
outsl
pop
or
dec
xchg
sbb
xchg
and
loopne
cmp
xor
or
jp
or
push
pop
incl
jo
nop
mov
sub
movsl
add
push
inc
jg
push
jmp
adc
mov
jne
and
mov
add
shlb
shr
out
out
jb
or
push
mov
xchg
xor
push
push
inc
shl
mov
sub
add
jns
mov
fmull
divb
stos
out
pop
testl
xor
sbb
fistpl
or
sub
jle
jnp
jae
dec
aaa
je
scas
lret
pop
add
lea
cs
mov
stc
or
or
xorb
inc
add
push
push
into
mov
xor
clc
push
inc
daa
call
out
and
inc
mov
or
repz
mov
orb
mov
sub
jmp
gs
push
and
in
fcmovbe
call
mov
rorb
mov
jb
jle
sbb
xorl
jg
xlat
pusha
fimull
pop
add
ret
push
stc
out
insb
movl
inc
mov
rolb
rcr
push
jo
pusha
out
lds
or
or
nop
xor
sarl
je
inc
ss
bound
jne
mov
jbe
jp
bnd
jae
filds
les
or
mov
xor
ret
rcl
roll
roll
jns
int3
push
enter
cmp
int
rcl
mov
loopne
cmp
out
call
cld
cmc
enter
ljmp
inc
lea
cmc
les
pop
cld
sub
inc
icebp
add
sbb
cmp
dec
pop
xor
or
test
sbb
jnp
add
jg
add
add
shrb
fs
shrl
aad
xchg
sbb
lds
push
cli
lret
fisubl
leave
divb
jg
push
sub
inc
sub
mov
dec
lea
pop
cld
adc
cmc
pop
push
mov
out
mov
adc
stc
test
dec
fbld
push
fstp
inc
mov
mov
push
sub
mov
inc
dec
inc
mov
or
inc
shll
xchg
leave
enter
jb
cmp
sbb
mov
and
add
js
insb
and
lds
cmpb
or
cmp
adc
xor
dec
outsb
mov
pop
pop
cmp
cmpsb
and
mov
mov
pop
popa
mov
inc
cwtl
das
jae
inc
jp
sub
popa
das
xor
adc
pop
outsb
sub
push
inc
inc
push
inc
sub
cmc
cmp
xchg
sub
das
test
ficoml
js
addr16
sub
and
js
das
push
xchg
sub
dec
iret
or
push
pop
fs
sub
aas
je
adc
js
dec
or
xchg
rcr
mov
push
outsl
lods
xor
mov
nop
add
call
mov
push
inc
mov
xor
mov
movd
mov
mov
lcall
fmull
inc
dec
insl
inc
sbb
sbb
bound
jbe
add
or
jge
fistpl
and
das
xor
xchg
cmp
loopne
push
pop
push
jmp
andl
mov
pop
mov
mov
push
loopne
pcmpgtd
and
push
cmp
mov
jle
push
sbb
and
hlt
jne
dec
cmp
loop
ds
and
jae
cmp
fcoms
rcl
push
aas
imul
cmp
loopne
sbb
cmp
pop
xorb
mov
cmpb
mov
loop
mov
int3
cmp
xchg
jbe
inc
ret
lret
cld
mov
push
jl
add
int3
add
sbb
cmp
add
xchg
lea
or
mov
mov
lods
in
stc
lret
xor
loope
add
outsb
aad
inc
jo
add
add
dec
ret
loop
add
rolb
fcoms
loopne
add
adc
xor
ret
and
ret
mov
ljmp
add
das
addl
leave
in
or
and
popa
mov
xor
xor
mov
and
xor
adc
push
inc
sub
cmp
test
mov
and
cmp
mov
and
jns
adc
push
and
shl
fsubl
mov
sbb
lock
inc
sub
sbb
negl
inc
sub
inc
sub
jno
adc
inc
mov
repnz
and
sub
mov
and
in
xchg
hlt
add
dec
pop
gs
mov
adc
adc
test
inc
adc
push
inc
pop
inc
subb
jo
mov
and
test
test
adc
dec
sarb
adc
add
and
nop
out
cmp
idivl
mov
adc
push
inc
nop
inc
nop
sub
lods
mov
nop
adc
inc
in
xchg
adc
adc
cmp
cmp
mov
and
mov
in
xchg
test
std
and
and
and
inc
dec
enter
and
adc
and
enter
repnz
and
cmp
mov
xchg
adcb
sub
pushf
and
jecxz
xchg
aam
repz
dec
js
push
cmpb
adc
and
xor
pusha
mov
adc
loop
and
cmp
mov
mov
aaa
jo
pop
orl
lock
pop
lock
lock
lock
cmp
pop
sbb
lock
lock
sbb
movsb
sbb
fcompl
lock
lock
sbb
test
sbb
mov
dec
loope
in
pop
lret
mov
sub
pop
hlt
adc
dec
and
or
or
scas
loop
and
and
dec
jno
adc
push
and
dec
inc
dec
cmpsb
mov
xchg
xchg
inc
inc
testl
push
jns
movsl
and
inc
dec
inc
ret
in
insb
out
jo
sub
adc
xor
nop
xor
and
jns
or
cmp
cmp
and
das
jae
in
das
and
jns
or
xor
aaa
pop
nop
cmp
pop
mov
dec
xor
int3
mov
fs
inc
or
xor
sbb
jne
out
dec
jo
adc
call
aas
and
xor
inc
aaa
repnz
nop
cmp
and
inc
hlt
mov
sbb
inc
xor
xor
xchg
xor
xor
and
jns
sbb
cmp
and
xor
outsl
jno
in
outsl
and
xor
xor
gs
cmp
sub
sbb
fdivrl
jns
in
aas
and
aaa
jle
cmp
cmp
pushf
xor
hlt
jnp
imul
out
push
mov
outsl
and
jns
sbb
cmp
inc
cmp
mov
out
xchg
mov
mov
gs
gs
gs
nop
gs
gs
gs
and
gs
fiadds
repnz
xchg
gs
outsl
and
gs
fiadds
repnz
xchg
gs
push
and
xor
mov
inc
imul
push
mov
aas
inc
xor
xor
test
js
pusha
mov
out
jo
loope,pn
lcall
scas
dec
std
outsb
sbbl
adc
add
inc
ret
clc
jle
pop
cmp
icebp
dec
das
lods
rorb
mov
movsl
cld
mov
sub
lea
imul
cmp
add
cmp
xchg
lcall
testl
jl
inc
dec
push
xlat
stc
mov
adc
cmp
and
cmp
inc
and
or
push
sub
inc
cli
aad
fucomi
das
inc
sahf
push
push
in
pop
dec
movsb
ret
daa
je
jns
fisttpl
mov
lahf
test
mov
shlb
mov
xchg
push
jle
fwait
imul
mov
nop
push
outsb
mov
inc
aad
fsubrs
and
or
sbb
xor
test
cltd
addr16
xor
xor
pusha
xor
das
fs
jae
mov
daa
fs
psubsb
add
inc
test
mov
negb
and
xchg
dec
inc
mov
rcr
imul
das
push
mov
sti
cmp
adc
adc
loop
popf
flds
in
push
ret
dec
push
mov
cmp
pop
push
push
mov
out
push
add
lds
add
adc
popf
inc
das
cld
jl
cs
cmp
test
dec
jo
rolb
inc
push
jg
lahf
dec
movsl
std
mov
cmp
sub
jge
cmp
jg
sbb
aam
in
cmp
xchg
clc
int3
inc
xor
cmp
inc
popa
sti
frstor
jnp
int3
pop
ljmp
outsl
adc
sbb
ljmp
inc
fcoms
and
adc
push
leave
xchg
jnp
sub
pop
mov
jno
into
lods
imul
or
repnz
add
cmp
or
add
jns
inc
dec
loop
nop
jo
jle
pusha
dec
test
inc
je
cmpsl
insl
es
and
sub
sub
iret
lds
adc
mov
ud1
in
push
or
xor
pushl
sub
mov
mov
jecxz
sub
fstpl
jns
sub
and
add
push
pop
and
movups
aam
cmp
xlat
sbb
adc
inc
and
mov
mov
out
sub
inc
xchg
aad
mov
daa
sbb
es
cli
jne
mov
ljmp
xor
data16
je
test
in
mov
adc
test
inc
or
cmp
repz
loop
inc
aad
xchg
adc
cmp
adc
inc
dec
fstpl
adc
jo
sub
inc
inc
inc
and
dec
push
inc
outsb
arpl
sub
inc
and
shl
dec
inc
xor
cwtl
mov
js
or
mov
daa
push
fwait
and
dec
xor
pushf
fnstsw
sbb
push
jb
mov
sbb
push
cli
jp
xor
push
mov
inc
dec
push
push
inc
cwtl
jns
jno
push
movsl
sub
cmp
inc
cmpsl
clc
test
test
adc
leave
push
ljmp
repz
fcomps
push
dec
or
and
das
dec
push
xor
add
push
or
stos
push
cmpsb
sbb
jo
xchg
hlt
out
subl
xor
push
cmpsb
mov
and
adc
scas
sti
or
inc
cmp
sahf
test
sbb
mov
xchg
sub
inc
loopne
xor
cld
daa
aad
lret
cltd
repnz
sbb
xor
aad
out
fcompl
xor
ljmp
jl
imul
aaa
adc
popa
movsb
or
mov
xor
adc
imul
dec
jo
stos
insb
ljmp
push
out
in
xchg
add
push
gs
add
push
xchg
gs
cs
push
jno
lahf
hlt
in
fldenv
fucomip
imul
dec
test
orl
into
mov
inc
and
out
mov
fists
adcb
test
sbb
movsb
addr16
push
test
mov
inc
sub
pop
in
or
bound
sub
mov
and
pop
aaa
and
loope
or
mov
add
jae
inc
push
push
es
pop
xor
fldt
les
sub
push
scas
add
or
insb
mov
adc
dec
mov
and
int3
sub
pop
xor
ljmp
mov
mov
hlt
cmpsl
hlt
jnp
cmc
repnz
mulb
inc
arpl
data16
lahf
icebp
js
push
inc
pop
push
scas
and
aad
out
xchg
mov
xchg
sub
cs
cmp
btc
jnp
dec
or
dec
sub
aas
les
in
je
std
enter
xchg
sbb
xchg
mov
dec
jl
push
je
inc
testl
jae
jl
jae
js
xlat
dec
jmp
jle
mov
repnz
aas
inc
inc
movsb
sti
notb
inc
cs
pop
nop
xchg
jno
mov
std
movsl
sub
mov
xor
xor
imul
or
in
fcmovu
sti
push
rorb
imul
rorb
mov
jl
data16
scas
xchg
ret
xchg
xor
gs
sub
jns
jl
and
push
outsb
cmp
popf
cmp
addr16
dec
inc
imulb
lds
pop
inc
and
scas
insl
cwtl
cmp
pop
lcall
jle
fdivl
cs
fs
mov
xchg
ljmp
dec
cmp
dec
sub
test
add
or
or
or
xlat
ljmp
or
adc
pop
data16
or
pop
jbe
add
adc
jl
movsl
pop
xor
jno
or
sub
or
dec
add
or
lret
or
dec
add
or
lret
or
dec
add
or
lret
or
dec
add
lods
jle
scas
pop
lret
adc
rcrl
xor
lock
rcrb
cmp
jle
sub
add
add
test
lcall
cmpsb
add
add
adc
xor
insb
add
sbb
cmpsb
add
add
insb
add
sbb
cmpsb
add
add
adc
cmp
pop
lahf
and
push
cmp
add
or
xor
add
jo
mov
subl
cmp
les
dec
pop
shll
pop
pop
xchg
add
clc
xor
ja
addr16
add
push
cmp
and
or
mov
sbb
and
pop
popf
mov
push
outsb
and
lods
imul
dec
add
rcrb
and
push
movsl
jmp
add
test
ja
out
pop
push
add
call
inc
mov
dec
add
movsw
or
mov
adc
or
push
movsb
dec
add
imul
or
adc
mov
adc
xchg
daa
mov
push
pop
adc
inc
add
dec
mov
inc
andl
mov
mov
inc
pop
out
adc
dec
dec
outsb
or
add
push
insl
or
sub
or
adc
mov
ds
cmp
cs
cmp
or
mov
enter
push
push
dec
pop
gs
lock
dec
repnz
adc
rcrb
jmp
inc
pop
add
dec
sti
pop
pop
ss
jge
push
icebp
lahf
insl
cmc
xchg
aad
xchg
inc
xchg
cmp
std
lods
pop
mov
cli
inc
push
inc
lods
sbb
clc
dec
push
mov
imul
mov
int3
inc
cli
dec
pop
inc
inc
push
imul
sub
pop
xchg
add
lea
dec
push
sbb
sub
std
mov
cltd
add
push
faddl
xchg
push
pop
jl
jle
lret
push
xorl
imul
bound
pusha
pushf
pushf
out
or
or
into
lock
and
mov
and
lock
and
lock
outsb
test
mov
mov
sub
or
mov
jo
xlat
jns
dec
pop
mov
outsb
mov
dec
dec
adc
sbb
push
push
idivb
scas
or
sub
lcall
sbb
outsl
xchg
adc
mov
aas
inc
push
cmp
inc
inc
inc
mov
cs
sarb
sub
sbb
and
and
enter
pop
repnz
nop
sub
sub
and
stc
pop
bswap
cmp
daa
pop
nop
pusha
cld
jle
in
aas
das
cs
or
sbb
cld
and
in
aas
and
es
sub
sub
das
cld
pop
xchg
cmp
daa
bswap
pusha
jle
jle
and
xchg
imul
and
and
and
enter
pop
repnz
nop
sub
sub
and
stc
pop
bswap
cmp
daa
pop
nop
pusha
cld
jle
in
aas
pop
cs
test
fs
and
push
sbb
cs
or
and
enter
js,pn
and
enter
and
or
mov
jle
and
and
inc
mov
pop
cli
dec
or
adc
add
adc
test
adc
push
jmp
sbb
outsb
outsl
ja
mov
scas
inc
ljmp
into
sbb
push
push
dec
push
inc
add
jo
sbb
push
fwait
repnz
dec
sbb
inc
insl
mov
xor
dec
push
loopne
inc
jno
cmp
imul
jl
inc
dec
push
sub
loope
icebp
push
ret
xchg
mov
fcom
pop
push
aam
push
and
jl
jl
push
pop
test
das
xor
sub
pop
push
push
and
inc
loop
scas
cmp
out
mov
xlat
outsl
jnp
or
icebp
xchg
leave
in
pop
inc
mov
cmp
insl
je
xor
xor
push
ss
dec
sub
sbb
test
xor
pop
test
lcall
sub
test
mov
iret
jae
mov
sbb
das
les
movsb
mov
jp
mov
add
xor
pushf
dec
xor
xchg
cwtl
dec
xor
or
dec
dec
inc
enter
lods
dec
das
xor
jb
dec
ss
shlb
push
and
adc
icebp
sbb
sahf
dec
shrl
mov
mov
mov
out
and
std
jbe
or
iret
call
sub
xchg
mov
pop
xor
mov
xor
xorl
imul
lret
push
outsb
std
out
mov
pop
dec
das
pop
cmpsb
mov
lods
jg
pop
stos
adcl
and
jge
pushf
mov
repnz
aad
push
int3
in
sbb
sub
jo
gs
mov
aaa
inc
imul
xor
push
sbb
mull
dec
stos
pop
in
sub
xchg
mov
aas
push
sub
je
jle
jb
out
sub
push
push
lea
sub
inc
and
sub
and
mov
cs
scas
test
outsb
mov
push
jl
sti
sbb
nop
cmp
in
cs
scas
fistps
xchg
pop
jmp
lcall
push
mov
clc
xor
jae
dec
mov
push
push
sbb
dec
scas
pop
xchg
sub
add
imul
lret
mov
scas
mov
inc
push
mov
jns
sbb
sub
mov
pop
cs
sub
cmp
cs
sub
into
movsl
mov
jl
movsl
aam
inc
mulb
mov
sub
mov
mov
push
dec
inc
dec
inc
push
jae
jno
repz
dec
cwtl
lea
push
outsb
cmc
bound
and
pop
stos
cli
push
ret
cmp
dec
mov
jno
jns
aam
inc
or
and
pop
pop
es
push
jbe
clc
mov
sub
mov
enter
mov
pop
imul
lret
popa
test
rorl
dec
cmp
rclb
daa
sub
and
fs
add
pop
out
das
divl
and
push
jmp
mov
cmpsl
sub
andl
pop
sbb
out
inc
sbb
add
push
dec
inc
pop
fnsave
add
pop
adc
inc
push
clc
or
dec
icebp
jl
icebp
sbbb
and
dec
pop
sbb
pop
inc
jl
ds
xchg
mov
enter
sbb
sub
mov
inc
dec
mov
inc
test
mov
pop
jo
push
xor
or
sbb
push
dec
mov
rorb
loopne
fsubrs
dec
mov
xor
fsubl
xor
dec
loopne
repnz
xchg
adc
jecxz
xor
call
mov
mov
pop
and
inc
lock
inc
push
mov
enter
rclb
clc
or
and
pop
and
jge
xor
mov
and
lods
jl
mov
push
enter
sbb
inc
and
popa
test
mov
adc
and
pop
inc
adc
icebp
push
and
sbb
inc
enter
adc
jecxz
xor
and
dec
ds
pusha
sub
gs
call
pop
xchg
or
ss
and
lods
sbb
mov
jo
pop
mov
and
or
sbb
cmp
insb
and
jl
mov
adc
es
or
or
sbb
adc
dec
adc
jo
sbb
pushf
dec
test
aam
in
in
adc
pop
xor
dec
das
icebp
inc
add
scas
mov
insb
jbe
lahf
push
imul
jno
mov
pminsw
cld
adc
sub
dec
rcl
dec
dec
push
inc
jne
stos
outsb
std
out
jmp
dec
inc
insb
popa
imul
and
sbb
aam
loop
push
test
inc
push
ja
add
pusha
dec
or
sub
rolb
sbb
xor
dec
mov
dec
dec
mov
push
gs
int
stos
mov
jo
jbe
imul
cmp
cmp
inc
lods
adc
cmp
jmp
sbb
dec
outsl
jl
xchg
loope
dec
xchg
or
dec
sti
push
icebp
test
sahf
mov
inc
xchg
mov
loope
mov
dec
push
mov
outsl
insb
and
and
aad
cwtl
jns
rorl
inc
sub
adcl
pop
dec
push
subb
and
adc
fimuls
dec
inc
clc
fcoms
aam
xor
and
test
and
test
jo
into
push
push
push
push
mov
xor
ja
push
test
and
jge
xor
and
lret
es
cmpsl
sub
lahf
hlt
outsl
xchg
jge
xchg
into
and
inc
ljmp
inc
cmp
inc
dec
stos
xchg
and
aaa
pop
inc
dec
sbb
iret
sub
addr16
in
inc
rep
icebp
lcall
cmp
xor
dec
xchg
push
out
dec
xlat
mov
outsl
adc
pusha
adc
movsl
push
sub
insb
push
push
shlb
xor
xor
pop
repnz
jecxz
lea
sub
das
mov
push
or
and
sbb
push
scas
dec
out
adc
dec
sbb
inc
dec
lods
jp
adc
popa
jb
mov
adc
or
stos
movsl
test
cs
cmp
mov
adc
dec
leave
mov
sbb
inc
aaa
in
jb
cmp
jb
mov
pop
or
xchg
or
rclb
dec
fnstenv
pop
stc
ds
in
jbe
cwtl
mov
sbb
push
testl
dec
fnstsw
nop
jb
push
mov
das
sti
loop
inc
pop
inc
mov
daa
fidivrl
push
popf
imul
xchg
mov
pop
jne
je
cmp
scas
dec
test
jo
jb
xchg
or
subb
dec
imul
ss
xchg
adc
xchg
es
outsb
sti
dec
mov
pop
sbb
sub
and
pusha
push
mov
push
sub
test
push
push
jmp
cld
test
or
movsl
sub
clc
push
xchg
xchg
test
inc
dec
lret
in
xchg
into
mov
cmp
test
inc
enter
xor
dec
sub
jg
add
dec
adc
inc
pop
xor
mov
jne
popa
xchg
arpl
push
aad
andl
inc
sbb
inc
xor
push
scas
xor
ret
shll
push
inc
push
inc
push
dec
push
dec
dec
movsb
dec
inc
repz
int3
push
inc
bound
js
dec
add
stos
jbe
and
sub
repz
repz
adc
shl
mov
xor
movsl
mov
insb
pop
in
sub
push
test
cmp
inc
fcompl
rclb
in
dec
sub
inc
insl
sbb
test
jge
loope
sub
or
leave
in
lods
test
jne
cmp
inc
rorl
out
mov
pop
inc
mov
sbb
jb
inc
push
hlt
pop
mov
adc
leave
push
je
pusha
repnz
mov
mov
cli
lret
add
xchg
out
mov
iret
mov
pop
fsubrs
out
sbb
xor
ja
in
mov
xor
bound
xchg
lret
adc
or
dec
jb
iret
mov
sub
fs
mov
jp
xchg
nop
sbb
pop
ja
arpl
popf
aam
imul
sub
jbe
popa
js
xchg
in
pop
xor
add
sbb
movsl
je
xor
mov
push
jae
pop
into
aaa
stos
cmp
imul
js
xor
push
cmp
cwtl
imul
inc
pop
and
cld
cmp
imulb
mov
pop
mov
dec
dec
scas
enter
xor
shlb
pop
xchg
je
call
jns
movsb
pop
xchg
inc
stos
push
stc
mov
xor
dec
add
test
add
dec
cmp
pop
stos
and
cmp
cs
nop
adc
sbb
scas
cmp
scas
pop
test
mov
mov
imul
jmp
jge
sub
xor
mov
mov
aas
fs
aas
sub
jl
push
jg
cmc
xchg
cwtl
std
sub
repnz
sti
sbb
arpl
mov
movsb
jge
sbb
pop
lods
cmpsb
loop
push
adc
je
fxch
sbb
cs
idivb
leave
add
sub
cvttps2pi
dec
movsb
imulb
xor
xor
mov
sti
dec
aad
push
mov
loopne
pop
push
lea
pop
adc
repz
movsl
jne
in
pushf
aad
xchg
cld
rcr
sbb
das
jo
xor
mov
push
mov
cmpsb
cmc
jo
inc
ja
and
inc
dec
fs
in
sarl
adc
mov
cmp
rcrb
push
mov
xchg
fbstp
pop
stos
xor
stos
fiaddl
imul
stc
mov
pop
test
cmp
lret
pop
je
out
sub
lods
cmp
or
clc
mov
cmp
hlt
stc
jae
std
and
cmp
push
sub
and
and
call
lock
push
push
gs
leave
std
addr16
scas
jne
xor
dec
loop
rorb
or
je
dec
pop
jl
push
and
push
lret
icebp
insl
and
mov
lcall
stos
mov
sti
mov
cmp
inc
mov
imul
inc
pop
call
push
mov
xor
inc
push
cwtl
call
out
adc
idivb
dec
add
cmpb
mov
push
repnz
les
movsb
push
add
xor
push
adc
and
sub
das
test
pop
jmp
daa
adcb
popf
and
ds
and
clc
mov
out
cmc
xor
pushf
mov
in
dec
dec
repnz
jle
xor
mov
inc
insl
out
xlat
fisubrl
pop
jbe
lret
pop
addb
dec
inc
sub
inc
xlat
fistpll
sbb
mov
dec
push
lret
dec
push
sub
dec
fwait
inc
sub
sbb
or
and
dec
push
xchg
push
and
pop
pusha
mov
and
dec
jo
je
js
jl
mov
nop
xchg
xchg
and
movsb
adc
xchg
mov
mov
les
enter
rclb
fsub
mov
adc
and
dec
lock
hlt
and
inc
cld
push
xchg
or
mov
sbb
and
xor
dec
push
mov
pusha
das
icebp
and
js
mov
dec
pushf
xchg
movsb
and
adc
and
dec
in
lock
loopne
fyl2x
or
adc
and
dec
xor
dec
push
mov
and
dec
adcb
mov
and
dec
enter
faddl
mov
adc
and
je
mov
pop
and
or
xchg
inc
and
push
pop
mov
and
dec
js
test
mov
mov
dec
enter
loopne
call
add
mov
or
and
sub
xor
cmp
dec
push
mov
insb
and
dec
adcb
movsb
mov
enter
faddl
mov
adc
movsl
fldenv
and
dec
xor
dec
push
mov
and
dec
je
jl
test
mov
mov
inc
fsub
mov
adc
and
fs
sbb
and
xor
cmp
inc
and
dec
push
xchg
pop
and
push
test
dec
xchg
xchg
cwtl
and
lods
adc
xchg
mov
enter
shlb
dec
fcoms
in
mov
adc
and
dec
clc
xchg
cld
jo
jb
mov
adc
dec
sbb
and
mov
cmp
inc
dec
dec
xchg
dec
and
push
pop
mov
cmpsl
push
dec
test
adc
es
inc
fsubs
push
adc
orb
mov
cltd
adc
or
call
mov
movsb
adc
mov
int3
and
dec
fcoml
in
hlt
mov
adc
jno
hlt
add
gs
jns
jne
imul
and
mov
push
imul
jp
js
arpl
bound
outsb
and
dec
push
xchg
push
and
push
push
mov
push
and
dec
dec
xchg
push
and
push
inc
mov
inc
and
dec
dec
xchg
dec
and
pop
mov
push
and
dec
dec
xchg
dec
cmp
inc
push
push
cs
xchg
mov
pop
arpl
mov
inc
rolb
lret
adc
dec
inc
js
gs
imul
pop
dec
jmp
pop
cmp
outsb
loop
jae
jg
jl
push
outsl
mov
js
in
clc
mov
js
pop
adc
out
cmp
xchg
imul
jns
jl
outsb
ss
and
and
adc
sti
inc
mov
jb
imul
jecxz
push
imul
stc
sub
outsb
outsb
cmc
fs
mov
adc
push
jns
xor
inc
jne
mov
xchg
sub
inc
lock
stos
sbb
inc
and
flds
dec
fsub
outsb
arpl
push
xor
shll
xlat
movsl
es
mov
aaa
int3
sbb
dec
cmp
sbb
xor
cmpsb
mov
bound
cmp
inc
inc
das
xchg
dec
imul
xchg
fsubrs
lods
gs
outsb
lahf
fiadds
adc
and
mov
inc
dec
inc
cmp
fisttps
dec
and
loopne
xor
sub
push
rorb
cltd
xor
and
jbe
dec
pop
xor
xchg
fs
les
inc
inc
dec
sbb
fwait
pop
aam
push
mov
fisttpll
adc
push
dec
xchg
popa
insl
jns
imul
cmp
inc
xor
xor
jns
cmp
cmp
lods
xchg
clc
popa
and
sub
jns
and
xorb
sbbb
jne
xor
jp
test
jne
test
insb
bound
pop
dec
xor
inc
inc
xor
sbb
loopne
push
sbb
sub
shlb
xor
push
and
dec
insl
mov
dec
inc
jne
mov
test
xchg
add
dec
sbb
inc
ss
mov
jmp
pop
ret
imul
shrb
ss
sub
stos
inc
dec
dec
faddl
dec
out
sub
fisttps
es
or
adc
inc
mov
dec
loope
jl
fcmovb
ficoms
push
or
inc
dec
inc
xchg
imul
mov
and
push
popa
inc
sbb
rcrb
mov
daa
inc
dec
cltd
movsb
dec
imul
or
xchg
inc
adc
pusha
and
mov
mov
ss
enter
insb
inc
push
inc
popf
push
loop
dec
je
dec
dec
jns
pop
push
hlt
roll
and
int
outsb
fmull
inc
cwtl
pop
in
xlat
mov
fdivrl
or
sub
out
ljmp
inc
aas
mov
sbb
xor
dec
xlat
cmp
push
outsb
insb
xor
and
mov
addb
test
xchg
push
in
mov
arpl
push
jb
dec
hlt
fsubl
push
pop
insl
xor
xor
aad
sub
dec
xor
out
test
sbb
mov
leavew
cwtl
je
or
divb
xor
inc
dec
dec
and
mov
xor
insb
out
jne
nop
mov
inc
fmull
mov
call
inc
add
stc
loopne
xor
pusha
pop
aam
cmp
mov
push
dec
lea
in
inc
fwait
dec
pusha
fiaddl
sub
xor
and
or
push
inc
insb
jnp
push
jnp
jge
adc
je
pop
and
fcompl
push
addb
dec
dec
push
movsl
repz
shrl
inc
adc
sub
movsl
ret
mov
push
adc
xchg
ja
push
and
adc
or
insb
sbb
bound
inc
xor
dec
or
cmp
jbe
sub
xchg
addr16
adc
cwtl
data16
push
cmp
sub
shlb
or
mov
inc
adc
pop
mov
cmp
pop
adcb
dec
movsb
mov
les
mov
js
lods
jp
out
aam
or
jns
jl
arpl
adc
lret
stos
movsb
clc
imul
sub
montmul
cmpsb
inc
dec
addr16
in
sbb
lods
addr16
sahf
pop
adc
fs
cs
push
nop
fs
xchg
inc
pop
cmp
push
loopne
push
gs
mov
pop
push
adc
pop
push
cwtl
xor
inc
mov
mov
jb
pop
lock
je
nop
cmp
mov
movsl
sbb
outsl
data16
lcall
adc
xor
stos
or
adc
add
adc
aam
and
mov
sbb
mov
xchg
or
stos
out
dec
mov
daa
pop
and
das
je
in
testb
xor
jp
outsl
xor
xor
sbb
pop
push
gs
dec
xlat
inc
xor
push
add
jge
adc
mov
sub
cld
sbb
mov
push
xchg
lret
adc
test
add
test
mov
sbb
inc
stos
jns
call
mov
popa
dec
mov
mov
popf
sbb
lret
pop
rcr
outsb
xchg
push
inc
shll
adc
or
mov
adc
or
sub
cmp
sbb
push
imul
mov
mov
cmp
sub
movsl
adc
push
jnp
sarl
ja
mov
sbb
push
mov
sar
movsl
lret
pushf
and
aaa
xchg
popa
ljmp
jnp
imul
mov
imul
inc
dec
jmp
jmp
lods
cmp
jbe
sub
shll
dec
or
mov
push
mov
dec
nop
xchg
add
cwtl
inc
movsb
add
add
std
inc
push
fidivs
push
mov
jo
or
and
mov
and
cs
addl
out
xor
pop
or
sub
sub
das
pop
addr16
adc
arpl
scas
xor
cmp
int3
dec
xlat
jle
sub
cmp
outsl
lods
sub
mov
push
pop
aam
in
or
sahf
into
cs
rcrb
and
popf
xchg
xchg
or
popa
popf
loope
fstl
sub
pop
pop
inc
jl
jmp
fdivrp
iret
lods
inc
pop
rcrl
hlt
fs
jmpw
stos
data16
insb
inc
cmpb
iret
ljmp
outsb
repz
pop
popf
mov
aad
xchg
insl
mov
insb
mov
jnp
mov
out
ss
push
popa
adc
pop
pop
test
loop
xchg
in
xchg
lahf
xchg
push
mov
daa
ja
addr16
pop
mov
xor
jb
lcall
insl
inc
sbb
addr16
jo
lret
lods
cmovs
shrl
test
xchg
cmc
sbb
xchg
icebp
mov
jb
shl
lock
movsb
jb
adc
inc
out
je
insl
test
stos
jbe
pop
lods
and
movsl
ja
pop
lea
cmpsb
pop
xor
mov
mov
gs
jmp
and
addr16
addr16
insb
shl
jp
push
jnp
mov
mov
mov
mov
std
movsl
out
inc
arpl
dec
aad
jmp
xchg
push
dec
mov
xchg
jb
dec
pop
test
mov
dec
push
rcr
inc
clc
mov
adc
and
push
fisttps
jmp
adc
mov
cs
or
cwtl
mul
cmp
mov
and
pop
xchg
sub
pop
in
mov
mov
daa
fs
ss
sub
sti
dec
dec
ja
fcoml
bound
pop
xchg
push
mov
andb
mov
rcrb
jne
sbb
cwtl
mov
movsl
pop
or
cwtl
or
xchg
movsb
clc
push
mov
test
push
cmpsb
movsb
int
jae
rolb
pusha
inc
mov
gs
insl
add
push
xchg
mov
outsl
or
outsl
andb
mov
ss
or
test
in
shlb
and
leave
push
sub
sub
repz
fildl
jne
outsl
jmp
dec
mov
add
gs
insl
add
inc
inc
push
subb
dec
jg
insb
push
push
jns
inc
and
jg
popf
xor
movsb
mov
mov
mov
cli
repz
fstl
pushl
adc
cmp
mov
fistpl
in
jbe
xor
pop
das
stc
hlt
adc
and
adc
adc
out
outsb
test
popa
xor
out
xor
xlat
test
pop
xchg
or
rorl
ret
inc
jne
jae
dec
jmp
pusha
loop
mov
xchg
dec
push
push
lahf
push
jmp
movsb
push
mov
and
adc
ds
and
pusha
push
ret
movsl
int
sub
cmp
or
cmp
or
sub
push
xchg
idiv
int3
dec
jl
xchg
mov
push
pop
jb
cmpsl
cmp
dec
bound
mov
push
loop
pop
push
sub
daa
pop
lcall
sub
outsb
testb
insb
je
adc
jae
pop
hlt
test
mov
push
pop
mov
call
test
mov
inc
int
lea
cs
jp
bound
clc
mov
clc
sub
enter
inc
insl
inc
imul
rorl
stos
mov
inc
std
cmpsb
inc
mov
jae
jne
in
fstpl
pop
xor
pop
jp
in
push
adc
sbb
stc
or
mov
mov
lcall
pop
dec
lcall
jae
lods
adc
cmp
nop
aam
jmp
fwait
sub
add
das
mov
cs
sub
in
sarl
sub
lahf
out
sahf
lcall
call
stos
xchg
fs
lret
sbb
adc
insb
cld
insl
xchg
push
pushf
push
mov
or
jns
mov
jle
sysexit
sbb
push
adc
loopne
jo
addl
mov
int3
xchg
fsubl
hlt
and
test
mov
cmp
dec
push
xchg
pusha
and
and
dec
mov
xchg
dec
xchg
je
sub
insl
jae
push
data16
mov
scas
inc
sbb
movl
and
xor
movsb
or
push
aaa
add
cmpsb
popa
insb
sub
adc
addr16
and
inc
mov
push
jl
jg
arpl
hlt
mov
pop
adc
cwtl
push
jbe
cmpsb
push
adc
inc
loopne
push
test
and
jae
inc
mov
cmc
dec
and
jecxz
out
insb
dec
inc
push
nop
bound
pop
push
jne
movsb
pop
pop
or
iret
or
js
je
sub
dec
pop
xor
imul
fimull
jmp
int3
adc
or
stos
aas
fmuls
fnstsw
push
gs
cmp
out
je
pop
std
sbb
lea
std
or
or
testl
xor
mov
push
adc
or
repnz
lcall
imul
fisttpl
iret
insb
dec
mov
push
sub
mov
pop
addr16
add
cwtl
cmpsb
or
enter
lods
dec
mov
cmp
sbb
pop
notl
dec
lods
jmp
push
in
nop
jo
divl
icebp
loop
sbb
fnstcw
and
dec
cmp
lahf
andb
dec
scas
lret
fidivrs
pop
arpl
sbb
mov
push
inc
mov
sub
rcrl
push
daa
out
fadds
xor
mov
sub
dec
loop
rorb
cmpsl
pop
stos
dec
mov
ja
jb
insb
jmp
and
jge
icebp
lea
inc
jae
mov
cld
inc
jae
cmpsl
scas
inc
push
mov
xor
jg
es
insb
not
xor
imul
stc
outsb
aaa
imul
test
lret
push
jns
jnp
outsb
mov
mov
jb
stc
jae
xchg
sbb
sbb
arpl
xchg
xor
cmp
inc
push
or
das
ljmp
xchg
jl
pop
mov
sbb
int3
inc
addl
test
adc
cmp
dec
cmp
dec
push
in
sub
xor
mov
mov
mov
cli
push
sbb
pop
xchg
insb
ja
dec
and
cld
jns
cmp
into
test
addr16
mov
mov
ljmp
je
fs
push
jne
inc
subb
out
fists
sbb
cmp
push
das
or
sub
mov
xchg
test
fisttpl
or
xchg
bound
and
imul
sbb
popa
adc
clc
popa
aaa
jae
sbb
mov
mov
aam
pop
sub
sti
and
mov
push
jo
push
cmp
cmp
xchg
add
pop
sub
jg
adc
mov
dec
pop
lahf
xchg
inc
fimuls
jnp
aam
daa
adc
fistps
das
jae
push
push
push
inc
adc
push
push
popa
addr16
cmp
jo
mov
push
xor
sbb
add
arpl
gs
fdivs
cmpsb
cmp
add
jns
test
mov
inc
push
push
popl
ss
or
and
les
adc
jecxz
mov
ficompl
divb
cmp
icebp
fwait
jae
aaa
or
ror
dec
out
insb
cs
inc
inc
pop
jne
inc
loopne
sub
bound
inc
xchg
sbb
jns
xchg
jg
sub
jns
xlat
stos
push
cmp
push
imul
push
fsubl
lret
jno
lods
fdivr
and
jne
push
dec
inc
dec
cmp
stos
add
push
sub
imul
lret
dec
push
mov
mov
sub
xchg
mov
mov
pop
fdivl
jns
imul
pop
mov
repz
pushl
xor
shrb
xlat
mov
lods
imul
adc
ret
cwtl
imul
inc
or
es
or
cmp
sbb
add
and
jmp
push
or
and
pop
fbstp
jbe
add
push
inc
push
test
inc
cmpb
adc
add
sub
imul
add
popf
and
add
aas
pop
adc
jne
and
rolb
or
add
pusha
sbb
and
daa
jge
insb
xchg
mov
sub
pop
add
out
push
ja
dec
adc
ret
popa
hlt
pusha
xchg
or
lds
inc
and
insb
adc
cmpb
push
or
mov
or
xor
cmp
test
add
sbb
add
mov
add
add
jl
sub
loopne
test
inc
and
or
cmp
movsl
add
and
push
pop
sbb
adc
or
sti
js
add
add
orl
add
or
jns
and
bound
movsl
mov
sbbl
ret
popa
shll
cmp
mov
xor
iret
mov
in
call
nop
adc
add
popf
rcrb
adc
mov
loopne
or
jle
inc
add
inc
push
add
add
sbb
and
dec
pop
xchg
or
or
or
cmpsb
cmp
or
dec
pop
adc
cmpsb
add
sbb
sbb
cmpsb
adc
and
push
xor
push
sbb
xor
push
cltd
pusha
pop
dec
jl
cmpsb
sbb
out
add
or
jb
xchg
push
xor
xorb
and
inc
xchg
sub
scas
nop
push
movsb
jo
cmpsl
xchg
mov
lret
xlat
jno
pop
es
and
sub
je
mov
cltd
test
addr16
inc
pop
pop
sbb
and
dec
sbb
sub
mov
and
dec
push
mov
adc
and
dec
adc
and
inc
push
lock
adc
and
dec
call
inc
or
mov
dec
enter
rolb
sbb
mov
push
dec
test
pop
and
and
cwtl
and
dec
xchg
mov
adc
clc
jmp
lcall
or
adc
mov
xor
jae
dec
add
adc
shll
add
sub
mov
mov
and
mov
popf
js
jl
sbbb
jo
orl
cmp
jge
clc
adc
and
xchg
cmp
rorb
cltd
sbb
xchg
mov
push
inc
nop
enter
mov
in
fsubl
mov
xchg
add
or
inc
cwtl
insb
loopne
enter
mov
sbb
icebp
ss
xor
arpl
adc
cwtl
sub
dec
push
mov
lods
adc
test
cwtl
pop
dec
icebp
sbb
ss
jo
enter
int3
and
mov
jmp
inc
xorb
lock
icebp
or
push
aas
lods
bound
mov
std
lea
arpl
add
and
dec
pop
cmp
mov
aam
inc
repz
dec
and
xor
cmp
ja
cld
mov
inc
repnz
push
das
or
insb
adc
cld
js
sub
mov
inc
add
sbb
and
or
popa
adc
in
sbb
pusha
inc
push
push
inc
mov
push
xor
push
xor
gs
loope
dec
sub
test
sub
rolb
mov
int3
and
rol
or
sub
movups
mov
in
or
sbb
inc
test
popf
pop
sbb
or
cmp
inc
sub
inc
sub
fcompl
or
nop
pushf
dec
adc
gs
sub
faddl
pusha
fstl
xchg
inc
mov
pop
inc
or
in
test
leave
inc
and
jo
adc
or
cmp
pop
xchg
mov
xor
mov
or
lods
fsubl
and
cmp
fstl
mov
pop
push
adc
xor
adc
push
push
dec
pop
movsb
and
sub
sbbb
pop
adc
xor
mov
or
push
inc
or
pop
int
sub
pop
xor
mov
push
das
fcoml
or
pusha
shlb
pop
inc
inc
cmpb
test
or
jp
sub
test
pop
mov
push
pop
mov
adc
lahf
pop
pop
into
pop
inc
call
sbb
cmp
rcrb
icebp
or
or
lea
inc
sub
sub
sub
xor
pop
roll
mov
inc
nop
test
movsb
mov
dec
mov
dec
push
mov
push
inc
loop
sub
fsubl
sub
inc
rcrb
pop
adc
add
rcrb
add
mov
sbb
adc
push
adc
adc
pop
or
les
or
mov
dec
dec
and
mov
mov
inc
mov
lcall
dec
push
fs
pop
adc
dec
lret
adc
sub
push
pop
cmp
add
jo
sbb
js
mov
or
cltd
js
jo
lock
or
fmul
shrb
rclb
test
push
sub
adc
mov
lods
adc
fsubrl
cwtl
sbb
fs
xor
dec
cmp
mov
or
lock
or
push
lock
and
xchg
dec
adc
push
xchg
mov
mov
or
pop
push
jl
and
js
mov
mov
sbb
loop
cld
push
adc
mov
inc
lock
lds
shlb
fs
and
pop
in
xchg
mov
enter
adc
loop
in
pusha
or
cmp
int3
push
js
mov
mov
call
and
in
fcoml
dec
rcl
or
mov
or
push
push
push
mov
mov
push
or
cmp
dec
call
clc
adc
rorb
mov
fadds
dec
xor
loop
cld
sbb
jo
int3
and
mov
and
dec
pop
xchg
push
and
inc
xor
sub
and
dec
adc
add
and
and
dec
hlt
xchg
lock
inc
call
shlb
dec
shlb
test
pushf
and
dec
mov
je
mov
push
in
fmuls
popa
pop
mov
mov
jg
add
mov
enter
cli
or
pushf
or
or
addps
inc
adc
or
mov
mov
xor
mov
ret
dec
add
lock
mov
sub
imul
in
pop
mov
jmp
shlb
xchg
add
add
lock
mov
adcl
repz
dec
pop
js
clc
outsl
add
loopne
jmp
add
imul
cmp
inc
lock
sti
jmp
stos
push
add
out
jecxz
repnz
das
test
pop
sbb
jecxz
cli
loopne
cmpsl
aam
repz
int3
xchg
push
cmpsb
scas
mov
inc
or
addl
in
xchg
add
cmp
adc
pop
cmp
setle
lock
movsl
mov
popa
sar
mov
add
and
stos
add
mov
add
leave
fwait
xchg
and
les
int3
inc
add
add
aas
jno
or
mov
clc
pop
add
dec
lea
cmc
add
shrl
pop
mov
icebp
adc
and
lds
mov
insb
add
jmp
xor
in
xchg
mov
jno
add
popa
test
ja
stos
in
das
add
dec
les
leave
cmp
add
jne
int
clc
lcall
xchg
cmp
push
mov
iret
clc
and
and
loop
loopne
xor
jp
rclb
add
jle
push
jl
mov
out
das
lea
mov
sti
inc
dec
loope
jmp
cwtl
sbb
jge
mov
inc
add
fstl
arpl
int3
add
push
ja
call
add
sbb
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
add
mov
jecxz
cmpsb
add
movb
jne
fildl
cmp
jno
shlb
loopne
out
add
pop
cmp
push
fisubl
xor
push
push
lahf
inc
pop
mov
adc
xor
dec
push
scas
into
imul
rcr
jge
call
out
pop
push
xchg
cmp
add
and
dec
dec
bound
add
adc
pop
ficomps
frstor
sub
and
loopne
inc
push
gs
js
aam
lock
inc
jecxz
sbb
add
arpl
mov
jae
fs
cmp
lods
cmp
and
add
out
scas
push
xor
mov
pop
shlb
mov
push
add
pop
cmp
orps
sbb
sbb
aam
or
sub
inc
fistpll
outsb
arpl
xor
fisubs
or
inc
les
and
dec
fs
push
and
adc
add
out
fldl
clc
xchg
les
lods
inc
xchg
js
pop
adc
dec
dec
mov
jl
xchg
dec
test
mov
rolb
notb
push
mov
or
and
dec
inc
xchg
pop
and
xchg
and
dec
aam
call
xlat
inc
sbb
mov
jo
mov
xchg
stos
and
out
adc
into
fxch
or
xchg
and
pop
push
and
dec
mov
enter
repnz
fldcw
cmp
xchg
dec
mov
inc
shl
mov
adc
fiaddl
sbb
dec
cmp
insb
jp
xchg
adc
xchg
fsubl
repnz
fildl
mov
dec
and
dec
jo
mov
lcall
fsubs
inc
or
or
xchg
sub
ss
inc
pusha
mov
jl
xchg
dec
mov
inc
aam
call
inc
or
or
sub
xor
pushf
popw
push
sbbb
xchg
je
adc
or
dec
or
adc
mov
adc
xchg
push
dec
jl
stos
cmp
push
push
cmp
outsl
arpl
je
push
sbb
pop
xor
cs
cmpl
cmp
jae
mov
call
cmp
sbb
jb
push
jne
jge
inc
test
fs
cmp
imul
repnz
outsl
jae
out
imul
cs
add
cli
jo
rolb
dec
outsl
popa
fs
imul
jno
aas
cld
addl
mov
fs
jmp
dec
mov
insl
cli
mov
pcmpgtb
sbbl
xchg
xchg
aas
dec
jo
outsb
movb
inc
pop
jne
inc
fiaddl
jo
dec
xor
mov
fstpt
nop
test
inc
pop
inc
push
rcll
cs
push
in
outsb
popa
cmp
push
loop
out
nop
int3
dec
dec
js
filds
push
imul
in
pop
and
inc
gs
xchg
and
push
sub
sub
jecxz
jbe
sub
mov
xchg
push
mov
std
xchg
outsb
data16
inc
jae
icebp
outsb
inc
xchg
jmp
xor
nop
push
xchg
es
sub
cmpsb
fsts
cwtl
mov
clc
and
fldt
jp
mov
jne
jo
and
adc
jne
rcrb
loop
push
loope
xchg
inc
push
add
mov
cltd
les
jecxz
repnz
add
outsb
jae
js
fisttps
push
imul
add
xchg
add
sahf
sbb
dec
dec
fbstp
xchg
xchg
jne
jo
add
bnd
xor
loopne
lcall
push
inc
inc
adc
jno
xor
mov
adc
into
sbb
dec
mov
sub
cmpb
pushf
xor
or
les
cvttps2pi
ds
dec
sbb
push
xchg
adc
and
mov
push
outsl
jmp
mov
sub
es
sub
xorb
leave
xor
dec
jo
movsl
dec
or
and
roll
aaa
movl
lret
inc
inc
lods
push
mov
xor
or
icebp
outsb
arpl
and
shll
mov
adc
clc
xchg
sti
addr16
and
mov
int
jnp
out
into
out
push
add
add
aad
sbb
adc
inc
jecxz
imul
xchg
or
cmp
xor
push
jle
jne
xchg
push
jne
ret
xor
and
gs
into
push
dec
pushf
sbb
and
dec
inc
in
addr16
inc
push
or
inc
ret
mov
xor
imul
cmp
jno
xor
pop
jo
adc
data16
in
xor
lods
pop
adc
cmpsb
xor
push
mov
xchg
push
add
push
push
imul
ret
add
ret
arpl
mov
pop
lea
xor
addr16
xchg
add
es
js
mov
inc
mov
lret
ljmp
sub
ss
cmp
and
dec
push
lret
movsb
adc
and
jo
leave
lret
shlb
dec
loop
mov
cmp
cmp
nop
ror
xlat
repnz
inc
ja
fwait
or
push
dec
inc
mov
les
dec
sub
sbb
jb
mov
dec
mov
mov
dec
inc
jecxz
mulb
iret
mov
fs
dec
bound
dec
inc
ja
mov
fs
faddl
inc
add
pop
xchg
nop
and
adc
fsubs
inc
mov
sbb
je
fwait
jp
subl
and
sbb
jle
mov
xchg
iret
dec
outsl
mov
adc
xchg
sub
insb
inc
out
scas
js
inc
pop
andb
mov
sub
sbbb
xor
mov
sub
negb
xor
inc
pop
jmp
push
xor
std
xchg
imul
cld
push
add
or
push
sub
and
mov
jns
or
or
dec
add
xor
inc
adc
push
sbb
push
jae
ss
lahf
xor
cld
shl
dec
sbb
mov
sbb
adc
sbb
adc
push
push
mov
aam
inc
xchg
lods
dec
sub
call
adc
test
inc
xor
and
inc
dec
aaa
jo
aas
adc
pop
jo
scas
addl
and
js
push
mov
subl
push
dec
dec
cmc
xchg
sub
jl
pop
jne
lret
sahf
cmp
xchg
in
xorb
mov
imul
dec
inc
push
dec
lcall
int3
add
add
loopne
popa
add
or
bswap
sub
inc
fsts
pop
jmp
mov
sub
cmp
inc
jp
jl
jle
jle
jle
jle
jle
sbb
xor
popf
pop
sbb
int3
lahf
fistps
jmp
xchg
xor
push
addr16
sub
ds
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
ss
adc
sbb
and
xor
cmp
ds
inc
stc
dec
stc
push
stc
pop
stc
pop
stc
gs
insb
stc
jb
jns
jg
xchg
mov
xchg
stc
cltd
stc
mov
stc
mov
stc
aad
fdivrp
out
in
stc
repz
stc
sti
xorl
adc
sbb
and
xor
jmp
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
pop
cmp
daa
or
xchg
cmpsl
sub
xor
cmp
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
cmp
leave
adc
and
sub
xor
aas
add
aas
inc
aas
dec
aas
push
aas
pop
aas
pusha
aas
mov
jae
jp
cmpb
aas
lea
xchg
aas
lcall
aas
mov
aas
sarb
loopne
in
jmp
cmc
aas
cli
push
or
adc
mov
iret
cvtps2pi
nop
aas
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
popa
aas
addr16
jnp
cmpl
xchg
aas
fwait
aas
mov
aas
mov
mov
aas
iret
aas
aas
fdivrl
jecxz
jmp
aas
std
push
add
or
mov
iret
sbb
xor
aaa
iret
ds
inc
iret
dec
iret
push
iret
pop
iret
pop
iret
gs
imul
iret
js
jg
test
mov
xchg
iret
lcall
iret
ret
iret
iret
iret
fcmovne
out
repz
inc
or
xchg
and
inc
dec
dec
push
iret
pop
iret
arpl
imul
iret
jnp
or
iret
xchg
iret
fwait
iret
mov
iret
mov
iret
fmulp
in
jmp
icebp
iret
clc
iret
inc
add
mov
and
repz
aas
repz
repz
repz
repz
repz
repz
repz
jg
mov
xchg
repz
repz
repz
repz
repz
in
repnz
testl
mov
and
xor
ud1
inc
iret
push
iret
pop
iret
arpl
push
jo
ja
jge
test
mov
xchg
iret
xchg
iret
sahf
iret
movsb
iret
stos
iret
mov
mov
iret
lret
iret
ror
fmul
in
in
iret
repnz
cli
ret
add
or
and
sub
xor
cmp
inc
repz
repz
repz
repz
rep
repz
jnp
xor
repz
repz
repz
repz
repz
loopne
in
jmp
hlt
testl
add
out
pop
or
cmp
cmp
cmp
xor
cld
push
cld
pop
cld
pop
cld
push
cld
cmp
cld
nop
cld
sahf
cld
mov
cld
mov
cld
aam
loope
out
out
cld
hlt
cld
sti
cld
add
xor
cmp
cmp
cmp
cmp
cmp
inc
aas
inc
aas
push
aas
pop
aas
gs
imul
aas
js
xchg
mov
xchg
aas
mov
mov
aas
repz
decb
pop
xor
pop
add
pop
loope
jmp
lcall
stc
out
stc
idiv
add
pop
and
dec
push
mov
xchg
iret
sahf
iret
mov
iret
repz
sti
ret
push
xor
xchg
das
mov
arpl
outsb
jecxz
repz
add
jnp
xchg
jp
pop
loop
dec
je
sub
xor
fs
cmp
xchg
inc
aad
jmp
cmc
cmpsl
std
lds
push
and
jae
movsl
xor
sarb
in
call
jno
les
cmp
je
jbe
js
dec
je
iret
xchg
iret
stos
iret
mov
mov
iret
lret
iret
aam
fcmove
loop
cld
inc
cmp
leave
pop
xor
ja
push
mov
jle
jle
jle
sbb
cmp
popf
sub
sbbl
dec
repz
repz
rep
repz
jl
push
inc
push
ret
stc
sar
fdivs
ljmp
adc
sbb
ds
push
aas
mov
es
pusha
push
ds
dec
sub
cmpsl
xchg
cmc
out
loope
aas
cs
out
outsl
xchg
adc
dec
mov
repnz
inc
push
jb
je
jbe
js
jp
jl
jle
jle
sbb
xor
orl
je
mov
loope
or
ss
test
xchg
xchg
lods
inc
push
pop
jmp
call
je
jbe
js
jp
pop
hlt
clc
dec
imulb
in
xchg
rcrl
dec
leave
push
shll
jl
mull
repnz
or
jb
je
jbe
js
jp
jl
jle
jle
jle
push
and
xor
cmp
inc
push
sahf
gs
lea
mov
ds
in
jmp
mov
add
dec
jle
xchg
iret
test
mov
cld
or
inc
or
es
cmp
mov
movsl
jle
jle
jle
jle
jle
cwtl
inc
adc
lcall
aas
jo
mov
mov
cltd
aas
mov
mov
ret
and
sbb
xor
popf
adc
sub
out
out
imull
out
out
loope
xor
xor
sub
inc
lock
hlt
clc
addr16
cmp
cld
mov
cld
ficoml
add
shll
mov
ret
and
jle
jle
jle
jle
jle
jle
jle
jle
jle
adc
xor
dec
and
out
out
in
mov
cld
jmp
shlb
in
call
imul
mov
jle
dec
and
jb
dec
dec
arpl
mov
mov
int3
iret
loope
test
inc
pushf
xor
cmp
sahf
aas
mov
enter
repnz
pop
cmp
xor
pop
dec
outsl
mov
mov
int
sub
dec
call
mov
jle
jle
sbb
cmp
popf
xor
dec
dec
cld
jae
sbbb
add
sbb
inc
in
pop
lock
hlt
jge
std
sarb
js
jp
pop
dec
scas
aas
jbe
sahf
rclb
popf
mov
and
pop
cmpsl
xor
xchg
call
adc
je
dec
cmpsb
adc
jo
dec
inc
lahf
movsb
js
pop
jle
cmpsl
lahf
in
xchg
inc
shlb
xchg
cmpsl
lock
xor
insb
aaa
push
add
and
aas
lock
xchg
cmp
jle
jle
jle
jle
jle
sbb
xor
dec
sahf
xchg
push
fisubs
sbb
push
aaa
sbb
xor
addr16
xchg
jp
and
out
out
in
xchg
push
mov
ljmp
cmp
mov
icebp
hlt
sub
es
cmp
cmp
dec
sub
cmpsb
lahf
xchg
pop
movsb
xchg
mov
or
rcll
xchg
or
cmp
cmp
push
cmp
cmp
lahf
cli
xchg
subl
movd
mov
add
cmp
inc
cmp
outsb
cmp
lahf
es
add
or
dec
inc
addw
mov
pusha
add
jb,pn
xor
mov
aas
dec
icebp
stc
jns
sahf
sbb
and
ss
push
nop
cwtl
jle
jle
jle
jle
jle
pop
mov
cmp
fstps
jp
inc
popf
pusha
sbb
mov
int3
mov
xor
xchg
or
fwait
cmpsl
mov
ret
stc
cld
and
xor
sahf
cmpsb
push
mov
jmp
dec
daa
mov
xchg
aaa
aas
leave
imul
and
jb
je
jbe
dec
mov
scas
or
push
in
call
movsl
hlt
cld
sti
std
jo
aaa
in
mov
js
jp
jl
mov
jb
dec
jge
or
paddb
daa
push
dec
inc
je
xchg
repz
repnz
pop
rorl
xchg
mov
mov
repz
or
and
ss
jne
lcall
jle
jle
adc
aas
sbb
pop
ret
es
stc
mov
fs
fisubl
sub
push
daa
cs
inc
addr16
xchg
add
out
out
out
loope
xor
flds
and
mov
aam
fdivrp
jmp
mov
cmp
shlb
call
add
es
xor
addr16
xchg
jle
mov
out
out
in
mov
and
in
mov
insl
hlt
ja
cld
movsb
cld
ficoml
inc
dec
cwtl
pop
cmpsl
hlt
jp
add
out
out
in
sar
add
adcb
jp
jl
pop
aas
mov
push
or
sub
mov
bound
fwait
dec
enter
and
sbb
cmp
cmp
and
out
out
loope
cmp
cmp
daa
push
xchg
test
loopne
testl
cwtl
icebp
mov
test
cld
hlt
cld
or
cmp
dec
mov
push
cmp
cmp
lods
xchg
out
loope
cmp
leave
rorl
adc
mov
cmpb
addr16
in
sti
pusha
sahf
lods
in
xchg
data16
dec
out
aas
cli
or
aas
sub
push
cmp
and
push
dec
mov
add
push
nopl
xor
dec
cltd
mov
stc
aad
in
and
add
pop
push
test
lahf
out
hlt
adc
inc
js
xchg
mov
xchg
data16
xchg
iret
lods
bsr
xor
xchg
outsl
mov
loop
lock
jle
pop
or
loopne
mov
leave
in
daa
or
roll
or
mov
sbb
jle
add
dec
push
mov
sub
cmp
in
mov
mov
jle
dec
rcrl
aas
out
mov
pop
cmp
inc
scas
xchg
mov
rorb
adc
push
dec
xchg
aam
push
pop
in
call
dec
shrl
mov
pop
and
inc
adc
mov
nop
mov
js
ljmp
hlt
clc
pop
sub
sbb
jbe
js
jp
dec
cld
push
negb
dec
mov
iret
cmp
or
cmp
call
je
jp
xor
xor
leave
rcll
bound
adc
cmp
cmp
add
or
lahf
sti
cmp
cmp
jmp
adc
aaa
sbb
cmp
cmp
decb
adc
sbb
ret
cmp
mov
hlt
push
xchg
cmp
leave
inc
rorl
loope
call
je
dec
xchg
ljmp
aas
loop
and
dec
mov
aad
cmp
cmp
adc
cmp
cmp
cmp
add
or
ficoml
iret
movsb
iret
ror
in
adc
les
shlb
fisubrs
push
cmp
dec
dec
pop
mov
dec
mov
iret
test
repnz
jb
je
push
add
dec
or
popa
or
sar
clc
add
jbe
push
mov
lods
inc
in
stos
lock
loope
pop
pop
sbb
push
daa
pop
inc
into
mov
push
das
fidivrs
sub
sbb
cmp
xchg
ss
jmp
aas
daa
mov
xor
push
push
adc
popa
jle
stc
loope
icebp
stc
cli
stc
inc
js
cmp
mov
loopne
pushw
cmp
sub
dec
sub
cmp
inc
movsb
pop
bound
clc
test
adc
inc
ljmp
subl
jmp
js
sbb
sub
cmp
dec
mov
mov
sub
adc
pop
push
push
inc
lret
dec
lock
hlt
push
mov
cld
mov
cld
xlat
sahf
push
dec
add
ss
push
lock
xchg
clc
cmpsb
cld
scas
sahf
adc
repnz
push
xor
dec
mov
ret
sarb
test
or
clc
pop
xor
pop
cmp
dec
cmp
jno
test
out
out
out
in
sarb
stc
push
lcall
js
cwtl
ss
je
jbe
dec
xor
mov
dec
in
out
inc
mull
test
mov
lcall
inc
cmpsb
rep
repz
or
sbb
push
mov
mov
cld
aad
lret
lahf
notb
cs
inc
in
pop
pushf
fcoms
popf
dec
dec
mov
cmp
rcrb
and
jecxz
repz
cmp
imul
pop
sub
mov
popf
daa
ds
out
out
loope
ds
adc
xor
movsb
jl
dec
sub
sub
rcrb
dec
sub
inc
outsb
int
rcr
fildll
das
dec
adc
sub
icebp
xchg
stc
lods
stc
mov
sub
push
and
mov
jb
je
jbe
js
jp
dec
dec
sub
dec
xchg
lret
lahf
movsb
sub
fisttpl
pop
push
and
inc
ret
dec
rcll
sarb
jo
js
sbbb
and
out
out
out
loope
xor
push
inc
cmp
jb
pushf
jg
test
xchg
mov
movsl
cld
lods
cld
mov
addl
and
mov
loope
and
push
mov
pop
jae
nop
lahf
lcall
lahf
mov
xchg
aad
mov
pop
inc
sbb
fcoml
or
fnstenv
or
movsl
bound
push
jbe
nop
push
xchg
cmp
sbb
sub
mov
jle
dec
loope
mov
movsb
push
mov
xchg
lahf
popf
adc
scas
dec
xchg
scas
daa
lret
pop
or
out
call
andl
jecxz
repz
and
jl
nop
lcall
add
sbb
ret
jbe
stc
scas
xor
xchg
xor
loopne
mov
cld
in
std
rcl
orb
and
and
jp
dec
fistpl
xchg
lods
test
pushf
add
jg
cld
in
cld
cmc
mov
inc
or
loope
jmp
lds
sbb
imul
mov
mov
ficoms
push
or
pop
je
loop
add
adc
ficoml
jb
aaa
lcall
xchg
cmp
cmp
in
test
insl
leave
jnp
mov
cmovs
iret
call
pop
mov
jns
pop
mov
lods
add
popa
push
cmp
rorb
out
out
in
mov
mov
push
dec
push
popa
xchg
jno
ret
xchg
xchg
pop
sub
scas
xchg
mov
sub
cld
aam
pop
fistps
or
sub
cld
push
cld
data16
adc
dec
mov
jle
dec
into
mov
icebp
mov
lock
rclb
pop
out
in
mov
cld
movsl
in
rcr
rclb
xlat
dec
sbb
iret
inc
add
adc
and
push
jbe
mov
jle
leave
xchg
pop
ljmp
loop
out
iret
cmc
fcompl
cmp
mov
sbb
fimuls
pop
jle
mov
pop
jl
pop
xchg
iret
lahf
iret
mov
ror
lret
jecxz
sub
xor
push
xchg
inc
or
jo
jle
jle
jle
dec
lods
ret
mov
inc
dec
out
mov
sti
add
and
jl
mov
cltd
aas
sahf
and
mov
loopne
out
std
xchg
push
dec
push
dec
bound
push
loop
cmc
mov
pop
mov
hlt
lcall
enter
imulb
test
mov
lock
outsl
iret
jg
xchg
dec
stos
ror
dec
int3
add
repnz
adcb
cmp
ret
je
push
fcoms
cmp
mov
mov
clc
icebp
xor
loopne
push
pushf
cmp
mov
int3
out
out
loope
cmp
push
adc
stc
dec
dec
dec
pop
popa
incb
shlb
aas
fisubs
repz
les
mov
rorb
push
cmp
lds
push
add
lcall
jno
add
push
xor
enter
inc
je
jbe
js
aas
pushf
aaa
pop
xchg
mov
lcall
repz
cmp
lods
jno
mov
sbb
mov
ret
pop
sbb
pushf
jbe
js
jp
jl
dec
sbb
or
popa
loope
jecxz
push
add
dec
daa
mov
enter
std
push
mov
scas
xor
add
sub
adc
cwtl
push
dec
pop
cmp
loop
clc
pop
jle
pop
mov
rclb
ss
inc
dec
call
xchg
mov
faddl
push
mov
xchg
lock
sbbl
add
sahf
ret
xchg
iret
ret
sub
push
and
push
ror
cmp
outsb
in
ret
cmp
push
into
sub
mov
sbb
fs
cmp
push
std
leave
add
add
addb
cmp
sub
scas
jbe
cwtl
lcall
ljmp
push
and
mov
push
cmp
addr16
aam
jecxz
jl
or
pop
cld
and
dec
outsb
clc
mov
inc
and
mov
xor
push
les
pop
mull
ret
jo
cwtl
cld
pop
and
out
clc
xchg
dec
xchg
and
mov
push
cmp
inc
cmp
insl
loope
jle
and
repnz
call
je
jbe
js
jp
jl
jle
jle
pop
mov
xor
inc
pop
cmpsl
or
mov
jle
dec
sub
fidivs
cmp
jl
sbb
mov
cmp
dec
addb
shrl
or
js
dec
add
ds
lock
sbb
aas
and
fs
add
add
xor
push
xchg
jo
dec
into
andb
jmp
loope
jmp
mov
xor
daa
popa
add
jge
adc
rcll
push
sbb
xor
popf
sub
dec
lahf
pop
adc
js
bound
dec
movsb
and
xor
xor
dec
inc
mov
bound
stc
loopne
xor
cmp
pop
and
loopne
out
loope
adc
and
mov
mov
repz
aaa
mov
inc
push
jb
xchg
mov
ret
pop
push
or
sub
sub
aas
paddusb
inc
xor
xor
adc
cmp
in
call
imul
push
push
leave
leave
popa
dec
div
pop
sub
cmp
roll
cmp
dec
inc
pop
call
jnp
xchg
rclb
jle
pop
cmovnp
sub
mov
jl
and
adc
mov
xor
hlt
clts
jl
pop
int3
pop
rcll
in
mov
xchg
test
sbbb
xor
loope
sahf
add
outsl
xchg
xchg
addb
dec
pop
or
sbb
push
js
inc
cmp
xorb
imul
xchg
and
or
js
je
jbe
pop
mov
add
fsub
je
dec
lcall
inc
inc
daa
push
xchg
xchg
cmpsl
xchg
lds
sub
and
ror
pop
es
add
inc
mov
adc
es
popf
bound
xchg
addb
in
icebp
test
in
xchg
lock
out
cld
stc
cld
push
daa
ds
loope
mov
punpcklbw
sbb
aas
and
ret
idivb
je
scas
lods
inc
push
shlb
push
xor
in
lahf
test
dec
cli
fdivr
bound
dec
or
inc
xchg
loope
jmp
repnz
xor
in
call
insl
loopne
xchg
test
sub
sbb
aas
adc
roll
push
cs
or
je
add
and
data16
hlt
jne
xchg
pop
loope
out
int3
xor
mov
pushw
loopne
test
lcall
cmp
and
cmp
jno
pushf
xchg
movsb
mov
mov
sahf
add
xchg
sub
je
movsb
loope
cmc
clc
or
pop
adc
sub
xchg
xor
xchg
sub
pop
popf
xchg
mov
mov
jl
sbb
xchg
das
lock
xchg
loopne
lods
cld
mov
adc
sahf
cwtl
push
pop
push
jae
jg
xchg
xchg
cltd
lock
lds
sbb
subb
pop
or
out
cmpsb
or
lret
test
cmp
enter
pop
cwtl
test
ret
jo
pop
je
or
aas
jge
dec
mov
push
loopne
les
lds
lock
dec
call
ss
mov
mov
mov
cmp
imul
push
into
xchg
fcmovb
push
das
xor
jo
bound
jle
jo
xor
test
lcall
loope
aam
in
in
stc
cld
stc
jno
fdivrs
xchg
cmp
es
mov
push
mov
inc
xchg
icebp
loope
and
loope
jmp
or
pop
inc
mov
dec
in
into
push
scas
push
dec
push
cltd
bound
sub
leave
out
jecxz
stc
cmp
rcl
jecxz
and
or
and
pushf
cmp
rcrb
dec
std
rcrl
or
outsb
popa
mov
hlt
clc
clc
inc
and
push
shlb
sub
cld
cmp
aas
dec
popa
sarb
or
and
add
pop
out
daa
cmovb
or
repz
pop
sub
popf
sub
mov
push
mov
add
sbb
push
data16
ja
nop
adcb
dec
push
fdivr
in
stc
clc
pop
xor
dec
cmp
push
mov
stos
pop
fsts
in
xchg
cwtl
push
mov
ret
test
cmp
mov
ss
jbe
js
dec
sbb
lods
sbbb
das
or
rol
js
dec
push
or
subl
xchg
and
push
test
sub
lock
lea
cmp
or
mov
inc
push
aam
test
out
outsb
std
clc
dec
mov
sub
adc
or
lods
push
sub
popa
push
jo
mov
rcrb
mov
xor
cmp
xorb
mov
cld
adc
fcomi
cmp
dec
sbb
inc
movsb
adc
dec
sbbb
push
ss
pop
pop
hlt
sahf
mov
xchg
mov
cmp
lock
and
mov
aas
hlt
sub
sub
lock
sahf
push
sbb
xchg
jp
insb
test
lock
mov
cmp
nop
loope
call
dec
cmp
or
cmp
pop
xor
inc
dec
xchg
ljmp
and
or
cmp
sub
dec
mov
xor
pop
and
or
sbb
loopne
or
adc
andl
iret
rcrl
push
or
jl
pusha
jp
dec
ljmp
dec
dec
xor
jl
cli
or
inc
jle
ficomps
mov
popf
mov
push
inc
dec
clc
jbe
pushf
mov
xchg
icebp
popf
stc
cmpsb
fs
mov
mov
mov
cmp
adc
sub
das
sub
aam
pop
xchg
add
hlt
mov
in
fdiv
add
cmp
cmp
cmp
sahf
bound
cmp
insb
in
mov
cmp
or
cmp
inc
add
inc
loope
jmp
or
shrb
mov
push
pushf
in
dec
inc
popa
inc
sarl
aas
jmp
sub
notb
adc
sbb
sub
stos
pop
push
mov
push
clc
insb
xchg
pop
pop
test
lea
cld
test
lods
cld
mov
mov
repnz
aas
jmp
repnz
jb
je
jmp
xchg
push
test
dec
xlat
add
or
sbb
dec
sub
dec
inc
nop
or
sbb
jbe
adc
cld
repnz
js
icebp
shr
fnstenv
or
push
movsb
and
mov
dec
aaa
addb
adc
push
testb
dec
push
js
dec
push
sub
adc
fdivl
adc
test
and
xchg
mov
and
pop
adc
je
dec
inc
or
xchg
pop
fwait
ret
adc
repz
repnz
mov
pop
popa
mov
jecxz
or
daa
pop
cmp
inc
xchg
pop
cld
mov
mov
fwait
daa
mov
push
and
jo
daa
mov
xor
fsubl
pop
or
cmp
lcall
xchg
and
popf
outsl
pop
xchg
sbb
cmp
xchg
xor
cwtl
lock
loope
dec
pop
pop
bound
adcb
shl
in
repz
repnz
cld
xchg
sbb
lock
clc
aas
es
inc
les
jmp
mov
test
sbb
dec
xchg
or
xor
mov
jp
js
and
lods
inc
pop
adc
push
jp
push
mov
push
inc
lock
call
xor
cmp
sub
mov
cmp
xchg
inc
mov
ss
in
mov
insb
clc
clc
add
aaa
adc
popf
insb
xchg
jle
xor
rclb
dec
loop
and
in
mov
mov
and
jbe
push
fwait
cmp
pop
xchg
je
adc
or
pop
xchg
cmpsl
push
call
cmp
cmp
sub
jmp
inc
repnz
jl
pop
gs
outsl
addl
test
in
fsubl
call
pushf
test
and
cmpsl
push
das
sbb
cmovl
sbb
xor
popf
inc
push
dec
loopne
mov
daa
andl
ret
and
mov
sub
sahf
dec
xchg
test
call
xchg
mov
test
mov
ss
inc
dec
cmp
pop
shlb
shlb
mov
cli
shrl
jge
lods
jge
dec
dec
aas
loope
cld
jo
jb
pop
sub
clc
push
shlb
addl
loopne
in
mov
jae
sub
in
or
adc
ljmp
cwtl
adc
sub
inc
test
mov
cs
sbb
jo
dec
daa
pop
inc
jp
sub
daa
push
popa
shlb
and
pushf
sahf
mov
iret
icebp
dec
inc
push
xor
sub
inc
popa
addb
mov
into
mov
and
sbbl
add
adc
mov
cmp
inc
pop
jo
dec
adcl
mov
push
sub
mov
cmp
repz
pop
fbld
pop
sub
dec
lock
mov
leave
andb
push
sahf
cmpsb
sbb
dec
aas
into
das
jecxz
insb
idiv
and
aaa
mov
jmp
in
sti
push
getsec
and
push
mov
nop
jp
jl
pop
in
cli
lret
arpl
pop
je
jbe
pop
in
cld
ret
or
inc
xor
arpl
mov
cwtl
lcall
xchg
or
sub
hlt
push
clc
pusha
xchg
les
fwait
sub
ret
repz
dec
and
stc
in
repz
clc
sub
orb
push
mov
iret
push
or
loope
and
sub
pop
push
lock
clc
push
jle
pop
out
idivb
cld
add
cmp
daa
into
popa
fcomp
jnp
xchg
pop
dec
or
subb
movsl
push
ror
ja
xchg
sbb
jno
roll
loope
ljmp
paddusb
adc
add
xor
mov
push
inc
mov
push
cld
mov
js
or
into
sbbl
mov
dec
clc
ret
adc
popa
ret
mulb
dec
pusha
mov
dec
in
mov
jp
loope
call
je
dec
rolb
test
mov
cwtl
mov
ret
in
jle
dec
in
add
sbb
pop
xchg
mov
push
push
inc
adc
hlt
imul
sahf
lock
stc
adc
js
jp
dec
pushf
sub
push
clc
cmp
cmp
mov
mov
xor
test
call
pop
movsb
sbb
sub
cmp
je
pop
rclb
and
daa
push
inc
and
loop
test
mov
lahf
sti
xchg
and
inc
dec
aam
pop
push
leave
dec
pop
repz
adc
ds
inc
cmp
lods
dec
ds
daa
addb
stc
fdivrl
push
dec
mov
inc
aas
push
dec
push
test
das
sahf
popa
shlb
les
dec
out
inc
mov
xor
jne
pop
mov
pop
into
addb
sar
xchg
inc
ret
push
test
ja
mov
ucomiss
leave
sbb
dec
inc
rorl
enter
aas
ffree
and
loope
sub
jl
rorb
dec
int3
das
lock
jp
pop
mov
dec
pop
lds
or
shll
jp
mov
push
mov
or
and
ds
shrb
mov
add
inc
mov
xor
xchg
loop
and
loop
fdivp
leave
div
fcoml
add
and
sub
dec
ss
cmp
pop
mov
outsb
jo
nop
lods
pop
xchg
push
cmp
lret
adc
mov
cmp
jl
cmp
jecxz,pt
cmc
shlb
dec
pop
add
loopne
lods
mov
jmp
sbb
loopne
pop
and
pop
fs
mov
xchg
dec
push
xchg
jb
push
and
sbb
je
jnp
enter
mov
pop
std
cmpb
fcoms
btrl
cmpsl
iret
lret
iret
icebp
leave
adc
lods
je
jbe
js
jp
inc
gs
cld
popf
lahf
add
mov
or
lcall
xor
shrb
fsubs
mov
rorl
and
lea
shlb
dec
sahf
and
cmp
push
and
inc
cli
mov
pop
inc
mov
pusha
fiaddl
pop
sub
adc
dec
and
aas
or
inc
lock
and
mov
idivb
xlat
ds
daa
clc
inc
adc
and
inc
rcrl
xorb
test
addr16
das
aaa
shrl
add
outsb
cmpsl
add
pushf
mov
and
pop
mov
into
rcll
xchg
pop
adc
bnd
dec
das
mov
repz
adc
push
je
mov
dec
loop
pop
lock
in
mov
cmp
push
sbb
mov
jp
push
mov
daa
xchg
push
mov
mov
lock
testb
xchg
lods
fs
repnz
push
dec
adc
out
ficoms
lods
push
lods
adc
cmp
dec
out
pop
lret
movsl
movsb
lods
shll
cwtl
rorl
push
and
in
add
imul
dec
in
pop
out
xchg
mov
cmp
sub
out
loope
ds
push
xchg
jl
test
xchg
and
mov
adc
dec
mov
and
inc
dec
push
fs
xchg
and
and
scas
or
loope
pop
loope
outsl
or
rcrb
lret
pop
lock
lds
lods
out
std
pop
daa
xor
flds
xor
stos
cmp
pop
pop
sbb
cmp
insb
rcr
mov
adc
repnz
sbb
cmc
call
sbb
inc
ret
mov
xchg
lcall
dec
jmp
fs
lock
out
out
in
loope
loop
sarb
pop
test
lcall
imul
and
ljmp
in
lock
xlat
mov
push
add
fcompl
popf
sbb
imul
xchg
push
push
adc
int3
xor
fmuls
arpl
xor
repnz
dec
xlat
mov
lock
dec
call
cmp
or
or
sarb
dec
enter
repz
cmp
pusha
adc
xchg
in
mov
jb
cmp
pop
or
das
adc
pusha
jl
aas
push
in
push
and
fistpll
cmp
das
cli
or
les
hlt
dec
push
lock
lcall
aas
in
push
movsb
daa
jnp
mov
les
bound
test
sar
mov
ds
or
sub
je
dec
cmp
xchg
xchg
push
add
pop
movl
xor
leave
pop
shll
sub
out
sub
cmp
hlt
push
pop
jno
mov
inc
mov
fdivl
in
pushf
adc
loope
out
mov
push
test
jle
dec
rorb
enter
rorb
fmul
and
xchg
lcall
pop
rolb
jne
loop
jle
ss
das
fs
insb
xchg
out
in
clc
cmp
int3
or
add
or
adc
pop
hlt
mov
jo
jns
jg
mov
xchg
popf
xchg
repz
adc
pop
popf
add
sub
test
rol
lret
je
daa
and
jnp
into
or
std
fcomi
xchg
nop
lock
cmp
aam
adc
adc
fcoms
mov
cld
sbb
aaa
xor
mov
pop
or
fldenv
xchg
test
insb
jb
dec
data16
sbbb
inc
movsl
mov
rcrb
cld
in
mov
dec
call
add
pop
cmp
push
or
fwait
pushf
cmp
cmp
xchg
loope
out
lock
or
ds
inc
and
das
or
and
xor
xchg
pop
mov
mov
mov
add
mov
jp
jl
jle
jle
adc
cmp
and
jmp
jp
cmp
leave
fbld
daa
push
dec
loopne
aad
add
in
jmp
cmp
lock
pop
push
mov
outsl
xchg
sarb
and
punpckhdq
or
adcl
call
test
pop
mov
jb
bnd
adc
cmpb
stos
lock
mov
out
mov
dec
xchg
and
andb
pop
stc
push
push
cmp
ficoms
lock
add
cmp
mov
les
les
xchg
mov
sub
aas
mov
sub
xchg
testl
jmp
stc
movsl
cmp
and
outsl
pop
adc
loope
inc
or
lock
jbe
pop
xchg
cmp
cmp
pop
jbe
test
imul
xchg
loope
jmp
lock
int3
pop
mov
push
movsb
pop
add
out
ret
inc
dec
subb
jp
inc
pop
fstl
lret
push
pushf
adc
mov
jle
mov
icebp
aam
imul
enter
xchg
in
mov
and
jmp
mov
test
idiv
add
cmp
xchg
sbb
pop
sub
pusha
clc
hlt
jo
andb
or
movsb
xchg
int3
lock
cld
call
xor
xchg
pop
cs
pop
dec
and
pop
popf
xchg
out
in
mov
inc
stos
adc
fmull
ds
rcrb
ret
ja
idiv
movsb
or
dec
cmp
clc
ret
pop
xlat
and
or
push
das
ret
mov
scas
xchg
aad
lret
lret
add
test
xor
jmp
sub
pop
sub
imul
test
stc
shrb
cmp
js
dec
call
adc
shlb
or
jge
xchg
rorl
xor
adc
jmp
or
cmp
inc
xchg
hlt
push
push
jo
into
push
imul
jge
push
mov
sub
loopne
stc
xchg
pop
mov
movsb
test
jns
adc
cmp
mov
adc
dec
jle
add
mov
xchg
mov
adc
pusha
mov
mov
insb
dec
sub
out
or
loope
pop
loope
jmp
cld
sahf
xchg
xchg
in
mov
sbb
js
pop
inc
subb
loopne
nop
cld
mov
loope
insb
push
or
jno
xor
dec
push
cmpl
inc
push
aas
lea
xor
cld
add
xor
call
push
xor
dec
xor
sahf
mov
cmp
outsb
pop
xchg
pop
ret
cld
push
mov
inc
mov
divl
mov
push
xchg
sbb
popa
leave
push
imul
out
inc
pop
or
or
cmp
into
aas
dec
pop
das
xchg
pop
sbb
aas
aam
fisttpll
cmp
push
rorb
or
arpl
movsl
mov
fsubl
call
mov
mov
adc
nop
adc
or
aad
sbb
jnp
addb
leave
jb
das
orl
lahf
push
xchg
cmpsl
cmpl
repz
repnz
rcl
pop
xor
setge
loopne
and
daa
cld
sub
add
sub
nop
mov
pop
adc
ret
cmpsl
adcb
clc
cmp
cltd
loope
mov
jle
xchg
test
push
cmp
xchg
rcrl
xchg
sub
fs
js
sahf
sarl
repnz
mov
shrl
lret
cmpsl
mov
sbb
xchg
bound
pop
xchg
fs
xchg
xchg
loope
cmc
je
seta
clc
daa
jne
pop
push
pop
jp
mov
int3
mov
dec
das
std
xchg
mov
pop
xor
xchg
cmp
sub
insb
movsb
outsb
mov
test
inc
sar
insb
ret
fnstsw
repnz
int3
pop
inc
mov
insl
loope
cwtl
stc
mov
cmpsb
xchg
mov
js
fisubs
repnz
jb
dec
pop
sub
nop
xchg
cltd
dec
aam
push
ficomps
popf
sub
xor
or
or
mov
or
pop
push
andl
adc
loopne
pushf
insb
dec
lock
scas
popa
repz
jp
and
mov
or
inc
into
in
mov
and
mov
test
cmp
popa
lock
mov
pop
push
or
jle
es
jl
pop
ss
cmp
xchg
mov
push
test
pusha
test
and
or
inc
xchg
fdivrs
xor
xchg
cmpsl
lods
test
push
cli
test
cmp
cmp
sub
das
or
pop
lcall
ret
inc
gs
or
mov
sbb
pusha
push
dec
pop
push
sbb
mov
push
mov
loope
mov
ret
hlt
pop
push
into
lahf
out
repnz
add
xor
lock
aad
test
in
mov
popa
sbb
loope
das
push
inc
pop
imul
pop
cmp
cmp
pop
mov
in
bound
inc
mov
cmp
cmp
cmpsb
cmp
mov
pop
daa
cmp
shlb
test
in
dec
es
cmp
cmp
cmp
push
loope
shrl
mov
pop
xchg
ret
xchg
ljmp
leave
dec
and
jnp
cmp
aas
stos
sub
sub
cwtl
and
insb
jo
std
jbe
sub
test
aam
pop
cltd
lahf
test
mov
xchg
dec
xchg
inc
test
fcmovnbe
test
insb
mov
addb
sbb
dec
dec
test
mov
push
test
sub
mov
stos
add
add
test
fisubl
xchg
mov
div
les
das
cmp
xchg
cmp
gs
pop
sbb
in
mov
idiv
jb
cmp
rcr
leave
loopne
aas
jmp
cmp
cwtl
movq
das
xor
ret
dec
cmp
mov
mov
jnp
js
dec
pop
test
decb
ss
or
or
enter
inc
test
movsb
pop
jp
cmpsb
dec
adc
mov
js
dec
in
lock
imul
pop
rclb
dec
shrl
stc
out
sub
jbe
in
push
mov
lahf
loope
in
data16
cmp
mov
movsl
paddq
mov
or
add
movsb
sbb
stos
andb
jne
adc
mov
aas
ljmp
jb
je
pop
push
sti
js
dec
add
scas
or
dec
sahf
scas
shll
or
xor
dec
fcmovb
push
loop
out
ljmp
mov
pop
mov
push
push
adc
adcl
jle
pop
pushl
popf
add
fwait
mov
push
cld
cli
or
mov
cwtl
mov
mov
fldl
jno
fs
sub
cmp
lret
jle
xchg
xchg
stos
paddd
fsubrl
mov
test
push
fdivrp
mov
push
cli
inc
leave
andb
or
cltd
orb
xor
insl
lret
addb
sub
and
jge
mov
repz
call
add
xor
pop
rorb
cli
lock
dec
insb
cmpb
fmuls
loopne
ja
add
ds
sub
or
push
jb
popf
or
inc
sar
stc
ljmp
or
and
pop
xor
xchg
lods
jo
dec
into
loopne
icebp
xchg
enter
adc
ds
push
cmp
mov
pop
sub
mov
jl
jo
cmp
xchg
and
or
cmp
sub
push
jo
sub
lock
mov
sbb
ljmp
ds
dec
loop
icebp
xchg
stc
mov
and
and
enter
hlt
add
shll
loope
pushf
cs
rcll
lock
mov
aaa
fs
dec
ret
pop
mov
xchg
lahf
addl
repz
leave
insb
cli
add
jno
add
or
inc
xchg
mov
ret
sbb
sub
test
mov
ret
push
ficomps
fwait
push
mov
stc
js
pop
or
adc
and
mov
inc
pop
lcall
or
dec
sarb
dec
add
testb
jb
jg
cwtl
pop
fwait
ret
jbe
repnz
push
je
pushf
xlat
ret
add
or
jo
cwtl
mov
push
and
test
pop
insb
dec
lret
ficompl
inc
sbb
popf
sbb
xor
pop
pop
xchg
outsl
das
mov
mov
push
cmp
loope
add
test
and
xor
mov
push
cld
push
and
xchg
fs
mov
insb
inc
out
cmp
xchg
xchg
add
or
or
adc
push
mov
push
clc
in
xor
popa
rcrb
and
repnz
lock
repnz
and
xchg
sbb
or
aas
pop
aas
ret
daa
movl
jmp
je
aam
into
xorl
cmc
pop
adc
sub
pop
cmp
sub
mov
xor
stc
clc
sbb
jb
pop
dec
mov
mov
jmp
lahf
lahf
xchg
cmpsb
test
adcb
imul
adc
call
andb
ret
ret
adc
loopne
sti
xchg
inc
jb
pop
pop
leave
enter
les
imul
add
mov
sbb
fstpl
daa
sub
mov
fmul
adc
add
stos
lcall
sbb
xchg
add
add
xor
leave
push
and
or
lock
mov
loop
cli
mov
lret
popf
scas
and
push
ret
dec
xchg
imul
lahf
jge
mov
cli
das
loop
xor
je
sub
hlt
addr16
and
jb
dec
les
aam
adc
jle
pop
pop
xchg
daa
das
xchg
bound
add
jo
xor
gs
lock
mov
loope
or
add
dec
jb
sarl
lds
xorb
loop
push
xchg
ret
je
cmp
mov
lahf
or
mov
int3
andb
xchg
leave
int
test
popa
adc
leave
xchg
ror
sub
lock
aad
inc
dec
enter
inc
pushf
push
xchg
or
push
push
test
dec
mov
cmp
fidivl
jns
sahf
and
xchg
dec
inc
mov
sbb
or
xor
jge
ret
xchg
cmpsl
dec
mov
pop
sahf
lcall
mov
cmp
push
test
mov
dec
sbb
negb
cmp
cli
sbb
inc
daa
dec
add
arpl
or
mov
mov
pop
xchg
jl
pop
aaa
cld
cmp
jne
xchg
jge
push
test
pop
lea
repnz
rcrb
lods
repnz
test
lods
outsb
aas
shll
dec
ds
add
add
mov
push
aam
pop
sbb
jl
and
sub
jo
stos
xor
cmp
and
cmp
mov
xor
xchg
adc
push
repz
js
sbb
ret
ret
cld
and
cmp
jo
dec
and
mov
hlt
jbe
data16
js
test
scas
or
mov
lahf
aam
out
or
fiaddl
fsubs
mov
cld
lock
sbb
cld
into
push
mov
cmpsb
adc
scas
daa
insb
push
es
mov
pop
dec
push
out
jmp
or
loopne
and
inc
stos
adc
int3
mov
std
mov
mov
pop
mov
out
hlt
inc
mov
cmpsb
das
sub
mov
adcb
aaa
movsb
out
mov
mov
jne
jle
mov
push
push
or
sub
mov
cmp
outsb
loopne
or
adcb
ret
jo
cli
daa
movsl
adc
add
lock
popf
ror
clc
es
adc
cs
movsb
or
imul
add
sub
xchg
push
push
adc
jmp
fisubl
test
add
test
adc
jg
or
push
sbb
mulb
daa
pop
cwtl
cmpsl
sahf
movsb
in
mov
jb
stc
enter
aam
ficompl
pop
out
loop
repz
repnz
xchg
fs
jp
into
and
sarb
dec
xor
inc
call
inc
cmp
sbb
jo
sbbb
push
xchg
iret
lcall
fcomps
or
loope
or
lods
pop
out
cmpb
jle
inc
sbb
push
rclb
jle
pop
xor
mov
scas
sub
stc
jb
and
dec
inc
nop
stc
xchg
sub
push
mov
jle
dec
rolb
fadds
lock
xorl
xchg
push
mov
and
xor
and
push
jl
push
ret
rcrl
xchg
xchg
cwtl
test
mov
inc
daa
ret
into
xor
loopne
inc
pop
in
mov
das
shrl
adc
push
clc
clc
dec
xchg
push
jbe,pn
pop
cmp
mov
das
lods
or
rolb
pop
out
or
fdivl
cmp
scas
lock
push
push
aas
inc
ret
push
push
adc
xchg
enter
jle
ret
cld
adc
fisubs
jmp
and
and
pusha
popa
sbb
jnp
mov
lock
fxch
cmp
or
xor
jnp
add
and
mov
cmp
xor
cmp
loope
jecxz
test
inc
sub
dec
push
xchg
andb
push
call
pop
test
xor
popa
mov
lods
dec
mov
mov
pop
fcoms
push
sahf
adc
xchg
mov
mov
inc
xchg
stos
sbb
movsb
das
or
shrb
clc
pushf
dec
xor
cwtl
pop
mov
jl
decb
sub
movsb
jo
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
shlb
xchg
popa
nop
cld
push
xor
dec
dec
push
push
lods
sub
in
stos
paddusb
leave
fdivs
dec
add
add
push
mov
leave
xor
loopne
js
mov
aam
sub
sbbb
jo
sbb
and
lods
mov
lret
and
lcall
lock
je
aas
nop
es
xchg
xchg
movsb
das
mov
mov
ficoml
add
mov
or
or
movsb
push
sbb
and
dec
inc
or
mov
decb
xor
mov
in
aam
fdiv
fsubl
xchg
inc
stos
in
or
movsl
xor
mov
or
or
adc
and
in
mov
sahf
inc
adc
dec
mov
lret
pusha
xchg
test
jo
pop
js
or
pop
push
jle
pop
nop
ret
rorb
mov
add
mov
sarb
mov
add
aas
sarb
aam
fadds
xor
out
in
lock
mov
inc
sarb
in
call
adc
inc
sub
stc
sub
dec
das
xor
cwtl
cmp
aas
inc
dec
or
dec
lret
push
inc
mov
pop
jl
sub
stc
jo
sbbb
add
xchg
xchg
ret
pop
xor
mov
mov
lret
les
int3
ds
leave
fsub
aam
push
inc
call
fsubl
xor
xchg
inc
jg
dec
sbb
sub
add
dec
cmp
stos
inc
push
dec
dec
dec
sbb
adc
js
js
call
fmull
in
call
hlt
in
pushf
decb
call
adc
sbb
and
push
mov
adcb
aad
mov
lcall
es
and
jo
addr16
sub
fimuls
dec
pushf
out
test
call
in
das
les
dec
int3
repnz
loopnew
in
push
in
data16
jle
dec
cld
or
add
sbb
adc
sbb
sbb
lock
sub
jb
lcall
leave
dec
cmpsl
jl
in
roll
cmpsb
push
mov
mov
xchg
cld
cwtl
fwait
cwtl
xchg
test
lcall
and
int3
ret
pop
dec
adc
subb
mov
jl
and
out
adc
mov
ret
les
enter
dec
cmp
js
leave
dec
movsb
aam
call
pop
and
decl
mov
movsb
in
shl
xor
push
test
out
aas
xchg
es
repnz
shl
mov
idivb
je
jno
fs
loopne
mov
lock
xorl
lcall
sbb
and
xchg
mov
andl
dec
dec
ret
or
fidivs
pop
jl
cmpsb
test
mov
mov
xchg
stc
cwtl
sub
pop
mov
in
mov
xchg
mov
mov
loope
loopne
mov
add
cld
popf
add
add
les
adc
and
jbe
sub
int3
mov
pop
inc
cwtl
hlt
push
popf
add
pop
mov
xchg
push
rcrl
test
mov
fidivrl
nop
and
in
mov
pop
mov
or
mov
sub
aas
in
call
push
test
hlt
sbb
repnz
mov
fmul
pop
inc
ret
xlat
pop
mov
add
xor
jle
pop
js
addb
or
nop
push
pop
push
cwtl
cld
mov
mov
lods
scas
or
mov
inc
dec
mov
enter
fsubr
push
popa
test
or
cld
mov
add
cmpsb
sbb
adc
pushf
sbb
and
pop
sub
xor
int3
cmp
inc
cld
jbe
dec
loope
push
outsl
sub
and
stc
subb
mov
clc
repnz
pushf
sub
stc
lods
push
mov
shlb
fdivr
loopne
clc
and
cs
shrb
loopne
jb
je
jbe
js
dec
adc
out
sbb
and
and
sub
inc
aas
cmp
stc
dec
insb
and
push
and
imul
fs
xchg
adc
je
test
lods
pop
and
stc
nop
stc
xchg
stc
cwtl
sub
bound
mov
xchg
xchg
in
clc
loop
enter
shl
mov
loopne
xchg
pop
call
mov
addb
add
or
subb
inc
and
scas
or
inc
add
push
mov
setl
fs
pop
insb
andb
xchg
addb
nop
xchg
xchg
cld
dec
aas
pushf
das
mov
xor
ret
pop
pop
sbb
fsub
loopne
or
call
dec
hlt
ret
push
test
add
or
or
sub
adc
push
decb
mov
cld
cmp
inc
mov
sub
or
pop
sub
bnd
push
insb
mov
je
jl
sbb
repnz
nop
clc
aas
cwtl
sub
clc
in
lods
jo
pop
mov
xchg
dec
aas
int3
and
and
or
add
push
subb
xrstor
insb
lret
jo
outsb
pop
js
jo
repnz
adc
cld
pushf
lahf
rcrl
aas
lods
and
stc
mov
lret
enter
rol
mov
pop
je
loopne
in
xchg
in
cld
lock
cwtl
clc
in
loopne
add
or
ret
fisubs
sub
sub
xor
pop
das
inc
test
dec
cli
or
pop
ret
fidivrs
jo
add
dec
or
clc
sub
mov
mov
xchg
pushf
mov
mov
pop
mov
mov
mov
enter
aam
dec
and
in
mov
movsb
clc
stc
cld
push
push
js
jp
jl
pop
sbb
sahf
hlt
jb
mov
inc
cmp
jb
inc
and
stc
push
push
shrl
mov
pop
test
and
ficompl
and
int3
xchg
shlb
cmp
stc
in
call
dec
scas
dec
add
fs
adc
adc
mov
and
add
aas
cmp
cmp
into
inc
cmp
pop
dec
push
out
push
xchg
pop
mov
fs
adc
je
popa
jl
imul
shlb
cwtl
or
mov
mov
mov
out
pop
mov
ret
sar
daa
adc
movsb
shrb
mov
dec
jp
xchg
xchg
in
movb
pusha
dec
jo
mov
xchg
mov
add
ret
pop
mov
jo
stos
nop
popa
sahf
mov
xchg
and
mov
adc
or
push
repnz
dec
mov
sub
sub
jo
adc
and
or
cld
dec
pusha
or
addb
sub
and
mov
xchg
xor
dec
push
or
sub
mov
jb
mov
adc
orb
inc
dec
push
or
jo
sub
add
shlb
pop
adc
cs
xchg
push
dec
jo
lret
mov
je
lock
xor
jo
push
rcrb
jmp
xor
inc
sub
xchg
add
cld
xchg
imulb
lock
ljmp
inc
fcoms
imul
mov
scas
imul
pushf
xchg
xchg
imul
test
jb
inc
insb
xchg
imul
imul
dec
xchg
inc
imul
xor
push
imul
adc
push
movsl
push
or
pusha
nop
and
push
add
jo
repnz
pop
enter
adc
jecxz
pop
pop
enter
les
addb
or
js
fdivrl
xor
les
mov
test
mov
nop
xchg
push
xor
jo
and
mov
jl
nop
mov
lods
and
mov
jl
fdivrl
jl
xchg
cld
and
insb
xchg
sbb
push
scas
and
and
stos
cs
push
sahf
movsb
adc
aam
fsubr
cld
hlt
mov
and
jl
scas
test
mov
mov
push
sub
jbe
jmp
sub
mov
enter
lds
or
sahf
cli
adc
dec
in
les
loope
cmp
mov
xchg
lock
cld
enter
dec
sbb
inc
inc
loope
jo
and
pushf
test
enter
pushf
in
adc
dec
jle
xchg
movsb
sub
pop
popf
adc
shlb
pop
mov
mov
shl
lods
loopne
test
lock
pushf
cmp
daa
sub
inc
mov
daa
pop
add
push
adcb
xor
jo
dec
mov
je
adc
dec
loopne
ret
bound
or
dec
sub
push
cmp
push
push
imul
xchg
test
jle
inc
mov
xor
pushf
xor
xchg
call
or
in
fs
mov
loope
add
add
add
xchg
cwtl
mov
jbe
inc
lret
adc
adc
add
add
add
subl
pop
call
subl
mov
sub
mov
mov
pop
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
push
call
add
pop
lea
lea
mov
rep
add
push
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
pusha
pushl
push
call
mov
popa
ret
nop
add
adc
aaa
out
or
or
wrmsr
les
pushf
add
dec
or
and
enter
add
rorb
or
nop
pop
add
pusha
test
and
sarl
cld
add
mov
call
mul
leave
lret
or
rclb
mov
xchg
mov
aas
adc
add
jne
stos
jmp
stc
dec
adc
lret
repz
inc
por
lods
shll
je
adc
in
xchg
cmovs
loopne
fistps
sub
jge
cmp
test
cmp
jg
mov
xchg
mov
mov
add
imull
lock
pop
jmp
mov
shlb
mov
inc
ja
pusha
ret
ljmp
xchg
bnd
sub
or
popa
push
call
in
outsl
sbb
push
lea
pop
add
inc
pushl
call
lea
movsl
sbb
push
pushl
call
les
mov
sub
lock
add
sub
push
mov
lock
push
push
push
test
insb
out
dec
add
pop
add
or
or
mov
orl
add
test
mov
jne
iret
jo
push
je
cli
inc
jp
or
push
add
dec
push
ljmp
cmp
je
jbe
testb
jns
dec
dec
push
orb
xorb
mov
inc
add
pop
insb
mov
pop
add
add
pop
sub
aam
test
push
pop
iret
popa
or
jmp
xchg
adc
fisubs
loop
mov
mov
jecxz
mov
movsl
cwtl
adc
clc
fistpl
push
lods
nop
push
pop
mov
adc
jo
cmp
adc
jl
adc
push
push
adc
insb
push
adc
fcoml
add
add
push
adc
mov
adc
mov
push
adc
add
add
mov
add
push
adc
mov
push
adc
add
add
call
add
add
push
adc
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
dec
outsl
popa
fs
imul
add
push
push
inc
push
xor
cs
dec
dec
add
add
dec
gs
popa
addr16
outsl
js
add
