rcll
mov
sti
jne
adc
into
push
inc
and
sub
popa
inc
rclb
pop
push
fcoml
mov
xchg
lock
bnd
push
out
fistpll
cwtl
xor
cld
and
push
sub
es
push
xchg
jmp
dec
jb
std
popf
cmp
gs
xor
mov
lret
dec
cmc
stos
adc
insb
int3
outsb
sti
rolb
out
pop
push
ljmp
sbb
mov
cli
movsb
aas
cld
sbb
lret
or
rclb
clc
dec
jnp
jns
and
adc
sbbb
pop
aam
xchg
jb
push
bound
push
pop
push
sub
xchg
incl
ss
shlb
je
mov
loop
insl
andl
mov
outsb
repz
ret
and
sbb
or
sbb
js
adc
fwait
inc
ficoml
add
ret
leave
aas
xchg
adc
lods
loop
or
adc
imul
dec
hlt
shr
xchg
lock
inc
sbb
push
lock
cmp
ljmp
clc
fnstenv
fidivrs
fnstcw
js
and
xor
push
and
das
pop
inc
sbb
addb
inc
pusha
adc
jbe
roll
mov
test
das
inc
sbb
and
stos
pop
cmp
test
aad
mov
cmc
popf
cs
in
clc
loope
or
ljmp
popa
fs
pop
orl
mov
mov
mull
int3
movsb
xor
mov
hlt
adc
enter
dec
pop
sbb
add
fidivs
push
negl
scas
dec
mov
out
cmp
gs
loope
jno
cld
adc
ss
mov
dec
shll
or
arpl
aam
push
sub
adc
mov
lret
popa
sbb
mov
aas
pusha
test
or
sub
xor
aaa
jnp
mov
mov
adc
mov
and
sub
fisttps
jmp
jbe
xor
pop
xor
fists
andb
in
hlt
xor
lods
push
sbb
cmc
out
adc
jns
or
mov
mov
sbb
int3
mov
shrb
mov
std
nop
jo
push
dec
cmpl
es
test
es
xor
dec
pusha
jle
add
ja
js
insb
cmpsb
in
xchg
stc
jnp
jp
arpl
mov
and
adc
lcall
pop
mov
insb
rolb
cld
popf
fidivrs
mov
insb
fsts
add
ret
xor
mov
out
push
adc
into
stos
test
adc
sti
pop
jg
xlat
or
call
ds
fwait
mov
add
std
scas
daa
mov
mov
inc
scas
cmpsl
gs
mov
insl
orb
shlb
in
repz
sbb
lods
xor
cmp
out
std
imul
mov
stos
fildl
mov
loope
add
in
or
jne
inc
fisttpl
stc
mov
pop
loope
jnp
pop
lret
mov
lcall
fstpt
mov
shrl
test
mov
jns
arpl
jns
subl
jb
cmovnp
and
mov
add
jno
in
cmp
addr16
je
push
and
fwait
ret
int
sti
test
sti
jo
pop
fimuls
leave
andl
pop
mov
inc
lcall
outsl
xchg
lds
push
clc
mov
push
mov
popf
and
stos
mov
movsl
jnp
push
cmp
jecxz
es
test
or
arpl
xor
in
push
iret
push
cmp
and
mov
mov
adc
stc
out
pop
mov
ljmp
inc
and
out
xchg
sbb
and
mov
and
lods
dec
aad
jne
das
push
jo
sti
inc
lods
push
push
sbb
mov
inc
add
ljmp
cwtl
jns
aas
pop
outsl
mov
fnstsw
insl
lds
sbb
lret
mov
mov
cli
stc
divb
add
fcoms
repz
test
jp
cwtl
icebp
pop
shrl
movsl
push
sub
push
out
xor
push
stos
push
mov
pop
mov
sbb
lret
mov
cwtl
js
xor
add
out
xchg
cmp
bound
inc
jbe
mov
push
mov
cmpsl
add
mov
aaa
sub
shrl
push
subb
inc
adc
jle
lods
aam
mov
je
add
cltd
mov
sub
pusha
sub
push
push
out
fstpt
mov
mov
mov
add
dec
or
xchg
add
cltd
ret
xor
cwtl
sub
xchg
pop
lods
sti
cmp
divl
rcll
je
andb
mov
clc
mov
push
xchg
repnz
movsb
sbb
inc
pop
dec
xor
das
stos
mulb
fwait
xchg
jnp
and
lods
or
outsb
mov
leave
in
xchg
sti
test
jne
xchg
xchg
mov
push
jne
sub
movsb
jecxz
bnd
adc
push
dec
das
inc
adc
testl
pop
mov
cld
enter
call
push
outsb
out
pushf
mov
outsb
lods
dec
pop
inc
ss
iret
imul
sub
mov
add
ret
jnp
mov
fldl
imul
pushw
popf
push
lods
cld
cltd
add
jae
xor
push
xchg
icebp
jb
stc
mov
push
cmp
shlb
or
pop
sub
mov
mov
loop
je
dec
and
and
out
cmpb
xchg
mov
sub
ret
and
push
and
jnp
mov
dec
or
aam
js
loopne
sbb
sub
cmp
push
fmul
xor
adc
fcmovu
mov
int
stos
in
sub
push
jle
clc
cmp
or
adc
arpl
test
mov
daa
adc
mov
nop
mov
and
jae
stos
movsl
rcrw
stos
clc
pop
xchg
int
lret
jl
sarl
adc
add
mov
sbb
pushf
mov
push
push
int
add
dec
lds
jmp
fptan
mov
pop
testb
lds
and
adc
sub
lret
cwtl
mov
mov
adc
or
adc
aaa
push
add
lods
mov
push
sub
jge
hlt
adc
leave
out
xchg
jb
fisubs
dec
cmp
lahf
std
cmp
mov
fiadds
daa
cwtl
xchg
dec
test
test
mov
cmp
stos
cltd
add
push
inc
jns
jle
stos
push
xor
lcall
mov
push
xrelease
jns
jo
pop
sahf
rorl
repnz
mov
mov
push
jnp
or
mov
test
lods
adc
adc
mul
sti
scas
xor
ja
push
mov
pusha
lret
loope
xchg
dec
push
into
inc
add
sbbb
sbb
in
repnz
jle
adc
iret
xchg
or
arpl
dec
add
mov
daa
lock
inc
mov
js
jle
mov
rorb
push
shrb
add
sub
out
jne
xchg
out
bound
push
cli
pop
fbstp
cmc
iret
pop
mov
xchg
lds
inc
jl
jne
xchg
sbb
movsb
cmp
xor
popa
xor
push
sub
ja
inc
push
cmp
and
mov
mov
and
add
loopne
jns
pop
outsl
cltd
xor
jne
sbb
fstpl
int3
adc
dec
sbb
pop
stos
ret
icebp
mov
inc
jecxz
test
add
and
and
push
push
sbb
jmp
or
leave
ret
push
rclb
mov
insb
cmp
add
jae
mov
sbb
loop
iret
mov
xorl
inc
div
scas
fnstsw
jb
enter
push
dec
sub
add
imul
pop
sbb
les
shl
das
ffreep
rcll
pop
adc
imul
rclb
sbb
cmp
lods
or
xchg
mov
cld
cmp
pop
mov
mov
mov
sub
sub
xor
mov
jecxz
sub
or
xlat
ds
jle
jbe
popf
mov
scas
jno
jae
push
pop
push
push
sbb
in
xchg
push
enter
pop
adc
pusha
xor
shlb
push
or
clc
mov
cltd
sub
push
cmpsl
aaa
jmp
add
in
lret
adc
sbb
test
lret
aad
mov
cli
push
dec
data16
jne
and
sarb
add
adc
outsb
mov
adc
fldcw
into
in
movsb
insb
fnsave
xchg
mov
jecxz
sbb
arpl
mov
idiv
stc
cmp
adc
iret
stos
leave
mov
out
addl
sti
cmp
jge
xor
int3
pop
pop
inc
or
loop
cmpsl
adc
cs
xor
mov
divb
out
aad
jmp
int3
jle
test
insl
pop
push
or
inc
push
cli
dec
imulb
mov
xchg
repz
add
xorb
fidivrl
push
sub
sti
icebp
push
outsb
shrb
cli
and
cmpsb
test
sub
jno
sbb
or
mov
mov
out
add
xchg
in
xlat
sub
cmp
xor
sub
clc
outsl
jb
and
fidivl
shrb
jnp
mov
subl
test
mov
sbb
xorl
popa
push
xchg
push
jp
lret
outsl
icebp
lods
dec
mov
pop
xchg
ror
jb
iret
push
jnp
iret
or
cs
mov
push
push
sahf
jbe
cmovge
jl
out
mov
pushf
adc
cli
inc
inc
stos
jb
lock
movsl
les
sbb
imul
loope
loop
popa
cld
cmp
rorl
ljmp
mov
cmc
repz
es
out
or
sub
int3
in
pop
dec
inc
loope
cmp
fwait
cli
cmpsl
push
mov
mov
jb
lea
push
aas
lcall
jo
jmp
push
jg
inc
pop
pop
cmp
fcmovb
push
test
inc
and
rcrb
test
aam
jmp
xchg
scas
pop
pop
repz
mov
push
pop
xor
dec
xchg
incb
inc
movsb
mov
xor
jno
sbb
cwtl
in
mov
cmc
jecxz
mov
dec
arpl
stos
ss
mov
fsubrl
cli
movsb
mov
mov
repnz
xchg
jg
test
sahf
jno
mov
jmp
loope
adc
outsl
lods
or
or
cltd
xor
inc
sub
in
hlt
insb
imul
adc
aas
movsl
js
cmpsb
popf
addl
mov
jne
imul
icebp
lret
iret
loope
cltd
inc
cld
cld
repnz
dec
pop
mov
xor
jmp
mov
lock
push
add
imul
je
mov
in
ljmp
or
in
lcall
popfw
aas
ljmp
sub
sub
enter
xchg
in
lcall
shlb
inc
imul
fstpl
cmp
or
push
dec
es
mov
repnz
aad
adc
xor
push
xor
adc
sub
fcmovbe
xor
or
pop
jl
dec
rol
push
xsaves
fs
push
lar
mov
and
push
cmp
js
in
mov
pminsw
fnstcw
test
mov
mov
movsl
xor
test
sub
and
in
mov
xor
push
mov
cmpsl
rcrb
xor
insl
add
xchg
jb
adc
bound
sbb
out
dec
mov
les
mov
stos
mov
stos
cli
lds
insl
les
filds
outsb
lea
pop
pop
aam
out
pop
pushf
je
mov
into
xor
shlb
cmp
dec
add
dec
jo
dec
add
xchg
jne
lea
in
lahf
mov
ja
insb
mov
mov
cmc
scas
push
dec
xor
or
mov
cmp
xchg
mov
sti
xchg
insb
pop
mov
inc
jge
imull
lods
sub
pop
movsl
jnp
loop
xchg
aad
sub
sub
cmp
fdivr
xchg
stos
mov
jge,pt
jne
scas
in
scas
pop
pop
out
aam
js
sti
push
das
mov
div
and
stos
and
sbb
push
dec
int
inc
fs
lahf
add
leave
scas
add
pop
push
outsb
fldl
insl
into
push
fldcw
mov
bound
cmpsl
mov
sarb
sbb
andb
aaa
lahf
subb
pop
inc
mov
jl
aaa
cli
adc
stc
pop
pop
add
sti
and
adc
insl
subb
mov
and
flds
or
mov
int
pop
cltd
fwait
dec
outsl
jmp
sbb
dec
sbb
jle
fsts
out
sbb
out
push
call
ss
fistpll
pusha
dec
adc
adc
inc
fisubs
outsb
xor
mov
and
popa
aaa
movsl
les
lcall
jge
cmc
push
sarl
out
insb
ucomiss
jns
in
in
adc
mov
jae
sub
mov
jo
imul
mov
out
enter
bound
jb
mov
inc
xchg
mov
jne
push
loope,pn
add
lcall
add
and
push
pop
and
fistpll
ds
push
push
push
mov
mov
sub
lods
mov
cmpsl
xchg
sub
push
mov
adc
cltd
int
das
or
fistpl
push
jp
movsl
pop
repz
pop
in
inc
cmp
jge
jo
pop
fmull
sbb
daa
icebp
mov
movsl
or
mov
mov
pop
xchg
aaa
sub
push
lods
mov
jp
aad
in
bswap
xchg
pop
pop
xchg
pusha
lea
cmp
out
push
int3
gs
pop
mov
outsb
sub
repz
mov
ret
imul
lea
cmp
mov
iret
mov
arpl
lods
mov
jb
sbb
lahf
sub
aam
pop
fwait
das
fldcw
mov
bnd
in
mov
or
pop
adc
fimull
les
popa
mov
fnstsw
lods
xchg
out
push
cmpsl
bound
pushf
stos
xor
xor
push
mov
xchg
inc
pop
add
xchg
imul
out
push
out
push
and
outsb
mov
jb
and
lods
mov
mov
dec
adc
shrb
jl
jl
jne
mov
pop
inc
add
fwait
add
addr16
or
pop
cmp
mov
jbe
dec
mov
adc
enterw
xchg
stos
out
scas
hlt
and
cld
cmp
or
mov
mov
out
mov
nop
adc
mov
movsb
pop
ds
outsb
in
and
inc
mov
mov
cmp
cs
std
sbb
pop
pcmpgtd
icebp
shrl
ret
or
out
or
lds
mov
sbb
test
test
jae
jno
jmp
inc
fiaddl
insl
dec
xor
mov
fcomps
scas
repnz
out
pop
jg
mov
mov
adc
scas
adcb
out
push
cmp
cmp
movsb
adc
fisttpll
add
sahf
adc
inc
hlt
add
mov
push
clc
or
sahf
or
mov
scas
or
imul
ret
divl
lods
mov
stos
iret
mov
arpl
sub
mov
negl
mov
add
sub
test
xchg
insb
push
cmpsl
xor
sub
rcll
in
adc
sub
sbb
jl
sbb
and
ja
cmpsb
inc
ficomps
jge
sub
rol
mov
mov
in
mov
sahf
jno
fsin
pop
cmp
and
or
pop
push
int3
and
into
push
or
push
inc
jbe
inc
aad
out
icebp
pop
inc
pop
dec
in
addb
dec
dec
dec
xchg
cmc
xchg
ja
push
adc
hlt
push
scas
pop
or
lcall
push
mov
pop
cli
push
pop
xchg
pop
pop
dec
or
push
clc
test
leave
sbb
in
cmpsb
push
cmpsl
xchg
gs
mov
in
daa
inc
mov
cmc
pop
inc
inc
xor
icebp
mov
xor
sub
bound
nop
cld
rcr
xchg
mov
pop
stc
cmp
lock
fnstcw
ret
addb
outsl
incl
add
push
arpl
sahf
lret
dec
fcomps
or
jbe
mov
das
fisubrl
fucom
int
mov
js
push
andl
dec
jmp
xchg
jno
mov
adc
push
cli
mov
mov
loopne
sahf
imul
mov
xchg
sbb
mov
pop
cmp
mov
sub
fwait
and
imul
fiaddl
xlat
imul
pop
xorb
mov
gs
mov
addr16
cmp
aad
add
pop
add
mov
jle
scas
imul
arpl
adc
lcall
jne
rcr
in
mov
push
pusha
fwait
js
pop
inc
mov
mov
fsubrs
mov
cmc
ret
jmp
andl
pop
sbb
mov
inc
incl
filds
mov
enter
out
scas
pop
ret
ja
inc
out
movsb
dec
inc
and
fwait
mov
shlb
inc
mov
sub
popa
imul
sbb
pop
mov
dec
sahf
mov
out
mov
lock
jns
ss
push
nop
jge
pushf
mov
mov
xchg
push
into
fnstenv
mov
mov
or
mov
pop
cmp
addb
mov
flds
dec
lcall
jle
mov
fstp
fsubr
aam
daa
inc
lahf
and
loopne
sub
xchg
jg
lods
ss
scas
movsb
int3
xchg
decb
stos
sub
dec
incb
jns
pusha
lods
pushf
test
dec
dec
pop
pusha
mov
cld
ret
xchg
xchg
lds
pusha
repz
inc
daa
bound
testb
ljmp
hlt
mov
fidivrs
add
dec
mov
mov
jae
insl
insl
jbe
bound
inc
inc
cmc
aaa
sub
adc
stos
repnz
scas
lods
lret
mov
jne
dec
fidivrs
jmp
es
cmc
jno
mov
inc
arpl
inc
ret
sub
sti
lahf
outsl
push
into
add
sbb
iret
inc
nop
jmp
sub
mov
dec
pop
sub
insl
mov
mov
jg
dec
mov
mov
int
xor
push
xlat
add
in
shl
pop
leave
sbb
lock
push
push
xchg
or
or
sti
in
in
nop
inc
syscall
xorl
ljmp
cmc
and
sbb
lret
and
arpl
mov
adc
inc
cmpsl
pop
aaa
xor
testl
lret
mov
outsb
lret
subl
popf
xchg
imul
xor
xchg
cmp
iret
mov
aad
mov
jg
je
call
sbb
loop
cmc
dec
fistpl
sahf
insl
xlat
add
cld
add
loopne,pt
push
mov
mov
push
xor
push
jnp
xor
arpl
mov
mov
push
xchg
push
gs
push
clc
xor
sbb
sahf
dec
inc
mov
mov
into
sarb
insl
push
fnstenv
cmpsl
xor
inc
cmp
and
leave
ficompl
xlat
outsl
mov
inc
fbstp
movsb
xchg
sub
sub
aaa
push
push
inc
dec
pop
xor
or
fptan
stc
cltd
sub
mov
and
jg
lahf
jge
sub
sti
mov
clc
sbb
pop
xchg
adc
xchg
push
idivb
or
aaa
xor
movsb
pop
enter
int
call
push
ja
pop
sahf
pop
push
jbe
pusha
xchg
add
xchg
lret
xorb
push
mov
loope
cmpsb
add
push
bswap
cmp
out
mov
adc
push
xor
push
mov
jbe
scas
insl
xor
in
int
xchg
out
filds
and
cmp
fcoml
das
out
mov
jmp
xlat
pushf
xor
out
sbb
aas
xchg
fiadds
jne
pop
pop
jecxz
pop
cld
daa
lahf
or
fld
xor
and
ficoml
imull
ret
or
adc
jge
int
dec
stos
data16
mov
dec
movsl
pop
ret
inc
les
test
test
jno
xor
pop
test
xchg
sarb
incl
movsl
jle
dec
xchg
imul
bound
sbb
push
int
fsub
pop
das
cmp
aad
sub
adc
imul
and
dec
add
lcall
rol
fwait
push
mov
cmp
push
imul
cmp
lret
sbb
insl
icebp
sbb
aam
pop
add
xchg
mov
imul
or
mov
mov
or
dec
xchg
jae
bound
xchg
out
lret
cli
jmp
rclb
test
icebp
loop
ja
shrl
out
in
bound
jg
mov
repz
add
push
mov
pop
or
rcrl
or
bound
bswap
dec
push
and
xchg
or
cmp
mov
adc
pop
loope
jmp
int3
repnz
xchg
jp
shrb
add
xchg
or
cmpsb
test
and
lods
loope
dec
aaa
test
pop
ret
sub
sti
push
add
cmp
std
mov
ss
scas
adc
xchg
imul
stos
and
inc
test
out
rcrl
test
sbb
int
inc
mov
dec
xchg
pop
sub
cmpsl
mov
scas
mov
dec
xchg
xchg
stos
in
test
cmpl
cli
lods
inc
adc
push
jp
xor
enter
inc
adc
fwait
sub
or
push
mul
mov
outsl
decb
inc
repnz
test
std
jno
sbbl
inc
pop
cld
sub
scas
pop
insl
mov
int
lret
mov
icebp
es
inc
repz
cmpsb
or
inc
bswap
inc
jo
mov
cmpw
cmpsl
mov
out
out
in
ficoms
sub
jle
jbe
sub
arpl
sbb
jecxz
scas
add
mov
jae
dec
dec
push
shll
and
xor
fs
aas
lret
mov
fchs
adc
mov
cli
xor
adc
ja
add
int3
xor
inc
dec
dec
out
cli
pop
fisttpll
shll
jo
cmp
jg
cmp
sbb
stos
sub
in
insl
push
xlat
xlat
frstor
fbld
and
dec
icebp
mov
lahf
test
cmp
mov
outsb
test
ja
cwtl
insl
mov
mov
dec
out
adc
jns
ljmp
jecxz
mov
cmpsl
sti
sub
iret
fsubrl
out
mov
ret
and
or
xlat
dec
sub
unpcklps
adc
mov
mov
scas
stos
enter
ret
ds
into
in
mov
xchg
out
inc
mov
mov
les
scas
adc
cmpsb
mov
in
stc
cwtl
xor
repz
push
jmp
sti
stos
sbb
push
and
jecxz
jp
outsl
in
aam
pop
insb
scas
ret
push
cltd
jge
roll
push
push
xchg
or
xor
jmp
sub
adc
or
fnsave
rol
aas
or
xchg
arpl
out
int3
inc
xchg
cltd
mov
fs
repz
dec
les
add
orb
cs
push
ret
es
push
fs
cltd
pop
fcompl
inc
xchg
pop
lahf
xchg
mov
daa
jl
dec
ficoml
push
aad
inc
jg
mov
inc
cli
test
sub
jno
sub
test
push
popa
clc
and
into
fsts
or
psraw
js
add
insl
jge
xor
and
test
xchg
sbb
xchg
ret
jg
and
cmp
std
pop
jbe
seto
inc
adc
mov
xor
mov
pop
push
push
pop
lds
jmp
test
mov
je
mov
mov
push
sbb
jp
je
fmuls
mov
sahf
loope
test
mov
sub
dec
add
movsb
shrb
out
leave
mov
sahf
mov
jno
pop
out
dec
cld
inc
mov
push
push
push
adc
fmull
outsb
test
adc
mov
test
cmc
and
sbb
loopne
or
xor
frstor
lret
push
mov
psrld
cs
add
in
les
jb
inc
out
inc
jle
jl
jbe
repz
mov
mov
pextrw
sahf
imull
mov
xor
in
addr16
inc
shlb
rorl
clc
jo
scas
loope
out
or
mov
and
add
push
or
pop
cld
mov
add
mov
rorl
cmpsb
xchg
sti
test
xorb
gs
add
xor
mov
dec
cmp
jp
lret
mov
mov
xor
leave
push
lods
inc
pop
fisubrs
push
sahf
mov
shll
std
stc
adc
mov
data16
shll
push
in
scas
add
inc
xchg
les
dec
test
adcb
inc
pop
cmpsl
jnp
out
dec
pop
shrl
jecxz
imul
push
pop
ss
sbb
leave
cmp
lock
mov
inc
mov
mov
cmp
mov
push
jp
or
cmp
mov
in
cmpsl
in
scas
lahf
pop
lods
mov
inc
daa
insl
xor
lds
cwtl
sub
xchg
cld
aas
push
dec
and
mov
inc
or
les
mov
jae
inc
lret
movsb
loopne
pusha
sbb
repz
xor
or
in
mov
arpl
clc
ret
jae
ljmp
xor
stc
jb
out
movsb
rcr
push
push
and
jne
xchg
pop
sarb
push
dec
bound
mov
cmp
mov
movsb
cli
cmpsl
push
cmp
lock
pop
bound
stc
dec
add
inc
pop
or
pop
and
je
nop
or
leave
mov
or
push
adc
inc
in
cmp
xor
shlb
call
fidivl
aas
add
add
pop
or
arpl
or
xor
jno
or
inc
push
push
int3
aad
repz
sbb
addl
jmp
movsb
sub
dec
jg
aas
jle
mov
xchg
enter
mov
lock
jne
repnz
in
pop
mov
sbb
lods
jno
cmp
jbe
int
lret
xlat
shl
loope
xchg
sbb
addr16
lea
xchg
fbstp
stc
sbb
in
push
inc
jecxz
in
jo
dec
imul
scas
sub
fwait
dec
js
hlt
or
vmulps
sahf
or
push
ja
push
dec
mov
shrl
jp
pusha
aam
scas
xchg
add
sbb
mov
int
shlb
rcrb
sarb
sbb
roll
arpl
xor
inc
xor
inc
add
outsl
jo
das
ds
daa
inc
je
jnp
dec
pop
pop
jo
outsb
scas
sbb
rcll
dec
ficomps
pop
rcrb
enter
loop
sbb
jmp
in
ss
mov
cmp
je
push
repz
sahf
loope
lods
nop
cmpsb
and
loope
xchg
sbb
jmp
xor
ja
arpl
scas
mov
add
pop
clc
lret
aam
mov
xchg
mov
cmp
js
mov
clc
push
lretw
jmp
scas
insl
iret
and
sbb
test
mov
mov
lcall
cmpsb
mov
pusha
in
adc
pop
mov
sbb
cmp
inc
imul
mov
fistl
std
jecxz
lods
sub
cmp
pop
ret
jmp
jno
adc
das
mov
pop
mov
les
push
test
sarl
scas
xchg
outsl
and
sahf
fsts
mov
scas
mov
xchg
add
cs
ss
jbe
jl
sarl
jp
ret
pop
inc
sbb
fs
sbb
push
movsl
push
cltd
push
repnz
sbb
iret
call
jnp
and
loopne
into
and
ja
mov
push
xorl
adc
mov
jno
stos
or
jmp
testl
sti
enter
mov
repz
decb
loop
movsb
mov
in
fsubs
stos
mov
test
inc
jno
shll
and
mov
sbb
adc
notl
imul
mov
jnp
pop
xor
clc
jo
dec
fimull
lcall
inc
and
push
vpandn
push
pop
stos
and
mov
mov
and
bound
cmp
mov
xchg
mov
dec
pop
cltd
and
lods
adcl
pop
dec
data16
mov
out
or
in
das
arpl
cli
in
faddl
lods
dec
dec
mov
icebp
aam
sub
mov
out
mull
xor
arpl
arpl
loop
mov
ret
xchg
insb
push
mov
daa
lret
or
ljmp
push
ret
or
loopne
add
shlb
adc
ficomps
sti
mov
je
mov
jmp
xor
sub
mov
repz
arpl
mov
bound
data16
jnp
sbb
jno
adc
xchg
imul
jge
stos
inc
cmpb
cmp
inc
sbbl
loope
outsb
mov
inc
pop
loop
cld
pusha
push
stos
je
sub
lods
imul
mov
mov
lcall
aam
rorb
lods
loopne
xchg
or
daa
add
nop
lcall
imul
pop
pop
push
cmp
pop
dec
pusha
or
loope
in
jp
scas
inc
sub
push
lods
movsb
lods
ss
push
mov
lods
or
or
mov
mov
jno
xchg
bound
rcrb
pop
int3
in
ffreep
bnd
cli
out
pop
dec
add
dec
out
cmc
jge
in
mov
test
pop
inc
fwait
cmpsl
ret
rcl
jmp
push
or
ficompl
test
pop
jno
or
idivb
fisttps
add
fldenv
inc
and
stos
adc
sbb
cmpsb
enter
fsubs
xchg
pop
inc
add
rcll
sbbl
arpl
dec
inc
inc
adc
mov
mov
mov
dec
dec
imul
push
mov
jmp
mov
jns
loopne
add
gs
push
and
sahf
and
xchg
insb
popa
xorb
ret
inc
adc
xor
mov
cs
imulb
int
dec
pop
xchg
fwait
stc
std
mov
call
pusha
mov
popf
pop
sub
xchg
mov
mov
pop
imul
push
jnp
mov
out
andl
mov
cld
nop
jmp
lods
add
inc
mov
mov
pop
stos
sarb
mov
data16
shld
pop
mov
stos
adc
and
add
cmp
xchg
cs
mov
aad
jae
and
cli
adc
pop
mov
fstpl
push
mov
pop
inc
push
push
int
xchg
mov
push
mov
pop
jo
sbb
nop
cmp
xor
sub
je
lods
mov
mov
jo
cs
rorl
mov
insl
into
pusha
test
mov
sub
aaa
mov
cmp
cltd
mov
test
loopne
pop
xchg
or
push
xchg
clc
clc
sbb
repz
inc
stc
jns
cld
movsb
mov
inc
fwait
cmp
cltd
out
ljmp
pop
sbb
test
arpl
xor
rcr
stos
loope
fld
cmp
cltd
xlat
in
gs
arpl
fnsave
adc
outsb
or
scas
rclb
in
xchg
mov
movsl
pop
pop
repz
rol
aas
push
fstps
data16
test
lcall
out
cmp
lock
mov
or
mov
mov
mov
inc
mov
or
clc
js
lds
xchg
jge
popa
or
out
adc
iret
jns
enter
out
jle
sub
les
out
jle
inc
or
ljmp
std
pop
xor
xor
sub
mov
pop
jmp
mov
ret
xchg
das
push
fsts
mov
sub
ficoms
mov
jnp
insb
dec
or
lods
push
test
sub
jno
mov
or
inc
mov
ss
xor
cmpsl
sbb
das
out
in
das
mov
clc
pop
mov
loope
pop
inc
es
insl
nop
inc
inc
clc
pop
jns
ja
es
xor
jnp,pn
cmpsb
push
or
mov
sub
scas
clc
cmp
ljmp
and
aam
mov
cld
mov
inc
fcomp
popf
lret
add
stos
mov
sarl
mov
loop
xchg
mov
fdivs
aaa
aaa
add
pop
push
stos
mov
popf
popa
jl
lret
andb
mov
cmpb
jno
lret
shll
jle
inc
test
sbb
cmpsb
xor
inc
lock
or
frstor
dec
pop
enter
enter
adc
pop
mov
rclb
sti
or
out
mov
lock
cmc
movb
pop
xor
stc
mov
push
inc
mov
inc
mov
pop
sbb
popf
mov
mov
push
push
mov
mov
fmuls
loopne
or
sbb
cmpsb
orl
out
loopne
ss
test
incl
cmp
imul
mov
xchg
in
mov
xchg
cmp
testl
dec
stc
pushf
add
mov
pop
dec
pop
inc
popf
out
mov
push
lds
test
cmpsb
sub
and
stos
mov
sbbb
les
pop
xorb
les
dec
cmp
or
sub
ret
push
cmp
cwtl
icebp
sbb
addr16
int3
test
clc
int
mov
lods
sti
sub
push
cmc
add
adc
cmp
push
cmp
xchg
inc
jnp
not
addl
or
loope
lret
xorb
cmp
fldl
daa
fimuls
mov
jp
ljmp
popl
inc
add
xor
sub
js
pop
jb
js
mov
jg
mov
or
pop
add
std
xorl
lcall
ficoml
imulb
mov
dec
inc
and
jns
out
divl
imul
or
and
movsb
sub
data16
repnz
mov
stc
movl
fs
or
insl
mov
sahf
in
cmp
and
aaa
int
push
imul
mov
loopne
add
iret
mov
iret
mov
xor
add
sbb
push
jge
popa
sbb
test
or
call
ret
out
add
negb
and
push
xchg
or
fwait
inc
shrl
cmp
adc
rolb
jg
cmp
xlat
neg
out
mov
addl
data16
pop
fiaddl
stos
sahf
orb
xor
outsl
ret
shrb
inc
adc
pop
push
lods
jmp
push
jp
fs
data16
mov
popa
push
nop
pop
and
outsb
stos
mov
xor
cmp
add
push
into
orl
int
xchg
cmpsb
add
int
jae
dec
sarb
das
daa
add
jae
adc
insb
pusha
add
ljmp
es
bound
sbb
or
xchg
scas
leave
jl
jecxz
adc
xchg
inc
cmpl
mov
mov
fldt
sti
xor
test
inc
mov
fmull
xor
add
and
daa
pcmpeqb
ss
xchg
popa
or
push
mov
jo
adc
and
lcall
xchg
adc
into
pop
sbb
mov
popa
add
daa
cmpsb
jo
mov
nop
cmc
cmp
sub
pop
insl
jb
outsl
out
lds
cmp
repz
or
shrb
das
mov
fsubl
add
pop
mov
push
lcall
xchg
mov
pop
out
in
dec
and
repnz
lahf
in
cmp
pop
cltd
dec
push
sbb
pop
es
add
ljmp
lcall
lahf
xchg
sarl
jecxz
movsl
jge
xchg
popa
sbbb
ljmp
aaa
inc
sarl
xor
das
scas
adc
lock
inc
sti
inc
adc
jne
push
out
xor
in
loope
mov
scas
loopne
pop
push
std
cmpsb
sub
ds
pop
aas
mov
rcll
scas
in
call
out
mov
jnp
pushf
sub
cli
cwtl
stos
fisttpll
xor
mov
add
sub
lods
cmp
in
into
fwait
jl
xchg
sbb
mov
jns
jmp
pop
add
pop
sbb
mov
in
loop
mov
adc
rol
and
ss
dec
or
push
xchg
mov
jle
roll
mov
mov
sbb
mov
pop
clc
cmc
lods
sbb
ss
test
or
xchg
xor
stos
sbbb
mov
lret
in
lret
mov
push
mov
loope
cmc
mov
int
dec
add
adc
lret
sbb
rorb
loop
cmp
xor
daa
jmp
push
mov
adc
mov
stos
insb
jmp
ret
jmp
fldt
repz
dec
xor
xchg
dec
stos
or
dec
sahf
clc
iret
jnp
jae
test
jmp
inc
lods
sti
push
mov
sarb
pop
mov
or
sub
cmp
stos
xor
into
cmp
xor
stos
shlb
mov
push
stos
add
in
xchg
push
jo
mov
inc
add
inc
xchg
jne
jl
nop
push
rcrb
push
dec
xor
cs
fnstenv
int
popa
mov
scas
ljmp
push
addr16
or
xor
cltd
mov
bound
fisubrs
jge
sahf
or
popa
xchg
xor
test
cmp
shlb
icebp
aas
mov
nop
fcompl
dec
xor
movsb
ljmp
push
inc
mov
xchg
pop
mov
ja
xor
sbb
inc
adc
xchg
pop
mov
cmpsb
pop
iret
add
cmc
in
pop
dec
mov
cmp
or
iret
push
subb
nop
test
jge
sub
or
dec
and
mov
into
lret
inc
pop
lods
dec
movsb
or
and
mov
icebp
and
sbb
jbe
dec
mov
sar
lods
sub
pop
int
xor
cmpsb
scas
lea
sub
and
repz
xchg
mov
push
push
mov
fistpl
test
test
pop
out
sub
adc
dec
mov
mov
fisubs
xchg
inc
icebp
jno
rcrb
lea
pop
sbb
mov
push
es
cmpsl
aaa
and
lods
cli
fs
popf
mov
loopne
call
lea
jmp
out
jno
addl
pop
jl
dec
in
into
mov
dec
nop
orb
int3
or
cmc
xchg
lods
repz
sub
add
and
pop
sbb
sbb
clc
sarb
outsl
cld
and
insl
mov
cmp
lea
pop
push
movsl
icebp
frstor
lahf
adc
mov
loope
icebp
imul
jbe
cmp
pop
lods
sub
add
push
mov
xlat
out
stos
repz
or
or
sbb
sti
sub
sbb
lods
lcall
mov
mov
push
inc
lahf
stc
cmp
gs
pop
jl
lea
fsubs
inc
stos
push
jle
das
push
add
in
push
mov
fmull
or
sbb
mov
sarb
jmp
jl
jo
addr16
std
or
push
xchg
std
mov
cmp
sbb
xchg
sbb
pop
cmp
mov
cld
inc
std
stc
jmp
xor
ds
mov
aaa
fidivl
cld
inc
pop
adc
inc
out
iret
js
lret
in
mov
sbb
pop
lods
icebp
sbb
rorb
mov
sbb
lods
mov
and
dec
pop
mov
negb
push
icebp
xchg
mov
cwtl
fldt
mull
flds
dec
aam
ds
outsl
jge
loopne
push
pop
cwtl
arpl
push
outsl
ss
jae
movsl
push
fcomp
mov
cmp
push
jb
mov
mov
jp
cmp
inc
gs
popf
add
jnp
xor
xchg
push
sbb
sbb
inc
in
inc
outsb
lock
jo
out
mov
pop
cmp
cltd
sahf
ja
sti
jno
or
js
add
mov
out
and
pop
add
dec
fisubl
scas
lea
sahf
jae
les
ret
sbb
add
xor
lods
mov
mov
sbb
icebp
std
pop
jns
push
xor
inc
fidivrl
fcomi
cli
xchg
fadds
xor
adc
jl
in
call
fsubr
or
push
movsb
jmp
js
mov
adc
cmc
sub
movsb
jbe
xchg
xchg
sub
jge
gs
ror
jle
jmp
shrl
out
mov
or
popf
loopne
pop
jmp
in
lret
pop
nop
dec
mov
push
jno
std
fwait
add
mov
fdivr
pop
das
in
pmaxub
jmp
icebp
jp
test
dec
mov
js
push
inc
mov
fldt
and
xchg
push
jae
in
adc
pop
outsl
sti
orl
lea
pop
clc
jl
xchg
adc
mov
ja
out
loop
cmpl
inc
mov
ret
std
aam
jp
add
data16
xchg
inc
xorl
rolb
nop
jmp
mov
lods
push
fstps
xlat
or
stc
xor
mov
sbb
and
inc
lea
and
and
and
lods
js
daa
push
jecxz
add
push
cmp
cwtl
sbb
mov
fdivrp
push
ljmp
xchg
arpl
dec
sbb
fldl2t
mov
sti
adc
nop
jno
je
into
out
xchg
xchg
ljmp
and
xchg
stos
lea
outsl
xor
lahf
jae
adc
sub
repnz
sub
pavgw
add
add
shlb
cs
mov
aad
lret
adc
loop
dec
cmp
mov
je
cs
outsb
xlat
pop
dec
xchg
cmpsb
lret
add
fbstp
dec
jmp
pop
sub
rcrb
mov
sbb
adc
sbb
inc
fiaddl
scas
mov
cli
or
push
push
movsb
ljmp
outsl
sub
ret
push
inc
pop
arpl
sub
inc
sbb
push
add
jl
cmp
add
lcall
mov
scas
cmp
mov
pop
xor
xchg
adc
das
jl
lock
push
pop
push
sub
out
xlat
pushf
push
mov
pop
pop
add
pop
dec
xchg
xor
mov
movsl
sar
mov
sub
xchg
fs
push
punpckldq
push
fs
xchg
dec
call
mov
rep
lods
loope
push
mov
sbb
inc
adcb
mov
jecxz
int
jle
filds
lea
ror
les
jmp
iret
loopne
cmp
call
fbstp
jnp
icebp
cmpb
lea
sub
sbb
inc
mov
lea
pop
push
xchg
in
adc
in
xchg
stc
inc
mov
pop
mov
mov
jo
dec
js
xchg
or
out
cmp
xlat
inc
cld
or
pushl
daa
pop
out
insb
mov
fisubrl
icebp
sbb
xor
jae
pop
and
push
fsubrp
dec
les
push
mov
xchg
aam
lods
dec
xchg
aaa
push
in
add
xchg
ret
jg
or
mov
xchg
imul
jge
pop
xor
pushf
mov
int3
sbb
push
sbb
sub
mov
pop
mov
scas
or
cld
push
sub
pop
orl
sti
sbb
lock
mov
push
rol
xchg
data16
mov
dec
std
xor
cli
int3
pushl
add
and
sub
cli
test
les
mov
xor
xchg
inc
inc
fisubrs
xor
cmp
xlat
sbb
in
faddp
mov
stos
repnz
inc
xchg
cmpsb
fldcw
daa
popa
outsl
dec
test
ret
test
in
ret
mov
dec
add
or
or
add
lods
stos
jmp
sbb
mov
push
scas
sti
push
jl
aas
dec
bound
jge
out
movsb
into
sbb
test
jnp
call
pmuludq
xchg
arpl
sarb
ja
dec
jb
in
mov
popf
addr16
gs
cltd
loopne
lock
jl
and
das
stos
int3
fldpi
xbegin
jne
mov
fwait
mov
sti
or
orl
sbb
ss
test
sbb
dec
jl
movsl
sub
add
xor
cli
add
in
cmp
mov
es
out
inc
jp
xchg
push
mov
lahf
repz
mov
sub
pop
int
jmp
sbb
pop
mov
imul
rep
add
rclb
lret
idivb
add
mov
shrl
inc
xchg
repnz
mov
adc
pushf
add
clc
fistpl
jne
push
hlt
push
out
lock
test
js
sbb
daa
add
pop
xchg
loop
ret
inc
pop
jecxz
in
adc
cmp
add
daa
xchg
pop
adc
fstps
inc
xchg
xor
insl
fisttps
sbb
cmp
or
and
xor
inc
std
movsl
scas
mov
pop
scas
adc
cmp
or
jne
adc
cwtl
icebp
push
shlb
mov
add
jns
adc
div
cwtl
ret
cltd
scas
lahf
mov
or
mov
imul
rorl
xor
xor
dec
mov
loope
sahf
add
mov
adc
imul
xchg
je
insb
je
adcl
sub
enter
adc
jae
or
sub
shl
aam
xor
add
addr16
fmuls
fwait
lds
aas
test
pop
cs
cmc
mov
test
hlt
jle
pop
xor
push
or
cs
mov
fidivrs
mov
movsl
jmp
roll
es
gs
sub
and
sub
dec
loopne
and
pop
lret
gs
adc
sti
jno
jo
loop
jns
cli
pop
jg
and
cmpsb
out
sbb
je
sarl
std
push
xchg
adc
pop
xchg
dec
nop
inc
xchg
and
aam
push
cmp
cmp
push
and
xchg
into
jns
mov
in
fstps
push
push
jnp
ja
sbb
test
je
push
inc
mov
hlt
push
sbb
adc
mov
jle
xchg
insb
or
and
mov
sub
out
fwait
xchg
arpl
inc
shrb
mov
aam
ret
lock
pushf
pop
ds
mov
inc
xor
xchg
cmp
popa
push
bnd
add
sub
mov
sbb
or
mov
jecxz
inc
les
fldcw
sahf
sub
out
or
xorb
fldt
mov
inc
aam
adcl
movsb
inc
sbb
test
ds
ret
add
rolb
push
add
pop
inc
pop
aas
cmp
pop
scas
in
adc
mov
cltd
push
xor
aad
mov
cmpsb
inc
fisubs
inc
icebp
push
inc
scas
loope
mov
sub
std
out
add
stos
xor
sub
push
iret
iret
frstor
mov
lcall
ffreep
cmc
icebp
iret
outsb
fnstcw
fs
and
jp
fdivrl
add
aaa
dec
dec
cs
std
mov
or
dec
scas
or
ret
cld
insb
pop
insl
adc
lret
xchg
mov
xor
lods
inc
mov
movl
lcall
inc
lock
jmp
pop
lock
push
dec
ret
popf
add
mov
clc
inc
orb
lock
xchg
push
and
xor
fldcw
ds
mov
jo
push
xchg
orb
jge
lcall
mov
fwait
test
dec
movsb
or
dec
rclb
mov
lds
pop
fistpl
adc
andl
pop
jbe
enter
fcmovne
push
jnp
pop
push
jnp
les
aad
push
data16
dec
ss
and
aaa
sbb
cli
fstpt
cli
lock
icebp
push
stc
pop
push
pop
xor
sub
cmc
sahf
enter
popa
gs
daa
movsl
adc
and
mov
int3
mov
sub
add
pop
imulb
jae
lcall
pusha
in
cmp
lea
xchg
pop
sbb
or
leave
mov
sub
test
mov
and
nop
sbb
jbe
loop
int
les
and
pop
pop
sub
mov
push
stc
in
aad
popa
loope,pt
push
jne
and
sub
in
lods
paddsb
cmp
xor
fld
mov
pusha
jmp
lds
fistps
ss
or
cmp
stos
mov
aad
rorl
lcall
std
int3
decb
add
add
idivb
into
push
clc
and
inc
jbe
sub
push
orb
lds
or
adc
cmp
lods
dec
movb
add
mov
rcl
cmp
dec
icebp
arpl
or
in
push
in
popa
add
lea
cmp
add
mov
dec
pop
inc
je
inc
call
mov
jl
mov
add
test
xor
and
inc
scas
mov
cld
jp
push
jp
les
pop
imul
or
cmp
push
int
lods
repz
and
jae
data16
pop
sub
xor
jmp
adc
testb
daa
pushf
or
pusha
jmp
and
cmp
jmp
fs
push
imulb
test
lods
cmpsb
notb
repz
xor
cld
sahf
popf
je
xchg
jno
out
mov
insl
aaa
jle
js
outsb
test
sbb
sbb
leave
pop
and
push
je
cli
inc
rol
lea
add
bound
mov
push
xlat
clc
push
movsb
and
and
pushl
mov
aam
adcl
sub
and
popa
test
sbb
inc
dec
adc
push
or
mov
rorb
lock
out
inc
push
push
sub
into
jbe
shlb
mov
push
movsl
fwait
sub
movsl
clc
nop
mov
and
cli
mov
inc
mov
lods
mov
cmp
push
les
cvtps2pd
pop
out
adc
rcl
mov
dec
lods
push
xchg
pop
repz
cmpb
mov
xor
mov
mov
mov
or
add
sti
movl
adc
popa
test
lods
addr16
or
test
xor
mov
imul
or
nop
jae
push
sbb
dec
push
push
push
mov
pop
xchg
mov
mov
cs
sub
jle
sub
das
data16
sbb
dec
mov
cld
pop
push
pop
ljmp
xor
xor
add
xor
insl
cmpsl
icebp
sbb
jmp
jo
fildll
mov
mov
enter
loopne
into
pop
jmp
jle
mov
jle
shll
in
int3
xchg
aas
addr16
add
sub
or
pop
jmp
fwait
ret
xor
pop
push
mov
ja
insb
sub
js
push
arpl
aaa
cmpsb
and
fisttpll
ja
add
xchg
mov
dec
pop
arpl
popf
sbb
test
mov
push
sub
inc
pop
xchg
pop
stos
push
insw
lock
or
sub
adc
dec
xchg
out
aas
fwait
cli
js
cmp
outsl
lcall
xor
sub
sbb
mov
push
cmpsl
jl
ljmp
and
repnz
adc
sar
sbb
mov
xor
test
and
cmp
nop
scas
sbb
pop
out
cwtl
cmp
aas
lds
push
push
pop
mov
sub
or
imull
sub
dec
inc
or
add
cmpsb
inc
add
sarb
cld
inc
test
xchg
in
add
pushf
mov
and
iret
dec
lcall
das
xor
jle
clc
sti
mov
push
cltd
or
arpl
add
jmp
xchg
pop
mov
xlat
call
mov
sahf
loope
cwtl
jns
test
mov
sub
popl
xchg
clc
outsb
adc
sub
or
stos
pop
fwait
mov
mov
iret
ret
mov
or
or
insl
sbb
inc
pop
push
inc
sub
push
jg
xor
les
sahf
std
orl
cltd
shl
pusha
arpl
mov
test
das
dec
aad
shrl
inc
jg
into
lock
xor
cwtl
xchg
mov
push
popa
push
jae
push
mov
xor
ret
adcl
pop
jp
lahf
sbb
ja
aaa
cmp
jns
sarl
cmp
adc
clc
clc
imul
mov
fs
push
and
arpl
daa
push
sbb
test
inc
jae
daa
xchg
jl
pop
lahf
push
or
icebp
and
pop
je
xchg
cli
jp
mov
or
mov
dec
js
xchg
lods
jecxz
rcrb
xor
or
bound
rcr
or
sahf
inc
call
cmp
int
pushf
ds
fstps
stc
scas
std
dec
popf
loope
aas
mov
fdivrl
cltd
sbb
into
sbb
ss
orb
test
add
inc
add
sub
jne
xor
jb,pn
push
xor
sahf
sub
and
inc
movsl
and
xor
jne
fbstp
mov
ffree
sbb
imul
dec
mov
cmp
sarb
pop
and
dec
fucom
mov
gs
adc
fs
arpl
jp
sub
cmp
gs
mov
xor
push
fnop
sub
push
pop
jne
xchg
mov
lods
jge
and
push
mov
leave
test
xor
dec
sbb
fsts
repnz
rcll
mov
ret
xor
sti
mov
jl
or
mov
es
dec
in
stos
mov
out
xor
clc
inc
fnstsw
mov
push
iret
inc
mov
cmp
mov
bound
ljmp
xor
shrb
ret
or
std
sbbl
xor
sub
jecxz
xor
mov
xchg
or
xchg
out
fs
test
push
add
jno
clc
pop
mov
dec
test
test
rorl
mov
sub
cmp
adc
pop
mov
xor
enter
xchg
push
mov
and
je
lods
fsubrs
mov
in
into
mov
mov
xchg
xchg
dec
test
shrl
mov
lahf
aaa
push
sbbb
dec
es
cltd
mov
xchg
add
mov
jmp
cli
pop
data16
out
fidivs
push
flds
arpl
xchg
cmp
mov
mov
mov
adc
xchg
subl
mov
aaa
leave
mov
insl
in
cli
jp
sub
lea
cli
fucomip
xor
jmp
jmp
sub
mov
cmpb
mov
lret
jbe
add
pop
mov
or
aas
add
stos
mov
dec
mov
test
sub
mov
aam
xlat
imul
ret
aam
ljmp
fldenv
jl
cld
lods
int3
insb
lahf
sbb
add
cmp
mov
push
rep
xchg
shrb
inc
stos
jns
cmp
ret
jbe
mov
js
test
sub
push
sbb
lods
lods
inc
jo
or
sbb
aam
pop
push
lods
mov
cwtl
lock
or
int3
dec
popa
lahf
fidivrl
pop
inc
jnp
dec
cmp
mov
out
ss
ret
loope
ret
int
sub
mov
push
rol
mov
mov
adc
mov
stos
and
jecxz
data16
int3
ljmp
cmpsb
adc
add
jle
push
fstl
es
sub
push
frstor
and
cmp
arpl
ljmp
stc
stc
cltd
jmp
adc
out
popa
data16
sahf
push
sbb
jne
jo
lcall
into
jle
push
lods
or
loope
mov
clc
sub
sub
and
xor
repnz
je
push
aad
fwait
loopne
es
pop
jge
int
ficoms
cwtl
call
cltd
cli
ds
test
add
xlat
rol
call
out
sub
cli
pop
ds
rcr
cmp
dec
add
xor
sar
adc
fwait
cmp
repnz
fisubrs
loop
fistpll
fiadds
sbb
push
dec
mov
loope
pop
and
fisttpll
xchg
fsts
mov
es
in
or
dec
inc
xor
mov
ret
mov
add
fcomip
or
mov
push
mov
push
push
push
mov
fnstsw
mov
pop
leave
dec
subb
mov
stc
cmpsb
mov
push
inc
xchg
cmp
push
addr16
mov
inc
dec
adc
shlb
and
fdivs
jge
std
mov
mov
push
ret
enter
ror
cld
xchg
push
push
lahf
inc
push
ds
mov
fwait
rol
cmpsb
cmpsb
inc
inc
aam
cmp
rclb
push
cs
jne
dec
cmc
es
push
push
out
pop
push
jecxz
in
inc
jns
jmp
push
mov
pusha
mov
in
mov
add
or
cld
push
mov
xchg
aaa
jae
push
sub
iret
scas
rclb
push
in
mov
popa
jecxz
lods
add
test
mov
aaa
dec
adc
xchg
or
cli
je
push
stos
mov
sbb
stc
pop
stos
bound
test
ljmp
pop
cmp
or
inc
push
mov
jnp
cwtl
fisubs
push
inc
add
int3
mov
adc
and
nop
mov
imul
pop
jo
test
repz
aaa
mov
pop
fidivrs
xor
sbb
ds
jmp
mov
insl
lods
pop
mov
mov
or
xchg
push
add
mov
add
mov
sbb
scas
sub
popa
xor
loop
scas
jo
jb
push
testb
add
das
andl
sahf
xor
in
jecxz
pop
mov
in
and
ja
ss
xor
frstor
lea
or
int
sbb
lock
and
dec
dec
mov
lahf
stos
arpl
sbb
or
aas
leave
add
in
fs
adcb
lret
les
stc
retw
mov
sub
fiadds
pop
testl
test
inc
in
shlb
into
inc
pop
pop
adc
sbb
jns
lahf
repz
sbb
jo
push
sbb
insl
cmpsl
imul
lods
adc
in
dec
mov
add
xchg
cli
aam
jle
push
bound
cs
mov
loop
lret
popf
xchg
jmp
push
add
push
sti
jns
inc
fucom
ret
cwtl
outsb
loopne
leave
sbb
push
fstps
mov
cmpsl
outsl
mov
xchg
neg
or
sub
lock
mov
out
xor
lret
sub
ja
cs
imul
fisubs
sarb
or
push
addr16
add
imul
xor
jno
cmp
jecxz
cwtl
mov
inc
pop
in
dec
jb
std
inc
cli
push
fdivrl
imul
dec
add
iret
push
cmpsb
ror
std
in
mov
xlat
mov
std
jnp
stos
mov
dec
in
js
fs
negb
ret
out
cmp
cmp
push
sub
pop
notb
jno
cmp
lcall
mov
scas
shl
or
ja
mov
sbb
cmove
pop
sti
xchg
jnp
push
aad
sbb
jge
dec
xchg
cli
cld
popf
fldenv
in
lods
add
xchg
jns
jo
cmp
je
cmp
arpl
repz
jl
push
movsb
add
and
addr16
sub
jo
fwait
mov
addr16
inc
jge
into
or
lcall
jmp
scas
call
mov
or
loope
mov
js
stos
inc
imul
and
imul
pop
fwait
and
mov
jmp
mov
dec
lods
mov
mov
mov
mov
inc
push
mov
orb
stc
cvtpi2ps
inc
xor
jmp
fs
mov
lcall
xadd
popf
xchg
xchg
or
je
dec
jno
lcall
scas
pop
pop
inc
cmp
adc
test
imul
xchg
dec
call
ror
mov
test
out
fiadds
push
into
fildl
pop
andl
fst
adc
es
fisubl
xor
pop
into
out
xor
mov
movsb
out
mov
out
mov
outsl
aam
mov
fcoml
xchg
sbb
push
cmp
add
dec
add
mov
clc
lods
repnz
cmp
into
jp
or
outsb
cmc
das
pop
inc
arpl
mov
fs
xchg
fiaddl
inc
mov
lsl
in
test
js
pop
inc
outsb
mov
cmc
ja
fildll
dec
out
aas
xchg
push
xorb
cmp
subl
jg
sbb
leave
cli
scas
jp
sub
dec
sub
stos
mov
ds
cli
leave
push
lods
inc
sti
push
sbb
add
nop
hlt
enter
lods
ficompl
int3
jle
fcomp
pusha
pop
fadds
jo
adc
cmp
daa
xor
rolb
aaa
gs
mov
lods
add
enter
movsl
ss
int3
jecxz
into
mov
jmp
enter
push
mov
mov
js
and
cld
ss
inc
jmp
es
cmp
cmpsl
push
or
cltd
dec
mov
stos
pop
cmc
jb
jg
jle
ja
les
or
hlt
mov
and
mov
arpl
jo
pop
fucomp
push
mov
mov
sbb
or
lods
fbstp
inc
inc
cmpsb
dec
dec
cmp
xor
add
push
out
negb
cmp
mov
add
lret
das
sub
jne
in
inc
cmp
or
xor
lea
mov
outsl
shrb
mov
and
sub
push
xor
cltd
mov
imul
test
jge,pn
jl
mov
lcall
cwtl
lods
leave
mov
jae
mov
rclb
idivb
and
mov
jne
test
daa
add
xor
loopne
mov
repnz
cs
fidivrs
lea
imul
fldenv
call
xchg
or
push
xchg
sbb
xchg
icebp
out
aad
lods
xor
adc
mov
lock
push
or
in
push
ljmp
fcomi
and
jb
pop
push
jp
jae
hlt
fdiv
push
push
mov
fisubrl
sbb
fdivs
std
adc
mov
fcomps
les
xchg
insl
mov
cmp
xchg
xchg
and
adc
jo
cmp
rorl
js
lock
shrl
stos
cmc
aas
insl
add
mov
mov
and
test
push
test
add
imul
sahf
jp
dec
mov
loop
push
xchg
pop
std
lahf
lahf
cmpsl
mov
mov
insb
push
stc
lahf
lds
pop
fs
sub
outsl
sti
sbb
data16
dec
hlt
leave
fwait
and
mov
fcmove
sub
adc
bound
xchg
push
mov
pop
in
xchg
sbb
sbb
fstpl
enter
and
dec
adc
push
pusha
cmp
mov
mov
lcall
rcll
out
add
leave
std
and
shr
and
push
xchg
mov
cmp
in
in
sub
mov
add
mov
pcmpeqw
mov
mov
lods
ss
into
cs
push
test
push
inc
jl
in
xchg
bound
in
in
and
sarb
inc
dec
mov
sarl
xor
mov
shrl
add
insl
push
mov
movsl
jb
sub
out
movsb
push
xchg
lret
call
lds
outsb
mov
push
sbb
ljmp
fcom
push
xchg
jmp
jns
pop
xchg
xchg
scas
fdivl
icebp
jne
push
add
pop
lret
mov
mov
pop
jae
jle
dec
out
sbb
or
dec
mov
clc
test
dec
inc
xchg
xchg
cltd
pop
mov
arpl
jbe
cs
dec
test
pop
dec
push
insb
mov
or
movsl
lods
mov
adc
fdivrl
js
divl
mov
and
mov
adc
ja
shlb
sbb
rcr
mov
push
sub
cmp
rorl
sbb
outsb
mov
in
dec
fsubrs
aaa
lods
call
imul
push
loope
aam
jo
fnsave
adc
test
and
pop
mov
push
push
pop
fmull
bound
loope
mov
push
or
and
imul
xchg
fnstcw
push
add
xor
cmp
push
out
sub
idivb
lret
fs
out
aam
add
aad
adc
inc
fcomip
icebp
inc
outsl
xor
sub
mov
rcrl
inc
jnp
or
add
pop
dec
popa
ret
push
test
daa
sarl
lahf
cmc
inc
lret
mov
data16
arpl
xchg
out
int
mov
stc
fwait
sub
pop
jae
sub
movb
leave
cmp
aad
loopne
and
lock
xchg
clc
insl
roll
mov
dec
dec
jbe
and
jg
inc
notb
mov
adc
call
mov
push
stos
ljmp
mov
dec
test
addl
js
dec
sub
pop
scas
add
into
mov
jb
mov
push
lcall
js
fimull
in
push
sub
int
cmp
dec
jne
cmpsb
mov
test
rclb
mov
pop
test
rorb
js
lahf
pop
xchg
loop
inc
adc
dec
stos
mov
in
aas
fadds
push
daa
xchg
xchg
mov
cmp
jmp
push
jle
pop
shl
add
in
dec
jo
flds
jnp
pushf
movsb
fwait
dec
aad
jmp
mov
xor
mov
cmpsl
fmuls
mov
cld
add
rcrb
fiadds
and
out
pop
mov
loope
subb
rorl
lds
push
add
sub
outsl
add
and
scas
mov
popf
int3
sub
jno
mov
pop
rorl
push
xchg
sub
outsb
xchg
popf
push
or
mov
mov
orb
inc
add
imul
ret
dec
outsb
pop
out
repz
in
xor
or
jb
xor
push
pop
cltd
ss
movsl
jmp
jbe
outsb
pop
nop
sbb
adc
pop
mov
dec
adc
fyl2xp1
add
lods
cmp
out
aad
xchg
xor
call
sub
testb
addr16
mov
loope
gs
xchg
pop
shll
cmp
push
ret
jge
popf
or
imul
ljmp
adc
add
push
and
sbb
jmp
cmp
movsb
adc
data16
push
out
add
das
outsl
cmp
rol
adc
fwait
dec
mov
mov
lods
shlb
testb
push
mov
out
xchg
fdivp
cmp
inc
or
push
mov
push
pop
stos
dec
filds
cmp
jg
mov
aaa
rcll
je
in
lods
lahf
arpl
sbb
inc
in
adc
addr16
push
cmp
dec
test
dec
mov
loop
arpl
fisttpll
mov
mov
out
out
adc
stos
lret
scas
adc
cltd
outsb
mov
dec
xlat
push
xor
push
mov
ja
ja
mov
test
sbb
xorb
popf
in
enter
mov
movsb
xor
xchg
cmpsl
aam
pop
aad
dec
pop
sti
inc
xor
test
ljmp
add
into
jmp
lds
jnp
mov
inc
dec
push
in
mov
insb
sarl
fdivr
cmpsb
pusha
rcll
fmull
rorb
mov
loopne
push
pop
hlt
cltd
ret
js
je
jecxz
insb
adc
cld
mov
lods
outsb
pusha
add
mov
and
adcl
mov
mov
mov
mov
iret
cmp
pop
cmp
rcrl
mov
mov
sbb
cld
int
lcall
add
nop
mov
pop
sahf
fdivl
testb
inc
add
pop
test
mov
mov
punpckhdq
cmpsl
fisubl
fucom
jmp
addb
shrb
lods
pushf
lods
incb
mov
cmp
push
cmp
inc
lods
xchg
ror
mov
dec
jo
cmpsl
mov
outsl
xchg
xchg
sub
xchg
in
test
or
ret
cmp
sbb
cmp
sahf
jecxz
daa
sub
enter
aad
arpl
fistl
sbb
push
add
sbb
into
push
adc
mov
jmp
lea
mov
push
outsl
mov
repz
mov
outsb
lret
nop
addr16
js
arpl
sub
push
jmp
rol
jecxz
push
xchg
inc
fimull
and
xor
std
mov
es
sbb
adc
or
je
xor
mov
nop
mov
jae
rcrl
dec
movsb
imul
leave
xchg
ret
out
mov
cmp
ret
ja
sarl
mov
pop
cmp
sub
jge
hlt
add
lods
xchg
cmp
and
adc
ret
test
pushf
cmp
loopne
xchg
nop
insl
subb
jge
jmp
push
or
mov
mov
inc
push
sub
jns
mov
outsb
jnp
aad
and
sub
je
mov
add
adc
cmp
pop
dec
pop
cltd
lahf
mov
mov
sub
sbb
in
mov
push
repnz
pop
pushf
cmc
add
pop
addr16
leave
stc
mov
gs
insb
int
jg
lods
repz
pmovmskb
std
pop
cmpsb
shlb
outsb
iret
adc
push
shrl
fwait
nop
icebp
push
imul
pop
pop
fwait
add
xchg
js
push
aaa
sbb
es
add
aad
int3
pop
jns
jl
ljmp
dec
mov
push
cli
cli
hlt
dec
adc
xchg
in
pop
push
mov
adc
scas
popf
and
mov
mov
xchg
lds
xchg
pop
cltd
enter
cmp
jmp
mov
push
mov
ficompl
mov
clc
pop
cmpsl
rclb
cmp
and
add
add
out
cmpsl
out
js
xchg
jns
mov
cmp
pop
mov
cmpsb
repz
ds
mov
dec
out
or
mov
jnp
mov
lahf
xor
add
cmp
mov
lock
jmp
aas
dec
fwait
dec
xor
leave
mov
push
xor
imul
or
jae
out
test
dec
push
stos
pop
mov
or
fildl
fdivr
nop
mov
push
mov
shlb
mov
xchg
das
outsb
nop
xor
adc
lea
out
loop
repnz
mov
or
les
aaa
jl
or
test
dec
popa
ja
jl
call
lret
pop
popf
jmp
aaa
add
cmpsb
ja
jg
mov
cltd
mov
fldl
stc
fldenv
adcl
xchg
stc
jecxz
pop
outsl
insl
push
push
fisubrl
xlat
loopne
or
lea
scas
fucomi
add
test
fs
fs
inc
cmp
repnz
out
stc
into
xchg
jg
mov
fdivs
stos
push
pop
sbb
mov
jle
sub
notb
add
jb
jmp
inc
mov
inc
sub
dec
jbe
adc
pop
lret
sahf
push
inc
sub
mov
shl
and
sub
mov
cltd
pop
jge
loop
xlat
cmp
mov
xchg
dec
pop
iret
cs
xchg
in
xchg
ja
pop
nop
and
push
aas
lock
rorb
dec
mov
int
fcoml
add
pop
sbb
and
addb
inc
or
lret
fidivrs
jo
pop
std
add
negl
ret
loopne
rcrb
call
xchg
mov
test
idivb
repnz
repz
sbb
into
jns
or
mov
clc
xchg
imul
and
ret
aam
call
xor
dec
jmp
xor
push
pop
lret
jae
mov
lahf
push
loop
leave
fsubrp
or
sub
mov
mov
push
jo
iret
and
xchg
cs
cmp
mov
sarb
pusha
aad
xor
push
pop
jne
jl
dec
mov
gs
or
mov
jns
aaa
sbb
xor
push
push
outsl
mov
pop
fcomi
movsl
aaa
pusha
fildll
inc
sub
xchg
aas
mov
adc
aam
push
mov
pop
mov
aam
out
jae
xchg
push
lahf
scas
xor
hlt
insb
enter
sbb
loope
frstor
mov
mov
in
jae
jg
fcompl
jecxz
ja
cmp
icebp
sti
pop
sbb
cli
dec
adc
out
mov
insl
and
imul
mov
scas
pop
mov
push
xor
daa
adcl
mov
fmuls
xlat
shrl
add
adc
inc
dec
dec
pop
das
add
mov
sahf
or
pop
imul
and
stos
and
mov
test
jne
dec
test
loope
jo
lock
ja
and
int
stc
es
lret
adc
loope
cltd
scas
xchg
mov
lret
lods
xor
push
xchg
push
test
xchg
xor
mov
push
pop
xchg
push
and
jns
adc
inc
inc
push
cmp
sub
mov
pop
xchg
ret
inc
push
in
adc
int3
and
cmp
mov
cwtd
loope
sub
sbb
cltd
push
and
cltd
or
test
shlb
dec
push
or
jmp
test
mov
xchg
jbe
cs
jl
hlt
ljmp
jle
bound
mov
pop
add
cmpl
adc
dec
loope
pop
jmp
inc
insb
add
into
stos
cmp
dec
push
mov
dec
in
push
leave
notl
test
pop
push
mov
xchg
sbb
jbe
push
lods
pushf
inc
cld
jnp
aaa
cwtl
mov
pop
imul
popf
popa
pop
fwait
jb
pop
mov
push
outsl
rclb
adc
xchg
pop
aad
ljmp
hlt
or
pushaw
aaa
sbb
pop
lcall
xchg
fcoml
out
mov
sub
ss
and
or
pushf
std
mov
cmp
fldt
ret
xchg
jne
xlat
sub
mov
iret
popa
imul
pop
dec
sbbl
sbbb
fcmovnbe
arpl
adc
pop
push
cmp
fidivrl
and
loop
pusha
lea
add
mov
shll
mov
jecxz
mov
xor
cli
inc
jmp
fcmovnb
shll
das
sub
pop
clc
ss
adc
stos
test
inc
jnp
fcoml
movsb
ljmp
push
and
xchg
test
mov
push
rol
ljmp
sahf
push
jecxz
insl
add
mov
mov
lods
and
mov
incl
adc
call
mov
mov
jl
sbb
repnz
out
cmpsl
stc
adc
lret
mov
push
mov
pop
jns
xchg
mov
les
pop
adc
lret
rep
pop
mov
add
loopne
ret
in
push
pop
out
repz
and
adc
jno
sub
loope
dec
fdivl
out
shl
jno
ret
aaa
fdivrl
pop
outsb
sbb
xchg
mov
popf
xor
push
xchg
lea
add
data16
xchg
cmpsb
sarb
rcrb
pop
into
sub
jl
fbstp
jp
jmp
or
sbb
idivb
mov
lcall
or
xchg
adcb
popa
sarl
or
adc
pop
mov
ljmp
jne
pop
add
inc
in
nop
stos
xchg
aad
or
mov
push
jne
push
mov
sbb
pushl
mov
shrb
aam
mov
je
loop
js
jge
jns
mov
cmc
sbb
inc
outsb
mov
cmpsl
cmpsb
jp
cmp
push
and
loopne
dec
mov
pusha
push
repz
sbb
testb
pop
mov
cmp
or
push
jnp
xchg
lcall
sbb
stc
movsl
loop
lahf
mov
xchg
adc
daa
int
rorl
pop
push
add
test
mov
nop
add
push
fsub
mov
mov
imul
sarb
jle
rorl
inc
loop
jge
outsl
mov
pop
mov
mov
stos
cmc
cmp
jbe
xlat
mov
je
sub
divb
pop
icebp
or
sbb
xchg
int
ror
push
insl
jg
and
hlt
push
lcall
mov
sbb
dec
mov
pop
xchg
loope
out
cmp
repnz
cmp
aad
jmp
in
dec
mov
mov
cmpl
out
mov
enter
inc
cmp
pusha
sub
insl
cli
mov
jb
sbb
sub
pop
cwtl
lock
mov
out
mov
and
andb
shlb
rclb
dec
lods
and
mov
jecxz
sti
int
cld
push
push
push
sub
sbb
aad
push
es
sar
xorb
ss
fisubrl
mov
sub
je
mov
xchg
add
mov
sbb
lods
jg
push
popa
mov
mov
lock
cmp
push
dec
dec
push
or
sahf
jp
mov
pop
cmp
test
dec
push
cmp
sub
fndisi(8087
incl
lret
fwait
cs
push
jbe
xor
loopne
lock
daa
lcall
add
sub
sub
or
jmp
in
cmpsb
push
mov
add
mov
mov
lahf
sbb
mov
sar
xchg
xor
xor
push
xchg
mov
jle
ret
leave
out
rep
xchg
or
out
idivb
dec
mov
dec
dec
xchg
mov
pop
lea
sbb
fiaddl
sub
jmp
xor
xlat
mov
pop
inc
mov
push
sbb
stos
pop
push
fwait
cmp
test
cmp
jo
jge
lret
inc
bound
sbb
jl
lock
mov
push
fdivr
mov
mov
push
in
in
and
mov
inc
sbb
rol
add
mov
mov
dec
and
icebp
sbb
cltd
and
sbb
and
or
addr16
ja
outsl
fdivrs
les
lea
std
mov
in
cltd
scas
jne
push
jp
jmp
jmp
push
out
jne
inc
adc
subb
es
mov
pop
mov
push
and
fs
mov
sbb
std
add
and
movb
adc
cmp
inc
cmpsb
inc
dec
pop
jmp
add
aam
fwait
xchg
lret
stos
std
shll
and
or
push
call
lods
or
mov
dec
adc
movsb
mov
cmc
sbb
or
mov
notl
push
inc
mov
mov
mov
add
cltd
cmpsl
mov
or
nop
int3
test
sbb
dec
mov
test
out
cwtl
mov
jb
cld
inc
daa
add
mov
sbb
cmp
dec
pop
jae
xchg
clc
dec
push
cmc
sub
pop
cmc
fucomip
sbb
sbb
pusha
jae
jnp
jl
and
insl
jg
loop
pop
enter
repnz
clc
jo
sbb
outsl
mov
shll
push
dec
ds
pop
dec
lea
push
mov
fdivrl
lcall
dec
sub
out
sbb
inc
dec
mov
pop
jg
stc
mov
pop
dec
test
imul
add
shrl
in
jmp
sub
add
adc
xchg
cmp
push
xorl
mov
xor
pushf
mov
dec
arpl
inc
enter
movsl
cmp
in
popf
push
out
and
es
push
push
inc
popa
cs
cmp
pop
clc
adc
test
mov
add
xor
mov
stos
and
aas
shll
xor
mov
gs
jne
sbb
sub
mov
xchg
mov
adc
out
es
fwait
clc
push
sub
push
dec
sbb
mov
das
clc
nop
pop
or
cli
jns
inc
mov
ljmp
sub
rolb
push
and
jmp
repnz
fmull
cmp
mov
mov
jnp
xchg
lea
pop
pop
mov
lock
mov
jne
insl
push
into
jne
mov
out
fists
ret
or
inc
sub
add
mulb
or
or
jne
dec
xor
inc
pop
shlb
loope
ds
stos
push
std
add
push
and
push
dec
push
pop
outsb
imul
mov
push
inc
mov
mov
stos
and
mov
jo
cmpsb
pop
or
sbb
call
mov
mov
movsl
leave
pop
fisttpl
lds
nop
outsl
or
adc
cs
jge
dec
data16
sbb
push
or
fwait
mov
hlt
push
inc
pop
and
popf
jle
inc
pusha
xchg
mov
push
pop
cmc
lret
inc
adc
aad
sub
lds
vxorps
and
and
lock
repnz
aaa
jmp
jnp
cltd
out
enter
jge
icebp
leavew
fcomi
fistpll
aam
mov
dec
ljmp
shlb
xchg
jl
mov
ret
jns
cmpsl
outsb
out
pop
enter
and
imul
cwtl
or
sbb
dec
ret
and
and
mov
inc
movsb
bound
imull
push
sub
mov
xor
inc
addr16
and
scas
or
xchg
cld
stc
rcrl
movsl
xor
pop
das
add
xor
inc
dec
iret
mov
sti
xchg
sbb
inc
and
and
dec
into
inc
or
loop
jnp
das
jne
xchg
call
test
dec
push
insb
dec
jno
insl
sbb
ss
mov
mov
pop
push
les
jmp
jbe
sbb
xor
test
mov
bound
cmp
fldt
mov
xchg
push
cmp
pop
xchg
jo
mov
and
sub
hlt
aad
lods
xor
adc
scas
ss
xor
sbbl
insb
or
cmp
out
mov
jmp
ret
lret
inc
fistpll
call
pop
setp
mov
and
lret
push
mov
sub
cmp
inc
inc
loope
sar
rclb
lds
xor
stos
stos
add
fmull
cmpl
pusha
movsl
rol
mov
or
dec
dec
in
repnz
mov
push
lods
imul
sbb
in
pop
fisubl
cmp
fdivl
push
mov
cmpsb
xchg
testl
mov
dec
mov
sbb
xchg
int
jge
fbld
sub
adc
gs
icebp
jmp
inc
adc
cmp
in
xchg
or
jle
xorb
and
mov
push
sub
stos
pop
or
xor
or
inc
xchg
movsb
add
lcall
add
mov
pop
mov
imul
lds
mov
mov
je
lock
xchg
ljmp
inc
popf
int
jmp
cmpsl
push
lea
or
rolb
loop
ret
mov
imul
test
negb
stc
push
stos
mov
pop
icebp
mov
xchg
mov
dec
lods
iret
mov
xor
xor
movsb
sti
inc
sbb
out
inc
hlt
cmc
sub
fstps
popa
cltd
xlat
loope
mov
jmp
cmp
out
add
lahf
jae
or
es
jo
or
fcoml
sarb
xchg
repnz
subl
add
lods
adc
or
or
add
into
push
cmp
stos
inc
cmc
call
int
xor
xorl
cmp
sub
dec
mov
shll
fmuls
adc
push
mov
andb
sbb
scas
cmp
cld
test
pop
dec
enter
inc
movq
adc
mov
sub
jnp
mov
mov
rcrl
xchg
jbe
mov
pop
cmp
sbb
std
dec
dec
sarb
inc
stos
mov
jmp
or
push
in
cli
or
inc
dec
cmp
out
lret
xchg
gs
call
push
push
addr16
jo
aas
jns
dec
mov
or
int3
adc
or
push
xchg
xchg
ret
mov
and
push
cmpsb
lea
and
cmpsl
inc
mov
je
dec
push
clc
es
adcb
adc
imul
or
aad
pavgw
cmpsb
dec
ds
aad
fisttpl
dec
sbb
insb
dec
mov
test
roll
pop
mov
sar
pusha
inc
insl
xchg
jecxz
adc
and
cmp
jo
push
sahf
xor
nop
adc
jle
mov
aaa
push
js
push
pop
cltd
xor
inc
data16
fwait
push
mov
mov
mov
cwtl
addr16
aas
lods
in
cltd
jbe
or
aad
mov
ffree
fldenv
lret
jae
mov
jl
out
push
adc
add
xor
fwait
push
sub
push
fnsave
push
cmc
jmp
outsb
xchg
or
in
mov
mov
xor
sub
aam
pop
lock
mov
pop
add
stos
popa
add
and
ljmp
or
xchg
cmp
fdivr
inc
xchg
inc
ret
mov
stc
es
mov
int
mov
lods
or
dec
repnz
gs
lea
push
daa
inc
push
leave
out
push
mov
push
push
dec
pop
dec
frstor
pop
ret
fmull
call
mov
imul
out
jno
cmc
add
repnz
incl
sub
addr16
xchg
mov
mov
mov
sub
arpl
pop
jp
int3
cmp
lods
aad
xor
sti
leave
dec
test
gs
mov
jb,pt
push
mov
xor
add
gs
insb
sti
mov
xorb
push
scas
cmp
cmp
or
dec
inc
ficomps
sti
cld
out
fsubrp
xchg
inc
enter
xor
push
push
aaa
cmp
shr
push
lret
sub
mov
mov
mov
lea
xchg
addl
fmulp
cmp
add
or
pop
fldenv
inc
notl
in
mov
push
and
movhps
aam
dec
mov
add
cmp
jmp
ja
sub
inc
sub
rcrl
lods
pushf
mov
dec
pop
shrb
out
add
in
adc
mov
loope
pop
mov
cmpsb
cmp
mov
iret
leave
icebp
inc
insl
rclb
xchg
pop
add
stc
jl
pop
stos
arpl
xor
outsb
test
jmp
mov
xchg
mov
outsb
jbe
jnp
mov
fs
lods
inc
iret
add
mov
addl
or
mov
ljmp
aas
xchg
mov
clc
insl
mov
mov
aas
mov
and
insl
jae
test
imul
or
es
lahf
sbb
sbb
scas
out
mov
jmp
fcmovnbe
test
movzwl
pop
push
shlb
fnsave
cmpl
push
jg
and
stos
add
ja
xchg
adc
call
pop
sub
in
push
jnp
dec
cmpsl
repz
xchg
mov
xchg
stos
and
pop
hlt
mov
nop
mov
adc
xchg
inc
test
xchg
lods
add
xchg
std
dec
inc
ss
add
or
testl
sub
mov
push
inc
pop
orl
gs
jmp
push
in
test
bnd
or
imul
mov
mov
mov
or
subl
jno
pop
push
mov
shll
popa
pop
xchg
cwtl
mov
pop
push
lods
push
push
movsb
inc
jg
sub
mov
sub
stos
jge
out
fst
mov
pop
lods
pop
les
imul
jb
dec
fstps
mov
pop
mov
repnz
xlat
mov
popa
xchg
add
rol
cmp
cmpsl
sbb
into
push
gs
js
inc
inc
fstl
out
pop
or
xchg
repnz
push
add
mov
movsl
divb
pop
inc
cmc
ror
mov
inc
ljmp
push
xchg
lods
cmpsb
xor
popf
mov
and
and
loopne
enter
dec
mov
push
jmp
dec
and
outsb
ds
mov
stos
cli
add
jo
xlat
xchg
ret
aaa
xchg
add
cmp
mov
sar
mov
fcmovnbe
pop
and
outsb
inc
mov
add
and
fsubrl
xor
outsb
aas
aam
adc
cli
in
pop
scas
add
das
mov
mov
ss
iret
addr16
loop
pop
setge
test
jp
mov
in
inc
dec
sub
scas
jo
inc
mov
lcall
fwait
lock
incb
dec
imul
shl
hlt
mov
xchg
pop
mov
movsb
cmp
aad
cmc
scas
jl
movsl
add
shrl
adc
pop
test
xor
scas
adc
test
ret
leave
loopne
lock
mov
dec
xor
jp
sbb
inc
sahf
js
adcb
sub
aas
fsts
and
add
stos
in
daa
push
mov
scas
mov
sub
adc
pushl
divb
into
xor
fbstp
sub
cltd
jg
sbb
sbb
sbb
test
jbe
xchg
push
mov
push
cmp
rorb
pop
cli
lahf
cmp
ss
dec
orb
inc
popf
xor
dec
xchg
adcl
leave
or
sti
rcrl
add
xchg
cmp
jne
or
fsubr
mov
xor
test
imul
mov
punpckldq
push
pop
fdiv
push
cltd
xchg
scas
scas
lods
lret
ficoml
or
mov
clc
dec
mov
and
jns
dec
adc
add
pop
mov
jno
mov
call
pop
addl
fisttpl
daa
mov
int3
dec
add
cltd
sbb
lcall
jb
push
inc
adc
aam
popa
daa
daa
mov
in
cmpsb
arpl
jno
ret
fldt
test
fnstsw
mov
insb
sbbl
push
or
xchg
sti
call
xlat
jne
out
jmp
push
sti
loop
cmpsl
ja
fsubr
ds
cltd
cmp
test
mov
mov
cmpsl
push
loopne
add
test
inc
iret
pop
arpl
jecxz
popf
mov
xchg
ret
adc
imul
stc
imull
in
push
mov
push
xlat
movsl
mov
aam
lret
fdivl
mov
arpl
sti
sbb
push
fildll
ja
cmp
les
jo
out
xchg
into
jp
gs
adc
dec
mov
xchg
lahf
fmul
cmp
sbb
inc
shll
fdivrs
sbb
repz
pop
mov
cmc
out
cs
test
sub
fcomp
dec
enter
mov
andl
mov
ret
sbb
adc
enter
test
movsl
xchg
dec
les
fisttpl
mov
scas
in
out
mov
cmpsl
aas
xchg
mov
or
loopne
scas
sbb
push
mov
jne
aas
pop
pop
lret
adc
sbb
sbb
repz
push
or
shl
sbb
scas
xor
or
add
cmp
dec
out
mov
sub
icebp
jmp
mov
rol
pop
dec
mov
dec
inc
push
ffree
sub
xor
mov
les
or
push
outsl
xor
test
cli
sarb
jnp
shll
pop
pusha
sub
popf
sub
cmc
bound
out
dec
xchg
xchg
gs
mov
in
push
xchg
inc
mov
xor
jl
ffree
or
dec
mov
adc
lret
inc
sbb
xor
xor
lods
pop
xor
mov
sbb
mov
gs
mov
cwtl
push
dec
mov
lods
dec
aam
add
pushl
lods
shrl
xor
cwtl
jo
fadds
imul
sbb
repz
sub
scas
insl
mov
sahf
lods
mov
mov
inc
pop
add
clc
sar
push
add
pop
divl
jle
int
repnz
inc
cmpsb
jne
inc
insb
jl
mov
push
xchg
inc
outsl
outsb
imul
mov
pop
into
addr16
es
xchg
in
lock
or
mov
out
fbld
dec
sbb
jle
insb
iret
rcl
imul
jle
loope
adc
rorb
std
arpl
add
xor
sub
dec
jno
scas
sub
xchg
dec
push
mov
aas
cwtl
ret
push
sbb
fwait
aam
jb
in
push
mul
fsubrl
lods
mov
cmp
mov
cltd
mov
fcoms
popw
mov
or
mov
jnp
cmpsl
mov
pop
jl
fnstsw
stc
sbb
aad
cwtl
sbb
pop
mov
mov
aas
loopne
or
iret
ss
lret
jbe
outsl
orb
call
ja
inc
subb
fcomps
sub
fnsave
lock
rcl
aas
ss
and
jmp
jmp
roll
out
fdivs
stos
or
xor
push
nop
pop
add
sarb
lds
push
adc
ljmp
insl
insl
mov
loopne
addr16
dec
fcom
call
mov
sub
and
jae
rorb
mov
or
add
repz
cld
ret
dec
mov
fisttps
imul
jp
rcl
imul
jge
mov
push
movsl
mov
mov
aas
or
add
mov
aam
ss
push
scas
and
dec
jg
sbb
lods
repnz
add
mov
or
js
xor
movsl
jmp
adc
test
mov
mov
int
mov
mov
loopne
jb
mov
outsb
aas
jmp
push
inc
cmpsb
mov
lahf
nop
push
pop
xchg
rcrb
sbb
test
cmp
lea
pop
in
xchg
and
sbb
jg
jo
xlat
lods
jge
push
movsb
adc
pop
scas
ds
push
and
mov
pushf
movsl
pop
out
jl
pop
sub
fisubl
mov
pusha
xchg
mov
push
jo
sbb
jae
ljmp
popf
arpl
push
lods
mov
int3
add
in
jmp
pop
insb
in
testl
cmpsb
and
in
mov
out
incl
leave
sub
stc
iret
push
jb
fildl
scas
mov
dec
adc
fistpll
xchg
cvtps2pi
and
pop
mov
lea
nop
in
push
dec
mov
aam
test
pop
subb
data16
sbb
xchg
stc
dec
iret
and
dec
and
push
adc
xlat
ret
mov
icebp
add
or
push
ret
and
out
icebp
mov
mov
stos
jne
std
subb
cmp
negl
jle
addr16
xor
inc
or
rorb
and
arpl
les
push
mov
push
iret
sub
jno
add
pop
add
jmp
cltd
addr16
repnz
test
incl
cltd
arpl
pop
mov
dec
std
add
imul
mov
mov
sbb
leave
out
adc
push
and
mov
push
leave
js
lods
mov
cmpsb
push
mov
adc
test
xlat
fisttpll
iret
negl
add
daa
or
or
xchg
mov
pop
shrl
pop
adc
push
and
dec
mov
pop
inc
fstpt
cli
mov
xchg
jmp
je
repz
jp
mov
movsl
in
jnp
push
inc
sub
jno
imul
xchg
ljmp
cmp
pop
or
pop
pusha
push
mov
lods
xorl
and
stos
mov
xlat
test
adc
jmp
loop
in
sahf
jae
lock
aas
add
daa
add
ret
sbb
incb
mul
inc
adc
les
mov
lods
push
test
ret
pop
fldenv
es
sarb
sbb
push
je
scas
popl
mov
xor
in
add
push
sbb
xor
pop
pop
shrw
dec
lea
enter
rcrl
mov
mov
rorb
ja
out
enter
loop
or
lods
xchg
rclb
xor
dec
xchg
mov
fs
push
lock
ljmp
or
insl
or
jns
je
xchg
ret
mov
push
mov
pop
xlat
push
xchg
enter
adc
and
lret
xchg
or
sub
imul
push
jl
sub
cmpsb
push
fwait
mov
out
jg
pop
pop
push
std
ja
imul
xchg
xchg
mov
out
cmc
or
imul
dec
fnstsw
cmp
gs
icebp
fs
mov
nop
cld
sbb
ja
popa
lods
sub
repz
int
adc
mov
sahf
in
xlat
jp
mov
imul
out
and
mov
fimuls
xchg
mov
aam
fiaddl
jae
mov
fucom
rorb
testl
dec
pop
or
push
jb
lea
insb
jmp
jo
aad
rol
js
call
hlt
mov
inc
bsr
push
arpl
stos
mov
adc
mov
bound
pop
mov
je
jbe
pop
ret
test
es
or
mov
push
push
pusha
xor
testl
mov
inc
les
lock
dec
adc
mov
jmp
les
push
or
mov
into
dec
xor
jp
jl
daa
and
std
xchg
repz
ss
and
push
dec
ds
sub
into
test
inc
shl
mov
fimull
push
fisttpll
repz
mov
jl
adc
mov
fbld
movsb
mov
push
mov
push
out
jmp
mov
hlt
pop
pop
shl
loop
xor
dec
xchg
mov
pop
mov
push
inc
shrl
popa
iret
push
adc
and
mov
xchg
ret
aam
or
rclb
jno
fildll
jecxz
xlat
mov
sub
dec
stos
inc
push
or
out
cltd
movsl
jecxz
loope
and
push
and
mov
repz
cld
bound
sub
aas
loop
lcall
add
outsb
dec
cmp
rcrl
ret
rcrl
in
push
and
loope
cld
mov
stos
mov
pusha
xor
rol
adc
inc
in
xor
xor
jge
cwtl
rcr
mov
in
leave
dec
or
loopne
adcl
fiaddl
in
rclb
sub
jne
out
inc
outsb
movsb
sub
lcall
loop
out
call
jne
or
lret
pop
aas
mov
ret
push
scas
jb
mov
pusha
mov
xchg
push
rcrl
aad
inc
movb
fcmovu
inc
mov
into
pop
loop
daa
mov
adc
sbb
jmp
pop
jmp
add
mov
sbb
dec
pop
and
inc
cmp
and
mov
outsb
in
jl
xchg
dec
aam
es
add
adc
push
outsl
rclb
mov
adc
pop
pop
stos
sbb
mov
lock
xor
or
pop
push
sbb
mov
and
aas
sub
mov
xchg
or
cmp
or
pop
lret
inc
cltd
push
insb
rcrb
xor
bound
push
pushf
add
cmp
out
jno
popa
iret
cmpsl
mov
adc
aaa
xchg
data16
add
dec
loope
xor
push
cmpsb
fldt
jne
data16
movsl
decl
inc
faddl
mov
jnp
test
xor
subl
das
xchg
in
ret
mov
inc
lahf
mov
lahf
scas
adc
jne
test
dec
cmc
imul
mov
mov
outsl
jne
jmp
jo
jae
mov
mov
ds
xchg
sub
mov
jns
pop
adc
ljmp
call
adc
popf
cmpsb
out
es
xchg
std
mov
loop
aas
movsb
shl
xchg
sahf
repnz
lock
inc
pop
sub
inc
push
fstp
outsb
fdiv
mov
and
add
scas
push
subl
pop
mov
lret
xchg
dec
jl
fistpll
push
sub
mov
push
shl
icebp
mov
lock
sbb
gs
fsubs
lds
jns
inc
sbb
lock
in
imul
xchg
hlt
cmp
nop
sub
cld
pop
jge
push
add
cs
and
stos
leave
aaa
or
and
mov
push
sbb
adc
bound
inc
or
push
mov
dec
ret
adc
lcall
in
jnp
cmp
addr16
adc
xchg
push
mov
popa
pop
sar
je
xor
mov
sbb
stos
mov
loopne
or
test
mov
xchg
fisttpl
insl
outsl
int3
outsb
cmc
aas
push
int3
pushl
or
gs
jne
fidivl
lock
inc
scas
inc
stos
arpl
adc
std
jns
enter
jge
or
sub
xchg
mov
lds
mov
sbb
inc
stos
gs
push
fstpt
jl
out
fnstsw
mov
cli
cmpsl
and
shlb
in
xlat
loope
xchg
cwtl
add
dec
ds
lods
pop
mov
int3
push
rol
dec
cmpsl
mov
cwtl
pushl
mov
filds
jp
push
jp
cs
aad
push
or
mov
jno
inc
js
icebp
push
sbb
jb
ficoms
out
lcall
aaa
aaa
mov
or
lret
sub
rcl
aas
push
cmpsb
fwait
mov
scas
mov
add
push
aaa
clc
cmp
mov
jbe
xchg
rorb
sbb
popf
movsb
and
jp
enter
out
push
push
mov
scas
sahf
inc
call
mov
call
lret
sbb
mov
cmpl
mov
js
sbb
mov
cmp
cmpsl
rorb
jmp
mov
add
cmc
daa
cltd
inc
cltd
pop
inc
scas
dec
add
out
aas
jecxz
dec
mov
in
push
push
test
mov
pop
cmp
cwtl
leave
iret
mov
ss
subb
out
push
dec
testl
push
jl
sub
sarb
xor
stos
or
loopne
or
cltd
dec
push
int3
rolb
dec
mov
outsb
jmp
jno
or
push
inc
scas
mov
mov
popa
faddp
mov
outsb
aas
iret
mov
leave
pop
in
pop
insb
xor
imul
push
or
test
lea
cwtl
add
pop
cmpsb
and
insb
sahf
out
int3
inc
test
mov
push
lock
fs
mov
inc
rcrl
fistl
andb
and
outsb
and
xchg
imul
inc
mov
sbb
sbb
cld
in
or
addr16
in
push
fwait
into
mov
mov
mov
loopne
mov
das
dec
imul
push
rcr
mov
sarl
outsl
inc
ficomps
fwait
hlt
xor
loopne
mov
mov
ja
mov
movsl
loop
xor
pop
or
idivl
or
push
enter
push
mov
or
cld
lret
xorl
sbb
iret
mov
movl
insb
lcall
dec
xor
ds
add
adc
dec
mov
outsl
movsb
pushf
fcompl
sbb
cmp
int3
ljmp
movsl
sbb
adc
cmp
das
mov
adc
cmpsb
movsb
insl
and
xchg
pushf
or
iret
xchg
mov
xor
sbb
push
xchg
shlb
cs
mov
ja
js
mov
pop
inc
xchg
mov
sahf
sahf
jo
xchg
mov
or
cmp
and
adc
lcall
adc
stc
js
push
and
movsl
dec
pop
inc
arpl
lock
mov
pop
sbb
daa
or
das
int
gs
lcall
pop
and
gs
outsb
in
in
out
scas
xorl
mov
jl
pop
xchg
pushf
sub
mov
mov
sysret
jo
testl
xor
das
inc
shrb
imul
or
in
daa
pushf
inc
adc
lcall
dec
pushf
sbb
popa
cwtl
mov
jbe
jge
popf
add
les
xchg
sub
es
test
xor
aad
mov
pop
or
ret
repz
dec
mov
dec
cmp
jo
mov
scas
std
sbb
and
push
inc
inc
cli
shrb
mov
jmp
fnstsw
cmc
and
jae
ljmp
rcl
mov
mov
stos
pop
jle
movsb
xchg
adc
and
sbb
dec
adc
dec
inc
mov
sarb
sar
sbb
fdivs
test
sbb
or
inc
pop
push
xchg
pop
out
xchg
aas
push
ss
cmpsl
sets
cmp
or
into
bound
out
cmpsl
mov
pop
and
les
push
aam
clc
jp
jmp
cmp
js
sti
push
cli
imul
neg
add
mov
mov
push
inc
hlt
sub
test
xchg
mulb
outsb
lea
out
pop
push
sub
das
push
pop
dec
ret
mov
push
fnsave
into
jle
fstl
cmp
into
iret
and
outsl
les
mov
or
xor
adc
dec
repnz
faddp
incb
jns
mov
mov
and
push
push
sub
hlt
or
sub
js
iret
add
lock
pusha
fs
outsb
xchg
js
pop
add
fwait
mov
mov
ds
call
popa
jo
shrb
add
sbb
push
push
mov
mov
and
dec
lods
cmp
inc
push
pop
jp
stc
push
pushf
add
int
and
pop
sarl
jle
mov
push
cs
sub
jle
inc
sub
cmc
xchg
test
push
push
mov
fst
dec
ja
fwait
aaa
mov
stos
dec
lods
in
cmp
jecxz
popa
jb
add
mov
repz
or
test
testb
addr16
add
mov
push
mov
push
jno
outsb
xlat
mov
sub
mov
test
notb
decb
mov
insb
xchg
add
xlat
pop
stos
and
popa
inc
mov
mov
or
add
cmp
sub
xor
dec
and
mov
mulb
shl
fldl
mov
pop
insl
arpl
mov
repz
xlat
cmp
push
mov
push
mov
sub
cmp
and
mov
sub
pop
adc
lahf
sarb
mov
push
jge
ljmp
mov
loope
cltd
add
mov
inc
push
sbb
jbe
and
and
inc
xlat
pop
test
call
je
or
cmpsl
sub
lcall
pop
aas
lret
adcb
leave
add
lea
adc
lcall
push
test
pop
push
jnp
imul
pop
fiadds
in
or
push
push
xchg
popa
jno
and
mov
fs
dec
jo
mov
divl
insl
aad
jg
fwait
mov
xchg
push
ds
cmp
mov
xor
push
mov
hlt
and
jbe
pop
xorb
jo
lcall
push
add
or
pop
add
dec
or
aad
inc
pop
ja
stc
sub
ret
xor
daa
lahf
mov
push
sbb
leave
ss
sbb
cmp
xor
dec
mov
sub
jbe
cmp
jns
mov
inc
jbe
push
shll
and
ja
jp
dec
shrl
pop
cmp
pop
pop
enter
cmp
push
aad
stos
or
andb
ja
push
adc
push
jbe
stos
sbbl
rcll
and
push
mov
clc
mov
popf
push
and
in
add
jne
sub
enter
dec
scas
icebp
ljmp
xor
nop
xchg
bound
pop
cmp
test
or
sbb
repz
js
insb
push
sahf
insl
xor
xor
stos
or
or
and
cmp
dec
mov
add
cmp
or
or
test
insl
dec
push
xchg
lods
fsub
mov
pop
cmpsl
lcall
inc
fsub
das
mov
sbb
scas
loop
mov
aam
mov
xor
out
fwait
icebp
pusha
mov
ficomps
sbb
popf
es
adc
sbb
push
lock
push
loop
pop
xchg
decl
pop
loopne
mov
jno
cld
pop
xlat
movsb
add
dec
aaa
scas
sub
aam
inc
xchg
mov
pop
int
fwait
nop
sahf
mov
sbb
icebp
inc
mov
repnz
and
iret
fisubrl
mov
stc
or
mov
fs
add
pop
xchg
and
cld
shlb
sahf
or
cmp
je
test
push
mov
add
sub
cmpsb
cmp
iret
adc
pop
jge
push
sbb
repnz
adc
sahf
jns
scas
xlat
in
mov
cli
push
jbe
ljmp
push
cmpsl
and
sub
inc
test
lods
cmp
xor
push
aas
in
repz
jbe
iret
xchg
sti
nop
lods
push
jl
lret
js
and
in
ds
test
mov
jns
aaa
inc
cmove
ficoml
imul
insb
out
xor
xchg
sbb
int3
in
cmp
xchg
cli
sbb
mov
lea
aam
fdivs
movsb
sub
mulb
outsl
cmpsl
dec
lock
dec
into
add
es
pop
dec
jl
push
cmp
js
outsb
xor
cmpsb
loopne
adc
add
psubd
jmp
xchg
xor
outsl
aaa
or
mov
nop
inc
inc
jae
mov
mov
rep
xchg
and
push
jns
lcall
pop
imul
lahf
cmp
push
sbb
sub
movsl
out
adc
mov
mov
mull
fbstp
out
xor
gs
cmpsb
inc
or
or
mov
in
ds
dec
ficompl
jle
cmpsb
push
lahf
push
test
mov
xchg
push
inc
mov
stos
or
xor
xchg
xor
stos
xor
push
and
scas
dec
xchg
dec
push
int3
push
movsb
inc
lds
loopne
arpl
gs
dec
inc
stos
jbe
lods
enter
shl
cs
push
xor
dec
pop
xor
test
mov
aas
pop
popa
popa
lcall
adc
nop
xchg
and
lcall
std
mov
lea
ss
fstp
sub
jg
fnstenv
inc
mov
jmp
jns
mov
enter
int
shr
iret
test
and
clc
sbb
sti
lret
dec
and
inc
addb
rcll
ret
loope
inc
lea
inc
xor
mov
add
add
test
xor
out
xchg
sub
cltd
loop
push
inc
dec
sbb
mov
jne
pop
dec
mov
std
jg
cmp
sarl
sahf
stc
and
push
adc
cwtl
mov
aad
mov
jns
xor
das
outsl
dec
clc
loop
dec
cmpsb
inc
data16
orb
ret
xchg
dec
or
adc
cli
into
xchg
lret
pop
or
mov
push
fwait
lret
jge
pushf
fidivl
xor
ret
and
insl
stos
pop
mov
mov
adc
mov
push
mov
loope
sbbb
cltd
cwtl
push
dec
test
jbe
jne
pop
or
js
add
cwtl
inc
and
arpl
adc
fcompl
ljmp
shrb
mov
sub
jnp
and
mov
push
mov
push
jno
adc
aad
lcall
imul
pop
lret
sarl
jmp
shrb
aas
mov
in
dec
arpl
in
scas
sub
adc
and
sbb
in
iret
mov
imul
cli
mov
xchg
mov
jg
gs
sbb
mov
adc
pop
xchg
jecxz
xlat
in
jnp
in
inc
mov
sti
lods
enter
jae
sbb
sbb
rcl
xchg
jbe
stos
cmpb
cmp
dec
sbb
jae
add
incb
add
pop
mov
and
mov
or
push
sub
les
call
popf
fincstp
add
push
int3
or
pop
pushf
push
repz
or
xchg
add
ret
adc
mov
filds
loope
pop
mov
nop
mov
mov
sahf
insl
jge
pop
cs
push
shlb
mov
sbb
jmp
inc
scas
mov
mov
sti
bound
scas
push
xor
int3
inc
xchg
je
mov
inc
popf
das
rorl
pop
pop
mov
and
out
in
pop
lret
add
aam
addr16
pop
adc
fdivr
cmp
das
or
outsb
xor
sub
push
pop
repnz
fldl
shlb
push
loopne
sarb
cmp
into
test
adc
inc
jle
into
cmpsb
aas
test
imul
shlb
fwait
rclb
add
push
fdivs
cmp
shlb
add
pop
cmpb
push
cmp
jmp
aaa
push
xchg
adc
nop
mov
popl
jnp
jg
rcrl
sti
xchg
fisubl
mov
or
cltd
popf
in
or
jmp
push
sbb
stos
push
and
les
orb
loop
xor
dec
subb
imul
and
cmp
fisubrs
loop
xor
xor
xchg
xchg
ss
adc
mov
inc
xchg
test
out
pushf
mov
pushf
ja
adc
jl
mov
adc
subb
ret
cmp
test
push
test
mov
mov
push
xor
lcall
inc
jne
mov
fisubrl
jl
adcl
repnz
test
push
shrb
scas
das
push
out
cmpsb
mov
lock
es
fisubrs
add
xchg
in
psadbw
pusha
fiaddl
xchg
inc
and
rcrl
xor
cltd
xchg
iret
pop
sbb
psrlw
filds
and
jne
sbb
mov
jl
fucom
sbb
mov
aas
mov
add
out
test
add
sub
icebp
xchg
inc
xchg
popf
inc
pusha
xlat
pop
xor
or
push
popf
in
movsl
pop
pop
mov
jnp
mov
mov
mov
mov
or
push
ret
push
cmpsb
cmp
push
fscale
add
out
nop
push
cmp
pop
and
icebp
stc
sahf
dec
mov
sbb
xchg
jns
rep
sarl
icebp
mov
jle
mov
push
and
mov
popa
cmp
dec
mov
push
test
mulb
jp
lret
mov
and
xor
jge
jnp
into
and
or
add
test
mov
push
insl
nop
and
shrb
add
or
test
add
inc
or
ds
pop
mov
or
adc
out
sahf
pop
stos
jle
push
mov
sarl
xchg
push
cld
inc
cmp
mov
aas
push
mov
mov
loope
sti
adc
mov
leave
jae
jae
lahf
jae
test
and
enter
dec
push
pop
jno
int
cs
push
xchg
push
mov
mov
lods
repnz
orl
jmp
or
add
lods
das
loopne
dec
ret
call
movl
shlb
pop
jne
add
stc
push
adc
ret
pop
movups
movl
fidivs
inc
dec
loop
pop
outsb
add
dec
fsubl
add
clc
mov
jno
push
inc
mov
pop
popf
adc
and
and
xor
ja
mov
push
mov
or
outsl
fnstcw
test
decl
aam
sbb
cs
shl
divl
mov
mov
cs
jae
cmp
mov
pop
mov
push
call
cmp
cmp
scas
xchg
stos
imull
lea
ret
adc
xor
or
pop
fwait
or
lods
push
xlat
dec
mov
jae
mov
test
pop
mov
add
mov
mov
stos
mov
rcrb
lcall
or
in
in
pop
out
mov
int3
xor
fwait
cwtl
sub
in
xor
pop
xchg
dec
jno
pop
aam
ss
jns
jecxz
jno
xchg
adc
mov
dec
jbe
shlb
aaa
rclb
inc
sub
mov
invlpg
test
mov
jo
sub
xchg
mov
mov
inc
movb
fldcw
js
mov
pop
in
xchg
fadd
or
mov
ja
inc
jge
lea
arpl
scas
pop
dec
cmp
popf
inc
push
jecxz
imul
dec
jns
jp
push
push
pushf
in
jmp
shlb
mov
mov
test
aam
orps
and
sub
icebp
sub
sti
jae
xlat
daa
pop
or
pop
rcrl
jo
sti
cltd
imul
mov
mov
clc
in
fdivs
loopne
cmp
sub
mov
mov
dec
lods
in
lret
cld
cmp
sub
or
xor
out
ret
sub
mov
xlat
jmp
xor
mov
dec
pop
nop
icebp
xchg
adc
push
or
es
cltd
aam
cltd
xchg
adc
push
xor
push
arpl
or
jae
hlt
xchg
test
jns
xchg
out
sbb
les
sub
jnp
xchg
mov
sbb
cltd
movsl
jne
fsubl
das
out
pop
fstp
push
or
ja
mov
xor
sub
mov
outsb
loopne
ficoml
lods
mov
xchg
ds
rolb
int
fcoms
xorl
cmp
pop
shrb
and
cmp
pop
mov
sub
fdivl
xor
inc
lods
xor
pop
iret
ret
mov
add
movb
rcll
mov
aaa
mov
fistl
gs
xor
sub
ss
mov
imul
push
push
rcr
sub
or
mov
cli
out
ret
inc
xchg
jbe
cmp
aaa
rcr
dec
jnp
lds
mull
scas
xchg
lahf
cmpsl
mov
jne
mov
jl
mov
stos
ljmp
push
xor
hlt
cld
cmp
test
add
test
pop
and
inc
mov
xor
rcll
jl
aad
imulb
data16
add
insb
xchg
add
dec
xchg
imul
pop
inc
xor
ja
xor
test
xorb
cmp
push
push
in
and
dec
data16
fistl
push
ret
cmpsl
sub
dec
xor
in
js
xor
mov
and
pop
cmc
insl
ret
aas
mov
and
sbb
xchg
mov
movsl
xchg
inc
popa
fcompl
clc
push
push
clc
inc
loopne
and
pusha
dec
mov
jb
sub
lcall
sbb
rolb
cmp
fwait
jecxz
xchg
outsb
ljmp
mov
mov
add
jp
cmovo
movsb
lods
daa
and
aad
pop
jge
xor
cmc
shll
jle
jae
adc
sbb
ret
test
push
inc
adc
mov
lcall
pop
or
in
popf
fs
push
lock
xchg
andb
loopne
popf
out
cwtl
push
test
xor
enter
movsb
push
add
push
dec
push
jmp
andb
in
arpl
dec
cmp
lock
int
jmp
pop
call
mov
or
xor
jle
cltd
mov
in
clc
xchg
movsb
or
outsl
gs
or
gs
push
stos
sub
lds
into
lahf
add
inc
sub
jo
dec
xchg
arpl
push
cmp
ljmp
outsb
sbb
test
icebp
orb
xlat
push
ja
fidivrs
inc
jae
sarb
mov
add
mov
push
inc
insl
dec
pop
test
dec
push
push
dec
cmp
lds
popf
loope
jno
mov
mov
or
lret
mov
pop
ja
loopne
dec
nop
cmc
cmpsl
sub
hlt
fidivs
and
dec
cmp
mov
lods
ja
lea
dec
inc
mov
pop
jbe
pop
add
cmpsl
mov
push
jmp
movsl
or
xor
sub
add
andb
mov
test
dec
movsb
mul
rcr
mov
xchg
testl
mov
lods
js
sahf
xor
mov
sbb
mov
sub
aam
mov
fs
or
or
mov
xchg
outsl
popf
cli
out
xor
pop
jge
mov
adc
add
lods
stc
popf
mov
jno
jp
or
das
xchg
cmp
xor
xchg
fadds
aam
and
test
js
lahf
sub
hlt
lea
mov
xor
sbb
sbb
les
std
adc
clc
mov
enter
pop
push
es
dec
je
das
stos
push
mov
push
push
xor
fstpl
mov
ja
mov
xor
in
arpl
push
mov
xchg
imul
imul
cmp
test
or
rclb
cltd
jl
lds
stos
jl
loop
scas
das
inc
movsb
in
out
in
add
aam
pop
or
cmpsb
rcrl
das
mov
sub
ljmp
mov
stc
sub
outsl
pop
mov
nop
jae
out
xchg
and
repz
dec
icebp
stos
popa
leave
js
mov
or
xchg
inc
popa
mov
mov
jae
and
lcall
mov
sub
es
xor
pop
into
fisubrs
mov
icebp
mov
dec
mov
test
mov
dec
lahf
out
xor
add
rclb
xchg
pop
mov
mov
cld
popa
loope
push
cmp
xor
mov
push
call
imul
or
dec
sbb
std
inc
clc
pusha
add
sbb
or
inc
pushf
mov
outsb
pop
lods
xchg
lock
sti
lret
dec
test
outsl
fwait
lcall
and
insl
cli
or
push
lret
mov
xor
pop
mov
adc
cld
cld
pop
data16
das
cmp
sbb
insb
jnp
cmc
dec
mov
xchg
cmp
es
dec
add
dec
xchg
or
pop
fnstenv
jmp
push
inc
sub
in
fwait
shll
inc
pop
mov
sub
jecxz
cmp
mov
int3
mov
sbb
movb
jbe
lods
pushf
pop
xchg
pop
mov
rclb
dec
or
jecxz
mov
xchg
mov
mov
aaa
add
dec
pop
das
xor
mov
loope
lds
push
jg
jno
mov
cmp
mov
jno
into
push
sar
mov
add
jmp
mov
adc
add
lods
jl
ja
sub
cwtl
sub
cmp
mov
out
mov
scas
mov
mov
insb
adc
mov
jecxz
push
fcom
fsubl
add
out
and
cmp
mov
stc
cmp
lods
enter
mov
pop
aad
sbb
sub
test
out
pop
xchg
lahf
and
sahf
fs
sbb
push
jp
fisubl
mov
fisubs
mov
lds
push
scas
stos
mov
lcall
lds
jecxz
add
hlt
dec
int
fnstenv
cmp
stc
cmp
mov
arpl
dec
daa
or
cmp
cwtl
dec
pop
mov
mov
jge
add
dec
loope
inc
fmull
jbe
sbb
dec
fidivs
loopne
xchg
mov
decl
pop
sub
cmp
sub
adc
adcb
into
push
and
jl
iret
inc
sbb
lret
imulb
pusha
fildll
cmp
pop
mov
sti
call
mov
insb
jmp
mov
push
or
test
push
aad
mov
dec
repz
mov
sysexit
aad
scas
or
outsb
pop
pop
sub
in
scas
notb
int
xor
inc
mov
fisttps
jge
jmp
loop
jg
das
in
dec
jmp
cld
sub
pusha
es
push
pop
pop
pushl
mov
ljmp
ds
into
fsubs
mov
out
jo
jge
out
sarl
adc
loope
add
jle
call
inc
shl
adc
add
push
lret
scas
inc
test
lcall
or
ret
mov
or
dec
xor
and
mov
jb
inc
inc
sti
into
lock
in
cltd
int
sub
sbb
fildl
jge,pn
call
bound
bound
pop
ss
imul
fisubl
cwtl
adc
jmp
sbb
mov
add
pushf
rcrl
mov
inc
pop
inc
cmp
fcmovb
cmpsl
sarb
idivb
fs
or
call
xor
pushf
sbb
mov
sbb
lret
cmpsl
es
xchg
popf
adc
outsb
call
popf
mov
ljmp
cltd
insl
mov
mov
imul
pop
add
mov
dec
pop
out
and
dec
cmp
mov
mov
icebp
aad
dec
loop
mov
js
mov
imul
lds
and
xchg
out
push
into
dec
dec
xor
insl
push
les
cmc
mov
add
jae
aad
jbe
add
push
xchg
cld
add
test
lock
or
lret
jmp
negb
mov
test
fwait
and
mov
sahf
test
adc
into
push
mov
or
adc
test
cmp
pop
dec
mov
pop
es
add
jo
cmp
loopne
jbe
leave
push
cmp
pusha
pop
push
and
jg
add
decb
or
dec
mov
sbb
inc
xor
mov
jle
ja
add
andl
std
pop
sub
insb
cmc
cmp
clc
push
fisubs
aas
popf
adc
inc
and
mov
nop
mov
cld
arpl
dec
and
mov
xor
xchg
scas
sahf
les
mov
lret
jno
lret
xchg
aam
lds
mov
pop
jp
pop
outsl
lcall
xchg
add
pop
inc
call
ja
loop
mov
jp
nop
xchg
xor
sbb
xorb
mov
mov
clc
movsb
ret
iret
or
push
cwtl
sti
subl
xor
leave
jbe
add
outsw
fmuls
xlat
adc
sub
push
inc
xchg
int3
push
xchg
push
jno
loop
es
idivb
mov
mov
mov
jbe
outsb
bound
adc
pop
aaa
mov
fistps
and
mov
stc
sahf
inc
pushf
fiaddl
or
loop
clc
pop
mov
jbe
sbb
mov
aas
aad
jne
jb
mov
mov
push
pop
push
or
xchg
cmp
repz
loop
xchg
mov
inc
dec
stos
jl
test
lods
push
xchg
mov
pop
and
fisubs
fsubrl
je
cmc
faddl
sub
daa
jbe
pop
adc
shl
fsubrs
leave
es
sub
stc
in
and
ljmp
and
dec
jne
mov
inc
xchg
sbb
sub
cmp
adc
add
or
and
pop
xor
xor
insl
mul
or
mov
xor
push
sub
das
test
loop
add
rcrl
rorb
push
sub
mov
dec
mov
and
aas
stos
test
in
or
mov
adc
or
adc
js
inc
enter
adc
call
cmpb
mov
mov
jl
push
mov
mov
stc
cmpb
jmp
mov
fnsave
notb
and
inc
pop
and
mov
mov
jbe
dec
xor
inc
clc
popf
add
int3
enter
pop
pop
das
jae
lret
mov
push
lret
cli
paddusw
mov
cmp
mov
lcall
mov
call
fiadds
push
jae
es
add
movsb
call
jp
ja
cmp
dec
iret
jb
dec
enter
mov
loop
push
mov
repnz
stc
adc
adc
mov
sbb
cmp
test
insl
inc
push
loope
mov
and
mov
popa
jle
lret
pushf
mov
pop
jge
pop
div
mov
inc
mov
scas
or
cs
test
sub
in
jb
pop
add
ret
leave
in
xor
mov
or
fnstsw
nop
add
out
adc
sub
xchg
movsb
dec
push
cmp
popa
out
ss
out
xchg
push
or
sbb
mov
insl
pop
xor
xchg
arpl
mov
test
jge
jg
xor
test
mov
daa
icebp
and
cwtl
icebp
scas
out
dec
mov
jne
pop
mov
mov
movsl
cmp
aas
pop
mov
ss
jnp
imul
pop
test
gs
or
sub
adc
dec
cmp
ja
cmpsl
sub
and
stos
jge
inc
pop
mov
pop
sub
imul
jle
xlat
dec
les
push
push
push
je
iret
xor
jl
popa
dec
inc
fdivrl
jl
mov
mov
iret
jle
inc
movsl
pop
repz
and
call
and
out
jbe
push
sub
test
imul
dec
sbb
push
rolb
test
adcb
adc
imul
shl
xchg
pop
stc
sub
fcoms
cmpl
testb
pop
jl
sbbb
sbb
jl
sub
mov
dec
dec
fsubrs
mov
lcall
sbb
fidivl
and
rcrb
mov
mov
cmp
ja
adc
sahf
xlat
lock
test
popa
pop
adc
add
shll
inc
lock
in
jbe
jg
cmp
or
pop
popl
jmp
subb
xchg
jne
xchg
push
xchg
inc
jnp
int3
cmc
push
outsl
aas
sub
sub
sub
inc
arpl
dec
or
fdivrl
cmpsb
pop
dec
jne
lods
mov
int3
sbb
xor
int
dec
and
push
cmpsb
xor
mov
adc
popf
lds
pushf
shlb
ja
sbb
jecxz
inc
dec
inc
adc
cwtl
les
add
aaa
and
xchg
fwait
pop
je
lock
mov
test
xor
dec
jno
aad
popa
jg
cmp
mov
sbb
mov
test
mov
add
jnp
push
scas
imul
ja
inc
cmpsb
out
pop
pushf
push
jge
add
push
lods
sub
push
add
xor
daa
cli
loope
and
xchg
or
dec
dec
mov
in
insl
mov
cmc
cmp
inc
xchg
jb
mov
ficomps
sub
fbld
cmp
mov
dec
pop
cwtl
sbb
pop
push
adc
sub
js
pushf
scas
inc
lds
push
imul
out
stc
popl
mov
sub
push
jae
sub
lret
cmp
add
xchg
sar
enter
notl
mov
mov
push
pop
jne
ja
rcll
daa
sti
rcr
test
dec
hlt
aaa
sbb
loope
inc
sbb
add
adc
jno
pop
shlb
iret
xchg
add
int3
push
xchg
inc
push
lret
imul
cmp
enter
aam
int
push
enter
pop
loope
mov
mov
sbb
aaa
movsl
aad
loopne
adc
and
js
dec
aas
int
hlt
sub
aas
jbe
mov
ljmp
jg
not
cld
leave
dec
test
xor
jae
or
push
inc
cltd
pop
mov
push
or
pop
jmp
push
je
sti
pop
xor
arpl
mov
add
pop
mov
repnz
testb
pop
adc
test
aad
mov
sub
mov
xor
mov
mov
cld
adc
push
call
jg
jmp
lds
daa
repz
fsubrl
iret
sbb
cmp
fisubs
std
repz
mov
dec
jmp
test
dec
rcll
pop
rcrb
test
sub
daa
pop
xchg
push
mov
int
or
sub
mov
dec
cmp
bound
inc
inc
testl
jp
fcmovbe
ret
add
out
cmp
leave
sbb
and
loopne
call
sub
xor
aaa
sahf
push
mov
mov
mov
lds
push
cmp
lock
fiaddl
imul
mov
mov
rorb
cwtl
pop
sub
shrl
lods
xchg
mov
jo
or
pushf
push
sub
rorb
or
iret
pop
fldt
pop
scas
inc
add
daa
cld
dec
mov
jno
shll
scas
test
adc
inc
scas
out
adc
fldenv
and
mov
je
imul
out
fistl
and
xlat
arpl
rolb
lods
das
pusha
testl
xchg
test
gs
xchg
test
cli
sbb
pop
imul
sub
clc
nop
bound
mov
xor
out
xchg
std
fxch
adc
sub
fisttps
stos
fwait
cmovs
xchg
mov
xchg
fs
rcrl
repnz
mov
fmull
testl
rcll
hlt
lret
dec
lret
push
fcmovnu
xor
fistps
fists
mov
test
jo
imull
cmp
out
lods
pop
adc
add
js
dec
inc
adc
pop
add
in
jae
ljmp
pop
inc
or
pop
mov
cmp
movsl
jo
hlt
fidivs
xchg
cmp
mov
and
xor
cli
out
mov
bound
mov
or
fcompl
push
pop
sbb
fcmovu
dec
sub
jmp
add
push
pop
fwait
sbb
mov
ds
mov
or
cmp
mov
mov
jbe
lcall
jb
cmp
sub
jo
popf
mov
test
jns
sbb
test
sbb
test
mov
out
rorb
popf
lock
pop
pop
ret
aaa
add
cs
mov
add
loope
cmp
repnz
inc
enter
mov
int3
pop
orl
into
cmpsl
sub
dec
out
aas
dec
call
lahf
cmp
hlt
popf
inc
push
jmp
scas
push
push
mov
sub
mov
pop
scas
cmp
or
pop
pop
movhps
imul
jg
loope
shlb
int3
outsb
jno
pop
dec
idivb
jg
cmp
pop
pop
dec
xchg
icebp
sbb
sub
movsl
jns
xchg
in
int3
dec
add
pop
je
lahf
pushw
inc
sub
loope
push
out
cwtl
cmp
lods
cs
mov
mov
outsb
stc
inc
ret
out
mov
fimuls
stc
fmul
ret
cmp
mov
and
mov
sub
cmc
and
add
pop
xchg
xor
pop
push
sahf
xor
xchg
repz
xchg
pop
divl
insb
insb
cld
mov
aad
xor
mov
scas
clc
fistps
and
push
pusha
jne
fcomp
xlat
lods
add
dec
rorb
ret
std
push
std
cwtl
cmpsb
call
ds
adc
in
lea
shrl
and
testb
xchg
sti
out
sbb
xor
stos
jmp
outsb
adc
mov
fs
lds
leave
xor
xor
pop
add
in
inc
leave
gs
roll
movsb
mov
and
inc
pop
inc
push
idiv
aam
fisubrl
ficomps
fidivrl
leave
push
add
mov
push
jecxz
jecxz
and
aam
mov
je
add
jo
cmpb
jmp
das
outsl
fisubs
in
std
mov
mov
pop
dec
mov
pop
arpl
hlt
mov
xchg
es
div
loope
lret
sub
and
pop
das
sub
push
stos
repnz
repz
fidivl
int
dec
push
ret
pop
xor
ss
jb
scas
add
adc
dec
mov
jp
pop
and
inc
pop
inc
sub
ja
call
inc
cmp
sbb
xchg
test
mov
adc
scas
pop
bound
sbb
jo
icebp
ret
push
add
jae
mov
iret
xchg
mov
jg
cmp
loopne
dec
icebp
clc
or
mov
fidivrs
mov
pop
lea
enter
inc
scas
in
lds
mov
rolb
jae
aad
pop
mov
into
fistps
jns
jnp
mov
cmp
xchg
and
shlb
loopne
jl
pop
or
xchg
pop
out
jae
cltd
mov
mov
aaa
xchg
cltd
insb
mov
lock
jb
mov
adc
adc
loop
in
mov
xchg
jbe
popa
inc
push
imul
or
mov
xchg
mov
out
cmp
loopne
adc
adc
or
fidivs
loop
xchg
fisubrl
mov
cmp
push
scas
mov
cli
jmp
ficompl
adc
test
inc
inc
pop
lock
es
test
jno
in
out
add
mov
adc
out
and
mov
ss
cs
xchg
jne
mov
int
int
xchg
cmp
in
xor
dec
icebp
xchg
fwait
sbb
mov
out
std
push
pop
push
sbbb
sub
cmpsb
or
daa
bound
push
xchg
insb
ss
fxch
repnz
test
fucomi
sub
repnz
mov
test
shl
add
xlat
into
fcomi
ss
lods
jl
dec
push
das
sub
mov
test
popf
xor
sub
add
add
shll
and
test
and
sahf
pop
out
scas
xchg
cmpsl
movl
dec
push
cmpsl
lods
cmp
je
inc
cmp
outsb
out
dec
cwtl
aad
in
or
pop
lea
rorb
das
push
cwtl
fs
xor
inc
fcompl
adc
jno
jb
fstps
mov
cwtl
dec
es
das
pop
push
mov
add
and
sarb
arpl
sub
cmp
cmpsb
xor
frstor
int
cmpsb
hlt
mov
mov
or
aam
push
pop
mov
pop
inc
mov
inc
mov
jg
movsb
das
push
mov
jne
cmc
or
inc
les
fdivs
addr16
xlat
mov
bound
fs
out
loope
or
pop
out
ret
sbb
jl
aad
movsb
xor
rcll
cmc
bound
xchg
fwait
insl
jmp
push
xor
or
xchg
mov
sbb
ret
jae
mov
or
icebp
dec
and
push
pop
mov
imul
subl
xchg
inc
fsubs
lahf
cmp
mov
aas
out
sub
sub
adc
jno
pusha
aas
cwtl
aam
mov
or
xchg
aam
or
icebp
xor
lahf
movsl
mov
mov
mov
xor
xor
in
movsl
lods
sub
xor
jno
iret
xor
xorb
add
dec
inc
das
push
mov
fcmovb
outsl
mov
rcrl
pop
cmp
in
push
push
sbb
mov
sub
lea
sbb
out
repnz
push
das
adc
insl
adc
mov
or
in
inc
dec
leave
outsl
inc
loope
data16
popa
pop
aam
arpl
aad
and
add
std
cmp
fisttps
and
loope
sbb
dec
jp
cmp
or
push
stc
pop
sbb
or
insl
cmpsl
jle
add
mov
add
or
pop
scas
mov
jmp
dec
mov
sti
int
and
ss
fiaddl
daa
adc
cmp
lcall
fsubrp
cmp
inc
sub
loop
rcrl
xor
push
mov
lahf
mov
add
xor
push
push
outsb
cmp
pop
roll
mov
ja
jge
jge
cmp
cmp
and
pop
inc
mov
sahf
daa
cmp
stc
aam
sub
xor
mov
sbb
clc
push
dec
add
mov
xchg
pop
jnp
js
pop
lods
loopne
inc
insl
mov
push
sbb
push
jbe
push
inc
jle,pn
imul
jmp
imul
add
repnz
mov
fmuls
mov
mov
icebp
pop
jno
jne
gs
int
nop
insl
mov
ret
icebp
stos
imulb
mov
scas
bound
pop
jle
hlt
add
pop
orl
push
insl
push
lods
lods
aam
mov
dec
mov
gs
je
addr16
pop
in
push
cmpb
mov
jge
push
mov
dec
pop
mov
xor
adc
mov
mov
jnp
les
enter
jns
cmpsb
mov
inc
pop
dec
add
sub
mov
inc
sub
test
in
pop
pop
popf
mov
ret
lahf
sub
popw
sti
jbe
mov
pop
mov
scas
test
in
ret
dec
or
int3
lods
or
insb
outsl
fcoml
jge
int
frstor
add
imul
or
nop
and
aam
in
jmpw
inc
inc
loopne
push
mov
mov
lock
push
xchg
cli
xchg
pop
lock
jmp
sub
push
bound
mov
mov
cmp
push
sub
adc
arpl
jns
test
xchg
or
jns
movsl
cmp
sub
iret
push
jo
pusha
dec
pop
pop
data16
lock
out
test
pop
xor
xor
ret
pop
adc
nop
cli
popf
mov
xor
test
out
sbb
inc
add
shrl
xchg
push
push
test
sub
pushf
xchg
mov
daa
pop
inc
leave
leave
mov
pop
hlt
subl
nop
arpl
sbb
addr16
mov
mov
ja
aaa
sahf
mov
shll
push
sahf
mov
mov
push
sti
dec
insb
cmp
imul
cmp
mov
fldl
test
fldl
sub
mov
lcall
add
aad
hlt
and
push
scas
inc
mov
xor
xor
dec
add
xchg
mov
lcall
lahf
and
inc
jl
push
jo
xor
lret
lods
lcall
sti
xchg
into
test
lock
jae
sbb
push
ss
or
jno
push
mov
fisttpll
imul
ja
outsl
adc
in
rorl
jge
dec
mov
jg
dec
fdivs
sarb
scas
push
push
xchg
or
addr16
std
pop
and
cmp
shll
push
jo
jg
mov
adc
in
out
jae
or
fisttpll
and
pop
add
scas
lock
or
push
push
adc
out
push
std
cmp
add
jp
test
xor
mov
push
xlat
aam
imul
pop
loope
xchg
fmul
shll
ss
mov
lret
mov
xchg
roll
imul
cmp
xor
pop
mov
lods
incb
push
sbb
cmpsl
cmpsl
insl
mov
cmp
push
lods
outsl
mov
loopne
lock
push
xor
inc
mov
mov
decl
clc
mov
mull
call
imul
sbb
or
aam
jne
inc
sbb
test
xchg
pop
ret
lcall
jno
pop
and
sub
push
filds
jne
adc
and
pop
xorb
inc
scas
shll
dec
cmpsl
or
or
call
inc
jmp
cltd
imul
aas
in
jnp
stos
or
out
ret
sub
hlt
mov
sbb
fidivs
int
push
xchg
les
add
mov
call
add
decb
pop
fwait
pop
pop
insl
stos
test
mov
mov
xchg
fbstp
dec
adc
push
test
adc
incl
scas
xor
imul
shl
xchg
mov
sbb
fsubr
sti
fistpll
mov
bound
cld
inc
fistl
add
cmpsb
imul
lcall
sbb
dec
pop
jbe
test
pop
mov
fs
mov
jp
mov
xchg
push
push
ret
mov
jle
shrl
loopnew
andb
mov
scas
addl
dec
adc
and
stos
push
and
ja
mov
int3
cmpl
out
daa
shrb
mov
sbb
pop
cmp
in
xchg
pop
push
scas
xor
fst
jmp
mov
andb
mov
mov
stos
enter
sub
es
jb
fstpl
jg
fnsave
addl
movsb
icebp
arpl
repnz
int3
xchg
fnstcw
loopne
and
pop
imul
sbbl
clc
dec
lret
pop
call
mov
mov
add
pop
xchg
mov
aas
push
mov
orl
rcr
sbb
fisttps
xchg
jns
dec
out
test
xor
lahf
bound
pop
mov
lret
sahf
popf
sahf
push
xor
mov
xor
out
sbb
rorb
pop
push
outsb
bound
out
cmp
add
repnz
cltd
enter
push
fbld
imul
mov
and
fdivp
sbb
aam
cltd
dec
idivl
jne
and
jl
cmp
dec
fistps
sub
and
xchg
cld
and
adc
mov
mov
cs
fstp
xchg
cwtl
mov
jecxz
movsb
adcl
lret
jno
cmp
dec
jae
add
decl
and
mov
out
popf
out
push
mov
cmpsl
sub
fwait
adc
ss
out
lret
in
lahf
scas
mov
sbb
pushl
mov
jmp
movsl
add
data16
xor
xchg
data16
pop
int3
int3
mov
and
ss
stc
pop
dec
or
add
lret
loope
insb
sub
sarl
adc
int3
iret
loope
mov
lret
arpl
mov
out
das
jp
mov
mov
push
aaa
mov
dec
test
xor
jnp
dec
xchg
ficoms
fwait
dec
xlat
dec
mov
loop
fwait
das
mov
push
or
push
mov
adc
imul
das
xor
lock
negb
adc
in
mov
aam
mov
jecxz
cltd
push
dec
push
loope
sub
adc
dec
es
out
lcall
xor
shl
mov
pop
push
dec
and
or
or
outsb
loop
mov
fsts
mov
scas
sbb
push
xchg
mov
or
cmpsl
loopne
cmc
lcall
aaa
ret
xchg
es
imul
cltd
push
inc
sbb
mov
dec
inc
sub
les
add
pop
sbb
incb
call
sub
adc
adc
pop
movsb
fs
scas
xchg
mov
lahf
add
jmp
sub
mov
repz
fldenv
sub
loopne
cmp
add
stos
lods
into
push
mov
movsl
and
dec
std
lds
insb
divl
adc
xor
push
pushf
stos
daa
addr16
or
imul
and
mov
dec
xor
sub
movsb
cmp
fldenv
fistl
rcr
sbbl
sbb
imul
pop
cltd
sub
and
add
jmp
or
inc
scas
mov
and
pushf
add
frstor
adc
ja
loop
in
popa
fst
or
shlb
daa
es
inc
mulb
fldl
xchg
inc
mov
ds
adc
or
cmc
dec
mov
adc
pop
pop
cmp
stos
and
sub
xchg
fists
pusha
aaa
add
popa
mov
xor
xchg
adcl
jo
mov
es
sbb
cmp
int3
jg
arpl
cld
insl
in
or
gs
enter
dec
jae
mov
andb
inc
aam
mov
mov
popf
pushw
nop
mov
mov
out
popf
test
sbb
arpl
movsl
in
out
mov
insl
rcl
shr
std
enter
jp
out
sbb
cmp
xorb
cmc
jle
pop
sbb
clc
pop
test
cmp
push
incl
jns
movsb
daa
cmp
pop
and
in
js
mov
fwait
sbb
mov
xor
in
mov
cwtl
das
lcall
je
and
or
sbbl
xchg
imul
sahf
out
jne
ja
mov
mov
mov
test
mov
aad
icebp
sbb
mov
or
sbb
jnp
outsb
add
mov
inc
test
lcall
mov
add
in
stos
out
mov
mov
test
pop
dec
sub
in
test
mov
hlt
cmp
aad
mov
outsl
lods
fstpt
cwtl
sahf
adc
mov
popa
sahf
add
jno
push
int3
push
call
jp
clc
pop
add
sbb
gs
jbe
aaa
dec
loopne
dec
lret
gs
rcl
test
cmp
call
or
mov
mov
add
arpl
mov
ret
mov
lret
ret
cmp
repz
sub
or
xchg
movsl
shl
sbb
je
sahf
cmp
or
fists
rclb
and
adc
popf
arpl
xchg
mov
shlb
jne
daa
lds
clc
push
rcl
mov
ret
cltd
push
mov
test
sub
and
movsl
mov
ds
mov
stos
push
mov
adc
add
sub
stc
les
ss
pop
fistps
push
xchg
fnstenv
dec
pop
and
mov
or
lretw
pushf
std
push
rcrb
jl
jle
addr16
jnp
mov
push
xchg
mov
jp
jno
xchg
imul
mov
lods
loopne
or
mov
pop
xchg
mov
out
fimuls
mov
xchg
popa
mov
fcoms
xchg
mov
gs
lret
push
add
in
test
jg
add
std
icebp
mov
mov
cmc
shll
add
sub
jne
mov
aaa
inc
jecxz
nopl
dec
xchg
int
inc
add
push
bnd
jne
rol
fnsave
pop
sarl
leave
sub
in
sub
cmp
dec
iret
adc
cmp
fcmovnu
mov
dec
add
cld
cld
inc
mov
movb
jecxz
jge
fldcw
sub
insb
mov
inc
insl
or
shrl
scas
dec
lcall
cmc
cmp
sbb
lahf
mov
push
xor
js
inc
cld
fistps
jne
adc
sbb
outsl
or
popf
pop
lods
ficompl
and
int
mov
movsb
scas
fsubp
lods
push
adc
int3
ja
stos
pop
sar
mov
mov
mov
imul
adc
inc
nop
popa
mul
movsl
mov
adc
cli
je
les
pop
add
xor
mov
movsb
shrb
jae
cmp
mov
imul
repnz
enter
xchg
or
cmpsl
xor
inc
and
loope
mov
sbb
pop
mov
mov
fnstcw
and
xchg
insl
mov
mov
mov
scas
test
mov
push
dec
xor
sbb
mov
sbb
mov
push
test
dec
or
movsb
adc
ds
xchg
pop
in
mov
adc
fimuls
fsts
jnp
lahf
in
pushw
das
sub
cmp
pop
pop
inc
pop
rcrl
mov
sub
jge
std
push
mov
outsb
es
dec
outsb
loopne
cli
push
loope
insb
icebp
xor
data16
cmp
in
mov
imul
pop
xchg
shrl
mov
jnp
shl
add
xor
cmp
iret
ud1
inc
out
adc
sbb
and
mov
adc
and
and
adc
dec
jle
loop
fadd
lea
xchg
scas
std
into
pmuludq
or
mov
das
mov
test
movsb
cmpsb
pushf
mov
stos
in
loope
int3
pusha
and
ss
sbb
mov
jae
dec
mov
push
jecxz
mov
fidivrl
push
lock
or
fmull
push
gs
imulb
mov
mov
dec
cmp
xor
or
jnp
add
or
mov
test
rorb
rcll
cmc
xor
aam
fnstcw
jp
pop
sbb
cmc
movsb
jno
cltd
js
hlt
loopne
mov
in
add
pusha
cli
push
push
stos
orb
add
cmpsb
lea
sub
dec
add
push
or
sbb
and
fildl
gs
fdivrs
push
push
xlat
fadds
iret
in
bound
dec
xchg
sub
idivl
loope
xchg
clc
lock
gs
dec
xchg
shlb
popl
or
mov
ljmp
rcll
fdivrs
ret
test
ss
mov
pop
movsl
and
mov
iret
gs
call
pop
mov
daa
lahf
jo
mov
orl
push
pusha
loopne
add
sahf
sbb
in
or
add
mov
cmpl
fdivl
loope
mov
jb
xor
dec
icebp
push
adc
mov
jmp
xchg
cmpb
mov
xchg
enter
cmpsb
dec
in
mov
lea
es
test
icebp
mov
test
js
add
sub
in
fs
add
out
and
push
xor
inc
jmp
das
fmull
cltd
push
push
push
mov
xchg
jmp
add
jo
xchg
call
push
and
mov
ret
push
test
hlt
ljmp
lcall
cmp
or
sarb
push
dec
mull
mov
xchg
jmp
aas
dec
jge
adc
aam
lock
push
repz
mov
adc
jnp
nop
and
xchg
sbb
inc
inc
dec
inc
cmpb
sbb
inc
outsb
into
aas
xchg
mov
pop
int
sbb
sti
mov
jp
sbb
push
loope
mov
iret
idivl
dec
fistpll
xchg
or
outsl
mov
push
xor
mov
cmp
cs
dec
xor
ror
xor
jnp
inc
aaa
xor
pop
cmpl
outsl
xchg
es
incb
call
adc
bound
shl
or
jbe
adc
jnp
push
jae
nop
das
fists
mov
and
cmp
in
jmp
and
scas
xlat
xchg
loopne
or
cwtl
out
pop
es
dec
cmp
loop
inc
ljmp
mov
mov
mov
pop
push
rolb
push
loope
out
sbb
sbb
pop
lods
xlat
das
sub
jbe
ret
xchg
and
mov
dec
fdiv
sbb
popa
popf
nop
xchg
mov
fcompl
stos
in
push
push
popf
mov
aaa
inc
test
hlt
nop
movsb
mul
pop
je
or
ret
inc
pop
mov
or
fisubrs
cmp
dec
jle
cmp
sahf
mov
jb
mov
add
neg
xchg
dec
les
mov
lret
xor
inc
pop
stos
dec
jo
cmc
test
fcomip
pop
adc
pop
sub
mov
mov
and
jp
xchg
push
fldcw
ret
inc
sbbb
push
dec
les
test
and
leave
sbb
xor
arpl
push
outsl
in
test
jle
cmc
mov
ljmp
test
dec
lret
jns
push
ja
or
nop
adc
mov
imul
jb
push
pop
fcompl
mov
div
or
mov
data16
and
out
mov
movsb
leave
int3
sbb
add
add
cld
sub
sbb
push
andl
mov
pushf
ret
dec
int
add
ds
pop
flds
push
subb
out
repz
lods
test
mov
dec
cld
sbb
inc
pop
adc
push
mov
data16
sti
pop
sbb
and
cmp
and
pop
sahf
pop
sahf
xor
negl
outsl
xchg
loop
inc
mov
into
xchg
sarb
mov
jb
jnp
or
movl
mov
scas
cltd
mov
push
jnp
mov
les
adc
daa
cmc
mov
inc
mov
cmp
mov
out
jno
dec
push
add
and
dec
dec
movsb
xchg
ret
jg,pn
and
xchg
mov
daa
inc
mov
fdivr
sti
out
mov
inc
jg
jmp
pop
rorb
fimuls
adc
sbb
test
sub
sub
test
scas
mov
cmp
lea
call
loop
out
jnp
in
and
mov
cmp
lret
push
dec
ljmp
lahf
inc
mov
jno
inc
lds
add
adc
imul
rcrb
lea
dec
dec
cli
stc
ficompl
int3
cmp
and
testl
lock
xchg
insb
mov
rcrl
mov
inc
ret
pop
sbb
js
pop
adcb
stos
jp
mov
and
pop
xchg
clc
int
sub
fidivl
fbstp
cmp
pop
inc
in
dec
pop
pop
cmp
jbe
lret
fistpl
aam
movsl
cli
xchg
pop
rolb
movsb
lods
jmp
test
movsl
pop
adc
mov
jecxz,pt
shlb
addr16
jne
adc
and
xchg
test
outsl
sbb
in
mov
mov
cltd
or
dec
mov
jle
outsb
shll
lcall
pop
leave
in
lock
mov
jb
aaa
add
jns
mov
test
xchg
stos
cld
out
mov
repnz
sub
in
xorl
cltd
adc
mov
adc
cmp
cli
fdivp
xor
mov
push
icebp
adc
and
mov
out
repnz
inc
cld
mov
lods
cmp
inc
cmp
flds
adc
in
ficomps
jl
out
push
ss
mov
es
xchg
inc
jp
jns
mov
xor
or
add
mov
push
sbb
fldl
fsubs
jle
push
repnz
mov
cmc
leave
push
dec
int3
inc
lea
cmp
add
adc
xchg
imul
push
cmp
push
shlb
cmp
xchg
into
nop
fadds
cmp
xchg
dec
mov
out
addb
leave
jle
mov
mov
mov
dec
cli
ret
inc
mov
xlat
sub
rorl
push
adc
arpl
shll
loopne
add
xchg
and
pop
sbb
pop
out
insb
dec
xchg
cwtl
pop
xchg
sbb
mov
push
repz
mov
dec
and
add
and
call
outsl
push
fisubrs
pop
jle
mov
scas
sub
push
enter
mov
addr16
loope
inc
inc
ret
orb
cmp
mov
jo
xor
mov
cmp
pusha
in
das
xor
xorl
mov
test
mov
das
imul
fildl
jge
stos
jo
lods
popa
dec
adc
push
rorl
call
fsubr
fnstsw
std
shrb
pop
les
ret
iret
add
push
push
adc
pop
movl
sub
sbb
jbe
jae
mov
int3
jg
mov
and
popa
inc
cwtl
dec
pop
leave
clc
mov
xchg
mov
cmp
xchg
xchg
pop
mov
pop
jo
cwtl
jmp
mov
add
add
fistpll
out
es
xchg
push
dec
pop
mov
in
lahf
mov
jae
mov
aaa
in
insl
cltd
out
loop
xor
sbb
les
les
add
daa
out
xchg
dec
mov
stc
insl
inc
dec
ret
callw
mov
cmp
sbb
xor
lock
in
sbb
xor
movsl
cmp
jmp
and
ret
cmp
repnz
pop
or
bound
sbb
sub
ret
cmp
jae
jbe
test
xor
pop
pop
xor
out
push
mov
mov
insl
out
inc
push
ret
ret
adc
cmpsl
dec
popa
push
dec
les
fisubs
mov
sub
call
jp
add
insl
mov
hlt
mov
or
scas
xchg
ret
je
push
je
jg
mov
push
mov
push
and
stc
jp
add
pop
negl
clc
jge
and
jae
movsl
mov
sahf
icebp
pusha
mov
lds
std
loope
pop
pop
adc
aam
mov
jbe
mov
fbstp
or
je
mov
shl
cmp
js
jno
sahf
xchg
jl
pusha
inc
jmp
cmp
out
ret
cli
jb
inc
ja
andb
imul
fiaddl
jge
dec
daa
mov
ds
xor
cmpsb
jg
cmp
mov
std
sub
call
sub
mov
test
cmpsl
das
add
aas
out
inc
and
xchg
sub
imul
cltd
addr16
jo
fstpl
sub
sbb
cltd
outsl
pop
int
ds
pop
dec
and
sahf
in
ds
pushf
xchg
mov
scas
inc
aam
insb
leave
adc
roll
test
stc
jmp
mov
leave
sbb
insl
test
clc
imul
loop
push
add
mov
rcrb
fmull
int
pushf
inc
cmp
hlt
jmp
rolb
xchg
scas
inc
add
push
testl
inc
jo
sbb
not
sub
or
xchg
cmp
jne
mov
movsl
pop
clc
jl
lods
pop
push
mov
mov
nop
clc
adc
or
jmp
dec
inc
lds
pop
sub
jg
divl
bnd
xchg
inc
inc
xor
push
icebp
ljmp
inc
stos
push
cmp
add
jle
dec
movsl
jno
xchg
clc
sarl
xchg
adc
mov
ret
cmpsl
mov
mov
or
lcall
mov
movsl
or
push
test
pushf
aam
mov
adc
inc
and
mov
fiadds
mov
mov
xor
out
adc
cmp
fldt
mov
sbb
mov
into
push
sbb
adc
in
adc
nop
jbe
incb
and
add
fsubrl
fiadds
xlat
push
add
push
scas
push
xchg
or
cwtl
bnd
push
shrb
loope
mov
cltd
notl
repz
xchg
add
inc
icebp
add
mov
jo
mov
loop
das
or
clc
pusha
shlb
fwait
push
testb
daa
sbbl
xor
icebp
imul
imul
jmp
push
fsubrs
sbb
ret
sub
mov
aaa
enter
test
sbb
jb
outsl
mov
insb
je
in
ja
roll
out
stos
jb
iret
add
in
and
xchg
adc
call
es
iret
sub
in
mov
dec
ret
jge
or
mov
insl
mov
mov
sbb
outsb
pushf
xor
pop
enter
or
lods
cld
loop
inc
sbb
sub
rol
mov
pop
lods
std
add
enter
scas
dec
stc
sbb
xor
sti
pop
test
adc
push
jns
cld
add
ja
fstps
cmpsb
and
test
aas
loope
sbb
dec
int3
sahf
int
push
pop
iret
fnstcw
add
jnp
out
or
fsts
lahf
and
xchg
fcoml
stos
in
mov
inc
jb
jge
xor
jle
or
stos
sub
ljmp
and
test
adc
insb
aad
dec
enter
sahf
outsb
test
mov
add
dec
je
cli
scas
mov
jae
push
iret
lcall
sub
lahf
xor
movsb
mov
es
clc
pop
pop
movsb
pop
cwtl
scas
jbe
xchg
fisttps
lret
pop
scas
jge
into
xor
dec
mov
pop
fs
in
push
jp
fnsave
testb
xchg
or
push
jae
in
jmp
jecxz
dec
nop
test
lods
je
popa
pop
stos
addr16
cmp
sub
scas
jle
cmpb
adc
jno
out
nop
cltd
sbb
jb
leave
rclb
xlat
jae
cmp
addr16
jae
push
mov
push
idivl
sbb
fsubrs
out
test
cld
insb
aad
int3
mov
and
imul
icebp
inc
mov
fmuls
jl
enter
dec
mov
pusha
dec
dec
loope
pusha
repz
stc
push
inc
add
adc
scas
ds
jmp
push
xorb
insl
push
jnp
push
xorl
loopne
add
test
xchg
jle
ret
xchg
leave
push
xchg
adc
inc
jnp
sbb
jns
outsb
and
loop
xor
popa
cwtl
fsts
cmp
aas
mov
pop
pop
shrd
xor
mov
icebp
or
jle
pop
scas
nop
xchg
mov
stc
xlat
mov
iret
test
or
data16
push
rcr
cwtl
pop
sbb
ds
testl
cmpsb
mov
icebp
jge
aas
xor
pop
fisubrl
cvtpi2ps
sub
shrl
or
add
sbb
int
cmp
cmp
add
add
dec
pushw
jg
inc
orb
adc
es
gs
cmpsl
and
add
mov
jae
add
faddl
dec
das
out
ja,pn
std
in
mov
add
adc
neg
rolb
or
xchg
dec
icebp
jp
xor
aas
fsubrp
bound
and
mov
movsb
adc
or
mov
fmulp
xchg
imul
add
iret
sbb
test
xchg
dec
jns
js
inc
mov
jns
jnp
gs
push
shrl
stc
jg
mov
fwait
sub
ljmp
xorb
and
insl
mov
notb
push
sarb
arpl
and
or
jmp
pop
cwtl
sub
mov
sbb
jne
push
in
and
sti
inc
mov
pusha
cwtl
add
or
nop
mov
push
call
rcrw
or
jge
jb
subb
sub
dec
mov
mov
andl
pushf
daa
out
jge
mov
add
les
mov
push
cmp
roll
sbb
mov
sub
mov
xlat
sbb
dec
loopne
inc
aad
ds
loope
jb
test
aas
push
test
dec
mov
test
jnp
pushf
bound
xorl
cmp
std
pop
daa
cli
add
incb
rolb
mov
pop
add
mov
data16
fs
push
ljmp
mov
leave
xor
sbb
popf
mov
inc
pop
xor
lcall
test
pop
xchg
into
outsb
fiadds
enter
mov
cmp
negl
mov
xor
in
mov
test
pop
mov
shrl
aas
iret
cmp
call
out
xor
xchg
mov
inc
inc
in
ficoms
sbbl
out
ds
xor
and
xor
cmp
inc
inc
xchg
leave
pop
and
dec
xchg
loopne
jbe
mov
cmpsb
xchg
gs
data16
jns
dec
xchg
shrl
cmp
pop
cmp
dec
or
inc
sbb
hlt
jl
inc
pop
data16
xor
push
int3
es
imul
mov
cmp
fimuls
imul
cmc
jp
mov
push
adc
push
les
mov
imul
pop
and
dec
notb
jnp
and
sbb
loopne
xor
flds
cmpsl
call
push
iret
hlt
push
sbb
mov
cmp
cld
xor
adc
sbb
and
adc
std
xchg
dec
clc
out
mov
or
repz
adc
rorl
lods
clc
dec
mov
insl
adc
push
push
mov
stos
int
jge
movsb
mov
push
push
imul
cmp
sbb
adc
push
rolb
inc
gs
add
mov
out
lods
stos
in
daa
fidivl
xabort
sarb
std
inc
push
loop
sbb
adc
cltd
mov
sub
test
xchg
jge
cmc
sub
mov
fisttpll
dec
mov
mov
or
sbb
dec
pop
mov
cmpsl
movd
or
in
scas
fdivrs
aam
frstor
jecxz
imul
cs
imul
xor
lods
jecxz
sub
dec
lock
nop
cmpsb
lret
imul
dec
dec
sbb
mov
mov
pop
or
jne
mov
sub
cmp
data16
dec
movsl
test
sbb
hlt
adc
addb
mov
in
mov
mov
aam
sub
es
ljmp
jl
adc
ds
mov
in
mov
adc
cmp
je
popa
push
mov
or
or
jl
cmpl
out
xchg
xor
add
es
fwait
sub
scas
icebp
jmp
bound
or
dec
mov
inc
add
jno
xchg
pop
add
push
subb
pop
stos
jecxz
jg
sahf
out
adc
sub
sub
cmp
mov
inc
lds
dec
xor
int3
mov
jmp
xchg
pop
scas
jo
add
cld
jecxz
out
sub
loope
das
addl
xchg
mov
sbb
cmc
xchg
aaa
aad
pop
xlat
icebp
in
insl
stc
pop
mov
mov
addl
dec
cmp
cmpsl
mov
xchg
mov
out
and
insb
xchg
imul
sub
int3
scas
aad
xchg
xchg
fwait
pop
mov
cmpsl
outsl
mov
imul
mov
pop
fwait
push
sub
jp
scas
cmp
lods
xchg
cmp
ret
inc
das
mov
dec
je
mov
push
mov
repnz
mov
push
mov
xchg
clc
push
jmp
xchg
enter
jmp
lods
imul
add
or
js
jne
imull
jb
into
mov
fldt
push
fnstenv
adc
cmpsb
add
adc
data16
rcl
jb
push
xchg
xchg
ret
idivb
mov
mov
sbb
lahf
adc
xor
icebp
rcll
jle
cmpl
shrb
cmp
out
mov
pop
fdivp
and
xor
shr
dec
les
and
in
lock
popa
push
add
jmp
jge
ds
jne
stc
or
das
testb
jns
xor
lahf
sahf
jns
cmp
xor
xor
js
add
sub
mov
xchg
and
das
sbb
nop
std
and
fisubrl
stc
xchg
into
in
or
dec
or
or
adc
push
aam
inc
movsl
dec
pop
jbe
pop
dec
aad
dec
popf
nop
jo
push
lods
adcl
loope
jmp
sbb
mov
xchg
mov
out
jne
xchg
movsl
out
xchg
mov
test
mov
mov
fidivrs
dec
push
ljmp
arpl
test
sub
scas
add
js
test
jecxz
in
add
pop
in
push
lods
xlat
xchg
fidivrl
lret
cmpsb
in
dec
or
ds
sbb
repz
enter
sarl
push
jne
ss
mov
jo
daa
test
mov
shlb
roll
imul
or
mov
dec
sub
xor
pop
xor
daa
nop
add
and
insb
jno
lds
scas
push
sbb
push
adc
xchg
push
nop
or
mov
fldcw
mov
pushf
movsb
jo
fistpll
jb
pop
loope
mov
dec
cld
mov
das
dec
push
dec
movsb
xor
adcb
adc
pop
lea
mov
sbb
bound
and
fwait
or
out
and
adc
fdivr
cmpl
or
mov
in
mov
mov
out
push
cmp
dec
je
sti
inc
cmp
and
fwait
ret
mov
pop
xchg
and
jge
mov
xchg
lods
int
fbld
loope
jae
aaa
cmp
adc
adc
cmp
fimull
pop
sub
xchg
inc
pop
decb
fisubrs
inc
xor
xlat
clc
in
out
dec
popa
push
lret
add
jnp
adc
cwtl
inc
xchg
dec
sub
out
loopne
cmp
push
jbe
dec
push
or
leave
pop
sub
test
push
movsb
loope
jo
lcall
repnz
in
call
inc
mov
cs
loope
arpl
pop
inc
cmp
sub
loopne
inc
les
gs
or
pop
push
jbe
pusha
js
je
out
xchg
adc
sub
sbb
in
push
sar
xor
and
inc
mov
enter
and
pushf
sub
cli
add
lods
clc
pusha
es
icebp
pop
or
jnp
sub
mov
sub
in
lea
fisttpl
lcall
cmp
aas
sub
sbb
lcall
pop
out
mov
xor
xchg
sbb
arpl
mov
jne
xchg
adc
cmp
icebp
inc
mov
jmp
insb
adc
adc
adc
xchg
or
jp
pop
jl
out
orb
cmpsb
cmp
test
push
pop
mov
xchg
mov
out
in
enter
pop
and
sbb
xor
nop
call
sbb
dec
pop
jmp
xchg
data16
xlat
cld
stos
push
ds
cld
xor
inc
pop
inc
pop
push
pop
dec
xor
push
repz
out
popf
push
xchg
cmp
aam
jae
cmp
clc
mov
shll
aaa
sbb
sbb
daa
sub
cmp
inc
imul
pop
add
addr16
loopne
push
jbe
and
repnz
fwait
arpl
xor
dec
jno,pt
pop
ret
cmp
or
into
es
jnp
push
xchg
fsubl
mov
jecxz
sbb
movsb
sbbl
xor
cmp
pusha
das
notl
pop
mov
mov
icebp
sbb
cmp
lret
push
and
repz
fistps
jg
add
mov
push
mov
pop
popf
shrl
int
wrmsr
and
scas
mov
loopne
data16
xor
rol
lea
mov
mov
lcall
jg
xor
lcall
mov
add
insb
jl
fidivs
mov
imul
fcompl
mov
psrlq
addl
inc
movsl
sub
adc
iret
adc
adc
fldt
or
and
scas
clc
pop
or
lds
pop
inc
imul
sbb
xchg
mov
cs
mov
decb
jp
jns
mul
inc
push
sub
repnz
lock
push
aas
xor
and
sbb
repnz
cwtl
mov
scas
addr16
mov
fsubl
pusha
xchg
roll
sbb
shrl
call
daa
into
mov
pop
test
xchg
and
pop
lods
loope
mov
or
push
jge
int3
dec
sbb
xchg
add
push
xlat
push
xor
sbb
call
stos
decl
add
scas
dec
dec
add
adc
jne
add
out
lea
mov
shlb
push
notl
or
xor
and
iret
mov
sub
imul
pusha
andl
lods
pop
pushf
fyl2x
gs
jae
stos
ds
and
inc
insb
mov
in
repnz
cmp
pop
mov
scas
sub
gs
stos
sub
je
add
dec
stos
xchg
sahf
in
pushf
sahf
and
push
das
popf
mov
pop
push
push
setb
xchg
call
mov
jnp
xor
test
adcb
scas
insl
mov
sbb
bound
or
inc
add
dec
pop
push
xchg
xor
adc
and
sub
xchg
leave
sahf
cltd
sbb
in
stos
hlt
jno
clc
lcall
addr16
movsl
pop
addr16
and
push
push
mov
mov
sub
in
jecxz
dec
inc
mov
scas
cli
fldenv
mov
daa
mov
in
push
ror
jnp
sub
loopne
nop
mov
xchg
scas
imulb
sbb
inc
out
jecxz
pop
cwtl
jmp
imul
stos
and
or
and
push
cmpl
xor
mov
out
or
pop
inc
adc
insl
lcall
push
ljmp
fucom
movsl
das
jmp
adc
mov
jo
outsb
add
push
pop
adc
imul
stc
push
and
xchg
outsl
pop
mov
decb
pop
rorb
stc
orl
inc
ret
lret
cmpsl
pop
push
test
aad
jo
mov
insl
shl
cwtl
jno
xchg
push
cmc
mov
cmp
repz
cli
jae
das
les
je
adc
adcb
sub
int
cmpsl
les
xchg
sbb
fcoms
mov
jge
pop
push
push
mov
stos
out
std
ds
cmp
adc
subl
fsubrl
cmp
mov
jp
jo
sub
adc
inc
sbb
cmp
push
jo
addr16
dec
les
icebp
mov
xor
test
iret
insl
mov
lea
jecxz
insl
addl
xor
scas
pop
fs
rcrb
jns
outsb
dec
push
aam
push
mov
shll
xchg
cmp
jnp
add
jne
xor
das
dec
leave
push
or
sub
xor
inc
mov
push
cmpsl
xchg
out
std
popf
push
daa
pop
inc
arpl
sbb
repnz
je
aaa
pop
pop
dec
or
stc
js
outsl
dec
imul
jns
sub
push
mov
pop
shrb
cmp
mov
jnp
jne
pop
or
jge
push
xchg
pop
adcl
loopne
ds
shl
xor
popf
jp
mov
dec
and
imull
add
pop
inc
popf
pop
rcll
inc
sarl
inc
fcmovnb
mov
in
pop
jp
jmp
or
cmc
cmc
mov
cmc
sahf
dec
pop
sbb
xor
xchg
dec
arpl
jno
inc
je
pop
loope
sbbl
fmuls
or
mov
arpl
xor
mov
sub
lret
in
lds
imul
and
loopne
or
imul
mov
pop
xchg
movsb
bswap
xor
dec
push
into
shl
push
orb
push
or
inc
jno
mov
call
jb
xorl
inc
cli
popf
or
push
sarb
or
sahf
fwait
push
xor
jp
aas
scas
mov
ss
fwait
lcall
lds
or
std
add
cmp
mov
cs
out
pop
jge
pop
xchg
pop
test
or
mov
popf
repz
movsb
lcall
cmp
dec
fidivs
mov
pop
xchg
lods
inc
not
adc
outsl
mov
mov
adc
fldcw
mov
or
and
mov
jmp
add
and
cmp
sub
cmp
push
inc
jg
or
cmp
test
sub
lods
or
loope
aam
iret
xchg
sub
les
adc
lcall
cmp
add
lret
mov
xor
je
movsl
clc
mov
push
pop
xchg
cmc
or
data16
push
leave
and
hlt
sbb
ret
jno
sub
and
add
push
adcl
dec
bound
dec
xchg
push
scas
dec
scas
popa
scas
sub
or
fimull
paddw
sbb
lret
pushf
or
xchg
and
in
das
testb
lods
cmp
add
jl
sbb
mov
dec
loop
cmp
int
fstl
add
lods
popa
repnz
xchg
cld
mov
mov
pop
jnp
jns
cmpsl
mov
mov
outsb
push
ret
adc
push
adc
mull
fs
xor
popa
ja
xlat
dec
int3
inc
jb
cmp
xchg
add
daa
push
in
shlb
lods
ja
mov
in
movsb
dec
add
sbb
inc
int
fcoms
aas
in
cmpsb
sbbl
jge
mov
popa
sbb
jmp
fmuls
jle
pop
andl
out
mov
icebp
or
push
or
jge
idivb
int3
adcb
sarl
rorl
push
ja
jge
pop
mov
mov
add
push
mov
sub
push
mov
push
sbb
mov
and
int3
sbb
fsubs
cmpsb
cmp
ss
rcll
jb
aaa
roll
mov
stc
or
rcrl
mov
mov
inc
outsl
cmpsb
insl
stos
push
lods
push
push
adc
dec
lock
fs
decb
jne
je
mov
jo
push
arpl
push
lock
or
jns
in
or
mov
fsubrl
les
pop
ss
push
stos
mov
imul
lods
mov
xchg
add
in
iret
and
pop
dec
jbe
aas
popa
and
fisubrl
filds
xor
repz
mov
sbb
negb
lcall
mov
cli
sbb
sbb
sub
leave
enter
outsb
pop
xor
mov
cmp
mov
das
pop
shll
add
inc
addl
cmp
dec
dec
fcmovu
aam
pop
test
mov
lret
adc
dec
cmp
aad
arpl
jbe
pusha
imul
js
add
sbb
and
or
dec
fsubp
pushf
mov
jae
stos
inc
push
add
loopne
push
shrb
mov
jns
lcall
inc
xor
cmp
jmp
mov
mov
mov
sahf
outsl
inc
mov
adc
sbb
loopne
jo
mov
fdiv
out
pcmpeqd
lods
mov
fwait
jle
rcl
popa
inc
cltd
mov
popf
lahf
leave
repz
loop
lods
lahf
bound
inc
or
enter
mov
mov
and
lcall
jmp
int
sbb
cmpsl
xor
sub
cmp
fstps
xor
lret
sbb
xor
dec
push
sub
pop
push
cmp
mov
jle
addb
jle
mov
mov
jne
stc
inc
ficoml
sbb
out
sarl
xchg
pop
idiv
push
adc
inc
xchg
pusha
in
inc
lahf
mov
leave
out
cmp
iret
and
scas
testb
adc
out
mov
test
fxch
and
stos
fsubrs
dec
test
sbb
add
push
ds
cmp
call
inc
imul
decb
push
js
subl
xchg
test
mov
add
pop
mov
adc
repz
out
outsb
pop
pop
or
andl
cmp
sti
sub
insb
inc
mov
sarb
mov
mov
fistpll
dec
outsl
decl
outsl
push
in
xor
add
mov
sbb
fcmovnbe
cmpsb
mov
out
sbb
sub
or
addr16
cmp
push
cmp
dec
daa
aam
adc
cmp
cli
mov
cmp
jl
pop
dec
lods
out
sub
xor
xchg
aam
xchg
in
sahf
ror
jo
mov
shll
cmp
mov
stos
int
jp
int
sahf
les
or
add
outsb
mov
hlt
hlt
add
fsubp
jbe
leave
push
imul
cmp
mov
jns
into
stos
sbb
cwtl
push
je
pop
sbb
popa
pop
movsb
cmp
xor
decb
sbb
rcll
aas
jno
xchg
test
loop
mov
jb
inc
add
dec
es
push
or
in
dec
ret
setne
lret
sub
mov
mov
andb
out
xor
or
cld
mov
or
lret
es
adc
out
loop
dec
jne
pop
mov
aaa
jnp
xchg
addr16
mov
cwtl
pop
add
pop
push
mov
mov
pop
sub
mov
idivb
push
jmp
out
outsl
pop
jno
enter
or
incl
clc
inc
popl
inc
movsl
inc
nop
mov
cmp
xchg
sub
cmpsl
or
jae
and
mov
addr16
push
loopne
xor
push
adc
xchg
cwtl
iret
popa
sub
push
inc
push
sbb
jge
push
lea
lret
out
cld
xor
xchg
orl
rcrb
push
adc
into
jmp
fnstcw
mov
insl
test
lahf
pop
orl
clc
roll
dec
xor
fwait
sbb
call
mov
push
aaa
jno
fndisi(8087
mov
int3
stc
fwait
push
adc
jge
dec
xor
xchg
loop
or
dec
ja
jns
dec
xor
shll
cmp
ss
fistl
aad
inc
loope
dec
stos
imul
mov
pushf
sub
pop
cli
mov
cs
sbbb
fidivl
xor
insb
add
bound
xchg
mov
mov
mov
push
mov
in
lods
pop
addl
xchg
mov
test
jo
or
xor
mov
outsl
cwtl
cmp
fcoml
mov
xchg
xchg
push
sbb
inc
inc
hlt
orb
cmp
xchg
mov
xchg
xor
pop
mov
push
mov
fwait
lods
xchg
push
push
xchg
pop
xor
jno
orl
ficompl
in
out
sub
dec
jbe
mov
lret
jns
add
jnp
scas
or
jmp
aas
test
pusha
mov
scas
outsb
jne
or
xorl
test
mov
ret
std
jg
into
test
dec
mov
xchg
lret
xchg
jecxz
pop
fsubrl
mov
test
ljmp
ds
not
adc
out
das
xchg
push
int
adcb
ds
cmc
sbb
lea
stos
ds
scas
pop
adc
mov
push
cli
shrl
adc
roll
divb
hlt
pop
popa
mov
fcoml
mov
xchg
hlt
adc
pop
cmpsb
dec
mov
pop
mov
aas
stc
arpl
sub
nop
int3
pushf
faddl
loopne
popf
je
pop
ret
mov
lds
mov
in
cmpsb
mov
cmp
psllw
call
sbbb
ljmp
mov
add
insb
nop
sbb
sar
lret
inc
inc
in
jp
dec
or
lret
bound
ljmp
dec
xor
cmp
ficomps
mov
iret
std
in
mov
mov
mov
lock
and
mov
in
sbb
cld
aaa
xchg
and
clc
test
clc
addr16
repz
mov
xor
cmpsb
mov
loopne
daa
imul
aad
inc
xchg
inc
and
enter
pop
pop
loopne
mov
popa
inc
jno
adc
shlb
pop
add
push
cmp
es
mov
in
ljmp
int
mov
sar
scas
mov
fmuls
loop
out
loop
sbb
mov
jbe
pop
movsl
xchg
cmc
adc
or
insb
push
call
pop
in
popf
sbb
cltd
movsb
inc
ret
xchg
ljmp
mov
dec
int3
add
sbb
sbb
mov
cmp
dec
mov
lret
pop
xor
push
or
lds
mul
filds
dec
push
inc
aam
dec
pop
fcompl
cmp
or
dec
push
shll
movsl
push
mov
push
shrb
arpl
das
pop
xchg
out
sub
orb
int
cmp
xchg
aad
mov
jle
sti
jno
sub
or
dec
aas
xlat
cs
push
mov
pop
inc
adc
mov
mov
push
jecxz
sub
cmpsb
mov
pop
bound
out
mov
jne
mov
xchg
cld
in
mov
and
push
int
aas
lcall
lcall
cmp
repz
fsubrp
scas
aas
gs
jge
out
mov
jae
imul
test
pop
push
mov
xor
lcall
test
adc
cmpsl
push
cmp
jle
pop
cmp
cmp
inc
add
inc
mov
lock
lcall
aas
push
jl
scas
and
push
loopne
loope
inc
into
std
clc
mov
mov
jbe
popf
in
mov
cmp
loope
idivl
sarb
nop
adc
xor
sahf
ljmp
fcmovb
sub
sysenter
push
fistps
push
jg
lahf
xchg
mov
pop
scas
sahf
and
dec
jge
pop
pop
call
fcmovnb
mov
into
addr16
mov
xchg
sbb
inc
insb
cmp
out
jle
movsl
loop
xchg
jmp
inc
and
sbb
jge
mov
mov
jae
repnz
mov
xchg
mov
ss
ss
dec
lcall
call
das
bound
cmp
or
mov
aas
mov
dec
faddp
repz
jne
loopne
negb
nop
lret
pop
movsl
jnp,pt
shrb
nop
out
mov
adc
bound
xchg
mov
push
mov
aad
xchg
out
mov
lods
fisubs
or
sarb
lea
jbe
jmp
mov
pushf
mov
push
mov
insb
imul
addl
rcrb
push
mov
dec
jl
repnz
cmp
call
mov
sub
xor
mov
aad
fnstcw
popf
fs
lahf
xchg
inc
fadd
jb
sub
cmp
ret
int
mov
movsl
pop
jno
stos
mov
movsb
movsb
xor
sbb
mov
iret
cmp
rolb
sbb
sbb
mov
mov
scas
push
mov
pop
dec
ds
scas
ds
inc
ret
faddl
inc
or
mov
sub
aaa
mov
lcall
in
dec
pusha
icebp
pop
pop
divb
mov
dec
test
enter
in
jne
fcoms
jecxz
xchg
in
pop
mov
push
pushf
push
pop
lahf
sub
in
ss
ficompl
or
lret
ficomps
stos
dec
cli
jp
mov
pop
insb
sub
addb
pusha
pop
push
inc
sub
mov
mov
imul
mov
pushf
xor
js
shrl
push
xchg
rol
add
gs
call
lahf
lods
bnd
pop
adc
bound
sarl
push
jmp
test
ljmp
dec
jp
cmp
das
cmp
lret
add
imul
cmpsl
push
lods
xchg
mov
aad
adc
fistl
dec
fisubrs
or
or
repz
mov
lcall
mov
aam
mulb
mov
lods
aaa
data16
mov
je
pusha
mov
in
or
imul
inc
xor
push
adc
lods
mov
sarb
xchg
test
repz
out
add
xor
out
repz
pop
sahf
adc
jp
mov
or
fstps
pusha
cmp
xchg
xor
push
jb
imul
into
in
cmp
jg
sbb
pop
pop
aaa
xchg
ret
mul
fisubrl
mov
and
leave
jmp
flds
in
jge
adc
popa
and
testb
pop
sub
repz
sbb
jle
popf
mov
jb
aaa
jo
mov
xchg
or
sub
scas
mov
outsl
mov
lods
cmc
mov
stos
push
xlat
leave
mov
or
lahf
fwait
jns
inc
hlt
dec
scas
inc
fstpl
in
repnz
sub
xchg
sub
mov
pop
push
jne
shrl
adc
rcr
sub
pushf
xor
adc
add
cmp
sbb
mov
adc
decb
pop
add
adc
das
xchg
fcomps
pop
aad
sbb
pop
test
in
rcrb
lock
fmul
jne
cmp
jecxz
test
inc
cltd
es
xor
cs
rcrl
orw
dec
ljmp
push
testl
mov
jg
mov
sahf
lods
adc
push
sbb
jp
jbe
mov
add
mov
hlt
add
xor
lods
test
jbe
inc
sbb
mov
dec
shr
in
push
stos
movsb
or
test
inc
outsl
stos
adc
mov
cmp
pop
pop
mov
popf
cmp
test
pop
pop
sub
sbb
sbb
dec
aaa
sub
addr16
setne
mov
call
pop
pop
xchg
mov
push
movsb
insl
popa
aaa
in
dec
js
cmp
and
jo
dec
and
push
lret
mov
clc
cld
movsl
xor
int3
and
jne
pop
shrb
aam
das
int3
fisttpll
out
sti
inc
out
lds
lret
xchg
lock
loopne
in
mov
inc
and
rol
inc
dec
in
cmpsb
lock
cld
and
popa
inc
ret
mov
test
push
fldcw
mov
js
aaa
nop
fs
push
sbb
push
dec
icebp
sub
push
dec
jle
xorl
arpl
aam
inc
test
adc
shrl
shll
jl
repz
and
cmpsl
popa
adc
in
popf
and
test
loope
jle
out
test
or
add
cmp
test
sbb
mov
adc
je
xchg
test
pop
mull
addr16
mov
imul
sub
mov
cltd
adc
fwait
dec
js
cmp
lahf
add
mov
push
jecxz
in
fistps
push
push
nop
mov
aaa
fcomip
jns
scas
ljmp
cs
lock
cmp
insl
jg
mov
subb
mov
inc
out
inc
dec
jecxz
push
icebp
inc
xchg
lods
dec
sub
fisttps
imul
jg
mov
fs
mov
int3
nop
sbb
insb
in
inc
pop
dec
lea
or
xorl
mov
pushf
gs
sti
dec
adc
std
negb
dec
dec
repz
testl
addr16
sbb
mov
fs
lahf
loopne
out
lock
mov
rolb
cs
dec
dec
adc
aad
pusha
add
mov
popf
xchg
insl
jg
iret
xor
or
int3
push
add
sbb
daa
pop
testl
mov
popa
cmp
pop
cmc
test
fs
dec
dec
in
jno
mov
xor
sbb
gs
jbe
mov
hlt
or
test
sti
add
xor
pushf
inc
xchg
je
inc
int3
add
cmp
call
js
loope
fsubs
push
into
xchg
fnstenv
jno
push
xor
add
cmp
jo
mov
mov
insl
jge
sub
movsl
movlps
jp
sbb
mov
xchg
sarl
fs
sbb
jmp
loop
sub
xchg
or
lahf
out
sub
pop
repnz
insl
inc
jl
daa
les
xchg
xor
pop
inc
cmp
xchg
pop
lea
mov
nop
xchg
mov
and
mov
cmpsl
movsb
mov
rcrb
in
dec
dec
fs
repz
inc
or
clc
enter
into
add
add
test
xchg
js
or
mov
mov
in
in
mov
and
jp
das
int3
sub
cmpsb
xor
xchg
in
or
mov
jae
stc
test
ret
push
sbb
in
adc
movsb
mov
cltd
sbb
cmpsl
xchg
or
sub
repz
dec
inc
call
cmp
mov
shrb
lods
pop
aas
stos
hlt
dec
loop
rcl
xlat
sub
push
cmp
sbb
push
fbld
mov
adc
arpl
loop
adc
int
shll
xchg
and
and
jb
sub
addr16
dec
adc
in
ljmp
pop
movsb
adc
xor
push
stos
inc
or
push
dec
test
or
pusha
mov
call
pop
xchg
push
ficompl
sub
frstpm(287
repz
clc
int
adc
or
pop
pushf
pop
mov
push
mov
test
imul
movsb
movsl
mov
dec
sti
in
push
movsb
daa
ficoms
add
sbb
repnz
repnz
in
mov
out
sbb
loop
inc
push
sbb
in
les
arpl
mov
or
call
sahf
es
cmp
aaa
mov
imul
int
xor
repz
push
movsl
shrb
repnz
jl
mov
loop
or
leave
notb
jnp
testb
or
lcall
stos
xorb
adc
int3
loopne
xchg
fiaddl
sub
testl
and
dec
inc
add
xchg
icebp
mov
add
movsb
xor
mov
jo
add
push
test
nop
and
push
lcall
enter
jecxz
in
lahf
sbb
sbb
xchg
cltd
sbb
test
mov
push
push
cld
sub
or
cmpb
cmp
test
mov
mov
aaa
pushf
push
out
pop
jg
push
int3
mov
sarw
and
cmp
jl
out
xor
xlat
iret
sbb
stos
decb
ss
jl
cmp
ljmp
xchg
addr16
pop
loope
je
inc
jnp
mov
repz
mov
cmp
jmp
daa
pop
mov
and
mov
mov
mov
mov
push
test
popf
dec
xlat
adc
and
sbb
inc
decl
rep
cmc
dec
xor
push
scas
mov
xchg
into
outsb
jge
cs
icebp
fistps
and
mov
cmp
push
fnstsw
dec
aaa
or
adc
jo
ss
mov
mov
mov
imul
jb
mov
clc
int3
pop
inc
test
cmp
sub
xchg
nop
push
testb
pop
mov
add
das
gs
aaa
in
add
mov
fcoms
das
push
fninit
push
test
test
or
ja
sub
mov
bound
call
pop
in
das
jb
iret
mov
insl
rcrb
push
and
sahf
mov
mov
ret
jne
cs
outsb
pop
sar
cmpsl
jmp
xor
pop
roll
scas
std
testb
popa
inc
xchg
movsb
cltd
aas
shl
nop
ret
popf
lahf
in
iret
loop
das
pop
inc
add
outsl
lea
repnz
stos
fimuls
adc
jno
and
fsubrl
cld
add
je
add
fcmovne
setns
push
fwait
loope
lcall
addb
std
dec
xor
inc
lea
dec
outsb
xor
shrl
das
ficoml
mov
jae
adc
mov
push
mov
mov
lret
jmp
ljmp
push
mov
mov
mov
rorl
mov
sbb
out
into
lahf
test
xchg
xacquire
sub
addr16
scas
iret
cmp
mov
or
dec
sub
jle
insb
add
insb
jmp
aas
cs
int
pop
int
mov
xlat
push
rolb
jge
push
imul
xor
bound
inc
lods
jb
dec
and
add
adcb
lds
mov
jl
lahf
jne
push
mov
lods
mov
test
test
es
movsl
mov
dec
cltd
in
pusha
sbb
inc
push
adc
repnz
loope
lret
xlat
les
loop
adc
push
in
pop
cmp
sub
iret
mov
sub
add
or
ja
lds
xchg
xchg
out
je
lret
aas
xchg
xlat
cmpsb
or
xlat
repnz
pop
int
lods
ds
sti
jno
sti
loope
aad
mov
dec
fsubp
adcl
stos
push
push
or
enter
sbb
fwait
pop
ret
ljmp
daa
cld
fisubs
xlat
lds
scas
mov
aam
iret
adc
fwait
mov
mov
fldl
clc
sahf
mov
xor
nop
lahf
mov
cmc
test
out
enter
push
jmp
jge
xchg
and
nop
push
lock
movsl
out
mov
sbb
mov
cmc
jnp
pop
jecxz
xor
push
es
sbb
js
movsl
pop
stos
je
fbstp
aam
enter
dec
xchg
adc
rclb
loopne
xor
mov
and
mov
std
jnp
je
and
sub
in
mov
mov
outsl
rcll
into
sub
sarb
mov
inc
fstpt
sub
dec
jg
xchg
adc
mov
add
popf
shlb
inc
xor
js
lock
mov
fdivrl
mov
inc
les
sahf
or
andb
scas
stos
add
mov
add
inc
jno
je
lahf
xchg
cltd
cmp
push
imull
and
push
push
ficoml
xchg
out
xor
push
and
lret
inc
xchg
fstl
dec
push
test
imulb
adcl
or
xchg
outsl
inc
into
xchg
xor
outsl
mov
or
pushf
xor
dec
push
or
fmulp
push
dec
mov
xchg
and
lret
nop
push
mov
cs
clc
push
movsb
inc
mov
std
stos
sbb
lds
xor
pop
and
int3
jg
adc
sbbb
pop
cwtl
loop
faddl
jnp
or
push
and
add
xor
icebp
jecxz
popl
fisubrl
outsl
mov
rorl
sti
sub
jle
push
cmp
imul
jl
mov
fsub
pop
iret
stos
cltd
rorl
hlt
and
xorb
or
sbb
imul
sub
popf
mov
sub
sbb
test
jae
pop
data16
xchg
adc
jl
mov
mov
jg
xor
in
fistl
pop
sahf
scas
ret
jbe
sbb
aas
in
xlat
dec
dec
pop
pop
out
imul
mov
jecxz
jle
mov
adc
ds
xor
in
pop
mov
adc
mov
push
scas
loope
pop
dec
mov
out
dec
lcall
cmp
mov
stc
je
jmp
rcll
dec
sub
mov
sub
in
arpl
push
fildll
fiadds
jns
xchg
adc
int3
or
lahf
xor
cmp
sahf
add
xchg
xchg
je
test
test
rol
pusha
fnsave
push
push
mov
mov
test
xchg
push
mov
insl
in
mov
add
push
aaa
es
mov
mov
and
sub
jp
lods
mov
xchg
jg
push
mov
sub
lods
add
add
jo
xchg
mov
stos
mov
xchg
inc
pop
cmpsb
cltd
xchg
mov
cmpsl
gs
cs
push
int
pop
pop
pushl
shrl
cmp
arpl
inc
dec
lahf
imul
mov
movsb
cmp
aas
pop
or
cmp
into
repnz
stc
iret
sti
xchg
js
stc
add
push
jle
dec
jle
lcall
sti
xchg
push
push
out
popa
repz
out
cmp
popa
es
insl
bound
push
frstor
and
fsts
ja
pop
cmpsb
ficoms
dec
leave
fidivrl
pop
repz
xor
pop
outsb
in
test
xor
inc
adc
jp
pushf
sub
push
sahf
in
mov
stos
jmp
loop
addl
mov
mov
and
sub
lret
jnp
cwtl
sahf
cmc
xchg
add
stc
cld
nop
loopne
xchg
push
xor
xchg
cld
clc
insb
mov
dec
imul
push
cmp
mov
xor
hlt
stc
in
div
in
jp
jmp
daa
add
cltd
out
cs
cmp
fwait
adc
pop
push
aas
inc
dec
mov
mov
xorb
push
pop
mov
imul
out
sub
out
repnz
inc
mov
pop
subb
inc
fdivl
mov
jecxz
push
fsubl
insl
pop
rcl
sahf
roll
sbb
scas
pop
cmp
stos
jmp
sub
add
sbb
arpl
les
dec
jno
imul
cmpl
cmp
pushf
sbb
mov
shlb
jp
hlt
push
shlw
leave
inc
push
stc
jns
std
mov
andl
adc
test
cmp
repnz
cmp
rol
lock
jecxz
dec
stc
out
jg
sbb
pushw
adc
add
aam
out
es
loop
imul
fbstp
adc
std
jl
cli
mov
add
iret
xor
scas
pusha
rep
cmc
pextrw
scas
jmp
mov
cmc
aam
addr16
fsubrp
imul
push
pop
sub
imul
lea
push
fistpl
cltd
in
in
rol
stc
push
push
push
outsb
lcall
lods
sub
xchg
lret
adc
mov
test
aaa
pop
fdivrs
mov
mov
mov
inc
push
jne
popa
test
or
iret
and
xchg
aad
inc
dec
mov
sbb
push
dec
inc
and
xchg
mov
dec
pop
sub
jge
xchg
lret
out
addr16
movsb
mov
ja
dec
add
repz
fs
pop
stc
xchg
fnstcw
mov
adc
ss
push
lret
jbe
movsl
adc
jmp
xlat
int
inc
push
push
ja
jno
enter
or
cld
icebp
sub
add
adc
inc
sti
outsl
sbbl
pop
adc
mov
cmp
les
mov
inc
adc
jecxz
rolb
cmc
cmpsb
mov
in
xchg
ljmp
sti
pushf
cwtl
cs
dec
je
pop
inc
rcrb
and
inc
iret
push
sub
mov
fiadds
gs
ret
push
pushf
mov
push
jg
lcall
ss
das
fdivl
insl
dec
dec
test
pop
stos
icebp
xor
pop
je
mov
dec
jae
cmpsl
ret
div
pop
xor
repnz
mov
mov
out
mov
ja
fdivp
xor
jbe
ds
pop
imull
mov
mov
dec
hlt
jns
or
adc
rcll
jmp
imul
cmpsb
sub
imul
enter
faddp
and
push
fisubrs
ds
ret
or
outsl
xor
sti
inc
cwtl
js
mov
cmc
mov
mov
jmp
mov
mov
cltd
xchg
sub
dec
adc
lods
es
dec
mov
test
sub
jo
loopne
sti
xchg
mov
push
xchg
pop
mov
aam
mov
lock
xor
lds
fwait
push
repz
cmp
insl
jecxz
pop
cmc
aam
arpl
push
inc
lock
repnz
imul
and
jo
enter
push
add
mov
mov
xchg
sub
lret
jb
adc
push
popa
imul
and
dec
in
lods
jecxz
or
je
xchg
dec
rcrb
insl
sub
or
cmp
sahf
push
cmpsl
stos
inc
mov
jno
push
cmp
mov
das
and
movsl
lods
cmc
cmpsb
rcll
fldt
bound
fldcw
outsl
sbb
data16
movsl
mov
push
xor
cmp
out
leave
dec
push
ficoml
int
xchg
xchg
repz
adc
outsl
pop
das
inc
mov
pop
mov
jmp
stc
js
fisubs
cmp
enter
std
ljmp
test
sub
mov
sahf
fwait
dec
dec
xchg
dec
ja
je
daa
lret
popl
test
aam
pop
enter
mov
mov
jle
pusha
imul
and
test
xlat
jb
pop
inc
cmpsb
pop
pop
lods
jb
xchg
mov
add
imul
int
out
fstpt
jp
adc
data16
mov
mov
shlb
loop
pop
iretw
sbb
rolb
je
xchg
mov
mov
dec
imul
adc
sbb
inc
inc
pushf
loop
jle
jecxz
sub
ljmp
movsl
pop
inc
dec
inc
daa
movsl
xchg
push
packssdw
dec
xchg
push
sahf
inc
and
inc
and
daa
mov
icebp
aam
mov
cmp
imul
rclb
mov
xor
mov
daa
shl
pop
push
aas
or
dec
lret
xchg
aas
dec
roll
aad
loope
fiadds
dec
fwait
test
nop
add
mov
push
outsl
sarl
les
or
in
mov
jecxz
sub
jp
iret
mov
testb
jb
jae
ja
adc
push
ljmp
idiv
inc
and
push
sbb
pop
or
sbb
lea
mov
popa
inc
sub
mov
mov
jg
inc
cmp
cmp
fisttps
dec
sbb
lret
fs
adc
fnsave
int
stc
fldcw
sahf
in
jle
pop
into
loopne
inc
push
cltd
ds
std
mov
pop
mull
or
flds
push
int3
jge
and
xchg
or
ficoms
and
dec
addb
lcall
ja
sub
and
pop
movsb
push
movaps
cmpsb
sbb
iret
fwait
arpl
shr
iret
jno
ficoms
test
jmp
mov
push
aas
sbb
mov
push
mov
and
mov
cmp
add
je
out
or
mov
rcrb
lods
addr16
fisubrs
jg
xlat
sbb
das
loope
movsl
inc
popf
movsb
push
mov
test
cmpb
and
push
shrb
loope
push
lcall
dec
push
fisttpll
sub
xchg
cmp
fiaddl
sbb
stc
xchg
arpl
sti
repnz
add
cmp
test
push
lds
jbe
push
sub
loop
std
pushf
int
dec
data16
cmpsl
lret
jo
out
imul
xor
hlt
adc
and
jne
push
dec
fnstenv
mov
stos
push
push
ss
lds
inc
cmp
out
jbe
jg
imul
inc
mov
xchg
shrl
and
dec
jae
mov
dec
mull
sbb
adc
adc
or
rcrb
xor
lret
xor
leave
inc
psubsb
sbb
add
cmp
xor
jl
test
jle
test
out
cmpsl
mov
das
push
call
xchg
ljmp
dec
mov
push
lret
mov
out
mov
inc
mov
arpl
rol
mov
mov
outsb
mov
jg
or
loop
out
loopne
dec
clc
pop
cmp
mov
xchg
push
mov
adc
and
pop
fmul
mov
out
dec
sub
mov
xchg
mov
sub
out
rol
and
xor
add
mov
push
repnz
sbb
mov
test
hlt
adc
test
mov
adc
xchg
adc
xor
mov
jle,pn
push
mov
dec
inc
cmp
imul
fstpt
loope
mov
aaa
testl
xlat
mov
adc
loop
mov
mov
cltd
jns
push
scas
cmp
and
lcall
sbb
and
insb
cld
dec
mov
sbb
jb
push
ss
add
mov
sub
or
pop
lahf
push
jg
pop
stos
test
sbb
les
push
mov
icebp
ret
add
arpl
fidivl
pop
push
xchg
or
jg
fwait
inc
xchg
shr
cmp
add
sbb
lahf
mov
divl
mov
adc
cmp
lret
fistpll
adc
rclb
lahf
imul
lods
notl
pop
pushf
out
sbb
mov
bound
stc
push
movl
in
sub
imul
jle
jg
iret
test
nop
sub
xchg
push
hlt
xor
jne
cmp
mov
mov
adcb
add
sarb
iret
sub
cmp
ret
je
testl
shl
mov
cmp
das
ficoms
rol
lcall
std
into
jno
add
cli
outsl
sub
int
or
cmp
add
stos
pop
dec
push
sub
ja
inc
data16
movsb
and
inc
jns
sbb
pop
clc
push
push
cmpsb
add
jl
addb
pushf
pop
dec
int3
inc
adcl
pop
sbb
cmp
xchg
sbb
ffreep
push
jo
test
fs
jbe
mov
mov
aad
or
sub
add
pop
in
sub
adc
icebp
gs
invd
cmpsl
loop
sub
cmp
test
lret
pop
push
ss
cmp
pushf
pop
add
shl
cmp
xor
adc
mov
adc
test
cmpsb
or
clc
jmp
outsl
es
mov
test
sahf
adc
adc
mov
mov
jmp
lahf
dec
scas
xchg
sub
dec
push
sbbl
in
lods
sub
push
dec
in
repz
xor
inc
mov
aas
mov
int
repz
cltd
jmp
mov
xor
xchg
sbb
or
mov
push
not
mov
and
or
sbb
sub
cmp
sbb
insb
mov
shlb
adc
mov
pop
popf
add
ffreep
stos
rcll
ret
fwait
xchg
cmp
jnp
rep
pop
push
push
adc
jp
pushf
mov
inc
adc
dec
loop
push
mov
clc
sbb
mov
les
sub
xchg
cmp
sub
cmp
out
sbb
data16
adc
mov
aad
pop
xchg
and
mov
imul
jle
or
push
gs
mov
insl
lret
outsl
jns
lods
mov
add
int
push
nop
mov
add
dec
xchg
jecxz
mov
push
in
mov
imulb
xchg
lcall
pop
and
aam
jecxz
pop
and
push
sbb
gs
mov
orb
jmp
mov
cli
sbb
jmp
mov
sbb
call
test
mov
mov
pop
repz
add
jl
and
arpl
aam
sbb
gs
in
pop
xchg
sub
das
sbb
jge
pop
dec
inc
aaa
jae
xor
mov
xchg
lret
cmova
cmp
dec
pop
xor
sbb
in
xchg
sarl
mov
cmc
lahf
inc
pop
sub
push
pop
and
cwtl
xorl
cwtl
into
xor
ret
out
push
call
dec
ds
add
mov
xor
cmp
sub
in
mov
jbe
and
sahf
sti
mov
in
popf
rorl
jb
mov
mov
or
pop
in
and
xchg
les
or
inc
sbb
test
loop
outsl
call
add
xorl
inc
cwtl
jecxz
ljmp
sub
sbb
jmp
jmp
xchg
inc
and
mov
push
fwait
xchg
hlt
mov
nop
out
push
subl
pop
dec
cld
xchg
test
mov
xchg
ret
std
je
hlt
dec
cmpsl
lret
mov
cld
push
shl
xor
xchg
push
aam
notl
movsl
push
push
push
imul
jge
or
xchg
insb
pop
cmc
stos
push
outsb
outsb
sbb
fadd
mov
lcall
fmul
sub
and
jno
xor
xchg
add
jb
lret
je
idivb
fs
inc
fidivrl
out
sub
push
sbbb
mov
jne
popf
add
pop
mov
je
cmpsb
inc
aad
lods
and
push
std
lret
nop
inc
daa
mov
fucomp
ja
jl
sti
add
hlt
adc
inc
xchg
add
inc
js
add
jl
shlb
hlt
mov
fwait
movsl
and
pop
pop
xchg
cltd
rcrb
nop
shrl
test
cltd
dec
ret
mov
mov
push
sahf
bound
push
xor
mov
ret
dec
inc
je
cmp
xor
mov
aas
je
rcr
xlat
out
sub
outsb
xor
out
sub
inc
xchg
xchg
sub
cmp
pop
lds
mov
mov
int3
push
and
cltd
lahf
aas
push
out
mov
enter
out
dec
out
int3
cmp
imul
adc
lods
scas
dec
inc
dec
sahf
addl
push
pop
add
inc
xlat
mov
mov
in
sub
jmp
mov
cmp
stos
jb
fisttps
cmpsl
mov
push
jno
ret
loope
lods
cmp
mov
mov
out
xor
pop
cld
lcall
push
dec
lods
xlat
test
cmp
sbbb
dec
fcomip
jmp
sahf
insb
mov
xor
lcall
xchg
mov
push
inc
add
out
arpl
pop
push
icebp
dec
ret
int
int3
inc
jo
lds
xor
push
fisubrs
pop
mov
add
repz
repnz
or
sub
int3
sbb
ljmp
int
insb
sbb
cwtl
or
and
lret
rcrb
push
jo
xchg
cmpl
mov
jecxz
xchg
pop
mov
mov
sub
mov
and
ret
and
adc
iret
mov
jg
ret
pusha
jge
out
hlt
xchg
fdivrs
xlat
sarl
lret
mov
data16
shlb
sub
shll
ja
ss
push
inc
das
insb
bound
add
xchg
mov
adc
addl
das
test
pop
leave
add
mov
outsb
pusha
loop
inc
out
mov
cmp
cli
push
imul
xchg
inc
adc
test
inc
es
cwtl
push
push
call
mov
adc
lret
fistps
iret
adc
sbb
scas
jg
add
mov
test
vsubps
stos
sub
mov
cmp
jae
jp
scas
jbe
aad
sahf
jmp
out
add
xchg
jmp
pop
inc
mov
in
cmp
or
add
aad
jns
mov
lds
mov
stos
push
cmpl
pop
mov
xor
add
ds
lahf
mov
movsb
and
sub
xchg
mov
ss
pop
xchg
repz
mov
mov
imul
test
sbb
dec
push
or
inc
test
cmpsl
xlat
ds
push
fwait
add
bound
fcomp
sub
xchg
mov
pop
xor
xchg
fisubl
popf
sbb
out
cmc
mov
pop
push
fsubrs
jle
mov
push
insl
add
in
ds
sub
dec
loopne
ret
sub
stc
jbe
push
sbb
and
dec
xchg
mov
imull
xorb
xchg
sub
xchg
mov
dec
shrl
mov
out
lahf
jmp
sub
jle
inc
dec
adc
jne
dec
das
mov
mov
aaa
mov
inc
lahf
jmp
negl
mov
cmp
das
fs
cltd
cwtl
pop
mov
cmc
popf
pushf
gs
shl
fs
fnstenv
int3
sbb
and
daa
or
pop
mov
testb
out
xor
adc
add
xor
aas
sub
jmp
mov
lods
xchg
movsb
cwtl
loopne
enter
inc
cmpsl
daa
inc
lahf
loop
scas
pop
in
dec
push
call
lahf
cli
test
fcmovb
mov
inc
fnstcw
or
push
ds
mov
mov
push
je
pop
orb
mov
mov
push
sub
into
movsb
mov
mov
xchg
xlat
mov
ds
mov
fsubr
lds
sarb
jno
and
sub
xchg
stos
shll
mov
ret
int
and
negl
fsubl
test
adc
sti
xchg
dec
mov
sub
mov
xchg
loopne
pop
jo
adc
sar
or
push
test
lock
stos
ljmp
rclb
push
inc
mov
lock
aas
lcall
adc
mov
and
jl
mov
movl
jo
inc
sub
out
or
lret
cld
adc
sub
int
xorl
out
fnstcw
and
dec
popa
pop
and
sbb
sub
sbb
sbb
ret
mov
mov
cli
rclb
sti
fdivl
jle
mov
adc
lods
push
jmp
push
mov
shrl
aam
dec
cmp
adc
fwait
cld
test
sbb
sbb
lds
dec
cmp
push
mov
and
xchg
sub
or
cmp
mov
fs
imul
adc
lock
jmp
add
sub
mov
push
sub
inc
pop
imul
fstpt
in
cwtl
and
jns
fstpl
in
scas
pop
adc
cmp
sbb
lret
into
mov
dec
add
aad
repnz
dec
into
sub
loope
jmp
fwait
mov
fnstenv
push
dec
movsl
test
and
cmp
or
arpl
in
test
mov
xchg
movsb
xchg
out
stc
inc
pop
iret
xor
dec
jns
jl
sbb
jo
push
xchg
lcall
mov
xchg
and
push
fucomi
jmp
mov
mov
adc
jae
push
mov
gs
mov
xlat
pop
cmpsb
mov
or
leave
into
ret
aas
pop
lock
cmpsb
test
in
sbb
xlat
xchg
pop
cli
mov
movsl
ljmp
repz
ds
dec
mov
inc
sbb
mov
dec
cmovge
cmpsl
xchg
daa
mov
add
out
hlt
pop
arpl
and
xor
pop
cmp
adc
pop
lret
jb
mov
mov
outsl
mov
data16
clc
in
mov
sub
fldt
lods
or
inc
sbb
xor
popa
fistl
pop
adcb
daa
push
sbb
bound
icebp
sbb
clc
push
sbb
mov
les
xchg
repnz
enter
mull
inc
sub
mov
sbb
sub
cmc
or
mov
sbb
stos
sbb
mov
jmp
shll
mov
out
push
lock
cmp
and
or
xchg
lahf
and
cmpsl
fsubr
xchg
xchg
pushf
sbb
stos
jns
cmpsb
loope
dec
and
stos
sar
sbb
movsl
adc
xor
xchg
mov
test
les
adc
and
repz
iret
scas
cmpsl
subl
sub
mov
inc
rorl
mov
pop
mov
xor
test
mov
pop
lret
and
hlt
or
adc
jp
sub
jl
jb
out
mov
movb
push
dec
inc
xchg
fisttpl
xchg
insl
daa
dec
jae,pt
push
push
mov
nop
mov
inc
fmul
sbb
dec
aaa
inc
out
lock
in
or
xchg
inc
jmp
clc
or
pop
movsl
out
fs
nop
repz
cmp
inc
pop
ret
clc
sub
xchg
in
xor
dec
mov
rcrb
cwtl
inc
jmp
daa
push
test
cmpsb
dec
sbb
cld
push
repnz
sbb
aaa
cmpsb
stos
int
xchg
into
orl
sub
add
push
lock
inc
icebp
ss
adc
lret
nop
cld
mov
push
dec
aam
sub
fistpll
xlat
cmp
mov
nop
jge
cvtps2pd
mov
add
test
xor
mov
push
sbb
cmp
mov
sbb
sub
icebp
jge
push
lret
pop
aaa
shll
push
xchg
push
aaa
xchg
in
lret
inc
loop
adcb
out
test
es
mov
cld
xchg
sub
xchg
orb
int3
cmp
ja
jle
sbb
das
push
push
and
fs
stc
and
xor
lods
movsl
pop
sbb
pop
dec
sahf
into
iret
push
pop
aam
mov
xchg
push
fcmovnb
fs
addr16
stc
xchg
loop
das
lahf
imul
mov
cmp
dec
cmp
xor
scas
jae
add
mov
outsl
xchg
push
rcrl
cmp
out
xchg
cli
imul
into
adc
lret
pop
mov
pusha
jmp
addr16
mov
gs
outsl
mov
xor
scas
pop
pop
mov
lds
ljmp
jno
push
xor
xchg
faddl
cmp
stos
push
subb
xchg
push
xchg
mov
jns
dec
pusha
and
jmp
inc
imul
jbe
and
dec
pop
cmp
cmp
enter
mov
mov
mov
into
test
cmp
cwtl
lret
enter
push
enter
pop
inc
into
sti
enter
sub
push
sbb
pop
mov
cmp
test
enter
sub
lods
popa
xchg
pop
je
mov
ljmp
or
popa
mov
js
or
repz
addr16
scas
or
xor
notb
sarb
test
adc
push
loop
sar
in
stc
ret
add
in
xchg
repz
out
dec
cli
and
cmp
fisubrs
dec
outsb
ljmp
adc
cs
push
sub
jae
xchg
in
add
stos
push
in
hlt
fnstsw
xchg
gs
pop
mov
popfw
mov
bnd
js
jbe
xchg
ljmp
add
insb
out
fnstcw
jo,pn
loop
stos
movsb
cli
hlt
call
jl
daa
xor
sarb
fwait
cmp
inc
call
xor
add
add
pop
sbb
mov
push
cvtdq2ps
repz
add
lret
outsl
push
xor
inc
loope
scas
add
pushf
dec
pop
test
or
repnz
es
aam
popa
adc
dec
and
mov
mov
fisubs
aas
in
sbb
xchg
mulb
movsb
sbb
inc
add
and
or
adc
iret
repnz
push
jl
and
push
ret
cmpsb
repnz
adc
out
pushw
cli
mov
push
mov
aad
sub
dec
add
idivb
lea
or
lahf
test
call
decb
ja
in
push
xchg
filds
mov
movsl
sub
cmc
push
ljmp
test
popa
or
adc
fcomps
enter
lcall
shrl
fsubr
ret
add
jg
or
pop
fdivrl
lcall
inc
mov
add
sti
dec
clc
lods
fwait
lret
scas
pop
adc
jmp
aaa
dec
mov
sbb
imul
push
test
and
mov
or
jne
push
mov
int
mov
adc
pop
es
dec
pop
int3
sub
movsl
adc
call
sub
push
test
nop
push
outsb
mov
mov
pop
mov
movsb
and
pop
xchg
imul
fwait
cmp
dec
test
push
push
fisttpll
ja
test
jecxz
icebp
movsb
loope
mov
cltd
push
icebp
lcall
iret
inc
iret
add
pop
call
mov
ds
mov
insb
pop
xlat
push
lea
dec
call
test
mov
mov
mov
xchg
add
dec
sub
pop
addr16
es
aad
ljmp
add
int
add
dec
push
push
push
jmp
dec
into
push
or
inc
test
push
or
pop
mov
fs
loopne
fnstcw
ljmp
jl
push
cmp
add
add
lcall
adc
dec
int
mov
mov
pop
adc
decb
sbb
and
add
jbe
mov
mov
bound
cmp
hlt
dec
inc
jno
mov
call
add
xchg
mov
int
push
add
pop
adc
sub
adcb
cmp
add
je
stos
clc
mov
mov
lds
jb
sar
ret
mov
in
jl
mov
rol
pop
inc
push
test
das
shl
xor
nop
mov
test
icebp
icebp
loope
mov
mov
xor
clc
sti
les
sbb
pop
imul
ret
test
push
xchg
xchg
repz
mov
sub
jmp
stc
jbe
mov
cld
mov
hlt
push
mov
cmp
cmp
and
icebp
jg
mov
inc
rorl
push
lret
push
inc
dec
les
jb
pop
aas
adc
loope
sbb
adc
cmp
mov
mov
and
mov
and
and
lock
xchg
dec
std
adc
aas
adc
or
int3
mov
fistps
fwait
push
mov
sbb
loope
negl
stos
in
scas
out
mov
push
xchg
addr16
sbb
lahf
mov
jmp
mov
add
clc
xchg
adcl
aam
cmpsl
out
lock
sub
ja
push
js
sbb
repz
lods
stos
andb
mov
addb
cmp
xchg
jge
pop
sbb
sahf
out
cs
ror
ss
jge
push
clc
adcl
icebp
mov
dec
or
mulb
pop
sbb
cltd
mov
xor
cwtl
aaa
push
jne
sub
fisubrl
cli
out
fptan
mov
or
outsb
repnz
jnp
xor
and
lds
bound
das
cs
repz
inc
jg
test
imul
cmpsb
mull
xor
and
and
or
jecxz
lret
inc
lret
mov
int
into
ret
test
add
enter
push
and
xchg
or
sbb
in
shrl
push
cmp
sbb
add
ficoms
loope
and
cs
jae
xchg
inc
pop
jnp
jp
mov
stos
sbb
lds
in
and
jp
mov
push
adc
adc
push
js
pop
xchg
sub
movsb
and
mov
mov
push
push
adc
nop
icebp
test
ret
add
or
mov
pop
xchg
jae
aam
sbb
shlb
loopne
xchg
icebp
pop
imul
enter
movl
popf
mov
das
inc
cmc
xor
push
sbb
ret
sbb
cld
and
sbb
adc
fldenv
sbb
mov
mov
mov
push
mov
jg
inc
shll
mov
adc
cltd
xor
loopne
loop
fndisi(8087
into
mov
xchg
mov
mov
and
mov
lds
rcr
adc
aas
add
pop
lods
pop
xchg
in
rolb
enter
fimull
ss
mov
push
imul
add
adc
mov
lods
sbb
faddl
cmp
lret
jl
sbb
pop
mov
push
movsb
cmp
sub
dec
jmp
icebp
xor
xchg
test
rcr
jns
sub
xor
aad
shll
ror
sub
mov
lcall
clc
iret
xchg
add
sub
fists
or
ret
orb
jle
inc
call
and
in
xor
mov
push
inc
shll
jmp
out
mov
and
cmpsb
dec
and
aaa
pop
fcomps
mov
fwait
or
popf
adc
xor
mov
xor
testb
sub
repz
add
mov
test
push
shr
sbb
xchg
dec
mov
daa
icebp
popa
das
in
mov
aaa
in
imul
es
ja
inc
push
stos
pop
stc
jns
lods
add
jnp
hlt
push
lret
test
dec
and
dec
loope
dec
mov
std
out
push
dec
roll
mov
ret
mov
into
outsb
ljmp
push
cltd
or
js
xchg
pop
cmp
gs
sub
cmpsb
loopne
cmp
pop
cmc
xor
pop
add
adc
push
mov
dec
sbb
mov
cmc
test
adc
sbb
aad
rolb
ljmp
pop
fsubrl
inc
cmp
sub
sbb
pinsrw
repz
aad
fisubs
mov
jnp
ss
xchg
fs
in
cmp
sub
cwtl
in
inc
ja
mov
sbb
push
fwait
mov
fs
lcall
pop
sahf
pmullw
and
dec
pop
jp
inc
outsb
lret
popf
mov
out
subb
fs
rcll
lods
pusha
loop
inc
les
shrb
ficomps
jo
in
gs
call
arpl
cmp
aas
stos
push
jno
cmp
sbb
lods
sbb
shll
and
leave
xchg
mov
mov
inc
xchg
incl
pop
add
inc
cmp
mov
push
popf
divl
cmpsb
mov
scas
and
mov
mov
cmp
mov
xor
stos
loop
and
cld
pop
push
mov
aaa
xor
add
xchg
jg
aam
and
cmpsl
push
dec
movl
mov
cmp
add
inc
or
sbb
popf
test
and
inc
mov
mov
in
mov
fisubl
or
popf
js
xlat
xchg
ds
bound
lret
pop
gs
xchg
ret
mov
cmpsl
hlt
mov
movsb
lret
and
mov
cmpsb
outsb
adc
cmpsl
mov
sub
jecxz
adc
cltd
notb
test
push
push
call
loopne
stc
mov
repz
mov
jbe
push
cmp
pop
rolb
data16
mov
repnz
scas
cmp
incl
pushf
mov
push
sbb
xor
ljmp
xor
scas
xor
mov
cmp
ljmp
inc
outsb
in
or
out
add
jmp
ja
cmp
popa
pop
pop
mov
adc
cmpsl
mov
rcr
cmpsl
pusha
into
dec
in
sub
sti
mov
and
outsl
arpl
xchg
jl
js
cs
andl
data16
push
xchg
inc
cmpsl
or
fcmove
clc
arpl
fisttpl
jbe
das
imul
mov
pop
mov
inc
shlb
push
mov
push
xchg
push
cwtl
pop
lds
jo
das
adc
mov
and
out
dec
sarl
or
outsb
out
das
das
jne
cmp
dec
adc
stc
inc
popf
jnp
pop
lea
xchg
popa
adc
sub
xlat
jo
xchg
cmp
cli
dec
inc
inc
js
andl
into
loopne
cmp
clc
call
pop
ja
rolb
es
inc
insl
or
xchg
sub
popf
mov
outsb
xor
cld
mov
btc
pusha
dec
imul
in
mov
pop
call
insb
cmp
sbb
add
mov
fwait
or
cwtl
ds
repnz
jecxz
in
arpl
test
jnp
mov
pop
inc
xorl
repnz
adc
movl
repz
idivl
mov
or
shll
cmp
dec
icebp
jmp
push
dec
jp
test
xchg
ja
adc
js
rcrl
xor
lock
xor
mov
sub
adc
js
call
roll
mov
sub
or
sbb
test
dec
loop
mov
mov
mov
mov
icebp
fisttpl
push
lret
std
and
test
pop
or
push
xor
xor
ret
ficoml
lods
sub
fmul
jnp
mov
bound
sbb
mov
add
dec
pop
mov
and
push
lock
aam
push
and
movsl
mov
xor
jo
pop
cmp
inc
and
roll
push
and
push
sub
adc
cmp
in
sbb
loop
xacquire
lock
cs
rolb
in
outsb
cmp
fs
xchg
adc
push
mov
dec
xchg
and
inc
cs
stos
sub
ficomps
push
mov
outsb
frstor
cmp
fisubrl
into
xchg
and
hlt
xorl
divl
xchg
add
aad
xchg
out
xchg
adc
inc
std
or
add
pop
adc
cltd
sbbl
lock
push
iret
xchg
pop
idivl
xor
int3
inc
js
adcl
lahf
jo
cmp
push
pop
xor
push
cwtl
scas
mov
inc
outsb
lea
ljmp
add
leave
repnz
loope
cwtl
rorb
ljmp
fwait
out
stos
enter
sbb
stc
movb
mov
ror
and
or
pop
mov
push
sbb
push
jecxz
sarl
imul
outsl
std
outsl
mov
sbb
lds
add
movsb
lret
fidivs
movsb
sbb
add
cmp
jp
sbb
les
xchg
rcrl
dec
lea
aas
out
imul
xchg
enter
sbb
inc
aaa
hlt
xchg
dec
inc
sub
push
mov
cli
cmp
sub
inc
out
jp
push
fcoms
xchg
rolb
add
inc
xchg
stos
addr16
dec
inc
lds
roll
push
jecxz
or
xchg
cmp
aas
jle
adc
add
push
or
sbb
push
cmpsl
xor
daa
xchg
pop
or
jge
ja
popa
pop
mov
std
scas
popf
cli
sar
lcall
pop
mov
mov
jp
push
adc
cmp
xchg
jne
pop
pushf
mov
cli
mov
aad
mov
lods
int3
mov
shll
roll
dec
push
fsubrs
and
add
push
stc
or
out
ja
outsl
push
cli
mov
mov
aad
out
or
testl
dec
jl
and
xor
dec
outsl
leave
fnstcw
jmp
mov
pop
in
stos
sbb
xchg
fcmovnu
clc
xor
lods
aaa
call
mov
test
cltd
cmc
fimull
lret
cmp
jp
dec
mov
jbe
sub
shrl
jp
mov
sub
rcll
push
add
push
popf
enter
outsb
xor
jge
mov
jg
jbe
movsl
jg
mov
adc
jle
pop
fildl
push
push
popa
lock
adcb
outsl
shll
js
and
sbb
mov
std
inc
jne
xchg
mov
imul
cmc
jmp
mov
mov
aam
mov
aaa
adc
push
out
or
xor
cmpl
xchg
mov
mov
push
inc
dec
fldl
cmp
mov
lret
in
cmp
inc
pop
push
mov
mov
mov
cld
insl
clc
push
jle
adc
adc
sub
xlat
dec
shl
dec
adc
sub
cld
sti
mov
arpl
das
and
jo
ret
inc
sbb
xor
movsl
inc
mov
addr16
jnp
mov
sbb
lcall
xor
xchg
ss
sbb
sub
or
inc
dec
sub
push
lds
sti
cld
sti
push
mov
jb
cltd
sahf
dec
push
jmp
add
xchg
mov
push
push
gs
fwait
mov
xchg
cmpsb
add
ja
or
test
popa
push
movsl
jle
jae
testl
daa
daa
sbb
dec
fstpl
int3
jnp
xor
std
add
xor
fadds
add
ds
xor
inc
adc
pushl
cmp
lea
stos
mov
push
shll
rcrl
mov
mov
push
push
xlat
and
mov
outsb
cmpsb
pop
test
loop
fcmovnu
inc
test
movsl
clc
orb
jbe
sbb
add
repz
lods
mov
test
in
mov
sub
int3
test
xchg
sub
lret
jbe
lahf
push
xchg
jge
repnz
aaa
leave
push
mov
mov
test
fdivrs
dec
sbb
fcmovnb
into
adc
inc
rcll
mov
sbb
lock
adc
loopne
sbb
jns
and
xchg
mov
xor
sub
and
enter
and
mov
outsb
ja
pop
ds
pop
icebp
sahf
inc
pop
mov
adc
mov
cltd
mov
mov
repnz
cltd
fdiv
or
add
aas
ljmp
pop
bswap
sbb
outsb
ret
inc
cmp
sti
mov
adc
fists
std
cmp
movsb
hlt
jbe
mov
scas
mov
test
insb
inc
sub
shll
mov
mov
addr16
adc
add
in
ror
cs
rdmsr
insb
xor
mov
pop
insb
lock
scas
push
arpl
popf
push
lahf
xchg
lock
call
fdivrs
nop
roll
inc
or
out
jle
lahf
daa
inc
shll
sbb
sbb
inc
call
and
das
mulb
mov
mul
out
scas
out
xchg
pop
mov
dec
pop
notb
mov
mov
or
pushf
data16
mov
lock
push
add
push
or
push
push
pushf
addl
pop
jge
jp
cmpsb
daa
adc
lret
into
pushf
outsl
insb
cmp
js
rorl
sub
addr16
mov
jmp
mov
dec
mov
rorl
sub
loope
add
insl
nop
mov
pusha
pop
sub
pop
jno
pop
adc
adc
vmptrst
ja
mov
sub
pop
fldt
mov
divb
pop
mov
in
daa
scas
mov
cmp
and
cmpsb
cmp
pop
xchg
jbe
cmp
inc
inc
dec
fsubr
push
push
and
cli
fistps
dec
les
xlat
mov
pop
rol
dec
jmp
jno
das
das
add
insl
mov
adc
xchg
sbb
mov
pop
repnz
dec
or
clc
mov
jmp
outsl
psubw
out
jbe
jo
mov
les
sbbl
dec
mov
mov
push
and
xor
mov
nop
pop
jg
hlt
aad
mov
xorl
mov
xor
repz
push
sub
gs
dec
in
fidivrl
ljmp
push
or
jns
adc
imul
andl
mov
gs
mov
mov
out
xchg
and
out
cpuid
xor
jb
jge
xor
mov
sub
stos
in
clc
sub
jg
sbbl
add
push
fnstenv
sbb
loop
dec
dec
lahf
xchg
test
int3
test
xor
shll
mov
sarl
test
adc
icebp
loope
gs
out
mov
jns
stc
mov
dec
xchg
pop
mov
test
cs
idivb
add
dec
aaa
pop
stos
call
jg
adcl
pushf
scas
lock
lock
sti
lret
jbe
adc
jae
mov
mov
inc
rcrb
bound
adc
lds
aas
pop
xorb
mov
jmp
push
cli
adc
or
cmp
bound
mov
cmp
dec
mov
inc
add
cmp
sbb
orb
xor
mov
lahf
in
adc
inc
sub
mov
ret
adc
jae
fistpl
aaa
pop
mov
push
arpl
xor
xor
jnp
popf
lods
mov
test
or
or
push
jne
lea
add
js
idivb
dec
push
adcl
dec
stos
xlat
pop
cld
sub
scas
cmp
mov
gs
icebp
add
jbe
hlt
out
lods
imulb
bound
adcl
jecxz
sti
shll
lret
adc
sti
loopne
mov
popa
push
stos
mov
inc
inc
lds
mov
sub
jbe
and
jbe
or
mov
pop
pop
call
jmp
lcall
minps
in
cmp
and
dec
jo
movsl
mov
cld
mov
mov
jno
inc
sahf
xchg
inc
or
lea
sbb
push
pop
dec
dec
or
into
inc
cmp
push
mov
jp
cmp
mov
xorl
fadds
xor
lahf
xchg
dec
andl
movsl
test
lret
lds
insl
push
sbbl
cmp
fcompl
cmp
rclb
lds
ds
cmp
mov
fcmovne
lods
jp
scas
xchg
ret
jmp
in
dec
cmp
xor
fbstp
rorb
cmp
pop
cmp
sub
xchg
hlt
testb
iret
pop
fcoml
inc
mov
jne
mov
out
push
cmpsb
lea
dec
movl
push
nop
in
pushf
push
fisttps
sahf
push
es
xor
sbb
cs
cmp
cmpl
mov
call
xchg
cmp
in
push
out
inc
aaa
xor
lret
xor
xorb
repnz
mov
shlb
and
pop
sbb
pop
fdiv
shlb
mov
cltd
add
es
pop
jne
andb
lcall
imul
and
mov
push
test
mov
xchg
imulb
adc
arpl
mov
jle
push
mov
in
stc
movsl
xchg
mov
dec
daa
push
dec
pop
fcomip
jg
push
fs
inc
imul
mov
add
shlb
sbb
add
mov
popf
xor
inc
je
insb
and
fwait
orl
subb
ret
jnp
addr16
sar
idivl
sbb
inc
enter
jo
hlt
test
imul
outsb
cmp
mov
outsl
popa
std
cmp
push
and
mov
lea
movsl
dec
adc
add
sub
lahf
nop
mov
lret
pop
stc
cmc
pop
mov
or
insb
fiadds
cld
adc
pop
shlb
cmp
add
jno
icebp
mov
shll
mov
mov
aaa
cmpl
cmp
mov
faddl
cs
bound
sbb
xchg
push
pushf
xor
addr16
mov
xchg
loopne
test
mov
loopne
std
fwait
dec
js
adcb
and
mov
test
repnz
inc
pop
push
adc
sub
and
rcl
jge
fbstp
lods
mov
cld
dec
xchg
add
push
jae
loopne
push
mov
loopne
cmpsl
or
pushf
cs
test
xor
push
jle
xchg
outsb
jb
jmp
ljmp
stos
hlt
jne
cmp
xchg
xor
data16
pop
and
les
add
dec
jp
push
loope
outsl
jnp
sahf
mov
inc
add
imul
fs
cwtl
dec
mov
mov
pushf
sbb
mov
aam
mov
in
or
adc
popa
outsb
push
add
scas
jg
mov
fs
mov
jmp
icebp
cmp
mov
and
inc
dec
test
mov
jno
cwtl
call
or
sub
mov
je
lods
movsl
mov
inc
adc
in
mov
shll
mov
mov
sbb
dec
dec
adc
dec
cwtl
rorb
mov
sbb
sbb
jge
jne
add
xchg
lret
add
jb
cmpsb
jmp
push
data16
and
inc
add
pop
add
adc
hlt
push
xchg
jp
enter
adc
sbb
push
pop
add
fwait
mov
mov
xorb
adc
jecxz
inc
repnz
repz
sub
xchg
fxtract
add
lods
add
test
cwtl
fsubp
push
shlb
icebp
inc
sub
iret
xchg
fisubrl
add
jns
xor
cmpl
mov
push
inc
stos
pop
jno
sub
mov
or
mov
lods
rclb
inc
xchg
push
testl
movsl
sub
fistpl
or
jg
push
and
add
push
cltd
push
shrb
test
pop
or
fnsave
pop
pop
sbbb
ds
insl
jne
sub
into
in
push
out
cmc
push
roll
and
sub
xchg
stos
gs
lcall
popa
scas
inc
ss
fnstsw
xchg
lock
hlt
sti
les
xchg
in
sub
push
inc
push
adc
ljmp
out
movsb
dec
rcrb
bound
xchg
test
mov
jg
add
and
pop
mov
jge
jo
sbb
xor
sti
js
or
xchg
lahf
inc
repnz
stos
stos
mov
xchg
popa
sbb
outsl
jle
mov
pop
push
cld
insb
js
loope
sahf
cmp
xchg
xchg
imul
clc
add
sbb
in
ret
repz
jns
insb
mov
dec
outsb
push
stos
xor
cltd
jne
js
cmp
push
pop
ljmp
pusha
mov
lds
push
scas
pop
mov
push
sub
lahf
inc
test
pop
or
xchg
repz
pushf
push
insl
jl
loopne
and
jnp
mov
cmpb
push
outsl
jae
out
imul
xor
out
jge
add
dec
dec
sub
mov
fs
mov
pop
fistps
in
sub
std
mov
test
js
hlt
mov
dec
add
fwait
pusha
fsubrp
pop
sub
jno
mov
test
adc
mov
lret
jae
push
icebp
sbb
cs
sub
or
imul
mov
sti
int
lods
maskmovq
negl
scas
out
or
mov
inc
xchg
mov
loope
xchg
test
xchg
lods
loop
dec
jns
adc
test
repz
nop
sbb
in
adc
nop
mov
mov
aas
pop
hlt
pop
cmp
test
mov
mov
shrl
or
mov
fnstsw
rorl
xorl
fldt
jne
aas
in
push
jnp
or
sti
das
icebp
inc
hlt
movsl
call
mov
int
ss
ljmp
sub
cmc
in
xor
ret
scas
sbb
fcoms
and
addr16
pushf
lahf
aas
sbb
mov
mov
pusha
dec
mov
iret
sbb
cltd
mov
add
adc
iret
in
mov
daa
pop
popf
mov
mov
test
cmp
jmp
or
add
sub
repnz
dec
xchg
leave
imul
and
jecxz
in
add
sbb
leave
sti
enter
out
cmp
jo
cs
imul
xchg
pop
and
test
icebp
clc
adc
fildl
dec
sbb
lds
enter
xchg
fadds
xchg
inc
clc
sti
and
lahf
mov
std
pop
lock
cmc
fxch
stos
mov
push
or
dec
sub
add
jo
pop
sbb
not
sbb
stos
repz
sub
mov
enter
ss
test
pop
mov
sbb
add
mov
add
pop
out
iret
test
jae
sub
pop
dec
aaa
push
pop
fidivrs
xor
mov
and
xchg
mov
addr16
insl
adc
push
cmp
xor
shll
jl
js
pushf
idiv
test
loopne
loope
stos
sub
ret
out
xor
mov
pop
sbb
xlat
movsl
jae
mov
sbb
mov
iret
jmp
mov
pop
adc
adc
push
repnz
repz
mov
xor
stos
repnz
xchg
inc
cmp
mov
mull
in
cld
addr16
jle
ljmp
insl
cwtl
cli
mov
arpl
inc
adc
mov
jg
mov
movsb
in
cmpxchg
push
push
sbb
mov
pop
sub
lock
imul
and
sar
add
ficoms
cmp
fdiv
cs
test
jae
dec
fiadds
imul
xchg
mov
lret
jne
fwait
adc
enter
imul
cmp
test
lods
cmp
arpl
push
aaa
cmp
filds
jl
push
push
mov
aas
daa
mov
fwait
push
ja
push
xchg
jp
or
cmp
cli
cmc
sub
pop
adc
int3
mov
and
mov
mov
push
aam
xchg
lea
inc
out
inc
mov
inc
mov
inc
pop
pusha
push
sbb
ss
decl
aam
jecxz
cmp
mov
clc
sbb
aas
adc
fwait
or
test
push
out
cmp
push
inc
inc
pushf
fwait
and
ljmp
xor
sbb
ror
pusha
icebp
xchg
mov
sub
jge
mov
add
ja
sbb
std
jne
out
or
out
imul
pusha
mov
sbb
stc
cmp
js
jmp
sbb
add
cmpxchg
push
sbb
fimuls
fcoml
stc
adc
out
mov
and
sub
jb
or
movsl
test
mov
sbb
sub
adc
cld
pop
imul
or
dec
aas
pop
out
cmp
out
jl
out
sbb
xor
in
or
dec
js
mov
ljmp
add
test
addr16
subb
pop
cmp
std
std
xchg
fisttps
or
pop
in
pop
lcall
mov
fsubl
mov
adc
jne
jbe
or
daa
xchg
mov
mov
mov
in
and
pop
push
mov
ss
sbb
sbb
invd
jnp
les
add
xor
cwtl
sub
insb
cmp
and
mov
outsl
data16
fwait
insl
fmuls
inc
ds
mov
jae
inc
jae
ds
addr16
sub
and
xchg
test
movsb
arpl
mov
pusha
ja
mov
leave
sub
loope
cld
or
mov
test
test
jmp
jp
xor
jle
cwtl
sub
pop
ja
cltd
pop
inc
in
xorb
jmp
sbb
lds
and
push
leave
insl
sub
pop
sarl
test
pop
xchg
sub
mov
dec
outsb
or
iret
and
cmp
jmp
jecxz
rorl
and
hlt
outsb
jne
mov
push
jo
in
dec
dec
insb
in
push
cli
loope
lds
ja
push
sub
pop
lds
notb
adc
in
cltd
or
mov
xor
push
pushf
sbb
or
push
pop
movsl
cmp
lcall
mov
pop
cltd
inc
dec
add
or
insl
cmc
jb
jo
mov
sub
mov
xchg
mov
push
les
pop
sarb
xor
addr16
in
push
loope
repz
fiadds
sub
xor
cmpsw
pusha
aaa
mov
and
mov
sbb
int
push
call
dec
dec
push
inc
into
in
jl
icebp
mov
int
push
rclb
or
fnstenv
int
enter
mull
ss
adc
fsubrs
fadds
ljmp
mov
pop
cmp
mov
mov
jbe
add
inc
mov
vmwrite
or
mov
inc
dec
jg
cmp
xor
or
rorb
lock
fidivs
stc
sub
popa
nop
fimuls
pop
rolb
cmp
scas
push
inc
test
inc
icebp
insl
and
add
cmpl
lcall
in
cli
ss
sbb
sahf
lcall
mov
fwait
pop
sbb
sub
stos
mov
adc
in
or
push
imulb
or
call
je
cmp
push
aas
sub
inc
or
mov
dec
cmp
ss
fwait
dec
or
aas
push
pop
ret
sarl
cmp
push
shll
sbbl
mov
fisubrs
mov
sbb
shrb
fwait
je
xchg
call
and
adc
popa
daa
cmpsb
pop
lret
and
jge
int3
jne
ja
aas
push
xchg
sub
fs
xchg
mov
xchg
sbb
movsb
sti
dec
mov
mov
jns
xchg
shr
in
jg
push
rclb
xlat
adc
adc
mov
xchg
pop
pop
jecxz
adc
mov
call
jb
movsb
arpl
fisttpl
cmpsb
adc
int
and
sub
push
clc
cmp
xchg
data16
lea
loop,pt
movsb
mov
fimuls
xor
cmp
aaa
xchg
inc
or
fldcw
push
insl
add
ds
cmp
lds
mov
shlb
xor
es
add
and
xchg
mov
pop
in
jno
insb
cmpsb
adc
add
xchg
pop
lock
push
xchg
in
lret
pop
xor
push
push
or
or
loopne
inc
or
ret
jo
dec
clc
in
xchg
adcb
pushf
adc
sbb
cmp
mov
fstpt
jae
ljmp
aaa
addr16
and
dec
cld
test
mov
mov
repz
andb
push
loope
sub
icebp
mov
xor
adc
pop
dec
and
mov
testl
mov
push
mov
dec
scas
cmp
fadds
sub
adc
ret
je
ja
xchg
pop
ds
dec
lock
adc
in
loop
pop
xchg
mov
ss
imul
pop
jecxz
mov
sahf
cltd
dec
xor
fwait
dec
dec
inc
push
notb
and
inc
dec
mov
repnz
jns
xchg
xor
repz
push
cltd
push
jecxz
mov
cmp
test
mov
mov
cltd
fs
ja
mov
xchg
lcall
mov
pushf
fmuls
jnp
dec
in
sbb
cld
sahf
adc
in
push
mov
mov
cs
and
inc
jae
aaa
jge
lret
daa
push
pop
dec
repnz
sub
fdivrl
fistps
jl
dec
pop
shrb
cltd
ljmp
sbb
mov
dec
jmp
add
and
mov
cmp
jns
call
daa
push
adc
mov
add
ja
inc
fs
jg
jge
xor
push
sbb
xchg
sbb
fstl
ds
nop
add
adc
clc
cmp
sub
jge
adc
popf
jo
es
xor
sbb
sub
icebp
out
cmpl
dec
in
inc
push
push
xor
outsl
or
jne
cmpsb
xlat
jecxz
pushf
and
xlat
inc
or
shlb
mov
test
adc
int
inc
in
insl
ret
sub
ret
dec
jns
mov
mov
enter
cli
sub
loop
sbbl
push
sbb
xchg
in
push
fwait
push
push
mov
test
mov
jno
bound
insl
dec
lret
adc
xor
les
notl
jo
mov
lods
sub
pop
mov
ret
aas
sti
push
pop
pusha
mov
push
bnd
call
inc
cmp
fisubs
xchg
cwtl
adc
pop
js
and
push
mov
in
xchg
incb
in
hlt
scas
jecxz
push
call
fdivrl
pop
inc
add
int3
jg
cli
xchg
cwtl
jecxz
rcrb
pop
mov
hlt
lahf
xor
xchg
cli
js
fsubr
data16
fdivrp
stc
cmovnp
mov
fimull
pop
cmpsb
xchg
sub
out
inc
xchg
sub
mov
cmp
xchg
inc
mov
push
hlt
push
hlt
int
mov
xorl
cmpsl
fstl
lret
out
sub
imul
inc
add
test
push
rcrl
dec
dec
je
dec
fnstenv
mov
sub
lock
dec
and
sti
xor
into
add
aaa
inc
aam
fldl
mov
dec
into
add
mull
cmpsb
or
add
cmc
xchg
ss
fcoml
das
outsl
popa
nop
adc
sbb
mov
sbb
les
jne
rorb
push
test
or
mov
xchg
mov
mov
cmpsb
enter
cli
dec
cs
sub
jge
push
xchg
mov
sub
in
into
mov
pop
push
test
sbb
mov
sub
cwtl
rclb
lds
inc
mov
jns
mov
je
dec
jge
pop
inc
in
add
xchg
jl
dec
xchg
shrb
mov
paddusb
cmp
cmc
leave
cld
enter
pop
rolb
in
xchg
shll
bound
add
push
cmpsb
bound
cli
push
lcall
push
in
arpl
je
nop
push
sbb
test
jno
mov
fstpt
mov
xchg
leave
icebp
cmc
mulb
outsl
xlat
icebp
lock
lods
inc
push
pushf
pop
aam
inc
jmp
pop
mov
mov
repnz
cmp
xor
push
or
dec
rclb
gs
dec
pop
dec
xlat
cwtl
es
xor
jge
add
and
adc
lea
shr
cld
inc
cmpsl
out
sbb
push
insb
out
subb
add
pop
dec
pop
out
dec
mov
xchg
pop
xchg
dec
out
and
mov
rolb
ja
movsl
sub
push
dec
xor
add
imul
or
mov
daa
adc
push
xchg
xor
jmp
jnp
fimull
or
xor
pop
push
adc
cmpsb
push
pusha
mov
clc
xchg
ret
xor
fs
mov
sub
inc
cwtl
lret
imul
push
pop
aad
shrl
mov
mov
cmp
repnz
jecxz
cs
ljmp
pop
inc
cs
jb
imul
adc
cmp
sub
setae
add
push
sub
pushf
fidivs
movsl
lds
das
rcr
cs
orb
mov
add
jmp
data16
mov
sbb
mov
div
arpl
cmp
jno
or
dec
addr16
adc
dec
lcall
pop
repnz
mov
paddd
test
pushw
mov
jle
lods
push
imul
ror
dec
les
mov
sbb
ss
pusha
sub
jecxz
sbb
cmpsb
in
stos
adc
push
in
je
sti
xor
dec
fcomps
aaa
mov
adc
repnz
ja
cmp
imul
rolb
rcll
mov
bound
cmp
push
dec
jb
inc
push
adc
mov
pop
push
lahf
dec
dec
and
adc
std
pop
xor
hlt
mov
addr16
jno
mov
jo
out
and
insl
cli
push
outsb
lahf
out
cmc
fisubs
cs
rcll
jle
xchg
jl
push
add
aas
cmp
clc
lret
pop
in
pushw
adc
xchg
das
cmp
lock
and
adc
push
add
idivl
sub
xlat
adc
cld
cmp
lods
addr16
xchg
cmp
int3
xchg
xor
ja
jbe,pt
mov
add
mov
sbb
inc
out
pop
adc
fisttpl
xchg
neg
push
stos
popa
xor
xor
orb
mov
xchg
xor
hlt
push
daa
fwait
xlat
test
stos
add
lods
xchg
popf
xchg
adc
lcall
movsb
cmpsb
test
add
test
inc
lret
mov
ret
loope,pt
mov
lods
daa
mov
mov
push
cmc
push
adc
pop
cli
push
or
daa
mov
xchg
lods
test
jo
ljmp
cmc
sub
std
push
xchg
inc
out
xchg
adc
into
push
sbb
xor
sarb
enter
mov
out
repnz
fidivs
add
dec
adc
movl
add
and
jecxz
push
cmp
pushf
cs
adc
das
cmpsl
out
mov
xchg
loope
inc
push
mov
adc
icebp
ds
dec
pusha
push
inc
gs
int3
cmp
and
scas
je
lret
adc
pop
jl
or
sub
cmc
pop
adc
addr16
mov
sub
add
mov
push
sub
arpl
xchg
in
xor
push
pushf
mov
mov
mov
mov
push
jmp
stos
push
das
fwait
sbb
hlt
adc
test
push
int3
jecxz
jne
ja
lods
loop
cmpsb
pusha
jae
icebp
adc
daa
add
pop
xchg
rcl
jns
icebp
inc
loop
ret
leave
cmp
outsl
addr16
cmc
xor
cmp
out
test
pop
mov
add
and
sbb
xor
jno
lods
fsubrp
jnp
sub
subl
scas
js
jge
les
inc
push
adc
cmp
adc
pop
sarb
jecxz
and
inc
scas
mov
xchg
jg
jmp
push
pushf
aas
rclb
shrb
adc
cwtl
dec
pop
mov
push
dec
inc
mov
adc
adc
push
arpl
leave
movsb
enter
cmp
nop
pop
fidivrl
jo
jp
jp
fadds
cmp
scas
dec
inc
shr
or
push
xlat
mov
nop
fimuls
mov
xor
adc
fcompl
lock
cmpsb
mov
shll
cmpsb
adc
in
stc
dec
lods
pusha
stc
cmp
jns
je
sub
jp
ss
cmp
adc
lcall
je
push
ret
jge
or
std
lods
popf
sbb
push
pop
divb
jns
fs
ret
xchg
pop
test
les
add
ds
push
pop
dec
or
push
outsl
fiadds
cs
adc
push
dec
sub
sub
sbb
fnstsw
xorb
and
push
negl
clc
fcoms
lcall
insl
imul
mov
dec
fs
mov
ret
mov
sbb
xor
fidivs
dec
repz
cmp
les
clc
pop
js
int
clc
adc
xchg
adc
incl
test
mov
test
cmp
stos
inc
lock
out
push
xlat
out
in
out
mov
das
insl
loope
pop
fwait
jl
in
ret
push
pop
jl
adc
ret
icebp
pop
jno
outsl
cmp
sti
pop
sbb
lret
lret
loope
dec
lret
inc
adc
out
icebp
lret
mov
cmp
adc
inc
bound
adc
int3
xchg
subb
out
cmp
mov
fmull
jecxz
dec
ljmp
mov
jo
jns
lea
imul
cmpsl
mov
push
inc
xlat
xchg
les
add
mov
or
ja
cmpsl
jmp
jl
xor
out
or
push
dec
lcall
push
or
inc
xor
fildl
imul
ja
imul
cld
sbbl
push
fidivrl
sub
and
lods
dec
inc
nop
outsl
mov
sarl
rclb
popf
popa
mov
ja
popa
xchg
lret
pop
imul
or
cs
cli
out
nop
shlb
popa
test
stos
and
dec
loopne
xor
int
push
jge
rcr
out
mov
push
fdivl
cld
xor
adc
jge
inc
push
mov
cmpsl
push
jle
stos
pop
cwtl
mov
repnz
xchg
fnop
jns
jg
mov
inc
sub
enter
data16
das
fwait
sub
test
xlat
dec
int
scas
adc
adc
insl
fsubrs
idivb
lods
subb
inc
ljmp
jae
and
xor
cmp
xchg
jg
push
stos
pop
pop
xor
sub
cmc
mov
stos
clc
aad
mov
lret
and
lea
movsb
bound
movsl
scas
sbb
cmp
pop
pop
inc
mov
push
pop
loop
or
lret
adc
jp
mov
mov
cwtl
in
loopne
aas
out
add
test
mov
inc
push
fnstenv
jbe
out
inc
sub
push
divb
call
les
daa
loope
pop
ja
popa
nop
inc
cmpsb
repz
cmpsb
inc
lds
xor
mov
push
add
mov
std
in
mov
xlat
jle
sbb
mov
adc
enter
and
pop
jno
push
popa
add
js
bound
cmp
iret
fcom
push
add
dec
and
or
mov
negb
rolb
int3
mov
cld
and
hlt
rolb
gs
inc
orl
les
and
mov
loop
lea
inc
mov
inc
clc
cld
jg
sbb
test
pop
and
sub
into
popl
std
adc
dec
push
loop
jge
dec
cmc
inc
adc
mov
cmp
sub
fiadds
aam
adcl
and
daa
push
lret
sub
or
out
pop
and
lods
mov
add
inc
fs
mov
pusha
mov
sbb
dec
dec
clc
sbb
mov
mov
icebp
addb
jno
dec
mov
cmp
nop
popf
shrl
push
insl
fnstenv
test
stc
das
cmp
inc
cmp
xorb
call
cli
lcall
mov
sbb
or
ja
outsl
int3
sbb
out
stc
dec
outsl
pusha
mov
sub
in
inc
lahf
cld
mov
nop
fwait
and
fisttpl
pop
cli
xlat
jg
xor
jmp
mov
test
sub
cmp
add
dec
sbb
xor
outsl
imul
sbb
xlat
sahf
mov
cmpsl
push
mov
loopne
push
or
push
ss
movsl
mov
sarb
fists
mov
xlat
ret
pusha
cmpl
call
sbb
pop
mov
bound
sahf
push
into
sbb
lret
icebp
aaa
sub
mov
lock
xor
out
add
xchg
xor
scas
cltd
test
mov
sbb
scas
xchg
cltd
repz
into
inc
fsubrl
push
pop
pop
jno
loop
scas
xor
loopne
cwtl
lock
adc
leave
in
add
mov
lret
andl
pusha
scas
sbb
outsl
fmull
std
arpl
mov
jmp
std
sbbb
mov
sub
insl
xchg
rcll
or
pop
mov
imul
ret
mov
addr16
scas
sbb
aad
fs
dec
lcall
jmp
lret
adc
lret
mov
or
in
das
fstpl
xor
xor
mov
lds
xchg
icebp
inc
cmp
hlt
mov
or
fisttps
test
mov
cmpsl
out
loop
mov
pop
test
ljmp
cmc
inc
push
stos
fcoml
adcl
xchg
dec
test
dec
test
xor
test
in
inc
je
insl
push
lock
aad
pop
sbb
popa
push
jbe
mul
or
out
daa
arpl
stc
push
test
ja
sub
fcmovnb
enter
ljmp
nop
cld
test
xchg
adc
mov
push
inc
aas
iret
pop
mov
test
add
push
mov
sub
test
es
gs
test
and
mov
mov
cmp
aas
pop
insl
mov
xchg
inc
insl
mov
inc
in
sub
push
jecxz
lock
cltd
es
mov
les
xor
je
xchg
stos
cs
adcl
pushw
stc
cmp
insb
sbb
sbb
cmpsl
loop
out
push
lcall
fwait
sar
imul
jbe
push
adc
adc
test
push
sub
das
inc
enter
jns
std
dec
push
inc
inc
mov
jge
andl
mov
xchg
and
in
popa
inc
adcl
or
iret
mov
mov
or
jmp
cwtl
lret
frstor
jbe
call
repz
fnstcw
lods
xor
xor
mov
and
push
sub
xor
jmp
je
fisttpll
fidivl
jmp
mov
arpl
cmp
sub
into
or
xchg
push
hlt
inc
shrl
mov
out
fucomi
sti
sbbl
xlat
pop
repz
inc
outsl
mov
sbb
cmp
cmp
mov
leave
stos
mov
sbbl
outsb
scas
fs
xor
das
xor
xor
add
sub
arpl
test
fsubl
mov
and
dec
push
lock
addl
or
into
in
dec
jmp
scas
gs
xchg
les
jg
stc
sahf
mov
jb
push
not
cmpb
mov
adc
pop
xchg
cmp
or
adc
cwtl
fadd
push
arpl
add
add
jne
push
fwait
mov
push
mov
pop
xchg
cld
je
dec
in
jle
cwtl
add
les
fstl
cld
mov
xor
xchg
pop
in
stc
pop
in
cwtl
cmp
sub
pop
xchg
adc
inc
xchg
pop
pop
sahf
add
cltd
jmp
cmp
ret
cmpsl
hlt
push
loop
rcll
cli
std
js
test
fdivs
jg
cmp
jle
mov
loope
mov
xorb
xor
xor
jecxz
roll
inc
xlat
pusha
pushf
cmp
popa
xchg
and
mov
jl
js
xchg
push
xor
and
push
popa
js
test
les
mov
scas
cli
popa
movsb
or
iret
std
jmp
push
sarl
test
xchg
aad
jns
push
int3
call
sub
sbb
and
dec
sti
scas
arpl
mov
and
icebp
popf
daa
call
insb
dec
shlb
jp
into
mov
and
or
js
push
push
sub
test
jmp
outsl
mov
mov
and
bound
cmp
adc
and
push
adc
mov
fldenv
mov
lods
ds
xorl
out
jg
cmpsl
insb
sub
sub
scas
sbb
out
jmp
insb
mov
lret
adc
jle
cli
and
fildl
notl
cs
xor
mov
ds
add
lds
fisubl
mov
push
inc
pop
adc
dec
add
aaa
bound
pop
push
pop
sub
push
jae
fstpl
popa
lods
xchg
add
and
mov
pop
out
push
notb
iret
xor
cs
xor
cmp
cmp
sbb
pop
js
jle
pop
mov
mov
push
or
mov
add
outsb
inc
ret
clc
ds
pop
cmp
add
mov
pop
add
jbe
cld
push
dec
xchg
jo
push
and
mov
ja
push
sbb
sub
jns
nop
and
jg
ret
dec
enter
mov
pop
mov
jns
mov
loop
jg,pt
mov
test
imul
aam
enter
cmpsb
imul
ret
ret
movsb
lea
rep
xchg
inc
mov
mov
push
mov
xor
mov
xchg
loopne
add
mov
ljmp
xorl
movsl
dec
fwait
lods
mov
mov
rcr
sub
xchg
push
dec
outsb
jbe
in
add
push
clc
add
xor
in
or
loopne
rcrl
mov
and
mov
pop
insb
fmuls
adc
pop
or
mov
cmpsb
jge
cmpb
or
js
push
cmp
ret
pop
shlb
das
jbe
push
xchg
jne
iret
sarl
pinsrw
jns
movsb
int3
pop
mov
or
bound
and
cli
push
add
cltd
adc
sub
mov
mov
mov
imul
push
or
dec
std
mov
movsl
or
mov
rorb
ja
dec
pop
movsb
movsb
scas
or
out
pop
add
push
sbb
rcr
movsl
stc
jmp
mov
cmp
icebp
inc
ja
scas
push
mov
xlat
mov
lcall
notb
lahf
sti
jg
mov
loopne
sub
lea
cmp
lea
dec
cmpsb
pop
addr16
les
int3
xchg
ret
push
in
adc
push
pop
test
cmc
in
dec
cmpl
mov
fwait
pop
call
adc
loop
les
fadds
or
je
fs
ds
popf
sar
xor
out
fsubl
push
sub
iret
lods
jl
fsts
insb
movsb
add
les
out
pop
dec
push
pop
nop
ss
stos
pop
bound
mov
popf
je
movsb
cwtl
adcb
jl
loope
mov
movsl
inc
mov
push
cmpb
dec
lret
fsts
int
cwtl
cmp
inc
xchg
add
push
pop
pop
scas
or
fisttpll
leave
jbe
inc
jmp
inc
imul
mov
stc
adc
in
pop
jp
add
sub
push
lds
fisubrs
int3
in
rorb
stos
mov
das
push
fsubr
jp
jns
xor
mov
lcall
mov
pop
fucom
cmp
in
fldl
decb
adc
int
xchg
mov
xor
in
jne
sbb
add
cmp
insl
xor
xor
jp
or
adc
xor
add
sbb
lods
mov
cmp
mov
out
sbb
or
cmp
mov
pop
fstl
push
dec
out
mov
sub
insb
ror
or
jbe
clc
test
mov
data16
jge
xor
jns
xor
std
pop
sar
lahf
inc
push
sbb
xor
or
loop
pop
jo
nop
xchg
jb
shrl
mov
out
and
scas
je
mov
in
cwtl
js
push
jae
push
jecxz
sub
mov
out
fcoml
pushf
sbb
fwait
decl
sbb
adc
rclb
sub
movsl
dec
adc
js
xchg
lods
decb
mov
adc
fcmovnbe
insb
negb
pop
adc
es
fdivp
xchg
add
repz
jo
lods
testl
jno
and
mov
mov
inc
int3
js
ror
mov
mov
jo
addr16
mov
mov
scas
sbb
add
push
mov
dec
in
int
push
shlb
fnsave
jns
hlt
test
pop
rorl
mov
xchg
push
mov
jae
out
adc
xchg
mov
faddp
ljmp
xchg
cmp
imul
or
xlat
repnz
push
loope
mov
mov
rclb
rep
test
pop
lret
dec
xchg
cmp
pop
enter
jo
test
mov
jle
mov
repz
jmp
dec
pop
cmp
sbb
jne
repnz
xorb
ja
cmp
jnp
adc
pop
das
dec
pop
pushf
push
cld
fisttpl
cmpsb
xor
or
jae
test
stos
fistpl
neg
int3
mov
aas
lea
dec
call
and
shlb
pusha
xchg
jle
cmp
pop
add
imul
xlat
xorl
inc
cli
and
xchg
adcb
sbb
test
lcall
lret
push
inc
xchg
cmpsl
xchg
dec
mov
notb
mov
call
add
xchg
inc
adc
adc
add
sbb
lock
outsb
cmpb
pop
ficomps
aam
fbstp
fcoml
fstpt
in
or
cmpsl
pop
adc
sub
ret
lods
and
push
mov
outsb
lods
mov
pop
mov
inc
cld
mov
push
imul
adc
arpl
xchg
pop
sub
xchg
mov
aad
mov
test
bnd
dec
adc
xchg
xor
in
pop
xorb
dec
push
cmp
jno
or
sahf
stos
gs
mov
or
cmp
mov
insl
push
mov
cmpsb
adc
loopne
xor
sub
or
neg
xlat
pop
clc
mov
pushf
cmp
or
test
ret
or
xchg
ret
cli
ja
mov
jecxz
push
add
mov
jbe
sbb
lods
or
sbb
mulb
lahf
inc
xchg
enter
aam
xor
repz
addr16
and
repz
outsb
mov
cmp
fwait
jcxz
push
cmc
out
pop
pop
aas
adc
lahf
lret
dec
int3
cmpsb
push
imul
jnp
sbb
int3
dec
xor
inc
pop
icebp
jb
dec
and
pop
push
pop
jp
loope
outsl
loope
add
xor
cmp
push
xchg
sbb
dec
sbb
and
or
xor
xor
fisubs
iretw
xlat
inc
hlt
adc
sub
jle
icebp
outsb
or
cmp
mov
adcl
jne
scas
fsts
push
push
jnp
ss
test
repz
scas
mov
cwtl
fdivrl
ss
xor
in
sub
je
mov
imul
lea
or
push
sub
mov
vpcmpeqd
pop
pop
inc
jle
and
cmp
push
es
cmp
arpl
imul
push
xchg
gs
mov
popf
ds
push
cmpsb
push
stos
test
cmp
loope
pop
mov
js
es
aad
sbb
fnsave
mov
lahf
mov
test
fxch
sbb
popa
lret
cmp
and
dec
cmpsl
jae
stc
popl
mov
pop
or
xchg
stc
push
and
fwait
mov
dec
ljmp
call
mov
push
pop
loop
xchg
mov
scas
cmp
cmpl
inc
jmp
incl
or
jbe
and
test
sbb
js
and
lea
cmp
pop
mov
iret
adc
loope
cmp
mov
pop
mov
jne
pop
aas
outsb
imul
vpcmov
mov
fcomps
ss
daa
inc
fldcw
cmpsl
pop
lret
jg
cmp
cld
xchg
in
jle
pop
repnz
lahf
pop
xor
push
je
adc
mov
and
push
gs
pusha
iret
mov
mov
lods
sarl
cld
into
and
adc
lea
popf
jae
call
mov
pop
aas
mov
dec
mov
mov
pop
jno
inc
mov
mov
test
insl
cmp
iret
out
jg
fildl
aaa
push
pop
or
mov
mov
sub
add
sbb
pop
cltd
or
mov
neg
mov
sub
das
rorl
or
mov
divl
icebp
outsl
shr
push
jp
js
cli
and
subb
int
cltd
push
cmpsl
pusha
das
xor
or
clc
fs
lret
rol
btc
sbb
negb
les
lods
mov
sbb
inc
cli
mov
pop
call
mov
arpl
in
pop
fnstcw
bound
push
pop
lret
mov
lods
stc
sub
cmp
sub
inc
mov
fidivs
add
lods
insb
push
jb
aad
sbb
and
mov
jle
rep
test
stos
jle
cwtl
jo
mov
aas
mov
adcb
lcall
and
stc
cmp
hlt
jns
pop
inc
fmuls
leave
push
repz
pop
ret
jns
test
pop
test
sbb
adc
fimull
mov
lock
cli
clc
xor
xchg
xchg
loope
loope
dec
pop
xchg
loopne
sbb
jmp
repnz
adc
jmp
bswap
aam
inc
inc
stc
into
jbe
xor
xchg
xor
sbb
imul
push
jmp
jnp
pop
push
jnp
pop
push
push
cld
xorl
setne
adcl
in
push
inc
cmp
or
xor
int3
es
mov
mov
or
dec
jmp
pushf
and
xchg
fstp
fdivrl
inc
out
dec
mov
xchg
pop
les
or
icebp
cmp
roll
adc
push
cmpsb
sbb
nop
aad
scas
and
sar
popa
inc
xor
pop
mov
clc
and
adc
out
jecxz
mov
loope
cmp
enter
xchg
std
bound
enter
xor
inc
cmc
push
mov
cmp
xor
or
sub
mov
sarl
in
cmp
xchg
push
repnz
divb
orl
dec
loopne
inc
insb
adc
shlb
repnz
repnz
sub
popf
fcoml
dec
js
imul
cmpsb
cmp
fstps
push
cmovnp
mov
dec
pop
mov
mul
mov
mov
loope
push
js
push
dec
jge
sub
mov
mov
sbb
hlt
sbb
sub
dec
jno
cmc
or
cmp
mov
or
test
les
sub
int3
data16
outsb
xor
sub
dec
or
test
or
sbb
idivb
or
xor
jg
jbe
imul
repnz
leave
adc
icebp
xor
dec
call
adc
ja
jae
and
mov
push
lea
mov
xor
cwtl
outsb
bound
and
jl
cmp
cmp
xlat
cld
or
inc
out
loop
and
fnstsw
aas
ss
pop
aaa
addr16
xchg
adc
icebp
inc
cmp
cmp
std
loop
mov
movsb
clc
pop
and
pop
sbb
test
xor
cltd
insb
mov
or
cmc
mov
pushf
stc
or
cltd
fwait
mov
ds
sub
push
out
add
xchg
or
shl
sahf
jl
mov
mov
fmull
xor
adc
repnz
fsubrl
pop
arpl
pop
in
mov
rcll
sub
mov
mov
xchg
dec
mov
ret
mov
mov
xchg
bnd
mov
imul
sub
les
andl
out
inc
push
cltd
stc
inc
inc
cmp
jb
mov
loopne
in
test
mov
insb
sbb
xchg
test
pop
jecxz
mov
leave
and
in
sbbl
dec
addr16
rcrb
daa
pop
pop
dec
push
pop
pop
xor
push
sbb
jg
hlt
and
adc
inc
aas
mov
mov
sbb
aas
iret
adc
das
sub
cltd
push
arpl
xor
add
add
idivb
aaa
cmpsl
leave
cltd
cmpsl
ljmp
movsl
iret
fdivl
xchg
inc
lcall
sbb
jecxz
ret
jmp
xor
and
shlb
mov
xchg
out
pop
aaa
or
rcl
push
out
push
or
lock
pop
fwait
mov
mov
cwtl
jg
loop
test
add
int
jecxz
hlt
lahf
cli
ds
cltd
hlt
and
inc
inc
in
dec
or
sbb
out
sub
ficompl
mov
adc
decb
sbb
and
out
mov
cmpsl
add
ds
pop
add
xchg
test
test
cmp
cmp
pop
ficoms
inc
mov
cmpsb
and
jmp
idivb
inc
rcrl
das
call
xchg
dec
lahf
cltd
in
and
fnstenv
pop
xchg
mov
push
leave
adc
dec
mov
jecxz
mov
cmp
lret
lock
inc
cmp
pop
mov
sbb
pop
or
iret
or
hlt
loop
inc
mov
addr16
imul
xor
adc
ljmp
insb
mov
mov
push
mov
sahf
sub
xchg
into
mov
xchg
in
or
scas
les
sub
push
xor
add
xor
inc
in
test
mov
pop
inc
clc
movsb
xchg
fcmovnu
mov
cmp
mov
pop
pop
outsl
popa
arpl
mov
mov
mov
lea
sbb
xlat
lea
adc
outsl
rcr
into
push
or
cmp
cmpsb
out
rcrl
cmp
sbb
aam
inc
cs
fidivs
aaa
movsb
ss
mov
aas
cmp
cwtl
xchg
dec
in
faddl
mov
jecxz
cltd
imul
fimull
lea
and
divl
mov
in
lret
cli
jmp
sahf
daa
inc
cmpsb
loop
sbb
sub
fimuls
frstor
cltd
inc
jae
jne
scas
das
sbb
add
mov
jge
outsl
rorb
dec
mov
iret
xlat
cmpsl
mov
hlt
cmp
data16
movsb
out
into
jle
addb
jo
ja
or
std
mov
mov
inc
data16
jmp
sbb
popf
mov
scas
mov
add
enter
fistl
in
adc
mov
inc
sub
data16
mov
mov
andb
jmp
das
xchg
push
jnp
push
outsb
adc
cs
dec
pushf
and
in
fisubs
mov
mov
repnz
cltd
adc
or
push
mov
ljmp
xor
in
push
mov
arpl
sbbb
cs
fmuls
aas
hlt
js
outsb
jne
insl
add
imul
mov
jne
ja
mov
push
and
pop
addr16
repnz
jb
ficomps
mov
fnsave
push
test
faddl
hlt
cmp
lret
dec
jp
add
movsb
lock
test
pop
cmp
mov
jno
pop
sbb
pop
clc
dec
mov
sub
add
dec
hlt
jns
in
ret
inc
pop
mov
lea
adc
loope
mov
lret
pop
jmp
dec
push
jno
mov
xchg
inc
in
adc
ja
lahf
cmpsl
inc
mov
rorl
imul
dec
cmp
nop
bnd
test
pop
push
inc
pop
loopne,pt
mov
xchg
stc
insb
and
loope
push
lahf
or
adc
rcl
cmpsb
fstl
fcmovne
cmp
out
add
jge
sub
flds
jmp
outsb
sti
icebp
mov
sub
nop
scas
insl
mov
int3
sahf
ja
jb,pn
push
mov
icebp
push
ds
dec
push
es
insl
add
sarb
cmp
lret
inc
push
es
adc
or
add
inc
stc
out
xor
xchg
xor
sarl
jns
cmp
jp
inc
lds
imul
addr16
mov
test
mov
iret
mov
fucomp
sub
lea
cmp
push
dec
fidivrl
fcmovb
lcall
and
add
adc
pop
pop
insb
aas
jecxz
cli
bnd
and
push
daa
mulps
or
dec
pop
js
sbb
push
into
push
movsl
pop
daa
lock
xchg
bound
into
enter
out
mov
icebp
mov
pusha
pop
ror
loop
mov
sub
fs
movsb
insl
push
add
mov
xchg
xor
cmp
jns
inc
cld
push
outsb
notb
pop
vpavgb
ljmp
inc
mov
and
fsubrl
pop
shrl
sahf
mov
call
cwtl
push
cmp
mov
std
repnz
adc
or
test
mov
fucomp
clc
xchg
jno
ds
xchg
mov
sub
inc
add
xchg
pop
adc
lret
mov
ret
push
push
mov
push
dec
cmp
sub
dec
adc
pop
or
push
xchg
pop
dec
mov
push
mov
xchg
xor
icebp
insb
pushf
add
cmpsb
sbb
out
pusha
sub
xchg
in
sbb
pop
arpl
dec
xchg
xor
shll
ret
push
and
ljmp
movsl
xchg
lret
hlt
sub
mov
out
mov
add
dec
aad
cli
lods
add
cmp
mov
jp
loop
push
imul
pop
in
jb
adc
jae
test
mov
xchg
xchg
pop
fimull
jne
bound
mov
lahf
jge
jbe
cltd
test
add
add
push
cwtl
dec
xor
clc
sub
xchg
sbb
inc
aas
cmp
jne
add
into
dec
sbb
ret
jo
and
mov
das
jae
or
xchg
das
lahf
cmp
or
jbe
in
push
lock
scas
jbe
dec
dec
push
jo
push
bnd
sbb
stos
mov
xor
xor
imul
dec
dec
jecxz
scas
mov
xchg
addb
xchg
push
xlat
outsb
aas
addr16
or
shlb
popf
sub
xor
mov
aam
dec
and
mov
into
xchg
mov
lock
mov
popf
lods
xor
in
mov
jp
xor
mov
mov
int
mov
mov
sbb
push
xor
dec
xor
mov
int3
jb
push
add
push
iret
sbb
repz
xor
int3
cmc
fimuls
dec
push
mov
std
cmc
xchg
adc
fisubrl
sub
fs
int
xor
or
dec
pop
adc
xchg
js
rol
add
repnz
cmp
jge
fisubs
mov
inc
cmp
add
mov
xchg
dec
sbb
sub
lret
stc
pop
out
sbb
push
and
sbbl
orb
in
scas
jno
adc
insb
rolb
jo
inc
fdivl
sbb
jns
push
add
xor
aas
clc
dec
dec
mov
pop
mov
insb
mov
adc
mov
lcall
cmp
cmc
es
mov
fdivs
push
sbb
dec
insb
out
ret
mov
cld
lods
rorb
xchg
dec
xchg
and
and
dec
mov
lret
mov
ficompl
cmpsb
mov
push
adcl
lahf
iret
clc
jb
subb
rorl
xchg
addr16
adcl
mov
lcall
lret
icebp
sbb
lret
fmul
mov
mull
inc
nop
jno
mov
add
sbbb
xor
sbb
in
shll
cmp
insb
gs
cmc
inc
xchg
dec
jecxz
push
adc
out
push
es
dec
rcrl
arpl
movq
sub
lock
inc
hlt
cmpsl
daa
jne
scas
popf
or
pop
aas
mov
mov
or
out
shrl
pop
adc
incl
shl
push
loope
or
test
cmp
pop
fldl
add
mov
outsl
mov
mov
mov
lret
in
insb
pop
test
mov
xchg
test
dec
je
pop
pop
or
jae
arpl
cmp
push
pop
mov
in
std
mov
fisubs
ja
push
test
pop
mov
mov
in
fs
xorl
lcall
hlt
pop
clc
jnp
xchg
aas
mov
stos
stos
movsb
mov
push
fsubp
push
jne
gs
pop
jnp
stc
jp
fs
xchg
stos
int3
cs
add
mov
outsl
fiadds
leave
push
cmpsl
data16
in
and
dec
inc
jno
dec
negl
in
testl
xlat
mov
shl
pop
icebp
outsb
or
push
je
push
rcrl
xor
sbb
pop
xor
les
cmp
pop
fdivs
cmpsb
xchg
sub
cli
xor
jl
xor
bound
mov
stos
popf
iret
jle
into
sahf
in
mov
sub
popa
xor
popa
aam
xchg
sub
into
stos
pop
hlt
les
testl
jle
out
lods
enter
and
cmp
inc
divl
xchg
arpl
jge
or
pop
push
or
mov
cld
cmp
idivb
jg
scas
test
test
dec
sub
movsl
std
loop
inc
ret
add
and
jmp
jns
inc
cmp
les
data16
fildl
xchg
push
jae
ljmp
out
testl
xchg
sub
dec
sbb
push
push
ret
loop
jb
leave
addl
fimull
call
fs
add
out
shll
jne
and
subl
xchg
popf
push
inc
cli
push
sub
and
jno
stos
mov
int
adc
sbb
pop
push
jmp
sahf
jmp
cmc
jns
mov
adc
and
add
test
inc
fiaddl
cli
cmpsb
ret
mov
leave
nop
lods
and
pop
call
mov
inc
push
push
dec
push
jnp
push
addl
xchg
sbb
pop
sbb
sbb
cmpsl
sub
fcom
rorl
test
fcmovu
dec
pop
mov
lods
mov
sbb
test
shll
mov
sbb
enter
rcrl
adc
push
or
sbb
sub
xchg
pop
andb
icebp
cli
mov
mov
cmc
divb
inc
out
xchg
addr16
sbb
xor
inc
mov
sahf
aam
inc
test
les
mov
aam
into
jl
mov
mov
xor
mov
adc
cmp
add
test
xchg
fistpl
loop
xor
mov
inc
and
in
or
cmp
inc
cmp
dec
fs
cltd
mov
cs
pop
push
pusha
inc
jmp
mov
shl
cld
int3
push
dec
xchg
dec
jmp
xor
xor
xchg
fmul
cwtl
sbb
mulb
std
mov
push
test
movb
das
dec
loop
xchg
fs
inc
arpl
cmp
les
int3
ret
pop
test
or
negb
lret
mov
sbb
testb
cmp
outsb
lahf
lret
jmp
out
sub
inc
ret
jmp
sahf
jmp
mov
jg
into
xor
mov
rcr
xchg
add
pop
call
mov
cmpsl
andl
lods
imul
xchg
loopne
mov
add
or
sahf
xchg
mov
pop
outsl
or
and
aad
mov
rorb
data16
inc
and
leave
jle
stos
test
cmp
insb
outsl
push
pcmpgtb
bound
mov
stos
gs
loope
xchg
test
popa
ja
mov
mov
test
mov
and
andb
cmp
in
mov
push
sbb
sahf
push
xchg
jbe
lahf
adc
leave
xchg
loop
and
xorl
xchg
jge
push
jno
push
aas
mov
dec
lods
movsl
stos
fidivs
jno
js
xchg
insb
xchg
pop
int
insb
orb
and
jmp
push
jae
int
lahf
or
adc
aam
lods
pop
pop
push
rcl
push
mov
push
and
arpl
and
mov
fimuls
lret
push
lds
add
xchg
pop
xchg
adc
call
loope
adc
mov
or
jb
sbb
bound
mov
and
fnstcw
aad
xchg
mov
pop
outsb
inc
lods
pop
or
jle
icebp
mov
pop
lds
enter
das
cmp
and
popa
xchg
push
stc
dec
stos
nop
push
lock
cmp
inc
sub
call
shll
loope
mov
xor
mov
mov
clc
jmp
int3
cmp
mov
mov
fsin
cld
out
and
mov
hlt
fisttpll
inc
dec
imul
mov
push
fdivr
and
xchg
or
sarl
cltd
bound
mov
enter
push
xor
pusha
push
jno
out
insl
ljmp
xor
cld
push
xchg
loopne
xlat
imul
je
push
dec
dec
xchg
stos
scas
sbb
cmp
cld
adc
pop
pop
ficompl
fcomp
sub
cmpsl
cmp
jmp
aad
cmp
shll
and
or
lea
in
inc
mov
sub
mov
inc
jns
loopne
int
or
lods
xlat
mov
movsl
movsb
mov
mov
dec
push
ljmp
mov
add
or
addr16
sbb
inc
leave
test
push
push
lock
repnz
add
pop
adcl
mov
or
scas
test
movl
ret
es
enter
scas
lcall
push
push
pop
pop
popl
das
scas
jp
mov
adc
push
les
sbb
push
js
pop
test
mov
push
ds
adc
cmp
pop
pop
adc
mov
out
jbe
shlb
jmp
lds
mov
sbb
mov
sub
leave
sti
pop
push
call
adc
mov
push
setle
fsubr
mov
fs
mov
pop
xor
pop
or
xchg
or
cltd
pop
pushf
sbb
rorb
xor
cmp
push
lea
jmp
shld
iret
cmc
push
cmp
lret
call
inc
inc
sti
xchg
jle
fs
cmp
adc
cwtl
xchg
test
and
lcall
sub
dec
push
push
stos
sbb
mulb
out
cld
dec
jnp
jecxz
cmp
sub
fwait
sub
pushf
xor
mov
cmp
shll
shlb
adc
int3
push
xor
cmpsb
mov
adcl
pusha
lahf
or
jbe
add
push
mov
leave
std
imul
fisubrl
add
and
dec
clc
aaa
mov
movl
mov
out
loop
jmp
leave
jl
gs
adc
adc
movsl
ret
cltd
shl
faddl
aaa
adc
sub
out
int3
js
out
inc
or
imul
ljmp
xchg
daa
sbb
in
xor
test
ja
fs
cmpsb
mov
lret
push
das
mov
mov
cmp
lret
lock
adc
int3
jle
add
jns
pop
push
pop
pop
mulb
push
es
orb
stos
pop
adc
adc
wbinvd
adc
sbb
xchg
dec
ret
pop
leave
fs
imul
xchg
mov
pop
jbe
mov
lret
jmp
push
loope
xchg
scas
dec
movsb
jbe
inc
mov
mov
inc
push
and
jbe
mov
inc
jmp
xor
push
or
push
out
leave
inc
and
xchg
mov
push
cmc
in
xchg
and
mov
pop
add
sub
sub
adc
add
add
lret
fcoml
sti
adc
les
jbe
jmp
in
idiv
icebp
pop
dec
addr16
scas
cmp
push
xchg
dec
loope
insl
fstps
dec
mov
add
mov
rorl
and
aas
pop
rcll
pop
aam
mov
jb
and
adc
roll
fwait
stos
repz
repz
inc
lock
outsl
sub
xor
roll
inc
sbb
and
mov
mov
xchg
xchg
js
add
es
cmp
inc
inc
fs
jbe
xor
stos
add
sub
add
fldt
leave
jge
xchg
aam
std
cmp
pop
mov
mov
ljmp
popf
mov
mov
out
mov
cmp
add
mov
repz
xor
sub
inc
pop
scas
xor
xchg
mov
inc
xchg
jbe
inc
loop
mov
movsl
fwait
dec
sarb
sub
jb
aam
push
es
cmc
pop
test
ret
cmp
xchg
push
xchg
pop
popa
push
aas
rcl
cmp
sbb
movsl
stos
sbb
mov
jbe
daa
in
stos
loopne
xor
sub
dec
sub
sbb
in
out
dec
mov
shll
pop
in
mov
mov
pop
sbb
sbb
out
mov
iret
and
cmp
xchg
insb
out
outsb
jecxz
ja
or
or
dec
add
fidivs
stos
iret
aaa
nop
inc
js
fsubl
sub
mov
cmp
mov
out
es
add
out
test
pushf
mov
mov
sbb
aas
pop
ss
jb
jnp
xchg
enter
dec
dec
push
adc
test
stos
ret
test
mov
inc
repz
sbb
pop
push
jne
xchg
push
rclb
test
inc
xor
insb
iret
mov
xor
dec
jmp
pop
test
pop
xor
pop
fmuls
or
lock
mov
mov
jo
mov
mov
push
ret
mov
or
jae
lds
jmp
dec
sub
xchg
xor
mov
cmp
pop
nop
out
iret
dec
lahf
in
ljmp
aam
adc
jno
pushf
pop
hlt
pop
add
sti
clc
xchg
setbe
stos
int
icebp
xor
inc
loopne
lret
daa
and
cs
push
mov
pushf
arpl
mov
adc
add
push
adc
cmp
loopne
in
insb
aad
mov
xchg
fimull
insb
adc
in
leave
shll
xorb
icebp
add
stos
int3
pushf
mov
xchg
mov
addr16
in
aam
stos
xor
inc
cmp
push
mov
mov
dec
push
sahf
xchg
inc
pop
std
jmp
xlat
test
sub
pusha
mov
xchg
jne
setg
dec
xchg
mov
sbb
dec
and
jnp
and
call
dec
pushf
imul
lock
loop
adc
lods
and
cli
add
int
xlat
pop
out
stos
int3
add
aaa
idiv
fmuls
cmc
in
mov
mov
ret
push
xor
xchg
xor
jg
xchg
mov
dec
rcrb
frstor
repz
ret
add
cmp
push
cmpsl
vmovhps
fmuls
test
cmp
jns
in
inc
sbb
test
sbb
imul
inc
add
inc
mov
mov
in
leave
pop
aas
fcomp
push
push
xchg
sub
mov
pop
stos
pop
or
mov
pop
lret
mov
xor
into
jg
ds
mov
fisttpll
out
add
fwait
js
pop
and
mov
jb
cli
cmp
rcrb
mov
sub
xor
cmp
mov
js
jg
jg
mov
jae
and
sbb
cld
cmc
pop
sub
add
cmpsb
push
jne
push
lock
jl
cwtl
mov
fldt
loope
test
and
pusha
mov
xchg
enter
and
xor
aad
mov
mov
pop
sti
xchg
scas
call
add
adc
enter
xchg
or
int
out
lahf
mov
xchg
mov
das
loop
dec
fmull
stos
clc
inc
adcb
loop
push
lds
jae
mov
and
sbb
sub
sub
inc
test
inc
xor
cwtl
es
jecxz
xor
mov
mov
out
test
pop
addr16
lea
rcrl
pslld
pop
jp
mov
daa
shll
xchg
lock
mov
inc
pusha
or
xchg
int
addr16
idivb
jbe
in
or
inc
and
repnz
fs
sbb
push
fisubs
call
pop
lods
xchg
jbe
push
sti
mov
push
push
or
pop
jge
stc
mov
and
ljmp
pop
jge
dec
mov
mov
data16
popf
enter
aaa
adc
pop
inc
inc
mov
mov
cmp
xor
test
sbb
sub
xor
mov
test
lret
cwtl
fldl
mov
mov
mov
stos
mov
pop
adc
jge
mov
push
mov
aad
and
dec
pop
insl
jge
test
push
iret
inc
cmpsb
mov
imul
lock
sbb
mov
popa
movsl
mov
stos
test
inc
cmp
imul
jb
cltd
ljmp
pop
pop
push
mov
mov
jmp
jl
stos
cld
int3
xchg
and
xor
fs
push
popf
popf
cmp
mov
das
xchg
mov
imul
or
gs
test
dec
xchg
in
fwait
pusha
loopne
inc
mov
mov
inc
int3
inc
and
xor
and
data16
mov
shll
cli
jo
fbld
inc
sub
insb
mov
dec
into
aad
add
and
gs
jg
mov
std
adc
jbe
fcmovu
out
cmp
fnstenv
iret
test
and
jle
cmpl
mov
movsb
push
ss
repz
mov
jns
mov
xchg
or
xchg
addl
push
jnp
jbe
jl
jl
or
lahf
mov
mov
test
mov
shlb
into
sub
add
stos
mov
sbb
sub
inc
xlat
mov
mov
push
push
sti
jb
cmpb
and
or
and
pop
mov
ds
add
add
mulb
mov
mov
inc
out
push
inc
les
test
mov
jl
mov
repz
mov
pusha
sarb
aas
xor
push
fwait
xchg
scas
adc
bound
adc
dec
pop
jno
shrb
push
push
sbb
jecxz
xchg
and
lcall
inc
das
out
fnsave
mov
cmp
pop
mov
cmpsl
fistl
jge
or
in
cmp
dec
mov
lods
test
and
es
adc
jae
popa
adc
jo
mov
out
adc
xlat
xchg
rclb
mov
sbb
adc
cmp
mov
xor
cs
incb
add
inc
push
xor
xorb
cmpsl
xor
cwtl
scas
fs
xchg
aas
jne
es
gs
sahf
cwtl
inc
popa
std
clc
ja
jge
addr16
nop
arpl
add
stos
inc
and
sbb
sar
inc
mov
stos
and
add
dec
push
cwtl
in
push
enter
push
insl
jns
xchg
adc
adc
pop
pop
das
nop
lea
sub
ret
mov
xor
mov
xchg
mov
push
mov
inc
jl
jg
push
jns
mov
inc
and
cmc
cmpsl
jecxz
lods
push
cmp
push
dec
std
jne
rorb
jae
insl
and
xchg
or
arpl
mov
jb
inc
add
outsb
lret
cmpsb
xlat
adc
dec
mov
pop
testl
mov
fisttpl
aad
negb
cmp
into
mov
sahf
aam
clc
std
xor
divl
roll
jno
icebp
mov
and
push
ss
scas
push
dec
add
aad
mov
rcll
fs
cwtl
pop
mov
sbb
movsb
es
cmp
rcrb
push
subb
adcl
gs
push
out
das
mov
out
mov
inc
xor
adc
or
or
nopl
aam
incb
or
lret
and
mov
push
scas
pop
xorb
jmp
inc
repz
outsl
mov
push
pop
inc
std
mov
cld
aas
mov
int3
pop
mov
push
push
fmull
mov
enter
mov
dec
sbb
jbe
inc
lcall
add
std
dec
cmpsb
das
add
ret
jbe
push
jmp
jecxz
pop
cmc
repnz
xchg
xchg
test
psubsw
lock
mov
cwtl
ret
mov
fnstcw
ja
jl
fsubrl
mov
adc
mov
add
or
out
xor
dec
loope
out
mov
out
mov
lock
cmp
adc
rcr
gs
xor
jb
rolb
push
inc
xchg
sahf
add
push
dec
push
out
pushl
push
aam
mov
ffreep
mov
ss
clc
pusha
mov
push
in
jae
sarl
lock
hlt
or
loope
rcr
imul
push
pop
mov
cltd
add
daa
xor
test
sbb
pop
daa
out
out
insl
lahf
push
sbb
push
mov
movsl
stos
mov
in
dec
ds
jmp
jns
sbb
int
pop
addl
lea
loope
sbb
push
rorl
pop
aaa
call
cld
mov
pop
push
cmp
sahf
push
xchg
icebp
repnz
mov
flds
pop
lret
dec
rol
pop
test
daa
call
mov
push
aam
std
std
orl
push
dec
jb
sbb
mov
mov
std
pop
mov
nop
in
mov
lds
cmp
push
dec
fdivr
xor
decl
jg
bound
call
push
das
iret
out
shrb
dec
xchg
ret
sub
cmp
cmp
mov
shll
mov
pop
add
mov
out
cmc
test
lods
xchg
mov
push
dec
push
pop
jle
cld
nop
xchg
mov
int3
push
jnp
or
push
ss
rorb
insl
add
inc
push
inc
out
pop
in
ds
mov
dec
xchg
stos
filds
bound
jnp
push
into
pop
cs
les
sahf
jo
adc
jg
fidivrs
pop
lret
add
mov
mul
ljmp
and
and
out
and
test
into
ds
sbb
mov
test
add
xchg
xchg
mov
or
xor
inc
mov
and
icebp
cmp
mov
mull
nop
je
in
das
nop
xlat
mov
push
xor
pop
add
pop
push
add
jns
stos
movsb
jmp
jmp
out
in
add
add
adcl
dec
mov
mov
lea
pop
call
fidivrl
das
push
push
fcmovnbe
xchg
add
jge
adc
cmpsl
mov
arpl
test
ficoms
cmp
stc
sahf
mov
push
dec
pop
sbb
xor
push
in
cli
jnp
mov
mov
inc
xchg
xor
jo
cmp
adc
mov
cmp
mov
leave
pusha
leave
outsb
loopne
cmp
shlb
sbb
dec
lret
jp
jle
or
pop
outsb
inc
orl
inc
jle
dec
addw
sub
xor
xchg
fbld
das
popf
cwtl
popf
mov
jecxz
xchg
xor
das
test
inc
xchg
cs
push
add
stos
adcb
xchg
in
int3
xor
cmpsl
loope
outsb
loope,pt
dec
sti
pop
mov
cld
dec
stos
pop
xchg
mov
adc
dec
ss
bound
jge
inc
loope
movsb
or
lock
push
aaa
dec
xor
pop
dec
adc
and
roll
inc
dec
pop
mov
jl
add
lods
ljmp
xor
sahf
dec
shlb
cmp
fcomp
mov
mov
adc
mov
inc
insl
jmp
ss
pop
stos
repz
pop
fsts
cmp
sbb
bound
fidivrl
inc
movsb
lods
aaa
jmp
and
add
lret
outsb
test
aam
mov
and
dec
push
inc
fs
mov
inc
pop
mov
jno
sti
pop
mov
sbb
xchg
outsb
hlt
sub
cld
pop
lret
sbb
jnp
cmc
mov
xor
das
inc
inc
gs
or
ja
cmpsb
std
push
mov
cld
and
push
jbe
jnp
mov
sub
jno
gs
pop
pusha
cmpsb
mov
sbb
mov
pop
xor
inc
inc
lods
jnp
add
pop
pop
dec
pop
push
jbe
mov
xor
add
add
push
daa
out
mov
sub
aaa
in
div
mov
lret
mov
sbb
xchg
fbld
push
jmp
pminsw
ud1
dec
sub
mov
jns
insl
sub
sahf
insb
inc
xor
sbbl
pop
jbe
enter
enter
xchg
cwtl
mov
sbb
in
std
imul
add
and
bound
sbb
fistps
inc
push
xor
bound
or
gs
ljmp
fsts
cmp
hlt
test
stos
fstps
arpl
loopne
xchg
xlat
movsl
fwait
add
add
fcompl
push
sub
stos
popf
bound
aam
mov
xor
or
inc
xchg
cli
insl
dec
sti
dec
adc
lds
xchg
std
fs
lcall
sub
cmp
repz
cmpsl
mov
lret
lret
cmp
lock
in
call
bound
pop
lods
push
and
je
dec
lcall
xchg
and
aas
inc
inc
mov
pop
xchg
jne
or
sahf
dec
and
addb
hlt
xchg
cmp
loop
pusha
hlt
push
add
jbe
mov
xchg
ficompl
scas
xchg
lods
add
mov
mov
adc
int3
cmpsl
in
push
add
scas
and
mov
movl
popa
adc
popa
fistpl
sub
cmpsl
sub
adc
dec
fbstp
push
sbb
test
and
and
icebp
jbe
push
sahf
mov
enter
fdiv
xchg
sub
inc
mov
addb
dec
jle
jo
orl
dec
push
stos
adc
pop
xchg
mov
lret
inc
push
jge
fbstp
sub
inc
jl
pop
adc
dec
out
loope
inc
std
or
pop
lods
popf
push
sub
mov
xchg
and
cmp
mov
popa
add
dec
sbb
loope
int
pop
lahf
sbb
push
push
cwtl
icebp
cmp
xor
push
add
jp
scas
stos
push
pop
inc
mov
cmpsl
xor
sbb
mov
pop
cs
ljmp
sbb
mov
test
insl
sti
enter
lea
sti
inc
pop
ficoml
jge
aaa
int3
mov
imul
aam
jne
outsl
outsl
hlt
test
mov
sub
loopne
aas
lock
mov
fldln2
sub
adc
fs
push
imul
daa
xchg
inc
mov
jmp
sub
orb
dec
xor
xor
sbb
rcrl
xchg
push
lock
popf
lock
or
pushl
aad
adc
xchg
popa
add
notb
adc
inc
stos
jle
cmpsl
mov
push
xchg
inc
insb
mov
inc
cmp
jmp
mov
xor
loope
mov
std
mov
lea
cmp
jmp
adc
adc
pop
dec
jmp
lcall
inc
in
push
jmp
mov
dec
push
sbb
repnz
jbe
pop
inc
xorl
inc
mov
xchg
sti
cld
cmp
dec
jl
xchg
dec
push
in
idivb
into
and
je
in
jns
cmpsb
cmp
or
push
jle
sub
cmpsl
inc
xor
lcall
jge
loopne
je
lret
or
cmpsb
imul
out
sbb
inc
sahf
clc
fimuls
sbb
stc
pop
push
dec
jecxz
sub
mov
mov
sbb
jbe
out
imul
or
cmp
sbb
roll
sub
orl
jmp
or
aas
xchg
cmp
dec
cld
insl
stc
adcl
popl
xchg
cmp
pop
fdivrl
dec
sub
into
jecxz
or
lahf
stc
xchg
push
fnclex
leave
in
xchg
pop
and
scas
imul
jecxz
cltd
jl
sahf
call
mov
rcll
out
leave
lret
sub
outsb
lods
pop
aas
rcl
movsb
std
sbb
xchg
pop
in
sarb
ret
sub
push
adc
mov
mov
sub
jge
push
or
sub
mov
mov
fisubrl
xorb
int3
dec
mov
mov
cli
jnp
loope
popa
cmp
in
jmp
cmp
add
cmp
imul
fucomip
mov
es
inc
sbb
scas
adc
jmp
sbb
push
sbb
shr
xchg
and
call
rcl
inc
lods
aad
pop
movsb
mov
jp
mov
pop
add
push
sahf
in
mov
lcall
cs
or
inc
dec
sub
sub
mov
out
mov
pop
mov
aad
dec
pushf
out
and
ret
adc
mov
rcrb
fstpl
and
fistps
out
mov
or
and
mov
out
adc
dec
inc
xlat
lods
sbb
ret
mov
testb
pop
fisttpl
in
in
push
jmp
clc
lret
jle
loope
ret
and
daa
jmp
sti
movsb
pop
xor
or
fistps
imul
fmull
or
add
aas
adc
daa
jg
cmp
or
xchg
or
mov
and
adc
push
or
out
in
lcall
in
loopne
filds
shll
mov
sbbb
push
pop
or
or
sub
ljmp
mov
cmc
xor
mov
pushf
cmpsl
xor
mov
push
sub
out
adc
shlb
adc
push
mov
cld
insb
leave
loopne
inc
fwait
lcall
cwtl
loop
inc
scas
inc
fwait
outsb
inc
push
inc
adc
fcomi
cmpsl
dec
ljmp
fs
repz
jecxz
push
lcall
and
scas
jbe
and
fwait
jne
adc
jmp
inc
xchg
test
sub
cmp
cmp
or
push
push
jg
jnp
pop
inc
cli
or
sbb
pusha
xchg
test
inc
sbb
xor
dec
cmc
lret
inc
pusha
jb
jle
ds
xchg
sbb
ficoml
cs
add
sub
jmp
jp
add
adc
mov
insl
gs
mov
adc
mov
rcrb
mov
pop
add
cli
in
and
pop
insl
lcall
aad
int
push
aas
and
inc
aam
dec
imul
and
inc
inc
insl
lods
test
test
aaa
sbb
lods
sbb
mov
xor
insl
or
ds
cltd
jne
sub
jae
loop
filds
ret
popf
data16
fmuls
lret
lods
fdivl
add
test
adcl
mov
outsl
test
mov
lret
pop
inc
lret
sub
mov
jge
repz
cmp
das
sub
mov
jns
aas
sbb
mov
mov
pop
loop
mov
sarl
movsb
loope
and
movsl
jno
in
idivl
pusha
sub
cmc
mov
cmpsb
daa
dec
sub
lret
out
xchg
xchg
mov
sarb
xchg
inc
shrl
push
adc
pop
push
in
push
and
into
mov
adc
hlt
inc
pop
dec
jl
fucomi
xor
lahf
bound
fs
lret
sub
fadds
mov
push
ss
cli
xor
fcoml
iret
movsb
fnstcw
mov
jmp
adc
popa
add
mov
add
mov
xchg
add
push
popa
sar
jne
push
fs
add
clc
xor
jmp
and
jg
fmuls
adc
cmp
mov
out
xor
xor
fdivs
and
dec
fucomip
push
push
call
xchg
dec
setle
imull
xor
mov
lret
sub
outsb
jge
insl
sarl
lret
aam
movsb
leave
dec
int3
fdivl
outsl
repnz
push
adc
xor
mov
in
fs
rcrl
dec
addl
push
and
xchg
shlb
pop
stos
adcb
mov
js
mov
xchg
and
sub
nop
jl
xchg
es
cld
lret
jno
into
in
dec
dec
clc
cmpsb
jb
mov
fldt
inc
push
mov
lcall
test
imul
aam
fisubl
xchg
mov
push
arpl
or
push
sbb
push
repz
ss
jnp
sub
cmp
jb
icebp
lret
or
xor
jg
pop
mov
jp
xchg
into
mov
lss
icebp
dec
out
into
daa
ret
test
sub
mov
xchg
pop
pop
push
rolb
pop
popf
dec
or
or
jo
int
test
scas
aas
lcall
lods
mov
outsl
mov
aas
push
je
in
roll
ljmp
xlat
and
mov
jle
adc
fcomps
iret
jo
cmp
movq
add
jge
in
sbb
cmp
cmp
jns
aam
adc
cld
inc
inc
dec
sbb
inc
cmpsl
fisubs
mov
shr
ds
cmp
js
or
hlt
dec
pop
lcall
fs
cli
xlat
fs
dec
xchg
aam
cmp
xor
loope
adc
sub
cmp
aaa
fldenv
sahf
sbb
fcompp
dec
std
stos
inc
pop
rorb
mov
scas
inc
adc
sahf
stos
aam
mov
xor
adc
mov
add
cltd
inc
xor
and
jg
add
subb
push
cld
cmp
and
xor
adc
sub
popf
loop
xchg
mov
sbb
add
insl
aas
das
xacquire
outsb
mov
scas
cmp
or
dec
insb
pop
lea
dec
and
ret
decl
test
mov
xchg
cmpsb
in
arpl
sti
lock
sahf
xchg
dec
jo
ret
call
jg
xchg
aad
and
jmp
pop
jle
je
jmp
out
xchg
loop
adc
inc
push
jecxz
sbb
loopne
faddl
insb
jle
stos
mov
test
mov
mov
fnsave
mov
clc
adc
fwait
arpl
pop
xlat
out
push
and
pop
insb
sti
gs
mov
sub
ja
in
je
xchg
and
addr16
lahf
jge
out
or
shll
mov
and
adcl
mov
mov
pop
int3
jmp
push
mov
imul
cmp
pop
xor
xchg
fcmovnu
pop
add
mov
push
arpl
xlat
mov
mov
bound
xchg
mov
push
sbb
push
divb
jl
addr16
and
sub
leave
mov
stc
push
jns
fadds
popf
or
pop
mov
icebp
inc
jns
lcall
popf
xor
fdivrs
mov
mov
mov
and
push
shll
jns
lahf
lcall
cmp
jno
push
popf
add
or
pop
pop
daa
pop
enter
mov
lahf
xchg
mov
test
es
lret
xor
push
mov
cmpsb
lret
fwait
and
xorl
jecxz
mov
add
lock
inc
pop
aaa
push
fbstp
jecxz
icebp
xor
pop
lahf
shll
add
sbb
popf
adc
fwait
sbb
xchg
push
sub
test
pop
add
xchg
or
cwtl
cmpps
jmp
pop
xchg
inc
call
outsl
push
shr
out
insb
fdivrl
mov
leave
lret
out
leave
xor
cltd
into
ja
jp
popa
ret
xor
in
fs
les
ja
mov
cld
hlt
jbe
les
data16
sbb
and
jle
jge
sbbb
enter
inc
add
and
ret
stos
popf
xor
fnstsw
int3
dec
add
pop
xchg
shll
dec
xor
sub
jne
mov
shlb
inc
push
xchg
cmpsl
inc
xor
mov
push
out
fldlg2
into
jp
add
sti
xchg
fsubs
and
notb
bound
pop
iret
ss
idivb
lods
and
push
xor
mov
xchg
fadds
rorb
xor
cwtl
subb
pop
adc
push
hlt
mov
stos
or
jg
call
js
lret
mov
mov
push
adc
mov
xchg
imul
dec
adc
add
jno
cmp
or
mov
rclb
jmp
cltd
inc
loope
inc
push
push
and
cmpsb
lock
fs
jle
adc
shlb
gs
popa
cld
shrb
add
sub
mov
jmp
pop
xor
out
imul
jle
and
fcomp
pop
push
sbb
popa
cmp
insl
and
sbb
pushf
repnz
pop
in
push
jae
pop
mov
xor
pop
jecxz
mov
xchg
jns
mov
cmpsb
jbe
rolb
pop
imul
scas
clc
cs
add
lea
ljmp
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
.byte
ret
das
out
inc
ss
lea
inc
out
pushf
ja
out
ret
arpl
test
xchg
or
lods
test
je
lods
dec
mov
mov
mov
and
push
xor
xor
pop
pop
mov
mov
push
push
cmp
sub
sbb
in
movsb
or
jae
shll
repnz
xor
pop
ja
and
out
mov
pushf
cmp
jge
lods
into
mov
xor
sub
jb
sbb
xchg
mov
add
out
ljmp
mov
insl
pop
and
aam
test
and
cmp
aaa
arpl
jb
pop
das
sti
roll
lcall
cld
jecxz
or
and
mov
mov
cmp
xorb
pop
in
jne
lahf
ss
jns
dec
fdivs
push
inc
jecxz
dec
pop
xchg
lds
jbe
mov
popa
fldenv
jl
push
dec
mov
add
add
mov
push
daa
ljmp
shrb
adc
ret
xchg
enter
mov
xor
mov
lods
lea
flds
fsubr
aas
pop
mov
jnp
push
repnz
negl
cmp
dec
outsl
decl
push
lods
cmpsl
pop
pusha
test
mov
frstor
jo
add
lods
mov
and
popf
push
ljmp
jnp
iret
fcompl
fmul
pop
or
or
lahf
pop
xchg
cmp
insl
testb
mov
fdivl
stos
enter
icebp
imul
adc
sbb
int
inc
inc
or
lea
cmp
inc
sbb
lahf
lods
into
xchg
mov
push
cmpsl
cmpsl
pop
pushf
jb
adc
stos
arpl
nop
popl
sbb
cwtl
addl
mov
int
xchg
mov
push
int
and
insl
loop
cmp
shl
push
sub
iret
sbb
mov
pushf
jne
clc
std
aad
cmp
movsl
daa
mov
fnsave
lahf
sub
fisttpl
lcall
dec
in
imul
call
jmp
push
pushf
lods
push
je
push
test
adc
mov
xor
stc
adc
xor
adc
mov
popa
sbb
icebp
sub
in
adc
cmpsl
test
xor
lods
push
repz
repz
clc
and
push
out
inc
dec
mov
xor
cld
cmp
into
dec
in
sbb
inc
repz
pusha
rcrl
rclb
cs
jb
sub
xchg
fs
idivl
adc
add
adc
daa
mov
jl
hlt
xchg
inc
insl
jo
test
mov
and
daa
jmp
jg
jecxz
in
xchg
enter
lock
push
or
push
ja
js
shrb
stos
mov
shl
adc
jecxz
cmpsl
and
nop
add
mov
sbb
push
mov
xlat
sub
imull
jge
mov
in
sub
dec
pop
adc
aad
aam
cmp
pushf
sub
and
out
dec
sub
arpl
pop
in
pop
sub
loope
mov
jnp,pn
cli
call
icebp
jmp
jmp
test
dec
inc
pop
sub
data16
imul
test
xor
cmp
frstor
rorl
out
repnz
and
leave
mov
je
das
adc
and
bnd
sbb
dec
dec
addb
cld
xchg
xlat
fistl
loop
mov
adc
in
bound
mov
lea
pop
pop
stos
test
into
enter
mov
xchg
mov
pop
arpl
daa
in
mov
ror
aam
pop
shrb
jo
test
mov
jnp
out
in
leave
mov
jne
mov
sbb
aad
shll
mov
pop
sub
xor
and
out
js
scas
pushf
pop
sbb
add
jmp
jg
cmpb
call
mov
xchg
sub
repnz
out
cmp
les
add
mov
dec
xchg
or
jp
mov
jge
addr16
test
adc
fwait
lods
gs
unpcklps
inc
add
xchg
mov
rcrb
jl
in
adc
mov
ret
push
sub
ljmp
enter
mov
out
xorb
rcrl
sbb
das
jmp
xchg
ficompl
data16
imul
leave
shl
dec
adc
push
xchg
xor
pop
dec
or
sub
or
cmp
push
outsb
fildll
inc
lds
movsb
sbb
push
jb
push
cltd
push
inc
jbe
dec
lods
jae
mov
inc
mov
dec
aad
out
adc
inc
es
mov
movsb
cmp
dec
mov
enter
mov
mov
mov
outsl
push
sub
cmpsl
adc
fwait
jnp
aad
movsl
mov
gs
idiv
fistpl
dec
lret
icebp
mov
xchg
jg
mov
scas
mov
inc
cmp
ljmp
pop
jo
sub
stos
sarl
xor
ss
aaa
imul
lock
mov
jo
enter
sub
fisubs
mov
sub
out
xchg
xchg
sarb
int3
jmp
pop
test
mov
popf
sub
popa
js
rorb
xchg
pop
inc
sbb
adc
push
out
xor
int
decb
jp
push
cmc
pop
std
dec
jmp
enter
rcl
push
dec
xchg
fiadds
inc
pop
out
xor
pop
imul
lret
mov
push
out
mov
jne
cmp
cmp
orl
inc
iret
enter
aam
cmp
pushf
adc
movsl
sub
aad
dec
lods
rcrb
fwait
ja
or
clc
and
rolb
andb
cli
cltd
xor
xorb
das
mov
mov
push
xchg
cmp
pushf
dec
lock
jp
out
fdivrs
xchg
jl
icebp
mov
xor
lcall
sub
enter
inc
cmpsb
xchg
lretw
adc
push
pop
add
arpl
mov
ss
in
and
mull
mov
xor
push
movsl
pop
mov
int
les
jle
push
push
nop
inc
imul
jo
movsb
test
sub
fisttpl
sbb
inc
mov
pop
jno
mov
inc
xchg
movb
in
push
ds
or
call
outsb
into
xor
pop
insb
ror
mov
sbb
mov
mov
loope
test
xor
jns
ljmp
inc
sub
pop
lods
jmp
adc
mov
xchg
xor
loope
mov
movsl
loope
cli
jecxz
pop
movsb
dec
fcoml
adc
imul
xor
mov
shll
stos
cmp
mov
jp
cmp
mov
adc
inc
xor
lret
in
dec
xchg
pcmpeqw
pop
fs
pop
out
sahf
mov
lret
aad
orb
imul
xchg
push
loopne
push
push
xchg
sahf
roll
stc
xchg
dec
cmpsb
push
jp
repz
adc
sub
movsb
shlb
dec
lock
hlt
movb
inc
cmp
xchg
or
ss
pusha
push
jecxz
loop
cmp
mov
sti
outsb
out
add
scas
and
daa
sbb
cmpsb
loope
fstpt
mov
mov
xor
loopne
cmpsb
fs
pop
push
pushf
bound
outsb
test
push
lcall
push
jno
xchg
cmp
or
je
ljmp
test
cmp
mov
xlat
add
cmp
cwtl
dec
lret
int3
movsb
xchg
cli
stc
fdivs
daa
push
out
loop
fisubs
adc
bound
mov
pop
inc
and
cmpsl
imul
imul
sbb
xor
jecxz
icebp
xorb
adc
stos
sub
or
mov
cmp
aad
jmp
pop
js
mov
hlt
out
push
lods
es
fadds
push
lcall
test
data16
ds
repnz
xchg
mov
ror
call
xchg
cmpsb
sub
cmpsb
sub
repnz
push
insb
pushf
xor
fwait
push
daa
aaa
stc
fisubrs
int3
imul
test
push
test
add
jno
ljmp
cmpsb
inc
in
daa
mov
xchg
in
push
inc
and
stc
sbb
add
dec
pop
mov
and
adc
std
xchg
lds
bound
in
sub
push
pop
aaa
xchg
lret
or
pop
ja
mov
xor
insb
test
xlat
add
std
daa
mov
cwtl
insl
fstp
iret
mov
xchg
fcompl
dec
in
adc
xor
in
in
clc
inc
sub
sbb
insb
adc
mov
scas
std
je
in
dec
lahf
jne
loopne
pop
test
and
adc
gs
fsubrl
xor
aam
ss
je,pt
pop
push
xchg
das
stos
or
inc
add
xor
pop
inc
xchg
xorl
std
daa
mov
sub
pop
mov
push
fwait
dec
mov
test
push
adcb
imul
mov
jnp
mov
add
adc
daa
dec
testb
lods
inc
pop
sbb
cmp
stos
push
dec
out
sbbb
repz
push
or
push
fldl
sbb
insl
ret
imul
cmp
icebp
inc
cmp
pop
scas
aaa
mov
cmc
xchg
fnsave
leave
movsb
adc
cmp
xor
sbb
inc
and
decl
push
jl
out
pop
insl
xchg
outsl
dec
cmpb
call
repz
pop
pop
xor
add
push
sahf
repz
mov
push
sub
decl
or
or
sub
inc
mov
mov
push
adc
inc
sub
jge
cwtl
cmp
sub
push
out
cli
lock
popf
stos
pop
pop
inc
in
mov
mov
je
in
nop
popf
mov
cmpsb
xor
adc
imul
scas
sub
std
mov
cwtl
test
mov
es
add
in
movsb
jg
xlat
cld
flds
rcrl
mov
addr16
popa
cli
mov
out
out
ss
cmp
outsl
data16
dec
arpl
push
sub
fistl
sbb
sub
inc
jl
cltd
cld
inc
and
cwtl
out
jno
jle
add
dec
rol
add
sub
pop
and
inc
cmpsl
push
out
mov
mov
dec
xchg
fidivrs
xchg
add
cmp
in
fdivrl
popa
pop
mov
xor
insb
xlat
jnp
cmp
and
mul
stos
es
pop
stc
and
scas
or
dec
fstpt
aam
test
xchg
xor
mov
aam
shlb
adc
test
out
ret
jo
sub
fwait
cwtl
xchg
insb
test
sbb
out
sbb
inc
mov
test
adc
movsb
pusha
adc
lret
xor
and
out
std
xchg
inc
leave
mov
fisttpll
call
movsb
mov
shl
scas
adc
mov
fildll
pop
cmp
add
push
xor
lock
jns
or
ficoms
jl,pt
loope
dec
and
jp
ret
or
rorl
sbbb
incb
mov
in
lret
aaa
cmpsl
out
sbb
imul
fstl
movsl
lret
in
dec
or
push
out
jmp
inc
inc
dec
repnz
push
pushf
dec
enter
mov
testl
sub
das
gs
daa
in
xlat
sbb
shlb
orl
jne
adc
pusha
or
inc
pop
mulb
xchg
cmpsb
fdivl
pop
and
xchg
dec
loope
pop
or
xchg
iret
jns
xchg
inc
pusha
or
and
mov
jp
mov
lret
ror
insb
xchg
xchg
cmp
lods
into
scas
enter
notb
insb
in
mov
pushf
add
or
mov
xor
icebp
or
aam
and
popa
adc
mov
jnp
and
sub
mov
push
dec
ds
pushf
pop
mov
mov
je
fcmovne
xlat
fs
fsubrp
push
sub
movsb
or
ss
rdtsc
pop
js
and
add
add
out
xchg
ret
stos
adc
xlat
aaa
orl
jecxz
repnz
insb
pop
cwtl
pop
iret
mov
mov
sub
or
cmp
fwait
sbb
dec
cmp
push
notl
jns
shl
or
jmp
sub
jmp
icebp
adcb
push
sbb
mov
inc
xchg
dec
loopne
ljmp
insb
adc
outsb
movsb
pop
sbb
cmp
dec
sub
test
fadds
aam
fs
sarb
mov
shrl
and
test
mov
leave
out
sub
push
in
xor
loopne
ficomps
cs
int3
leave
les
outsl
aam
dec
jnp
dec
std
filds
cmpsl
out
fs
cmp
movsb
jge
sub
imul
icebp
arpl
mov
mov
push
xchg
gs
hlt
add
jge
mov
pop
in
lods
out
add
push
insb
inc
push
inc
sbb
xor
cwtl
xorl
decb
clc
xor
mov
fbld
jg
in
mov
cmp
cmp
sbb
or
cmpsw
lea
jge
xor
aaa
jp
and
in
mov
mov
adcl
mov
lea
xlat
and
ror
add
jne
xlat
push
stos
fistps
add
pop
jmp
adc
bound
rcr
sub
test
stos
out
cli
xor
lret
jp
jo
jb
jnp
jp
lret
add
in
icebp
xor
mov
sbb
out
enter
stc
cmp
in
ss
enter
sbb
scas
icebp
test
pop
add
cltd
fs
mov
aad
fldenv
jae
add
mov
push
mov
push
mov
xchg
jmp
mov
iret
inc
add
and
fiaddl
pop
dec
stos
in
mov
cmp
cmp
cli
sub
adc
mov
mov
mov
int3
dec
inc
push
mov
xchg
or
cli
pop
and
inc
dec
loop
mov
out
or
adc
xchg
insl
orl
pop
pop
clc
mov
movsl
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
.byte
ret
das
xchg
dec
popf
and
mov
dec
xchg
inc
cmp
mov
ret
imul
test
fsubrl
cmpl
or
jg
inc
mov
call
std
sbb
inc
jp
rorb
jg
push
movsl
sbb
ja
sub
add
jne
sbb
bound
sbb
ljmp
bound
mov
mov
cmp
or
les
mov
dec
sahf
clc
inc
neg
popa
pop
stos
cmp
mov
inc
ds
jle
xlat
outsl
insb
dec
sub
jecxz
rolb
mov
jle
gs
daa
arpl
imul
dec
movsl
rcl
lcall
out
sub
pop
cld
cwtl
rol
xchg
sbb
not
xchg
mov
loop
mov
cmpl
xchg
call
jo
mov
push
jp
mov
sahf
xchg
aas
out
mov
sbb
sub
imul
add
cmc
mov
mov
mov
inc
lea
arpl
cld
pop
inc
rcr
cld
stc
lret
leave
jo
sub
xchg
js
jmp
lods
cwtl
nop
sbbl
push
mov
sub
add
push
pop
add
sub
push
outsb
out
out
cmp
cmp
data16
or
mov
dec
add
and
xor
fsts
push
shll
iret
pop
addl
mov
pop
sub
stos
pop
jne
xchg
lods
xchg
cmpsl
jl
fstpt
imul
jmp
inc
push
jnp
cmp
cs
sub
adc
cmpb
inc
pop
xchg
dec
loope
out
push
es
xchg
fwait
aad
mov
jno
out
xor
inc
pop
in
pop
pop
cmp
sbb
leave
push
jecxz
inc
arpl
adc
orb
mov
adc
lods
and
and
loopne
nopl
jo
ret
adc
add
inc
push
xchg
mov
and
pop
push
dec
mov
mov
mov
mov
inc
push
repnz
in
cmp
pusha
push
cmp
into
inc
mov
inc
adc
mov
pop
loopne
js
cmp
loope
jnp
je
outsl
push
in
out
repz
jge
pop
out
fidivl
js
add
mov
int
or
pop
testl
lods
aaa
pop
adcb
or
sti
and
pop
ficoml
fsubrl
ds
sar
xchg
or
subb
movsl
mov
mov
out
xchg
xor
dec
outsl
mov
rorl
repz
mov
mov
fwait
sbb
psllq
sbb
inc
add
das
push
and
orb
adc
pop
xlat
dec
mov
out
pop
mov
mov
or
lcall
jo
les
pop
vmovhps
dec
mov
adcl
out
ret
inc
mov
out
adc
pop
ret
cmp
dec
push
repnz
cltd
test
mov
push
stos
adc
add
sbb
pop
jns
xorl
jnp
sbb
push
popa
xchg
test
and
stos
sub
xchg
arpl
sub
and
rorb
gs
subb
sbb
mov
dec
sub
pop
mov
jg
call
scas
inc
out
push
jne
cs
lods
sub
aas
sub
in
imul
and
dec
repz
cmp
pop
or
push
mov
lods
sub
pusha
clc
mov
mov
ja
xchg
sti
sub
mov
cmp
popa
and
cmp
decl
mov
sub
jo
inc
inc
das
cltd
push
fcoms
sub
sub
dec
mov
outsb
mov
mov
inc
lret
or
imull
and
adc
cmp
or
roll
leave
out
push
test
arpl
mov
cmp
notb
jbe
xchg
push
int3
or
sbb
test
testl
xor
xchg
inc
sub
out
push
dec
iret
mov
mov
bound
jne
xor
sub
fdivrl
stos
jo
jbe
push
test
daa
jno
orb
inc
and
arpl
movsb
and
bound
scas
and
lahf
mov
push
cmp
les
out
sbb
push
mov
in
cmp
dec
loopne
ss
scas
mov
jge
inc
mov
mov
adc
mov
sub
arpl
cli
inc
push
in
or
jns
mov
inc
stos
cld
pop
movsl
mov
sbb
xor
xor
lock
lods
mov
jmp
jb
jno,pn
add
xor
call
rcrb
inc
js
xchg
jo
jne
and
insl
mov
cmp
int3
cmpsb
pop
lahf
imul
imul
push
add
outsl
add
mov
or
push
cmp
addb
stos
mov
push
jmp
insl
das
test
or
dec
mov
cmp
and
lock
js
fimull
ss
aaa
andb
test
bound
lret
push
call
dec
mov
pop
jl
jecxz
and
xchg
mov
out
sarl
jns
sub
adc
mov
mov
jo
and
rorb
aad
sbb
pop
push
fs
leave
jge
mov
fdivl
incl
inc
or
fnstenv
pop
or
jno
and
jae
lods
mov
mov
xor
sub
sahf
xchg
std
pop
pop
and
mov
sbbl
cmp
pop
ret
pop
mov
push
idiv
cli
jno
add
cmpsl
inc
and
imul
fcomi
icebp
not
icebp
push
or
inc
sub
add
sub
push
adcl
repnz
mov
rorl
mov
rcr
fstpl
or
pushf
mov
jnp
adc
popl
cmp
xor
cmpsl
cmp
ss
mov
mov
mov
push
clc
xchg
cld
out
cld
xchg
or
lret
stos
cs
cmp
into
lcall
xor
mov
loop
jl
xchg
insb
aam
cmpsl
xchg
fcomps
lret
mov
icebp
outsl
xchg
ja
xchg
jo
and
dec
clc
lods
cmpsl
leave
mov
push
add
jecxz
cmp
xor
xchg
arpl
cmp
ret
mov
ret
xchg
movsl
stc
lods
xor
loope
popf
xor
dec
repnz
and
cmp
in
xor
dec
dec
cs
sub
pop
test
mov
push
sarb
mov
orl
out
pop
popw
fs
lds
mov
inc
mov
test
xchg
loop
jo
or
or
outsl
push
pop
mov
xorb
out
mov
fwait
cmpl
jp
sbb
lea
fadd
mov
imull
jmp
mov
ja
addr16
xchg
ss
inc
inc
lods
inc
push
add
cs
addl
in
sub
pop
cwtl
mov
daa
pop
push
popa
aad
aad
hlt
stos
push
xchg
gs
popa
cmp
sbb
adc
adc
test
stos
and
mov
mov
sahf
scas
shrb
lahf
rcll
pusha
xchg
repz
push
repz
pop
push
dec
int
sub
xor
gs
iret
sbb
fldl
xor
cwtl
sbb
lods
lret
push
lods
pop
xor
push
xchg
inc
inc
shr
mov
sti
fidivrs
cli
push
ja
xchg
or
sub
mov
inc
pop
mov
sbb
xor
add
sahf
pop
sahf
aad
pop
dec
repz
xor
mov
pop
xchg
mov
and
ret
cld
pop
mov
call
add
xlat
arpl
out
inc
shlb
xor
sbb
or
mov
xchg
test
and
fwait
pop
sbb
adcl
cwtl
in
sbb
mov
aas
cltd
jno
lods
filds
rcrb
xor
xor
out
push
jo
sti
adc
stos
int
dec
and
pop
sub
lret
inc
loope
aad
push
call
mov
push
mov
cwtl
loopne
sub
je
stc
jp
inc
add
in
jecxz
xchg
lods
les
test
imul
popf
or
idiv
insb
repz
ja
push
loop
stc
sarb
push
cwtl
lds
push
xchg
sub
pop
and
lock
pop
jp
add
or
cmc
sub
daa
push
or
lock
sbb
sarl
icebp
xchg
dec
call
shlb
mov
shr
insl
and
lock
into
leave
les
mov
data16
mov
and
lods
cld
jge
sub
mov
inc
pop
xlat
sbb
dec
js
cltd
sbb
inc
mov
mov
push
jecxz
ficomps
iret
adc
push
mov
cmpsb
fildll
scas
ficompl
shl
jns
fucom
push
pop
mov
fldt
clc
ret
cwtl
test
or
inc
sbb
jno
out
xchg
inc
dec
loope
lea
xlat
sub
dec
mov
xchg
and
frstor
add
iret
xchg
xchg
or
fsubs
lods
ja
jne
fcmovnu
int
dec
pop
cmpsl
cwtl
test
iret
aaa
repnz
ret
scas
stc
popf
cld
and
enter
lcall
js
mov
orb
mov
sub
lds
hlt
ss
push
andb
jge
inc
fdivrl
ret
test
lcall
mov
lret
and
hlt
das
cltd
inc
test
stc
divl
das
fs
push
pop
xor
in
lock
xor
dec
fwait
cmpsl
sub
inc
pusha
sub
ret
mov
cli
adc
fs
cltd
call
jne
addr16
sbb
rolb
add
push
pop
adc
mov
js
and
or
out
mov
mov
mov
rolb
sbb
insb
mov
cmpl
nop
imul
push
jae
jmp
fidivs
cli
jmp
std
jg
push
in
xorl
sub
jecxz
adc
and
int
imul
push
shrb
jle
dec
adc
les
cmp
jl
jbe
pop
push
sbb
pop
sahf
push
and
dec
or
subb
xorb
mov
fs
mov
push
subl
xchg
mov
insb
xchg
dec
cmpsl
push
mov
mov
arpl
imul
xor
cmp
jns
ss
sbb
insl
dec
out
jp
jecxz
jbe
call
inc
inc
jp
aad
push
scas
cmc
iret
movl
and
lods
fstps
stc
int
add
jne
xchg
mov
fs
pop
sti
cld
mov
clc
int
push
leave
jmp
ss
jne
jnp
add
mov
ss
xchg
jl
daa
lret
mov
xor
add
mov
mov
sbb
jmp
loope
add
jmp
rcrb
and
loop
dec
xor
sub
inc
fsubs
loop
cmp
stos
dec
mov
jo
push
repnz
insl
sub
pop
dec
jno
int
xchg
xchg
insl
add
mov
bnd
adcb
mov
sarb
rcrl
test
and
stos
jl
js
out
stos
cmpsb
push
mov
push
cmp
and
cmp
lcall
out
lcall
bound
xor
insl
push
shlb
mov
dec
push
dec
push
in
in
leave
ficoml
stos
jbe
decl
movsb
into
mull
pop
xchg
jno
jmp
jmp
mov
push
out
xor
fldt
inc
cltd
andb
inc
nop
cwtl
jge
out
enter
imul
xchg
cmp
inc
pop
mov
aad
jle
add
outsl
lods
or
jecxz
add
movsb
cmp
aas
or
ficoml
mov
in
std
mov
js
lret
lock
dec
imul
test
push
icebp
xor
pop
dec
insb
sbb
ds
in
mov
pop
cmp
xor
or
lock
pop
pop
cltd
data16
dec
cmpsl
int3
call
cmp
daa
jo
iret
dec
push
arpl
fwait
mov
pusha
sbb
fiadds
lds
mov
adc
or
addr16
cmp
xor
sub
sbb
adc
dec
outsl
js
outsl
addl
stc
int
bound
add
das
push
stos
cmpsl
scas
dec
lods
push
adc
aad
mov
mov
fcmovnbe
in
add
mov
fildl
test
pop
fdivr
mov
stos
dec
pop
dec
fiaddl
lcall
add
std
pop
imul
cmpsl
mov
mull
aaa
jns
dec
xchg
adc
adc
ss
or
imul
fsts
sub
aaa
lret
sbb
lret
stos
push
inc
pushf
cmpsb
ja
loopne
cmp
scas
push
xchg
les
sbb
les
cmp
repz
pop
out
mov
sti
scas
and
adc
lea
jne
add
movsb
andb
push
out
insb
and
jecxz
mov
sbb
out
cltd
sub
cli
mov
sahf
fisubs
addl
aas
or
inc
cmp
not
xor
push
arpl
daa
xor
mov
insb
pop
cmpsl
addb
xlat
mov
or
aaa
filds
ret
xchg
repz
dec
jp
leave
and
xchg
sbb
adc
pop
adc
inc
adc
arpl
imul
push
add
jne
mov
add
pop
das
or
test
cld
add
fildll
mov
adc
pop
jecxz
int3
aaa
out
and
sub
sahf
adc
push
sahf
sub
sbb
bound
pop
xchg
dec
and
push
or
mov
mov
enter
ret
shlb
pop
fs
cmpl
test
jle
dec
jl
outsb
push
shrl
inc
push
addr16
mov
mov
sbb
scas
pop
gs
sub
pop
cs
pop
pop
mov
push
lods
in
fdivl
stc
pop
lods
in
lea
mov
lret
sbb
xchg
and
cmp
fisttps
arpl
in
andb
inc
cmc
mov
dec
jnp
or
scas
pop
pop
and
sbb
jo
sub
pop
pushf
fs
fdivp
test
mov
pop
mov
mov
test
cmp
sub
ljmp
loope
sbb
lfs
incb
lds
repnz
dec
stos
push
hlt
mov
and
push
push
enter
cmp
add
call
lret
pop
jae
sbb
pop
cmp
lret
jns
jl
jmp
mov
incb
push
out
subb
push
stc
mov
pop
cmp
mov
xchg
lret
hlt
icebp
in
and
inc
les
xor
rep
lods
mov
aaa
sbb
fidivs
adc
lret
ljmp
popf
sub
jae
jecxz
or
or
repnz
adc
dec
pop
xor
stc
int3
fdivs
lret
fbstp
movsb
movsl
mov
jmp
jnp
int3
cwtl
lods
data16
mov
fldcw
add
push
test
or
dec
in
mov
xchg
les
inc
daa
mov
dec
mov
mov
mov
push
rorb
sub
jecxz
cmpsl
and
push
sahf
jecxz
cmpsb
jle
xchg
movsb
test
push
pop
add
outsl
dec
fnstcw
icebp
stc
sub
sbb
or
mov
call
lret
sub
or
out
mov
sbb
rclb
and
push
addb
and
insb
sub
inc
out
xchg
cmp
xchg
ds
jbe
in
dec
lahf
insb
pop
movsl
insb
mov
sbb
test
cmp
pop
xchg
fdivs
out
jle
dec
mov
and
bound
push
pushf
ret
stos
or
clc
dec
add
inc
pop
movsb
dec
inc
jns
ss
ds
or
pop
push
enter
push
mov
clc
cmp
mov
jl
std
sbbb
or
mov
cld
fs
lcall
lods
test
mov
fs
push
push
rorl
in
mov
and
test
jg
xchg
ljmp
mov
jnp
fnstcw
fnclex
adc
xor
mov
cmp
in
adc
xchg
add
fadds
pushf
push
into
and
xchg
push
add
test
scas
or
push
jle
fcmovnb
pop
sbbb
insb
mov
dec
cmp
out
jno
stc
mov
inc
ret
sbb
mov
stos
xchg
mov
add
and
test
stc
sbb
daa
and
gs
cmp
adc
push
jmp
dec
stos
adc
jb
sub
and
mov
xlat
sub
push
div
pop
sbb
xchg
xor
outsl
jecxz
jns
push
cmc
xchg
stos
dec
or
xor
popf
sbb
jecxz
adc
rclb
aas
inc
cmpsb
ljmp
das
and
cwtl
in
push
add
and
les
mov
das
aaa
test
mov
addr16
sub
mov
pop
xor
scas
fidivrl
mov
insl
fisubl
push
mov
fcoml
lods
fcoml
test
mov
jp,pn
dec
xor
dec
mov
in
mov
mov
mov
mov
sbb
sbb
sub
aam
test
jne
aaa
repnz
push
mov
add
sbbb
fxch
jp
or
loopne
ret
lods
orb
push
jecxz
jmp
lods
mov
cs
jae
int3
adc
sbb
xorl
aaa
cmpsb
jns
dec
scas
jae
hlt
lcall
xchg
push
inc
lds
dec
jle
jnp
repz
inc
cltd
xchg
lret
inc
stc
jae
jns
lock
out
ds
shll
testb
stos
cltd
pop
mov
or
push
jge
mov
inc
inc
pop
aam
add
xchg
insb
or
stos
enter
std
in
enter
div
sub
jns
aas
pusha
iret
mov
ret
cmpsb
pop
fs
pusha
push
push
push
xchg
pop
push
mov
jmp
loopne
lods
adc
in
out
xlat
lret
jge
inc
mov
fisubl
push
int3
cmpsb
aad
push
jl
mov
addr16
cs
cmp
fsubrl
arpl
out
cmc
cmp
cmp
js
sahf
out
outsb
add
push
or
xor
jg
jnp
cmp
xor
iret
mov
aas
aas
out
stc
leave
sub
rcrb
daa
out
cmp
xchg
push
pop
stc
pushf
xchg
add
mov
xchg
testl
or
mov
popf
cli
cmp
push
xchg
or
jmp
add
xor
inc
mov
adc
push
inc
and
pop
push
pop
mov
ds
cmpsb
repnz
push
lock
sub
jmp
popa
push
fbstp
mov
test
fwait
and
sarl
push
and
lock
xchg
mov
fdivrs
and
shll
jmp
ds
outsl
adc
insb
dec
push
jecxz
or
dec
pop
dec
add
and
mov
xor
and
pop
pop
xchg
je
jb
jbe
mov
add
sub
xchg
cmp
mov
lcall
pop
insl
pop
aaa
enter
push
push
add
out
inc
mov
and
stos
sub
jl
stos
lret
xchg
repnz
xchg
sbb
adc
jl
iret
sahf
test
loop
repz
stos
sbb
lret
xchg
das
jge
lahf
or
sub
test
ret
test
gs
sub
push
mul
fsubl
lcall
xor
out
cmp
fdivl
inc
and
push
aaa
fsubs
out
ljmp
cmpsb
inc
push
scas
ss
sub
sub
jge
sarb
push
sub
push
sub
adc
and
xchg
cmp
lds
icebp
pusha
call
loope
push
pop
iret
xchg
push
mov
lods
out
mov
mov
scas
fdivrl
popa
dec
shr
sbb
rol
roll
add
cmc
outsl
mov
ja
jl
lcall
enter
das
push
mov
mov
jns
movsl
popf
mov
sbb
adc
pop
pop
ja
add
and
pop
sahf
ja
cwtl
pop
xor
repnz
inc
mov
push
adc
xchg
and
jge
push
dec
or
mov
add
addl
shll
repz
shlb
arpl
mov
push
push
mov
mov
movsb
lcall
jno
shll
fstps
adc
add
cmp
adc
outsl
dec
xor
push
mov
ja
jne
adcl
inc
in
das
cwtl
aas
rolb
sbb
lcall
inc
ljmp
pxor
xor
test
call
cld
xchg
cmp
jmp
leave
fisubs
cmp
jmp
lods
mov
push
xor
lods
subl
add
dec
mov
push
mov
and
js
sti
fdivr
loope
inc
stc
jmp
pop
xchg
sub
pop
push
cmp
pop
movl
sub
lahf
movsl
sbb
xlat
insb
xchg
xchg
repnz
push
sbb
lods
cli
mov
pop
add
push
stos
jae
inc
pop
push
mov
imul
jmp
insb
arpl
add
and
dec
xchg
sarb
in
divl
fcmovne
inc
add
sbb
cmpsb
or
xchg
sub
shll
and
and
mov
jnp
inc
rorl
pop
jne
push
mov
cmp
enter
inc
mov
aaa
movl
aad
dec
enter
in
xchg
sub
dec
in
xlat
mov
js
scas
jp
in
outsb
dec
fwait
push
inc
incl
jo
test
pop
jbe
inc
pop
push
inc
sbb
adc
xor
inc
push
cmpsb
push
fisubrl
xor
mov
jp
test
cmp
pusha
scas
add
mov
jns
sub
sub
xlat
movsl
push
xchg
sbb
fldenv
popa
ret
mov
adc
cmp
dec
shrb
jbe
inc
out
jg
or
movsb
push
pop
mov
bound
xor
icebp
adc
test
push
dec
lock
xlat
jbe
xchg
es
pop
dec
add
incb
push
cmp
sahf
jge
dec
les
insb
xchg
ds
jne
jnp
mov
daa
pop
fdivs
cli
jle
aaa
mov
jmp
adcb
ficoml
xchg
and
test
dec
pop
push
pop
add
push
add
push
push
mov
stos
cltd
add
pop
push
addr16
imul
test
xchg
out
pop
fnstenv
add
fstpt
loope
sbb
ljmp
lods
cmp
rorl
push
sub
or
sub
ss
or
popf
push
imul
mov
push
cmc
push
mov
mov
shrb
dec
imul
mov
aas
insb
xchg
jle
pusha
mov
scas
and
fdivrl
inc
dec
imul
xor
jmp
inc
and
jne
repnz
scas
fisttpll
mov
ljmp
jns
pop
mov
sub
jg
lahf
mov
jne
imul
and
test
nop
in
sbb
pminub
call
and
bnd
ljmp
ret
push
sbb
frstor
aaa
cmp
and
je
xorl
das
sbb
loopne
dec
sbb
jge
push
orl
data16
pop
mov
push
mov
in
lock
mov
inc
rorb
xchg
in
lret
push
aad
aas
cmpsb
and
sti
add
popa
pop
lea
push
adc
call
jle
test
das
mov
aad
sub
call
inc
add
sbb
outsb
lods
dec
cmc
ret
mov
dec
js
mov
mov
sbb
fistpl
jae
and
adc
push
jb
fcoml
imul
stos
xchg
dec
iret
ret
inc
test
push
mov
mov
mov
fisttps
negb
jl
fadd
push
xchg
movsb
in
cmc
mov
sarl
rep
mov
mov
cld
jecxz
mov
jne
fildll
into
xchg
fidivrl
nop
test
sbb
add
jg
dec
sbbb
inc
pop
into
and
repz
int
xchg
loopne
stc
data16
cmp
mov
clc
cmp
lods
dec
ja
xor
cmp
aam
jg
ja
mov
pop
add
das
scas
fcoml
xor
fcoms
scas
sbb
test
int3
mulb
sbb
test
outsl
mov
aaa
clc
xchg
int
xor
mulb
push
fcomps
ficompl
icebp
push
or
pop
xor
mov
clc
out
and
mov
loop
jns
std
aam
das
mov
or
cmpsl
int3
popw
push
adc
aas
cmp
dec
push
cmp
imul
js
mov
adc
sbb
add
ja
fwait
cld
or
cmp
cmp
in
loop
cli
mov
adc
mov
add
insb
and
sbb
out
fldt
stos
les
sub
mov
push
jo
adc
mov
rcrb
xor
lahf
xchg
push
adc
negb
sub
jg
sbb
hlt
ret
int
pop
in
or
mov
ret
test
and
mov
xchg
lods
dec
cmp
gs
add
es
pop
repnz
notb
jne
push
outsb
inc
jle,pn
ret
adc
sub
inc
loop
fisubs
fnstcw
test
sti
cmp
jb
int
and
lock
xchg
lds
jl
fst
mov
hlt
mov
shl
stc
ja
cmp
out
mov
aas
testl
mov
adc
mov
and
mov
xor
xlat
or
jae
or
and
ja
inc
fwait
stos
pop
push
cmp
cs
xchg
xchg
and
scas
mov
sub
push
dec
fwait
push
inc
ret
dec
imul
mov
sub
push
inc
inc
aaa
std
push
popf
imul
sbb
iret
cltd
jge
cli
push
gs
loopne
cmp
jnp
cwtl
or
movl
mov
lret
jno
inc
inc
cmpsl
or
pop
push
shl
lods
adc
sbb
add
js
outsl
jb
mov
clc
test
mov
adc
sub
lret
fwait
sub
stos
mov
or
mov
or
pop
add
add
js
mov
xchg
lock
fwait
adc
push
xchg
adc
push
arpl
outsb
addr16
or
js
cwtl
fsts
mov
movsl
ror
loope
shrb
adc
loopne
cmpsb
js
jecxz
jecxz
dec
xlat
out
sbb
add
inc
pop
decb
pop
push
and
sbb
xchg
cmp
adc
xchg
clc
push
in
jb
mov
shl
xor
mov
aaa
incl
ret
scas
mov
sub
inc
movsb
pop
or
cld
cmp
scas
les
iret
outsl
pop
orl
int3
neg
or
fidivl
andb
out
cmp
xchg
fsts
jns
pushf
push
mov
sbb
scas
insl
rorl
jb
and
jmp
xchg
dec
dec
mov
push
lahf
mov
hlt
dec
or
xor
test
cmpsl
mov
dec
xchg
jle
stos
mov
leave
push
add
aad
push
xchg
addb
imul
mov
std
jae
in
fidivrs
insl
out
mov
xlat
mov
mov
adc
pop
pusha
mov
les
mov
jb
sub
cmp
xchg
pop
sahf
bound
xchg
test
orb
mov
sbb
mov
out
jb
xor
mov
fisubrs
jb
push
sbb
fs
je
inc
mov
push
sti
pop
scas
dec
lea
mov
stos
das
or
jle
mov
bound
pop
inc
push
int3
jbe
addr16
and
or
movsl
notb
mov
scas
call
popa
mov
xchg
add
and
push
clc
test
movsb
std
mov
loop
mov
stos
xchg
ljmp
push
out
test
sbb
jae
mov
xchg
cli
and
push
xor
cmp
sbb
popa
pusha
xchg
out
out
inc
ja
sub
aas
fimuls
inc
nop
fs
sub
ret
es
stc
cli
xchg
mov
mov
cmpsl
push
in
shrb
xlat
dec
data16
mov
xchg
push
sbb
in
mov
dec
xor
es
jns
adc
sarb
call
xchg
lahf
push
xlat
jbe
xor
jmp
leave
cs
fs
jg
and
nop
push
fwait
mov
or
hlt
add
lret
and
ret
mov
jo
jns
push
pop
pop
xchg
shlb
mov
inc
insb
popf
inc
sar
fbld
adc
stos
movsb
add
jae
adc
pop
push
aaa
jp
xor
pop
sti
add
je
mov
je
and
repz
gs
jl
push
push
lock
mov
int
mov
sarl
pop
dec
jae
jg
rcl
pusha
push
add
fstl
popa
shll
mov
or
adc
xor
adc
pop
jb
cwtl
ja
sub
dec
pop
mov
inc
das
and
adc
sbb
add
cltd
jmp
pushf
ljmp
push
clc
push
fisttpll
or
push
addb
leave
and
fcmovb
sbb
adc
cmp
and
stc
icebp
stos
sti
es
test
add
les
xchg
xor
fwait
mov
imulb
and
xchg
les
int
lcall
negb
aam
mov
sbb
pop
clc
iret
pop
fstpt
and
fcoml
xchg
test
in
xchg
xor
mov
push
out
mov
pop
test
cmp
cs
int3
mov
negl
je
xchg
sbb
or
das
clc
lods
mov
or
repz
enter
stc
rol
mov
add
shll
sub
ret
int3
cwtl
mov
and
pop
rcll
mov
xlat
xchg
clc
xor
out
bound
dec
fcom
add
push
inc
out
cmpl
lret
loopne
and
or
mov
dec
inc
inc
add
lock
fucomp
add
pop
mov
inc
les
insb
jno
and
dec
jnp
jae
add
push
sahf
and
jns
ret
fstpl
and
repnz
iret
mov
and
fstpl
outsb
cli
adcb
mov
out
out
ja
sub
cld
mov
dec
arpl
inc
fnstsw
ret
jno
aas
sbb
adc
sahf
ret
dec
pop
mov
add
sub
fs
pop
or
ss
mov
jno
dec
fwait
jecxz
xchg
pop
aam
mov
inc
decl
lock
outsb
dec
gs
lods
insb
push
sub
and
dec
xchg
testb
shll
adc
sub
out
cltd
jle
cmp
push
ret
test
cmpsl
cs
loope
adc
or
out
and
xchg
xor
into
push
sbb
cld
push
jecxz
add
or
testl
ja
mov
jne
das
insl
jns
repnz
ss
scas
adcl
pop
adc
jb
sub
or
pop
rcll
negl
faddl
negl
test
movsb
jbe
or
rorb
ja
sub
dec
xchg
jg
mov
ljmp
std
std
mov
ficompl
add
pop
or
aam
sbb
mov
and
xchg
incl
aad
mov
int3
jbe
mov
scas
mov
sbb
stos
rolb
push
loopne
pop
and
cltd
ss
cmp
jecxz
and
push
sub
ja
fistpl
fdivrs
out
mov
lret
mov
ds
lock
dec
sahf
push
sub
jbe
cltd
loope
fstpt
mov
push
mov
imul
int3
add
jns
pop
mov
inc
mov
aad
lds
stos
cmp
out
xchg
cmp
push
out
adc
std
push
sti
insl
adc
mov
hlt
fisttpl
mov
push
ljmp
mov
enter
data16
jmp
or
sbb
fcmovne
in
mov
xchg
test
out
mov
movsl
mov
dec
cmpsb
fildll
pop
push
std
inc
sahf
sbb
jne
xor
and
xchg
sarb
adc
mov
push
subl
jo
push
jo
add
out
push
mov
mov
and
pop
repz
mov
or
add
mov
aas
push
xchg
and
cmp
test
imul
xor
repnz
mov
clc
into
push
insb
jnp
and
jb
inc
push
iret
jo
dec
loope
mov
loop
call
mov
hlt
rcll
and
mov
shlb
repnz
cmp
stc
orb
pusha
cs
shrd
sbb
xor
int3
hlt
fcompl
jle
add
aaa
js
sbb
shll
stos
std
in
mov
je
fcmovnbe
dec
in
cmpsb
ss
les
jecxz
mov
adc
pop
cwtl
push
and
jb
mov
xchg
int3
gs
add
fcmovb
int
inc
push
sti
pop
addr16
scas
addr16
shll
pusha
adc
push
xchg
aas
push
adcb
mov
orw
add
mov
arpl
xor
mov
dec
pop
sarb
loope
outsl
xchg
lods
push
shrb
sbb
inc
in
cld
jle,pt
inc
sbb
imul
add
pop
sahf
or
mov
pop
jbe
in
mov
mov
cmp
xchg
or
cmpsl
pop
fcoms
divb
sbb
dec
daa
iret
aaa
imul
push
mov
adc
fistpl
push
add
sti
inc
out
push
mov
cmp
jmp
jno
mov
in
jge
cmpb
mov
fs
movsb
sbb
insl
or
pop
jae
notl
adc
xchg
popa
pop
nop
sbb
clc
cltd
and
push
and
lret
adc
insb
filds
add
adc
lods
xchg
cmp
subb
jne
stos
cmp
int3
and
aad
popf
jbe
gs
xchg
inc
dec
or
fdiv
inc
cli
fstps
ja
adc
sarl
mov
xchg
cmpsl
or
xchg
insb
xlat
add
pop
bound
xchg
fcompl
push
mov
sub
aas
add
and
pop
das
inc
popa
fcmove
mov
adc
sub
dec
js
xor
adc
jecxz
cmp
sub
loopne
mov
out
popf
daa
ret
insl
addr16
shll
mov
lods
sbb
cmc
rorb
push
cmp
outsb
imul
xchg
ljmp
jbe
cwtl
inc
sbb
dec
into
addl
sbb
sbb
jno
inc
mov
in
push
mov
leave
daa
test
stos
mov
xchg
mov
and
jbe
outsb
ljmp
adc
xchg
adc
add
add
xor
cli
adc
cmpsb
ljmp
pop
imul
ds
lret
add
data16
test
sbb
rclb
nop
jmp
mov
jnp
std
pop
out
mov
xor
scas
jae
arpl
cmpsl
xchg
cmpsl
bound
fadds
cmp
xchg
in
sarb
adc
push
mov
push
fstps
and
roll
push
dec
and
out
shl
push
xchg
cmp
xchg
mov
sub
jno
jne
test
addl
cmp
pop
in
aad
repnz
call
in
add
aaa
mov
push
or
cmp
pop
or
aad
fidivs
inc
sub
push
cmp
xchg
loop
push
aas
imul
aaa
lahf
jne
mov
xor
jp
pop
jle
mov
cwtl
xorl
cltd
bound
mov
jmp
mov
inc
xchg
rcll
mov
push
std
adc
jb
dec
ljmp
adc
sbb
jns
ja
xchg
fidivl
pop
push
scas
dec
jmp
jbe
jnp
stos
sbb
mov
fcmovbe
lods
dec
mov
cmp
cli
or
jb
mov
jl
push
cmc
loope
xchg
jne
pop
int
testl
sub
aaa
shll
mov
adc
mov
and
clc
sbb
push
pop
inc
sub
xorl
jecxz
in
iret
xor
or
mov
jae
sbb
lock
adc
lcall
sti
in
insl
sbb
test
out
in
loope
mov
adc
popw
push
shlb
shll
push
mov
cmp
loop
jecxz
scas
scas
xlat
cmp
adc
or
mov
pushf
push
popf
lods
xchg
leave
insl
sahf
push
testl
dec
jns
adc
in
pop
pop
sub
les
jmp
les
jg
push
enter
aas
xlat
inc
fistps
loopne
js
push
rdpmc
aaa
movsb
cmp
add
leave
pop
cmp
das
pop
insl
inc
sti
push
or
adc
xor
roll
jecxz
dec
cmpl
sbb
mov
outsb
or
stc
sub
andl
mov
lret
or
je
psubusw
loopne
pusha
cmovge
and
clc
dec
mov
stos
ret
and
mov
aas
cmp
inc
sub
ja
repz
inc
mov
sbb
xor
mov
inc
sti
mov
add
daa
in
xlat
mov
mov
inc
xchg
cltd
iret
dec
hlt
mov
ret
mov
popf
ror
call
mov
dec
push
in
xchg
pusha
mov
jns
ret
int3
mov
aas
xor
es
ret
test
nop
xor
sbb
adc
mov
ja
out
out
repz
sbb
push
sti
xor
daa
mov
xor
in
cltd
sarb
aas
mov
test
xchg
jmp
movsl
dec
mov
idivb
ss
sub
arpl
dec
mov
lahf
mov
xchg
out
sub
inc
xor
pop
adc
xor
shr
cwtl
mov
outsb
pop
pop
or
mov
jb
mov
lods
sbb
insl
push
les
or
lods
test
jle
or
cmp
es
stc
and
pop
inc
enter
xchg
cwtl
enter
loop
jp
sub
pop
notl
xchg
or
jmp
xchg
cmp
mov
hlt
add
bound
adcb
dec
inc
sbb
ja
mull
mov
mov
pop
mov
ss
and
mov
mov
add
sbb
sahf
pop
lds
mov
mov
jmp
outsl
xor
add
fnsave
or
or
jo
mov
push
jno
and
movsb
scas
or
or
mov
bsr
cmpsl
aad
jl
and
sub
out
insb
rcrb
ficompl
pop
pop
cmpsl
andb
in
pop
sbb
insb
sub
jbe
scas
les
rcrb
loopne
sbb
or
dec
jns
mov
mov
ret
out
test
add
jecxz
pop
sbb
lds
lods
test
das
add
mov
cld
aam
and
xchg
repz
lahf
push
cmpsl
mov
addb
insl
lock
bound
popf
shll
mov
clc
add
stos
jmp
mov
jne
add
lret
out
sarb
gs
shll
mov
lcall
dec
lods
dec
xchg
xchg
mov
mov
jno
lods
icebp
inc
and
loopne
jne
or
add
xchg
pop
rolb
das
hlt
pop
data16
stc
ret
js
jg
mov
cmp
into
jbe
dec
fcompl
or
mov
xor
sbb
andb
bound
out
fwait
in
andb
add
ja
inc
sbb
loopne
mov
adc
adc
popf
inc
orb
in
pop
mov
mov
adc
imul
out
push
push
idivb
jnp
out
sub
xor
sub
push
inc
dec
data16
and
push
adc
adc
clc
ja
add
push
jns
inc
movsb
xor
repnz
adc
dec
into
ss
push
or
dec
lret
addr16
imul
ret
lds
add
sti
cmpsl
mov
and
mov
jne
jne
out
cld
jp
xlat
jne
sub
dec
jne
dec
mov
cmpl
test
idivb
int3
sub
xor
into
negl
enter
cmp
pusha
cli
inc
dec
aad
pop
ljmp
mov
dec
fidivrs
imul
popf
push
in
nop
push
jg
dec
repz
mov
push
mov
in
icebp
enter
sbb
pop
out
jne
in
fsts
loop
ret
int3
rcll
addr16
fldenv
cmp
jecxz
das
mov
outsb
mov
sub
mov
scas
adc
mov
or
lds
fdivp
imul
dec
mov
lea
mov
aam
insw
cmpsb
fcmovnu
cltd
and
or
lahf
mov
jge
jnp
lret
lds
adc
add
pushl
jne
sbb
mov
mov
dec
stc
mov
jecxz
cltd
pop
cmpl
sub
dec
enter
mov
cmp
stos
cmp
xor
mov
movsb
mov
stc
push
xchg
push
fistps
cltd
jae
push
push
cltd
popf
lds
lods
enter
adc
fldcw
mov
in
dec
sub
push
cmpb
jle
xchg
popa
sub
repnz
xor
pop
hlt
xor
mov
mov
shll
jmp
push
scas
lock
pop
mov
lahf
mov
int3
pop
add
adc
mov
fwait
call
ficomps
fidivrs
sub
jl
scas
cltd
xor
out
mov
mov
rolb
addr16
ret
xchg
pop
stc
xchg
sub
pop
sub
dec
sub
xor
push
mov
das
mov
in
add
dec
loopne
xor
dec
jl
lods
mov
lret
mov
mov
ss
inc
je
sbb
fildll
push
sub
imul
cmpsl
mov
idiv
aaa
addb
cli
cltd
push
adc
lods
or
sahf
xlat
mov
sbb
xorl
popf
add
insb
ds
repz
jnp
sub
mov
test
xor
in
int3
insb
lock
push
popf
inc
mov
mov
cmpl
inc
neg
or
lea
in
xor
out
lods
mov
out
push
repnz
subb
or
xor
aad
inc
push
repz
dec
ret
scas
xor
rorl
jne
and
clc
jg
and
sub
addr16
mov
sub
fstp
sahf
and
ret
or
lock
addr16
in
stc
sub
jnp
and
in
sbb
enter
sti
test
mov
jle
mov
cmp
ja
add
mov
pop
cmpsb
mov
stc
stc
andb
pop
out
mov
adc
inc
inc
push
cmpl
and
or
push
pop
jg
mov
rorl
or
lds
jae
in
into
cs
in
lods
pop
je
repnz
mov
xor
jle
mov
and
push
or
leave
mov
es
popa
mov
add
sbb
fldt
cs
push
xor
cmp
rcl
xor
arpl
scas
adc
sub
cld
xchg
fcompl
xor
mov
repnz
pop
jmp
rolb
pop
xchg
cli
jge
enter
mov
int3
xchg
data16
dec
sbb
jmp
or
mov
ror
xchg
test
nop
xchg
repz
jns
dec
fs
or
mov
stc
shrl
in
xchg
cs
aas
mov
movsl
and
sub
dec
je
pop
xor
cmp
mov
mov
sub
popf
xchg
and
sbb
nop
scas
nop
popl
loopne
cmpl
xchg
filds
push
loopne,pn
xchg
add
bound
jle
cli
mov
mov
inc
mov
into
movsb
lods
lods
faddl
pusha
adc
push
jg
outsb
xor
push
popf
aas
push
dec
xchg
scas
sub
leave
nop
or
lcall
adc
xlat
push
fiaddl
or
xor
mov
loope
fistpl
test
scas
cmp
cmp
jg
xchg
push
jg
cs
jo
into
dec
popf
add
and
lock
shl
mov
arpl
stos
push
pop
inc
popf
xorb
mov
mov
lods
adc
xor
leave
jno
imul
cmp
mov
sti
pop
push
dec
rcl
jo
scas
dec
mov
push
mov
rcrl
sarl
iret
sbb
mov
jle
pop
mov
xor
adc
adc
sub
sbbb
fmull
sbb
iret
negb
pop
xchg
cmp
loopne
out
loope
jl
dec
adc
push
push
pop
jnp
into
jl
push
inc
xor
shl
jecxz
je
addl
adc
mov
cmpsl
jo
das
fadd
repnz
popf
movsl
or
iret
cmp
out
xor
ljmp
mov
fcomps
xlat
add
out
stos
nop
in
int
or
adc
fisttpll
lock
push
js
cmpsb
sub
mov
xchg
insl
jge
jne
shll
sub
add
gs
mov
mov
sbb
or
jno
addr16
xchg
aaa
and
adc
jo
cmp
testb
jle
mull
ja
adc
inc
add
dec
in
shrl
stc
jo
mov
jecxz
ljmp
cmpsb
cltd
sbb
and
imul
fmulp
jne
jl
dec
aas
scas
jl
xor
shrl
rcll
xchg
imul
sbb
addr16
push
mov
std
ret
lret
jecxz
imul
scas
xchg
mov
or
pop
insl
cpuid
popa
cmp
stc
nop
jmp
in
pop
sar
leave
test
je
icebp
ss
lahf
js
incb
andl
cmp
hlt
adc
xchg
and
jecxz
scas
push
test
out
sub
in
mov
push
cmp
cwtl
adc
shlb
dec
add
xchg
in
jmp
mov
imul
loope
into
inc
cmp
sub
into
pop
inc
jmp
bound
les
dec
sub
mov
mov
pusha
negb
jno
push
cli
pop
lcall
pop
dec
ds
cmp
cld
sbbb
jp
mov
je
fadds
push
sbbb
lds
js
mov
out
xchg
aas
cld
mov
aad
call
push
push
xchg
xor
add
adc
and
rorb
cld
jl
fidivrs
lods
lds
in
mov
dec
enter
mov
loope
jl
xchg
inc
aaa
mov
cmp
and
lahf
ficoml
es
pop
xlat
aaa
vmwrite
lods
pop
mov
scas
mulb
add
inc
mov
mov
mov
ret
xlat
fdivr
rcrl
pop
aaa
orb
pop
loopne
push
insl
aam
dec
into
imul
dec
arpl
push
pusha
and
mov
mov
fldz
aas
push
filds
fcmovb
aas
push
xchg
aam
sbb
bswap
cmp
add
dec
dec
inc
test
cmp
movsb
jp
popa
xlat
inc
push
mov
jle
pusha
or
hlt
insb
jle
imul
mov
adc
mov
mov
lret
sub
add
lods
xchg
clc
push
sbb
lds
fisubs
jbe
aam
jae
nop
mov
xor
ret
and
sbb
pushf
xchg
dec
pop
push
jo
testl
xchg
sarl
pop
pop
push
xchg
mov
cmpsb
xor
sub
sbb
lret
push
inc
aad
stc
cmp
test
pop
mov
mov
inc
jbe
pop
roll
pusha
push
sbb
dec
mov
adc
rorb
jns
pop
pop
cmp
inc
sub
insl
xchg
inc
pop
sub
pop
jnp
out
sbb
mov
add
mov
mov
lds
mov
lahf
xchg
lock
popa
ljmp
call
nop
in
faddp
xor
pusha
sub
subb
fwait
or
jle
mov
xchg
push
sbb
out
push
sub
mov
xor
repnz
sbb
ja
or
arpl
jno
loopne
mov
ds
sarl
inc
clc
pop
cwtl
mov
daa
xor
cmp
clc
sub
cmp
push
cmp
mov
shlb
inc
negb
insl
imul
push
aam
pop
movsl
ja
outsl
or
xchg
pop
mov
insb
clc
jle
cmpsb
cmp
mov
push
mov
int
stos
push
mov
xchg
lcall
lahf
movsl
pop
adc
mov
scas
mov
mov
fidivrs
cmp
dec
cmc
pop
stc
xchg
push
pop
js
push
popf
mov
xor
push
cli
imul
sub
mov
xchg
xchg
dec
enter
mov
and
cmp
gs
mov
out
ret
out
jle
lahf
push
xchg
dec
jno
rol
adc
push
std
push
mov
sub
mov
mov
nop
ss
push
mov
cli
ja
sarl
pop
es
push
sub
fldcw
subb
sub
add
cmpsl
adc
rorl
pushf
add
jecxz
je
mov
pop
out
pop
xor
mov
adc
shlb
movsb
in
push
adc
cmp
ds
dec
dec
adc
jge
xor
or
pop
scas
jbe
fstl
xor
arpl
leave
add
fwait
lret
push
insl
cs
bound
mov
bound
mov
inc
lret
sbb
jns
jo
das
fistpl
aas
add
mov
sub
jbe
out
pop
push
jmp
jbe
std
mov
push
adc
lods
daa
xor
lock
inc
xor
sub
mov
push
aad
jge
mov
inc
sbb
aad
mov
and
sub
sub
ja
loop
divb
push
aaa
sub
fistl
xchg
int
jp
stos
stc
or
push
andb
sarl
std
xchg
loopne
sahf
sbb
sbb
adc
insl
in
xor
add
xchg
push
dec
ret
mov
popa
fnstsw
fcmovu
hlt
inc
push
cltd
mov
add
adc
and
lock
push
xlat
sub
addr16
sarl
pop
iret
and
addl
nop
pop
xchg
cli
sub
lods
lret
mov
in
aam
pop
out
repnz
sub
lds
outsb
or
mov
sbb
repz
mov
push
jne
push
xchg
xor
std
cmp
dec
mov
adc
insl
sub
popa
pop
sub
pushf
loop
leave
and
jnp
push
lahf
cmp
xchg
je
add
push
inc
pcmpeqd
xor
and
imul
mov
test
mov
mov
mov
int
mov
movsl
xor
xchg
pop
les
gs
test
cmp
cltd
cmp
lds
mov
and
cmpsb
pop
push
fcoml
xor
inc
and
adc
push
mov
mov
lcall
ret
adc
scas
push
mov
dec
xchg
shlb
jmp
int
roll
cmp
mov
out
loop
xchg
pop
stc
xchg
repz
add
dec
jmp
dec
jp
ret
nop
sub
ret
rdpmc
cmp
xor
inc
push
repz
xor
rorb
jb
loop
out
inc
scas
enter
cmp
aas
aaa
xlat
fadds
shlb
mov
div
adc
xchg
add
out
inc
fdivrl
add
mov
insl
or
sbb
imul
xlat
lret
mov
mov
jnp
not
imull
mov
pushl
push
or
aaa
stos
aaa
dec
nop
outsb
imul
mov
test
adc
call
jmp
in
sub
xor
ljmp
sbb
mov
aad
mov
imul
int
mov
cmp
imul
and
call
and
gs
mov
sbb
mov
data16
mov
inc
test
mov
rcll
fbstp
fs
pop
push
daa
adc
ds
mov
mov
sub
jge
push
arpl
jecxz
xchg
add
mov
bound
mov
add
jns
xchg
sahf
mov
fisttpl
sbb
add
jg
jns
xor
loopne
repz
xlat
call
mov
mov
and
sti
pop
gs
pop
leave
cmp
lods
lock
outsb
mov
jge
or
xor
daa
adc
inc
sbb
jno
lods
xor
or
sub
push
add
pop
adc
pop
out
repz
je
jns
lahf
xchg
mov
sti
push
dec
test
xor
jno
std
lods
and
mov
stos
dec
rcrl
repz
pop
lret
pop
in
xchg
add
outsl
cmpb
mov
xlat
sbb
jecxz
lahf
mov
sbb
jno
popa
push
arpl
jg
add
clc
ss
aas
loopne
sbb
xor
jnp
sub
ret
and
cwtl
inc
xor
pushf
pop
push
pop
aas
fsts
cmp
sub
pop
ret
xor
insl
lret
shl
loope,pt
and
dec
shrl
lret
in
sub
fldcw
lods
aam
inc
pop
enter
adcl
scas
fwait
push
dec
adcb
les
es
insb
adc
or
add
hlt
js
inc
pop
and
push
mov
popf
inc
scas
and
shll
lahf
add
jno
out
icebp
push
pusha
iret
xchg
pop
je
push
xchg
xor
add
xchg
jg
loopne
hlt
push
add
imul
jo
xchg
rorl
cmp
and
orb
push
sbb
fs
lcall
in
jg
ljmp
cli
inc
fisttpl
ljmp
adc
jno
ret
call
into
sub
lahf
stos
add
aam
jmp
movsb
push
fisttpl
clc
je
aad
mov
daa
cs
sub
sub
adc
mov
test
mov
pop
stos
sbb
pop
flds
inc
pop
mov
ss
in
std
mov
xor
sbb
cmp
lds
stc
outsl
cli
sub
aaa
add
or
call
shrb
or
mov
push
or
sti
jbe
mov
inc
dec
mov
adc
jge
xchg
and
cmc
in
fwait
ss
inc
jb
mov
adc
repz
in
out
adc
jge
addl
cs
loope
xchg
inc
mov
push
sarl
jg
scas
imul
jb
test
bound
mov
jnp
jecxz
mov
add
dec
adc
jnp
mov
push
push
xchg
mov
sti
fsubrs
cmp
sbb
push
rcll
xor
jecxz
push
and
iret
pop
push
mov
and
std
into
das
aas
xchg
pop
jns
lahf
pop
sbb
call
xor
fcmove
inc
mov
popa
jnp
xchg
lcall
movsb
lods
add
push
filds
and
xor
test
mov
sbb
mov
movsl
clts
popl
clc
xchg
insb
aam
xor
dec
fstps
popf
add
sti
xchg
pop
lret
pop
mov
push
and
adc
insl
cmp
xor
pushf
cmp
lret
sbb
sbb
and
pop
or
outsb
pop
repz
int3
jle
inc
pushf
push
fwait
ret
xchg
mov
inc
pop
sub
loop
punpckhwd
es
mov
nop
sbb
mov
mov
push
mov
inc
cs
inc
push
adc
mull
stc
jnp
es
push
sarl
faddl
sub
sbb
ret
aam
cmp
insb
inc
inc
sub
xor
and
insb
mov
or
mov
adc
subl
scas
pop
dec
xor
stos
hlt
or
jg
jnp
enter
sbb
push
sbb
xchg
add
xor
add
imul
hlt
jl
mov
inc
into
or
jno
pop
xor
das
loope
push
sbb
into
or
mov
insl
nop
jecxz
jmp
into
push
xor
push
xor
nop
leave
test
or
xchg
movsl
adc
shll
and
pop
lods
mov
inc
mov
add
aad
cmp
fisubs
dec
fnsave
cwtl
sub
jo
sbb
pop
push
test
outsb
push
jle
sahf
inc
push
push
pop
pop
lea
popf
arpl
pop
mov
push
test
adc
xchg
cli
lahf
fistl
stc
orl
loope
sar
xchg
ds
psrad
xlat
rcrl
inc
jns
add
aas
lds
js
xchg
bound
loope
outsb
dec
adc
addl
sbbl
and
pop
xor
and
cmp
mov
lods
ss
mov
test
lret
inc
stos
xorb
dec
stos
jo
dec
andl
rcrb
fcomps
gs
inc
repz
stos
xchg
cs
push
aaa
and
jle
mov
enter
fidivs
sub
outsl
and
or
jge
int
cmp
push
jmp
addr16
push
cs
adc
daa
outsb
fisttps
pop
mov
mov
fisubl
jae
cmpl
adc
repz
sbb
sub
mov
mov
pop
mov
pop
cmpsb
or
divl
jo
pop
sub
cmp
incb
xchg
jecxz
cmpsb
insb
push
lods
push
pop
outsb
mov
push
in
sub
mov
cmpsb
insb
jecxz
inc
out
mov
mov
data16
inc
arpl
imul
dec
push
mov
inc
mov
cmp
xor
adc
add
mov
or
pop
imul
insb
and
scas
fsts
xor
jo
mov
xchg
mov
sub
lods
cmp
sbb
and
jg
push
je
cmp
jge
lds
roll
push
aam
insb
mov
xchg
push
sbb
inc
mov
add
adc
push
adc
mov
test
xchg
fisubl
mov
in
sub
add
pop
jns
das
jl
idivb
scas
lods
inc
enter
and
xor
adc
out
out
mov
push
hlt
movsl
push
cmpsl
adc
mov
mov
push
and
cmp
cmp
xchg
or
fnop
and
dec
jmp
lods
sub
mov
addr16
or
mov
mov
shlb
int
sub
mov
xchg
rdpmc
je
out
es
jge
xchg
xor
push
xchg
sarl
cli
cmp
inc
mov
mov
cmp
push
stc
addr16
daa
outsb
popf
and
push
adc
loop
lret
pushf
xorb
mov
mov
fldl2t
es
leave
fistl
jno
int
je
lea
fwait
xor
dec
and
icebp
jo
jo
leave
call
xor
xor
cmp
and
cmp
push
fcmovb
jnp
std
sbb
aas
or
sarl
adc
jge
lods
xchg
movsb
clc
jg
test
xchg
shl
cmp
fldcw
adc
and
lods
jg
xchg
mov
fldcw
or
mov
jbe
jae
insb
imul
ds
sti
mov
loope
xor
ds
rcrl
dec
ja
xorb
mov
jo
mov
stc
xor
pop
roll
push
insb
pop
das
dec
or
loop
icebp
call
cs
jle
fwait
popa
out
or
mov
jl
mov
ret
inc
mov
dec
dec
adc
out
pop
and
and
sbb
sahf
xchg
and
jmp
xor
xchg
repnz
inc
cmpsl
es
add
stos
ror
mov
adc
inc
and
jae
push
jnp
cmc
sti
mov
insb
pop
adc
adc
mov
add
push
adc
enter
xchg
sbb
dec
jl
dec
pop
lods
sti
inc
mov
dec
jle
jecxz
xchg
mov
es
cmpsl
mov
pop
sub
inc
fs
pop
inc
cmp
adc
out
add
jbe
je
jecxz
ss
cwtl
icebp
cmp
jno
mov
push
cmp
in
mov
sbb
sahf
popf
inc
and
pop
repnz
xchg
push
push
cmpl
inc
pop
pop
sbb
mov
mov
das
test
in
pop
call
in
push
pop
pop
cmp
ret
jne
out
push
xchg
push
jge
cmc
xor
daa
loop
pusha
adcl
jg
adc
lock
mov
leave
dec
mov
and
lds
sub
add
shlb
xor
push
xchg
enter
push
mov
inc
mov
bound
pmulhuw
test
mov
outsl
jbe
xor
inc
orb
cli
popf
jno
lcall
ficoms
mov
aas
scas
xchg
xorl
mov
je
push
lret
or
aaa
movsb
nop
jle
hlt
adc
sbb
adc
stc
std
cmpsl
popa
cmp
mov
into
rcrl
sub
je
scas
orb
jecxz
rcrb
ljmp
mov
inc
mov
jo
mov
mov
xor
and
xor
inc
sbb
sahf
xchg
xchg
outsb
add
test
enter
fwait
lret
fistpll
sub
shrl
sahf
jbe
shl
pop
outsb
pushf
mov
test
es
cli
xchg
aam
and
cmp
mov
sbb
daa
mov
mov
mov
ds
in
pop
cmpsb
cmp
sahf
and
sbb
or
ret
sti
mov
in
cmp
pop
popf
adc
inc
sub
jne
mov
or
repnz
imul
adc
xor
push
jp
notl
lods
test
std
mov
mov
cmp
push
add
lahf
aaa
data16
fistps
jp
dec
into
cmp
jecxz
rcrb
push
cli
fcoms
mov
fidivs
mov
lock
sub
iret
andl
add
rorl
mov
cltd
add
mov
pop
cmpsl
sti
cmp
dec
cmc
sub
dec
iret
aad
sbb
cmpsl
jb
repnz
pusha
loope
rcrl
repnz
roll
cmp
rclb
rcr
inc
jae
sbb
push
cwtl
add
sbb
push
cmc
repz
jge
xlat
xor
mov
and
push
les
dec
xchg
out
adc
sub
pop
or
xchg
jne
ljmp
pop
inc
xor
pop
movsb
inc
sub
fldt
cmpsb
inc
mov
xchg
loope
imul
xchg
jbe
adc
adc
leave
cmc
xchg
pushf
inc
flds
aas
jnp
icebp
sub
jne
cmpsb
jl
aas
cmp
rcll
mov
mov
jb
stc
cmpsb
shlb
clc
leave
mov
jle
rcrl
filds
mov
pop
push
mov
pop
ficompl
inc
nop
icebp
add
daa
xlat
roll
insb
cmp
mov
sbb
mov
sbb
pop
jp
adc
add
sbb
out
sti
repz
pushf
xor
push
ljmp
sub
mov
cmp
out
inc
cwtl
mov
insl
ja
mov
xorb
mov
int3
lcall
daa
test
jmp
jae
xchg
leave
jmp
loop
xor
mov
data16
jmp
insl
inc
sbb
clc
pushl
repz
mov
or
in
adc
imul
mov
nop
pop
sbb
pop
mov
pushf
in
scas
push
cwtl
call
aas
inc
jo
cmpsb
dec
lods
pop
push
push
std
jecxz
arpl
pop
fldt
outsl
repz
jl
dec
pop
mov
mov
lahf
popa
ljmp
sbb
loop
fnsetpm(287
push
lretw
out
and
xchg
mov
cld
jno
inc
test
push
xorb
icebp
insb
jl
movntq
out
jp
repz
push
sbb
insl
into
sbb
push
inc
imul
jnp
push
pop
sbb
add
call
xor
and
cmp
mov
mov
push
sbb
adc
bound
sub
or
jecxz
mov
pop
mov
cmp
sbb
loopne
inc
mov
sub
dec
clc
aam
jmp
pop
andl
test
mov
fs
aam
mov
fisttpl
sar
cli
pop
mov
daa
jge
ret
daa
inc
daa
loope
cmp
add
mov
ret
lcall
pop
xor
mov
daa
add
test
int
int
adc
xchg
mov
gs
jle
jbe
test
dec
mov
mov
cmp
push
shlb
cli
jg
lock
dec
sbb
jbe
pusha
fwait
jp
outsl
push
nop
aam
fidivl
lret
cmp
jnp
mov
sub
ds
xlat
xor
arpl
arpl
add
and
adc
cmovnp
sti
mov
hlt
fisubl
or
lock
pushf
mov
loopne
mov
xor
nop
pop
add
sub
or
push
lret
int3
or
inc
outsb
ret
es
inc
add
fmuls
cmc
lds
fldt
out
aam
dec
jle
dec
jge
pushf
jmp
pusha
xor
dec
outsb
js
xchg
jns
lcall
inc
ret
pop
insl
in
dec
push
mov
adc
fcmovnb
push
adc
and
inc
add
pop
dec
jne
mov
sbb
jo
adc
xor
lret
xor
sub
repz
xchg
inc
pushf
push
fistl
data16
cmc
ds
push
stos
lds
sbb
sbb
je
and
inc
jle
lret
push
lods
mov
xchg
pop
inc
into
inc
push
xchg
sub
cmp
out
rcll
sbb
sbb
dec
adc
jmp
lods
sbb
lahf
jg
aas
sbb
fildll
into
and
add
in
dec
cli
mov
push
ret
xchg
lret
stos
rolb
outsl
cli
cmpsl
and
add
or
icebp
pushf
ret
rclb
mov
insb
push
jne
out
fs
jmp
notl
sub
cmp
add
stos
jne
jle
test
rcll
sar
pop
jle
push
inc
jns
push
testl
insb
jbe
inc
mov
xor
clc
push
xchg
cmp
and
call
cmp
adc
mov
push
cmp
mov
adc
inc
push
dec
out
dec
sti
aam
xor
or
pop
sub
mov
pop
dec
jle
push
xorb
jno
leave
test
jb
pop
hlt
out
mov
xor
stos
outsb
and
xchg
or
mov
cs
xorb
jns
adc
ja
push
fnstcw
xchg
lahf
mov
stc
sub
push
xchg
lret
xchg
ret
mov
test
sbb
fdivl
add
mov
out
sbb
test
insl
adc
out
mov
jmp
jge
xor
push
add
pushf
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
.byte
ret
das
jge
cltd
pushf
pop
ja
pop
dec
cltd
cltd
or
cmpsl
add
loop
aas
ss
sbb
or
sar
in
gs
xchg
and
inc
xchg
sbb
addr16
sub
mov
sbb
mov
ljmp
pop
xor
arpl
push
sbb
cmp
cmp
test
adc
stc
cmp
sub
mov
in
cs
shlb
xchg
mov
inc
out
or
repz
mov
push
lock
push
rclb
xchg
adc
aam
xorl
dec
loopne
in
xchg
and
dec
pop
add
jns
cli
adc
xlat
mov
sub
pusha
fisubl
jbe
xchg
inc
xor
or
hlt
jecxz
stos
fdiv
pop
xor
sbb
and
xrelease
xchg
mov
push
stc
mov
es
das
inc
ljmp
mov
push
cmp
mov
jle
popa
out
hlt
mov
xor
ret
dec
pop
mov
out
jecxz
cli
and
les
sar
jne
imul
push
fnstenv
pushf
dec
sub
or
and
push
cmp
shll
sbb
hlt
shrb
mov
adc
movsb
mov
cmp
pop
mov
call
xchg
push
lea
lea
and
in
inc
popa
xchg
dec
shll
sbb
or
pop
aaa
adc
fwait
or
sbb
imul
loop
lods
adcl
call
jg
jbe
dec
gs
adc
jb
dec
pushf
sbb
nop
mov
and
js
mov
imul
stc
mov
aad
popa
out
popf
xchg
cmp
loop
adc
shll
add
sub
mov
outsl
adc
and
inc
out
dec
sarl
push
jns
push
mov
xchg
pop
xchg
mov
loope
lret
clc
xchg
mov
pop
push
xor
decb
test
ljmp
pop
mov
idivb
movsb
mov
mov
mov
mov
and
mov
dec
ljmp
xor
test
and
jmp
out
mov
sbb
mov
shr
cwtl
xchg
outsl
mov
sarb
scas
pop
pop
cmp
into
push
std
sbb
cmp
and
mov
fs
cmpsb
ret
leave
adc
xchg
nop
sub
mov
mov
test
outsl
ljmp
test
ljmp
mov
clc
sarl
je
imul
leave
out
push
jp
sub
adcl
mov
fistl
xchg
stc
rorl
rcr
repz
adc
repnz
fdivs
and
aad
andl
push
pop
movsb
or
lcall
adcb
xor
dec
sub
mov
fdivl
rolb
lret
inc
sub
inc
cmpsl
and
cwtl
or
xlat
in
push
orb
inc
dec
rorl
push
and
lahf
add
sbb
push
push
ljmp
pop
xor
add
loopne
sbb
scas
ficompl
push
fcmovnb
sub
aaa
dec
adc
sbb
test
out
mov
push
insb
pop
test
pop
into
rcll
dec
aam
push
ret
iret
sub
jae
sbb
ds
stos
leave
dec
dec
or
and
je
imul
nop
push
test
imulb
mov
jg
mov
and
int3
xorl
pop
mov
cwtl
hlt
inc
out
out
mov
sub
in
cwtl
inc
jecxz
test
pop
fsubr
test
fldl
pop
mov
movsl
cmp
add
inc
xor
cwtl
xor
xchg
xchg
sub
shl
test
sbb
sti
stos
lods
call
and
cli
imul
push
imul
cld
fcomps
lahf
dec
add
dec
cmp
sbb
xchg
xchg
mov
mov
xor
or
sbb
add
ljmp
mov
and
pushf
inc
dec
mov
pushf
movsb
mov
push
mov
jge
test
xchg
xchg
push
mov
arpl
cmp
inc
js
or
jo
jg
mov
or
inc
mov
push
test
pop
pop
sub
fwait
push
inc
sub
std
ss
mov
sti
clc
dec
and
int3
or
cmpsb
sub
push
hlt
push
orl
add
add
mov
stos
call
add
fstpt
mov
mov
sbb
sub
cmp
fcomip
lods
rorb
adc
sbb
xchg
adc
lcall
jns
inc
and
mov
lret
outsl
mov
clc
arpl
popf
aaa
and
in
fdivs
sbb
out
fsubl
aas
in
aaa
into
mul
add
pop
dec
xlat
lods
arpl
adc
fsubrs
xchg
fidivl
lahf
lea
dec
sbb
xor
ret
push
or
cmp
pop
scas
or
push
aaa
push
lahf
sarl
jle
dec
clc
adc
jae
stos
cmpsl
hlt
clc
jb
mov
cwtl
jno
aam
lret
daa
sub
aas
lods
xchg
arpl
mov
js
clc
jb
add
cmp
shll
add
mov
dec
inc
inc
sub
jl
mov
xchg
ret
mov
out
sbb
mov
addr16
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
mov
aad
.byte
ret
das
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
pop
call
call
int3
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
or
add
je,pn
js
add
add
adc
add
addb
add
add
add
jb,pn
popa
je
add
mov
add
add
add
add
add
add
add
add
cs
je
add
add
add
add
add
push
add
add
add
inc
add
loopne
imul
push
add
add
add
add
out
add
add
jb,pn
insb
outsl
arpl
add
add
rolb
add
je
js
add
add
lock
add
push
add
pushf
add
add
add
inc
add
loopne
jb
popa
je
add
int3
sbb
add
adc
add
sbb
add
mov
add
add
cs
je
add
add
add
add
pop
add
sbb
add
movsb
add
inc
add
loopne
add
xor
xor
call
pusha
call
jo
negb
loope
iret
ds
inc
lret
std
rol
add
ss
lods
xlat
mov
jmp
pop
and
lea
mov
fbld
je
jae
mov
xchg
jae
mov
jmp
jmp
jmp
call
scas
flds
add
addb
cmp
outsb
int
sarl
mov
sub
adc
test
add
and
sub
fldenv
repz
ja
add
fs
cmc
adc
and
dec
xchg
imul
test
xor
and
inc
movsb
add
or
push
cmpsl
test
scas
call
mov
sbbb
cltd
inc
lret
lods
nop
push
xchg
jnp
in
xchg
jne
fwait
cmpsl
fwait
ljmp
sahf
sbb
jle
jl
add
ds
mov
jmp
sub
mov
insb
add
addr16
add
mov
xchg
fwait
inc
cmp
sub
insb
sub
inc
push
nop
mov
push
aad
rclb
adcl
sub
push
cmp
gs
int
mov
jne
popa
out
lret
or
jb
int
jmp
js
nop
repnz
mov
sti
jo
outsb
daa
inc
jns
popa
mov
xor
inc
lcall
cmp
ljmp
into
lret
mov
cmc
popa
adc
dec
dec
sbb
imul
push
arpl
hlt
sbb
aad
adc
cmp
lods
inc
icebp
add
xchg
mov
je
fwait
scas
adc
mov
jno
adc
xor
not
aaa
pop
repz
push
push
jp
mov
inc
je
inc
add
xchg
clc
push
xor
cmpsb
add
jmp
shll
xchg
jle
add
mov
addr16
or
mov
cmc
js
or
ja
mull
adc
es
nop
mov
push
pop
or
add
mov
mov
cmp
stos
push
in
loope
xchg
sahf
xchg
mov
dec
push
jbe
repnz
mov
and
sub
inc
fistps
jbe
testl
pop
sbb
jl
inc
cmpsb
imul
add
jp
hlt
stos
stc
dec
lds
icebp
movsb
addl
jns
repz
dec
pusha
xor
fistps
xchg
or
mov
push
nop
push
and
add
aas
stc
lods
xor
insb
shrl
push
popa
sbb
inc
mov
daa
negl
enter
xchg
dec
lods
mov
out
add
mov
shll
sahf
cmpsb
jo
movsb
jmp
gs
cmp
insl
inc
adc
xor
and
in
jo
adc
xchg
mov
mov
lret
ja
mov
sbb
cli
loopne
pop
dec
out
int
int3
pop
jmp
pop
sahf
ljmp
mov
jb
cmp
mov
pop
ljmp
mov
pop
punpcklbw
mov
gs
push
add
push
xlat
in
aad
movsb
mov
xchg
xchg
cmp
shlb
in
int3
jns
insb
mov
das
mov
std
jge
pop
fimull
jae
pop
or
mov
pop
popf
repnz
mov
mulb
insl
pop
push
mov
adc
pop
cmp
fidivrl
push
jecxz
fcmovbe
add
mov
cmpsb
pop
cmp
xchg
fidivl
mov
dec
xchg
jecxz
pop
mov
lret
stos
sub
js
mov
add
jge
adcb
push
mov
push
int
les
add
faddl
mov
mov
lea
add
nop
shll
xchg
adc
pop
xor
pop
mov
dec
push
jge
xchg
jp
and
loop
int
add
lods
pop
dec
sbb
fs
xor
sbb
add
lods
sub
ficompl
fimull
push
xor
add
cld
out
dec
sub
and
in
rcl
or
push
xor
xchg
mov
pop
mov
jno
push
enter
pop
insl
cmp
out
add
aam
lock
mov
mov
sub
out
or
or
fiadds
pop
iret
inc
lea
xor
inc
jo
gs
mov
mul
xor
and
mov
push
jo
adc
push
imulb
push
adc
xchg
add
les
addr16
pop
ret
mov
mov
out
add
std
ds
xchg
ret
in
cmp
outsl
call
test
mov
add
inc
insl
inc
pusha
mov
test
xor
in
or
imul
cld
adc
fiadds
cwtl
fldt
xchg
pop
jnp
jg
sti
pop
cmp
push
mov
fdivr
pop
xor
aaa
inc
mov
xchg
push
dec
movsb
mov
scas
cld
mov
push
push
enter
adcb
cmpsb
shrb
dec
ljmp
ss
cmpsl
iret
icebp
pop
sub
or
mov
out
icebp
rolb
neg
sbb
sub
mov
stc
dec
lods
fnstsw
mov
cli
xchg
es
ret
add
pop
clc
xlat
mov
out
mov
nop
jne
sub
sub
dec
test
xor
mov
mov
xchg
out
and
adc
jecxz
xlat
or
jnp
mov
mov
sbb
leave
loopne
nop
xor
rclb
hlt
sub
jmp
mov
xor
lcall
mov
mov
jle
enter
push
mov
xor
inc
jbe
movsl
or
daa
sub
std
insl
cmp
pop
adc
inc
mov
or
loope
xor
fstpl
sbb
pop
mov
sub
pop
mov
push
clc
push
test
and
push
insl
or
and
sub
mov
lret
and
ljmp
test
pop
inc
test
popa
lret
jae
dec
inc
push
stc
ljmp
mov
jns
loop
xchg
dec
mov
jecxz
mov
cmp
or
scas
adc
in
xchg
out
xor
push
sahf
mov
out
pop
cmp
es
inc
pop
enter
cltd
pop
fs
fisubrs
push
and
jnp
jns
roll
add
push
add
dec
std
sub
stc
sbb
test
dec
outsb
mov
xchg
fildll
mov
addl
push
pop
movsl
mov
ror
dec
inc
into
push
scas
jb
mov
jl
fnsave
movsb
in
mov
sbb
xor
mov
push
push
das
std
jmp
sub
xor
stos
or
test
mov
lcall
inc
dec
dec
xchg
daa
test
out
insb
sbb
sub
in
xchg
fildl
movsl
dec
pop
test
dec
cld
outsb
sub
xchg
mov
icebp
cli
mov
jp
add
add
out
jge
movsb
pop
sti
push
jl
andl
cvtps2pi
pop
addb
cmp
jle
mov
inc
cwtl
xchg
inc
jg
mov
push
or
jle
orb
out
jl
adc
jae
ss
out
mov
xor
int
push
mov
idivb
sub
mov
push
sbb
inc
cli
gs
loope
xchg
xchg
cmp
std
sub
or
sub
popf
repnz
test
jo
push
subl
and
jge
je
mov
xchg
cmpsb
adc
setl
out
or
xchg
pop
jmp
popa
mov
jecxz
in
loopne
movsb
loope
shll
pop
or
mov
aas
cmp
push
mov
dec
cwtl
and
and
mov
loope
outsl
dec
out
imul
in
iret
in
fsubrl
notl
sub
xor
movsl
sbb
lret
mov
inc
jns
add
pushf
sub
out
push
in
jg
sub
loope
push
add
jecxz
adc
mov
gs
insb
add
in
push
mov
fdivrl
push
jmp
insl
outsb
dec
movsb
fists
std
xchg
dec
popf
push
mov
adc
jne
lahf
enter
roll
and
lea
mov
data16
out
or
addl
sub
push
sub
push
nop
popf
fldenv
push
sbb
adc
push
fmuls
pop
ffree
jecxz
lret
jbe
mov
dec
test
pop
push
mov
xor
jbe
sbb
rcrb
repz
mov
mull
leave
or
adc
mov
lret
mov
test
adc
push
in
and
cld
sub
outsb
ficomps
xor
fwait
pop
rcrb
mov
pusha
push
lods
iret
lods
stos
imul
lret
cmp
insb
sbb
push
jg
ud2
sbb
jmp
sub
lcall
out
adc
push
mov
mov
mov
addr16
inc
and
inc
clc
xor
cmp
mov
add
adc
dec
fcmovb
pusha
ja
cmp
test
add
mov
shl
lret
or
xchg
imul
cmp
sub
and
mov
jecxz
aad
fsubs
mov
in
and
dec
aas
dec
adc
dec
enter
xor
sub
scas
lret
enter
cmp
stos
add
movsl
mov
sbb
or
notb
dec
lock
push
jno
je
out
pop
pop
imul
add
inc
mov
std
test
leave
adc
mov
xchg
fs
shll
pop
call
fbld
add
mov
cld
mov
sti
mov
xchg
jne
es
mov
int
cmp
jbe
popf
and
sahf
int
imulb
cmp
mov
je
dec
push
push
pop
fs
fidivs
gs
push
push
int3
popf
and
cmp
ret
mov
xchg
xchg
jnp
push
adc
adc
mov
jl
push
aaa
imul
jecxz
xor
xor
insl
inc
sub
inc
sbbl
sahf
inc
sub
jl
aaa
jecxz
cld
add
scas
pop
aam
fisubl
xor
dec
or
or
jnp
cwtl
xchg
sbb
js
repnz
loop
dec
sbb
xchg
int3
or
pop
fidivs
xchg
and
xor
out
fwait
aad
cs
iret
add
imul
pop
cmpsb
jne,pn
stc
adc
int
aad
jge
and
pop
sti
fldt
mov
inc
mulb
mov
popa
xchg
in
mov
xchg
in
xchg
mov
push
fdivp
push
adc
cmpsl
loope
icebp
xchg
js
popf
push
cwtl
cmp
mov
in
std
cli
push
popa
sahf
mov
dec
ja
adc
push
testb
aam
repnz
xchg
mov
in
mov
fcompl
clc
jns
aam
push
pusha
adc
cmp
push
push
in
jbe
add
dec
jno
mov
call
aad
xchg
in
xchg
pop
xor
sbb
aas
jno
mov
popa
ja
in
sbb
mov
sub
cwtl
shlb
fnstenv
repz
pop
fisubrl
fmul
sbbb
insl
mov
lock
leave
repz
sbb
fnstenv
filds
outsl
loope
mov
push
xor
sbb
rclb
xor
cmp
lcall
shl
inc
or
iret
pop
ffreep
out
or
push
jbe
in
xchg
mov
in
addr16
sub
ret
divb
xchg
mov
jmp
jb
mov
add
pop
icebp
fstps
sti
mov
inc
mov
cmc
inc
cmp
and
mov
pop
push
adc
pop
and
xchg
xchg
mov
ret
xor
cs
mov
lahf
inc
cld
xor
inc
imul
out
xchg
cmp
push
pop
push
gs
rcll
lock
hlt
push
into
pop
cli
stos
and
mov
pop
loop
insb
rcl
dec
jecxz
jnp
inc
sbbl
jbe
sbb
push
aaa
add
aaa
pop
push
cmp
aaa
sbbl
lds
cmp
cmp
movsl
popf
push
mov
mov
xor
inc
cwtl
inc
out
jbe
lret
pusha
xchg
shl
shl
jb
inc
inc
mov
xchg
xchg
test
mov
call
popa
in
mov
ljmp
test
sub
gs
ret
ss
lods
xor
sbb
mov
push
adc
cli
aas
xchg
int3
sbb
xchg
sbb
cmp
fwait
shrb
daa
inc
enter
or
xchg
addr16
sub
pop
clc
mov
mov
jno
out
xlat
mov
aas
pop
adc
mov
std
push
xchg
sti
lock
into
jae
mov
sbb
mov
push
test
sbb
scas
mov
ja
xchg
and
dec
push
mov
xor
jmp
and
sub
pop
loope
insl
testb
and
fnstcw
call
call
sub
loope
or
popl
jmp
sub
jp
add
cli
fcmovnu
mov
int3
flds
pop
sub
add
movsl
bnd
xchg
sub
or
xor
test
int
mov
pop
cmp
mov
fimuls
ret
orl
loope,pn
mov
push
outsl
and
mov
cmp
and
test
cmp
mov
push
cmpsl
push
mov
jge
outsl
inc
dec
sbb
cwtl
sbb
sbb
cmp
pop
cmp
ja
cmpsl
aam
lahf
cli
cmp
clc
mull
aad
fbstp
push
aas
sub
add
hlt
test
dec
bound
fidivs
mov
fidivrs
lock
sahf
mov
mov
jecxz
fsubrl
lods
out
dec
int
add
aaa
add
cmp
or
aad
in
push
loop
sub
mov
jbe
jnp
out
bound
std
lahf
sbb
or
pop
fs
sbb
mov
dec
movsl
fwait
dec
push
nop
xchg
nop
mov
sahf
pushf
call
pusha
mov
push
nop
les
scas
xchg
add
std
adc
popa
out
mov
mov
xchg
in
cmpsl
cmp
mov
fadd
popa
aas
xchg
scas
mov
lea
push
popf
and
lcall
std
lds
xor
jl
cltd
cs
or
mov
inc
add
mov
dec
and
inc
xchg
out
inc
xchg
mov
shlb
push
loop
sbb
cli
in
push
mov
cmp
or
rorl
push
popa
or
jecxz
ja
test
nop
adc
scas
cld
xchg
mov
repnz
pop
jb
sti
jle
xor
mov
repnz
push
xor
into
cmp
aas
mov
sub
xchg
gs
pxor
es
jle
cld
out
push
movsb
mov
mov
lds
scas
jl
sub
inc
adc
idivb
fstpt
ja
cmpsl
loop
dec
adc
dec
push
mov
scas
jg
insl
push
push
cmp
mov
mov
mov
xor
jmp
in
adc
mov
lds
psubw
dec
push
add
imul
and
mov
jae
iret
data16
aam
shll
int
das
mov
pushl
mov
sbb
fimuls
shlb
jmp
mov
cmp
inc
xor
loop
jl
sub
dec
and
mov
sahf
lock
leave
pushf
add
sub
aam
jae
mov
and
push
sbb
loope
dec
sbb
jge
and
mov
pop
pop
xor
pusha
pop
dec
add
sbb
jo
mov
jp
dec
daa
icebp
fisubs
adcl
stos
mov
inc
gs
cli
xchg
dec
mov
push
scas
mov
pop
call
adc
aaa
daa
inc
icebp
movsb
subl
out
or
dec
cmp
movsl
lods
jge
cmp
subb
setge
jmp
add
ret
inc
icebp
mov
fbld
push
leave
push
jne
pusha
add
xor
sub
jp
iret
sbb
jbe
repz
popa
jle
mov
jb
cld
xor
mov
mov
loope
sbb
push
int3
fnstsw
adc
or
cmp
movsb
aaa
ja
arpl
ret
jg
ficomps
shll
xchg
sub
es
jmp
call
fisubrl
mov
cwtl
add
jnp
add
xor
mov
dec
test
jne
cs
insb
sub
mov
adc
xchg
mov
pop
push
test
jge
mov
xchg
sub
xchg
push
jne
pop
mov
xor
gs
adc
push
push
inc
jle
cmc
jnp
lds
daa
jge
mov
push
outsl
lret
add
mov
sbb
cmp
shl
popa
xor
lods
sbb
roll
and
pop
in
xchg
add
mov
imul
into
lds
and
cmp
testb
dec
adc
nop
dec
and
mov
mov
jg
mov
int3
fcom
arpl
xor
popf
sbb
inc
bound
mov
nop
mov
sbb
cwtl
dec
dec
sbb
jae
xor
pop
call
push
popa
rcr
and
lret
in
je
gs
test
fs
adc
fmul
mov
adc
mov
out
lahf
push
fisttpll
push
mov
inc
inc
mov
pop
movsl
jmp
or
jo
repz
jno
gs
imul
push
popa
sub
int
pop
arpl
xlat
cmp
ret
mov
sub
leave
sbb
lods
and
sbb
dec
dec
cmp
jg
jmp
xor
addr16
roll
sahf
cli
adc
mov
or
fadds
fcmovne
shr
mov
arpl
push
mull
sbb
test
mov
xor
mov
sub
jle
mov
je
pop
imul
xor
fisttpll
dec
enter
jmp
and
mov
andl
andb
sbb
outsb
inc
cmp
mov
stc
repnz
jno
cmp
test
negb
addr16
shll
mov
cmp
jle
call
dec
mov
fsubrl
movb
movsb
inc
sbb
iret
sub
in
pop
jbe
xchg
jl
and
dec
dec
and
lcall
movsb
loope
jbe
sbb
mov
push
les
jae
das
xchg
mov
mov
and
bound
xorb
outsl
fdiv
push
sbb
cmp
pop
or
push
jne
lods
out
inc
push
push
mov
xchg
dec
scas
jbe
or
sub
adc
icebp
movsl
mov
pop
stc
jbe
mov
pop
xlat
inc
mov
jmp
mov
sbb
cli
js
push
out
jb
sbb
xor
movsb
out
mov
jbe
lret
lock
daa
push
push
imul
cmc
ljmp
jno
inc
mov
xchg
das
jb
cld
xor
jne
mov
and
cmp
jae
fisubrl
mov
mov
dec
xchg
cmpsb
cmp
imul
cmp
sub
pop
jae
mov
and
jmp
fidivrs
test
push
ret
in
sbb
leave
add
lds
jo
movsb
adc
jecxz
ret
inc
adcl
or
mov
lods
mov
sub
aam
push
lea
insl
mov
and
and
ret
push
inc
icebp
call
sub
lret
pusha
xchg
pop
jne
adc
or
ret
sub
mov
hlt
jmp
mov
cmp
and
add
cwtl
sbbb
clc
push
add
xor
push
into
pop
add
adc
pop
dec
inc
dec
mov
pop
fildll
mov
out
mulb
sub
movsb
or
pushf
popf
fldcw
fimull
loopne
dec
and
stos
sub
mov
rcr
cltd
sub
les
ror
data16
sub
clc
cmp
xor
mov
mov
nop
int3
push
jnp
shlb
in
push
jne
pop
std
push
inc
jns
push
test
dec
mov
push
mov
mov
xchg
cmc
addr16
xchg
fadds
mov
outsb
pop
cmp
rorl
pushf
ds
out
cltd
jne
push
cbtw
aaa
mov
shlb
imul
ljmp
out
jmp
mov
lcall
mov
aas
sbb
jo
add
mov
xchg
and
xchg
ja
push
sbb
mov
in
push
mov
test
fs
xor
xlat
xlat
xchg
push
inc
xor
add
lret
jno
push
push
mov
aas
pop
cld
push
xchg
popf
add
mov
movsl
arpl
lods
adc
jmp
cmpsl
jl
inc
sbb
mov
in
mov
jno
jmp
mov
xchg
push
cmp
push
dec
mov
nop
std
imul
dec
stos
out
cs
sub
sbb
popa
test
mov
and
and
mov
scas
pop
addl
insb
in
pop
enter
xchg
pusha
mov
dec
xchg
xorl
insl
fiadds
mov
cmp
int3
stc
sbb
mov
aas
pop
sbb
int
jns
mov
call
or
inc
std
pop
adc
mov
inc
or
pop
in
add
call
xor
adc
fildl
and
clc
in
dec
fwait
and
inc
mov
push
repz
jns
repnz
je
pop
test
js
scas
or
sub
outsb
push
call
iret
sbb
ss
lret
mov
test
sahf
movsl
mov
iret
mov
and
jae
arpl
shll
sub
inc
push
xor
and
in
sbb
pop
outsb
hlt
test
loopne
aam
dec
cltd
mov
cmp
jb
lods
sahf
mov
popa
and
aam
popf
mov
mov
mulb
pop
fwait
adc
sbb
xor
lret
lea
out
lds
inc
sbb
fdivs
call
add
enter
pop
call
or
pop
mov
negb
std
jmp
fistpll
push
lcall
sti
enter
mov
icebp
stos
xor
mov
shrb
mov
sub
push
xchg
xchg
sbb
adc
call
add
ret
xchg
lock
mov
outsb
sub
add
in
imulb
fcoml
dec
mov
loop
cmp
or
lcall
sub
dec
aam
lods
xchg
lcall
fbld
or
outsl
aas
xchg
rorl
jne
xchg
lock
scas
jecxz
insb
adc
fisttpl
lret
aas
add
mov
ds
cmp
fnsave
aaa
xchg
mov
xchg
lods
mov
vpsrlw
shrl
xchg
sub
cld
xor
or
dec
adc
daa
cwtl
in
xchg
in
clc
jl
mov
arpl
push
das
enter
test
rcr
push
lcall
into
insl
into
jg
mov
xchg
mov
pop
in
add
cmp
jnp
and
loop
jle
and
ret
mov
xor
lret
aam
lret
test
rclb
imul
int
aam
adc
cmc
jne
notrack
mov
sub
nop
jno
aad
in
jb
xor
push
xor
mov
clc
insl
inc
pop
sarl
sahf
punpckldq
add
inc
push
je
sbb
lods
test
in
popf
pop
xorb
sti
sbb
mov
iret
dec
outsb
testb
mov
inc
dec
and
scas
sar
addr16
pop
sti
mov
sbb
jae
hlt
mov
pop
mov
adc
mov
out
andl
movsl
sub
jg
es
jo
inc
enter
sbb
into
add
cmp
jbe
inc
xchg
test
out
enter
inc
xor
movsl
dec
mov
jns
xor
pop
ss
ljmp
frstor
or
or
mov
mov
sbb
ja
pop
mov
cli
sbb
mov
mov
in
loope
pusha
xor
mov
jmp
adc
mov
popf
out
push
mov
dec
sarb
repnz
cwtl
lcall
movsl
and
mov
jne
cmp
jl
incb
ret
fcmovnu
push
in
inc
test
sub
sub
inc
adc
je
cld
adc
out
stos
xorb
movd
mov
loope
mov
mov
xor
mov
mov
jno
cltd
fnstcw
mov
push
test
push
dec
xor
sub
dec
jnp
adc
aaa
cmp
pop
in
or
push
mov
lcall
cmp
popw
pop
push
adc
popf
fsubrl
or
repnz
jne
aas
push
lods
add
repnz
cmpb
cltd
add
scas
daa
ret
fs
iret
mov
sbb
aas
adcl
stc
cltd
pop
add
das
mov
add
repz
das
mov
mov
out
xor
xor
inc
cltd
lret
fpatan
xchg
cltd
stos
fnstcw
loop
or
cwtl
mov
cmpsb
mov
out
jmp
mov
mov
xchg
cmpsb
adc
sbb
outsb
repnz
jae
lcall
sbb
sbb
pop
xchg
cmp
fs
jns
push
add
push
adc
addl
jae
add
jp
cmpsb
push
bnd
pop
sub
int3
mov
push
sbb
xchg
mov
push
push
mov
popf
push
cmc
mov
pop
pop
sub
test
cmp
andl
fwait
jg
jg
xor
pop
push
fs
inc
aam
sbb
add
lcall
fwait
mov
out
xchg
pop
addb
xchg
pop
push
add
dec
dec
add
nop
xchg
fisubl
sahf
push
repnz
sub
cwtl
in
imul
xor
xlat
inc
enter
leave
lahf
push
sub
or
enter
push
fisttps
push
fprem1
push
push
arpl
cwtl
jge
call
test
stos
xchg
imul
imul
pusha
or
inc
sub
ds
jbe
lret
push
int3
xor
cmpb
sub
jo
shll
ljmp
lret
aad
pop
stc
outsl
xorb
data16
imul
test
add
cwtl
aam
imul
push
cli
icebp
stos
mov
int3
push
leave
fmul
dec
dec
jmp
incb
insb
adc
sti
inc
pop
sub
subb
cmp
jns
insl
or
fstpl
xchg
pop
ljmp
xchg
add
lds
stos
or
jge
xor
mov
sub
in
stos
cld
mov
push
add
adc
repnz
xchg
mov
insl
stos
insb
or
or
xlat
faddl
test
gs
pop
lods
jle
in
push
imul
mov
aas
pop
int3
fidivrl
mov
jge
addr16
loopne
and
lods
mov
inc
les
rolb
pop
outsb
push
xchg
add
lret
pop
call
xchg
aad
xorl
in
mov
xor
ret
fsubl
gs
add
ss
gs
pop
mov
add
pop
mov
sarl
xchg
jnp
fstpl
ret
mov
dec
cmp
aas
mov
fs
mov
test
xor
mov
pop
adc
sbb
jo
push
and
lods
jmp
push
push
into
dec
xor
jne
xchg
jae
mov
push
pusha
mov
pop
mov
mov
mov
adc
sbb
push
loope
push
push
cmp
pop
mov
ja
xor
jle
cmp
pop
add
divl
mov
or
rcll
jle
dec
fstl
mov
imul
cli
jne
fmull
testl
pop
fildl
xchg
and
pop
popa
sbb
xor
xchg
mov
push
lret
add
jmp
ljmp
ret
scas
cwtl
das
out
mov
xor
adc
sbbb
lahf
icebp
pop
sub
lcall
cmp
fiadds
sbb
jns
push
fdivl
outsl
dec
xor
jbe
push
push
decb
add
enter
int3
inc
mov
out
arpl
cwtl
cmp
shlb
mulb
dec
bnd
int
mov
inc
fs
cmpsb
pop
loope
dec
outsb
sub
loopne
lods
pop
test
fucom
or
sti
out
push
sub
cmp
inc
mov
inc
add
dec
arpl
pop
negl
aad
mov
stos
fisubs
idiv
add
in
cmp
mov
clc
push
dec
xchg
stc
es
cmp
push
cwtl
jnp
lcall
lea
dec
mov
pushf
mov
int
pop
jle
xchg
fcoml
push
add
jl
xchg
mov
push
sub
pop
lret
and
mov
dec
sbbl
loop
cmp
mov
and
mov
mov
cs
mov
add
cmpsb
pop
mov
daa
jns
xor
fcompl
mov
jecxz
lds
lock
xchg
jb
je
push
into
jbe
cltd
lock
out
sbb
dec
aaa
imul
fwait
jnp
sarb
mov
inc
sbb
mov
xchg
fiadds
js
test
arpl
xor
in
xor
add
int
mov
mov
cmp
push
sti
cs
repz
adc
das
adc
shl
jo
aas
stc
mov
sbb
call
mov
aas
dec
xchg
ljmp
push
fwait
mov
mov
dec
xchg
pop
fstl
clc
mov
pop
jg
xchg
call
pop
and
sti
and
adc
ja
aaa
dec
mov
cmc
mov
jmp
mov
out
mov
or
jl
fsub
stc
cmp
je
rcrb
scas
hlt
add
into
mov
jg
or
and
and
sbb
popf
jge
add
sahf
dec
lock
mov
mov
hlt
iret
sti
mov
xchg
ljmp
mov
jp
test
inc
push
add
inc
adc
lds
gs
daa
sbb
mov
cltd
pop
popf
jae
das
cmp
jno
push
mov
sahf
es
pop
lcall
xor
nop
into
cmp
and
mov
inc
pop
xlat
lcall
inc
xchg
mov
and
sub
mov
das
pop
mov
sbb
lods
lcall
enter
sub
daa
arpl
adc
lods
add
lahf
cmpsb
aas
xor
scas
xchg
mov
cltd
decl
aas
cmp
inc
pop
inc
in
mov
xlat
mov
jg
popa
xchg
lock
mov
mov
hlt
fisubrs
loope
jmp
mov
mov
outsl
jno
pop
enter
add
addr16
push
or
jge
fmull
enter
fidivrs
jb
insl
sub
addb
push
movsb
inc
mov
loopne
and
inc
xbegin
jbe
les
sub
add
mov
out
mov
aam
push
lods
cmp
xor
stos
movsl
adc
insb
dec
jp
xchg
pop
loope
sahf
push
in
sub
push
jne
mov
or
or
mov
or
xchg
das
or
aam
fldcw
negl
jne
xlat
lahf
adc
inc
imul
fisubl
and
pop
sbb
mov
stos
mov
ficoms
movsb
or
mov
pop
rcr
pusha
cmc
inc
mov
movsl
dec
dec
push
pop
sarb
jbe
loop
mov
dec
lcall
out
rclb
popa
mov
mov
inc
in
mov
fadds
sbb
cmp
push
jmp
pop
repz
sbb
jnp
sbb
and
or
jbe
push
stc
inc
push
pop
dec
sarl
shll
outsl
add
and
push
pop
sub
loop
cwtl
cmp
pop
lret
sub
stc
mov
and
ss
cmpsb
jmp
adc
pop
inc
ret
xor
outsb
subb
mov
xchg
jmp
fldcw
bound
xchg
mov
adc
lret
sbb
adc
xchg
icebp
out
inc
fidivs
mov
mov
and
loop
notb
sbb
mov
push
mov
ss
jg
fdiv
outsl
mov
fcmovb
push
jge
dec
data16
xchg
sub
movzbl
ret
jecxz
cltd
inc
sbb
jae
pop
push
imull
in
imul
dec
or
ret
fidivrl
xchg
sbb
mov
cmpl
jge
hlt
adc
and
mov
es
push
je
xchg
and
mov
adc
das
cwtl
mov
imul
cmp
out
cmpsb
xchg
adc
insl
sbbb
xor
ret
ja
mov
push
pop
test
or
clc
out
mov
push
lea
jns
daa
divl
jmp
mov
add
sub
add
addl
push
loop
scas
std
lock
lods
lods
jo
cltd
mov
sbb
les
jecxz
loopne
xchg
sbb
mov
rcrb
out
pop
fwait
jp
fnstsw
push
xor
in
shrl
xchg
aad
xchg
pop
cmp
dec
fwait
out
lahf
jbe
add
fisttpl
fs
mov
lock
mov
addr16
fcmovne
jnp
add
orl
push
adc
loop
data16
leave
pop
loope
clc
nop
pop
dec
addr16
add
cmpsb
test
roll
xchg
xchg
inc
inc
sub
inc
add
ja
in
int3
cwtl
jo
out
shll
aaa
mov
movsb
mov
pop
loop
enter
stc
jmp
add
lcall
dec
dec
je
fsub
movsl
mov
call
lea
dec
ret
divb
xor
push
jmp
and
clc
jecxz
jg
leave
mov
pop
test
jbe
popa
cmc
push
sbb
cmpb
or
outsl
movsb
sbb
aaa
xchg
pop
xor
mov
jge
sub
mov
int
icebp
arpl
sbb
xor
jns
popf
xchg
arpl
cmp
bound
pop
call
jno
pop
cmp
pop
mov
mov
repz
cld
xor
test
jmp
mov
jp
jns
outsl
mov
cwtl
int
xor
or
push
xor
and
lcall
aad
call
mov
xchg
xor
pop
ret
loop
jl
daa
or
ja
adc
aaa
or
mov
jbe
pop
call
pushf
aaa
xchg
addr16
std
xor
dec
sahf
mov
out
fdiv
jge
pop
mov
push
mov
jmp
push
insb
fnstcw
in
dec
out
jmp
dec
stos
push
sbb
push
mov
dec
and
daa
or
stos
xchg
mov
mov
and
cmp
inc
xlat
inc
out
lea
xchg
fisttps
int3
mov
mov
push
add
mov
lcall
leave
adc
pop
push
xchg
es
mov
mov
addl
out
push
dec
sbb
loop
repnz
insl
add
lods
or
xor
loop
cmpsl
cmc
adc
cmp
testl
xor
int3
dec
push
out
push
ss
sahf
mov
adc
xor
cmp
mov
xor
pop
fs
mov
lret
jne
cmpsb
jo
push
notb
gs
addl
dec
sub
sub
inc
fnstcw
pop
das
mov
push
mov
dec
imul
sub
mov
pop
add
lock
sub
lock
seto
add
push
jle
pop
shlb
sub
stos
dec
mov
repz
hlt
add
nop
lds
jl,pt
out
dec
jl
mov
add
sbb
cltd
cmp
mov
icebp
mov
pop
or
sahf
sub
movsb
data16
mov
add
sbb
js
mov
cmp
lods
cmp
pop
mov
ljmp
cmovs
push
loope
push
inc
lret
test
scas
jp
push
outsl
add
sub
mov
test
pop
test
das
loope
jle
jo
xchg
int3
pop
ljmp
ds
push
xor
arpl
push
adcl
cmp
mov
shlb
push
cmp
mov
jbe
push
ss
enter
sbb
jg
shl
addr16
mov
mov
imul
mov
pop
xlat
and
push
mov
cmp
ljmp
inc
push
inc
rcrl
dec
subl
mov
push
sbb
xlat
pushf
mov
xchg
cld
add
js
fldcw
mov
mov
pop
xchg
js
mov
cmpsl
sbb
scas
dec
xchg
pop
movsb
lcall
mov
jns
mov
adc
mov
mov
outsl
nop
xchg
cmp
mov
cmp
or
add
mov
cwtl
clc
movsl
sub
jl
cmpsl
mov
repnz
cld
sbb
pop
repz
pop
push
andl
mov
sbb
aam
mov
outsl
mov
adc
xor
inc
aas
mov
fcmove
adc
xchg
out
jae
jae
std
pushf
adc
cmp
push
pushf
inc
push
ret
mov
lcall
shll
add
fisttpl
mov
xor
dec
or
and
xchg
in
sub
cmpl
or
cmp
mov
jp
lock
xchg
inc
sbb
xchg
ret
sarb
cmp
push
or
mov
xor
push
adc
aas
xor
mov
cs
xor
dec
stos
idivl
negb
sbb
repz
xchg
jnp
ss
out
inc
dec
jns
loop
fistps
mov
int3
pop
fbld
scas
dec
add
cwtl
cmp
cld
mov
xchg
or
imull
mov
pop
sub
cs
lods
mov
les
pop
jle
and
mull
mov
shrb
in
sbb
addr16
fnstenv
mov
rcll
mov
scas
push
or
pop
shl
dec
std
mov
jnp
test
mov
jo
pusha
das
outsb
clc
pusha
jle
rolb
rclb
popf
aaa
push
push
lahf
jecxz
xchg
cltd
bound
mov
fidivrl
fnstenv
iret
shr
lcall
icebp
sub
loop
push
clc
push
stc
jg
jle
test
stos
int
fimull
vrcpps
shr
inc
pop
inc
fsubrl
stc
daa
das
outsb
mov
jl
pop
jno
jg
call
pop
clc
push
xor
or
mov
mov
fidivl
mov
push
mov
repnz
jbe
sub
ja
fcomp
sbb
dec
subl
fs
rol
mov
ja
rolb
push
sbb
popf
push
outsb
push
ljmp
cmpsb
xlat
sbb
lods
push
int
shl
les
sbb
adc
imul
scas
loope
xchg
inc
xor
pop
mov
sub
icebp
jp
push
les
pop
movsb
inc
ret
or
rcl
pushf
xchg
cmp
aad
pop
add
hlt
xchg
rcl
repz
push
pop
shl
sub
pop
mov
mov
mov
scas
hlt
inc
pop
lds
test
in
add
xchg
dec
pop
or
js
inc
adc
or
inc
mov
or
setae
sarl
and
pusha
out
dec
and
mov
cli
mov
sub
scas
xlat
xchg
mov
mov
call
or
idivb
inc
inc
shll
in
jno
out
xchg
or
iret
xor
popf
pop
push
sahf
ja
pop
test
cmpsl
push
add
inc
lods
dec
mov
xor
jecxz
xor
mov
arpl
and
pop
data16
xchg
dec
mov
pop
jne
push
sub
dec
mov
mov
mov
mov
icebp
call
repnz
je
push
sbb
pop
or
test
inc
jae
in
hlt
push
and
movsb
jnp
int
sub
outsb
inc
int3
dec
xchg
xor
stos
mov
add
xchg
das
inc
popf
fimuls
lret
dec
xorb
mov
dec
mov
das
adc
mov
shll
sbb
jno
push
cmpsb
movsl
mov
scas
cld
imul
outsb
lret
push
fcom
js
xchg
sub
xchg
lock
mov
jmp
push
dec
ljmp
test
mov
fidivrs
test
xchg
in
enter
bound
mov
add
mov
scas
dec
pop
mov
das
mov
incl
pop
or
js
cs
jmp
repnz
jno
adc
movsb
push
push
rcll
arpl
sub
lods
dec
push
jl
gs
and
xchg
sbb
fsub
inc
adc
int
dec
push
lods
pop
outsl
imul
mov
xchg
mov
push
push
fsincos
leave
idivl
cmp
imul
aas
pop
insl
orl
cmc
mov
inc
into
xchg
and
hlt
in
inc
ds
iret
cmc
int3
popa
leave
sub
popa
insb
cmp
test
push
push
fsubrl
movsl
jns
cld
ret
xor
ljmp
arpl
dec
jbe
insb
fbstp
inc
adc
or
cld
or
cmp
popa
aam
mov
xchg
scas
push
pop
fsubrl
jecxz
dec
mov
add
fwait
lahf
popf
cltd
cmp
dec
cmp
fisubs
lahf
shld
push
add
fcomps
push
lea
xchg
lock
add
stos
and
notb
ret
je
or
lahf
mov
adc
call
das
cmp
pop
push
jae
mov
cs
lock
int3
sub
adcl
mov
das
mov
cld
mov
loopne
std
or
mov
mov
mov
ja
add
or
mov
cmpsb
pusha
pop
inc
dec
leave
nop
and
test
and
xchg
pop
fs
jno
xlat
mov
call
cmova
fstl
fs
pop
lods
xor
les
push
mov
test
or
ljmp
add
movsb
and
cmp
add
mov
imul
jno
xchg
mov
lods
mov
fists
xchg
negb
mov
and
insl
sbb
sub
xchg
sbb
jno
fwait
push
stc
lret
lahf
out
add
loope
push
inc
adc
addb
out
or
nop
inc
out
in
push
fists
jp
nop
or
or
cltd
adc
or
or
jecxz
mov
add
imul
push
lret
subb
inc
xchg
lock
into
loope
dec
cli
jo
mov
div
jne
jmp
pop
es
jg
sbb
stos
inc
xor
inc
les
cli
and
cld
sti
or
iret
inc
pusha
cmp
pushf
mov
fidivrs
scas
pop
int
adc
out
cmp
dec
sti
scas
xor
and
mov
mov
and
xchg
sbb
sub
sbb
push
add
xlat
int
sub
inc
sub
add
xchg
inc
dec
jmp
lock
cmp
ja
lock
divb
cmp
sbb
mov
xchg
jo
std
rclb
push
mov
test
cmp
mov
test
and
aaa
jo
stc
pop
jl
push
cmpsl
adc
jb
xlat
adc
sarl
mov
and
outsb
fucomi
push
out
push
ss
inc
adc
pop
jae
fadds
mov
insl
aad
cmpsb
dec
call
sub
xor
mov
int3
dec
loope
ror
xchg
jo
out
aaa
ss
out
inc
pop
xchg
daa
scas
out
adc
mov
pusha
scas
pop
pop
inc
loopne
into
xchg
mov
test
mov
mov
xchg
push
xchg
jmp
push
out
xchg
jb
mov
iret
fisubrs
sub
pusha
jo
pop
dec
movsl
xor
jl
scas
pop
negb
repnz
xchg
testl
outsl
cld
push
and
sbb
pop
cltd
add
inc
stc
push
testb
pop
push
mov
and
ficoml
int3
xchg
mov
dec
push
mov
xchg
mov
add
lea
jo
or
mov
in
inc
mov
dec
adc
xlat
pop
jp
icebp
sub
add
mov
or
out
in
pop
lea
nop
mov
mov
lret
mov
pop
mov
xchg
ss
stc
movsb
cmpsl
mov
loopne
and
arpl
sbbl
and
xchg
inc
test
sbb
outsb
add
cld
jmp
popfw
xchg
or
scas
jg
mov
pusha
insb
outsl
push
hlt
mov
sbb
or
cld
or
push
sbb
push
pop
sarb
movsl
js
ret
test
pop
pusha
jp
divb
test
jp
aad
rcl
sub
jae
adc
pop
dec
adc
pop
mov
dec
push
push
std
sahf
jns
icebp
jp
frstor
lods
adc
lret
cwtl
and
cmp
pcmpeqw
rolb
push
xor
fs
push
aad
loop
xchg
leave
shlb
jae
xchg
mov
adc
or
jno
jecxz
adc
insl
jb
xchg
adc
jle
add
mov
fwait
xor
jo
test
mov
divl
mov
push
les
jne
mov
cld
fldt
jmp
pop
and
xchg
pop
ljmp
push
jmp
push
popf
lret
pop
aas
loopne
pusha
test
mov
orl
in
sbb
sbb
add
cmpsl
pop
lock
inc
inc
push
std
lds
mov
test
cmpsb
and
int3
popf
sbb
and
pushf
fdiv
cmpsb
scas
mov
aaa
push
cmp
inc
ss
lock
cmpsb
test
fnsave
inc
or
adc
ds
dec
bswap
aaa
lcall
mov
push
cmp
into
mov
inc
dec
ja
cli
mov
mov
testl
adc
pop
fidivl
mov
or
push
adc
mov
xchg
xor
imul
mov
lods
mov
or
xchg
ja
into
dec
jno
xchg
sbb
outsb
mov
hlt
mov
stos
mul
mov
gs
xchg
mov
add
ljmp
cmp
mov
leave
fs
push
mov
xchg
xchg
jecxz
repz
sub
or
xchg
inc
movsl
add
js
adc
loopne
lret
repnz
push
sbb
insb
xor
pop
mov
inc
sub
xlat
jmp
out
pop
ja
jne
push
cli
loopne
enter
imul
sbb
mov
rcrb
push
aad
mov
dec
dec
inc
push
adc
jmp
ret
into
out
pop
movsb
xor
loop
icebp
xor
cli
push
push
jb
mov
pop
popa
inc
sbb
sarb
jmp
insl
pop
fsubl
fisttps
dec
adc
inc
lcall
pop
clc
inc
sbb
stos
inc
loopne
test
call
jbe
pop
fcmovu
or
mov
pop
cmp
add
and
add
push
mov
xor
inc
adc
in
mov
mov
in
je
push
test
js
jns
fsubl
push
and
push
scas
in
mov
jne
inc
add
aaa
adc
lods
test
xchg
cli
fmuls
loope
mov
cmpsl
movsb
imul
mov
xor
push
je
dec
test
pop
imul
xor
push
dec
mov
or
bswap
cmp
movsl
insl
cmp
cmp
fwait
test
mov
imul
test
lock
mov
and
out
jg
aad
jnp
sub
add
pop
and
outsl
inc
imul
or
incb
loope
jmp
loop
dec
das
mov
jmp
enter
add
fxch
orl
mov
rorb
test
mov
mov
sbb
sbb
pop
sbb
pop
fwait
mov
mov
out
push
fbstp
jp
sbb
sbb
movsl
mov
scas
xchg
push
jmp
push
ljmp
push
lahf
sbb
add
push
cmp
addr16
ds
int
mov
cmp
pop
stos
sub
dec
js
adc
cmp
pop
mov
push
cmp
push
les
lcall
cltd
and
mov
dec
insb
adc
xor
repnz
fstl
mov
inc
cltd
idivb
mov
mov
mov
inc
ror
push
jp
jno
push
fs
or
bound
scas
in
cmp
or
dec
insl
mov
outsl
or
push
sbb
stos
inc
pop
jne
add
fisttpll
hlt
out
jno
sahf
test
daa
dec
inc
jo
and
inc
cmp
leave
mov
xchg
mov
dec
xor
dec
in
sub
aaa
lods
aas
cwtl
es
nop
lahf
arpl
mov
addr16
add
dec
add
test
int
in
sti
scas
push
int3
icebp
and
push
and
xchg
xchg
pushf
enter
or
mov
int3
push
sahf
jbe
mov
jge
div
repz
int3
cld
orl
cld
cltd
sbb
sbb
lcall
mov
loope
movsl
rcl
inc
lea
pop
mov
inc
xchg
fwait
jae
ficoml
orl
int
cmpsb
xor
or
push
jg
rcl
enter
cs
js
popf
ret
cmpsb
jbe
push
out
test
or
loop
dec
sub
xlat
loope
lret
js
pop
jecxz
inc
add
stos
adc
jmp
or
sbb
sti
clc
mov
dec
push
pop
pop
mov
push
cmp
aad
les
add
test
insb
sub
cltd
cli
or
fimull
jmp
inc
push
push
push
adc
dec
add
leave
mov
lret
imul
and
mov
notb
jns
push
jmp
inc
enter
sub
lds
jo
pop
repnz
pop
jae
push
push
loopne
stc
scas
dec
fsubl
iret
xchg
test
xchg
mov
mov
pop
int
aam
add
and
scas
leave
sub
xor
shl
or
pop
inc
and
add
in
test
sbb
popf
mov
call
mov
enter
inc
push
mov
push
jae
add
in
jne
fnstsw
mov
pop
loop
out
xor
pop
mov
dec
int3
xor
shlb
int
imul
fstl
add
inc
scas
je
xchg
add
pop
int
adc
jmp
xchg
pop
mov
test
enter
add
mov
rcrl
sbb
pop
pop
iret
adc
fisubrl
loope
adc
cmp
mov
ret
ljmp
ja
xchg
add
ret
mov
shll
mov
xor
jle
xor
in
or
hlt
insl
nop
sbb
or
fdivr
xchg
ljmp
es
psrld
adc
push
shrl
or
repnz
stc
fcoms
push
dec
clc
mov
cld
lods
inc
aaa
push
xor
inc
adc
rol
popa
mov
jmp
sbb
add
mov
clc
arpl
repnz
movsl
xchg
lods
mov
pop
out
pop
stos
mov
shlb
lret
mov
pop
insl
sub
cmpsl
rorl
cld
dec
sub
and
sbb
sub
jge
xchg
lcall
pushf
in
and
pushf
inc
xor
pop
inc
cmp
int
popa
mov
mov
out
lock
inc
out
xchg
sbb
ss
das
cmp
pop
inc
xor
push
js
xchg
and
inc
imul
mov
cmp
movsb
jae
adc
aas
mov
xchg
outsl
push
lods
xchg
push
fbld
and
out
notl
cmp
xor
ljmp
xlat
ficompl
or
sbb
js
xchg
stos
sub
mov
scas
mov
mov
jle
fisubrl
lahf
pushf
outsl
push
cmp
push
xor
add
sbb
adc
in
movsl
sub
gs
das
mov
add
rclb
push
jecxz
sbb
rcrb
dec
dec
xor
push
leave
lahf
pop
test
aad
jle
xchg
jmp
ss
cld
stos
cmp
fs
add
and
out
mov
adc
sbb
cmp
push
dec
out
scas
inc
nop
test
xchg
sub
and
jl
cmc
les
xchg
ds
or
mov
arpl
jecxz
jno
dec
ret
daa
mov
sbb
aam
outsb
roll
add
std
pushf
aas
add
xchg
scas
push
lds
jno
xchg
and
dec
sarl
insl
loopne
aas
push
xchg
xchg
mov
and
sbb
jg
jo
add
jmp
and
jmp
push
lcall
jns
mov
xchg
movaps
fadds
call
xor
sbb
cmpsb
insb
sbb
sbb
stos
inc
mov
sub
adc
jbe
dec
in
mov
popa
xchg
je
add
mov
and
mov
es
adc
pop
scas
adc
pusha
out
sub
out
jno
dec
or
sub
iret
fs
fldl
cmpsb
inc
aam
jecxz
xor
pop
or
pop
cmpsl
jb
js
add
in
jns
bound
lcall
jl
ds
hlt
mov
push
inc
sbb
bound
xchg
test
je
aad
add
fmull
xchg
imul
push
es
outsb
jnp
ret
push
iret
and
addl
popa
or
fwait
je
addr16
outsb
sub
xorps
xchg
and
pop
sahf
mov
push
cmp
mov
and
ret
in
cmp
out
mov
enter
adc
adc
push
lods
dec
sbb
push
or
push
cvtps2pi
sbb
push
sbb
sbb
clc
mov
into
in
imul
outsl
adc
loopne
scas
cmp
dec
push
and
loop
and
mov
inc
cs
mov
push
mov
addr16
and
or
shlb
mov
pop
rcll
cmpsl
out
sbb
lret
sbb
stos
xchg
scas
or
xor
hlt
ret
xchg
cmp
sbb
xor
ds
jo
int
sbb
das
dec
pusha
lds
idivl
jne
mov
pop
push
adc
sub
xor
push
adc
jmp
scas
xor
bound
enter
leave
mov
jo
mov
iret
rorb
movsb
lods
or
clc
mov
mov
inc
cmp
cmp
mull
jae
jp
add
add
add
xchg
ret
subb
scas
out
ret
lcall
mov
mov
or
adc
in
jp
adc
stc
sbbb
ds
into
mov
repnz
movlps
pop
xor
out
mov
sub
fcmovbe
fcmovne
xchg
outsl
mov
xor
cmp
dec
gs
sbb
pop
and
stos
cmc
mov
loopne
mov
lahf
xor
popf
arpl
int
fcomip
ds
inc
jne
aad
cmpsb
ja
adc
popa
dec
mov
pop
lahf
or
movsb
sub
mov
js
jno
popa
mov
nop
jbe
lcall
test
add
lea
hlt
ds
mov
jns
outsb
mov
daa
inc
jno
pop
fs
out
enter
test
mov
scas
cmc
and
jp
fs
jne
inc
cmp
jle
and
fcoml
jnp
notl
jmp
enter
test
xchg
clc
adc
push
push
mov
add
std
mov
fisubl
or
in
fisubl
shl
and
fnop
rcll
fcompl
sbb
fwait
mov
xor
push
add
testl
mov
sub
push
loopne
das
iret
shr
xchg
andl
int
xor
pop
pop
in
pop
sub
stos
cmpsl
imul
mov
fstps
lods
mov
ds
hlt
add
push
mov
inc
dec
flds
jge
ss
dec
pop
mulb
out
aam
divb
jmp
pop
cmp
jo
sbb
add
mov
mov
mov
in
add
out
cld
cmpsl
dec
mov
js
mov
or
leave
mov
stc
inc
movsl
dec
sub
dec
xchg
int
jne
sub
cmp
xchg
daa
push
or
sub
adc
test
add
sub
xlat
push
repz
and
push
xor
fdivl
pop
push
dec
sahf
mov
jne
es
ljmp
int3
stc
xchg
repz
cli
fwait
and
ja
aam
mov
mov
inc
pusha
or
mov
inc
fldcw
jmp
jl
popf
iret
in
ret
hlt
push
or
sbb
xor
movsl
pop
sbb
fs
aad
or
shlb
pop
ret
mov
inc
add
imul
xchg
test
cmpsb
icebp
push
inc
dec
bound
mov
out
je,pn
push
hlt
xchg
push
ret
inc
sub
mov
or
andl
gs
leave
xor
or
fidivrl
dec
push
mov
mov
mov
data16
jo
and
jge
in
inc
mov
rcrl
addr16
dec
hlt
sarl
mov
stos
hlt
pop
out
inc
sbb
int
in
mov
cmpsb
and
iret
imul
dec
ds
sub
outsb
scas
xor
mov
xchg
mov
xor
fstpt
scas
lcall
and
scas
dec
mov
dec
test
lods
fs
negl
fisttpll
xchg
mov
sbb
fmul
divb
les
cmpsb
adc
mov
xchg
push
and
jno
insb
repz
fdivrs
xchg
jl
leave
js
dec
in
rorb
cwtl
lods
fadds
sbb
push
dec
mov
icebp
or
out
inc
adc
shlb
sbb
or
sahf
inc
push
pushf
popa
out
lcall
sbb
xor
mov
test
frstor
addb
push
in
sahf
pop
flds
xchg
xchg
das
fwait
xor
mov
push
push
mov
xor
and
inc
push
sbb
xor
lahf
jb
fdivs
mov
shll
stos
insl
inc
nop
jae
cld
sub
sub
adc
pop
mov
test
pusha
les
sub
push
aam
sub
cmp
push
vshufpd
in
jecxz
icebp
sbb
inc
xor
test
loopne
pop
inc
lcall
mov
ljmp
fwait
adc
jmp
lcall
test
fwait
mov
jecxz
xor
cmpsb
fldl
lea
scas
in
or
push
add
data16
sahf
and
test
pop
in
in
test
clc
xchg
xchg
aas
sub
out
jae
xchg
or
loope
fwait
lret
push
and
inc
cli
insb
cli
xchg
mov
cld
das
mov
sahf
enter
cmpsl
or
roll
cmp
cmp
pop
mov
and
push
int3
repnz
lods
xor
inc
lea
testl
sbb
jns
xor
ljmp
inc
shlb
shrb
ljmp
fiadds
test
xlat
pushf
adc
xor
cmp
pusha
xchg
xor
or
pop
xor
xchg
ret
aad
mov
cmp
xchg
sbb
xor
nop
dec
jne
shl
test
movl
adc
or
push
mov
orl
xchg
fstl
mov
mov
sub
cmp
test
jmp
into
arpl
xor
and
cmp
or
out
aaa
pushl
or
pop
shl
je
and
test
lret
nop
hlt
sub
mov
into
arpl
adcl
insl
mov
jg
jns
mov
popf
lds
ss
cmpsl
popf
fdivp
mov
ret
xchg
nop
ret
popf
mov
dec
shrb
in
rolb
sbb
adc
pushw
xchg
stos
mov
lret
push
cld
sub
sarb
lods
lret
inc
data16
push
jno
loop
adc
or
cmp
mov
popl
std
inc
pop
idivb
inc
aaa
out
inc
pushf
fisubl
add
fs
pop
push
aaa
mov
enter
and
lods
into
shlb
ret
imul
cmp
push
push
pop
out
orb
icebp
scas
lcall
jno
push
outsl
inc
mov
add
bsr
fdivp
inc
mov
inc
inc
das
jo
sbb
push
jmp
in
dec
xchg
cmp
mov
rcrl
sbb
add
mov
ret
cs
dec
ret
daa
adc
xchg
fcomps
outsl
fprem
jg
loop
ret
adc
or
mov
frstpm(287
push
mov
fs
jl
xor
adc
cld
lret
push
sub
lock
les
xchg
mov
mov
rcrb
je
psrld
sysret
pop
adc
popf
mov
gs
dec
lahf
xchg
cmp
or
shll
xor
imul
fildl
mov
fimuls
enter
adc
sbb
imul
xor
sub
in
je
das
shr
stc
pop
pop
add
or
sub
test
mov
loopne
into
aas
out
std
mov
sub
lahf
push
mov
fsubr
add
fistpll
dec
das
movsl
adc
push
gs
sbb
and
loopne
call
sub
xchg
inc
movsl
loope
push
jg
subb
jmp
xchg
repz
pop
sub
cmc
std
add
js
pop
and
mov
jl
pop
lods
mov
das
in
out
adc
out
mov
xchg
pop
mov
dec
ja
xor
cmp
mov
push
cltd
stc
in
inc
jae
push
sub
in
popa
mov
cld
pop
cwtl
decl
idiv
out
push
int3
dec
jl
sub
clc
ja
add
pop
xchg
push
inc
mov
jb
stos
xchg
cmp
jecxz
movsl
xchg
ljmp
roll
scas
sub
pop
repnz
arpl
outsb
dec
jne
mov
je
or
adc
cltd
lock
pop
mov
adc
and
mov
insb
ss
adc
int
repnz
iret
aad
adc
leave
fs
lahf
testl
ljmp
sbb
into
out
jge
adc
mov
sub
lods
fs
enter
mov
sub
rcll
and
pop
test
jmp
dec
movsl
xchg
pop
push
dec
imul
mov
and
shrb
daa
dec
sbb
jecxz
test
sbb
sub
cltd
scas
fistpll
imul
out
inc
add
in
rol
xor
mov
xor
arpl
xor
lahf
test
jnp
jo
into
xchg
push
lock
mov
cmpsb
inc
sbb
lea
pushf
arpl
dec
push
icebp
rorb
repnz
test
cld
rorl
sbb
lret
mov
decl
js
push
outsb
xorb
adcb
stos
sbb
lea
xor
sub
mov
ja
push
or
test
cwtl
arpl
xchg
mov
pop
in
int
xor
insl
cltd
je
xchg
out
int3
add
dec
inc
sbb
pop
fstpl
and
icebp
in
mov
xor
mov
popf
test
mov
add
push
jb
mov
in
push
dec
pop
iret
orl
mov
mov
int
in
sti
push
jle
and
in
add
rol
cmp
daa
sarl
sbb
lcall
repnz
or
popf
stc
scas
xor
fstp
xlat
xlat
xor
mov
inc
shll
subb
lea
sbb
int
jecxz
and
push
enter
jnp
mov
mov
std
xor
loopne
inc
add
xchg
push
ja
xor
cmc
lahf
arpl
aaa
dec
inc
jb
mov
aam
lods
ja
inc
push
mov
and
icebp
jmp
jbe
mov
jecxz
pushf
xor
sub
cmp
lock
dec
sub
xorl
adc
fldt
daa
aam
or
cmc
pop
xlat
or
mov
xchg
loopne
dec
gs
js
lcall
mov
popa
sahf
push
jge
and
scas
dec
cmp
js
and
jns
pop
ret
and
cltd
jbe
bound
push
ret
and
adc
rcl
int3
test
repnz
out
out
movsb
inc
popf
jne
mov
adcb
out
pop
pop
sbb
fisttps
sub
xor
hlt
pop
out
xor
leave
and
xchg
or
jns
add
sti
xchg
mov
testl
ja
pusha
jmp
xchg
shll
out
loope
sti
fwait
push
je
xchg
push
aas
int
stc
jae
mov
test
sbb
cmp
add
cmp
rcrl
imul
outsb
in
mov
out
mov
loope
ss
jmp
std
push
out
repz
and
pop
cmp
std
and
icebp
adc
in
pop
xorb
and
mov
test
fwait
scas
push
or
insb
daa
cs
neg
adc
scas
push
stc
adc
sysret
insb
negb
push
add
push
xor
and
lret
xor
sbb
loope
and
xchg
rcl
pop
iret
std
mov
inc
pushf
jb
out
jnp
inc
jns
pop
data16
jmp
ret
pop
mov
movsl
fcoms
jne
push
fs
sbb
shlb
add
rcrb
lods
pop
mov
nop
pop
and
out
adc
je
mov
add
cltd
dec
ja
and
scas
test
jge
pop
push
das
pop
adc
add
shr
loope
xchg
xchg
mov
inc
add
insl
mov
popf
enter
cmp
popf
inc
addr16
and
orb
and
stos
pop
lods
mov
adcb
add
jmp
fisubs
jp
das
jnp
shlb
outsl
xchg
dec
hlt
or
cmp
pop
adc
jle
fnstsw
or
cmp
mov
or
repnz
sbbl
adc
pop
and
hlt
inc
push
jmp
insl
mov
inc
in
js
mov
xor
mov
xor
in
fcomps
ja
or
icebp
sub
test
repz
push
mov
sub
jg
sub
cmp
mov
inc
fdivrl
adc
cmc
loop
popf
bnd
and
mov
lods
mov
arpl
fisttps
mov
or
add
mov
xchg
add
fwait
jmp
fildll
push
out
xchg
xchg
push
fs
mov
sub
lds
push
jno
loop
inc
fstl
jg
and
aad
daa
movsl
cli
dec
loopne
leave
test
ljmp
out
pusha
fdivl
sbb
lods
push
ds
leave
arpl
loopne
dec
mov
push
filds
jnp,pn
int3
and
fs
sub
outsl
xchg
outsb
dec
mov
mov
mov
and
ret
jmp
mov
insb
mov
jp
xor
sar
pop
fs
idivl
cmpl
jae
loopne
idivb
ds
insl
sbb
inc
cmp
mov
jo
inc
cwtl
divl
xor
cltd
and
dec
enter
inc
popa
inc
lods
pusha
mov
les
sbb
mov
or
inc
imul
sarb
rcrb
rcrb
jno
push
lahf
cli
rolb
sbb
out
leave
std
sarb
adc
sbb
xor
push
leave
nop
lock
nop
mov
push
in
test
inc
jo
lcall
pop
inc
ss
xor
xchg
or
sbb
bound
dec
pushf
nop
xor
or
iret
jno
push
popf
popf
inc
cmpl
loopne
aad
dec
dec
mov
std
cli
pop
les
inc
jg
cmc
mov
adc
lcall
lea
pop
push
lds
jge
jge
icebp
cltd
jno,pn
loop
jb
addr16
cwtl
rcrb
ja
imul
adc
in
in
mov
cmp
in
test
not
out
xor
cmc
fnsave
push
pop
jns
xchg
inc
bound
icebp
mov
pop
jmp
xor
aam
xorb
mov
sbb
cs
outsb
jno
push
pop
xor
loopne
inc
out
rcl
jle
in
call
jo
bts
ss
ljmp
jp
pop
pop
cld
mov
fwait
mov
jb
sub
mov
data16
mull
pop
xor
xlat
aaa
cmp
mov
jo
and
pop
movsl
mov
add
or
or
fs
sbb
ret
call
addl
and
into
add
leave
lods
push
enter
xchg
testl
dec
mov
jp
adc
je
mov
clc
mov
cmp
inc
push
shll
inc
sub
inc
add
movsb
and
mov
mov
lahf
scas
dec
mov
mov
jae
in
stos
inc
xor
je
dec
jecxz
mov
sbb
aad
es
xlat
xchg
add
jmp
mov
fistl
ja
addr16
cltd
mov
fnstenv
outsl
mov
lcall
repnz
inc
shll
aas
loopne
push
dec
adc
rorb
push
pop
adc
and
clc
lods
sbb
sbb
pop
iret
les
sarl
pop
sub
popa
dec
aad
daa
das
xchg
inc
jne
testb
loop
or
push
jecxz
or
add
adc
xlat
cmp
pushf
iret
pop
aad
scas
js
cmp
pop
mov
jnp
in
imul
into
out
frstor
mov
jle
shl
adc
mov
into
orb
sbb
popa
das
push
or
and
push
imul
ret
push
mov
add
xor
in
sti
add
sahf
dec
aaa
daa
out
fstl
jns
sub
stc
inc
call
xor
imul
stos
in
xchg
dec
xor
movsl
sbb
scas
nop
shrl
pop
clc
ljmp
popf
add
jle
lods
cmp
sub
xorb
push
nop
decb
push
sub
xchg
dec
fs
loope
pop
rolb
cmp
push
cmp
dec
cmp
inc
mov
aad
loop
jo
sub
lret
out
sti
int
std
inc
js
data16
adc
add
xor
jb
jle
push
call
imul
cld
outsb
filds
xchg
jb
mov
sbb
inc
pop
rclb
cmp
jbe
xchg
mov
xor
dec
dec
mov
sahf
push
fwait
int
fidivl
pop
xchg
xchg
mov
sub
data16
pop
insb
jl
rorb
fcmovbe
mov
stc
and
arpl
mov
orl
js
inc
push
arpl
mov
pop
pop
out
and
dec
aaa
dec
xchg
ss
test
notl
inc
daa
cs
adc
test
popl
icebp
pop
xor
jbe
out
in
sub
and
js
lods
mov
nop
lock
and
sbb
pushf
cmp
push
mov
icebp
cmpl
jmp
or
es
pushf
mov
int
sub
mov
rorl
loope
cmp
ret
pop
bound
lock
xor
or
lahf
xor
dec
pop
xchg
ret
jns
repz
cmp
push
fneni(8087
pop
inc
out
ljmp
xlat
loope
pop
push
adc
pop
dec
subb
and
pop
out
mov
lahf
jge
push
inc
pusha
and
mov
xchg
xchg
cmp
mov
push
aad
loope
ret
cmp
in
add
movsl
pushf
pop
inc
dec
mov
pop
pop
cmc
in
mov
lods
ffree
jno
out
cwtl
andb
daa
roll
push
andb
pop
push
sbb
sbb
leave
cmp
arpl
fs
lods
jne
adc
xor
icebp
xor
sub
leave
push
xchg
js
ret
push
and
inc
test
adc
xchg
cmp
dec
xchg
pushf
mov
addb
adc
mov
and
sbbb
cmpsl
dec
or
or
ret
ds
mov
clc
pop
mov
fsubs
jb
jne
jno
jae
mov
stos
xchg
lret
xchg
shlb
pop
mov
lods
shlb
leave
daa
shll
push
mov
rcr
fcomp
xor
cmp
sar
cmp
loope
pop
nop
ret
add
movsl
gs
mov
cwtl
bound
inc
pop
daa
cmc
mov
xchg
push
lock
add
icebp
and
leave
rcl
xchg
sarb
add
cld
push
add
sbb
jbe
inc
dec
mov
lods
das
cmpsb
adc
and
pop
call
add
add
jo
cmc
das
pushf
xchg
dec
cmp
test
or
aad
sahf
push
scas
jcxz,pt
fisubrs
mov
and
push
push
cmp
push
lods
fcomp
mov
sbb
push
fs
fcompl
clc
insb
or
shl
mov
rclb
call
mov
fldcw
mov
pop
mov
and
faddp
pusha
mov
mov
pop
xor
xchg
add
mov
push
mov
inc
ret
shrl
test
sarl
jb
mov
xchg
cmp
push
cli
add
daa
xchg
xchg
iret
outsl
andb
shlb
lock
lods
ficompl
mov
lock
or
sbb
pusha
cs
and
xor
test
loop
cmpsb
cmpsb
mov
cmpsl
mov
mov
rorb
jmp
in
dec
call
xchg
inc
xor
pushl
leave
test
xchg
xor
ja
xor
dec
jl
stos
nop
int3
mov
insl
int3
sub
cld
mov
outsb
scas
adc
mov
jns
xchg
imul
hlt
add
cltd
xchg
pop
adc
add
sti
subb
cmp
dec
mov
sub
test
outsb
adc
pusha
mov
cwtl
fwait
adc
loopne
lea
and
mov
mov
fldt
xor
stos
iret
pushf
dec
cmpsb
xor
xchg
icebp
fadds
jmp
push
adc
bound
xchg
aam
add
inc
sbb
adc
add
and
jmp
lret
push
inc
lea
decl
sahf
loopne
inc
ret
jp
mov
sbb
scas
cli
fs
mov
movsl
cmpsl
arpl
sbb
mov
jecxz
jno
pop
into
arpl
mov
loop
xchg
and
stc
mov
adc
fsubrs
cs
push
sbb
mov
in
dec
sbb
loope
ja
jle
iret
cmpsl
sub
cmc
pop
jl
push
mov
notrack
and
gs
popa
in
add
data16
xchg
repz
push
movsb
cmp
fcompl
sub
push
sbb
cmp
aam
clc
fiaddl
fcom
sbb
cmp
daa
pop
psllq
out
test
pop
jne
mov
je
cmp
test
nop
mov
pop
sbb
enter
add
mov
xorl
gs
push
mov
or
jl
adc
xchg
mov
std
adc
loop
lods
cmp
enter
movsb
jp
sbb
or
xchg
pop
cmp
mov
fldcw
in
jbe
jae
jno
shl
xor
daa
cmc
scas
push
fmull
and
lea
cmpb
jbe
lahf
and
mov
xor
add
sti
or
add
jmp
mov
imul
cltd
popa
mov
popa
mov
inc
hlt
add
decb
pop
pushl
nop
xor
daa
sar
outsl
pop
gs
fidivrs
jecxz
jecxz
sbb
or
xchg
ds
fmuls
loope
mov
xchg
rolb
pop
js
in
jp
pop
and
daa
out
stos
ret
or
add
cmpsl
and
jnp
jle
xchg
or
aad
dec
jle
out
test
cld
dec
fs
or
lret
cmc
cld
sub
lds
sub
jo
sbb
sbb
jl
cmp
pop
fstl
pop
xchg
fidivrl
repnz
movsb
mov
xchg
mov
pop
mov
out
ret
daa
cmp
mov
dec
adc
dec
mov
movl
xor
dec
and
sbb
movsl
lock
jno
or
insb
mull
push
icebp
mov
pop
jmp
insb
ficoms
sti
add
pop
leave
outsl
dec
repnz
cmp
mov
xchg
and
test
cmp
aas
cmpsb
out
sbb
inc
mov
int
aas
push
cli
add
mov
mov
cmp
mov
xor
scas
sub
sbb
push
leave
mov
mov
jnp
push
or
ror
int3
cmc
dec
imulb
jmp
cwtl
popf
push
icebp
pop
nop
fwait
jae
push
ds
cmp
mov
rorl
lock
push
test
dec
iret
adc
lods
inc
jmp
lods
xor
inc
in
cmp
sub
rclb
cwtl
nop
repz
pop
pusha
test
cmpsb
pop
in
jecxz
in
dec
adc
mov
std
xchg
sub
into
in
les
fcmovnb
sbb
outsb
sbb
xchg
jne
pop
sarb
out
stos
mov
cli
sahf
inc
je
and
addl
arpl
sbb
jge
pop
xchg
loopne
sarb
xor
int
mov
std
shll
adc
out
add
lods
sbb
add
lret
test
incl
fisubs
xor
cld
xor
dec
out
xchg
subl
cmp
add
bound
dec
lods
cs
xchg
jno
dec
sbb
cmpsl
xor
cmp
lea
xchg
jae
xchg
lcall
pop
push
in
lahf
mov
movsl
jbe
mov
lea
push
add
adc
xor
mov
xchg
push
jg
push
mov
sub
cmp
jne
cmp
pushf
inc
inc
jbe
lods
jle
in
cmpsl
inc
cmp
mov
mov
xor
xchg
fldt
cwtl
sbb
aad
jbe
xor
push
lock
sub
inc
sub
popf
mov
je
test
cltd
jne
dec
jp
dec
inc
cmp
pop
clc
mov
sub
mov
arpl
adc
sbb
mov
in
cmp
mov
mov
dec
push
ret
jne
jbe
daa
ljmp
mov
jb
lock
out
mov
flds
aad
mov
jbe
xor
stc
xchg
test
mov
ss
jo
adc
and
rorl
sbb
adc
outsl
push
adc
je
int
sahf
sub
mov
pushf
in
fnstsw
mov
ss
pop
xchg
or
cli
aas
out
adc
xor
push
inc
mov
add
inc
into
out
inc
and
lock
xor
mov
add
dec
fabs
js
stc
mov
and
aaa
in
xchg
sbb
mov
push
cli
jl
call
icebp
leave
jo
movsl
xchg
mov
lock
flds
sbb
and
mov
pop
cld
adc
mov
fwait
pop
fnstcw
push
cmc
shl
cmp
lds
outsl
repnz
sub
out
mov
ret
dec
mov
pop
mov
insb
jb
push
mov
lgs
add
stc
mov
and
dec
subl
dec
fmulp
lcall
data16
out
mov
pusha
lcall
scas
insl
pop
lahf
or
iret
outsl
pop
cmp
orl
inc
jne
inc
push
mov
add
xchg
adc
mov
out
or
xor
pop
push
shrl
xchg
adc
mov
scas
or
faddl
aad
pop
into
mulb
repz
and
jb
push
jg
andb
xchg
movswl
xor
xor
insb
insb
adc
mov
lds
shrb
push
sub
rclb
push
push
pop
fnstsw
loope
int3
je
das
loop
cli
rorb
xchg
dec
inc
jne
daa
ds
dec
outsb
dec
xor
sahf
pop
scas
int
jg
test
xchg
je
insb
aaa
fdivrs
fisttpl
xchg
sarl
std
and
jnp
inc
pop
push
xchg
aam
loop
rorb
test
sti
cli
xchg
push
push
push
sub
push
sarl
roll
lret
mov
clc
pop
push
stc
mov
ds
or
fstpl
jns
das
sahf
mov
or
jecxz
mov
mov
cmpsl
shll
cld
ficompl
cwtl
loopne
das
lahf
ljmp
add
cmpsl
push
adc
lret
mov
jne
fsubs
iret
mov
sbb
int
pop
jl
jnp
aad
mov
inc
xor
aaa
or
pop
cmpsb
xchg
insb
cltd
je
lea
dec
pop
ja
mov
lock
add
push
movsb
sbb
jp
repnz
ljmp
gs
mov
jp
mov
mov
das
dec
lods
out
add
jp
add
mov
scas
and
cld
mov
sbb
aam
test
inc
ljmp
xchg
sub
stos
or
and
add
addr16
sub
or
outsb
out
into
imul
xor
and
repz
mov
push
les
fcomps
pop
pushf
jle
scas
hlt
pop
pop
push
shrl
and
in
nop
jecxz
loope
jl
push
aad
outsl
les
lods
xchg
mov
mov
mov
insb
mov
sbb
and
addr16
sub
js
adc
inc
out
icebp
addr16
push
lods
outsb
push
subb
mov
add
xchg
push
inc
fs
cli
hlt
popa
sub
mov
imull
repnz
adc
jbe
pop
jg
pusha
mov
popa
mov
out
fistpll
int3
xchg
pusha
fisttps
mov
xor
pop
pop
enter
fdivrp
jecxz,pn
or
lcall
rolb
movsl
inc
xor
xchg
call
das
pop
xchg
mov
lods
out
lock
mov
mov
or
xchg
xchg
fwait
xor
xchg
nop
js
mov
aam
mov
repz
mov
mov
addl
xchg
in
int3
xchg
jnp
lret
int3
fisubl
pop
pop
dec
jl
sbb
xchg
dec
cmp
lret
fwait
int
push
jbe
popa
stos
idivl
fadd
cmovbe
sub
push
push
cmpsb
sub
xchg
int
stos
sub
mov
stos
sbb
add
pushf
jl
jp
xchg
pop
stos
aam
mov
cmp
into
lret
and
lcall
adc
dec
mov
ja
psrad
ret
cmp
adc
pop
mov
popf
jmp
test
adc
fwait
dec
push
sahf
jmp
sahf
pop
mov
adc
mov
mov
icebp
fmuls
ds
jmp
lcall
and
dec
ss
jae
nop
jp
pop
pop
lret
dec
divb
mov
imul
mov
rorb
ja
cmp
ret
mov
add
lds
push
hlt
mov
arpl
jne
jne
and
inc
ss
jns
inc
rcrl
mov
insb
jecxz
add
cmp
stos
ljmp
and
jp
adc
mov
dec
sbb
out
xor
cli
pop
adc
or
mov
xchg
mov
cmpsl
inc
andl
pushf
adc
idiv
movsl
js
jns
inc
imul
int
fadd
jg
ja
out
scas
into
and
and
ret
sbb
dec
testb
sbb
mov
mov
je
and
das
mov
cwtl
jne
mov
out
je
ret
pop
aas
jne
stos
jne
pusha
cmc
adc
xor
or
loopne
or
dec
ja
aam
jle,pt
cmp
rcr
lret
inc
lret
rol
xor
sbb
add
xchg
aas
iret
ret
out
lret
jle
dec
insl
sbb
jne
addr16
cmp
mov
adc
jo
pop
sub
sub
jo
loope
mov
xchg
out
xor
mov
in
mov
mov
dec
mov
xor
or
xor
lcall
aas
mov
fwait
sub
and
aad
sbbb
or
sbb
xchg
and
pop
int
adc
ja
aad
icebp
in
ja
jno
mov
mov
or
sub
shl
inc
xchg
addr16
cmp
mov
cs
inc
popf
mov
cmp
or
lods
bound
mov
fst
out
add
add
mov
insb
loope
stc
movsb
rorl
popf
sbb
lcall
adc
xorl
adc
repnz
mov
inc
out
lret
adc
int3
mov
les
jg
fisubrl
push
and
sbb
scas
inc
out
setp
ja
xlat
or
push
popa
fbld
andb
jl
jae
popl
and
andb
loopne
lcall
ljmp
pop
jp
sbbb
mov
adc
and
lcall
adc
addl
push
stos
repz
push
xor
jle
adc
jp
sbb
jae
inc
xchg
xor
bound
psadbw
enter
js
xor
or
imul
or
add
mov
xchg
and
jns
mov
scas
divl
insl
xchg
push
out
test
pop
ds
lret
js
mov
sbb
notb
mov
and
in
ljmp
ret
add
and
mov
push
jecxz
nop
fnstenv
idivl
arpl
sub
dec
daa
jae
ret
aaa
xor
frstor
lcall
mov
mov
sbb
cmpsb
jmp
dec
xchg
push
fdivrs
push
or
push
in
sbb
fs
push
mov
mov
in
ja
in
mov
xor
cmp
push
xchg
mov
mov
mov
call
xor
jmp
and
imul
inc
dec
mov
xadd
ja
sub
or
xor
scas
data16
sarl
cltd
outsl
pop
pop
cmpsl
test
mov
fdivr
bound
mov
xchg
incb
je
cmp
fisubl
aaa
push
insb
sub
cmpb
jl
cs
lea
aad
mov
mov
add
shlb
ljmp
mov
jg
cmc
push
das
mov
paddq
scas
imul
test
cwtl
into
dec
sub
sub
dec
add
mov
gs
or
movsl
xchg
cmp
fwait
in
cmpsb
dec
adc
mov
push
mov
mov
push
pop
add
cli
stos
sub
xor
lock
bound
daa
test
scas
adc
dec
test
add
mov
mov
xor
arpl
adc
push
int
sub
add
xchg
push
mov
cmp
push
xchg
mov
aas
fcom
xchg
and
imul
sub
cwtl
push
idiv
jge
sti
pop
dec
lcall
mov
popa
ret
lret
mov
addr16
icebp
or
daa
les
aaa
xchg
add
push
adc
mov
pushf
push
stos
in
int
push
in
sbb
aam
fldt
fwait
pop
xchg
subl
js
dec
dec
push
dec
fwait
sbb
pusha
jno
pop
jb
jl
mov
repz
adc
mov
clc
inc
xor
xchg
imul
adc
int3
fldl
xchg
lock
and
in
fsubrs
repz
das
inc
es
add
lea
sub
push
rorb
outsb
std
lds
xorb
inc
fs
rcrl
inc
inc
mov
pop
scas
stc
pop
fwait
lds
iret
idivb
and
xchg
es
subb
adcl
inc
pop
int
or
jg
inc
popf
sub
push
mov
ds
into
adc
mov
test
dec
shlb
sbb
xor
inc
mov
leave
xchg
adc
sub
popf
or
jle
jnp
pop
fstl
inc
pushf
mov
dec
jl
push
xchg
sub
sbb
lcall
aam
inc
adc
push
rcrl
add
call
push
xorl
aas
decb
addr16
mov
dec
sahf
movsb
arpl
push
push
rcrb
iret
jmp
jnp
jnp
xor
lcall
aam
pop
or
push
cli
mov
gs
mov
mov
mov
or
mov
xor
xor
insb
roll
push
mov
inc
mov
cld
pop
das
mov
cs
sub
push
shll
notl
icebp
lds
movsb
ljmp
dec
mov
scas
sarl
pop
out
pop
es
lret
mov
pop
out
inc
and
nop
scas
lods
lods
test
sti
xor
cli
inc
mov
mov
ss
bound
jp
clc
add
pop
dec
xchg
subb
popa
movl
xchg
cmpsb
add
loope
daa
test
add
repnz
pusha
jb
jge
adc
push
lds
leave
aaa
pop
mov
mov
pop
cld
cwtl
push
neg
movsb
cmp
lods
adc
daa
pop
call
add
int3
cmp
pop
movsl
iret
jbe
fsubrs
std
fsubs
les
jecxz
or
sbb
js
rorb
test
sub
cmpsb
sbb
pop
test
les
mov
pop
mov
movsb
out
adc
sahf
sbb
mov
push
ds
jb
cmp
ror
out
mov
push
push
fisttpll
out
pop
in
sahf
cmp
shr
jp
lea
jl
sbb
jmp
lret
lods
out
pop
dec
push
and
add
adc
rorl
mov
mov
sbb
add
cmp
test
sbb
and
cltd
out
pop
insl
insb
data16
inc
jg
inc
cmp
scas
in
loop
fnstsw
adc
jecxz
cmp
sub
xor
js
inc
pushf
jne
pusha
stos
push
orb
std
mov
jge
cmp
popf
sub
sti
mov
mov
jae
jp
and
push
push
and
push
mov
jb
mov
push
popf
rorb
dec
ss
sti
inc
mov
jns
fidivrs
lock
dec
xchg
decb
lods
xor
jae
xchg
mov
outsl
jle
and
rclb
lods
xlat
add
lea
push
stos
fwait
out
mov
push
mov
mov
scas
sub
les
sarl
sbb
js
dec
clc
lcall
mov
adc
add
enter
jno
inc
push
into
add
pop
enter
mov
and
shr
or
pop
test
and
xchg
shl
leave
js
mov
sbb
das
mov
push
jb
or
int
xor
in
out
repnz
pop
mulb
lcall
int3
cmc
xchg
mov
xchg
test
aam
push
dec
fldenv
mov
pop
jno
mov
jbe
and
pop
fcoml
mov
jge
mov
scas
mov
call
mov
cs
lahf
lret
xor
stos
mov
jb
out
test
bound
iret
and
mov
mov
pop
xor
push
and
shlb
jmp
mov
ficomps
fists
add
xor
sbb
in
imul
or
pop
cmp
dec
mov
add
insb
and
sub
or
push
mov
std
xchg
repz
pop
xor
or
sti
fists
fstpl
nop
mov
cmpsb
inc
inc
xor
mov
out
push
sbb
imul
sbb
jg
mov
fisttpl
aam
adc
inc
shll
das
divl
mov
dec
subb
and
add
push
shr
mov
icebp
push
jp
dec
dec
mov
inc
xor
cmpb
dec
pop
int3
test
les
roll
push
in
and
mov
insl
outsl
filds
cmpsl
mov
cli
and
jns
adc
filds
in
test
jge
loop
mov
cmp
mov
mov
cmp
mov
mov
mov
lock
cld
movsb
enter
sbb
mov
or
out
icebp
mov
mov
aad
push
rcrl
es
arpl
shl
inc
inc
cmp
sub
movsb
add
andl
jmp
pinsrw
add
jae
movsb
lret
and
sbb
mov
push
jg
mov
dec
fwait
sub
jp
cwtl
ret
mov
in
lret
dec
insl
push
sub
sbb
leave
aas
stc
jmp
xlat
mov
outsb
cmpsb
mov
stc
adc
insl
outsb
movsb
xor
dec
stos
loope
insb
mov
mov
and
jb
mov
scas
testl
mov
shrb
imul
scas
mov
xchg
push
jno
sub
test
movsl
dec
loop
popf
jns
movl
xchg
xor
mov
js
lds
mov
or
fnstsw
lock
call
jl
mov
scas
lds
cmc
inc
cmc
ss
mov
xor
xchg
jl
jg
mov
es
es
jns
stos
cli
mov
cld
movsl
jnp
in
add
xchg
xor
pop
imul
push
movsl
popa
mov
push
stc
aam
pop
daa
mov
or
jo
mov
mov
xchg
xchg
das
roll
outsl
adc
shlb
fs
pop
stos
adc
mov
roll
lods
int
cwtl
pusha
popa
jge
lods
sub
movsb
movsb
into
gs
xchg
pop
cmp
daa
inc
jle
fldcw
jbe
jno
in
clc
inc
xchg
lea
pop
and
xchg
fidivl
mov
dec
scas
movsl
cwtl
xlat
sub
stos
cmp
mov
subl
pop
jecxz
dec
push
sbb
call
hlt
in
mov
inc
sbb
hlt
dec
iret
insl
lret
cmpl
cmpsb
fiadds
fcmovu
dec
xchg
rcrb
xchg
loopne
sbb
or
gs
and
enter
push
js,pn
push
adc
and
ret
xlat
xchg
mov
aad
mov
in
jge
and
leave
jne
mov
or
insl
xchg
xchg
sub
sub
mov
inc
in
mov
les
sbb
aam
shrl
jb
pop
cltd
and
idivl
sub
jle
mov
or
mov
jmp
hlt
jmp
mov
cli
out
orl
push
in
js
jne
test
leave
jns
jno
add
mov
scas
pop
fdivl
iret
insl
inc
xor
repz
mov
ret
fisttpl
lods
scas
or
xor
push
fcompl
stc
insl
mov
adc
daa
outsl
ja
xor
aaa
jl
mov
in
lds
ret
add
pop
push
out
cmpsl
leave
mov
cwtl
xchg
rorb
in
push
subb
jb
sbb
cwtl
or
add
xor
imul
mov
lds
jne
push
jle
sbb
jmp
xchg
push
and
cs
scas
or
mov
mov
push
in
popa
jle
mov
insb
test
and
loop
inc
dec
cld
dec
icebp
mov
scas
push
leave
arpl
outsb
movb
lcall
jbe
jne
scas
inc
das
add
das
subl
mov
imul
mov
arpl
inc
push
mov
loope
mov
scas
orb
pushf
outsb
inc
lret
fs
ret
mov
push
sub
fs
enter
int
and
add
xor
mov
imul
dec
cs
int3
sti
test
pop
ret
mov
call
into
ret
push
lahf
rcl
sub
mov
insb
outsb
mov
rolb
jge
jae
jge
xchg
in
arpl
inc
gs
cli
iret
mov
sbb
addb
out
rolb
repnz
push
aam
adc
adc
mov
cmp
les
push
jo
or
mov
mov
mov
inc
aas
or
ljmp
es
sub
test
and
mov
inc
jne
cmpsb
jge
adc
scas
jne
subl
les
xchg
icebp
sbb
push
xchg
dec
add
aaa
mov
xlat
aam
into
loopne
movsl
cld
lret
lock
dec
int
in
push
mov
push
lret
frstor
jae
call
cltd
push
push
orl
lock
cmp
mov
cmp
int
and
adcl
add
add
cmp
push
sbbl
outsb
add
popa
xorl
inc
lds
xorb
std
int3
push
enter
lcall
cmp
inc
mov
pop
cmp
test
or
mov
jle
inc
mov
les
mov
or
sub
addr16
inc
movsl
or
inc
mov
push
lret
cmc
push
jns
outsl
xchg
cmp
mov
adc
jl
pop
mov
or
sub
and
arpl
sub
and
adc
pop
cld
add
pop
mov
mov
dec
mov
xor
push
loope
mov
jne
and
es
adc
dec
cmp
lret
push
incb
jo
insb
inc
loopne
fistps
xor
in
mov
jl
insb
and
push
cmp
fucomp
push
push
fldt
push
outsb
mov
xchg
loope
addr16
ds
pop
mov
fidivl
jno
xor
lret
je
cmp
jo
imul
push
loop
rol
mov
cld
insb
and
push
xchg
jecxz
les
and
movsl
lret
adc
mov
mov
pop
pop
dec
mov
out
cmp
dec
mov
adc
lock
sub
fucomi
jmp
out
filds
enter
leave
or
test
ljmp
xchg
mov
mov
call
mov
insl
inc
inc
scas
mov
clc
sti
les
xchg
pop
adc
xchg
insl
sub
loop
mov
and
add
fimull
xchg
test
mov
push
stc
inc
lret
jp
jmp
data16
mov
cmp
mov
sbb
adc
jmp
repz
jnp
push
xor
jg
cmp
in
idivb
mov
pop
dec
hlt
pop
sahf
pusha
aas
test
cmp
cld
or
lds
js
mov
dec
mov
pusha
cmc
outsl
mov
pop
lods
pop
mov
and
xchg
cmp
sbb
jbe
mov
xor
iret
jmp
lods
mov
jb
sbb
dec
dec
aas
pop
mov
dec
int
xchg
lcall
and
mov
repnz
sub
push
neg
cmp
xchg
cmp
xchg
rorb
cwtl
jns
mov
cltd
int3
nop
rolb
call
xchg
enter
leave
stos
in
insb
outsl
rcrb
popf
pop
sbbl
ljmp
dec
push
cs
jbe
sarb
gs
pop
add
stc
in
hlt
cltd
std
sub
std
cmpsl
sub
jbe
xchg
pop
jno
gs
daa
pop
movsl
insb
or
sub
inc
nop
adc
test
cs
sbb
cmc
mov
push
cmp
fsubs
mov
iret
and
imul
pop
ja
and
arpl
rcr
sub
dec
cld
sub
bound
lods
jne
pop
call
cmp
pop
lahf
test
jb
rcrl
adc
inc
jg
fsubr
repnz
popf
into
add
xor
ljmp
xchg
pop
loop
push
gs
inc
pop
pop
fisubl
xchg
cmp
aam
rorl
push
xor
xor
fstps
adc
adc
or
popf
fsts
xchg
xor
ja
ja
das
fucomip
mov
and
popf
sub
loopne
xor
out
int
sub
mov
xor
xabort
mov
inc
sub
sbb
imul
out
mov
lods
sub
push
pop
mov
ret
imul
jnp
movsb
mov
mov
lods
shlb
pop
cli
fnsave
sub
in
hlt
xchg
mov
mov
adc
add
imul
ss
dec
push
pop
fmuls
jl
mov
jb
std
and
pop
imul
lods
adc
dec
push
mov
xchg
pop
test
out
sbb
lcall
add
sbb
mul
or
lock
sub
mov
hlt
add
std
and
in
cld
sub
out
lea
mov
ret
xor
add
and
or
mov
mov
push
jmp
inc
shlb
inc
pop
push
outsb
sbb
je
lret
in
push
aad
test
mov
cltd
jmp
cmp
jbe
xor
adc
cld
mov
mov
sahf
mov
mov
sub
xorl
push
rcll
and
cltd
test
outsl
fnstenv
xchg
pop
fwait
in
sub
jo
xchg
pop
push
sarl
push
and
andb
push
les
xor
inc
in
adc
mov
std
ss
ds
stos
jl
xchg
or
inc
adcb
cmpsb
jo
pop
fcmovu
push
cltd
je
pop
inc
cmp
jl
xchg
xchg
ljmp
inc
cmp
sbb
dec
pop
pop
jno
jmp
add
xor
in
adc
inc
ror
test
insl
sub
cltd
add
lret
and
clc
jbe
roll
mov
aam
loope
rcl
fdiv
sbb
or
push
or
movsb
fsubrp
push
jb
addl
jle
roll
in
sbb
and
xor
mov
aaa
repz
arpl
pop
pop
popl
cs
and
pop
out
cmp
out
sub
inc
xchg
insb
loopne
in
je
data16
add
sub
inc
stos
sub
enter
pop
lods
fsubrl
stos
imul
sub
pop
add
test
push
stos
aaa
popa
or
jg
sub
loopne
mov
repz
scas
repnz
popf
mov
and
jmp
push
cmp
rorb
dec
or
lods
shrl
jb
add
fidivrs
jbe
mov
and
jle
jg
fnstcw
lcall
push
dec
call
and
cwtl
fwait
clc
or
ljmp
xchg
ret
mov
rolb
loope
cmpsb
decb
lea
and
cmp
out
testb
mov
push
paddsw
jbe
cmp
dec
push
inc
lock
mov
leave
or
add
aad
and
imul
out
fnstenv
leave
mov
addl
jge
cmp
jae
rclb
push
sbb
push
imul
inc
add
jb
fldcw
mov
int
in
les
jecxz
mov
or
mov
xor
sbb
imul
xor
dec
sub
or
inc
into
subb
or
mov
addr16
cmp
sub
cmp
pop
inc
mov
test
push
aaa
stos
sub
pop
lods
iret
stc
xor
pusha
jge
jecxz
sub
add
adc
ret
inc
jmp
rcl
stos
test
mov
ficomps
pushf
sbb
inc
out
les
mov
xor
loop
add
icebp
lcall
and
js
sbbl
push
sub
frstor
mov
inc
popf
aas
std
or
leave
fnsave
mov
pop
mov
jmp
mov
call
mov
cltd
push
adc
pop
cwtl
outsb
mov
call
frstor
mov
jmp
fcmovnbe
jmp
lea
daa
in
adc
mov
cmpsl
sbb
cmp
mov
inc
inc
js
aaa
pop
out
pop
xchg
andb
shl
rcll
into
mov
sub
mov
js
jl
loopw
divl
xchg
dec
cmpsl
stos
fisubl
leave
xchg
insl
pop
arpl
andl
mov
out
xlat
ljmp
shlb
inc
add
and
xor
push
mov
and
outsb
xorl
dec
rclb
xchg
cmp
jne
mulb
js
test
adc
pop
jl
testb
push
jne
mov
sub
in
xchg
mov
enter
mov
sub
cmc
fldenv
mov
rcrl
jnp
mov
xchg
or
sbb
lea
inc
cltd
cmp
test
mov
push
pop
mov
fsubrs
inc
fwait
test
jnp
inc
jl
test
ds
fdivl
clc
mov
std
push
dec
sbbb
mov
iret
mov
data16
mov
pmuludq
sarb
shlb
xor
mov
inc
jle
inc
mov
xor
hlt
popf
adc
pop
dec
or
sub
xchg
scas
cwtl
fcom
movsb
mov
dec
ja
lcall
std
lret
cmp
adc
inc
out
stos
fs
in
cmp
cmc
rorb
inc
test
fwait
rorl
jg
scas
call
cwtl
rol
adc
je
aas
ljmp
add
mov
xchg
fwait
add
jl
icebp
mov
jle
fnstenv
pop
fs
lcall
insl
dec
roll
cmpsb
cs
call
jmp
and
mov
sahf
jge
fs
add
icebp
sub
sub
out
xchg
jne
cld
dec
mov
mov
mov
jae
js
std
or
enter
outsl
aam
xor
jae
fimuls
in
test
or
xor
or
fldl
popa
xlat
ret
leave
push
pop
js
sbb
sahf
sar
out
jge
nop
and
fidivrl
mov
dec
jbe
int
xchg
test
or
repz
mov
xor
test
xchg
adc
sbb
and
push
fimull
pop
fisubrs
cmp
icebp
sub
mov
pop
pop
sbb
ljmp
mov
mov
mov
push
add
mov
mov
mov
les
pushf
fs
push
sbb
lcall
xor
out
xorb
addb
xchg
imul
sub
movsl
or
jno,pt
xor
mov
rorb
mov
inc
fstl
adc
faddl
pop
ja
movsb
sbb
out
jmp
in
mov
aas
sub
add
das
lahf
fsts
cwtl
aaa
clc
push
out
mov
out
insl
out
mov
mov
adc
fnstsw
mov
xor
loope
xor
fisubrl
sub
stc
sar
test
sbb
lods
pop
mov
jmp
jb
mov
nop
inc
js
ret
out
cmp
jne
stc
adc
arpl
jbe
xchg
jno
int
fs
pop
jb
hlt
pusha
ljmp
rolb
je
pop
jo
lret
jb
repz
push
adc
rclb
dec
sub
adc
dec
mov
fwait
arpl
jmp
xor
dec
int3
les
cmp
sbb
dec
sub
mov
aas
je
xor
mov
out
out
les
xor
sbb
fcoml
jnp
cmp
es
test
fmulp
fcomps
dec
adc
push
icebp
and
mov
mov
rcrl
data16
mov
jp
push
sub
xchg
sbb
stos
mov
sub
mov
xchg
fmuls
jge
push
jbe
push
and
hlt
mov
mov
fisubl
lret
push
jbe
push
lret
loopne
or
movsl
or
jecxz
xchg
js
cmp
push
jnp
xor
mov
loope
ja
insl
lods
out
ja
push
cmpsl
mov
xlat
xor
or
mov
loopne
cmp
lea
cs
fs
rolb
std
sbb
rorb
outsb
mov
ret
divl
stos
xchg
or
xchg
sahf
or
bnd
lret
mov
in
fistps
xchg
into
xlat
cmp
aam
push
dec
fstl
dec
out
push
hlt
lock
sbb
andb
js
loopne
mov
scas
and
push
aaa
push
dec
fistl
mov
lock
ret
pop
fs
mov
ds
mov
mov
pop
into
xor
jmp
sub
test
adc
fwait
lret
and
or
sub
pop
pop
loopne
loopne
or
mov
xchg
push
outsl
and
dec
cmp
sbb
cmp
repnz
xor
or
xor
xchg
add
dec
and
mov
jmp
imul
sub
add
iret
push
into
dec
nop
cmc
lahf
cld
cmp
ret
mov
jmp
enter
inc
jb
dec
ss
inc
ret
popa
int3
jbe
imul
add
sahf
sub
adc
xlat
adc
fsubl
iret
shrl
ss
test
stc
bound
pop
push
ret
dec
mov
in
jo
shll
sti
mov
xor
aaa
xor
xchg
xchg
dec
mov
test
cmc
jmp
ljmp
ljmp
scas
add
mov
dec
sub
xorl
filds
cmp
loope
or
mov
pop
mov
pop
cli
int3
or
cmp
mov
in
xor
dec
in
fidivrl
int3
jno
adc
dec
dec
sbbb
jge
imul
fdivs
mov
insl
cltd
pop
push
sbb
mov
enter
out
push
rorl
loope
fnstsw
inc
pusha
push
and
or
jae
or
lock
pusha
ss
sbb
jg
loopne
ds
out
in
addl
xor
out
bnd
or
pop
or
jbe
mov
cmpsl
xchg
les
cmpsb
vmulps
sub
inc
ds
iret
ljmp
lea
push
roll
pop
imul
testb
xchg
dec
ret
jecxz
sub
jbe
jb
pop
cltd
ret
shll
fcompl
jns
and
cmp
mov
lcall
push
xor
dec
sub
xchg
mov
cmp
fwait
push
inc
rcrb
mov
or
xor
cmp
dec
and
adc
popa
cmc
je
jns
fwait
and
dec
in
jmp
and
mov
sbb
jg
shll
sub
and
pop
add
ljmp
lret
sarl
mov
push
testl
cmp
stc
pop
shlb
mov
push
xor
sarb
sbb
lahf
ret
cli
mov
imulb
in
adc
test
inc
loope
call
xchg
aad
scas
clc
or
jecxz
sbb
lea
mov
notb
inc
inc
bound
sahf
push
and
test
push
sub
popl
aas
imul
sbb
inc
shrb
stos
and
cmp
xchg
lret
lret
dec
arpl
hlt
mov
movsl
loopne
pop
mov
or
pushf
enter
and
mov
push
mov
pushf
mov
icebp
js
movl
rorb
out
inc
in
jecxz
pop
sub
xchg
jecxz
int
iret
push
std
add
mov
pop
rcrb
outsb
dec
scas
dec
pop
xchg
push
outsb
fimull
xchg
in
pop
mov
das
mull
pop
jl
xor
ror
jp
ja
mov
int
aad
or
cmpsl
add
divb
add
popa
sbb
and
rorl
adc
mov
dec
dec
mov
sti
sub
sub
xlat
loop
in
push
push
mov
fcomps
les
push
aad
ds
cmc
cmp
cli
leave
mov
sub
cmp
mul
jae
inc
test
call
jmp
push
out
sbbl
and
dec
pop
pushf
in
mov
sub
fisubs
cld
mov
popa
and
or
mov
imul
mov
fnstsw
sbb
push
jnp
ret
movsl
or
sub
xchg
insb
push
mov
pop
dec
xor
aas
inc
xchg
cmp
pop
sub
in
pop
mov
fisubl
movsl
sti
sub
mov
fcomp
and
cmpsb
pushw
int3
mov
lods
cmp
outsb
sbb
dec
inc
pop
out
cmpsl
scas
int3
jle
mov
mov
or
xor
notb
xchg
stc
push
and
mov
sub
sub
inc
adcb
.byte
and
mov
pop
add
pop
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
pop
add
add
pop
add
sub
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
cmp
add
add
les
inc
add
cmp
incl
add
add
inc
add
add
add
incl
add
add
cmp
add
add
add
incl
add
add
inc
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
inc
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
imul
incl
add
add
inc
add
add
add
jns
add
incl
add
add
addl
add
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
lcall
nop
inc
add
add
add
inc
add
add
incl
add
add
xchg
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
cltd
inc
add
add
add
lcall
sbb
inc
add
incl
add
add
add
add
mov
inc
add
add
add
add
add
mov
add
lcall
test
inc
add
dec
inc
add
jmp
mov
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
incl
add
add
inc
add
add
add
lcall
inc
add
add
add
call
roll
jmp
inc
add
inc
add
nop
add
add
add
add
incl
add
add
add
add
rolb
add
push
pop
mov
int
mov
push
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
and
and
fs
add
add
add
popf
mov
lcall
lcall
fcmovnu
lcall
lcall
aad
lcall
fcomp
lcall
lcall
push
inc
add
dec
add
add
add
add
add
loopne
sidtl
add
add
push
add
add
add
add
add
adc
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
cmp
add
je,pn
js
add
add
add
add
adc
add
push
add
add
add
add
pusha
jb,pn
popa
je
add
stos
add
add
and
add
add
add
or
add
add
fs
je
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
push
mov
push
mov
sub
push
push
push
andb
push
pop
xor
lea
rep
stos
stos
lea
push
mov
push
call
lea
push
call
lea
push
push
call
pushl
pushl
lea
push
call
add
lea
push
lea
push
call
mov
cmp
je
andl
lea
push
call
test
jne
push
lea
push
call
pop
pop
mov
mov
pop
pop
pop
leave
ret
orl
call
jmp
pushl
call
ret
jmp
push
mov
sub
push
push
push
push
xor
pop
xor
lea
mov
push
rep
stos
stos
mov
lea
push
push
mov
call
test
je
mov
lea
mov
push
call
movzbl
mov
push
shl
call
pop
pop
push
movzbl
pop
or
sub
addl
shl
or
inc
inc
cmpl
jl
lea
push
push
push
call
test
je
xor
lea
mov
mov
push
call
movzbl
mov
push
shl
call
pop
pop
movzbl
push
or
pop
sub
add
shl
or
inc
inc
cmp
jl
cmpl
je
mov
lea
mov
push
pushl
mov
call
test
je
cmp
jne
push
pushl
call
lea
push
pushl
jmp
pushl
call
pop
push
call
pop
pop
xor
pop
leave
ret
movzbl
cmp
jg
je
cmp
jg
je
add
cmp
ja
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
sub
je
sub
je
dec
jmp
mov
ret
mov
ret
sub
je
dec
je
dec
je
dec
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
jp
inc
add
adc
inc
adc
inc
adc
inc
adc
dec
adc
dec
adc
push
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
jmp
add
mov
and
add
and
add
and
add
and
add
add
and
add
xor
add
dec
and
add
add
sahf
and
add
add
add
add
add
incl
add
add
adc
andb
add
add
add
add
mov
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
xor
add
dec
and
add
add
sahf
and
add
add
add
add
add
fs
insb
outsl
jae
add
inc
gs
gs
inc
imul
imul
je
imul
inc
gs
jne
jb
outsb
je
imul
jns
add
pop
add
je
jne
jb
outsb
je
imul
jns
add
add
je
gs
jo
popa
je
inc
add
jge
inc
js
je
jb
arpl
jae
into
add
imul
insb
gs
bound
arpl
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
insb
add
lods
add
jo
imul
push
inc
push
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
add
add
inc
add
js
and
and
and
add
add
pop
pop
inc
dec
inc
inc
dec
push
push
pop
push
push
dec
inc
inc
push
push
add
pop
pop
inc
dec
inc
inc
dec
push
push
pop
push
push
dec
inc
inc
push
push
pop
dec
inc
add
and
add
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
les
add
add
incl
add
add
add
add
incl
add
add
inc
add
jb
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
ljmp
lret
inc
lret
add
jmp
lret
out
inc
add
push
lret
cli
lret
lcall
lret
inc
add
lret
inc
add
ljmp
lret
inc
add
lret
inc
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
rolb
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
call
xlat
inc
add
xlat
inc
add
incl
add
add
incl
add
add
add
add
inc
pop
inc
add
pop
inc
add
pushl
add
inc
add
call
sbb
inc
sub
add
pop
add
adc
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
pop
add
add
pop
add
sub
add
sub
add
add
add
je
popa
insb
imul
imul
je
outsl
outsb
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
data16
je
jb
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
sub
stos
xchg
dec
inc
dec
xchg
mov
or
cmp
repnz
cs
xchg
sbb
mov
ficompl
subl
dec
push
pop
inc
ja
ret
dec
cmc
addr16
jbe
jns
mov
sub
sbb
pop
push
lods
push
ret
dec
lds
sbb
shll
test
jnp
stc
jl
lds
inc
push
xbegin
mull
andl
xchg
loop
aaa
stos
mov
pop
inc
push
stc
decb
push
or
rcrb
jnp
push
adc
leave
lods
jb
sub
fimull
out
cmp
in
or
lahf
insb
push
inc
jmp
mov
fnsave
xlat
scas
inc
adc
sti
mov
sbb
sbb
sbb
mov
ret
imul
int
dec
icebp
mov
hlt
addr16
xchg
mov
sub
enter
popf
mov
insb
aad
adc
adcl
mov
push
clc
sar
sbb
dec
movsl
lret
cmp
mov
loop
xchg
std
rorb
inc
mov
fwait
pop
or
jmp
test
sarb
mov
push
and
es
fildll
subl
sbb
arpl
and
sbb
inc
mov
jo
sar
push
test
shrl
pop
inc
mov
xor
lods
aas
outsb
cmp
pop
outsl
lret
adc
xchg
gs
movsb
movsl
int
test
dec
cld
push
icebp
jecxz
push
mov
shrb
mov
out
add
out
push
fidivs
lret
push
ror
or
ret
lds
or
sub
push
mov
imul
int3
mov
es
xchg
cwtl
sahf
sub
jo
ret
into
gs
pop
rcl
fdivl
movl
leave
cmp
cmpsb
fistl
mov
dec
add
loopne
mov
or
test
out
in
fisttps
add
jnp
dec
inc
dec
mov
xchg
xlat
fs
imul
inc
sti
jge
rcrl
mov
jmp
add
mov
push
fs
gs
push
dec
jle
insb
jns
sbb
add
test
dec
sbb
aam
js
lcall
add
add
pushf
in
sub
popa
adc
scas
mov
sti
int
fldcw
xor
mov
mov
push
mov
icebp
mov
sub
aas
clc
negb
add
adc
mulb
cwtl
and
adc
pusha
push
insl
inc
shlb
in
cwtl
dec
not
xor
shlb
pop
pusha
push
das
xor
repz
out
jns
movsl
les
out
lods
test
lahf
push
flds
pop
add
jbe
sbb
int3
cmp
gs
hlt
inc
pop
lcall
lret
pop
or
pop
pop
sub
test
cmp
repz
bound
out
daa
shrb
mov
push
sbb
iret
movsl
pop
pop
shr
cmp
es
and
lods
cltd
pusha
popa
mov
cmc
xor
adc
inc
xor
cli
lock
arpl
cmp
dec
push
jnp
stc
pop
jecxz
aas
pusha
inc
dec
xor
les
lcall
outsb
pop
jbe
stc
xchg
fisttpll
sub
xchg
cmp
pop
aaa
push
outsl
mov
pop
les
sbb
inc
jb
cld
mov
mov
xor
inc
or
subl
push
in
in
in
movsb
repz
bound
and
jns
nop
mov
sub
mov
mov
popf
xor
mov
inc
out
push
mov
sbb
mov
adc
xor
or
jo
fbstp
sub
inc
xchg
add
pop
shll
dec
lods
ds
sahf
push
pop
or
push
js
mov
aas
pop
adc
rolb
push
xchg
mov
imul
and
push
pop
lods
push
movsb
call
lds
adcl
and
lods
aam
jl
movsb
addr16
xor
and
pop
push
xchg
es
and
sub
adc
mov
or
sbb
inc
or
test
mov
mov
aad
rcll
and
fs
in
rorb
inc
mov
mov
dec
lcall
aaa
test
shrb
push
movsb
cs
fisubs
mov
insl
dec
or
fadd
test
jae
mov
pop
adc
add
jmp
in
jmp
or
dec
pand
out
mov
fs
jae
test
push
out
gs
xor
lds
mov
jle
mov
data16
sub
addl
test
out
sub
dec
outsl
icebp
push
cmp
ret
movsb
mov
lds
xlat
adc
ljmp
xchg
mov
dec
out
pop
xchg
add
lods
sbb
dec
mov
push
push
adcl
clc
out
mov
cmp
imul
stos
int
and
movsl
add
sub
push
adc
orl
and
jae
jnp
clc
jp
cmc
mov
or
xlat
test
sbb
pop
mov
jecxz
out
rorb
pop
roll
or
push
pop
xchg
out
sbb
cmpsl
push
adc
push
push
leave
into
ficoml
pop
mov
in
popf
pop
fstps
xchg
push
and
lret
cmp
and
add
daa
add
jmp
or
push
push
adc
jbe
aad
inc
enter
add
mov
push
jne
mov
in
fdivl
int3
je
sbb
lock
jbe
cmpsb
cmc
jl
push
movsb
es
scas
pop
sub
insl
and
test
std
sbb
xor
out
mov
out
push
mov
xchg
lock
dec
push
insb
movaps
dec
in
push
outsb
push
mov
mov
pop
push
ljmp
mov
scas
popl
pop
sbb
cld
je
lret
cli
into
jg
ficompl
shlb
mov
jnp
add
testl
sahf
ds
sahf
jl
int
pop
sbb
mov
jo
enter
out
dec
jo
or
imul
cmp
push
and
inc
jb
cmp
popa
jnp
sub
aad
xchg
inc
lcall
sti
jl
push
aam
cltd
lahf
ret
mov
lcall
cmpsl
and
cmpsb
and
mov
rclb
mov
pop
das
push
push
push
or
sbb
lret
shll
ljmp
dec
and
call
pop
adc
call
jb
adc
cwtl
adc
add
shll
aad
dec
shll
xchg
cs
mov
int
and
xlat
mov
mov
loope
out
cmp
adc
clc
ret
xchg
mov
mov
cmp
cmp
lret
and
jle
xchg
push
incl
xor
out
test
xor
sub
lock
rorl
dec
jne
sbb
push
inc
sbb
fmuls
fisubrl
movsb
nop
xor
xchg
cmp
xor
mov
mov
cmc
js
outsl
aad
mov
mov
mov
push
int
int
ljmp
out
dec
mov
cmp
mov
and
fildll
std
hlt
xchg
inc
in
js
test
dec
adc
pop
dec
loope
adc
jg
out
aaa
insb
dec
stc
add
xor
cs
gs
push
loope
pushl
jns
mov
sahf
xchg
lcall
lock
and
cmc
out
aam
push
fs
stc
jb
je
outsb
fldcw
push
scas
pop
shrb
dec
hlt
sub
xchg
push
mov
jp
mov
xlat
and
mov
mov
jge
xchg
or
adc
fiaddl
push
sbb
add
lds
imul
or
or
dec
jbe
jge
jno
mov
popf
add
pop
xor
incb
int
fnstenv
into
mov
fimuls
adc
and
pop
and
jb
jg
ret
lcall
dec
shll
cld
mov
into
shll
movsl
mov
sub
scas
or
push
fwait
outsb
push
mov
push
push
push
or
stos
cwtl
cli
xor
data16
jno
mov
clc
and
mov
dec
jp
roll
rolb
lods
sbb
ds
rcl
cwtl
cmpsb
adc
jp
xchg
lods
pop
dec
sub
dec
pop
and
fcmovnu
dec
repz
ja
jo
mov
jp
int
fwait
pop
add
leave
and
repz
int
je
in
notl
dec
lock
sub
imul
aad
clc
xchg
icebp
in
lahf
lcall
jl
cmp
push
int3
push
stc
enter
in
ja
cltd
adc
aam
mov
test
mov
cld
lahf
dec
mov
sbb
daa
mov
pop
ds
repnz
repnz
out
jle
dec
xchg
hlt
xor
and
push
add
or
test
cmp
hlt
rorl
inc
mov
mov
out
dec
shlb
cld
mov
gs
mov
and
sub
es
gs
cmp
orl
inc
cmp
sahf
cmp
xor
loop
inc
xchg
dec
push
and
out
cmp
loop
loope
pop
ljmp
mov
movsl
imul
call
mov
std
sub
sbb
callw
pop
je
mov
outsb
jmp
out
mov
mov
sub
push
mov
aad
ljmp
xor
fidivl
gs
cmp
pop
imul
ss
push
outsl
pop
ror
or
loopne
push
iret
aam
or
cmovg
mov
les
js
insl
and
out
outsb
cwtl
iret
in
adc
xor
cpuid
push
xchg
mov
aam
jl
sti
nop
jecxz
xchg
sbb
adc
mov
xchg
jmp
rolb
movsl
mov
in
fisttpll
fmuls
dec
sub
jl
js
and
and
lret
pushf
mov
lods
xchg
hlt
and
loope
inc
adc
jae
cmp
nop/reserved
add
ret
lods
mov
in
fnstsw
cmp
dec
jg
or
dec
cmc
sub
adc
lock
sti
scas
and
ret
loop
sbb
inc
mov
push
pop
int
dec
jecxz
sbb
and
pop
test
and
jnp
das
push
fimuls
or
stc
pop
insb
cli
or
adc
mov
andl
out
mov
notb
clc
ficoml
insl
push
jmp
in
adc
out
test
iret
jns
shll
or
jne
fs
fwait
sbb
sti
dec
test
mov
aam
pusha
cmpsb
fcom
push
sbb
add
and
jns
adc
std
lock
insb
xlat
in
xlat
scas
cmc
add
mov
add
add
adc
mov
inc
jp
ret
pop
push
sub
push
cmp
or
lret
sbb
dec
push
push
pop
push
adc
adc
xchg
or
mov
frstor
insb
cmpsb
pusha
bound
addr16
stos
mov
push
popf
scas
xor
adc
sub
ficoml
ss
xor
mov
sti
scas
push
push
aam
das
adc
int3
mov
push
out
mov
or
shld
lret
cmp
pop
iret
lods
ljmp
jnp
sub
mov
bound
sub
lds
inc
out
push
mov
gs
or
std
out
repnz
retw
in
mov
es
dec
fsubl
cmp
ficomps
dec
addr16
lret
mov
cli
enter
icebp
leave
xor
std
adc
push
jmp
roll
jge,pt
push
cltd
and
fistpl
jb
mov
add
inc
arpl
sub
lods
je
cld
jnp
add
dec
lahf
pop
or
mov
adc
test
xor
jnp
dec
nop
or
jo
stc
mov
mov
stc
rcrb
popl
jnp
add
xor
xor
jns
std
or
hlt
clc
out
mov
out
lahf
mov
xchg
and
push
fcoms
mov
mov
addr16
les
adc
shrl
pop
fsubl
in
or
cmp
in
sahf
int
js
xchg
sub
stos
jge
jmp
gs
sbb
inc
jbe
out
rcrl
out
push
loop
mov
aas
sarb
sub
dec
adc
mov
mov
xchg
imul
sbb
and
adc
cmp
orl
je
add
xor
mov
ja
mov
icebp
test
fsubs
or
js
scas
jge
pushf
shlb
push
imul
mov
mov
sbb
fsubl
sbb
or
adc
fmuls
int
sbb
mov
addb
add
xchg
push
or
fwait
sub
add
ret
ss
fstp
xchg
fidivl
leave
inc
inc
pop
out
insb
incl
mov
and
repz
stos
ret
add
movsb
cmp
mov
popf
pop
adc
je
push
push
aam
xchg
aas
and
shrb
dec
push
sbb
xor
push
jno
jmp
push
inc
repnz
mov
sbb
icebp
dec
sbb
pop
call
clc
mov
dec
enter
imul
in
loop
add
push
and
pop
insb
loope
inc
adc
mov
pop
out
adc
in
adc
adc
xlat
sub
stos
pop
test
mov
in
inc
mov
cmp
dec
cmp
in
fwait
sub
fcmovne
shl
fidivrl
pop
testb
and
addr16
pop
and
clc
insb
cmc
or
cld
jbe
mov
push
pushf
mov
jp
jecxz
adc
movsl
js
cmp
dec
add
sbb
dec
fdivp
pusha
xor
aaa
and
xchg
mov
je
and
inc
mov
or
enter
unpckhps
fstps
xor
push
cmp
jmp
repz
pop
inc
inc
scas
jl
stc
xchg
mov
pop
popa
xchg
dec
adc
aaa
xorl
adc
fildll
roll
fcmovnb
sbb
mov
lods
pop
cld
sbb
iret
xor
add
or
out
push
jle
lcall
outsl
orl
movsb
test
mov
imul
imul
loopne
cmc
movsl
push
push
mov
fwait
cltd
and
popf
ret
cwtl
insl
in
and
fadd
orb
or
sti
xchg
mov
sti
or
xlat
addl
dec
mov
mov
inc
leave
clc
xchg
lods
dec
fadd
into
xor
adc
jo
test
out
push
jg
mov
push
push
les
ret
negl
scas
ss
cmp
jb
in
outsb
jge
dec
cmp
in
mov
cmpsl
cmp
les
shll
xor
mov
xchg
mov
xor
mov
sbb
mov
dec
sbb
pop
in
push
test
rcrl
test
outsl
sub
cmp
bound
lds
into
cs
imulb
mov
or
cmp
mov
and
pop
fcoms
mov
lret
out
sti
dec
rcr
fistpll
cwtl
sub
into
inc
sbb
dec
cmp
lock
inc
lret
out
je
int
fcompl
fnstenv
sub
nop
pop
imul
or
sti
lods
add
test
ds
xchg
shlb
xchg
mov
inc
test
movsb
mov
adc
jmp
lcall
std
mov
lods
ja
out
sbb
and
lds
or
cmpsl
jo
cmpl
repnz
pusha
pop
popf
cli
pop
xchg
stos
mov
and
pushf
mov
pop
dec
notb
inc
test
std
mov
dec
stos
scas
or
sbb
mov
xor
push
sar
rcrl
sub
cmp
ja
bound
cltd
or
das
cmpsl
incb
add
inc
mov
cmpsb
movsb
inc
add
jp
mov
int3
pop
sub
loope
xor
shl
mov
sti
fdivs
sbb
and
mov
imul
and
inc
mov
sub
jg
leave
fs
gs
xchg
js
add
cld
enter
mov
jp
std
inc
mov
imul
mov
sets
cmp
or
dec
fcmovnu
addr16
inc
pushf
xchg
mov
cld
in
fsubrl
mov
jle
pusha
push
pop
dec
push
xor
and
sarb
push
aaa
jae
lcall
fwait
mov
les
es
icebp
insl
pop
xor
adcl
or
adc
test
lds
outsb
repnz
lods
test
add
push
aad
push
adc
outsl
and
fisttpl
je
out
test
fdivrs
or
jge
adc
rcrl
add
mov
mov
nop
mov
dec
std
addr16
fnsave
je
jp
inc
mov
inc
test
ss
inc
and
fsubp
pop
jno
push
and
pusha
aad
jecxz
mov
pop
je
insl
mov
push
or
xor
loope
cld
test
ja
inc
jmp
sbb
sarb
das
adc
fsubrs
outsl
lock
in
dec
sahf
rdtsc
add
mov
jne
adc
aaa
xchg
ret
test
mov
aas
data16
jge
loope
mov
cwtl
lret
fdivr
aas
rolb
sub
fimull
daa
in
mov
jg
cmpsl
pop
mov
fisubs
jp
lahf
xchg
mov
mov
add
sub
add
push
mov
mov
inc
test
ss
insl
jae
pop
mov
sbb
dec
mov
mov
dec
xchg
inc
sub
dec
std
dec
imul
cld
sbb
push
clc
mov
jnp
icebp
lock
ret
adc
jns
fistl
mov
or
inc
sub
push
sbb
push
imul
in
sbb
sbb
rorl
aam
nopl
lcall
ficompl
mov
add
mov
stos
lods
pop
pop
ss
call
dec
mov
and
ja
inc
xchg
and
sub
faddl
sbb
inc
xorb
enter
mov
test
dec
mov
cmp
push
je
xor
inc
int
repnz
gs
ds
sbb
jp
out
dec
adc
lock
and
xor
sbb
out
fsubs
fucomp
jecxz
xchg
and
mov
or
and
in
fstpt
adc
int
test
ss
sbb
cmp
jne
sub
scas
sub
aas
xor
push
mov
ds
test
mov
loopne
push
popa
jg
xor
shll
out
hlt
in
dec
cmpsb
cmp
cmpsb
add
mov
ljmp
xor
adc
jno
mov
jge
lahf
xor
mov
jp
jle
xchg
call
or
pop
hlt
jnp
or
mov
test
mov
pop
sbb
fiadds
popf
je
fadds
test
sub
mov
xchg
fmull
fdivr
pop
mov
jns
xchg
add
mov
cmp
pop
ficoml
insl
mov
or
lret
lods
jns
cli
sub
inc
notl
pop
xor
mulb
inc
aaa
push
push
rolb
adc
repz
lock
inc
js
loop
adc
sub
push
cmp
xchg
scas
gs
dec
enter
fs
dec
pop
ljmp
enter
mov
ret
sbb
add
popa
popa
xchg
stos
jb
lret
xchg
xchg
lock
sbb
xor
enter
dec
push
dec
xchg
cltd
pop
push
fs
cmp
cwtl
adc
or
lahf
add
fisttps
aas
xchg
or
ss
add
dec
jmp
inc
add
jecxz
fcoms
sub
shrb
push
fcomip
out
or
sub
pop
repnz
ret
sub
dec
dec
sub
hlt
in
add
dec
ljmp
push
mov
push
jbe
push
push
jbe
xchg
cmp
pop
movsl
adc
pop
mov
int
subb
dec
xrstors
in
mov
mov
cmp
gs
push
jo
xchg
pushf
stos
adc
repnz
xchg
pop
les
ret
sub
cmp
mov
push
jo
inc
repz
sbb
std
jne
push
mov
inc
ds
xorb
jne
popa
fildll
hlt
pop
and
push
pop
xchg
pop
xor
mov
jne
into
sub
fwait
add
mov
cmc
jecxz
popf
sub
add
andb
mov
sub
femms
cmpsb
and
mov
ret
dec
insl
inc
imul
push
in
insl
in
adc
shr
adc
popa
outsb
and
clc
jle
shlb
andl
mov
pop
xchg
sbb
xor
mov
mov
dec
sub
push
lahf
ret
cmp
pop
mov
and
les
in
or
mov
repnz
dec
in
push
loope
jnp
bound
lock
ss
insl
pop
inc
mov
push
loopne
das
dec
aad
mov
inc
mov
cmpsb
inc
or
js
inc
pusha
inc
jnp
sub
ror
int
loopne
mov
jg
mov
dec
mov
ret
push
negl
inc
push
sbb
ljmp
push
jne
insl
cmp
es
or
call
ficoms
xchg
cmp
jbe
and
mov
popf
sbb
inc
pop
cmp
nop
fisttpll
test
out
fwait
mov
push
fisubl
out
push
lahf
cmpsl
loope
pusha
mov
mov
out
cmp
or
cli
add
fcomps
inc
jge
sub
mov
push
js
jecxz
cmp
jb
out
loope
mov
outsb
adc
mov
xchg
fs
cwtl
testb
daa
mov
rcrb
add
jmp
jb
mov
daa
or
nop
mov
mov
mull
mov
dec
jnp
in
or
adc
aad
in
in
.byte
