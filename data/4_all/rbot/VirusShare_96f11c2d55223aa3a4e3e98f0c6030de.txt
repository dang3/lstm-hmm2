pop
ret
inc
jae
xchg
popf
imul
data16
repz
js
pop
std
inc
dec
pop
sbb
xor
add
push
inc
xchg
cmp
dec
das
cmc
daa
adcb
mov
bound
pop
in
repz
pop
notb
mov
fcoml
int
cmpsl
pop
out
xchg
ja
ljmp
aaa
or
mov
mov
push
loop
mov
inc
adc
push
sbb
mov
out
icebp
shlb
in
sub
rcl
loopne
mov
cmpsl
imul
push
sbb
inc
cld
loop
mov
mov
jns
icebp
mov
cmpsb
mov
pop
xchg
rcll
lea
sahf
addr16
test
lock
out
aad
divl
mov
test
dec
mov
sbb
aas
addr16
stc
dec
xchg
sub
sub
sub
aas
fcoml
shl
out
jecxz
adcl
or
ret
jae
out
xchg
pop
mov
mov
adc
or
mov
mov
sbb
lcall
or
sub
mov
es
inc
jge
mov
adc
sbb
scas
cmc
in
adc
out
into
fcompl
jmp
out
jb
jb
iret
sbb
mov
faddl
enter
decb
or
jae
sarb
sbb
jae
sub
lret
push
ret
jge
pop
sarb
pop
or
or
daa
pop
jo
fsubp
mov
or
jno
push
and
ljmp
pop
imulb
pop
fs
adc
and
test
and
stos
shll
mov
mov
xchg
insb
in
inc
mov
mov
scas
int
aas
les
dec
testb
xor
xchg
add
dec
mov
or
adc
jns
dec
js
sub
loop
adcl
aad
add
por
sub
fcmovnb
ss
gs
in
xor
cld
mov
js
or
push
pop
adc
sub
andl
inc
flds
lahf
mov
lahf
push
jle
and
in
xchg
rorl
in
cli
cmp
shrb
insb
mov
dec
in
add
jnp
and
sbb
add
cmc
sar
lahf
jb
popa
sbb
mov
dec
mov
cmp
mov
jecxz
ret
pop
and
ja
testl
idivb
xchg
je
loop
out
insb
bound
data16
ja
push
mov
movsb
sbb
aas
popa
sbb
push
jg
and
cld
loop
cmpsb
mov
sar
xchg
mov
push
adc
cld
jp
or
ret
testl
push
lret
test
mov
push
and
in
jnp
lret
inc
lea
shl
mov
cmp
add
push
imulb
push
repz
xor
xchg
inc
inc
js
mov
inc
inc
adc
inc
fs
lcall
outsb
mov
stos
push
sub
fwait
sub
insl
insl
xchg
and
fwait
xlat
mov
scas
mov
mov
out
xor
xor
and
popa
daa
in
jne
cmp
add
mov
das
dec
and
in
test
mul
loope
dec
sbb
xchg
sub
idivb
mov
adc
and
pop
cmp
sub
into
jns
adc
mov
repz
in
sbb
xor
cmp
xchg
repnz
lds
bound
xlat
stos
jl
ds
cmc
aas
mov
enter
push
andb
ss
dec
cmc
jno
pop
jae
pop
lods
ds
and
loopne
inc
inc
pop
sbb
push
push
and
enter
add
ds
in
vcvttsd2si
shrl
fsubrs
and
mov
mov
mov
cmpsl
push
add
jnp
stos
jnp,pn
and
push
out
push
addr16
cmpsl
inc
lahf
sbb
popf
mov
std
fnstenv
mov
stc
mov
stc
mov
xchg
sub
out
sbb
jbe
cmpsb
adc
pop
and
jmp
out
sub
orl
int3
push
inc
xchg
inc
push
push
in
inc
lods
jp
es
in
aas
push
mov
xlat
or
pop
add
aam
mov
sahf
or
sbb
inc
or
aas
fiadds
pop
loop
pop
inc
addr16
stc
test
or
lret
adc
inc
push
adc
test
pop
mov
sbb
inc
aad
xchg
dec
rcl
loope
cmpsb
pop
repz
call
cmc
call
sbb
mov
push
stos
loop
sub
cmp
in
sub
int3
test
popf
jno
mov
enter
ds
into
xchg
mov
mov
mov
push
loope
ret
jne
and
nop
adc
pop
xor
pop
leave
jge
fucom
push
lea
xchg
std
xorl
push
sahf
mov
xchg
pop
sbb
push
ja
cmc
adc
pop
pop
lods
pop
int
inc
movsb
mov
in
popf
xchg
inc
sbb
cwtl
add
and
xor
or
addb
pop
adc
fimull
lds
cmp
pop
lea
mov
sub
int
jp
mov
es
mov
or
sub
pop
cmp
sbbb
scas
icebp
push
jb
sbb
add
outsl
push
mov
xchg
or
inc
mov
adc
fistpl
lret
loop
out
push
fbstp
loopne
int3
push
push
push
pop
pop
pop
stc
push
push
push
push
lea
push
push
push
push
je
push
push
pop
pop
cmp
push
pop
jo
and
xor
xor
push
or
pop
test
cld
cld
test
cmp
test
lea
lea
cld
push
push
rol
pop
pop
jge
ja
test
jno
push
ror
pop
call
push
dec
pop
cld
jne
sub
push
and
pop
or
mov
inc
inc
inc
inc
push
push
mov
pop
pop
xor
xor
and
nop
push
push
ror
pop
pop
cmc
push
jle
push
push
pop
pop
pop
push
add
mov
pop
cmc
jl
push
cmp
pop
push
push
pop
pop
push
pop
cld
push
js
jge
test
pop
push
mov
pop
push
add
mov
pop
push
sub
pop
or
clc
lea
mov
xchg
jo
and
clc
nop
push
pop
and
cmp
jne
jmp
ja
push
sub
pop
stc
push
mov
pop
or
push
jp
xor
pop
sub
and
cld
rol
push
add
pop
test
jmp
mov
mov
mov
push
cmpsl
sbb
jge
pop
add
inc
push
adc
insb
push
scas
dec
inc
sti
pushf
xchg
sahf
aad
sti
xor
loop
jecxz
leave
jnp
repz
das
pop
mov
adc
mov
ljmp
jle
sub
rcr
pop
inc
ficoms
pop
or
add
ret
push
push
pop
pop
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
add
stc
add
push
push
push
and
pop
pop
pop
dec
jne
shl
jne
xor
stc
cld
test
test
cmp
jge
rol
cld
nop
nop
cld
push
push
push
and
pop
pop
pop
push
inc
pop
ror
jns
jae
cmp
push
mov
pop
push
push
push
pop
pop
pop
jle
push
js
test
pop
cmc
stc
cld
xchg
dec
jne
sub
push
movzbl
jno
cmp
loop
pop
push
push
inc
pop
pop
inc
dec
push
jp
cmp
pop
int
mov
jbe
lahf
pop
push
imul
test
jge
xchg
insb
cmpsl
pop
mov
xchg
rolb
and
sbbl
mov
push
xor
jne
sub
pop
shll
dec
push
xchg
cmp
ljmp
dec
push
mov
sbb
pushf
add
sub
push
mov
mov
adc
insl
mov
sbb
fs
mov
push
add
inc
pusha
and
sub
push
sarl
jecxz
add
shll
and
sarb
aas
xchg
mov
das
or
loopne
inc
gs
mov
jecxz
dec
jp
push
stos
mov
sub
leave
push
ds
pop
jmp
std
fcoml
jae
out
inc
sub
mov
xchg
ror
test
aam
mov
fistps
jp
sub
mov
mov
pushf
hlt
es
mov
scas
push
add
jmp
cwtl
mov
hlt
mov
mov
movsl
jns
aaa
add
mov
rorl
das
mov
mov
int
lret
popf
and
jbe
jmp
imul
bound
repnz
js
int
insb
sub
stos
jmp
sbb
jp
or
adc
cwtl
dec
inc
pop
imulb
js
dec
fs
add
sub
ss
sbb
call
add
add
incb
fwait
mov
sti
neg
fldl
ret
push
xchg
mov
outsb
cmp
test
bound
addr16
in
add
xor
je
out
cwtl
mov
sbb
sub
push
sub
in
repz
cmp
es
cmp
mov
add
rcrl
cvtdq2ps
popf
bnd
cli
push
push
cwtl
repnz
add
repz
lea
pop
xchg
or
xor
push
mov
icebp
hlt
mov
sub
sbb
push
repz
pop
in
xor
xchg
pop
push
dec
push
mov
jp
pop
xchg
fnsave
mov
mov
sahf
xor
mov
lea
add
sbb
sbb
ficomps
pop
and
adc
cli
inc
jbe
lds
shl
stos
pop
lea
push
or
inc
stc
fisttpll
and
aam
mov
add
add
jbe
dec
in
outsl
test
cs
mov
add
xchg
add
sub
daa
stos
pop
test
lcall
mov
pushf
shlb
xor
call
int3
neg
inc
pop
mov
pop
jns
cmc
stos
test
addr16
cmpsb
mov
cld
stc
loop
pop
rcrb
push
jae
out
xchg
inc
aad
pop
cltd
ljmp
add
push
push
mov
rol
dec
pop
push
inc
das
add
jle
stos
fadds
fwait
add
cmpsb
mov
movsl
xor
mov
ret
filds
out
pop
mov
lret
lret
dec
sub
je
inc
insl
mov
and
rclb
jecxz
cli
mov
or
outsl
cmp
push
cmc
idivb
inc
mov
xchg
mov
cmp
jl
insb
stc
sub
and
outsl
in
xchg
cs
aad
xor
lcall
hlt
daa
or
out
push
mov
jae
out
lahf
inc
sub
inc
mov
cmc
sarb
mov
xchg
ss
icebp
loopne
cmpsb
sub
sbb
add
or
cld
jge
mov
push
lods
xor
fcompl
fisttpll
gs
add
dec
movsb
clc
in
imul
xlat
nop
or
movl
mov
jae
popa
int3
sahf
inc
das
push
cltd
xlat
pop
fildll
mov
or
dec
adc
mov
aaa
sti
dec
xchg
stos
cmpl
add
popf
pop
bnd
ss
sub
jae
ds
jecxz
test
fdivl
cmp
fs
push
lcall
sahf
xchg
addr16
lret
testb
cld
jbe
jb
inc
sub
push
jge
pop
int3
pop
imul
sbb
adc
popa
mov
ljmp
push
cli
lret
sub
scas
mov
adcl
xchg
cmp
push
mov
mov
test
dec
jbe
nop
insl
xor
dec
dec
fidivrl
push
mov
mov
push
xchg
pushf
push
ljmp
pop
js
lret
fistl
cmp
push
jnp
cmp
out
push
add
clc
ss
or
iret
cwtl
xchg
xchg
outsb
mov
in
fistps
pop
mov
inc
mov
pop
pop
in
cmp
mov
mov
pop
aaa
jae
cmp
imul
jmp
test
pop
xor
jmp
mov
addl
jo
aad
dec
inc
sub
or
mov
jns
cmp
lods
inc
jb
fistl
ds
insl
aas
dec
outsl
push
out
mov
cld
mov
ja
xchg
pushf
shlb
std
cld
fimuls
inc
shrb
adc
pop
cld
out
jbe
popa
incb
fwait
lahf
sub
loop
arpl
cld
jge
push
stos
mov
aas
jmp
adc
xchg
decb
add
cmp
pop
aaa
jmp
int
movsl
lret
mov
clc
stos
mov
scas
sbb
and
push
ficomps
sti
jnp
cmpsl
and
or
cltd
fwait
mov
ret
in
adc
add
mov
cmp
fimuls
and
stos
cmp
hlt
fsub
and
pushf
xchg
cmpsb
ret
push
fdivrs
and
in
sub
or
or
inc
call
inc
lods
add
jns
mov
les
cli
test
aad
sbb
mov
into
inc
stc
sub
addb
mov
push
inc
sub
add
outsl
subb
xorl
mov
aaa
fadds
mov
sub
and
lods
testl
sub
mov
adc
cmpsb
mov
sti
mov
in
out
jmp
imul
and
int3
mov
mov
pop
test
pushl
loop
and
mov
sbb
pushw
adc
and
scas
pcmpgtw
leave
dec
jno
lods
mov
xchg
adc
jmp
xchg
dec
mov
hlt
test
xor
or
or
movsb
push
push
enter
inc
or
xor
daa
pop
int
hlt
das
jmp
testb
arpl
jbe
jge
jne
dec
scas
rcrl
push
jge
add
call
xlat
ljmp
push
not
mov
or
movsl
in
pop
push
popf
repz
jb
incl
add
push
out
cwtl
mov
mov
enter
jno
ret
mov
repnz
lock
lods
mov
lret
aam
mov
jo
sub
daa
xor
sub
dec
pop
insl
fs
jbe
jecxz
pop
pop
pop
push
jp
sahf
adc
add
add
jg
mov
lods
add
jno
push
sub
or
out
jge
nop
xchg
jns
in
dec
test
dec
dec
in
int
xchg
sub
sbb
imul
mov
into
test
jmp
inc
add
leave
fwait
lcall
arpl
add
gs
sub
cltd
out
fstl
icebp
nop
push
sub
into
xor
mov
into
in
lret
flds
add
or
dec
lock
ljmp
sbb
mull
enter
ljmp
push
adc
test
into
cs
aad
inc
pusha
imulb
call
je
sub
mov
stos
data16
adc
test
shll
fcmovnbe
fidivl
pop
mov
lcall
mov
das
es
outsb
movsl
aam
cmp
sbb
or
jecxz
out
cmpsb
and
dec
outsb
outsl
fidivrl
dec
outsb
loope
shll
mov
pop
push
pop
in
gs
or
sbb
leave
popf
mov
ljmp
rcr
push
sub
rcr
cmp
loopne
add
xchg
inc
mov
cld
ljmp
jne
cmp
push
scas
ret
inc
aad
jl
pop
sbb
inc
mov
jecxz
lock
out
movsl
cmp
scas
int3
movsl
cmpsl
into
push
notb
aaa
mov
cmp
mov
or
sbb
cmp
adc
lret
mov
js
add
pusha
mov
cld
sub
jmp
fwait
dec
xor
ret
gs
add
loop
pop
xchg
scas
sahf
insl
mov
jg
pop
xchg
addl
lret
pop
imul
inc
jae
jle
pushl
ljmp
push
push
push
sbb
sub
inc
dec
xchg
mov
add
rorb
cwtl
pop
or
daa
mov
sti
xor
dec
xorb
shll
sub
push
pop
sub
mov
xchg
jl
rolb
and
movsl
and
fidivs
scas
popa
jle
xchg
inc
mov
in
aaa
xchg
ret
mov
dec
repz
leave
inc
add
mov
nop
hlt
sub
stc
ret
js
sarl
ja
cltd
adc
mov
add
inc
push
or
mov
sahf
loope
das
cltd
mov
xchg
or
sahf
mov
mov
xchg
imul
imul
push
int3
inc
repz
jp
jb
andl
dec
lds
lahf
call
pop
xor
sbbb
push
iret
in
and
lock
push
sub
or
mov
insb
xor
cmc
or
cld
jecxz
and
cld
fsubrs
out
cld
dec
sbb
jae
ja
mov
dec
movsl
sbbb
sbb
fcomip
pop
sbb
cmp
add
das
jns
mov
sbb
mov
daa
add
push
sbb
push
andl
or
in
in
cmc
stos
cmp
imul
pop
xchg
cmp
call
xchg
sbb
loop
ljmp
xor
adc
aaa
and
out
fcmovu
lea
mov
js
mov
mov
and
cld
loop
ret
test
xor
cmp
pop
les
cmp
jns
mov
les
fcmove
nop
and
push
and
sbb
jmp
out
scas
test
ja
sarl
shrl
fcoms
xor
jge
fnstenv
and
push
shlb
mov
pop
add
ja
xor
repnz
xchg
jg
or
push
jg
mov
adc
adc
cmp
sbb
jp
jbe
inc
dec
int3
jle
fs
mov
dec
mov
fdivrl
call
and
push
popa
pop
shll
jp
lods
pop
in
sbb
arpl
push
sbb
std
and
xchg
shl
shll
pusha
or
push
add
shrb
jmp
mov
push
cwtl
xchg
xor
addr16
add
ret
les
add
jbe
test
rcr
sub
clc
mov
mov
out
jo
hlt
mov
jl
int3
shll
fcoms
jge
lret
mov
divl
and
adc
icebp
inc
jne
add
inc
cmp
out
repz
sub
pushf
push
jge
push
xlat
inc
sbb
mov
xor
ds
data16
outsl
cmp
and
mov
int3
popa
push
xchg
insb
addr16
into
pop
mov
addr16
or
stos
insb
mov
dec
fimull
ja
mov
mov
jmp
pushf
iret
mov
iret
negb
push
int
je
mov
test
xchg
ljmp
dec
shr
or
test
jnp
fiaddl
xor
fld
add
push
outsl
xchg
outsb
lea
mov
imul
stos
push
lret
mov
in
mov
xchg
jns
ds
sub
cmp
sbb
xlat
xor
sbb
ficoms
jne
push
sub
pop
mov
cmpb
rolb
out
mov
push
or
ret
in
xlat
imull
es
sbbl
aam
test
cmp
shlb
push
adc
shll
sbb
and
sub
pop
mov
add
or
fisubrl
add
sbbb
mov
sbb
fisttps
test
icebp
lret
mov
inc
cld
out
fisubl
inc
jnp
push
pop
lods
sub
jae
mov
inc
adc
push
mov
shl
cwtl
fwait
sbb
push
dec
jnp
or
pop
popf
jecxz
mov
iret
mov
loop
mull
sbb
sub
add
je
ret
pop
adc
mov
decb
lahf
addr16
or
dec
adc
xor
and
inc
jns
jns
mov
add
or
cmp
push
adc
loopne
xchg
idivl
roll
jmp
cmpsb
pop
xchg
jb
cld
mov
bound
add
or
sahf
fidivs
jnp
xor
xchg
les
fucom
ljmp
or
pusha
mov
repz
mov
push
jo
mov
push
aas
push
lcall
and
in
dec
mov
sahf
out
mov
push
jno
pop
popa
mov
mov
jmp
scas
lret
xchg
adcl
shrl
and
jg
inc
jnp
out
push
and
aaa
pop
inc
pop
mov
out
testb
cmc
in
cmp
cmpsb
scas
inc
lods
or
leave
and
and
test
arpl
scas
mov
addr16
mov
mov
mov
call
loope
inc
jns
jmp
arpl
add
popf
mov
jbe
xchg
jnp
mov
pop
out
je
jno
sbb
pushf
xor
mov
mov
cltd
lcall
fucomi
mov
out
or
jle
pop
hlt
mov
mov
pop
inc
pop
push
cmp
test
jae
dec
jle
inc
sbb
lods
pop
rol
daa
je
into
mov
sti
popf
imul
mov
pop
fimull
adc
cmp
hlt
mov
int
lods
push
cs
push
fmuls
inc
bnd
add
pop
add
dec
test
cmp
js
push
sahf
mov
cmp
rorl
popf
stos
add
loope
ljmp
pop
jp
xchg
mov
and
aad
test
outsl
fists
mov
addr16
xchg
mov
xlat
mov
shl
adc
insl
push
enter
push
jae
imul
stc
add
jno
mov
gs
fcoml
jo
shlb
jae
or
out
inc
add
jno
push
sbb
jle
movsl
push
xor
ds
inc
imul
aas
push
push
xor
jb
pop
xchg
loope
loopne
aad
sbb
insl
xor
cmpsb
pop
test
imul
jmp
stos
adc
lock
adc
iret
or
push
sub
push
stc
mov
inc
pop
sub
outsb
lods
rcrb
lcall
mov
pop
cmpsl
fstpt
test
xor
cmpsb
and
or
dec
loopne
mov
lds
mov
jns
cmp
loop
inc
aad
and
insb
inc
imull
mov
cmpb
xor
shll
xor
popa
inc
stos
shrb
jo
jmp
add
cmp
ds
sub
sub
and
adc
in
jb
sbb
or
neg
or
insb
and
out
mov
sub
pop
cld
xchg
cli
add
call
inc
cwtl
fsubl
xor
jae
push
test
iret
mov
pusha
loopne
pop
cmpsl
push
stos
inc
add
pop
rcl
int3
imul
xchg
hlt
cs
gs
ljmp
adc
aaa
lcall
push
neg
xor
dec
sbb
cmpsb
cmc
ret
out
sub
icebp
out
add
stc
aad
insl
mov
mov
push
push
cmp
out
lret
xchg
inc
mov
das
fistpll
sbb
test
mov
add
pop
mov
pop
in
out
and
leave
pop
sbb
cld
and
mov
adc
dec
or
ficompl
in
sub
daa
jle
jnp
inc
inc
je
and
inc
call
in
sub
jb
push
addb
inc
loop
shl
decl
out
dec
mov
adc
test
aad
into
mov
es
pop
loope
sbb
insb
imul
aam
mov
sub
xchg
jp
xchg
add
or
enter
ret
es
sbb
pop
pop
xchg
mov
sbbb
mov
sub
inc
dec
fidivrs
cmp
pandn
sbb
pop
sti
sbb
pop
mov
je
inc
pushfw
stos
xchg
cmp
or
rcll
shll
imul
scas
clc
jo
cmp
out
push
test
js
and
or
sti
adc
repz
hlt
sbb
sub
mov
movsb
push
and
push
dec
aam
pop
mov
lahf
aam
lock
test
push
xchg
and
divb
sub
dec
outsl
xchg
mov
jmp
mov
xchg
or
adc
aaa
mov
rcl
and
sub
xor
sub
adc
jo
mov
jmp
cli
xchg
test
rcrb
cs
sbb
jnp
xchg
ret
inc
jne
sbb
lret
adc
mov
cmp
out
repz
mov
shlb
es
sub
adc
xor
adc
test
les
and
insl
pop
ljmp
mov
mov
hlt
pop
movb
ja
leave
lret
mov
sti
ficomps
sub
dec
push
pushf
mov
sbb
popa
mov
hlt
add
mov
fucomp
adc
mov
sub
dec
sarb
mov
ret
mov
xchg
repnz
push
adc
pop
dec
sbb
and
xor
and
mov
pop
inc
fdivrl
mov
enter
sub
lret
pop
cmp
test
mov
mov
mov
ja
pop
push
xor
cmpsb
popf
aam
jle
or
adc
out
mov
mov
scas
cwtl
sub
leave
aaa
dec
sub
aaa
adc
and
outsl
xor
jne
insl
mov
mov
or
cmpsb
int3
pop
push
push
in
mov
call
inc
pop
mov
insl
ljmp
pop
imul
rorb
and
testb
push
xchg
add
xchg
cmpsb
test
pop
lcall
jl
cwtl
mov
sub
mov
mov
mov
addr16
cmpl
pop
out
mov
cmc
mul
je
mov
adc
xor
inc
mov
mov
loop
imul
adc
mov
xchg
mov
mov
add
xchg
shr
lret
sub
js
outsb
adc
ss
popf
stc
jb
or
fwait
mov
push
call
adc
pop
stos
pop
stc
sti
mov
fbld
and
xor
lret
push
mov
loope
je
cmp
cwtl
xchg
adc
dec
clc
push
push
lds
fmull
loopne
dec
pushf
and
push
xor
mov
clc
dec
pushf
or
out
pop
dec
inc
xchg
arpl
js
icebp
xchg
mov
jle
pop
enter
mov
dec
mov
xchg
sbb
mov
adc
sub
dec
xchg
mov
leave
and
add
cwtl
xchg
pushf
das
ret
jb
cwtl
sbb
aaa
ret
lahf
lods
rorl
xor
dec
roll
and
insl
vpmaxub
cmc
arpl
cs
insl
mov
movsl
out
push
jp
inc
rolb
sub
es
inc
int
or
dec
into
or
mov
mov
insl
mov
repz
gs
and
cwtl
jne
jecxz
xlat
mov
xor
sub
jp
jle
xchg
inc
xor
xchg
or
push
mov
mov
or
ret
add
cmp
and
daa
or
jp
jns
pop
or
ror
cmp
inc
stos
xor
pop
add
call
les
shrb
cld
je
pop
jmp
adc
push
mov
xchg
dec
and
dec
negb
xchg
rorb
rclb
push
adc
and
insb
jp
lods
and
add
pop
push
xor
push
lds
push
adc
jnp
fiadds
or
cmp
rcll
addr16
xor
pop
hlt
test
shrl
dec
aas
mov
xchg
adcb
mov
fnstsw
and
sbb
and
cmpl
test
jp
or
cmp
sub
jl
mov
jmp
xchg
les
lcall
cmp
mov
into
pop
xor
jg
cwtl
sbb
mov
add
mov
pop
or
popl
add
mov
and
enter
int3
and
add
sub
or
icebp
lea
imul
leave
jecxz
aad
shrb
add
mov
stc
aad
lret
xor
cmp
xor
dec
cmp
jl
pop
jne
scas
mov
stos
pop
bound
ja
mov
inc
pop
sub
pop
xor
or
mov
push
jbe
sarb
movsl
sahf
test
fcoml
data16
sahf
popf
lods
fstl
fwait
push
sub
xchg
shl
out
addr16
jle
mov
in
leave
xor
hlt
scas
pop
dec
ds
fists
mov
and
popf
sub
pushf
xor
shrb
out
mov
insl
xchg
mov
mov
mov
sub
test
jge
jmp
pop
pop
fists
pop
fisttpl
outsb
inc
fistpll
jne
jg
sbbl
cli
sbb
stos
xchg
cmc
loopne
pop
imul
pop
add
mov
mov
test
xchg
dec
daa
sti
cmp
inc
fistpll
sub
mov
xchg
and
xchg
push
in
mov
int
int
jno
mov
mov
lret
xchg
ljmp
mov
rol
fwait
inc
push
push
mov
vmread
dec
push
jl
mov
push
je
sub
and
sbb
insb
mov
pop
inc
cmc
movsl
dec
gs
scas
sub
mov
add
scas
shrl
bound
insb
adc
push
push
shlb
popf
addr16
push
ss
sub
dec
imul
xchg
mov
jbe
fcoml
shrb
les
fidivrs
and
in
push
aas
adc
fld
lea
out
cmpsl
cmp
pop
dec
jg
mov
cwtl
addr16
std
les
lods
sub
push
leave
cmp
iret
pop
or
mov
sti
add
mov
xorl
cwtl
les
lea
mov
jns
cmpsb
out
ret
int3
mov
adc
mov
lock
sahf
push
mov
movsb
fsubrs
push
cs
dec
inc
fcomps
sbb
lahf
and
and
mov
push
push
es
mov
xchg
dec
push
iret
in
push
push
adc
daa
call
ret
scas
mov
and
fadds
sbb
mov
aad
dec
cmp
icebp
pop
jae
enter
aam
in
dec
or
mov
dec
inc
iret
frstor
fdiv
mov
shl
sub
int3
pop
out
insl
or
pop
leave
push
int
jb
pop
outsl
adc
xchg
sbb
inc
inc
cwtl
das
pushf
sbb
rcrb
jle
scas
sahf
xchg
push
xor
add
cltd
push
fildl
fwait
jae
sub
scas
and
jmp
lock
aas
or
mov
test
or
xor
or
sbb
and
lret
pop
mov
xor
sub
cld
mov
and
int
frstor
jo
cmp
test
fildll
jno
jmp
scas
pop
popfw
inc
mov
sti
inc
in
jmp
mov
mov
sub
mov
testb
outsl
sahf
mov
roll
cmpsl
push
cli
xor
inc
sbbl
dec
jns
or
mov
cmp
mov
std
or
push
out
inc
out
int
or
push
pop
and
add
and
adc
inc
arpl
loopne
mov
mov
mov
sbb
repnz
outsl
fmull
push
push
sbb
xchg
and
xchg
sbb
mov
or
movsb
dec
lret
test
push
les
imull
fsubs
xor
pop
inc
sbbl
hlt
iret
fidivl
insb
cld
sbb
xchg
jbe
cmp
dec
dec
add
mov
mov
mov
jg
repnz
or
jecxz
push
popa
xor
and
dec
jns
xor
pop
push
inc
out
pusha
jbe
mov
xchg
mov
mov
pop
sbb
jp
pop
test
in
dec
sbb
test
and
cltd
mov
ja
jp
loopne
sbb
sub
jb
dec
cwtl
mov
sub
scas
ja
repz
xchg
mov
pop
push
xchg
sti
mov
pushf
pop
movl
push
les
add
into
jge
xor
push
mov
sub
rolb
stos
sbb
jle
push
fisubl
fisttpl
pop
iret
mov
ss
je
xchg
dec
add
dec
jae
mov
mov
jo
mov
vpsrad
or
loop
lock
cmp
insb
xor
leave
adc
int3
mov
jnp
push
cmp
sub
ja
sbb
mov
xor
mov
je
bound
lret
in
leave
jae
mov
jne
push
js
xlat
dec
lods
jno
enter
sub
pop
sahf
mov
sub
push
mov
fs
outsb
std
mov
ds
imul
addr16
lock
ror
sub
inc
rorb
dec
in
sbb
pop
xlat
test
jo
push
inc
mov
sbb
lds
pop
sar
popf
imul
lds
fimull
nop
xor
xor
push
pop
adc
pop
les
or
adc
adc
inc
loop
mov
cmp
sub
mov
jno
sahf
mov
adc
ljmp
jle
adc
pop
pop
dec
jae
dec
inc
int3
mov
xchg
cmp
inc
cmp
pop
sbb
sub
imulb
mov
mov
das
xchg
cmpl
aad
xlat
call
mov
outsl
jp
mov
cmpsl
cmp
adc
pop
mov
fcom
mov
addl
nop
aaa
imul
xor
dec
pop
nop
push
sbb
inc
sbb
insb
mov
iret
add
add
dec
jno
mov
dec
push
xor
push
jmp
js
or
data16
mov
inc
lods
and
test
gs
jno
cmp
jae
cmp
out
scas
aad
push
in
xchg
mov
jae
xor
gs
imul
mov
sbb
stc
popl
adc
das
nop
mov
js
dec
pop
pop
mov
sarl
xchg
push
jg
push
inc
lahf
lcall
jg
lods
pop
jge
jb
xor
jns
js
cli
jb
ljmp
inc
shlb
xchg
and
push
sbb
sub
or
dec
xor
push
sahf
jne
and
imul
inc
out
scas
push
or
lock
and
call
mov
jmp
ja
or
xor
inc
scas
lods
pushf
or
shrl
adc
mov
pop
mov
mov
scas
xor
add
fstpt
or
lock
imul
sbb
and
mov
ret
test
or
pop
lret
stos
jp
mov
and
pop
fistpl
insb
cwtl
sub
sbb
rcrl
sub
jnp
sbb
or
jae
enter
movsb
xchg
cmp
outsb
rcrb
nop
pop
or
pop
sub
ret
fcmovu
les
sub
fstl
iret
xchg
jmp
in
pop
adc
repnz
ljmp
sub
add
nop
adc
mov
test
sub
movsl
dec
jbe
cmp
fwait
sub
int
sub
and
dec
ljmp
push
test
and
lret
add
ljmp
mulb
mov
and
ret
into
js
sub
xchg
xchg
cmp
add
fs
mov
pusha
cmc
insb
or
sbbb
cmp
faddp
add
xchg
add
xor
jecxz
xor
or
imul
sbb
aam
jecxz
xchg
leave
mov
xchg
out
ljmp
adc
movsl
pop
je
jmp
mov
movsl
lock
lock
ret
scas
out
jns
pop
pop
push
lret
mull
dec
adc
xchg
jge
lret
jp
adc
pushf
mov
out
jne
sub
ret
divb
rcll
jle
mov
shll
cli
jle
fcomps
cmpsb
xchg
movsb
or
and
mov
fsts
pop
data16
pop
sub
inc
in
dec
xchg
test
hlt
lret
mov
xor
lret
scas
push
outsb
pushf
xor
xor
rorb
subl
mov
dec
dec
rcrl
jno
shlb
xchg
mov
pop
dec
inc
add
xor
in
cmpsl
xchg
out
hlt
cwtl
cmpsl
movsb
fadds
xor
xor
cld
loope
enter
cmp
fcmovnb
lock
lret
xor
arpl
int3
dec
wrmsr
xchg
add
push
mov
sbb
or
push
or
jno
int
add
icebp
insb
mov
pop
mov
insb
xor
nop
cmp
mov
adc
xor
sbb
cmpsl
jg
pop
repnz
into
bound
notb
xlat
outsb
sub
mov
and
xchg
out
enter
imul
out
inc
mov
aas
mov
mov
test
sub
movsb
pop
jmp
or
xchg
test
xchg
or
push
mov
push
cli
inc
and
xchg
cmp
mov
mov
cmp
and
xchg
sti
pop
and
les
pop
out
mov
mov
sbbb
outsl
xor
mov
andb
jp
inc
scas
mov
dec
cs
jne
clc
xchg
jle
mov
dec
sbb
cmp
jp
sti
push
mov
mov
jl
sub
jmp
inc
lds
pop
cmp
push
xchg
scas
fmul
in
imul
sub
add
cmp
jnp
adc
add
in
inc
xor
jl
mov
rolb
mov
loop
jp
inc
jecxz
mov
addb
movsb
push
leave
in
js
in
mov
xchg
jl
and
jp
mov
fbstp
jg
fimull
jo
dec
popf
test
pop
mov
jp
movsb
jnp
in
push
add
ja
jnp
pusha
clc
std
loope
cs
je
push
cmpsb
sbb
loope
mov
pushf
and
daa
insb
repnz
xor
scas
pop
cmp
andl
jmp
mov
pop
cs
in
data16
addr16
in
icebp
or
pop
test
movsb
pop
jle
add
jb
sub
gs
cltd
and
dec
dec
aaa
nop
sti
scas
jmp
in
jbe
and
dec
subb
mov
imul
into
mov
pop
icebp
push
mov
mov
inc
pusha
or
push
push
jno
subl
gs
and
imul
stos
andl
sbb
cli
xchg
adc
cli
dec
fisttps
repnz
mov
inc
fstpt
popf
cltd
pop
sub
mov
lret
mov
push
adc
jp
iret
push
les
leave
mov
xchg
aad
data16
push
xchg
xor
xchg
in
nop
ja
inc
lahf
push
inc
mov
mov
xchg
push
xor
or
push
ja
shll
test
xchg
insl
fucompp
jmp
sub
js
rcrl
xor
mov
or
test
cli
das
sbb
adc
mov
outsb
mov
je
jne
or
fisttps
pop
addr16
sbb
jnp
adc
mov
inc
mov
mov
push
rorb
imul
into
rclb
cli
sbb
pop
iret
xor
push
push
flds
pop
sbb
cmp
or
notl
add
test
pop
pop
stos
xchg
in
sub
fisubrs
pusha
xchg
xchg
jne
bound
repz
mov
cmc
jge
and
out
pop
test
outsb
stc
inc
test
inc
test
daa
mov
inc
movsl
inc
dec
mov
sub
popf
mov
jle
imul
or
mov
out
cli
popa
and
mov
adc
push
outsl
inc
cwtl
iret
sbb
add
in
insl
test
cmp
lock
stc
icebp
loop
mul
outsl
and
mov
mov
sub
sahf
sbb
popa
cltd
sbb
sbb
cs
mov
cmpsl
sbb
outsl
es
inc
into
fiadds
out
mov
push
ror
xor
lret
iret
subb
arpl
add
and
xor
neg
scas
cmp
je
enter
cli
lret
leave
dec
mov
cmpsl
in
mov
lock
and
int3
fxtract
into
fsubl
push
push
inc
mov
mov
gs
sti
push
std
adc
add
outsl
sub
jmp
iret
jecxz
call
adc
xor
mov
in
cli
roll
repz
in
dec
and
push
std
adc
mov
lock
in
dec
mov
sub
mov
inc
cwtl
into
shll
aas
scas
ja
enter
and
or
dec
mov
jp
sbb
dec
jae
xor
out
pop
sti
test
adc
loop
fmulp
add
lds
int
pop
xor
pop
jge
aas
ds
not
outsl
stos
inc
lods
popa
fadd
popf
sub
dec
mov
lods
js
dec
andb
les
bound
andb
icebp
sub
dec
push
loopne
xorl
jp
mov
hlt
jp
jecxz
inc
jl
fs
repnz
adc
nop
xchg
jno
xchg
inc
loopne
jno
popf
sahf
mov
jne
push
fwait
push
fldcw
inc
arpl
mov
in
cmp
inc
aas
lret
lea
sub
int3
int3
xlat
fsubs
hlt
xchg
mov
leave
mov
sahf
sarl
aad
jp
jno
jne
mov
aaa
and
add
jg
adc
push
pop
sub
cmp
jecxz
xchg
int3
sub
stc
gs
and
mov
es
mov
jnp
repnz
xchg
mov
mov
fidivs
inc
lock
jne
mov
lcall
loope
mov
incl
pop
and
imul
std
add
ljmp
out
dec
push
push
out
push
lods
push
in
bound
dec
add
sub
mov
clc
cmp
in
test
pop
cmp
scas
stos
out
mov
aaa
test
scas
jl
inc
jp
dec
or
test
xchg
pusha
sub
push
inc
xchg
int
sbb
enter
aaa
lcall
cmp
mov
lret
mov
or
ja
aam
out
loope
sub
test
jl
mov
cmp
and
push
lods
fiadds
or
dec
sti
jg
pop
or
stos
aad
pop
test
popa
out
int
xchg
jns
scas
int3
sbb
push
dec
and
lea
and
and
fcoml
cli
fldpi
cmp
adc
inc
aam
dec
push
and
iret
mov
sub
aas
pop
push
add
jecxz
mov
pop
jle
or
pop
iret
sub
add
dec
xchg
mov
mov
mov
jp
bound
cs
pop
cmp
jo
mov
add
daa
cmp
jnp
inc
xchg
idiv
push
or
loope
cmp
or
stos
fdivrp
test
sub
xor
xor
sti
and
jp
inc
pop
push
jns
lahf
xor
inc
mov
mov
adc
jmp
mov
into
out
pop
testl
or
push
cwtl
sbb
scas
aas
addr16
ret
xor
mov
push
mov
sbb
stc
mov
add
and
xchg
ret
ds
stc
stos
mov
lcall
sahf
pushf
lock
add
mov
jmp
clc
xchg
mov
es
mov
xor
jg
push
movl
adc
ss
sbb
add
pusha
jl
aam
jg
fiaddl
mov
sbb
leave
es
add
loop
xor
pop
push
mov
jnp
fs
ficomps
jbe
dec
cwtl
imul
pop
push
into
push
out
sbb
std
cmp
jle
mov
mov
in
call
movsl
cmp
jno
lods
popa
xchg
sub
dec
aas
stos
cld
add
nop
les
adc
pop
pop
push
push
loopne
outsl
sub
fdivl
add
cmp
lods
out
cmc
nop
ja
gs
icebp
std
jno
xlat
es
insl
fistpll
popf
jp
mov
push
lret
lods
adc
mov
sub
lret
inc
aad
cltd
jnp
push
popl
jl
subb
data16
jl
jno
mov
rorb
pop
add
add
add
out
gs
ffree
push
out
xlat
test
cmp
jle
pop
push
int
jne
cltd
out
pop
xor
inc
andb
pop
push
cmp
fcomp
push
mulb
mov
scas
dec
push
sub
xor
push
data16
add
mov
inc
pop
or
ja
mov
imull
pop
mov
xor
cmp
cld
outsb
sub
mov
push
roll
das
loopne
gs
jle
insb
testb
mov
into
or
jo
rcrl
rolb
sbb
cli
fwait
loope
mov
or
mov
shl
aaa
add
rcrb
lds
jb
les
repz
je
fsts
add
adc
push
mov
push
orb
cltd
sub
out
cltd
mov
add
or
inc
fstl
sub
mov
mov
pop
mov
std
mov
lods
sub
fstp
adc
cmp
or
cmp
sub
xor
xor
in
xchg
fbld
out
mov
dec
dec
enter
push
jo
cmp
nop
cmp
xchg
mov
push
add
lcall
std
clc
pop
mov
push
imul
add
pop
loope
and
in
add
mov
mov
stos
jo
dec
or
repz
jo
fptan
lahf
cs
daa
mov
data16
xor
lods
pushf
js
xchg
rolb
mov
mov
out
out
shl
sbb
mov
mov
pushf
int
dec
lcall
popa
mov
xchg
jmp
iret
fsubrp
ja
test
cmpsl
mov
and
push
nop
mov
popf
mov
out
dec
and
and
test
mov
mov
pop
jl
inc
cwtl
loop
push
dec
push
push
xchg
stos
inc
mov
cld
enter
jmp
pop
adc
mov
xor
adc
and
pop
mov
orl
sub
clc
mov
movsl
or
in
mov
jnp
sbb
inc
add
sub
lahf
test
xor
jge
pop
cmp
stos
shrb
xchg
sub
roll
pop
insl
arpl
outsb
call
and
outsl
jge,pn
repz
movsb
push
cmp
or
mov
or
xchg
mov
stos
and
dec
jns
bnd
jno
ret
adc
iret
in
inc
adc
xchg
jae
pusha
xor
loop
dec
movsl
iret
pop
test
xlat
shl
cwtl
sbb
cld
popa
cli
cs
loope
call
hlt
cld
jecxz
dec
push
or
inc
xchg
sbb
mov
adc
xchg
pop
or
pop
movsl
push
lea
inc
out
pushf
cmc
je
cld
dec
stos
or
and
ret
sbb
aaa
imul
dec
mov
jnp
mov
loope
adc
mov
rcrb
and
jae
dec
outsl
shrl
shlb
add
int
push
or
leave
mov
addb
and
jae
pop
fimuls
adc
shlb
mov
jnp
adc
adc
clc
mov
lahf
add
mov
pushf
xlat
inc
ljmp
ds
addr16
out
lds
test
and
imul
pop
in
adc
shrl
fsubrs
fwait
out
shl
or
push
inc
repnz
out
inc
or
int3
dec
cwtl
loopne
xchg
test
mov
int3
lret
push
mov
push
fcompl
leave
pushf
into
add
pop
dec
out
jno
adc
addr16
dec
add
or
jecxz
in
push
dec
mov
dec
in
aaa
testb
cltd
testb
mov
mov
outsb
push
bound
insl
jp
and
inc
popf
lret
cmpsb
fmuls
mov
push
adc
test
in
inc
loopne
sbb
push
les
fisttps
loop
lock
xchg
and
and
or
lods
mov
adc
push
xchg
and
xor
sbb
pop
or
mov
cmpsb
and
and
mov
or
pop
sub
mov
lret
flds
iret
jecxz
mov
test
or
addb
shl
mov
add
xchg
push
xor
cmpsl
dec
or
adc
push
cwtl
jl
pop
scas
cmp
pop
scas
cmpsb
dec
dec
cld
ljmp
push
sub
sar
subl
fld
mov
aad
lock
sbb
jmp
sarb
mov
push
bound
inc
push
sbb
mov
jb
push
ja
cmc
in
push
fwait
inc
clc
and
pop
push
or
mov
mov
or
fimuls
lds
sbb
mov
test
loop
pop
pop
or
adc
in
hlt
jmp
clc
daa
sbb
jp
push
pop
sub
sbb
or
mov
popf
pop
jns
fisubrl
jbe
repz
repnz
fsts
mov
sarl
jg
iret
aam
adc
dec
dec
fwait
addl
ds
mov
and
aam
mulb
aad
shll
decb
jo
inc
add
loopne
mov
insb
mov
dec
iret
out
jb
mov
fisubrl
data16
dec
xor
mov
and
stos
aad
mov
sub
in
ficoml
test
pop
fs
mov
fnstenv
or
scas
cmp
inc
insl
ss
bound
cwtl
push
aam
clc
aad
repnz
xchg
inc
stos
add
in
inc
test
cmp
subl
stos
ret
data16
aas
iret
cmp
int
and
adc
push
mov
adc
repz
xchg
daa
outsl
mov
les
in
jns
push
je
and
push
and
or
xor
mov
iret
lahf
popf
jmp
mov
nop
and
and
into
adc
pop
push
push
xlat
int
jne
roll
inc
dec
dec
fistpl
mov
andl
in
fsubrs
leave
mov
add
test
leave
stos
stc
mov
fildll
mov
pop
xor
out
add
adc
pop
and
or
pop
or
addr16
repnz
into
ffreep
mov
pop
push
pop
shlb
jl
loopw
leave
push
or
or
xor
aam
sub
cltd
leave
sub
test
stc
icebp
loope
pmullw
subb
cltd
fndisi(8087
sub
fwait
das
cmp
fxtract
lock
or
popf
mov
mov
fstl
imull
inc
jmp
jnp
lahf
inc
pop
xor
jp
or
mov
lahf
out
sbb
jle
jns
push
sbb
add
loop
in
mov
inc
int
dec
xchg
les
ja
xor
and
pusha
jl
dec
jmp
sbb
or
jns
fucom
loopne
mov
std
push
test
push
pusha
push
imulb
mov
sbb
loopne
not
incl
sbb
push
stos
xchg
or
jle
xchg
cmpsl
jo
inc
mov
or
ret
lahf
mov
inc
push
xorb
push
xor
add
aas
cs
add
orl
emms
sahf
xchg
stos
fidivl
clc
in
dec
mov
pusha
push
xchg
lcall
fisubrl
push
clc
bound
pushf
aam
lcall
adc
inc
lods
stc
call
inc
fsubs
inc
movsl
push
sub
loop
and
insb
bound
inc
xor
cmc
loopne
jle
mov
cmp
push
ret
adc
jne
rorl
fiadds
pop
push
loopne
dec
aad
fwait
jb
mov
fwait
add
jg
or
aaa
call
ret
mov
lahf
or
fistpll
cmp
push
mov
iret
push
insb
fmuls
or
sbb
shr
or
aas
jmp
dec
gs
shlb
aas
nop
inc
and
pushf
dec
sbb
arpl
push
mov
repz
push
cmc
adc
lret
xor
int3
lret
dec
sbb
iret
cmp
cltd
lcall
pop
test
dec
jb
clc
inc
lahf
sbb
xchg
stc
int3
xchg
lds
adc
xor
sub
mov
cmc
ror
in
sti
mov
ljmp
jne
sahf
and
in
mov
pop
nop
out
and
mov
push
sti
and
and
iret
ret
xor
push
imul
popa
scas
jge
inc
scas
mov
xchg
jne,pn
pop
in
leave
imul
xor
imul
int3
xchg
mov
push
fiadds
pop
lods
or
mov
adc
inc
ljmp
cli
jle
sbb
out
xor
xchg
xor
or
pop
dec
repnz
mov
sbb
aaa
adc
pop
mov
mov
xor
xchg
cmc
mov
and
mov
inc
sarl
mov
inc
pop
pop
and
js
xor
pop
push
add
dec
in
mov
mov
stos
jns
lret
mov
stos
aad
jmp
push
jb
leave
mov
and
xor
jle
adc
xchg
divb
push
jno
mov
mov
cmp
add
into
xchg
aaa
mov
int3
iret
fsubrs
mov
xlat
enter
insl
lds
icebp
jo
insb
in
cmp
cmp
mov
fildll
sbb
push
cli
ss
inc
xchg
loop
mov
mov
mov
push
pusha
lods
sbb
popa
fiaddl
aas
push
push
adc
xor
fmuls
inc
pop
test
pop
xor
push
in
aas
pop
pushf
jb
imul
pop
sbbb
pop
movhps
cmp
adc
mov
addr16
inc
jge
fs
das
ret
scas
mov
iret
insl
add
mov
movsl
dec
mov
sub
xor
leave
cmc
mov
push
mov
dec
imul
in
jl
daa
or
xor
int3
out
mov
or
pusha
jl
jne
xchg
pop
aaa
sub
sti
jno
arpl
mov
adc
sub
inc
or
fidivrl
scas
and
shll
jbe
out
cmp
stos
loopne
je
sbb
in
and
push
cmp
push
je
mov
inc
rolb
in
and
lret
fsts
int
pop
shll
mov
adcl
jne
sahf
xchg
test
add
xchg
push
or
lcall
add
xchg
clc
sub
xor
add
xchg
xor
cmpsb
out
adc
cmc
popa
fsubrs
insb
popw
xor
pop
mov
fadd
or
int3
test
popf
xor
cmp
leave
fs
mov
test
pop
mov
jb
inc
scas
ds
imul
or
xchg
jns
cmp
jne
pop
cltd
fldl
lds
sahf
popa
add
movl
out
push
mov
out
adc
adc
pop
icebp
mov
repnz
ss
addr16
scas
popf
pop
and
stc
outsb
jne
sub
jno
cmp
pop
leave
pop
in
jno
push
dec
lods
inc
ja
aad
out
ret
or
notb
mov
sbb
adc
cmpsl
push
scas
into
ror
outsl
int
rorb
inc
mov
pop
shrl
sub
loopne
aad
daa
jb
sarl
mov
jnp
data16
jl
cmp
daa
inc
push
xor
fcoml
enter
nop
or
jno
jne
and
or
fstpl
adc
adc
push
in
mov
jle
loopne
and
pop
push
mov
test
shlb
cltd
adc
add
cmp
imul
cmpsb
sbb
push
add
cli
shrb
sub
bound
stos
sub
mov
cmpl
mov
mov
fstpt
icebp
mov
ret
sub
shr
lods
rclb
lret
test
mov
jge
int
movsl
cmpsl
cmpsb
dec
imul
scas
scas
test
lock
pop
add
cmp
arpl
stos
adc
push
sbb
pop
jne
jle
pop
cld
subl
arpl
mov
ret
sub
mov
jg
jno
fisubrs
out
addr16
xor
movsl
dec
jge
cmp
xor
push
lret
sub
sub
push
outsb
daa
jge
lret
mov
jl,pn
jns
cmp
subl
mov
jecxz
shrb
mov
pop
cmp
xchg
in
lret
ss
mov
hlt
insl
push
sub
shll
jmp
or
mov
fisubrs
in
mov
adc
sub
pop
xchg
lahf
mov
pop
sarb
clc
wbinvd
enter
pop
jge
cwtl
ja
outsl
sub
leave
mov
cmpsl
test
repz
jne
inc
insb
inc
push
cmp
pop
add
orl
push
sbb
out
sbb
mov
or
imul
popl
jge
jae
fimuls
mov
push
lcall
aad
pushl
out
stos
jmp
jo
outsb
sahf
sub
sbb
ljmp
fdivl
lret
jns
jo
mov
lock
pop
sarl
jb
lea
xor
push
ret
dec
mov
ds
or
inc
cmp
stc
cwtl
iret
adc
sub
push
in
andb
xor
sub
xchg
int3
shl
or
ffreep
xor
jle
inc
pop
push
jg
in
pusha
pop
sti
cmp
mov
lock
fcmovnbe
in
shll
dec
es
jmp
clc
and
adc
insl
in
mov
testb
test
cli
testl
cwtl
push
jl
pop
pop
shl
repnz
push
scas
add
mov
add
shr
ja
divl
add
lahf
mov
dec
leave
fisubl
data16
mov
stos
inc
inc
mov
in
add
push
cmp
and
xchg
icebp
jb
ret
push
xchg
xchg
loopne
iret
cmc
aam
int
cmp
fxam
mov
aam
push
sahf
adc
dec
mov
xor
cmp
adc
add
and
xorb
adc
cmp
dec
jmp
fs
scas
mov
icebp
lock
clc
out
rcl
adc
addr16
mov
mov
inc
sbb
sbbb
repnz
or
push
dec
adc
in
add
sbb
test
pop
das
call
sub
xlat
ret
cmp
movsb
dec
popa
dec
lods
inc
das
arpl
mov
sub
enter
adc
push
and
mov
sub
pop
jp
aas
aad
mov
sub
or
dec
or
rcrl
in
and
push
jns
in
aam
loope
or
insb
xchg
out
lea
test
inc
sub
sub
fmul
bound
sbb
pusha
sbb
jmp
xchg
scas
xchg
sbbl
push
shrl
jmp
nop
sub
lock
mov
imulb
mov
call
mov
mov
je
adc
pop
dec
xlat
addr16
into
addr16
xor
in
mov
push
lock
push
daa
and
lahf
leave
push
faddl
sub
outsb
pushf
jp
icebp
daa
nop
outsb
mov
adcb
push
in
mov
mov
mov
mov
push
popf
adc
pop
sti
imul
aam
ljmp
jg
adcl
jmp
sbb
mov
test
xchg
add
jp
imul
lret
in
xchg
sbb
stos
hlt
jno
or
add
ror
sbb
jae
sub
aam
sub
xchg
inc
jle
dec
jae
aad
fs
jne
mov
xchg
notl
cltd
call
push
mov
cli
mov
push
xchg
and
popa
in
rorl
cmp
lret
mov
sub
rcrb
fisubrl
jno
int3
mov
imul
aas
and
inc
les
stc
mov
int3
ds
sub
clc
sub
cmp
std
mov
fs
mulb
ds
in
lea
aas
cld
pop
mov
test
clc
je
jmp
sub
pop
add
sub
fnstcw
jle
mov
out
sti
in
out
shlb
or
fmulp
mov
test
mov
xor
dec
push
add
adc
xchg
dec
shrl
sub
lret
cmp
sub
jb
add
enter
inc
addr16
mov
cmp
inc
movb
adc
mov
xor
ret
repnz
sub
mov
mov
idiv
and
cld
andb
jae
pop
add
dec
inc
adc
dec
fmull
push
cmp
xchg
orl
pop
ds
push
inc
adc
sub
stc
lea
dec
call
push
pop
aaa
leave
xor
or
insb
dec
insb
sub
shl
addr16
lock
mov
dec
aaa
inc
xchg
int3
rcr
mov
sbb
adc
test
aam
jne
push
push
rcll
imul
sbb
and
cli
sub
jno
mov
lods
cwtl
cmp
xorb
cmc
xchg
iret
cmp
jo
lea
test
ljmp
cmp
jnp
push
cmp
out
lds
push
push
add
push
pop
popa
loope
bound
sbb
std
int
enter
mov
dec
aad
out
icebp
imul
cmpsb
sbb
rolb
mov
xchg
jle
xchg
ret
mov
add
mov
sbbl
fwait
add
mov
pushf
movsl
xchg
sbb
cs
push
sub
mov
add
les
jno
ds
add
dec
add
push
shlb
into
mov
int3
cmc
cld
push
or
or
rcll
sbb
or
mov
mov
and
pop
xchg
and
pop
lcall
mov
xchg
mov
lea
push
aad
repnz
rcrl
es
fsub
xor
push
cmp
les
cmp
sarl
loop
or
push
into
call
mov
dec
fcompl
stc
xor
mov
jp
hlt
stos
xor
mov
sub
xchg
cmp
test
mov
lret
push
and
cmc
andl
dec
jo
xor
add
fnstsw
popa
sub
pop
shrl
cltd
or
mov
testl
mov
ljmp
test
ljmp
and
or
lds
ds
pop
lret
jmp
jl
lcall
dec
cmp
loope
push
aas
idivb
add
das
into
scas
decb
add
pop
cmp
mov
lcall
pop
push
adc
jnp
adc
nop
pop
cmp
adc
ret
scas
cs
jae
mov
sbb
pushf
xchg
pop
mov
inc
fcoml
xor
mov
cld
jg
and
or
push
jae
dec
dec
cld
jge
imull
scas
aas
pop
ret
pop
stos
out
add
mov
vmread
es
adc
fmul
sub
mov
enter
lods
faddp
data16
mov
xchg
mov
or
js
adcb
mov
pop
bound
cs
dec
out
fsubp
mov
cwtl
fildll
push
mov
lcall
mov
mov
int3
push
pop
mov
push
ret
cwtl
mull
movsl
xchg
pop
ss
jnp
push
dec
insb
dec
roll
mov
sbb
imul
lret
xchg
call
jbe
out
loope
jl
pop
ret
mov
xor
rcll
jae
inc
xlat
and
popa
sbb
fidivs
jg
ret
dec
mull
das
es
push
fdivrl
repnz
ljmp
int3
das
pop
idivl
dec
ja
pop
ja
jmp
insl
sbb
adc
dec
jg
adc
xor
dec
fisttpl
adc
fwait
push
clc
sbb
shr
pop
popf
pop
mov
test
sub
stc
stos
dec
or
das
mov
fs
jno
mov
popf
inc
mov
dec
gs
imul
lret
icebp
fistpl
add
jecxz
or
inc
push
xor
mov
sub
adc
cmc
xor
or
dec
xor
push
jge
push
ljmp
aaa
decb
or
sbb
add
or
cltd
ret
in
test
out
push
imull
rcl
rolb
jecxz
sub
adc
sub
xchg
lods
mov
arpl
pop
mov
xchg
ss
insb
mov
mov
and
jmp
fisubrs
mov
mov
sub
lret
sbb
adc
xchg
cmpsl
or
cld
add
ljmp
rorl
xor
ja
add
mov
xchg
pop
and
andl
add
movsb
pusha
sete
sub
repnz
mov
dec
cli
and
hlt
mov
pop
mov
xor
loope
aad
out
push
test
xor
or
shr
pop
clc
loop
cmp
shlb
clc
jno
scas
out
les
pop
add
shll
xchg
pop
sbb
mov
dec
fists
jns
pop
inc
mov
adc
cmp
cmpl
xor
cmp
push
jp
fisttpl
mov
mov
cli
lods
push
jmp
cmp
hlt
mov
dec
add
pop
sahf
push
shrb
adc
lea
cmp
xorl
sbb
inc
pop
outsb
cmpsl
mov
xchg
or
daa
mov
add
scas
mov
push
in
bound
xchg
jge
popa
into
outsb
aam
dec
movsl
mov
aaa
sbb
shl
arpl
daa
outsb
mov
mov
cmc
fxch
js
pop
xchg
dec
xchg
dec
push
cltd
push
and
inc
jle
cmp
lock
and
xor
cld
scas
lea
mov
filds
adc
jo
and
test
xchg
push
inc
xor
xchg
and
out
jno
push
inc
in
push
lock
rcrb
gs
jp
lret
iret
jmp
shll
mov
cli
ret
adc
sbb
addr16
aas
pop
mov
pop
aaa
mov
or
iret
jbe
adc
ret
push
sub
adc
pop
inc
add
fmuls
dec
gs
cmpsb
and
xorl
adc
repnz
push
cmp
add
mov
jmp
jae
inc
dec
and
xchg
cmpsb
fmul
sbbb
or
push
in
dec
ficoml
lcall
jnp
cmp
jae
xor
maxps
pop
mov
sbb
mov
addr16
add
xchg
xchg
xor
mov
lds
lds
in
inc
mov
xor
outsb
xor
scas
ror
in
out
sbb
or
mov
fidivrs
adcb
sarb
cmp
aas
add
cmp
scas
shll
xchg
sahf
int
lret
jp
add
mov
jmp
xchg
bound
mov
add
mov
dec
scas
insb
inc
mov
flds
popf
cmpsb
mov
out
add
pop
mov
popf
add
imulb
push
push
adc
inc
loope
hlt
in
dec
jae
js
es
lock
lods
mov
or
push
jb
xorl
jecxz
sbbl
sub
or
aad
cmpsl
insb
pop
add
lret
push
jne
fwait
mulb
pop
test
lds
pop
cli
jo
fidivrs
sti
lods
int3
inc
lret
loope
stos
test
cs
mov
add
xor
xor
jle
pop
mov
outsl
xchg
mov
clc
adc
xor
inc
push
jle
push
rorl
sub
ljmp
rcll
sbb
push
and
pop
dec
push
jne
or
sbb
out
add
inc
xor
inc
icebp
mov
mov
xchg
sub
and
xor
inc
mov
ret
sbb
pop
icebp
fstpl
dec
push
inc
xlat
pop
je
mov
push
outsl
shr
sti
mov
push
xorb
jbe
jb
mov
push
add
cmp
cmp
and
sbb
sub
cltd
sti
inc
lds
push
les
imul
dec
push
cmc
outsb
mov
mov
enter
push
inc
pop
stc
js
clc
xor
sub
jmp
shlb
loopne
mov
xchg
xchg
pop
pop
popf
lret
add
in
repnz
xchg
or
cli
push
daa
arpl
push
xor
incl
push
sbb
xor
insb
adc
repnz
test
enter
cltd
jae
hlt
pop
fsts
jne
ret
out
xchg
pop
not
push
sub
jge
jle
test
and
push
dec
push
insl
pop
jno
lods
ret
dec
add
fidivs
sti
aaa
mov
iret
mov
fs
push
xchg
lcall
jmp
ljmp
es
cmp
mov
popf
push
dec
add
mov
xchg
test
add
push
mov
cmp
mov
aam
pop
scas
lret
add
jl
test
aas
sbb
outsl
clc
push
push
xchg
rcl
dec
cmp
pop
popf
hlt
lods
jl
pusha
jmp
mov
lock
sbb
sbb
arpl
jb
push
ret
sub
dec
ficoms
subb
xor
cmp
lcall
sahf
test
and
out
cmp
xor
jnp
cmp
ss
hlt
push
lea
jp
cmp
mov
adc
movb
js
or
jmp
arpl
push
ss
inc
test
shlb
lea
sbb
mov
pop
insl
mov
fldl
xor
xor
adc
adc
add
xor
cli
das
or
pop
cmp
xlat
adc
repnz
pop
mov
xchg
out
sbb
repz
lcall
inc
sub
push
jbe
scas
in
xchg
mov
xchg
sbb
out
jb
pop
pop
bound
dec
icebp
mov
cmpsb
repnz
pushf
xchg
nop
in
daa
and
movsl
mov
cwtl
pop
test
icebp
sbb
rcr
int3
mov
jp
jg
addr16
mov
lea
pusha
subl
mov
inc
inc
ret
mov
inc
cmc
fsubrl
inc
adc
shrb
xor
adc
push
icebp
sahf
andl
loop
cmpsl
loop
test
sub
sub
pusha
or
mov
mov
mov
insb
lret
jle
insb
loopne
push
cmpsl
cmp
aas
push
mov
jae
sub
mov
int3
pop
rorb
pusha
and
insl
sub
pop
mov
and
and
enter
xlat
addb
js
jb
test
xchg
int
pop
pop
inc
dec
lods
in
std
aad
popl
jp
insl
push
outsl
iret
jmp
call
imul
lahf
xorl
inc
cmpsb
sbb
int3
pop
dec
ret
xchg
stos
dec
sub
outsb
or
inc
dec
js
or
pop
test
and
push
mov
outsl
cmp
xor
add
sub
hlt
sbb
xchg
xchg
adc
inc
std
dec
ss
cs
imul
xor
inc
movsl
pavgb
push
mov
jmp
in
cld
es
sbb
adc
repnz
inc
das
loopne
cli
pop
mov
call
rcrl
divl
push
xchg
in
jge
lds
cmp
inc
stc
add
jmp
adc
inc
jns
adc
push
mov
in
mov
dec
movsl
xchg
and
adc
pop
mov
xchg
enter
push
arpl
and
fisttpl
pushf
and
mov
sub
push
clc
sahf
ret
clc
in
loopne
push
mov
dec
jb
xlat
repnz
scas
and
call
sbb
xchg
clc
push
dec
lret
pop
mov
jecxz
and
lea
mov
movsl
mov
andl
mov
popa
jge
fbstp
iret
fbstp
shll
and
out
rolb
pop
xchg
jmp
mov
push
sbb
sbb
mov
push
cmpsb
ss
jnp
add
imul
jge
in
adc
jp
mov
loop
cmp
add
les
push
adc
rol
jno
divb
lea
pop
orl
aam
adc
pop
xchg
ret
fidivrs
out
mov
in
outsb
xchg
dec
jmp
iret
pop
gs
ret
stos
add
movl
adc
adc
sbb
xor
cltd
push
and
dec
or
push
outsb
jge
xchg
cmpsl
call
iret
xor
ljmp
sub
mov
std
repz
fisttps
dec
push
inc
das
out
jo
mov
xchg
pushf
clc
test
inc
jb
fbstp
or
daa
call
jmp
roll
xchg
add
stos
mov
push
jno
mov
dec
popf
sbb
es
add
adc
sub
or
int
aaa
repnz
ror
sti
nop
test
pop
lods
mov
fstp
sub
adc
pop
xchg
stos
sbb
mov
and
out
lds
push
fmuls
and
adc
pop
pop
cmp
scas
mov
push
lock
add
rorl
pop
pop
cwtl
jb
stos
jnp
jmp
movsb
add
roll
and
cmp
xchg
pop
das
jge
in
daa
xor
xchg
nop
sub
push
cmpsl
shlb
scas
mov
push
xchg
xor
sub
cld
adc
mov
je
pop
fwait
jbe
sub
fnstenv
lret
add
popa
xor
das
cmp
mov
dec
cwtl
nop
sub
or
push
push
sbb
lods
in
ljmp
arpl
xchg
adc
cmpsb
mov
aas
sub
xor
xor
and
cmp
mov
xor
notl
mov
xor
scas
or
xchg
push
or
jbe
test
rcrb
fistpll
int
mov
in
xlat
lcall
cmp
fimull
xchg
fwait
es
lock
add
adcl
push
loop
fcomps
shll
adc
inc
cltd
enter
sar
aad
jno
pcmpgtw
test
inc
stos
add
cld
loopne
push
sub
push
lods
jmp
xchg
enter
fidivl
jmp
mov
jnp
popf
pmaxub
mov
inc
add
inc
dec
add
mov
cmpsb
aaa
adc
into
ss
push
jo
fsubl
lahf
fwait
sbb
push
mov
sub
cwtl
adc
inc
dec
pop
fidivl
cli
pop
in
push
das
add
daa
mov
or
add
fcomi
gs
cmp
inc
pop
add
jb
add
push
gs
test
mov
lret
push
jne
aad
mov
mov
add
xchg
mov
test
repz
aas
dec
pop
outsb
push
push
out
sub
or
push
rorl
js,pn
outsb
mov
pop
idivl
repnz
inc
xchg
loope
clc
shll
in
or
mul
fwait
pop
pop
sub
loop
fwait
xchg
inc
xor
test
lods
aas
leave
jne
fs
fldl
lds
jle
and
add
js
or
mov
sub
stos
outsl
sbb
bound
shr
or
iret
sub
xor
pop
pop
das
loop
addr16
push
and
adc
xorb
dec
jl
xchg
mov
ds
mov
pop
imul
leave
mov
pushf
jle
scas
and
xlat
add
push
cltd
mov
imul
ss
add
idivb
popf
fs
add
push
mov
movsl
xchg
sub
and
dec
std
fiadds
xchg
clc
sbb
in
imul
mov
adc
leave
aam
mov
aas
jb
mov
sahf
leave
es
jnp
sbb
iret
aad
and
imull
std
add
pop
in
sub
hlt
mov
sub
adc
orl
mov
add
adc
add
in
lock
cmp
pusha
push
fldpi
rep
inc
mov
add
mov
jne
insb
push
cmp
imull
sub
dec
xor
aaa
stc
jmp
sahf
fstps
jb
cmp
jns
out
loope
ret
jb
push
hlt
insl
sbb
xchg
daa
arpl
push
lahf
bound
xchg
stos
ljmp
pop
popf
repnz
push
fwait
add
jns
jecxz
inc
add
fwait
scas
xor
inc
jnp
lock
mov
mov
jmp
or
pop
stos
daa
and
sti
and
std
xor
fcoms
lcall
popf
mov
rcrb
das
sahf
push
xchg
test
xchg
xchg
in
and
cmp
mov
push
mov
sbb
outsl
aaa
shr
adc
mov
mov
pop
out
or
jecxz
rcrb
lds
ret
sub
inc
push
or
push
nop
or
mov
mov
or
in
xchg
jbe
std
xchg
in
pushf
out
test
xchg
add
inc
movsb
push
inc
stc
hlt
into
inc
sarb
mov
stos
push
stos
pop
sub
cmp
mov
in
mov
and
mov
jo
mov
and
push
andb
push
leave
mov
xchg
inc
outsb
mov
push
fdivrs
add
test
jl
mov
or
lock
scas
js
mov
mov
push
mov
lock
lods
pop
push
and
inc
lahf
pop
cmp
and
xchg
or
xor
inc
cwtl
movsl
and
inc
ret
push
popf
push
push
and
inc
test
flds
mov
lds
and
mov
fistps
xchg
test
test
dec
cs
inc
xor
or
into
call
aas
jns
dec
sub
inc
dec
and
and
xchg
xchg
mov
jl
mov
mov
sbb
testl
mov
pop
mov
fisubrl
addr16
cmpsl
std
cmpsl
pop
lock
add
pop
mov
xchg
negl
and
jbe
test
int
in
jb
push
mov
cmp
sub
dec
add
push
adc
mov
pop
jg
or
mov
scas
inc
insl
lret
add
push
jp
out
xchg
lock
sub
xchg
shlb
pop
imulb
dec
adc
xor
adc
or
xchg
xchg
ja
mov
aas
mov
out
push
cld
xor
push
adc
pop
xor
fsubp
dec
lock
sub
pop
jno
adc
push
jecxz
popa
inc
rorl
dec
cmc
sub
cmc
sbb
in
jns
fucomi
dec
mov
cs
jns
js
xor
xchg
xor
cs
mov
sbb
gs
testl
lea
push
movsb
pop
mov
mov
sub
pop
pusha
xor
pop
rclb
push
int3
adc
in
lcall
out
je
jmp
jecxz
ja
mov
es
mov
nop
or
call
lock
adc
mov
adc
pop
and
sbb
mov
movsl
cmp
mov
pop
or
inc
int
jo
cli
xchg
cs
sahf
sub
shlb
in
and
rcrl
inc
mov
jno
mov
inc
sbb
loopne
adc
stc
jae
xchg
inc
notb
inc
inc
insb
shl
test
and
daa
xor
sarb
pop
pop
out
mov
popa
lret
sub
cmpl
and
cmpsl
push
mov
test
push
ficoml
popf
push
out
enter
add
int3
sub
in
mov
inc
inc
adc
sbbb
and
cmc
incl
test
or
and
gs
xor
mov
lret
pop
jnp
xchg
mov
ds
leave
into
ja
ds
enter
test
xor
mov
xchg
sbb
nop
xchg
lods
and
jne
int
fidivrl
rcrb
in
and
push
inc
or
fistpll
inc
fists
jmp
sti
add
arpl
jns
inc
or
xor
push
xchg
imul
jne
bound
adc
add
das
lret
mov
out
fstl
cmp
shrb
movsb
xchg
test
push
clc
popa
mov
fidivrl
mov
lret
std
inc
mov
xor
mov
mov
adc
lcall
mov
popf
fs
mov
add
add
test
pop
out
lock
mov
dec
fcmovnb
int3
fbstp
imul
hlt
push
fdivrl
imul
jnp
repnz
fisubl
sbb
lret
je
xchg
pop
shrb
inc
mov
mov
test
or
adc
loop
jo
fs
cs
xorl
lock
ffreep
icebp
in
stos
mov
dec
faddl
daa
push
add
ret
dec
xor
pcmpgtw
pushf
push
icebp
add
push
xchg
jae
insl
lds
inc
movsb
jl
xchg
jl
les
dec
and
ret
cmp
cmp
aam
popf
mov
xor
stc
sahf
pop
push
or
int
add
aam
cmp
faddl
jmp
iret
fisubrs
sar
and
cmpsb
mov
xor
stos
push
adc
push
in
mov
push
cmpsb
mov
inc
sub
xchg
filds
fsubrl
orb
sub
jbe
cmp
mov
data16
iret
mov
rcrb
jle
test
xor
dec
dec
incb
in
scas
test
and
jle
dec
cmp
jl
aaa
dec
push
std
xchg
sti
mov
fdivrp
adc
je
rcll
mov
je
inc
insb
outsb
aas
aad
xlat
lock
icebp
cli
and
sub
mov
xor
ljmp
stos
jmp
or
cmpb
xchg
rorl
xor
or
iret
xor
pop
pop
insb
xchg
jbe
out
xchg
push
shlb
add
dec
das
or
stos
jo
cmp
push
pop
cmc
ficoms
add
cmp
pop
jns
fbld
into
xchg
dec
push
push
sarb
out
repnz
jo
push
aas
xor
out
shrb
dec
mov
xorl
inc
leave
mov
cmp
pop
cmp
and
inc
lahf
iret
or
sub
shll
or
mov
or
hlt
out
adc
bound
lret
dec
test
mov
mov
daa
out
ret
xlat
daa
sti
out
or
and
pop
in
dec
xlat
sbb
mov
add
std
xor
sub
sbb
xor
pop
incb
mov
or
ss
mov
sub
jl
jne
inc
jl
adc
fld
mov
pop
mov
in
mov
dec
test
aam
enter
loope
pop
jo
stc
push
fisubrs
lds
je
stos
mov
sub
sbb
mov
sbb
jnp
sti
jecxz
dec
sub
pop
push
and
int3
sbb
mov
mov
lock
aam
js
cmpsb
xor
push
dec
imul
push
dec
lret
sub
mov
cwtl
push
enter
aam
inc
mov
mov
je
in
sub
jns
std
jno
in
enter
jmp
inc
xor
cs
cmp
push
or
scas
pop
scas
enter
jbe
pop
in
std
hlt
test
sub
dec
adc
and
iret
dec
cmp
es
xchg
xchg
push
jnp
loope
or
gs
mov
push
mov
inc
das
add
test
dec
shrb
in
mov
aas
sub
leave
cmp
add
shlb
out
in
jmp
mov
in
ljmp
sub
xor
dec
jne
add
lock
cmp
pop
and
pop
stos
mov
jbe
dec
inc
xchg
and
cli
fwait
inc
stc
pop
xchg
outsl
fstp
inc
mov
cmp
mov
adc
xchg
mov
dec
mov
push
pop
jmp
push
into
rorb
cs
lret
push
add
jns
adc
cmpsb
shlb
les
inc
mov
or
test
je
lods
adc
or
pop
adc
sbb
icebp
mov
mov
push
dec
fidivl
xchg
cmp
jo
cld
jnp
adc
decl
hlt
cli
ja
xchg
lds
push
pop
faddl
mov
lcall
mov
pop
cmpsl
fucomp
bound
cmpsl
xchg
enter
xchg
dec
hlt
lods
or
fiaddl
ret
xor
lds
lods
pop
gs
jge
subl
push
mov
imul
jp
mov
mov
cmp
mov
pop
pop
test
outsb
les
scas
fwait
femms
rol
ret
stc
faddl
xlat
out
into
adc
lret
addr16
push
sub
call
test
xlat
fwait
je
push
in
ret
sub
add
fwait
mov
cmp
push
sbb
jg
inc
shll
add
jo
sub
cmp
les
test
js
jno
jo
ja
ds
nop
pop
fidivs
fstpt
mov
in
mov
inc
fwait
or
call
and
xor
mov
dec
xor
dec
push
shl
andb
ficomps
and
mov
in
stc
xchg
push
sbb
es
sbb
sbb
xchg
mov
xchg
adc
cmp
lcall
sbb
jl
sbb
test
xabort
cmc
inc
mov
cs
sti
adc
bnd
jecxz
lock
sbb
in
and
sub
pop
lods
pop
jne
adc
pop
and
sarl
inc
xchg
adc
xchg
inc
dec
push
ss
mov
fisubs
inc
lret
mov
push
or
push
fwait
inc
ret
iret
xor
sbb
insl
aas
fldl
mov
sti
or
je
inc
mov
sahf
xchg
xchg
iret
push
xor
test
int3
pop
lret
adc
xchg
xchg
cmp
jg
insb
sub
jno
dec
out
cmp
out
test
rclb
and
loopne
addb
out
or
mov
shlb
or
xor
pop
stos
mov
jmp
add
sti
lret
sbb
inc
lods
test
aam
adcl
push
jmp
and
xor
pop
jb
leave
sub
mov
jno
and
aas
lds
push
out
or
mov
aas
das
into
test
xor
sub
dec
clc
das
mov
std
mul
push
mov
rorb
jne
daa
sbb
mov
pop
rcll
jp
add
fwait
dec
sbb
and
testb
push
lea
in
imul
mov
cmpsl
fpatan
xor
fs
sub
mov
leave
addb
fisttpll
out
adc
in
sbb
mov
ljmp
cltd
jle
fs
fstpl
stos
xor
fsubrs
pop
int3
mov
adc
in
cmp
xchg
aas
data16
inc
jge
idiv
arpl
into
mov
dec
jb
lret
xchg
cmp
lock
jp
sbb
loopne
mov
mov
push
inc
adc
in
or
dec
and
fcmovbe
dec
mov
push
mov
xchg
adc
rcll
sbb
aaa
es
cmpsb
sbb
sbb
sahf
sbb
ret
data16
sub
cmp
pop
push
mov
inc
push
adc
sti
dec
push
push
aad
pop
mov
lds
inc
outsb
aad
dec
push
or
sub
and
xor
xor
push
dec
jno
ljmp
xchg
inc
and
sti
test
sbb
sub
jle
outsl
xchg
into
aas
in
add
mov
test
mov
xor
js
and
mov
xlat
push
mov
test
int3
mov
gs
or
out
fdivl
lock
cmp
lds
jmp
pop
sti
sbb
fistpl
inc
sub
mov
aas
pop
sbb
lods
scas
rcr
mov
add
or
cmp
pop
daa
and
xor
testb
jns
jns
xor
cs
testl
jg
inc
subb
mov
in
ffreep
and
fwait
lea
cmp
pop
cmp
lcall
daa
mov
mov
js
pop
clc
aaa
lea
pop
fiaddl
fwait
pop
push
jno
rep
push
enter
sbb
inc
push
smsw
pop
stos
popf
sbb
push
rcll
jge
sti
lret
adc
sbbb
lods
js
ret
jne
fs
lret
sbb
or
add
pop
sbbl
iret
cld
imul
cmp
test
out
int3
cmp
mov
mov
adc
mov
lock
push
rorb
mov
xlat
je
jo
sbb
push
inc
outsb
mov
enter
shrb
add
cmp
add
ror
mov
popf
xor
mov
rol
jp
lds
test
addr16
inc
fucomp
pop
adc
sub
mov
push
mov
pop
xchg
aad
xorl
std
stc
mov
dec
adc
sbb
cmp
jne
push
sbb
mov
and
aaa
mov
or
repnz
mov
clc
fisubrs
xor
dec
test
inc
push
pop
movsl
rcll
sbb
mov
mov
pop
loope
rclb
add
repnz
mov
inc
dec
mov
adc
mov
cltd
das
adc
or
andl
lahf
loop
sti
andl
push
dec
lods
xchg
inc
ljmp
outsb
std
mov
aaa
and
mov
test
pmaxsw
test
mov
lret
idivb
enter
int3
mov
inc
daa
cmpsb
shl
loopne
dec
sub
fildll
repnz
out
test
push
jmp
xor
jae
int3
push
or
xchg
jnp
jl
sarb
mov
outsl
xchg
rcrl
dec
fdivrs
ds
pusha
and
pop
adc
inc
lods
cltd
stos
sti
xor
sub
lods
fisubs
test
dec
and
pop
repnz
sbb
jg
lods
lahf
rcll
outsl
sarl
inc
or
dec
add
call
add
mov
mov
scas
xchg
sub
jle
dec
mov
es
xor
jo
and
mov
aad
mov
jl
lcall
add
int
mov
cmp
cld
test
ja
gs
out
inc
gs
adcb
cmc
adc
idivb
subb
scas
out
xchg
xchg
pop
mov
cmp
mov
jne
jne
inc
std
sub
inc
pop
lahf
test
push
dec
jno
jnp
fwait
nop
mov
icebp
lcall
push
sub
scas
stos
loope
jb
in
mov
test
scas
stc
dec
sub
ret
xor
push
xchg
push
les
cs
lcall
dec
movb
inc
push
jo
addl
repz
test
fistps
and
insb
xor
mov
jbe
sbb
dec
xor
xchg
dec
test
test
jbe
add
mov
xor
pop
or
adc
lcall
mov
push
imul
push
mov
fcompl
mov
shll
and
dec
aaa
add
lcall
test
clc
mov
mov
add
jne
iret
push
xchg
fsub
test
fsubl
mov
fdivl
add
sbb
rol
mov
leave
lret
gs
pop
and
push
call
nop
xchg
iret
int
loop
in
fcmovb
sarl
or
hlt
xchg
cmp
pop
mov
xchg
xchg
xlat
dec
mov
shrl
movsl
stc
mov
scas
addr16
and
clc
call
sub
mov
mov
hlt
in
inc
loop
cli
aas
jns
movsb
push
dec
jg
sbb
jne
call
clc
adcl
sbbl
xor
fstp
pop
jp
addr16
and
and
jb
sbb
push
out
mov
in
outsb
sub
jns
mov
push
mov
xor
mov
andl
icebp
push
xlat
test
les
cmp
ja
jo
add
xor
test
lock
xchg
jecxz
imul
insb
aas
pop
in
cltd
sbb
aaa
das
xchg
repz
movsb
push
inc
xor
cmp
cwtl
inc
mov
mov
cltd
lds
pop
add
loope
mov
inc
fsts
imul
adc
xor
jge
jbe
roll
pop
lahf
ss
inc
sar
jbe
dec
dec
sbb
gs
xor
fcomi
sahf
pusha
call
mov
mov
imul
or
test
fistps
sub
repnz
mov
stc
stos
lock
mov
sbb
ss
push
repnz
ljmp
fsubp
sbb
or
sub
push
xorl
adc
hlt
fdivrs
jmp
and
push
xchg
hlt
mov
cmp
xor
jne
sub
cmp
add
cmp
test
xlat
mov
xor
test
out
loopne
cmc
push
fstpt
jno
or
mov
flds
inc
pop
pop
and
push
lea
and
out
push
or
test
dec
pop
js
mov
pop
push
sbb
nop
in
mov
jl
jg
adc
add
cmp
xlat
clc
lret
mov
aaa
lds
shll
fs
loop
fmuls
sub
xor
in
loope
cmpsb
add
icebp
test
xchg
pusha
fcmove
jg
adc
push
adc
mov
ret
and
cmp
adc
decl
push
cmpsl
repz
sub
pushf
and
push
jp
outsb
push
dec
dec
jle
and
in
xor
add
add
icebp
push
push
lea
add
cmp
adc
cmpsb
and
xchg
ds
lea
movsl
mov
stos
mov
cmpsl
pop
test
cmp
lea
loope
sti
test
es
push
in
sbb
outsb
adc
ret
js
xchg
pop
jns
mov
pop
popa
jmp
pop
andb
je
das
mov
test
push
push
jns
repz
clc
lahf
and
sbb
xlat
repz
test
ret
pop
arpl
mov
jl
jnp
adc
outsb
mov
negl
sub
mov
enter
ret
cld
xor
je
sarl
aas
xchg
outsl
mov
dec
notb
mov
les
pop
pop
jp
xor
cli
xchg
push
mov
popf
imul
out
insl
jnp
fadds
popa
push
xchg
adc
jnp
je
ljmp
mov
mov
mov
xchg
aam
fstpt
jns
je
xor
dec
adc
add
clc
jbe
mov
add
jl
pop
pop
outsb
bound
xchg
icebp
cmp
es
cmp
in
mov
push
sbb
lret
adc
or
fxch
insb
movsb
mov
icebp
sbb
les
icebp
outsl
and
je
or
fsubrp
adc
cmc
push
push
lret
test
cmp
and
insb
jno
lods
inc
dec
iret
loop
mov
test
mov
push
sbb
imul
call
loop
aaa
sbb
adc
mov
or
cmc
pop
or
cltd
mov
jecxz
shll
aas
and
clc
cmp
pop
movsb
aas
mov
fnstcw
or
add
sbb
and
aaa
arpl
mov
fdivl
leave
mov
sbb
addr16
mov
inc
inc
mov
lea
cltd
imul
int3
mov
sti
adc
insl
inc
repnz
hlt
not
scas
add
xchg
subl
scas
mov
pop
or
cmpsb
imul
or
es
sti
lcall
cs
pop
pop
pop
inc
push
mov
mov
cmp
outsb
xor
mov
out
mov
dec
mov
or
fistl
xchg
inc
xor
inc
aaa
out
or
cli
mov
cs
push
pop
insl
ss
push
cwtl
jle
xor
out
in
add
xor
push
inc
mov
pop
enter
add
pop
aaa
push
js
ss
nop
int3
or
jns
dec
mov
test
je
pusha
cmp
jb
adc
jns
fisubl
loop
popa
pop
insb
cmp
lahf
loop
cwtl
mov
jne
test
push
addr16
leave
data16
sub
jle,pt
rcll
cmc
push
call
xchg
ds
mulb
and
mov
mov
lods
into
push
push
xlat
popa
inc
fdivrl
sub
cwtl
sub
xchg
add
repnz
lret
dec
xor
insl
iret
jp
test
fldcw
imul
imul
mul
lods
iret
fcomip
adc
iret
xchg
fists
fnsave
inc
imul
in
jno
or
adc
push
add
pop
adc
and
xchg
mov
cmp
into
sub
jo
ja
stc
es
test
and
outsl
sbb
call
cmp
add
dec
mov
int
xor
call
dec
lahf
cmc
ret
mov
ror
jae
mov
sbb
cmp
push
clc
pop
test
xchg
push
pop
xchg
call
data16
mov
out
orb
xchg
push
xor
sub
icebp
iret
shlb
and
addr16
pop
aad
sbb
sbb
cli
or
inc
gs
aad
sarb
lahf
insb
jae
out
mov
movsb
push
mov
out
dec
aaa
mov
jl
adc
rol
xlat
pop
popa
push
roll
mov
std
or
mov
les
stc
mov
es
adc
adc
addr16
aad
pop
lcall
lret
or
ss
cmp
xor
scas
loop
mov
cwtl
mov
in
mov
mov
divl
mov
add
aaa
sub
cmp
lods
cmp
or
push
outsl
enter
adc
pop
clc
es
add
xor
into
pop
or
daa
mov
addb
mov
xchg
add
sub
mov
pop
xchg
mov
push
clc
and
leave
mov
jecxz
aam
dec
xchg
add
dec
popf
fisubs
lock
imul
mov
jp
lock
sti
cmpsb
xchg
xlat
rclb
pushf
inc
stos
daa
adc
pushf
mov
adc
cwtl
out
xor
fistpll
pop
add
cmp
mov
cli
xchg
or
and
pop
push
xlat
ret
mov
adc
addl
xor
loope
nop
pop
repnz
lahf
xor
negl
mov
adc
jl
jns
outsb
cs
lea
sbb
xlat
ja
test
jbe
shlb
mov
jle
mov
je
jb
arpl
scas
lock
mov
push
in
jl
push
cmp
fists
pop
inc
sbb
mov
out
mov
or
out
mov
mov
fiadds
idivb
shrb
arpl
ret
daa
xor
out
sbb
stc
in
xchg
and
adc
jns
mov
jmp
pop
or
push
lcall
fdiv
pop
das
pop
push
mov
enter
add
cld
cltd
jo
outsl
test
into
xchg
push
push
sub
cmp
jle
and
lret
adc
sbb
xchg
ds
sbb
sub
mov
fimuls
out
clc
into
into
jg
gs
jle
add
arpl
test
out
mov
mov
push
cwtl
mov
jmp
inc
subl
nop
add
inc
xchg
push
adc
rolb
mov
test
xchg
in
push
xchg
jg
daa
xchg
das
movsl
pushf
mov
add
repz
in
stos
sub
adc
inc
sti
add
cmpsb
sbb
sbb
movsl
mov
sub
pop
ja
jmp
cmp
or
fwait
nop
movsb
inc
sbb
mov
imul
xlat
mov
sbb
and
push
or
punpcklbw
or
lock
fisttps
push
dec
add
push
mov
sub
inc
xor
mov
cmpsl
roll
inc
dec
xor
cld
mov
mov
mov
in
test
or
sti
mov
pop
push
pop
inc
lea
lcall
mov
outsb
cmp
mov
mov
cmp
sbb
pop
mov
mov
jge
inc
mov
jns
push
mov
or
icebp
aas
shll
pop
aam
xchg
jno
fdivr
sti
pop
or
bound
sub
dec
bound
adc
add
arpl
out
push
rcr
adc
in
scas
insl
in
jo
dec
enter
pop
push
outsl
clc
out
int3
or
aam
adc
or
stos
imul
clc
call
or
shl
stc
outsl
fimuls
rorb
ret
int
adc
push
insl
sbb
jne
pop
loope
pop
sub
jecxz
xor
jl
and
adc
cmpsl
jg
jp
scas
mov
mov
dec
test
inc
jmp
repz
pushl
cmp
pop
inc
test
xchg
add
add
rcl
cs
xorb
int3
xor
orb
sti
scas
sub
mov
cmpsb
push
dec
push
movl
xor
cs
pop
and
lcall
iret
mov
outsl
lods
rcl
sub
insl
add
mov
and
push
movsl
push
out
test
retw
jbe
cmp
fwait
inc
xchg
aas
fisttpll
andb
mov
dec
cltd
icebp
mov
cs
lret
es
xor
jnp
aas
cmp
add
sub
lea
pop
or
push
push
jmp
cmp
pop
mov
imul
lret
mov
add
lea
inc
or
lods
movsl
jecxz
inc
inc
stos
lret
xchg
sarb
testb
aas
cmp
clc
in
xor
or
fwait
js
add
lret
and
fwait
clc
cmpsb
dec
jbe
ffree
arpl
pop
mov
mov
mov
fucomi
in
arpl
pop
loop
cwtl
xchg
jmp
test
int3
add
loopne
rorb
sbb
test
push
jnp
jne
xor
xor
stos
scas
adc
pop
push
mul
aas
jne
lods
fwait
add
inc
push
aas
jmp
cmp
cld
push
cmp
loopne
aad
push
mov
popa
sti
mov
ja
cmpsl
ss
test
xchg
push
aaa
int3
clc
mov
into
je
jp
xchg
in
xor
mov
fmull
or
aas
insb
sbbl
lahf
dec
shll
fsubrl
push
int
push
insb
sbb
pop
repnz
rcrb
lret
sub
cmpb
mov
fsubs
xchg
shrl
lret
ret
popf
out
mov
mov
xchg
arpl
xchg
flds
movsb
mov
ja
xlat
outsb
aaa
jne
or
pop
shll
push
xor
aam
ljmp
sbb
push
dec
mov
jmp
pop
jnp
aam
push
jns
loop
addr16
mov
cmpsb
mov
push
ja
addr16
add
sbb
cmc
cmp
aad
ffreep
push
loopne
shrb
and
xchg
adc
push
clc
cltd
cltd
adc
and
mov
shr
in
xor
inc
lret
mov
pusha
ljmp
xchg
dec
negl
test
xchg
lock
jnp
jnp
call
jg
sbb
jo
mov
outsl
movsb
dec
xchg
xor
xchg
pop
adc
mov
pop
js
insb
add
stc
mov
lock
data16
arpl
or
subl
ss
ret
jmp
mov
xor
mov
lea
sahf
imull
jb
in
jp
pop
mov
call
dec
jmp
fnsave
fsubrl
loop
cmp
popa
fidivl
scas
push
dec
xchg
cli
sub
push
stc
cmc
test
frstpm(287
sub
das
out
jne
sub
into
cmc
push
push
dec
rolb
test
dec
xchg
nop
les
test
inc
or
jmp
in
sbb
jp
jmp
push
mov
jle
fsub
or
test
pusha
les
lret
mov
add
push
push
sbb
mov
dec
xor
mov
or
push
lret
out
jbe
cmp
je
xchg
popl
icebp
pop
orps
push
scas
mov
dec
push
or
je
cli
adc
test
inc
push
pop
addb
jo
mov
clc
push
xchg
pop
push
lea
scas
inc
dec
in
cmp
fisubs
mov
cmp
repz
cld
or
js
adc
and
and
mov
bound
inc
inc
jne
add
lods
mov
xchg
or
cmc
jge
wrmsr
jne
push
xor
jmp
andb
pop
into
lret
lock
test
mov
stos
into
fmuls
jae
xor
push
std
sbb
ds
sub
cmp
es
es
cs
repnz
bound
pop
pop
xlat
fidivrl
pop
pop
out
pop
ficompl
sub
xor
push
in
adc
aaa
cli
rorl
shlb
xchg
gs
je
sub
inc
bound
stos
idivl
push
shll
mov
rclb
inc
or
sti
pop
xchg
cmc
jge
int3
pop
push
idivb
adc
ds
pusha
xor
or
mov
jno
lock
and
or
aas
aaa
hlt
loopne
adc
in
push
adc
sbb
xlat
lcall
repz
fistps
mov
xchg
cmpl
fdivrl
arpl
sub
adc
add
pop
icebp
xorl
bound
enter
sub
inc
mov
gs
adc
add
xchg
push
push
pop
push
fnop
inc
cmpl
cmp
jmp
sbb
mov
in
jo
mov
es
inc
pop
sbb
imul
push
sub
push
decb
cmc
adc
bound
in
inc
mov
gs
push
mov
aam
pop
sub
icebp
dec
call
cmp
inc
mov
flds
inc
mov
scas
mov
ret
cmp
dec
mov
dec
mov
dec
pop
out
out
pop
sub
std
adc
int3
push
xchg
in
sub
pop
pop
movsl
sub
fs
xchg
push
jg
xorb
lret
push
or
fidivl
inc
rep
in
dec
xor
pop
mov
addb
movsl
lods
and
xchg
cs
jno
pop
cmp
scas
mov
pop
bound
hlt
jl
data16
push
cmp
cwtl
shll
lods
xchg
nop
lock
ja
aad
dec
aaa
jmp
jge
mov
loop
lds
out
test
mov
insb
fbstp
std
scas
aas
xor
stos
add
pop
cmp
sub
nop
add
rcrl
cs
and
sbb
xchg
shlb
fcmove
or
outsl
mov
pusha
cwtl
cmp
xchg
cltd
dec
push
popa
push
loopne
sbb
aas
iret
pop
cmpsb
inc
ljmp
rolb
out
mov
es
ret
mov
sbbb
data16
jnp
fmull
test
loopne
fistps
loopne
into
fcomip
fwait
sahf
lahf
fs
jae
loope
fidivs
pop
jne
stos
jo
jnp
pusha
mov
sbb
cmpb
and
test
call
sbb
or
mov
psubusw
pop
pop
or
icebp
in
std
incb
jmp
scas
add
pushf
cmp
inc
in
ja
je
mov
mov
jno
pushf
add
movsl
fs
push
pusha
imul
mov
adc
mov
push
inc
xchg
dec
hlt
mov
out
jle
in
xchg
out
les
add
adcl
pop
into
mov
lcall
xchg
or
rclb
imul
xchg
sbb
imul
jp
push
pop
sbb
jmp
dec
dec
nop
mov
clc
mov
jo
push
adc
fcompl
and
es
test
arpl
jg
xor
or
xchg
call
sub
into
mov
test
xchg
ss
sbb
sbb
lahf
sub
shrl
fs
les
pop
lock
jmp
cmp
inc
mov
dec
in
xchg
adc
leave
adc
movsl
insb
or
ja
mov
sbb
mov
fwait
lods
test
jnp
cmpl
xor
fisttpll
mov
repz
enter
test
daa
in
and
icebp
lcall
movsb
push
sti
rorb
adc
dec
pushf
imul
lcall
ret
push
lcall
in
and
push
dec
add
sub
xchg
scas
mov
sub
pop
cs
int3
movsb
cmp
jecxz
xor
jbe
fwait
je
xchg
pop
sbb
xchg
sub
roll
xchg
jo
pop
jl
pop
dec
imul
leave
pop
cmp
ret
sub
decl
loopne
in
dec
jno
mov
and
adc
dec
rcrb
ljmp
mov
mov
xchg
mov
add
ret
push
fisubs
cmc
jno
mov
cmp
push
mov
pop
into
push
sub
inc
icebp
out
dec
dec
dec
ds
stc
fsts
fsubl
test
aam
jbe
mov
pop
int
add
dec
loop
ds
lret
push
lods
inc
shrb
iret
adcb
scas
scas
xor
xorl
mov
shlb
les
mov
jnp
pop
mov
in
test
xor
or
loopne
sbbb
test
or
jl
dec
push
fiadds
pop
add
sub
xor
clc
push
dec
icebp
fs
push
movsl
sbb
into
sub
sbb
xchg
mov
mov
lods
popa
rclb
sub
jo
test
adc
jge
inc
das
aam
add
cmp
dec
or
mov
inc
adc
out
inc
sahf
add
out
jno
andb
mov
neg
dec
push
mov
cmp
test
mov
push
add
push
add
jae
ljmp
pusha
adc
rcl
ljmp
cmp
add
movsb
imul
enter
out
and
mov
add
rcll
mov
mov
popf
jle
jne
imulb
pop
push
add
inc
lahf
and
mov
lds
mov
sub
movsl
jb
push
jmp
mov
fnstsw
test
mov
and
test
add
jl
pop
bound
daa
or
jae
or
dec
mov
lea
and
in
mov
in
jl
popf
sub
lahf
inc
xchg
loop
push
insl
in
sub
inc
sub
mov
add
sbb
push
inc
sbb
aas
add
xchg
cmp
int3
outsb
lock
aam
lds
call
test
sbb
xor
pop
pop
fstpt
stos
dec
mov
xchg
sahf
sbb
ret
mov
es
popl
lret
popa
xor
sub
cmp
daa
loopne
lcall
idiv
gs
ret
inc
leave
pop
ret
or
fisubrs
negl
sub
outsl
outsb
adc
movsl
inc
cmpl
pop
jns
fimull
popl
sti
aaa
movsb
sub
cmpsb
ror
jp
mov
das
fld
mov
sti
xor
in
dec
mov
aam
ljmp
cwtl
pop
stos
test
aaa
push
jmp
lret
push
dec
jmp
lock
dec
xchg
mov
cmp
sub
ret
lahf
mov
add
xor
mov
lahf
push
dec
or
add
out
aas
cs
int
add
and
frstor
leave
movsl
paddb
mov
jo
jg
stos
inc
jg
xchg
jmp
mov
lahf
in
inc
or
mov
test
dec
jne
xchg
imul
insb
cltd
cmp
sbb
mov
mov
imul
jl
xor
sub
xchg
dec
and
sbb
push
pop
sahf
mov
fimull
negb
or
outsl
ljmp
pop
paddusw
ljmp
or
sti
iret
jecxz
mov
cmpsl
cmp
sbb
and
pop
stos
push
test
sub
inc
lea
jbe
or
je
leave
push
mov
sub
enter
push
dec
sbb
mov
negl
push
mov
movsb
lods
push
mov
mov
fldenv
hlt
and
repz
mov
cmp
je
je
aaa
pop
jmp
mov
sbb
xor
xchg
movsb
add
imul
dec
push
addr16
icebp
mov
inc
insb
cmp
pop
or
or
scas
enter
out
ret
cmc
testl
arpl
xchg
xchg
mov
shlb
adc
xchg
xor
and
xorb
sbb
push
jle
and
jge
loop
mov
les
inc
repnz
and
push
push
mov
scas
test
pop
lea
jp
and
test
out
adc
sbb
lods
out
repz
cmc
cs
rcr
cmp
clc
xchg
push
lret
xor
add
and
mov
pop
lods
sbb
pop
in
js
cld
sub
in
xchg
out
iret
mov
dec
popf
push
sbb
and
push
leave
jp
xchg
iret
jns
ljmp
adc
mov
lods
push
ja
in
jne
inc
mov
lods
loop
jle
sbb
pop
stos
inc
cmpsb
aam
xchg
mov
adc
cltd
ds
arpl
xchg
xorb
pushf
ljmp
scas
xor
imul
cmp
popa
mov
jo
sarb
rcrb
sti
fs
lods
mov
dec
ljmp
sub
xor
cltd
addr16
orb
dec
and
sub
es
scas
loope
and
sub
hlt
push
out
mov
testb
jge
mov
clc
sbb
sub
int
xchg
adc
adc
adc
pop
jecxz
loope
daa
mov
hlt
cmpl
mov
sbb
cmc
and
dec
pop
xchg
fimuls
int
sub
fstps
aaa
add
lock
in
pushl
xor
lahf
addr16
xor
bound
ja
jp
dec
fdivrl
inc
pop
mov
das
and
xchg
dec
pop
out
sbb
cmp
inc
leave
inc
xchg
xchg
sti
sub
and
cwtl
fldt
mov
out
push
mov
fwait
ljmp
sahf
jns
jecxz
pop
cmp
mov
int3
and
inc
lock
rolb
jno
clc
fs
sbb
mov
jb
bound
iret
scas
xchg
mov
das
add
subb
test
cmp
inc
push
mov
fmul
jns
mov
pop
mov
adc
shr
jmp
jbe
xchg
pop
cmp
dec
mov
inc
aaa
mov
and
or
pushf
popa
adc
xor
push
pusha
pop
push
mov
lahf
into
or
lcall
mov
cmpl
clc
adc
dec
sub
loop
jge
js
ret
js
andl
and
leave
adc
clc
push
insl
std
mov
mov
xor
and
mov
mov
mov
iret
decl
lea
mov
popa
jl
xor
jo
mov
ja
shll
pop
mov
pushf
mov
mov
adc
test
mov
sahf
jle
push
inc
fcmove
or
xor
stc
bound
jmp
adc
ror
in
mov
jle
roll
sbbl
addr16
fisubs
jns
adc
push
push
lock
pushf
xchg
out
loop
mov
or
push
mov
cltd
add
and
xor
fs
mov
movsl
orb
lods
dec
inc
roll
lret
in
inc
mov
rorl
pop
push
cli
je
and
gs
push
and
sbb
jp
mov
jecxz
xchg
fmull
cmpsl
jmp
cmc
sbb
add
nop
stos
mov
xorb
enter
or
imul
loopne
fmul
cmpsl
cmp
shll
jns
loopne
cld
push
ret
mov
push
clc
addb
cmp
mov
test
daa
xchg
lods
pop
test
mov
jbe
sbb
insb
lea
in
push
sub
dec
lahf
in
daa
cltd
aam
adc
cmp
xlat
push
mov
mov
loop
int3
ret
pop
mov
inc
xorb
pop
popf
mov
adc
and
push
fisttps
xor
mov
xor
in
jbe
adc
test
adc
adc
push
lret
dec
mov
xor
pop
cmp
mov
pop
adc
xchg
fs
adc
fimull
dec
sbb
jp
push
xor
shll
repz
nop
insb
fnstcw
mov
jecxz
push
inc
xchg
xor
xchg
ja
adc
xor
or
xor
jne
mov
test
or
and
jg
xchg
sub
xchg
ja
push
gs
adc
jno
xor
gs
add
xor
inc
lods
cld
push
add
xor
push
dec
mov
aaa
mov
xchg
push
fxch
gs
arpl
add
jp
lods
or
stc
lret
mov
push
and
and
ss
mov
push
jb,pt
inc
jne
mov
jle
jno
jae
andl
push
es
mov
iret
mov
cwtl
inc
mov
push
paddusw
out
push
lret
push
std
imul
cmp
orb
mov
test
mov
ret
mov
push
inc
mov
pop
push
outsl
sbb
adc
push
xlat
xchg
adc
cmc
inc
push
push
cmp
leave
sub
cmp
jno
xchg
or
ljmp
rcrb
pop
dec
sub
xchg
movsb
push
insl
popa
pusha
mov
fxch
sbb
sahf
inc
test
xor
loope
jae
iret
xchg
mov
imul
test
hlt
xor
in
adc
push
fsubl
mov
jns
push
push
lock
xchg
insl
nop
and
ds
scas
in
enter
cmp
cmpsl
push
int3
es
add
cmc
lea
inc
mov
fcomps
lds
xor
add
pusha
and
je
mov
mov
or
pop
mov
pop
enter
xchg
outsl
cmp
lods
sbb
inc
and
pushf
test
or
mov
mov
mov
push
dec
sahf
dec
outsb
fcmovb
push
jnp
loope
cmp
stos
mov
in
sub
iret
jnp
sub
push
mov
testl
inc
adc
cwtl
mov
cmp
mov
leave
ret
inc
push
sub
mov
sub
pop
aaa
cmp
fstl
push
aaa
push
enter
cltd
xor
mov
sbbl
or
es
sub
mov
mov
pop
jne
xor
push
subl
push
fdivs
cwtl
mov
fdivrp
pop
adc
jecxz
les
pop
mov
outsl
in
fwait
outsb
sbb
cmp
mov
in
push
mov
add
movsb
out
jne
xor
mov
and
pushf
fcomps
mov
aam
push
stos
pop
aam
cwtl
fsubs
test
in
js
std
jl
enter
dec
std
dec
jo
push
jo
jo
push
push
sahf
hlt
decb
xchg
test
lock
push
xchg
lods
popf
jge
and
pushw
cmp
ficompl
xchg
jge
push
jmp
addr16
pop
les
add
pop
and
test
ljmp
int
push
or
push
dec
pop
test
cmp
adc
sbb
popa
shlb
test
inc
xchg
inc
mov
loopne
dec
pop
insl
div
dec
xchg
aas
ja
in
inc
fs
idivb
mov
or
mov
sub
mov
scas
dec
shrl
mov
mov
add
inc
xor
loope
das
or
pop
jae
repnz
movsl
aam
inc
lret
movsl
popa
shl
int3
divl
push
add
sbb
shll
aaa
cmp
push
jle
mov
xor
stos
loop
cmc
push
movsl
sarl
xchg
cs
mov
mov
lret
out
sbb
add
cmp
mov
jmp
adc
insl
lods
outsl
sub
or
sbb
jae
dec
mov
pop
add
adc
cmp
xor
jmp
sysexit
add
xor
pop
add
adc
lods
jae
xor
das
cmp
cld
mov
cmc
jg
in
jb
dec
and
in
pop
dec
push
push
sub
in
pop
or
jae
cmpsl
pop
sbb
lock
aad
int3
pop
inc
ret
jecxz
jle
icebp
push
xchg
push
imul
push
fsubs
cwtl
sbb
cmp
jl
mov
xor
jo
aam
jnp
rcll
out
and
or
xchg
ret
popf
or
scas
lahf
mov
sub
mov
test
sub
sahf
pop
pop
or
lret
dec
std
testb
in
inc
andl
ss
stos
mov
dec
shll
fdivs
test
and
aaa
sbb
ljmp
mov
dec
sbb
lock
and
dec
imul
or
xor
jnp
jp
jg
mov
mov
and
mov
mov
movb
inc
sub
bound
lret
jmp
sbb
push
sub
je
sub
push
mov
inc
in
addl
imul
outsb
loop
icebp
out
xlat
insb
mov
fisttpll
fistps
cmpb
pop
mov
or
sbb
or
cmp
cwtl
pop
or
sbb
pop
add
ss
jge
loopne
cs
fwait
shrl
ret
inc
pop
int
in
pushf
scas
es
xlat
in
sub
leave
rcrl
add
mov
sub
jg
inc
inc
nop
mov
or
sub
popf
xor
mov
cmc
into
iret
dec
out
jo
lds
aaa
lahf
loopne,pn
add
into
mov
test
sahf
cmpsb
loop
cmp
movsb
xor
sahf
push
es
lcall
pop
push
aaa
fadds
test
push
jle
xchg
movsb
pusha
ja
sbb
mov
mov
ficomps
imul
xcrypt-cbc
cmpsl
push
lahf
add
inc
andl
jbe
push
and
dec
fwait
in
rolb
leave
xchg
scas
popa
lods
xchg
stos
dec
rcr
ljmp
stc
in
sbb
sub
or
leave
pop
dec
in
or
or
push
sbb
mov
and
and
sub
jno
lods
sbb
sbbl
xchg
std
in
icebp
mov
sbbb
adc
inc
pop
jl
call
jecxz
sbb
inc
stc
pop
add
gs
pop
imul
fldl
push
lea
inc
xlat
bound
push
sbb
shll
jne
sub
jns
jmp
into
push
popf
imul
jb
jo
xchg
cmp
sub
add
cmp
mov
mov
repz
shlb
jecxz
cmpsb
popf
mov
addr16
cltd
sbb
mov
pop
mov
push
pop
pop
popf
faddp
mov
xchg
and
lret
mov
push
mov
loop
stc
sub
sti
adcl
hlt
sub
dec
push
adc
mov
cwtl
test
out
jb
add
push
pop
xor
add
push
std
out
push
jecxz
cmpsl
add
add
outsl
enter
push
cmp
push
mov
movsl
sti
cmp
mov
mov
movsb
aam
pushf
mov
or
out
sub
and
pop
imul
or
push
sub
les
pop
les
ret
mov
pop
arpl
sub
cmp
lods
addb
and
dec
cmc
xchg
lods
jae
mov
ja
data16
xchg
cmpps
addr16
and
inc
es
mov
xchg
popa
xor
aaa
jp
xor
add
sbb
ss
mov
sbb
gs
jge
jge
shll
ds
clc
dec
pusha
orl
cwtl
and
test
inc
repz
inc
fistl
outsl
fistpll
jge
mov
cli
shll
imul
push
mov
sub
dec
ja
and
dec
add
sub
push
les
roll
dec
adc
loope
add
xchg
pavgb
hlt
add
cltd
loopne
pop
fadds
movsl
stos
and
jo
push
dec
lret
cmp
test
lock
mov
lods
loop
push
aaa
push
leave
cmp
pop
inc
cmp
test
sbb
lret
inc
cmp
sub
xor
jae
jmp
push
or
aad
fisubs
push
sbb
imul
push
lea
int
inc
inc
out
adcb
fdivl
jl
cmp
ret
mov
add
sub
in
clc
dec
pusha
outsb
sub
lea
clc
dec
adc
lcall
pusha
cmp
mov
lret
orl
lret
repz
in
inc
imull
stc
repz
xor
andb
out
push
fisubl
push
cs
sbb
sbb
iret
cli
fdivrl
movsb
cmp
mov
daa
mov
add
int3
inc
out
das
ds
sub
jle
and
adc
dec
test
aas
xchg
call
ljmp
loope
and
dec
xchg
shr
xor
push
jp
xor
add
xchg
aaa
addr16
bound
or
cmp
mov
mov
add
repz
push
in
pushf
lods
or
hlt
roll
mov
xchg
dec
jnp
or
lret
mov
repnz
dec
mov
mov
loope
adc
jmp
rclb
mov
test
in
jns
cmp
int3
jne
inc
xor
sti
jg
dec
cmp
adc
cmpsb
icebp
mov
imul
pop
mov
test
sbb
dec
pop
std
in
pop
sub
mov
jge
das
pop
inc
test
leave
pop
adc
xchg
sub
pop
adc
add
jmp
loopne
das
pop
movl
sahf
je
pop
repnz
fildll
cmp
sbb
jmp
mov
lea
add
fbld
aad
stos
mov
push
jbe
fdivrl
rolb
mov
ljmp
test
sub
pushf
mov
lcall
fnstcw
dec
cltd
cwtl
pop
test
filds
adc
or
push
clc
push
shll
lret
iret
shr
dec
mov
mov
sub
sub
mov
mov
adc
test
mov
jae
pop
dec
fdiv
aas
pop
xchg
mov
repnz
andl
xor
dec
sbb
add
sarl
xchg
popa
jp
lcall
ret
add
lods
adc
jle
jl
adc
sbb
inc
rorb
fs
pop
test
jmp
lods
loop
in
out
idivl
subb
insl
popf
xchg
mov
jl
jns
imul
jg
inc
and
lret
mov
jnp
test
cs
jne
lods
lods
pop
loope
or
sarl
pop
adc
loop
aam
loope
sbb
adc
mov
jae
adc
sbb
push
jns
enter
dec
xchg
dec
xchg
mov
clc
fcoms
and
adc
aam
mov
mov
cmpsl
popf
incl
xor
in
sahf
repnz
mov
out
rol
pop
loop
mov
cli
test
push
add
aaa
jmp
in
outsb
aas
cs
adc
add
mov
out
jmp
pushf
stc
jno
xchg
jnp
leave
into
bound
dec
cmp
jbe
cmpsb
jmp
mov
ficoml
stc
mov
jge
jge
push
jbe
repz
decb
inc
jg
in
adc
shl
cmp
and
cld
jnp
popf
addr16
add
loop
clc
mov
sbb
xchg
add
fstpl
push
jmp
jae
repnz
cmp
fildl
imul
lahf
out
cmp
mov
xchg
std
pusha
ja
fcoms
mov
pop
mov
push
lret
test
mov
cmc
mov
mov
sub
fstl
pop
push
or
adc
scas
xchg
fs
test
mov
mov
mov
pop
sub
cmpsl
das
inc
xchg
ror
sub
inc
push
je
lret
das
fbstp
and
das
mov
and
add
std
cmp
cwtl
ret
int3
das
pushf
inc
mov
mov
lods
insb
pop
jae
jo
shlb
or
xchg
add
jnp
popa
lods
mov
xor
dec
dec
mov
cmp
rcrb
lret
mov
shlb
push
pushf
leave
ss
sub
mov
shlb
leave
mov
sub
mov
sarl
icebp
sbb
push
mov
xchg
popf
sbb
jno
xor
mov
pop
movsl
lret
or
int3
jge
nop
arpl
jmp
inc
shlb
inc
and
mov
pop
repz
push
je
iret
xor
mov
sbb
daa
pop
pop
xor
das
aaa
xor
rorb
fdivl
push
xchg
mov
aad
push
xor
test
cltd
sbb
cltd
mov
mov
jg
icebp
jg
mov
pusha
jns
js
xchg
outsb
pop
addb
int3
dec
mov
adc
adc
movsl
add
mov
pop
jmp
pop
dec
sbbb
inc
sbb
imulb
jne
inc
push
lea
mov
lcall
shrb
ret
je
or
xor
jb
pusha
cmp
inc
insl
xchg
stos
rcrb
fnsave
xor
sbb
stos
mov
push
out
sbb
and
fldcw
mov
arpl
adc
lds
jnp
call
jne
rcrl
out
adc
or
mov
pop
xor
push
inc
movsl
bnd
sub
mov
mov
test
cmp
add
xlat
inc
add
fmull
cmp
xor
js
sahf
loop
sbb
pop
out
xchg
aam
and
xchg
mov
gs
mov
mov
dec
pushf
fsincos
lahf
fwait
and
test
sbb
cli
and
bswap
clc
pushf
or
push
arpl
inc
sub
or
stos
jmp
call
add
rcrl
cld
orb
jecxz
cmp
nop
jns
mov
mov
psubsw
ljmp
pop
mov
jne
int3
or
inc
and
addr16
jbe
out
and
ret
loope
mov
sbb
sub
or
cmp
mov
repnz
sub
mov
mov
call
jo
jp
ret
pop
push
cmp
pop
mov
sbb
sub
mov
notb
shrl
cld
movb
xchg
popf
fistpl
ret
test
imul
test
cmc
sbb
sbb
xchg
xchg
mov
push
bound
add
loope
dec
jnp
xchg
or
sti
call
add
adc
and
ja
movl
add
sti
xlat
popa
push
dec
push
rcrl
enter
pop
mov
mov
jmp
popf
jae
out
lret
inc
lahf
or
and
sarb
movsb
call
scas
lea
jg
inc
sar
xlat
mov
sbb
sub
xor
ret
test
cmpsb
cli
mov
jg
fxch
lret
in
pop
push
add
movsb
es
roll
gs
mov
dec
test
stos
scas
test
daa
dec
testb
call
cld
cmp
jle
stc
pushf
pusha
mov
push
orl
mov
or
xorb
out
and
add
xor
fwait
cmpsb
ja
and
movsl
jp
add
and
sbb
cmp
sub
in
xor
mov
xor
shl
addr16
xchg
jo
push
test
mov
in
xchg
jmp
insb
js
sub
xor
sahf
outsl
xor
add
pusha
mov
roll
cmp
xchg
mov
aad
mov
mov
dec
lcall
inc
inc
mov
inc
push
outsb
xchg
and
jae
out
jmp
dec
call
push
mov
insl
popf
popf
mov
jnp
jne
ljmp
push
loope
testl
movsb
add
xchg
sbb
imul
xchg
mov
pushf
push
mov
popf
push
fcoms
mov
leave
xorb
sti
push
stc
out
or
add
sub
push
shrl
movsb
inc
ds
sbb
pop
in
insb
xlat
and
or
in
lret
mov
out
in
pusha
mov
add
jmp
into
aad
ljmp
push
into
dec
shll
jle
loop
pop
shll
ja
cmp
mov
mov
adc
outsl
xchg
pop
pop
cmp
mov
neg
adc
cwtl
je
fcoms
dec
in
arpl
out
dec
test
cmp
dec
pop
in
aaa
push
add
loop
pop
jbe
mov
sbb
jne
or
sbb
lret
xchg
call
out
std
jge
fst
mul
xor
xchg
mov
mov
sti
jb
bound
lret
jecxz
scas
aaa
shl
cmpsl
lods
mov
aam
push
fcoms
sbb
lret
xchg
adc
inc
mov
push
xchg
mov
lds
mov
cld
das
into
fmul
lods
dec
repnz
pop
cmc
mov
mov
mov
jl
xor
mov
sbb
shlb
xchg
cltd
adc
pusha
dec
mov
ret
mov
push
add
and
mov
mov
arpl
fisubrs
enter
out
mov
pop
jo
sub
ret
jne
outsl
std
out
insb
repz
das
adc
inc
aaa
and
xor
bound
sbb
mov
repz
xor
mov
jecxz
sbb
leave
dec
je
add
mov
jne
cmpsl
and
mov
aas
sbb
and
cmp
sahf
xor
aam
push
sub
sub
xor
mov
fwait
cmp
fmulp
outsl
shll
lods
dec
nop
lds
mov
push
pop
test
leave
push
sub
into
lahf
mov
pop
loopne
inc
dec
push
fldl
loop
cmp
fstp
insl
int3
popf
sbb
pop
je
inc
jge
pop
sub
xchg
jge
pop
push
xchg
in
mov
ja
push
jb
xor
aas
orl
in
adc
jae
adc
jnp
sub
cmovs
pushf
push
fistps
filds
add
or
repz
call
out
jge
push
fisubrs
sbb
lods
mov
imul
icebp
and
cmp
adcb
call
cwtl
orb
cwtl
enter
into
inc
cli
js
xor
cmp
arpl
lods
sub
jns
test
adc
icebp
sub
lret
popa
sbb
inc
xlat
call
sub
mov
lahf
mov
jmp
adc
mov
popa
dec
lods
test
faddl
cmp
test
xchg
xor
shl
xlat
scas
cmp
adc
pop
push
loope
mov
inc
lock
hlt
neg
adc
dec
sbb
pop
stos
loop
int3
sub
cwtl
mov
filds
push
or
out
xchg
cltd
div
xchg
ret
or
cmp
mov
cmpsl
sbb
inc
adc
stos
adc
pop
mov
fcmovb
or
xor
xchg
dec
xchg
inc
pop
mov
fdivrs
pop
loop
cmp
mov
sbb
dec
mov
push
or
jle
imul
nop
add
adc
roll
sbb
mov
or
pop
sbb
or
sti
dec
nop
dec
dec
pop
cltd
sti
cld
mov
mov
adc
int3
test
dec
cmpl
mov
movl
ficompl
push
je
insl
xchg
repnz
xchg
mov
mov
int3
adc
sahf
popf
lret
lret
and
dec
out
loop
jge
bound
adc
mov
mov
mov
dec
testl
inc
cmc
xchg
dec
lret
call
dec
repnz
jns
or
push
repz
jmp
or
mov
fists
pop
mov
and
lods
cmp
mov
call
dec
aam
ja
push
fadds
sbb
in
insl
or
sahf
xchg
or
rcll
stos
stc
ljmp
pusha
movsb
dec
les
test
xchg
pop
in
outsb
stos
cmp
cld
insl
jg
jmp
adc
incb
fiaddl
ja
out
mov
pop
mov
or
add
push
sbb
inc
sbb
lret
jecxz
insb
call
jecxz
enter
fldl2t
adc
push
out
cmp
in
movsl
scas
adc
push
sub
lods
xchg
je
sbb
fsubs
jg
imul
mov
mov
popf
mov
and
stos
pop
mov
push
aad
scas
les
ret
imulb
xor
dec
pop
push
sub
mov
daa
js
pop
xchg
mov
rclb
pop
mov
sbb
stos
xchg
in
movsl
inc
inc
data16
outsb
out
push
js
leave
outsl
fldl
push
mov
add
add
push
test
les
cltd
push
data16
enter
rorl
pop
and
or
adcb
push
inc
jne
mov
fcmovnu
lea
mov
push
nop
fisubrs
ja
imul
movsb
xchg
inc
push
and
sub
test
mov
fimull
test
jnp
push
push
or
and
idiv
les
lcall
bound
cli
movsb
add
fsubl
cs
jo
cli
in
subl
test
divb
xchg
pop
or
loope
into
call
dec
mov
cmpsl
fisubrs
inc
jbe
jo
cmp
mov
mov
mov
in
jae
mov
and
addl
test
cmpsl
xchg
sti
fisubs
rorb
sahf
xchg
rcrl
fs
push
sbb
in
xchg
jle
ss
fsubs
push
pop
adc
cmp
rcrb
add
cmp
add
cmc
sbb
and
movsb
into
imul
pop
mov
popf
es
icebp
rcll
cmp
pop
ss
lret
push
dec
divl
mov
inc
xor
ret
pop
sub
movsb
jmp
lret
stos
lahf
or
in
aas
dec
push
mov
add
mov
orl
ss
leave
xchg
mov
dec
push
cwtl
in
lods
cmpl
mov
push
push
adc
data16
stc
fcmovne
movsl
aad
sub
inc
mov
mov
adc
test
nop
mov
in
inc
out
pushf
sbb
xor
inc
test
jbe
mov
mov
jge
and
mov
inc
pop
inc
fildll
or
arpl
xor
out
aad
mov
cmp
push
mov
cmp
lods
bound
shlb
push
mov
mov
leave
mov
outsl
scas
and
into
roll
mov
je
adc
push
cmp
jle
stc
sub
aad
xchg
adc
mov
aaa
lret
imul
rep
cmpsl
insb
sbb
xchg
xor
mov
lret
cld
cltd
jns
mov
lahf
lret
push
loope
aas
enter
enter
stos
jbe
test
xor
scas
aam
gs
sbb
cltd
push
push
std
fwait
cmovle
xchg
negl
xlat
adc
mov
ret
cli
xchg
enter
cwtl
adc
std
iret
mov
stc
cwtl
mov
cmpsl
push
loopne
addr16
das
imul
inc
mov
icebp
fiadds
ja
jae
in
inc
das
cmpsl
in
hlt
mov
jle
ljmp
pushf
xchg
movsb
dec
dec
push
xchg
call
stos
adc
mov
pop
into
daa
dec
outsb
add
sub
mov
adc
dec
lret
adc
fwait
xchg
pop
lock
aaa
xor
mov
imull
frstor
mov
jmp
inc
jmp
sbb
mov
insl
xchg
sahf
repz
dec
adc
repz
or
flds
jmp
nop
in
mov
jb
andb
cmp
cmp
and
lret
jbe
outsl
fwait
add
insb
add
in
or
sbbl
add
mov
add
inc
push
cmp
cmp
stc
call
cli
divb
pusha
leave
or
mov
cmpsb
xchg
sbb
pop
push
xchg
push
push
loopne
inc
sub
add
sub
je
mov
xchg
in
mov
arpl
loope
mov
mov
inc
arpl
ret
aas
xchg
in
ret
shrb
aaa
cmp
movsb
and
pop
cmp
imul
mov
inc
xchg
scas
adc
sub
cmp
mov
pop
out
xchg
cltd
sbb
xor
movsb
mov
adc
stos
je
sbb
imul
inc
xchg
incb
clc
mov
cmpsb
push
imul
mov
scas
loop
aas
mov
cmc
shlb
mov
shlb
inc
out
enter
lods
mov
pop
jno
push
xchg
fldt
imul
cltd
ret
lret
mov
out
stos
sbb
cld
stos
sbb
aaa
push
push
push
fwait
or
and
xor
xchg
cmc
and
push
stc
lds
out
fildll
jecxz
add
fs
pop
xchg
pop
int3
ror
scas
push
cmp
xor
or
outsl
test
cmp
dec
movsb
jns
out
inc
stc
out
js
adc
sbb
jmp
mov
lods
xchg
cmpsb
jb
jmp
pop
in
pop
pop
dec
fs
clc
mov
rcll
aas
push
pop
aas
icebp
ret
rclb
stos
cmp
xor
mov
lock
push
clc
cld
xchg
push
movsl
mov
xchg
out
dec
inc
nop
cmpsl
mov
loope
push
icebp
dec
mov
outsl
and
into
test
in
icebp
rcll
cmp
xorb
rol
adc
lahf
push
lods
cmp
ret
xchg
push
sbb
xchg
cmpsl
push
adc
inc
sahf
mov
cmovb
test
out
or
rorl
rcrl
mov
int3
xor
mov
pushf
jno
pop
cmc
sti
arpl
iret
xchg
xchg
cmp
sub
jne
mov
negl
xchg
jge
sti
ret
out
dec
in
test
add
mov
mov
fstpl
push
jmp
mov
mov
mov
push
inc
xchg
mov
and
push
hlt
pop
das
mov
inc
std
xchg
sbb
daa
sub
pop
lock
popf
je
testl
or
adc
or
mov
jecxz
repnz
adcl
or
push
out
clc
xchg
test
repnz
test
es
dec
push
out
shlb
leave
lods
push
adcb
push
push
sahf
sub
cmp
sub
jge
cmp
mov
aaa
xchg
sbb
jmp
or
pop
sbb
jae
adc
jbe
arpl
sub
cmp
xor
xchg
ret
js
mov
ret
imul
movsl
movsl
out
sub
dec
pop
addb
in
sbbl
dec
inc
xchg
les
sti
call
xchg
andl
pop
add
mov
push
imul
lods
adc
mov
push
test
pop
push
mov
push
mov
stos
js
xlat
aad
cmp
stos
mull
cli
lock
sbb
stos
rorl
jp
pusha
or
fdivs
repnz
sub
inc
add
pop
int3
lahf
popa
orl
fidivs
sbb
aam
insl
sbb
adc
jmp
mov
lea
rcll
pop
push
mov
adc
jl
mov
scas
call
xchg
mov
fistps
mov
cmp
push
and
sbb
mov
loopne
inc
jecxz
movsl
cwtl
int3
cltd
and
and
cmp
adc
clc
ljmp
and
and
xchg
xchg
mov
sbb
or
hlt
in
ficompl
test
stos
sub
cmp
mov
test
loopne
jnp
xchg
stos
out
in
fcmovb
ss
test
jae
xor
fldt
dec
xchg
nop
dec
push
stc
aaa
jge
shll
bound
aam
fdiv
adc
int3
fnstcw
sbb
in
std
xor
push
mov
lea
jae
cmp
push
xchg
aas
push
rorb
mov
incl
sti
inc
test
pop
jmp
hlt
popf
jle
mov
lret
xor
mov
xor
cli
fisubrl
lret
sbb
or
pop
lea
iret
add
push
and
xor
dec
or
dec
dec
mov
sahf
sub
call
push
sub
rcr
push
in
cmp
push
or
pop
popf
test
movsl
cmp
pop
sti
lea
js
out
lahf
jp
mov
or
insl
ja
inc
sub
and
pop
arpl
nop
sub
cmp
dec
mov
in
daa
pusha
or
push
sti
inc
out
xchg
and
jmp
fbld
inc
mov
sbb
xchg
pop
ds
out
iret
push
push
mul
out
fwait
mov
and
cld
imul
mov
div
sub
subb
mov
mov
stos
dec
mov
rolb
nop
mov
and
dec
imul
shlb
mov
mov
or
outsb
ljmp
xchg
cmp
inc
or
imul
in
js
dec
notb
mov
shll
mov
push
test
mov
xor
data16
and
outsb
lcall
mov
jecxz
lret
jne
xchg
mull
sub
imul
ret
lret
mov
xchg
sarl
insl
or
fildl
imul
add
push
sbb
stos
sahf
rolb
pop
add
nop
mov
out
push
mov
mov
cmp
lret
cmp
das
sub
dec
jnp
mov
mov
sub
xor
mov
mov
xchg
inc
loope
jecxz
dec
aam
jl
fidivs
sub
roll
xlat
fwait
push
jb
dec
push
dec
mov
jg
fwait
jae
xor
cmp
mov
pop
daa
ja
pop
adc
and
inc
push
push
andl
jmp
mov
xchg
cmp
mov
cli
ds
ds
imul
out
mov
popl
data16
xor
mov
mov
dec
test
xor
outsb
bound
jp
push
pusha
add
sub
aaa
iret
inc
and
mov
push
lret
aam
mov
aas
fcmovu
out
sub
mov
cmc
mov
inc
push
jnp
clc
add
xchg
sbb
push
sub
inc
jo
sub
in
jno
xchg
pop
adc
adc
cmpsb
nop
push
xchg
sbb
mov
ror
push
divb
hlt
scas
mov
stos
lcall
push
in
mov
inc
movsb
and
jge
mov
jl
pop
outsl
dec
mov
mov
notb
jge
xchg
pop
dec
xor
sub
scas
pop
clc
in
popa
out
mov
push
dec
pusha
push
test
mov
jns
cs
je
adc
in
dec
xchg
lods
mov
movsl
lds
mov
push
pop
add
dec
mov
sub
aas
pop
jno
and
jmp
ret
cmc
popf
mov
ret
sahf
mov
icebp
int
or
pushf
imul
push
fwait
int3
repnz
cli
out
test
adc
sbb
push
pushf
pop
loop
iret
sbb
fimull
dec
and
fs
ds
xchg
inc
sahf
flds
jno
pop
mov
lock
and
pop
aaa
test
enter
stc
addr16
mov
popf
xchg
push
in
mov
cmp
je
cmpsb
jecxz
sarl
js
stc
xchg
mov
inc
inc
test
mov
iret
jno
mov
jmp
aas
add
mov
inc
out
add
mov
xor
adc
aad
std
repz
mov
nop
xor
loope
dec
ds
mov
lds
fimuls
cmc
in
ljmp
xor
cltd
push
inc
push
movsl
or
pusha
xchg
shr
xchg
mov
popf
add
push
out
or
push
dec
jnp
xor
cmpsl
cmpsl
inc
sbb
sbb
cwtl
loopne
or
jle
test
cld
mov
cli
rcl
fldcw
jnp
shll
shrl
sbb
loopne
sub
repnz
add
sbb
sub
test
dec
jl
pop
dec
rol
insl
sbb
dec
cli
mov
mov
fcomps
cwtl
fs
loope
mov
stos
push
fildl
in
fcmove
mov
in
icebp
sbbb
xchg
lcall
pop
xor
mov
pop
push
add
mov
push
push
in
enter
jns
xchg
fisttps
push
push
xchg
pop
xchg
fdivs
pusha
xchg
mov
jecxz
xchg
sbb
cmp
in
adc
lret
adc
test
push
mov
ljmp
mov
ret
jae
mov
sbb
in
rolb
sub
xchg
xchg
cwtl
push
jg
adc
mov
and
xchg
cmc
ret
pop
les
mov
push
ret
in
in
xchg
mov
mov
jb
cltd
cld
cld
fidivrs
xor
sub
mov
or
in
push
mov
inc
adc
iret
movsb
inc
cmc
cmp
scas
sbbb
xchg
and
xchg
in
cmp
sbb
or
insb
addb
cld
je
ljmp
arpl
jmp
shll
test
das
pop
sbb
andb
mov
dec
cmp
imul
mov
adc
push
popf
xor
cmp
xor
fisubs
xorl
enter
add
imul
stc
outsb
mov
pop
adc
outsb
sbb
mov
rcrl
les
aam
pop
out
aam
ljmp
cmp
lds
shl
rcrl
test
ret
cmp
data16
push
sub
pop
add
dec
inc
call
rcl
test
sub
popf
into
mov
xchg
js
push
push
loope
mov
jns
pop
pop
ljmp
int
jecxz
mov
sub
mov
push
or
jecxz
cli
xchg
jbe
push
xlat
and
cmp
lret
mov
out
or
bound
mov
push
int3
daa
shrb
jecxz
addl
and
stc
sub
xlat
addr16
adc
sbb
xor
lods
data16
and
fwait
and
pop
jne
into
add
push
mov
and
inc
roll
lea
movsb
cmp
or
cmp
mov
subl
cli
sbbl
bnd
inc
jecxz
jns
mov
push
adc
mov
xlat
clc
jae
push
mov
cmp
fidivrl
mov
sahf
mov
movsb
and
jbe
iret
sbb
sbb
hlt
mov
cmp
subl
cld
bound
cmp
mov
hlt
jbe
dec
sub
data16
xchg
in
and
inc
mov
imul
mov
fs
or
xor
iret
pop
lds
scas
jg
inc
sbbb
flds
pop
out
mov
mov
jb
scas
lret
jnp
addr16
rol
das
xor
ficomps
pushf
adc
adc
shl
push
testb
outsl
add
sbb
and
or
addr16
inc
jno
stc
sbb
aam
or
test
scas
jge
aaa
popf
out
movsb
mov
and
xchg
xor
ds
hlt
mov
fisubrl
pushw
test
xor
sub
stos
push
mov
jl
pop
xchg
adc
ud0
in
jb
jae
enter
lds
or
mov
mov
rcrb
add
ljmp
cmpsb
shr
repnz
in
cli
cwtl
nop
add
jmp
es
scas
stc
mov
std
ret
sub
loopne
loopne
jge
lods
in
sub
xchg
clc
sbb
mov
std
jne
rcrb
and
mov
test
mov
push
jnp
push
fistps
cmp
rcll
xchg
lock
add
or
icebp
ret
fidivl
cmp
sbb
out
xchg
das
and
out
cs
mov
add
ficoms
loope
push
mov
jb
loope
rcll
xchg
xlat
xor
popf
xchg
push
xor
mov
pushf
fs
sbb
inc
jp
lret
outsb
rorl
sbb
jecxz
sub
aad
fwait
rclb
push
iret
nop
push
mov
jno
mov
mov
inc
push
push
xchg
fcomip
add
repz
cs
sub
push
pop
outsb
jno
rorl
jecxz
mov
xor
je
adc
lret
pop
pop
cmc
adc
xchg
inc
sti
mov
pop
or
push
loop
pop
aad
test
add
push
adc
adc
pop
sub
scas
cmpsl
repnz
rcr
xchg
addl
iret
jg
and
addr16
push
push
xor
adc
pop
aad
lret
inc
pop
lcall
fimull
mov
add
fsts
insb
imull
cs
popw
incb
fstl
pop
imul
pop
inc
xor
xor
inc
add
test
dec
test
in
loopne
rolb
pop
xchg
in
or
push
scas
xor
test
stos
andl
mov
into
int3
inc
test
pop
mov
fildl
ret
inc
dec
fidivl
das
and
into
jp
out
outsb
out
jp
cmp
mov
sbb
push
stc
mov
test
inc
push
popf
xor
jo
adc
inc
test
es
mov
jbe
test
and
es
mov
jo
xor
pop
arpl
xchg
or
inc
test
stos
lret
nop
xchg
xchg
adc
adc
sbb
js
rcll
and
popa
cmpsl
call
jle
outsl
popf
cmpsl
mov
cmp
cmc
lret
pop
fmull
dec
loopne
mov
mov
addr16
or
insb
movsl
xchg
fcom
cs
xor
test
fsubl
adc
icebp
pop
cmp
cmp
pop
test
les
push
and
loope
sbbb
dec
add
stos
xchg
add
repz
push
nop
mov
lret
push
call
aad
into
nop
mov
fadds
xchg
js
les
sbb
and
xchg
sub
adc
add
aas
cld
inc
sbb
aas
pusha
mulb
rolb
dec
mov
loop
lret
or
lods
mov
mov
mov
cmp
push
mov
cmpsb
add
fdivs
out
js
ret
pop
fcoml
jecxz
dec
push
jg
in
jl
xchg
sbb
pop
xlat
jb
in
push
mov
mov
dec
and
push
out
in
lea
sbb
xor
xlat
repz
or
pop
pop
push
incl
pop
notl
cmp
xor
mov
dec
mov
xchg
aaa
clc
pop
in
nop
dec
or
cmp
test
aaa
mov
xchg
cmp
stc
pop
xchg
inc
in
dec
push
mov
xor
sub
fcom
loop
sarb
add
loopne
js
and
test
and
dec
push
loope
mov
sbb
or
lea
mov
mov
pop
mov
sub
data16
jbe
and
jne
call
stos
mov
push
mov
rcrl
jge
lods
and
nop
fwait
scas
adc
notb
sub
in
imul
icebp
fisttpl
outsb
loope
in
xchg
ljmp
sysexit
mov
ret
lcall
ret
mov
lahf
or
push
lret
push
and
inc
mov
aam
mov
jmp
adc
pop
out
hlt
jecxz
in
push
cmpl
imul
fs
xor
call
sub
aaa
pop
ds
jecxz
inc
add
sbb
jae
jo
ds
xor
cmp
loope
and
mov
jb
sbb
stos
cs
xor
clc
je
pop
xor
and
dec
and
push
data16
inc
push
jbe
lret
pop
dec
pop
xor
mov
cmc
adc
in
jae
js
in
mov
push
sbb
jmp
mov
fmulp
push
mov
or
fimull
inc
mov
mov
and
lcall
add
lea
xor
push
xchg
shlb
sbb
xchg
push
jb
scas
fwait
jl
mov
xor
insb
loope
ja
es
les
push
sarb
bound
les
int
or
mov
fstpl
mov
mov
out
mov
iret
lds
mov
idivl
jge
out
cmp
push
and
scas
loop
mov
adc
adc
subb
dec
mov
lock
and
addr16
adc
imul
movsb
pop
cwtl
subl
adcb
dec
mov
jb
add
jl
mov
pop
movsb
les
and
cmp
adc
inc
neg
dec
xchg
mov
aaa
sbb
ss
or
std
mov
xchg
push
insl
xor
arpl
and
dec
aaa
lret
cmp
mov
sbb
fldenv
cmp
inc
xor
pusha
fcoms
stos
jno
bound
out
add
fdivl
mov
pop
aaa
and
mov
dec
fstps
fildll
and
dec
mov
arpl
fldl2e
xor
push
dec
insb
andl
aad
dec
or
push
inc
fsubs
mov
pusha
cmpsb
cmc
sub
data16
add
xchg
dec
adc
dec
push
push
push
mov
sbb
mov
and
sti
push
les
push
sbb
mov
cmp
mov
popl
adc
or
popa
inc
inc
push
or
lock
divl
frstor
mov
pop
cmpl
mov
ret
jnp
xchg
push
out
test
pop
sub
mov
xor
fwait
sub
mov
shrb
sub
lahf
jae
xor
add
jge
icebp
inc
fdivl
sbb
push
mov
insl
data16
cmp
outsb
adc
xchg
cmpsl
cmp
jns
push
enter
and
sbb
xchg
or
nop
inc
pop
inc
call
mov
dec
dec
jnp
sub
mov
and
in
repnz
push
dec
and
adc
cmp
xchg
in
shrb
cmp
lcall
outsl
in
add
mov
cltd
subb
inc
xor
xorl
xchg
xchg
stos
pusha
sub
movsb
adc
hlt
and
dec
mov
mov
jge
sarb
and
xchg
add
inc
out
call
jno
aam
fisttpll
iret
jae
test
pusha
cmp
sbb
test
xor
sarl
sub
jp
mov
xor
in
xchg
stc
mov
mov
add
sbb
xchg
ret
add
add
xchg
cwtl
or
pop
les
cmpsb
cmp
sbb
ficompl
mov
mov
inc
or
daa
mov
push
mov
jne
pop
lcall
jbe
dec
jecxz
jmp
out
xchg
jo
xchg
in
jmp
sub
insb
and
jnp
push
in
sbb
pop
daa
xchg
loop
jno
push
jge
cwtl
ljmp
dec
mov
mov
push
lcall
cmpsb
jo
xchg
xlat
cmp
test
adc
sbb
lret
int3
dec
xor
mov
dec
dec
fs
and
sub
aaa
lea
xchg
jns
ss
jg
push
xlat
aad
and
int3
xchg
call
incb
mov
mov
xor
stos
mov
test
and
je
iret
pop
test
cmp
or
pop
jbe
std
mov
fiaddl
out
loop
lods
shrb
cs
fcom
jns
dec
lods
pop
shll
xchg
mov
lock
sub
sub
push
adc
sbb
xlat
pushf
loop
in
push
add
rcl
dec
cmp
gs
xchg
stc
and
sub
imul
je
ret
jl
fs
pushf
dec
icebp
fstps
jnp
lods
leave
aad
mov
add
jle
adc
aad
in
mov
sub
dec
xor
inc
add
and
jae
and
cmp
mov
loop
xor
out
push
out
ja
rol
fcmovu
and
jns
cmpsl
mov
cmp
roll
mov
insb
lahf
xor
outsl
lods
bound
test
lahf
pmaddwd
jo
and
lock
push
push
or
ret
jb
add
gs
adc
add
or
fistpl
ljmp
xchg
ret
dec
mov
adc
push
jle
fidivrs
aad
pop
mov
dec
xor
adc
rcl
sti
lock
adc
cli
mov
xchg
push
inc
inc
popa
and
sbb
or
sub
or
ljmp
mov
es
add
dec
imul
cmp
in
imul
jno
xor
fwait
cmp
fisubrl
pusha
push
int3
out
iret
cmp
cmp
push
or
lods
dec
stos
out
push
cwtl
mov
mov
stos
pop
inc
cmpsb
or
pop
or
lret
cmpsb
std
adc
sbb
pop
hlt
stc
es
mov
lret
and
nop
xchg
pop
sub
cmp
cwtl
xor
gs
test
lea
jbe
stc
jb
push
mov
push
cmp
cmp
inc
cmpsb
pusha
neg
and
outsb
or
mov
jb
leave
sbb
mov
and
add
rcrl
mov
ds
xor
xchg
rcrl
insb
gs
dec
adc
ja
xor
xchg
mov
or
sub
inc
imul
lods
cmc
test
je
mov
adc
jns
lcall
xlat
dec
gs
adc
mov
pop
nop
mov
sbb
into
dec
popf
or
rcll
push
jle
in
xchg
movsl
jge
xchg
xor
mov
rclb
adc
xor
out
movsl
shlb
or
xlat
mov
scas
repnz
fcmove
jns
sub
popa
cwtl
mov
xchg
adc
cmp
jmp
and
jns
cmp
sbb
xor
mov
mov
add
mov
hlt
or
fadds
pop
mov
fwait
sbb
in
repz
out
test
xor
outsl
decl
movsl
shrl
mov
insl
dec
mov
dec
call
push
and
icebp
push
popa
add
inc
xor
jle
fcoml
jae
push
add
push
fiadds
jecxz
test
dec
and
cmp
es
es
insl
movsb
rcrb
hlt
xor
mov
in
nop
in
push
shr
lcall
dec
aad
rcrb
inc
out
test
clc
mov
imul
fwait
xchg
loopne
push
push
push
fidivl
mull
or
adc
mov
test
push
popl
jns
push
inc
mov
lret
xor
scas
xchg
clc
adc
stc
sti
cmp
test
fldl
or
jns
xchg
mov
loope
mov
mov
test
push
mov
nop
aad
mov
std
lock
les
fsub
aad
lock
insb
les
pop
test
test
aaa
fnstenv
dec
std
and
push
cmp
pop
push
add
mov
mov
and
dec
enter
xor
push
xchg
adcb
or
inc
xor
mov
or
divl
fs
seto
mov
out
dec
cmp
ds
ds
lods
lcall
inc
test
cli
js
adc
xor
cmp
mov
mov
inc
inc
repz
popa
movl
cmp
jae
cs
jp
and
sbb
cwtl
dec
xchg
pop
push
lock
clc
pushf
fdivr
dec
cmp
xchg
js
sbb
mov
cmpsb
push
in
out
or
mov
fnstsw
adc
push
cmpsl
imul
adc
push
mov
insb
mov
test
leave
std
fs
mov
mov
movsl
mov
add
jnp
call
sbb
out
out
out
inc
mov
xchg
fstpl
mov
jno
scas
cmpsb
aas
movsl
or
xchg
adc
lea
and
push
inc
les
imul
jg
inc
cmp
lcall
adc
mov
icebp
arpl
mov
jb
or
test
xchg
jecxz
or
movsl
divl
xor
cmp
stos
dec
jo
scas
xlat
decl
sahf
movsb
dec
repz
pop
enter
mov
test
inc
jo
push
push
dec
mov
xor
shll
and
sub
pop
rclb
in
mov
lret
int
mov
dec
ss
fs
das
adc
test
insb
in
loope
jle
cmpsl
xchg
inc
dec
mov
mov
enter
divb
xlat
leave
shl
rcrb
jo
pop
repz
or
ja
jbe
mov
shrb
cli
xor
cld
jno
mov
lods
shl
fistpl
add
out
out
rcrl
lcall
shl
inc
enter
jnp
es
ds
loop
gs
add
and
cmp
es
in
stos
cmpsl
xlat
inc
shrw
into
inc
ds
pop
ljmp
movl
inc
daa
jl
push
pop
ljmp
add
push
xchg
pop
jae
shl
test
rcrl
dec
jb
cltd
push
add
mov
pusha
cmpb
cmp
test
jmp
xor
jecxz
imul
push
or
add
pop
sub
sar
jnp
xchg
mov
jmp
lock
std
insb
loope
cwtl
adc
ljmp
pop
lods
dec
or
lret
sbb
fucom
or
push
pop
dec
cltd
cmp
and
lcall
and
popa
filds
cwtl
call
addr16
loop
pop
push
pop
xchg
jl
stc
loopne
pop
aad
cmpsb
mov
and
pop
movsl
mov
or
jg
lock
dec
outsl
xchg
enter
fs
mov
inc
pop
mov
test
sub
outsl
cltd
adc
fisttpl
mov
sbb
std
mov
xor
roll
pop
xchg
fldl
inc
divps
and
rcrb
add
cltd
lcall
mov
xchg
sub
mov
inc
stos
xchg
sub
neg
in
inc
fstpl
aad
or
fs
mov
xchg
inc
gs
arpl
bound
adc
imul
mov
dec
pop
arpl
mov
push
mov
nop
mov
jo
shrl
mov
sub
adc
inc
ja
jle
cmp
and
daa
xor
push
arpl
mov
fstps
fstl
enter
or
adc
fildl
pop
cmpsb
imul
cmpsl
pinsrw
add
sbb
sahf
cmp
push
cmc
cwtl
in
aad
in
jns
imull
popa
mov
push
adc
mov
jl
in
mov
jnp
dec
add
or
push
dec
pop
cmp
jge
je
ljmp
arpl
jnp
sbb
daa
and
xchg
sbb
js
xchg
insb
ret
je
xor
jae
mov
cmp
push
add
test
jmp
xorl
mov
roll
mov
test
adc
loope
scas
mov
mov
sbb
jb
push
movsl
loope
enter
or
inc
test
mov
std
jmp
sbb
sbb
lea
jmp
enter
imul
inc
jle
loope
mov
pushf
in
push
stc
gs
shrl
cltd
jo
sub
mov
mov
lods
and
pop
data16
into
pop
inc
jl
roll
movsb
out
jne
cmp
sbb
jns
sti
jbe
push
jo
repnz
sbb
sub
out
push
push
fidivs
fildll
gs
mov
add
cmc
ret
xchg
sub
std
mov
fcmove
push
imull
xchg
jmp
adc
and
and
in
in
push
mov
jl
mov
lcall
add
fsts
jb
adc
rcll
jmp
fs
fisttps
jne
sub
pop
jge
int3
mov
mov
fcmovnbe
xlat
sbb
push
cmpsl
sbb
jae
sub
in
jmp
cmp
imul
and
dec
sbb
jno
sahf
pop
mov
addr16
into
mov
xchg
fbld
sbb
testb
push
rcr
sti
jge
sub
inc
cwtl
cli
int
mov
pushf
xchg
xorb
movsb
scas
mov
or
push
loopne
in
int3
mov
push
jno
mov
loopne
xor
dec
cltd
lods
add
dec
lods
shlb
pushf
cmpsl
mov
cmc
and
sub
lods
mov
mov
mov
outsl
loop
push
adc
aam
movsb
setbe
dec
and
jo
cwtl
mov
add
xlat
push
fiaddl
lret
repnz
mov
add
lret
or
xchg
jbe
repz
outsl
into
sarl
sbb
add
jo
test
fldt
xlat
sbb
or
xor
sbb
mov
inc
add
mov
fildll
adc
push
mov
loope
mov
xor
jno
in
sbb
push
sbb
xchg
xor
pop
ret
adc
jl
jl
out
popf
and
cmpsb
cmp
enter
test
test
mov
fcoml
dec
movsl
int3
sbb
repz
cmp
dec
mov
mov
xor
mov
ljmp
dec
ds
out
scas
sub
xor
cmp
jecxz
add
aaa
and
sti
repz
jge
loopne
push
fwait
orl
cmc
push
add
cmp
sub
cmc
pop
mov
add
insl
movsl
xor
jbe
gs
mov
dec
lods
mov
ds
pop
cmp
xor
xchg
inc
mov
ja
cmp
pop
push
std
adc
push
dec
sub
dec
popa
or
jg
lods
sbb
nop
aam
cmpsb
divl
cltd
cwtl
push
or
lcall
or
dec
test
push
subb
lods
jbe
push
dec
cmp
and
lds
and
push
cmp
jb
sub
or
mov
stos
jns
jecxz
movsb
lock
out
ret
and
push
cmp
adc
flds
push
sub
jbe
cmp
into
mov
lret
jne
shrb
outsl
repz
clc
xor
sub
sti
cmp
push
sbb
std
dec
cwtl
in
fcoml
int3
mov
push
int3
shlb
sub
xchg
mov
dec
sbb
jp
inc
ja
and
push
in
xor
inc
scas
popa
bound
dec
or
aas
xchg
cmpsb
xor
fcoms
arpl
sbb
inc
test
in
outsl
dec
add
mov
xchg
xor
mov
jecxz
jne
mov
insb
xchg
xor
cltd
iret
xlat
mov
aad
mov
call
test
movsl
fs
rep
jnp
mov
sub
xor
mov
mov
test
ds
ret
gs
repnz
add
mov
leave
inc
push
cmp
scas
lock
pop
sbb
loope
in
adcb
xchg
xor
loope
int3
mov
into
ret
adc
push
mov
sti
pop
lret
and
adc
adc
sbb
ss
stos
mov
jge
pop
xchg
inc
aas
mov
mov
mov
ljmp
clc
inc
xchg
sbb
add
int3
icebp
inc
or
xor
lahf
jae
dec
or
adc
jl
pop
add
fiaddl
daa
in
dec
out
mov
jbe
lret
jo
mov
push
sbb
jns
rol
mov
outsb
ds
mov
bound
cld
sti
add
out
mov
ret
cmc
test
aam
dec
or
decl
and
sub
xchg
imul
movsb
inc
jbe
mov
mov
sbb
cmp
cmc
iret
xor
loopne
pop
fs
xchg
or
ret
mov
jle
test
cmp
shll
std
stos
pop
outsl
outsb
ja
nop
int
xor
jno
lods
repz
jne
fs
popf
adc
sbb
imul
popa
mov
insl
mov
xchg
dec
in
jmp
lret
mov
imul
stc
adc
ds
xor
ss
xor
push
stos
sarb
or
loop
cmp
lahf
jb
and
cmp
lret
adc
imul
aaa
pop
xlat
mov
jg
sub
push
scas
lret
xchg
idivb
bound
cwtl
int3
addr16
outsb
in
and
orb
stc
movntq
out
xchg
insb
pop
orb
sub
push
punpcklbw
and
stos
mov
jnp
xor
inc
jl
loopne
xchg
adc
sbb
cmp
inc
mov
push
adc
cmp
in
mov
test
dec
inc
push
aad
aam
dec
lods
outsb
and
jo
sbb
mov
dec
mov
xchg
shll
pop
gs
std
xor
pop
mov
lret
in
ret
mov
test
movsb
fwait
xchg
add
or
les
push
push
in
push
fdivrl
xchg
xor
mov
scas
loop
jl
fildl
sub
pop
popf
mov
push
push
into
pop
add
cmp
mov
loopne
aam
cmpsb
cs
mov
xchg
dec
dec
les
inc
mov
lcall
dec
int
in
xchg
in
and
dec
lret
rep
loope
mov
cmp
xchg
or
add
daa
movsl
popa
fucomip
xchg
or
cli
out
fnstenv
sub
stos
xchg
adc
int
stos
dec
sub
jno
mov
bound
xor
stos
dec
fisttps
fistl
cmp
bound
jmp
clc
aam
jecxz
sub
and
add
lea
addr16
loope
lahf
xchg
clc
jns
shll
xor
fst
mov
lock
and
gs
push
outsl
cmpsl
xchg
push
dec
cli
cmp
cmpl
mov
lods
ret
jne
jle
pusha
jl
xchg
cmpsl
and
xchg
popf
aam
ret
out
mov
push
push
in
jo
out
jp
movsl
arpl
jno
fimuls
push
loopne
icebp
lock
mov
in
bound
sbb
rorb
aaa
push
ja
jecxz
mov
pop
subb
mov
push
xchg
popa
mov
sarb
xor
gs
push
sub
xor
mov
mov
mov
and
jnp
addl
int
inc
add
andb
mov
lock
sub
jl
testb
xchg
repz
pop
cli
mov
and
test
inc
lret
outsl
dec
dec
mov
sahf
pop
cltd
or
jne
adc
xchg
xchg
outsb
pop
xor
les
adc
test
pop
xor
mov
push
and
outsl
call
scas
mov
loope
xor
mov
in
in
mov
out
cmp
lods
sbb
mov
js
xchg
mov
and
je,pn
stc
insl
and
aas
iret
mov
call
xor
pop
int
fwait
sar
inc
mov
inc
icebp
jns
dec
in
cmp
into
mov
ret
push
cmp
adc
and
pop
jno
cli
push
add
pop
testb
sub
xor
sbb
pushw
lea
cmp
ja
out
fwait
adc
mov
js
cmp
in
imul
or
push
sbb
pop
and
mov
aad
in
pop
cs
ss
inc
or
mov
ss
aam
out
cld
daa
or
test
aam
or
fsts
lods
push
jne
je
movsl
cmp
and
add
inc
pop
in
sbb
hlt
mov
mov
cwtl
adc
and
repz
lea
test
decw
push
jbe
loopne
pop
dec
loopne
les
jnp
push
int
rcrl
xchg
stos
int3
xor
mov
push
push
mov
fwait
ds
add
or
mov
pop
xchg
xor
inc
pop
sbb
aam
xchg
icebp
jne
lea
mov
xchg
frstor
test
push
xor
jne
aaa
mov
cs
pop
jecxz
dec
icebp
sub
cmp
xor
add
iret
cld
xor
lock
mov
sarb
push
insb
mov
jbe
mov
cmpsl
dec
inc
adc
jns
add
int3
js
jg
cmp
imul
loope
stc
inc
out
xchg
and
dec
dec
push
fildl
cmp
xor
lret
mov
or
mov
dec
push
frstor
jb
pop
xchg
mov
jmp
mov
icebp
adc
out
dec
dec
mov
loopne
jae
cmc
popa
mov
iret
add
cmp
scas
out
or
es
sub
fstpl
int
fwait
nop
or
xchg
pop
and
xor
inc
cmpsl
push
lea
popa
mov
pop
outsb
lods
stos
jo
shl
mov
int
rclb
mov
or
adc
shrl
std
orb
iret
fisttpl
mov
jne
fiadds
mov
add
sbb
adc
push
mov
or
loopne
loope
add
outsl
jmp
mov
out
xorb
pop
lea
andl
cmp
xchg
add
jb
and
mov
inc
cmp
jmp
out
mov
or
icebp
fwait
iret
movsb
rcrl
popa
inc
leave
rclb
mov
dec
repnz
cmc
mov
add
or
imul
out
dec
repnz
cmp
cwtl
add
scas
pusha
enter
lret
xchg
mov
jecxz
movsl
loop
jno
lock
pusha
push
push
mov
cli
adc
dec
mov
imul
xchg
popa
orb
xchg
loop
jle
insl
add
pop
add
sarb
jge
xchg
icebp
data16
loopne
cmpsb
je
lods
sub
mov
lods
dec
inc
add
std
es
iret
fcom
fsin
je
sub
jle
movsb
mov
sbb
stos
arpl
jle
cmp
push
aaa
mov
imul
xchg
pop
scas
mov
pop
scas
lock
pop
ds
ja
pop
sahf
xchg
out
dec
test
mov
mov
jmp
push
dec
ficoml
loopne
inc
int
mov
and
mov
lea
add
mov
cltd
and
push
cmp
fmul
cld
out
retw
les
sbb
lcall
xchg
mov
loopne
outsl
or
adc
fldl
loop
jae
inc
mov
ja
xchg
in
rcrb
xor
mov
enter
clc
loopne
jne
loope
mov
data16
filds
adc
sub
jecxz
xchg
mov
sub
stc
jmp
popf
sar
clc
sbb
xchg
mov
out
jb
pushf
in
xor
push
push
call
pop
mov
scas
push
xor
xchg
loop
sbb
sub
mov
add
mov
or
or
push
adc
ljmp
xor
movsl
adc
pushw
xchg
out
out
lahf
sbb
mov
adc
add
jns
sbb
hlt
loope
dec
addr16
add
pushf
into
iret
aas
push
push
inc
xchg
jle
add
mov
popf
aas
jmp
lahf
gs
mov
jnp
jb
jg
inc
sub
daa
mov
movsb
aas
mov
or
add
and
rorl
inc
jbe
outsl
sarl
aas
ljmp
call
mov
push
out
jns
mov
push
jno
aam
test
sub
std
lods
into
out
push
add
dec
bound
not
mov
xchg
mov
push
mov
rcr
test
mov
or
cwtl
xchg
mov
ljmp
inc
aas
lds
imul
or
xchg
enter
inc
push
test
clc
sbb
dec
adc
lret
out
call
or
jnp
scas
mov
add
mov
jmp
xchg
lods
xor
sbb
and
in
xor
js
je
add
push
or
cwtl
pop
fimull
push
int
addb
aaa
and
das
lret
xchg
sbbl
mov
cmpsb
push
dec
pop
push
sub
add
js
or
push
push
inc
sti
stos
cs
repnz
sbb
mov
lea
sub
sti
icebp
jns
xchg
add
arpl
mov
jb
add
rcll
lret
mov
xor
std
sub
dec
mov
lods
popf
out
xchg
adc
scas
fcmovnbe
mov
adc
sub
dec
xlat
lcall
mov
out
cltd
fs
repz
cli
outsb
mov
bound
and
js
cmp
or
js
add
cmp
mov
pop
shll
add
aas
mov
jo
sahf
xor
fs
inc
test
xchg
in
rcrb
negb
in
push
push
jmp
aas
mov
jecxz
fsts
jle
inc
mov
jp
jp
xchg
push
xor
cmp
dec
pop
imulb
adc
movq
jo
jbe
dec
orl
cwtl
outsl
add
movsl
xlat
sarl
lahf
int
cld
insb
pop
hlt
ja
int3
dec
in
pop
jl
jge
mov
cmp
rolb
das
lea
in
call
fnstsw
mov
sub
adc
or
jmp
add
cmp
push
dec
pop
popa
push
out
add
or
xchg
fdivl
mov
adc
test
int3
push
dec
add
mov
aas
mov
xchg
push
popa
adc
xchg
inc
loopne
fisubl
cmp
mov
pop
cmpb
inc
outsb
daa
imul
fnstcw
mov
sub
mov
xchg
lret
mov
xchg
pop
stos
fidivs
jecxz
dec
dec
ljmp
imul
cmp
cmp
clc
dec
push
ljmp
movsb
mov
or
sub
xor
sbb
or
fsubrp
jle
int
xor
rcll
or
or
push
pop
inc
sub
mov
pop
into
mov
inc
lea
jo
in
ret
ja
mov
mov
jl
push
movsl
mov
rcrl
cmpsb
mov
in
pushf
add
xor
or
mov
out
outsb
in
movsb
dec
enter
mov
dec
ja
mov
insb
adc
inc
lods
ss
movsb
add
mov
push
sub
mov
ror
bound
addr16
nop
test
rorb
ss
fistpll
xor
sub
jb
xchg
inc
mov
add
addr16
scas
adc
adc
ret
sahf
mov
fdivrs
pop
xlat
and
jg
mov
xchg
cmp
test
pop
stos
popa
push
imul
test
jne
call
add
cmp
push
sti
stos
dec
stos
jne
cmp
inc
add
dec
pop
shl
xchg
add
insl
xchg
mov
push
jmp
fdivrl
leave
insl
adc
add
push
cwtl
or
cmp
scas
scas
push
mov
sub
xchg
daa
inc
or
aad
mov
jnp
xor
rcl
stc
or
loopne
jecxz
add
cmp
or
pop
out
sub
je
jns
sti
dec
gs
cmc
call
cmp
xchg
emms
js
mov
add
insb
fs
shlb
pusha
js
xchg
popf
pushl
mov
fidivl
ret
jp
adc
ud1
out
test
movsl
sbb
insl
jnp
inc
aas
call
add
jbe
loopne
addb
call
gs
bound
dec
popf
add
pusha
push
xchg
fdivl
cli
jo
inc
inc
into
mov
and
inc
std
inc
xchg
jbe
pop
xor
hlt
jbe
cmp
lds
iret
jne
push
sbb
int
add
stos
lahf
or
pop
movsb
icebp
inc
arpl
inc
pop
out
in
dec
pop
aas
nop
sar
dec
pop
push
cltd
jge
mov
subb
arpl
out
fildll
nop
movsl
inc
pop
dec
addr16
add
leave
sbb
addl
repz
mov
std
cmp
pop
insl
xor
test
int3
gs
mov
xor
lods
push
mov
loope
push
loope
ret
push
jno
push
mov
jmp
push
inc
push
aaa
pushf
jge
sub
ljmp
je
pop
push
insl
xlat
clc
adc
movsb
popa
clc
mov
dec
cmp
add
sti
shrl
stc
push
fimuls
push
mov
ret
add
xchg
je
stc
fs
xchg
scas
pop
imul
mov
insl
mov
es
sbb
lock
sbb
loope
stc
xor
pop
dec
sti
pushf
cmp
mov
cmpsb
in
sbb
xchg
and
add
mov
push
jl
imul
lods
xchg
inc
loop
addb
test
ret
mov
daa
and
aas
es
inc
sbbb
push
fxam
lcall
cmpsl
sahf
out
sbb
cmpsb
arpl
dec
test
pop
xor
nop
and
jle
fs
insb
ss
repnz
sbb
loop
jp
cmpb
pop
pop
pushf
push
cltd
popf
pop
and
sarl
or
sbb
jge
or
pop
and
add
sub
sub
push
push
pop
fiaddl
jle
or
aaa
pop
mov
jecxz
jo
loope
mov
mov
inc
aaa
or
jbe
out
roll
imul
inc
adc
cld
mov
pop
imul
movl
inc
bound
adc
inc
and
mov
fbstp
add
inc
fdivrs
testb
popa
cmp
ret
cmp
push
xlat
jne
std
fs
ljmp
inc
movsl
fwait
lods
pop
les
and
inc
push
ficomps
iret
jmp
stos
and
stos
sub
adc
leave
test
push
mov
and
cmp
das
into
mov
inc
xorb
or
iret
das
mov
bound
xchg
std
loop
shlb
leave
or
shll
jl
or
prefetchwt1
orb
dec
data16
pushf
in
sahf
ret
xor
aaa
dec
cmp
imul
cmc
out
call
jnp
scas
inc
daa
jle
or
cmp
pop
mov
jl
daa
mov
pop
std
pusha
sbb
jns
js
mov
xor
push
mov
nop
jmp
xor
sbb
jae
xchg
cmp
into
je
jg
pop
aam
bound
test
in
insb
stos
sar
iret
fcmove
add
lahf
sbb
sbb
aaa
gs
pop
scas
outsl
adc
pand
cli
mov
xchg
lcall
dec
cmp
xor
daa
mov
inc
mov
adc
mov
lods
clc
fists
and
push
and
xor
notb
in
mov
jae
cmp
pop
pop
loop
jecxz
jecxz
push
in
xchg
mov
pop
addb
add
jl
inc
ljmp
roll
jmp
sub
arpl
jmp
sbb
jbe
mov
add
adc
push
lea
enter
xchg
test
out
dec
cmp
insb
sub
dec
jge
scas
inc
ss
xchg
mov
pop
jg
hlt
mov
movsl
subl
lahf
mov
es
cmp
nop
mov
push
dec
sbb
mov
mov
pop
push
jmp
cmp
or
mov
iret
adc
add
push
add
popf
dec
pushl
mov
testb
cmpsl
imul
and
or
adc
repnz
xor
pusha
sbb
xchg
in
dec
insl
filds
push
movsl
pusha
outsl
jae
cmp
add
sbb
jne
cmp
adc
out
mov
jae
imul
fstpt
clc
dec
mov
dec
out
add
stos
mov
stc
push
and
scas
clc
xchg
sub
xorb
sub
pop
shlb
jp
or
xchg
inc
mov
pop
shll
and
inc
jnp
dec
lods
rcrl
cs
outsl
pop
inc
sarl
add
jo
and
jmp
jmp
jg
adc
jbe
sar
hlt
sbb
testb
mov
in
jbe
adc
orl
je
popa
pop
mov
xor
push
adc
jmp
out
mov
popa
adc
pusha
add
dec
cmp
icebp
add
cmp
pop
cmp
fnstcw
or
arpl
out
dec
lret
xchg
pop
icebp
xchg
shrb
lcall
ja
pusha
pop
add
and
cltd
js
out
dec
ja
mov
push
pushf
mov
fcompp
pop
mov
stos
lret
pusha
outsl
fcompl
xchg
pusha
inc
faddl
inc
jmp
test
cli
mov
add
or
cltd
dec
movsl
rorb
or
popf
lahf
jecxz
add
fildl
xlat
mov
xchg
scas
inc
punpckhwd
xlat
ret
mov
stc
or
and
xchg
mov
mov
cmp
in
xchg
fs
into
push
or
adc
dec
pop
imul
dec
bound
push
and
fsubrp
js
adc
add
scas
and
and
push
movsb
ljmp
gs
push
mov
negl
dec
jb
push
dec
jo
sub
cwtl
insb
dec
lock
push
pop
push
insb
stc
fcompl
inc
scas
xchg
cli
and
add
inc
and
test
mov
pop
or
or
das
imul
out
aaa
sahf
xchg
jl
add
lahf
xor
call
sbb
cltd
adc
adc
or
inc
mov
mov
loopne
mov
jno
aam
jae
mov
mov
and
lock
sbb
mov
sub
outsl
gs
shrl
inc
pop
xchg
xor
mov
data16
sub
std
gs
cmp
aad
mov
add
jae
sbb
sub
sahf
dec
jns
push
jne
loopne
das
dec
les
mov
jbe
fdivl
mov
mov
dec
jecxz
and
mov
or
roll
ss
mov
rcr
lock
xor
jmp
repz
shl
push
dec
dec
jno
xchg
in
push
rcll
add
xchg
push
bound
sbb
xchg
inc
xlat
outsl
jbe
loope
push
mov
imul
or
jne
sub
inc
add
test
movsb
push
mov
loopne
lahf
sub
icebp
clc
sub
lcall
pop
mov
lds
mov
movsb
popf
dec
mov
push
mov
xor
dec
dec
mov
out
sub
cltd
rcr
int
cld
add
and
mov
mov
frstor
sub
fneni(8087
cmc
pop
sbb
in
loope
pop
dec
mov
or
adcb
ja
jne
mov
lcall
sub
mov
lds
rolb
pop
mov
sub
xor
pushf
cltd
les
dec
push
and
mov
jl
in
inc
sbb
sbb
outsl
in
icebp
push
fmuls
out
mov
jmp
fstps
pop
scas
lcall
adc
inc
repz
jg
outsl
or
fwait
arpl
sahf
lds
pop
push
fwait
cmp
pushf
addr16
xor
cmp
mov
push
lods
outsl
aad
sub
xor
in
mov
jmp
push
add
fsubr
dec
inc
or
in
jl
flds
mov
clc
xchg
imul
les
xchg
cmp
inc
cwtl
in
jmp
push
in
stos
pop
ja
pop
xor
loopne
xchg
xor
sbb
lods
add
icebp
stos
lods
xchg
cmp
push
sbb
jo
pop
sbb
add
push
jbe
ja
imul
dec
cs
in
rorb
mov
pop
cmpsl
pop
vpmuludq
inc
jbe
shrb
jns
call
push
dec
mov
or
rcrb
movsl
stc
xchg
loopne
in
adc
frstor
loope
mov
sub
add
cmp
cmpsb
lods
xor
and
sub
je
mov
xchg
mov
jg
dec
clc
jo
pop
faddl
ja
pop
and
mov
subb
test
jbe
add
or
pop
sbb
dec
inc
iret
sub
push
test
cmp
pusha
dec
cs
ja
mov
push
push
pop
aas
ds
dec
push
cld
es
adc
push
stc
push
jp
dec
mov
out
jns
mov
addb
jmp
out
dec
push
sub
imulb
dec
daa
mov
inc
mov
xchg
lock
jnp
jle
dec
pop
pusha
fildll
sub
sbb
mov
lds
pusha
jmp
push
push
mov
js
pop
mov
rcl
repnz
bound
ljmp
mov
loop
xchg
out
stc
sub
lret
int
sbb
xor
subb
xchg
dec
jp
dec
dec
jecxz
or
mov
mov
lods
jg
add
cli
ficomps
movsb
adcb
and
pop
aam
xor
sbb
xlat
push
inc
and
xchg
add
add
nop
push
into
clc
dec
or
jo
ss
xlat
testl
adc
aas
push
adc
push
inc
test
cmpsb
lock
ss
ss
xchg
scas
inc
xchg
sub
add
jecxz
inc
fsub
jg
frstor
test
clc
pop
fsubrl
outsl
pop
dec
dec
ljmp
push
jge
inc
mov
xor
sahf
dec
adc
in
int
test
push
mov
aaa
cs
and
repnz
call
pop
adc
movsl
pop
lret
sub
ret
add
mov
push
push
fwait
adc
pop
jecxz
dec
cs
mov
pop
adc
in
mov
xchg
mov
jg
out
cltd
addr16
add
xchg
jne
xor
dec
push
out
repz
ret
adc
lahf
pusha
push
and
jmp
mov
lret
or
sub
xchg
ret
fimull
in
scas
cmc
insl
or
outsl
adc
cwtl
fimull
rcrl
insb
xlat
sarb
xchg
in
insb
pop
dec
push
xor
aam
icebp
inc
push
pop
dec
push
or
jns
ret
pushf
in
flds
enter
mov
jp
adc
cmc
mov
adc
inc
xchg
inc
fstpl
fsubrs
scas
fst
mov
mov
jg
pop
adc
dec
icebp
inc
xor
push
sub
push
int3
int3
inc
filds
outsb
push
bnd
xchg
pop
sub
mov
jl
jp
sub
inc
scas
inc
sbb
imul
lret
mov
lods
fldt
repz
std
in
outsb
push
ss
outsb
mov
mov
mov
sbb
cltd
sub
push
repz
addb
testb
jecxz
adc
mov
fdiv
daa
dec
mov
sbbl
dec
dec
xor
sub
push
mov
mov
jo
lock
outsb
movsb
jmp
push
sub
push
mov
cmp
inc
shr
and
mov
pushf
out
pop
ds
sbb
iret
incl
sti
pop
repnz
push
test
fbld
pop
bound
mov
loope
dec
jle
rorl
adcl
movsb
mov
cmpsb
push
leave
cmp
lret
push
xor
inc
xlat
jae
inc
dec
and
enter
mov
in
jmp
sbb
icebp
mov
bound
dec
ds
jge
inc
and
sub
leave
cli
sub
push
push
cli
fwait
xchg
push
inc
inc
ljmp
inc
mov
hlt
dec
xor
loopne
xor
divl
dec
mov
add
out
shll
dec
out
loopne
je
fildl
fsubs
ss
inc
pop
out
mov
pop
jo
mov
inc
ja
push
mov
sbb
mov
rolb
addl
pop
repz
mov
jae
or
lcall
pusha
out
outsl
mov
aad
xchg
push
insl
jp
push
sbb
adc
cwtl
hlt
xchg
iret
dec
lahf
or
repnz
sbb
add
pop
mov
xchg
lods
bound
mov
test
sbb
mov
jge
mov
cmp
sbb
pop
clc
dec
jae
outsl
or
mov
int
dec
xchg
fimuls
mov
addb
lock
fwait
ret
int
fidivl
jae
lock
pop
outsb
outsb
in
and
xchg
jg
mov
js
push
cwtl
mov
and
sub
sbb
add
xor
or
mov
lret
xor
ds
jle
out
sbb
rclb
xor
cmp
xor
add
popf
lret
push
xchg
in
and
and
fnstenv
aad
xchg
lock
and
pop
xor
stos
adc
iret
and
repnz
jecxz
jmp
jl
push
fisubrs
dec
je
push
shll
shll
xchg
push
add
sub
inc
out
pop
jg
inc
xor
xchg
pop
push
es
cmpb
mov
dec
popa
sahf
pop
xor
adc
jmp
popa
mov
inc
xchg
movsb
push
lret
dec
jge
mov
cwtl
push
test
sbb
aam
jno
mov
aam
cmp
pop
inc
sub
int3
sub
xchg
sbb
imul
in
inc
leave
in
pop
adc
mov
aam
jle
xchg
cmp
pop
sbb
inc
lods
out
and
inc
sbb
fnstenv
xchg
fnstenv
cmp
xlat
jnp
test
mov
stos
rolb
xchg
cmpsb
sub
inc
mov
push
inc
cmp
pop
fisttpl
sub
mov
jnp
dec
sbb
push
jp
cmp
sub
ret
cmp
fucom
and
je
cmpsb
pop
daa
repnz
movsb
lret
sbb
or
lods
lret
icebp
loopne
in
lods
icebp
fs
push
push
mov
sbb
notb
or
fdivl
enter
je
js
in
xchg
push
xlat
bound
call
inc
mov
inc
xlat
in
mov
mov
jne
jno
lock
mov
cmp
int
sbb
bnd
out
scas
cmc
sti
or
xchg
dec
out
sub
pushf
ror
fstpt
add
jne
push
jbe
mov
je
icebp
jae
mov
pop
pushl
sbb
loope
cli
mov
cs
mov
jae
gs
gs
icebp
lock
add
dec
fdivrp
xchg
call
xchg
jae
loope
add
sub
cwtl
or
xchg
add
fs
hlt
out
mov
push
cmpb
xchg
dec
pop
lcall
in
out
or
cld
jp
push
arpl
sub
fnstenv
daa
xchg
and
pop
sti
push
call
rcrl
fcompl
or
mov
stos
xchg
cltd
cmp
pop
dec
push
ficomps
scas
dec
cltd
out
mov
cmp
xchg
dec
xchg
repz
jle
movsb
nop
sub
jns
xor
mov
movsl
adc
in
pop
in
mov
inc
call
mov
cld
jae
ret
mov
fdivs
and
xchg
cli
adc
pop
imull
mov
add
push
add
rorb
jge
shrb
and
cltd
test
adc
ljmp
sahf
clc
in
sub
cmp
adc
push
and
cmp
jge
test
stos
in
jl
sbb
sahf
in
push
enter
loopne
nop
repnz
dec
push
out
mov
ljmp
adc
clc
leave
xchg
inc
dec
push
push
pusha
lods
out
and
cltd
jmp
cwtl
ss
xor
and
or
std
pop
flds
stos
int3
js
imul
mov
push
adc
cmp
iret
xor
or
out
lret
test
xor
mov
rep
mov
cmpsb
xchg
inc
sub
sub
sub
adc
sub
cmc
outsl
and
jno
or
into
pop
mov
mov
mov
pop
pushf
mov
data16
xchg
xchg
fdivrp
cmpsb
stos
and
inc
imul
stos
jecxz
inc
xchg
jbe
and
inc
mov
or
cltd
pop
imul
dec
cmc
or
add
sub
cmpsb
lcall
jmp
mov
jle
sub
daa
pop
adc
push
inc
inc
mov
adc
insl
jno
mov
fs
pop
push
lahf
jecxz
rclb
adc
aaa
mov
xor
add
and
push
nopl
es
decb
sbb
cmp
out
iret
and
cld
jmp
lret
jecxz
fprem1
stos
dec
in
mov
inc
mov
xor
inc
movb
sbb
mov
cmp
lahf
xchg
repz
mov
jb
bound
stos
loop
in
jbe
sub
ficoml
dec
rolb
push
mov
jbe
in
loope
and
or
adc
out
fcoml
mov
in
sbb
cld
or
xor
xchg
lods
or
dec
mov
out
negb
inc
jmp
mov
pop
lret
loop
arpl
sbbl
push
ret
sti
fistl
pop
mov
pop
mov
cmc
mov
mov
xchg
sbb
pusha
sub
pop
test
in
mov
loope
test
call
mov
mov
aad
push
lods
mov
stos
adc
out
mov
lret
lock
dec
std
insb
lahf
arpl
sbb
fsubs
adc
push
or
dec
mov
movsl
or
outsb
loop
add
sbb
in
loop
loopne
pop
pop
mov
iret
and
add
hlt
andb
push
idiv
adc
sahf
mov
lahf
cmp
push
sbb
fnstcw
add
out
and
idivl
insl
or
lcall
xchg
scas
movsl
dec
inc
insl
inc
mov
aaa
shrl
mov
out
jns
jo
lret
or
dec
push
mov
dec
and
movsl
loop
mov
pop
push
xor
xor
fs
sahf
xchg
cltd
fcoml
mul
dec
mov
push
push
xor
dec
sbb
pop
mov
pop
clc
jmp
mov
idivl
sub
movsl
mov
lock
sub
adc
outsb
hlt
push
test
pop
ret
pop
mov
out
repz
and
shrb
dec
ss
out
movsb
sahf
jb
push
pusha
repnz
mov
jge
icebp
jmp
movsl
cmp
push
sub
xor
test
pop
push
loopne
lods
xchg
push
lret
or
adc
sbb
pop
push
neg
jle
imul
pop
xor
adc
cmp
das
bound
or
int3
repz
roll
or
mov
es
fadd
movsl
xor
sbb
leave
std
add
inc
push
inc
mov
mov
andl
mov
add
int
inc
iret
or
push
xchg
mov
fimuls
xlat
xorb
ret
in
lahf
pop
xor
xor
xor
cmpsl
jns
mov
aas
fildll
push
mov
add
mov
icebp
rcr
in
cmp
stc
push
pop
add
push
inc
js
icebp
sahf
scas
mov
cmpxchg
sbb
or
add
push
mov
lds
aaa
jne
or
inc
mov
jmp
sbb
scas
add
insb
lcall
pand
xor
movsb
cmp
popa
cli
cmp
fisttpll
mov
rcll
or
mov
dec
or
popa
jmp
scas
cmp
scas
pop
mov
dec
jo
fstps
in
dec
ss
fdivrl
ret
daa
lods
jb
dec
push
pextrw
popf
clc
pusha
mov
xlat
mov
xor
ss
in
push
cmp
aas
sbb
call
dec
pop
jge
int
jecxz
popa
inc
add
mov
jb
js
js
xchg
pop
pushf
mov
mov
scas
das
mov
movsl
mov
xchg
lods
xchg
in
loop
push
push
xchg
iret
sbb
ljmp
push
test
call
mov
dec
mov
mov
and
lds
data16
cmp
push
cld
push
mov
and
inc
fistps
push
add
xor
adc
inc
sbb
sahf
xchg
inc
sti
mov
outsl
add
movsb
mov
cmp
xlat
movl
fmuls
xor
mov
cmp
mov
movsb
cmpl
add
into
xchg
outsb
push
imul
aaa
mov
mov
mov
xchg
outsb
arpl
loopne
lds
imul
xor
jns
xchg
lods
shl
mov
xor
lds
loopne
stos
jmp
insb
mov
cltd
scas
das
mov
xlat
clc
or
or
push
mov
js
lea
dec
ds
icebp
addr16
int
shrb
mov
xorb
jb
mov
mov
adc
push
insl
adc
xorb
jge,pn
dec
inc
pop
int
dec
faddl
jne
mov
lea
sub
xchg
repnz
xor
outsb
jo
insl
mov
and
xchg
mov
stos
clc
imul
hlt
push
arpl
adc
xor
inc
subb
lods
sbb
imul
test
shlb
mov
jno
mov
aaa
xchg
xchg
inc
jecxz
dec
popf
dec
xchg
fstl
mov
pushl
pop
mov
or
scas
push
stos
cmp
jb
xor
jbe
lret
jbe
stos
jle
mov
lahf
jg
xchg
pop
sub
jp
lods
inc
or
xchg
mov
push
add
fwait
insb
mov
daa
sti
cmp
imul
sahf
push
stos
mov
std
mov
jl
pop
mov
sub
jno
into
inc
fisubrl
icebp
mov
mov
push
pop
adcl
pop
daa
in
arpl
sti
xchg
cmp
loop
jae
out
mov
dec
and
dec
xchg
js
mov
hlt
sub
nop
jge
or
imul
pop
ds
or
mov
filds
bound
xor
in
fimull
decb
sbb
xchg
fidivrs
cmp
xchg
ss
dec
xlat
xor
int
stos
call
fists
mov
or
int
out
stos
aam
jo
scas
mov
mov
and
jo
pop
popa
scas
xor
xor
lret
adc
stc
adcl
xor
shrb
stos
iret
notb
and
jle
rorl
pop
aad
and
mov
dec
ja
in
sub
movsb
or
bound
nopl
cmp
inc
add
repz
pop
mov
jne
pop
es
pop
pop
mov
pop
or
or
lahf
mov
int3
sub
pop
out
es
ss
js
mov
stos
in
rolb
mov
aam
and
mov
push
aas
or
je
mov
cli
sahf
xorl
stos
sub
xor
cmp
pop
mov
add
popaw
push
or
fildll
dec
xor
sub
ret
loopne
pop
sbb
xchg
jb
hlt
dec
mov
add
ja
and
movsl
pop
sahf
out
mov
pop
movsb
lahf
clc
pusha
out
and
call
lods
sbb
add
sti
inc
sbb
inc
clc
fistps
out
ljmp
adc
gs
jmp
sahf
mov
into
sbb
pop
jae
inc
js
adc
push
pop
aas
adc
bound
sahf
jge
and
nopl
mov
mov
test
lcall
xlat
adc
int
cld
stc
sbb
jecxz
jle
jne
adc
jns
mov
jl
or
jne
sub
mov
xchg
insb
and
pop
mov
ret
sbbl
mov
aas
add
mov
mov
in
mov
into
mov
js
outsb
lods
and
adc
lcall
roll
cmp
push
pop
iret
outsl
inc
sbb
xchg
pop
mov
std
jne
cmpsb
ret
mov
or
leave
nop
nop
cwtl
fisubs
fcmovnb
sti
es
imul
dec
xchg
jp
pushf
or
stos
aad
psubw
fadds
lahf
scas
cmpsl
in
pop
imull
sub
jb
sti
nop
adc
push
cmp
pop
movsb
fstpl
mov
cld
insl
and
add
jbe
jmp
pop
pushf
cld
inc
sti
ret
jns
mov
out
pushf
jno
inc
mov
xchg
stos
loop
test
aad
leave
mov
cmp
adc
loop
push
in
adc
nop
xlat
pop
shr
test
push
movsl
and
mov
movsl
loope
inc
dec
pushf
pop
je
mov
push
xchg
mov
and
test
out
or
leave
pop
inc
ljmp
xchg
dec
add
movsb
and
ja
or
and
adc
pop
lds
lods
add
or
mov
push
aaa
jp
lahf
insb
ljmp
ss
xchg
jne
jbe
cmp
pop
pushl
mov
out
cwtl
lret
jl
arpl
pop
pop
or
test
mov
rcl
aad
mov
fpatan
pop
hlt
rorb
and
and
add
call
subb
mov
push
push
inc
sarl
in
out
dec
outsl
pusha
mov
mov
adc
jg
dec
pop
rcl
dec
rolb
lret
jo
and
pop
mov
shl
movsl
or
sub
mov
sub
lds
jo
in
jb
inc
mov
xchg
aas
andb
fnstsw
sahf
pop
mov
mov
test
adc
scas
nop
push
mov
lds
notl
ret
scas
pushf
jle
test
sbb
cmp
nop
inc
mov
mov
cs
add
loop
add
test
ret
in
outsl
jg
daa
mov
pop
cmp
add
dec
mov
or
mov
hlt
add
sub
cmp
inc
jmp
push
or
lret
shl
jle
xchg
ret
pushf
jecxz
lods
push
insl
sar
sahf
mov
daa
sbb
jo
test
sbb
or
and
lret
xor
mov
dec
test
enter
inc
aad
leave
clc
movsb
ds
jbe
repz
scas
inc
mov
adc
jno
inc
repnz
sub
sbb
mov
daa
or
push
mov
dec
adc
fistps
add
insl
xchg
xor
xlat
addr16
push
jmp
push
fsubs
push
rorb
scas
nop
sub
mov
mov
and
add
xlat
add
jmp
pop
mov
mov
insb
mov
mov
lds
inc
test
or
cmp
movsl
repnz
xor
pop
movsl
pop
inc
ss
movb
cmpsl
sbb
mov
mov
jno
dec
pop
inc
lahf
push
inc
and
and
xlat
push
dec
fs
iret
ss
std
cmp
jecxz
and
popa
lret
out
add
mov
sub
sub
xorl
fs
inc
iret
fbld
das
cmp
sbbb
push
sti
xchg
jno
stos
and
or
loope
cmpsb
push
add
mov
out
dec
inc
push
pop
popa
xchg
and
mov
imul
mov
xchg
mov
test
cli
call
sbb
xchg
cmp
loop
std
lods
ljmp
out
movsl
inc
leave
xchg
fcmove
push
or
test
cmc
ja
xchg
mov
loop
sbb
fidivrs
ret
sub
out
pop
icebp
fsubl
leave
xor
outsl
movsl
gs
dec
sbb
mov
das
fidivl
fistps
stc
pop
inc
adc
lds
cmp
movsl
into
repz
push
fsubs
inc
inc
or
fsts
push
popa
push
rorw
pushl
gs
push
jg
sub
lret
mov
out
lahf
imul
lods
mov
jb
push
lods
addl
sbb
inc
push
mov
cmp
out
push
sbb
ds
out
jo
pusha
in
out
xchg
imul
int
push
mov
sub
fmuls
push
and
sub
cld
jle
mov
stc
xor
cs
jmp
dec
cwtl
cmp
test
out
mov
ficomps
in
test
ret
shlb
insb
xor
addr16
mov
xchg
inc
sub
pusha
lahf
mov
mov
or
aas
sub
xchg
js
add
and
sarb
jl
lea
mov
ud0
aam
pop
lret
stos
stos
jmp
add
inc
mov
xchg
mov
lcall
pop
iret
movsl
repnz
sub
lock
adc
lret
cmp
push
into
shrl
faddl
cmp
into
dec
push
mov
popf
daa
inc
inc
lods
movups
cmp
or
repnz
or
pop
lcall
rcl
xor
sbb
mov
jmp
test
add
inc
stos
lcall
mov
and
cmpsb
inc
lahf
mov
dec
addr16
jecxz
cmpsl
stos
pop
orb
nop
sub
push
fiadds
popf
mov
sbb
push
arpl
int
push
jno
sbb
sub
fcmovbe
clc
add
mov
adc
aas
outsb
inc
sahf
aam
es
and
frstor
mov
inc
push
mov
xlat
push
jns
and
cmp
or
dec
roll
das
addb
mov
sbb
cltd
mov
repz
mov
and
mov
scas
sbb
sub
shlb
push
xchg
in
xchg
out
enter
sahf
test
cmp
daa
fisttpll
pusha
xor
test
outsb
in
or
or
xchg
loop
xchg
test
cld
daa
add
aam
adc
repnz
mov
sahf
mov
push
out
add
rorb
rclb
jns
stos
gs
ds
and
and
xchg
repnz
push
iret
mov
jmp
arpl
jno
scas
adcl
out
mov
xlat
jl
lcall
mov
bound
sbb
iret
pop
dec
add
xor
dec
sub
push
sbbb
int
and
leave
inc
js
into
inc
test
cmpl
xor
insl
shrl
xchg
jne
addr16
xlat
xor
mov
fsubp
movsb
xor
mov
stos
jb
pushf
and
loop
fmull
sub
ret
inc
stos
sub
int
sbb
icebp
addb
cmp
pop
ja
ss
jo
pop
ret
punpckhwd
xchg
in
adc
scas
cli
out
lock
jg
enter
mov
xchg
dec
gs
ret
xchg
pop
cwtl
mov
xor
cmp
in
ret
xorl
cmpb
int
adc
lcall
dec
rorb
cmp
push
push
sbbl
lahf
in
call
popa
push
lret
inc
xorl
test
cli
pop
push
lds
push
mov
mov
aaa
jne
pop
push
rorb
adc
scas
mov
mov
rcl
xchg
mov
jb
cld
or
add
andl
xor
test
push
sbb
mov
lret
mov
sub
mov
loopne
jbe
adc
inc
adc
adc
cltd
fldl
cmp
repz
sub
mov
sub
adc
mov
xorb
pop
mov
fdivr
mov
int
xchg
sbb
mov
fcomps
int
in
ss
dec
paddw
push
imul
jnp
aad
push
daa
and
dec
je
add
mov
cmc
push
mov
stc
push
jl
lret
rorl
and
stos
lret
add
iret
int
jne
cwtl
sahf
jo
cmp
stos
mov
jp
mov
addr16
jae
shrb
lret
adc
sti
and
and
cs
adc
fs
xchg
nop
jle
jecxz
jle
dec
mov
inc
ds
mov
mov
xchg
mov
inc
ret
mov
mov
cmpsb
xor
andl
outsl
insb
clc
scas
lcall
cmpsb
mov
lds
jmp
mov
shrb
fildl
ret
cmp
test
jns
or
fisttps
mov
add
scas
cld
mov
pop
imul
in
cmp
jl
pop
dec
dec
imul
nop
push
sarl
pop
into
fistps
sbb
xor
push
mov
into
mov
and
test
xchg
or
cmp
test
sbb
mov
push
and
mov
in
mov
jle
cmp
cmpb
jp
out
in
and
je
push
andb
xor
in
add
mov
in
data16
sarl
lock
push
sub
xchg
je
dec
stos
cmp
push
clc
gs
dec
insl
aad
je
pop
xor
lahf
scas
loope
pop
pop
cmc
cmpb
mov
aas
cld
xchg
pop
les
mov
cmp
pop
popf
sarl
scas
xor
adc
cmc
imul
clc
or
xchg
pop
xlat
fisttpll
push
add
fs
test
in
out
xor
adc
dec
test
inc
cmp
xchg
or
pop
scas
pop
cmp
xor
dec
and
mov
scas
addr16
xor
or
or
call
adc
rorb
shlb
cmp
or
pushf
loope
jbe
sbb
jecxz
sbb
xor
bound
lahf
jp
xchg
es
inc
test
lret
xchg
cltd
addr16
jg
jno
xchg
cmp
xchg
push
fistpl
cmpsl
or
cmpb
psubd
into
cli
out
arpl
mov
mov
xchg
daa
xchg
mov
jns
pop
inc
cmp
adcb
jnp
lea
sub
xchg
dec
cmc
sbb
fcomps
add
xor
or
fsubrs
mov
mov
in
xchg
rolb
jge
cmp
icebp
pop
pop
ja
sbb
es
xor
push
push
cmpsb
repnz
xchg
pop
pop
pop
popf
mov
ss
mov
out
cmp
pop
cld
add
or
insl
mov
push
xlat
push
loope
adc
outsb
call
mov
xor
or
fisttps
jne
cwtl
add
and
mov
sub
ficompl
decb
lea
stc
imul
and
std
push
out
push
hlt
or
jno
mov
clc
xor
mov
in
push
cmp
sub
ret
jno
xchg
movsl
in
and
push
mov
push
jmp
or
push
test
inc
jl
out
dec
test
inc
lea
pop
cld
dec
and
and
or
or
push
subl
ret
pop
inc
dec
imul
jae
lahf
repnz
mov
shlb
pop
jle
xchg
mov
cmc
inc
sarl
loop,pn
out
xor
sbb
jmp
leave
adc
mov
pop
popf
sbb
and
movsl
push
cltd
pusha
sub
mov
iret
mov
dec
inc
mov
jl
or
lea
mov
sub
ss
movsl
and
loope
xor
adc
jmp
clc
add
scas
xchg
ja
fisttpl
push
jecxz
dec
inc
jmp
push
xor
cmp
repnz
jp
pop
mov
fists
lea
pop
inc
imul
jmp
mov
arpl
xchg
add
stos
lret
mov
sub
sub
insb
mov
out
cld
aaa
pop
scas
mov
shlb
mov
je
inc
jmp
bound
jge
xor
mov
incb
mov
xchg
adc
push
in
or
jmp
pop
movsb
iret
ds
sbb
xor
outsb
fdivr
lret
movsb
lods
sbb
out
cwtl
fstps
insl
into
adc
dec
cmp
in
loop
jb
movsb
cmp
dec
fsubs
jb
pusha
int
mov
mov
pop
mov
xchg
ficoml
pop
movsb
cmpl
mov
out
and
jmp
pop
mov
inc
enter
js
jg
pushw
mov
popa
ret
xchg
test
sub
adc
xor
dec
push
aas
popa
sbb
sbb
mov
shlb
adcb
and
jb
push
xchg
out
xchg
je
aam
imul
sub
sub
adc
xor
loopne
cli
maxps
out
call
and
rorl
setle
es
dec
xor
sub
pop
adc
and
add
or
pop
push
imul
and
enter
out
push
test
cld
mov
lods
or
jmp
fdivrs
outsb
mov
mov
mov
cmpsl
lret
mov
test
outsb
cld
jmp
daa
ret
inc
imul
cmp
inc
movsb
mov
outsb
int3
mov
hlt
adc
xchg
aas
or
data16
enter
xchg
lock
mov
fldenv
cltd
fdivl
arpl
pop
sub
flds
or
mov
call
sti
stc
lock
add
dec
lea
adc
lea
xchg
decb
outsl
test
or
push
call
inc
add
push
cmc
fwait
add
ja
push
add
addl
xchg
add
lea
insb
fs
inc
movsl
js
inc
stos
jmp
ficompl
pop
and
inc
rol
or
mov
and
adc
popa
mov
add
popf
fisttpl
scas
insb
in
dec
inc
jae
out
cmc
test
mov
and
aam
cwtl
ds
pop
inc
pop
into
flds
notl
lea
imul
iret
jne
fwait
stc
rorb
jmp
loopne
daa
jns
and
adc
inc
jmp
mov
out
pop
pop
fmuls
int3
xchg
adc
test
dec
popa
fisubrs
loopne
adc
aas
jg
pop
sbb
cwtl
gs
cmp
pop
aaa
insl
in
pop
test
loop
int3
sub
mov
mov
inc
pop
cmp
mul
mov
cmpsl
subb
fcmovnu
rolb
jl
mov
or
mov
testl
stc
sub
int
cmpsb
shl
cmc
mov
adc
pop
sub
ljmp
and
es
lret
sbb
sub
cwtl
push
fdivs
push
int3
sbb
mov
mov
leave
jnp
js
mov
es
dec
push
xchg
adc
aam
lret
xor
push
adc
pminub
sbb
neg
mov
add
mov
je
stc
lret
push
mov
jbe
sbb
insb
and
daa
cmpl
fxch
shlb
mov
mov
scas
fsubs
pop
adc
ljmp
inc
lds
adc
inc
sbb
ss
in
xor
maskmovq
inc
repz
push
rclb
push
clc
adc
sar
mov
cmpsl
jle
add
inc
jo
cmpsb
mov
inc
leave
lea
sahf
and
push
je
idivl
sub
jo
sub
pop
daa
rcl
insl
mov
sub
cmp
iret
out
pop
test
pop
int
jbe
push
fiadds
pop
mov
je
leave
outsl
dec
xor
pop
cmpsb
mov
bound
pop
nop
lcall
movsl
mov
faddl
insb
mov
jl
mov
pop
gs
push
lahf
jg
outsl
push
mov
or
inc
inc
je
push
inc
sub
cmp
mov
cltd
subb
add
add
cmc
add
add
sarl
mov
sbb
push
mov
out
mov
ret
and
fadds
push
pop
mov
clc
dec
repz
xor
enter
inc
sahf
arpl
mov
cwtl
mov
arpl
int
pop
sub
add
lcall
dec
cmp
lcall
mov
test
adcl
push
xlat
sbb
adc
imul
int3
pop
rorb
imul
popf
mov
dec
dec
or
in
inc
jb
sub
and
aam
inc
xor
popf
int3
clc
xor
fs
mov
pushf
sti
fstl
sbb
and
jle
test
ja
or
xchg
and
jmp
adc
fsts
or
mov
repnz
mov
scas
jl
ret
stc
in
test
dec
mov
gs
dec
mov
jl
mov
push
push
pop
icebp
push
lods
jno
mov
mov
or
ljmp
fmul
pusha
insb
jnp
adc
lock
xchg
data16
and
pop
jecxz
sub
jnp
stos
mov
push
xchg
divl
push
in
push
xchg
aaa
dec
lock
sbb
hlt
lret
jl
rclb
push
pop
or
jecxz
xchg
mov
push
sbb
xchg
aam
enter
lahf
cmp
out
jg
daa
push
lcall
dec
aas
cmp
push
jns
adc
cmp
xchg
xchg
jbe
addb
nop
sbb
cs
xor
mov
in
jae
jge
sub
sub
sbbb
cmp
cmp
int3
stos
les
push
loope
movsb
sub
jne
lahf
testl
sbb
xor
icebp
xlat
flds
mov
ret
in
pop
jmp
test
inc
fsub
in
pop
ja
pop
jmp
xchg
xchg
dec
into
mov
pop
cmpsl
cwtl
sub
inc
cli
jnp
xor
xchg
add
dec
insb
sbb
ja
adc
inc
mov
pusha
sbb
fs
addr16
dec
push
incl
test
push
pop
fnstsw
lahf
push
pop
adc
add
cmp
sub
mov
pop
mov
push
pop
jge
pop
mov
popa
movsl
lock
push
fimuls
pushf
inc
mov
setno
xchg
xor
cmpsb
inc
repnz
pop
and
mov
jp
inc
movsl
fcomps
test
scas
lea
ret
gs
inc
pop
xchg
iret
sub
mov
add
adc
loop
nop
pop
lods
lahf
insl
pusha
dec
imul
add
lcall
cmp
ds
fdivs
cmpsl
int
add
outsb
jg
sub
and
add
and
push
ret
sbb
jne
rol
mov
insb
xchg
jecxz
scas
das
movsb
pusha
movsl
mov
cmpsb
push
jae
pushf
test
cmp
out
dec
mov
in
mov
repz
js
mov
addl
inc
icebp
mov
push
add
cmp
pop
sub
sbb
jge
sub
roll
mov
xchg
xchg
jno
add
fwait
bound
sub
add
jno
jne
and
cmp
mov
pop
es
pop
test
push
test
hlt
jl
andnps
flds
pop
mov
xchg
stc
push
mov
and
add
jle
mov
cmp
rcrb
mov
sti
gs
psrlq
xchg
lcall
add
lcall
fisttpl
dec
jl
and
cmp
ja
xchg
mov
jnp
mov
repz
sub
pop
inc
out
cwtl
movq
jae
imul
and
mov
mov
test
dec
lea
stos
jbe
mov
ljmp
pop
mov
sbbb
jns
inc
xor
inc
sub
leave
lods
repnz
push
fs
aad
imul
xor
push
cmp
ficomps
mov
jne
mov
adc
fs
scas
incb
xchg
imul
gs
fbstp
cmp
mov
pop
fldt
loop
lods
popf
decl
xchg
popa
mov
pop
jo
adc
rorb
test
add
fsub
sub
js
test
in
or
pop
sbb
adc
aad
mov
jl
pop
test
push
push
mov
push
mov
icebp
scas
fsubrl
mov
movsl
and
push
mov
xor
push
pop
outsb
sti
push
cwtl
jecxz
stc
loop
inc
push
add
pop
in
jbe
mov
inc
lods
xlat
add
int
xor
mov
push
out
inc
xor
mov
repz
addr16
in
repnz
sbb
pop
out
in
push
jle
pop
insb
pop
inc
mov
cmp
xchg
sbb
mov
jno
mov
push
xor
pop
cmpsb
xchg
arpl
lret
or
mov
mov
or
cwtl
mov
imul
int
bound
fildll
sub
cwtl
sub
mov
xchg
xchg
jmp
or
lcall
pop
xchg
outsb
add
mov
loope
mov
outsl
movsb
pushl
push
jb
in
inc
or
pextrw
outsb
jae
mov
rolb
xchg
ss
sub
rolb
dec
movsb
test
ds
mov
mov
fistpll
rolb
jns
xchg
cmp
sub
ss
shrl
dec
andl
lahf
add
push
inc
push
pop
jecxz
mov
sub
sbb
dec
rorb
subl
mov
test
jbe
lods
sbb
jle
insl
imul
movsl
ret
xor
jecxz
iret
inc
add
lock
fistpll
outsb
push
mov
or
fcmovb
mov
enter
or
inc
jmp
xor
in
rcrl
int
jmp
sbb
jl
adc
div
xchg
cmpsb
fsubr
and
mov
add
daa
cmpsl
lret
jno
fisubrs
lock
push
lods
sahf
orl
jg
jb
xchg
push
out
sahf
push
mov
stos
pop
rorb
or
lahf
cld
jecxz
and
pop
add
xacquire
fistpll
jle
fimuls
or
mov
and
movsl
leave
sub
or
je
dec
mov
bound
push
shlb
push
lock
adc
sub
cltd
pop
cmp
mov
cmc
addl
xchg
fwait
imul
push
loopne
das
mov
xlat
loop
mov
or
lahf
push
pop
push
test
ljmp
add
jge
add
xchg
adc
lock
and
popf
cmp
jg
bound
test
and
push
inc
pop
jae
call
push
call
xor
push
or
popa
push
imul
out
inc
push
jae
in
mov
ds
mov
cmp
inc
xchg
and
rcl
adc
push
fcmove
xchg
sbb
sub
add
testl
sub
cmp
in
out
fucom
out
dec
mov
je
jns
icebp
enter
and
call
mov
add
sub
jmp
cltd
pop
mov
inc
repnz
arpl
insl
shlb
stos
gs
mov
pop
es
pop
sbb
sbb
cltd
sarl
icebp
xchg
fsubs
sub
sub
mov
shrl
inc
mov
mov
aam
sub
jle
mov
cs
mov
sub
xchg
xor
iret
or
int
loopne
lods
dec
cmp
push
sahf
push
pop
sub
jle
stc
mov
adc
xor
cmp
addb
pop
cmp
jmp
pop
das
scas
xlat
test
loop
adc
jb
mov
inc
adc
xor
mov
ja
inc
dec
gs
jecxz,pn
mov
mov
pop
mov
lods
mov
jne
test
mov
std
cmpsl
fwait
adc
cli
pop
jmp
xor
dec
imul
mull
andl
shlb
adc
mov
dec
or
mov
sub
xor
add
pop
cmp
push
sub
xor
scas
in
ficompl
adc
leave
in
dec
xor
jae
outsl
push
dec
je
pop
inc
hlt
movl
sbb
or
mov
cmpsl
mov
sarb
adc
add
sbb
jnp
cmp
outsb
mov
gs
push
adc
push
sub
mov
jmp
stos
jnp
in
mov
in
jb
jo
add
pop
subl
push
repz
mov
add
inc
shl
push
adc
cmp
arpl
push
cmp
mov
mov
mov
and
jae
pop
sub
cli
fcoms
ja
in
sbb
dec
push
lahf
xchg
adc
jno
jecxz
mov
clc
add
and
lret
adc
in
fisttpl
sbb
mov
or
data16
sub
lret
addr16
int3
cmpsb
and
fcoms
iret
mov
inc
gs
pop
jmp
aad
cmpsb
les
pop
in
aas
lds
cmp
jg
test
clc
repnz
sbb
push
roll
adc
jmp
cli
aas
jle
xrelease
jb
add
mov
jne
push
cmp
pop
fistpll
adc
pop
push
sbb
push
xchg
fmulp
jle
sbb
inc
push
lock
rdpmc
push
lahf
push
xchg
inc
and
ret
push
stc
jbe
fimull
dec
rorl
mov
clc
in
push
pop
jg
or
jnp
pop
jg
lods
cltd
adc
mov
std
mov
pop
mov
cmp
mov
and
ss
std
sbb
sahf
sbb
int
loop
sub
lret
cmp
jo
xor
or
add
mov
jb
vucomiss
js
jns
push
jp
mov
into
xchg
xchg
jmp
inc
popa
aaa
pushf
mov
lods
mov
addl
ljmp
scas
aad
rol
movsl
xchg
push
mov
push
inc
jbe
call
in
popa
or
je
mov
fsubl
fistl
mov
int3
testl
outsl
dec
push
cli
and
inc
fs
mov
cmp
xlat
push
fidivrl
adc
cmp
mov
push
stc
das
das
test
popa
adc
movsl
loop
mov
mov
mov
in
adc
ljmp
pop
xlat
mov
add
stos
xchg
lcall
sbb
leave
cltd
inc
mov
xchg
jbe
adc
adc
push
ss
or
icebp
mov
pop
iret
sbb
or
sub
cmc
cs
push
stos
adc
cli
mov
push
in
fmul
mov
sbb
adc
jecxz
fldln2
cmp
pusha
dec
int3
push
sbbb
pop
pop
dec
mov
sub
push
iret
lret
xchg
popa
jo
jle
push
push
sub
fcomi
popf
gs
push
fs
scas
js
outsb
cmp
xor
loopne
leave
shlb
test
ja
adc
push
mov
rcrl
inc
loopew
hlt
movsl
mov
jg
adc
mov
inc
push
out
cmpsb
sbb
add
mov
mov
test
popa
mov
clc
mov
bound
cmc
addr16
nop
shrb
push
sub
leave
sbb
jo
aas
cmp
bound
adc
lods
push
adc
jp
xchg
push
dec
cmp
mov
std
inc
fstps
lahf
shl
outsb
add
adc
cmp
and
xchg
add
xlat
inc
pop
sarl
scas
lods
inc
jne
adc
jge
cli
inc
ret
add
jb
jge
or
lahf
jmp
push
daa
cmpsl
add
imul
ds
cmc
adcb
cltd
sahf
and
dec
sbb
clc
fs
jnp
rcll
xchg
xchg
mov
push
dec
pushf
daa
add
mov
sub
xorb
xor
jae
aam
adc
fisttpl
jno
out
adc
aas
popa
and
addl
mov
pop
pop
xor
mov
fs
in
inc
cmc
sub
packsswb
dec
ljmp
cmpsl
xor
cltd
insb
adc
jp
mov
stos
sub
rcrb
xor
mov
adc
scas
subb
or
dec
jno
addr16
outsl
lret
lods
ljmp
mov
xchg
je
shll
subb
mov
rcrb
das
cld
add
es
rclb
fisttpl
lods
ds
fwait
dec
dec
xor
call
mov
dec
dec
mov
xchg
add
mov
inc
adc
test
cmp
and
lods
adc
aad
fisubrl
jae
mov
ret
pop
mov
or
sti
xlat
dec
adc
clc
pushf
loope
push
into
jnp
out
cld
cmc
xchg
sub
jns
ret
loop
xor
in
pop
xchg
inc
mov
xchg
mov
push
jge
jne
jo
xchg
jns
or
loope
test
jb
push
movsb
mov
stc
lods
loop
sahf
and
adc
and
xor
out
loopne
adc
jmp
adcl
add
cmp
xlat
dec
ja
jnp
out
pushf
pushf
std
mulb
add
test
lea
push
push
mov
xor
cmpsb
dec
addr16
lock
iret
insb
stos
dec
stc
jl
mov
add
and
movb
lods
testb
pusha
inc
lcall
xorb
xchg
das
sub
jmp
cli
mov
lcall
lods
out
or
in
cmp
fcoml
les
movsl
xchg
jnp
mov
jle
push
or
xor
int
dec
push
movsl
cmp
adc
out
ret
lods
inc
repnz
adc
movsb
sub
xor
incb
in
sbb
test
xchg
enter
mov
push
stos
xlat
inc
stos
mov
insb
xor
inc
rcl
mov
call
cmp
add
xor
pop
rorb
cmp
movsb
in
aad
push
cwtl
test
add
call
sahf
int3
mov
xchg
cmpsb
cmp
aas
inc
jae
jb
push
mov
or
xchg
jb
xchg
lock
test
mov
sbb
or
pop
mov
lcall
fcmovnu
mov
push
sbb
aaa
mov
and
insb
aam
in
arpl
inc
or
popa
lods
insl
aaa
mov
int
sub
push
dec
adc
jg
lds
pop
mov
jae
sub
das
insb
nop
or
sub
testb
jmp
or
ficoml
negl
xchg
cli
insb
xchg
in
test
mov
in
xchg
dec
jb
jno
mov
adc
sub
xchg
rcrl
and
neg
es
ficoms
mov
mov
sub
or
xchg
push
push
std
into
stos
out
daa
inc
pop
shll
jmp
out
fnstenv
les
in
jo
cwtl
and
inc
xchg
or
jg
push
je
push
mov
add
aas
sub
fimull
dec
cwtl
push
fnstcw
negl
rcrl
xchg
push
push
mov
div
pop
mov
xchg
mov
inc
dec
inc
xor
lret
pop
test
mov
jmp
pop
movsb
out
jbe
loope
popa
mov
xchg
clc
cmp
mov
add
std
fdivrl
adc
lock
jbe
pusha
negb
scas
mov
addr16
mov
push
popl
ret
cmpsl
cltd
es
mov
pop
pop
ret
mov
roll
ljmp
mov
push
insl
das
inc
mov
icebp
push
cmp
stc
jns
push
loop
shlb
std
mov
mov
dec
scas
rclb
aad
rol
xor
mov
outsb
stos
and
cmpb
mov
in
int3
aam
jmp
xor
inc
out
mov
leave
cli
cmp
jmp
test
shlb
fstps
outsb
mov
rcr
pop
cmp
pop
push
clc
fcmovu
jbe
add
xlat
and
xchg
adc
mov
dec
faddl
dec
pop
imul
cs
or
imul
pushf
or
mov
xor
rorb
xchg
pop
adc
inc
jae
in
pop
dec
pop
ja
xchg
add
or
mov
xlat
inc
or
pop
or
mov
lds
andb
fwait
jle
mov
mov
jnp
xor
insb
jecxz
jo
cltd
aad
movb
movsb
sub
scas
rolb
dec
fidivs
outsl
sub
out
fidivs
pushf
xlat
xchg
push
hlt
jbe
inc
fwait
jle
out
ja
outsl
sbb
xchg
mov
cmp
imulb
or
daa
mov
jmp
push
push
and
cmp
fdivs
cmp
cmp
cmp
pop
outsl
lret
cld
lods
push
mov
mov
clc
adc
call
test
cltd
sbb
or
lea
sbb
fcoml
xchg
xchg
movsb
les
dec
mov
push
push
das
push
mov
sbb
std
jb
cwtl
xor
sub
sub
cwtl
outsb
pop
mov
inc
cmc
push
xchg
icebp
fbld
mov
call
pop
dec
or
testl
cltd
aam
cmp
adc
bnd
or
sub
mov
fdiv
sub
and
push
sbb
jne
das
in
pop
sbb
test
jnp
mov
cmpsb
pop
aam
xchg
nop
hlt
push
dec
mov
adc
push
cs
sarl
adc
subb
dec
push
bound
mov
popf
adc
sbb
ds
push
jl
jp
out
ficoms
push
je
sarl
std
push
stos
mov
push
roll
arpl
mov
mov
mov
subl
push
data16
sub
in
pop
lret
cmc
insl
or
xlat
aaa
xor
fnsave
mov
jge
mov
subb
mov
mov
out
fs
mov
fldcw
lcall
aaa
sbb
lock
xchg
aad
jns
push
xchg
scas
daa
lcall
mov
mov
shl
sti
sbbb
dec
push
dec
push
inc
pop
or
fnsave
mov
inc
add
insb
iret
jmp
cmc
scas
daa
fstl
fsubrl
xlat
push
into
sub
fs
push
adc
stos
or
mov
or
and
popa
pop
enter
dec
cmp
xchg
mov
pop
or
not
adc
sbb
and
repnz
adc
dec
mov
mov
std
xchg
test
mov
or
in
push
in
cmp
push
mov
jmp
xchg
mov
pop
mov
fs
push
cltd
push
cmp
mov
loopne
scas
sbb
ret
pop
insb
enter
insb
outsl
xchg
clc
xchg
mov
adc
call
mov
sub
mov
jmp
loop
pop
inc
repnz
xor
pop
or
xor
inc
and
sub
mov
mov
inc
jae
mov
xor
outsl
mov
test
pop
xchg
adc
pop
dec
mov
mov
mov
or
adc
sarl
xlat
fildll
pop
sahf
cmpl
jo
push
neg
and
pop
dec
lea
test
jno
xchg
xchg
ljmp
cmp
popf
add
adc
pop
push
fdivr
adc
and
out
cmp
out
rcrb
hlt
pushf
mov
test
inc
lret
repnz
sarl
ljmp
dec
dec
sub
or
cmp
shl
iret
push
xchg
mov
subl
in
push
jbe
push
xchg
movsb
stos
pop
ljmp
shll
iret
rcr
stc
sbb
test
mov
repnz
add
xchg
loop
mov
jno
out
das
push
movsl
cmp
es
out
jb
inc
pop
jnp
pop
cmpsb
add
iret
pushl
pop
jo
cld
les
ffree
cmc
mov
popf
aaa
inc
or
imul
pushf
cltd
push
stos
dec
jmp
fs
pop
xchg
mov
nop
incl
daa
pop
sbb
pop
popf
sub
mov
fcomp
jo
xchg
dec
mov
mov
shll
addl
pop
dec
xchg
mov
into
mov
jl
push
mov
jns
mov
loop
mov
xor
dec
clc
mov
push
mov
cmp
aad
dec
and
mov
mov
mov
pop
test
ret
sub
xlat
ja
mov
mov
pop
out
loope
fistpl
andl
sahf
popa
adc
mov
pop
inc
jns
cmp
pop
xchg
out
inc
dec
lds
ljmp
mov
mov
insl
aam
push
lock
mov
in
ret
jg
push
lock
pop
fwait
add
jns
sbb
nop
test
adc
pushf
mov
enter
xchg
xchg
adc
xchg
cmpsb
outsb
push
jmp
mov
mov
into
repnz
ret
into
notb
sti
jno
xlat
fldt
in
jae
pushf
testb
inc
ss
ficompl
adc
jecxz
cmpsb
dec
pusha
and
xor
fs
cmpsb
or
mov
mov
adc
fucom
sbb
or
notl
insl
xchg
aad
sub
stos
sahf
add
out
xchg
ljmp
into
lret
xor
and
lods
mov
ds
test
fisubl
into
test
adc
fsubrp
mov
aam
hlt
push
xor
dec
jo
push
mov
lods
pop
mov
rcll
sub
stos
push
jnp
sub
in
aad
sahf
aam
sub
pop
push
xor
adc
shll
fs
cmp
aas
mov
ret
cld
out
mov
adc
stos
popf
stos
dec
popa
lret
scas
dec
mov
out
stos
xchg
lods
xlat
jge
rcr
xor
out
sbb
sbb
in
popa
pop
mov
dec
or
js
fiadds
lds
mov
cmp
pop
xorl
lods
sbb
cli
pop
adc
dec
mov
sbbl
push
popa
mov
mov
and
incl
xchg
adc
jle
xchg
addb
mov
inc
cmp
cmpb
das
mov
inc
mov
sti
ret
int
outsl
cmpb
in
and
repz
sub
xchg
repnz
iret
in
mov
adc
cmpsl
arpl
mov
ficoml
xchg
int3
flds
roll
sub
jmp
push
adc
repz
pop
aad
fs
inc
aaa
shlb
xchg
cmpsb
cmpb
push
outsl
cmpsb
jle
fnstsw
push
xchg
enter
lock
push
std
jae
in
ret
jb
push
jge
sahf
sti
push
xchg
je
into
test
or
clc
stc
and
mov
jmp
enter
push
inc
lods
scas
out
mov
je
jae
pop
cmp
push
jo
push
enter
sahf
and
push
fisubrs
ds
or
jnp
xlat
push
and
dec
imul
mov
fmulp
mov
pop
popf
fisubs
xor
aad
call
add
dec
ljmp
das
pop
inc
xchg
rcrb
sub
sbb
pop
addr16
std
mov
cwtl
lds
test
stos
outsl
xchg
sbbb
push
sub
add
inc
add
leave
mov
adc
ror
mov
shll
pop
xor
sbb
scas
sub
aaa
in
sahf
xor
sbb
jnp
add
outsl
inc
fcmovnbe
jge
xchg
xor
sub
popf
mov
cmp
xchg
das
es
in
dec
or
or
inc
xchg
test
fdivr
pop
sbb
mov
sub
cwtl
push
stos
push
add
pusha
sub
adc
nop
sbbl
push
enter
mov
ret
fnstsw
adc
jae
push
jae
mov
xchg
out
mov
ja
scas
cmpsb
and
mov
popw
mov
lods
insb
mov
sbb
dec
push
pop
fnsave
mov
pop
iret
fbld
jnp
adc
out
je
mov
jnp
sbb
dec
push
dec
mov
xor
mov
inc
xchg
adc
push
xchg
js
mov
push
push
ljmp
mov
data16
out
jle
addr16
mov
lret
mov
aas
insb
xchg
sahf
daa
in
out
jge
icebp
cli
mov
ljmp
adcb
repz
sbb
lock
out
es
pushf
push
mov
adc
adc
sahf
adc
jg
out
out
ficompl
mov
scas
in
dec
cmp
sarb
xor
and
sub
fimuls
fisubrs
cmp
jl
cmp
insl
pushf
cmpsl
aam
fisttpl
hlt
aam
inc
xchg
test
inc
mov
loop
cwtl
addl
test
movl
mov
sarb
gs
xor
sbb
mov
pop
push
add
push
pop
ja
in
pop
lods
jecxz
mov
mov
inc
xchg
sti
ljmp
jb
test
mov
jno
imul
popa
pop
cwtl
inc
jp
lods
rol
mov
add
rcl
dec
mov
es
cmp
mov
xor
dec
sbb
jne
scas
ljmp
mov
ret
push
and
ja
iret
das
adc
xor
ds
lcall
xchg
arpl
mov
mov
mov
in
ja
push
push
jne
add
fimuls
frstor
pop
mov
stc
sbb
mov
enter
in
pop
out
add
lahf
adc
mov
xchg
mov
es
je
dec
mov
call
imul
es
loop
jle
adc
movsb
imul
mov
imulb
inc
fisubl
and
push
lods
and
inc
imul
repnz
and
ss
movsl
roll
inc
cld
jl
pusha
or
xchg
ror
test
push
std
push
mov
int
cmpsb
mov
lretw
push
insb
pop
int3
repz
jno
mov
out
and
push
cmp
stos
add
and
insl
mov
cmp
cmp
mov
or
in
cmpsl
adc
mov
mov
es
rclb
pop
hlt
pop
inc
lcall
and
mov
mov
in
xor
es
jmp
inc
cmp
push
inc
insb
push
jmp
enter
lret
mov
call
mov
arpl
insb
mov
xchg
in
pop
test
cmpsb
shlb
sti
sbb
out
hlt
xchg
adc
pop
testl
mov
mov
jg
or
lahf
pop
mov
or
in
arpl
outsb
adc
out
mov
fidivrl
mov
mov
mov
mov
into
insl
aad
mov
inc
push
xor
sub
daa
sub
mov
sub
add
shl
mov
cltd
sbb
in
shrl
dec
push
or
subl
pop
mov
repz
jae
into
mov
lea
sub
ljmp
mov
push
cs
aam
cmp
mov
pop
or
jnp
push
sub
cmpsb
jp
aaa
sub
pop
mov
inc
outsl
and
enter
cmc
adc
cmp
call
aam
pop
push
mov
mov
push
imul
inc
in
xor
adc
aam
jns
arpl
add
andb
into
imul
and
pop
adc
sarl
or
fbld
std
cwtl
mov
mov
dec
lock
add
fs
mov
into
movsb
out
fnsave
sbb
arpl
into
mov
xchg
jns
loopne
pop
filds
sub
ja
pusha
xor
mov
pop
and
mov
add
icebp
int3
repnz
push
fnstcw
ss
pop
add
fwait
sahf
lods
xchg
pop
cmpl
sbb
test
fwait
mov
fwait
mov
ret
inc
mov
lret
jge
ss
sbb
push
xor
stos
jmp
mov
dec
mov
jno
push
or
fs
add
movsl
fs
mov
cmpsl
add
sbb
ss
mov
sbb
fsubrl
mov
call
cmp
lcall
out
dec
mov
add
adc
mov
push
and
push
and
xchg
setb
dec
mov
in
pushl
cmc
addl
mov
cmp
cld
je
mov
mov
sbb
outsb
outsl
inc
movsb
ja
pop
lret
cltd
pop
push
add
push
movsl
push
xchg
jne
cmpsb
arpl
mov
xchg
in
xchg
fisttpll
test
jae
sub
sbb
pop
cmp
jmp
push
cmp
aaa
cmpsb
jg
inc
jae
mov
ljmp
insl
mov
cmc
inc
or
inc
jmp
in
fistpl
test
xchg
stos
scas
lahf
jbe
pop
int
or
or
mov
pop
lock
push
imul
and
in
jo
hlt
leave
lahf
mov
sub
pop
jns
out
test
lcall
lock
lret
push
stc
mov
mov
fldl2e
jge
out
pop
jecxz
sub
leave
repz
popf
mov
insl
jge
mov
int
mov
test
push
shlb
mov
lods
xor
aad
call
mov
outsl
pop
cmp
push
lods
mov
dec
mov
mov
imul
xchg
fistl
push
pop
dec
adc
lods
popa
cmpsb
inc
jb
cmp
xor
and
inc
dec
loope
sub
out
xchg
hlt
mov
popf
or
xor
adc
aad
rorb
xor
adc
and
adc
rcl
inc
sub
decl
jns
stc
and
jmp
cmpsl
dec
sub
pop
aad
ss
paddusb
mov
mov
cmp
mov
js
pop
rcl
cmc
mov
dec
mov
fnstsw
push
or
inc
push
xor
pop
lret
mov
push
dec
test
adc
icebp
inc
les
lock
push
pop
rcll
cmp
adc
dec
mov
arpl
xchg
push
pushf
std
cmp
movsb
pop
sub
jo
dec
data16
xchg
inc
inc
js
cmpsl
sub
repnz
iret
adc
insb
scas
in
or
stos
mov
cmc
inc
push
jecxz
lret
sbbb
dec
lahf
fstps
sti
add
inc
xchg
fwait
cli
or
xchg
cs
repnz
pop
rorl
jne
inc
adc
jae
sub
xlat
out
ret
icebp
inc
clc
aas
iret
ja
xchg
loope
xor
out
aad
or
ret
mov
addr16
xor
jge
pop
adc
sub
lock
push
push
xor
sub
popf
daa
or
xchg
or
or
xchg
call
shrl
add
push
pop
sar
cmp
add
rolb
lea
clc
call
add
cmp
daa
dec
cmc
xor
jecxz
and
dec
mov
jns
pmulhw
pop
and
outsb
mov
addr16
cmp
loopne
fwait
jmp
mov
mov
cmp
jmp
decl
dec
push
stos
aam
pusha
fcmovnu
inc
xor
adc
les
push
out
cmpsl
inc
pushf
mov
fwait
sub
pop
rorb
pop
xchg
sbb
xchg
xor
sahf
pop
mov
ret
cmp
cld
pop
lret
popf
mov
dec
inc
icebp
clc
push
sarb
out
mov
adc
push
addr16
das
xchg
inc
loop
lea
scas
pop
sub
lods
xchg
lea
mov
pop
test
jge
jge
jecxz
lods
mov
pop
out
sahf
fistpll
hlt
addr16
rcrl
js
stos
inc
inc
adc
cmp
adc
sub
mov
arpl
and
push
icebp
ret
xchg
sbb
out
bt
fs
jbe
in
dec
mov
sahf
adc
out
cmc
minps
into
ljmp
sbb
lcall
fwait
mov
add
lret
popf
mov
xor
enter
mov
in
xchg
inc
scas
xchg
mov
dec
lods
leave
icebp
lahf
jmp
in
lret
mov
jecxz
sub
sub
sahf
add
enter
pop
into
scas
popa
or
xor
mov
jno
push
fidivrs
push
lret
hlt
mov
mov
cmp
dec
fstps
add
das
xchg
out
ja
jg
xor
sub
arpl
sub
mov
lea
pop
idivb
add
std
xchg
and
add
addb
mov
imul
lea
rcr
mov
adc
test
xchg
xchg
stos
inc
scas
insl
aas
shr
push
loopne
cmp
lods
pop
rorb
xchg
in
xchg
aaa
jb
mov
add
and
dec
push
and
cmp
stos
daa
in
sti
icebp
dec
push
movsb
stos
jg
cmpsb
pop
insb
cmp
pop
fistpl
xchg
mov
jp
push
ja
cs
clc
repz
movsb
adc
fs
repnz
inc
dec
push
aam
outsb
inc
movl
outsl
loop
and
test
fldenv
movsb
call
sbb
sbb
xor
addr16
clc
sbb
scas
imul
sahf
mov
xor
insl
pop
lods
imul
push
outsl
pop
in
sub
and
and
sub
xchg
push
mov
mov
push
fiaddl
xchg
rcrl
lahf
test
or
jno
test
stos
push
out
test
add
pop
xchg
sub
in
sub
sub
sub
repnz
xlat
cmp
pop
mov
push
test
fstpl
and
sahf
aam
fstps
cld
mul
mov
sub
aad
jnp
aas
dec
or
cmp
add
mov
test
or
inc
sub
xor
cmpsl
and
cmc
and
mov
fistl
icebp
push
rorb
pop
mov
pop
pop
mov
clc
sbb
std
negl
loopne
daa
pop
sub
ss
mov
xchg
lock
mov
push
mov
xor
int
push
mov
mov
pop
dec
mov
outsb
movsb
call
not
xchg
pop
fisubrs
pop
jl
adc
pop
daa
cmc
sbb
push
adc
popa
insb
loop
nop
inc
rorl
ja
mov
std
dec
xor
rcr
outsl
sub
fcmovbe
in
or
add
enter
and
in
das
jno
movsl
xor
inc
iret
dec
sbb
pusha
aam
out
lahf
add
mov
out
jnp
jno
sub
js
fldcw
adc
cwtl
in
repnz
sbb
push
sub
jge
sti
pop
test
mov
sub
call
mov
leave
jp
dec
dec
test
int3
mov
ja
mov
pop
sub
sub
jnp
ficoml
stc
je
xor
pop
pop
sub
jle
cmp
sahf
movsb
or
xlat
add
jle
inc
out
addr16
push
and
movsl
xor
cmp
pop
shrl
mov
das
jne
fmul
shll
and
lret
pop
adc
mov
jmp
ret
ljmp
aad
lds
pop
cmp
jo
jno
rol
inc
or
dec
adc
fdiv
out
out
dec
aad
cmp
adc
in
mov
sbb
pop
push
mov
mov
lods
mov
mov
push
shrd
adc
dec
jb
xlat
jb
or
aas
xchg
jp
repnz
push
mov
push
call
out
and
jo
fwait
inc
inc
lds
stos
ret
sbb
lds
adc
out
jmp
or
and
inc
int
adc
addl
dec
int3
or
roll
adc
movsbl
inc
and
aas
test
mov
popa
cmp
mov
xchg
adc
mov
je
add
into
sbb
sbbl
pusha
sub
jbe
sbb
pop
push
mov
push
jp
cmpsb
dec
mov
ja
push
fsts
push
in
fnsave
mov
xorb
sbb
jo
xchg
nop
mov
jg
fst
clc
int3
in
xor
xchg
int
pop
xor
xchg
mov
xchg
jo
and
bound
lock
shll
outsb
test
xchg
push
pusha
or
paddb
jl
mov
and
test
inc
xchg
ja
sbb
in
jl
dec
mov
jae
jne
push
leave
push
js
sbb
add
push
loope
jbe
lods
mov
arpl
aad
int
dec
into
inc
and
out
sahf
or
sub
cmp
xor
pop
push
cmp
int3
jge
pop
xchg
sbb
adc
push
cmp
sti
mov
rolb
enter
jnp
mov
sar
scas
nop
mov
pop
pop
test
jne
call
push
ja
loop
add
popf
and
ficomps
fidivl
insb
mov
insl
adc
dec
and
inc
mov
jp
outsb
das
dec
movsl
shr
fdivp
test
xchg
fsubr
and
pop
sahf
push
jno
and
pop
int3
push
xchg
outsb
or
out
mov
inc
jbe
dec
jmp
mov
mov
mov
fs
adc
pop
add
enter
filds
lock
adc
aas
ja
xorb
fists
mov
mov
sbb
orb
sub
sbb
or
jne
je
in
mov
xor
sub
outsl
sbb
loope
pop
repnz
add
lock
sub
mov
sub
shrl
xchg
sbb
scas
in
gs
mov
xor
test
mov
cmp
jne
cmp
dec
pop
adc
inc
rcll
sti
push
daa
add
movsb
xchg
dec
push
in
push
or
mov
movsl
mov
out
jnp
loope
add
pushf
jb
push
imul
xor
cs
and
in
pop
bound
mov
jmp
dec
xor
or
dec
xor
mov
dec
pop
lahf
cmpsl
dec
es
fsubrl
cmpsb
and
mov
out
push
bnd
lock
leave
movntq
in
or
push
xchg
insl
or
inc
movsl
cmp
xchg
and
pop
ja
sbb
or
orb
xor
cmc
das
add
dec
mov
mov
ss
imul
sub
mov
insb
sub
and
cmp
in
inc
mov
push
push
outsb
push
and
sbb
xor
add
mov
ds
xor
xchg
loopne
mov
cmp
ret
push
jg
mov
movsl
pop
mov
repnz
call
shll
jp
push
in
pusha
cmp
sbb
shlb
lods
test
int
fcompl
pusha
loop
mov
mov
pop
std
sub
shll
push
mov
pop
pop
in
xchg
pop
pop
fwait
or
and
cmp
imul
aas
test
adc
insl
mov
daa
data16
ljmp
aaa
es
je
push
mov
and
xchg
mov
loope
ret
sub
ja
jae
loope
mov
into
push
cmp
pop
packsswb
dec
pop
lret
lods
jbe
hlt
xchg
pusha
cmp
and
call
mov
xchg
rorb
arpl
mov
add
or
pop
mov
adc
lea
jnp
out
push
inc
cmp
add
push
dec
lods
adc
xchg
adc
mov
push
into
pop
jno
dec
fistpll
inc
cld
mov
or
push
out
test
ret
test
adc
xchg
inc
jecxz
cmp
call
or
cmc
sbb
in
pop
lret
lock
out
outsl
es
mov
sbbl
insl
ds
cmp
jo
cmp
cli
enter
jo
sahf
lret
cld
xlat
hlt
imul
iret
xchg
sbb
cltd
sub
pushf
and
in
jle
pop
inc
mov
jne
jmp
jmp
and
pop
into
lcall
xchg
mov
or
push
sbb
or
rcrl
cmp
ljmp
and
mov
dec
cmp
gs
adc
bound
loopne
push
pushf
das
imulb
jmp
adc
loopne
inc
dec
pop
sbbb
push
inc
and
enter
sub
xchg
test
lret
and
xor
lahf
stos
out
shll
push
jns
add
rcrb
or
push
cmp
fxch
dec
aam
cmpsl
lcall
out
jg
dec
sbb
out
loope
fadds
ja
pop
mov
mov
fcoml
push
repz
cmc
xor
ds
xchg
jns
aam
sbb
mov
push
xor
sub
cmc
sbb
dec
and
mov
std
test
cld
ja
mov
mov
xchg
dec
in
dec
repz
lock
popa
mov
imulb
cmp
ret
test
mov
push
enter
in
mov
sub
and
push
jmp
cld
loop
push
pop
gs
push
jo
pop
mov
into
data16
mov
xchg
popf
xor
test
mov
ret
rorb
sub
add
add
add
inc
mov
or
dec
mov
or
add
add
dec
mov
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
