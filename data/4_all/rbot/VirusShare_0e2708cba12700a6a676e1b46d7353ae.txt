push
sbb
in
cmpl
pop
call
push
push
xor
push
call
cmp
lds
je
push
mov
push
add
mov
xchg
arpl
and
pop
or
push
sti
dec
dec
mov
das
push
pop
add
xor
sbb
jle
shll
decl
xor
call
push
push
aas
enter
das
adc
push
cmp
push
jg
jne
push
or
push
or
scas
pop
xchg
and
testb
sbb
push
ret
lret
push
inc
test
call
daa
mov
pushl
lds
adc
pop
lds
dec
jne
mov
adc
pushf
xor
jns
xor
dec
ja
mov
test
test
inc
add
test
push
imul
inc
inc
cmp
and
cltd
add
in
inc
dec
cmp
xor
mov
push
mov
push
push
mov
mov
push
xor
cmp
add
mov
pop
lock
push
call
sbb
mov
adc
mov
inc
mov
cli
jo
sti
sbb
lea
sbb
lock
arpl
add
add
pop
mov
xor
sbb
sbb
cld
std
push
movsl
and
mov
xchg
sbb
push
ljmp
in
inc
enter
push
pop
inc
jl
mov
or
xor
repnz
or
ja
sbb
push
push
dec
adc
das
mov
or
mov
add
adc
add
inc
dec
push
pushf
cmp
inc
mov
xor
cmp
les
das
mov
dec
pop
call
int3
out
fsubl
push
fbstp
add
jae
repnz
adc
sbb
test
int3
push
and
hlt
and
test
rcll
and
add
cmp
inc
sbb
inc
decl
inc
xchg
loope
sbb
and
jmp
sahf
aas
sarb
test
jnp
and
call
in
inc
mov
or
outsb
dec
and
push
xor
push
inc
sub
pop
jae
add
sbb
shlb
xchg
mov
aas
test
inc
movsl
dec
push
dec
movsb
cmp
xchg
lea
inc
in
add
mov
inc
es
sbb
xor
iret
clc
inc
push
adc
cmp
cmpb
inc
adc
cmpsb
cmp
inc
or
enter
or
mov
xor
push
std
pop
lret
es
inc
inc
jmp
fstl
or
sbb
bound
push
inc
pop
lret
pop
lret
enter
movsb
pop
subl
sub
sub
bound
pop
fdiv
enter
into
ljmp
ss
push
inc
clc
cld
xor
cltd
inc
mulps
xor
xor
jno
lock
dec
fists
mov
add
lds
cmp
daa
or
sbb
outsl
rcrb
clc
adc
sbb
or
mov
push
dec
push
mov
lock
out
add
sbb
or
and
clc
inc
push
lods
sbb
adc
add
rorl
jb
dec
pop
xor
punpckhwd
shrl
jge
inc
shrl
pusha
add
push
jne
and
or
in
lret
gs
repnz
nop
mov
jle
add
adcb
imul
aaa
sbb
mov
clc
scas
mov
loopne
js
in
mov
mov
and
clc
fwait
adc
pop
fdivrs
sti
setg
pop
push
mov
popf
push
nop
or
lea
movsl
or
movl
push
push
mov
icebp
inc
call
ficomps
fistl
dec
cmpl
xor
inc
aas
cwtl
inc
push
and
stc
into
adc
les
in
je
das
mov
into
mov
or
xchg
orl
nop
xchg
fldenv
pop
enter
mov
mov
add
loopne
xor
sar
sbbb
adc
enter
int3
pusha
in
cwtl
scas
or
adc
call
sti
push
sub
sarb
push
mov
les
outsl
out
add
xchg
out
imul
stos
and
clc
es
shll
adc
rorl
cli
push
adc
addb
or
push
mov
call
and
add
xor
add
xor
ss
pushf
adc
push
mov
jmp
popf
lea
imul
pop
mov
add
and
pop
cmpsb
or
addl
lds
ja
dec
rorb
pop
push
inc
push
movsb
adc
int3
add
mov
stos
lock
mov
inc
mov
nop
mov
call
enter
test
mov
dec
push
rorb
xor
inc
inc
add
or
mov
push
xlat
and
fs
sbb
jne
dec
mov
or
andl
jne
push
daa
sbb
dec
in
and
les
inc
push
adc
test
fimuls
out
loopne
add
xor
sbb
not
pushf
push
cmp
inc
adcb
pop
aam
fsubrl
push
jl
fcoms
cmp
jae
shll
xchg
inc
decb
fsubrs
xchg
repz
call
dec
scas
or
and
and
inc
dec
inc
and
mov
adc
rcl
inc
cmp
jbe
sti
shlb
pop
lock
inc
ljmp
and
cs
je
imul
out
ret
in
xchg
shlb
mov
mov
push
push
adc
stos
pop
js
fs
push
ss
pop
pop
pop
test
push
insb
xor
or
aad
fistpl
mov
test
sbb
call
xchg
push
sub
push
adc
push
mov
mov
jo
je,pn
sbb
mov
cmovo
add
add
cmp
fucomip
inc
rol
push
imul
ljmp
dec
push
pop
stc
pop
mov
push
and
push
xchg
cmp
fistpl
repz
pop
mov
cwtl
push
mov
jno
mov
dec
adc
lcall
ljmp
lea
sbb
push
dec
fstpl
cmp
lea
in
xchg
jae
ret
adc
add
in
xor
mov
jl
push
mov
fadds
add
and
cmp
adc
adc
adc
push
push
sarl
fidivrs
jecxz
mov
retw
push
adc
add
and
adc
or
popf
push
and
insb
insb
sub
or
jmp
sbb
mov
adc
adc
push
mov
mov
add
cmpb
and
adc
js
jne
push
push
pushl
mov
call
mov
and
test
ret
xor
adc
lret
repnz
jne
and
add
sub
xchg
ss
or
sahf
pop
sbb
xor
pop
fs
xor
das
dec
ljmp
cmp
mov
cld
xor
push
dec
push
jae
call
push
mov
dec
pop
mov
sbb
orb
fildll
shrl
subl
jns
or
out
cmp
jge
xchg
mov
pop
sbb
adc
or
xor
je
push
pop
jbe
lods
jb
fmuls
push
mov
or
cwtl
mov
dec
mov
add
and
sbb
call
test
lds
std
sbb
inc
rcr
push
int3
aaa
mov
cmp
idivb
push
mov
aas
push
nopl
add
mov
fxam
or
or
cmp
je
cltd
xchg
or
dec
xchg
push
rclb
push
enter
sub
or
adc
or
or
sbb
lcall
and
jp
xor
adc
call
adcl
push
xchg
add
mov
mov
or
outsl
mov
das
or
push
jge
enter
xchg
or
or
lock
ja
sub
sub
add
hlt
inc
cmp
xchg
mov
xabort
sbb
push
hlt
or
test
lock
inc
mov
dec
push
dec
sub
fldl
sub
mov
aas
mov
xorb
push
nop
adc
xor
add
push
cld
pop
mov
test
adc
push
sarl
ljmp
enter
cwtl
or
adc
sti
adcb
push
fcoms
inc
jge
push
dec
clc
imul
hlt
iret
or
testb
shr
cltd
loopne
and
lea
add
push
and
into
push
aas
xchg
sub
mov
mov
fadds
mov
repz
jne
cltd
or
and
lods
lds
mov
mov
mov
cs
add
xchg
enter
cli
addb
pusha
lea
xor
shrb
in
je
jl
test
in
pop
xchg
push
cltd
or
adc
rcll
inc
movb
sbb
sbb
cld
call
js
divb
inc
sbb
add
lret
jo
sub
push
push
or
jmp
or
in
mov
mov
inc
and
js
dec
xor
push
push
xchg
or
adc
pop
movsb
push
jmp
dec
xchg
jg
je
mov
add
adc
pusha
or
xor
cmp
test
jmp
int3
push
push
sub
push
sub
cmp
sub
mov
adc
in
xchg
cld
and
cs
mov
stos
xor
je
mov
sbb
inc
roll
adc
fs
outsl
adc
inc
dec
dec
xchg
mov
and
jno
adc
rolb
cmp
jg
mov
adc
mov
mov
dec
add
inc
or
adc
lock
data16
or
jg
sub
sub
sub
mov
push
lods
jno
mov
push
lcall
xchg
cmp
dec
pop
nop
lret
sub
int3
sbb
or
inc
or
dec
sub
nop
mov
cld
cmp
leave
fcmovnb
ret
aam
in
adc
lods
test
je
outsl
insb
adc
sub
push
sub
inc
xchg
cld
sbb
dec
lret
repnz
inc
dec
dec
xchg
stc
enter
loope
adc
mov
add
pop
push
lcall
adc
pushf
adc
inc
out
mov
push
aaa
and
int3
lds
pop
ret
adc
aam
ret
pushf
push
inc
and
lret
pop
dec
adc
lret
pop
dec
push
inc
sub
fisubrl
and
inc
mov
inc
or
sub
adc
add
mov
bsr
nop
dec
je
push
mov
or
mov
or
push
mov
loop
inc
das
xor
jbe
enter
data16
fsubs
sub
movsb
bound
sub
xor
bound
or
add
pop
cmp
sbb
dec
sbb
mov
cmp
jmp
ljmp
lds
jecxz
mov
pop
or
clc
and
jb
pop
or
push
push
call
xor
pusha
stos
inc
imul
push
mov
push
lea
lock
adc
jmp
push
repnz
sbb
sbb
nop
bound
inc
or
cmc
dec
jmp
adc
xchg
sub
jmp
sub
dec
test
jmp
sbb
xor
sub
hlt
cmp
inc
xchg
int
scas
mov
push
and
sbb
adc
cmp
mov
add
fnstenv
jne
cmp
test
xor
push
jne
pop
add
pop
not
pop
ret
mov
mulb
or
pusha
adc
add
and
fcompl
and
call
and
mulb
push
rorb
out
adc
adc
inc
or
je
fmuls
outsb
scas
lret
iret
mov
dec
scas
aas
push
adc
pop
shll
int3
mov
clc
inc
mov
je
push
adc
inc
lea
add
shl
xchg
push
sbb
and
add
adc
and
sub
xor
and
xchg
daa
inc
xchg
aam
dec
dec
shlb
jnp
popf
sbb
jge
cmpl
fisttps
fsubrl
popf
adc
in
xorl
inc
push
and
inc
push
aad
aam
cmp
adc
adc
dec
out
nop
cmpsl
inc
imul
xor
sub
jge
adc
sbb
lcall
call
and
arpl
dec
arpl
aad
outsl
add
faddl
popa
sbb
mov
push
or
add
mov
add
imul
pop
addr16
adc
jno
aas
fs
inc
adc
sbbl
lea
imul
or
iret
add
call
test
xor
pop
sbb
adc
pop
ret
mov
inc
fnstcw
adc
sub
add
pop
mov
add
and
inc
mov
out
adc
and
dec
loopne
call
les
mov
rclb
add
ja
shlb
push
in
sbb
cmp
aam
lret
jl
mov
in
int
jae
imul
xor
adc
pop
sub
and
roll
rcrl
dec
in
test
adc
ljmp
jmp
movsbl
rorb
sub
inc
pusha
cmp
int
scas
shlb
test
and
xor
insb
xchg
out
jecxz
test
push
cs
adc
cld
xchg
push
mov
cmpb
mov
push
jmp
scas
in
push
add
xchg
mov
add
adc
mov
inc
adc
loop
inc
cld
enter
cmp
mov
sbb
cmp
iret
jmp
popf
cmpsl
push
out
adc
push
inc
push
lods
xor
push
ret
popa
dec
hlt
inc
add
and
push
and
out
mov
inc
fmuls
mov
xor
xor
push
push
jmp
xchg
cmp
insb
je
es
imul
call
jnp
cmc
movsb
fwait
push
call
inc
repz
das
and
les
dec
sub
xchg
sbb
mov
bound
clc
pop
inc
jecxz
push
cltd
add
jbe
mov
popa
adc
inc
dec
add
mov
mov
test
mov
mov
js
adc
inc
call
sbb
leave
and
flds
add
and
imul
cmp
cwtl
ljmp
into
push
lods
es
jmp
adc
decb
dec
pop
cmp
ret
fwait
popa
add
and
fwait
mov
push
jg
push
inc
push
divl
roll
add
je
pop
mov
jl
xchg
arpl
inc
or
inc
mov
and
jo
and
cs
push
or
adc
push
jecxz
mov
xor
xorb
jo
ret
inc
push
dec
pop
xchg
insb
insl
push
push
dec
ljmp
dec
fmuls
fs
dec
mov
pop
xchg
and
and
or
mov
adc
xor
rcll
and
shlb
lcall
adc
cmp
pop
jge
inc
shlb
hlt
push
push
inc
mov
mov
cwtl
add
faddl
push
sbb
inc
movsb
push
xchg
pusha
testb
cmp
clc
in
aaa
scas
adcb
cltd
insl
mov
in
xor
jl
leave
pop
in
xor
adc
dec
icebp
nop
jns
in
test
cmp
xor
or
test
cld
pop
lock
push
aas
or
leave
xor
cmp
cmpl
and
jb
cmpb
mov
movsl
mov
mov
lods
scas
ror
popw
push
mov
rep
repz
mov
inc
mov
sbb
int3
arpl
dec
adc
repz
icebp
xor
sbb
shrl
add
adc
dec
movsb
mov
xor
loopne
fnstcw
nop
push
adc
sbb
dec
out
adc
rclb
or
xchg
push
mov
shll
cmp
pushf
incl
pop
sbb
adc
sbb
in
pop
jecxz
loop
xlat
shl
hlt
les
in
lea
loop
xlat
dec
loope
dec
arpl
jmp
rep
mov
dec
dec
xor
js
xorl
test
dec
test
push
push
sub
arpl
std
sub
das
add
out
inc
iret
rcll
and
fiadds
add
push
mov
push
dec
pop
fbstp
ss
loopne
mov
flds
push
xchg
rorl
xchg
enter
xlat
shr
pop
les
jl
fwait
lods
inc
adc
inc
ja
je
xor
mov
cltd
push
pop
cmp
or
mov
mov
push
adc
test
rolb
cwtl
adc
mov
and
mov
inc
mov
and
mov
push
lock
or
lcall
adcb
xor
pop
insb
repz
mov
cmp
sbb
cld
out
test
xor
call
and
xor
repnz
pusha
or
mov
lea
mov
nop
and
test
jl
ljmp
mov
mov
fs
sub
mov
ja
add
inc
push
call
inc
mov
sub
and
push
mov
xchg
xor
jle
les
inc
sbb
xrelease
pop
cmpl
test
add
dec
call
mov
inc
adc
adc
add
daa
hlt
xor
or
fistl
dec
arpl
add
frstor
mov
stos
jnp
push
pop
jmp
adc
sbb
lea
lock
aam
call
dec
les
xchg
mov
mov
and
cmp
push
icebp
cmp
int
xor
ljmp
push
push
cltd
xchg
xchg
xchg
cmpb
popf
lods
cld
cmp
sbb
mov
int
pop
fwait
mov
mov
dec
and
add
jmp
mov
mov
test
push
bound
jbe
in
pop
xor
fwait
xchg
xor
dec
loopne
sub
dec
xchg
or
jno
test
inc
cmp
push
mov
cmp
pop
xor
fcoml
pop
aaa
or
pushl
sbb
dec
aas
leave
sbb
push
dec
loope
dec
inc
icebp
les
out
inc
dec
repz
and
add
mov
xlat
pusha
sti
jne
push
jmp
pop
push
cmp
daa
je
adc
add
pop
dec
lahf
mov
pop
pop
push
int
or
inc
pop
cld
jmp
scas
sub
or
sub
pushf
xor
movsl
xchg
adc
pop
or
std
mov
jb
mov
xor
dec
push
lea
xchg
or
fimull
adc
jb
xor
dec
add
push
ds
dec
stos
push
and
dec
fs
dec
lock
and
cmp
sbb
sbb
out
sbb
lock
enter
in
or
xor
lea
mov
pop
xchg
add
rcrb
mov
lcall
nop
add
cmp
movsl
xor
mov
data16
fisubl
cmc
inc
outsb
xchg
add
add
insb
and
hlt
jp
mov
orb
js
xchg
jmp
stos
push
xchg
sbb
mov
and
cmpb
mov
sti
test
and
adc
sbb
out
sub
add
jnp
and
popf
dec
rorl
or
outsb
and
testb
scas
outsb
leave
and
incl
jb
push
mov
dec
mov
sbb
shrb
push
ss
push
jge
adc
pop
fnstcw
jns
xchg
add
test
sbb
mov
mov
aas
and
mov
xchg
adc
into
or
add
mov
aam
or
pushw
sbb
push
dec
fdivr
mov
call
movzwl
cltd
mov
stc
push
dec
sbb
js
xor
inc
in
mov
outsl
in
jnp
jl
repz
call
jnp
or
add
push
push
test
push
jnp
pop
in
adc
rorl
push
add
nop
ficompl
rcrb
and
pop
rorl
jecxz
adc
clc
push
lods
mov
push
inc
mov
adc
pop
pushf
es
in
cwtl
mov
and
add
insb
sub
add
push
pop
adc
jo
lret
outsl
cld
mov
roll
aas
add
pop
in
sti
push
pop
cmp
stos
xor
or
push
xchg
sbb
sbb
mov
or
aad
cmpsl
fdivl
fsubs
fdiv
pop
add
xchg
push
push
dec
xchg
mov
and
dec
decl
add
sbb
sbb
cmp
je
cmp
push
push
xor
mov
pusha
xor
or
xor
push
xchg
inc
xor
xchg
sub
movsb
xor
sbb
inc
shll
push
ja
imul
je
sub
adc
and
cwtl
push
cli
enter
jl
in
sbb
adc
mov
cmp
pop
push
sub
mov
jno
cwtl
or
push
mov
jl
and
xor
cmp
insb
jbe
jmp
loope
xchg
fisubs
pop
nop
jb
sbb
sbb
jl
fwait
pop
in
push
add
shll
adc
dec
mov
push
nop
movsl
pusha
push
cmp
das
loope
test
and
add
dec
in
outsl
sbb
jmp
xchg
and
mov
xor
repnz
mov
mov
lcall
xor
repnz
cld
fsubl
cs
and
lea
icebp
cmp
fs
jae
pop
sbb
inc
cli
cld
inc
jl
dec
sub
sbb
cli
test
inc
std
and
fnsave
loop
cli
adc
loopne
inc
scas
shrl
pop
out
mov
in
push
sbb
xor
in
inc
and
rcl
test
inc
mov
js
shrb
adc
or
mov
nop
mov
dec
lahf
or
lret
add
jae
or
sahf
jbe
imul
jg
jp
ficomps
fdivl
cmp
ja
aas
mov
shr
push
es
outsb
push
repnz
xlat
leave
add
jge
add
ljmp
add
das
sub
mov
ja
pop
sbb
add
je
mov
mov
xchg
add
push
xor
dec
mov
push
xlat
fisubrs
add
xor
sbb
div
lds
mov
or
arpl
jo
in
ja
ja
or
dec
je
fiaddl
stc
sub
cmp
dec
push
sub
xchg
jo
add
mov
inc
add
push
movsb
fs
pushf
and
and
xor
insl
or
orb
or
fstpl
sbb
push
push
imul
jg
icebp
sub
movsb
pop
mulb
jle
shlb
jmp
push
add
stos
xchg
jo
sbb
sub
inc
inc
xchg
test
jnp
jp
pop
test
cmp
fldl
push
mov
mov
jecxz
add
push
jle
pop
sbb
add
xchg
and
mov
adc
push
out
test
xor
jecxz
dec
das
xchg
xchg
push
addr16
data16
and
dec
repnz
fsubr
call
inc
push
mov
push
or
add
pop
sbb
pop
inc
daa
mov
sub
adc
pop
sbb
int3
loop
pop
sbb
jnp
mov
rorb
leave
loopne
or
jle
mov
xor
inc
cmp
and
jb
mov
gs
push
and
xchg
rorl
ljmp
mov
cmc
and
dec
pop
shlb
outsl
or
push
loopne
xchg
push
inc
and
adc
cmp
ret
push
or
push
aam
pop
push
push
inc
pop
cltd
idiv
test
shlb
sub
jmp
ret
in
mov
mov
inc
dec
lea
dec
enter
repz
data16
jbe
push
movsb
aas
pusha
pop
sub
xchg
imull
cmp
and
push
sbb
syscall
push
mov
ret
fildll
inc
inc
and
nop
xor
sub
xor
sbb
iret
ds
lock
adc
or
mov
in
xor
lock
xchg
or
cmp
pop
xchg
insl
rcrb
pop
push
sub
adc
clc
rep
jne
lds
cwtl
add
inc
lea
ja
repz
sarb
jge
pop
dec
mov
repnz
in
fs
hlt
xor
mov
mov
and
in
push
call
ret
rorl
xchg
mov
push
sub
push
repz
lock
xor
sub
cld
cmp
and
cmp
enter
jmp
mov
xchg
ret
mov
sbb
mov
sbb
iret
test
push
repnz
and
adc
lret
cmp
push
pop
mov
sar
mov
jb
or
andb
jle
xor
push
in
sbbl
adc
outsb
or
faddl
push
in
es
xor
sub
mov
test
les
jns
enter
inc
scas
xor
push
xchg
push
cld
gs
sub
fcoms
sbb
push
jg
test
data16
xchg
pop
out
cmc
insb
scas
pop
xorl
add
call
aad
push
aad
adc
pop
lock
push
lods
sub
xchg
adc
xchg
dec
and
mov
jg
add
cmp
sub
into
pop
adc
dec
inc
sbbl
or
jb
and
aas
imul
pop
int3
rcl
pop
xor
mov
test
pop
push
and
jne
mov
movsb
enter
inc
mov
sub
jns
test
inc
cmp
sbb
aad
mov
sub
sub
in
movsb
sub
std
adc
inc
cwtl
mov
cmpsb
dec
hlt
sbb
adc
subb
push
add
mov
push
xchg
punpckhbw
mov
inc
jge
cmpsl
enter
cwtl
xchg
xor
and
in
or
daa
addb
les
pop
pop
test
in
pushf
push
sbb
and
jge
fs
or
movsb
sub
xchg
pop
mov
fs
lret
or
fs
sbb
xor
es
mov
dec
pop
jecxz
inc
pop
fcomp
sarl
mov
push
hlt
int3
ja
dec
mov
mov
sbb
add
mov
dec
sbb
jle
gs
inc
icebp
mov
or
stos
lods
jnp
mov
dec
mov
jno
sbb
cmpb
enter
ss
xchg
or
in
cmp
and
sbb
push
lds
push
push
sbb
jg
or
sub
enter
in
dec
lods
mov
push
imul
pop
loop
adc
hlt
test
xchg
sbb
stos
in
mov
sbb
mov
lea
xor
xchg
lods
test
mov
add
push
dec
pop
addr16
in
dec
jl
sub
or
ja
add
inc
pop
add
imul
adc
adc
hlt
jg
push
call
ret
je
push
adc
push
icebp
ret
xor
in
mov
or
enter
and
sbb
push
xchg
sub
sbb
and
psubsb
mov
mov
mov
mov
push
repnz
dec
pop
and
push
cli
cmovle
push
push
sub
in
sub
gs
mov
or
out
cmpl
push
dec
mov
sbb
test
mov
inc
repnz
or
push
xchg
or
xchg
mov
and
je
push
out
xor
int3
pop
out
inc
int3
push
mov
pop
sub
adc
aam
dec
mov
push
dec
mov
aas
fs
in
inc
and
adc
shr
mov
sub
adc
or
cmpsb
push
push
push
and
int3
mov
rolb
cmpb
call
jb
push
sub
xor
les
cs
icebp
add
pop
sub
sbb
adc
and
jle
aaa
sbb
call
pop
push
xor
icebp
fldl
out
push
add
jb
cmpw
ss
test
dec
adc
call
ret
loop
cmp
pusha
push
jge
lea
xor
pop
push
sub
xchg
mov
xor
mov
inc
int
ret
cld
lods
push
scas
xor
jbe
xor
pop
mov
inc
daa
pop
pop
xchg
lods
ret
scas
std
mov
and
pop
pop
cwtl
adc
push
mov
loope
or
cmp
cmp
and
mov
out
xchg
sti
sbb
sub
popf
dec
faddp
jmp
test
ljmp
push
mov
dec
adc
lcall
insb
movsb
push
js
les
or
adc
loopne,pt
and
mov
sbb
add
mov
pop
dec
rorl
mov
xchg
clc
push
bound
sbb
data16
cwtl
xor
sarb
enter
test
and
add
mov
int3
repz
pop
mov
jne
imul
cltd
dec
roll
cmpsl
sub
mov
pop
or
sub
das
inc
pop
sbb
int3
and
inc
add
cwtl
cmp
jb
lret
dec
das
imul
out
dec
aam
sub
and
xor
sbb
sbb
jl
shr
and
mov
sub
push
aaa
das
test
sbb
pop
add
test
xor
cmp
xor
cmp
pop
shl
lock
push
pop
hlt
pop
mov
push
push
dec
daa
dec
lahf
pop
fs
jne
movsb
lcall
push
mov
pushf
mov
sbbl
xchg
hlt
jae
dec
int3
and
fmuls
shlb
or
je
mov
or
dec
in
outsb
mov
cld
and
jb
and
push
push
in
add
fs
xchg
xlat
and
imul
push
inc
mov
les
mov
push
jb
pop
xchg
push
dec
adc
pop
lds
pop
push
push
pop
ds
mov
pop
outsb
cmp
andb
idivb
xor
jb
loopne
mov
movsl
or
xorb
mov
jge
sbb
inc
inc
mov
xchg
or
pop
cli
push
mov
push
lea
sbb
add
dec
or
push
flds
fimull
leave
push
sub
xor
sbb
mov
jne
push
cwtl
mov
mov
pop
dec
andb
call
rcll
lock
les
cmpsb
cwtl
je
cmpsl
xchg
xchg
ljmp
xchg
aam
sub
xchg
sub
mov
mov
inc
add
pop
test
sub
stos
mov
test
es
lock
pop
add
add
cmpl
je
mov
or
adc
jne
fdiv
jge
jle
test
ret
mov
adc
xor
iret
xor
push
xchg
out
mov
cmp
pop
test
jmp
sbb
test
xchg
add
jbe
push
xchg
loop
in
push
sbb
sub
or
enter
sahf
sub
add
cmp
jl
xor
add
clc
jno
mov
xlat
jle
mov
push
je
shl
call
scas
push
fsubp
push
cmp
mov
subb
push
jno
shl
iret
add
loopne
or
pop
rclb
leave
loop
sbb
ja
int3
cmp
imul
mov
out
sub
jle
mov
addl
movsl
daa
mov
test
fbld
and
rcrb
bnd
xor
pop
pop
xor
je
cmp
je
addb
inc
addl
pop
call
nop
inc
cmp
add
push
popf
ret
inc
jmp
dec
inc
mov
sbb
out
push
pop
inc
pusha
adc
pop
jmp
orb
mov
and
mov
pop
stc
out
adc
call
in
adc
test
sti
or
xor
sub
rcrb
scas
adc
aad
cltd
push
mov
push
xchg
imul
mov
jl
xor
fdivl
xor
loope
mov
push
mov
shrl
and
mov
enter
int3
xor
lret
clc
and
dec
jge
pop
fucompp
pop
add
sub
push
popf
cmpsl
sbb
sbb
int3
mov
push
inc
ror
mov
inc
mov
jecxz
xor
add
and
movsl
mov
add
jge
test
or
into
push
push
loope
andps
or
mov
xchg
sbb
in
push
and
pusha
xor
dec
insb
jecxz
lds
icebp
or
imul
xor
cmp
jbe
cmp
test
inc
loope
jb
orb
adc
or
test
push
cmp
push
push
adc
inc
shr
lock
lahf
dec
xchg
adc
xor
jg
dec
mov
into
jbe
cmp
inc
shll
mov
mov
test
sub
dec
aas
cmp
push
or
adc
jmp
cld
push
cli
popf
in
mov
clc
add
call
sbb
lock
push
xor
jne
inc
movsb
push
push
cmp
and
xchg
fs
dec
adc
push
mov
negl
xchg
nop
push
sub
xchg
rorl
or
sbb
pusha
inc
stos
cmp
inc
mov
push
movsl
pop
je
cmp
and
adc
lret
cmp
cmp
sub
xor
adc
enter
xor
es
lahf
fdivr
or
int3
xor
sbb
loopne
dec
xor
call
cltd
sahf
jl
ret
adc
addb
and
inc
pushw
push
std
les
movaps
scas
inc
nop
int3
enter
inc
mov
pop
adc
jecxz
daa
or
jnp
xchg
cltd
xchg
push
movsb
mov
sub
icebp
aam
fcompl
ds
loop
invd
push
dec
and
nop
stos
subl
clc
sub
inc
das
int3
adc
adc
xor
push
ret
dec
push
jp
adc
and
sbb
aam
sub
pop
xchg
roll
xchg
push
sub
pushf
xor
pop
and
xchg
das
pop
in
mov
push
dec
inc
pushf
nop
push
sub
push
sub
mov
mov
mov
inc
jle
cmp
sub
push
sbb
popf
gs
jmp
mov
sub
in
and
lds
pop
jmp
ret
enter
jp
push
pop
mov
mov
jne
or
ret
lcall
nop
int3
inc
cmp
pop
shll
sbb
stos
popa
nop
ret
int3
mov
pusha
pop
ss
push
hlt
jne
push
xchg
lock
fcomps
or
or
bnd
mov
xor
sub
push
adc
loopne
cld
leave
push
ret
subb
imul
xchg
data16
std
popf
in
mov
test
pop
imul
push
sbb
pusha
rolb
or
jne
push
jno
adc
arpl
mov
dec
jno
lahf
dec
imul
push
sub
leave
pop
adc
mov
cmp
cmp
lock
insl
adc
in
mov
xor
xchg
add
mov
es
inc
dec
call
jl
mov
lea
push
sti
ficomps
mov
sbb
sbbl
mov
mov
or
pop
adc
cs
xchg
movsl
jbe
stos
fs
dec
adc
lea
mov
inc
pusha
out
adc
fcomps
sub
inc
fildll
femms
xor
mov
movsl
or
aad
or
dec
dec
loope
sbb
inc
add
lret
sub
mov
or
adcb
lretw
jmp
lret
bound
lret
push
adc
leave
test
mov
adc
decb
sbb
pop
push
mov
add
jne
mov
fs
push
jmp
mov
adc
out
punpckhwd
shlb
in
inc
movsb
mov
cmp
rolb
adc
cmp
jmp
fnstsw
incb
lea
popa
loope
fidivl
push
icebp
sub
les
aas
adc
sub
outsb
data16
inc
push
sub
mov
xchg
popa
sub
inc
mov
push
sub
dec
adc
push
inc
clc
add
dec
cmp
xlat
sub
mov
in
lods
jb
push
cmp
mov
jmp
dec
das
push
sub
adc
xor
loop
cltd
stos
or
pusha
mov
call
clc
pop
jb
popf
inc
xor
mov
or
jmp
mov
divb
xor
lods
les
cmpsl
inc
lret
sbb
incb
jae
cmp
gs
xor
lods
mov
xor
sbb
inc
call
and
aas
mov
loop
and
insb
push
or
clc
mov
xchg
lds
test
or
mov
mov
dec
jne
push
es
sbb
lahf
lods
in
call
mov
bound
sub
adc
push
push
imul
jecxz
in
jno
sti
sbb
mov
sbb
stc
or
aad
cmp
lods
mov
repnz
in
dec
fisubrl
pusha
outsb
pusha
xchg
rorl
sbb
fisubl
xor
sti
and
in
xlat
cwtl
sbb
enter
call
dec
dec
xor
or
mov
mov
dec
ficoms
pop
movsl
roll
stc
cmp
sbb
cmp
sub
setne
push
dec
add
popa
lret
pop
testb
call
sub
scas
stc
push
push
pop
push
sbb
pop
inc
pop
jge
call
inc
add
mov
imulb
fs
fsubrl
sub
pop
setno
cmpb
push
and
fsubl
or
rcrl
adc
jno
fs
bound
mov
fists
jle
mov
cmp
mov
jne
xchg
adc
sbb
hlt
adc
inc
movb
subl
sbb
and
sub
inc
pop
xchg
and
cmp
loop
push
inc
arpl
sub
cmp
jb
lret
in
loop
sub
or
adc
repz
test
dec
push
pop
in
sub
adc
pusha
dec
adc
je
mov
pop
das
jmp
mov
fwait
or
out
movsl
pop
incb
rcrb
test
pop
inc
rcrb
call
and
push
pop
aam
adc
lods
insl
mov
inc
orb
test
sub
add
inc
cld
loope,pn
mov
jmp
aam
ret
jl
mov
push
addr16
clc
or
imul
pop
add
ja
push
push
stc
sbb
pop
je
imul
cmp
adc
push
gs
movsb
adc
rcrb
out
jge
xchg
pusha
aam
xor
mov
mov
enter
sub
push
cltd
pop
mov
lea
leave
adc
xchg
push
fwait
adc
sub
test
adc
and
xchg
push
pop
test
push
mov
lock
jmp
rorl
xchg
add
insb
cli
adcl
js
inc
or
fisttpl
cld
lret
mov
xchg
lock
popf
add
mov
bound
push
and
cld
and
je
int3
lock
xor
push
insb
gs
mov
pop
pop
shr
dec
jae
test
int3
cmp
enter
call
sub
cmp
lret
out
adc
or
sbb
inc
and
xchg
popa
inc
sbb
in
inc
mov
fs
and
or
push
sub
sbb
mov
hlt
ss
push
and
or
add
out
dec
jne
and
push
xchg
int
test
movsl
sub
or
mov
pop
lds
js
mov
out
hlt
push
pop
add
add
mov
rolb
aas
mov
push
xor
cmpsl
sub
movsb
mov
fsub
mov
or
xchg
sbb
or
inc
or
lret
mov
adc
xchg
rorb
mov
or
ja
test
adcl
xchg
insl
or
add
and
push
and
cmpsb
iret
outsb
adc
aas
loopne
mov
clc
fwait
adc
pop
and
sti
cmp
and
or
sub
push
bound
and
mov
stos
xchg
xor
loope
xor
and
xchg
js
loop
or
add
sub
adc
push
outsl
lock
cmp
clc
push
pop
dec
dec
push
jbe
or
les
hlt
or
adc
pop
sbb
sbb
js
or
subl
cmp
and
mov
jp
xorb
jmp
inc
and
mov
call
movsb
push
pop
outsb
shlb
testl
mov
xchg
push
jbe
or
mov
or
dec
pop
popl
pop
adc
or
and
or
les
inc
push
mov
cmp
mov
or
sbb
jmp
and
sbb
or
push
push
popa
call
nop
jno
mov
insb
mov
xchg
sarb
adc
mov
sbb
xor
test
cld
adc
sbb
adc
imul
cs
push
les
adc
fs
outsb
lea
mov
rclb
and
movsl
imul
sub
push
push
pop
dec
ret
xchg
add
mov
das
mov
sub
or
insb
push
ljmp
cmp
jge
jge
pop
or
add
push
neg
stos
test
sbb
mov
jle
mov
scas
sub
bsf
scas
mov
xchg
xchg
xchg
push
out
pop
xchg
inc
stos
mov
test
call
sahf
push
cmpb
pop
jne
sti
add
push
inc
call
das
ljmp
nop
fsubl
loope
push
lods
outsb
push
xchg
mov
sbb
sbb
mov
mov
xchg
adc
je
testb
dec
add
push
mov
dec
lock
pop
mov
and
push
add
xor
and
rolb
mov
out
or
lock
nop
and
popf
in
add
call
adc
sub
push
push
adc
xrelease
lds
mov
dec
push
fdivl
rep
sub
jp
jne
inc
fs
mov
imul
leave
mov
lock
xor
fsubs
mov
mov
out
aam
enter
out
pop
pushf
push
xchg
xchg
pop
add
enter
and
dec
xchg
std
movsb
jg
and
les
xlat
push
mov
outsl
push
dec
push
mov
pop
imul
add
dec
insl
mov
mov
push
fistps
lea
addr16
jmp
lret
adc
jmp
sbb
enter
push
adc
cltd
aam
mov
sbb
imulb
pop
mov
adc
pop
add
xchg
or
adc
adc
sub
movsb
adc
jae
fsubrl
sbb
pusha
push
adc
ret
and
push
fs
ss
gs
pushf
lock
xchg
jmp
adc
inc
adc
push
sub
sub
push
sub
adc
jnp
in
popf
repnz
pushl
pop
int3
push
dec
or
jns
fbld
inc
dec
sub
sub
shl
icebp
cmp
rorb
sub
lret
mov
cmp
inc
pop
xor
test
push
divl
ret
push
pushl
aam
cld
loop
mov
dec
sti
cltd
aas
adc
fs
inc
les
mov
xchg
cmc
cmovb
ja
push
jbe
bound
adc
stos
scas
sbb
push
mov
daa
pop
sahf
in
aaa
data16
adc
jmp
xchg
pop
daa
xlat
sub
bound
pop
dec
mov
mov
hlt
ja
mov
imul
mov
lock
movups
repz
or
xchg
out
and
lods
pop
jmp
scas
lea
insl
test
pop
mov
cwtl
lds
je
test
or
mov
test
call
cmp
jns
or
mov
das
dec
cld
movsl
loope
pushf
jp
in
sbb
and
rolb
dec
jne
pop
pop
jmp
mov
mov
loope
test
and
shrb
ja
movsl
ss
cmp
es
and
mov
cmp
xorb
push
rep
inc
repz
dec
dec
adc
adc
xchg
mov
adc
and
pop
cmp
xacquire
or
int3
loope
test
cmp
mov
je
and
pop
sbb
dec
and
cmp
adc
rorl
scas
or
sar
sub
outsb
dec
in
movsb
aas
movsb
lret
popa
mov
dec
jae
dec
push
adc
adc
inc
sbb
lods
pop
xor
adc
bnd
mov
notl
jmp
xor
aam
movsl
loop
fildl
les
sbbb
adc
mov
or
ja
ret
call
mov
in
xor
jb
dec
je
cmp
and
cmp
bound
shl
mov
scas
xchg
stos
xchg
and
rcr
testb
clc
add
and
inc
add
cltd
mov
mov
mov
movswl
mov
int
int
pop
mov
jnp
adc
sbb
subb
jle
mov
or
or
movl
cmp
call
sub
add
xchg
test
or
add
inc
arpl
pop
or
push
and
stc
cli
mov
xor
daa
xchg
data16
cmp
mov
imul
mov
or
in
xchg
orl
iret
and
push
push
les
mov
cli
sbb
pop
sub
aam
inc
cwtl
dec
push
and
adc
fwait
shll
loop
or
pop
and
xchg
jmp
jae
add
or
push
add
add
std
mov
mov
call
addl
jl
xchg
jl
or
lock
call
jecxz
add
lret
push
scas
or
test
call
jg
inc
xor
xchg
cli
xor
das
hlt
test
fadds
mov
sbb
aaa
fs
xor
xchg
enter
enter
xor
pop
and
or
nop
dec
fbld
adc
aam
mov
sbb
sbb
jge
fs
lods
and
jae
xor
movsb
adc
push
pop
sbb
or
aaa
adc
or
dec
dec
in
and
movl
in
sub
jle
adc
jmp
repz
mov
inc
or
cltd
jno
repnz
inc
push
push
push
in
and
add
loopne
xchg
mov
mov
or
bound
sbb
pushf
sub
cld
push
lock
pop
lock
pop
pusha
popa
js
sbb
push
and
jb
insb
sbb
pop
xchg
mov
sarl
je
xor
and
sbb
adc
pop
jmp
daa
sub
jo
addr16
cmp
push
and
outsb
rorl
hlt
cmpsl
or
mov
mov
pop
and
xchg
adc
les
pusha
dec
test
out
mov
int3
jno
pop
sbb
push
icebp
or
les
mov
adc
sahf
mov
dec
adc
lret
pop
inc
test
je
pushf
mov
bound
or
xor
xchg
lods
pushf
and
cmp
out
iret
nop
adc
adc
repz
cmp
lock
sub
xchg
aam
mov
js
cmp
in
sub
dec
cmp
or
out
push
or
hlt
mov
and
pop
xor
sbb
sbb
pop
xchg
sub
jecxz
xchg
pop
daa
or
nop
dec
and
adc
hlt
aas
shlb
push
sbb
adc
xchg
test
sub
adcb
mov
out
movsl
add
inc
and
and
dec
pusha
fs
les
movsb
or
push
xor
in
or
or
sbb
pusha
xchg
jnp
inc
les
push
pop
enter
pusha
sbb
and
xchg
movsb
mov
nop
or
mov
adc
pop
enter
pusha
sbb
stos
sbb
movsl
xchg
add
sbb
aam
call
push
shlb
sbb
xchg
or
inc
pop
and
xchg
dec
mov
fs
pusha
xchg
jl
sbb
clc
movsb
adc
stc
and
cli
inc
mov
sub
dec
or
add
stc
adc
cmp
loope
inc
or
aad
sub
leave
or
or
xchg
mov
inc
xor
movsl
xchg
call
test
and
push
inc
je
push
adc
bound
or
and
add
pop
dec
popa
adc
mov
nop
jb
sarb
cmp
mov
cmp
inc
cmp
inc
adc
popf
rcrb
mov
movsb
lret
jno
inc
adc
sub
inc
mov
inc
in
pop
sbb
mov
inc
pop
and
and
mov
fs
addr16
mov
mov
inc
sbb
mov
or
mov
cmp
cmp
push
jno
xor
and
sub
cmp
lds
mov
shl
inc
mov
xor
add
mov
int3
pop
pop
dec
sbb
shrl
test
cli
mov
cmp
rclb
test
xor
mov
rorl
test
pop
pusha
pop
cwtl
or
test
mov
jno
inc
adc
mov
mov
je
hlt
mov
sub
push
sbb
or
loopne
inc
cmp
mov
mov
push
adc
add
push
lret
adc
out
fadd
hlt
mov
sub
cmp
pop
mov
mov
mov
adc
and
mov
clc
mov
ds
cmp
inc
rcrb
call
aam
test
movsb
sub
enter
ja
adc
and
adc
pop
or
xchg
addr16
dec
and
adc
inc
call
sbb
test
mov
and
sbb
addr16
adc
dec
inc
shlb
adc
hlt
mov
fadd
rorb
adc
xchg
insb
pop
nop
mov
xor
cltd
jle
or
mov
les
xor
or
adcb
fildll
sub
inc
sub
dec
push
rorb
mov
in
sbb
pop
inc
pop
shl
imul
push
or
sarl
xor
pop
adc
lret
ret
outsb
lea
subb
dec
cwtl
out
push
mov
or
call
popa
jo
insb
add
sbb
or
test
je
inc
js
dec
xor
adc
in
enter
cmp
hlt
out
inc
sahf
sub
fs
push
mov
sbb
or
test
xchg
mov
test
stos
and
nop
add
and
nop
lods
into
inc
jmp
movsb
nop
test
mov
cli
in
inc
lcall
cwtl
fs
sub
inc
mov
mov
xchg
pop
xor
and
pop
or
xchg
ljmp
sbb
or
lret
sbb
xchg
xor
mul
sub
xchg
and
nop
adc
rorb
push
adc
adc
push
xor
push
insl
inc
or
mov
cmp
shrb
cmpb
mov
push
call
pop
pop
test
mov
dec
in
loope
pushf
insb
inc
adc
push
decb
ss
inc
cmp
ja
xchg
pop
sbbl
xor
jecxz
js
bound
add
mov
cmp
fcmove
test
xor
out
pop
pop
mov
cmp
test
pop
mov
test
clc
and
sti
pop
mov
int3
inc
adc
mov
enter
xlat
leave
add
sub
mov
push
cmp
je
or
or
rolb
enter
xor
inc
jle
jle
dec
xor
or
repnz
hlt
shlb
jge
mov
mov
cmp
jl
cmp
je
pop
jae
jle
movsb
shll
in
inc
xchg
rcl
das
js
pop
or
gs
mov
stos
lea
cld
stos
pop
jl
or
fistpll
adc
add
scas
cmp
inc
pop
jg
jg
add
mov
dec
cmp
jle
in
jl
movsbl
inc
add
and
cmp
popa
pop
jl
mov
sub
shll
loop
adc
mov
les
jmp
sub
and
lds
push
pop
ja
xor
out
and
iret
cld
mov
mov
jmp
dec
roll
shll
fcomps
inc
or
xorl
sahf
adc
jp
insl
andnps
ljmp
sub
pop
es
add
das
es
adc
jb
dec
mov
or
jle
mov
dec
pusha
dec
rorb
mov
dec
cwtl
or
jg
iret
add
ret
jmp
xchg
jle
add
push
inc
movsl
xorb
mov
sbb
xchg
inc
clc
inc
pop
add
jg
leave
or
add
and
dec
jecxz
sbb
sub
sbb
or
jl
das
inc
push
push
mov
jb
adc
dec
sbb
mov
mov
test
lret
sarb
jae
sub
and
xorb
aad
sar
mov
inc
adc
jle
idivb
adc
cmp
es
mov
mov
inc
push
adcl
pushf
push
push
or
push
jne
fcomp
cmp
xchg
cmp
movsl
repnz
stos
int
add
leave
sbb
push
pcmpgtd
cmp
push
hlt
sub
inc
or
sbb
xchg
int3
addl
jns
lods
adc
pusha
lea
fdivl
fs
subb
out
pop
xchg
movsb
mul
lahf
icebp
inc
fs
scas
and
jmp
mov
icebp
xchg
repz
sub
xchg
or
add
jbe
insl
popf
fs
push
push
ss
jmp
rorl
mov
dec
ljmp
push
inc
je
scas
pop
push
rorl
movb
push
out
jmp
dec
rdtsc
and
pop
and
jbe
inc
fxam
inc
pushf
push
sbb
mov
inc
adc
mov
mov
or
das
mov
dec
in
fwait
cmc
mov
cmp
push
and
push
cmp
push
insb
sub
mov
and
jmp
jg
in
push
pop
sub
dec
in
andl
sarl
jge
mov
adc
outsb
loope
sub
jne
adc
sub
movsb
dec
idivb
in
adc
sbb
pop
and
mov
fiadds
sub
mov
adc
fstl
int3
test
dec
or
inc
mov
pop
xor
lahf
in
inc
movsb
push
mov
andl
daa
cmc
and
pop
es
sub
push
icebp
call
pop
pop
cmpsb
adc
int
adc
ds
or
push
adc
lods
out
pop
add
rcrl
push
mov
ja
add
lea
cmp
dec
lahf
jmp
fldl
into
push
movsl
sub
fisttps
adc
fidivrs
push
and
jnp
xor
inc
ret
pop
sub
adc
push
les
jmp
cmpsl
cmp
sub
into
xor
cmp
sbb
fildl
jg
shrl
xchg
pop
and
xor
sub
jecxz
insb
sti
or
jne
mov
push
pop
lea
jmp
jbe
inc
or
sbb
push
data16
pop
add
inc
jae
ss
daa
fstps
lods
push
fsubl
adcb
pop
mov
insb
dec
jno
movsb
mov
dec
icebp
loopne
inc
inc
icebp
xchg
test
xchg
inc
jmp
negb
cmp
adc
sbb
adc
data16
push
cs
test
int
inc
in
mov
jp
push
stos
dec
push
jl
or
fstp
inc
jae
ficoms
clc
mov
jge
mov
fs
mov
adc
loope
aam
iret
sbb
mov
pop
mov
lret
pop
inc
sbb
pop
popa
sbb
xchg
cltd
std
push
push
sub
rcl
jecxz
cmp
inc
add
pop
adc
imul
push
test
hlt
pop
in
movsb
mov
mov
adc
and
rorb
sbb
loope
xchg
ror
dec
iret
adc
or
test
or
xchg
cmp
enter
fsub
sub
out
or
int3
sub
aas
adc
loope
cmpsb
pxor
lahf
adc
paddb
mov
test
call
xchg
push
loope
int
clc
or
shlb
xor
push
and
dec
icebp
jl
mov
and
call
insb
fs
mov
loop
push
add
int
push
xchg
sub
xor
lods
loopne
push
adc
sub
stos
dec
lods
scas
ficompl
lods
jae
or
xchg
nop
push
in
cld
movsl
inc
adc
stos
or
imul
fcomps
sub
aad
imul
mov
movsb
sahf
xor
xor
in
add
and
lret
bound
mov
popa
loop
es
enter
mov
test
dec
push
les
xchg
sahf
xchg
cmpsl
jno
daa
cld
es
pop
push
pop
sub
aad
inc
add
fistps
and
cld
adc
loop
sbb
sub
icebp
xchg
add
mov
adc
push
arpl
fsubl
mov
dec
push
sbb
cmp
mov
mov
gs
int3
dec
pop
hlt
sbb
inc
fistl
sub
dec
sub
mov
iret
inc
mov
mov
cmp
inc
xor
ss
test
cs
or
sbb
push
mov
ljmp
xchg
pop
pop
mov
jne
and
adc
aad
mov
sub
push
push
das
cmc
cmpsb
shrb
or
push
inc
cmp
inc
lea
mov
std
test
or
jo
out
popf
inc
mov
dec
cmp
mov
ret
in
jle
inc
and
push
cmp
inc
bound
stc
imul
addr16
popf
cmpl
sti
mov
xor
jno
dec
sbb
inc
repz
jmp
sarl
mov
jnp
test
test
fadds
gs
sub
dec
and
fisttpll
pop
das
push
sbb
jg
imul
sub
arpl
fcmovnb
and
push
call
add
mov
mov
mov
loopne
incl
pop
and
test
xor
jmp
inc
mov
fs
out
and
xchg
das
int3
add
or
dec
cs
je
and
adc
mov
cwtl
adc
or
ret
aad
mov
sub
mov
xor
push
test
inc
xor
jb
add
cmpb
cltd
cmp
adc
xchg
pop
leave
sub
push
jne
inc
fmull
lea
hlt
add
es
xor
push
call
sbb
pop
jp
icebp
dec
stos
push
jge
mov
testl
mov
sub
dec
or
and
push
cmp
add
aam
jae
aam
shrl
add
rorb
xchg
dec
add
mov
add
pop
xchg
pop
add
push
cli
jp
repz
inc
fcomps
mov
and
jmp
xchg
fnstsw
mov
ret
int
fwait
lret
test
lea
lock
xlat
add
and
out
movsb
mov
int
int3
sar
add
add
icebp
push
add
lidtl
repnz
add
inc
icebp
cs
in
repnz
xchg
ss
idivb
add
xor
push
jns
in
push
out
jbe
add
mov
in
lret
adc
push
call
inc
cmp
loop
push
mov
jbe
dec
sbb
mov
fcomps
repnz
out
pop
cmp
sub
or
cmp
addr16
roll
icebp
push
test
rcr
mov
das
call
into
rcrb
mov
xchg
add
loopne
dec
lods
push
inc
cmp
sub
mov
aad
lahf
and
or
inc
adc
es
test
xchg
aad
pop
test
mov
les
mov
pop
mov
roll
mov
cmp
int3
inc
cmp
and
xorb
inc
jl
add
cmp
je
jne
or
sub
leave
ficompl
mov
cmp
sarb
and
push
pop
lods
inc
ljmp
incb
bound
mov
push
subb
loopne
cmpsb
fimuls
lea
mov
push
andb
push
shrl
scas
aad
or
pop
lock
sbb
dec
adc
js
adc
and
fwait
mov
loopne
and
pop
adc
mov
dec
xchg
and
xor
pusha
push
mov
xchg
sbb
icebp
mov
cld
mov
iret
pusha
cmpsb
jge
stos
mov
or
push
stos
sub
jge
shll
cmpb
test
dec
rol
hlt
mov
out
ret
pop
jmp
out
dec
pop
fcomps
and
test
sbb
xor
adc
mov
push
xchg
push
sub
sbb
lods
cli
cwtl
daa
movzbl
out
pop
inc
add
push
lock
ret
add
jl
fdivs
dec
je
push
fsub
push
loopne
mov
ret
push
sbb
stos
jbe
loopne
sbb
mov
dec
push
shrl
dec
jae
icebp
adcb
and
ja
add
push
xor
adc
push
adc
adc
pop
push
sub
xchg
pop
inc
and
push
repnz
xlat
loope
inc
sbb
mov
pop
andb
popa
pop
mov
sbb
or
and
xor
sbb
gs
cltd
xchg
or
int3
rcrl
mov
sar
cmp
inc
mov
mov
test
int
and
test
sub
inc
xor
rcrl
jmp
aad
pop
iret
or
add
out
adc
or
sbb
dec
jl
jbe,pn
push
lock
jo
cmp
add
jae
nop
sbb
arpl
push
sbb
mov
popf
dec
or
xchg
mov
loop
push
add
mov
sub
dec
lea
ja
call
inc
fwait
int3
hlt
dec
push
cmc
sbb
int
sub
adc
std
jbe
jo
xchg
call
add
fcompl
adcb
cli
sub
jne
and
push
call
pusha
inc
es
cmp
adc
cmp
out
addr16
jnp
push
loope
pop
lret
xchg
or
mov
cld
cmp
jae
sbb
call
add
jae
data16
mov
addb
std
jl
add
dec
mov
test
stc
or
add
in
jmp
add
test
sub
or
and
push
icebp
call
sbb
sub
rorl
xor
mov
adcl
xchg
mov
pop
and
sub
cmp
sub
add
das
lock
jbe
aas
dec
add
sub
into
cmpb
sbb
push
call
insb
adc
push
bound
or
cmpsb
iret
and
shr
adc
cld
xor
iret
pop
push
mov
jg
xchg
in
jbe
inc
adc
xor
hlt
fsubr
les
add
repz
shll
cmp
push
rcrb
jmp
mov
aaa
mov
bound
jbe
inc
bound
addr16
push
pop
daa
mov
out
and
or
sahf
mov
jl
inc
orl
sti
push
sbb
mov
pushf
xchg
adc
jmp
and
cmp
mov
xchg
mov
inc
cltd
test
rcll
pusha
and
testb
add
orb
push
call
ret
mov
sbb
or
subl
std
push
sub
and
cmp
fadds
mov
popf
shlb
cmpsl
push
ret
cmpsb
loop
mov
jo
leave
stos
push
pop
cltd
dec
push
and
push
outsb
dec
push
push
lea
pop
rclb
sub
adc
dec
mov
scas
int3
fucomp
mov
nop
cmp
mov
mov
sub
pop
push
repnz
xchg
xlat
xchg
sbb
daa
stc
push
inc
ret
popf
sbb
jl
ds
mov
lds
addb
add
adc
lret
icebp
pop
int
les
inc
sbb
jmp
adc
or
stc
rcrb
mov
hlt
inc
shll
clc
xchg
loope
shrl
mov
mov
fistl
aaa
lods
mov
sbb
mov
jno
and
fmull
sub
out
repz
or
fcomp
cmp
aam
xor
add
mov
lods
nop
xor
in
jne
or
pop
ds
xor
adc
nop
popf
cmp
mov
or
sub
mov
cltd
push
sbbl
call
xor
push
sub
cld
and
mov
lcall
in
cltd
iret
mov
bound
dec
adc
mov
xchg
xchg
cwtl
and
pop
das
jle
leave
in
xchg
xchg
xchg
sbb
inc
sbb
mov
pop
mov
add
dec
inc
cmp
sub
adc
decb
adc
lods
sbb
adc
mov
insb
into
pop
pop
xchg
pusha
test
dec
mov
push
push
pushf
in
ret
mulb
add
adc
popf
cmp
lea
pop
shll
add
shll
mull
ret
lock
mov
std
fisubs
call
jmp
cmp
cltd
mov
xchg
sbb
dec
adc
push
adc
pushl
push
pop
inc
mov
or
pusha
push
rorl
jo
dec
movswl
pushf
cmp
jp
jmp
push
push
dec
adc
nop
popa
pop
inc
lock
dec
push
je
or
test
jle
ret
jg
xlat
in
es
cltd
mov
sbb
jg
pop
cwtl
mov
adc
mov
daa
inc
lods
push
movsb
pop
cmc
imul
pop
sub
cmp
ja
stc
mov
and
mov
jmp
sti
data16
push
and
jl
adc
and
mov
cmp
movsl
mov
or
or
int
hlt
loop
ret
adc
or
scas
adc
movsl
mov
add
and
adc
inc
and
jge
xchg
sysret
jbe
dec
inc
outsl
in
daa
sarb
insl
add
fidivrs
hlt
pusha
sysret
mov
cmp
and
adc
loopne
cmp
nop
pushf
addl
sub
add
jle
and
jl
adc
and
ficomps
fildll
mov
pop
lods
and
inc
adc
mov
mov
jnp
or
faddp
or
mov
adc
xchg
aam
mov
cld
rorb
cmp
add
add
add
push
or
mov
and
testl
xchg
pop
mov
ljmp
push
mov
fmull
ja
ret
push
add
xor
leave
pop
and
and
or
mov
xor
jle
mov
js
jae
ss
je
push
cmp
xor
sub
unpcklps
mov
std
pop
and
mov
jmp
mull
pop
dec
sub
jle
xor
nop
mov
js
fwait
insb
cmovl
adc
inc
pushl
jmp
adc
cmp
shlb
std
xor
fistpl
and
jge
mov
lods
clc
mov
aad
mov
loope
cmp
dec
jecxz
aam
out
mov
pop
mov
dec
nop
xor
cmc
and
jp
push
mov
cmp
add
push
push
call
test
cmpb
shlb
loop
pop
gs
in
ret
sbb
jmp
cmpsb
orl
inc
cmpsl
xor
mov
cmpb
lret
pop
sub
push
ret
adc
arpl
pop
pop
ret
in
outsb
adc
xor
push
push
or
mov
mov
sub
jg
sbb
mov
or
add
int3
mov
push
pushl
xor
mov
pop
xchg
and
pop
or
orl
loopne
pop
sub
lods
dec
and
or
js
pop
lock
andl
call
fdivs
mov
dec
jne
loope
inc
push
std
es
pop
into
cmp
addb
dec
call
les
inc
aas
add
mov
push
push
scas
sbb
rcll
adc
and
xchg
stos
adc
stos
fwait
or
test
mov
addl
jmp
nop
ja
push
mov
enter
jo
xchg
dec
mov
or
negb
mov
or
fiadds
cs
pushf
out
push
pop
mov
pop
es
ret
dec
and
mov
and
insl
sbbb
adcb
pop
notb
jbe
pusha
scas
xchg
js
jg
mov
push
dec
sbb
pop
pop
inc
push
xor
pop
pop
adc
mov
push
xchg
cmp
fiaddl
sbb
arpl
push
ds
jle
dec
lock
xchg
lds
add
je
xlat
jmp
in
icebp
and
push
dec
mov
dec
inc
jmp
sbb
mov
mov
cmp
inc
and
cmc
jmp
mov
mov
icebp
and
cli
push
mov
sub
and
leave
pop
cmp
xor
in
outsl
pop
rcll
and
and
dec
and
cli
fistpll
and
dec
sbb
xor
fcompl
daa
dec
in
fsubl
lods
dec
cld
aad
or
push
adc
jne
xor
sbb
fdivl
aam
cmp
mov
std
test
inc
jl
add
add
push
and
cmp
pop
adc
or
push
xor
sbb
sbb
jns
pop
mov
je
fsub
adc
aam
jl
mov
adc
add
mov
cld
into
lahf
mov
xor
cmp
sub
lds
push
or
mov
adc
and
test
jmp
push
out
fcoml
popa
sub
xchg
push
pop
jmp
aaa
jmp
fstpl
sub
mov
push
push
cwtl
adc
adc
fs
clc
push
push
adc
enter
xor
sub
out
push
xchg
and
inc
fs
loop
cmp
repnz
mov
sbb
xchg
sub
sbb
test
and
push
in
sub
inc
sbb
sub
push
in
ret
mov
and
nop
and
lds
mov
mov
stc
mov
cmp
sbb
pop
sub
jb
fs
jb
sbb
inc
sbb
xchg
mov
and
test
dec
ret
add
pop
jmp
lret
inc
sub
jo
mov
mov
mov
call
jge
mov
or
dec
sub
mov
xor
arpl
xlat
aad
adc
sarl
push
out
adc
popa
jg
ret
out
jnp
add
adc
je
adc
je
cmp
test
test
sub
or
outsl
adc
adc
sbb
adc
cmc
inc
outsb
mov
add
sub
lcall
test
push
popl
rol
hlt
ret
pop
loopne
inc
cmp
and
popf
out
add
sub
or
xor
call
pop
mov
mov
cmp
mov
clc
mov
stos
mov
and
rolb
pop
mov
mov
and
je
into
push
add
hlt
xor
xor
test
repnz
ljmp
sarl
in
leave
test
and
inc
test
stos
sub
ret
sub
xlat
sbb
or
nop
inc
sbb
das
dec
insb
or
test
or
clc
call
aaa
scas
lock
outsb
lods
pop
out
dec
test
push
or
xor
xor
push
and
ljmp
pop
aas
and
add
cs
pop
ljmp
cmpsl
sub
daa
sbb
sysret
adc
mov
ror
je
and
cmpsb
or
pop
mov
or
push
repnz
dec
lods
add
int
test
and
clc
decb
push
jecxz
and
test
bound
call
popa
sbb
xchg
lods
ljmp
adc
repz
push
adc
dec
arpl
adc
ljmp
xchg
lea
xor
int3
xchg
sub
pop
stos
sub
push
sub
sub
jmp
dec
cvttps2pi
pop
ljmp
lcall
add
loope
neg
les
add
push
inc
push
test
xchg
stos
ljmp
mov
mov
sub
je
sub
xor
popf
cmp
cwtl
xor
or
pop
mov
add
jmp
mov
mov
inc
jle
adc
mov
dec
icebp
jg
mov
or
es
and
inc
pop
dec
add
mov
jbe,pt
adc
and
and
cmp
jb
jmp
xchg
test
add
push
es
xchg
pop
aaa
and
mov
ret
loop
dec
jecxz
push
in
jl
jns
adc
add
pop
mov
push
mov
sar
test
aas
movzbl
repz
repnz
icebp
adc
das
call
mov
fcomps
xchg
fcomps
stc
add
push
jle
lea
push
adc
call
fmulp
or
jb
add
mov
add
inc
mov
mov
pop
jmp
add
or
push
add
mov
outsl
pop
aaa
call
jg
cmp
jmp
cs
mov
nop
mov
incb
pop
roll
mov
pop
test
aam
pop
lock
push
jne
sbb
testl
pop
sbb
and
sub
cmp
mov
ljmp
mov
in
aaa
in
and
insb
inc
and
sub
jns
iret
or
mov
out
xchg
jl
sbb
popf
xor
test
loopne
mov
inc
ss
or
jge
enter
clc
test
cmpsb
jmp
push
pop
mov
cld
xchg
cli
push
enter
xchg
call
mov
pusha
into
adc
les
lock
das
mov
mov
mov
repnz
lret
ficoml
add
mov
cmpsl
xlat
insb
negl
jne
aaa
cmp
cmpsb
adc
faddp
mov
arpl
adc
dec
dec
mov
xor
dec
shlb
inc
mov
push
loopne
inc
scas
push
out
sub
mov
pushf
fadd
cmp
call
mov
stc
inc
push
jns
mov
adc
stos
leave
adc
adc
push
sti
in
mov
icebp
jne
inc
dec
int3
jge
aam
jb
mov
push
mov
out
xchg
aam
jl
jmp
xor
or
in
push
call
ret
sub
pop
inc
fmull
enter
stc
inc
fdivr
ror
sub
stos
lods
iret
add
cmpsl
sub
sarb
aad
cmp
test
jnp
test
mov
ret
pop
insl
pop
lods
dec
lods
ss
push
dec
lods
xor
mov
in
pushf
fcoml
pop
mov
aas
or
frstor
xor
jmp
inc
xchg
std
push
sbb
fwait
dec
testb
and
dec
das
and
movsb
jnp
negb
inc
sbb
mov
or
lods
mov
mov
cld
cmp
scas
jecxz
jl
mov
test
jmp
xor
jns
push
decb
orl
scas
mov
mov
dec
push
sub
aas
xchg
pop
pop
dec
stos
adc
lret
es
enter
and
sub
dec
and
sbb
mov
dec
jmp
pop
dec
sub
jmp
sub
loope
fnstenv
mov
pop
insb
push
push
shll
shrb
mov
and
jmp
adc
and
xchg
xchg
inc
push
or
pop
out
sub
cmpb
das
je
mov
sbb
mov
or
or
dec
test
cmc
cltd
fwait
push
adc
mov
mov
cmp
loope
mov
adc
jmp
dec
cmp
loopne
xor
and
aam
int
adc
push
cwtl
mov
xor
push
enter
icebp
jne
and
jmp
rcl
imul
and
lods
inc
mov
inc
mov
mov
mov
push
call
mov
mov
ds
fnstenv
push
lock
or
hlt
sbb
sbb
jne,pt
fcoms
data16
sbbb
adc
gs
and
jae
aam
pop
in
arpl
push
mov
and
leave
es
push
adc
rorl
cmp
sub
xchg
add
mov
add
jmp
out
and
adc
jae
pop
jmp
dec
inc
cmp
add
dec
inc
mov
xchg
cmp
imul
out
test
daa
fisubs
call
cs
inc
fcmovu
stos
lcall
dec
std
mov
test
jecxz
sub
sub
test
xchg
scas
outsb
jle
lahf
dec
loop
jo
cld
std
test
mov
sub
stc
in
adc
dec
sbb
mov
aaa
lahf
icebp
and
xchg
lods
rclb
stos
push
rorl
push
cmpsl
add
xor
scas
or
outsl
cmp
arpl
mov
aaa
subl
sub
sbb
pop
inc
mov
xchg
push
jne
mov
insl
dec
sbb
sbb
push
mov
mov
mov
mov
push
push
pop
bound
pop
orl
jecxz
loope
pop
push
addl
pmullw
xchg
imul
mov
lds
sarb
and
adc
push
jns
and
sub
and
bound
push
xor
out
pop
call
adc
in
mov
xor
sahf
andb
cmpsl
lret
jns
xchg
or
inc
push
mov
lahf
add
jbe
inc
mov
xor
and
imul
pushl
in
icebp
or
and
fs
outsb
cmp
push
out
xor
xchg
inc
mov
lret
cs
adc
test
pushf
sarl
idivl
and
xchg
add
add
cmp
xor
cmp
and
mov
or
dec
cmc
cmp
test
out
test
stc
pop
psubd
push
xchg
and
mov
sbb
ljmp
lds
ja
dec
dec
mov
sbb
loope
mov
xor
call
add
cld
and
fists
pop
push
nop
sub
ret
mov
into
and
test
mov
jge
mov
subb
mov
in
jmp
in
mov
lock
sbb
iret
shll
or
push
lahf
pop
or
mov
dec
leave
lcall
and
sub
dec
shlb
sbb
xor
and
jmp
test
in
je
cmc
or
cmp
adc
lea
mov
je
imul
inc
stos
das
adc
sahf
dec
sbb
sub
inc
scas
push
mov
sub
movsb
mov
daa
jns
inc
jne
std
in
lcall
push
addw
or
adc
add
call
xchg
lock
in
xchg
and
cmp
je
sbb
mov
lods
je
shrl
adc
adc
push
popa
xor
in
push
test
movsb
cmp
call
sbb
or
or
push
mov
sbb
push
jb
and
aam
inc
pop
adc
mov
jecxz
dec
mov
xchg
push
jbe
and
imul
push
inc
sub
push
andl
test
and
adc
insl
or
cmp
clc
inc
mov
pop
in
dec
and
lahf
push
lods
push
mov
push
loopne
test
and
jmp
lods
xor
jg
push
and
orl
call
xchg
les
das
inc
dec
inc
xchg
rorb
sbb
push
and
push
call
js
adc
pop
push
testl
xor
pop
out
xor
sub
dec
push
mov
test
xorb
cld
push
xor
jae
push
jl
clc
cmp
pop
lock
mov
cmpsl
mov
scas
mov
test
xchg
rorb
push
and
sbb
dec
outsl
sbb
mov
dec
xchg
xchg
mov
gs
cwtl
cmp
bound
adc
jge
mov
ret
cmp
rcrl
jo
in
and
mov
lods
and
mov
sarb
icebp
in
xchg
xchg
sub
movsl
sub
jb
push
aam
pop
mov
sbb
xor
inc
fmull
lret
cli
int3
inc
dec
or
add
shll
cmpsb
pop
sub
or
mov
pop
jmp
xchg
mov
call
inc
jmp
lds
nop
sub
push
pop
les
or
and
inc
subl
cmp
push
mov
or
jmp
push
or
pop
es
cmp
call
push
pop
or
dec
lods
fcomps
test
sbb
add
sub
imull
add
test
pop
mov
ljmp
repnz
sbbb
stc
mov
or
icebp
movsl
jecxz
mov
jae
fs
mov
bound
daa
add
aam
lds
mov
mov
movsl
fnstsw
popf
jg
adc
sub
mov
adc
sbb
mov
adcb
out
into
xlat
inc
mov
push
and
sbb
stos
rcrl
push
pop
hlt
push
jle
adc
dec
scas
dec
mov
in
sbb
sti
cltd
xchg
and
push
ffreep
aaa
call
dec
dec
hlt
movd
lock
orl
fldt
dec
cli
xchg
push
jnp
xchg
mov
shl
cltd
jmp
test
adc
pop
ret
out
sub
xchg
cmc
xchg
push
push
mov
cmp
and
ffreep
loop
hlt
imul
cli
sahf
inc
inc
cld
sbb
imul
pop
cld
mov
daa
sub
jecxz
or
mov
sbb
xchg
push
dec
push
mov
inc
inc
add
adc
mov
adc
fistl
cs
adc
scas
stos
int3
lods
xor
mov
aaa
call
mov
int3
je
jl
mov
mov
cmp
pop
dec
push
push
cmc
cltd
and
pop
or
mov
clc
cmp
sub
add
movsbl
add
xor
sbb
sahf
pop
lock
add
dec
lret
cmp
clc
cmp
and
inc
daa
mov
push
cmpb
xlat
xor
icebp
cmpsb
mov
inc
popa
mov
dec
mov
mov
test
mov
in
jl
clc
lea
test
rol
jp
push
movsl
lahf
cmpsl
stc
cmp
sub
cmp
popa
pop
xchg
cld
cwtl
xor
pusha
and
jle
or
jmp
inc
scas
pop
test
push
adc
pop
mov
pop
nop
or
test
add
or
pop
in
call
decb
push
add
xor
jbe
dec
adc
cmpsl
lds
push
fcmovu
dec
sub
sub
cmp
push
cmpsb
and
and
psubw
mov
add
mov
and
outsl
jge
push
or
cs
mov
ftst
inc
cmp
push
cmpsl
sbb
push
inc
sub
push
adc
je
cmp
jnp
mov
fldcw
je
loope
sahf
inc
push
bound
xchg
adc
push
sbb
push
lods
and
dec
rcll
or
roll
or
mov
dec
sub
jnp
test
or
stos
cmpsb
cmpsl
dec
filds
std
jg
sbb
pop
mov
dec
push
xchg
mov
add
mov
and
push
inc
loopne
test
mov
cmpsb
sbb
movsb
adc
lods
es
and
gs
inc
inc
inc
test
mov
cmpb
cmp
pusha
pop
dec
or
lods
rorl
sub
and
rep
cmp
push
jge
push
and
mov
and
add
jbe
scas
push
mov
inc
add
add
fucomp
push
into
popf
mov
mov
jle
xchg
xchg
sub
xchg
in
adc
jle
ja
sahf
inc
or
out
xor
mov
sbb
lahf
shll
cwtl
out
and
and
imul
adc
sbb
adc
adc
jne
scas
push
adc
mov
mov
push
jns
data16
lock
adc
movsb
sub
dec
jl
ret
xlat
fwait
sbb
or
mov
popa
aam
jmp
sub
ret
adc
pushf
push
mov
sbb
ret
sub
fs
bound
movsb
xchg
dec
arpl
ss
sub
mov
inc
movsb
xchg
lahf
icebp
aaa
and
adc
sbb
loop
das
movsb
lret
fs
sbb
inc
lods
and
inc
xor
pop
sbb
es
mull
lods
push
lret
push
in
int3
cwtl
js
lahf
push
dec
inc
inc
outsb
into
dec
mov
lock
lea
pop
inc
mov
inc
ds
mov
mov
mov
fwait
mov
push
sub
and
ficomps
push
daa
add
pop
and
adc
xchg
and
pushf
or
mov
movsb
dec
xchg
sub
clc
inc
bound
mov
vcvttss2si
sub
fisttpl
xor
pop
cmp
sub
sub
push
adc
adc
clc
dec
xchg
mov
inc
outsb
xor
rolb
sub
lea
mov
ret
inc
add
xor
mov
ret
shr
add
mov
jne
ret
add
call
add
mov
mov
int3
ljmp
lds
dec
shll
mov
mov
sub
jbe
aam
mov
loope
xchg
ret
cmp
xchg
mov
negl
loop,pt
je
stos
push
iret
mov
push
lea
cmpb
lret
sbb
call
ss
lret
cmp
testb
push
or
xchg
mov
std
adc
push
mov
xor
xorb
and
mov
pop
test
sub
aas
into
cli
adc
pushf
into
popf
dec
cmp
pop
in
cld
sub
fimull
adc
sbb
lods
icebp
lcall
lods
sbb
sbb
adc
out
sbb
adc
fs
adc
test
arpl
cwtl
cltd
mov
adc
adc
scas
adc
lcall
fs
sbbb
aam
pop
xchg
sti
lret
xchg
mov
jb
push
ss
movsl
test
adc
adc
adc
adc
mov
lea
mov
cmp
add
lar
clc
stc
movsb
aas
or
push
inc
mov
aam
lahf
jo
mov
andl
sub
call
push
bound
jne
push
mov
or
xor
insl
mov
into
add
xchg
mov
sub
adc
aaa
and
or
andl
jl
std
xchg
mov
cmp
mov
dec
mov
mov
mov
dec
jae
loopne
mov
in
stc
scas
add
dec
cltd
xchg
add
aam
setl
sub
subl
and
test
dec
adc
test
push
mov
jb
or
lods
lahf
inc
popf
add
inc
hlt
jle
aaa
ja
and
je
push
push
cmp
test
jmp
jo
sub
sub
call
mov
cmpsl
xor
js
sbb
dec
adc
add
ss
lea
movsb
pop
mov
mov
or
inc
xchg
les
mov
add
sbb
mov
bound
test
fldt
xlat
pop
adc
enter
sbb
leave
arpl
xor
adc
xchg
rcrl
push
pushf
push
imul
das
mov
inc
sbb
mov
xor
loope
clc
sbb
fmuls
movsb
xchg
mov
ret
jecxz
or
push
dec
int
call
adc
adc
mov
inc
jge
xor
cmpb
push
push
cmpsb
sub
push
inc
xchg
out
pop
and
sahf
cwtl
movd
lods
adc
pop
hlt
mov
mov
push
sub
push
in
and
in
int
lahf
aaa
sub
sub
scas
add
andl
out
test
xchg
mov
fcoms
or
xchg
stos
pop
iret
fstl
pop
js
fwait
inc
adc
push
xchg
sub
or
cltd
popf
and
xor
xchg
and
sbb
das
pop
lret
pop
sub
lea
jl
in
out
mov
cmp
inc
fisttpl
je
sbbl
add
fnstsw
sbb
insb
push
popf
push
test
cmpsl
sub
xchg
ljmp
lret
adc
cmp
int3
mov
xchg
aas
push
test
and
push
push
ljmp
fmuls
mov
xchg
adc
lcall
test
aad
arpl
and
nop
and
jle
push
movsb
aaa
xor
or
jmp
and
test
loopne
adc
pop
push
inc
add
push
adc
sub
cmp
xor
sub
pop
mov
ret
sub
and
cld
sbb
or
sbb
xor
adc
aam
int3
or
xchg
and
and
movsb
and
test
push
rorl
inc
cmp
sub
adc
jo
adc
cwtl
mov
pop
and
push
inc
xor
push
adc
mov
sbb
mov
jae
xchg
xor
sbb
clc
sbb
sbb
adc
repnz
inc
add
imul
push
hlt
jmp
leave
sbb
out
and
test
test
sbb
xchg
mov
adc
enter
xchg
adc
fmull
les
xor
nop
mov
or
test
enter
and
adc
or
test
enter
and
jne
lret
mov
mov
jle
xchg
cmp
nop
mov
push
ja
les
je
xchg
add
xchg
adc
and
cmc
enter
hlt
xchg
mov
inc
inc
test
sub
adc
inc
lret
inc
inc
and
mov
sbb
mov
inc
cmp
mov
inc
lret
and
adc
lcall
ret
and
dec
mov
sbb
or
test
and
inc
inc
and
or
or
inc
xchg
mov
jecxz
and
add
into
pop
xor
adc
adc
sbb
movsb
loopne
adc
pop
out
add
in
sub
enter
or
faddl
mov
inc
cmp
xchg
and
movsl
xor
adc
or
nop
mov
mov
out
nop
pop
enter
je
cltd
pop
adc
mov
les
jmp
mov
jbe
add
push
push
shrl
cld
xchg
mov
mov
mov
push
mov
jge
sub
movsb
rcrl
and
pushf
enter
inc
xchg
rdmsr
mov
sub
sbb
and
or
cmp
clc
xchg
or
les
mov
jecxz
scas
xchg
and
fs
and
mov
adc
movsb
pop
push
or
test
icebp
ds
or
addb
clc
pop
and
imul
adc
adc
cmp
int3
sbb
or
test
and
push
inc
push
enter
ret
dec
jnp
mov
or
and
les
xchg
scas
addr16
bound
sub
rcrl
sub
lods
jmp
adc
test
sub
js
inc
add
sub
inc
ss
outsb
push
cmp
mov
xor
in
jb
sub
ret
xor
sbb
xchg
and
fs
mov
icebp
xchg
test
pusha
enter
sub
xchg
and
fs
js
mov
adc
xor
sub
insb
sub
mov
cmp
loopne
sub
enter
or
push
test
lret
movsb
xor
add
pop
sub
xchg
and
fs
xor
cmc
nop
test
dec
ret
inc
add
sub
xchg
sub
test
mulb
sub
or
mov
test
inc
xor
ja
adc
or
shlb
mov
inc
dec
sub
xchg
and
fs
xor
and
and
nop
or
push
pop
loop
test
adc
mov
in
mov
cs
adc
clc
inc
push
mov
hlt
inc
movsl
sub
xchg
and
call
pop
enter
sub
inc
sub
fcoms
push
mov
sbb
or
inc
daa
sub
xchg
and
bound
std
mov
and
dec
mov
in
in
pop
rcll
mov
adc
push
call
or
fmuls
pop
test
dec
mov
mov
clc
cmp
idivb
hlt
adc
lock
add
add
insl
jne
mov
mov
push
dec
lods
cmp
sbb
ret
adc
js
cmp
in
cli
outsb
jp,pn
xchg
inc
mov
in
cli
adc
push
add
xchg
or
sbb
clc
cli
or
dec
push
push
mov
inc
ret
lea
or
or
roll
or
jmp
mov
psubsw
or
mov
test
adc
inc
mov
fs
cmp
nop
pop
enter
sub
xchg
add
adc
adc
push
outsl
sbb
hlt
jo
or
mov
je
or
push
shrb
jb
test
push
je
in
mov
jne
dec
and
or
ret
jl
pop
jl
subl
push
and
lock
dec
das
adc
add
add
mov
xor
ja
insl
pop
mov
xchg
data16
and
or
add
test
or
inc
pop
dec
jmp
and
sub
inc
push
mov
xorb
popf
movsb
in
push
push
adc
or
decb
jg,pn
dec
lock
xchg
mov
sbb
sub
add
icebp
and
adc
repz
les
dec
loopne
adc
and
xchg
adc
je
jno
adc
sbb
inc
je
add
add
add
cli
push
ret
testb
test
inc
cmpsl
fadds
test
cld
sbb
mov
jne
xchg
xchg
cs
in
sahf
adc
jle
sbb
inc
sbb
mov
in
push
push
jmp
repnz
and
nop
adc
xor
or
xor
push
sub
mov
inc
je
sbbb
push
dec
daa
sub
testl
add
or
test
in
mov
xor
xlat
or
xchg
and
pop
adc
sub
sub
pop
or
test
enter
and
inc
mov
adc
inc
enter
and
hlt
push
adc
mov
pop
pop
or
test
enter
adc
and
or
mov
or
test
enter
and
push
inc
pop
and
adc
loopne
inc
pushf
enter
and
adc
mov
or
test
enter
and
inc
or
les
sub
test
or
inc
sbb
mov
hlt
xchg
or
test
les
and
nop
pushf
mov
inc
cwtl
and
adc
popf
loope
jbe
subl
or
jge
adc
dec
push
sub
jl
xchg
cmp
sub
and
or
xor
jnp
sti
xchg
and
pop
adc
push
adc
mov
adc
dec
test
les
cmpsl
or
lea
jge
adc
or
push
inc
push
les
and
push
or
dec
nop
sbb
test
and
fs
xor
adc
adc
or
and
incl
ja
in
add
loopne
cld
adc
fdivrs
sub
enter
and
adc
mov
test
or
sbb
lds
pop
fs
int3
adc
and
outsl
call
sbb
inc
stos
and
cltd
jmp
insl
adc
cs
rclb
cmp
adc
xchg
and
mov
and
out
je
mov
cmc
adc
cltd
enter
clc
and
xor
cmp
add
repz
shrl
ss
repz
or
test
xchg
packssdw
out
outsl
imul
push
fstpt
sbb
cmp
adc
push
adc
jge
fs
pop
sti
lret
mov
nop
inc
ljmp
xchg
loopne
shll
rcrb
cmp
mov
xor
adc
xchg
lock
sbb
or
inc
out
jmp
push
pop
adcl
mov
jmp
xchg
mov
push
dec
push
push
sub
cmp
std
push
mov
pop
jne
or
cmpsb
js
jl
in
fs
xor
ss
sub
cmp
sbb
or
sbb
movb
arpl
sub
mov
test
mull
inc
and
enter
fincstp
cltd
mov
add
adc
push
and
push
into
pop
loopne
sub
xchg
adc
inc
adc
jnp
int
add
repz
das
mov
divb
shll
je
les
jle
mov
call
clc
inc
orl
lds
mov
sbb
push
cwtl
add
fucomip
mov
sub
loop
dec
test
scas
and
aaa
xor
adc
xchg
notb
into
jo
jno
mov
adc
movsl
push
ss
inc
push
sub
xor
and
sub
add
call
sub
pop
or
hlt
add
adc
mov
adc
or
cmpsl
outsb
insb
enter
xor
cmp
int3
mov
xchg
shlb
sub
push
adc
sub
popf
sbb
fdivrl
and
mov
lds
psllw
pop
cld
data16
push
fnsave
xchg
pop
inc
or
inc
jno
sub
adc
inc
mov
sbb
roll
imul
enter
icebp
shll
sub
pusha
adc
adc
sbb
gs
mov
enter
xchg
sbb
xor
addr16
or
add
incb
shrl
fs
adc
mov
stc
mov
push
push
xchg
popa
xor
inc
das
fisubrs
push
inc
adc
jmp
sbb
xor
orb
push
dec
push
mov
inc
push
and
outsb
shrl
outsl
mov
aas
push
ret
js
inc
adc
adc
jo
dec
or
inc
stc
xchg
scas
ret
les
and
cmpsl
jae
mov
dec
sub
pusha
cli
or
popf
js
xchg
xchg
aad
add
mov
fstl
or
test
mov
out
sub
and
mov
xor
das
and
jg
fld1
ror
cli
push
push
mov
sbb
repz
ss
push
orps
mov
xchg
lock
jmp
ret
or
pop
dec
pop
push
nop
mov
mov
inc
movups
loop
add
outsb
adc
or
data16
and
mov
mov
dec
addl
jge
dec
lock
jo
add
loopne
pop
pop
cmp
xor
fs
push
fwait
in
or
jmp
outsl
movsl
popf
jle
dec
dec
dec
cld
sub
daa
pop
sub
push
inc
adcl
out
and
jp
push
pop
or
cmp
cmp
jbe
dec
lea
test
pop
jns
mov
sbb
orl
and
aad
inc
enter
je
mov
inc
fsubs
or
sahf
adc
cmp
push
push
in
sbb
int3
inc
packssdw
cmp
test
or
and
mov
sti
mov
cmp
xor
push
jg
adc
push
xchg
xorb
lods
pop
call
adc
loop
xchg
inc
popf
mov
sub
mov
xchg
addr16
cwtl
jne
push
jmp
ret
push
jns
mov
or
int3
fimuls
arpl
lds
addl
and
xchg
mov
lds
fcmove
cld
cwtl
mov
mov
xor
mov
push
xchg
cmp
shlb
sub
jns
pop
sti
out
or
jle
jbe
push
push
or
in
or
cmp
popf
sbb
cmp
jl
dec
fildl
stos
fiaddl
or
mov
mov
cmp
adc
xor
insl
jnp
xor
test
loope
push
repz
push
jno
mov
sub
test
mov
add
fbld
mov
lods
jp
enter
aaa
cmp
mov
or
dec
mov
dec
lods
int
and
fs
xor
and
test
xchg
rorb
or
jnp
push
call
lret
push
inc
inc
les
outsb
adc
push
push
das
push
push
push
das
bound
jnp
pop
cmp
pusha
pop
jnp
cli
das
jl
mov
js
lahf
fcompl
add
adc
sbb
lea
cmc
mov
iret
lret
push
je
inc
and
fcompl
sbbb
mov
and
test
adc
lea
insl
in
cmp
jp
fwait
or
mov
popf
call
in
sbb
call
ja
jae
test
adcl
jl
dec
dec
add
push
push
into
ficoms
mov
push
js
pop
test
mov
jae
int3
popa
popf
ja
cmp
push
adc
jnp
push
mov
and
cs
push
ret
test
push
push
inc
jns
adc
call
leave
jns
fisubs
jmp
xchg
stos
xor
test
cwtl
jns
lock
push
sub
xchg
inc
insb
add
pop
jb
mov
jge
bound
mov
daa
pop
push
or
cltd
loopne
lds
shlb
in
sbb
jno
mov
clc
cld
push
insb
ljmp
clc
xchg
in
dec
and
or
mov
ret
jns
mov
in
cmpsl
mov
lret
cmp
mov
bound
dec
loopne
inc
pusha
out
inc
cli
fcom
pop
or
ja
inc
xchg
stos
push
cld
sbb
mov
sub
dec
xchg
lock
sbb
mov
or
sti
push
aam
test
inc
jo
adc
and
cmovs
push
fsubr
xchg
scas
and
call
or
clc
in
xchg
sub
out
mov
mov
subb
dec
jo
sbbb
loope
xor
pop
mov
fs
adc
lods
push
mov
mov
inc
pushf
scas
insl
mov
xchg
xchg
arpl
or
cmpsb
sbb
movsl
xchg
jecxz
dec
fsubs
out
sbb
outsl
rcrb
sub
test
push
add
daa
and
sub
mov
mov
and
inc
loop
icebp
aaa
cmp
adc
mov
mov
sub
and
push
cmp
punpcklwd
ja
outsb
adc
inc
in
or
and
outsb
mov
sbb
sti
pop
cs
jge
xor
in
popf
stc
inc
add
dec
out
add
xor
dec
add
sbb
or
les
gs
jnp
push
out
test
xor
sub
push
pop
xor
inc
or
mov
jo
mov
jmp
test
and
fbld
add
cwtl
loope
push
mov
shl
dec
add
insl
mov
adc
jecxz
add
dec
sub
aas
int3
leave
adc
in
xchg
push
sbb
enter
sbb
sbb
movsb
scas
and
mov
or
loop
loope
jp
xchg
popf
ss
idivb
mov
jns
pop
in
push
adc
popa
sti
aam
ds
rcll
insl
xor
outsb
je
xor
dec
shr
insb
inc
push
push
jmp
push
mov
xchg
adc
cmp
imul
ljmp
mov
jno
gs
xor
sbb
mov
or
dec
and
sub
inc
shr
sbb
mov
ljmp
mov
sub
out
inc
int3
adc
xchg
jae
pop
dec
lds
stos
xor
jle
xchg
movsb
inc
notb
inc
jb
sub
jne
or
lds
push
push
adc
inc
jb
mov
popf
mov
inc
out
adc
or
add
andb
add
clc
sub
push
hlt
test
outsb
adc
mov
das
push
mov
pop
xor
adc
dec
mov
ret
pop
pushf
mov
out
loopne
push
and
ret
pop
test
and
adc
testb
push
rorb
pusha
test
add
hlt
je
and
push
jae
fdivs
js
push
outsb
push
xor
lods
sbb
and
test
in
jae
inc
adc
jb
std
sub
cmp
andb
mov
ret
adc
cmp
mov
rorl
cmpsb
dec
mov
or
adc
test
lcall
adc
cli
pop
xor
sbb
movsl
xorl
or
xchg
xchg
add
or
push
adc
jmp
scas
test
imul
jg
aas
aam
mov
push
mov
fs
inc
shrb
fimull
push
out
mov
adc
mov
iret
jae
insl
mov
pop
sub
adc
call
pop
test
add
jle
mov
pop
pop
and
hlt
push
jl
and
pop
push
push
pop
cltd
in
insl
push
sub
nop
icebp
push
enter
je
push
int3
pusha
xchg
imul
xor
bound
and
add
fcoml
fwait
cmp
movsb
insb
pop
test
sahf
xchg
adc
sub
add
pop
jnp
and
mov
lret
xchg
ds
dec
push
and
adc
or
push
sub
ja
into
jmp
das
mov
insl
or
and
cmp
ret
outsl
or
cmp
hlt
or
data16
pop
rcrb
sub
jae
mov
test
jle
cmove
fdivp
mov
push
enter
mov
sbb
pop
add
inc
jmp
adc
sbb
xchg
and
jge
push
dec
mov
daa
das
sti
loope
push
sub
lea
pop
cmp
test
mov
in
gs
movsb
test
dec
es
pop
pop
sbb
sbb
mov
pusha
cmp
jle
lea
add
jmp
mov
loope
adc
jns
das
or
cmpsl
in
test
lret
lds
sub
jns
mov
push
jmp
mov
insl
or
and
insb
add
mov
mov
adcl
and
enter
lea
and
cmp
mov
mov
mov
sbb
jmp
repz
or
insl
jge
je
and
fs
repz
pop
and
inc
insb
sbb
inc
and
xor
push
mov
or
dec
mov
jnp
fwait
xor
sub
mov
and
popa
pop
int
sbb
test
and
pop
push
push
outsb
adc
inc
xor
add
pop
adc
or
stos
dec
pop
sub
cld
fstps
repnz
dec
repz
test
movsb
push
mov
sbb
push
mov
scas
pop
stc
inc
dec
jp
inc
out
or
xchg
or
and
xor
cmp
dec
cwtl
jge
mov
scas
imul
pushf
push
cmp
bound
push
les
in
jne
or
mov
sub
mov
push
jb
scas
adc
cmp
inc
subl
mulb
rolb
adc
jmp
ret
pop
imull
fmul
jo
or
inc
adc
mov
repz
out
sub
in
roll
call
loop
push
popf
inc
cwtl
xchg
xor
jnp
pop
adc
lds
ficoml
xchg
popa
adc
bound
insl
or
pop
pushl
or
jp
dec
sbb
push
push
in
call
push
and
cmp
jns
fisubl
fbld
cmp
mov
sarb
or
mov
call
jne
cmp
sub
mov
lods
adc
jne
cli
adc
mov
push
sbb
pop
and
or
test
cmp
mov
inc
cmp
pop
and
sbb
adcl
inc
inc
mulb
or
push
movsl
inc
adc
push
and
pop
flds
inc
push
dec
sub
daa
inc
jo
jecxz
and
sahf
or
add
pop
ss
inc
inc
enter
pushf
stc
outsb
lea
xor
jge
push
pop
rolb
ret
lock
les
sbb
fists
inc
mov
jne
xor
jne
sbb
lea
ds
push
mov
pop
bound
or
jle
stc
test
pop
ss
lret
imul
mov
jge
jg
jno
clc
or
addr16
or
mov
xor
and
icebp
sbb
jle
mov
xchg
push
nop
mov
jmp
fisubs
xchg
scas
or
sbb
popa
jmp
sub
call
push
lock
popa
and
inc
pop
insl
add
aam
dec
ljmp
ljmp
daa
mov
xchg
xchg
fs
dec
into
test
mov
fmull
adc
and
xchg
cmpsb
int3
adc
sub
loope
in
push
mov
mov
pop
pop
and
jmp
and
push
fadds
jp
xchg
stos
insl
dec
icebp
mov
imul
daa
lods
jecxz
add
mov
popf
pushw
mov
in
and
mov
test
js
gs
mov
and
cwtl
bound
sub
pop
adc
sub
in
mov
dec
jmp
inc
mov
and
jmp
mov
inc
xor
enter
gs
mov
fisttps
pop
xchg
cmc
ljmp
notl
xchg
jmp
dec
push
mov
shlb
xchg
jb
inc
adc
sub
sahf
jp
pop
dec
inc
loop
add
add
or
popf
popa
lea
jmp
bound
cmp
cltd
sub
jno
xchg
adc
and
adc
out
mov
inc
or
xor
shl
sbbb
outsl
xchg
cmp
test
frstor
mov
out
or
out
jo
inc
punpckhwd
push
fs
insb
add
or
pop
ret
xor
enter
sub
mov
fildl
and
stos
int
jl
adc
jb
test
movsb
pop
sbb
pop
loope
push
insb
fistps
pop
popf
dec
inc
cmp
push
pop
lea
das
adc
fcoml
add
xchg
push
gs
idivl
scas
xor
xchg
cld
mov
mov
scas
dec
call
pusha
or
mov
popa
push
xor
test
cli
ret
inc
xchg
daa
es
xchg
pop
enter
pushf
test
data16
cwtl
fadds
adc
jecxz
cli
cmp
push
sbb
movsl
jg
lods
aaa
sub
xchg
adc
mov
or
push
aam
je
das
add
xchg
mov
fistps
xor
xor
jecxz
dec
jmp
xchg
stos
dec
adc
pushf
lcall
push
aam
inc
in
sbb
pop
pop
shl
add
jmp
add
dec
xchg
call
jge
fisubrl
pop
lcall
and
inc
movsbl
lahf
mov
cwtl
ss
mov
popa
sbbb
dec
sub
cmp
jmp
sbb
test
xor
call
push
dec
mov
dec
dec
adc
mov
ljmp
jge,pt
rcl
int3
dec
xchg
test
out
fwait
enter
pop
or
pop
push
clc
mov
sbb
push
dec
sub
push
jmp
adc
xchg
push
mov
push
fs
jle
and
pop
mov
inc
cmp
into
mov
mov
pushf
add
jo
jmp
or
call
lcall
dec
loopne
sbb
adc
add
push
pop
mov
fsubrs
incb
and
jmp
or
adc
pop
xchg
test
dec
and
pop
fstpl
in
jmp
fildll
cmp
rcrb
sbb
lcall
and
cwtl
mov
mov
xchg
fsts
xorb
js
movsl
orl
dec
xor
repz
loopne
cmp
ret
mov
push
scas
mov
rol
sbb
cmp
jne
xor
sub
adc
and
daa
inc
mov
mov
add
jge
add
mov
push
xchg
dec
das
or
pop
cwtl
test
add
sbb
aam
shlb
and
inc
add
popf
je
xchg
shll
daa
or
negb
and
jno
or
adc
jg
std
ja
ret
sbb
in
pop
jne
in
cmp
jns
xchg
xchg
pop
movsl
jno
fsub
push
movsl
jno
dec
js
xchg
into
imul
pop
dec
jecxz
dec
out
dec
loop
ret
mov
sti
pop
push
lea
dec
stc
lods
lret
movsl
jno
inc
rcrl
push
sub
pop
call
pop
dec
jp
arpl
fldenv
dec
pop
cmpsb
jno
sbb
addr16
mov
pop
outsl
and
or
xchg
cmp
sbb
jne
in
sub
cmpsb
add
mov
bound
lret
aad
pop
into
sub
xor
dec
sbb
enter
cmpsl
loopne
lahf
sub
insl
out
ds
add
adc
sahf
mov
std
ret
sbb
inc
xchg
out
or
shlb
jb
mov
cmc
test
rolb
fadd
mov
xchg
stc
xchg
or
ljmp
movlps
lea
mov
mov
fidivrl
dec
in
ficomps
or
pop
dec
sbb
jno
jns
sbb
dec
in
and
push
inc
adc
das
lock
dec
xchg
and
inc
xor
sbb
inc
inc
les
outsb
cmp
jno
push
movsl
sub
jo
adc
push
in
test
jnp
or
stc
pop
out
xchg
add
adc
xchg
movsb
mov
inc
fwait
mov
adc
cmpsl
sarb
out
outsl
jo
fmull
testb
icebp
outsb
jo
call
enter
push
add
sbb
pop
pop
mov
fnstsw
shlb
sub
inc
out
jo
xor
lret
test
inc
mov
and
xchg
repz
and
jno
add
jle
sti
cwtl
icebp
or
out
adc
mov
adc
xor
lods
loop
sub
add
pushf
sub
std
sbb
mov
addr16
into
push
jne
mov
shl
add
sub
insl
fbstp
mov
fbld
insb
out
adc
stc
repnz
out
push
gs
xor
sbb
sbb
pop
dec
pop
js
dec
out
iret
insl
daa
inc
and
aaa
jp
xchg
into
sub
inc
mov
dec
jno
add
adc
hlt
test
sub
inc
xchg
inc
fwait
ss
jns
mov
out
les
push
stc
aam
lds
sarb
or
pop
pushf
xchg
sub
mov
jns
push
ljmp
cmp
clc
and
pop
enter
out
xchg
xchg
unpckhps
inc
sbb
aas
and
test
mov
hlt
jle
jno
inc
push
add
and
xchg
movsb
jne
inc
inc
les
xor
sbb
cmp
gs
arpl
pop
jmp
add
fists
and
pop
jmp
loope
cmp
mov
dec
inc
dec
dec
enter
aad
or
pop
gs
mov
push
sbb
adc
xlat
sbb
gs
or
push
mov
stos
inc
stos
mov
inc
cmp
jae
addl
call
ret
inc
and
inc
push
popf
stc
add
sub
das
lods
or
cld
ret
mov
push
adc
shl
lcall
sub
sub
cmp
in
or
xor
and
push
test
dec
lods
sub
adc
push
shr
xlat
mov
clc
popf
out
aad
stc
dec
jae
sbb
pop
arpl
sbb
sbb
dec
push
test
mov
stc
sbb
shrb
cmp
push
and
inc
aas
inc
sub
stc
test
inc
xchg
pop
add
inc
push
sub
into
push
shrb
cmp
lret
pop
mov
jae
call
pop
xor
dec
push
xor
scas
xor
pop
push
mov
xor
mov
xor
test
mov
mov
sbb
faddp
clc
mov
xor
orb
xor
loop
fsubrl
aaa
push
push
xor
sbb
pop
das
insl
push
dec
into
cmp
sarb
call
in
jb
adc
hlt
xchg
out
cmc
out
outsb
repz
mov
inc
repnz
cmc
adc
sub
test
sbb
cmp
cwtl
je
jmp
inc
mov
mov
jecxz
decb
popa
sti
test
add
cld
pop
adc
outsl
mov
or
xor
test
sub
add
int
loope
jmp
xor
xchg
dec
jecxz
adc
inc
fsubl
testb
mov
or
mov
and
mov
cmp
or
dec
in
stos
mov
lret
icebp
in
in
cmp
mov
iret
aaa
cmp
adc
mov
pushf
jne
int3
ds
adc
daa
xlat
lret
jo
daa
xchg
imul
fcoms
and
sar
test
inc
mov
adc
inc
sub
loope
test
jmp
sub
sub
nop
ficomps
popf
mov
jbe
jne
mov
test
and
jmp
aaa
add
lock
sbb
sahf
cli
mov
pop
inc
sbb
insl
stos
dec
adc
mov
mov
sbb
mov
fdivs
int
or
dec
pop
cld
dec
mov
cmp
clc
dec
cld
adc
adc
out
fxtract
cmp
dec
test
or
pop
push
fsubrl
cmp
call
fists
add
jle
push
lods
addr16
dec
mov
psubsb
dec
inc
fs
xchg
or
cmp
and
inc
and
les
add
cmp
push
into
jb
xchg
lea
cld
in
les
leave
add
mov
mov
cmp
mov
je
push
jmp
xor
cs
adc
gs
dec
pop
xchg
inc
bound
fs
movsb
pop
push
mov
or
cmp
jmp
aaa
inc
pop
nop
std
mov
clc
adc
pop
outsb
stos
icebp
repnz
call
and
xchg
pushw
mov
popf
fimull
add
clc
add
push
xor
shl
lea
xor
sub
sbb
repnz
jmp
push
in
popf
icebp
iret
and
dec
adc
cli
and
pushf
cmp
dec
dec
in
call
and
cmc
sti
pop
test
inc
lret
and
call
repz
adc
jge
push
cmp
mov
mov
xchg
iret
mov
pop
pop
adc
adc
fnstenv
inc
push
dec
or
adc
sub
and
xor
test
shll
or
aad
mov
lea
jmp
mov
fwait
jg
loope
sti
inc
ja
or
das
mov
dec
gs
dec
adc
push
push
inc
sbb
cld
cli
mov
mov
shlb
adc
and
jg
lret
sbb
sub
xor
mov
leave
mov
inc
fs
aas
cmp
sub
jge
jb
mov
dec
jns
sbb
jmp
xchg
repz
inc
ret
adc
dec
jb
adc
sbb
stc
mov
loope
aas
out
sub
adc
loope
enter
lea
pop
dec
push
call
add
gs
xchg
cmpsb
inc
pop
rcrb
mov
push
add
inc
inc
sub
cmp
aas
sahf
mov
movl
mul
inc
inc
mov
or
inc
pop
ljmp
in
sub
rol
sbb
push
push
ja
push
cltd
jne
ds
scas
mov
adc
mov
mov
das
push
push
mov
pop
adcb
scas
std
xchg
sub
gs
and
mov
sub
dec
mov
sub
cmp
jo
je
unpcklps
les
cli
aam
call
daa
mov
cmp
push
inc
adc
jne
mov
adc
xor
cmp
or
dec
les
and
in
cmp
subb
pushf
mov
and
call
jmp
jb
rorb
and
lret
dec
sahf
or
call
xchg
mov
mov
add
inc
lahf
mov
mov
xor
inc
inc
push
add
test
xchg
out
adc
or
pop
ljmp
push
xchg
aam
sub
xchg
ljmp
movsb
adcb
jmp
push
xchg
sbb
sbb
stos
and
mov
lods
int
dec
jb
out
test
mov
loopne
and
fs
xchg
mov
xchg
adc
loop
movsb
rorb
mov
sbb
nop
xlat
cmpsb
sbb
push
pop
pop
mov
mov
fildll
sub
out
sub
dec
pop
shr
insb
es
lahf
in
xor
call
and
jae
or
cld
loope
cmp
pop
push
lret
test
mov
mov
xchg
outsl
mov
test
mov
inc
popa
ret
jmp
adc
adc
xchg
inc
out
jb
dec
sbb
or
xor
adc
imulb
push
adc
out
pop
mov
jp
adc
sbb
sbb
sbb
andl
in
call
pop
pusha
dec
repnz
mov
test
ret
test
mov
mov
rorl
jmp
xchg
cmp
push
cmpsb
divl
out
das
or
std
ja
ja
sub
cwtl
or
daa
lods
in
mov
mov
inc
and
test
jmp
pop
sbb
popa
imul
daa
push
dec
gs
les
jmp
mov
push
jg
call
xchg
or
insl
dec
loop
dec
dec
adc
mov
inc
inc
inc
fcomi
imul
push
inc
push
lcall
xor
js
mov
jne
xchg
xor
inc
mov
je
cmpl
ret
roll
sbb
popf
adc
adc
adc
push
or
inc
cmp
jb
popa
jge
adc
cld
sbb
and
pop
push
enter
push
jmp
nop
xchg
jmp
push
pop
and
dec
push
or
fcmovne
sub
xor
push
pop
xchg
popa
xchg
jno
push
ss
ds
push
js
or
push
stos
fwait
jle
or
mov
pop
adc
in
aas
lds
pop
std
add
push
out
xor
fisttpl
lcall
and
call
inc
cwtl
imul
inc
adcl
jl
xlat
fildll
bound
push
daa
mov
mov
std
sub
push
pop
in
dec
je
mov
or
xor
mov
or
std
jle
lret
lcall
cwtl
mov
or
imull
adc
lock
dec
mov
loope
push
or
int
xchg
cmp
cli
pop
jnp
dec
inc
je
push
push
push
cmp
lods
aad
pop
jmp
enter
cmc
outsb
or
decl
add
add
push
xchg
push
stos
sub
mov
jp
xor
daa
bound
inc
adc
sbb
out
pop
dec
inc
pop
adc
lret
add
xor
lods
jmp
push
test
dec
loopne
inc
and
hlt
push
xchg
cmpsb
and
adc
xchg
leave
push
jmp
stc
adcb
dec
sub
and
aam
jg
dec
mov
subb
cmc
sbb
aad
and
and
mov
xchg
push
mov
in
push
add
je
and
pop
leave
hlt
adc
out
dec
mov
mov
and
push
jmp
call
xchg
mov
popa
jae
add
push
in
xor
dec
dec
mov
shll
pop
sub
adc
inc
mov
jnp
and
mov
adc
dec
test
andb
loopne
xchg
cmp
mov
and
xor
aas
pop
push
int
or
out
sub
stos
xor
insb
or
mov
pop
dec
outsl
bts
jg
mov
and
inc
stos
and
or
pop
pop
or
push
mov
and
out
push
dec
lret
adc
jmp
sbb
adc
add
push
push
mov
dec
push
pop
popa
jne
add
fs
les
out
and
mov
fwait
cs
dec
dec
in
je
and
and
mov
loopne
xor
cmpsb
xor
pop
pop
xor
jne
and
mov
adc
adc
orb
push
and
cwtl
cmp
cmp
test
insb
in
and
add
mov
jns
inc
cwtl
loopne
shl
push
dec
mov
cmp
add
stos
xchg
cs
ljmp
jae
stos
mov
xlat
xchg
int3
dec
jmp
and
lcall
mov
push
scas
out
push
je
orb
enter
int
in
sti
subb
and
in
sti
or
lret
or
sub
cmpsl
and
or
inc
sub
sub
scas
and
adc
test
aas
pop
adc
enter
jle
jnp
mov
xor
or
inc
sti
and
sub
mov
add
hlt
cmp
cmp
lret
mov
repnz
ljmp
pop
or
call
lods
test
mov
sbb
call
adc
xor
inc
and
push
push
call
imul
cmp
jle
cmp
bound
push
pusha
jnp
mov
imul
clc
cld
shrl
mov
adc
lock
pop
mov
and
rorl
push
mov
push
in
cmp
or
mov
orb
xor
test
jle
call
mov
scas
adcb
cmp
jl
ljmp
ret
jge
cwtl
dec
mov
inc
pop
xchg
inc
push
xchg
xchg
mov
and
arpl
ja
bound
cmp
cmp
push
or
mov
push
hlt
jle
cmp
jo
or
mov
dec
mov
cmp
pop
sub
cmp
roll
in
pop
push
enter
or
mov
bound
repz
add
sbb
adc
pop
cvttps2pi
adc
sub
jle
jle
inc
pop
jmp
pop
daa
add
jne
mov
pusha
pop
jne
and
addb
push
dec
adc
mov
and
inc
adc
add
inc
sbb
nop
jp
cmp
or
ss
sarl
dec
jg
sbb
or
add
adc
aaa
shlb
push
mov
insb
adc
outsb
in
mov
mov
xor
imul
mov
push
sbb
jge
inc
mov
enter
mov
jno
add
sahf
add
push
mov
or
dec
or
pushf
cmpb
imul
xchg
adc
fcomps
imul
sbb
pop
pop
ret
aad
cwtl
aad
mov
nop
sub
movsl
xchg
in
adc
xor
inc
mov
lock
dec
ss
das
int3
aam
pop
or
push
mov
cmc
sub
jne
add
pop
negl
jmp
cmc
aam
lods
inc
and
mov
fmuls
mov
sbb
inc
jp
xchg
pop
sbb
dec
loopne
pop
out
and
call
leave
adc
xchg
sbb
jne
adc
add
pop
push
mov
lret
into
mov
sub
and
movl
jns
loop
and
adc
jmp
mov
xchg
std
imul
mov
addb
cmp
icebp
dec
inc
insb
jmp
sub
hlt
mov
stos
testl
push
insb
cmp
xchg
call
jbe
fstps
or
jmp
cwtl
ret
xor
lock
xor
and
stos
and
je
call
add
adc
add
sahf
sub
mov
add
cmp
test
mov
pop
gs
orb
pop
push
and
sub
icebp
clc
and
sbb
cmpsb
add
mov
scas
aaa
sbb
lock
addr16
xor
pop
sbb
aaa
sti
fnsave
add
mov
cmp
jo
pop
xchg
fnstsw
xchg
adc
push
or
sbb
test
sub
push
jecxz
lret
hlt
pop
dec
lret
flds
ss
nop
xor
inc
mov
xor
sub
sub
or
and
shrb
xor
loop
arpl
pushf
pop
loopne
fs
lds
jle
xor
in
or
add
jl
data16
or
ljmp
and
inc
lock
cs
inc
sub
mov
data16
mov
inc
jne
rorb
in
in
xor
adc
ss
add
or
and
jb
jmp
xor
inc
xchg
hlt
pop
or
clc
push
push
adcb
cmpl
sbb
fs
fwait
push
sub
gs
insb
mov
mov
jo
xchg
fs
add
cmp
mov
jge
iret
nop
xchg
push
jg
fiaddl
popl
sub
pop
xor
hlt
mov
and
adc
mov
loopne
add
inc
pop
jno
add
push
xor
lahf
icebp
adc
adc
js
xchg
shll
cmp
loopne
pop
xchg
or
out
or
sub
sub
out
mov
cmp
mov
inc
or
push
dec
cmc
mov
adc
xchg
test
sub
cmp
sub
mov
mov
pop
push
cwtl
in
mov
adc
call
dec
stc
mov
xor
pop
lret
xorps
xor
cmc
push
jnp
leave
das
insb
push
mov
adc
shll
in
mov
aad
dec
pop
adc
cwtl
sbb
das
lcall
imul
aaa
sub
and
and
xchg
outsl
in
jmp
clc
add
arpl
cmpsb
xor
gs
fnop
and
cld
sub
cltd
xor
int3
sti
repnz
jae
push
ret
shrl
mov
in
popa
xor
xchg
or
inc
sub
or
pop
xchg
dec
fwait
sbb
pop
sub
sub
push
popa
in
js
pop
fstpl
pop
inc
pop
or
mov
add
mov
inc
and
test
divb
loop
dec
daa
sbb
mov
shrl
aaa
mov
lock
and
ss
ret
jb
dec
pop
pop
xor
and
hlt
aam
xlat
clc
shll
mov
or
jmp
ss
and
push
sub
enter
aaa
cmp
push
jbe
mov
adc
aam
cltd
adc
in
add
push
lock
incl
push
xchg
push
insb
add
ret
je
dec
fwait
sub
push
lods
push
inc
jl
test
jmp
das
mov
xlat
or
mov
imul
inc
psrlq
push
sbb
push
or
hlt
mov
fnstenv
ret
mov
adc
enter
xchg
inc
inc
clc
call
ds
negl
dec
pop
out
and
mov
jae
jle
push
push
dec
imul
loop
xchg
add
dec
jle
add
movsl
iret
or
jmp
ja
ja
inc
dec
add
push
ror
inc
adc
sbb
call
jmp
jmp
jne
jo
lahf
sbb
xlat
push
aam
jle
ret
ljmp
fildl
fidivl
and
xlat
fdivrs
mov
push
push
repnz
mov
or
adc
adc
push
pop
mov
fsubs
jnp
mov
sub
std
cmp
sbb
lahf
xchg
ret
loopne
mov
push
daa
pop
mov
xor
push
mov
mov
les
shlb
xor
push
fmull
fcmovb
inc
pop
aam
and
in
das
push
push
mov
cmc
insb
les
jl
jle
out
call
mov
mov
mov
lods
sbb
jmp
xchg
ds
nop
and
push
inc
cmp
pop
rcr
mov
xor
test
xor
push
dec
pushl
push
shr
cmp
mov
stc
or
je
movb
inc
mov
sarl
inc
mov
mov
lock
out
sbb
mov
mov
mov
aaa
inc
fcoms
lcall
lcall
int3
test
jno
rorb
jno
ret
test
mov
fs
xchg
mov
dec
sbb
inc
mov
movsbl
enter
xchg
xchg
stos
mov
cmp
jg
push
fdiv
and
jo
aas
jmp
js
push
leave
mov
xchg
pop
inc
cli
sti
mov
or
push
jmp
xor
mov
inc
inc
cmp
js
jne
push
adc
or
inc
test
add
repz
es
mov
and
push
loope
add
and
xchg
push
cli
mov
lods
xchg
test
ss
pop
ja
cmpsl
mov
xor
adc
sbb
or
jne
cmp
repz
adc
pop
xchg
int3
hlt
mov
push
inc
rorb
sbb
sub
inc
xor
test
fidivrs
outsb
adc
imul
push
pop
aam
leave
repnz
xor
mov
add
in
lea
adc
inc
add
mov
mov
pop
push
sub
push
popa
lret
or
pop
scas
fidivl
or
sbb
add
add
es
adc
adc
sub
fwait
or
arpl
push
insb
and
mov
push
mov
stos
mov
sub
sti
xchg
sti
mov
dec
stos
ss
mov
call
ja
jmp
push
or
jmp
inc
push
xor
arpl
inc
sub
xor
ret
pop
cmp
jbe
mov
cmp
sub
rol
pop
pop
dec
pop
ret
fisttpll
test
add
add
incl
sar
ss
aam
add
and
ljmp
int3
or
pop
shlb
inc
mov
sub
xor
jbe
mov
shr
addr16
or
dec
mov
fwait
add
push
call
mov
out
add
mul
adcb
loopne
dec
loope
movsl
adc
adc
mov
xor
xchg
inc
or
inc
pop
ds
mov
push
push
or
insb
sub
or
cwtl
sbb
mov
sub
aas
stos
push
and
adc
and
add
adc
shll
or
addb
lret
mov
loopne
adc
jb
mov
in
mov
add
pop
out
daa
push
pop
shll
sti
xor
loop
cmp
std
sub
enter
lock
and
push
pop
pop
mov
and
push
push
push
mov
push
mov
sub
jmp
ret
test
lea
int3
dec
xor
out
dec
cmp
dec
cmpsl
and
pop
pop
aad
into
cld
test
cltd
filds
push
add
jecxz
cli
mov
inc
and
push
push
adc
push
jnp
pop
idiv
mov
jle
or
pop
clc
fiadds
inc
push
pop
mov
dec
jnp
outsb
rclb
aam
scas
testl
gs
adc
and
pop
stc
push
sbb
pop
jmp
add
adc
inc
jne
xor
and
bound
push
adc
test
lods
jmp
push
jo
inc
add
and
mov
movsb
mov
in
inc
inc
sbb
sti
dec
iret
dec
mov
xchg
bound
adc
sub
xor
in
enter
shl
cmp
mov
xchg
mov
xchg
and
push
push
popa
push
rorl
pop
xchg
add
mov
mov
inc
push
add
cmc
add
call
sbb
pop
jne
jnp
xchg
jb
adc
or
jae
sbb
daa
xchg
inc
cmp
sbb
and
xor
inc
movsl
fnstsw
inc
push
call
call
lock
xchg
in
jbe
sarb
outsl
movsb
or
and
enter
dec
test
jp
or
or
pop
imul
inc
sbb
mov
dec
mov
xchg
push
add
shl
movsl
jb
or
sub
testl
add
movl
xchg
sub
and
xchg
inc
mov
adc
das
push
fnsave
push
xor
mov
ja
push
imul
dec
mov
ss
pop
inc
jle
inc
xchg
pop
sbb
push
inc
jmp
sahf
jb
adc
mov
or
adc
cmc
fistpl
jge
je
or
fnstcw
pop
xchg
adc
sbb
das
jne
addr16
cmp
ret
test
lods
jne
pop
insl
adc
pop
cmp
mov
add
sbb
adc
testl
push
add
and
cli
adc
sub
mov
loopne
inc
adc
mov
adc
add
dec
jmp
lock
hlt
mov
into
xor
aam
fcoms
or
add
inc
xor
push
pop
ficoms
lcall
or
les
mov
sub
adc
mov
dec
adc
pop
fcompl
and
xchg
fstpl
pop
push
adc
push
pop
and
shrb
xchg
xchg
cli
lock
inc
in
mov
sbb
and
push
push
cmp
pusha
adc
ja
inc
loopne
test
push
and
jl
out
lret
jns
push
adc
inc
mov
flds
mov
popf
scas
in
mov
sbb
aas
jns
test
cmp
scas
clc
std
and
nop
clc
and
push
test
sbb
pop
cmp
inc
decb
jl
arpl
and
adc
push
jbe
push
push
std
inc
lcall
dec
scas
outsl
fisubrs
pop
notb
pop
mov
popf
push
sub
sub
mov
aaa
ret
imul
mov
into
test
push
push
in
adc
xchg
les
push
sbb
das
bound
xor
cli
imul
cmp
lahf
les
je
inc
cld
jo
inc
je
jmp
inc
popf
outsb
push
sub
xor
imul
sbb
loopne
cmp
push
add
or
mov
call
mov
inc
psraw
xor
ljmp
insb
and
cmp
push
sbb
push
mov
xor
divb
jb
cmp
fbstp
shll
fs
icebp
jnp
dec
xchg
lret
incb
push
pop
adc
orl
jae
push
and
popf
and
adc
mov
and
inc
xor
sub
and
adc
mov
xchg
sbb
clc
pop
shlb
pop
sbb
or
ret
adc
pop
push
cltd
or
pop
mov
push
pushf
dec
or
sar
insl
popa
movb
cmp
pop
push
loope
dec
push
addl
and
test
xor
sub
jmp
sub
inc
pusha
or
xchg
and
pop
mov
add
adc
sbb
test
mov
and
dec
xchg
adc
jge
inc
shll
push
push
je
daa
ljmp
fstpl
push
xor
adc
test
mov
aas
icebp
lock
int3
mov
pop
bnd
clc
inc
add
or
shll
fistps
je
fdivrl
hlt
mov
fs
shlb
fisubs
xchg
fs
ljmp
inc
cmp
jae
pmuludq
inc
clc
inc
gs
push
mov
pop
adc
lcall
add
call
enter
push
sbb
loop,pt
je
mov
in
test
inc
loope
leave
scas
fists
and
push
pop
xor
ja
pop
mov
and
adc
int3
sub
in
dec
pop
stc
std
adc
cli
jp
jl
rcl
xchg
push
cli
leave
mov
mov
stc
inc
push
cmp
cmp
inc
jge
jge
cmpsl
push
lret
adc
jo
in
aad
dec
rorb
lock
in
jl
mov
subl
fs
out
push
dec
sbb
stc
pushf
mov
adc
or
xor
dec
sbb
cmp
jne
inc
sub
loop
push
sbb
jne
nop
push
push
adc
repz
mov
dec
clc
je
sub
push
inc
sbb
jmp
std
outsb
pop
jmp
lea
call
mov
xor
or
test
pop
xchg
adc
pop
push
loop
sbb
sbb
jno
inc
add
and
xchg
sar
push
add
inc
shlb
mov
fs
repnz
cmp
subl
cld
jne
xchg
push
sar
hlt
cwtl
test
mov
mov
pop
ret
and
sbb
sub
int
cli
nop
xchg
lret
dec
pop
addr16
bound
sub
mov
cld
push
mov
adc
jne
push
adc
mov
cmp
xchg
add
std
pop
cltd
loop
pop
cltd
jno
or
mov
outsb
inc
fs
fstl
sbb
and
xchg
or
sahf
pop
xchg
mov
call
sub
mov
test
shr
sub
inc
mov
movb
mov
cli
xchg
invd
xor
cmp
shlb
pop
fidivs
jne
mov
rorl
pop
adc
and
je
pop
les
les
in
push
jbe
insb
sbb
lcall
dec
mov
push
pop
dec
sub
ljmp
sbb
lods
ret
das
test
mov
pop
and
dec
or
in
add
dec
and
mov
adc
cmp
fs
test
and
push
je
lock
pop
mov
dec
rorl
testb
in
fs
xor
or
push
and
movsl
push
test
and
scas
int
adc
adc
fildll
xlat
in
mov
repnz
push
enter
inc
cmp
lcall
and
lcall
pusha
sbb
movsb
inc
inc
fimuls
mov
aad
cmpsb
add
nop
xlat
and
lret
inc
push
sub
out
or
pop
and
pop
jmp
or
adc
je
push
scas
and
lret
lret
adc
ret
mov
or
pop
ljmp
adc
orb
push
sbb
xchg
push
sbb
dec
vprotd
test
imul
lods
ret
adc
cmpl
xchg
out
mov
sub
and
repnz
inc
adcl
test
movsl
sbbb
push
add
jne
push
dec
test
or
mov
add
or
addb
sbb
pushf
test
cmp
into
inc
sarl
les
test
adc
adc
xor
iret
data16
push
cmp
push
repz
scas
mov
insb
cld
lea
jecxz
or
lods
add
push
fstps
int3
and
jne
lock
and
sub
movsb
xchg
adc
call
loop
in
shlb
scas
jecxz
mov
cwtl
xchg
jb
out
fisttpl
div
pop
leave
jo
jnp
mov
es
rorb
clc
test
mov
or
cmp
in
in
inc
aad
pop
pop
pop
int3
stc
popa
ret
jle
mov
inc
mov
or
andl
stc
push
lcall
xchg
lock
icebp
and
fmuls
jmp
and
cmp
jne
mov
adc
mov
lock
in
mov
pop
adc
xor
adc
xor
mov
push
lods
adc
test
in
sbb
jb
idivb
das
hlt
hlt
clc
ss
mov
stc
dec
fnstsw
decl
imul
test
lds
pop
int3
dec
rolb
adc
jmp
call
adc
cmpsb
inc
cld
mov
dec
adc
dec
and
inc
loope
ss
pop
es
cmp
or
test
iret
mov
rorl
adc
inc
add
ret
lea
shlb
sub
jne
inc
xor
xchg
sbbl
or
rcll
push
rdmsr
mov
push
leave
jne
xchg
mov
or
dec
push
test
cmp
mov
sub
dec
loope
push
mov
gs
popa
lds
sti
jmp
leave
dec
push
mov
xchg
cltd
xchg
jmp
or
push
xchg
popa
or
push
std
pop
mov
adc
pop
cmp
add
add
cmp
imul
mov
cmp
out
add
mov
dec
jg
cli
syscall
mov
lea
add
jmp
push
mov
mov
popaw
daa
lea
or
in
sbb
andl
push
pop
sbb
and
sub
daa
pop
rcl
dec
ret
out
in
and
imul
push
jl
shlb
cltd
jae
lcall
inc
adc
mov
mov
add
adc
ret
inc
test
mov
dec
scas
mov
and
lea
mov
mov
adc
add
in
cmp
jle
jae
xlat
and
dec
push
call
pushl
mov
je
inc
jne
enter
adc
dec
xchg
pop
mov
aas
jo
push
pop
and
add
push
pusha
xor
notl
sub
mov
pop
pop
pop
mov
call
sub
enter
scas
mov
mov
bound
ficoms
mov
cmp
cwtl
jne
test
jbe
adc
je,pt
aas
lock
push
sub
sbb
add
dec
adc
sbb
sbb
mov
fcos
xchg
mov
push
daa
and
inc
movsb
add
sbb
jmp
and
xor
jg
mov
adc
mov
rcrb
ret
mov
and
dec
or
ljmp
dec
std
cli
int3
out
jg
xchg
mov
pop
sub
add
sub
adc
mov
fisttps
mov
lahf
aam
inc
xor
cmp
or
mov
push
mov
push
sbb
mov
dec
lret
ret
push
jl
gs
inc
cld
dec
and
nop
xchg
addl
fimuls
mov
add
mov
scas
mov
cmp
negb
int3
push
stos
mov
movsb
push
stc
adc
push
mov
push
sbb
addps
or
pusha
loopnew
call
pop
lcall
sub
or
insb
sbb
cld
add
pop
adc
shlb
adc
loopne
sbb
int3
adc
enter
aam
cli
scas
int
sub
push
imul
push
cmp
jbe
mov
pop
mov
sub
push
repz
dec
sub
xchg
mov
ja
mov
cld
je
std
add
shll
or
test
pop
adc
push
lahf
pop
dec
sbb
cli
popf
stos
dec
add
jmp
xor
sbb
aaa
and
inc
jne
adc
test
test
mov
movsb
inc
cld
in
or
pop
push
xchg
pop
xor
cld
dec
or
mov
and
pop
mov
imul
rclb
adc
stc
sub
or
shll
sbb
mov
adc
push
jmp
lea
and
dec
or
xchg
xchg
dec
test
sub
xchg
adc
mov
adc
push
mov
or
and
pop
and
push
adc
mov
aaa
sti
das
mov
mov
or
and
clc
or
and
inc
cmpb
mov
or
xchg
or
sbb
cmp
sbb
add
mov
add
cmp
jge
cmp
je
sbb
sbb
fnstcw
fmuls
jg
mov
mov
repz
push
sbb
popa
les
add
scas
inc
jle
leave
lcall
enter
stc
cmp
dec
or
adc
incl
add
push
mov
and
cli
and
ss
adc
popf
xor
cmp
sub
loop
mov
push
repnz
and
mov
cmp
jne
jecxz
in
dec
or
or
mov
pop
popa
gs
loopne
mov
jmp
jbe
arpl
or
push
int3
leave
or
xorl
push
ljmp
lret
je
fwait
jo
movsl
or
add
xchg
mov
test
scas
in
sahf
xchg
in
jae
or
movl
mov
shlb
adc
xchg
rcl
xor
mov
ljmp
addl
push
in
push
and
push
adc
imul
jmp
sbb
or
add
or
test
fld
jmp
sbb
es
inc
pop
xorl
fldenv
dec
push
jmp
ja
or
and
repnz
aas
rorl
jne
call
add
or
data16
adc
adc
push
mov
shlb
adc
mov
movsb
int3
fidivrs
call
test
sbb
bound
xor
orl
in
xchg
xchg
sub
inc
push
call
mov
jg
inc
jg
or
sub
dec
in
sub
ret
andb
or
mov
xchg
aam
mov
pop
push
jle
add
addl
push
scas
inc
neg
dec
dec
mov
std
adc
cmp
cltd
sbb
push
mov
je
push
dec
push
es
push
xchg
std
sub
outsl
es
repnz
stc
and
and
push
loopne
and
push
test
les
sub
pop
call
or
mov
lea
pop
cli
sub
jne
fs
push
in
cmp
aas
mov
pop
or
adc
lcall
pusha
jne
scas
mov
test
mov
dec
adc
roll
cmp
add
sub
adc
mov
loop
int3
stc
or
and
mov
inc
mov
sub
jb
push
loopne
mov
xor
push
lea
sbb
mov
sub
or
and
sub
add
scas
adc
int3
mov
dec
dec
sub
fimull
sarb
inc
cmpsb
lret
inc
inc
inc
push
inc
sbb
insb
xchg
or
inc
push
dec
mov
sub
pop
mov
mov
dec
adc
mov
mov
mov
add
arpl
add
xchg
clc
inc
or
icebp
xor
push
dec
fistps
push
or
cli
or
push
push
or
lea
sarb
cmp
std
in
cld
icebp
and
and
push
data16
lock
nop
and
adc
test
push
and
cmp
sbb
subb
nop
cmp
loopne
dec
mov
inc
push
mov
rcrl
out
and
out
jle
mov
nop
movsl
sub
mov
inc
pop
pop
int3
inc
pop
mov
sbbb
and
dec
cld
cltd
add
pop
rolb
inc
sbb
and
pop
and
shlb
pop
and
shlb
pop
and
sarb
and
or
pop
mov
mov
jp
adc
lods
and
lock
inc
loope
mov
std
mull
jns
cli
sahf
jo
test
sar
adc
ljmp
icebp
shll
mov
adc
ljmp
sub
adc
add
int3
dec
adc
mov
inc
dec
fs
cmovno
add
add
roll
and
adc
add
int
inc
incl
sub
inc
clc
movsl
jb
std
push
inc
cld
inc
cmpb
sub
pop
test
inc
inc
pop
mov
push
loop
cmp
bound
jg
sub
loope
add
mov
pop
dec
dec
pop
adc
es
or
jbe
enter
ljmp
push
cmp
les
adc
jmp
adc
jae
push
lds
in
outsl
mov
nop
popf
loop
jno
dec
add
cmp
adc
or
cmp
xor
and
shr
lock
add
sbb
sub
sub
aas
dec
push
jae
ret
mov
mov
repz
sbb
loopne
fmulp
cmp
add
mov
inc
arpl
sub
or
add
lret
rcll
notb
or
shll
adc
adc
mull
sub
and
push
cmpsb
outsb
push
adc
push
jno
call
jne
push
push
mov
cmp
sbb
jle
dec
mov
jmp
xor
xor
jnp
mov
ret
aad
adc
sub
mov
out
int3
add
add
sub
fildl
scas
rcll
mov
movsb
push
cmpb
adc
inc
shlb
push
jmp
cmp
add
jne
neg
pop
push
shlb
mov
rclb
pop
dec
inc
mov
xor
adc
xorl
orl
jmp
or
inc
stos
xchg
rcl
cmp
fcmovne
xor
push
scas
ss
mov
inc
adc
out
xchg
mov
popa
jmp
lret
lcall
xor
lea
sub
ljmp
jg
push
dec
ss
pop
or
je
jmp
add
or
push
mov
xchg
jmp
adc
sbb
jmp
adc
les
or
addb
cmp
ret
stos
pop
lock
lods
or
mov
ljmp
jno
pop
mov
div
xor
inc
cmp
stos
adc
push
or
or
jne
pop
pop
pop
xor
call
ljmp
add
repnz
jne
es
add
sbb
data16
jg
and
pusha
imul
lahf
inc
jmp
push
call
test
hlt
push
add
call
ret
das
push
jne
jmp
pop
leave
cmpb
sti
mov
xchg
mov
jne
sahf
push
adc
ret
ret
push
stos
stos
int3
stos
sbbb
or
inc
cmp
mov
push
mov
je
je
nop
inc
add
testb
add
jmp
cmp
loope
lahf
or
or
jne
dec
cld
pop
jmp
lea
mov
iret
xchg
lods
mov
test
outsb
pusha
pop
sub
cmp
jb
mov
dec
imul
fcom
and
pop
testb
leave
xor
and
cld
xorl
das
adc
aas
mov
call
push
xor
popa
inc
sub
xchg
sbb
dec
lock
xorps
lret
test
lods
dec
fs
adc
pop
sub
cltd
and
inc
stos
out
push
sbb
dec
cmpsl
pop
das
push
stos
ret
sub
pop
mov
enter
xor
sbb
fs
nop
pop
dec
lea
cmp
int
ss
mov
popf
cld
xor
dec
aaa
mov
repz
call
lods
ffreep
repz
mov
dec
fisubs
test
sub
add
mov
add
loopne
and
insb
sbb
daa
inc
call
inc
mov
adc
dec
fisubrs
sbb
or
cmp
aas
test
push
inc
and
or
xchg
call
and
jmp
push
adc
pushf
roll
pop
jo
shrl
add
sub
dec
push
pop
push
adc
pop
les
enter
mov
push
pushf
pop
pop
lea
rep
movsb
pop
rol
mov
cwtl
and
and
movsb
add
shl
lea
sbb
jne
mov
test
push
push
out
adc
add
lock
into
pusha
pop
push
shl
shr
add
fnstenv
sbb
jmp
mov
inc
sub
push
and
push
dec
pop
rcll
es
jne
xorb
das
rcr
ret
push
fwait
push
mov
daa
ret
pop
adc
inc
mov
movsb
and
pop
clc
rorb
hlt
xor
fcoms
mov
mov
inc
cmp
jl
mov
push
in
or
push
les
adc
or
add
xor
lock
stc
adc
iret
repnz
pop
mov
and
and
pop
aas
enter
out
addb
mov
cmp
cwtl
xor
loope
je
out
fdivs
enter
aam
xchg
pop
mov
pop
and
adc
xchg
mov
dec
rcll
scas
popa
push
xor
iret
outsl
xchg
rorl
jmp
dec
jp
loope
sbb
inc
jno
aaa
add
jl
aas
and
xchg
jl
repnz
sbb
mov
cmp
and
enter
push
lods
inc
cs
shl
sub
ret
add
push
addb
dec
cmp
jb
bound
or
add
push
push
xchg
movsl
clc
dec
sbb
aaa
sub
add
push
mov
mov
sub
pop
hlt
mov
jbe
mov
imul
in
lret
or
sub
jle
popa
and
jae
push
push
pop
mov
pop
jmp
mov
or
adc
xchg
stc
adc
into
xchg
adc
push
insl
cmp
les
mov
jae
fsub
sbb
pop
inc
ret
ss
xchg
cmp
sub
cld
dec
ret
push
mov
movsb
repnz
fldenv
inc
pop
je
jae
inc
iret
sub
and
push
inc
dec
enter
insb
xchg
mov
inc
cmp
fldt
or
js
xorl
dec
adc
scas
sub
scas
enter
cltd
ja
lea
pxor
adc
or
ja
divb
repnz
mov
push
in
push
mov
inc
call
fsubs
imul
jae
add
inc
out
add
sub
inc
dec
mov
pop
je
test
and
inc
xor
pusha
push
add
in
stos
cmp
out
loop
cmp
pmaxsw
inc
xchg
inc
adc
push
xor
adc
sbb
push
pop
and
vsqrtsd
and
mov
jnp,pt
xchg
adc
and
dec
push
imul
jne
ret
pop
arpl
cmc
cwtl
inc
or
sti
js
mov
loope
mov
dec
outsl
fsubl
sbb
push
cmp
insb
adc
or
std
xchg
or
ret
adc
shlb
incb
or
jmp
jns
and
fsubp
jne
adc
popa
xor
shlb
dec
ljmp
iret
xchg
or
inc
mov
mov
imul
popf
jg
ljmp
test
int
pop
sbb
loope
or
mov
and
fmul
sti
xor
call
adcl
inc
cmp
cmp
or
add
cmp
orb
sti
sub
mov
fisubrl
dec
sbb
xchg
and
add
fdivrs
jb
in
pop
sub
sti
inc
add
in
pop
cmp
inc
movsl
adc
jg
test
inc
xor
test
ret
iret
cld
adc
jg
out
idivl
lock
or
adc
push
jnp
in
xor
inc
pop
push
inc
push
insl
insl
loopne
ret
adc
enter
jne
addl
push
rorl
sbbb
je
sub
or
loope
rcrl
call
jle
out
mov
popa
and
fnclex
ret
les
push
inc
dec
push
adc
mov
xchg
test
dec
lds
mov
mov
incb
lock
adc
orl
test
mov
add
push
int
inc
in
sbb
mov
jmp
inc
dec
push
aam
add
outsb
adc
inc
lret
adc
jmp
stc
inc
ljmp
shr
in
call
or
jne
div
mov
stos
out
xor
adc
out
rcrl
jb
cmp
or
pop
icebp
xchg
add
mov
jo
sub
outsl
sub
sbb
push
dec
outsl
adc
enter
or
insb
and
pop
fs
sub
and
fists
mov
fadds
rolb
push
push
xor
lods
test
insb
dec
push
sub
mov
sbb
adc
loop
sub
push
les
pop
adc
cwtl
inc
shll
push
fnstcw
daa
enter
sub
mov
sub
andb
inc
pop
pop
jg
outsb
add
mov
mov
shlb
pop
cld
jne
leave
shrb
adc
mov
mov
addr16
jp
add
cmp
add
jne
jmp
cld
add
add
popf
in
test
dec
xchg
jbe
loope
cmp
dec
aas
mov
cmp
xor
sub
pop
push
pop
ljmp
dec
jmp
in
adc
mov
stos
mov
inc
pop
or
inc
movsb
ret
fstpl
jge
push
dec
repnz
addr16
das
add
xor
mov
cmp
jne
push
inc
inc
dec
lea
jge
js
cmp
in
cmp
inc
dec
addl
mov
scas
dec
ret
and
loopne
cmpsb
sub
repz
jecxz
insl
sbb
fcoml
dec
adc
cs
cmc
nop
sbb
add
rcrb
fsubrs
les
cmp
jne
enter
out
gs
adc
cmpsl
xlat
and
or
cmp
addr16
mov
inc
add
leave
jge
jge
in
gs
mov
pop
lea
mov
ret
and
sub
stos
sub
or
inc
jmp
rclb
dec
adc
stc
add
imul
sub
dec
mov
cmpsl
or
jp
push
ds
jne
pop
xor
lret
push
or
mov
cmp
sbb
and
pop
pop
mov
cmp
aaa
jne
push
push
adc
add
inc
jo
add
fs
adc
xor
cmpsb
repz
mov
movsbl
inc
jmp
or
push
push
mov
and
dec
or
push
sbb
pop
and
jmp
and
and
jl
cwtl
in
jb
or
test
xchg
lret
add
imul
icebp
inc
lahf
clc
aad
das
add
mov
jmp
cmp
sti
jle
jnp
rorl
inc
xchg
movsl
mov
dec
sub
mov
popf
adc
inc
ds
wbinvd
jge
dec
fimull
or
sub
mov
push
jmp
je
or
jmp
mov
shlb
sbb
imul
add
enter
outsl
add
cltd
nop
or
clc
popa
bound
loopne
sub
in
pop
cwtl
push
xchg
pop
arpl
std
dec
out
and
mov
and
scas
mov
sbbb
sarb
add
int
sbb
and
adc
and
inc
and
inc
loop
test
mov
or
xor
imul
mov
adc
jge
gs
nop
or
sub
or
push
mov
out
or
movsl
add
mov
adc
testb
test
add
loopne
movsb
clc
add
cli
xchg
enter
jbe
xchg
inc
push
stos
stos
adc
add
shlb
cltd
lods
adc
call
jge
cmp
mov
repz
and
pop
pop
and
mov
cmp
inc
adc
clc
xchg
cmpb
inc
dec
and
gs
mov
mov
out
push
or
iret
jbe
loope
adc
pop
adc
dec
inc
add
xchg
adc
dec
mov
push
rorb
or
pop
push
or
out
dec
rcr
jp
js
into
and
call
fucomp
mov
pushf
mov
mov
and
jg
cmp
jne
push
mov
lahf
data16
jle
insb
mov
and
inc
push
call
sub
jo
push
dec
inc
in
rorb
add
dec
sub
push
jmp
call
pop
clc
sub
fsubrl
or
sahf
jne
andl
push
test
jne
sbb
sub
scas
iret
rclb
fnstcw
jmp
int3
mov
insl
int3
fistpll
hlt
or
es
pusha
inc
clc
movsl
mulb
mov
push
jp
or
push
dec
cmp
pushf
sub
or
aam
jbe
xor
dec
sbb
sahf
les
sahf
fs
sbb
mov
dec
lret
arpl
loopne
gs
or
pop
pop
xchg
inc
sbb
push
adc
push
mov
mov
lds
cmpsb
rcll
cwtl
jmp
inc
inc
sub
std
adc
rolb
es
ljmp
add
push
cld
mov
jl
fiaddl
mov
fdivrl
push
cltd
lahf
mov
adc
lods
in
int
ljmp
int
hlt
xor
test
fwait
mov
mov
mov
call
enter
clc
shll
xor
movsl
adc
xorb
clc
cmp
repnz
test
inc
enter
pop
scas
repnz
or
fdivl
test
push
shrb
sbb
call
stos
mov
hlt
enter
cld
pop
lock
mov
sahf
mov
inc
and
add
pop
push
inc
aam
push
scas
and
adc
xchg
int3
pushf
inc
jge
dec
pop
mov
pop
push
das
shrb
int
mov
dec
pusha
dec
cmc
fs
push
and
dec
jmp
and
insl
cmc
insl
dec
or
add
adc
push
adc
add
ds
mov
arpl
xorl
into
in
push
lds
imul
lcall
lods
dec
ja
repnz
ja
inc
pop
lcall
jl
cmp
js
call
add
dec
lea
cmp
fmuls
pop
add
jle
pop
push
or
es
movsb
dec
imul
ss
lds
sbb
xor
jb
cmp
cmp
cltd
lock
dec
push
mov
lock
and
cmp
inc
add
cmp
inc
mov
es
inc
inc
in
mov
negl
mov
bnd
push
or
add
jg
clc
push
push
ja
cmpl
sbb
mov
test
or
testb
lea
mov
mov
mov
xor
jl
add
and
push
out
arpl
call
jmp
fs
in
xchg
les
push
or
add
push
jb
mov
and
or
mov
or
dec
push
lret
add
imul
pop
ret
lock
loopne
push
jnp
cmp
lea
push
ficoms
push
mov
xchg
xchg
das
mov
jno
fisttpl
enter
das
xchg
jl
in
and
ret
ja
fcompl
stc
sbb
mov
mov
jl
movsb
pop
and
mov
mov
xor
cs
js
in
and
adc
mov
jp
hlt
pop
and
adc
xchg
das
stos
rol
or
push
orb
lds
repnz
jae
push
call
rolb
inc
ljmp
das
sbb
mov
add
inc
pop
repnz
or
mov
cld
bound
les
in
mov
jne
pop
push
lcall
andl
mov
jp
pop
lea
je
lahf
adc
lock
sar
dec
movsl
cmpsl
outsb
adc
icebp
mov
push
sysexit
test
jecxz
and
ficompl
and
jne
mov
xchg
movsl
mov
xchg
retw
mov
mov
test
mov
inc
inc
jbe
push
in
pop
pop
pop
or
int3
jae
mov
push
std
faddl
cmpsb
mov
dec
rolb
pop
sub
out
sub
push
sarb
sub
shlb
cmc
rcrb
mov
sub
fildll
mov
das
jmp
mov
adc
sbb
jb
decl
sub
je
dec
enter
or
enter
sbb
push
xor
or
or
into
xchg
jg
or
ret
sub
dec
jle
dec
adc
and
fs
mov
cmp
sub
and
scas
cmovb
ffree
pop
or
sbb
xor
in
ljmp
cld
cmp
lock
xchg
push
cwtl
xchg
adc
push
xor
in
pop
sub
xchg
adc
sub
inc
xor
sbb
adc
mov
imul
or
jmp
movsb
cltd
jmp
xor
push
test
push
dec
bound
rcl
popf
inc
jo
push
cmp
dec
adc
es
fldcw
testl
incb
cmp
xor
and
sbb
pushf
dec
inc
not
mov
je
adc
push
fcomps
lods
pop
or
filds
add
pop
and
sbb
cmp
or
bnd
daa
notb
sbb
test
add
inc
jmp
negl
std
or
les
cwtl
or
push
adc
leave
adc
fstl
cmc
push
sarl
jmp
ss
push
and
or
ret
insl
test
jmp
xchg
fnstcw
cmp
call
xor
mov
mov
inc
xor
orl
lret
push
pop
call
xor
scas
jp
js
xchg
mov
sbb
mov
pop
daa
push
push
popf
addr16
mov
and
jmp
sbb
jno
test
inc
movsb
shlb
mov
call
pushf
pushf
not
shl
and
outsl
push
lahf
or
sbb
pushf
push
insl
fistps
sub
mov
mov
or
inc
cwtl
push
pop
push
call
lods
cli
enter
int3
push
aas
xorl
xchg
out
sarb
fs
cmp
push
xor
xor
outsl
push
pop
es
dec
xchg
lea
inc
xor
pop
inc
mov
ret
loop
adc
data16
adc
xor
adc
decb
and
xchg
push
out
iret
add
repnz
and
cli
je
xchg
adc
call
sarb
imul
add
rolb
clc
pop
inc
cwtl
push
mov
dec
mov
pop
rolb
push
push
lret
push
mov
mov
adc
mov
or
sar
pop
loope
rolb
andl
clc
mov
testb
je
push
add
mov
dec
insb
mov
jae
jne
cwtl
pop
mov
aaa
inc
icebp
pop
inc
push
das
push
cmp
jge
pop
test
xor
inc
sbb
and
and
ficomps
adc
scas
and
mov
mov
dec
lock
sbb
jbe
cmp
jl
sti
and
or
push
fadds
lcall
and
es
pop
pop
rclb
xchg
mov
xchg
add
int3
push
fmuls
loopne
in
cld
sbb
jmp
sub
xor
or
stos
sub
dec
out
sbb
aas
je
or
push
push
or
mov
and
adc
repnz
or
sub
jbe
cmpsb
pop
aas
dec
cltd
xlat
xor
lea
cmpsb
ds
scas
icebp
jmp
leave
dec
mov
xorb
inc
shr
push
jmp
push
add
mov
lock
add
lret
push
adc
or
je
or
and
mov
sbb
ud1
mov
inc
and
jne
ljmp
inc
ja
mov
inc
xor
test
test
push
sbb
stc
shll
adc
imul
das
jmp
clc
addr16
sbb
fisubrs
push
gs
cmp
and
dec
loop
js
pop
call
test
insb
and
add
les
xor
jne
rcll
mov
pushf
in
and
pop
mov
inc
add
out
sub
mov
push
outsl
dec
add
lods
enter
test
inc
aam
jp
enter
inc
dec
jmp
pop
inc
add
ret
and
pop
mov
sbb
jecxz
test
ds
mov
shl
pop
mov
inc
xchg
adc
mov
pop
mov
xchg
hlt
cld
push
pushf
sub
sub
aas
pop
je
or
push
lds
cli
mov
or
or
pop
mov
popf
jae
and
jle
jmp
xchg
call
jbe
xor
sub
filds
mov
mov
jmp
lret
cmp
mov
pushf
push
clc
xor
adc
ficoms
jmp
mov
lock
xchg
test
xchg
leave
sub
pop
cmpl
hlt
or
push
adc
out
dec
je
call
clc
test
ss
mov
notb
enter
popa
sub
popa
sub
mov
cli
orb
and
pop
push
gs
icebp
inc
pop
je
bound
cltd
sub
leave
inc
insl
enter
jmp
cmp
lcall
sub
mov
fcoml
dec
jmp
jo
test
dec
adc
pop
mov
xabort
pop
xor
stos
mov
jge
jno
push
dec
and
or
jmp
sbb
and
lcall
push
mov
jmp
adc
push
test
and
imul
or
add
cmp
xor
xor
inc
dec
adc
call
rcrb
jmp
adc
jnp
repnz
or
cmpsl
cmp
adc
rcrb
adc
sbb
or
jl
cmp
jae
inc
lods
in
sbb
push
cli
jmp
mov
or
js
add
out
xchg
mov
mov
or
jne
adc
pop
xchg
sub
xor
sbb
and
cltd
or
push
push
push
sarb
call
mov
ret
xor
rcrb
call
cmp
jle
les
int
clc
or
sbb
jmp
mov
subb
mov
cmpb
jne
stos
inc
or
dec
inc
and
add
shlb
cltd
cmp
dec
out
and
test
jne
dec
adc
jmp
and
or
testb
add
or
and
add
xchg
loopne
iret
push
fs
xor
add
add
or
je
dec
jl
adc
push
lcall
xor
call
xlat
inc
inc
or
mov
cld
cmp
jg
js
inc
fiadds
inc
into
xchg
enter
or
stos
xorb
dec
cmc
imul
mov
push
dec
sub
adc
call
sub
cmpsb
inc
jno
ss
sub
ficoml
addb
inc
xchg
xchg
inc
or
xchg
or
mov
and
dec
call
mov
dec
or
dec
add
push
call
mov
mov
xor
and
jnp
cmp
adc
add
ret
out
xchg
mov
bound
fsubs
sbb
or
or
lods
fsubr
outsb
insb
ds
test
add
orl
gs
lret
insl
adc
mov
cmpsb
aaa
inc
aas
insb
push
outsl
loop
pop
aas
mov
and
mov
or
sub
sbb
cmp
les
add
sub
pushf
mov
shll
xchg
or
add
loope
adc
sbb
mov
adc
loop
xor
and
mov
push
cmc
lret
sub
adc
sub
inc
jb
leave
jno
jle
in
xor
pop
sub
out
adc
and
inc
jmp
ljmp
jp
enter
hlt
push
xchg
repz
rorb
mov
rorl
je
adc
push
arpl
fsub
std
daa
inc
shufps
jg
xor
sub
clc
inc
hlt
push
or
aaa
dec
enter
jle
ss
sub
or
xor
inc
cmpsl
xchg
and
test
hlt
xor
repnz
and
push
or
ja
xor
icebp
ss
jns
std
loope
cmc
dec
loop
add
cli
leave
jg
adc
dec
mov
pop
adc
rcr
or
xchg
add
dec
ljmp
push
fsts
call
xchg
js
adc
in
jbe
add
mov
lret
into
and
outsb
ret
add
sub
scas
jnp
xchg
add
inc
clc
mov
dec
jmp
cmc
aaa
push
in
sbb
scas
in
jle
fsubp
or
hlt
mov
jmp
pop
xchg
jno
or
add
sub
adc
add
xor
jle
or
push
fwait
or
mov
jo
adc
fs
cwtl
sub
mulb
jle
test
jmp
add
dec
test
or
mov
sub
pop
lcall
xchg
into
xchg
fsubs
add
rorl
ret
mov
pop
movsb
popf
jle
cmp
cmp
push
adc
icebp
pop
mov
xor
and
insb
test
pop
shll
pop
jo
or
cmp
sub
pop
and
or
mov
sub
outsb
jge
jns
cmovo
in
arpl
mov
mov
and
loopne
movb
movsb
aaa
jns
xchg
inc
xchg
daa
adc
and
pop
sub
cmpsl
faddl
sbb
xor
cwtl
xchg
mov
mov
testb
adc
adcl
std
add
dec
mov
insb
mov
movsb
push
test
jmp
mov
jle
ds
iret
sub
mov
ds
mov
outsl
xchg
adc
out
adc
shrb
xor
aas
sub
ret
add
xchg
es
mov
mov
or
aas
pop
dec
cmpsl
loope
lea
jne
cltd
addr16
sub
in
ljmp
icebp
add
adc
push
ss
xor
xchg
fs
gs
mov
je
adc
sub
xchg
cmp
push
pop
jmp
cmp
sbb
popa
xorb
xor
sub
add
or
imul
push
adc
xor
call
and
inc
into
lahf
popa
sbb
sbb
cmp
or
and
lret
xlat
pop
call
insb
ss
push
adc
cmp
and
inc
cmp
jae
lock
or
fidivrs
push
xor
push
add
sub
inc
mov
nop
ret
adc
mov
stc
test
dec
jne
xor
jmp
add
rorb
jmp
in
xchg
cltd
add
and
and
rorb
and
in
dec
dec
push
inc
movsb
out
xor
mov
in
add
enter
lret
pop
sub
pop
call
sar
push
dec
add
shll
iret
or
push
or
leave
xchg
inc
inc
xchg
adc
jecxz
sub
add
add
iret
cs
mov
dec
xchg
fisttps
dec
ret
jns
imul
adc
mov
sahf
aam
leave
aas
sahf
jb
adc
or
add
cmp
movsl
sub
into
jg
add
fs
mov
xchg
lock
jmp
pop
cwtl
mov
or
xchg
bound
add
xor
rorb
xchg
add
jecxz
xchg
add
jne
mov
xchg
repnz
sub
mov
or
pop
dec
push
mov
lret
push
faddl
pop
call
cld
jb
out
push
test
lret
dec
sub
in
fdiv
add
outsl
jne
mov
push
add
xor
faddl
fadd
sbb
stos
pusha
dec
and
lea
cltd
add
adc
in
add
in
ss
jmp
call
jl
in
jmp
mov
jo
fisubrs
jmp
adc
jne
push
cmp
enter
jbe
or
insb
shl
jmp
jge
decl
test
testl
jle
adc
inc
add
orl
mov
push
and
inc
je
neg
mov
xlat
xor
into
test
pop
jne
sub
rorb
lcall
xchg
add
add
adc
ds
cmp
scas
data16
ja
pop
or
pop
repnz
ljmpw
bound
inc
leave
cmp
sar
xchg
or
test
mov
sbb
loope
sub
push
enter
lahf
mov
loope
cmp
jle
sahf
enter
pop
outsb
sahf
inc
inc
lock
test
mov
push
test
xor
xor
out
mov
xor
pop
int3
es
jae
jl
movsl
adc
cmp
das
out
xchg
scas
jbe
push
jle
movsl
sbb
xchg
inc
jbe
push
cmove
mov
icebp
out
xor
pop
popf
shr
cmp
push
decl
js
cli
or
or
jae
enter
je
pop
dec
push
mov
mov
and
call
stos
xchg
dec
mov
jne
out
flds
mov
orl
or
shlb
jbe
mov
shl
pop
inc
in
pop
pop
sbb
mov
sub
add
push
mov
cli
push
add
lea
outsb
mov
cmp
sbb
xchg
sub
jg
mov
or
bound
adc
inc
mov
dec
mov
pop
movsl
ja
rorb
arpl
arpl
mov
dec
test
xor
loope
cwtl
das
mov
push
lea
pop
clc
cmp
int
and
mov
cmp
mov
push
adc
out
or
ficompl
or
push
inc
ds
pop
adc
outsl
ds
orw
adc
sub
cmp
and
or
nop
adc
add
andb
orl
push
or
inc
sbb
enter
jl
and
mov
pusha
aad
and
addl
hlt
jl
adc
lea
jge
sti
jb
cmp
xor
je
addl
add
mov
leave
mov
repnz
adc
lds
inc
sbb
daa
sub
sub
sbb
lea
dec
subb
in
add
call
jmp
inc
inc
adc
and
mov
or
jge
mov
mov
and
push
sub
cmp
inc
inc
push
inc
aas
mov
das
or
or
adc
and
es
add
inc
in
mov
xor
inc
and
rclb
pop
cmp
std
aad
inc
shl
add
cmp
or
test
push
xor
sub
and
ret
sbb
and
dec
cltd
xor
out
pop
test
jmp
cmp
cmc
dec
pop
sub
xor
push
idivb
cmp
mov
push
mov
jmp
cmp
loopne
ret
inc
mov
fadds
jmp
push
and
sbb
inc
add
pop
cmpsb
or
sbb
jl
cmp
sub
pop
mov
les
mov
or
test
adc
mov
call
fistps
cltd
outsb
insb
out
mov
lods
ret
xor
dec
or
push
cmp
adc
aad
fcmovbe
mov
mov
mov
or
loope
or
pop
push
lock
fsubr
jb
jle
adc
icebp
outsl
dec
sbb
in
add
mov
push
xchg
cmp
and
cltd
push
or
push
les
popf
out
jmp
adc
fldt
inc
dec
add
popa
je
mov
test
adc
add
mov
dec
popa
into
sti
mov
daa
adc
scas
pop
pop
mov
inc
cmp
mov
rorl
push
jg
ja
cmp
sub
ss
ret
fmuls
lcall
add
mov
and
jmp
adc
jmp
adc
adc
inc
cwtl
and
nop
sbb
pop
aaa
cld
and
adc
cmpb
pop
or
jmp
call
adc
sub
jne
inc
adc
ds
or
jmp
clc
stos
xlat
xor
lds
cmp
pop
pop
adc
into
stc
les
jmp
icebp
pop
xor
out
es
test
loope
adc
insb
movsb
mov
jns
or
dec
jle
scas
testl
int3
mov
push
pop
jnp
sbb
or
push
sbb
dec
jno
mov
cmp
jnp
aad
jle
mov
int
adc
dec
push
sub
ret
in
jmp
mov
push
and
clc
push
rcrl
ljmp
xor
add
cmp
je
jecxz
mov
test
mov
in
out
clc
fldz
test
sbb
stc
outsl
mov
xchg
repnz
sub
xor
and
or
repz
test
sarb
xor
das
pop
je
cmp
dec
icebp
mov
inc
mov
fisubs
push
je
mov
cmpl
cli
mov
stos
jns
das
sbb
xchg
and
out
adc
mov
fcomip
mov
jns
movsb
xchg
or
in
xchg
mov
out
out
push
dec
xchg
lea
xor
mov
rcrl
inc
js
je
mov
add
push
cli
mov
es
mov
xchg
js
or
inc
inc
ret
sub
inc
mov
cli
or
ret
jo
in
add
jb
push
mov
test
lods
inc
call
test
jns
nop
and
sub
mov
cmpl
jo
jl
inc
add
mov
les
icebp
sbb
and
jmp
sti
orb
dec
cwtl
stos
add
or
test
imul
and
decb
pusha
jmp
std
adc
jo
mov
sbb
movsb
es
idivl
or
add
fadd
mov
adc
mov
and
insl
dec
lods
cmp
sub
rol
inc
fldl
das
out
push
adc
ljmp
or
push
pop
jl
dec
mov
pop
test
add
jb
mov
mov
orb
test
inc
adc
push
or
loop
inc
test
enter
or
sub
sub
sub
mov
mov
jne
pop
xor
push
jmp
xchg
mov
daa
fisubrs
cmc
data16
clc
lock
and
test
ljmp
and
cld
jb
jp
sub
sub
mov
lea
add
ret
push
sti
add
pop
gs
nop
mov
add
je
adc
cwtl
mov
mov
cmp
dec
dec
push
shr
cld
jle
sbb
pop
les
shll
in
dec
pop
xor
jb
or
push
lods
dec
into
cmp
movsl
jmp
dec
xchg
sub
mov
movsl
test
push
push
call
mov
push
xchg
std
cmpsb
loopne
cmp
ja
mov
jne
lahf
inc
dec
call
xchg
jno
pusha
adc
ret
aam
add
add
in
push
testb
sbb
inc
inc
xor
push
test
adc
adc
jne,pn
or
andb
imul
incb
add
test
addr16
bound
push
shll
lret
pop
pop
sub
cmp
cmpw
pop
add
testb
add
mov
inc
sbb
inc
dec
add
jg
sub
mov
and
fcmovu
sbb
pop
adc
js
add
xor
insb
and
imul
inc
lea
and
ja
dec
mov
aaa
inc
enter
add
rclb
int3
inc
and
push
popf
push
add
add
cmp
jl
sarb
and
sub
ds
in
inc
xchg
jle
adc
and
xchg
or
xchg
adc
sar
int
mov
or
push
mov
dec
lods
push
sub
int
ds
sbb
pop
fcompl
incl
xor
enter
push
aas
cmp
cmp
repnz
and
cmpsl
mov
addr16
sbb
hlt
adc
mov
add
push
pop
loope
leave
add
mov
push
jb
rolb
push
pop
popf
sub
mov
ss
testb
movsl
je
leave
roll
lahf
push
and
or
mov
cmp
inc
push
xchg
mov
and
sub
pop
jo
cmp
mov
or
fs
or
mov
adcb
or
call
xorl
adc
or
scas
xlat
stos
or
or
addr16
mov
cld
sub
shr
loope
imul
mov
lods
xchg
and
push
dec
js
rcll
cmpl
jg
push
adc
lea
iret
push
hlt
es
cld
or
clc
rcll
pop
mov
sar
add
addl
jbe
push
pop
mov
cmp
pusha
sub
and
pop
mov
shr
lea
imul
and
pop
mov
sub
mov
in
loopne
mov
imul
inc
push
or
add
cld
repz
jmp
or
push
or
pop
add
and
mov
cs
or
jg
adc
xchg
xor
lods
adcb
sub
mov
in
movntps
and
ss
popf
add
cmp
jbe
mov
xchg
sub
mov
and
arpl
ret
mov
cmp
sbb
or
out
not
and
dec
or
add
es
loopne
pop
and
inc
mov
lcall
cmp
decb
jne
iret
jnp
mov
ljmp
and
add
and
pop
jo
sbbl
dec
mov
push
push
mov
dec
movd
xor
pusha
pop
adc
or
cmp
mov
sub
es
push
and
cmp
mov
adc
pushf
push
mov
in
or
cltd
jle
daa
rorb
fstpl
rol
lsl
dec
or
addb
push
call
and
or
pop
cmp
mov
decb
movsb
or
in
cmpb
in
pusha
sub
adc
js
add
repz
mov
xchg
adc
scas
insl
enter
mov
hlt
roll
loopne
ret
enter
add
adc
in
push
cmpsl
dec
testb
and
xlat
out
test
or
jbe
dec
insl
or
das
dec
push
fadds
cmp
push
out
into
ret
inc
rcrl
xor
push
and
sub
fdivrs
lock
xlat
inc
and
loop
inc
or
test
jmp
inc
xchg
outsl
nop
pop
not
call
mov
dec
fistps
das
and
decb
iret
jae
pop
add
cli
sbb
xor
rcll
jns
fadds
adc
outsl
out
sub
dec
jae
adc
jnp
inc
mov
push
sub
in
cmp
mov
out
push
daa
call
test
cmp
fcmove
pop
pop
mov
inc
mov
les
movntps
sub
cs
enter
pop
hlt
mov
jl
inc
mov
ficoml
inc
jo
inc
push
add
scas
mov
or
xor
xchg
jb
mov
cmp
sar
cmp
xlat
je
mov
and
or
mov
dec
mov
jne
dec
addr16
and
pop
test
jl
add
testl
pop
xor
pop
ret
jmp
jle
out
pop
test
sub
and
shlb
incl
iret
les
lahf
popa
std
cmp
cmp
mov
filds
cmp
and
jmp
lret
adc
lea
push
outsl
mov
mov
rcrb
pop
mov
sbb
adc
mov
shlb
gs
sbb
or
jb
fs
add
and
jge
popa
ret
filds
mov
out
or
scas
or
scas
jmp
xchg
sub
or
mov
jnp
pop
sub
mov
clc
jg
mov
or
roll
sub
out
ja
roll
add
xor
xchg
mov
lea
fcomps
cmp
adc
pop
push
jo
and
inc
add
imul
shll
pop
mov
jo
scas
and
push
lods
enter
je
mov
orb
les
loope
mov
inc
xor
xor
mov
imul
cmp
fistl
add
dec
and
adc
or
jne
xchg
cli
dec
out
jge
les
call
xchg
add
and
enter
jno
leave
dec
inc
mov
popa
ret
and
loopne
inc
ret
cwtl
cmp
cltd
adcb
or
xor
or
push
pushf
cmp
and
pop
xchg
sti
xchg
shl
fnstsw
push
add
mov
cmp
cmp
ja
cmp
inc
lock
xchg
inc
mov
sysexit
cmc
sti
mov
inc
xchg
lock
inc
cmpsl
push
testl
subb
adc
sub
sub
test
or
clc
mov
inc
lods
lea
fstl
mov
addr16
xchg
jae
dec
enter
rolb
dec
shlb
js
add
mov
ljmp
retw
pushf
mov
or
xchg
push
adc
lea
sub
ljmp
cmpps
dec
cmp
cmp
sbb
mov
cmp
ret
loope
dec
adc
fldcw
add
popl
push
sbb
aas
enter
nop
dec
bound
mov
in
or
sub
sub
pop
push
pop
clc
lea
dec
add
repnz
or
mov
adc
and
pushf
nop
cmp
jecxz
mov
push
mov
xchg
push
jg
xor
adc
into
add
out
xchg
sub
sar
dec
mov
fidivs
daa
adc
pop
add
stc
sbb
add
int3
pop
inc
mov
or
sbbb
sbb
mov
mov
jne
add
pop
or
xchg
adc
jnp
xchg
iret
rclb
out
push
data16
jmp
and
dec
sub
dec
add
popf
inc
pop
xor
je
add
out
inc
popa
and
clc
jmp
je
inc
jge
fildll
mov
movsb
dec
lds
xor
jmp
fmul
pop
jbe
sub
cmc
sub
cmp
jbe
sub
je
xchg
jp
push
mov
push
and
out
movsb
jp
ja
xchg
pop
cwtl
and
or
jbe
out
les
dec
aaa
jnp
das
jno
cwtl
sti
pop
mov
aam
bound
scas
jecxz
inc
cmp
movhlps
out
and
bound
lea
and
sub
cli
or
ss
ret
mov
sbb
pop
hlt
mov
or
jae
shll
sub
push
jno
cmp
iret
xor
sub
add
add
scas
push
mov
jne
in
or
mov
jl
sbb
or
or
daa
ret
and
xor
xor
mov
mul
inc
dec
mov
push
jle
repnz
in
mov
rolb
ret
and
int3
inc
mov
dec
mov
frstor
push
jl
pop
jl
mov
in
add
ret
cmp
jae
orb
inc
pop
addl
cmp
adcl
movb
mov
mov
cmp
fisttps
dec
mov
rolb
outsl
inc
xor
xor
test
inc
and
imul
rorb
push
push
cmpsb
stos
inc
push
xchg
mov
or
mov
push
orl
inc
sub
jmp
lock
scas
into
nop
mov
mov
inc
add
jp
push
test
xlat
repnz
push
psubw
out
and
les
icebp
gs
arpl
clc
or
sub
test
fstpt
and
xchg
jbe
je
idivb
sbb
sub
jle
daa
and
out
inc
inc
push
inc
cli
sub
or
adc
in
pop
push
cmp
and
jno
popf
xchg
inc
push
mov
push
cmp
jbe
or
adc
idivl
je
aaa
jmp
test
jne
xor
loopne
lahf
xchg
repz
cmp
sub
mov
rorb
and
movsl
push
hlt
cmp
clc
into
push
inc
or
loop
inc
push
das
hlt
call
sbb
or
enter
in
xor
adc
adc
adc
inc
add
pop
add
and
test
push
and
adc
jg
pop
pop
lods
arpl
int
mov
int
lock
cwtl
push
notb
mov
sub
cmp
in
inc
ret
sub
add
cmp
lret
jl
sbb
pop
add
adc
mov
sbb
or
push
movl
jb
mov
dec
test
jle
es
xor
xor
add
inc
outsb
call
xor
mov
clc
jb
and
in
mov
adc
mov
push
jmp
roll
or
push
or
lahf
arpl
mov
call
inc
ja
repz
sub
xchg
out
loopne
incb
ja
add
adc
add
repnz
push
rol
xlat
adc
bound
test
jne
jne
loopne
push
lods
mov
mov
jle
mov
mov
hlt
gs
sbb
ljmp
adc
inc
push
popf
push
lds
jne
mov
and
cmp
jae
mov
cmp
bnd
shlb
push
inc
or
shrl
add
scas
mov
xchg
xchg
add
jmp
call
fisubrs
sub
js
sbb
fcmovu
and
rcr
push
nop
and
sub
push
sbb
add
or
xchg
or
sbb
lea
dec
add
pop
and
and
adc
mov
mov
popa
jmp
ret
mov
inc
cmp
add
pop
sbb
fiadds
cmp
jae
inc
mov
test
jne
fs
out
mov
push
pusha
add
inc
jmp
movsb
jae
leave
or
clc
inc
and
mov
int3
cmp
mov
sbbb
add
inc
jne
call
push
divl
imulb
push
cld
sbb
movsl
pop
int
or
sbb
pop
add
lods
sbb
xor
jmp
add
jae
sub
imul
scas
rolb
frstor
ret
shll
fsubrl
dec
dec
clc
adcb
and
cmpsl
bound
lcall
clc
or
lock
or
jbe
cmpl
enter
pmaddwd
loope
jmp
jae
sub
and
jb
rcrl
adc
jae
popf
jp
lahf
shll
mov
inc
aas
push
jnp
shlb
clc
inc
sub
sub
sbb
decb
sbb
cmp
pop
es
adc
stos
mov
rolb
sub
sarb
out
andb
movq
dec
sarb
sub
jb
or
out
cwtl
ds
mov
out
addl
xchg
mov
mov
lea
dec
jg
ss
xchg
iret
je
xor
add
or
in
add
push
and
mov
add
xor
or
cwtl
xor
das
mov
test
ret
pop
clc
adc
sub
inc
adc
clc
dec
insl
enter
sbb
arpl
es
xchg
hlt
mov
xor
or
daa
loope
or
aas
jnp
or
nop
and
mov
inc
jbe
ret
add
lret
mov
lret
push
cwtl
mov
cmp
sbb
out
loopne
je
or
jmp
mov
inc
jo
cmp
add
pop
movb
inc
mov
ss
adc
roll
adc
je
sub
pop
dec
lahf
lea
mov
inc
mov
cs
leave
jne
subb
xor
sbb
leave
sbb
push
js
rclb
cmp
dec
pop
sub
push
test
in
add
into
push
fistl
xor
mov
pusha
test
xchg
or
jns
cmp
and
cltd
push
add
push
dec
inc
jmp
xor
lock
je
or
add
lods
fs
sub
ror
or
xor
xchg
loope
stc
jne
cld
cld
xor
sub
leave
inc
mov
stc
or
adc
jo
or
jo
lea
cmp
mov
cmp
sub
fs
push
push
inc
jns
jl
je
out
push
xchg
dec
add
add
inc
adc
pop
mov
test
sti
inc
scas
or
imul
aas
adc
and
mov
mov
xor
adc
scas
fs
sub
mov
cmpsl
xchg
sub
cld
lods
sahf
pop
sarb
sbb
cmc
xchg
pop
dec
int
gs
mov
mov
mov
pop
or
push
andl
and
sbb
dec
jo
or
stc
nop
fdivl
insl
mov
aas
jmp
pop
add
jbe
xchg
cmp
ret
push
mov
out
and
icebp
std
push
cmpsl
pop
test
mov
cmp
ret
jmp
rclb
fucomi
xchg
clc
gs
insb
lcall
inc
adc
lods
mov
aam
or
push
mov
inc
stc
cmc
out
std
sarl
fwait
stos
cli
adc
xchg
lret
xchg
inc
cmp
std
sub
or
xor
inc
frstor
in
ret
inc
inc
xor
cli
rclb
jne
add
mov
inc
mov
mulb
or
gs
fdivrl
push
ficoml
mov
inc
mov
mov
mov
cld
push
adc
and
movsl
sbb
inc
xor
cmpb
daa
xchg
add
mov
leave
xor
setg
rcll
cmp
cwtl
ret
dec
out
int3
xor
orb
out
das
ljmp
insb
pop
push
sub
inc
mov
xchg
or
inc
jb
add
lretw
in
mov
loop
xor
testl
or
cwtl
add
push
jo
andb
pop
jns
es
sbbb
sarb
mov
iret
inc
xchg
daa
push
cmp
pop
add
jns
mull
sub
jl
adc
stos
pusha
cltd
pop
idiv
nop
mov
neg
das
inc
or
mov
aad
jmp
das
add
and
xchg
xor
push
popf
sbb
xor
mov
or
cmp
mov
xchg
and
or
xor
daa
push
push
xchg
or
lds
add
pusha
sti
jo
lock
or
adc
leave
push
inc
sti
add
divl
rolb
adc
add
dec
sbb
dec
loop
and
add
jo
idivb
scas
scas
jg
or
fsubrp
push
or
in
jl
push
xchg
push
pop
inc
dec
fsubrl
lds
lds
jnp
and
jge
mov
or
mov
testb
mov
jmp
dec
mov
and
cmp
pop
setl
mov
clc
dec
push
hlt
adc
adc
and
ror
or
pop
inc
cmp
sbb
push
icebp
jmp
lret
jmp
push
adc
adc
sbb
jg
repz
into
testb
out
push
add
or
notl
icebp
call
jg
sub
jge
push
inc
xor
data16
adc
scas
fdivrs
dec
in
sbb
and
sub
adc
loop
cld
test
adc
sti
mov
test
sbb
dec
push
or
mov
xor
notl
inc
mov
jnp
imul
mov
or
pop
jl
cmp
lahf
ret
stc
adc
or
and
sbb
push
fwait
ret
push
aad
sub
adc
cmpl
inc
lret
or
sub
cld
sbb
xchg
mov
cmp
inc
pushl
cmp
sbb
mov
ljmp
adc
mov
popa
inc
loopne
inc
push
sbb
sbb
test
pop
out
add
add
add
jle
scas
jecxz
daa
fbstp
and
push
pop
rcrb
jmp
dec
or
ficoms
roll
adc
push
fwait
jp
call
dec
and
cli
and
push
xor
and
or
dec
fcomip
jle
xchg
es
jg
dec
and
call
fisttps
addl
jmp
in
decl
mov
jb
mov
mov
bound
mov
dec
mov
adc
adc
testl
add
inc
cltd
jle
repnz
cmp
fstpt
stos
and
mov
enter
mov
ret
mov
aam
cmpsb
mov
adc
xchg
xor
sub
xorb
lea
movsb
inc
jns
shlb
inc
jmp
cmp
and
scas
and
cmpsb
and
inc
sahf
adc
dec
sti
sub
add
adc
fisubrl
adc
xchg
sti
fdivrs
jbe
cld
xor
adc
sub
int
inc
cmp
pop
std
cmp
push
and
cmp
dec
fmull
jmp
pop
sub
mov
or
stc
movsb
xorb
add
ret
daa
or
js
add
inc
call
ret
lea
imul
pop
stc
lds
roll
lock
lock
sbb
lea
lds
enter
mov
or
dec
jecxz
mov
add
lea
jl
dec
es
stos
jnp
cs
loope
pop
sub
aad
mov
and
cli
rcll
cmp
inc
inc
xchg
fldl
or
add
seta
jg
mul
jae
or
add
xchg
jno
stc
leave
push
xchg
and
push
xchg
loop
pop
stos
adc
add
sub
and
mov
mov
aam
and
out
int3
or
outsl
inc
sbb
out
add
ljmp
add
fwait
adc
add
in
iret
in
rcrl
std
mov
aam
cwtl
enter
stos
add
xchg
or
mov
push
or
jns
cltd
shll
or
popl
add
in
adc
xchg
add
lret
or
xchg
aaa
dec
dec
push
mov
out
ja
dec
adc
nop
addr16
sar
and
xchg
xor
testl
loop
shl
add
lret
add
sbb
es
ss
xchg
mov
inc
sti
rol
add
iret
cmp
adc
and
ret
je
inc
jmp
test
add
jg
ficoml
add
sti
push
push
lea
sbbl
clc
js
rcll
xor
xchg
in
ja
jns
repnz
or
hlt
add
outsl
and
jne
addr16
lds
xor
or
inc
clc
and
and
mov
inc
and
jecxz
sbb
jmp
dec
or
add
jl
mov
add
aam
inc
sbb
dec
jns
fstps
mov
sbb
or
test
sbb
sbb
inc
adc
and
xor
arpl
testb
add
adc
ret
inc
add
testl
sbb
repz
and
sbb
out
rorb
push
pop
or
push
orb
or
sbb
mov
in
mov
xchg
sub
adc
daa
add
cli
add
imul
loope
test
push
xor
sbb
jmp
dec
and
dec
or
pop
cmp
inc
repz
pop
mov
test
clc
sub
out
adc
mov
pop
je
test
stos
fxrstor
dec
add
sub
jmp
lods
or
testb
call
sti
jmp
out
mov
ret
and
ret
test
mov
sbb
enter
repz
je
adc
xor
fstpl
aaa
rolb
mov
fstps
pop
hlt
xchg
outsb
xchg
and
xor
clc
sarl
movsb
sub
out
aam
clc
rorl
sub
jo
clc
sarl
in
sbb
subb
pushf
addr16
pop
movsl
xchg
and
cmpsb
popw
repz
test
jbe
inc
inc
movsl
and
test
inc
add
pop
lea
jne
mov
sarl
data16
mov
jmp
push
inc
mov
cmp
in
jo
rorb
imul
mov
mov
shrl
mov
mull
cmpl
sub
jne
jecxz
xchg
push
adc
pusha
pop
mov
push
push
sbb
add
dec
mov
aam
mov
or
and
movsl
pop
pop
out
add
js
pop
test
call
sbb
je
sub
push
xor
in
pop
adc
aaa
cwtl
lock
xchg
or
sbb
push
in
and
pop
cld
sbb
out
sub
push
pop
lcall
aaa
cmp
call
mov
data16
in
jg
loope
adc
mov
mov
push
pop
fdivs
leave
mov
das
jl
mov
jbe
cmp
pop
roll
mov
xchg
pop
jnp
push
jmp
jmp
cmp
add
jle
popa
sbb
jecxz
adc
add
push
mov
mov
ror
push
dec
push
cld
out
fidivrs
mov
cmc
push
xor
rcll
and
rorb
pop
sub
cmpl
jne
cmp
or
inc
incl
sub
xchg
mov
enter
daa
or
pop
movsb
stc
les
testl
mov
add
pop
pop
arpl
movsl
sub
push
sub
nop
nop
mov
mov
data16
enter
mov
add
fs
leave
outsl
jae
adc
add
xor
gs
adc
addb
sbbb
dec
jmp
mov
adc
mov
testb
daa
push
inc
loopne
mov
cld
add
push
and
lock
sbb
fwait
cli
jge
cmp
push
xor
fnclex
dec
cmovle
mull
cld
enter
xchg
imul
insl
out
inc
inc
jno
mov
mov
or
sub
pop
repnz
jb
jbe
mov
sbbl
sub
imul
fdivp
fcom
sbb
adc
push
dec
rorb
add
inc
jno
xchg
jo
xchg
mov
lret
ss
xchg
bound
inc
dec
imul
daa
call
jmp
push
ds
push
cmpl
lahf
jo
and
sbb
dec
sbb
dec
out
lock
sbb
push
pop
test
pop
pop
push
cwtl
shll
push
pop
sbb
and
sbb
dec
or
movsb
and
xchg
dec
mov
sbb
or
cmp
push
inc
dec
or
mov
sbb
cmp
sub
lret
inc
mov
push
std
mov
cmp
mov
adc
push
mov
mov
add
sbb
call
rcll
movb
std
jge
add
inc
sbb
and
cmp
cmp
sbb
inc
adc
mov
les
push
cmpsb
jecxz
sbb
popf
cli
cwtl
xor
cmp
movntq
jl
jnp
test
push
xchg
and
aas
jge
sbb
adc
jle
sub
daa
aaa
mov
adc
xchg
add
mov
jg
push
hlt
divl
aas
pop
jo
ret
mov
mov
or
jl
cmc
cmpl
stos
movsl
push
jp
adc
imul
and
cmp
sbb
push
lock
push
shr
jmp
inc
ja
cmp
xor
pop
xor
and
arpl
pop
or
arpl
jae
mov
ret
jl
mov
adc
add
push
cmpb
or
xchg
sub
xchg
imul
adc
add
or
pop
adc
test
mov
sub
dec
cmpb
push
jmp
fs
add
in
cmp
and
std
mov
add
aad
cmpsl
dec
cli
dec
pushf
or
or
xor
pop
pop
adc
pop
mov
cmp
or
divb
jne
stos
push
int
adc
pop
jo
add
sbb
sub
sub
add
push
pop
aas
pop
inc
sub
sbb
fmulp
das
movsl
das
mov
inc
adc
aaa
sbb
mov
cmpsb
jmp
dec
xchg
das
in
loope
cmpsl
pop
mov
adc
push
dec
enter
ret
sub
aaa
scas
and
inc
sub
xchg
enter
call
xchg
test
jmp
and
outsl
rcll
jmp
xchg
mov
inc
xchg
or
push
adc
adc
xchg
nop
fs
push
push
ficompl
jnp
stos
das
jecxz
mov
cmc
and
cmc
fmul
loopne
outsb
loope
xor
mov
aaa
adc
call
xchg
cmp
and
mov
push
mov
int
mov
inc
and
cmp
daa
lods
stc
ds
aam
mov
lock
pop
dec
repz
inc
xchg
es
out
ret
mov
mov
in
jg
loopne
inc
jle
aas
sub
andb
jg
cmp
sti
mov
in
mov
out
or
mov
sbb
aad
or
sbb
fidivl
or
loope
ss
andb
loopne
inc
dec
add
jne
adc
and
fisubrs
mov
mov
add
pushl
loopne
dec
mov
addb
xchg
add
xor
bnd
pop
adc
mov
lret
aam
adc
xchg
adc
xchg
shll
fs
xor
push
sub
inc
jae
test
mov
fwait
loopne
dec
jo
pop
stos
mov
aas
jle
add
test
and
xor
xor
ret
jne
adc
mov
je
mov
cli
ret
addr16
pusha
jmp
shlb
sub
ss
push
dec
cli
sub
lds
incb
adc
inc
and
movsl
xchg
jmp
pop
sbb
push
les
fs
repz
cmp
ret
cmp
stc
xchg
and
sbb
dec
and
adc
xor
add
sbb
setne
jp
mov
add
add
test
jl
mov
and
push
jb
pop
sar
mov
cwtl
icebp
push
lahf
icebp
orl
push
in
and
insl
cli
call
andl
jle
fstpl
pop
pop
jmp
xchg
add
and
inc
pop
pop
add
loop
aas
and
or
push
mov
cmp
or
lcall
and
mov
aam
cs
push
repz
sar
dec
adc
cmc
push
push
and
xchg
push
mov
jmp
popa
test
aas
dec
ljmp
jne
fnsave
movzbl
pusha
mov
xchg
inc
les
inc
jp
push
cmp
pushl
lahf
loop
cld
outsb
inc
cmp
push
psadbw
inc
xor
xorb
sbbb
lret
pop
adc
dec
out
pop
cmp
or
ja
jbe
icebp
or
ja
jne
or
pop
cld
js
std
lea
ret
mov
or
xchg
test
shll
xchg
bound
scas
add
call
scas
cmc
cmpl
shlb
ret
shr
inc
add
adc
ljmp
push
mov
cli
fisttpll
jecxz
inc
adc
and
fcomp
add
je
cld
rorl
cmp
jae
and
or
das
mov
inc
aaa
jmp
fildll
fnsave
xchg
ret
pop
aam
bound
testb
subl
add
adc
and
xchg
or
roll
dec
xor
jg
lret
int3
push
jecxz
popf
rolb
dec
xor
lods
ret
ljmp
enter
sub
inc
sbb
xor
sub
xor
loope
xchg
inc
pop
ja
das
dec
fnstcw
ret
nop
in
es
addb
sub
aaa
clc
mov
xchg
es
and
add
retw
dec
test
sti
push
cltd
sti
dec
mov
add
or
sub
or
or
hlt
sub
xchg
test
outsl
adc
push
mov
rcr
cwtl
pop
rorb
jnp
jge
or
inc
or
mull
dec
xor
cs
dec
nop
or
jo
push
nop
adc
addl
test
cmp
adc
cmp
and
inc
adc
inc
mov
cmpsb
mov
or
pop
mov
mov
sti
sbb
movsl
cmp
jmp
movsb
mov
repz
pop
push
orb
mov
cmp
xor
movsb
out
mov
in
test
cmp
jne
jp
aaa
dec
pop
or
sub
adcl
mov
leave
stos
inc
fdivs
adc
jne
cli
sbb
mov
ljmp
xorb
push
inc
test
out
inc
loopne
ds
inc
or
and
sti
sbb
push
add
and
pop
jmp
pop
es
inc
cmp
repz
adc
cmp
inc
xchg
arpl
jmp
arpl
int
pop
pop
mov
push
loope
stos
mov
cmp
je
push
push
xor
xchg
jne
mov
inc
andb
and
cwtl
pop
imul
shrl
ds
test
jge
xor
std
jo
leave
pop
std
dec
test
insb
add
sbb
bound
sbbl
and
xor
clc
pop
repnz
mov
js
mov
test
pop
in
in
jb
push
pop
sbb
and
mov
in
or
and
mov
mov
dec
xchg
sbb
call
xor
mov
sub
pop
mov
xor
jno
andl
jne
mov
pushf
adc
test
aaa
mov
mov
pushf
inc
mov
jns
dec
cli
mov
mov
pop
add
adc
or
aad
jmp
or
jl
inc
adc
sub
mov
cld
orl
aaa
cmp
jmp
int3
pop
xor
dec
mov
incl
test
or
cmpsl
dec
mov
sub
test
add
push
dec
sbb
mov
adc
cld
icebp
dec
push
sub
add
mov
dec
adc
test
or
lea
jmp
jo
and
sbb
sete
xor
jmp
daa
rorl
out
inc
movsb
mov
movb
inc
mov
dec
jne
adc
addb
cs
mov
push
sbb
xchg
sbb
nopl
add
test
push
xor
bswap
add
andl
scas
xchg
jmp
xchg
fbstp
sub
es
inc
ror
not
imul
pop
inc
mov
pop
and
ja
fcompl
adc
inc
sbb
add
jmp
andl
push
ret
cmp
test
inc
cmp
sbb
stc
pop
or
sub
xlat
push
or
sar
xchg
or
add
ss
sub
xor
or
int
pusha
or
lret
cmp
das
cmpb
inc
out
push
add
fs
pop
or
or
lahf
shlb
mov
jmp
push
dec
in
cmpsb
and
cmp
popa
or
push
mov
sti
clc
in
pop
add
push
into
decb
or
jmp
or
pop
outsb
cmp
push
xlat
repz
fadd
mov
inc
push
pop
scas
xchg
daa
ret
cmp
xor
sbb
and
daa
cmp
imul
cld
or
sbbb
mov
movb
mov
ljmp
loop
fcoms
rorl
leave
push
cmp
mov
sub
fstpl
adc
dec
jp
sbb
jl
out
cmp
fs
push
mov
xor
pop
cmp
lea
rorl
sbb
inc
daa
mov
repnz
push
sarl
test
jl
loop
and
xor
cmp
icebp
add
mov
ss
mov
dec
xchg
cmpsl
or
or
cmpsb
xchg
xor
daa
iret
fdivrp
sti
rorb
mov
popa
mov
inc
inc
add
cmp
jl
adc
cmpb
lea
jne
test
add
add
add
pop
or
dec
jne
sbbb
mov
and
pop
push
addr16
decb
roll
imul
fisubs
pop
or
cmp
add
mov
xchg
stos
test
push
inc
xor
pop
lcall
lock
mov
and
popf
nop
scas
inc
cmpb
in
sub
out
mov
jae
jnp
mov
jp
popa
lea
nop
adc
push
push
push
imul
push
sbb
pop
pop
test
sbbl
fwait
and
add
cmp
or
les
add
test
fwait
lods
or
jmp
xor
jmp
mov
faddp
pop
push
adc
and
sbb
das
jl
pop
push
jge
jns
sub
inc
sbb
or
shr
shll
dec
xchg
loop
push
sahf
or
and
sti
in
push
sbb
or
pop
push
or
jne
andb
xchg
in
popf
adc
gs
jno
push
mov
rorb
mov
cmp
inc
adc
jecxz
jmp
cli
mov
icebp
mov
enter
int
das
lods
in
xchg
sbb
movsb
cmp
adc
inc
mov
test
adc
loope
inc
or
pop
fs
popa
pop
int3
cmp
sub
lcall
push
xorl
jno
cli
push
ret
xchg
jnp
and
mov
in
inc
mov
adc
mov
push
xchg
fistpll
mov
aam
jl
in
and
add
pop
sub
mov
pop
jmp
pop
push
ljmp
mov
mov
xchg
dec
mov
add
enter
stos
test
mov
shrb
daa
inc
xchg
sbb
sbb
adc
nop
das
cli
adc
xor
push
sti
inc
scas
mov
repnz
bound
fldt
test
popa
pop
mov
and
jae
ret
sbb
adc
mov
jecxz
mov
out
test
mov
test
ret
adc
mov
sbb
mov
call
add
mull
push
jnp
loope
xlat
xor
ljmp
sbb
xchg
repnz
lock
and
into
bound
and
stc
fcoms
jl
pop
ret
push
inc
mov
dec
repnz
add
jmp
hlt
lods
setae
fsubrs
and
shlb
popf
ja
xorl
push
gs
pop
adc
or
movsl
shrl
xchg
call
sbb
jmp
gs
and
adc
mov
sahf
jne
std
cmp
sbb
sbb
orb
je
pop
data16
add
mov
dec
in
fld
dec
mov
jle
cmp
xor
scas
or
ret
inc
aad
push
jmp
sub
jb
sub
pop
xchg
adc
test
mov
aas
rorl
jo
cld
and
push
push
mov
jecxz
sub
xchg
pop
outsb
pop
ljmp
addl
push
shld
shl
int
rcr
cld
loope
hlt
loop
push
pop
cmpsl
aam
inc
or
xchg
jo
xchg
push
or
daa
xlat
sub
rcl
xor
std
aad
popa
push
inc
push
or
cmp
int
pop
fdivs
decl
xor
stos
and
sbb
out
and
dec
stos
ret
push
cltd
shl
xor
sarb
shr
xor
lods
in
push
mov
push
mov
in
xor
pop
push
pop
xchg
jmp
xor
add
test
sbb
xchg
out
inc
push
sub
xor
into
xchg
push
pop
push
mov
and
das
xchg
add
dec
in
and
lahf
cmp
mov
repnz
nop
mov
sub
int3
jno
sbb
arpl
jno
cmp
loop
pop
sbb
jl
mov
test
pop
jl
and
cmpsl
mov
cmpsl
xchg
mov
xchg
loopne
xchg
pusha
inc
cmp
cmpsl
and
or
insb
lea
gs
outsl
push
sub
xchg
shlb
jnp
add
fstl
ret
mov
imul
sub
pop
pop
gs
xchg
leave
inc
iret
aad
test
in
inc
popa
call
enter
or
popw
mov
push
daa
scas
adc
xor
adc
pop
jmp
shl
mov
jg
and
xor
jae
rcll
lds
or
pop
adc
xor
mov
adc
or
jp
push
jmp
cmp
cmc
mov
and
mov
mov
or
jns
cli
jne
mov
push
test
loop
push
push
pop
decb
mov
icebp
xor
sbb
pop
lods
sub
dec
sbb
inc
push
jne
cmc
push
sbb
xor
mov
pop
popf
loop
daa
add
ret
aas
and
xchg
jns
loop
pop
aas
and
add
call
sub
sub
adc
and
sbb
inc
xchg
add
test
pop
push
out
jo
call
in
bnd
pusha
nop
andb
jne
es
add
adc
lds
sarb
or
repz
pop
ljmp
mov
sub
xchg
sub
push
adc
sbb
or
hlt
aam
and
inc
push
pop
mov
cltd
je
popf
or
push
sbb
les
cmp
or
je
call
pop
movsb
popl
and
lret
pusha
enter
dec
jnp,pn
sbb
sbb
add
and
sbb
aaa
adc
aaa
cs
add
push
adc
and
xor
lds
push
ljmp
adc
rcrb
les
or
idiv
xchg
lock
dec
mul
insl
or
das
xchg
pop
or
call
arpl
frstor
fisttps
repnz
ds
rorb
lds
inc
fcomip
arpl
and
lret
push
mov
adc
jecxz
pop
jmp
movsb
jge
xchg
inc
mov
sub
or
mov
popa
imul
push
lret
or
pusha
ja
inc
or
lods
dec
rcrb
xchg
adc
outsb
push
push
adc
pop
and
je
jmp
pushf
outsb
adc
mov
cmp
push
cltd
int3
pop
outsb
mov
sbb
pop
psubw
and
push
ljmp
scas
add
mov
sbb
push
cmc
or
lahf
test
dec
or
leave
push
fbld
and
scas
std
enter
xor
and
or
movsb
arpl
sbb
mov
test
and
push
les
jnp
xchg
mov
push
push
pop
adc
mov
das
jo
adc
add
and
pop
loope
jno
outsl
add
lret
push
mov
dec
mov
inc
jnp
mov
aaa
or
or
cmp
cmp
cmpsb
movl
or
and
pop
mov
in
pop
lea
add
test
pop
lods
pop
js
xchg
sub
mov
cmp
add
and
test
int3
push
mov
lret
sbb
es
roll
or
aaa
or
xchg
pop
mov
je
dec
dec
push
sub
ret
push
adc
lea
push
cmp
lock
adc
push
cli
adcl
call
jle
add
test
jne
inc
hlt
incb
jge,pn
ret
data16
lds
jl
dec
mov
ja
mov
lcall
xor
push
movsb
sar
rcrb
sub
sbb
sbb
xlat
lods
stos
inc
add
das
cmp
stos
or
out
push
je
jmp
mov
mov
pop
add
iret
ret
pop
cltd
mov
enter
adcl
mov
idivb
adc
pop
mov
mov
and
mov
push
push
push
cmovle
sub
sub
fidivrs
lods
and
shll
push
enter
stos
mov
sbb
push
insb
push
cmp
add
dec
jne
pop
push
cmp
stos
and
out
nop
es
pop
mov
ret
or
add
cltd
test
or
adc
push
fdivrs
cs
outsb
add
and
lods
call
and
cltd
pop
dec
mov
fcompl
mov
test
out
jb
bts
mov
adc
mov
incb
sub
jle
and
pop
sbb
mov
dec
or
fld
xor
sti
test
or
or
mov
and
ret
mov
jl
xor
add
std
cmp
mov
xor
loope
push
jns
and
and
incb
jmp
jb,pn
mov
inc
ja
dec
and
movsl
pop
adc
add
sub
dec
popa
icebp
or
sbb
cmp
or
jg
sub
push
pop
imul
jbe
pop
adc
inc
scas
xchg
dec
and
std
lds
xchg
movsl
pop
and
cwtl
jmp
pop
sub
pop
push
push
xor
insl
inc
mov
push
mov
pop
lods
and
and
add
call
or
and
adc
les
or
lret
sar
inc
nop
in
shrb
dec
ss
hlt
xchg
cmp
outsl
xor
and
jne
mov
xor
cltd
jmp
mov
lods
insb
sub
inc
fmul
insb
jmp
mov
aad
mov
xchg
mov
dec
sub
divps
aad
fistpll
pop
dec
in
push
add
movb
test
jns
pop
pop
mov
sbb
mov
mov
pop
or
or
mov
mov
adc
cmp
lods
call
jmp
jo
clc
ds
xor
incl
lock
call
dec
shll
mov
adc
loopne
push
lods
popf
jo
sbbl
adc
dec
or
adc
cmp
movsl
mov
loopne
mov
sbb
adc
cmc
mov
xor
imul
xor
sbb
sti
je
enter
inc
or
mov
dec
and
add
and
icebp
int
xor
fldenv
sti
andb
sbb
je
pop
xchg
sub
jo
dec
cmp
sarl
insb
inc
adc
dec
decb
cmpsl
jbe
inc
data16
jmp
dec
dec
add
jecxz
mov
or
push
loop
jle
movsb
lret
pop
into
mov
fadds
leave
call
pop
or
lea
push
mov
dec
in
xor
sbb
iret
lcall
add
out
test
clc
cmp
or
call
push
ret
push
lahf
mov
fcoms
push
sbb
bound
or
adc
movlps
jns
adc
scas
inc
cld
fs
adc
mov
rolb
nop
out
adc
mov
push
mov
jns
sub
adc
inc
loop
je
mov
lds
sub
push
mov
push
add
sub
adc
xlat
adc
adc
rorl
sahf
mov
push
push
mov
xchg
push
push
call
cmp
pop
in
mov
aas
xchg
or
aas
pop
push
mov
mov
ljmp
outsb
mov
jmp
or
mov
adc
or
icebp
xchg
rol
mov
add
call
sbb
cmpsb
cli
and
lds
sbb
lea
push
add
movsl
imul
xor
icebp
repnz
aaa
inc
pop
xchg
jbe
lret
es
imul
leave
cmc
shll
or
adcb
jl
lock
jg
inc
jmp
cli
jne
dec
lret
xchg
stos
inc
sub
daa
sub
enter
inc
repz
and
push
sub
or
and
movsb
xchg
xchg
ret
mov
jge
jo
push
insb
lods
xor
jecxz,pt
pop
loope
add
dec
sub
sbb
adc
add
adc
sub
push
mov
sub
xor
arpl
sbb
and
loopne
push
in
adc
adc
nop
call
in
push
test
out
sbb
adc
sub
adc
adc
adc
cmc
or
add
add
xchg
lds
or
jne
adc
adc
mov
out
cwtl
aas
sub
jmp
pop
adc
and
sub
cli
jmp
fst
add
mov
push
ds
inc
pop
adc
push
or
sbbb
mov
fimuls
rorb
sarb
call
mov
adc
mov
sbb
jle
loope
sbb
xor
testb
or
adc
add
les
push
push
jmp
lret
sarl
rdpmc
leave
and
popf
shll
rolb
sbb
mov
adc
jns
cld
fwait
mov
andl
xor
xor
repz
xchg
jmp
or
outsb
xlat
and
stos
adcb
insl
mov
loopne
push
sar
xor
push
add
call
xorl
mov
cmpb
sbb
push
orb
ljmp
or
dec
jns
ljmp
and
or
push
mov
into
jle
pop
sub
aad
mov
xchg
lock
test
jg
dec
inc
dec
jge
inc
sub
mov
ljmp
mov
xor
movsb
sub
sub
bound
jns
add
mov
or
loopne
push
mov
and
orb
in
cmp
adc
push
adc
jmp
mov
cmp
movsl
inc
adc
add
jg
popa
dec
or
lret
or
add
inc
sbb
mov
mov
test
dec
jbe
es
sbb
fwait
xchg
je
les
xor
lock
xor
jle
call
push
jmp
arpl
icebp
or
pop
test
jg
jne
daa
and
aam
inc
jne
mulb
shr
inc
xchg
xchg
and
ljmp
xor
jne
das
leave
mov
cmp
or
or
sbb
xor
je
dec
jge
inc
sub
push
and
js
adc
mov
fisttpll
xchg
pop
or
mov
daa
call
pop
aaa
mov
mov
push
push
adc
adc
xchg
and
jmp
pushl
xchg
or
scas
xchg
inc
sub
loopne
push
mov
ja
jnp
dec
pop
call
je
jmp
call
sbb
sub
pop
test
jne
dec
lods
mov
repz
adc
aas
xchg
pop
out
iret
or
pop
in
inc
inc
sbb
and
sbb
es
or
ja
inc
pop
stc
sbb
jmp
mov
cmc
cmpb
cwtl
in
inc
xchg
les
mov
jecxz
add
add
and
popf
mov
lcall
and
test
roll
xchg
mov
jmp
in
and
cmp
in
mov
adc
push
testb
pop
stc
adc
adc
loop
int3
or
jmp
inc
add
mov
sub
xchg
sub
push
jle
repnz
std
dec
or
shll
stos
or
xchg
mov
nop
or
test
clc
jge
cmp
push
dec
sub
adc
test
dec
sbb
xlat
in
mov
or
hlt
pop
lock
popf
jo
and
and
aam
scas
loop
shr
mov
dec
xchg
dec
cmpsl
jge
mov
sti
sbb
dec
adc
repz
or
or
xchg
dec
stos
mov
jmp
push
push
stos
xor
rorb
jb
test
jae
pop
add
or
faddl
aaa
jp
scas
lret
shrl
arpl
push
adc
iret
add
inc
or
pop
fnsave
xor
xchg
xchg
mov
ror
add
pop
pusha
xor
pop
shr
or
jmp
push
pop
xlat
iret
jo
scas
ljmp
jae
push
jle
lret
pop
repnz
push
insl
out
or
or
mov
sbb
jae
rcrl
jne
adc
loope
push
sub
dec
inc
pop
mov
and
add
push
mov
jge
lock
jmp
call
inc
push
lahf
dec
shrb
adc
adc
xor
xchg
mov
mov
in
jne
sarb
push
fidivl
enter
lods
test
out
xchg
push
rol
adc
insb
jnp
out
mov
testb
cli
jmp
jae
or
jmp
mov
adc
lds
push
data16
pop
jmp
orb
je
pop
pop
mov
adc
movsb
adc
pop
lods
mov
call
and
faddl
aam
rolb
in
clc
paddsb
pop
fucomp
xor
je
or
test
cmp
inc
add
inc
jmp
push
pop
mov
mov
add
ja
jl
cmp
add
or
cmp
add
cmp
and
incb
std
inc
lahf
push
sub
cmp
add
add
fldenv
fcoms
cmpsl
lods
adc
sahf
rcrb
add
dec
pop
sti
es
and
mov
or
jmp
mov
mov
sbb
inc
jle
xor
jnp
gs
jb
adc
jmp
lock
rcl
cmpsb
enter
push
dec
lcall
or
mov
mov
mov
adc
jle
push
ret
inc
mov
lcall
pop
push
mov
sub
jae
or
xchg
fsubrp
inc
dec
mov
push
sub
mov
or
loope
ret
outsb
pop
sbb
or
and
into
aaa
nop
sbb
adc
push
mov
or
jmp
xor
popa
popa
cmc
cltd
sbb
mov
in
lea
and
inc
enter
fs
or
gs
movsb
int
add
jl
insb
xor
mov
jl
and
or
pop
dec
jmp
or
jmp
pop
sub
mov
shl
pop
pop
cmp
push
pop
pop
jmp
orl
sub
sti
and
jmp
mov
fadds
pop
idivb
jmp
jnp
mov
int3
add
jp
ret
into
mov
cmc
js
mov
cmp
dec
cmp
je
lods
sbb
jle
test
cmp
test
add
jl
neg
jg
pop
hlt
dec
lcall
adc
xchg
ret
jns
aaa
repnz
bound
push
jle
xor
push
jb
or
xor
hlt
inc
test
push
jge
neg
add
adc
or
adc
sbb
cmp
xor
mov
push
push
repz
enter
pusha
xor
mov
xchg
pop
jae
mov
pop
cmp
bound
rolb
adc
stc
add
call
push
into
xchg
inc
ret
lret
jmp
jb
or
stos
pop
or
jge
lret
cmovnp
inc
xchg
dec
or
add
pop
mov
out
pop
add
in
je
adc
cmp
testb
inc
or
rorb
and
inc
test
inc
or
mov
lods
sbb
pop
adc
xchg
pop
jmp
sub
dec
xchg
add
inc
and
xchg
or
and
inc
out
mov
adc
and
dec
in
xchg
in
adc
sti
adc
aas
sti
jb
rcr
loopne
inc
add
sub
sub
or
shlb
push
or
das
adc
sbb
or
add
add
jmp
lods
xchg
jp
jnp
jmp
mov
maskmovq
sub
sti
sub
jmp
mov
call
sub
push
enter
ret
sbb
lea
pop
xchg
roll
outsb
shrl
lods
sbb
addl
iret
pop
and
jmp
dec
jns
sub
or
lahf
lea
and
push
cli
imul
jge
shll
xchg
jmp
push
repnz
sub
sti
xor
cmpw
aas
jb
and
inc
movsb
sbb
mov
std
adc
sbb
lds
jge
xchg
insl
add
jl
or
dec
icebp
xchg
push
and
adc
pop
xchg
cli
loopne
aas
cmpl
andl
clc
jnp
dec
sbb
jne
pop
add
neg
and
or
dec
ss
stos
fisubl
and
psubd
jne
cmp
adc
call
repnz
cmpsb
push
notl
xor
adc
mov
xchg
add
or
cmp
mov
jne
push
repnz
mov
mov
lea
jl
xor
shll
dec
and
adc
icebp
in
aam
inc
decw
mov
sub
sub
mov
rorb
adcb
sbb
sub
nop
popa
or
xor
fs
pop
add
or
andb
dec
dec
shll
test
and
je
mov
lods
jo
lock
call
popf
adc
push
cwtl
ss
popf
lret
mov
ds
call
clc
xchg
je
xchg
das
iret
adc
pop
add
pop
jbe
add
cmpb
jne
ds
pop
sahf
add
jb
add
cmpb
inc
cmp
jne
cmp
xor
sub
nop
inc
aas
add
cmp
inc
sub
sbb
cs
and
sub
mov
sbb
pop
inc
daa
or
mov
sbb
iret
inc
sub
int3
insb
xor
cmp
adc
rorb
out
call
and
call
push
mov
and
jg
pusha
adc
enter
adc
mov
sub
les
jge
lea
mov
push
and
ret
jne
outsl
mov
and
jmp
out
mov
adc
or
icebp
aam
sub
pop
nop
sub
dec
loop
adc
nop
pop
hlt
cmpsb
add
adc
repnz
test
stos
jns
aad
add
mov
movsb
ss
pcmpeqw
or
fildll
dec
out
adc
leave
push
mov
and
add
mov
or
insb
xchg
fldcw
data16
mov
mov
or
stc
mov
clc
and
nop
lret
mov
and
and
imul
subl
cli
std
mov
inc
aas
ja
dec
je
mov
jg
adc
pusha
bound
inc
inc
ud2
jne
daa
jmp
jmp
push
push
push
cmp
jne
pop
add
pop
clc
inc
fisttpll
sub
aam
or
rclb
ljmp
lahf
lods
loop
call
jo
into
push
or
scas
rcrl
cld
xor
push
push
pushl
call
lret
push
sub
add
jecxz
jne
enter
fnstenv
jg
andl
jle
cmpb
adc
mov
cmp
push
loop
sub
push
mov
in
push
xchg
xor
or
mov
xchg
push
inc
shll
dec
in
jno
xor
push
dec
ja
xchg
ds
fmull
or
inc
fidivrs
mov
stos
cltd
loop
sbb
out
inc
inc
stos
xor
xchg
mov
lret
mov
and
mov
jae
sbb
lock
aam
cmp
dec
add
add
push
push
fldpi
ss
inc
mov
xchg
jno
or
andl
push
pop
adcl
fsubr
pusha
cmp
jge
ret
fcmovb
sub
fmuls
sub
jno
into
andl
add
mov
lret
pop
std
add
cmpl
jge
movsl
test
fs
test
mov
cli
lods
mov
ret
pop
jl
push
mov
inc
pop
mov
fs
in
mov
data16
mov
out
nop
pop
std
in
fdivl
mov
mov
dec
loop
aam
mov
sbb
add
call
cmp
loope
mov
aas
mov
inc
loop
stos
and
xchg
xchg
jp
nop
mov
jne
std
sub
fcoml
add
ljmp
xor
jp
inc
and
mov
jne
push
mov
mov
scas
call
adc
in
and
and
adc
bound
sbb
loop
sub
adc
inc
mov
das
shrl
cli
jnp
fsubrs
hlt
sbb
cmp
sub
jp
call
adc
xor
xchg
sbb
mov
xor
push
jmp
js
les
jge
stc
mov
or
sbb
jns
or
js
jge
rolb
pop
rclb
or
jg
test
les
xor
mov
sbb
jb
ds
pop
sub
and
nop
xor
or
or
jb
test
jbe
inc
stos
dec
test
movsl
and
enter
or
outsb
push
push
jbe
or
jmp
dec
shrl
or
cmp
dec
push
insl
icebp
out
and
int3
enter
loop
adc
fisttpl
push
stos
pushf
jne
mov
push
adc
add
and
jp
loopne
and
hlt
dec
push
pop
dec
outsl
jmp
sub
testb
lret
in
pushw
je
adc
dec
sar
push
cli
insl
popa
into
jne
ss
mov
addb
rclb
dec
ret
lock
nop
dec
or
icebp
dec
rorl
sbb
add
ret
ds
je
push
mov
sub
negl
lock
frstor
jle
mov
jo
pop
sete
lea
lock
cltd
push
adc
sbb
sbb
mov
sbb
cmp
call
lret
jbe
loop
fbld
fidivs
movsb
pop
lea
cmp
push
cmp
jne
aaa
sbb
les
ss
mov
xor
rolb
ret
jl
cmpl
dec
ds
pushl
cmp
loope
into
test
inc
cmc
enter
test
shll
sbb
cmp
xor
mov
xor
scas
cwtl
add
fiadds
mov
mov
mov
mov
fs
loope
mov
pop
adc
inc
mov
push
mov
imul
lcall
xor
repz
or
js
push
inc
neg
sbb
shll
fcom
lcall
adc
daa
or
pop
sub
aad
mov
jnp
push
les
sti
mov
cmp
loope
test
das
xlat
into
sub
ja
sub
adc
sti
dec
jecxz
or
test
dec
ss
ret
xchg
sbb
sbb
or
cmpb
push
mov
and
push
pop
jne
out
repnz
adc
jbe
loopne
fildll
add
sbb
clc
sbb
stc
jmp
mov
cmp
xchg
sub
jne
fwait
lahf
sbb
pop
inc
in
test
add
mov
sub
cmpsb
imull
das
divb
scas
inc
dec
sarb
cmp
ds
into
and
shrb
adc
inc
imul
pushl
dec
ret
clc
sub
rcrl
inc
adc
dec
pop
and
clc
adc
mov
jg
ret
gs
pop
add
and
pop
insl
arpl
dec
sub
inc
mov
sbb
jecxz
push
xchg
insl
dec
mov
push
scas
dec
add
dec
or
push
dec
jl
add
into
pop
jmp
ljmp
xorb
sbb
and
add
inc
out
es
push
mov
mov
ret
clc
dec
lret
push
push
add
sub
cwtl
push
and
and
xchg
jnp
ss
sbb
mov
popf
subl
jl
movl
mov
push
and
mov
shr
push
push
dec
loopne
call
imul
call
in
aas
scas
cmp
and
push
jmp
and
push
xor
in
je
test
int3
mov
test
lock
mov
mov
push
sub
mov
paddb
imul
inc
cmp
or
jmp
push
test
movsl
daa
adc
fdivr
js
test
xchg
inc
and
call
int3
lods
pop
inc
and
push
jp
call
mov
test
xchg
mov
sub
inc
sbb
enter
add
test
or
adc
dec
cmp
xor
out
or
pop
ja
or
lods
sbb
and
lock
inc
or
sbb
cmp
mov
push
dec
adc
adc
pop
push
inc
push
sub
pop
sbb
inc
jns
inc
fstps
pop
test
or
fmull
push
push
ret
sub
pop
xchg
jmp
mov
mov
les
dec
js
bound
mov
stos
leave
or
outsb
mov
call
cmp
inc
leave
and
add
jnp
sub
repz
lock
add
and
xor
inc
inc
daa
and
inc
fsubrs
lds
mov
adc
ret
je
fisubl
mov
sub
imul
push
pop
mov
xchg
jecxz
dec
imul
cmp
xor
and
rcll
loopne
mov
pop
fcoml
xchg
adc
or
and
mov
mov
pop
xchg
cmp
pop
inc
inc
je
mov
dec
shl
adc
and
inc
dec
jmp
pop
sti
mov
jns
aam
add
or
jno
jl
push
pop
sbb
cmp
cmc
vmovsldup
push
mov
or
rep
in
cmc
mov
fxtract
ds
test
and
mov
push
ss
mov
leave
mov
das
push
xor
es
xor
add
adc
test
je
out
popa
bound
data16
xor
imul
popf
rcrl
sub
or
mov
fcoms
daa
and
idivb
xor
xor
ja
sti
mov
cmp
sti
cmp
ret
mov
jne
adc
or
pop
adc
pop
cmp
rolb
xor
xchg
sub
and
or
mov
bound
out
sub
lock
pop
push
loopne
sbb
push
nop
rorl
in
xchg
mov
or
aam
inc
push
xchg
jle
xchg
jns
in
dec
xchg
mov
divb
add
push
sub
popa
dec
lahf
push
dec
push
sbb
push
cs
xor
cld
xchg
das
lret
sub
inc
scas
xor
and
js
sub
xchg
mov
xchg
inc
mull
jmp
aam
pop
mov
icebp
mov
mov
cvtps2pi
loop
mov
movsb
xchg
add
or
dec
nop
adc
or
inc
jmp
and
bound
call
sbb
cli
insl
jmp
or
imul
mov
lds
push
jo
add
mov
jmp
and
rcll
add
dec
or
xor
push
sbb
fidivrl
data16
test
nop
dec
test
shr
jl
aam
fildl
test
push
imul
push
add
insb
xchg
dec
cltd
pop
ret
jge
or
pop
je
push
xor
jl
lret
loopne
lea
or
pop
mov
push
outsb
adc
dec
mov
jmp
lcall
je
xchg
adc
inc
xchg
adc
or
stos
arpl
insb
mov
int3
les
fwait
jo
pushf
inc
adcl
lahf
jmp
int3
dec
ds
bnd
mov
or
mov
fisttps
aas
sbb
mov
in
pop
jmp
xlat
mov
mov
loopne
aaa
adc
mov
push
sub
xchg
xchg
inc
dec
jne
push
xorl
mov
push
add
add
ljmp
or
dec
dec
xchg
and
inc
or
inc
dec
ljmp
dec
test
mov
jbe
dec
inc
inc
push
pusha
mov
xchg
dec
lods
xchg
les
aam
cld
adc
inc
and
cmp
dec
and
dec
bound
mov
loopne
cld
mov
inc
adc
sub
mov
jb
test
xchg
mov
mov
pop
ljmp
xor
icebp
and
outsb
orb
dec
les
push
inc
inc
and
mov
pop
and
dec
jle
xchg
and
ficoms
out
sub
inc
and
mov
and
dec
jl
mov
mov
in
adc
and
add
dec
xor
bound
js
test
dec
lods
xchg
mov
call
dec
add
and
dec
inc
xchg
pop
inc
add
movb
add
inc
je
mov
adc
xchg
add
or
xchg
adc
and
dec
add
xor
ja
add
out
mov
les
hlt
push
xor
mov
mov
add
movsb
mov
aad
in
add
mov
pop
sub
mov
mov
repnz
add
fiadds
test
fiaddl
sbb
in
insl
push
mov
hlt
movl
cwtl
insb
adc
add
std
in
add
mov
add
sbb
push
arpl
psubd
or
and
pop
adc
dec
in
pusha
aad
jno
cmp
roll
add
std
add
or
xor
leave
mov
mov
xor
pop
filds
or
cmp
fldenv
cmp
add
enter
mov
and
les
mov
mov
sub
mov
add
and
or
das
adc
stos
sbb
sub
faddl
jbe
jno
add
adc
out
mov
mov
push
movsl
in
lahf
xor
aam
call
xor
stc
add
mov
push
add
mov
cmp
insb
fs
add
out
push
imul
popa
rcrb
xor
test
pslld
xchg
push
mov
roll
or
movb
mov
push
jmp
mov
mov
add
rorl
pop
popa
mov
into
nop
sub
mov
aam
add
fadds
shll
push
imul
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
xorb
insb
sbb
shrb
sbb
incb
loopne
rorl
add
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
clc
fs
add
repnz
pushf
mov
xchg
insl
add
add
jmp
addr16
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
xor
jno
jp
xchg
mov
cmpsb
mov
ss
pusha
push
xlat
int
push
add
push
mov
jp
data16
dec
popa
les
sbb
push
sub
mov
mov
clc
filds
add
pop
inc
inc
push
and
daa
dec
pop
fdivrp
add
xor
je
cmp
and
in
hlt
jb
cmp
hlt
out
outsb
les
dec
gs
adc
sbb
sbb
sbb
jno
pop
mov
push
movsl
add
xor
cmc
or
js
aas
inc
lcall
cmp
push
xchg
mov
mov
outsl
add
scas
add
add
add
adc
xor
sub
push
pop
pop
or
aaa
xor
push
lahf
sbb
pushf
pusha
push
jo
js
sti
inc
xchg
jecxz
add
jo
jo
gs
add
mov
and
dec
inc
inc
jmp
push
cli
push
jmp
mov
inc
sbb
push
fistl
imul
mov
jae
jb
outsl
arpl
cmc
out
inc
in
and
jne
out
outsl
and
outsb
pop
inc
dec
inc
xor
jb
xor
adc
sub
or
sbb
sub
subl
outsb
dec
xor
js
pop
shrb
mov
jns
mov
bound
mov
test
enter
push
es
adc
insb
outsl
xchg
rclb
lahf
cmp
outsl
popa
test
outsl
ss
adc
jno
jb
jo
popa
sub
xor
pop
adc
cmp
dec
sbb
inc
or
mov
inc
das
or
dec
mov
aam
cld
mov
jb
test
mov
adc
int3
adc
repnz
push
fiadds
sbbb
dec
cmp
pop
fisttps
mov
inc
mov
lahf
inc
mov
adc
sbb
mov
xchg
xor
push
xor
xchg
aaa
mov
dec
dec
inc
dec
pshufw
or
add
xor
cmp
adc
insb
nop
cmp
lret
in
loop
jae
lock
cmp
nop
jp
jl
jne
jnp
and
jo
xor
push
icebp
push
ja
imul
cmp
xor
cmp
jne
jbe
scas
cmp
inc
push
and
mov
in
push
or
xor
pusha
out
push
mov
mov
pop
fldl
inc
pusha
adc
daa
jo
mov
fs
xor
xchg
stc
dec
sub
cmp
jmp
inc
andb
pop
pop
inc
and
xchg
insl
adc
pop
sub
sbb
adc
outsb
sbb
jb
xchg
ficompl
or
inc
jb
insl
add
jo
addr16
out
pop
inc
jg
nop
aaa
scas
xor
test
and
push
insl
pop
cwtl
pop
and
cmp
out
jne
sub
pusha
sub
sub
dec
adc
outsb
cmpl
push
aam
daa
jb
orb
push
cmp
data16
jmp
mov
push
fwait
popf
popf
dec
push
bound
or
pop
pop
mov
mov
and
aad
cmp
inc
outsb
add
cmp
push
or
imul
cli
xor
inc
lock
push
xchg
ss
aad
push
adc
push
xchg
push
push
popa
mov
dec
mov
mov
xor
in
addr16
or
std
dec
lahf
push
insb
sub
or
jo
add
repz
or
je
sbb
push
jbe
mov
adc
adc
ljmp
fbld
out
mov
call
dec
fdivrl
inc
or
inc
inc
xor
xor
call
jne
jns
pushf
cmp
sub
dec
sbb
call
mov
xchg
fdivl
push
fs
jb
imul
xor
lds
sbb
sub
sub
imul
adc
sbb
and
ss
fistpll
xlat
jo
inc
daa
add
jae
loopne
loope
xor
or
add
nop
push
addb
loope
in
or
and
frstor
or
cld
fildl
int3
and
adc
xor
test
push
sub
subb
sub
push
add
mov
dec
pop
inc
add
mov
push
cmp
js
ds
and
sub
dec
xor
add
pusha
adc
add
ds
jo
xor
mov
and
es
mov
adc
ds
test
call
enter
adc
mov
add
aas
sub
stc
add
adc
mov
xchg
and
sbb
cmp
loop
and
les
sbb
outsb
sbb
xor
and
inc
add
int3
fldenv
mov
aas
xor
dec
cwtl
and
jp
and
cmp
cmp
inc
or
sub
test
xor
test
js
scas
fsubrl
test
adc
movsb
xchg
pusha
xchg
add
mov
call
clc
inc
add
cmp
mov
fdivs
sub
inc
adc
lods
dec
cmp
xor
mov
and
xor
cwtl
cs
mov
mov
or
int3
inc
xchg
int
xor
addb
std
int
cmp
cltd
and
and
jmp
imul
pop
sarl
and
xor
dec
adc
jb
lods
pop
fsts
mov
mov
fisttpll
jb
sbb
push
push
imul
hlt
imul
sahf
fs
jo
shrb
and
xchg
xchg
jae
fidivs
stos
sbbl
push
jns
stc
clc
inc
imul
mov
cmpsb
ds
lret
call
int
popa
ret
ss
sbb
push
daa
add
or
sbb
sbb
in
or
push
dec
inc
fcoml
adc
push
mov
dec
mov
aas
outsl
push
lock
dec
pop
add
int3
jae
xchg
cmp
jo
push
mov
jl
lret
or
sbb
rclb
inc
push
movsb
scas
sbb
adc
dec
mov
shll
or
ret
icebp
xchg
loopne
test
je
enter
mov
jb
adc
outsb
sbb
pop
lret
lret
addr16
push
sub
out
xor
mulb
lock
cmp
cmp
xchg
push
add
dec
or
enter
insb
ret
out
int
push
push
cmp
lds
and
sub
xadd
cmp
pop
sbb
pop
mov
xor
mov
repnz
dec
mov
dec
mov
loopne
jo
pushf
inc
daa
push
stos
mov
inc
adc
pop
sub
repz
mov
ss
inc
jg
decb
cltd
sub
ret
rcll
and
out
jbe
or
jmp
and
add
in
xor
mov
dec
dec
fs
push
cltd
jb
xor
lods
pop
xchg
outsb
cmpsb
or
inc
mov
or
xchg
dec
mov
push
xchg
push
es
jo
lret
and
jo
int3
shrb
xchg
dec
add
mov
mov
dec
lret
insl
jb
in
incb
outsl
jo
bound
sub
xchg
mov
loopne
int
lods
adc
ret
sub
cltd
nop
imul
andb
test
mov
dec
bound
test
pusha
jb
dec
cmpsb
cmpb
pop
pop
xchg
ja
mov
into
pushf
dec
pop
mov
push
adc
xchg
add
imul
xchg
clc
cmp
insb
dec
push
sub
out
push
lds
out
add
aaa
fimuls
cmp
push
outsl
mov
push
dec
mov
adc
push
ss
jne
stos
lahf
popf
and
or
jb
jo
std
mov
dec
push
gs
ficoml
outsb
push
inc
jbe
adc
aaa
xor
xchg
lret
dec
jne
pop
sbb
out
bound
gs
sbb
sbb
dec
enter
push
xlat
mov
pushl
mov
sbb
mov
adc
jne
xchg
pop
les
jp
mov
xchg
push
xor
push
dec
dec
sbb
inc
dec
test
iret
sub
xchg
adc
mov
cmc
and
outsl
mov
push
adc
pop
insb
xchg
insb
subl
arpl
sub
add
add
inc
inc
loopne
xchg
jl
sub
push
inc
push
or
dec
jl
adc
add
call
lret
scas
mov
in
je
push
jmp
divb
dec
cmp
mull
scas
repnz
sbb
and
es
dec
out
dec
mov
test
push
data16
jns
jo
sarb
repnz
aaa
adc
inc
push
out
mov
popa
sub
inc
inc
ret
data16
and
std
leave
xor
data16
stos
xorb
adc
adcl
shrb
pop
and
mov
pop
adc
shrb
push
dec
popf
inc
cmp
add
add
add
add
add
mov
lods
add
inc
pop
sbb
in
sbb
push
push
add
andb
xor
xor
add
xchg
pop
xor
add
popa
jae
xor
push
enter
push
or
xchg
cmp
sbb
or
cmpsl
cmp
stos
je
pop
pop
add
js
insl
push
jae
popa
adc
ss
test
adc
in
add
xor
jle
pusha
loopne
adc
dec
xor
mov
xorb
cltd
loop
jmp
call
jo
cwtl
incb
ret
and
out
nop
jmp
jns
jnp
pminsw
loope
cmp
adc
stos
je
into
enter
sbb
xchg
shrb
in
xchg
inc
sbb
fdivrl
jo
adc
mov
js
pop
stos
push
sti
jle
outsl
test
fwait
fwait
push
outsl
test
into
arpl
outsb
sbb
in
dec
repz
shlb
in
sub
xchg
add
iret
data16
gs
sbb
repz
es
jl
jle
data16
sub
sub
sahf
cmp
adc
popf
repz
mov
or
sbb
or
insl
stos
inc
xor
pop
adc
fbld
fstps
mov
int3
add
mov
iret
lret
addr16
shlb
call
shll
lods
xor
enter
dec
add
shlb
ja
pop
jno
addr16
fdivrp
in
add
jmp
cli
fdivr
outsl
dec
ljmp
in
rcll
lahf
sbb
lock
std
dec
out
sti
fnstsw
ljmp
cmpsl
fildll
repnz
imul
cmc
push
ljmp
fs
and
popa
insb
ja
cmp
outsb
or
mov
sub
pop
add
inc
inc
dec
pop
rcrb
js
insb
outsl
cmp
je
fstpl
jae
arpl
sbb
cli
popa
fdivl
nop
sahf
jo
jbe
cmpsl
cmp
sbb
jb
outsb
cmovns
pop
push
pop
dec
push
fadds
popa
sbb
gs
jb
outsl
mov
in
or
outsl
ljmp
ds
and
and
adc
insb
sti
mov
outsl
mov
push
dec
stos
mov
gs
je
or
pop
roll
outsb
mov
inc
bound
mov
dec
mov
or
adc
xorl
dec
sti
daa
sub
pop
push
imul
scas
outsb
cmp
bound
sub
lds
cwtl
jo
and
push
daa
aam
les
sub
mov
adcl
sub
xor
test
xchg
push
cmp
adc
hlt
mov
adc
popa
jne
sub
xchg
aam
shrl
inc
cs
ja
sbb
sbb
jl
xor
mov
test
mov
jb
test
and
push
data16
out
fmull
push
sub
popa
sbb
pop
in
inc
mov
xor
add
push
cmp
dec
dec
dec
inc
push
lcall
mov
pop
inc
out
fnstenv
ss
sbb
and
fs
add
add
inc
push
or
and
inc
sub
and
test
jl
or
sbb
mov
xor
add
and
sub
and
inc
cld
push
cmp
adc
sub
call
rclb
mov
sub
cmp
dec
jns
jae
xor
ja
sahf
or
adc
insb
popa
lea
adc
imul
inc
xchg
repnz
sub
or
jo
jo
push
inc
dec
je
push
push
xor
outsl
pop
shld
fisttpl
mov
bound
push
outsl
dec
imul
push
inc
popa
and
shll
test
push
sub
popa
mov
inc
rcrb
stos
adc
add
pop
jae
jns
shlb
dec
addl
insl
outsl
ljmp
std
imulb
sub
dec
push
dec
push
pop
rcrl
push
mov
push
mov
out
push
repz
popa
inc
or
xchg
and
xchg
xor
pop
add
pop
sub
and
jo
xchg
add
xor
and
jbe
out
jb
xchg
push
inc
dec
rolb
push
inc
sbb
sub
sbbb
lcall
enter
int3
and
or
nop
inc
jl
pop
in
jl
mov
adc
and
imul
mov
nop
inc
je
sbb
mov
cmp
or
call
loop
push
pushf
sbb
test
insb
jb
ds
sbb
sub
inc
adc
sbb
xor
inc
jo
push
out
adc
shlb
xchg
inc
data16
xchg
dec
enter
mov
adc
pop
stc
sub
mov
dec
enter
sbb
xchg
or
add
in
pop
sbb
bound
mov
aam
icebp
mov
pusha
enter
sbb
mov
je
xchg
inc
dec
sub
pop
or
pop
sbb
pop
in
jb
ds
and
lret
sbb
fcomps
aam
or
xchg
or
inc
sub
sbb
clc
pop
push
in
inc
aam
mov
inc
mov
jb
sub
jl
dec
gs
cmp
xchg
adc
addr16
dec
outsl
icebp
fs
in
stc
push
mov
and
imul
cmp
lea
gs
aam
pop
cmp
and
jbe
xor
xor
outsb
ja
arpl
sbb
outsb
cs
mov
arpl
adcb
and
cmp
stc
dec
xor
imul
fstpt
in
iret
leave
xor
bound
or
jae
insl
stc
into
push
mov
xor
xchg
insb
xor
imul
aaa
jne
mov
sub
bound
dec
cmc
sub
dec
daa
dec
outsb
pop
lahf
push
push
subl
mov
lret
and
repz
outsb
and
into
xor
addr16
test
adc
sbb
sub
lret
push
adc
imul
cmp
inc
push
pop
adc
dec
jne
bound
xor
insb
sahf
push
pop
sub
and
ss
std
mov
dec
mov
and
sbb
adc
lahf
push
rcrb
inc
cmp
inc
je
cmp
and
cmp
push
imul
dec
in
push
pop
dec
and
inc
push
lahf
xchg
bound
jne
mov
mov
pop
outsb
stos
and
jnp
fisttps
sub
cmp
imul
add
ljmp
popa
fidivs
xchg
xorl
addb
push
and
mov
and
addl
mov
dec
push
fsub
jl
or
dec
mov
cmp
aas
pushf
loope
inc
dec
xchg
inc
xchg
addl
popf
ds
pushf
loope
xlat
push
outsl
and
adc
mov
jbe
adc
inc
add
cmp
fdivrl
jbe
jns
movsb
inc
test
sub
packssdw
fs
sub
adc
addr16
cwtl
adc
xchg
inc
push
push
jne
jae
imul
insb
cli
ss
push
mov
xor
mov
dec
ja
adc
fnstenv
xor
sub
movsb
insl
dec
or
inc
jl
inc
jb
imul
mov
addr16
adc
stos
rclb
sub
test
gs
inc
or
bound
imul
pop
mov
pop
sub
inc
jmp
sub
pop
jbe
sub
dec
insl
push
fildl
lahf
cwtl
pop
daa
aaa
cmp
js
cmp
inc
dec
inc
push
adc
mov
cltd
sub
outsl
and
movsl
jo
adc
push
ljmp
imul
push
stos
inc
xor
dec
leave
inc
js
dec
sbb
push
or
outsb
mov
dec
push
and
push
adc
xor
shrb
mov
out
push
outsb
mov
mov
in
push
push
push
xchg
subb
scas
in
adc
sub
sbb
inc
mov
sub
rcr
and
inc
data16
mov
dec
mov
je
cmp
adc
push
cmp
xor
inc
xchg
jbe
push
cmp
imul
shll
dec
adc
andl
pop
xor
pop
dec
fs
pop
cmp
and
sbb
cmp
pop
adc
addr16
les
jno
mov
xor
enter
pusha
imul
xorb
dec
repnz
xchg
shlb
pop
jbe
sahf
xor
data16
cmpsb
cmp
and
ds
sar
jns
mov
repnz
inc
in
and
fs
xchg
xchg
dec
and
int
jmp
scas
xchg
push
test
and
jb
call
xor
insb
cwtl
jl
dec
jb
les
icebp
imull
jbe
gs
cmp
mov
xor
stos
shlb
pop
dec
and
dec
je
fwait
inc
addr16
pop
sarb
xchg
mov
int
xchg
cwtl
jae
clc
push
cmp
daa
inc
cmp
and
inc
insb
add
cmpsb
xchg
dec
pop
sub
mov
or
mov
inc
jne
pop
sub
dec
lea
pop
shlb
mov
cmp
cmp
cmp
dec
adc
ds
cmp
fwait
mov
xchg
movb
jg
dec
arpl
test
push
dec
pushf
insl
or
xor
aam
mov
sbb
arpl
mov
lods
inc
pop
shrb
sbb
jae
jbe
adc
xchg
xor
push
or
fsubl
rolb
inc
inc
lea
jl
inc
js
xor
imul
add
sub
dec
jp
cmp
hlt
out
jmp
xor
xchg
js
gs
adc
outsl
push
adc
ret
and
sub
rolb
inc
adc
in
test
sbbb
adc
into
popf
jb
ja
cmp
popa
sub
mov
and
sbb
pop
mov
add
int3
adc
jg
rclb
xlat
add
push
flds
jle
stc
shlb
inc
add
mov
sbb
adc
or
dec
pusha
add
int
ret
fiaddl
add
push
jg
inc
xor
and
std
int3
inc
fs
mov
jo
scas
je
xchg
shlb
pop
or
pop
push
jl
adc
dec
push
adcb
adc
scas
outsb
jb
or
sub
orl
loopne
inc
add
add
inc
dec
xor
sub
add
jno
xchg
sub
sbb
add
or
int3
add
loope
inc
add
fdivs
addb
test
sub
or
cltd
and
adc
cmpsb
xchg
movsb
repnz
ds
stos
shlb
or
nop
dec
inc
xchg
and
enter
push
cmp
push
adc
mov
and
add
pop
call
add
nop
out
sub
add
or
sbb
movsb
sbb
jo
cmp
adc
mov
xor
inc
call
inc
adc
adc
add
clc
and
in
cmp
rolb
push
jmp
mov
jp
test
in
push
call
outsb
sbb
and
das
or
or
add
pop
es
jmp
dec
and
push
nop
movsb
lock
inc
add
and
pop
pop
mov
loopne
leave
or
pop
xor
xor
add
clc
fs
loopne
lods
js
and
sub
sub
and
dec
addb
or
xor
push
jg
and
nop
add
out
or
pusha
cmp
push
imul
mov
mov
call
mov
jb
jb
cmp
call
xor
inc
cmpl
testl
xor
out
add
loopne
pop
add
dec
sub
jo
xchg
cltd
xor
xor
xor
jmp
push
das
cmpsl
add
jl
xchg
mov
ja
aaa
in
inc
test
add
cld
clc
pop
jno
dec
outsl
cmc
jl
or
pop
lock
repnz
cmc
lock
inc
dec
das
icebp
in
cmc
inc
and
mov
cmp
jae
js
lret
or
lock
pop
sbb
jns
xchg
lcall
inc
out
xchg
mov
mov
sub
mov
dec
push
clc
inc
movsb
dec
xchg
inc
jbe
sub
loop
inc
lea
and
test
nop
adc
mov
dec
mov
add
ror
push
xor
in
mov
mov
dec
mov
or
fs
push
push
mov
insl
pop
negb
inc
push
dec
popf
lea
or
and
in
cmp
pop
icebp
mov
jmp
mov
sub
in
xchg
fcom
jo
mov
sbb
xchg
mov
outsl
jne
dec
les
int3
aam
jecxz
jmp
xchg
popf
test
out
push
or
repnz
dec
in
dec
dec
gs
pop
test
fs
push
and
dec
or
cmp
loop
dec
dec
inc
dec
dec
jecxz
push
dec
jb
inc
lds
seta
sub
or
adc
sbb
jge
adc
add
push
mov
arpl
int3
es
popa
inc
cmp
inc
jle
mov
dec
inc
adc
xlat
int3
mov
cmp
in
mov
je
or
or
cld
jnp
jb
dec
imulb
adc
jo
push
inc
push
jecxz
imul
out
int3
jne
push
stos
mov
xor
push
xor
cmpsl
or
test
lods
arpl
test
jae
cmpsb
dec
inc
cs
and
popa
push
ja
inc
mov
les
sbb
divb
popf
mov
stc
mov
pop
inc
sub
jmp
shrb
insl
out
insl
mov
and
sbb
scas
adc
or
dec
loopne
popa
and
push
mov
sub
into
push
push
push
pop
or
mov
dec
adc
out
inc
popa
test
mov
inc
fidivs
stos
adc
je
insb
mov
inc
or
les
imul
and
xor
imul
gs
xor
mov
adc
add
inc
jbe
dec
cmp
je
adc
in
sbb
inc
dec
mov
push
sbb
and
movsl
movsb
mov
xchg
jns
pusha
jne
lds
popf
inc
dec
dec
mov
mov
dec
xor
bound
mov
or
jmp
jg
fsubr
nop
jne
push
sub
rolb
loopne
shlb
cmpb
leave
adc
sub
out
sub
mov
add
lret
adc
leave
or
es
sbb
inc
stos
jns
call
xor
inc
mov
bound
in
push
xchg
jb
andb
or
push
and
xor
mov
out
cmp
lahf
int3
lods
pop
or
inc
xor
sbb
and
push
jb
xor
notl
add
vaddss
and
sub
cmp
xor
xor
mov
jne
mov
push
cmp
xor
out
adc
push
push
pop
test
inc
orb
inc
push
jne
inc
mov
fcmove
int3
cmp
test
test
xor
js
add
sub
sub
in
push
iret
or
xchg
dec
and
push
xor
fisubl
pushl
dec
jmp
test
sub
jl
imul
push
jns
in
and
mov
inc
jmp
push
inc
cmp
das
push
shl
arpl
xor
or
push
pop
push
dec
and
dec
mov
push
aam
fxch
xor
gs
pop
mov
inc
adc
sbb
sbb
xor
xor
mov
mov
xor
inc
or
jecxz
cmp
push
sub
jmp
adc
inc
xor
add
xor
out
cs
or
jmp
pushf
pushf
sub
pop
je
popa
adc
adc
push
fs
xchg
js
aas
push
das
xor
mov
dec
ds
lods
inc
pusha
insl
and
inc
jae
push
xorb
lds
pop
insb
ja
repz
arpl
sub
adc
mov
sbbl
cmp
mov
push
sub
dec
cld
xchg
jp
lods
inc
adc
enter
inc
dec
pop
jo
push
inc
popa
loope
add
inc
cmp
dec
arpl
popa
cmp
sub
push
adc
dec
sbb
daa
push
aaa
ficoml
inc
xor
fldt
mov
mov
lock
std
xchg
lods
decb
int
mov
adc
cmp
dec
das
out
jle
push
lds
sbb
cld
das
push
call
int
call
sub
out
xchg
pop
jecxz
flds
sub
loopne
or
mov
ret
xchg
imul
xlat
imul
jo
ficoml
sar
dec
sub
push
inc
add
and
nop
ds
das
sub
sbb
and
dec
inc
or
dec
sub
andb
push
adc
push
test
push
cmp
jge
xor
sub
xor
bsf
dec
roll
jle
cltd
push
push
dec
mov
in
cwtl
movsl
ds
test
mov
inc
stos
dec
shlb
push
imul
pushf
sub
testl
jno
rcrl
pop
inc
lock
idivl
int
push
fsubrs
js
das
lods
mov
cmp
xor
mov
or
ss
cmpsl
mov
inc
inc
stos
sbb
jb
jl
sub
lret
xor
push
push
cmp
mov
xchg
jg
loope
or
inc
insb
roll
and
ljmp
inc
xchg
clc
xchg
xchg
dec
test
push
mov
xchg
and
push
lds
in
inc
mov
repz
les
inc
push
inc
and
into
pushf
xor
sub
mov
adc
inc
jnp
dec
push
daa
ljmp
clc
push
pop
movsl
int
sub
pushf
test
push
gs
mov
scas
sbb
xor
or
or
dec
push
push
and
sub
pop
or
push
insl
mov
mull
cli
outsl
dec
push
iret
xchg
mov
pop
in
pop
dec
jp
out
or
push
inc
mov
imul
ds
call
xchg
mov
inc
xor
fistpl
inc
fdivrs
push
das
and
sub
xor
mov
sub
pusha
aad
sar
xorb
lock
and
loope
add
and
popf
jle
mov
pop
mov
pop
sti
mov
lock
xorb
sbb
insb
aaa
add
pop
movsl
notl
mov
sbb
push
leave
xchg
imul
jae
add
cmpsb
jg
add
xchg
push
test
ljmp
popl
dec
in
cs
and
mull
loopne
popa
mov
arpl
mov
cmp
lods
and
cmpsl
int3
lret
popl
bound
jbe
mov
outsl
and
mov
cli
lahf
xchg
sub
or
aad
xchg
add
mov
ljmp
cli
dec
xorb
jns
jne
es
mov
pop
arpl
push
sub
js
cmpl
adc
jo
pop
inc
push
adc
jne
outsl
mov
outsb
xor
xchg
cmp
jmp
xchg
xchg
mov
cmc
out
rolb
mov
inc
cmp
decl
jg
or
pop
or
rcr
cmc
imul
dec
mov
jp
imul
lods
or
imul
jo
in
repz
sti
lods
and
je
fcompl
fxam
mov
insl
mov
repz
mov
ja
adc
or
and
add
pop
jbe
add
adc
jl
movsl
pop
xor
jno
or
sub
jb
jge
movsl
pop
xor
jae
or
sub
je
jge
movsl
pop
xor
jne
or
sub
jbe
jge
movsl
pop
xor
ja
or
sub
js
jge
movsl
pop
xor
jns
lods
xor
mov
adc
inc
js
inc
jnp
xor
ret
and
dec
pusha
jns
xor
add
inc
adc
add
add
cmp
dec
add
add
and
ret
dec
add
add
flds
pop
ret
dec
add
add
and
ret
dec
add
add
and
ret
ret
or
or
mov
sub
adc
or
pop
pop
xchg
add
clc
aaa
or
inc
push
popf
xchg
or
addr16
cmp
and
jo
dec
push
or
or
and
pop
je
xor
dec
add
and
or
or
push
add
push
outsl
or
call
fcmovnu
lcall
ret
jge
mov
sub
or
add
aam
or
or
or
add
push
or
addr16
or
push
dec
or
or
add
or
or
adc
insb
or
movsb
or
adc
fiadds
and
inc
pop
popf
adc
into
dec
xchg
mov
inc
ret
sub
adc
push
into
pushf
xchg
loope
inc
mov
mov
outsb
or
push
insl
or
sub
or
adc
mov
sbb
test
mov
aas
in
dec
pop
jl
in
inc
pop
inc
push
push
dec
push
pop
pop
push
lock
arpl
push
and
pop
lcall
and
pop
int3
add
dec
dec
imul
pop
iret
mov
jmp
dec
dec
jle
lods
pop
mov
xor
fs
addr16
rolb
lods
pop
jmp
inc
in
mov
stos
shll
stos
pop
sub
iret
mov
divb
mov
add
push
inc
dec
rcll
xchg
fs
pop
into
adc
fs
jge
dec
fmull
cmp
mov
in
mov
insl
pusha
jae
sub
pop
lret
push
pusha
pop
pusha
pushf
out
push
popa
sub
push
bound
ja
adc
js
fs
ja
adc
js
pushw
ja
adc
js
push
imul
test
loope
jbe
sub
dec
mov
cmpsl
sbb
sti
push
sub
inc
sbb
fwait
das
les
dec
in
sbb
xor
inc
push
out
outsb
jns
cmpsl
push
jo
arpl
imul
call
jo
add
imul
adc
xchg
push
dec
fwait
ss
push
out
pop
test
push
dec
xchg
loop
push
mov
adc
mull
cmp
xor
outsl
arpl
lea
inc
js
imul
xor
call
jbe
jb
rclb
push
bound
popa
fmull
inc
stos
data16
and
adcl
jae
adc
add
inc
mov
sbb
inc
mov
fs
sub
adc
ss
cmpb
dec
std
mov
push
cmpsl
sub
adc
bound
aam
cmp
jae
xlat
mov
outsb
jae
movsl
jne
cmpsb
lods
inc
cmp
push
out
aam
inc
ds
inc
aas
and
adc
mov
mov
add
hlt
sub
sbb
call
mov
sub
or
data16
dec
inc
inc
int
rorb
pop
dec
leave
or
push
test
cld
dec
outsl
push
mov
push
pop
adc
sub
mov
arpl
adc
adc
xor
daa
jns
xchg
test
and
cmp
outsl
outsl
jp
pusha
popa
das
xor
xor
fucom
add
sub
push
xor
jb
cmp
loope
std
and
sub
push
push
mov
pop
pop
sub
push
xchg
or
dec
int3
cmp
xor
adc
cmp
inc
aas
test
mov
js
sbb
jno
push
into
pop
aaa
sbb
fidivs
jno
mov
shrb
cmp
or
je
sub
jecxz
gs
or
inc
push
sbb
inc
push
or
icebp
push
jle
popf
jns
mov
jp
imul
jbe
jnp
or
enter
je
ret
call
inc
or
jae
pop
mov
je
adc
mov
call
loopne
cmp
or
xor
sarl
in
and
stos
or
and
mov
dec
push
xor
inc
inc
dec
jae
stc
int
sbb
arpl
enter
push
mov
les
push
ja
xor
movsb
fmul
dec
bound
call
in
jp
out
inc
sub
inc
cmp
rclb
sub
adc
out
and
clc
flds
lods
fisubl
arpl
je
adc
out
inc
addr16
xor
inc
lods
jmp
push
push
mov
xchg
jne
call
mov
and
mov
jae
inc
and
data16
xor
fmull
out
adc
jne
shlb
punpckhbw
inc
inc
dec
pop
pushf
xorb
ret
call
sbb
jne,pn
movsb
test
xor
push
scas
push
popf
int3
xor
inc
xor
or
mov
fsubrl
dec
xor
inc
xor
out
inc
adc
andl
mov
in
fs
fisubl
cld
jns
stos
cmp
test
dec
push
mov
inc
stos
and
orl
mov
dec
xor
lret
insb
push
adc
push
inc
push
int
push
and
jmp
mov
pop
inc
stos
fwait
push
or
cmpsb
add
adc
shrb
ljmp
cmpsl
or
and
xchg
xchg
cmp
jns
sbb
stos
cltd
xor
fnstenv
jmp
into
cmp
mov
jmp
inc
pop
mov
jae
sub
sub
xchg
push
xchg
adc
aam
adc
and
jbe
and
push
js
shlb
aad
xchg
adc
adc
push
outsb
lret
inc
sbb
adc
cmc
test
dec
xor
lahf
into
jl
inc
cmpsb
mov
repz
imulb
leave
jno
loop
pop
sbb
push
lret
inc
inc
xor
sbb
xor
jns
cmp
jns
sub
push
pop
adc
pushf
push
pop
push
rolb
jecxz
int
gs
pop
lret
jmp
or
daa
pop
dec
hlt
enter
or
enter
cmp
xchg
std
adc
icebp
add
dec
popa
add
jnp
clc
stos
stos
fisttpll
fisubrs
data16
adc
sbb
sbb
jne
or
push
or
add
push
lea
inc
icebp
out
cwtl
ljmp
push
repz
lret
sub
cli
inc
push
adc
test
adc
mov
dec
fs
jns
jae
popa
or
in
xchg
or
sbb
adc
int
enter
cwtl
or
out
test
scas
push
test
adc
movsl
cwtl
int
loope
lcall
insb
stos
push
rcr
jge
ja
add
daa
mov
pop
push
xchg
addb
push
jle
adc
cmpsl
inc
jmp
shlb
adc
xor
shrb
jno
rolb
xlat
xchg
jne
add
xor
pushf
push
jbe
jns
stc
push
mov
insb
jecxz
pusha
xor
jle
pop
in
inc
aas
mov
mov
xchg
or
dec
in
or
sbb
and
jp
testb
imul
or
push
fcos
decl
inc
xchg
aas
mov
lahf
pusha
ss
out
mov
mull
or
adc
inc
jbe
and
xchg
sub
imul
mov
and
call
inc
popf
xchg
mov
in
push
dec
decl
fcomps
enter
cmp
dec
jnp
flds
xchg
hlt
xor
dec
lret
dec
push
mov
push
cmp
jnp
adc
push
test
push
xor
xor
push
dec
dec
xor
pop
xor
lods
xor
mov
push
xchg
push
and
outsl
xor
aam
mov
xchg
nop
jae
pop
test
adc
or
dec
rolb
or
xorb
mov
roll
xchg
orb
loopne
and
xor
notl
xor
jae
ja
xor
jo
push
xor
bound
cmp
push
fidivl
fiaddl
push
inc
add
ret
inc
test
cmp
push
in
adc
lret
adc
dec
dec
dec
nop
mov
repnz
sbb
scas
xor
push
das
out
pop
xchg
loopne
sbb
push
add
loopne
inc
adc
bound
mov
adc
or
outsl
xchg
js
xor
sarl
inc
add
jns
inc
push
faddl
sti
xor
rcr
cli
or
pop
bound
lods
inc
lods
sub
movsb
nop
push
insb
fisubs
pop
xchg
jo
arpl
pushf
mov
test
adc
lods
sti
dec
sbb
push
sub
int
pop
inc
xchg
rclb
inc
repz
sub
fldl
lcall
cmp
or
rclb
fwait
test
rorb
cs
sar
mov
or
mov
mov
test
mov
pop
mov
push
das
in
fucomi
and
add
adc
mov
js
mov
cmp
or
adc
push
js
adc
stos
pop
cmpsb
jmp
clc
and
das
sbb
push
int
xor
into
add
adc
mov
fwait
push
pop
mov
mov
das
and
and
add
lods
or
and
fmuls
inc
jo
test
mov
xchg
cmp
mov
add
test
sbb
push
add
lcall
adc
add
popf
lods
test
push
mov
data16
call
add
cltd
addr16
pop
jnp
dec
xor
push
inc
sahf
xor
test
imul
push
jl
mov
add
adc
ljmp
arpl
sbb
insb
adc
pop
cmp
sbb
adc
in
sar
rorl
jae
sub
insl
sub
andb
in
mul
mov
je
rcl
pop
andl
jo
arpl
and
fistpll
imulb
fwait
xchg
daa
sub
jbe
sbb
inc
or
dec
popa
je
js
mov
xor
push
imul
dec
icebp
sub
pop
daa
mov
shlb
mov
and
sub
or
lock
rcrb
pop
aaa
adc
mov
rorb
xorl
mov
inc
daa
aad
sub
push
negb
pop
stc
inc
incl
mov
dec
dec
dec
andb
push
push
push
push
push
push
pop
pop
or
bound
pop
addr16
push
insb
insl
outsb
outsl
jo
mov
push
jne
ja
adc
jp
lret
add
xor
ss
cmp
sub
das
dec
sbb
adcw
adc
call
push
clc
test
ret
adc
add
imul
sub
push
loop
cmp
and
mov
xchg
wrmsr
lods
int
xor
adc
cltd
call
mov
push
mov
sub
mov
pop
xor
push
xor
push
push
call
insb
mov
pop
jle
or
pusha
call
inc
and
lea
addl
add
dec
jbe
push
pop
lock
mov
add
push
into
jl
shlb
xor
mov
es
mov
mov
call
je
inc
jmp
inc
jle
fs
clc
pop
popa
ret
es
mov
sbb
test
add
stc
cmp
je
add
or
clc
sahf
cli
sahf
pop
jge
add
idivb
jl
or
inc
std
add
push
or
inc
jae
addr16
outsb
push
mov
add
lcall
cmp
push
add
dec
sbb
pop
and
jmp
cmp
xor
sub
cld
lods
hlt
loopne
sysret
ror
loopne
jmp
cmp
aaa
jne
dec
push
dec
adc
or
push
call
popa
ret
std
insb
dec
nop
cli
adc
repnz
cld
call
jl
out
push
dec
and
cs
lods
test
and
or
inc
sbb
adc
ret
lret
mov
xor
mov
lods
or
jmp
xor
jl
add
pop
xor
pusha
push
push
jmp
dec
out
into
rcrb
jmp
call
and
fs
lds
int3
add
mov
daa
mov
jo
mov
push
popf
pop
cs
cmp
lods
rol
insl
xchg
jmp
popf
xor
faddp
sub
insb
es
adc
ljmp
daa
ljmp
cmp
sub
jns
jg
outsb
sub
sbb
push
push
mov
push
cmp
inc
sub
add
xlat
hlt
aam
and
fisttpl
pop
dec
cltd
aad
sub
pop
rol
fnsave
inc
dec
xchg
inc
popa
inc
xor
push
rorl
xchg
mov
lcall
sbb
sub
adc
dec
loop
mov
cmpsb
xchg
fisubl
adc
div
cs
sub
mov
or
enter
and
cmpl
mov
mov
test
add
jb
jo
or
or
add
push
jne
adc
mov
int3
mov
out
sub
xlat
rcr
pop
jmp
push
js
daa
push
jo
dec
push
or
inc
or
and
xor
mov
nop
lds
and
clc
and
pop
add
push
inc
and
outsb
das
pop
push
push
inc
inc
sbb
fcmovne
push
scas
add
dec
push
push
inc
xchg
sub
xchg
das
loopne
add
mov
lcall
dec
mov
rcrl
mov
lods
loop
mov
dec
push
xchg
repz
xchg
sbb
rclb
andl
xchg
inc
sbb
and
dec
jmp
cmp
ret
xor
jns
pop
iret
jnp
fcoml
and
test
add
fsubs
test
lret
add
and
add
cmpsl
in
clc
xchg
dec
xor
push
xchg
idivb
and
dec
cmp
aad
outsb
pushf
inc
cmp
pop
addb
pop
je
add
fcoml
pop
mov
pop
add
fdiv
sbb
shll
into
and
loop
or
pop
loopne
shll
movl
fildl
ja
and
add
aam
inc
and
add
and
es
or
pop
les
js
jb
repnz
lret
orb
add
mov
fdivrs
out
in
test
sbbb
pop
pop
xor
scas
in
cmp
mov
mov
add
and
push
rcr
pop
ror
dec
movsb
sub
adc
push
je
stc
xchg
fidivrs
mov
inc
test
push
sub
aam
call
fwait
pop
sbb
push
add
mov
dec
xor
jo
roll
js
inc
mov
or
out
adc
xor
jmp
int
push
out
push
jge
mov
add
xor
idivb
adc
mov
inc
adcb
add
add
test
adc
sbbb
cmpsb
jl
mov
add
nop
aaa
add
fmul
adc
sub
add
shlb
adc
and
test
adc
mov
ds
sahf
es
fucomi
aam
push
mov
loop
data16
cmovg
lock
adc
push
and
pop
cmpsb
or
cmp
jbe
add
push
insl
rolb
and
add
jae
dec
adcl
adc
das
add
fisttpl
push
rcrb
adc
lret
repz
mov
adc
add
testb
sti
cli
add
mov
push
mov
test
gs
adc
push
test
and
add
sbb
popf
cmpsl
ljmp
shlb
stos
test
add
jl
mov
xor
sub
loop
xchg
add
std
call
jne
popw
aas
mov
xchg
cmp
cmp
sub
mov
adc
mov
adc
dec
aaa
test
dec
mov
jl
inc
add
ja
loop
xor
jle
xor
mov
xor
imul
cwtl
add
jecxz
dec
add
mov
inc
and
rolb
sbb
sbb
add
add
add
dec
xchg
repnz
std
test
add
jo
adc
and
add
and
add
inc
nop
mov
mov
mov
add
js
sbb
adc
add
dec
jns
cwtl
mov
fwait
aas
jbe
dec
mov
add
aam
or
shl
dec
add
stc
ja
add
mul
inc
or
sub
sbb
xor
adc
jae
add
stc
dec
adc
add
jne
cld
cmp
ja
sub
mov
fwait
xchg
je
add
dec
dec
adc
aad
jbe
cmp
mov
mov
and
jo
sub
lahf
mov
and
add
cmc
mov
jl
jecxz
xor
jle
dec
add
cwtl
sub
dec
mov
add
loope
and
jecxz
adc
sbb
loop
cs
add
js
inc
imul
dec
add
mov
mov
cltd
jle
clc
jp
and
not
mov
test
add
dec
mov
xor
xchg
add
jmp
xchg
add
or
nop
xor
jo
loopne
add
cwtl
mov
adc
mov
mov
mov
xchg
jg
adc
jp
shl
xchg
jecxz
js
test
cmc
xchg
cmp
add
dec
mov
jo
sub
cwtl
aam
mov
test
jmp
and
jle
aad
xor
jg
and
cmp
cltd
add
inc
adc
mov
xor
add
aam
xchg
xchg
mov
and
cmp
sbb
nop
add
inc
mov
ja
jl
data16
sub
fwait
xchg
mov
inc
xchg
js
mov
push
dec
jno
or
dec
jge
mov
incb
jbe
add
mov
mov
cld
nop
xchg
mov
loopne
clc
cwtl
cmpb
test
add
inc
mov
mov
mov
sub
xchg
inc
lcall
aaa
dec
xchg
xchg
std
dec
add
or
aam
aas
adc
mov
data16
aad
mov
add
inc
inc
fcmovnu
fnstenv
hlt
mov
sub
leave
mov
pop
add
xor
jle
add
mov
sbb
adc
ficomps
icebp
sub
dec
add
mov
enter
cmp
pop
adcl
sub
shlb
add
inc
xchg
cwtl
fs
push
jl
movsb
sarl
adc
mov
add
xor
add
adc
addr16
rcll
cmp
test
outsl
dec
add
mov
rcrb
std
adc
pop
mov
in
jp
add
iret
inc
cli
xchg
loop
add
inc
fnstenv
add
test
and
push
imul
shrb
mov
push
push
pop
scas
in
push
iret
adc
mov
add
out
push
xchg
pop
mov
mov
add
insl
cld
xor
shrl
add
sar
movsl
ret
mov
jl
mov
rolb
fs
pop
dec
out
in
lods
pop
xchg
mov
icebp
popa
aad
add
out
add
mov
enter
mov
dec
ds
or
les
call
movsb
sbb
mov
rclb
xchg
add
lea
add
and
andb
cmp
int
movlps
push
dec
xchg
lret
addb
xchg
cmp
push
mov
cltd
inc
enter
bound
cwtl
add
push
xor
jmp
or
in
push
and
or
dec
pop
sbb
add
movsb
or
add
jno
lea
jl
icebp
xor
add
ffree
mov
mov
xchg
cmp
push
add
loopne
enter
pop
cmpsb
jo
inc
dec
enter
dec
pop
dec
add
test
push
mov
jo
popl
adc
or
fwait
aas
mov
and
add
mov
cmc
daa
xchg
xor
adc
rclb
mov
push
xor
add
mov
xchg
cmp
sar
cmp
fists
nop
enter
fidivl
add
divb
imul
cli
mov
popa
add
sub
mov
add
xchg
add
and
fcompl
outsb
in
cmpsb
and
insb
rclb
add
into
scas
cmp
pop
mov
cmpsl
or
add
sub
test
push
mov
add
xor
xor
add
lods
roll
ficompl
cltd
sub
fsubl
mov
pop
divl
lods
xchg
jge
daa
pop
add
pop
cmp
push
xchg
inc
fwait
dec
cmpb
and
in
sar
popa
lea
mov
enter
test
mov
push
or
lcall
mov
add
dec
add
mov
les
rcrl
pop
roll
cmc
push
cmp
popf
inc
ret
add
daa
fmul
push
sbbb
cmp
inc
bound
loop
xchg
out
add
subl
mov
jne
cmp
dec
pop
sahf
fs
je
or
push
adc
xor
add
dec
inc
in
pop
cmp
mov
push
add
adc
push
mov
adc
add
fdivr
pop
fdivrs
add
inc
dec
xor
gs
jp
ss
dec
cmp
sbbb
dec
insl
gs
jbe
imul
sbb
arpl
xor
inc
push
inc
dec
outsb
pop
cmc
add
add
inc
outsl
jbe
arpl
dec
cmp
push
push
pop
idivl
insl
add
outsl
jo
push
xor
xor
dec
jbe
out
jp
cmovns
dec
mov
cmc
bound
notl
push
dec
pusha
push
xor
xchg
push
gs
sbb
insb
cmp
dec
aam
ret
push
inc
xor
dec
jb
cmpl
out
inc
pop
dec
jo
push
dec
cmp
sbb
xor
aaa
inc
call
xor
popa
outsb
fiadds
insb
dec
inc
push
push
jp
dec
dec
xor
or
and
push
pop
jne
jns
xor
inc
inc
cmp
cmp
daa
outsl
fs
add
push
imul
push
jb
dec
inc
cwtl
adc
sbb
xor
push
or
lock
or
dec
dec
lret
or
mov
arpl
cmp
div
xor
dec
push
lds
cmp
pushf
dec
dec
dec
iret
mov
dec
jno
mov
arpl
xor
orl
xor
inc
outsb
js
xor
aad
in
out
mov
ss
rclb
pop
pop
mov
sub
lock
inc
xchg
sub
sbb
and
sub
sub
push
jmp
nop
push
jo
jae
pop
clc
dec
cld
pop
mov
hlt
insb
clc
addr16
cmp
mov
push
xchg
cli
inc
xchg
dec
mov
mov
xor
mov
inc
adc
cmp
popa
orl
mov
fiadds
inc
or
cmp
xor
sub
and
sbb
adc
or
add
add
cld
or
mov
lcall
aam
xor
jne
movsl
or
inc
inc
test
and
test
jecxz
fs
or
adc
adc
pushf
fildll
inc
cmc
xor
fs
or
fs
adc
mov
outsl
mov
adc
xchg
fsubr
enter
sbb
ja
xchg
xchg
int
daa
jb
mov
fiaddl
inc
inc
outsb
loop
xlat
inc
xchg
lock
inc
shlb
les
sub
insb
clc
cmp
push
push
inc
imul
inc
je,pn
je
xchg
inc
aam
cmpsl
cmp
in
cmp
jb
jl
sub
adc
inc
ss
xchg
cs
in
notb
pop
dec
adc
aam
movsl
jo
xchg
adc
test
imul
xchg
imul
outsl
push
test
cld
add
dec
cli
test
mov
repnz
sub
fs
cmp
or
sub
jnp
mov
jecxz
pop
cmp
lods
dec
xor
nop
shrb
nop
insb
dec
popa
fsts
pushf
sbb
inc
dec
in
or
inc
sarb
leave
inc
jb
dec
enter
mov
hlt
xchg
fs
jne
ja
arpl
popa
insb
mov
jne
int3
movsl
xchg
sub
dec
pop
cmp
xor
sub
cmp
mov
sub
loopne
cs
jo
adc
les
in
cmpsl
scas
mov
cmc
shrb
arpl
out
jle
jno
inc
mov
pop
das
pop
push
sti
je
fwait
dec
pop
cld
xor
mov
sub
mov
sub
movsl
test
sahf
adc
mov
mov
inc
adc
fnsave
inc
push
fildll
push
dec
jns
inc
sbb
inc
cs
sub
popa
stc
mov
mov
hlt
mov
xor
mov
les
pop
xor
xor
push
inc
or
push
jge
mov
cmp
add
lcall
sub
mov
xor
ljmp
inc
or
movsb
inc
xchg
push
pop
and
mov
dec
scas
lret
outsb
fsubrp
fcmovnu
xor
cmpsl
lods
shrb
jae
lcall
sahf
les
mov
push
push
in
xor
or
pop
gs
in
push
push
jns
xlat
sub
in
leave
or
add
mov
inc
sbb
xlat
mov
inc
xchg
or
fiaddl
mov
fildll
mov
lret
aam
hlt
insl
and
sbb
push
xor
rcl
xchg
mov
into
cmp
mov
or
js
adc
aad
jmp
dec
adc
push
dec
rcrl
mov
add
movsl
subl
pop
xchg
mov
mov
add
fs
xchg
push
push
sbb
cmp
sub
das
divb
sub
inc
pusha
pop
call
mov
andl
mov
sub
or
push
mov
aad
cld
pop
shll
jne
adc
insb
roll
dec
loop
fwait
lock
push
scas
bound
push
add
movsb
rcl
xor
mov
mov
mov
mov
and
adc
add
and
cmpsl
pop
lea
mov
adcl
mov
inc
outsb
jb
nop
xchg
dec
ds
push
dec
and
loop
dec
sub
cli
inc
scas
call
pop
mov
mov
daa
xor
pop
cld
and
lea
nop
scas
xchg
gs
mov
xchg
sub
cmp
outsl
js
mov
idivb
mov
jo
loopne
leave
xor
adc
dec
xor
outsl
sarb
pop
aam
push
jns
push
lahf
adc
mov
dec
daa
data16
fidivl
mov
dec
aam
push
jb
jbe
push
mov
pushf
stc
dec
das
jns
xor
cs
fs
imul
ret
inc
sbb
inc
xchg
sub
fcoml
sub
cmp
aad
cmp
leave
insl
imul
insl
pop
sub
mov
test
adc
loope
aam
in
sahf
inc
lods
jl
imul
push
cli
movsl
sub
sarl
enter
inc
mov
adc
outsl
popa
call
loop
fstpt
push
rcrb
cld
fisttpl
out
imul
and
imul
rcrb
scas
fs
push
push
cmp
sub
jmp
repz
xchg
lahf
test
dec
arpl
or
inc
and
pop
inc
dec
push
push
dec
cmc
ret
sub
lods
movsb
add
jns
mov
sub
jg
sub
sbb
sbb
push
std
mov
sub
pop
test
je
lods
and
aaa
mov
mov
pop
inc
pop
push
dec
dec
dec
inc
ljmp
or
push
pop
push
enter
push
shl
push
and
push
dec
pop
mov
imulb
jb
dec
cmp
in
dec
inc
lods
or
sub
and
adc
inc
jmp
mov
stos
mov
je
mov
dec
sti
icebp
dec
xchg
push
jp
aas
push
push
stos
inc
sbb
inc
inc
dec
push
push
jbe
enter
inc
repz
xor
cmpsl
das
rcrb
sub
clc
inc
bound
xor
mov
cmc
insb
xchg
sar
or
cmp
adc
mov
cmp
and
sbb
sahf
fldcw
movsl
push
cmp
out
xchg
pushf
or
mov
cs
insb
test
jmp
jbe
xor
outsb
sbb
xchg
and
add
adc
inc
les
cmpl
sub
pop
hlt
nop
sbb
jae
ret
jno
popf
outsl
sub
nop
roll
push
sbb
mov
push
or
add
dec
sbb
xor
inc
dec
dec
jns
sbb
loop
mov
rolb
stc
imul
fldl
inc
dec
cltd
and
push
dec
jecxz
lea
xor
ret
lock
jae
arpl
xor
xchg
sbb
sub
sbb
sub
xor
sbb
xchg
jnp
lods
je
fimuls
mov
push
test
sub
sbb
pop
dec
sub
add
or
enter
jbe
rorb
xor
cs
jne
xchg
adc
movsl
sbb
push
popa
dec
insl
sbb
adc
add
js
inc
jle
call
insl
outsl
mov
push
add
and
push
lret
cwtl
and
inc
adc
cmp
jg
imul
arpl
push
lahf
dec
mov
and
cmp
push
inc
dec
cs
mov
inc
imul
std
mov
data16
cmp
xchg
faddl
mov
decl
orl
pop
xor
xchg
ja
dec
cmp
mov
or
dec
es
loopne
es
or
mov
push
adc
pop
mov
or
or
mov
adc
and
dec
rclb
add
faddl
cmpsl
push
out
dec
mov
xchg
andb
inc
je
mov
and
dec
pop
xchg
push
and
cmp
sbb
xchg
or
clc
testb
xor
loopne
fsubs
dec
les
mov
mov
lods
cltd
adc
nop
dec
mov
push
dec
and
dec
inc
xchg
xor
sub
and
mov
or
add
and
cld
cmc
inc
clc
hlt
mov
adc
and
dec
loopne
fsubs
rolb
mov
dec
test
mov
and
js
jo
push
push
dec
dec
xchg
inc
and
inc
sub
mov
adc
adc
xchg
add
cld
hlt
jae
or
xchg
fcoms
xor
adc
and
mov
nop
adc
and
inc
subb
test
push
xchg
or
inc
cmp
mov
adc
and
sbb
adc
or
add
sub
repz
dec
nop
pusha
xchg
xor
xchg
popa
mov
test
insl
mov
and
push
aaa
xlat
lret
push
bound
imul
lods
mov
add
jo
js
dec
imul
and
jbe
inc
repz
aas
and
dec
daa
arpl
mov
mov
mov
fnsave
pusha
push
outsl
adc
mov
loope
jne
out
push
cmp
es
adc
adc
lret
ljmp
or
les
mov
mov
xchg
sbb
shll
arpl
adc
call
push
in
sub
sbb
sar
mov
inc
mov
incl
fstps
arpl
jnp
scas
sub
mov
or
pop
dec
jnp
jp
pushw
cmp
xchg
nop
push
fwait
jmp
inc
bound
arpl
sbb
jne
or
cmp
imul
xchg
nop
adc
push
push
dec
sbb
gs
test
inc
cmp
pop
or
adc
int3
push
sub
fbstp
cmp
xchg
clc
and
lret
or
imul
fs
insl
mov
imul
mov
int3
mov
cmp
adc
mov
gs
ja
jle
mov
insb
sbb
sub
mov
and
jne
xor
jno
dec
push
aad
xchg
nop
push
insl
js
shl
and
outsl
aas
mul
push
and
outsb
adc
fnstenv
sub
in
xchg
out
fnstenv
mov
hlt
or
or
cmp
addr16
or
or
jo
fs
les
scas
aad
dec
cld
movsb
fs
cmp
inc
and
xor
sbb
hlt
mov
adc
in
dec
mov
rorl
push
mov
mov
add
xor
pop
insl
mov
inc
mov
pop
cmp
loopne
adc
test
rcrl
push
outsl
cmp
xchg
int3
or
and
inc
jns
mov
outsl
imul
cmp
inc
sahf
inc
inc
cs
insb
pop
pusha
pop
push
inc
inc
cmp
pop
in
sbb
popf
je
jl
cmp
pop
sub
test
sbb
into
xchg
fucomip
jne
cmp
inc
popa
xchg
mov
push
das
inc
jg
pop
imul
cmp
sub
mov
push
test
cmc
lcall
ja
in
and
dec
dec
inc
dec
sbb
or
insl
xor
fnstcw
js
rorb
pushf
pop
dec
scas
sbb
xor
icebp
inc
push
dec
dec
stos
push
adc
fs
negl
je
inc
les
ja
jb
push
icebp
enter
in
inc
push
cs
sub
jmp
out
or
mov
les
mov
shlb
inc
inc
pop
cltd
adc
jge
xor
inc
push
mov
je
xor
dec
mov
pop
xor
dec
call
add
push
push
jb
out
sub
imul
mov
das
je
mov
push
divb
test
or
cmp
stos
push
das
sub
shl
sti
mov
push
mov
call
dec
adc
shrb
inc
cmp
jge
jge
mov
push
cmp
mov
push
xchg
roll
out
popf
aam
dec
std
sub
test
jp
mov
hlt
and
xor
sbb
out
int
add
stos
mov
xor
sbb
fs
sub
ds
imul
pop
push
clc
pop
ds
fmul
jmp
lcall
sub
bound
leave
and
dec
ja,pn
shlb
push
in
mov
mov
into
fs
popf
push
aas
movsl
cmpsb
data16
cmp
mov
data16
in
xchg
inc
cmp
cmc
xchg
divb
jns
in
stos
sub
pusha
cmp
dec
inc
and
jle
loopne
lds
mov
pusha
dec
push
inc
mov
mov
scas
jbe
cmp
jb
fimull
inc
xchg
popa
cwtl
jmp
gs
cmc
adc
lds
and
jl
sub
cmp
callw
jecxz
shl
js
push
sub
inc
dec
out
fsubs
movsl
jp
push
xor
push
lcall
test
cmpsl
jg
ss
push
loop
xchg
mov
pop
shll
fs
je
scas
mov
xchg
push
inc
cmp
scas
fisubrl
jb
ja,pn
movsb
cli
pop
stos
mov
test
dec
mov
ss
lret
fs
and
dec
outsl
lods
jae
and
nop
and
mov
je
and
repnz
popa
dec
ja
sub
arpl
movsb
in
jg
inc
enter
pop
jno
adc
dec
outsl
gs
std
pop
popf
cmp
and
cmpsb
imull
dec
les
loop
jo
inc
cs
lret
fdivrs
jbe
jo
push
push
adc
js
push
cli
adc
loope
inc
dec
gs
mov
and
out
in
jne
das
jle
dec
test
pop
jno
push
inc
js
push
std
xchg
cs
dec
xchg
sub
mov
rcrb
ljmp
cmp
mov
dec
stos
call
shrb
dec
mov
rolb
int
das
fnstcw
sbb
ss
pushf
imul
pop
mov
in
je
movsl
mov
js
push
dec
push
dec
push
outsb
push
mov
call
test
imul
sub
jp
imul
lret
cli
mov
rolb
lods
sub
pop
dec
popf
and
jno
cmp
sarb
and
aad
and
nop
and
jns
jo
ror
jae
test
mov
in
loopne
mov
mov
or
cmp
adc
cmp
scas
ss
jbe
cli
xchg
fisubrs
or
jge
or
sub
cld
add
fcomp
sbb
ss
fildl
cmp
mov
mov
cmp
cld
fldl
cs
lcall
test
add
ret
dec
pop
dec
mov
xchg
ficompl
xor
dec
rcll
xor
xlat
out
out
insb
lahf
pop
xlat
repnz
xchg
pop
mov
dec
sub
add
shr
shlb
ljmp
sub
push
cmp
xor
sub
pop
sub
rcrb
jne
js
cmp
sub
std
cs
inc
xchg
sub
sahf
xor
mov
jae
fs
pop
insb
dec
nop
insw
jae
xchg
into
lea
adc
mov
or
arpl
push
std
push
sub
in
pop
lods
sbb
cmp
and
dec
stc
dec
das
and
ja
stc
rcl
sbb
adc
sub
sub
nop
and
dec
in
cs
xchg
cmp
data16
dec
out
ds
leave
pop
mov
xor
shl
cld
incl
pop
inc
imul
dec
fcompl
inc
inc
push
inc
xchg
adc
out
insl
and
adc
test
les
xor
scas
cmpsb
lds
int3
dec
bound
push
push
sti
lea
lahf
pusha
and
mov
jne
pop
push
imul
and
leave
pop
push
pop
adc
leave
inc
sbb
fnstcw
lods
xor
sub
sbb
std
xor
shrb
xchg
lret
mov
mov
dec
imul
stos
mov
pop
adc
jle
addr16
xor
inc
mov
mov
and
jp
jl
mov
mov
mov
rorb
out
je
popa
xchg
pushf
mov
repz
cmp
pop
fidivs
je
mov
movsb
fs
sar
ret
mov
push
pop
dec
cmpsl
pop
fidivrl
xor
pop
imul
leave
jne
pop
int
cmp
xlat
sub
or
inc
inc
dec
or
push
mov
xchg
clc
cmp
sub
inc
fnstsw
sub
cmpsl
imul
fcompl
les
jge
xchg
cmpsl
add
dec
repnz
inc
aaa
and
fistl
xor
mov
sub
add
mov
dec
fistpl
rcl
roll
cmp
stos
xor
sbb
pop
scas
push
sub
ficompl
jge
dec
dec
and
mov
push
aam
dec
pop
daa
test
dec
lahf
fcomps
fwait
xor
xor
jnp
lahf
fmulp
call
outsl
jo
mov
outsb
lahf
sbb
or
mov
mov
dec
loop
shrb
imul
inc
mov
xchg
and
sub
mov
in
lods
cli
inc
xor
xchg
xchg
clc
mov
dec
xlat
and
mov
pop
shll
cmp
inc
xor
xchg
sub
adc
jle
das
dec
xor
jo
push
data16
push
lds
mov
dec
mov
xchg
stos
cwtl
sbb
jo
movsb
mov
std
or
jnp
inc
and
mov
sub
mov
adc
or
bound
jns
stos
cmpsl
push
pop
imul
dec
loop
xchg
cltd
aam
fwait
adcl
xor
add
pop
inc
cmp
daa
dec
jae
jmp
test
cmp
sbb
nop
xor
jle
xor
fwait
rcrb
xlat
movsl
int3
xlat
ret
in
xorl
test
shl
cli
std
les
fsts
dec
or
sub
imul
or
sbb
and
mov
jmp
sbb
cmp
pop
push
add
loop
cwtl
sbb
cmpsb
or
dec
mov
jo
jb
mov
xor
xor
or
adc
dec
testl
and
arpl
imul
enter
jbe
das
push
jne
data16
inc
mov
imul
fdivs
js
std
adc
fldenv
sbb
push
or
push
popf
mov
cmp
dec
xchg
add
or
adc
mov
push
xchg
or
xor
add
subl
inc
xor
xor
cmp
pop
mov
inc
test
dec
dec
cmpsl
adc
mov
cwtl
nop
lods
sbb
jp
xor
cld
jl
fisubl
sbb
mov
test
movsb
sub
sbb
pop
mov
mov
xor
cmp
pop
stc
enter
sbb
pop
iret
idivl
lret
cmp
jmp
repnz
jp
scas
sbbb
imul
inc
or
aam
fisubl
loop
loop
out
aad
sub
sub
and
fisttps
lock
cmp
adc
cmp
sub
insl
xchg
inc
jle
lock
je
cmpsl
adc
pop
lret
mov
jl
xor
add
inc
xchg
sbb
inc
addl
negb
mov
adc
mov
xchg
scas
or
jbe
cltd
test
cmp
or
shrb
inc
and
jo
das
or
push
lods
enter
jecxz
add
xor
push
test
cmp
inc
addr16
or
mov
adc
sbb
insl
ja
sub
lcall
lcall
enter
test
or
inc
das
xorb
bound
les
adc
negb
loope
or
imul
in
fldenv
mov
in
jae
inc
in
sub
sbb
mov
mov
arpl
insb
sub
dec
mov
mov
cmp
adc
inc
movsb
js
mov
push
dec
inc
pop
ja
dec
int
lods
pop
out
stos
loopne
fs
cmp
and
xchg
ret
adc
cmp
cli
mov
cmp
test
fs
or
dec
or
dec
dec
push
sub
ret
lock
or
frstor
or
std
mov
push
or
adc
stc
rolb
mov
xchg
or
jmp
les
mov
sbb
sbb
mov
xchg
inc
movsb
in
int3
adc
inc
fwait
push
and
stos
jl
sti
into
xor
xor
or
sbb
sbb
or
jnp
sbb
or
pop
je
push
and
mov
push
enter
js
or
test
or
push
and
call
fstl
out
in
insb
or
inc
dec
and
push
push
data16
fcompl
scas
xchg
enter
outsb
scas
sbb
push
sbb
inc
inc
shlb
pop
inc
sbb
mov
cmp
lock
xchg
mov
sub
mov
in
lcall
loope
jo
xor
adc
jl
mov
loope
shll
and
xchg
imul
xor
cwtl
or
enter
xor
adc
adc
xor
je
and
popa
imul
loop
stos
and
adc
sub
add
push
or
add
hlt
mov
add
inc
cmp
popf
sbbb
js
inc
and
mov
jg
js
ss
lods
jbe
gs
sahf
lret
jnp
cli
xor
add
inc
push
xchg
and
ret
mov
dec
mov
cmp
xor
add
dec
mov
and
xor
test
ljmp
xchg
inc
adc
or
imul
jl
aam
pop
push
add
xor
mov
xor
loopne,pt
adc
sbb
sbb
pop
xor
lret
popf
and
mov
loope
ds
jg
push
inc
or
pop
mov
test
sbb
pop
and
xchg
push
lahf
pop
jmp
and
sbb
mov
mov
jle
cli
sub
fistpll
and
lock
xchg
sub
sti
inc
pop
sub
add
scas
imul
mov
and
scas
cmp
clc
mov
xchg
jae
fiaddl
pushf
in
xor
scas
int
push
cmp
push
push
nop
testl
sub
cs
pop
clc
add
ret
lock
shrl
ljmp
adc
and
dec
sub
movsb
pop
in
fbld
mov
test
mov
sbb
xchg
mov
mov
pop
dec
popf
inc
mov
gs
jno
sub
jl
xchg
int3
test
jb
or
or
xor
fidivrl
ss
sub
popf
rcll
jp
add
xor
dec
test
adc
jne
flds
bound
sub
xchg
pusha
add
sub
mov
adc
or
add
cld
lea
inc
clc
adc
adc
enter
aam
int3
inc
les
movsb
dec
pushf
xchg
xchg
and
adc
pop
dec
push
xchg
dec
and
cmp
sbb
adc
or
add
cld
mov
xchg
or
and
inc
mov
adc
and
dec
mov
test
pushf
inc
xchg
and
dec
jl
je
insb
inc
push
dec
and
dec
cmp
xor
sub
and
mov
adc
cld
mov
and
loopne
aam
mov
rol
cltd
adc
and
dec
xchg
xchg
mov
test
mov
pop
and
dec
dec
xchg
cmp
xor
mov
adc
or
and
clc
mov
or
mov
adc
and
dec
rclb
cwtl
mov
dec
je
insb
and
push
mov
inc
and
dec
xor
adc
mov
lock
call
xchg
enter
mov
mov
adcb
pop
mov
and
dec
cmp
xor
sub
and
or
or
adc
clc
mov
and
in
mov
adc
mov
and
dec
je
push
dec
mov
cmp
dec
and
sbb
adc
mov
xchg
in
in
mov
adc
enter
les
mov
movsb
adc
jl
je
push
dec
and
dec
xor
sub
and
mov
pop
or
or
and
inc
rol
mov
movsb
xchg
pushf
and
adc
dec
pusha
xchg
pop
and
inc
mov
adc
and
dec
sbb
adc
or
add
outsb
test
xchg
js
in
and
pop
enter
das
xchg
jl
in
or
dec
je
insb
and
push
mov
cmp
xor
sub
and
sbb
mov
test
loopne
aam
int3
and
inc
mov
movsb
and
dec
xchg
xchg
mov
addb
push
dec
inc
xchg
cmp
sub
and
mov
or
add
hlt
orl
xchg
loopne
fadds
mov
adc
xchg
and
adc
push
dec
dec
xchg
inc
and
inc
xor
sbb
adc
dec
add
cld
adcb
and
inc
mov
adc
mov
orb
dec
pusha
xchg
pop
and
cmp
sbb
xchg
or
hlt
addl
enter
mov
xchg
and
dec
test
push
dec
and
dec
xor
sub
and
mov
cld
addb
and
dec
loopne
fsubs
rolb
mov
dec
cwtl
xchg
nop
and
jo
push
inc
push
dec
mov
and
dec
sub
or
and
jg
icebp
or
dec
in
fsubl
aam
int3
rorb
dec
pushf
xchg
xchg
and
adc
dec
push
xchg
dec
and
xor
mov
adc
and
pop
and
hlt
jle
call
enter
mov
movsb
and
adc
dec
fs
pop
and
cmp
xor
sub
and
sbb
adc
or
adc
jge
in
and
dec
fcoms
sarb
mov
and
adc
dec
push
xchg
dec
and
xor
sub
and
dec
or
cld
jl
hlt
and
inc
in
mov
adc
and
dec
mov
inc
mov
mov
dec
insb
xchg
pusha
and
push
dec
mov
cmp
dec
and
sbb
adc
or
mov
jnp
lock
and
dec
fcoms
rorb
dec
cwtl
xchg
xchg
and
jo
push
xchg
dec
and
cmp
mov
adc
and
dec
or
in
mov
adc
and
dec
les
movsb
pushf
mov
jo
push
dec
mov
and
dec
sub
and
and
mov
cld
jns
hlt
and
dec
loopne
fsubs
rolb
mov
xchg
xchg
mov
addb
push
dec
push
xchg
dec
and
xor
sbb
adc
or
add
cld
js
shrb
in
fcoml
shlb
dec
rclb
cwtl
mov
dec
je
insb
and
push
mov
inc
and
dec
sub
or
and
ja
lock
loopne
fsubs
int3
inc
les
xchg
dec
mov
push
dec
and
dec
cmp
and
or
or
and
inc
mov
adc
and
dec
mov
lods
and
mov
jl
je
insb
xchg
and
dec
mov
adc
and
dec
sbb
adc
or
add
outsb
jne
xchg
js
in
and
or
xchg
mov
movsb
mov
adcb
pop
mov
and
dec
xor
sub
and
sbb
mov
add
cld
je
lock
call
inc
int3
mov
and
dec
pushf
xchg
xchg
and
insb
dec
pusha
xchg
pop
and
xor
adc
or
or
and
inc
int3
les
lods
dec
mov
inc
mov
and
dec
pop
xchg
push
and
inc
cmp
and
xchg
adc
add
clc
jb
in
in
fcoml
aam
int3
dec
les
lods
movsb
mov
jl
je
insb
inc
fs
mov
and
dec
cmp
xor
xor
mov
adc
and
inc
cld
jno
hlt
xchg
in
and
inc
mov
cwtl
xchg
mov
jl
jo
mov
dec
and
dec
cmp
adc
and
jo
mov
xchg
mov
pushf
mov
dec
insb
xchg
pusha
and
cmp
xor
and
dec
or
inc
hlt
inc
outsl
call
and
dec
mov
inc
xchg
mov
push
and
xor
sbb
or
adc
hlt
outsb
and
inc
aam
mov
cwtl
xchg
mov
jl
insb
pusha
mov
inc
and
dec
and
sbb
adc
ret
insl
add
dec
call
inc
int3
rorb
dec
pushf
xchg
xchg
and
adc
dec
pop
xchg
push
and
xor
or
or
xchg
in
and
inc
fmul
mov
adc
pop
inc
or
and
fs
dec
push
xchg
dec
and
xor
mov
sbb
adc
or
das
adc
dec
enter
mov
test
mov
je
insb
and
push
mov
and
dec
xor
sub
and
mov
cld
push
hlt
and
dec
in
fsubs
rolb
mov
dec
mov
inc
mov
adc
dec
pop
xchg
push
and
xor
sbb
mov
fsts
les
lods
movsb
mov
dec
jl
jo
push
dec
adc
dec
xor
sub
sbb
adc
mov
cld
push
dec
fcoml
mov
movsb
and
dec
nop
xchg
test
jl
je
mov
and
dec
inc
xchg
cmp
sub
and
or
add
clc
addr16
dec
in
fsubs
int3
inc
sarb
cwtl
dec
nop
xchg
mov
addb
pusha
adc
dec
inc
xchg
cmp
xor
mov
adc
cld
data16
mov
or
inc
aam
mov
adc
xchg
pushf
and
jo
fs
dec
push
xchg
inc
and
xor
mov
sbb
adc
or
add
cld
gs
inc
call
int3
and
dec
mov
inc
mov
mov
dec
js
jo
push
dec
adc
cmp
xchg
sub
sbb
adc
mov
or
xchg
loopne
aam
ror
mov
adc
nop
and
adc
dec
cmp
xor
and
sbb
test
or
xchg
in
fadds
mov
adc
and
dec
mov
test
mov
nop
adc
je
push
inc
adc
and
dec
and
sbb
adc
insb
jmp
adc
and
dec
rclb
cwtl
mov
dec
je
insb
and
pop
push
mov
inc
and
dec
sub
add
insb
popa
leave
or
mov
adc
and
dec
lods
xchg
mov
js
push
dec
cmp
sub
sbb
adc
cld
pusha
xor
dec
fcoms
sarb
cltd
adc
and
dec
adcb
mov
push
and
dec
inc
xchg
cmp
xor
mov
adc
add
cld
pop
stc
enter
call
rorb
mov
lods
xchg
test
pushf
inc
xchg
mov
je
push
aaa
cwtl
pop
stc
enter
and
dec
and
sbb
adc
or
mov
pop
fyl2xp1
or
adc
and
dec
fcoml
sarb
dec
cwtl
cmpsl
imul
and
dec
push
inc
push
dec
mov
xor
sub
and
or
mov
pop
sub
dec
aam
int3
and
inc
mov
mov
xchg
xchg
mov
jl
jo
mov
push
and
dec
inc
xchg
xor
sub
mov
pop
or
and
inc
mov
adc
and
dec
lods
xchg
movsb
and
adc
jo
push
inc
push
dec
mov
xor
sub
and
sbb
adc
or
mov
pop
fldl2t
or
adc
and
dec
enter
mov
cwtl
adc
xchg
jl
jo
fs
mov
and
dec
cmp
adc
mov
xchg
in
faddl
mov
adc
pushf
and
js
jo
insb
dec
push
inc
dec
inc
mov
xor
sub
xchg
sbb
adc
or
and
pop
add
dec
call
inc
ror
mov
movsb
xchg
pushf
and
adc
insb
dec
fs
pop
and
inc
mov
xor
sub
and
sbb
adc
mov
pop
xor
dec
fcoml
mov
movsb
and
dec
nop
xchg
mov
addb
push
and
dec
cmp
xor
sub
and
sbb
adc
or
add
outsb
push
icebp
xchg
fs
dec
loopne
fsubs
rolb
mov
pushf
test
mov
xchg
jb
data16
adc
inc
pop
push
mov
and
dec
xor
sub
and
and
mov
or
and
inc
mov
adc
and
dec
lods
xchg
movsb
and
jl
je
jo
push
repnz
cwtl
push
adc
inc
lods
mov
cmp
xor
or
and
mov
or
adc
hlt
push
mov
or
inc
mov
adc
adc
es
movsb
adc
cwtl
dec
nop
xchg
test
jl
jo
mov
push
and
dec
inc
xchg
cmp
xor
sub
mov
adc
or
hlt
push
stc
or
mov
adc
and
dec
lods
xchg
mov
test
insb
dec
fs
pop
jg
dec
adc
cmp
xchg
sub
sbb
adc
cld
push
fstp
and
or
xchg
fsubs
rolb
mov
nop
xchg
mov
jl
je
mov
and
dec
dec
xchg
inc
and
xor
mov
adc
sbb
sub
inc
clc
outsb
push
icebp
xchg
fs
dec
rclb
mov
mov
dec
mov
jl
adc
jo
push
int3
adc
push
mov
inc
and
dec
xor
sbb
mov
add
cld
push
add
dec
in
xchg
in
faddl
mov
adc
xchg
mov
mov
jo
push
inc
push
dec
mov
cmp
dec
and
sbb
adc
or
mov
js
mov
clc
push
sbb
or
adc
and
dec
aam
enter
mov
mulb
movsb
or
dec
test
push
clc
xchg
dec
and
cmp
mov
adc
and
dec
adc
cld
dec
inc
hlt
in
mov
adc
and
dec
les
test
mov
push
movsb
cmp
int3
adc
jo
adc
dec
dec
mov
mov
inc
inc
dec
cmp
xor
sub
sbb
xchg
or
add
cld
dec
inc
hlt
in
mov
adc
and
dec
enter
mov
call
test
testb
adc
mov
mov
xlat
mov
xor
pusha
and
pop
inc
push
dec
mov
and
or
sbb
adc
or
clc
dec
flds
js
cld
fmull
mov
aam
adc
or
mov
lret
hlt
ljmp
xor
or
es
inc
pushf
nop
mov
sbb
je
insb
xchg
push
inc
pop
dec
push
xchg
dec
pop
xor
inc
adc
and
xor
mov
adc
and
pop
and
clc
dec
inc
lock
and
dec
int3
xchg
les
mov
movsb
adc
andb
inc
jo
mov
push
and
dec
cmp
xor
sub
mov
adc
adc
or
dec
add
and
dec
fcoml
les
stc
adc
mov
mov
jo
insb
xchg
pusha
and
add
adc
inc
xchg
cmp
xor
sub
mov
adc
or
mov
call
hlt
mov
outsb
cltd
adc
xchg
or
and
inc
int3
les
das
xchg
js
in
and
pop
lret
dec
data16
or
mov
pop
and
dec
dec
xchg
inc
and
inc
sub
mov
adc
and
push
movsl
in
adc
clc
dec
cmp
dec
mov
xchg
or
sub
les
inc
mov
cwtl
and
dec
mov
jo
mov
and
dec
inc
xchg
cmp
xor
lret
pushf
mov
or
cld
dec
inc
lock
aam
enter
mov
test
pushf
inc
nop
test
fs
pop
xchg
dec
and
mov
xchg
or
and
or
mov
inc
fld
or
adc
and
dec
rclb
nop
mov
pusha
xchg
push
inc
test
adc
or
mov
sbb
pop
and
hlt
inc
mov
xchg
or
and
inc
mov
xchg
and
dec
jl
mov
or
aad
lock
sub
sbb
or
xor
inc
jl
sti
push
pop
pop
dec
mov
sbb
popa
sub
dec
or
idivl
fbstp
xor
in
into
fwait
sbb
cli
mov
mov
mov
or
dec
idivl
lods
cmovb
inc
push
push
stc
dec
bound
sub
xor
cmp
inc
jns
fbstp
inc
xchg
js
mov
aaa
sbb
dec
out
mov
inc
push
js
nop
or
imul
adc
push
xor
ss
inc
icebp
xchg
jae
rcll
push
jns
into
jne
scas
sbb
pusha
sbb
sub
pushf
push
xor
jo
xor
jne
xchg
inc
addr16
lds
pushf
jb
insb
jo
push
jns
lcall
xor
mov
loope
outsl
jae
jg
sbb
xchg
sbb
movsb
lock
insb
imul
jmp
cwtl
sahf
jmp
movsb
sub
sti
stc
imul
ret
jge
out
je
or
dec
fsubr
mov
and
insl
mull
pushf
nop
mov
push
adc
arpl
inc
dec
cmpsl
std
xor
inc
cmpsb
adc
shlb
inc
or
jo
push
lret
mov
jp
mov
inc
clc
imul
je
xor
je
sbb
adc
mov
jnp
and
jns
inc
hlt
gs
imul
cs
jge
sbb
mov
in
outsb
sbb
xchg
jns
cmp
je
jo
inc
pop
fwait
ret
dec
adc
ja
lcall
jbe
sub
dec
addr16
jnp
bound
pop
fisttpll
xor
and
test
xorb
insl
push
xchg
mov
ljmp
ljmp
lods
inc
xor
cmpsl
cmp
jb
mov
insb
sub
repnz
repz
cmpsb
sahf
rorb
cmp
ds
insb
cmpsl
hlt
adc
stc
xchg
shrl
or
jg
stos
dec
into
rol
jbe
push
icebp
arpl
push
sub
les
jno
push
je
cmpl
and
add
xlat
lahf
lahf
sbb
in
or
jne
sbb
ja
in
or
add
inc
arpl
sbb
push
sub
aam
cmp
adc
pop
mov
push
dec
inc
cmpsb
popf
lret
mov
xchg
jl
stos
sub
jbe
or
sbb
dec
xor
inc
into
inc
pop
movsl
push
lods
call
nop
and
inc
lcall
mull
dec
insl
sbb
mov
mov
xor
adc
out
scas
fdivl
sub
out
adc
dec
xor
outsl
testl
sub
in
dec
dec
ja
adc
rcrl
add
dec
call
shrl
push
movsb
lret
lcall
pop
jo
cmpsl
mov
mov
mov
dec
jo
data16
mov
mov
lret
xchg
push
aaa
xor
mulb
sbb
pop
cwtl
or
xor
xchg
sub
movsb
mov
dec
xor
stos
lock
jp
sub
dec
or
jbe
cmp
sub
call
xchg
adc
adc
xchg
inc
or
lret
clc
jecxz
or
cmp
or
loope
scas
pop
sbb
hlt
mov
adc
adc
and
adc
or
push
fs
decb
sub
data16
arpl
imul
insb
or
inc
jne
insb
sub
ja
insb
push
xchg
adc
cmpsb
dec
or
js
sbb
cmp
shrb
ds
aam
xchg
sbb
cmp
outsl
in
fs
clc
cs
mov
mov
insb
inc
jb
sub
mov
aad
in
mov
add
mov
mov
in
mov
loopne
mov
mov
adc
cmp
fs
orb
adc
insb
dec
outsb
dec
xchg
mov
gs
xchg
mov
xchg
jl
gs
mov
pop
jo
xchg
pusha
xchg
pop
leave
gs
and
push
xchg
adc
lret
xor
mov
xchg
fldcw
sub
mov
and
sbb
in
push
and
insb
test
imul
adc
lret
adc
ret
or
dec
sub
sub
cmpsb
mov
pushf
rcrb
cltd
lock
movsb
cmpsb
faddl
aaa
lods
sub
mov
xor
test
jbe
mov
jl
push
adc
or
xor
pusha
mov
lods
daa
divb
mov
xor
dec
andb
call
sbb
inc
outsl
xor
dec
push
inc
and
cmp
js
shlb
cmp
outsl
das
loopne
mov
sub
push
xor
jecxz
xchg
lods
jne
sbb
int3
lods
pop
in
insw
js
stos
xor
dec
jne
mov
lods
add
inc
inc
sub
loope
or
mul
inc
fmuls
jae
out
cmp
adcb
stos
jns
xor
xor
jo
jg
mov
xchg
push
cmp
imul
jno
jg
mov
sbb
sbb
mov
pop
lcall
stos
dec
es
insl
inc
mov
inc
add
add
gs
dec
and
pop
cwtl
sub
loope
fldcw
mov
sub
ss
jo
imul
gs
push
xchg
jb
cmp
xor
inc
cmc
dec
and
bound
shlb
pop
and
push
insb
jg
aaa
sub
sbb
je
inc
mov
sbb
jg
icebp
scas
fmul
dec
xchg
pop
mov
bound
pop
sub
xor
mov
fnstcw
jnp
and
xor
punpckhwd
insb
dec
fidivs
sub
dec
data16
clc
push
pop
imul
jne
and
mov
xor
les
and
pop
dec
cmp
int
pop
mov
jge
pop
push
jp
clc
lahf
test
imul
sub
imull
jl
inc
cli
dec
in
daa
sub
fs
jns
adc
lds
adc
push
fs
cmpsb
push
loop
jp
stos
pop
dec
cmp
jo
inc
and
mull
dec
or
xor
bound
push
sbb
pop
pop
and
lcall
mov
or
jae
in
push
and
fiadds
push
jo
adc
test
jae
std
insl
mov
or
insl
cld
push
adc
jo
inc
jae
jne
popa
pop
imul
sbb
data16
repz
push
sub
cmp
cmp
push
inc
dec
cmp
aam
inc
leave
mov
mov
sub
imul
inc
sub
or
popa
out
jg
adc
je
add
and
adc
fildll
mov
outsl
push
test
jae
repz
pusha
add
fs
jbe
repz
xchg
subb
lea
adc
cmp
push
xchg
bound
lea
sub
int
loop
mov
inc
je
pusha
jns
rorl
ja
mov
enter
imul
cmp
inc
or
inc
ret
dec
mov
shll
or
arpl
cs
jmp
popa
push
pop
and
jge
adc
inc
cmp
dec
mov
dec
mov
or
push
icebp
imul
or
data16
iret
stos
jb
gs
or
pop
push
inc
jp
pop
in
cmpsl
and
dec
imul
adc
sub
leave
inc
or
lods
rcll
addr16
or
hlt
test
push
rcll
pop
mov
jl
mov
jle
bound
popa
ficoms
mov
mov
aaa
je
imul
insl
xchg
mov
imulb
int
push
jns
out
xor
push
or
sub
int3
orl
inc
xchg
xor
add
push
lcall
jae
add
dec
cmpsl
push
mov
insl
xor
mov
inc
mov
and
and
push
fcomp
and
dec
push
imul
pop
sti
sub
in
jg
ret
inc
push
lret
pushl
jo
cmp
insb
xor
nop
jo
lret
sub
or
movsl
pushf
test
adc
subl
sbbb
sub
fcomps
jb
sbb
test
lret
dec
jo
pop
fs
add
dec
xor
data16
ljmp
dec
dec
xor
nop
call
shll
or
sub
jo
fsubrs
js
lret
insl
lcall
imul
fsubrl
sbb
icebp
pop
jo
arpl
cmpsb
push
jl
or
inc
out
fadd
gs
lods
adcb
and
sub
sbb
test
push
push
hlt
dec
jp
nop
movsb
dec
daa
mov
je
push
out
pop
stc
test
xor
pop
and
push
inc
lds
xchg
push
dec
icebp
popa
js
xor
add
pushf
scas
mov
push
xchg
fists
imul
pop
stos
sbb
adc
lock
xor
push
jo
push
push
xor
push
jo
push
inc
adc
shlb
push
jo
daa
ja
popf
dec
inc
pop
inc
out
fs
pushf
outsb
xchg
adc
sbb
or
jecxz
mov
pop
adc
sbb
jno
pop
inc
test
test
xor
push
inc
or
lea
inc
stos
pop
sbb
addl
mov
dec
push
adc
and
inc
push
push
push
hlt
int3
clc
inc
or
pop
jns
inc
push
jle
push
stos
sbb
test
sbb
js
fldenv
push
xchg
cmp
or
fcompl
into
enter
movb
or
das
inc
jns
mov
lret
andl
pushf
mov
jp
jecxz
jno
mov
adc
shrb
test
pusha
imul
jp
or
adc
and
inc
jb
xor
and
xor
lods
xor
push
inc
out
out
pop
cmp
insl
cmp
dec
jo
lock
orb
insb
adc
jb
aam
lock
push
inc
jne
cmp
adc
pop
sub
sub
adc
lea
ljmp
cmpsb
daa
push
add
bound
push
repz
xorb
jp
pop
leave
xor
cltd
lcall
fisttpl
jle
imul
out
and
push
or
mov
ja
push
jbe
leave
out
bound
jns
cltd
push
and
jmp
mov
xor
bound
mov
and
jp
cmp
fs
mov
mov
mov
push
inc
pop
nop
dec
push
push
xor
and
out
jb
xchg
imul
jle
fldln2
xor
push
outsb
adc
sub
xor
adc
sbb
dec
mov
fs
mov
fcompl
pop
insl
es
adc
and
ljmp
jne
xchg
push
pusha
aam
sbb
and
or
repnz
bound
push
outsb
imul
gs
adc
adc
sub
xchg
push
or
fbstp
loope
cmpsb
hlt
ss
inc
hlt
xor
adc
leave
int
lahf
sbb
sbb
dec
xor
mov
arpl
xor
xor
sahf
adc
sbb
mov
mov
icebp
pop
sub
mov
jno
push
cwtl
jne
dec
rcl
daa
imul
xor
xchg
or
jno
addb
ss
mov
mov
jo
popa
sub
dec
pop
inc
enter
outsb
js
out
dec
icebp
jbe
and
repz
push
ja
je
jmp
add
pop
dec
in
xchg
jp
clc
sti
int3
in
leave
pop
ja
cmp
cmp
dec
adc
dec
xor
lock
inc
call
cmpsb
je
push
xorl
adc
loope
or
xchg
fadds
in
and
insb
push
dec
jl
sub
and
adc
sub
bound
pop
dec
adc
imulb
cmpsb
fcoms
push
sub
sbb
in
ja
jo
adc
push
mov
inc
adc
jae
push
push
addr16
outsb
sub
lods
daa
adc
jp
cltd
or
dec
dec
fwait
cmp
sbb
sub
movsl
fwait
adc
jo
adc
sbb
push
xchg
and
cltd
jns
or
popa
dec
xor
add
jge
push
mov
std
fisubs
mov
pop
icebp
scas
rclb
imul
mov
ror
or
jl
mov
cli
aad
int3
orb
xchg
fisubrs
test
mov
fs
inc
dec
enter
cmpsb
fs
imul
xor
mov
jecxz
test
sar
jns
inc
pop
mov
push
fmull
dec
xchg
nop
movsb
sub
or
push
xor
pop
dec
push
add
adcb
and
mov
add
or
daa
dec
repnz
imul
leave
andl
cmpsb
out
test
addl
mov
pop
dec
sub
nop
mov
sub
xor
push
inc
pop
dec
dec
dec
mov
push
adc
mov
or
adc
jo
rclb
dec
xor
jae
addl
inc
test
lcall
wrmsr
xchg
shlb
or
lods
insl
test
jns
outsl
test
push
gs
push
mov
test
push
js
jno
nop
int3
je
lcall
in
arpl
fldcw
push
mov
jo
aad
lcall
aad
adc
movsb
jno
daa
adc
je
pop
pop
test
xlat
mov
in
mov
enter
pop
js
mov
and
clc
les
xchg
cmpsl
ret
aam
push
fdiv
dec
mov
cwtl
fdivrs
mov
or
push
lret
mov
pop
les
movsl
leave
jns
xchg
inc
sub
movsb
dec
ret
ficomps
ror
dec
mov
xor
xor
push
fnstsw
add
inc
mov
iret
lcall
cmp
or
imul
popf
inc
icebp
add
dec
jne
out
adc
jp
loopne
addr16
jae
adc
outsl
jb
inc
js
mov
mov
push
inc
and
clc
sbb
flds
xor
pop
out
jbe
sbb
in
mov
or
jo
push
outsb
lret
inc
jmp
adc
and
and
dec
pushf
lds
mov
sub
lahf
xor
push
dec
xor
sub
jo
xchg
xor
inc
sbb
push
mov
pop
or
ret
inc
push
inc
or
jns,pt
pop
lahf
xchg
insb
and
mov
inc
push
push
test
fwait
and
in
out
jecxz
data16
mov
jb
dec
pop
lds
cmp
scas
adc
and
pop
jae
xor
cld
push
add
jnp
lahf
adc
dec
push
fs
mov
mov
push
dec
inc
cs
addr16
push
push
clc
xchg
dec
sahf
outsb
gs
pop
movsb
lods
fisubrl
shll
push
ficoms
pop
data16
sub
mov
cmp
fisubl
rorl
add
lret
cwtl
ja
cmp
sarb
push
jl
arpl
lcall
insb
in
add
ss
inc
in
push
packuswb
negl
xor
inc
movsb
rcrb
and
sub
or
imul
and
sahf
push
inc
imul
dec
inc
dec
add
sub
leave
pop
inc
xor
lcall
push
inc
jno
adc
push
dec
imul
inc
mov
mov
pop
insl
mov
mov
addr16
dec
jmp
int
jno
les
mov
popf
sbb
jae
xor
xlat
jne
in
xor
inc
adc
bound
shlb
into
xchg
or
maxps
push
inc
dec
jp
mov
movsb
insw
pop
cmp
lahf
negl
js
xchg
fnstsw
ficoml
push
push
push
adc
or
pop
pusha
mov
inc
pop
nop
jb
jle
add
fwait
movsb
push
cmp
cld
je
es
jno
movb
cmp
push
inc
cwtl
shlb
pusha
dec
cs
pop
adc
jae
pop
loopne
sub
je
push
nop
mov
dec
inc
add
inc
arpl
into
pop
pop
mov
push
inc
loope
mov
xor
icebp
aad
push
int3
mov
fcomip
cmp
pushf
push
adc
sbb
inc
test
test
mull
jns
cmp
add
mov
popfw
adc
gs
outsb
lea
adc
dec
insl
xor
nop
jl
inc
sbb
jno
mov
pop
imul
pusha
insb
inc
dec
imul
dec
test
cmp
insb
popf
adc
and
out
call
fs
mov
sbb
bound
dec
test
or
adc
jb
fs
mov
mov
mov
in
dec
dec
enter
add
mov
mov
outsl
push
push
std
pop
int
neg
movsb
inc
push
jo
cmp
insl
xchg
jb
xchg
shll
repz
push
nop
or
sub
or
scas
cwtl
ljmp
sbb
jo
xor
push
loopne
insb
sahf
jl
dec
cmp
popa
push
mov
jb
outsb
inc
push
push
push
and
cmp
inc
iret
dec
fisttpll
pop
pop
leave
int
and
bound
push
test
jbe
or
arpl
nop
sub
fs
fs
mov
test
cwtl
mov
mov
cmp
imul
mov
cld
lock
ljmp
es
jne
es
sbb
jg
and
cwtl
inc
xchg
xor
mov
arpl
daa
inc
dec
cmp
lea
aam
movsb
clc
jno
jne
ficompl
aad
stos
sub
pop
or
pop
or
lds
sti
std
or
outsl
je
cld
aam
insl
mov
jecxz
lods
jmp
fisubl
arpl
dec
mov
jno
lods
add
outsb
imul
jl
loopne
dec
add
loopne
fdivrs
add
push
or
sub
aam
cli
dec
mov
movsb
mov
cmpsb
movsl
cmp
arpl
movsl
fs
shrl
jle
jmp
sarl
xchg
or
js
fimuls
jno
sub
jae
outsb
xchg
jae
push
das
dec
popa
out
jo
jne
jmp
leavew
pop
es
jb
mov
mov
andl
stos
lret
mov
hlt
or
call
sti
pop
icebp
in
test
and
movsl
dec
push
mov
loop
fdivrl
jl
outsl
jnp
jo
xchg
dec
push
imul
xor
daa
imul
arpl
push
mov
push
or
mov
sub
cli
jp
jl
pop
sbb
or
xchg
dec
leave
mov
inc
dec
cs
inc
ror
icebp
icebp
xchg
push
or
add
movsl
pop
dec
and
and
jmp
cltd
and
xchg
or
push
outsb
push
adc
pop
mov
enter
pop
dec
dec
or
or
xor
popa
es
pop
loopne
xchg
xor
jno
adc
inc
cmp
test
int
mov
loope
cmp
dec
and
repnz
outsb
xchg
imul
ret
test
gs
fs
push
je
and
push
dec
xchg
enter
pop
jnp
nop
sub
or
dec
and
cwtl
xchg
idivb
hlt
dec
push
cltd
cmp
or
adc
cmp
test
outsl
add
pop
inc
pop
shrl
loop
adc
cmp
jp
stos
rorb
pop
and
fs
outsl
jns
pop
leave
push
ror
stos
scas
aas
push
push
mov
xor
xor
dec
or
cmpsl
test
nop
and
fdivrl
push
sub
lcall
pop
inc
adc
pop
pop
in
in
inc
inc
mov
cld
pusha
leave
push
dec
shlb
jl
cmpsl
mov
imul
and
bound
cmpsb
outsl
jo
inc
inc
sub
cmp
cwtl
pop
inc
and
pop
jne
lods
icebp
in
cmpsb
dec
cltd
push
push
inc
pop
clc
adc
arpl
dec
sbb
daa
dec
loop
adc
inc
les
arpl
push
cmp
std
mov
nop
or
icebp
push
and
insb
push
arpl
xor
mov
push
or
push
insb
dec
outsl
lret
fs
jae
jnp
into
int3
aas
ja
dec
outsb
xchg
sub
mov
pushf
adc
mov
xchg
jbe
outsl
leave
pop
les
fs
insb
in
mov
sbb
outsb
sbb
inc
iret
call
loopne
fcmovnu
pop
fdivs
insl
int3
fxch
insb
les
mov
mov
fnsave
cmp
lods
insb
test
mov
xchg
dec
dec
xchg
aaa
gs
mov
jnp
and
movsl
jae
adc
mov
lret
pop
es
adc
push
std
adc
jns
fidivrl
mov
inc
stos
xchg
xchg
sarb
jl
out
push
test
sub
and
sbb
imul
sbb
lcall
adc
adc
lods
adc
test
push
std
lret
and
ljmp
imul
sbb
daa
mov
sub
pop
repnz
or
push
leave
jb
xchg
xchg
or
or
ja
int
jle
jecxz
movsl
les
imul
test
imul
lret
outsl
xchg
lods
lret
jle
or
adc
jne
jo
pop
ds
into
mov
cs
enter
lahf
sbb
outsb
addr16
sbb
inc
xchg
push
lcall
es
ja
xchg
push
mov
inc
movsl
inc
dec
and
jne
sbb
bound
pop
outsb
inc
or
pushf
stos
and
sub
xor
adc
push
js
mov
popf
and
lods
xchg
aaa
jne
sub
testl
xchg
or
dec
in
and
shlb
cmpsl
jb
xchg
adc
dec
sbb
push
outsl
cmpsb
or
es
xlat
pop
stos
stos
pop
or
cmp
aam
mov
add
inc
mov
push
data16
adc
imul
movsl
int3
mov
xchg
push
imul
sbb
sbb
fs
fs
stos
adc
and
jb
fs
shrl
jne
test
mov
jecxz
cltd
inc
adc
adc
insb
push
out
insl
sub
push
sbb
je
outsb
add
inc
bound
mov
ja
mov
dec
pop
fnop
pushf
adc
xchg
imul
ret
je
cmc
adc
mov
add
pushf
ficompl
lret
jb
icebp
cmp
nop
pop
xchg
inc
cmp
outsl
mov
push
stc
mov
sbb
or
aas
xor
ret
cmpsl
or
rolb
fs
sti
ret
bound
xchg
insb
lcall
adc
lods
aad
push
xchg
je
in
adc
fsubs
push
enter
push
cld
mov
xchg
and
mov
xchg
dec
pop
xchg
mov
addr16
je
movsb
jbe
mov
cmpsl
adc
add
inc
faddl
outsl
adc
xchg
movsb
mov
push
rcrl
cmpsb
dec
adc
sbb
imul
mov
daa
or
adc
dec
jmp
or
and
popa
dec
adc
hlt
jb
xlat
inc
push
or
insl
cmp
push
mov
push
push
inc
jb
or
test
jo
xchg
sub
stc
jp
xchg
xchg
mov
sbb
fildll
lahf
inc
in
cmp
add
pop
mov
mov
icebp
push
cmp
or
shll
jnp
dec
sbb
push
or
sar
mov
xchg
xchg
adc
jo
les
in
data16
push
and
cmp
xchg
and
push
or
xchg
and
insl
push
jb
out
sub
and
push
adc
dec
jle
dec
stc
push
sbb
and
sbb
push
jp
sbb
divl
xchg
inc
lahf
ja
pusha
and
sbb
inc
mov
jecxz
fistpll
push
jns
test
jp
push
push
fwait
adc
leave
popa
mov
lods
or
jp
mov
fwait
sarl
push
pop
adc
or
mov
outsl
jbe
or
fnstsw
mov
fcmovnb
jb
cmp
jo
mov
jo
in
adc
pop
push
or
scas
sub
or
sub
stos
or
xlat
xchg
adcl
insl
dec
and
push
sub
mov
shlb
jp
jo
dec
data16
imul
insl
adc
mov
dec
adc
pop
pop
stc
xor
bound
ret
gs
cmpl
xchg
sub
mulb
hlt
clc
lret
xlat
lret
enter
out
js
cltd
adc
test
fidivs
std
les
outsb
sbb
popa
ja
inc
fldt
ret
icebp
push
adc
sbb
mov
insl
or
subl
faddp
icebp
in
pushf
inc
sub
mov
cmpsb
or
out
push
aad
push
sub
sub
cmp
cli
data16
or
xorb
sahf
mov
inc
imul
jne
mov
pop
outsb
dec
adc
sbbl
xchg
push
push
sub
dec
adc
mov
fidivs
dec
jne
dec
aam
or
adc
inc
fs
out
fstl
cmpsl
pop
mov
push
pop
mov
inc
dec
ret
sbb
adc
imul
js
xchg
rolb
push
arpl
test
in
or
in
adc
imul
insb
lcall
or
inc
sbb
push
adc
ficompl
outsb
daa
or
jo
aam
or
jb
lods
dec
adc
mov
or
adc
dec
adc
mov
adc
lods
daa
jb
rcl
sbb
imul
adc
push
xor
inc
pop
dec
gs
inc
or
aaa
pop
test
mov
inc
cmpsb
adc
cmpsl
dec
inc
push
push
dec
dec
inc
sbb
daa
or
stos
xor
jmp
fldcw
scas
xchg
inc
jl
adc
fwait
adc
inc
imul
test
repz
cli
or
mov
daa
lret
mov
jg
mov
outsb
or
or
sbb
inc
mov
inc
mov
adc
lcall
cltd
nop
cmpsb
mov
rorl
mov
and
jl
imul
dec
lret
dec
hlt
inc
xchg
les
jge
adc
add
push
mov
push
or
scas
and
jne
insb
into
pop
rcrb
les
or
dec
push
lea
aam
inc
test
les
mov
pop
push
adc
or
popa
into
rcr
imul
or
test
or
in
into
outsb
adc
pop
pop
cmp
je
lcall
or
repnz
xor
jo
mov
jecxz
sahf
sub
push
mov
dec
mov
js
in
and
inc
inc
or
and
xchg
je
int3
nop
push
outsb
jns
pushf
out
aam
adc
sbb
dec
sbb
or
nop
xor
or
insl
adc
or
jmp
sbb
insb
adc
insb
aad
push
and
lahf
out
aad
mov
sbb
fwait
jl
imul
adc
adc
ss
and
scas
lock
sbb
mov
out
and
outsb
sub
pop
es
pop
and
adc
or
xchg
adc
or
sub
mov
xchg
sub
ja
fsubl
insl
adc
dec
sub
adc
cmp
sahf
daa
lret
cltd
sub
adc
jne
or
rcl
cmpb
inc
or
insb
adc
aad
mov
push
and
orl
sub
aam
imul
add
lods
xchg
push
mov
push
and
or
cmp
imul
adc
aam
addr16
adc
shlb
les
leave
push
fstps
sbb
jp
mov
lods
lcall
push
int3
or
push
in
outsl
movsb
sbb
imul
mov
adc
adc
add
popa
frstor
daa
lods
mov
sub
es
insb
cmpsl
mov
sbb
jns
scas
push
insl
adc
and
adc
adc
movswl
jns
mov
mov
sbb
insl
adc
sbb
rorb
jbe
inc
or
test
xor
xchg
inc
jb
jo
out
scas
sti
jle
or
pop
in
adc
jne
adc
mov
jne
je
pop
inc
into
imul
xchg
dec
inc
dec
jbe
mov
adc
sub
adc
je
sarb
lahf
jmp
xchg
sbb
push
sahf
push
jb
movsb
mov
data16
rcl
adc
jo
test
mov
cld
fisubl
fiaddl
and
jae
jp
push
xchg
or
adc
pop
fs
rcrl
adc
fdivr
jp
fnstcw
adc
insl
loop
sub
sub
xor
cmp
push
sub
sbb
popa
data16
or
jmp
or
and
mov
dec
les
jae
lods
mov
cmp
fs
jl
fs
push
adc
sbb
dec
jge
or
scas
ljmp
sbb
adc
mov
push
add
adc
push
adc
push
imul
fs
sbb
xor
ja
aam
outsb
int
jb
inc
or
sahf
add
insl
xchg
sbb
mov
fstl
int
adc
mov
mov
mov
sub
hlt
push
adc
adc
push
or
adc
push
xchg
cwtl
hlt
iret
fsubs
dec
xchg
daa
insb
test
or
or
fs
mov
jl
mov
stos
lcall
or
gs
or
add
bound
jne
sbb
push
pusha
loope
push
or
movsb
sbb
xor
pop
mov
movsl
sahf
fs
or
lods
imul
stc
mov
dec
add
insb
jne
adc
test
pop
mov
sub
lcall
push
ret
adc
adc
je
fnstenv
int
mov
push
ret
add
dec
xor
push
push
sbb
sbb
cltd
sub
and
sbb
lcall
adc
rolb
mov
int3
in
pop
bound
ret
fsubl
adc
sub
mov
pushw
jb
push
outsl
or
xor
aam
xor
bound
daa
jnp
and
xchg
test
fs
scas
rcl
dec
sbb
sub
xchg
das
adc
or
in
addb
push
or
sbb
daa
cltd
mov
push
pop
adc
subps
mov
cmp
dec
inc
push
lcall
scas
dec
hlt
leave
inc
mov
or
dec
rcl
mov
rcll
arpl
js
fs
dec
sub
inc
push
dec
dec
jb
or
mov
or
aam
xorl
or
jne
adc
leave
pop
add
adc
inc
imul
adc
out
mov
lock
inc
ja
sar
aaa
adc
dec
sub
mov
outsl
fsubrl
dec
outsb
mov
or
fimull
adc
mov
mov
inc
imul
xor
jbe
jl
xchg
cmp
pop
int
lahf
sbb
imul
insb
inc
cmp
outsl
pop
or
sbb
cmp
sbb
sbb
popa
adc
xor
insl
dec
or
sbb
gs
ret
pop
sub
cwtl
das
pop
or
dec
or
push
insb
daa
inc
pop
outsb
mov
lret
or
sbb
jb
jno
jge,pt
adc
and
xchg
adc
adc
rcll
dec
fdivl
aam
and
or
mov
fs
pusha
daa
insl
fwait
mov
ss
adc
data16
cbtw
mov
dec
sbb
ja
sbb
inc
mov
call
mov
lret
jle
icebp
and
fistl
insl
outsl
cmpsb
andl
out
mov
adc
xor
lods
adc
in
sbb
ret
sub
inc
adc
insl
shlb
push
aad
xorl
push
fsts
bound
js
mov
ret
lcall
ljmp
rolb
rolb
cltd
sub
and
push
or
fwait
adc
addr16
leave
mov
jae
jmp
outsb
sub
and
rcll
xor
jle
or
fimuls
stos
jne
leave
push
mov
adc
xchg
fwait
adc
imul
adc
xchg
repz
pop
les
adc
inc
or
pop
xlat
adc
cmc
cmp
adc
dec
dec
adc
pop
inc
adc
inc
sbb
lds
cltd
mov
sbb
push
stos
stc
ficomps
scas
or
sub
sbb
les
inc
cwtl
pop
xchg
and
or
push
js
jns
cwtl
pushf
fsubrs
sub
push
outsl
xchg
mov
sarl
test
in
xchg
lahf
cmp
pop
and
aaa
and
jmp
jle
lahf
sbb
dec
adc
and
fimuls
jge
das
or
outsb
in
fwait
xor
lds
or
or
push
or
subb
ffree
and
jns
iret
adc
pop
sub
movsl
sbb
xchg
mov
jbe
or
mov
daa
fldenv
adc
fwait
add
addr16
fisttps
cmc
pop
push
lods
pop
or
inc
dec
inc
sahf
and
jns
sbb
js
mov
call
or
jecxz
inc
repz
pop
xchg
sub
mov
inc
mov
punpckhbw
push
xchg
ss
pop
sar
xchg
loopne
dec
rcr
out
icebp
lock
inc
mov
lock
mov
jb
lea
mov
mov
rorl
int
mov
mov
mov
and
mov
mov
movsb
adc
inc
xchg
xor
push
in
out
js
clc
ds
test
cmpsb
enter
std
dec
and
adc
out
adcl
bound
xchg
mov
mov
adc
mov
fdivl
jbe
mov
mov
cmp
ret
fcoml
cmovne
fs
jl
xchg
mov
jl
adc
pop
lcall
jne
mov
cmpsb
movsb
push
sbb
in
adc
mov
inc
in
jle
mov
rol
jle
push
mov
test
jp
sub
cld
and
adcl
sub
jl
fisubs
jmp
mov
stc
movsb
mov
movsb
cmc
lea
sub
pop
aad
mov
imul
jo
and
lcall
mov
in
jmp
je
insl
jns
movsb
pop
popf
test
xchg
jmp
mov
ret
or
xchg
dec
lret
stc
xchg
xchg
lods
mov
cld
mov
adc
pop
dec
and
mov
pop
lods
adc
cmpsl
mov
lods
fldt
and
and
and
outsb
or
cmp
es
push
push
popa
stos
ficoml
pop
inc
out
js
cmp
xor
lea
adc
cwtl
cmc
popa
mov
mov
icebp
push
add
imul
lods
xor
arpl
pop
outsb
fldenv
pusha
xor
mov
into
pop
enter
and
cmp
push
js
sbb
dec
lods
das
enter
mov
stc
xchg
mov
inc
xor
test
decb
and
lods
dec
lret
adc
in
and
faddl
add
dec
xor
adc
les
cmp
push
dec
push
adc
mov
pop
adc
fidivl
sti
fstl
ja
pop
xor
jg
test
aad
sub
aam
add
mov
jo
in
and
fmull
fmuls
test
or
inc
rorl
dec
adc
mov
movsl
rcr
xchg
push
mov
sub
xor
cmp
pop
scas
hlt
push
dec
xlat
loop
incl
and
pop
das
pop
adc
xor
dec
dec
aam
xor
das
dec
mov
inc
jae
inc
fs
loopne
pop
jl
ficoml
cmpsb
add
push
and
jns
jmp
and
out
repnz
ljmp
cmp
jb
mov
push
bound
mov
inc
adc
lods
adc
cli
jecxz
rcrb
and
and
adc
outsb
adc
ret
out
test
arpl
adc
fistl
leave
aam
in
or
jb
mov
lcall
sahf
mov
push
jl
mov
pop
pop
scas
cmc
or
sahf
fdivrl
push
mov
jmp
jae
mov
lock
push
or
in
das
pop
test
and
mov
inc
dec
out
sub
lods
jae
fs
jnp
fists
scas
jge
pusha
jp
cmp
outsl
fidivrl
cmc
in
imul
jno
js
in
xor
adc
xchg
mov
insb
pop
push
jmp
in
sbb
stc
incl
pop
xor
leave
mov
jae
push
adc
loop
sbb
mov
sub
shlb
xor
out
fnstcw
or
arpl
or
cmp
rolb
or
aam
js
inc
jge
jge
push
pop
sbb
incl
push
sbb
or
adc
inc
jne
out
push
sub
je
rcll
add
int
int3
test
cmp
decl
xlat
add
inc
cli
push
call
mov
imul
jo
xor
pop
xor
ret
icebp
jnp
aad
adc
and
test
push
cmpsb
ret
pop
pop
add
push
add
inc
ljmp
stos
push
push
push
loop
jb
pusha
add
add
test
ret
dec
fs
sub
lahf
shrl
testb
cs
xor
out
fidivrs
cmp
sub
movsb
pop
xchg
push
call
je
dec
fists
cmp
mov
cmp
popa
inc
push
sbb
loop
imul
shrb
addr16
and
in
addr16
or
insl
inc
sub
sbb
dec
jnp
sbb
push
cld
ss
jne
dec
jp
and
push
inc
sub
imul
sbb
iret
mov
pop
jg
jae
aaa
dec
adc
cmp
popf
sub
call
xchg
mov
dec
adc
jae
gs
inc
xchg
sbb
pop
lahf
jl
in
sub
mov
push
jmp
or
push
imul
push
mov
pavgw
add
jns
add
mov
xchg
je
and
dec
and
and
out
fbld
mov
das
inc
rorl
or
adc
outsl
xorl
pop
push
inc
stos
cld
ja
xchg
push
xchg
scas
loop
scas
dec
jmp
push
sbb
mov
xor
mov
jmp
ret
mov
inc
add
sub
xchg
negl
dec
push
inc
pop
mov
pop
popa
repnz
push
cmp
flds
and
out
test
stc
movsl
mov
and
sbb
cld
sub
xchg
pop
jge
mul
xor
push
scas
fwait
xor
xor
stos
out
lock
push
inc
nop
cmp
movsl
inc
adc
mov
add
xor
nop
add
test
in
or
in
mov
cmp
add
xor
push
inc
shl
ljmp
call
test
jns
mov
dec
fdiv
jne
loope
out
fsub
xor
add
jmp
jo
mov
ret
inc
dec
push
add
dec
ds
orl
xchg
sub
cs
jmp
imul
jbe
and
mov
das
xchg
add
and
scas
pop
es
cmp
js
daa
insb
and
sbb
and
sub
mov
xor
dec
outsb
inc
lret
xchg
inc
push
jle
jno
adc
push
sbb
daa
jo
lock
inc
and
jae
push
xrelease
push
das
xor
pop
or
in
ror
slwpcb
cwtl
js
jge
add
add
ret
call
xor
add
add
fcoms
icebp
push
add
inc
outsb
xor
and
ret
out
loop
ds
push
xor
add
dec
loopne
adc
pop
jnp
push
or
aad
pop
les
mov
dec
sub
mov
adc
xchg
loop
and
cmp
mov
mov
and
iret
xchg
and
clc
lods
add
cmp
mov
adc
out
test
testl
sub
addb
insb
mov
ret
inc
dec
fnstsw
adc
sub
xchg
or
pusha
loop
stos
add
in
xchg
les
add
gs
xorb
pop
xchg
stos
test
in
push
addb
dec
nop
mov
xor
loopne
sbb
mov
inc
push
and
stos
andb
inc
adc
xor
and
xchg
pusha
push
addb
inc
nop
cmp
sub
nop
and
inc
or
mov
lock
inc
aam
fnstsw
adc
pushf
sub
pop
mov
jns
adc
sub
in
adc
std
and
ficoms
test
sbb
loop
and
cmp
mov
xchg
mov
sub
pushf
dec
push
jns
adc
xchg
loop
and
cmpsl
inc
sub
cmpsl
or
jns
adc
push
inc
lods
js
das
mov
and
xor
pop
or
mov
jno
adc
xchg
repnz
and
mov
test
cmpsb
test
js
inc
cmpsb
test
cmpsb
js
inc
cmpsb
test
movsl
js
inc
movsl
test
test
test
xor
test
test
movsb
js
inc
movsb
lahf
clc
lahf
adc
push
movsb
loope
movsb
push
xor
and
add
and
adc
dec
loope
loop
pmulhuw
jecxz
loopne
and
in
inc
enter
and
loop
cwtl
mov
dec
movsl
adc
adcb
dec
aas
sbb
add
dec
and
xor
inc
pushf
dec
mov
das
jns
xor
out
push
mov
push
cmc
dec
xor
xor
jbe
xor
xor
xor
ds
imul
jl
cmp
je
jecxz
imul
mov
mov
xor
test
sbb
out
xchg
mov
mov
cmp
xchg
aaa
mov
outsl
and
aam
jl
out
xor
sbb
cmp
ss
xor
repz
loope
xor
sahf
data16
repz
arpl
outsl
jns
out
xor
negl
arpl
outsl
jns
out
xor
negl
popa
sti
int3
aas
jns
out
xor
out
mov
sub
xor
xor
orb
xor
enter
sbb
jecxz
xor
pushf
xchg
cmp
and
jns
sbb
xor
inc
xor
xor
mov
adc
sbb
cmp
ss
xor
inc
xor
xor
lods
divl
inc
inc
push
rolb
push
xor
hlt
popf
xchg
insb
cmp
adc
test
jo
xor
inc
cmp
aaa
pop
nop
ss
das
and
jns
or
loope
pop
enter
jno
dec
adc
aaa
pop
inc
ss
xor
lea
pop
push
imul
inc
das
sbb
jbe
dec
dec
lahf
dec
push
push
inc
js
add
cwtl
xchg
or
adc
inc
or
call
enter
and
add
mov
inc
loopne
pusha
or
or
add
data16
inc
ss
add
pushf
dec
adc
in
test
dec
add
add
inc
adc
add
enter
push
push
aad
cwtl
cmp
adc
add
or
add
pusha
cmp
mov
movsl
xor
add
jle
xor
ficoml
push
adc
gs
xor
inc
in
inc
iret
mov
in
call
nop
push
mov
or
pop
xchg
shlb
push
xor
rcr
fisubs
loopne
sub
jle
adc
sbb
js
inc
movsb
add
jb
cltd
add
pushf
cmp
sub
push
push
push
xchg
enter
ret
cld
inc
xchg
add
aaa
push
push
or
sub
or
add
or
dec
or
or
or
or
sbb
push
push
push
cmp
or
cmpsb
pop
push
adc
adc
add
sbb
mov
adc
inc
xchg
inc
lret
gs
xor
push
cltd
or
pusha
pop
cmpsb
jl
insb
sbb
insl
inc
and
sbb
jb
lods
push
dec
xor
or
andb
or
dec
fs
dec
sub
in
xor
cmp
and
adc
pop
bound
and
rcrl
sub
fisubs
adc
inc
pop
adc
pop
loop
and
mov
adc
sub
adc
aaa
dec
adc
enter
add
adc
adc
and
aaa
or
adc
mov
xchg
adc
fmull
adc
xchg
sbb
les
mov
adc
and
lods
inc
and
mov
add
jg
or
inc
ljmp
out
adc
lods
or
adc
adc
xor
movsb
inc
adc
inc
rol
push
or
fnstsw
xchg
dec
or
lea
and
xchg
inc
xchg
leave
add
sub
dec
sbb
xor
cmp
data16
inc
or
inc
cmp
sub
es
cmp
dec
orb
les
push
clc
jo
mov
mov
mov
xchg
adc
mov
lock
jp
loopne
cld
mov
adc
xor
and
dec
cmpsb
mov
or
cmp
pop
popf
ljmp
hlt
imul
add
mov
pop
xor
stc
add
sub
cmp
sbb
or
mov
xorb
sbb
icebp
cmp
push
push
jnp
push
push
inc
inc
call
cmp
lahf
pop
cmp
xchg
and
push
cmp
movsb
xchg
enter
aam
repz
adc
xor
or
insl
sub
cmp
lret
or
or
mov
adc
xor
or
insb
inc
xchg
es
mov
mov
add
mov
push
ret
jne
sub
mov
sbb
add
leave
sbb
in
int3
into
mov
lock
mov
jo
test
lds
add
and
sbb
jl
add
xlat
xchg
inc
push
add
sahf
add
mov
cmp
lahf
cmpb
iret
decl
outsl
js
subb
mov
add
test
mov
daa
cmp
jl
add
mov
stc
popf
sti
add
jle
push
inc
mov
int3
repnz
test
adc
stos
clc
scas
aam
lds
cli
add
cmpsl
aam
imull
xchg
iret
inc
gs
xchg
push
add
mov
push
or
addl
in
xchg
cmp
xor
push
jge
in
cmp
sahf
xchg
pop
push
cmpsb
add
mov
mov
pop
popa
sar
mov
fsubs
xchg
clc
repz
pop
mov
subb
fwait
add
pusha
les
int
add
add
aas
add
or
mov
rcrb
filds
dec
lea
lock
roll
sub
sbb
pop
pop
mov
jl
add
mov
inc
sbb
out
add
mov
insb
scas
add
jmp
xor
pop
aad
mov
std
mov
popa
test
adc
stos
in
das
dec
pop
loope
dec
les
icebp
xchg
loopne
cmp
jne
int
lcall
add
inc
lods
push
mov
mov
loop
mov
mov
adcb
jle
pop
push
jl
mov
das
lea
push
mov
inc
mov
cmp
ljmp
lods
mov
inc
rolb
fstl
arpl
int3
and
push
ja
call
cmp
sbb
and
cmp
mov
cmp
addb
add
xlat
cmp
mov
pop
or
mov
jecxz
cmpsb
jl
add
test
pop
mov
jne
aaa
fldt
cmp
jno
sarb
add
out
dec
nop
pop
cmp
push
fisubl
xor
loop
mov
cmpsl
push
lahf
inc
add
adc
ss
push
scas
into
imul
pop
add
rcr
jge
call
out
pop
push
xchg
add
push
andl
dec
dec
push
gs
std
add
adc
pop
ficomps
add
cmpsb
fmuls
and
jecxz
add
aas
inc
push
gs
out
sti
dec
scas
inc
cmp
sbb
push
shrb
adc
sbb
loope,pn
jnp
push
imul
inc
and
int3
xor
inc
rolb
mov
sub
in
cmp
dec
cmp
cmp
pusha
add
add
add
add
add
add
and
add
xor
add
nop
add
add
add
add
mov
add
lea
lea
xor
call
jmp
pushl
pushl
call
add
add
cmpl
jne
lea
push
push
push
push
push
call
mov
pop
pushl
push
call
add
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
movl
jmp
pushl
pushl
call
test
je
mov
add
mov
jmp
inc
cmpb
jne
inc
mov
testl
jne
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
call
popa
jmp
popa
ret
push
push
mov
or
je
mov
mov
sub
add
pop
pop
ret
pusha
mov
or
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
cmp
add
push
add
jb
gs
xor
cs
insb
add
push
add
push
add
push
add
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
or
add
add
inc
add
orb
inc
add
add
xor
imul
add
push
push
push
xor
arpl
fs
popl
dec
inc
push
dec
out
cmpsb
or
inc
push
or
addb
mov
pop
and
dec
or
or
xchg
and
dec
adc
mov
push
gs
imul
or
outsb
jbe
jb
xlat
js
notb
popa
test
add
insl
jo
sbb
push
je
outsb
addr16
lods
unpcklps
andb
inc
add
inc
popa
repz
hlt
push
sarb
or
dec
push
outsb
push
inc
js
arpl
insl
imul
out
fdivs
push
push
jecxz
and
mov
xor
sbb
insb
push
jns
cld
push
lods
movups
rcr
inc
ss
lcall
sbb
cmp
fldl
shrl
insb
mov
popa
out
jb
andl
mov
jne
dec
jnp
sub
mov
push
dec
fwait
or
inc
xchg
loop
cld
insb
mov
inc
out
ljmp
imul
jmp
jp
cmp
mov
cwtl
es
inc
gs
ja
aad
enter
jns
repz
inc
inc
fadds
mov
or
jae
cmp
push
mov
mov
adc
outsl
mov
xchg
insl
mov
dec
sbb
testb
adc
outsl
push
dec
icebp
and
fdivl
inc
mov
push
out
push
imulb
xchg
xor
outsb
jns
or
xchg
cmp
lea
sbb
inc
cld
jno
adc
dec
and
jb
es
je
xor
sbb
push
js
scas
int
adc
test
punpcklqdq
dec
bound
and
mov
clc
pop
push
inc
fs
aam
push
cmp
andb
jo
inc
or
insb
loop
data16
push
adcl
imul
dec
push
mov
sbb
je
and
repnz
pop
push
stos
popf
pushf
mov
add
ss
flds
cltd
in
lcall
divl
bound
xor
pushf
cltd
lods
and
xchg
pop
inc
int
bound
imul
or
dec
jo
test
dec
cmpsl
push
movsb
sbb
xor
cmp
aad
fstpl
sbb
sbb
mov
push
mov
push
dec
andb
lret
pop
jb
pop
jge
dec
jns
nop
sbb
and
fbstp
mov
je
jb
imul
test
mov
push
push
dec
loope
push
inc
push
xchg
jne
cmovge
jl
and
insb
pop
shrl
ljmp
arpl
pop
movsb
popf
mov
shll
popf
aam
sbb
pop
mov
mov
push
aam
into
sar
dec
sbb
inc
test
or
jo
mov
push
shll
inc
pop
stc
fimuls
xchg
bound
nop
les
int
and
rcl
mov
jg
and
repz
in
shrb
ja
pop
out
dec
popa
enter
push
cmpsb
mov
imul
push
add
dec
inc
dec
rcll
aas
mov
xchg
adc
jns
push
cmp
aam
je
fs
rclb
xchg
sub
in
fistpll
sub
and
mov
xlat
mov
nop
sbb
mov
add
