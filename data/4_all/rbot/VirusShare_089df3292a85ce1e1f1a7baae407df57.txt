mov
roll
movnti
in
push
pop
push
push
icebp
pushl
push
call
pop
push
lea
mov
add
inc
add
inc
jle
pop
leave
ret
push
add
push
push
jns
cmp
or
sar
test
je
sbb
push
call
pushf
sbb
and
dec
xchg
push
add
mov
addr16
jno
ret
jnp
xor
sbb
fmuls
push
lea
fwait
dec
gs
je
jge
call
sti
sbb
or
adc
add
rclb
push
call
and
inc
jnp
adc
ret
push
pop
ret
mov
shlb
ljmp
cmp
or
add
pop
mov
lcall
movb
push
xor
cmp
jg
popf
ret
dec
jae
xlat
add
cmp
push
scas
mov
shr
fldcw
push
dec
enter
imul
jp
jne
lea
jmp
mov
or
add
add
pop
xor
push
mov
stc
inc
sti
pop
xchg
mov
test
pop
mov
inc
push
push
add
sahf
sub
dec
jns
mov
mov
stos
adc
cli
cld
daa
mov
push
and
push
arpl
into
xlat
aad
pop
ds
inc
stos
in
xor
out
or
push
fmull
aad
jg
call
mov
fstpt
push
data16
loope
das
adc
pushl
ret
xchg
iret
sbb
mov
xchg
pop
push
lcall
inc
push
mov
popa
call
push
mov
ret
rcl
jecxz
lods
jae
add
pop
adc
imul
push
test
xchg
pop
dec
adc
mov
cs
cmp
jg
sbbb
inc
or
jle
xor
dec
shr
es
loopne
push
sbb
decl
push
rclb
or
adc
cld
fmuls
testb
inc
stos
or
int
mov
setb
cmp
xadd
test
push
addl
push
mov
dec
and
mov
sub
insb
fs
lods
test
loop
sub
cmp
mov
int
movsb
sub
push
pop
inc
lcall
adc
mov
sti
ret
lahf
pop
lods
jae
or
xchg
nop
push
in
movsl
inc
adc
push
lds
pop
imul
sbb
push
aad
xor
pop
xchg
sub
xchg
sbb
jno
xchg
leave
xorb
add
sbb
or
xchg
sub
sub
popa
cld
iret
pop
mov
adc
and
xor
stos
push
push
adc
mov
lahf
dec
sahf
dec
cmpsl
mov
cld
cwtl
js
icebp
dec
pop
xcrypt-cbc
cmpsl
aad
inc
and
and
mov
or
fmull
les
xchg
push
icebp
xchg
int3
pop
mov
xor
and
inc
sti
cmp
push
in
arpl
fsubl
xchg
or
jbe
cmp
cmpsl
sti
pop
mov
push
push
int3
pop
hlt
mov
mov
fcomi
and
cltd
push
pop
inc
sub
sbb
sbb
inc
jle
mov
push
sti
xor
xor
rclb
jbe
test
mov
and
cmpsb
sbb
pop
sub
or
sbb
mov
sub
push
adc
adc
pop
pop
lcall
loop
ret
mov
lea
lock
cld
bound
hlt
incb
push
ds
add
gs
std
adc
sub
push
nop
call
jne
adc
add
call
loop
loope
xor
adc
adc
dec
bound
adc
pop
mov
loopne
pop
mov
rorb
stos
inc
adc
cmp
je
or
xor
dec
sbb
push
loopne
fcomps
rolb
and
push
push
lds
pop
jns
add
push
pop
pop
or
pop
sub
lods
fwait
push
xchg
gs
dec
cmp
das
push
movsl
dec
adc
sbb
push
push
mov
xor
jae
cmp
call
or
fildll
inc
mov
push
jno
jl
out
outsb
test
es
dec
test
xor
jmp
mov
lret
mov
push
xor
sahf
inc
xchg
and
push
adc
or
sbb
je
cmpsl
and
jne
adc
pop
add
ret
nop
push
lods
sahf
jb
outsb
and
dec
push
stos
sub
jnp
gs
addl
addb
je
cmpb
dec
xor
xor
lret
adc
loopne
nop
jae
clc
fildll
fmull
mov
shl
sbb
arpl
push
and
and
stos
outsb
cmp
rcrb
jge
mov
ret
in
sub
cltd
inc
repz
daa
xor
cmpb
sub
stc
jge
mov
sbb
cli
adc
xchg
and
push
mov
sbb
pop
jmp
pop
dec
add
jmp
testb
pop
fadds
push
mov
add
add
jbe
ret
mov
rorl
jmp
lret
and
and
push
cwtl
sar
jg
jae
pop
loop
mov
in
and
nop
push
add
lidtl
xchg
loop
add
xor
cs
add
or
inc
sqrtps
xchg
xchg
cmp
lret
cmp
sbb
out
push
jns
mov
out
jbe
add
mov
in
int3
adc
push
call
cmp
mov
lcall
mov
push
pop
repnz
jae
sub
fnstcw
daa
dec
in
pop
in
add
xchg
xchg
fwait
pop
ret
test
mov
push
xor
dec
addb
ss
mov
mov
imul
adc
adc
adc
mov
push
repnz
nop
popa
data16
jg
insb
inc
xchg
sbb
push
hlt
cmp
xor
dec
dec
sub
rclb
cmp
mov
orb
sbb
outsb
fistpll
les
sbb
jge
cmp
je
ss
mov
jae
sbbl
sarl
push
incl
stc
dec
mov
or
add
andb
ja
xor
fstps
and
sbb
stos
jb
pop
stos
push
inc
and
xchg
rorl
cld
dec
inc
in
adc
adc
in
jle
repz
psubsb
test
loopne
pusha
addr16
cld
sub
dec
je
aaa
add
dec
inc
fs
jno
push
sahf
mov
mov
or
cmp
xor
stos
jg
sub
or
hlt
cwtl
pop
jae
imul
dec
or
pusha
movsl
je
jge
stos
cmpsb
mov
sbb
push
scas
and
lock
adc
xor
xchg
loop
inc
xchg
and
xlat
inc
in
test
mov
push
mov
les
mov
jmp
in
xor
xchg
push
clc
or
sub
or
mov
fists
jmp
dec
sbb
add
adc
jmp
out
popa
movzbl
xchg
out
addl
pop
or
and
inc
dec
hlt
jl
lar
mov
push
int3
sub
sbb
mov
imul
cmp
sub
push
push
push
mov
push
jmp
and
xchg
or
test
mov
and
sbb
add
pop
push
sub
mov
movsb
sbb
pop
mov
lret
popf
into
push
sub
sub
lods
sub
add
push
xchg
xor
fcompl
push
mov
dec
push
push
sub
add
ja
call
adc
loop
ret
jle
clc
pop
xlat
mov
sbbb
inc
add
xchg
push
push
or
stos
xor
and
loopne
add
shlb
nop
inc
imul
or
lock
jae
mov
fwait
push
scas
ret
dec
adc
sbb
xchg
ret
lahf
mov
shlb
les
lcall
push
adc
inc
mov
bound
hlt
lret
dec
call
pop
jae
and
inc
enter
clc
cmp
sub
fs
pushf
xor
cmp
jne
dec
sahf
cld
clc
mov
xorl
jmp
sub
jg
nop
cmp
jne
pop
dec
push
in
adc
pop
cmpb
jae
bswap
mov
cltd
je
and
push
inc
mov
push
and
adc
gs
sbb
push
mov
xor
sub
jge
add
pop
rolb
pop
add
loop
push
mov
pop
ret
movsl
or
jo
popa
sbb
cmp
mov
sub
sbb
lea
stos
enter
jmp
leave
ja
inc
dec
dec
xor
ret
hlt
dec
icebp
sub
lods
mov
dec
ds
ds
shll
mov
imul
pop
aam
add
ljmp
adc
dec
dec
pop
adc
mov
sbb
cwtl
add
je
call
pop
cld
test
pop
icebp
push
xlat
cmc
fisttps
or
and
pop
ja
jmp
sbb
dec
jle
push
sbb
cs
je
xchg
decb
mov
and
push
sub
xor
add
popf
sbb
push
dec
imul
fstps
inc
sbb
add
xchg
mov
or
imul
inc
dec
adc
and
push
jo
inc
lea
lcall
mov
cmp
cmp
fistl
mov
in
movb
xchg
aas
dec
add
cs
cli
cmp
es
mov
imul
dec
jns
fiadds
cltd
stc
js
outsl
mov
inc
lret
test
add
mov
sar
mov
or
cmp
popa
sbb
in
cli
fldenv
and
lock
jne
or
call
cmp
lea
add
filds
dec
mov
icebp
xor
in
push
call
ret
or
adc
inc
in
hlt
add
jbe
je
mov
imul
rcrl
cltd
es
push
xor
dec
js
fidivs
andb
push
jge
nop
loopne
ja
sti
mov
push
std
inc
dec
hlt
jno
inc
pop
fstpl
adc
dec
int
push
mov
rcr
stos
jecxz
jnp
and
pop
push
movsb
jle
add
jge
inc
pop
aam
xchg
pop
mov
or
add
cltd
or
ret
xor
fisubs
jge
xor
sbb
negb
add
or
orb
push
pop
add
outsl
mov
add
mov
add
lods
mov
dec
aam
pop
sub
shlb
fsubl
arpl
stos
ljmp
push
adc
or
stos
jno
stos
push
lods
cld
mov
jb
xchg
ret
mov
icebp
cli
cmp
inc
adc
aad
xchg
or
push
add
adc
sbb
adc
add
sub
and
leave
push
pop
sbb
cmp
aaa
push
jmp
insl
jnp
out
in
je
loopne
andb
xor
test
in
fimull
ljmp
addb
adc
jno
adc
loop
push
adc
adc
rolb
mov
push
fmuls
jge
cmpl
jp
rcrb
mov
fstps
lahf
pop
cmp
ror
shrb
adc
jmp
or
dec
test
or
add
jl
inc
out
xor
sbb
sbb
loopne
push
push
and
push
xchg
shrl
lahf
xchg
mov
inc
lcall
stc
cmp
or
inc
je
arpl
inc
cwtl
test
das
dec
inc
pusha
push
push
inc
or
je
xor
mov
mov
adc
enter
add
jne
das
add
pop
jns
and
adc
movsb
and
ret
daa
or
out
or
shlb
test
cmp
xor
ja
and
fldcw
sub
fisubrl
push
test
inc
add
dec
pop
jno
adc
cltd
ret
xchg
pusha
fs
dec
mov
xor
mov
outsl
push
enter
xor
test
push
enter
xor
add
push
dec
inc
adc
push
test
sbb
and
in
push
sbb
xchg
push
clc
adc
jo
mov
js
mov
mov
or
or
mov
cld
add
jns
pop
dec
sbb
test
fisttpl
push
mov
xchg
push
mov
sub
adc
jb
fsubrl
jmp
jbe
adc
xor
and
lret
cmpsb
push
jmp
mov
mov
rep
xor
lcall
les
adc
iret
clc
je
mov
push
call
lock
or
jae
mov
push
jno
sub
xor
xor
inc
in
imul
sbb
dec
cmpl
jns
pop
sbb
dec
shlb
push
mov
xchg
jo
xor
xor
xchg
sti
add
test
mov
jmp
hlt
outsl
pop
xor
test
aaa
pop
push
pop
mov
jmp
xor
push
pop
fmull
sbb
gs
mov
sub
cltd
mov
adc
loope
inc
pop
ds
aad
inc
lret
repz
test
scas
jmp
mov
push
adc
add
push
jmp
push
dec
cmp
popf
stos
jecxz
jmp
shl
in
and
ljmp
inc
sub
sbb
int
add
xor
mov
or
or
dec
pop
and
std
inc
pushf
adc
dec
and
pop
jne
arpl
and
inc
dec
add
jl
jmp
inc
loop,pt
test
dec
enter
or
cmp
push
and
movsb
jne
sbb
jb
in
xor
mov
mov
adcb
pop
sub
jno
sub
mov
loope
or
push
dec
data16
in
jmp
adc
in
pushf
enter
in
xchg
in
roll
lahf
loope
out
push
pop
lcall
icebp
push
aad
push
adc
lock
and
dec
dec
inc
adcl
add
in
mov
add
push
sub
or
push
jg
shlb
add
adc
adc
push
movsb
sub
xchg
adc
mov
cmp
xchg
sub
cmp
movsb
push
adc
in
hlt
test
push
or
sbb
sbb
in
mov
insb
out
or
inc
mov
lds
mov
test
pop
mov
mov
inc
jnp
out
in
int
mov
mov
push
into
sbb
nop
mov
or
xchg
lods
inc
in
and
cltd
lods
fs
xor
pmuludq
in
les
lods
inc
in
adc
insb
shlb
or
inc
jg
std
inc
loopne
jecxz
inc
andb
push
int
inc
movsl
into
add
mov
inc
add
sub
cltd
popa
push
int3
movsb
or
and
pushf
and
jmp
adc
das
cmpl
cmp
xchg
push
xchg
lcall
out
add
add
mov
std
jo
hlt
cwtl
loopne
imul
inc
push
mov
pop
cmpb
hlt
mov
imul
mov
inc
cmp
in
jge
cmp
fldl
and
call
mov
and
add
mov
mov
inc
not
mov
popa
loopne
pop
inc
je
pop
sbb
xor
clc
adc
out
xor
dec
adcb
and
icebp
test
mov
dec
fnstcw
lcall
mov
pop
cltd
push
cmpsl
clc
push
int
dec
xchg
enter
adcb
adc
or
icebp
sbb
sub
xor
jo
inc
mov
jo
inc
jno
sub
hlt
add
mov
mov
jg
out
xlat
add
ret
add
orb
jmp
push
xor
shr
aaa
lock
or
cltd
adc
jo
add
cwtl
pusha
les
mov
sbb
imul
cmp
les
int
xor
jp
repz
cmp
and
push
add
mov
bound
pop
test
fdivs
stc
push
xchg
push
cltd
sub
lret
sub
cli
sti
jo
push
bound
mov
test
adcl
mov
dec
inc
mov
dec
test
pop
xchg
lods
cmp
adc
inc
dec
bound
mov
int3
sbb
enter
setb
or
fucom
add
inc
mov
and
add
pop
sub
push
dec
popa
fadd
mov
ss
sub
out
jmp
dec
xor
dec
out
jno
mov
push
sub
pusha
xor
xchg
clc
les
nop
xor
shl
mov
push
mov
jl
inc
call
sbb
add
mov
addr16
pop
or
xchg
flds
out
and
inc
iret
shl
jg
xchg
add
inc
inc
dec
sub
cmp
or
sbb
inc
jns
xchg
xchg
push
sub
movsb
sbb
xor
sbb
mov
icebp
subl
cmp
fiadds
lods
or
jecxz
mov
jp
call
inc
and
and
lea
and
nop
in
fbld
jmp
adc
and
stos
mov
xor
xor
adc
xor
lea
inc
fs
popa
fs
or
test
and
sub
cmp
jl
adc
push
sbb
xchg
add
push
mov
or
and
aam
sub
fwait
and
adc
pop
lods
jmp
rcl
pop
cmp
mov
mov
mov
and
data16
lods
pop
adc
out
inc
aaa
xor
rorl
sub
add
outsl
push
and
mov
mov
rolb
fwait
es
shrl
pop
push
and
clc
sbb
push
loopne
shlb
push
andb
test
stos
mov
xor
mov
imul
cmp
and
rcll
mov
and
push
and
jo
lret
or
sub
inc
pop
or
xchg
xchg
or
mov
loope
add
mov
adc
cli
adc
insl
nop
test
cld
or
add
jle
aam
xchg
push
pop
push
shrl
adc
mov
rcll
test
movsb
inc
fcmovnbe
movsb
cs
pop
and
cmovg
or
mov
jl
dec
cs
pop
icebp
dec
scas
or
dec
and
sub
rorb
rcll
or
js
push
rcrl
pusha
xor
mov
push
lock
push
bound
and
in
push
adc
xlat
mov
xor
subb
test
and
sbb
inc
daa
push
fimuls
rorb
ret
test
and
or
popf
nop
nop
jmp
mov
mov
sbb
push
push
cwtl
push
push
test
ficompl
fstpl
je
push
sbb
sbb
sub
and
mov
pusha
cmp
stos
dec
lock
negb
mov
call
or
ret
loopne
into
add
mov
add
adc
pop
bound
or
add
rolb
mov
or
xchg
xchg
mov
test
stos
pop
fldcw
enter
or
inc
nop
adc
sub
mov
fmuls
cmp
fldcw
push
xchg
inc
and
adc
push
rcrb
sti
push
jno
sub
movsl
es
push
inc
inc
cli
into
and
xor
arpl
mov
mov
cmp
mov
out
call
cmp
lcall
and
in
test
lea
sub
fsubr
xchg
test
mov
adc
mov
movsl
and
mov
sbb
mov
jmp
mov
jo
das
stos
xor
and
lahf
adc
out
sub
popa
jl
or
std
sub
les
insl
and
jg
movsb
pop
sbb
outsb
adc
jnp
in
les
or
dec
mov
mov
cmp
cwtl
jb
mov
adc
or
inc
xchg
aas
dec
ret
dec
popa
and
or
xchg
cmp
je,pn
push
inc
fsubr
push
adc
cmpsl
call
fsubl
insb
aam
stc
sub
push
mov
insl
and
fcmovnu
je
inc
notl
dec
sub
scas
daa
push
fimuls
adc
enter
add
sti
fdivr
sub
dec
push
cli
push
repnz
push
xor
shrb
add
add
mov
andb
dec
xchg
push
xorb
gs
xor
loop
pop
sub
in
je
push
push
or
adc
jmp
jb
js
test
dec
dec
mov
push
shll
push
sub
xchg
sub
sub
jmp
or
lds
loopne
inc
shrl
push
and
mov
sbb
cs
add
std
adc
loop
mov
dec
push
xchg
mov
mov
hlt
push
cmp
lea
int3
pop
dec
xchg
jl
and
jno
sbb
jl
push
loope
sbb
mov
mov
pop
aaa
cmp
sub
xor
inc
xchg
mov
test
sub
inc
push
inc
adc
movsl
pop
pop
daa
and
mov
push
jne
sbb
jmp
or
cmp
inc
cmc
mov
pop
sbb
cmc
or
jmp
test
clc
roll
jbe
mov
stos
dec
xchg
mov
lods
pop
shr
outsl
push
inc
pushf
mov
inc
lahf
inc
cmp
jb
pop
cld
rol
cmpb
stos
xchg
sar
rdpmc
add
push
gs
mov
sub
add
ja
adc
add
push
xor
inc
decb
test
adc
pop
std
adc
cli
xor
fs
push
xchg
mov
das
sbb
sbb
fmull
push
sbb
int3
and
jo
mov
mov
clc
push
and
inc
call
test
jmp
sbb
or
and
ds
xor
mov
mov
call
sub
dec
add
adc
sub
cs
into
inc
adc
outsb
mov
cmp
out
inc
mov
les
push
mov
lods
sub
xchg
pop
mov
dec
sti
pop
faddl
mov
sub
shr
adc
inc
pop
sbb
mov
stos
scas
and
jmp
jb
or
or
pop
mov
or
mov
repnz
add
hlt
pop
nop
xchg
lea
daa
add
mov
adc
pushf
aam
aaa
push
into
jmp
and
and
and
test
fwait
and
push
leave
mov
movzbw
adc
les
jb
cmp
lock
and
add
pop
sbb
pop
xor
insb
insb
arpl
xor
add
and
push
je
inc
and
test
push
shrb
incl
daa
mov
lcall
sbb
push
nop
lcall
les
mov
clc
add
outsl
dec
and
pusha
mov
and
xchg
dec
mov
xchg
ret
and
pop
xor
add
mov
faddp
xor
xchg
or
sbbl
or
mov
nop
or
or
xor
push
or
call
sub
or
inc
and
jo
mov
pop
lock
sub
dec
pusha
inc
mov
cmp
test
je
inc
jmp
adc
xor
call
dec
mov
inc
inc
push
test
dec
inc
jmp
sbbb
daa
add
or
repnz
pushf
es
pop
cmp
jne
jp
inc
jmp
adcl
sbb
fcomp
mov
shlb
adc
inc
mov
or
jnp
mov
mov
push
xchg
sub
xchg
adc
adc
mov
or
sbb
jne
adc
nop
pusha
sbb
add
push
insl
and
cmp
add
mov
cs
dec
hlt
shlb
enter
fnstcw
js
dec
or
fs
fwait
mov
test
inc
add
xor
cmp
dec
and
mov
jmp
and
call
adc
pop
adc
mov
fisttpll
fisubs
add
out
or
push
jmp
and
neg
add
leave
push
and
jmp
mov
sbb
movb
dec
repnz
push
fistps
pushf
out
lods
dec
pop
or
cli
sbb
fs
or
das
or
test
inc
test
pop
addr16
sub
notb
push
sahf
in
insb
imul
lods
mov
mov
sbb
sub
sub
cmp
icebp
inc
test
and
lret
out
and
dec
xor
inc
sbb
sar
into
add
fisttpl
dec
into
adc
sbb
sbb
dec
dec
mov
roll
mov
xchg
mov
cs
cwtl
mov
loopne
mov
cwtl
add
and
mov
add
mov
daa
call
inc
out
inc
push
or
push
sti
dec
dec
gs
test
push
arpl
xorl
pushl
push
call
push
cmpsb
aas
inc
sbb
scas
jns
adc
mov
dec
out
das
sbb
icebp
or
jno
cmp
inc
adc
cmovb
arpl
pushl
leave
jo
sbb
test
js
adc
xchg
add
sub
movsb
push
loop
sbb
dec
ja
mov
push
shl
push
je
aaa
mov
in
xor
insb
and
je
popa
jnp
mov
jnp
push
rcrl
or
add
rclb
mov
testl
pop
aam
lea
outsl
xchg
xor
sbb
outsl
popa
cmp
push
adcl
pop
call
mov
fists
lret
in
movl
les
and
xchg
push
lcall
and
jae
lods
inc
inc
adc
add
adc
push
and
xor
sub
cld
enter
popf
inc
push
inc
dec
stc
pop
mov
push
or
xor
lods
addb
adc
or
cs
cltd
outsb
mov
idiv
dec
mov
inc
or
in
lds
stos
push
pop
sbb
and
ds
mov
mov
and
cld
lods
inc
and
pop
or
push
and
loope
mov
and
sbb
fildl
dec
cmp
and
mov
mov
test
sbbl
inc
inc
sub
fs
lods
fucompp
dec
out
and
xchg
daa
add
call
xor
test
aaa
jb
push
push
popa
and
and
inc
pop
je
mov
mov
inc
pushf
dec
xchg
mov
cld
aad
pop
dec
xchg
cmp
and
lea
xor
sub
adc
push
sbb
test
lods
adc
dec
xchg
or
push
popa
nop
adc
aad
ret
cmp
jo
sub
dec
dec
push
mov
or
pop
fldt
mov
negb
sub
cs
inc
sbb
cmpsl
sub
in
repz
dec
add
ret
sbbb
mov
push
pop
pop
mov
repnz
into
ljmp
or
push
clc
add
add
call
mov
pop
jbe
dec
xchg
jno
push
inc
fildll
scas
cs
adc
movsl
pop
enter
aam
cmp
sbb
dec
sbb
sbb
xchg
add
and
aaa
stos
fdivrs
daa
cmp
lock
pop
shl
add
and
clc
push
cmp
add
xchg
rcrl
sahf
dec
mov
insb
mov
pop
push
dec
xor
add
das
xchg
sub
jmp
or
lret
ljmp
hlt
add
addb
cld
in
pop
jnp
sub
pop
lcall
push
push
mov
mov
adc
clc
imull
lahf
test
mov
popf
call
sub
push
dec
mov
fcomps
mov
and
int
loopne
shl
xchg
or
mov
out
dec
repz
mov
or
mov
adc
xchg
inc
jne
je
imulb
sub
and
in
mov
mov
push
imul
dec
data16
xchg
sbbb
adc
inc
jns
cmp
pop
sbb
and
scas
cmpsl
in
adc
int3
lret
shlb
mov
ret
add
mov
aam
das
inc
outsl
push
push
dec
inc
xor
das
adc
js
je
xor
js
mov
push
loope
das
addr16
stos
inc
jmp
ret
push
test
push
lock
mov
cmp
xor
jae
shll
dec
sub
xor
outsb
call
pop
xchg
xor
jmp
cmpsb
or
cmpl
add
dec
decl
cmp
mov
jge
mov
or
insl
dec
xchg
lock
lea
movsl
add
subb
leave
cmp
dec
mov
cli
popf
add
xor
cmpl
cmp
pushf
xor
outsb
es
addr16
jge
lock
je
shlb
leave
pusha
mov
popa
xchg
jmp
add
pop
mov
and
les
out
je
adc
or
xchg
adc
cmpl
call
enter
fstps
adc
jmp
outsb
loopne
xor
daa
shl
test
mov
loopne
xchg
pusha
in
add
and
pop
call
aas
mov
adc
xchg
mov
dec
pop
pop
enter
xor
js
inc
and
imul
stos
or
clc
push
es
push
shll
mov
incb
xorb
outsb
xchg
push
or
add
test
data16
adc
adc
movsb
adc
and
cltd
loopne
pushf
mov
shll
cwtl
jbe
mov
in
in
add
mov
loope
inc
movsl
pop
jo
pop
or
pop
fs
mov
inc
add
mov
ret
push
adc
call
sbb
mov
push
je
inc
jge
nop
idivb
daa
or
adcb
pusha
adc
push
push
cltd
das
push
lods
push
jmp
push
dec
inc
enter
cmp
je
or
sbb
xchg
leave
adc
xor
mov
xor
or
ficoms
loop
rol
inc
aam
xor
mov
mov
add
subb
mov
mov
fcompl
jl
lods
rolb
jae
shll
pop
push
lret
adc
imul
call
les
mov
adc
dec
into
adc
fdivrp
sub
dec
cld
jne
push
call
jmp
sub
fsubl
mov
adc
or
xchg
mov
rol
pop
mov
xchg
adcl
in
mov
mov
pop
les
scas
and
inc
lods
inc
dec
or
add
aam
xchg
mov
fisubrl
xchg
adc
sub
outsl
insb
fcoml
ret
rorb
xor
mov
je
shll
ret
dec
stc
out
dec
mov
add
icebp
clc
test
or
and
in
dec
dec
mov
hlt
adc
mov
cmp
fucomip
inc
inc
mov
sub
mov
push
pop
out
jae
push
hlt
dec
or
movsb
add
push
cmp
movsl
lock
pop
mov
mov
sbb
jmp
jns
test
mov
decl
or
sbb
push
inc
popf
xor
push
ds
out
xchg
outsb
adc
add
lret
imul
dec
rcll
fadds
add
cmc
insb
pop
jns
cmp
adc
jno
add
mov
add
fistpll
fidivrs
aas
adc
adc
add
inc
mulb
repnz
sbb
mov
xchg
fistps
pushf
mov
je
xchg
subl
mov
stc
xchg
adc
or
adc
mov
push
ret
cld
pop
jmp
daa
dec
mov
and
sbb
push
inc
mov
sbb
and
lret
loop
rolb
jmp
xor
rcrb
sub
cmovno
aas
adc
dec
jns
push
cmpsb
pop
and
inc
mov
jle
cmp
leave
push
mov
sub
add
repnz
dec
and
jne
push
outsb
sarl
push
adc
adc
mov
xchg
sbb
sub
test
mov
bound
adc
inc
dec
imul
sahf
outsb
pop
fnsave
adc
xchg
add
add
lock
add
xor
pop
cmp
lock
cmpsl
cmpsl
cld
xor
incb
jne
push
popa
adc
or
xor
sar
push
repnz
dec
xor
or
add
inc
jge
dec
imul
cmp
pop
or
dec
mov
lods
ss
sbb
inc
ret
pop
or
jbe
push
popa
jb
inc
daa
dec
and
data16
push
sub
cld
lea
adc
notb
pop
cmp
pop
and
sbb
and
mov
pop
cwtl
push
std
mov
add
out
inc
outsb
inc
aas
mov
fwait
lock
test
xor
in
adcl
ret
movb
pushl
fnstenv
pop
cwtl
sub
out
add
je
mov
pavgw
push
push
push
jl
dec
push
ror
or
or
push
lret
mov
mov
jmp
jp
js
call
mov
test
sbb
jecxz
sub
push
mov
in
cmc
pop
jecxz
pop
lret
mov
sub
jl
or
adc
xor
in
sbbl
sbb
mov
mov
add
and
in
add
jp
jle
push
sub
push
sbb
test
push
inc
ret
repnz
push
push
mov
dec
push
or
jle
or
mov
push
nop
adcl
sub
adcl
inc
adc
sbb
dec
int3
push
daa
push
stc
repnz
dec
sub
and
sbb
xor
sti
or
push
dec
call
inc
jge
push
dec
clc
imul
hlt
iret
or
testb
shr
lcall
lea
ss
push
fisubrl
or
mov
inc
mov
repnz
loope
jne
or
xchg
and
lods
aaa
mov
enter
cs
rol
xlat
enter
mov
mov
push
mov
push
or
push
in
push
mov
iret
ljmp
sub
sbb
or
sbb
sbb
das
inc
or
int
inc
imul
orl
adc
adc
push
or
jmp
lcall
andl
je
loopne
test
js
int3
mov
aaa
or
adc
dec
cmp
inc
sti
imul
movsb
jmp
add
mov
add
adc
pop
mov
cmp
push
fsubrp
sbbl
adc
push
pop
loopne
je
and
adc
in
xchg
cld
and
sub
out
dec
punpcklbw
mov
lock
cmp
push
test
in
mov
in
outsl
sub
or
movsl
leave
jp
ret
enter
and
cmp
jg
das
mov
mov
sbb
dec
dec
mov
cmp
adc
mov
and
sub
sub
or
mov
push
push
jno
mov
dec
push
cmp
adc
aad
sbb
or
call
popf
dec
mov
or
xchg
xor
dec
sub
nop
mov
xor
cld
sbb
hlt
cmpsb
push
push
adc
repz
sub
xchg
stc
mov
mov
out
gs
jns
jle
xor
pushf
dec
cmpsb
stc
inc
cld
push
inc
or
adc
mov
add
or
xor
into
adc
sub
and
les
and
int3
aam
test
add
mov
ds
inc
dec
pop
mov
cltd
cs
sbb
cmp
popa
and
inc
cmp
inc
inc
inc
mov
fiaddl
inc
lock
cmp
and
es
add
test
adc
mov
cld
dec
push
jo
add
mov
out
jge
add
xor
lahf
lock
mov
cmc
clc
sub
push
adc
add
in
ret
sub
hlt
or
inc
dec
mov
rcrl
das
push
leave
ds
pop
dec
fs
mov
xchg
das
int
add
mov
enter
or
xlat
push
sub
das
clc
dec
xor
stos
push
and
push
push
std
gs
cld
sbbb
and
sbb
enter
push
lcall
or
hlt
inc
mov
push
xchg
leave
inc
adc
jmp
jmp
bound
cmp
dec
adc
sub
mov
sbb
push
jle
lea
adc
dec
push
mov
nop
mov
in
inc
push
ds
add
das
and
mov
push
mov
pop
lods
and
and
xor
aad
addl
inc
jl
add
inc
dec
jne
pop
pop
jg
js
rol
xorb
cmpsb
jae
cmp
sub
pusha
jle
inc
dec
dec
in
jmp
testb
jne
push
push
jmp
push
sub
adc
or
call
adc
ds
enter
push
push
fiaddl
xor
lds
mov
or
scas
add
int3
push
es
push
imul
or
push
or
and
iret
dec
or
or
shrl
or
or
shll
or
cmp
aad
or
sub
xlat
pop
or
sub
fstps
or
sub
fcompl
or
invd
fimuls
inc
or
push
or
add
loop
sbb
and
and
and
sub
sub
sub
sub
sub
sub
or
dec
or
cmp
icebp
adc
repnz
or
pop
or
aaa
or
sbb
notl
clc
sub
stc
sbb
test
sti
pop
mov
add
and
mov
aam
inc
sar
push
lods
push
mov
sarb
mov
shll
test
mov
jb
add
mov
adc
xchg
add
out
sbb
mulb
cmp
add
cmp
jb
mov
inc
icebp
sub
dec
mov
lea
lret
and
inc
mov
adc
sarb
and
mov
fwait
and
jge
mov
push
add
jbe
inc
and
fwait
dec
inc
dec
pop
sti
pusha
test
enter
mov
mov
mov
adc
push
mov
pop
xlat
or
inc
inc
push
add
push
inc
cmp
movsb
cmp
jge
dec
lds
push
sbb
faddl
sub
les
sbb
mov
push
mov
int3
and
nop
ror
in
jb
sbb
xor
inc
cs
xchg
insb
enter
enter
jb
cmp
dec
rolb
nop
or
sbb
cmp
add
or
adc
nop
fmul
loopne
in
cld
xor
loopne
lcall
mov
and
xchg
test
mov
dec
aaa
clc
mov
cmp
xchg
and
test
lock
jb
cltd
sbb
push
cmp
sbb
sbb
mov
clc
xchg
sbb
mov
jge
loope
or
push
rol
xchg
fidivrs
mov
sbb
push
add
and
inc
popf
rolb
adc
nop
je
add
scas
sub
js
mov
sbb
cwtl
sti
mov
or
sbb
sbb
mov
or
pusha
mov
mov
mov
lret
cmp
adc
sbb
ret
hlt
outsl
push
mov
cmpb
je
fists
inc
frstor
cmp
cld
pop
push
push
sub
and
ret
icebp
in
pop
push
and
fidivrs
mov
sub
lods
iret
xchg
rep
lds
jno
mov
adc
xor
fisttps
rep
repnz
in
mov
push
or
fcomps
movl
dec
out
adc
enter
mov
sub
add
lds
push
sbb
inc
cli
repz
sub
cwtl
cmp
adc
in
lock
mov
or
sbb
sbb
lea
cmp
fidivrl
pusha
or
test
xor
xchg
xchg
adc
mov
or
push
lea
adc
xor
push
push
pop
add
sub
ret
mov
jne
pop
imul
dec
adc
add
call
bound
and
ret
in
js
inc
in
test
mov
mov
negb
shll
and
pop
enter
mov
mov
mov
rclb
xchg
add
ja
add
rorb
push
cltd
mov
pop
mov
adc
cmp
out
xchg
pop
dec
sarb
mov
and
cld
jmp
movb
lds
push
or
add
add
mov
cld
stc
add
sub
and
std
push
cmp
pop
sbb
push
scas
or
jnp
inc
adc
mov
xor
pushf
cmpb
scas
je
jecxz
inc
sub
test
imul
cmp
cld
push
mov
cs
pop
sub
mov
mov
inc
scas
gs
add
dec
inc
inc
les
push
adc
xor
ret
jle
dec
shlb
add
push
jo
inc
sti
jns
and
push
stc
dec
rol
or
push
inc
dec
es
lods
push
out
xor
nop
in
jae
inc
mov
sub
sbb
outsl
sbb
add
out
dec
pop
in
shll
mov
es
andl
mov
nop
fwait
call
jecxz
dec
fsubrs
and
out
inc
sbb
outsb
sub
sbb
jnp
arpl
mov
mov
push
cltd
add
lock
push
push
dec
sbb
sub
hlt
inc
sarb
jl
cli
test
mov
test
cmpl
inc
call
adc
lret
and
jno
inc
add
and
les
cmp
mov
and
loop
xor
push
lods
xor
xor
lahf
into
fisttps
test
and
out
sub
movsl
push
fwait
les
icebp
push
mov
mov
and
pusha
sub
jo
fistpl
bound
std
xchg
fsts
insb
mov
xor
rorb
out
incl
sub
sub
out
xorl
jmp
push
cltd
popa
or
xor
dec
fwait
lock
pop
xchg
sbb
push
cmp
dec
dec
mov
push
inc
stc
jb
dec
xor
adc
test
and
sub
cli
mov
inc
sub
pop
loope
inc
rcll
das
push
imul
imul
and
jge
adc
ja
jge
rclb
dec
hlt
jmp
icebp
jmp
pop
addb
push
adc
pusha
cwtl
stc
inc
test
mov
mov
int
jg
adc
test
call
cmpl
clc
cltd
push
pusha
dec
stos
xchg
push
jnp
dec
mov
pop
sub
mov
pop
in
cwtl
jp
andl
or
cld
adc
je
mov
or
mov
movsb
out
cmp
ja
es
stos
mov
imul
std
pusha
pop
xor
mov
dec
mov
mov
js
adc
and
and
add
cwtl
imul
jae
movsb
sbb
inc
fsub
loopne
adc
pop
rolb
aam
cmp
into
xor
adc
lock
and
rcr
cmp
loop
leave
sbb
adc
es
call
adc
fs
mov
iret
sti
cmp
in
and
call
int3
and
adc
add
pop
faddl
lahf
mov
pop
loopne
xor
sti
jae
and
sahf
jbe
out
push
mov
jp
clc
scas
insl
data16
scas
out
je
add
dec
addl
mov
call
or
leave
jl
adc
cmp
xor
mov
add
mov
mov
jo
daa
fwait
mov
ret
and
mov
inc
jmp
cmpb
xchg
mov
js
jmp
cmpsb
inc
dec
sub
call
div
sbb
mov
inc
inc
inc
push
sub
dec
andl
push
repnz
push
lock
mov
dec
in
bound
sub
mov
mov
push
pushl
cltd
adc
ret
ret
ja
shl
mov
js
mov
cmp
dec
dec
sbb
push
mov
jbe
push
dec
push
ljmp
cld
shlb
scas
inc
push
je
orl
xchg
pop
mov
mov
cmp
push
in
ja
daa
pop
test
sub
dec
inc
jecxz
and
inc
add
test
and
cmp
shl
or
fcoml
lcall
or
push
and
mov
test
adc
mov
mov
cmp
add
sub
xchg
imul
incb
jb
mov
mov
inc
js
movsl
sbb
loop
sub
push
add
pop
mov
xchg
sbb
ljmp
xor
jg
lret
or
mov
xor
xor
and
mov
push
inc
jbe
pop
jnp
push
hlt
call
mov
xchg
ret
mov
xor
push
xchg
jge
mov
mov
fisttpl
or
loopne
jle
pop
out
adc
mov
inc
int
test
ret
or
push
push
add
push
pop
cltd
idiv
xor
sub
inc
jmp
dec
or
or
js
push
or
out
jmp
andb
pop
mov
inc
xor
xor
sub
cltd
or
push
sbb
sgdtl
mov
in
enter
or
test
inc
mov
lods
enter
push
stc
add
add
or
add
add
lock
addr16
or
mov
dec
shlb
jecxz
call
or
mov
mov
ja
imull
dec
insb
loope
scas
les
test
xchg
lock
hlt
nop
cltd
fisubs
mov
in
mov
or
xchg
pop
daa
mov
fwait
push
mov
push
popf
in
shll
int3
push
movsb
xor
aas
push
sbb
and
or
call
aaa
clc
outsb
loope
icebp
sbb
dec
mov
sbb
and
adc
fsubrs
xor
dec
adc
push
mov
inc
and
pop
xchg
and
or
push
mov
cmp
data16
leave
mov
inc
js
lcall
push
xor
push
sbb
push
jg
cmc
and
test
sti
xchg
inc
sbb
cmpsb
xor
xor
sub
loope
lea
xchg
out
and
adc
xchg
push
push
dec
into
ficoms
loopne
pushf
adc
test
jmp
les
std
xchg
xchg
test
jmp
popa
out
rorb
jo
add
hlt
hlt
push
xchg
pop
cmp
adc
add
mov
jae
mov
cmc
adc
xchg
dec
and
mov
shlb
adc
pop
push
fwait
xor
jne
mov
dec
in
rorl
pop
xor
add
jmp
aam
fsubr
xor
or
mov
mov
fs
rcrl
loope
push
or
rep
subl
fdivl
fistpll
movsb
enter
inc
mov
fsubrs
fsubl
das
test
jnp
mov
cli
xor
sub
sbb
inc
xor
lods
mov
shll
cmp
pop
notb
movl
mov
or
push
ljmp
pushf
and
bound
ja
sub
in
or
out
addb
leave
pop
pop
add
sbb
in
pushf
push
sbb
and
enter
or
pusha
mov
bound
sbb
push
or
and
pop
and
and
and
pop
bound
pop
hlt
cmp
fwait
movsb
rcll
mov
cld
inc
push
cmpsb
jns
cmp
je
hlt
in
push
sbb
and
mov
dec
sbb
push
mov
imul
mov
and
jae
test
adcb
or
jne
adc
mov
repnz
mov
push
sbb
push
push
sbb
jg
or
sub
mov
fs
out
sub
mov
xchg
xchg
or
push
and
adc
or
je
mov
cli
xor
adc
push
sbb
sbb
test
push
pop
cmc
clc
and
rorl
les
sbb
pop
cwtl
ja
mov
movsb
cmpsl
call
mov
ljmp
lret
imul
test
call
in
enter
ror
sub
and
sbb
add
or
daa
push
loop
inc
cld
fisubrl
orl
test
insb
les
xor
xchg
sbb
jo
psubsb
mov
sub
nop
pop
inc
inc
sub
cmpl
repnz
sub
daa
mov
mov
pop
xchg
in
mov
mov
dec
add
shlb
mov
push
icebp
cld
adc
enter
fsts
mov
dec
adc
xchg
mov
push
or
adc
test
insb
add
mov
mov
push
cld
mov
adc
sbb
mov
ret
push
pop
sbb
push
and
cmp
xor
sbb
shl
inc
xchg
shl
fs
loope
or
or
push
movsl
and
push
jl
cmp
daa
call
push
adc
dec
adc
push
xchg
mov
add
pop
sub
sbb
adc
and
jle
aaa
sbb
call
je
xor
out
push
add
jb
cmpw
das
jne
pop
inc
adc
mov
lret
cmp
pusha
push
jge
lea
jecxz
adc
xor
mov
xor
inc
mov
sbb
add
pop
push
stos
popa
or
xor
mov
sub
dec
aam
cs
pop
pop
dec
lods
in
std
js
jne
nop
xor
jbe
pop
xor
adc
int
pop
lret
int
inc
add
insl
push
sbb
and
sbb
out
xchg
sti
sbb
sub
popf
dec
faddp
jmp
lock
test
aam
das
bound
adc
lock
or
add
adc
pop
lods
xchg
enter
aas
cmpsb
sbb
xor
jne
bound
mov
xchg
pusha
inc
mov
add
mov
fimull
dec
popa
mov
xchg
clc
push
sbb
stos
test
out
into
in
xor
sarb
enter
test
push
and
adc
aam
int3
xchg
repz
ja
adc
inc
xor
xchg
dec
lods
xor
jno
ds
pop
or
sub
call
adc
add
cwtl
cmp
jae
jmp
enter
mov
flds
push
fcoml
sub
or
adc
jl
shr
and
jg
mov
insb
or
sbbb
sbb
loopne
test
bound
add
or
cmp
and
das
lock
pop
rol
pop
jge
sub
stos
sub
bound
into
dec
mov
pop
mov
inc
push
sarb
fadds
jae
lods
fs
fcoms
inc
pusha
jecxz
or
push
add
dec
in
jae
mov
cld
and
cmp
xorl
xchg
insb
push
xlat
icebp
adc
rcrb
pop
pushf
dec
or
mov
inc
imul
sarb
repz
imul
xor
je
mov
mov
push
js
xchg
cmp
pop
mov
dec
bound
std
orb
xchg
sbb
xor
inc
dec
add
inc
arpl
inc
pop
push
dec
mov
mov
sub
pop
popa
ret
or
sub
lcall
rclb
dec
adc
adc
or
mov
out
popl
adc
out
mov
clc
push
and
xchg
xchg
rclb
adc
scas
int
sbb
and
inc
call
xchg
push
jb
test
in
mov
pop
mov
inc
add
test
push
out
stos
cmc
mov
and
leave
xor
movsb
pop
inc
and
add
cmpl
je
mov
test
mov
out
sbb
paddsb
pop
and
push
fistpll
jge
jle
or
mov
jb
xor
xchg
std
lret
out
cld
pop
or
inc
sbb
sbb
and
adc
xchg
pop
sbbl
dec
in
push
outsb
xchg
xchg
sbb
and
push
adc
xchg
inc
or
test
inc
xor
fistpl
or
aam
or
xor
jmp
mov
adc
call
jmp
je
sub
hlt
out
xor
scas
push
ja
faddl
call
sub
mov
add
sahf
fistpll
fmull
sarb
xchg
mov
mov
push
mov
add
push
cmp
mov
imulb
inc
adcb
pop
movsl
dec
mov
adc
push
hlt
enter
cld
and
xor
sbb
inc
inc
inc
adc
push
movzwl
addb
inc
addl
pop
call
lock
or
addl
xor
and
xor
ja
negb
fcoms
fildl
jmp
mov
pop
add
inc
stc
outsb
mov
mov
cmc
das
xor
enter
pop
fdivrs
push
call
mov
jne
in
insb
imul
popf
jns
add
imul
jo
rorl
push
xchg
testl
xor
popa
into
int3
dec
push
outsl
les
inc
adc
pop
mov
or
dec
adc
push
popf
mov
icebp
mov
xchg
xchg
push
fcoms
add
add
push
das
add
adc
xchg
shlb
adc
xlat
add
mov
jl
xor
repz
inc
or
push
mov
mov
lods
push
or
mov
fs
clc
jb
push
sbb
fadd
out
ss
inc
std
into
xchg
cmc
mov
adc
adc
add
and
or
cmp
je
inc
add
and
lea
and
ljmp
outsb
inc
jae
or
sub
jle
mov
push
iret
shr
pop
cli
test
rolb
add
adc
mov
jbe
rolb
push
cmp
je
loopne
ror
jb
jmp
dec
push
adc
sbb
add
mov
xor
jb
in
cmpsb
mov
iret
mov
push
popf
in
mov
aam
mov
dec
inc
adc
sbb
hlt
stos
cmp
push
push
mov
and
sub
dec
adc
and
int
stos
push
out
inc
and
repnz
dec
adc
cmp
inc
into
mov
arpl
and
adc
or
and
or
pop
xchg
sub
mov
push
mov
mov
sbb
mov
mov
leave
and
aaa
shl
mov
fdivr
inc
push
stos
cwtl
loop
hlt
call
push
pop
adc
sub
mov
call
or
mov
adc
push
mov
gs
push
inc
bound
into
adc
sbb
hlt
xor
xor
loopne
inc
and
add
adc
sub
mov
jbe
invd
push
xor
dec
pop
adc
test
clc
push
fs
inc
pop
push
int3
mov
xor
jp
pop
inc
adc
adc
push
ret
insb
and
sbb
mov
out
and
aaa
scas
mov
mov
dec
inc
stc
dec
test
or
stc
add
mov
mov
jle
add
sar
jne
push
xchg
sbb
icebp
jno
cli
sbb
pop
call
pop
stc
testl
xor
sub
and
mov
pop
mov
and
sbb
or
test
cmp
aam
inc
cmp
rdtsc
mov
shr
clc
adc
lea
and
mov
adc
in
cs
xchg
lock
sarl
sbb
inc
pop
and
inc
xor
adc
adc
pop
xor
lret
adcb
add
lods
adc
lock
enter
xor
fldenv
mov
pusha
daa
inc
shrb
ds
les
shlb
das
stc
dec
aad
push
adc
and
and
rclb
mov
cmp
pop
or
lret
sub
lock
sub
adc
das
gs
mov
add
jo
call
daa
jp
xchg
cmpsl
sbb
and
cmp
movsl
pop
fistpl
filds
scas
xchg
outsw
daa
mov
rol
adc
sbb
push
pop
mov
mov
inc
adc
pop
ss
dec
push
sub
mov
mov
push
enter
clc
push
adc
mov
sbb
jg
inc
stc
cld
sub
pop
inc
push
dec
mov
in
pop
cmp
mov
movb
das
addr16
mov
idivb
js
subl
inc
pop
leave
mov
xchg
xchg
lret
or
xor
or
in
sti
inc
and
sbb
mov
jle
push
jbe
xor
dec
adc
xlat
add
test
fldcw
jns
or
out
mov
cld
out
push
stc
leave
jg
mov
and
mov
cltd
jmp
ds
jmp
out
sbb
movsl
sbb
popf
enter
pusha
push
cmp
jb
dec
lods
lahf
xor
sbb
scas
dec
sub
insb
ret
xchg
mov
push
sub
sub
xchg
push
popa
mov
les
mov
push
xor
mov
sub
xor
flds
jbe
push
cmp
sbb
cmp
inc
add
adc
sbb
shr
enter
mov
sub
xor
xor
inc
inc
mov
fldl
xchg
sbb
stos
enter
call
xchg
adc
cmpb
jns
mov
es
pop
icebp
mov
icebp
jmp
and
jmp
add
lret
popa
repnz
lahf
adc
test
and
jecxz
sbb
leave
adc
jae
jnp
sub
xor
cwtl
inc
lods
or
xchg
sbb
shl
add
jecxz
es
push
in
out
dec
cmp
cmc
xchg
xchg
xor
push
jmp
adc
adc
lds
add
ret
mov
sbb
and
cli
sbb
psubsb
or
xor
adc
sub
mov
ret
test
push
mov
lods
pusha
js
sti
mov
pop
lods
add
mov
jno
das
shlb
daa
mov
sbb
jg
xchg
mov
or
push
sbb
test
or
cwtl
cmp
out
inc
inc
mov
and
push
and
mov
cmpl
cwtl
out
inc
or
dec
mov
or
sbb
and
and
inc
cmp
and
pushf
rorb
adc
sub
pop
dec
and
adc
std
insl
rcl
test
je
and
call
dec
jmp
jmp
push
and
xchg
hlt
xchg
adc
orl
mov
mov
out
xor
mov
mov
cmp
dec
je
adc
subps
pop
jle
xchg
call
enter
cmp
sub
jbe
mov
adc
es
enter
mov
jne
adc
sbb
adc
sub
addl
cs
popf
loope
pop
or
or
repz
cmpl
push
in
fidivs
inc
or
xchg
sarl
and
adc
adc
add
push
add
aam
mov
jg
sub
movsl
jg
imul
mov
sub
ja
data16
push
push
xor
leave
or
cmpsb
sub
mov
test
push
pop
add
inc
cld
sub
cltd
mov
jmp
notb
jmp
push
stos
xchg
push
sarl
mov
flds
adc
mov
std
and
ljmp
pop
mov
sub
mov
aad
jbe
and
rcrb
ss
pusha
inc
aam
xchg
xlat
mov
mov
jl
repz
sub
sub
adc
or
jne
cld
cmpsb
and
add
aad
lds
or
xchg
aam
enter
xor
mov
xor
pushf
and
adc
jno
insb
cli
add
pop
cld
add
clc
call
jge
push
mov
adc
inc
adc
mov
imull
int3
loopne
icebp
movsl
inc
pop
mov
mov
xchg
dec
ficoms
push
je
insl
shr
pop
cmp
sbb
pop
pop
mov
je
or
push
sbb
pop
das
fnsave
mov
sbb
adc
hlt
sarb
test
add
cmp
mov
adc
or
xchg
jo
test
sahf
lret
or
dec
iret
lds
addb
mov
call
jge
adc
lahf
add
add
daa
rorb
inc
dec
push
xchg
fwait
inc
or
cmpsb
pop
or
or
adc
shr
mov
js
scas
push
mov
hlt
push
pop
add
inc
aam
adc
add
mov
popf
push
enter
jo
and
in
mov
xchg
push
rorb
test
xchg
mov
rcrb
jb
fs
push
stc
or
mov
or
ja
neg
cmpsb
or
inc
or
push
adc
dec
repnz
insl
or
add
and
and
testb
out
lock
mov
aad
xchg
test
push
and
jo
jnp
push
aas
push
popf
ret
push
mov
leave
cwtl
add
sub
jl
add
push
shlb
and
or
push
and
cld
jmp
jo
or
inc
inc
nop
jge
fs
jp
call
push
pop
cmpsb
adc
mov
loop
xchg
inc
pop
test
adc
adc
andb
push
push
cmp
lock
je
xchg
sti
inc
and
aam
jns
test
sbb
dec
fcmovne
mov
rcl
jmp
and
mull
aad
idiv
vpcomq
aad
add
into
rcl
into
test
fstl
aad
jo
shlb
push
mov
popf
out
cmpsl
pusha
xchg
mov
call
and
aam
gs
push
xor
inc
cli
mov
xor
push
insb
and
outsb
fsts
fwait
cmp
lret
xor
add
xor
test
cld
and
mov
loope
cltd
jg
lods
and
push
sbb
xor
lret
inc
ss
push
lcall
addb
das
push
pop
data16
mov
xchg
xchg
lret
push
cltd
inc
adcb
push
cmp
outsl
or
je
push
sti
xchg
and
rolb
or
jge
idivb
push
add
fsubr
mov
repz
sub
push
cwtl
mov
push
pop
insb
push
bsf
addr16
es
xchg
out
xchg
pop
push
cltd
outsb
push
jl
xor
inc
mov
lahf
adcb
cmp
pop
jne
add
jbe
das
push
inc
call
xchg
ljmp
enter
jnp
adc
popl
mov
iret
mov
lret
mov
pop
sub
inc
pop
call
inc
imulb
ja
pushf
add
leave
mov
mull
and
or
push
shl
xchg
ss
ret
filds
mov
push
sub
xor
pop
sahf
jg
inc
mov
aas
or
shll
mov
jl
adc
imul
ret
cmp
les
jb
or
mov
lods
pop
popf
xor
and
test
adc
add
inc
out
push
sub
mov
out
lret
mov
sub
loopne
punpckhwd
adc
xor
sar
test
xchg
int3
fiadds
std
sub
ret
sbb
and
mov
mov
lock
sub
xor
xor
adc
jnp
pop
adc
cs
inc
les
adc
mov
push
repz
enter
jno
push
pusha
jl
push
call
or
inc
cmp
mov
jne
jne
cmpps
scas
mov
lret
add
xchg
call
or
xchg
dec
sbbb
dec
out
pop
fmull
cmpsl
out
andl
in
pusha
dec
mov
and
leave
push
outsb
dec
bound
push
rep
push
mov
inc
adc
ljmp
fcomps
or
das
add
sub
gs
add
roll
xchg
bound
adc
push
jge
push
incb
xchg
roll
les
imul
sbb
lods
pop
das
sub
lock
in
lret
js
shrl
orb
jnp
adc
inc
mov
pop
orl
scas
inc
inc
push
adc
adc
test
xor
jg
cmp
nop
ret
sub
sub
add
push
sub
test
or
add
inc
xor
pop
xor
sbb
mov
sbb
movsb
mov
add
call
lock
and
sbb
clc
jnp
int3
daa
cmp
dec
and
adc
inc
push
jmp
xchg
pop
or
pop
push
sbb
ficoml
popl
fcoml
cwtl
jo
stc
xchg
lahf
fld
ficoml
and
lret
add
add
or
push
add
add
mov
pop
lahf
imul
adc
jnp
rol
orl
adc
jge
cmp
orb
daa
decb
ja
sbb
stc
sub
dec
int3
jecxz
cwtl
loop
sub
push
aad
pop
loop
fcmovnu
and
std
push
or
fbstp
js
push
adc
mov
sbb
add
inc
cmp
call
add
pop
sbb
and
adc
cwtl
sbb
inc
movsb
and
daa
mov
sbb
xorl
jge
cmp
adc
push
xor
adc
popa
sbb
subps
sbb
mov
dec
std
sbb
sub
in
sub
sbb
daa
outsb
jns
push
test
jmp
lods
jg
mov
xchg
lock
test
mov
push
inc
loopne
inc
adc
out
and
and
xor
dec
sbb
push
aam
jle
and
xor
les
sub
lock
icebp
sbb
aam
test
xor
lods
test
js
outsl
or
inc
or
sbb
inc
insb
mov
int
sbb
pop
sbb
pop
jmp
jb
mov
cmp
adc
push
bound
mov
int3
dec
js
xchg
push
xor
xor
sbb
dec
sbb
inc
loope
lock
and
push
xor
cld
out
mov
or
xor
xor
sub
loope
inc
push
dec
enter
sub
dec
push
xor
mov
and
gs
bound
or
daa
and
xchg
cmp
daa
daa
js
movsb
jb
fcoms
stos
xor
int3
mov
mov
repz
inc
and
nop
movsb
call
mov
enter
in
push
mov
mov
cmp
xor
push
inc
or
sbb
sbb
in
xor
mov
shlb
nop
xchg
sub
nop
pushf
lds
dec
and
add
xor
adc
or
mulps
adc
inc
sub
xor
mov
adc
dec
out
movsl
add
mov
shlb
mov
loopne
ret
lock
inc
xor
cld
xchg
nop
test
and
or
inc
and
fs
sub
andb
mov
pop
inc
or
dec
xchg
and
push
in
sbb
mov
and
adc
les
xor
xchg
and
mov
bound
movsl
sbb
and
mov
adc
or
xchg
and
fs
fists
or
fnsave
or
xchg
sbb
in
inc
stc
in
and
adc
push
and
add
jo
test
and
nop
js
loope
inc
xor
sbb
leave
movsb
or
xor
mov
jo
movsl
xchg
and
gs
or
and
jns
movsb
pop
lock
adc
imul
mov
xor
in
jb
cmp
sbb
mov
mov
adc
les
es
jno
inc
adc
sub
inc
xor
inc
sub
sbb
or
xchg
movsl
rorl
enter
xor
or
inc
xor
les
cld
popf
mov
inc
xor
inc
add
jno
xor
adc
sub
mov
enter
xor
in
sahf
cld
and
int3
jbe
xor
push
add
dec
repz
dec
sbb
mov
sub
or
sub
je
cmp
push
and
adc
xor
xchg
pushf
cwtl
arpl
xor
test
sbb
or
inc
in
mov
pusha
sbb
xor
or
xor
nop
sbb
xchg
je
nop
mov
sbb
xor
sbb
dec
inc
int3
xchg
jg
or
call
in
and
fmull
mov
mov
sbb
mov
jl
mov
dec
xor
cmp
push
inc
loopne
fmull
out
mov
seta
ja
mov
aam
call
cmpsl
dec
adc
gs
ja
adc
pop
xchg
jno
or
test
js
push
ljmp
addr16
adc
lret
mov
and
xchg
inc
test
dec
je
clc
or
mov
xor
sbb
les
jae
xor
cld
or
add
mov
jmp
in
arpl
and
xor
or
test
xor
push
mov
push
fsubs
and
je
lock
in
popa
test
sbb
loope
mov
sahf
addr16
in
cmp
call
or
scas
call
les
xor
dec
pop
nop
push
pop
popf
push
xor
hlt
mov
or
test
add
cwtl
push
and
inc
outsb
dec
pop
or
inc
push
stos
and
call
mov
add
sbb
aam
push
pop
popf
or
mov
mov
jmp
inc
imul
lcall
xor
jno
or
test
int3
mov
mov
fs
sub
int
enter
cmp
adc
and
les
ljmp
call
stos
push
inc
xor
mov
std
in
sbb
mov
mov
inc
cld
ja
xor
aam
inc
push
mov
adc
add
adc
loop
sbb
jmp
or
inc
adc
xchg
sub
addb
push
sub
adc
push
shll
or
stos
cmp
or
lods
adc
imul
cmp
insb
push
das
lock
pop
mov
out
and
loope
fcompl
push
push
push
pop
shlb
sbb
andb
cmp
aam
lock
jmp
and
xchg
pop
xor
loope
negl
pop
mov
xchg
mov
and
dec
clc
int3
fiadds
imul
adc
jge
jg
fucomi
jae
ret
mov
ja
push
push
mov
push
cmp
je
or
loopne
add
enter
rclb
cmp
mov
jno
shlb
jl
cli
inc
pusha
dec
or
sti
mov
or
ret
inc
cmp
cmp
fdivrl
or
pop
je
adcb
cmp
and
mov
in
adc
adc
inc
add
sbb
mov
jp
cmp
adc
adc
pop
inc
fisttps
mov
dec
cmp
idivl
pop
pop
divb
movsbl
sbb
int
jb
popa
sbb
jp
pop
sub
sub
ret
test
jmp
adc
adc
jge
jle
clc
push
lds
cmp
or
divb
rcll
loopne
test
hlt
out
pop
sub
sub
addr16
dec
mov
popf
adc
pop
int3
sahf
push
jg
lds
pop
add
adc
fsubrl
pop
outsl
jb
xchg
cmc
test
or
sub
add
jle
rol
clc
popf
jecxz
xchg
sub
xchg
lea
dec
push
adc
mov
jo
push
clc
jmp
mov
dec
rclb
mov
dec
sub
xchg
add
out
sub
push
push
mov
mov
push
out
push
push
int
sub
das
adc
mov
cmp
jg
add
inc
xchg
jno
push
dec
lea
shlb
sbbl
das
add
xor
xor
inc
jmp
inc
loopne
sbb
lock
lret
addl
xchg
sub
sbb
into
sub
mov
cmp
lods
lret
leave
lods
push
sub
dec
mov
push
mov
and
xor
cmp
je
rol
pop
push
imul
int3
add
jmp
pop
rorl
push
jnp
push
push
jg
jmp
hlt
lds
jle
push
cli
bound
fists
pop
pop
sbb
sub
sbb
add
lmsw
in
or
scas
jbe
mov
mov
mov
icebp
sub
mov
popa
hlt
leave
pop
jg
adc
jno
insb
jne
lock
jns
inc
mov
ret
push
jg
mov
shrb
stc
mov
ss
sbb
push
inc
add
mov
sub
push
push
stos
lea
sti
into
es
sbb
push
jae
lds
mov
je
insl
xchg
mov
lcall
hlt
sti
test
outsl
je
mov
nop
daa
shl
xor
jl
ret
inc
push
add
push
dec
xor
push
pop
sbb
mov
data16
je
sbb
es
mov
cmpsl
and
and
mov
push
insl
or
in
repnz
pop
or
jg
or
xchg
and
inc
push
jecxz
divb
mov
bound
adc
jne
jae
or
dec
inc
in
stc
mov
test
icebp
lods
pop
icebp
mov
lret
push
push
pop
mov
sbb
dec
pop
and
sub
fsubs
adc
cwtl
sbb
sti
jle
adc
ret
inc
and
movsb
xchg
mov
or
xlat
sub
vcvtss2si
xchg
test
scas
push
repz
daa
pop
lods
cltd
xor
inc
add
adc
inc
cwtl
imul
mov
lods
inc
bound
imul
xor
cld
or
mov
push
aas
test
loop
jmp
push
inc
fildl
sbb
adc
xorb
xor
clc
cltd
push
xchg
jmp
and
or
adc
ja
mov
dec
push
in
aas
mov
xchg
jb
dec
fsubr
jnp
or
inc
lret
pcmpgtb
lods
lock
and
dec
jb
or
add
add
pop
xor
push
push
jg
mov
adc
in
dec
adc
cltd
sbb
push
adc
pop
aam
cltd
pop
adc
jae
dec
movb
daa
fidivrl
push
pop
daa
pop
xchg
and
pop
and
movsb
and
test
or
add
je
mov
fucomi
sbb
cmp
push
and
sbb
adc
and
test
dec
int
icebp
cli
xlat
test
adc
dec
inc
or
test
sub
xor
je
cltd
scas
sbb
adc
and
nop
test
jne
sysret
jbe
lods
out
dec
outsl
iret
in
jno
sub
insl
je
lea
cmp
mov
inc
dec
mov
jle
and
pop
punpckhbw
mov
mulb
mov
or
pop
sub
lock
stc
sbb
sbb
adc
pop
adc
cld
packsswb
pop
out
dec
add
mov
xchg
les
adc
jp
in
mov
mov
rorb
inc
in
mov
dec
ret
and
inc
mov
or
add
add
push
add
push
or
das
mov
cmp
add
and
icebp
sti
es
outsb
adc
hlt
jge
sub
adc
outsl
out
and
sub
je
dec
sub
scas
push
push
xor
cld
adc
cmp
test
mov
jae
push
inc
or
inc
push
inc
cmp
andl
lock
cmp
ret
aas
sub
aas
and
adc
aas
or
cld
lds
xchg
pop
call
adc
call
mov
pop
enter
and
je
insb
mov
push
loope
sbb
and
adc
mov
cmp
dec
stc
push
inc
shlb
mov
push
mov
pop
xchg
imul
jle
xchg
je
imul
dec
lret
sti
dec
rcrb
push
inc
lods
add
daa
pop
scas
pop
and
call
sub
stos
pop
lea
or
lahf
sub
jbe
or
cmp
and
cwtl
fiadds
jmp
push
cmpsb
push
dec
mov
mov
cmp
cld
test
and
xor
pop
pop
and
and
pop
ret
jg
mov
call
pop
mov
cmp
mov
sub
sbb
xlat
negb
add
mov
or
mov
pop
mov
push
sub
xor
mov
pop
faddl
pop
or
jle
push
adc
loopne
pop
das
into
in
adc
cli
jg
out
and
inc
mov
imul
push
in
dec
push
xor
cld
mov
mov
in
and
xor
movsb
xchg
push
insb
rolb
into
cmp
push
loope
fcoml
push
push
movsl
dec
push
push
adc
rclb
aas
add
adc
mov
cmp
sub
adc
cld
mov
stos
adc
out
leave
lret
pop
xlat
subl
mov
sub
das
pop
add
push
mov
xchg
lock
int
cld
divb
iret
negb
dec
push
loopne
cmp
xor
pop
mov
adc
icebp
adc
push
add
sub
outsl
insl
or
pop
je
push
jb
mov
sub
adc
lods
jns
or
adc
rsqrtps
sbb
push
in
adc
sbb
pop
adc
xchg
cmp
inc
imul
test
icebp
xchg
das
cltd
aad
and
call
add
dec
cmp
je
jge
fmull
sbb
test
jmp
and
out
sbb
pop
cmp
leave
es
cmc
jmp
mov
xchg
inc
shll
xor
push
adc
icebp
or
sub
sub
push
push
mov
push
sbb
sbb
flds
push
pop
outsb
xchg
sti
leave
and
outsb
dec
mov
icebp
mov
fadd
add
fs
in
stos
mov
inc
inc
or
clc
pop
pop
mov
inc
push
push
es
fsubrl
lea
inc
cmp
insb
stos
xchg
imul
out
adc
mov
inc
push
and
mov
adc
or
pop
xlat
cmp
push
add
push
pop
inc
lcall
stc
jg
movsb
icebp
daa
inc
fiaddl
jl
mov
and
mov
loope
ret
das
cwtl
lds
xor
mov
adc
sub
xchg
push
or
shlb
ds
outsl
push
and
aam
mov
push
fistl
add
mov
in
icebp
dec
or
call
loopne
mov
adc
notb
jns
adc
sbb
and
into
sbb
sbb
push
sub
sbb
and
inc
or
inc
fmul
jnp
sbb
xchg
sub
enter
sub
sub
xor
sbb
sahf
adc
enter
xor
or
fidivl
sbb
xchg
mov
and
mov
nop
enter
repz
bound
cmp
or
test
dec
mov
and
or
inc
mov
inc
push
sub
loop
cmp
push
sub
adc
and
int
sub
jbe
push
adc
or
xorl
or
movsl
xchg
push
jb
sbb
scas
inc
mov
inc
call
ret
pop
xor
cmp
adc
xchg
jg
sub
shl
icebp
mov
xor
je
cmp
loopne
add
mov
xchg
mov
into
fmuls
inc
leave
test
adc
jbe
imul
cltd
inc
cwtl
or
mov
or
push
jl
cmpb
ret
sub
sub
nop
jo
into
aad
jge
push
xchg
sbb
or
xor
lahf
jbe
and
fs
cmp
sbb
pop
les
jbe
stc
xlat
and
xor
mov
xlat
mov
inc
or
mov
jnp
pop
je
dec
push
add
or
xor
and
push
jne
and
mov
jmp
mov
inc
dec
and
adc
mov
inc
mov
or
or
enter
sbb
rorb
push
xor
or
jle
in
mov
sub
pshufw
xor
lods
pop
out
push
dec
test
jne
loope
cmc
popf
dec
dec
aam
pop
aas
inc
and
nop
lods
xorb
lret
sub
jne
gs
or
ret
xchg
jne
or
pop
or
pop
test
ret
mov
call
mov
enter
repnz
cmpsb
aaa
and
sahf
xlat
jno
mov
xor
pop
loope
sub
adc
outsb
shll
mov
popa
adc
loopne
lcall
cmpsb
hlt
mov
js
xlat
push
sub
pushf
xchg
mov
sub
loop
mov
pop
push
sub
adc
mov
dec
xor
in
cmp
push
lds
int3
and
jno
and
cwtl
cld
ficompl
inc
push
fsubp
jae
or
dec
sbb
inc
fbld
in
xor
shl
aas
xor
decb
sbb
jbe
lods
leave
jne
add
movd
sbb
and
adc
lods
lods
mov
mov
sbb
adc
stc
cmpsl
push
mov
push
xor
add
leave
je
call
es
xor
cwtl
stos
negl
clc
sub
cmpsl
jle
xchg
pop
dec
outsl
pusha
inc
enter
lock
and
mov
outsb
aad
and
xchg
inc
imull
sub
and
cmp
push
into
sub
call
add
mov
lea
aam
dec
bound
loopne
inc
leave
xchg
lock
cmp
jno
shrl
lds
xchg
leave
sub
cmp
xchg
mov
cmp
insb
int3
add
jbe,pt
lea
das
pop
mov
xchg
inc
add
ds
or
rcrb
mov
sub
add
mov
adc
mov
cmp
scas
inc
add
mov
repz
loopne
push
or
or
es
test
test
in
mov
inc
dec
out
pop
pop
jle
mov
xor
jmp
lea
push
add
mov
sbb
movl
jmp
and
test
xchg
or
roll
shr
repz
iret
call
and
mov
or
ret
int
xor
enter
or
sub
push
inc
imull
rorl
add
xchg
add
imulb
and
pop
nop
movsl
clc
shlb
adc
jecxz
sub
push
lea
ds
movsl
cmp
cld
xchg
push
orl
add
push
les
pop
lods
mov
sbb
xchg
sbb
dec
dec
mov
popf
out
adc
fcmovnbe
and
stos
mov
mov
adc
cmpsl
fnsave
mov
sbb
mov
jo
inc
pop
xor
push
push
aas
push
mov
call
mov
dec
pop
adc
and
add
mov
xchg
pop
rcrb
dec
mov
sarb
cmp
sbb
adc
rclb
jmp
pop
pushl
jle
adc
mov
sub
add
mov
nop
add
or
inc
and
ja
mov
sub
xor
jne
int3
lret
sahf
test
stos
movsl
inc
adc
pop
sbb
xchg
or
and
and
jl
les
xor
das
xchg
mov
push
push
sbb
test
lods
mov
adc
inc
adc
pushf
les
lods
cli
inc
call
enter
xchg
out
adc
test
adc
dec
repnz
js
cmp
jb
xor
lcall
and
push
push
test
sub
int3
dec
mov
dec
sbb
add
aad
enter
inc
dec
cwtl
call
push
lahf
jmp
mov
push
call
xor
in
mov
call
gs
and
hlt
mov
inc
std
test
pop
xor
fmul
mov
enter
lea
fmulp
sbb
xor
jecxz
xchg
jne
imul
mov
shlb
sub
es
mov
cmp
stc
lods
ljmp
add
test
int3
idivl
inc
mov
call
mov
iret
pop
sbb
cmp
subb
outsb
xor
and
popf
fnstsw
push
pop
jecxz
xor
out
int3
lcall
ds
in
push
mov
pop
mov
std
and
ret
fcoms
roll
popa
sub
into
dec
cs
or
inc
xchg
adc
nop
hlt
addb
push
outsl
fs
in
jne
pop
jle
enter
push
xchg
xor
add
push
xchg
add
fldcw
pop
stos
jb
stc
clc
das
mov
ds
mov
xorl
scas
int
adc
or
mov
xchg
fsubl
mov
cmp
mov
stc
push
into
loope
or
mov
jne
mov
insl
xchg
sbb
insb
je
push
insb
fstpt
rcrb
add
dec
and
inc
push
rcrb
lret
xchg
shl
jmp
and
iret
pusha
pop
push
push
xlat
mov
mov
xor
cmp
mov
btc
std
ret
xchg
lds
sub
test
insb
sub
adc
out
stos
jmp
sub
pop
sbb
adc
pop
xchg
sub
push
inc
test
lods
lea
pop
mov
or
push
jno,pn
lock
loop
inc
push
mov
in
mov
test
enter
sub
icebp
mov
mov
inc
int3
push
call
or
add
sahf
nop
and
jne
ds
into
xchg
aam
jmp
ficompl
sti
cltd
jmp
xor
jecxz
clc
loop
fdivrs
out
sbb
xor
mov
jns
cmp
and
or
dec
jl
loop
std
pop
jno
lods
jo
mov
stc
enter
push
and
in
or
push
adc
shll
xor
es
fsts
stos
push
and
and
js
xchg
sarb
shl
call
popl
iret
and
lret
adc
sti
subb
add
popa
mov
lea
pusha
cmp
jb
xchg
cmp
mov
add
inc
lret
mov
das
adc
cwtl
inc
adc
xchg
movsb
push
popf
rorb
jmp
loop
cmp
add
int
and
sub
or
call
cmp
pop
fimuls
jmp
dec
jbe
es
pop
outsb
imul
cwtl
pop
bound
incl
pop
push
and
ja
pop
lods
int3
lahf
and
mov
mov
jge
popf
pop
xchg
lods
repnz
adc
jne
push
mov
je
add
mov
mov
bnd
push
push
je
movsb
sub
hlt
and
sub
fstl
mov
aas
loop
int
or
je
fwait
ja
cmpl
jle
mov
js
jae
mov
ljmp
cs
adc
cmp
das
je
pop
mov
xor
sbb
adc
or
pop
dec
test
pop
nop
adc
and
xchg
jae
adc
pushf
xchg
push
or
dec
orb
aas
dec
scas
add
call
push
push
and
les
cmp
push
mov
push
les
stos
movsb
push
jae
xchg
je
xchg
jne
sub
in
xchg
push
and
fs
mov
addb
mov
sub
dec
jne
ds
dec
jae
and
inc
inc
sub
mov
inc
popa
mov
aad
ss
xchg
mov
sbb
or
cmp
push
je
mov
call
pushf
sub
aas
mov
rorb
sbb
pop
cs
push
daa
call
mov
call
cmc
mov
fbld
pop
mov
jmp
sub
jne
pop
mov
call
add
inc
test
das
je
decl
push
mov
jae
popf
or
jl
std
dec
leave
test
sub
dec
test
sub
pusha
lret
xchg
test
mov
add
mov
mov
mov
or
adc
test
inc
pop
mov
add
xchg
push
data16
dec
adc
push
nop
add
enter
negl
mov
xchg
test
xor
into
cwtl
fidivs
jmp
and
xor
jbe
adc
push
adc
sbb
xor
rorb
mov
int3
mov
pusha
push
add
das
and
adc
mov
or
mov
jmp
cmp
sbb
mov
xchg
sbb
push
xor
dec
adc
movnti
xor
mov
add
cmp
or
scas
jmp
adc
inc
mov
sbb
add
shrl
les
int3
call
mov
push
cmp
mov
call
inc
fsubr
mov
leave
or
pusha
mov
adc
add
ret
test
xchg
or
or
test
gs
push
xor
adc
popa
sbb
or
inc
mov
jg
imull
ja
fildll
and
cld
xor
xchg
and
lea
jge
mov
popa
test
scas
sub
cltd
pop
or
push
in
xor
hlt
enter
cwtl
inc
sbbb
inc
sub
push
dec
dec
sub
xor
sub
mov
aad
subl
cs
lcall
cmp
aaa
je
or
sbb
js
adc
push
roll
pusha
adc
mov
add
insb
mov
lcall
les
adc
push
push
mov
xor
inc
js
ja
mov
xchg
jmp
cld
sbb
dec
call
and
call
mov
push
or
mov
push
dec
push
mov
imul
mov
pushf
arpl
or
push
leave
adc
push
shlb
sub
inc
cwtl
xchg
mov
dec
mov
cmp
pop
sbb
pushf
cmp
lock
push
pop
add
jne
or
mov
lea
inc
sub
inc
xchg
cmp
xchg
adc
nop
xchg
ret
fcoml
in
add
cmp
pop
add
add
xor
cmp
push
add
jmp
jge
cmp
icebp
loope
nop
push
scas
mov
adc
out
cmpb
or
fcmovb
not
jns
cwtl
xchg
inc
or
incl
adc
enter
gs
and
aas
jle
das
daa
enter
jmp
dec
push
or
int
adc
das
sub
imul
xor
dec
and
lret
inc
mov
enter
mov
and
int3
adc
xor
jne
push
insb
and
loopne
ret
pop
dec
inc
sub
lea
subb
jmp
jbe
or
imul
in
into
and
lahf
call
adc
mov
sbbl
stos
jge
and
xchg
ljmp
sahf
shll
test
sahf
lret
push
sbb
mov
mov
test
and
mov
call
or
pop
adc
mov
inc
adc
or
push
or
dec
mov
leave
inc
push
hlt
xchg
clc
pop
push
js
and
pop
pop
push
and
scas
lods
ljmp
mov
iret
enter
test
sub
shrl
jge
mov
jne
call
and
push
mov
mov
xor
or
movb
mov
sbb
repnz
xchg
je
andl
rcll
orps
out
ret
aam
jmp
negb
je
push
lcall
inc
add
pop
fsubs
test
xchg
jo
lret
test
fs
dec
nop
sub
roll
adc
push
jle
xchg
cmp
pop
cmp
cld
adc
test
in
xchg
mov
cld
mov
jae
or
sbb
test
xor
jns
dec
lea
nop
mov
loop
xor
sbb
daa
sbb
pusha
dec
test
lods
das
xor
xorl
mov
mov
lods
les
xor
adc
xchg
lods
pop
dec
or
cmp
sub
sbb
daa
shlb
dec
jmp
mov
sbb
fldcw
mov
ds
fisttps
sub
enter
push
mov
in
pop
pop
mov
es
jne
movsb
sbb
shll
cmpsl
aam
add
and
inc
hlt
ret
cmp
add
adc
sbb
dec
popf
mov
test
shlb
call
inc
lock
mov
adc
mov
inc
clc
or
dec
jne
fs
les
and
and
and
cmp
fdivrs
push
lret
add
dec
and
out
jne
xchg
js
je
dec
inc
mov
pop
movsl
shlb
pop
jb
pusha
insb
es
dec
loope
sar
xor
push
or
or
and
lock
inc
sbb
mov
sahf
add
ret
or
xor
cmp
add
adc
sti
adc
ss
xchg
pop
adc
xchg
loop
mov
pusha
and
xchg
lret
mov
inc
clc
sti
sub
xor
pop
cli
xor
xchg
adc
addr16
adc
jo
jmp
add
dec
push
mov
sbb
popa
imul
jns
sbb
sti
cmpsl
jge
push
addr16
pop
pop
lea
pop
out
fistps
or
jne
xchg
aam
push
gs
xlat
jmp
or
adc
mov
loopne
scas
pusha
mov
pop
dec
loop
adc
adc
xor
jnp
dec
sbb
adc
inc
and
mov
test
mov
push
adc
cmp
imul
push
cli
bound
jge
imul
sbb
xor
sbb
bound
test
lea
lea
mov
add
mov
mov
aas
push
push
or
std
mov
andl
xorb
adc
push
jne
mov
xchg
and
xor
inc
mov
sbb
sub
mov
es
adc
mov
xchg
xor
je
adc
cmp
das
repnz
pushf
bound
cli
sbb
xchg
mov
mov
dec
je
mov
xchg
push
ret
je
imul
xor
pushf
les
mov
mov
push
test
aas
orb
push
xchg
add
xor
jg
fistps
sub
popa
inc
jecxz
cmp
test
sub
aas
jne
xor
push
in
adc
ljmp
out
cs
mov
adc
das
andb
mov
lods
hlt
inc
mov
jb
int3
sbb
mov
or
pop
pop
or
push
in
xor
out
inc
push
jg
cwtl
add
sub
dec
imul
sub
lds
cltd
shlb
cmp
es
pop
push
adc
push
adc
lret
mov
pop
frstor
loopne
fimull
or
push
adc
clc
or
adc
out
int3
jle
mov
xchg
loopne
test
push
cmpsb
lret
mov
or
rolb
sbb
jge
xor
or
add
dec
mov
sarb
femms
inc
ret
and
jnp
pop
movsb
push
pusha
lahf
mov
mov
in
inc
pop
push
cmpl
addl
or
arpl
sti
leave
or
fs
xor
and
mov
sbb
idivl
push
jecxz
test
and
sti
xchg
mov
pop
sbb
inc
push
call
pop
pop
repnz
dec
sbb
jb
test
or
add
dec
mov
sbb
out
mov
and
rcll
lcall
dec
mov
pop
inc
in
into
std
or
iret
enter
and
clc
adc
mov
mov
inc
jnp
xor
fs
or
or
jne
pop
das
add
push
mov
inc
aam
iret
sub
sbb
nop
cmpb
adc
push
jmp
dec
fadds
loopne
es
and
adc
sbb
dec
adc
or
outsl
mov
mov
sub
xor
inc
xor
pop
sbb
or
dec
or
inc
insb
and
mov
or
cmpsb
nop
cwtl
mov
jge
pop
push
or
incb
loope
pop
sub
sbb
inc
int3
and
test
pusha
in
sub
inc
ja
hlt
adc
nop
jo
inc
jp
adc
or
gs
adc
push
or
mov
pop
imul
loope
mov
test
adc
mov
or
test
shlb
mov
call
xchg
lahf
jne
xchg
jo
movsb
inc
mov
pop
sbb
push
cmp
dec
xchg
stos
out
mov
in
adc
fbstp
push
sub
les
mov
test
enter
and
push
inc
gs
or
mov
pusha
cmp
inc
shlb
fsubs
and
ret
push
inc
sbb
mov
sbb
or
inc
cmp
enter
push
test
enter
and
inc
push
and
inc
mov
sbb
out
cmp
sbb
and
cmp
movsb
mov
pop
mov
sbb
inc
icebp
inc
mov
jno
sub
fcoml
inc
pop
and
mov
cmp
push
test
enter
mov
test
enter
and
inc
ja,pt
inc
pop
enter
and
and
aaa
adc
aaa
add
dec
pop
jmp
pop
outsb
xor
cli
xchg
push
in
out
rcll
push
adcb
inc
dec
and
orl
inc
push
lods
jmp
scas
or
sbb
inc
mov
inc
mov
dec
sub
pop
mov
lret
or
mov
inc
insb
sub
nop
scas
enter
sub
xchg
and
outsb
ror
clc
inc
and
and
or
or
sub
adc
mov
sbb
xor
pushf
and
adc
and
and
xchg
test
jl
sbb
adc
or
cmp
push
sbb
dec
pop
je
inc
inc
and
movsb
mov
and
xchg
int3
or
pop
cmc
gs
xor
jns
adc
and
stc
mov
test
jg
enter
imul
das
test
sub
adc
inc
mov
and
adc
imul
in
data16
dec
inc
or
cmp
clc
adc
xor
dec
pop
call
test
or
add
shrb
test
and
fs
or
insl
nop
mov
pop
xchg
and
bound
adc
or
test
and
jo
pushf
test
xchg
jb
nop
adc
test
pop
sub
inc
sub
mov
dec
mov
sbb
or
test
push
sub
xchg
dec
mov
or
cmp
sub
xchg
and
bound
lret
mov
mov
xchg
and
dec
adc
inc
sbb
jbe
stos
aaa
sbb
pop
xchg
je
nop
inc
enter
sub
inc
and
mov
sbb
or
adc
clc
mov
lock
sbb
and
adc
or
in
je
mov
test
enter
and
mov
and
rorl
push
inc
pop
and
push
mov
sbb
test
and
cmpsb
add
and
mov
out
inc
push
sbb
out
push
xor
jmp
jae
popf
sbb
cmp
mov
js
inc
adc
add
push
mov
into
pop
scas
test
push
mov
popa
outsl
add
jl
mov
lahf
lahf
mov
mov
xsha256
cmpsb
rcrl
addr16
cmpsl
sbb
enter
pop
sar
adc
or
sahf
movsl
sbb
cmp
or
loopne
sbb
push
sub
add
xor
jo
and
mov
and
pop
mov
in
mov
and
add
inc
dec
and
scas
adc
xchg
inc
insb
sbb
xor
je
and
and
inc
mov
das
sub
cmp
add
sbb
pop
xor
out
adc
inc
sub
sub
sub
xchg
inc
stos
nop
mov
das
les
sti
adc
ficompl
dec
clc
rcll
fsubl
inc
mov
repnz
lods
addb
or
inc
movsb
mov
or
in
sub
movsl
cltd
mov
mov
ret
xor
xchg
out
cmpsb
or
imul
das
insb
or
xchg
js
push
fmull
inc
dec
xchg
push
adc
sbb
mov
mov
adc
push
push
cmp
mov
loope
shlb
cmp
les
sbb
dec
and
or
xchg
rorb
inc
cmpsl
mov
push
rorb
cmpsb
mov
rolb
sub
out
xchg
and
addr16
adc
adc
adc
fistpll
fwait
and
push
adc
mov
jae
fs
pushf
and
adc
call
dec
jb
adc
out
mov
inc
and
mov
dec
add
cmp
popf
movsb
call
push
addr16
adc
adc
adc
gs
mov
xchg
les
in
inc
mov
add
push
and
into
les
adc
enter
and
and
test
push
adc
mov
mov
sbb
mov
cmp
sbb
je
adc
icebp
push
daa
mov
add
fs
inc
xor
roll
pop
push
fnsave
pop
dec
xchg
mov
or
lods
sub
cmp
ror
bound
mov
sbb
dec
dec
lods
filds
lds
clc
es
mov
xor
hlt
loope
loopne,pn
jmp
ror
inc
clc
test
sbb
or
hlt
inc
push
into
test
and
icebp
and
and
pop
data16
inc
xchg
lret
mov
nop
add
movsb
dec
shlb
test
enter
and
push
and
push
adc
mov
pop
in
cld
test
enter
push
and
test
std
or
test
call
or
ljmp
enter
sub
xchg
and
pushf
or
enter
sbb
nop
add
sub
inc
adc
add
and
adc
or
or
pop
clc
adc
mov
flds
inc
les
inc
adc
lods
adc
or
adc
mov
out
jo
and
pop
pop
mov
inc
les
or
ja
dec
pop
nop
sbb
or
push
or
test
insb
sbb
andb
jmp
or
or
in
test
les
and
adc
pusha
bound
les
or
insb
adc
and
nop
call
pop
test
and
loop
pusha
pop
adc
push
sub
push
push
adcl
bound
stc
inc
movsl
mov
and
and
and
outsb
dec
add
adc
add
mov
or
inc
xchg
enter
adc
ss
arpl
and
sub
push
andl
cmp
sub
pop
out
or
sub
sahf
test
adc
fldl
stc
lret
xor
sahf
mov
push
outsl
dec
and
mov
mov
fdivrs
inc
addr16
push
xchg
shl
or
cmp
or
inc
scas
mov
and
rcrl
lods
cmp
dec
icebp
mov
dec
push
call
jno
test
dec
mov
pop
xor
pop
lcall
or
andb
lea
push
and
ja
mov
xchg
add
sti
or
popf
jae
dec
or
ds
nop
adc
je
xorb
lods
sbb
jle,pn
andl
leave
mov
addr16
aaa
inc
mov
imul
fwait
push
jmp
or
mov
dec
xchg
and
or
sbb
cmp
xor
iret
ret
adc
cltd
xchg
scas
clc
jnp
test
and
outsl
cwtl
call
outsl
loopne
sti
xor
movsb
push
or
in
inc
jecxz
dec
icebp
rcll
push
pop
or
cmp
cmp
jbe
push
push
call
faddl
lods
xchg
cmp
push
orl
mov
add
je
mov
lea
test
das
mov
mov
addl
cmp
pop
jne
jmp
outsb
mov
insl
enter
imul
std
ljmp
popf
inc
push
inc
stc
clc
pop
into
lods
sub
repz
loope
dec
mov
mov
jge
xchg
cmpb
in
xchg
pop
sar
push
mov
xchg
cmp
js
adc
push
mov
mov
std
test
popf
mov
adc
dec
add
sub
nop
sti
inc
dec
or
push
and
les
mov
mov
add
test
inc
adcb
fldpi
or
aas
lods
in
pop
add
and
xor
jnp
jno
nop
loop
sub
dec
nop
int3
jae
sti
pop
das
jle
lock
push
jo
push
js
and
popa
and
cli
movsbl
cmp
iret
jl
lret
mov
or
add
enter
out
sarb
lods
cmpsb
inc
rclb
movsb
pop
xchg
int3
cmp
inc
xchg
xchg
roll
sti
sbb
inc
les
jmp
jmp
inc
je
or
push
cld
fistpll
mov
pop
cmp
mov
inc
mov
mov
jle
rol
fs
pop
or
or
mov
lcall
sub
or
sub
inc
sti
test
cli
xor
jno
roll
sub
mov
add
rcrl
mov
pop
cmp
jne
jge
xor
xor
cmp
sub
adc
pop
jns
and
inc
lret
popf
shll
mov
xchg
mov
les
dec
sub
shr
and
lea
pop
or
hlt
add
unpcklps
sbb
in
sub
fwait
sar
test
call
nop
push
mov
sarb
lret
in
sbb
or
add
mov
test
or
mov
sub
int3
popa
inc
arpl
cmp
inc
test
and
push
and
or
mov
jge
jo
sub
mov
adc
xchg
sub
xor
sbb
out
xchg
or
outsl
mov
icebp
lods
jg
and
mov
mov
int3
mov
jg
push
in
mov
cmpsb
int
lock
mov
int3
pop
pushf
mov
and
mov
xchg
out
cmp
sbb
hlt
mov
or
dec
xchg
lea
adc
mov
xor
inc
inc
enter
out
std
xchg
push
push
adc
dec
push
hlt
xchg
lahf
inc
dec
jg
fs
cld
lret
jb
push
fwait
std
js
aad
jae
and
xchg
adc
xchg
sbb
adc
das
out
xchg
pop
push
scas
std
dec
mov
dec
loope
dec
push
or
jecxz
inc
gs
push
mov
movsl
cld
adc
dec
xchg
cmp
sbbb
inc
and
inc
sti
test
cli
xor
sub
sub
loop
sub
sbb
mov
aaa
mov
stc
mov
xchg
fwait
lcall
fldenv
mov
or
int
sub
sub
xchg
adc
inc
xchg
call
adc
push
mov
out
jp
cmovg
lock
icebp
out
and
or
mov
movsl
sub
dec
push
mov
sti
or
xchg
or
adc
pop
in
scas
sub
and
inc
inc
or
rcll
inc
nop
adc
mov
stc
ret
inc
push
dec
call
sbb
inc
mov
sbb
lcall
pop
or
popf
xor
lods
lret
cmp
sub
ds
ds
adc
dec
dec
dec
mov
and
inc
mov
mov
sub
mov
das
jno
add
push
sub
add
test
sbb
in
xor
jmp
dec
and
inc
ret
fildl
mov
dec
add
out
xor
stos
mov
pop
std
fiaddl
add
cli
sub
in
inc
mov
dec
out
test
inc
test
enter
jmp
push
stc
pushl
call
adc
js
call
mov
clc
mov
out
daa
mov
adc
je
bnd
insl
jg
enter
sub
add
cld
rorl
pop
insb
lcall
popf
out
mov
stc
xchg
lret
sahf
jle
nop
and
and
pop
push
sbb
cmc
jno
das
jno
or
pusha
and
mov
adcb
data16
fwait
daa
and
hlt
pop
call
xchg
clc
popf
or
and
add
mov
sub
lods
lahf
pop
mov
repz
das
jnp
and
push
jno
cmp
icebp
loopne
or
xchg
add
jmp
mov
stos
dec
std
adc
push
pop
cwtl
lret
push
or
lods
mov
test
ja
xorl
or
gs
ret
push
cli
cli
and
push
adc
mov
xchg
ret
iret
pop
sahf
dec
cs
cmc
pop
popf
xchg
ja
xchg
lods
and
std
cltd
xor
jmp
inc
mov
lret
dec
pop
dec
and
in
dec
movsl
adcl
nop
dec
cmpsb
int
mov
adc
push
inc
adc
lea
adc
dec
sbb
mov
cld
flds
aad
fsubl
mov
and
sbb
sub
jns
test
xchg
je
push
cmp
sti
lds
add
inc
mov
push
mov
push
movups
imul
and
push
dec
inc
pop
subb
jmp
enter
xchg
adc
imul
stos
pop
je
dec
pop
cmp
ljmp
ljmp
adc
and
jns
push
or
roll
loope
xchg
sub
mov
stos
push
lds
sbb
and
xchg
and
or
mov
pop
out
movsb
daa
push
add
ja
das
dec
mov
rclb
jne
test
das
aad
cmpsl
fadds
imul
jne
xor
imul
test
jmp
xchg
pop
sub
in
mov
add
sbb
inc
xchg
mov
adc
jmp
dec
mov
movsb
xchg
mov
movsl
mov
stos
sub
adc
cmp
mov
lods
mov
push
adc
inc
les
jns
shlb
aam
test
fwait
lret
je
sub
push
adc
sub
sbb
adc
push
inc
push
push
popf
mov
fwait
pusha
xchg
dec
test
mov
sbb
xchg
jb
cmpsl
je
clc
jno
adc
fdivl
lods
or
fstpl
sbb
push
sbb
inc
mov
push
jbe
and
inc
int3
js
inc
sbb
sub
or
sub
xchg
sub
int3
fwait
add
cmp
lds
ret
fwait
jg
cmp
das
adc
enter
and
lds
xchg
xor
jo
mov
sahf
xor
and
sbb
and
push
or
push
into
inc
sbb
push
jl
or
jmp
into
sbb
lds
test
push
arpl
les
inc
cwtl
fists
sbb
test
mov
aam
adc
and
mov
scas
cwtl
pop
or
xchg
call
imul
mov
jmp
push
push
and
cwtl
imul
sub
add
push
cwtl
lret
mov
pop
loope
pop
dec
sub
pop
adc
adc
and
out
or
andl
mov
push
mov
cmp
and
cmp
xor
repz
out
mov
or
jp
sub
jnp
aaa
nop
neg
das
dec
in
mov
ret
mov
clc
add
pop
jl
loop
push
adc
xchg
cwtl
pusha
sbb
push
lahf
xchg
push
xor
fsts
pop
cmp
dec
pop
faddl
dec
call
and
xor
dec
icebp
mov
adc
pop
je
movsb
and
in
loop
sbb
scas
das
enter
push
push
adc
inc
mov
sub
insb
jge
or
mov
xchg
ss
rcll
mov
nop
sub
pushf
stc
pushf
je
adc
das
in
and
jo
jnp
pop
test
hlt
ret
ret
notl
mov
xchg
stos
or
cld
test
inc
out
sbb
daa
push
cmpsb
outsl
dec
rorb
jecxz
sbb
sbb
dec
inc
push
adc
pop
mov
jl
jp
sub
mov
adc
xorb
add
nop
pop
mov
or
leave
or
xchg
mov
test
rorl
jmp
jl
push
shrb
inc
enter
stos
pushf
adc
shll
loope
cmp
movsl
lock
inc
xchg
push
fldt
mov
jbe
and
jmp
test
jnp
dec
lret
dec
xor
das
sbbl
and
sub
push
outsb
pop
xchg
outsl
push
scas
xchg
xchg
push
das
mov
ss
or
outsl
sbb
dec
mov
jmp
outsl
in
xor
adc
pop
mov
adc
rep
xor
pop
das
test
xchg
addr16
mov
mov
dec
jl
jnp,pn
adc
pop
cld
mov
adc
test
fistpl
ret
js
cli
xlat
mov
add
movsl
pop
and
test
faddl
jmp
inc
bound
cli
test
pop
inc
repnz
shl
aas
das
push
adc
dec
sbb
fstl
adcb
lds
pop
dec
js
jp
dec
mov
call
je
adc
fistpll
ret
jnp
popf
popl
inc
push
fiaddl
inc
inc
and
dec
fs
pop
mov
fcoml
sbb
mov
mov
adc
inc
or
std
insb
xor
mov
call
out
flds
adc
lea
adc
add
daa
cmp
roll
dec
jae
cmp
popf
pop
xorb
ds
adc
mov
cmp
scas
iret
cld
adc
adc
lahf
in
shrb
jl
adc
dec
sub
mov
orl
cmp
cs
mov
jle
sub
inc
xor
cmp
sub
xchg
les
add
mov
in
cmp
ja
dec
rcrl
adc
inc
jmp
jne
add
xchg
cld
test
sbb
cli
xchg
mov
push
sbbl
dec
fsubrl
push
add
dec
in
shll
inc
pop
adc
push
sbb
mov
test
test
mov
stc
dec
fldt
fisttps
mov
call
mov
pop
sub
test
adc
adc
jg
int
push
or
sub
pop
test
ja
pop
mov
mov
sub
pop
lods
xor
jg
stc
cmc
push
ss
fs
cmp
dec
cmp
mov
or
out
test
mov
cwtl
rclb
cmpneqps
call
cmp
and
ljmp
jl
mov
fcmovnb
test
and
ror
rol
test
sub
mov
xor
or
mov
inc
jae
outsb
les
dec
xor
into
sub
jle,pt
jo
mov
sbb
xchg
pop
adc
add
jmp
test
lret
in
jae
and
pop
dec
xor
and
lods
inc
jmp
jo
sbb
mov
jl
jmp
dec
xchg
dec
dec
and
in
xor
and
repz
or
and
nop
or
stos
in
adc
ret
mov
xchg
shrb
dec
lret
rorl
sbb
divb
mov
sub
out
lcall
aam
sbbb
mov
pop
push
jb
inc
adc
or
bound
das
int
and
ljmp
mov
scas
leave
sahf
inc
and
mov
push
ja
cmp
sub
cwtl
andl
jl
nop
push
ljmp
test
subb
in
fldl
pop
into
das
cld
out
sbb
leave
or
mov
psrlq
xchg
les
call
test
and
pop
cs
add
mov
cmp
pop
adc
jne
push
std
push
mov
out
push
mov
dec
or
inc
jnp
cmp
enter
and
mov
test
pop
lds
jge
adcl
ss
test
sbb
movsb
cmp
scas
xor
or
jmp
mov
pop
loope
sub
mov
cmc
jae
or
jo
and
daa
dec
lcall
shl
pushf
lret
add
sbb
sub
std
or
xor
sub
cli
in
or
fcompl
cmpsl
adc
mov
sbbb
call
push
popf
shrl
jns
icebp
sbb
aad
xlat
adc
push
je
push
cli
popa
imulb
pusha
dec
jae
cmc
adc
pop
cmc
mov
adc
add
inc
sub
aaa
and
jb
jae
in
xchg
jl
bound
popf
jp
aas
mov
or
out
out
cmp
in
jo
cli
adc
lcall
rolb
add
idivb
sbb
jp
xor
push
inc
xchg
aad
mov
adc
pusha
sub
je
or
mov
push
jge
jmp
add
sbb
dec
repz
dec
cld
push
push
es
je
adc
add
test
inc
js
jo
stc
sbb
push
xchg
aaa
aaa
mov
movsb
xor
pushf
cli
addr16
stos
lcall
mov
pop
push
jne
and
movsl
xor
mov
mov
es
sbb
dec
jno
mov
and
inc
test
in
fsubl
and
les
add
xchg
mov
les
ret
test
or
inc
add
push
aaa
jbe
adc
lods
mov
into
push
push
sub
push
icebp
push
inc
mov
xor
pop
jo
xchg
and
movsb
mov
lret
xlat
sbb
call
fdivs
inc
cli
les
dec
xor
sbb
adc
outsb
push
jecxz
cmp
xchg
jbe
push
add
or
sub
xor
shl
jo
inc
xchg
enter
bound
or
or
adc
les
or
jmp
loope
mov
mov
ljmp
and
out
stc
movsl
mov
adc
sar
mov
out
sub
pop
adc
adc
mov
jmp
sbb
jnp
movl
or
mov
jmp
faddl
jo
adc
xor
mov
jge
movb
pop
and
mov
icebp
and
add
mov
push
scas
mov
rclb
pop
movsl
in
or
or
or
pop
inc
sbb
scas
popl
sarl
pop
dec
dec
or
push
pop
orb
push
jle
inc
or
cmpl
xor
sub
pop
sub
js
push
inc
inc
or
lock
pop
cmpsl
inc
jmp
adc
test
dec
jae
xor
inc
movsl
push
repnz
dec
push
dec
sub
cmpsb
outsl
and
sbb
aam
mov
in
inc
cld
les
insl
xor
in
outsb
lods
xchg
in
or
xor
cld
push
cmp
push
xor
lock
xchg
pop
jno
mov
adc
mov
push
and
clc
sub
or
cmpsb
ds
fscale
or
inc
add
out
add
test
jae
test
and
imulb
call
daa
int
and
test
jecxz
add
adc
mov
sub
adc
mov
xchg
lahf
cmp
nop
or
je
sbb
pop
sub
fsubs
jg
test
push
imul
pop
pop
aam
inc
cli
les
addr16
xor
mov
xorb
sahf
nop
sti
mov
dec
push
lret
imul
lds
in
inc
and
mov
jecxz
repz
aaa
mov
add
jno
xor
mov
sub
jae
pusha
cmpsl
sub
push
or
pop
inc
push
test
xlat
cmc
dec
loop
push
pop
inc
test
jb
les
add
xor
movsb
sbbb
inc
pop
loop
fistps
inc
lret
mov
imul
xchg
lret
in
inc
loop
fildll
jle
pop
jb
cs
mov
loop
mov
and
adc
test
daa
and
xor
inc
xorb
xchg
inc
push
and
jno
inc
loop
punpckhbw
loopne
jmp
pop
cltd
push
jle
jo
hlt
lcall
int
mov
test
and
xor
jmp
adc
jecxz
mov
sbb
stos
nop
inc
or
mov
adc
sbb
pusha
adc
lock
mov
mov
je
and
adc
or
stos
shrb
data16
inc
dec
pop
gs
push
xor
mov
and
dec
sti
cmp
loope
xor
sbb
cs
inc
sbb
adc
ds
jp
adc
fs
adc
sub
mov
push
cld
cmp
or
ror
mov
pop
push
sub
and
pop
pop
jge
jecxz
and
pop
cmp
lea
je
cmp
push
cmp
mov
jmp
push
pop
or
cli
xor
jnp
inc
push
call
icebp
mov
sub
inc
and
mov
jecxz
jmp
stc
test
dec
pop
inc
lret
push
mov
das
pop
mov
jne
mov
mov
jns
xchg
sti
in
jle
ret
or
dec
mov
mov
shlb
mov
pop
pop
sub
shll
scas
sbb
jne
push
lods
imul
in
dec
call
call
sub
push
inc
repz
sbb
jnp
mov
cmp
cltd
dec
das
jae
fstpt
push
ds
inc
mov
call
mov
mov
je
cwtl
add
push
or
and
and
aas
push
push
mov
dec
and
xor
ret
inc
mov
mov
mov
cmc
inc
shr
dec
xor
inc
jbe
mov
inc
jle
jo
inc
cmp
mov
loop
cltd
adc
push
loope
pop
pop
jmp
inc
fidivl
scas
cmpb
sub
iret
bound
aam
pop
stos
push
in
add
popf
leave
jg
add
pop
ret
mov
cmp
jno
or
adc
fisubrl
pop
xchg
pop
mov
and
daa
jbe
inc
lock
insb
or
mov
lods
add
mov
jb
dec
cmc
push
pusha
lods
jne
les
lock
pop
mov
inc
mov
mov
inc
rorb
push
push
jmp
inc
out
dec
hlt
lds
std
adc
adc
push
repz
pop
incl
push
push
mov
xor
out
popf
jns
test
xchg
or
lret
gs
or
or
mov
faddl
js
repz
fiadds
mov
aam
and
jmp
aam
pop
inc
inc
xchg
mov
adc
push
add
ds
inc
and
in
cmp
addb
push
ffreep
jno
enter
lea
cmp
add
sub
call
jmp
cwtl
sub
jmp
dec
les
call
jb
mov
inc
mov
mov
pop
movsb
pop
adc
or
and
mov
cld
filds
insb
stc
xchg
mov
and
fsubr
lea
mov
pop
cmpsb
xchg
unpckhps
push
sub
mov
mov
xor
xor
int
mov
movsb
movsb
mov
add
mov
and
in
test
and
test
mov
sbb
or
in
leave
movsb
rclb
adc
lea
sti
dec
scas
push
push
repnz
in
adc
ja
and
push
out
loop
inc
stc
sbb
push
cmp
mov
mov
mov
cmp
adc
loop
cli
out
pop
jle
call
dec
mov
adc
and
and
pop
fbld
pusha
or
call
cmp
dec
out
inc
adc
dec
data16
or
dec
fdivs
test
and
fmuls
daa
divb
fsubr
mov
adc
mov
sbb
mov
xor
dec
es
les
mov
in
call
xchg
mov
ljmp
je
test
mov
mov
out
cmp
scas
mov
lcall
push
aad
sbb
jmp
jb
or
dec
cwtl
cwtl
test
das
les
dec
xchg
pop
mov
shlb
pop
inc
cmp
gs
adc
adc
sbb
mov
or
mov
inc
xor
xchg
jg
call
fs
adc
push
xor
dec
enter
dec
std
daa
les
jg
movsb
push
fs
lcall
mov
or
jne
sub
cmp
cmpl
daa
pop
cltd
rcl
jae
popf
gs
jbe
and
je
inc
cmp
sub
lock
sarb
inc
push
hlt
outsb
mov
jle
das
adc
insl
pop
xor
cld
sub
lods
gs
xchg
inc
inc
xchg
jmp
push
pop
adcb
sub
sti
lret
or
xor
pop
movsl
sub
pop
enter
shrl
and
cwtl
push
js
mov
repnz
lods
lcall
sbb
adc
inc
in
pop
aaa
and
in
cmp
dec
out
sbb
xchg
ficomps
inc
lock
jg
cwtl
sbbl
cs
xor
stc
cmp
pop
mov
push
push
movsb
jl
xlat
mov
mov
imul
out
stos
repnz
mov
lret
das
jmp
enter
aam
lds
fisttps
xor
push
xchg
mov
test
or
notl
and
xlat
xor
and
les
aam
mov
aad
jp
and
xor
mov
pop
nop
sub
dec
bound
sbb
xor
repnz
fsubrl
xchg
in
adc
stc
push
and
xor
bound
xlat
dec
stc
inc
daa
les
lea
sbb
sbb
sub
cmp
mov
sbb
push
std
sub
push
stos
fnstcw
popa
dec
fcoml
mov
data16
and
in
cltd
popf
or
and
adc
mov
repz
xor
jnp
call
call
ficompl
adcb
sbb
sbb
push
repnz
and
out
rclb
cmpsl
aad
pusha
inc
adc
and
jb
mov
fwait
mov
mov
movsb
in
call
call
addr16
push
popa
fs
push
adc
jno
inc
mov
and
or
cmp
mov
push
mov
adc
das
pop
int
test
sub
and
cmp
jb
aas
sub
rorl
sbb
adc
les
pop
dec
xchg
and
and
or
movsl
inc
inc
inc
or
jo
mov
iret
mov
cmp
push
xchg
scas
dec
jge
pop
and
mov
mov
inc
cmp
pusha
je
sbb
pop
adc
sub
or
mov
and
mov
jno
add
lods
in
or
adc
lcall
dec
ret
xorb
sbb
dec
and
movsb
add
in
mov
ja
mov
pop
cli
cli
insl
sbb
insb
and
je
sbb
mov
shll
ljmp
inc
sub
mov
cmp
fidivrl
cwtl
dec
mov
push
ds
loopne
test
test
insb
add
cmp
std
test
add
mov
in
adc
lcall
cmp
add
shlb
hlt
addb
call
fmulp
and
fxch
jns
cmpsb
call
dec
cltd
push
push
dec
mov
dec
and
je
add
into
or
pushf
enter
shl
mov
sbb
push
pop
inc
adc
rcrl
lret
or
pop
and
pop
mov
jns
dec
imul
nop
mov
xor
push
sbb
mov
enter
in
stc
pusha
adc
sbb
pop
cld
ja
xor
pop
pop
test
in
sti
inc
shrb
movhlps
cmp
cmp
and
pop
pop
jns
dec
jmp
lods
and
sahf
cmc
mov
rcr
sti
xor
sub
jb
jne
jge
push
in
cmp
jl
add
inc
xchg
push
push
push
call
imul
cmp
jle
call
rcll
adc
jl
daa
movsl
pop
dec
inc
cmp
jno
mov
pop
das
lock
outsb
cmp
or
in
pop
repnz
inc
push
mov
push
cmpsl
popf
imul
cmp
pop
xor
jle
mov
xor
call
lahf
mov
sahf
add
inc
cmp
jl
in
and
sbbb
xchg
ja
fistpl
mov
xchg
lods
roll
fwait
dec
xchg
mov
popa
repnz
test
push
stos
xchg
nop
cmp
jl
repz
popa
adc
jnp
test
pop
dec
mov
jl
pop
repnz
mov
pop
jns
sbb
jecxz
xchg
mov
clc
sub
jle
loope
rorl
out
or
fldt
dec
pop
dec
push
addr16
cmpsl
jne
pop
loopne
aas
pop
mov
mull
or
mov
push
or
xchg
adc
or
mov
pop
jne
adc
pop
cvttps2pi
adc
and
pusha
mov
push
add
arpl
fs
pop
dec
daa
or
jne
mov
sbbb
mov
push
or
push
jo
inc
and
add
mov
add
js
sbb
jp
subb
push
and
in
jno
push
es
sbb
jnp
inc
rcrb
push
push
adc
push
and
cwtl
dec
sbb
addb
push
mov
jp
add
and
inc
lods
and
ss
push
daa
mov
sub
lods
jmp
add
pop
imul
pop
clc
push
popa
popf
cltd
cwtl
inc
out
push
push
jle
rcrb
sub
adc
or
dec
shr
out
bound
nop
cmp
or
cmp
test
add
inc
xorl
lret
jmp
xchg
adc
pop
mov
idivb
cmp
mov
imul
pop
ret
rcrl
sbb
sub
mov
inc
sub
xor
push
jae
mov
sub
pop
mov
add
dec
dec
aam
jae
fbld
mov
fmuls
mov
xchg
inc
add
jbe
stos
mov
adc
loopne
mov
in
cmpl
sub
inc
jl
mov
and
jns
push
pop
into
ja
repz
inc
push
add
or
andl
lods
aam
cwtl
sar
inc
aam
and
push
jle
cmpsl
pop
mov
mov
fidivrl
pop
loope
dec
xbegin
sti
jge
sbb
cmp
mov
insb
add
jge
jne
sub
or
jmp
notl
sti
mov
mov
nop
adc
cmpsb
and
std
mov
push
jge
jmp
sub
mov
xchg
pop
lret
xchg
clc
mull
std
inc
mov
jns
scas
aam
loop
pop
ret
jmp
das
jmp
cmp
iret
shlb
inc
pusha
adc
add
lea
cmp
test
fsincos
or
mov
pop
ret
les
xlat
lods
xchg
mov
push
mov
sbb
push
je
adc
mov
imul
xlat
aaa
mov
int3
push
inc
lahf
add
stos
mov
xor
cmc
or
cmp
aam
or
in
stos
lcall
adc
adc
dec
add
addb
lods
dec
inc
int
mov
xor
sbb
add
push
adc
push
loopne
push
insb
xchg
sub
sub
fsubrl
mov
lds
in
das
cmc
adc
xchg
pop
les
loop
dec
outsb
xor
js
shll
push
jno
adc
mov
add
or
pop
lods
fmull
mov
mov
inc
stc
lea
inc
pop
pusha
or
and
dec
jmp
je
sub
clc
adc
imulb
nop
mov
inc
and
jne
sbb
jo
jnp
push
sarl
repz
sbb
cmp
push
xchg
mov
push
sbb
addps
add
add
clc
xchg
fadd
imul
and
sub
and
dec
push
and
push
jne
sbbl
in
es
and
adc
js
and
and
adc
into
push
xor
xor
loopne
and
orl
loop
mov
push
push
and
js
mov
mov
push
jo
and
shll
fimuls
cwtl
ljmp
xor
aam
imul
jno
ret
out
xchg
jno
pushf
push
sbb
insl
xchg
out
adc
test
clc
mov
test
mull
clc
push
and
cmp
nop
xor
enter
cmpl
daa
sbb
dec
fs
and
xor
adc
dec
mov
lahf
jbe
inc
inc
test
addb
addr16
nop
sub
and
mov
and
mov
dec
ds
rorb
or
pop
adc
shr
mov
inc
push
xor
bound
mov
lcall
sbbb
out
fsts
movsb
insb
pusha
push
adc
xchg
jbe
push
repz
call
cmpb
clc
sahf
pop
inc
mov
mov
scas
leave
add
aas
dec
into
je
imul
fisttpl
push
sbb
loopne
mov
insb
fwait
jl
daa
mov
sub
outsb
push
cmp
cmp
cmp
mov
mov
imul
scas
cmp
and
push
sub
and
cmp
xor
shll
adc
rol
dec
mov
cmp
xor
jge
adc
in
orl
subb
adc
sub
je
dec
int
xchg
push
adc
dec
mov
mov
xlat
and
or
add
imul
cmc
fimull
push
push
jge
xor
inc
sbb
std
sub
popa
add
test
mov
and
ret
push
xchg
cmp
call
mov
notl
lahf
test
lcall
jle
push
lock
test
in
dec
dec
and
rcll
iret
adc
and
add
cltd
in
nop
inc
adc
mov
adc
es
pusha
adc
pop
aaa
inc
and
push
push
cmp
adc
push
push
subl
scas
cmc
push
out
test
add
loopne
or
pop
rclb
and
and
push
pop
xor
clc
scas
cmp
stc
xchg
pop
adc
pushf
jne
sbb
mov
mov
popf
push
lcall
incl
mov
les
rclb
sbb
push
fmull
fcmovb
sub
mov
push
or
imul
cwtl
xchg
dec
movsl
pop
aaa
out
sub
and
call
cmpsb
lea
jne
mov
xchg
and
sub
or
pop
or
add
pop
xor
and
xchg
dec
sti
leave
cmp
mov
inc
mov
bound
or
rclb
inc
jbe
mov
mov
xchg
push
cli
or
test
inc
mov
rorl
cmpsb
adc
adc
mov
or
cwtl
mov
subl
push
mov
mov
fmull
dec
mov
jg
xchg
mov
mov
and
in
and
mov
out
dec
push
jmp
mov
cmp
mov
cmp
jae
push
ja
inc
push
mov
jne
jg
xchg
pop
jmp
lahf
adc
xor
and
or
pop
or
xchg
sti
adc
or
push
jmp
mov
xor
cmp
repz
and
or
add
es
mov
dec
and
cmpsb
and
push
or
dec
push
xchg
xchg
ljmp
repnz
xor
add
dec
loop
daa
orb
sub
or
jecxz
or
sbb
jnp
ret
sti
and
mov
sbb
sbb
inc
xor
test
ficoms
outsb
mov
roll
pop
push
push
pop
imul
xor
sbb
dec
jnp
pop
adc
mov
cmp
mov
inc
add
sub
inc
pop
push
sub
and
movsb
stos
xchg
aaa
and
call
inc
imul
add
push
and
es
adc
or
dec
sub
and
sti
sbb
push
mov
push
es
dec
je
sbb
push
xlat
sbb
push
adc
sti
aam
lcall
and
and
jmp
test
mov
or
inc
push
xor
adc
sar
insb
xor
ret
mov
popf
pop
das
clc
or
sub
and
pop
pop
pop
push
lock
dec
addb
jne
inc
and
jg
rolb
cmpsl
adc
addb
je
rorl
pop
clc
push
mov
stos
add
jl
sub
xor
jmp
clc
shr
or
or
push
fistl
dec
dec
cmpsb
or
clc
mov
stos
mov
cmp
jmp
add
mov
jp
adcb
leave
jbe
mov
cmp
ret
fwait
or
jne
inc
ds
cmp
cmp
adc
ja
push
push
scas
push
js
cltd
adc
popf
mov
rol
adc
push
scas
or
or
out
inc
test
sbb
push
rolb
mov
or
xor
mov
clc
jecxz
adc
repnz
push
push
inc
insl
jge
pusha
dec
mov
mov
mov
out
push
test
sub
sbb
shl
int3
repnz
lock
jge
insl
ret
fwait
or
decb
sub
inc
repz
push
cmpsb
adc
add
inc
inc
scas
repz
mov
xchg
xchg
cwtl
push
cwtl
inc
popf
push
lea
insb
cmp
jne
lds
sbb
cmpl
sahf
pop
fildl
inc
fstpt
add
fnsave
jnp
sub
sbb
cmp
loopne
outsb
ret
jmp
xor
sbbl
lea
mov
sub
add
in
add
mov
jecxz
sub
push
sbb
push
push
nop
daa
jmp
test
cmp
outsb
lret
xor
movsl
xchg
mov
push
sbb
inc
loop
ja
pop
jb
cmp
jae
push
fbld
and
or
inc
xchg
inc
mov
inc
aaa
dec
xor
sub
es
bound
adc
adc
xor
or
pop
jae
pusha
and
sbb
or
ret
adc
testl
pop
call
push
fdivrs
mov
cld
fwait
pop
adc
and
pop
pusha
push
cmp
inc
xchg
je
mov
adc
loope
test
insl
inc
sub
jo
dec
cmp
int3
or
push
imul
addb
pop
or
pop
push
sub
add
mov
add
and
add
das
cmp
and
je
inc
rclb
or
xor
inc
adcb
pop
jle
inc
mov
aas
pop
sub
repnz
repz
sub
addb
push
inc
pop
or
dec
mov
ja
rclb
xchg
outsb
push
and
int
out
shlb
lock
cmpsb
pop
sbb
stos
adc
inc
xchg
mov
aas
test
test
dec
inc
std
and
cmpsl
test
je
sbb
in
and
pop
jo
push
push
push
jl
loope
pop
pop
iret
mov
and
xor
push
scas
mov
pop
adc
and
insb
cwtl
cmp
cmc
ljmp
nop
daa
sub
stos
fcoml
in
movsb
pop
cld
std
mov
cli
fs
mov
xchg
jle
dec
out
inc
lret
cmp
cmp
xor
cwtl
sub
adc
or
test
and
les
cwtl
sub
push
gs
ds
push
xchg
xor
sub
inc
je
inc
imul
aaa
xor
jne
mov
mov
imul
nop
push
push
mov
shrl
adc
mov
sbbb
les
jge
das
adc
inc
fs
xor
sub
pop
adc
push
pop
stos
mov
popa
xchg
push
jae
cmp
rdtsc
int3
lds
or
jge
fisttps
data16
in
pop
mov
adc
faddl
daa
xor
cmpb
lock
adc
add
ja
jmp
inc
sbb
popf
dec
and
sbb
sub
rcl
aas
push
outsl
call
test
cmp
xchg
cmp
dec
pop
or
inc
stos
or
in
pop
leave
push
pop
in
cmc
bound
out
mov
mov
dec
jle
push
mov
add
sbb
sbb
lea
add
pushf
ljmp
push
cli
jo
clc
jne
cmpsl
lock
dec
xor
in
fst
ss
mov
std
lds
and
mov
cmp
test
or
imull
jns
adc
cmp
add
enter
jl
int3
jg
mov
scas
ret
loope
pop
pop
pop
int3
scas
jno
jle
addb
mov
add
adc
sbb
test
lret
lret
pop
sub
mov
mov
pop
call
cmp
or
or
xorb
cmp
mov
sbb
stos
mov
inc
int3
push
sub
dec
xor
int
imul
nop
in
adc
xor
sub
call
mov
fistpll
fnsave
and
call
and
aam
int3
mul
add
cmp
leave
dec
adc
jmp
mov
mov
sti
add
insl
and
inc
imul
mov
pop
xchg
test
cmp
mulb
xchg
mov
and
add
inc
lcall
xor
cmp
loop
jne
inc
xor
and
andb
push
inc
adc
lea
mov
xchg
push
leave
scas
hlt
lods
push
rorl
push
and
jle
cmc
and
call
cmpsb
call
hlt
mov
dec
add
mov
push
lock
push
cmp
xchg
cmp
or
lret
xchg
aas
lahf
jmp
or
push
or
jg
pop
outsb
fadds
mov
or
or
sahf
adc
cli
adc
sub
cmp
mov
dec
ja
aas
iret
gs
repz
mov
xchg
mov
jb
push
inc
cmp
out
jmp
push
mov
popf
out
mov
aaa
loop
lea
ret
and
pop
push
mov
dec
movaps
fs
andb
inc
test
ljmp
ret
jnp
jb
and
adc
insb
dec
add
into
push
mov
mov
or
test
push
sahf
sub
dec
mov
dec
daa
cmp
pop
jbe
ss
sub
and
dec
mov
dec
test
lea
mov
mov
xchg
adc
xor
add
cmp
jle
sub
hlt
mov
les
js
mov
outsl
sub
cmp
pop
je
ljmp
rcrl
cmc
cmpsl
push
shl
push
pop
and
push
nop
or
xor
lea
mov
inc
fcmovne
mov
cmp
adc
out
pop
jmp
mov
add
mov
movsl
insb
fisttpl
adcb
cmp
sahf
jne
sbb
je,pt
sub
add
push
call
cmp
inc
and
xor
mov
sti
or
sarb
push
and
add
rcrl
sbb
aas
sub
shlb
or
cmp
out
movsb
and
and
pop
ret
mov
dec
hlt
mov
add
inc
and
or
pop
pop
dec
xchg
jnp
lahf
dec
in
pop
fwait
arpl
cld
mov
dec
hlt
rol
cmp
xor
sbb
pop
outsl
cmp
inc
clc
cmp
pop
jnp
mov
jno
stc
cmc
inc
push
inc
div
dec
out
and
push
mov
xor
or
aaa
fdivs
dec
lret
ret
jne
in
inc
and
sub
leave
cmpsl
and
stos
mov
mov
xor
call
inc
cmp
inc
push
jge
inc
xchg
clc
and
movsb
stc
xor
push
add
mov
data16
xchg
push
jne
int3
push
push
mov
jbe
inc
loopne
jno
dec
orl
pop
sbb
sub
cmp
int3
jbe
push
adc
fisubs
sbb
mov
shlb
adc
addr16
mov
adc
dec
sub
adc
scas
adc
push
xor
xchg
cld
adc
ja
inc
lret
cmc
int3
call
xor
pop
je
cmpsl
mov
sub
insl
jp
lods
aad
mov
inc
add
pusha
pop
xor
shlb
mov
cli
jge
cmp
fidivrs
movsb
inc
hlt
mov
bndldx
pop
cmp
and
inc
mov
sub
insb
fldenv
movsb
cli
adc
jle
bound
adc
ljmp
add
sub
jae
xchg
into
fnstsw
in
jmp
and
pop
mov
test
je
popf
lret
or
sub
jle
jle
push
dec
cmp
lods
or
hlt
or
pop
add
sbb
lret
and
mov
rcrb
lea
inc
push
orl
dec
dec
and
dec
leave
adc
adc
call
bound
jmp
loope
sub
or
sbb
or
mov
decb
sarb
sti
lret
sti
daa
pop
push
out
in
or
or
jge
sbb
pop
xchg
inc
or
in
aas
sbb
cmp
cltd
insb
cmp
cmp
sub
inc
add
cmp
enter
pop
je
aas
sarb
cli
jl
push
cmp
jl
sbb
adc
test
xor
or
sti
loopne
dec
sbb
mov
les
andb
sarb
stc
cmp
les
call
mov
and
stos
repz
call
pop
ret
shrb
mov
sub
insb
adc
pop
and
jmp
fisubrs
ljmp
add
js
or
cmp
je
cltd
outsw
sbb
xchg
add
pop
bound
inc
faddl
mov
cmp
js
xchg
mov
adc
lret
add
xor
icebp
adc
inc
xor
fmul
add
movsl
or
sbb
dec
or
jne
fdivl
int3
roll
shll
push
pop
mov
add
aaa
xchg
dec
scas
xor
sub
xchg
aad
push
push
xchg
dec
enter
mov
push
sbb
gs
or
mov
nop
scas
bound
xlat
push
jecxz
adc
fnstsw
in
sub
pusha
inc
test
dec
lock
pushf
mull
mov
xchg
pop
mov
mov
mov
psubsb
add
adc
push
dec
addr16
or
add
loope
cld
inc
out
inc
push
mov
hlt
or
and
nop
mov
fucom
sub
mov
cltd
sbb
frstor
sahf
xor
fwait
and
es
lods
xchg
fisubs
lret
call
xchg
ficoms
ss
and
dec
adc
mov
movsb
xor
cmp
sbb
push
movsb
xchg
shr
loopne
or
xchg
jae
lea
popf
clc
call
mov
adc
mov
in
seto
mov
xchg
gs
sub
movsl
and
mov
lock
jmp
or
or
adc
mov
arpl
mov
lea
shrb
inc
enter
std
adc
bound
mov
test
cmp
sub
aam
es
add
and
aam
inc
mov
test
and
test
cmp
cwtl
jne
jp
leave
push
mov
inc
xor
mov
lea
and
xchg
sbb
xchg
enter
shlb
mov
inc
test
sub
add
icebp
add
mov
add
xor
xor
mov
cmp
cmp
addl
push
in
and
cmp
jl
movups
add
jmp
lea
push
or
rol
incb
cmp
dec
push
adc
arpl
jmp
clc
roll
push
cmp
jbe
add
jb
push
lea
adc
jmp
cwtl
stc
or
sub
mov
xchg
clc
fs
xchg
xchg
adc
sbb
jb
inc
ds
enter
adc
push
lea
gs
nop
adc
mov
cltd
or
adc
rorl
or
fstp
ljmp
sub
pop
inc
int3
lds
es
cmpsb
or
nop
and
inc
inc
inc
inc
sbb
fmull
inc
aam
mov
adc
mov
mov
shll
adc
jmp
and
jmp
and
jmp
lea
adc
xchg
or
icebp
mov
or
xor
mov
dec
sahf
push
or
cli
inc
adc
pop
push
push
or
sub
xor
jl
rorb
inc
and
or
icebp
nop
inc
data16
inc
je
aam
mov
cwtl
inc
adc
enter
leave
faddl
or
xchg
mov
push
and
dec
movsb
xor
push
out
inc
jle
mov
sub
dec
lods
sub
lods
push
out
scas
dec
inc
sub
mull
fs
or
xchg
and
xchg
xor
sbb
xchg
and
adc
cs
and
adc
cs
and
daa
cwtl
xchg
and
mov
sarb
inc
adc
inc
adc
mov
push
and
adc
shrb
je
dec
jp
stc
cmp
orb
ja
loope
je
sub
push
pop
inc
dec
jne
daa
mov
inc
dec
addl
into
mov
stos
fnsave
dec
dec
sub
pop
xchg
adc
mov
fdivl
add
popf
aam
mov
call
adc
dec
lds
in
adc
es
add
insb
or
sub
lea
aas
call
sbb
dec
adc
adc
sub
mov
mov
dec
out
xchg
test
and
mov
ds
mov
shll
int
jo
cmpsb
xor
mov
filds
pop
mov
loopne
xchg
je
call
push
push
and
inc
inc
mov
inc
mov
xchg
mov
xor
mov
leave
int3
hlt
leave
test
mov
adc
clc
cmp
iret
loop
movsb
fisttpl
or
stos
mov
les
pop
lahf
call
pop
inc
push
inc
call
sbb
and
es
pushf
sub
and
cltd
shrb
je
inc
or
jne
pop
es
stc
add
adc
jecxz
loop
xchg
dec
pop
out
inc
orb
loopne
or
adcb
xor
pop
push
add
jecxz
xchg
mov
fisubl
je
and
add
cmp
inc
cltd
push
mov
imulb
ficompl
mov
adc
lock
cmc
xor
in
adc
mov
dec
dec
daa
inc
or
inc
add
inc
push
inc
inc
or
inc
or
mov
inc
orl
add
mov
addl
dec
or
xchg
mov
xchg
cmp
jbe
push
orl
dec
push
xorl
mov
jl
adc
test
inc
js
std
or
mov
push
std
xchg
inc
or
sahf
stos
inc
and
adc
clc
and
call
push
loope
mov
adc
dec
or
push
shrl
inc
or
lea
and
enter
push
cmp
xor
push
stc
xor
aaa
lods
cmp
dec
repnz
sarb
dec
scas
and
mov
rcrl
stc
adc
xchg
adc
out
call
clc
das
enter
cmp
jae
hlt
ds
add
xchg
in
cmp
cs
add
mov
jl
sub
out
test
mov
mov
sahf
inc
inc
xor
pop
xchg
sbb
sub
add
mov
int3
or
or
sbb
add
add
and
enter
pop
sub
aam
or
je
push
cmp
mov
inc
imul
in
inc
pop
mov
push
jo
sub
xchg
jl
rcl
xchg
test
inc
cmp
sbbb
mov
sbb
test
pop
xor
xchg
dec
sub
add
or
mov
jnp
push
pop
sub
jp
fistl
adc
adc
and
push
jle
loop
cli
pop
add
in
fstps
lods
dec
movb
dec
enter
push
and
leave
or
inc
and
sbbl
lock
fs
cwtl
clc
adc
mov
in
mov
inc
js
sub
inc
inc
aam
lahf
dec
jmp
jge
inc
adc
cli
test
jne
cmp
add
test
ror
mov
vmulpd
shll
imul
lds
clc
clc
syscall
dec
popa
dec
mov
sar
mov
jmp
xchg
xchg
adc
call
in
push
pop
andl
adc
mov
hlt
mov
inc
adc
xchg
add
or
nop
mov
cmovb
jbe
test
aad
xchg
pusha
cmc
pop
xor
sbb
jl
and
sub
xchg
and
and
xchg
ret
jl
cld
int
icebp
or
or
sbb
push
cmp
rcll
jp
adc
jl
movsb
imul
das
push
push
or
pop
dec
clc
outsl
and
adc
lds
push
pop
imul
int3
cmp
push
adc
mov
mov
jmp
mov
mov
xchg
iret
mov
mov
mov
adcb
add
mov
fdivs
ret
mov
mov
push
ss
cmpsb
mov
mov
movl
cs
in
cs
pop
sahf
shlb
push
insl
push
jae
mov
or
stos
push
hlt
negb
addb
inc
pop
adc
lret
dec
xor
or
rcll
mov
or
add
push
test
and
add
mov
adc
subl
pop
icebp
cld
push
or
jmp
inc
lahf
or
loop
repz
rolb
dec
sbb
mov
ja
mov
je
sub
or
loop
push
sbb
add
add
stc
dec
bound
pop
imul
adc
push
adc
ret
push
cli
add
jb
inc
jns
cmpsb
mov
cmc
popf
call
js,pt
lea
pop
dec
cmp
push
test
ror
mov
adc
and
xchg
xchg
or
and
insb
dec
int
add
cmp
inc
xchg
push
add
inc
push
adc
cmpsl
movsb
jbe
cld
subb
loop
rol
xchg
jmp
inc
add
js
dec
daa
and
cld
dec
cmp
xchg
icebp
test
sbb
push
test
jns
dec
mov
mov
xchg
cmp
pop
and
pusha
add
inc
or
inc
xchg
jns
sbb
mov
test
jp
add
out
mov
add
pop
cmp
js
xor
or
pop
or
aas
inc
adc
or
pop
sub
test
test
jmp
fdivp
push
aaa
cmp
adc
mov
sbb
icebp
jl
rcll
cmp
adc
adc
shll
fadds
or
sub
stc
push
int
addr16
xchg
push
cmp
mov
ds
push
sub
xor
dec
and
mov
inc
int
mov
push
and
jnp
fcomps
shll
mov
dec
mulb
cmc
nop
mov
repnz
stos
lods
and
add
in
pop
push
ror
les
sbb
fldcw
test
xchg
and
hlt
push
lret
iret
jmp
mov
loope
add
xor
mov
or
add
inc
les
shrb
xchg
mov
rclb
push
mov
inc
add
movsb
dec
dec
iret
add
dec
mov
outsb
popa
cltd
jmp
and
mov
daa
xlat
jnp
jne
push
mov
push
mov
ficoms
sbb
jbe
sub
xchg
pop
flds
jmp
std
jnp
cmp
push
or
jge
add
xchg
jmp
jl
push
loop
inc
dec
jecxz
adc
icebp
out
dec
das
sub
add
jl
lea
sub
sub
lahf
insl
adc
scas
sub
adc
push
shr
push
sbb
mov
xchg
jp
dec
push
leave
rolb
add
lods
mov
fistpl
push
dec
dec
jp
sub
sbb
xchg
or
sbb
jne
lea
in
jmp
cltd
pop
mov
mov
rcrl
call
test
push
inc
push
in
pop
dec
loopne
int
daa
inc
add
out
int
test
fwait
mov
clc
adc
inc
xchg
pop
inc
inc
sub
popf
jecxz
in
clc
pop
inc
pop
mov
test
pop
call
push
xor
push
mov
mov
fcoml
sub
aam
and
sub
dec
pop
adc
dec
sub
cli
jg
jbe
mov
xor
or
cmc
cmp
xchg
adc
data16
clc
push
loopne
mov
jp
jl
pushf
pop
jmp
and
fld
cli
jns
hlt
shlb
or
aas
jo
pop
or
decl
jmp
es
lea
or
jmp
testl
mov
cmpsl
inc
mull
je
xchg
jmp
jno,pn
add
js
daa
or
ret
pop
call
les
pop
scas
jnp
adc
sbb
and
jbe
adc
dec
mov
pop
or
shlb
leave
sbb
and
cmc
add
and
and
ljmp
dec
addb
jl
js
adc
and
sub
adc
push
nop
mov
mov
add
pop
je
jae
sub
sub
stos
sbb
mov
push
fwait
adc
cwtl
arpl
add
sub
sahf
inc
inc
dec
aas
inc
and
inc
sbb
sub
loop
and
loope
pop
and
jne
or
jb
push
cmp
push
enter
pop
adc
adc
or
sbb
mov
or
cmpsl
xchg
xchg
xchg
testb
jbe
pop
nop
inc
dec
loopne
dec
sub
jno
test
push
fisubrs
std
adc
mov
jmp
outsl
inc
test
in
push
mov
pop
movb
movl
sbb
rcrl
and
jmp
ss
clc
jl
xchg
movsl
fsubl
cmpsb
and
cmc
push
daa
inc
clc
or
rcrl
push
dec
addl
sub
sbb
pusha
xor
dec
les
in
mov
aas
mov
xchg
sqrtps
inc
xchg
mov
xor
lahf
lock
sbb
clc
jl
loop
or
sbb
or
xchg
sbbl
test
xchg
jmp
jno
add
lea
popa
or
jne
out
sbb
mov
je
insb
push
add
movsb
sub
jl
insb
xchg
dec
or
js
sub
xchg
popw
or
lret
adc
mov
insl
sbb
mov
sub
inc
popf
sbb
inc
jmp
sub
movsl
mov
lret
mov
xchg
push
xchg
xor
xor
sub
iret
inc
lods
dec
pusha
iret
dec
std
and
mov
and
cmp
pop
rolb
sbb
int3
xchg
cmp
enter
jbe
addb
sub
jno
ja
xchg
or
push
adc
pop
jmp
les
pop
ss
stc
dec
jo
or
sahf
cli
mov
inc
cmpsl
cld
xor
push
ss
aaa
test
jmp
xor
xor
ret
aam
stc
shrl
popa
call
and
pop
and
adc
fcmovnb
jp
cmpsb
ficoms
dec
inc
dec
cmp
ret
adc
mov
adc
sbb
in
call
pop
jne
jl
into
in
adc
jmp
mov
cmp
ret
push
das
sti
inc
outsl
iret
xchg
rorl
mov
repnz
pop
les
pop
inc
xor
dec
std
and
daa
inc
or
pop
nop
lcall
dec
in
rcrb
ja
cwtl
outsl
repnz
adc
jge
or
sbb
cwtl
inc
dec
mov
iret
std
add
sbb
add
cld
mov
and
in
add
push
mov
daa
dec
pop
push
movsl
imul
pushf
loop,pn
mov
xchg
adc
sbb
push
test
out
repz
popa
add
pop
xchg
mov
mov
scas
pop
nop
inc
inc
test
lea
int3
shr
adc
loopne
xchg
movb
scas
and
dec
les
ds
pop
lret
das
loope
ljmp
stc
pushf
xchg
dec
movsl
pop
loopne
jbe
or
adcl
cmp
aaa
sub
mov
push
das
aad
adc
hlt
xchg
cmp
adcb
xor
ds
and
xor
or
and
dec
imul
test
push
sub
inc
les
fsts
add
pop
shll
repz
mov
call
xchg
lods
push
retw
lock
stc
push
jne
mov
jl
xor
lock
xor
or
add
xor
pop
mov
sub
mov
sub
imulb
xor
sbb
faddl
push
jl
sbb
sub
scas
cmp
xor
jmp
dec
test
cwtl
imul
jo
fdiv
fistpll
loopne
or
push
jge
xlat
js
sbb
jmp
mov
icebp
sbb
push
out
push
mov
mov
xor
movsl
pop
push
insb
lock
call
dec
psubsb
mov
xor
lds
lret
inc
push
push
movl
inc
xlat
and
and
add
adc
add
adc
xor
sbb
push
mov
mov
add
hlt
fstcw
call
or
jge
std
insl
int3
fistpll
hlt
or
mov
in
push
dec
and
lods
xchg
mov
and
divb
into
loop
addr16
into
icebp
adc
test
inc
addr16
mov
pop
test
add
jmp
xor
arpl
nop
sahf
fs
sbb
cmc
mov
arpl
addb
ret
fiadds
pop
xchg
mov
add
fwait
jg
in
mov
pop
push
push
aad
mov
call
adc
imul
sub
pop
clc
sub
nop
shll
cld
mov
data16
adc
jle
iret
mov
xor
hlt
orb
pop
adc
out
push
push
xor
decb
cmp
jo
loope
push
jno
sub
fs
aam
adc
cmc
adc
rep
jmp
pop
sar
push
bound
inc
call
jl
in
lods
sbb
inc
fstl
popf
and
mov
loop
sbb
call
cmpsb
call
test
fsubl
lea
sbb
mov
sbb
aad
push
sbb
jl
lret
dec
mov
push
int3
cmp
popa
mov
gs
int3
insl
clc
movsl
fcoml
fdivs
mov
int3
add
stc
xchg
scas
aam
jo
mov
dec
sahf
or
mov
mov
jecxz
and
dec
pop
xorb
mov
int3
pop
loopne
adc
imul
lcall
dec
xor
push
cld
mov
bound
inc
adc
lret
xchg
or
jl
and
das
jns
stos
sub
jns
mov
cmpsb
inc
packssdw
jge
sbb
inc
clc
push
mov
test
loopne
test
daa
mov
aas
pop
mov
aad
in
pop
add
sahf
dec
xorl
lea
cwtl
add
cmp
cmp
cmp
and
movsb
lods
jle
int
mov
addb
sarb
filds
push
xor
and
cmp
cmp
cltd
divl
outsb
or
mov
adcl
adc
push
stc
jge
xor
inc
sti
and
inc
lcall
jge
mov
mov
lret
test
sub
subl
mov
mov
jmp
cmc
push
insl
cmp
rcr
mov
aam
divl
dec
xor
xor
push
out
arpl
call
jmp
popl
mov
mov
cmpl
dec
xchg
fwait
push
lcall
push
mov
in
or
and
dec
push
inc
add
imul
pop
cwtl
imul
enter
cmpsb
fstpl
or
xor
xor
mov
mov
cld
fiaddl
mov
aam
cs
push
cmp
test
or
add
push
cmp
in
lods
rcrl
adc
rcll
fadd
inc
or
inc
daa
adc
dec
xor
sarb
test
and
fcoml
mov
xor
aam
add
or
in
inc
dec
idivb
jl
cmp
or
pop
sub
in
push
rclb
sub
sub
or
inc
pop
xchg
mov
out
pop
aad
inc
fdiv
rclb
addb
pop
and
daa
shl
or
or
or
lock
icebp
xorb
je
js
push
sbb
cltd
subps
push
adc
dec
cmp
xor
sub
lds
and
mov
pushf
and
push
stc
subb
inc
xchg
mov
xchg
or
inc
xchg
sub
sbb
jo
jg
orb
xchg
jne
adc
les
and
dec
in
in
and
daa
pop
xchg
stc
sbbb
sbb
or
and
cmp
xchg
push
pop
and
add
ja
push
add
mov
sub
fcomps
sub
sub
push
jae
push
sub
inc
adc
mov
insl
sub
adc
adc
fldl
cmp
sarb
or
stc
test
test
mov
adcl
lods
pcmpgtb
movsb
cs
ljmp
fnstsw
mov
decl
dec
dec
push
roll
mov
xorb
sub
cmp
or
call
push
push
xor
data16
push
cmp
fnstcw
lods
adc
add
sbb
idivl
ljmp
test
imul
push
aam
hlt
cmp
push
cmp
add
jb
sub
add
jae
shlb
fstpl
sbb
add
pusha
mov
xor
nop
or
movb
das
test
dec
sarl
lahf
dec
sub
ljmp
iret
add
ljmp
pop
dec
jns
popa
xchg
es
pop
xchg
leave
mov
adc
cmpb
js
adc
xchg
push
or
orl
rolb
pop
pop
inc
loopne
cmp
idiv
push
push
inc
inc
and
inc
push
and
xorl
xchg
aad
jne
ljmp
adc
push
dec
or
fnstcw
jmp
mov
inc
sti
add
xor
and
xor
or
add
cvtdq2ps
out
fldcw
adc
mov
adc
aad
mov
dec
mov
jns
push
push
movsb
xor
jnp
mov
ret
push
mov
rolb
add
inc
sbb
mov
inc
and
jmp
lea
dec
push
fbstp
test
adc
xor
push
aas
jns
ss
xchg
or
ss
ret
push
or
or
mov
and
dec
fs
inc
arpl
out
jmp
std
push
adc
xor
cli
daa
repz
dec
addr16
or
movsb
inc
cmp
xor
adc
mov
call
test
subb
inc
orb
shll
dec
jnp
cmp
inc
cmp
jg
add
jge
aam
lretw
jmpw
inc
sub
cld
lock
clc
push
aam
mov
movsb
test
adc
ja
cs
imul
pop
adc
sub
jo
mov
xchg
clc
leave
mov
or
or
call
imul
les
xor
push
pop
or
xor
push
mov
inc
dec
adc
lods
add
ret
xorl
cmp
cmp
add
movzbw
dec
push
repnz
sti
mov
fisubl
push
add
cwtl
inc
add
push
mov
ljmp
hlt
sbb
mov
shr
mov
leave
test
pop
jmp
mov
push
or
sbb
adc
fists
xchg
mov
rclb
cmp
mov
xchg
lock
cwtl
mov
xor
aam
or
stos
push
sub
cmp
rolb
inc
and
je
inc
jmp
jbe
sub
pop
hlt
out
dec
int
adc
lcall
push
stos
ret
stos
dec
inc
aas
push
push
mov
and
inc
sub
jae
fwait
lea
adc
aam
out
nop
int
or
push
scas
inc
neg
dec
mov
inc
or
adc
cmp
lods
or
iret
bound
subl
jg
pop
mov
mov
push
cli
repz
mov
shlb
push
inc
mov
adc
jp
sub
and
inc
scas
sbb
jne
xor
inc
stos
and
inc
lock
sbb
adc
jmp
xor
cmp
mov
xor
addl
pop
and
lret
pop
adc
fmull
cld
mov
jmp
movsb
or
cmovo
mov
inc
mov
mov
cmp
mov
mov
or
call
mov
jge
cmp
ficomps
sbb
das
cli
cwtl
aam
bound
cld
dec
iret
xor
dec
jg
adc
in
xor
rclb
je
push
or
fldenv
lods
jl
cmpsb
mov
and
jmp
mov
push
inc
pop
je
je
add
sub
jecxz
jb
and
cmp
sub
inc
sub
cmp
repnz
xchg
cmp
pop
cli
pop
lahf
movsl
xor
xchg
push
enter
sbb
cmp
push
dec
or
lods
or
clc
pop
mov
mov
test
imul
sub
shr
inc
repnz
mov
and
sti
lods
popa
sub
sub
clc
dec
xchg
inc
xchg
inc
les
ds
call
fdivrs
fcmovne
inc
xchg
loope
cmpsl
pop
mov
cmp
add
call
cmp
xor
and
pop
pop
clc
inc
nop
jo
sbb
adc
jle
out
cmp
rorb
nop
je
sbb
sbb
sbb
inc
mov
inc
int
loopne
notb
test
pop
push
and
adc
xor
xchg
add
mov
lret
pop
in
sbb
dec
sub
jo
out
mov
les
xchg
lea
pop
inc
push
out
es
mull
pop
and
add
adc
sbb
jl
mov
jl
insl
jns
inc
pushf
xchg
insl
add
stc
clc
lds
push
jg
repz
or
dec
jae
xchg
jmp
js
std
clc
and
ss
jno
pop
je
test
jmp
fidivrs
push
cli
mov
insl
hlt
push
fsubrs
sub
dec
dec
outsb
xor
mov
scas
mov
clc
js
sub
xchg
popl
rcrl
adc
or
or
sarl
lds
nop
add
and
push
neg
ljmp
hlt
incb
inc
push
push
and
mov
push
and
lock
cmpsl
out
test
mov
js
lcall
add
jno
pop
pop
enter
and
mov
clc
add
jle
jmp
and
add
adc
pop
push
mov
cmp
in
shr
pop
xor
cmp
mov
xchg
outsl
lods
popa
aad
inc
lods
inc
pop
stos
out
cs
mov
mov
sub
daa
push
stos
stc
into
sub
aam
ljmp
in
and
mov
movsl
and
xor
push
out
and
out
mov
push
or
adcl
cmpsl
je
pop
repnz
adc
lods
xorb
scas
sbbb
xchg
lds
xor
mov
jp
cmp
sbb
das
daa
jo
ror
xrelease
movl
call
imul
shr
jb
mov
xchg
cwtl
outsl
lock
and
hlt
mov
xor
pusha
shlb
add
dec
loope
pop
shl
sbb
enter
adc
sar
add
xchg
aam
xchg
cmpsb
xchg
dec
pop
and
mov
add
or
out
insl
push
mov
sbb
lds
or
and
push
jmp
pop
pop
fs
inc
jae
jmp
sub
in
jae
mov
cmp
clc
adc
decl
pop
mov
dec
mov
xchg
cwtl
or
cmpsl
es
cmc
adc
repnz
clc
rorb
stos
xor
sahf
ljmp
mov
sbb
roll
in
add
fcoms
ret
shl
outsl
push
adc
mov
mull
xor
pusha
lock
andl
jmp
mov
orl
and
pop
jg
or
out
lea
mov
add
cmp
je
lock
lock
daa
xchg
test
mov
xchg
daa
adc
aam
jmp
pop
addr16
jo
pop
std
sbb
test
fisttps
jb
imul
dec
sbb
inc
sub
rclb
or
or
xorb
pop
push
pop
addb
lock
pushl
popa
add
sub
shl
loopne
mov
sbb
and
jmp
bound
mov
adc
sbb
sbb
or
pop
and
fs
iret
cmp
mov
sarb
sub
adc
negb
and
mov
cmp
cmpsl
imul
icebp
mov
xchg
fisubs
ret
aaa
and
add
mov
in
and
xorps
stos
in
cmp
push
push
nop
cs
jmp
push
or
or
xchg
sub
ds
mov
out
or
or
dec
or
cld
fldcw
lods
lock
leave
fisubs
push
test
call
xor
sub
fidivl
mov
push
cs
rorb
mov
add
pushf
jmp
xchg
fwait
nop
and
cmp
shr
mov
push
fs
popf
dec
jb
cs
mov
adc
and
add
and
out
sti
xor
jns
cwtl
ds
push
movsb
mov
sub
seto
pushf
movsb
mov
and
popf
and
dec
scas
fyl2xp1
into
or
lea
add
mov
mov
adc
lock
pop
insb
addr16
add
adc
pop
inc
loop
je
les
js
or
pusha
jbe
or
adc
sub
push
cmp
dec
popa
call
pop
add
aas
bound
push
int3
or
hlt
sub
stos
xchg
sbb
dec
push
arpl
movaps
add
and
and
jmp
inc
mov
sbbb
dec
in
push
divl
adc
ret
fsubr
push
dec
icebp
insl
jae
xchg
fs
out
jae
fcomps
movsl
dec
arpl
inc
jne
mov
loope
adc
xor
xchg
push
fldl2t
adcl
roll
pop
and
popa
inc
fstpt
cmp
stc
mov
inc
xchg
mov
jb
sub
dec
aas
dec
cmp
mov
repz
xchg
subl
adc
inc
mov
das
and
stc
in
push
repnz
clc
dec
push
ljmp
adc
sbb
lock
movsb
mov
ret
dec
adc
mov
loope
mov
and
les
cs
mov
and
leave
test
mov
pop
out
in
fldcw
or
clc
fisttps
cmp
cmp
daa
jns
add
mov
nop
mov
cmp
aad
notl
sbb
lea
inc
shll
es
sbb
and
sbb
sub
in
adc
add
scas
xor
int3
sbb
jne
lret
mov
jl
data16
jmp
adcl
adc
jmp
in
fadds
or
jne
div
mov
call
inc
pop
loopne
add
jb
push
cmp
or
pop
jecxz
pop
jbe
dec
lcall
adc
adc
adc
outsl
rcll
outsl
cltd
adc
or
push
outsl
xchg
adc
or
or
enter
or
cmpsb
insb
inc
or
cs
jbe
sub
adc
mov
roll
push
push
push
xor
pop
test
inc
movsb
roll
in
sbb
and
les
daa
cmpsl
mov
in
sbb
shr
in
cmpsb
mov
daa
nop
sbb
sbb
sbb
mov
jmp
mov
pop
pop
push
mov
adc
lret
mov
lock
jmp
bound
in
xor
dec
daa
mov
jl
imul
jp
or
or
add
cmp
jg
pop
lcall
test
mov
insb
loop
popf
out
mov
pop
gs
adc
jb
scas
iret
mov
loopne
cmp
xchg
mov
negb
dec
lret
pop
add
xor
inc
mov
xorb
loopne
mov
jmp
enter
fnstsw
sub
cld
jb
push
adc
sbb
sub
addb
pop
push
daa
push
in
insl
mov
push
pop
lret
dec
daa
push
inc
lods
in
mov
or
mov
pop
and
jnp
adc
or
inc
call
push
pop
inc
ljmp
mov
push
xchg
imul
repnz
pop
or
sub
popf
xchg
cs
pcmpeqw
inc
dec
fistpl
cmp
pop
inc
cmovle
outsb
push
jns
cmp
shl
cmp
call
rorl
jge
loopne
cmpsb
subl
cmpsl
mov
xchg
cmp
cs
jno
jle,pn
ljmp
mov
sbb
pop
or
std
les
lret
out
sbb
jbe
push
adc
and
inc
push
cmp
push
dec
mov
or
lret
and
push
movsb
or
dec
mov
dec
loop
shl
or
mov
mov
repnz
add
adc
dec
pop
sbb
jo
cmpsb
add
adc
sub
dec
or
or
ja
fs
dec
dec
add
sub
pop
inc
pop
inc
fdivrs
cli
je
push
and
jle
flds
and
dec
xor
cmp
xor
decb
test
mov
scas
cmpsb
cmpsl
pusha
bound
mov
ss
xchg
or
jl
jne
cmp
push
dec
xor
sub
xor
xchg
push
mov
cwtl
sub
adc
mov
lock
sbb
lahf
jle
push
call
loope
jmp
and
push
adc
add
arpl
inc
or
jmp
jmp
mov
xchg
jl
fistpl
push
loopne
jmp
push
xor
je
fisubl
xchg
lret
push
es
pop
push
mov
push
jb
adc
fmulp
mov
or
dec
cld
sub
add
bswap
dec
hlt
scas
aas
daa
adc
ljmp
jmp
mov
pop
mov
bound
jmp
enter
mov
and
push
mov
cs
add
xorb
add
inc
dec
daa
mov
jbe
cmp
jmp
mov
and
out
stos
or
and
out
and
jg
inc
dec
or
test
sub
hlt
neg
cmp
pop
xor
add
cmp
inc
fildll
add
sahf
cmp
dec
adc
cmp
mov
xchg
or
rclb
mov
xor
lahf
lds
cmp
pop
inc
shrl
mov
aaa
mov
imul
les
and
sbb
prefetch
or
jmp
push
push
stos
cmp
repz
mov
push
or
adc
mov
sti
and
sbbl
andb
stos
push
adc
fwait
in
add
nop
out
dec
inc
mov
icebp
arpl
cli
cmc
cltd
xchg
outsb
mov
xchg
mov
jno
cs
in
jae
stc
lods
pop
jo
cli
add
jmp
mov
cltd
es
or
pushf
cmp
add
mov
dec
sub
loopne
test
movsb
pop
sub
push
jmp
push
or
cmc
mov
or
xchg
repz
adc
push
add
push
or
inc
call
cli
or
adc
cmpsl
push
ror
data16
xor
sahf
push
xchg
cmp
dec
and
call
and
mov
adc
cmp
sti
adc
outsb
xchg
mov
inc
movl
or
insl
inc
das
fmul
je
sub
dec
pop
aam
sub
int3
pop
sub
or
jle
les
xor
or
cmp
adc
jle
mov
inc
pushf
jne
and
call
and
cmp
adc
jl
mov
xor
lock
push
cmp
je
test
mov
add
call
testb
push
daa
or
call
mov
adc
fs
jmp
mov
in
or
test
lret
add
ss
inc
push
lahf
loope
cmp
sub
mov
mov
dec
or
int3
sbb
inc
add
push
call
rcrl
cld
stc
stos
leave
fs
push
cltd
fidivrs
add
mov
sub
add
das
xchg
push
hlt
popa
aas
sbb
and
xchg
and
and
fs
lods
mov
cmp
or
shrl
lcall
xchg
xchg
stos
sub
rclb
fidivrl
inc
xor
cs
push
insb
xor
inc
aad
shl
clc
mov
shl
xchg
sahf
dec
inc
adc
dec
inc
repnz
jae
xchg
std
dec
call
push
popf
rorl
sub
sub
lahf
dec
sbb
loopne
add
sub
cmp
mov
fdivrl
imul
adcl
sub
push
xchg
stos
push
inc
cld
lahf
popa
nop
loopne
arpl
inc
enter
mov
xchg
nop
xchg
int
lret
adc
stos
mov
shll
loop
push
mov
ret
sub
jb
and
js
adc
sahf
les
das
movsb
dec
push
dec
push
adc
cwtl
adc
es
jg
repnz
xchg
add
repz
mov
xor
pop
inc
clc
xchg
cmp
test
rorl
leave
ret
mov
pop
gs
cs
cs
xorb
shrl
les
mov
pop
or
sbb
dec
and
jbe
ja
jae
mov
mov
cmp
test
mov
add
loopne
inc
push
jb
mov
jo
pop
out
leave
mov
inc
test
mov
push
mov
pop
or
icebp
loope
test
pop
cltd
sub
hlt
xchg
stc
or
xorb
mov
and
mov
xor
and
sahf
pusha
out
mov
pop
cmp
add
jne
or
and
popf
jns
dec
jns
push
call
into
ret
xor
xlat
pop
push
rcrb
inc
dec
aam
xchg
test
and
xchg
data16
mov
add
cmc
inc
mov
jge
adc
mov
les
push
adc
or
push
sarb
in
jg
dec
dec
in
pop
adc
out
jae
or
sbb
lgdtl
in
adc
or
loope
test
scas
adc
or
popf
adc
mov
out
mov
les
test
lea
stc
jae
pop
adc
inc
cmp
add
fld
cmpsl
inc
aam
mov
push
or
pushf
push
popf
ja
test
ficoml
cmp
mov
dec
mov
outsb
mov
dec
xor
adc
mov
xchg
mov
or
xlat
gs
or
mov
fdivl
rol
or
call
cmp
shl
dec
out
pop
pop
lock
mov
xchg
adc
sub
aad
jo
push
call
aad
lock
out
scas
push
add
sub
pop
mov
movsb
bound
sub
dec
add
pop
call
shl
repz
clc
lret
imul
cmp
ffreep
cmp
dec
fcomip
push
cmp
pop
cmpsb
jbe
jae
lods
push
xor
pop
jo
pop
mov
sub
cmp
stos
adc
mov
rcll
xorb
xchg
and
movsb
mov
push
push
outsb
and
xchg
push
xchg
sbbb
dec
xchg
mov
inc
lea
cmp
sbb
lret
stos
imul
leave
adc
mov
pop
lock
xor
rorb
xchg
jae
mov
add
dec
add
add
jo
jmp
and
jl
fadds
add
mov
add
jmp
psubusb
mov
fistl
in
je
xchg
inc
enter
xchg
lcall
inc
pop
add
mov
es
xor
or
jo
pop
xchg
int3
rclb
mov
lea
loopne
movsl
repnz
lcall
in
loopne
fs
imul
jge
cmp
xor
lret
enter
not
pop
dec
dec
loopne
fs
sub
idivb
mov
push
out
inc
add
stos
inc
mov
sbb
adc
xor
loopne
or
call
pop
dec
lods
add
xor
dec
mov
cmp
in
push
xchg
daa
jbe
cmp
or
mov
add
imul
add
in
pop
daa
adc
out
fisubs
stos
cmp
jp
movsb
mov
cmpsb
pop
cs
mov
inc
pusha
and
or
mov
xchg
mov
les
push
adc
jns
fwait
lds
inc
enter
arpl
ljmp
inc
sbb
sub
stos
mov
jge
test
and
push
mov
lods
daa
xchg
adcb
jb
cmpsb
inc
mov
and
push
jmp
test
jbe
inc
mov
lock
imul
stos
std
jmp
sbb
mov
cmp
ja
inc
mov
bound
adc
call
xor
dec
pusha
sub
xchg
std
xchg
add
loop
mov
out
and
int3
mov
mov
xchg
cli
js
jl
enter
add
mov
stos
push
test
nop
loope
mov
dec
stc
test
lods
pop
xchg
test
das
mov
mov
pusha
pop
push
mov
and
xchg
inc
jne
push
into
gs
daa
xor
push
inc
out
inc
mov
sbb
mov
cltd
loopne
enter
repnz
enter
push
cwtl
push
or
push
sarl
lea
es
inc
mov
add
cmp
inc
sbb
pop
test
adc
negl
push
sbb
and
mov
jb
repnz
js
push
jmp
dec
out
out
bound
adc
add
and
sbb
xchg
add
imul
mov
xor
popa
lea
push
sub
aam
adc
xchg
mov
adc
call
inc
imul
sub
mov
scas
nop
stos
push
jbe
es
adc
mov
sub
push
push
dec
or
out
jne
inc
lahf
loope
fcoms
les
jmp
or
mov
cmc
or
mov
call
outsb
sub
cwtl
push
push
js
leave
cmp
repnz
sub
fs
sub
push
cmp
sub
adc
push
mov
push
push
inc
mov
sbb
lret
call
lret
push
sbb
enter
cmp
sub
pop
dec
lea
sbb
lds
outsb
cmc
adc
ds
inc
lret
push
dec
xor
xor
mov
iret
sub
rcll
into
inc
and
out
mov
orl
inc
inc
les
mov
dec
fcoml
mov
mov
aam
daa
mov
pushf
mov
sub
or
insb
jmp
sbb
popa
cmp
mov
push
leave
and
jne
and
jbe
fiaddl
lahf
mov
cmpsl
jb
xchg
xor
cmc
sub
mov
iret
push
inc
sbb
test
lret
data16
adc
lret
je
push
setl
je
xchg
popa
mov
cwtl
test
cmpsb
xchg
dec
mov
subl
insb
dec
mov
lret
int3
testl
mov
xor
dec
push
xor
push
adc
xor
es
dec
and
xor
dec
xor
inc
xor
cwtl
jp
push
iret
adc
inc
in
call
mov
popf
inc
loopne
in
repnz
cmp
cmpsb
push
fsubl
cmpsl
sbb
outsl
fsubs
ja
pop
or
inc
cltd
xor
out
rcrb
out
inc
rcl
mov
or
and
push
lret
int3
cmp
or
ljmp
push
mov
enter
fsubl
xor
sbb
mov
and
test
fwait
inc
nop
les
sbb
dec
rclb
movups
out
test
enter
and
bound
nop
insb
and
out
and
es
jmp
add
add
push
pop
call
sti
rorl
jne
xchg
rorl
xlat
ss
test
jp
xchg
pushf
sbb
push
imul
cmp
jbe
gs
mov
or
mov
dec
fwait
adc
out
mov
int
nop
lahf
cmpsl
cmpsl
shr
cmp
pop
cwtl
daa
adc
pop
mov
push
add
sbb
mov
gs
sub
test
lods
and
leave
jp
dec
adc
cmc
cmp
mov
aad
mov
ja
mov
lds
sub
hlt
xchg
out
inc
adc
in
inc
push
jnp
xchg
ljmp
dec
mov
or
jmp
aas
loop
bound
dec
sub
lret
bound
dec
jae
jg
popf
lock
xchg
cli
fyl2xp1
mov
xchg
fldl
and
inc
xchg
jge
dec
jne
xchg
sub
dec
pop
rorl
loope
outsl
xchg
mov
rolb
or
push
pushf
lret
pop
add
adcb
cli
push
jp
xlat
and
push
push
sbbb
or
ret
add
push
jmp
popa
imul
loop
or
loop,pn
xchg
movsl
push
adc
pop
incl
cmp
shlb
cmp
and
push
iret
rclb
add
stc
and
pop
test
mov
popa
add
push
sbb
lahf
pusha
out
dec
mov
and
sub
jns
jge
xchg
xchg
inc
imul
pop
imul
movsb
sbb
push
jle
or
test
out
jae
js
sbb
insl
inc
arpl
ficoml
or
stc
fst
dec
dec
test
mov
test
fldenv
xchg
mov
ja
push
frstor
call
adc
adc
cltd
inc
rorl
shlb
cmp
xchg
stos
or
mov
in
inc
sbb
dec
stc
enter
push
lret
and
sub
cltd
xlat
or
notl
mov
pushf
or
push
fldcw
test
bound
mov
and
mov
push
push
mov
push
jns
lods
movsl
xchg
inc
dec
push
add
sbb
pop
das
mov
mov
movl
adc
mov
sub
cmc
xlat
mov
jns
inc
xor
inc
daa
imul
movsb
inc
and
mov
mov
std
cmp
daa
jae
callw
push
pop
xchg
cld
mov
xchg
cmp
jae
out
mov
cmpl
pop
rorl
or
pop
arpl
dec
lret
inc
ljmp
inc
cltd
shr
lret
int
imul
and
xchg
push
call
aas
adc
std
shl
stos
je
dec
pusha
cmp
dec
adc
cltd
rolb
mov
cmovl
or
add
xor
adc
mov
dec
and
lret
push
or
add
fldcw
enter
stc
cmp
out
fistpl
push
cli
and
clc
sar
add
cld
repz
aas
jbe
rorb
fnstenv
test
push
add
sbb
push
shrb
xchg
sbb
in
out
push
test
dec
mov
mov
repz
pusha
add
push
add
fldt
mov
and
sbb
and
jmp
imul
or
mov
not
les
or
sub
jno
mov
mov
subps
add
jo
dec
mov
leave
jne
dec
hlt
stc
adcl
adc
mov
fbld
cmp
xchg
out
mov
insl
cmp
xor
in
sub
clc
add
dec
mov
idivb
sub
mov
dec
and
in
insb
hlt
pusha
int3
xorl
int
test
je
insl
push
lcall
dec
pop
mov
fwait
add
cmp
andb
inc
mov
inc
adcl
sbb
enter
sbb
les
mov
dec
loop
mov
in
cli
nop
inc
addb
pop
call
in
jge
push
sbb
nop
sub
sub
sbb
adc
adc
ret
fs
or
sbb
rcr
mov
adc
lea
rorl
ja
cli
adc
ljmp
and
adc
adc
inc
push
adc
enter
mov
popa
and
mov
ror
mov
cmp
cld
adc
enter
bound
call
icebp
jmp
dec
pop
mov
in
mov
cmp
pop
mov
or
fcmovbe
mov
pop
pushw
dec
lods
pop
sbb
add
daa
stos
fnsave
adc
cmc
aas
popa
les
adc
mov
cmpsb
mov
adc
push
call
and
sub
or
mov
adc
or
inc
adc
and
and
test
sbb
add
inc
push
push
mov
inc
xchg
xchg
sti
adc
adc
push
nop
dec
xchg
inc
adc
lods
loopne
jmp
sub
aam
inc
les
mov
inc
dec
dec
sub
dec
and
imul
pushf
dec
inc
add
xchg
pop
push
in
jae
push
push
pop
ds
dec
or
jp
inc
pop
push
or
or
cmp
xchg
jbe
mov
fwait
inc
int3
xor
mov
or
push
gs
fs
mov
pop
fcomps
cs
loopne
aaa
and
enter
lds
fadd
pop
int3
out
aaa
jmp
adc
lret
adc
icebp
xchg
and
lahf
pop
int3
stos
jg
rorl
cmpsb
sbb
jae
xchg
lods
xchg
icebp
and
cmpsb
and
mov
dec
pop
jno
jmp
sub
pushf
loopne
aam
xchg
dec
and
pushf
pop
int
mov
cmp
add
add
test
or
or
mov
mov
lods
pop
adc
jns
sbb
dec
insb
mov
mov
pop
jne
lods
hlt
add
xor
loop
xlat
sbb
fldl
cltd
mov
or
and
sub
jmp
inc
mov
xchg
out
or
mov
enter
pop
aaa
rcrb
adc
xchg
xchg
jmp
xor
or
int3
pop
dec
or
dec
cmp
addl
gs
cli
movsl
jp
in
jmp
mov
rol
ret
xchg
add
das
ret
fmull
dec
repnz
jne
cmp
pcmpgtb
jl
fs
jle
mov
loope
out
fisttps
dec
rolb
pushf
sbb
mov
or
stc
add
add
xchg
imul
arpl
dec
push
push
mov
rclb
fstp
out
xor
shl
in
or
push
in
and
sbb
jecxz
jl
inc
loopne
out
ror
flds
sub
movsb
adc
repnz
adc
dec
daa
call
lock
mov
cld
stos
inc
push
lea
call
imul
int3
stc
out
cmp
cmp
inc
and
push
pop
mov
hlt
mov
cli
stos
mov
mov
push
sbb
and
adc
cmp
iret
dec
or
movsb
xchg
sahf
jmp
pop
pop
int
jg
sub
rclb
add
pop
xchg
mov
cmp
or
adc
jns
mov
mov
les
mov
shrb
xor
imul
inc
mov
pushf
cmp
icebp
dec
cld
outsl
mov
xchg
mov
push
xchg
and
jnp
adc
in
or
mov
adc
rcrb
outsb
add
mov
mov
js
test
lock
in
adc
leave
adc
lret
movsl
mov
enter
mov
cmp
mov
or
push
dec
or
aas
push
inc
adc
popf
cmp
cmp
and
cmp
daa
or
push
xchg
mov
lea
jnp
out
push
pop
in
xchg
push
cmp
pop
movl
push
lcall
stos
lahf
sar
ljmp
add
adc
sub
sub
inc
aam
hlt
jmp
jp
or
lods
and
cmp
and
push
inc
repz
shl
xor
adc
adc
adc
cs
call
pop
les
mov
jae
cmp
les
lret
sub
pop
repnz
ja
adc
adc
or
das
je
sti
test
pusha
mov
add
shrl
loope
push
inc
jmp
lods
sub
sub
outsb
inc
fmul
nop
xor
stos
aam
push
xor
lret
sbb
pop
inc
aam
cmpsl
enter
push
enter
add
jp
aam
sub
addl
sub
fcmovbe
ljmp
psubusw
test
pop
sub
jecxz
orb
lock
test
in
std
in
rclb
into
xor
or
clc
stc
or
pop
jb
jae
sub
sbb
adc
mov
mov
jno
add
add
cmp
push
in
daa
dec
aam
push
cmp
lods
js
sahf
popa
mov
push
popf
imulb
rolb
jmp
in
out
push
sbb
fwait
lods
and
pop
mov
push
cmc
sub
out
push
int3
cmp
push
pop
outsl
lods
and
mov
ret
movsb
jp
and
dec
inc
add
stos
lock
cmp
mov
enter
nop
enter
dec
mov
outsl
sahf
imul
outsb
enter
iret
sub
shrl
jns
cmpsl
clc
jbe
loopne
shr
nop
movsb
jle
dec
push
subl
sarb
or
pop
pop
enter
scas
adc
in
je
in
dec
jo
loopne
adc
mov
and
cltd
mov
cld
xor
enter
cmpsl
cmpsb
mov
clc
in
xorl
push
dec
out
dec
clc
mov
dec
test
dec
or
enter
and
out
jg
stos
cmpsl
mov
popf
or
pop
das
ret
add
sqrtps
or
pop
adc
sbb
push
inc
fcoml
mov
js
scas
pop
jmp
rorb
pop
iret
adc
sub
pop
mov
fcomps
mov
idivb
adc
dec
lret
sbb
sbb
jne
jne
mov
jle
inc
leave
out
add
jle
sub
push
xor
lret
pop
inc
push
call
mov
and
cmc
inc
jecxz
push
push
pop
dec
in
cmp
add
xchg
scas
mov
gs
pop
or
push
decl
jg
lea
cmp
lods
adc
xor
xchg
inc
mov
orb
data16
das
enter
or
add
gs
ljmp
nop
adc
movsb
mov
adc
add
sub
xor
inc
in
cmp
xchg
stc
or
adcb
mov
adc
and
cld
jne
bound
aad
sub
jl
sub
and
xchg
inc
rcrb
mov
lea
out
mov
inc
sarb
xchg
inc
or
lock
enter
sbb
push
lea
sub
mov
xchg
mov
lcall
push
ss
push
pop
adc
daa
or
jle
cwtl
cli
inc
icebp
add
aam
push
dec
or
daa
mov
push
and
dec
out
das
into
enter
pop
push
mov
stos
adc
imul
imul
or
jg
repnz
or
inc
shl
lcall
shr
and
or
nop
test
or
xor
xchg
sbb
fs
cmp
test
pop
add
jmp
pop
dec
aam
inc
notl
out
add
jo
xchg
arpl
fnstsw
repnz
subb
fsubrl
stos
je
lea
mov
andb
cmpsb
and
cmp
es
sub
and
sub
and
cmc
mov
add
call
testb
outsb
lock
inc
pushf
cmp
je
fs
fdivrl
dec
dec
pop
inc
or
push
test
gs
mov
stc
loope
sub
arpl
insl
jmp
sub
cmc
and
add
push
and
mov
mov
inc
nop
hlt
mov
leave
in
shlb
pop
repz
dec
mov
add
jmp
jo
je
in
dec
xor
or
mov
sbb
cs
les
or
sbb
rolb
adc
stos
movsb
dec
repnz
lret
mov
pop
popf
push
ss
icebp
test
sbb
pop
cwtl
inc
sar
push
in
xchg
adc
in
cmp
adc
mov
je
sbb
xchg
jmp
mov
pop
inc
mov
shrl
dec
xchg
mov
mov
or
mov
or
shlb
inc
out
inc
adc
or
sub
jns
lods
inc
adcb
push
sahf
mov
ret
push
mov
and
jmp
sar
cmpsb
add
and
and
mov
hlt
mov
mov
imulb
lahf
pusha
clc
hlt
xor
lea
cmp
sbb
adc
pop
push
lods
cli
adc
mov
xor
lods
frndint
mov
andl
imul
sar
int
sub
or
into
pop
adc
aad
mov
repz
mov
lret
push
fmull
mov
sbb
mov
push
cltd
loope
or
pop
loopne
sbb
call
lock
gs
mov
sti
or
sbb
sub
fsubl
mov
sbbl
dec
pop
movsb
and
adc
adc
and
dec
mov
xor
mov
xor
scas
mov
sarb
bound
jmp
mov
enter
sbb
pusha
enter
and
or
test
mov
jns
leave
add
and
mov
int3
or
xor
shrl
repnz
jne
sbb
push
xor
subl
adc
cwtl
xor
jl
or
inc
ljmp
call
and
les
or
push
outsb
xchg
iret
adc
mov
push
or
push
das
je
fs
add
push
gs
out
xchg
cmpsl
jno
cltd
adc
addb
or
push
mov
lret
xchg
or
add
push
leave
jb
mov
mov
in
mov
mov
push
aam
nop
push
loopne
call
mov
ljmp
adc
and
ficompl
rclb
shl
popf
sbb
mov
pop
fdiv
fstps
ss
inc
adc
shrl
imul
imul
mov
std
ds
and
call
xchg
aad
xor
jmp
fisubs
cmpsl
clc
shll
or
stos
jge
sbb
push
leave
mov
sub
movsb
dec
adc
xchg
mov
ret
icebp
std
and
mov
or
sbb
inc
and
jmp
inc
or
add
adc
add
inc
loop
fwait
jae
and
les
bound
pop
cmc
mov
ja
dec
jg
int3
or
or
push
push
mov
sub
mov
mov
adc
or
dec
jl
incb
and
call
dec
and
loop
popf
adc
iret
mov
push
mov
and
adc
fs
or
outsl
xor
shll
sub
dec
insl
sbb
jp
adc
add
jb
imul
mov
mov
shr
mov
les
fdivrl
sbb
jnp
movsl
pop
cltd
and
xchg
mov
insb
jl
shr
bound
or
adc
gs
push
push
in
sub
aaa
les
dec
ljmp
push
and
outsl
int3
adc
adc
or
pop
loop
xor
scas
lret
pop
repz
ja
or
or
xor
and
or
aas
out
enter
bound
out
sahf
inc
inc
icebp
ds
inc
jb
pop
mov
cld
imull
and
push
ljmp
adc
ljmp
xchg
mov
and
and
dec
jmp
sub
mov
outsb
ret
pop
push
testl
add
je
das
or
sbb
sub
test
bound
adc
gs
loopne
sbb
dec
or
sub
mov
jo
sub
sarb
and
enter
adc
pop
fcompl
xlat
and
inc
cli
add
enter
aaa
fsubs
cmpb
fchs
lock
outsb
fsubs
xlat
xchg
push
inc
loop
cmp
or
mov
jbe
inc
aam
push
jle
loop
sbb
mov
orl
mov
ds
test
mov
orb
movsl
cld
js
mov
pop
xchg
outsb
nop
or
add
dec
dec
jbe
sbb
inc
mov
aam
enter
ds
dec
test
add
test
dec
sub
pop
in
jnp
out
pop
repz
xchg
lock
and
shr
test
jae
into
mov
sbb
inc
lock
or
jmp
pop
mov
mov
fiadds
imulb
and
adc
loopne
leave
adc
push
push
jge
addr16
jp
ret
add
add
inc
mov
je
out
and
sub
dec
pop
lock
loop
es
enter
fs
cmp
mov
mov
dec
xor
or
aas
ss
je
call
push
mov
dec
mov
xor
adc
call
and
and
ja
mov
jl
and
inc
xchg
in
leave
pop
cld
sahf
dec
sarb
adc
scas
sbb
popf
jno
and
and
sub
cmp
cmp
cwtl
mov
and
xor
test
adc
xchg
call
les
stc
andb
push
mov
add
por
loopne
mov
dec
xchg
jge
xor
jp
rorb
test
mov
add
hlt
pop
ja
in
nop
xor
insl
jo
loopne
ja
hlt
cld
add
test
stos
jnp
imul
ljmp
adcl
cmp
sbb
xchg
pop
ss
fsubl
fsub
pusha
adc
cwtl
cmpsb
push
mov
cmp
add
push
hlt
mov
mov
jg
arpl
cmp
outsl
pop
push
sbb
nop
dec
xlat
jmp
mov
enter
test
add
mov
dec
xchg
bound
movsl
loope
jle
das
gs
push
stos
int
mov
daa
xor
rclb
lock
push
or
sarb
clc
jne
fmull
push
jae
popa
and
call
inc
add
dec
lods
fs
dec
cmp
adc
jle
into
mov
pop
jne
mov
push
shl
loopne
push
mov
xlat
xor
aad
shrb
adc
shlb
rolb
cli
push
or
adc
inc
mov
iret
int
bound
imul
arpl
dec
cwtl
fnsave
shlb
fstpl
inc
dec
xorb
mov
lds
bound
cmpl
out
hlt
xorb
in
out
push
pop
int
lahf
std
inc
ret
mov
mov
mov
mov
pop
dec
or
push
fsubrs
add
cld
pusha
lods
fwait
pop
frstor
pop
pop
loopne
inc
mov
fnclex
and
pusha
mov
movsl
sub
orb
dec
not
clc
lret
scas
loop
ja
aad
push
fs
sub
or
fldt
into
push
fwait
sub
adc
and
pop
sub
inc
xor
int3
mov
cld
pop
mov
cmp
out
add
fdivp
fstp
xchg
inc
and
push
fldpi
mov
dec
pop
xchg
xor
push
xchg
std
xchg
shlb
inc
sbb
lock
add
inc
inc
fcomps
mov
jle
mov
sbb
jne
insl
out
into
lock
mov
dec
pushf
jmp
out
dec
push
mov
xor
not
pop
mov
sbb
push
sub
pop
push
push
test
sub
shrb
aam
fildll
jb
xor
gs
inc
mov
out
push
sub
sub
inc
jmp
gs
sub
stos
mov
xchg
ljmp
negb
in
add
aam
daa
jne
mov
adc
push
mov
shl
pop
mov
pushf
dec
movsl
leave
xlat
scas
jge
sbb
jl
push
or
or
mov
jmp
xchg
cmp
rcrb
jo
mov
cmp
push
movsb
jne
cli
pop
inc
call
dec
dec
mull
jl
cmp
or
push
adc
popf
out
inc
add
shrl
sub
into
dec
popf
fs
fdiv
mov
inc
dec
ljmp
leave
and
push
xchg
adc
mov
stos
fs
mov
mov
outsb
stos
stos
dec
adc
popf
and
dec
dec
lock
stc
sub
dec
pop
mov
adc
push
xchg
lcall
sbb
lea
cmp
cmp
add
mov
aam
movsl
pop
cmp
out
and
faddl
fucomp
cmpsb
sbb
and
insb
sub
cmp
mov
push
sub
inc
lahf
shll
cmp
pop
xchg
mov
pop
jne
xor
cmp
xchg
bound
mov
mov
outsb
into
dec
xchg
lds
mov
cs
fs
cli
push
sbb
dec
ret
xchg
outsb
ljmp
mov
sub
es
jbe
test
mov
push
jns
popf
jp
std
dec
xchg
ret
jl
call
mov
stc
sahf
inc
or
enter
jmp
fstpl
enter
adc
notb
incb
cmc
outsb
lock
add
dec
xchg
shll
push
fwait
insb
call
out
ret
in
fcomip
dec
stos
imul
xchg
outsl
adc
cltd
push
or
mov
jne
sbb
or
jg
push
push
les
jnp
cld
pop
js
cmpsl
mov
scas
subb
push
and
push
mov
test
sub
popa
mov
xchg
inc
xlat
jnp
xor
lods
pop
xchg
xor
jns
jge
mov
dec
icebp
or
jmp
es
inc
sbb
fdivrs
cwtl
mov
jmp
adc
push
movsl
and
outsl
orl
pop
sbb
stc
loopne
jg
es
enter
lcall
cwtl
xchg
insl
movsl
and
mov
push
movsl
and
add
rorl
int3
nop
sbb
cld
push
jl
in
inc
testb
inc
repnz
ds
pop
xchg
rcl
sbb
lea
sbbl
pop
xchg
xchg
in
mov
and
or
arpl
jecxz
dec
sti
inc
adc
xor
inc
data16
cmp
and
jge
jmp
call
mov
fistpll
test
pusha
negb
adc
pop
out
sub
int
and
xchg
or
rcrb
cmp
add
or
jmp
call
shl
cs
das
push
mov
sbb
jmp
decl
add
jmp
pop
push
jns
jg
cmc
cmpl
loopne
dec
cltd
jnp
js
insl
sub
pop
jbe
jbe
pushf
mul
cs
and
jno
mov
mov
iret
or
cli
mov
subl
and
cmp
call
pop
push
and
lock
in
push
push
dec
pop
in
adc
jl
mov
sbb
add
out
push
daa
call
inc
jne
jp,pn
xor
movsb
test
mov
dec
xchg
fcomps
sbb
pop
js
call
mov
push
dec
insb
push
push
adc
sbb
mov
ja
jp
lea
pop
xchg
std
and
mov
push
adcb
jns
mov
xchg
adc
or
jmp
push
jle
sub
or
mov
mov
jae
cmp
pop
push
or
push
inc
fs
and
call
movsl
es
adc
repnz
xchg
mov
mul
addl
int
std
add
cld
and
cmc
scas
mov
jle
and
rcrl
jno
in
das
push
mov
xchg
frstor
icebp
movsl
stc
popf
cmp
push
xchg
mov
pusha
sbb
insl
cs
call
sub
cmp
or
and
lock
stos
fstp
xchg
fs
daa
lock
hlt
cmp
test
sub
in
jl
addb
sub
gs
inc
sbb
repz
daa
push
jl
cmp
and
cmp
mov
andb
in
fistpl
ljmp
fmuls
push
shl
sahf
mov
call
js
adcb
pushf
mov
inc
gs
sti
hlt
xchg
das
nop
pusha
imul
repnz
jo
fwait
cmp
sbbb
fisubrs
and
push
and
sbb
or
icebp
push
jg
out
push
dec
mov
mov
aad
mov
loope
adc
mov
mov
in
push
inc
add
mov
push
add
clc
lock
inc
jns
pop
add
jmp
xchg
cmp
les
in
add
test
sub
pop
push
leave
je
icebp
test
push
clc
xor
nop
mov
imul
cmp
clc
dec
loop
jne
mov
fidivl
les
or
dec
idiv
addr16
stc
shll
jmp
mov
shl
in
xor
imul
adc
out
jle
xchg
xor
cmp
jle
add
inc
or
cmc
fs
xchg
or
dec
test
aaa
test
xchg
int3
dec
cli
test
ret
jle
sub
xchg
lds
push
pop
cmpsl
push
sub
xchg
adc
inc
mov
mov
xchg
fmul
xchg
test
mov
cmp
testl
jge
lahf
and
cmpsb
push
or
or
sbb
adc
das
sbb
sahf
xchg
cld
bound
cmp
adc
push
outsb
shlb
jae
and
sub
add
dec
in
addr16
cmpsl
add
insl
jecxz
dec
test
in
inc
or
mov
sbb
dec
or
xor
ljmp
fs
mov
jle
nop
jge
jo
test
lock
cwtl
aam
sub
add
out
add
ss
lret
dec
jo
repz
fmull
test
or
jecxz
dec
xor
xchg
movsl
mov
adc
mov
and
push
mov
fstpt
adc
jmp
fcoml
call
cmpsl
scas
jb
push
dec
cld
call
mov
fs
mov
cmp
xchg
out
mov
or
adc
push
xchg
pop
xchg
jmp
adc
shrb
ds
test
push
xlat
cltd
je
ret
push
leave
xchg
nop
adc
test
test
es
jb
das
or
sub
mov
adc
sbb
add
cs
pop
pop
push
ja
repz
jmp
stos
ret
out
orb
add
adc
mov
pop
popf
out
inc
push
sub
push
icebp
mov
movsb
shrb
push
js
and
pop
jb
push
dec
inc
mov
int
sub
pusha
sarb
sbb
movb
imul
push
addb
rolb
or
stos
jp
push
pusha
pop
fmuls
sub
movsb
xchg
gs
fnsave
sub
mov
int
dec
loope
xor
jl
adc
xchg
xor
adc
pop
test
bound
push
adc
enter
or
add
les
and
jmp
push
add
adc
jbe
jmp
lods
sub
sub
push
xchg
push
xor
leave
push
dec
pop
adc
andb
clc
in
or
mov
jmp
xchg
lods
movsb
xchg
add
mov
stos
mov
imul
adc
sub
in
add
mov
cmp
daa
les
repz
gs
int
sub
add
adc
scas
jg
mov
hlt
add
add
push
push
repz
insl
ret
push
xor
mov
fstpl
ret
cmp
pop
mov
in
push
add
pop
leave
ret
xchg
mov
sub
adc
add
pushl
or
popa
push
jns
dec
je
mov
pop
je
adc
das
jge
sub
aaa
dec
es
or
xchg
pop
add
clc
int3
xchg
dec
xchg
int
cmp
mov
je
mov
into
push
add
jo
inc
xor
mov
mov
jg
xor
clc
dec
xchg
vpcmpeqw
out
sbb
ss
cmp
test
xchg
push
xchg
dec
pusha
jecxz
and
jge
sub
sub
test
lahf
jno
push
test
inc
lcall
sub
cmc
stos
mov
cmpsl
lods
jo
loope
outsb
xor
push
push
in
add
adc
aaa
in
mov
lcall
sbb
sahf
loopne
adc
xor
add
pop
cmp
xchg
inc
out
adc
repnz
sbb
add
mov
mov
and
test
push
dec
sub
repnz
shl
call
or
jb
sub
xchg
dec
sub
call
push
pusha
pushf
mov
mov
movsl
xchg
xchg
ja
xor
mov
mov
movsb
data16
push
pop
mov
movsb
fs
push
cs
or
xor
nop
es
and
lods
in
jp
loopne
in
ret
dec
push
imul
jl
mov
push
repnz
xor
adc
push
stc
xchg
mov
inc
jle
sti
dec
mov
enter
aaa
mov
adc
push
inc
mulb
sbb
mov
adcb
pop
cwtl
adc
and
pop
add
imul
mov
push
xchg
pop
clc
scas
cmp
jne
cs
xor
adc
out
andb
lcall
addr16
xlat
sbb
cwtl
xchg
dec
fcomps
sub
jecxz
adc
push
in
mov
lods
test
scas
lock
sub
jle
push
sahf
popa
xor
push
cmp
bound
jle
jmp
xchg
sub
rorb
mov
mov
pushl
rorb
pop
imul
decb
xchg
pusha
mov
xor
sahf
outsb
sub
xlat
lock
gs
push
cmp
popf
in
loop
sbb
inc
test
adc
in
lods
mov
pushf
jmp
popf
and
inc
and
test
xchg
xorl
std
leave
inc
dec
and
aam
scas
ret
mov
and
in
and
or
mov
leave
insb
sbb
or
and
sub
push
adc
jno
inc
xchg
js
xchg
rorl
push
mov
or
fadds
dec
call
fs
dec
cli
lea
push
xchg
insb
push
pop
ja
lea
push
sub
jnp
jae
mov
fwait
pop
pop
lea
movsb
cmp
aaa
ss
or
fisubrs
imul
pop
aas
push
mov
test
xorb
xchg
mov
sbb
stos
or
das
xchg
xor
call
test
or
mov
addl
ficoml
mov
xchg
adc
adc
shl
jmp
fs
xor
push
jno
mov
dec
mov
sbb
test
push
xchg
pop
lret
xchg
jmp
dec
in
or
and
push
psllq
dec
cltd
push
adc
mov
dec
mov
jmp
adc
jne
stc
bound
call
xchg
sub
xor
mov
or
rorb
mov
lea
add
sbb
fldl
xchg
sbb
into
daa
lea
in
mov
int3
mov
jae
mov
inc
and
inc
push
inc
inc
adc
sbb
and
push
mov
insb
jl
pushf
and
inc
sub
in
inc
adc
dec
or
push
mov
jne
xor
inc
dec
add
ds
adc
mov
into
mov
jmp
adc
and
mov
int
cmp
rcll
test
in
push
pop
sub
jmp
es
mov
mov
xchg
sbb
pushf
and
adc
xchg
and
js
cmpsb
xor
popf
cli
in
and
fmuls
call
lret
fsubl
inc
mov
es
cmp
mov
cmp
test
in
loopne
push
sbb
pop
xor
int3
data16
ret
addl
in
adc
lea
mov
sub
pushf
adc
pusha
pop
pop
inc
lods
cmc
sbb
dec
push
lods
pushf
loope
or
test
mov
xor
pop
dec
inc
loopne
inc
movswl
rcll
aas
nop
pop
movsb
push
insb
in
dec
adc
loopne
cltd
push
add
jp
push
xor
enter
testl
and
mov
in
push
popf
xchg
test
ffreep
inc
or
jbe
adc
jmp
rcrb
into
nop
rolb
sub
mov
test
push
pop
mov
adc
test
movsb
and
nop
sar
mov
push
mov
int3
lds
mov
pusha
mov
mov
insl
mov
xchg
jmp
and
sub
nop
and
loop
or
in
arpl
test
or
jmp
out
xchg
and
int3
mov
ss
pop
xchg
mov
aad
jb
in
mov
xchg
cmp
or
push
adc
jmp
adc
in
addr16
add
adc
adc
adc
pushf
inc
stos
inc
mov
xchg
cs
jecxz
and
sahf
adc
scas
inc
lods
xchg
mov
addb
insb
adc
sub
xor
jns
dec
sub
and
xchg
les
sub
add
pop
rol
cltd
xchg
int3
and
add
jnp
xor
inc
dec
or
enter
jmp
jmp
lods
out
or
rorb
or
daa
sub
adc
xlat
in
adc
xor
push
mov
rol
and
add
and
push
call
les
incl
xchg
xor
rolb
dec
push
cld
enter
inc
mov
push
xchg
jne
cli
and
adc
test
imul
jmp
int3
dec
pop
movsb
push
xchg
les
and
in
add
sbb
movsb
sbb
lea
and
ds
and
and
mov
sub
adc
xorb
movsb
cmp
add
sbb
dec
cli
gs
adc
adcl
dec
in
and
adc
popf
int
rorl
or
or
pop
xchg
push
iret
push
mov
lret
xchg
jg
mov
mov
leave
std
stc
adc
lret
push
push
insb
adcl
and
test
mov
nop
mov
cmpsb
push
nop
xchg
sub
xchg
subb
jle
rorb
inc
inc
cwtl
mov
or
xchg
sti
mov
push
fcompl
stos
mov
sub
jp
cmp
outsl
in
pop
xorb
push
jle
push
lock
push
insb
or
pop
les
testb
mov
repnz
sub
jmp
dec
imul
sub
dec
push
sbb
jecxz
inc
mov
leave
push
lock
test
xor
or
jne
xchg
sbb
push
clc
imul
sbb
lock
gs
xor
aas
xor
sub
sub
sub
rclb
xorb
faddl
push
test
insl
addb
add
test
daa
scas
adc
fstl
pop
mov
call
mov
mov
mov
inc
js
call
jp
das
sbb
mov
jo
xchg
out
dec
je
clc
mov
or
and
xor
inc
sbb
sbb
push
mov
ds
add
dec
push
pop
xchg
push
and
xchg
add
add
in
add
enter
ret
and
loopne
lods
add
add
push
add
addl
and
data16
sbb
sbbl
xor
and
inc
dec
inc
ret
in
or
add
adc
sti
add
jo
push
pop
cmp
icebp
or
or
or
clc
or
or
or
sbb
pop
lods
cmp
jge
mov
mov
fisubs
pop
adc
fnstsw
repnz
xlat
cld
in
dec
adc
add
call
icebp
add
or
mov
mov
and
pop
jmp
or
lret
cmp
cmc
mov
rolb
shl
inc
xor
jno
mov
adc
mov
sbb
roll
dec
fistps
lret
and
dec
push
not
das
push
pop
shlb
inc
shll
inc
pop
mov
mov
jno
or
add
testb
lcall
movsb
das
mov
inc
or
test
add
cltd
roll
scas
or
mov
mov
xchg
pop
and
mov
in
mov
pushf
sub
push
pop
andl
and
imul
scas
xor
dec
dec
cld
test
outsl
mov
and
dec
dec
push
aam
cli
pop
and
lods
das
mov
and
push
imul
dec
nop
mov
mov
xchg
xchg
push
or
aam
pop
sub
or
push
mov
adc
jne
mov
push
sbb
push
mov
mov
adc
test
fnsave
test
scas
push
loope
fidivs
add
push
push
fisubs
or
add
sub
add
and
lds
add
cmp
test
push
movsb
inc
mov
inc
mov
adc
mov
cltd
stc
rclb
mov
mov
push
xchg
outsb
shlb
push
push
mov
sbb
push
cmp
mull
xchg
add
xchg
dec
add
sbb
xchg
push
lcall
sbb
insl
or
add
push
sub
imull
or
rcll
or
add
aad
clc
addb
cwtl
ret
movsb
xchg
adc
jb
or
inc
stos
jae
daa
das
mov
mov
test
push
and
cli
mov
sbb
fldcw
pop
pop
lock
out
and
xchg
add
xchg
xchg
push
and
adc
push
es
or
test
movl
cwtl
repnz
adc
sub
ds
inc
fadds
inc
xchg
dec
scas
lahf
mov
popf
or
and
mov
rcll
fs
das
ds
push
dec
push
xchg
lods
lea
call
mov
dec
cmp
mov
lds
mov
data16
push
fdivrs
leave
or
and
enter
cld
push
or
mov
mov
sub
fdivl
push
push
int3
cmp
adc
outsb
pop
xor
push
sarb
mov
or
popa
and
jne
ss
or
adc
or
xchg
pop
stos
aam
aaa
lds
mov
nop
mov
inc
xchg
mov
dec
in
repnz
push
jp
adc
negb
or
addr16
dec
shll
push
add
or
mov
iret
xchg
mov
int3
sbb
push
mov
sub
mov
dec
push
test
push
jge
cli
sub
lcall
stc
inc
jbe
dec
cwtl
les
sub
notb
call
mov
cs
inc
pusha
and
add
xor
inc
aaa
out
mov
jmp
mov
mov
inc
push
mov
pop
xor
inc
add
sbb
jno
cmp
cld
add
data16
cmp
dec
inc
jecxz
bound
inc
add
insb
push
lcall
or
adc
int3
push
push
call
nop
jno
push
sbb
xchg
cmp
mov
fsubl
cwtl
sbb
adc
pop
add
test
cmc
sbb
mov
inc
es
inc
add
test
nop
mov
dec
add
cwtl
adc
jmp
sub
dec
adc
insl
call
sub
adc
test
cltd
sbb
inc
lahf
inc
cmpsb
push
cwtl
inc
xor
and
nop
mov
popf
and
in
push
dec
jo
aaa
clc
cmp
cmp
jp
sti
dec
mov
inc
mov
sarl
pop
in
push
lret
cmp
cmpsl
pop
shll
das
add
dec
sub
mov
jnp
jbe
or
cmp
test
lcall
pop
push
in
imul
out
and
or
mov
and
pop
pop
adc
je,pn
push
sti
cmp
call
jmp
push
pusha
inc
sub
lods
sbbb
psllq
jne
or
bound
cmp
push
push
adc
jne
sbb
add
lcall
dec
push
add
sbb
cmp
inc
cmp
lea
cmp
call
pop
mov
mov
test
sbb
pop
imul
rclb
daa
mov
sbb
push
xchg
sub
push
lret
call
lret
sub
sub
inc
add
or
cwtl
enter
daa
call
or
aad
and
jmp
cs
mov
jb
or
call
jmp
andw
and
inc
lret
fbld
das
fadd
jmp
adc
call
or
call
movsb
out
mov
sub
mov
or
jl
xlat
mov
ret
sub
lea
popf
imul
cwtl
punpckldq
pop
jle
and
cmpsl
mulb
ljmp
xchg
mov
cmp
push
or
imul
test
repz
cmp
call
sbb
test
adcl
js
pop
inc
xor
aam
enter
in
mull
call
call
or
cmp
mov
jmp
in
mov
adc
cmp
jae
mov
adc
or
pop
push
pop
xchg
cmpsl
pushf
lret
sar
xor
sub
test
add
mov
int3
add
mov
in
adc
push
push
stos
out
enter
mov
dec
xchg
sub
sbb
mov
push
xor
or
inc
fcoms
adc
scas
out
mov
push
insb
xor
ret
mov
movhps
rclb
mov
pop
xchg
xchg
cmp
sbb
lea
cmp
aam
cmp
mov
jmp
jecxz
lahf
leave
or
pushf
cmp
jnp
add
test
in
fistl
fdivr
push
adc
push
inc
sbb
add
fisubrl
test
pushf
adc
inc
sbb
push
xchg
fsubs
sbbb
adc
shll
xchg
sbb
cmpsl
mov
dec
std
shlb
adc
pop
cwtl
test
dec
mov
lcall
inc
pop
sub
or
xchg
xchg
and
mov
push
push
ud0
std
hlt
add
mulb
in
sub
adc
xchg
shll
push
mov
sub
loop
mov
out
fdivl
lret
push
mov
xor
in
add
mov
nop
lds
rcrl
nop
cmp
fnstsw
jne
jmp
nop
ja
xor
cmc
pop
ret
xor
sbb
aam
test
push
out
cmp
je
jl
xchg
push
mov
ljmp
iret
sbb
aas
or
jnp
sbb
daa
dec
punpckhbw
xchg
xor
sbb
or
and
sub
or
add
push
lret
and
icebp
push
push
arpl
or
add
xchg
or
jbe
dec
or
rorb
dec
into
jne
cs
dec
daa
cli
imul
pushf
mov
adc
mov
dec
ret
movsl
jmp
cmp
lods
sub
lea
and
dec
add
pop
xchg
aam
in
movsb
adc
inc
sub
ljmp
test
inc
jnp
sub
scas
push
dec
jne
es
cwtl
aas
pop
lods
pop
jnp
dec
lcall
xor
stos
mov
pop
add
sbb
inc
test
or
xchg
lret
and
xchg
sbb
mov
lfs
inc
pop
icebp
test
cli
les
cli
iret
shlb
and
inc
mov
jb
push
mov
sarl
push
xchg
jnp
bswap
inc
aas
adc
mov
aas
aam
jmp
push
cmpsb
int3
xchg
testb
inc
mov
cmp
jg
cmpsl
repz
clc
rclb
loop
inc
add
sar
ret
inc
or
and
jmp
inc
xor
jmp
stos
or
mov
or
nop
out
call
shrb
lock
mov
pop
sub
adc
sub
mov
xor
test
or
push
push
movsl
xor
lock
rclb
xchg
ret
pop
pop
mov
insl
int3
movzwl
rcrb
sbb
mov
imull
sti
adc
jno
sbb
push
jns
adc
adc
mov
pop
adc
out
das
mov
and
mov
push
pop
scas
cmp
jmp
mov
mov
and
and
or
or
push
mov
pushf
aaa
loopne
stos
push
or
or
or
mov
les
rcll
int3
mov
mov
notb
shll
add
xchg
das
std
insb
adc
movsb
cltd
or
arpl
sub
sub
jmp
adc
sub
loopne
in
popa
test
cmpsl
es
jmp
icebp
in
or
mov
xor
int3
mov
adc
lods
xchg
test
cli
js
cld
mov
pop
jne
mov
inc
xchg
xchg
mov
ds
xchg
sbb
nop
xor
es
gs
dec
wrmsr
sub
pop
xchg
cltd
das
add
and
fisubl
out
add
testb
scas
mov
pop
sbb
dec
sbb
dec
and
std
test
dec
or
outsb
roll
scas
cwtl
ret
aam
push
cwtl
aas
mov
test
or
cmpsl
sahf
test
push
andb
sbb
insb
adc
push
pop
aam
and
sub
cmp
sbb
xchg
mov
or
add
add
mov
xchg
xchg
xor
shlb
xchg
mov
mov
les
xchg
push
enter
adc
mov
jo
test
sbb
aam
lret
push
sbb
xchg
mov
ss
mov
xor
ljmp
inc
and
jmp
push
cwtl
dec
xchg
adc
aam
lea
push
mov
and
movsb
out
fs
or
adc
cmp
jne
lock
pushf
lcall
xor
sub
cmpsb
lock
cmp
test
or
adc
dec
in
jecxz
in
xchg
or
xchg
xchg
loope
add
or
cmpsl
movsl
push
pop
xchg
xor
xor
roll
pop
sub
pop
inc
or
pop
lods
mov
jg
test
pop
mov
lahf
pusha
inc
rolb
iret
inc
jne
repz
sbb
sub
ds
data16
addr16
dec
jmp
cmpsb
les
out
adc
arpl
xor
or
notl
inc
xor
repz
rcrb
lods
inc
scas
jmp
pop
xor
dec
add
sbb
gs
lods
adc
jns
arpl
xchg
sub
push
pop
and
adcl
jbe
pop
stos
mov
mov
push
fstl
jns
dec
push
inc
xchg
xchg
mov
dec
bound
shl
enter
add
mov
dec
popa
or
lret
push
movsb
out
into
rcll
test
cmpsl
dec
and
xchg
push
mov
stos
sbb
in
aaa
push
pop
ret
adc
or
into
mov
inc
push
pop
imul
xor
xchg
sub
loopne
lods
insb
in
imul
add
fwait
xchg
dec
push
and
push
test
inc
cld
add
lods
fs
loop
test
fs
loopne
sbb
leave
pop
mov
outsb
rcl
jl
pop
gs
dec
gs
inc
xchg
mov
jmp
sbb
xor
cmp
dec
adc
mov
sub
push
xor
dec
loopne
movsb
loopne
stos
fwait
pop
add
adc
or
jmp
decb
jmp
cmp
je
into
orl
dec
fdivs
cmp
xor
dec
sub
lock
push
and
jmp
fnstsw
xchg
adc
sub
add
jbe
cmp
cmp
lods
mov
je
andb
cmpsl
push
pop
stc
and
push
jno
jp
in
fiadds
and
inc
enter
or
mov
sbb
xor
jne
je
pop
loop
pop
leave
arpl
jmp
adc
in
mov
lock
int3
loope
adc
jg
or
and
mov
jmp
stos
mov
inc
andl
js
mov
iret
and
pop
adc
enter
add
pop
and
push
jmp
movsb
and
inc
or
push
adcb
and
xor
add
dec
push
adc
dec
in
add
sbb
or
mov
or
into
shlb
pop
push
or
mov
ja
lahf
lret
movsw
pop
cmp
jmp
loope
loop
jae
jmp
or
cmp
loop
mov
pop
jmp
mov
mov
ret
sub
pop
dec
adc
mov
ret
jns
adc
int3
insb
pop
cmp
ljmp
inc
mov
xchg
mov
mov
scas
mov
pushf
icebp
data16
ds
shrb
into
dec
push
or
or
and
loope
jo
outsl
push
or
fcomps
and
and
loope
shll
dec
mov
mov
or
adc
repz
addl
mov
mov
push
test
mov
in
loop
jne
xchg
xor
xchg
shll
push
call
fildl
ja
orb
andb
mov
ffreep
fcoml
cmp
fcom
popf
xor
rorl
sar
inc
add
pop
imul
xor
lea
pusha
mov
xchg
sbb
sbb
push
jne
and
movl
stos
cmp
and
add
pop
loopne
js
lea
inc
jb
adc
jo
sub
repnz
pop
add
ja
add
inc
lahf
lock
xor
outsb
sub
data16
pop
mov
jo
pop
inc
js
enter
mov
stc
push
adcl
pusha
mov
into
push
mov
dec
adc
call
or
push
adc
dec
or
jne
ret
mov
adc
xchg
shll
xlat
pop
test
mov
nop
andb
sbb
push
ret
mov
sbb
imull
lock
adc
or
cmp
imul
addr16
mov
mov
adc
movsl
pop
inc
ja
shl
adc
adc
add
in
enter
adc
in
out
mov
pop
lods
mov
fnstsw
pop
jns
hlt
push
xchg
js
popa
jb
adc
cli
jg
mov
out
inc
std
in
and
mov
jg
aas
mov
jbe
movl
lcall
mov
sub
and
mov
push
rorl
and
sub
je
cmp
das
fs
push
daa
stos
pushf
adc
fmul
adc
in
nop
scas
fisubl
push
repnz
inc
dec
daa
je
imul
add
cli
sub
cmc
mov
jge
xchg
jecxz
or
dec
or
jle
divl
cli
mov
popf
jle
mov
jne
jmp
xchg
jbe
jb
roll
or
cwtl
jns
leave
jmp
jp
xor
pushl
mov
push
pop
arpl
fadd
mov
push
adc
mov
cltd
and
or
mov
jns
mov
xor
int3
jmp
cmp
adc
int
inc
out
repz
insb
sub
nop
push
cli
add
je
int3
push
xchg
push
inc
xchg
push
jb
add
push
jmp
xor
dec
xchg
sub
adc
cmpsl
pop
xor
ljmp
push
cmp
fistpl
sub
jne
or
push
mov
nop
sarb
pusha
xchg
mov
push
imul
push
dec
ja
aas
lods
fisttpll
and
into
and
xchg
mov
call
inc
and
push
cmc
sbb
jne
adc
sarb
xor
xchg
sbb
jge
adc
jmp
std
xor
imul
or
dec
jns
adc
sbb
and
add
mov
or
cmc
adc
testl
lea
and
jmp
int3
cmpsl
stos
and
clc
out
and
dec
in
push
add
aaa
sub
cli
add
jne
cwtl
adc
cmc
adc
adc
cmpl
and
or
and
jne
mov
cmp
push
jmp
fwait
push
or
icebp
and
cwtl
push
mov
lds
and
das
in
sub
inc
inc
push
and
orb
pusha
inc
mov
cld
insl
ds
in
bound
and
mov
repz
loopne
jge
popa
je
xchg
or
ja
adc
dec
xor
pop
mov
aam
sub
and
ds
pop
loop
fs
push
mov
lret
je
sahf
and
xchg
jb
adc
mov
and
cs
out
and
sub
lahf
or
xchg
sbb
jnp
pusha
inc
pop
xor
cltd
mov
pop
orb
or
push
loopne
fs
xchg
and
and
mov
dec
in
xchg
fadd
push
sarl
xchg
popf
pop
in
mov
jbe
jmp
and
jae
cmp
mov
into
sbb
dec
adc
inc
out
out
inc
and
stos
mov
cmp
leave
mov
and
push
jg
mov
leave
and
fs
pop
lods
gs
inc
aaa
lods
mov
in
pusha
push
sub
adc
mov
push
ret
enter
xchg
in
push
cmp
hlt
and
ja
xor
or
cmp
mov
scas
pop
hlt
jmp
dec
scas
add
std
outsb
fcmovnbe
adc
into
ror
popa
clc
adc
scas
mov
jbe
or
mov
dec
test
int3
enter
test
or
add
add
addl
add
push
xchg
pop
push
daa
or
imul
xchg
ficompl
mov
arpl
cmp
mov
jne
dec
push
mov
nop
adc
hlt
fbld
rcrl
dec
dec
dec
mov
and
jge
cmp
jb
jno
pop
push
push
adc
adc
out
fs
xor
add
lods
cmpsb
xchg
cmp
jle
push
ret
lret
mov
sarb
insl
inc
sub
adc
or
dec
adc
pop
adc
pushf
or
pop
insb
push
outsb
xchg
xchg
add
addr16
fildl
xor
stos
xchg
daa
pop
stc
lret
dec
adc
sbb
fidivl
inc
dec
push
cmp
xlat
inc
std
popf
lret
aas
lcall
incl
scas
lea
nop
push
inc
dec
lods
push
notb
push
add
dec
test
inc
inc
or
je
imul
mov
mov
ja
mov
jbe
push
adc
xchg
cmp
fnstsw
add
pop
push
fcomi
sub
aam
push
pop
neg
ret
sti
aas
cmpsb
stc
inc
add
ficoml
cltd
mov
add
sbb
std
add
fnstcw
insw
mov
dec
mov
test
jge
jne
pop
and
icebp
mov
sub
adc
mov
jmp
cmpsl
in
lds
pop
push
and
mov
stc
jbe
dec
std
fists
add
addr16
inc
jae
xchg
sbb
or
lahf
adc
mov
or
xchg
fwait
adc
mov
jmp
jmp
test
mov
mov
mov
cmpsb
mov
repnz
ljmp
dec
mov
inc
cmp
movsb
sub
push
ljmp
sbb
adc
ja
pop
idivl
movsb
jmp
xchg
add
add
push
in
inc
mov
or
fld
add
jg
push
mov
sub
loopne
xchg
call
stc
iret
adc
test
lods
push
test
pop
mov
sbb
dec
pop
cmp
rolb
mov
inc
inc
ret
push
jmp
mov
cmp
pop
adc
loopne
movsb
adc
sub
inc
sub
sub
cmp
popf
loopne
loopne
mov
pop
out
out
pop
or
adcl
addl
popf
jne
sbb
sti
rcll
in
and
jl
adc
vphadduwd
xor
pushf
cli
cmpsl
stos
cmp
jns
mov
pop
ffree
sub
orb
cmp
pop
xlat
lret
call
pop
push
pop
xchg
insb
rorb
adc
mov
out
and
sbb
aad
adc
mov
adc
jmp
mov
sub
push
scas
jne
adc
jnp
and
scas
or
inc
pop
adc
sub
cmp
jge
adc
jne
cmp
mov
push
jbe
jp
stc
loope
adc
push
xchg
cmp
lods
fsubs
xchg
xchg
out
bound
jne
add
add
cltd
aam
push
int
pop
cmp
add
call
adcl
testl
pop
sbb
jnp
fwait
stos
dec
jle
xchg
sub
out
mov
lock
dec
push
mov
repnz
addr16
aad
adc
mov
push
cmp
je
push
icebp
fiadds
and
das
sub
test
add
and
roll
jle
cli
pushf
jg
sub
adc
jns
lret
jne
xlat
sbb
mov
or
je
mov
jb
push
xchg
and
xchg
xchg
jl
shrl
jle
in
stos
xchg
scas
test
dec
xchg
gs
and
push
inc
xchg
adc
add
sub
mov
adc
das
xor
rclb
fsubrl
mov
test
xchg
sbb
inc
pop
sub
cwtl
sti
pusha
inc
add
sub
in
jl
mov
xchg
inc
std
cli
ljmp
jle
and
dec
stc
cmp
pop
and
dec
fsubrl
jne
test
fsubs
sbb
xchg
mulb
cmp
adc
lea
int
dec
testb
xchg
dec
adc
loopne
loop
sub
test
pop
add
jmp
dec
mov
ficoml
loop
jbe
push
test
xor
cmp
xor
daa
jbe
in
dec
loopne
xor
lods
push
xor
sbb
enter
stc
das
out
in
fcoml
clc
popf
cmp
cmc
fs
mov
mov
add
fisttps
adc
or
jge
imul
leave
loope
test
in
popa
xchg
and
fidivrs
jnp
pusha
inc
aaa
enter
push
loopne
inc
add
daa
mov
xor
add
popa
pop
daa
lds
movl
jp
subl
ja
js
std
push
leave
cld
jg
adcb
sbb
cmp
rorb
and
das
lret
in
jo
mov
adc
push
scas
lcall
push
movsb
pusha
clc
mov
sub
test
lahf
adc
or
add
add
mov
das
jge
xor
or
imul
imul
or
dec
add
lret
push
push
clc
jb
dec
dec
mov
pop
mov
xchg
push
in
stos
addr16
in
test
fiaddl
xchg
sbb
mov
movsl
push
sbb
out
push
jb
stos
out
notb
movsl
mov
rcl
add
sub
call
dec
inc
aaa
add
fiadds
cmp
adc
gs
cwtl
add
xchg
ljmp
push
dec
in
pop
mov
inc
repz
imul
lds
cmp
jne
fsubl
cwtl
outsl
repz
cmp
xor
adc
movb
loop
mov
lock
jnp
iret
imul
sarl
lods
mov
mov
adc
test
mov
pop
out
and
fsubrl
lret
frstor
adc
sub
sbb
cmp
mov
mov
lahf
das
jmp
mov
sub
movl
or
lock
mov
rclb
push
jae
push
mov
and
inc
pushf
fmulp
add
test
shr
pop
add
cld
pop
test
xchg
test
sbb
loopne
mov
cmp
nop
dec
push
and
enter
fnstenv
pop
mov
popf
rep
sbb
xchg
outsb
out
fmul
test
aaa
inc
mov
sub
inc
cmp
fs
pop
rorb
lahf
cmp
rcll
sub
test
mov
mov
or
jnp
xchg
movsb
cld
sbb
and
jp
jb
jmp
or
push
xor
mov
js
push
jo
inc
add
lods
add
jmp
cmp
sbb
call
and
hlt
pop
or
or
pushf
cltd
push
jp
test
jne
and
add
cmpsb
ret
jmp
and
std
jns
adc
ret
sbb
movsl
js
mov
lock
push
sub
rcrb
ja
mov
test
nop
push
pop
insl
rcl
xchg
inc
xchg
mov
pop
in
or
movups
adc
aaa
or
std
xchg
out
pushw
dec
and
mov
pop
or
cmp
add
add
andl
mov
fistl
and
lea
xchg
xchg
push
sbb
dec
dec
mov
popf
jns
rcrb
call
adc
int3
add
adc
in
in
cli
mov
je
or
adc
adc
lea
push
mov
rol
test
add
lea
sub
push
js
dec
inc
mov
cmp
cli
adc
dec
popa
add
pop
ja
sbb
sub
adc
inc
rorb
scas
cld
shlb
pop
cld
les
dec
and
pop
sbb
adc
push
pop
and
push
push
add
ljmp
push
sbb
call
mov
test
insl
cmp
sbb
pop
cwtl
lock
xor
ljmp
stos
loop
aam
shll
stc
fpatan
or
or
mov
xchg
or
andb
xor
mov
adc
movsb
cmp
mov
and
push
call
dec
insb
push
orb
neg
fdivrs
stc
lcall
cmp
or
xor
adc
fs
and
mov
xchg
cmp
popa
inc
adc
sbb
and
call
pop
inc
lods
shrb
je
shlb
sub
or
aam
inc
jne
adc
std
call
xchg
add
out
mov
lds
scas
ficoml
in
sub
jo
cmp
add
test
cmpsl
jnp
cmp
leave
repnz
push
and
xor
div
jle
movb
inc
nop
lea
scas
dec
orl
mov
or
incb
inc
xchg
test
mov
test
sub
dec
mov
adc
add
pop
sbb
push
call
rcll
inc
ret
iret
pop
jo
cmp
lods
test
outsb
mov
adc
sbb
insb
daa
pop
xchg
lds
test
adc
fucomip
adcb
inc
mov
je
push
in
mov
mov
sar
sbb
mov
xchg
or
std
fcompl
jg
jo
xor
in
push
xchg
push
jmp
cmpsb
outsl
push
sbb
sti
fcos
mov
mov
add
in
sbb
xchg
hlt
sbb
mov
inc
imul
or
test
dec
cmp
cli
fdivrp
and
lcall
add
xchg
shr
sub
jne
adc
in
sub
cmpsl
rorl
test
movsl
sub
imul
adc
in
outsl
imul
je
xor
mov
add
mov
or
int
fsubr
xlat
in
or
jl
jb
xor
sub
push
cli
lahf
call
jae
cmc
sbb
je
mov
in
push
sub
cmpsl
mov
push
mov
lret
dec
xor
push
aam
test
adc
jne
stos
imul
lock
adc
xor
push
in
jl
lock
jmp
fldl2t
pushf
adc
mov
in
mov
movsb
jo
pop
pop
bound
xchg
out
inc
or
xchg
mov
xor
jns
cltd
mov
jle
repz
clc
outsb
shl
push
cmp
sti
adc
mov
pop
add
call
sbb
add
pop
cs
push
adc
jg
mov
les
push
jmp
fwait
adc
js
xchg
lock
add
notb
mov
cltd
cmp
les
lcall
ret
aas
shr
outsl
movsl
das
dec
xchg
dec
and
jecxz
or
jns
outsl
sub
add
cmp
xchg
ds
pop
ret
dec
push
movl
les
inc
shl
cmp
movaps
push
jo
xchg
test
or
cmc
inc
pop
call
mov
mov
inc
pop
test
pop
movsl
dec
xchg
and
dec
dec
test
repnz
or
xchg
xchg
and
xor
hlt
push
das
push
push
push
dec
shlb
or
add
pop
cmpsl
pop
jno
dec
push
dec
rcll
mov
adc
cli
cmp
or
push
sub
adc
add
je
mov
or
push
mov
cmp
mov
dec
add
or
out
int
cli
std
out
mov
call
mov
lods
imul
sub
jbe
adc
lret
pop
fistps
leave
sub
aaa
pop
idiv
xchg
test
nop
pop
mov
jle
xchg
jmp
outsl
and
into
outsb
das
fdivrp
mov
test
cmpsb
cmp
pop
push
stos
into
add
sub
mov
cmp
jle
call
cmc
inc
cmp
lret
push
clc
adc
mov
sub
stos
out
fcoms
aaa
rclb
call
jns
cmp
mov
pop
sbb
nop
xor
xchg
or
jns
int
mov
fistpl
jge
cmp
mov
push
negl
scas
xor
add
dec
xor
cwtl
out
sbb
ljmp
in
add
xor
mov
mov
cmc
push
mov
mov
cmp
call
cs
and
push
xchg
lret
add
fldl
movzwl
clc
sti
dec
cli
daa
push
or
pop
jbe
adc
leave
jecxz
adcb
push
pop
sub
nop
cmp
jmp
das
repz
hlt
add
call
dec
stos
and
mov
call
ljmp
hlt
and
inc
rcrb
mov
dec
dec
sbb
fdiv
lret
add
fs
jb
cmp
add
cmp
movsl
pop
push
test
and
jp
pop
jo
mov
idivl
xor
fmull
ret
in
repz
in
dec
pop
sub
inc
adc
xchg
lds
inc
jns
jmp
push
inc
bnd
sub
jne
loope
jmp
dec
adc
sub
jp
int3
jne
je
shrl
dec
dec
hlt
loop
xchg
mov
aad
popf
push
popa
inc
mov
nop
jae
push
in
sub
pop
pop
mov
or
lock
hlt
dec
stos
jne
jb
and
xchg
and
int3
jle
movsb
push
mov
mov
adc
dec
pop
dec
fcomps
cmp
push
xorl
or
fdivrs
push
pusha
jmp
inc
jp
lds
lock
das
clc
roll
cmp
adc
and
mov
imul
stc
es
or
je
das
sti
int3
pop
shll
addr16
adc
sti
inc
push
or
push
sbb
xchg
sbb
mov
inc
or
test
hlt
adc
imul
sub
call
xchg
outsb
leave
adc
xchg
cltd
jmp
sub
pop
pop
push
add
fs
mov
inc
xor
jmp
inc
adc
movsl
test
jmp
imul
addl
cwtl
in
and
data16
xor
sbb
mov
repnz
test
jno
mull
adcb
adc
push
incl
xchg
mov
xchg
movb
loope
adc
xor
aam
sub
dec
das
lds
jle
inc
in
mov
cmp
rcrb
fs
js
dec
out
out
mov
sti
andl
loope
popf
movsb
das
enter
push
push
movsl
mov
call
jge
cmpsb
mov
inc
les
and
dec
pop
pop
je
push
cwtl
dec
mov
stos
mov
xor
push
xlat
push
rcl
add
adc
jmp
sub
mov
or
or
dec
inc
sub
out
dec
cld
mov
mov
movsl
fimuls
jmp
pop
fs
hlt
add
scas
movsl
cs
or
jmp
out
and
insb
push
aaa
les
pop
data16
pushf
mov
sbb
dec
mov
mov
repz
and
and
fcmovne
adc
addl
jae
xchg
pop
mov
cmpsl
inc
fcompl
add
mov
or
lea
lahf
nop
and
push
ljmp
xchg
push
adc
ss
pop
mov
mov
add
mov
mov
fdivl
clc
pop
cwtl
daa
je
adc
push
int3
dec
pushf
lret
sbb
repnz
pop
jge
movsl
sti
inc
sbb
ss
pop
or
inc
pushf
jmp
mov
xchg
data16
sbb
mov
mov
ss
dec
les
lea
push
shlb
mov
test
mov
repz
jg
push
in
mov
aaa
sarl
xor
cmp
pushl
std
loope
jp
fmulp
aam
cld
imul
adc
adc
adc
mov
xchg
popf
mov
mov
mov
push
or
push
jbe
shl
jns
inc
mov
jge
add
shll
jge
dec
adc
cmp
add
in
inc
add
pop
jle
std
xchg
negb
mov
inc
ret
lods
clc
xor
pusha
dec
mov
sbbl
imul
jae
xchg
cli
cld
sbbl
pop
out
xchg
loopne
sub
inc
add
fs
aad
adc
dec
aaa
lods
roll
cmp
cmp
iret
or
dec
mov
cmp
inc
or
mov
outsb
mov
loopne
not
lret
outsl
inc
int
sub
dec
addr16
or
xchg
dec
cltd
and
rcrb
mov
jae
xchg
scas
ret
inc
in
pop
or
xor
jmp
js
pushf
out
lret
add
add
inc
in
mov
xor
pop
cmp
xchg
gs
xor
pop
inc
out
push
loope
and
fdivrp
fists
sbb
jae
jnp
cmp
mov
popa
lea
add
dec
insb
push
push
clc
imul
call
pop
leave
test
cmpl
dec
push
call
mov
push
and
loop
or
orl
leave
call
add
lods
or
jns
sub
in
xor
jmp
mov
jnp
mov
xchg
andb
xor
cmp
sbb
or
mov
cmpsb
and
jmp
xorb
dec
pop
xor
adc
stos
inc
fisubs
sub
cmpsl
daa
call
sub
and
or
adc
pop
dec
out
ficoms
dec
stos
fsubrs
push
xchg
fcoms
jae
adc
cmp
call
or
es
or
outsb
dec
xor
add
and
loopne
aad
xor
mov
cmp
ror
push
cmp
lods
roll
call
dec
lret
lods
int
adc
aad
mov
pop
xor
jmp
je
icebp
lea
push
decl
nop
dec
and
movsbl
xchg
push
mov
inc
mov
fstp
sub
stos
cmp
sub
sub
dec
pop
push
add
mov
aas
in
inc
dec
pop
cmp
adc
decl
push
push
mov
inc
and
ret
sub
adc
daa
push
test
xchg
push
sbb
hlt
push
sbb
push
and
aad
inc
pop
test
add
jnp
enter
pop
lock
fidivs
jae
push
mov
jne
mov
pop
stos
popf
push
sub
dec
aad
mov
mov
push
adc
or
inc
pop
inc
popl
arpl
push
mov
sbb
mov
xchg
std
clc
imul
xchg
and
movsb
jo
push
jge
add
call
xchg
mov
push
xor
adc
test
sbb
adc
outsl
mov
repz
faddl
adcl
cmpb
idivl
sbb
sbb
or
or
and
adc
bound
adc
xchg
xor
and
push
cmpsl
inc
lock
push
shl
les
lret
mov
bound
pop
jb
faddl
cmpsb
and
pop
clc
jno
sub
push
dec
mov
and
ds
mov
pop
nop
jg
jl
push
push
mov
xchg
push
adc
lods
shrb
push
jmp
movsb
push
out
addr16
lcall
leave
push
push
push
leave
les
test
rclb
jno
sti
and
outsb
aad
cmpsb
scas
and
cltd
jb
mov
ret
ret
scas
clc
pusha
lods
sub
data16
mov
test
add
fs
or
rolb
orl
or
clc
or
mov
jg
movsl
pop
cmp
lds
subb
push
adc
ret
sub
fdivrl
test
lock
xor
pop
mov
sbb
and
or
ja
mov
out
mov
bndldx
in
test
add
cmp
add
prefetchwt1
aam
adc
sub
adc
add
dec
xorb
or
outsb
and
adc
and
jmp
cwtl
push
call
mov
jle
mov
jne
push
lock
enter
or
call
lret
hlt
push
adc
mov
push
mov
cmp
ljmp
jnp
int3
ja
jb
aaa
std
in
mov
pop
mov
sub
or
fsubr
mov
gs
adc
and
lret
dec
jb
xchg
leave
call
inc
cmpsl
inc
insb
and
lea
rclb
inc
loop
fisttpll
movsl
jnp
dec
icebp
add
mov
movsl
push
add
clc
and
scas
lods
leave
hlt
fidivs
push
xor
inc
scas
sub
jp
sub
jne
mov
mov
jge
sbb
mov
cmp
lret
pop
ljmp
or
push
pop
not
out
iret
push
xchg
xor
push
jo
pusha
clc
adc
ja
push
cmp
sub
cmpsl
pop
or
sub
add
loope
addr16
xor
fmuls
shll
cwtl
xchg
test
divb
inc
jg
test
xor
call
pop
and
decl
sub
lock
scas
push
inc
mov
ret
cld
inc
call
jmp
rclb
fisttps
cwtl
dec
xchg
xor
jns
loope
add
jne
sbb
dec
clc
scas
sbb
mov
jp
pushf
ljmp
loope
ret
and
insl
gs
mov
cli
xor
mov
stos
cld
jnp
xchg
in
repz
leave
popl
or
xchg
mov
in
adc
and
aas
daa
sbb
je
push
fs
or
dec
add
sbb
pop
cmc
sub
testb
inc
add
add
out
aam
mov
nop
xlat
lods
adc
push
cmp
shll
test
inc
push
mov
push
adc
pop
das
fsub
push
loopne
push
mov
inc
cmp
lret
add
push
inc
mov
mov
xor
insb
push
add
and
and
push
scas
sub
jle
adc
push
xor
fisubrl
adc
add
xor
and
in
and
mov
xchg
xor
dec
stos
insb
push
xor
loope
in
cmp
dec
push
mov
pop
push
repz
in
outsb
xor
out
test
push
clc
and
sub
and
jne
xlat
adc
or
int
xor
jae
jmp
stc
mov
xchg
shl
mov
popf
test
xor
fstpl
stc
cmp
mov
inc
sbb
and
mov
or
push
loop
pop
mull
mov
and
xchg
ficoml
dec
add
ljmp
sbb
jle
sub
mov
fwait
out
cmp
mov
cs
mov
push
fildl
adc
mov
imul
nop
or
inc
rolb
mov
and
adc
and
in
ret
pop
jmp
add
dec
inc
xchg
jl
cs
icebp
adc
in
sbb
daa
jp
pushf
push
call
xor
xchg
imul
aad
xor
into
lds
and
int
add
inc
repz
movl
sub
jle
jb
push
ja
add
rclb
leave
adc
fdivs
jle
xchg
mov
dec
mov
std
out
fldenv
jle
or
mov
pop
add
and
inc
add
mov
or
dec
movsl
lcall
inc
jg
lcall
fisttps
test
jmp
or
or
daa
xacquire
pop
mov
adc
in
int3
add
imul
sub
or
or
hlt
jmp
rolb
addl
add
xor
sbb
sub
fmul
or
cltd
sbb
and
enter
inc
cmpsl
push
cmp
inc
push
fmul
std
ficomps
or
add
mov
enter
sub
inc
inc
add
add
fs
ja
cmpsb
or
es
adc
cmp
lahf
rcr
stos
add
cmpsb
cli
sbb
and
mov
lods
xchg
and
or
data16
test
sbb
ds
add
adc
or
push
mov
push
push
repz
int
cmp
clc
add
and
or
popa
cltd
mov
add
push
jl
add
jge
add
enter
jo
jns
in
xchg
xchg
loop
jo
out
outsb
hlt
aad
or
pushl
xchg
xor
mov
push
push
in
subl
dec
add
ror
nop
jne
mov
nop
enter
sbb
inc
in
xchg
jo
daa
mov
lock
dec
push
js
mov
jl
sub
or
fistps
call
call
pop
sbb
repnz
shlb
mov
leave
addr16
jmp
ljmp
inc
mov
les
sub
dec
sub
xor
pop
das
push
jmp
xchg
adc
aad
lret
xchg
add
imull
push
or
js
mull
mov
add
stc
aam
repnz
xchg
xlat
cmp
xchg
pop
xor
xlat
sbb
mov
pop
add
cld
incb
dec
test
jecxz
mov
lahf
out
adc
jecxz
inc
xchg
sbb
rcll
xchg
or
fidivrs
push
inc
call
xchg
in
mov
mov
dec
dec
pop
mov
cmp
int
cli
inc
outsl
and
in
lret
mov
rclb
xor
or
call
xchg
cmp
call
sti
nop
dec
int3
jne
xchg
lds
push
sub
mov
pop
jl
shll
mov
or
and
jmp
stos
xor
rolb
or
les
mov
cltd
mov
and
sarl
cmp
or
cmp
lea
jbe
jmp
mov
xor
lea
sbb
sub
sbb
dec
add
xor
add
outsb
adc
lret
mov
cld
mov
sbb
lret
adc
mov
jge
sbb
mov
std
pop
push
call
xor
mov
cmp
jo
or
test
xchg
es
mov
sub
push
adc
cmp
in
mov
adc
ret
xchg
sub
sub
jl
mov
or
inc
movsb
es
jne
imul
mov
xor
adc
push
adc
repz
push
pinsrw
out
cs
fs
insb
inc
movsl
test
sub
mov
inc
sub
add
ja
es
call
cmp
popf
dec
push
insl
mov
shl
sub
scas
jp
inc
push
mov
aam
aam
xorb
sti
or
mov
nop
fsubl
cld
mov
push
in
mov
fwait
std
cmp
xchg
or
call
lods
loopne
lahf
xchg
jp
xchg
pop
inc
and
and
sbb
clc
push
pop
stos
xchg
add
cli
lret
adc
sub
orb
jnp
xor
adc
cmpsl
push
pop
push
in
stos
fxch
jp
dec
inc
sti
call
xor
adcb
outsb
dec
xor
add
pop
jle
repz
popa
dec
je
dec
jne
ja
add
push
xchg
inc
adc
mov
xor
dec
push
and
or
fstl
xchg
cmp
sub
jle
test
adc
mulb
hlt
inc
and
jecxz
xor
xor
popa
imul
pop
dec
jl
les
call
xor
cmp
adc
and
out
inc
call
adc
test
lea
push
ss
mov
or
es
imull
sbb
push
mov
addl
in
scas
xor
sti
insb
mov
mov
popf
push
mov
push
xchg
adc
sbb
mov
mov
imul
call
sbb
inc
leave
stos
in
jnp
addr16
push
xchg
lcall
mov
je
xchg
fisubl
dec
xchg
sbbb
and
pop
out
js
or
inc
push
or
inc
rsm
jecxz
dec
xchg
sbb
mov
pop
mov
repnz
std
pop
or
mov
pop
jle
inc
daa
cmc
aad
and
mov
pop
cmpsl
push
fisubl
xor
mov
in
add
stos
sub
sbb
cmp
sahf
xchg
cli
fs
ret
ss
sub
mov
or
adc
cmp
sbb
lret
les
lahf
repz
sti
lret
and
mov
add
cli
loop
adc
loopne
lea
pop
mov
mov
add
and
lret
mov
jmp
push
fmull
popf
lods
sbb
ret
rorl
lock
xchg
dec
lds
divb
icebp
les
push
jmp
jl
add
cli
pop
movsl
push
je
lods
inc
stc
or
loop
sahf
push
mov
adc
xchg
mov
and
mov
pop
mov
movsl
les
xor
out
sbb
orb
jl
les
out
fsubrs
leave
stc
cmp
sbb
and
lret
adc
mov
popf
insl
daa
sub
inc
shrl
pusha
pop
mov
mov
cmpsb
push
outsl
popl
inc
stc
add
or
repnz
lods
push
inc
pop
mov
pop
cwtl
inc
xor
jns
imul
inc
clc
mov
mov
cmc
adc
jo
loope
lods
jge
cs
pop
sbb
call
sub
sub
lret
out
mov
aad
adc
push
push
imul
adc
lods
inc
dec
mov
or
pop
mov
pop
dec
icebp
dec
xchg
push
loop
bound
mov
pusha
pushf
popf
adc
test
dec
call
push
lods
repz
cli
ret
pop
icebp
mov
jmp
call
sub
sbb
adc
lret
inc
ret
xor
mov
test
inc
sahf
call
adc
adc
adc
adc
sub
add
enter
fmul
mov
adc
test
xlat
sahf
sbbb
xor
and
lahf
sbb
inc
or
clc
inc
sahf
mov
in
pop
add
andb
add
imul
scas
lea
shlb
inc
stos
repnz
xor
pop
mov
insl
repnz
xor
sbb
ss
das
lods
xchg
cmp
lret
push
inc
and
mov
hlt
push
sub
aad
enter
enter
sub
mov
repnz
jb
pop
nop
xor
das
nop
pop
mov
cmp
in
das
and
inc
jne
loopw
add
jb
pop
nop
inc
and
mov
jb
pop
nop
dec
and
cmpb
in
or
inc
das
and
dec
and
jns
pop
clc
in
das
and
dec
adc
mov
dec
sbb
test
push
das
and
and
cmp
enter
enter
js
mov
bnd
cmp
or
push
cwtl
and
gs
test
aas
cmp
or
mov
cmpsb
pop
nop
mov
inc
in
das
and
pop
inc
xchg
and
inc
mov
and
jns
or
mov
fs
mov
and
pop
nop
movsb
enter
das
and
sbb
sub
mov
push
out
push
call
ljmp
scas
adc
sub
shr
bnd
mov
jg
cmp
loope
xor
adc
rol
push
dec
or
scas
xor
add
lea
sub
lea
xor
pop
fnstenv
dec
ss
sbb
lea
cmp
push
fs
or
ret
and
lea
dec
adc
ret
add
insb
push
xorl
mov
subl
insb
adc
jo
cmp
sub
and
pop
enter
mov
add
lret
mov
mov
repnz
les
shrl
inc
mov
nop
mov
mov
cwtl
fs
pushf
xchg
enter
insb
movsb
xchg
enter
les
sub
dec
mov
cwtl
push
add
hlt
mov
pop
rcrl
popa
sbb
clc
or
mov
push
into
loopne
sbb
nop
clc
cltd
cmp
or
pusha
sbb
adc
in
mov
pop
mov
add
add
or
and
mov
dec
js
hlt
fs
sub
mov
pop
mov
cmpl
cmp
adc
adc
mov
push
enter
gs
sub
adc
adc
inc
mov
jae
mov
xor
mov
inc
mov
sub
outsl
cmc
push
add
shll
sub
or
lods
adc
and
lock
js
cwtl
add
mov
mov
xor
xchg
cmpl
imul
pushf
shl
xchg
push
jb
sbb
inc
mov
add
in
add
add
cmp
lods
orl
daa
popf
jo
mov
add
adc
mov
imul
and
or
jg
and
jmp
or
cmp
cmp
mov
aad
les
inc
dec
or
jmp
pop
shll
dec
push
jmp
mov
or
mov
push
and
dec
mov
lods
jns
or
out
fs
outsb
add
adc
cs
inc
mov
or
sbb
or
lea
adc
sub
enter
mov
iret
adc
decl
push
xor
nop
push
sub
bound
fisttpl
lret
pop
pusha
lods
and
add
test
adc
pop
xchg
cwtl
mov
mov
pop
mov
add
jb
pop
nop
sbb
pop
nop
jns
sbb
sbb
test
inc
cmp
dec
sti
cwtl
jmp
push
and
repnz
push
jb
pop
nop
sub
sbb
pop
push
sub
sbb
iret
or
sub
push
enter
sub
cmp
push
enter
sub
repnz
push
enter
das
push
mov
iret
inc
push
cmp
pop
add
repz
or
ljmp
ds
mov
aaa
dec
sbb
enter
mov
inc
and
mov
sub
das
xor
add
mov
sbb
xor
adc
or
ret
pop
push
fcompl
push
jl
shrb
cmp
test
sub
jecxz
imul
push
xor
push
adc
shll
test
cld
int3
xchg
lods
mov
das
leave
addb
inc
sub
call
mov
out
loope
jp
fucomi
mov
lcall
sub
cld
jmp
fisttpl
dec
dec
subb
int3
mov
fs
call
adc
popf
inc
push
jp
repnz
add
pop
xchg
scas
arpl
cmp
test
xchg
clc
mov
sbb
push
xchg
loopne
hlt
and
mov
jg
xor
add
mov
pop
mov
rcl
inc
inc
pop
insb
adc
or
aad
add
mov
inc
xor
push
lods
xlat
sub
stc
lret
idivl
in
dec
faddl
jae
cmpsb
stos
in
jmp
fldenv
mov
std
push
dec
lods
mov
gs
adc
push
gs
inc
dec
in
mov
lea
out
inc
add
scas
jp
push
aas
aad
ljmp
cmp
inc
cmp
sub
cmovae
adc
dec
lds
mov
sub
adc
test
and
xlat
dec
mov
ror
mov
fs
mov
sub
mov
dec
and
imul
fmuls
lock
mov
mov
aam
push
pop
push
outsl
pop
sbb
add
mov
fdivl
push
mov
sub
imul
shl
jmp
and
and
imul
or
stos
add
and
repz
leave
decl
nop
inc
mov
adc
add
mov
or
pop
leave
ret
xchg
inc
dec
cmp
adc
cmp
push
movsb
cmpsb
add
or
in
push
xorl
inc
xchg
mov
push
or
jecxz
adc
int3
scas
popa
ficoml
xchg
and
adc
or
push
xchg
jo
add
call
xor
xchg
sbb
push
out
mov
mov
push
imul
dec
dec
adc
sbb
repnz
and
dec
insl
addr16
sbb
addr16
pop
and
adc
ja
mov
and
fbld
adc
test
xchg
xor
out
xor
push
sbb
add
and
mov
dec
or
jle
cmpb
cmp
mov
adc
cmp
lahf
rcl
inc
aas
aas
and
inc
add
dec
push
push
and
sbb
loopne
adc
ret
pop
cld
pop
les
or
xchg
sub
in
cmc
mov
sub
cmp
push
dec
pop
out
mov
cltd
pop
sub
shll
in
lret
adc
jnp
scas
push
ret
push
roll
mov
sbb
testb
mov
cmpsl
xchg
push
andb
pop
icebp
inc
mov
clc
or
sete
test
dec
mov
sbb
and
pop
cmp
push
sbb
adc
or
cmp
cld
sbb
repnz
in
inc
outsb
adc
loopne
mov
or
mov
pop
pusha
or
jl
and
push
or
pop
push
lea
cld
xchg
xor
div
mov
add
pop
add
xchg
pop
test
xlat
adc
push
sub
icebp
cmp
push
jne
bnd
insb
and
inc
dec
mov
cld
sub
pop
and
add
push
pop
adc
cmp
mov
cwtl
pop
jne
scas
cmc
pop
lret
testl
or
movsl
std
fs
mov
xlat
push
jb
movsb
mov
cmp
push
mov
mov
fs
lea
add
push
mov
sub
dec
mov
push
inc
adc
dec
xor
and
popf
jge
mov
dec
mov
cli
push
dec
jle
in
push
adc
sub
scas
xchg
adc
cld
sub
and
push
and
push
int3
mov
mov
dec
and
je
push
dec
and
test
mov
ds
sub
aad
dec
outsl
stos
cmpsb
push
pminub
adc
adc
pop
bound
wrmsr
xchg
jecxz
sbb
add
push
and
add
fwait
xor
mov
lock
mov
jb
or
mov
mov
inc
add
cmp
inc
add
add
add
test
cmpsb
or
push
dec
imul
add
sbb
in
pop
into
shrb
or
add
bound
pop
inc
test
or
or
push
xchg
test
xor
test
mov
pushw
sbbl
sub
leave
xchg
lfs
aas
stos
pop
movsb
lock
test
bound
imul
rorb
xor
jmp
push
cmp
out
cmc
sbb
cmovp
mov
and
aas
or
repz
push
cli
or
push
xor
bound
push
test
adc
inc
jmp
aas
or
or
mov
scas
push
or
orb
push
pushf
mov
clc
outsl
mov
cmp
cmp
fdivrs
adcb
cmpsl
mov
sbb
add
sub
sub
data16
movsl
subb
jne
sbb
stos
leave
sub
movsb
push
pop
cmp
js
nop
fdivrs
lds
or
int
filds
test
stos
popa
loopne
cmp
and
mov
lock
ficomps
scas
lret
mov
subl
test
mov
xchg
inc
and
ret
sub
and
rorb
dec
push
mov
or
shl
in
addr16
cld
sbb
adc
and
popl
add
cmpb
hlt
jae
imul
inc
lock
cmp
sbb
out
sub
push
lahf
ficoms
dec
into
add
dec
or
icebp
xlat
sbb
and
and
push
add
aas
or
push
and
or
adc
push
and
adc
inc
xor
ret
adc
and
sub
and
fs
movsb
lods
cwtl
push
adc
push
add
mov
sub
loopne
jbe
xchg
pop
leave
ds
xor
les
fcompl
popa
add
or
aas
pop
lock
outsl
fbld
scas
in
mov
cmc
push
gs
pop
jmp
dec
int
lock
mov
mov
jle
inc
popa
jl
inc
sbb
push
mov
add
addb
nop
sbb
jg
or
stc
mov
rorl
daa
jge
xchg
jmp
sahf
mov
nop
cmp
push
mov
pusha
cmpsb
clc
mov
or
adc
sbb
pop
sbb
lcall
shlb
cmp
cli
das
add
call
testl
xchg
or
or
xor
xor
loopne
and
xchg
stc
nop
mov
and
movl
adc
inc
or
rorl
dec
pop
inc
ret
lock
std
sbb
and
or
sbb
adc
js
in
push
xor
pop
and
js
pop
adc
adc
or
mov
cmp
xor
enter
cli
adc
lock
jl
inc
or
mov
cmp
add
jmp
and
movl
pushf
add
das
push
js
imul
les
fsubl
pop
adc
adc
mov
add
aas
mov
add
fld
mov
and
push
jb
adc
or
stos
inc
sub
and
cwtl
or
or
xlat
mov
repz
rorb
dec
push
mov
jmp
mov
xchg
movsl
and
pop
push
push
or
dec
push
inc
scas
xchg
jge
and
or
push
mov
push
mov
or
bound
sbb
inc
lcall
push
call
mov
add
or
jle
daa
je
cmpsl
ja
jbe
rorl
lcall
adc
jge
fs
sub
cld
lods
inc
jne
mov
cmp
or
cmp
jo
loope
ljmp
pop
xchg
cmp
xor
lods
jbe
pop
fistps
cmp
jp
inc
in
rcrb
or
dec
lods
adc
or
cli
xor
inc
sub
add
and
push
push
jae
or
sbb
sbb
outsl
xchg
xchg
mov
testl
xor
movsb
stos
cld
lock
outsl
mov
int
int3
dec
adc
cmp
inc
xchg
std
arpl
dec
cmpsl
and
shll
std
sbb
cmp
dec
pop
pop
test
push
mov
jns
mov
and
adc
adc
sbbb
lahf
adc
incb
sbbb
jecxz
sub
ljmp
cmp
xor
fwait
sub
cmpsb
or
sbb
mov
lret
pop
scas
or
lods
and
push
inc
cmpsb
xchg
push
mov
pop
nop
sbb
cmpsb
jns
cmpsb
inc
sub
add
imul
fs
adc
xor
and
cmp
add
cmp
xchg
sarl
mov
adc
and
cmc
and
jl
ja
sbb
sbb
cld
iret
inc
lret
iret
mov
sbb
and
mov
jmp
dec
cmp
aad
stos
xchg
jg
loope
adc
add
pop
stos
xor
push
testb
lret
in
adc
mov
leave
pop
call
pop
jne
sub
mov
mov
repz
sub
push
lds
leave
push
jnp
adc
pop
sahf
loop
scas
and
jo
dec
lea
daa
dec
mov
test
dec
mov
das
call
mov
fwait
push
cwtl
test
dec
add
and
cltd
mov
stc
push
adc
push
clc
jecxz
sub
imul
push
add
xor
sbb
pop
ret
loope
jne
outsl
lods
dec
and
mov
sub
and
xchg
cld
jl
das
jle
stos
jmp
movsb
mov
rclb
enter
jb
dec
inc
pop
dec
lods
and
clc
ja
push
xchg
xor
popf
mov
and
test
cmp
add
sbb
in
call
sbb
jae
adc
mov
and
and
adc
inc
pop
mov
mov
push
mov
and
add
mov
or
dec
or
orl
inc
xchg
sub
jl
inc
shl
sbb
mov
fdiv
incb
repz
incl
jnp
or
inc
add
dec
pop
pop
cmpsl
add
in
cmp
aas
mov
cmpsb
mov
mov
scas
xor
jmp
int3
push
cmp
rcrl
mov
inc
and
mov
stos
das
push
das
insl
outsb
adc
dec
dec
js
or
dec
sub
mov
xchg
adcb
mov
pop
in
das
push
lds
fadd
gs
jb
mov
ss
call
mov
and
cmp
inc
pop
das
ret
ret
push
test
inc
or
pusha
roll
sub
shll
fsts
popa
enter
inc
and
jb
adc
shll
mov
add
sbb
add
inc
add
cmp
adc
outsb
cmp
and
and
xchg
push
rolb
pop
in
outsl
adc
add
aad
sbb
push
sbb
in
into
and
sbb
sbb
mov
jbe
das
jbe
push
loopne
rclb
mov
xor
inc
pop
lods
das
mov
daa
je
testb
xchg
jle
rclb
push
mov
stc
inc
jae
or
add
shld
shl
ret
mov
mov
loope
cmpsl
loop
adc
fldl
nop
or
xor
jl
or
and
jno
add
je
das
out
sub
cld
pop
and
divl
ficoms
jo
scas
out
jmp
pushl
mov
stos
cwtl
test
dec
and
or
jmp
mov
lock
mov
add
inc
or
test
xchg
mov
jb
inc
je
xor
push
adc
popf
cmp
je
aaa
negb
pop
adc
call
push
and
inc
int
fs
sub
jno
stos
jns
das
imul
cmp
fwait
jmp
xorb
fcoms
xor
cmp
cmc
and
call
jge
or
jl
cmp
jmp
dec
or
add
das
xchg
ja
jp
and
ljmp
mov
pusha
and
push
or
stos
jmp
dec
frstor
pop
fcompl
cmpsb
rorl
icebp
dec
in
hlt
lahf
pop
stos
icebp
hlt
pop
dec
cmp
push
add
test
into
lcall
jge
push
call
dec
pop
jmp
rcll
jbe
xchg
addr16
pushf
pop
lcall
loop
xchg
popa
rclb
sub
enter
pop
push
xchg
xor
aas
cmpsb
inc
inc
lret
shrl
sub
cltd
mov
decb
dec
push
test
mov
shrb
repnz
daa
mov
sub
and
mov
out
cld
jne
stc
or
out
or
pop
xor
hlt
or
mov
sbb
mov
dec
adc
inc
jmp
icebp
push
adc
cs
lods
pop
lret
inc
cmc
xchg
mov
fisttps
popf
or
add
xchg
push
imul
adc
ja
nop
imul
ret
shll
adc
push
xchg
cli
cmp
popa
jge
adc
sub
sub
call
lods
nop
jmp
imul
nop
movsb
jo
loope
jg
out
gs
data16
insl
jl
call
sbb
divb
push
out
loop
or
xchg
mov
adcl
and
aaa
loope
push
sub
testl
jae
dec
icebp
add
nop
loope
loop
xor
push
sbbb
out
movsl
mov
out
or
adc
push
movsl
test
aas
hlt
and
in
or
push
push
lret
mov
and
jne
fstpl
das
mov
jmp
popa
jmp
or
jne
fs
inc
sbb
mov
jne
dec
inc
or
pop
imul
add
je
icebp
jmp
sub
or
movsb
inc
add
cmp
inc
rorb
jge
nop
and
f2xm1
ficoml
test
and
call
lcall
dec
adc
xor
pop
lods
push
cli
add
ljmp
add
scas
mov
add
mov
inc
push
std
cs
mov
test
stc
cmp
cwtl
or
test
cwtl
xlat
mov
hlt
mov
pop
jl
stos
sub
and
iret
xlat
mov
dec
stos
and
fisubrs
das
inc
cld
in
lods
jns
push
inc
mov
jae
pop
adc
dec
lds
or
jne
ja
pop
aad
into
adc
adc
adc
dec
or
or
outsb
test
add
adc
or
inc
inc
enter
daa
adcl
cmp
push
fisubs
adc
sbb
jmp
mov
or
daa
sbb
push
adc
jb
mov
mov
inc
add
clc
inc
out
mov
adc
or
ss
popf
repnz
adc
mov
out
inc
cmpsb
inc
cmp
imull
daa
jbe
rolb
mov
fcomp
add
int3
jns
jae
loope
stc
jg
or
dec
adc
jg
or
je
subl
xor
adc
jns
jmp
or
testb
add
or
pop
mov
cltd
nop
inc
xchg
adc
fisubs
sub
push
push
push
jnp
lea
arpl
addb
cmp
rorl
outsl
xor
lock
sub
shll
lock
mov
in
mov
mov
sbb
fadds
int3
bswap
mov
sbb
std
rcrb
mov
dec
xchg
inc
hlt
sub
sti
xchg
and
mov
cmp
stos
jbe
and
outsl
lock
jb
test
xchg
divl
lahf
add
je
in
sahf
jns
loope
inc
add
jg
test
imul
or
dec
int3
sub
push
leave
lock
xorl
and
mov
mov
stos
sti
inc
or
add
sub
mov
sub
inc
daa
inc
and
push
mov
lahf
loope
inc
and
mov
leave
lods
xchg
add
xor
cmpsb
and
mov
in
out
in
sub
push
inc
daa
loope
push
mov
pusha
mov
mov
fldcw
gs
add
pop
jns
add
call
cmp
pop
mov
or
cli
test
push
movb
dec
add
adc
dec
jae
bound
lea
and
jg
and
and
cmpsb
pop
test
xchg
cmpsl
icebp
stc
mov
lcall
add
jmp
xchg
stc
push
repnz
daa
jne
adc
imul
xchg
aad
scas
loop
mov
in
adc
cld
jns
and
stc
xchg
mov
and
out
lock
and
in
push
push
stos
mov
rolb
jecxz
cld
js
xchg
xlat
adc
jns
loope
scas
das
nop
sub
and
xor
leave
add
gs
add
add
sub
int
and
lods
xchg
sub
add
xlat
mov
inc
mov
jp
mov
movsl
sub
push
add
fiadds
cmp
repz
test
push
adc
mov
jnp
xor
out
stos
xchg
xor
imul
ficomps
lock
xchg
std
sbb
das
ljmp
or
lret
bound
adc
mov
movsl
pushl
xor
mov
das
add
rclb
cli
lret
psrlw
ljmp
mov
xor
int
iret
loope
add
and
and
push
mov
mov
xor
out
pop
sahf
or
push
adc
xchg
pminsw
fmull
adc
loop
in
sbb
or
add
sbb
scas
adc
pusha
movsl
sti
in
das
loop
std
stos
lret
add
sub
gs
or
sub
jne
adc
cmp
dec
mov
inc
inc
out
out
sbb
cs
push
fcoms
or
mov
inc
adc
inc
jbe
dec
dec
clc
sahf
push
dec
mov
outsl
or
mov
or
pop
xchg
mov
xchg
and
xchg
out
notb
cli
pop
sbb
orb
pop
je
je
enter
divb
inc
shr
and
loop
repz
adc
sbb
lock
cmp
les
jmp
ljmp
jne
xor
push
xchg
jno
xor
inc
js
jge
dec
or
or
push
enter
es
or
mov
rcll
pushf
scas
xchg
fsubl
shlb
mov
in
sbb
jmp
imulb
rcrb
dec
mov
cmc
into
nop
dec
or
lret
or
stos
mov
clc
test
pop
sub
les
mov
sahf
addb
ja
cmp
inc
cmp
les
adc
jo
push
adc
cmpsb
sub
lret
or
push
inc
stc
adc
pop
mov
les
cmpb
xchg
or
repnz
cs
adc
cmp
cmp
mov
rcr
xchg
icebp
stos
inc
jmp
add
fs
or
stc
inc
adc
daa
scas
jge
clc
sbb
rorb
inc
pop
mov
sub
or
ja
mov
lcall
inc
sub
jge
jmp
sti
sub
push
mov
sub
and
pop
adc
sub
inc
nop
or
pushf
repz
mov
adc
adc
repz
pushf
lcall
mov
cld
aas
into
jb
cmp
sbb
pop
in
cld
inc
jmp
push
dec
incb
nop
sbb
mov
sub
mov
xor
push
adc
cmp
mov
bound
insb
frstor
nop
xor
inc
loope
aad
adc
or
loop
rol
daa
jmp
push
mov
les
push
stos
pop
call
mov
mov
idivb
int
mull
decb
mov
outsb
shlb
dec
xor
daa
mov
and
xor
mov
jne
xchg
dec
lea
jmp
mov
adc
jnp
cmp
xchg
sbb
stos
sub
cmp
xor
sub
and
add
jb
jmp
cmp
in
jle
ljmp
subb
out
push
in
and
add
xor
inc
or
push
mov
mov
cltd
jo
out
clc
addr16
arpl
and
int
mov
add
xchg
and
xchg
xchg
bound
push
pusha
push
in
mov
mov
mov
ljmp
test
ficompl
inc
or
dec
cmp
jo
add
les
sub
dec
enter
fisttps
cmpsl
jg
mov
mov
inc
sub
test
or
cmp
jge
push
adc
insb
jle
jl
push
mov
mov
pop
fcompl
sti
xchg
push
stc
ficompl
in
or
jmp
xlat
jmp
mov
push
and
sbb
out
ss
sbb
pop
pop
xchg
das
and
lahf
inc
cmp
push
call
add
cmp
adc
inc
xor
mov
add
sbb
xchg
hlt
filds
add
dec
lcall
mov
xor
or
shlb
jbe
xchg
loope
cmp
xchg
dec
call
xor
mov
mov
xor
lcall
xor
mov
fs
add
xchg
repz
or
insb
dec
mov
fcompl
rcrb
repnz
hlt
bswap
inc
sub
inc
inc
movsl
aam
shlb
inc
cmp
and
cld
les
add
xlat
sub
in
mov
mov
cwtl
lock
xchg
jl
sbb
jno
ds
dec
popf
insl
jae
das
aad
jecxz
and
jne
and
push
dec
inc
or
mov
jmp
jl
inc
and
cli
fldcw
inc
nop
inc
fwait
jp
push
scas
sbb
push
sub
lea
adc
add
je
mov
mov
xchg
js
dec
inc
lods
ficomps
pop
ss
and
mov
stos
mov
test
out
adc
adc
lock
addb
cmc
add
hlt
push
dec
dec
fs
or
pop
cmpsl
arpl
xchg
aaa
add
push
jno
lcall
flds
cltd
xlat
ret
or
adc
xchg
jb
add
add
icebp
in
mov
icebp
jle
lds
adc
jnp
xlat
mov
adc
or
test
movsl
dec
sbb
adc
gs
mov
cmpsb
push
add
pop
mov
xchg
je
leave
pushf
adc
or
lcall
adc
lods
int3
or
xchg
mov
mov
mov
mov
add
add
xor
out
adc
sti
pop
xor
jge
add
sbb
dec
cld
ss
adc
mov
push
inc
add
adc
and
xchg
in
pop
xor
sub
cs
mov
push
inc
nop
hlt
mov
add
test
mov
inc
mov
mov
push
dec
adc
push
push
pop
je
jp
sub
cmp
push
daa
push
jge
cs
adc
lret
mov
pop
lret
add
ljmp
dec
lret
cwtl
push
adc
jne
popf
test
movsb
sub
xchg
push
sub
inc
dec
rcll
xor
jo
and
mov
jo
push
xor
clc
inc
lcall
cli
gs
xchg
and
out
adc
jmp
adc
inc
xor
mov
and
xchg
xchg
add
sub
mov
push
dec
loopne
pop
sub
movsb
cmpsb
stc
enter
into
add
cltd
enter
hlt
jo
and
jecxz
loope
sub
shlb
mov
jl
andl
enter
adc
add
shll
adc
mov
add
or
movsb
add
sub
add
test
aad
mov
push
rorb
sbb
pop
aas
loopne
aam
xchg
shlb
jns
add
repz
cmp
lods
push
jno
enter
addl
cmp
aam
outsb
sub
neg
in
dec
mov
mov
xor
sub
das
cmc
lcall
mov
out
sub
in
int3
xchg
fnstcw
mov
dec
sbb
cmpsb
or
push
in
ret
out
mov
sbb
movsl
jmp
je
les
rcr
std
aas
mov
xlat
xchg
cli
fdivrs
add
jne
cmp
bound
cmp
jg
add
aad
cmp
jae
pop
xor
mov
adc
je
inc
mov
add
inc
mov
jmp
pop
mov
jp
cmp
xor
fists
adc
es
xchg
sub
mov
dec
add
sub
pop
aaa
test
adc
dec
in
pop
jns
xor
xchg
mov
jae
xchg
hlt
in
lea
xor
nop
sbb
sub
xor
add
add
dec
xchg
xor
imul
je
mov
jne
inc
in
fisubrl
je
movb
mov
xchg
jl
mov
pop
and
mov
add
jns
test
dec
cmp
insb
push
inc
mov
data16
cwtl
aaa
and
push
dec
addr16
sbbb
test
adc
xor
ljmp
sub
and
int
push
mov
loop
aas
xor
jo
xor
sti
pop
xor
inc
xchg
adc
mov
aaa
mov
ljmp
fld
es
mov
sahf
bound
rorb
mov
inc
lret
adc
loope
push
dec
dec
and
int3
mov
das
and
xor
xor
sub
and
inc
inc
pop
push
and
mov
and
add
outsb
mov
pop
mov
cmp
add
adc
test
int3
popa
lods
call
shll
lock
add
push
ret
xchg
or
pop
cltd
and
push
push
or
push
in
pop
stc
rolb
mov
xchg
add
in
loope
xchg
jmp
in
xor
sbbl
lcall
popf
enter
jg
mov
jno
mov
mov
cltd
jno
cmp
xor
jns
xchg
adc
scas
int
inc
cltd
cwtl
dec
cwtl
push
fistl
pop
call
pushf
lods
ret
or
insb
adc
mov
mov
sub
inc
pop
repnz
adc
or
cmp
mov
shrl
jnp
mov
add
adc
aaa
scas
and
or
xchg
adc
jmp
scas
out
jnp
xchg
dec
jp
mov
jb
mov
sahf
outsl
jbe
loope
xchg
imul
int3
push
in
cmpb
or
jmp
jmp
paddsb
or
push
movsl
nop
add
jne
adc
aaa
sti
lea
fimull
std
out
imull
mov
fadds
dec
mov
xor
jb
sub
and
jge
mov
push
push
adc
push
test
ud0
jecxz
pop
hlt
dec
xor
out
loopne
inc
push
jne
inc
pop
sub
and
or
mov
insb
mov
pop
and
ja
movsl
jp
adc
or
int
push
mov
dec
sbb
push
sti
inc
and
adc
add
lock
icebp
mov
adc
push
and
inc
inc
mov
push
das
les
call
out
jge
cmp
push
movsl
sbb
js
fmull
cld
fxch
adc
inc
adc
jae
mov
jne
repz
sbb
add
dec
push
or
inc
or
cmpsl
arpl
inc
nop
add
sub
jmp
sub
push
xor
push
mov
inc
xchg
cltd
mov
ja
pop
das
inc
clc
or
cmp
clc
and
cwtl
or
pop
add
mov
neg
sub
les
cmpsb
sub
enter
sub
xchg
mov
incl
call
mov
sbb
jmp
sbb
sbb
fsts
sbb
jmp
inc
add
sub
adc
sbb
inc
xchg
inc
add
sbb
jecxz
and
fstl
or
jns
cmp
jge
rcrl
sbb
adc
std
push
arpl
jg
push
xchg
rolb
dec
mov
jp
push
shl
sbb
xchg
dec
add
mov
and
inc
mov
add
fs
popa
jmp
mov
mov
xchg
jns
stos
add
lcall
xlat
rclb
push
fs
xor
pop
clc
stos
cmpsl
adc
push
inc
jmp
rol
mov
xor
ret
cmc
sub
fsubrl
adc
neg
or
and
cmpsb
cmpl
sti
adc
and
invd
inc
jnp
mov
adc
or
xor
or
push
push
push
pop
fs
loop
aaa
push
mov
clc
int
enter
pop
add
add
add
pop
ret
or
nop
and
adc
adc
adc
inc
adc
cwtl
mov
daa
je
xlat
int3
sub
xor
out
xchg
shlb
out
ja
lret
pop
ljmp
dec
stos
sub
jb
inc
xchg
push
cmp
iret
fnstcw
push
jg
sub
pop
insb
int
lock
jecxz
lahf
mov
es
or
outsl
repnz
or
adc
dec
sbb
ds
jmp
mov
daa
popf
adc
addr16
sub
mov
sarb
std
lcall
cli
mov
sti
mov
popf
jle
inc
or
push
gs
loop
jns
add
hlt
mov
clc
gs
stc
push
sub
cld
jb
scas
push
cmp
adc
loop
rcrl
push
xchg
add
inc
imul
aam
push
mov
cmp
xchg
test
fdivrl
rclb
add
ja
xchg
ljmp
out
fisubs
push
mov
add
mov
das
adc
xchg
add
mov
or
inc
sbb
cli
add
ds
jl
mov
xor
inc
jmp
push
loope
or
jns
adc
cltd
lahf
loopne
push
sbb
or
jnp
jmp
hlt
sbb
inc
popf
pop
daa
popa
jo
jmp
aam
push
daa
cwtl
pop
adc
mov
cmp
jns
les
mov
push
jne
test
mov
add
push
loopne
das
and
in
jb
clc
jo
mov
pushf
adc
push
pop
sbb
in
add
pusha
scas
lcall
mov
xchg
push
sub
xor
scas
bound
pop
xchg
sahf
xchg
cmp
imul
or
xor
in
xor
adc
inc
js
shl
inc
pop
push
and
push
out
rclb
clc
jo
sti
fdivrl
test
stos
dec
xlat
push
jnp
mov
lods
or
xchg
mov
jne
cs
test
xchg
fstpl
mov
inc
push
mov
sbb
stos
pop
xchg
mov
sub
dec
in
lds
adc
or
pop
inc
jmp
lds
cld
xchg
les
clc
out
and
iret
ljmp
adc
or
aas
jns
adc
xchg
dec
aam
jnp
imul
mov
jb
sub
jmp
mov
add
mov
mov
or
or
xchg
or
cmp
adc
or
popl
lock
add
sub
and
add
add
inc
or
or
out
xchg
or
and
and
or
mov
flds
push
test
mov
jno
inc
je
jle
jbe
insb
and
call
ja
sub
les
test
xchg
out
push
test
pop
lods
and
call
mov
mov
sub
in
leave
fldl
dec
imul
jno
fstpl
or
dec
lea
jg
cmp
inc
xchg
lods
hlt
mov
call
subl
pop
xchg
push
and
jo
jno
mulb
xor
push
sub
cmp
test
sbb
idivl
fcomps
pop
rcrb
pop
add
adc
adc
add
push
lea
dec
push
pop
test
push
ret
sbb
test
xor
add
loopne
iret
xchg
sarb
dec
sahf
mov
mov
xchg
lea
or
mov
pushf
das
cwtl
push
and
fdivr
adc
xor
hlt
xchg
lds
pop
aaa
push
fs
jle
mov
das
mov
cs
fisubrs
jne
dec
add
loope
in
push
and
lods
push
stc
daa
push
out
movsl
fimuls
lock
imull
ret
push
rol
push
push
jno
and
inc
scas
cmp
or
adc
jnp
nop
fcmovnbe
cmp
jne
scas
out
rcrl
jmp
add
test
out
lods
das
or
out
fisubrl
out
es
ja
iret
data16
lahf
pop
out
rolb
insl
sti
mov
mov
push
inc
movsl
adc
out
into
mov
data16
repz
mov
push
pop
daa
push
fnstsw
jge
int3
xchg
xchg
xchg
adc
out
bound
pop
and
xchg
ret
adc
or
fcompl
mov
mov
movl
repnz
shr
enter
aam
mov
movsl
incl
push
or
cmp
movsl
adc
movsl
aam
cwtl
sbb
push
push
sub
or
daa
loopne
mov
cmpsl
jg
inc
imul
mov
and
sub
xor
mov
inc
out
push
inc
cmp
xor
leave
orb
sub
les
xchg
movntq
repz
icebp
rcrb
faddl
mov
jg
outsb
xor
adc
cmpsb
and
inc
sub
pop
inc
xor
nop
nop
shll
mov
adc
add
call
mov
test
adc
cmp
je
sbb
lret
fcoms
sub
xor
or
mov
mov
nop
orl
fsubrs
sub
fneni(8087
dec
mov
mov
pop
mov
lea
mov
pop
adc
clc
cld
jb
push
sbb
ja
pop
out
clc
adc
clc
jne
dec
int3
xlat
xor
pushf
fwait
mov
adcb
into
inc
out
repnz
mov
test
sti
lods
movsl
lock
cmp
in
or
in
push
je
fistpll
jbe
lock
icebp
mov
test
pop
cmp
inc
out
inc
aad
adc
xor
add
insb
std
push
test
cmp
lcall
das
loopne
jne
lods
in
lock
gs
push
js
fmuls
jmp
ljmp
xchg
movsb
dec
jne
and
je
call
ror
cmp
xor
testl
add
test
mov
test
and
aas
mov
dec
movsb
sbb
jbe
cmp
imul
jnp
add
add
jne
stos
jmp
adc
inc
or
jb
push
push
fcmovbe
sarl
add
sbb
mov
jecxz
test
sbb
jmp
xor
xchg
jnp
or
dec
pop
notl
in
cmpb
xchg
jp
jmp
scas
dec
cli
mov
in
or
test
int3
and
adc
frstor
or
lods
fistps
js
push
aas
clc
dec
lret
lock
or
es
sub
bound
lock
add
push
adc
lret
mov
sti
pop
cld
testb
in
out
adc
cli
dec
out
xchg
fisttpll
das
pop
inc
aaa
or
pop
jl
test
loopne
or
push
push
push
mov
adc
push
repz
sub
rcr
push
jl
mov
inc
js
push
cmpsb
jle
jno
inc
scas
lret
inc
clc
jbe
ds
xor
sbb
jmp
adc
jl
jp
in
push
sub
sbb
and
scas
testl
pop
xor
jge
sub
sub
mov
inc
sub
pop
ret
sarl
in
in
or
sub
push
mov
outsb
outsb
and
push
push
hlt
fucomip
pop
mov
jno
orb
jno
dec
push
jge
mov
gs
decb
cmp
mov
push
inc
movsl
or
xor
cs
xor
mov
push
aam
cmp
call
push
mov
push
loopne
mov
jl
xor
shrb
push
movsl
ja
fs
mov
add
loopne
loope
cli
mov
shrb
mov
aam
rcll
outsb
int
or
mov
inc
mov
pop
push
mov
lea
into
adc
out
ljmp
xchg
out
rcll
scas
das
or
insl
aaa
call
cmpl
push
jns
dec
cmp
push
dec
aaa
data16
lea
int3
add
jne
enter
ret
sbb
push
dec
cmp
mov
adc
jge
dec
add
shll
pop
test
loope
xchg
notl
jge
add
cmp
sub
dec
xor
pusha
mov
es
jge
pop
dec
jl
fcmovu
or
int3
inc
les
or
push
or
enter
ret
push
pop
out
ret
daa
aaa
jo
inc
leave
inc
cmp
pop
and
hlt
lret
lds
xor
fcoms
adc
stc
pop
or
add
mov
and
push
outsl
int
sbb
ljmp
cli
flds
push
decl
mov
mov
je
imul
dec
leave
and
pop
imul
xor
inc
jge
add
push
pop
jne
mov
dec
call
jmp
jmp
in
popa
or
dec
jmp
jne
push
adc
cld
or
jne
out
inc
dec
mov
sbb
cmp
cltd
fisubrl
pop
adc
xor
push
mov
std
not
jmp
pop
repnz
mov
movsb
lods
adc
mov
jl
add
xor
xchg
cltd
adc
shrb
fists
jmp
call
lock
hlt
xchg
ror
aam
lahf
sbb
pop
sbb
call
shlb
out
jbe
sub
dec
into
mov
adcl
lret
daa
je
jbe
notl
cwtl
add
pop
repz
adc
clc
add
add
jmp
and
adc
flds
adc
and
jne
in
test
mov
fs
or
icebp
ret
lea
push
and
jne
ljmp
add
call
inc
xor
cmpsb
inc
sub
or
and
sbb
push
sub
lahf
jns
push
movsb
ret
inc
sub
and
add
fmull
aad
add
mov
mov
cmp
jb
fcomps
mov
stos
mov
movsl
mov
arpl
icebp
in
ret
or
inc
inc
adc
xchg
es
jge
push
mov
jmp
inc
dec
adc
and
mov
repz
lret
int3
push
outsl
nop
push
nop
xor
movsl
inc
xchg
xor
and
inc
pop
xor
adc
sti
xchg
sub
movsl
xlat
xor
jo
mov
movsb
ret
push
xchg
and
aaa
js
ljmp
test
dec
and
into
push
lods
dec
lahf
leave
push
mov
das
call
cmp
jnp
mov
cltd
aaa
sub
adc
lds
sbb
dec
adc
push
adc
std
flds
popa
mov
lret
xchg
movsb
aaa
test
cwtl
push
xor
push
lret
lods
push
je
lret
push
cmp
jae
jl
popf
negb
and
clc
fstps
dec
adc
push
ds
in
mov
jmp
push
jns
stos
aas
mov
jbe
push
out
jp
push
jne
cld
xor
inc
lods
jge
lds
push
inc
inc
mov
imul
test
inc
and
cmp
push
pop
jns
imul
dec
neg
outsb
jb
mov
xchg
add
xor
in
lods
movsb
daa
pop
or
nop
xor
das
jbe
push
inc
push
sub
add
push
test
mov
pop
sbb
xchg
mov
mov
lds
pop
mov
aam
and
xlat
push
mov
add
addr16
and
cmp
add
add
bound
mov
adc
add
mov
lret
repz
push
push
aad
mov
ds
aas
sub
mov
fisubl
push
mov
dec
ret
xor
jbe
adc
xchg
or
les
shrl
xor
lret
in
push
std
jp
sahf
xor
sahf
xor
cmp
enter
adc
dec
add
rcll
in
fstp
sub
scas
arpl
shll
data16
mov
mull
or
test
fimuls
rolb
lret
push
iret
popf
jne
adc
ret
mov
repnz
and
pop
clc
icebp
movsb
mov
jno
shll
push
ret
and
aaa
push
inc
call
dec
insl
sahf
and
xchg
iret
mov
loopne
inc
pop
xor
je
fcomp
movsl
sbb
inc
mov
loopne
jne
mov
js
fwait
andb
loopne
subb
outsb
lods
dec
lods
push
pop
ljmp
ljmp
shrb
jmp
ss
cmp
pop
jmp
testl
out
test
int
or
push
or
add
sti
add
lahf
jbe
pop
popa
mov
insl
out
leave
pop
fcmovnbe
test
call
ljmp
cltd
jbe
stc
inc
push
mov
aas
jne
push
subl
call
and
shll
push
xchg
pop
daa
and
cmp
sahf
inc
inc
andb
mov
adc
inc
adc
mov
enter
cmp
add
addr16
test
mov
cli
mov
mov
or
lahf
inc
jno
or
mov
sub
push
xchg
add
add
mov
shl
push
les
and
or
out
adc
or
jae
test
daa
mov
roll
pop
add
adc
and
sti
cmp
cmp
inc
adc
mov
movl
jp
mov
xchg
loop
jg
in
gs
xor
pop
xor
ficomps
cmpsl
jg
jno
aas
aaa
jbe
xor
imul
leave
pop
das
mull
mov
and
dec
and
adc
mov
scas
cmp
bound
pop
outsb
loopne
push
or
mov
add
xor
cmp
dec
jns
cmpsl
or
out
and
in
pop
push
aas
inc
ljmp
adc
decb
dec
and
adc
pop
add
clc
add
adc
negl
pop
int
jp
xchg
fcompl
fwait
iret
lods
mov
mov
mov
push
add
dec
test
aaa
cmpsl
mov
mov
testb
nop
sbb
ss
lods
lahf
cmp
inc
inc
outsl
and
imul
repnz
ljmp
addr16
cmc
push
dec
lahf
xchg
decb
push
cmp
dec
lods
jae
stos
fadd
mov
mov
push
repnz
inc
jmp
repnz
xchg
stos
jg
and
sbb
or
imul
daa
xlat
mov
push
push
cmp
nop
mov
lahf
pop
sub
popf
shrl
push
or
adc
jmp
xchg
adc
shlb
pop
xchg
cmp
sub
dec
test
xchg
sti
cmp
es
jmp
or
aam
shlb
int3
sbb
or
mov
mov
mov
lods
fs
fadd
push
pop
dec
push
loopne
in
call
xchg
and
nop
cld
fcoml
ret
mov
or
or
adc
xchg
and
and
and
sub
sub
xor
xchg
and
sub
inc
dec
and
push
enter
xor
fs
xchg
and
je
js
jl
sbbb
or
xchg
and
fs
xor
xchg
and
fs
shlb
shlb
aam
fmuls
xchg
xor
loope
in
enter
xor
sbb
or
add
or
adc
adc
push
push
sbb
and
xchg
and
xor
xor
cmp
cmp
inc
or
xchg
and
enter
xor
or
xchg
and
enter
xor
or
xchg
and
cwtl
xor
ret
nop
int3
enter
xor
sbb
and
movsb
xor
mov
ss
repz
mov
lock
pop
jg
out
frndint
xor
adc
jge
popa
rorl
sub
mov
test
cmp
sbb
in
and
vmovaps
fldcw
cli
mov
in
cs
daa
dec
add
dec
aam
out
mov
imul
mov
nop
push
shl
xchg
pop
movsb
cmp
ljmp
sbb
adc
mov
loope
mov
stos
rcrb
scas
lods
mov
out
push
decb
std
xchg
out
pop
adc
cwtl
mov
shrb
inc
ss
pop
and
pop
sub
mov
xor
jge
mov
jne
mov
int
test
icebp
je
ds
push
out
das
add
mov
and
movsl
xlat
addr16
adc
stos
mov
cld
dec
daa
sbb
cli
in
xor
and
in
cmp
loopne
mov
xchg
pop
shlb
pop
in
mov
adc
add
fs
jle
pop
xor
jne
in
pop
jge
push
callw
popf
add
jb
push
movsb
sub
jmp
cs
aad
pop
cld
xchg
pop
scas
jb
and
add
movsl
mov
cld
fadds
lahf
inc
pop
mov
imul
inc
inc
call
mov
push
add
inc
jns
mov
inc
faddl
jns
mov
push
ja
pop
fists
jb
mov
fistpll
fwait
jbe
jmp
mov
leave
pop
jl
push
inc
pop
xor
lods
bound
dec
jo
ja
mov
dec
fadds
inc
lods
cs
xchg
adc
sub
imul
mov
adc
add
or
xor
imul
push
pop
lock
mov
loope
lods
mov
cmp
loop
dec
ret
ja
jbe
jae
jl
aas
push
pop
orl
push
fisubs
popf
push
inc
push
add
jne
cwtl
sbb
stos
and
jp
push
and
xor
in
xorb
and
sub
mov
and
push
cwtl
test
loop
fsts
xchg
and
xchg
out
dec
push
adc
sbb
loope
test
outsb
mov
xchg
jmp
test
in
outsb
mov
or
or
jmp
mov
push
mov
or
and
sbbb
mov
sbb
push
fcmovnb
imul
enter
cwtl
add
test
test
stos
xor
pop
subb
mov
mov
and
dec
addr16
test
orb
popf
sahf
int3
aam
or
xchg
and
call
bound
sub
sub
incb
test
mov
cmp
js
and
test
inc
movsl
fistps
pop
and
clc
cmp
sti
clc
aas
dec
sbb
push
dec
popa
adc
inc
sbb
and
popf
dec
jnp
push
add
xor
je
cmp
and
in
hlt
jb
cmp
hlt
out
outsb
ret
es
notb
fstpl
ljmp
popa
jno
mov
push
push
add
cltd
or
loop
push
gs
adcb
add
out
mov
les
add
movsl
arpl
add
mov
push
pop
movsb
mov
aad
fcomp
rclb
or
pop
sub
mov
mov
repnz
mov
test
add
sbb
in
insl
push
mov
hlt
add
test
adcl
adc
shrb
std
add
leave
mov
add
fldcw
and
add
enter
pop
adc
imul
push
addr16
add
aam
dec
add
test
movsl
cmp
test
xor
leave
add
lods
jecxz
fdivs
add
filds
or
cmp
fldenv
jo
sbb
push
addb
mov
and
les
mov
mov
sub
mov
or
and
or
das
adc
stos
sbb
sub
add
jbe
jno
add
adc
out
mov
mov
push
movsl
in
lahf
add
aam
call
daa
xor
pop
xor
test
xchg
sbb
or
insl
or
add
hlt
cmp
lahf
bound
sbb
xor
dec
loope
repnz
ds
push
cmpb
sbb
hlt
or
adcb
cmc
fnstenv
mov
ljmp
mov
add
sub
rorl
pop
popa
mov
into
nop
sub
mov
aam
add
fadds
shll
push
imul
inc
mov
sarb
sub
add
add
or
jno
push
and
daa
adc
or
leave
and
mov
outsl
orb
mov
add
push
stc
ficomps
leave
sbb
shlb
add
cmp
shrb
cmp
mov
insb
mov
mov
lcall
add
ljmp
fildl
push
fdivl
adc
arpl
test
fs
add
push
or
clc
iret
push
in
popf
decl
xchg
daa
scas
orb
sahf
push
pop
jge
orb
shlb
repnz
inc
push
imul
lret
addb
ss
sbb
lock
add
loopne
rorl
adc
dec
ffree
mov
out
sbb
mov
mov
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
sub
mov
rol
ret
iret
shlb
sbb
mov
fs
repnz
in
pushf
mov
insl
lar
ss
jmp
pop
addr16
jb
push
add
xchg
adc
mov
add
sbb
add
mov
faddl
jl
or
clc
roll
icebp
clc
mov
push
pop
int
mov
pop
mul
ja
outsl
xor
sbb
dec
pop
jle
jo
ud0
cmp
pop
pop
or
adc
xsave
shll
popa
rol
push
js
loop
mov
push
add
add
popa
add
cmpsl
notl
pusha
rorb
inc
imul
add
scas
fcompl
fldenv
or
inc
lock
aaa
push
cld
mov
mov
add
pushl
loop
push
ret
inc
xchg
mov
cmpsb
mov
sarb
sub
add
fldenv
jp,pn
add
add
push
outsl
sub
mov
mov
lock
add
jno
pusha
inc
outsb
cmp
cmp
je
fcoml
cmp
mov
inc
fisttps
and
and
dec
mov
bound
cmp
xchg
mov
mov
rcrb
bound
loopne
aas
popa
dec
outsb
je
push
dec
xlat
push
lods
mov
inc
push
push
loopne
int
insl
jp
sbb
lea
dec
inc
jne
add
imull
jns
mov
aad
or
pop
iret
jns
imul
jo
cs
addb
arpl
and
je
out
dec
jge
push
adcb
fsubrl
imul
into
fisttps
jb
dec
and
ficoms
adc
outsb
adc
jno
addr16
arpl
sbb
jb
iret
inc
sbb
dec
cmpsb
scas
sub
sub
jo
imul
into
cmp
cmp
or
cmpsl
sbb
push
gs
xchg
jl
int3
sub
scas
push
jno
iret
dec
dec
mov
push
mov
stc
inc
dec
fcoms
push
inc
sub
ret
outsb
mov
sub
bound
in
sbb
es
add
dec
dec
push
inc
jecxz
jle
jns
and
push
pusha
adc
es
jo
xchg
add
dec
jae
mov
push
outsl
cwtl
or
fs
xchg
insb
adc
pusha
and
aaa
jb
loopne
mov
jbe
ror
cli
test
std
dec
ret
aam
lods
adc
pop
outsb
adc
sbb
aad
test
addl
inc
hlt
addl
or
sub
scas
sub
les
xor
lret
mov
gs
push
sub
dec
push
icebp
push
inc
inc
xchg
inc
sub
mov
cmp
pop
pushfw
dec
movsb
faddl
in
mov
fs
lret
xor
sub
test
jp
sub
xchg
xchg
xchg
gs
jmp
ja
push
or
popa
decl
push
mov
inc
sub
jo
data16
inc
sbb
sub
nop
add
imul
mov
addr16
sti
xchg
pop
mov
mov
ja
and
insb
sub
pop
pop
dec
inc
inc
push
inc
aaa
inc
inc
push
push
inc
mov
cmpsl
addr16
cmp
hlt
lret
insb
mul
fldl
aaa
mov
inc
out
or
js
ja
jg
jne
inc
push
push
dec
jecxz
pushf
pop
dec
pshufw
inc
push
sub
inc
imul
mov
bound
or
fs
punpcklwd
fstps
imul
xchg
out
leave
sbb
in
sub
inc
sub
pop
loop
and
cmp
ficomps
cltd
xor
adc
movsl
outsl
dec
fsubs
xchg
xchg
pop
cmp
and
arpl
mov
pop
push
jne
lcall
idivl
push
jno
jne
lods
cld
stos
jno
jb
dec
aad
outsb
fsubs
mov
and
psubsw
and
int
scas
inc
adc
adc
aas
data16
and
cmp
dec
jo
fs
mov
dec
fs
sbb
mov
les
pop
sbb
hlt
cmp
aam
push
push
and
outsb
xchg
aas
xorb
jmp
inc
clc
test
sbb
je
and
or
push
adc
movlps
pop
dec
pop
sub
pop
xor
dec
shlb
adc
imul
inc
and
rclb
outsb
fiaddl
leave
jne
and
lret
mov
adc
rolb
or
js
loopne
andb
inc
cli
and
jo
jbe
add
xchg
or
ret
jns
lods
pop
test
add
or
insl
adc
roll
jb
sub
xchg
mov
adc
shrb
imul
sub
push
data16
movsl
adc
bound
cwtl
add
sbb
imul
dec
cmpsb
jno
push
jbe
sub
adc
jp
push
sarb
xlat
adc
test
mov
xor
xor
fs
inc
pop
dec
imul
ret
inc
push
aad
inc
xchg
mov
sub
pusha
lock
mulb
jge
jb
xor
dec
es
nop
fnclex
push
ficomps
sub
jecxz
add
inc
sub
mov
push
inc
enter
stos
mov
lods
and
sbb
jmp
push
jne
or
mov
lds
or
sub
dec
rcrl
sub
add
xchg
lock
xor
push
jecxz
sub
jo
ds
push
adc
pushf
lret
and
in
test
lds
and
xchg
call
cmp
sbb
gs
shrb
jo
loop
jp
mov
dec
scas
popa
dec
addr16
pop
jns
enter
xor
or
aaa
sub
pop
push
rclb
scas
dec
mov
mov
and
cltd
in
pop
xor
fs
ret
inc
adc
test
mov
mov
adcl
rcll
push
rorb
leave
push
or
xor
xchg
or
orb
jae
jmp
stos
sarl
cld
inc
push
ds
orb
jae
sub
push
add
and
inc
jno
mov
or
pop
adc
or
mov
dec
sub
adc
inc
andb
lds
adc
cmpsl
les
arpl
xor
push
or
fidivrl
mov
and
sub
and
inc
icebp
push
ljmp
in
mov
sub
test
mov
sub
xchg
dec
nop
in
xchg
mov
add
pop
jmp
add
add
add
sub
and
cmp
pop
pop
or
aaa
sti
push
push
jl
and
sub
ljmp
inc
ljmp
cmp
lea
repz
add
add
jne
jb
push
sub
aas
sub
sti
sti
dec
pop
push
je
cmpsb
push
out
test
dec
inc
sbb
dec
inc
or
sahf
sub
dec
std
lock
inc
cld
pop
mov
mov
jmp
inc
push
std
push
or
xchg
mov
lcall
mov
rolb
pop
jo
stc
inc
or
movsb
inc
jg
pop
data16
cmp
push
adc
dec
sbb
xchg
mov
movsb
stos
pop
sarl
mov
inc
arpl
mov
fmuls
pop
jae
jae
push
mov
loop
xor
or
lret
fisubrl
fdivs
mov
jl
ds
in
mov
adc
mov
dec
ja
and
push
imul
dec
dec
inc
inc
add
dec
dec
inc
inc
adc
cmp
adc
movl
mov
or
aaa
dec
push
adc
jl
or
mov
inc
xchg
data16
imul
imul
cmp
sbb
loop
cmp
test
jbe
push
and
test
push
or
xor
pusha
in
repz
xor
mov
pop
in
jb
pusha
loop
cmp
pop
jnp
and
mov
xor
aaa
jns
test
and
aaa
repnz
out
shrd
push
rolb
sbb
out
pop
push
mov
mov
aaa
xor
mov
lahf
push
movsb
cmp
imul
inc
cmp
jae
push
mov
cs
xor
outsb
addr16
sarl
push
daa
cmp
dec
cmp
mov
mov
dec
cmp
mov
aam
fcomp
inc
mov
xchg
daa
insl
inc
fstps
dec
push
fwait
cmp
adc
adc
push
fs
les
push
inc
lret
js
push
andb
xchg
data16
pop
xor
or
push
jle
scas
or
mov
inc
lods
scas
add
mov
out
int
or
add
sbb
jo
pop
inc
adc
lret
sahf
sub
dec
or
mov
inc
insl
bound
adc
jne
aam
or
mov
cmp
es
ds
push
mov
jecxz
inc
xor
lods
call
jne
insl
mov
mov
xor
dec
and
push
insl
jp
mov
jne
rcrb
pop
inc
and
xor
jns
mov
ret
test
stos
push
xchg
rorb
cltd
and
inc
sub
jg
nop
adc
push
js
fsubrs
mov
jl
fs
or
cmovns
mov
or
iret
xchg
mov
or
add
push
repnz
and
adc
les
fs
sbb
sahf
mov
les
push
adc
imul
sbbl
xchg
sbb
leave
scas
bound
mov
mov
inc
add
aaa
or
push
push
mov
and
jl
test
jle
popf
mov
daa
popl
insl
sub
icebp
inc
mov
and
cwtl
jp
gs
sub
push
or
xchg
sbb
xlat
lret
cmpsl
nop
jmp
call
sbb
movsb
psraw
sbb
sub
mov
pop
add
and
and
data16
inc
jnp
xor
sub
adc
aaa
mov
and
mov
adc
push
loopne
adc
or
leave
sub
insl
xor
adc
xor
mov
test
iret
hlt
pop
loop
lods
mov
outsl
lret
and
sbb
adc
pop
push
adc
bound
jb
xor
test
jl
cmp
mov
adc
dec
or
ljmp
cmpsl
testl
push
outsb
mov
sbb
adc
jae
imul
imul
stos
sbb
cmpl
adc
loop
jbe
add
in
adc
mov
adc
mov
push
lahf
mov
pushf
in
mov
insb
mov
dec
jp
adc
leave
daa
or
bound
insb
lods
and
movsl
or
inc
mov
adcb
pusha
xchg
sbb
push
bound
push
imul
cmp
cmp
mov
cmp
mov
xchg
test
add
lret
add
xor
aad
je
jb
adc
sbb
addr16
stc
stc
dec
sub
js
idivl
sub
xchg
lock
out
mov
or
adcb
cmp
pushf
movsl
cmp
test
or
dec
inc
push
push
inc
or
push
jne
dec
out
push
popa
xchg
push
inc
mov
inc
inc
pop
push
dec
inc
dec
dec
clc
gs
dec
xor
inc
sbb
dec
push
insb
leave
test
arpl
fnstcw
into
daa
inc
mov
push
test
cmp
cmc
add
rorb
inc
push
je
out
inc
pop
pop
and
adc
inc
sbb
popa
outsl
sub
or
dec
inc
xchg
invd
dec
push
inc
adc
sbb
insl
cmp
sub
add
xchg
jns
iret
lock
jl
sysret
push
pushf
or
cmpsl
push
mov
add
push
mov
rol
jle
or
shlb
push
adc
push
ljmp
push
add
and
push
cltd
insb
push
sub
rorl
pusha
pop
and
or
xor
mov
cmp
xor
dec
xchg
add
push
and
orb
cli
xor
xchg
test
or
xor
sub
or
jo
lock
jnp
adc
cmp
push
inc
sbb
dec
pushf
mov
rcll
dec
popa
lock
and
mov
sbb
or
inc
cmp
xor
jne
stc
inc
popa
mov
es
inc
jecxz
outsb
push
jns
mov
and
push
xor
test
and
sub
scas
sahf
or
jg
push
dec
ret
push
sub
adc
test
or
adc
loope
sbb
or
jecxz
test
sbb
push
inc
xchg
adc
xor
add
or
add
push
mov
sub
add
lahf
rclb
add
aam
sub
loopne
adc
stos
and
loopne
popa
inc
scas
dec
xchg
and
or
adc
inc
add
dec
add
daa
inc
push
outsl
and
popa
repnz
dec
loopne
and
les
mov
push
inc
adc
cmp
or
roll
sbb
inc
sbb
inc
pop
mov
pop
xorl
or
mov
subb
fadds
mov
cmpb
inc
shl
mov
jmp
jo
xchg
ror
sub
es
les
add
inc
bound
push
adc
popa
enter
push
push
out
mov
or
inc
adc
mov
sbb
jno
mov
icebp
pop
sbb
rcrb
addr16
jp
dec
or
clc
stos
adc
or
inc
or
push
nop
push
sbb
enter
adc
push
and
xorps
dec
push
cli
jbe
inc
cmp
dec
pop
icebp
jo
xor
mov
push
or
cmp
decl
push
xor
xor
dec
mov
pop
lock
mov
sti
mov
push
xchg
push
and
outsl
xor
aam
mov
leave
or
mov
add
or
jecxz
sub
orb
addl
inc
cmpsl
cmp
or
jge
inc
add
fdivr
es
jle
inc
rolb
mov
push
push
push
push
push
push
push
push
add
pop
popa
bound
add
push
insl
or
jo
negb
add
ja
jns
push
xor
xor
xor
ss
cmp
sub
test
pusha
sub
mov
sub
push
clc
test
ret
adc
add
imul
sub
push
loop
cmp
and
mov
xchg
or
clc
adc
xchg
cltd
incl
lret
mov
mov
mov
pop
sbb
rclb
addl
push
or
fs
aam
pop
lods
push
jle
loopne
ja
test
lea
addl
sub
out
arpl
push
lock
mov
push
into
jl
shlb
xor
mov
es
mov
mov
call
je
inc
jmp
inc
jle
fs
clc
pop
popa
ret
es
mov
sbb
cmp
js
mov
je
add
or
clc
sahf
cli
sahf
pop
jge
add
idivb
jl
or
inc
std
add
push
or
inc
jae
addr16
outsb
push
mov
add
lcall
cmp
push
add
dec
sbb
pop
and
jmp
cmp
xor
sub
cld
lods
aas
loopne
pop
pop
ror
rol
hlt
cmp
jne
loope
rcrb
cmp
adc
mov
push
ffree
popa
ret
leave
sbb
les
fdivr
pop
call
jl
out
push
dec
and
cs
lods
test
and
or
inc
sbb
adc
ret
lret
mov
xor
mov
lods
or
jmp
xor
jl
and
mulb
jmp
repnz
dec
into
jb
add
jmp
call
and
push
nop
stos
add
dec
pop
mov
lds
int3
add
sbb
pop
arpl
and
pop
ja
and
fdivrs
insb
jae
es
adc
cli
mov
ds
cli
xchg
adc
xchg
xor
cmp
jno
jne
je
iret
data16
jo
sub
leave
sbb
add
add
cltd
jg
rclb
mov
je
add
lahf
mov
rorb
test
add
mov
and
call
dec
pusha
jl
in
cwtl
ret
fiaddl
add
push
aas
sub
xor
and
std
int3
inc
fs
mov
jo
scas
je
xchg
shlb
pop
or
push
dec
jl
mov
add
icebp
les
dec
or
adc
outsb
jb
popf
stos
fadds
es
inc
mov
or
or
hlt
mov
pusha
loopne
add
inc
dec
push
gs
mov
add
jecxz
sub
sub
test
adc
stos
enter
dec
inc
add
fcomps
sub
xchg
push
sub
and
mov
adc
movsl
in
jl
xchg
lods
repnz
ds
pop
sub
pop
or
and
fcoml
fcoms
mov
aad
out
das
sub
dec
data16
adc
adc
sbb
shrb
sbb
sbb
cwtl
xchg
orb
test
mov
xor
in
pop
andb
rolb
loopne
inc
adc
or
add
clc
adc
repnz
lds
add
orb
dec
cltd
adc
mov
adc
test
pusha
outsb
inc
sbb
fimull
or
or
movsl
or
mov
dec
inc
push
pop
mov
or
int
add
dec
and
dec
xor
cmp
cmp
xor
add
fs
outsl
add
cmpsb
cwtl
inc
sub
sub
clc
lea
mov
loop
add
inc
or
xchg
add
and
loopne
imul
add
out
or
push
out
test
xor
adc
dec
and
daa
gs
pop
insl
popa
cmp
js
sbb
push
inc
mov
cld
or
out
sbb
data16
push
xchg
call
in
int
pop
push
mov
js
outsl
dec
imul
and
add
rolb
fs
xchg
pop
js
push
out
add
loopne
mov
push
std
push
xor
xchg
loop
sub
jmp
das
aam
dec
add
jl
mov
ja
out
call
inc
add
cld
daa
xchg
sbb
andb
add
cmpb
dec
dec
dec
push
lahf
and
pop
and
shll
imul
dec
lcall
fidivrs
gs
jp
sub
jmp
pop
dec
dec
test
aas
mov
or
add
jo
out
or
std
cmp
xchg
mov
test
icebp
xchg
mov
xor
sub
clc
stos
stos
mov
add
int
adc
sbb
sbb
jne
or
push
or
add
push
lea
inc
icebp
out
cwtl
ljmp
push
repz
lret
sbbl
hlt
add
cltd
adc
test
adc
mov
jnp
fs
fstpl
or
lds
aad
leave
adc
jbe
arpl
add
cwtl
or
out
test
jmp
test
xchg
popf
arpl
adc
movsl
out
pop
mov
lcall
insb
stos
push
pop
rcr
xor
pop
rolb
mov
pop
push
xchg
loopne
fnstenv
add
adc
fcoms
aas
insb
pushf
push
xor
mov
add
xlat
xchg
add
sub
pushf
cmp
or
push
xchg
mov
jne
xor
jle
loopne
dec
inc
test
and
or
inc
popf
loopne
inc
push
ljmp
out
lcall
je
into
enter
add
xchg
shrb
lahf
mov
fdivl
jnp
adc
adc
mov
js
pop
lds
movsl
cmp
movsb
out
jg
fwait
push
jecxz
jle
dec
arpl
addr16
repz
add
push
pop
sbb
gs
inc
repz
es
in
dec
jle
sub
fwait
sub
jne
pop
sahf
inc
jp
stos
pop
adc
rorb
jge
cmp
insl
inc
or
cmp
std
fdivrs
cmp
adc
popf
pop
jnp
cmpsb
iret
mov
or
pop
fbstp
inc
int3
std
adc
leave
movsl
adc
jp
lret
out
fisttpll
test
aad
pusha
enter
dec
ret
dec
int3
ja
and
and
add
cld
in
leave
jmp
cli
fdivs
in
jmp
or
in
lcall
loope
std
xor
mov
scas
aad
mov
idiv
loopne
xor
insl
mov
repnz
xacquire
dec
jne
outsl
ljmp
jmp
idiv
mov
and
insb
push
pop
test
outsl
cmpsb
add
lcall
inc
inc
movsb
lret
and
inc
imul
xchg
adc
mov
dec
outsb
cmp
ja
ljmp
cmp
xor
sub
lods
fmuls
and
lahf
or
dec
and
cmpsb
or
cld
int3
inc
or
std
sub
adcl
add
repnz
sbb
scas
xor
push
das
loop
pop
xchg
loopne
sbb
push
add
loopne
inc
adc
bound
xor
cwtl
ss
stos
or
dec
js
pop
mov
sbb
and
or
inc
add
negl
cmp
or
add
sahf
add
xor
adc
jne
aam
loopne
movsl
sub
insb
and
test
fdivrl
rcrl
mov
leave
pop
gs
mov
fisttpl
das
sahf
int3
inc
add
sub
push
sbb
or
push
rclb
fwait
test
rorb
cmc
xchg
aaa
int3
mov
or
pop
movsb
mov
mov
sub
mov
xor
or
in
xor
xor
xchg
adc
inc
push
jl
adc
jns
invd
out
lea
js
jo
or
inc
adc
inc
adc
das
mov
decb
push
cltd
and
xor
add
ret
rorl
arpl
out
add
test
and
ret
xor
or
add
fsubrs
adc
add
jo
test
pop
aam
andb
add
test
mov
mov
push
int
sbb
pop
add
leave
pop
push
pop
and
lret
aad
add
ret
or
gs
sbb
dec
imul
gs
movsb
cmp
xor
xlat
mov
jo
mov
cmp
adc
inc
fs
jbe
jg
lret
push
insl
bound
loopne
xor
insb
add
jne
dec
cmc
cmpsl
je
inc
jno
add
sbb
daa
jmp
mov
and
test
sub
ror
cmp
sub
xor
pop
stos
aad
sub
lahf
adc
pusha
xor
add
ret
call
xor
add
add
push
inc
rolb
inc
int
iret
and
sub
popf
fsubp
pop
shr
push
xor
testb
stc
jl
add
inc
pop
scas
leave
bound
loopne
loopne
call
sarb
pusha
or
popf
adc
shlb
and
movsl
adc
pop
inc
xchg
and
jo
mov
and
or
jno
adc
inc
rcl
xchg
aam
mov
loop
and
out
and
sahf
inc
test
jno
adc
push
and
enter
jno,pn
adc
push
inc
mov
mov
xor
adc
inc
les
nop
in
in
and
dec
pop
gs
pop
in
mov
test
cmp
mov
push
and
in
push
addb
mov
inc
repnz
loopne
mov
addb
sbb
xor
testl
adc
inc
insb
cmp
or
and
nop
adc
inc
xchg
adc
adc
and
sub
xor
pusha
mov
mov
test
xchg
mov
and
and
inc
dec
enter
and
mov
mov
and
inc
or
nop
mov
and
inc
js
inc
sub
jno
adc
push
inc
int3
xrelease
add
add
sbb
and
out
xor
pop
and
or
xor
lods
and
cmp
mov
cmp
and
addb
test
jl
movsb
test
test
movsb
js
inc
movsb
test
movsb
js
inc
movsl
test
test
addb
pushf
movsl
js
inc
movsl
test
movsl
js
inc
movsl
lahf
adc
adc
pusha
cmpsb
push
adc
cwtl
pop
and
sub
and
mov
in
and
sub
and
cmpsl
add
scas
loop
xor
sub
and
adc
and
dec
aas
inc
dec
out
lds
push
ljmp
dec
xchg
shlb
loopne
dec
inc
loope
sbb
insb
ljmp
xor
enter
xor
xor
aaa
test
cmp
and
jnp
xor
mov
nop
xor
and
jns
or
cmp
cmp
xor
or
loope
mov
inc
enter
add
xor
add
addb
xor
xchg
sbb
jne
xchg
js
sti
push
add
rcrb
call
aas
and
xor
inc
aaa
repnz
nop
cmp
and
inc
hlt
mov
sbb
inc
xor
xor
xchg
xor
xor
and
jns
sbb
cmp
and
xor
outsl
jno
in
outsl
and
xor
xor
gs
cmp
sub
sbb
fdivrl
jns
in
aas
and
aaa
jle
cmp
cmp
pushf
xor
hlt
jnp
imul
out
push
mov
outsl
and
jns
sbb
cmp
inc
cmp
mov
out
xchg
mov
mov
gs
gs
gs
nop
gs
gs
gs
and
gs
fiadds
repnz
xchg
gs
outsl
and
gs
fiadds
repnz
xchg
gs
push
sub
xor
mov
inc
jb
insl
ds
push
adc
xor
sbb
dec
pop
test
xor
mov
mov
xor
mov
xchg
cld
hlt
mov
imul
jbe
roll
sar
lock
xor
clc
jle
pop
mov
pop
mov
inc
pop
xor
pop
add
xchg
sub
dec
inc
mov
je
cmp
xor
inc
cmp
jb
push
inc
add
jae
xor
dec
das
push
pop
mov
mov
cmp
jbe
inc
pop
xor
xor
mov
mov
xor
adc
or
cmp
fs
jmp
lcall
inc
pop
pop
lock
roll
add
je
sub
je
or
test
outsb
cmp
cmp
sbb
jns
scas
cmp
jecxz
or
lock
cmp
pop
dec
or
push
jmp
ljmp
pop
fnsave
testl
fs
mov
cs
test
jmp
in
popf
add
ss
imul
popa
xor
sbb
inc
or
push
leave
fsts
xchg
jg
xor
outsb
add
test
out
push
jge
shll
mov
enter
or
mov
inc
dec
dec
mov
std
lods
xor
arpl
outsb
xor
xchg
scas
and
push
ldmxcsr
xor
popf
mov
xlat
test
je
sub
popa
fcoml
jo
repz
inc
push
xor
enter
cltd
aam
loop
leave
mov
xor
pop
outsl
insl
push
mov
xchg
lods
adc
mov
jmp
sbb
or
dec
sub
out
int3
ds
movsb
insb
imul
sbb
pop
inc
xchg
push
insb
cld
sub
cmp
fldl
andl
pop
dec
cmp
std
mov
fmuls
loopne
gs
add
push
mov
jl
in
test
sbb
pop
sbb
inc
xchg
mov
insl
sub
pop
push
cs
scas
mov
xlat
ljmp
push
push
jne
bound
xor
xchg
jg
dec
outsl
xchg
push
or
mov
xchg
pop
sub
lahf
rorl
aad
imul
mov
loopne
cmp
and
pop
mov
outsb
sbb
adc
jne
push
sub
mov
test
nop
roll
mov
imul
mov
xor
sub
orl
mov
test
addr16
cmp
jnp
dec
inc
push
sub
xorb
daa
inc
cmc
add
or
xor
jl
mov
push
inc
or
inc
dec
push
push
dec
inc
pop
pop
addr16
or
call
inc
or
or
sbb
or
sbb
pop
or
sbb
and
inc
pop
sbb
push
inc
je
xchg
nop
and
adc
sbb
dec
xor
pop
lret
sbb
mov
mov
mov
mov
sbb
cmp
xor
dec
or
sbb
push
adc
dec
in
sti
cmpb
loop
cs
and
and
icebp
cmp
pop
jno
js
sarb
inc
cld
jl
cmp
sbb
scas
xor
enter
and
in
dec
mov
cltd
and
inc
nop
xor
mov
lret
sbb
enter
popa
or
jecxz
xor
cwtl
xor
cwtl
pushf
mov
pop
and
inc
mov
sbb
movsb
enter
pop
adc
mov
mov
and
sbb
and
or
mov
and
dec
mov
fcoms
hlt
and
jl
inc
sarb
inc
movsb
jo
jne
lret
sbb
mov
test
mov
dec
clc
clc
adc
orl
adc
sbb
call
andl
inc
insb
add
je
cwtl
dec
movsb
xchg
aam
in
add
push
stos
ret
jmp
xchg
jbe
or
daa
in
imul
dec
xchg
lret
je
lods
hlt
inc
inc
inc
dec
idivb
in
and
sub
ret
xchg
dec
adc
addr16
div
jns
insl
jmp
dec
inc
insb
sti
aam
mov
push
dec
pusha
adc
jne
fs
mov
inc
aam
idivl
test
adcb
frstor
aad
ret
imul
mov
sub
rolb
jns
jnp
clc
inc
out
dec
dec
outsb
or
insb
mov
insl
stos
push
ficomps
jo
jbe
xchg
cmc
sbb
fs
out
stos
lods
and
insb
cmp
cmp
pop
cltd
inc
mov
loope
dec
out
dec
or
jg
dec
imul
adc
test
test
decb
pop
cwtl
xchg
cli
and
pop
dec
push
lods
pop
sahf
dec
outsl
dec
insb
sbb
and
ret
push
xchg
mov
mov
lea
out
js
adc
push
gs
sbb
arpl
gs
das
and
mov
dec
inc
clc
arpl
dec
or
notb
test
in
dec
jns
in
test
into
push
push
mov
shlb
test
xor
inc
jecxz
mov
dec
je
nop
push
sti
and
inc
xor
lret
cmpsb
cmpsl
enter
pop
popa
mov
push
inc
mov
mov
inc
into
testb
and
push
bound
inc
out
inc
dec
adcb
arpl
pop
mov
test
inc
cs
iret
push
sub
cmp
cmp
inc
mov
sbb
xor
pop
dec
negl
pop
push
outsl
cmpb
adc
in
add
pusha
jne
sub
push
mov
insb
mov
dec
xor
mov
xchg
repnz
jb
jo
das
je
sub
lods
push
fisttps
mull
adc
arpl
fwait
sub
and
dec
dec
push
movsb
dec
pop
insl
dec
lcall
mov
mov
adc
or
stos
movsl
test
cs
cmp
mov
adc
dec
leave
mov
inc
outsl
rcrb
dec
xchg
outsb
data16
pop
int
push
sub
pop
dec
pop
push
mov
mov
popa
fldenv
mov
imul
cwtl
rcrl
hlt
sub
sub
xor
xchg
inc
dec
jbe
inc
jb
ljmp
mov
jae
pop
lea
adc
push
das
imul
enter
cmp
sub
push
test
jo
jb
lret
sub
mov
gs
fistpl
aaa
adc
ret
mov
adc
push
push
stos
mov
inc
fs
jb
pusha
outsb
inc
push
int
xor
mov
divl
inc
pop
mov
sub
sub
cld
sbbl
das
xchg
xlat
xchg
cmp
adc
adc
out
and
push
xor
loopne
dec
dec
cmpsl
jg
or
dec
push
sbb
and
aam
popa
xchg
into
push
std
cmpsl
mov
and
inc
xor
movsl
fisubrl
sub
push
inc
push
inc
dec
push
dec
dec
ljmp
ret
inc
bound
ja
je
insb
dec
add
adc
arpl
cltd
push
imul
add
push
in
xor
test
dec
mov
adc
lea
jne
dec
insl
push
push
nop
ret
pop
xchg
inc
rcrb
insb
ficomps
ficoms
jo
sbb
jne
js
and
xchg
mov
rcrl
dec
fsubl
xor
es
cwtl
data16
outsl
inc
mov
cmp
fs
in
push
mov
pop
repnz
dec
push
je
pusha
xchg
push
mov
outsl
in
dec
call
inc
int
cmp
push
je
mov
cs
das
pop
xor
pop
insl
jo
rcrl
dec
cwtl
in
je
ja
subb
mov
daa
xor
bound
sahf
xchg
push
inc
mov
or
xchg
aad
mov
je
adc
dec
jmp
sbb
sub
sbb
rolb
arpl
cs
int3
mov
pop
pop
sahf
jbe
das
popa
adc
sub
mov
lret
pop
stos
sub
xor
and
jae
lds
xchg
stc
popl
repnz
and
add
and
inc
cmp
adc
jmp
jb
or
jno
lahf
mov
lahf
xchg
sahf
jle
insl
dec
mov
hlt
cmp
arpl
dec
test
aaa
pop
push
or
in
loope
xor
das
xor
movsl
mov
repz
and
movsb
push
xchg
aas
fs
daa
aad
push
jae
inc
sbb
pop
ljmp
add
add
push
mov
adc
insb
repnz
cmc
in
adc
daa
in
shlb
stos
and
mov
icebp
cli
lds
out
movsl
fdivs
sub
inc
mov
pop
ja
imul
ret
sub
xor
sub
aam
dec
sub
enter
push
adc
mov
je
ja
rorb
inc
mov
cmp
out
sub
and
fucomp
mov
xlat
sub
outsl
in
inc
scas
lret
xchg
lea
push
jo
jae
sbb
leave
pop
jecxz
pop
std
pop
outsb
dec
movsl
je
pop
cmp
jecxz
push
xchg
lret
and
mov
cs
and
inc
adc
das
ss
push
mul
pop
mov
xchg
or
push
push
xor
xchg
loope
adc
hlt
sarl
ficompl
jns
mov
inc
fmulp
js
scas
sub
pop
inc
dec
push
push
cmp
pop
jmp
je
inc
xor
daa
in
inc
imul
and
mov
out
sbb
pop
pop
mov
inc
xorl
mov
repz
test
fidivrs
cmp
pop
pop
je
loop
or
pop
lea
popa
jbe
cltd
pop
xor
cmp
inc
jbe
lds
dec
inc
int
cmp
rcr
dec
test
sub
stos
and
xor
sub
pop
sbb
sbb
pop
shr
mov
mov
mov
pop
push
dec
push
inc
dec
sub
je
cmp
daa
jns
fs
dec
in
sbb
inc
mov
dec
inc
aam
mov
or
adc
cmp
mov
sub
push
fdivrl
call
adc
push
sub
mov
push
mov
cwtl
sbb
sbb
test
inc
loopne
mov
xor
dec
test
push
sbb
push
je
daa
adcl
jmp
loop
sub
imul
insl
sbb
movsl
adc
mov
mov
mov
dec
in
dec
jo
imul
pop
fs
shll
jbe
lds
outsl
xor
mov
or
cs
sbb
in
dec
dec
pop
das
fidivl
in
jl
leave
enter
jne
mov
mov
cli
das
aas
or
push
pop
fdivs
in
dec
jp
out
inc
adc
dec
push
sub
xor
pop
mov
add
adc
scas
cmp
mov
jge
adc
sub
push
adc
in
js
mov
add
lret
adc
leave
or
mov
add
stos
jns
add
sub
imul
jnp
outsb
jns
adc
xorb
icebp
push
or
push
push
inc
push
inc
sub
mov
bound
inc
popf
lds
popf
push
dec
daa
adc
or
dec
and
inc
adc
mov
push
and
sbb
push
inc
sbb
xor
mov
and
push
push
pusha
inc
pusha
xor
das
xchg
jmp
arpl
daa
mov
call
in
or
xor
push
mov
je
inc
mov
mov
push
and
rcr
dec
sti
pop
xchg
shrb
xor
and
out
sub
in
insb
inc
push
sub
and
pop
sub
xchg
imul
or
js
lods
insb
push
add
inc
dec
push
mov
data16
insb
dec
cmp
xchg
dec
cwtl
or
data16
push
pop
lret
lret
out
pop
mov
push
sbb
or
ficompl
das
repnz
rclb
popa
repnz
xchg
arpl
dec
xchg
sbb
rclb
xchg
add
push
push
jb
pop
fldt
sub
inc
and
add
adc
or
and
jae
adc
jmp
adc
sbb
into
das
push
xchg
pop
lret
into
mov
cli
mov
xor
jmp
loope
add
jbe
sbb
xchg
mov
push
lods
jns
insl
es
adc
or
arpl
mov
jg
adc
adc
sub
lret
push
adc
idivb
sti
adc
and
das
mov
fldenv
and
push
lret
ss
cmp
jo
sub
fisttpl
mov
inc
dec
push
xlat
and
dec
pop
sub
and
cmp
xlat
or
adc
inc
and
imul
mov
gs
or
aas
sub
lock
cmpsb
push
icebp
xchg
insl
daa
shrl
addr16
xchg
push
in
mov
data16
mov
repz
pop
aaa
stc
mov
dec
push
pop
cld
test
pop
and
cmp
mov
ret
inc
inc
adc
cmpl
fwait
clc
lret
nop
roll
adc
cmc
pop
and
pop
adc
jo
mov
shll
inc
adc
xor
dec
push
inc
fistpl
push
sub
inc
xchg
dec
dec
lea
push
test
cwtl
mov
js
mov
push
jl
xchg
inc
and
imul
jb
pop
xor
push
cmc
jp
gs
push
je
sub
push
push
inc
xor
jno
push
dec
sub
dec
pop
icebp
test
push
xchg
jae
test
aam
or
cs
fs
cld
and
das
dec
push
das
xchg
or
and
loope,pt
hlt
fldl
sub
fnsave
mov
cmpsb
push
inc
cmpsl
xchg
bound
mov
add
test
sbb
hlt
aad
mov
and
mov
mov
loopne
xor
dec
into
dec
push
or
inc
les
xor
fdivl
xor
or
pop
in
imul
jno
popa
and
mov
arpl
cmpsb
pandn
jmp
or
dec
fucomi
test
jae
imul
or
adc
sbb
push
fwait
scas
pop
push
bound
jbe
dec
loopne
inc
inc
movsl
loopne
xchg
arpl
aaa
pop
push
or
xchg
jecxz
push
pop
cltd
add
pop
push
xor
sbb
pop
inc
push
sub
pop
mov
jo
je
xor
pop
dec
add
or
lahf
sbb
sbb
rolb
cltd
add
or
xchg
add
xor
jne
or
xchg
add
ds
rolb
cltd
add
or
cmp
cld
lahf
sbb
imul
lods
jle
scas
pop
lret
adc
rcrl
xor
lock
bound
jle
sbb
add
add
ret
dec
add
add
fwait
add
add
inc
sub
mov
and
jb
fwait
add
add
mov
pop
test
fwait
add
add
inc
sub
add
mov
and
add
mov
add
add
or
mov
pushf
pop
and
add
or
or
dec
pop
xlat
sub
mov
push
dec
clc
xchg
mov
push
daa
xchg
inc
or
cltd
push
iret
jne
mov
and
or
push
fisttpll
dec
mov
adc
and
loope
cmp
imul
or
or
xchg
or
test
pushf
frstor
addr16
jmp
rclb
test
xor
push
outsb
aam
or
or
movsl
or
add
or
or
test
dec
add
or
lret
or
add
push
insb
or
cmp
fimuls
push
pop
je
xor
dec
add
dec
pop
frstor
inc
and
add
pushf
xchg
mov
inc
jae
sahf
jmp
adc
outsb
or
cltd
dec
or
or
lret
or
bound
and
bound
adc
mov
aas
xchg
fsubl
pop
sbb
and
push
push
dec
pop
pop
pop
pop
lock
push
pop
pop
sub
cltd
sub
sub
push
push
xchg
push
and
xor
xchg
aad
loopne
dec
sti
pop
pop
ss
jge
push
icebp
lahf
inc
dec
dec
dec
inc
cmc
gs
cltd
inc
mov
pop
and
ds
inc
inc
lods
inc
pop
pop
inc
lahf
insl
jecxz
in
jne
shrw
cmc
gs
cltd
inc
hlt
dec
inc
ds
push
pop
pop
sub
pop
es
sbb
dec
push
xor
lret
lods
out
mov
cltd
add
push
faddl
xchg
push
pop
jl
jle
lret
push
xorl
imul
bound
pusha
pushf
pushf
out
or
or
into
lock
and
mov
and
lock
and
lock
outsb
test
mov
enter
push
sub
or
cmc
cmp
pop
push
lret
movsl
and
cld
sub
push
aam
sbb
push
js
mov
sub
and
xchg
push
loop
inc
adc
imul
insb
jmp
scas
insl
pushf
and
and
in
push
mov
jo
push
push
outsb
std
sahf
jae
lret
stc
test
sub
mov
xchg
js
dec
scas
and
ja
push
inc
mov
mov
push
adc
js
adc
mov
imul
in
sub
mov
push
mov
xchg
dec
sbb
sbb
or
mov
rcll
not
insb
jno
adc
adc
testb
mov
fisubrl
lods
pop
aam
scas
repz
jae
inc
and
push
dec
jae
add
add
mov
pop
inc
insb
mov
lods
call
fldt
dec
cmpsl
test
and
je
mov
inc
sub
mov
mov
sbb
leave
push
and
lods
dec
jl
mov
jbe
jnp
int3
enter
xor
xchg
iret
nop
adc
and
jne
and
and
adc
inc
push
adc
xchg
push
jmp
push
aam
bound
sbb
je
daa
fs
mov
daa
cmp
push
inc
dec
or
adc
enter
mov
int3
fiadds
xchg
pmullw
bswap
dec
lods
lcall
insl
adc
ss
xchg
xchg
negb
mov
sarl
pop
js
push
pushl
dec
fs
in
inc
inc
mov
dec
inc
lea
cmpsb
sbb
push
imul
int
jle
cmp
or
push
dec
stos
sub
push
mov
testb
adc
aad
loopne
inc
fs
and
cmp
push
pop
cltd
adcb
inc
sub
inc
dec
cmc
or
pop
shlb
and
xor
cli
inc
mov
int
in
insb
dec
or
cld
add
xor
push
adc
pop
push
lods
test
insb
sub
mov
xor
outsl
sub
pop
jle
xor
mov
xchg
mov
mov
jae
rclb
dec
mov
ret
jo
mov
cld
pushf
movsl
enter
and
sarb
mov
test
fs
push
add
push
bound
push
test
adc
loope
push
push
repnz
loopne
ja
and
in
rcrl
push
push
std
bound
fimull
movsb
mov
leave
sbb
adc
insb
sbb
mov
xchg
inc
push
inc
adc
push
sub
lods
sbb
sbb
rol
loope
xchg
inc
cmp
sbb
popl
sub
mov
sbb
dec
sbb
dec
fadds
shlb
ror
inc
or
dec
iret
insb
mov
and
adc
push
add
or
push
int3
or
and
data16
dec
outsl
bound
adc
dec
cwtl
xor
ljmp
popa
push
dec
inc
dec
adc
mov
arpl
pop
xor
mov
pop
push
fwait
mov
sbb
aam
sbb
inc
adc
sub
sbb
pop
and
scas
inc
cltd
lock
dec
mov
lret
enter
ss
lahf
mov
icebp
or
mov
xor
xchg
adc
push
leave
inc
imul
sbb
dec
xchg
in
or
pop
dec
dec
xor
outsl
xchg
pop
data16
repnz
inc
push
dec
jno
cmp
pop
lods
fisubrl
jb
jbe
inc
in
jb
adc
and
ljmp
mov
push
test
arpl
popa
push
sbb
jo
xor
sbb
outsl
pop
xor
scas
cmpsl
cmp
dec
mov
fbld
loopne
sahf
enter
cmc
lahf
lods
lret
stc
or
mov
xor
xor
inc
mov
adc
push
mov
data16
xor
mov
sbb
dec
pop
jp
xor
dec
jo
fidivl
and
in
test
xor
jo
jmp
pop
aas
and
mov
or
push
rclb
gs
inc
in
leave
cs
mov
inc
xchg
test
cmp
bound
test
cld
icebp
roll
scas
or
jo
mov
cmp
pop
xor
test
les
into
pop
lea
sbb
mull
sub
adc
dec
or
jnp
dec
ljmp
int3
pop
adc
or
push
orb
adc
xchg
test
mov
add
or
push
hlt
mov
xlat
and
xchg
inc
js
adc
call
leave
adc
xchg
push
sbb
adc
std
mov
mov
adc
adc
fwait
repnz
sbb
sbb
or
pop
lcall
xor
sub
or
outsl
and
enter
xor
fsubs
push
dec
icebp
mov
int
jp
push
lods
or
push
sub
adc
sbb
and
jmp
stos
ja
fxch
lret
cmp
scas
push
cs
rolb
fldcw
cs
negb
pop
inc
sbb
ss
test
dec
jns
xchg
scas
xchg
or
andb
ss
pop
jg
shlb
pop
cs
idivl
inc
cmp
mov
cltd
jne
mov
cltd
inc
insb
cmp
jnp
mov
jmp
mov
mov
pop
pop
dec
in
mov
pop
sub
rclb
sarl
addps
mov
xor
pop
dec
dec
pop
data16
fiaddl
popf
bound
lahf
jo
lret
pop
push
dec
lods
dec
movsl
jae
and
into
aad
das
icebp
dec
cmpsb
in
lock
movsb
jb
adc
inc
out
inc
test
mov
hlt
jb
jo
xor
push
cwtl
add
fsubrs
mov
imul
out
lahf
inc
cmp
loop
pop
in
testl
mov
mov
pop
ljmp
shll
xchg
pop
pop
and
push
hlt
iret
movsl
shlb
xchg
jb
sbb
mov
jne
rorw
nop
xchg
xor
jmp
dec
mov
imul
push
cmp
push
jmp
adc
stc
cltd
dec
push
cs
in
dec
cwtl
movsl
andl
insl
lods
sahf
mov
daa
jns
and
lahf
inc
addr16
sub
int3
inc
arpl
inc
jbe
dec
ds
adc
test
mov
sub
jb
or
pusha
sti
pop
add
dec
mov
or
push
ror
jbe
inc
sbb
inc
or
xchg
popf
enter
test
and
out
lods
or
xchg
lcall
and
adc
fistpl
data16
mov
lea
xchg
rolb
xchg
hlt
pop
mov
or
xor
in
adc
ss
or
rcrb
xlat
cmpl
mov
jns
loopne,pt
sub
jecxz
in
sbb
xorl
ss
test
inc
mov
imul
push
movsb
insl
shlb
and
add
dec
inc
ficoms
fs
sub
lods
cld
aam
movsb
loop
xchg
dec
pop
xor
ja
push
jne
inc
clc
popa
dec
addr16
ret
insl
dec
and
rorl
mov
pop
jae
adc
push
cmp
push
dec
sbb
inc
lret
in
xor
cmp
rcll
outsb
jae
xor
leave
mov
daa
sub
and
pushf
pushw
mov
int3
mov
scas
pop
sbb
pop
stos
or
dec
mov
cmp
imul
dec
hlt
js
mov
icebp
dec
mov
lock
push
lahf
popf
push
cmp
test
xchg
in
xchg
insb
mov
mov
cmpb
and
lret
leave
mov
dec
sbb
mov
daa
cltd
loop
imulb
loop
sub
je
inc
mov
ffree
and
gs
and
dec
dec
jo
mov
lcall
jo
push
in
call
popf
push
rcll
xchg
call
aas
int
ja
imul
imul
dec
adc
add
sbb
dec
ljmp
shrl
lods
pop
fisttpl
cld
push
add
ss
movsl
xchg
out
push
mov
pop
jb
std
and
pop
outsl
mov
dec
xor
std
jns
jns
fs
inc
insl
imul
movsl
cmp
or
dec
adc
sbb
xchg
insb
xchg
ret
movsb
sub
imul
xchg
push
pop
in
into
mov
pop
sub
cmp
lahf
int
mov
jns
pop
sub
push
cmp
sbb
lea
lea
lea
dec
stos
xchg
fs
fisubrs
cs
pop
lods
sbb
and
or
mov
jns
insb
cwtl
cmpxchg
sbb
jge
xor
dec
imul
pop
ja
inc
push
push
leave
sbb
adc
sub
lds
xor
sub
pop
aam
xchg
arpl
jo
jns
shrl
jns
and
movsb
stos
dec
call
xchg
nop
add
or
mov
adc
and
dec
hlt
mov
adc
and
inc
xor
dec
adc
dec
je
andb
inc
pushf
lods
mov
fcoml
or
inc
sbb
mov
adc
pop
dec
fs
jo
jl
mov
mov
and
inc
hlt
add
add
and
dec
and
xor
inc
inc
dec
pop
mov
and
dec
nop
xchg
pushf
and
aam
in
clc
inc
or
xchg
jmp
xchg
or
inc
insb
js
mov
xchg
and
dec
mov
shlb
inc
fsubr
mov
adc
push
add
and
dec
sub
dec
pop
mov
jo
js
test
mov
mov
adc
and
dec
clc
mov
pop
adc
and
mov
push
and
dec
je
test
xchg
inc
mov
les
dec
loopne
lock
and
inc
sbb
mov
pop
call
inc
insb
je
test
nop
and
dec
lods
xchg
mov
in
hlt
pop
push
or
and
xor
mov
jo
orb
movsb
and
adc
and
inc
add
or
xchg
sbb
sub
cli
and
dec
push
inc
xchg
mov
and
dec
int3
xchg
loopne
hlt
loopne
orl
xor
push
mov
and
dec
pushf
xchg
test
mov
aam
loopne
in
and
inc
add
or
xchg
sbb
sub
cli
and
dec
pusha
xchg
jo
jl
mov
les
xchg
in
lock
cld
std
or
dec
xor
push
pusha
mov
and
dec
nop
xchg
pushf
and
fcoml
call
push
or
cmp
push
inc
fs
mov
pushf
and
dec
mov
inc
loopne
mov
and
adc
pop
dec
insb
xchg
js
test
mov
dec
fcoml
or
out
sbb
sub
xchg
dec
and
fs
jl
mov
dec
mov
inc
int3
fmuls
cld
inc
or
or
and
sub
cmp
mov
and
dec
adcb
mov
and
dec
lock
clc
adc
and
inc
cmp
push
adc
jl
mov
lods
mov
and
dec
lock
sbb
dec
dec
pop
xchg
push
mov
enter
hlt
sbb
adc
and
sub
cli
and
dec
pusha
xchg
jo
js
mov
mov
and
inc
hlt
rcll
sub
cmp
dec
inc
pop
mov
jl
nop
dec
test
mov
rolb
call
push
add
dec
sub
pop
push
and
dec
movsb
xchg
mov
mov
in
in
and
inc
or
or
sub
cmp
adc
fs
je
test
xchg
inc
mov
enter
in
clc
adc
sbb
and
xor
dec
adc
fs
jo
andb
inc
cwtl
movsb
mov
dec
fcoms
cld
or
and
dec
xor
inc
and
push
and
dec
movsb
xchg
mov
rolb
call
inc
or
or
and
sub
cmp
and
dec
pop
xchg
and
jl
mov
dec
aam
fsubl
lock
clc
or
adc
xor
xchg
dec
and
pop
push
and
dec
pushf
xchg
test
mov
rcl
fcoms
in
hlt
push
jns
adc
or
xor
call
inc
adcb
mov
les
call
fs
or
loop
and
mov
dec
and
dec
pusha
xchg
insb
and
test
mov
and
inc
hlt
rcrl
adc
dec
sub
dec
pop
mov
je
orb
pushf
and
int3
adc
and
inc
or
or
xchg
and
xor
mov
and
dec
adcb
mov
and
dec
hlt
mov
adc
sbb
sub
mov
dec
push
xchg
pusha
and
xchg
mov
dec
enter
in
lock
adc
dec
sub
pop
push
and
dec
test
mov
rolb
loopne
in
and
inc
or
or
xchg
xor
cmp
push
pop
mov
and
dec
xchg
xchg
mov
aam
loopne
in
and
inc
add
or
and
sub
cmp
and
dec
pusha
test
dec
ljmp
pop
repz
inc
cmp
push
aad
popf
sbb
call
lahf
adcl
push
push
ds
xor
inc
push
fbld
dec
dec
push
sbb
fisttpll
ds
scas
sbb
dec
dec
dec
cmp
test
out
cmp
dec
shlb
adc
insl
and
mov
jne
push
sub
push
dec
scas
inc
mov
repnz
mov
js
push
inc
dec
adc
enter
lock
adc
push
push
pushl
stos
cmp
adc
xchg
dec
and
sbb
or
cmpsl
pop
mov
pop
push
adc
jle
pop
and
pop
push
dec
test
inc
push
dec
aam
push
push
out
cltd
push
or
sbb
sbb
push
mov
mov
push
xchg
xchg
xchg
cmp
negb
push
push
sbb
sub
or
or
sbb
push
ljmp
dec
mov
cwtl
push
mov
push
inc
js
sarb
push
xchg
in
and
or
push
call
adcb
dec
push
mov
sti
dec
pop
add
dec
dec
inc
les
push
inc
xor
xor
push
test
inc
push
adc
push
loopne
scas
adc
cmp
sub
cld
sahf
adc
imul
xchg
repz
cmp
pop
jle
cmp
push
loop
rcrl
lods
mov
aad
pusha
ret
dec
inc
repnz
fwait
or
int3
mov
mov
xor
repnz
dec
dec
push
xchg
je
push
or
inc
sbb
push
pushf
jno
mov
push
inc
adc
push
add
out
mov
dec
stc
call
and
push
dec
inc
aam
push
pop
shll
adc
push
cmp
push
pop
cmp
sub
inc
out
or
dec
pop
movsb
push
ficomps
scas
fistl
dec
cmp
rcll
mov
sbb
les
adc
aas
inc
sub
sahf
push
inc
pop
xchg
or
jb
or
xor
ljmp
cmp
dec
addr16
xor
inc
js
in
add
dec
adc
xor
inc
fwait
push
dec
mov
dec
adc
cmpsb
xor
bound
cmp
nop
test
or
out
pop
add
es
sbb
push
inc
push
popa
ja
xor
mov
mov
inc
scas
clc
push
inc
popf
inc
add
daa
cmp
and
dec
adc
and
enter
add
push
mov
outsb
lcall
inc
sub
pop
je
push
jo
push
xchg
int
and
rcrb
dec
scas
sub
and
push
out
test
jbe
and
or
outsb
scas
sbb
jmp
repz
pop
push
adc
ss
clc
into
test
xchg
jno
sbb
push
scas
push
mov
xchg
scas
inc
sub
dec
je
aaa
adc
insb
push
cmpsl
and
push
insl
xor
call
adc
adc
and
ss
pop
outsb
inc
sub
push
jnp
mov
movsb
push
mov
adc
dec
dec
fsubs
inc
and
mov
and
inc
sbb
xchg
dec
jmp
dec
popf
fs
sbb
fildll
xchg
cld
imul
sub
mov
adc
xchg
hlt
outsb
jg
inc
cld
in
loop
inc
gs
or
loop
sbb
dec
pop
push
jne
inc
inc
nop
mov
sbb
pop
movsb
cmp
fdivs
sbb
xchg
pop
fstps
xor
inc
pop
lret
enter
movsl
or
sbb
dec
inc
sub
int3
sbb
sbb
pushf
aam
inc
nop
cmp
push
fcomps
push
dec
jno
mov
sub
shlb
inc
push
inc
inc
dec
mov
pop
outsb
adc
xchg
sbb
dec
test
loop
je
sbb
dec
stos
test
push
sar
and
lods
push
pop
mov
insl
je
call
pop
jl
sbb
and
popa
cmpsb
or
xchg
sbb
in
xchg
cld
push
dec
cld
sti
ljmp
lahf
inc
mull
jb
adc
xchg
dec
sub
ljmp
cmp
or
push
mov
sbb
fidivrl
sbb
adc
inc
mov
sub
fs
call
imul
call
outsl
adc
test
jnp
dec
addr16
push
lret
dec
in
cmp
hlt
frstor
repz
jmp
test
pusha
loop
test
dec
push
push
inc
inc
arpl
in
lret
in
bound
rol
adcl
or
adc
dec
or
sbb
loope
cli
dec
jo
jle
scas
adc
push
mov
ss
popf
test
std
aad
shll
xor
enter
push
xchg
sahf
rorl
pop
dec
dec
jg
shrl
fnsave
ss
enter
loop
bound
inc
xchg
movsb
pop
jae
and
sub
outsl
les
push
inc
out
jl
outsl
dec
push
enter
push
sbb
sub
pop
dec
cmp
adc
dec
push
push
xor
sub
ss
jns
out
sahf
outsb
icebp
jb
or
pop
dec
bnd
sahf
out
dec
and
sbb
jb
dec
cmpsb
add
xor
mov
out
dec
dec
mov
and
dec
and
test
xchg
mov
push
dec
clts
or
test
or
sbb
sub
aad
rorb
xor
mov
adc
sbb
cmp
pusha
pop
mov
rclb
stos
add
roll
stos
shr
push
fwait
dec
in
ja
dec
and
mov
inc
sub
cmp
xchg
sbb
mov
fstps
inc
mov
mov
ret
mov
or
adc
dec
xchg
rorl
inc
dec
inc
cmp
shrb
adc
out
adc
and
pusha
out
dec
push
sub
add
ret
or
outsb
and
pop
xchg
fs
mov
push
xor
xor
inc
xchg
dec
leave
movl
icebp
push
sub
sub
sub
pop
and
push
push
bound
adc
xor
dec
sub
aas
xchg
xor
push
sbb
push
out
xchg
mov
lcall
sbb
pop
or
cmpsb
rcrb
rcrb
xchg
xor
pusha
decb
jne
push
and
dec
je
xchg
or
popf
inc
xor
mov
dec
xor
aam
inc
xchg
push
lea
cmpsl
rcrb
loop
pop
mov
sub
pop
inc
lods
mov
push
pop
pushf
xor
jl
cmp
dec
push
cmp
mov
jp
mov
inc
sbb
aad
decb
xchg
fnstcw
mov
xor
aaa
scas
pusha
push
dec
jl
int3
mov
scas
inc
cmp
push
out
jbe
fidivs
dec
inc
test
dec
sub
lock
xchg
jl
in
or
adc
test
xor
push
xor
mov
fisubl
dec
cwtl
xchg
aam
xchg
dec
pushf
sbb
test
int3
pop
ret
push
aam
ret
sub
dec
pop
ja
xchg
pusha
xchg
push
adc
fsts
push
popa
pop
and
or
xchg
pop
xchg
call
adc
dec
sub
sbb
loop
addr16
pop
inc
mov
mov
sbb
pop
inc
inc
ss
leave
insb
push
rep
mov
mov
cmpsl
cmp
cmp
std
sub
rorb
test
lea
inc
and
mov
and
sbb
stc
pop
inc
sbb
or
jl
mov
rcll
and
jns
adc
push
or
inc
and
lods
cltd
and
adc
aaa
jae
sbb
push
xor
loop
inc
xor
adc
mov
cmp
inc
xchg
xor
lret
and
xor
jbe
and
int3
xor
in
aaa
pop
jmp
and
lahf
sub
outsl
sahf
xchg
dec
mov
sbb
addb
lahf
aad
rorb
sti
sbb
out
push
lret
in
ss
fwait
xchg
dec
jne
adc
data16
xor
rorb
aaa
fstps
push
insb
and
dec
push
sub
sarl
and
movsl
imul
flds
pop
sbb
sbb
cld
dec
push
jno
push
jbe
inc
mov
and
xor
sbb
dec
jmp
push
lods
dec
xor
adc
daa
mov
les
sub
in
push
inc
sub
ret
nop
je
aaa
daa
stos
xor
push
and
fwait
inc
hlt
pop
in
adc
xchg
push
pushf
mov
sbb
cmp
pop
sub
cmpsb
sbb
mov
or
pop
xchg
sbb
dec
lret
call
fldcw
inc
xchg
decb
inc
lods
orb
sbb
add
inc
sbb
fnstenv
sbb
mov
adc
movsl
inc
and
mov
mov
push
insb
out
rclb
movsb
push
les
or
test
in
lahf
dec
popf
nop
xchg
sbb
adc
and
or
dec
xor
inc
mov
repnz
sbb
dec
lea
cmp
and
jae
sbb
dec
xchg
aam
daa
pop
imul
loopne
bound
or
jns
xchg
mov
out
push
icebp
sti
lods
mov
pop
jnp
dec
shlb
leave
jg
mov
clc
cmpsl
and
mov
rcl
pop
push
inc
call
dec
dec
jecxz
or
pop
dec
clc
out
and
imul
dec
mov
pop
dec
adc
inc
mov
sbb
inc
and
sbb
mov
push
rcll
or
cmp
adc
mov
jmp
add
xor
popf
jb
push
xchg
push
jno
in
sbb
push
adc
and
inc
out
arpl
sbb
push
mov
adc
lahf
imul
ret
lahf
data16
cltd
mov
xchg
aam
push
or
shrb
sbb
negb
mov
dec
aam
fldcw
les
pop
hlt
lcall
or
lock
mov
dec
push
inc
or
dec
shlb
xchg
mov
pop
adc
lret
sub
jno
add
sub
sbb
hlt
cmp
lods
sbb
sbb
xchg
xchg
dec
loope
or
pop
inc
sub
add
jb
lods
or
fcomps
aam
or
xchg
push
sbb
mov
sbb
test
and
mov
sbb
das
data16
jge
scas
lret
cmc
shl
dec
push
dec
lret
lahf
stos
or
in
in
cmpsl
test
or
or
ljmp
add
inc
test
clc
pop
mulb
mov
push
daa
bound
push
dec
jno
or
ret
xor
dec
sarl
fld
sbb
xor
adc
xor
repz
pop
dec
aas
push
dec
ljmp
push
mov
and
push
negb
test
xor
mov
push
xor
push
mov
xor
mov
sub
sahf
jle
sbb
sub
xchg
dec
lock
and
ss
and
jno
sbb
stc
dec
xor
push
push
push
push
gs
sub
cmp
fisubl
mov
xchg
and
push
sbb
cmp
cmpsl
lret
pop
adc
inc
ljmp
pop
mov
dec
adcb
push
hlt
jp
sahf
sub
jns
aad
movsb
push
or
inc
sbb
and
mov
je
in
fldt
inc
pusha
imul
sbb
test
push
jno
sbb
test
and
push
cmp
nop
adc
adc
mov
jb
mov
std
insl
xor
mov
sub
inc
fmul
cmp
insl
sbb
inc
inc
adc
pop
inc
repnz
ss
and
or
push
data16
out
pop
cmp
mov
inc
ds
imul
in
jbe
sub
ss
xor
icebp
mov
jno
inc
pop
stos
cmp
push
stc
sub
push
dec
cmp
out
pop
xchg
in
mov
mov
push
jo
out
pusha
jbe
loope
gs
popa
lds
cmc
dec
add
insl
call
lret
push
jo
decl
imul
push
pusha
dec
sub
ljmp
jne
fs
fwait
sbb
or
loopne
je
fs
jb
pushf
push
xor
adc
pop
imul
jno
cld
xor
jecxz
movsb
fadds
lods
or
cmp
push
lds
push
std
clc
flds
cmp
dec
mov
sahf
adc
sar
and
sub
pusha
enter
mov
cmp
lods
stc
pop
clc
arpl
test
sub
sbb
and
inc
bswap
and
inc
and
es
sub
sub
das
bswap
pop
jle
cmp
daa
cld
pusha
xchg
jle
and
clc
cs
mov
test
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
or
sbb
and
enter
and
and
es
sub
and
das
jle
pop
repnz
daa
xchg
pusha
aas
and
and
lret
cs
cmp
test
sbb
and
and
mov
push
sbb
adc
inc
inc
sbb
cld
cs
js
and
nop
and
and
jns
pusha
pop
xchg
fs
and
leave
jbe
sbb
push
and
add
or
sbb
sbb
aam
mov
and
test
push
cmc
int3
enter
sbb
movsl
dec
inc
add
push
fcompl
mov
push
jl
add
dec
sbb
cmp
xor
jl
inc
xor
sbb
dec
imul
sbb
add
mov
adc
iret
lahf
f2xm1
daa
sbb
push
and
inc
jecxz
mov
mov
dec
mov
xor
mov
jge
das
cmpsl
sbb
mov
xor
or
sahf
add
jo
arpl
outsl
cmpsl
push
stos
loopne
and
mov
loop
xor
or
cmpsb
add
inc
cltd
or
movl
adc
push
mov
adc
mov
jge
dec
orl
adc
iret
or
add
pop
into
dec
add
lahf
call
adc
add
add
dec
mov
js
cmp
bound
dec
sub
cmpl
test
sub
pusha
sbb
jae
xchg
inc
adc
movsb
jno
enter
pop
popa
popl
rorb
and
stc
insl
or
mov
push
sbb
or
pushf
add
andl
dec
add
mov
icebp
call
cmp
jmp
xchg
xchg
testb
mov
cmp
xchg
loope
mov
inc
test
ret
cwtl
leave
cmp
js
pop
add
lock
jo
ds
mov
push
dec
push
inc
rolb
pop
fbld
mov
jg
out
add
jmp
shl
mov
xor
mov
and
sub
xor
cmp
dec
inc
push
pop
mov
insb
and
dec
jl
mov
mov
pop
add
xor
test
mov
xchg
fsubl
in
call
add
dec
adc
sbb
and
mov
xor
dec
inc
xchg
dec
and
pop
push
and
dec
mov
movsb
lods
mov
int3
xchg
fsubs
loopne
call
adc
andb
sbb
sub
mov
dec
dec
xchg
pop
and
fs
mov
andb
nop
xchg
cwtl
and
mov
mov
mov
and
inc
int3
aam
fcoml
in
in
dec
hlt
xchg
clc
and
and
sbb
and
dec
sub
xor
cmp
adc
push
dec
pop
xchg
pusha
and
orb
dec
movsb
xchg
test
lods
inc
mov
mov
adc
and
dec
in
xchg
hlt
and
aaa
or
jmp
and
dec
cmp
inc
dec
mov
and
dec
je
js
addb
cwtl
adc
mov
mov
rclb
aam
loopne
in
xchg
hlt
and
cltd
mov
or
mov
mov
in
or
add
addr16
xchg
loope
lods
cmp
pop
mov
fcmovne
dec
filds
mov
mov
push
iret
lock
dec
xor
xor
lods
insl
or
fwait
adc
pop
sub
xchg
sub
adc
std
mov
or
loope
cld
xlat
in
cmpsl
and
mov
loopne
xchg
jnp
xor
std
les
sbb
mov
mov
aas
arpl
xor
and
push
adc
push
or
adc
or
std
ret
flds
add
and
and
and
test
cmp
and
idivl
jecxz
or
xor
fs
shrb
push
outsb
outsl
push
addr16
insl
stos
or
insb
pop
mov
or
cld
mov
and
jp
sbb
and
sub
mov
jl
jno
sub
imul
scas
push
test
addr16
imul
xchg
mov
dec
leave
sbb
xlat
test
stos
je
or
jne
mov
xor
outsl
mov
das
adc
and
pop
and
cmp
cmp
push
imul
js
sahf
push
je
das
ret
jno
jp
call
js
mov
or
mov
or
out
adc
int3
lds
aam
push
push
je
cmp
js
jo
movsl
or
inc
jae
insl
mov
adc
and
push
imul
dec
xor
or
pop
xor
es
dec
std
out
inc
nop
repz
jle
enter
imul
sbb
dec
push
fistpl
xchg
clc
jne
jo
js
mov
lock
sbb
cs
adc
jae
mov
outsl
sbb
call
lods
loopne
or
push
scas
xor
or
dec
movsb
scas
lea
sub
adc
lea
and
push
or
dec
xor
jo
xor
jae
test
adc
aas
outsl
enter
add
push
cltd
loopne
imul
lret
aam
adc
leave
xchg
imul
stc
popa
adc
adc
negb
mov
sbb
stc
out
inc
ss
xor
jo
cs
sbb
in
or
sub
mov
mov
aas
mov
jno
lods
mov
push
xor
push
das
inc
push
leave
dec
lods
jnp
sub
cmc
mov
and
and
jle
jbe
pop
in
push
jmp
fucom
inc
stos
std
popa
mulb
mov
push
cmp
xchg
xchg
cmp
es
mov
pop
mov
xor
pop
push
xor
jae
shl
xchg
daa
fsubp
lret
in
orb
sub
xor
mov
stc
jl
and
cmp
adc
es
mov
loope
dec
or
or
lret
sbb
arpl
sub
cmp
adc
cmc
dec
xchg
outsl
and
sbb
add
scas
leave
andl
dec
pop
mov
dec
push
inc
cmp
mov
mov
jo
pop
into
aad
in
xor
push
cmp
dec
outsl
loop
bound
xchg
jno
xchg
cs
clc
inc
scas
adc
or
les
pop
or
test
jmp
xchg
daa
fdivl
jle
imul
pop
das
sub
mov
fs
outsb
sti
jg
jb
and
js
inc
dec
inc
push
and
mov
ret
xchg
mov
cmp
xchg
fwait
and
mov
bound
ficoms
jle
in
xlat
das
lcall
and
pop
sub
outsl
and
pop
je
cmp
lods
dec
mov
dec
movsb
pop
fs
pop
cli
jo
pop
sbbl
jns
inc
jl
dec
mov
sub
mov
lea
leave
jne
push
sbb
les
and
cmp
insl
gs
jge
mov
xchg
rorb
jnp
fs
mov
scas
or
out
and
aaa
adc
mov
test
imul
and
mov
push
stos
xchg
movl
pop
stos
cmpsl
sub
in
sbb
cltd
add
jecxz
pop
and
stos
or
ja
add
mov
std
jns
mov
dec
jbe
ss
adc
jbe,pt
adc
or
pop
and
push
or
icebp
mov
jae
movsl
push
xor
and
test
cli
fwait
loope
push
stc
sbb
push
xchg
inc
scas
mov
in
adc
jl
push
dec
and
cld
movsb
jl
sbb
and
jle
pop
ja
cmp
xor
cmp
push
inc
push
and
sub
or
mov
fs
xchg
je
mov
out
xchg
mov
and
inc
pop
xor
ficompl
sbb
mov
push
or
orb
cmpsl
pop
negb
inc
xchg
mov
pop
repz
rorl
loope
dec
nop
push
sbb
pushf
xchg
push
adc
mov
dec
scas
and
addr16
push
aam
data16
xchg
fldenv
loopne
fiaddl
inc
sbb
lods
mov
loope
ljmp
inc
xchg
out
adc
inc
hlt
mov
mov
jno
or
js
aas
jb
scas
mov
jne
adc
test
xchg
dec
imull
xchg
in
xor
mov
decl
mov
jp
sub
movsb
sbb
adc
fsubs
hlt
fs
mov
movsb
cltd
ret
incl
bound
ffreep
sbb
dec
push
mov
fsts
or
adc
lods
xor
rclb
xchg
in
mov
cs
dec
or
jae
and
movsl
push
sbb
aaa
lods
adc
je
dec
push
ja
mov
sbbl
iret
mov
outsl
fstl
test
cmp
xor
inc
adc
cltd
lret
push
js
jbe,pn
adc
dec
mov
xor
sbb
pop
dec
cmp
xchg
dec
push
xchg
sub
cs
imul
je
mov
shld
push
jmp
and
int
ret
pop
adc
fs
test
jb
fdivrl
insb
xchg
sbb
fbld
sahf
arpl
adc
or
xlat
clc
jns
adc
push
fs
cli
popa
movsl
cld
in
push
jg
jecxz
jb
ss
cs
movsl
fnstsw
sbb
adc
outsl
ja
cwtl
shl
out
pushf
fdivrs
inc
std
aam
fistps
es
insb
mov
mov
enter
cltd
scas
mov
mov
push
xchg
push
fnstenv
push
jne
push
pop
push
push
xor
cmpsl
out
and
xchg
stc
scas
call
push
pop
mov
push
pop
mulb
pop
xchg
dec
push
inc
push
std
stos
mov
push
divl
sbb
or
lock
mov
dec
out
jg
daa
push
jle
push
dec
je
cmp
stc
cli
pop
pop
and
pop
jno
fildll
sub
iret
lahf
and
add
jg
fs
sbb
in
stos
adc
sbb
inc
adc
and
fistpll
mov
dec
lock
cld
lock
or
sub
mov
popf
in
dec
sub
inc
jge
stos
xchg
mov
push
outsl
cltd
scas
insl
sub
div
xchg
sti
iret
cmp
sub
or
lret
push
adc
inc
cs
xchg
popa
push
orl
jp
jmp
inc
daa
popa
div
mov
data16
dec
pop
pop
sti
dec
adc
sub
jbe
and
hlt
jp
dec
pop
test
pop
cmp
je
rcrl
push
cmc
xchg
aad
push
fwait
pusha
les
inc
cmp
jo
jmp
adc
cli
ret
xchg
cmp
push
ja
mov
push
dec
cmp
out
sbb
dec
mov
jno
sub
ja
mov
dec
outsl
mov
push
pusha
dec
in
mov
in
inc
xchg
jge
mov
nop
xchg
xchg
sub
ficoml
jns
push
pop
sub
sbb
test
lcall
or
scas
cli
adc
or
pop
mov
in
outsl
xchg
jle
call
sub
dec
adc
aam
and
mov
cltd
in
pop
sub
cli
xor
int3
cvtps2pi
mov
sbb
sub
jb
push
jl
pop
mov
clc
jp
xchg
add
lock
and
loop
sbb
movsl
jb
push
fildll
sub
inc
lcall
test
push
shrl
adc
jo
data16
push
inc
adc
xchg
xor
xor
popf
xor
xchg
fmull
rcrb
sub
outsl
js
fnsave
adc
adc
inc
adc
jbe
icebp
xchg
cmp
cwtl
push
push
dec
push
dec
push
inc
push
es
dec
clc
pop
xor
jp
pop
inc
enter
and
arpl
out
or
je
inc
insb
imul
lret
sbb
stos
push
inc
xchg
pusha
insl
xorl
and
fs
in
pop
mov
mov
mov
or
cmp
dec
dec
xchg
push
pop
push
pop
and
dec
sub
sbb
imul
xchg
mov
test
inc
sbb
sub
mov
sub
push
call
dec
push
pop
ljmp
scas
arpl
push
call
mov
jne
sub
mov
icebp
stos
sbb
dec
dec
pop
mov
inc
and
popf
test
xor
sub
mov
cltd
jp
inc
pop
in
cmc
sarb
movsb
dec
hlt
imul
adc
sbb
cs
js
lahf
lds
and
into
outsl
xchg
cmp
fs
or
jne
hlt
mov
dec
or
das
sbb
mov
stos
sub
aas
mov
pop
popf
lods
mov
xchg
js
dec
mov
in
inc
push
xchg
insl
sti
je
imulb
inc
enter
cmp
pop
out
jp
hlt
mov
je
adc
arpl
cmp
or
or
push
repnz
lock
inc
push
push
mov
inc
adc
lcall
mov
into
xchg
sub
lds
loope
or
jge
nop
dec
sub
sub
push
pop
mov
fldcw
mov
xor
jae
inc
adc
and
repz
loop
shlb
sub
push
sub
sub
push
bound
pop
mov
ja
inc
cs
pop
pop
lods
add
outsl
jp
xor
dec
lock
lods
cmp
movsl
insl
jns
cmp
sbb
xchg
inc
xchg
mov
mov
cmp
xor
jbe
mov
or
sbb
mov
sub
mov
call
lods
clc
mov
xor
cs
push
shll
leave
iret
pop
or
fcmovnbe
in
cmp
jo
add
adc
imul
xchg
fwait
lahf
addb
inc
and
xchg
and
lahf
fdivrl
adc
insb
pushf
pop
pusha
roll
xor
insb
xor
jg
fs
aam
jge
outsb
cmp
pop
ja
loopne
rcl
repnz
dec
ja
push
xor
and
pop
xor
fs
sub
popa
or
adc
cmp
xor
mov
push
xor
ss
adc
xlat
xor
dec
sbb
jg
imul
and
aam
push
and
inc
imulb
pushf
lock
or
stos
sub
cmp
popa
jns
nop
insb
nop
fs
inc
mov
xor
in
mov
cmc
jnp
fdivrl
inc
add
test
popf
in
adc
sub
mov
fsubrp
cmp
cmp
bound
insl
jne
or
and
idiv
imul
mov
xchg
xor
mov
jae
dec
test
or
cs
out
cmp
cwtl
inc
or
test
js
cld
or
mov
or
push
inc
loopne
mov
pop
cmp
arpl
cmp
into
fmull
dec
mov
rcrb
cmp
pop
sub
push
insl
js
dec
mov
mov
sbb
out
scas
fstl
lret
rcrl
sahf
out
addr16
mov
call
rorl
or
dec
cmp
xchg
mov
mov
flds
push
outsl
shrl
cmp
and
push
das
divb
popa
cmp
mov
dec
int3
pop
xchg
aad
dec
push
mov
sub
jbe
fidivs
jmp
jmp
push
hlt
in
adc
hlt
std
in
ret
adc
dec
test
mov
push
pop
dec
arpl
or
shrl
pop
add
call
push
add
mov
jns
mov
xor
cld
rcrl
repnz
nop
insb
push
imulb
test
rol
dec
sub
and
iret
mov
movsb
lods
pop
xchg
mov
xchg
cli
lret
inc
pop
leave
push
pop
dec
dec
mov
xchg
arpl
or
jl
mov
js
iret
pop
leave
pop
shrb
and
pop
sti
mov
cltd
or
gs
adc
xchg
mov
dec
repnz
inc
push
test
clc
dec
xlat
cmpsb
test
popf
repz
iret
inc
dec
hlt
enter
sub
daa
pop
and
pop
xlat
mov
incl
or
sub
in
and
outsl
mov
sub
cmp
jne
mull
ss
cltd
xchg
cs
lods
inc
stos
push
inc
stos
adc
pop
mov
dec
dec
icebp
insb
or
sub
enter
in
cld
mov
sub
dec
or
push
dec
inc
sub
cmp
jecxz
inc
pop
mov
xor
in
add
loopne
jmp
cmpsl
dec
repnz
in
lds
ds
nop
mov
inc
inc
test
je
xorl
fimull
loopne
fstpt
aaa
mov
scas
jle
inc
add
jle
fdivs
cmp
shl
out
sbb
jb
inc
nop
xchg
cli
sub
repz
inc
cmp
adc
cmp
fstl
outsl
jae
push
add
sub
pop
jae
xchg
je
adc
or
and
xor
mov
dec
and
dec
pop
xchg
pusha
and
jo
mov
movsb
xchg
mov
mov
rclb
fsubs
dec
in
xchg
clc
jo
jne
or
mov
adc
and
dec
cmp
push
pop
mov
jo
jl
test
pushf
test
mov
mov
xchg
shlb
faddl
mov
pop
push
jbe
enter
sbb
sub
mov
push
and
dec
push
inc
mov
and
dec
rclb
loopne
call
pop
sbb
movsb
pop
or
adc
and
pop
mov
pusha
adc
js
mov
lods
mov
and
dec
loopne
call
cld
mov
js
rorl
adc
and
dec
cmp
push
pusha
mov
jo
icebp
and
pushf
adc
les
rolb
mov
adc
and
inc
add
or
adc
sbb
sub
mov
pop
call
inc
pop
mov
js
orb
nop
and
mov
mov
xchg
aam
faddl
mov
adc
and
je
mov
pop
or
xor
dec
inc
xchg
dec
and
pop
pusha
mov
and
dec
mov
lods
mov
and
dec
in
in
and
loopne
orl
dec
and
sub
xor
inc
dec
mov
and
dec
jo
js
addb
mov
dec
mov
inc
fsubr
mov
adc
push
pop
rorb
adc
sbb
and
xor
adc
dec
fs
insb
and
test
dec
xchg
xchg
pushf
and
adc
and
dec
fcoml
clc
sarl
and
dec
sbb
and
sub
xor
mov
dec
and
dec
pop
xchg
pusha
and
jl
test
mov
dec
mov
inc
mov
aam
loopne
in
xchg
clc
jo
jle
xchg
or
dec
xor
adc
pusha
dec
push
inc
test
test
mov
mov
fmull
hlt
dec
cld
mov
adc
adc
sbb
mov
cmp
dec
dec
xchg
push
and
fs
mov
and
dec
mov
test
mov
adc
and
dec
fcoml
hlt
cld
mov
fldl2t
or
adc
and
dec
xor
cmp
mov
and
dec
insb
xchg
je
jl
test
test
mov
mov
fmull
hlt
dec
cld
mov
adcl
and
mov
adc
dec
dec
push
xchg
pop
and
je
adcb
and
dec
test
mov
mov
fcoms
loopne
in
dec
hlt
mov
inc
adc
mov
xor
pop
mov
pusha
adc
jo
jl
test
mov
mov
mov
inc
fsub
mov
adc
cs
adc
sbb
and
mov
pop
call
inc
push
test
dec
nop
xchg
xchg
and
adc
and
dec
aam
in
in
inc
clc
mov
inc
adc
and
xor
pop
mov
adc
dec
jl
mov
xchg
inc
pushf
movsb
mov
int3
xchg
aam
loopne
in
hlt
mov
adc
dec
and
cmp
and
dec
push
xchg
pusha
and
jo
mov
dec
cwtl
xchg
mov
mov
and
dec
aam
loopne
in
inc
clc
roll
or
cmp
call
inc
pop
push
and
dec
mov
movsb
lods
mov
aam
fsubl
loopne
call
add
mov
and
sub
xor
mov
push
and
dec
pusha
xchg
insb
and
mov
test
mov
mov
fmuls
in
dec
hlt
xchg
cld
sbb
loope
or
sbb
mov
xor
cmp
mov
pop
adc
dec
jl
les
mov
mov
inc
fsub
mov
adc
and
inc
add
or
xchg
sbb
and
mov
call
inc
pop
mov
and
dec
test
pushf
movsb
mov
enter
faddl
mov
adc
and
je
mov
pop
and
pop
enter
das
xchg
jl
and
push
jl
test
dec
xchg
xchg
pushf
and
les
shlb
dec
loopne
call
orl
dec
and
sub
xor
cmp
and
dec
push
xchg
pop
and
js
jl
mov
dec
mov
inc
int3
mov
adc
and
dec
in
xchg
cld
sbb
fldenv
or
inc
and
mov
adc
dec
dec
push
xchg
pop
and
jl
test
nop
and
dec
movsb
xchg
mov
mov
fcoms
loopne
call
jo
lea
mov
sbb
sub
xchg
cmp
dec
inc
push
pop
mov
and
dec
adcb
movsb
mov
dec
int3
xchg
fsubs
loopne
call
add
add
and
dec
and
cmp
and
dec
pop
xchg
and
orb
dec
test
mov
mov
fcoms
in
in
dec
hlt
mov
adc
sub
xchg
cmp
dec
adc
pusha
dec
push
inc
orb
mov
and
aam
loopne
call
push
or
adc
sbb
and
xor
cli
and
dec
push
xchg
pop
and
je
adcb
and
dec
pushf
xchg
movsb
and
adc
and
dec
lock
cld
sbb
xchg
shll
or
inc
sub
inc
adc
dec
pusha
xchg
push
test
movsb
dec
lods
xchg
mov
mov
aam
fsubl
dec
lock
clc
adc
and
inc
sbb
mov
adc
and
dec
inc
xchg
dec
and
push
pusha
mov
and
dec
test
pushf
movsb
mov
les
in
mov
adc
add
adc
sbb
and
sub
xor
mov
push
and
dec
pusha
xchg
push
nop
mov
dec
mov
mov
aam
fcoml
in
in
dec
hlt
mov
or
inc
sbb
mov
sub
xor
mov
adc
dec
jo
js
addb
mov
dec
mov
inc
rcr
mov
adc
and
inc
add
or
adc
and
mov
dec
and
dec
fs
insb
and
mov
movsb
dec
lods
xchg
mov
mov
rclb
fsubs
dec
in
xchg
hlt
and
and
inc
adc
mov
adc
and
dec
cmp
inc
push
mov
and
dec
js
andb
inc
nop
cwtl
mov
dec
rclb
in
in
adc
and
inc
add
or
adc
and
mov
pop
call
inc
pusha
push
and
dec
mov
test
mov
dec
fcoml
clc
mov
or
mov
inc
and
dec
pop
xchg
push
mov
test
mov
mov
rorb
lock
hlt
xchg
cld
adc
cltd
and
sbb
mov
adc
cmp
mov
pusha
adc
je
jl
test
mov
mov
dec
int3
xchg
aam
faddl
mov
adc
and
lcall
sub
xor
cmp
mov
pop
adc
jo
js
test
mov
mov
les
fsub
mov
adc
cs
adc
or
dec
push
xchg
pop
and
jo
mov
movsb
xchg
mov
rolb
fcoml
call
dec
sbb
dec
and
sub
xor
cmp
and
dec
pop
xchg
pusha
and
jo
mov
pop
loop
test
mov
dec
rclb
in
clc
mov
adc
and
sub
cmp
cmp
adc
dec
fs
insb
and
test
pushf
dec
movsb
xchg
lods
and
adc
and
dec
loopne
in
and
inc
cld
add
sahf
stc
xchg
js
add
inc
bound
jb
jb
jo
into
sbb
mov
fs
lods
fadd
xor
adc
sub
and
sbb
or
jb
loop
push
fsubl
push
imul
or
mov
imul
dec
xchg
ljmp
sub
lods
jb
mov
outsl
ljmpw
sahf
insb
push
or
insb
test
repz
jae
stos
and
xor
inc
adc
inc
or
and
jae
sub
mov
mov
mov
adc
or
je
iret
xor
ja
test
jb
imul
repnz
movsl
xor
lahf
sub
fmull
inc
or
popa
and
imul
je
scas
leave
je
jmp
inc
aaa
js
jnp
cmpsb
or
js
test
adc
in
or
push
pusha
in
bound
adc
repz
pop
insb
loop
js
jp
insl
test
cmp
sbb
fs
adc
pop
jbe
mov
popf
cmp
jb
push
imul
sbb
xor
je
adc
or
gs
or
adc
inc
insb
push
imul
adc
or
arpl
inc
adc
pop
pop
push
ret
bound
imul
outsl
dec
or
xor
or
cmc
aaa
adc
jns
or
push
ja
or
or
outsl
lahf
push
jecxz
lea
adc
dec
out
adc
and
dec
sbb
or
mov
adc
insb
lcall
mov
xchg
adc
adc
jle
insb
adc
out
addl
lahf
into
adc
je
lret
dec
test
dec
stos
leave
nop
add
push
aam
fs
or
ret
aam
nop
je
inc
jns
dec
pop
and
dec
daa
cmpsb
adc
sub
inc
adc
adc
inc
or
push
jp
jae
adc
adc
jns
leave
cs
fucomi
jnp
mov
outsl
or
insl
mov
mov
xchg
incl
ja
sub
or
imul
mov
or
stos
and
es
mov
sbb
dec
out
adc
outsb
and
xlat
les
sbb
mov
push
je
add
mov
jns
sbb
mov
shll
adc
data16
push
inc
imul
jno
sub
clc
cmp
sbb
sbb
dec
lret
jae
test
mulb
insb
icebp
jae
imul
lret
or
jp
loope
xchg
test
mov
movsb
or
mov
ja
fsts
js
pushf
jns
and
imul
adc
mov
mov
or
fs
or
gs
je
jecxz
lods
sub
mov
sbb
repz
imul
mov
sub
xchg
mov
popa
movsb
or
imul
imul
adc
adc
ljmp
repz
or
aam
out
je
mov
or
sub
scas
int3
sbb
push
popa
sub
insb
ss
dec
gs
adc
mov
aas
push
or
xchg
orb
lret
or
daa
call
jae
imul
repz
xchg
jae
cmp
aam
dec
or
popf
incl
jae
adc
decl
mov
mov
mov
or
insl
xlat
xor
sbb
rcll
aam
sub
xchg
loopne
xchg
and
or
push
mov
imul
sbb
outsl
sbb
jo
mov
adc
dec
cltd
addr16
cmp
jns
jo
sub
or
jmp
pushf
test
shl
out
loope
sbb
lods
or
adc
or
and
outsl
pop
or
movsl
inc
or
outsl
push
xor
lcall
jne
add
addl
shrl
jb
jo
nop
xor
pop
or
out
out
out
mov
push
outsb
arpl
adc
inc
sbb
test
dec
fstpt
clc
bound
les
inc
outsb
sbb
movsl
pop
lret
or
rolb
adc
dec
lcall
sub
and
lods
adc
imul
adc
cmp
in
rclb
push
into
fidivrl
jne
lahf
leavew
mov
sbb
ret
push
std
outsb
ret
xorb
or
and
jle
mov
and
sbb
aam
pop
jmp
orl
movsl
sbb
insl
sub
sbb
xchg
push
push
orb
mov
cmpsl
pop
sbb
and
decb
jae
ds
mov
ljmp
adc
fmuls
ja
inc
lock
out
adc
adc
dec
das
push
fildll
daa
inc
or
fwait
add
xor
inc
dec
subb
adc
jno
xchg
adc
loope
lds
sub
push
repz
out
dec
adc
push
or
jne
sbb
rcll
jo
jg
ficomps
lret
or
outsb
sti
mov
mov
or
or
bound
inc
inc
loop
push
xchg
add
mov
call
mul
xlat
inc
outsl
adc
ret
int3
jp
push
cmp
and
es
mov
cmp
andb
jns
adc
je
and
lcall
adc
test
popa
je
sbb
or
insb
outsw
xlat
sbb
je
sub
int3
scas
data16
daa
pop
fdivl
adc
ja
sbb
cmc
js
bound
mov
outsb
dec
sub
ja
mov
adc
xchg
leave
sbb
xor
aad
mov
data16
or
jp
aam
sbb
and
in
loope
xchg
jo
cltd
dec
xchg
adc
or
outsl
xor
test
aam
adc
or
leave
inc
sbb
cltd
scas
loop
fmuls
imul
in
inc
xchg
popf
in
adc
loopne
mov
js
sbb
cltd
mov
and
pop
lods
and
movsl
pop
or
test
daa
je
les
mov
jne
insl
or
xchg
in
mov
insb
fwait
mov
movsl
sbb
push
or
clc
cmpsb
xor
nop
je
push
or
push
imul
imul
loope
jns
ficompl
or
scas
mov
adc
je
clc
mov
insb
sti
dec
push
adc
aaa
in
jg
lods
adc
push
sub
mov
adc
xor
aad
pop
loope
mov
ret
jb
shr
add
or
imul
xchg
adc
sbb
pop
jns
inc
in
int
idiv
fs
or
test
enter
test
rcrb
mov
push
movsb
adc
jns
xor
sbb
test
jne
push
enter
or
fwait
dec
dec
adc
adc
inc
cmp
bound
lds
insb
insl
sbb
or
or
xchg
fmuls
dec
mov
mov
fs
adc
pusha
or
dec
push
leave
es
ficompl
lea
mov
or
xor
imul
bound
aam
or
int
insb
imul
in
repnz
sbb
popa
inc
xor
adc
mov
or
icebp
nop
and
jae
or
xchg
xchg
lcall
or
inc
imul
adc
or
in
xor
imul
and
inc
into
mov
ret
lods
mov
int
lods
adc
insb
rcll
mov
dec
jnp
stc
push
and
push
lcall
adc
rorb
dec
and
push
adc
sub
xchg
clc
sbb
outsl
jns
lcall
push
loope
xchg
cli
push
shlb
shrb
or
lahf
cs
popf
add
adc
adc
and
int
mov
xor
xchg
sbb
sbb
or
mov
adc
inc
push
mov
xchg
mov
pop
loope
dec
adc
mov
jg
xor
data16
dec
lock
call
xchg
inc
adc
lock
dec
arpl
cmpsb
lods
xchg
push
jp
or
push
std
ret
lds
ss
adc
imul
sbb
mov
insl
movsb
lret
mov
or
pop
or
fisttps
or
lods
int
pop
loopne
mov
scas
or
rclb
or
jns
jp
xor
and
jo
fdivs
adc
jns
xor
test
addb
test
je
arpl
movsl
adc
sub
adc
push
mov
js
push
mov
jo
dec
xchg
movsl
pop
cmp
ficompl
pop
stos
ja
data16
sbb
sub
add
sub
sbb
fists
jns
loopne
dec
popa
jno
pushf
lea
mov
cmp
inc
addr16
mov
je
mov
adc
sbb
or
jbe
jns
or
pop
sahf
insl
adc
jbe
push
in
pop
jo
dec
pop
pop
or
or
jae
aam
addr16
inc
ficoml
adc
or
sub
mov
leave
addr16
insl
sbb
lret
xchg
fwait
adc
or
data16
imul
dec
xchg
mov
jo
aad
jl
ja
ficoms
outsl
lods
xchg
aam
xor
and
xchg
cltd
mov
mov
or
sbb
icebp
mov
sbb
insb
loop
inc
or
sbb
inc
or
lea
out
cmpsb
jb
mov
cmc
and
repnz
ret
mov
lahf
stos
or
fstl
aam
sbb
mov
jae
or
out
jp
outsl
xchg
xchg
inc
test
inc
inc
dec
faddl
cmc
and
mov
adc
jb
imul
inc
inc
insb
or
mov
ficoml
inc
je
adc
fs
pop
adc
mov
fs
push
sbb
sbb
je
adc
adc
ficoml
adc
out
imull
cmpsb
and
push
sti
sbb
push
pop
out
lcall
push
sbb
inc
or
data16
cmc
sbb
mov
movsl
xchg
imul
adc
push
pop
bound
pop
mov
mov
out
cltd
or
adc
jne
jbe
stos
or
test
daa
xor
orl
data16
mov
jae
addr16
ret
inc
cmc
icebp
mov
adc
mov
mov
xor
stos
mov
hlt
ret
repnz
adc
dec
fdivrl
lods
mov
dec
test
std
jnp
or
adc
xor
adc
lock
adc
jno
mov
imul
insb
out
inc
mov
push
les
orb
cmpsb
sbb
ja
push
std
icebp
and
cmpb
jno
dec
sbb
adc
outsb
pop
imul
mov
or
imul
adc
out
or
jmp
lret
push
jnp
or
insl
or
adc
jg
jb
out
dec
test
or
jp
jo
jo
pop
mov
or
cld
int
push
mov
push
push
and
or
cmpsb
mov
xlat
jns
daa
xor
push
sbb
cmp
sbb
fsub
jbe
es
adc
jmp
or
mov
mov
or
imul
test
sbb
adc
sbb
lock
add
jbe
sbb
sbb
inc
or
out
loope
fildl
and
push
or
xor
fnstcw
mov
xchg
push
out
push
bound
in
lret
aas
std
es
mov
cmp
or
push
adc
pushf
push
sub
xchg
test
ficoml
nop
or
lods
rcrl
int
movsb
adc
mov
dec
or
popa
adc
dec
sbb
cmp
cmp
dec
test
xor
mulb
jae
or
movsb
or
mov
mov
or
loop
or
add
test
mov
stos
or
jae
cmp
scas
movsbl
imul
sub
insl
lret
jnp
adc
in
in
mov
push
push
mov
pop
adc
sub
aaa
adc
sub
or
or
ds
sbb
int3
mov
test
xlat
mov
out
lret
sub
daa
bound
jo
stos
mov
icebp
ljmp
sub
adc
push
xor
les
int3
addr16
inc
sub
mov
in
push
jge
cwtl
sbb
fwait
call
outsl
fs
xchg
mov
push
jg
xchg
xor
mov
sbb
in
imul
xchg
sbb
adc
lahf
mov
outsb
rclb
adc
mov
sub
test
dec
jb
cmpb
shll
sub
adc
fcomps
mov
jmp
cmp
fs
sub
mov
mov
or
popa
cmp
push
and
push
in
adc
in
xor
or
ja
mov
insl
divb
jae
int3
xchg
adc
das
data16
sbb
fs
out
sbb
pop
adc
and
or
adc
dec
imul
xchg
dec
daa
push
lcall
lods
or
mov
mov
ficomps
ja
mov
icebp
mov
push
rorb
dec
test
ret
sbb
pop
xor
clc
les
and
aam
in
inc
or
loop
jne
test
mov
out
xchg
test
ljmp
pop
in
popf
cs
jb
fiaddl
sub
dec
clc
daa
jmp
daa
ret
call
fdivl
adc
sahf
out
fwait
orl
enter
pop
mov
adc
and
sysenter
adc
les
push
xchg
push
and
sub
mov
in
dec
adc
nop
sbb
int3
sub
data16
sbb
stos
or
in
adc
push
or
aad
dec
outsb
dec
je
sub
gs
cltd
or
jg
sbbl
outsl
mov
addr16
fwait
xchg
dec
sbb
cmp
mov
sub
lret
ficompl
data16
ficoms
gs
jo
push
push
adc
jbe
adc
sti
or
jns
xchg
test
dec
sub
jb
or
insb
push
pusha
int3
sbb
dec
sbb
shrl
cld
push
jns
dec
test
add
dec
xchg
mov
xor
jnp
or
in
push
or
adc
in
inc
sbb
or
mov
pushf
dec
aam
lcall
push
in
xchg
or
dec
xchg
adc
hlt
dec
adc
jnp
inc
push
aam
sbb
leave
mov
sub
xor
mov
or
sub
aad
insl
push
cmp
rcrb
jl
lods
loop
inc
or
adc
pop
jbe
imul
popf
jno
and
shrb
outsl
lods
push
push
ja
push
test
push
pop
jne
pop
loop
jno
mov
aam
push
jne
daa
adc
cmp
mov
push
imul
sbb
test
pop
push
xchg
jo
xchg
jle
xchg
nop
insl
adc
sub
jne
sub
mov
xchg
sub
mov
imul
or
jno
xchg
inc
cld
or
repnz
push
test
lcall
fsubs
int
jae
add
dec
mov
fs
gs
mov
jae
pop
pushf
adc
push
push
aas
and
and
sbb
or
adc
jl
dec
insl
int3
adc
jns
inc
dec
clc
jne
add
hlt
leave
adc
dec
sbb
scas
fdivr
dec
insb
jns
pop
push
movsb
xchg
xchg
sbb
adc
or
mov
mov
or
ss
adc
xchg
ficoms
jno
testl
mov
adc
lods
adc
pushf
fists
jmp
or
mov
sarb
adc
xor
inc
outsb
movsb
jl
dec
idiv
mov
dec
or
push
cwtl
int
cmp
nop
or
sbb
pop
jle
nop
lods
sbb
or
pop
sub
and
xchg
push
or
or
ja
outsl
adc
jb
jmp
loop
jbe
and
shrb
cmc
popa
push
bound
lock
nop
mov
imul
mov
adc
dec
leave
mov
call
sub
js
mov
xor
adc
sbb
push
or
push
jae
outsb
xor
inc
inc
or
fbld
ret
mov
mov
mov
sbb
or
rolb
fs
mov
or
movsl
mov
push
dec
adc
cmp
cltd
lcall
cli
fdivrl
dec
adc
xchg
icebp
dec
and
or
sbb
dec
addr16
jb
mov
lea
imul
icebp
sub
rorl
test
mov
and
les
adc
jb
imul
jle
insl
mov
jbe
push
test
or
stos
or
imul
jne
dec
jo
lods
pop
or
xor
cmpsb
hlt
push
adc
dec
adc
mov
adc
cmp
pxor
jp
mov
adc
bound
imul
lcall
mov
and
icebp
pop
mov
xor
adc
push
pushf
mov
sub
stc
mov
jmp
or
lock
dec
sbb
icebp
jecxz
dec
jae
enter
jo
and
sbb
inc
lahf
das
int3
mov
mov
dec
push
sbb
sub
and
scas
mov
add
jne
and
push
mov
ficompl
pop
test
jge
cltd
sbb
scas
inc
or
and
jl
loopne
je
outsl
and
fwait
cmp
sub
push
mov
adc
lods
lcall
adc
fwait
aad
adc
insl
je
dec
sbb
nop
inc
or
lret
xor
stos
and
dec
sbb
loopne
adc
adc
and
mov
jl
push
mov
push
popa
adc
mov
in
adc
popf
push
pop
adc
and
sbb
dec
mulps
cmpsb
sub
loopne
lret
and
cmp
push
sub
cmpsb
adc
lods
inc
sahf
adc
lods
adc
hlt
jns
lods
test
stos
leave
loopne
adc
mov
add
sbb
xchg
and
push
bound
adc
or
add
cmpsl
dec
mov
sub
sub
jns
and
and
ror
adc
mov
pop
xchg
inc
or
adc
les
int
push
xchg
inc
or
push
adc
xor
ja
f2xm1
jp
popa
mov
push
insb
in
dec
push
lcall
mov
mov
adc
bound
adc
add
sub
lea
or
jp
sbb
push
stc
arpl
mov
xchg
insb
int
cmp
ficoml
push
int3
lock
pop
inc
or
mov
push
fldpi
push
pop
stos
pop
fildll
pop
icebp
mov
or
dec
sbb
and
jo
ret
push
xchg
sub
sbb
jne
dec
sbb
adc
movsbl
and
sub
inc
outsb
fdivrs
jne
je
stos
cs
lcall
insb
dec
rcrb
dec
sbb
or
pop
lret
movsb
dec
adc
fistpll
push
push
js
arpl
pop
lock
adc
fs
adc
or
insb
popa
xchg
adc
xor
imul
xor
outsl
daa
push
mov
add
or
insb
adc
and
xorl
inc
adc
adc
pop
sub
push
xchg
push
xchg
in
jb
sbb
loop
imul
out
insl
adc
ficomps
outsl
lret
dec
mov
outsb
mov
jecxz
sub
dec
icebp
or
sub
fs
jb
addr16
adc
pop
popf
imul
inc
or
mov
xor
jp
incb
iret
or
mov
fildl
lds
jbe
and
arpl
jb
push
hlt
lea
push
daa
pop
popa
cmpsb
mov
es
adc
jecxz
fucomp
bound
dec
mov
push
movsb
icebp
js
jnp
adc
mov
mov
je
cmpsl
mov
cwtl
enter
inc
movsl
add
and
cmp
dec
fs
adc
add
inc
add
dec
add
push
and
cmpl
add
loopne
pop
adc
lahf
jle
rcrl
popf
cmp
insl
adc
mov
fstpl
das
pop
ja
sti
or
xchg
jnp
add
sub
adc
sub
cmp
pop
jbe
and
sbb
jmp
inc
adc
loope
je
mov
cmp
and
mov
out
adc
jne
mov
pop
push
lcall
lcall
aad
sub
ret
fiaddl
arpl
insl
mov
sub
mov
stos
xor
insl
xchg
fwait
cs
js
jmp
sbb
xchg
jge
or
dec
out
cmp
arpl
daa
pop
inc
out
xchg
xchg
jo
icebp
iret
mov
inc
test
xchg
lods
mov
and
aad
out
mov
lods
cmp
loopne
dec
pop
cmp
xchg
cmp
insl
cmp
inc
xor
es
ss
and
les
lret
cmp
stc
jae
in
movsb
push
xor
lcall
sub
cmp
inc
hlt
mov
scas
mov
xchg
stos
int3
lock
fisttps
std
lods
clc
shrb
test
call
scas
and
jbe
daa
jecxz
mov
inc
lods
push
jae
lods
jae
jo
mov
cmp
jno
push
adc
xchg
cmp
cmp
pop
out
inc
lahf
pop
push
and
dec
sub
scas
sahf
fcoml
inc
push
xchg
cmp
sub
jmp
push
add
push
pop
xor
mov
xorb
inc
loop
cmp
mov
sub
add
add
js
mov
or
or
aas
xor
mov
or
icebp
rolb
popf
or
dec
dec
js
inc
and
fcmovbe
pop
sbb
jmp
divb
shlb
adc
inc
jne
add
push
add
pop
cmp
rolb
ret
test
je
mov
repnz
sbb
adc
in
cltd
xchg
sub
pop
shrl
pop
ret
xor
ret
and
inc
je
pop
pop
pop
or
in
push
lahf
add
aam
repz
push
push
les
in
rorb
les
ret
addr16
and
dec
insl
in
adc
fnsave
aam
iret
cltd
and
loop
divb
cmpsb
cmp
call
adc
test
movsl
jb
cwtl
mov
push
push
lahf
shlb
jne
dec
jp
and
les
jae
inc
mov
sbb
sbb
imul
mov
mov
aas
lods
popa
rcrb
adc
adc
fmull
out
bnd
inc
sbb
push
pop
sti
lret
sub
insb
cmp
in
pop
sub
dec
inc
or
adc
inc
push
mov
dec
lods
push
sar
enter
mov
dec
inc
dec
cmp
das
aad
movsl
cmp
cld
jns
jns
jl
dec
push
push
ds
les
mov
mov
adc
lret
xor
push
xor
cs
pop
mov
mov
and
outsb
mov
sub
mov
notl
jnp
rolb
mov
xor
sub
int3
mov
negl
movsb
jge
push
push
jg
xchg
mov
sti
sahf
sbb
das
cmpsl
incb
pop
ja
jle
jo
lahf
repz
xchg
push
cmpsb
add
dec
push
clc
inc
mov
scas
aam
mov
sub
leave
dec
call
mov
mov
mov
mov
add
dec
dec
inc
scas
or
aas
inc
push
ja
int3
out
sbb
jp
enter
mov
mov
outsb
dec
sbb
nop
and
ret
rcrl
pushfw
call
jae
decl
add
push
clc
inc
pusha
fs
dec
in
fsubrl
aas
je
jne
or
and
add
aas
sbb
aad
dec
mov
xor
mov
sub
jecxz
pop
imulb
ret
adc
mov
inc
xor
add
nop
and
inc
xor
dec
inc
mov
push
xchg
cld
mov
or
adc
clc
add
or
stos
inc
sbb
or
jns
rcll
enter
and
add
jno
dec
add
add
cmp
rclb
xor
adc
pop
jo
fs
xchg
push
and
inc
dec
pop
mov
and
dec
and
sub
mov
sbb
adc
or
mov
adc
and
dec
and
sbb
clc
dec
enter
lock
loopne
sbb
dec
adc
enter
adc
and
dec
and
mov
mov
ret
decl
or
pop
or
mov
push
add
xor
movsb
inc
add
gs
pop
dec
inc
push
shlb
rclb
call
xchg
in
in
lret
adc
inc
xor
dec
scas
imul
sbb
inc
mov
mov
cld
push
or
mov
hlt
les
adc
add
add
enter
and
or
pop
and
dec
or
or
cltd
sbb
movaps
cmp
or
pop
sub
adc
adc
adc
sbb
sub
inc
in
xor
cltd
sbb
or
pusha
push
pop
jl
insb
sbb
jo
mov
lods
push
cmpsb
xor
mov
orl
and
xor
and
dec
sahf
adc
jb
movsb
cltd
jo
sbb
scas
mov
xlat
mov
pop
xor
or
sub
rolb
add
pop
shlb
fs
add
add
ret
nop
icebp
pusha
cmpb
cmpsb
sbb
cmpsb
fisttps
or
loopne
test
inc
jle
int3
test
sarl
fimull
lock
gs
xor
inc
in
inc
iret
mov
in
call
nop
push
mov
or
pop
xchg
shlb
push
xor
rcr
fisubs
loopne
sub
jle
xor
or
enter
xchg
cmp
mov
sbb
xchg
inc
xchg
enter
add
and
jo
pop
loopne
xchg
test
nop
fadds
pop
and
or
add
or
repz
fcoml
lods
icebp
cmp
iret
mov
int3
pop
pop
icebp
cmp
iret
and
mov
cld
dec
push
xor
repz
inc
js
push
xchg
adc
inc
inc
jp
mov
adc
and
dec
and
add
add
or
xor
cld
add
sbb
and
or
loop
sbb
push
nop
inc
push
jo
push
int3
or
cmp
xor
xor
or
mov
arpl
cmpb
and
mov
push
inc
test
xor
js
jl
sbb
push
dec
adc
or
sub
sbb
nop
adc
inc
nop
pop
orl
adc
sub
and
push
pop
fadd
or
dec
cmp
or
dec
loopne
mov
or
and
out
add
pop
xchg
inc
mov
pop
inc
or
in
test
dec
inc
add
pop
adc
push
mov
cmp
push
adc
and
lods
or
dec
fcompl
dec
sub
mov
or
mov
adc
xor
aaa
adc
dec
xchg
pop
and
pop
push
adc
mov
outsb
or
adc
lods
or
test
pop
aaa
hlt
push
adc
mov
mov
pop
push
das
fcoml
or
pusha
shlb
inc
inc
mov
sub
aaa
pop
dec
sub
pop
pop
pop
inc
aam
pop
sub
test
pop
mov
push
pop
mov
adc
jo
inc
mov
mov
inc
fmul
push
or
or
pop
mov
or
pushf
test
inc
sub
inc
add
sub
xor
sbb
mov
je
lea
adc
cmp
insb
mov
rclb
fcoml
sbb
pop
push
adc
add
js
rolb
or
filds
push
mov
aam
adc
adcl
inc
adc
pop
ret
cltd
sbb
dec
nop
les
adc
inc
adc
inc
adc
les
inc
jo
or
xor
pop
aam
iret
es
jl
dec
sub
xchg
mov
in
dec
push
js,pt
in
jo
push
or
call
fs
rcr
or
mov
fs
mov
test
push
sub
pop
jno
nop
int3
mov
push
nop
xchg
adc
xor
insb
cltd
adc
and
pop
push
xor
sub
pusha
xchg
adc
add
mov
pusha
adc
fcomps
or
or
inc
sub
xchg
push
movsb
sub
lds
push
or
inc
jo
pop
mov
push
push
dec
or
pusha
xor
cwtl
mov
cmp
pop
cld
test
pop
sbb
or
push
or
fmuls
sahf
inc
enter
mov
and
or
jp
insb
mov
iret
rcrb
in
lods
or
cmp
arpl
fsubs
pop
mov
call
and
fsubrl
mov
popa
fmull
je
add
push
icebp
movsb
cmp
pop
mov
js
fwait
call
clc
int
sahf
shl
sub
push
in
and
call
or
lock
decl
xor
or
inc
std
or
fcomip
mov
inc
or
mov
adc
xor
xchg
xor
dec
adc
cltd
xor
dec
adc
xor
cmp
aam
mov
rcll
repnz
adc
and
dec
dec
insb
sahf
push
adc
aam
cmpl
and
int3
inc
enter
adc
movsb
and
js
je
jo
insb
xchg
push
pop
mov
push
and
dec
dec
xchg
dec
and
xor
mov
xor
adc
or
adc
clc
pop
xor
or
and
dec
fcoms
mov
add
in
pop
shlb
add
jg
add
popa
add
add
or
enter
or
jns
pushf
or
push
ret
ud2
or
adc
xchg
and
mov
mov
adc
pop
rorl
and
sahf
mov
add
test
lds
std
and
dec
sbb
addl
add
add
loopne
mov
adcl
out
cmp
cmpsb
iret
or
jp
outsl
movb
mov
or
mov
mov
cmp
divl
jl
loopne
mov
add
popf
sti
jmp
stos
push
inc
add
repnz
add
pop
stos
cmp
scas
xchg
shr
aam
jne
add
dec
jp
iret
inc
gs
add
xchg
push
cmpsb
scas
mov
inc
or
addl
in
xchg
cmp
in
xchg
mov
andb
add
std
mov
fadds
and
stos
xchg
add
repz
mov
subb
leave
fwait
xchg
and
les
int3
add
add
sti
aas
jno
or
mov
lock
add
fisttps
xchg
outsb
adc
shrl
pop
mov
icebp
add
mov
inc
sbb
lods
pop
lds
mov
insb
scas
pop
add
shlb
mov
aad
mov
std
loop
add
adc
stos
in
das
dec
push
pop
loope
add
xchg
out
icebp
xchg
loopne
cmp
jne
int
lcall
add
inc
lods
push
mov
mov
loop
mov
mov
adcb
jle
pop
push
jl
mov
das
lea
push
mov
inc
mov
cmp
ljmp
lods
mov
inc
rolb
fstl
arpl
int3
and
push
ja
call
cmp
sbb
and
add
mov
cmp
add
xlat
cmp
mov
sbb
mov
jecxz
cmpsb
add
movb
jne
fldt
add
xor
shlb
shlb
dec
add
mov
movsl
addb
mov
loop
mov
adc
mov
add
xor
rcpps
pop
add
rolb
ret
call
out
pop
push
xchg
cmp
push
add
gs
std
lock
scas
push
xchg
jge
pop
add
lahf
into
ror
add
cmpsb
cmp
or
jmp
jmp
add
jmp
jmp
add
