mov
xlat
pushf
push
mov
mov
cmpsl
cmpsl
hlt
sbb
mov
shlb
jnp
out
scas
lock
cmp
ss
test
mov
negl
jmp
stos
push
mulb
xchg
aad
daa
insb
mov
mov
xchg
fistpll
into
mov
jbe
popa
jne
fs
add
and
bound
loopne
xlat
test
ja
adc
ret
in
or
sub
icebp
incl
mov
into
sahf
inc
cltd
mov
insl
fdivl
push
negl
inc
sub
push
xchg
lods
ljmp
adc
dec
cmp
mov
divl
xchg
out
les
mov
cmpsl
jno
push
movsb
cmpsl
cmc
addr16
mov
test
daa
sub
lea
sbb
not
test
ret
adc
test
movl
mov
inc
mov
es
mov
les
stos
rorb
fs
gs
ljmp
andb
push
rcll
insb
sbbb
pop
xchg
xchg
cmp
sbbb
gs
cwtl
xchg
cmp
adc
gs
out
xchg
and
adcb
mov
mov
cli
mov
xchg
xor
add
mov
popf
xor
gs
loop
adc
shlb
gs
xchg
adc
aas
lahf
gs
xchg
sbb
sarb
sbb
xchg
mov
lods
or
int
scas
xchg
sarl
cs
xlat
jno
sub
daa
inc
test
jno
mov
scas
mov
mov
ds
jbe
fisubs
cmp
add
test
xchg
mov
aaa
shll
das
dec
fcom
dec
xor
cld
leave
xchg
cli
xor
adc
or
cmp
jns
mov
or
cmpsb
roll
roll
xchg
mov
enter
dec
sub
test
cs
mov
and
and
aaa
mov
scas
xcrypt-cfb
cmpsl
and
dec
jmp
mov
jb
mov
pusha
pop
test
mov
lahf
rcl
data16
outsl
sub
add
dec
fisttpl
mov
ja
stc
fsubl
les
leave
pop
lahf
decl
ljmp
xchg
add
and
nop
rcll
sub
pop
and
jae
inc
jmp
in
ds
cmc
jge
xchg
repnz
repz
or
arpl
leave
lds
xor
int3
in
cld
stos
les
mov
in
push
add
mov
test
mov
into
mov
xchg
int
mov
xchg
xchg
mov
or
cmp
xchg
scas
divl
mov
aad
cli
inc
std
std
fcoms
mov
or
or
das
mov
pop
jb
dec
pop
mov
add
sub
inc
inc
sub
cltd
cmp
adcb
out
push
mov
jge
or
loopne
stos
xchg
test
cmpsb
mov
add
and
dec
scas
mov
sahf
inc
dec
jmp
loope
mov
loop
jae
xor
or
repnz
mov
mov
test
jno
mov
mov
fsubrs
and
pop
xchg
pop
sbbl
mov
repnz
and
cmp
lods
and
outsb
inc
aaa
lods
add
sub
sub
insb
inc
cmp
dec
dec
add
xor
test
jle
lcall
mov
adc
mov
sub
sub
sbb
mov
xchg
mov
mov
sub
or
or
stc
mov
push
xchg
mov
sbb
test
mull
xor
imul
lods
sub
ret
and
aam
and
push
xchg
sub
clc
imul
xchg
fnstcw
arpl
jo
int
imul
sub
push
lds
adc
cmp
push
dec
mov
fs
or
mov
mov
dec
shrb
out
and
sub
inc
lock
je
cmp
lods
cs
test
mov
lods
outsl
cmp
add
insl
lret
jnp
repz
fisttps
test
xor
push
mov
mov
add
cs
mov
shl
or
sar
add
sub
loop
fildll
loop
pop
adcl
jbe
ret
jno
push
in
aad
out
loopne
inc
lss
ret
push
repnz
xchg
cltd
imul
mov
cmp
mov
xchg
das
push
add
stc
adc
pusha
add
stc
loopne
mov
mov
cwtl
lahf
daa
bound
mov
cmp
cmp
scas
inc
in
mov
pop
ds
cmp
es
jmp
testl
ljmp
lea
in
xchg
repz
das
inc
test
jmp
cmp
mov
aas
mov
adc
sub
cmc
popa
pop
outsl
out
ret
jge
sub
jecxz
jle
in
repnz
sahf
hlt
inc
sub
jg
out
cmc
mov
sub
xchg
pop
sbb
or
emms
pop
mov
fwait
dec
das
sub
jo
fimuls
dec
jp
mov
mov
cmpb
sti
adc
andl
xor
xchg
fcoms
popf
push
xchg
popa
push
mov
xchg
shll
push
sub
notl
loope
sti
mov
sbb
pop
cmp
ret
adc
imul
jecxz
adc
adc
push
dec
stos
sub
mov
sub
add
push
cmpsb
hlt
adc
xor
pop
sbb
inc
push
mov
mov
sbb
mov
jne
mov
xchg
adc
daa
inc
push
sarb
cmp
fmuls
mov
mov
sbb
scas
mov
adc
and
xorl
mov
dec
cmpsl
or
shlb
or
pop
pushf
sbbl
mov
es
gs
jle
clc
mov
popf
loope
test
ret
test
mov
out
adc
xor
insl
mov
cmpsl
cmp
stc
andb
or
push
jge
lods
hlt
stos
std
out
out
xor
or
lods
fstps
rolb
mov
xlat
fstl
fdivs
add
mov
inc
mov
das
leave
cwtl
jmp
int
mov
fildll
mov
push
andb
or
fdivl
inc
and
xchg
dec
adc
jmp
dec
cwtl
jo
adc
xchg
aam
addl
mov
jae
mov
mov
lea
in
fstpt
and
shlb
jg,pn
in
rcrb
jb
je
dec
in
repz
sbb
js
cbtw
lcall
mov
jg
cmpl
enter
call
repz
movb
out
dec
out
mov
incb
xchg
xchg
sub
pop
mov
pop
pushf
push
call
push
sub
cmpsb
test
cmp
testb
outsb
test
lods
xchg
mov
rorb
cmpsb
andl
mov
inc
aam
jp
out
in
inc
and
js
dec
in
cltd
testb
jns
fstl
ss
lcall
movsl
pop
sub
cmpl
pop
fnstenv
insb
mov
subl
fnstenv
popa
push
add
cmpsb
or
mov
test
loop
insl
xchg
dec
sub
sub
popw
test
in
or
mov
das
cs
mov
movsb
xchg
adc
int3
clc
out
out
and
mov
pop
sbb
adc
stos
sbbl
add
mov
push
lods
pop
or
jl
mov
sub
ja
cmc
movsl
loopne
mov
or
sbb
loopne
jno
sub
xchg
lret
popa
sub
mov
or
lcall
sub
fcompl
or
test
mov
dec
mov
dec
and
movsl
add
push
addr16
icebp
out
jle
fs
mov
xchg
xchg
fdivr
jge
xchg
and
mov
shll
mov
es
leave
mov
inc
jo
mov
jbe
mov
imul
nop
sbb
icebp
mov
subl
sub
lods
add
xchg
dec
push
xor
sub
lea
push
push
loope
xor
ret
test
popf
xchg
mov
xchg
pop
mov
and
stc
push
lcall
lahf
cmp
out
add
push
stos
mov
xor
xor
sbb
shll
cmp
sub
xchg
int3
pusha
mov
ret
pop
pushf
into
and
cmp
out
and
loopne
and
into
out
orl
fidivl
loop
mov
js
cwtl
push
lret
xor
mov
mov
loope
sub
sub
in
hlt
cwtl
mov
mov
dec
dec
imul
or
lcall
mov
mov
push
push
sbb
or
pop
xchg
and
sub
jmp
rolb
loopne
nop
adcl
test
adc
mov
adc
xchg
lret
into
cld
jns
jge
mov
mov
push
pop
subb
pop
jns
xchg
sub
or
or
test
daa
mov
dec
xor
fs
mov
push
and
hlt
cmpsb
bound
cltd
pop
test
adc
inc
sub
mov
out
mov
outsl
cli
movsb
or
mov
test
mov
or
or
xor
add
xchg
stc
inc
test
in
jno
dec
mov
call
sbb
adc
mov
mov
xchg
pushw
inc
xchg
fneni(8087
and
add
push
pop
loop
movsl
fsubrs
outsl
fildll
lret
pop
int3
xchg
jle
mov
mov
push
test
out
lea
into
sub
enter
and
and
lcall
mov
ljmp
outsl
cmpsb
lahf
and
out
mov
insb
cmpsb
dec
pop
arpl
cli
and
inc
mov
nop
orb
jmp
pushf
test
jecxz
cld
push
jp
lock
inc
mov
test
lods
xchg
and
call
testw
push
jl
mov
fprem1
lret
stos
dec
sbbl
push
repnz
mov
jne
pop
sub
mov
inc
sti
rcll
lea
push
jle
and
cltd
lea
sarl
mov
and
aam
push
dec
add
inc
stos
hlt
or
inc
and
mov
adc
imul
xchg
sbb
pushf
and
icebp
or
ret
mov
jnp
adc
mov
stos
into
js
in
xchg
repnz
xchg
loope
adc
das
cmpsl
mov
leave
imul
mov
cmp
mov
or
fmul
in
test
jg
out
mov
jnp
out
inc
push
les
fisubrl
insl
pop
mov
pusha
testl
mov
dec
jge
push
inc
popf
rorl
mov
pop
cmp
and
lret
dec
mov
inc
xor
aad
jle
nop
les
aam
and
sbbl
inc
add
sahf
push
jle
or
sub
dec
es
adc
lcall
sbb
push
sub
imul
dec
andb
and
rorl
push
mov
xchg
shl
xchg
mov
in
lock
mov
sahf
into
cmp
leave
sbb
add
or
inc
sub
fmuls
test
lods
and
cli
xor
and
flds
cli
push
nop
test
into
popl
push
sub
jo,pt
inc
or
mov
mov
mov
js
mov
imulb
movsl
aas
pop
inc
jge
xchg
xor
and
inc
jns
out
push
and
dec
movsbl
and
jo
jb
inc
hlt
rcl
dec
mov
ljmp
xchg
mov
pop
repz
cmc
mov
inc
in
incl
std
or
inc
fisttpl
sub
pop
xchg
pop
lret
loopne
sbb
int
fcoml
out
aad
mov
or
notl
mov
scas
lret
push
mov
int
rolb
stc
roll
cltd
and
mov
lods
mov
pop
dec
inc
sbb
and
xchg
test
stos
leave
add
and
push
mov
xchg
ret
xorb
inc
mov
cmpsl
ss
test
pop
push
xchg
push
sub
cmpsl
cmp
iret
ror
sub
mov
xchg
ficompl
sbb
adcb
repz
hlt
sti
sahf
or
out
push
dec
sarb
insb
cmpsl
mov
shrb
xchg
in
loopne
pop
data16
sub
or
mov
cltd
or
xor
test
push
orb
push
jns
fdivr
and
lret
jge
out
jae
das
addl
cmc
jecxz
into
jp
in
mov
pusha
add
shlb
push
fiadds
jle
push
roll
rorl
mov
call
stos
jl
imul
lahf
in
xor
or
adc
loope
in
add
and
arpl
loope
sbb
or
lods
xchg
call
xchg
and
arpl
adc
xchg
push
xchg
mov
adc
cmp
push
push
das
sub
fbld
sti
mov
mov
call
nop
test
loope
test
fsubr
stos
cmpsl
lret
rorw
mov
bound
lods
xchg
cmp
sub
sub
add
xor
push
xor
subb
cmpl
adc
nop
lret
jo
pop
xor
popa
sub
xor
sub
ljmp
inc
les
mov
push
lock
call
aad
xchg
mov
ss
cld
cmp
push
in
enter
leave
lods
imulb
dec
movsl
mov
das
mov
lods
sub
sub
enter
dec
mov
cmp
lods
jl
and
mov
test
dec
icebp
leave
popa
jle
testl
loopne
nop
mov
lods
lods
sahf
xchg
xchg
xchg
rcll
fs
xchg
sbb
mov
mov
jp
lock
push
into
and
sub
fsubs
mov
bound
and
or
imul
adc
js
std
stos
push
aaa
cmc
add
movb
loopne
xchg
sahf
sarb
adc
and
enter
js
insl
xor
and
xchg
mov
shrb
sbb
dec
fmuls
es
and
mov
push
xchg
xor
inc
lods
scas
xchg
pop
mov
testl
enter
call
jb
and
orl
loop
inc
adc
xchg
and
lret
mov
and
mov
mov
inc
fwait
inc
popl
cs
xor
and
cmp
mov
leave
jne
rolb
sahf
mov
out
bound
fdivs
js
shlb
jle
and
mov
scas
xorb
loope
sbb
adc
or
dec
inc
cltd
stos
ret
or
test
mov
test
lret
push
pop
sahf
bound
jecxz
jle
mov
icebp
bound
hlt
xchg
loopne
xchg
sub
ret
add
xchg
sub
les
xor
sub
pushf
pushf
addl
jno
leave
xchg
bound
or
jmp
stc
mov
popa
xchg
lds
mov
sub
adc
dec
xchg
fdivrl
outsl
push
in
lods
inc
or
xchg
adc
ds
adc
jae
imul
pop
shll
stc
inc
scas
cmc
adc
popa
and
arpl
or
loope
rclb
mov
lret
stc
and
loop
push
pusha
divl
xchg
adc
fnstsw
arpl
int
lock
bound
cli
jae
sbb
test
cmp
cmp
sbb
cmpw
inc
ret
lret
adc
test
add
inc
xor
pop
jp
sub
mov
inc
dec
gs
in
out
lock
push
and
int
out
pop
imul
outsl
aam
lock
adcl
xor
sbb
or
enter
in
mov
mov
jae
es
insb
int
out
mov
lods
xrelease
fildl
or
loope
mov
arpl
cli
push
mov
sub
outsl
enter
and
add
xor
xchg
lea
sbb
cmp
and
push
mov
out
xchg
sbb
xchg
sub
xchg
sub
scas
sub
xchg
jb
push
mov
stos
gs
fldenv
popf
jne
inc
push
jp
sub
adc
in
push
and
in
aas
mov
xchg
or
out
shrb
repz
xor
subb
cmc
fisubrl
xor
ds
data16
mov
sbb
and
jge
mov
out
nop
test
jbe
icebp
xchg
shrl
test
sbb
fwait
adc
jmp
test
mov
repnz
xchg
sahf
cwtl
and
and
lods
mov
push
or
dec
mov
inc
mov
ja
in
cld
icebp
mov
jbe
enter
out
mov
push
jo
adc
jle,pt
jb
and
push
stc
mov
add
repz
arpl
sarl
pop
inc
icebp
or
mov
or
cltd
inc
or
popf
ds
out
inc
shl
stc
aad
insb
xchg
jne
rolb
jg
push
das
push
test
repz
ss
add
cmc
add
loop
sub
pop
push
fisubl
inc
or
jo
test
push
mov
out
nop
cltd
xchg
mov
call
loopne
dec
inc
pop
jmp
and
cmp
out
jg
inc
mov
jbe
fwait
mov
jmp
sbbl
cs
xchg
and
repnz
notb
cmp
inc
inc
faddl
mov
adc
mov
xor
fwait
das
nop
add
push
cmpl
cwtl
and
test
mov
mov
inc
lret
out
clc
roll
clc
mov
pusha
jmp
mov
lods
or
ja
cmp
lea
or
sbb
loope
add
rcl
aas
mov
add
ret
stc
mov
pop
nop
outsl
orl
insb
push
pop
mov
jb
add
out
rorb
stc
adc
in
add
pop
xchg
mov
jno
or
fmuls
lret
mov
sbb
jp
mov
add
lahf
xchg
stos
scas
xchg
roll
add
sbb
jo
mov
test
add
cmc
arpl
jno
cld
mov
rolb
mov
cmp
pop
popf
mov
repz
leave
or
and
xchg
jp
push
push
pcmpgtw
repz
idivb
andl
cmc
push
outsb
test
addr16
in
loop
rcr
popa
adc
push
sub
sub
and
faddl
mov
inc
pop
std
xchg
movb
test
cmp
add
popa
scas
test
push
xor
cmp
popa
push
repz
xchg
ljmp
and
jb
out
ljmp
push
xchg
mov
or
push
repz
mov
fcoml
xchg
andb
pushf
rcr
hlt
jne
mov
and
in
aaa
add
nop
push
fld
push
inc
adc
stos
mov
jo
cmp
cmc
and
pop
jns
jge
push
sub
lret
cmp
out
sbb
fldcw
es
daa
or
ds
cvtpi2ps
repnz
push
ret
in
pusha
or
je
adc
push
in
jge
test
gs
shl
iret
sbb
popa
outsb
lea
repnz
mov
subl
rol
clc
cltd
movsb
fidivl
sub
pushf
dec
mov
dec
shrb
xor
sub
xchg
mov
cli
shlb
or
or
jno
dec
clc
push
xchg
or
jo
mov
test
pop
or
es
mov
movd
jl
xor
int3
push
out
fwait
xchg
dec
push
negb
loop
inc
push
adc
stos
and
fcomps
sbb
inc
lock
jp
and
push
ljmp
cs
addb
mov
jae
insb
xor
jp
insl
push
icebp
inc
jb
int
fstl
push
imul
out
or
mov
imul
cli
or
popf
test
inc
jnp
xchg
add
ss
imul
sub
push
je
rcrb
xchg
mov
pop
xor
xchg
ror
or
sub
mov
jmp
cld
out
fs
mov
inc
subb
mov
jne
out
add
and
push
lahf
mov
arpl
stc
icebp
add
std
in
jmp
or
outsl
sbb
dec
arpl
shrb
lcall
lret
lock
inc
out
les
fcmovnb
lods
jl
sub
xchg
mov
scas
jp
sub
xchg
add
and
lret
ja
das
in
mov
loop
bound
sub
add
dec
popl
js
cwtl
inc
cmpsb
hlt
subl
test
daa
mov
inc
mov
loop
push
xchg
test
mov
cwtl
call
notb
not
xchg
push
inc
out
pop
inc
and
jne
lret
out
lret
loopne
lcall
inc
fidivl
mov
inc
dec
daa
adc
ss
inc
outsb
xor
cli
sub
add
movsb
nop
and
cltd
jle
imulb
repz
out
les
iret
xchg
cmp
push
popf
fwait
loopne
xor
sub
int3
movsb
stos
ds
aaa
outsl
and
jecxz
jns
stos
or
add
icebp
sarl
and
dec
mov
and
arpl
lret
lock
and
sub
sub
test
sub
jg
imulb
xchg
test
fdivs
test
sub
xchg
js
and
push
fdivrs
pop
lods
pop
jbe
lret
push
dec
sbb
test
out
cmp
ret
mov
cmpsb
lret
call
adc
mov
repz
into
in
and
lods
lods
or
cltd
mov
ficompl
popa
push
jo
mov
sbb
mov
fsubrl
lods
xor
movsb
xchg
loopne
mov
sub
test
outsb
std
or
mov
lret
ret
mov
imul
int3
fmuls
jae
fcoms
sahf
jp
push
xor
mov
or
mov
inc
loope
enter
xor
xchg
insl
cli
xchg
pmaddwd
es
dec
or
inc
adc
cmp
in
and
shll
mov
int
xchg
push
mov
jo
xchg
lahf
pushf
repnz
mov
xchg
mov
popf
xlat
mov
popf
xchg
sub
dec
nop
sub
mov
sub
das
shl
sahf
movsb
jle
lret
mov
fisubrs
js
lods
das
sbb
push
lahf
rcl
push
movsl
or
or
mov
imul
dec
pop
sbbb
fwait
rclb
mov
inc
sub
push
xor
test
or
xchg
lcall
mov
lods
jbe
sbb
jnp
dec
jle
adc
add
cltd
sub
and
and
or
push
sub
imul
push
int3
int3
fistpl
sbb
mov
adc
repnz
nop
js
out
lret
xor
push
adc
mov
sbb
sub
lock
cltd
xchg
and
gs
stos
insl
dec
icebp
test
fistl
inc
arpl
andl
or
adc
cmc
pushf
je
mov
cs
inc
jno
addr16
dec
in
popf
in
out
jae
jecxz
mov
jmp
fildl
stc
rcrl
sub
xor
and
xor
rcrb
mov
cltd
xchg
pop
jge
inc
mov
stc
ret
lock
jbe
jmp
dec
lcall
mov
xchg
mov
jb
adc
mov
and
ret
pop
xchg
mov
mov
cwtl
dec
scas
test
cld
and
mov
or
dec
leave
adc
test
int3
adc
mov
in
aad
sub
push
sbb
jae
pop
sbb
mov
aad
loopne
jl
mov
jns
aam
add
mov
loopne
stc
cli
adcb
or
ret
iret
aad
add
cmp
lcall
lret
in
movaps
jae
dec
ss
mov
lret
jge
sub
aaa
jp
lods
jo
jmp
lock
mov
adc
es
xchg
test
mov
dec
push
jb
test
call
cmpl
sbbb
stos
fbld
pop
and
into
in
mov
lret
mov
stc
add
imul
xor
xchg
stos
xor
mov
popa
xchg
jp
inc
addr16
popf
pop
loop
cmp
xchg
mov
jno
into
mov
or
mov
or
fcoml
ds
notl
pop
movsb
pusha
cmpsb
jle
jbe
sbb
imul
das
pop
scas
mov
sub
mov
lea
mov
insb
lods
or
mov
mov
and
or
push
incl
cmpsl
inc
cmp
sahf
arpl
sbb
bound
cmp
decb
and
mov
nop
xor
int3
bound
mov
movsb
sarb
lods
mov
lods
inc
sub
movsb
sbb
push
and
fcoml
mov
stc
xchg
cmp
mov
mov
adcb
loopne
push
jecxz
jnp
subb
jnp
inc
subl
sub
mov
stos
call
je
test
cmp
pop
xchg
fmuls
jb
leave
jecxz
rcrb
shrl
push
xlat
mov
add
shlb
int
adc
ret
sub
loopne
addl
dec
js
jecxz
mov
rcll
or
mov
or
jecxz
stos
in
test
mov
aam
jg
and
nop
jb
jne
sub
pop
sub
pop
xlat
sub
jmp
cli
je
mov
notb
js
imul
pushl
jg
push
iret
cmp
test
xchg
frstor
andb
lret
and
loope
and
addb
cmc
jge
test
je
cmp
dec
cmp
sbb
test
inc
bound
jb
sub
in
inc
shrb
cli
sbb
mov
insb
mov
out
repz
fsubrs
push
push
or
stos
cmpsl
rorl
adc
or
push
lods
pop
or
xchg
or
es
push
imul
movsl
fisubrs
outsb
push
es
or
test
sbb
cmc
push
inc
aad
ja
or
inc
andb
aam
or
inc
fcmovu
sub
pop
loopne
sti
jmp
or
lcall
mov
nop
popa
dec
push
push
fs
xchg
jmp
and
fnstsw
inc
sub
leave
rcrb
push
push
sub
outsb
dec
cmp
or
mov
daa
ja
je
and
jle
negl
and
and
cld
jne
mov
popf
xchg
push
cld
sbb
cmpsb
xor
lods
dec
ror
jo
inc
out
jno
sub
and
dec
xchg
jge
mov
dec
fdivs
int3
std
insb
jnp
jnp
insb
loopne
xor
jae
mov
push
scas
xchg
lods
in
imul
in
stos
pop
dec
imul
repz
bound
in
fsin
into
out
xor
cli
or
and
dec
out
jecxz
repnz
out
cmp
cmc
faddl
int
loopne
cmp
push
jo
rcrb
push
jp
cltd
and
inc
mov
std
dec
popf
out
jmp
imul
loopne
fistpl
or
arpl
or
pop
andb
movsb
repnz
and
sub
icebp
addr16
dec
ret
aam
insl
sbb
aad
push
repz
mov
inc
lahf
mov
sahf
cmc
repz
cmp
test
adc
push
shr
loopne
int
and
fdivp
scas
icebp
popa
push
notb
cmp
popa
daa
es
cmpl
mov
push
push
lcall
pop
rcrb
or
cmp
cli
mov
lcall
fistpl
mulb
sub
xchg
adc
cwtl
flds
mov
out
or
cmc
push
data16
xchg
call
dec
cs
cmpl
out
es
ret
andb
mov
mov
dec
mov
imul
bound
xor
jno
and
inc
data16
dec
clc
std
inc
in
sbb
dec
ljmp
adcb
in
sbb
sub
cltd
inc
loopne
cmpb
jle
push
out
fldt
je
popf
and
xchg
mov
fidivs
sub
lds
xchg
mov
pop
cmpsl
loopne
arpl
test
mov
sahf
div
mov
mov
rcrb
mov
nop
xchg
test
sbbb
inc
or
rcl
cmc
pop
lret
mov
mov
mov
lret
jne
negl
arpl
dec
loopne
test
dec
cmc
rorb
xchg
inc
pusha
adc
cmc
push
mov
push
xchg
out
inc
mov
xchg
or
add
ffree
xchg
in
dec
call
jb
push
cmp
mov
mov
imul
or
mov
pop
pop
repnz
cltd
xor
mov
nop
sbb
fcmove
xchg
xor
iret
orb
xchg
cmp
in
inc
or
idiv
and
push
push
and
nop
imul
dec
dec
add
hlt
jp
and
rolb
ss
shll
jmp
addr16
sub
inc
in
push
loopne
in
int
mov
test
jnp
enter
lea
and
repnz
lea
inc
dec
lock
cmp
and
lods
add
test
dec
rorb
loop
popf
push
jp
inc
push
testb
dec
mov
jbe
or
mov
bnd
cmp
mov
cmp
jge
movsl
mov
dec
orb
aas
mul
cmc
into
push
sbb
cmp
jb
icebp
xor
scas
adc
insl
mov
scas
test
fnsave
jb
repnz
loopne
pusha
jno
insl
xchg
or
es
rclb
ror
sti
cltd
or
push
cmc
xchg
rcl
mov
stos
loop
repnz
dec
std
sar
jne
inc
icebp
pop
sub
shr
movsl
aam
sarl
shrb
flds
inc
xchg
xchg
aam
in
out
shlb
roll
scas
or
outsb
sub
enter
addl
xor
imull
inc
test
mov
inc
lods
push
and
shll
cmc
adc
add
add
xchg
rcll
or
fidivrl
clc
mov
dec
mov
pop
dec
in
out
in
call
aam
add
or
out
jmp
flds
ret
jne
mov
push
dec
arpl
negb
jo
clc
xor
pushl
xchg
jo
push
jne
dec
hlt
pop
dec
shlb
push
mov
mov
adcb
adc
scas
adcb
mov
xchg
adc
and
jl
cmp
shll
and
das
add
mov
or
iret
loop
mov
sub
sbb
addb
mov
mov
std
mov
das
loope
in
mov
int
test
data16
into
faddl
sbbb
dec
adc
loope
les
mov
and
repnz
imul
xor
add
or
decl
test
pop
int3
bound
fisttpl
repz
int3
or
sbb
std
jne
dec
insb
jge
add
movb
dec
push
in
adc
adc
xchg
stc
or
mov
shrl
jae
mov
lea
scas
xor
lahf
xor
dec
xchg
stos
repnz
ds
in
iret
xor
fidivrs
loopne
scas
popf
mov
lret
call
nop
cmp
leave
push
push
push
into
add
push
xchg
jle
pxor
cli
ds
push
pushf
push
xchg
mov
jns
cmp
xchg
mov
push
inc
cmpl
out
or
inc
add
mov
clc
in
xchg
or
test
xchg
jmp
cmp
cmc
cli
shll
jae
adcl
mov
jmp
inc
and
dec
mov
xchg
xchg
jmp
popa
fildl
mov
mov
fdivp
sbb
or
ds
sub
scas
insl
bound
mov
mov
ljmp
adc
cld
jge
dec
aaa
mov
and
lea
and
in
mov
adc
push
sbb
cmpsl
sbb
insl
imul
push
mov
or
imulb
ljmp
inc
rorl
shll
repz
xchg
shlb
fcomp
fsubs
cmp
lret
inc
pop
es
in
and
les
dec
insl
or
fldt
xor
popa
in
in
stos
cmpsl
cmp
inc
scas
sbb
sbb
gs
daa
pop
dec
xchg
push
cli
pop
cmp
jmp
sub
cmc
push
sub
ljmp
sub
in
sbb
cmp
xchg
rcl
fisttps
repnz
or
cmovp
inc
push
rcl
xchg
es
push
push
and
sub
or
inc
and
add
shlb
dec
faddl
outsb
rol
dec
loop
jge
mov
cmpb
mov
inc
out
mov
adc
push
fldl
and
shr
dec
push
jecxz
push
testl
push
sbb
outsb
and
data16
aas
notl
mov
sbb
adc
dec
flds
ljmp
and
into
test
xchg
stos
out
mov
sub
out
faddl
das
mov
xchg
inc
rclb
das
or
in
lock
xor
mov
jae
scas
xor
mov
mov
add
popf
icebp
sbb
gs
mov
mov
mov
xor
cmpb
decl
xchg
les
or
mov
fwait
and
arpl
data16
add
scas
repz
imul
xchg
lret
cmpl
sahf
push
xor
adc
and
cmp
sbb
jne
stos
sarb
loopne
dec
xchg
inc
cmp
sbb
int3
rolb
lea
mov
dec
mov
mov
mov
mov
test
push
jmp
nop
gs
pop
bound
lret
and
xchg
scas
xchg
in
xor
and
ror
sti
stc
or
cmpsb
xchg
icebp
lea
scas
repz
xchg
mov
and
out
pop
imul
and
sti
fisttpll
subb
sbb
testb
cmp
or
loopne
push
popf
or
pop
scas
rcrl
mov
push
rorl
mov
aaa
jb
push
inc
inc
shl
loopne
xchg
int
jecxz
push
jb
pusha
mov
clc
lret
jmp
arpl
fsubrp
jnp
stos
jg
xor
xor
sub
mov
or
jg
push
xchg
cmp
stc
push
mov
clc
stc
leave
loope
adc
inc
add
mov
cmpsb
bound
fwait
mov
test
mov
adc
xor
out
sbb
jo
in
xchg
lret
mov
ja
jg
dec
addr16
dec
dec
imul
test
xchg
aam
ljmp
lea
ds
pop
jne
adc
or
push
mov
jecxz
xor
mov
into
sub
icebp
bound
and
lret
cwtl
popl
and
sbb
cmpsb
cmpl
stos
ss
inc
xchg
outsl
ror
mov
sub
mov
push
aas
test
repnz
push
out
lcall
jmp
fucomp
mov
fxch
sub
divl
cmp
xchg
loop
arpl
and
imul
in
scas
dec
jno
mov
pusha
jo
dec
lea
shlb
lock
bound
lret
xchg
pop
and
xchg
clc
orl
movsb
repz
xchg
ret
mov
add
hlt
mov
jne
out
out
pop
and
and
jno
lock
xchg
or
mov
out
xchg
add
lcall
or
rorb
jmp
nop
insl
xchg
jg
movsb
stos
and
xchg
mov
or
loopne
nop
mov
xchg
lock
das
or
sub
lds
nop
sub
icebp
xchg
mov
out
or
fwait
in
cld
xchg
es
dec
je
inc
subl
cmc
push
dec
loopne
nop
mov
mov
push
shr
adc
pushf
add
fstl
mov
lcall
gs
pop
sbb
stos
sub
icebp
cld
cmp
shlb
fs
dec
daa
xor
arpl
sar
jno
jge
or
pop
dec
test
es
cltd
pop
nop
or
mov
mov
sbb
insl
cwtl
jecxz
lea
addl
js
push
sbb
lods
out
jnp
xchg
dec
xor
dec
push
lahf
jns
fwait
popa
jno
add
push
sarl
hlt
in
and
xor
stos
xlat
pop
loopne
movsl
sbb
ss
bound
pusha
mov
mov
xor
mov
repz
imul
inc
sbb
fnsave
and
sbb
jae
push
pusha
in
xor
sbb
gs
loopne
or
jle
and
mov
sbbb
repz
insl
sub
shl
cs
jbe
jg
mov
sub
jge
and
xchg
cli
or
sub
xchg
sub
test
nop
pop
mov
dec
int3
push
mov
or
xor
call
imul
mov
aad
pusha
fnstenv
bswap
xor
shr
mov
es
adc
pop
lea
sbb
dec
mov
cwtl
lds
mov
adc
adc
inc
jnp
pop
adc
xchg
and
pop
or
xor
dec
lret
dec
sub
mov
mov
adc
and
rorl
jo
or
cli
mov
mov
inc
mov
pop
pop
ljmp
mov
lret
int
cmp
stos
and
push
test
adc
arpl
sbb
pop
or
aas
jno
mov
xor
cmp
repz
sub
mov
stos
jne
daa
and
enter
inc
xchg
adc
rcll
xchg
xchg
sub
mov
mov
mov
inc
loopne
mov
popa
pop
add
xor
dec
imul
adcb
shrl
addr16
lea
adc
in
or
scas
add
and
div
xchg
add
imul
insl
cmpsl
xor
xchg
and
inc
out
movsl
loope
out
loopne
stos
push
push
mov
leave
xchg
inc
mov
aaa
jo
mov
bound
ficoml
dec
mov
cmc
dec
daa
mov
mov
cmp
fimull
femms
loopne
or
mov
cmp
popf
or
or
and
jl
adc
dec
out
arpl
jl
push
xchg
or
push
add
lcall
cmp
and
invd
or
dec
mov
ret
inc
mov
fisubs
or
cs
popa
mov
rcr
leave
jle
dec
cmp
adc
inc
sub
pushf
int
inc
mov
mov
mov
xor
sub
xchg
inc
loope
add
sahf
scas
push
push
jmp
pop
adc
add
add
xchg
mov
andb
repnz
neg
icebp
ret
adc
aaa
mov
and
adcl
hlt
pop
push
xor
sub
or
adc
or
add
and
pop
xor
sbb
jo
mov
mull
scas
test
call
mov
into
enter
ds
xlat
loopne
adc
cltd
jecxz
or
aaa
or
pop
repnz
lods
xlat
mov
outsl
jnp
adc
mov
add
sbb
imul
shrl
adc
mov
ja
jns
rcr
mov
ficoms
push
punpckhdq
or
mov
lret
sub
dec
les
lock
stos
aam
scas
or
sub
xchg
sahf
xorl
dec
add
icebp
xorb
and
mov
sbb
aaa
sub
mov
xchg
inc
jnp
movsl
lcall
rcrb
fcomps
mov
mov
cld
add
xchg
mov
stos
push
test
cmpsl
insl
out
aam
ret
lret
pop
xchg
mov
das
and
mov
subl
jmp
mov
xchg
dec
sti
gs
ret
add
jmp
adc
mov
mov
hlt
xlat
mov
mov
and
insb
sub
jmp
je
mov
cmp
push
fsubr
push
aam
or
lds
shlb
shlb
xor
fcomp
sub
mov
cmpsb
sbb
lock
sub
jb
pop
mov
mov
pop
jle
cltd
loopne
orb
frstor
mov
dec
sbb
test
cld
adc
aam
ds
movsb
adc
jge
push
aaa
int
adc
xchg
mov
loopne
fistpll
hlt
xchg
idivb
out
loop
or
rorb
cs
test
pop
xchg
cwtl
mov
jp
or
xchg
stos
popf
or
cli
xchg
sahf
jecxz
shl
je
in
mov
adc
xor
cmpsb
push
out
cmpsb
adc
sub
mov
shll
fsubs
cltd
std
push
add
insl
and
push
xchg
ret
xor
jb
popf
stc
loopne
xor
mov
sub
jne
stos
or
lds
or
mov
fs
sub
jno
out
jl
ss
repz
fbstp
inc
aas
adc
dec
aas
or
cld
push
fadd
adc
xchg
ljmp
xchg
mov
cld
mov
psubw
jae
jmp
pusha
cmpsb
mov
or
sbb
adc
add
mov
stos
iret
mov
mov
negb
pushf
mov
out
add
shll
sub
fildl
lods
pop
sbb
out
add
stos
mov
jns
repz
sub
in
rorl
mul
cwtl
jp
addr16
sbb
xchg
enter
jge
add
dec
mov
pop
stc
jmp
pop
addl
mov
jns
pop
fstpl
mov
leave
and
push
outsb
ljmp
into
outsb
dec
test
push
popa
test
and
sbb
pusha
mov
rolb
ds
mov
jl
pushf
loopne
pop
mov
subl
and
cmpsb
popf
ret
adc
dec
xor
fldenv
out
mov
xchg
lods
out
aam
inc
pop
add
and
jle
inc
cmp
test
cmp
and
adc
out
xlat
in
ds
push
cli
mov
insl
dec
icebp
mov
cwtl
jmp
out
out
in
push
jne
outsl
je
mov
cmp
pop
andl
cltd
mov
aam
jecxz
into
push
adc
jne
cmp
ret
or
popa
inc
mov
dec
inc
push
int3
fsubrp
mov
lods
sub
test
mov
aam
cltd
cmpsl
repnz
sbb
cmp
icebp
jge
fwait
out
sbb
or
pop
add
ret
jb
xchg
xor
nop
sub
lret
and
mov
mov
std
mov
shrb
fwait
push
and
jl
data16
iret
adc
orl
lcall
jbe
mov
push
out
jecxz
ret
push
out
push
stos
jns
in
lock
out
inc
jb
sbb
adc
xor
in
push
clc
jb
std
xor
mov
add
xchg
insl
mov
cs
lea
inc
lea
jae
sti
into
jo
lret
inc
pop
fdivrl
pop
insl
adcl
add
loopne
adcb
int3
int3
xlat
rclb
cmpl
xchg
cmp
pushf
vfmadd213sd
std
cltd
pop
and
inc
insl
scas
sub
jnp
orb
out
jmp
xor
add
or
sub
fbld
push
dec
sbb
inc
mov
and
lahf
jno
inc
ja
push
cmc
lea
add
xchg
inc
dec
div
sbb
pop
inc
push
push
in
fwait
jb
arpl
out
mov
xor
addl
es
jne
jne
inc
mov
gs
test
gs
icebp
idivb
cmp
and
test
adcl
push
jge
fidivrs
jno
rcl
pop
loopne
jb
adc
adc
mov
lock
push
jbe
jns
lock
dec
push
xchg
jb
or
and
decb
or
or
pushf
decb
dec
cld
addl
leave
pop
xchg
mov
cmp
inc
add
insl
std
cmp
sarb
adc
dec
inc
xchg
dec
clc
sbb
aad
push
arpl
xor
inc
lret
sbb
dec
cwtl
push
jne
or
dec
or
inc
shll
inc
mov
test
into
add
or
clc
jne
scas
jno,pt
xlat
fwait
jno
push
jns
add
pop
sti
data16
add
adc
cld
bound
sub
cld
pop
subb
addl
adc
mov
fs
lods
push
out
popf
in
repnz
imull
xchg
push
lds
inc
dec
dec
bound
std
shll
test
fsts
cltd
adc
xchg
outsl
or
push
iret
mov
xchg
sub
rcl
addr16
and
das
jae
fwait
sub
dec
cmpsl
test
nop
test
xchg
popf
bound
addr16
icebp
or
xor
and
icebp
popa
adc
jb
xchg
mov
lock
hlt
mov
pop
es
mov
cmp
ss
filds
sbb
cmp
and
inc
xchg
add
jne
pop
sub
int
and
pop
fs
lea
mov
mov
xchg
pop
cmp
cmp
sub
les
je
mov
cmp
inc
jmp
jno
cmpsb
adc
mov
fs
or
sub
outsb
into
xchg
xor
into
push
cmp
xchg
jge
jmp
mov
mov
pop
mov
xor
jmp
push
pop
lret
pop
add
stos
arpl
lock
push
adc
clc
or
notb
loop
stos
pop
clc
jle
lret
jae
and
icebp
cmp
fidivl
data16
stc
push
out
repz
bound
xor
arpl
out
push
repz
add
pop
test
add
les
stos
ret
in
pop
out
outsl
xchg
ret
out
sti
arpl
push
sbb
mov
jecxz
fisubs
roll
addb
scas
push
sti
add
mov
xchg
aad
mov
adcb
xor
sub
arpl
or
fistl
xchg
fdiv
fcmovne
aas
and
xchg
fwait
shrl
and
pop
lret
pop
inc
dec
iret
mov
jns
xchg
loopne
fcos
pop
shll
jns
mov
cmp
loop
repnz
pop
into
ss
rolb
xchg
hlt
jnp
clc
sub
add
push
cmp
imul
xchg
movsb
push
jne
and
push
jg
and
lret
sub
rolb
scas
jae
jb
mov
pop
jb
add
repz
xchg
out
lret
imul
inc
jmp
inc
ss
rcrb
test
mov
xor
mov
bound
pop
xor
out
outsl
adc
loopne
pop
jp
fnstenv
int
pop
adc
andl
addr16
pop
pop
test
nop
lds
xchg
and
and
add
lret
pop
in
out
and
xchg
incb
out
pushf
pushf
test
dec
pop
sbb
sub
lods
jb
cmc
sub
mov
sub
pop
xchg
xor
xlat
popl
jp
pop
in
in
test
dec
call
pop
xor
sbb
ror
pop
xchg
out
jecxz
xchg
ret
lea
shrb
xor
inc
xor
lods
shl
sbbl
test
mov
jnp
pop
cmc
or
jmp
push
js
add
push
sti
lods
fcoml
pop
mov
je
push
out
or
es
jp
jl
sub
and
es
mov
inc
dec
xchg
inc
jns
fidivl
or
mov
dec
fiaddl
stc
das
inc
iret
test
sbbb
or
inc
mull
icebp
add
sbb
add
das
cli
mov
and
in
in
test
mov
dec
dec
add
cltd
clc
mov
test
into
lret
sbb
mov
ret
sub
dec
adc
std
loopne
popf
add
imul
mov
inc
pop
repnz
mov
xchg
mov
scas
pop
or
jnp
add
dec
mov
ljmp
lahf
test
sbb
addr16
push
sbb
fcoms
mov
out
inc
jb
xchg
jge,pt
sub
xchg
fcmove
fdivl
adc
xchg
hlt
arpl
jo
add
outsl
jg
pusha
dec
mov
push
in
cmp
roll
aas
popa
test
cs
out
mov
mov
xchg
cmp
xor
out
outsb
rcrb
inc
loop
xchg
in
lret
insb
cltd
push
sub
in
xor
jge
xchg
cmp
pop
mov
mov
in
or
or
stos
xchg
and
mul
fwait
sbb
sub
fistps
mov
subb
test
dec
push
jns
sbb
fwait
mov
pop
out
test
lahf
sub
inc
sbb
sbb
mov
xor
cli
cmc
xor
push
mov
dec
repz
jno
stos
inc
add
out
fiaddl
mov
ficompl
jp
adc
mov
pop
je
push
adc
scas
fisubrl
inc
jecxz
adcb
add
jle
add
in
sub
sub
mov
inc
test
nop
pop
add
sub
add
clc
xchg
mov
or
lcall
jmp
add
sub
or
push
adc
hlt
shl
out
sbb
sbb
jecxz
mov
in
cmp
lret
cmp
daa
sub
sahf
xchg
pop
cmpsb
stos
jge
ljmp
mov
mov
add
xchg
stos
ljmp
daa
push
mov
subb
idivl
xchg
testl
dec
inc
mov
test
in
loopne
test
xchg
and
das
js
mov
jg
mov
bnd
or
mov
leave
pop
shlb
push
xorb
loopne
add
test
xchg
adc
sbb
shrl
aas
xchg
jp
sub
mov
xor
shr
push
lret
mov
pop
sarb
mov
stos
dec
xchg
cmpsb
test
nop
lds
ljmp
xor
iret
pushf
popa
xor
mov
xchg
xchg
jnp
push
out
lret
mov
std
cmpsl
and
mov
mov
dec
dec
fdivrl
ucomiss
xor
and
fnstcw
andl
sbb
pop
aad
add
jmp
das
xor
mov
xchg
scas
mov
or
pop
xchg
xchg
in
aad
notb
mov
popf
test
sub
ds
into
or
and
lea
push
fcoms
mov
stos
nop
repz
sub
std
mov
push
dec
jecxz
shl
or
inc
push
cmp
into
xchg
xor
jnp
fldenv
mov
rol
loope
pop
sti
add
sbb
nop
aad
sahf
push
mov
test
xor
cmp
out
add
scas
shll
cli
add
inc
dec
or
cmpsb
ret
dec
mov
mov
add
pop
cmp
push
stos
jmp
pop
fsubr
roll
rolb
push
out
cmp
and
pop
adc
xchg
adc
btr
daa
fisttpll
jp
negb
ja
sub
sti
test
notb
dec
ret
mov
mov
inc
stc
jp
test
jecxz
cmp
add
dec
ret
lds
sahf
leave
popa
xchg
testl
mov
hlt
dec
movsl
xor
or
adc
sub
xor
addl
jmp
push
inc
jle
adc
fimull
divl
out
jle
lds
je
adc
test
fcoms
mov
and
imul
lcall
dec
daa
loop
mov
cmpsl
lock
and
shlb
fcmovnb
pop
mov
xchg
sub
imul
inc
push
fwait
sahf
mov
sbb
pop
loopne
inc
or
sub
sub
test
inc
loopne
push
shrl
and
test
lods
inc
jns
cmc
inc
in
push
adc
dec
or
mov
repz
adc
xchg
mov
jbe
daa
mov
daa
test
jno
and
xor
leave
jmp
mov
testl
ret
in
mov
sub
mov
repz
popf
movsl
hlt
leave
lods
lcall
subl
aad
fcom
leave
jne
mov
cmp
popa
into
dec
nop
inc
jnp
cmp
jb
push
mov
aaa
mov
jge
lods
xchg
pop
or
mov
xchg
dec
jne
push
dec
addl
push
bound
int3
or
mov
adc
mov
push
mov
data16
imul
pop
jne
enter
test
fisttpl
std
lret
out
xchg
and
js
mov
icebp
mov
jp
push
mov
push
fstl
jb
pop
jecxz
jno
movsl
cltd
and
out
icebp
lret
inc
sbb
xlat
mov
cmp
fidivrl
jp
imul
dec
cltd
jbe
test
or
sbb
pop
mull
mov
es
push
ret
sub
sbb
sahf
bound
sahf
imul
imul
clc
jmp
icebp
mov
xchg
inc
xchg
sub
in
stc
cmp
test
jno
insb
fstpt
aad
sahf
sub
aaa
pusha
sysexit
and
bnd
xchg
arpl
jo
sub
addb
sbb
mov
mov
pop
dec
pop
shlb
cmp
mov
in
or
xchg
sbb
jo
sub
or
xor
pusha
sub
movsb
mov
or
ret
das
insl
jle
into
orb
in
xorl
out
cltd
nop
jo
push
cltd
jp
shll
jb
fsubr
mov
jg
ret
testl
inc
dec
jno
push
daa
push
xor
cmp
scas
into
jg
pop
movsl
ljmp
ficoms
call
scas
lea
sti
ss
ljmp
pop
pop
cli
leave
shl
into
std
xor
xchg
enter
fucomi
test
xor
xlat
repnz
mov
adc
clc
mov
aad
xchg
mov
pop
mov
aaa
or
pusha
in
lahf
sbb
push
stos
sub
push
out
cli
nop
jnp
stos
imul
stc
out
nop
cltd
js
xchg
cmc
adc
rcr
cwtl
lock
lods
outsb
in
jbe
pop
jp
jecxz
pop
popf
in
cmp
adc
xchg
xchg
out
cmp
roll
nop
inc
movb
cmp
popf
fildl
test
scas
add
mov
cs
push
out
jmp
inc
stos
mov
xchg
stos
mov
fistps
insl
movsb
jae
mov
ret
ja
xchg
and
testl
xchg
roll
jne
push
lret
jbe
fdiv
popf
sti
mov
stos
jns
inc
adc
pop
arpl
mov
xor
pop
cmp
jecxz
inc
repz
sub
and
fldl
rorl
xchg
mov
fdivs
sbbl
lret
or
push
pop
mov
lahf
xchg
lea
out
lods
xchg
mov
lock
pusha
fistps
push
push
ljmp
int3
mov
jbe
xchg
insl
sbb
mov
std
or
lcall
sub
rcrb
dec
xchg
mov
xchg
loope
lods
pop
ror
into
out
movsl
stc
ret
out
ss
mov
cmp
mov
into
daa
nop
adc
out
stos
inc
rcll
leave
xlat
and
cmp
mov
imul
push
stos
jbe
sub
pop
or
cmc
dec
mov
mov
mov
shlb
xchg
pop
push
repnz
cmpl
divl
orb
sub
jmp
fcmovb
inc
jbe
mov
scas
add
ror
inc
outsb
shl
inc
push
mov
cmc
loopne
loopne
imul
push
jbe
aam
leave
mov
ret
xchg
das
jne
mov
stos
adc
jge
addl
xchg
and
lds
jnp
mov
lods
cltd
mov
adc
sub
xor
aad
sbb
ret
sbb
loope
jp
jne
push
jecxz
ljmp
rcll
inc
outsb
enter
out
nop
mov
cwtl
jle
insb
inc
lods
repnz
cmp
daa
nop
adc
mov
out
imul
ret
xchg
or
stos
icebp
dec
int3
add
js
mov
add
sbb
or
cmpb
dec
push
mov
xchg
loop
add
into
aad
lock
jno
test
lcall
lea
es
pop
jbe
xchg
dec
xchg
mov
out
mov
out
mov
jp
pushf
dec
cs
sub
in
std
stc
in
lea
repnz
mov
mov
push
imul
repnz
mov
daa
int
out
in
mov
or
leave
xchg
sarl
cwtl
rclb
loope
mov
mov
mov
and
jle
jge
loope
daa
and
push
adcb
or
inc
cli
enter
pop
es
add
rcl
ret
ret
mov
mov
cli
imulb
jne
xor
out
jno
xlat
sahf
mov
negl
mov
pop
mov
fadd
cmpsb
fbstp
add
sbbb
cmp
push
adc
mov
push
out
mov
outsb
and
mov
cs
and
shl
test
or
in
test
xchg
xlat
jmp
std
int3
out
dec
jle
icebp
cmpsb
scas
icebp
mov
popa
in
orl
leave
popa
std
sub
cmc
sub
or
xchg
iret
nop
sub
js
das
out
js
int3
inc
and
cmp
loopne
push
fsubrl
pop
pop
mov
push
in
negl
jns
aaa
inc
es
dec
xor
shll
mov
mov
scas
or
scas
or
cltd
call
mov
jge
lock
push
push
test
mov
mov
add
sbb
add
adc
push
sub
push
aam
mov
jmp
mov
insl
cmp
sarl
orl
pop
ss
out
mov
lock
jnp
adc
dec
ljmp
loope
dec
ss
push
test
sub
sub
pop
popf
es
jno
insl
jns
xor
icebp
mov
dec
cmp
cmc
mov
adcl
lret
mov
int
stos
pusha
mov
repnz
popf
mov
mov
xor
test
scas
mov
ret
rcr
sar
sbb
and
adc
out
es
push
mov
xor
hlt
test
sub
and
loope
data16
inc
mov
fldenv
sbb
mov
icebp
or
subl
inc
mov
loope
adc
xchg
icebp
adc
or
sub
mov
adc
lock
pop
loop
repz
jno
mov
aad
lcall
test
clc
sahf
xchg
fwait
push
dec
xchg
mov
lock
test
push
dec
int
mov
gs
mov
fsts
push
test
mov
cmpsb
add
cltd
xchg
enter
pop
int
mov
sbb
jp
rcll
fidivl
out
xchg
fildl
pop
enter
dec
jne
inc
lock
mov
mov
or
gs
sahf
and
pushf
or
and
push
jge
fisubrs
cmpsl
inc
dec
test
xor
je
test
cwtl
je
imul
mov
addr16
mov
test
scas
dec
xchg
mov
xlat
or
rcrl
popf
mov
mov
sub
mov
stos
mov
das
push
mov
add
lea
or
push
hlt
dec
cmpb
xchg
or
pop
cltd
xchg
or
mov
lods
mov
in
in
adc
lcall
ds
jne
mov
adcl
inc
mov
imul
ficomps
ret
and
pop
fldenv
inc
pop
ss
arpl
mov
add
fwait
test
xor
xor
xchg
neg
cs
stos
mov
andb
inc
test
fisubl
aam
mov
pop
mov
ljmp
inc
or
movsl
sbb
gs
test
mov
adc
push
add
iret
out
mov
adc
aam
sahf
mul
xor
xor
cmp
push
test
mov
fdivr
xor
ljmpw
stos
add
das
pop
xcrypt-cfb
cmpsl
bound
jnp
sub
adc
xor
in
icebp
imul
jae
and
and
pop
mov
and
cmp
inc
scas
test
in
ljmp
mov
das
aad
xor
add
inc
lret
pushf
les
and
hlt
fsubrl
insl
mov
mov
mov
ret
and
lock
ss
push
shrb
int3
test
or
insb
sbb
mov
xchg
in
cli
outsl
sub
sub
cmpsl
adc
cmp
ja
and
addb
ss
xchg
shl
fimuls
sub
mov
das
xchg
xchg
jno
mov
xchg
and
mov
pop
and
test
vphaddubw
pushl
sub
lsl
test
cwtl
mov
je
lret
mov
and
sbb
out
sbb
mov
lahf
xchg
fnsave
test
xor
dec
sbb
xor
shll
cwtl
pushf
scas
and
test
adc
es
in
testb
xorl
ss
negl
cltd
cmp
mov
daa
jle
push
sub
mov
lret
out
fcompl
pop
push
dec
stos
dec
xor
into
xlat
inc
adc
mov
imul
jge
jmp
sub
xchg
sub
xchg
out
and
jae
jmp
ja
push
xor
cmp
aas
mov
fmulp
mov
xor
and
movsl
fdivrs
test
mov
sahf
mov
rolb
pusha
xor
imul
test
flds
xchg
dec
in
repz
aam
rcll
popf
cmovns
fmulp
mov
add
pop
lds
ret
test
lahf
add
lret
cmc
test
pop
sub
add
xchg
iret
sub
push
dec
lret
nop
dec
repnz
out
xor
mov
scas
inc
outsb
sub
stos
inc
fpatan
ret
test
scas
sti
or
fwait
and
push
adc
movb
sbb
push
leave
mov
mov
shll
ljmp
jno
inc
mov
pop
or
out
adc
mov
das
and
fsubs
aam
fisubl
and
out
xchg
cmp
mov
dec
mov
es
jo
cltd
scas
fcomip
fildl
out
lea
jae
lahf
cmpsb
pop
lods
lret
mov
push
fdivrs
jmp
jbe
test
sub
push
sub
out
nop
push
xor
xchg
testb
dec
imul
imul
gs
loope
shlb
test
pop
out
push
sub
cld
iret
sub
pushf
pop
add
insb
xlat
push
pop
fmulp
jne
mov
sbb
and
cli
push
shl
xor
outsb
push
dec
xchg
popf
sub
loope
mov
push
fnstenv
aad
mov
mov
push
or
add
nop
xchg
push
lret
add
pushf
stos
call
xor
pop
xchg
cmp
xor
push
push
fsubl
or
jle
sbb
xor
cmpsl
fbld
cs
inc
jp
lea
inc
xor
in
xchg
xor
clc
or
lods
sub
loop
fstpl
adc
or
pushf
jg
cmpsl
sbb
addr16
jo
push
or
lret
or
inc
jne
ljmp
mov
pop
jb
jbe
je
mov
test
and
or
insw
repz
and
test
pop
lock
inc
test
xor
cmpsl
hlt
lock
push
stos
out
add
shrb
jle
sub
mov
into
cmp
cltd
sub
rcr
bound
sub
mov
jl
rcl
mov
jmp
jmp
pop
in
daa
push
ficompl
pop
test
ja
rorb
sub
add
fisubs
adc
push
or
dec
in
pop
inc
pop
cmc
test
lods
shll
adc
inc
sub
dec
mov
imul
mov
or
inc
xchg
xor
outsb
es
ror
stos
pop
pop
add
mov
fiadds
xlat
orl
outsl
and
add
insl
xor
xchg
movsl
hlt
notl
add
lods
ret
les
add
add
cs
push
insl
mov
mov
inc
into
or
inc
scas
testb
cmpsb
dec
jae
mov
aas
and
out
jmp
test
and
inc
xchg
leave
pop
pushf
imul
orl
jbe
add
nop
hlt
mov
sbb
push
cmovnp
add
std
insb
or
aad
add
test
mov
subb
sub
adc
adc
pop
sahf
repz
repnz
or
push
push
out
mov
aam
push
das
outsl
fisubs
imull
call
out
js
inc
test
pushf
or
es
jl
or
ret
cwtl
or
mov
mov
or
fcmove
lods
cmpsl
stos
or
out
repnz
enter
sbb
loopne
js
mov
sub
add
xor
jmp
rcrl
popa
lods
xchg
sub
push
inc
jmp
mov
push
decl
mov
xchg
mov
rcrb
lock
inc
mov
jbe
xchg
lea
repnz
gs
or
adc
into
or
mov
inc
out
call
fs
icebp
jmp
push
mov
adc
gs
fs
in
inc
add
jne
daa
jbe
push
iret
stos
or
test
int
data16
xor
jb
enter
nop
pop
push
lock
mov
pop
mov
add
mov
ljmp
rorb
lret
jno
idivb
sub
divl
adc
and
mov
orb
movsl
dec
fwait
icebp
or
gs
test
fbld
and
ja
test
mov
add
push
popa
cmp
inc
and
fs
inc
es
imul
xchg
sub
je
fistpl
xchg
xorl
dec
cmp
popf
pop
fnsave
ret
mov
add
sub
sti
cmp
fiadds
adc
pusha
add
daa
and
add
outsb
push
mov
cmp
mov
xchg
and
inc
inc
sub
jno
xor
xchg
sub
xor
test
enter
push
push
mov
xchg
mov
dec
push
sub
repnz
jb
popa
daa
cltd
xchg
mov
push
pop
sub
rcrb
icebp
xor
pop
mov
subl
mov
xor
jnp
popa
test
mov
std
xchg
fsub
sub
sbb
fstpt
mov
fs
lods
aas
sub
psubd
add
loope
dec
es
pop
mov
out
push
loope
outsb
imul
lock
sbb
addr16
pushf
jg
xor
hlt
xor
out
add
inc
dec
pop
jmp
mov
dec
mov
les
mov
insb
lock
int
dec
adc
push
xlat
loope
mov
mov
mov
scas
lahf
fcom
xchg
ja
dec
cwtl
into
cli
xchg
add
int
adc
sub
cmc
xor
lcall
add
pusha
lret
test
push
stos
icebp
fisttps
in
inc
jb
idivl
bound
in
int
in
dec
jp
bound
imul
mov
test
cmp
cmovns
sub
adc
cmp
repnz
orb
aad
stos
in
shl
shl
xor
addr16
dec
dec
stos
mov
aad
repz
addr16
daa
pop
rcll
adc
add
xchg
pop
jo
jmp
jl
pop
or
dec
mov
ja
cmp
arpl
xlat
sti
pop
dec
or
jle
je
jb
repnz
pop
push
sub
loop
cmc
stos
jmp
xor
sub
cmc
or
inc
sbbb
mov
push
push
ljmp
sub
cmp
cmpb
inc
jle
fistpl
dec
sbb
mov
test
aad
nop
lcall
ret
xor
fidivrs
push
xchg
sub
mov
shrb
stos
imul
fisubrs
adc
adc
and
daa
enter
mov
gs
stos
repz
cld
mov
and
punpcklwd
and
xorb
arpl
mov
inc
sub
hlt
mov
sbb
inc
ss
lcall
xchg
fldt
jae
pop
ret
out
push
test
sub
xchg
les
jno
je
inc
dec
in
jecxz
push
addl
cmpsb
cs
mov
and
dec
add
scas
fscale
icebp
pop
addl
xor
dec
mov
mov
fs
inc
push
hlt
pop
xchg
sbb
fs
das
repz
jecxz
add
xchg
mov
mov
cmpsb
mov
mov
and
or
es
mov
in
mov
xor
mov
sbb
push
jge
push
test
insb
adc
inc
xchg
mov
adc
fmuls
lcall
iret
insl
mov
xchg
cltd
ret
cwtl
or
pop
sbbb
add
data16
nop
mov
push
or
loope
cmc
jl
lahf
mov
sahf
push
add
ficoms
xchg
movsb
negb
mov
push
mov
sub
ret
lahf
aas
aam
xor
xorl
fwait
shl
xchg
popf
repnz
adc
xchg
orb
jl
ret
ret
add
int
xchg
sahf
repz
dec
pop
stos
bound
data16
lea
jmp
xchg
mov
mov
or
mov
cmc
xchg
add
and
mov
lock
xor
repz
incb
imul
out
ret
inc
stos
add
xchg
sub
pop
jb
iret
dec
or
push
adc
and
jno
mov
adc
leave
movsl
jmp
inc
mulb
cmp
xchg
jbe
jecxz
je
aam
mov
arpl
stos
clc
and
ficoml
bound
hlt
sub
pop
int
sub
jp
inc
mov
sti
or
and
stos
sub
enter
or
mov
fwait
bound
shlb
xchg
inc
xlat
repz
xor
pop
mov
mov
mov
lea
sbb
pop
mov
insl
sub
xor
mov
out
int
cwtl
mov
stos
pop
fmul
jnp
sbb
cs
cli
fcoms
mov
push
xchg
xchg
xor
fsubrs
dec
mov
xlat
sub
cwtl
xchg
and
out
pusha
mov
jge
xor
int3
cld
das
pushf
xorl
push
icebp
push
scas
or
cli
cld
arpl
push
push
movsl
imul
or
out
mov
mov
out
push
or
ljmp
mov
gs
pop
mov
out
int3
mov
sub
dec
mov
cmp
mov
sub
mov
cli
push
and
and
ja
fcomi
pop
cmp
or
fsubl
jmp
cltd
out
pop
lcall
fwait
push
push
sbb
out
loop
mov
jp
push
call
sahf
andb
movsl
or
cmp
mov
sub
call
sbb
int3
xor
mov
dec
xor
sub
jno
adc
cwtl
push
dec
das
ja
sub
stos
and
scas
ljmp
mov
iret
inc
or
adc
or
int3
push
xchg
jge
jecxz
xor
cmp
fld
dec
pop
adc
in
xchg
jp
test
cmc
loop
jno
jmp
mov
pop
imul
insl
adc
add
sbb
pushf
push
scas
and
test
ret
fiadds
dec
icebp
or
int
add
adc
mov
dec
hlt
mov
or
xchg
mov
in
adc
jmp
call
inc
ss
ljmp
jmp
in
jae
jge,pt
add
in
scas
std
cmp
test
or
inc
enter
rclb
dec
div
cmpb
das
jae
mov
fs
cwtl
mov
dec
shlb
test
sahf
xlat
dec
movsb
sub
dec
mov
jno
fidivrl
cli
faddl
sub
mov
and
fsubl
mov
pop
mov
dec
shlb
loopne
popf
dec
test
movsl
xor
mov
aas
xor
mov
leave
scas
mov
xchg
shll
fstpl
push
cld
popa
roll
adc
add
inc
inc
repz
test
in
popa
dec
xchg
inc
out
mov
inc
ss
push
dec
push
and
bound
in
out
xchg
pminsw
push
scas
adc
stos
pop
and
cmpb
or
adc
rolb
dec
stos
into
lret
out
fimull
out
mov
ss
or
sbb
cmpsb
call
repnz
push
push
xlat
insb
fsubrl
push
cwtl
or
popf
jle
mov
test
test
sti
or
sbb
push
adc
cli
ljmp
das
aaa
dec
repnz
xor
or
repnz
cld
shl
mov
add
aas
xor
mov
sub
lcall
sahf
mov
int3
or
scas
divl
inc
ds
jle
xor
sub
or
in
subl
fsubp
pop
add
hlt
or
clc
ss
push
ds
cmc
into
mov
mov
mov
mov
and
jmp
loop
scas
jmp
or
add
les
pop
jb
adc
std
fcomi
jns
sbb
jns
cmp
jne
jle
xchg
xchg
mov
aas
jmp
xor
in
inc
hlt
jae
je
mov
and
out
popa
ret
xor
jp
or
lock
or
sti
and
pop
repz
rorl
stc
jae
repz
xchg
filds
mov
or
dec
ja
insl
pushl
mov
cmpsl
stos
push
lret
std
add
mov
cmpsb
fs
test
shlb
jmp
adc
adc
scas
inc
clc
in
xlat
ds
add
mov
fs
cld
push
inc
out
fwait
pop
out
dec
add
aas
cmpl
scas
enter
mov
cli
out
test
mov
int3
fiadds
rolb
xor
bound
mov
pop
out
popf
sub
pop
mov
ss
dec
lods
push
rorl
mov
subb
push
cmp
movsl
repnz
fldln2
pop
in
dec
sarl
jo
inc
mov
xor
in
mov
idivb
lods
push
push
adc
push
mov
in
out
loope
adc
lods
mov
es
mov
shrl
cmp
in
or
gs
dec
int
imul
inc
push
repnz
sub
xchg
xchg
cmp
mov
push
push
jle
mov
pusha
int
mov
pop
xchg
test
add
in
xchg
fildl
ljmp
inc
out
out
cmp
imul
repz
or
mov
outsl
dec
dec
cmpsb
pop
fs
fdivs
int
outsb
into
cs
adc
pop
or
data16
ficomps
add
call
rorl
push
xor
xrelease
sbb
ret
xor
lods
test
mov
pop
imul
add
sub
jae
rep
repz
and
sub
mov
cli
xor
push
stc
aam
lods
mov
movsb
sarb
cmc
inc
cwtl
or
adc
loop
inc
push
push
aaa
cmc
push
stos
xor
xor
add
clc
sbb
stos
mov
jmp
stc
ljmp
aam
cmc
movb
fldt
dec
pop
std
sahf
jae
jne
subb
sub
push
data16
aas
ret
testl
and
mov
mov
sub
adc
pop
divb
insb
pop
add
frstor
xchg
xor
add
xchg
ss
mov
scas
orl
rolb
jle
xor
xchg
cmp
stos
adc
sbb
shll
cmpsl
std
or
addb
pop
xor
push
rep
mov
sahf
jge
stc
jge
lea
imul
xor
aas
imul
and
fldl
into
cmp
or
subl
dec
xchg
imul
and
adc
fdivrl
shll
lahf
lret
mov
cmpsl
fstpl
mov
jge
xor
or
mov
je
es
sbb
cmp
test
je
sub
xchg
dec
mov
ret
mov
mov
mov
xchg
inc
cs
mov
loop
cwtl
repnz
les
out
sub
mov
aad
or
adc
pop
call
pusha
mov
adcb
adc
and
jbe
movsb
or
aam
mov
inc
les
test
push
inc
cmp
push
cmp
test
test
cmp
insl
mov
addl
mov
out
dec
add
lcall
cmp
adc
cltd
shrb
dec
andl
pop
push
mov
lods
mov
jb
in
leave
movsl
push
inc
xor
popf
push
hlt
fisubl
lds
mov
jle
loopne
shrb
and
idivl
jb
mov
mov
repz
or
arpl
cmc
jg
jb
mov
sbb
pusha
lret
inc
loop
dec
stc
pushf
push
mov
mov
dec
lahf
push
xchg
jne
push
andl
mov
lods
sbb
jl
das
sub
subl
into
cltd
jp
mov
es
pop
into
leave
aad
or
push
or
xchg
push
xchg
addb
mov
pushf
jmp
enter
out
rcrl
movsb
and
sub
xchg
sbb
sbb
xchg
aaa
es
lret
xchg
xlat
ss
out
addr16
fimull
popa
mov
pop
hlt
jne
insl
lahf
push
and
xor
ljmp
bound
adc
jle
or
sti
mov
aam
inc
pop
rcll
mov
add
xchg
loop
or
xchg
sbb
into
iret
xchg
mov
mov
loopne
push
arpl
fcmovnbe
cmp
in
push
repnz
xchg
mov
lahf
adc
lods
sub
fwait
es
pop
aaa
nop
jge
nop
add
mov
lret
pop
int
cmp
jae
enter
subl
loopne
adc
dec
dec
pop
push
repz
jecxz
mov
cwtl
push
insl
push
jb
loopne
mov
mov
popf
aam
daa
mov
lods
sub
sbb
dec
aam
xor
sub
fistpll
add
movsb
fildll
enter
or
call
pop
lret
mov
pop
out
push
cmc
lods
inc
imul
xor
cmc
xchg
mov
in
fidivl
or
xchg
subb
out
inc
jl
lds
or
test
repnz
jmp
loop
sub
mov
pop
or
call
or
mov
mov
fcomip
pop
addr16
fiaddl
dec
roll
push
inc
dec
leave
cli
mov
or
mov
rcrb
js
adc
push
out
lcall
ret
sub
sub
cli
cmp
mov
dec
outsb
cmpsb
sub
and
mov
js
int3
scas
push
fsts
cmp
and
repz
and
cmc
pushf
mov
rolb
cltd
movsl
dec
scas
or
cmc
sahf
fbld
imul
pop
nop
pop
movsl
and
mov
shrl
push
enter
push
and
sahf
mov
nop
ljmp
and
addl
cmpsl
orb
or
add
pusha
adc
add
pop
xchg
outsb
push
jl
push
cmc
or
and
and
cmpb
pop
mov
sahf
into
test
int3
bound
push
mov
mov
push
push
imul
push
ret
mov
inc
xchg
fdivl
mov
pop
cld
fcoml
add
into
lret
insl
xor
mov
in
roll
bnd
and
pusha
adc
outsb
xor
pop
movsl
mov
add
call
sarb
pop
or
add
push
mov
cmpsl
notb
das
mov
pop
aam
adc
jp
or
fldt
inc
idivb
jle
add
push
add
mov
out
xchg
aad
jno
cmpsl
mov
nop
jecxz
push
add
fisttpl
popa
dec
mov
mov
scas
pop
push
lock
les
dec
xchg
jecxz
repz
clc
mov
cli
mov
lock
jg
mov
jnp
out
in
insl
sub
test
sub
cs
cli
adcl
andb
rcll
hlt
adc
push
xchg
fists
stos
adc
inc
rcrb
mov
je
xor
clc
filds
sti
and
sub
and
call
dec
mov
enter
or
xor
inc
stos
and
sbb
mov
out
push
rcll
xchg
sub
iret
or
xchg
rclb
cwtl
push
push
jecxz
mov
mov
sbb
xchg
cmpb
mov
jle
imul
jge
xor
movsb
pop
jge
lcall
sbb
inc
es
in
mov
dec
and
imulb
je
movsb
sub
sbb
pop
bound
add
jnp
dec
lcall
lret
js
inc
lret
xchg
add
pusha
xchg
inc
mulb
push
fnstsw
xchg
popa
les
and
add
sub
inc
popa
fmulp
inc
jne
nop
aad
mov
cli
push
jo
mov
enter
ret
leave
pushf
jne
movsl
sbb
leave
adc
callw
aaa
mov
out
outsl
lea
fistpll
cltd
xor
aas
sarl
and
addr16
in
pusha
addr16
push
mov
out
scas
loop
fsubs
add
cli
lods
or
jae
mov
jecxz
outsb
stos
aam
mov
hlt
out
movsb
ljmp
sahf
or
orb
or
gs
xchg
jnp
xor
jae
add
rolb
fistps
cmpsb
sub
push
or
jno
je
fiaddl
cwtl
hlt
inc
ret
and
clc
sbb
xchg
mov
or
mov
inc
and
jno
cmp
iret
stos
push
sub
std
shr
and
mov
mov
xchg
sub
cmc
push
mov
mov
int3
cmp
sub
fwait
mov
mov
xchg
out
test
mov
sahf
or
inc
lcall
in
lret
sbb
xchg
cmp
mov
xor
or
cmp
out
movsb
inc
jge
nop
aam
test
jp
pop
cmpsl
push
rcrb
add
roll
lret
es
ret
or
ret
stos
ret
and
cwtl
sarl
mov
push
stos
test
adc
pop
pop
lods
and
pop
push
adc
add
mov
and
fildl
xchg
fsubs
icebp
inc
rcrb
in
fbstp
jmp
and
jno
jne
ret
cmpsb
cmp
sbb
hlt
and
incl
lcall
mov
mov
xchg
rorb
xchg
roll
test
sub
jp
leave
jne
aad
mov
cli
xor
dec
adc
xlat
fsubr
aaa
into
and
mov
dec
pop
dec
jne
mov
jg
jecxz
fmuls
sub
xor
bound
subl
adc
jae
or
flds
repnz
fsubs
pushf
adc
divl
pushf
or
sub
add
push
je
pop
cmp
loope
or
fisubrl
jae
loopne
jp
mov
and
mov
add
add
stc
jbe
cld
add
scas
jno
ja
sub
mov
push
out
push
outsl
jno
out
xlat
cltd
or
cli
mov
pop
inc
cmpsb
insb
xchg
xor
mov
mov
jmp
pop
xor
mov
sub
xchg
imul
mov
cltd
iret
inc
mov
test
in
shll
or
repnz
pop
sahf
icebp
clc
inc
int
lahf
jp
popf
xchg
mov
inc
pop
dec
es
sarb
pop
movsl
sarb
lock
lahf
push
or
jecxz
ljmp
jae
sbb
adc
or
or
insb
pop
push
adcb
jno
jnp
mov
and
mov
sub
push
out
aad
adc
xchg
in
cmp
xchg
mov
cmp
bnd
ljmp
hlt
add
cmp
in
add
xor
inc
jns
loope
movsb
xchg
outsl
das
xchg
popl
sub
sub
and
sti
sub
int3
mov
sbb
push
rorl
and
loop
jg
sahf
das
add
jp
sarl
stos
or
lds
push
sahf
popa
mov
fs
insl
cmp
fwait
add
xor
mov
jmp
add
jg
xchg
xchg
xchg
test
fiadds
fwait
icebp
xor
test
sub
jmp
push
insl
outsl
or
ds
fmulp
ret
mov
dec
jl
push
dec
pop
dec
sub
mov
aam
cwtl
mov
out
movsl
lret
adc
movsb
shl
cld
lock
ja
aam
cmp
fildll
roll
sbb
or
mov
test
and
mov
xor
shrb
mov
xchg
xlat
and
lods
ret
fincstp
push
js
xchg
sub
add
mov
mov
sarl
lds
jno
add
mov
imulb
jg
add
jnp,pt
pop
adc
insl
jl
sbbl
dec
lock
cltd
jecxz
push
sbb
lds
sub
push
loop
fldcw
xor
in
movsb
enter
mov
pop
xor
adc
mov
mov
mov
ret
or
cmpl
lea
movsb
and
mov
mov
and
push
jg
mov
mov
pushf
outsl
jge
mov
mov
in
adc
xchg
mulb
adc
xlat
sub
lds
mov
cwtl
sbb
sub
pushf
sub
pop
iret
cld
hlt
xchg
fcomip
and
pushf
xchg
cmp
ljmp
adc
inc
pop
fimuls
sub
xchg
sbb
pop
arpl
jp
add
xchg
or
enter
xor
and
and
iret
mov
jns
loope
xchg
push
in
clc
arpl
sbb
xchg
imul
test
lock
insl
inc
out
jmp
rcrb
pusha
std
fdiv
cltd
mov
repz
push
lock
gs
loope
lret
cli
lea
mov
mov
outsw
inc
jbe
xchg
jae
lock
push
sub
mov
and
adc
xchg
or
jmp
scas
add
xchg
xchg
ss
repnz
jg
loop
shrb
rcll
mov
test
aas
sub
jg
daa
subl
lret
mov
notl
shll
insl
rcrb
ret
stos
pop
in
jb
push
sbb
jae
cmp
es
das
push
std
ret
movsl
mov
sub
cmc
jge,pt
mov
jb
cmp
adc
in
shrb
mov
pop
or
jp
repnz
pop
inc
lock
fsts
mov
int
cmc
fimull
cwtl
cli
and
ret
mov
add
test
mov
outsb
ret
cmp
mov
icebp
testb
mov
dec
add
cmpsb
or
sbb
inc
enter
pop
mov
mov
ds
fldt
mov
movsl
cmp
andl
and
or
sbb
nop
mov
cmpsl
mov
mov
cmpsl
cmp
arpl
add
popf
test
popf
pop
inc
pop
push
xchg
cmpsl
hlt
push
fidivl
insb
or
mov
mov
xchg
sbb
mov
scas
mov
push
cli
insl
repz
jnp
out
bound
fcomps
ljmp
and
xlat
adc
in
je
jl
pusha
lcall
lret
xor
in
enter
daa
nop
lahf
cmpsb
cmpsb
adc
inc
dec
and
sub
cmp
scas
mov
mov
fidivs
scas
scas
pop
sahf
in
fstpt
pop
notb
push
rcll
jle
loope
dec
inc
jecxz
cmpsl
loope
jne
push
or
xor
out
outsl
sub
mov
dec
push
pop
adc
sub
jmp
inc
outsl
popf
ficoms
rol
and
mov
jp
loope
movsl
mov
mov
aad
lret
dec
fucompp
adc
leave
pushf
jno
or
adc
leave
xchg
rclb
fldl
mov
add
out
outsb
inc
jno
cmp
jg
shrb
jg
sub
cmp
movsb
mov
push
dec
mov
push
dec
sbb
mov
mov
clc
out
xlat
jle
mov
jp
popf
filds
cwtl
jl
inc
cmpsb
add
addb
fldln2
mov
test
aaa
repz
dec
xor
jb
loopne
mov
xor
ret
cmp
add
popa
in
out
jae
fsubl
mov
lcall
add
shll
mov
cmpsb
sahf
into
dec
jno
or
push
lahf
out
gs
ja
divl
shrl
loop
mov
test
insl
xor
leave
mov
cmp
scas
sub
mov
or
push
sub
mov
in
dec
fstl
xchg
loop
stc
sahf
cli
ret
test
ljmp
fldt
jno
imul
je
shll
mov
imul
mov
stos
fcoms
cmp
adc
sbb
int3
cli
dec
fldcw
andl
lods
and
mov
dec
sub
jno
adcl
xchg
das
std
daa
mov
ret
adc
stos
sub
imul
xchg
in
xchg
sbbb
dec
xlat
push
inc
jns
clc
iret
pop
mov
sub
fstl
mov
es
push
testl
testb
iret
add
mov
sbb
call
lret
mov
arpl
out
lcall
adc
fstpl
push
outsb
mov
dec
stos
xchg
leave
or
add
in
jns
cs
std
inc
sub
pop
jp
sub
add
imul
sarl
scas
lahf
ja
or
pop
adc
push
notb
mov
dec
js
div
arpl
inc
lods
mov
jnp
pop
mov
add
pop
sqrtps
icebp
popa
or
scas
sbb
adc
pop
cli
jmp
out
mov
pop
jo
xor
inc
enter
jns
lcall
mov
adc
or
in
sbb
cmp
inc
sub
pusha
mov
outsl
sub
inc
pop
subb
idivb
rorb
adc
inc
or
repnz
xor
jbe
scas
ret
mov
mov
mov
scas
lods
icebp
clc
enter
imul
mov
sub
adcb
jg
testb
push
fs
addb
mov
bound
in
jl
inc
mov
lret
dec
lds
adc
hlt
rcll
imul
outsl
fdivr
xor
xchg
lret
lret
ja
push
lcall
daa
or
cmp
xor
push
sbb
stos
dec
mov
sub
fsubr
ss
fwait
sub
outsl
test
cltd
sahf
lret
test
mov
jg
daa
cmp
insb
rol
insb
or
sub
cmp
nop
sub
inc
dec
xchg
xor
ss
lock
cmp
inc
in
bnd
insb
pop
xor
nop
clc
jae
mov
pusha
add
stos
popa
stc
jns
pusha
pop
mov
rcrb
jge
xchg
js
js
test
xchg
call
cmc
pusha
shlb
lcall
popl
out
loope
mov
rcrl
mov
testb
pop
lret
test
movsl
adc
shrl
in
out
fiadds
mov
clc
cmpsb
jbe
insl
jno
dec
dec
lahf
test
lods
fstl
andl
push
mov
test
xchg
xchg
mov
jp
pop
sar
or
cmp
arpl
sub
negl
lods
ljmp
lods
pand
fbld
adc
jmp
pop
sbb
shll
or
fs
aas
add
jg
mov
inc
jg
push
and
xor
cltd
pop
addr16
mov
fwait
and
call
xor
movsl
lcall
gs
pop
bound
jle
adc
js
es
pop
andb
mov
xchg
lods
repz
or
enter
fwait
mov
mov
dec
rclb
cmp
jmp
mov
testb
test
and
outsb
or
push
cmp
cmpb
repnz
mov
stos
js
jp
outsb
enter
divb
pushf
pop
xchg
push
jg
or
lret
cwtl
je
xchg
jg
add
comiss
jg
cli
mov
xor
sbb
iret
loopne
xor
sti
and
lea
ret
sub
loopne
or
or
mov
fsub
jmp
xchg
inc
fwait
push
daa
fisttpll
inc
out
test
lods
lea
fiadds
out
xchg
xchg
or
loope
adc
or
jb
xlat
cmp
lods
mov
inc
pop
shrl
fs
negb
lods
sbb
xor
popf
mov
mov
add
ret
xor
sahf
jmp
data16
xor
out
repnz
gs
in
sar
jl
mov
sub
subb
dec
mov
scas
cs
xor
aaa
mov
inc
fdivl
scas
push
popa
enter
dec
lods
bound
xchg
inc
cltd
lahf
push
pop
mov
rclb
pop
xor
or
out
sarl
iret
aam
repnz
loope
lods
xorl
pop
mov
dec
das
jle
imul
xor
fbstp
lret
jg
jp
add
ja
lods
or
mov
push
repnz
jnp
ret
jle
int
pop
lret
xchg
push
arpl
jnp
xchg
mov
inc
roll
cld
push
fnsave
mov
test
in
add
push
or
lahf
lcall
or
push
cmc
out
scas
sub
mov
mov
xor
or
in
addb
or
pusha
inc
lahf
mov
js
sahf
xor
jnp
lock
adc
xor
ror
xchg
xor
lods
and
pop
xchg
jnp
fisttpl
or
sarl
scas
sub
outsb
lea
xchg
or
dec
mov
sub
xchg
dec
rcrl
rorb
jae
sbb
add
ja,pt
ficompl
cmp
xor
cli
adc
les
and
adc
adc
movsl
push
push
xchg
sti
pushl
sbb
pop
inc
xchg
shrl
sub
repnz
xor
jp
push
and
ljmp
sbb
and
stos
jmp
fwait
jmp
daa
pop
sbb
sbb
in
call
xor
and
dec
mov
out
cmp
mov
or
shl
test
or
inc
mov
popf
and
cwtl
cli
popf
inc
jl
push
sub
push
call
bound
insb
cmp
lcall
xchg
inc
jle
jns
orb
xchg
mov
enter
adc
xchg
jno
push
addr16
outsb
adc
jle
scas
cmc
dec
mov
sti
mov
cmp
xchg
loop
push
mull
adc
cs
jne
test
jns
mov
xchg
mov
inc
jnp
sbb
dec
loop
sub
sub
push
jno
mov
cmp
sbb
push
lds
fldl
das
cmpl
nop
sub
jecxz
fwait
adc
ss
movsl
fildll
jb
jg
icebp
xchg
jb
xor
lds
mov
loope
into
dec
inc
cltd
mov
insb
std
pop
xor
hlt
pop
fisttpll
insl
gs
mov
inc
dec
and
mov
rcll
push
sub
mov
cmpsb
jo
test
scas
test
cs
sbb
int
dec
popa
stc
ja
jmp
adc
xor
lcall
xor
into
sbb
lods
push
aad
and
adc
bound
ja
fisubs
aas
mov
dec
cwtl
push
in
cmp
sub
fisttpl
xor
cmp
pop
dec
cmc
cmpsb
add
out
push
hlt
jo
xchg
inc
popf
shld
hlt
aas
jb
push
arpl
lret
repnz
mov
ja
xor
and
aam
int
or
fcmovnbe
or
jge
cmp
jne
sub
ficomps
pop
sbb
mov
lret
or
movsb
xor
repz
divps
call
imull
orb
inc
dec
popf
sbb
mov
add
pop
or
enter
les
ds
popa
dec
mov
loope
mov
fsub
dec
push
sub
and
cld
mov
inc
xchg
popa
fcomip
sbb
repnz
inc
mov
pop
push
sub
jns
adc
sbb
shrb
stos
test
add
mov
mov
sbb
ja
out
mov
stos
loope
int3
in
cmc
mov
or
shl
or
cmp
out
ss
mov
insl
jae
iret
pop
cmp
inc
je
jecxz,pt
mov
jmp
lock
fstpt
in
push
mov
les
add
jne
mov
subb
cld
rolb
mov
scas
or
loopne
mov
jmp
mov
and
stos
xchg
scas
jmp
incl
sub
data16
fildll
jno
jns
pop
push
or
lret
adc
lds
ljmp
insb
mov
aaa
mov
mov
push
sbbl
icebp
icebp
dec
jecxz
push
cltd
push
fisubrl
cmp
cmp
enter
cmp
and
cmp
jb
cltd
sbb
fwait
and
int3
dec
inc
push
adc
test
pop
stos
xchg
jne
outsl
lods
jbe
sbb
sub
xchg
popf
inc
push
ss
adc
push
or
lods
push
jne
add
jno
mov
cmp
adc
jle
fnsave
into
sbb
out
stc
mov
lret
cli
divb
inc
adcl
inc
xchg
mov
mov
out
std
jg
jl
xchg
dec
add
mov
or
arpl
push
pop
inc
xlat
repnz
sub
dec
into
jne
push
mov
addb
pop
into
jne
xor
mov
add
repnz
inc
repz
mov
addr16
in
sbb
dec
sub
sub
xor
sti
fists
pusha
lock
xchg
dec
rorl
andb
mov
and
jae
mov
out
mov
inc
fwait
in
dec
mov
cli
mov
call
outsb
sub
jmp
mov
lretw
bound
and
or
loop
lods
lcall
scas
adc
cwtl
scas
sbb
jp
adc
gs
xchg
stos
xor
mov
push
notl
sub
aam
lret
ss
cli
add
subl
icebp
popa
in
add
addl
stos
ljmp
aas
inc
mov
call
fsubrs
lea
lret
fs
cmc
fsts
sub
jle
mov
adc
dec
pop
cmp
test
and
jmp
cmc
decl
dec
in
xchg
cwtl
lret
mov
mov
pop
push
shrb
es
add
shr
add
push
jl
fdivrs
lods
mov
and
fcompl
iret
enter
sbb
clc
bound
adc
sub
jb
ds
lahf
movsl
in
lea
hlt
cld
sbb
xor
fbld
setb
jno
inc
xor
xchg
imul
and
in
ficoml
mov
xchg
loop
dec
sti
loopne
xchg
ja
mov
xchg
in
ret
inc
mov
adc
mov
lret
lods
mov
pop
adc
inc
call
cmp
adc
jmp
pop
scas
xchg
jb
outsb
mov
fnstsw
pop
outsl
out
test
lods
pop
fstps
in
push
fistl
pop
xor
xor
sbb
subb
xor
push
scas
inc
mov
stos
adc
jo
jge
faddl
xchg
pusha
rcrl
roll
ss
xor
xchg
mov
push
mov
dec
mov
mov
enter
jp
cmp
mov
leave
repnz
adc
daa
xor
pop
ret
loopne
add
or
mov
sahf
sbb
arpl
adc
jno
mov
dec
or
rolb
repnz
rcrb
nop
and
loop
lret
int
and
jecxz
dec
add
inc
rol
test
mov
adc
inc
push
enter
push
push
adcb
sub
adc
dec
imul
out
pop
jge
mov
sub
scas
fidivrl
rorl
lret
xchg
cmc
add
std
mov
pop
ljmp
loopne
and
xchg
xchg
push
jp
pop
ds
cmpsb
inc
loop
lcall
jne
iret
jo
sti
xlat
repz
or
in
jno
and
mov
ljmp
cli
lahf
hlt
jmp
jns
stc
int3
or
mov
enter
aam
add
repz
push
loop
popf
xor
and
mov
lods
and
pop
cmp
fwait
shrb
into
sbb
hlt
jmp
jp
push
jg
in
xchg
sub
dec
sub
push
xchg
or
jne
enter
jb
mov
and
jle
jecxz
mov
push
cmp
popf
pop
inc
aad
sbb
inc
stos
fs
and
std
sbb
aaa
outsb
mov
dec
jae
mov
enter
mov
jmp
mov
mov
and
in
pop
lcall
lret
lcall
fstl
and
sub
mov
lret
mulb
xlat
sub
inc
push
mov
sub
jmp
popa
fsubr
es
stos
pushf
lret
and
cmpsl
lock
or
fisttpll
gs
enter
int
pop
xchg
cmpsb
stos
js
cmp
out
jecxz
adc
xorl
cmpl
cmp
js
subb
ret
iret
stos
data16
fpatan
fwait
pop
lcall
push
or
jo
xlat
lret
dec
stos
ja
lock
push
fwait
enter
and
inc
idiv
out
mov
in
icebp
lds
sub
fnstsw
push
mov
dec
inc
bswap
test
int3
popa
int3
adc
mov
in
cli
sbb
clc
loope
insl
mov
and
adcb
movsb
inc
lock
jne
in
ja
popf
stos
mulb
mov
push
dec
fcomps
push
xor
or
lea
fs
or
icebp
test
imul
aaa
push
ljmp
jno
mov
loop
sub
jno
dec
hlt
leave
mov
mov
lock
orl
mov
lods
mov
fcompl
cmpsb
fnstcw
cmp
sbb
pushf
mov
xchg
dec
mov
and
sbb
add
cwtl
int
sub
jnp
shrb
sub
push
pushf
mov
es
mov
xor
mov
rclb
aas
lcall
fsub
stos
in
cmp
push
jbe
cld
das
sahf
and
std
repz
xchg
mov
shll
adc
xchg
cld
inc
mov
mov
idivl
jb
xchg
xchg
mov
mov
int3
movsl
repz
lret
mov
or
push
mov
dec
inc
or
mulb
lahf
mov
lret
popf
xchg
jne
mov
jno
mov
mov
int3
sub
outsb
add
rcrb
test
fnsave
xor
push
and
pop
lods
leave
je
pop
or
mov
movl
aaa
adc
jb
in
insl
add
ds
lds
or
mov
testb
dec
adc
mov
sarb
mov
fbld
pop
out
ret
mov
or
shll
xor
enter
mov
call
in
dec
sub
nop
and
mov
mov
mov
mov
ss
shrl
sbb
sarl
lret
lock
mov
xor
mov
or
test
roll
in
lods
repnz
cli
cmp
cmp
mov
mov
lods
add
mov
loop
cwtl
bound
pop
sbb
dec
add
inc
jl
mov
std
sti
pop
out
or
es
sbb
fsubrl
mov
jns
cmp
lahf
jmp
out
test
fs
jge
mov
sub
adc
xchg
jb
scas
es
pop
imull
cmpl
pop
popa
jle
push
pop
mov
sahf
shll
and
mov
leave
mov
push
xchg
mov
jae
jge
mov
loope
test
mov
and
fdivrl
adc
pusha
sbb
loop
inc
dec
mov
push
or
shll
and
mov
les
dec
ret
test
lock
mov
data16
setl
mov
or
fisubl
add
or
lods
add
pop
dec
add
sarb
inc
adc
adc
ret
int
repz
test
jp
out
mov
mov
mov
adc
pusha
xchg
shrl
mov
inc
aad
andl
shl
add
out
popa
mov
jmp
lock
rcrl
out
jmp
rorl
cmp
lds
scas
cmp
es
fidivs
sbb
jmp
shlb
je
call
cmpsl
mov
pop
adc
xchg
mov
fists
sub
pop
in
repz
and
jb
fsts
jno
cmp
or
stos
push
pop
adc
mov
iret
in
enter
mov
mov
pushf
pop
dec
jae
lahf
andl
insb
pop
sub
xchg
jne
pushl
or
cmpl
fstl
add
sbb
test
fistl
mov
daa
stos
loop
rol
das
push
or
lret
dec
frstor
es
and
sbb
addb
insl
filds
mov
or
in
loope
inc
ret
push
add
mov
inc
leave
mov
jae
pop
adc
dec
fcmovu
enter
mov
mov
cmp
movsb
mov
mov
into
jbe
orb
dec
dec
mov
jp
bswap
mov
fwait
sbb
dec
mov
aam
ljmp
repz
int
mov
add
sbb
push
sub
fiaddl
aam
cwtl
mov
cmpsl
clc
fimuls
or
stc
movb
mov
inc
insb
sbb
xchg
and
imul
add
xchg
mov
xchg
and
loope
adc
add
and
or
jb
stos
jne
dec
sub
adc
rorl
or
sbbl
loope
addr16
test
fcmovb
mov
scas
sahf
je
cltd
hlt
sbb
arpl
pop
fldl
stos
scas
sbb
test
stc
adc
mov
cwtl
loopne
xchg
or
xchg
jg
fcmovnbe
and
negl
mov
add
aaa
inc
outsb
mov
push
int
mov
or
add
out
and
adc
shlb
push
nop
movsl
mov
shlb
addb
lock
pop
add
xor
push
cmp
mul
test
fwait
push
rol
add
and
int
leave
pop
sbb
mov
mov
iret
call
andb
mov
mov
test
test
outsb
bound
cwtl
xor
gs
mov
arpl
lds
cli
push
push
cmpsb
in
shll
clc
sbbb
clc
xchg
ljmp
lods
push
pop
call
ja
pushf
or
jnp
lcall
dec
filds
test
mov
jmp
jno
cmc
dec
sbb
call
and
rorl
mov
and
jge
cld
pop
fbstp
xchg
das
or
arpl
adc
cltd
pushf
xchg
lcall
xor
clc
push
stos
mov
iret
cmpsl
push
fcomps
inc
fbld
imul
fs
mov
jp
mov
mov
enter
insb
cmp
int3
fcmove
dec
sbb
leave
test
push
fsts
push
in
notb
jbe
lea
js
loope
lret
stc
cmpsl
bound
test
jge
fidivrl
cltd
mov
or
adc
fimuls
push
adc
fcmove
xor
xor
mov
adc
mov
dec
or
fsubrl
nop
rclb
jmp
xorl
sbb
jl
cld
or
or
adc
jne
insl
xchg
mov
cmp
pop
int3
push
mov
ret
sub
fcmovnbe
push
jne
gs
pop
pop
imul
jb
cmc
insb
mov
fxch
sbbl
popf
mov
lret
sub
adc
popf
or
pop
popa
das
or
inc
add
andl
mov
movsb
push
pop
or
xchg
daa
sti
jmp
lea
xchg
movsb
jge
std
and
es
adc
cmp
and
cmc
or
push
mov
fwait
out
or
sub
and
mov
pop
hlt
and
popl
inc
pop
in
lock
ss
pop
and
mov
roll
lds
sbb
test
jns
test
fdivs
inc
mov
push
repnz
pop
push
jb
or
add
mov
dec
mov
sub
sub
push
data16
mov
mov
sub
inc
mov
mov
pop
lret
inc
add
leave
ret
scas
add
out
pusha
mov
or
add
push
mov
in
cmc
roll
dec
jmp
xor
fistpll
test
je
xor
xchg
lret
movsb
in
mov
orl
xchg
scas
and
clc
fldcw
sub
sub
out
fidivrl
cmp
and
jg
data16
pop
push
das
shll
mov
dec
das
jp
repnz
movsl
fstpl
pop
inc
gs
shll
xchg
shlb
adc
stos
push
push
sub
xlat
lock
arpl
push
rol
xchg
testl
iret
popa
dec
sub
out
or
push
inc
aam
repz
push
adc
ds
mov
push
or
data16
pusha
jge
and
mov
push
shll
pop
inc
adc
push
sub
cmp
pop
addr16
sti
mov
push
sbb
sti
jmp
popa
fisttpl
call
fwait
rcrl
push
int
pop
dec
mov
mov
push
shl
xchg
or
popf
leave
jbe
nop
mov
pop
je
out
jp
pushl
push
scas
jns
pop
dec
push
jno
lods
jecxz
lock
imul
adc
lret
divl
push
adc
dec
sub
or
sar
fwait
aad
loop
rorb
or
and
jge
push
fldl
nop
fldt
in
push
in
popf
fistps
movsb
stc
adc
test
or
leave
inc
fidivrl
add
ljmp
and
ss
push
mov
in
iret
faddl
ljmp
ljmp
cmp
jno
pop
xchg
cmp
xchg
mov
lock
in
les
test
push
sub
xchg
stos
rcrl
xor
out
testb
adc
test
sti
daa
test
test
fimuls
adc
cmpsl
dec
call
pop
ljmp
jb
push
xor
js
fildl
stos
js
sub
push
mov
add
fmull
adcl
jb
mov
or
mov
sub
mov
pop
jns
cltd
test
jle
add
cmpsb
movb
mov
jne
lea
nop
aam
iret
mov
xor
dec
ds
push
xor
stos
gs
mov
test
scas
adc
or
icebp
test
int3
dec
xchg
mov
shlb
jge
clc
push
xor
inc
xor
lock
aam
cltd
xchg
mov
pop
sub
loop
jo
fmuls
sub
test
or
or
or
je
push
and
sub
jb
imul
add
dec
bound
test
aam
push
inc
jle
jb
jne
bound
jge
mov
push
xchg
je
xlat
xorb
popl
and
sub
ss
and
mov
shlb
or
in
ds
or
mov
pop
popa
dec
fdivr
mov
imul
inc
mov
mov
aad
ljmp
repnz
lods
dec
movsl
xor
sti
aaa
mov
out
xor
fistpll
xor
sar
mov
mov
arpl
add
inc
lcall
cmpsl
mov
mov
fwait
in
pop
aas
imul
pop
ds
sbb
jbe
mov
xchg
enter
bound
repnz
xor
xchg
popf
test
push
dec
jnp
mov
dec
scas
and
mov
jmp
negb
ja
fsubs
push
lds
xlat
stc
push
sub
gs
pushf
cmpsb
ja
pop
nop
xchg
or
jmp
xor
test
dec
mov
ja
jle
repz
pop
lods
adc
sahf
test
test
xlat
jae
xor
xchg
stc
mov
mov
mov
test
jmp
hlt
jge
bound
jns
push
sub
sarb
in
sahf
test
and
adc
sub
adc
jecxz
or
cli
cwtl
xor
arpl
mov
mov
pop
mov
int
jnp
xlat
stos
jns
pop
cmp
in
cmc
inc
mov
and
mov
clc
mov
in
and
dec
inc
rolb
adc
test
mov
shlb
sub
xorb
pop
dec
inc
xchg
mov
cmc
mov
ret
mov
push
cli
inc
cli
jae
lcall
pop
stos
enter
mov
mov
jae
daa
jmp
adc
shl
cmpl
lahf
mov
pop
cmpsb
cmc
push
je
cwtl
orl
in
or
mov
cs
nop
push
pop
push
rorl
mov
gs
mov
cs
fsub
int
mov
scas
cmp
sbb
inc
push
cmp
xchg
cmp
xchg
mov
push
das
pop
add
out
lret
mov
shll
je
sub
inc
pop
mov
cmpsl
outsb
popa
stos
mov
sub
ret
ret
jns
dec
and
or
fnstsw
sbb
dec
adc
ret
lret
or
in
dec
data16
loope
dec
test
mov
cmp
mov
add
movl
test
mov
sub
mov
fisttpll
fdivs
push
dec
ja
test
push
and
pop
sbb
adc
aad
scas
cwtl
test
xchg
cs
fwait
push
sub
xchg
insl
dec
add
xchg
mov
mov
negb
daa
test
test
pusha
sbb
lock
or
aam
out
xor
mov
arpl
je
out
mov
scas
push
fldcw
adc
mov
or
mov
stc
fcmovnu
jg
sbb
pushf
inc
add
dec
movsl
xchg
inc
in
insl
push
scas
subb
int
add
pop
add
call
negl
lahf
inc
aad
fstps
bound
jp
jno
popf
in
mov
ljmp
xchg
inc
movsl
xchg
mov
leave
pop
cld
leave
push
into
mov
out
push
push
pop
fistps
sub
scas
cmp
orl
mov
dec
loop
int
cmp
xor
adc
test
xor
je
sub
aam
sub
xor
pop
sbb
ja
lea
dec
mov
mov
and
xor
add
dec
fucomi
dec
popa
cs
je
mov
jecxz
jno
xchg
test
mov
rolb
jae
fs
test
in
in
aad
sbb
push
ret
pushf
mov
sahf
call
scas
add
in
iret
sub
ss
lea
lock
ss
cltd
dec
mov
mov
mov
adc
loopne
imul
mov
in
xchg
xchg
mov
dec
pop
jge
ret
shlb
add
mov
mov
jbe
jg
das
insb
cld
cs
jnp
sbb
notl
sub
mov
outsb
mov
and
mov
cmp
data16
dec
fisttpll
mov
push
mov
aad
and
push
inc
nop
mov
push
push
bound
daa
adc
xlat
adc
popa
xchg
cmp
hlt
insb
gs
pop
and
test
xor
stc
lret
mov
adc
push
rcrb
bound
cmp
shl
add
sbb
or
sbb
icebp
add
scas
inc
xchg
into
jns
pop
fxch
test
push
lock
dec
jo
mov
cltd
jecxz
and
mov
inc
das
or
test
rorb
xchg
jl
pandn
ucomiss
lea
leave
jbe
adc
mov
sub
sbb
das
outsb
pop
test
sahf
subb
mov
mov
cltd
out
lods
fldenv
xor
decl
rcll
dec
insb
xchg
cmp
add
mov
xchg
sbb
shl
sub
xchg
js
inc
jo
bound
inc
xchg
lahf
add
inc
and
shlb
sbb
mov
es
rol
inc
ds
cs
add
pop
mov
push
aaa
mov
xor
icebp
sub
and
sbb
mov
scas
adc
and
pop
es
jecxz
adc
xor
aaa
lea
adc
mov
pusha
push
or
mov
or
or
xchg
lret
inc
fwait
xchg
pop
push
stos
jle
and
dec
xchg
scas
sub
jnp
lea
into
mov
cmc
aam
dec
es
cmp
insl
xlat
test
pop
jae
inc
jmp
shl
loop
xchg
nop
fadds
rcl
pop
cli
mov
negb
xor
gs
cmp
push
sub
jp
pop
lahf
lock
inc
adc
add
shl
or
leave
xor
jecxz
dec
lds
ljmp
push
into
lret
push
mulb
add
jne
xchg
testl
out
cmp
jno
les
aas
mov
and
fdivrs
lcall
imul
xchg
add
in
rcrl
bound
ficoms
cmp
jne
cs
outsb
xchg
fisubrl
or
lcall
pop
mov
and
pusha
pop
int
adc
cmp
sub
lods
lret
dec
dec
repz
xchg
mov
push
or
aad
sbb
pop
pop
pop
jle
xor
addl
in
mov
xor
je
xor
jnp
popf
xchg
or
lahf
iret
xor
push
test
pop
jle
std
daa
enter
pop
fcmovnb
ret
sub
out
pusha
push
mov
sbb
add
jo
xchg
jno
stos
push
inc
mov
mov
xchg
jmp
jg
imul
les
mov
hlt
loopne
or
int3
or
mov
in
mov
xchg
aad
mov
repz
shll
mov
dec
mov
push
mov
out
xor
inc
mov
dec
push
mov
push
roll
mov
xor
std
mov
in
mov
mov
test
sbb
aaa
jo
stos
mov
jl
cmp
sbb
les
add
or
lock
fnstcw
lds
or
scas
ret
imul
repnz
pop
adc
idiv
gs
int
push
pushf
jecxz
arpl
dec
xor
roll
movsb
mov
pop
jo
xchg
sahf
ja
and
aad
call
sbb
fwait
pop
ss
notl
mov
shl
shl
jp
and
stos
or
in
dec
adc
xchg
or
jmp
fcoms
test
jp
add
add
xchg
sbb
fdivrs
push
xor
adcl
xchg
mov
stc
mov
mov
pop
adc
mov
repz
sarl
faddl
hlt
or
pop
adcb
push
mov
push
adc
mov
pop
outsl
xchg
jns
mov
xchg
in
push
push
xor
int3
inc
and
or
jle
stos
imul
lds
jb
adcl
sbb
cli
aaa
inc
sub
leave
jmp
mov
jp
rorl
shr
jl
jb
loop
lods
out
nop
push
in
movsb
sub
rclb
ud2
jne
lret
jbe
mov
mov
loop
xchg
xchg
inc
push
xchg
imul
lret
lods
div
out
insb
shlb
sub
sahf
and
lods
icebp
adc
xchg
push
dec
push
sub
push
or
and
lods
cmp
int
ss
and
push
ss
jge
xor
xorl
jo
xchg
aam
mov
xor
lods
jns
or
fidivl
ljmp
xor
xchg
push
and
imul
cwtl
adc
imul
or
mov
sbb
je
popf
andb
pop
fcoml
loopew
fistpll
dec
sub
xchg
mov
sbb
push
fdivs
xchg
push
xchg
adc
loope
daa
or
adc
mov
inc
enter
xor
inc
outsl
mov
lahf
int3
mov
pop
jge
inc
or
rcrb
xchg
mov
or
xor
pop
adc
dec
mov
sub
jae
mov
lretw
dec
loope
ljmp
call
xchg
adc
cmc
dec
cltd
mov
mov
sub
xor
fdivl
fs
mov
fstpt
bound
xor
push
jne
pop
adc
iret
stc
test
test
ficompl
std
mov
repnz
shll
mov
gs
into
and
cltd
mov
addb
adc
shlb
xchg
sahf
mov
push
fcomip
jg
sub
ja
andb
or
jecxz
aam
ljmp
ss
inc
xchg
sub
dec
out
mov
es
sahf
stos
mov
ljmp
or
stos
sub
lea
imul
lods
jno
or
imul
movb
push
sbb
jle
add
gs
int3
mov
mov
add
test
cld
cmp
mov
pushf
aam
lea
add
lock
pop
jns
in
mov
aam
push
push
sub
mov
push
and
dec
dec
pop
insl
lret
sub
ret
xor
and
rorl
or
iret
jae
or
loop
sub
mov
adc
sbb
orb
out
addb
and
pushf
icebp
or
test
fidivs
mov
rorb
dec
pusha
scas
or
sbb
cli
outsb
jecxz
imul
cmc
loopne
out
jecxz
fiadds
cmp
fcmovu
xor
clc
mov
je
or
stos
mov
fldenv
data16
aaa
and
xchg
fdivl
negl
xor
push
imul
mov
icebp
pop
dec
lea
sbb
cli
jns
into
jno
cmp
js
xor
inc
dec
push
push
stos
cmpsb
mov
inc
cli
cmpsb
mov
out
or
mov
mov
imul
sahf
push
icebp
jns
test
jne
cli
sub
lock
hlt
test
outsb
adc
mov
push
ja
xor
add
inc
test
push
xor
lahf
mov
push
and
shr
mov
jo
mov
pop
mov
push
push
cld
outsb
daa
fldenv
cltd
cli
das
and
mov
mov
out
xchg
xchg
cmpb
push
xchg
mov
or
add
and
cmpsb
add
pop
cmpsl
std
test
push
sbb
mov
fcmovnbe
add
in
adc
scas
cmp
leave
pop
rcrb
aam
or
loopne
sub
cli
adc
pop
scas
arpl
leave
enter
jmp
daa
xor
es
xchg
pushf
stos
imulb
xchg
in
dec
or
xchg
dec
inc
push
and
adc
lret
inc
in
jmp
test
loopne
ds
xchg
stos
xor
bound
orl
xor
and
mov
testl
jg
scas
and
inc
mov
insl
fcoml
xor
push
arpl
outsb
cwtl
cmpsb
xchg
jo
jae
fidivrs
dec
nop
xor
jae
jo
inc
bnd
jl
add
push
and
pushf
test
into
int3
mov
stc
or
lock
mov
pushf
jge
push
je
mov
lret
stos
mov
jbe
test
jecxz
jno
out
in
mov
repz
enter
ja
je
ret
jo
mov
je
std
dec
es
push
cmp
add
dec
in
out
out
jecxz
mov
push
mov
and
push
fwait
mov
in
jbe
jecxz
mov
dec
dec
cwtl
shrl
mov
stos
xor
xor
pop
push
mov
mov
ss
ret
cmpsl
iret
lea
pop
imul
jns
mov
sbb
jle
mov
jne
bound
sub
mov
js
xor
pop
adc
xor
ficoms
sbb
sub
or
popf
xor
xor
out
outsl
ljmp
pop
fbstp
mov
mov
test
fidivrl
test
push
jmp
jecxz
test
push
or
jge
xor
orb
popl
shll
test
xorl
cmpl
sarb
jno
and
fistps
lods
dec
repz
mov
xor
dec
xchg
ljmp
cmp
orl
lock
dec
cmp
ds
shl
sbb
movsb
pop
mov
fcomp
das
sub
stos
pusha
mov
andl
mov
adcb
xor
pusha
xorl
pop
adc
xchg
int
pusha
mov
bound
aam
mov
or
adcb
out
adc
shll
cmpsl
bound
jb
fisubl
cmp
andl
sbb
adcb
icebp
lds
add
jb
out
adc
xchg
mov
lahf
std
mov
mov
cmp
aas
adc
inc
push
inc
in
cmp
cmp
cmp
mov
or
rorl
insb
mov
xor
fidivl
xchg
sub
cmp
jno
outsb
xor
jmp
pop
pop
in
cmp
xlat
and
dec
cmc
and
rcr
popa
mov
outsl
pusha
mov
jne
ret
test
data16
mov
out
sub
enter
dec
pop
jl
out
int
hlt
stc
push
jns
push
f2xm1
sahf
push
daa
pop
incb
cmc
push
pop
and
mov
std
pop
sarl
xor
dec
pop
push
imul
xchg
leave
stos
pusha
fsts
outsb
js
xchg
jae
xor
dec
hlt
loopne
push
mov
movsb
and
push
mov
mul
stc
in
sti
sbb
in
mov
fst
sub
lds
pop
sbb
pop
and
jo
pop
je
mov
jo
and
sahf
loope,pn
inc
lea
ljmp
das
dec
pushf
insl
mov
sub
cmpsl
inc
imul
xor
loop
mov
ret
xchg
mov
loope
insb
stos
sarl
or
fisttpll
pop
scas
push
lret
xor
stc
and
out
jge
rcrl
sub
shll
mov
dec
xor
and
dec
stos
mov
fmull
xorb
filds
xchg
jge
push
in
xchg
mov
or
aas
in
into
inc
fcoms
test
jbe
mov
push
sti
aaa
jns
pop
aad
pop
sbb
pushf
jno
add
sbb
or
lcall
push
repnz
arpl
cld
test
cltd
push
xchg
sti
loopne
fistpll
orl
mov
adc
call
je
sub
pusha
les
call
cmc
and
cmc
fdivr
mov
fs
pop
add
fdivrp
jno
mov
xor
or
cs
xor
out
movsb
add
and
adc
mov
xlat
sub
xlat
xlat
ds
jecxz
sbb
add
cmc
jne
stos
push
jae
cs
adc
loop
push
int3
aaa
lock
loop
or
lds
test
mov
pop
mov
cmp
cmpsb
fmulp
lds
sbbb
cmpsb
mov
xchg
or
cmp
dec
mov
lods
repz
cld
into
stos
inc
add
sub
xchg
aaa
push
push
mov
outsb
popf
fchs
cmpsw
mov
inc
popf
in
test
test
push
rcll
jp
in
arpl
jbe
inc
jb
movsl
mov
ss
iret
cmp
cmp
adc
stos
aad
out
arpl
fisttpll
lea
nop
or
add
sub
push
inc
xchg
andl
gs
scas
data16
pop
pop
shrb
test
pop
mov
or
jno
or
xchg
out
xchg
jle
mov
sbb
xchg
ljmp
in
adc
std
push
imul
insl
mov
inc
inc
stos
out
push
xor
or
sub
lea
and
std
xchg
ficompl
pop
adc
and
call
jbe
jns
xor
gs
and
mull
jae
jecxz
int3
leave
cmc
bound
jb
popf
cli
mov
les
add
scas
adc
repz
rcll
gs
lock
and
push
aad
mov
scas
xor
sbb
sub
ficompl
cmp
arpl
cmc
out
int3
cs
aad
mov
mov
sbb
mov
in
and
scas
bound
sub
fsubrs
dec
and
out
aad
sub
scas
pop
mov
stc
push
test
xchg
push
adc
sti
push
inc
insl
or
or
push
dec
daa
movsl
inc
push
orl
mov
mov
pop
xchg
lock
stos
hlt
cs
outsl
lods
xchg
aam
rorl
lahf
popa
shlb
add
in
xchg
mov
jbe
push
xchg
stos
xor
sub
mov
and
mov
pop
lods
add
mov
jbe
jb
gs
jg
out
push
xor
sbb
or
enter
jne
inc
jo
nop
dec
push
or
scas
rcr
inc
bound
xorl
aaa
xchg
cmp
jne
sbb
mov
sub
mov
cmpl
fists
repz
addl
sub
loopne
mov
xchg
jmp
and
dec
out
jne
and
negb
bnd
sbb
or
test
adc
ret
mov
mov
push
inc
mov
pusha
or
fcoml
push
dec
cmp
aaa
lods
jo
test
xor
xchg
ret
adc
shll
insl
jmp
popa
xchg
push
inc
lods
popf
push
lods
cld
lret
fildll
sub
or
inc
mov
pop
sahf
jo
inc
jmp
notb
mov
outsl
mov
mov
xchg
pushf
and
ja
xor
or
adc
mov
sub
or
push
loop
lods
push
mov
sbb
mov
loope
in
jle
mov
xor
mov
hlt
inc
add
push
or
dec
iret
pushf
iret
pop
ljmp
imul
pop
in
shrl
out
andb
dec
jmp
push
add
insl
inc
outsb
pop
pop
xor
adc
int
xlat
jns
cmpsl
push
push
ret
fiadds
aaa
mov
sub
sub
push
inc
adc
scas
daa
mov
jg
fiaddl
mov
aaa
clc
std
inc
scas
nop
lds
fistpll
mov
xchg
adcb
or
add
fisttpll
pusha
out
frstor
fadd
dec
out
xchg
int3
mov
loope
mov
cmp
mov
xchg
mov
stos
or
dec
xchg
shl
pop
xchg
mov
jne
imul
aam
repnz
ja
data16
inc
std
lods
mov
loope
mov
or
sbb
jne
iret
jbe
jp
add
fcomip
inc
leave
cmp
inc
adc
rclb
mov
push
and
jo
lcall
cmpl
xchg
div
sbb
push
repz
jecxz
das
adc
test
sahf
ljmp
xchg
shrb
lcall
into
insb
sub
fst
stos
inc
and
mov
daa
mov
sbb
inc
test
or
mov
ds
mov
repnz
jp
mov
jns
or
dec
cmpsb
jmp
xor
test
imul
outsb
insb
inc
popa
xor
es
push
scas
lds
fisubrs
push
movsb
push
push
push
mov
xor
mov
and
sub
rorl
push
xlat
js
fxch
cmpsb
sub
or
or
mov
cmp
and
push
pusha
out
adc
inc
jp
cmp
push
or
les
pop
arpl
sbb
inc
push
xor
push
dec
jmp
icebp
aad
mov
push
dec
jle
jno
mov
stos
mov
fadds
pop
mov
roll
mov
int3
and
and
push
or
insl
inc
and
out
and
inc
mov
dec
mov
pusha
js
jae
addr16
jnp
in
jmp
mov
jp
mov
test
cmp
cmpsb
loop
dec
loop
mov
mov
xor
cltd
push
stos
jnp
subl
rcrb
jp
cwtl
xor
fnstcw
movsl
imul
or
stos
add
jecxz
push
mov
in
repz
jge
loop
stos
fcomps
cwtl
iret
or
test
cmpsl
dec
imul
rcll
fldenv
test
sbb
outsl
and
push
jl
mov
stc
ret
cs
rclb
test
lcall
pop
inc
pushaw
xchg
xor
mov
push
jo
adc
aas
or
scas
sahf
mov
mov
xor
jmp
pop
jl
ds
addr16
and
gs
mov
ja
mov
imul
lret
daa
xor
mov
ret
jne
pop
orl
insl
or
pop
out
inc
xchg
dec
ljmp
or
es
add
xchg
push
loopne
xorl
push
loope
scas
out
aam
fstps
cld
leave
mov
or
ret
aam
push
in
bound
mov
repz
rcll
roll
sub
insb
sbb
test
mov
jle
or
lahf
imul
mov
aaa
mov
les
sub
lock
lea
js
xchg
fisubrl
aad
ret
push
jmp
mov
push
sbb
xchg
mov
sub
orl
inc
aas
setp
cmpsl
inc
and
idivb
imul
push
int3
xor
push
shll
jp
pop
cwtl
push
psubw
loope
fiadds
call
dec
mov
add
inc
adc
faddl
mov
lcall
cmpsb
test
stc
in
xchg
aaa
dec
xchg
fstpl
push
es
jmp
or
fucomip
lods
sub
inc
cmp
and
push
xchg
movsb
sub
out
cld
pop
inc
loope
inc
add
pop
cmp
pop
pop
pop
pusha
sub
outsl
aaa
fwait
rolb
adc
xchg
stos
cltd
arpl
mov
pop
lcall
aaa
xchg
int3
jo
int3
push
inc
loop
xchg
movb
mov
in
loop,pn
cmc
rcr
add
xchg
sub
mov
sub
mov
inc
add
jns
add
sub
or
push
mov
outsb
or
cmpsb
push
or
sbb
inc
subl
sub
test
cmpsb
xchg
xchg
sub
mov
sbbb
ret
insb
ja
jle
mov
mov
aad
push
fwait
clc
enter
icebp
jno
rcrb
rol
jne
mov
xor
enter
clc
jne
xor
call
push
mov
es
cmpb
jl
xchg
ds
jg
ljmp
pop
rclb
icebp
mov
ljmp
pop
stc
dec
or
dec
dec
sbb
and
jno
cmpsb
ljmp
mov
mov
cli
or
adc
mov
or
pop
jecxz
add
ret
cmp
lret
repnz
xchg
hlt
mov
mov
dec
std
xchg
out
adc
stc
xchg
mov
les
test
roll
dec
dec
stos
inc
repnz
faddp
and
xchg
je
mov
sti
imul
jge
test
jne
mov
or
out
data16
jge
or
cmp
popa
or
jne
dec
fldcw
in
faddl
mov
popa
fisubs
adc
mov
orl
mov
cltd
mov
outsl
call
loop
xor
lret
inc
shrb
dec
pop
xchg
xor
das
lcall
dec
push
or
fstl
stos
fiadds
clc
xchg
mov
push
adc
sahf
lret
mov
les
jo
dec
stos
out
shll
jl
in
std
add
mov
orb
mov
test
jns
ret
adc
mov
mov
shll
mov
push
ljmp
inc
popa
mov
lret
jmp
add
lods
and
dec
mov
jne
dec
nop
inc
scas
add
mov
in
ja
push
dec
imul
es
jno
scas
ljmp
mov
and
mov
dec
lock
mov
push
inc
push
sbbb
add
push
xchg
lods
add
mulb
lret
pop
dec
out
xor
idivl
or
out
sbb
mov
adc
mov
leave
xor
mul
fcmovb
jnp
mov
cmp
out
rol
inc
mov
test
jl
fisubl
and
aam
test
xchg
jp
repz
lcall
sub
xchg
push
pop
and
les
adc
and
test
sarl
adc
stc
loopne
jmp
sub
mov
fmulp
push
lret
xchg
cmp
jae
xor
ret
inc
xlat
rcrl
popa
int3
loope
jmp
jl
into
cmc
and
shl
xchg
xchg
js
testb
mov
data16
xchg
fidivs
add
xchg
addr16
jns
lock
mov
pop
xchg
sbb
adc
ret
xchg
lods
lock
pushf
fdivs
sti
pop
fidivs
and
xchg
test
mov
xchg
cmpsl
sub
jp
add
add
and
roll
inc
pusha
iret
test
push
sbb
push
dec
stc
sub
fwait
jb
pop
nop
addl
cmpsl
out
jge
loope
xchg
outsl
pop
inc
pusha
decb
pushf
add
pop
je
or
jg
in
clc
mov
dec
jp
sbb
and
shrb
subb
cmp
or
stos
xor
xchg
mov
fwait
dec
dec
xor
pop
add
out
pop
sbb
and
mov
popa
jle
cld
or
xor
sahf
xchg
imulb
ret
stos
imul
mov
xchg
mov
sub
inc
lret
out
xor
cli
loope
fcomps
add
ret
ret
js
add
shll
sahf
stos
enter
cmp
stos
aad
cwtl
lret
subb
mov
lret
and
pop
incl
je
scas
mov
adc
fwait
or
cmp
or
enter
jg
in
in
xor
mov
fs
cmp
sbb
inc
push
and
push
mov
mov
cld
dec
adc
jbe
das
and
jmp
stos
sub
xor
push
sub
repnz
dec
and
das
mov
in
mov
std
jo
adcb
fisttpl
xchg
nop
stos
jmp
and
repnz
cmpsb
ret
mov
ret
insl
repnz
sbb
mov
inc
pop
jmp
mov
adc
push
fldz
mov
or
sub
mov
pop
push
lret
les
push
pushf
push
aam
pop
stos
bound
mov
mov
xor
shrb
push
cmp
jmp
xchg
push
lretw
daa
bnd
pcmpgtd
mov
aaa
das
mov
shl
xor
push
mov
ficoml
das
xchg
or
ss
nop
mov
fcmovnbe
or
sub
cmc
push
sarb
out
test
ja
xchg
sub
push
inc
or
stc
mov
push
push
pop
xchg
add
dec
rep
cmp
xchg
or
out
mov
sbb
push
mov
dec
out
sub
xchg
out
xchg
lret
mov
sub
cmpsb
dec
test
xlat
jmp
daa
xchg
xor
rorb
stos
mov
adc
lcall
cmpsl
fs
test
or
dec
test
sbb
pop
mov
xor
out
jg
push
rclb
cmp
es
inc
movsb
or
fnstenv
cli
enter
test
jno
fst
adc
ja
in
test
xchg
daa
loop
and
sbb
jp
xor
iret
ss
psrad
jmp
lea
mov
or
pushf
and
fistpl
sbb
cs
xchg
dec
js
cmp
leave
sub
fstl
push
inc
mov
lahf
mov
sbb
lods
pusha
imul
inc
mov
test
lea
mov
ss
lret
fldl2e
mov
shrb
mov
jno
push
jb
lcall
mov
andb
mov
mov
lret
jmp
sub
cwtl
mov
dec
lock
push
add
nop
inc
inc
repnz
mov
xchg
les
inc
adc
les
inc
xor
dec
or
int
adc
or
xchg
mov
divl
mov
je
call
adc
lret
dec
or
jp
xor
adc
leave
or
pop
jg
lock
mov
shrb
rcrl
test
inc
sub
shr
pop
dec
jno
and
rolb
leave
sbb
xchg
mov
aaa
adc
ss
push
cld
xchg
sub
mov
jecxz
into
inc
xor
call
fdivp
mov
mov
mov
xchg
repnz
mov
mov
or
cwtl
xchg
cs
xor
arpl
ljmp
add
sub
jno
loope
test
lret
mov
cmp
sbb
lods
inc
dec
jle
dec
fiaddl
jne
add
imul
ds
pop
and
cmp
ljmp
xor
xor
pop
fdivrl
outsl
shll
scas
push
mov
popa
dec
scas
inc
push
sub
aad
es
js
mov
ds
shrl
stos
mov
add
and
sub
ror
incb
or
mov
xor
sahf
mov
or
pop
ja
cmpsb
and
inc
out
test
dec
add
jbe
push
loop
clc
xchg
cmp
js
mov
cs
add
rolb
mov
insl
mov
jbe
mov
pusha
daa
cmp
lret
dec
ficompl
push
dec
fnstenv
add
sbb
les
push
add
shl
mov
enter
imul
lret
idivb
loop
stos
shr
out
xchg
mov
mov
aad
and
cli
mov
add
jmp
jne
mov
mov
loop
sub
push
pop
repz
aas
sub
jbe
scas
lret
cmpsl
inc
bound
daa
or
ret
adc
into
fidivl
xor
or
fnstenv
mov
xorb
or
cltd
loopne
xchg
cwtl
insl
notb
insb
mov
into
mov
push
bound
shll
icebp
sbb
adc
cld
mov
test
subl
push
sbb
mov
rcrl
sbbb
mov
fs
adc
decl
cld
cmp
mov
and
enter
inc
mov
or
stos
push
mov
jb
mov
mov
lock
push
test
ret
repz
jmp
mov
aas
pop
mov
mov
fwait
repz
aaa
xchg
cld
jg
stc
out
push
push
adc
mov
mov
push
mov
lcall
popa
aad
lods
pop
imul
cmp
mov
and
lret
jp
xor
pop
mov
sub
or
mov
adc
jne
sti
sub
insl
xchg
add
aas
sbb
jmp
add
sbb
scas
out
mov
push
add
insb
adc
dec
jge
pushf
pop
jno
jg
xchg
or
call
mov
lahf
mov
aad
rolb
jno
insb
cs
andl
icebp
mov
test
lods
adc
rclb
cmpsl
mov
xchg
sub
stos
jne
jnp
rcll
mov
orl
rclb
sti
xchg
pop
ljmp
test
pop
mov
push
rolb
mov
cmpsl
xor
inc
cld
pop
xchg
repnz
and
xchg
adc
sbb
mov
scas
jg
push
into
loop
mov
mov
subl
mov
lods
test
cli
sub
clc
dec
sub
and
lret
mov
dec
mov
mov
out
mov
out
repnz
iret
out
mov
fisubl
dec
jmp
cli
test
orb
add
lock
leave
sub
mov
sub
out
lahf
outsb
mov
sarl
arpl
mov
xchg
cmpsb
xchg
xchg
cltd
jno
aas
les
pop
cmpsb
test
jl
xor
repz
pop
xor
jno,pt
jmp
add
push
mov
xor
stc
mov
outsl
out
pop
stc
shlb
dec
fstpl
mov
popf
push
pop
and
jnp
xchg
sbb
es
insb
stos
bound
xchg
lods
jb
mov
js
call
mov
shlb
mov
test
jns
mov
psrlq
pop
adc
jl
cmpsl
or
enter
inc
fists
mov
and
cmc
cli
nop
popf
xchg
cmpsb
notl
imul
dec
sbb
xchg
lcall
loopne
jp
mov
stc
and
or
es
mov
push
jge
jne
mov
and
addr16
lock
ffree
cli
cmc
pop
push
das
sub
jp
push
sub
and
mov
jne
andl
mov
arpl
mov
dec
enter
test
xchg
jmp
fdivrs
sub
mov
fbld
subb
out
stos
lret
cmp
fwait
sbb
mov
xlat
jp
mov
mov
cmp
jbe
cmc
sbb
push
pushf
xchg
fisttps
pop
xchg
rcrl
cmp
ror
and
enter
ss
pop
aaa
add
dec
pop
push
aam
not
xchg
sahf
dec
fwait
mov
pushf
iret
rorl
sub
in
inc
cmp
in
fs
xor
cmp
push
int3
loope
lret
incl
pop
test
cmp
dec
movsb
fisttpl
repz
push
xchg
mov
scas
mov
das
popf
call
sub
sbb
push
out
ljmp
popa
inc
cmp
jge
popa
push
xchg
push
es
test
out
cmpsl
int3
test
sarb
test
xchg
push
mov
cmpsl
fmuls
xchg
sbb
cmp
dec
movsb
shll
std
sub
or
or
imul
out
es
xchg
and
sub
xlat
pop
lahf
imul
mov
push
and
rorl
ljmp
outsl
das
cmp
jge
inc
cmc
aas
ss
fidivrs
testl
xchg
jo
add
and
in
out
lds
sbb
je
inc
je
add
dec
nop
cmp
mov
into
lret
sbb
mov
push
aaa
cmp
push
inc
inc
xchg
fwait
pusha
lds
dec
jbe
dec
loop
stc
shl
imul
sub
jl
loopne
loope
mov
mov
mov
or
mov
push
imul
stc
sahf
lcall
roll
cmp
out
movsl
int
pop
scas
aas
xchg
dec
or
mov
cmpsb
ret
into
inc
xor
xor
or
les
repz
and
push
fwait
sbb
mov
insb
mov
mov
stos
ret
es
jno
das
and
jg
repnz
sub
add
bound
test
xorb
ljmp
and
leave
add
stc
jb
stos
sub
or
into
aad
xchg
jbe
aad
mov
ffree
add
sbb
mov
xchg
sbb
sub
xchg
lock
mov
mov
lds
rcrb
subl
adc
xlat
mov
pop
mov
jno
mov
push
in
jbe
notl
sbb
sbb
cltd
or
dec
mov
and
xchg
lods
add
loope
jo
mov
xchg
mov
sbb
fcmovbe
cwtl
jp
aam
add
xchg
incb
lods
add
mov
mov
and
int
test
sub
sbb
out
lcall
dec
sub
inc
push
ss
fnsave
test
int
fimull
xchg
sti
nop
or
xchg
fsubs
adc
jno
test
inc
adc
pop
imul
sub
insl
shll
pop
cmp
lods
jns
push
ficoml
punpcklwd
cmc
add
test
frstor
aaa
andl
stos
push
mov
xor
pop
mov
imul
enter
jp
push
cmp
test
fcmove
push
jl
adc
addr16
xor
or
sub
cmpsl
push
and
in
call
adc
pop
xchg
jno
aad
sbb
lods
inc
stos
rcrl
cmpsl
and
dec
shrb
data16
cmp
mov
ficomps
pop
int
add
push
leave
in
orl
lods
pop
bound
and
sub
aad
lret
cwtl
repz
cmp
stc
aad
and
mov
mulb
xor
int
dec
mulb
outsb
sbb
mov
sbb
and
fstp
xchg
mov
fsubl
mov
fwait
pop
arpl
or
cli
popa
lea
or
cmpsb
fbld
cwtl
dec
aas
add
jae
outsb
out
cmpsb
sarl
repnz
and
mov
mov
cmp
rol
jg
into
lret
sbb
and
or
xor
insl
and
test
repz
ja
push
mov
movsl
sub
jle
xlat
cltd
test
rcl
movsb
lock
push
scas
test
jno
sbb
add
cmpsl
pushf
jle
rolb
push
adc
lds
inc
xor
ret
dec
sub
or
ljmp
int3
xchg
fnstsw
lret
aam
or
jno
sbb
cs
cmp
fsts
les
xchg
or
xchg
mov
jne
or
inc
fwait
adc
int
mov
stos
inc
mov
cmp
xlat
mov
dec
in
int
mov
push
mov
scas
xor
sub
add
roll
addl
mov
jae
mov
mov
fsubrs
push
add
ljmp
sbb
mov
cs
faddp
jle
insb
aad
ficoml
xor
push
test
stos
or
in
dec
or
ljmp
cli
int3
sti
out
inc
mov
mov
fbld
mov
in
es
nop
adc
loop
or
fbld
mov
adc
test
xchg
jge
push
xor
push
aaa
push
sub
push
popa
fidivl
jg
pop
xchg
lods
inc
fcmovnbe
pop
xchg
lcall
in
xchg
pusha
in
sub
xchg
xchg
xchg
bound
in
test
fstl
es
and
and
sub
clc
ljmp
aad
out
cwtl
push
andl
dec
add
or
xchg
ffreep
mov
pusha
int3
dec
cmp
popf
inc
popa
or
pop
lcall
es
mov
mov
stos
das
and
dec
outsl
jle
adc
mov
nop
xor
adc
xor
xchg
lods
and
data16
loop
and
fstpl
fisttpl
test
jno
ja
dec
jne
xor
in
enter
nop
xchg
fimull
jno
adc
mov
fwait
ror
xchg
mov
or
or
dec
insb
push
mov
inc
cmp
icebp
lahf
and
push
loop
mov
icebp
push
xchg
push
stc
mov
subb
push
inc
mov
mov
or
outsb
and
jne
mov
in
mov
jb
xchg
mov
cld
mov
add
add
ret
or
jecxz
push
test
shl
add
loop
scas
adc
dec
repz
mov
xchg
lcall
adc
sub
dec
pop
andl
xchg
jno
imul
xchg
add
mov
test
add
les
in
add
xchg
xchg
loop
cmp
mov
aam
lea
sarb
addl
cmp
outsb
xrelease
out
add
fwait
push
dec
fcomps
jecxz
nop
and
mov
mov
ds
sub
add
mov
dec
loopne
sbb
lret
sbb
xor
inc
lcall
push
gs
xor
movsb
sub
jne
fmull
inc
xchg
mov
adc
imul
insb
sbb
arpl
ljmp
lcall
in
pop
push
out
cmc
push
mov
loope
idivl
xor
mov
in
das
popf
sub
sahf
enter
mov
cmp
into
mov
loope
push
jmp
loopne
call
sub
and
scas
push
dec
sbb
lods
lock
adc
stc
loop
bndstx
fisubl
xor
clc
call
loope
xchg
sub
mov
jo
xor
pop
dec
pusha
xchg
sub
fildll
xlat
or
mov
cli
push
lods
ljmp
and
inc
test
stos
fld
and
mov
fdivrs
sub
push
test
jle
xor
mov
mov
test
imul
jmp
sub
aaa
add
outsl
cld
ds
out
sbb
stos
pop
hlt
push
mov
pop
movsb
jno
adc
out
scas
fnstsw
rol
inc
je
lcall
sub
or
call
mov
pop
sub
xlat
les
adc
inc
cmpsl
cwtl
cwtl
ljmp
jp
push
xor
xchg
cmp
add
std
dec
ja
inc
mov
dec
inc
shrl
or
cmp
jecxz
xchg
test
pop
mov
mov
xchg
mov
dec
ss
sub
xchg
insb
shrb
push
add
pop
ror
mov
bound
mov
jmp
bound
pop
cwtl
mov
popa
lock
scas
cmpsb
je
in
imul
jge
mov
je
mov
or
mov
fadd
inc
out
jp
daa
mov
or
fcmovbe
inc
mov
cmpsl
lods
dec
cmc
inc
add
xchg
iret
sbb
mov
push
mov
in
mov
cli
inc
adc
and
mov
sbb
adc
xchg
adc
out
fs
test
push
aad
mov
cmp
shr
jns
ss
dec
or
push
enter
dec
add
and
add
iret
xchg
and
stos
mov
arpl
or
nop
and
xor
adc
xchg
or
xlat
xchg
lods
cbtw
cmpsb
loopne
inc
mov
ss
lret
jns
out
adc
pop
jnp
aaa
push
add
dec
jno
out
icebp
lea
xor
sar
mov
mov
imul
int3
por
or
andb
pop
xchg
repnz
insl
add
lods
xlat
lock
xor
test
pusha
cmp
cmp
and
jge
xor
inc
arpl
insl
jne
stos
adc
andb
inc
mov
in
jno
jg
fsubrs
mov
adc
add
xchg
cmc
xchg
fmuls
lea
inc
stc
dec
add
mov
jl
mov
sub
test
andl
test
adc
sbb
dec
clc
xor
dec
sbb
loop
or
fadds
sub
push
ljmp
inc
je
daa
sbb
outsb
fcmovne
addb
sub
mov
repz
shll
pop
or
push
jle
pop
mov
mov
sub
punpckhwd
and
loop
lret
add
test
sti
cltd
xchg
lods
ljmp
jo
adc
xor
cmpsb
sti
je
jo
jp
mov
mov
stos
test
mov
lret
ficoms
cmpsl
in
stos
daa
jno
cmp
inc
dec
push
adc
jo
mov
into
test
sahf
pop
mov
cmp
mov
outsb
push
sub
jl
mov
push
aas
xor
cmp
out
repnz
jns
hlt
push
sahf
fcmovu
or
and
fwait
dec
lret
sahf
icebp
cltd
ljmp
sub
mov
dec
ret
mov
and
and
xchg
cmp
fnstcw
fistps
sub
mov
add
in
cmp
xorb
mov
mov
aaa
bound
fisubrs
aad
testl
xchg
ds
subl
xchg
cmp
clc
or
popa
pop
repz
stc
xlat
std
pop
movsb
enter
in
push
xor
mov
stos
push
mov
fcompl
and
inc
xchg
out
pop
das
dec
jge
xor
in
push
loop
jne
or
sarb
xchg
andb
jmp
cltd
iret
push
jle
fxch
scas
fiaddl
mov
pop
jp
pop
sub
fildll
addr16
pop
xor
jp
int3
and
mov
mov
or
mov
xor
xchg
push
cltd
fucom
out
mov
xor
cmpl
inc
sub
fimuls
jno
jmp
sub
lret
inc
or
lret
test
arpl
or
inc
xchg
daa
lods
loopne
fidivrl
push
stos
subl
enter
add
push
das
lods
mov
stos
mov
sub
movsl
pusha
mov
mov
cmpb
dec
xchg
iret
or
fistps
inc
sbb
stos
mov
enter
scas
mov
lcall
adc
mov
sub
mov
and
andl
pop
mov
add
out
lret
pop
pop
mov
dec
xchg
adc
mov
fucomi
mov
mov
shll
ds
stos
adc
loop
mov
cld
and
jae
fnsave
add
jb
jp
xchg
lods
xor
scas
dec
fildl
nop
xchg
mov
fmull
mov
cmp
dec
xor
jge
inc
xor
enter
cld
mov
jb
or
fnsave
aam
sub
aam
fnstenv
psubd
cs
stos
or
fisubrs
sbb
adc
js
fcmovnbe
inc
cli
sub
jecxz
add
xchg
mov
adc
lea
lret
jae
jmp
add
cmpb
ss
pop
mov
mov
dec
iret
int
sub
es
or
pop
in
test
sbb
out
stos
rcll
cmpsl
jns
sub
addr16
test
incl
stos
mulb
pushf
adc
leave
pop
add
add
icebp
xor
mov
jg
cmp
sub
aam
in
push
es
jle
xchg
inc
xchg
and
loope
jns
jno
data16
jne
sub
jb
adc
test
shlb
or
addr16
sub
mov
mov
mov
mov
mov
adcb
fwait
sub
pop
rcr
inc
fildl
pop
repz
inc
cmpsl
add
lods
or
divl
call
push
jnp
cld
jb
sub
inc
inc
ljmp
jge
roll
sarb
pop
rol
xor
out
dec
mov
cltd
mov
movsb
mov
mov
mov
ja
pop
jmp
cli
add
pop
pop
fnsave
jl
sub
xchg
ds
sbb
ljmp
test
xor
movsl
inc
mov
jge
test
xchg
add
neg
mov
mov
cmc
insb
fstpt
fidivs
xchg
add
xchg
sbb
xchg
pushf
mov
and
shrb
mov
andl
mul
dec
jno
lods
scas
jae
inc
loopne
ds
sbb
iret
mov
sbb
pop
imul
push
xor
mov
sbb
lahf
fmul
jno
adc
cs
push
mov
cmp
xchg
cmpb
xchg
es
xchg
pop
mov
mov
jmp
jo
xchg
inc
shll
jmp
jnp
jno
sub
fsubrl
cmpsl
xchg
test
sub
loop
lahf
ds
jne
enter
xor
fs
or
mov
fwait
jp
push
and
loop
out
xchg
dec
mov
cltd
rorb
dec
inc
sti
jg
jecxz
adc
stos
fnstenv
xor
push
insb
mov
pop
and
insb
fildl
fstl
sbb
cmp
out
pushf
mov
outsl
aam
aad
fwait
nop
cmc
mov
add
or
pop
xor
cmpsb
sub
cmp
adc
frstor
xchg
mov
adc
out
lret
mov
fisttps
mov
repnz
icebp
jbe
mov
fistps
je
dec
mov
mov
lahf
mov
add
mov
inc
repz
int3
add
aaa
icebp
sbb
cmc
enter
test
out
push
fisttps
dec
mov
mov
xchg
aaa
sub
sub
xor
add
xchg
cld
jne
les
xor
jge
sub
roll
jl
or
adc
push
aaa
pushf
mov
out
js
pop
out
mov
int3
mov
out
sub
mov
push
mov
cmp
mov
jecxz
xchg
xchg
notb
lds
lcall
inc
das
aaa
add
in
subl
sub
add
cmpsl
xchg
xor
ljmp
cmp
sub
stc
mov
push
fdivs
push
mov
xor
fldl
pop
and
aam
jecxz
xor
xchg
xchg
arpl
mov
cld
cld
ss
push
cli
adc
fisubl
clc
scas
mov
shll
imul
sbb
mov
lret
or
sahf
cmpsb
insb
loop
lock
or
xchg
inc
lds
pop
cld
dec
mov
or
mov
xacquire
fcoms
mov
scas
insl
mov
push
les
icebp
inc
mov
cmpsb
dec
cli
lret
add
push
aam
movsb
test
sub
sbb
sub
and
lret
or
cmp
pop
jge
ret
sub
dec
lea
or
in
xchg
addr16
adc
out
lods
mov
imul
sti
mov
ret
je
scas
in
cmp
sbb
add
sarl
nop
mov
add
gs
movsb
add
leave
sub
movsb
cmc
bnd
or
cmp
sbb
xor
dec
pop
push
repnz
adc
mov
sub
or
cltd
pop
dec
jo
push
xchg
jns
push
and
xlat
and
jmp
ljmp
out
mov
mov
aad
push
popf
mov
imul
mov
movsl
sti
aas
call
popa
or
mov
xchg
jnp
fwait
push
stos
lock
daa
xchg
lock
pop
test
xchg
cli
mov
mov
sub
sub
test
jge
dec
aad
imul
imul
int3
test
mov
cwtl
or
cmp
pop
sbb
cmpsl
shlb
mov
jg
and
jnp
cmp
scas
inc
scas
lcall
pop
jbe
push
or
sbb
call
int3
pop
insl
dec
ret
mov
scas
lds
push
imul
addr16
popf
pop
out
jge
mov
leave
sub
out
jno
shlb
cmp
xor
mov
cs
ljmp
sub
scas
stos
xor
mov
sahf
jecxz
dec
imul
cmp
cwtl
pop
hlt
lahf
cmp
fdiv
out
xor
xchg
lret
mov
rolb
nop
enter
sbb
test
imul
jecxz
pop
pop
jg
inc
filds
lds
xchg
outsl
mov
jns
add
dec
stos
mov
insb
out
loope
in
dec
pushf
call
pop
popa
fmull
cld
mov
es
dec
or
inc
jmp
rcrb
or
mov
mov
and
out
jb
inc
and
lcall
arpl
scas
xchg
iret
outsl
js
mov
into
roll
insl
xchg
cmp
test
jl
and
adc
ffreep
pusha
pushf
int
mov
xchg
mov
fildll
aaa
popa
sub
push
pushf
std
loop
or
push
jge
lds
bound
aad
cmc
pop
movsl
fwait
shl
into
jo
xchg
testb
jbe
push
mov
loope
mov
mov
aam
test
dec
push
fucom
daa
jb
sbb
add
push
xchg
ja
enter
sub
outsb
je
jb
add
xor
push
movsb
rorb
repnz
mov
sbb
xchg
cld
inc
fxch
insb
mov
ret
push
aam
sbb
sub
cwtl
lods
or
popa
jno
sub
add
mov
mov
xchg
jge
jbe
or
cwtl
repnz
adc
cmp
aaa
test
test
movsb
notb
adcb
mov
lock
or
add
sub
cmp
adc
sub
dec
mov
push
mov
movsb
xor
mov
hlt
jle
pop
test
fidivrs
pop
jo
jne
lret
imul
call
jne
rclb
cwtl
sbb
inc
mov
call
pop
repnz
push
dec
mov
aam
mov
mov
mov
popf
test
push
aaa
cmpsl
mov
cmpsb
das
push
add
push
gs
dec
andl
cltd
imul
sub
jb
clc
fwait
jbe
lock
dec
push
test
cli
xchg
icebp
jo
sahf
mov
sahf
xor
cmpsb
outsl
aam
mov
adc
and
adc
ret
bound
std
mov
mov
push
mov
cvtdq2ps
gs
mov
das
or
jg
daa
les
adcl
jbe
push
js
outsb
movl
incb
cmpsb
fistpll
gs
mov
sbb
test
adcb
into
mov
mov
in
int3
adc
test
xor
push
test
sar
outsb
adc
fnstsw
push
iret
xor
ds
aad
rolb
xor
mov
inc
lods
dec
shr
jle
jne
push
push
mov
xor
xor
fndisi(8087
les
adc
call
jecxz
fs
mov
imul
inc
dec
out
dec
enter
cmp
or
sub
out
std
fistpll
repz
mov
in
js
cld
jne
mov
add
fimuls
mov
ror
mov
mov
pop
sub
jo
movsb
adc
clc
push
lret
or
call
pop
push
sahf
xor
xchg
ret
xor
pop
cmp
test
or
xchg
mov
jns
push
mov
rclb
fincstp
add
xchg
fimuls
aaa
mov
icebp
stc
gs
push
mov
cmp
ljmp
push
ljmp
enter
sub
imul
cwtl
mov
insl
jmp
sbb
rol
adc
cli
push
mov
push
or
push
rcr
or
icebp
and
mov
mov
repz
jae
cmp
call
or
jmp
lret
outsb
sub
jp
inc
outsb
fsubrl
bound
xchg
jbe
xchg
mov
xchg
popa
int3
cmpsb
jle
xor
mov
insl
mov
pop
add
mov
mov
fdivp
xorb
nop
push
lock
rcrb
aaa
and
dec
int3
stos
and
lret
jo
dec
clc
add
xorl
cmp
fnstcw
addr16
stos
shrb
jecxz
test
iret
cmp
stc
xorb
cld
xor
push
rcll
pushf
mov
xchg
hlt
jb
fwait
imul
push
xchg
jne
rcrb
inc
std
cmp
or
ret
loope
je
std
insl
fwait
cmpsb
xor
loope
or
or
lds
push
mov
outsb
mov
repz
shrb
lods
mov
jp
rcrb
and
stos
mov
inc
cmp
jne
and
cmc
mov
lods
repz
andl
xchg
fsubs
out
movl
mov
xlat
divb
bound
cmpsb
lea
fisttps
xchg
inc
fcomi
or
dec
cmp
cmp
mov
test
and
dec
mov
xchg
push
jno
in
inc
fistpl
or
sti
leave
or
scas
repz
lods
repz
add
dec
out
mov
xor
repnz
subl
and
dec
mov
out
jg
cs
movsb
fisttps
in
lret
xor
insl
imul
and
adc
test
sub
and
stos
call
ljmp
fimuls
inc
dec
dec
sbb
dec
test
xchg
dec
dec
out
xor
sbb
cli
sbb
imul
xor
xchg
xchg
mov
shl
cs
stc
test
mov
fwait
clc
pop
jmp
lret
adcl
xchg
push
inc
lcall
mov
sbb
mov
jle
aam
adc
testl
xchg
into
sub
lret
cmp
adc
popf
aad
dec
add
push
jb
movsb
call
mov
dec
cmp
out
lcall
add
ret
cmp
gs
xchg
mov
push
repnz
xchg
shll
call
add
push
loop
in
xchg
mov
je
scas
ja
lret
cmp
push
lods
and
inc
or
cmpl
fiadds
mov
cltd
ss
push
jg
lahf
lods
ja
lock
popf
hlt
fsubl
xor
xchg
sahf
mov
sbb
xor
mov
ss
lahf
int
fwait
jnp
dec
sbb
sahf
lock
xchg
and
subl
inc
cmp
mov
cmp
sub
ja
push
icebp
add
aad
and
or
shlb
bound
mov
dec
pusha
adc
in
jp
jl
inc
jl
stos
mov
push
xchg
xor
je
pop
repnz
mov
stc
jmp
fwait
jl
mov
mov
jne
out
mov
mov
notb
out
and
xor
lcall
pusha
test
out
icebp
call
mov
sar
das
adc
lret
mov
jno
jp
mov
jnp
jnp
sub
test
adc
jmp
jle
mov
pop
and
mov
in
sub
lds
jl
aam
cmp
stos
pop
inc
jns
pop
cmp
fistpll
mov
sub
and
cltd
cmp
push
loopne
repz
mov
call
daa
leave
icebp
sub
jmp
jns
pop
xchg
dec
sbb
addb
lods
jle
jecxz
jp
jecxz
jbe
jecxz
mov
jecxz
scas
adc
stos
stos
adc
les
adc
bound
dec
or
repnz
stc
lock
or
push
nop
jne
lcall
mov
std
xchg
movsl
bound
lods
sarl
test
fsubs
cmp
and
lret
mov
insb
nop
sarl
dec
cmp
call
pop
mov
pop
xchg
mov
xchg
sub
std
jne
movsl
loop
rcrl
jp
cmp
and
or
outsb
fbld
fisttps
mov
mov
push
or
scas
in
or
js
shlb
inc
es
in
sub
mov
xchg
dec
pop
bound
xchg
imul
push
repz
cmp
je
mov
mov
mov
fldz
and
jne
add
pop
sub
shlb
pop
jmp
dec
jb
sub
or
mov
movsl
dec
rcll
lcall
stos
push
push
push
push
js
shrl
mov
popf
xchg
nop
rolb
fimull
stos
push
mov
inc
bound
and
stos
xchg
adc
sarl
lods
xchg
sub
sbb
adc
dec
xchg
push
xor
fmuls
add
loop
xor
adc
mov
pusha
pop
cmp
icebp
mov
stc
mov
mov
lods
add
in
rorl
iret
fiaddl
and
inc
cmp
leave
pop
in
mov
jo
or
in
xor
int
arpl
inc
dec
fisttpll
leave
lret
out
lea
scas
popa
daa
test
pop
sub
aas
into
clc
cs
dec
mov
pop
push
je
adc
ja
xor
sbb
lods
add
jns
xor
inc
mov
lds
xchg
int
data16
nop
stc
in
jns
and
mov
je
xor
lock
push
pusha
cwtl
sub
dec
mov
adcl
inc
aas
je
inc
jns
push
aas
jp
out
adc
inc
sbbl
dec
lcall
push
jb
mov
roll
stos
mov
cmc
rcll
outsl
sub
cmp
call
mov
sti
push
xor
pop
xchg
sbb
outsl
mov
xlat
jno
push
rorl
iret
xor
jmp
cwtl
mov
xchg
xor
inc
lock
and
out
outsb
das
and
adc
sub
or
stos
or
subl
test
outsl
outsb
insb
sbb
or
dec
mov
dec
je
xchg
pop
shlb
stos
adcl
and
push
pop
repz
mov
xchg
xchg
or
xchg
faddl
xchg
or
sub
xchg
addr16
xor
orb
aad
out
cmp
stos
ds
pushf
icebp
call
mov
mov
into
lgdtl
add
std
xor
mov
clc
scas
xchg
in
or
mov
jle
cld
inc
push
rolb
cwtl
pop
aam
mov
push
mov
dec
mov
sahf
into
adc
hlt
repnz
in
mov
int3
xchg
xchg
lea
lods
xchg
sub
push
mov
cmc
push
jns
mov
rolb
mov
ds
rcrl
inc
xchg
cmp
lea
cld
popf
xchg
sarb
ss
xchg
or
mov
jg
sub
clc
and
mov
mov
loop
in
jbe
lods
adc
into
mov
and
cwtl
imul
dec
aad
lahf
fcoml
movsl
mov
mov
cltd
or
dec
push
add
enter
dec
mov
into
hlt
idivl
frstor
jns
mov
lea
lret
xor
xor
imul
push
ja
or
shrl
adc
jae
out
xchg
add
pop
inc
bsr
imul
cmp
and
jae
xor
mov
mov
mov
xor
into
sti
xchg
stos
test
push
out
push
xor
and
cltd
sahf
icebp
pop
push
cli
icebp
mov
aad
stos
popa
loopne
jge
mov
xchg
int
xchg
lret
xchg
mov
adc
loop
add
jb
enter
sahf
popa
and
sub
test
mov
nop
and
aad
mov
icebp
mov
fstps
aam
sbb
push
cmp
lahf
cmp
and
sbb
fsubl
inc
test
arpl
xchg
testl
or
jge
lahf
fiadds
xchg
mov
jle
jl
mov
push
xchg
push
fdecstp
fsubrl
iret
rcrb
or
xor
xor
scas
and
xchg
fwait
lcall
dec
pop
movsb
data16
adc
and
int
jno
xchg
jnp
fnsave
lea
jbe
and
sub
pop
xor
jb
call
adc
sbb
push
mul
mov
int
je
inc
xchg
dec
ss
in
es
mov
inc
dec
and
push
outsb
pop
mov
test
ja
jmp
add
mov
jne
sbb
push
cs
sbb
cwtl
outsl
xor
inc
mov
cwtl
add
fldl
movsl
dec
xor
loopne
push
std
and
mov
stos
shrl
repnz
and
jns
adc
dec
sbb
dec
mov
js
fiadds
test
addl
jecxz
jg
pop
mov
and
pop
std
les
mov
insb
jle
repz
jg
in
mov
adc
mov
mov
push
adc
sub
clc
jle
setnp
inc
mov
pop
sbb
jle
out
movsb
pop
cmp
mov
outsb
hlt
pop
inc
add
mov
loopne
movsl
loope
dec
out
lret
and
push
and
dec
adc
lods
jne
dec
int
fldt
cmpsb
loop
cmp
push
jns
pop
mov
xchg
pop
sbb
and
adc
ret
xchg
push
jnp
stos
xchg
fs
lret
mov
loopne
pop
mov
xchg
mov
inc
ljmp
xchg
mov
mov
push
fisttpl
mov
adcb
xorl
das
sbb
hlt
sahf
cmpsb
ficoms
test
movsb
aad
lea
adc
or
xor
dec
mov
jo
inc
cltd
loop
lahf
xor
aaa
cld
mov
mov
add
xor
mov
xchg
pop
loop
nop
lock
ds
testb
cs
or
jp
inc
bnd
push
inc
orb
lret
mov
jg
or
ficoml
xorl
insb
loopne
repz
rol
pop
faddl
mov
sub
and
in
dec
mov
push
out
and
xchg
lods
test
cmpsb
stos
es
or
cltd
repnz
push
jae
sbb
sahf
frstor
lods
adc
adc
push
xor
push
jge
dec
outsl
push
icebp
out
lea
push
dec
add
arpl
into
nop
lahf
pop
repnz
sub
mov
arpl
mov
mov
movsb
ljmp
lcall
repz
adc
mov
sub
shl
lahf
adc
addb
pop
rcrb
rcrb
pop
pop
arpl
mov
dec
daa
jns
or
call
xchg
aam
xchg
and
iret
daa
push
popa
cmp
dec
dec
inc
fcmovne
sbb
mov
push
pop
gs
insl
pop
sbb
and
mov
dec
imulb
imul
in
outsl
out
inc
lcall
movsl
sub
popf
call
xor
mov
popa
fwait
cs
inc
sbb
insl
mov
mov
xchg
aam
popf
leave
jmp
adcl
fidivrl
mov
inc
fstpl
add
sbb
push
mov
addr16
fistps
scas
lods
lds
pop
fidivrs
sbb
stos
fcmovb
push
lret
gs
jmp
movhps
dec
cmp
popa
fwait
or
pushl
xor
addl
cltd
es
pop
xchg
rcrb
outsb
push
fmull
test
ret
ret
mov
mov
fsubp
fstpl
mov
mov
shlb
inc
pop
es
or
adc
mov
out
push
add
iret
ljmp
adc
mov
xor
push
mov
pop
mov
repz
push
inc
jge
sbb
or
xchg
adc
cmp
pop
or
enter
sarl
adc
sub
or
jecxz
and
repnz
and
xor
test
aas
push
cmc
push
sbbl
and
sbb
shll
fimull
sub
pop
popl
sarl
lods
leave
mov
mov
pop
icebp
push
int3
or
icebp
fnsave
xchg
cmp
insl
mov
jle
jne
jbe
cmc
outsb
outsb
jo
lock
mov
imul
fidivrl
mov
mov
inc
jo
xchg
jae
mov
pop
xchg
je
mov
or
repnz
sub
pop
sub
es
icebp
mov
gs
gs
xchg
insl
mov
ret
inc
pop
xchg
cmp
test
insl
push
jl
sahf
aam
subb
aad
stos
or
xor
push
mov
test
xlat
xchg
xor
cli
test
sti
popa
not
into
mov
js
jg
shl
rol
ret
fwait
adc
lret
mov
std
xchg
out
xor
sub
test
pusha
lret
sbb
lahf
repnz
mov
stos
mov
sbb
cmc
mov
jl
popl
adc
fisubrs
into
in
movsb
sbb
outsl
pop
cmpsb
xor
fninit
sub
das
adc
sub
or
aad
cltd
ret
jnp
adc
lret
sub
call
scas
cmp
and
mov
jge
pop
jmp
jae
out
fistps
adc
mov
jnp
cmp
jmp
mov
stos
or
stos
pop
xor
loopne
imul
dec
lret
pop
int
push
sbb
mov
insl
mov
lahf
popa
cmpsb
bound
mov
pushf
push
xorb
cmc
test
aam
enter
test
es
rcll
xchg
cmp
in
leave
inc
data16
xchg
pop
xchg
shrl
int3
andl
mov
fistpl
nop
mov
insb
popf
xor
add
mov
fwait
xor
mov
inc
jg
enter
negb
adc
stc
rcr
add
sti
sbb
or
inc
imull
adc
xor
sbb
jmp
xor
leave
pop
les
outsb
push
scas
idivl
test
test
pop
and
cltd
adc
push
xchg
push
xor
mov
lock
popf
frstor
cli
je
push
xor
sbb
sbb
add
int3
adc
add
call
adc
imul
ret
leave
imul
lret
outsb
inc
aas
fwait
xchg
cli
mov
mov
xor
dec
xor
pop
aaa
ds
sbb
clc
adc
mov
imul
xor
insl
jmp
in
enter
enter
ds
xor
sub
jmp
sbb
push
repz
iret
cmp
js
jb
ljmp
hlt
jge
gs
cmpsb
addr16
pusha
sbb
inc
mov
pop
mov
inc
loop
xchg
pop
lea
loope
aaa
xor
add
mov
jmp
hlt
and
mov
cmp
das
pushf
xchg
insb
aam
xchg
fdivrp
inc
and
push
cmp
jae
xor
ret
mov
aaa
sub
pop
loop
out
daa
xor
psllq
cmc
push
sub
pop
and
mov
fldl
dec
or
xchg
repz
mov
xorb
inc
cmc
mov
repz
cmp
mov
nop
test
add
cwtl
mov
repnz
hlt
adc
fwait
call
lret
sub
call
or
mov
pushf
loopne
and
mov
cwtl
dec
and
xor
dec
cmp
cmpsb
adc
mov
jne
sub
cli
mov
mov
cmpsb
and
shr
movsl
lods
sarb
jnp
mov
sub
enter
ffreep
pop
flds
call
xchg
out
ds
xchg
inc
inc
in
scas
rcr
loopne
repnz
and
test
pop
repnz
lea
push
cmc
les
in
pushf
push
test
sub
testl
mov
xchg
cmp
lds
test
inc
bound
into
and
add
sub
arpl
dec
sti
dec
cmp
cmc
addr16
out
sahf
pop
xchg
sbb
ret
outsb
insl
pop
aaa
jne
ss
inc
addr16
subb
add
or
mov
dec
jle
mov
adc
cmp
adc
cli
std
push
out
sti
and
mov
dec
das
dec
sbb
neg
or
cmp
or
xchg
dec
mov
cmovb
imul
enter
or
xor
cmpsb
outsb
mov
sbb
push
jecxz
pop
mov
and
sahf
lcall
pusha
adc
dec
in
pop
shl
mov
loop
sub
andl
in
xlat
mov
push
enter
sarl
dec
xor
xchg
adc
add
add
in
lret
add
inc
stc
add
sbb
mov
jg
jmp
in
mov
lds
jg
pushf
inc
push
in
loop
das
sbb
lcall
jnp
and
arpl
push
in
pop
mov
cmp
clc
pop
or
dec
lds
pop
test
dec
lods
aam
sti
add
lret
mov
je
data16
jp
es
adc
das
test
push
mov
adc
sarl
lcall
imulb
sub
loop
out
out
push
je
jne
or
mov
fnstsw
dec
scas
or
outsl
xchg
mov
add
cmp
xlat
mov
or
std
cld
dec
xchg
xchg
sbb
sbb
xchg
dec
and
jo
cmp
ja
loope
xor
roll
and
into
xchg
cmp
mov
std
les
add
mov
rol
adc
and
push
adc
mov
or
xchg
sub
mov
push
out
lcall
or
incb
add
lea
leave
int
rcl
add
dec
andb
imul
xchg
mov
addl
insl
stos
cwtl
mov
stos
xorb
pop
dec
lcall
repnz
lds
mov
fcmovnu
or
mov
xchg
mov
or
ljmp
dec
pusha
ds
and
call
jecxz
jbe
push
xchg
jp
jno
xchg
mov
lods
test
mov
mov
cmpsb
test
mov
xchg
push
bound
and
jge
popa
xlat
pushf
dec
movsl
fs
xor
scas
mov
cmc
int3
test
sub
mov
cmpsb
scas
add
je
dec
dec
pop
idivb
data16
dec
and
mov
out
or
pop
je
mov
cmp
pusha
scas
dec
andb
and
inc
int3
inc
test
push
inc
xor
test
rorb
dec
add
ret
mov
xchg
cmp
mov
cmpb
roll
andb
aam
adc
mov
in
sub
xor
mov
or
outsb
inc
clc
lret
mul
lret
test
int
mov
ljmp
xchg
std
mov
fs
mov
mov
jl
fiadds
jb
imul
push
mov
push
lds
fcmovb
ficompl
and
adc
pop
pusha
insl
aas
inc
enter
fucomip
jno
cmpsb
ret
and
sub
mov
aam
test
mov
adc
jnp
mov
mov
adc
popa
cs
xchg
dec
test
jecxz
inc
insb
jnp
pop
dec
pop
jo
push
add
dec
mul
or
jp
jae
jno
es
push
lds
and
adc
sar
and
pusha
xor
sub
or
sub
push
xchg
enter
in
jns
jns
aas
sub
daa
adc
inc
jmp
enter
sbb
stos
insb
cmp
pop
sbb
adc
lret
sub
push
rcl
imul
add
test
pusha
cltd
stc
std
cmpsb
pop
ss
cmp
aaa
lret
mov
push
test
jae
or
out
mov
pop
adc
sbb
shlb
mov
cmp
into
shlb
popf
sbb
jb
inc
scas
ret
mov
lock
insb
arpl
mov
mov
mov
jo
das
sbb
fldenv
lock
mov
rorb
jp
mov
cld
dec
push
ss
lea
sub
stos
loope
stc
outsb
mov
push
dec
xor
call
mov
stos
xchg
jle
movsl
gs
sub
mov
pop
test
cmp
add
aam
push
stc
gs
adc
dec
or
or
xchg
out
sbb
or
cmp
or
arpl
out
insb
mov
sub
loop
mov
push
xchg
repnz
shll
mov
inc
or
or
adc
mov
scas
xchg
xor
xchg
dec
xchg
cwtl
sub
jp
lahf
stc
mov
cltd
icebp
out
das
cmp
inc
adc
inc
fistl
fbld
fldenv
lods
inc
cmp
or
loope
and
data16
dec
int3
jns
pop
in
adc
jp
xchg
in
pop
es
mov
lods
pop
sbb
daa
cmp
push
inc
adc
divb
mov
loopne
jb
cwtl
and
daa
imul
xchg
addb
xor
sub
icebp
les
xchg
jnp
dec
ficomps
add
pop
pop
roll
fs
or
in
pop
inc
xor
sub
add
out
outsl
bound
pop
sub
daa
jo
mov
mov
jbe
ret
pop
iret
jae
cs
or
movsb
jbe
cmp
jecxz
jne
faddp
add
rcrl
jle
push
popf
jnp
jmp
or
ficoms
or
stc
xchg
and
cwtl
and
add
or
push
mov
or
push
xor
cmp
jnp
sub
mov
xlat
sub
dec
sbb
mull
movsl
fcmovu
sub
out
sub
mov
jns
mov
arpl
es
subl
andl
int
cmc
loope
adc
jecxz
inc
add
stc
push
ss
cs
cld
cltd
test
mov
sbb
cli
xchg
inc
jmp
out
cwtl
ljmp
mov
out
pushf
int
mov
inc
fs
addr16
fsub
cmp
nop
xor
out
or
xor
push
sub
test
dec
adc
in
in
inc
and
test
push
lcall
sti
push
mov
icebp
xor
fwait
ljmp
cmpl
fadds
mov
dec
mov
push
das
xorb
and
cmp
lods
mov
cld
mov
xchg
loopne
mov
jg
in
roll
icebp
pop
add
sub
bound
xor
or
js
pop
xor
mov
das
sub
gs
jl
xchg
jmp
xchg
jmp
loope
pop
jno
mov
or
mov
sbb
movsb
ror
pop
adc
fstl
jns
lods
repnz
data16
stos
shlb
stos
or
lcall
or
cld
mov
mov
mov
inc
aas
lods
cmp
dec
sbb
test
jmp
call
and
or
add
cltd
outsb
mov
iret
gs
cmp
repnz
pop
or
jae
test
pushl
xchg
es
leave
loopne
and
das
scas
shr
xorl
pusha
xchg
outsb
pusha
into
add
cmp
sahf
jmp
popa
scas
jo
test
movsl
loop
popf
ljmp
call
call
cmp
addl
call
jle
sub
insl
pop
arpl
lret
hlt
testl
into
call
fcomps
je
mov
xlat
ret
cli
insl
push
mov
fstps
mov
pop
mov
dec
sbb
jae
mov
mov
push
shrb
das
arpl
mov
fidivs
outsl
sbb
jae
ljmp
loopne
mov
cmp
mov
rorb
dec
repnz
outsb
andl
repnz
cmpsb
push
lret
xor
or
orb
sbb
and
and
push
adc
and
cmp
add
ja
fadds
or
int
xchg
rcl
inc
push
fiaddl
mov
and
mov
and
shlb
sub
and
adc
sbb
jnp
bound
mov
or
pop
shlb
les
sub
jbe
cmp
lret
lock
sub
push
xchg
lret
gs
test
xor
add
jbe
lds
dec
pop
mov
jmp
in
dec
pop
jne
movsl
mov
and
and
dec
jnp
jl
or
insb
jecxz
mov
mov
cmp
pop
cld
jp
shll
mov
fwait
dec
rcl
stos
adc
pusha
mov
int3
ds
sbbb
pusha
adc
enter
add
fistl
cltd
push
or
pop
cmp
sub
popa
test
mov
sbb
repnz
jp
cld
scas
cmpsl
lds
andb
pop
mov
stc
cmpb
xchg
ss
push
mov
fcomp
adc
test
sti
dec
and
fwait
xchg
sbbl
push
cmp
and
or
lods
xchg
mov
cmp
lods
ss
pop
cwtl
mov
cmp
inc
pop
loopne
adc
mov
push
lds
loope
insl
test
loopne
mov
lods
inc
pop
lock
mov
dec
cmp
adc
rcr
flds
mov
loop
not
shrl
fcomp
and
or
inc
scas
xchg
sti
mov
push
fnsave
fiadds
pop
in
cld
push
andb
mov
nop
cmpsl
push
jge
aad
shll
mov
mov
fisttpll
imul
stos
mov
inc
sub
hlt
adc
push
aam
rcll
movsl
cmp
xchg
cltd
in
jecxz
arpl
inc
je
add
inc
lock
fists
inc
into
popf
icebp
test
lea
pop
pusha
pusha
mov
fiaddl
mov
and
sbbb
push
mov
insl
dec
and
lahf
jge
adc
dec
jle
test
mov
xchg
adc
mov
lret
mov
jae
xchg
inc
orl
ss
pop
movsl
enter
sub
push
sti
adc
das
cld
cld
lea
jns
in
xor
inc
ret
bound
shll
pop
aaa
pop
and
enter
and
cmp
fadds
aad
lods
push
and
repz
test
mov
lea
xchg
xchg
in
mov
ret
and
cmp
adc
insb
lods
stos
mov
pushf
aaa
inc
repz
scas
mov
add
cmp
aad
mov
sub
xchg
imul
mov
icebp
aam
stos
lods
mov
test
roll
hlt
mov
adc
icebp
pop
loop
loope
popf
out
add
push
sbbb
xchg
fwait
push
add
fistl
int3
imul
ja
sub
xor
es
jle
stos
call
dec
dec
cmp
jnp
fcoms
jb
mov
rcr
push
or
aam
ret
cs
imul
jo
add
and
clc
icebp
and
mov
in
and
mov
push
loop
push
mov
jecxz
out
xchg
xchg
dec
adc
into
adc
push
cmp
xchg
subb
sbb
shrl
out
rorl
adc
jo
out
dec
push
rolb
sbb
sbb
mov
call
popf
mov
mov
jmp
int3
shll
aaa
cmp
push
mov
push
dec
mov
mov
cmp
adc
leave
shlb
xchg
call
movsl
xchg
cmpsb
dec
or
mov
loopne
aaa
xchg
fisttpl
imul
sub
enter
mov
cli
fsubrl
dec
mov
into
jl
flds
cmp
xor
pop
mov
shlb
push
add
push
cmp
mov
ret
inc
cmp
mov
push
jl
sub
jno
jg
lahf
nop
clc
and
mov
into
mov
or
inc
test
or
adc
nop
mulb
mov
inc
outsb
loopne
add
aad
les
sbb
cltd
mov
lcall
add
mov
jnp
jmp
andl
pop
inc
mov
dec
test
push
loop
ficoml
int
jnp
sub
jp
add
call
cmp
cs
and
adc
jecxz
mov
cmpsl
mov
sub
mov
xchg
test
push
fucomi
fdivrs
pop
mov
test
dec
fcoml
mov
rorl
fs
pop
add
sub
or
hlt
cmp
pop
mov
hlt
sti
inc
xor
stos
xchg
mov
aad
or
mov
shrb
lahf
xlat
xchg
icebp
and
push
xor
js
out
dec
xor
fildl
or
cltd
insb
sub
jae
repz
stos
out
cltd
pop
lret
jne
int3
push
push
xlat
xchg
mov
outsb
inc
mov
out
add
mov
fwait
stc
mov
enter
xchg
out
leave
sub
test
mov
insb
dec
and
iret
stos
rcrb
sbb
jge
xor
stos
or
mov
subl
mov
cmc
mov
test
andb
stos
add
mov
jecxz
push
je
stc
pop
mov
ds
or
cmp
sub
aas
jmp
inc
adc
enter
les
shlb
mov
ficoml
rorl
js
rorb
cmp
scas
hlt
cmp
adc
out
push
push
dec
repnz
mov
aaa
rclb
mov
es
ss
cmpsb
inc
lret
mov
push
mov
iret
cld
cmp
shll
mov
sub
jmp
lea
lods
mov
lret
push
mov
pushf
shlb
std
ret
test
and
fwait
mov
adc
sahf
jbe
popf
lds
and
jg
xor
xor
mov
mov
loope
ljmp
icebp
xor
loop
das
mov
andb
into
push
loop
pop
clc
rorb
inc
pop
inc
lret
arpl
push
into
dec
test
xor
push
sub
xor
add
jge
mov
sbb
or
pop
sbb
cmpsb
mov
adc
sbb
pushf
cwtl
inc
and
fsubl
jne
les
and
pop
dec
xor
xchg
mov
cmpsl
loopne
shrl
cmpsl
enter
pop
sub
enter
sub
aas
aad
push
mov
push
loopne
jge
sub
jmp
in
pop
push
xor
xor
adc
aam
pop
addr16
cmp
add
add
bswap
sbb
gs
cld
fcmovbe
mov
mov
hlt
popa
mov
mov
pusha
insb
mov
scas
hlt
and
cld
nop
and
repnz
jp
and
jae
push
cmp
xchg
xlat
js
fisttpll
mov
mov
mov
mov
dec
dec
inc
cmp
loopne
aad
adcl
mov
xor
xchg
xchg
inc
ficoml
jbe
cli
add
sub
stc
sub
gs
popa
inc
es
scas
cmp
lahf
add
or
xor
scas
adc
ret
or
sub
sidtl
mov
sbb
fbld
or
inc
or
rclb
mov
out
fnsave
aad
scas
faddp
loop
xchg
jb
div
inc
cltd
test
lea
cld
xchg
dec
sbb
ja
xchg
jp
pop
mov
int3
mov
iret
adc
or
sub
push
in
in
test
icebp
fisubs
xor
mov
push
mov
in
sub
lea
jmp
enter
and
pop
dec
push
mov
das
movsl
jb
and
hlt
or
add
xlat
lret
test
scas
mov
adc
dec
loop
push
push
mov
pop
jns
mov
mov
jnp
jecxz
xchg
xor
cmp
in
repz
pop
xchg
fcompl
sbb
xor
out
mov
inc
movsl
or
xor
fsts
add
add
push
push
jle
pop
dec
mov
jge
xchg
xchg
loop
call
xchg
scas
and
xchg
out
in
xor
mov
popa
mov
push
fwait
fs
sarb
push
pop
cs
cmp
arpl
fbstp
jle
arpl
sti
adc
lods
mov
xor
enter
mov
lock
push
test
mov
sub
lcall
mov
flds
in
subl
xchg
negb
pusha
in
sub
sub
push
std
repz
jbe
push
es
and
pusha
fdivrs
subb
push
jno
jne
or
mov
mov
jns
dec
aad
and
popf
mov
dec
xchg
pop
add
es
nop
and
mov
das
loope
pop
sbb
mov
das
lahf
mov
js
cmp
out
shlb
and
xor
pop
xchg
jne
mov
loope
or
sbb
sbb
pop
test
xchg
cmpsb
cmpsb
and
jecxz
filds
xor
sbb
sti
stos
adc
or
mov
lret
push
push
xchg
cli
adc
ja
aaa
xlat
mov
mov
dec
cli
rolb
lea
pop
imul
shl
inc
sbb
or
or
aaa
lret
fiaddl
lock
mov
pop
mov
push
and
and
sbb
sahf
cmpsl
mov
add
jmp
and
test
dec
je
lods
dec
addb
sub
mov
pusha
test
jno
jbe
xchg
pop
fisubrl
mov
addl
and
xchg
lret
xor
sub
mov
push
shlb
add
push
orl
add
fists
popa
imul
cld
pop
inc
adc
mov
loop
ret
cmp
jge
stos
lret
mov
xchg
je
sub
cli
xchg
jbe
jo
loop
int
or
ret
push
and
sahf
fsubl
cli
xchg
and
pop
sbb
fmull
insl
inc
mov
mov
lock
xor
scas
call
push
outsl
cltd
stos
sbb
std
xchg
pop
dec
or
push
cltd
bound
mov
fwait
push
pop
imul
ljmp
arpl
and
imul
icebp
push
pop
add
jae
push
lret
jmp
cmp
xchg
in
ss
out
clc
outsb
pop
sub
sub
add
filds
cmp
pop
int
cmp
mov
inc
jmp
outsl
outsl
mov
xor
dec
stos
adc
fstpt
pop
test
dec
imul
fcom
push
loopne
or
push
inc
xchg
lods
add
cmpsb
xchg
add
mov
jmp
push
xchg
stos
test
xor
sub
gs
enter
rcl
dec
ret
mov
cmpsb
outsb
or
xchg
mov
sub
enter
and
pushl
data16
sub
stc
sub
mov
push
addr16
repnz
int
xor
jb
in
es
popf
jae
and
add
pop
pop
fbld
xchg
inc
sub
icebp
fmull
into
imul
fistl
pop
enter
lcall
in
sahf
xchg
sbb
xchg
jbe
sub
dec
cmpsl
test
jne
daa
popf
mov
fidivrs
loop
or
push
test
push
cltd
xchg
add
test
lods
das
lahf
xchg
xchg
aaa
sahf
lea
pop
sub
daa
adcl
ljmp
jo
int
xor
or
push
mov
and
cs
dec
loopne
push
fsubr
pop
or
std
nop
sub
insl
imul
mov
sbb
mov
xor
nop
cltd
mulb
sti
add
loop
mov
add
out
push
repnz
pop
out
mov
or
mov
js
inc
mov
sub
mov
scas
lock
cmpb
add
popa
jmp
pop
fcomip
stos
je
mov
sbb
cmpsl
divl
cmp
out
mov
lock
mov
ror
jbe
insb
int3
push
inc
xchg
inc
test
and
xor
loopne
pop
hlt
mov
pop
xchg
inc
loop
sub
test
loop
or
dec
ss
sahf
aaa
cmc
add
int3
out
inc
loopne
lret
jno
test
dec
leave
test
orb
pop
add
mov
xor
pop
xchg
cmp
mov
jno
or
xor
push
test
fimuls
xchg
jb
push
lods
idivb
jae
mov
stc
and
cmpsl
xlat
jge
mov
push
popa
shll
movsl
iret
sub
ret
dec
xor
add
fidivs
imul
ja
out
sar
filds
push
xchg
pop
xchg
aas
lods
aaa
sbb
stos
xor
leave
cmp
and
lock
mov
inc
xchg
mov
fwait
adc
xchg
stos
insb
mov
stos
lds
push
lahf
cmp
jmp
or
or
push
adc
outsl
push
iret
xchg
pop
cmp
gs
mov
mov
mov
test
fistl
test
xor
insl
push
xchg
adc
mov
scas
sbb
adc
xchg
mov
and
cmp
adc
and
icebp
das
add
shll
and
or
mov
pop
jg
cmp
xchg
xor
test
push
xchg
mov
xor
pop
inc
out
loop
pop
loopne
sub
sbb
cld
push
orl
les
imul
loopne
jb
sbb
xor
iret
xor
sbb
xchg
or
pop
sahf
xchg
and
out
bound
icebp
mov
cwtl
jno
icebp
sbb
or
mov
cmp
in
cltd
loopne
push
aaa
repz
stc
ficoms
sub
sbb
dec
rorb
cmp
inc
dec
cld
out
testb
pop
pusha
dec
jle
cmpsl
hlt
in
dec
sahf
in
ljmp
jo
lea
xchg
xor
jp
sub
enter
xor
pop
dec
sub
aaa
fsubrp
orb
push
movsl
scas
lds
lcall
rcrl
jno
shlb
into
bound
adc
cli
loopne
sub
push
jge
mov
add
push
sbb
jo
icebp
and
ss
sub
imul
xor
lods
sub
in
dec
pop
mov
xor
stos
jg
sbb
xchg
hlt
adc
rol
in
lods
js
sub
or
popa
scas
adc
xor
xor
mov
nop
jl
test
ret
push
nop
mov
jo
mov
outsl
mov
jle
cmpsb
inc
xchg
cmpsb
cmp
mov
stos
mov
sbb
or
adc
inc
out
sbb
int
sub
orb
test
aas
fsubs
xchg
repz
jle
pop
int
push
scas
xor
adc
and
sbb
push
and
cmpsb
cmp
sahf
lahf
pusha
sti
or
insb
xchg
push
outsb
adc
or
sahf
icebp
xor
cmp
cmp
into
aas
jle
in
testl
dec
mov
ret
ret
cli
testb
mov
imull
push
ljmp
lret
sarl
dec
insl
stos
jge
xorl
loope
fxch
cmp
shll
jns
enter
adc
mov
call
dec
mov
outsb
sub
test
mov
lcall
shlb
cmpsb
call
insb
or
outsb
stos
mov
mov
aad
test
cmp
push
shlb
data16
pop
or
mov
setae
xchg
jmp
add
call
out
pop
mov
mov
and
adcl
jg
push
pop
test
dec
cld
jno
pop
in
lahf
lods
mov
jg
xor
push
flds
stos
lea
popf
bound
call
fstp
jns
test
sub
and
and
inc
xrelease
mov
fdivrl
jo
push
repz
icebp
insb
and
lock
or
dec
or
jbe
js
sub
lret
mov
jmp
out
repz
mov
bound
out
inc
popf
and
insl
es
movsl
sbb
ja
stos
in
cmp
lahf
mov
mov
mov
add
or
mov
int
mov
adcb
pop
jbe
xchg
mov
sbb
jb
sbbl
or
aad
mov
pop
sbb
jb
jg
mov
dec
mov
int3
icebp
out
mov
xor
and
mov
pop
outsb
das
sub
into
data16
stc
add
inc
inc
mov
popf
mov
daa
imul
movsb
in
dec
scas
aaa
test
jmp
mov
push
scas
lock
loop,pn
and
xor
inc
int3
test
bound
jbe
cmpsl
imul
lds
cli
dec
dec
mov
sbbl
xchg
lock
stos
or
testb
adc
faddl
sub
jae
xchg
stos
cli
mov
je
repnz
fwait
jne
adc
add
daa
mov
mov
outsb
mov
ret
push
leave
jb
stos
xchg
adcl
das
mov
daa
mov
jb
rclb
add
jae
addr16
int3
xor
jecxz
les
mov
lods
push
or
mov
add
in
lods
in
aad
loope
std
jo
push
cmp
out
sbb
inc
cli
sbb
mov
mov
dec
sub
lea
and
and
jae
sub
add
add
fbstp
adc
insb
test
push
mov
outsb
sbb
dec
stos
xor
jne
ret
shrb
mov
pop
mov
scas
mov
dec
pop
repz
or
xchg
sub
xor
adc
pop
xor
mov
gs
push
icebp
stos
mov
jp
and
and
sti
cmp
test
pop
nop
iret
push
mov
xor
jp
and
jecxz
adc
repz
and
push
push
adc
fs
or
mov
insb
or
and
les
lods
inc
inc
push
pop
cmp
leave
add
mov
test
sti
sub
fimull
sub
gs
sub
xor
rclb
sbb
sbb
jbe
int3
push
adc
ljmp
add
daa
xorl
dec
pushf
and
xchg
fsubrs
jg
cmp
push
sbbb
dec
cwtl
scas
jns
ljmp
add
int
js
and
jbe
enter
dec
xlat
incl
ret
jle
sub
sub
out
pop
add
adc
jg
pop
jb
dec
imul
cmp
iret
mov
movsl
push
xor
hlt
sub
mov
mov
push
bound
push
out
inc
dec
rolb
outsb
cli
and
dec
mov
out
pop
aad
hlt
or
imul
pop
xor
sub
pop
jno
jle
dec
stos
insl
mov
xor
sti
inc
scas
outsl
and
xchg
rcrb
mov
mov
add
testl
mov
movsl
or
testl
sub
jne
add
sbb
mov
jmp
sahf
mov
mov
sub
arpl
jmp
inc
lods
dec
out
dec
mov
xor
add
loop
push
lea
les
xor
cmpsb
mov
xor
insl
push
fisubrs
push
sar
mov
dec
mov
xchg
jne
xor
int3
js
pushf
orb
xchg
scas
ja
sbb
push
mov
and
jmp
jmp
into
sub
or
xchg
arpl
xor
push
jbe
imul
icebp
mov
movsl
or
xchg
lcall
ss
mov
lods
popa
inc
ljmp
xchg
movsb
push
xchg
sub
jp
dec
test
hlt
adc
dec
enter
mov
lret
inc
push
js
ljmp
push
test
mov
mov
out
add
adc
inc
loope
and
or
divb
ret
inc
cltd
ss
add
mov
add
es
pop
pop
mov
add
sub
and
xchg
out
jp
pop
mov
sahf
push
enter
push
jmp
fstpt
sbb
stos
loope
add
btr
aas
mov
ret
cmc
mov
int
push
fwait
scas
arpl
inc
enter
addl
aam
xchg
xchg
adcl
dec
ret
les
jb
repnz
mov
add
ss
mov
mov
pop
pop
dec
gs
mov
dec
dec
or
jp
addr16
sub
aam
roll
xchg
leave
add
loopne
cmp
shr
xchg
sbb
enter
stc
stc
add
mov
jl
sbb
sbb
sbb
jmp
addb
cmp
jl
test
sub
sbb
repz
rorb
lods
mov
mov
cmpsl
popa
pop
mov
in
ds
lods
mov
test
dec
imul
cmpsb
pop
lods
dec
sahf
jnp
mov
xlat
xor
inc
lock
or
out
lahf
jo
cmp
jno
into
jmp
repz
jns
mov
rcrb
nop
xor
inc
mov
jb
mov
scas
enter
aad
cltd
or
jmp
outsb
pop
or
imul
push
fstl
sahf
cmpsl
setne
pop
and
inc
sbb
pop
bnd
movsl
loop
cmc
cmp
adc
sbb
test
fisubl
jno
test
cmc
adc
push
lret
or
push
in
dec
pop
inc
cltd
icebp
pop
popa
ds
pop
mov
test
inc
test
lea
push
das
iret
inc
mov
or
xor
adcl
bound
sub
cmp
sub
bound
adc
cwtl
arpl
es
cmp
jno
cmp
rorb
mov
mov
stc
xor
push
leave
dec
test
scas
dec
mov
mov
orb
sub
xchg
push
and
ret
or
mov
mov
sbb
out
push
and
imul
cmp
pop
adc
movsl
cmp
xor
adcl
jp
sub
sbb
mov
mov
mov
inc
jne
jmp
loope
cmp
push
mov
xor
call
repz
adc
test
add
add
ja
adc
jl
insl
mov
and
pop
lahf
shll
lods
pushf
loope
mov
mov
jmp
decb
add
mov
dec
mov
lret
test
scas
jnp
xchg
dec
fs
push
dec
jmp
sbb
lods
push
mov
addb
sbb
and
insb
dec
push
dec
fdiv
repnz
or
stos
aam
testl
hlt
leave
mov
loope
sub
hlt
das
push
add
arpl
pop
mov
leave
add
or
adc
pop
sub
cld
xlat
or
push
and
scas
inc
add
add
xchg
sub
push
shrb
xchg
test
into
test
sbb
mov
pop
xchg
push
or
sub
inc
cwtl
call
roll
cs
mov
outsb
xor
lret
push
push
push
mov
adc
test
sbb
rolb
cmpsb
mov
mov
loope
mov
scas
mov
rorl
mov
push
dec
jge
in
or
clc
cli
popf
scas
mov
daa
icebp
sbb
jne
and
or
test
idivl
mov
insb
or
loopne
fptan
fmuls
fucom
cmc
cld
push
adc
ss
mov
or
loope
enter
add
xor
push
nop
mov
add
out
sbb
addr16
mov
jnp
mov
push
pop
cld
scas
jmp
or
inc
roll
pop
push
ds
loopne
xor
aad
push
mov
lahf
subl
vpmuludq
jge
roll
cmp
add
into
and
sbb
mov
sti
imul
sbb
sub
sub
fldl2t
pushf
movntq
xor
sbb
test
data16
pop
es
pop
xchg
jg
sub
sarb
lret
bound
popf
sahf
insl
mov
fldcw
js
lods
sahf
js
lods
sahf
dec
mov
orw
pop
nop
xchg
imul
loop
ror
xchg
pusha
mov
xchg
or
out
adc
pushf
inc
pusha
cbtw
outsb
mov
cs
dec
lcall
pop
sar
nop
addr16
adc
rcl
mov
arpl
stos
pop
jae
into
cmpsb
mov
andb
jbe
sub
mov
fists
or
adc
shrb
out
push
les
aaa
jmp
aad
lcall
xor
movsb
pushf
or
xchg
cmp
fdivp
icebp
mov
pushl
lods
out
sbb
jl
jge
mov
rolb
sub
outsl
rcl
rol
mov
fcompl
push
loop
mov
in
enter
cmpsb
andl
clc
pop
sub
sbb
mov
aaa
jae
jns
jno
shl
rcr
je
push
adc
cwtl
mov
enter
scas
out
rclb
repz
pop
out
test
sub
jl
cmp
mov
adc
or
or
testb
scas
pop
in
mov
mov
pop
icebp
lods
sub
lods
xor
dec
int
push
test
adc
enter
xor
or
add
dec
std
lret
jmp
adc
gs
sub
sub
push
jns
movb
in
sahf
dec
in
fwait
jo
jnp
sub
add
xor
mov
pop
sbb
iret
adc
mov
push
adc
mov
insl
push
in
cmp
outsl
mov
fmull
in
cmpsl
outsb
ljmp
ret
xor
stos
repz
push
add
orb
lea
repnz
lea
in
mov
ja
pop
push
mov
and
xchg
arpl
shrl
fisttps
ss
fisttpll
mov
sub
xchg
subb
repz
xchg
cltd
lods
jne
popa
jmp
out
push
ds
jg
aas
fisttpl
mov
jle
repz
jns
lds
adc
inc
data16
adc
push
cmp
cltd
mov
imul
xor
jb
jns
popa
mov
loopne
jmp
jne
mov
in
inc
fcoms
add
aas
cmpsb
xlat
adc
xor
je
dec
cmp
scas
push
icebp
dec
shl
dec
js
fwait
mov
pmaddwd
xchg
daa
cmp
scas
insl
mov
mov
sbb
xor
xor
mov
inc
popl
das
push
pop
sub
mov
std
mov
jb
ss
pop
or
pop
das
fsts
into
dec
lret
push
out
dec
xchg
ja
dec
mov
inc
mov
xchg
in
pop
ret
jg
pop
mov
movsb
fidivrs
inc
or
rcrl
ficomps
cmp
and
xorl
es
aaa
pop
xchg
mov
jecxz
push
push
xchg
cmp
jp
lods
lods
xor
test
and
popa
add
and
mov
sahf
lahf
xor
inc
popw
clc
or
dec
cltd
mov
aas
lret
lahf
popa
lahf
loopne
ja
mov
push
bound
popf
sub
xor
sub
in
xchg
xor
loope
int
inc
adc
fdivr
pop
subl
jbe
lcall
xchg
cmp
aad
popa
and
mov
imul
subl
ret
and
lds
add
andl
rorl
sti
data16
jge
repz
push
bnd
lret
cmc
dec
add
cmp
jl
insb
pop
mov
repnz
push
mov
gs
jns
push
nop
jne
or
inc
je
shll
gs
xchg
lods
mov
or
sub
or
dec
jae
shrb
mov
stc
mov
sbb
push
mov
jge
pop
push
xlat
scas
mov
mov
dec
sti
dec
mov
dec
adc
punpcklwd
xor
insb
mov
repnz
push
xlat
movsl
rcll
sub
js
or
mov
out
and
fiaddl
jmp
and
or
inc
sub
pop
mov
fdivrp
lock
fiadds
push
sbb
sbb
cmpsb
mov
int
fidivrs
xchg
lods
stc
rcrb
daa
add
cwtl
sbb
lret
jecxz
stos
ljmp
xchg
loop
pusha
fistps
jne
es
adc
jno
sub
rcr
es
jbe
js
fidivrs
jb
das
jg
es
pusha
icebp
loop
and
int3
inc
dec
insb
sahf
xor
lahf
stos
call
rcrb
dec
jmp
repnz
adc
hlt
mov
xchg
cmp
jp
popa
mov
xchg
jns
lock
int
push
adcb
enter
push
inc
xor
dec
mov
jge
jnp
pushl
loopne
push
outsl
mov
lret
jl
mov
scas
mov
cltd
add
ret
stos
lret
fisubs
fbstp
cmpl
ss
shl
or
lds
ret
nop
stos
or
sbb
inc
lock
sahf
and
mov
pop
mov
jge
out
les
repz
ret
cld
stos
subl
jnp
sub
cmp
and
adc
or
insb
lods
pop
dec
cld
je
icebp
add
sub
mov
dec
lret
int
mov
pop
xchg
out
pop
fimull
sub
or
jo
jge
mov
sbb
jae
cmpsl
mov
inc
jge
pop
and
push
sbb
imul
fcompl
jmp
mov
or
outsb
sub
inc
out
jle
pop
shlb
jg
pusha
cmp
fistps
push
mov
xor
scas
mov
cmc
jne
scas
and
test
push
cwtl
mov
dec
lock
lcall
mov
fdivp
jle
lcall
aad
cltd
lods
and
popf
int
pushf
addl
mov
dec
mov
cmp
lcall
mov
xor
xchg
test
popf
jnp
inc
push
mov
pusha
inc
jl
loopne
insb
or
push
pop
xor
lods
pop
movsb
or
or
add
pop
mov
inc
add
xor
ljmp
cmp
in
int
mov
imul
fiadds
xor
push
and
repz
cmpsl
in
mov
mov
mov
mov
cmp
imul
shrl
aaa
je
xchg
push
orl
imul
jb
xchg
mov
cmpsb
mov
cli
stos
insl
mov
int
xchg
jge
inc
xchg
pop
int
das
mov
shlb
outsl
xor
pusha
mov
clc
lcall
outsb
mov
stos
add
out
mov
fiadds
enter
jecxz
xlat
imul
leave
fnstcw
sub
mov
cmc
sbb
out
pushf
iret
adc
push
int
jbe
adc
popa
cmp
imul
adc
mov
inc
mov
sub
and
sbb
mov
sbb
add
cmpsl
pop
mov
xchg
add
dec
pop
ljmp
mov
movsl
outsb
leave
sub
jae
aaa
sub
pusha
insl
mov
jmp
mov
add
dec
mov
push
cltd
mov
xchg
mov
or
mov
sbb
xchg
or
nop
repnz
popl
popa
lret
frstor
push
scas
sub
and
arpl
jmp
and
pop
jne
inc
cmp
je
mov
lock
and
inc
sbb
aam
mov
arpl
popf
pop
ljmp
pushf
rclb
jne
or
std
pop
dec
and
pop
addr16
or
insb
arpl
mov
aas
adc
imul
lret
mov
dec
mov
push
fists
insl
aas
jne
addl
mov
test
inc
rorb
fs
mov
jge
lods
mov
fwait
bound
sbb
dec
loope
rcl
jmp
and
push
ja
leave
pop
pop
add
jo
int
adc
out
sub
push
push
xchg
mov
dec
mov
js
add
cmp
mov
popf
xchg
loopne
repnz
outsl
stos
aas
aad
mov
fwait
sub
sub
mov
popa
adc
mov
sti
loope
addr16
jle
aad
mov
out
pop
cwtl
sub
call
scas
shll
ja
inc
xor
jg
cs
cli
rclb
mov
test
shlb
jne
dec
adc
out
adc
pop
lcall
sbb
icebp
shl
inc
test
int3
dec
push
rcrb
mov
xchg
pop
push
mov
xchg
dec
jge
jge
dec
dec
loope
mov
pop
xchg
fstpl
sub
or
addr16
xor
lods
leave
push
or
cmp
sub
mov
xchg
inc
and
rcrb
nop
push
out
cld
jp
clc
cld
test
fcmovne
xchg
jmp
movsl
sub
mov
test
fidivrs
lret
push
daa
lods
shlb
xchg
add
push
cltd
jg
fstps
and
repz
push
mov
in
mov
or
cmc
lret
cwtl
or
inc
je
mov
adc
mov
adc
outsb
xlat
fbstp
sub
mov
dec
xchg
jae
push
add
push
orl
in
xor
xor
pop
or
movsb
insl
xor
nop
mov
jne
or
push
sbb
jl
cmp
dec
xchg
ja
jne
pop
lds
add
jecxz
cmp
mov
and
mov
std
jae
mov
nop
dec
shll
mov
sub
cmp
xlat
push
pop
mov
adc
rcrb
pop
sub
cld
inc
xchg
sub
adc
aad
or
inc
in
adc
push
add
mov
jno
rcrb
lds
jns
and
aad
loopne
or
in
fwait
dec
and
lea
es
sahf
mov
addr16
test
lcall
xlat
adc
stos
or
out
int3
int3
cmp
adc
lock
add
ret
cltd
lret
mov
fisttpll
jecxz
rcr
adc
or
ja
sbb
test
loopne
adcl
mov
mov
mov
loop
add
xor
fildll
mov
add
sub
in
psadbw
jecxz
movsl
out
mov
lods
jp
cmc
out
sahf
outsb
push
adc
jl
cli
sub
gs
pop
das
cmpsl
popf
fnsave
adc
lods
or
fsubrs
popf
insb
xchg
or
test
xor
push
rcll
stos
cli
jnp
or
call
sub
test
pop
das
pop
dec
sbb
sbb
push
loopne
adc
ret
arpl
lods
shl
shlb
out
fs
mov
icebp
jge
mov
outsb
mov
adc
xchg
mov
or
sub
jmp
mov
cmp
stc
sti
cmp
mov
div
shrl
call
inc
jnp
xor
or
aas
or
lods
dec
loope
pop
das
sbb
fmul
lock
lcall
dec
loopne
xchg
fcmovnb
loope
out
xchg
cld
cli
fld
jae
xchg
ljmp
cmpl
and
outsl
dec
or
test
xlat
repz
pop
in
loop
cld
lcall
mov
sub
add
fisttps
xchg
add
and
das
loopne
xor
or
mov
outsb
adcb
shlb
data16
mov
fninit
cs
pop
pop
xchg
xor
bswap
jns
stos
fwait
sub
push
push
mul
jle
lods
nop
pop
sbb
sub
aad
mov
cwtl
sbb
neg
lcall
add
push
incb
mov
push
jecxz
and
xor
push
jne
and
mov
aam
out
mov
pop
test
mov
mov
popl
fistpll
imul
out
clc
mov
and
in
add
in
mov
adc
fcoml
mov
push
add
adc
ja
insl
adc
in
pop
out
fwait
jno
jecxz
mov
rol
in
flds
fisttps
xchg
mov
ret
lods
push
loop
sub
adc
mov
out
lret
push
or
stos
frstor
fcomip
dec
leave
sbb
inc
inc
ljmp
divb
pop
cmp
xchg
je
lahf
mov
jg
push
cmc
dec
push
scas
imull
xchg
push
into
leave
pushf
push
js
lods
int3
lahf
mov
pushw
inc
mov
nop
mov
mov
inc
popf
addl
rorb
adc
cmp
shlb
lock
mov
std
mulb
into
out
popf
andb
xchg
mulb
inc
imul
adc
mov
adc
rep
pop
pop
jne
jbe
mov
test
push
mov
fdivrs
call
add
push
add
mov
aaa
rol
out
aas
pop
pop
add
jne
adcb
or
inc
aam
cmpb
enter
jmp
dec
fs
fisubrl
inc
addr16
loop
out
movl
mov
mov
cwtl
mov
cld
adc
or
scas
stc
mov
cwtl
push
and
and
mov
adc
xchg
inc
lret
stc
sbb
mov
dec
jno
scas
mov
out
mov
xor
xchg
sub
aad
xor
mov
ret
inc
mov
outsb
pop
sub
xor
es
xchg
arpl
inc
les
xchg
scas
mov
mov
push
repz
ror
insl
lret
cltd
pop
add
push
outsl
jno
aad
xchg
and
cmp
cli
test
rorl
push
sbb
shll
dec
test
arpl
in
loope
std
push
hlt
push
insb
adc
call
cmp
jo
push
jnp
push
imul
push
cmp
add
stos
pop
xor
aas
fwait
stos
or
rcrl
mov
mov
ljmp
xchg
lahf
ret
insl
cmpsb
push
jne
jns
cli
dec
mov
nop
dec
pop
push
or
dec
sub
fnstsw
or
sbbb
outsl
fisttpl
sti
push
and
fwait
jmp
shll
imul
mov
sub
cmp
neg
inc
out
mov
out
loop
add
push
or
mov
sub
push
imulb
or
aad
cltd
jno
adc
inc
jp
fsubrl
lods
ret
test
lret
push
leave
sahf
mov
adc
int3
mov
stos
stos
pop
sbb
out
sarl
in
fadd
push
sub
in
pop
push
fisubrl
sbb
mov
std
and
lret
jmp
and
pushw
mov
cwtl
mov
pusha
sti
push
xchg
jmp
les
ja
aaa
add
jns
sub
cmpsl
cld
push
das
shl
and
jmp
and
fsubrs
pop
pop
inc
adc
call
enter
ret
add
aad
xorl
cld
int
sar
hlt
mov
sarb
lods
ret
cmpsb
call
imul
faddl
leave
stos
dec
in
loop
dec
fistl
xchg
pop
rcl
sbb
lea
ds
jns
jnp
lcall
and
mov
jmp
inc
jle
std
call
sahf
mov
pusha
lock
lahf
lea
sub
inc
adc
mov
rcr
mov
dec
add
push
jecxz
and
mov
xor
inc
lock
cld
pop
js
add
lret
xchg
xchg
sbb
cmp
xchg
scas
xor
hlt
loope
addl
cmc
nop
and
shl
mov
mov
pop
in
mov
aad
jecxz
fsubrl
cmp
insb
pusha
add
ja
jg
xor
imul
popf
dec
scas
shlb
stc
jmp
aas
fsqrt
inc
imulb
stos
loop
pop
cmpb
dec
jle
sub
jo
xor
add
out
into
daa
cwtl
mov
lock
sub
outsb
jne
dec
push
inc
inc
mov
popf
jns
or
add
in
mov
pusha
adc
sbb
in
cmpsb
jge
sub
pop
mov
push
jns
and
inc
std
insb
mov
add
ja
cmp
add
and
cli
inc
push
and
test
outsl
bound
pop
les
jno
jle
sti
inc
push
mov
fdivs
adc
orb
leave
stos
andl
subb
sbb
xor
cmpl
cmc
push
dec
mov
xor
jbe
push
dec
leave
fstp
int
mov
mov
jae
dec
lods
loopne
mov
mov
ret
in
inc
scas
adc
es
mov
lods
and
mov
cmp
jl
ret
daa
mov
jae
daa
jecxz
pushf
adc
push
jo
enter
xchg
rdtsc
arpl
jnp
lcall
div
les
pop
fcomps
mov
andl
cmpsb
dec
sub
nop
ljmp
out
int3
cmpsb
out
cmpb
cmp
pop
inc
pop
mov
fildl
scas
test
cmp
lahf
mov
in
les
jae
sub
das
mov
loopne
hlt
and
in
inc
and
mov
ss
icebp
dec
cmpb
pop
jo
pop
inc
test
push
push
sbb
stos
cmc
mov
inc
mov
push
aad
loope
jp
jecxz
aas
popf
stc
ljmp
jle
dec
or
out
clc
mov
roll
popa
cmp
stc
imul
push
gs
cwtl
mov
sub
mov
int3
sbb
inc
loope
pushf
out
push
dec
into
int3
mov
and
aaa
or
or
iret
add
or
and
mov
aad
out
dec
mov
pop
in
ljmp
shl
mov
xchg
jg
pop
dec
mov
pop
add
sbb
lock
sub
jno
add
mov
pop
sbb
outsb
out
lock
mov
mov
shrl
and
in
in
ljmp
das
adc
xchg
lods
stos
pop
or
inc
out
stos
nop
sbb
hlt
add
adc
or
jge
adc
mov
aaa
sub
adc
mov
dec
scas
lret
stos
dec
add
adc
jnp
mov
inc
movsb
icebp
xchg
xchg
mulps
xor
dec
scas
and
daa
push
in
repz
push
pop
insl
and
or
insl
cli
pop
dec
nop
mov
push
loop
das
push
jo
sub
fwait
sub
and
int3
rorl
adc
cld
cltd
lret
clc
add
jmp
stc
sub
jl
xchg
cmp
pop
inc
adcb
adc
xor
mov
mov
xchg
mov
cmp
out
xorl
or
sub
xor
inc
bound
adc
dec
jle
iret
sub
dec
fsubrs
into
ljmp
daa
or
in
pop
push
xchg
xlat
inc
mov
cld
lock
push
mov
dec
fmull
outsl
in
test
ret
in
mov
sub
stos
outsl
sbb
sti
rcll
xchg
pusha
push
xor
xchg
popl
lahf
cmpsb
insl
aas
and
iret
sub
fadd
test
push
insb
and
adc
cmc
and
xchg
rcll
ja
test
ljmp
and
pop
in
sub
sar
xchg
pop
icebp
dec
lret
pop
call
xchg
adc
add
jge
adc
mov
cld
mov
imul
cmc
pop
inc
in
mov
dec
mov
ret
cwtl
inc
xchg
mov
mov
lcall
adc
xchg
insl
aas
repz
mov
mov
mov
xor
add
sub
mov
mov
dec
inc
cmp
stos
and
add
jns
ss
lahf
lret
test
or
sbb
xor
in
xor
xor
lods
clc
jle
mov
and
movsl
cmp
push
pop
hlt
scas
dec
hlt
adc
pop
jmp
movsl
jg
xor
add
jns
data16
cwtl
sbbb
lret
dec
jge
mov
mov
jbe
adc
andb
xchg
pop
imulb
xchg
push
push
mov
mov
mov
jle
xor
bound
loope
sub
ret
in
xor
stos
dec
fsubrs
mov
xchg
jb
jecxz
adc
add
and
and
mov
push
fldl
out
jp
fldcw
ljmp
dec
and
xor
ret
push
push
cld
xchg
in
adc
and
sbb
jmp
jmp
out
out
dec
icebp
pop
sbb
outsb
push
jae
pusha
repnz
js
dec
cltd
mov
call
xor
jne
bound
sub
sub
in
fidivs
das
mov
and
push
setno
xor
push
dec
xchg
fiadds
cmp
add
push
icebp
lahf
cmovl
or
lock
lock
aam
dec
cltd
pop
sub
xor
popa
stos
sbb
mov
loop
hlt
xchg
and
xchg
ret
rolb
cltd
sub
cmp
std
xchg
aaa
and
aaa
je
push
mov
sub
cmp
or
sub
and
sbb
int
mov
aad
add
mov
adc
shll
jb
aad
mov
xor
popf
in
dec
or
sbb
in
pop
in
xchg
pop
js
loopne
jmp
xchg
jl
push
lret
bound
add
sub
repnz
stc
addb
dec
aam
inc
inc
clc
mov
dec
loopne
push
xorl
scas
mov
mov
cli
int3
push
fld
icebp
loop
sbb
ljmp
push
cmp
inc
push
push
inc
fs
push
call
xchg
add
pop
lret
pop
mov
aaa
movsb
xchg
divb
mov
cmc
xchg
pop
inc
lock
int3
inc
dec
dec
enter
es
push
dec
sahf
jge
in
popa
hlt
into
lea
push
rorl
pop
lret
fcmovbe
jle
cmc
iret
cmp
adc
dec
jae
mov
add
sub
rorl
dec
adc
dec
cmc
pusha
or
fucomip
lcall
xchg
out
add
hlt
add
jo
test
mov
mov
jno
sub
sub
push
sbb
fldcw
out
hlt
and
cs
inc
jp
jp
insl
das
daa
test
shlb
mov
dec
sub
in
out
aam
push
mov
out
mov
add
add
sub
xchg
incb
adcl
fisttpl
mov
shlb
nop
pop
lea
lret
jae
popa
mov
inc
xor
jnp
push
mov
jne
and
pop
sub
aad
lret
sbb
lret
dec
add
sub
xchg
push
bound
jo
add
jae
push
pusha
add
in
loop
mov
lods
xchg
ret
imul
mov
jo
shl
cmp
mov
push
jmp
pushf
subb
scas
add
xchg
lods
repz
andl
in
sti
fists
dec
mov
push
repz
ret
ljmp
mov
inc
pop
mov
ss
ljmp
sar
popf
adc
add
mov
add
in
sub
push
dec
in
fcoml
jle
mov
scas
lcall
aaa
add
jecxz
bound
mov
or
lods
mov
mov
push
xor
push
jno
jmp
in
xchg
test
lret
lret
filds
insl
daa
jle
cmp
jo
jbe
into
pop
xor
xchg
rorb
mov
in
inc
je
xchg
xor
test
pop
fldenv
in
pop
dec
add
xchg
aad
lock
sub
shl
mov
or
popa
outsl
out
sbb
lea
lods
mov
sub
sbb
rorl
cmp
sbb
sub
sub
xchg
cmpsl
add
call
out
cltd
mov
pop
out
pop
fists
daa
lea
je
pop
add
xlat
pop
mov
push
cld
and
bound
mov
pop
cwtl
mulb
cltd
addb
inc
in
push
push
dec
stc
fildll
ret
add
jecxz
mov
cmp
icebp
or
xchg
movsb
inc
cmp
inc
mov
nop
sbb
insb
dec
clc
cmp
jb
add
outsb
xchg
dec
fisubl
push
add
xchg
ret
adc
xor
cmc
lods
xor
jo
data16
aas
lret
das
movsl
mov
pop
leave
mov
add
pop
mov
xchg
jecxz
aas
dec
mov
fisubl
jno
fidivrl
cmp
or
lea
test
sub
inc
subl
pusha
icebp
gs
xor
pop
lea
cmpb
mov
mov
jne
sbb
in
xor
ljmp
js
pop
in
fwait
leave
fdivl
sub
xchg
cmp
xor
mov
lcall
mov
hlt
mov
loopne
mov
mov
mov
jae
mov
xchg
test
inc
std
jecxz
lea
gs
cli
jo
sbb
mov
sub
mov
xor
int3
cs
inc
xor
loopne
lret
and
sub
lret
ja
sbb
aas
outsb
and
aas
xchg
push
int3
dec
sub
jecxz
stc
ffree
test
inc
mov
movsl
enter
mov
aas
inc
xchg
dec
pop
inc
iret
or
pop
xor
stc
lods
test
push
addr16
repz
push
lds
cli
lock
mov
loope
push
bound
rep
mov
inc
cmp
push
mov
sub
shll
xchg
shrl
and
inc
add
mull
lret
push
push
mov
inc
mov
testb
jecxz
out
rorl
lods
scas
iret
ds
mov
jno
adc
dec
adc
adc
push
and
repz
mov
andb
outsb
cmp
push
and
pop
and
cmpsb
in
pop
or
adc
testb
nop
dec
sub
jbe
mov
test
xchg
or
push
aad
lret
arpl
das
jae
cmpsb
test
dec
rorb
mov
test
or
lock
dec
dec
mov
mov
dec
and
inc
int3
jo
insb
push
hlt
jg
stos
aaa
inc
cmc
test
data16
test
outsb
stos
fnsave
mov
mov
mov
sub
xor
jmp
bound
jl
iret
and
ret
repz
gs
sub
sti
iret
aad
lret
sub
bound
ljmp
out
and
inc
ds
cmpsl
ljmp
push
push
mov
jb
lcall
imul
pop
stc
nop
push
xchg
mov
int3
push
inc
test
outsb
mov
in
and
push
mov
stos
inc
loopne
ror
lcall
jle
in
push
and
loopne
fdivrs
scas
std
rclb
lds
or
inc
js
lret
mov
cmp
arpl
dec
lret
out
sub
add
push
jle
inc
dec
inc
pop
cmpb
sub
inc
ja
imul
aad
pop
sbb
mov
jmp
mov
fcom
es
int3
outsb
dec
insl
fisttps
push
outsl
jae
dec
mov
mulb
push
mov
dec
pushf
mov
fisubrs
push
adc
mov
cmpsl
imul
dec
and
sbbb
and
dec
jle
or
adcb
fs
andl
push
imulb
cmp
jle
and
jns
push
jae
jl
decl
mov
js
mov
inc
push
aam
nop
es
int
lahf
fs
hlt
pop
xor
clc
and
rcr
jae
lahf
cs
addr16
push
out
sbb
pop
scas
adc
xchg
sub
lret
leave
mov
neg
out
mov
dec
cmpsl
in
sub
push
sbb
cmp
dec
cmp
mov
in
loop
rcrb
push
lods
push
js
or
cmp
fimull
mov
inc
ss
test
leave
dec
mov
pop
pop
shl
fiaddl
rorl
inc
aad
test
sahf
mov
fcompl
jne
mov
mov
push
lea
jo,pt
stos
xor
in
sub
pop
je
dec
cmp
and
andb
add
sub
push
test
clc
push
or
test
out
jno
cld
mov
andl
repz
insb
mov
mov
xor
test
xlat
and
fisubrs
enter
movsl
stos
scas
add
inc
and
jnp
shr
push
loopne
jae
test
fistpll
das
into
rcrb
or
push
xchg
cmpsb
loopne
negb
mov
add
fyl2xp1
mov
push
jo
or
decl
pop
jg
out
jg
idivb
push
sbb
sub
dec
repz
xchg
fnsave
and
daa
mov
or
test
addb
jecxz
jbe
testb
nop
sti
push
push
mov
cltd
or
pop
push
aad
out
lock
xchg
lods
xor
mov
xor
fists
inc
and
xchg
mov
loop
insl
dec
mov
push
cmpsb
out
push
popf
cli
mov
pop
xorb
cmp
repnz
leave
test
icebp
and
add
rorb
xchg
sub
scas
xorb
call
sbbl
mov
cmp
cmc
xchg
movsl
hlt
test
outsb
leave
into
xchg
or
jae
dec
fdiv
in
push
or
add
adc
les
js
aad
inc
xchg
mov
sbb
pop
add
dec
outsb
fldt
cmpsl
adc
fimull
mov
clc
cli
cli
mov
dec
cmp
mull
clc
loop
xor
mov
rorb
fwait
mov
adc
jno
or
xor
pop
cmc
int3
dec
fwait
repnz
dec
popl
cmp
aas
and
mov
int3
shrb
xor
or
out
xchg
sarb
ljmp
lea
ret
and
mov
jbe
std
lds
mov
int3
xchg
call
and
lea
stos
mov
and
jne
xlat
inc
or
mov
in
dec
mov
aam
mov
jne
and
pop
pop
jb
adc
mov
ljmp
bound
mov
jp
adc
lds
sbbb
call
aad
mov
lea
fidivl
lods
jg
in
or
inc
jmp
fwait
call
mov
jns
ljmp
and
jb
pop
push
inc
mov
xchg
or
inc
xchg
xor
push
or
and
push
loope
jnp
gs
dec
inc
jne
mov
and
sbb
jp
loop
xor
sub
sar
lods
adcb
mov
pusha
add
mov
mov
adcl
jnp
andl
sahf
mov
mov
daa
cs
outsl
ds
rorl
lcall
add
jbe
in
hlt
test
xchg
sub
jmp
out
push
and
push
and
shll
cltd
inc
xchg
cltd
test
sbb
sbb
lock
jle
dec
pop
mov
xchg
push
push
mov
subl
out
dec
xchg
scas
xchg
xor
mov
rcll
js
adc
mov
xor
sub
in
loope
and
sbb
mov
adc
das
dec
xor
popa
mov
push
or
dec
lds
xchg
mov
push
or
in
xchg
cmc
js
mov
nop
mov
sub
pop
sub
lahf
fimuls
mov
xor
test
mov
out
adcb
out
iret
sbb
dec
into
imul
add
outsl
jecxz
mov
lcall
mov
stos
add
push
subb
out
mov
movsb
andl
push
sbb
xor
fnstenv
ficoml
loop
push
or
push
mov
out
cmpsl
pop
xchg
xchg
push
or
or
adc
dec
iret
dec
pop
outsb
stc
xchg
lds
loope
repz
insb
mov
out
sbb
jmp
ret
iret
mov
jae
xor
dec
cmp
sahf
out
jnp
repz
mov
sbb
ljmp
cld
out
lret
test
hlt
pop
push
pop
pop
out
xchg
dec
add
and
lcall
or
xor
inc
push
jae
jno
dec
aam
jp
pushf
pop
jno
xor
jg
lock
xchg
sbb
ljmp
dec
pushf
cli
mov
add
imul
orb
jecxz
jne
push
push
sub
add
or
cltd
xchg
cmp
subb
out
cmp
mov
iret
fcmovne
and
fidivl
pushf
pop
adc
mov
dec
stos
push
repz
jecxz
jmp
repnz
mov
loop
xchg
cs
punpckhdq
call
pop
mov
mov
sar
movsl
sub
or
lea
jge
sub
ljmp
push
xor
xchg
and
dec
repz
lcall
popa
lret
mov
fwait
adc
xchg
cltd
fdivrs
test
pop
cs
lahf
rorl
stc
mov
test
mov
pushf
sbb
insb
inc
pop
in
ljmp
pop
add
aaa
dec
push
insl
mov
aas
rcll
or
jo
jmp
cmp
push
lock
pop
mov
mov
fwait
mov
and
add
pop
popa
lahf
push
mov
xlat
mov
popa
popa
sub
dec
mov
dec
ljmp
xchg
daa
ja
sub
popa
adc
or
aad
in
sbb
mov
mov
xor
insb
lods
add
dec
push
push
xchg
ret
aam
mov
in
adc
and
lret
cmp
sub
shl
scas
jg
jl
jmp
and
jl
aad
xchg
jg
cmp
movzwl
ret
clc
dec
aaa
and
es
xor
popf
in
loopne
gs
les
and
jge
sbb
cmp
pop
and
and
and
imul
hlt
mov
les
and
out
mov
icebp
pop
jle
test
xchg
dec
ljmp
mov
mov
cmp
mov
jp
popa
jnp
sub
sti
jg
push
xchg
jae
lcall
into
mov
pcmpgtw
arpl
xchg
das
leave
dec
test
ljmp
xchg
test
xlat
js
rorb
pop
jl
outsb
cli
cmp
in
int
leave
dec
sub
jmp
pop
sub
push
and
inc
jle
cmp
inc
pushf
mov
sub
cmp
in
out
stc
imul
popa
inc
scas
mov
or
loope
xor
push
jp
adc
add
sti
adc
shlb
in
xor
push
fldt
and
inc
arpl
cmp
or
daa
or
mov
scas
leave
and
and
pop
arpl
pop
mov
xor
jno
xor
mov
add
icebp
dec
mov
sbb
outsb
jo
mov
les
mov
and
jae
xor
inc
ss
lret
jae
and
cs
andb
gs
imul
test
ds
dec
mov
mov
jb
adc
call
jbe
in
movsb
fisubs
push
test
sbb
sub
test
pop
stos
pop
push
jg
icebp
aam
stos
icebp
xchg
or
subb
cli
lret
xchg
lods
inc
xchg
out
xor
into
or
adc
and
repz
inc
aam
lea
mov
xor
mov
push
xor
or
mov
xchg
ja
and
mov
sahf
jl
gs
sbb
loopne
stos
adc
jnp
in
test
mov
cmp
ficompl
rcrb
das
push
add
flds
movsl
in
mov
cmp
loopne
es
movsl
mov
lds
mov
stos
into
aaa
cmp
imul
das
mov
sbb
mov
cltd
movsl
xor
jnp,pn
and
stc
repz
mov
aaa
and
cwtl
dec
and
clc
adc
cmp
mov
int
xchg
stos
dec
andb
cmpsb
mov
in
xor
add
dec
add
sub
sbb
jbe
into
scas
and
xor
addb
jmp
lods
leave
repnz
xchg
push
pop
daa
pop
pop
mov
aad
fst
adc
insl
inc
stc
mov
cmp
and
lock
or
or
jne
xchg
outsb
in
es
js
pop
xchg
xchg
pop
je
shll
stos
repz
out
je
cmp
dec
push
push
pusha
addr16
dec
fwait
in
int
jle
ret
push
dec
shl
jmp
or
and
xor
add
xchg
mov
xor
test
fidivrs
ss
in
jo
jbe
mov
mov
or
add
add
xchg
hlt
cmpsl
jecxz
fldt
lods
test
mov
inc
lea
loop
cld
fnstenv
repnz
insb
lret
push
mov
xchg
mov
or
xor
sahf
xchg
and
mov
lret
jne
popf
lcall
adc
adc
xor
cmp
roll
adc
or
shll
push
sub
fsubl
or
sub
xchg
cltd
mov
pop
xchg
and
pop
aas
dec
xchg
cwtl
mov
aaa
mov
aas
mov
jle
ret
decl
sub
xchg
idiv
stc
jno
hlt
inc
sub
push
lock
mov
or
sub
push
ss
outsb
xchg
and
lock
lret
lahf
mov
stc
and
nop
insb
fists
add
sub
or
jo
adcb
mov
ss
or
xor
bound
or
into
xchg
data16
sub
sub
mov
mov
mov
insb
xor
jo
push
pop
or
dec
int
bound
dec
push
dec
rolb
or
cmp
repz
lret
fimull
inc
fdivs
mov
imul
addr16
and
outsb
call
pushf
sub
insb
outsb
or
ret
mov
fxch
inc
je
test
dec
stos
cli
mov
adc
mov
mov
push
shll
inc
leave
sarl
std
mov
sbb
inc
dec
hlt
add
icebp
stc
mul
lcall
xor
mov
jge
fs
mov
cld
xor
xchg
cld
stc
mov
cmp
je,pt
adc
adc
in
enter
lds
test
xchg
test
push
js
movsb
iret
in
insl
xor
xchg
sub
cmpsl
mov
and
lret
xor
sub
insl
pop
lret
sbb
aas
mov
add
test
insb
mov
and
jbe
xchg
enter
sub
lcall
popa
pusha
or
and
mov
xchg
cmc
xchg
gs
adc
xchg
mov
xchg
add
sbb
mov
popf
jecxz
push
inc
rclb
shlb
and
jne
sub
xorb
mov
fsubr
push
int3
push
cmp
mov
test
xor
sti
cmp
pop
jae
loopne
xor
inc
mov
lock
xchg
add
jle
imul
push
ret
test
push
insl
dec
cmc
mov
data16
mov
movsl
xchg
mov
gs
sub
xorl
sahf
mov
hlt
or
subl
xor
sub
popa
xchg
popf
test
std
push
repnz
rclb
jne
popa
or
fnstenv
ja
fistl
repnz
stos
mov
cld
xchg
fs
jecxz
push
cli
pushf
imul
cmp
lret
sbb
lahf
sahf
xchg
test
and
div
inc
cmp
nop
add
mov
mov
sarb
mov
stos
adc
adc
mov
repnz
movsl
sbb
jno
lahf
sub
and
lods
mov
and
add
pop
mov
ja
int
ljmp
add
int3
pop
call
xor
jae
add
jl
xchg
add
sub
icebp
cmp
fcoml
jmp
xchg
cld
aaa
xor
data16
and
mov
xlat
cmp
outsb
out
cmp
frstor
sbb
nop
and
arpl
test
out
add
lret
out
mov
xchg
jg
cmp
shrb
sbbb
fsubr
cmp
sbb
pop
xor
xor
cmp
and
aas
fstl
jne
out
je
mov
add
sahf
repnz
or
jecxz
push
outsb
lods
push
imull
jle
cmp
sbb
outsb
daa
jne
adc
dec
or
and
jnp
lret
mov
mov
popf
lock
insl
add
pop
iret
into
arpl
fisubl
add
xlat
pop
fsubl
mov
test
shlb
add
xchg
inc
dec
jnp
jmp
pushl
dec
cwtl
cld
popa
fdivrs
iret
xchg
mov
jecxz
lea
stos
xchg
or
fisubs
add
les
and
xor
sub
sar
int3
push
es
sbb
mov
jge
inc
adc
in
imul
imul
mov
push
xchg
das
into
adc
jmp
pop
lods
mov
jg
adc
out
in
dec
mov
adc
out
cmp
cli
mov
enter
sti
mov
mov
das
rol
push
lods
andb
mov
out
insl
cmpsl
push
lret
or
mov
ret
push
dec
lret
xchg
jp
sub
ja
lcall
pushf
es
jecxz
sbb
lret
pop
mov
mov
inc
repnz
mov
data16
ret
mov
mov
pop
mov
adcb
sub
xchg
jp
fst
pusha
mov
orl
adc
jo
pop
fisubl
mov
fs
jmp
mov
out
sub
or
aaa
fadds
stos
mov
inc
ds
loop
dec
mov
fcomi
das
jno
push
orb
push
jb
fs
dec
xchg
ljmp
aaa
or
pushf
popa
mov
rolb
int
aad
scas
leave
mov
lahf
jb
in
jle
leave
xchg
inc
out
xchg
inc
mov
fists
lods
mov
mov
xor
add
xchg
cmp
sbb
or
test
lea
push
mov
push
iret
push
popf
das
movsl
sub
call
sarl
jne
test
jae
cmpsb
mov
imul
out
xchg
pop
xchg
push
out
icebp
sbb
push
fisttpll
xor
mov
das
mov
lea
in
mov
jl
jo
jge
lcall
sub
jb
iret
ss
cmp
pop
xchg
jg
cs
imul
mov
or
and
in
insb
call
jo
or
dec
lret
mov
enter
add
cltd
pop
pusha
jmp
ret
inc
xchg
xchg
push
movsl
or
ja
popa
mov
or
fdivp
or
popf
mov
and
fistps
inc
jmp
ss
mov
aad
push
jne
dec
jg
pop
jge
arpl
in
xor
out
icebp
and
adc
sbb
call
and
jns
pop
aad
ror
lds
sub
stos
jl
nop
dec
gs
loop
rolb
fsubl
and
mov
jb
fstpl
lret
icebp
dec
add
into
and
push
add
sub
ret
pop
decb
in
enter
jae
scas
pop
mov
popl
xor
cmp
call
out
es
imul
lods
inc
push
inc
mov
repnz
cmc
cltd
bound
roll
inc
jns,pt
adcl
push
mov
add
movsb
add
pop
test
dec
es
in
sarl
jne
les
out
scas
test
sub
xchg
sub
cmpsl
scas
cli
xor
cwtl
jo
ss
sub
pop
add
stos
ds
addb
sbb
jo
adc
std
cmp
or
and
aam
mov
call
je
cmc
dec
movsl
mov
gs
push
xchg
ret
orl
icebp
outsb
cmp
xor
sub
fimuls
mov
out
inc
inc
or
jnp
jae
mov
lret
pop
dec
add
ret
outsl
dec
mov
insl
mov
loopne
es
cbtw
pop
push
ds
fsubrs
pop
adc
fists
xchg
jecxz
std
xchg
pop
scas
xchg
scas
jg
or
sub
in
sub
push
addb
push
fcomps
aad
test
or
es
test
data16
shrl
scas
lods
flds
es
xchg
lock
xchg
scas
add
inc
outsb
aaa
inc
add
sub
leave
cmp
xor
mov
sbbl
push
jge
mov
xor
cmpsb
ds
sub
fmuls
loope
test
orb
or
rorl
and
addb
inc
icebp
cs
adc
inc
mov
sbb
xchg
or
push
rcrb
sbbb
inc
into
lcall
inc
test
scas
lea
int3
bound
sahf
and
sub
lahf
addl
sahf
mov
mov
leave
sub
push
cmp
xchg
mov
xchg
out
nop
push
cmp
pop
adc
push
xorb
call
inc
adc
loope
push
stos
mov
or
inc
mov
sub
stos
mov
inc
mov
sub
andl
insl
addb
sub
cld
sub
iret
loope
adc
add
shll
xchg
test
call
sub
iret
mov
pop
inc
dec
cld
es
sahf
lock
arpl
scas
fidivl
movsb
stos
pop
mov
dec
mov
push
xchg
adc
das
test
shll
mov
ficompl
adc
mov
or
mov
sub
andl
jae
stos
xchg
xor
push
inc
and
and
arpl
inc
sbb
aad
leave
in
out
int
adc
outsb
sahf
mov
dec
iret
ss
mov
sahf
imul
sti
sub
cmpsb
sar
mov
adc
jmp
and
in
pop
pusha
out
xchg
testb
orl
add
jbe
mov
lret
pop
enter
push
lea
int3
xchg
cmp
fcomi
das
and
inc
mov
dec
loope
nop
ljmp
cwtl
adc
fdivrl
outsl
rolb
scas
or
lret
lock
fwait
mov
cld
xchg
lods
mov
imul
test
dec
or
sub
mov
ficoml
inc
pop
inc
sbbb
pop
cwtl
or
mov
xor
sub
dec
mov
cmpsl
xlat
pop
or
aam
xchg
es
jns
fsubl
movl
sub
push
aam
dec
or
jae
push
loop
add
cmpsb
dec
je
notl
lahf
lds
adc
rolb
mov
test
rolb
out
mov
shlb
shrb
jg
push
xor
pop
cs
mov
dec
stc
adc
adc
lods
xor
cwtl
arpl
dec
inc
in
adc
push
inc
sub
call
add
es
push
and
dec
mov
mov
data16
push
repnz
rorb
xor
sub
scas
iret
stc
xchg
mov
adc
fcoms
retw
cmpsl
mov
dec
lods
mov
mov
cmpsb
xchg
sub
mov
test
and
outsb
pushf
ljmp
sbb
outsl
dec
aam
scas
fwait
iret
lahf
in
add
enter
cmc
push
in
or
pop
inc
js
and
repnz
repnz
or
and
cmp
pop
test
jmp
mov
popf
adcb
xchg
and
test
jge
ljmp
or
out
sahf
inc
cltd
mov
cli
sub
xchg
iret
mov
scas
push
sbb
sti
invd
push
mov
insb
gs
inc
loopne
inc
push
mov
lret
fs
cltd
mov
orl
adc
push
sub
repz
mov
lret
outsb
ror
std
loope
pop
xchg
sub
dec
pop
insb
fisubs
clc
xchg
jb
pop
cmpsl
sar
out
sbb
scas
mov
cmpsl
test
pushf
push
imulb
add
lret
cs
adcb
push
fs
mov
gs
push
cmc
xor
inc
mov
test
lods
into
jecxz
iret
xchg
push
pusha
cwtl
and
jecxz
dec
repz
and
inc
cmpb
lret
mov
es
and
pop
into
pop
sub
loopne
jo
or
dec
test
jns
add
add
lahf
popf
scas
xchg
xor
arpl
int3
adc
push
dec
mov
pop
jg
jno
pop
mov
test
push
xor
rolb
movsb
scas
xchg
imulb
mov
insl
mov
fisttpl
shrl
cmp
sub
orl
xor
sti
adc
mov
loope
xor
out
sbb
aam
lea
popf
stc
push
or
adc
adc
mov
mov
dec
daa
sub
pushf
test
popf
in
lock
sub
mov
ret
pop
or
inc
int
je
rolb
das
je
insb
mov
or
jp
pop
add
std
in
or
xor
add
rcl
stos
mov
mov
orb
icebp
jg
add
push
pusha
sbb
mov
and
das
xor
xorl
test
das
mov
and
mov
in
sub
cld
adc
in
inc
mov
dec
cltd
test
loope
mov
xchg
mov
cmpsb
push
sbb
pop
cmpsb
in
mov
mov
xchg
jbe
mov
insl
fldl
xchg
mov
adc
psllq
mov
mov
aam
adc
mov
pop
add
sub
bound
lock
mov
test
mov
xchg
das
mov
cmpsb
repz
and
cmp
pop
repnz
loope
nop
aad
pop
adc
lret
sub
repz
cmpsb
enter
mov
mov
adc
pop
es
xor
mov
int3
lods
imulb
xchg
inc
sti
jmp
je
or
sbb
lds
int3
repz
hlt
adc
add
sbb
loop
push
push
enter
xchg
push
int3
loop
xchg
int
mov
test
pop
cmp
call
into
movsb
mov
or
nop
fstl
fsubrl
mov
pusha
cmovo
mov
fimuls
xor
dec
mov
xchg
scas
ficompl
sbb
scas
xchg
mov
ljmp
popa
add
cmp
test
sbb
mov
push
inc
xor
clc
nop
pop
sub
lcall
cmc
mov
jb
mov
mov
jnp
stc
pushf
adc
cmc
test
stc
and
popa
rcrl
and
std
and
dec
jmp
mov
inc
clc
imul
push
pop
sahf
shlb
inc
add
pop
outsl
test
fldcw
scas
addr16
push
loop
test
push
ljmp
shrb
dec
mov
nop
in
fldl
mov
sub
shl
scas
xchg
jno
and
scas
shl
push
sbb
push
mov
aaa
mov
push
ret
inc
push
adcb
loop
mov
out
inc
jecxz
into
inc
mov
dec
cmp
dec
sub
pushf
jecxz
pop
mov
loopne
popa
aaa
mov
push
outsb
sub
mov
insb
push
sub
mov
jmp
stos
pop
or
mov
and
fsubrp
icebp
mov
test
je
or
xorl
mov
sub
outsb
aam
int3
mov
push
pop
enter
leave
jb
stos
or
mov
lcall
sub
jmp
cmpsl
adc
imul
enter
xor
xor
insb
faddp
outsb
push
xor
fisubrl
push
out
mov
loop
xor
ss
ret
push
stos
cli
inc
out
pop
jg
dec
add
cwtl
clc
inc
lret
aad
cli
sub
scas
lret
jl
test
repnz
cmp
mov
mov
pop
and
subl
sub
xchg
ss
cmpsb
lahf
popa
mov
xor
mov
dec
decb
push
out
xchg
lahf
fisubrl
repnz
out
ds
jmp
pop
and
iret
or
xchg
test
loop
test
in
sbb
rcrl
movsb
pop
in
inc
lret
js
nop
andb
adc
cli
inc
add
push
push
out
imul
jns
sbb
je
cmp
add
imul
pusha
mov
mov
mov
shlb
repnz
lock
insb
scas
mov
and
ljmp
xchg
xchg
dec
fsubs
jmp
ret
enter
mov
in
pop
and
push
xchg
in
enter
aaa
mov
xchg
test
adc
sub
lods
xor
adc
decb
leave
inc
xor
repz
shlb
bound
sub
test
push
clc
jae
data16
lds
loopne
sti
sub
cwtl
int
mov
aad
push
scas
jle
jo
cs
lret
aad
xchg
stos
xor
mov
pop
or
cmp
loopne
call
xchg
adc
pop
imul
gs
push
lret
jecxz
rolb
lret
xlat
mov
cmp
and
test
jbe
mov
lret
mov
mov
add
and
or
nop
xchg
dec
jecxz
dec
xchg
sub
insb
mov
outsb
cmp
sbb
push
and
push
stc
mov
fdivrs
add
repnz
incb
mov
pop
aam
cmc
arpl
inc
lcall
adc
dec
in
or
xchg
and
in
shlb
jb
shlb
dec
daa
mov
mov
xchg
test
es
jmp
cmpsl
lcall
cmp
loope
bound
jp
cmp
mov
cmp
imul
insl
mov
inc
lahf
mov
cltd
push
mov
sbb
pop
mov
mov
loope
or
dec
mov
jle
xchg
test
test
adc
sahf
inc
push
jns
pop
jmp
mov
push
xor
mov
ljmp
push
movsb
and
es
cmp
sahf
xchg
subl
stos
pop
push
sub
nop
xchg
pop
scas
outsl
loope
aam
xchg
jo
in
das
fbld
lea
rcrl
aad
adcb
daa
push
orl
xor
outsb
test
jecxz
lcall
daa
xchg
mov
ds
mov
xor
jnp
imul
shl
cmp
push
add
mov
cwtl
and
push
pop
mov
scas
pop
clc
xor
cmp
fcom
inc
add
loopne
mov
mov
mov
mov
jmp
lret
sbb
daa
ss
push
jp
lock
decb
xor
inc
add
adc
shrl
sbb
subb
popa
ret
cmp
loope
mov
fsubrp
xor
lea
mov
aas
dec
jle
and
mov
xor
lret
lds
inc
jbe
mov
or
adc
or
push
movb
jp
mov
adc
in
mov
mov
orl
mov
inc
insl
js
jl
dec
sti
dec
sbb
leave
xchg
gs
pusha
add
aaa
rcrb
sbb
fld1
dec
mov
xlat
stc
push
mov
ret
cltd
leave
dec
rolb
add
cmp
mov
xchg
sarb
jp
jmp
inc
es
popa
lea
pop
cmp
out
and
es
mov
scas
aad
nop
shlb
cwtl
mov
jecxz
xor
xchg
jg
in
adc
shll
scas
push
and
add
mov
adc
and
adc
adc
pop
jo
mov
jae
imul
rcr
lds
dec
cmp
adc
sbb
cmp
and
jo
mov
sbb
cmp
jge
pop
movsb
pop
push
cld
clc
add
push
jae
std
stos
cli
xchg
sahf
imul
push
cli
lods
add
push
int3
and
ja
or
lsl
sub
and
pop
enter
mov
add
bound
add
js
add
shrl
cwtl
cld
aas
mov
aad
cmp
das
sub
test
bound
shrl
iret
int3
lock
shlb
mov
and
xchg
pop
inc
stos
fxch
cli
mov
ss
adc
mov
test
scas
or
sahf
insb
call
out
shrb
rolb
loope
xor
scas
cld
popa
js
aaa
das
mov
gs
andl
test
or
jb
dec
into
cmpsb
jecxz
or
adc
or
dec
push
add
test
mov
push
mov
and
add
mov
ljmp
jns
and
scas
je
pop
lret
imul
bound
and
sub
leave
xor
test
sub
inc
movsl
insl
das
aaa
lods
js
pop
dec
arpl
imul
in
adc
push
icebp
cli
and
sbb
jns
sbb
xorl
movsb
into
cltd
mov
pop
dec
outsl
lods
add
int3
lods
xor
and
adc
lods
add
xor
int3
inc
shl
jae
lcall
dec
test
outsb
xchg
cmc
dec
in
or
andb
mov
ss
imul
or
xor
cmp
js
sbb
movsb
loop
cmp
out
fisubs
mov
hlt
fisttpll
cltd
push
aas
popa
mov
xorb
call
cld
lcall
orb
adc
scas
test
lods
jmp
jnp
adc
inc
in
jmp
ret
movsl
mov
jnp
leave
pop
icebp
mov
aad
push
mov
mov
or
outsb
jb
adc
movsb
sub
movl
cmp
cmp
clc
sbb
mov
pop
in
push
cmp
or
in
mov
push
jo
sbb
inc
test
inc
movsl
loope
jns
jae
add
dec
pop
jnp
test
pop
pop
insb
pop
in
movsl
or
in
loope
pusha
test
sub
iret
push
xor
adc
decl
jecxz
push
or
in
mov
enter
lret
lods
jle
maskmovq
pop
sub
jg
xchg
test
incb
xchg
in
jae
bound
jno
cwtl
je
cmc
imul
mov
daa
mov
lahf
cli
jne
adc
fnsave
shl
or
xchg
popf
xchg
call
mov
xchg
and
jl
mov
jnp
sub
mov
sub
fsubrp
mov
xchg
repnz
xor
pop
xor
mov
mov
jmp
and
or
jnp
in
das
cli
mov
mov
lea
and
repz
mov
jbe
pop
shrl
and
mov
xor
mov
mov
int3
std
xchg
xchg
pusha
sub
ds
aam
mov
aad
andb
rcl
or
scas
fbld
repnz
xlat
sarb
lret
je
push
xchg
repz
gs
cmp
sahf
aam
fimull
cmp
stos
inc
or
add
xchg
shl
shlb
int3
or
and
add
sub
popa
fldt
pop
pop
mov
push
outsb
pop
xchg
add
enter
lods
and
sbb
stc
dec
jo
push
lahf
pop
xchg
adc
ljmp
push
js
or
adc
xor
shlb
mov
cld
cli
mov
push
in
sbb
test
cs
pop
insl
pushf
adc
xchg
adc
pop
mov
jmp
mov
fisubl
mov
mov
fisubl
repnz
and
rclb
insl
outsb
push
or
sahf
das
add
cmp
insb
cmp
sbb
adc
test
stos
test
cwtl
pop
sub
loopne
xchg
fnstcw
jmp
test
pop
dec
lret
or
xchg
enter
sub
std
ss
in
arpl
and
leave
inc
arpl
dec
xchg
pop
sbbl
and
sbb
xchg
iret
in
test
adc
jae
xchg
sub
xchg
jl
dec
jmp
bound
scas
popa
into
xor
stc
cmc
dec
pop
adc
imulb
mov
stos
xchg
andb
inc
mov
xor
cmpsl
je
push
add
push
loopne
iret
add
aad
mov
push
sub
out
in
push
fwait
sub
data16
push
into
mov
gs
sahf
stos
pop
inc
rcrb
hlt
or
data16
mov
xor
lds
in
pop
ljmp
data16
mov
aas
call
lods
aaa
cmpsl
or
push
jbe
pop
repnz
call
xlat
dec
push
jnp,pt
push
iret
mov
movsb
push
popa
in
adc
daa
bndstx
inc
adc
mov
loope
xor
pusha
or
or
and
clc
and
mov
icebp
in
out
icebp
mov
sbb
add
mov
push
inc
or
xchg
pop
fistpll
jbe
lret
stc
dec
mov
dec
int3
dec
xor
shll
or
and
dec
sbb
inc
ret
sahf
push
mov
std
sub
fdivl
add
orl
aam
lods
rorb
add
cli
icebp
and
ds
in
scas
into
mov
push
negb
pusha
clc
lods
hlt
mov
mov
adc
mov
jle
jo
mov
mov
incb
aam
pushf
and
scas
icebp
lds
inc
int
movsl
lods
sbb
dec
jl
stos
pop
add
pop
mov
push
fcomps
fsubrl
loope
std
add
outsl
mov
pushl
mov
pop
xor
jo
incl
xor
shll
sub
scas
aam
in
sbb
sbb
call
cmpl
jl
mov
push
xchg
inc
pop
movsl
clc
call
xchg
popf
mov
test
cli
adc
mov
fisubrl
push
stos
or
dec
fwait
cmp
es
push
cli
cltd
scas
lods
testl
mov
aam
mov
lea
jbe
ret
dec
dec
mov
mov
mov
add
lea
sbb
ficompl
imul
enter
cmpsb
mov
dec
sahf
push
mov
ljmp
or
xor
add
xchg
sbb
loop
cmp
jg
jno
and
fcomi
addb
andb
dec
xchg
cwtl
jb
dec
xor
jo
sbb
push
loop
mov
push
orb
jno
fistpll
cwtl
pop
je
cmp
roll
stos
les
mov
cmpsl
push
and
adc
xchg
ss
cli
pusha
jno
or
and
xchg
push
icebp
adc
sbb
xchg
mov
sub
inc
jne
and
mov
dec
mov
mov
mov
lods
iret
lret
gs
sbb
xchg
gs
fiaddl
insl
arpl
test
scas
scas
xchg
cmp
push
mull
sub
mov
or
int3
adc
in
mov
xor
test
inc
jg
push
lret
xchg
imul
or
inc
xchg
push
sbb
aam
and
mov
mov
dec
dec
jmp
js
test
out
stos
adc
xor
or
jmp
cmc
jge
stos
pusha
dec
push
loope
sti
enter
jb
mov
lret
jno
stos
bound
popf
mov
push
xchg
test
cmp
arpl
lods
jns
jge
movsl
jno
shr
dec
andb
push
add
out
or
xor
jns
subb
lcall
xor
lcall
in
imulb
jno
mov
sub
aas
sub
xchg
or
gs
outsl
cmp
shrb
inc
fcmovb
xchg
ja
xor
pop
cwtl
int3
jno
push
or
jge
ja
xchg
jo
hlt
xchg
cld
stos
lcall
test
loope
cmc
mov
mov
push
ljmp
xchg
imul
mov
jne
cmp
je
xor
dec
repnz
inc
testl
mov
inc
sbb
andb
mov
sahf
pusha
repnz
out
into
ljmp
xlat
test
vpbroadcastb
ret
js
repz
jne
sub
jns
xchg
sbb
lock
mov
lea
xor
add
xchg
out
das
sbb
push
roll
fcomi
adc
sub
sub
mov
es
inc
push
lret
and
add
insl
clc
outsb
and
cld
fadds
jno
or
ljmp
arpl
lahf
xchg
or
or
repnz
push
and
arpl
testl
mul
push
lea
pop
int3
cmc
popl
push
xor
outsb
icebp
fcmovb
and
mov
adc
adcl
add
or
xchg
adc
out
pop
pop
xor
cltd
gs
inc
movsl
dec
xchg
adc
jae
dec
mov
mov
mov
dec
mov
xor
xchg
dec
inc
lods
nop
loop
jns
bound
xchg
jmp
or
out
test
jecxz
andb
loopne
popa
or
add
or
xor
mov
shr
ljmp
into
cmp
pop
test
mov
push
or
mov
aas
aam
inc
inc
sbb
add
inc
fs
mov
testl
push
movsl
clc
outsb
outsl
les
lock
cmpsb
repz
xchg
adc
dec
sub
xor
outsl
push
dec
jb
and
mov
cmc
cmp
roll
mov
or
sub
lock
hlt
enter
or
fistl
sub
adc
pusha
mov
lods
dec
sbb
insl
neg
bound
cltd
mov
pop
push
push
popa
mov
xor
push
dec
cmp
add
xor
add
cmp
dec
inc
leave
dec
push
xchg
and
scas
inc
and
lret
subl
xchg
mov
test
shlb
test
push
and
mov
das
filds
cmp
pop
fnstenv
pop
adc
repz
pop
and
jns
stc
sub
repnz
inc
or
cmp
aas
inc
inc
rcrb
push
sti
mov
leave
in
stos
loop
jno
data16
lds
mov
mov
xchg
or
and
lcall
push
inc
jae
xchg
dec
stos
or
push
in
inc
and
and
add
mov
inc
xchg
scas
stos
aad
ds
rclb
xor
xor
fwait
ja
xchg
punpckhwd
lods
ja
mov
test
mov
pop
out
mov
inc
and
out
sbb
loopne
fcomp
mov
mov
add
les
pop
lcall
lds
stos
test
popaw
mov
in
or
add
add
add
sub
and
xlat
mov
mov
lahf
ljmp
add
jmp
pop
icebp
xor
call
fstpt
inc
outsb
jo
das
aam
js
dec
push
cmp
in
out
jmp
dec
pop
xchg
jge
lret
mov
add
add
gs
dec
push
push
adc
sub
shll
or
out
mov
pusha
xchg
jns
inc
int
inc
mov
popa
dec
cwtl
rorl
xor
add
xchg
add
ja
les
mov
mov
sub
jb
and
fsubp
aam
mov
jb
sar
add
xchg
push
xchg
mov
cmp
repz
aaa
sahf
mov
fimull
jp
aam
into
and
push
jae
mov
inc
sarb
fisubrs
xor
pop
mov
inc
shrl
sti
add
xor
mov
lahf
rcl
xchg
push
and
int3
scas
fsubl
ljmp
adc
jbe
and
push
roll
mov
adc
cmc
sbb
xchg
pop
mulb
jle
ds
rclb
dec
orb
jb
ss
cli
push
scas
in
rcrl
in
push
pusha
sarl
mov
iret
sub
shll
loope
test
lret
jbe
int3
ljmp
lock
imul
das
and
into
movsl
fistl
outsl
sbb
adcl
adcl
pop
mov
test
mov
stos
push
aas
dec
outsl
push
or
jb
mov
maskmovq
imull
add
pop
outsl
bnd
test
jmp
divb
adc
xor
jne
push
adc
testb
jne
mov
push
adc
lock
clc
sbb
sub
xor
inc
arpl
xchg
scas
mull
addr16
sbb
call
mov
mov
push
rol
pop
lret
sub
test
scas
dec
in
cmp
dec
xchg
dec
inc
pop
adc
addr16
pop
jb
out
add
jb
xor
cmc
pop
and
pop
fdivrl
mov
adc
pop
adc
mov
push
inc
sbb
stos
dec
sti
pop
pop
cmp
imul
cmp
test
out
pop
jno
pop
mov
and
loopne
lret
int3
out
popf
push
jge
or
loopne
mov
test
adc
es
dec
repz
subb
dec
sarl
xchg
and
movsl
lods
test
mov
push
adc
sahf
call
jmp
shrb
inc
jno
jno
cmp
roll
ficompl
xor
xchg
out
add
imul
nop
and
ret
pop
sbb
loop
sub
inc
icebp
pop
xchg
add
rcrb
push
xor
add
lea
fidivl
jne
out
popf
jg
push
and
insb
cmp
stos
cmpsb
inc
call
push
adc
mov
mov
es
xchg
sub
lds
jns
sub
pop
lea
ljmp
ss
cmc
dec
mov
cmp
pop
shrb
xlat
jns
mov
push
and
fs
sbb
adc
testl
fsubl
outsl
cmp
ds
jl,pt
pop
sub
test
push
xor
sbb
subb
daa
pop
fimull
std
mov
fwait
dec
dec
push
mov
cmp
and
aaa
and
iret
dec
in
icebp
cmp
jle
insl
aam
ss
mov
popa
int3
fidivrl
aaa
push
or
aam
mov
mov
mov
int
sub
ja
mov
dec
xor
xor
scas
mov
push
les
sub
enter
mov
in
jmp
push
into
adc
ret
push
push
mov
pushf
or
sbb
repnz
sahf
outsb
lcall
pop
jg
lds
push
push
jae
dec
std
icebp
ret
jbe
dec
xchg
cltd
in
xchg
ljmp
repz
daa
stos
dec
xchg
adc
ret
rcrb
xchg
mov
sub
mov
fisubl
or
jae
aad
inc
leave
cmp
push
mov
inc
fdivrs
daa
filds
push
jmp
test
adc
jns
and
cmp
or
add
aam
stc
aam
or
push
fs
jo
mov
xor
test
xchg
faddl
ret
std
mov
sbb
aaa
pop
jmp
xor
xor
mov
mov
mov
adc
lret
shrb
jl
test
jno
sub
jecxz
add
jns
pop
sub
pop
pop
sub
repz
repnz
inc
push
xor
add
out
sub
xor
pop
hlt
les
xchg
mov
stos
push
adc
jg
xor
ljmp
lcall
sarb
mov
push
loopne
sbb
iret
lock
out
bound
dec
jbe
push
fisttpl
clc
out
ja
add
loope
mov
lea
outsb
call
bound
icebp
or
mov
cli
inc
stos
lods
jp
push
pop
clc
mov
stc
iret
cmp
push
jb
nop
dec
int
mov
leave
sbb
xchg
fdivp
scas
adc
xchg
xor
stos
mov
outsb
and
int3
xor
in
mov
pop
mov
leave
jns
lock
popa
xchg
add
mov
dec
clc
aad
push
stos
popf
pop
mov
ret
jne
nop
popf
leave
sub
aas
mov
adcl
leave
rorl
aam
lods
out
and
push
xchg
fistl
loopne
stos
push
and
negb
outsb
dec
fcmovu
into
int3
dec
push
lea
idivl
movsl
mov
and
adc
add
stos
inc
inc
mov
test
movsl
mov
mov
dec
repz
call
adc
push
cmc
and
pushf
imul
jg
xor
xchg
push
cmc
dec
push
repnz
addr16
scas
mov
push
and
rclb
out
pop
cmp
imul
lahf
sahf
mov
out
popa
ror
cmpsl
jb
gs
mov
out
cmp
and
mov
popf
mov
lahf
xchg
ftst
or
fucom
imul
pop
ja
je
out
pop
not
add
fidivrs
push
sbb
dec
mov
popf
hlt
repz
xor
je
je
inc
fistpl
fcoms
sahf
das
scas
mov
pop
push
nop
test
popf
into
xchg
cmp
aam
bound
or
rolb
inc
lds
mov
imul
shl
push
daa
push
js
jp
xor
insl
jbe
sahf
adc
sbb
xchg
pop
push
xchg
sub
sub
out
lds
mov
pop
and
repz
mov
pop
push
roll
loopne
lods
cmp
out
add
mov
outsb
test
mov
cmp
imul
lock
pop
sahf
add
sbb
cli
xchg
sub
fstps
xchg
inc
scas
stc
fidivl
insb
push
outsb
arpl
inc
add
fiadds
xchg
insb
fwait
mov
xchg
dec
jmp
pop
in
ds
xor
fildl
dec
add
adc
inc
adc
adc
xchg
push
lcall
mov
xlat
sub
dec
je
icebp
mov
inc
aas
mov
int
push
sbb
xor
test
xor
sub
fistpll
jle
inc
nop
cmp
out
pusha
dec
out
roll
scas
or
cli
iret
lods
jno
mov
loopne
pusha
push
cmc
inc
shll
popa
adc
push
sbb
and
sub
ja
sbb
pop
adc
and
loop
icebp
sbb
outsl
mov
dec
xor
jl
or
mov
nop
int3
ds
cmp
gs
mov
sub
and
hlt
add
push
dec
dec
je
adc
pop
xchg
mov
test
loope
cmpsl
leave
lcall
add
fisubrs
xor
lods
inc
sbb
lds
xor
cmpsb
out
jo
xchg
xor
test
mov
imul
into
mov
push
cltd
cmp
sbb
pop
insb
lea
push
das
push
iret
nop
out
bound
cmp
les
pusha
mov
mov
addb
scas
pop
add
cmp
stos
fimuls
das
mov
pop
loopne
imul
sbbb
inc
daa
mov
or
dec
cmpsl
jg
dec
and
dec
imul
cs
jns
sub
push
idivl
xor
faddl
inc
xor
jle
inc
cltd
in
int
mov
dec
jecxz
or
nop
mov
fdivl
push
xchg
lret
add
lret
xor
inc
sub
or
mov
pop
sub
add
xor
pop
mov
clc
cmp
and
sub
and
push
nop
or
push
leave
scas
sahf
out
push
in
push
mov
xchg
mov
ljmp
xor
idivb
ljmp
sbb
xchg
dec
mov
popf
cmp
jb
stos
repz
inc
dec
rclb
mov
repz
jno
ret
inc
imul
sub
lds
lea
fists
push
mov
shrl
fsubs
fcomps
add
aas
fidivs
inc
mov
push
cmp
aam
leave
lret
enter
sbb
dec
outsb
mov
test
movsl
pop
ss
icebp
loopne
cmp
push
icebp
jno
loop
or
gs
or
dec
mov
out
cmp
adc
or
ljmp
jnp
pop
sub
shl
inc
fsubs
sbb
mov
repnz
lea
mov
and
test
in
out
into
pop
xlat
lret
jge
cmp
cmpsl
xchg
push
shrl
cmp
test
or
pop
push
xor
inc
aam
add
fidivrl
repz
fisubrs
sub
fs
jecxz
mov
push
add
mov
xor
sub
ja
ja
nop
xchg
mov
outsl
icebp
push
shlb
adc
xor
add
inc
negb
push
cmp
repz
xchg
jmp
jbe
push
pop
lock
jmp
out
call
push
mov
leave
shr
or
out
inc
push
in
ds
or
sbb
add
pop
and
xchg
xorl
mov
mov
loope
push
dec
fucomi
movsl
mov
mov
test
ljmp
lds
jo
imul
add
fisubrl
sbb
and
popf
and
dec
sub
xor
imul
lret
inc
mov
xchg
adc
lcall
inc
dec
js
bound
mov
das
jns
stos
out
or
shrb
ja
mov
int
push
out
aam
test
adc
cld
divb
test
add
lock
adc
cltd
mov
das
xchg
pop
mov
mov
dec
inc
lea
xchg
stos
outsb
and
jmp
das
sahf
movl
xchg
fdivs
imul
cli
loope
adc
sahf
adc
in
loope
xchg
xor
sub
call
out
adc
and
imul
xlat
aas
mov
mov
push
mov
pop
aam
sbb
adc
fcmovnu
push
mov
inc
mov
sbb
out
outsl
jp
mov
add
pushf
jmp
pushf
inc
inc
adc
xchg
roll
fimull
rorl
cmp
js
push
inc
dec
add
mov
inc
rcr
mov
ds
xchg
mov
sbb
cld
ss
shrl
jmp
inc
mov
mov
sbb
sub
xchg
hlt
and
mov
add
loopne
lods
mov
dec
cmp
data16
push
sub
mov
and
ss
inc
clc
iret
xchg
outsb
out
lock
xor
ja
adc
int
rorb
jg
xorb
aam
xchg
and
int
push
cmpsb
call
decb
push
loop
ds
sub
or
aas
jae
xor
les
mov
mov
xor
lds
adc
mov
scas
lds
inc
pop
or
push
jno
sub
popf
jl
adc
sbb
cwtl
xor
fucomp
mov
test
into
xor
push
dec
pop
es
jl
loopne
int3
jmp
inc
or
insb
lret
sub
mov
lea
mov
jge
mov
xchg
lret
xor
leave
lods
inc
xchg
inc
into
lods
test
cli
sahf
test
xchg
test
dec
stc
cld
mov
sub
sbb
add
sub
and
sbb
mov
adcb
jecxz
test
xor
stos
stc
scas
adc
out
insb
jno
mov
push
jno
ret
mov
xor
in
addb
sub
inc
in
outsl
jle
dec
das
dec
lret
mov
test
and
adc
add
test
es
xchg
inc
mov
je
repz
ret
xor
add
sub
in
mov
adc
add
jns
inc
out
jne
out
xor
pop
xchg
xor
aad
mov
arpl
or
inc
inc
stos
push
adc
jmp
das
inc
push
data16
mov
jp
push
xchg
mov
mov
push
push
or
xchg
xchg
push
adc
pop
sub
scas
rol
je
push
sub
pop
mov
jle
mov
leave
gs
sub
push
subl
pop
mov
loopne
pop
sbb
xchg
or
vpmaddwd
pop
xlat
mov
mov
xchg
xchg
mov
lea
sbb
mov
jecxz
xchg
sbb
cwtl
jne
or
imul
cmp
adc
add
aam
mov
int3
adc
roll
inc
dec
xchg
cmc
enter
std
imul
shrb
mov
add
dec
popf
leave
fists
sbb
jns
test
sub
lods
pop
fidivs
mov
stc
add
mov
xor
jb
idivl
loopne
rolb
pop
out
mov
xchg
push
adc
sahf
scas
inc
adc
cli
push
mov
pop
stos
jbe
push
std
jnp
movsl
jne
pop
push
addr16
pusha
push
stos
pop
lahf
mov
cli
imul
stos
pusha
pop
jp
xchg
mov
test
mov
nop
pop
xor
add
popa
arpl
cli
lods
dec
es
nop
clc
xchg
into
xor
or
push
addr16
scas
xor
adc
mov
test
xchg
xchg
add
stc
mov
test
scas
mov
xchg
sbb
sahf
adc
rolb
mov
test
push
stos
in
mov
sub
movsl
ljmp
cs
or
nop
lret
call
mov
or
xor
je
inc
xor
dec
fstpl
fs
repnz
fnstsw
pop
mov
sbb
jns
addl
gs
add
out
lahf
cmp
mov
ss
fnstcw
lcall
cmp
arpl
mov
test
inc
pusha
fnstcw
jb
jb
mov
les
inc
mov
outsl
hlt
cs
xor
or
dec
add
xchg
test
inc
inc
ret
stos
jae
enter
rcrb
cmp
inc
pop
inc
adc
ficomps
out
bound
push
fisttpl
inc
push
insb
into
insl
nop
icebp
mov
lods
adc
push
scas
adc
gs
stos
daa
push
dec
pop
xchg
dec
aas
addr16
in
add
movsb
dec
repnz
lock
xor
rorb
jg
or
mov
aas
xlat
mov
xor
jns
mov
stos
xchg
push
test
xchg
jnp
lea
mov
lcall
pop
push
push
mov
pop
and
xor
outsl
insb
leave
mov
add
mov
mov
mov
lret
lcall
cmpb
ret
cmpb
icebp
out
xchg
int
inc
ss
loop
iret
ror
fiaddl
fwait
mov
test
adc
out
negl
enter
mov
popf
negl
jle
test
test
cmp
xor
fcmovb
dec
out
call
shl
xchg
inc
out
cmp
mov
push
js
shlb
sbb
pushf
lods
xor
enter
or
fistpl
and
mov
adc
imul
icebp
call
jb
mov
jp
nop
jecxz
mov
ds
push
xor
test
xor
cmpl
adc
hlt
mov
rolb
arpl
mov
adc
jle
jl
cli
hlt
mov
cmp
out
test
inc
outsl
daa
popa
iret
iret
xchg
jne
arpl
add
push
test
or
mov
and
addl
shrl
jo
mov
xor
cs
scas
stos
cs
mov
mov
test
push
lock
sub
int3
ljmp
and
or
or
cmp
roll
mull
and
icebp
bound
sti
aad
mov
xchg
popa
orb
addr16
and
aad
sahf
xchg
xchg
imul
repz
xor
jecxz
jo
pop
iret
adc
int3
in
dec
jecxz
mov
out
inc
mov
fwait
push
popa
ja
cwtl
xchg
mov
test
sub
stc
mov
inc
shlb
pop
pop
and
leave
and
adc
push
iret
scas
inc
stos
cs
and
add
or
mov
lock
fimuls
xor
cs
outsl
push
adc
cmpsb
or
fcompl
int3
ret
shlb
sbb
hlt
lret
mov
cmpsb
cmp
dec
mov
or
cmp
sub
pop
out
cmp
add
adc
mov
call
mov
ljmp
xchg
mov
fs
addr16
or
push
lea
ljmp
pushf
fs
push
inc
adc
ret
cmpsl
add
das
pop
inc
ss
mov
add
mov
inc
test
movsb
sub
xor
fcompl
mov
cmp
sbb
popf
and
cmpsl
cmpsl
lock
cwtl
rorl
sti
dec
aad
rclb
adc
inc
mov
ds
gs
popf
in
lea
cmp
repnz
cmpl
dec
mov
xor
scas
xor
dec
in
push
mov
mov
fwait
and
aaa
pop
fldl
jl
or
or
mov
mov
mov
lcall
nop
rolb
mov
andb
test
mov
mov
testl
mov
mov
and
outsb
repz
push
out
lret
inc
inc
mov
insb
push
test
xchg
roll
dec
mov
test
cmp
daa
pusha
aas
movsb
loope
stos
sti
or
cmp
inc
adc
loopne
gs
jle
call
test
cmp
sbb
jae
inc
aas
dec
inc
add
cmpsb
cwtl
ret
push
xor
xchg
xor
pop
add
mov
stos
shr
jnp
pop
clc
cmpl
rcl
rcll
inc
addl
in
aad
xchg
mov
scas
dec
jnp
pop
xchg
push
mov
out
mov
rcl
sti
inc
xchg
out
cmp
mov
mov
and
test
xor
mov
adc
jle
and
stos
ret
lods
dec
push
and
into
xor
cmpsb
jns
roll
ss
in
lea
movsb
mov
mov
addr16
stos
inc
mov
test
in
push
fstpl
sub
cmp
push
stc
call
xor
push
hlt
push
mov
xchg
xor
or
inc
enter
mov
cmp
ja
sub
adc
fisubrs
and
jle
out
mov
nop
mov
rcr
xchg
rcr
test
dec
nop
sub
jmp
mov
imul
and
pop
test
popa
cmp
mov
fdivp
pop
pop
loope
leave
sub
cmp
push
les
add
mov
arpl
jmp
fidivrl
mov
cs
int
loop
mov
in
pop
aad
inc
xlat
pop
inc
mov
int3
out
mov
dec
loope
rorl
ficomps
add
mov
jge
mov
stc
loop
jnp
ja
push
sbbb
adc
loopne
jl
out
inc
fisubrl
add
mov
cmpsl
dec
and
jecxz
pushf
lock
bound
outsl
or
xchg
jp
enter
push
push
adc
mov
dec
add
aam
aas
ret
xlat
addb
sub
repz
in
adc
imul
and
mov
orb
sbb
mov
inc
out
int
or
jbe
jle
jne
inc
les
repz
jae
pop
insb
lea
mov
mov
arpl
icebp
test
mov
push
cltd
mov
sub
jb
imul
cmp
lcall
mov
or
or
xorb
test
add
push
out
nop
jl
push
add
adc
push
decl
or
mov
lea
in
stos
int
andb
leave
mov
sub
xor
aam
repnz
outsl
mov
enter
jle
jge
pop
xor
or
sub
mov
adc
xor
xchg
stos
add
and
xlat
push
mov
enter
mov
shrb
out
mov
pop
lock
cwtl
mov
hlt
lahf
dec
xor
jge
jbe
push
scas
test
push
pop
cmc
xchg
xchg
jl
add
enter
mov
xchg
push
loop
stc
push
outsl
out
cs
xorb
mov
fwait
push
fmull
lret
adc
and
pop
xor
movsb
or
lock
loopne
les
lret
ljmp
cmp
out
in
shll
nop
add
imul
movsl
or
cs
jae
mov
add
aas
inc
mov
xchg
bound
push
adc
je
in
out
out
cwtl
and
and
jge
cltd
mov
inc
jge
mov
mov
les
cli
xchg
jbe
rorb
insb
xchg
xchg
cmp
fistl
iret
push
pop
cmpsl
lock
out
add
sub
test
pop
daa
add
mov
xchg
outsb
adcl
out
shlb
cli
mov
aaa
mov
leave
push
stos
mov
out
dec
cmp
sarb
gs
inc
les
mov
push
add
in
aaa
inc
repz
scas
mov
in
out
in
jmp
jmp
dec
call
or
inc
in
icebp
inc
movsb
jnp
mov
mov
mov
pop
ds
ret
shr
xchg
mov
les
xchg
loop
sahf
mov
je
inc
outsb
push
aam
or
add
add
mov
xchg
adc
push
push
ret
mov
dec
adc
bnd
mov
dec
call
out
js
gs
xchg
stos
lret
xchg
aam
push
cld
call
test
inc
into
iret
sbb
out
jo
mul
dec
jge
add
in
js
pop
pop
sti
push
push
xchg
insl
scas
subb
iret
lock
bound
mov
sub
sub
fistpll
int3
rclb
push
mov
in
dec
imul
dec
adc
movsb
sub
shll
jmp
idivl
add
dec
les
jge
jns
ret
jbe
and
in
xchg
lahf
push
clc
or
pusha
insl
mov
bnd
into
adcb
and
in
push
push
mov
fmul
mov
shll
mov
lds
ljmp
push
jle
mov
dec
push
nop
lods
xor
loopne
cmc
mov
rolb
dec
shll
mov
pop
fnstcw
push
jge
and
test
aas
fidivrl
jb
test
jecxz
or
aam
xor
xchg
sub
sub
cmp
ljmp
jbe
jl
push
xchg
add
test
jg
icebp
shrb
lahf
xor
pop
xchg
cmpsb
mov
iret
ljmp
mov
test
push
sub
ja
xchg
ja
pop
rcrl
call
adc
out
movsb
insb
imul
fldenv
xchg
and
icebp
js
mov
imul
repz
dec
ret
xchg
jbe
stos
popa
loopne
call
xchg
fdivl
popa
add
flds
pop
aad
and
inc
cwtl
icebp
cmp
cs
or
jl
lds
movzbl
jp
mov
or
outsb
jno
out
or
sahf
sbb
imul
lahf
in
mov
test
xchg
mov
xchg
clc
arpl
stc
cwtl
call
aaa
add
daa
leave
jo
je
mov
mov
pop
fwait
and
mov
push
lods
mov
lods
clc
in
rcr
movd
inc
xor
or
xchg
or
push
lods
jle
fcmovb
xor
or
sbb
push
add
inc
push
pop
std
jo
cmp
clc
mov
and
push
hlt
and
jp
sbbb
dec
adc
cmpsl
insb
cmp
les
jne
dec
nop
pop
shrl
test
or
hlt
lods
scas
mov
add
repnz
das
sub
repnz
xchg
push
leave
jo
cli
mov
and
pushl
xchg
mov
mov
out
jae
orl
xor
adcb
jecxz
or
lahf
imul
mov
test
or
repnz
lea
xchg
xor
cmpsb
pop
in
mov
and
mov
mov
inc
xchg
push
lock
push
xchg
in
mov
es
mov
cmp
mov
xor
roll
cmc
xchg
lret
dec
push
cmpsb
nop
idivl
in
mov
popa
pop
lret
sbb
pusha
pop
aaa
fimull
jbe
push
xchg
or
lods
enter
xor
jae
out
in
lock
imul
jl
fdivrl
sub
fwait
lcall
popa
xchg
sub
pop
fsubrl
imul
mov
scas
cmpsb
bound
mov
outsl
out
repnz
xor
aaa
and
test
stc
test
out
mov
xchg
daa
xor
lret
mov
fsubrs
add
jb
test
pop
cmp
mul
cmp
gs
dec
ret
repz
mov
xchg
int
leave
mov
jae
mov
sub
arpl
outsb
pop
ficompl
xchg
int
dec
lcall
pushf
pop
fdivl
mov
lods
mov
dec
inc
or
inc
test
je
pop
mov
iret
mov
cmpsl
decl
xor
shlb
cmpsl
adc
mov
nop
sub
mov
scas
jmp
push
push
xchg
lret
dec
outsl
loope
das
orb
or
add
pusha
ljmp
push
mov
stos
add
rol
mov
inc
adc
adc
rolb
mov
popf
mov
pop
fisttpl
push
enter
sbb
dec
push
jp
jle
mov
jle
push
jno
testl
push
dec
adc
out
add
push
jecxz
test
hlt
mov
push
in
sbb
rcrb
je
jnp
daa
cmp
add
xchg
mov
jb
dec
fadd
xchg
mov
xchg
push
test
test
fwait
jecxz,pt
nop
sub
push
mov
mov
jg
cmp
mov
aam
ljmp
rcll
jl
test
movsb
shrb
xor
and
adc
jge
andb
out
je
jge
mov
mov
cmp
pop
lret
ret
addb
jge
fidivs
jl
add
test
xchg
subl
dec
mov
ret
jg
xor
lcall
push
loop
aad
incl
test
dec
dec
lea
xchg
lock
out
xor
jecxz
mov
pop
adc
ja
fiadds
push
xchg
pop
mov
mov
mov
aaa
add
sub
dec
cmpsl
mov
xor
mov
sbb
stc
xchg
jmp
es
lock
and
mov
in
std
inc
scas
mov
out
into
cmpb
pop
mov
mov
cmp
sti
loope
sbb
sub
in
cmpb
add
mov
cmc
add
je
gs
loopne
into
cmc
ret
xor
dec
cli
adc
and
add
sub
jae
xchg
call
jae
lret
scas
into
xor
pusha
aaa
pop
mov
aaa
add
cmp
sub
pop
test
sbbb
jmp
lods
testl
ret
in
or
je
enter
sarl
aam
lods
lahf
cli
out
xchg
scas
xchg
ret
xchg
jo
insl
xor
rclb
or
rorl
test
adc
inc
cmpsl
xor
pop
add
stc
mov
stos
scas
mov
sbb
aam
xchg
dec
clc
lea
adc
ljmp
xchg
out
push
dec
int
and
dec
pop
mov
xchg
dec
in
aaa
fisubl
sub
mov
scas
xor
fisttps
jecxz
shr
mov
xchg
mov
jae,pn
or
rclb
jge
fistps
aaa
xor
push
popa
jmp
out
mov
xchg
ret
xchg
adc
scas
mov
jecxz
addr16
xchg
and
xchg
adcb
sub
mov
test
imul
xlat
dec
stos
xchg
pop
aam
addr16
stos
sbbl
adc
push
xlat
and
lret
popa
xor
int3
insl
sub
jl
cmp
mov
jmp
pop
dec
mov
out
loope
mov
repz
ja
nop
xor
push
sahf
fwait
xchg
xchg
leave
rorl
xchg
xchg
lret
cs
data16
leave
cltd
adc
js
cmpsb
jmp
fidivs
ljmp
and
push
xor
sbb
imulb
fwait
pop
ss
sbb
push
xlat
and
lret
cmp
dec
insb
xor
in
xchg
addr16
in
bound
or
push
leave
sub
sbb
icebp
aas
cmpsb
dec
or
test
scas
imul
pusha
popa
add
xor
xchg
xor
in
jge
rol
sbb
sti
inc
pop
cmp
lret
andb
xor
into
mov
leave
jne
sahf
enter
addb
ret
mov
xchg
mov
inc
lretw
lcall
push
out
loope
test
rclb
sub
inc
sub
pop
cmc
mov
mov
icebp
or
mov
test
leave
fimuls
jno
push
sub
iret
xor
les
lea
ss
je
push
mov
and
xchg
inc
aaa
ljmp
sbb
sbb
dec
stos
push
int
jp
pop
cld
fs
adc
sub
xor
xchg
jbe
sahf
shlb
jmp
pop
sti
lret
out
xchg
inc
icebp
jl
shrb
and
shl
jnp
adc
ret
cmp
adc
je
ja
cmp
jp
lcall
xor
pop
fsqrt
and
sub
mov
insb
jno
mov
jmp
jne
adc
sbb
push
sbb
sub
cwtl
out
mov
or
mov
outsb
xchg
outsl
mov
mov
repz
fadd
cld
mov
cmp
pop
repnz
aad
pop
and
inc
xor
out
mov
iret
int3
stos
insl
sub
mov
jne
push
xchg
inc
push
jae
cmp
push
mov
mov
iret
adc
jns
dec
xchg
sub
push
cmp
dec
xor
xchg
or
jno
mov
pop
popa
push
loop
mov
xchg
enter
stos
out
mov
enter
nop
insl
mov
xchg
and
cmp
pop
into
aaa
imul
cmp
insb
mov
inc
icebp
rorl
sub
imul
decb
sub
roll
ss
mov
push
inc
xchg
pushf
xchg
mov
mov
pushf
dec
jne
scas
lret
jl
jne
loop
jmp
mov
lret
scas
mov
inc
lcall
dec
out
test
inc
push
out
lcall
fisubl
jl
out
aam
mov
rcl
stos
loopne
mov
pop
push
jb
lea
mov
popa
xchg
test
dec
dec
or
adc
bound
mulb
xchg
push
pop
test
lea
addr16
call
movsl
mov
xchg
jp
pop
sbb
mov
dec
sub
dec
mov
shll
fisubs
inc
sbb
test
mov
mov
mov
loope
inc
repnz
mov
test
xchg
test
push
mov
jo
lods
jne
lock
je
and
mov
lret
adc
mov
cmc
jo
les
popa
sub
mov
push
es
jnp
push
add
scas
sti
jbe
bound
cltd
in
or
iret
gs
or
sbb
sub
mov
push
push
test
and
cwtl
cld
int
sub
mov
js
mov
dec
push
into
repz
jge
mov
mov
mov
mov
sub
pop
jbe
out
fs
push
mov
push
imul
cmc
ss
fsubrp
mov
inc
jecxz
stc
int3
push
cmp
inc
or
inc
dec
inc
or
lahf
mov
jmp
inc
daa
and
sub
mov
xor
xchg
imul
stos
stos
mov
les
and
pop
test
adc
aas
sbb
add
out
icebp
mov
sarl
or
add
jo,pt
pop
mov
fstpl
cmp
subl
ret
mov
pop
in
sahf
call
mov
or
xchg
imull
incl
jmp
stos
ja
xor
and
int
std
cltd
and
lahf
or
and
loopne
test
loop
addr16
or
cwtl
stos
pop
or
sub
fsubl
mov
mov
loop
jle
imul
pop
ret
hlt
stos
xchg
sbb
inc
inc
cli
es
out
scas
pop
add
cmp
mull
enter
sbb
loope
or
mov
out
test
mov
or
dec
lahf
repz
shlb
shrl
test
cmpsb
inc
adc
in
mov
inc
mov
sub
xchg
mov
mov
decl
push
ljmp
mov
mov
and
loopne
push
ret
push
sbb
jp
js
jp,pt
fidivl
outsb
sub
leave
sub
lcall
xor
or
fbstp
mov
push
ret
mov
mov
insl
xor
add
xchg
mov
dec
jmp
ret
subb
jge
sub
mov
sbb
out
cmpsl
mov
mov
add
sbb
xchg
out
adc
sub
loope
jo
xor
pop
ret
push
loop
add
mov
repnz
subb
pop
sbb
aas
adc
test
mov
sub
aam
js
into
mov
testl
out
push
es
adc
mov
negl
and
scas
adc
in
jns
mov
xchg
outsb
or
addb
leave
js
clc
sbb
cmp
jge
jae
xchg
dec
dec
jne
adc
sub
imul
mov
lds
insb
cld
pushf
cmc
sbb
lcall
movsl
hlt
orl
jecxz
xchg
frstor
mov
and
into
mov
pop
cmp
ret
in
dec
je
lock
cmpsl
out
cli
sbb
ret
pop
or
inc
movl
jns
xor
xor
popf
dec
or
mov
out
jmp
jecxz
jbe
cmpsl
xchg
shlb
pusha
fs
and
fstl
inc
mov
lcall
popf
xor
push
decl
repnz
xchg
cmp
sbb
loopne
lods
mov
inc
into
push
mov
sub
test
mov
adc
pop
mov
call
push
mov
mov
int3
lea
out
stos
mov
adc
ljmp
clc
imul
hlt
push
stos
cmp
cmp
add
xchg
popf
data16
xor
xchg
aas
es
insb
adc
mov
mov
mov
jb
or
cmpsb
adc
adc
cwtl
push
in
shlb
pop
fisubrs
xchg
sub
fimuls
mov
sbb
popa
fmuls
aas
inc
xchg
cmp
jl
test
mov
xchg
fadds
ljmp
outsb
enter
lret
outsl
sti
insb
and
in
insl
dec
cmp
out
in
cmp
out
lahf
arpl
aaa
inc
fxch
jae
cmp
cmp
cltd
in
dec
push
ret
orl
fisttps
out
pusha
das
inc
and
or
push
rcll
fnsave
je
xor
xor
loopne
jb
je
stos
lds
in
jno
xchg
mov
adc
sbb
repnz
aam
shr
xor
pop
or
cmp
scas
mov
pop
lods
sbb
in
xchg
add
movsb
mov
mov
xorl
repz
add
jmp
loop
cs
inc
jno
cmpsb
and
mov
test
mov
pop
sub
ret
out
sbb
stos
dec
mov
test
jmp
lea
loop,pn
loope
xchg
mov
pop
push
mov
lcall
and
les
cmp
xor
and
xchg
lea
mov
jb
cmc
sub
rol
cmp
add
cwtl
repz
mov
sub
mov
dec
outsb
adc
push
push
or
cwtl
dec
cmp
cmp
mov
sbb
mov
xchg
dec
mov
and
mov
and
lods
adc
shl
push
sub
push
iret
mov
mov
and
andb
jl
push
dec
mov
jg
outsb
sbb
ja
cvtps2pd
add
shll
and
adc
and
sahf
fucomip
adc
sbb
cmp
dec
add
dec
inc
cmpsb
in
enter
mov
subb
cli
adc
add
out
inc
rolb
xor
and
jg
sbb
mov
icebp
lea
cmp
cmpsb
pop
mov
test
dec
data16
aam
ret
add
pop
fstp
mov
lock
jo
and
subb
aam
push
jno
jecxz
mulb
lds
in
cwtl
push
fstps
in
jae
in
xor
pop
adc
or
mov
clc
add
outsl
test
cmc
or
das
shrl
push
popf
add
hlt
repz
xor
gs
out
sub
lock
pusha
add
mov
xchg
test
or
lea
xor
xchg
mov
add
fcmovbe
stos
lret
ficoms
scas
dec
or
inc
test
inc
les
xor
jns
mov
jle
xor
inc
stos
lock
ds
mov
push
and
ljmp
xor
imul
mov
push
ss
mov
int3
shlb
and
stos
leave
sbb
xor
lahf
mov
xchg
test
adc
mov
mov
jecxz
xchg
sbb
mov
xchg
test
adc
enter
je
add
mov
add
fwait
or
mov
lret
sbb
popf
xchg
in
mov
popf
or
push
ret
js
inc
xchg
int
push
sti
test
push
sub
out
adc
std
inc
adc
jle
cmovo
adc
loope
ss
sub
cmp
call
lock
adc
ret
add
xchg
push
inc
xlat
lods
arpl
push
xchg
dec
mov
jbe
nop
lret
sub
call
test
fidivs
loop
test
jae
xlat
lods
pop
pop
push
test
cli
push
cld
in
xchg
cmp
jne
loope
out
frstor
add
popa
add
pop
sub
xchg
and
xor
mov
dec
push
stc
cld
in
js
daa
xchg
and
pop
cmpsl
push
andb
or
scas
jb
mov
jecxz
sub
pop
push
jl
leave
mov
iret
cli
fisttps
pushf
je
ss
and
test
mov
out
clc
add
adc
and
cmc
outsl
xor
push
add
mov
xchg
mov
cmc
mov
mov
stos
jbe
mov
jne
push
repnz
push
mov
mov
ljmp
inc
push
sahf
dec
push
bound
iret
aam
and
shrl
out
mov
sub
shll
cmp
sbb
push
icebp
xchg
and
cli
mov
sub
mov
jno
add
sub
lret
mov
scas
test
mov
xchg
fmull
dec
and
loop
outsl
bound
dec
and
adc
jae
outsb
jl
inc
pusha
xchg
aad
int
aaa
push
mov
fiaddl
in
xchg
aaa
sbb
and
in
repz
hlt
push
loopne
pop
cld
outsl
xlat
jecxz
push
and
imul
add
xchg
jg
lret
leave
nop
push
or
add
or
lea
dec
outsl
mov
cwtl
roll
mov
ljmp
xchg
xorl
push
enter
xchg
jbe
sub
into
repz
out
and
jg
dec
mov
es
shll
adc
dec
adc
inc
das
aaa
jae
cld
push
jmp
inc
xchg
leave
mov
push
dec
dec
add
jb
push
mov
mov
rcrb
test
cmp
mov
mov
mov
repnz
sbbl
sbb
xchg
lock
ret
adc
cmpsl
outsb
inc
push
mov
lret
std
movl
rorb
mov
inc
aam
dec
cmp
fmull
sti
jl
jae
or
aaa
or
loope
scas
lret
sub
mov
cmp
jmp
into
push
jne
test
jns
or
lea
stc
arpl
hlt
in
and
pusha
cld
notb
addl
aaa
adc
test
scas
push
xchg
cmp
cmp
repz
out
jno
cmp
outsb
mov
je
mov
mov
into
stos
inc
sbb
dec
jnp
divb
int3
sbb
pop
push
cmp
adc
rcr
clc
sahf
xchg
jg
add
or
and
addr16
insb
ja
ret
ret
pop
push
xchg
dec
sub
and
pcmpgtb
fadds
adc
and
dec
fwait
inc
push
adc
xchg
icebp
cmp
out
mov
jg
cmpsl
arpl
jp
xor
mov
pop
pop
fsubs
inc
jecxz
stos
xchg
push
mov
and
jge
inc
es
and
scas
fdiv
paddd
lea
xchg
lahf
lcall
jle
fldt
xor
shr
shll
adc
pop
sub
xchg
out
jns
bound
pop
mov
mov
push
lahf
cmp
pop
out
push
mov
cmp
sub
sti
mov
push
negl
pop
push
jb
jmp
ficomps
cli
mov
stos
cltd
xchg
mov
nop
xchg
mov
push
adc
outsl
cmc
fmuls
arpl
cmpsl
push
sub
xchg
sub
or
rclb
inc
dec
and
mov
xchg
push
jae
sub
jbe
shll
decl
jecxz
mov
pushf
dec
test
mov
jge
pop
push
lcall
out
cmp
mov
adc
call
sbb
stos
jns
rep
loopne
js
pop
out
xchg
call
mov
nop
add
mov
ret
jle
add
push
pop
and
test
xchg
fiadds
out
pop
pop
xor
mov
aaa
cld
frstor
xor
out
stos
scas
or
add
fildl
xor
push
or
out
jp
in
xchg
int
movsb
cmpsb
mov
bound
sti
out
lods
orb
jge
sub
dec
in
xor
repz
sti
sub
push
push
or
push
add
aaa
mov
dec
cmpsl
lds
in
and
loop
ficoms
lds
mov
fimuls
jbe
sub
pop
dec
pop
pop
fucomip
lahf
pop
xchg
les
call
je
push
xchg
sub
cmp
subb
loop
and
sbb
xchg
adc
andl
testb
lret
sbb
test
add
mov
stos
rol
xchg
sahf
imul
ds
fmulp
sbb
mov
bound
mov
cmc
cmp
imulb
dec
add
jb
in
mov
movsl
lret
ja
shr
in
add
popa
add
les
sbb
aam
stos
sbb
xor
roll
lds
mov
mov
jo
sub
sub
mov
ffree
cld
xchg
lods
es
movsb
sub
or
pop
rclb
sbbb
lcall
and
incl
sbb
loop
pop
inc
out
test
call
les
and
movsl
jnp
jb
enter
bound
inc
testl
scas
addl
adc
insl
dec
xchg
sti
or
faddl
mov
fadds
push
notb
pop
testb
or
adc
cmc
adc
inc
lcall
and
mov
mov
pop
and
adc
nop
cmp
mov
dec
push
xchg
pushf
inc
cmpsl
shrl
cs
shrb
sub
fcomi
push
mov
pop
xchg
xchg
adc
mov
dec
jecxz
jecxz
push
sahf
addr16
dec
ret
jnp
fisubs
lods
mov
mov
rcrb
mov
lds
rcl
mov
fs
scas
mov
or
test
insl
out
add
loop
adc
lods
ljmp
in
lcall
gs
push
or
add
jns
adc
push
dec
out
push
mov
mov
imul
push
pop
sbb
cmp
fdivl
popf
pop
scas
test
test
mov
or
adc
inc
lahf
call
adc
push
xchg
mov
mov
sahf
jns
xchg
push
enter
fcmovbe
push
aam
stos
mov
out
pushl
add
stos
test
imul
xchg
ss
ret
dec
ljmp
dec
arpl
test
pushf
jl
lret
sahf
popf
sarb
lret
ficoml
jbe
in
cmp
mov
bound
xchg
outsl
sub
dec
jns
xor
or
stc
loopne
fiadds
lahf
or
dec
test
cmpsl
dec
in
xor
je
pop
cli
in
xor
jo
cmpsl
cmpsl
cmc
push
xchg
add
fisubrl
test
cmp
rorb
add
subl
js
cld
push
stos
mov
mov
movsb
lds
mov
hlt
add
cs
sbb
and
cmpsb
add
or
loope
dec
adc
push
push
jg
outsb
stos
int3
sub
ljmp
and
subl
sbb
in
jge
clc
jmp
lret
mov
push
cmp
xor
repnz
jmp
sbb
mov
inc
stos
test
lahf
pause
xchg
mov
repz
leave
pusha
aaa
jl
fildl
add
rorl
insb
sahf
mov
inc
adc
xchg
fbstp
mov
dec
out
lds
adc
in
cmp
push
adc
adc
lcall
xchg
mov
or
jb
inc
mov
xchg
lea
push
clc
dec
xchg
push
sub
cmpl
pop
out
movsl
mov
mov
sbb
scas
push
jno
test
xchg
notl
adc
int3
movsl
push
loop
out
cld
nop
fcmovbe
cli
cwtl
adc
mov
rol
fdivr
jmp
loop
lea
pop
and
push
sbb
jae
jp
ret
push
inc
lahf
mov
sar
or
cmpl
and
cmp
mov
stc
mov
in
in
lods
mov
scas
mov
outsb
cwtl
or
cli
out
ja
std
cmc
adc
icebp
push
aad
popa
and
popf
sahf
and
push
push
add
push
cmp
clc
jge
push
jb
outsb
mov
dec
repnz
cli
xor
pop
jg
dec
pop
xchg
out
dec
stc
fdiv
icebp
dec
sub
cmp
in
notb
aaa
movsb
repz
mov
mov
xor
xchg
rcl
lret
add
add
adcl
stos
fnstenv
push
cmpsl
loope
mov
movsl
xchg
in
mov
repnz
sub
xlat
adc
cs
xchg
jmp
add
jle
xor
sub
xor
jmp
std
cmc
outsl
jbe
cmp
insl
mov
cmp
pop
arpl
test
sbbl
sti
testl
xor
xchg
adc
and
icebp
jne
out
les
fdiv
sbb
adc
fistpl
or
aam
xor
sub
or
mov
mov
ss
sbb
dec
jae
xor
inc
jg
outsl
xchg
andb
fcoml
test
fbstp
inc
loop
loope
in
xchg
ret
lcall
push
inc
rcrb
add
lahf
push
ljmp
imul
js
push
cmpsb
dec
sub
and
gs
in
ss
and
shl
cs
out
lds
mov
js
out
push
push
andb
mov
into
lcall
dec
in
ss
ret
mov
mov
hlt
repnz
sub
mov
or
sub
icebp
popf
cmp
hlt
repnz
cld
in
lea
out
inc
sub
mov
aad
into
mov
add
std
scas
sbb
iret
and
repnz
inc
aam
lock
out
or
or
iret
cmp
repnz
mov
inc
mov
add
aad
lea
ss
mov
aad
lea
scas
xlat
in
je
adc
cmp
mov
add
jle
rclb
dec
mov
cmpsl
mov
cs
rcl
push
mov
jbe
jbe
jge
jne
or
mov
stc
insl
aam
scas
movb
add
xlat
ret
adc
andb
mov
pushf
cmp
lea
dec
xchg
inc
orb
test
fbstp
nop
sub
add
push
scas
xchg
es
shl
cmp
mov
mov
mov
mov
outsl
or
scas
rorl
dec
sarb
adcl
imulb
add
cmp
testb
sub
fyl2xp1
daa
cltd
sti
mov
dec
adc
xorb
testb
or
cmp
push
loopne
adc
movsl
test
mov
ss
popf
fidivl
inc
fldt
xor
popa
cld
popa
mov
outsl
lods
in
xor
xchg
in
mov
cmp
pop
xchg
dec
iret
inc
rclb
mov
mov
shlb
icebp
and
lea
clc
xchg
push
mov
xchg
push
fs
pop
mov
mov
and
dec
sub
lea
aad
cmpsb
repz
shrb
pop
cmp
jno
add
popa
rolb
dec
jne
imulb
testl
xchg
sub
notb
cwtl
test
sahf
xchg
and
pusha
xchg
mov
adc
test
mov
and
add
mov
testb
ret
pop
mov
repnz
movl
fists
push
jb
push
cmpsl
loop
xchg
loopne
mov
sbb
sub
int
icebp
ret
out
imul
shll
jns
and
popf
add
fsubrs
add
out
gs
cwtl
bound
mov
adc
jns
scas
push
imul
and
icebp
xor
cltd
cmc
repz
bnd
test
mov
xor
and
jg
shrl
test
ds
xchg
ds
mul
jns
into
lcall
divb
dec
xchg
jge
jnp
push
les
push
and
xor
pop
sub
xchg
mov
arpl
cmc
outsb
pop
xlat
out
jae
inc
xchg
xchg
lods
mov
into
sbb
xor
jne
bound
cmpsl
cltd
mov
sub
jg
inc
push
nop
jecxz
pop
lret
cmp
add
sub
push
or
push
pop
or
inc
sarb
jmp
mov
mov
and
adc
sbb
stos
push
pop
cmpsl
inc
jmp
in
rcrb
add
add
test
stos
sub
stc
dec
popf
ja
mov
pop
cmp
fwait
xlat
cmp
ja
mov
cmp
pop
add
loope
adc
sub
stc
xchg
test
push
pop
sub
adc
xchg
xor
sub
mov
mov
pop
movsb
gs
je
pop
lret
sar
bound
push
pushf
push
popf
jnp
pop
sbb
inc
sbb
sahf
push
dec
mov
or
dec
insl
xchg
or
lds
ret
cmpsb
jne
subl
stc
sub
out
and
jp
rcr
cmpsl
pop
hlt
mov
push
in
jb
or
dec
cmc
inc
mov
ss
call
sub
cltd
pop
mov
hlt
dec
add
bound
imul
dec
addr16
sub
ljmp
cwtl
out
dec
cmc
mov
cmc
push
iret
out
cltd
jb
inc
loopne
and
jo
xlat
xchg
xchg
jecxz
daa
sbbl
loope
mov
cmp
pop
call
jmp
hlt
jp
pusha
jae
popa
icebp
gs
adc
movsb
jge
ja
sbb
mov
mov
jbe
jns
outsl
or
imul
sbbb
xchg
aas
pop
jbe
lcall
stos
add
mov
pop
or
pusha
repz
mov
inc
xchg
dec
mov
xchg
movsl
mov
dec
push
mov
xor
mov
jo
push
jmp
push
je
movsb
mov
out
and
push
and
adcl
inc
test
push
xor
rcr
mov
inc
bextr
loop
push
mov
cmp
lock
pop
adc
xchg
call
jb
arpl
mov
stos
out
jmp
jmp
cmc
das
scas
lret
bnd
mov
adc
mov
je
rcll
dec
cltd
or
fidivrl
scas
out
sub
cld
pusha
out
cmp
pop
dec
xor
jo
adc
or
test
jnp
mov
mov
mov
insl
shr
lods
jecxz
clc
mov
cwtl
ret
push
ss
mov
add
daa
xchg
mov
icebp
cmc
mov
test
cmc
xor
arpl
loopne
pusha
inc
pop
xchg
das
enter
mov
or
sbb
pop
fisubrs
out
mov
xlat
icebp
add
aad
ret
push
dec
cli
push
cmp
inc
mov
push
shlb
xchg
sbb
loop
cmpsb
add
repnz
fdiv
jl
sub
pushf
adc
cmp
adc
frstor
xor
and
mov
push
jae
xchg
and
scas
hlt
push
enter
cmc
jg
loop
aam
push
subb
jne
push
aaa
call
dec
mov
popa
lods
and
jp
aam
sbb
sahf
arpl
jne
adc
or
and
enter
add
cltd
add
mov
jb
stos
cmp
push
dec
add
das
mov
add
sbb
addr16
les
cmp
jbe
push
sahf
and
fs
sub
or
jp
lret
mov
inc
sub
out
xchg
dec
std
sahf
sbb
rcrb
movsb
outsb
push
jecxz
out
xchg
push
rorb
sub
inc
fildl
mull
loop
push
movsb
jecxz
out
fcmovb
loop
sub
mov
mov
and
dec
dec
xor
in
fsubp
xor
insl
sub
sub
fs
mov
loopne
jle
loop
stos
dec
lock
add
lock
movsl
push
cmpl
repz
pop
mov
push
adc
fcoms
jp
push
sti
add
rcll
in
mov
in
cmc
jae
or
sub
sub
out
push
add
imul
sbb
mov
mov
jne
roll
or
in
sahf
fidivl
in
test
sti
fcmovbe
ret
sub
xchg
rcrb
push
ret
outsb
cmpsb
push
lret
das
loopne
pop
mov
repz
mov
dec
xorl
mov
dec
scas
add
out
jmp
rcr
repnz
scas
xchg
out
scas
ss
aam
ljmp
xorl
jl
pusha
in
pop
scas
ljmp
cld
cwtl
hlt
ljmp
jl
sub
stc
inc
adc
add
out
fucomi
and
rcl
jg
xchg
adc
addr16
imul
jbe
call
or
fucomp
aaa
push
inc
jg
add
aam
add
push
cmpsb
lret
xchg
call
aam
pushf
and
jge
inc
or
je
pop
leave
cmp
or
cwtl
mov
xor
frstor
push
inc
xor
jmp
or
mov
sbb
in
push
subl
into
xor
jecxz
fsub
out
cmp
cli
sub
std
lret
jecxz
inc
push
inc
xchg
push
push
pop
and
push
inc
out
ret
mov
add
cmp
js
movsb
or
stos
imul
es
imul
cli
xor
xchg
mov
nop
jne
mov
mov
dec
lods
adc
fisttps
stos
insl
adc
add
jge
lock
es
jne
cs
jg
mov
js
in
xchg
jnp
add
mov
test
mov
sbb
cmpsl
or
mov
test
inc
test
scas
mov
mov
jne
cmpsb
movsb
les
inc
fidivrs
cmp
shrb
xchg
movsl
lock
es
aas
iret
adcl
mov
mov
inc
jne
cld
mov
icebp
sub
out
outsl
das
push
mov
daa
add
call
push
dec
mov
push
ret
ficompl
outsb
xchg
xor
lods
or
cld
mov
stos
jns
call
xor
xor
jno
xor
scas
addb
aad
sub
pusha
sbb
movsl
pop
add
es
movsl
sbb
mov
cmpsl
push
ror
add
jge
scas
add
mov
cmp
mov
lock
cmp
pop
pop
and
push
lea
mov
ror
scas
sub
add
jb
pusha
pop
mull
push
subb
call
fidivs
mov
mov
pop
icebp
in
test
enter
loope
jns
repz
or
pop
mov
jns
push
push
imul
xor
mov
mov
js
outsl
or
mov
subb
test
sbb
sub
add
push
stos
inc
mov
outsl
mov
dec
gs
mov
iret
add
out
lods
rorl
out
jmp
add
fldl
jno
inc
adc
xor
sub
cltd
ljmp
or
and
xor
mov
xchg
mov
outsb
sub
dec
popa
fdivl
mov
aas
pop
adc
push
aaa
jle
jle
cmpsl
cld
sbb
dec
xchg
mov
and
out
aad
fstpl
mov
cs
jne
or
int
or
rolb
jns
inc
cs
mov
adc
sub
cmp
mov
mov
adc
and
jg
push
orl
push
lds
es
lods
insl
fiaddl
jb
pushf
stos
mov
loop
cmp
ds
jge
mov
ss
in
ret
sahf
bound
adc
xchg
es
shlb
mov
prefetcht1
mov
rol
cmpsl
add
add
orb
mov
lahf
stos
ret
adc
xchg
mov
cli
ret
mov
pop
mov
mov
mov
jl
in
sub
cmp
lods
incl
and
popf
movsb
loope
xchg
xorl
imul
data16
cli
mov
scas
call
jle
add
ds
fwait
inc
inc
ss
lcall
dec
decb
inc
sub
adc
rcr
shlb
insl
es
mov
inc
inc
out
push
inc
sti
cmc
sbb
cli
mov
jnp
sbb
cmpsl
inc
rcrb
sti
dec
push
lret
add
sarb
in
out
xchg
push
sub
subl
out
aad
jp
decl
shrl
and
mov
xchg
stos
out
mov
test
out
pop
int
or
cwtl
sti
xchg
les
or
push
call
xchg
iret
jns
xor
shl
mov
out
xlat
insl
cld
cli
sub
adc
add
in
sub
mov
or
adc
mov
dec
scas
aam
test
int3
lods
repz
cld
ret
xchg
arpl
push
iret
testl
in
cmp
popf
xchg
xchg
subb
gs
mov
push
test
int
cmpsb
mov
mov
pop
stos
shlb
rorl
lret
aam
and
sbb
dec
mov
and
into
sbb
inc
and
pusha
or
imul
and
ret
leave
out
rcrb
enter
mov
inc
pop
repz
aas
or
in
int
dec
dec
lcall
sbb
lret
mov
or
test
out
repnz
sahf
ret
xchg
mov
and
jl
dec
fisttps
jno
ficompl
shll
cmp
cmpsb
subl
aad
cmp
xchg
mov
mov
rcrb
add
gs
pop
and
gs
test
dec
fsubrs
out
mov
fcmovne
cmc
fisubrl
les
loope
stc
bnd
stos
stos
or
jb
stos
gs
sub
push
mov
dec
pop
rcr
cmp
sub
or
cmp
jbe
jae
fldt
shll
xor
sub
mov
xor
repnz
ret
jecxz
lahf
and
or
test
shll
sahf
pop
into
xchg
or
push
fptan
and
or
mov
lea
adc
das
ljmp
shl
push
inc
lods
push
insb
ret
lock
mov
mov
fs
insl
xor
xchg
loopne
into
stos
add
sbb
mov
fistl
mov
mov
addr16
sbb
ja
insb
dec
or
mov
iret
jb
mov
push
mov
inc
leave
mov
psubb
push
lcall
je
jnp
push
mov
sub
pop
out
sub
mov
mov
cwtl
xchg
lods
sbb
inc
loopne
or
into
ret
stc
mov
sub
mov
stos
dec
xchg
add
xor
roll
mov
mov
mov
add
subb
inc
pushf
and
jp
and
mov
std
or
xchg
stos
push
repz
sbb
cmp
fnstcw
dec
jmp
dec
sti
cmc
or
es
mov
test
addb
sbb
or
sub
ret
pop
outsb
repz
aas
lods
sbb
rorb
xlat
sar
mov
fs
fdivl
sub
test
sub
lods
xchg
repnz
pop
pop
shrl
out
int3
int
xor
dec
std
orb
repz
or
xchg
jl
sub
stos
xchg
sub
push
shl
movsl
jecxz
inc
jne
dec
pushf
out
jg
push
lcall
push
into
adc
enter
sub
push
call
pop
mov
adc
mov
pop
bound
push
or
mov
pop
rcr
stc
testb
imulb
lahf
or
movb
test
xor
dec
in
bound
loopne
xchg
outsl
in
sbb
std
mov
xchg
incb
out
in
push
dec
repnz
and
popf
insl
iret
fidivrs
push
sti
lret
cmp
fsub
push
cmp
sub
pusha
mov
pusha
pop
sub
add
fsubp
mov
movsl
mov
push
adc
rol
add
mov
test
sub
fs
cmpb
aas
loop
loopne
jne
or
jb
inc
adc
pushf
mov
fs
and
dec
xchg
nop
imul
mul
add
inc
out
fmuls
in
adc
cltd
popl
pusha
cmp
jmp
pop
cmp
and
jle
xchg
inc
push
jno
and
lret
shl
lcall
push
mov
mov
push
mov
jno
pop
xchg
daa
push
mov
lds
or
sbb
dec
xchg
sti
sub
jecxz
fisubs
push
cmpsb
add
es
in
xchg
dec
dec
dec
jg
aas
xchg
and
xchg
push
xchg
aad
aam
jge
rclb
sub
push
mov
bound
popa
filds
pop
add
imul
out
inc
mov
sub
insb
adc
addr16
loope
add
out
sbb
push
fdivrl
frstor
mov
rorl
cmp
pusha
leave
mov
fmuls
ror
dec
and
jge
fidivrl
sub
mov
call
sarl
out
cmp
aam
cmc
testb
out
add
aas
xchg
out
jp
aaa
mov
mov
imul
ja
xchg
arpl
hlt
cmp
aad
popf
out
stos
shrl
mov
aas
les
cmp
mov
nop
and
mov
out
or
mov
adc
push
inc
add
fimull
xor
ret
rorb
adc
fwait
test
jg
sti
in
dec
push
cmpsl
repz
mov
mov
mov
xor
push
add
leave
push
mov
mov
int3
out
outsb
cmp
fwait
sbb
mov
and
or
mov
popa
shrb
inc
adc
jle
fisubrs
jl
or
das
in
shll
imul
or
popl
cmpsb
or
or
add
lock
stos
lahf
mov
gs
push
add
jl
inc
inc
jmp
out
stos
out
sbbl
xlat
sbbb
sti
jns
shll
cmpl
inc
jbe
mov
icebp
jle
ret
movsl
xchg
mov
and
dec
pop
pop
mov
dec
jg
push
outsl
out
sub
movsb
mov
xchg
divb
icebp
xchg
pushf
int
lods
mov
xor
mov
push
leave
lds
add
add
adc
rolb
into
sub
add
stc
sub
dec
xor
in
and
jno
pop
push
and
push
push
xchg
shrb
cmp
mov
push
inc
xchg
call
ret
jg
push
cmpsb
fcmovbe
stos
movsl
inc
mov
stos
jge
stos
jno
push
shl
xchg
inc
sbb
xchg
push
inc
int
push
ret
lds
cwtl
out
cmp
mov
inc
add
inc
aaa
lds
lret
push
xchg
dec
cmpsb
mov
filds
mov
jecxz
in
pusha
lret
mov
inc
mov
jns
dec
jge
in
xchg
mov
cs
int
in
sahf
outsb
xchg
stos
push
xchg
add
mov
jne
inc
push
aam
jne
les
pop
push
iret
ljmp
iret
ret
jle
iret
inc
add
sub
lcall
sbb
out
pop
push
mov
add
ja
pop
push
mov
xchg
mov
xchg
xor
sbb
lcall
xchg
or
data16
sbb
cmc
rcrl
sub
lods
scas
mov
sub
frstor
lcall
test
mov
inc
imul
pop
lcall
xchg
dec
scas
inc
xlat
call
and
fwait
pop
push
js
adc
mov
xchg
push
cmp
mov
dec
movsb
xor
jmp
mov
cwtl
cld
jb
insl
ds
sbb
sbb
int
sti
sti
xchg
xchg
xchg
je
js
xchg
pop
pop
or
sbbl
aaa
xchg
lea
xchg
or
fildll
mov
inc
sub
loope
inc
lahf
cmc
push
mov
out
pop
leave
dec
pushf
xchg
jo
call
ljmp
mov
push
adc
jle
test
lock
adc
push
mov
out
in
pop
ds
loope
cmp
jmp
out
mov
xchg
jg
pop
dec
daa
pop
xchg
pop
shl
or
fs
orb
mov
fidivs
out
mov
push
push
fwait
jmp
daa
pop
sti
mov
jo
inc
mov
lcall
push
imul
inc
dec
aas
dec
inc
xor
add
lret
sbb
pusha
js
or
push
push
adc
ret
push
push
mov
neg
adc
sbb
or
rorl
mov
mov
push
adc
jmp
insl
shll
mov
push
push
and
add
cmp
xchg
pushf
data16
sub
test
pop
xor
push
mov
pop
aam
jmp
ss
rolb
mov
test
cli
mov
jb
cmc
mov
ss
icebp
and
daa
dec
and
xor
ret
aaa
pushf
inc
sahf
cli
mov
in
loopne
lret
inc
mov
jl
xor
std
dec
sbb
ret
mov
add
enter
sub
jmp
or
imul
xchg
out
iret
mov
jg
loop
fcmovnu
inc
int3
mov
test
jle
setb
inc
mov
std
sub
out
test
mov
rol
xchg
and
jns
daa
push
inc
mov
std
pop
andl
loope
inc
jmp
popf
pop
xchg
mov
push
mov
daa
and
inc
cmp
xchg
pushf
jnp
mov
outsb
mov
ficomps
jae
cld
js
lahf
push
aad
je,pn
or
mov
or
scas
ds
pushf
adc
add
xchg
sub
lea
pop
rcrb
sub
out
imul
lock
pusha
icebp
out
sbbb
and
enter
rol
add
cli
into
sbb
or
sar
mov
rcll
mov
mov
aas
cli
jecxz
add
add
cmpsl
push
jnp
mov
sub
mov
mov
adcb
mov
pop
incl
mov
xchg
imul
cmp
test
push
sub
mov
and
fisttpll
and
mov
or
xchg
or
and
mov
sub
jno
sub
iret
cmc
jnp
sub
xor
lret
mov
jp
mov
jle
cmp
jl
jae
test
shrl
push
xor
dec
test
idiv
ss
idivl
repz
gs
outsb
aam
test
mov
or
xchg
inc
cs
ja
loopne
fdivs
push
jb
aam
mov
rorl
mov
je
in
mov
in
sub
mov
testl
pop
cmpb
jo
rol
jmp
nop
mov
pop
and
sub
cmpsb
std
add
sbb
inc
ret
dec
adc
pop
int3
pusha
jno
das
pop
data16
inc
arpl
call
hlt
jno
pop
xchg
ffreep
cmc
or
ret
dec
addl
test
sbb
jp
xor
mov
pop
sub
je
sub
xchg
or
mov
icebp
call
cmp
pop
fistpl
sbbb
jbe
repz
or
sbb
std
lods
sbb
mov
test
push
mov
cmpsl
sahf
jns
sahf
add
inc
mov
out
jle
xor
dec
call
loop
jns
jbe
loope
adc
mov
add
pop
bound
jl
mov
pop
das
ficompl
insl
scas
or
jmp
mov
iret
mov
insb
mov
push
out
xchg
lock
jge
ret
adc
xor
jp
cmp
cmpsl
aad
mov
ret
inc
daa
or
fnsave
popf
pop
aad
aas
xor
dec
xchg
jns
sub
adc
xchg
cli
jb
cltd
cmp
int3
mov
xchg
test
out
shr
sub
gs
lcall
sbb
and
aad
push
sub
sbbb
test
mov
sbb
je
pop
cmp
mov
xchg
mov
jmp
dec
imul
jle
cs
mov
sub
mov
loope
or
and
shr
aaa
push
in
xchg
and
xchg
aas
xchg
hlt
lods
cmc
stos
leave
icebp
repnz
add
sub
add
jp
mov
xchg
shrb
sub
loopne
rcr
test
jecxz
lret
sub
insl
mov
xor
add
sub
or
sub
or
and
xchg
fiadds
jle
stc
mov
jae
mov
out
insl
xchg
push
fucomip
les
mov
repz
mov
sub
movsl
or
mov
sub
icebp
fmull
mov
clc
sahf
ds
jnp
or
out
iret
scas
fistl
or
and
rolb
stos
xor
cs
sub
lea
and
imul
test
or
hlt
imul
sbb
stos
mov
cmpsb
dec
push
jecxz
sti
add
and
jns
movsb
xchg
mov
cmpl
sub
mov
push
mov
adcb
fdivrl
rolb
or
and
push
mov
inc
push
pop
xchg
adc
ficomps
mov
cmp
cmp
sbb
mov
repnz
jae
sahf
int
dec
rcl
bound
pop
and
call
rolb
sbb
xchg
inc
push
je
js
arpl
mov
xchg
mov
out
mov
das
sub
cs
dec
cmp
scas
mov
add
mov
jge
push
nop
enter
stos
daa
mov
xchg
cmp
mov
xor
jno
pushf
mov
add
in
cmp
jp
ljmp
dec
jmp
sub
adc
loope
xchg
cmp
pop
daa
aad
in
lea
fcmovnbe
cmpb
lods
sahf
add
and
fsubl
lcallw
sbb
mov
daa
cltd
das
and
scas
xchg
in
mov
fiaddl
jmp
mov
inc
dec
sti
pop
loopne
popf
jo
push
push
out
dec
mov
out
mov
push
mov
inc
dec
imul
cmc
dec
stos
in
and
and
insl
mov
sbb
les
pop
lcall
ret
je
or
inc
dec
aas
sbb
sahf
inc
xchg
lret
cmp
lods
xor
ss
xor
and
add
push
je
sub
add
dec
or
pusha
sbb
sub
int3
arpl
in
push
push
loope
dec
or
ret
lock
sbb
push
xchg
dec
pop
xchg
lret
jecxz
add
and
push
mov
mov
jb
gs
je
js
call
nop
test
xor
pop
cmc
pop
pop
mov
sbb
mov
mov
scas
ret
cmp
test
push
jae
shll
push
add
xor
jb
es
stos
fisttpl
or
xchg
or
les
fisttps
jmp
or
ss
mov
cmp
test
pop
jbe
cltd
sub
test
stc
push
int
hlt
push
push
int
jmp
pop
xchg
and
adc
into
dec
push
in
jg
out
xchg
lret
xchg
lcall
iret
jo
notl
or
addr16
jbe
fildl
sub
scas
adcl
repz
xor
cmpsl
mov
xchg
sarl
mov
repz
mov
in
mov
inc
or
push
xchg
push
pop
js
imul
out
popf
pop
call
insl
stos
xor
lods
mov
shl
fnsave
xchg
push
cli
aam
inc
scas
jmp
adc
repz
mov
adc
cli
cmpsb
xchg
jl
add
and
sub
out
scas
sub
std
cld
dec
loopne
push
inc
xor
mov
call
fldenv
adc
add
mov
sbb
mov
lds
stos
and
movsb
cli
decl
sub
cli
in
aam
loop
popf
sarl
cmp
aam
mov
xchg
pop
xor
push
inc
dec
jge
popa
frstor
sbb
nop
or
add
scas
mov
rcrb
cmp
lds
and
stos
adc
mov
inc
lahf
and
mov
and
icebp
adc
jl
jecxz
cld
mov
cmpsl
test
pop
sub
test
mov
mov
mov
mov
dec
pop
leave
pop
test
mov
sbb
and
into
inc
mov
out
in
mov
sbb
sbb
in
xchg
push
rcll
lret
pop
cmpb
gs
xchg
xchg
stos
loope
sub
push
adc
mov
loop
sub
mov
or
jnp
fs
xor
into
or
cltd
mov
scas
cmpsl
mov
jge
shlb
inc
ja
xchg
filds
sub
stos
insl
scas
stos
and
pushf
dec
jmp
pushf
sbb
sub
cmp
xor
inc
pop
insb
movsb
rcrl
in
nop
push
clc
adc
jl
mov
jl
cmp
mov
in
into
add
test
stos
mov
das
sbb
add
adc
into
xchg
mov
imul
stos
aad
pusha
xor
movsl
mov
shll
test
fnstsw
ljmp
jae
or
lahf
xor
out
flds
stos
ja
enter
adc
fbld
adc
test
mov
and
pop
or
mov
or
in
sbb
jg
and
jbe
loop
repnz
jle
xchg
xor
test
cmp
pop
and
and
mov
mov
popf
daa
jg
cmp
jmp
xchg
pop
mov
adc
pop
push
pop
repz
xchg
xor
hlt
subb
cmpl
push
mov
and
sbb
jmp
xchg
pusha
les
es
push
bound
aas
sarl
inc
test
aas
fnstenv
push
iret
adc
loop
out
jmp
bound
arpl
xor
mov
fidivs
lahf
mov
xchg
repnz
loop
aam
and
lret
cmp
pop
pop
std
test
cmpb
pop
jg
add
cld
pop
aaa
push
imulb
mov
mov
in
not
shlb
movsl
push
stos
sti
cli
leave
pop
notl
pop
xor
jmp
test
xchg
les
or
shrb
xor
or
push
mov
cmp
movsl
and
inc
xor
fldl
jp
mov
xchg
or
insl
lds
daa
or
cltd
inc
dec
nop
cmp
push
adc
mov
cmpxchg
sub
out
mov
pushw
or
sbb
cmpsb
pop
xor
enter
mov
addr16
cmpb
loop
push
hlt
sbb
inc
xchg
add
iret
mov
mov
lods
add
cmp
mov
test
int
sahf
lea
push
jo
daa
sbb
push
lahf
insb
popa
mov
pop
loop
jmp
cmc
lret
insb
fistpll
push
mov
sahf
adc
ss
ja
aaa
adc
add
fscale
iret
or
and
push
jg
push
pushf
jmp
movb
stos
sub
outsl
xchg
mov
sub
sub
push
add
xchg
repnz
jae
arpl
add
cmp
aam
loop
fsubs
iret
data16
cmp
daa
and
imul
mov
mov
add
fwait
dec
and
in
xor
and
fwait
imul
int
push
sub
and
or
cmp
mov
adc
push
xor
fidivrl
pop
push
or
adcl
mov
jmp
sub
test
and
aaa
push
test
xor
dec
mov
inc
sub
mov
cmpsb
xor
mov
pop
mov
nop
sbb
add
ja
out
sub
adcb
mov
push
cmp
add
sbb
sub
add
arpl
lahf
sub
and
dec
inc
fmull
sbb
jns
cmp
sarl
jae
lods
add
ror
scas
push
jmp
mov
add
jnp
bndldx
out
add
adc
mov
imulb
sbb
or
rcll
int3
inc
lods
jle
xchg
sbb
inc
addr16
mov
sub
out
jb
xlat
popa
cli
es
addr16
cltd
in
cmp
dec
jbe
in
lea
sub
dec
stos
cmp
cltd
cmp
addr16
fiadds
xchg
sarl
add
stos
jecxz
push
push
and
adc
imul
inc
pushf
push
or
lods
and
sub
cs
pop
into
sub
mov
sub
inc
or
dec
stos
fiadds
faddl
pop
xchg
dec
xlat
push
jnp
xor
mov
mov
in
lahf
add
and
fs
cmp
rclb
not
ja
dec
dec
xchg
pop
aas
aad
adc
xor
jbe
or
cltd
popa
js
pop
mov
xchg
cmp
roll
int
and
fsts
mov
or
negb
push
aam
ret
lret
xchg
hlt
add
dec
xor
lret
xor
jl
in
mov
in
mov
pop
iret
adc
cld
fwait
jg
xor
xchg
scas
cltd
adc
pushf
sbb
cmp
cmp
pop
pop
stc
mov
ret
icebp
ss
add
push
jno
xor
jecxz
cmpsl
stos
rcrl
push
sbb
and
and
ret
pop
shrl
adc
lea
mov
jo
cmp
shll
fmulp
js
pop
and
inc
movsb
sub
pushl
mov
icebp
andl
jmp
jno
imul
mov
push
mov
cs
pop
sub
inc
aad
push
call
lea
insb
not
add
data16
pushl
sub
cli
ret
mov
jnp
inc
lock
adc
aad
jmp
jmp
stos
aaa
cwtl
stos
loope
xchg
in
rolb
jbe
inc
dec
adc
fwait
in
jnp
xchg
pusha
aam
cmp
lods
push
add
sbb
imul
sahf
mov
push
xchg
in
xchg
and
cmp
popa
jb
push
cld
jo
cmp
lds
sbb
jnp
aam
xchg
mov
scas
cli
mov
je
shlb
push
pop
jecxz
mov
sbb
pop
repnz
adc
xlat
lahf
decl
addb
cmp
pop
jne
xchg
scas
and
shll
jg
enter
or
es
xlat
ja
into
sub
push
adc
sti
into
cltd
inc
xor
jnp
and
dec
adc
mov
push
push
andb
cli
sub
inc
es
xor
subl
dec
xor
out
mov
dec
test
add
cmpsb
adc
add
imul
inc
lret
stos
inc
sub
mov
push
gs
or
mov
rolb
ret
gs
push
xchg
pop
xchg
faddp
aaa
in
jmp
adc
loop
or
loopne
mov
lods
insb
dec
in
sti
or
call
out
and
jns
shlb
jmp
cmp
repnz
out
outsl
pop
sbb
adc
mov
lods
xlat
pmovmskb
push
xchg
fwait
inc
mov
out
je
xchg
adc
mov
lds
xor
add
repz
outsb
hlt
push
pop
xchg
pop
mov
inc
aaa
xchg
jne
pop
lea
fbld
cmp
lea
sbb
ljmp
mov
movsb
addr16
jecxz
stos
sbb
and
jno
sub
bound
mov
loope
and
scas
cmp
outsl
cld
dec
mov
dec
mov
test
jp
push
sub
pop
jae
or
in
push
inc
shlb
or
cmpsb
pop
fcmove
imul
flds
mov
mov
aam
mov
lret
dec
cmpsb
test
mov
adc
push
mov
xor
inc
shrl
lock
lods
hlt
or
mov
mov
sub
pop
push
mov
mov
cmp
inc
dec
mov
stos
cltd
cmp
cmc
ja
pop
dec
les
jns
js
cmp
and
addl
shl
icebp
push
mov
sbb
sub
aad
and
nop
jecxz
scas
jae
xchg
jns
incl
push
jbe
imul
lods
xchg
int
movsb
xor
lea
insb
dec
ret
lret
pushf
fmul
mov
out
into
mov
in
jecxz
cmp
and
movsl
inc
add
push
outsl
ja
mov
fwait
scas
roll
inc
ret
mov
inc
or
add
mov
push
pusha
push
or
pop
jb
mov
arpl
xor
jmp
mov
shll
xchg
mov
add
and
or
push
stos
cwtl
or
fisttpl
cmp
cmc
je
cmc
loop
ljmp
mov
sub
jnp
mov
movsl
pop
mov
dec
fsubp
out
ljmp
cmp
int3
mov
leave
orb
sub
lahf
sub
or
test
lods
ror
inc
inc
mov
cmc
mov
fstl
adcb
in
add
loop
test
jmp
xor
sub
adc
xchg
jl
push
and
mov
xchg
ud2
sti
mov
roll
xchg
xor
or
mov
xchg
jmp
xchg
pop
xor
cli
and
push
push
shll
cmp
mov
xchg
dec
push
ret
outsb
add
test
fwait
pop
addr16
jae
lods
push
adc
repz
call
movsl
cmpsb
adc
and
mov
aas
or
or
jge
dec
loope
sbb
sbb
cwtl
xlat
pop
mov
dec
jnp
jmp
repz
mov
imul
and
adc
xor
mov
xchg
stc
xchg
adc
dec
rorb
sbb
sub
ljmp
out
jne
push
ror
mov
inc
fwait
push
out
movsl
pushl
xorl
pop
adc
mov
jne
es
xor
adc
ja
cwtl
mov
or
mov
fistps
enter
insl
inc
rolb
inc
pop
in
popa
imul
ret
cmp
into
mov
fs
push
mov
push
cmc
es
daa
fs
jo
xor
and
loopne
ds
aaa
sbb
and
pop
jbe
iret
jae
cmpsb
jge
nop
or
ja
movsb
inc
repz
ror
push
cmp
fwait
rcll
mov
lahf
jnp
dec
shlb
into
mov
dec
add
adc
clc
mov
sub
sarb
mov
sti
loope
pop
jg
pusha
pop
pop
xchg
mov
pop
movlhps
stc
mov
jmp
dec
push
jp
scas
dec
ss
push
lahf
push
add
mov
neg
shl
das
test
mov
aad
or
mov
repnz
stc
rcll
pop
andl
sub
aam
sbb
ds
aad
cmpb
bound
mov
mov
mov
dec
sbb
into
repnz
fwait
xor
sub
mov
test
mov
ret
pop
xlat
adc
lods
xchg
inc
cs
fnstcw
bound
fdivp
outsl
je
dec
add
add
repz
repnz
add
inc
repnz
notb
pop
mov
xchg
push
jb
push
mov
test
push
cltd
push
lcall
jl
aam
sub
cmp
mov
or
push
leave
mov
fisubs
adc
in
jmp
test
lds
jo
fcoml
cli
xlat
jnp
mov
fadds
adc
mov
dec
mov
imul
add
test
lcall
mov
fs
cmc
push
inc
add
push
cwtl
fcoml
push
pop
cmpb
cs
xchg
push
mov
rcll
pop
adc
mov
lret
push
mov
ret
shlb
pop
inc
jns
jmp
dec
ss
dec
jb
cmc
mov
xchg
xchg
xchg
sbb
clc
sbb
into
mov
out
mov
push
add
je
cmp
add
mov
sub
in
movb
fcomip
and
pop
jp
adc
mov
lock
xchg
xchg
jnp
leave
ficoms
dec
test
arpl
fwait
out
out
mov
stos
adc
and
push
stc
push
pop
and
imul
xchg
xchg
lahf
push
jecxz
sub
sub
pop
clc
sbb
mov
jmp
ja
push
add
sub
movsb
push
cwtl
mov
pop
into
sbb
insb
arpl
inc
xacquire
jp
push
nop
fcompl
jecxz
mov
imul
and
test
ret
cmp
push
idivl
pop
mov
or
sarb
inc
sbb
dec
add
addr16
scas
sbb
jns
aam
jl
push
aad
test
or
ljmp
cmpsb
lock
jge
mov
xchg
adc
fwait
lea
movsl
xchg
test
xor
jmp
jnp
fs
sub
and
cmp
and
jbe
or
cli
mov
dec
and
ret
out
sbb
xchg
push
xor
jp
jnp
daa
cmp
sarb
add
jo
int
adcb
sarb
xchg
push
out
xchg
jmp
add
xor
inc
cmp
dec
xor
jno
loopne
push
sub
ss
cmpsl
xor
and
mov
xchg
mov
mov
mov
in
mov
add
jl
mov
stos
mov
jp
shrl
sbb
xchg
xchg
cmc
dec
aad
push
pop
aam
sbb
or
xchg
dec
js
loop
lahf
addr16
adc
push
pop
in
dec
je
mov
ds
ds
jp
sub
xlat
jle
and
mov
xchg
aad
ljmp
jl
cmp
pop
fsubrs
mov
mov
mov
aam
sub
bound
add
mov
test
mov
movsb
adc
std
and
or
mov
and
dec
inc
xor
movsl
push
andb
add
add
jmp
inc
test
sub
or
out
mov
imul
and
adc
mov
push
fildl
xor
repnz
test
mov
xchg
xchg
inc
les
fs
aam
pop
jp
cmc
mov
das
pop
es
mov
mov
push
xchg
xor
lods
fimull
mov
les
pop
mov
mov
andb
cmpsl
and
scas
pusha
adc
movsb
dec
push
les
roll
push
mov
stos
mov
pop
in
test
and
fsubrs
xor
mov
ds
test
nop
shrb
lds
scas
movsb
bound
ret
xor
sbb
rorb
jns
mov
mov
fidivrl
nop
enter
cmp
mov
push
mov
mov
sub
jge
inc
ret
push
repz
out
sbb
je
add
popa
sub
enter
pop
test
dec
sub
sarb
ss
mov
inc
xor
or
cltd
lods
pop
cld
xchg
movsl
loop
inc
mov
sub
andb
outsb
cmpsl
jg
mov
test
add
insb
and
daa
cmpsb
xchg
sbb
pop
lret
xchg
in
push
inc
fs
std
inc
fildl
call
jnp
xor
dec
jl
les
xor
xor
clc
dec
push
aam
aam
repnz
test
mov
mov
sub
and
hlt
sub
and
pop
add
mov
mov
sbb
cmp
push
and
mov
xor
leave
xchg
mov
lds
push
pop
into
xor
lahf
lahf
push
mov
mov
mov
pop
or
test
mov
icebp
push
fdivr
fldl
xchg
test
lock
xor
shll
mov
adc
fldenv
jge
pop
sub
add
ljmp
js
inc
cmpsb
dec
cmpsl
rorb
lock
imul
cmp
cs
roll
jle
inc
xchg
mov
loopne
pushf
scas
xor
jmp
jp
xchg
xor
mov
gs
jo
fcmovnbe
cs
ja
push
add
jo
add
sbb
in
xchg
inc
pop
mov
test
aad
dec
push
adc
xchg
xchg
xor
test
or
or
sub
mov
call
mov
pusha
add
scas
pop
push
xor
vmwrite
sbb
inc
xor
mov
mov
mov
add
and
push
pushf
jb
loope
jnp
push
dec
fdivs
lret
ljmp
scas
fisubrs
mov
adc
leave
and
xchg
test
jb
test
scas
push
scas
xor
iret
ret
ja
clc
mov
mov
xor
stos
jmp
call
pop
mov
scas
adc
stc
mov
ja
ljmp
bound
repnz
mov
ret
js
lock
pop
loopne
and
jle
movsb
sbb
mov
arpl
xlat
add
data16
push
scas
sub
jb
inc
das
fcomi
lods
add
mov
in
lds
push
enter
push
xchg
ret
loop
and
imul
sahf
sbb
rclb
jns
jae
in
js
fisubs
jnp
xlat
fadds
es
int3
xor
mov
gs
push
fcompl
push
popa
arpl
in
sub
orl
fildll
inc
jo
loope
rolb
shll
mov
xchg
sub
xor
nop
mov
lods
lahf
int
xchg
in
mov
out
sub
jmp
jno
inc
rcrb
sub
neg
notl
mov
pusha
push
iret
in
sti
inc
cmpsl
xor
scas
adc
es
int
mov
sub
sub
dec
lcall
movb
leave
jae
out
sahf
aam
add
je
push
inc
xchg
add
mov
or
sahf
scas
pushl
xchg
popa
pop
test
icebp
lret
mov
test
mov
xor
and
in
out
insl
fcmovne
test
add
xor
xor
in
inc
out
push
shll
lret
cld
pop
int3
mov
shl
aam
sahf
sarb
ja
int3
sti
mov
shlb
mulb
int
out
xor
in
imul
mov
push
xchg
or
out
adc
jns
dec
in
in
dec
and
cmp
pop
add
xor
xchg
stc
movsb
jecxz
jno
jmp
mov
mov
sbb
in
lret
es
divl
mov
xchg
lret
adc
repz
stc
lea
push
aaa
pop
pusha
jno
push
repz
icebp
pop
arpl
lret
aas
vhsubpd
fwait
jp
or
mov
mov
mov
ja
repz
mov
rorl
mov
repz
mov
dec
pop
ficoml
jg
scas
dec
rcrl
into
aam
mov
out
jmp
test
or
pop
aam
clc
loop
adc
dec
es
push
jo
pusha
aad
inc
lds
popa
mov
in
push
pop
lea
sub
jae
push
rcll
xlat
mov
aaa
pop
jmp
mov
add
lret
jmp
test
ds
and
or
fisubrl
add
mov
sub
cmp
ss
dec
push
or
jg
push
xor
ja
jns
lods
addl
repz
out
les
jbe
sbb
mov
xchg
sub
mov
adc
dec
and
dec
mov
push
ds
test
pop
push
shll
mov
shrl
insl
fistl
ficompl
sbbl
inc
pop
xchg
lock
rorb
xchg
pushf
push
lcall
xchg
dec
xchg
dec
add
mov
movsl
popf
inc
fs
test
ljmp
add
jns
int3
fistl
in
sub
rclb
push
sub
icebp
in
jge
push
mov
mov
fsts
mov
sbb
pop
pop
and
xchg
inc
dec
sub
sbbl
cmpsl
test
lods
aaa
mov
int
in
fwait
clc
push
int3
add
sub
shrb
add
loope
popa
cmc
addr16
or
lds
jmp
mov
lret
inc
dec
rcrl
mov
jno
inc
sti
dec
scas
xchg
stos
and
xchg
xchg
fsts
inc
lea
outsl
xchg
out
xchg
shll
jecxz
mov
mov
jo
repnz
insl
xor
mov
nop
pop
cmp
rorb
scas
mov
daa
aad
sub
fnstsw
pusha
cs
cltd
mov
sbb
adc
dec
out
hlt
dec
dec
jecxz
push
inc
cmpl
xchg
lret
cmpsl
test
mov
cli
dec
scas
jno
nop
pusha
dec
out
jno
mov
int3
out
ljmp
sub
jmp
jmp
loope
jae
lret
cmp
sbb
cmp
andl
insb
dec
mov
sti
pop
or
sahf
mov
sub
mov
mov
mov
cli
icebp
ljmp
lea
xor
xor
es
rolb
repnz
mov
mov
popa
mov
pop
nop
mov
andb
out
dec
xor
lock
rcrb
sub
shl
mov
mov
inc
dec
loopne
in
sub
ljmp
incl
lock
pop
push
inc
jge
test
xchg
sub
sub
aas
pop
mov
mov
dec
aad
out
popf
test
rcr
test
or
je
repz
xor
cmp
out
bound
ret
enter
dec
xlat
xchg
sub
adc
fcomi
lea
jmp
inc
call
adc
mov
and
mov
imul
and
sbb
in
fs
adc
push
sbb
fnstcw
ret
int3
call
lcall
fcomps
dec
pop
cmp
lret
add
pop
enter
jmp
add
dec
shr
cmp
cmpb
jmp
insb
pushf
gs
loopne
xchg
mov
or
rol
and
xor
dec
mov
mov
xchg
insl
cli
sub
out
das
popf
dec
testb
shrl
xor
cmp
mov
add
lret
or
cs
adc
movsb
data16
insl
mov
ror
xchg
cmp
sub
mov
lahf
mov
xchg
push
push
in
adc
adc
push
loope
mov
iret
icebp
ret
xchg
jmp
mov
jp
je
sbb
inc
xchg
xchg
sub
pop
fs
subl
cltd
push
imul
mov
inc
inc
dec
or
xchg
xchg
ljmp
lock
push
pop
icebp
lret
push
mov
mov
lods
mov
loope
mov
add
inc
sahf
xor
inc
push
lret
nop
lds
xor
out
dec
out
nop
dec
jb
dec
test
iret
push
mov
xchg
insl
sahf
call
mov
push
and
mov
les
jp
or
push
lods
or
mov
push
in
xchg
cld
push
aaa
push
lret
mov
and
jmp
dec
nop
sub
int3
test
cld
insl
rcll
mov
lret
mov
fidivrl
sarl
inc
lahf
lea
lds
pop
icebp
testl
jp
lret
fisubrs
lea
jnp
sub
xor
xchg
cmc
xchg
xor
cmp
xor
in
test
dec
xor
lods
cmpsl
scas
cwtl
ficoms
sub
adc
movsl
movsb
push
popf
in
rclb
sahf
jo
xlat
insb
add
and
testb
into
push
in
repz
insl
nop
loopne
pop
repnz
lea
repnz
ds
or
jbe
mov
stc
inc
mov
xor
cltd
test
int
dec
sub
xchg
rcll
push
mov
test
fiadds
and
cli
arpl
sub
and
scas
es
aad
xor
jmp
movsb
cli
popa
dec
push
jo
mov
lahf
test
movsl
icebp
sti
outsb
sbb
mov
test
pop
xchg
fwait
rcr
mov
pop
add
addb
js
inc
jge
sarb
push
add
inc
push
ffreep
sub
loopne
mov
jg
sti
leave
loope
sti
roll
inc
inc
aad
stos
in
pop
cwtl
pusha
ret
sbb
mov
into
inc
test
and
out
cli
in
test
push
mov
xlat
pop
adc
xchg
faddl
xchg
mov
cmpsl
pop
iret
mov
sarb
ljmp
scas
imul
push
mov
roll
xchg
add
mov
incl
sbb
pop
sub
movsb
ljmp
loop
sub
inc
cmpsl
mov
xor
shll
lret
inc
in
test
hlt
data16
dec
xor
jmp
sub
xchg
inc
dec
call
nop
int3
inc
inc
repz
cmp
shrl
jno
or
stos
in
lahf
out
lock
sbb
and
rorb
push
pop
in
inc
shrl
daa
mov
or
mov
push
lods
loop
stos
pusha
out
les
or
repnz
push
fwait
loopne
in
add
mov
inc
mov
insl
cmpsl
add
jmp
mov
lret
icebp
dec
xchg
add
sub
pop
inc
mov
mov
jle
mov
xor
imul
lock
pop
sbb
dec
sahf
cmp
jle
jl
in
jmp
xchg
xor
push
mov
fldl
adc
xlat
addb
sbb
out
push
pusha
jb
xor
fs
adc
push
lret
jno
iret
imulb
loopne
sub
faddp
and
leave
pop
xchg
out
jge
xchg
pop
or
xchg
pop
xchg
push
sub
jge
xchg
mov
or
xchg
pop
lahf
or
mov
xchg
jb
out
insl
inc
in
imul
aad
pop
pusha
or
outsb
out
push
xchg
imul
cltd
mov
insl
outsl
js
leave
mov
aaa
ror
xchg
in
loopne
lods
es
dec
push
xorb
dec
xchg
lahf
or
mov
icebp
enter
out
stc
sbb
ret
fcomp
popa
add
jge
fwait
test
add
mov
scas
stc
fisubrl
in
pop
test
fimuls
jp
lret
fisubrl
mov
in
mov
out
xchg
test
or
xor
mov
inc
jns
in
xor
les
add
fwait
pop
xchg
in
notl
loopne
test
and
aad
int3
xor
pop
xchg
mov
lret
sub
xor
insl
lock
xor
leave
xchg
xchg
outsb
fadds
add
adc
fwait
jge
daa
mov
mov
xchg
xchg
pop
fs
nop
inc
dec
cwtl
arpl
pop
xchg
pop
add
ret
lahf
inc
dec
rcr
out
movsb
jno
xchg
imul
bts
flds
test
fisubs
iret
dec
pop
insl
aas
lahf
cwtl
and
hlt
call
push
cmpsl
dec
lods
popf
adc
push
sbb
fdivp
cs
jbe
push
adc
test
sti
pop
les
rcl
mov
xchg
enter
cli
repz
in
rcrb
ss
int
xor
xor
push
lret
xchg
jge
dec
cmp
out
inc
mov
std
xor
ret
mov
out
fs
fisubs
test
popf
mov
out
pop
pusha
xor
mov
loope
xchg
and
aad
lea
insl
push
lret
dec
sahf
xorb
adc
dec
xchg
repz
test
xor
xor
push
and
test
movsl
test
ds
shl
roll
std
data16
test
inc
mov
lahf
dec
sahf
in
xchg
jne
push
sti
xchg
pushf
or
arpl
mov
cmpsb
enter
mov
sub
out
sub
in
push
mov
mov
mov
ss
lods
xchg
sbb
xchg
xchg
out
mov
outsl
or
push
push
arpl
roll
mov
fcmovbe
lds
lock
out
xchg
pop
daa
fisttps
push
roll
lcall
and
push
lods
sahf
and
test
loopne
xchg
loope
sahf
stos
mov
pop
cmp
push
stos
lret
adcb
xor
jecxz
leave
sarl
test
repnz
and
test
adc
call
xchg
and
repnz
mov
rcrl
cmc
jae
dec
sbb
ret
cld
push
xchg
repz
movsl
mov
loopne
bound
loope
cmpsl
call
xor
mov
fists
adc
ficoml
bound
fistl
mov
loope
cli
jbe
pop
fstps
lds
add
test
jno
jo
shll
cmp
mov
sti
push
mov
cmp
mov
push
sbb
das
dec
mov
sub
lods
in
mov
xor
popa
out
in
test
sub
lcall
lret
cltd
xor
mov
outsb
mov
mov
sub
out
stc
cli
xchg
cmp
mov
xchg
pop
dec
cmp
jno
add
mov
rclb
mov
fiadds
push
inc
mov
pop
addl
add
jb
adc
xor
add
rol
sbb
push
inc
int
mov
adc
lret
mov
jno
adc
add
xchg
xchg
jb
pop
add
gs
addb
nop
cmp
out
subl
repnz
jge
mov
addl
sbbb
mov
sbb
inc
rol
sub
mov
jno
andb
mov
popf
ret
mov
xor
addr16
cmpb
mov
inc
add
sub
rclb
push
dec
xor
sbb
sarb
add
rcrl
icebp
jmp
xorl
jge
xor
or
in
and
mov
rolb
and
rorl
sub
mov
nop
daa
xchg
add
and
mov
xor
jb
jp
inc
icebp
sti
loope
clc
sar
xor
lods
test
xchg
iret
adc
sub
and
addb
sbb
jns
mov
and
ds
ss
and
jae
mov
lret
xchg
dec
xchg
divl
xor
rorb
ljmp
enter
test
push
mov
jmp
inc
stos
shlb
pop
mov
dec
out
mov
jge
mov
push
aas
lock
push
sti
xchg
pop
andl
fs
mov
popa
push
ret
nop
es
lds
cmp
icebp
and
add
test
cld
jg
mov
sbb
ret
ds
cli
repz
dec
in
jecxz
sbb
push
mov
cmp
negb
xchg
xchg
cmp
clc
lds
pop
repnz
stc
push
add
in
ljmp
sahf
mov
mov
sub
loope
fldenv
lret
adc
and
or
dec
test
fadd
inc
scas
sub
xor
push
jb
sahf
or
sub
mov
ljmp
mov
cmp
mov
xor
insb
stc
ret
repz
roll
aam
or
cmpsb
mov
popf
inc
int
or
dec
xchg
sub
jge
add
rorb
inc
cmpsl
and
jge
rclb
pop
cmp
int
fcmove
rorl
mov
xor
cmpsl
es
xchg
das
and
cltd
es
push
jns
jo
push
xchg
mov
sub
push
lock
xchg
fmull
pop
pop
icebp
pop
cmpsb
shll
mov
xor
sti
push
clc
fadds
ret
push
push
adc
jmp
hlt
mov
sub
or
mov
repz
inc
lea
idivl
inc
dec
push
iret
jle
inc
stos
movsb
adcl
ss
shrl
imul
dec
iret
adc
or
popf
adc
or
out
es
fidivs
mov
mov
adc
inc
mov
dec
sbb
das
cmp
cli
jae
xchg
shrb
stos
mov
or
mov
adc
cmp
and
test
add
and
pop
dec
test
mov
dec
xchg
mov
mov
dec
cmp
add
icebp
xchg
test
jne
sbb
or
lahf
mov
push
mov
fcmovnb
add
mov
dec
mov
mov
cmpsb
dec
jp
inc
out
xchg
outsb
fiadds
mov
imul
sbb
fs
sub
je
in
les
das
arpl
orl
dec
out
or
lret
and
shl
mov
es
jns
jbe
lds
lock
mov
fcmove
icebp
imulb
push
lahf
cmp
jne
pop
jmp
lea
or
dec
mov
adc
out
push
push
mov
add
inc
ret
sub
imul
hlt
jb
xchg
out
sub
cltd
leave
imul
cld
xchg
push
dec
inc
sub
push
jle
jp
daa
lea
mov
adc
mov
add
into
cmc
insl
imulb
lds
mov
sub
xchg
xchg
stc
out
mov
jne
outsb
ljmp
dec
or
lcall
arpl
cli
addl
leave
mov
lcall
cmp
xor
repnz
adc
lds
sbb
and
mov
movsl
jae
iret
mov
add
test
mov
in
cli
sar
push
xchg
out
mov
lcall
ss
cmp
dec
adc
insl
jb
leave
xchg
enter
xchg
sub
mov
and
push
xor
dec
fisubrl
cmp
mov
or
roll
push
xor
inc
and
in
mov
and
jno
shl
imul
lcall
stos
xchg
cmpsb
pop
lahf
mov
sub
rorb
push
out
xor
gs
and
cmpl
and
repz
push
in
arpl
jns
add
les
add
sub
leave
dec
testb
imul
shl
stos
movb
loope
rolb
arpl
imul
add
adc
mov
je
hlt
int
fwait
pop
fwait
xchg
nop
and
mov
xlat
jecxz
and
or
loope
jbe
cltd
daa
mov
in
jmp
dec
repnz
ret
loopne
mov
das
sti
loope
sbb
push
sbb
in
mov
mov
cmp
pmulhw
stos
incl
cmpsl
mov
out
push
mov
imul
or
aad
adc
mov
les
xlat
or
mov
dec
jmp
faddp
mov
sub
mov
cmc
sahf
aad
out
test
sbb
jne
xchg
or
scas
lds
fisubrl
add
loope
out
lcall
add
sbb
mov
stos
nop
add
bound
mov
lock
fwait
sti
xor
pop
std
fdiv
int3
int
daa
ficoml
lret
cltd
les
xchg
jp
xor
loopne
loope
cmp
add
cmp
pop
mov
lods
xchg
gs
cmpsb
nop
mov
dec
ret
mov
mov
fimull
xlat
rorl
int3
test
test
cmp
fimuls
mov
sub
aad
popf
inc
lret
push
sbb
mov
fnstcw
add
mov
or
lcall
mov
push
xchg
push
sbbb
or
int
shr
jb
inc
mov
aad
lret
in
ja
cmp
lret
stos
lret
push
pop
fld
cmp
push
stc
nop
or
jb
mov
lret
in
sub
or
stos
push
clc
cli
jne
jmp
in
jp
mov
mov
push
xchg
lods
cmpsb
in
sub
in
and
scas
push
pop
mov
or
jne
mov
ret
into
xchg
pushf
sahf
inc
sub
mov
mov
mulb
and
scas
xchg
dec
lcall
push
aas
notl
popf
out
xchg
dec
pop
and
enter
in
xchg
lods
aas
ljmp
or
icebp
shll
cwtl
imul
inc
subl
mov
xchg
divl
in
push
lods
cmpb
xchg
ljmp
inc
test
mov
lds
adc
pushf
loope
sub
jp
push
mov
scas
int3
and
lahf
jb
fisttpll
lahf
call
sahf
push
and
ficompl
dec
lea
pop
xor
push
push
les
leave
xchg
xchg
ljmp
mov
lods
sbb
gs
loopne
ljmp
test
xchg
out
je
mov
cmpsb
mov
data16
int3
int
test
sbb
test
ljmp
addr16
push
scas
jle
push
fisubrl
stos
scas
and
pop
dec
mov
insl
dec
sbb
jle
in
imul
cs
popf
pop
mov
jecxz
addr16
push
pop
cli
mov
sub
xchg
les
dec
or
lcall
icebp
add
xor
add
std
jmp
mov
les
xor
jge
orl
push
mov
lcall
nop
jns
in
xchg
mov
fiadds
xchg
movsb
aad
mov
lock
push
xchg
clc
cmp
fwait
mov
sbb
inc
push
ljmp
lods
mov
jne
scas
mov
jp
xchg
inc
push
mov
push
fstl
mov
cmp
out
sarl
aam
mov
dec
stos
es
sbb
rcr
fldl2t
xchg
xchg
jg
sub
xchg
lods
dec
jns
rorb
fsubs
add
mov
mov
inc
roll
out
sub
mov
decl
aad
addb
call
jecxz
pusha
or
cmp
jmp
fwait
lret
xor
xlat
fimuls
add
adc
xchg
jo
insb
sbb
in
sbbb
mov
nop
loop
mov
sub
dec
mov
test
icebp
ss
mov
sarb
decb
xchg
mov
adc
stos
test
jmp
pop
xchg
sub
xor
or
out
cmp
mov
scas
rcrl
and
dec
mov
add
dec
xchg
sub
pop
push
mov
enter
cmp
push
les
cli
cmp
shrl
int
mov
sbb
test
ja
pop
adc
negb
jmp
popa
fwait
rolb
push
sbb
lcall
insl
mov
add
fmulp
push
es
push
scas
repnz
inc
out
rcr
lods
scas
sub
push
push
add
fs
cltd
sahf
mov
mov
sub
sub
shrb
xchg
ljmp
rcr
xorb
cld
cmp
adc
movsb
pop
inc
icebp
mov
jmp
cmp
sqrtps
test
leave
testb
mov
into
rcrl
cmp
add
xchg
push
cmpb
pushf
pop
rcr
cmc
cmp
pop
jnp
pop
xor
adc
insb
add
mov
in
loope
mov
xchg
lock
lret
shlb
lret
in
mov
pop
and
out
mov
mov
inc
shl
rcrl
and
movsl
sbb
xor
stos
imulb
xchg
shr
rclb
int3
inc
loope
push
das
icebp
in
mov
xchg
adc
int
fwait
cs
and
clc
push
les
data16
pusha
test
push
pop
sbb
xor
xor
imul
dec
shlb
push
ljmp
jmp
lods
rcrl
outsl
add
outsb
sub
add
jae
lock
pop
or
in
mov
add
jl
cmp
int
and
push
lcall
hlt
mov
push
mov
sub
fcoml
roll
xchg
lods
scas
jmp
out
rolb
mov
out
push
sar
lea
xchg
or
sarb
and
push
cmp
hlt
mov
in
roll
loop
outsb
in
test
in
lock
divl
enter
mov
roll
add
in
push
mov
stc
sub
out
push
sbb
flds
lods
mov
stc
call
push
sbb
hlt
pop
in
popf
cmc
cmp
sarl
and
lods
and
bound
cmp
mov
loopne
cld
mov
jns
mov
dec
adc
pop
loop
xlat
add
lds
and
das
out
daa
inc
mov
loop
rolb
rcrb
leave
push
idivb
inc
mov
adc
mov
inc
mov
arpl
adcb
ljmp
and
jno
ret
mov
aad
dec
and
gs
enter
jp
mov
ret
xchg
push
jbe
cmp
cmp
mov
inc
pavgb
mov
pop
imul
mov
dec
pop
push
roll
jg
xor
rclb
in
scas
cs
jmp
push
cmc
aad
jo
les
sbb
and
inc
xchg
repnz
or
adc
inc
xchg
cmc
lcall
xor
or
mov
lret
add
clc
addr16
test
dec
or
ljmp
mov
insb
xor
and
lahf
movsl
lea
lret
lcall
xchg
in
mov
push
rorb
imul
push
xchg
aad
xchg
sub
call
loopne
add
cli
cmp
jge
jno
jns
iret
leave
push
imul
clc
mov
xor
jns
xchg
fildll
clc
xor
mov
add
aas
adc
xchg
leave
jno
movsl
mov
push
test
mov
ret
mov
xchg
xor
rcll
shrl
inc
mov
mov
repz
dec
mov
cmpl
ret
bound
mov
mov
xchg
jle
jae
shll
repz
sbb
sbb
sahf
add
or
jge
jbe
xor
lods
xchg
popf
pushf
mov
add
ss
jb
sub
push
or
pushf
mov
pop
sub
mov
in
mov
stos
into
mov
and
or
pusha
lret
sbb
out
push
inc
or
daa
jge
mov
insl
ret
lea
push
mov
inc
into
scas
jmp
mov
pushf
push
and
jne
pop
inc
gs
fimuls
mov
adc
or
mov
ljmp
sahf
inc
movsb
mov
addr16
cmpb
push
inc
nop
mov
cmp
inc
add
xchg
sbb
test
add
and
pop
cld
xchg
cmpsl
shrb
mov
cmp
into
push
jne
mov
sub
loopne
mov
enter
mov
jb
jno
ficoms
les
mov
inc
dec
movsl
mov
pop
sbb
stos
cmpsl
ret
add
test
bound
fidivs
and
adc
test
fisubrs
imulb
out
imul
in
xchg
negl
jb
cmc
sbb
xor
addl
pop
insl
je
xlat
xchg
arpl
movsl
call
in
jl
sbb
inc
mov
xchg
cld
inc
inc
sub
jae
xchg
sub
lahf
es
push
sbb
add
es
rorl
loope
mov
lods
inc
popa
mov
mov
fwait
lcall
adcb
xchg
imulb
adc
test
jmp
cmovo
mov
mov
out
hlt
rolb
stos
pop
mov
lret
fcoms
je
adc
push
jae
xchg
jmp
outsb
adc
dec
sub
repnz
or
dec
pop
scas
push
jbe
rcrb
incb
rcll
and
sbb
sub
or
hlt
cs
popf
push
jo
int3
mov
mov
repz
iret
inc
int3
mov
stos
in
popf
rorb
and
cs
pop
adcb
lret
testb
in
dec
into
sbb
mov
and
or
dec
pushf
or
jg
push
pop
sbb
gs
push
jns
shr
mov
push
scas
pop
cmp
sbb
or
sbb
xor
in
xchg
rcr
divb
lret
das
lret
fsubrs
sbb
inc
loopne
daa
mov
out
ret
push
fsubrs
mov
sub
loopne
adc
ret
int3
inc
or
adc
or
push
lods
dec
divb
mov
lea
and
pop
ret
addr16
jle
insb
lret
sbb
daa
es
add
in
pop
mov
aad
lret
into
pop
dec
cli
shll
and
xchg
sbb
cmp
flds
lock
jo
fcoml
jecxz
data16
into
cld
pop
insl
mov
imul
dec
adc
pop
inc
inc
rep
mov
ljmp
mov
fnstenv
rep
or
xchg
loopne
adc
into
shl
cmc
mov
inc
std
jl,pt
cmp
rorl
xor
or
std
push
mulb
jnp
int3
sub
rcll
lea
in
and
insb
repnz
xorb
cltd
sbb
and
mov
push
fwait
mov
mov
mov
sub
ljmp
dec
ror
pop
adc
rcrl
inc
cli
xchg
xchg
ljmp
jnp
clc
adc
sbb
mov
xlat
std
lock
mov
sub
inc
movsl
xchg
lea
mov
je
sub
push
mov
repnz
arpl
leave
movsl
in
loopne
icebp
inc
mov
cmc
dec
sbb
divl
fsubrp
es
inc
pop
inc
sarb
mov
and
aaa
enter
std
loope
aam
dec
cmp
dec
add
or
push
cmc
xchg
mov
pop
adc
sub
rcll
push
sub
jno
nop
cmp
or
ss
mov
sbb
je
cmc
mov
inc
pop
cwtl
andl
fs
sub
cmp
popa
movsb
adc
or
push
push
adc
popf
popa
push
in
push
xchg
mov
push
jg
add
sub
xchg
adc
arpl
mov
loopne
mov
xor
inc
push
lods
test
jmp
inc
jp
jne
ja
icebp
fimull
rcll
repz
sbb
adc
dec
outsl
daa
pop
add
dec
mov
jmp
in
cmp
sahf
push
ret
sahf
lods
pop
pop
nop
add
pop
add
scas
push
ss
int
mov
add
notb
fsubs
mov
sbb
xlat
sbb
das
out
xor
xchg
dec
in
sub
repnz
loop
xchg
ss
add
cld
gs
popf
inc
popa
imulb
mov
ret
push
adc
loop
cwtl
and
pop
and
sub
cmp
sti
ficomps
add
jne
sbb
xchg
inc
sbb
adc
arpl
add
js
jmp
call
pop
push
jg
jb
popa
jae
lods
nop
lea
ret
lret
shll
push
in
jns
inc
in
bound
aam
test
sarb
xchg
bnd
fcompl
jnp
in
scas
dec
cwtl
xor
push
sbb
jmp
mov
lea
xchg
loop
pop
push
lret
xchg
xchg
cs
js
lods
pusha
pusha
push
cmp
xor
jae
mov
stc
dec
jno
rolb
or
jmp
lock
stc
xor
adc
rcl
mov
in
ds
and
push
sub
fidivs
subb
bound
insl
gs
shll
in
mov
lret
push
into
jge
mov
dec
mov
mov
push
mov
mov
rcrb
jne
jge
jmp
mov
aaa
out
xlat
push
xchg
xchg
lcall
add
int
xchg
idivl
or
dec
sub
outsl
ja
cwtl
enter
adc
mov
pop
fsubs
push
loop
in
test
aaa
cli
push
ljmp
mov
sub
dec
loope
jl
and
lock
lds
insl
mov
mov
loopne
out
or
imul
add
jecxz
pop
or
ljmp
in
cmp
push
fstp
inc
pusha
gs
in
loope
mov
cs
sarl
add
sar
sahf
xchg
imul
ret
push
ret
mov
add
call
mov
daa
fld1
lret
cs
shl
sub
inc
ljmp
mov
in
test
int
pusha
pushf
fmull
cmc
sub
mov
push
lods
dec
into
dec
cmpsb
clc
adc
lcall
pop
and
movsb
je
add
aaa
leave
sub
insl
scas
push
xchg
sbb
lock
cmp
out
int3
lcall
mov
cmp
jl
in
std
int3
sbb
sub
cli
cmp
fsubr
push
jno
cmc
cltd
das
out
fcoms
xchg
mov
add
mov
sarb
xchg
enter
pop
dec
sub
pop
add
test
mov
enter
jg
add
or
outsb
out
pushf
mov
xor
cmc
jp
ljmp
xchg
bound
rcrl
jge
arpl
lock
cmp
mov
lcall
dec
xor
jmp
push
mov
sub
push
fsubs
rcr
dec
push
and
push
popw
xchg
xchg
pop
mov
xor
out
pop
mov
xchg
xchg
sbb
dec
dec
jo
xorl
xchg
mov
sti
movb
fcompl
mov
fistps
lret
aad
out
sub
mov
pop
stc
cmp
loope
imul
cmpsl
sbb
hlt
add
xor
pop
js
mov
shlb
aas
nop
ds
sar
aas
or
rorl
fisttpl
ja
rep
outsl
fwait
or
call
fdivrs
into
jmp
inc
andb
sarb
mov
into
popa
mov
movd
pop
push
sbb
mov
out
mov
leave
mov
stos
and
pop
push
or
pusha
pop
out
loope
dec
iret
insb
pop
test
ficompl
stos
and
mov
mov
int
out
xchg
mov
ret
xchg
stc
mov
inc
mov
cmp
lea
popf
addl
mov
or
out
cmp
fisubrs
out
jmp
lds
and
popf
iret
std
mov
or
mov
mov
push
das
xor
add
pushfw
movsl
cltd
rcll
movsb
sbb
mov
jl
out
add
fdivs
xlat
pop
addr16
jno
jmp
add
adc
aam
nop
adc
mov
out
xor
pop
mov
out
add
add
fldl
xchg
aam
xor
sub
inc
sbb
and
insl
mov
mov
xchg
lock
sahf
in
push
gs
or
and
lret
sbb
mov
sub
xchg
jae
rol
adc
and
sub
mov
loopne
fucomip
push
outsl
xchg
or
jo
inc
cmc
push
shr
jle
gs
pusha
mov
mov
jmp
int
mov
mov
xchg
int
data16
in
ja
icebp
int3
mov
mov
add
adcb
add
sarb
or
int
ss
dec
add
mov
neg
inc
add
stos
imul
mov
sbbb
int3
sbb
xchg
sub
es
leave
mov
out
repz
scas
dec
inc
cmp
xchg
mov
stos
rolb
xchg
xchg
dec
mov
mov
mov
fdivrp
inc
hlt
jbe
sti
xchg
xlat
sub
or
ret
inc
ffreep
fsubrp
sbb
mov
cmpsl
ljmp
rol
scas
ljmp
imul
dec
mov
jge
flds
sub
scas
mov
jne
add
xchg
lahf
and
out
fildll
call
mov
or
ds
xchg
aaa
sub
mov
lock
or
call
mov
xchg
bound
or
insl
loope
jge
movsl
iret
xchg
scas
rcl
outsb
testl
xor
pusha
or
mov
in
nop
push
xchg
inc
aaa
adc
inc
mov
jmp
inc
imul
lret
aas
sti
mov
iret
inc
adc
call
mov
fiadds
inc
adc
inc
jno
sub
inc
xchg
sbb
cs
stc
dec
addr16
sub
mov
popf
je
out
push
push
cltd
movsl
int3
xchg
cmp
push
and
repnz
mov
adc
in
enter
xchg
mov
and
in
mov
decl
or
popa
jns
mov
out
add
jmp
mov
frstor
test
sbb
repz
push
sbb
sub
jo
mov
pop
andb
jne
or
inc
inc
mov
pop
xchg
inc
test
jae
fcmovnu
mov
mov
cmc
mov
jge
aaa
iret
push
rcr
jno
shll
test
daa
aas
dec
imul
jg
ja
cmp
inc
xor
and
xchg
out
xor
add
mov
push
xchg
adc
ficoml
loopne
loope
or
jecxz
out
adc
into
scas
xor
aam
adc
adc
in
pop
jle
sbb
inc
mov
in
inc
or
bound
pop
xchg
enter
mov
fs
dec
imul
fdivr
test
mov
pop
jle
push
in
adc
push
popl
ds
mov
out
mov
cld
cld
lcall
popf
roll
div
dec
pop
loope
out
ljmp
sub
fnsave
cmc
adc
xchg
in
or
mov
mov
push
add
cmp
sub
out
maxps
lret
mov
mov
sbb
lret
push
mov
mov
out
push
mov
mov
notl
dec
loope
insl
mov
xchg
mov
mov
jg
jge
sub
add
je
mov
lret
pushf
adcl
lret
adc
mov
stos
lret
stos
push
mov
mov
and
sar
ficoml
mov
mov
cwtl
inc
je
loope
adc
ja
mov
mov
das
push
fcmovnbe
addr16
jle
lea
cwtl
mov
cmp
xor
mov
xor
jge
mov
subb
sub
add
mov
mov
fstpt
test
jmp
lods
iret
sub
adc
stos
les
cltd
mov
mov
xchg
adc
inc
and
sub
xchg
in
and
mov
outsb
inc
pop
popa
daa
push
xchg
and
imul
push
stos
loope
popf
filds
cmc
jns
movsl
xor
arpl
add
daa
cltd
jns
xor
repnz
call
xchg
xchg
mov
inc
jg
rcl
cmp
pop
sahf
loop
shlb
mov
clc
mov
inc
ljmp
int3
repz
jle
daa
mov
lcall
mov
sub
sbb
sti
mov
jge
mov
cmp
flds
scas
and
in
insb
pop
stos
dec
dec
bound
test
fwait
xchg
push
mov
mov
popf
mov
lods
mov
stos
int3
das
mov
fisubrl
mov
and
ja,pt
test
pop
ret
out
sub
imul
push
dec
pushf
rorl
adc
xchg
ljmp
icebp
test
and
ss
sub
push
sahf
int
mov
lcall
mov
push
xchg
mov
mov
xorb
push
insb
xchg
fcoms
xor
inc
aaa
push
dec
scas
sub
lea
xor
aam
mov
outsb
and
push
lcall
or
ss
inc
cmp
popa
dec
lret
xchg
push
xchg
jae
push
call
and
shrl
xchg
sahf
pop
outsb
push
ljmp
fdivrs
fwait
and
iret
and
sahf
test
imul
and
add
adc
pop
mov
mov
mov
xchg
sub
pop
or
inc
pop
popa
scas
and
push
loop
aad
and
jp
repnz
das
leave
loope
fistl
mov
xchg
jge
pop
jbe
xchg
enter
mov
clc
out
and
sub
ljmp
lods
lret
mov
mov
jns
jmp
push
aad
jmp
or
sahf
fiaddl
xchg
mov
xchg
inc
or
pop
jne
jno
mov
mov
mov
jns
mov
or
push
cmp
dec
pop
sbbb
mov
movsl
xor
stos
mov
pop
adcl
mov
insl
jns
sbb
xchg
and
mov
inc
mov
xchg
daa
mov
addr16
mov
mov
cs
dec
orl
out
mov
jl
in
imul
mov
cmp
shrb
fidivs
subl
cmc
sbbb
cli
dec
sub
adc
sub
inc
push
jmp
push
sarb
adc
and
insl
sbb
mov
lret
into
cld
dec
jne
xchg
test
jp
jp
or
and
cmp
push
mov
icebp
mov
sbb
lea
daa
sub
and
lds
sub
nop
cli
stc
fdivrl
stc
mov
cmp
fisubl
and
call
mov
mov
dec
lea
fisubrs
sub
subb
mov
imul
pop
xor
xchg
ljmp
mov
mov
loop
sub
push
ror
mov
out
pop
jge
mov
xchg
and
jbe
xorb
adcb
mov
xchg
sub
inc
jnp
sbb
and
adc
jecxz
mov
lea
fistl
dec
or
test
add
cltd
js
xor
inc
loope
lret
jns,pn
and
rcr
das
sbb
adc
xlat
fldl2t
sbb
mov
and
cmp
stos
and
push
xchg
push
in
daa
jecxz
sahf
dec
pop
mov
push
into
sbbb
imulb
aad
stos
fnstcw
or
push
int3
int
add
xchg
cs
rcr
popa
iret
inc
xlat
jne
mov
fnsave
adc
cli
cmp
cmp
cwtl
andl
sahf
sahf
jb
push
les
inc
out
fwait
sahf
leave
sub
jno
into
aas
insl
sub
xchg
call
out
sub
mov
sub
mov
outsb
pop
jbe
insb
loope
jmp
cld
rcrb
xchg
lock
insb
mov
pop
nop
mov
jmp
jo
adc
scas
cltd
mov
push
jb
jae
test
es
mov
or
loop
mov
mov
insl
mov
adc
xchg
leave
insl
ljmp
ja
cmp
mov
and
adc
lea
and
cwtl
mov
outsb
xchg
outsb
outsl
mov
xor
mov
push
fwait
lret
push
mov
xchg
inc
xchg
jnp
ficoms
es
dec
inc
xchg
sub
mov
insl
and
imul
das
sub
lret
mov
and
mov
nop
into
popa
in
int3
lea
mov
loop
and
cmp
adc
lea
arpl
clc
pop
dec
leave
jne
mov
jge
in
cmp
lea
pushf
aaa
xchg
jne
ja
jg
add
cmp
xchg
xorl
lret
mov
sub
add
xchg
pushf
cmp
aad
push
pop
or
inc
nop
mov
pop
pop
and
jg
sub
insb
mov
inc
rcll
stos
loope
xchg
in
push
popf
popa
test
dec
mov
and
in
lcall
pop
jbe
mov
iret
pop
adcb
pop
andb
ret
cmp
int
insl
es
nop
sbb
push
adc
cld
mov
gs
jmp
add
sbb
cld
push
jne
scas
mov
mov
in
sbb
bound
insl
gs
inc
jb
dec
fimuls
pop
int
or
leave
lea
sbb
enter
xchg
xchg
fisubs
pushf
loop
sub
sbb
ss
ret
lahf
sub
xchg
mov
or
inc
mov
sub
pushf
mov
dec
int3
insl
aaa
lret
cmp
adc
push
mov
jno
std
lods
test
ljmp
cmp
mov
jns
and
xor
push
cmp
addb
ja
or
jl
out
insl
jmp
xchg
out
cmp
cmp
out
add
cli
rcrb
lds
lret
push
ror
sbb
cmpsb
stos
and
mov
xor
inc
jmp
call
popf
loopne
mov
aad
test
or
pop
jne
data16
nop
add
lods
rcrb
scas
mov
pushf
jmp
int3
js
xchg
roll
cmpsb
cs
test
adcl
or
lcall
push
mov
stos
mov
inc
jo
or
xchg
inc
push
and
repz
aam
xchg
push
and
lds
adc
repz
sar
jb
roll
rol
bound
nop
mov
outsb
lea
xchg
or
dec
mov
xor
jns
leave
fwait
imul
ja
in
jge
aaa
push
push
lret
sbb
aaa
leave
es
inc
add
jmp
nop
lahf
mov
nop
mov
cmp
cmp
fcompl
imul
or
ljmp
add
sub
lods
pop
nop
pushf
sub
xchg
sbb
jp
out
subb
cwtl
fwait
mov
shr
or
out
mov
mov
mov
xchg
pop
fisubs
mov
int3
jns
fstpt
stos
sbb
dec
divb
icebp
stos
mov
mov
lods
movsb
adc
movb
pushf
icebp
mov
fadd
int3
mov
or
lret
loope
lret
jmp
and
roll
push
stos
jae
stos
test
and
sub
leave
std
subl
lret
insl
gs
mov
outsl
xchg
mov
sbb
jae
xchg
pop
lcall
filds
paddb
jg
sub
lret
sub
cmpsb
push
pop
fwait
je
arpl
scas
into
jp
cmpsl
stos
inc
mov
test
mov
cmp
nop
cltd
inc
xor
pop
xchg
xchg
inc
mov
add
mov
push
lock
sbbl
sahf
sub
dec
add
or
inc
jp
or
sbb
and
adc
movsl
add
andb
and
icebp
adc
add
shrl
cmp
xchg
lods
pop
out
jle
jbe
xchg
sub
or
push
push
aam
adc
stos
or
or
cmpsl
fcmovnu
xchg
fs
lods
ds
cltd
xchg
lods
call
cs
sub
cmc
jo
test
push
adc
adc
jb
jge
or
push
pop
inc
clc
xchg
test
or
iret
and
dec
adc
test
push
push
idivb
jae
or
repz
in
hlt
rcrb
aad
mov
mov
xchg
xchg
loope
std
scas
xor
lret
shl
or
lret
fcmovbe
sub
dec
and
bound
inc
addb
shrb
movsb
push
stos
jbe
in
es
push
pop
and
sahf
mov
mov
rolb
sahf
inc
out
or
add
es
jge
and
cs
out
xorb
push
fdivs
mov
or
xchg
mov
stos
movsb
out
and
and
mov
shlb
sub
repnz
stc
xor
mov
xlat
mov
shrl
add
inc
stos
or
ss
sahf
popf
mov
sub
mov
cmpsl
movsb
cltd
xchg
orl
test
test
inc
pop
and
or
fwait
adc
in
and
out
push
subl
dec
in
mov
test
es
sti
subb
mov
cmp
ja
xor
add
std
test
adc
mov
insl
aaa
jno
lcall
int3
gs
mov
mov
adc
lods
dec
ds
push
push
popa
push
les
fimull
fldpi
jecxz
push
jb
adc
lods
xchg
add
mov
aam
ss
idivb
pop
sub
out
dec
adc
test
nop
mov
mov
pop
mov
xor
dec
sahf
and
push
cld
cs
jge
mov
test
in
andb
push
shll
mov
loope
xchg
or
or
mov
sub
lahf
loop
cmp
dec
scas
iret
xchg
lock
aam
scas
push
out
scas
mov
or
lret
in
into
std
dec
popa
out
pop
and
dec
enter
or
cli
bound
das
in
pop
push
sub
xor
rolb
lcall
ds
mov
cmp
mov
popf
dec
xchg
fwait
repnz
mov
mov
repz
mov
int3
inc
stos
adc
iret
pop
jns
scas
push
push
rcrl
xor
aam
shlb
into
cmp
mov
jge
add
cmp
cmc
mov
or
fmul
popa
jg
push
pop
test
in
cmp
jecxz
jbe
shll
mov
lcall
or
xchg
sub
xchg
and
cwtl
push
clc
out
cli
lret
sbb
mov
push
les
nop
scas
test
or
ss
xor
dec
mov
xchg
mov
jnp
shlb
jmp
mov
mov
test
pop
lret
cld
pop
mov
insl
inc
daa
insl
popf
push
enter
xchg
testl
or
mov
mov
shrb
sbb
and
imul
push
dec
jl
push
and
popa
sub
cltd
inc
dec
xchg
add
idivl
dec
idivl
jmp
bound
adc
xor
ds
sub
mov
enter
repnz
and
pop
jb
jg
xchg
lret
inc
outsb
lea
inc
dec
stos
in
dec
ret
cmp
sbb
mov
call
mov
sbb
adcb
cwtl
sahf
mov
lods
out
sti
rclb
int3
shlb
mov
mov
test
push
stos
pop
jb
rclb
shl
cmp
ds
jp
nop
xchg
dec
shll
insl
incl
cmp
lret
and
mov
lds
adc
sub
in
jno
xchg
mov
out
out
jl
jo
stos
or
dec
push
std
and
scas
aas
cmp
fmulp
and
lock
sub
cwtl
test
mov
sub
out
inc
test
loop
add
push
popa
dec
test
enter
shr
out
push
in
mov
mov
jbe
jno
stos
pop
js
push
adc
lods
sub
cmp
insb
std
arpl
mov
or
ret
mov
test
lea
or
pop
call
pop
inc
push
daa
jle
fsubrl
sbb
adc
lock
sub
or
pop
callw
out
insb
outsl
stos
jae
int
out
xchg
push
pop
xchg
xchg
xor
fwait
out
sbb
dec
mov
jge
push
push
push
jno
test
sub
or
cs
adcb
and
popa
shrb
pusha
cwtl
pop
or
add
mov
js
shrb
imul
test
mov
inc
subb
repnz
aad
mov
cmp
or
test
das
outsb
test
sub
es
jp
xchg
pop
leave
mov
inc
lods
inc
out
loope
xchg
adc
inc
lds
sub
pop
lret
aas
scas
jp
cmp
jb
adc
or
mov
sub
gs
imul
pop
shr
xor
mov
int
xlat
movsl
lcall
stos
add
pushf
cmp
and
nop
and
subl
cwtl
xor
cmp
stos
mov
xchg
add
sub
std
xchg
mov
adc
mov
mov
cld
mov
sbb
and
pop
mov
lret
adc
out
inc
stos
insl
push
addr16
scas
dec
aam
sbb
xor
test
jecxz
mov
stos
in
cmpsl
call
test
adc
xor
test
push
rolb
xlat
push
jl
inc
mov
sbb
adc
lock
push
xlat
mov
and
fstpl
sarb
add
mov
andb
icebp
addl
sub
xchg
je
pop
shrb
sub
adc
and
lea
stos
out
mov
sbb
mov
and
mov
xchg
icebp
sbbb
inc
adc
out
int
inc
rcrb
add
push
pop
jno
js
lea
outsb
movsb
fst
pop
adcb
repnz
fdivr
dec
xchg
cmp
rorb
jne
shrl
nop
adcb
sub
jae
mov
pop
inc
faddp
pop
jge
clc
xchg
or
xchg
or
adc
xchg
jne
mov
push
jno
cs
adc
and
imul
sub
cmp
sbb
mov
xchg
mov
sub
jne
pop
cmp
sbb
inc
inc
pop
and
pop
and
pop
pop
sub
push
mov
xor
fisubl
and
inc
mov
sti
bound
jb
adc
popf
call
mov
dec
mov
shl
scas
sbb
pop
stos
cli
arpl
cltd
mov
ja
xchg
aas
push
mull
adc
ficoms
push
in
adc
adc
pushf
ds
sub
dec
iret
cltd
jle
jno
faddp
scas
leave
into
and
mov
xchg
or
dec
out
sub
adc
test
sahf
inc
mov
int3
cs
add
fs
lret
cmp
mov
pop
jnp
mov
xor
cmpsl
inc
loope
and
push
and
pop
xchg
jo
lahf
sub
arpl
jbe
cwtl
cltd
dec
sub
inc
xlat
mov
or
dec
jl
pop
movsl
mov
incb
rclb
xor
adc
mov
jbe
jecxz
pop
rorb
xor
adc
shlb
repnz
out
cmp
mov
lcall
dec
inc
mov
loope
add
pop
popa
stos
inc
mov
sub
dec
data16
or
int3
inc
mov
pop
mov
outsb
repz
fcoms
xchg
mov
loope
mov
inc
inc
xchg
add
and
fnsave
or
int
inc
dec
mov
inc
jo
pop
adcb
mov
xor
jmp
cmp
shl
int
push
adcb
jecxz
clc
divb
outsl
ljmp
push
icebp
daa
cmc
cwtl
mov
lcall
pop
push
inc
mov
jne
divl
in
fiaddl
scas
dec
or
hlt
sub
jb
shlb
cltd
fidivs
fistpl
mov
cmpsl
dec
roll
data16
test
repz
stos
out
sbb
lea
add
mov
mov
mov
dec
jle
stos
xchg
into
push
cltd
xor
jl
dec
jge
add
inc
and
mov
lds
jmp
lock
adc
stc
dec
scas
push
aam
lock
xchg
scas
cs
inc
jge
jno
lods
and
js
je
insl
xchg
xchg
mov
add
mov
adc
test
jmp
test
ret
cld
pop
jne
pop
mov
les
mov
fbld
xor
rcll
sbb
jb
shrb
and
cmp
add
test
stc
lcall
jmp
xchg
popl
pop
fcoms
inc
push
fmulp
xchg
pop
and
jp
sbb
insl
dec
sub
pop
and
lods
decl
or
mov
sub
ljmp
xchg
mov
jno
orl
jns
push
lcall
repz
lock
int3
jns
push
out
xchg
adc
pop
shl
loope
sarb
sub
pop
in
inc
inc
adc
mov
sti
ret
mov
xchg
or
push
mov
mov
mov
mov
mov
mov
shlb
in
loop
lcall
cmp
shrb
into
popa
nop
imul
add
xchg
xchg
or
fnstenv
cmp
inc
xchg
sub
sub
fcomip
xor
neg
imul
clc
iret
xlat
lcall
dec
insl
test
mov
xchg
test
mov
repz
adc
data16
in
mov
or
dec
mov
nop
ficoml
mov
push
out
popa
mov
push
shl
xchg
xchg
jecxz
or
jmp
jmp
jb
mov
sub
and
popa
cmpsb
sub
leave
cmp
xchg
sub
addr16
fisttps
mov
lea
ja
sub
lret
xchg
mov
cmp
fiadds
push
aaa
push
notb
stc
iret
sbb
sbb
mov
std
add
out
adc
aaa
inc
adc
mov
inc
stos
and
mov
lret
sbb
xchg
mov
mov
vprotw
dec
addr16
and
xchg
jne
add
sbb
jne
adcl
cld
add
jo
or
fs
xor
ret
push
dec
inc
rcrb
cmp
jp
sti
xchg
mov
add
xchg
subb
out
dec
ja
xchg
add
jne
add
inc
mov
xchg
add
sahf
xchg
out
xchg
mov
xchg
adc
xor
mov
cmpb
jae
into
insl
dec
jbe
jge
data16
dec
xor
adc
sbb
les
rolb
push
nop
imul
xor
stos
sub
dec
sub
adc
flds
sbb
mov
and
push
cmp
jae
into
mov
xor
loope
inc
enter
xchg
leave
out
pop
mov
lods
popa
mov
mov
repnz
icebp
mov
and
popa
fsubrp
sub
inc
adc
in
nop
jp
add
xchg
hlt
and
mov
mov
ljmp
pop
mov
mov
and
cmc
xchg
in
inc
xchg
fucom
jb
mov
push
popa
dec
ljmp
stos
sub
jne
ficoml
mov
and
popa
shr
fptan
ret
inc
ss
adcl
inc
hlt
frstor
dec
jae
into
pop
dec
inc
mov
mov
dec
inc
mov
movb
out
lds
ss
push
dec
or
nop
jbe
int
sbb
and
mov
cmpl
leave
insl
adc
xchg
pop
out
rorl
ljmp
adc
loope
inc
xchg
fucomp
outsb
add
sbbb
and
xchg
jnp
in
in
or
into
leave
dec
shlb
sub
xchg
xchg
in
dec
pusha
mov
jne
push
ljmp
mov
or
fnsave
xchg
dec
mov
std
sbb
xchg
xchg
lods
out
cmp
adc
sbb
inc
jbe
or
nop
bound
xchg
out
fmull
mov
or
repnz
dec
ljmp
test
sub
add
mov
jns
sub
cmp
adc
xchg
sbb
nop
and
insl
cmp
pop
mov
mov
and
xchg
xchg
aad
jbe
mov
pop
popa
inc
ljmp
pop
or
popa
sub
sbbl
leave
dec
adc
ds
and
popa
cmp
xor
sub
add
dec
or
nop
jle
add
mov
mov
jne
fcmove
gs
xchg
push
in
mov
bnd
inc
xor
xchg
loope
inc
add
xorb
push
stos
pop
jae
into
mov
mov
out
in
mov
and
popa
ljmp
inc
into
mov
xchg
cmc
ljmp
aad
stos
jne
outsb
into
inc
dec
pop
mov
mov
mov
ljmp
fimull
xchg
test
stos
add
add
jge
push
inc
arpl
test
add
xor
repnz
in
loop
or
ljmp
cmc
sbb
gs
jle
dec
arpl
pop
sub
repz
jb
rolb
push
nop
cli
xchg
inc
ljmp
mov
ds
xor
arpl
out
adc
flds
bound
mov
or
repnz
repnz
mov
and
popa
ljmp
sub
xchg
in
ljmp
xor
inc
into
lods
dec
mov
stc
lods
inc
ljmp
repnz
xorl
adcb
push
and
repnz
rorb
push
push
or
jmp
push
jne
ficoml
mov
and
popa
ljmp
inc
xor
xchg
std
ljmp
shrl
jae
into
push
dec
dec
mov
lea
mov
loope
cli
shl
inc
ljmp
lods
ljmp
mov
stos
sbb
into
imul
out
inc
cmp
test
enter
sub
jmp
mov
xchg
sbb
into
sub
mov
or
sub
loope
inc
enter
xchg
leave
out
pop
mov
mov
test
push
jge
rclb
mov
and
popa
shr
fptan
ret
inc
ss
xchg
stc
ljmp
int
stos
pop
jae
into
test
cmp
test
sahf
rclb
adc
out
mov
cmp
xor
mov
insl
shrl
jbe
int
push
enter
xchg
sub
cmpsb
xchg
jne
ficoml
pop
cmp
int
fcmove
rorl
mov
xor
in
inc
enter
xchg
int
push
pop
mov
lods
popa
mov
es
jno
stos
xchg
jae
into
in
loop
int
shrl
xchg
xchg
loope
inc
js
bound
dec
popa
push
ljmp
mov
mov
xchg
sbb
into
lds
mov
and
mov
dec
xchg
in
out
js
data16
pop
ljmp
mov
pusha
loope
ds
stc
inc
sub
xorl
mov
mov
and
popa
adc
sbb
add
popa
inc
jp
or
nop
push
xchg
and
sahf
and
xchg
popf
inc
xchg
or
ljmp
addb
jae
into
adc
mov
jno
sub
cmp
adc
and
or
xchg
popa
ljmp
jae
into
rorl
sub
out
cmp
xchg
in
dec
xchg
aad
jp
mov
inc
popa
inc
ljmp
stos
stos
xorl
mov
orb
leave
mov
out
or
popa
push
ljmp
push
or
jmp
cs
jns
rolb
push
adc
xchg
dec
out
mov
cmp
stc
nop
dec
xchg
jmp
subb
push
stos
push
jae
into
movsl
mov
out
popf
mov
ljmp
lret
cltd
nop
scas
xchg
cmc
ljmp
aad
stos
jno
push
dec
dec
push
mov
mov
add
rclb
inc
nop
out
mov
cmpb
jae
into
sbb
arpl
dec
xor
test
enter
and
sub
jne
xchg
popa
ljmp
dec
stos
fnsave
into
sub
arpl
out
add
jmp
adc
cmp
mov
mov
jno
rolb
insl
add
pop
ljmp
movsb
inc
out
xor
loope
inc
enter
xchg
shl
pop
mov
lods
popa
mov
mov
jne
xchg
icebp
dec
out
mov
aad
sub
leave
cmc
adc
loope
jle
mov
inc
popa
pop
ljmp
mov
mov
jmp
inc
nop
ljmp
addb
jae
into
sbb
mov
jno
sub
cmp
adc
xchg
sbb
cmp
jmp
ret
out
leave
mov
and
popa
ljmp
cs
or
nop
inc
xchg
fldl2e
push
xor
mov
mov
jno
ror
insl
adc
xchg
pop
out
int
and
popa
ljmp
nop
mov
add
cmpb
stos
dec
jae
into
pop
dec
dec
mov
push
or
into
jmp
arpl
out
leave
mov
xchg
xchg
out
sbb
jb
jns
jle
dec
inc
outsb
push
or
xchg
or
cmp
enter
mov
lods
lea
shl
mov
xchg
shl
cltd
data16
in
in
sahf
addb
icebp
dec
lock
loop
push
div
mov
sub
mov
cmpsb
xor
pop
mov
mov
inc
cmp
push
imul
sbb
es
add
jb
mov
pop
test
insb
shrb
negb
arpl
fs
lock
adc
mov
push
orb
incl
jle
and
mov
xchg
mov
cli
andb
rcrb
cmpsl
xchg
sbb
popf
sbb
fldcw
xlat
imul
jae
pushf
jae
lds
xchg
add
dec
in
and
in
jno
mov
dec
sahf
push
add
ss
push
pop
adc
popf
ret
mov
mov
and
xor
les
mov
lds
sbb
movsb
mov
mov
jnp
inc
sub
lcall
inc
in
sub
push
or
mov
sub
fcmovbe
fisubrl
push
idiv
ljmp
cmpsl
mov
inc
mov
pop
loope
sub
fcmovbe
mov
adc
and
push
insb
or
jae
lret
iret
loop
repnz
loope
and
lcall
js
repnz
mov
inc
xlat
and
push
icebp
adc
loopne
icebp
jne
sbb
gs
push
lds
fucomp
hlt
sbbl
inc
popa
ret
in
xlat
lar
leave
mov
adc
jne
insb
sub
in
push
testl
scas
and
dec
test
in
sbb
push
sbb
je
mov
mov
dec
mov
jl
test
testb
inc
rep
sub
push
or
movsb
mov
or
push
add
bound
mov
cwtl
xchg
sbb
xorb
imul
gs
ja
mov
orl
jp
push
mov
aam
jae
mov
cld
push
jmp
andb
xchg
pop
jb
icebp
outsl
gs
aaa
lock
jb
mov
add
cli
dec
add
push
clc
mov
jne
sbb
imul
test
lret
pop
lret
hlt
daa
rorb
xor
jnp
pop
adcb
and
aas
mov
mov
cmpsl
sbb
lret
ror
adc
js
gs
add
mov
mov
mov
pop
cltd
subl
or
insl
ret
lds
mov
and
mov
cmp
cmp
inc
pop
aad
lods
cmp
cmp
mov
sbb
mov
mov
stos
call
or
mov
popl
mov
sahf
or
or
mov
cmp
int3
xor
mov
aad
add
movsb
in
jl
add
add
in
push
and
xchg
sub
push
repz
notl
sbb
inc
lcall
inc
ljmp
and
stos
insb
push
and
leave
out
adc
and
pusha
sbb
out
mov
inc
pop
pop
in
mov
mov
sbb
mov
xchg
jg
mov
lret
cmpsb
sub
jmp
push
add
ds
aaa
call
sub
scas
test
lock
sbb
jecxz
or
xchg
sub
cmp
test
test
dec
gs
mov
gs
fldl
pop
ret
xchg
mov
les
into
ret
fwait
inc
or
fwait
dec
xlat
call
mov
pop
movb
push
aas
std
mov
cmp
ret
sahf
shl
jne
stc
mov
push
mov
jno
inc
fisubl
mov
jbe
xor
pop
inc
mov
xor
roll
test
pop
dec
rol
inc
push
or
pop
mov
xchg
sub
daa
pop
mov
pop
sbb
loope
inc
push
test
jl
aas
xchg
jne
sub
js
bound
test
adc
add
mov
jo
or
and
into
add
ret
and
pushf
fcmovb
int
pop
xchg
stc
mov
and
mov
popf
into
mov
test
lahf
cmp
std
inc
in
es
bnd
sarl
adc
scas
pop
cmpsb
push
adc
cmp
out
stos
and
fucomi
push
shl
mov
rcr
pushf
pop
in
xor
xchg
aad
xchg
push
int
xchg
adc
sub
lea
xchg
sub
test
xor
xor
adc
divb
repz
jns
or
icebp
inc
inc
test
rorl
mov
shl
ret
mov
lahf
movl
mov
mov
test
in
in
cmpl
daa
add
mov
mov
dec
loope,pn
scas
mov
push
sub
lret
aas
cmp
stos
testl
iret
in
lret
or
xchg
scas
and
sarl
popf
inc
icebp
sbb
jne
pop
mov
sub
mov
imul
mov
ficoms
loop
add
sub
mov
push
bnd
jecxz
fimull
inc
xchg
test
inc
xchg
or
ds
inc
das
xor
mov
subl
xor
mov
loop
cltd
lea
mov
int3
ja
mov
jo
cmpsl
ds
adc
or
bound
aad
mov
xchg
jle
repz
mov
out
xor
cmp
cwtl
inc
ss
or
rcrl
cwtl
jmp
movsb
adc
icebp
jb
call
mov
mov
pop
stc
repnz
rcr
test
ja
jle,pn
adc
std
adc
das
decl
xchg
cwtl
xchg
add
clc
dec
dec
cmpsb
lds
in
ss
sbb
and
adc
cli
mov
clc
xor
mov
out
and
jns
jne
insl
dec
stos
pop
pop
sar
or
pusha
outsb
les
daa
sbb
fnsave
mov
add
lds
clc
insl
add
mov
popa
cmpsb
mov
std
ret
ss
mov
pop
loop
fmuls
pop
popf
xchg
pop
clc
sbb
sub
sub
das
cmp
movsb
icebp
cmp
mov
mov
and
mov
sub
or
test
add
mov
out
mov
test
xchg
sub
push
mov
lret
int
lahf
push
int3
dec
jmp
stos
cmp
scas
cld
fcoms
ret
mov
mov
test
int
mov
bsr
sbb
aaa
out
fisubrl
inc
stos
lahf
aas
jge
stc
xor
ljmp
add
fisubs
fcoml
scas
fnstenv
dec
and
mov
sub
and
repnz
push
mov
int
sub
or
aam
icebp
sub
shlb
rclb
jmp
xchg
pop
inc
and
mov
fsubl
js
xor
mov
mov
jbe
out
pushl
fs
mov
aam
and
lods
lret
xor
lock
fisubs
in
mov
push
movsl
inc
and
mov
lret
stc
add
loope
mov
cltd
into
mov
cli
dec
mov
repnz
cmp
ret
sub
call
icebp
sbb
xchg
fidivl
call
or
xchg
loope
inc
cmp
adc
repnz
fcmovnu
or
and
popa
sub
repz
dec
jns
loop
mov
int3
or
inc
push
cld
fnstcw
mov
les
or
repnz
jbe
test
sbbb
repnz
xor
popf
arpl
subl
dec
xor
jge
addb
mov
and
xchg
inc
mov
jl
xor
ja
call
rorl
mov
or
int3
push
cwtl
cmp
bnd
xlat
scas
loopne
or
mov
stos
test
les
dec
orb
mov
sub
add
mov
stos
xchg
into
popa
imul
mov
stos
pushl
sub
xchg
insb
popf
push
rcrb
int
nop
or
data16
mov
fwait
mov
xchg
into
and
mov
mov
mov
lret
and
ret
add
repz
out
dec
mov
ficomps
sub
fidivrs
cmpsl
and
stos
rorl
jno
ficoms
add
jbe
sub
pop
mov
inc
inc
jbe
jge
inc
mov
pop
jge
xor
xor
jb
scas
gs
movsl
mov
jg
inc
stos
daa
aad
sbb
notb
mov
lcall
sub
outsb
xchg
addr16
and
adc
mov
test
mov
fistpll
sub
push
dec
shrb
or
in
dec
or
hlt
cmpsb
test
mov
or
mov
ret
in
ficoml
test
enter
mov
xchg
push
mov
in
adc
mov
sub
pop
pop
xor
and
add
lret
js
jecxz,pt
xor
pop
out
scas
clc
mov
xor
xchg
iret
shlb
add
ja
mov
sub
sahf
loop
lods
push
and
out
add
orb
sti
and
add
scas
lods
ret
icebp
or
popf
les
clc
cltd
adc
lods
or
jg
jb
pop
dec
incl
fistpl
aad
mul
sbb
adc
xchg
ss
mov
repz
jb
mov
mov
ret
fcomps
fiaddl
jmp
stos
mov
mov
aaa
jle
sarb
sti
add
jns
xchg
push
xor
dec
repz
fwait
pop
ljmp
test
inc
vpmulhuw
push
mov
jge
or
sahf
in
xlat
shl
mov
sbb
or
fidivrl
jle
loopne,pn
cs
imul
mov
flds
mov
fwait
mov
cmpsb
sub
add
fcom
xchg
jns
sbbl
out
addb
fsubr
jle
inc
stos
and
add
sbb
stos
imul
push
je
sbb
mov
or
lahf
mov
mov
mov
repz
or
and
cltd
dec
pop
mov
jno
xor
pop
hlt
loop
cmc
iret
out
out
cmpb
rcl
mov
test
add
mov
scas
mov
mov
lods
and
mov
add
xor
add
xor
add
xor
dec
sub
jne
loop
iret
aam
add
inc
push
test
es
ja
dec
xorl
jb
xlat
xor
or
jae
rorb
add
out
lods
pop
and
les
cwtl
fisubrs
addl
mov
inc
icebp
inc
push
scas
xor
into
cmp
dec
push
mov
mov
mov
inc
push
inc
sbb
into
or
pop
movsb
sbb
mov
or
inc
lock
mov
jg
mov
and
cmp
sub
push
dec
divb
mov
inc
mov
sub
and
imul
or
dec
add
cmp
sahf
pop
ja
cs
and
outsb
adc
mov
call
push
adc
dec
sbbb
imul
xchg
rsqrtps
push
jp
and
stos
inc
incb
pop
or
add
repz
cli
dec
mov
dec
xchg
ror
jmp
cld
sbb
mov
xor
add
inc
cli
sub
aaa
pop
stos
enter
fstl
jb
inc
inc
repz
mov
stos
mov
sub
mov
jge
enter
mov
call
sub
movsb
repnz
mov
jno
mov
push
leave
int3
fisubs
sbb
fstl
popa
repnz
pop
mov
mov
pop
cmpsl
adcb
ja
lock
daa
dec
inc
sub
inc
repz
cld
psrlw
loopne
inc
adc
iret
cmp
pop
sub
dec
jb
jg
inc
mov
xchg
data16
test
pop
sbb
mov
lock
aad
inc
ss
mul
pop
loop
gs
in
add
call
push
cmc
andb
jge
popf
cmc
add
out
add
mov
inc
jmp
xchg
xchg
jp
or
shl
xchg
loopne
pop
sbb
lock
aam
enter
adcb
inc
out
mov
jns
lcall
bound
sub
dec
data16
pop
add
shll
in
fadd
and
outsb
loop
movsl
mov
push
cmpsl
push
lods
ljmp
cltd
out
sbb
or
and
inc
sub
inc
jmp
ss
arpl
mov
cs
ljmp
add
ss
and
cmp
in
sahf
shll
andb
sub
push
fdivr
repnz
jns
mov
jmp
inc
inc
xchg
push
inc
mov
and
cmp
outsb
insb
mov
data16
cmpsl
mov
jne
mov
push
cmp
repnz
ret
cmpl
out
xor
mov
dec
movl
cltd
push
in
xor
dec
or
sub
les
test
aad
and
xchg
add
hlt
push
mov
data16
and
fcoml
repz
dec
push
jae
cld
ret
xor
addr16
cli
faddp
inc
movsb
lret
push
jg
mov
push
out
jae
xchg
in
push
or
mov
jmp
lds
pusha
ja
lea
adc
mov
shll
popf
sar
mov
scas
pusha
inc
pop
xchg
jae
out
lods
shl
push
jno,pt
inc
sub
push
inc
arpl
cmp
repz
fucomi
icebp
push
add
add
out
inc
aaa
push
push
adc
aad
pop
loop
int3
dec
into
hlt
xorl
lock
jecxz
in
out
cmp
or
lret
pop
repz
pop
dec
inc
xchg
inc
roll
adc
mov
jecxz
in
xchg
inc
loopne
xchg
mov
out
push
std
shl
lret
mov
mul
shll
xchg
jmp
dec
and
icebp
adc
pusha
push
nop
shll
cltd
mov
je
xchg
mov
rcll
inc
ds
dec
in
fsubl
xchg
loopne
xlat
aas
cmp
ljmp
mov
mov
ret
decb
jo
inc
mov
mov
in
lret
cld
aaa
stos
shll
dec
in
loope
cs
mov
pusha
xchg
test
mov
pmaxsw
mov
movsb
popa
xchg
pop
fsubrl
js
aam
pop
or
shl
aad
loop
lods
sub
loopne
add
jae
pusha
adcl
xchg
aaa
cwtl
cwtl
mov
jnp
in
outsl
jbe
and
enter
mov
pop
mov
or
repnz
fisttps
dec
pop
push
mul
mov
adc
sub
in
push
int
pop
in
stos
imul
jle
scas
add
push
adc
movb
jg
and
xor
cmp
xchg
addl
mov
cmpb
xor
sub
add
adc
adc
adc
or
dec
outsb
mov
xor
or
fcomps
push
jp
inc
test
push
mov
icebp
and
push
push
sbb
adc
repnz
sub
in
lods
add
enter
in
test
arpl
ret
mov
pop
fmul
loop
cmpsb
mov
imul
jle
test
lock
je
xor
repnz
bswap
aaa
mov
call
fs
loop
cli
mov
or
aad
in
in
shlb
sbb
ds
xor
rorl
xchg
movsb
enter
mov
adc
fs
adc
cmp
sahf
fs
push
or
icebp
movsl
lods
sbb
cmc
inc
lock
push
cmc
mov
clc
add
push
into
aaa
les
test
lods
insb
pop
jg
imul
mov
dec
sbb
das
fsubrp
or
dec
daa
scas
xor
xchg
ljmp
jecxz
ljmp
mov
xor
flds
xchg
lret
mov
jle
fldenv
bnd
shl
mov
subl
push
adcl
pop
dec
push
out
lds
xchg
mov
ds
and
xor
lret
mov
mov
pop
mov
jle
adc
ja
lea
jmp
sub
lds
inc
pop
push
add
loop
xor
mov
enter
inc
sarb
cmp
ret
das
movsb
xchg
cmp
jle
inc
adc
imul
scas
ljmp
mov
or
mov
mov
inc
or
jmp
cs
fimull
icebp
fcompl
xchg
in
cmp
add
dec
push
pop
sub
push
push
leave
sub
push
mov
mov
mov
mov
jbe
cmp
or
xor
jbe
std
sub
xor
ljmp
jbe
push
fdivr
shrl
inc
icebp
push
fldt
test
data16
jb
scas
cmpsb
xor
xchg
loopne
lret
xor
add
shll
testb
into
or
cs
pop
add
dec
add
and
cmpsb
xchg
out
cmpsb
fs
xchg
push
jmp
add
jb
ja
pop
icebp
stc
movsb
jmp
jp
std
mov
mov
mov
mov
out
hlt
cli
shll
jno
loopne
gs
sub
jbe
and
or
xor
pop
xor
inc
mov
sub
outsl
mov
sub
add
mov
pop
push
sbb
xor
xchg
test
loope
add
push
test
lret
inc
test
push
fwait
mov
sub
outsl
mov
sub
add
ljmp
call
dec
int3
add
sub
out
scas
shlb
push
and
or
mov
fldt
lcall
xor
xor
aam
sbb
scas
push
mov
loopne
push
fistl
sub
outsl
mov
sub
add
jbe
imul
je
push
data16
jmp
push
jmp
xchg
cmp
xchg
stc
cltd
jmp
addb
icebp
lds
ja
test
jmp
hlt
xchg
push
cs
outsl
fsubrl
shr
sbb
call
sbb
adc
test
out
aas
stos
out
in
mov
adc
jne
mov
mov
loope
add
sub
push
icebp
out
insl
dec
stos
fwait
lock
cmc
iret
push
jae
insl
ret
ds
or
lods
int
in
pop
or
shr
jp
mov
cmpsb
gs
mov
fwait
in
std
inc
in
xor
sub
aas
imul
or
sbb
push
mov
sub
sub
aaa
jbe
test
fwait
dec
jg
xchg
sar
dec
mov
popfw
rcll
shrb
jecxz
ja
scas
subl
lret
or
mov
test
in
sbb
sahf
js
and
in
loope
rorb
and
jmp
call
out
xchg
lret
aaa
mov
dec
cmpsb
out
mov
push
dec
pushf
jge
loopne
inc
jmp
int3
mov
in
or
dec
adc
pop
and
xor
jns
aam
test
iret
aam
js
orb
sti
imul
repz
xchg
cmc
test
ljmp
cmp
je
xchg
aas
inc
std
add
fs
mov
inc
adc
mov
adc
lcallw
lods
push
popa
jecxz
xchg
sbb
and
jmp
mov
add
ret
nop
inc
mov
mov
movsl
mov
sahf
cmc
xorb
pop
leave
mov
mov
bound
into
aas
inc
test
fisubs
mov
inc
or
faddl
andl
xchg
rcll
popf
std
pop
imul
into
mov
les
push
movsl
adc
lods
push
xor
cltd
cmc
xchg
xchg
mov
cmp
mov
inc
rorl
negb
into
bound
out
jp
popf
fisubl
xchg
fdivs
and
fidivl
mov
out
ret
ja
or
pop
lcall
mov
fucomip
scas
mov
fiaddl
add
pop
cmp
and
insl
test
pop
les
repnz
dec
pmaxsw
lds
push
mov
mov
mov
stc
out
mov
add
or
inc
repz
lcall
push
enter
xchg
es
in
cmpsb
cltd
shll
je
mov
insl
daa
les
cmpsb
xor
cmp
pop
insl
out
insb
or
cmp
repnz
int3
dec
lea
clc
test
lds
push
lock
jns
mov
inc
sbb
and
xchg
out
push
and
icebp
loope
fiaddl
fadds
pusha
jmp
xorb
push
fwait
adc
out
inc
xor
clc
or
xor
mov
int
cmc
jo
jmp
dec
out
sbb
hlt
lea
into
shll
in
repnz
and
stos
xchg
dec
repz
inc
cld
sbb
aad
mov
leave
movsb
inc
sarl
mov
pop
sub
mov
stos
dec
cltd
inc
arpl
lret
lods
inc
xchg
adc
in
shr
inc
add
out
mov
xor
lock
out
es
xor
cmp
lods
test
test
and
repz
aaa
lcall
sarl
dec
pop
or
or
pop
mov
jns
cmp
in
js
jmp
loope
cvtdq2ps
push
sahf
out
notb
push
clc
or
lcall
ja
sbb
lcall
or
push
inc
call
leave
adc
notb
cmpsl
xchg
in
xor
pop
mov
dec
ljmp
push
imul
mov
leave
push
xchg
sbb
pop
mov
icebp
mov
lds
clc
pusha
mov
out
mov
in
jg
add
loope
adc
pop
inc
mov
in
fsub
pop
sub
in
les
pop
xchg
jmp
lods
mov
cmp
cmp
cmp
mov
push
fs
dec
dec
xchg
leave
xchg
jge
jno
imul
cmp
jmp
iret
mov
call
and
pop
mov
popf
jge
push
ds
adc
inc
sarb
dec
icebp
xchg
xchg
cmp
das
dec
loop
ret
outsl
push
mov
mov
xchg
notb
shrl
pop
pop
lods
mov
jmp
mov
adc
adc
xchg
dec
cmp
add
sub
adc
insb
dec
insl
mov
cmp
mov
test
lds
test
dec
xchg
pop
mov
add
imul
add
push
or
mov
enter
stc
repnz
xchg
iret
stc
and
insb
adc
push
push
fucom
add
rol
mov
xorl
push
stc
push
jnp
outsl
bswap
iret
mov
lea
in
sub
aaa
push
cltd
scas
mov
arpl
pop
pop
jle
adc
jmp
mov
jle
xchg
cmc
dec
xlat
loop
pop
loope
iret
aam
sub
or
rcrl
sbb
inc
sbb
rcll
xchg
rcl
push
xchg
mov
push
loop
sahf
xor
std
xorb
sub
jbe
ljmp
cmc
pop
cmp
cmpsb
in
push
xor
xchg
addl
popa
mov
cmp
adc
or
mov
dec
leave
call
cwtl
sub
fiaddl
fdivrl
lods
dec
les
xor
andb
push
aas
jbe
mov
mul
or
rclb
jb
mov
sub
sarb
cs
xor
push
inc
out
imul
in
mov
into
cmpsb
cmp
sbb
fs
shlb
test
add
cmpsb
repz
adc
cmp
xor
add
mov
in
shl
mov
mov
out
dec
cmpb
inc
mov
push
jecxz
aas
jg
mov
repnz
lahf
lds
roll
sbb
jmp
and
imul
imull
xchg
icebp
pop
dec
lea
fucom
and
mov
hlt
sub
aas
imulb
cmpb
into
inc
ret
test
addb
iret
xchg
jbe
mov
jns
xchg
arpl
sub
add
sub
add
xchg
xor
les
sti
in
jmp
inc
int3
cwtl
or
test
adc
xor
movsl
dec
lret
and
andb
loopne
imul
fwait
xchg
fsubr
cmpsl
sbb
call
and
mov
add
xchg
mov
push
test
sbb
mov
cmpsl
xchg
mov
pop
lahf
push
push
lcall
fcmovnbe
lret
sub
test
cmpsl
ret
jle
pop
cli
push
add
jnp
or
xor
lahf
sub
sub
out
in
imul
add
lahf
ds
aam
pop
sub
mov
ljmp
cs
xchg
mov
inc
or
dec
fiaddl
dec
mov
add
in
dec
clc
push
insb
das
pop
addb
pusha
ret
dec
clc
xchg
mov
lret
pop
xchg
into
push
xor
cltd
sbb
xchg
or
xor
es
andnps
sbb
mov
cli
sub
or
and
out
into
rcll
fst
mov
xor
pop
mov
mov
xchg
int
lahf
js
lret
mov
jl
pop
fistpl
mov
imul
inc
imul
mov
dec
in
out
repz
inc
cli
mov
loop
xchg
push
rol
mov
and
mov
out
data16
loop
add
shrb
lea
loope
fcomi
mov
rorl
test
divb
lret
cmp
in
ret
push
int3
inc
sbb
cmp
dec
loope
popf
dec
jmp
add
mov
mov
xor
lds
notl
inc
test
leave
dec
aam
push
inc
ljmp
lcall
lods
mov
in
inc
int
mov
out
test
arpl
aam
stc
pushf
fwait
mov
dec
rorb
das
and
fldenv
dec
inc
xchg
xor
or
inc
xor
repnz
jns
loop
sahf
iret
xor
rclb
enter
lahf
popa
ss
decl
mov
push
mov
ljmp
int
push
and
push
sbb
jo
fiadds
call
xchg
mov
cmpsl
push
inc
shll
loope
icebp
push
sub
mov
js
sarl
lds
jne
test
fisubl
pop
mov
lahf
pop
adc
mov
pop
and
enter
std
scas
jmp
inc
add
cmp
mov
loop
aam
push
jno
dec
and
test
mov
scas
sti
dec
decl
in
std
imul
sbb
jge
inc
pop
mov
xchg
adc
movsl
cwtl
imul
scas
leave
mov
outsb
cmp
sub
stos
orb
dec
into
sub
lcall
int
push
nop
movsl
cmp
push
jp
rcr
test
rcll
test
nop
ss
gs
pop
hlt
out
fiadds
sahf
xchg
sub
xor
sub
scas
hlt
cltd
out
ljmp
imul
cwtl
adc
dec
test
push
and
mov
add
scas
lcall
mov
sub
mov
dec
sub
fnstsw
add
rol
mov
shl
in
sbb
pusha
mov
mov
nop
jle
push
jmp
icebp
bnd
and
dec
jbe
jo
jnp
mov
fst
out
and
int3
add
aam
cwtl
int
mov
mov
cwtl
mov
sti
cltd
sbb
mov
cmp
sub
and
loop
nop
sub
mov
jns
lcall
jne
cmp
jmp
mov
lcall
sbb
es
xchg
push
ja
negl
mov
cmp
popa
xchg
ficoml
insb
mov
cwtl
jg
das
xchg
inc
test
pop
mov
in
fimuls
xor
xlat
in
push
mov
testl
mov
inc
mov
mov
jae
cld
mov
test
sub
in
cld
pop
cltd
fs
and
ror
mov
adc
xchg
je
leave
mov
pop
inc
lcall
addr16
es
leave
add
fwait
pop
xlat
aad
sub
in
nop
jp
xor
les
in
cmp
lcall
aaa
in
inc
pop
xchg
test
jge
xchg
mov
insl
cltd
mov
fldenv
je
scas
dec
mov
out
fwait
xchg
cmp
sahf
movsl
inc
adc
test
int3
adc
je
mov
leave
loope
aam
push
les
arpl
and
test
sub
pusha
fisttps
mov
inc
add
pop
push
mov
mov
and
int3
cmpl
shl
shrb
push
ds
out
sbb
sbb
dec
aam
adc
hlt
mov
filds
and
ds
push
pop
call
outsb
sbb
lock
cltd
lahf
negb
movb
scas
sub
mov
xchg
fdivl
es
lret
aad
sar
xchg
and
and
nop
pop
pop
fstps
xor
sbb
push
mov
popl
jo
ficompl
or
push
mov
or
mov
lea
cmp
jle
dec
dec
xor
aam
mov
add
add
mov
fmul
pop
cmc
stos
shll
repz
sub
push
sti
sub
dec
push
cld
mov
scas
arpl
xchg
aad
arpl
in
xor
pop
das
movzbl
mov
mov
enter
cmp
leave
and
jae
cmp
mov
inc
loop
inc
jno
cld
sub
xor
adc
mov
mov
inc
nop
cmp
lds
xchg
insb
lret
jmp
fidivrs
push
movsb
add
jge
ljmp
dec
ljmp
and
into
inc
nop
jne
lret
lret
idiv
aas
pop
testb
cs
cmp
dec
ret
popf
inc
xchg
out
jp
lret
movsb
lret
rol
ljmp
subl
pusha
xor
mov
xor
rolb
les
lods
inc
mov
push
xchg
ret
lcall
mov
jp
mov
cmp
mov
ds
jnp
adc
mov
arpl
mov
cmpsb
int3
dec
xlat
mov
lret
dec
jo
cmc
sbb
add
sahf
mov
repnz
shll
dec
in
leave
pop
xchg
bound
shr
repz
ret
das
imul
pop
cmp
popa
xchg
test
xor
xchg
in
sub
fisubrs
lods
mov
xchg
repnz
mov
push
out
or
sub
rcll
sbbb
leave
pop
mov
or
add
sbb
push
mov
cmp
add
cmp
cmpsb
out
and
mov
out
push
enter
sub
mov
sbb
imul
ljmp
dec
jmp
jmp
sti
outsb
dec
jnp
xchg
stc
call
popf
sub
pop
jp
cmp
cmpsb
fisubs
fiadds
stos
xor
lods
aam
and
xor
push
push
sub
sub
in
enter
cwtl
movsb
loopne
cmpsl
pop
cmpsb
and
and
push
in
dec
inc
loopne
mov
imul
sub
pop
psraw
xchg
les
les
xor
mov
pop
cmp
fimull
enter
into
les
jecxz
stos
cmp
ja
cmpsb
lds
pop
mov
push
push
lret
mov
jl
dec
or
sbb
imulb
cs
mov
jae
nop
xchg
add
lock
mov
xchg
idiv
inc
jecxz
xchg
movsb
xor
pushf
inc
inc
push
pop
scas
and
jns
orb
mov
loope
xchg
nop
dec
popa
int
jae
jmp
not
int3
sahf
in
mov
jl
adcb
sub
mov
lret
das
jle
mov
mov
lods
xlat
mov
int
out
push
mov
adc
loop
sbb
and
mov
xchg
sahf
xchg
fxam
xchg
lea
add
push
mov
orl
sbb
dec
mov
out
int
cmp
jl
push
into
leave
dec
ret
mov
in
gs
jb
adc
xchg
dec
out
add
dec
leave
pop
sub
dec
mov
out
sbbb
loopne
shlb
xchg
mov
out
xchg
pop
sub
add
dec
fs
mov
add
movsb
inc
call
fcomi
insl
int3
dec
pop
sbb
push
movsl
sti
pop
push
push
sbbb
insl
mov
xchg
xchg
inc
inc
dec
sbb
jmp
lcall
ret
push
ret
cmp
pop
xor
xor
mov
xchg
lods
aas
shl
mov
lahf
ds
mov
shrb
or
dec
aaa
cmp
dec
in
loopne
shlb
jns
jne
push
fcmovnbe
std
rorb
loope
lret
inc
xchg
mov
int
mov
push
cltd
xchg
jae
and
inc
jnp
or
in
fdivl
push
ret
into
adc
not
sbb
les
clc
pop
fs
ja
inc
in
clc
in
xchg
add
loope
push
adc
inc
sarb
xor
dec
push
or
test
orl
mov
loop
int3
daa
movb
pushf
mov
leave
nop
pop
mov
sub
xchg
loope
dec
xchg
in
out
insb
mov
popa
popa
jo
gs
jns
js
or
nop
jb
ret
ljmp
lret
outsb
stos
dec
jae
into
inc
dec
push
mov
pop
cmp
adc
and
adc
sub
dec
and
repnz
mov
andl
arpl
repnz
leave
mov
out
cmp
cs
jb
or
nop
push
xor
xchg
negl
xchg
leave
jns
lret
out
cmc
mov
and
popa
ljmp
sub
xchg
jmp
andb
pop
stos
push
jae
into
movsl
dec
mov
lcall
cli
out
icebp
dec
sub
leave
lods
adc
add
jb
jns
rorb
pop
adc
sub
bound
popa
sub
adcl
leave
dec
adc
cmp
adc
sbb
inc
jp
or
nop
push
xchg
and
xchg
hlt
sbb
fiaddl
push
adc
xchg
inc
out
lds
into
ljmp
sub
in
inc
xchg
shr
jbe
roll
movsl
jae
rorl
popf
add
and
subl
imull
xchg
pop
jne
test
arpl
test
pushl
test
sub
mov
pop
loope
cwtl
gs
dec
push
les
mov
xchg
lods
hlt
scas
mov
mov
clc
call
cmp
jmp
stos
popa
xchg
cld
pop
sub
sbbl
jle
jg
mov
popf
push
lret
sbb
lcall
test
fistpl
or
mov
push
push
xchg
inc
sbbl
and
pop
fisubs
stos
shl
outsb
mov
testb
lcall
mov
out
xchg
mov
mov
lret
jmp
pop
movsl
in
enter
out
lods
leave
ror
faddp
add
cmp
ja
mov
call
inc
aad
mov
insb
sahf
mov
adc
imul
loopne
lcall
cld
lcall
xchg
pop
mov
out
test
sub
xchg
in
mov
lds
xchg
xchg
cmc
out
sbb
add
adc
push
rclb
inc
or
jmp
ljmp
fnstsw
jge
into
jae
mov
dec
leave
sub
cmp
adc
xchg
sub
mov
sub
xchg
stos
xorl
cltd
dec
sahf
lods
icebp
inc
shrl
lock
xchg
repz
and
xchg
enter
xchg
pop
ljmp
dec
mull
leave
or
rcrl
call
jmp
mov
orb
nop
mov
sub
push
hlt
in
stos
insl
jae
into
jno
push
inc
arpl
mov
and
push
loop
test
pop
mov
cmp
xchg
xchg
movsb
push
push
sahf
ret
jecxz
mov
pop
push
lock
ljmp
cmp
xchg
and
adc
loop
xor
cmp
ds
lods
cwtl
lret
or
add
dec
pop
jnp
jge
mov
adc
pop
dec
mov
adc
mov
lods
mov
jno
int3
fs
gs
push
movsl
jmp
orl
scas
mov
mov
loope
sub
roll
adc
lret
xchg
mov
pop
je
jg
fwait
pushf
int3
leave
in
pushf
add
nop
sarb
sbb
scas
xchg
daa
mov
jp
clc
nop
cwtl
hlt
adc
fsubrl
scas
pop
hlt
repz
sbb
mov
mov
fldpi
fists
mov
fnstcw
ds
mov
mov
mov
xchg
mov
add
pop
xchg
imul
jge
xchg
cs
xchg
fcmove
push
cmp
hlt
cmpsb
cltd
sarl
cmp
hlt
call
fimuls
adc
cmpsb
fldt
jbe
xor
cld
or
cmp
or
xor
cmp
dec
js
into
scas
add
or
sub
mov
in
negl
data16
cwtl
out
pop
xorl
push
repnz
repnz
add
cmp
cmpsl
dec
cli
or
mov
xchg
ds
lods
popf
push
xchg
cmovge
xchg
mov
frstpm(287
pusha
icebp
scas
and
fisttps
fstps
mov
rcll
mov
jecxz
mov
or
adc
pop
test
add
inc
pop
and
inc
out
stos
fnstsw
jmp
adc
jmp
xlat
pop
xchg
lcall
repz
jbe
loope
xchg
cli
nop
lret
pop
popa
fwait
xchg
inc
mov
jg
adc
testb
add
rorb
shrb
repz
push
inc
lock
xchg
fst
orl
iret
xchg
sub
ss
shll
cmp
jno
pop
js
xor
mov
adc
jne
and
jb
hlt
out
inc
test
fcompl
rorl
add
movsb
sub
mov
mov
icebp
xor
test
out
and
mov
inc
pop
popf
mov
loop
pop
rolb
inc
push
mov
into
in
popl
sarb
push
adc
pop
fisubrs
out
mov
jno
fnstenv
push
dec
mov
sbb
push
and
addb
sbbl
loope
xchg
add
jp
xchg
jl
popa
call
mov
mov
jge
in
cltd
sub
int
sbb
xor
cmp
les
and
push
out
xor
movsb
ficomps
xor
sub
aad
mov
lea
jmp
sub
out
movsb
nop
adc
lods
xchg
stos
sub
jne
push
int
rcrl
fidivs
pop
imul
fisubrl
add
pop
or
cmpl
fcmovb
insl
jne
pop
push
push
push
cmp
sti
pop
mov
gs
jae
arpl
mov
cmp
sarb
pop
sti
xor
notb
mov
jge,pn
ficoms
cmovnp
fs
shll
lods
loopne
xlat
pop
push
shrl
sahf
jge
xchg
nop
adc
cmpsb
adc
push
lret
mov
mov
loop
hlt
cmp
jmp
shl
mov
dec
into
xlat
mov
push
mov
xchg
cmpsl
and
dec
stos
push
repz
cli
movb
mov
sahf
out
add
aam
xor
mov
jns
adc
enter
cmp
aas
pop
mov
jns
push
xchg
push
pop
iret
loope
xor
jne
insl
dec
pushf
inc
outsl
jle
sub
int3
dec
mov
push
ret
daa
aad
and
jne
mov
repz
jmp
sbb
adc
adc
int3
or
inc
cmp
push
mov
mov
imul
js
iret
adc
les
inc
sahf
add
rcr
mov
xchg
mov
shl
popf
stos
test
outsl
fsubr
jb
add
test
or
repz
shr
pusha
outsl
pop
out
cwtl
add
adc
mov
pusha
adc
xchg
data16
adc
dec
xchg
sbb
pushf
fld
add
cmp
in
sahf
loope
xchg
adc
mov
hlt
dec
iret
mov
js
out
loopne
mov
jg
adc
scas
daa
pop
cwtl
mov
dec
test
pop
lret
lock
fst
add
rcrb
mov
xor
or
jecxz
adc
ljmp
mov
cli
out
pop
insb
leave
out
xor
jo
pop
sub
jns
push
inc
jns
fldl
aaa
push
xchg
mov
ret
aaa
add
pop
xlat
pop
xor
insb
jmp
cwtl
call
dec
loope
inc
int
pop
add
xchg
pop
lcall
mov
outsb
ret
sub
xchg
xlat
push
mov
in
push
mov
or
lret
pushf
setle
adc
mov
mov
out
dec
mov
mov
cld
dec
add
push
jo
mov
mov
decl
sub
mov
cmc
fimull
sbb
add
popf
cmp
inc
pop
rorb
push
fsts
mov
sbb
es
push
and
cli
xchg
lds
sbb
dec
ja
daa
divb
xor
push
mov
in
cmp
sub
mov
jb
sbb
ljmp
iret
repnz
shlb
aaa
jmp
dec
cltd
sub
cmp
movsl
jcxz
lea
adc
mov
push
xor
loop
test
cwtl
xor
and
add
ja
push
roll
inc
test
xlat
lods
and
nop
testb
and
aaa
insl
fs
dec
orl
xchg
mov
ret
push
xchg
pushf
cmp
or
sbb
test
adc
dec
mov
es
out
aam
push
or
leave
and
in
cmpsl
mov
inc
scas
cmpb
push
jno
loopne
mov
lods
pushf
xchg
xor
or
mov
rcll
xchg
rcll
jb
leave
out
push
mov
add
into
cmc
push
loop
cld
cmp
arpl
gs
cmp
push
pop
imul
pop
test
push
mov
popf
cmp
popa
jmp
lahf
int3
cmp
push
inc
test
out
mov
mov
mov
repnz
sti
fwait
jecxz
push
fstpt
and
mov
mov
xchg
dec
insl
dec
sub
jae
push
push
xor
stos
sbb
bound
or
mov
pop
sahf
clc
fldl
add
iret
mov
repnz
and
mov
lret
mov
push
add
cmp
lahf
xlat
je
sahf
or
in
pop
pop
mov
inc
cld
push
sub
test
lret
dec
sahf
xchg
pop
cwtl
stos
push
inc
es
mov
xchg
cmp
insb
inc
lret
aaa
mov
lret
stos
jmp
adc
sub
ret
inc
jbe
jmp
ljmp
push
inc
push
data16
jge
push
test
adc
rcrb
clc
pop
cld
xor
adc
pop
jle
or
mov
iret
sti
fisttpl
ret
sbb
je
add
imul
cmpsb
xchg
dec
sbb
das
cmpsb
push
sbb
xor
mov
push
cmc
sub
dec
xchg
xchg
aas
test
les
mov
int
xchg
mov
test
fwait
les
inc
out
inc
dec
jne
movsb
cmpsl
das
es
les
sbb
push
shll
pop
inc
mov
inc
repnz
xor
mov
icebp
loope
lds
int
fidivrl
jne
pop
sub
xor
add
lcall
adc
lea
jne
mov
xchg
jmp
std
mov
cs
andb
les
and
pop
dec
lds
or
fnstsw
and
shlb
movsl
test
push
aam
xor
sub
dec
lock
shrl
lcall
in
cmc
mov
mov
cld
push
dec
outsb
out
xchg
and
xchg
adc
xchg
push
ljmp
xor
cmpsb
call
popa
into
test
inc
les
enter
mull
in
out
cmp
pop
int3
out
jno
adc
mov
repz
push
das
jae
cwtl
shrb
adc
mov
aas
lcall
rclb
mov
mov
cmp
loopnew
icebp
dec
or
loop
lock
out
xor
les
jb
fmulp
rcll
fwait
pop
jp
incl
fsub
adc
int
xchg
mov
cmp
jmp
fcmovne
les
stc
loopne
out
jmp
mov
stos
adc
push
jno
pusha
in
sbb
sti
out
jb
lret
inc
add
cmp
xchg
lahf
and
je
enter
xchg
call
sub
inc
in
cli
and
or
mov
ds
loop
adc
outsl
loop
sbb
push
inc
mov
mov
mov
push
xor
insb
in
stos
inc
pusha
sbb
loop
add
pop
pop
adc
arpl
or
outsl
xchg
popf
jns
mov
mov
mov
add
and
push
or
pop
xor
mov
daa
aaa
jae
lcall
and
mov
stc
pop
dec
ja
pop
cmc
or
and
jl
sub
xchg
lock
xor
lcall
xor
sbb
repz
sub
into
and
and
xor
nop
into
in
adc
js
xor
xorb
and
xor
or
test
or
or
sarb
xchg
mov
mov
jmp
shl
cmpsb
mov
sbb
mov
mov
aad
add
sahf
adc
xlat
loope,pt
add
lret
xchg
or
nop
cmpl
xor
ret
push
lock
and
mov
and
rcrb
adc
fldcw
xor
add
nop
push
rorb
push
pop
mov
lock
xchg
es
adc
xor
inc
sbb
fs
repnz
repz
je
dec
jecxz
push
lcall
cmpsl
sub
xchg
push
mov
das
mov
ret
nop
ret
push
sub
jp
or
lods
ret
aas
xchg
call
in
mov
sub
mov
ljmp
test
sub
jg
divb
or
add
cmc
jb
dec
mov
lcall
inc
xchg
add
jge
loope
or
out
mov
out
lcall
repnz
pop
mov
push
rorb
es
enter
or
out
and
xlat
adc
adc
faddl
push
and
int3
lea
subb
jbe
les
nop
sub
test
pop
adc
popf
and
cwtl
ljmp
xorl
nop
jp
ljmp
xchg
add
mov
cmc
mov
xchg
jb
out
xor
xchg
xchg
or
xchg
fsubrp
cwtl
repnz
rolb
inc
nop
fcoml
push
adc
push
xchg
jmp
test
add
jne
test
xchg
stos
loope
shl
repnz
cmpsb
hlt
shll
lret
fisubrs
cmp
out
or
js
int
lods
xor
fsts
daa
cmc
mov
inc
xchg
xor
sahf
push
stos
add
cli
and
in
out
into
bound
loop
popf
rcrl
testb
push
int
mov
push
lock
xor
adc
and
jae
xchg
sbb
outsb
xchg
mov
lret
and
or
inc
pop
mov
mov
rcrl
pop
hlt
shlb
rclb
mov
push
pop
jp
xor
mov
lcall
cmc
sbb
stos
mov
rclb
xor
sbb
repnz
cmp
push
xchg
jge
lret
and
xor
mov
shll
loop
inc
mov
lds
test
rolb
arpl
jmp
shrl
fisubrs
and
ds
sub
mov
push
clc
loope
jo
aad
push
sub
mov
xorl
inc
sub
mov
cmp
ret
loope
or
xchg
mov
mov
push
shr
cltd
stos
push
in
shrl
ret
lods
loope
mov
les
ret
rorl
pop
inc
mov
addl
in
and
hlt
mov
test
enter
jge
in
test
cmp
in
je
lcall
mov
or
sti
shlb
and
add
inc
in
repnz
out
hlt
mov
cs
rorl
sub
mov
in
bound
mov
inc
mov
inc
in
lcall
stos
notb
in
filds
or
lcall
ljmp
push
stos
jb
imul
mov
gs
shrb
imul
push
push
fwait
ret
mov
add
add
xchg
mov
negb
mov
cmp
and
jle
lods
aam
cwtl
fdivs
mov
into
adcl
into
dec
xor
jp
fwait
and
dec
pop
fs
in
fisubrl
in
xor
inc
fs
shr
jmp
vpsrad
cmp
in
xchg
imul
cli
pop
mov
out
std
mov
mov
mov
mov
mov
cld
mov
test
add
in
sbb
icebp
sub
testb
or
xchg
sub
jge
xchg
jmp
popa
fdivs
ljmp
jmp
dec
or
repnz
mov
loop
stc
sahf
dec
xorl
xor
les
or
jne
add
xor
inc
jecxz
bound
enter
sub
xchg
popa
jmp
jp
sbb
into
repnz
fwait
orl
stos
repnz
pop
repnz
jge
movb
push
das
fstl
dec
ror
and
gs
jne
stos
add
loope
mov
std
hlt
mov
lea
sub
icebp
test
mov
aad
mov
ret
xchg
mov
or
imul
adc
stos
dec
mov
loop
test
mov
xchg
test
fisubrl
dec
inc
xor
lds
aam
mov
push
push
push
leave
mov
imul
add
jno
sub
test
sub
or
mov
xchg
sub
inc
adc
push
stos
or
int
cmp
ja
test
hlt
ret
jb
pop
popf
push
mov
test
stos
outsb
mov
jge
rolb
mov
and
jae
into
inc
dec
push
jge
jp
gs
inc
sub
dec
enter
xchg
std
out
add
cmp
and
lret
movsl
adc
std
mov
and
repnz
orb
hlt
lcall
lds
xchg
rcll
roll
push
xchg
add
push
mov
stos
loop
push
add
cltd
dec
stc
scas
sub
popa
mov
addl
cs
fnstcw
add
cmpb
xor
dec
dec
sub
cmp
mov
sub
or
xor
mov
movsb
into
jp
mov
xchg
adc
pop
add
and
testb
mov
out
xor
pop
xor
mov
cld
or
add
aad
fwait
mov
cmpsb
test
imul
repz
sti
or
xor
cmp
mov
push
add
dec
mov
mov
icebp
adc
cmp
dec
adc
int3
cmc
insl
xchg
fstpl
outsb
mov
pop
mov
xor
out
mov
mov
imul
je
push
divb
fisttpll
lahf
mov
lock
in
pop
xor
pop
cmc
jp
push
mov
cs
and
mov
cwtl
mov
bound
std
shlb
mov
sbb
lods
or
add
mov
jle
push
pop
test
pop
nop
mov
iret
mov
inc
cmpsb
xor
or
rclb
mov
and
cmpsl
push
xchg
nop
hlt
xor
mov
fistl
xchg
frstor
mov
inc
je
scas
notb
or
inc
add
sub
sti
lods
stos
and
loopne
push
ds
jno
push
mov
mov
loope
out
cltd
push
mov
je
cld
or
pop
adc
ret
out
dec
jno
pop
popa
sbb
push
sti
hlt
pushf
inc
cmp
iret
mov
adc
ret
rorb
fnstenv
jo
jno
cmp
cmp
add
mulb
mov
sub
jmpw
fstpt
loop
jbe
cltd
in
inc
es
rcrb
mov
cld
das
mov
xchg
xchg
inc
icebp
jb
jmp
stc
mov
pop
sbb
push
pop
stc
pop
fisubrl
mov
jno
push
popl
mov
inc
stos
jl
sahf
sti
sbb
jns
rcll
dec
xor
cmc
fdivr
pop
mov
mov
add
and
xor
or
push
inc
fnstcw
jne
iret
enter
in
shl
outsl
aaa
into
inc
add
pop
jo
sbb
sahf
add
xor
in
scas
sarb
icebp
cmp
push
dec
xor
pop
outsb
add
hlt
dec
mov
lock
icebp
xchg
mov
jge
add
outsb
lea
repnz
nop
ss
pop
cli
cmp
shr
in
nop
cmc
orb
rcrb
cmpsl
mov
inc
imul
push
push
push
add
inc
mov
hlt
mov
mov
add
jg
mov
xor
je
pop
jmp
scas
sub
test
repz
mov
push
imul
sti
cmp
inc
stos
dec
or
ljmp
ja
cmp
ds
mov
