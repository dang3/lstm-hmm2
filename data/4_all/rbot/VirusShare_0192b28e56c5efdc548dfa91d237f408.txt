lahf
xor
push
aam
cmpsl
mov
sub
nop
fnstsw
cmpb
lahf
xchg
mov
sub
jno
cmpsb
or
and
jge
fwait
mov
mov
and
xor
jl
dec
es
add
lods
mov
mov
fisttps
push
mov
loope
enter
sub
clc
and
and
xor
daa
sub
pop
xchg
inc
or
aas
sub
mov
adc
in
xchg
cmp
fs
push
adc
jno
andl
sub
adc
sub
mov
js
pusha
xchg
into
sbb
add
and
mov
jns
cmpb
stos
jecxz
cmpsl
adc
sub
jbe
out
popf
out
pushf
adc
xor
out
jns
daa
dec
mov
and
dec
jge
aad
cmp
xchg
movsb
and
dec
mov
ss
cmp
mov
xchg
repz
and
enter
pop
sbb
inc
decb
sbb
mov
cli
jmp
xchg
movsl
ds
sub
and
call
and
enter
sbb
mov
call
pop
shl
rcrl
mov
xor
icebp
inc
mov
mov
cltd
psraw
fwait
adc
mov
xor
sti
pusha
push
into
jp
mov
js
mov
mov
ficoml
sbb
call
and
insl
sbb
movl
push
fsubs
shl
mov
xor
sbb
mov
and
jae
mov
and
or
cmpsl
or
and
daa
cmpsl
scas
movsb
or
xchg
cmp
dec
sub
sub
jns
jns
jge
adc
packsswb
pop
push
jb
add
imul
or
adc
sub
es
pop
jle
jecxz
repz
ss
sub
leave
push
mov
push
aaa
jb
push
subb
push
loop
jnp
sbb
cli
mov
out
add
ja
test
mov
ss
pop
mov
leave
jns
mov
int3
clc
lret
xor
sbb
sti
mov
push
pop
mov
inc
loop
mov
push
mov
add
jno
dec
in
push
push
movsb
in
or
jg
pop
std
rcll
sub
jbe
add
enter
pop
cmp
ret
repz
or
add
movsl
pop
adc
in
dec
sti
push
xor
adc
sub
mov
push
cld
jge
stos
mov
xor
ret
icebp
push
pop
ja
mov
dec
aam
adc
cmp
cmp
xchg
test
test
mov
mov
bound
push
dec
adc
and
xchg
sub
inc
jl
sub
xchg
sbb
push
adc
clc
and
mov
cli
adc
repz
shr
sbb
inc
jge
cs
cmp
in
and
sub
popf
xor
xor
popa
fistps
jbe
daa
rorl
jnp
addr16
push
fdivl
stc
cmp
loopne
out
lea
inc
jbe
in
mov
or
neg
lds
sti
test
icebp
dec
les
mov
test
dec
mov
jg
or
cmp
jns
cmp
or
push
push
ja
adc
xor
xchg
rcrl
xchg
mov
or
mov
xchg
inc
aaa
aas
jle
mov
lahf
jecxz
loopne
add
and
sbb
enter
or
in
jbe
cmp
call
in
push
push
sarb
mov
jge
aaa
pop
jge
es
mov
fs
and
insl
xlat
and
das
enter
mov
sub
leave
push
fsubrl
ret
jnp
xor
sbb
out
fcom
cli
ret
and
rcrl
sti
mov
jno
xchg
loope
xorb
push
push
xor
out
xchg
lds
inc
adc
xchg
in
jge
lahf
into
leave
in
cwtl
in
pop
icebp
and
and
cmp
jo
add
pop
orw
mov
and
loopne
cmp
js
jne
mov
in
in
inc
or
pop
pop
aaa
mov
sbb
jge
es
push
add
cmp
or
sub
sub
push
loopne
push
pop
les
jg
ror
daa
loopne
pop
pop
and
loope
adc
add
or
push
push
dec
inc
movsb
cmp
mov
and
or
pop
sarb
pop
mov
das
dec
xor
repz
iret
aad
test
sub
les
xchg
or
xorl
test
dec
pop
fnstcw
rclb
add
leave
pop
fldl
inc
dec
dec
and
dec
out
ljmp
xor
push
push
xchg
lods
pop
pop
sub
aas
xchg
cmp
inc
jle
sbb
pop
pop
push
add
ljmp
inc
les
pop
iret
mov
pop
mov
add
xchg
sub
loopne
es
jp
sbb
sub
or
sub
jmp
xor
adc
out
adc
je
in
fiadds
and
inc
test
sub
je
fmull
lock
xchg
shlb
fisubl
push
mov
mov
inc
push
or
mov
jmp
and
cli
fmuls
ret
lret
push
test
mov
in
int
fs
ss
and
cmp
mov
mov
xor
add
ror
test
test
aam
mov
lret
jmp
xor
mov
sub
pop
test
xchg
clc
dec
and
sbb
pusha
dec
cmp
aaa
sti
adc
dec
push
fisttpl
mov
sbb
adc
adc
sub
addb
adc
unpckhps
loopne
mov
mov
push
and
cmc
test
testl
neg
mov
test
cmp
mov
lret
xor
jnp
int
lock
sti
jne
adc
sbb
cli
xchg
test
sub
xor
inc
and
fdiv
mov
pusha
xor
sub
shlb
mov
repnz
sbb
nop
shlb
mov
cmp
xchg
sbb
jo
popa
sub
test
ss
scas
mov
fmul
pop
aam
enter
mov
push
pop
cwtl
adc
fstpt
mov
push
js
fcoms
xchg
sbb
jle
adc
adc
and
repnz
xor
aaa
xor
sahf
in
out
or
pop
jmp
shrb
sub
mov
ja
push
or
jns
ret
xlat
adc
imul
ficoms
inc
imul
lret
ja
push
dec
leave
xchg
pop
cli
mov
sub
cmp
pop
adc
out
sub
inc
add
dec
es
xor
das
ljmp
xor
mov
orb
and
xchg
and
pop
dec
dec
jecxz
into
out
jne
jl
mov
sub
mov
jns
adc
xchg
cmp
dec
mov
inc
aam
repz
mov
stc
adc
sub
popf
iret
popa
imul
jp
andb
popa
daa
lret
icebp
and
mov
inc
push
lock
dec
bound
sub
in
pop
outsl
loope
pop
mov
inc
int3
leave
aaa
mov
mov
lahf
dec
pop
mov
mov
xchg
leave
inc
fnstenv
aam
cmp
into
movsl
fldt
mov
adc
movsb
test
cmpsl
cmp
mov
mov
mov
out
mov
loop
daa
pop
mulb
xchg
jl
xor
push
lcall
sub
mov
aas
sahf
call
mov
fldt
jo
addr16
fistl
mov
sub
fisttps
pop
push
dec
inc
jno
shrb
test
popa
fnstcw
push
stc
test
fsubl
jns
cld
fwait
sub
enter
cmp
pushf
mov
sbb
aam
ss
push
mov
xchg
cmp
push
imul
loopne
in
or
int3
and
dec
jns
jmp
into
call
push
leave
jbe
mov
les
shrb
es
adc
mov
sar
insb
push
mov
xorl
mov
insl
filds
ret
ja
push
js
notl
push
divb
sti
test
mov
adc
adc
mov
insb
jns
imul
mov
or
mov
iret
mov
xchg
and
xlat
fwait
dec
test
add
shrl
sbb
cmp
dec
adc
nop
popf
sub
pop
leave
das
pushl
or
movl
xlat
js
mov
and
subl
xlat
fidivrl
aam
dec
add
adc
add
bound
mov
stos
pop
sahf
cwtl
mov
and
bound
cmc
jle
repz
inc
xor
test
test
sub
cld
mov
mov
test
inc
nop
repz
sub
gs
jae
inc
test
stos
xor
mov
in
ficoms
mov
pop
mov
sub
add
imul
mov
mov
fwait
and
mov
lock
sahf
jmp
dec
push
test
aas
mov
mov
cltd
sub
loopne
mov
jne
mov
outsb
push
and
xorb
cmpsl
lcall
adc
sub
popa
in
out
adc
jg
mov
repnz
popf
dec
rol
sbb
sub
dec
imul
adc
and
sahf
jg
add
pop
cmp
bound
and
and
mov
out
xor
and
xchg
jae
and
sbb
mov
xchg
adc
mov
sub
dec
adc
pop
jecxz
mov
sbb
or
dec
popf
fsubrs
or
dec
push
mov
xchg
adc
lods
test
sub
adc
clc
xchg
jnp
loop
push
cmpsl
mov
mov
cmp
icebp
ja
adc
call
das
add
ja
fisttpll
mov
nop
xchg
mov
rcl
xchg
and
pop
or
jnp
movsl
mov
bound
inc
fisubrs
hlt
cmpsb
and
in
add
leave
add
xor
shlb
sub
je
out
sbb
lret
enter
and
mov
jbe
jmp
push
cmp
orw
aam
push
repnz
jne
mov
mov
and
ret
stos
or
andb
lahf
adc
pop
mov
dec
sub
sbb
inc
and
adc
ds
sub
mov
loopne
loopne
pop
repz
mov
cltd
cmp
mov
mov
pop
fcomps
inc
fsubr
rorl
shll
jl
in
xchg
and
cmp
adc
xchg
jecxz
fcomps
test
cmp
mov
sub
sbb
adc
sbb
sub
call
popf
add
loop
add
fucomi
pop
adc
test
xor
pop
jge
insl
sbb
mov
dec
bound
shll
dec
cmp
cli
cmp
pop
lahf
sub
mov
xor
clc
add
cmp
adc
fwait
and
lock
lods
lea
and
inc
adc
push
enter
adc
pop
ret
cmp
pop
sub
and
daa
test
inc
adc
sub
pop
daa
jmp
xor
imul
out
xchg
lret
cmp
in
dec
int3
insl
sbb
cmp
es
cwtl
mov
cmpsb
cld
cmp
inc
jbe
mov
mov
and
mov
jbe
aaa
and
aam
in
push
adc
mov
pop
push
int3
dec
xor
ja
sbb
mov
push
aam
push
clc
cmp
rolb
mov
test
push
push
inc
xor
dec
lcall
bnd
aaa
test
and
out
push
rcrl
loop
out
arpl
cli
stos
xchg
call
insb
add
test
lcall
jae
test
in
jle
mov
push
pushf
mov
enter
sbb
jns
sub
inc
int3
shrb
sub
push
push
test
idiv
clc
jno
adc
cmp
aas
jl
pushf
bound
mov
pop
mov
popf
pop
mov
xchg
sbb
cld
test
jle
mov
and
xorb
and
pop
nop
jmp
xchg
sti
pop
mov
data16
jo
nop
aad
rcrb
iret
fwait
xchg
inc
into
sbb
mov
sbb
rcrb
aaa
std
and
fsts
out
push
je
or
xorb
cmpb
jns
subb
daa
add
lret
stos
fistl
lods
cmp
sub
dec
lcall
out
cmp
jecxz
xor
adc
push
gs
sub
xlat
cs
mov
pop
sbb
inc
clc
out
div
jecxz
jo
pop
jno
dec
sahf
jmp
push
aas
mov
out
insb
fcmovnu
mov
sub
call
or
inc
lret
mov
fidivrl
test
jns
into
mov
lds
popf
xor
xlat
dec
cmp
xorb
mov
cli
mov
ljmp
xchg
push
sub
add
inc
add
push
in
xchg
or
loope
cmp
je
sub
jns
or
in
pop
jbe
fcomps
dec
test
daa
lods
enter
in
fwait
mov
fadd
push
and
jg
je
push
ret
lret
sub
push
lret
dec
jne
push
jae
test
aad
and
and
pop
iret
mov
aad
cmp
test
cmp
and
jp
mov
enter
jnp
int
stc
jl
seta
lea
xchg
cmp
mov
adc
add
test
cmp
sub
mov
jmp
pop
daa
or
fs
dec
roll
and
sub
lods
and
sbb
mul
cmp
stos
loope
sub
cmp
and
mov
data16
into
in
mov
cmp
pop
fwait
xlat
sub
mov
adc
shrl
fxam
and
leave
movsl
fnstcw
enter
fcoml
adc
and
mov
aas
sti
icebp
xchg
pop
jb
mov
jb
xchg
or
adc
pop
mov
arpl
pushf
jns
dec
xchg
jge
clc
mov
and
pop
loopne
int3
sahf
rcrb
in
loopne
and
mov
enter
into
pop
sar
out
sbb
mov
xor
push
movsb
mov
enter
mov
xor
and
adc
and
leave
rcl
cmp
xor
add
mov
scas
outsb
lock
add
sbb
outsl
or
cli
fistps
pusha
and
arpl
and
scas
adc
jb
mov
lret
addb
sub
shlb
lahf
add
sbb
and
insl
out
mov
add
pop
daa
stos
mov
bound
pop
xor
loop
push
sahf
jecxz
xor
and
jo
add
pop
mov
mov
call
dec
push
mov
outsb
shrb
mov
lret
int3
mov
loope
sahf
fbstp
dec
jecxz
add
loop
add
fnsave
test
and
loopne
lret
sub
sbb
out
and
leave
sti
lods
pop
sar
adc
cmp
mov
enter
mov
cmp
loop
mov
and
out
sbb
cmp
push
aaa
push
cmp
xchg
adc
mov
mov
aaa
lods
sbb
stc
mov
pop
out
mov
xchg
ljmp
mov
js
loopne
pop
xor
movsb
mov
sbb
int3
sbb
cli
push
inc
push
fisttps
sbb
out
scas
xchg
hlt
ja
cwtl
popl
adc
pop
movsl
push
pusha
stos
jge
std
sub
jg
fdiv
mov
sub
inc
cmp
jnp
subb
adc
add
xchg
adc
aaa
mov
push
jb
lahf
movsl
stos
or
pop
cmp
mov
jne
mov
adc
add
test
ficoms
xlat
test
jp
add
test
sub
push
mov
outsl
sub
hlt
or
mov
lea
pop
stos
fnstenv
das
mov
filds
mov
mov
loope
and
xchg
fbstp
in
mov
cmpl
iret
add
repz
cmpsl
out
shl
fcos
loopne
dec
ds
test
push
test
stos
sti
sti
push
hlt
or
adc
lret
mov
sub
sbb
jno
push
sbb
out
std
mov
lret
movsb
mov
mov
jne
pop
aas
dec
clc
jnp
leave
mov
psubsb
xchg
inc
pop
inc
insb
push
es
repnz
icebp
inc
dec
pusha
xorl
stos
and
test
ret
mov
pop
nop
pushf
mov
bound
mov
leave
mov
shlb
jge
loope
push
fdivrl
shrb
cmc
lret
mov
adc
push
cmp
mov
pusha
daa
mov
or
movsb
cmc
neg
nop
jo
sbb
test
leave
movsb
add
push
mov
fwait
mov
pop
push
cmp
out
add
cmp
pop
mov
aas
test
or
cmp
sbb
xor
adc
mov
iret
xor
sub
es
das
lock
outsb
test
lods
push
lea
test
into
orb
in
cmp
mov
jns
les
mov
leave
dec
fiadds
in
test
add
xor
test
mov
pop
jmp
test
in
inc
in
mov
or
roll
movsb
sti
adc
pop
jl
adc
add
jecxz
clc
xor
mov
and
dec
mov
nop
xor
xchg
int
fdiv
sbb
sub
loopne
sbb
ds
push
in
xchg
fcmovnu
adc
cmc
or
test
mov
loop
cmpsl
sbb
call
mov
sub
sbb
in
jp
lods
stos
or
push
push
cld
mov
jecxz
mov
test
arpl
adc
fiadds
insl
or
sub
mov
ret
fcomi
ret
loopne
daa
cltd
xlat
in
push
addl
jbe
push
inc
scas
addb
orb
in
outsl
shlb
xchg
cmp
xorl
les
pop
inc
adc
adc
outsb
and
adc
mov
iret
outsl
lds
es
jecxz
pop
lds
ficomps
push
arpl
pop
outsl
inc
xor
add
jnp
in
xchg
mov
xor
and
aad
add
pop
add
adc
icebp
xor
jmp
mov
mov
dec
sbb
pop
out
mov
or
sbb
jae
movsb
ficoml
out
mov
fldcw
mulb
std
pusha
mov
or
dec
add
in
int3
cli
daa
push
test
mov
fcoml
inc
std
ja
insb
test
mov
daa
loopne
out
xor
cwtl
test
loope
sahf
lahf
int3
cmp
lahf
and
rcrb
sub
pop
mov
ret
and
pop
sbb
and
mov
dec
sub
mull
ret
and
pop
inc
fcmovb
mov
lods
mov
imul
cmp
loopne
mov
xchg
jecxz
adc
stc
push
mov
sub
cmpsb
adc
lods
cmp
push
movsl
push
bound
mov
xchg
ss
mov
clc
in
or
into
rorl
xchg
adc
aam
fucomi
ror
popf
fadd
fisubs
negb
inc
test
les
imul
aaa
je
mov
in
cmp
shlb
sbb
out
cmpsl
mov
test
cli
fcomp
push
fsubp
loopne
push
loopne
push
repz
fwait
sub
jmp
adc
test
leave
sub
or
fcoml
cld
and
pop
sub
jle
push
mov
jb
repz
notl
add
push
lret
jp
outsb
fsubs
ret
imul
adc
add
loop
fisttps
aad
adc
mov
dec
sarl
pop
adc
dec
adc
inc
cmpsl
mov
adc
cmp
jno
cmp
pop
mov
test
pop
out
subb
xchg
in
mov
aaa
int3
jo
push
std
repz
fldenv
dec
add
xor
mov
scas
cltd
aam
xchg
pusha
out
jns
pushf
and
add
mov
push
movsb
icebp
movsl
in
mov
mov
mov
add
hlt
stos
push
cmp
lahf
loopne
inc
cs
add
jno
scas
movsl
and
insl
pop
test
pop
lods
mov
mov
jno
lret
fcmovne
cwtl
jo
push
xor
loopne
cmpsb
mov
jmp
cltd
mov
pop
add
int3
jp
lahf
mov
cld
and
pop
sbb
push
aam
out
dec
xchg
cs
push
test
jge
dec
push
or
xor
xchg
adc
mov
hlt
and
cmp
and
push
pop
push
mov
movsl
adc
std
lods
ret
sub
mov
jae
cmp
mov
lret
jge
cmpsb
pushf
push
pop
mov
cltd
or
shrb
rcrl
jae
adc
jl
fisubs
push
add
push
ret
dec
js
sbb
nop
sbb
mov
mov
das
mov
mov
push
test
xchg
pop
sub
mov
push
sbb
flds
xor
jp
jle
push
push
lcall
cmp
les
mov
aam
mov
test
cmp
je
xchg
or
aad
cltd
jne
stc
test
jl
inc
sub
xchg
cmpsl
inc
clc
push
rcrb
aam
mov
fidivl
jg
test
push
pop
jno
aad
aam
and
xchg
xchg
sbb
pop
mov
fcompl
lahf
dec
or
dec
out
mov
adc
pop
mov
dec
les
fdivr
jmp
movsl
mov
aad
dec
pusha
arpl
add
cld
adc
adc
lcall
dec
mov
pop
or
lock
js
mov
lahf
out
ds
mov
outsl
dec
jne
dec
cs
jae
xor
int
popa
inc
sbb
rolb
outsb
cmpsb
out
jp
aaa
shl
jle
sub
cld
sub
add
sbb
sbb
cmp
and
fisttpl
fsubrl
jns
fldl
cmp
mov
mov
mov
pushl
mov
cmp
dec
data16
xchg
inc
pusha
jge
xor
repz
mov
mov
ficomps
jo
jp
jle
inc
cmpsl
jae
ljmp
sbb
icebp
divl
adc
xchg
dec
aam
pop
or
mov
push
test
push
jne
iret
pop
movsb
pushf
mov
jmp
mov
ret
movsb
push
adc
mov
cmc
adc
loopne
dec
out
int3
outsb
sub
or
sbb
es
or
pop
sarb
push
loop
rclb
bound
std
lret
adc
cmp
clc
inc
xor
pop
pusha
xchg
out
and
lcall
jp
jb
pop
jmp
jns
inc
mov
jo
test
xchg
lods
sbb
out
iret
dec
out
push
sbb
leave
sub
and
fcomp
xor
xor
lds
cmp
or
lods
lret
loope
lcall
and
add
jae
out
xor
mov
mov
or
and
arpl
pop
xor
gs
pop
add
sti
xor
test
movsb
fs
dec
sub
xor
xor
rcrl
psrad
out
cmpsb
dec
push
stos
jns
mov
inc
popa
jge
or
ret
mov
mov
jns
je
scas
lcall
sbb
fcmovu
jae
int
or
mov
and
cli
js
nop
lea
lcall
cmpsl
call
mov
jle
cmp
ljmp
add
jmp
xchg
repz
out
adc
xor
dec
dec
clc
lret
out
aas
mov
jns
in
jno
mov
jns
lret
xor
adc
es
rep
sbb
andb
shl
add
adc
in
sub
xor
mov
mov
jae
and
js
dec
xchg
sub
inc
rorb
mov
or
or
sbb
add
loopne
push
push
dec
imul
sub
jl
mov
loope
inc
push
popl
out
fstps
push
dec
and
iret
insl
into
stc
jnp
int3
fdivr
call
xor
js
sbb
hlt
lcall
xchg
inc
jb
xor
mov
cmpsl
and
bound
aas
aam
dec
cmp
xor
adc
aas
or
std
dec
push
mov
lods
fchs
fwait
mov
add
pushf
rcrb
adcl
int
cmp
arpl
pop
and
inc
and
or
and
adc
cs
adc
lds
pop
add
sti
test
adc
mov
ljmp
insb
dec
aad
rcl
out
sub
mov
push
lea
xchg
and
sub
movaps
in
mov
push
stc
pop
inc
lods
sub
mov
xor
ret
aaa
xchg
fstpt
stos
xchg
and
xor
and
mov
das
ljmp
lods
cmp
fwait
or
xlat
lcall
adc
add
std
sbb
imulb
dec
pop
and
add
inc
dec
or
jae
test
cmp
push
sub
call
dec
test
stc
dec
jecxz
jmp
in
ljmp
pusha
xor
push
xor
mov
lods
push
in
mov
mov
jge
push
lret
aaa
push
popa
std
jge
mov
xlat
das
add
pop
cmp
repnz
and
call
fs
push
cmp
inc
pop
cmp
shlb
lods
dec
jnp
es
adc
test
adc
sti
sarl
mov
cmpsl
in
or
jecxz
and
mov
lcall
in
cli
imul
cltd
jbe
mov
cltd
lret
xchg
xor
push
fiadds
leave
xchg
jp
mov
or
fs
lret
pop
sub
and
les
fiaddl
call
fwait
or
mov
popa
aas
cmp
push
cmp
in
pushf
sbb
xchg
icebp
out
je
mov
lcall
mov
and
cli
push
ds
xorb
idiv
in
add
in
mov
push
lods
xor
fstl
push
mov
addl
scas
mov
mov
jmp
sahf
jbe
jmp
loop
rcr
xchg
test
repz
imul
sbb
add
jl
pop
jne
jo
pop
adc
idivl
cmc
xchg
movsl
rcrb
xor
xlat
add
sbb
inc
add
scas
in
add
xlat
mov
sbb
dec
add
inc
cs
popa
sub
int
sub
push
ret
and
ss
mov
or
adcl
or
mov
fdivrl
lret
push
mov
add
sub
movsl
jmp
shlb
lods
fstpl
cwtl
push
ljmp
xchg
ja
mov
loope
jmp
mov
and
pop
pop
cmp
lock
loopne
sahf
jb
pushf
es
repz
mov
push
mov
mov
and
or
imul
add
pop
cmp
xchg
xchg
movsl
adc
mov
xchg
or
mov
and
mov
fnstcw
lods
and
fwait
pop
adc
cmpsb
lock
or
mov
dec
mov
in
fsubs
mov
mov
jle
jb
in
inc
daa
pusha
mov
ret
daa
imul
jle
sub
popa
dec
fwait
es
jne
and
or
jo
stos
gs
jecxz
test
rcll
inc
in
xchg
fcompl
jno
mov
jg
popa
nop
mov
mov
into
cmp
xchg
out
jnp
xor
lret
jge
and
fwait
add
jge
adc
out
ficompl
mov
mov
adc
pop
jns
and
push
xor
aam
mov
dec
daa
xchg
call
mov
lahf
xor
call
dec
popf
jo
and
outsl
and
lods
mov
adc
xchg
clc
rolb
iret
xor
imul
push
add
mov
int3
shrl
dec
pop
cmp
pop
or
sbbb
or
inc
mov
int3
out
mov
je
daa
push
popa
cli
cli
test
sub
add
mov
xchg
inc
push
jb
fsts
sbb
dec
mov
add
bnd
adc
dec
loopne
or
fdivr
mov
pop
and
or
loopne
or
push
jae
and
lea
and
xor
out
enter
shll
mov
push
cmp
stos
into
push
mov
and
xchg
inc
xlat
mov
sbb
lods
daa
xor
xor
inc
add
and
add
mov
adc
or
push
add
pop
cli
fs
hlt
mov
ss
pushf
cs
mov
xchg
cld
add
dec
xchg
xchg
and
jbe
popf
xor
add
mov
xchg
fsts
sbb
mov
jmp
lret
ss
movsb
sbb
sbb
pushf
fwait
into
mov
add
shrb
mov
cmp
pop
stc
stc
insl
call
push
aad
fcoms
loop
push
popf
sbb
cmp
shrl
sub
pop
inc
push
pop
js
shrb
sub
icebp
cmp
mov
adc
imul
mov
divps
fnsave
mov
sub
or
mov
leave
and
stc
and
push
adc
dec
xchg
or
ficoml
sbb
cltd
mov
jmp
and
into
je
faddl
ret
pop
lds
enter
dec
dec
aam
out
repz
or
mov
ret
push
push
sub
fsubl
jl
cld
stc
or
add
popa
sub
add
inc
out
cmp
sub
xlat
jecxz
mov
push
add
adc
cmp
dec
sub
loopne
xor
mov
lret
mov
aas
mov
insb
push
push
test
cmp
sub
cmpsl
mov
das
xor
fsts
loope
jg
pop
divl
iret
pop
aam
scas
test
dec
lods
fcompl
rorb
and
out
xor
adc
roll
and
roll
int
push
cmp
sbb
ret
mov
out
mov
sub
pop
mov
mov
mov
dec
in
pop
sahf
fsubl
jl
add
sbb
add
into
popa
mov
dec
or
mov
call
lret
lods
fisttpll
test
xchg
dec
int
test
lea
cld
xchg
pop
pop
sarb
adc
outsb
loop
repnz
mov
sub
cmp
jmp
or
sar
repz
hlt
xchg
dec
popa
lods
xor
fstp
jmp
xchg
or
add
jmp
push
mulb
pop
fmulp
bound
and
pop
aam
dec
leave
fisubs
in
aas
push
jno
mov
xchg
sti
test
jp
lea
outsl
xchg
sub
sarb
out
test
notb
fidivrl
fildl
lcall
xchg
rcl
cltd
dec
mov
xor
sbb
cmp
nop
xor
sarb
adc
jge
in
jmp
xchg
mov
push
jge
adc
std
imul
pop
adc
pop
icebp
adc
xor
arpl
sti
aad
dec
andb
call
shrl
and
and
loope
mov
in
xor
xor
enter
push
hlt
ds
sub
mov
fidivs
jno
and
cmp
cmp
dec
into
add
mov
icebp
mov
add
ja,pn
xchg
outsb
fwait
js
rol
in
jecxz
fisttpl
cwtl
addr16
mov
aas
aaa
mov
sahf
sbb
xchg
xor
push
inc
sbb
es
jmp
mov
cmpl
mov
les
das
and
int3
inc
jg
insb
xchg
dec
fiadds
fistpll
adcb
js
sbb
inc
in
xor
cmp
add
fsts
and
push
xchg
sbb
jge
adc
jns
push
ror
fs
cltd
addr16
repz
mov
sbb
test
sbb
imul
popf
xchg
push
dec
test
mov
mov
dec
dec
xchg
stos
mov
mov
and
lahf
mov
lock
movsb
adc
mov
int
mov
adc
cmp
xchg
aad
pop
mov
and
frstor
lock
and
xchg
pop
fnstenv
icebp
mov
push
sbb
push
cmp
lcall
movsl
xor
ljmp
adc
and
mov
mov
jmp
mov
pop
hlt
sbb
cmp
xor
fdivl
scas
test
xchg
dec
inc
rcl
mov
mov
lret
xchg
icebp
jecxz
cld
lret
out
jmp
cmpsb
sub
or
mov
and
jmp
shll
mov
dec
pusha
cmp
test
inc
fldenv
inc
popa
fs
push
rcl
ljmp
cmp
and
mov
cmc
ret
aaa
mov
dec
mov
orb
dec
out
xor
mov
test
sbbb
xchg
lret
subb
addb
icebp
lods
sub
or
shll
mov
lcall
std
fsubs
in
sub
add
repnz
mov
andl
das
xchg
or
and
lret
or
and
sub
push
xchg
icebp
iret
and
add
push
and
pop
js
test
push
into
sub
xor
rclb
insb
cmp
sbb
mov
pop
push
jle
cmpsb
sbb
or
jmp
xchg
fs
cmp
mov
cmp
pusha
aad
imul
push
aaa
insb
pop
xchg
xchg
xchg
stos
xchg
sbb
sub
fs
mov
pop
fs
lock
pop
jae
inc
xor
or
mov
and
adc
jp
and
jo
sarb
push
in
jae
mov
cmpsb
inc
lea
jg
dec
lret
push
rcrl
cmp
sub
test
push
leave
sahf
lret
insl
cmp
lcall
fisttpll
vhaddpd
sub
adc
iret
aad
dec
les
enter
mov
adc
std
fiaddl
sub
jnp
mov
sbb
iret
adc
mov
loop
popa
js
stc
cmp
jge
pop
mov
or
pop
fldl
loop
xchg
popf
xor
sub
push
sahf
and
xor
and
cs
pop
movsb
nop
hlt
add
ds
ret
fsts
mov
and
mov
pop
xchg
or
mov
or
sti
mov
sub
cmp
shlb
pop
std
xor
jge
jl
lret
mov
adc
jmp
mov
mov
dec
sbb
pop
mov
movsb
pop
movsl
ss
or
insl
mov
pop
sub
jmp
lea
jge
mov
popa
add
repz
push
clc
adc
mov
and
and
add
or
push
xor
stos
arpl
arpl
add
fmul
mov
inc
and
jmp
jns
add
push
sub
mov
gs
mov
dec
dec
dec
ss
dec
push
mov
xor
dec
sahf
mov
in
add
inc
cld
insl
in
mov
pop
pop
mov
jge
push
jmp
xor
rorb
call
stos
mov
add
shll
aas
sub
xor
testl
test
les
sbb
std
notl
lret
and
stc
fcoms
sub
mov
add
jo
shrb
cwtl
ret
popa
hlt
cmpsl
lahf
mov
inc
into
subl
mov
pop
cmp
mov
pop
sub
cmp
jmp
fisubrl
lds
add
mov
xor
shlb
cmc
mov
mov
add
adc
daa
jno
popf
push
fistpl
mov
aad
push
lods
xor
sbb
cmp
add
lods
xchg
inc
cltd
repnz
cmp
hlt
insb
fnstenv
movsb
xchg
outsb
fcmovnb
and
pop
jmp
out
jnp
xor
mov
push
and
jge,pn
xchg
stos
std
clc
jns
outsl
push
icebp
inc
and
xchg
les
rcrb
pop
inc
push
fnstsw
clc
fistpll
es
adc
test
sbb
aaa
xchg
ss
test
dec
push
pop
pop
idivl
and
mov
inc
lds
lret
adc
adc
fsubrs
pushf
das
sub
jmp
repnz
idivb
xor
xchg
lods
arpl
lds
lods
mov
jecxz
popa
lods
xor
into
xor
jecxz
pop
push
shlb
lret
out
mov
call
std
dec
std
mov
enter
ljmp
cmp
xchg
jmp
outsl
test
stos
xchg
mov
push
sbb
lods
pop
ljmp
loop
test
pop
cmp
std
fisubrs
pop
xlat
in
mov
ret
and
jno
push
stc
mov
movsl
in
adc
add
adc
or
stos
mov
fadd
or
mov
mov
inc
add
aam
add
lret
mov
imul
enter
scas
and
xchg
and
insl
fnstsw
mov
push
mov
scas
mov
ret
xchg
mov
sbb
xlat
or
je
pop
rcll
xor
sbb
dec
push
add
mov
jle
pushf
popf
fwait
push
lret
xor
or
test
outsb
std
xor
mov
out
sub
inc
iret
lahf
std
pusha
jg
dec
inc
mov
xor
mov
push
push
loopne
adc
cmp
pop
adc
ss
fidivs
flds
es
add
and
jge
and
push
mov
or
stos
rolb
jl
mov
or
jecxz
ds
test
enter
push
arpl
test
loopne
repnz
jp,pn
and
mov
out
es
mov
test
pop
shll
mov
cmpsb
pop
movsb
push
pop
aaa
fbstp
jg
cmp
dec
or
movsl
and
subps
or
and
lods
arpl
push
jecxz
and
push
pop
mov
test
mov
push
dec
jmp
add
fists
lret
lds
sub
sbb
add
cmpsl
les
pop
mov
mov
or
and
sti
mov
dec
out
dec
clts
pop
rcrb
mov
add
repz
imull
aaa
inc
sub
iret
cld
lock
or
sub
xor
dec
mov
lret
and
dec
test
pop
mov
std
int3
inc
andb
push
sbb
pushf
movsl
push
dec
cmp
and
sub
mov
xor
jecxz
mov
and
jbe
push
or
dec
out
cmp
call
cmpsl
add
mov
jg
or
inc
sub
push
test
ds
lcall
sub
movl
xchg
sbb
or
add
xchg
sub
adc
iret
and
fdivr
faddl
scas
xchg
jg
xor
in
cmp
dec
sbb
add
push
dec
adc
orb
aas
xor
fcomps
sbb
call
inc
fs
sbb
or
mov
sub
outsl
leave
bnd
jno
mov
sub
jg
fnsave
fadds
add
inc
jbe
popa
add
stc
aad
mov
iret
aaa
or
cmp
mov
int3
inc
arpl
in
push
xor
ja
mov
in
paddb
leave
adc
cmpb
loopne
into
cmp
pop
sbb
sub
ret
ret
xchg
mov
inc
call
mov
add
mov
sbb
nop
mov
out
mov
add
cmp
or
push
xor
jmp
vpmacsdd
sub
int
shlb
xor
addr16
mov
lods
cld
xlat
jno
mov
loop
jecxz
xlat
mov
fidivrs
mov
jl
test
fcmovnu
adc
ret
jo
sbb
lds
sub
jl
jecxz
jbe
cmc
push
xlat
in
inc
pop
adc
das
mov
adc
fdivrl
fs
cmp
lods
adc
mov
sbb
add
rcl
dec
popf
dec
mov
or
sub
cmp
in
out
das
push
std
aaa
into
pushf
push
inc
fcomps
push
sbb
int3
dec
inc
pop
xor
pop
ret
fstl
ss
xor
test
cmp
shll
adc
fdivrl
out
xchg
and
mov
test
cmp
nop
xchg
jae
add
jns
add
outsb
push
enter
add
jb
push
out
ljmp
and
sub
test
daa
clc
or
sbbb
cwtl
xchg
sbb
fldcw
jge
stos
inc
rcll
loop
xchg
test
push
scas
or
xlat
xchg
add
pop
push
xchg
in
sub
inc
pop
je
mov
push
sbb
push
jnp
insl
mov
mov
pop
stos
cmpsl
push
xchg
das
jnp
jp
fldenv
mov
jae
mov
add
and
sti
jl
xlat
arpl
ja
jno
jg
pop
push
sub
mov
popf
push
push
jbe
lods
sub
and
cmpsb
bound
pop
cmpsb
fadds
inc
jge
mov
xor
js
inc
aaa
shrb
mov
sub
jge
or
push
mov
rcll
imul
mov
jb
nop
jle
mov
ret
imul
orl
dec
mov
sarb
xor
push
dec
push
jbe
jp
pop
cli
inc
jecxz,pn
loop
jle
scas
sub
mov
push
pusha
xchg
jmp
inc
cs
fisubrs
lret
addr16
rorl
cmp
and
push
and
sti
xchg
xchg
enter
cmp
xor
imull
loopne
jnp
cmp
push
in
dec
sbb
sbbb
jecxz
fdivr
add
pop
bound
dec
xchg
xor
subb
sahf
mov
push
xor
sbb
sub
leave
popa
jecxz
loop
enter
sub
mov
inc
dec
mov
movsb
outsl
pop
and
les
fiaddl
pop
sub
sub
xorb
mov
inc
and
ljmp
lret
sbb
mov
insl
pop
sahf
int
xchg
fsubrs
faddl
cmp
jl
mov
push
loopne
sbb
add
mov
mov
sbb
push
lods
sub
xchg
fs
cmp
mov
shll
rclb
push
xor
daa
jb
pop
mov
in
inc
int3
into
enter
pop
sub
out
mov
cmp
int3
daa
mov
sarb
jne
sbb
cmc
cli
xchg
mov
jge
add
mov
daa
loop
adc
cmp
xchg
mov
mov
jb
ret
and
shrb
jno
xchg
jmp
lcall
fmuls
push
mov
data16
test
pop
and
call
sahf
mov
or
mov
or
fisubl
gs
sbb
dec
sub
dec
mov
jecxz
sub
movsb
jp
jmp
loopne
jae
mov
mov
mov
mov
dec
or
fstpt
jmp
or
stos
lcall
aam
or
jl
jle
mov
jge
out
cwtl
mov
mov
js
or
out
arpl
test
leave
push
jl
daa
push
and
je
mov
dec
into
pushf
cmpsl
fsubrp
dec
dec
jae
mov
mov
testb
or
xlat
lods
xor
pop
aas
adc
push
aas
sbb
cmp
xor
enter
iret
popf
daa
ss
lcall
imul
icebp
out
lret
arpl
xchg
outsb
inc
jg
and
mov
adc
pop
jp
pop
mov
mov
push
loope
jle
xchg
mov
mov
mov
popa
outsb
lcall
fadds
insl
ret
int3
sahf
mov
xlat
mov
cld
push
add
sub
push
inc
jno
add
adc
xor
dec
mov
sub
daa
sbb
jno
mov
pusha
mov
mull
jo
jle
andb
dec
and
sub
pop
push
movsb
sub
aam
movsb
push
push
inc
test
adc
rclb
cmp
subb
loopne
cmp
ljmp
push
shrb
test
mov
shl
inc
sbb
bound
mov
repz
out
sbb
cwtl
gs
cmp
dec
fnstsw
xor
lret
adc
mov
mov
cli
mov
loope
psrlw
test
faddl
enter
inc
sahf
add
cld
adc
mov
shlb
add
inc
idivb
jge
repz
xor
pusha
and
ret
pushf
lcall
lret
push
jns
or
sub
inc
jns
mov
cwtl
movsl
mov
mov
mov
cmpsb
gs
addr16
movsl
dec
pop
xchg
jno
jb
loop
cmp
push
xor
ret
loopne
mov
stc
orl
sar
cmp
xor
imul
loopne
in
push
add
insl
out
shrb
sub
push
fwait
xchg
loop
xchg
and
jge
xor
xor
xchg
in
jnp
mov
scas
scas
jge
push
and
mov
cmp
xchg
inc
lret
pop
sub
cmc
fnsave
push
adc
pop
push
fadds
adc
sbb
xchg
outsl
adc
and
pop
mov
ffree
dec
pop
mov
mov
iret
out
fsubrl
sbb
or
sbb
imul
inc
hlt
mov
add
push
sbb
js
mov
xor
pop
fcompl
mov
loopne
mov
xchg
shrb
shrb
into
insl
pop
sahf
andl
xor
xchg
scas
inc
and
mov
sub
add
ror
repnz
and
mov
mov
and
jle
dec
lret
movsl
call
stos
out
lds
int
ljmp
cltd
loopne
mov
pop
push
add
xchg
xor
cli
xchg
cmc
xchg
cmp
dec
cmpsl
daa
push
shll
jmp
push
jge
push
cwtl
aad
xlat
loopne
dec
and
xor
sbb
insb
mov
push
and
mov
jge
addr16
and
xchg
and
popf
sub
adc
fwait
push
mov
jecxz,pn
mov
in
adc
xchg
test
in
push
cltd
adc
push
aam
mov
aaa
pop
add
lods
xchg
repz
pop
fnstsw
pop
sub
mov
jno
xor
pop
mov
or
fisubs
sbb
inc
rorl
bound
in
gs
cmpsl
push
mov
jno
inc
fwait
cmc
xchg
or
adc
push
cli
add
jecxz
cli
mov
pop
cld
fwait
cmp
mov
in
cmp
outsl
and
ja
push
dec
mov
dec
sahf
inc
fistl
imul
dec
adc
mov
in
or
xor
rclb
dec
pop
fmuls
mov
xchg
dec
sbb
test
adc
pop
xchg
fsubl
mov
mov
add
cli
into
addr16
dec
mov
adc
xchg
fidivl
outsb
mov
popa
and
leave
fiaddl
aaa
cltd
xor
cmpsl
stos
and
fcoml
fsubs
jae
pushf
push
sub
cmp
fistps
cltd
call
addr16
fbld
or
movsl
or
loope
sbb
inc
cmp
mov
imulb
aam
mov
mov
popw
bound
fcoml
ljmp
shll
mov
mov
pop
fs
push
movsb
out
mov
cld
insl
je
sbb
ficoml
sbb
and
iret
cmp
scas
test
and
jg
mov
pushf
add
sbb
lret
sub
movsl
xor
and
and
lods
test
adc
mov
call
or
cmp
and
lods
or
std
dec
nop
or
adc
mov
cs
or
mov
clc
adc
jge
mov
ds
jle
jp
add
ss
in
add
jo
repnz
cli
test
push
xrelease
ret
sub
inc
fsubrl
lahf
mov
into
repz
cmp
sbb
fadds
sbb
or
pop
addr16
mov
xor
out
xor
test
stos
mov
dec
imul
sub
mov
cld
loopne
xor
cld
mov
sbb
adc
pop
mov
and
fsubp
mov
test
call
je
divl
mov
es
dec
jle
add
adc
push
mov
or
xor
pop
loop
cs
repz
push
or
call
pop
cmp
add
push
xchg
and
repnz
jp
das
mov
mov
adc
test
cwtl
dec
sbb
aam
rolb
pop
mov
sbb
test
insb
xor
into
out
loop
into
lahf
sbb
xchg
mov
cltd
add
faddl
scas
cmpsl
imulb
inc
jno
sbb
jnp
cmp
lcall
sub
jecxz
mov
mov
push
nop
lock
cld
jmp
mov
movsb
fcomp
xchg
xchg
add
xchg
jno
jns
or
sub
or
lcall
sub
lret
push
cli
push
and
mov
mov
dec
jmp
jnp
jne
cmp
fcmovnb
testb
fcoms
add
fwait
or
cmp
mov
mov
fsub
mov
js
cmp
ljmp
fsubr
sarb
mov
andb
adc
cli
mov
pushf
sbb
and
fwait
decb
mov
mov
addr16
cmp
mov
test
sub
jg
leave
or
cmp
shrl
dec
cwtl
mov
dec
add
mov
loop
testb
es
and
inc
mov
jg
lcall
dec
test
inc
cmp
cmp
jl
inc
and
inc
jecxz
in
jp
sbb
ret
aaa
inc
or
pop
pop
cmp
repnz
dec
jmp
sbb
cmp
loopne
sar
fstpt
sarl
scas
sti
addl
scas
inc
movsl
cmp
dec
adc
push
xor
inc
mov
and
mov
mov
clc
mov
adc
in
add
addl
cmp
mov
fdivl
lods
lcall
pusha
pop
loop
out
add
cmc
mov
insl
into
stos
jns
push
stc
insb
mov
mov
nop
fcoml
lcall
mov
pop
or
mov
stc
add
mov
clc
test
pop
cmpsl
push
leave
push
sub
mov
popf
aaa
xchg
int
sub
pop
test
mov
adc
idivl
cmc
sbb
sub
les
dec
mov
inc
mov
jp
xor
lea
rcrb
es
mov
xor
cmp
scas
enter
fdivp
int3
repnz
popa
in
sbb
pop
dec
mov
fcomps
leave
cmpsl
out
cmp
enter
in
sbb
jnp
mov
cmpsl
cs
popa
sbb
jecxz
repz
adc
subl
cmp
sbb
divb
jp
or
pop
movsb
inc
ljmp
mov
fisubl
and
cmp
sbb
fsts
shlb
cmp
scas
and
add
or
inc
rol
pop
mov
push
paddsw
stos
inc
es
repz
mov
inc
mov
xor
mov
aad
int3
xchg
in
xorl
mov
hlt
aam
xchg
and
xchg
popf
pushf
mov
mov
xchg
clc
mov
in
fcompp
lahf
pop
test
pushf
cmp
inc
mov
inc
hlt
ret
xor
jo
pop
popa
stos
scas
sbb
loop
imul
push
and
repz
cmp
cmpsb
aas
inc
scas
mov
or
mov
aad
rcrl
inc
dec
negl
sbb
dec
leave
es
out
dec
fsincos
mov
push
mov
mov
inc
pushf
adc
push
das
jnp
xor
or
loopne
xor
jg
mov
das
cmc
int3
out
fldt
lods
mov
push
xchg
and
mov
fidivs
mov
lcall
lock
dec
es
test
dec
dec
cwtd
pop
cmovnp
das
jno
sbb
pusha
in
gs
xchg
cmpsl
add
cmp
adc
inc
leave
insl
jmp
mov
adc
mov
aas
or
fstpt
cmp
jg
push
push
cmp
filds
mov
mov
xor
lcall
mov
mov
imul
add
add
lret
stc
negb
rolb
pop
out
pop
sub
or
mov
pop
dec
mov
stos
push
jle
cltd
js
xor
or
jne
jae
out
xchg
bound
jg
outsl
outsl
sub
pop
aam
sbb
outsl
mov
or
frstor
fcoml
scas
xchg
faddl
sbb
clc
enter
add
pop
mov
call
dec
inc
mov
fmull
mov
mov
mov
mov
mov
mov
aam
dec
pop
push
out
xchg
mov
in
loop
xchg
sbb
mov
sbb
clc
in
push
fdivrl
pop
mov
or
push
push
jno
aaa
test
cmpsl
xor
aaa
dec
aam
loop
lea
jmp
push
xchg
mov
sub
leave
push
cmpsb
addl
mov
out
addr16
aaa
loope
adc
fisubl
xor
dec
add
or
daa
pop
push
mov
mov
pusha
addl
mov
push
xor
rcl
pop
dec
mov
jne
aad
lcall
popa
iret
mov
shrd
mov
ret
sub
dec
cli
and
mov
fsubrl
movsl
in
test
cld
mov
lods
cmp
aas
ret
data16
jae
and
pop
add
mov
jb
and
push
sbb
jne
cmpsl
and
test
cmpsl
in
into
pmuludq
cmp
ret
aad
daa
sub
sti
adc
cli
in
dec
in
sub
scas
mov
mov
jle
sub
jbe
add
inc
enter
jnp
dec
mov
in
rclb
lea
sub
fldt
sub
pop
pusha
ja
fdivl
sub
outsb
adc
add
push
sub
add
int3
les
mov
bound
xchg
jp
push
int3
ss
jae
repz
cmp
sub
inc
jle
lahf
mov
lea
xchg
mov
add
pop
add
dec
mov
dec
test
push
jne
fsubs
jb
pop
daa
mov
push
inc
lea
addr16
sbb
jnp
enter
pop
leave
fcoml
cmpsl
cmp
mov
pop
loopne
popf
ret
loop
inc
in
and
pop
mov
jle
leave
dec
test
mov
iret
enter
sbb
lahf
dec
imul
dec
shll
pop
pop
out
ljmp
hlt
out
into
xchg
push
dec
lea
xor
and
lret
out
rclb
jae
cmpsl
cmp
mov
jmp
sahf
and
adc
add
mov
mov
rcl
pop
ftst
nop
pop
and
xchg
xchg
das
insb
jle
push
into
and
scas
mov
fnstcw
and
dec
pop
jle
cmp
inc
cmc
mov
fmull
mov
dec
push
mov
and
sub
or
dec
add
mov
pop
ja
mov
ss
out
inc
stc
shlb
mov
xor
lock
inc
lcall
mov
out
lods
popf
push
loop
test
fmuls
in
mov
push
cmp
cld
or
jnp
stos
xor
add
push
or
push
xor
jb
out
and
dec
cmp
push
loop
dec
and
xchg
shll
sbb
xchg
pop
clc
jge
xchg
pop
or
icebp
inc
and
cwtl
std
stos
mov
xor
and
mov
loop
mov
push
les
sahf
subb
xchg
iret
shll
inc
xor
sti
adc
gs
rolb
jmp
push
xchg
insl
jmp
insb
shlb
out
adc
xor
or
int3
push
jmp
jae
in
push
xchg
xchg
pop
mov
ja
jns
and
sub
sub
out
ja
sub
daa
push
adc
xor
sbb
rorb
roll
xor
adc
mov
out
xor
dec
inc
adc
cmc
inc
je
push
cwtl
sub
int3
into
test
pop
loopne
mov
adc
lss
ficomps
js
dec
and
sub
xlat
mov
sub
add
adc
or
daa
xchg
push
adc
xchg
lds
pop
mov
mov
stc
mov
stc
sbb
bound
ret
jl
jg
out
pop
out
sub
les
pop
enter
and
pop
sarb
popf
pop
stos
or
dec
mov
leave
cmpsl
dec
in
ljmp
xchg
js
jno
lret
cmpsb
push
mov
mov
sub
inc
movsb
dec
lods
cld
pushf
test
xchg
out
mov
pop
jle
sub
outsl
sbb
lods
pusha
cli
inc
les
lods
and
mov
cmp
dec
movsl
sub
mov
jl
fiaddl
sbbl
cmpb
push
jmp
jo
xlat
xchg
cmp
sti
xor
push
sub
xchg
imul
daa
fldenv
lea
sahf
mov
scas
movsl
cmpb
nop
push
jle
dec
sbb
nop
outsl
xchg
daa
hlt
repnz
cltd
mov
dec
outsl
adc
or
jb
in
in
dec
xor
xchg
jnp
call
sti
rcl
js
pop
pop
mov
push
stos
and
fs
imul
push
sub
dec
faddl
cwtl
mov
jge
adc
and
sub
lcall
test
cmpsb
inc
add
in
pop
test
shrb
push
push
pushf
sahf
outsl
xor
dec
fcmove
adcl
xchg
ss
es
xor
push
repz
enter
mov
sbb
jecxz
and
cmp
dec
popa
movsl
jg
test
idiv
repz
nop
push
inc
and
lahf
jp
in
loope
xchg
jg
stos
int3
int
stc
fbld
dec
lcall
mov
aad
xor
or
sub
pop
int3
lret
adc
mov
adc
xchg
or
or
int3
popa
les
lahf
shll
and
lcall
movsl
xor
or
mov
adc
bound
xchg
imul
mov
iret
scas
and
add
sub
sbb
aad
push
add
sti
sub
test
rcrb
pop
sbb
lcall
mov
dec
cli
sbb
lods
pop
mov
push
adc
xor
add
mov
int3
cld
cmp
sub
xor
nop
stc
insb
sti
out
dec
xlat
inc
lret
lcall
pop
mov
push
js
test
push
mov
xchg
xor
repnz
mov
push
push
pop
jno
dec
aaa
mov
lock
cmp
test
ret
mov
jbe
nopl
sbb
cmp
and
sbb
shll
mov
insb
lods
stos
cmp
cli
in
adc
push
rolb
out
or
or
inc
jp
dec
in
inc
test
cld
push
ficomps
ret
push
dec
repz
repnz
cmp
stos
jle
mov
add
adc
daa
push
inc
bnd
mov
adc
sub
adc
pop
ret
mov
clc
and
test
push
popf
xchg
pusha
cmp
push
cmc
adc
sbbb
sti
aam
cwtl
and
fisttpll
imul
sbb
mov
sbb
lods
je
mov
dec
and
pop
push
ret
jb
jl
adc
xchg
daa
xchg
ret
clc
and
xchg
repnz
sbb
sbb
cs
data16
and
mov
mov
mov
push
cld
pop
test
sub
mov
xor
sub
or
faddp
add
add
or
sbb
cmp
pop
cmp
bound
cmpsl
xor
sub
aad
add
sub
ret
ffreep
std
add
mov
into
in
cmc
subl
enter
or
aam
jp
aaa
jl
pop
rcll
adc
sbb
cs
les
dec
mov
ss
mov
jg
mov
icebp
mov
jbe
dec
xor
aaa
inc
and
inc
fsts
psrld
ss
and
adc
enter
or
cmc
cs
mov
fimull
jg
call
xchg
js
or
sub
call
cmc
xlat
inc
fldcw
dec
cli
cmc
mov
mov
lds
repz
inc
inc
es
push
push
dec
mov
movsb
xchg
mov
out
aas
jmp
lods
in
stos
fistps
fiaddl
add
ret
fdivrl
add
jno
inc
mov
cli
test
inc
xchg
sbb
pop
and
roll
pop
dec
inc
mov
ljmp
mov
xchg
xorl
in
or
ss
in
pop
sub
hlt
sbb
xchg
xchg
mov
push
sbb
mov
out
mov
cmp
aaa
mov
bound
lods
and
ffree
jecxz
js
imul
mov
ds
fcoms
fnstenv
jns
and
test
shl
dec
and
add
jno
add
sub
cmp
lret
mov
jb
mov
sub
mov
sub
aad
fisubl
jns
dec
sub
mov
fcos
jg
sub
loope
es
stos
adc
test
jnp
pop
hlt
and
or
push
jae
mov
sarl
push
xchg
iret
in
cmp
push
jp
and
test
pushf
cmp
loope
inc
fdecstp
int3
cmpsl
ret
fcom
mov
pop
jp
inc
xor
jno
rcll
std
sbb
mov
cmp
dec
push
mov
jl
enter
push
sbbl
roll
rclb
add
neg
into
adcl
cmpsl
imul
fnstcw
incl
jns
rorb
test
movsl
push
cmpsl
adc
push
xor
loopne
push
test
lret
adc
rorb
fisubl
ljmp
arpl
dec
jmp
push
cmp
xor
and
out
dec
aam
pusha
push
pop
inc
adc
in
adc
and
adc
mov
cwtl
push
push
mov
ficomps
push
push
imul
and
pop
nop
and
or
daa
jge
mov
xchg
sub
cwtl
mov
adc
push
xchg
adc
sbb
mov
in
mov
int3
sbb
xchg
out
notb
push
stos
dec
push
inc
icebp
or
mov
lods
repnz
sub
pushf
xchg
dec
pushf
and
cmpsl
jns
sbb
aas
lret
movsl
cmp
stos
sub
adc
cmp
fistl
jp
lods
in
cmp
add
mov
xchg
ja
and
add
sti
sbb
movsb
in
testb
add
cmp
sub
xchg
enter
movsb
shlb
cli
push
xor
push
sbb
in
sahf
inc
ret
mov
gs
pop
push
iret
mov
imulb
adc
repz
fnsave
test
lahf
or
mov
jno
leave
stc
in
repz
mov
sub
test
mov
inc
imul
cmp
clc
mov
or
dec
jns
dec
repz
stos
pop
xlat
int3
ret
xchg
aad
fdivl
in
adc
jle
adc
cmp
lret
and
sub
lret
xchg
nop
sbb
fcomps
adc
sbb
lock
adc
jmp
and
sub
push
mov
cltd
dec
cmp
lods
jo
loopne
push
pusha
mov
mov
and
fsubrs
push
pop
test
sub
inc
sbb
jbe
test
aam
jecxz
loopne
fs
mov
mov
test
test
push
sub
cwtl
push
and
pop
fisttpll
leave
pop
pop
pop
mov
and
xchg
lock
jl
or
rorb
in
enter
pop
mov
pop
jp
aas
into
add
push
xchg
fists
aad
into
in
inc
dec
jns
cmp
les
ud1
test
out
mov
add
lcall
sub
stos
mov
aaa
sub
insb
and
add
fwait
inc
inc
dec
fidivl
mov
push
sbb
and
sbb
lcall
mov
fwait
add
in
sub
pushf
pop
sub
mov
nop
mov
lret
sarl
out
movsb
sbb
out
mov
cmp
popa
lock
aaa
mov
js,pn
add
in
ret
mov
xchg
scas
movsb
hlt
nop
sub
push
lds
mov
scas
addr16
sub
mov
push
fsubrs
rcrl
sbb
loope
pop
mov
sub
in
test
cmp
inc
and
sbb
xor
jmp
dec
inc
ds
xchg
les
jnp
fisubrs
sub
push
and
lcall
pop
or
sbb
pushf
icebp
lcall
mov
mov
xor
das
sub
pop
mov
sub
scas
lahf
stc
aaa
mov
adc
out
push
movsl
movups
fcmovnu
xchg
lock
arpl
mov
testb
jo
ficompl
xchg
push
icebp
push
sub
push
mov
inc
sar
daa
sbb
inc
add
inc
insl
jnp
or
push
outsl
in
cli
aad
fwait
or
sahf
sub
sub
aam
inc
mov
mov
aas
add
or
pop
xchg
push
fucomp
stos
mov
leave
pushl
mov
out
cmpl
inc
std
ja
sub
mov
test
inc
and
stos
mov
pop
in
stc
and
mov
hlt
loop
pop
or
push
int
cs
stos
xchg
or
cmp
or
xor
sti
lds
cmp
mov
or
sub
outsb
xor
xchg
add
frstor
push
xchg
and
in
adc
cltd
fwait
mov
ficoms
add
cmpl
add
xchg
lods
cltd
addr16
mov
outsl
cmp
dec
add
cmp
bound
out
add
roll
sar
inc
pop
icebp
mov
or
and
repnz
aam
movsl
pop
and
fdivs
adc
daa
cld
movsb
or
sub
cmpsl
fnsave
pop
test
ret
daa
fsubl
cwtl
pusha
mov
ret
test
xor
dec
out
add
mov
inc
cmp
dec
xor
pusha
jecxz
sbb
add
ljmp
sbb
mov
ret
push
jle
clc
jecxz
xchg
adc
jecxz
or
ret
ljmp
jmp
cmp
loope,pt
in
clc
dec
daa
add
or
aad
and
cmp
in
loopne
cmovno
adc
xchg
adc
and
inc
xor
idivb
repnz
arpl
cmp
out
dec
gs
adc
mov
dec
pop
jb
cmp
and
loopne
movsb
ljmp
push
fcom
pop
xor
cmp
add
popa
jnp
and
stc
xchg
int
and
jmp
loop
scas
push
pop
mov
sbb
inc
mov
push
push
std
jnp
and
sti
pop
or
push
into
pop
mov
cwtl
mov
les
mov
nop
ss
dec
inc
mov
xor
int3
xchg
mov
xchg
pushf
es
mov
sub
adc
sub
push
jl
or
cmp
mov
xchg
sbb
adc
jae
bound
ss
xor
mov
sahf
call
mov
sub
rorb
jecxz
jp
mov
fucompp
inc
ljmp
addr16
aam
sbb
push
inc
jb
push
lahf
out
test
jp
jg
push
jl
call
or
add
adc
cmpl
inc
mov
movsl
or
out
out
dec
lods
xchg
sbb
out
add
mov
test
in
loop
stc
mov
insl
adc
in
push
mov
sub
cli
lea
pushf
push
dec
fcomi
shlb
call
fsts
test
leave
and
stos
call
fs
mov
xor
cmp
mov
push
push
subb
inc
mov
lcall
push
pushf
add
lahf
jo
jbe
fwait
into
xor
xor
inc
or
inc
push
xor
dec
in
sbb
daa
cmp
or
inc
pusha
xchg
cmp
and
fstl
mov
test
rcrl
jae
jo
adc
jmp
rcll
xor
xlat
and
adc
sbb
fucomp
jp
xor
push
sbb
cmpsl
inc
call
inc
sub
or
cld
out
sti
or
into
push
fs
mov
push
mov
mov
sub
inc
mov
push
jp
jb
mov
repz
xorl
or
or
cs
or
or
lds
cmpsb
and
add
test
mov
loop
pop
sahf
and
jns
insb
adc
cmp
inc
push
pop
aam
js
nop
movsl
hlt
clc
and
xor
mov
mov
repnz
fistl
xchg
mov
int
jmp
sbb
scas
and
fcmovb
pop
mov
nop
push
pusha
and
test
hlt
cmp
xor
pop
inc
mov
fisttpl
and
mov
mov
hlt
sub
jg
popf
mov
clc
imul
ret
cmp
xor
leave
xchg
addr16
mov
xor
or
lods
les
ficomps
pop
xorb
xchg
dec
mov
lods
je
dec
xchg
ret
sbbl
pop
mov
mov
pusha
int
xlat
mov
push
pushf
test
sbb
arpl
sbb
jnp
dec
loope
adc
loopne
push
jno
cmp
sbb
xchg
pop
jno
push
fmulp
or
adc
jg
loope
push
jecxz
js
jmp
loop
out
sbb
js
add
cwtl
lds
jle
dec
out
mov
adc
shlb
loop
jnp
cmp
add
jp
dec
or
mov
xchg
scas
lahf
lret
imul
mulb
sbb
and
inc
icebp
xlat
gs
mov
sub
outsb
mov
movsl
adc
mov
jns
dec
cmc
inc
mov
sahf
sbb
enter
add
stos
cmp
aaa
mov
pop
out
sub
idivb
jg
xchg
pop
in
mov
loope
xchg
test
mov
sub
adc
bound
imul
xlat
adc
and
test
mov
jbe
xor
fistpl
imul
mov
nop
mov
or
sub
or
les
shrl
jmp
xlat
mov
dec
arpl
or
inc
sahf
cmp
scas
sbb
and
xchg
shlb
mov
xchg
fistpll
jl
std
es
sub
popf
push
dec
inc
sarb
adc
xor
jl,pn
shlb
jl
daa
sbb
loope
xor
add
jg
or
fdivrl
xchg
or
ret
mov
stc
dec
popa
popf
dec
out
add
sbb
mov
pop
dec
fs
pop
adcl
cs
adc
add
or
adc
lahf
mov
sbb
call
cmp
comiss
aaa
scas
js
lret
mov
sti
mov
jmp
scas
mov
cmp
xlat
mov
xor
jmp
mov
add
xor
int3
es
imul
push
add
push
mov
jne
bound
mov
mov
scas
pop
push
mov
test
rcll
pop
sbb
mov
test
popf
jge
inc
cmp
in
mov
rclb
pop
pop
fstpt
mov
sarl
das
mov
lret
loope
add
arpl
cli
adc
push
pushf
sub
cmp
call
inc
sub
mov
mov
push
packssdw
push
lcall
mov
pop
sub
jle
std
and
inc
mov
xchg
out
into
cltd
enter
hlt
out
lret
call
js
or
or
mov
in
pushl
outsb
xor
jno
cmpsb
in
fadd
dec
rolb
or
xor
dec
mov
cmp
rorl
inc
je
inc
popa
jbe
stos
rclb
icebp
jmp
cltd
js
dec
and
daa
push
mov
adc
lahf
ds
rcrb
dec
fisttpll
shll
push
pop
dec
mov
lahf
lret
jbe
pop
je
mov
movsl
enter
fsubl
and
mov
addr16
pop
jg
or
outsb
xor
xor
es
cmp
xchg
or
cmp
sbb
jno
and
ret
push
sbb
mov
mov
int3
pop
mov
leave
mov
ja
xor
jns
xor
push
mov
cs
rorb
push
xor
cld
xor
mov
or
addps
sub
in
sbb
rcll
hlt
hlt
int3
pop
push
pop
mov
sbb
lret
mov
pop
sahf
adc
jns
adc
andl
add
mov
mov
test
mov
dec
push
test
mov
test
mov
or
ljmp
pop
pop
adc
push
je
and
mov
add
xchg
xor
pop
jp
inc
and
fmuls
lret
or
pop
pop
jae
in
arpl
ror
shll
mov
push
cmpsl
adc
mov
add
jb
jle
rorl
gs
fwait
cmp
clc
int
leave
pusha
add
xchg
or
and
in
iret
divb
and
and
jecxz
mov
call
es
mov
in
push
push
mov
shll
es
arpl
mov
adc
aaa
sub
mov
fimull
sbb
mov
cmp
sbb
or
inc
mov
fbld
pop
lock
loope
cmc
sete
aad
mov
pop
cmpsl
imul
cmp
sub
dec
sub
xchg
ds
sub
push
push
pop
test
fbld
test
dec
in
je
insl
fisttpll
fs
mov
and
push
clc
add
jle
mov
mov
adc
dec
cwtl
pop
sub
jnp
idiv
stos
xor
cmp
cmp
cmp
add
cwtl
mov
popf
divb
pop
clc
enter
je
orl
js
or
scas
xor
jae
stos
int
xor
jo
in
cmp
inc
jbe
and
fcompl
and
inc
dec
lods
cli
repnz
jnp
mov
fsubrl
and
sub
push
iret
cltd
mov
push
sbb
dec
mov
jmp
lods
cwtl
clc
sub
sbb
sub
outsl
sub
pop
push
inc
movsb
mov
iret
inc
pop
sub
mov
jne
leave
jecxz
mov
mov
je
mov
xor
repnz
inc
or
stc
cmpl
rol
out
mov
push
sub
dec
add
xor
into
sbb
out
faddl
cli
jo
test
mov
or
or
sbb
lds
aas
mov
cmp
and
out
enter
repnz
sub
sbb
hlt
ss
rorb
hlt
jmp
sti
mov
pop
jne
or
jmp
aas
adcl
or
add
shl
dec
scas
repnz
sub
push
dec
add
mul
rol
jl
imul
sbb
cs
add
mov
arpl
iret
xor
pusha
and
inc
inc
shlb
leave
es
das
cwtl
in
test
adc
in
cmp
and
jns
out
test
mov
inc
ljmp
fdivrp
and
sub
dec
movsl
and
xor
js
fwait
ljmp
jae
push
pusha
cmp
mov
xchg
push
in
movsb
es
sub
jo
out
pop
movsb
stos
scas
nop
rep
vmovsd
adc
add
sub
cltd
and
aaa
pop
jo
cmpps
and
stos
insl
popf
mov
sub
cmpsl
testb
ficompl
pop
stos
mov
inc
pop
dec
push
pop
mov
cs
loop
mov
sub
xchg
sub
inc
pop
scas
daa
stos
jp
inc
cmp
aad
mov
out
mov
es
mov
pop
jl
xor
fsub
push
dec
add
cmpsb
out
mov
shr
gs
test
pop
push
cltd
adc
mov
es
and
cmp
adcl
movsb
enter
mov
pop
xchg
xchg
xor
mov
aaa
mov
ja
dec
jmp
stos
mov
mov
ds
ss
fdivr
push
add
adc
push
int3
add
int3
rorl
clc
pusha
or
les
xor
jnp
xor
push
add
and
inc
pop
mov
aas
iret
lcall
jp
out
jle
mov
clc
aad
and
and
jmp
pop
fistps
mov
inc
or
and
loopne
cld
push
xor
test
or
bound
xchg
jo
sbb
lds
sbb
ljmp
aad
aad
cmp
je
sbb
lret
insb
subl
mov
mov
jmp
and
adc
push
mov
loope
mov
jge
jp
mov
icebp
loopne
mov
and
ficoms
xchg
or
clc
add
test
jg,pn
and
clc
sbb
mov
jl
cmc
lods
cmp
dec
imul
push
sbb
jl
in
movl
or
fstpt
sbb
fdivrl
test
in
add
repz
sbb
dec
cmp
daa
inc
div
xchg
dec
or
punpckhbw
inc
jecxz,pn
mov
cmp
pop
fs
jp
lret
mov
xchg
stos
xor
push
out
add
mov
push
aaa
lret
jbe
pop
bswap
addr16
ror
loop
fsubl
xchg
sti
mov
xchg
mov
cmp
sbb
cltd
fucomip
push
rol
add
lods
cmpl
pop
adc
push
push
jp
clc
mov
and
jg
mov
sub
lahf
jne
flds
repz
cmp
arpl
out
pop
sar
pop
xor
cmp
out
inc
ret
dec
iret
and
xchg
mov
push
ja
stc
cmp
sub
and
dec
and
or
jnp
and
add
fldcw
and
mov
loopne
or
push
hlt
push
testb
bound
mov
or
jb
inc
je
lcall
or
lret
cltd
cmp
xchg
mov
aam
jecxz
in
addr16
dec
mov
mov
mull
add
mov
addr16
inc
ds
mov
sub
push
mov
loop
inc
movsb
dec
popf
xlat
mov
dec
or
shll
ds
xor
mov
ds
icebp
xor
xor
out
mov
jg
push
or
sub
pushf
sub
adc
mov
add
inc
adc
jnp
jge
leave
les
in
pop
and
fwait
js
push
push
pop
jb
cmp
fdiv
sub
jecxz
jle
push
dec
sub
jno
fcmovnb
adc
adc
dec
inc
jge
sub
xchg
push
xchg
std
sub
sub
fnstcw
jo
fisttps
fists
outsb
outsl
mov
mov
faddl
cmp
out
mov
inc
icebp
lret
loopne
fwait
pop
mulb
add
shlb
gs
fisubl
mov
sbb
jb
xchg
inc
dec
jno
rcr
ds
adc
jo
test
mov
xchg
imul
fwait
mov
xor
in
or
ja
daa
loop
and
rol
mov
jno
mov
test
in
jmp
out
pusha
in
inc
pop
mov
rcr
in
lds
int3
pop
xchg
dec
rorb
sub
test
roll
ss
add
adc
adcl
adc
lahf
sbb
hlt
xchg
scas
addr16
or
inc
pop
sub
fiadds
cld
push
xor
push
ljmp
testl
or
jmp
pop
ja
iret
pop
xchg
push
loop
pop
jmp
lret
push
mov
sub
sub
or
push
dec
inc
xchg
push
test
ljmp
sahf
fucomi
cmpsb
xor
mov
mov
es
push
inc
dec
xchg
jo
aaa
inc
mov
in
add
bound
cli
add
xchg
jle
mov
push
push
pop
leave
sbbl
mov
rorl
adc
xchg
mov
ljmp
loopne
sub
add
enter
fisttpll
ss
sahf
dec
call
dec
push
shlb
or
mov
push
cltd
sti
jl
xorl
jmp
and
and
test
adc
movsl
jno
loope
test
dec
mov
sbb
push
js
jno
add
lahf
push
les
nop
dec
xlat
cwtl
bswap
cld
fidivrs
test
cmp
mov
push
outsl
dec
insl
fsubrp
pop
cmpsb
lret
jl
sub
fcoms
out
jmp
movsb
repnz
outsl
sub
xchg
in
out
sub
pop
insb
and
mov
movsl
fildl
test
cmp
je
push
ficompl
pop
dec
add
mov
sbb
insl
sarb
push
imul
cmpsb
movsb
or
fldenv
movsb
fistl
fstpt
mov
ds
lret
xchg
dec
rcrl
cmpsl
adc
stc
dec
mov
mov
sub
pop
push
mulb
mov
add
out
sarl
pop
std
add
or
fs
xor
jmp
and
in
lcall
cmp
dec
add
pop
jno
or
pop
gs
mov
xchg
sbb
shlb
and
mov
xchg
loopne
lea
mov
jns
push
movsl
lret
and
testb
ficoml
push
leave
aas
popf
andl
cmpsb
lds
pop
mov
daa
push
adc
aaa
jg
push
pop
pop
or
pop
mov
es
jge
lds
push
and
push
add
testl
ret
jl
fistpl
add
nop
pop
sbb
push
mov
addb
push
cmp
stc
mov
notl
push
inc
push
test
lahf
add
adc
cmpsb
mov
sbb
test
rolb
mov
sbb
mov
jns
jmp
addr16
and
das
pusha
xchg
and
cmpsl
pop
sub
cmp
insl
or
rorb
std
sbb
es
aam
mov
or
lods
sbbl
jge
cli
dec
out
dec
mov
dec
adc
fstpt
sub
add
or
aaa
or
jns
stc
daa
dec
pop
sbb
mov
insl
es
or
daa
fninit
adc
inc
inc
std
out
stc
js
pop
jne
cmp
sbb
xor
jnp
add
sbb
pushf
std
mov
xlat
pop
pop
dec
fimull
dec
mov
enter
push
stc
into
pop
rorb
push
adc
and
pop
movsb
cli
cmp
jmp
loope
ret
and
xor
mov
loope
jno
aaa
pop
and
xlat
add
dec
adcb
or
or
leave
sub
xor
fs
inc
mov
into
ljmp
insb
call
inc
fnstsw
stos
roll
stc
outsl
fwait
je
xor
popf
lahf
push
outsl
divb
loope
int3
ds
repz
jg
mov
popf
js
rcl
push
mov
pop
jb
aaa
add
ljmp
cld
lds
je
repnz
mov
mov
js
outsb
push
push
and
xor
popf
cld
xor
arpl
out
cmc
add
and
and
xor
adc
sub
mov
push
sbb
sub
loope
bound
push
jmp
shrb
out
xchg
sbb
push
fsubl
leave
mov
iret
inc
loopne
pop
pop
sbb
mov
pushf
push
mov
sbb
addl
std
repz
jb
ficomps
and
sbb
adc
pop
cmp
xchg
and
adc
loope
mov
push
mov
xor
push
stos
ds
shr
andl
out
pusha
pop
and
jmp
push
xor
int
repnz
test
add
push
sar
adc
sub
movsl
mov
jmp
adc
sbb
inc
and
pop
push
xchg
push
call
aas
ret
dec
xor
loopne
add
jmp
pop
adc
pop
jmp
movsb
out
sub
int3
and
and
jmp
jmp
neg
push
dec
jbe
adc
jnp
mov
ds
and
cmp
ret
nop
out
imul
sti
test
cld
cltd
mov
fs
xlat
cmp
xchg
xchg
cmp
push
pop
dec
lahf
sahf
dec
rcll
push
testb
or
jae
pop
lcall
adc
popf
mov
es
loope
dec
aas
pusha
sbb
inc
xor
and
add
jae
les
push
stc
jl
sti
jg
mov
mov
cld
mov
xor
data16
pop
mov
pop
xor
cmp
lods
and
and
loopne
push
or
mov
test
mov
loop
pushf
push
pop
pop
fildl
lods
movsl
adc
sub
push
outsl
sub
inc
es
dec
cli
rorb
sbb
push
pop
lods
mov
pop
xchg
dec
sbb
jmp
test
mov
dec
sti
cmc
aaa
sbb
cltd
std
pop
cwtl
xor
iret
nop
jg
outsb
mov
fldl
test
cmp
stos
in
adc
es
lods
daa
mov
clc
pop
or
sti
push
add
repnz
jbe
aam
lahf
and
imul
pop
mov
packssdw
andl
mov
scas
pop
pop
popf
repz
jae
jg
sahf
call
or
ret
sub
and
xchg
fwait
dec
or
repz
aam
cmc
std
sbb
cmp
cmc
mov
and
fidivs
gs
cmp
xchg
sbb
sub
or
adc
jp
fcmovb
cs
nop
stc
repz
dec
cmp
jg
ss
cltd
adc
outsl
cmp
mov
ljmp
push
and
adc
mov
insl
push
repz
enter
testl
insl
sbb
jmp
cli
and
aaa
xchg
sub
cs
jecxz
and
mov
icebp
or
mov
inc
push
sbb
mov
daa
pop
punpcklwd
mov
jmp
xor
dec
sbb
mull
sub
and
adc
push
in
adc
in
jns
mov
and
push
lds
in
pushf
mov
xor
aas
xlat
iret
jge
arpl
jbe
std
insl
sub
and
sub
js
repz
jnp
movsb
loope
in
inc
sbb
mov
mov
in
in
imul
add
mov
and
jae
enter
adc
or
mov
xchg
push
cs
adc
fwait
dec
test
mov
fstp
iret
stos
repnz
dec
mov
ljmp
push
pop
cwtl
or
clc
cld
lahf
icebp
popf
shrb
iret
ljmp
lods
cmp
sbb
hlt
int3
sahf
sbb
in
in
mov
jns
aas
outsl
mov
or
aam
jmp
inc
cmp
in
mov
es
push
xchg
inc
xchg
lret
inc
popa
xor
mov
dec
cltd
movl
idivl
cmp
jnp
lds
int
push
pop
mov
in
lods
test
pop
pop
xor
sub
mov
jae
or
pusha
and
jnp
push
mov
icebp
and
fistl
adc
mov
sarb
sub
scas
xor
push
enter
mov
and
ss
push
and
mov
lods
pusha
pop
inc
movb
fstpl
loopne
push
and
scas
ss
xor
lret
sub
mov
lock
jg
arpl
jge
cltd
xlat
push
or
cmp
mov
imul
clc
pop
fistpll
popf
push
and
insb
icebp
adc
imul
add
lods
icebp
and
xor
mov
xor
out
movsb
cmpl
cld
adc
jmp
daa
push
ljmp
xor
movsl
inc
rsqrtps
fucomip
xchg
push
pop
pop
loope
shll
inc
fcomp
das
loopne
fldl2t
test
push
xchg
xor
pop
inc
cwtl
aas
push
and
inc
sqrtps
in
aam
lret
pop
mov
sub
lret
jne
and
adc
stc
xor
aam
leave
xchg
loope
xor
fsubl
cmpsb
pop
sub
pop
aad
loopne
out
repz
stos
dec
adc
sub
test
jns
fnstsw
mov
cmp
add
call
xor
iret
bound
sbb
sbb
pop
inc
add
rcr
jle
and
std
adc
adc
out
lret
insb
lahf
std
lcall
and
in
add
lods
pop
mov
sub
mov
add
push
mov
call
aaa
ja
filds
and
sbb
stos
sub
inc
jecxz
fisttpl
fmuls
inc
sub
in
jg
push
sbb
fstpt
movsl
daa
test
mov
jnp
addr16
push
inc
adc
xchg
xor
mov
mov
icebp
cmc
xchg
cs
jns
les
adc
sbbb
sub
addr16
jecxz
jmp
mov
fstpl
jecxz
test
jg
lcall
testl
out
rorb
lock
test
pop
xor
mov
jg
inc
fildl
cmpsb
loopne
cli
jmp
dec
dec
mov
inc
adc
scas
sub
mov
xor
push
or
in
aad
scas
mov
or
fstpl
loope
movsb
or
nop
dec
sub
lret
mov
xchg
cltd
pop
xchg
mov
adc
cmpsl
cmc
icebp
imul
cmpsl
clc
nop
lock
ds
call
shrl
adc
cld
and
lods
adc
or
jb
cld
fwait
in
aas
ja
pusha
movsl
mov
enter
repnz
push
or
push
pop
in
push
aas
lods
stos
daa
in
enter
sti
out
dec
test
and
cld
pop
cwtl
in
sub
in
orl
out
pop
mov
movsb
mov
pusha
xchg
jp
gs
and
cmp
enter
mov
cmp
xchg
adc
cmp
push
sahf
lds
cwtl
out
js
cmp
or
insb
sub
sub
and
mov
lods
and
sbb
rclb
ja
jmp
out
inc
arpl
add
jb
mov
es
sti
out
xchg
jmp
mov
or
push
subl
das
lahf
push
push
xchg
pop
int
fwait
pop
dec
sub
sub
clc
xor
mov
add
repnz
xor
mov
xor
enter
sbb
dec
std
adc
jmp
stos
sub
xchg
loopne
xchg
jns
add
mov
jecxz
pop
mov
sub
jae
xor
sbb
das
sti
add
add
adc
sbb
and
inc
jmp
mov
ficompl
mov
mov
ljmp
or
jge
and
test
int3
scas
inc
add
xchg
mov
xchg
or
push
jmp
xchg
rclb
fdivrs
inc
jno
js
jge
pop
idivl
fdivr
loopne
cwtl
imul
sti
inc
popa
or
xchg
mov
add
or
mov
and
popa
in
add
jecxz
hlt
push
int3
inc
sub
xor
mov
gs
lcall
and
cli
sbb
mov
mov
sbb
das
out
and
jne
cwtl
or
inc
mov
iret
mov
aaa
dec
sub
or
xchg
dec
and
and
fwait
cmp
jecxz
sti
inc
jge
sbb
sub
stos
call
test
pushf
cmp
cmp
or
adc
out
addb
push
addr16
and
mov
and
and
dec
xchg
cmp
out
lds
icebp
scas
jae
jb
adc
jbe
js
jge
push
arpl
dec
ret
test
pop
cmp
xor
mov
sub
int3
dec
loope
lock
lock
cmp
cmp
push
mov
in
cmp
notl
mov
popa
adc
bound
sub
sub
gs
mov
pop
mov
mul
ss
sub
lea
cmp
scas
xor
push
jnp
stos
pushf
repnz
mov
popf
stos
fwait
loop
out
adc
aas
push
mov
inc
std
dec
jl
sub
movsl
inc
sub
and
xchg
fmulp
xchg
add
xchg
push
mov
test
repz
mov
jb
sbb
and
loopne
sbb
cmp
add
pop
mov
movsw
or
adc
push
aaa
cld
jle
fildll
pushf
xor
jns
sbb
jmp
xor
testb
aas
or
and
shll
gs
and
insl
inc
repz
xchg
xchg
xchg
xchg
cmp
cmp
fcom
sbb
jne
out
or
cmp
or
dec
inc
mov
cmova
jmp
andl
bound
cltd
mov
or
out
xchg
and
cmp
mov
mov
mov
jmp
pop
or
lock
daa
in
mov
push
push
rorb
in
data16
mov
fdivp
std
sbb
std
push
dec
dec
sbb
pop
push
fists
loop
mov
sti
testl
inc
test
jmp
and
xchg
jmp
mov
xchg
scas
sbb
frstor
loope
jbe
in
add
cmp
push
fs
add
xor
cmp
dec
and
cmp
jle
lods
sbb
movsl
fcoms
test
pusha
test
sub
fmulp
in
shlb
pop
dec
pop
pop
jb
xor
mov
in
adc
push
das
clc
pop
and
or
inc
jne
cli
mov
push
sar
aad
xchg
xchg
in
and
call
adc
jne
sub
orb
call
push
ret
mull
mov
fsubl
and
je
fdivrp
es
xor
pop
cld
rclb
iret
mov
xchg
sbb
out
and
and
and
mov
xchg
emms
test
inc
repz
cwtl
lret
add
lods
sbb
lcall
adc
movsl
sub
int
or
sbb
jp
and
ret
scas
test
xchg
setno
stc
mov
ljmp
jo
pushf
pop
sbb
lds
pop
inc
std
stos
sub
sub
mov
shrb
xor
or
outsb
outsl
mov
fistps
insl
mov
ljmp
aam
sub
lcall
movsl
and
fs
sub
andl
cmp
xchg
jge
sub
or
add
add
loope
and
push
mov
and
dec
cli
sbb
mov
fnstenv
sub
in
lcall
stos
jg
es
sub
imul
dec
dec
sub
sahf
fstpt
leave
mov
xor
popa
rcll
jae
jle
aad
jle
fucomi
mov
sbb
jbe
xor
int
fisubrs
pop
mov
add
std
sub
push
jns
das
push
pop
jo
inc
inc
add
mov
mov
sub
ja
mov
scas
xchg
and
adc
js
test
lock
lds
mov
je
fildl
aad
js
in
scas
mov
sbb
in
pop
xchg
xchg
imul
pop
enter
daa
or
sbb
sbb
psubsw
mov
and
pop
in
gs
decl
inc
imul
jge
ss
xor
shll
and
aad
and
cltd
repz
ljmp
xchg
stos
rcrb
jnp
jg
cmpsb
pop
stc
xchg
and
pop
cmc
xor
fwait
sbb
daa
ret
ret
pushf
rcr
mov
lcall
add
ret
or
pop
xor
pop
jecxz
dec
sub
and
fstpl
push
pop
mov
jns
repnz
out
ret
mov
cmp
mov
fcomps
out
sbb
mov
xchg
outsb
sbb
mov
mov
adc
dec
xchg
test
test
jno
pop
dec
jmp
cld
mov
pop
std
pop
or
push
aam
inc
roll
or
sbb
mov
xchg
jmp
arpl
push
push
add
lea
scas
xchg
and
push
insl
xor
mov
or
std
inc
jecxz
jge
cli
dec
push
adc
pop
rclb
or
in
and
sub
pop
or
sbb
and
call
ret
sbb
mov
push
sbb
es
in
fstps
sub
or
mov
sub
cmp
aam
pop
das
push
pop
lods
rcrb
notb
out
jle
lds
mov
mov
xor
jp
jge
sbb
mov
adc
arpl
cmpsl
and
das
mov
jl
dec
das
xor
mov
sbb
js
test
add
pop
test
xor
daa
fsubrl
test
dec
xor
push
pop
jne
cmp
mov
or
push
sbb
or
mov
push
mov
fstps
insb
xor
pop
cmp
cwtl
stc
in
xor
xor
sbb
jbe
push
mov
clc
push
enter
pop
pop
shrb
jle
pop
jno
xor
push
or
mov
je
xchg
mov
enter
mov
in
hlt
or
inc
mov
jge
jl
xchg
sub
and
fcompl
mov
adc
and
add
sub
popf
lcall
or
dec
lret
mov
test
es
sub
inc
or
ljmp
sub
stc
pop
in
movsb
add
scas
push
xor
lahf
into
pop
popa
mov
mov
jle
sbb
push
mov
sub
enter
mov
mov
cmp
frstor
mov
loope
sbb
cmp
lret
push
fisubl
das
mov
loope
pop
lret
popa
mov
dec
mov
xor
add
or
ret
pop
or
dec
sti
enter
dec
pop
jo
cmp
push
enter
loopne
pop
pop
mov
pop
jbe
pop
mov
loop
cmp
repz
repz
cmp
repz
cmp
repz
cmp
in
cmc
loop
jle
mov
popf
add
pop
push
adc
testl
or
ja
mov
adc
jns
jne
fs
sub
nop
stc
adc
fldl
test
fs
lock
rcrb
clc
pop
repnz
dec
aad
clc
jne
pop
xchg
sub
and
and
or
mov
dec
or
popf
mov
les
pop
mov
cmpsl
aaa
pop
xor
movsl
adc
movsl
sbb
add
pop
pop
cmc
stc
fdivr
mov
lds
xchg
jbe
test
jmp
mov
cmc
inc
mov
sub
dec
addl
les
fstps
scas
pop
xchg
movsb
fisubrl
mov
add
cmp
cmpl
add
out
mov
das
inc
pop
test
mov
sbb
es
dec
aad
clc
loopne
arpl
mov
mov
stos
lcall
in
cwtl
repz
xor
loopne
ljmp
cmpsb
roll
mov
fldenv
xor
fisttps
mov
sarb
lcall
inc
ret
mov
sbb
lret
out
call
loope
stc
jge
addb
sarl
out
adc
xorl
cmpsb
and
add
and
int3
pop
aam
sub
cmpsb
clc
daa
sbb
loop
mov
mov
lret
nop
xor
and
adc
test
inc
stc
or
sti
pop
mov
push
sub
push
in
dec
mov
sbb
je
push
xchg
stos
push
inc
pop
fs
sysret
mov
shl
mov
pop
mov
loope
jbe
cmp
loop
push
jne
test
fbld
mov
and
addr16
fwait
leave
dec
sub
dec
sub
ja
int
fs
int3
mov
hlt
xchg
dec
pop
loope
sbb
or
mov
das
mov
sbb
mov
arpl
dec
pop
or
sub
sti
loop
jg
cmpsb
add
int3
cmp
pop
fisubs
fadd
dec
mov
test
push
sahf
test
xor
int
in
mov
jbe
fiaddl
push
adc
sbb
fcmovnu
addb
mov
stc
push
push
int3
and
in
jge
sti
mov
push
push
pop
mov
sbb
arpl
push
sbb
ja
cmp
mov
sbb
jecxz
out
lods
sbb
xchg
es
mov
xchg
into
bound
fdivl
add
mov
jle
jb
mov
movsb
add
divb
cmp
popf
testb
xor
data16
push
loopne
dec
rcr
xor
xor
lcall
pushf
hlt
and
mov
mov
dec
stos
fdivl
in
cmp
cmp
mov
mov
sbb
dec
cltd
xor
sub
mov
fildl
call
jns
movsb
xor
jp
push
cmp
sbb
cmp
fs
out
enter
aad
or
lds
cmp
xor
mov
mov
fistps
shl
xor
jl
push
faddl
aaa
inc
dec
sub
cmp
sbbl
xor
fsub
addr16
xor
mov
movsb
inc
and
mov
or
mov
fdivrs
addl
stc
cmp
aaa
and
mov
add
mov
sub
gs
sub
insl
dec
push
mov
and
pop
or
mov
repnz
mov
push
bound
mov
xchg
push
dec
mov
cltd
mov
sahf
cld
xchg
mov
push
sbb
adc
in
cmp
jb
cs
jmp
ror
test
loope
inc
pop
and
mov
xor
adc
stos
push
orl
mov
dec
ja
push
add
and
and
into
push
imul
testl
fs
xlat
dec
aam
ja
cld
dec
shl
mov
fimull
mov
test
addb
insb
push
mov
mov
jns
and
xchg
cmpsl
push
icebp
cmp
outsb
or
adc
adc
xchg
dec
hlt
cwtl
mov
sub
jnp
pop
xchg
aad
jae
cwtl
cmp
or
or
js
inc
fmul
and
mov
es
push
xchg
fsts
fsub
sarl
xchg
dec
ret
inc
or
test
mov
and
mov
push
repz
dec
je
pushf
push
cmpsb
mov
sbb
mov
mov
xor
pop
call
or
sbb
mov
nop
fnstcw
push
and
fstp
mov
shlb
jb
lcall
cld
jmp
ljmp
sahf
pmaxub
stc
sbb
cltd
fwait
outsb
movsb
ret
fucomip
xor
test
push
stos
outsb
pusha
lfs
mov
rolb
cld
mov
sbb
push
xor
cltd
jge
dec
add
stos
sub
pop
mov
xchg
mov
pop
push
add
mov
cld
test
push
inc
push
and
or
pop
lahf
adc
loopne
sbb
push
out
lcall
mov
movsb
or
adc
dec
test
clc
sahf
pushl
repz
js
into
lods
cmpsl
mov
jnp
xlat
inc
sub
ljmp
pop
in
std
inc
xor
sbb
mov
das
mov
inc
mov
sbb
push
cwtl
fildll
cli
pop
inc
imul
sub
ss
aam
test
dec
push
test
pop
aam
rclb
sbb
sbb
dec
mov
addr16
mov
lret
in
movsb
pusha
xor
filds
and
in
and
ja
pop
les
loope,pn
mov
ljmp
mov
daa
stos
enter
pop
xchg
mov
adc
pop
mov
push
adc
adc
xor
mov
push
jle
xor
insl
shlb
or
xorl
cmp
adc
popa
sub
add
pusha
add
pop
aas
ss
into
pop
mov
aad
inc
scas
in
jg
arpl
test
sbb
jnp
in
ret
inc
outsb
sbb
pusha
call
sbb
adc
xlat
ret
aad
fwait
enter
push
adc
fst
outsb
loope
cmp
shl
or
imul
sub
sar
aad
cltd
push
incl
jbe
fidivrl
sbb
pop
out
loopne
popa
pushf
inc
loope,pn
and
adc
push
aaa
insb
inc
or
incl
and
push
mov
xchg
aad
filds
sub
fisttps
mov
and
in
push
lods
add
mov
sub
ds
xchg
sbb
jnp
fmull
jg
push
pusha
and
in
xor
mov
popf
cmp
subl
fucomp
jp
rcrl
jno
test
mov
inc
std
dec
push
out
ds
mov
ret
adc
aaa
neg
shll
add
pop
mov
ss
test
adc
mov
mov
jecxz
or
mov
std
jg
push
cld
pop
xor
sub
jg
mov
inc
jo
push
xor
jo
lret
sub
cmp
xchg
and
insb
inc
jae
scas
push
negb
or
mov
push
int3
std
fwait
js
ret
and
ficoms
and
out
jp
or
in
and
cmp
in
push
nop
ss
or
xchg
shl
pusha
lods
loopne
jmp
sub
roll
inc
addr16
idivb
stos
add
ja
adc
push
sub
repz
mov
sarb
and
lods
jecxz
xorl
and
ret
lods
xchg
or
add
cmpsb
lret
push
mov
xor
push
add
cwtl
jno
add
sub
divl
pop
adc
mov
mov
testb
adc
mov
push
jno
pop
sahf
mov
aas
je
andb
sub
mov
jne
movsl
jo
call
sub
xor
shll
adc
test
test
jbe
aas
pop
repz
cmp
das
fsubrs
pusha
jl
pop
ljmp
cli
lods
es
push
jp
mov
and
incb
stos
dec
mov
outsl
and
mov
mov
fbstp
xchg
lcall
fwait
mov
sub
popf
sbbl
das
push
push
xor
sbb
ficoml
push
ds
dec
test
pop
inc
push
insl
loope
ret
dec
push
rcl
pop
sarb
ss
lock
push
lret
sub
cmp
xchg
int
mov
cld
inc
mov
cmp
sbb
bts
add
jnp
cmp
dec
mov
dec
rcrl
arpl
ljmp
clc
sbb
dec
cmp
jge
add
cmp
or
mov
cs
and
data16
xor
push
cmp
pop
das
pop
cld
cld
sub
add
loopne
jmp
fistpl
pop
mov
fdivrs
cmp
lret
cwtl
int3
or
mov
in
sbb
popa
mov
dec
or
mov
xchg
cli
xor
cs
lret
bound
sbb
es
mov
and
add
and
call
mov
mov
push
and
mov
dec
dec
call
in
aam
loope
dec
fstl
jl
stos
mov
inc
test
mov
clc
ficomps
arpl
flds
scas
mov
mov
mov
push
sbb
jle
sti
cmp
xlat
pop
enter
dec
add
packuswb
insl
xorb
pop
push
dec
jo
xchg
dec
push
out
or
add
pop
or
pop
xchg
push
es
dec
sarb
sahf
mov
test
std
out
or
loope
leave
aam
repnz
and
scas
push
shr
call
fldl
cli
mov
insl
jbe
mov
lock
adc
orb
cmp
shl
jns
xor
mov
mov
inc
enter
cwtl
mov
pop
dec
adc
jecxz
mov
rcl
add
and
mov
jmp
inc
ljmp
sbb
insl
jnp
jae
mov
pop
stos
jne
stos
idivb
push
int
mov
pop
pushf
push
ret
pop
in
in
pop
and
xchg
push
cli
pop
pop
es
push
and
loope
sbb
pop
dec
stc
and
inc
clc
lods
cmc
xor
xchg
xchg
lret
push
fwait
stos
test
insl
pop
mov
cmp
fs
xchg
ret
leave
push
cmpsb
jg
loopne
or
add
push
inc
lahf
add
movsl
cmpl
pop
xor
loope
adc
adc
pop
out
mov
add
dec
xchg
popf
sbb
loopne
loop
mov
pop
or
imul
dec
jle
mov
and
dec
pusha
jnp
inc
xchg
add
mov
test
jae
jne
sub
loop
pop
movsl
adc
mov
imul
ss
mov
stos
ret
and
outsl
pop
xchg
test
mov
lret
pop
adc
stos
inc
jecxz,pn
pop
mov
jmp
pushf
lret
xor
imul
fldenv
or
js
hlt
aad
and
add
push
xor
mov
ret
js
fimuls
inc
and
insl
aad
nop
xchg
aas
jnp
std
fistl
sbb
mov
sub
mov
outsb
iret
movsl
es
push
add
nop
inc
pop
cld
mov
cmp
orl
arpl
add
dec
xor
lret
push
sbb
mov
mov
out
movsl
mov
lods
fisttps
arpl
dec
mov
aaa
dec
inc
or
stos
inc
test
push
roll
dec
std
cmpsl
mov
jns
ss
mov
ret
mov
movsb
mov
scas
pop
mov
enter
xor
loop
mov
testl
cmpsb
filds
cmp
mov
sbb
and
into
inc
into
sub
cmp
and
pop
int3
lea
mov
sti
xor
jno
pop
mov
sbb
rcrl
adc
jmp
aam
xchg
das
and
xor
xor
push
xchg
repnz
inc
addr16
aas
subl
test
xchg
ljmp
pop
popf
aas
jp
cli
mov
imul
mov
pop
stc
mov
cmp
lahf
mov
jp
pop
pop
dec
xor
arpl
outsb
clc
sbbb
stos
jle
cmpsb
dec
les
xchg
adc
stc
sbb
and
mov
je
mov
sahf
out
sbb
adc
repz
adc
je
cld
fwait
ja
sahf
mov
cmpsl
sbb
aaa
lock
test
loop
ret
xor
enter
sbb
fstps
sbb
mov
shrb
addl
sub
arpl
jne
lret
std
sti
inc
mov
movsb
std
repnz
jmp
lods
sbb
jmp
xor
xchg
js
sub
ljmp
push
loopne
les
cld
dec
pop
daa
in
sbb
fimull
mov
les
add
dec
hlt
inc
test
mov
decb
insl
pop
cli
sub
sbb
shr
push
inc
or
std
insl
ljmp
sahf
out
aaa
cwtl
mov
scas
sbbl
aaa
sti
sbb
pop
int3
insb
jl
lods
push
int3
pop
stc
jmp
cmp
xor
mov
out
fidivrl
sub
mov
adc
dec
fld
or
lret
sub
jne
aas
out
mov
imul
js
hlt
jb
call
jmp
adc
addl
mov
repz
push
sarl
dec
insl
mov
sbb
pop
fcoms
fstps
loopne
lret
aaa
mov
push
in
fldenv
jge
or
in
mov
or
mov
pop
push
stc
aam
add
movsb
leave
int3
fwait
and
lds
lcall
push
xor
rol
loopnew
sarb
jl
ret
adc
in
mov
pop
inc
scas
push
addl
xor
mov
lret
or
sbb
dec
mov
rcrl
mov
and
xchg
push
ds
cmp
sarl
xor
adc
pop
subb
mov
cmp
nop
pop
push
outsl
stc
jmp
mov
in
bound
mov
cmpsl
adc
mov
cmp
into
add
or
lahf
pop
leave
ret
push
and
shlb
lret
cmp
or
cmp
into
dec
leave
jno
mov
and
cmp
adc
pop
pusha
mov
ficompl
aaa
dec
pop
dec
loopne
ret
mov
lcall
adc
cmpsb
popf
mov
jne
les
stc
dec
cwtl
shrl
cmp
mov
sub
pusha
lret
adc
mov
or
dec
mov
xchg
jle
stos
ljmp
push
adc
jle
jp
testl
jge
adcl
fidivs
popa
sbb
dec
cli
sahf
mov
mov
jmp
or
jbe
jg
push
mov
xor
iret
arpl
movsl
cvtpi2ps
or
fiadds
adc
loopne
sbb
push
xchg
fidivs
loope
xor
dec
stc
and
and
incb
jecxz
dec
sbb
or
iret
sti
lcall
push
call
xrelease
cmp
fmull
orl
data16
mov
fadd
sbb
aam
mov
insl
jns
mov
loopne
subl
sbb
ret
jo
lds
sahf
sub
pop
aas
and
ror
cmp
mov
mov
das
out
or
sbb
test
ret
adc
pop
loop
cmp
inc
sbb
add
sarl
inc
xchg
movsb
xor
inc
push
push
jns
xor
loop
pop
iret
das
int
mov
add
test
test
fisttps
push
stos
xlat
stos
daa
sbb
and
add
mov
std
push
jmp
aad
push
mov
lcall
int3
pop
in
dec
xlat
mov
cmpsb
aaa
data16
in
out
cmpsb
fstp
or
and
fstps
enter
andnps
jg
sbbl
jle
jb
dec
lods
out
out
mov
xor
hlt
loopne
jbe
jae
sub
sbb
pop
cld
std
jns
inc
sub
cmp
inc
xor
test
shlb
jbe
sbb
pop
cmp
sbb
cmp
daa
push
insl
jp
sub
dec
subb
outsl
push
add
mov
and
sti
push
insb
daa
cmp
push
push
std
test
sub
lahf
out
xchg
sbb
jo
out
xchg
in
mov
mov
jmp
pop
icebp
stos
sbb
sarb
iret
mov
push
cmc
inc
and
push
sub
fcoml
sbb
cmp
xchg
andl
aam
adc
pushf
xchg
sbb
mov
jmp
xchg
fs
xchg
in
dec
enter
in
add
test
fbld
fstpl
and
pop
js
push
sub
ljmp
sub
repz
hlt
fdivr
or
cmpsb
fsubl
in
lea
cmp
add
cmpsb
cmc
cmp
inc
xor
es
or
adcb
jne
mov
negl
stos
jle
mov
push
fcmovu
pop
inc
xchg
ss
xchg
cmp
pop
push
sub
das
inc
jmp
sbb
add
sub
xchg
dec
scas
and
in
mov
shl
mov
mov
mov
fstpt
scas
imul
je
cmpsb
pop
insl
mov
rcrb
or
lods
inc
imul
jle
testl
cmp
mov
rolb
adc
popf
add
pslld
xchg
cmp
jno
pusha
daa
rorb
inc
and
leave
add
inc
jmp
cmpsl
seto
sub
enter
jns
add
daa
test
push
push
xor
push
mov
mov
push
mov
push
mov
fistpl
push
cmp
sub
cld
dec
pop
and
jmp
int
aaa
daa
sbb
and
and
in
push
push
pop
sub
int3
jl
pushf
jb
test
pop
adc
repnz
insl
push
loopne
or
mov
jmp
xlat
cmc
aam
pop
push
clc
cmp
adcb
xor
movsl
iret
inc
fcomp
arpl
arpl
mov
lahf
mov
push
cs
in
inc
dec
sbb
push
and
xchg
movsb
cld
ss
loopne
xlat
test
cmp
add
decb
sti
cmpsl
push
test
shr
xchg
sti
mov
and
mov
pusha
mov
fidivs
xchg
mov
and
pushf
push
test
in
dec
je
cmp
int3
fnstsw
push
mov
jle
pop
bound
cmp
cwtl
enter
xchg
sbb
daa
aam
sub
sbb
or
add
jne
cmp
xchg
sbb
shrb
sub
aad
xchg
dec
cmpb
mov
inc
add
or
outsl
push
idivl
js
or
addr16
push
es
sub
dec
aas
shll
or
dec
rcll
add
dec
divb
sar
mov
mov
pusha
xchg
mov
daa
jl
jg
pop
add
clc
push
insl
dec
cmp
inc
or
sub
in
mov
shl
rolb
xor
mov
test
sbb
out
lock
sti
mov
xchg
leave
pop
jb
aas
cli
jae
movsb
jae
mov
arpl
mov
lcall
shll
repz
sbb
dec
mov
sbb
dec
pop
fisubl
incb
loopne
cmp
xor
jmp
pop
mov
in
mov
add
adc
mov
lods
or
cmp
add
adc
sti
sub
or
scas
mov
sarb
jle
sub
pop
repnz
cmp
stos
xor
pop
inc
dec
es
es
shrb
mov
repz
std
stos
jmp
sub
arpl
fidivrs
xor
inc
lods
sbb
sub
aam
jp
xor
xor
stc
jecxz
fwait
jmp
insl
mov
rcrb
fs
sub
cld
repz
inc
sub
stos
or
xchg
repnz
mov
add
jns
pop
mov
cmp
dec
sbb
fdivrs
out
rorl
lods
mov
add
sbb
fcoms
mov
popf
jecxz
or
sti
sbb
xor
arpl
fsts
xor
shlb
cmp
out
insb
cs
xor
fcompl
or
test
adc
adc
pop
mov
call
sub
cmp
jecxz
mov
cld
pop
loope
and
mov
or
movsl
or
aaa
in
lcall
xor
bnd
lock
xchg
mov
aas
mov
push
add
mov
fwait
mov
jecxz
xlat
mov
aam
and
cmc
pushf
outsl
test
and
or
sarl
pushf
repnz
mov
adcb
adc
pop
pop
enter
leave
mov
enter
dec
or
cmp
mov
lods
adcl
pop
ficompl
ljmp
xchg
pop
ss
call
test
aaa
push
jl
pop
add
jae
jnp
lcall
lret
dec
xchg
clc
jecxz
pop
mov
push
scas
jge
dec
and
jns
loop
loop
sbb
loopne
mov
jp
out
addb
cli
stos
mov
jg
push
fcom
shlb
mov
sti
push
aam
inc
pop
xor
mov
lcall
test
minps
dec
andl
pushf
imul
stos
add
xor
lret
mov
sub
mov
push
and
and
cmp
xchg
into
mov
lods
jg
jo
and
out
daa
scas
mov
cli
aaa
pop
cmp
lea
ljmp
and
mov
mov
pusha
sub
ds
pop
mov
mov
ret
push
mov
popf
pop
pop
cmpsl
jecxz
inc
addb
and
jecxz
mov
lock
push
adcl
pop
mov
adc
dec
mov
and
mov
dec
lods
inc
jmp
das
or
lock
std
xchg
xchg
popa
cmpsb
addr16
scas
mov
adc
jmp
and
lret
outsb
cmp
push
inc
add
pop
movsl
dec
cld
scas
mov
ja
mov
shrb
imul
popf
dec
jae
jmp
loop
mov
jp
arpl
mov
jecxz
fcmovnbe
sti
or
mov
dec
inc
mov
movsb
jmp
iret
dec
push
pop
mov
jbe
test
add
js
popf
sbb
fistl
pop
and
pop
inc
cmp
mov
pop
test
ss
add
jecxz
movsb
pop
jbe
idivb
push
test
ret
lea
sbb
inc
adc
adc
scas
xchg
movsl
out
invd
ss
cld
js
mov
mov
mulb
jp
sub
ljmp
jl
pop
fmull
xchg
jge
mov
add
movsb
fisubrl
pop
push
ljmp
test
inc
jb
insl
or
cmp
xchg
dec
inc
pop
cltd
adc
jb
stos
mov
pop
je
adc
pop
insl
ret
fisubrl
xchg
jl
mov
hlt
sbb
pop
aad
jae
jecxz
das
in
mov
insl
pop
stos
mov
in
fcoml
lcall
jmp
cltd
and
or
ljmp
mov
fwait
cmp
mov
or
bound
ss
lds
stc
inc
xchg
mov
and
adc
or
mov
mov
jno
mov
nop
mov
or
in
jecxz
jnp
sub
inc
cmp
shlb
pushf
repnz
test
jne
rcll
jle
bound
repnz
fmuls
jmp
ja
adc
pop
xor
dec
inc
push
rcrb
cwtl
xchg
int
sahf
xorb
push
fisubs
push
ror
mov
rcrb
xchg
mov
push
loop
xchg
test
mov
frstor
daa
addb
mov
test
pop
mov
cmp
cld
adc
out
je
repnz
inc
mov
cmp
lds
or
adcb
sarb
sahf
cltd
adc
mov
pop
nop
cmp
push
movsl
jns
into
clc
scas
dec
push
push
and
cmp
push
divl
iret
sub
out
push
xchg
inc
fwait
shll
lock
mov
add
add
xor
shlb
bound
push
jne
jmp
loope
dec
mov
adc
in
mov
pop
adc
jp
sub
sbb
ret
jb
push
xchg
dec
jmp
and
ret
mov
pop
fldenv
cmp
shl
inc
movsl
lahf
jae
fs
test
add
shlb
or
fildll
popf
pop
ljmp
in
sbb
xchg
ss
jb
in
push
lcall
jmp
lods
out
dec
mov
pop
movsl
roll
ljmp
and
test
jg
std
leave
push
ja
jne
mov
shlb
ret
mov
sbb
mov
adc
mov
adc
test
jb
mov
fisttps
mov
jge
loop
test
or
xchg
aam
jns
sbb
xchg
pop
dec
int3
fisubrl
push
mov
push
push
push
in
pop
cmp
cmp
sbb
xchg
out
cmp
popf
lret
dec
fwait
xchg
das
movsl
cltd
push
lret
push
fsubl
mov
rol
mov
cs
lret
mov
cmp
popf
xchg
lcall
mov
divb
aaa
dec
xchg
jle
mov
pop
sub
and
test
adc
mov
add
xor
mov
pushf
and
scas
lock
mov
cltd
mov
scas
int
adc
jl
cmp
jae
mov
or
xor
push
cwtl
test
pusha
mov
add
push
stos
add
test
shl
cmpsl
mov
and
xor
ret
movsb
sub
push
sbbb
int3
mov
jbe
stos
add
inc
xchg
and
inc
mov
out
mov
xor
xor
cs
cmpsb
pop
sub
xchg
pusha
insl
icebp
mov
rcrl
or
mov
xor
inc
clc
shr
imul
jmp
xchg
addr16
xor
xchg
mov
push
sar
inc
or
pminsw
lret
mov
pusha
repz
xor
pop
ss
push
mov
sub
xor
xchg
add
xchg
gs
add
jg
int
pop
lds
test
or
movsb
add
fwait
in
and
ret
div
adcb
rcrl
fsubrl
aad
test
mov
and
cmp
in
push
lret
sub
mov
xor
adc
mov
test
pop
and
jo
in
imul
mov
out
aam
cwtl
nop
mov
inc
cs
cli
aam
fdivrs
test
pushf
aam
je
test
mov
adc
in
aas
je
xchg
push
or
add
je
or
pop
jp
xlat
aas
scas
push
fcomps
mov
clc
ss
sub
mov
xor
into
ret
pop
xor
push
dec
loop
es
lea
or
pop
pop
pop
stos
sub
fsubrs
test
adcb
rorb
ds
imul
sarb
sub
lret
mov
mov
subb
lock
out
jge
add
sbb
mov
outsb
jg
pop
sbb
outsl
ficoms
and
adc
and
xor
or
in
sub
xor
je
into
bound
jmp
cld
int
push
and
stos
lahf
push
aaa
test
add
mov
ret
inc
xchg
es
cmpsb
lcall
idivb
shl
adc
repz
jo
or
mov
into
aaa
fadds
cmpsb
arpl
mov
addr16
pop
stos
pop
add
aas
sub
xchg
sub
mov
inc
pop
fwait
out
pushf
xchg
aaa
lcall
lahf
or
push
dec
leave
mov
mov
mov
stc
pop
jbe
into
iret
stc
rcrb
insl
test
cmp
pop
movsl
jb
add
pop
mov
dec
xchg
mov
mov
rcrl
scas
loope
fs
mov
jae
or
mov
mov
mov
add
out
push
pop
and
mov
mov
pop
fdivl
pop
adc
push
out
add
mov
xchg
ret
out
pop
jno
push
mov
test
cmp
les
pop
outsb
cmp
push
push
jl
dec
or
arpl
or
sbb
jecxz
mov
dec
test
mov
mov
mov
ficoms
adc
sub
and
out
sbb
add
call
jecxz
incl
mov
fsub
incb
in
inc
cmp
pop
inc
insl
adcl
out
push
leave
push
xor
pop
or
xchg
adc
jmp
cs
lods
mov
out
push
mov
or
data16
lcall
dec
cmp
loopne
unpckhps
mov
lret
mov
ja
out
mov
outsb
test
jp
inc
or
jg
mov
cli
das
insb
nop
movsb
inc
or
outsb
mov
in
int3
mov
jmp
loopne
cmovae
lods
cmp
imulb
scas
sub
pusha
add
repnz
ljmp
dec
sbb
fs
fidivrs
movsl
out
xchg
add
mov
imul
pop
repnz
cmpsl
testb
mov
mov
rcrl
fldt
mov
cmc
pop
add
xchg
sub
xchg
add
mov
jecxz
aad
xchg
lahf
mov
xor
push
adc
pusha
or
xor
stos
mov
int3
jmp
aam
add
mov
rolb
aas
mov
push
jno
lock
lcall
int
mov
outsb
ja
sarb
fstl
test
out
or
xor
xchg
arpl
and
pop
es
mov
insb
lcall
mov
lret
xor
lret
inc
arpl
cmp
ficoml
adc
mov
xlat
mov
xchg
xchg
decl
cltd
push
lock
push
sbb
aad
jg
jge
pop
stos
imul
mov
leave
fidivrs
and
ds
std
pop
mov
stos
pop
mov
sub
outsb
test
xchg
and
pop
clc
iret
add
mov
ret
mov
adc
and
stc
push
out
jnp
sub
jns
mov
cld
jge
in
cmpsl
xor
cmpsb
aas
sub
lods
push
aaa
icebp
popa
cmpsl
test
out
stc
loopne
inc
jb
jb
les
stc
or
push
lret
mov
add
pop
es
push
pop
mov
mov
in
dec
scas
mov
in
xchg
rcr
loope
scas
movsb
xchg
je
xchg
push
push
mov
mov
movsl
push
loopne
sbb
fbstp
mov
pop
xchg
mov
jmp
and
mov
lcall
ficompl
nop
jnp
fwait
push
or
xchg
inc
in
xor
dec
and
dec
and
xchg
push
and
jl
push
insl
sahf
data16
daa
fcmovne
movsl
pop
testl
dec
jne
jae
mov
lahf
lods
sub
call
stc
mov
mov
jb
inc
inc
push
gs
push
mov
mov
lahf
mov
mov
cmpb
sub
cmp
sub
adc
dec
dec
inc
push
arpl
dec
push
ljmp
into
xchg
mov
and
adc
je
xchg
add
jl
xor
fwait
out
sbb
push
decl
jbe
pop
out
push
lods
sbbl
dec
pop
fadds
test
xchg
lea
lcall
or
cmp
outsb
mov
cmp
push
mov
or
cmp
call
xchg
cmp
out
sbb
fwait
sbb
mov
mov
decl
lcall
pop
ret
dec
pusha
dec
jecxz
mov
adc
scas
cmc
xchg
scas
push
mov
lds
leave
lock
pop
jae
fs
fsts
je
negb
dec
push
cmp
cmp
cmpsl
xor
pop
cs
xor
jmp
sub
add
fsts
dec
aas
mov
pop
sub
scas
in
shrl
lret
sbb
inc
scas
push
xor
dec
gs
push
jo
xchg
mov
enter
sbbb
pushf
sub
xchg
cmpsb
sahf
xor
push
sub
hlt
cmp
mov
mov
lods
test
mov
jns
or
push
pop
loope
push
gs
mov
jmp
xchg
xchg
popl
lret
pop
jecxz
pop
repnz
lea
pop
jmp
outsl
stos
repz
out
shr
push
fsubs
jbe
sbb
push
mov
sbb
mov
fistpll
jl
xchg
cmp
notl
inc
adc
or
adc
adc
mov
xor
pop
mov
flds
inc
in
sbb
inc
inc
rcl
leave
lods
cmp
out
xor
xlat
sbb
inc
dec
fildll
xchg
loope
cmovae
cwtl
sub
fcmovu
xor
addl
sbb
pop
xchg
aam
mov
xchg
and
ja
lods
mov
add
daa
mov
loopne
into
sub
ret
or
adc
jge
push
and
sub
mov
das
push
mov
cmp
sub
out
das
iret
sbb
jg
xchg
fnsave
adc
cmpsb
loopne
leave
cmpsb
xchg
xchg
and
mov
jae
jg
fsubs
loop
jl
mov
push
and
int3
jne
es
cld
mov
sub
iret
xor
ret
out
mov
ja
push
mov
mov
dec
out
push
pop
scas
negb
je
clc
add
data16
xor
or
test
and
cmpsb
mov
adc
rclb
pop
enter
loop
mov
push
pushf
or
cld
inc
aad
shlb
idivl
repz
sub
adc
cwtl
scas
dec
pop
and
in
in
repnz
in
pop
jge
mov
dec
fisubs
enter
cli
popa
outsb
cwtl
jg
popa
test
xor
out
iret
sub
insl
loop
jmp
push
fstps
pop
stos
inc
aas
cli
fstps
stos
pop
xor
mov
cmp
cmpl
jle
lods
xchg
jl
jo
int
cmp
dec
inc
pop
push
push
jne
pop
mov
adc
pusha
adc
test
jmp
mov
int
and
push
push
cmpsl
mov
dec
repnz
das
or
pop
int3
pop
mov
adc
mov
scas
push
movsl
xor
dec
repz
gs
stc
loop
enter
int
jns
mov
cmpsl
aaa
jp
stc
inc
dec
mov
and
sbb
lds
in
into
cmp
sbb
repnz
xchg
xchg
gs
xor
scas
daa
sub
in
push
clc
pop
les
pop
adc
xchg
pop
insl
nop
scas
mov
lods
mov
hlt
push
sbb
sub
imul
lret
xchg
movsb
add
lock
xchg
and
je
xchg
popf
mov
daa
movsl
clc
jae
cmpsb
repz
jo
in
dec
adc
xchg
cmpsb
mov
and
cmp
mov
lret
movsl
call
ja
jo
in
mov
sbb
push
lods
dec
sahf
mov
daa
add
jge
mov
leave
insb
lea
xlat
pusha
rol
arpl
sbb
xor
push
or
add
dec
clc
fisttpl
lret
dec
mov
pop
mov
mov
mov
xchg
and
fisubrs
lods
mov
inc
call
stos
dec
mov
pop
xor
leave
adc
movsb
cltd
pushf
aaa
xchg
mov
inc
fsubl
iret
adc
adc
sbb
mov
pop
jle
jecxz
fidivrs
shlb
cmp
cmp
out
aaa
shrl
xchg
add
stos
out
add
in
andl
shr
je
ljmp
std
arpl
sbb
mov
and
adc
xor
leave
das
pop
pop
je
pop
fwait
xchg
dec
mov
xlat
aaa
jb
cmp
sub
cmp
repnz
fs
rcrb
adc
fisubs
lret
arpl
sbb
movsb
adc
or
mov
xchg
mov
xor
leave
push
repnz
push
or
cmpsl
mov
in
pop
xchg
icebp
xor
aaa
fsubr
pop
imul
jmp
loopne
sbb
add
aas
mov
inc
inc
subb
pop
or
inc
pop
fstl
pop
ret
shll
int
push
cmp
aas
sahf
icebp
cmp
and
xchg
mov
xor
rcll
lock
jnp
fidivs
cli
cs
sub
cmp
hlt
test
icebp
mov
stos
out
and
repz
fidivl
fucom
adc
mov
out
sbb
icebp
mov
movsb
sbb
sar
shl
push
aam
stc
fwait
xchg
lods
stc
daa
fmulp
lods
pusha
mov
xchg
cmpsl
pop
or
xor
pusha
stos
mov
rolb
xchg
pop
pcmpeqw
call
mov
cmc
mov
xchg
adc
add
mov
xor
test
ss
sub
cmp
and
mov
rcr
add
cmp
test
lcall
clc
ret
mov
push
loop
outsl
faddl
mov
into
clc
ljmp
push
pop
daa
sbb
push
jb
mov
xor
fildl
mov
test
movsl
sbb
daa
sbb
fsts
call
push
mov
sbbl
jge
ret
mov
jo
sti
imul
test
sub
inc
sbb
xchg
sub
test
mov
repz
loop
xor
cmpsl
bound
loopne
fs
stos
pop
pusha
lock
adc
add
js
mov
mov
mov
iret
jnp
and
into
cmpsb
mov
and
stos
mov
or
call
mov
in
imul
clc
jb
xor
jmp
add
xor
inc
adc
sbb
mov
or
int3
pushf
jmp
out
in
cmpsl
jo
int
add
imul
ret
and
mov
out
arpl
sub
jecxz
pop
hlt
pusha
mov
dec
das
mov
shrb
and
or
arpl
pop
push
les
push
lcall
std
adc
push
std
shll
xchg
dec
cld
or
xor
outsl
movsb
ljmp
cmp
mov
cmp
jmp
dec
in
out
xlat
mov
mov
jle
divl
pushf
test
lock
inc
out
outsb
xchg
in
nop
xlat
into
xor
into
cmpsb
add
fdiv
and
fmulp
fdivrs
jo
push
adc
rorl
inc
push
mov
pop
imul
or
cmc
stc
stc
lret
out
movsb
mov
out
mov
sbb
jp
aad
xor
and
mov
pop
insl
and
stc
js
sub
jmp
sar
and
das
jbe
push
and
add
nop
lahf
mov
lock
out
stc
mov
xchg
in
mov
lret
cmp
xor
push
adc
mov
adc
sub
out
and
jle
ss
sub
imul
xchg
inc
mov
jae
jb
and
sbb
jnp
addr16
push
xchg
fcompl
pop
pushf
iret
les
sbb
push
xor
mov
out
and
dec
mov
into
sbb
mov
xchg
pop
js
jne
ss
dec
push
insl
sbb
push
pop
pop
adc
iret
jnp
push
pop
and
push
pop
mov
das
push
jp
push
shlb
and
jne
dec
ffreep
jge
clc
jo
sub
cmp
fstl
dec
ficoml
cld
inc
push
xor
push
leave
xchg
jg
dec
xor
xlat
pusha
rcrb
mov
rorb
lahf
push
in
add
xchg
bound
cmp
loopne
imul
cmpsb
ja
jg
sbb
adc
mov
mov
or
jmp
movsl
aas
sbb
xor
scas
add
push
idiv
ret
fwait
call
mov
aaa
push
add
arpl
xchg
and
jno
jnp
out
hlt
ja
push
pand
jl
andb
or
or
or
jecxz
out
nop
lods
es
cmp
and
cs
push
lock
xchg
test
inc
je
inc
push
fst
sahf
sbbl
enter
test
mov
sbb
out
test
jne
sbb
into
sub
pop
cmpsb
pop
dec
and
mov
js
cmp
out
inc
or
cmc
mov
int
sbb
sbb
add
es
sub
mov
push
sub
ficompl
push
and
push
ret
sti
jle
lock
mov
push
sbb
and
and
ret
jecxz
add
sti
add
mov
sub
sbb
ljmp
ds
in
mov
clc
fsub
push
and
std
jmp
int3
xor
out
clc
inc
inc
sbb
sub
push
and
push
or
xchg
test
stc
adc
sub
sub
mov
mov
sub
cmp
scas
sbb
and
pushf
push
xchg
jo
mov
fnstcw
mov
cmpsl
das
inc
xor
fcmovnu
push
xor
fyl2xp1
jg
or
fisttpll
cmpsb
and
stc
mov
inc
sar
pop
inc
xchg
push
sbb
sub
and
es
mov
hlt
xchg
aam
movb
xchg
rorb
adcb
cmp
popf
rcll
shll
test
mov
enter
jb
dec
mov
xor
test
setl
nop
popf
stos
fwait
inc
push
mov
xor
adc
jo
inc
aam
adc
ret
dec
popf
add
insl
lret
neg
out
mov
repnz
test
mov
pop
aad
fnsave
pop
cld
inc
sub
and
xchg
jp
inc
repnz
dec
jmp
add
xchg
adcb
ret
ficomps
pusha
jmp
add
test
loope
jecxz
sbb
ds
mov
cmp
fstp
xchg
sarl
xchg
jae
nop
adc
frstor
lcall
push
aaa
imul
pop
mov
stos
jbe
stos
xchg
mov
imull
xchg
add
inc
cli
fs
aam
jecxz
jmp
aam
loop
std
and
pusha
push
cmp
xorb
inc
sub
xchg
xchg
lods
jl
call
adc
jnp
pop
mov
sahf
mov
sub
pop
call
in
mov
push
lahf
jecxz
cli
sub
mov
outsl
popa
lea
inc
sub
dec
jge
pop
ficompl
mov
dec
sub
pop
stc
lock
jl
mov
mov
and
sarb
pop
std
pushf
sbb
shrl
lods
pop
jmp
sub
arpl
jo
fsubr
pop
jge
jecxz
sbb
xchg
andl
adc
pushf
pop
out
inc
cmp
mov
cltd
mov
hlt
pop
jb
jg
scas
xchg
mov
fimull
pushf
xor
dec
pop
call
mov
andb
push
mov
insl
xchg
inc
stos
pop
inc
sbb
sbb
pop
and
decl
sbb
rclb
inc
push
or
inc
das
mov
stc
push
push
adc
jbe
test
lret
loopne
push
add
popa
call
mov
arpl
mov
lcall
add
jl
sub
repnz
sub
and
mov
cmp
popf
leave
mov
mov
and
js
test
cmp
or
mov
sahf
mov
xchg
mov
cmp
mov
insl
add
mov
or
outsb
dec
mov
xlat
testl
jbe
and
fcoml
scas
cmpsb
cmp
das
shll
lods
and
ljmp
fwait
and
nop
inc
cmp
pop
arpl
cmp
movsl
test
bound
adc
stos
jge
xchg
test
scas
je
movsl
aam
es
aaa
jmp
or
jbe
cmp
je
cmp
add
cmc
sbb
loop
sbb
repnz
sti
aaa
repz
inc
pop
mov
cmpsb
jg
pop
mov
jo
jmp
sub
adc
add
xor
cmp
popa
and
leave
fucom
dec
xor
rclb
adc
mov
jnp
mov
mov
lods
jne
lods
xor
pop
dec
icebp
cmp
insl
xchg
adc
add
flds
das
xor
xor
mov
or
sub
sub
sub
and
loope
mov
xor
jb
or
sbb
lods
pop
in
hlt
xlat
xchg
daa
push
ljmp
jbe
lcall
sub
push
sub
fdivrl
sub
add
xchg
out
and
or
mov
or
xor
cs
movsb
outsl
lcall
xor
add
lret
out
pushf
int3
mov
leave
jbe
jne
repz
daa
push
call
ficompl
adc
leave
sub
sbb
out
lret
lret
mov
mov
and
cmp
and
add
lds
lcall
jmp
or
mov
mov
xchg
add
sbb
jno
jne
iret
mov
fstl
jle
mov
and
push
and
jbe
mul
fistps
aaa
adc
mov
cmp
int3
mov
scas
mov
call
aad
mov
cmpsb
dec
ss
aas
dec
cwtl
aam
scas
mov
shr
pop
test
repz
das
imul
aaa
jg
xchg
fmuls
pop
jl
sbb
in
or
lahf
in
lods
aad
or
lcall
stos
jmp
lods
inc
cmp
popa
mov
jbe
stos
hlt
push
stos
imul
mov
push
test
mov
in
into
popa
adc
add
test
out
vaddss
insb
sbbb
popf
in
loope
add
xchg
xchg
int
inc
out
aaa
pop
aaa
jle
dec
mov
xor
shrl
loopne
adc
les
mov
adc
jl
daa
daa
jecxz
mov
std
xchg
dec
sub
fldz
push
jle
cs
add
fisttpll
sti
mov
jns
std
cmp
xchg
mov
lcall
xor
sbb
xchg
aad
mov
mov
cmp
mov
aaa
arpl
dec
mov
popf
jl
lods
sbb
in
insl
lds
out
push
dec
lods
mov
and
mull
jns
or
and
inc
mov
aas
jecxz
hlt
mov
dec
mov
pop
jg
jne
xchg
fisubs
aad
and
or
inc
mov
stos
fs
sub
pop
cwtl
sbb
sub
std
mov
jp
and
mov
mov
jecxz
mov
jo
jecxz
or
mov
sbb
sub
cmpsb
jae
inc
sbb
dec
imul
sub
cmp
and
sti
test
xor
dec
sbb
hlt
dec
jb
test
inc
into
and
pop
aaa
adc
and
jg
iret
popa
pop
inc
and
insb
sub
aas
mov
xchg
or
add
add
ljmp
lcall
cmc
cmp
xor
addb
sarb
cli
sbb
insl
mov
fistps
loopne
xchg
rorl
or
in
mov
xchg
lods
pushf
movsl
sbb
mov
je
pop
ret
sbb
push
and
cmp
jnp
sub
fistpll
or
mov
lods
imul
or
mov
loop
outsl
push
jo
call
sbb
mov
and
jne
xchg
pop
pop
cmc
mov
dec
mov
mov
jge
pop
in
fstpt
and
cltd
mov
sub
dec
ja
push
adc
std
mov
outsb
or
loopne
out
mov
loope
xlat
mov
xchg
daa
dec
cmpsb
ret
movsb
xchg
and
scas
sbb
add
xchg
mov
out
dec
jns
mov
fst
clc
ret
jne
add
mov
jecxz
sub
xor
daa
test
fxch
stos
add
decb
sbb
sar
adc
inc
jle
sub
icebp
jae
push
int
push
iret
xchg
xchg
pop
jns
shll
mov
xchg
pop
das
xor
rcrb
push
idivl
mov
mov
loop
jl
xchg
lret
mov
out
xor
mov
sbb
int3
pop
pusha
xchg
loopne
xor
push
sub
push
test
mov
jl
jb
push
cmc
and
popf
pop
test
cmp
mov
xor
movsb
das
ret
sub
sbb
leave
pop
in
mov
fwait
out
fcomi
lret
xchg
stos
jbe
dec
cmp
push
pop
pmulhw
lahf
cmp
add
ret
cld
nop
lods
test
inc
adc
pop
xor
fmulp
lods
cmp
xor
je
dec
sub
ljmp
cli
pop
daa
insb
gs
xor
mov
lcall
std
sub
dec
jns
jge
add
cmpsb
test
mov
xchg
ret
jle
sub
push
jecxz
adc
sub
inc
in
cmp
clc
cmp
xor
je
in
xor
jnp
imul
cmpsl
js
push
mov
jl
jl
sahf
fsts
push
aad
pop
nop
test
shll
fcoml
aam
mov
mov
and
mov
int3
cmp
add
dec
adc
mov
inc
pushf
incl
inc
push
cpuid
mov
je
push
loopne
aaa
mov
mov
addr16
and
add
sbb
inc
fidivrs
fsubl
mov
mov
mov
popa
lds
mov
xlat
add
mov
adc
mov
mov
pop
push
jbe
dec
mov
into
pop
bound
fisttps
sbb
js
out
fistl
and
inc
insb
mov
fs
out
call
pop
push
or
mov
and
stc
clc
xchg
xchg
jo
loopne
mov
or
jg
xor
push
adc
daa
aad
subb
sarb
push
inc
dec
cmc
cmp
jg
sbb
ror
daa
hlt
inc
sbb
clc
jae
enter
mov
xchg
and
jle
mov
das
test
lret
pop
jle
add
fnsave
std
xchg
ficoml
jmp
mov
fiadds
or
pop
out
mov
adc
xchg
ficoml
adc
and
mov
jns
xor
sub
hlt
jb
divl
sub
das
dec
xlat
out
jb
lods
xor
add
xchg
icebp
testl
and
nop
xlat
mov
lock
lds
sub
mov
in
jge
xchg
xchg
loopne
pop
popf
and
and
js
popf
movsb
hlt
ss
cs
imul
rcrl
mov
hlt
inc
mov
push
sub
in
leave
jle
pop
jp
clc
sub
jp
or
pusha
push
adc
add
decb
or
xlat
adc
add
jb
xchg
push
or
repz
pop
xor
arpl
and
sbb
pop
andl
cli
lret
inc
adc
adc
mov
and
cmp
jmp
ss
jge
ss
jno
pushf
ja
mov
gs
in
sbb
shll
jb
mov
scas
inc
and
cmpsl
or
adc
jl
out
daa
dec
fistpl
in
ja
mov
mov
fbld
cmpsl
pop
mov
shl
add
adc
cmp
jno
scas
lret
cmp
popf
sbbl
cltd
jno
pop
cwtl
in
scas
sub
sbbl
mov
sbb
aad
sbb
and
andb
ficompl
ljmp
ret
jg
and
mov
jb
repnz
fldl
sub
mov
dec
fsubrp
push
add
mov
push
xchg
outsl
sub
and
andl
hlt
mov
lret
jle
sbb
jge
ja
pop
xchg
adc
mov
icebp
jmp
mov
xlat
dec
dec
ret
jmp
leave
hlt
hlt
sar
je
add
or
jo
daa
mov
lods
jg
lods
aaa
les
sahf
adc
mov
add
leave
push
or
sbb
add
fsincos
xlat
sti
add
mov
push
xor
leave
xor
inc
jne
pushf
sbb
jge
lcallw
xchg
cli
mov
faddp
mov
daa
dec
xorb
mov
jecxz
pop
movl
push
jne
push
push
sub
cmpsb
pop
imul
push
adc
lods
cli
dec
cli
push
sub
gs
into
jbe
repz
std
mov
lods
push
adc
sub
push
mov
popf
xlat
push
stc
mov
cmp
mov
pushf
inc
mov
adc
cli
mov
test
pop
adc
mov
out
in
insb
lret
aam
sub
cwtl
and
inc
popa
dec
sub
pop
inc
daa
in
xor
in
int3
aad
xor
jns
pushf
lcall
test
in
jb
out
lcall
or
mov
jno
test
add
iret
flds
call
inc
inc
xor
push
dec
mov
arpl
sbb
push
adcl
stc
inc
jbe
or
fs
sbb
addr16
mov
jmp
jl
fnstsw
jle
cmp
test
and
xchg
adc
adc
shlb
cmp
push
aam
mov
in
das
cli
loope
xor
es
outsb
and
and
inc
repnz
lahf
add
movsb
scas
adc
mov
or
push
jb
xchg
iret
fnsave
popa
dec
cs
and
jne
aaa
fnsave
adc
jb
lock
fnstenv
loopne
xor
dec
xchg
rcrl
in
cwtl
enter
jb
jo
mov
testl
dec
outsb
out
push
rcrb
cmp
cmp
xchg
mov
sub
cmp
mov
add
and
repnz
sub
jbe
bound
sub
icebp
sub
std
loop
enter
cmp
in
jns
leave
cld
roll
jo
adc
sub
scas
into
cmp
loop
ds
into
cmpsl
fldcw
jns
aam
and
cmp
sti
push
sbb
push
pusha
ret
xor
or
pop
jmp
jl
repnz
jmp
fnstcw
flds
xchg
in
test
push
roll
iret
shl
inc
lret
push
shlb
cmp
dec
cmp
mov
add
xor
mov
aaa
jmp
fstpl
into
imul
xchg
mov
sub
mov
inc
push
int3
dec
jno
out
mov
push
loope
sbb
mov
in
and
cmp
aas
cmp
mov
mov
fnstenv
jle
cltd
cmpsl
out
ds
fbstp
ds
stc
inc
cmpsb
fmull
mov
adc
rcr
jmp
xor
aad
cmc
inc
adc
inc
out
arpl
imul
mov
rolb
lret
push
sbb
push
xchg
dec
mov
xor
sti
sbb
aad
test
loop
and
jb
and
pop
pusha
sahf
mov
lcall
inc
insl
in
cmpsb
mov
lcall
loope
cmp
sub
and
test
mov
mov
popf
and
or
push
mov
enter
dec
xor
imul
cld
scas
fstpt
inc
and
fxch
fimuls
sbb
loope
or
adc
jge
fwait
jb
call
mov
bound
xor
outsb
sbb
fadds
dec
mov
sbb
sbb
enter
sbb
or
enter
add
jnp
push
mov
jnp
and
dec
lret
aad
aam
mov
mov
mov
xchg
pop
add
daa
aaa
xchg
into
mov
sbbb
jae
inc
and
adc
mov
cmpsl
jmp
mov
in
idivb
mov
and
fpatan
xor
stc
inc
jmp
inc
int3
mov
rolb
add
xlat
in
xchg
cltd
sbb
dec
cltd
push
jmp
xchg
les
in
add
sar
inc
out
sbb
dec
mov
mov
jnp
cmp
or
loope
adc
das
movsl
fdivrl
pop
push
and
fiadds
xor
jb
mov
lods
dec
in
add
add
pop
inc
daa
dec
fwait
daa
xchg
mov
xor
sbb
mov
imul
sbb
mov
mov
aad
fiaddl
xor
call
mov
adc
sbb
jmp
lods
adc
insb
lret
jb
push
adcb
mov
jne
inc
or
sbb
adc
loopne
call
je
sub
push
pop
movsb
push
mov
pop
iret
cmp
xor
sub
jmp
fst
push
mov
xchg
rcrb
shll
cmp
repz
mov
out
js
mov
fninit
icebp
sub
lret
in
subb
popa
scas
add
imul
test
in
mov
lods
pop
xchg
add
cmp
xchg
bound
inc
mov
dec
in
push
jb
ja
es
insl
push
dec
jo
cs
inc
push
mov
or
or
mov
pop
sbb
rol
rcrb
std
pop
jg
incb
ret
xchg
push
pop
and
jg
pop
decb
mov
xor
fwait
mov
insb
push
in
push
in
and
in
loope
cld
jmp
xchg
adc
jbe
js
in
lret
push
jecxz
outsl
adc
jnp
mov
pusha
jle
sbb
icebp
fiadds
mov
cmp
xor
mov
sbb
sbb
xor
fistpl
subl
fiadds
fucomip
fdivrs
mov
sub
es
and
test
cltd
cld
mov
lahf
stos
xchg
xor
lods
jno
ficomps
testb
cld
and
pop
cmc
dec
fimuls
jbe
gs
mov
cmp
pop
adc
mov
mov
out
adc
or
and
stc
add
adc
and
neg
jmp
and
lcall
push
je
jno
mov
mov
mov
dec
adc
fstps
cmpb
fldenv
cld
lods
pop
lret
dec
rclb
xchg
pop
adc
sbb
in
cld
mov
sti
ret
push
dec
mov
int
arpl
movsl
adc
push
jecxz
mov
ljmp
ds
clc
jecxz
repz
std
shlb
pop
inc
pop
dec
xchg
add
ss
dec
pop
cmp
mov
repz
push
dec
fwait
sbb
repnz
dec
call
xor
jge
mov
xchg
inc
mov
bound
cmpsb
div
dec
test
insb
mull
fwait
xor
aam
cli
and
push
pop
andb
xor
pop
inc
inc
ret
movsl
and
pop
out
dec
mov
lock
pusha
mov
ret
inc
ret
xchg
sbb
or
sbb
ret
push
aad
fidivs
mov
stos
out
cmpl
js
adc
pop
or
lret
in
jmp
mov
dec
or
out
sub
cmp
cmp
inc
and
pop
or
or
gs
cli
ss
mov
aam
and
sub
aad
loopne
stos
mov
decl
cwtl
outsb
cli
outsb
out
push
xchg
repz
xchg
add
cmp
sbb
push
pop
mov
adc
pop
lock
inc
cmp
les
test
and
mov
pop
cwtl
hlt
cmc
xchg
adc
std
test
add
sti
mov
and
add
enter
cwtl
lret
lcall
leave
mov
push
jo
and
xor
shlb
cmp
lret
addr16
push
cli
lods
mov
dec
jnp
push
push
or
sbb
dec
loope
and
cld
mov
push
not
cmc
pop
sub
fwait
cmpl
cli
sbb
adc
and
dec
test
dec
add
ljmp
mov
testb
xor
jg
iret
notb
int3
cmp
push
mov
xchg
add
cmc
xchg
sub
aad
in
or
push
jmp
cs
cld
sub
push
ds
aas
lcall
dec
cmc
mov
je
pop
je
js
lret
adc
mov
mov
pmullw
shrb
inc
and
mov
push
repz
jae
loop
mov
sub
cli
push
test
fcoml
cltd
pop
xchg
push
aam
unpckhps
or
mov
ret
jg
inc
and
fistpl
frstor
pop
lock
imul
cmp
xchg
push
jns
inc
loope
lret
divb
sub
jecxz
xlat
sub
lock
pop
lea
mov
adc
add
xchg
lret
js
cwtl
movsb
dec
mov
subl
arpl
aad
repz
in
pushf
jmp
and
xor
lcall
rclb
cmp
movsb
xor
shll
xchg
ss
movl
ret
mov
daa
and
jae
out
sub
out
dec
out
pusha
cmp
scas
and
stc
scas
mov
sub
aad
rorb
popf
push
loop
mov
leave
shll
sub
sahf
into
xchg
jge
ret
mov
lods
loopne
push
mov
jge
sub
push
lcall
sub
lret
mov
int3
sbb
scas
pop
sbb
or
testb
dec
adc
mov
mov
scas
xor
push
cmovs
in
jecxz
and
cmp
les
call
aad
in
popa
dec
lods
enter
enter
mov
bnd
mov
sub
pusha
jo
cs
jge
mov
adc
dec
in
repz
fildll
jp
xchg
add
push
add
pop
insl
pop
int3
lds
repnz
pop
loopne
out
fadds
or
mov
cmp
mov
fldenv
xor
adc
scas
int
inc
inc
push
sahf
pop
jns
or
push
pop
mov
pop
push
pusha
jmp
inc
pop
adcb
adc
call
fnstsw
fadds
dec
sub
or
test
jl
mov
cli
jp
lret
jmp
testb
cmp
mov
cmp
mov
jg
test
mov
shl
hlt
and
dec
call
andl
xchg
test
mov
add
push
out
sbb
lods
fsubr
inc
test
repnz
daa
add
push
ret
push
adc
shll
inc
cmpsb
xlat
adcl
in
jge
out
frstor
loope
movsl
add
cmp
push
sub
jg
aam
and
sbbb
repz
adc
jge
or
lret
sub
dec
js
pop
xchg
adc
loope
lret
clc
popa
xor
pop
es
movsl
and
cmpsb
jmp
inc
mov
pop
js
cld
or
loopne
dec
gs
push
inc
push
and
dec
mov
pusha
mov
dec
lods
sbb
pop
pop
out
cmp
imul
dec
jmp
icebp
pop
push
or
aad
inc
or
out
insb
mov
mov
cmpsl
mov
sub
add
imul
inc
sbb
adc
pop
fdivrl
push
jmp
pop
and
jecxz
fisttpll
mov
shll
adc
and
sub
cmc
stos
cmpsl
rol
adc
or
add
mov
loop
dec
adc
loope
add
cmpsb
inc
lds
and
cmpsl
adc
pop
in
adc
lock
psllw
or
arpl
cmp
adc
es
les
mov
es
push
ds
fcompl
and
and
dec
mov
xchg
pusha
pop
mov
xchg
xorb
movsb
in
es
cmp
jo
mov
out
dec
jge
scas
adc
sbb
cmp
mov
arpl
inc
mov
xchg
mov
je
ja
xchg
cld
hlt
and
jp
dec
mov
xchg
dec
xchg
push
loope
lahf
stos
enter
adc
test
xchg
xchg
push
loop
sub
and
hlt
sub
scas
xchg
inc
sub
in
test
loopne
rcll
mov
pusha
or
pop
bound
stos
in
cmpsb
pop
xor
bound
dec
sub
mov
gs
xchg
mov
popf
pop
out
test
call
push
pop
mov
sbb
sub
ljmp
mov
xchg
and
in
pop
sbb
lcall
mov
repnz
mov
stos
sub
mov
addr16
daa
lds
mov
or
xchg
out
cli
shrb
cmp
scas
into
fstps
cwtl
sbb
and
stc
inc
jmp
mov
stos
push
ret
pop
sub
cmpsb
aaa
ficoml
push
subb
mov
enter
dec
mov
jle
lods
mov
dec
nop
cmp
jmp
aas
fisubl
mov
sbb
jo
insl
cmp
xchg
ja
jl
mov
mov
ds
std
and
repnz
cmp
movsl
jmp
cmp
mov
dec
popa
ljmp
inc
xchg
fcmove
inc
jmp
dec
lret
adc
div
push
daa
aad
jbe
sahf
mov
adc
mov
mov
and
push
dec
hlt
outsl
scas
test
mov
iret
xchg
mov
jp
jecxz
dec
jne
std
sbb
and
nop
out
mov
cld
mov
and
mov
sub
xor
aam
mov
movb
stos
mov
cmp
or
mov
movhps
and
dec
rorl
pop
lods
stos
mov
loope
pusha
aaa
pushf
lcall
pop
fistps
and
mov
call
xor
in
pusha
js
out
jp
xchg
pop
dec
jbe
aad
sub
mov
movsb
and
or
jmp
xadd
jb
pusha
add
xor
and
movsb
shlb
mov
inc
jle
rorl
cmpsb
sarl
cltd
sbb
push
sub
out
xlat
and
clc
pop
rorl
sbb
and
sbb
xchg
outsb
add
js
and
mov
inc
jo
leave
push
ljmp
sbb
xor
and
push
or
xchg
sbb
jns
cmp
shrb
sub
adc
lods
add
or
fcomp
and
in
out
lcall
push
in
xor
sbb
std
or
jp
ljmp
xor
jne
push
js
dec
enter
and
movsl
and
loope
call
sbb
dec
jb
add
lods
es
out
cli
mov
loop
dec
jbe
lcall
lahf
and
popf
aaa
loope
adc
imul
push
xchg
ja,pt
test
mov
add
in
pop
mov
xchg
mov
mov
adc
or
xchg
gs
cwtl
fildll
pop
mov
mov
lret
test
es
jle
mov
fdivr
mov
push
push
imull
add
push
add
jl
inc
rolb
repz
dec
adc
inc
ret
push
jmp
outsl
xorl
in
roll
fdiv
mov
cmp
pusha
cmpsb
mov
and
sub
xchg
lret
xor
test
subb
es
xchg
push
mul
mov
sub
stos
xor
loopne
or
ret
sarb
negb
cs
movsl
mov
or
rcll
ror
outsl
and
es
cld
lock
push
cwtl
sar
aas
outsl
call
pushl
repnz
mov
pop
mov
insb
stc
add
mov
or
fbstp
fcompl
sub
and
adc
and
aaa
in
add
jae
test
mov
mov
icebp
inc
repz
sub
xchg
sub
pop
fs
or
loopne
jne
arpl
add
inc
test
pushf
or
pop
pusha
adc
cmp
out
insb
cmp
inc
in
outsl
mov
dec
adc
sbb
arpl
nop
dec
mov
add
and
inc
mov
jle
adc
pop
outsb
mov
or
mov
jae
adc
mov
jae
sub
outsl
lret
sub
les
add
ret
fcmove
jecxz
add
stos
movsb
mov
push
lahf
repz
xchg
mov
jmp
and
inc
add
rolb
cmpsb
fnstcw
dec
pop
cmp
pop
prefetch
pop
data16
jne
cld
xor
stos
fiadds
pushf
inc
lock
and
and
repnz
clc
adc
mov
push
lods
test
cmp
jp
mov
xchg
mov
lea
out
fdivr
sti
push
mov
daa
sbb
cmp
jo
jge
mov
sub
jbe
cmpsb
dec
push
mov
out
pushf
lret
jl
cs
or
rorl
xor
xor
movsb
mov
loop
repz
ja
mov
idivb
or
jp
dec
je
mov
loope
add
incl
or
pusha
mov
inc
add
nop
inc
pop
scas
pop
jnp
ret
mul
jne
xlat
and
je
stos
jmp
mov
sub
mov
int
xor
call
mov
ljmp
decb
or
xor
pop
movsl
test
cmpsb
ljmp
cld
add
fldl
sti
iret
jmp
push
jle
lea
sbb
rclb
into
nop
push
push
sahf
mov
cmp
push
cmc
inc
rcrl
test
std
movsb
mov
or
bound
dec
adc
aaa
repz
ret
fwait
shll
pop
mov
inc
fs
rclb
cmp
inc
test
fadd
inc
and
mov
pop
fidivl
js
or
sahf
add
mov
cmpsb
rolb
xchg
sub
mov
and
test
ljmp
adc
mov
rcr
or
pop
xchg
int
mov
push
xor
cmc
push
mov
rclb
mov
adc
int
mov
inc
jle
xchg
or
std
vandps
or
jmp
dec
pop
mov
xchg
repnz
enter
aad
aaa
sahf
or
push
stos
cmp
outsl
jb
stos
enter
aad
jnp
push
dec
dec
out
out
inc
inc
and
sbb
out
inc
lcall
pop
sbb
cs
sub
shrb
or
cmp
inc
loopne
xchg
adc
xlat
or
sub
inc
cmp
scas
push
sub
jno
pop
mov
push
clc
push
and
leave
mov
arpl
dec
push
or
scas
iret
cmpsl
sbb
js
rcl
and
dec
cmp
pop
test
mov
sub
lahf
or
mov
cmp
cli
and
add
sbb
mov
test
loopne
stos
in
test
sub
lods
scas
sub
push
push
and
dec
xchg
mov
addl
cmc
xor
js
mov
rclb
jb
fsubrl
dec
pop
xor
mov
mov
out
out
and
dec
lcall
into
xchg
stc
andl
pop
shr
frstor
dec
mov
cwtl
xor
and
or
jae
xlat
xor
in
dec
test
insl
mov
mov
adc
and
cmpl
and
pop
rcrb
xchg
jae
inc
jae
fstpl
lds
mov
adc
jne
pusha
mov
inc
mov
js
movsl
jl
jg
outsl
add
mov
popf
and
les
sbb
enter
repz
hlt
insb
ja
insl
loopne
ss
mov
xchg
jl
mov
in
xchg
in
stos
lods
out
cld
cs
repz
xchg
jbe
pushf
clc
mov
lods
in
cmp
xchg
mov
mov
inc
dec
push
and
jge
icebp
adcl
inc
mov
ljmp
sbbb
sahf
mov
cmp
mov
sbb
sbb
xchg
jmp
add
shrl
rcrl
mov
pop
inc
rcrb
in
mov
sahf
sbb
xchg
or
aam
rclb
add
into
cs
xor
test
test
xor
jnp
sub
add
inc
jae
jns
inc
dec
add
fs
es
inc
push
or
dec
jo
or
mov
xchg
enter
add
push
jnp
rcl
jg
sbb
cmp
mov
xor
mov
mov
leave
pop
sub
mov
fiadds
and
inc
cmpsl
fld1
jp
mov
aam
dec
and
call
shlb
jnp
pop
mov
hlt
testl
or
fidivs
enter
push
popa
mov
pop
mov
in
enter
fcmovb
cwtl
outsb
fs
pop
mov
xchg
adc
std
mov
fdiv
pop
jne
xchg
add
lods
aam
pop
cmpsl
lea
fcomps
mov
add
cmp
adcl
mov
mov
jbe
add
mov
push
add
and
push
adc
sub
and
and
add
add
cmp
xor
add
add
mov
jnp
jecxz
mov
add
dec
es
dec
mov
push
add
lock
iret
xchg
insb
loopne
aad
cmpsb
nop
std
and
test
mov
das
cmp
pop
inc
cwtl
sbb
test
enter
mov
mov
mov
dec
shrl
lret
jle
jle
xor
xchg
subb
sbb
movsl
fsub
xor
sub
orl
push
roll
mov
cli
repz
dec
pop
lods
xchg
push
sub
ljmp
and
rcl
ss
cmpsl
sub
pop
fsub
andb
push
out
aad
int3
push
jp
loope
iret
fs
add
loopne
inc
cs
sub
shlb
and
adc
adc
int
jmp
and
jns
fisubrl
cmp
mov
test
adc
bound
adc
lods
jg
mov
test
lock
movsb
shl
add
mov
jne
lods
test
addb
mov
sub
popa
and
and
das
fisubrl
fnstenv
sbb
push
scas
inc
mov
fstl
and
mov
sahf
out
or
xchg
jne
call
fld
ret
pop
xchg
ds
jb
ljmp
fmul
iret
jnp
jl
add
sbb
xor
sub
sub
in
shr
jnp
cltd
stos
xor
dec
mov
mov
fldl
adc
ret
jae
in
inc
pop
int
push
pop
test
mov
insl
pop
mov
mov
add
in
mov
dec
inc
scas
test
dec
mov
pop
push
cwtl
loope
sbb
xor
mov
and
jp
mov
lods
jl
inc
push
jge
dec
adc
les
and
ds
and
pushf
lret
xchg
sub
mov
mov
sti
inc
dec
int3
ds
into
shlb
cmp
sub
scas
jmp
orb
int3
je
adc
mov
dec
and
push
dec
out
inc
out
in
fdivrl
lock
sbb
and
fwait
add
in
push
cmp
dec
xchg
sti
test
scas
fnstcw
cmp
cmp
aad
notb
mov
mov
inc
sub
push
lods
lods
xorb
and
enter
mov
data16
mov
sbb
mov
fstpl
jmp
shll
sub
les
or
jl
sub
xchg
jg
mov
push
fistpl
ja
lock
add
hlt
cmp
push
popf
movsl
jb
and
loop
ficoms
dec
push
jne
pop
mov
cld
lods
iret
addr16
sub
mov
mov
fistpll
mov
cmpsl
incb
lds
pop
push
andb
out
sub
ror
mov
push
into
loope
mov
xor
mov
jae
jl
dec
push
or
cmp
dec
jo
loopne
imul
sub
mov
xor
imul
mov
add
adc
and
mov
inc
mov
inc
add
les
xor
mov
aaa
xchg
mov
ret
daa
notb
xor
mov
jg
and
js
inc
cmp
push
stc
push
rcrw
cmpsb
movsb
add
ja
cmp
mov
mov
fmull
adc
loopne
pop
push
jmp
femms
jae
push
xor
mov
loope
jne
cs
xlat
mov
ss
jb
mov
mov
sub
dec
cmp
xchg
aam
mov
insb
jg
sahf
ss
ret
ljmp
jecxz
mov
je
cmpsb
inc
ret
or
or
mov
or
jp
mov
sbb
pop
jb
or
lahf
xor
push
dec
xorb
and
sub
jbe
cwtl
and
pop
mov
out
push
notl
fcomp
cmp
cmp
test
push
loop
adc
cmp
push
cmc
rorb
addr16
cmp
vpmaddwd
mov
scas
movsb
or
sub
xor
pop
sub
cmp
insb
mov
sahf
xchg
jmp
iret
or
cltd
movsl
mov
lret
les
sbb
lds
xchg
frstor
movsb
xchg
cld
mov
sbb
enter
in
cmp
in
jge
sbb
or
mov
and
movsb
pushf
test
jns
jne
in
arpl
movsb
jp
mov
jmp
adc
lcall
mov
mov
ss
pop
dec
mov
sbb
sub
loope
jge
imul
ljmp
les
cltd
and
mov
pushf
pusha
pop
adc
sti
mov
fistl
jmp
fmull
mov
xor
out
xlat
js
cmpb
sbb
jbe
cmp
in
xchg
enter
lcall
mov
or
cld
mov
mov
jns
call
dec
adc
or
add
insb
adc
and
mov
push
pop
jne
push
das
das
lahf
push
loop
or
sbb
push
mov
jnp
mov
push
or
aas
xor
loop
xchg
mov
pop
add
sub
cltd
fsubs
int3
pop
jb
sbb
subl
cmp
adc
mov
decb
leave
push
inc
daa
mov
or
or
jmp
daa
pusha
das
shlb
fists
add
add
sub
mov
inc
xlat
mov
sub
jo
add
loop
ret
mov
lret
movsl
mov
xor
dec
mov
mov
mov
push
test
fsubl
mov
arpl
into
or
mov
cmp
mov
xchg
loope
sub
jae
sub
or
and
xor
or
xchg
cli
dec
xor
mov
mov
xchg
fwait
or
icebp
adc
ds
pop
mov
je
std
add
in
es
mov
cmc
ljmp
and
psrlq
fucomi
or
and
lcall
and
xor
jecxz
cmc
pop
xchg
lcall
fcoml
pop
inc
and
outsl
mov
mov
ja
shll
ss
lret
addr16
scas
fldlg2
andb
dec
mov
mov
mov
loop
add
sub
leave
mov
jne
pop
lea
jno
out
cmpb
xor
cmp
movsl
mov
imul
mov
gs
daa
push
push
sbb
ss
sbb
mov
jecxz
shll
outsl
mov
pusha
pop
outsl
push
mov
arpl
pushf
xchg
int
dec
fidivl
fadds
or
nop
pusha
xor
std
inc
iret
pop
rcll
into
xchg
push
sub
jge
mov
mov
call
or
xor
push
xchg
scas
iret
mov
and
dec
mov
jge
aad
mov
sbb
and
mov
dec
xchg
jecxz
cld
jne
scas
and
in
inc
repnz
adc
cld
xchg
and
loop
dec
jge
stos
jmp
sahf
repz
xor
icebp
xchg
sbb
addl
adc
call
xchg
mov
xor
mov
loop
sub
mov
mov
fisubs
popf
jl
mov
test
and
shrl
rdtsc
fistps
pop
dec
jmp
or
and
nop
fistps
mov
pop
jle
mov
incb
ss
ljmp
out
test
and
pushf
aas
inc
cltd
pop
das
sarl
xchg
sub
mov
cmp
xchg
popf
sbb
push
sahf
push
mov
adc
sbb
pop
mov
cmc
xchg
popf
jmp
pushf
jl
sub
loope
sbb
arpl
dec
pushf
getsec
callw
add
jnp
pop
sub
pushf
mov
pop
pop
xchg
pop
dec
and
jmp
out
bound
pop
adc
pop
adc
popa
cltd
cltd
xlat
push
leave
pushf
mov
lea
mov
repz
adc
mov
mov
fsubl
and
loope
and
stos
stc
shl
xor
mov
pop
mov
mov
cmc
pop
inc
mov
or
sub
cmp
test
mov
jno
ffree
pop
test
cmc
in
dec
xor
aad
and
daa
or
pop
in
mov
cmp
cmpsl
ja
sub
outsl
jecxz
scas
and
in
ficomps
fisttpl
dec
rcll
mov
jnp
aaa
fsubr
xor
cmp
xor
imul
call
push
jl
sub
sbb
mov
jbe
leave
aam
mov
xchg
lds
mov
jb
les
or
hlt
lahf
pop
les
inc
cmpsb
lret
call
outsb
jle
setge
xchg
pop
shl
pop
adc
rcll
push
or
xor
pop
mov
sti
xor
inc
jo
jg
add
xchg
jbe
cmp
xchg
jnp
ds
roll
sub
pop
call
mov
ds
sti
lcall
or
xchg
test
jne
rol
enter
mov
int
pop
sbb
popa
push
pushf
dec
mov
fcoml
sub
push
test
xorl
nop
push
pushf
in
aaa
mov
push
jns
add
jl
aaa
jmp
cltd
and
ret
xor
and
out
sbbl
jne
adc
int
mov
pop
mov
sub
push
frstor
dec
mov
dec
stos
insl
adc
dec
cmp
push
and
adc
dec
sub
add
jns
pop
mov
add
into
xlat
mov
push
pop
add
sub
push
sti
mov
pop
xchg
mov
test
jb
xor
outsb
sub
add
out
add
sbb
je
sbb
or
mov
into
loop
push
jp
push
or
xor
jl
xor
out
xchg
ljmp
or
xor
sbb
lret
adc
mov
cmp
xchg
inc
xor
pop
xorl
in
mov
enter
stos
subb
pushl
fsubl
pop
gs
inc
or
pop
repz
adc
stos
test
lea
and
sub
jo
enter
jae
pop
pop
inc
dec
je
and
sub
loope
and
mov
xor
enter
add
sahf
mov
jae
shlb
test
mov
inc
xchg
adc
aaa
stc
hlt
jecxz
sbb
mov
xor
fcompl
and
and
in
sti
lea
inc
dec
jne
pushf
jl
mov
stc
mov
icebp
xchg
sub
loopne
cmc
fsubrl
into
stc
sub
dec
movsb
sub
ds
xor
adc
popf
jns
daa
pop
lea
lds
loopne
adc
jp
fstpt
stos
and
pushf
mov
test
mov
dec
popf
push
mov
arpl
and
shr
mov
jb
cld
and
gs
jge
xchg
fiadds
push
or
jb
loopne
scas
xchg
inc
dec
sub
cmp
popf
mov
or
push
test
mov
pop
mov
inc
xchg
pop
sarl
das
mulb
call
jnp
dec
mov
sub
call
mov
ss
clc
fsubs
in
lock
lods
stos
ss
cmp
les
out
shr
in
dec
sub
add
in
xor
pop
cmpsl
fcoml
mov
test
aaa
popa
jmp
aad
fisubrs
ficoml
mov
cltd
out
out
aad
jb
inc
mov
jbe
cmp
adc
add
popf
pop
adc
repnz
push
push
dec
or
lahf
cltd
hlt
cmp
and
jp
jbe
push
xor
mov
or
shll
jmp
adc
vminss
xchg
push
mov
xchg
enter
filds
adc
xor
pop
test
imul
mov
rcrl
dec
adc
push
mov
push
push
and
push
rorl
mov
fs
sbb
jp
cld
jg
pop
cmp
scas
into
pop
sarb
test
rolb
dec
push
push
int3
jle
adc
cmc
xchg
push
cmp
mov
inc
clc
or
mov
ret
adc
xor
mov
iret
jmp
lea
or
aad
add
inc
popf
or
movsl
ljmp
adc
mov
sbb
mov
into
jbe
sbb
dec
and
daa
xchg
arpl
repz
mov
mov
jl
xlat
pop
movsl
sahf
into
cmp
mov
fstl
mov
jl
div
lea
fwait
adc
mov
mov
fnstcw
cmp
jl
sbb
enter
mov
xchg
or
js
ss
and
insb
xchg
repnz
daa
aaa
lock
mov
sbbl
jns
and
jl
sahf
bound
les
xchg
add
adc
xor
push
inc
stos
movsl
js
fcomps
test
mov
leave
xchg
mov
repz
jge
xor
outsl
sub
enter
lret
lods
arpl
clc
mov
add
add
test
call
xorl
out
cmp
xchg
and
test
aaa
and
sbb
cmp
and
pop
mov
out
leave
and
daa
and
arpl
and
loop
mov
xor
rcrl
pop
mov
push
cmp
push
lcall
mov
subl
addr16
or
in
pop
sbb
jl
pop
divl
sub
xchg
mov
mov
sbb
out
ss
shrb
mov
dec
rcrl
xchg
jecxz
add
jmp
adc
data16
fndisi(8087
movsl
or
and
jne
mov
xor
fcmove
faddp
pop
jns
xor
mov
cmpsl
mov
loop
in
and
or
push
fsub
ret
fwait
jmp
add
sbb
mov
add
bound
sub
jmp
jg
dec
insl
cmc
lret
jg
loop
or
pushl
in
icebp
ljmp
out
shr
jae
fsubl
ss
cli
jmp
pop
repnz
jecxz
rcrb
aad
jnp
jge
or
fcmovne
ret
xor
pop
js
jae
out
mov
add
xchg
adc
sub
pop
decb
jns
push
iret
sub
lahf
xchg
cmp
iret
jae
jecxz
adc
data16
sbb
xchg
pop
ret
fs
mov
stc
stos
sbb
add
rolb
push
push
jns
inc
xchg
fwait
js
pop
mov
or
mov
bound
sti
push
loopne
adc
jbe
push
dec
inc
and
in
or
push
daa
sub
push
test
mov
inc
pop
jmp
xchg
mov
add
test
scas
adc
push
jmp
push
pop
lods
pop
push
rolb
add
rcr
or
cmc
jl
mov
xchg
lds
mov
test
mov
add
xchg
mov
repnz
fistpl
mov
lods
aaa
daa
sbb
jbe
adc
cwtl
sbb
lret
les
lahf
gs
fisttpl
cltd
aas
add
sub
jno
mov
cmc
in
fisubrl
popa
xlat
jae
outsb
ljmp
cmp
ret
inc
mov
daa
cmp
lcall
fidivrs
lock
sbb
lock
fcompl
mov
int
push
into
lea
lcall
mov
mov
sbb
ja
pop
pop
js
jmp
es
ss
mov
or
stos
mov
fsubl
lret
repnz
mov
insl
out
pop
push
mov
call
pop
sbb
or
fisttps
mov
jmp
dec
mov
cli
addr16
hlt
lret
push
shll
push
out
je
mov
xchg
and
and
xchg
inc
lds
imul
pop
inc
aam
mov
push
js
and
push
xchg
mov
daa
push
xor
cmp
sub
inc
scas
in
jb
jo
enter
fs
lret
xor
xor
ret
inc
cmpsl
or
leave
mov
add
push
xchg
inc
xor
sub
test
inc
xchg
dec
pop
repz
adc
and
inc
and
imul
sub
jmp
sahf
pop
cmpsl
je
lcallw
loope
mov
shrb
out
ja
loopne
loope
pop
mov
fisttpll
adc
imul
add
std
mov
pop
aam
xor
push
sub
fstpt
mov
mov
adc
mov
mov
cli
push
shl
push
aad
addr16
dec
jnp
sub
mov
dec
adc
stos
filds
dec
jecxz
mov
or
pop
lcall
sbb
jo
and
aaa
scas
pop
out
mov
inc
lea
in
jns
fstpt
mov
inc
test
jp
inc
add
idivb
pop
les
xor
mov
insb
push
notl
cltd
mov
sub
mov
mov
adc
sub
adc
mov
pop
mov
sbb
mov
das
pop
jecxz
popa
push
cmp
push
pop
push
inc
lret
push
sub
repnz
cs
decl
loop
imul
mov
add
inc
xchg
scas
xor
dec
insb
jae
test
xlat
push
int
adc
inc
notb
lds
cmpsb
lea
push
xor
out
xor
pop
fdiv
dec
rorb
and
nop
fcoml
mov
shlb
xchg
popl
lea
dec
lret
fstpt
es
stos
out
jg
jne
stos
lret
ljmp
and
movsl
ud1
cmp
jne
shlb
jnp
pop
jno
lret
mov
push
jns
mov
imul
and
jecxz
mov
inc
jmp
adc
and
jno
push
scas
mov
push
cmp
in
mov
mov
jnp
mov
insb
dec
inc
scas
popf
fstp
cld
jne
mov
sbb
sub
fsub
xor
xchg
das
jbe
or
sub
cmp
nop
fisubl
dec
xchg
and
stc
jae
mov
test
ljmp
ja
cmpsb
out
jo
dec
pop
cmpsb
xor
loope
xchg
fidivrl
in
push
fidivl
int
mov
add
loop
lret
ret
mov
fcomip
in
les
sub
ljmp
movsl
pop
nop
movsl
xor
or
push
adc
push
cmp
ret
xor
addr16
mov
cs
or
jno
jne
pop
and
mov
add
test
mov
dec
test
std
push
jo
cmp
je
jle
or
je
inc
xor
jmp
push
add
aam
or
lcall
sub
dec
test
test
cltd
mov
out
icebp
daa
dec
or
in
movsl
jb
pop
or
pop
cmp
jbe
test
scas
adc
insb
inc
stc
jge
in
pop
sti
dec
dec
push
rorb
pop
stos
mov
cmp
xchg
jb
aam
xor
adc
mov
or
sub
adcl
jecxz
mov
hlt
ret
sub
mov
xchg
inc
mov
mov
cmp
sbb
and
test
subl
js
push
inc
sub
lea
bound
cld
mov
jae
jg
rolb
sbb
cmp
das
adc
pop
stos
daa
cmpsb
addr16
mov
or
scas
outsl
xchg
xchg
cld
fsubrl
in
dec
fdivr
or
rcr
sti
mov
sti
sbb
inc
xor
push
inc
pop
jne
xlat
pop
mov
into
lahf
les
jae
lods
sbb
rcl
xchg
std
test
push
mov
jmp
mov
mov
enter
loope
xchg
xor
and
sub
fwait
inc
jmp
ljmp
pop
fcomp
lds
xchg
adc
lock
cwtl
mov
inc
movsl
popa
push
add
cmp
js
adc
into
adc
mov
xchg
enter
pop
sub
and
inc
divl
inc
push
mov
mov
cmp
dec
arpl
test
sbb
jne
and
mov
jp
jecxz
es
push
xor
push
leave
sbb
mov
loop
movsl
sbb
mov
mov
popa
cmp
cmpl
pop
cmp
mov
mov
jl
pop
in
push
xchg
push
js
dec
add
lcall
int3
rolb
loop
cmp
outsb
mov
shl
xor
movl
hlt
mov
mov
andl
in
int
leave
shlb
jp
lret
push
xchg
rolb
xor
mov
out
negb
int
and
stos
repz
lret
mov
pop
stos
sub
and
aas
mov
daa
imul
aam
sbb
inc
test
loopne
mov
xchg
inc
loopne
sub
and
clc
cmpsb
adc
rorb
sub
inc
stos
adc
shrb
push
sub
into
out
xor
mov
and
and
jno
sbb
dec
xor
cwtl
and
lret
jecxz
jle
xor
dec
and
sub
or
imul
pop
add
shlb
les
enter
lods
std
mov
sbb
push
or
movb
and
maxps
jg
sub
or
rcll
mov
cmp
leave
push
jg
jp
or
add
mov
enter
jg
xchg
push
adc
mov
insb
sbb
roll
adc
in
and
fsubl
js
shll
sub
scas
xchg
in
daa
in
call
and
jmp
cmp
clc
jbe
mov
mov
fldl
dec
hlt
add
adc
mov
shll
mov
xor
and
cli
out
enter
inc
push
jae
mov
dec
adc
jmp
or
in
mov
fldcw
lods
idivl
and
je
jge
fdivrs
insb
mov
jg
xchg
stc
or
jecxz
test
cmp
adc
mov
dec
jle
cmp
cwtl
inc
push
into
and
sarb
pop
cmp
lcall
xchg
jmp
or
sti
mov
adc
jecxz
xlat
daa
jle
sbb
sbb
fimull
xlat
cmp
cmp
push
mov
cld
mov
xchg
fisubs
jnp
aas
push
sub
pop
adc
out
mov
sub
add
push
xchg
fisubrs
mov
adc
mov
sub
inc
jns
sbbl
and
cmp
mov
xor
aam
out
loopne
sub
cmp
xor
insb
sti
cld
popf
pop
cld
packssdw
loope
mov
or
fnstcw
sbb
xchg
cmp
das
lock
sub
cmp
flds
iret
add
adc
lods
sbb
negb
es
mov
inc
movsb
fnstsw
scas
out
repnz
enter
adc
xchg
jecxz
pop
mov
cwtl
ja
sbb
push
ljmp
cld
cmp
clc
jl
sub
mov
pop
pop
addr16
jne
cli
ss
or
aad
loopne
cli
sbb
int3
jl
cmc
mov
sub
mov
pop
push
popa
and
and
add
adc
pushf
and
repz
or
dec
cmp
jge
cmp
lods
adc
adc
je
cmp
lret
enter
imul
cmp
iret
pop
and
icebp
pop
out
jmp
xchg
test
rcrl
add
dec
pop
inc
lods
jnp
jae
shlb
pushf
testb
xchg
enter
sub
cltd
inc
sub
pop
xor
push
gs
mov
std
sbb
pop
jb
jae
jno
cmpsb
stos
cs
and
in
push
sub
jmp
fldl
mov
add
xchg
mov
adc
andl
fdivl
movsl
cmp
mov
jecxz
out
xchg
adc
dec
jae
cmp
add
push
pop
cwtl
cmp
bound
jge
sub
or
xor
or
jecxz
sub
loope
mov
mov
dec
ret
add
push
pop
lock
jo
mov
sahf
mov
pusha
push
sub
mov
rolb
and
sti
mov
mov
jle
xor
mov
lods
maxps
out
xchg
cmp
and
sbb
rcrl
les
ds
movsl
add
push
sub
push
pop
outsb
aaa
jg
leave
xchg
popf
scas
aaa
jle
adc
aaa
xchg
cmp
cs
push
jg
mov
rcrl
aaa
fdivrl
pusha
sub
gs
or
sbb
aas
cmp
popf
inc
mov
mov
daa
sub
push
mov
ss
pop
imul
loopne
adc
dec
sarl
mov
outsl
repnz
lds
lret
push
cltd
and
push
imul
dec
mov
repnz
sub
in
pushf
fbld
or
out
cmp
mov
daa
xor
out
out
sahf
add
fildl
or
xor
mov
je
sub
add
shr
mov
outsb
pop
imul
push
test
mov
call
lret
mov
cmp
addr16
jl
loope
orb
sbb
lods
mov
lods
pop
lret
or
pop
push
jecxz
jb
int
adc
scas
loop
subl
in
les
mov
add
scas
jecxz
sub
jge
inc
xchg
and
imul
push
mov
jae
aam
mov
cmpsl
mov
mov
sbb
inc
call
or
sub
jno
nop
pop
inc
jp
or
jne
cmpsl
cltd
mov
in
leave
test
xchg
stos
je
mov
cltd
test
fildl
add
push
xchg
sub
jecxz
insl
cmpsb
xchg
scas
sbb
lret
cli
repnz
xor
test
std
negl
mov
lret
sub
test
cmc
xchg
dec
aaa
jge
stos
mov
enter
or
js
xchg
popa
aaa
pop
call
jge
mov
lret
adc
mov
mov
out
pop
add
and
dec
fimull
aaa
bound
mov
xchg
test
inc
into
mov
je
sahf
ss
inc
sti
cs
add
das
out
and
lahf
lods
cwtl
and
shl
cmp
iret
clc
imul
rcll
popa
sbb
sub
mov
and
fdivs
in
push
xchg
mov
aas
gs
mov
ficoml
mov
push
push
mov
movb
pop
cwtl
mov
dec
int
push
add
and
push
dec
cmp
subl
imull
iret
test
int
and
cmpsl
into
adc
jno
popa
mov
lods
dec
xchg
push
push
jmp
ret
repnz
out
or
loopne
inc
jle
shrl
and
call
jmp
fst
sub
and
sub
jnp
idivl
add
xchg
lcall
xchg
xchg
stos
rolb
out
push
mov
imul
mov
xchg
mov
ljmp
xor
sbb
or
lds
add
lahf
nop
inc
test
lds
movb
mov
xchg
imul
gs
test
cmp
sub
movsl
bnd
test
pop
push
fcomp
cmp
push
mov
cltd
daa
loope
fnstsw
or
loopne
int3
pop
push
icebp
lahf
clc
push
adc
push
ljmp
mov
fadd
and
adc
rcl
mov
bound
or
aad
pop
divl
movsb
mov
ret
rcl
jg
test
jle
sub
ljmp
in
leave
lds
push
jno
xor
es
outsl
icebp
sub
fwait
ljmp
cs
enter
adc
mov
in
rclb
pop
out
sti
out
roll
or
cmp
push
inc
xor
inc
add
mov
clc
stc
pusha
sub
rclb
fidivl
hlt
js
mov
jns
adc
push
mov
or
push
push
mov
lret
cwtl
sub
inc
in
adc
dec
sub
in
daa
popa
adc
jae
movsb
jbe
sti
int3
mov
and
incl
pop
add
cmpsl
and
aam
int
in
dec
pop
pop
popf
lret
xor
lahf
mov
ficompl
cmp
xchg
out
push
lods
mov
test
pop
pop
cwtl
push
mov
call
fcomi
xchg
inc
pop
in
shll
push
jne
lret
loopne
lea
lds
popf
or
stos
inc
push
and
cltd
or
jb
aaa
int3
lcall
mov
fs
test
inc
mov
adc
jp
addr16
cmpb
mov
mov
jo
mov
clc
sub
sub
sbb
sub
fcoml
sub
push
cmp
sbb
mov
adc
arpl
sub
aad
pusha
lods
and
int3
sub
negl
leave
inc
mov
xor
and
add
sub
jl
or
jbe
adcl
add
mov
mov
cwtl
lock
inc
xlat
mov
mov
push
push
repnz
loope
das
adc
ret
lret
in
testb
add
cmpsl
xor
iret
cmp
test
push
stc
push
cmp
sbb
cmpsb
xchg
adc
stc
sbb
and
and
mov
xor
imul
pop
aam
stos
mov
jbe
cmp
icebp
add
add
or
ja
std
mov
fwait
loopne
sub
sub
jnp
and
xor
xor
lods
lret
pop
or
lret
jmp
xlat
mov
mov
inc
adc
lea
insb
jb
cmp
cmp
and
aam
test
dec
fcmovb
cmp
xchg
adc
lds
clc
xchg
jae
das
dec
pop
jmp
inc
out
mov
mov
inc
sub
stc
sub
mov
cmp
dec
fwait
add
in
cmp
nop
fcoms
jl
xor
mov
repnz
lea
dec
and
push
enter
push
mov
enter
lcall
push
movl
imul
dec
test
scas
imul
fcomps
inc
aad
push
mov
and
mov
shrb
daa
popa
jnp
imul
jmp
fst
fwait
fcmove
mov
xchg
adc
lea
sti
inc
xchg
xlat
mov
hlt
sbb
icebp
add
lahf
shlb
dec
dec
dec
ss
and
testb
lahf
negb
push
ret
pushf
or
and
rorb
pop
and
dec
mov
xor
or
and
and
fimuls
and
lea
sti
pop
dec
pop
mov
fisubs
or
mov
or
mov
pop
sahf
shlb
mov
add
or
les
and
jns
jge
cmp
adc
aad
pop
icebp
addb
mov
mov
pop
subb
cs
mov
mov
or
cld
push
inc
pop
mov
mov
mov
test
loopne
cmp
aas
xor
add
pusha
jge
cmp
push
shll
fdivs
cmc
jmp
jl
inc
xor
and
and
out
xchg
xchg
add
mov
lock
add
mov
bound
loopne
mov
movsb
pusha
insl
inc
repnz
fsubl
sti
jle
pop
jp
pop
inc
push
ret
or
mov
repnz
aam
jg
sub
mov
pop
inc
dec
repnz
xchg
mov
addr16
hlt
and
cmp
mov
dec
jg
outsb
lds
mov
push
add
stc
cmp
inc
shll
sub
pop
aam
jno
and
clc
xchg
sub
stos
sarb
insb
adc
sbb
es
lock
leave
mov
stos
or
insl
jl
in
xor
push
and
imul
mov
aam
nop
cmp
arpl
dec
enter
fcmovnb
and
mov
and
sbb
push
aaa
sub
mov
mov
mov
iret
mov
lods
sbb
fimull
mov
sbb
add
or
into
sbb
int3
sub
adc
stos
scas
jl
shll
xor
hlt
jo
stos
popa
ret
and
inc
jno
fs
aas
xchg
xor
stc
pop
xor
mov
cmp
adc
gs
xor
imul
sub
adc
ret
adcl
es
gs
lea
andb
pop
xlat
cmpsb
xchg
sbb
mov
mov
ret
mov
test
sbb
push
jbe
lret
jmp
dec
in
js
icebp
mov
and
ja
xchg
or
arpl
cld
js
add
inc
fbstp
pushf
mov
mov
sar
jg
pop
fiaddl
aaa
dec
sub
jmp
in
arpl
sub
movsl
imul
or
mov
or
add
ds
lret
pop
push
loop
mov
xor
in
and
cs
jno
daa
in
add
movsl
fists
repnz
mov
dec
aaa
cmp
dec
jmp
lock
leave
cmp
ja
ds
xlat
pop
push
shl
and
subb
xchg
push
jg
cs
pop
xchg
insb
mov
js
test
jae
and
je
nop
add
jmp
or
aad
pusha
xchg
hlt
mov
cs
jmp
lock
xchg
mov
fwait
rcrb
leave
int
lret
ss
dec
xor
xchg
or
decb
mov
add
test
pop
pusha
scas
fmul
aaa
jg
nop
or
cltd
adc
jle
movsl
fbld
push
xchg
sbb
cmp
iret
into
mov
mov
rorl
mov
addl
mov
icebp
imul
je
fstl
sub
pop
loopne
shr
cmpsb
or
xchg
sub
lds
in
dec
pop
inc
sub
xchg
mov
shrb
sbb
shll
jge
add
out
je
add
aam
loopne
sub
nop
jecxz
or
sbb
inc
sub
sub
sti
inc
or
sub
add
xchg
decb
inc
in
cmc
lcall
cmc
ds
push
loope
daa
ss
ret
jb
ss
jg
sub
cwtl
and
and
stos
aad
pop
jg
fiadds
and
in
jnp
lea
lds
mov
popa
add
mov
sahf
pop
test
inc
imul
fwait
mov
cmpsb
jnp
sub
je
push
add
sbb
pusha
mov
int
xchg
fwait
or
fxch
iret
fs
pop
mov
sbb
push
aad
dec
mov
lcall
scas
jae
add
cmpsl
in
into
xchg
sbbb
adc
popa
mov
adc
sbb
aaa
pop
and
mov
dec
rsqrtps
cmp
push
inc
outsl
push
and
push
adc
aaa
jg
mov
sub
pop
sub
lock
pop
dec
or
out
cmp
or
sbb
lock
inc
fisubl
mov
and
or
clc
sbb
sub
xchg
mov
mov
push
pop
sbbb
mov
mov
sbb
orl
mov
ja
cmp
pop
add
xchg
adc
lods
sbb
xchg
loop
sbb
int
stos
mov
insl
aad
fistpl
pop
xchg
push
xchg
fwait
shlb
sub
jae
mov
dec
mov
lods
cmp
call
bswap
xor
and
and
sbb
mov
shll
add
adc
push
jp
movsb
lock
pop
mov
test
push
popa
movsl
jnp
testb
push
aad
inc
cmpsl
int
lcall
aaa
lret
push
repz
push
cmp
pop
andl
outsl
in
xor
or
sbb
xchg
popf
mov
mov
nop
inc
add
mov
pop
and
inc
scas
insl
mov
jecxz
idivl
xor
add
dec
js
faddl
cmp
insl
and
mov
lahf
lods
adc
int3
repz
gs
and
xor
add
scas
sahf
cwtl
xchg
jmp
and
jns
in
fwait
mov
adc
imul
and
push
or
cmp
test
mov
es
mov
push
pushf
and
jge
es
dec
jbe
mov
sti
leave
imul
pushf
or
std
das
sub
fistps
je
daa
shlb
mov
pushf
inc
in
and
imul
out
xor
ret
sbb
push
mov
test
mov
aas
mov
push
sub
cmp
push
out
sbb
ds
add
jl
ret
xchg
xor
into
fnstcw
repz
pop
sar
sub
outsl
and
adc
shl
pop
mov
mov
lret
jb
in
mov
jmp
mov
pop
cld
jmp
movsl
in
hlt
ret
popf
dec
out
fcompl
adc
pusha
jo
sub
cmp
push
out
sbb
lods
ficomps
movsb
push
outsb
sub
mov
push
push
into
lcall
push
outsl
xor
adc
fidivs
mov
pop
in
leave
lock
mov
aad
mov
mov
insb
mov
xchg
mov
fucom
ljmp
jecxz
xorb
mov
lret
scas
fwait
loopne
jo
int3
pop
jecxz
popa
cmp
inc
inc
cmp
sbb
rep
cmc
sub
sbb
xor
sub
add
add
push
loop
in
jne
and
cmp
ficoml
dec
stc
dec
iret
test
adc
jae
fisttps
cmp
mov
or
ja
or
pop
clc
mov
inc
push
ret
jmp
mov
adc
push
cmp
mov
xor
mov
aam
jg
add
or
xor
mov
bound
push
call
pop
enter
xorb
inc
sbb
shll
or
mov
out
outsl
lret
out
icebp
dec
xchg
call
popa
mov
das
call
fs
xchg
and
pop
data16
lcall
decb
lret
aaa
pop
adc
loopne
fsubl
xchg
scas
add
data16
pop
andl
jmp
inc
mov
adc
sbb
sbb
test
test
leave
or
lret
xor
cwtl
mov
cmp
and
push
jg
mov
dec
das
xchg
add
mov
xchg
adc
push
push
pop
cmc
mov
push
fsub
push
pop
mov
push
mov
push
push
push
adc
stos
sub
mov
repnz
ret
insb
jbe
adc
adc
pop
pop
mov
orb
pop
adc
add
add
cmp
jle
popf
sbb
and
into
lcall
fldz
ret
mov
testb
icebp
inc
fwait
addr16
xchg
mov
ja
mov
and
jns
push
push
sti
in
repz
in
sti
incb
add
int
dec
repnz
pop
into
dec
lds
stc
dec
cmp
fldl
and
jbe
stos
jno
push
lahf
xchg
popf
jmp
rcll
in
loopne
push
test
xchg
xor
loop
push
push
test
pop
loopne
aad
inc
sbb
xlat
nop
popf
mov
push
repnz
insb
aam
enter
int3
mov
mov
mov
cwtl
adc
cwtl
push
add
and
inc
xchg
sub
in
pop
test
pop
movsl
cmp
sahf
sub
stos
nop
dec
sarl
adc
add
or
add
jne
mov
push
xchg
cmpsb
rcrl
incl
sbb
leave
jnp
enter
hlt
pop
and
jl
fistps
xchg
jg
ficoms
jb
adc
jae
sar
pop
stos
sub
mov
pop
push
inc
mov
or
enter
push
sbb
pop
mov
test
pop
repnz
pusha
cmpsb
cmp
and
jg
mov
jmp
inc
sbb
sub
sbb
addr16
dec
mov
and
xchg
or
test
adc
sbb
aaa
mov
sbb
inc
ret
aad
push
push
pushf
pop
loopne
jnp
adc
push
ja
adc
ja
movl
iret
push
pop
jae
aaa
in
and
jecxz
pop
mov
and
into
das
loope
arpl
mov
lods
inc
jecxz
je
mov
daa
fisttpll
mov
push
jl
add
leave
push
push
or
lret
xor
sub
mov
loop
enter
pop
mov
icebp
xchg
fdivp
push
and
imul
push
sbb
jl
mov
cmp
fdiv
in
pop
and
lock
and
js
sti
pusha
pop
and
jmp
and
push
sub
repnz
lea
cmp
jle
and
and
push
and
in
lcall
outsb
jns
aam
popf
dec
xor
xchg
ss
lods
lds
sub
sbb
push
dec
adc
add
test
pop
cld
loopne
xor
jns
cmpsb
add
pop
call
rolb
aad
into
lock
cltd
pop
sub
or
push
loopne
addl
jb
push
stos
xchg
pop
ficoms
xor
sub
push
push
stos
stos
int
sbb
fnclex
adc
sbb
sub
push
pushf
xchg
repz
or
cmpsl
xchg
lds
mov
fisubl
jno
aaa
push
fsubl
adc
movsl
test
sub
adc
adcb
jg
xor
mov
andb
mov
sub
sub
sarl
pop
jmp
xlat
andl
bound
mov
cmp
jmp
mov
imul
sahf
das
iret
ret
mov
adc
mov
xchg
scas
rcl
lret
fisubs
aad
jmp
push
inc
jge
mov
adc
push
pop
cwtl
cmc
jnp
std
mov
icebp
cmpsb
cmpsb
adc
xchg
daa
push
imulb
push
les
leave
je
sub
add
sbb
loope
xchg
xlat
loopne
ret
mov
pushf
mov
cmp
test
fbstp
es
xor
push
jae
mov
or
inc
sahf
mov
subb
or
cs
and
jl
mov
sub
cli
jp
loopne
movaps
sbb
xor
loope
ljmp
mov
dec
sub
ljmp
iret
loope
and
sahf
cltd
das
imul
xchg
cmp
test
data16
add
pop
pusha
pushf
jl
and
xor
jno
jne
inc
xor
adc
xchg
push
mov
inc
int3
jecxz
sbb
mov
xchg
lods
lahf
xor
les
lret
lods
sub
lods
dec
out
and
xchg
call
push
imul
mov
adc
push
ja
add
cmp
insl
mov
cmpsb
into
sub
push
rcl
mov
adc
out
pop
cwtl
test
adc
xor
lods
xor
or
adc
and
lcall
out
movsb
enter
lret
and
mov
mov
lods
mov
sti
popa
xor
mov
push
dec
dec
gs
jl
aad
ss
outsl
outsl
mov
mov
in
xchg
jg
stc
into
clc
dec
cmp
pop
fnstenv
xchg
mov
xor
into
addl
mov
sbb
adc
mov
ljmp
pushf
inc
out
cmp
add
jge
cmpsb
test
inc
and
push
incl
mov
adc
adc
call
sahf
jnp
mov
sbb
orb
xchg
int3
sub
out
xor
push
nopl
loopne
test
scas
movsl
test
push
loop
pop
jl
fnsave
dec
sbb
pop
push
ss
lahf
sub
cs
jae
jp
dec
dec
cwtl
es
je
mov
push
aaa
lcall
jns
das
aaa
add
rorb
xchg
pushf
out
idivb
mov
push
mov
or
sbb
mov
or
cs
repz
addr16
int3
cmpsl
aaa
dec
lea
test
scas
push
push
inc
cmpsl
dec
lock
mov
mov
xchg
sub
adc
lods
and
pushf
mov
sbb
rcrl
dec
pop
stos
imul
cmpsb
push
aad
mov
imul
jne
fucomp
pop
push
jne
and
add
scas
xorb
fidivrs
ljmpw
add
jb
int
add
test
pop
inc
mov
fisttpll
popf
push
loop
fstps
xchg
mov
mov
xorb
mov
mov
rorb
jl
add
cld
sbb
jge
and
les
bound
jnp
movsb
movb
fidivrl
out
xor
sbb
shlb
popf
ret
xchg
mov
mov
mov
movsb
dec
repnz
push
movsb
fs
sar
cltd
dec
ja
sbb
lods
pop
dec
es
push
push
add
ljmp
jle
sarb
mov
mov
iret
jns
out
addl
sub
xorb
jg
adc
cs
mov
imul
test
sbb
leave
inc
loop
dec
xchg
push
int
arpl
sbb
inc
push
lahf
sub
popa
ss
jns
and
xor
cmp
mov
fcom
ds
sub
jp
leave
movsb
mov
pop
repnz
mov
mov
mov
dec
or
xor
mov
xor
jmp
es
jns
pop
sbb
sar
shl
shlb
sub
jne
sar
outsl
mov
lea
cmp
sub
out
dec
push
xor
addr16
in
mov
das
xchg
xchg
push
sbb
sbb
testb
and
sub
out
test
lret
jo
jle
jl
lods
pop
pop
cltd
jmp
insb
push
sbb
jp
outsb
pop
lahf
pop
rcll
mov
es
mov
or
in
jnp
xor
mov
mov
xchg
insl
lret
filds
mov
add
aam
jge
addb
imul
mov
stc
and
mov
cltd
ljmp
add
xor
xor
fs
adc
xchg
adc
ss
inc
aad
out
mov
xor
dec
ret
push
xor
add
es
mov
mov
inc
jle
out
or
and
add
cli
mov
dec
sbb
loop
jnp
movsb
sbb
jmp
lret
push
sbb
es
xor
pop
mov
and
sbbl
cmc
mull
iret
test
xchg
and
dec
std
icebp
in
mov
iret
les
and
push
popf
fstpl
mov
mov
mov
out
fdivrl
and
int3
sbb
mov
pop
pop
mov
and
pop
mov
stos
addr16
mov
lcall
dec
in
dec
aam
in
sbb
test
and
daa
jg
push
aas
fiaddl
sub
movl
ret
into
mov
jnp
bound
psllw
or
pop
inc
and
stos
test
sub
mov
jmp
sahf
pop
sub
inc
call
decl
jno
leave
lds
mov
int3
adc
cmp
sbb
icebp
sub
inc
xor
xchg
std
cmp
pop
jmp
repnz
jno
mov
insl
insl
inc
hlt
out
add
push
sub
out
insb
jge
xchg
arpl
cmp
xchg
and
jmp
and
cwtl
pop
call
fwait
push
pop
shl
cmc
xchg
das
dec
bnd
enter
call
pop
dec
cmc
sub
push
scas
push
sbb
scas
sbb
nop
push
inc
aad
ja
or
xlat
lods
js
push
pop
pop
arpl
jnp
mov
imul
stos
xchg
test
pushf
adc
lock
aam
and
pop
jmp
lahf
lock
fimull
mov
lods
ffree
sub
cmp
push
mov
xlat
fs
mov
shrb
into
mov
mov
nop
sbb
test
jge
push
imul
sub
pusha
inc
cmp
lret
sub
das
and
ja
fnstenv
jp
cmp
sbb
pop
fwait
aaa
pusha
jbe
xor
orl
xor
mov
pop
aaa
pop
cmc
fdivs
xchg
adc
sub
cltd
fs
jbe
ret
hlt
mov
xchg
dec
dec
mov
mov
out
and
sub
in
pop
inc
mov
sub
inc
xor
push
rcr
cmp
jo
addr16
mov
mov
jle
push
cmp
mov
lcall
cmc
jecxz
out
out
sbb
adc
cmp
ja
sti
andl
rorb
dec
arpl
cwtl
adc
sbbl
adc
fbld
xlat
dec
push
cmp
and
jno
jb
jmp
popl
inc
mov
ljmp
sbb
negl
call
cmc
in
add
xchg
and
sub
stos
adc
divl
pop
jmp
mov
mov
sbb
fcmovb
jns
and
pop
inc
test
std
addr16
and
scas
ds
add
stos
rorb
popf
fimull
push
or
pop
mov
and
jl
in
xor
rol
and
clc
add
cmp
add
mov
outsl
mov
add
ss
add
fs
mov
sub
fldcw
add
xor
xor
and
mov
push
jmp
or
adcb
mov
addb
std
rcll
std
mov
daa
add
and
int3
push
iret
adc
mov
push
push
inc
rcrl
jl
push
outsl
addb
les
cwtl
sub
adc
sbb
cmc
loopne
pop
and
inc
sbb
outsl
push
inc
jbe
push
outsl
and
push
lods
fcoml
hlt
pop
jge
cmpsb
adc
lret
mov
or
mov
mov
fcmovne
wrmsr
cwtl
or
xor
and
push
call
jbe
push
hlt
add
push
or
sub
add
pop
dec
add
sbb
test
sbb
mov
xor
scas
icebp
inc
cmp
je
add
out
dec
icebp
xchg
psraw
mov
lret
mov
cltd
inc
cmp
pop
adc
mov
sbb
je
out
in
push
pop
fstpt
lods
sbb
sbb
lock
sbb
adc
repnz
xor
pop
xchg
es
jnp
sbb
scas
mov
in
jle
push
and
pop
xchg
mov
sub
sbb
aas
xor
xor
cli
adc
mov
dec
push
mov
daa
cmpsb
sbb
popa
adc
and
add
test
pop
mov
data16
inc
leave
das
cmp
adc
cmp
mov
lock
addr16
xor
cli
cmp
add
fmuls
adcb
xor
fstp
adc
pop
shrl
pop
or
scas
cmp
lret
mov
std
out
pop
mov
sub
test
dec
stos
cld
and
jae
xorl
enter
imul
sbb
popl
popa
mov
sahf
jnp
mov
clc
pop
lahf
movb
test
pop
aam
mov
push
and
je
xchg
imul
adc
add
add
or
mov
cmp
movsl
inc
push
addr16
cmpsb
lock
mov
lods
fwait
mov
arpl
pushf
clc
sub
lea
pop
ss
in
fimull
and
fwait
dec
lahf
cmp
mov
aas
loope
mov
jg
cmp
xchg
xchg
iret
mov
call
and
loop
add
pusha
pop
mov
ret
sbb
insl
pop
stos
mov
lcall
insb
xorl
test
in
push
sbb
or
hlt
mov
stc
shrb
inc
and
ffree
mov
test
inc
sti
lahf
sub
pop
popa
dec
push
ror
mov
cmp
jp
and
dec
and
into
mov
call
movsl
cmp
inc
jae
rorb
mov
in
jns
push
sbb
push
sbb
xor
out
int
dec
cmp
std
jb
pop
xchg
jge
sub
pop
stos
dec
xlat
adc
or
cmpsl
ret
fistps
mov
sub
jns
jl
mov
aaa
mov
sub
repz
sbb
push
or
push
mov
or
pusha
pop
iret
sti
jns
xor
cmp
addl
xlat
and
fnsave
ret
arpl
push
sbb
sub
inc
add
mov
mov
push
loop
mov
inc
int3
pop
dec
outsl
movsl
into
or
dec
fmul
or
pcmpgtd
dec
xor
push
and
xchg
pop
push
ljmp
pushl
pop
and
pop
outsl
scas
jns
mov
fwait
lret
or
enter
xor
push
iret
aaa
xchg
mov
push
ja
pop
fidivl
push
pop
xorl
out
test
sbb
lods
mov
sub
mov
ret
cli
out
arpl
scas
push
adc
mov
sbb
inc
fs
test
sbb
sahf
daa
in
sub
mov
es
aas
cmp
xor
jo
leave
aas
push
mov
jg
outsb
mov
mov
push
mov
mov
repnz
decb
aam
shll
fbstp
cmp
lods
adc
shrl
dec
loop
mov
ss
lret
sbb
sub
test
xor
out
add
sub
enter
imull
cmp
out
lret
adc
xlat
adc
inc
or
cs
mov
sbb
and
mov
pop
ret
adc
inc
or
jno
shll
je
hlt
es
jecxz
mov
sub
cli
mov
out
mov
jg
imul
pop
mov
jne
cmpsb
mov
push
and
dec
jl,pn
mov
fcompl
int
push
inc
sub
jb
jmp
rcrl
sub
mov
fidivrs
aaa
aaa
jle
into
push
cs
jae
mov
out
push
cmp
dec
push
or
daa
mov
in
arpl
sbb
or
pushf
out
push
lcall
xor
jecxz
or
xchg
test
xchg
inc
dec
xchg
pop
add
leave
vpshlq
adc
lret
je
pop
add
cmpsl
pop
mov
jnp
mov
loope
test
cld
in
imul
add
mov
jne
stos
inc
mov
pop
test
mov
mov
mov
sahf
xchg
cs
jbe
xor
xor
fs
jge
scas
mov
notb
dec
adc
pop
addr16
inc
pop
dec
push
sbb
push
mov
inc
pop
and
jns
and
push
dec
push
sub
adc
cmp
push
out
jo
in
jo
dec
cmp
sbb
pop
sbb
mov
xchg
cld
xchg
pop
int3
test
mov
addl
sbb
pusha
lods
scas
mulb
nop
test
xchg
and
lea
xor
push
mov
insl
mov
adcl
insb
push
mov
push
clc
sub
and
scas
push
pop
test
cmpsb
push
arpl
pop
sub
pusha
cmpsb
sub
sbb
xchg
in
mov
mov
dec
pop
sbb
push
lods
sarl
jne
sub
fiaddl
cmc
ljmp
ljmp
test
int
cmc
jns
clc
out
cld
push
test
clc
or
sbb
xor
mov
stos
js
mov
daa
sbb
les
jl
cmp
add
scas
fwait
adc
out
pop
int
ret
jl
rorl
inc
mov
out
push
into
jp
rcl
lcall
popa
adc
push
addb
test
cmp
arpl
sbb
fstpt
divl
sub
jl
in
std
mov
lret
movsl
pop
and
sbb
xor
lcall
movsb
xchg
scas
sub
adc
xchg
pop
and
cwtl
stc
mov
jl
scas
xor
and
inc
inc
mov
mov
mov
mov
add
enter
popf
or
shlb
int
pop
and
repnz
and
out
clc
popa
xor
inc
sarb
lods
mov
mov
mov
fnsave
lahf
mov
mov
mov
mov
mov
xor
lods
jg
sahf
scas
and
daa
push
push
test
sti
lret
insl
mov
cmp
and
shlb
xor
frstor
fildl
int
ficoml
add
jbe
out
adc
or
int3
adc
push
inc
or
shrl
mov
sti
xchg
fidivrs
sbb
clc
dec
mov
xchg
test
and
insl
and
jecxz
dec
push
dec
cmpsl
sbb
inc
mov
stos
popa
repnz
sub
push
mull
pop
test
mov
adc
xor
pop
out
sbb
cld
movsb
dec
cli
mov
mov
xor
call
cmp
out
test
pop
add
cmpsl
cmp
xlat
call
mov
sbb
inc
and
out
mov
int3
fildll
add
aaa
cmp
mov
add
icebp
pop
scas
and
pop
lret
mov
sbb
aaa
nop
arpl
hlt
ljmp
popf
push
fmuls
push
lahf
push
movaps
xor
sbb
inc
rcrb
filds
xchg
fildl
inc
inc
sbb
mov
lods
fdivrs
stc
or
mov
dec
sbb
jle
ficomps
pop
pop
loopne
aaa
mov
and
sbb
orb
sbb
mov
mov
push
enter
loope
and
xor
add
pushf
lahf
xchg
into
and
xchg
push
stc
pop
stos
and
jmp
xor
int3
es
cmpsb
push
test
dec
bound
in
xlat
sti
fmull
paddsw
ret
std
mov
sub
rorb
loope
or
ret
inc
insb
push
sbb
sbb
mov
pop
leave
sub
mov
push
mov
cmp
scas
sarl
sarl
imul
sub
jnp
dec
dec
es
cld
xchg
mulb
jle
push
test
and
out
inc
xor
xchg
sbb
sub
inc
push
stos
negb
ret
mov
lcall
aas
add
ss
cmpsl
fdivr
mov
jg
xchg
call
cmp
dec
js
sbb
je
mov
jg
outsl
mov
dec
mov
punpcklbw
aaa
outsl
push
mov
xor
rcrl
sbb
rcrb
dec
pusha
pop
mov
es
dec
fwait
mov
cmp
or
cs
test
adc
adc
test
sbb
test
and
cmpsb
and
int3
daa
sahf
test
sbb
push
fs
sub
cmpsl
xlat
add
stos
in
or
stos
jns
mov
jg
inc
mov
mov
xor
fnstsw
lcall
or
js
mov
jmp
jle
ret
sti
cmp
push
pop
cmp
push
push
out
test
mov
imul
jg
mov
negb
pop
and
jnp
fnsaves
enter
lcall
out
or
or
lcall
daa
ljmp
lret
pop
lcall
mov
arpl
daa
icebp
sbbb
mov
cmpl
mov
cwtl
sbb
add
inc
jmp
or
cmp
push
inc
mov
add
cld
sbb
push
stos
movsl
push
outsl
pop
and
or
out
sub
xchg
and
push
pop
and
cld
pop
mov
and
pop
push
sub
lahf
and
mov
add
loop
test
rcll
and
pop
xchg
jmp
out
into
js
out
out
and
jno
inc
hlt
and
xor
and
movsb
cld
int
push
mull
ret
out
or
mov
enter
or
pop
cmc
sbb
xchg
dec
sti
addr16
scas
or
gs
xchg
cmp
rcr
mov
dec
dec
jne
or
xchg
add
mov
movsl
mov
lods
xorl
jg
cmpl
sub
fisubl
adc
pop
aam
in
fcmovb
push
decl
sbbl
loope
jbe
push
and
push
or
push
testb
es
test
push
cmp
mov
jae
call
adc
pop
inc
test
incb
testl
das
sti
or
into
pop
sub
divl
decb
fists
in
adc
jecxz
in
push
pop
xchg
std
cltd
daa
imull
ds
push
jge
movsl
idivl
sbb
cmp
stos
adc
frstor
sti
rcrl
neg
pop
sub
std
scas
loope
lock
test
sub
cmpsb
stc
or
insb
pop
jns
push
jge
pushf
push
adc
fyl2xp1
pop
pop
wrmsr
movsl
lods
movsl
or
addl
jecxz
or
movsl
scas
push
pop
mov
sub
push
dec
mov
and
cli
mov
call
rcrl
cmpsb
test
fldl
pushl
inc
mov
or
mov
addl
fistps
mov
and
loopne
mov
repz
lret
jno
push
inc
pop
arpl
int
xchg
dec
std
enter
mov
and
adc
lds
mov
inc
jle
enter
fistpl
imul
out
mov
or
sub
add
loop
mov
add
sub
xor
aad
push
in
xor
sub
sti
add
aas
dec
cmp
pop
xlat
movsb
mov
sbb
sub
pop
fwait
loope
notl
fisubs
xor
xchg
addr16
ja
jge
int3
and
pop
push
mov
lahf
adc
sub
ja
popa
loopne
adc
jle
and
cltd
xchg
out
pop
add
repz
hlt
ret
push
and
lahf
aas
adc
sbb
jp
sbb
dec
fidivrs
stos
sarl
lods
decb
xchg
cmp
or
xor
add
lret
mov
sahf
push
mov
andl
fstcw
push
inc
xchg
cltd
jne
aas
inc
jns
or
push
add
dec
in
jecxz
test
xchg
stos
jnp
push
imulb
sub
inc
or
roll
cmp
loop
xchg
adc
fisubs
adc
jae
dec
int3
and
call
cli
sub
or
ljmp
xor
stc
test
cmc
test
pusha
jns
jnp
pop
sbb
mov
xor
push
mov
ds
stos
aam
pop
pop
ret
jbe
mov
jge
mov
clc
dec
test
xchg
inc
and
out
jge
sbb
mov
jbe
cmp
mov
out
loop
shlb
sbb
pop
mov
or
into
arpl
sub
lret
je
inc
std
xor
push
xor
cmp
sub
divl
cmp
mov
pop
fs
sbb
cld
sbb
and
mov
mov
mov
add
outsl
jl
xor
mov
fadd
cwtl
nop
aad
lret
leave
test
adc
aad
add
into
push
lods
ds
int3
call
mov
mov
jae
mov
addr16
sub
daa
mov
cmp
repz
inc
inc
enter
and
pop
pusha
xchg
add
jno
push
movsb
mov
cltd
cld
int3
pop
mov
inc
adc
mov
fstps
push
into
insl
cmp
pop
cmp
add
test
dec
push
and
push
mov
sub
lock
and
outsb
xchg
cmp
cmpsl
test
movsb
iret
push
fstp
imul
je
xchg
popa
xchg
mov
lret
cmp
test
dec
cmpsb
xchg
idivb
mov
pop
aam
cmp
pop
leave
push
les
mov
pop
or
imul
out
pusha
push
push
xchg
sub
and
fldt
cmp
dec
cmp
int3
movsl
andl
push
repz
lods
push
int
lds
mov
push
push
fucomip
out
clc
push
hlt
loope
mov
jns
loop
xchg
sub
cmp
and
and
aad
or
pop
dec
js
repz
daa
ljmp
rcrb
jo
push
mov
mov
mov
subl
insb
cmp
add
shrb
inc
dec
sub
lea
loop
mov
jp
inc
ficompl
stos
lret
xchg
loope
mov
int3
ss
and
push
and
repz
jl
push
xchg
les
out
jge
ss
ret
sbb
fwait
adc
arpl
mulb
and
leave
mov
mov
xchg
jae
and
push
and
sahf
dec
mov
dec
sub
aam
and
cmp
and
pushf
inc
pop
bswap
mov
push
and
aaa
in
scas
cmp
pop
mov
iret
sbb
lahf
adc
sahf
seto
xlat
nop
jge
lahf
pop
xor
mulb
push
jno
push
mov
outsb
jb
fwait
mov
test
adc
mov
fists
aas
imul
cltd
jns
jg
outsl
and
push
mov
out
arpl
aam
pop
adc
enter
push
xchg
lock
roll
int
mov
xlat
xchg
pushf
jg
loop
adc
inc
or
lea
mov
mov
insb
and
ret
in
test
dec
sbb
adc
pushf
pop
orb
insl
repnz
sub
iret
out
cmp
aam
sar
test
or
sti
test
int
jmp
jl
sbb
pop
push
loope
mov
clc
sub
shlb
lods
test
iret
mov
ret
movsb
dec
and
mov
adc
mov
mov
int3
cmpps
pop
lea
jne
mov
or
cwtl
push
outsb
xchg
jl
dec
fmulp
dec
clc
push
push
cmpsb
xchg
or
cmp
jae
cld
mov
fdiv
hlt
or
cltd
or
cmp
adc
xor
push
test
push
and
fs
call
jg
or
xchg
jge
test
mov
cmp
adc
sub
fwait
xor
xchg
lcall
xor
shlb
subb
add
push
xor
dec
adc
and
shlb
pop
add
fnstenv
shr
jbe
jbe
aaa
jae
sub
andl
or
push
aam
push
lret
jae
cmc
push
inc
fnstenv
insl
xor
jmp
shr
aaa
lahf
pop
mov
cmp
inc
testl
repz
inc
fcomp
fsubs
cwtl
push
ret
and
dec
dec
pop
pop
and
ror
stos
sbb
call
pushf
xor
enter
jnp
insb
and
outsb
out
pop
and
rolb
imul
lahf
push
inc
imul
and
lds
repz
pop
imul
es
pop
jle
pop
es
and
rcl
pop
lock
movb
push
fadd
in
lret
mov
mov
insl
xor
mov
divb
xchg
into
sar
addr16
mov
aaa
add
aad
add
sbb
in
test
into
push
ss
test
test
das
loopne
push
lcall
stos
cmp
orb
mov
inc
pop
inc
ss
mov
insb
jne
jae
or
dec
sub
sbb
cmp
aad
cmp
pop
dec
loop
test
inc
pop
add
xor
push
pushf
idivb
push
push
cmp
add
adc
jle
enter
test
push
add
out
or
and
hlt
xor
jg
sbb
xchg
fisttpll
aaa
sub
xorl
add
in
divb
bound
out
arpl
adc
les
aaa
mul
imul
add
mov
sahf
and
repz
adc
and
push
xchg
lahf
mov
gs
lahf
lea
sub
lcall
sub
inc
mov
outsb
into
call
or
and
push
cmp
mov
in
or
jnp
add
leave
xor
mov
mov
daa
xchg
inc
adcb
fsubr
lahf
sub
cmpsl
lahf
cmpsl
xor
adc
jecxz
sbb
daa
add
out
fs
ficoms
ds
cld
sbb
rcrb
loopne
push
insb
adc
in
jns
or
jge
out
push
xchg
arpl
nop
sub
mov
jne
mov
rolb
or
ret
inc
mov
in
out
jecxz
pop
cmpsl
fs
xor
hlt
mov
out
jns
jnp
ljmp
sub
data16
mov
pop
pop
xchg
loop
push
push
sbb
repnz
cmp
mov
insb
xchg
jge
push
push
stos
dec
sub
jbe
scas
and
cmp
jae
push
aaa
movsb
jae
es
ficoml
fmuls
mov
je
cmp
loop
lea
mov
clc
sbb
movsl
lret
or
divps
test
mov
dec
jle
out
lock
ljmp
dec
xchg
inc
sub
fisttpll
es
xchg
xchg
add
jae
test
xorl
cmp
and
aaa
push
lret
cmp
je
xchg
repz
adc
push
push
out
in
cli
sbb
ljmp
divl
nop
repnz
xor
ss
popa
sbb
out
jle
cmc
or
dec
shlb
and
ficomps
pop
imul
lahf
push
rorb
lcall
orb
jo
cs
jae
pusha
fsubs
lcall
xchg
iret
movl
dec
loopne
jg
push
mov
cmp
sbb
aaa
or
das
sub
mov
and
push
dec
fildll
mov
in
xor
cmpsl
les
xchg
xor
ficoms
adc
sbb
or
or
insl
test
sbb
add
lods
jecxz
push
xchg
pop
hlt
mov
in
insb
pop
mov
cmp
lea
inc
mov
lock
mov
push
jl
cmp
or
xchg
or
lret
fnstsw
cmp
pop
leave
in
hlt
mov
pop
popa
dec
in
hlt
adc
add
pop
add
jge
xchg
test
sbb
pop
or
adc
mov
adc
cli
sub
or
ror
add
adc
sub
sbb
xorb
xchg
mov
jbe
jb
das
stos
lret
jle
jecxz
inc
dec
xchg
lret
jnp
mov
xchg
xlat
fsubl
cli
rcrl
mov
adc
add
in
or
xchg
xchg
ret
fdivs
dec
push
or
cmp
or
xchg
dec
bound
sahf
and
push
imul
or
xchg
into
dec
mov
int
in
dec
fimuls
dec
gs
mov
fisttps
test
add
lret
pop
inc
rclb
lock
bound
lret
cli
dec
pop
dec
aaa
cmpsl
sbb
sub
cmp
cwtl
das
push
xlat
jmp
jb
push
dec
out
push
test
jp
popf
ret
pusha
leave
iret
cli
outsb
jnp
loopne
ud0
daa
pop
push
out
inc
push
je
test
lods
xchg
cmp
aam
and
mov
pop
std
mov
sti
push
push
ret
loopne
testb
hlt
popf
push
or
cltd
push
xlat
cs
cltd
sub
cmpsb
dec
or
mov
loopne
push
jecxz
jecxz
fs
mov
hlt
inc
pop
aaa
das
fcomip
cmp
inc
jno
and
push
or
int
lret
jge
out
inc
shll
out
mov
inc
rcrb
mov
and
iret
xchg
pop
xchg
stc
sbb
mov
inc
add
add
in
in
mov
sbb
mov
cli
mov
push
repz
in
out
add
std
and
cmp
mov
lds
xchg
xor
xchg
popf
out
lret
lret
lds
cmp
mov
mov
xchg
and
dec
fidivl
mov
cmp
xchg
mov
lcall
pop
pop
lcall
xor
cmp
pop
fs
mov
sbb
mov
mov
fdivr
test
xor
add
and
aas
adc
cltd
and
test
lods
cmp
mov
lcall
rcrb
push
stc
shlb
into
cmp
adcl
mov
pop
xor
adc
movsb
das
imul
leave
xlat
stos
pop
push
cmp
xor
rcll
lret
loop
inc
gs
loop
inc
jg
push
call
xchg
je
mov
push
jge
sub
lds
in
and
push
or
and
or
mov
add
in
in
imul
pop
nop
cmpsl
xchg
cmp
out
jg
sub
xor
mov
repnz
loope
inc
and
xorl
jecxz
cmp
addr16
sub
xchg
adc
jmp
mov
mov
mov
aaa
cld
movsb
mov
fbstp
jecxz
jns
cwtl
and
jne
and
sub
push
jb
mov
clc
and
hlt
sbb
jp
ffree
adc
mov
dec
xchg
xor
imul
iret
lock
and
mov
mov
xchg
sbb
xchg
das
sbb
cltd
mov
outsb
push
cmp
les
and
fcompl
and
and
pop
jbe
push
xor
and
adc
adc
and
xchg
or
incl
pop
decb
mov
dec
icebp
mov
and
sub
bound
jecxz
jg
test
mov
mov
push
pop
mov
jle
cmp
or
dec
pusha
add
cltd
incl
jg
push
mov
fcomip
pop
mov
cld
cmpsl
loopne
sahf
rolb
mov
fbld
in
mov
stos
inc
cltd
inc
clc
stc
inc
add
pop
scas
in
fxch
pop
mov
ljmp
enter
sbb
push
push
int
or
mov
and
dec
repz
imul
or
xor
imul
mov
lea
faddp
outsl
je
or
aad
mov
jl
in
dec
in
or
jne
pop
addr16
in
cmp
mov
or
mov
movzbl
jns
in
sub
inc
add
mov
sub
adc
jnp
pusha
cli
clc
ljmp
mov
and
or
jne
mov
fstps
sti
int3
outsl
stc
dec
jecxz
adc
lcall
push
push
pop
xchg
jne
icebp
scas
aas
mov
cmp
pop
mov
mov
int
dec
add
mov
xchg
sbb
and
sub
lea
jl
dec
and
scas
mov
in
jp
sahf
mov
daa
add
sub
mov
mov
jmp
out
push
cld
test
movsl
mov
mov
fsubl
push
in
xchg
cmp
fmull
dec
movsb
or
pop
gs
mov
jne
incl
sar
jle
out
daa
dec
mov
lea
imul
and
jnp
shlb
xorb
test
iret
cld
mov
pop
mov
jb
xchg
mov
mov
out
popa
loop
jbe
jae
imull
and
je
jb
mov
sbb
aas
cwtl
scas
dec
rolb
and
inc
mov
and
xchg
call
lret
sbb
jmp
das
sbb
fsubrp
xchg
mov
test
jo
sub
and
lret
je
sbb
rcrb
jo
daa
pop
aam
call
push
cmpsb
push
xor
jbe
mov
mov
pop
std
jnp
daa
and
and
jb
cld
add
je
or
movsb
xchg
mov
stc
sbb
lock
jg
sahf
dec
or
xor
fildll
rcl
ss
or
adc
or
rcll
cmp
mov
fistpl
adc
jns
push
aaa
xchg
ret
cmp
call
aam
cwtl
push
mov
cwtl
and
xor
pushf
imulb
addb
xchg
cmp
or
xchg
xor
mov
xchg
dec
mov
int3
jecxz
fimull
xor
aaa
mov
je
lods
adc
pusha
add
xor
sbb
and
xchg
mov
loope
je
mov
cmc
mov
into
mov
mov
add
lcall
les
enterw
leave
xor
loopne
adc
xchg
mov
add
mov
imul
movsl
popf
loopne
jno
cmp
dec
and
sbb
les
in
push
jmp
dec
cmc
sti
in
bound
sti
es
das
ss
js
and
sbb
int3
jno
jp
fdiv
sbb
xor
out
daa
dec
lahf
mov
jnp
push
imul
iret
fnstsw
push
and
push
fisubs
sbb
add
fdivl
sbb
mov
lcall
imul
iret
mov
sub
add
and
cs
aad
inc
std
sbb
aas
dec
push
and
mov
xchg
or
fdivl
mov
xor
push
xor
jl
hlt
testl
push
or
lds
mov
adc
es
fs
mov
xor
bound
adc
jg
ds
mov
inc
cmpsb
jns
icebp
add
into
xor
add
mov
fsub
pushf
ja
sbb
push
cltd
xor
fstpl
xchg
push
push
or
and
aad
mov
stos
jge
fildll
repz
and
sahf
int3
sbb
dec
enter
mov
mov
adc
jmp
in
aas
mov
adc
add
std
or
das
cmpb
mov
jo
mov
ja
inc
sub
dec
add
dec
cwtl
inc
inc
lret
jp
mov
jb
sbb
mov
xor
jecxz
fstpl
cmp
shrl
iret
lahf
or
js
outsb
out
inc
test
lds
int3
clc
test
mov
and
movsl
mov
loop
mov
in
imul
cs
lcall
hlt
imul
cmp
mov
in
sbb
xor
mov
adc
xor
and
cmp
add
and
idiv
test
adc
dec
sub
ljmp
fsubrl
push
sbb
pop
gs
pop
inc
nop
inc
xor
rorl
jb
hlt
aaa
mov
cmp
lret
push
cs
pop
adc
or
out
jg
inc
cmp
mov
inc
push
dec
or
mov
sub
adc
in
cmp
mov
out
pop
inc
fisubrs
jo
sub
cmp
or
push
ljmp
xchg
dec
bound
mov
dec
pop
in
sbb
mov
in
push
mov
rcrb
inc
or
in
mov
pop
and
or
jnp
decl
rclb
in
addr16
or
xor
out
lea
xchg
bound
cmc
sub
push
push
sub
insb
test
inc
test
sbb
sbb
jbe
ds
pop
jge
dec
int3
dec
rcrl
adc
and
mov
add
loope
dec
add
mov
or
outsl
mov
push
push
dec
dec
pushf
adc
leave
push
lret
movsl
inc
rclb
mov
sti
js
out
cmp
add
xchg
pop
mov
shlb
fdivr
jnp
fwait
sub
jb
test
int3
adc
mull
mov
mov
cwtl
dec
dec
test
sbb
iret
ret
cld
lock
xchg
cltd
fdivr
mov
mov
mov
xor
movsl
sbb
mov
addr16
lret
insl
xchg
xor
aam
push
push
outsb
mov
cmp
js
out
sbb
mov
adcl
scas
dec
int
push
out
adc
mov
sbb
insl
fstpl
mov
add
mov
loop
insl
cs
sub
stc
jg
push
push
shlb
rclb
mov
dec
sahf
hlt
jnp
dec
ljmp
xchg
ja
cmp
pop
jo
lods
sub
cmp
inc
mov
fcoms
push
xor
pop
mov
cmc
shll
inc
pmaxsw
arpl
cli
or
into
dec
add
sbb
add
and
sbb
inc
pop
xor
pop
jg
sbb
inc
call
outsb
int3
bound
stos
hlt
sbb
ljmp
fisubrl
jmp
push
shrl
lcall
fildl
int3
call
xor
and
aaa
jnp
adc
lahf
ss
and
shll
mov
loop
add
int
xchg
movsl
xor
int3
sub
push
xor
sub
jnp
xchg
cmpsb
and
test
push
push
test
jle
lret
lcall
lods
push
adc
das
or
enter
gs
pop
mov
dec
fcmovu
and
xor
jnp
pop
cs
add
lahf
sbb
xchg
sub
jge
adc
push
lds
loope
sub
int
in
into
fwait
test
and
notb
and
add
lcall
cmc
sahf
or
clc
adc
mov
lret
push
jae
mov
aam
cmpsb
out
js
mov
mov
loopne
jle
call
imul
pop
in
mov
sub
loopne
sub
pop
in
push
in
pop
iret
mov
dec
fwait
cmpsb
gs
xor
lock
mov
stos
in
mov
push
pop
mov
ret
cmc
scas
adc
mov
add
jns
fsubr
push
aad
test
cmpsl
les
xor
xlat
adc
fsubl
and
adc
jp
ficompl
xchg
or
jbe
xchg
cmpsl
pusha
repz
push
xlat
dec
imul
jbe,pn
mov
stos
maskmovq
divl
xchg
sbb
stc
repz
mov
and
rcr
stos
cmpsb
cltd
and
sub
insl
cmc
xor
frstor
xor
stos
push
cli
push
xchg
mov
and
xor
rcll
shr
dec
outsl
addr16
fidivl
and
aad
inc
das
xor
loop
or
in
enter
mov
mov
inc
mov
or
xchg
scas
lahf
or
sbb
inc
ss
out
aas
dec
push
xor
dec
fisubrl
sbb
subb
push
inc
dec
lods
mov
bnd
fwait
add
aas
lcall
push
mov
sub
cmp
roll
dec
sub
test
dec
and
inc
inc
inc
jecxz
xor
dec
inc
stos
or
cmp
or
dec
shll
and
cmp
mov
xchg
cmp
mov
lret
lret
scas
dec
push
pushf
adc
imul
lock
ja
repnz
jno
xchg
cmp
out
xlat
jmp
out
das
and
imul
loopne
mov
cli
sbb
and
cli
cli
mulb
out
mov
mov
xchg
jl
sbb
cmp
jg
fisttpl
call
inc
cmp
adc
out
mov
rcll
jmp
sub
shrd
sti
stos
push
push
pop
shll
insl
xchg
pop
mov
outsb
aad
mov
mov
out
mov
ret
and
sub
sahf
das
fdivrl
push
inc
pop
fisttps
test
das
adc
aaa
push
mov
push
pop
cmp
ljmp
mov
shlb
or
shlb
ret
rorb
mov
shll
repz
jb
mov
and
lahf
jge
push
ss
enter
xor
and
sbb
cmpb
mov
mov
jecxz
into
jno
movsb
stos
ss
jle
call
ja
movsb
lcall
push
xor
jp
add
mov
std
cmc
mov
adc
dec
and
mov
sbb
or
mov
adc
mov
in
stc
js
dec
and
imul
or
mov
ja
pop
shlb
mov
ja
test
mov
sub
aaa
rol
leave
shrl
aam
xchg
cmp
cmp
inc
push
lcall
in
std
pop
ret
sub
mov
or
lahf
lock
in
insb
fstp
cmp
push
dec
out
jmp
loope
dec
add
mov
test
cmp
sub
mov
dec
xchg
fidivs
gs
and
jo
pop
push
test
xor
imul
orb
jecxz
and
sbb
imul
and
sbb
add
mov
pop
mov
pusha
mov
jbe
mov
mov
fistl
cmp
inc
shrb
mov
in
jmp
mov
or
mov
inc
shl
mov
addr16
xchg
loope
xor
mov
scas
test
int3
shlb
mov
pop
repnz
cmp
shlb
xchg
mov
sub
jnp
in
jnp
and
lock
push
dec
data16
pop
fwait
xchg
aam
pop
and
dec
idiv
xchg
dec
out
dec
push
push
sbb
popf
ficoms
jo
loopne
rol
push
mov
enter
cmc
hlt
lahf
add
dec
and
sarb
xor
mov
in
push
mov
lods
jae
movsl
scas
xor
pop
daa
inc
jp
jl
mov
pop
fdivl
inc
nop
mov
in
pop
jecxz
fwait
xchg
mov
das
mov
mov
hlt
shll
lds
sub
dec
pop
aas
and
adc
mov
cvtdq2ps
imul
push
divl
in
shll
jo
fdivrp
xchg
push
push
sbb
push
dec
je
loop
subb
add
pop
cwtl
ja
fmul
sbb
pusha
incl
fidivrs
dec
mov
dec
inc
mov
pop
rclb
inc
std
and
insl
mov
mov
frstor
inc
xor
in
add
les
mov
push
in
sub
mov
sub
lock
pop
in
jle
xchg
or
mov
jg
lods
jno
mov
mov
jecxz
mov
pop
adc
mov
mov
bound
adcl
dec
sbb
aaa
lret
pop
dec
cmp
test
xchg
pop
fucomp
jl
ror
or
enter
push
mov
cmpsb
rolb
cmp
mov
loop
idivl
dec
leave
inc
xor
sbb
ret
bound
fiaddl
ja
and
std
movsl
clc
or
or
scas
aas
mov
adc
mov
data16
jp
inc
or
xor
test
sub
add
push
int
pushf
rclb
mov
push
out
and
xchg
insb
clc
sbb
sbb
mov
push
pop
xchg
mov
inc
scas
int
pop
dec
ljmp
out
mov
jg
aas
mov
out
and
sub
add
loop
mov
or
daa
out
pop
inc
inc
push
fiaddl
jmp
mov
gs
inc
jl
jo
pop
cmp
in
xchg
je
stos
ds
mov
jmp
adc
cmpsb
xchg
push
adc
orb
adc
or
dec
loope
push
notb
fbstp
push
fistps
dec
dec
lock
sub
cmpsl
sbb
xchg
loope
sub
ret
popf
and
rorb
mov
cwtl
int
and
or
hlt
push
outsl
sub
popa
jmp
dec
test
sub
mov
pusha
sbb
fstps
add
lock
lcall
add
pop
into
mov
sahf
mov
mov
add
iret
sbb
adcl
shl
and
mov
sub
enter
push
sub
cld
jl
mov
jns
pop
cmpsl
cs
ja
daa
push
in
sti
mov
js
xchg
scas
jne
push
lods
cmc
inc
xchg
call
or
and
test
jecxz
in
stc
dec
dec
inc
cmp
push
and
inc
cmp
sub
pop
orl
divb
scas
sub
je
sub
out
arpl
fisubrl
pop
stos
pop
dec
jmp
mov
pop
outsl
addl
pop
pop
or
ffree
add
ljmp
lret
dec
loopne
sub
out
outsb
and
inc
shrl
xor
out
jnp
cmp
jbe
sbb
mov
fmul
std
mov
fstpt
inc
cmpsl
je
cmpb
sub
mov
les
into
je
arpl
pop
adc
aas
pop
dec
cmp
push
rol
pop
out
loopne
nop
stos
mull
fadds
inc
call
sub
sahf
cwtl
fs
dec
ljmp
scas
addr16
shlb
xor
push
cmp
dec
cmp
push
mov
jle
fucomi
pop
mov
jle
dec
idivb
xor
adc
stc
clc
aaa
icebp
out
lret
aaa
adc
xchg
out
out
adc
and
popl
in
imul
js
sbb
ja
js
cmp
push
jbe
sub
and
jns
adc
mov
aam
bound
pop
sbb
mov
cltd
inc
or
ljmp
imul
stc
pusha
loopne
negl
jmp
aaa
scas
dec
cmp
faddl
xor
fs
xchg
dec
cltd
out
loope
pop
push
inc
loopne
subl
sub
into
or
cmc
mov
xchg
mov
jge
mov
xchg
sbb
adc
pop
cltd
cs
aaa
fwait
or
sbb
loope
xchg
cmp
xchg
xor
sbb
jae
mov
cli
add
rcl
pop
and
mov
and
mov
mov
je
loope
int3
js
sub
add
jne
aas
pushl
imul
xlat
jecxz
xchg
sbb
mov
icebp
or
push
push
mov
jo
mov
mov
adc
push
jo
mov
popf
and
cmp
test
push
and
in
sti
mov
mov
imul
cmpsb
gs
icebp
sub
jnp
ljmp
or
mov
test
cld
pop
mov
rorb
aaa
lret
popf
pminsw
jl
jmp
mov
adc
jl
ja
test
adc
pop
jnp
pusha
mov
pop
sub
call
add
rcrb
pop
faddl
and
dec
icebp
movsl
mov
or
and
arpl
out
pushf
jg
cld
mov
ss
test
add
and
or
inc
cmp
xor
and
lea
inc
gs
pop
push
jae
mov
ljmp
in
fcoml
cmp
cmpsl
ljmp
mov
jns
pop
inc
pop
lret
jg
mov
xchg
jle
js
mov
mov
push
cmp
mov
nop
dec
fists
mov
cmp
mov
into
push
mov
jns
add
icebp
das
sub
and
and
xchg
pusha
loopne
sbb
dec
repnz
or
sub
and
jmp
pop
inc
lods
hlt
add
lds
pop
mov
rcl
xchg
jge
mov
adc
xchg
dec
and
mov
push
and
adc
jns
popa
fninit
nop
and
jge
orl
out
mov
lods
sbb
cmp
sub
xor
int3
loopne
test
pop
insl
mov
add
cld
push
inc
mov
stos
leave
cld
inc
loop
in
mov
push
jmp
mov
dec
fdiv
lds
and
cmp
lods
call
aad
adc
inc
push
js
ss
dec
pop
outsb
adc
jecxz
test
je
mov
mov
mov
fld1
sarb
jle
xchg
movl
lahf
cmp
ss
sub
push
pop
out
sbb
cltd
sbb
push
aaa
pop
es
xchg
je
sub
test
fiaddl
testb
push
out
nop
cwtl
xchg
mov
movsl
pop
and
sti
pop
stc
fisttpll
jl
mov
arpl
mov
or
loopne
fwait
loopne
xor
jae
aaa
push
pop
jg
icebp
adc
cmp
pop
fs
out
movsb
xor
jae
lret
dec
xchg
cmp
out
adc
aam
cmp
hlt
xor
stos
mov
cmpsl
xchg
repz
mov
push
sahf
jl
cmpsb
mov
mov
push
stc
sbb
int
xchg
or
in
ljmp
push
dec
mov
xlat
fs
add
cld
or
aad
lea
stos
test
cmp
call
js
or
out
pop
inc
jmp
cli
jmp
mov
leave
mov
loopne
stc
jbe
mov
dec
sti
mov
repnz
pop
jp
test
mov
mov
pop
adc
xchg
aam
jle
or
mov
pop
jl
lahf
adc
pop
cs
movsb
enter
mov
cltd
mov
loop
mul
jbe
ljmp
cltd
ret
sub
add
dec
rep
test
leave
lock
pop
jmp
divl
sbbb
or
adc
sub
sub
push
loope
jbe
popa
lcall
out
jb
inc
into
jmp
leave
xchg
adc
popf
in
les
lcall
lea
out
push
fdivrp
rdmsr
jno
add
in
adc
aad
clc
dec
jmp
and
adc
or
mov
in
cltd
std
aam
outsl
xlat
popf
xor
sub
xchg
gs
test
adc
aas
mov
mov
mov
rorb
dec
clc
or
and
test
jle
sti
mov
jp
xor
xchg
inc
or
lahf
in
jecxz
sub
sub
pop
rorl
xor
push
pusha
stos
lret
das
movsl
mov
outsb
sbb
daa
or
pop
xor
hlt
xchg
subb
jmp
sub
ret
push
nop
cmp
sbb
dec
jae
scas
adc
and
add
sub
aas
jg
out
xor
insl
push
pop
ss
inc
lock
sti
les
sub
cmp
jp
xor
cmp
mov
je
mov
enter
cmp
sbb
xchg
cld
xor
ljmp
int3
sbb
jne
nop
adc
pop
addb
jns
mov
and
cmp
std
in
sbb
addr16
fidivs
adc
sub
lahf
mov
repz
dec
shlb
pusha
mov
lahf
shl
fimull
jns,pn
fcompl
pop
xchg
lea
pusha
pop
adc
je
loope
scas
mov
xchg
cmp
xor
mov
xchg
xor
lds
jae
jae
adc
pop
test
imul
jp
sub
jp
and
hlt
xchg
jne
out
or
sbbb
cmpsl
out
push
cwtl
lahf
loopne
mov
rol
add
xor
xlat
call
sti
add
pop
sub
cmp
in
or
pop
and
push
push
fs
mov
fnstsw
xor
inc
in
in
push
or
in
sti
jg
incb
insb
jbe
jo
mov
sub
sbb
adc
mov
lret
bnd
ljmp
cmp
pushf
xchg
push
shl
daa
pop
mov
divl
and
push
and
fsubr
mov
sbb
daa
inc
cmp
or
imul
push
xchg
jns
and
jp
test
cltd
and
mov
push
loope
mov
lcall
lods
stos
fwait
adc
shl
loope
sbb
shlb
push
scas
fisttpl
out
out
push
adc
cltd
pop
jecxz
dec
lcall
mov
mov
pop
hlt
insb
mov
mov
or
inc
test
pop
jo
fiadds
les
mov
inc
jp
push
pusha
loopne
in
sbb
mov
xlat
mov
sub
inc
movb
jl
fcoms
cmpsb
push
push
enter
and
mull
add
jmp
cmpsb
push
pop
sub
filds
out
and
pop
test
in
or
repz
into
leave
inc
push
and
in
fdiv
jl
dec
fistpl
dec
ret
inc
insl
add
stc
sahf
xchg
or
cld
sub
push
dec
inc
adc
and
movsl
sbb
add
aam
pop
push
mov
lods
inc
inc
je
into
mov
gs
shrb
adc
or
aaa
mov
test
leave
cmpsl
ret
adc
cwtl
add
dec
jecxz
lds
ret
ss
in
push
in
inc
lahf
test
dec
cmp
jbe
xchg
mov
shl
mov
js
mov
jmp
in
jbe
jae
mov
int3
cmp
push
shll
xchg
in
lahf
out
js
lcall
ret
out
ja
jle
and
inc
mov
repnz
adc
cmpsl
negl
ss
fistpll
sub
test
and
dec
fimuls
call
lret
inc
and
xor
frstor
jbe
stos
invd
cmpsl
dec
sub
shrl
jg
mov
push
ss
cmp
xchg
mov
aaa
dec
fwait
out
in
mov
xor
mov
mov
fists
aad
daa
mov
jae
lahf
std
pop
repnz
mov
enter
fimull
daa
cmpsl
mov
gs
mov
sub
adc
or
or
mov
pop
adc
movsb
out
aas
add
bound
or
jno
in
sti
rcrb
fildll
add
jge
xor
shlb
or
sub
ja
pusha
jg
sbb
pop
mov
dec
je
out
dec
leave
pop
leave
push
aam
mov
sbb
dec
cs
daa
sub
in
or
pushf
push
push
int
stos
fsubrl
mov
mov
pop
mov
push
loope
cmp
jle
sub
adc
and
jecxz
out
jnp
add
and
dec
mov
sub
cmp
pop
jmp
ljmp
dec
mov
in
and
scas
fmul
inc
jae
xchg
popa
mov
int3
mov
ja
mov
and
dec
outsb
xor
outsb
adc
mov
test
or
mov
jmp
mov
loopne
xor
mov
or
mov
lret
jl
imul
jns
fbstp
scas
popf
push
ficomps
pop
movsl
mov
push
in
test
push
cmp
pop
mov
xchg
inc
jl
cmpsl
sub
lahf
mov
addr16
and
adc
xor
mov
sbb
and
nop
js
jmp
fcompl
loope
bound
mov
add
lahf
push
ret
add
adc
mov
jne
dec
fdivrs
push
jno
scas
mov
mov
rclb
add
jns
stos
daa
lret
out
fidivs
xchg
inc
jl
sar
movsl
add
incl
jns
fstps
dec
inc
out
mov
and
or
lds
aaa
out
inc
popf
lcall
rolb
sub
aam
sub
in
sbb
cmp
imul
aaa
xchg
call
stos
not
lret
imul
clc
stos
rolb
mov
stos
xchg
push
and
rclb
in
outsl
mov
lock
sub
pop
jnp
adc
cmpsb
test
roll
aam
imul
and
or
jno
sub
icebp
imul
daa
pop
pop
icebp
fstpt
call
enter
lcall
mov
out
mov
in
jno
pusha
aad
xorb
loope
pop
push
mov
push
pop
daa
stos
jns
xchg
ds
jb
subb
adc
cli
mov
and
or
xchg
sbb
decb
lcall
mov
movsb
push
sahf
inc
dec
pop
arpl
and
aam
nop
shrl
or
or
std
aas
pusha
ja
out
cmp
jecxz
push
xor
out
in
or
sbb
push
pop
cmp
insl
inc
xchg
sbb
insb
sub
fcomip
mov
les
popf
lods
adc
xor
mov
insl
imul
mov
outsl
out
and
jae
shr
jmp
mov
dec
pop
add
stc
out
insb
sub
in
cmp
sub
xlat
sub
jb
add
cmp
pop
inc
inc
ljmp
dec
bound
stos
popa
inc
lods
add
jmp
out
mov
jae
fs
or
adc
dec
mov
pop
lods
rolb
inc
cmp
mov
cmp
in
xlat
scas
sar
xchg
rorb
aaa
mov
pop
mov
lods
mov
sbb
sbb
lods
sub
loope
aam
sahf
rcrl
lods
xlat
lea
mov
movsb
pop
mulb
loopne
and
or
adc
fmuls
dec
xchg
out
lahf
fadd
pop
lret
mov
jmp
neg
jb
and
daa
pop
les
hlt
sbb
in
lds
divb
mov
lods
push
add
jg
push
dec
and
out
rcl
jp
std
js
jg
push
mov
nopl
dec
push
int
vpacksswb
jge
jp
in
addb
pop
mov
cmc
or
out
cs
and
in
inc
psubq
shrb
inc
dec
repnz
flds
fst
sti
sahf
out
push
ret
rclb
or
aad
out
jnp
jge
call
inc
add
push
lea
das
loop
jl
xchg
jmp
push
push
inc
dec
stc
xchg
xor
mov
fwait
ja
test
and
push
out
imull
jmp
frstor
subl
gs
jge
out
cmp
dec
mov
in
push
arpl
push
mov
mov
xorb
dec
fldenv
sub
jno
mov
dec
push
mov
data16
sub
mov
dec
pusha
stos
inc
dec
inc
mov
dec
sub
mov
sub
mov
frstor
ret
fimull
into
xchg
xchg
outsl
or
loopne
call
fdivl
dec
mov
adc
xchg
lcall
test
cmpsl
ret
add
or
dec
dec
cmp
xchg
negb
jnp
fistpl
iret
or
addr16
push
lret
jp
cmp
jg
mov
lock
and
stos
adc
pushf
lret
or
repnz
sub
jg
imul
adc
xchg
int
mov
mov
imull
popa
rcr
xor
and
je
ret
sbb
push
lret
lea
out
int3
repz
adc
sub
loop
dec
pop
sub
sub
mov
int3
lret
xchg
rcll
hlt
pop
push
sbb
and
imul
sub
sbb
shrb
and
test
adc
idivb
dec
lret
mov
jbe
mov
or
xor
loop
fs
and
mov
cmp
inc
add
or
popa
out
movsl
and
nop
cmp
in
cmpsl
push
lods
lahf
xlat
jne
idivb
push
fdivl
loope
lahf
das
sbb
clc
dec
pop
xor
ret
in
pop
out
aaa
pop
leave
or
leave
mov
fstpl
sub
outsl
dec
ja
daa
cli
and
sbb
lea
and
sub
pop
or
cli
inc
cmp
enter
shlb
push
jno
vorpd
jp
ss
add
add
mov
outsl
test
push
jne
add
pop
fnstenv
jno
out
xor
push
fisubrl
movsl
js
or
pushf
idiv
fists
daa
dec
popa
repnz
inc
inc
in
ret
mov
adc
inc
jo
daa
jg
mov
inc
mov
sbb
mov
daa
lods
pusha
push
fcoms
arpl
xchg
xor
xor
push
and
call
andl
daa
cmp
sub
sarb
sbb
push
adcb
insb
fidivl
mov
cmp
or
mov
jo
int3
pusha
push
aad
test
or
mov
push
shlb
jp
adc
call
les
mov
sub
inc
aas
inc
mov
ficomps
movsl
inc
movsl
repnz
adc
push
add
dec
fsubrl
fwait
clc
lock
pushf
pop
ljmp
es
fldcw
popa
pushf
push
jle
cmp
fnstenv
pop
xor
jno
stos
in
or
and
enter
or
mov
iret
xchg
sub
fcoms
cmp
movsl
cmp
xchg
stos
add
mov
cli
out
cmp
lods
jnp
fcomi
arpl
xor
dec
loop
ds
pop
arpl
jg
popf
and
scas
loope
dec
sub
test
shl
and
xlat
test
loopne
data16
setbe
fsubrs
outsl
loopne
pop
jg
int3
sbb
push
xorl
roll
cli
loope
inc
mov
push
pusha
in
adc
icebp
pushf
rcl
orl
and
or
dec
sbb
jb
cmp
fisttpl
scas
jl
ret
gs
dec
cmpsb
fadd
les
popf
mov
push
cltd
pusha
mov
sti
ds
jnp
mov
fwait
in
pop
inc
push
lcall
mov
pushf
jge
sbb
ja
dec
mov
icebp
pop
pop
shll
and
loope
xor
adc
sbb
movsb
xor
mov
lcall
sub
fs
fwait
repz
mov
or
mov
pushf
mov
xor
xchg
rcrl
cwtl
sahf
mov
outsb
jb
jb
lods
dec
jns
inc
loope
insb
mov
daa
mov
sub
and
outsl
push
jg
lret
popf
fists
push
jg
push
cmc
push
jmp
mov
sbb
into
xor
adc
test
mov
mov
lcall
inc
cmpsb
jge
pop
jmp
mov
add
push
lret
neg
sbb
push
sbb
movb
sub
addb
bound
ds
pop
std
and
mov
shl
popf
dec
add
xor
fs
mov
mov
push
or
sbb
ret
xchg
and
mov
cmp
mov
btcl
cwtl
inc
fs
in
fisttpll
fbstp
adc
aaa
inc
out
outsb
mov
pop
and
or
cmp
iret
mov
add
loope
mov
aas
adcl
jns
repnz
add
pushf
fcomip
pop
sbb
sub
mov
cmp
mov
mov
int
mov
inc
xchg
in
add
add
jne
xor
pop
jmp
pop
clc
dec
add
pop
call
cmp
jl
push
dec
loope
pop
cmp
je
sub
mov
mov
jmp
out
in
test
xchg
dec
dec
cmp
pop
jmp
sub
inc
enter
sub
aaa
test
mov
jne
xchg
jge
lock
cli
outsl
scas
repnz
sbb
enter
out
mov
sub
ficomps
sub
or
inc
cld
fdivl
test
mov
mov
or
sub
les
sbb
sub
add
std
out
into
sub
adc
arpl
in
hlt
inc
inc
xor
mov
mov
sbb
lcall
dec
iret
mov
push
or
add
je
lret
push
pop
nop
and
push
fs
add
daa
test
mov
xchg
sbb
movsl
jmp
sub
mov
pop
jne
mov
or
add
xor
jl
sti
adc
out
addl
pop
ja
or
clc
cmp
sub
sub
pushf
push
mov
ret
jmp
in
call
out
fimuls
jp
inc
rcr
pop
pushf
sbb
popf
adc
add
rolb
xor
or
jns
jmp
adc
jg
mov
fstl
sahf
scas
dec
pop
ja
lcall
pandn
mov
and
loope
xchg
aas
sub
sbb
pop
mov
das
xchg
adcb
adc
sbb
das
aas
stos
cmpsb
std
sarl
scas
orb
xchg
inc
mov
xor
jle
popf
call
scas
stos
loopew
jne
or
pop
lods
je
or
adc
or
shll
sub
push
fisubl
ficompl
xor
clc
insl
inc
cmp
push
or
lock
ds
fsubl
leave
lcall
outsb
xlat
mov
jns
fisubl
cmp
outsl
jmp
sub
inc
push
or
sub
aad
xchg
cmp
mov
adc
sub
dec
adc
xchg
dec
mov
xchg
cmp
xor
xlat
nop
aad
xorb
xchg
js
jp
loop
mov
inc
inc
or
push
cmp
push
push
shlb
lods
cmp
xchg
aam
mov
clc
mov
adc
xchg
clc
push
ljmp
aaa
xlat
jg
dec
scas
push
and
imul
or
sbb
rcrb
jns
cmp
mov
stos
mov
cmp
xor
cmp
dec
jno
fidivrl
pop
dec
aad
jnp
push
jmp
push
popf
flds
lret
xchg
mov
or
pop
xor
lahf
sub
les
sub
ds
imul
or
in
xchg
addr16
push
or
inc
and
arpl
or
sub
fimuls
idiv
jge
and
roll
test
xor
or
mov
movsb
add
insl
push
jg
lcall
les
out
fisubrs
push
jge
ds
xchg
sbb
add
push
push
hlt
out
sbb
add
cmp
jg
inc
add
in
sbb
inc
inc
inc
mov
mov
test
lahf
add
sti
sub
movb
inc
sub
xor
dec
std
decl
cld
shrl
push
jp
clc
cmp
mov
gs
or
gs
push
adc
xor
shlb
push
lock
iret
daa
xchg
sbb
insb
add
sub
sbb
inc
sarb
fcmovnu
cmpsl
mov
xchg
push
std
test
pop
nop
xchg
add
sub
fmuls
mov
add
mov
mov
inc
or
mov
mov
stos
cwtl
adc
or
fistps
dec
push
ret
arpl
adc
scas
addr16
jmp
out
fadds
testb
or
inc
ret
cli
mov
xchg
sbb
xchg
popa
gs
add
outsl
xchg
dec
mov
in
and
test
sysret
bound
mov
daa
imull
push
das
scas
add
sbb
idivl
int3
ja
int
xor
add
shll
jo
das
xor
clc
sarl
mov
xor
sub
jg
xchg
popa
in
clc
es
dec
cmp
loopne
and
cwtl
stc
in
lret
sub
cmp
call
aam
pop
mov
loope
cmpsb
and
mov
mov
inc
mov
cmc
frstor
sbb
pusha
mov
mov
mov
loop
pop
add
push
mov
test
jmp
lods
or
imul
dec
lds
sbb
lret
fwait
lock
inc
cmpsb
lds
dec
out
sbb
cli
lds
add
jo
gs
push
add
imul
stos
jmp
cmp
sahf
nop
into
sbb
cwtl
in
ljmp
stos
testl
aas
adc
dec
jae
mov
fstps
int3
xor
push
sub
xchg
mov
es
or
mov
dec
jmp
mov
out
or
repnz
inc
adc
cmp
jl
call
subl
jns
out
mov
and
or
cmp
xchg
jg
add
jnp
les
imulb
fwait
mov
xchg
push
mulb
stos
xchg
lods
pop
inc
nop
stos
loop
sahf
push
xchg
fstpl
sbb
sbb
subb
push
or
mov
dec
or
hlt
enter
out
aad
xlat
mov
daa
fbld
ds
jmp
cmc
out
add
pop
mov
scas
sti
jg
fimuls
insl
fdivl
mov
enter
and
inc
pop
movsb
jnp
fildll
jnp
and
pop
jnp
mov
add
ljmp
jno
mov
lcall
sti
andl
mov
cwtl
loopne
bound
bnd
mov
cld
mov
xchg
mov
mov
popf
frstor
fisubrs
mov
sti
inc
out
jl
adc
ret
cli
fmull
xor
dec
popa
jmp
or
xchg
sub
inc
pushf
xchg
push
or
insb
xlat
jg
jns
jge
loopne
aam
adc
bound
pop
aam
cmpsb
aas
sub
inc
outsl
cltd
fdivp
mov
imul
lea
push
xchg
shll
add
jae
pop
cld
jnp
sub
cmp
mov
movnti
push
out
loope
dec
jns
cmc
dec
mov
dec
jl
sbb
mov
jmp
in
jno
push
addb
pop
sbb
lcall
xor
outsb
xor
ficompl
jne
movsl
fwait
and
xor
cmp
iret
scas
jmp
sub
fistps
sub
icebp
lods
cmp
or
fisttpll
imul
and
fs
mov
sbb
dec
jmp
sbb
in
or
jl
mov
imul
and
push
scas
fwait
in
dec
movhps
js
popa
mov
xor
pop
imull
jnp
movsb
push
gs
dec
stc
jmp
cmpsl
nop
hlt
sahf
dec
shlb
and
xchg
je
shlb
popa
es
pusha
lahf
cmp
fidivrs
sub
and
cmp
pushl
fcoml
jg
and
jo
dec
imul
mov
push
inc
scas
dec
adc
std
mov
mov
hlt
add
lahf
scas
mov
sub
xor
push
lods
dec
repz
sti
fsubp
sbb
adc
cwtl
and
pop
ret
sub
or
xlat
cmp
and
adc
out
lds
ret
call
cmp
or
mov
js
cmpb
dec
fneni(8087
pop
mov
sub
push
add
sahf
and
cmp
ret
ja
negb
cmp
sahf
fcoml
nop
cmp
mov
popf
xor
inc
bound
xchg
adc
js
inc
hlt
cld
in
xchg
push
ja
jmp
xor
xor
jg
sbb
xchg
daa
hlt
cmp
popf
or
repnz
jmp
push
adc
adc
scas
dec
push
out
cltd
andb
inc
nop
push
shlb
dec
xchg
dec
xor
int3
sbbb
dec
inc
lret
adc
or
xchg
in
push
mov
sbb
xchg
xchg
adc
mov
ljmp
pusha
push
mov
ljmp
mov
call
iret
inc
dec
xchg
push
imull
adcl
sub
xchg
into
shll
cli
cmpsb
sub
rcrl
cwtl
insl
es
out
jecxz
sub
mov
scas
inc
dec
sub
pop
int3
in
lcall
mov
call
sbb
scas
and
mov
sub
add
fwait
push
dec
enter
frstor
xchg
je
ret
mov
inc
mov
pop
dec
jp
mov
or
mov
stc
mov
or
mull
or
pop
les
inc
push
xor
sarb
ficoms
xor
pusha
lds
jnp
cmp
loop
sbb
pop
mov
icebp
sbb
shrb
fnstenv
gs
imul
daa
jb
in
jbe
dec
sub
xchg
popa
dec
fcomps
clc
and
pop
sub
cld
subb
test
dec
xchg
or
or
sub
jge
addr16
or
push
mov
je
or
in
subb
xor
cltd
or
pop
cltd
add
ljmp
and
mov
loope
jecxz
jmp
jmp
and
adc
orb
cmp
in
nop
pop
movsl
mov
and
fildl
js
push
in
mov
sub
js
mov
fisttpl
mov
add
or
pushf
fnstsw
sbb
add
shl
sub
js
or
ljmp
call
inc
rclb
xor
aaa
sti
test
bound
sbb
lods
or
or
xor
pop
mov
jbe
jns
ss
and
mov
xor
xor
inc
lahf
leave
xchg
or
cld
call
sbb
push
jbe
leave
xor
mov
mov
pop
std
push
push
ljmp
aaa
mov
xchg
dec
or
cli
cmp
shrb
jp
stos
mov
inc
cltd
repz
mov
adc
jmp
loop
aaa
mov
mov
push
cmp
outsl
incb
mov
jl
or
jle
in
sub
add
lahf
int3
ja
xchg
adc
adc
and
dec
shlb
shl
add
xchg
cld
outsl
or
test
outsl
xor
mov
aas
sub
fstpt
pop
push
adc
test
orb
testl
mov
out
enter
rcll
fsub
mov
inc
mov
xor
cltd
push
mov
sti
pop
cltd
cli
jb
xchg
cmc
and
adc
stc
sub
ror
dec
stos
jo
rol
pusha
cmpsl
xchg
push
and
jmp
inc
xchg
cmc
cmp
sub
imul
xchg
mov
xchg
repnz
jb
insb
test
lds
out
dec
xchg
enter
jg
inc
mov
push
mov
dec
push
dec
shlb
and
cmpsl
mov
rorb
cmp
iret
loopne
pop
cwtl
lcall
inc
mov
pop
out
movsb
in
in
ja
and
and
test
sarb
in
je
movsb
add
pop
fwait
pop
ljmp
push
imul
or
xor
ret
mov
sub
mov
daa
jp
xchg
add
bnd
sbb
imul
dec
lret
stos
lahf
repz
out
pop
xor
int3
sbb
or
jle
mov
inc
cmp
pushf
sub
push
jns
bound
aaa
stos
fsubr
add
cmp
push
test
push
pop
cmp
inc
in
outsb
les
push
and
repnz
xor
pop
adc
outsb
push
pop
pop
cmp
or
adc
ljmp
jg
mov
sbb
xlat
loop
or
outsb
rolb
xor
jl
add
xchg
jns
or
es
mov
sub
out
ja
orb
jge
pop
lds
pop
fwait
or
adc
cmp
adc
xchg
fdivrl
pop
jg
fs
sbb
push
stos
daa
sbb
shll
and
sub
mov
cld
push
or
pop
sbb
orb
in
jns
daa
jle
out
mov
xchg
shlb
pop
shll
mov
lds
outsl
jae
test
fcompl
push
inc
roll
pop
ficomps
jg
std
sbb
push
clc
or
jl
leave
xchg
push
pop
pop
mov
lds
addr16
out
pop
out
jnp
add
mov
jae
mov
iret
xor
lds
jecxz
es
mull
loop
out
and
xchg
or
call
mov
loope
jp
or
pop
sub
rcrl
repz
cmc
xchg
leave
add
inc
push
cmpsl
jle
add
jle
lods
scas
out
ss
xchg
ss
xlat
cltd
lods
cmp
mov
push
test
or
jl
mov
daa
mov
jno
subl
ret
inc
sarl
shll
inc
mov
pop
xor
leave
lcall
ficompl
lcall
and
bound
push
mov
bound
pop
out
sub
adc
adc
dec
mov
scas
xchg
sub
cmp
and
pusha
jg
cmp
mov
adc
popf
sbb
in
ds
pop
xor
push
ret
push
jp
or
inc
test
dec
jge
imul
fmulp
lea
and
fdivrs
mov
sbb
cmp
frstor
out
in
in
rcrl
mov
cmp
inc
inc
enter
xlat
cmp
jno
lds
scas
lock
mov
call
dec
loopne
push
push
ds
add
cmp
in
sub
inc
shlb
sub
shrl
mov
push
lds
test
cmp
sub
jae
mov
add
push
aaa
fbstp
and
sbb
scas
testl
aas
sbbb
xchg
sub
jne
mov
cltd
push
neg
xchg
fsubr
and
ret
aas
and
in
sbb
ret
popl
pop
or
cmp
repnz
in
push
hlt
sbb
adc
sbb
sbb
pop
or
sub
jb
stos
xchg
jl
add
mov
push
adc
dec
cli
lock
inc
and
imul
lock
fnstenv
test
popf
push
lcall
dec
inc
jmp
movsb
sbb
mov
sbb
and
aam
lock
and
sub
sub
xchg
pop
push
push
loope
or
mov
mov
enter
icebp
xchg
push
clc
rcrb
adc
push
pushf
ret
adc
jns
add
pop
mov
pop
ret
sbb
jne
lret
push
sbb
cmp
pushf
dec
mov
fsubs
xor
scas
vmread
adc
xchg
adc
mov
sub
loopne
scas
sub
fwait
loopne
push
pusha
dec
and
cmp
jl
repz
dec
sbb
nop
jbe
push
mov
stos
jle
fs
aas
pop
cmp
cmp
pop
fstl
pop
push
mov
or
push
push
mov
jo
push
add
je
mov
in
jmp
xchg
xchg
or
sahf
cmp
mov
or
lret
sub
cmp
out
sbb
dec
xor
scas
loop
lret
scas
scas
pushf
xchg
in
adc
leave
push
arpl
sub
lcall
sbb
mov
and
jmp
mov
mov
push
lods
pop
lods
std
hlt
icebp
adc
and
mov
scas
pop
cltd
or
sub
shll
lock
icebp
push
aaa
int3
test
jb
adc
xchg
stc
je
hlt
inc
and
or
sbb
and
pop
mov
and
mov
rol
adc
mov
adc
mov
fwait
and
xor
int3
jae
push
or
fs
push
or
xor
xor
mov
fwait
out
or
lock
cmp
daa
jecxz
add
jmp
clc
loop
sub
ljmp
aaa
ja
mov
mov
xor
inc
push
outsl
jecxz
and
imul
in
fcoml
mov
push
xchg
stc
or
fsts
fwait
push
cmp
add
jno
jg
pop
add
xor
pop
nop
mov
loop
rolb
fnstcw
mov
insl
cmp
cs
mov
rclb
cmp
movb
xchg
les
pop
out
adc
stc
les
leave
and
dec
pop
inc
insb
mov
out
push
mov
outsb
gs
pop
imul
add
cmp
jno
rcrl
shll
xor
ror
or
pop
neg
adc
add
or
dec
lods
jb
mov
hlt
ret
cwtl
lods
push
cwtl
enter
inc
xor
jae
data16
mov
lcall
add
lcall
ret
aaa
sbb
or
fists
fmul
pop
sbb
cmc
add
jns
test
and
lods
cmp
mov
js
xchg
add
inc
cld
shlb
ljmp
jp
mov
and
int3
xor
jle
ret
test
inc
into
add
mov
adc
sbb
xchg
push
lahf
rorl
mov
cmp
in
lea
inc
repz
shl
addl
insb
and
xor
enter
pop
and
sbb
in
fisttpl
andl
xchg
imul
movsl
pop
mov
cmc
cld
push
dec
or
ljmp
xor
insb
int3
jg
xor
aam
lds
sub
lock
push
rolb
fisttpl
xchg
and
fnstenv
dec
imul
sub
dec
aaa
in
loop
fildl
fs
mov
xchg
jne
mov
xchg
cmp
pop
jl
dec
outsb
jne
mov
jb
negl
mov
or
sbbl
sbb
jns
adc
imul
mov
pop
mov
aam
add
sub
mov
mov
orl
mov
lcall
outsl
movsl
pop
in
push
and
ss
adc
sahf
add
push
aad
xchg
push
ficoms
or
cmp
lds
add
or
test
ss
leave
and
inc
lret
movsl
cmp
sahf
aas
int3
gs
mov
push
jno
jmp
push
push
fchs
scas
shlb
imul
adc
xchg
fsubl
mov
jecxz
cmp
rorl
or
aaa
push
clc
pop
sti
or
push
subl
cli
and
fists
idivb
adc
jne
pop
fstl
cmp
push
mov
mov
out
cmp
mov
in
sub
dec
cmpsb
cmp
inc
aam
pusha
cld
test
pop
jns
jl
test
fmull
shrb
xor
push
pop
sub
adc
jb
push
loopne
rcrb
aad
movsl
xor
movsl
mov
stc
inc
call
jbe
or
or
orb
xchg
pop
andl
mov
mov
dec
and
lcall
and
jbe
mov
xchg
fld1
lahf
jbe
and
jns
xchg
mov
or
outsl
mov
inc
daa
mov
in
pop
mov
fmull
push
push
jl
add
cmp
fs
pop
dec
movsl
push
ljmp
pop
sub
imul
adc
imul
aaa
sbb
in
mov
mov
repnz
inc
repnz
add
stos
loop
enter
cmc
out
mov
mov
inc
dec
mov
and
data16
add
dec
add
cmp
mov
addr16
add
imul
lcall
les
jne
push
and
add
hlt
movsb
xchg
push
sub
leave
mov
popf
mov
and
out
sbb
cli
lret
neg
dec
addb
mov
and
sbb
fneni(8087
sub
popl
xchg
mov
stc
add
loopne
loope
lds
xor
and
pop
clc
push
data16
xor
inc
sahf
add
pop
jecxz
lods
call
push
shrl
inc
dec
sbb
out
lret
cmp
push
inc
loopne
mov
mov
jns
dec
lret
hlt
xchg
xchg
clc
lock
adc
jns
cld
decb
iret
add
pusha
mov
and
mov
arpl
mov
and
inc
int
iret
sub
and
jmp
mov
mov
js
xchg
test
sbb
mov
std
fisttpl
jns
cmp
jle
and
out
add
pusha
aaa
mov
xchg
push
out
outsl
mov
and
ficoml
test
push
add
xor
lret
xor
loope
bound
xor
xchg
pop
or
mov
jo
pop
xor
jecxz
in
pop
mov
pusha
shr
fistl
inc
dec
lock
push
stos
sahf
or
leave
jnp
adc
or
jno
mov
mul
add
aam
jno
pop
out
cmp
cmp
lcall
stc
movl
push
push
pop
outsl
loope
xchg
in
ss
and
clc
sub
jo
mov
in
add
mov
out
movsb
fcomps
inc
mov
fdivl
jne
xor
cmc
and
sub
lret
mov
dec
movsl
loopne
popa
hlt
dec
test
cld
dec
push
shlb
nop
push
stc
out
and
fdivrs
jge
xchg
cmpsb
outsb
xchg
shll
mov
xor
pop
mov
shll
sbb
sahf
outsl
dec
jno
pusha
pusha
or
push
filds
jle
sub
or
in
les
movsl
lods
rcrl
aaa
adc
cmp
mov
nop
ja
sub
iret
fucomip
in
js
stos
push
pop
bound
pmulhw
inc
mov
push
lea
stc
inc
inc
xor
es
adc
repnz
mov
movsl
dec
inc
inc
xlat
in
addr16
and
sbb
adc
or
or
es
rcr
pop
push
dec
inc
jle
ja
mov
sbb
out
and
add
sub
xor
push
cmp
int3
cmc
fcompl
push
push
cli
inc
or
push
jb
shrl
mov
imul
lret
mov
repz
push
mov
push
outsb
mov
addr16
or
xchg
sub
push
fildl
pushl
add
cmp
cmp
clc
jb
repnz
andb
inc
mov
fistl
add
mov
pop
xlat
mov
mov
je
lea
mov
dec
out
add
sbb
mov
push
xor
sub
jle
cmp
inc
out
cld
hlt
mov
and
repnz
push
inc
add
aam
mov
or
sub
or
xchg
xor
pusha
xchg
adc
xor
or
xor
sub
and
jl
cmpsl
out
bound
inc
pop
and
sub
aaa
pop
sbb
add
lret
repz
push
jno
mov
sti
movsb
in
mov
pop
call
mov
and
cld
cli
cmpl
test
xor
test
loope
out
shll
cmp
or
mov
xor
pop
ss
idivb
inc
pop
jecxz
scas
lods
pop
adc
pushl
xchg
movsb
pop
or
andl
mov
or
les
call
mov
xchg
aaa
jmp
and
and
fimuls
or
cmp
iret
sbb
cmp
jmp
cmp
and
or
sub
push
xor
xchg
sub
or
ja
sbb
push
mov
mov
cmp
cmp
xor
cmc
adc
mov
mov
or
xor
mov
clc
mov
pop
je
mov
cmpsl
sbb
jl
jno
andl
out
jge
push
lock
push
push
cmp
ljmp
out
bound
cmp
xchg
mov
xchg
notl
inc
pop
in
push
mov
jecxz
mov
je
xchg
ljmp
sub
pusha
mov
cltd
das
lock
pop
xor
lock
mov
popf
dec
push
add
loop
sub
xor
push
lods
dec
jb
adc
cmp
cmp
ljmp
push
stos
insb
outsl
mov
mov
mov
add
out
sti
in
or
lcall
call
mov
lods
loope
push
push
adc
xor
add
jle
cmp
in
aaa
xchg
mov
dec
inc
dec
jnp
or
sub
iret
push
insl
shlb
push
and
sub
out
enter
jp
insb
sub
adc
sbb
int
sub
ret
xor
loope
xchg
outsb
push
cmp
pop
stos
push
cmp
in
lret
lds
fdivr
mov
mov
cmpsl
mov
xor
sub
fistl
pop
and
push
fwait
mov
scas
jecxz
cmp
rcrl
pop
rorb
mov
leave
rcr
push
jbe
mov
daa
in
lahf
popa
aam
cmp
fistpl
test
jne
mov
jg
jmp
out
cli
aaa
test
pop
out
inc
jle
in
jns
and
sti
xor
mov
jne
cmp
jbe
cmc
xor
orb
and
jne
scas
and
jnp
enter
inc
aas
cwtl
mov
add
jne
daa
cld
jae
into
push
adc
lret
roll
dec
xchg
fstpt
stos
repz
push
jnp
jns
xchg
fimull
xchg
sarl
and
shll
mov
and
mov
hlt
and
mov
push
mov
jo
or
push
lock
pusha
jno
cltd
sti
shll
in
into
loopne
inc
cmp
push
ljmp
inc
lock
sub
sub
jmp
jbe
or
push
push
dec
dec
push
mov
test
jmp
pop
daa
jno
insl
mov
and
popf
cmc
mov
adc
mov
sub
mov
mov
or
jb
ret
adc
jg
jae
and
lock
bound
push
mov
inc
aam
iret
inc
add
inc
xchg
jbe
in
or
mov
movsl
je
jb
lods
jp
in
xorl
sbb
jecxz
jg
inc
mov
jg
movsl
lret
sub
adc
cwtl
jp
xor
jle
or
pop
mov
mov
mov
pop
xchg
cmpsl
std
xor
xchg
jge
sbb
out
ja
inc
adc
jb
cs
xor
mov
cmp
push
push
cld
jge
pop
mov
push
aad
or
push
popf
mov
pop
orl
xor
lcall
lds
fsubr
not
dec
mov
pop
stos
jmp
dec
xor
mov
inc
inc
insl
sub
pop
push
xchg
imull
dec
push
cmp
xchg
lahf
rol
cs
mov
jg
jmp
sarl
call
mov
fsub
inc
imul
loope
divb
inc
lcall
das
xor
sarl
fiaddl
das
rcl
insl
sbb
call
or
jo
in
mov
mov
ljmp
mov
faddl
mov
shrl
in
jno
jo
jecxz
inc
idivb
xchg
mov
out
das
xor
nop
push
xchg
pop
add
es
adc
leave
mov
and
int3
and
mov
hlt
xor
ds
xchg
incl
or
int
xchg
mov
div
lea
inc
pushf
stos
icebp
popa
mov
push
ds
fsubl
mov
in
and
or
pusha
addr16
inc
outsb
popf
clc
js
sbb
loope
test
mov
lret
mov
push
adc
hlt
xor
test
and
lds
fs
jg
or
mov
jecxz
dec
pop
xor
incb
addr16
hlt
xchg
adc
imul
or
adc
mov
mov
lret
insb
aaa
mov
aas
jecxz
clc
xor
or
and
divb
mov
enter
mov
push
and
inc
shlb
arpl
clc
mov
cmc
insl
insl
fwait
loop
sbb
cmp
jp
mov
cli
or
jnp
ret
or
inc
or
inc
ret
cmp
mov
outsb
test
mov
aaa
ds
jo
out
sub
xchg
or
mov
xor
test
insb
arpl
cmp
aam
ret
adc
sbb
jl
jbe
inc
int3
es
dec
leave
mov
mov
dec
mov
outsl
push
mov
or
add
ss
and
daa
jnp
sub
mov
and
sub
fdivl
sarb
cmp
fcoms
xor
dec
movd
mov
xchg
push
iret
or
lock
sbb
or
cltd
push
les
enter
sub
mov
es
jae
jmp
lds
daa
fldl
hlt
popf
adc
xchg
sub
loope
jnp
mov
rolb
mov
fldenv
inc
mov
cs
pop
lret
or
mov
loopne
jg
sti
stos
xor
mov
leave
xor
sbb
pop
adc
add
adc
cs
cmp
rolb
add
arpl
sub
jo
lret
and
mov
xor
loope
push
jge
aaa
lods
push
push
dec
xor
mov
sbbb
add
jl
or
inc
xchg
and
and
pop
jbe
sbb
insl
rcll
popf
mov
push
mov
add
adc
push
daa
mov
xchg
das
int3
dec
shlb
int
push
or
jg
xchg
lods
scas
xor
es
test
jns
mov
xor
sub
dec
in
xor
daa
and
in
out
cmp
mov
in
pop
and
sub
xor
jg
push
fwait
sbb
xchg
push
mov
lret
cmp
in
ftst
mov
push
dec
rcrb
sub
cld
dec
add
dec
aad
cmp
add
jecxz
mov
out
in
lds
adc
add
outsb
adc
mull
lcall
adcb
push
out
lahf
lea
pushl
mov
cmp
shlb
push
insl
sbb
int
jmp
out
or
mov
inc
sub
int
mov
jg
ljmp
pop
adc
lcall
sar
and
dec
mov
inc
outsb
mov
add
lea
push
xchg
dec
cmp
jl
shl
or
and
xchg
jmp
sbb
popf
sbb
lds
xchg
std
ret
mov
mov
mov
ljmp
std
loope
cmpsl
fstps
xchg
sbb
sbb
cwtl
fwait
leave
pop
js
es
mov
xchg
sub
mov
mov
pop
fisttpll
push
sub
inc
imul
hlt
mov
scas
lea
mov
cld
adc
xor
mov
std
mov
sarb
push
js
cmp
das
mov
mov
bound
aam
inc
test
lret
jp
iret
fucomi
add
xorb
jo
adc
mov
bound
hlt
push
rclb
ss
dec
stos
sub
icebp
cmp
add
lcall
enter
loop
inc
mov
in
mov
or
orb
arpl
loopne
adcb
push
mov
ds
rorb
xchg
aaa
pop
lcall
daa
mov
push
fdivs
cli
mov
jp
mov
dec
push
mov
and
stos
pushf
xchg
rcrl
in
outsl
lahf
fildll
pushf
pop
push
sub
dec
dec
cwtl
dec
and
and
pop
and
inc
jmp
data16
jno
je
clc
push
push
pushf
fnsave
jle
inc
mov
xor
ljmp
mov
fdiv
sti
mov
fidivrs
mov
ror
sbb
or
lcall
jbe
inc
pop
imul
movsb
aas
fstpl
and
pop
adc
adc
sub
mov
cld
in
out
inc
shl
call
sbb
and
adc
ljmp
mov
inc
ja
adc
pop
cwtl
xor
adcb
add
cmc
xchg
push
aam
and
or
cmp
cltd
mov
lcall
int3
cs
sbb
es
ss
ss
cmc
fidivs
imul
mov
sbb
or
sub
or
push
loopne
jb
ljmp
hlt
adc
push
adc
outsl
mov
xor
leave
add
lock
sbb
pop
jg
mov
sbb
fnstenv
push
jg
add
adc
dec
ds
and
fnstcw
pushf
pop
jle
das
cmp
movsb
cmp
pusha
mov
outsl
repz
or
add
and
sbb
push
adc
push
mov
push
inc
and
add
mov
test
mov
gs
add
inc
insb
pop
popa
push
je
adc
fucomi
sub
push
enter
lock
jecxz
ds
shlb
sbb
or
pop
or
inc
mov
bound
outsl
push
inc
dec
stc
and
mov
push
loop
aam
test
ret
inc
cli
cmpsl
stc
out
jg
outsb
sti
push
lea
push
adc
in
pop
in
divl
add
push
xchg
icebp
scas
push
xchg
sarl
mov
cmc
popf
repz
or
mull
xor
std
stc
outsb
lahf
lahf
xor
jae
xor
lcall
pop
xor
mov
jmp
out
mov
int3
movsl
or
fcompl
mov
jecxz
xchg
int3
aas
and
mov
es
scas
pop
je
lds
and
jno
shll
and
and
pop
mov
sub
dec
lret
lret
call
aam
mov
xlat
scas
repz
sbb
inc
call
jp
cmp
xlat
out
mov
mov
mov
inc
loopne
mov
sti
dec
jp
sub
je
jns
push
fnsave
jbe
add
xor
dec
in
dec
es
insl
faddl
mov
adc
insb
cmp
cmp
insb
mov
gs
cmp
lea
and
adc
mov
test
popa
xchg
rorb
lahf
or
xor
jne
test
daa
in
pop
dec
fisttpll
mov
ficoml
dec
or
inc
adc
cwtl
je
sbb
pop
push
push
sub
adc
sub
dec
inc
jb
pushf
lock
and
jb
mov
lea
jge
insb
jne
mov
add
std
sub
rclb
fdivs
jb
or
sub
lods
xlat
addl
dec
mov
ss
sbb
iret
jl
ja
adc
pop
ss
pop
mov
sbb
mov
and
lock
and
fwait
jle
pop
add
adc
pusha
rcr
fst
push
in
inc
std
mov
pop
pusha
xlat
and
das
pop
mov
mulb
mov
mov
shr
pop
mov
xchg
xor
jmp
lods
hlt
pushf
or
xor
ljmp
frstor
mov
sub
cmp
mov
dec
sub
loopne
addr16
je,pt
es
loope
adc
inc
leave
lret
jae
and
mov
lret
or
mov
and
sbb
dec
xchg
mov
nopl
dec
xchg
push
xor
das
sahf
sub
sub
jl
push
loop
stos
das
in
cmc
xchg
mov
and
mov
adc
mov
sbb
sbb
in
or
xlat
loopne
bound
jg
jg
mov
jg
push
mov
sbb
and
xor
insb
dec
mov
dec
mov
and
js
add
mov
mov
shl
das
je
test
or
or
xchg
lahf
std
or
or
and
adc
lahf
ss
stc
bnd
js
mov
push
out
fidivrs
rolb
mov
xchg
std
jmp
sub
jne
in
push
jbe
mov
lcall
lds
mov
pop
xchg
out
push
int3
lcall
push
std
jb
push
int3
adc
cmp
mov
popf
xchg
jmp
xorb
mov
cmp
push
insl
xchg
outsl
fisttps
je
in
outsl
mov
je
rcll
sub
and
enter
jno
jns
js
and
ja
adc
jae
iret
mov
mov
cltd
mov
cmpsb
cmp
inc
add
or
cld
mov
pop
cmp
and
stc
mov
and
inc
mov
push
mov
push
add
or
jge
fwait
and
imul
sub
rclb
cwtl
stos
loope
lods
jecxz
and
ret
xchg
cmpsb
psubd
lods
inc
fldenv
inc
adc
test
pop
or
es
in
xor
jns
fdivrs
push
xor
int3
lea
mov
pop
pop
outsb
sub
or
jmp
mov
push
bound
insb
shll
pop
cwtl
and
hlt
mov
jb
imul
decb
je
pushf
push
iret
mov
push
fidivrs
mov
sbb
in
pop
bound
ljmp
mov
add
dec
sbb
addr16
ret
imul
push
xchg
rorl
inc
mov
adc
sahf
outsb
cltd
xlat
pop
mov
fiaddl
mov
sbb
insb
dec
xchg
pop
das
xor
mov
test
cwtl
data16
stos
xchg
sbb
lret
sbb
push
xor
mov
ret
cmp
icebp
int3
xor
dec
andb
daa
pop
cmpsl
sahf
in
sbb
shlb
sbb
xchg
out
cmc
cmp
pop
xchg
rcl
dec
xor
fcompl
or
or
into
aaa
call
stos
cmpsb
jb
in
and
jge
hlt
push
and
enter
sbbl
imul
cld
outsb
push
rcll
out
leave
pop
call
das
jmp
add
jnp
push
test
pop
or
xchg
mov
sti
clc
xlat
movsb
pop
push
in
add
repz
push
dec
mov
outsb
add
sbb
sub
add
daa
adc
xor
cmp
call
push
sbb
inc
loopne,pn
pop
in
cmpsl
or
inc
inc
adc
add
and
push
lret
mov
push
sbb
dec
pop
or
xchg
mov
test
aaa
pusha
sub
fnstenv
pusha
pop
icebp
shl
push
test
or
movsb
xor
xor
jl
fcompl
jg
into
jecxz
jmp
xor
and
sbb
adc
dec
pusha
out
cmp
adc
pop
xor
stos
je
es
push
xor
dec
aam
jle
lds
pusha
mov
xor
loope
les
and
dec
dec
lahf
jo
add
ja
lret
icebp
cmp
mov
mov
sub
jg
push
dec
jns
cltd
inc
outsb
mov
jp
into
jecxz
mov
xchg
jge
pop
sti
inc
std
addr16
mov
jl
pop
pop
and
and
pusha
cmp
loope
pushl
js
add
int
pop
inc
ja
shl
inc
fcoml
mov
dec
sub
cmp
cld
daa
gs
mov
inc
insb
arpl
insb
out
fidivs
push
sbbb
movsl
dec
push
outsb
adc
or
rcrl
sub
in
sbb
in
xor
std
sbb
xchg
pop
xor
ljmp
lods
std
cmp
mov
les
fs
stc
or
mov
setns
rorl
xor
xor
mov
mov
adcl
out
cmc
or
arpl
jne
jge
into
dec
pop
mov
mov
leave
mov
cmc
sbb
fstps
shlb
out
mov
idivb
test
adc
stos
movsb
adc
mov
mov
or
xchg
mov
pop
adc
sub
push
imul
repz
sti
adcb
pop
sbb
fldenv
pop
mov
aaa
jnp
mov
dec
test
lret
outsb
mov
sub
pop
popf
mov
cld
lock
sahf
dec
ja
aas
test
add
test
cmc
xchg
xchg
jns
les
cltd
rcrb
adc
push
xor
mov
cmpb
clc
xchg
fistl
adc
sbb
and
xor
repnz
cmp
adc
sbb
jge
mov
mov
aas
es
int3
sub
movsl
es
in
sar
imull
adc
jge
add
adc
adc
sarl
scas
mov
push
jnp
pop
dec
xchg
shrb
mov
sub
popf
mov
lods
loope
out
mov
pop
sub
adc
imul
or
test
mov
add
xor
ds
sarb
pop
into
je
add
stos
pop
cmp
lcall
movb
out
je
rcrl
movsb
test
negl
dec
sti
rcrb
das
sarl
loope
dec
fwait
lahf
call
jae
xchg
mov
ret
fwait
div
pop
mov
shl
mov
jno
xchg
jle
out
jmp
xchg
and
push
mov
mov
and
dec
fwait
rorl
das
pop
sbb
jmp
and
clc
or
fs
inc
dec
add
neg
outsl
jmp
cmpb
test
mov
mulb
sahf
and
shl
add
mov
ret
push
jnp
jnp
push
in
test
pop
cmp
sarb
cmp
repnz
push
outsl
sub
or
dec
nop
js
loop
outsl
daa
jp
inc
shr
shll
stos
stos
das
xchg
imul
fidivl
mov
ret
fwait
test
icebp
imul
cmpsl
sbb
or
lret
stos
xchg
cmpsl
and
mov
push
lahf
sbb
cmc
mov
inc
add
and
cmc
dec
scas
dec
sbb
lea
lret
push
xchg
enter
inc
mov
pop
sub
arpl
jp
rorb
and
cmp
mov
dec
shlb
stos
or
into
add
movsl
pop
pop
add
lds
mov
cmpsb
and
fcomps
sbb
and
or
scas
jns
arpl
push
imul
cld
mov
movsl
pop
pusha
lahf
ljmp
fsubr
lods
cmp
cmp
push
or
jmp
add
lret
lods
cmp
mov
je
mov
rcrl
pmuludq
mov
dec
inc
movsl
sti
ror
pop
cmp
jmp
xchg
add
stc
nop
mov
lods
sbb
les
fistpl
mov
and
and
icebp
lcall
add
inc
jp
cwtl
add
inc
xor
adc
loopne
lret
inc
incb
gs
scas
clc
addb
jle
sar
xchg
lds
push
in
push
int3
std
sub
push
jns
leave
mov
jbe
insb
out
daa
jp
dec
sbb
es
mov
inc
lds
out
xor
sbb
loopne
adc
mov
cwtl
enter
sbb
in
pop
mov
test
lahf
xor
pop
mov
inc
aad
sbb
mov
xchg
and
jl
mov
mov
cltd
ja
xor
shrb
xchg
fbld
or
cmp
mov
push
daa
jne
inc
push
popf
cwtl
aaa
cmp
inc
sbbb
sub
pop
imulb
lret
sub
sub
jle
or
iret
jbe
add
outsl
or
cmp
dec
sub
pop
jmp
jae
jne
pop
and
mov
loope
dec
in
push
pop
inc
cmp
xchg
push
inc
lahf
imul
arpl
add
sbb
insb
into
and
add
mov
lahf
rorb
aas
pop
js
enter
out
jns
dec
adc
lcall
xchg
sbb
gs
loop
sbb
dec
cmp
jbe
std
dec
pusha
xchg
xor
sti
push
adc
cmc
inc
xchg
jge
mov
push
xor
and
call
jae
aam
pop
ret
dec
adc
xchg
mov
sti
mov
out
or
xlat
and
test
pushf
cmp
std
cmp
add
jbe
les
cmp
scas
in
dec
ss
cmp
cmpsb
and
xorb
push
mov
testb
andb
js
inc
xlat
stos
mov
mov
test
jmp
cmp
jg
push
xchg
and
icebp
rcrl
movsb
ljmp
minps
je
fucomi
ljmp
add
jb
ja
and
inc
fiadds
das
push
sarb
loopne
push
adc
sub
je
mov
gs
outsb
movsl
rcrl
mov
inc
ret
out
sbb
xchg
mov
mov
loopne
pop
mov
xchg
std
in
xchg
movups
popa
push
sub
dec
xchg
push
mov
cs
jp
or
xchg
mov
jae
dec
add
aaa
outsb
fdivl
frstor
or
jnp
sahf
xchg
js
aas
cmc
popa
pop
mov
iret
fchs
test
outsb
test
push
jge
sahf
jno
or
lret
gs
inc
cli
cld
and
in
scas
loope
sub
sbb
cmpsl
xchg
out
xor
sti
cmp
sub
fstpt
mov
mov
jb
sbb
mov
xlat
push
out
mov
movsb
jmp
sbb
mov
fmull
shll
mov
jno
push
rcrb
xor
jl
stos
sti
adc
adc
dec
xchg
call
sahf
and
lahf
in
iret
jp
mov
scas
out
lret
int3
pop
push
sbb
dec
push
aaa
sub
aaa
or
jbe
bound
or
mov
int
adc
inc
xor
xlat
adcl
pop
push
adc
out
cmp
cmpsl
xchg
adc
fwait
mov
pop
das
popl
mov
sub
adc
and
cmpsb
and
mov
push
cld
adc
cwtl
push
adc
icebp
adc
jl
mov
fwait
sub
cmpsl
pop
ret
out
enter
mov
aam
add
shll
push
mov
mov
and
jnp
jg
sbb
push
or
pop
fldt
repnz
xchg
xor
icebp
ss
add
pop
sbb
cmp
fiaddl
pop
xor
cmp
mov
push
sarb
xor
shrb
lahf
dec
or
dec
das
pop
popa
cmpl
mov
movsb
cmp
aad
or
pop
scas
mov
and
xor
adc
adc
cmp
mov
xchg
or
push
and
add
lods
std
fs
stc
sbb
ljmp
out
push
in
cmp
inc
lods
sbb
stos
addr16
clc
jbe
jae
and
cmp
xchg
pop
jo
xchg
push
xor
add
xor
hlt
mov
aaa
or
push
test
mov
sub
stos
xchg
es
dec
pop
mov
pop
and
fstpt
int
bound
and
mov
imul
pop
test
push
testl
aam
mov
imul
mov
loop
mov
sub
jmp
push
add
inc
cld
ljmp
dec
js
pop
in
js
push
sbb
lret
mov
push
sbb
mov
fldt
or
out
popf
mov
fbstp
cmp
ljmp
je
test
jne
in
push
repz
enter
inc
out
arpl
or
push
rcll
scas
mov
push
rcl
insl
sti
and
mov
fs
shlb
adc
out
in
sti
out
push
mov
and
sbb
sbb
push
out
rcll
cmp
adc
xor
xor
cmpl
shrb
push
and
adc
nop
lahf
sahf
ret
cmp
cmp
fs
stc
je,pn
cwtl
repnz
fwait
stc
sub
in
mov
pop
je
jecxz
add
out
aam
fistps
lahf
ds
outsl
pop
adc
mov
mov
sub
mov
xor
mov
xchg
ss
test
mov
dec
nop
in
enter
rol
fisttpll
push
push
push
jge
into
pusha
in
out
push
jp,pn
xchg
add
mov
push
sbb
movsb
inc
and
mov
jb
inc
lds
call
ret
dec
fldenv
ret
lcall
stc
cli
rcll
add
mov
frstor
lock
out
xchg
jmp
and
mov
mov
hlt
hlt
dec
test
sub
mov
dec
js
sbb
sbb
nop
xchg
mov
sti
adc
and
cmp
ds
push
iret
cmpsl
jl
jp
je
addr16
push
pop
movsb
loope
mov
push
loop
dec
sub
mov
cmp
pushf
aam
xchg
mul
aad
and
test
mov
shrl
rorl
mov
mov
popf
adc
cmc
movsb
push
aaa
sbb
sub
add
add
inc
pop
ret
fdiv
push
subl
or
dec
idivb
lods
mov
cmc
rol
and
xor
and
jae
ret
and
and
les
sbb
iret
rcrb
pop
lods
ss
dec
repz
add
mov
inc
lret
and
test
mov
cmp
mov
mov
iret
dec
sub
dec
inc
sub
cmpsb
hlt
cmp
push
or
sub
les
nop
fldcw
out
push
ss
arpl
shll
add
sub
inc
int3
and
cwtl
cmp
adc
xor
sub
mov
inc
mov
dec
and
inc
pop
push
shll
scas
hlt
add
imulb
hlt
mov
xor
jecxz
fs
dec
cmp
dec
popf
mov
cld
enter
frstor
lret
mov
mov
cmp
pop
movsb
scas
adc
mov
sti
inc
adc
jecxz
dec
sbb
cli
xor
mov
mov
jnp
cmp
jb
aam
push
pop
pop
xchg
xchg
jmp
fsub
pop
fisttpl
sbb
stc
push
arpl
jp
pushf
pop
add
std
dec
adc
xchg
mov
sub
mov
ds
or
ss
ret
cmp
cltd
lds
cmovb
mov
adc
mov
call
xchg
int
jge
mov
notl
insb
add
mov
push
xor
or
jecxz
scas
sub
jnp
in
and
sbb
sub
cmp
xchg
push
out
cs
or
iret
and
rcll
sub
aas
pushf
ret
and
fistl
ret
cmp
out
repnz
and
sbb
jp
sub
gs
loope
push
jns
cmp
addr16
data16
sub
test
gs
push
sub
fbstp
sub
movsl
pop
dec
test
subl
into
mov
xchg
mov
sub
sub
imul
into
pop
dec
add
pop
xor
out
adc
out
clc
cmp
and
movsl
sbb
inc
in
iret
dec
fcomps
ja
pop
fidivrl
sbb
push
lahf
mov
inc
sbb
pop
sub
lret
in
sti
insl
imul
push
jp
mov
test
ds
insl
ljmp
rcl
and
lea
dec
in
aas
in
loopne
push
stos
js
mov
popa
mov
pop
daa
int3
dec
push
cmp
xchg
mov
mov
cli
jae
cmp
movq
sub
jg
sub
sub
pop
xchg
pop
pusha
xor
fistps
orl
mov
ja
sub
add
int3
or
std
jbe
adc
push
sub
int
lret
popf
testb
adc
sar
add
cmp
nop
cs
sbb
jno
icebp
jne
incl
jl
jge
fcmovb
and
lock
icebp
sub
cltd
and
cmpsl
xor
lds
fwait
dec
fcomps
es
push
xor
pusha
xchg
arpl
dec
pop
sub
aaa
ljmp
andb
es
es
int
hlt
mov
xor
out
shrl
mov
es
inc
dec
scas
dec
mov
push
sbb
daa
cmpl
insb
in
cmp
out
mov
cmp
mov
movsl
out
orb
fdiv
xor
add
pop
adc
or
and
loop
push
xor
mulb
stos
lret
add
mov
data16
jmp
in
push
pop
out
adc
repnz
js
or
shll
or
ljmp
sbb
pop
xor
sbb
sbbb
or
pop
jecxz
mov
daa
mov
and
daa
or
outsl
inc
std
and
and
dec
xor
xor
mov
out
stos
sbb
cs
adc
out
hlt
mov
les
sbb
mov
cmp
ret
or
sbb
test
sub
mov
sub
or
jg
stc
sub
cmp
loopne
decl
mov
jo
pop
mov
hlt
neg
inc
mov
or
popa
sub
pop
adc
jns
notl
or
add
lea
push
sub
adc
xlat
idivl
lea
loop
push
cmp
icebp
stos
arpl
xor
insb
sbb
sub
bndldx
ds
inc
or
repz
ljmp
add
xchg
lret
jmp
std
add
icebp
repz
insl
sub
pusha
cmp
and
aaa
lock
fs
mulb
fwait
call
imul
xor
movsl
adc
fsubs
xlat
out
rorb
cmpsb
jo
into
xor
inc
into
sti
orl
mulb
imul
xor
xchg
int3
pop
or
lret
add
enter
imul
in
xchg
movsb
sub
out
add
outsb
insl
mov
sbb
jmp
push
add
les
pusha
add
inc
add
jge
push
sbb
or
subl
push
inc
or
in
cmp
and
mov
nop
outsb
xor
movsl
cltd
dec
sbbb
aam
pop
pop
fldcw
pop
shll
out
jle
xlat
sbb
push
pop
mov
test
mov
incl
lret
mov
jl
add
movb
cli
xchg
push
stos
adc
push
ljmp
insl
outsl
sub
xor
add
jb
fldl
jb
outsl
lock
icebp
lahf
or
insl
mov
or
pop
ret
les
pop
mov
dec
pop
ljmp
push
into
sub
outsl
jno
cmc
adc
xchg
sub
dec
xchg
xlat
and
es
sbb
scas
cwtl
xor
or
sti
lock
pushf
cld
jns
mov
cmpsl
sbb
ja
jge
jp
push
rorb
out
and
scas
pop
xchg
clc
and
mov
mov
popl
call
ret
or
out
imul
mov
and
sbb
test
dec
aaa
or
ss
pop
int
ret
add
inc
and
in
push
in
arpl
iret
adc
lock
sub
mov
scas
push
lahf
iret
or
push
movsb
dec
leave
shlb
sub
leave
add
dec
fnstenv
sub
push
sub
cmp
in
mov
sbb
jmp
ds
dec
lret
ljmp
push
outsb
loopne
jns
or
icebp
sub
xlat
fiadds
lahf
clc
mov
in
pop
mov
in
fs
jecxz
mov
cmpb
fldcw
mov
clc
or
inc
leave
cmp
push
and
dec
scas
xchg
xor
cmp
outsl
dec
in
xor
dec
mov
sub
test
fs
jnp
and
mov
in
xor
inc
and
jmp
fcompl
adc
iret
out
fsubrp
and
add
enter
and
divb
testl
xchg
ljmp
and
repz
ret
es
imul
daa
xor
inc
inc
xchg
bound
mov
out
xchg
loop
mov
sbb
cli
rorb
icebp
or
out
mov
sbb
shrb
sbb
in
mov
hlt
ljmp
mov
pop
imul
mov
sbb
rcr
cmpsl
adc
or
arpl
dec
roll
sahf
push
out
cmp
repz
cmp
push
adc
and
cmp
mov
jb
out
leave
lahf
jb
and
mov
mov
ja
cmp
pop
decb
xchg
jno
cltd
or
jmp
adc
aad
jle
sbb
sbb
jge
add
fsubl
xor
xor
call
push
rorb
mov
mov
xlat
clc
fsubs
in
loop
mov
inc
mov
stc
sbb
pop
insb
insb
xor
call
pop
lahf
psubsw
mov
jae
mov
push
roll
mov
pop
mov
or
rcll
sub
mov
imul
and
in
fnstcw
sbb
push
lret
dec
jge
stos
ss
scas
mov
jl
in
xor
mov
jmp
insl
lods
movsl
clc
cmp
adc
imul
sahf
cli
flds
mov
addr16
insl
mov
cwtl
insl
mov
xor
jb
loop
in
aaa
outsl
pusha
mov
add
icebp
push
insl
adc
adc
shrl
jge
sub
and
out
hlt
push
cwtl
pop
aam
xchg
push
xchg
pop
xor
imul
lret
shl
movsb
mov
push
xor
adc
aam
sub
imul
dec
adc
xchg
mov
inc
sbb
test
mov
push
and
push
nop
jl
ss
mov
cwtl
dec
data16
xchg
insl
pop
leave
inc
pop
fs
mov
pop
rorl
and
sti
mov
push
out
out
loope
adc
cmp
fucom
sub
lods
cmp
repz
rolb
jecxz
lods
mov
dec
cmc
mul
pop
roll
aad
addb
cmp
adc
xchg
lods
outsl
push
add
out
jmp
out
sbb
push
push
fnop
inc
inc
pop
rclb
idivl
jecxz
pop
mov
stos
xor
dec
ljmp
and
loopne
sub
push
xchg
pusha
dec
adc
add
or
mov
and
out
jecxz
mov
ja
jmp
cwtl
ja
mov
push
jg
idivb
and
push
lret
cmc
pop
xchg
sub
inc
cmp
cmp
push
xor
rorl
jbe
or
add
scas
sub
sbb
push
pop
sub
xchg
lock
and
mov
mov
push
add
or
lahf
or
mov
shrl
cmc
inc
xor
lahf
cmp
in
mov
dec
call
add
pop
shr
xor
pop
xchg
adc
mov
addr16
dec
xchg
or
jbe
lahf
add
push
loope
push
xorl
aas
aad
movq
mov
mov
add
cmp
in
rcll
lea
adcl
jmp
insb
pop
xor
cmp
std
mov
cmpsb
stc
addb
cld
inc
lret
int
data16
leave
enter
lcall
dec
hlt
out
sub
inc
std
xchg
cmp
sub
jnp
xchg
cmp
lcall
cs
lods
mov
divb
mov
ds
fisttpll
xchg
push
mov
arpl
or
or
mov
add
lea
jg
ret
in
xor
pop
lahf
negb
push
call
and
subb
nop
mov
push
add
cmp
sti
xchg
es
hlt
cli
imul
xchg
repz
std
cmp
push
and
mov
sbb
fadd
test
testb
and
mov
sbb
insb
incb
insb
pcmpgtb
add
setl
push
mov
outsl
cmp
in
shlb
leave
pop
sub
sbb
and
ret
data16
push
lcall
or
mov
arpl
fisttpll
testl
mov
lret
and
outsl
cmp
jl
enter
out
xchg
movsl
je
pop
push
mov
mov
push
movsb
ja
int3
inc
sub
cmp
out
mov
add
sbb
int3
mov
dec
ret
jno
lret
cld
cmc
std
or
jne
lahf
sub
dec
jno
push
ret
mov
push
and
mov
pop
mov
repnz
sbb
imul
or
or
pop
call
xor
or
mov
xchg
mov
sbb
js
dec
je
sbb
sbbl
pop
lret
mov
add
test
addl
xchg
gs
jae
and
das
stos
pop
xchg
lret
push
mov
dec
dec
sub
sub
jmp
push
push
lahf
fsubr
jbe
xor
shll
sbb
adc
mov
dec
and
std
cld
push
sti
mov
inc
jmp
popf
insl
pop
jnp
xor
jg
inc
jp
push
dec
addl
lods
inc
mov
cli
add
mov
xchg
sbb
mov
jns
mov
xchg
and
cmp
mov
sbb
aad
jb
in
shrb
fxch
push
adc
push
fidivrs
mov
stos
pusha
and
xchg
add
sub
dec
and
js
jmp
add
stos
inc
xor
insl
mov
pop
jge
loopne
fsts
xchg
xor
inc
ja
popa
subb
vmwrite
icebp
aam
sarl
and
mov
mov
dec
sbb
daa
cmc
cwtl
sti
and
cld
cmp
cwtl
and
xchg
cmc
push
lea
mov
rcl
popl
aas
rcl
lcall
sub
dec
pushf
loope
sub
add
push
sahf
add
arpl
xor
fidivrl
xor
stos
or
cmp
jecxz
mov
outsl
jae
jno
int
push
mov
mov
fwait
mov
mov
mov
mov
and
push
das
sarl
shll
jnp
pop
fstl
push
mov
push
std
cvtps2pd
outsl
sub
mov
sub
iret
repz
inc
aas
inc
cmp
pop
addr16
neg
mov
sahf
push
clc
push
dec
lcall
push
jns
add
pushf
in
adc
fbstp
pusha
in
cmpsl
sahf
nop
stos
lahf
pop
or
mov
mov
outsb
insb
or
pop
ss
mov
dec
clc
mov
outsb
jle
das
sahf
or
xchg
out
sbb
mov
xchg
push
inc
jae
mov
into
enter
lods
int3
xchg
into
enter
or
inc
mov
adc
bound
enter
in
in
jnp
adc
mov
sahf
dec
xchg
sbb
adc
fcomi
das
and
fdivrl
and
scas
push
sbb
or
mov
mov
push
jmp
inc
push
dec
and
stos
aad
or
ret
cmp
jbe
fldenv
aam
mov
popf
fisubl
pop
cmp
adc
dec
pop
push
push
mov
mov
js
je
xor
pop
sub
std
repnz
cmp
sub
testb
jge
out
push
sub
xor
dec
in
lds
es
and
xchg
mov
clc
xchg
fidivrl
into
xchg
xor
and
push
and
mov
ljmp
push
mov
ss
pop
or
loopne
xor
pop
fcoms
lock
aad
xor
and
dec
nop
sub
xor
xor
out
jb
mov
xchg
dec
and
mov
sub
mov
add
in
push
and
lret
xor
imul
xchg
push
lahf
adc
xlat
or
cwtl
out
dec
dec
enter
sar
or
aaa
xor
daa
pop
pop
fwait
sarb
ret
mov
and
cmp
or
shl
sub
sub
cwtl
and
mov
adc
lahf
out
add
in
and
dec
cmpsl
xchg
and
pop
cmp
push
add
loop
in
pop
imul
js
push
repnz
das
ljmp
push
inc
repz
xor
jb
lea
mov
pop
fs
dec
xchg
loopne
adc
ss
mov
push
test
pop
addb
cld
and
jle
mov
sbb
test
pop
in
fldt
sahf
and
iret
divb
push
out
ret
fsub
ret
cmpsb
adc
ljmp
jnp
out
or
scas
les
incl
subb
sbb
lods
out
sbb
movl
and
test
inc
mov
popa
inc
popl
mov
loop
inc
call
mov
adc
dec
mov
cmp
mov
cmp
fildll
mov
jo
rcrb
test
mov
mov
xchg
jno
jne
daa
inc
das
fnstenv
scas
outsl
and
mov
xor
pushf
push
test
cmp
dec
and
call
mov
sar
sahf
cmpsl
jge
in
jo
mov
and
pop
lcall
jle
fisttps
pop
sub
push
add
push
xchg
cli
mov
out
xchg
cs
jno
push
push
in
mov
adc
call
adc
push
mov
dec
jl
push
divl
pop
or
add
cmp
adc
mov
sbb
xlat
cmp
inc
pushf
leave
cmp
aas
jns
test
xor
dec
dec
mov
imul
aas
and
daa
adc
inc
aad
lods
jl
sbb
fs
or
icebp
in
pop
sub
push
adc
mov
xchg
pop
test
adc
dec
pop
adcl
div
inc
mov
ljmp
pop
int
jmp
in
decl
popf
cmp
cmp
and
cmp
add
mov
cmp
loop
loopne
cs
bound
sub
in
int
out
jae
xchg
or
xchg
sti
mov
jo
cwtl
sbb
fadd
adc
loopne
sub
or
fcomps
adc
add
daa
xor
popf
jl
nop
leave
iret
cmpsl
mov
fwait
jmp
int
push
xor
out
lahf
push
or
mov
fwait
push
dec
shl
jne
movl
push
push
dec
ja
rorb
pop
push
mov
mov
jne
pop
inc
adc
pinsrw
scas
or
es
xchg
adc
push
mov
lods
mov
jb
insl
and
mov
add
xchg
sbb
jle
outsb
jae
pushf
adc
jns
add
xchg
sbb
dec
adc
dec
cli
mov
ljmp
and
es
loope
adc
or
sub
mov
and
add
orb
sub
mov
shlb
hlt
bound
xor
push
in
cmp
inc
lods
dec
sbb
jae
push
stos
mul
mov
es
out
repnz
nop
arpl
and
pushf
stos
movsl
arpl
les
cmp
jmp
jmp
jle
subl
cwtl
js
xchg
or
push
je
mov
xlat
cmp
lret
ficomps
dec
add
sub
sub
mov
cwtl
adc
or
jno
clc
cltd
sbb
jmp
cmc
test
addr16
mov
fdivr
mov
xchg
jmp
xchg
xor
mov
xor
sbbb
sbb
call
cmp
mov
push
mulb
sbb
neg
cmc
sti
iret
cld
ret
xchg
jge
ja
lds
inc
hlt
sub
int3
jge
mov
js
daa
jmp
cli
icebp
jg
js
or
push
mov
enter
ret
lock
cld
jne
jmp
fwait
loopne
xor
bound
mul
lret
std
and
xor
xchg
clc
insl
in
sbb
fistpl
cmp
stos
lahf
fcompl
xchg
push
push
jae
adc
in
das
jmp
and
inc
mov
fwait
add
arpl
inc
pusha
inc
mov
xchg
xchg
mov
cmp
xorl
roll
aam
pop
push
jae
popf
or
jecxz
jns
fimuls
adc
and
mov
int
sbb
push
xor
out
and
nop
scas
pop
sbb
sti
mov
lods
pop
pop
xchg
lods
fists
mov
mov
rclb
adc
cmp
sub
daa
shrl
adc
pop
add
imul
arpl
push
aad
jp
xchg
push
mov
cmp
cmp
test
inc
mov
jp
jo
dec
pop
scas
pop
inc
leave
fsubrl
fwait
in
push
ds
cltd
xor
cmpsb
out
add
popf
push
pop
cwtl
push
imul
mov
adc
nop
pop
push
xlat
negl
fwait
enter
mov
xorl
cld
add
xlat
movb
mov
push
jno
sbb
jnp
xchg
and
jne
ret
mov
mov
mov
cmp
adc
fnsave
rorl
mov
and
xchg
sub
sub
mov
pop
leave
push
in
dec
xor
sbb
push
push
fisttpl
sub
ljmp
xor
call
mov
int
sbb
pop
pusha
mov
jmp
cmpsb
lock
adc
xchg
pusha
fildll
aas
sbb
xchg
jno
xlat
lret
sti
into
loopne
xchg
lcall
data16
test
cmp
scas
mov
or
int3
cmp
cmpsb
push
sub
add
sbb
dec
xchg
mov
and
leave
cmpsb
mov
push
mov
fcmovnb
add
in
sbb
push
imul
mov
sub
xor
cmp
fisubrl
mov
or
inc
mov
sbb
aad
out
es
push
imul
sub
sub
aas
and
xchg
in
iret
rorl
les
leave
push
int
mov
jae
push
fidivrl
popa
mov
jp
or
enter
clc
mov
mov
fsubrl
push
mov
xor
mov
cmp
push
ret
mov
xchg
push
dec
pusha
test
xchg
lds
rorb
loop
adc
mov
pop
fisttpl
fidivs
and
jns
int3
adc
mov
popa
shrb
mov
mov
mov
loop
mov
add
and
test
shrb
inc
rcl
adc
aam
fists
add
mov
cmpsb
pushf
cwtl
mov
dec
adc
jle
into
mov
mov
aam
xchg
stos
sub
js
adc
jbe
inc
pop
xor
loop
pop
cltd
pop
test
hlt
push
hlt
stc
mov
and
add
mov
cmp
sbb
pop
imul
cld
mov
cmp
loopne
add
or
ja
mov
jnp
aad
or
and
cmp
stos
mov
icebp
bound
jno
pop
push
mov
and
push
lea
or
lcall
inc
enter
data16
lahf
popf
xchg
mov
cmp
outsl
xchg
xor
jmp
pushf
xor
xor
add
out
sub
clc
dec
fs
xor
mov
push
das
out
dec
data16
inc
jp
mov
sub
movsl
and
pop
lock
out
sub
testl
sub
clc
add
jecxz
arpl
jp
sahf
cmp
mov
cmc
sbb
subb
push
or
or
shl
je
mov
loop
mov
mov
jne
notb
movsb
insl
push
cwtl
mov
cltd
pop
push
pop
imul
mov
mov
pop
adc
push
jns
xor
lods
push
mov
subb
or
ss
mov
jbe
cmp
aas
pop
adc
aam
lods
jg
push
jne
mov
mull
pop
scas
jp
adc
icebp
sub
mov
adc
jl
sahf
dec
adc
adcl
pop
cltd
stc
mov
clc
rorl
aas
or
mov
jg
sub
movsb
lods
pop
adc
mov
adc
ret
in
xor
sti
push
push
jno
push
mov
inc
jle
outsb
ret
or
push
shl
nop
jne
pop
sti
nop
aas
jne
xchg
push
push
cmpsb
cmp
aaa
int
jbe
je
sbb
subl
mov
fwait
push
shll
mov
adc
cmp
adc
xchg
pop
xorl
lock
mov
pop
dec
icebp
jae
mov
cltd
pop
xchg
jno
sub
cmp
pop
or
in
sti
shl
push
push
and
push
xor
push
jge
adc
jo
xor
jecxz
in
repz
hlt
add
xchg
aas
pop
jnp
int
jbe
xchg
cld
je
rcrl
outsb
sub
loop
push
push
add
das
adc
insl
mov
cld
addr16
push
scas
inc
clc
dec
cwtl
pop
arpl
lea
xor
repz
sbb
addr16
and
idivl
sbb
sub
into
std
cmpb
mov
or
push
adc
fimuls
sahf
pusha
into
pop
jnp
or
shll
and
subb
adc
andl
enter
jle
idivl
xchg
sub
arpl
and
ret
gs
xchg
sub
xchg
addb
jne
cmp
sub
cmp
test
pop
xor
daa
push
and
xchg
or
push
cmpb
scas
fistps
out
push
lea
lock
jge
pop
hlt
sub
test
mov
pop
movups
jne
scas
adc
cmp
and
int3
xor
and
fstpl
push
xchg
addr16
adc
insb
jmp
scas
js
ret
mov
fistpll
adc
clc
dec
xor
negl
loopne
loope
test
mov
inc
mov
cmc
cmp
insl
imul
pop
dec
xchg
adc
or
add
orl
jb
xchg
inc
sub
inc
cmp
fstl
jge
dec
lret
bnd
lods
adc
cmp
cmp
jp
mov
dec
mov
inc
das
sub
scas
rorl
sbbl
jns
jns
pusha
push
adc
pop
mov
sub
xor
jne
push
lahf
mov
mov
push
adc
cmp
cmp
sub
adc
and
xchg
mov
sub
push
sbb
cmc
and
sub
ja
femms
jge
adc
jl
fucomp
sub
aas
imul
ret
mov
sub
subl
push
ss
mov
jno
xor
push
lock
push
clc
xlat
rclb
inc
clc
je
outsl
test
cmpsl
insb
icebp
shrb
imulb
cmp
lcall
inc
mov
adc
mov
notl
mull
cmp
movsb
movsl
sub
or
and
sub
push
enter
sbb
repnz
mov
cmpsb
xor
mov
lcall
adc
push
hlt
or
jne
lea
hlt
cli
or
sub
inc
mov
aaa
std
mov
push
pop
enter
leave
push
mov
cld
dec
adc
pop
jmp
in
in
jne
imul
xchg
clc
cmp
mov
aaa
push
in
ret
sbbb
add
xchg
push
push
es
test
in
out
or
rcr
sub
and
lock
js
dec
jne
push
or
sbb
scas
inc
xchg
push
test
test
jns
aad
jp
jmp
out
outsb
fidivl
mov
mov
dec
subb
push
lret
je
js
and
aam
shrb
lock
test
or
int3
cmpb
out
aam
negb
fimuls
push
add
loope
sahf
jns
lods
inc
outsl
insl
jge
testl
faddl
add
xor
and
lret
inc
scas
ss
sub
pushf
add
repz
andl
fcoml
cmp
mov
inc
pop
mov
sahf
pop
movsl
test
jne
ret
cltd
mov
mov
cld
dec
mov
xor
cmpsb
scas
aas
push
fstpt
scas
lods
scas
xor
cli
repz
jns
fsubs
les
jo
iret
sbb
into
rorb
jne
scas
push
mov
in
xor
fsub
les
fsubp
out
in
mov
call
xchg
movsl
cwtl
roll
and
fstpt
jbe
mov
jg
push
pop
popf
mov
sahf
mov
fwait
std
pop
inc
inc
scas
pop
xorl
sbb
add
mov
mov
mov
gs
aaa
out
and
insb
mov
cmp
mov
push
cwtl
int3
or
sbb
div
adc
repz
repnz
mov
cltd
xchg
pop
mov
fs
inc
xchg
jns
dec
je
sbb
shl
fimull
movb
xor
mov
rcrb
push
call
cmp
jne
mov
cmp
stc
mov
inc
xchg
lret
pop
sbb
je
and
pop
dec
fstpt
loop
popa
inc
imul
pop
stos
inc
xchg
cmp
push
pop
mov
in
mov
xchg
xchg
jge
out
and
ret
xchg
push
stos
mov
rcrl
stos
jle
movsb
add
mov
jns
cwtl
dec
jg
jge
sub
sub
push
stos
xor
push
sbbb
ss
rorb
call
int3
in
or
and
inc
mov
sbb
jb
dec
mov
sbb
popf
repz
mov
mov
jbe
mov
or
xor
inc
test
sbb
jo
xlat
cs
fiadds
cmc
pop
push
fcomps
mov
outsl
test
cmpsl
cld
sub
cmpl
inc
mov
inc
xchg
hlt
out
xchg
dec
js
fcomps
imul
in
add
aad
int
dec
int
sbb
dec
cld
and
push
out
movsb
xchg
icebp
int3
sub
dec
and
sti
subl
sub
xorl
mov
xchg
shlb
xchg
lods
fwait
dec
cmp
jo
xchg
xor
pop
cwtl
lds
mov
mov
fnop
rolb
xor
adc
push
loope
out
cmpsb
xor
pop
pop
dec
or
and
cltd
inc
cmpsl
push
sub
lock
add
lahf
mov
sarl
cmp
mov
mov
std
jbe
lock
cmpsb
testb
pop
jge
inc
shlb
data16
jl
jecxz
enter
in
fdivrl
mov
mov
and
add
pop
or
xor
fdivs
or
inc
jnp
repnz
mov
sti
push
rorb
cmpsl
mov
add
inc
hlt
cmpsl
or
sub
sub
push
cmp
jns
dec
mov
push
jge
in
adc
push
shlb
and
adc
or
dec
fcoml
sub
aad
decl
js
mov
add
push
mov
and
fcmovu
and
sahf
xchg
ret
push
ja
inc
sub
sub
js
rorl
test
jb
sbb
and
mov
sub
lds
inc
call
lods
pop
jmp
push
es
repz
int3
movsl
mov
mov
mov
aad
ret
xchg
sub
mov
ds
enter
in
decl
and
or
or
loope
clc
shrl
xchg
cmc
cmova
add
xor
rol
jne
cmp
test
and
repnz
fmull
enter
jb
cltd
shll
pop
sbb
insb
cmp
rcll
jne
mov
mov
popf
frstor
movsl
mov
scas
out
out
or
xchg
or
test
sub
ret
jge
or
pushf
pop
lret
xchg
push
in
jle
fcmovnu
into
jge
fisubrl
jl
mov
cmp
jle
nop
das
cwtl
cmpsb
jle
jbe
sub
pushf
xlat
sbb
add
inc
mov
inc
jnp
mov
xlat
call
push
cmp
ja
or
mov
mov
fdivl
cli
xlat
pushf
inc
push
repz
orb
das
inc
or
fdiv
cmpsl
pop
mov
sbb
ret
loopne
sbb
and
push
and
xor
hlt
pop
repz
pop
mov
xor
jns
push
in
les
clc
push
int
mov
sahf
std
mov
andb
lret
push
mov
sub
ret
pop
mov
arpl
sbb
ds
mov
fdivs
add
pop
nop
stos
mov
inc
in
stos
jecxz
sbb
xorb
fmull
mov
adc
add
mov
frstor
and
cmp
in
sbb
push
ret
in
out
mov
add
loopne
iret
std
mov
mov
mov
or
test
ss
cmp
push
xor
push
mov
in
in
add
lea
cmp
inc
sbb
ret
or
dec
or
cmp
js
enter
mov
mov
test
out
mov
mov
fldln2
and
mov
adc
jge
out
dec
ja
loop
mov
sbb
inc
jmp
jecxz
inc
fimull
pop
daa
mov
pop
lea
xor
mov
enter
bound
and
fsub
scas
mov
dec
jns
fimuls
les
negb
mov
or
es
fwait
mov
xchg
test
ret
idivl
xor
test
xor
jmp
aad
add
hlt
xor
fdivrs
dec
mov
xchg
jb
rcrb
shll
addr16
into
fildl
mov
and
jg
mov
cmp
and
loope
xor
lods
pop
mov
in
fs
push
add
xchg
and
or
cmp
mov
enter
xor
cmpl
sbb
call
out
in
cmp
das
fdivs
lret
mov
aam
mul
sbb
stc
inc
pop
in
out
or
sbb
cmp
mov
sub
cltd
mov
mov
lret
mov
pop
mov
push
aaa
mov
shr
jae
sbb
fcom
pop
pop
mov
movsl
mov
xor
or
addl
sub
pop
pushf
mov
sbb
sbb
subl
scas
in
inc
popa
out
sbb
jb
out
and
fsubrs
adc
arpl
loop
aas
sub
int
mov
push
sub
push
iret
setne
in
push
fs
push
mov
call
jmp
add
and
js
mov
loop
imul
mov
inc
movsl
adc
mov
mov
out
sbb
in
daa
popf
insb
cmp
andb
ret
xor
lcall
out
inc
ds
dec
sbb
jg
loope
add
pushf
ljmp
mov
fnstenv
int
adc
push
and
and
fdivrs
cmp
frstor
stc
and
cld
lods
push
xchg
dec
sbb
pop
enter
jge
fdivl
xchg
ret
mov
mov
ljmp
sar
cmp
xchg
jno,pn
push
mov
pop
hlt
or
in
into
fwait
stos
repz
ficompl
outsl
jbe
cmp
enter
jecxz
and
scas
std
imul
lock
int3
dec
jle
leave
out
cmp
sbb
subl
sub
pusha
mov
dec
cmp
sub
test
sbb
sbb
mov
mov
mov
sub
shrl
mov
push
or
push
and
adc
xlat
inc
or
test
inc
mov
fcompl
dec
sbb
cmp
jmp
ror
and
ljmp
and
add
mov
fstp
int3
jle
daa
and
ljmp
je
stc
mov
stc
sub
orb
mov
or
loopne
jae
jg
in
add
int3
xchg
cmpsl
add
mov
xor
mov
push
cs
mov
movsl
jno
cli
daa
js,pn
or
mov
mov
adc
lret
inc
and
dec
xlat
daa
sub
jmp
ljmp
adc
in
loopne
loope
mov
sub
enter
jg
stos
jecxz
jl
loopne
cmp
mov
jnp
scas
pop
pop
aad
sub
fcomip
repz
adcl
pop
ljmp
or
fnsave
pop
jae
jg
out
jle
faddp
test
xchg
jno
fistl
shrb
or
sti
sbb
scas
das
pop
test
loopne
pop
or
neg
cs
and
jno
or
pop
out
jno
mov
push
sub
or
shll
or
jle
xchg
sub
sbb
fnstenv
push
cmp
sub
cmp
mov
lods
js
xor
add
xchg
std
inc
or
loope
jnp
bnd
ljmp
test
add
ret
xchg
divl
pop
in
repz
hlt
fbstp
xor
inc
push
lret
push
cmpsl
and
jmp
and
sub
and
test
int
cs
dec
aas
mov
icebp
lock
out
inc
in
int3
mov
in
aam
sbb
jnp
mov
nop
mov
mov
lods
in
movsl
mov
cli
sbb
pushf
or
sub
lods
and
out
sbb
std
and
call
add
add
rorl
test
outsb
sub
add
into
and
jmp
insl
push
sahf
orl
mov
xchg
call
decl
cli
sub
in
test
je
in
outsl
frstor
mov
xor
test
test
jns
add
dec
pop
and
mov
ret
insl
loope
mov
mov
or
aas
popf
add
dec
inc
mov
xlat
jle
lds
fcomi
mov
aad
xchg
movsb
or
ss
rol
roll
iret
jge
push
sub
add
sahf
sbb
cltd
cmp
xor
mov
xchg
movsl
mov
jo
test
shl
pop
push
inc
push
cwtl
ret
jmp
adc
iret
flds
add
xlat
pop
fbstp
movsl
mov
add
add
je
fdivs
fdivl
ret
popf
push
mov
xchg
push
sub
xlat
ljmp
push
or
pop
mov
loopne
xchg
mov
and
mov
push
mov
adc
pop
inc
dec
inc
arpl
and
mov
mov
jle
movsl
movswl
mov
mov
ljmp
push
and
cltd
or
cwtl
mov
mov
lods
and
stos
flds
adcb
mov
out
sub
in
xor
jp
clc
jl
lods
add
in
cmp
fstl
fildll
sub
or
or
out
mov
movsb
addr16
and
addb
sbb
ljmp
mov
mov
mov
mov
loope
xchg
int3
and
cli
movsb
push
or
repz
rcll
add
shl
test
jp
bnd
and
adc
sub
pusha
push
fnsave
enter
xor
sbb
xchg
push
inc
add
rcr
cmpsb
aaa
adc
in
push
jno
mov
adc
mov
add
and
int3
pop
mov
js
sub
pop
mov
cs
sub
mov
mov
push
sub
addr16
jo
inc
xor
push
int
push
add
arpl
call
mov
add
push
hlt
sahf
push
sti
cmovbe
push
test
daa
cmpsb
jnp
sub
adc
pushf
and
lcall
cmp
jnp
adc
xor
js
adc
jns
xchg
int
xor
inc
pop
mov
ja
shrb
pop
sar
inc
fisubl
and
bound
adc
push
and
and
jl
and
mov
mov
into
addb
cmpsl
lahf
jmp
xlat
mov
xchg
arpl
and
out
out
enter
sub
lcall
lock
add
int3
mov
fcomps
ds
inc
rcll
sbb
xchg
push
inc
cwtl
hlt
ja
pshufw
pop
and
push
lock
xor
adc
mov
xchg
jb
xor
sub
adc
add
jb
cmpl
sub
lcall
push
addr16
into
mov
add
nop
lock
roll
pushf
dec
jmp
xchg
push
lahf
mov
dec
mov
sub
inc
push
loope
mov
jge
mov
jne
sbb
sub
ret
push
sbb
in
aad
add
mov
ficomps
in
push
xchg
pop
shll
pushf
pop
pop
rcr
fsubrl
dec
jmp
pop
jg
or
loope
and
cs
mov
mov
dec
ficompl
xchg
add
loope
imul
mov
dec
fdivl
es
jmp
pop
stc
ds
ljmp
addr16
hlt
jl
clc
adc
insl
mov
das
shrb
mov
mov
cs
clc
cmp
insl
cld
les
jmp
push
es
sbb
int3
mov
pop
pop
iret
pop
add
inc
rcrl
or
dec
inc
push
pusha
mov
xchg
rcr
inc
mov
roll
out
sbb
call
ss
aad
inc
popa
out
loop
cs
and
ret
sub
mov
mov
mov
call
test
popa
cmpsb
lret
loope
aas
and
call
ss
or
fsin
call
cmpl
bound
out
inc
cmp
in
push
cwtl
insl
fsubrp
imul
mov
mov
insl
jns
xor
xchg
add
mov
punpcklbw
cmp
leave
xchg
jb
mov
das
insb
mov
lahf
lds
add
push
pop
or
insb
stos
bound
dec
in
out
outsl
adc
and
les
mov
mov
mov
pop
mov
icebp
and
and
in
and
add
push
mov
cmp
in
xchg
push
ljmp
ret
test
aaa
jnp
jg
mov
add
nop
xor
pushf
cmpsb
adc
ror
clc
sub
mov
jbe
sbb
push
les
jae
mov
sbb
push
repnz
int3
pop
and
xchg
lcall
xchg
inc
mov
loop
loopne
gs
pop
cmp
add
inc
jmp
xor
fsubrs
arpl
sarb
daa
inc
lds
add
adc
dec
daa
fs
jno
adc
js
lret
enter
cmp
test
mov
sub
in
mov
out
call
fmuls
scas
mov
push
cmp
sub
mov
push
scas
lods
lret
mov
jl
mov
push
sbb
leave
outsb
in
inc
nop
jbe
cmp
adc
sub
fcompl
js
pusha
xor
inc
cmp
arpl
leave
ds
xchg
gs
jge
mov
sbb
enter
add
dec
lcall
dec
ret
cmp
pop
insb
int
pop
leave
mov
sub
fsub
sub
shrl
pop
in
mov
push
and
loop
enter
mov
xor
inc
cmp
pop
mov
or
cmp
fimuls
cmp
and
repnz
xor
xor
cmp
pop
adc
mov
inc
pop
cli
ret
sbb
lret
mov
frstor
xchg
lret
int
and
and
arpl
jmp
lods
sarl
loop
xor
push
daa
or
add
mov
push
and
sahf
mov
fdivrs
cmpsb
repnz
mov
aad
test
inc
push
jle
add
jno
pop
xchg
loopne
sub
in
loopne
movsl
inc
icebp
inc
push
adc
in
out
sbb
fcmovbe
cmp
push
imul
mov
sarl
xchg
dec
test
jecxz
sbb
mov
adc
ds
fiadds
loope
lds
fiaddl
xchg
fidivs
cmp
shrb
and
faddl
or
jo
int
lods
aas
jecxz
cmp
dec
inc
inc
test
jle
inc
inc
inc
dec
mov
push
mov
jg
and
ds
repz
xchg
cmc
adc
je
cltd
jae
inc
lcall
inc
mov
cmc
or
adc
xchg
mov
movsl
lret
adc
inc
out
sarl
out
je
ror
scas
mov
roll
push
aaa
pop
push
andl
push
mov
stos
pushf
inc
clc
in
out
insb
jns
jbe
stos
add
dec
pop
in
push
xor
xchg
fistpl
ljmp
fsubrs
or
adc
or
cmp
xlat
sbbb
lahf
jmp
pop
jp
dec
push
and
rol
je
addr16
adc
fwait
dec
mov
cmp
enter
inc
push
fldl
ss
test
pop
xor
xchg
mov
notl
cmp
and
jp
jg
jb
xchg
xchg
mov
mov
add
sub
sbb
adc
dec
sub
mov
inc
roll
ret
push
ficoms
stc
out
mov
int3
push
mov
daa
xor
out
call
sbb
mov
mov
sbb
int
cmp
pushf
mov
sub
jne
add
adc
leave
xlat
sub
jecxz
push
xchg
fdivrs
push
in
loope
inc
mov
ljmp
scas
je
mov
hlt
cltd
mov
adc
outsb
and
insb
and
cli
jg
test
aaa
xchg
aaa
fwait
mov
jae
or
lahf
cltd
mov
scas
in
adc
out
inc
aaa
xor
aas
add
xlat
arpl
lret
cmp
pop
adc
adc
sar
xchg
jl
jg
mov
adc
subb
hlt
push
xchg
pushf
cmp
dec
ret
xchg
cld
les
inc
or
out
push
adc
add
out
clc
mov
jo
test
test
nop
ljmp
ficoml
daa
scas
popf
or
clc
rclb
test
mov
stos
dec
push
lock
sbb
fldcw
mov
fstpl
test
outsl
and
fmul
enter
aaa
ret
and
ljmp
aad
cmp
test
lods
in
xchg
and
xor
mov
add
jecxz
hlt
out
push
cmp
pop
add
out
aam
aas
and
sbb
jg
mov
mov
dec
dec
insl
add
jne
adc
cmp
sti
jmp
orl
enter
mov
sbb
inc
stc
mov
pushf
fiadds
lock
lea
les
popf
std
repz
jb
imul
cli
jb
sbb
jmp
or
mov
outsl
cmp
jmp
int
mov
movsb
jl
sub
test
xchg
fdivrl
mov
arpl
mov
pop
int3
scas
xor
cmpsb
add
adc
sahf
loop
mov
push
add
cmpb
into
xlat
jno
push
in
aaa
scas
test
lahf
xor
fnstsw
sti
fistpll
dec
xchg
loop
jns
xor
add
push
dec
call
sub
dec
sub
pushf
jbe
call
cltd
jge
loopne
or
mov
jl
mov
test
cmp
aam
pop
lods
fldenv
adc
push
icebp
ret
int
rsqrtps
add
xor
loope
dec
or
sarl
pop
xchg
add
pushf
jecxz
out
cmc
les
mov
dec
dec
fucomip
lret
mov
sub
aad
or
cmp
jge
pop
pop
mov
and
sbb
subb
roll
js
mov
and
stos
xlat
mov
sbb
mov
div
sahf
sbb
and
dec
out
pop
in
and
ja
flds
push
and
lds
lock
insl
xchg
cmpsb
std
xchg
lock
cli
stc
insb
repz
lods
je
cmp
js
inc
xor
in
cmp
jns
jge
and
insb
inc
stos
mov
aas
mov
xchg
ja
or
push
fsubs
xchg
cmp
xlat
es
dec
pop
adc
insb
inc
and
arpl
mov
or
fs
ss
ja
popa
movsb
popa
fimuls
jb
xor
xor
roll
jl
jo
mov
xlat
movsl
popa
loopne
jno
sbb
cltd
adc
adc
test
mov
jnp
sbbl
dec
nop
or
subl
sbb
das
add
jecxz
imul
cs
push
adcl
xchg
rolw
add
and
gs
ja
out
xchg
sub
jecxz
push
lods
jmp
aam
lock
jbe
fstp
aas
xchg
inc
ljmp
iret
fbld
test
xchg
test
imul
cmp
sbb
and
pop
push
cmp
popa
lret
mov
in
add
mov
fwait
mov
out
imul
or
adcb
xor
jmp
js
cmpl
jmp
adc
call
mov
xchg
inc
adc
ss
int
mov
call
rorl
call
out
cmp
cmc
push
call
add
in
stos
mov
cmp
and
int3
in
in
fs
test
push
out
mov
out
mov
movsl
push
jbe
push
pop
xor
enter
out
ret
out
sub
inc
add
lcall
pushl
mov
dec
adc
cmpsb
in
jo
and
loopne
jo
jnp
bound
cmp
jo
jg
lock
repz
clc
sub
ret
or
in
fistpl
push
cmpsl
aad
scas
adc
vmovss
adc
adcl
shlb
popf
adc
lds
jmp
push
push
inc
js
loop
pusha
stos
mov
loope
pop
shrl
jl
mov
ss
jne
xor
out
adc
testb
add
leave
out
xor
clc
in
scas
sbb
xchg
sarl
ja
pop
cmp
fsubrl
loop
les
inc
fildl
fwait
mov
xor
dec
and
loopne
cld
scas
and
loopne
mov
mov
pop
test
jns
cmp
xor
xlat
lea
add
mov
sbb
iret
push
dec
aad
mov
jp
insl
sbb
ss
inc
and
dec
xor
test
sub
hlt
retw
popa
xchg
xchg
pop
add
push
aaa
outsl
testl
mov
push
popl
lcall
sbb
sbb
call
cmpsb
das
mov
inc
lret
or
xlat
out
fwait
gs
jne
lods
pop
xchg
repnz
out
clc
fistps
pop
jecxz
call
aad
inc
call
xchg
js
or
int
xchg
cmpsl
jp
shr
xor
orb
push
inc
ret
or
and
or
cwtl
es
mov
push
sub
push
in
sarb
adc
es
mov
cwtl
loop
pop
ljmp
hlt
adc
fidivs
mov
or
sub
loopne
popf
daa
in
adc
stc
arpl
cmp
jl
fwait
xor
and
fcompl
lcall
in
add
mov
sub
push
addr16
sarb
lods
push
add
fs
or
pop
mov
pop
cmp
mov
add
pop
cmpsb
movsl
bound
xor
mov
adc
shlb
lods
into
hlt
add
mov
idiv
int
dec
sub
pop
data16
adc
xchg
inc
push
dec
mov
pop
pop
adc
out
add
arpl
lods
cmpsl
out
aas
int3
sbb
xor
pop
mov
jge
inc
jg
subl
mov
jne
and
imul
xor
test
add
sbb
ret
add
jl
shrl
jmp
lods
xchg
dec
push
jp
int
mov
fcoml
aas
lds
ret
cli
sti
mov
cwtl
or
sub
dec
inc
push
lcall
push
jnp
lea
fstpl
xchg
inc
movsl
cmp
mov
icebp
and
xchg
xchg
popf
cmc
daa
into
arpl
and
xchg
mov
stos
sahf
js
push
inc
std
imul
jo
and
and
sub
cmc
mov
mov
cmp
add
outsl
inc
push
cmp
add
loope
mov
lds
cmp
andb
sbb
mov
ja
test
fucomip
ret
out
push
push
xchg
ret
jae
inc
stos
ja
aam
mov
ds
dec
pop
xor
adc
or
pop
pop
and
mov
stos
aaa
mov
xor
cmp
sub
rclb
fs
mov
orl
div
dec
fwait
pop
or
fwait
and
fdivrl
mov
cmp
mov
pusha
into
and
call
fsubrl
mov
loope
push
in
out
sub
push
pop
sbb
or
ss
mov
arpl
xor
sahf
ja,pt
out
jne
cwtl
inc
cwtl
xchg
aaa
pop
mov
add
leave
jge
ds
fcoml
inc
add
push
push
xchg
testl
insl
xchg
fisubl
and
xchg
xchg
lret
xor
sbb
pushl
pop
pushf
sub
aas
sbb
or
outsl
insl
fcomp
xchg
xor
repz
je
jne
sub
sbb
sbb
data16
rcl
outsb
loope
in
in
sti
push
jmp
ss
shlb
into
mov
out
mov
in
mov
mov
rol
pop
add
or
sbb
dec
cltd
add
ja
or
scas
loopne
jp
or
mov
out
jb
cmpsb
lret
mov
xor
fiaddl
or
out
aad
lcall
outsb
and
pop
aaa
enter
ficomps
mov
jp
lea
pop
pcmpgtb
pop
sarb
dec
dec
fsubrl
loopne
in
xchg
out
js
mov
loopne
sub
and
mov
insb
je
out
or
push
mov
xchg
mov
jg
push
cs
mov
add
adc
xor
lea
sbbb
in
loop
in
iret
aam
fucomip
jb
pushf
movsl
fdivrl
test
jp
cmc
mulb
pop
frstor
cmp
sbb
sbb
out
xor
cmp
popa
loopne
xor
out
jnp
cwtl
cld
es
fs
bt
mov
sbb
sub
ret
imul
jp
dec
fsubl
out
insl
outsb
pop
inc
push
icebp
mov
cmpsb
stos
pop
mov
imul
mov
cmc
pusha
sbb
mov
movl
jmp
in
jl
imul
pop
ljmp
scas
mov
inc
cwtl
das
ficoml
enter
in
mov
fidivrs
mov
cmpsl
sub
insb
fists
lahf
scas
mov
or
js
daa
or
or
fcmovb
pop
mov
mov
lret
xchg
dec
ljmp
loope
scas
loop
out
fldcw
dec
and
iret
inc
xchg
int3
fs
add
icebp
jne
addl
enter
pop
shl
lds
ljmp
push
mov
jecxz
or
sbb
rorl
mov
dec
imul
lds
shll
jp
sbb
loopne
sbb
sbb
fcmovb
xor
imul
test
in
mov
add
sahf
cli
xchg
xor
cmp
cmp
mov
nop
xchg
cmpsb
inc
sahf
andb
addl
cld
int
push
lods
jle
inc
dec
inc
inc
push
stc
adc
lret
or
sbb
ljmp
dec
jns
cmp
adc
fsts
sub
xor
cli
aam
cwtl
mov
pop
xchg
ds
push
dec
out
jmp
xchg
xor
pop
inc
and
cmp
cmp
dec
iret
insb
push
and
sub
or
adc
test
sbb
xchg
mov
pop
push
and
xchg
adc
stos
or
and
and
dec
hlt
and
mov
shr
out
bound
shlb
mov
cmp
cltd
dec
gs
or
jle
movaps
hlt
cmp
sub
outsb
xor
sub
je
test
cmp
pushf
gs
vpperm
sbb
jle
mov
das
jb
rolb
mov
sahf
push
adcl
pop
cli
call
pminub
in
insl
data16
fnsave
mov
in
in
sub
and
lods
imul
rcrl
mov
jg
fbld
pushf
je
lea
cmp
pop
enter
test
adc
mov
mov
push
pushf
fcompl
and
mov
push
gs
call
lock
add
and
add
inc
loop
repz
jnp
pushf
mov
and
dec
sub
add
loope
add
inc
sub
sbb
lods
clc
jns
push
mov
ss
iret
out
sbb
cld
stc
cmp
mov
movsb
add
stc
repz
ds
cmp
cmp
outsb
mov
mov
sub
mov
clc
cmp
lret
mov
clc
iret
addl
out
dec
int
in
out
mov
test
insb
push
and
sub
xor
adc
aas
sub
mov
adc
and
fsubl
push
in
adc
cmpsl
shlb
shlb
scas
add
scas
in
enter
add
mov
fwait
je
cmp
mov
adc
int3
enter
pop
aad
or
ljmp
push
jno
ret
std
sub
lods
or
ret
in
arpl
push
mov
stos
outsl
or
lock
lahf
das
pop
sbb
sbb
inc
jmp
mov
pop
xorb
je
fists
add
cmp
mov
jns
jge
or
test
and
mov
aaa
arpl
xchg
jg
and
call
movb
data16
sbb
cmp
xchg
in
in
scas
or
inc
jmp
ds
repnz
and
loop
xor
fisttps
mov
or
cltd
jmp
ljmp
or
and
xchg
ds
test
jbe
or
mov
out
repnz
add
stos
lock
cmc
outsb
sub
mov
pop
aad
shll
loop
scas
enter
aas
or
sbb
and
in
xchg
or
in
mov
shll
ljmp
add
fildl
int3
push
shlb
mov
shr
je
popf
cmp
xchg
cld
push
insl
xchg
mov
int3
sbb
in
xchg
push
lret
or
xchg
and
push
fmul
loop
push
test
push
dec
test
fwait
jmp
mov
movsl
cmpsl
xor
shrb
cmp
popa
mov
dec
push
jl
cmp
mov
sub
das
cli
cmp
rclb
lahf
out
mov
enter
and
and
push
ret
cmp
fwait
adc
push
test
test
and
sahf
push
les
decb
jmp
rorb
mov
mov
sub
and
add
xchg
lcall
mov
lret
push
or
shl
mov
je
xchg
cltd
test
jno
sbb
xlat
es
jns
bnd
pop
mov
jle
jecxz
pop
mov
mov
dec
mov
sub
pop
xlat
cwtl
in
push
cmc
in
mov
pop
pop
dec
fmulp
and
mov
xchg
jmp
fistl
xchg
js
or
notl
in
mov
mov
int
sbb
out
xchg
fwait
xor
fmuls
mov
mov
in
ret
jmp
cmpb
outsl
outsl
fcom
les
jns
std
mov
ret
inc
fistpl
inc
fmuls
inc
shlb
stos
xchg
icebp
cmp
out
jmp
pop
ret
ja
adc
fcmovnbe
shlb
add
dec
sahf
cmpb
scas
cld
and
lcall
int3
lock
jmp
adc
dec
inc
int3
shlb
inc
jle
dec
pusha
clc
fdivrl
mov
aaa
call
cmp
jmp
jno
lock
mov
cld
inc
xor
adc
call
dec
jno
scas
push
mov
dec
xchg
and
adc
mov
mov
popf
es
jmp
les
ret
data16
stos
pop
pop
dec
sub
or
mov
adc
cmp
inc
mov
xchg
mov
or
mov
push
or
mov
fcmovnbe
dec
cmpsl
mov
cmp
adc
mov
push
hlt
cmpsl
jb
ljmp
js
mov
mov
mov
hlt
je
cmp
jge
push
xchg
std
mov
mov
pop
and
and
repnz
dec
outsb
pop
push
sub
shlb
sub
cmp
ss
xchg
pop
pop
lods
jne
addb
and
rcrl
les
inc
and
shll
mov
inc
pop
and
imul
cmpb
add
shl
jne
mov
iret
es
push
js
push
or
in
cltd
jns
sti
jb
adc
or
push
ja
fdivrs
or
cmp
or
hlt
jl
jge
fmull
and
and
pop
lods
push
in
lock
inc
mov
arpl
addr16
aas
iret
or
in
out
rcl
push
xchg
js
fsubl
dec
mov
mov
mov
sub
aad
sbb
xchg
jl
mov
and
and
xchg
lods
xor
push
dec
jmp
ret
ret
jae
nop
pop
adc
adc
or
adc
push
adc
fxch
dec
or
dec
jbe
push
nop
and
fcompl
sbb
ja
jbe
pop
bound
fcmovnbe
jge
fsubrs
push
sbb
pop
or
in
ret
insl
aaa
inc
lods
add
cmp
mov
sbb
lds
out
movd
ret
sbb
add
xor
sub
roll
and
or
addr16
mov
pop
adc
mov
adc
jmp
add
cmp
or
fsub
pusha
jbe
scas
or
mov
int
loopne
mov
push
mov
flds
icebp
cmp
orb
cmp
sub
lcall
loope
dec
les
pcmpeqw
mov
sarl
or
test
pop
movl
push
cmp
outsl
jp
cltd
mov
scas
dec
cmp
ret
jecxz
shll
sub
fstpt
inc
mov
xchg
sbb
daa
gs
addl
dec
mov
xchg
inc
mov
lahf
inc
gs
imul
cmc
push
data16
cmp
lods
adc
jbe
cmc
call
sub
mov
pop
mov
sub
add
cmp
xlat
add
inc
ret
loope
sub
lret
bound
cmp
jmp
test
out
xchg
rolb
subl
push
popf
inc
push
push
rorb
repz
ljmp
sahf
flds
mov
dec
fisttpll
enter
xor
cmp
dec
inc
adc
xchg
mov
dec
mov
lods
insb
outsl
jbe
out
push
fucomp
and
iret
adc
gs
and
test
js
outsl
push
into
jmp
xor
and
mov
dec
adc
fnstsw
scas
shll
add
shr
pop
pop
or
out
ficompl
xchg
mov
mov
out
movsl
cmp
sbb
cltd
sub
loopne
out
and
jl
mov
or
add
ds
lret
mov
cmp
and
mov
in
push
mov
cmpsl
les
dec
rorl
inc
cmc
push
mov
and
popf
or
das
ljmp
cld
dec
jmp
and
fiadds
fcmovne
jecxz
test
adc
sti
jae
nop
mov
sbb
roll
jmp
cmp
rolb
ljmp
in
arpl
call
pop
lea
mov
pop
ret
sbb
xchg
push
add
sbb
mov
mov
in
ret
mov
mov
jle
cltd
fstpl
out
and
jg
rol
xor
sub
cli
adc
aaa
lret
mov
test
xor
shll
jae
sbb
fstl
push
sub
nop
rolb
adc
mov
rcll
dec
and
rcrl
push
addr16
and
xor
out
sti
and
test
shlb
ljmp
gs
xchg
pop
in
mov
or
mov
aaa
xchg
enter
nop
xchg
aas
enter
popa
pop
xchg
xchg
inc
ljmp
pop
or
int3
loopne
jle
mov
insl
mov
sbb
jmp
inc
and
pop
loope
movsl
jno
pop
pop
int3
mov
es
sub
dec
or
jl
inc
les
ret
mov
out
cmp
jae
or
xor
xor
cmp
enter
gs
ret
loope
mov
fists
test
dec
cmpsl
jecxz
jae
stos
lods
adc
movsl
leave
lds
and
jns
fsubs
pop
imul
pop
or
int
cwtl
add
shll
adc
inc
push
jnp
out
add
jmp
in
inc
movsl
dec
mov
mov
cwtl
outsl
adc
xlat
leave
inc
js
aaa
pop
movsb
loope
xchg
jp
mov
mov
dec
mov
shr
ljmp
popa
arpl
cmp
inc
and
add
popa
sti
stos
test
lds
pop
test
jge
push
push
mov
xchg
in
dec
inc
sbb
dec
cld
lods
icebp
ljmp
push
sub
pushf
loop
sbb
call
mov
scas
mov
cmp
mov
dec
and
sbb
cs
mov
pusha
movsw
movsb
dec
aas
rolb
out
roll
sbb
leave
mov
inc
pushf
add
stc
xor
and
fsubp
int3
jo
pslld
call
aam
mov
fcmovb
jnp
add
aaa
icebp
test
jb
pop
outsb
xor
lret
sbb
inc
add
cmpsl
mov
cli
in
adc
inc
int3
scas
mov
and
xor
call
fisubl
cmp
rorb
out
pop
or
pop
dec
hlt
popa
out
cmpsb
popa
adc
jle
jno
add
fidivrl
sub
jnp
in
ret
sub
ja
stc
mov
jo
and
lcall
rcl
push
or
mov
mov
fidivrl
adc
pop
nop
in
jno
inc
and
subb
fimull
popa
mov
les
adc
jmp
nop
in
jge
test
cmp
pop
pop
mov
outsl
ss
mov
in
imul
sub
loop
and
out
rclb
jmp
jl
inc
cltd
cli
inc
aaa
shrl
cli
and
scas
push
das
rolb
outsb
enter
push
cmp
push
insb
pop
push
fstpl
shrl
insb
subb
lcall
aad
mov
xchg
or
in
cmp
nop
xchg
in
dec
sbb
les
fwait
mov
jge
dec
fisttpl
xlat
adc
xor
jmp
dec
inc
cld
js
dec
inc
sub
add
test
bts
clc
cmpsl
cmp
sbb
imul
push
nop
xlat
sub
repz
adc
mov
and
cltd
out
push
mov
adc
in
cmp
push
ret
xchg
lret
and
add
adc
xor
or
aaa
pop
sbb
sti
clc
pop
fdivr
scas
rcll
repnz
ret
mov
pop
scas
ja
loope
inc
pop
pop
imul
sub
jge
fmuls
jl
push
jl
sbb
cmp
inc
sbb
or
mov
call
fistps
ja
loope
dec
pop
pop
outsl
mov
push
cmpsb
or
fstpt
pusha
daa
lret
insb
sub
sub
add
push
push
lret
mov
inc
sub
scas
daa
insl
cwtl
mov
mov
mov
push
jns
push
in
push
cmp
or
sub
push
dec
fisttps
es
in
cmpsl
rclb
js
xchg
mov
adc
push
jmp
sub
mov
or
xor
or
xor
cmp
in
and
insb
lea
sbb
loop
pop
and
adc
pop
ficoml
cmp
jecxz
in
mov
push
adc
fucom
add
and
sbb
sub
int3
mov
cmp
stos
lret
jle
faddl
jle
sbb
pop
mov
sbb
je
movsb
adc
mov
arpl
outsl
shlb
and
and
sbb
ret
ja
sbb
pop
fstl
cmp
cmc
outsl
cmpb
push
movsl
sub
leave
jle
cmpsb
add
test
sub
or
inc
sbb
or
rcrb
fistps
sbb
mov
sarb
aaa
out
cmp
mov
jmp
fnsave
or
push
jecxz
je
scas
push
sbbb
adc
add
mov
mov
out
sbb
or
aaa
sbb
or
pop
fwait
mov
push
adc
mov
add
and
adc
outsl
jecxz
mov
jne
adc
inc
jl
inc
and
ljmp
int3
das
aad
lods
ret
jle
std
jb
mov
daa
testl
mov
and
pop
xchg
pop
sbb
fstl
sahf
jl
adc
loop
sub
add
iret
cmp
or
movb
test
or
in
pushf
nop
jb
scas
and
in
xor
lahf
mov
jp
call
or
insb
or
jbe
adc
and
cwtl
jecxz
leave
xor
orb
loop
jns
out
lds
into
das
pusha
add
sbb
mov
sbb
pop
inc
jb
scas
inc
or
test
add
stc
inc
test
aam
pop
xor
faddl
inc
cmp
mov
pop
daa
lods
and
xor
rolb
xchg
or
sub
gs
imul
lds
inc
ja
lret
pop
adc
sbb
jno,pn
mov
sti
push
int
sub
push
jmp
call
scas
mov
sbb
lret
movsb
fstpl
and
shll
in
cmp
sti
sub
loopne
add
jb
jae
xchg
sbb
mov
add
sub
addr16
xchg
adc
add
xchg
divl
jecxz
xor
sub
mov
stc
and
sub
push
cmpsb
add
movsl
lea
sbb
adc
xchg
frstor
mov
gs
lret
mov
pop
adc
jge
clc
vpxor
xor
or
in
pop
mov
ja
sbb
lret
adc
icebp
movsb
aaa
jo
adc
pop
int
sub
inc
jmp
fldl
int
es
and
sub
fnstenv
xchg
ss
cs
pop
pop
in
push
xchg
roll
mov
lods
mov
popa
and
push
jne
cmp
insb
movl
mov
clc
mov
mov
mov
lock
pop
in
cwtl
mov
dec
in
push
add
pop
ret
mov
push
call
dec
movl
jae
cmp
fdiv
repz
leave
sahf
addr16
js
mov
dec
in
dec
ljmp
in
imul
mov
jne
and
test
int3
fdivs
fiadds
lahf
push
mov
bound
mov
sti
out
inc
pop
loop
push
clc
or
jno
or
gs
and
aaa
jge
mov
test
cmc
mov
mov
inc
in
test
or
jl
fs
xchg
push
and
inc
xorl
fsubl
shl
dec
loop
pusha
and
jnp
add
fdivr
lods
arpl
adcb
roll
fwait
je
movsl
mov
and
mov
stos
xlat
jg
lahf
cld
push
fwait
out
iret
jmp
outsl
jg
enter
pushf
push
stos
js
in
popf
mov
daa
ljmp
out
pop
add
in
adc
and
sbb
jmp
jo
xorl
xor
or
dec
aaa
in
inc
mov
ffree
in
repz
jmp
mov
fcomip
mov
mov
dec
pop
mov
sub
lock
jl
repnz
mov
std
sub
mov
cmp
sub
cmpsb
and
xor
xchg
inc
and
dec
jge
in
jge
fcomp
xor
push
mov
or
cmp
jne
gs
jns,pt
mov
fucomi
loope
sub
mov
lea
enter
mov
ret
fsubl
or
cmp
aaa
xchg
icebp
out
nop
and
jo
fsave
lcall
stos
dec
cld
mov
sbb
lods
add
and
mov
js
cmp
out
fisubrl
mov
movl
lock
pop
and
call
icebp
loopne
in
push
sahf
lret
fwait
mov
dec
add
and
test
jmp
mov
flds
mov
arpl
ficoml
aas
jmp
aad
xlat
jg
ror
sbb
xchg
faddl
or
test
push
pop
jne
popf
cmp
add
imul
aam
sbb
mov
lock
and
cmp
cmp
add
add
mov
rcll
stos
add
in
mov
sub
test
mov
mov
sahf
fucompp
lret
xchg
add
pop
mov
fs
sub
jmp
pop
mov
pop
push
hlt
push
dec
dec
sub
outsl
clc
xchg
mov
ljmp
mov
dec
test
stc
sbb
push
enter
in
and
ljmp
int
push
jl
into
aaa
xchg
mov
adc
aad
ret
pop
sub
add
or
xchg
jle,pt
xchg
push
orl
xchg
xchg
mov
mov
out
xlat
stc
leave
iret
mov
lret
mov
lret
jb
lods
mov
movsl
test
decl
icebp
xchg
push
mov
outsl
push
inc
icebp
pop
shll
mov
xchg
aaa
mov
mov
xchg
insb
inc
jle
sub
aad
cli
sbb
jne
fimuls
and
inc
or
mov
loop
ret
cmpsb
jle
xchg
sbbb
lahf
test
push
sahf
pop
adc
pushf
dec
xchg
and
xor
lahf
dec
arpl
or
rcr
sbb
cmp
jg
adc
and
xchg
inc
stos
inc
push
sbb
adc
or
imul
mov
adc
mov
xchg
pop
inc
pop
or
cmp
cs
sbb
mov
mull
dec
mov
push
fiadds
mov
cli
pop
in
cs
inc
or
std
std
fstps
pop
test
inc
push
jl
loopne
inc
sub
ret
fnop
push
sahf
adc
divb
fdivrl
and
cltd
dec
sub
inc
shll
aad
sbb
mov
cmpsl
jne
inc
mov
pop
pcmpgtb
loop
inc
xchg
inc
or
into
es
mov
stos
ret
cwtl
jp
arpl
jns
hlt
aaa
sub
sbb
fsubs
data16
or
and
movsl
pop
daa
mov
in
mov
dec
push
adc
repz
pusha
test
popa
jl
adc
xor
ja
mov
adc
mov
and
jae
pop
inc
push
dec
adc
cmpsl
or
jmp
push
sub
cld
je
adc
xor
mov
movsb
or
push
lods
fcompp
mov
lahf
es
ljmp
mov
xchg
inc
push
sar
insb
iret
ljmp
pop
add
sahf
iret
dec
jge
out
sub
or
nop
mov
push
jae
sahf
lock
aaa
lcall
je
ja
sub
int
rolb
mov
cmp
cmc
push
mov
loopne
pusha
out
add
and
notb
out
mov
mov
in
cwtl
inc
arpl
xor
das
out
inc
das
add
sub
data16
cltd
lahf
adc
loopne
aam
cmpb
add
nop
adc
lods
pop
push
ja
mov
jge
xchg
fildll
jae
enter
jns
fcmovne
pop
pop
fsts
daa
sahf
mov
iret
push
loopne
jnp
sbb
aas
lcall
movsb
mov
ret
mov
icebp
adc
jge
pop
cmp
dec
pop
xor
or
xor
push
xor
sbb
xor
add
fidivl
mov
outsl
xor
or
test
mov
orb
push
mov
inc
adc
jb
sahf
push
jecxz
xchg
loopne
add
lock
and
pop
push
loop
add
sub
cmp
mov
loop
jbe
sahf
icebp
ss
mov
pmovmskb
std
push
xchg
jg
fisubl
jmp
fisttps
out
aas
push
cmp
jo
pop
int
pop
inc
cmp
out
mov
add
fldcw
mov
inc
lods
and
sub
push
dec
pop
push
add
mov
add
fdivr
call
jo
lcall
repnz
and
pusha
mov
sarb
jl
je
fdivrp
pop
xor
mov
mov
and
sub
ljmp
sub
xorb
outsb
dec
fwait
jmp
jl
push
lea
hlt
int3
into
or
lret
sar
ss
sub
addr16
or
sub
sbb
lods
and
je
ret
mov
mov
out
rolb
ja
loope
xchg
mov
pop
popf
fwait
out
scas
es
jnp
scas
addr16
jb
in
jnp
lret
pop
andl
push
mov
pop
sub
xchg
popa
aam
sbb
and
xchg
push
fidivl
and
add
iret
and
or
out
mov
xchg
lock
xchg
inc
outsb
xchg
pop
jo
mov
shlb
or
adc
ja
pushf
sbb
sbb
add
or
inc
sarb
pop
and
call
cmp
data16
cmp
aaa
xchg
mov
inc
movsl
leave
sar
or
dec
fcompl
xor
and
aaa
iret
ss
lret
fldcw
and
mov
popa
cmp
xchg
lock
aaa
cmp
sub
stc
mov
pop
lcall
jae
pop
xchg
cld
dec
daa
int3
add
or
sbb
lret
jne
mov
data16
je
push
sbb
iret
mov
dec
xor
mov
popf
out
cmp
pop
jmp
cmc
jp
adc
add
mov
jnp
ret
sarb
in
pushf
sbb
in
shrb
je
out
adc
fnstenv
push
lret
icebp
lds
mov
aad
hlt
jno
cmpsb
xchg
cmp
pop
and
hlt
mov
cmp
xchg
sbb
xchg
rorl
and
and
call
and
scas
test
sti
sbb
and
in
aas
inc
neg
sub
pusha
inc
inc
int3
popf
ja
cmp
cs
pop
loopne
or
xor
mov
out
popf
add
mov
ds
loopne
int3
test
inc
lcall
stos
in
mov
xlat
rcrb
mov
adc
shl
daa
adc
cmpsb
ljmp
das
jno
cli
pop
jle
lcall
jae
icebp
outsl
gs
stos
pop
test
test
xchg
gs
dec
fs
mov
or
push
jne
sahf
jb
push
xchg
fmull
adc
ss
jl
add
add
lods
push
into
sbb
xchg
insb
popf
mov
jne
xor
cmpsl
cmp
mov
cmp
jg
sbb
or
orb
in
mov
and
in
or
test
xchg
mov
mov
sbb
shrl
add
lea
and
call
mov
aas
in
repz
sbb
fcoml
dec
jl
jle
mov
leave
bound
insl
adc
stos
andb
sahf
jg
cmpb
out
fmuls
push
not
cmp
mov
add
push
dec
mov
inc
sbb
stos
cwtl
stos
mov
in
push
jbe
imul
les
lcall
fadd
mov
mov
ljmp
lea
shlb
xchg
aas
xor
in
jnp
mov
xchg
cmp
jp
out
pop
mov
xchg
cmpsb
xchg
pushl
inc
and
out
mov
mov
jno
in
das
movsb
cmpsl
int
fdivl
add
pop
pop
xchg
xchg
jecxz
enter
adc
sahf
xacquire
fsub
in
sub
loop
test
fsubs
cmp
add
notb
pop
jp
mov
outsl
sti
pop
mov
adc
in
sub
mov
test
inc
dec
scas
sbb
subb
movsl
test
jg
xor
jno
push
stos
fadd
rorl
ret
cmpsb
jmp
daa
hlt
mov
sbb
aas
fnsave
es
orl
out
inc
mov
pusha
lahf
push
ror
lahf
js
mov
ror
loope
cmp
cmp
pop
std
sub
enter
clc
leave
inc
pushf
in
cmp
lahf
jecxz
mov
fwait
lcall
cmpl
int
in
sbb
out
jp
addr16
mov
add
inc
mov
int3
in
mov
andl
jl
out
test
push
in
ret
subl
sub
mov
sar
jbe
mov
xor
or
pop
sub
jmp
and
mov
push
or
rcrl
repnz
lods
add
or
imul
push
mov
inc
fildll
or
bound
cmp
dec
jl,pt
fucom
jno
jb
imul
call
outsl
fistpl
jmp
xlat
aam
mov
sub
rclb
out
outsb
or
cld
xchg
lcall
or
loop
hlt
jbe
fidivs
mov
jp
call
test
mov
lret
jecxz
jle
cmp
sahf
and
out
repz
inc
jno
cmc
xor
cmpsb
iret
test
sbb
xchg
test
xchg
or
push
pusha
mov
int3
int3
add
cmp
inc
int
pushf
rcll
pop
test
inc
fwait
jne
push
pop
pop
and
andl
fwait
pushf
mov
fstl
bound
or
orb
or
test
jne
mov
shl
mov
cmp
jo
mov
fstpt
jl
add
ret
cmpsb
movsb
sti
mov
popa
jp
mov
rcrb
jmp
cmc
jmp
rol
ljmp
inc
imull
ja
inc
je
pop
mov
cmp
jp
add
push
jmp
insb
pop
jnp
std
jb
sbb
mov
sbbl
add
fsub
sbb
dec
mov
ret
or
lret
loope
and
and
adc
aad
push
lds
hlt
in
out
pop
fnstenv
sbb
rclb
inc
jp
sbb
jne
shll
mov
xchg
movsb
xor
fwait
aaa
push
sub
test
push
mov
or
xchg
pop
cmp
fucomi
sbb
and
xchg
das
xchg
into
jge
sti
adc
or
add
mov
gs
imul
and
in
or
xor
in
cmp
pusha
mov
ljmp
pushf
call
cmovbe
jp
mov
adc
imul
mov
adc
inc
subb
mov
insb
ds
cltd
hlt
and
add
lahf
jp
hlt
push
push
jg
cmpsb
test
cmc
sub
loope
ja
inc
jge
xchg
cmp
jbe
push
or
call
out
push
xor
xorl
dec
mov
and
fcom
xchg
or
mov
xchg
inc
je
or
out
sbb
jmp
jl
sbb
ljmp
sti
ret
inc
mov
xchg
loope
mov
cmp
or
popa
cli
aaa
pop
iret
subl
sbb
sub
popf
in
clc
jl
jb
jmp
adc
fdivl
inc
ret
xor
pop
in
arpl
ljmp
cmp
jo
pop
mov
adc
mov
sbb
rcr
mov
mov
lret
leave
stos
int3
popf
push
fwait
dec
daa
hlt
xor
hlt
and
insb
repnz
call
and
sbb
lods
cmpsb
xchg
xor
cmp
mov
jecxz
arpl
jbe
test
sub
mov
out
lods
xchg
and
sbb
insb
cmpsb
pop
xor
cmp
jno
popa
mov
bnd
push
fdivrl
les
mov
bswap
lcall
out
xor
repz
sbb
or
and
int3
inc
in
fwait
mov
cmp
cmp
insb
lds
enterw
loopne
or
aaa
int3
add
in
repnz
loope
fwait
test
xor
push
pop
clc
adc
fnstsw
stos
sub
and
loop
mov
repnz
pop
and
sbb
adc
pushl
hlt
adc
jb
xor
fwait
shlb
jl
xchg
cmp
lods
push
pusha
xchg
mov
xchg
enter
repnz
add
or
mov
in
arpl
leave
test
test
pop
daa
dec
ss
cmp
hlt
adc
jecxz
pop
push
in
pop
mov
jecxz
pushf
cmp
in
cmpsl
jecxz
arpl
out
lcall
and
repnz
or
fisubrl
cmp
mov
mov
outsb
arpl
dec
mov
cmp
add
jmp
mulb
lret
std
aaa
fwait
jo
inc
cmp
lock
imulb
fisubl
cmp
mov
loope
arpl
mov
out
repnz
repnz
mov
cmp
ficompl
pop
xor
mulb
fwait
in
rolb
and
jl
xchg
add
stos
enter
repnz
out
sbb
or
inc
and
jecxz
lret
inc
rcrb
mov
andb
cltd
mov
pop
enter
repnz
push
sub
mov
cmp
leave
mov
jo
inc
cmp
lock
and
jl
push
mov
mov
ret
cmp
xor
arpl
sbb
or
xor
int3
in
xchg
pusha
cmp
push
push
dec
imul
xor
aaa
enter
mov
mov
int3
test
push
ss
cmp
adc
or
es
cld
xlat
and
sbb
cmpsb
xchg
xor
cmp
mov
leave
mov
jb
popa
dec
mov
cmp
cli
mov
jmp
mulb
lret
add
daa
insb
and
adc
or
in
lock
xlat
and
sbb
mov
cmp
in
mov
ds
lea
xor
pop
enter
out
mov
jg
je
movsb
ficompl
xor
cmp
jno
ds
jecxz
add
fmull
mov
jecxz
arpl
lret
add
insb
daa
pop
cmp
lock
and
push
push
aam
enter
iret
xor
cmp
add
jecxz
arpl
dec
fwait
dec
daa
clc
xor
hlt
and
inc
repnz
call
sub
cmpsb
ja
mov
or
stc
mov
andb
jb
test
mov
in
dec
in
arpl
leave
repnz
fstpl
ss
cmp
pop
push
push
shll
int3
jns
sbb
movsb
lret
xor
cmp
fimull
add
into
arpl
leave
cmpsb
int3
xchg
inc
fwait
cmp
push
mov
or
dec
sbb
xor
fwait
mov
cmp
mov
and
enter
repnz
cmp
adc
jecxz
repnz
leave
lret
aaa
fwait
jo
pop
ss
cld
mov
hlt
jl
dec
fdivr
and
sbb
fcmovb
cmpsb
outsl
xor
cmp
in
jecxz
arpl
jbe
mov
loop,pn
enter
cmp
bnd
divb
and
sbb
cmp
or
ss
mov
and
cmp
dec
adc
ror
in
cmp
aas
and
sub
xor
rcll
pushf
mov
xor
jp,pn
int
fwait
xor
jp
aam
loop
mov
in
or
push
mov
lret
and
mov
and
loope
test
shll
ds
jl
aas
ljmp
dec
pop
mov
push
or
int
jp
lods
sub
call
jl
out
shrl
mov
fidivl
leave
es
fs
xchg
push
mov
push
inc
icebp
mov
jae
andl
jmp
fldl
or
mov
pusha
push
mov
add
loopne
sbb
movsl
test
test
jmp
jnp
scas
sub
shl
mov
xor
insb
jmp
jnp
les
frstor
mov
gs
sbb
not
in
pop
xchg
and
in
pop
jmp
icebp
xor
js
inc
insb
out
in
lcall
xchg
dec
jmp
add
cs
out
cmp
add
stc
es
jbe
xor
outsb
push
movsb
ud1
les
rol
xor
lcall
or
jmp
cli
into
xchg
js
lret
push
dec
jle
push
loope
adc
mov
pop
fldt
inc
negb
and
inc
leave
das
push
mov
decl
jl
jne
sub
mov
popf
mov
loope
mov
ss
jecxz
in
rcr
jl
popf
mov
cmpsl
pop
mov
jbe
lock
loopne
imul
sub
loope,pn
loopne
cmpl
ja
or
jno
cmp
mov
cmp
ficompl
push
adc
mov
call
into
and
dec
repnz
sub
jae
xchg
and
and
call
mov
call
jnp
fldl
fsubrl
or
popa
daa
movsb
shll
faddl
mov
lret
adc
fmulp
mov
jb
and
lods
inc
mov
dec
insl
push
insb
adc
ret
pop
shlb
bound
dec
add
out
scas
push
or
fisttps
push
xlat
dec
loopne
xchg
lock
lahf
xor
lahf
loope
int
shlb
xchg
and
push
ss
mov
fstps
ljmp
mov
out
sbb
xchg
cmp
in
fwait
daa
mov
mov
pop
mov
jp
sub
cs
adc
mov
cmpsb
pusha
outsb
cs
jl
and
mov
mov
add
jg
insl
add
fsubrl
jmp
int3
lret
push
ljmp
inc
stos
pop
cmp
fidivrl
in
scas
and
aad
sahf
adc
cmpsl
cmp
pushf
jns
mov
in
adc
xchg
mov
dec
inc
cmpsl
and
pushf
jae
out
lcall
cmp
loope
leave
mov
or
add
mov
fsub
out
pop
sub
sub
loopne
rcll
jns
xlat
ds
insl
pop
push
shr
inc
aaa
cltd
dec
jl
sbb
xor
cltd
mov
aam
mov
mov
jle
fidivl
fucom
in
out
mov
and
call
xor
mov
leave
add
enter
sbb
sub
mov
inc
cmp
lcall
cmp
add
sahf
add
ljmp
push
xor
jae
lret
sub
inc
cmp
popf
inc
or
rcl
fs
dec
clc
inc
rclb
pop
sub
iret
mov
in
cmp
testb
outsb
jmp
movb
loop,pt
jnp
dec
and
inc
cwtl
adcl
adc
pop
cmp
je
mov
fiadds
jl
fmuls
jmp
aad
int
jns
movl
cmp
pop
pop
lods
fistps
sub
jmp
mov
jecxz
sub
jmp
icebp
fidivrl
xchg
adc
xchg
xor
jnp
out
inc
lcall
mov
xlat
loopne
iret
in
cwtl
aaa
sahf
push
call
rcrb
jg
fistpll
cmpsb
mov
lcall
mov
lods
jge
cmp
in
jp
movsl
sub
lahf
xchg
xchg
lret
out
mov
mov
adc
cli
and
aam
je
nopl
adc
pop
test
push
aad
inc
popf
sti
cmp
or
lret
xlat
jecxz
sbb
cmpsb
movsb
sub
cmpsb
cli
cmp
nop
fsubl
xlat
inc
loop
or
loopne
xor
out
int
sbb
xlat
inc
mov
adc
fisubrs
dec
cld
add
mov
ja
mov
repnz
int
lock
and
or
aad
adc
jecxz
mov
int3
out
or
enter
movsb
mov
inc
or
sub
fstps
clc
arpl
sub
jbe
inc
leave
fstl
lahf
and
test
cmp
fidivrs
dec
enter
sar
cmp
popa
mov
adc
push
and
xor
xor
loopne
fmull
pop
rcll
or
in
cwtl
lret
dec
bound
dec
cld
daa
sub
mov
and
cld
movsl
enter
mov
push
add
sub
dec
push
lret
jecxz
inc
rolb
arpl
ljmp
push
push
test
mov
cmp
push
mov
movsl
adc
dec
lods
push
push
pop
pop
fs
jne
ss
jle
enter
pop
std
jle
daa
mov
xor
jno
mov
fwait
mov
popf
aas
push
fstpt
mov
les
adc
rcr
aaa
fdivrs
dec
push
mov
cs
and
cmpl
cld
push
inc
inc
dec
xor
dec
sub
lcall
pop
add
aam
or
or
and
aam
or
or
jno
mov
ja
add
cmp
push
imul
scas
frstpm(287
sbb
mov
std
mov
inc
lds
adc
out
jmp
xchg
cltd
dec
fidivl
jp
inc
adc
sbb
inc
jns
enter
xor
and
inc
sahf
sti
stos
cs
sbb
aaa
mov
lcall
cmp
fildll
lret
add
cmp
dec
or
filds
push
pushf
test
jl
fbld
xor
out
dec
js
lret
scas
jp
bound
xor
loopne
fsubrp
enter
leave
aas
mov
pop
lahf
stc
cmpsl
add
sti
les
mov
rorb
pushf
arpl
test
mov
and
mov
lods
push
pop
shll
or
mov
pop
mov
insl
dec
repnz
lds
add
pop
xor
xor
stos
sbb
lds
mov
into
stc
add
pop
dec
xchg
fs
data16
aam
lds
add
jo
in
sub
idivb
sub
sub
scas
fiadds
pop
loopne
out
adc
aaa
loopne
jnp
leave
movsl
idiv
xor
add
sub
rorl
cltd
push
ja
xor
xor
call
adc
fwait
cmp
test
pop
movsl
loope
jb
inc
mov
out
xor
in
add
nop
cmpsb
aam
ja
mov
ljmp
fcompl
jnp
push
or
push
dec
pop
push
xchg
and
add
mov
xor
dec
cmp
inc
in
push
push
int
test
mov
mov
rorb
ret
inc
fadds
call
xchg
loopne
cmp
mov
out
pop
inc
int3
sbb
xor
mov
fiaddl
xchg
arpl
icebp
inc
addr16
add
sbb
sub
sbb
cmp
or
push
pop
sbb
cmp
xchg
and
in
inc
pushf
pop
cwtl
imul
out
mov
loope
aam
sub
mov
mov
jbe,pt
pop
loopne
push
jae
leave
jmp
mov
jmp
jae
aam
std
mov
push
lods
out
pop
cmp
push
pop
sub
cwtl
out
int3
add
jle
ret
in
movsb
mov
mov
jbe
mov
pop
loopne
mov
jle
add
add
loope
add
xor
leave
mov
push
and
loope
jmp
pusha
outsb
loop
push
push
mov
mull
inc
roll
jp
mov
popf
sub
mov
push
pop
jb
push
out
in
sbb
test
cmp
test
push
mov
out
aam
add
les
and
inc
popf
cmp
fidivl
sahf
push
outsl
add
pop
data16
je
adc
pop
dec
or
mov
scas
xor
in
nop
sub
add
sti
ja
inc
mov
dec
add
ficompl
xchg
jnp
mov
xor
call
jge
pop
pop
jo
push
movb
or
sbb
les
sub
adc
jg
out
jbe
mov
loopne
push
stos
pop
orl
jbe
aaa
nop
cmp
es
stos
loope
pushf
fisubl
outsl
push
imul
popf
inc
xchg
jge
call
ljmp
movl
mov
and
aam
mov
into
jg,pt
mov
pop
stos
in
mov
fmul
cmp
adc
jmp
xorl
out
and
rorb
add
cltd
xchg
pusha
sbb
add
out
jmp
sub
clc
xor
imul
pop
repz
mov
dec
addr16
jne
adc
rolb
and
ficomps
mov
sbb
imul
mov
and
mov
xor
les
inc
jecxz
add
jnp
lahf
pxor
aad
sub
lcall
fidivl
fsubrs
loopne
mov
in
enter
mov
loop
mov
mov
pop
inc
mov
xor
stos
aas
sub
mov
dec
adc
mov
movsb
repz
ja
jnp
mov
out
lods
movl
sbb
jno
lods
mov
cwtl
sbb
push
push
sahf
push
jmp
mov
in
fs
jmp
dec
repz
jp
push
test
mov
lret
stos
fstp
mov
cmp
pop
shll
lock
adc
mov
jp
scas
test
mov
imul
or
jmp
inc
jg
aam
lret
loop
je
aas
jge
neg
inc
shl
scas
inc
inc
and
mov
jecxz
xor
sub
jmp
mov
push
ss
in
ret
add
cmpsl
jno
xor
inc
imull
inc
cmpsb
subb
xor
sbb
pusha
and
xor
mov
test
dec
roll
lahf
in
xchg
lret
jg
stos
imulb
mov
push
fndisi(8087
pop
int3
adc
into
imul
sbb
cmc
inc
popa
xchg
imul
xchg
adc
in
out
and
addl
or
xlat
out
add
sbb
mov
sub
fildl
sub
xchg
outsl
loop
cmp
aaa
mov
dec
mov
frstor
cs
mov
scas
cmp
cli
cmp
ss
xchg
lcall
push
push
lcall
jbe
loop
jg
das
xor
and
mov
popfw
dec
les
repnz
jp
repz
jle
dec
roll
inc
lret
push
mov
or
xchg
jbe
rcrb
ret
shll
dec
icebp
fadd
pop
pop
jne
sbb
mov
jecxz
cmp
stos
mov
rcrb
stos
push
dec
push
adc
popf
dec
xor
test
push
adc
mov
xor
sahf
or
ret
jle
cltd
insb
sbb
lea
sub
xor
lahf
mov
inc
in
mov
stos
aas
mov
jp
xor
sub
jmp
les
out
jl
movsl
cmp
pop
push
mov
movsl
sbb
inc
mov
inc
pop
int3
lret
leave
pop
insl
sbbl
xchg
out
std
xlat
jmp
mov
cmp
addr16
jae
testl
push
cmp
test
stos
xor
lcall
frstor
push
imul
movb
jmp
loopne
movsl
in
dec
or
ljmp
aaa
dec
dec
xchg
push
add
pusha
inc
add
or
fst
fistpl
jecxz
je
dec
addb
sub
dec
cmpsl
std
sahf
mov
cltd
xchg
xor
push
and
mov
sub
xchg
shll
enter
push
jle
fwait
cwtl
daa
jo
mov
rolb
cli
pop
iret
adc
cmpsl
enter
fisubrs
dec
push
mov
pusha
pop
adc
out
and
pop
sbb
inc
popl
sub
ss
in
inc
in
adc
add
outsb
outsl
xor
mov
in
adc
out
push
fisubs
dec
or
in
and
out
lahf
rorb
out
jb
lret
mov
sub
iret
lret
inc
adc
pop
adc
js
cmp
pusha
movsl
inc
sub
in
adc
in
xor
add
inc
sub
and
mov
fcom
outsl
adc
push
adc
loope
ret
aad
shl
xchg
mov
scas
test
sbb
sub
lret
xor
adc
icebp
adc
loope
rcl
and
std
icebp
mov
pop
psrlw
jmp
jmp
cmp
add
and
adc
sbb
lock
lret
mov
sub
jmp
rorl
adc
pusha
aad
rorb
and
shr
sti
inc
pop
lods
sub
adc
mov
mov
mov
adc
dec
out
and
cmp
inc
out
mov
add
lret
jp
sbb
shlb
adc
mov
icebp
fmul
mov
push
mov
or
sbb
sub
sub
std
fdivrs
js
mul
mov
lea
mov
lret
lods
out
in
mov
lret
mov
test
shr
out
test
or
sub
gs
mov
sub
std
xor
mov
push
les
repz
sbb
test
sub
and
inc
sub
loop
enter
or
sbb
stos
fimull
orps
adc
push
pop
push
leave
lds
push
popa
lods
pusha
push
jno
cmp
fldt
in
sub
repz
mov
cmp
mov
negb
mov
ficompl
xchg
mov
cmc
mov
jmp
enter
mov
jnp
sbb
add
les
lock
adc
rcl
or
adc
leave
bnd
fcomi
mov
movsb
fcmovb
ljmp
js
jbe
fsubs
and
scas
ret
or
xor
enter
mov
loopne
out
popl
sarb
ret
add
addl
cmp
stc
sub
sub
sbb
pop
sbbl
mov
aaa
xor
sbb
out
cmp
mov
mov
aam
cmp
jg
mov
xchg
push
add
mov
shll
or
mov
std
add
out
sarl
push
and
xchg
pushfw
pushf
pop
jle
ja
dec
mov
dec
mov
mov
inc
cwtd
dec
jl
out
sub
add
push
or
cltd
mov
and
jnp,pt
cmp
cmpl
cld
enter
lret
fistpl
mov
push
lahf
push
sub
sarb
les
sbb
iret
aaa
mov
mov
and
daa
adc
ds
dec
mov
mov
adc
sbb
std
iret
out
cmp
xlat
movsl
mov
cmp
ss
adc
push
mov
aas
lods
push
xor
in
test
jmp
xchg
jmp
test
and
lds
xchg
sbb
mov
lcall
call
adc
sub
xchg
rcrl
jae
pop
dec
pop
cs
sbbb
or
rorb
mov
cmp
fwait
pop
icebp
inc
ss
push
faddl
add
dec
sub
mov
xlat
xchg
test
cmpl
push
jp
enter
pop
jnp
xchg
mov
jns
add
add
roll
or
out
dec
sub
iret
jns
fisttpll
jnp
mov
fnstenv
xchg
push
dec
dec
adc
outsl
add
inc
dec
xchg
mov
inc
sub
mov
sub
icebp
lahf
pop
or
push
lock
sbb
outsb
mov
xchg
rol
and
mov
vpcmpgtw
mov
fdivrs
imul
stos
xor
stos
das
cs
mov
es
mov
scas
mov
dec
enter
orl
xchg
push
decb
loop
pushf
add
xor
xor
adc
divb
and
and
adc
pop
enter
fdivrl
dec
sub
dec
fisttpl
jb
mov
std
scas
pop
fsubrs
mov
loop
xchg
ja
daa
insl
inc
std
shrb
mov
fcmove
cmp
push
orl
loopne
cmc
xlat
fsubrs
jb
call
cmpsb
ja
xchg
cmp
in
jmp
cmpsb
arpl
push
fwait
dec
daa
fs
sbb
or
call
and
pop
mov
cmp
mov
mov
shlb
leave
sahf
int3
test
dec
ss
adc
popa
lods
xor
dec
push
clc
mov
xor
test
es
repnz
call
and
sbb
cwtl
cmpsb
outsl
xor
cmp
into
in
mul
mov
int3
leave
dec
fwait
dec
daa
pusha
ss
lock
cld
nop
mov
and
pop
int3
movsb
cmp
fimull
out
jecxz
arpl
leave
lret
lahf
fwait
pop
daa
dec
ss
cmp
insb
push
dec
mov
cmp
popa
cmp
xchg
dec
hlt
jmp
inc
mov
sbb
cld
scas
and
pop
rcr
cmpsb
shll
cmp
fimuls
shl
mulb
leave
int3
adc
ss
cmp
push
push
push
shll
enter
repnz
dec
or
leave
and
dec
lret
cmp
cwtl
ss
nop
mov
test
mov
mov
pop
repnz
push
incb
and
sbb
clc
int3
lret
xor
jge
fsubl
fsubs
mov
ffreep
enter
repnz
inc
and
sbb
dec
cmpsb
divl
sub
sbb
mov
lret
aaa
enter
mov
loop
icebp
leave
repnz
fnstsw
jl
nop
ss
cmp
cmp
push
jno
sti
js
in
in
imul
test
cmpsl
add
test
or
mov
and
test
pusha
cs
or
adc
icebp
mov
add
cmpsb
cld
cli
test
push
pop
sbb
or
mov
jp
and
jno
inc
fcom
test
pop
fiaddl
cmp
es
mov
jg
inc
rolb
adc
aam
adc
leave
sub
scas
js
imul
add
mull
cmp
jecxz
jp
das
call
cltd
xchg
int
jae
cmp
js
cltd
xchg
or
xor
xor
es
sub
inc
in
xor
je
repnz
test
loopne
fcompl
in
aaa
push
mov
loopne
sahf
inc
and
mov
and
mov
pop
add
mov
cmp
sarb
jg
or
dec
xchg
fstpt
rcrl
push
repz
jecxz
shrb
dec
sar
subb
push
rol
addl
mov
movsb
cmp
mov
sbb
xor
jb
push
mov
shlb
sub
inc
iret
mov
fsubl
insb
inc
mov
jl
pop
jp
mov
fidivrs
out
xchg
cmpl
and
jg
pop
rcl
and
push
mov
dec
mov
ret
sbb
or
mov
mov
sub
xchg
cmc
cmp
mov
mov
push
repz
xor
mov
sub
shll
dec
add
movsb
or
std
jo
cmpsb
inc
int3
or
lahf
andb
gs
or
ljmp
insb
mov
aaa
mov
push
cmpsl
movsl
xchg
std
jns
add
sub
add
and
scas
jo
cmpsb
cs
push
adc
xlat
repz
or
mov
mov
fs
jge
inc
lret
loope
addl
cmpsb
sbb
out
add
scas
push
and
in
xorl
aad
or
les
loopne
sbb
loopne
mov
enter
ret
popf
icebp
and
cltd
mov
adc
push
fs
and
xlat
mov
sti
dec
cwtl
idivl
add
xchg
pop
stos
mov
arpl
jecxz
bound
mov
xchg
cmpsb
inc
cld
test
jg
ret
xchg
add
orl
rorb
and
jno
repnz
pop
out
aad
outsl
into
call
dec
lock
pop
enter
sbb
clc
sbb
push
add
and
mov
out
sbb
mov
push
and
cmp
jmp
or
pop
cmp
call
sub
push
xor
leave
fadds
cmp
pop
pop
in
push
sub
pop
outsl
jl
leave
insl
mov
mov
loop
adc
xor
jmp
mov
sbb
inc
xchg
xchg
add
xchg
out
push
ret
lds
mov
sbb
xor
xchg
enter
and
push
mov
jle
cmpsl
jns
mov
shll
and
add
cwtl
and
test
xor
push
jge
lock
xchg
xchg
mov
ficomps
orl
inc
dec
xchg
js
sub
jb
fs
bswap
outsl
out
jns
fs
ror
push
cmp
mov
gs
pushf
cmp
dec
inc
jns
cmp
adc
std
jge
outsl
mov
mov
cwtl
orb
mov
movb
rcll
jmp
pop
cmp
pop
inc
cmp
pop
leave
lret
js
push
shlb
add
jb,pt
lods
pop
xor
inc
xorb
loope
add
hlt
stos
loop
fists
push
rcll
mov
push
rorl
add
fidivrs
fadd
sbb
dec
pushf
mov
jmp
call
scas
pushf
sbb
sub
fcoml
mov
jmp
add
cmp
fbld
adc
ret
add
dec
or
mov
into
test
adc
mov
cmp
sub
inc
cmpsb
arpl
fcompl
adc
rorb
mov
adc
out
mov
pop
xor
dec
addb
in
xchg
aam
cmp
sbb
adc
inc
mov
add
fldenv
adc
inc
xchg
mov
mov
and
rorl
test
inc
and
sbb
imul
jb
mov
in
imul
and
lret
or
repz
stos
mov
aam
imul
data16
decb
out
mov
xchg
repnz
add
sub
push
mov
jnp
ret
outsb
mov
mov
fstps
and
outsb
out
mov
xchg
es
hlt
add
adc
sbb
out
cltd
out
fwait
stos
sbb
jne
adc
xchg
push
call
mov
out
jb
dec
aas
test
stos
testl
bound
inc
sbb
hlt
mov
jmp
stos
loope
aas
rorb
ret
sti
inc
dec
fcomps
mov
xchg
cld
inc
push
fisttps
adc
in
cmp
xor
xor
dec
mov
fstpl
ds
mov
push
outsb
add
call
jmp
and
add
xor
loopne
cltd
cwtl
pusha
xor
cs
fdivrp
mov
sub
subl
cmpsb
outsl
jg
lock
add
cmp
lods
shrb
jae
roll
sub
or
roll
mov
dec
xlat
or
mov
add
dec
decl
or
cmp
out
fcomip
xchg
fwait
rcrb
pop
out
fcoml
xchg
cmp
hlt
lret
or
into
sbb
out
out
iret
add
sbb
and
les
scas
mov
mov
push
push
leave
iret
inc
pop
add
gs
es
mov
mov
adc
add
and
roll
push
or
fidivrl
lret
xchg
test
jge
push
cmp
scas
int
cmp
dec
adc
addr16
loope
movl
out
xchg
or
out
cmpsl
sbb
call
adc
loopne
push
movsb
jb
sbb
sbb
fstps
pushf
fsubrp
mov
cmp
jo
pop
add
inc
jne
std
stc
stos
xchg
jp
jp
sub
jns
cli
pop
xchg
js
jnp
jb
mov
cmp
scas
insl
mov
bound
rcl
xor
cmp
sbb
jb
les
or
dec
cmpl
imul
movsb
and
sub
and
mov
inc
push
push
jbe
jno
push
adc
ja
push
cli
mov
addr16
sbb
in
dec
xchg
ret
xor
mov
ret
adc
ljmp
bound
sahf
cmp
ret
ds
int3
outsl
pop
not
xchg
sarl
push
inc
scas
jmp
push
xchg
add
out
inc
xchg
jns
cltd
adc
movsl
xchg
std
aad
inc
inc
sbb
pop
cwtl
jecxz
inc
jle
rolb
loopne
fs
mov
cmp
push
adc
pop
and
insl
in
aaa
std
xchg
shrb
scas
ss
push
dec
repnz
into
insl
frstpm(287
and
in
cmp
jge
retw
je
sbb
repnz
adc
inc
push
out
leave
xchg
adc
subl
mov
ret
sub
js
adc
jg
adc
int
repnz
repnz
test
in
xchg
lock
mov
in
cmp
movsb
sub
sub
aam
mov
pop
xor
push
fld
in
repz
es
push
sti
push
adcl
pop
pop
mov
push
or
pop
or
xlat
lret
loopne
and
testb
mov
or
mov
test
dec
dec
or
cmc
xor
or
pop
dec
dec
push
hlt
mov
jo
wbinvd
nop
jle
push
mov
inc
movsl
ret
fldt
shll
dec
adc
loopne
push
lahf
aam
sub
ss
jno
ret
mov
mov
add
nop
jg
pop
int3
outsl
lcall
jge
push
movsl
imul
outsl
das
and
lcall
stos
aaa
lods
xor
mov
mov
dec
push
mov
cs
sbb
out
inc
and
cmc
ds
xchg
adc
xorl
mov
roll
shrl
pop
push
data16
push
cwtl
push
ficoms
imul
pop
cmc
cmp
push
in
mov
repnz
rcr
loop
adc
xchg
push
push
push
out
adc
adc
mov
push
cmpl
xlat
sub
cld
fs
cmpl
lods
data16
and
mov
mov
lock
mov
sub
sub
mov
push
pop
movsl
sub
sub
pop
inc
repz
sbb
test
shlb
insb
adc
fsubrs
mov
loop
push
sbb
sbb
fdiv
inc
lods
stos
leave
push
divl
mov
and
fcoml
push
int
test
adc
mov
pop
hlt
scas
lds
cmp
mov
scas
xor
imul
movsl
shrb
in
fidivrs
jb
add
pop
jmp
in
stos
xchg
mov
sbb
lock
nop
dec
stc
stc
cwtl
xchg
xor
mov
and
in
push
fmuls
sub
jb
clc
mov
mov
inc
js,pt
dec
pop
ret
pop
cmp
loop
ret
push
orb
pop
or
mov
inc
jl
sub
jmp
jg
das
adc
sbb
test
pop
das
rcr
daa
sbb
inc
les
or
lret
cmc
daa
shll
sub
inc
cmp
test
test
test
nop
int
mov
sbb
fmul
and
inc
jnp
xchg
lds
fs
push
mov
js
or
std
inc
jno
ss
mov
testb
xchg
and
jp
aad
mov
out
loop
hlt
or
xchg
inc
adc
out
jb
cmp
lock
pusha
jmp
and
sbb
xor
mov
sbb
jb
pop
fnop
mov
aas
or
jge
mov
pop
test
push
jmp
mov
push
inc
pop
ds
jns
lret
jns
push
dec
sbb
adc
je
pop
mov
mov
repz
push
sub
dec
jp
or
insl
mov
and
and
jl
test
mov
and
sbb
jp
push
enter
cmpb
add
xchg
and
loope
shlb
movsb
mov
sub
push
roll
movsb
call
add
out
sub
aad
jmp
push
subb
loop
xor
add
aas
pop
outsb
inc
jae
cmp
test
pop
lea
add
cmpsb
sti
lret
divl
cmp
pop
add
dec
in
adc
and
add
cmpsl
in
jns
cmp
pop
sbb
test
xor
test
cmp
and
fldcw
pop
idivb
cs
xor
lods
sahf
leave
lods
js
add
push
sti
push
cmpb
sub
sub
in
jnp
mov
pusha
mov
leave
movsl
das
js
sbb
jae
adc
and
cmp
enter
lahf
and
jle
pushf
push
dec
shlb
pop
dec
push
lret
or
in
stc
xchg
arpl
fcompl
adc
enter
cmp
jnp
or
jp
xorl
mov
jmp
mov
pop
andb
sbb
xchg
ljmp
xor
fcomps
inc
fcomps
mov
fsubrp
sub
popf
xor
or
roll
sarb
ret
sbb
jle
and
test
cmp
jecxz
movsb
cmc
int3
and
in
pop
enter
shlb
mul
in
stc
iret
push
or
das
mov
ja
sahf
xor
iret
dec
and
daa
iret
ljmp
mov
sbb
fisttps
pop
mov
outsb
pusha
and
add
out
jle
jns
inc
push
and
fst
cmp
jecxz
push
fucomi
cmp
and
pop
out
aam
xor
dec
std
in
loopne
arpl
sahf
cmp
adc
push
dec
cmpsl
jno
push
insb
and
scas
stos
mov
fucomip
mov
fildl
sbb
imul
in
jecxz
enter
push
cmp
mov
mov
and
ljmp
je
and
gs
push
jecxz
shl
or
mov
inc
jmp
xor
in
shr
enter
xchg
dec
and
jecxz
jp
pop
stc
mov
lahf
sahf
xchg
dec
and
mov
in
movsb
jo
insl
in
cli
jmp
adc
jns
cmp
into
rol
and
insl
out
pop
mov
shl
loop
pushf
mov
cmpsb
push
add
and
lahf
pop
shlb
scas
adc
cmp
lds
popf
fwait
sti
inc
aaa
loopne
jne
popa
and
push
into
lds
mov
insb
sub
jl
and
data16
insl
jmp
fstl
loopne
mov
push
or
jb
nop
dec
mov
in
inc
and
in
inc
loopne
or
fcmovb
adc
jb
dec
jg
repz
sbb
adc
inc
and
mov
xlat
scas
sbb
xchg
call
jecxz
mov
and
fucom
mov
shl
call
loop
decl
idivb
dec
mov
movsl
iret
pop
shl
cli
mov
ja
add
mov
lcall
push
pusha
cmpl
jbe
cmpsb
mov
mov
jmp
push
fs
push
pop
out
push
test
ret
cmc
sbb
xor
jl
mov
jge
sbb
jge
cmpsb
js
push
cli
mov
mov
cmp
outsb
or
pusha
mov
or
lea
mov
movsb
je
xchg
jbe
or
jmp
fwait
jge
adc
stos
add
pop
fildl
mov
and
mov
mov
daa
push
jge
xor
dec
lret
ja
mov
cltd
movsb
add
mov
and
lock
std
insl
pushf
adc
and
movl
iret
outsb
xchg
jmp
inc
mov
mov
dec
pop
pop
cmp
add
cmp
sarb
xor
adc
movsl
mov
ss
cmp
push
push
inc
popf
mov
lcall
call
and
sbb
cwtl
cmpsb
ja
mov
mov
push
arpl
cli
popf
adc
mov
sar
movsl
and
outsl
in
sbb
pop
and
sbb
imul
wrmsr
mov
xchg
jns
rcll
xor
add
mov
loop
jmp
jl
rorb
pushf
stos
pop
shrb
adc
xchg
sub
add
popa
push
aam
adc
sbbl
enter
movl
lods
mov
lock
nop
fcomi
daa
nop
dec
xor
aas
inc
arpl
sbb
and
xchg
jg
mov
inc
and
sub
pop
scas
mov
lea
test
stos
out
stac
sti
inc
xchg
sub
xchg
out
xchg
dec
mov
seto
mov
je
xor
mov
lods
pop
leave
iret
ss
shrl
movsl
ljmp
xor
ljmp
nop
sub
lahf
js
jae
xchg
push
sub
stc
test
adc
les
fstps
data16
cmp
imul
int3
adc
bound
jo
pop
mov
adcb
push
adcb
enter
rcrb
movsl
mov
mov
add
mov
xchg
cmp
adc
lret
xchg
pushf
lcall
test
lret
push
lock
jl
lea
cmp
mov
pop
shlb
rol
cs
pop
adc
addr16
mov
shll
adc
and
add
jno
mov
sub
xchg
xchg
sbb
push
jno
cmp
inc
or
cmp
mov
es
mov
psrlw
or
shr
int3
das
jl
movsl
push
imul
stc
and
jns
jbe,pt
inc
loopne
xor
xchg
ss
aaa
jb
push
mov
cltd
pop
les
test
cmp
xchg
in
push
data16
shll
or
sahf
int3
inc
cmc
je
push
repz
pop
popf
adc
aas
roll
push
cmpsl
movsb
daa
cmc
cmp
push
cltd
add
mov
add
sub
xchg
sub
push
mov
mov
sbb
or
sub
mov
sbb
add
iret
xor
std
clc
or
xchg
hlt
push
mov
mov
cmp
push
mov
iret
aaa
and
scas
xchg
or
add
fs
jae
inc
lret
movsl
jno
mov
in
icebp
mov
imull
mov
inc
or
mov
and
or
mov
push
pop
mov
insb
mov
xchg
adc
adc
jns
jne
jmp
lea
daa
sub
inc
test
divl
iret
jecxz
in
mov
ret
or
inc
push
lods
pop
and
adc
ljmp
sbb
mov
and
sbb
mov
daa
xchg
mov
add
sbb
arpl
xor
popa
push
ja
sub
jbe
jo
mov
xchg
mov
and
add
mov
push
lahf
push
push
pushf
fbstp
ljmp
outsl
xchg
fdivl
popa
xchg
xchg
push
fcmovbe
dec
xchg
dec
mov
popa
xchg
dec
ds
mov
or
dec
sahf
jmp
popa
xchg
dec
mov
popa
xchg
dec
mov
xchg
sbb
iret
sbb
ret
jae
xchg
movsl
cwtl
jle
dec
pop
dec
mov
jnp
aaa
mov
dec
mov
sbb
mov
aam
xor
bound
jecxz
into
roll
stos
xchg
loopne
pop
dec
mov
popa
xchg
out
xchg
dec
mov
popa
push
push
push
inc
cmp
test
cmp
pusha
xchg
dec
push
inc
add
inc
adc
rcl
push
inc
jo
stos
pop
nop
and
jne
add
in
adc
mov
cwtl
ficoml
roll
jae
jbe
inc
es
outsl
cwtl
int
xchg
sbb
fidivrs
sub
mov
mov
ret
stos
outsl
cwtl
int
xchg
notl
xor
cwtl
fcmovb
loopne
xchg
loopne
xchg
mov
or
outsb
pop
xorl
or
cmp
rolb
mov
scas
imul
or
cmp
jbe
outsl
mov
fcompl
jl
and
cmp
jae
cmp
test
or
xor
cmp
jb
fidivl
outsb
xor
mov
rorb
xchg
push
sbb
cltd
dec
mov
insb
loope
hlt
jae
cmp
test
or
and
dec
mov
sbb
jl
insb
loope
hlt
jae
cmp
test
or
ljmp
dec
mov
dec
mov
jmp
or
dec
rorl
popa
xchg
dec
pusha
fcompl
jl
sub
cmp
jae
fmull
xchg
sarl
lcall
ljmp
dec
jbe
dec
mov
bound
lea
push
mov
mov
xchg
fimuls
xor
cwtl
mov
mov
mov
mov
popa
xchg
adc
lea
cmp
xchg
push
je
popa
dec
push
cltd
mov
xchg
ja
iret
or
test
dec
xchg
fmull
or
jle
rcrl
sub
lds
jno
or
fbstp
mov
xchg
sbb
ror
int
or
mov
fildl
mov
add
pop
ja
arpl
jge
ret
shll
ljmp
push
fildll
xchg
mov
shl
iret
dec
cmc
pop
shrb
inc
addr16
add
xchg
inc
xchg
push
aam
daa
fldenv
gs
mov
push
xorb
mov
popf
adc
mov
ljmp
mov
sbb
ret
jne
fcoml
mov
ja
lods
jnp
cld
movsb
push
es
adc
sbb
and
aaa
xchg
stos
push
xor
cmp
push
mov
popa
sub
or
in
dec
mov
ja
cmp
ss
push
mov
imul
fcmovbe
jbe
ss
loop
push
repz
inc
fcompl
pop
sarb
mov
dec
hlt
je
mov
cbtw
and
xchg
push
sbb
pusha
pop
into
sub
lahf
ja
lods
outsb
hlt
out
hlt
popa
dec
outsl
and
es
call
clc
dec
mov
or
mov
jns
sbb
loope
xor
out
pop
or
loop
test
imul
cli
fmull
xchg
stos
cmp
inc
add
rcrb
loopne
outsb
push
aaa
dec
lods
xchg
scas
in
dec
lcall
sub
inc
jns
sbb
push
in
xor
push
inc
stos
aam
cmp
mov
pop
pop
jno
lea
bound
mov
sub
or
imul
xor
iret
ror
bound
pop
sahf
and
jno
and
shll
test
or
xchg
dec
jns
fistl
push
inc
loop
sbb
stos
and
adc
shrl
test
add
imul
roll
ja
lods
sbb
mov
popa
xchg
aas
cmc
test
and
and
dec
punpckhdq
dec
negl
push
out
int3
push
sbb
inc
loopne
dec
jb
push
mov
pushf
bound
inc
mov
push
push
insl
iret
data16
in
scas
jmp
ja
sbb
push
imul
addr16
movsb
fwait
jge
lcall
mov
subl
popf
into
jmp
xchg
in
leave
outsb
mov
xor
xor
dec
fwait
jne
inc
les
or
push
dec
inc
cmc
or
stos
outsb
dec
push
lods
testl
xor
adc
aas
push
xchg
mov
loopne
dec
mov
in
mov
ret
mov
int3
loop
xor
push
cmp
sub
xorl
push
push
and
xor
mov
cmc
and
scas
jno
xchg
add
test
adc
push
loopne
push
out
adc
imul
mov
mov
addr16
jno
and
xchg
out
fstps
mov
aas
cmp
xchg
pop
or
cwtl
mov
stos
jb
cwtl
out
outsb
xchg
jle
es
shrl
xchg
int
insb
iret
stos
sub
xor
jp
pop
sub
dec
cmc
lret
dec
insl
sbb
lahf
fldt
sub
insl
data16
lahf
daa
lahf
popa
pop
out
jno
push
mov
xchg
mov
add
xor
fcmove
shll
inc
xor
int3
nop
xchg
push
stos
loope
cld
aam
cmpsb
push
dec
pusha
adc
lret
lods
sbb
xor
xor
mov
popa
ret
xor
repnz
sub
pop
cmc
xchg
push
rcrb
outsl
outsb
test
out
mov
aam
cmp
cmp
mov
fmull
xor
mov
loope
push
ja
and
inc
scas
repz
lods
sbb
pusha
push
jecxz
jmp
xor
insl
sub
sbb
adc
cmp
cmpsl
imul
xchg
pop
push
pop
sbb
call
idivl
add
jp
ljmp
jl
aam
mov
call
xchg
movsb
mov
adc
mov
xor
and
xchg
jmp
jge
enter
idiv
in
cmpsb
pushf
mull
push
scas
xor
xor
cmp
repnz
repz
es
mov
ret
xchg
popa
inc
repnz
mov
lahf
cmp
fists
fdivs
jb
iret
fisubs
fcmove
in
jmp
movl
ret
mov
repz
or
repnz
imul
fwait
mov
ja
adc
outsl
sarb
sahf
mov
pop
iret
xchg
and
cmp
push
mov
jle
mov
inc
test
rcll
ja
pop
dec
movsl
cld
push
pop
or
cmp
scas
xchg
fstpl
dec
sub
jle
movhps
sub
adc
dec
cmc
insb
cmp
dec
dec
out
mov
xchg
jne
sub
xchg
fs
arpl
push
push
xor
add
inc
fmuls
or
test
sahf
popw
mov
dec
inc
out
cmp
imul
push
movq
or
ljmp
subl
in
cmp
arpl
stc
call
cmpsl
out
out
std
cmp
shl
dec
xor
clc
into
lea
ds
xchg
and
mov
jno
fs
in
inc
lcall
jle
test
mov
jbe
mov
jmp
push
ret
xor
push
mov
popa
jnp
sbb
pusha
add
mov
push
aad
arpl
and
div
jle
lock
push
fisttps
sbbl
cmp
lahf
ret
fistpl
outsb
sbb
cld
outsl
lods
loopne
sahf
mov
mov
and
ret
cmpsb
pop
jae
outsb
aas
sub
adc
cmp
sbb
js
andb
mov
mov
dec
fsubl
test
xchg
adc
lock
inc
or
cmp
jmp
daa
push
testl
xchg
das
inc
push
sbb
dec
rcll
popaw
cld
adc
lock
jo
ficoms
aaa
cmp
cmp
jle
jmp
sbbl
mov
mov
lret
jecxz
flds
jbe
loope
cltd
jp
aas
loop
mov
ss
into
decb
or
pop
jbe
mov
lahf
cltd
add
inc
sub
arpl
icebp
or
scas
jge
push
cmpsb
inc
jbe
aad
push
xchg
cwtl
aas
pop
jbe
inc
mov
loope
pushf
xchg
sbb
cmpsb
cmpsl
adc
add
orl
lods
test
cli
xor
cmpsb
aaa
movsl
xchg
sbb
daa
or
stos
les
out
xchg
insl
dec
add
sahf
push
pushf
mov
cwtl
adc
fnstcw
popa
lods
pushf
mov
mov
push
popf
in
rcll
insl
pop
ds
or
xor
daa
sub
sbb
and
mov
adc
mov
fiaddl
dec
mov
inc
dec
lcall
aad
bnd
mov
loope
xor
ret
mov
popf
add
fmuls
orb
cmp
adc
loope
ja
and
bound
xchg
dec
pop
cmpsl
arpl
ret
bound
sub
test
mov
ljmp
push
loope
cmpsb
lods
fistpll
and
roll
fwait
and
cwtl
pop
addr16
sbb
mov
outsl
jg
fidivrs
call
push
cwtl
fisubs
cltd
call
xchg
mov
imull
cmp
mov
inc
and
js
xor
sbbb
mov
jnp
fisttps
jmp
add
jp
push
mov
bound
xchg
enter
shll
shrb
int
pop
mov
or
and
xor
push
jne
fstpt
pop
ljmp
jle
push
or
pop
mov
adc
cs
mov
inc
fcomps
xchg
xchg
dec
lds
mov
dec
jbe
mov
push
pop
cmpsb
jno
push
adc
fsubl
js
imulb
xor
stos
mov
flds
out
or
cli
mov
sbb
hlt
dec
icebp
push
mov
adc
jbe
dec
imul
js
ss
dec
loop
push
mov
lcall
mov
scas
aad
mov
jmp
inc
out
fwait
xor
inc
jb
mov
push
jg
pop
imul
inc
ljmp
mov
mov
sub
pop
es
adc
lods
adc
mov
bound
xchg
outsb
cli
stc
stos
pop
fistl
xor
int
xchg
popa
inc
sub
mov
add
cmpsl
int3
mov
xchg
pop
in
call
das
inc
dec
lcall
or
mov
cmpsb
cwtl
inc
ds
mov
and
and
adc
push
out
lcall
test
cwtl
sbb
es
dec
cmp
adc
fcomps
ret
mov
add
sti
sti
push
cs
stos
dec
inc
test
repz
aam
cmp
cmp
out
sub
add
xor
imul
cmp
sbb
cmp
or
or
push
adc
cld
ret
shr
xchg
add
fucompp
sub
mov
dec
xor
sti
shlb
push
cmpl
loope
lea
inc
ret
jns
aas
fmuls
xchg
add
push
xchg
inc
ja
es
jmp
ret
mov
xor
jno
mov
mov
insl
cli
repnz
movb
cmp
add
insb
and
js
lahf
cmpsb
ja
mov
sbb
sbb
stos
insl
push
xchg
sub
pop
int
xchg
xchg
push
jge
pop
shlb
lahf
push
add
push
add
mov
mov
adc
xchg
outsl
out
outsb
mov
add
in
xchg
cmc
mov
data16
xchg
inc
rcr
loope
mov
pushf
cld
mov
pop
lahf
imul
nop
or
add
mov
rcr
fwait
cmp
push
jo
out
xor
and
std
int3
lret
imul
jne
lahf
ja
push
arpl
insb
jo
test
mov
subl
mov
in
fsts
mov
xlat
and
xchg
xchg
push
hlt
aaa
stos
and
jae
push
add
outsb
insl
aaa
cltd
cmp
add
fistpl
add
mov
mov
xchg
mov
push
xor
fwait
add
mov
lea
push
jle
into
xor
pop
xchg
mov
enter
mov
push
jle
movsl
jmp
aas
mov
mov
jle
mov
xchg
or
iret
mov
and
mov
aaa
outsl
or
scas
imul
out
in
subb
inc
inc
dec
sarl
sbb
xor
add
rcll
cmpsl
ljmp
mov
cmc
mov
pusha
add
rolb
jl
pop
jmp
subb
ds
popa
pop
in
ror
int
mov
clc
fadd
pusha
cmp
inc
xor
mov
push
imul
jge
outsl
leave
xor
aaa
stc
and
outsl
shr
mov
push
in
mov
or
jmp
fsubp
xorl
mov
je
int
xor
xchg
mov
in
sbb
mov
imul
pop
popf
dec
je
insb
or
cmovo
cmp
jo
int3
test
bound
call
xor
outsb
pop
jbe
sbb
push
mov
imul
cmpsl
ljmp
xchg
jecxz
mov
inc
cmpb
lcall
loope
jnp
mov
jmp
outsb
xlat
sahf
inc
stc
sub
mull
xchg
inc
fsubs
xor
mov
gs
fcom
add
mov
xor
dec
cmpsb
xorb
lods
cmpsb
arpl
movsb
rolb
cmp
jmp
mov
test
jmp
adc
js
sbb
scas
dec
push
insl
enter
mov
and
mov
pusha
rep
xor
mov
inc
jp
outsl
push
add
bound
imul
movsl
xchg
xlat
pusha
jae
adc
inc
rolb
add
cmpsb
sbb
pop
push
movsl
iret
cmpl
sbbb
cmp
cli
mov
push
adc
ficoms
inc
mov
iret
into
inc
or
gs
dec
mov
mov
in
and
mov
ja
inc
xor
jmp
lods
cwtl
or
jp
pop
mov
add
jp
frstor
flds
inc
sub
mov
xor
adc
mov
lods
jl
push
jo
clc
lods
cmp
call
add
aad
ret
add
mov
iret
jge
and
add
fidivrl
add
repz
pop
cmpsl
into
sbb
ret
orb
xchg
mov
adc
mov
add
xchg
push
mov
ss
pop
mov
and
push
jbe
aad
test
bound
add
jmp
mull
dec
fisttpl
lret
xor
loopne
add
lock
cmp
dec
sub
out
add
mov
cmp
or
sub
pop
fs
xor
mov
add
and
push
movups
inc
pop
add
sub
cmc
xor
push
or
mov
lock
sbb
insl
test
cmp
jo
push
rcrb
sub
call
mov
lock
add
or
fadds
pop
or
jle
cs
sbb
push
iret
or
jle
mov
scas
pop
add
xchg
and
sub
mov
xchg
cmc
ret
and
add
sbb
mov
int
mov
outsl
jnp
mov
je
or
fdivr
shll
jmp
inc
adc
sbb
jno
sub
add
push
sarl
mov
sbb
add
add
inc
sub
hlt
jno
mov
mov
movsl
xor
xor
in
mov
xor
inc
fs
ljmp
sbb
cltd
cli
adc
inc
lock
push
hlt
sub
adc
loopne
sbb
call
or
push
xchg
inc
add
arpl
aad
addb
xor
nop
sub
imul
cmp
int3
push
std
arpl
xorl
fsubl
lock
ds
xor
inc
jno
fbld
mov
add
imul
test
clc
stos
cs
cmp
xor
adc
into
or
add
mov
push
sbb
adc
or
adc
and
ret
pop
add
cmc
jb
mov
sub
ljmp
in
aam
add
push
cwtl
fdivs
sub
mov
cwtl
adc
xchg
lea
jecxz
pop
lret
ror
add
pop
int
shrb
or
dec
adc
add
inc
jg
cmp
xchg
fs
jb
mov
bound
xchg
fs
shl
pusha
push
cwtl
shll
mov
adc
mov
mov
jge
shlb
nop
lods
or
and
stos
movsb
ficoml
insl
ljmp
aam
sbb
arpl
push
xchg
ret
call
loopne
or
aad
adc
shl
dec
add
cs
movups
out
dec
test
call
mov
adc
xchg
mov
sbb
and
jmp
cmp
ja
dec
or
mov
push
or
xchg
fiaddl
jbe
push
xor
or
jb
les
rcll
andl
es
inc
push
repnz
xor
sbb
xor
add
and
fiadds
jno
arpl
scas
sbb
les
rorb
push
mov
arpl
and
movsb
ret
adc
pop
jns
test
fldl
add
jecxz
inc
cltd
pushf
adc
xchg
jae
rcrl
mov
cmp
outsb
add
jle
xlat
xor
pop
leave
pushf
or
incl
mov
jns
mov
ljmp
jnp
pop
sbbb
imul
lods
sub
insb
adc
jmp
js
mov
or
xor
aad
and
dec
dec
push
xchg
pop
add
repnz
and
xor
fsub
and
jbe
xlat
idivb
jl
dec
inc
pop
push
nop
sbb
popf
push
push
rcrl
add
fs
insl
stos
scas
dec
js
xor
ret
jo
cmp
lret
test
icebp
add
adc
cs
mov
add
stos
nop
push
cmp
add
or
push
cwtl
shll
mov
adc
sahf
ficoms
inc
jb
add
dec
xchg
dec
mov
push
fistpl
push
ja
push
ret
int3
sub
adcb
mov
add
test
repnz
mov
test
add
pushf
or
ja
jmp
arpl
or
add
js
add
lock
sub
adcl
addb
push
sbb
sbb
int3
mov
adc
push
icebp
adcb
mov
xchg
add
rolb
dec
in
pop
sub
jecxz
cmp
pop
test
ja
xlat
add
mulb
add
dec
xchg
into
add
pop
mov
out
jg
mov
insb
pop
pop
mov
mov
sarl
push
cs
mov
mov
mov
add
fiaddl
jne
xorb
mov
xor
andl
insb
push
inc
divl
cmp
mov
cmp
inc
sub
addl
pop
les
mov
sbb
test
je
add
mov
enter
loopne
add
inc
pusha
pusha
jne
lock
test
fmul
jl
or
ljmp
add
mov
dec
sbb
aam
or
lock
jo
pushf
and
sub
xchg
mov
jle
and
icebp
cli
sbb
ja
inc
lock
mov
or
xor
xchg
rcr
shlb
fiadds
sbb
rorb
mov
add
loopne
xor
sbb
pop
das
gs
or
js
add
ljmp
pusha
push
cwtl
push
xchg
add
hlt
push
cmpsb
xchg
rcrb
negl
pusha
push
mov
es
pop
pusha
cltd
stos
dec
sub
popa
stos
add
add
in
sub
rolb
stc
add
cmp
loopne
adc
dec
mov
or
dec
cmp
add
adc
lods
push
cmp
or
leave
outsb
stos
movl
idivb
inc
jo
je
add
xchg
and
mov
popa
or
call
or
cmpsb
sbb
test
es
add
xor
js
jae
dec
out
cmpsl
add
jns
mov
add
bound
aad
das
and
adc
sbb
push
stc
dec
sbb
jle
dec
mov
dec
mov
cld
mov
adc
add
push
imul
pusha
sub
adc
popa
sbb
mov
sub
jae
outsb
jmp
mov
movsl
adc
mov
mov
das
js
pop
stos
popa
rcl
lret
mov
bswap
add
bound
daa
cmp
in
sub
int3
aas
std
lea
in
aad
push
nop
fldenv
mov
ret
add
jle
lahf
cld
loop
xor
lcall
xchg
add
xor
push
inc
or
push
mov
jmp
lcall
scas
xor
push
fwait
xchg
andb
stc
or
add
jns
push
jnp
cmpsb
inc
xchg
pop
test
pusha
addb
push
or
cmp
add
inc
xchg
xor
jno
lock
or
mov
data16
pusha
inc
and
or
arpl
ds
cmp
testb
push
jmp
adc
push
or
pop
test
mov
aad
test
and
sub
mov
fistpl
sub
addr16
jmp
stos
enter
clc
mov
xchg
inc
xor
or
cmpsl
and
int
inc
push
icebp
adc
sub
adcl
add
and
xchg
mov
add
lea
imull
mov
pop
cmp
aad
cltd
test
xchg
les
push
pop
xor
shll
pushf
call
cs
out
add
jmp
notl
pop
adc
or
add
add
pandn
out
sub
lahf
mov
pushf
sbb
push
dec
push
mov
pop
cmp
xchg
jp
inc
push
adc
gs
jo
lea
xor
xor
jle
outsl
arpl
enter
dec
outsb
inc
aaa
cvtps2pi
setp
fbld
xchg
test
loope
leave
mov
test
mov
fistl
scas
add
fdivrl
bound
std
cmp
xchg
add
je
arpl
push
test
inc
adc
pushf
mov
push
pop
add
bound
daa
sub
push
mov
jmp
pop
pusha
mov
pop
add
jns
xlat
je
test
cmpb
adc
add
jne
lock
mov
pusha
dec
or
sub
fdivrl
ljmp
add
push
sbb
in
xor
inc
inc
fists
and
sub
lds
sbb
mov
xor
in
sbb
xor
lahf
shl
ficoms
dec
mov
out
add
incb
pop
stc
nop
je
add
adc
jl
leave
push
add
ja
jno
or
add
jbe
stc
out
inc
push
mov
loop
xor
in
dec
pop
pop
das
sub
movsl
sbb
shlb
pop
push
js
stos
add
xchg
fcompl
sarb
push
clc
insb
jg
sub
fisubrs
add
inc
test
loope
xchg
and
add
mov
add
cmp
aad
nop
pusha
decl
gs
cs
pop
cmp
mov
mov
adc
and
or
int
xchg
inc
and
sar
cli
push
add
loop
insb
dec
xchg
or
add
or
pusha
ja
push
aad
xchg
test
sarl
jns
jns
sbb
inc
jb
xor
adc
mov
sbb
sbb
add
imulb
aam
icebp
add
add
dec
arpl
test
into
repz
mov
push
mov
dec
pop
hlt
call
mov
sub
aam
mov
mov
inc
test
mov
adc
inc
push
out
in
int3
fdivrl
shll
add
xchg
jecxz
sub
stos
mov
into
sub
adc
pushf
stos
mov
nop
add
ljmp
or
sbb
ds
hlt
popf
mov
jnp
push
or
lock
nop
cwtl
adc
jns
mulb
ret
pop
mov
repz
test
jbe
enter
cmp
pop
mov
or
incb
mov
adc
loope
rolb
cmp
dec
int
pushf
gs
fildl
pusha
dec
push
pushf
popa
push
xchg
mov
les
sub
fadd
in
dec
xchg
and
mov
pop
fwait
sub
add
push
inc
imul
add
orb
xor
out
jne
test
adc
call
xchg
mov
cs
andl
and
dec
dec
cltd
gs
sahf
and
sub
add
push
nop
fwait
or
insb
loopne
mul
dec
push
sbb
add
lahf
inc
pop
dec
ljmp
xchg
jl
rclb
fwait
cs
in
adc
xorb
out
adc
in
lods
nop
push
push
sub
push
add
jge
cmp
jns
shrl
dec
faddl
inc
jne
sub
mov
cmp
lods
cs
shlb
add
mov
mov
addr16
rol
int3
add
add
jge
or
dec
dec
lock
aam
push
cli
inc
and
les
jp
sub
push
sub
and
aad
mov
jns
add
add
cltd
add
dec
jne
lea
xor
loopne
fmuls
jb
sbb
push
les
jne
loopne
cs
sub
xor
or
and
mov
xchg
add
push
scas
xor
add
shll
sub
call
or
sub
sbb
inc
xchg
and
jb
and
xor
push
jle
test
sbb
xor
inc
loop
xor
je
imul
jno
adc
shrb
push
cmp
push
add
push
ss
into
arpl
dec
sbb
lret
or
add
dec
add
hlt
inc
sahf
add
jbe
dec
xchg
movsb
cltd
lock
pop
mov
add
cwtl
aad
cmp
add
fsubrs
fimuls
xchg
sub
sbb
andl
scas
mov
xchg
imul
shr
fidivrl
pop
xor
fwait
icebp
jae
bound
mov
cmpsl
movl
push
adc
shrb
mov
sub
add
lock
ja
mov
add
mov
pop
loop
movb
mov
xchg
add
addr16
daa
xor
inc
nop
add
pop
pop
stos
xchg
shll
mov
nop
dec
add
cwtl
add
mov
pop
cmpl
cmp
mov
jg
sub
cwtl
xchg
adc
jge
cmp
xchg
mov
das
sbbb
push
into
and
aad
rcrb
jb
mov
jbe
cmp
movsb
fnsave
dec
dec
adc
push
sub
dec
add
fimuls
loope
dec
les
lods
fcomps
das
int
xchg
xor
sub
movsb
push
fs
sbb
fdivl
mov
pop
mov
dec
movsb
ja
rcll
lret
add
and
test
add
outsb
gs
js
adc
lds
nop
and
leave
mov
add
adc
scas
ret
test
arpl
or
ret
add
pop
cltd
pop
or
sbb
dec
mov
pushf
dec
dec
mov
mov
faddl
mov
or
sbb
into
and
push
pushw
xchg
cmpl
push
adc
adc
test
enter
out
mov
adc
inc
add
lock
jmp
dec
test
movsb
cmp
lcall
xor
pop
sbb
mov
mov
out
inc
adc
ja
hlt
outsl
add
fwait
arpl
pop
mov
mov
add
enter
arpl
xchg
mulb
fcoms
add
jmp
out
aas
or
pop
xchg
sbb
aas
fld
cld
xchg
pushf
aad
clc
std
ljmp
sub
dec
test
daa
pop
and
into
leave
sbb
xchg
ljmp
mov
mov
add
repz
call
orl
in
pop
clc
adc
and
imul
sbb
add
das
repz
jmp
andb
fdivs
jns
xchg
nop
js
jecxz
add
mov
mov
popa
add
adc
ljmp
imul
push
dec
mov
cld
fsts
or
add
xor
test
xor
jno
xchg
xorb
xor
or
fsubl
jnp
ret
or
in
or
pushl
clc
cmp
inc
cmp
mov
sub
inc
or
pushf
loopne
imul
add
shll
and
add
sub
leave
mov
mov
in
arpl
xor
or
mov
pop
movsw
add
insb
pop
pop
je
sbb
inc
mov
int3
scas
adc
sub
mov
mov
xchg
cmp
mov
aas
adc
divb
jl
mov
test
adc
mov
int3
rolb
mov
fidivl
push
repz
gs
sbb
pop
adc
shll
or
cmp
add
push
jno
sub
inc
es
and
ret
dec
lret
push
enter
das
arpl
clc
flds
je
test
mov
jl
adc
loopw
les
cwtl
pop
and
xchg
clc
cmp
mov
imul
push
adc
mov
sahf
js
xor
ret
jns
test
cmpsl
sbb
jl
prefetch
je
outsl
mov
into
sbb
mov
sarl
lahf
addb
dec
mov
mov
inc
in
cpuid
jne
inc
rolb
mulb
imul
loope
mov
mov
mov
xchg
mov
dec
xor
mov
jno
dec
insb
cwtl
push
ret
int3
cmp
ds
cmp
ret
and
xor
xlat
xchg
mov
dec
loope
pushf
test
mov
dec
es
jecxz
jl
pop
pop
or
adc
sub
jo
addl
xchg
je
mov
testl
lea
fwait
inc
ds
sub
pop
xor
ja
xor
mov
cld
mov
out
lods
loope
fadds
xor
sub
pop
add
adc
mov
fiadds
mov
lock
inc
loopne
hlt
mov
lods
jne,pn
cltd
decl
leave
je
loopne
jo
fildl
negl
or
add
adc
aas
sbb
movsl
pop
add
add
cwtl
pop
mov
cld
ss
mov
call
mov
in
fidivrl
add
mov
add
rolb
inc
cmp
push
mov
sbb
jp
nop
or
fwait
addr16
or
add
xchg
xor
and
sub
pop
or
add
lret
sub
dec
push
jmp
imul
in
pushf
push
nop
sub
lcall
sub
push
cmp
faddl
and
mov
test
push
roll
inc
lcall
add
inc
mov
mov
cmp
mov
in
sub
ljmp
mov
int3
int
call
mov
add
dec
out
mov
insl
or
in
lods
das
dec
cmpl
in
mov
fimull
das
xchg
or
push
cmpl
xor
jno
cmp
jp
push
shlb
add
rorb
or
mov
sub
and
in
mov
or
pop
or
pop
cmpl
mov
sub
lock
add
xor
lock
nop
mov
mov
add
je
mov
sub
jmp
mov
in
popa
mov
mov
jl
or
out
xor
dec
call
add
mov
push
add
or
loop
fiaddl
mov
jne
mov
hlt
fs
movsb
out
fdivr
xor
and
xor
test
movsb
add
add
xchg
add
inc
pop
adc
cmp
dec
sbb
dec
les
or
movsb
add
jl
fnstenv
or
add
in
push
orl
pop
add
dec
mov
jo
cmp
les
add
xchg
lea
xor
sbb
sub
mov
add
in
call
fstps
mov
adc
lds
jg
cwtl
cld
inc
ljmp
in
in
pusha
fabs
int
or
mov
leave
push
lods
add
sar
add
mov
add
adc
pop
push
adc
sahf
cld
sbbb
cld
insl
inc
daa
add
repz
inc
clc
dec
ja
push
push
mov
lock
and
xchg
cmp
sarb
pop
mov
pop
movsl
push
mov
xchg
pushf
das
in
push
sarb
movsl
and
js
jne
dec
add
xor
and
fwait
cmpsb
sub
dec
test
cmp
pop
imul
js
sbb
fs
lea
mov
xchg
sarb
mov
fdivrs
add
push
fnsetpm(287
hlt
xchg
cmp
mov
rclb
dec
add
add
push
or
inc
xchg
cmp
rolb
and
aas
cld
adc
roll
or
mov
cmpsl
and
jbe
jmp
xor
mov
push
inc
jno
and
push
popa
ljmp
mov
pushf
cmp
mov
sbb
add
jmp
jne
movsl
jge
jbe
out
es
jae
mov
xchg
push
addb
lea
mov
push
jae
jo
mov
fcompl
lea
adcl
mov
add
clc
mov
sahf
rol
mov
mov
adc
nop
add
clc
push
les
xlat
push
ja
nop
les
and
or
movsb
andl
xor
jne
add
push
inc
jne
add
jl
adc
mov
ja
xchg
inc
mov
pop
cmp
orb
jl
jp
or
clc
or
nop
or
into
divl
add
adc
sub
cmp
push
arpl
in
pop
cmp
add
inc
cmp
xchg
sub
or
xlat
add
pop
into
test
test
add
fcmovbe
lret
sub
mov
adc
lods
cmp
inc
and
cmovbe
loopne
mov
adc
cwtl
mov
jl
nop
cmp
pusha
test
enter
out
leave
jo
aaa
or
out
daa
lcall
insb
or
js
testb
dec
adc
iret
mov
add
inc
fs
and
loopne
mov
sarb
adc
sub
push
sub
fmuls
xchg
and
xchg
leave
xor
lock
inc
in
xchg
mov
test
clc
movsl
mov
ja
cmp
push
or
pop
mov
out
sbb
pusha
out
mov
push
pop
xchg
es
and
movsl
push
pushf
add
sbb
mov
jp
push
das
xor
out
or
sub
mov
inc
cmp
mov
test
pop
or
fistpl
adc
divb
fsubrs
mov
sbb
fstpl
xor
hlt
mov
add
fbld
add
pushf
insb
loope
fcoms
pop
mov
inc
shrb
in
sbb
out
mov
pop
add
and
jne
xor
mov
cli
mov
cwtl
aas
xor
add
sub
fnsave
pop
dec
test
push
jg
add
test
cli
test
pushf
imul
lahf
scas
pop
sbb
jl
sub
popf
add
repnz
jmp
mov
leave
push
lock
int
mov
sbb
and
ficoms
into
dec
loopne
and
fwait
stc
jae
add
mov
pop
jb
jp
or
adc
ljmp
sbb
mov
inc
xorl
sar
cmpb
mov
xor
and
push
movsb
pop
jae
out
incl
add
mov
cmp
mov
lds
sti
outsb
mov
dec
and
add
mov
adc
xor
adc
push
insb
add
and
adc
add
xor
leave
add
sub
gs
iret
cmp
add
ret
scas
rolb
add
or
jbe
nop
hlt
shrb
or
mov
lds
push
pusha
sub
adc
repnz
adc
mov
sub
push
hlt
xchg
js
cwtl
and
imul
and
jmp
jno
in
cmp
fisubs
ret
shll
popf
push
scas
in
add
or
gs
insb
lods
js
adc
insl
insb
or
mov
mov
mov
or
test
nop
sub
xor
cmp
xlat
ljmp
pop
bound
mov
mov
dec
pop
or
fdivrs
and
inc
and
xorl
bound
int
add
sahf
das
add
mov
pusha
fucomi
cmp
mov
mov
and
xchg
pop
das
mov
data16
add
jecxz
mov
lret
in
out
and
andb
add
push
dec
cltd
cmpsl
sahf
fadds
mov
mov
mov
aas
shlb
push
test
pandn
mov
or
imul
iret
mov
jb
imul
cs
mov
in
mov
inc
push
sub
or
call
insl
loopne
push
mov
xor
lock
mov
pop
pop
nop
mov
inc
orb
scas
mov
mov
inc
mov
test
das
push
test
in
sarl
adc
push
xor
ja
mov
sahf
rclb
push
mov
sbb
enter
adc
pop
das
or
sbb
movl
jo
rclb
add
xchg
testl
pusha
sub
inc
pop
das
mov
adc
fcoms
pop
push
mov
andl
mov
jge
and
test
sbb
cld
int3
mov
push
in
add
inc
cwtl
xchg
test
aas
mov
and
add
ret
mov
roll
sbb
adc
and
movsl
xor
js
clc
sub
jo
adc
adc
notb
inc
sbb
cmpsl
adc
inc
add
xor
outsb
xlat
mov
or
add
mov
pushf
je
inc
insb
and
push
arpl
mov
sahf
and
and
rdtsc
lret
scas
data16
dec
icebp
in
in
adc
pop
dec
or
je
mov
mov
mov
xor
cltd
sub
imul
ss
bound
inc
sbb
jnp
sub
mov
xchg
jno
mov
ret
jo
clc
pop
push
testl
mov
add
orb
or
cli
clc
mov
and
out
pop
cwtl
mov
sbb
cwtl
sub
and
or
xor
mov
lret
call
movsb
mov
adc
in
inc
rolb
and
pop
cmpsl
insb
je
repnz
xor
jo
xor
mov
aas
rcrb
adc
enter
subl
inc
or
sub
xor
test
shlb
dec
mov
rorb
test
or
inc
insb
in
popa
cmp
dec
fsts
test
add
shr
add
xor
xor
xchg
xchg
ljmp
dec
bound
add
push
mull
cmp
js
daa
call
stos
xor
and
push
dec
dec
add
jl
iret
enter
or
jle
rolb
dec
stc
dec
test
lods
nop
mov
mov
inc
dec
lcall
sub
xchg
shrb
and
or
js
and
cld
shl
fld
cmp
fs
sbb
mov
out
ret
repz
cmpb
cwtl
fs
sub
inc
cs
ljmp
push
sbb
push
xor
gs
push
dec
dec
or
sbb
pushf
push
mov
jno,pt
cmpsl
adc
or
jae
dec
or
movsl
mov
add
stos
jnp
xchg
and
sbb
cld
lods
add
lods
pop
sub
pop
xchg
xchg
push
xchg
or
aas
or
arpl
pop
sub
and
daa
imul
xchg
clc
fsts
add
mov
les
jecxz
jl
dec
xor
dec
loope
jg
mov
sub
aaa
je
inc
lods
imul
add
cmp
stos
les
outsb
inc
add
int
pusha
mov
and
push
mov
mov
fstps
mov
movsb
lods
and
orl
movsl
lods
mov
rorb
rcr
call
xchg
mov
into
mov
repz
add
arpl
or
mov
daa
ret
pop
mov
nop
pop
push
aaa
mov
gs
xchg
mov
pusha
xor
pop
add
adc
add
mov
cmp
imul
fstpl
clc
ror
aas
add
xchg
xchg
cmp
mov
imull
or
add
test
je
push
adc
ljmp
fs
dec
rorb
mov
adc
leave
or
sahf
enter
cmpsb
xor
push
call
pushf
adc
jne
jns
adc
pop
hlt
inc
xchg
rclb
and
gs
push
js
aas
jl
mov
into
clc
mov
hlt
nop
xchg
loope
xchg
orb
fbld
enter
fwait
add
lods
in
xchg
sbb
pusha
jo
sahf
or
or
push
cmp
mov
jnp
xchg
cmp
clc
and
cwtl
enter
xlat
out
nop
add
outsb
jg
hlt
cwtl
scas
lea
mov
enter
and
jno
fistpll
add
xor
cmp
shrb
hlt
cmp
aad
imul
lock
cmpsb
popf
or
jnp
push
mov
in
imul
popf
adc
cmp
mov
pop
or
or
ljmp
inc
or
aam
mov
xorb
cltd
cmp
add
pop
mov
adc
inc
es
lret
insb
int3
nop
shlb
mov
adc
adc
test
js
adc
xor
gs
jge
inc
popa
loope
and
dec
rclb
mov
mov
mov
loopne
cwtl
push
sbb
cwtl
pop
pop
push
xor
cmp
add
test
adcb
mov
add
push
add
or
ret
mov
pop
cmp
dec
jb
cwtl
xor
adc
aam
daa
mov
shl
adcl
popa
arpl
add
dec
add
or
xor
cmp
fidivrs
pusha
je
push
int3
or
mov
push
popa
rolb
mov
inc
cwtl
fiadds
enter
jge
and
lock
fst
ds
int
xor
add
arpl
inc
cmp
test
push
imul
adc
pop
add
ss
repz
push
xor
pop
push
icebp
xor
cmp
shll
jecxz
xorb
mov
sub
mov
sub
xchg
adc
insb
cs
sbb
or
cmp
sub
jnp
mov
sbb
jb
out
in
lods
add
mov
mov
jecxz
in
sbb
or
add
fldl
sub
jl
inc
int
cs
lods
test
fcoml
or
dec
inc
jno
push
and
xchg
xor
outsb
test
repz
pop
pop
into
add
mov
xor
xor
inc
dec
mov
call
ret
popa
cmp
xor
clc
aaa
test
cmp
test
mov
mov
lea
pop
and
mov
jp
dec
dec
push
jo
cmp
pop
xor
mov
cmp
mov
cmp
add
data16
cmp
or
stos
fs
aad
in
add
mov
andb
dec
sub
pusha
lock
or
adc
fsubrs
adc
xor
or
lea
outsl
daa
or
sbb
mov
out
mov
popf
inc
sbb
sbb
mov
not
mov
push
inc
or
mov
or
dec
cmp
das
loopne
or
xor
in
jmp
ret
popf
adc
and
pusha
sahf
or
sbb
stc
pop
adc
pop
mov
adcl
or
bnd
and
push
add
sbb
sub
or
or
aam
fstpt
imul
add
and
or
xchg
nop
push
xchg
mov
jo
dec
sbb
cwtl
and
gs
addl
or
fbld
and
lahf
hlt
xor
adcl
movsb
or
mov
jns
or
je
arpl
adc
insl
adc
je
cs
and
in
rol
adc
sub
or
dec
cmp
arpl
or
push
and
xchg
stos
mov
rcrl
jb
sbb
insl
les
push
mov
sbb
adc
dec
or
stc
sbb
xlat
inc
or
mov
or
mov
insb
xchg
inc
pop
jl
js
les
popl
mov
test
js
inc
push
mov
xor
or
xchg
sbb
sbb
pop
data16
inc
pop
xor
or
ret
inc
nop
outsb
xchg
push
xor
fwait
and
xchg
roll
dec
add
and
rclb
xor
pop
mov
push
shlb
aad
lahf
bound
sub
adc
mov
jmp
sub
dec
sbb
or
xchg
inc
data16
pusha
mov
sbb
shlb
in
dec
cld
cld
pop
leave
adc
xor
sbb
into
adc
cmp
ljmp
aad
lahf
sbb
sbb
int
xlat
cmp
popa
scas
data16
push
int3
add
push
ret
add
xor
rcr
lds
mov
sub
andl
inc
nop
xor
int
add
sbb
lret
jne
sbb
push
call
fisubs
je
aaa
cmp
roll
xchg
and
xchg
lahf
inc
and
mov
fnsave
shlb
outsb
test
jle
push
inc
fistl
cmp
push
xchg
mov
into
xor
movsl
js
adc
push
insb
lods
push
add
shl
xchg
call
orb
pop
dec
xor
cmp
shlb
jle
xor
adc
xchg
ret
push
cwtl
rol
jmp
xchg
or
hlt
lods
mov
pusha
into
pop
and
das
cmp
sbb
xchg
adc
adc
dec
icebp
pop
call
dec
xchg
push
add
mov
lds
roll
push
gs
sbb
icebp
mov
out
loopne
pop
ret
adc
cmp
inc
or
fsubl
int3
inc
aam
in
push
pop
in
cmp
fadds
add
out
lods
aas
inc
mov
and
nop
dec
adcb
add
out
pop
and
or
sbb
out
mov
sub
inc
mov
int3
dec
push
xchg
mov
cmp
rolb
or
pop
fildl
push
mov
inc
clc
iret
add
mov
inc
lahf
push
xor
cmp
sbbl
inc
sarb
sbb
pop
push
movsb
push
test
test
or
mov
push
mov
cmp
adcl
adc
mov
or
aam
test
push
push
jmp
adc
movntps
push
cltd
movups
inc
fs
mov
cs
pusha
pop
into
in
mov
stos
mov
repz
ds
dec
andb
cs
insl
int3
inc
xchg
cmp
xor
enter
xor
and
loopne
adc
loop
nop
popa
dec
xor
dec
mov
inc
mov
sub
push
mov
xor
fisttps
xchg
nop
rorb
fisttpll
cs
add
xor
xlat
lret
xor
inc
in
daa
arpl
push
dec
aas
pop
pop
into
rcrb
cmp
inc
cld
sub
fsubrl
push
and
add
adc
cmc
inc
pusha
mov
out
je
test
mov
bound
into
fwait
nop
sbb
cs
jno
push
adc
ds
test
inc
mov
adc
xor
mov
loopne
push
sub
adc
daa
xor
lds
xor
mov
mov
add
sub
icebp
add
add
inc
cmp
mov
out
add
adc
cmc
aam
into
sbb
lret
lods
mov
jle
pop
push
rorb
push
test
push
mov
jns
adc
not
ficoms
das
into
mov
je
jg
ljmp
aas
cmp
mov
ror
mov
mov
jb
inc
in
fmuls
in
jns
add
adc
aam
jmp
and
jl
add
jae
push
jns
out
and
jmp
mov
adc
aas
sti
cs
insb
test
mov
aam
push
fmuls
daa
fldl
out
sbb
add
sbb
fdivs
test
lock
fiadds
push
jb
sbb
orb
test
cwtl
mov
or
inc
icebp
dec
add
or
dec
push
adc
add
stos
mov
xor
inc
filds
dec
pop
add
bnd
push
dec
jbe
xlat
bound
shl
and
test
enter
sub
mov
push
pusha
adc
add
call
cltd
or
mov
xchg
xor
push
inc
bound
jge
call
loop
sti
ret
inc
fs
in
push
mov
add
mov
add
add
jb
push
call
ss
stos
sub
adcl
fs
or
jb
and
cmpb
divl
mov
sbb
xor
les
inc
bound
add
icebp
pop
add
cwtl
xchg
xchg
push
or
roll
arpl
aas
rcrl
test
jb
push
cmp
sbb
or
push
adc
pop
sub
in
adc
out
push
xchg
pop
test
and
push
inc
xor
mov
xor
mov
add
mov
jmp
cs
add
into
sub
dec
sub
mov
xchg
les
cmp
andb
repnz
imul
xchg
in
add
push
jno
rorb
mov
add
lock
repnz
xor
mov
xchg
xchg
jns
xlat
dec
movb
rcll
inc
out
cmpb
cmp
icebp
jo
xchg
sub
mov
sub
cmp
test
test
shrb
or
pusha
mov
in
cmp
inc
rcr
rcr
add
lret
mov
imul
arpl
cs
xchg
fcoms
mov
aam
arpl
xchg
outsb
sbbl
mov
lock
into
inc
mov
jo
push
dec
dec
hlt
in
inc
pop
fistpll
or
jl
pop
dec
adc
sbb
inc
fcmovu
icebp
ffree
in
out
inc
mov
dec
pop
sbb
dec
inc
decl
mov
adc
inc
xor
into
or
xor
rcrl
xorb
ret
daa
sub
dec
pop
lret
pop
dec
pusha
sbb
fmuls
jbe
and
scas
xor
mov
lcall
ljmp
stos
xor
mov
add
jae
push
dec
xchg
test
push
adc
add
add
sub
push
add
mov
xlat
sbb
movsl
mov
adc
xchg
leave
xor
inc
stc
fldenv
or
jns
shlb
loopne
in
jmp
mov
icebp
push
aam
mov
xlat
add
ficoms
adc
add
xor
outsb
gs
fistl
scas
mov
xchg
inc
call
enter
cmp
and
mov
cmp
repnz
adc
dec
fnstsw
add
popf
xchg
test
add
outsb
xor
xor
movsl
mov
jecxz
jno
add
cwtl
jae
pop
or
inc
add
into
jne
sub
rcrb
insb
xchg
or
test
push
add
sub
sbb
mov
cmp
leave
mov
sbbl
hlt
sub
test
mov
ror
cmp
or
mov
dec
mov
and
xor
ret
mov
adc
nop
jnp
cltd
das
push
push
pcmpgtd
or
or
or
stc
xor
addb
add
mov
xor
movsb
arpl
subb
sahf
dec
push
add
sbb
pop
out
sub
add
mov
xchg
dec
in
shlb
adc
je
and
lahf
jb
jmp
jecxz
aas
fldenv
sarl
push
insb
add
mov
add
clc
int3
clc
push
push
clc
push
pusha
cwtl
inc
and
insb
xor
setae
mov
jns
js
push
arpl
push
stos
lcall
inc
jp
imul
aam
ja
or
iret
jb
add
pusha
pushf
dec
nop
dec
jg
xchg
xchg
fwait
pop
dec
and
adc
fstpt
dec
jae
fs
mov
fmuls
mov
xchg
dec
push
ss
dec
add
adc
pop
jl
and
sbb
add
mov
das
and
cmp
out
push
mov
adc
aam
incl
rorb
fists
inc
mov
push
pop
and
cmp
mov
xor
xor
jl
hlt
mov
pop
push
inc
xor
and
out
push
gs
adc
ret
clc
mov
dec
sbb
pusha
insb
inc
mov
or
mov
or
push
mov
psubb
shrb
es
adc
or
jecxz
cmp
std
mov
call
push
in
fmul
jns
push
jge
push
call
push
insl
test
movsb
mov
aam
mov
jb
lret
into
test
cmpsl
lret
add
sub
arpl
lods
pop
shrl
into
movsl
cmp
lahf
add
mov
ljmp
daa
adc
jecxz
js
ret
add
cmc
mov
adc
data16
xor
sbbl
into
scas
cmp
and
bound
sbb
adc
mov
mov
shlb
mov
fisttps
adcl
fmull
insb
scas
push
data16
mov
or
add
inc
jl
sbb
and
dec
bound
inc
adc
jb
les
clc
jp
fstpl
adc
lcall
arpl
jl
adc
data16
push
xchg
aaa
add
or
push
shrb
rolb
clc
ror
cmp
fs
into
add
push
or
andb
xchg
into
sub
or
add
adc
popl
ja
fstps
cli
or
adc
mov
sub
add
xor
stos
jmp
mov
or
into
ret
pop
js,pt
or
filds
mov
mov
add
into
add
sub
int
or
loop
ret
and
jg
pusha
cwtl
push
adc
inc
into
rclb
test
mov
nop
fsts
pushf
imul
push
mov
and
adc
adc
mov
jmp
cmp
gs
nop
je
pusha
out
nop
pushf
push
mov
std
cmp
lods
push
push
adc
cmp
add
std
hlt
pusha
movsb
pop
xchg
adc
roll
cmp
ret
out
je
or
jmp
add
sbb
mov
rcrb
sub
jl
lods
dec
and
mov
add
fisubrl
ss
sbb
jl
fnstsw
test
fsubrp
mov
loop
add
push
adc
xchg
sbb
or
cwtl
or
push
mov
gs
or
push
sbb
stos
cmpsb
and
or
add
lods
cltd
lock
in
imul
jp
add
je
adc
push
inc
orb
push
and
dec
add
adc
mov
leave
ret
push
into
sub
adc
add
lret
addr16
sub
add
or
imul
push
orl
hlt
ror
or
dec
andb
xor
fwait
sbb
cwtl
xor
dec
stc
movsl
push
pop
mov
mov
arpl
xchg
jl
push
jo
jge
push
inc
movsb
scas
mov
adc
in
cmp
adcb
rol
call
jne
xchg
test
leave
bound
sub
sub
lods
cmp
ret
adc
enter
add
dec
ja
mov
scas
loopne
xor
xchg
js,pn
and
bound
sbb
lods
push
add
into
in
pusha
aas
nop
mov
sbb
in
shlb
mov
enter
inc
push
sbb
pop
adc
mov
je
loope
clc
into
rorb
mov
inc
js
adc
push
jo
les
in
pop
popf
add
push
dec
jb
fstpt
jo
xchg
cmp
aad
cmc
and
mov
add
les
and
push
mov
adc
mov
cltd
faddl
push
push
arpl
gs
cmp
fstl
mov
call
dec
popa
test
insb
inc
lock
add
push
rcrb
mov
les
mov
and
pop
imul
and
inc
sbb
test
es
sti
and
xchg
mov
test
adc
imul
add
inc
in
adc
nop
adc
pop
rorl
mov
push
jo
push
add
adc
jle
es
lock
or
or
movsb
xchg
push
jg
mov
cmpsb
and
sub
sbb
test
call
mov
mov
fisubl
fcoml
pop
add
jno
push
push
sub
fists
int3
dec
lock
add
add
push
sbbb
cmp
xor
inc
and
adc
in
xor
repz
rcl
lds
movups
lods
jbe
lmsw
pop
mov
fsubl
inc
aam
add
imul
jmp
adc
mov
push
js
cwtl
or
cwtl
dec
or
rcll
adc
push
int3
adc
lock
test
or
stos
add
cmpsl
xchg
inc
shrl
in
lods
jb
fildl
push
stc
push
test
or
lds
adc
arpl
insl
pop
sbb
xchg
xor
or
ror
fildl
mov
add
inc
jno
adc
mov
sub
or
and
adc
sbb
and
and
or
xchg
fsubrs
or
cmp
jg
pop
cli
inc
dec
pop
push
aas
imul
add
jo
mov
push
ret
adc
int3
add
jmp
movsb
add
dec
pop
add
push
lock
add
pop
mov
in
jo
aad
add
jbe
repz
xchg
or
lret
and
dec
ret
mov
aad
fiaddl
fstl
cs
mov
cmp
ror
dec
cmpsl
cmp
inc
shll
xchg
jb
mov
call
sub
loop
pop
sub
negb
fdiv
adc
mov
das
lods
cmp
pop
insl
gs
xchg
jge
nop
pop
into
negb
push
orl
imul
loopne
push
in
imul
jl
adc
adc
popf
loopne
push
push
add
lods
into
sbb
test
pop
push
lods
sub
sbb
xor
push
ljmp
cmp
push
imul
cmpl
mov
movsl
dec
push
lds
sub
and
push
lock
xchg
push
pop
or
xchg
adc
adc
push
rclw
sub
or
std
mov
jle
into
pop
add
and
cli
imul
adc
dec
or
sbb
into
sub
adc
es
mov
pusha
in
jmp
adc
mov
inc
fcomps
enter
xor
cmp
cld
adc
roll
mov
sub
or
xor
pusha
bound
bound
sub
or
pminub
ds
xchg
sub
hlt
dec
and
ret
xor
scas
repnz
add
mov
cmp
lods
add
cmpsl
int
sub
add
cs
pop
hlt
push
insb
dec
and
add
test
into
imul
pop
mov
fwait
decl
pop
sub
or
jp
xchg
push
add
clc
fsubrl
jae
dec
and
jl
xor
in
xchg
xor
es
push
call
adc
push
rcr
mov
pushf
hlt
cmpsb
adcb
call
imul
xchg
mov
inc
add
cmp
mov
adc
xlat
xor
mov
dec
loop
push
adc
cwtl
jne
adc
shrl
daa
test
rolb
ds
les
dec
sub
sbb
push
psubsb
inc
bound
or
inc
sbb
mov
mov
add
or
out
shl
lea
bound
or
arpl
inc
adc
push
cwtl
rorl
push
mov
les
push
mov
movsb
pop
or
add
mov
mov
call
xchg
lret
aam
adcl
or
push
testb
mov
pusha
sub
xchg
xchg
loopne
push
pop
repz
inc
sbb
mov
add
leave
xchg
and
mov
addr16
sahf
add
xor
into
and
mov
ficomps
loopne
jp
dec
add
mov
into
xor
call
mov
push
movsl
lret
and
push
in
mov
sbb
loopne
mov
and
add
jl
adc
aad
adc
xor
cli
add
dec
ret
xchg
push
insb
idivl
test
jge
push
jl
xor
js
add
or
push
nop
jbe
adc
xor
int3
adc
pop
cmp
inc
or
cltd
pop
sub
jno
aas
fists
jo
push
mov
add
pop
or
fs
push
aam
incb
sub
cld
pushf
popa
cli
loopne
adc
lcall
sub
lods
add
add
js
sub
jns
leave
xor
mov
xorb
and
aad
inc
arpl
cmp
loopne
addr16
sub
into
in
add
call
xor
and
xchg
call
adc
repz
pop
fistpll
fwait
add
dec
enter
xor
lret
and
cmp
inc
jle
out
mov
inc
dec
arpl
pop
cmp
add
mov
xor
into
jne
cwtl
cmpsl
int3
add
call
les
cmp
and
popw
lock
gs
inc
test
ja
clc
push
add
cmpl
jo
insb
push
cmp
push
into
fld
xor
jle
push
add
pop
inc
inc
int3
fmul
xor
es
jl
dec
mov
pop
sub
les
pop
mov
dec
sarl
dec
push
inc
add
and
inc
add
add
mov
test
pop
jae
mov
sub
sub
outsb
test
cmpsb
hlt
nop
cmpsl
add
ficoml
rolb
ds
add
fiaddl
cmpsb
lcall
sahf
add
sub
pop
push
cmp
jge
loopne
or
sbb
sbb
icebp
push
sub
push
xor
daa
sub
int3
bound
xlat
cmp
and
inc
pop
orl
ss
add
mov
push
imulb
repnz
js
mov
xor
daa
les
cmp
mov
adc
fidivl
cmp
add
cs
out
insl
fwait
dec
add
xor
push
lcall
push
jmp
shrl
mov
sub
rorb
mov
cwtl
fisttpl
sbb
cli
push
mov
adc
or
push
ret
fcoml
add
jge
jo
push
push
ret
add
movsl
mov
js
add
insl
sub
dec
xor
push
pop
inc
cmp
add
inc
add
push
pusha
mov
pop
lss
nop
xor
inc
daa
mov
xchg
xchg
mov
into
mov
pop
cltd
add
rcll
add
aaa
dec
jle
test
mov
scas
adc
and
push
jno
dec
cwtl
pushf
outsl
in
add
adc
imul
dec
mov
xchg
cwtl
test
sahf
adc
test
pop
push
push
dec
adc
dec
in
push
pusha
push
sub
adc
jnp
cmp
mov
subb
sbb
notb
ret
nop
std
and
movsl
and
mov
and
push
inc
enter
cld
dec
mov
mov
inc
jl
or
aaa
or
sub
add
xchg
jae
jbe
cmp
xor
xor
add
cwtl
add
sbb
adc
add
lahf
repnz
add
adc
insb
xor
xchg
adc
add
lret
xchg
mov
inc
or
scas
sti
aas
inc
cld
jmp
sub
shlb
pusha
sbbb
xchg
rolb
sbb
aas
dec
or
or
push
and
insb
add
cmp
or
in
int3
mov
add
dec
icebp
add
mov
cmp
cmpsb
xor
mov
push
sbb
dec
shr
scas
dec
sahf
sbb
loopne
cmp
push
test
mov
jo
mov
adc
out
and
jg
add
pop
push
fsubl
js,pn
push
cmpsl
jne
push
mov
faddl
jbe
jmp
loopne
pop
pusha
xorb
cs
adc
pusha
sub
adc
mov
enter
add
outsb
jae
movl
and
mov
pop
arpl
mov
fcmovb
loopne
lock
mov
orl
sub
ret
lcall
jb
in
mov
or
jl
cwtl
xor
in
push
adc
fs
pop
jnp
cmp
lock
roll
and
ljmp
jge
add
add
dec
mov
and
push
adc
sbb
add
pop
dec
xchg
push
pop
pusha
push
mov
rcrl
push
inc
add
hlt
movsb
lret
cld
iret
sti
pop
pop
cmp
push
add
sbb
stos
pushf
ljmp
ret
sbb
and
sub
lahf
add
in
mov
andl
cltd
cmp
and
in
xchg
pop
fsubrl
mov
pop
inc
roll
knotb
or
dec
neg
or
sbbb
sbb
sbb
stos
fmull
fiaddl
xchg
cmc
ret
jne
add
mov
out
cmp
nop
add
cmpb
rcrb
dec
inc
movsl
pop
lods
mov
pop
inc
out
mov
or
jbe
imul
lret
aad
inc
xor
rolb
xchg
gs
or
cmp
sub
movsl
icebp
mov
xchg
jbe
dec
inc
imul
push
fisubrl
imul
std
shlb
pop
jl
xor
mov
icebp
sbb
lret
jnp
or
ja
int3
adc
cmpsb
fisttpll
mov
push
xchg
lods
subb
pop
inc
lret
int
xchg
and
movsb
or
or
js
xchg
push
dec
dec
sub
mov
push
dec
ljmp
or
movsl
lcall
js
orl
mov
sub
jnp
push
add
imul
ss
adc
popa
stos
mov
dec
scas
bound
adc
jl
push
jno
cmpb
add
lods
jge
movsl
and
jns
js
ds
add
cmpsl
mov
adc
jge
add
cmp
jl
pop
cmpsb
movsb
adc
xchg
inc
mov
push
les
rorb
cmpsb
jne
ds
xor
mov
xchg
mov
push
push
adc
pusha
xchg
cwtl
mov
dec
sbb
jp
repz
add
ret
rorb
cmpsb
dec
add
and
jno
iret
sbb
jb
dec
test
xor
clc
push
imul
lods
mov
push
dec
push
xor
dec
and
and
sub
sbb
movsl
mov
sti
xchg
ja
add
jle
xchg
mov
and
iret
repz
add
bound
mov
dec
inc
cmp
andl
sahf
pop
sub
stos
push
test
sub
cwtl
and
addr16
xor
outsb
loope
shll
and
add
test
shlb
addl
push
add
or
lock
sbb
loope
sbb
xchg
jb
jne
jno
fcomps
out
jne
js
add
adc
lcall
movb
popa
push
sarb
add
push
xor
push
inc
fdivrs
loopne
push
jnp
aam
lods
xchg
add
scas
mov
add
push
add
sbb
and
add
sbb
sbb
adc
pop
in
mov
mov
add
lret
in
imul
lods
mov
sub
mov
movsl
push
mov
inc
adcb
dec
scas
and
pop
or
lret
in
mov
mov
imul
hlt
cwtl
mov
pop
jno
mov
adc
dec
sahf
xchg
or
addr16
xlat
adc
iret
xor
out
mov
dec
or
add
out
test
jno
add
setb
in
cltd
ret
insb
addb
mov
nop
cmp
or
call
test
movsl
mov
andb
add
xchg
fcompl
or
xchg
mov
inc
cmp
push
mov
add
int
imul
add
xorb
jecxz
xchg
inc
cwtl
ja
inc
cwtl
xor
test
add
dec
mov
andl
jl
imul
je
test
jl
testb
movsl
xchg
gs
rol
jle
mov
rolb
or
cmp
adc
lods
repnz
add
mov
dec
inc
or
dec
adcb
movsl
xor
xchg
test
outsb
std
add
and
jg
xor
inc
cwtl
ret
fcoml
fwait
jo
sar
add
add
ret
std
shlb
dec
call
inc
mov
push
popa
mov
dec
dec
pop
pop
mov
sbb
ret
jae
popa
hlt
or
push
repz
mov
ret
jne
test
xlat
cld
inc
test
cmp
or
xchg
inc
lea
and
and
cwtl
mov
je
pop
lret
mov
data16
pushf
mull
adc
test
icebp
add
dec
xchg
add
cmp
pop
jnp
mov
and
negb
aam
scas
mov
bound
lret
daa
add
shrb
xor
or
inc
cmc
imul
movsl
xlat
dec
cwtl
cmp
outsb
lret
stc
and
mov
xchg
int
sti
sub
pushf
frstor
in
jg
js
movsl
inc
dec
test
dec
lock
mov
out
inc
es
adc
int3
popa
cmp
iret
add
mov
dec
pop
xchg
dec
pop
imul
div
iret
mov
push
xchg
adcl
mov
cmp
or
ljmp
cmc
in
loope
call
mov
ret
sbb
push
sbb
mov
iret
push
dec
mov
pop
mov
ljmp
pop
lock
jns
xor
xchg
xor
pop
cmp
addb
xlat
je
pop
sbb
xchg
out
or
pusha
push
add
push
cmpsb
inc
jo
or
adc
movsl
jl
int
add
nop
repz
imul
mov
dec
jae
or
nop
pusha
shll
add
mov
js
add
icebp
pop
or
imul
mov
pushf
adc
add
and
adc
pusha
cld
cmc
popa
jo
imul
push
jns
cs
rclb
icebp
pop
cld
and
adc
xor
or
mov
orps
sbb
orl
add
sbb
roll
pop
jp,pn
mov
add
xor
dec
addr16
push
add
shl
cmpsl
lea
cmp
cltd
cmp
lock
sbb
xor
fcompl
jmp
stc
mov
mov
sub
and
adcb
test
xor
mov
pop
mov
pop
dec
adc
subl
sbb
or
mov
addr16
sub
or
add
add
pop
data16
xor
in
push
aad
ljmp
sbb
or
add
fmull
addr16
sub
jno
adc
cmp
sbb
xorl
test
sbb
adc
sbb
sub
push
mov
outsl
inc
inc
ljmp
mov
jp
or
imul
pop
mov
rcl
jl
cltd
mov
das
sub
cmc
mov
rorl
fxch
hlt
adc
stos
cmp
in
rorb
aad
or
push
dec
mov
loopne
xor
gs
jp
bound
add
pop
imul
sbb
mov
hlt
and
imul
ljmp
add
xor
cld
ds
ret
ds
push
in
and
outsl
add
xchg
ja
iret
movsb
adc
mov
ret
in
sbb
mov
sbb
add
mov
mov
das
add
or
xor
loop
fstps
adc
push
inc
sbb
pop
mov
cmp
lock
orl
sub
in
out
add
add
mov
cmp
xor
outsb
cmp
rorl
and
xor
out
or
jns
int
fiadds
sti
or
addb
sub
xor
pop
xor
pop
push
adcb
sbb
inc
mulb
pop
jge
push
mov
push
repnz
sub
cwtl
lret
push
add
fldcw
fcoms
pusha
test
rcrl
and
push
test
add
sbb
aas
in
adcb
or
sbb
aaa
das
sub
inc
enter
push
mov
mov
or
xchg
lret
and
fmull
xor
push
mov
mov
lea
inc
adc
push
cltd
lods
rol
or
adc
sti
mov
rcr
icebp
movsb
rorb
push
ja
jbe
pop
lahf
sub
push
push
and
mov
les
jns
das
or
push
jo
sub
adc
or
adc
push
jb
and
addl
mov
jl
jne
push
test
arpl
push
sub
outsb
test
or
int3
aam
dec
test
arpl
mov
scas
jns
out
inc
and
in
inc
dec
mov
jmp
aam
test
cmp
or
cld
mov
xor
fistps
fimull
add
sub
xchg
xchg
push
sbb
push
imul
data16
push
add
subl
xorl
popa
sbb
xchg
add
jmp
push
cmpb
imul
pop
cmp
sbb
xor
ret
jmp
xor
add
jbe
lock
mov
std
xor
push
push
mov
pop
mov
jmp
lock
adc
in
add
cmp
mov
xor
shr
cwtl
xor
add
xor
cld
add
or
pop
push
sbb
push
adc
adc
pop
add
stc
pop
sub
and
cmp
cmp
push
js
push
add
addl
adc
jmp
adcb
jmp
push
push
mov
fadds
fisubrl
outsl
xchg
cmp
mov
adcb
les
xchg
cmp
mov
push
ret
cmc
test
pop
pop
sbb
inc
sub
pusha
mov
jmp
stos
push
cli
push
pop
mov
jp,pt
mov
mov
cltd
mov
push
js
int3
fcomps
sub
fildl
cmp
push
nop
add
jmp
sbb
orl
sub
addl
and
mov
orl
in
xchg
xor
roll
mov
mov
call
test
mov
dec
aam
and
or
jmp
mov
roll
inc
mov
push
adc
mov
and
xchg
scas
or
add
loope
ret
sub
mov
jmp
pop
add
fs
sub
xor
adc
clc
repz
jmp
fisttpll
pop
psrld
mov
and
mov
popf
dec
inc
scas
mov
or
ja
mov
repnz
jns
into
lret
pop
dec
inc
inc
push
jmp
nop
cmpsl
xchg
lret
movsb
enter
pop
add
pop
jmp
je
add
movsb
sub
add
andl
js
xchg
outsb
in
incb
xor
and
mov
sub
xchg
or
fwait
sub
xor
pop
dec
cwtl
lcall
dec
or
fs
jp
xor
mov
div
mov
outsb
push
mov
jmp
ret
and
jle
pop
push
sub
scas
jmp
arpl
sbb
or
sti
push
mov
sub
out
push
mov
insb
repnz
mov
pop
sbb
and
xor
ds
nop
cmpsb
cwtl
sub
jb
leave
je
jmp
push
mov
push
pop
orl
pop
inc
push
rcr
imulb
mov
pop
or
icebp
or
addb
bound
inc
pop
movsb
out
pop
mov
sbb
mov
push
shl
sub
ljmp
rorl
sub
aas
xorb
daa
dec
mov
cmp
add
out
push
mov
mov
fsubrs
nop
sgdtl
push
pop
sarl
jmp
mov
inc
cmp
lret
pop
sub
mov
pop
rorl
push
sub
js
cs
push
xor
xbegin
loop
sbb
cwtl
aad
scas
jge
repnz
mov
add
nop
adc
xor
adc
or
lock
sub
jne
aad
push
fdivrs
data16
cmp
xor
and
push
push
or
ficompl
test
test
or
shr
jmp
je
push
jmp
dec
xchg
add
xor
jmp
subl
mov
add
pop
push
or
push
cmpb
cmp
xor
out
sbb
jae
nop
and
dec
mov
cmpsb
fs
adcb
pop
jnp
jbe
mov
mov
neg
mov
sbb
dec
ljmp
xchg
addr16
sarl
xchg
pop
mov
mov
mov
pop
or
inc
sub
push
pop
mov
out
xchg
pop
lcall
test
lds
adc
test
shlb
push
xchg
inc
data16
adc
std
inc
dec
shr
jecxz
xchg
push
imul
cmp
test
mov
inc
notb
push
pop
xchg
out
xchg
jmp
add
pop
scas
add
ret
add
and
invd
mov
pop
xor
ret
in
and
mov
pop
jmp
dec
das
sbb
push
adc
ljmp
pop
aaa
jge
out
xchg
incb
push
jmp
inc
lahf
xor
xchg
lret
or
dec
jo
inc
movsb
sub
shl
out
lods
sahf
mov
inc
sub
jmp
fwait
mov
push
mov
ja
scas
inc
mov
jmp
push
rorl
mov
addb
pop
add
out
push
mov
mov
and
jle
fdivp
out
mov
les
cmp
jbe
xlat
sbb
out
test
push
push
fs
bound
les
sahf
lret
xchg
push
cmpsl
popa
inc
addl
dec
add
lds
pop
pop
and
jmp
cmp
dec
or
push
mov
push
popl
in
rcrb
xchg
pop
cs
ret
jmp
adc
sbb
pop
ss
xlat
jmp
push
pop
out
or
xor
or
jno
push
xorb
andb
sub
and
pop
or
orb
pop
pop
push
or
dec
jmp
push
movsb
in
shr
mov
xor
sub
pusha
cmc
adc
loope
neg
add
add
movsb
fildll
rcrl
into
cwtl
pop
add
sbbb
in
add
mov
and
pop
nop
je
and
jmp
call
jge
cs
jmp
cmc
push
cmp
mov
jmp
pop
inc
fwait
push
push
push
pop
push
popa
and
add
push
mov
and
inc
lea
stc
mov
push
sub
and
jnp
dec
out
loop,pt
xchg
out
add
pop
add
jno
adc
cmp
sbb
sub
dec
dec
or
mov
xchg
fiadds
push
test
cmp
add
push
adc
xchg
sbb
add
lret
sbb
lock
adc
nop
addl
mov
btr
mov
rorb
and
outsb
cmp
daa
stc
xchg
pop
mov
push
dec
adc
orl
xor
mov
add
cmc
push
push
rorl
mov
inc
ret
mov
and
mov
mov
sub
and
cmp
jno
cltd
pop
mov
xor
cmp
test
sbb
aad
call
stc
pushf
mov
ljmp
pop
not
xor
xchg
adc
adc
xchg
sub
sbb
sub
jmp
bound
push
dec
add
adc
or
rcrl
cs
mov
push
in
dec
push
cmc
fstpl
mov
rorl
sub
inc
mov
and
pop
bound
add
cs
add
jmp
hlt
add
stc
sub
or
jmp
sbb
lcall
psubsw
cmp
push
sub
pop
pop
orl
shr
icebp
mov
test
or
push
jns
pop
loopne
add
push
lds
test
sbb
dec
or
loopne
rcll
ret
adc
add
dec
adc
add
fdivrs
push
mov
cmp
negl
mov
cmp
fmuls
add
push
jmp
aam
cltd
and
sbb
mov
mov
scas
dec
fldl
adc
xor
sahf
add
xor
dec
shrb
fs
push
pop
jne
pop
pop
xor
hlt
fwait
mov
add
push
outsl
leave
dec
inc
add
lahf
sbb
inc
push
jmp
push
int
or
and
xor
xor
sbb
or
adc
add
aaa
ljmp
add
or
addr16
or
andb
adc
divb
subb
adc
add
loop
sbb
jle
push
xor
ret
imul
jmp
mov
nop
ret
cli
add
xor
daa
push
test
loope
sub
dec
shll
out
movsl
push
mov
pop
mov
xor
cli
pop
push
add
mov
scas
and
xchg
or
pop
push
push
push
inc
sub
scas
stc
pop
loope
iret
in
imul
xor
rcll
mov
add
fmuls
adc
addr16
pop
and
out
pop
cmp
inc
mov
adc
or
sbb
clc
pop
dec
and
inc
add
js
arpl
test
addb
pop
jmp
fwait
es
hlt
call
and
mov
inc
ret
push
pop
roll
loop
shr
push
cmpsl
pop
pop
pop
and
xchg
shlb
add
pop
adc
dec
pop
lsl
or
rcr
dec
xor
adc
add
arpl
adc
sub
push
xchg
push
inc
divb
push
aad
int
jb
jge
in
pop
stos
js
js
cmp
pop
or
lods
mov
daa
add
loopne
push
push
push
mov
cmpb
push
loopne
addr16
add
and
xor
or
pop
jl
int3
inc
push
sbbb
jmp
addl
cwtl
sbb
pop
ds
pusha
test
mov
inc
andb
sbb
push
test
jmp
xor
pop
add
aad
push
xchg
dec
add
pop
ret
add
xor
mov
andb
mov
inc
dec
imul
rol
xchg
mov
xchg
sbb
jo
dec
rclb
ljmp
pop
dec
push
shl
mov
jmp
out
rorb
cmpsb
or
out
cwtl
pop
add
pop
cs
add
inc
pop
mov
ja
in
push
pop
or
sbb
jbe
dec
and
sbb
inc
fwait
outsl
daa
sahf
pop
test
ret
loopne
add
out
mov
adc
pop
rorb
push
dec
andl
rorb
ret
popa
stos
sub
push
loopne
fcmovnb
pushf
push
movsb
xchg
sbb
test
popl
clc
inc
sub
addb
dec
incb
mov
jp
leave
bswap
out
neg
shl
and
pop
and
in
pop
inc
xchg
xchg
call
mov
xor
leave
pop
dec
sbbb
jle
clc
or
aas
adcb
push
dec
lds
mov
lea
sbb
pop
iret
dec
pop
adc
inc
cli
adc
and
pop
inc
ljmp
pop
or
sub
mov
mov
cmpsl
ss
sub
ljmp
test
daa
movsb
or
push
mov
cltd
push
ljmp
sub
cmpsl
push
imul
pop
push
sub
jae
adc
add
addl
xchg
test
lock
neg
mov
cmpsb
jbe
subb
dec
loopne
aam
add
dec
jo
or
cmp
or
xor
xlat
subl
shl
nop
or
mov
inc
and
pop
not
add
mov
inc
outsb
mov
pop
push
pusha
in
adc
fiaddl
shr
sub
pop
adc
add
xlat
cmpsl
lock
ret
pop
inc
insl
and
sbb
mov
mov
sub
test
push
pop
mov
push
shr
loopew
icebp
xor
pop
outsl
int3
enter
jg
add
sub
ret
ret
lret
in
mov
lds
inc
mov
mov
xchg
or
loopne
arpl
push
push
mov
add
aad
std
ss
xor
or
jmp
in
or
cmpsb
mov
adc
xchg
es
sub
sub
pop
adc
or
test
into
loope
lods
aaa
cs
lods
and
rcrl
cmpsl
sbb
imul
add
subb
pop
push
push
sahf
jb
mov
mov
clc
fldl
xchg
imul
xchg
aas
add
mov
addb
jmp
pop
std
es
mov
pop
mov
outsb
xor
sarl
and
cmc
jge
imul
or
push
mov
sbb
inc
imul
cmp
rolb
gs
mov
add
sub
repnz
add
pop
xor
xchg
sub
pop
cwtl
fisttps
mov
mov
ret
pop
pop
inc
push
push
fnstsw
push
mov
push
movsl
sub
and
fs
sbb
jp
out
xor
push
sbb
and
add
dec
rsqrtss
add
mov
add
xchg
or
pop
mov
push
inc
das
mov
sub
pop
push
mov
fstps
push
je
jmp
push
mov
mov
fstl
sbbb
ljmp
mov
sahf
cmpl
push
pop
mov
push
add
mov
cmp
bound
jbe
or
mov
add
lds
popf
rclb
ss
hlt
cld
cmpb
jnp
out
fnstcw
jne
stc
sbb
rcrl
in
and
inc
or
in
dec
or
sbb
xchg
fisttpl
and
pop
inc
in
loope
adc
dec
and
aas
xor
arpl
insl
nop
mov
movsb
adc
shll
cmpsb
insb
jmp
bound
or
add
push
pop
cmpsb
mov
loopne
pop
push
sub
dec
decb
jmp
or
ja
movsl
add
popa
add
dec
mov
add
xchg
adc
jbe
les
jno
and
mov
loope
mov
push
inc
sub
test
mul
xchg
sti
jg
fisttps
inc
mov
pop
dec
pop
and
pop
orb
je
jb
xchg
int3
fisubrs
and
pop
enter
mov
loope
xchg
xlat
addl
mov
fimull
adc
add
xor
pop
and
cmp
repnz
dec
dec
enter
mov
xchg
out
pop
add
jo
pop
nop
divb
push
hlt
xor
popa
cltd
test
dec
or
jb
in
push
adcb
inc
pop
or
or
adc
les
int
mov
insb
pop
shl
fldenv
mov
jbe
and
aas
jns
test
push
ret
repnz
mov
push
add
sub
push
cmp
repnz
popa
js
push
cld
xor
sbb
lcall
scas
add
xor
loop
pushf
imul
pop
pusha
icebp
mov
mov
push
mov
push
dec
cmp
js
mov
imul
pop
or
push
jl
pop
cmpsl
push
dec
sbb
add
les
xor
inc
loop
orb
push
push
pop
push
imul
add
pop
int
sub
jmp
sub
push
inc
pop
and
loop
dec
arpl
shl
or
inc
orb
mov
sub
sbb
shrl
sub
and
hlt
lret
loop
cmp
push
push
mov
inc
into
pop
pop
jmp
mov
and
dec
testl
mov
sub
mov
or
jbe
add
insb
cmp
sahf
cmc
add
jb
add
push
push
sarb
popa
sbb
lcall
shl
sub
ds
fstp
adc
in
push
sti
and
dec
loope
stos
shl
jle
in
xorb
add
xchg
push
push
out
jl
arpl
ret
shll
and
cmp
add
add
xorl
pop
sub
mov
and
add
xchg
pop
pop
mov
out
push
add
sti
ret
gs
jge
cmovl
gs
inc
in
cmp
pushf
add
inc
sub
pop
cmpl
add
inc
scas
or
dec
dec
mov
dec
clc
addl
jne
data16
roll
inc
or
sub
jl
xor
dec
gs
das
jmp
xchg
pop
xlat
in
mov
aaa
repz
adc
add
pusha
cmpsl
in
or
in
pop
ret
add
pop
inc
mov
pop
shl
adc
push
out
and
out
pusha
jmp
xchg
push
fdivs
jno
mov
adc
enter
andl
xor
leave
add
dec
add
lahf
inc
cmp
mov
mov
lahf
mov
mov
pushf
jmp
ret
cmpb
or
pop
pop
addl
int
mov
shl
addb
popa
punpckldq
pop
mov
shlb
lret
mov
push
or
daa
daa
fsubrp
cmp
movsb
jl
popl
sub
push
test
icebp
ljmp
movsl
mov
xorl
fstpt
push
mov
and
fstp
push
mov
and
xor
out
or
pop
jmp
mov
hlt
push
adcl
popf
ds
call
inc
cmp
fst
repz
int
xchg
mov
or
cmp
or
or
xor
sbb
xchg
pushl
mulps
cmp
sbb
addb
and
out
or
lods
imul
or
mov
cmc
enter
or
shrl
add
adc
sub
sub
xor
add
sbb
pop
fisttpll
into
push
rorb
xchg
mov
fimull
mov
jmp
add
mov
pop
neg
popf
mov
rorb
lret
pop
lss
mov
enter
inc
add
sub
or
je
outsl
jle
ja
or
jp
sub
inc
not
adcb
std
das
inc
mov
jp
xchg
add
xor
or
add
movsl
sbb
xor
lahf
out
ret
push
and
mov
adc
aad
mov
sub
lret
add
lret
mov
push
faddl
repz
dec
jnp
add
mov
add
lock
jo
rolb
stos
or
add
cmp
xlat
push
mov
in
push
pop
outsl
mov
pop
add
sbb
mov
mov
or
dec
sarb
mov
mov
mov
and
orb
dec
dec
sbb
addl
jle
inc
xchg
cs
fldl2e
imul
stc
mov
push
rcrb
aas
les
push
push
cmpsb
pop
pop
dec
push
cmp
loop
add
sbb
add
lret
sbb
mov
push
imul
pusha
pop
push
xor
jb
xchg
and
ret
dec
mov
add
or
ljmp
cltd
jae
addb
add
push
jmp
cld
or
sbb
and
or
dec
adc
decl
inc
jmp
mov
and
not
test
lahf
dec
mov
cld
mov
inc
test
or
adc
in
add
pop
ret
clc
dec
push
jg
and
and
jb
or
pop
imull
mov
xchg
or
dec
and
push
sub
or
and
jbe
cmp
xor
add
scas
add
push
jmp
xor
jmp
jge
in
adc
dec
lds
push
rolb
lahf
and
loopne
sub
pop
push
popl
dec
xlat
icebp
mov
pop
popf
and
inc
ss
push
repnz
shll
sbb
and
inc
mov
data16
pop
mov
or
jnp
dec
xor
mov
xchg
inc
or
and
fildll
mov
in
mov
sub
push
mov
lods
and
mov
movlps
ds
ret
ficoms
and
jecxz
jmp
xchg
cltd
lahf
ror
fwait
or
in
int
add
sub
hlt
aaa
or
bound
lds
mov
lea
xor
jmp
ds
js
dec
test
or
adc
push
cwtl
xchg
test
cmpsl
data16
pop
repz
add
add
cmc
nop
mov
xor
cwtl
int3
cmp
mov
pop
fmulp
jo
mov
mov
loope
push
jmp
or
or
jp
pop
ret
pop
sbb
cli
mov
or
cmp
inc
lock
pop
aad
popf
addl
lods
dec
pop
fisttpll
dec
inc
cmpl
incb
cmc
and
iret
jno
dec
and
or
push
mov
stc
cwtl
mov
add
hlt
jmp
add
icebp
bound
jmp
leave
xor
sbb
push
cmp
stc
inc
push
stc
and
inc
xor
dec
pop
xor
call
xchg
test
push
jg
js
jnp
icebp
jo,pt
jmp
ficomps
adcb
pop
jno
repnz
sbb
enter
and
jnp
mov
das
fs
js
cs
insl
or
mov
push
in
pushf
inc
lds
jb
sub
in
btc
jbe
je
xchg
fildl
stc
aad
push
insb
inc
xchg
scas
leave
repnz
pop
sbb
in
jecxz
orb
sbb
shl
fsubr
rolb
adc
repz
push
popf
xorb
int3
add
mov
nop
addr16
addb
mov
das
enter
jp
pop
sub
sub
orb
or
lds
sbb
xor
dec
test
inc
test
push
ja
nop
pop
add
fisubl
call
inc
and
loop
mov
insb
sbbb
fisttpl
inc
pop
jbe,pt
cld
mov
sbb
sub
imul
out
or
inc
jle
loop
popa
sbb
es
rorl
jl
sub
arpl
add
pop
push
sub
nop
mov
or
push
sti
adc
jb
out
das
push
push
inc
popa
xchg
mov
imul
push
lret
or
mov
xor
pusha
or
jno
push
mov
or
bound
imul
xchg
std
push
and
insb
cmpb
jmp
xchg
hlt
pop
push
pop
push
push
pop
lock
add
dec
sbb
andb
rol
and
inc
push
std
cmpsb
mov
stos
add
xchg
inc
push
mov
mov
jg
jmp
pop
jo
stc
imul
mov
adc
xor
jecxz
push
push
fldenv
sub
cmpsb
push
add
xor
mov
add
sbb
sbb
sub
inc
sti
aam
out
xorl
jmp
add
sub
sti
adc
adc
or
or
cmpsl
adc
jmp
pop
or
mov
mov
jmp
ljmp
adc
lret
mov
adc
cmp
dec
shll
ret
cli
pop
sub
jl
sub
or
arpl
add
enter
dec
shl
mov
fldenv
inc
in
mov
push
aas
jnp
test
andb
fstpl
aam
pop
push
mov
and
mov
enter
fmulp
push
repz
negb
sub
pop
push
je
std
pop
aas
xor
nop
cs
cltd
inc
or
push
jns
cmpsb
add
fcompl
ss
push
movsb
pop
call
shll
loope
and
cs
xor
aam
mov
inc
mov
das
shl
nop
imul
cltd
mov
add
xor
sub
inc
sbb
sbb
mov
sbb
push
pop
pop
push
sbb
push
movsb
sbbb
and
ds
paddusw
jne
sub
xlat
mov
movsl
aam
inc
add
xchg
mov
and
xchg
pop
pop
sbb
iret
test
add
jmp
xchg
dec
or
jne
inc
mov
cmp
aas
es
aad
or
stc
bound
xor
je
addr16
movsb
aad
jmp
dec
les
sub
shlb
cmp
sub
bound
cld
sub
lods
mov
inc
dec
pop
out
cli
pop
add
and
mov
pop
jb
inc
mov
add
fs
adc
jl
pushl
popf
pop
dec
sbb
outsb
dec
pop
mov
xor
pop
popf
shl
jle
add
jge
adc
adc
push
dec
push
push
jmp
mov
fs
sub
scas
addr16
jecxz
decl
std
ret
sub
enter
dec
or
sub
daa
mov
or
mov
add
or
nop
inc
xorb
mov
fistl
std
dec
call
mov
adc
inc
mov
sub
nop
out
jmp
xchg
push
inc
test
pop
inc
dec
jmp
sub
aaa
or
pop
les
inc
and
and
or
testb
mov
and
xor
dec
dec
mov
inc
jge
rol
sbb
cmpb
cmp
xchg
xor
pop
scas
inc
int3
fcmovbe
or
popa
pop
notl
or
jne
insl
sub
inc
std
add
adcl
push
or
scas
push
xchg
inc
testb
add
int
pop
jno
dec
cs
mov
add
mov
inc
loope
int
jg
shrb
and
testl
push
add
inc
pop
sbb
popf
xor
int
pusha
cmp
cltd
fs
les
cmp
addb
outsl
add
rolb
subb
test
or
mov
push
push
scas
mov
push
sub
mov
iret
andl
ret
mov
into
mov
dec
iret
cmp
push
sub
push
cwtl
pusha
jmp
rol
lods
sbb
int
lds
test
cmp
ljmp
sub
sub
ss
and
sti
cld
sbbb
push
mov
add
sub
or
jmp
mov
or
add
add
push
xlat
repz
and
xchg
dec
xchg
cmp
or
jo
push
rolb
cmp
subl
pop
pop
jae
mov
iret
lock
nop
outsl
lret
xchg
inc
push
add
jbe
adc
and
dec
cmp
imul
addr16
adc
shlw
push
mov
div
xor
pop
dec
das
inc
addl
cmpsb
aas
adc
jb
in
stos
insl
sub
add
dec
push
sub
jns
jbe
jle
xchg
inc
or
jmp
push
lret
mov
mov
and
iret
js
xchg
movsl
lods
inc
aad
lock
out
cltd
ja
push
out
pop
popf
mov
fcompl
movsb
pop
mov
iret
pop
mov
sub
and
mov
jl
andb
enter
xchg
scas
xchg
pop
sub
ja
dec
lahf
push
cs
cmp
imul
adc
mov
adc
xchg
mov
jno
jge
dec
imul
mov
inc
sub
nop
push
dec
add
mov
pop
clc
popf
movsb
les
fimull
add
xchg
pop
sbb
mov
sbb
mov
push
push
pop
pop
pop
sbb
sbb
mov
popa
test
out
lcall
push
ljmp
jmp
loop
add
flds
mov
adc
jmp
icebp
inc
movb
pop
adc
movsl
test
stc
push
cmpsl
dec
aad
bound
cltd
jmp
mov
cmp
adc
xchg
push
xor
sub
adc
push
mov
daa
fadd
push
dec
jne
push
mov
and
out
and
add
push
pop
lea
aad
jnp
dec
mov
dec
inc
add
sub
orb
shr
jmp
and
pop
push
push
jo
fwait
inc
aam
das
mov
dec
icebp
dec
and
mov
pop
push
je
mov
ds
fiaddl
add
pop
int
jmp
push
push
inc
push
sbb
fdivr
xchg
cmp
jmp
cmp
fnstsw
cmp
inc
xor
cmc
cs
mov
insb
dec
push
icebp
loop
mov
xchg
dec
rorb
dec
ret
push
subl
or
add
pop
push
mov
adc
xchg
xchg
lods
mov
mov
xor
clc
std
push
add
xchg
aas
imul
test
adcb
loopne
cmp
cmp
mov
test
lock
add
cmp
pop
sub
adc
sbb
lock
mov
movsl
xchg
and
icebp
or
mov
lock
pop
pop
mov
jmp
loop
jle
add
cmp
dec
mov
add
loop
xor
out
dec
nop
xlat
lock
pop
xor
pop
in
cwtl
movl
jl
stos
loop
inc
mov
mov
jecxz
adc
push
push
mov
shr
or
inc
and
jp
data16
mov
js
inc
loope
lahf
pusha
inc
sub
mov
mov
dec
loopne
mov
ja
je
pushw
clc
stos
scas
xchg
mov
and
iret
mov
adc
or
fiaddl
pop
push
movsb
mov
sub
inc
push
imul
adc
mov
mov
add
and
push
push
sub
adc
inc
lahf
mov
push
push
inc
mov
pop
das
sbb
inc
aas
popf
push
pop
rorb
add
stos
adc
jmp
and
neg
or
test
xor
pop
pop
int3
cmp
push
adc
lods
mov
fs
ret
add
shlb
jecxz
sub
and
fiaddl
out
push
or
jae
jle
push
rclb
cli
pop
mov
dec
loop
out
sbb
repnz
push
dec
mov
call
pop
jp
and
sub
loopne
out
imul
push
pop
mov
ret
decb
xor
and
mov
outsb
neg
loope
imul
mov
cli
push
stos
adc
push
lret
or
sub
adc
or
outsl
fs
clc
mov
push
decl
cmpb
sub
push
inc
and
jl
add
shr
and
jle
test
sti
loopne
jmp
rcrl
aad
mov
dec
sub
loope
inc
outsl
push
loopne
sub
cwtl
push
inc
add
addr16
ljmp
jbe
into
outsb
push
ror
mov
or
pop
icebp
aaa
je
loopne
neg
shr
or
daa
test
imul
jmp
pop
mov
cmpsb
cwtl
sub
push
divb
or
pop
cmp
les
and
and
addl
inc
add
ljmp
pop
das
data16
mov
sbb
sub
imull
cmp
ret
adc
stos
mov
dec
push
lcall
pusha
outsl
fs
or
in
in
pop
pusha
fsubl
inc
addr16
lret
mov
mov
sbb
mov
outsl
sbb
or
test
adc
pop
jnp
adc
test
mov
push
sahf
or
and
and
sub
adc
sub
repnz
xor
hlt
ret
pop
fbstp
lcall
inc
jae
aad
ja
dec
nop
pop
bound
or
clc
sub
pop
cmc
sarb
cmp
adc
outsb
fs
dec
shl
dec
sub
pop
inc
fnstenv
add
or
mov
jmp
xchg
mov
clc
pop
and
sarb
push
mov
add
fnsave
addl
push
jecxz
fbstp
push
pop
or
fstl
or
out
enter
les
inc
rcrl
xor
mov
add
mov
leave
and
or
ret
lret
mov
out
add
sub
aam
stos
sub
jmp
cmp
inc
popf
cmc
scas
sub
sub
pop
add
mov
push
xor
repnz
dec
inc
and
inc
lea
cmp
shrl
enter
addr16
loopne
nop
dec
out
sti
and
cs
pop
inc
gs
shl
push
nop
mov
aaa
movl
iret
fldl
pop
and
inc
add
out
xchg
int
nop
ljmp
push
dec
sub
xchg
mov
adc
pop
push
fwait
rol
adc
lret
jmp
jne
pop
rclb
cmp
push
loopne
mov
outsb
adc
mov
out
jo
mov
aas
mov
and
shrb
out
mov
lods
out
inc
fs
inc
aam
fwait
adc
jge
neg
mov
sub
negb
daa
mov
xor
nop
adc
incb
shrb
ret
pop
push
add
out
push
push
int3
adc
fisubl
out
sbb
iret
out
dec
jnp
testl
or
cld
int
push
adc
sbb
xor
mov
push
in
fistl
or
cmp
hlt
pop
jmp
inc
nop
outsb
add
and
lahf
test
int
xchg
mov
ljmp
in
jp
movsb
dec
into
enter
inc
fnstcw
mov
fldt
and
push
add
or
or
jmp
cltd
test
iret
sbb
mov
adc
or
aad
inc
sub
repnz
sub
xchg
sub
fsubl
incb
mov
cwtl
bound
cwtl
pop
sub
sub
push
mov
push
xchg
repz
xor
add
lock
sarl
mov
ret
in
mov
fnstsw
push
test
mov
pop
mov
add
in
dec
xor
das
pop
or
pop
pop
mov
pop
and
dec
ss
xchg
mov
xchg
cmpsl
popa
push
les
pop
xor
cmp
pop
mov
not
loope
scas
jle
addb
orl
pop
jmp
push
mov
andb
pop
loopne
test
push
in
sub
stos
out
test
divb
shlb
dec
add
int
pop
ds
jbe
imul
bound
sahf
jns
inc
ret
ds
adc
clc
cmpsb
xchg
rorb
cmp
cmpsl
popf
dec
adc
mov
push
mov
mov
sahf
sbb
dec
sbb
or
loope
aad
dec
pusha
clc
mov
or
fs
popa
jmp
xor
dec
xchg
inc
sbb
mov
divps
jae
xchg
cmp
and
cld
and
stos
and
out
sub
decb
dec
imul
and
or
fists
cmp
inc
push
mov
sub
jmp
cmp
andb
enter
movsb
add
cs
jns
mov
inc
xor
and
push
pop
push
mov
pop
rcrb
out
cmpb
int
mul
push
dec
jo
movsl
addb
or
mov
and
mov
cmp
sarb
das
psrlw
ds
icebp
jecxz
cmp
dec
test
adc
cmp
lea
xchg
xor
bnd
mov
jnp
pop
mov
not
rcr
jo
iret
addb
mov
sub
test
xadd
add
js
out
push
push
mov
sub
clc
or
dec
sub
mov
fs
push
rolb
loope
jno
cmp
call
pusha
das
sbb
and
pop
cmp
mov
pop
xchg
mov
pop
add
fisttpll
cmp
dec
cmp
add
test
dec
jo
sub
xchg
xor
popa
and
add
cwtl
rorl
lods
lret
pop
int
int
dec
fldcw
sbb
repnz
addr16
pusha
sub
xor
outsl
lods
cltd
ljmp
or
xorb
stos
inc
add
out
rcrb
add
test
stos
jbe
pop
popf
popa
nop
jb
pushf
dec
xchg
mov
sub
lahf
adc
adc
das
icebp
lret
inc
orl
and
cmp
or
push
push
enter
sbb
or
mov
add
add
lahf
sbb
flds
jae
test
pop
mov
or
or
fmul
inc
mov
loop
hlt
popa
sub
xor
jno
mov
stos
add
not
shl
cli
fnsave
sbb
dec
mov
lods
fbstp
js
mov
shr
xor
cmc
xor
std
js
je
shl
or
mov
push
bound
push
sub
in
insb
jno
jnp
pop
int3
bound
mov
pop
icebp
xchg
bound
or
pop
dec
gs
pop
pop
ltr
pop
sahf
dec
jmp
dec
mov
push
mov
mov
jl
add
cmc
mov
jmp
lahf
and
mov
or
and
xor
out
push
in
ja
shrl
dec
cmc
sbb
push
mov
and
jns
movsl
andb
ss
mov
sahf
mov
gs
or
pop
sub
push
mov
or
add
mov
mov
leave
add
imul
push
decb
pop
je
and
cmp
gs
mov
and
push
inc
mov
call
pop
xor
roll
ret
jae
sub
dec
ds
cli
shlb
pushw
push
cwtl
aam
repnz
lods
mov
mov
push
mov
lret
sub
dec
xor
ds
sbbl
mov
adc
mov
sub
and
shll
mov
xor
clc
xchg
mov
add
lock
shl
subl
add
inc
shl
out
and
push
push
mov
adc
push
push
out
adc
and
test
push
adc
leave
sbb
add
ds
rol
sbb
cli
lahf
rcr
sub
icebp
mov
push
xor
dec
xchg
shrl
adc
pop
adc
jmp
ds
push
imul
or
inc
out
pop
mov
jl
movsl
mov
or
or
ja
jne
hlt
movsl
sub
testl
icebp
lods
jns
aas
xchg
jge
mov
int
pusha
xchg
mov
mov
jmp
mov
clc
or
shl
inc
test
bound
jmp
push
pop
add
jae
pop
std
popa
jns
in
or
fidivrs
sarl
pop
addb
cmp
pop
outsb
xchg
push
pop
std
mov
sub
xor
insl
add
mov
and
inc
sub
scas
sub
inc
and
in
ret
push
jmp
ret
pusha
sbb
inc
push
or
or
pop
pop
ficoml
in
mov
subl
sti
pop
xor
repz
popf
jne
or
adc
jno
jo
push
add
orl
fs
xchg
rolb
xchg
mov
xor
shrb
aad
ljmp
popf
jno
jmp
adc
pop
pop
jmp
call
das
pop
outsl
xor
adc
shlb
testb
add
pusha
stos
sbb
sub
out
es
out
mov
mov
fs
jns
es
sbb
lods
pop
or
gs
xchg
or
jg
jae
add
gs
sub
sbb
mov
nop
or
loope
sbb
jmp
xor
dec
lret
and
cwtl
outsl
xorl
in
ljmp
lock
pop
adcb
dec
jge
stc
pop
add
cmc
sub
notb
jo
jns
fwait
sub
and
mov
jmp
push
mov
or
mov
jmp
mov
or
in
fs
loopne
lods
xor
fsubrs
popa
fwait
sub
fldl
mov
sub
pop
test
mov
cmp
add
or
pop
sbb
xchg
jmp
adc
cmp
scas
pop
les
std
push
fisubl
cli
popf
pop
push
mov
mov
or
pop
add
rclb
ret
test
or
pusha
mov
hlt
gs
jbe
adc
push
mov
jnp
adc
pop
inc
lock
dec
shll
cmc
cmp
cmpsl
pop
jecxz
pop
test
pop
add
popa
add
pop
push
es
addb
add
ret
das
jo
test
nop
or
imul
sub
iret
frstor
jmp
or
js
and
popa
adcl
insl
dec
adc
add
sarl
lret
mov
pusha
sbb
pop
mov
dec
mov
jmp
jmp
cli
pushf
mov
add
pop
sbb
lret
neg
adc
fildl
imul
fcmovnu
dec
cmpsl
add
sahf
adc
mov
pop
aad
iret
push
gs
and
push
mov
aaa
mov
je
jp
push
flds
jmp
push
and
mov
in
or
push
mov
aas
daa
rorl
push
cltd
adc
lahf
sub
inc
fs
xchg
int3
cmp
nop
dec
push
cmpsb
cmp
jne
cmpsl
aas
mov
inc
dec
adc
cwtl
inc
jmp
iret
pop
movsb
and
icebp
or
das
das
notl
inc
je
test
loopne
cmp
mov
dec
fnsave
jecxz
adc
push
test
cmp
push
adc
pop
adc
mov
pusha
sub
sub
stos
inc
or
and
shrb
push
add
or
decb
fdivrs
jmp
add
or
pop
push
popa
imul
inc
int3
mov
loopne
jo
imul
fisubs
fs
cmpsl
inc
es
mov
add
and
or
add
je
enter
inc
xor
fwait
dec
add
mov
or
jmp
xchg
addr16
call
push
fmull
xor
ret
and
or
mov
cmp
pop
out
scas
test
out
sub
idivb
vpsubb
add
jno
mov
fs
lock
pop
mov
mov
outsb
xchg
ljmp
mov
pushf
imul
cmp
lret
jmp
inc
repz
in
xchg
roll
std
lahf
push
insb
mov
mov
adc
push
out
mov
push
sub
pop
and
icebp
mov
lds
or
push
jmp
mull
cmp
jecxz
dec
outsb
imul
mov
or
jg
ja
sbbb
jl
js
das
scas
adc
and
mov
sub
inc
or
int
push
cmpb
mov
xchg
xorb
jle
mov
xchg
scas
orb
adc
ljmp
test
ret
xor
pop
xchg
inc
jbe
ja
repnz
mov
adc
cli
pop
and
inc
and
add
jne
fs
data16
psrad
sub
sbb
and
mov
cmp
and
movb
cld
mov
or
pop
mov
pop
jb
dec
xor
lret
shll
aaa
push
mov
pop
cmp
xchg
push
add
xchg
not
orb
jb
push
push
push
or
sub
jmp
xchg
sub
adc
imul
add
push
dec
sahf
push
pop
mov
inc
mov
jge
cs
andl
imul
mov
mov
lock
test
mov
testb
push
push
adc
in
bound
hlt
xor
push
daa
ror
or
cmc
cmpb
stos
dec
add
in
in
dec
repnz
rorl
push
repz
ja
orl
adc
mov
add
js
sbb
sbb
imul
fldl
add
xchg
inc
adc
and
push
insl
push
shr
push
xor
sbbl
fildll
ret
test
ja
xor
push
inc
daa
lret
je
jae
fildl
rcrb
xchg
add
jle
jmp
add
xor
pushf
lods
cmp
mov
jmp
pop
pop
adc
pusha
iret
mov
jmp
add
xor
mov
fisubrs
out
xchg
pop
jae
dec
or
andb
fstps
add
ljmp
addb
cli
fistpll
pop
sub
lock
xlat
adc
out
or
add
add
cmc
addb
or
jbe
adc
xor
rol
mov
cmp
or
mov
mov
or
test
pop
xor
and
repz
push
data16
fsubrs
jb
test
dec
mov
xor
xor
sub
inc
loopne
out
fildll
or
or
scas
xchg
push
dec
sub
and
testb
add
jmp
popa
push
inc
push
push
mov
arpl
add
jo
leave
mov
faddl
into
and
xchg
mov
inc
leave
and
lock
call
cwtl
sbbb
push
jmp
imul
push
jmp
mov
gs
push
sub
jns
repz
dec
insb
cmp
xchg
push
push
push
cwtl
cmp
ljmp
rcrl
mov
xchg
or
sub
pusha
mov
pop
jb
pop
jbe
movl
add
daa
sub
mov
addb
leave
pop
or
cmp
pop
pop
sub
push
xchg
or
push
adcb
push
sbb
sub
push
pop
and
push
pop
push
jmp
rolb
jmp
orb
add
mov
imul
sub
mov
mov
fbstp
inc
out
or
fisubrs
mov
adc
mov
sub
sarb
push
pusha
cmp
jnp
cld
pusha
adc
mov
inc
xor
mov
push
and
jg
add
fistl
fwait
ljmpw
in
jns
ss
pop
fmull
xchg
cmp
popa
xor
xchg
fbld
mov
add
pop
out
dec
imul
sarl
inc
xchg
js
xor
adc
int
xor
pop
mov
push
pop
sub
jmp
mov
adc
outsb
test
pusha
idivl
and
bound
or
mov
jp
adc
icebp
testb
xchg
jecxz
lea
sbb
jnp
xlat
ret
imul
dec
aaa
mov
or
lds
pop
sub
int
add
sahf
mov
dec
mov
jb
mov
xchg
nop
jmp
xchg
dec
xchg
xchg
cmc
pop
dec
mov
mov
add
mov
ja
mov
movsb
shrb
jmp
std
cmc
pop
cmpsb
push
and
call
out
xchg
or
mov
mulb
in
repnz
jno
psubsw
cwtl
sbb
dec
pop
out
loopne
xor
xchg
mov
aad
pop
inc
je
sub
out
jp
or
scas
shrl
jle
or
fs
or
call
sub
add
lods
inc
cld
inc
inc
add
pop
add
cmp
lods
xor
adcl
push
outsl
loopne
push
and
sub
cli
jae
inc
or
mov
mov
dec
sbb
pop
loope
pop
xor
push
mov
jl
and
rorb
pop
pop
int
jae
sub
push
or
or
mov
pop
xor
or
or
adc
xor
pop
dec
enter
jbe
inc
daa
int3
sar
out
call
jmp
or
adc
push
cld
inc
cwtl
dec
push
sub
add
adc
pop
pop
inc
pusha
das
xor
shrb
cmc
adc
call
mov
daa
mov
clc
jmp
sub
jp
das
call
sub
mov
jle
xor
push
nop
xor
sar
dec
bound
ljmp
sub
push
sahf
stos
loope
rorl
inc
add
cwtl
push
ds
cltd
les
cmp
inc
push
inc
testl
sbb
or
call
xchg
nop
cmp
sbb
adc
dec
fstps
addb
rcll
dec
dec
xchg
leave
jg
les
dec
aas
add
add
xor
cld
rorb
add
jbe
lret
mov
mov
add
xchg
cmp
scas
aad
and
sbb
ret
dec
add
or
pop
cli
sub
int3
xor
outsl
loopne
cmpsb
jo
or
sub
repnz
jbe
xchg
xlat
sbb
dec
or
cwtl
adc
mov
cmp
and
push
fsubs
sub
icebp
hlt
jg
ret
cwtl
pop
mov
popf
lret
jmp
xor
lret
dec
adc
cmp
fdivrl
je
ds
int3
dec
add
insl
pop
push
inc
int
cmp
pop
jne
cmp
xchg
decl
jmp
push
push
push
lods
jns
je
or
imul
pop
pop
stc
nop
or
add
dec
aam
sub
dec
shlb
lds
dec
rorb
fsubs
es
jnp
cld
or
xor
int
jmp
add
nop
dec
aam
in
cld
test
test
fs
cmpl
xor
adc
dec
lret
dec
add
push
pop
dec
inc
xorb
mov
es
popf
insb
push
ret
inc
jae
fwait
mov
insl
lcall
into
push
pop
or
loop
jae
dec
sbb
mull
jns
gs
or
jg
pop
aas
and
lret
lds
leave
pop
pop
arpl
add
mov
int
aam
sub
mov
mov
push
push
pop
jae
push
ffree
sub
adc
fistps
lret
push
and
jmp
mov
imul
jbe
pop
stos
outsl
aad
cld
enter
ja
aas
cs
das
push
test
imul
push
pop
pushf
inc
bound
jecxz
enter
and
and
dec
pop
dec
or
ljmp
inc
dec
out
cmp
mov
cmp
ret
or
pop
insl
add
jmp
mov
jl
push
ss
inc
rorl
cmpsl
aad
xor
in
or
jmp
clc
xor
dec
xor
add
xor
enter
scas
dec
xchg
and
adc
sub
bound
out
in
enter
orb
insb
cmc
inc
insb
popf
dec
sarb
pop
ljmp
aas
push
add
mov
adc
adc
xchg
pop
addr16
inc
pop
push
mov
out
pop
pop
shrb
adc
xlat
push
arpl
mov
mov
dec
jp
and
pop
lea
aad
out
xor
cmc
pop
cld
inc
sub
xor
push
jmp
clc
mov
cmp
sub
lock
lea
xor
imul
aam
inc
push
and
pop
test
sub
pop
and
add
std
jnp
xor
shrl
xchg
aaa
cmpsl
mov
pusha
mul
bound
add
inc
ja
dec
xchg
lds
aas
xchg
jmp
or
or
dec
fnstenv
and
jmp
mov
push
testb
xchg
popf
pop
push
add
rcl
cmp
dec
push
out
adc
push
jae
xchg
dec
addl
in
or
sbb
leave
inc
clc
sub
imul
xor
inc
fwait
pusha
into
mov
mov
ret
jbe
outsl
test
imul
xchg
dec
lcall
ds
jg
cwtl
add
sbb
cmc
and
pop
or
jmp
push
sub
js
xchg
jb
out
imul
xorb
nop
sub
push
xor
std
cmpsl
stos
inc
dec
sbb
jbe
xor
xor
add
sbb
rcll
aaa
xor
push
insb
adc
hlt
jno
rclb
and
pop
in
bound
add
sub
test
in
das
rcrb
daa
stos
outsb
inc
sbb
push
or
cmp
pop
xor
adc
lock
es
std
pushf
xchg
inc
decb
dec
dec
or
push
add
pop
adc
add
xor
in
or
rcl
dec
repnz
addb
or
or
or
sbb
dec
xchg
mov
loop
pop
loopne
xor
mov
insb
cli
xchg
rcl
pusha
inc
lret
pop
out
add
xor
and
int3
adc
push
pop
lock
jbe
cltd
push
add
pop
test
sub
or
add
push
addb
test
adc
jl
pop
mov
neg
adc
loop
shlb
jb
and
gs
in
pop
icebp
jmp
adc
xor
sub
push
js
popf
add
mov
push
ljmp
push
ja
adc
pop
mov
add
shll
out
int3
shll
or
scas
pop
pop
stos
dec
int
xor
jmp
ror
lds
xchg
xorb
adc
ja
dec
push
xchg
sub
fisubl
and
sbb
sarl
jmp
push
push
mov
nop
add
dec
xchg
inc
push
adc
inc
lods
mov
adc
sbb
jmp
sbb
repz
shll
fidivs
into
adc
add
xchg
ds
jge
addb
sbb
cmp
pusha
push
sbb
sub
or
pop
push
fisttpl
les
sub
jmp
andb
sbb
sbb
inc
push
cmpsl
fistpl
jbe
dec
mov
addr16
orb
xor
mov
stos
and
loop
sbb
adc
push
je
push
add
push
adc
loope
cmpsl
sub
dec
in
fdivrp
les
pop
push
mov
jl
jecxz
jne
adc
lods
inc
shrb
jmp
fadds
adc
mov
inc
pop
rorl
push
fisttps
sub
adc
sti
push
daa
mov
mov
sub
or
call
clc
out
sbb
push
cs
push
lock
and
jg
mov
or
hlt
not
or
jns
xchg
fistpl
lods
jae
subl
call
ljmp
outsb
dec
aas
pop
pusha
jp
mov
xor
xchg
inc
mov
mov
fwait
add
jp
ja
lds
loopne
subl
sub
loopne
jno
mov
or
jp
lcall
inc
dec
mov
and
lret
add
cli
out
push
mov
adc
out
pop
push
or
ficoml
or
sub
jns
sbb
aam
or
in
add
mov
xor
jle
dec
popa
xor
adcl
scas
and
ja
and
call
rolb
xor
rcl
out
gs
sbb
and
add
or
sub
cmp
sbb
sahf
push
push
mov
fmull
cwtl
dec
push
xor
lods
sbb
out
pop
stos
cmp
xchg
mov
push
jb
inc
fcompl
and
je
lahf
int3
repnz
pop
pop
xchg
adcb
sbb
cs
push
xchg
cmp
dec
inc
or
xor
jb
push
add
push
sub
add
pop
push
adc
adc
jno
mul
push
inc
mov
out
daa
mov
xor
int
mov
clc
push
pop
push
loopne
push
mov
dec
mov
fldt
add
and
adc
sub
xor
adc
repz
pop
cmp
dec
jg
test
cltd
xor
pusha
cli
push
jae
pusha
pop
sbb
and
pop
divl
xor
addr16
add
ficoms
call
sub
out
sub
push
add
push
or
push
push
test
pop
jmp
mov
xor
pop
testb
pop
add
push
aam
sub
and
cld
push
push
mov
rorl
ret
fsubp
subl
pop
not
xor
dec
push
test
bound
in
repz
mov
jbe
xor
xor
pushf
and
pop
adc
sahf
addb
cs
loop
dec
test
pop
xchg
ret
xchg
shlb
sub
push
mov
push
pushf
mov
push
sbb
mov
push
sub
ret
cs
ljmp
mov
sti
pop
fldl
pop
imul
mov
push
jge
inc
mov
mov
inc
insl
hlt
sub
lods
mov
fs
repnz
add
fdivr
jge
mov
jae
mov
push
jmp
lcall
pop
sub
add
pop
ss
inc
inc
sbb
popa
xchg
inc
push
push
adc
int
add
add
lds
lahf
dec
jmp
aad
mov
rcll
inc
jmp
fmulp
popf
push
dec
pop
and
sub
mov
sbb
or
xchg
stos
and
mov
repnz
push
movsl
jb
mov
inc
sbb
addl
jmp
xorb
mov
shll
test
jbe
pop
mov
dec
mov
pop
test
inc
lret
sbb
and
or
jl
mov
adcl
lock
sub
jmp
shl
loop
popf
insb
pop
jbe
xor
and
lock
sub
push
xchg
iret
outsl
adc
xor
inc
push
mov
cltd
xorb
iret
sahf
or
push
or
clc
aam
inc
xchg
sbb
mov
inc
outsb
sbbb
scas
imul
push
adc
cld
insl
dec
lods
and
inc
xor
in
pop
xchg
xchg
mov
stc
dec
jnp
dec
jge
add
push
or
loopne
in
xor
sbb
pop
sub
popf
in
sub
pop
jne
out
pop
mov
xchg
and
scas
and
push
push
cli
inc
dec
xchg
inc
or
sub
cmp
fs
xor
sbb
mov
push
push
mov
js
pop
fisttpll
inc
xlat
stos
adc
repz
xor
jbe
inc
lea
mov
xchg
xor
jecxz
rcll
push
inc
mov
and
repnz
mov
push
inc
cmpsl
movsb
mov
jle
dec
push
push
rcr
cwtl
pop
lret
mull
mov
add
pop
popa
mov
push
jb
dec
lret
call
pop
jmp
testl
loopne
push
or
stc
mov
pop
les
lock
cmpb
dec
add
cmp
lock
mov
stos
call
pop
mov
daa
jl
sbb
leave
mov
fmuls
cmp
or
es
lcall
fimuls
jp
mov
call
dec
cld
add
jle
loope
adc
sti
bound
shl
mov
shrl
and
das
mov
inc
push
push
mov
inc
pusha
inc
adc
push
mov
repnz
mov
add
sub
sbb
sub
pop
xchg
add
push
pop
neg
inc
sarb
jmp
lds
std
out
pusha
mov
add
bound
jge
add
add
pop
loopne
sub
mov
pop
das
mov
pop
shlb
add
daa
shl
inc
pusha
adc
loope
jae
inc
sahf
int
mov
jno
scas
add
xchg
aaa
add
push
in
mov
mov
cmc
inc
sub
out
and
iret
and
jnp
sub
sub
pop
mov
pop
push
lret
adc
and
es
xchg
sar
sub
xor
cmp
out
or
popa
adc
loope
ljmp
sub
gs
cs
scas
iret
into
pop
jo
bound
mov
fcomps
push
lret
push
mov
push
cmp
pop
rol
loope
adcl
jnp
cmpsl
dec
jbe
mov
jmp
popf
adc
daa
dec
fs
pop
aad
sahf
imul
add
inc
jns
mov
lret
pop
adc
add
sbb
pop
add
insb
add
ret
add
lock
je
sub
xchg
adc
aaa
mov
and
push
push
es
or
subl
mov
or
sub
push
adc
inc
jg
sar
mov
std
xchg
add
pusha
push
cmp
test
into
test
mov
inc
sub
ja
ficomps
mov
adcl
ds
jb
adc
popa
int
cmp
ss
js
iret
fstpt
dec
icebp
sarl
or
bound
xor
fstp
mov
adc
sub
cs
add
pop
jmp
scas
mov
adc
jb
cmp
cmc
rolb
testb
sbb
gs
jbe
add
bound
pusha
sub
xor
stos
sbbl
jg
xchg
add
fists
jmp
pop
and
push
mov
cmp
jmp
pop
xor
rcr
addb
lret
dec
fstps
insl
jg
lahf
push
xchg
mov
jle
pusha
lea
das
push
outsl
mov
jp
jns
scas
mov
jecxz
mov
nop
add
sub
repz
sbb
into
cld
cmp
jmp
loop
pushf
xor
shrb
xor
bound
and
xchg
inc
movsb
cmp
cmpsl
mov
dec
bound
in
push
scas
fwait
adc
in
sub
push
fadds
enter
add
daa
push
inc
out
imulb
dec
xlat
aas
jmp
or
xchg
arpl
mov
shlb
mov
jl
pop
jmp
ret
ss
cmpb
adc
xchg
push
shll
aaa
add
test
or
push
std
and
movsl
adcb
pop
fwait
adc
or
jmp
sbb
cli
sbb
fdivl
add
movl
xacquire
sarl
add
or
push
outsl
sub
add
sbb
aad
stos
mov
mov
and
or
out
dec
hlt
fmull
push
push
cs
lods
xor
fdiv
lret
dec
pop
mov
cmp
or
add
jmp
add
sub
sub
cmp
je
addr16
out
jl
fs
jmp
pop
std
pop
insl
or
and
mov
popa
pop
dec
or
cmc
pop
jg
mov
cld
repz
aad
sbb
lods
cmp
std
imul
pusha
lret
jle
inc
mov
push
pop
mov
inc
fmulp
adc
mov
loopne
inc
shll
ljmp
inc
into
ds
out
push
push
insb
dec
imul
mov
negl
pop
and
mov
xchg
cmpsl
xchg
loope
cmp
xorb
fwait
push
xchg
sbb
adc
push
and
in
sub
mov
sub
adc
jne
push
lcall
mov
shll
and
jae
or
nop
inc
out
mov
shr
loop
leave
cmp
out
cli
jnp
adc
out
adc
lret
sahf
xchg
inc
daa
add
test
jb
mov
sbb
push
push
xor
sti
xchg
out
sub
sbb
ret
add
push
xor
pop
pushf
ds
or
xchg
jl
mov
jns
jecxz
mov
add
sub
popa
push
pop
andb
push
and
mov
das
jg
ficoml
push
dec
push
pop
sti
xor
cmp
jmp
mov
loopne
aas
jg
pop
xor
add
pop
pop
or
pushf
xor
jle
frstor
decb
in
or
push
add
pop
xor
and
mov
jle
inc
daa
inc
inc
imul
fiadds
lahf
lret
pop
jo
sbb
dec
cmp
xor
sbb
push
les
aas
mov
pop
mov
shr
push
data16
divb
dec
lahf
sub
sub
or
call
adc
add
outsb
add
add
mov
sub
std
push
rcrl
fs
mov
push
xor
imul
add
jg
mov
jne
cmp
jmp
fsts
fistpll
dec
xchg
inc
test
call
adc
jg
enter
mov
lret
pop
inc
mov
popf
dec
shll
dec
jl
dec
xchg
inc
and
aad
xchg
jmp
jge
cmp
scas
jp
daa
mov
add
in
ret
shll
pop
ja
hlt
dec
inc
inc
pop
ja
pop
shl
push
aam
rcrb
dec
xor
xor
sbb
add
pop
or
pusha
sub
dec
sub
push
pop
pop
and
xchg
xor
hlt
jl
inc
call
out
mov
fwait
js
pop
cwtl
fs
lcall
fs
xchg
push
pop
js
jle
sbb
xchg
rcr
into
negb
lock
xchg
das
cmp
and
mov
es
adc
jecxz
jmp
and
gs
imull
adcb
add
or
inc
mov
mov
adc
pop
push
cmpb
test
clc
in
adc
iret
popf
in
leave
jl
jnp
into
xchg
mov
nop
js
mov
stos
sbb
cmp
xchg
cmp
cmpsl
dec
jo
xchg
lret
and
add
mov
cs
in
add
or
mov
pusha
inc
add
nop
outsb
pslld
es
xchg
dec
sub
sbb
fisubrl
aam
jb
cld
dec
out
add
ficomps
xchg
dec
adc
loopne
and
inc
loopne
inc
inc
dec
inc
mov
insl
xchg
pusha
push
or
and
or
aad
icebp
sbb
jg
mov
lock
xlat
dec
jmp
mov
in
mov
dec
inc
jmp
pop
roll
outsl
sbb
ret
adc
repnz
add
jbe
ljmp
push
push
mov
dec
jp
and
push
test
in
mov
je
jmp
sbb
jmp
jno
sub
aas
mov
ds
leave
and
in
jmp
or
adc
and
mov
jmp
inc
inc
jmp
lret
outsl
push
mov
pop
int3
adc
xchg
int
loope
push
jecxz
sub
lea
or
popf
call
xchg
daa
xchg
mov
mov
push
mov
jmp
imul
inc
push
inc
add
test
movsl
xor
push
ffreep
push
dec
inc
jecxz
dec
cltd
subb
add
test
repnz
jbe
xor
xchg
push
jge
inc
mov
push
jg
arpl
out
push
adc
xchg
out
fldt
mov
jo
sbb
dec
jne
add
mov
rorl
add
pop
ljmp
scas
or
stos
in
and
mov
sbb
nop
push
add
sub
nop
decl
movsb
repnz
mov
aas
pop
add
cmp
sbb
pop
out
inc
dec
push
adc
push
mov
call
push
jl
ret
movsb
push
inc
ret
lret
addb
adc
xchg
push
inc
lret
mov
jl
mov
mov
bound
sub
or
or
pop
loope
jge
pop
mov
lcall
adc
in
sub
and
fdivrs
dec
faddl
fadds
xor
in
fs
pusha
out
stos
jae
insl
in
testl
mov
jmp
cmpsl
jb
cmp
mov
or
sbb
xor
lgdtl
adc
add
inc
sub
or
xchg
sub
push
fs
push
rdtsc
or
pop
sbb
loopne
add
cwtl
cmc
add
xor
lds
dec
and
inc
stc
scas
add
test
aas
icebp
in
xor
dec
adc
jmp
fldenv
pop
insl
pop
lds
xchg
imul
ret
sarb
jnp
xchg
mov
push
addr16
ljmp
adcb
sti
mov
mov
sub
mov
roll
dec
push
fsubs
lret
daa
icebp
jbe
sbb
pop
cmpsb
daa
push
movsl
pop
sub
or
push
xlat
push
cmp
sub
pop
call
push
push
mov
sahf
xlat
inc
cmp
or
mov
jle
and
clc
inc
movsb
or
lret
js
les
sub
addr16
jmp
ret
cwtl
cld
jmp
test
xchg
cltd
rcrl
jp
or
push
sbb
out
adc
mov
repnz
xor
pop
popw
adc
subb
repz
inc
push
and
rcrl
pop
dec
jo
es
push
imul
cmp
dec
sub
and
add
xchg
mov
ss
add
push
push
add
lds
pop
dec
add
in
cmp
jo
popf
sbb
push
push
add
neg
jo
daa
pop
inc
icebp
addr16
or
push
sub
inc
mov
imul
xor
pop
mov
ja
cs
mov
sbb
dec
sub
add
pop
ret
add
adc
push
pop
dec
jle
es
out
or
mov
movb
test
inc
loopne
and
push
pop
not
clc
jl
adc
sub
dec
jmp
adc
add
sarb
push
pusha
pop
pop
mov
jp
gs
push
jmp
push
pop
aam
or
or
and
aas
mov
xor
les
fsubrs
mov
fisubl
lret
mov
push
pop
call
aad
jns
or
push
ljmp
xchg
inc
mov
je
lods
outsl
aad
ret
adc
adc
push
sbb
cmp
adc
xor
enter
dec
jle
add
hlt
dec
je
jge
movb
and
ret
ljmp
xor
mov
dec
jmp
ret
lret
or
pop
mov
add
sub
lods
jle
pop
add
rcll
adc
lock
sub
call
in
subl
xlat
or
xchg
call
sub
and
nop
es
jno
pusha
add
inc
dec
jae
push
mov
pop
js
inc
inc
popa
mov
stos
cs
dec
xchg
or
or
or
adc
das
push
jmp
lods
cmp
sub
xlat
into
add
dec
adc
add
das
cltd
mov
imul
iret
push
rcll
cmpl
insb
dec
lock
pop
aas
dec
div
mov
icebp
dec
sub
pop
dec
add
sar
sbb
dec
or
add
shrb
dec
pop
lock
sub
sub
xor
dec
dec
sub
adc
push
mov
push
outsb
cmpsb
or
pop
mov
mov
xor
or
push
pop
inc
fisttpl
clc
dec
cmp
mov
mov
mov
sbb
mov
add
xor
push
xor
jne
add
pop
outsl
adc
shrb
daa
and
xchg
out
add
sub
adc
or
jmp
mov
mov
cmpsb
add
cmp
dec
jmp
outsb
fsubs
push
mov
out
and
inc
mov
dec
cmp
jmp
call
xor
call
cwtl
inc
mov
cmpsb
jo
mov
sti
jmp
les
jle
and
clc
sahf
jg
mov
and
ljmp
sahf
jne
jmp
add
dec
cli
dec
clc
in
daa
sub
push
inc
push
xor
js
cmp
addb
gs
jg
arpl
sbb
sub
orl
rorl
call
and
mov
stos
and
popf
lock
rolb
adc
pop
or
push
sbb
jmp
sarl
inc
call
sub
dec
add
out
add
insl
repz
cmp
add
cli
and
outsb
ja
add
imul
mov
out
sbb
sbb
add
rclb
push
push
shr
or
fs
or
sbb
mov
mov
xchg
xchg
fldt
or
neg
add
inc
es
push
pop
pushl
lea
pop
cs
or
jle
xor
dec
shrb
pop
sbb
sbb
and
ja
pop
xor
jb
roll
int3
pop
push
push
insl
test
fsubrs
popf
dec
or
add
sub
push
js
call
dec
popa
xor
sub
add
xchg
sub
add
mov
xor
ds
xor
jb
adcl
cmpsl
xor
inc
jne
imul
cmpsb
shll
js
addb
xchg
mov
les
rclb
mov
adc
scas
insb
call
and
decl
and
dec
push
inc
fstpl
sbb
sbb
mov
xchg
popa
pop
lods
in
cli
adc
adc
ja
or
popa
xor
and
mov
in
mov
inc
mov
add
int
xor
add
in
rorl
aam
push
test
mov
vpsllw
mov
outsl
xchg
adc
ja
xor
push
fs
enter
or
test
pop
insl
xor
xlat
pop
int3
in
sar
and
cmp
movsl
clc
sub
mov
stc
dec
and
fsubrl
mov
or
mov
sub
sbb
inc
repz
mov
pop
sub
adc
ficomps
shll
icebp
pop
jp
dec
push
or
cmp
in
fcompl
in
clc
test
push
cltd
mov
add
lahf
fcoms
loope
jbe
popf
or
push
lret
icebp
lret
movsb
sbb
ja
push
mov
leave
cli
jmp
xor
xor
cli
and
loope
mov
push
mov
sub
std
aad
inc
stc
push
jmp
insl
push
fldl
sahf
or
aad
sbb
mov
jmp
psubd
sub
rclb
add
jmp
stc
inc
lret
add
aam
sub
ljmp
stos
add
outsb
fistl
push
xchg
int3
call
je
xchg
cmp
lods
xor
jne
aas
popf
dec
in
std
loop
mov
add
adc
adc
jmp
pop
outsl
orl
dec
lods
fisttps
xchg
nop
scas
jae
popf
lcall
push
iret
cmp
mov
sbb
xchg
in
jne
int
jle
and
add
cmpb
pop
pop
push
xlat
mov
jmp
xchg
loop
icebp
push
inc
xchg
das
push
aaa
add
add
outsb
repnz
pop
call
shll
nop
inc
and
negb
cmp
clc
pop
lret
repz
in
lahf
test
adc
out
add
mov
xchg
sbb
loope
lock
push
mov
ret
or
lods
add
sub
dec
push
ljmp
mov
adc
dec
cmp
xor
xor
mov
sbb
mov
psadbw
jmp
pop
adc
cs
cmp
nop
fiaddl
dec
loop
pop
pop
jmp
mov
or
mov
push
and
mov
jae
sbb
pop
out
push
cmpl
cld
xor
ret
cmp
adc
mov
ffreep
mov
cmp
ret
sbb
gs
mov
adc
cwtl
aam
scas
add
outsb
jno
not
cmp
and
fidivrl
mov
or
push
das
das
jns
cmpsl
sub
mov
sub
pop
scas
add
sub
jmp
lret
pop
dec
cmpsl
sbb
mul
push
ds
inc
je
gs
push
push
xor
dec
jnp
fiaddl
mov
mov
adc
sub
add
and
dec
in
insl
xchg
scas
imul
cmp
ljmp
xor
ja
jns
lods
push
push
int3
insb
sbb
mov
rorl
ret
xor
mov
dec
or
repnz
mov
or
pop
mov
inc
call
decl
pop
cmp
mov
add
jmp
jmp
add
add
jmp
pop
loop
inc
dec
sbb
xlat
lret
call
in
pop
out
adcb
xor
scas
pop
mov
xlat
push
sub
daa
pop
and
int3
ss
mov
mov
test
in
or
push
dec
xchg
push
roll
push
lret
lods
testb
pop
adc
repnz
inc
or
nop
fs
scas
inc
or
int3
sbb
xor
push
push
sub
push
jmp
cltd
ret
jg
lock
xchg
shrl
xor
jno
and
xor
dec
stc
into
loope
scas
or
mov
jb
sarb
dec
repz
pop
or
sub
or
lmsw
negb
mov
mov
dec
push
push
icebp
mov
insl
dec
sub
js
push
in
and
jns
cmp
sub
sub
pop
cltd
adc
push
pop
push
adc
inc
inc
mov
lahf
add
push
push
and
inc
jmp
or
adc
repnz
sub
inc
xchg
iret
mov
mov
add
pop
dec
das
mov
sbb
sahf
sub
xorb
inc
jmp
xor
push
pop
test
jg
cwtl
sub
or
mov
mov
inc
aam
mov
and
popa
mov
data16
pop
bound
jmp
dec
dec
mov
sbb
jns
adc
dec
gs
es
sub
sarl
inc
mov
sbb
and
adc
inc
or
pushf
or
jmp
inc
push
aaa
call
mov
es
ds
mov
cs
pop
push
jns
push
adc
jne
in
sti
mov
cmp
or
dec
aam
jae
push
stc
xchg
push
mov
xor
outsb
push
push
jle
push
jle
and
jbe
cmc
stos
jle
sbb
mov
pop
sbb
add
jae
mov
dec
scas
dec
out
dec
mov
cli
xchg
xor
sbb
xlat
out
jne
mov
and
inc
xchg
jno
lret
fmul
pop
or
orb
in
call
dec
in
adc
in
pop
mov
leave
push
rclb
addb
mov
inc
mov
idiv
aaa
pop
cmp
mov
mov
add
adc
sub
jmp
push
cs
test
orl
cld
mov
jmp
orl
jg
addl
and
adc
inc
push
pop
in
cmpsl
mov
jo
pop
xchg
mov
daa
pop
loope
cmp
cmp
jbe
push
mov
dec
push
mov
push
xor
mov
or
mov
in
repz
dec
addr16
pop
subl
cwtl
sub
ret
in
sbb
sbb
jo
repnz
mov
xchg
fstpl
pop
inc
push
int3
fimuls
mov
cmp
lock
inc
inc
jmp
dec
lods
add
push
movsl
add
cs
scas
lds
xchg
push
xorl
loopne
cmp
add
jnp
fwait
das
loop
xlat
jmp
or
mov
aad
stc
inc
sub
imul
popf
add
les
mov
add
xchg
cmc
aam
jmp
adc
push
inc
cmp
fldcw
xchg
dec
mov
cmp
sbb
push
inc
xchg
sub
in
pop
xor
add
push
mov
cmp
sub
jmp
jecxz
and
cmp
push
enter
mov
pop
push
pop
es
jp
fldl
mov
iret
or
add
dec
jp
pusha
mov
pusha
daa
add
ffreep
bt
loope
xchg
jns
xor
fists
pop
xor
lock
pop
pop
mov
sub
mov
pop
scas
or
inc
add
aaa
push
push
cmpsl
mov
xchg
loop
inc
shlb
cli
ret
clc
mov
pop
xor
fsub
addb
pop
push
movsl
jae
pop
arpl
xchg
sub
idivb
sti
stos
mov
mov
push
push
add
es
bound
pop
add
scas
push
loop
sub
pop
push
mov
and
add
int
and
pop
add
sub
fdivs
shl
pop
jmp
testb
add
shlb
sub
xor
jns
sbb
push
push
loop
pop
hlt
sbb
xor
aad
mov
push
ret
daa
push
iret
mov
pusha
mov
jmp
push
jl
add
pop
sbb
push
dec
cmpsl
jne
testb
ret
xor
or
add
xchg
push
scas
fnstsw
mov
jecxz
cld
mov
sbbb
xor
push
movsl
mov
je
nop
xchg
push
dec
adc
push
cltd
xor
add
pop
jp
pusha
add
add
jmp
mov
jge
push
test
ja
push
pop
sub
syscall
and
cli
stc
dec
ljmp
add
sub
aad
clc
mov
jnp
adc
or
inc
jo
add
test
mov
pop
or
mov
jmp
or
pusha
xor
ret
test
outsl
shrb
mov
lock
jl
rorl
mov
adc
jle
ret
fmul
lret
sbb
mov
ja
lods
xor
or
fcomps
lcall
dec
insl
and
loopne
mov
jne
shrl
adc
icebp
pop
sub
cli
sbb
or
cmp
mov
and
movsb
lahf
xchg
lcall
lret
clc
pop
jg
movl
xor
shlb
ds
pusha
add
mov
daa
sub
or
pop
scas
add
imul
adc
xchg
mov
push
pop
dec
loop
and
aas
dec
pop
lret
daa
jb
xchg
rclb
dec
mov
cwtl
lcall
jmp
mov
ljmp
cwtl
add
pop
dec
loopne
mov
add
das
mov
push
ljmp
ljmp
pop
out
enter
int
rcll
and
add
je
add
fs
hlt
jae
jnp
adc
insb
or
and
mov
lcall
jae
jmp
or
sahf
or
mov
hlt
sub
pop
aad
xchg
pop
loop
shll
xlat
pop
stc
iret
cmp
inc
rcr
call
ret
dec
imul
test
in
jmp
jmp
loop
mov
shll
repnz
or
sbb
dec
nop
pop
sahf
mov
fcomps
mov
daa
add
sbb
fucomip
push
adc
push
xchg
les
mov
adc
and
dec
cmp
mov
or
fsubrs
add
or
imul
lock
daa
jmp
jo
push
push
push
adc
fadd
sub
dec
mov
adc
bound
xchg
lods
xchg
stc
loop
pop
jle
dec
jge
mov
insb
pop
or
add
jne
arpl
mov
xor
dec
mov
mov
jnp
mov
repnz
add
fiaddl
add
inc
hlt
add
jmp
and
pop
mov
lahf
xor
dec
pop
loopne
ljmp
stos
jbe
jb
fmuls
dec
mov
or
adc
mov
pop
xlat
cwtl
ret
jmp
lret
mov
insb
cs
xor
pop
scas
and
pop
sbb
dec
outsb
ret
into
pop
dec
out
jmp
adc
jmp
mov
mov
and
movsb
xchg
loopne
mov
add
insl
or
and
add
or
fldcw
xlat
test
cld
xchg
adc
add
push
ds
inc
mov
xchg
push
pop
push
adc
xor
das
xchg
mov
aad
and
data16
pusha
stc
mov
ss
jbe
xor
dec
or
cld
repnz
xor
gs
nop
push
or
orb
inc
adc
and
pop
jmp
testb
lds
addr16
or
push
call
icebp
fisubs
jg
daa
popl
push
repnz
dec
in
pop
jp
add
jmp
push
repz
push
dec
lods
leave
add
fists
add
or
out
mov
shll
pop
cld
or
push
je
out
in
ljmp
or
sbb
loopne
and
daa
jmp
mov
daa
lcall
orl
stos
sbb
push
popa
push
pop
jmp
push
jns
add
inc
xor
adc
xchg
jecxz
push
cmp
mov
adc
insb
ljmp
xor
enter
gs
sub
ja
xchg
test
cltd
sti
int
jecxz
mov
push
push
push
test
cmp
add
mov
cld
sbb
xor
xchg
inc
mov
and
adc
jp
sub
loope
mov
jl
xor
mov
and
ljmp
dec
xchg
out
and
push
jle
cwtl
or
add
insl
neg
test
pop
testb
jle
rorl
pop
xor
cmp
sub
sub
sub
jmp
inc
int
roll
dec
inc
pop
inc
dec
sarb
jge
mov
ljmp
lock
jnp
pop
sub
jmp
enter
in
fbstp
sub
dec
push
filds
cmp
and
cmc
rorl
sbb
loop
in
popf
push
fwait
xor
mov
cmpl
aaa
jmp
mov
push
cli
mov
pop
mov
out
orb
cmc
ret
pop
sbb
pop
loopne
ret
mov
mov
push
das
push
jmp
push
lahf
add
dec
xor
shr
pusha
out
pop
ja
mov
pusha
test
xchg
pop
adc
or
sarb
dec
ja
push
dec
jo
das
pop
jg
mov
fs
add
sub
mov
push
dec
jne
int
rorb
or
adc
pop
pop
shll
gs
sbb
jb
mov
leave
sub
ljmp
imul
repnz
nop
pop
dec
dec
enter
add
jle
int
pop
pop
mov
daa
testl
sub
jnp
xor
ljmp
lahf
dec
mov
push
mov
subl
lcall
daa
add
lds
sbb
lret
and
gs
add
sub
push
mov
sub
adc
je
mov
jg
xchg
lds
pop
repz
andl
pop
and
mov
and
inc
adc
add
and
ret
rorb
js
dec
mov
jbe
or
pop
out
or
cmovl
jge
mov
inc
cmp
add
xor
not
xchg
or
mov
add
and
jmp
add
xor
inc
stos
xor
jbe
push
mov
dec
jecxz
adc
movl
in
and
and
iret
cld
push
das
les
and
or
sbb
push
les
inc
nop
popa
jbe
das
adc
jmp
jno
lods
lock
jp
add
cmp
push
xor
ret
mov
rol
loopne
or
pusha
push
pop
sub
add
and
mov
sub
in
mov
sub
in
and
inc
pop
movsl
arpl
iret
or
sbb
arpl
cwtl
mov
adc
mov
and
movsl
sahf
pop
lahf
dec
mov
jb
sbb
jmp
repnz
mov
mov
mov
xor
jmp
ja
or
divb
mov
cmc
xor
fnsave
cmp
add
fbstp
and
add
js
xchg
cmc
push
cmp
mov
aas
inc
pop
cmpsl
sbb
mov
pop
testb
inc
sub
pop
lock
pop
hlt
loop
add
mov
jle
insl
lock
sbb
aam
pop
dec
pushf
cmp
movsl
adc
loop
roll
data16
cmp
pop
fisubrl
clc
dec
testl
jmp
inc
lds
lret
xchg
sub
add
push
dec
push
out
dec
test
xor
jmp
jg
adc
jo
add
push
shl
out
iret
pusha
dec
dec
pop
pop
leave
imul
out
stos
addr16
les
pop
nop
push
addb
roll
and
add
ljmp
push
push
sub
mov
inc
xlat
data16
mov
int3
mov
jge
cmp
pop
push
gs
icebp
mov
ljmp
jmp
sbb
mov
sub
xchg
push
pop
in
sub
inc
fstl
cld
test
push
pusha
mov
push
divb
xor
inc
stc
xor
test
and
xadd
popf
push
cli
push
sbb
pop
add
pop
push
hlt
lods
add
ret
insb
enter
js
add
out
rcrb
push
cli
cs
bound
pop
lock
push
add
lds
mov
sub
mov
std
daa
mov
divl
inc
imulb
push
stc
xor
roll
xchg
xor
jmp
add
movups
dec
mov
pop
cmpb
sub
dec
inc
int
pop
pop
cmpsb
or
adc
nop
pop
add
imulb
xorl
ret
push
pushl
les
jg
add
dec
and
js
add
jo
jmp
nop
add
push
jns
or
faddl
dec
hlt
lock
jae
sbb
mov
dec
or
pop
pop
sub
xor
in
and
dec
push
jecxz
div
jbe
insb
out
out
xlat
sub
or
mov
pop
or
add
or
idiv
ret
test
pop
cwtl
pop
jmp
push
and
push
sbb
xchg
jmp
cmp
lods
cmc
sub
mov
push
xchg
add
mov
xchg
roll
outsb
jns
ljmp
mov
rorl
pop
ror
sub
jle
adc
aad
or
jg
xor
sub
or
mov
pop
push
aaa
addr16
shll
add
xchg
jne
pusha
jne
sbb
out
dec
push
test
jmp
xor
inc
xchg
pop
aad
cmc
dec
cmpsb
pop
sub
push
mov
lahf
pop
std
dec
rcll
or
test
popl
xor
pop
push
xchg
or
push
xchg
out
or
adc
lds
ljmp
adc
adc
dec
cmpsb
inc
pop
movsb
xchg
out
popa
jno
inc
aas
mov
lea
adc
add
out
sti
dec
pop
test
cmpb
ljmp
xor
cld
lods
movsl
daa
xchg
mov
pop
xchg
push
sub
mov
rorw
push
in
cmpb
sub
jnp
cwtl
mov
adc
outsb
inc
arpl
and
xor
jnp
mov
cwtl
and
loopne
pop
fs
push
lock
lret
rol
idivb
and
or
shll
pop
jecxz
dec
mov
cs
xor
sub
sub
mov
sub
out
pop
aad
sbb
adcl
scas
add
and
rcrl
sub
scas
xor
inc
pop
pop
mov
adc
adc
rcrb
add
cmp
jle
jmp
loope
dec
dec
dec
mov
dec
push
push
mov
xchg
mov
push
mov
ja
ljmp
out
pop
mov
inc
mov
inc
inc
negb
insl
popf
cmpb
inc
negl
pop
and
or
xor
in
cmp
dec
mov
add
pop
mov
inc
push
icebp
fmul
leave
and
mov
pop
sub
movsl
jg
jmp
stc
cltd
imul
push
and
daa
push
jbe
adc
ret
sbb
push
pop
adc
hlt
bound
push
pop
gs
movsb
push
adc
scas
in
mov
xchg
ja
add
xchg
push
sti
and
clc
sbb
gs
push
push
repz
xor
fwait
sbb
and
les
cltd
out
insb
xchg
lods
inc
ret
imul
sbb
aas
sbb
push
pop
add
xchg
pop
lods
imul
or
rorb
inc
sub
pop
or
push
and
mov
cmpsb
lret
imul
pop
sub
inc
xchg
add
mov
adc
aad
push
insb
cld
nop
pop
jge
cld
test
popf
pop
push
stc
mov
cmp
lret
imul
lock
popf
stc
ljmp
inc
in
add
xorb
push
mov
xor
out
aam
pop
ljmp
xchg
daa
xchg
jmp
xchg
push
int3
push
push
jmp
sub
fisttpll
mov
or
add
jmp
push
vpunpckhdq
movsl
add
push
push
add
in
or
mov
jg
adc
jnp
pop
ljmp
dec
pop
lret
cmp
out
and
pop
or
jge
and
out
mov
pop
bound
dec
lods
roll
insb
dec
pop
andl
push
pop
sub
push
push
jo
add
sub
aaa
cwtl
mov
jae
movsb
jmp
jecxz
inc
lods
inc
pop
not
adc
inc
push
sarb
jecxz
xchg
out
lret
stos
xor
dec
cmpb
cld
cmp
insl
pop
push
mov
push
cmp
sub
out
insb
repz
in
push
idivb
imul
rorl
fisubrs
lret
xchg
push
xor
dec
cs
push
xchg
pop
rcrb
pop
or
montmul
cmpsb
add
int3
dec
xor
mov
fildll
sti
dec
xor
xchg
push
test
jmp
dec
push
test
push
pop
pop
sbb
lock
inc
xor
jl
xor
mov
stos
xor
loope
mov
inc
and
pop
push
mov
enter
jp
js
sub
dec
cmp
adcl
imul
push
or
push
add
jp
out
push
mov
jle
lea
mov
xchg
pusha
aaa
test
pop
fs
andl
mov
test
and
cmp
sub
jbe
mov
inc
or
aad
fisubrs
test
loop
int
in
xchg
or
jg
es
or
pop
inc
in
rcr
push
inc
sbbl
jbe
aas
rcrl
mov
add
mov
clc
mov
ss
jo
iret
or
jno
sub
mov
pop
sbb
inc
pop
in
and
mov
cmp
out
inc
das
imul
pop
out
pop
test
sbb
or
xor
jle
cmp
fisttpll
loope
inc
fmul
push
sub
dec
pxor
stc
mov
sbb
or
sbb
push
rolb
arpl
popa
jmp
repz
or
test
bound
or
pop
clc
sub
outsb
sahf
sbb
idivl
add
daa
xchg
jns
sub
in
jp
lcall
push
std
dec
leave
es
lods
daa
imul
in
jo
xor
pop
leave
call
jmp
nop
loope
push
ss
or
dec
lcall
mov
add
out
arpl
jnp
sti
adcb
dec
ret
int3
sarb
xchg
pop
sub
pop
stos
dec
pop
out
or
push
movsb
ds
test
mov
push
mov
mull
pop
loope
push
sbbb
sub
inc
push
scas
lds
and
js
dec
push
pop
and
pop
sub
subl
shr
orb
lds
gs
mov
fsubrs
into
not
or
cwtl
jle
int
pushf
fs
aad
fimull
add
push
leave
and
mov
dec
ds
add
push
sbb
mov
add
ficoml
add
push
mov
add
rcrb
jae
outsl
js
icebp
jp
stos
xor
cmpl
dec
neg
inc
cli
test
cmp
add
jge
add
bound
inc
dec
add
divl
or
aaa
rol
pop
movsl
cmp
lock
pop
gs
add
mov
mov
or
pop
lods
popf
jnp
mov
minps
cmp
imul
sub
and
mov
cmc
pop
mov
rclb
jb
sub
dec
lret
xor
pop
or
pop
pop
scas
mov
push
daa
push
and
push
das
hlt
mov
mull
or
mov
outsl
and
jno
push
notb
cmp
loop
mov
call
in
pop
add
insb
xchg
out
data16
add
ret
cmp
loope
fisubs
out
and
and
and
add
rorl
jmp
pop
neg
xchg
sub
cmp
sbb
ret
add
adc
or
and
jmp
out
ds
enter
mov
adc
pop
dec
jmp
fiaddl
jg
fdivs
push
mov
enter
sub
sub
inc
cwtl
rcrb
out
pop
or
das
and
xor
lds
sbb
xor
jmp
fsubrs
es
or
fists
jno
subb
mov
pop
rcll
mov
ret
stc
push
and
mov
add
ja
into
arpl
in
adc
ficompl
aas
sti
jmp
dec
ss
std
cmp
push
out
mov
dec
neg
data16
jo
cmp
xchg
adc
lret
inc
mov
mov
sbb
xchg
xor
std
pop
outsl
popf
dec
xchg
add
dec
sub
sbb
in
das
push
lock
shrl
push
les
cli
xchg
sub
xor
shrl
xchg
aas
jo
and
andb
inc
push
and
popf
lahf
jle
shrb
pop
cmp
mov
add
loope
sub
mov
inc
dec
cmpsb
insl
cld
dec
data16
mov
fldl
movsl
scas
pop
pop
ds
jecxz
pop
dec
insb
pop
pop
lahf
push
out
test
dec
inc
test
inc
mov
mov
lea
mov
adc
mov
mov
pop
mov
adc
or
mov
xor
mov
push
imul
mov
add
pop
mov
push
mov
shr
mov
add
ret
enter
jg
sub
test
test
dec
pop
scas
sbb
fs
push
cmpsl
push
out
xor
js
dec
or
jmp
scas
jo,pt
mov
sub
dec
sbb
dec
add
inc
jp
int
sub
and
cmp
stos
out
dec
adc
add
push
xor
cmpb
add
int3
enter
pop
push
xchg
jle
inc
je
ds
notb
jns
loop
arpl
cmp
pop
fstp
out
int3
mov
fmulp
pop
inc
pop
sete
adc
scas
mov
add
mov
push
add
test
out
push
mov
dec
and
ljmp
mov
int
test
mov
jle
cld
jmp
pop
mov
iret
inc
add
mov
test
in
jmp
dec
push
mov
and
adc
ret
or
xor
repnz
push
add
mov
push
jns
iret
pop
pop
sub
std
in
movsb
cwtl
sub
das
dec
imul
test
jno
test
jne
mov
mov
leave
push
xor
dec
push
out
movsl
mov
xlat
arpl
sub
mov
push
je
or
jle
popa
sbbb
cltd
and
sub
sub
dec
outsl
inc
movsb
ret
pop
or
mov
push
and
jne
scas
faddl
xchg
out
and
xor
xor
cmpsl
mov
arpl
or
adc
add
sbb
jmp
jle
out
push
mov
repz
fsubl
orb
push
je
pop
adc
pop
popa
sbb
repnz
adc
add
jmp
mov
jle
das
jl
shrb
andb
pop
jne
sub
xchg
addb
outsb
push
add
add
add
out
push
xor
in
out
aaa
es
je
stos
sahf
cmpsl
fxch
fs
sub
mov
add
or
jnp
aaa
ret
sti
movsl
dec
call
pusha
mov
clc
lret
or
pop
lahf
js
cmpsl
jge
es
shll
xor
xor
fidivl
outsb
jae
add
sub
adc
mov
outsb
xchg
stos
pop
push
cs
pop
incb
addw
add
clc
movsb
out
stos
out
jbe
mov
pop
rcrl
push
jp
pop
clc
and
scas
add
js
sub
icebp
outsl
cmp
popa
pop
jnp
mov
cld
sub
push
mov
lds
push
incl
push
cld
rorb
fidivrs
movsl
test
stc
pop
lock
or
jo
fsubs
js
lods
lock
jmp
iret
dec
sub
dec
fisttpl
jb
ret
pop
pop
aaa
add
lret
push
sbb
jmp
jb
lods
jnp
adc
dec
push
lock
test
dec
inc
shrd
pop
jmp
dec
push
lea
lock
lds
xor
fs
dec
jnp
add
ret
daa
xor
jbe
push
fsubrp
stc
pop
dec
push
push
es
ss
dec
sbb
add
push
xor
jne
sbb
in
mov
in
jp
adc
adc
cltd
adc
and
adc
fs
xor
clc
xor
mov
into
mov
xchg
out
lods
dec
mov
xor
adc
pop
jmp
clc
mov
inc
dec
aam
enter
dec
dec
pop
dec
mov
add
sbbl
pop
outsb
adc
and
mov
das
sahf
and
sub
call
gs
shll
cld
inc
push
test
aas
sub
xchg
mov
sarb
pop
push
jae
and
pushl
rolb
popa
cmpb
or
in
cmpsl
push
clc
add
orb
sub
push
lret
cwtl
adc
inc
and
repnz
imul
push
adc
in
add
mov
pushf
inc
fdivr
pop
mov
and
iret
test
cs
js
stos
dec
mov
or
push
adc
inc
ljmp
dec
inc
bound
ret
iret
cmp
push
ja
sub
adc
call
cmpsl
pop
enter
addl
pop
cmc
push
mov
je
loope
insb
adc
push
call
jp
je
daa
out
jmp
mov
incb
addr16
cld
mov
or
sub
cmp
adc
mov
ror
add
cmp
jne
and
adc
subb
adc
dec
sti
push
stos
mov
adc
inc
sbb
xchg
pop
and
mov
mov
outsl
add
fld
negb
sub
std
push
jecxz
mov
jle
pop
cld
mov
jmp
adc
add
push
push
ror
sbb
je
cmc
xchg
add
sub
push
popf
jae
or
jl
add
or
cmp
push
fiaddl
add
xor
sub
mov
or
sub
pop
mov
add
sub
push
mov
in
mov
mov
and
jae
add
stc
repz
pop
or
push
cmpsl
in
jecxz
in
xchg
popa
or
xor
test
fwait
pop
idivl
in
add
jbe
xchg
inc
sbb
push
cmpsb
push
nop
mov
dec
jmp
mov
popf
fstps
add
push
int3
mov
jecxz
push
xchg
or
jno
xor
or
xchg
lcall
out
lcall
sub
inc
sub
sbb
gs
sub
sub
orb
add
not
out
cs
sub
mov
ficompl
and
movsl
das
mov
jle
mov
jne
add
std
test
lods
loopne
add
add
mov
sub
and
mov
js
daa
subl
pop
outsl
pop
and
daa
out
call
mov
or
jge
movsl
sbb
sti
pop
xchg
add
mov
repz
shrl
ljmp
lds
cmp
xchg
popa
jb
cmp
push
or
pop
mov
inc
inc
dec
xor
or
dec
push
ss
jne
arpl
cs
pop
jmp
shl
jmp
lret
push
es
lds
adc
adc
pop
and
or
mov
jne
movsl
daa
xchg
repnz
mov
test
xor
movl
sbb
cmp
in
out
call
mov
jp
pop
aad
addb
pop
fstpl
popf
in
sahf
push
jmp
lods
add
sbb
cmc
xchg
xchg
push
test
in
test
sub
sbb
lcall
gs
enter
sahf
pop
mov
push
cmp
idiv
add
mov
add
add
insl
or
push
mov
not
inc
in
xchg
jnp
add
add
jmp
push
dec
sbbb
fmul
mov
popa
pop
push
lock
adc
out
xor
inc
adc
ret
mov
xor
xor
pop
in
lret
pop
jno
push
inc
adc
sub
xor
fs
jmp
xlat
xor
jns
imul
pop
push
rcrb
inc
mov
jmp
leave
jns
push
ss
clc
movsl
imul
xor
lret
pop
or
adc
data16
or
pop
fbstp
fwait
sbb
bnd
push
ret
push
jne
daa
cmp
mov
dec
xchg
xchg
mov
push
jmp
ss
or
mov
mov
dec
xlat
sbb
push
pop
cmc
mov
test
xchg
push
push
rol
pop
inc
add
sub
xor
xchg
out
mov
stos
mov
in
pop
daa
sub
hlt
push
push
and
cli
rcrb
cmc
cmp
std
cld
sbb
ja
aam
loope
sbb
sub
cmp
pop
mov
movl
out
add
nopl
je
fimuls
inc
jmp
ja
pop
pop
xchg
push
cld
inc
push
cmp
pusha
sahf
dec
adc
pop
adc
notb
add
pop
adcb
add
dec
adc
pop
push
xor
mov
dec
scas
jne
mov
pop
adc
sbb
add
mov
out
push
mov
or
jg
sbb
add
and
pop
in
mov
daa
push
fsubs
dec
mov
or
jbe
or
ljmp
cmp
std
int3
push
ds
cmc
test
dec
mov
daa
ds
enter
mov
loope
add
cmp
in
pop
mov
jg
imul
js
in
push
xor
push
inc
cmpsb
das
mov
sub
sub
insl
pop
push
sbb
lods
pop
add
mov
jge
adc
xor
orl
call
jecxz
mov
mov
add
mov
nop
hlt
or
mov
movsl
popa
ja
cmp
pop
test
or
int3
movsb
cmovno
fsubrl
pop
call
cli
out
pop
add
xchg
mov
add
push
pop
inc
fs
sub
ret
imul
sub
lds
and
dec
shl
and
and
in
jmp
mov
cwtl
jae
inc
test
cmp
pop
or
imul
lock
shlb
jnp
mov
push
jne
stc
dec
rcl
popf
add
jl
ss
pop
jle
cmp
push
adc
nop
push
mov
push
inc
inc
dec
push
out
dec
pop
dec
dec
sbb
or
into
es
push
sbbb
xchg
jg
sub
mov
or
push
ljmp
sub
mov
push
push
jge
sarl
add
lcall
call
enter
outsl
out
or
jne
xor
cmpl
cmp
imul
mov
mov
nop
mov
in
xor
imul
adc
push
data16
dec
adc
mov
ds
addr16
mov
scas
adc
add
add
fistpl
or
out
add
push
ret
xchg
dec
or
sbb
inc
sbb
jg
adc
sub
outsb
xchg
mov
jmp
mov
cmp
outsl
fld
jae
push
and
adc
jo
lahf
adc
adc
adc
scas
push
push
or
idivb
add
jno
mov
jmp
cltd
sub
push
andb
xchg
bnd
inc
cmp
sub
jns
movsb
inc
decl
or
mov
jmp
sbb
pop
or
out
mov
pop
add
test
outsl
lahf
mov
jnp
mov
pop
shr
ja
cwtl
shr
jmp
lsl
sbb
mov
enter
adc
mov
sub
pusha
pop
mov
incb
leave
and
jmp
stos
aas
std
add
cmp
mov
test
ljmp
adc
les
aaa
pop
pop
adc
and
sbb
data16
mov
popf
sti
and
imul
pop
cs
lods
jl
test
adc
mov
or
or
cmp
sub
dec
adc
movsl
push
push
push
xor
addl
fcmovnu
mov
xchg
push
bound
pop
mov
cmp
pop
push
xchg
inc
push
mov
sarb
xchg
or
mov
das
adc
test
jb
pop
mov
roll
inc
or
xor
inc
mov
cmp
orl
sub
push
inc
add
mov
hlt
nop
sub
jae
adc
mov
shlb
inc
pop
sbb
or
cs
dec
je
inc
sahf
test
jo
cmp
sbb
in
cmp
out
add
mov
push
repnz
push
fimuls
mov
adc
xor
mov
lds
call
pop
lods
or
jg
leave
xor
add
pop
or
adc
sahf
add
dec
pop
inc
pop
add
cmpsb
jmp
shl
sbb
sub
jmp
pop
sub
jbe
add
push
shll
sub
enter
scas
xchg
mov
push
adc
inc
push
cli
adc
add
mov
rorl
add
dec
push
rorl
icebp
jg
inc
add
and
push
aaa
popf
or
jg
pop
mov
sub
inc
popa
xor
inc
push
cmc
jmp
pop
jge
xorb
dec
fidivrl
popa
adc
in
and
je
mov
add
xlat
cmp
lahf
imul
xchg
sbb
lret
jo
add
and
push
sub
mov
js
or
popf
repnz
and
in
mov
push
int
dec
mov
outsl
ss
out
and
add
insb
fcomps
and
pop
pop
hlt
sbb
or
daa
inc
cs
jns
push
les
add
inc
mov
xor
inc
lds
push
pop
sub
dec
and
adc
leave
aas
andb
pop
arpl
push
cmp
push
aaa
dec
jmp
add
jle
pop
push
add
mov
mov
cwtl
int3
or
mov
aas
push
xor
xor
mov
inc
imul
dec
mov
sbb
dec
pop
inc
adc
subl
adc
jo
inc
not
out
call
push
jmp
add
inc
dec
mov
mov
test
daa
push
inc
push
sbb
adcb
add
mov
pusha
jp
je
inc
cld
jae
ss
es
std
pusha
or
jno
or
jmp
add
addr16
add
push
inc
lret
adc
shlb
lea
add
clc
add
inc
fistpl
push
daa
ja
mov
jmp
in
cld
pop
pop
mov
les
jbe
jp
and
ret
push
adc
out
pop
pop
add
lock
lahf
daa
sub
out
pop
icebp
and
push
adc
gs
and
sub
in
nop
mov
push
cs
lret
push
bound
negb
adc
dec
pop
sbb
or
int3
aas
pop
aaa
xor
inc
icebp
nop
cmp
jo
mov
or
cld
adc
and
add
pop
hlt
sbb
adc
cmp
or
sub
das
mov
fs
lret
lea
clc
dec
outsl
push
lods
xor
mov
push
and
test
movsl
rol
or
sti
mov
push
xorb
jne,pn
cld
and
lock
mov
hlt
adc
sub
pop
push
out
mov
xchg
mov
xor
in
divb
add
jmp
lock
xor
pop
popf
loope
adc
adc
or
add
es
pop
dec
in
mov
pop
gs
lds
or
adc
not
or
out
inc
testl
mov
cmc
push
loop
jmp
xlat
movsb
mov
or
push
sub
js
mov
test
mov
dec
mov
ja
mov
stos
insb
mov
dec
mov
xlat
pop
dec
jmp
jbe
rcrb
adc
add
mov
push
sub
dec
pop
mov
dec
pop
push
and
or
test
pop
dec
dec
adc
stos
add
mov
jg
sub
xchg
dec
in
imul
in
push
pop
mov
sbb
xor
int
stos
arpl
xchg
xlat
mov
repnz
xchg
in
call
sub
adc
outsb
dec
call
out
jge
sub
xor
xor
xchg
xor
mov
ds
lock
push
and
xor
jge
adc
gs
stos
sub
dec
ds
jae
repnz
pusha
scas
lret
cltd
aas
jmp
mov
push
enter
cmp
jmp
mov
repz
mov
xor
scas
push
mov
pop
xor
loope
sbb
cmp
pop
mov
dec
ja
sahf
push
xchg
test
sub
jecxz
bound
sub
outsl
call
cmp
and
scas
dec
jnp
xor
dec
pop
das
jae
stos
dec
adc
add
adc
jne
pushf
or
push
xchg
dec
outsl
xor
cmp
into
sbb
jne
cmp
xchg
fs
add
or
push
xlat
xor
or
sub
maskmovq
push
pop
mov
and
and
or
and
js
jae
ret
push
ja
leave
add
icebp
add
cs
in
loopne
add
cmp
sub
jne
lcall
inc
jbe
cmpsb
push
pop
inc
inc
push
pop
mov
jae
sbb
jecxz
adc
push
sub
add
call
mov
dec
push
cmp
aaa
jmp
repz
dec
jecxz
lret
pmullw
mov
outsl
repz
enter
jge
rcr
jecxz
xchg
stos
andl
pop
or
push
jnp
insl
and
ret
push
dec
insb
jge
ss
jg
popf
orl
mov
pop
in
sub
daa
test
jnp
or
jg
dec
xchg
jl
xchg
mov
popa
pop
fucomi
jno
fs
sub
pop
andb
push
mov
inc
push
jl
pop
xchg
rorb
imul
xchg
cmp
les
sub
dec
jnp
dec
shl
or
cwtl
ljmp
and
aas
ret
jne
mov
mov
les
rcrb
std
jbe
test
mov
enter
fnsave
enter
and
pop
xor
sub
fldcw
dec
dec
cmp
cmp
sbb
popa
pusha
push
inc
add
mov
pop
jle
xchg
push
jge
inc
in
aad
push
cmp
push
mov
cwtl
xor
scas
out
ds
sbbb
jl
and
sub
pushf
dec
and
cmp
xor
cmp
test
mov
xchg
adc
sub
dec
lods
test
cmpsl
ret
push
in
insb
lods
push
rolb
and
cli
maxps
mov
daa
sbb
xor
push
add
or
jmp
pop
pop
inc
push
arpl
adc
or
pop
adc
mov
fsts
dec
lahf
out
fs
bound
ret
lds
fmull
popa
icebp
into
jmp
sub
mov
mov
jae
sub
mov
xchg
in
fsts
mov
das
pop
sahf
push
xchg
leave
rcr
or
lret
pop
pusha
ds
xlat
and
jl
lret
out
rorl
pop
cmp
test
add
and
push
push
dec
add
aad
icebp
dec
and
inc
or
aas
or
das
and
or
mov
pop
jae
mov
lds
jecxz
dec
les
pop
dec
inc
add
xchg
add
js
aas
inc
sub
or
outsb
mov
push
mov
mov
repz
cmp
and
dec
xor
mov
out
mov
mov
or
cmpsb
add
jmp
sti
lea
push
rorl
not
mov
mov
xchg
insl
push
jbe
pop
fstl
js
daa
filds
add
xor
sub
repnz
sbb
or
and
dec
gs
xorl
lahf
mov
pop
ljmp
scas
push
jg
in
inc
adc
pop
mov
xor
das
push
lahf
or
xchg
les
scas
mov
pop
mov
add
adc
sbb
push
inc
aad
in
mov
push
lods
dec
fnstsw
push
inc
or
push
adc
loopne
jg
fisubs
xchg
cmp
dec
aaa
mov
mov
pop
inc
int
jp
push
sub
xorl
jl
dec
sbb
or
es
rcll
jns
or
xchg
pop
cli
stc
push
leave
pop
mov
addr16
arpl
mov
ljmp
push
in
jmp
push
xchg
pop
nop
pusha
inc
add
xor
and
movsb
popa
jmp
sub
sub
movsb
jmp
rcll
mov
stos
dec
jno
xchg
add
das
adc
stos
les
jg
in
mov
loop
shrl
das
inc
icebp
mov
inc
inc
ficomps
ret
sbb
in
test
scas
inc
mov
xor
sarl
pop
push
add
push
imul
mov
repnz
js
mov
in
lahf
jl
push
int3
ret
push
push
pop
pop
clc
adc
sbbb
leave
jmp
push
mov
scas
xor
hlt
pop
jnp
add
jbe
in
test
or
fldl
mov
mov
xchg
adc
jnp
mov
cmc
in
imul
pop
mov
adc
pop
push
loopne
repz
xchg
inc
and
test
dec
shr
mov
add
and
out
movsb
sub
sarb
loope
sarl
scas
xor
jmp
push
orl
xor
push
push
loope
push
aad
sub
aad
pusha
test
add
sub
inc
cmpsb
push
or
cs
adc
add
cmpsl
mov
mov
xchg
pop
cld
mov
jns
xchg
icebp
cwtl
inc
pop
cmovle
mov
mov
int3
xchg
ficoms
and
ret
sbb
mov
push
cmpsl
cli
xchg
test
lahf
lds
inc
int3
xor
xchg
xchg
movsl
pop
int3
jl
jae
in
jmp
sti
xlat
pop
in
push
xor
push
pusha
pop
sub
mov
cmp
movsl
cmp
and
lea
int
push
sti
push
mov
lods
fisttps
call
and
mov
fcmovbe
inc
lahf
mull
add
xor
sti
add
movsl
push
in
adcb
mov
popf
sarl
xor
xchg
iret
dec
stos
mov
movsl
sbb
loopne
push
ja
sub
data16
icebp
cmp
pop
js
scas
sub
push
push
mov
cmp
cmp
xor
add
and
lock
movsb
pop
jmp
out
mov
sbb
push
mov
or
jmp
mov
push
mov
imul
or
xor
std
jp
or
aam
sub
cmc
and
push
sar
add
jl
adc
push
pop
testb
sbb
mov
and
out
cmp
jae
jnp
and
sbb
add
xor
or
mov
push
lods
addb
jge
sbb
incl
hlt
sub
fildl
sub
lods
daa
pop
xor
or
dec
cmp
pop
frstor
pop
cmpsb
xchg
lds
adc
mov
pop
in
shr
pop
dec
and
cmp
arpl
popa
loopne
adc
daa
xchg
not
push
arpl
out
shrl
ret
mov
mov
inc
fdivrl
mov
jl
mov
imul
pushfw
cwtl
jae
xchg
cs
xchg
xchg
sbb
je
jbe
and
mov
jl,pt
and
push
or
das
jns
lods
loope
pop
nop
jae
sub
xor
or
dec
xor
imul
cmp
testl
add
roll
pop
loop
push
lods
adc
mov
enter
inc
or
ret
test
cmpsb
add
push
sub
dec
add
xchg
popa
rcll
push
inc
jbe
sbb
cmc
cmp
loopne
incb
pop
xchg
or
mov
es
jne
add
lret
adc
jns
xor
icebp
fcomps
data16
lar
test
sub
mov
ret
jge
jp
mov
mov
int
adc
jge
push
mov
or
mov
inc
cltd
fisttps
or
jb
lahf
inc
pop
mov
lret
adc
cmpsl
add
add
jmp
loop
adcb
adc
insb
mov
test
and
cwtl
mov
xchg
mov
test
outsl
shl
ss
and
push
leave
es
lahf
test
pop
outsl
xor
lds
les
test
stos
enter
data16
sub
or
pushf
into
xor
stos
and
and
sub
cld
bnd
test
add
imul
mov
fldt
mov
mov
cmp
outsb
mov
pop
jg
ljmp
mov
nop
fistl
imul
test
xor
inc
ficoms
sub
push
push
adc
xor
push
jmp
mov
xchg
fwait
cmp
mov
add
xor
add
push
mov
add
and
les
or
lds
outsb
or
lock
cmp
xor
shr
inc
icebp
add
stos
pushf
ja
fldl2e
in
push
out
out
inc
out
cli
mov
push
sbb
push
cmp
add
rorl
xchg
push
aas
sub
mov
and
mov
popa
adc
imul
jg
dec
push
xor
ret
sbb
iret
shlb
rorb
in
xor
rcr
or
jae
push
xor
or
lods
shl
push
inc
xor
adc
sbb
mov
xor
jmp
mov
rorl
mov
and
sub
mov
xor
psubusb
test
pushf
xor
sbb
cmp
test
aaa
sahf
inc
sbb
xchg
arpl
ja
mov
add
inc
jo
or
adc
test
sbb
ror
imul
or
and
aas
sub
or
and
push
and
mov
jno
push
mov
push
mov
adc
and
outsb
enter
icebp
xchg
mov
cmpsl
mov
lock
std
in
ds
out
push
pop
mov
loop
pop
repz
pop
or
repnz
imul
call
imul
in
xchg
push
ret
mov
pushf
dec
or
pop
pop
xor
test
int
sub
inc
mov
sti
add
cmp
sub
shr
add
fwait
arpl
add
xchg
imul
pop
scas
dec
in
mov
add
hlt
cwtl
add
bound
mov
pop
add
dec
cmp
daa
push
sbb
cmp
cmp
push
sub
inc
daa
dec
lret
lods
pop
fcompl
jno
push
movsb
dec
push
ret
gs
movsl
fstl
mov
lock
sbb
mov
mov
lods
pop
or
fcompl
cwtl
insl
dec
pop
push
rorl
test
out
pop
cmp
xchg
fdivr
jns
or
pop
scas
xchg
imul
xchg
bound
pushf
mov
out
dec
xchg
jle
push
divl
mov
xor
loope
outsb
mov
and
das
jmp
push
loope
jmp
add
add
sub
push
ja
xchg
sub
outsb
sub
pusha
mov
adc
daa
decl
pop
mov
xchg
push
test
jecxz
and
pop
out
mov
fdivl
or
dec
sub
cmp
cmp
test
add
pop
aas
daa
sub
inc
jp
cmp
shll
or
popa
lds
ret
pop
inc
mov
push
or
or
pop
mov
popa
push
adc
inc
inc
jp
and
mov
aas
fbstp
scas
add
pop
xor
mov
pop
sub
pop
insb
xchg
test
adc
xor
push
mov
add
not
enter
lds
shr
outsb
bound
mov
push
or
and
in
testb
and
mov
pusha
ret
push
and
jo
mov
sub
xchg
mov
pop
rolb
inc
mov
inc
mov
cmp
cmpb
setne
not
push
fldl
in
adc
das
orb
adc
pusha
sub
jne
add
pop
hlt
push
pop
aas
repnz
xchg
sub
fldl
cmp
idiv
push
jle
jnp
lcall
ret
jo
pop
fildl
movsl
loopne
mov
in
repnz
pop
in
ficoml
loopne
inc
mov
jbe
jecxz
xchg
lock
addr16
insb
and
ret
mov
enter
mov
loope
ljmp
cmp
ja
icebp
sub
jb
ljmp
mov
fadd
push
add
mov
jmp
imul
je
add
inc
scas
pusha
push
jmp
outsl
pop
sbb
ja
xor
es
lods
cmpl
push
je
mov
pusha
sbb
call
shl
sub
jl
sbb
pop
ret
pop
ss
push
xchg
arpl
jmp
shl
or
mov
push
jle
cmp
push
add
pop
pop
not
jmp
sti
push
push
fwait
xorl
rcrb
test
subb
mov
push
push
push
insb
pop
jns
push
mull
daa
sub
pop
movsb
mov
loopne
pop
cs
rcrl
icebp
std
jl
and
cmp
jge
addl
dec
sub
adc
gs
rcr
add
jmp
mov
pop
cmp
cmp
push
fnstcw
add
fildl
sbb
rclb
fstl
jns
cmpsb
lds
test
or
inc
jnp
inc
movsb
pop
adc
inc
sbb
mov
mov
add
hlt
adc
sarl
lods
cmp
jp
or
or
test
push
mov
xor
add
add
or
add
and
mov
push
mov
pop
scas
cmovnp
je
movsl
rolb
pop
jno
pushl
dec
out
dec
std
mov
or
and
pop
pop
repnz
xchg
mov
gs
lds
jl
jmp
sub
mov
repz
sbb
inc
filds
xchg
aas
mov
pop
sbb
mov
cmpsl
or
or
stos
adc
lcall
hlt
and
add
inc
sti
sub
jb
pop
nop
pop
sub
add
xor
mov
jb
movsl
add
test
xchg
lret
aam
hlt
pop
sbb
adc
scas
ljmp
add
or
sahf
adc
int
mov
aad
shl
add
adc
pop
dec
mov
sub
dec
test
add
nop
inc
inc
push
test
mov
add
inc
fnstsw
pop
jmp
and
cs
pop
fstl
mov
mov
add
sbb
inc
pushf
ds
xor
scas
fdivs
pop
pop
mov
lods
pushf
daa
call
push
les
jecxz
nop
xchg
add
cmp
adcb
jo
adc
je
outsb
shlb
mov
pop
es
sbb
push
and
les
hlt
inc
jmp
pop
pushf
js
adc
negb
ja
outsl
hlt
cmpsb
pop
cli
xchg
mov
add
out
sti
push
cmp
inc
in
xor
popf
stc
xor
lcall
or
cmp
jmp
fbstp
pop
inc
add
ds
jno
ret
int3
jp
subb
inc
push
or
in
xchg
adc
testb
mov
mov
mov
rcrb
addl
add
dec
repnz
in
es
fsubrs
xchg
adc
jge
ds
sbb
leave
and
clc
pop
pop
insb
das
inc
mov
cmc
push
and
push
push
bound
lock
in
push
mov
xchg
jp
inc
daa
dec
clc
addr16
cmp
add
mov
cmp
int
or
and
xchg
cmp
cld
mov
outsl
push
mov
inc
xor
mov
inc
pop
cmpl
dec
cmpsl
shrl
cmpsb
xor
pop
inc
sub
xor
es
mov
fs
or
mov
push
pop
cwtl
add
or
into
stc
sub
fsub
inc
pop
inc
cli
pusha
shrl
je
jmp
and
add
jg
addb
sbb
addb
stos
inc
add
mov
jmp
lret
dec
xchg
sbb
jo
cmp
sub
sbbl
and
or
mov
stos
add
xor
outsl
or
jmp
clc
pop
incb
adc
cmp
adc
ljmp
or
add
jb
mov
mov
push
pop
push
fimull
xlat
push
sub
leave
mov
dec
mov
rcll
in
fiadds
push
scas
fidivs
or
pop
mov
sub
test
adc
mov
adc
iret
cli
sub
jae
test
xor
mov
or
cmp
jp
aaa
ljmp
pop
mov
pop
es
jno
fistpl
cwtl
xchg
mov
lds
test
dec
rcrl
movsl
adc
test
mov
repz
in
mov
ret
andb
repz
push
or
mov
fcmove
mov
push
xor
cmp
shl
sbb
std
mov
push
and
push
mov
outsl
movsl
or
test
nop
inc
lds
dec
cmp
add
cmp
jno
mov
adc
sub
inc
pop
add
enter
into
ja
mov
aad
or
pop
stc
dec
pop
icebp
push
das
sub
jmp
js
lock
mov
shl
jo
push
adc
add
cwtl
les
movsb
mov
or
push
ja
xor
adc
stos
into
push
push
mov
or
ljmp
testb
or
xlat
xor
push
ret
jne
pop
shll
rcrl
cld
imul
mov
jl
icebp
lock
ret
pushw
adc
xchg
in
hlt
popf
adc
pusha
cli
cmpb
shlb
jae
adc
add
enter
stc
fidivrl
push
mov
push
je
jl
dec
cmpsb
or
push
pop
in
cmp
jo
addb
add
sub
or
sub
fldl
popa
sub
jno
push
fildll
sbb
xorl
or
outsb
cmpsb
addr16
int3
cmp
call
inc
lret
loop
pop
mov
sbb
cmp
inc
call
lret
add
je
xor
ja
rolb
ret
pop
fisttps
xor
sub
pop
ret
adcb
push
dec
outsl
scas
adc
call
xorl
push
repnz
mov
std
mov
loope
fstpt
leave
jp
push
push
mov
leave
test
movsb
jmp
in
pusha
int3
shl
cmp
adc
movsb
pop
adc
mov
loopne
mov
lret
lcall
dec
clc
add
scas
cltd
mov
int3
pop
push
int3
je
dec
sbb
push
data16
loopne
and
mov
inc
out
subl
lds
std
mov
xor
inc
pop
aad
mov
or
loop
jge
pusha
pop
aad
ds
add
pop
xor
mov
into
push
fadds
in
xchg
mov
int3
outsl
subb
lcall
imul
out
ja
call
xchg
add
pop
clc
lret
clc
pop
sar
pop
roll
dec
adc
mov
inc
sarb
cmp
scas
repz
dec
cmpsb
sub
dec
adc
daa
or
out
pop
jne
dec
add
cmp
push
dec
into
punpckhwd
add
pusha
cmp
mov
dec
pop
cli
and
pusha
adc
sub
movzbl
or
add
fdivrl
data16
add
pop
add
xor
pop
mov
jmp
sbbb
mov
push
add
and
or
gs
in
push
testb
xor
or
jp,pt
cmp
or
and
bound
push
jmp
test
mov
inc
hlt
sbb
lods
xor
xor
push
add
adc
call
add
arpl
xchg
mov
leave
xor
faddl
pop
jmp
or
pop
jnp
sbb
xchg
adc
hlt
in
xor
out
dec
sbb
or
xor
insb
jb
mov
lods
insb
add
arpl
sub
jnp
mov
push
cmpsl
cwtl
into
xchg
sub
jbe
push
int
sub
add
int3
adc
lods
ficoms
rcrb
add
call
aad
and
test
enter
inc
cmc
gs
push
push
sahf
xlat
inc
xchg
xor
fists
shlb
xlat
mov
jp
add
push
sub
pushl
or
jmp
pop
xor
pop
or
ret
add
lods
mov
outsl
pusha
adc
cmpsb
es
pusha
adc
pop
clc
mov
pop
shr
xor
pop
inc
jg
jne
fbld
sbb
xchg
add
mov
popa
cmp
mov
jb
pop
adc
cld
or
or
pop
adc
adc
popf
les
nop
dec
and
pusha
mov
mov
adc
test
enter
push
push
pusha
xchg
and
pusha
adc
pop
sbb
loop
add
cmp
mov
or
ja
fs
lock
bnd
xchg
test
xor
fsubs
addr16
or
pop
push
add
arpl
xor
sub
dec
testl
adc
push
mov
loop
addr16
decl
pop
xor
repz
or
dec
lods
ret
icebp
mulw
outsb
cli
pop
sub
jl
mov
out
mov
adc
sarl
inc
pop
out
lcall
mov
push
pop
cmpl
ja
cmpsl
imul
adc
clc
stos
xchg
or
add
in
cmpl
imul
nop
or
adc
bound
dec
bound
pop
jb
test
add
rcll
mov
adc
test
adc
jb
insb
cmpsl
ret
pop
cmpsb
dec
pop
or
and
int3
add
pop
nop
or
call
mov
adc
psubb
mov
hlt
mov
and
xchg
jmp
jmp
daa
imul
jge
insl
ljmp
jg
mov
mov
adc
mov
push
push
ror
leave
psraw
push
repnz
pop
cs
sub
pop
mov
dec
repz
sub
xorb
add
sbb
clc
push
and
movsl
or
pop
dec
push
cmp
test
or
fwait
adc
mov
jo
push
adc
mov
sbb
inc
sub
xor
mov
jnp
and
jns
and
icebp
pop
outsl
cmp
jmp
mov
repz
mov
push
push
xor
mov
int
into
xor
dec
sbb
or
jno
das
lret
push
fnsave
testb
adc
movsb
mov
mov
add
jmp
xchg
jno
das
fisubrl
dec
lods
xlat
mov
out
push
push
out
adc
add
repnz
sub
lret
and
jge
ja
or
xchg
adc
sub
xor
pop
nop
icebp
in
add
add
fisttpl
sub
push
repnz
add
push
jp
or
out
out
xor
shrl
out
adc
movsb
cmp
cmp
inc
mov
pushf
flds
mov
loope
into
fstpl
xor
inc
cmc
dec
cmp
outsl
inc
daa
ret
lahf
sub
push
jbe
or
push
inc
mov
add
and
pop
stc
xor
lock
mov
dec
mov
xor
pusha
jbe
out
push
movsb
aas
pop
ljmp
jbe
loope
lods
push
scas
xor
sti
mov
push
repz
mov
jo
nop
xor
ret
push
jno
add
pop
cmpsb
and
out
lods
scas
push
mov
add
aam
jo
lds
rorb
mov
mov
sbb
or
testl
jp
loope,pt
adc
mov
adc
sbbl
xor
mov
es
push
mov
cld
sub
jmp
ljmp
add
or
mov
lods
or
push
jmp
xchg
pop
scas
fwait
cld
push
aaa
sub
and
cmpl
shrl
lds
mov
mov
inc
jg
push
mov
mul
push
push
stc
fcmove
rcrl
inc
mov
push
pop
iret
mov
and
xchg
fdivrs
cmp
pop
adc
or
ficompl
sub
or
test
jne
xchg
jns
jno
jmp
xor
movsl
movsb
mov
xor
popa
inc
aas
mov
cld
cmp
fisttpll
orb
jp
or
jbe
xor
xor
out
sahf
notl
xor
pop
add
mov
cli
xor
dec
mov
popa
mov
adc
adc
mov
shr
test
testl
push
push
mov
fnstsw
inc
ret
hlt
inc
fs
cs
invd
jmp
popf
mov
inc
ds
or
adc
sub
stos
mov
or
pop
inc
test
jecxz
cmp
out
or
xchg
leave
jecxz
fcoml
sbb
sub
push
cmc
scas
lds
xor
or
pop
scas
les
bound
add
dec
jg
adc
outsl
mov
cli
loopne
cmp
into
xchg
not
or
mov
bound
inc
mov
xor
mov
sub
add
stc
shrl
or
mov
cmpsl
loopne
pop
lock
push
sarb
pop
ljmp
or
adc
shrl
shll
mov
sbb
fstps
ret
cld
addl
jmp
push
cmc
cmp
mov
popa
sahf
test
push
fldcw
call
adc
stos
popa
arpl
pop
inc
xor
pop
jmp
ret
pop
ror
popf
mov
je
pop
test
pop
xor
call
adc
push
mov
iret
rorl
sbb
jl
adc
jmp
scas
push
fisubl
enter
pop
mov
negb
push
mov
add
jmp
fcom
lds
in
sbb
negb
add
pusha
inc
es
inc
fadds
lret
add
loope
out
imul
negb
pop
jmp
or
and
insl
clc
add
and
rcrb
pop
lods
arpl
or
sub
call
push
mov
xchg
cmpb
add
shr
adc
rorb
xchg
jne
xor
xor
push
push
dec
pusha
adc
lret
dec
pop
cmpsb
jl
dec
mov
pop
mov
loopne
push
cs
pop
mov
xor
popa
imul
fidivs
xchg
and
jne
rcrl
xor
pop
mov
dec
insb
mov
test
inc
and
sbb
sbb
mov
xchg
xlat
stos
adc
jnp
ds
stos
xor
pop
xchg
and
js
cmp
jg
add
sub
xchg
mov
adc
dec
push
cld
pop
add
or
pop
add
push
push
outsl
daa
ljmp
hlt
xor
mov
jp
mov
push
popa
int3
lods
jp
fwait
add
adc
inc
or
jg
mov
cmp
orl
push
push
add
outsl
cmp
mov
test
int3
sub
sbb
jl
in
pop
sub
xor
mov
sbb
adc
inc
sarb
stos
and
dec
fimuls
test
cli
push
jle
xor
idiv
rclb
mov
and
add
jmp
pop
xor
mov
lcall
mull
dec
add
jmp
mov
pop
pop
fs
cld
pop
mov
pop
adc
sub
inc
jnp
clc
inc
sbb
loop
pushl
xor
mov
push
das
mov
sbb
jnp
add
rorl
jge
fdivs
sub
pop
pop
mov
push
mov
mov
xchg
push
jne
pop
sub
std
mov
sarl
mov
fimull
cli
sub
jp
addr16
add
loopne
sub
jmp
mov
out
fadds
shrb
push
mov
and
push
or
adc
xchg
sub
int
movsb
popf
lcall
test
addl
mov
ljmp
add
jae
push
lods
inc
sub
push
fdiv
mov
inc
sub
clc
lods
xchg
mov
cld
mov
inc
and
pop
inc
jmp
in
les
xor
push
jle
jne
push
cli
fs
adc
lea
push
hlt
push
cmp
ja
hlt
pop
or
jbe
push
push
mov
inc
das
xor
ljmp
idivl
outsb
or
pop
add
fdiv
jb
in
inc
pop
sub
dec
and
insb
mov
pop
popa
push
cmpsl
add
add
push
add
test
mov
adc
mov
addl
add
push
loopne
push
daa
fdivrl
mov
negb
shrb
lahf
jns
sbb
push
jge
outsl
das
aas
dec
sub
test
cmp
cmp
push
js
rcr
fstl
cmp
and
dec
push
movsl
push
lcall
orl
int
and
scas
out
mov
pop
jecxz
and
mov
mov
fs
outsb
push
jge
cmc
mov
mov
push
and
adc
aaa
fs
cmp
call
cmp
lret
add
jmp
inc
xor
js
mov
clc
and
dec
and
push
adc
jns
inc
cmp
mov
jne
inc
mov
in
and
enter
xchg
in
lock
xchg
inc
daa
jle
loop
and
repz
xchg
das
es
xchg
sahf
dec
or
cmp
pop
xchg
addb
inc
or
xor
sbb
std
sbb
xor
ret
cmp
cmpsl
pop
pcmpeqw
sbb
pusha
mov
ret
mov
std
clc
addb
cmc
inc
decl
shl
mov
fdivl
arpl
cmp
sub
cmc
push
jecxz
sbb
rcll
jmp
or
push
xor
pop
adc
je
stos
add
dec
hlt
push
and
mov
lods
dec
adc
push
xchg
int3
inc
insl
loope
cmp
ljmp
in
loopne
inc
adc
or
mov
faddl
testl
mul
push
xlat
jns
adc
jmp
sub
mov
xor
push
aad
mov
ljmp
ja
add
cmp
insb
cld
or
aas
ror
imul
and
push
add
out
inc
out
mov
aam
out
pop
pop
push
mov
jmp
out
inc
adc
ja
in
mov
push
push
xchg
sarl
sub
inc
sbb
cltd
iret
bnd
into
scas
push
push
adc
ret
pusha
push
or
pop
mov
je
hlt
push
push
lock
lock
stc
jmp
fists
sub
push
pop
jecxz
xchg
dec
fwait
and
mov
xchg
or
pop
test
es
stc
adc
imul
popf
data16
add
jb
add
jge
popa
movsl
mov
das
inc
sub
mov
int
rolb
push
push
mov
mov
loope
orl
imul
test
scas
and
inc
cli
sbb
pop
stos
cmpsb
lods
adc
mov
or
sbb
dec
movsl
sub
mov
mov
xor
outsl
inc
and
daa
in
and
cli
repnz
cmc
lahf
ja
sahf
cs
jnp
mov
inc
cmp
jl
ja
add
shr
jmp
lahf
inc
hlt
adc
sbb
ds
sbb
mov
push
mov
jmp
ret
jge
repz
fdivrs
daa
mov
fisttpll
mov
inc
cmp
jbe
xor
arpl
jo
cmp
outsb
icebp
or
or
adc
in
cs
ljmp
cli
push
mov
cmp
imul
lret
push
add
cmp
jmp
or
shll
enter
cmc
shll
lahf
add
adc
mov
dec
cmpsb
mov
and
adc
sbb
int3
sahf
jp
pop
and
push
pop
mov
push
fisttps
mov
pop
aaa
imul
xor
jo
not
hlt
adc
ret
and
dec
jl
mov
mov
dec
lock
pop
shl
and
add
push
mov
mov
jle
pop
jg
test
mov
xchg
stc
cwtl
aas
lock
add
mov
lcall
xchg
mov
imul
fcompl
jge
sbb
add
rcl
xchg
outsb
stos
add
sub
mov
int
cld
shl
push
shr
test
or
xchg
mov
push
add
pop
adcb
add
cmp
xchg
cmp
and
mov
dec
push
adc
pushf
dec
xchg
mov
stc
pop
outsb
mov
loope
jns
mov
hlt
jae
mov
dec
aad
jno
shl
dec
les
pusha
xlat
sub
jbe
adc
dec
leave
push
cli
aam
daa
icebp
mov
cs
icebp
loope
outsb
xor
mov
daa
jp
and
push
lods
mov
nop
mov
lret
adc
cmp
push
stos
xlat
or
dec
bound
enter
pop
jecxz
dec
xlat
pop
stos
jo
xchg
mov
or
popa
iret
popa
iret
add
dec
aad
push
cli
and
xor
pusha
push
repnz
push
adc
adc
push
and
push
push
jecxz
adc
mov
int
pop
xor
mov
xor
pop
xchg
fidivrl
sbb
mov
adc
mov
icebp
hlt
adc
sbb
xor
mov
cmp
sub
cmp
xlat
movsl
xchg
sub
cs
test
cmp
frstor
add
jno
or
in
add
rcrl
jmp
add
dec
xchg
andl
jmp
test
sub
sbb
pop
ljmp
jmp
mov
test
xor
sti
push
insb
or
daa
adc
out
push
or
fwait
mov
sub
cmp
mov
hlt
xchg
out
push
shr
inc
dec
lahf
loopne
sub
pop
jl
and
mov
ds
inc
mov
cld
add
mov
rcrl
push
loopne
loop
jge
xchg
pop
lret
outsb
push
sub
add
or
ss
add
js
mov
ret
push
lret
xchg
jbe
or
mov
or
ret
pop
leave
clc
add
repnz
mov
enter
fidivrl
jle,pt
fstps
testb
repnz
jp
or
sub
fninit
add
mov
jmp
out
insb
fstl
push
lods
xchg
and
hlt
ja
repnz
lock
outsb
std
nop
xchg
pop
sub
scas
aad
jmp
out
mov
push
jmp
jo
repz
mov
pop
repz
jge
test
scas
push
sti
sub
jp
xor
cmp
inc
inc
adc
or
fstl
and
sti
das
jmp
and
xchg
push
rorl
pop
xchg
dec
subb
imul
sub
push
lods
sub
and
jle
mov
popf
rcrl
sbb
or
inc
pop
scas
out
in
in
xor
push
mov
dec
rcrl
jle
adc
outsl
shlb
ljmp
cmp
fwait
sub
int
gs
mov
test
pusha
or
add
mov
and
orl
inc
arpl
out
mov
or
fisubs
push
aas
stos
mov
push
add
rcrl
lea
fdivl
mov
xorl
push
sbb
in
in
xor
jge
or
pop
inc
pop
stos
pop
push
mov
or
jns
lcall
popa
ja
xor
and
xor
sub
mov
or
ja
and
sahf
out
inc
push
jp
pusha
xchg
jno
jl
dec
jecxz
adc
push
cmpsl
add
inc
pop
enter
dec
dec
je
push
adc
sbb
gs
pop
inc
xchg
shr
push
lret
pop
add
sbb
add
shlb
jmp
lret
addr16
dec
and
clc
mov
lods
imul
icebp
data16
shlb
mov
sbb
mov
scas
cli
xchg
mov
push
enter
mov
cmc
sar
ds
xchg
shll
iret
les
lods
nop
in
cmpsl
das
add
push
in
xlat
sti
lret
dec
stc
or
adcl
pop
int
xor
std
ret
pop
sbb
out
adc
dec
out
fs
xchg
mov
sahf
pop
enter
inc
fucom
adc
pop
lahf
rorb
inc
mov
push
adc
adc
hlt
mov
popf
cli
dec
push
pop
addb
test
mov
mov
mov
pop
mov
jo
add
or
adc
mov
xchg
pop
rcrb
push
push
aas
enter
pop
xor
push
jo
mov
mov
nop
cli
int
cmpb
out
rcll
jae
sbb
add
outsl
ret
push
fiaddl
sbb
xor
inc
test
xlat
push
push
out
push
daa
mov
adc
fisttpll
cmp
hlt
lret
pop
pop
aam
adc
pop
cld
mov
or
and
pop
push
jmp
jne
sub
fisttpll
push
pop
jbe
jg
enter
push
push
bound
adc
mov
jl
mov
pop
sub
mov
inc
push
fdivrs
xchg
dec
push
mov
out
inc
add
shlb
and
iret
jne
int3
aaa
push
jnp
xchg
push
mov
sub
out
add
add
push
dec
mov
repz
xor
cld
pop
enter
push
add
ljmp
jno
add
inc
hlt
pushf
sub
adc
lret
test
add
inc
pop
pop
dec
nop
imul
inc
arpl
jo
mov
jmp
decl
mov
push
xlat
mov
add
test
idiv
add
pop
sti
mov
cmpsl
push
sbb
xchg
or
or
leave
enter
cmp
pop
adc
sbbb
or
mov
mov
cwtl
push
mov
arpl
xchg
push
xor
leave
std
push
lods
inc
add
dec
loopne
loope
jb
push
add
sbb
imul
adc
clc
add
lods
or
in
loope
or
stc
movsb
add
dec
jnp
push
jmp
or
adc
mov
adc
jmp
mov
mov
xorb
adc
adc
je
ja
stos
rclb
ss
ljmp
in
mov
or
call
jns
adc
nop
out
push
mov
sub
push
and
pushf
mov
xor
out
icebp
inc
in
pop
mov
cmp
pop
mov
or
scas
add
je
pop
xlat
test
adc
xlat
scas
mov
sub
and
sub
aam
push
jg
insl
repnz
or
or
or
pop
jmp
cmp
sbbb
pop
mov
repz
sahf
subb
or
mov
pop
pop
loopne
mov
and
cmc
aam
ret
jl
das
push
pushf
pop
xchg
pop
pop
popa
jmp
dec
inc
push
rorl
dec
outsb
mov
sub
and
lds
mov
nop
fidivs
ret
sbbb
or
mov
inc
insl
xor
out
cmp
mov
repz
pop
dec
les
and
or
mov
sbb
mov
or
xchg
and
xchg
push
pop
ljmp
pop
xor
pop
add
add
call
mov
les
mov
dec
pop
test
mov
mov
outsb
xor
pushf
inc
adc
out
inc
fiaddl
mov
mov
es
push
mov
or
dec
bound
xchg
mov
push
neg
dec
xor
mov
rcr
push
ret
push
cltd
push
inc
or
pop
mov
mov
jmp
enter
sub
inc
std
in
inc
add
cmp
loop
fistpl
in
xchg
cwtl
or
addr16
or
imul
movsb
jg
or
mov
cmc
sahf
mov
mov
push
outsb
and
jmp
xchg
icebp
or
jne
in
in
nop
popa
cwtl
inc
dec
push
and
push
std
sub
pop
stc
and
aaa
jp
leave
jle
pop
sarl
xchg
or
pop
lahf
jp
and
loope
in
out
loope
mov
insb
int3
pusha
std
dec
out
dec
mov
adc
xchg
jg
stc
pop
or
movsl
xchg
xchg
dec
in
test
and
jmp
xchg
mov
daa
sub
dec
jmp
mulb
inc
mov
push
das
int3
pop
sbb
gs
ret
idivl
sbb
dec
arpl
pop
pop
cli
lret
add
xor
nop
outsl
xchg
push
jmp
mov
mov
adc
inc
cli
loope
jb
or
cmp
mov
pop
test
cmp
pushf
stos
popa
mov
enter
and
lock
out
testl
add
bound
xor
pop
jno
jno
fs
ljmp
inc
xchg
icebp
pop
pop
push
xchg
stos
mov
and
iret
push
mov
jp
repnz
xlat
pop
scas
sbb
fadds
and
stos
adcl
add
sub
push
mov
gs
jmp
out
pop
pop
pop
and
mov
out
add
jmp
mov
fs
loopne
aas
int
mov
pop
jle
fcoms
icebp
in
sbb
cwtl
jg
adc
dec
out
nop
pusha
mov
and
mov
hlt
mov
jnp
or
sub
popa
push
add
push
popf
xlat
xchg
sarb
repz
mov
lahf
push
add
gs
sbb
andb
add
testb
cwtl
dec
xor
test
cwtl
inc
cmpsl
or
testb
sub
dec
jb
xchg
jmp
push
or
and
pop
inc
sub
out
add
jnp
and
in
jecxz
pop
xor
sub
sub
dec
hlt
add
or
jo
imul
adc
adc
lea
dec
shrl
pusha
lcall
hlt
xor
fimull
mov
outsb
repnz
stc
jo
mov
or
insb
sti
inc
push
lock
dec
pop
rolb
cmp
cmpb
or
pop
testl
notl
test
mov
out
in
fcoms
xor
mov
aas
lret
out
mov
out
inc
popf
call
jae
pop
mov
mov
sarb
and
imul
push
call
rorl
cmpsl
xor
stos
mov
fstl
and
lahf
adc
rorl
pop
sar
or
das
cli
sub
or
sbb
lds
adc
and
lcall
jle
mov
jg
rorl
cmp
pop
dec
sbb
aad
xchg
mov
and
rcrl
mov
sub
iret
loope
xchg
push
add
dec
cmp
mov
sub
into
cld
sahf
dec
repz
ret
sahf
in
sub
pop
xor
jp
xchg
test
sbb
jns
mov
or
movsl
cmpsl
jle
and
pop
bound
data16
xor
inc
jno
outsl
in
mov
popa
imul
adc
push
mov
je
rol
add
sbb
sbb
lods
call
lods
add
xor
pop
cmp
xor
and
lods
inc
sub
fdivr
mov
pop
cli
cwtl
fwait
inc
dec
lea
push
jle
jmp
cmp
mov
in
push
push
mov
adc
push
pop
shl
sbb
mov
outsl
mov
adc
sbb
push
inc
add
dec
add
arpl
sub
jns
add
push
inc
das
pop
lahf
jbe
push
inc
pop
sarl
aas
dec
lret
or
mov
dec
jne
mov
sub
imul
test
fimull
pop
push
shrl
and
or
les
push
adc
push
aad
repz
call
jae
or
jne,pt
sbb
push
mov
sldt
dec
dec
adc
faddl
loop
lea
cli
loope
jge
add
xor
xchg
or
addb
fistps
cmp
push
push
pop
orl
rcll
in
ljmp
xchg
push
int
inc
addr16
inc
add
enter
cmp
jne
orb
add
enter
jmp
jp
scas
mov
orw
cmpsl
daa
jnp
jns
sahf
sub
sbb
imul
add
dec
inc
or
push
xchg
rol
push
movsl
pop
fistl
push
dec
out
push
inc
push
jae
out
repz
adc
and
adc
movsl
and
add
mov
dec
push
jne
daa
test
push
loop
ucomiss
test
mov
sub
pop
sarb
push
daa
xor
mov
jmp
jbe
adc
dec
push
xor
jmp
pop
bound
rorb
and
cmp
pop
int
inc
sub
je
add
add
add
jmp
sub
push
rolb
ret
or
xchg
or
xchg
lods
sub
push
incl
mov
lods
dec
xchg
mov
mov
andb
addr16
inc
stc
loop
jne
cs
pop
xlat
xor
std
mov
push
mov
insb
shl
fs
mov
lret
cmp
inc
subl
inc
xchg
pusha
or
sbb
addr16
iret
adc
cs
roll
call
fdivs
add
push
jmp
xor
sub
out
or
pop
mov
or
jae
imul
insb
sub
sbb
sbb
adc
arpl
test
adc
out
jno
jnp
push
sti
jecxz
lds
out
pop
mov
repnz
sub
stos
add
mov
pop
xchg
and
data16
test
pop
mov
dec
dec
inc
adc
xchg
add
nop
sub
xor
aad
or
int3
inc
pop
mov
push
push
sbb
xor
push
fidivl
in
aad
shl
push
flds
lods
mov
dec
mov
push
out
mov
push
test
mov
pop
add
aam
inc
dec
inc
jmp
out
inc
repnz
pop
inc
mov
ja
add
imul
push
mov
ficomps
das
jg
stos
mov
mov
test
in
mov
mov
shrl
mov
inc
adc
xor
jo
mov
adc
xor
inc
sbb
ljmp
cmp
xchg
mov
int3
mov
in
shlb
arpl
adcb
mov
mov
sub
loope
xor
les
dec
out
nop
pop
shl
add
lods
rorb
push
sub
ljmp
in
in
adc
add
in
popa
pop
dec
add
fiadds
push
sbb
add
sub
lods
orl
and
xchg
xchg
loopne
dec
push
pop
pop
jmp
mov
sub
pusha
dec
dec
inc
pop
pop
in
sub
adc
in
inc
leave
mov
dec
sbb
jbe
pop
sub
in
mov
add
mov
cmp
push
subl
push
cmp
dec
repnz
jp
out
xchg
dec
inc
mov
ret
imul
jb
loopne
clc
push
mov
xor
cs
fs
jmp
pop
add
divb
test
adc
cld
push
pop
mov
out
xorps
pop
out
cmp
xor
sub
sub
jmp
push
jmp
push
mov
push
or
cmc
jl
mov
and
dec
or
out
cmpsl
loop
jg
or
js
sub
fmulp
pop
push
fistl
pop
sub
jnp
loope
and
jo
shl
into
add
dec
loop
shrb
xor
negb
in
flds
mov
pop
cwtl
mov
adc
jmp
sub
xor
cli
jl
sub
outsb
pushf
push
or
push
cwtl
ss
push
sub
push
inc
dec
addb
testl
add
clc
mov
add
add
push
in
stos
inc
or
mov
inc
repz
subb
pop
or
pop
adc
lret
add
sbb
push
add
jmp
push
cmp
jmp
and
sbb
not
lock
test
out
jmp
dec
push
xor
jg
xor
sub
xor
addr16
push
mov
shr
shll
push
dec
jns
inc
cli
push
shlw
bound
das
jae
popa
in
cwtl
pop
inc
mov
jnp
adc
jle
pop
popf
push
rorb
xchg
mov
pop
orb
cld
lahf
jge
std
sub
neg
mov
call
test
adcl
ljmp
pusha
adc
pop
rorb
leave
rorb
mov
jge
cmpsl
push
xlat
cmp
negb
mov
imul
and
sub
das
push
jg
es
push
pop
jmp
mov
mov
in
inc
mov
out
out
push
pop
mov
jo
mov
repz
jno
in
sahf
das
mov
jbe
and
cmpb
jp
aas
into
clc
movsb
popa
shrb
shl
das
mov
cmp
shlb
pop
or
push
fidivl
lods
sub
test
shlb
incl
add
out
cmp
out
loop
inc
into
dec
cld
fdivp
jmp
divb
or
pop
mov
movsb
xchg
add
ret
out
lret
jmp
call
add
pop
inc
pusha
and
mov
sub
fcompl
ret
push
jg
mov
add
inc
mov
fsub
popf
sbb
xor
int
sub
aad
cmp
add
mov
pop
pop
lcall
mov
mov
bound
neg
ja
inc
outsb
mov
or
or
sbb
out
out
pop
adcb
push
into
pop
add
movsl
dec
daa
pop
pop
mov
xor
in
push
or
call
stos
repz
js
xchg
movsb
pop
pop
xlat
push
or
or
scas
xor
push
enter
daa
bound
xchg
xchg
push
mov
pop
sub
cli
inc
mov
jae
shr
imulb
faddp
pop
dec
in
cmp
js
adc
jno
pop
in
out
dec
cld
push
add
jmp
mov
out
xchg
push
sbbb
pop
dec
insl
imulb
inc
and
fucomip
cs
clc
pop
shr
shl
push
mov
mov
faddl
neg
jecxz
leave
sub
leave
inc
push
push
push
mov
mov
loopne
aad
rorl
push
sbb
adc
jg
sbb
sub
mov
adc
push
testl
dec
jmp
mov
mov
inc
jo
adc
push
xchg
enter
and
stc
subl
jnp
dec
inc
in
popa
daa
lods
int
jae
cmp
or
cmpsb
in
aad
lods
mov
sub
jcxz
xorb
inc
inc
mov
and
push
sarl
outsb
adc
popa
add
sub
imul
or
dec
cmpl
das
fs
scas
ret
push
jo
orb
mov
arpl
dec
adc
inc
mov
sub
dec
scas
mov
mov
add
adc
xlat
pushf
mov
sub
mov
fdivrs
movsl
roll
pop
xchg
in
mov
adc
popf
mov
mov
xor
movsb
jne
mov
mov
popa
jmp
pop
adc
repz
pop
jmp
xchg
xchg
sub
stos
or
dec
cmp
les
out
jae
loope
or
std
jl
repz
xor
enter
sub
cwtl
cmpb
add
jmp
imul
ret
mov
cmc
inc
cmpsb
pop
insl
cmp
xorl
sti
bound
cmp
sub
movsl
clc
stos
add
push
fldl
jno
adc
or
ljmp
ret
mov
call
scas
fldl
subb
out
es
test
jmp
ja
cld
das
out
adc
push
or
pop
mov
addl
roll
inc
mov
fdivs
aad
and
xor
pop
inc
loop
scas
leave
lret
inc
lods
out
xchg
icebp
icebp
arpl
jecxz
mov
add
test
xchg
popf
mov
add
lret
pop
mov
pop
inc
add
bnd
mov
adc
sbb
pusha
in
and
popf
cli
jg
lret
inc
push
dec
adc
and
dec
arpl
sub
inc
push
push
mov
fmull
xorl
mov
stos
add
sub
mov
mov
test
test
aam
pop
leave
vpandn
repnz
pop
pop
inc
bnd
pop
fisttpll
lret
dec
push
lahf
adcl
cmp
dec
shrb
adc
add
std
daa
fsubr
lea
sbb
out
mov
sub
add
jmp
mov
enter
mov
fs
out
and
je
push
and
add
insb
pop
shr
inc
addl
test
sub
sbb
gs
fs
xor
cmp
test
mov
ret
jne
test
adcl
mov
dec
dec
neg
jnp
loopne
mov
fidivl
test
mov
mov
mov
sub
jmp
test
jno
lods
push
mov
inc
cmp
xor
cmp
push
lds
jmp
mov
jp
sub
jmp
mov
shlb
pop
neg
mov
adc
inc
lods
and
popa
push
std
aam
sarl
cmp
sbb
dec
rcl
movsb
iret
loope
xchg
imul
js
push
mov
sub
mov
sbb
push
hlt
mov
or
mov
xchg
mov
add
dec
stc
push
mov
popa
xchg
or
dec
adc
fcoms
mul
push
sbb
push
pop
out
sbb
cmc
sub
in
adc
clc
lret
add
and
clc
mov
idiv
shll
inc
push
push
sarb
xor
sbb
outsb
cmc
fs
fs
inc
loop
sbb
mov
das
mov
jg
lods
or
das
push
aad
and
out
and
icebp
xor
shlb
mov
movsl
push
push
jo
jl
or
or
mov
addr16
push
bound
imul
cmpsb
ret
cltd
and
xchg
mov
lret
jmp
mov
mov
js
xchg
pop
sysret
in
lds
sub
ja
fildl
cwtl
je
push
xchg
lahf
dec
jge
orl
push
mov
and
mov
scas
pop
enter
mov
xchg
push
stos
int3
insl
lods
push
push
mov
adc
scas
xchg
scas
mov
cmc
movsb
dec
xchg
pop
cmp
dec
sub
or
xchg
scas
and
sub
xchg
cld
and
jbe
adc
aas
loop
js
cmp
mull
push
xchg
add
pop
pushf
bnd
add
sub
or
repz
pop
testb
or
sbbb
lret
jmp
in
xor
ret
push
bound
testl
push
sub
insl
cmp
std
cmp
sub
sub
jp
sarl
adc
pop
sbb
add
scas
mov
sub
jle
rcrb
bound
and
shlb
test
fists
xchg
push
ret
jno
cmp
push
and
outsb
xchg
aad
fimuls
pop
mov
pop
add
pop
pop
add
outsb
adc
pop
inc
cld
xor
jecxz
adc
add
and
or
adc
adcb
cmp
popa
js
sub
mov
add
daa
sahf
push
not
dec
jo
add
pusha
jae
mov
dec
pop
sbb
push
inc
pusha
jb
adc
inc
mov
cmp
dec
int3
push
orb
add
xor
dec
mov
jmp
lahf
mov
in
or
adc
fistps
insl
sbb
mov
ds
ss
rolb
mulb
addb
lret
shl
rcrb
hlt
and
xor
sub
pushf
inc
mov
adc
aad
clc
pop
add
not
mov
xchg
ret
add
push
add
cmp
mov
cmp
mov
jne
test
lahf
adc
xlat
out
sub
mov
bound
pop
enter
push
push
pop
jns
mov
xchg
adc
or
pop
xor
push
push
push
push
psubd
enter
add
orb
sbb
pop
jle
and
orb
xor
lcall
xor
pop
xor
in
push
cmp
or
add
sub
xor
imull
lret
or
loop
or
out
ja
sub
sub
out
sbb
ficoml
adc
and
or
add
sub
push
add
stos
stos
andl
in
int3
push
subl
mov
and
mov
rolb
mov
aas
imul
dec
ret
jnp
cs
jnp
jmp
scas
xchg
and
adc
push
subb
int3
pop
jae
sbbb
lret
xchg
xchg
or
push
gs
and
lret
inc
loopne
mov
pop
shlb
js
or
jle
popa
push
cmp
xor
jl
mov
addl
cmpsl
or
cli
mov
jb
xor
jnp
inc
outsl
jecxz
sar
leave
arpl
inc
aas
push
dec
scas
jne
stc
outsb
rclb
jno
pop
dec
or
addr16
test
stc
mov
fcmovbe
push
test
je
push
inc
or
sti
inc
pop
fidivs
sub
pop
push
jg
adc
pop
sarb
sub
xchg
nop
ds
mov
mov
les
lret
add
add
adc
fcoms
fistps
sub
jmp
dec
pop
or
push
aaa
mov
das
aas
out
pop
insb
jmp
cmp
subb
test
add
sub
push
mov
dec
xlat
add
pop
cld
xor
mov
dec
and
stos
mov
mov
lahf
xor
add
pop
pop
mov
push
add
cmp
inc
addl
data16
xchg
stos
jecxz
dec
stos
je
enter
call
rolb
pop
mov
outsb
rorb
add
test
mov
imul
dec
dec
adc
pop
repnz
out
cs
iret
les
dec
and
or
ja,pn
sahf
sub
cmp
add
xor
rcll
insl
mov
pop
xor
dec
jmp
inc
pop
dec
outsl
sti
and
ss
inc
add
cmc
daa
or
pop
mov
mov
xchg
pop
add
gs
push
xor
das
sub
and
int3
jmp
pusha
rorb
andb
xlat
add
and
add
xchg
lcall
mov
loop
js
jp
scas
das
cmp
xor
xchg
mov
mov
hlt
out
loopne
add
enter
sbb
sub
adc
adc
pop
not
dec
push
and
je
sahf
pusha
popa
movsl
jne
jo
es
jbe
in
fdivl
pop
mov
idivb
cmpb
lock
pop
lahf
sbb
ret
xchg
rcll
por
push
leave
stc
cmp
aas
xchg
xchg
or
jbe
pop
jns
or
into
push
jmp
xor
inc
or
xchg
fldcw
dec
repz
icebp
push
lods
pop
sub
faddl
inc
xlat
xchg
shll
scas
out
mov
int
call
jmp
ja
dec
scas
mov
into
sub
in
cmc
addr16
sub
xchg
adc
adc
jmp
mov
scas
mov
and
mov
mov
xor
sub
sbb
sbbb
pop
cmp
inc
xor
pop
xchg
sub
out
xor
mov
mov
push
sub
pop
pop
mov
pop
mov
inc
cmp
and
int
decl
push
pusha
xchg
or
jecxz
jmp
cmp
and
sub
movsb
ret
andb
mov
popf
inc
dec
call
pushf
loope
add
push
sub
and
hlt
and
add
sbb
orb
rorb
sbb
sub
sbb
notb
and
push
add
adc
jo
lret
shl
or
xor
nop
stos
or
or
or
or
inc
or
or
cltd
or
in
sbb
adc
mov
or
into
and
adc
lcall
sbbb
sbbb
xor
repnz
mov
xor
inc
and
sbb
aas
into
sbb
loope
stos
cmc
add
adc
mov
mov
xchg
sbb
imul
mov
arpl
adc
nop
xor
mov
add
add
xor
mov
pop
cld
mov
fs
xor
in
xor
fs
and
std
inc
leave
ret
scas
xchg
and
sub
adc
adc
dec
and
or
cld
test
sub
shl
arpl
add
dec
push
jnp
test
rolb
outsb
roll
in
add
add
std
push
shlb
jno
fdiv
xor
sahf
or
imul
addl
or
jo
testl
insl
mov
mov
or
or
into
adc
xchg
mov
shll
movsl
inc
mov
pshufw
xorl
sbb
or
repz
leave
sbb
insb
mov
mov
movsl
cld
cs
ret
and
adc
jne
inc
fmul
inc
push
inc
inc
out
dec
inc
sub
and
in
or
and
inc
and
cmp
aaa
cli
cmp
daa
add
or
jp
mov
dec
adcb
stc
xchg
loopne
inc
clc
in
dec
and
xor
push
scas
push
pusha
pop
outsl
jg
add
clc
xchg
dec
push
mov
mov
sbb
adc
inc
add
sbb
mov
add
inc
dec
or
jne
mov
mov
lock
loopne
mov
dec
xor
pop
cmpsl
adc
scas
idivb
sub
jne
cld
or
pop
mov
mov
aam
lods
push
lods
rorb
xchg
push
repz
mov
dec
mov
imul
negl
push
inc
add
in
js
daa
shl
pop
jo
sahf
mov
inc
mov
lds
mov
jmp
add
jge
das
add
ficompl
pop
sar
and
repnz
pop
adc
addr16
and
bnd
or
pop
sub
mov
adc
push
cs
fs
push
jecxz
nop
outsl
mov
adcl
dec
push
push
call
faddl
fs
mov
add
ja
arpl
arpl
jmp
and
inc
int3
xorl
clc
mov
dec
popf
fisttpl
push
inc
lahf
in
inc
pop
jmp
add
add
inc
xor
fsts
pop
cmp
mov
inc
stos
fisubrl
cli
cwtl
push
jbe
cmp
mov
testl
dec
rorl
subl
repnz
cmp
jge
les
mov
adc
mov
dec
mov
sub
outsb
stc
or
xor
add
out
mov
and
mov
insl
lods
pop
neg
pop
inc
mov
popf
push
mov
filds
push
xchg
aad
push
xchg
push
inc
sub
int3
shrb
cmpsl
adc
xor
mov
aas
mul
aam
pusha
xchg
xchg
test
sti
pop
lahf
inc
clc
mov
sbb
andb
imul
shl
ljmp
add
push
cmp
dec
push
dec
add
popf
inc
or
notb
xchg
xor
push
push
jmp
faddl
jecxz
xchg
sbb
cmp
imul
push
pop
cmp
dec
sub
push
iret
bound
call
enter
lret
sbb
rcrl
fstl
cltd
xor
push
nop
pusha
sub
sub
pop
repnz
cmovnp
pop
and
pop
mov
jecxz
rcrb
pop
out
lret
jns
mov
movsl
and
mov
xchg
pop
sub
pop
roll
mov
into
mov
add
xchg
sbb
ret
mov
xchg
inc
test
push
test
add
adc
or
ret
push
movsl
aam
sbb
jl
imul
movsb
add
lds
test
inc
sub
and
mov
add
je
pop
or
inc
mov
inc
data16
push
cwtl
sub
fwait
and
add
pop
sbb
add
push
into
lock
pop
lods
fiadds
and
jp
lret
mov
adc
sub
imul
sbb
dec
push
jae
enter
add
push
jmp
push
push
and
shr
inc
mov
or
andb
push
testl
stos
popa
mov
pop
and
pop
sarl
or
mov
pop
lahf
testb
add
jmp
sub
and
jp
or
xor
inc
sub
sbb
jl
es
pop
cmp
cld
ret
outsl
outsb
or
in
cmp
mov
jno
cmp
sub
and
rorb
adc
push
dec
imul
add
mov
inc
jp
mov
mov
jmp
push
cmp
fistpll
cmpsb
inc
dec
dec
sub
adc
shrl
cld
push
adc
jbe
sub
pusha
pop
fldt
xor
inc
sbb
cmc
jb
rclb
int
push
adc
aad
bound
ret
test
mov
dec
cli
das
popf
bound
iret
pop
jbe
jae
cmpsb
bound
mov
jmp
ljmp
adc
sub
pop
and
dec
or
adc
pop
lods
push
adc
into
xor
push
mov
lea
shr
mov
fisubl
mov
mov
adc
shr
cwtl
loopne
cmp
repz
daa
inc
cltd
and
pop
stos
or
cwtl
movsl
push
pop
mov
jbe
fs
jl
jo
cmp
scas
aas
lods
aam
dec
mov
xor
jne
and
sub
mov
sarl
adcl
push
lock
push
fldenv
push
rcl
push
xchg
dec
les
or
lret
add
jmp
mov
add
nop
push
mov
shlb
push
fucomi
rclb
xchg
stos
lods
sbb
pop
jl
xchg
mov
cmpsl
ret
and
jbe
pop
ret
popa
sub
test
push
adcl
or
lock
mov
mov
push
xor
or
xor
inc
rcrb
das
mov
and
flds
dec
pop
add
pop
sub
adc
adc
pop
mov
add
pop
out
xor
out
push
enter
sbb
push
fisubs
push
ret
ds
sarl
scas
insl
and
mov
jnp
jge
jge
bound
pop
int3
dec
pop
mov
mov
pop
push
jmp
and
jle
paddusw
cs
and
gs
cmp
dec
cmc
add
cmc
jmp
cli
lea
pop
mov
or
xchg
push
repz
jp
or
mov
mov
rcr
sbb
nop
das
cmp
dec
daa
les
jg
sarb
mov
movsl
pop
push
mov
adc
lcall
loop
or
xor
outsl
xchg
inc
insb
ja,pt
jnp
sub
ret
push
cli
adc
pop
icebp
xchg
addb
or
xchg
jns
pusha
loop
imulb
adc
sbb
mov
dec
ret
inc
lods
sti
inc
mov
adc
les
push
loopne
mov
cmc
and
jmp
out
add
mov
pop
xchg
mov
add
test
xchg
or
sub
pop
inc
scas
cld
jo
pop
xor
dec
push
sbb
xchg
pop
neg
inc
xor
mov
add
adc
jmp
sub
add
nop
stc
xchg
rclb
cmp
adc
push
divb
loop
aaa
inc
or
sub
pop
push
stos
add
shlb
dec
jne
std
shl
mov
xor
inc
jb
loopne
stos
sbb
icebp
inc
aam
pop
das
lea
hlt
add
mov
mov
cmp
xorl
jmp
insb
sbb
mov
push
add
pop
push
xor
mov
push
daa
mov
out
hlt
adc
call
sbb
sbb
gs
and
dec
xchg
mov
add
int3
inc
jae
push
inc
in
int3
gs
or
add
pop
nop
adc
add
rclb
cmp
iret
or
pop
movsb
add
adc
inc
lods
aad
js
pusha
mov
dec
pusha
add
rcll
cltd
sahf
xchg
xor
mov
xchg
sbb
es
or
in
out
jmp
inc
test
adcl
lret
or
bswap
mov
mov
rorb
add
daa
inc
push
push
mov
xor
aad
jns
jmp
jecxz
pop
into
mov
sub
xchg
aam
add
loop
add
or
cmp
ds
lahf
xor
sub
and
lds
mov
add
pusha
jns
mov
movsb
pushf
fsubs
je
or
pop
dec
jmp
mov
lcall
add
mov
push
pop
pop
mov
xchg
mov
xchg
nop
rorb
inc
pop
and
out
jmp
push
mov
or
and
jle
add
lds
sbb
je
in
add
adc
lret
and
sub
cmp
or
popa
out
add
lods
mov
add
inc
inc
aaa
shlb
fwait
daa
sub
pop
shl
mov
dec
ljmp
aam
movsl
fsubs
jno
fadds
dec
or
setb
or
xchg
mov
push
repz
out
aad
lea
out
xchg
sub
mov
adc
xor
jecxz
mov
cwtl
fwait
or
and
cwtl
sti
insb
in
subb
fnsave
subb
mov
rorb
push
movsl
or
push
xchg
roll
popf
push
bound
incb
fs
mov
pop
dec
sar
push
add
sahf
pop
mov
aas
mov
xor
xchg
jl
aas
xchg
jl
insb
cmp
push
cmpsl
adc
in
jmp
fcmovne
mov
pop
dec
jecxz
fildll
push
mov
push
daa
push
or
sub
xor
fucomp
stc
xchg
faddp
into
xor
adc
pop
subl
add
aas
pop
or
jg
in
aam
jne
inc
lods
inc
jmp
sub
adc
add
jo
cwtl
ss
mov
push
add
pop
ret
xlat
nop
orb
pop
and
cmp
mov
neg
shlb
fcompl
cmp
add
jge
xor
fdivrs
mov
push
adcl
in
dec
jo
adc
or
mov
pushf
push
push
or
aaa
add
push
and
fldt
icebp
sub
pop
mov
cmp
pop
daa
and
jmp
fmul
icebp
xchg
mov
push
shlb
push
or
test
inc
pushl
das
cld
dec
mov
pusha
pusha
lock
push
movl
lods
fs
out
idivl
cmp
clc
out
mov
popa
pop
jmp
psubb
mov
jp
or
cmp
push
xlat
mov
mov
pop
je
ds
flds
mov
xor
xchg
enter
push
andb
push
or
ljmp
jbe
mov
push
push
movsl
dec
inc
stc
mov
sub
and
daa
push
iret
icebp
or
pop
scas
fdivrp
sbb
sbb
jmp
or
or
mov
movsl
push
ds
xchg
in
clc
sub
out
cmp
jmp
leave
jne
nop
adc
pop
sbb
fstps
lods
and
ds
inc
aam
das
neg
xchg
lds
call
push
xchg
shrl
popa
lcall
lcall
andl
call
inc
in
lds
pop
hlt
inc
pop
sbb
lret
add
push
adc
jmp
push
xchg
imul
out
ss
sbb
push
push
jmp
inc
adc
popf
adc
cmp
lods
bound
nop
mov
roll
int3
sbb
int3
add
add
repnz
imull
adc
dec
push
cmp
enter
pop
dec
xor
push
movsl
pop
pop
sbb
je
lock
sub
add
jg
mov
xor
and
mov
pusha
pop
fsubrl
pop
adc
xchg
fwait
push
sub
mov
push
pop
mov
inc
push
xor
jg
ret
lds
pop
jnp
adc
enter
psubsw
mov
iret
push
pop
ret
push
es
movsb
add
add
test
cltd
pop
pop
dec
xchg
cmp
sbb
push
andl
dec
push
adc
xchg
xor
rorb
sub
in
rcrb
push
mov
das
mov
outsl
or
fstl
mov
mov
and
mov
daa
mov
jbe
cs
aaa
popf
add
and
lds
adc
mov
hlt
jno
mov
push
or
aam
sub
adc
xchg
adc
out
adc
add
repz
pop
orl
cmp
neg
or
lds
cmpb
and
ret
popa
sarl
pop
mov
out
shr
inc
mov
testl
dec
mov
dec
sbb
dec
xor
add
call
mov
pop
adc
and
dec
mov
mov
inc
jbe
cmp
lahf
cmc
dec
add
add
cmp
inc
pop
incb
sub
jle
cmc
ljmp
and
jge
out
lcall
pop
jmp
mov
xchg
mov
mov
in
pop
inc
outsl
xor
mov
xor
pop
jbe
jo
mov
hlt
lods
dec
push
out
std
pop
mov
mov
fcompl
rorb
or
jle
xor
push
not
das
loop
pop
pop
adc
imul
add
adc
dec
out
sub
std
sbb
pop
iret
inc
pop
test
mov
mov
stc
fwait
lret
outsl
mul
lret
shll
cmp
pop
bound
add
addb
rcr
or
jecxz
mov
in
clc
sub
dec
pop
push
inc
arpl
add
push
fnstsw
push
ret
not
push
daa
push
inc
repnz
or
insb
jb
or
add
outsl
movsb
jmp
xchg
jo
pop
push
mov
mov
dec
outsl
add
inc
mov
pop
cwtl
xor
sub
pop
xchg
add
es
addr16
pop
or
das
or
and
and
fstps
pop
xor
sbb
or
cmp
call
js
jg
das
test
sbb
orb
outsb
das
xor
jbe
pop
xor
cmp
test
ret
test
dec
jle
rclb
inc
fisubrl
ss
jns
pop
jmp
jle
jo
lahf
sbb
pop
aad
add
sti
mov
pusha
dec
cmp
addb
inc
jge
sbb
sub
pop
shr
mov
add
jmp
xor
hlt
sarl
jmp
push
push
add
dec
mov
or
xor
and
shlb
hlt
mov
out
pop
mov
xchg
sub
jmp
lods
les
or
inc
es
dec
push
jge
pop
mov
imul
xchg
popf
ljmp
gs
sti
insl
mov
das
xlat
dec
xor
mov
and
cmpsb
push
sbb
add
pop
aam
pop
dec
popa
mov
in
mov
jns
inc
inc
mov
add
push
pop
or
add
add
mov
inc
or
mov
xor
xor
dec
add
ss
cmpxchg
push
sarb
xor
sub
neg
lret
fsubl
fistps
mov
roll
aas
jp
cmp
push
scas
enter
in
mov
add
mov
sbb
in
lcall
mov
scas
cwtl
jmp
dec
nop
or
add
cmp
repnz
pop
iret
push
jmp
adc
daa
or
inc
inc
push
push
or
xchg
mov
or
xor
scas
and
insl
insb
lret
and
pop
cmc
xor
mov
sbb
out
adc
or
repnz
jo
push
cmp
xchg
jmp
mov
pop
dec
mov
rorb
jmp
movsl
push
mov
call
sub
push
sub
inc
push
add
sub
testb
ret
test
xor
roll
test
or
loopne
mov
and
in
pop
dec
fsts
inc
sbb
jmp
test
jle
leave
les
cmp
cmpsl
mov
jne
cwtl
int
and
shlb
fsubr
xor
test
inc
mov
pop
out
hlt
int
movsb
mov
cmpb
loopne
cltd
cmpb
mov
cmp
push
mov
pusha
jne
cltd
inc
or
or
mov
call
test
cltd
fidivrl
sub
mov
xor
xchg
shr
pop
inc
push
js
push
dec
xor
adc
imul
sub
jmp
lods
dec
repz
inc
dec
add
pusha
ret
out
push
add
push
add
pop
dec
roll
aam
mull
xor
aaa
lret
dec
sbb
bound
clc
loop
jnp
dec
pusha
pusha
xor
inc
aas
and
xchg
dec
aad
dec
pusha
les
in
push
jmp
stc
imul
xchg
sahf
arpl
or
in
das
out
xchg
ret
push
push
ret
sarl
stc
add
jg
xchg
push
imul
pop
xor
mov
add
bound
subb
or
call
push
mov
sub
jmp
push
and
cmpsb
jmp
call
mov
dec
push
ja
lahf
dec
dec
rcll
xor
mov
mov
dec
popf
inc
testb
addb
jne
add
adc
lock
sub
loopne
ss
fdivl
jle
pop
add
mov
mov
stos
movb
ret
push
sarb
adc
loopne
jne
gs
lds
dec
leave
aam
std
pop
out
test
dec
mov
insl
nop
fwait
sub
add
rorb
xor
imulb
inc
enter
pop
or
mov
jmp
fsubrl
neg
mov
xor
and
pusha
xor
xchg
sbb
imul
in
clc
pop
mov
xchg
or
mov
mov
ja
sbb
imul
filds
add
jmp
ljmp
lret
js
mov
icebp
lods
adc
mov
sub
jno
hlt
or
or
aad
sarb
mov
fisttps
rolb
jmp
call
repz
xor
pop
popa
or
lods
cmp
enter
xor
ja
das
stc
pop
push
lods
mov
pop
lret
test
lods
adc
mov
sbb
call
lret
seta
push
mov
out
sbb
and
xor
out
cld
shlb
inc
stos
sub
pop
or
xor
dec
mul
jae
dec
cmp
aad
out
das
testb
ret
je
xor
int
xchg
pop
push
push
add
ljmp
dec
push
push
mov
dec
jnp
das
outsl
sbb
insl
cmc
popf
stc
out
pop
xor
or
pop
push
rol
xlat
adc
pop
or
push
pop
lods
outsb
stos
add
cmp
popf
subb
xchg
fstl
adcb
xlat
adc
pop
push
mov
daa
daa
hlt
ja
sbb
mov
inc
js
aas
scas
add
pop
in
sbbb
add
mov
mov
pop
sub
scas
sub
sbb
clc
xlat
inc
jae
out
int
sbb
add
cmc
and
cmp
daa
shr
cmpb
or
lea
sub
mov
sbb
xchg
push
push
or
setb
int
pop
cmp
jmp
mov
cld
aas
adc
into
test
jo
clc
popf
loopne
rclb
mov
adc
mov
push
push
xchg
dec
adc
test
sub
cmc
cmp
pop
cli
shlb
push
sub
add
adc
or
pop
mov
out
lret
popf
jo
sub
pop
mov
cmpb
fs
push
push
add
es
mov
in
add
mov
pop
xor
xor
mov
mov
imul
dec
shlb
lret
scas
pop
mov
iret
jo
inc
mov
ljmp
pop
mov
add
jmp
test
mov
mov
in
mov
xchg
sti
ds
mov
and
mov
pop
jb
mov
cmp
adc
cltd
imul
pop
stc
pop
dec
fbld
mov
add
mov
lret
or
or
add
dec
sbb
sbb
add
jge
cmp
xchg
je
pop
add
push
mov
mov
jns
mov
jge
and
mov
fsubrs
push
pop
nop
nop
push
push
ret
mov
or
into
inc
pop
sbb
mov
repz
ljmp
mov
xor
jge
add
pop
cs
and
or
cmc
mov
jnp
jp
push
ret
add
add
push
jg
lret
popa
or
ja
cmp
sub
jb
add
mov
shl
push
push
dec
mov
stc
icebp
ss
outsb
clc
test
dec
shl
pop
push
cmpsb
sub
jns
lret
lock
add
aad
sub
mov
cmp
jmp
call
sub
fimull
es
fnsave
or
lret
ss
inc
xor
inc
or
mov
das
dec
jmp
test
sbb
xor
mov
mov
sbb
mov
clc
push
dec
loopne
mov
pop
test
ss
insb
push
sbb
lods
out
popa
repz
and
loope
js
outsl
jg
lret
add
sbb
rclb
push
sbbl
in
jo
mov
ja
shr
pop
dec
das
aaa
jmp
pop
jns
adc
scas
hlt
cmp
cmp
loopne
add
push
jne
pop
cld
cmpsl
mov
icebp
in
sub
inc
xor
add
jb
or
push
mov
jmp
pop
pop
int3
stc
cmp
ja
or
jbe
in
in
cmc
in
mov
dec
inc
push
pop
imul
ret
jnp
jo
adc
xchg
mov
add
dec
cwtl
mov
test
xchg
mov
popa
cmp
enter
adc
adc
cmc
push
loop
push
jbe
daa
or
jne
aas
xchg
mov
sub
jecxz
fs
mov
sbb
js
pusha
bound
sub
sub
add
out
and
jno
ror
loop
daa
test
xchg
movzwl
scas
pop
imul
inc
jmp
icebp
lock
mov
outsl
pop
add
pop
dec
sbb
ljmp
add
dec
mul
imul
and
int3
mov
loop
push
popf
aaa
shr
jecxz
jl
inc
popf
push
ret
inc
pop
pop
das
mov
je
popf
xchg
dec
in
mov
xor
jne
icebp
adc
add
hlt
clc
adc
push
int3
sub
cmp
out
jge
clc
cmp
or
add
push
lret
pop
cmp
add
or
cltd
push
mov
in
cmpsb
es
adc
jmp
aam
push
push
mov
and
jo
mov
xchg
push
mov
jns
jl
jecxz
mov
or
jge
jo
add
push
mov
jmp
adc
dec
xchg
lods
mov
sub
or
std
xor
cs
xchg
mov
push
jo
fsubr
fiaddl
mov
push
lock
incb
fs
push
sub
push
and
inc
jp
pop
mov
cs
sub
dec
and
sbb
jmp
cld
and
popa
ficoml
and
mov
pop
in
mov
mov
sti
xchg
xchg
in
mov
or
int
clc
lds
adc
int3
dec
inc
or
and
inc
and
inc
mov
mov
pusha
outsb
jno
cmp
sbb
jbe
bound
test
popf
xchg
outsl
test
dec
fdivrp
xor
add
sub
data16
adc
adc
aaa
dec
hlt
sbb
add
lret
dec
jmp
icebp
fildl
push
add
lods
or
insl
xchg
je
pusha
adc
cmpb
sub
pop
inc
popa
jg
icebp
pop
pop
xor
pop
add
sarl
into
jmp
pop
rcrl
or
inc
fstpl
xchg
and
dec
xchg
add
stos
sub
jne
push
cmp
xor
mov
fldt
push
push
orb
testl
mov
mov
mov
bound
pop
cmp
mov
mov
mov
cmpsb
daa
pop
fistpll
and
out
sbb
ret
pop
xlat
iret
mov
popfw
jns
bound
jge
or
add
push
pop
neg
xchg
xlat
std
enter
xchg
out
and
add
mov
in
dec
pop
xchg
inc
sub
pusha
inc
std
imul
shll
sub
int3
xchg
add
push
xorb
push
inc
or
outsb
or
leave
adc
pop
movsb
outsl
adc
pop
mov
in
dec
cmpb
adc
scas
pop
push
xchg
loope
divl
imul
mov
aam
or
push
pop
ret
lahf
jmp
push
or
int3
into
lahf
repz
add
inc
xor
addr16
sarl
lock
dec
mov
sbb
js
pop
sub
pop
in
in
mov
ret
or
pop
push
fisttps
test
out
xchg
sbb
iret
pop
xor
lret
rclb
adcl
fbld
xchg
and
pop
add
sbb
out
cltd
out
push
es
pop
adc
shll
xor
or
mov
xor
xor
adc
sbb
add
adc
jge
lods
jbe
arpl
and
jbe
add
xor
add
or
pop
movaps
cld
orl
dec
jmp
jo
lods
sbb
inc
mov
cmc
gs
lahf
jmp
pushl
jge
out
jge
sub
gs
fadds
mov
jae
add
adc
in
cli
push
cmp
jnp
daa
lock
je
inc
pop
imul
pop
xchg
push
imul
mov
pop
adc
in
rcrl
dec
jmp
sub
dec
or
in
inc
sbb
mov
inc
push
js
mov
push
dec
test
add
sahf
xchg
inc
imul
jnp
test
push
xchg
add
pop
and
test
aad
mov
loop
jmp
andb
xchg
popa
and
and
lret
or
pushf
stos
add
or
jmp
push
iret
xchg
adc
les
jecxz
jl
pop
inc
jo
pusha
cltd
jle
mov
subl
inc
add
and
adc
shlb
pop
into
sbb
adc
je
clc
jne
dec
jge
int3
testb
mov
xchg
mov
pop
mov
scas
or
push
sub
mov
out
mov
negl
fldcw
or
xor
add
cmpl
nop
ficompl
pop
pop
fsts
cs
xchg
add
cli
push
mov
nop
cmp
adc
push
fmuls
cmpl
loop
inc
push
mov
push
ret
sub
sbb
mov
scas
mov
mov
repz
inc
xchg
lahf
int
fmull
add
jl
pop
cmp
inc
out
jg
rolb
jge
call
sbb
mov
out
add
lock
daa
sub
xchg
mov
or
cmp
sbb
lret
adc
inc
mov
adcl
mov
sub
push
and
xchg
dec
jo
pop
or
andl
imul
jne
cmp
nop
xchg
add
shll
pop
das
movsb
popa
ljmp
jp
fildll
jns
ja
inc
mov
pop
or
daa
push
insl
sub
cltd
cs
and
mov
add
mov
rolb
pop
movsb
lods
xor
jo
push
cmp
or
mov
lcall
jge
dec
fwait
add
in
jecxz
xor
push
dec
cli
adc
sub
dec
and
lret
xor
or
loope
scas
mov
push
add
inc
popf
sbb
add
mov
fbld
mov
cld
pop
sub
xchg
push
pop
xorl
lea
and
call
mov
push
into
fwait
jl
xor
mov
and
push
cs
push
outsb
or
pusha
add
or
dec
lret
pop
movsb
jne
mov
lret
mov
inc
mov
push
fists
add
or
xor
sub
inc
inc
into
or
mov
xchg
ret
jb
mov
sub
pop
jnp
sub
cmp
shll
pop
push
jmp
iret
stc
or
popf
adc
ret
shrb
and
mov
jbe
mov
push
and
add
cmc
mov
pop
sti
sub
push
ljmp
push
mov
lahf
adc
decl
push
mov
data16
loop
xlat
bnd
mov
jb
pop
mov
cs
inc
cmpsl
pop
dec
pop
cld
pop
outsl
lods
inc
stos
lock
mov
jecxz
xchg
mov
xchg
mov
sti
mov
jae
fists
jbe
divb
xchg
add
jmp
jno
imul
sti
popa
sub
imulb
mov
cmp
push
and
and
in
stos
lea
not
shr
cmc
enter
stc
xchg
fistps
mov
daa
dec
jmp
push
lret
mov
adc
adc
out
repz
jmp
jmp
push
testl
push
push
movsl
inc
mov
ret
stc
mov
mov
cmp
loopne
sub
popf
cwtl
nop
rolb
cld
scas
rcrb
push
jmp
xchg
push
iret
xor
loopne
mov
lcall
fstpl
enter
mov
mov
call
mov
sbb
rcr
add
test
dec
mov
ja
mov
or
ficoms
mov
cmp
insb
aad
or
dec
cs
lcall
cmp
xchg
addl
adc
push
pop
jmp
xchg
jg
testl
dec
sbb
pop
loopne
popa
or
scas
movsl
scas
lock
loope
lock
sti
cmp
push
push
jb
push
or
cmpsl
test
sub
and
inc
and
arpl
jmp
cmc
iret
rorb
push
mov
das
mov
jb
adc
pop
inc
adcl
testb
sub
cmp
pop
xchg
call
nop
mov
xor
stos
fs
enter
ja
fcompl
jg
nop
pop
ss
and
jbe
inc
icebp
cmp
add
mov
mov
or
fidivl
add
jmp
pop
rorb
sub
shlb
inc
scas
add
icebp
int3
cmp
leave
xor
mov
mov
daa
ja
rclb
push
sysenter
leave
aas
sbb
mov
sub
jbe
xlat
loopne
and
add
mov
push
lock
and
cli
jbe
pop
pop
add
mov
testl
dec
jmp
cmp
jecxz
inc
insb
push
pop
push
sbb
test
and
push
cmp
fmul
iret
add
mov
hlt
ja
insb
dec
xlat
mov
push
fisttpll
stos
cwtl
fstp
mov
cld
ret
cli
dec
xchg
cmc
and
or
or
pop
cltd
xor
sarb
mov
lds
fimuls
dec
aas
sbb
xlat
add
or
in
mov
stc
mov
fnstenv
pop
clc
rolb
mov
pushw
rol
gs
std
adc
mov
mov
jg
loopne
cltd
jns
ret
ja
mov
enter
push
mov
mov
jns
inc
push
pop
call
xchg
cld
nop
aas
loop
wrmsr
xchg
or
adc
add
into
mov
lock
test
shll
cmc
sbb
push
push
xor
ljmp
add
xchg
fs
sahf
out
dec
stc
mov
adc
xor
xlat
insl
and
repnz
mov
xor
pop
in
push
outsb
push
in
scas
cmpsb
rclb
into
jo
hlt
mov
out
in
gs
mov
stos
mov
mov
adc
scas
add
push
mov
sbb
je
cwtl
daa
push
push
cmp
pop
imulb
sub
jae
jno
and
push
inc
dec
pop
sti
ret
adc
mov
mov
call
in
and
ret
mov
cmc
sbb
es
sub
jle
stos
xor
inc
pop
enter
pop
xor
std
cli
mov
sub
arpl
push
jbe
bound
mov
cwtl
js
stc
sub
cmc
inc
outsb
cwtl
pop
cld
out
cli
aas
pop
fdivrl
xchg
mov
nop
mov
fwait
int
stc
jp
and
jb
jecxz
add
cltd
loope
adc
aas
jne
in
pop
fmull
iret
jbe
sahf
push
fdiv
jb
insl
fsubs
stos
add
push
xor
fadd
and
std
cmp
cli
pop
insb
pushl
or
int3
inc
ds
push
sub
dec
push
fisttpl
push
popa
push
loope
out
dec
fxch
jnp
sahf
stos
cmpsb
mov
jmp
pop
out
sub
push
ret
mov
or
mov
inc
lods
xchg
pop
push
xchg
xchg
stos
add
das
lret
cld
dec
lea
ja
pop
cmpsl
pop
cmp
lea
jmp
jne
jle
dec
pop
fnsave
add
mov
loopne
fsts
mov
jno
in
filds
pop
push
pop
push
out
jmp
xchg
sub
jnp
adc
aad
mov
xor
or
inc
push
ret
cltd
pop
int
test
dec
add
imul
xor
imul
xchg
sarl
adc
leave
mov
in
movsl
jg
aas
data16
int3
and
sti
dec
cltd
push
inc
mov
and
je
adc
data16
imul
push
xor
dec
add
test
jmp
flds
sub
test
jne
mov
pop
adc
leave
mov
sahf
dec
push
scas
push
aad
ret
push
fldl
cmp
add
pop
pop
cmp
push
outsl
mov
sbb
jmp
cs
ljmp
or
dec
call
mov
pushf
and
dec
sub
sbb
dec
or
sub
fimull
fisttps
mov
add
add
jmp
sub
pop
mov
cs
mov
jge
loope
push
leave
scas
fsubp
and
mov
mov
dec
pop
jae
mov
adc
push
sbb
mov
jno
shll
sub
pop
jp
dec
clc
mov
push
push
sbb
adc
xchg
xchg
adc
daa
loope
inc
sub
dec
stc
xor
push
dec
sbb
lret
cmp
push
test
outsl
aas
gs
mov
xlat
and
mov
mov
add
sbb
idivl
push
das
js
xlat
pop
ljmp
cmp
pop
clc
mov
add
and
sub
push
jne
add
nop
lods
mov
and
out
mov
add
sub
dec
pop
adc
mov
cmp
inc
and
dec
mov
popa
cmp
xchg
push
addb
fistpl
call
and
jmp
add
sub
and
lock
jmp
out
in
addr16
and
pop
lods
imul
lods
jb
lret
pop
and
sbb
or
outsb
movsl
mov
and
xlat
daa
and
pop
lock
sahf
adc
sub
mov
pop
sbb
inc
xor
sub
int3
xor
pop
pop
insl
popf
or
pusha
incl
xchg
pop
dec
and
pop
push
push
xchg
or
aam
loopne
rcrb
and
imul
mov
sbb
pop
xchg
sti
hlt
cmpsb
stos
or
loop
mov
or
mov
sbb
push
sub
inc
xchg
imul
cmp
mov
pop
lods
sbb
and
jl
gs
dec
popf
ret
jnp
sub
add
add
adc
js
orl
jnp
out
test
std
mov
rolb
addr16
pop
adc
cli
and
or
fsubs
dec
subl
sub
inc
ljmp
xor
or
push
lret
cmp
js
test
adc
outsl
ds
mov
loopne
and
xor
pop
shl
mov
loopne
out
sbb
cmp
out
mov
sub
or
cs
leave
std
mov
sub
pop
call
lods
je
pop
stos
adc
mov
xor
push
scas
xchg
jbe
lret
sbb
and
cwtl
jno
jg
cltd
shrb
insb
xor
cmp
pop
dec
add
lock
cmp
sbb
mov
xchg
not
push
push
xlat
das
jg
xchg
or
andb
mov
je
cmp
dec
and
jbe
or
mov
xor
sub
sub
enter
sbb
mov
xchg
sbb
in
xchg
or
int3
lcall
mov
push
xchg
jbe
daa
jle
jns
sub
es
xor
jmpw
sar
loopne
icebp
jl
aad
mov
and
sub
jae
xor
into
es
sbb
lods
hlt
jo
jnp
add
pop
jge
push
mov
fists
orb
xor
and
cmpsl
push
movsb
flds
decl
out
jge
dec
adc
and
push
or
push
xor
sub
out
in
cli
mov
lds
repnz
js
mov
mov
jne
insl
jb
xor
mov
cmp
outsl
es
pop
add
add
inc
jp
mov
test
daa
pop
shll
cwtl
test
xlat
out
cli
sub
and
and
in
cmpsl
enter
push
sbb
xor
ret
jo
call
add
xor
pop
jne
inc
or
push
pop
sbb
fwait
jno
jo
popf
xlat
push
addr16
xor
decb
pop
cmp
icebp
xchg
xor
lret
or
push
cs
sbb
add
push
xor
push
dec
sbb
push
and
cmpsb
xlat
xchg
lret
dec
push
cwtl
pop
dec
data16
out
cmpsl
subl
add
xor
mov
fmuls
sahf
jnp
mov
jmp
pop
and
popa
xor
rclb
jg
xor
in
pop
paddq
lods
jge
cltd
xor
xor
lahf
pop
insl
mov
push
imul
xchg
ds
dec
xchg
mov
sahf
std
out
cmpsl
ss
mov
in
mov
push
inc
rorl
sbb
mov
inc
dec
dec
jmp
popa
mov
mov
pusha
filds
push
inc
and
sub
sub
loopne
fstpl
add
insl
sub
cmpsb
inc
xor
filds
daa
xchg
xor
pop
inc
cmp
pop
bt
loop
pop
xchg
imull
or
add
cmpsb
push
imul
movsl
jmp
daa
adc
fwait
movsl
push
pusha
sub
cs
cmp
xor
jb
xchg
fdivrs
dec
dec
jmp
fcomps
pop
repnz
enclu
mov
pop
add
inc
in
rol
pop
sub
cld
dec
jmp
push
js
push
mov
mov
lahf
mov
addr16
mov
daa
in
out
push
sub
sub
pop
inc
xor
add
jns
pop
sti
das
or
andb
sbb
inc
pop
std
lret
incb
jno
cmpsb
cld
add
test
mov
mov
nop
or
jg
xlat
push
lock
scas
xor
insb
clc
inc
sub
jmp
aaa
push
sahf
dec
ret
lret
imul
mov
arpl
xor
push
pusha
daa
in
mov
sub
pop
in
sub
das
mov
add
stos
inc
cmp
add
push
in
add
add
hlt
out
inc
or
or
inc
jmp
xor
dec
pop
je
lods
or
sub
mov
mov
mov
mov
add
outsb
add
divb
mov
stc
jns
or
loope
pop
mov
in
xchg
decb
inc
mov
mov
cmp
stos
mov
jg
idivb
xchg
adc
dec
test
repz
and
mov
sbb
sub
es
cwtl
scas
and
pusha
add
xor
shlb
xor
lods
roll
ss
dec
scas
add
ds
bound
lds
mov
out
mov
push
push
add
stos
bound
pop
jg
inc
lahf
in
dec
fdivs
orb
pop
push
test
pop
xor
ja
mov
cmc
jp
mov
xchg
inc
inc
ret
int3
pop
or
jmp
loope
jge
inc
rcr
stc
lds
jne
stos
loop
mov
or
int
aam
xchg
sbb
and
add
add
aam
lret
adcl
dec
xor
negl
loopew
das
sbb
push
jmp
imul
loopne
dec
add
inc
inc
push
and
add
sub
outsl
jbe
sbb
popf
add
sbb
sbb
add
mov
mov
dec
hlt
fdivrs
lcall
fisubl
xor
push
push
lds
lret
and
ret
dec
mov
xchg
inc
mov
jne
mov
mov
leave
pop
push
push
mov
adc
enter
pop
scas
push
lcall
and
mov
sub
jge
inc
movsl
push
fwait
dec
outsl
std
popa
adc
xor
and
dec
ljmp
out
mov
andb
sub
mov
pop
sbb
mov
out
dec
sbb
aad
loopne
mov
add
pop
fbstp
leave
mov
push
jl
inc
jmp
sub
pop
divl
sub
shl
adcb
jno
adc
mov
add
out
cli
xchg
scas
loope
add
pop
xlat
pop
dec
sub
or
rcrb
add
push
xor
inc
sub
lahf
mov
cltd
xchg
jg
imul
and
jl
cmpsb
pusha
add
dec
ss
xor
int3
ljmp
push
dec
in
xchg
jo
ret
lock
sbb
pop
and
pop
mov
lock
insb
jno
sbb
xor
mov
cmp
or
rorb
nop
push
inc
idivb
push
dec
nop
inc
inc
jne
mov
cmpl
xchg
dec
mov
sub
sub
leave
jge
in
in
daa
xlat
add
fbld
inc
jo
push
cld
add
push
ds
les
rcll
mov
sbb
sahf
arpl
lret
inc
mov
js
pop
jnp
jl
imulb
addr16
jns
or
and
orb
xor
lods
cmp
adc
ja
xor
sbb
pop
mov
push
in
in
xchg
inc
in
and
add
jl
lock
test
pusha
xchg
sbb
ds
addb
movsb
dec
xor
aam
sub
mov
adc
mov
push
sbb
into
add
sbb
adc
sbb
es
cmpsl
test
int3
nop
sub
neg
ficomps
push
xor
push
imul
or
jns
pushf
ret
push
add
pop
mov
popf
loopne
mov
sbb
in
pop
arpl
inc
push
pop
insb
js
mov
sbb
push
cmp
ss
adc
subb
xchg
mov
sbb
or
loopne
mov
leave
xor
push
cmp
pop
je
dec
or
bound
loop
sahf
pop
pop
and
insb
jb
push
mov
stos
fwait
dec
in
ficoml
xchg
jno
jo
ljmp
clc
mov
stc
mov
add
xchg
mov
mov
sbb
push
push
cmp
sbb
and
sub
and
lcall
insl
mov
movsb
popf
mov
or
mov
xor
add
cmpb
xchg
shlb
cmp
arpl
test
jae
pop
adc
add
adc
mov
push
jmp
add
test
mov
push
xchg
add
dec
or
pop
push
popa
jb
pusha
mov
es
les
and
inc
shlb
xchg
inc
ljmp
js
jmp
mov
cld
sar
push
andb
movsb
push
pop
xchg
xor
add
mov
gs
xchg
rolb
sbb
orb
imull
test
dec
mov
jl
add
shlb
jns
sub
push
cmc
sbb
outsl
or
fstpt
push
mov
mov
add
pop
leave
inc
adc
or
fstpl
test
mov
and
mov
push
mov
das
mov
bound
jp
mov
jl
push
mov
sub
sbbl
imulb
dec
or
sarl
jmp
add
xchg
jge
insb
sqrtps
jmp
loopne
xlat
imull
xor
push
dec
add
loop
add
ret
test
lds
push
mov
lock
dec
add
adc
bswap
in
repz
xchg
cmp
pop
push
rolb
sahf
cmp
iret
nop
outsb
pop
shll
add
inc
and
add
jo
sar
mov
push
jl
sub
sub
mov
sub
inc
das
push
mov
push
pop
pop
mov
test
cmp
pop
adc
mov
enter
pop
ss
bnd
add
ljmp
imul
push
mov
icebp
mov
push
loop
enter
lahf
push
xchg
mov
aaa
or
and
outsl
sbb
dec
cmp
test
sbb
ficompl
mov
xchg
sub
add
cmp
jle
mov
mov
ss
push
scas
lret
dec
inc
jns
push
pop
jnp
adcb
add
cmp
ja,pt
cmc
nop
aaa
pop
and
sbb
push
xor
mov
add
pop
clc
or
or
inc
sub
in
cmp
add
shrb
stc
ret
pop
lds
lods
adc
sbb
pop
jge
fidivrl
jo
xchg
rclb
into
add
pop
xor
pop
cwtl
xor
add
mov
mov
les
sbb
ss
cmc
or
loope
mov
jbe
into
cmp
mov
into
mov
sub
push
lret
inc
jmp
adc
push
ss
pop
sbb
lret
aaa
testl
xchg
enter
or
and
xlat
imul
xor
xchg
inc
mov
inc
dec
jmp
lds
lds
inc
out
daa
dec
jg
popa
push
adc
gs
lods
add
sub
mov
or
adc
adc
rclb
jnp
inc
jmp
out
push
inc
and
not
inc
dec
mov
push
mov
inc
pop
sti
sub
sbb
xor
xchg
dec
pop
shr
int3
mov
or
fwait
adc
arpl
mov
pop
jne
pop
shr
cmpsl
ret
sub
sub
push
call
inc
movhps
nop
mov
mov
jmp
rcrl
sub
adc
push
pop
pusha
insl
sub
sub
inc
and
daa
enter
add
add
mov
incl
scas
in
add
fldcw
pusha
add
push
shrb
pop
cmp
and
sub
call
adc
jp
test
fwait
or
mov
add
fs
in
jmp
jl
bound
jge
xor
psraw
lods
cmp
mov
clc
mov
ss
xchg
dec
cmp
xor
pop
cmpsl
movsb
adc
push
mov
cld
push
or
out
pop
push
xor
sbb
mov
loope
jg
dec
xchg
mov
add
and
jbe
add
mov
push
dec
icebp
out
jno
xchg
shrl
je
scas
mov
inc
adc
cmp
mov
cli
dec
loop
leave
push
mull
push
mov
loop
div
es
int3
or
out
mov
shll
mov
mov
cs
mov
fbld
push
filds
fldenv
push
xchg
or
xor
lahf
loope
aad
aaa
xchg
ret
push
push
mov
repz
dec
mov
iret
lock
dec
mov
xchg
jle
jmp
sahf
adc
iret
xchg
adc
movsl
outsb
mov
in
shl
popf
add
push
pop
lcall
test
push
jmp
adc
jmp
outsb
push
mov
pop
push
negb
or
pusha
jne
push
nop
or
pop
xchg
out
adc
xchg
repnz
jbe
dec
push
mov
dec
jns
inc
pop
mov
mov
xchg
arpl
lock
dec
xor
jnp
leave
sbb
loope
arpl
sbb
sub
mov
fadds
out
gs
js
add
enter
jge
fcompl
jp
insl
mov
pop
cmp
subb
leave
mov
mov
sub
jns
scas
pusha
sub
sbb
inc
popa
jmp
jecxz
aam
mov
in
sub
push
arpl
ffree
pop
andb
rcrb
and
fwait
cvtps2pi
scas
jmp
fimull
jno
xor
jne
shlb
stos
mov
inc
mov
test
or
xor
push
cmp
add
pop
and
push
jle
je
dec
add
ret
loope
or
or
ret
fdivr
jmp
push
push
adc
add
or
in
testb
inc
lds
jo
dec
hlt
mov
sub
inc
cmp
test
xlat
call
push
mov
dec
in
aas
sub
add
xor
push
or
and
clc
xorps
push
outsl
pop
nop
mov
and
leave
dec
rcll
and
sub
into
ret
xor
xor
stc
not
cli
push
jmp
jbe
sbb
jnp
and
pop
xor
xchg
inc
or
mov
in
cmp
xor
push
push
scas
jle
adc
ljmp
jl
add
xchg
pop
sub
add
xor
xor
pop
add
int3
std
jmp
pop
daa
xor
es
or
neg
xchg
jmp
das
pop
ret
xlat
aaa
or
pop
push
sti
leave
mov
or
push
add
pop
cmpsb
insb
push
jnp
pushf
popf
push
in
or
pop
jmp
repnz
arpl
xlat
pop
fists
lret
jle
or
dec
jmp
pop
xchg
jmp
jmp
sbb
in
mul
dec
xchg
or
and
add
add
or
addr16
or
or
inc
sub
lret
and
sub
leave
mov
pop
mov
pop
xorb
pop
mov
mov
cmp
subl
cmp
xlat
std
pop
pop
out
daa
cld
cmpsb
fdecstp
mov
mov
push
mov
push
fcmovnbe
push
aam
jmp
mov
jmp
add
outsl
and
mov
xor
xchg
dec
icebp
jno
repnz
xchg
enter
lahf
inc
cmp
fldt
imul
stos
jne
xchg
loopne
sbb
popf
ljmp
adc
mov
push
jmp
jno
pop
in
mov
lret
repz
stc
sarb
ret
aam
lods
mov
adc
xchg
xchg
xchg
adc
shl
sub
fsubrs
push
inc
pop
sub
pop
daa
in
test
adc
punpckhwd
lods
pop
mov
sbb
xchg
stos
cwtl
ret
movsb
cld
push
mov
or
das
jns
mov
sub
and
mov
mov
icebp
jb
mov
lds
ret
fwait
jmp
lds
push
jmp
dec
repnz
dec
aaa
movsb
push
idivl
test
call
aas
inc
xchg
adc
xlat
cli
xchg
jbe
and
rolb
xor
lret
jo
or
out
inc
jmp
mov
pop
das
shll
dec
push
inc
insl
pop
and
cmp
sahf
and
sbb
movsl
mov
push
mov
push
andl
jecxz
fstpl
subb
mov
mov
push
push
xlat
je
push
test
das
test
les
add
dec
xchg
push
popf
rorb
add
sub
jg
das
adc
inc
add
push
iret
por
imul
inc
mov
ja
dec
and
mov
in
inc
cwtl
push
insl
add
imul
or
cmp
jbe
sub
or
negb
push
pop
out
adc
and
lods
and
add
rcl
sub
add
sbb
mov
sbb
pop
xchg
push
shr
int3
pop
jmp
aas
inc
cmp
xlat
lea
dec
outsl
push
daa
fcoms
xchg
icebp
push
inc
dec
sub
fdivrl
cmp
sub
mov
and
inc
fsub
mov
jae
sbb
shrb
popa
orb
lea
or
les
sahf
mov
xchg
xor
scas
hlt
xchg
test
call
imul
int3
push
dec
sub
pop
lods
cmc
pop
mov
dec
test
jae
fildl
push
ror
fbld
pop
fidivrs
mov
or
mov
mov
jo
jbe
lds
movsl
fistps
push
jmp
pop
sub
sub
daa
aaa
repz
cmp
lods
adc
pop
push
push
repnz
pop
sbb
push
lret
sti
pop
out
loope
adc
call
jmp
cld
inc
jecxz
arpl
iret
jns
xchg
pop
lock
mov
mov
and
or
xchg
mov
pop
push
daa
lock
ljmp
xor
xchg
imul
add
mov
jne
arpl
add
andb
repnz
nop
add
mov
pop
out
pop
jb
dec
add
cmc
sbbb
aaa
xchg
cmp
pop
pop
lds
or
mov
lods
mov
in
pop
popf
sti
pop
inc
jmp
mov
not
and
fcmovne
aam
adc
ds
je
adc
cmp
or
push
push
jmp
xchg
sub
loop
loope
sarl
lock
push
aas
stos
xchg
xchg
sbb
jmp
or
cmp
xchg
mov
ret
cmp
sbb
in
mov
jle
and
gs
cmp
in
or
push
cmp
and
adc
daa
inc
sub
push
or
pop
clc
adc
xor
pop
mov
xor
sub
in
lret
fdivr
push
sbb
inc
dec
call
dec
stos
mov
aam
push
jae
xchg
dec
sbb
call
sbb
addr16
lock
loope
cmp
int
xor
es
addb
push
inc
or
xchg
add
lret
inc
cwtl
xchg
cmpsb
inc
pop
lahf
int3
outsb
push
add
ss
sbb
sti
aas
setae
or
outsl
shr
jg
xor
orb
inc
inc
xor
xor
iret
mov
out
pop
mov
push
mov
mov
adc
fbld
or
and
jmp
sub
xchg
js
dec
dec
mov
mov
sahf
dec
dec
push
mov
enter
push
mov
pop
xor
adc
mov
add
cwtl
sub
shlb
ret
jno
push
fs
or
pop
dec
rolb
xchg
dec
mull
stos
add
arpl
push
and
sbb
mov
add
push
nop
sub
imul
pop
sub
jne
xchg
fisttps
mov
inc
fiadds
adc
dec
mul
adc
xlat
push
sbb
scas
mov
and
fiadds
add
out
dec
sub
adc
sbb
jne
add
push
js
and
subb
mov
icebp
push
loop
aaa
leave
mov
or
jnp
int
or
xor
sub
add
popf
dec
in
pop
pop
push
add
pop
xchg
fcmovu
dec
push
ret
push
sub
or
fcoms
pop
pop
pxor
cmp
add
das
jmp
rcrl
mov
outsb
or
aad
in
bound
mov
leave
inc
stc
aaa
mov
shr
add
jle
negl
xchg
arpl
shlb
dec
pop
inc
adcl
pop
add
push
les
push
dec
mov
dec
push
lea
mov
adc
add
or
mov
aam
lret
cmp
loope
adc
mov
pop
and
pop
inc
mov
jle
leave
or
and
fmul
cmp
fld
jnp
push
add
xor
sub
test
push
jns
add
push
push
or
mov
xor
daa
xchg
xchg
inc
jmp
addr16
insl
push
sarb
shlb
pop
push
mov
icebp
cmp
adc
out
movsl
ds
sub
inc
dec
pop
jae
test
test
daa
sahf
xchg
imul
add
cmpsl
aas
fcompl
pop
push
mov
pusha
cmp
push
fs
mov
mov
mov
outsb
sbb
pusha
or
stos
or
xchg
out
in
movsl
pop
inc
pop
and
and
lds
mov
jmp
clc
mov
sbb
shlb
pop
push
cmp
push
jmp
xor
int
ret
pop
push
adc
std
or
mov
fs
pusha
mov
pop
adc
and
inc
pop
movsl
iret
bnd
cwtl
jo
add
in
pusha
in
inc
stos
xchg
ds
mov
pop
and
sub
mov
mov
mov
jbe
mov
jp
lret
inc
shrb
xchg
push
dec
lret
insb
pop
xor
inc
sarl
sbb
neg
dec
sbb
cmc
psubq
xchg
addb
add
subb
pop
sub
pop
pop
mov
in
jne
pop
xor
cwtl
clc
jle
sub
loopne
popf
jbe
lret
mov
shl
pop
pop
adc
mov
incb
int
mov
add
cmpsb
mov
cltd
jne
cltd
mov
inc
add
add
rorl
ficomps
pushf
cmp
enter
cmp
push
push
fiadds
shrb
sbb
pop
jl
sbb
shlb
call
jmp
adc
popa
inc
int3
xor
int3
ljmp
add
mov
pop
aam
sbb
add
enter
sahf
aaa
fldenv
stc
rcrb
inc
add
or
aad
loop
mov
mov
adc
add
xorb
test
icebp
cmp
dec
push
mov
pushf
adc
and
add
inc
rol
push
enter
push
aad
or
dec
out
insl
mov
subb
xor
mov
pushf
sub
push
ds
sub
daa
rcrl
push
je
daa
aas
add
mov
pop
xlat
push
pop
pop
mov
jmp
iret
scas
in
adc
add
xor
in
add
popa
inc
dec
cmp
filds
add
mov
clc
push
test
test
inc
movb
sbb
inc
and
mov
lea
rcll
push
adc
fwait
add
in
sahf
or
or
pusha
mov
adc
cmc
roll
sub
outsb
dec
jae
insb
or
jne
push
inc
not
or
jo
add
filds
pop
push
mov
imul
jge
daa
cmp
add
mov
xchg
rcr
in
pop
adc
int
xchg
mov
add
repnz
xchg
add
mov
shl
inc
icebp
or
repz
ficoms
and
push
and
outsl
mov
dec
fimuls
cmpb
popa
add
mov
mov
push
inc
jo
mov
mov
mov
fnstenv
mov
jmp
icebp
and
imul
push
push
or
arpl
inc
add
ret
paddusw
pop
imul
add
scas
rorl
test
dec
add
sbb
fists
add
orl
popa
jge
push
push
lods
sub
or
jmp
dec
movsl
push
icebp
xchg
and
rolb
xchg
das
fucomip
push
add
sbb
pusha
and
mov
out
mov
sub
out
jbe
mov
sbb
aas
pmullw
lods
mov
xchg
fsubrs
ss
sbb
push
je
scas
pushf
and
push
jge
xor
mov
fisttpll
sbb
std
and
jmp
enter
aad
inc
rcrb
sbb
push
xlat
push
sbb
and
cs
test
pop
mov
and
jp
pop
jns
movsl
std
daa
es
xchg
and
xchg
in
lret
aam
dec
fwait
add
xor
push
inc
popf
pusha
push
mov
adc
dec
mov
pop
mov
jle
push
mov
andb
std
repnz
enter
in
push
pop
inc
cli
pop
push
ret
jmp
fdivrs
sub
push
stc
mov
stos
push
stos
lds
fiaddl
or
es
push
and
aaa
jmp
loopne
lahf
shl
shlb
pop
jbe
pop
cli
addl
je
daa
rcrb
clc
pusha
push
jbe
insb
and
outsb
xor
jl
sbb
fiadds
ret
aam
and
addb
fsts
rorl
mov
repnz
ja
addl
insl
test
das
pop
pop
stos
neg
in
mov
icebp
stos
je
mov
xor
or
xchg
pop
std
and
out
sbb
add
loopne
repz
ficomps
dec
add
ret
xor
or
out
pop
pop
pusha
std
jle
ds
imul
add
push
or
repnz
pop
cmpb
xlat
adc
je
out
sbb
inc
into
xor
aas
adc
mov
or
stos
js
arpl
fldenv
and
dec
push
mov
stc
daa
pop
sub
pop
sti
xorl
push
aam
mov
or
and
inc
xor
add
movb
repnz
and
dec
or
add
dec
mov
pop
push
stos
or
sti
push
cwtl
push
dec
in
les
push
push
jmp
fwait
xor
rcll
and
adc
xchg
jne
loop
push
adc
mov
shlb
jecxz
mov
cmp
mov
aad
lds
xor
jns
fs
sub
mov
std
cmp
cld
cmpsl
and
jae
inc
orb
jg
add
jno
xchg
adc
or
inc
sbb
sub
mov
lods
repnz
and
sbb
or
loopne
ljmp
xchg
inc
test
lods
mov
jns
not
mov
test
lret
pop
addl
jmp
lods
scas
xchg
int3
jbe
aad
push
les
xchg
ret
setae
fsts
sti
iret
pop
ficoml
mov
jmp
mov
insl
cmp
jle
imul
int
jl
sub
sbb
xor
fwait
pusha
loop
push
push
sub
jno
and
hlt
add
and
scas
cwtl
scas
inc
stos
lods
loop
jns
sub
pop
pop
pop
sub
loope
inc
or
arpl
mov
lods
pop
push
in
add
cmp
aaa
out
xchg
pop
dec
je
dec
ljmp
js
xor
inc
mov
push
mov
cld
scas
aam
add
xchg
inc
mov
adc
dec
lds
sub
test
xor
dec
xlat
filds
jmp
inc
cmpsl
hlt
cltd
in
mov
rol
popf
sbb
sub
mov
mov
call
xor
decb
stc
fcompl
stc
faddl
or
outsb
and
sbb
fcoms
jg
popf
std
mov
dec
mov
add
or
push
jl
int3
data16
push
insb
lcall
shrb
xchg
jle
adc
orl
sub
pop
add
hlt
sub
shll
das
inc
into
in
insb
inc
jne
or
jecxz
or
cmp
mov
dec
dec
cmp
dec
mov
add
ret
sub
add
call
lret
jne
sub
out
aaa
rcrb
cwtl
sub
pop
jl
jle
fadds
xchg
es
in
rolb
sub
add
add
mov
stos
mov
insb
pop
hlt
jbe
or
out
addb
cmp
in
xchg
mov
jp
jmp
and
push
or
jmp
stos
or
jnp
mov
pop
jno
andb
add
mov
shl
add
xlat
mov
cmpb
lock
dec
xchg
fidivrl
sub
mov
ljmp
out
pop
mov
and
daa
popf
ret
imul
or
aas
je
cs
pop
sub
movsl
idivb
push
and
les
test
or
js
add
xor
lock
xchg
mov
dec
or
cld
scas
loop
icebp
pop
xor
mov
mov
inc
push
push
mov
in
sub
xor
mov
push
and
inc
dec
pop
das
xor
dec
test
sub
mov
adc
or
pop
hlt
pushf
lods
popf
or
or
jl
mov
test
orl
testl
pop
cmp
rclb
xchg
add
cmp
and
sbb
fimuls
and
mov
lret
ficoml
cmp
cmp
lret
arpl
in
rorl
dec
sbb
pusha
lock
or
mov
xor
adc
insb
sub
add
cs
or
pop
xchg
aas
xchg
neg
push
or
fwait
and
pop
cmp
adc
ljmpw
iret
xor
or
loop
rcrl
icebp
daa
popa
cmpsl
pop
jl
add
adc
inc
lods
dec
aas
mov
leave
add
pop
push
cmp
add
push
adc
mov
add
adc
or
pop
aas
add
inc
pushf
and
and
or
mov
sub
or
push
or
push
sub
js
cmpsl
imul
jne
add
mov
xchg
pop
jmp
dec
test
xchg
mov
hlt
inc
dec
movsb
cld
nop
loop
inc
add
add
pusha
lock
adc
leave
addr16
pop
dec
dec
loope
jbe
dec
ds
push
jp
mov
icebp
mov
inc
aam
das
adc
imul
xor
mov
adcb
xor
mov
lcall
cwtl
mov
pusha
pop
sbb
test
xchg
or
movntq
out
inc
adc
xchg
add
pop
test
fldl
dec
xorb
in
lret
fcomip
mov
mov
or
and
cwtl
ljmp
xchg
lret
scas
adc
or
jmp
fs
jns
imull
daa
das
or
sarb
mov
lret
lds
in
add
push
mov
jecxz
outsb
xchg
pop
inc
loopne
push
cmp
out
jmp
push
into
lds
jge
jne
dec
jmp
add
or
xor
sbb
mov
jge
jnp
fmulp
add
fcmovnbe
jge
inc
popa
pop
or
dec
adc
push
rol
or
mov
mov
sti
pop
stos
repnz
call
in
loop
mov
jmp
cwtl
fldl
imulb
dec
add
mov
pop
xchg
push
or
mov
imul
mov
inc
push
cltd
or
es
push
xchg
add
inc
imul
orb
pop
jo
adc
stos
cwtl
or
test
mov
push
pop
not
or
push
test
rol
sarb
dec
or
lea
jmp
test
sub
cmc
jnp
sbb
daa
and
adc
adc
cld
in
cmc
mov
push
test
mov
xor
clc
cmc
add
adc
jg
aad
dec
popa
push
inc
ljmp
aad
loop
xchg
add
movhps
and
or
cmp
lods
adc
pop
or
xor
cs
aaa
movsl
sarl
dec
lock
sub
outsl
push
push
push
add
mov
pop
in
xor
imul
adc
movzwl
push
nop
in
test
pop
out
or
ffree
jle
adc
ds
or
xchg
enter
or
jge
jbe
fs
dec
pop
stos
push
sahf
pop
fldenv
sarl
aaa
and
mov
xlat
ffree
jmp
sti
push
pop
jnp
sub
push
dec
mov
aad
pop
imul
add
dec
pop
roll
dec
mov
push
sub
mov
lods
pop
ret
sarb
pop
shl
outsb
cmp
jmp
fbld
scas
xor
ret
stos
stos
pop
and
std
rcrb
into
aaa
dec
test
xchg
loopne
test
xchg
pop
jmp
mov
xor
imulb
xor
add
jmp
adc
jo
mov
jp
sbb
fmuls
pop
jle
mov
and
iret
push
sbb
inc
and
xor
and
pop
mov
dec
daa
or
hlt
stos
mov
jo
mov
cmp
call
mov
mov
push
xchg
jmp
push
lcall
popf
push
cmp
xor
sbbb
cmp
adc
jl
shlb
loope
push
add
shrl
mov
pop
or
xchg
and
add
lret
jmp
mov
stos
sub
or
cmp
add
push
inc
pushf
add
or
add
loopne
push
jp
adc
rorb
shrb
icebp
mov
mov
cwtl
push
sub
cmp
mov
sti
dec
loop
pop
xor
jmp
xor
mov
cld
jg
ds
enter
and
push
and
dec
rorl
sbb
add
or
or
pop
adc
and
push
arpl
int3
push
cmc
cwtl
mov
enter
bound
pop
outsb
leave
jge
push
xor
mov
push
xchg
dec
fwait
pop
lods
cmc
enter
dec
xor
fiadds
sub
aad
or
ja
test
push
jge
mov
aad
add
pop
test
jo
inc
mov
imul
lods
sarb
jmp
mov
add
mov
pop
popl
or
pop
add
adcb
std
push
and
sbb
stos
push
les
xor
pop
sub
pop
int3
loopne
hlt
cwtl
imul
sbb
push
je
or
jge
jp
lcall
pop
dec
pop
ret
mov
pop
jae
js
and
in
pop
pop
and
mov
dec
cmp
rcl
mov
jl
inc
rcl
push
bound
leave
add
xor
ficoms
neg
lods
and
or
mov
xchg
mov
mov
jae
and
mov
lahf
push
push
dec
incb
sbb
in
sub
mov
das
imul
pushl
jl
push
and
movsb
cmp
add
jbe
xchg
lods
dec
pop
sbb
ret
sub
pop
cmpb
les
fwait
xchg
sub
lods
lds
mov
pop
popf
insb
push
xor
pop
sbb
mov
push
movsl
mov
add
jnp
sti
nop
ret
mov
adc
xorb
sbb
pusha
addr16
popf
aad
fildl
jmp
out
test
mov
xor
mov
jg
shr
push
subb
testb
sub
pop
dec
mov
or
push
mov
mov
and
inc
jno
inc
mov
sub
add
xlat
es
inc
push
jmp
test
in
lret
push
mov
ret
sub
ljmp
fimull
mov
test
add
jmp
out
les
push
mov
mov
dec
mov
rorl
mov
dec
mov
rorb
in
xchg
repnz
push
in
dec
jge
jo
mov
mov
dec
sahf
or
adc
insb
or
xchg
pop
dec
fs
cmp
lcall
mov
addr16
repz
push
mov
lds
jp
xchg
shl
hlt
ds
test
xchg
mov
jno
xor
ss
dec
xchg
adc
pop
pop
add
or
or
ds
pop
jmp
stos
inc
arpl
out
xchg
fadd
adc
fiaddl
mov
add
jmp
mov
mull
ss
dec
outsl
jp
and
shr
test
adc
mov
and
jns
lods
hlt
out
jmp
scas
xor
stos
loopne
and
jmp
mov
xor
inc
psllq
inc
mov
in
dec
call
cmp
aad
mov
mov
jns
or
test
and
fildll
pop
aas
mov
cltd
dec
pop
lahf
mov
push
dec
pop
aad
dec
sub
adcl
or
pop
idivl
or
push
mov
stos
and
pop
or
fwait
movsl
divb
add
pop
outsl
add
aad
lret
adc
push
mov
mov
push
sbb
xchg
out
pop
imul
xor
xchg
jge
sub
and
aad
mov
xchg
insb
add
pop
aad
jmp
adc
pop
dec
das
sbb
or
pop
push
pop
mov
sub
stc
or
inc
mov
loop
dec
lahf
outsl
outsb
lret
lea
fidivrs
push
mov
mov
nop
shrb
movsb
divl
dec
cli
mov
pop
xchg
fcmovnbe
int
sbbb
jp
mov
lret
loop
pop
inc
pop
cmpsl
or
cmp
push
test
cmp
or
cld
xor
repz
and
jmp
sub
or
pop
push
xor
inc
shlb
adc
loop
sti
mov
adc
and
xlat
adc
data16
or
int
cmp
push
outsl
and
sbb
and
xlat
adc
pop
shll
add
stc
push
mov
bound
adc
inc
daa
push
cli
push
ljmp
rorl
xor
movsb
mov
push
daa
jmp
stc
mov
sbb
mov
push
imul
push
jbe
adc
xlat
mov
push
mov
in
and
mov
ja
push
pop
mov
div
or
dec
fiadds
hlt
clc
popa
daa
call
pop
sbb
xchg
adc
and
mov
cmc
jne
jnp
loope
imul
or
inc
clc
hlt
mov
push
adc
sub
out
mov
lcall
das
adc
cli
sahf
inc
jmp
jp
ljmp
xor
out
or
dec
es
and
add
mov
xlat
arpl
push
push
cmp
or
sarl
add
les
mov
mov
shrb
adc
adc
pop
inc
negl
int3
push
fistl
ss
daa
fmuls
and
lret
inc
mov
mov
lock
jmp
in
aam
mov
or
lock
inc
dec
xor
cli
xchg
sub
and
and
sbb
jmp
leave
adc
pop
mov
adc
pushf
mov
sub
push
es
dec
mov
add
adc
out
inc
lahf
add
fwait
add
xchg
xchg
cld
into
das
or
inc
rcrl
dec
rolb
mov
pusha
inc
xor
insl
push
loope
lret
push
imul
jns
xlat
xchg
cmp
push
add
inc
mov
or
std
xor
mov
pop
mov
call
or
cld
cmpsl
lock
sub
sub
sub
stc
mov
push
leave
mov
jne
pusha
lock
pop
idivb
mov
aaa
cwtl
jp
add
cmp
jmp
sub
pop
push
push
push
imul
jmp
enter
fisttps
cltd
dec
mov
mov
sub
pop
inc
and
adc
pusha
push
push
mov
cmp
fstp
shrb
xlat
fsubs
dec
in
pop
pop
mov
xor
cmp
lods
or
jmp
es
ret
inc
inc
sbb
fwait
add
sbb
dec
xor
jmp
mov
xor
lock
mov
data16
sub
push
jmp
outsl
or
lods
sub
push
xorb
lds
pop
push
dec
adc
std
dec
movsl
jb
mov
jbe
add
sub
pusha
jmp
push
push
pushf
je
pop
fcoml
lea
out
arpl
cvtpi2ps
mov
inc
or
sti
cmp
stc
dec
fcompl
adc
xchg
push
push
dec
lods
mov
insl
adcb
jl
aaa
pusha
pop
or
cmovns
sub
insb
sbb
mov
stc
pushl
mov
adc
xchg
movsl
mov
xchg
pop
xchg
lods
pop
mov
ret
or
mov
add
xchg
xor
mov
add
neg
lea
rcll
cmp
jg
jmp
sub
sub
sub
in
icebp
popf
imul
pop
sub
call
jae
fimuls
sbb
mov
xor
inc
icebp
repnz
fcomps
mov
pop
cmp
and
sub
jmp
flds
sub
sub
add
jmp
fbstp
push
orb
ljmp
and
mov
mov
outsl
cli
and
rol
fists
mov
jmp
test
xor
test
adc
xchg
fucomip
sub
nop
push
mov
movsl
loopne
dec
dec
int
cmp
flds
jle
dec
and
mov
push
add
add
and
and
add
es
psadbw
dec
pop
shlb
aas
or
mov
and
ret
rclb
je
mov
mov
jo,pt
divl
add
sti
ja
popa
cmc
xor
aas
add
cmp
pop
sub
push
out
mov
cmp
mov
rcrb
scas
movb
push
mov
jo
mov
jmp
jb
and
iret
mov
dec
mov
and
call
das
mov
cmp
xchg
adc
mov
sub
jg
inc
movsl
aas
dec
mov
cmp
pop
mov
lds
add
loopne
or
add
mov
jnp
int3
mov
or
inc
and
outsl
add
add
mov
mov
inc
jge
push
std
push
jle
std
xchg
or
in
sbb
popa
daa
sub
or
or
add
and
dec
repz
jle
add
js
dec
pop
fiadds
test
or
clc
jno
ror
or
jmp
lods
adc
stos
cmc
pop
clc
dec
shrb
iret
fisubrl
and
jmp
sbb
sbb
pop
shl
and
popa
pop
shl
vpaddsb
jo
enter
inc
pusha
in
cld
push
data16
mov
push
sub
imul
dec
cmp
addr16
xabort
xchg
pop
sbb
mov
sub
dec
jmp
xchg
cld
lret
clc
push
cld
mov
out
sub
out
inc
imulb
sbb
cltd
js
std
cmp
pop
pusha
pop
mov
mov
push
mov
mov
mov
popf
stos
popf
arpl
ljmp
mov
sahf
and
out
xor
andl
inc
push
push
mov
movsb
mov
add
push
fcomps
jecxz
data16
jno
or
sub
or
int
push
sub
jns
adc
mov
jnp
add
bound
or
xchg
and
imul
push
popf
filds
mov
je
adc
xlat
xchg
dec
addr16
in
loop
push
add
pop
js
sbb
xchg
xor
outsb
dec
aad
dec
mov
mov
stc
mov
pop
incl
sar
mov
and
cvtdq2ps
jmp
cmc
scas
sti
shr
bound
mov
daa
je
in
xor
es
sub
or
cmp
inc
enter
push
aas
add
cmp
mov
mov
xor
call
and
add
fdivs
push
jbe
sub
adc
stos
loop
xchg
xchg
into
adc
add
inc
mov
push
or
sub
mov
ds
inc
add
lods
sbb
push
jne
pushf
rcrl
sub
mov
pop
icebp
mov
mov
jle
shl
movsb
pop
push
add
je
testb
stos
daa
dec
mov
bound
xlat
cmp
jnp
or
mov
jg
mov
in
xor
mov
add
leave
je
daa
sbb
jnp
dec
shll
sub
xor
psubq
add
inc
call
mov
lock
dec
cli
adc
das
cmpsb
xchg
stos
je
loope
inc
addr16
stos
adc
sub
popl
dec
bound
ds
sbb
inc
xor
sbb
and
jl
lods
mov
jae
ret
ds
xor
or
aad
inc
pop
enter
jge
clc
loope
jp
mov
jb
inc
sahf
or
mov
shlb
lahf
mov
ds
rcl
pusha
jle
mov
mov
popf
xchg
push
lahf
dec
ja
push
iret
mov
mov
cmp
into
push
les
adc
sbb
xor
lds
and
mov
pop
rorb
push
and
sub
in
xchg
or
pusha
imul
mov
jecxz
push
stos
jge
pop
cmp
test
or
pop
mov
insb
xlat
adc
dec
mov
ljmp
sbb
mov
adc
stc
outsb
jnp
jecxz
mov
inc
xor
adc
pop
ljmp
mov
idivb
dec
shl
jmp
bound
movsl
loopne
mov
into
jmp
xchg
and
lock
lods
sub
fadds
sub
jmp
jmp
push
mov
lahf
pop
xchg
or
jmp
add
sub
push
cs
mov
or
xchg
lock
mov
mov
insl
mov
sbb
mov
mov
push
or
loopne
stos
in
popa
pop
mov
mov
ja
pop
mull
mov
bound
orb
fdivrl
xorl
lret
js
mov
mov
mov
sbb
fisttps
xchg
shrb
rcr
ljmp
cmpsl
rcrl
divl
jl
pop
clc
loop
add
ljmp
and
sbb
push
stc
inc
subb
and
mov
jmp
add
sub
scas
and
xchg
cmp
pushf
jl
adc
out
adcl
xchg
push
roll
adc
cmp
icebp
push
jmp
pop
inc
insl
pop
in
outsb
mov
inc
push
es
fisttpl
mov
xchg
cmp
iret
mov
mov
inc
add
rolb
shl
sub
mov
call
mov
daa
jle
ret
and
js
push
mov
lock
stos
loop
xchg
call
jnp
bound
xchg
out
mov
jle
cmp
sbb
push
movsb
pop
fdivrl
push
sub
fsubl
lahf
repz
xchg
or
std
add
push
sub
push
mov
test
hlt
or
mov
in
ds
adc
ss
rolb
add
fsubs
pop
sti
adc
das
xchg
push
cld
jb
push
jge
xor
xor
mov
out
or
xchg
push
in
mov
sub
loopne
cmp
and
mov
test
inc
inc
mov
or
jb
std
jo
jl,pn
mov
dec
mov
shll
clc
push
pop
add
sar
nop
xchg
add
dec
subb
push
and
cmp
das
test
js
rcrl
push
xchg
sbb
pusha
iret
xchg
data16
imul
mov
mov
push
lock
cmpsb
xchg
push
xchg
and
sbb
sbbl
mov
xchg
dec
neg
or
pop
fsubs
or
jmp
out
inc
ret
mov
or
pop
clc
sbb
and
cmc
pop
cmp
adc
dec
pushl
test
in
sarl
adc
sub
movsb
sbb
jb
in
or
adc
push
aaa
add
mov
push
add
or
stc
jge
fs
sbb
cmp
test
loope
shrb
sub
push
loop
add
test
into
mov
sti
pop
shl
push
neg
sbbb
push
cmc
daa
je
xchg
push
popa
dec
mov
test
jle
xchg
sbb
mov
nop
mov
dec
mov
pusha
mov
sub
pop
pop
jmp
mov
stc
dec
in
scas
xor
jmp
dec
push
xor
cmpsl
pushf
xchg
mov
orps
add
mov
jl
add
cmp
add
mov
dec
adc
and
push
cmp
ret
mov
inc
adc
ficoms
je
ret
ja
int
pop
scas
fwait
pop
dec
rcrl
push
movsb
shll
jg
mov
aad
add
stc
sub
jns
in
inc
lds
das
push
jae
push
jp
cmp
and
jle
pop
add
cs
aam
xor
aaa
lcall
jo
inc
xchg
cmp
rol
dec
movsl
cltd
push
xchg
pop
ljmp
mov
xchg
call
pop
xchg
pop
fistps
jns
and
cmpsl
cmc
push
sub
add
scas
mov
iret
imul
imul
inc
das
loop
adc
cmp
addb
mov
adc
mov
aam
cmp
notb
inc
push
xor
inc
pop
fucomp
loop
jo
adc
pop
inc
out
add
lods
lret
mov
push
sbb
outsb
mov
or
or
jno
mov
or
jl
mov
fsubrs
jo
push
nop
sbb
stos
push
adc
pop
xlat
pop
mov
push
fwait
cmp
xor
and
sub
push
xor
inc
jmp
shll
cmc
jae
or
lmsw
jne
pop
cwtl
scas
dec
pusha
loop
mov
rol
or
xor
jae
mov
xchg
movsl
ja
xor
add
daa
sbb
movsl
jns
xchg
lds
xor
jge
cld
dec
imull
mov
mov
icebp
jns
sub
mov
mov
aaa
addr16
pop
loop
mov
cmpl
ljmp
repnz
lret
mov
xor
mul
popa
or
adc
popf
adc
push
addb
adc
xor
push
push
push
sub
mov
leave
and
cmp
xor
pop
pop
lock
arpl
pop
cmc
add
inc
hlt
adc
add
mov
movlhps
fsubp
test
mov
js
pop
cmp
stos
add
out
xchg
aaa
inc
xchg
sub
orl
sbb
sahf
inc
jle
inc
pop
jmp
adc
dec
xchg
pop
test
add
pop
jae
sti
sub
mov
lods
add
inc
sub
mov
stos
and
add
nop
cmpsl
popf
shl
cs
sbb
lods
rcr
imulb
mov
xor
mov
mov
imul
not
push
roll
fdivrl
or
or
jnp
les
sbb
mov
or
ja
jg
push
xor
repnz
fdivp
jbe
or
or
or
sub
push
jmp
pop
popf
jge
sarb
mov
mov
xchg
adc
mov
cbtw
cli
pop
orb
add
daa
test
aad
mov
push
orl
inc
push
cli
fwait
xlat
dec
cli
fsubl
xchg
aad
push
ljmp
jge
mov
push
inc
sbbb
and
jg
nop
xchg
mov
jg
xorb
and
cmp
daa
loope
jmp
out
jae
test
mov
mov
hlt
aam
iret
je,pn
shr
xor
cwtl
in
jl
dec
lock
sbb
sti
adc
ret
adc
push
mov
test
xchg
lret
repnz
jmp
loop
shlb
add
cmpsl
ss
or
or
pop
pop
out
je
rclb
nop
leave
cmpsl
cmc
mov
movsl
popa
push
addl
adc
ds
mov
jle
mov
pop
fnsave
sub
test
add
dec
pop
sbb
pop
mov
pop
sbbl
xor
push
addb
mov
scas
sub
mov
je
cli
sbb
sub
out
mov
popf
fsubrl
outsb
cltd
in
push
mov
pop
or
jne
mov
inc
mov
xchg
and
pop
mov
jmp
mov
push
jne
or
xor
xor
jmp
inc
and
addl
sahf
jmp
data16
jp
xor
and
out
les
jae
inc
and
mov
and
mov
add
cmp
and
push
jmp
test
xchg
movsl
add
out
pop
inc
or
out
push
sbb
or
bound
inc
iret
mov
add
push
inc
xchg
and
shrl
hlt
aad
int3
and
push
add
sub
add
inc
or
sti
test
mov
and
adc
out
xchg
stos
cmp
adc
push
or
inc
sub
in
into
add
popf
pushf
in
fisttpll
mov
out
xchg
mov
sub
popa
jns
push
xchg
jo
inc
sub
add
pop
shlb
or
fsubrs
bound
mov
pop
xor
and
push
jmp
shrl
stos
je
pop
jne
and
cmc
xor
xor
pop
mov
push
mov
cvtps2pi
jbe
push
push
mov
add
cmp
mov
sub
cmp
daa
loope
jg
in
sub
dec
loopne
lret
inc
xchg
xor
movsl
add
dec
and
mov
adc
cmp
addr16
adc
dec
hlt
popa
std
xchg
je
hlt
test
mov
jge
cli
mov
jno
inc
les
push
jnp
loopw
pusha
ljmp
rcrl
mov
hlt
iret
je
fmulp
orl
mov
lods
mov
pop
sub
add
xlat
and
add
inc
shlb
imul
mov
and
or
xchg
mov
jmp
dec
xchg
push
add
cli
dec
mov
xor
push
dec
mov
inc
aad
out
not
xchg
lret
testb
in
jo
test
add
sbb
in
dec
lcall
sub
or
sarb
pop
cmp
out
xlat
imul
and
mov
cmp
xchg
jae
call
in
mov
push
inc
movl
scas
adc
mov
mov
ss
arpl
or
jb
or
jle
add
jmp
js
not
adc
shl
dec
lods
lcall
cs
aad
pop
cmpl
sti
mov
aad
adc
cmp
cld
add
push
sub
jmp
loope
or
pop
mov
jns
push
jno
in
xor
cmp
ljmp
std
ja
adc
bound
add
cmp
sub
pop
mov
inc
lahf
mov
add
mov
or
mov
push
push
add
sti
pop
cmp
dec
dec
mov
dec
push
call
inc
or
inc
ds
in
icebp
pop
push
int
mov
sbb
sahf
popf
cmpl
lret
fsubr
jne
aad
fistps
data16
dec
mov
popf
shrb
xchg
in
jmp
lcall
pop
jae
notl
mov
or
addl
dec
mov
mov
out
loop
xchg
lods
mov
stos
fistl
cs
mov
push
subb
mov
lret
or
mov
scas
out
push
push
jno
lret
aam
dec
rcrl
fiadds
or
jge
cmpsb
inc
sub
jo
cld
lea
cwtl
and
icebp
dec
mov
dec
cmp
int3
jmp
sarb
pushw
xchg
add
cmc
call
mov
jmp
push
push
mov
inc
rolb
shr
mov
adc
cmp
aam
inc
pushf
pop
mov
cld
clc
mov
xchg
iret
imull
and
out
and
mov
cmp
std
xchg
fwait
dec
cmp
sub
pop
pop
sar
pop
jns
das
cwtl
add
gs
mov
push
cltd
jo
movsb
adc
aas
or
or
add
and
pop
pop
cld
addl
repz
loop
cmp
inc
inc
push
or
inc
mov
das
cmp
popa
add
push
outsb
jne
mov
and
or
dec
cli
add
jle
arpl
fildl
in
jmp
orl
pop
jmp
stc
push
int3
je
fistpll
testb
push
sub
pusha
jl
and
loope
jae
jle
cmp
cmp
add
xor
pop
pop
dec
xlat
dec
sbb
xor
sub
adc
arpl
fnstcw
jo
add
push
mov
cmc
adc
mov
out
mov
iret
cmp
adc
push
repz
dec
mov
and
jmp
mov
jmp
shlb
jge
in
adc
out
sbb
movsb
sub
or
flds
jne
cmp
inc
pop
sarl
or
mov
mov
mov
pop
mov
jbe
sub
push
out
mov
mov
add
js
add
dec
or
sbb
or
cmp
cmpsb
and
adc
pop
ljmp
out
je
mov
insl
jne
leave
dec
mov
cli
or
popa
xchg
es
dec
mov
jle
push
sbb
subl
insl
divl
sub
lahf
rclb
inc
xchg
cli
pop
inc
scas
add
std
call
push
pop
sti
in
and
shlb
icebp
jmp
mov
mov
cmp
shlb
or
adc
mov
mov
dec
pcmpeqb
mov
mov
popf
cs
push
xor
mov
repz
or
push
ds
not
adcl
das
fs
pop
mov
arpl
test
sub
mov
out
pop
mov
cltd
orl
inc
dec
in
fwait
dec
sbb
sbb
lods
vmread
or
testl
fwait
dec
jge
or
and
adc
or
cltd
pop
adc
xchg
jge
fs
scas
imul
stos
pop
mov
xchg
sub
ret
out
sbb
gs
es
add
jno
fdivrp
rcrl
add
int
jmp
and
inc
pop
test
push
popa
cltd
mov
aaa
pushw
fldcw
orl
jb
shr
mov
testl
dec
adc
sbb
inc
dec
incb
mov
bound
xchg
sub
push
dec
andl
out
roll
push
xor
cmp
stc
pop
andl
pop
lret
or
dec
mov
push
pop
mov
push
xchg
fdivl
fwait
insb
pusha
mov
push
dec
sbb
sbb
xor
push
sti
stos
mov
not
andb
push
sbb
cli
xchg
dec
xchg
mov
and
or
cmc
data16
daa
aas
push
push
xchg
mov
push
dec
mov
in
stos
xchg
xchg
cmp
cli
jnp
jns
pop
leave
in
in
out
push
xchg
push
push
sbb
rcl
leave
stos
ret
and
push
xor
mov
add
xor
mov
rorb
cwtl
inc
dec
dec
mov
jmp
sub
jecxz
cs
inc
filds
out
xor
movsl
mov
push
cld
nop
cltd
out
imul
xlat
dec
shr
ret
test
lret
fmuls
or
or
dec
out
flds
jno
jmp
add
add
jbe
divl
mov
in
mov
pop
cmpsl
sti
fsubrl
dec
loope
mov
sbbl
add
or
mov
lcall
adc
xchg
sub
fmul
push
or
aad
jle
push
sbb
mov
test
jmp
inc
and
mov
add
xor
push
stc
cmp
loope
jmp
push
adc
sub
sub
in
mov
rolb
pop
fcmovbe
cmpb
aas
lret
pop
pop
ret
inc
fisubrs
jg
mov
cmpsb
gs
out
lret
in
pop
inc
outsl
fldl
and
popa
adc
pop
test
mov
jnp
mov
lods
test
adc
mov
jg
stc
das
scas
sub
sbb
xor
movsb
jno
inc
jbe
jmp
jmp
rcrl
sub
sbb
outsl
fs
punpckhbw
xchg
add
push
fstps
out
and
mov
adc
std
push
add
add
ficomps
pop
push
mov
add
stos
adc
imul
xchg
pop
mov
jns
loope
pop
mov
call
in
popa
xchg
inc
push
int
inc
push
test
or
dec
dec
push
sbb
stos
fildll
add
pop
or
sbb
mov
cmc
movsb
data16
dec
in
jmp
pop
mov
mov
cmp
inc
xor
test
imul
les
cli
mov
push
and
imul
jmp
add
pop
not
xor
dec
pop
xchg
movsb
mov
jo
xchg
jmp
jmp
out
push
call
lds
fbstp
std
sbb
dec
add
les
push
mov
pop
dec
into
jmp
jne
repz
and
pop
add
movsb
sarb
adc
shr
adc
je
shlb
mov
jmp
stos
cld
adc
hlt
lahf
jl
dec
add
xlat
jle
sti
inc
in
das
jg
leave
pop
push
sbb
add
add
das
add
adc
addr16
jecxz
push
js
jg
sar
adc
and
push
or
or
shll
sub
dec
shr
shrb
pop
xchg
mov
xchg
mov
lods
or
dec
cmp
adc
jne
jmp
ja
lahf
adc
cmp
fs
into
and
xor
sbb
dec
je
cmpsb
jmp
jmp
mov
jne,pt
jno
loopne
mov
lds
mov
js
bswap
sub
loope
mov
or
pop
mov
dec
dec
inc
xor
push
daa
mov
testb
mov
xor
mov
jle
loope
jmp
dec
pop
lret
cmp
mov
pop
jbe
adc
pushf
subb
push
ss
push
sbb
inc
xchg
or
cli
arpl
jp
das
int
aad
push
and
push
jp
and
pop
sbb
mov
shrb
in
dec
add
mov
xchg
lea
or
mov
add
iret
sub
sbbb
and
sahf
sti
add
or
xor
add
mov
dec
negl
subb
pop
xchg
inc
xchg
mov
js
daa
add
cli
push
dec
sti
push
cs
lods
mov
fnstcw
data16
dec
idiv
or
push
push
inc
fs
mov
pop
mov
add
lock
ret
mov
lret
jb
clc
inc
sub
xor
arpl
or
mov
fsubrl
bound
add
jg
es
sub
jo
mov
mov
mov
popa
xor
pop
loopne
jmp
inc
xor
mov
arpl
or
out
pop
mov
and
and
lock
jmp
rcr
cmp
jle
xor
rcr
ljmp
das
movsl
lahf
test
add
stos
push
xlat
or
lret
jmp
popf
std
and
add
aam
or
pop
xor
test
mov
pop
mov
dec
fsubrs
daa
movsb
pop
mov
call
test
inc
mov
inc
fs
mov
jnp
cmp
add
inc
or
dec
inc
loopne
push
pop
pop
in
clc
mov
jg
pop
leave
xor
xchg
lock
test
xchg
xor
xor
lea
lods
mov
addb
push
pop
and
and
add
gs
cmp
and
ret
xor
scas
and
cmc
iret
jmp
add
sub
add
inc
push
add
punpcklwd
cs
ret
jecxz
pop
sbb
popf
call
adcb
cmp
mov
add
push
call
popa
mov
and
xchg
mov
pop
inc
stos
push
pcmpgtb
shlb
xor
or
adc
pusha
ret
mov
xchg
or
aad
sbb
call
jmp
lods
jo
dec
and
popf
loopne
inc
xlat
test
cmpsb
pop
add
jl
push
push
inc
pop
lret
cmpsl
das
push
push
lods
and
mov
js
int3
fsubrs
das
loop
jns
dec
mov
sub
add
daa
jge
xchg
movsb
iret
dec
ljmp
mov
jns
cwtl
and
inc
loopne
imul
adc
mov
shr
add
xorl
bound
stos
mov
push
xchg
and
les
scas
movsl
aad
push
cmpsl
sti
xchg
les
dec
nop
in
xchg
sahf
xor
pop
cmp
sbb
imul
add
fdivs
pushf
push
test
movsl
xchg
mov
stc
xor
xchg
orb
push
push
and
fsub
iret
jo
push
clc
sarl
lods
mov
fdivs
icebp
jae
in
ds
add
adc
fldt
adc
repz
mov
push
xchg
or
loope
adc
jno
jge
nop
jl
add
and
pop
pop
das
or
nop
movsb
lods
push
daa
jnp
add
in
out
mov
push
ss
mov
jmp
insl
jle
mov
sbb
out
add
cmp
jbe
or
adc
adc
scas
in
mov
enter
jmp
or
les
inc
add
pop
fsub
jecxz
dec
jmp
insl
dec
mov
jno
sub
push
mov
adc
mov
out
or
repz
mov
das
lds
imul
shr
sbb
std
lret
je
and
pop
dec
add
insl
push
fidivrl
cmc
pusha
cmp
add
bound
jge
or
push
inc
inc
xor
repz
clc
push
add
lock
adc
dec
test
rclb
add
jmp
das
and
mov
in
sarb
push
mov
adc
in
scas
push
sbb
mul
jmp
mov
xor
cmp
dec
scas
jl
dec
mov
jmp
and
mov
repnz
aad
mov
add
pop
lea
jge
cmpsl
pop
sar
mov
inc
cmp
rolb
dec
xchg
in
inc
push
data16
popf
imul
push
insb
dec
dec
mov
mov
mov
lods
notl
jb
push
cmp
xchg
jne
mov
and
pop
cmp
xchg
incl
movb
bound
jno
sub
fs
or
setbe
pop
or
daa
addb
xchg
orb
adc
imul
sti
push
push
add
sbb
or
sub
mov
push
cmp
push
ljmp
pop
mov
sbb
dec
mov
sbb
and
pop
repnz
pop
movb
jl
leave
push
in
add
ljmp
jmp
jmp
nop
rorl
xchg
jb
mov
js
xchg
dec
pop
or
insb
inc
ds
add
mov
mov
das
xor
adc
push
jmp
out
or
cmp
fimuls
jns
pop
add
cmp
sbb
or
pop
jnp
mov
pop
leave
add
mov
popf
xor
sub
mov
cli
add
test
or
pop
jmp
pop
mov
dec
int3
addr16
pop
or
or
imul
lea
mov
pop
adc
test
mov
pop
xor
mov
push
jb
mov
xor
insb
push
dec
pop
push
xor
lea
dec
cmc
cs
dec
iret
push
js
push
inc
shl
jne
pop
rcrl
das
mov
xchg
jne
dec
das
jno
pop
cmp
mov
pusha
dec
mov
push
jmp
mov
cli
rclb
push
mov
xor
leave
push
add
lock
jecxz
idivb
pop
jne
icebp
ret
jne
loope
push
es
or
add
push
pop
fcompl
xchg
cmpb
loopne
and
and
bound
lock
ljmp
fiadds
mov
int3
inc
mov
push
push
push
and
std
jg
cmp
lahf
or
insl
das
daa
nop
sbb
push
sbb
add
add
sub
jle
inc
mov
inc
jmp
enter
jae
mov
ret
outsl
test
cmpsl
push
les
cmc
out
test
push
mov
fdivrs
stc
add
add
sub
call
sub
dec
imul
pop
xor
scas
call
sbb
movsl
xchg
clc
mov
xorb
repz
ret
mov
pusha
mov
or
ds
jg
out
dec
jne
add
sub
push
add
push
sub
imul
or
icebp
test
jo
cmp
out
add
popa
loopne
inc
pop
clc
xchg
loopne
je
popf
mov
mov
popa
out
adc
push
cmp
push
mov
xchg
pop
in
aam
xchg
cld
jle
mov
fldl2e
popf
out
cwtl
inc
ljmp
and
xchg
loop
clc
mov
ljmp
cmpb
add
lds
jnp
jnp
mov
xchg
inc
in
sub
dec
pop
cwtl
dec
sarl
in
pop
shlb
cmp
add
or
sub
and
xchg
pop
jle
add
addb
sbb
add
xor
int
fildll
pop
push
add
outsl
add
sbb
jns
rcll
cmp
xchg
sbb
xor
cltd
loopne
shrl
push
out
xchg
in
xor
xchg
insb
xchg
xor
repz
int3
fstl
movsb
jmp
xor
and
in
inc
maxps
pop
aas
adc
mov
mov
addb
ret
pop
lcall
iret
inc
je
jmp
faddl
int3
jle
shlb
inc
xchg
push
int
inc
pop
mov
jb
daa
jmp
addl
lods
mov
orb
or
xor
fbld
sbb
jmp
in
mov
push
mov
xchg
ss
pop
not
mov
dec
rorl
lods
mov
push
nop
pop
sbb
loope
mov
jnp
add
sub
inc
lods
add
mov
mov
ficompl
pop
imul
cli
je
icebp
jae
fdivs
add
mov
clc
cmp
jb
pop
mov
sbb
and
lock
leave
add
sub
mov
jl
popf
add
mov
inc
popf
and
popa
mov
dec
es
lods
test
movb
push
lcall
jne
adc
nop
pop
xchg
pop
mov
pop
fcoml
pop
les
dec
add
jecxz
lahf
int3
test
push
adcb
jno
sub
or
stos
movsb
sbb
mov
push
mov
push
mov
rcrl
stos
fldcw
xor
cmc
dec
or
or
leave
xlat
and
sbb
mov
or
xchg
push
xor
leave
jmp
in
xor
dec
nop
xchg
jmp
lret
inc
jg
fbld
fstpl
fdivrs
push
push
xlat
loopne
adc
ret
sub
rcr
fcmove
dec
dec
mov
addl
rolb
or
jmp
mov
push
dec
mov
push
sub
inc
rol
and
es
wrmsr
sub
out
or
jmp
test
pop
inc
loop
ret
mov
es
out
sbb
push
outsb
cmp
dec
aas
andl
stc
call
jge
shlb
ljmp
adc
incl
cmp
addb
mov
lret
xor
mov
push
sbb
jmp
jecxz
dec
nop
mov
stc
xor
rolb
pop
xor
pop
or
out
dec
push
pop
mov
and
pushf
add
cmp
je
sub
xchg
not
mov
shr
push
dec
enter
mov
inc
jne
jnp
push
das
stos
and
pop
pop
stos
test
imul
cwtl
call
addb
cmc
popa
imul
cmp
lret
lret
inc
mov
lret
push
movsl
shlb
and
es
xor
push
cmp
adc
jecxz
sbb
call
repz
popf
lret
in
arpl
ret
int3
mov
imul
int
movsb
out
out
into
push
ror
in
pop
lea
aam
xor
mov
push
clc
sub
int3
or
add
cmpsl
jmp
inc
inc
enter
pop
or
adcb
push
jb
jbe
add
hlt
jo
orb
or
jb
adc
cwtl
lahf
repnz
cwtl
add
or
mov
notb
dec
scas
push
sbb
mov
iret
cli
ret
push
es
pop
add
adc
sbb
dec
enter
ljmp
fsubs
subl
and
sti
add
or
push
sub
dec
and
or
adc
dec
mov
mov
loope
adc
ds
xor
cmp
mov
cmp
pusha
fcomps
subb
es
stos
jp
or
cmp
das
ljmp
sti
pop
add
lods
lret
std
push
sbb
nop
pop
pop
pop
mov
mov
mov
push
add
insb
inc
jae
aad
ret
and
adc
dec
out
daa
ret
ja
cltd
icebp
es
xchg
leave
mov
pop
lahf
xchg
lods
ret
aad
inc
loope
mov
pusha
sbb
xchg
lds
adc
out
jo
jmp
jmp
or
inc
push
addb
jbe
fwait
sbb
add
xor
mul
mov
jp
and
dec
and
sbb
xchg
jmp
push
daa
cli
add
arpl
rol
mov
push
or
cwtl
sahf
add
sub
out
mov
jae
sbb
and
add
std
mov
jmp
xor
push
stc
xchg
aad
cmc
imul
test
clc
stos
cmp
sub
popf
stos
cmp
cmp
in
orl
xchg
icebp
or
sub
pop
ja
inc
movl
fstps
js
js
sbbb
xchg
jno
hlt
pop
and
lods
pop
ja
push
add
enter
jnp
or
stc
lea
add
push
and
pop
mov
mov
xchg
pop
cwtl
stc
nop
daa
add
push
push
adc
or
push
dec
lods
sti
cmpsl
loop
push
jg
mov
cmp
nop
pusha
push
in
inc
ljmp
sbb
adc
pop
out
mov
mov
cmp
jecxz
push
jl
dec
inc
lahf
or
iret
push
jmp
fsubrl
aam
and
add
into
add
xchg
cmp
jge
call
inc
cmp
sbb
sbbb
or
dec
push
add
jmp
lods
push
mov
pushf
cmpsb
dec
xorb
mov
xor
xchg
hlt
popa
and
dec
pop
clc
scas
test
enter
test
es
add
shrb
dec
andb
imul
push
adc
aaa
inc
mov
outsb
test
inc
or
pop
add
fidivs
xor
dec
cli
int3
inc
or
fcoms
xchg
push
push
popa
sbb
and
push
jmp
sbb
outsb
sub
jo
sbb
dec
sub
jb
or
cmp
jg
lea
dec
and
stc
adc
movsb
in
nop
lods
jae
int
dec
xchg
add
xor
das
aad
out
cmp
cmp
jo
cwtl
scas
cmp
pop
jl
scas
inc
mov
mov
sti
subb
mov
pop
pop
sub
jmp
ljmp
repnz
sub
cwtl
or
xor
push
pop
ja
pop
arpl
pop
adc
xchg
push
icebp
es
inc
in
fwait
push
cld
jns
dec
fnsave
inc
or
movsb
adc
lock
dec
xor
scas
pop
mov
insl
or
xor
mov
cli
lahf
mov
mov
xchg
sub
and
and
xchg
ja
mov
lret
into
jns
sub
pop
repnz
inc
sarb
and
or
push
inc
pop
ret
das
pop
lods
subb
fildl
dec
fdivs
adc
add
xchg
js
sti
int
xor
push
pop
xchg
push
jl
setbe
sub
movl
adc
sub
dec
ret
insb
adc
or
jae
mov
mov
add
pop
cld
bound
or
xor
roll
mov
enter
adc
push
fildl
pop
inc
jg
lock
sbb
and
xlat
mov
mov
popa
push
ret
scas
shr
push
xchg
add
popa
shlb
cmpsb
dec
inc
loop
or
jmp
pop
inc
adc
jecxz
rclb
push
inc
mov
pop
and
movsb
add
inc
cmpsb
not
clc
and
std
sub
jmp
and
outsl
adc
je
in
dec
xor
adc
dec
push
shlb
jmp
pop
push
push
lods
or
mov
pop
mov
fwait
dec
xor
mov
roll
rolb
jne
ret
or
sbb
push
frstor
outsl
fidivl
dec
pop
pushl
mov
loop
add
pop
push
jne
pop
push
adc
int
pusha
test
push
sub
pusha
mov
insb
sub
dec
mov
ret
mov
xchg
mov
xchg
orl
jg
dec
dec
test
shrb
xchg
aaa
cld
xchg
inc
jno
adc
pop
sub
aad
dec
push
inc
push
add
cmp
push
add
jle
mov
mov
aaa
cmpsl
or
sarl
mov
mulb
xor
mov
sbb
sub
and
inc
sti
aaa
push
repz
xchg
enter
jmp
and
lret
or
push
push
adc
outsb
dec
or
icebp
or
jnp
push
sbb
lcall
jne
jmp
fwait
mul
sub
in
jmp
adc
push
push
mov
not
adc
repnz
add
push
dec
inc
out
lods
adc
jge
lret
loope
call
loopne
shl
mov
out
xchg
push
pusha
jecxz
dec
mov
sub
icebp
jmp
mov
pop
mov
push
stos
inc
in
lds
add
cltd
imul
stos
or
xchg
lret
call
mov
jmp
push
fstp
fisubl
aad
aas
mov
clc
test
scas
popa
adc
push
test
adc
sub
mov
dec
xor
jmp
imul
ja
frstor
imul
ret
inc
out
out
sub
imul
xor
pop
jmp
jl
into
add
pop
sub
jmp
hlt
xchg
xchg
xchg
mulb
icebp
cs
and
mov
adc
ret
loop
and
sbbb
sbb
ja
inc
xor
add
push
mov
pop
mov
and
jae
andl
movsb
out
pop
repnz
cmp
lods
nop
mov
movsb
dec
or
fxch
sbb
not
and
add
sahf
or
pusha
or
inc
xor
out
xor
jmp
xchg
mov
mov
neg
push
mov
sub
int3
pop
xor
and
jle
scas
jmp
adc
and
out
xor
shrb
pavgw
scas
sub
arpl
mov
pop
push
xor
mov
daa
movsl
lret
and
jno
fnstsw
mov
lret
inc
int
sub
xor
mov
mov
push
mov
sub
mov
mov
and
xor
cmpsb
fsubrl
xchg
add
adc
not
mov
dec
and
push
in
xor
imul
dec
jbe
ds
outsl
rolb
pop
cltd
stos
clc
cmp
stos
sub
repnz
fsubl
pop
dec
xor
inc
xlat
mov
sbb
push
les
mov
push
xor
adc
inc
rclb
pop
add
add
xchg
xor
hlt
sbb
xor
nop
xchg
mov
jne
das
xlat
push
or
adcb
call
orb
insb
adc
push
nop
jl
dec
cvttps2pi
mov
push
or
add
leave
js
cmp
pop
cmp
cwtl
hlt
rol
sub
pop
movb
int
inc
dec
scas
mov
adc
jne
in
push
shrl
dec
lcall
add
movsb
pop
xchg
sub
pop
add
inc
or
inc
cmc
mov
stos
ja
mov
mov
add
jmp
aad
dec
sub
das
jmp
sbb
and
xor
sbb
pop
fnstenv
iret
dec
sbb
gs
std
stc
and
mov
adcb
and
mov
pop
cmp
dec
outsl
clc
xchg
icebp
and
mov
inc
and
das
repnz
and
lcall
and
arpl
inc
bound
loop
popa
lahf
insb
aas
fcomp
adc
sub
add
ss
ret
add
pop
or
inc
or
jmp
xchg
sub
cli
pop
rolb
push
add
inc
int3
cli
mov
inc
pop
push
push
lds
jmp
dec
sub
outsl
cmp
and
pop
jmp
movsl
daa
and
roll
push
pop
imul
inc
and
out
push
popf
jmp
xchg
push
lcall
push
xor
int3
jnp
lods
int
fimuls
popa
pop
cmc
cmp
outsb
jne
jne
scas
mov
adc
or
jg
dec
push
push
push
pop
rcrl
pusha
cld
push
daa
sarb
sub
add
add
push
loop
imull
fisttpl
adc
mov
and
pop
negb
scas
pop
inc
add
mov
ficompl
pop
inc
push
pop
aad
jecxz
sbb
sub
adc
pop
lock
pop
ja
adc
maskmovq
push
mov
jno
jnp
iret
bnd
adc
cmpsb
inc
addr16
mov
add
dec
sbb
sarl
dec
cmp
loope
pop
jge
mov
mov
and
pusha
add
add
inc
xor
push
mov
rclb
in
data16
popf
add
push
pop
sub
dec
dec
adc
in
repz
adc
out
dec
and
jnp
xor
js
and
pop
push
ljmp
mulb
cmovnp
and
mov
jne
rclb
and
add
push
in
pop
shrl
addl
add
mov
js
adc
mov
pop
clc
fdivl
jae
daa
sbb
jbe
pop
xchg
pop
aaa
shr
leave
dec
cmp
cmpsb
mov
xchg
jmp
push
ret
sbb
aam
jmp
push
xchg
subb
enter
push
xchg
inc
push
repnz
rolb
pop
add
jmp
lods
mov
jns
mov
incb
sbb
inc
outsl
inc
push
out
ja
leave
and
xlat
jbe
mov
out
add
aam
mov
jae
sub
inc
dec
inc
jnp
clc
sbb
imul
xchg
dec
push
insb
dec
and
pop
xchg
loopne
or
es
scas
outsb
mov
stos
cmp
test
add
lods
and
scas
orb
xchg
and
mov
fdivp
rcrb
outsl
or
mov
loope
push
lock
mov
add
inc
or
pop
lods
sub
daa
lret
add
add
push
xchg
adc
jmp
les
or
out
push
jmp
mov
movsb
popa
lahf
pop
gs
call
das
mov
mov
addr16
int
loope
push
movsl
popf
sub
std
stos
and
lods
imul
xor
dec
add
jmp
push
nop
int
insb
and
and
repnz
ja
movsl
das
jo
lret
in
int
and
dec
and
movsb
xchg
ljmp
or
lret
push
out
jmp
mov
call
lea
or
popa
xor
jbe
ja
pop
mov
xor
push
jmp
addb
push
add
or
ds
notl
leave
cmc
in
cs
jo
cmp
mov
xor
ja
adc
mov
mov
xor
inc
mov
add
loop
lret
das
stos
inc
stc
lods
jmp
xchg
je
sbb
or
inc
or
int
sbb
jp
mov
scas
addl
sub
adcb
repz
outsb
jle
jmp
push
inc
mov
mov
cltd
ja,pn
out
xchg
flds
and
adc
mov
jbe
lahf
add
adcb
push
push
cmc
mov
loopne,pn
adc
mov
xchg
data16
or
rcll
cmpl
push
insl
scas
stos
jno
mov
insl
les
out
pop
pop
lcall
jg
cwtl
xchg
inc
sahf
add
lea
pop
add
inc
cmpsb
or
inc
fstps
push
dec
adc
and
popa
push
inc
cs
aam
xor
movsb
insl
inc
or
lahf
nop
pop
push
mov
lcall
in
fstp
stc
daa
jnp
imul
sub
lock
push
sub
sbb
cmpsl
xlat
ret
or
mov
call
xor
lods
sbb
in
es
push
push
push
popa
scas
mov
xchg
dec
xchg
das
fists
arpl
dec
or
out
jne
sub
adc
mov
nop
fld
sub
jmp
hlt
pop
mov
push
push
adc
jp
or
and
loopne
movsl
pop
add
xor
pop
push
ljmp
jmp
mov
pop
push
push
mov
xor
xchg
dec
pop
cmp
xchg
xor
fcoms
lret
mov
icebp
test
jae
outsl
out
aam
mov
loop
addb
je
push
addr16
jne
mov
jo
hlt
add
or
jmp
pop
pop
sub
aad
dec
adc
sub
das
arpl
jmp
mov
or
repz
xchg
fnstenv
cs
scas
das
push
mov
sub
push
loopne
sbb
pop
in
or
mov
mov
scas
add
push
xor
in
sbb
inc
push
shlb
xlat
inc
adc
push
pusha
stos
jbe
push
rclb
add
mov
pminub
nop
rolb
mov
ret
xchg
das
fstpl
add
cltd
mov
push
sti
sub
jne
mov
outsb
repz
lds
lods
sub
pop
pop
iret
call
test
push
cmp
add
pop
mov
dec
xchg
push
js
jbe
aam
jmp
xor
push
mov
fidivl
in
sti
popf
xchg
ja
mov
ljmp
jns
test
mov
repnz
movsb
enter
cmpsb
jge
gs
shlb
or
pop
mov
pop
jmp
je
call
aam
lock
jg
icebp
pop
adc
and
cmc
iret
test
jmp
shr
les
das
shr
aad
repnz
adc
test
push
push
push
nop
inc
add
stos
inc
sub
scas
enter
je
lods
mov
pop
ja
daa
imul
imul
sub
dec
mov
pop
enter
dec
daa
bound
add
imul
mov
and
xor
ret
stc
pop
stc
mov
enter
mov
rcrl
and
mov
sub
nop
or
loopne
scas
das
jno
cmpsl
rorb
dec
and
and
das
jl
xor
cmpsb
inc
sub
cli
mov
push
dec
or
jle
into
ds
push
jnp
and
mov
mov
mov
sub
jl
xorb
not
std
shr
cwtl
cltd
daa
cmpsb
jnp
push
int3
hlt
test
addr16
cmp
sbbb
adc
sbb
cmp
add
outsl
imul
or
mov
stos
pop
sbb
outsl
bound
jne
call
push
out
dec
ljmp
imul
push
ljmp
pop
popf
pop
out
add
push
out
das
das
imul
sub
cld
ds
mov
stos
ret
adc
push
jns
push
int3
mov
sbbb
sbb
cs
or
add
jmp
cmp
lds
popf
mov
xchg
xchg
clc
add
pop
push
and
lds
repnz
inc
repnz
shrl
sbb
sub
hlt
and
and
push
inc
in
call
mull
inc
ja
pop
jg
adc
scas
push
xchg
pusha
pop
xor
add
rolb
ret
pop
push
sarl
mov
ja
cwtl
dec
fmuls
out
lret
push
or
sbb
dec
push
subb
sbb
js
or
sbb
adc
adc
sub
xor
sbb
jge
or
or
mov
out
mov
or
inc
jae
inc
cmc
sbb
xchg
adc
xchg
aaa
test
popa
repz
adc
adc
mov
cmp
adc
rol
cli
mov
sub
sahf
sub
and
adc
stos
xor
sub
sub
rorb
dec
imul
outsb
sub
ficompl
inc
in
sahf
jmp
out
flds
clc
jno
push
push
sub
inc
insl
mov
enter
mov
or
aas
adc
aad
sub
aam
mov
push
pusha
mov
adc
jmp
test
pop
inc
adc
pop
pop
jmp
push
adc
xor
testl
inc
mov
xor
cmp
dec
dec
push
add
jnp
sub
lret
out
xor
aaa
or
insl
or
xor
ret
jns
dec
push
dec
jp
aas
mov
xchg
ret
insl
pop
jg
push
in
sub
int
outsl
aam
jp
fnstsw
cmp
push
push
cmp
test
or
adc
fdivl
xlat
inc
insb
out
push
mov
cmp
push
stos
out
es
sub
fdivl
pop
mov
repz
or
add
fistl
jmp
out
inc
test
into
add
cmp
sub
cmc
mov
js
jns
jmp
loope
jnp
dec
jge
pop
xchg
push
push
push
push
push
add
or
cmpsl
ret
dec
sbb
je
inc
xchg
mov
cmp
nop
add
ret
mov
test
and
mov
add
shrl
outsb
popf
js
add
jle
xor
or
pushf
push
mov
data16
mov
lret
push
rcl
sbb
push
mov
orb
popa
leave
cmp
mov
dec
jno
jns
push
mov
pop
pop
imul
push
push
mov
push
jmp
or
add
adc
fs
pop
push
push
sbbl
inc
inc
repnz
lahf
pop
inc
out
pop
icebp
pop
xchg
sbb
adc
push
xchg
data16
mov
push
and
xchg
fists
xchg
add
inc
mov
aas
inc
cmp
movsb
mov
sbbb
je
repz
and
test
jl
mull
rorl
cmp
adc
adcb
aad
xchg
jo
mov
pop
sub
pop
dec
movl
std
mov
mov
jae
lahf
adc
mov
cmpsl
aad
jo
xor
fwait
jp
mov
mov
pop
ljmp
shl
sbb
inc
and
test
pop
or
lock
add
pop
push
mov
es
stc
jp
orb
mov
push
aad
out
mov
repnz
mov
lret
jne
out
adc
fimull
notl
xor
rorl
cld
sub
cwtl
dec
adc
push
jns
das
xor
std
push
mov
jge
dec
pop
jns
and
jb
cmp
pop
mov
inc
fsts
repnz
or
pop
sub
mov
lea
jl
dec
idiv
hlt
sub
pop
daa
mov
mov
inc
mov
repz
and
icebp
inc
jne
dec
or
jp
pop
cmpsl
les
jae
jle
jp
cltd
fnstcw
mov
pop
ds
test
pop
dec
ss
inc
xchg
sub
sbb
fidivrl
jnp
pop
fwait
or
ret
xlat
mov
lret
adc
or
jmp
movsl
loop
inc
add
out
push
gs
leave
jmp
mov
in
cmp
cmp
sbb
adc
adc
add
pop
nop
into
imul
sub
mov
push
add
adc
push
jle
push
out
or
mov
and
std
daa
add
in
test
aas
dec
test
mov
push
ja
out
shrb
lds
outsl
das
mov
push
mov
mov
fcomps
decb
xchg
fdiv
and
fnsave
add
fs
cs
adc
popa
push
push
nop
or
cvtps2pi
fidivrl
rorl
push
pop
adc
inc
fs
popf
push
out
mov
xchg
pop
das
xor
loope
shrb
out
mov
leave
dec
sub
dec
test
pop
insb
sub
in
or
dec
cmpsb
nop
inc
dec
jge
add
sub
pop
xchg
xchg
push
inc
pop
cs
mov
neg
in
ss
and
mov
das
xlat
out
mov
into
push
addb
and
adcl
dec
rclb
out
mov
cmp
cmpl
shl
add
lahf
cld
sub
jge
pop
push
les
cli
shrl
outsb
xor
andb
cmp
add
sub
shr
dec
ror
push
and
test
jbe
movaps
jnp
nop
repz
jg
pop
or
ja
sub
mull
rol
imul
adc
cmpsb
add
pop
adc
xchg
fstpl
adc
pop
sub
sub
jle
out
jmp
mulb
loope
push
add
data16
mov
add
pop
and
xor
xchg
fstl
pop
mov
test
jae
mov
lock
xchg
jge
arpl
jmp
adc
mov
or
in
inc
std
fisttps
mov
sbb
loope
add
xor
sbb
popa
sbb
and
push
add
out
mov
sbb
orl
sbbl
mov
sub
or
push
mov
imul
cmp
xchg
xlat
sub
mov
cmc
sarb
out
or
xchg
cmc
pusha
push
repnz
xor
je
mov
or
inc
pop
xchg
ret
ficompl
mov
or
repnz
fstpl
add
fmuls
dec
repz
divl
pop
dec
aam
mov
pop
push
inc
stos
sahf
or
xor
jecxz
and
pop
out
fisubrs
pop
pop
dec
notl
pop
push
jno
imul
call
adc
xchg
push
pusha
inc
movsl
cmp
pop
sub
std
add
pusha
leave
inc
dec
fs
sbb
push
push
inc
push
jp
add
sub
in
jge
adc
dec
dec
pop
mov
inc
sub
das
stos
cmp
dec
pop
dec
mov
mov
or
push
mov
mov
inc
adc
push
mov
xchg
push
sub
xor
movq
addl
das
lods
fcom
ljmp
cltd
dec
jecxz
dec
test
orb
push
mov
fwait
sub
sub
js
jno
inc
xchg
jne
push
filds
in
mov
hlt
adc
insl
scas
and
sbbb
push
push
cmp
shl
jmp
neg
aad
pop
aas
adc
loop
dec
push
push
insb
or
inc
enter
adc
pop
cmp
add
sbb
push
xchg
jne
or
mov
popf
test
add
and
lds
test
icebp
or
and
or
adc
sub
add
dec
push
sbb
out
sub
push
jo
adc
jno
adc
jae
fstp
sti
push
shll
adc
jns
loopne
out
cld
mov
popa
xlat
push
in
mov
mov
scas
stos
adc
jmp
cld
dec
loopne
not
adc
push
int3
aaa
xor
sbb
pop
dec
xorb
cmpsl
xor
mov
repz
in
outsl
dec
mov
sbb
push
inc
xlat
push
inc
bound
imul
sbb
jns
sub
mov
je
cmp
jp
sub
cmpsb
out
insl
push
add
and
xchg
fidivs
aaa
mov
cmp
inc
sub
push
icebp
sub
ja
data16
jb
sub
mov
cmpsl
inc
insl
aad
out
jne
sahf
jmp
daa
jmp
idivb
xchg
push
push
leave
xor
das
pusha
adc
add
adcb
push
stos
in
dec
lret
decb
sub
cs
lods
adc
lods
xlat
cwtl
imul
dec
inc
jnp
pop
pop
mov
test
mov
or
xlat
inc
and
aad
not
lods
mov
cltd
lcall
das
mov
cmc
dec
xchg
sbb
loopne
ficomps
nop
into
dec
jnp
shl
das
push
sub
pop
nop
mov
nop
scas
cmp
xor
ss
push
int
in
add
push
and
fnstenv
fadd
rcrb
dec
sub
cmp
push
xor
into
pop
cmp
mov
out
inc
push
jmp
mov
xor
jae
inc
js
cmp
shl
push
pop
sub
inc
cmp
or
mov
sub
or
insb
jmp
pop
paddd
mov
cmp
lds
pop
add
adcl
sub
inc
cmp
jmp
xchg
jnp
push
clc
sbb
es
adc
mov
icebp
xchg
push
inc
push
sbb
pop
dec
scas
xor
inc
xor
dec
push
xor
mov
mov
repnz
cmc
and
data16
sbb
jmp
lods
xorb
icebp
test
sar
xlat
add
sub
aas
mov
inc
mov
enter
add
push
push
into
fstl
dec
gs
mov
pop
add
ja
aam
ret
lods
jns
pop
pop
neg
adc
std
mov
fidivs
push
push
cltd
inc
add
and
mov
arpl
das
pop
mov
fwait
and
mov
cli
popl
gs
fldl
ljmp
sub
xchg
adc
cwtl
jb
xor
into
pop
push
mov
nop
aaa
pop
push
mov
clc
sbb
add
jmp
pop
sub
adc
cli
and
push
push
cli
push
pop
xor
jmp
sub
inc
cmc
mov
filds
push
in
mov
loopne
shlb
cmpsl
popa
pop
push
cmp
mov
popf
jle
cmp
push
or
adc
xor
bound
push
mov
jmp
neg
fdivrl
sub
nop
mov
cmp
add
dec
and
pop
nop
and
test
push
jle
sbb
pushl
ret
add
cmpsl
jo
push
in
inc
fdivs
pop
sub
adc
pop
jb
mov
ja
push
cld
rcll
jmp
jge
dec
mov
push
mov
and
cltd
inc
or
cwtl
lret
or
jmp
aad
enter
sahf
mov
mov
xchg
cmp
mov
cmp
pop
mov
or
cli
push
add
xchg
mov
sub
or
sti
fs
fnsave
mov
leave
mov
cmp
inc
or
les
cmpsl
pop
insl
adc
pop
jg
das
loop
xchg
push
test
xchg
jmp
and
sbb
in
sbbl
mov
mov
int3
and
mov
pop
inc
out
and
xor
out
mov
sbb
pop
fxch
cmpsb
orb
add
and
dec
xor
fists
jmp
inc
mov
inc
aas
dec
into
pop
xlat
pop
jecxz
add
sar
addl
push
inc
push
pop
cmp
cmp
test
jle
adc
mov
sub
dec
movsl
sub
int
push
xor
sub
lret
test
test
sbb
andb
outsb
loopne
mov
dec
pusha
dec
enter
push
add
mov
ljmp
out
push
mov
lock
mov
jb
lret
sbb
stc
mov
sub
dec
mov
jnp
xor
xlat
test
or
add
and
pop
sub
xchg
or
jae
mov
dec
into
push
xchg
push
lahf
pop
inc
addb
rorb
or
jmp
xor
jle
pop
fcoml
jb
pop
pop
xor
pop
aaa
cli
movsb
fistl
inc
add
pop
push
leave
lods
sub
xchg
jbe
sti
bound
sbb
data16
fsts
lea
cs
add
rolb
insb
mov
lahf
xchg
insb
and
nop
popa
pop
push
sbb
sbb
jg
jmp
push
jp
pop
cwtl
loop
pop
push
lret
and
jb
inc
mov
adc
ret
bound
in
push
lods
push
cli
mov
clc
mov
repnz
jl
mov
mov
aam
mov
xlat
add
arpl
mov
jbe
add
pop
and
mov
or
sbb
push
xor
jno
cs
pop
addr16
sbb
and
in
jns
push
in
push
aad
dec
adc
sub
pop
mov
sbb
je
loopne
int
add
aas
shl
dec
testl
adc
xor
arpl
xchg
jne
mov
loopne
inc
cmc
add
pop
xchg
sub
pop
int
nop
pushf
mov
push
push
enter
dec
dec
mov
jns
add
jl
outsb
jnp
jg
mov
repz
mulb
int
test
inc
sarb
outsb
and
xchg
pop
mov
push
sarb
sbb
xor
stos
out
jge
pushf
pop
sbb
loopne
and
daa
stos
daa
jae
lods
jp
and
nop
and
sti
movsb
cltd
pop
xchg
xor
cltd
mov
cmp
scas
loope
orb
hlt
pusha
pop
test
or
cmp
idivb
xor
xchg
mov
cmp
sahf
das
stos
inc
xor
out
add
fs
adc
fdivs
add
ret
fstpl
xchg
pop
xor
jmp
mov
mov
and
mov
sbb
pop
in
cmp
adc
std
es
mov
cmp
out
jae
jmp
xchg
ss
popa
lret
shl
jne
and
jbe
push
mov
lods
or
add
mov
or
sti
loope
iret
setb
lea
push
int
adc
gs
ss
push
mov
cs
jmp
or
sub
nop
mov
cs
cli
xlat
mov
pop
jmp
xchg
loop
xchg
loop
je
mov
mov
pop
jmp
or
cwtl
aam
jg
lret
xor
mov
xchg
pop
ja
mov
push
push
cmp
enter
and
inc
pop
pop
orb
fs
icebp
sbb
jmp
mov
lea
and
mov
mov
push
push
dec
sub
pop
adc
push
xor
in
lea
adc
clc
push
call
inc
repnz
imulb
in
xor
xor
cmp
inc
sub
dec
xchg
inc
insl
out
popl
pop
xchg
outsb
loope
scas
cmp
jne
push
cmc
cmp
jbe
push
add
mov
push
mov
sub
sub
lret
adc
dec
jmp
shrl
pop
pop
int3
jmp
pop
sub
adc
adc
test
shll
mov
dec
dec
mov
aad
scas
popf
push
xchg
add
sub
or
iret
and
dec
rclb
push
adc
lret
daa
dec
mov
jmp
out
or
fs
js
hlt
add
je
cmp
cmp
jne
ljmp
add
jmp
pop
mov
inc
lds
dec
sub
jle
hlt
add
add
es
js
add
add
or
pop
and
pop
pop
xor
sbbb
loope
pop
mov
dec
xchg
dec
and
mov
dec
imul
dec
or
pop
inc
push
arpl
enter
dec
or
lret
test
pop
pop
ljmp
mov
adc
or
aas
pop
dec
clc
ds
dec
lods
enter
push
aad
mov
cli
movsb
stos
stos
dec
scas
mov
pusha
int3
sti
pop
or
mov
fistpll
mov
clc
xchg
mov
jno
mov
lret
clc
xchg
sub
shlb
xchg
jecxz
cmp
pop
xchg
ljmp
fs
je
push
mov
arpl
pop
xor
xor
inc
pop
jo
inc
add
xchg
add
mov
sub
inc
mov
and
cmp
push
mov
arpl
cmp
jno
push
fisubs
inc
cmp
aad
rcrb
jne
and
sahf
incl
sub
sbb
je
ja
mov
dec
cmp
dec
mov
leave
int3
in
jnp
stos
mov
aaa
inc
dec
or
inc
rorb
mov
jmp
int3
aad
mov
cmp
sbb
mov
or
adc
pop
mov
and
jbe
or
das
mov
daa
mov
and
jl
push
jmp
out
pop
enter
push
jmp
std
cmpl
ffreep
mov
xchg
les
jne
ror
xor
pushf
adc
pop
pop
data16
push
push
cs
iret
lret
mov
das
push
mov
push
sub
push
or
sbb
out
rolb
pop
add
mov
lea
push
mov
incl
xor
repnz
adc
push
pop
iret
sub
insb
push
add
out
inc
or
in
and
pop
and
fdivrl
ret
push
mul
popf
pusha
pusha
mov
pop
pop
shlb
and
jbe
nop
fsubrs
test
mov
mov
sbb
dec
mov
pop
and
mov
scas
insb
mov
stos
cmp
adcl
dec
xchg
int
jno
es
mov
push
mov
mov
or
cltd
cmp
mov
mov
mov
adc
push
and
fs
inc
rcr
pop
repz
lret
cmp
sti
idivb
and
or
pop
pop
lds
js
orb
push
out
and
add
stc
rcll
daa
push
cltd
cld
sbb
add
mov
rolb
mov
jecxz
adc
sar
inc
inc
push
out
shlb
mov
ja
add
test
dec
call
mov
sbb
es
inc
xor
mov
push
mov
neg
mov
incb
mov
and
call
jmp
cs
inc
cmp
test
mov
inc
popa
fsubrl
push
out
cli
pop
and
cmpsl
stos
sbb
psraw
sbb
lock
and
int3
mov
aas
test
movsb
orl
mov
mov
enter
ja
push
shr
subb
pop
movzwl
lds
and
mov
add
rcl
mov
addr16
push
enter
or
jmp
jno
and
pusha
jo
dec
sub
xor
adc
mulb
xor
push
insb
adc
inc
add
or
shll
addl
cli
ret
scas
lods
jmp
push
sarb
in
push
daa
dec
push
roll
mov
sub
add
inc
mov
jmp
mov
mov
jo,pn
mov
dec
jmp
pop
and
adc
jb
jb
adc
pop
add
sub
popa
adc
ret
pop
push
inc
or
push
mov
or
cltd
fdivr
rol
repnz
popa
add
frstor
je
sbb
adc
stos
push
cmp
insl
gs
mov
not
shr
aad
hlt
mov
shl
or
xor
sbb
sub
popf
add
out
jbe
xor
push
or
jne
pop
dec
mov
add
mov
pop
xchg
jmp
out
icebp
in
popa
ror
movb
xor
out
cmp
cli
test
jmp
movsb
clc
rcrl
arpl
test
pop
sti
sbb
push
js
mov
lret
mov
bound
mov
sub
cmpsw
ds
push
push
adc
sub
pop
jmp
test
scas
movsl
mov
push
push
popf
sbb
xchg
ret
int
sub
adc
or
cmp
imul
shll
push
imul
xchg
xchg
je
nop
inc
push
sub
jbe
mov
jl
add
shrb
mov
nop
xor
aaa
div
lahf
pusha
in
inc
inc
ficoms
add
mov
adc
mov
sub
and
and
push
mov
stos
in
jmp
mov
or
incl
test
adc
jg
cmp
pop
sub
pop
adc
fwait
aaa
xchg
cmp
iret
mov
out
test
shrl
ret
aad
sbb
jbe
out
cltd
sub
test
sbb
add
aaa
push
je
loop
xchg
test
into
add
leave
push
or
lcall
mov
ljmp
mov
fidivl
adc
sahf
rcrb
and
inc
addb
inc
addb
dec
outsb
mov
scas
sbb
std
pop
pop
aas
sbb
aad
outsb
add
inc
mov
and
fdivrl
dec
mov
adc
scas
add
sub
pop
dec
faddl
push
fldcw
sbb
loop
pusha
cwtl
je
jae
mov
or
xor
or
call
fwait
mov
bound
lods
add
or
popf
mov
add
mov
mov
xor
xchg
jmp
pop
enter
and
or
dec
mov
jmp
push
ds
daa
adc
push
pop
das
icebp
pushw
scas
clc
stos
fs
rorl
push
mov
add
popa
cmp
jmp
fmuls
mov
mov
mov
xchg
call
in
sahf
in
push
insl
cmp
jle
and
inc
add
inc
sub
test
jmp
stos
in
adc
pusha
pop
daa
jnp
sub
cmpsb
arpl
lea
mov
cmp
xor
or
std
xchg
out
pop
aas
cmp
or
sub
push
dec
outsl
repz
xor
popf
ljmp
xchg
pop
mov
les
negb
imul
outsl
xchg
push
cmp
xchg
pop
clc
shl
ja
cltd
mov
frstor
es
mov
es
xchg
ret
shll
movsl
add
packuswb
xor
jo
mov
ror
jg
mov
lds
je
mov
mov
fs
dec
pop
lods
bound
repnz
xor
sti
test
fimull
or
pusha
loope
pop
inc
mov
add
pop
dec
xor
pop
jnp
into
arpl
xor
push
xchg
mov
adc
movsb
mov
push
pop
loop
hlt
cmp
jmp
lods
add
sbb
push
or
ret
leave
add
xor
mov
sub
mov
mov
adc
adc
push
push
mov
aad
call
cmp
add
sbb
xchg
shll
mov
jae
pusha
sbb
push
sbb
adc
leave
dec
sub
imul
loopne
stos
xor
pop
stc
bound
or
xor
cmpb
xor
push
ss
add
jae
adc
in
popf
adc
push
fwait
negb
mov
idivb
and
push
adc
loop
add
jl
add
sub
mov
lret
pop
inc
mov
pop
jg
insl
fisttps
dec
xor
mov
add
shl
mov
xchg
pop
lods
loopne
jo
mov
adc
and
add
jle
and
insb
mov
test
neg
or
fistpl
pusha
jo
inc
test
inc
pop
test
mov
hlt
sar
mov
push
push
push
jp
gs
or
int
insl
push
js
or
jp
inc
push
jmp
or
repz
or
cmp
adc
adc
fisubs
adc
idivl
rolb
and
sahf
arpl
gs
xor
mov
dec
adc
sub
mov
dec
outsl
add
imul
mov
out
push
das
ja
inc
add
or
pop
pop
push
movsl
pop
cwtl
leave
jge
jae
data16
inc
adc
aam
adc
or
or
push
fstpt
sbb
movsl
pop
repnz
xorb
mov
fs
xchg
pop
mov
jp
xchg
popa
sub
repz
cli
pop
push
mov
sub
das
sbb
test
je
popf
lds
inc
add
cmp
pushf
xchg
cld
lock
lock
jb
imul
jmp
adc
sbb
aam
jmp
mov
cmpsl
dec
insb
jle
sbb
jl
xchg
sub
ljmp
and
dec
inc
jmp
popf
push
xor
or
jecxz
push
inc
les
and
or
inc
or
rcll
icebp
push
or
scas
add
fists
mov
pop
pop
add
and
add
not
jmp
inc
loop
cmpsb
je
addr16
jmp
mov
sub
sub
cli
and
mov
std
add
pop
roll
test
and
data16
sbb
popa
push
cli
cmp
and
push
jne
sbb
push
imull
lods
jo
clc
fildll
add
orl
or
cwtl
pusha
or
mov
xchg
sbb
ucomiss
das
adc
lahf
mov
shl
adc
sub
jl
inc
pop
in
mov
test
and
or
or
daa
xlat
xchg
jmp
add
xchg
gs
pop
push
mov
pop
divl
push
jno
insb
fldenv
loope
das
cld
cltd
add
lahf
pop
lret
sbb
mov
adc
ds
jno
and
dec
inc
pop
imul
xor
push
addr16
jp
imul
adc
mov
lds
push
push
jle
daa
ret
sahf
dec
clc
jecxz,pn
call
lods
sbb
pop
lods
scas
out
sub
add
dec
call
cmp
shlb
push
xor
dec
push
orl
imul
add
push
fsubl
out
pop
and
shl
dec
repz
pop
mov
and
adc
xor
push
orl
sbb
ja
and
push
add
sbb
popa
cli
mov
inc
fsubrl
out
pop
clc
cltd
add
push
mov
sub
and
leave
frstor
or
push
and
mov
pop
inc
push
cmp
ret
dec
dec
aad
mov
cmpsl
mov
push
jmp
mov
add
mov
imul
pop
and
or
xchg
xchg
pop
xlat
dec
mov
gs
sub
and
add
push
je
pop
jge
sarb
add
mov
xchg
dec
call
pop
push
je
xchg
push
call
icebp
jmp
mov
cwtl
aaa
popf
push
ljmp
das
pop
jle
pop
jne
cmp
push
ja
fwait
dec
movb
and
adc
shll
push
decb
out
xchg
add
or
rcl
push
lret
sbbb
cmp
into
dec
jle
stos
pop
sub
inc
cmc
adcl
xchg
add
xchg
clc
jbe
dec
rorl
int3
xlat
adc
dec
xchg
stos
lds
mov
mov
add
aas
fwait
add
out
rolb
adc
jno
test
icebp
mulb
mov
push
aad
movsb
cld
mov
push
sbb
jmp
adc
and
inc
rcll
fdivl
addr16
cmp
jno
pop
decb
cmp
jle
aad
add
jmp
mov
mov
mov
lods
push
jmp
push
es
pop
ret
stc
int3
dec
cli
sub
cltd
push
and
mov
or
jmp
sub
add
mov
lahf
dec
jg
mov
stos
sub
and
stos
inc
push
xor
insl
and
mov
cli
leave
sbb
es
cli
pop
inc
cwtl
push
rclb
in
test
mov
pop
scas
pop
scas
add
enter
div
out
sbb
cmp
jg
icebp
xor
xchg
jae
int3
add
push
mov
and
cmpl
mov
or
jae
pop
insb
loope
add
sub
das
inc
push
adc
jmp
notl
testb
pop
fisttpl
xchg
dec
push
lock
push
scas
pop
or
sub
sub
adc
dec
xchg
pop
push
or
sub
xor
popa
add
dec
dec
pop
adc
adc
lock
pop
cmp
cltd
loopne
xchg
dec
mov
dec
pop
or
push
lds
add
jecxz
pop
dec
add
add
repz
das
ret
loope
in
ret
pop
push
orb
les
inc
mov
dec
push
mov
lret
xchg
jle
scas
mov
or
stc
pop
iret
roll
fsubl
sbb
sub
movsb
and
push
arpl
or
gs
insb
add
jnp
sbbb
add
inc
inc
out
jmp
xor
pop
or
les
add
mov
cs
and
aaa
dec
jnp
dec
xor
std
and
arpl
xchg
add
loop
pop
addb
mov
int3
pop
shr
push
mov
pop
jmp
in
ds
sbb
adc
je
push
in
sti
add
test
adc
add
push
mov
xchg
jle
in
outsb
push
jo
call
mov
adc
and
pusha
insl
nop
pop
add
xchg
push
lahf
sbb
push
test
add
ret
mov
std
dec
push
loope
jnp
and
inc
sbb
cmp
into
xor
cli
cs
jge
pop
imul
pop
in
push
adc
cli
decl
push
sbb
inc
mov
push
pusha
mov
pop
dec
pop
mov
popa
or
or
nop
das
out
popf
xchg
and
leave
dec
lcall
mov
cld
and
popa
pop
pop
sub
and
rorb
cmpb
inc
dec
mov
adc
mov
sarb
adc
sbb
sbb
xchg
mov
cltd
xchg
push
push
inc
push
lods
push
add
in
imul
or
or
mov
sub
pop
or
ret
add
ljmp
inc
scas
rclb
push
push
lods
pop
lods
cmp
push
sbb
add
pop
sbb
add
inc
sbb
jmp
push
push
jg
mov
jl
cli
push
scas
dec
inc
push
ficompl
sbb
test
adc
pop
lods
iret
fsubl
mov
shll
test
ficoms
inc
sub
add
aaa
push
fisubl
add
outsb
loopne
pop
sub
adc
in
push
add
pop
pop
add
cmp
xor
movsl
jo
subl
and
or
and
dec
dec
mov
push
xchg
push
out
aas
test
and
leave
sbb
push
add
add
sysret
xchg
stc
pop
mov
pop
xchg
popa
cs
push
nop
subb
cmpsb
or
or
cmp
jbe
adc
movaps
push
xor
mov
repnz
rorl
imul
xchg
inc
sbb
sbb
push
mov
sbb
cmp
and
lods
dec
call
ds
fcoml
mov
jl
push
pop
xor
out
cld
mov
cld
pop
jmp
test
ljmp
imul
es
popa
pop
cmc
lock
push
xlat
mov
ljmp
inc
adcl
add
xchg
adc
outsb
gs
mov
jmp
hlt
mov
jne
push
push
lods
mov
rolb
subb
and
mov
dec
das
cmpsl
jns
push
daa
pop
pusha
fiadds
dec
data16
shll
cmp
push
orb
add
mov
jmp
add
mov
lock
sbb
bound
sub
and
sahf
push
mov
inc
ret
aam
xorl
dec
mov
test
outsl
jmp
jns
mov
pcmpeqw
xchg
inc
ja
or
adc
pusha
fsubr
ss
mov
mov
sarb
stc
pop
and
daa
mov
push
in
or
sub
sbb
jle
add
dec
fldt
and
add
add
loope
dec
push
mov
jmp
cmpsb
popf
mov
xchg
jbe
leave
xlat
push
xor
fxch
cmp
and
out
repnz
test
insl
rcll
ret
sub
or
or
call
and
ljmp
sbb
adc
mov
mov
or
cmc
dec
pop
jnp
loopne
enter
push
pop
mov
call
pop
push
pusha
sbb
or
push
adc
dec
jg
fwait
mov
loopne
push
filds
pop
popa
jecxz
jae
and
mov
jno
outsb
adc
mov
push
mov
lcall
fs
jne
fwait
and
push
mov
es
adc
push
pop
stc
shll
sahf
add
stos
loop
fisubs
pop
push
add
sub
stc
mov
fst
pop
aas
xchg
fwait
push
and
icebp
adcl
daa
add
dec
cld
in
pop
sub
pop
test
mov
aam
sbb
adc
test
adc
mov
or
daa
shl
ljmp
xor
jmp
mov
inc
rol
imul
mov
das
ja
mov
jne
bound
sbb
nop
enter
dec
addl
call
add
add
call
stos
lret
jmp
add
lahf
fadd
pop
pop
into
jne
sahf
out
sbb
roll
popf
hlt
push
pop
in
lcall
mov
cmc
jle
add
clc
xchg
pop
push
hlt
rorl
in
adc
pusha
sti
add
ds
sbb
xchg
or
stc
imulb
push
and
mov
pop
into
and
lods
pusha
dec
mov
es
dec
int
cmpb
fsub
fs
cwtl
addr16
nop
lahf
pop
rorb
arpl
ja
inc
jmp
cmp
pop
or
or
mov
stc
add
or
adc
mov
ja
or
or
adc
push
adc
pop
mov
pop
addr16
pop
pushl
aam
sbb
out
xchg
gs
scas
add
out
scas
xor
icebp
cmp
xchg
sbb
jg
cmpsl
push
xchg
jns
fbstp
push
and
in
xor
outsl
pop
scas
lret
pop
dec
scas
xchg
sub
cmp
mov
cmp
insl
orl
jb
adcb
fdivs
es
pop
cmpsl
pop
jecxz
push
cmp
dec
push
inc
adcb
shlb
insl
xor
cmpsl
mov
xlat
js
xchg
mov
jns
test
adc
dec
pop
cli
sub
aam
ret
jmp
dec
adcl
xchg
mov
adc
mov
stc
add
ljmp
cmp
mov
add
mov
mov
aad
mov
pop
add
rol
dec
jae
out
cwtl
or
add
mov
das
icebp
adc
pop
inc
gs
inc
mov
mov
mov
es
movsb
lcall
sets
mov
ja
and
arpl
jne
sub
sub
movb
out
and
jmp
in
gs
leave
in
cmp
sub
adc
rclb
push
adc
jne
mov
xchg
push
dec
inc
sbb
in
test
adc
scas
loop
jae
shll
sbb
das
negb
das
add
outsb
ret
or
and
out
sub
cmp
adc
xor
popl
mov
inc
stos
test
stos
add
xor
nop
inc
and
dec
pop
sti
add
pushf
pop
test
and
out
or
or
xchg
divl
push
xor
lahf
vpsubusb
xchg
lds
jmp
add
lods
popa
mov
lahf
add
lock
fbstp
add
pop
mov
jmp
aaa
push
mov
push
negb
jg
mov
nop
push
jbe
addb
stc
and
enter
push
xchg
adc
pop
dec
sbb
push
pop
dec
neg
ljmp
jmp
int
and
test
ret
cmc
adc
jg
jge
and
cmp
imul
add
push
pop
packssdw
popa
xor
xor
dec
adc
dec
sbb
lahf
or
jle
sub
push
mov
cld
sbb
scas
mov
sbbl
jg
fsts
js
das
insb
or
pushl
cmc
iret
inc
mov
add
mov
push
not
add
inc
jmp
jmp
inc
cwtl
jno
jge
into
add
cmp
loope
or
mov
fisttps
fmuls
xchg
lahf
adc
pop
xchg
xchg
mov
dec
repz
push
push
popa
adcb
insl
xor
frstor
ss
mov
mov
ret
out
and
xor
rclb
mov
mov
icebp
pop
cmpsb
sahf
dec
movsb
sbb
cmp
addr16
jge
fwait
pop
insl
add
ja
or
jne
in
adc
inc
adc
push
daa
rorl
push
sub
mov
in
xchg
jns
outsl
mov
push
cmpsb
dec
pop
push
fbld
lods
adcb
out
movsb
mov
movsl
sbbb
cmp
add
stc
cltd
sldt
push
data16
sbb
sbb
jmp
and
fsubs
imul
sub
pop
mov
mov
and
orl
sti
cmp
jge
mov
or
dec
and
mov
adc
repnz
jmp
mov
pop
or
das
popa
repnz
jl
out
add
sbb
inc
lahf
inc
pop
add
pushf
or
cmp
not
test
ljmp
es
jmp
sbb
xchg
ret
mov
test
inc
fcomip
dec
les
jmp
enter
stc
mov
xchg
push
dec
adc
daa
imul
and
pop
cmp
dec
insb
push
aam
repz
fsubrs
pop
sbb
out
lcall
stos
pop
and
pop
bound
sti
inc
data16
xor
dec
mov
imull
shll
sbb
add
call
addr16
jmp
sbb
or
call
enter
jo
dec
shrb
je
and
pop
push
add
in
pop
or
call
sti
mov
or
test
filds
pop
jmp
sti
loope,pt
add
push
xor
cmp
fisubrl
and
das
dec
aaa
repz
xchg
sub
push
xchg
popl
ret
stc
and
sbbl
xchg
not
xchg
sbb
mov
and
in
sarb
ljmp
fstl
mov
pop
loopne
lods
adc
add
jmp
int3
xchg
pop
and
test
mov
mov
jge
cs
daa
xchg
pop
test
loope
adc
clc
aad
les
loop
or
cmp
sbbb
sti
lea
idivl
cmp
cmp
les
scas
adcb
aaa
inc
pop
sbb
sub
jmp
nop
dec
dec
and
outsb
or
inc
mov
pop
push
test
imul
mov
mov
sub
cmp
outsb
push
fbld
lea
in
sub
lods
fs
xchg
push
popfw
mov
cmp
xchg
dec
inc
out
pusha
test
push
sbb
jl
sub
out
dec
testl
and
and
pop
pop
adc
pop
inc
in
loope
jno
sub
clc
sub
add
push
cwtl
rolb
and
inc
in
js
mov
clc
xchg
sub
jns
xor
xor
pop
or
movsb
jecxz
std
pop
mov
mov
popf
sbb
mov
sbb
ja
xchg
xor
cmp
jl
and
jp
cmp
jno
test
push
scas
insl
clc
sub
xor
sub
or
mov
pusha
adc
jle
jno
and
imul
mov
out
sbb
inc
cld
push
mov
sub
push
push
add
and
or
adc
or
andl
fsub
and
pop
fsubl
xor
rcr
es
sub
stc
jmp
leave
cmp
push
push
scas
popf
sbb
add
jns
mov
mov
adc
xlat
dec
push
addl
loopne
lea
add
out
pop
mov
or
daa
clc
and
or
ss
cmp
insl
or
mov
add
sub
jne
inc
aas
mov
sub
gs
addr16
and
sub
jns
ss
inc
sub
mov
and
add
pop
and
ror
outsl
movsl
shl
cmp
test
mov
dec
cmp
fwait
test
inc
stc
mov
add
xor
popf
lods
daa
push
mov
xchg
jmp
in
js
dec
push
scas
sbb
call
jmp
jge
out
pop
inc
test
movsl
xchg
icebp
sbb
sbb
mov
icebp
in
xor
sub
add
and
add
lods
jg
lret
hlt
push
push
sbb
or
or
cmpb
ja
iret
fmul
jbe
pusha
daa
push
mov
je
popa
shr
push
sbb
mov
xorb
jge
adc
sbb
lcall
repnz
sti
loope
ret
lret
adc
es
orb
mov
mov
sub
das
lret
pop
push
mov
xchg
and
xchg
pop
pop
push
mov
lea
les
mov
cmp
jae
ret
xor
jne
cmp
cmp
sbb
cmpb
or
pop
inc
clc
das
pop
fsubl
xchg
pusha
subb
bound
sahf
sbb
sub
adc
out
js
pop
push
loop
dec
and
clc
add
push
fs
out
inc
inc
pop
dec
shl
rorl
xchg
dec
out
sbb
nop
push
or
ds
mov
pcmpgtd
add
repnz
pop
cmp
outsb
test
scas
or
mov
xchg
shrb
pushf
sti
adc
subl
pop
sbb
outsl
jecxz
pusha
and
es
lds
push
out
jo
pop
icebp
dec
shr
clc
or
es
mov
and
shll
dec
mov
pop
aas
in
push
cli
xlat
andb
call
mov
xorl
cmp
aam
jo
test
inc
popf
std
adc
dec
push
mov
icebp
pop
sbb
mov
pop
dec
popa
mov
dec
out
jmp
rclb
xchg
cmp
cld
push
bound
pop
push
or
cltd
cwtl
jno
xlat
dec
jns
mov
xchg
test
pop
xor
movsb
jmp
dec
mov
pop
shl
push
jle
add
jno
and
outsb
jmp
andl
cmpb
add
jecxz
pusha
sbb
push
data16
jne
cmp
mov
daa
jmp
lods
lock
cmp
pop
inc
mulb
sar
push
dec
xchg
add
push
repnz
pop
mov
mov
int
inc
jl
cwtl
sbb
pop
pop
test
and
pop
jp
fninit
jmp
out
cld
pop
xor
imul
add
push
xchg
ds
sbb
jg
sbb
pop
in
cmp
movsl
cmc
mov
push
das
ljmp
out
pop
or
sbb
dec
add
lret
ja
fldt
adc
negb
cltd
dec
jmp
call
cmp
xorb
divb
and
jae
push
lock
and
pushf
push
sbb
cmp
lds
mov
pop
shll
enter
push
orb
in
inc
add
fidivl
lret
mov
stos
fs
imul
sarl
sbb
cmp
sbb
cli
mov
inc
xor
add
sti
cmc
cld
add
pop
pop
in
push
shll
jns
pop
xor
jne
xor
hlt
inc
je
and
xchg
adc
stc
out
xchg
popf
add
pop
test
dec
sub
or
lods
jb
fwait
push
push
xchg
adc
jae
jmp
and
jp
pop
ljmp
js
out
xchg
loop
sub
or
call
adc
std
pop
les
mov
adc
xchg
add
popa
ss
sbb
stos
mov
push
pop
mov
xor
not
dec
pop
adc
jno
imul
arpl
out
mov
andb
pop
rorb
pop
mov
add
in
ljmp
jnp
shll
adcb
sub
lods
pop
jns
fmuls
jno
nop
rclb
scas
lahf
add
shr
dec
adc
leave
lods
repnz
mov
dec
es
jno
sbb
cmp
mov
imul
test
loope
cmp
clc
adc
mov
or
in
stc
js
rolb
jne
insb
out
add
sbb
sub
cmp
dec
testb
fs
out
push
dec
pusha
xor
pop
push
test
adc
inc
push
dec
add
sbb
push
cmpsb
in
adc
xchg
xchg
flds
or
mov
cs
xchg
dec
mov
push
outsb
insl
iret
fs
add
bound
dec
push
mov
push
imul
adc
xor
push
xorb
fs
xchg
xchg
iret
or
cmp
sarl
xor
xor
fstpl
adc
nop
fists
ja
pop
jge
xchg
or
sub
mov
fstpt
jns
shlb
and
sti
or
in
popf
ret
ja
test
jle
or
pop
pop
pop
push
cltd
or
dec
insl
cmpl
xor
adc
arpl
pop
xchg
popa
sar
cmp
adc
add
mov
pop
popa
mov
inc
xor
incb
lret
add
pop
loop
push
jmp
fmull
rcrl
add
dec
mov
fucomp
dec
sub
jmp
pop
nop
inc
popf
in
in
add
mov
aad
xchg
test
dec
ljmp
ret
ds
xor
xlat
or
add
jmp
mov
xorb
in
sbb
or
sarl
xor
adc
push
mov
sahf
cmc
xchg
jb
add
scas
xchg
push
in
std
xor
push
mov
shr
je
cmp
push
mov
and
dec
dec
int
in
scas
daa
lods
out
cmpsb
mov
into
scas
cmp
and
inc
push
aam
xchg
sti
lock
pusha
sub
xchg
fadds
push
add
mov
cld
mov
or
fiadds
cltd
sbb
das
push
add
outsb
mov
lock
inc
je
sub
push
in
and
shll
push
push
cmp
movsb
scas
inc
loopne
je
or
mov
sub
dec
sub
shll
and
dec
test
test
sub
sub
mov
push
push
aad
scas
les
out
dec
xor
inc
dec
mov
jge
or
cs
or
sbbb
mov
pop
or
xor
pop
adc
add
rcr
jecxz
adc
int3
pop
ljmp
stos
ret
in
inc
adc
pop
sti
mov
cmpb
pop
shll
mov
cs
loope
das
es
and
daa
ja
das
loopne
mov
or
cli
clc
add
in
jg
lods
lea
or
dec
inc
mov
lods
pop
adc
pop
and
in
mov
cmp
pop
popf
movl
sub
daa
imul
daa
inc
mov
jae
jmp
mov
mov
mov
notl
jmp
and
faddl
mov
lahf
jb
orb
inc
or
jmp
inc
lock
adc
je
jns
or
jmp
scas
mov
mov
or
inc
cmp
sub
hlt
es
ds
push
sti
lahf
les
dec
rol
mov
push
adc
mov
mov
daa
int3
mov
or
out
aam
int
pop
dec
xchg
hlt
xchg
out
je
or
push
cld
sahf
shl
push
xor
pop
out
aad
fldt
shrb
or
push
add
xchg
push
or
xorb
mov
loop
in
mov
push
call
jmp
push
sub
add
loop
inc
lods
jnp
and
add
pusha
mov
add
int
lds
pop
mov
sub
xor
dec
data16
mov
test
push
pop
push
jbe
pop
rolb
mov
or
daa
icebp
stos
test
imul
ret
js
ja
push
loopne
jge
clc
cmp
xchg
in
add
mov
jmp
mov
roll
call
jmp
arpl
jno
mov
dec
fiaddl
mov
push
js
xor
mov
and
add
and
pop
adc
ja
or
loope
ss
dec
push
imul
push
mov
inc
inc
faddl
cs
and
sub
mov
xchg
jl
dec
fwait
loop
fldl
dec
jmp
nop
add
jmp
add
push
xchg
js
dec
fldt
loopne
sbb
or
adc
mov
push
data16
push
lcall
and
fmul
mov
dec
sub
or
loop
dec
add
xchg
xor
in
cmp
pop
sar
adcb
xchg
jbe
or
jp
pop
in
popf
mov
ja
sub
clc
sbb
lret
xor
adc
mov
xor
xlat
cmp
mov
das
xchg
sbb
shll
popa
std
repnz
mov
pop
and
dec
scas
lret
loopne
xchg
jl
jmp
sbb
inc
lea
jnp
inc
leave
call
bound
mov
inc
add
mov
mov
movsb
gs
jl
add
dec
fcompp
adc
xlat
repz
or
enter
dec
inc
xchg
mov
scas
in
out
add
mov
test
lret
push
dec
dec
std
add
mov
dec
lds
add
cmp
idivl
dec
add
jmp
adc
test
out
mov
sub
inc
xor
clc
out
rclb
sbb
push
add
dec
in
imul
jmp
cmp
cwtl
mov
push
sub
dec
sub
ret
aas
add
xchg
jmp
add
add
add
lds
mov
rol
std
push
xchg
lret
enter
repz
outsb
pushf
sbbl
adc
xchg
mov
rol
ljmp
andl
cmp
push
pop
popa
mov
cmpsb
scas
mov
add
sub
sahf
movd
add
push
push
aam
mov
xor
push
test
test
out
mov
jmp
clc
push
mov
add
lahf
pop
fs
jmp
mov
adc
push
enter
mov
outsb
xor
mov
dec
xor
lret
adc
fildll
add
loopne
pop
fisubrl
adc
sbb
repnz
jge
jne
xor
xor
jp
cltd
pop
push
or
jge
dec
ret
xchg
inc
or
dec
adc
sti
ret
ja
aad
mov
fsub
mov
dec
push
mov
lds
and
inc
je
or
into
jge
push
mov
pusha
in
jmp
add
xchg
sub
push
rol
add
daa
jmp
outsl
and
insl
shlb
sbb
mov
sub
mov
fcmovb
call
and
mov
pop
in
mov
data16
adc
or
das
rcll
mov
push
jl
lds
test
addr16
cmp
adc
and
pop
mov
dec
std
in
ret
or
xor
sbb
xchg
jmp
mov
sahf
push
ret
mov
lock
or
les
mov
xor
push
out
shlb
js
jno
xchg
jge
pusha
daa
jmp
or
xlat
add
inc
add
adc
pop
xlat
adc
inc
sbb
adc
das
pusha
mov
inc
add
aas
add
add
stc
hlt
inc
add
shl
push
repnz
pop
imul
stc
repz
fadd
inc
jmp
push
cli
iret
mov
sub
hlt
mov
push
xchg
and
xor
es
or
push
push
clc
mov
adc
mov
sub
or
rcrl
adc
repnz
dec
jne
sub
or
xor
jg
stos
xchg
fwait
stos
sbb
fsubs
push
mov
lods
subl
pop
shll
ljmp
add
inc
mov
and
inc
xor
jmp
shlb
pop
jge
lods
loope
out
imul
mov
jp
adc
push
test
sbb
inc
data16
add
xchg
int
mov
add
call
xor
push
not
jmp
mov
ret
dec
adc
lock
sub
clc
xor
clc
daa
sarb
lock
adc
cmp
lret
cmpsb
or
outsb
jbe
jmp
flds
xchg
mov
das
rclb
and
xor
cmpsl
stc
xchg
mov
jl
sub
ljmp
add
mov
mov
repz
mov
cmp
sub
popa
cmp
or
sbb
inc
jns
xchg
push
xor
xchg
aad
mov
repnz
dec
rorl
loop
pop
repz
push
mov
or
jmp
mov
pop
ljmp
push
clc
sub
xchg
adcl
and
cwtl
mov
or
dec
call
fsubrl
or
fbld
inc
dec
add
icebp
jno
add
sub
hlt
out
add
sbb
sub
and
dec
stos
and
dec
sub
lahf
daa
repnz
xor
loope
pop
pusha
mov
cmp
mov
jmp
add
not
mov
push
mov
or
cli
imul
dec
repnz
int
and
sbbl
pop
jb
mov
cmp
xor
mov
push
add
and
and
jae
mov
inc
jmp
out
outsb
xor
imul
or
arpl
xchg
jg
dec
imul
daa
jle
cltd
push
jl
add
cli
test
pop
pop
aam
or
push
sbb
pop
cmp
jo
ret
pop
add
loop
rcrb
mov
cmp
jmp
test
js
inc
out
add
and
mov
imul
fsubrl
cmpsl
inc
push
repz
fsubr
push
jne
aam
or
pop
sub
das
xlat
addl
pop
jno
subb
bswap
out
push
jne
jne
repnz
inc
push
ds
sahf
push
mov
lret
imul
adc
jns
dec
nop
fimull
xchg
out
inc
cmp
xchg
push
push
push
aad
ret
dec
dec
lret
and
add
fisubl
addr16
add
bound
mov
mov
jmp
jg
xchg
hlt
pop
jg
adc
lods
sub
mov
daa
xchg
aas
jb
xchg
push
test
add
nop
sbb
adc
push
push
mov
inc
and
jmp
shl
sub
aas
aas
mov
dec
pop
mov
sarb
ficoms
pop
or
shlb
and
xchg
sub
mov
cmp
pop
pop
xchg
jge
mov
outsb
push
sub
dec
xchg
add
xlat
in
test
pop
and
mov
mov
lret
mov
out
dec
out
in
leave
jge
push
lock
mov
and
pop
push
mov
sbb
xor
dec
mov
data16
sub
add
pop
in
adc
movsb
mov
inc
dec
add
adc
inc
cli
mov
and
mov
jmp
pop
sarb
fistps
push
push
lods
mov
jp
xchg
stos
mov
or
push
les
lock
add
and
cmp
stos
lret
fdiv
mov
out
pop
add
mov
hlt
inc
fiadds
cmc
mov
lea
je
jae
sbb
jp
mov
pushf
popa
push
lret
ljmp
sub
ret
mov
xor
push
jbe
jl
dec
js
stc
xor
out
incb
jmp
pop
inc
mov
insl
mov
and
push
jmp
pushf
and
pop
push
imul
inc
mov
lods
ret
mov
lcall
repz
jmp
lods
push
scas
in
es
sub
pop
mov
in
xlat
clc
clc
mov
daa
xchg
das
frstor
in
sbb
add
mov
pusha
or
sbb
pop
subb
sub
sub
jmp
jl
rolb
jl
out
rorb
pop
inc
pop
push
ret
clc
movsb
in
lret
dec
mov
inc
add
sbb
xor
inc
adc
sub
jecxz
sbbl
mov
les
stc
not
lods
ja
inc
jle
mov
aas
roll
sbb
sub
movsb
pusha
or
mov
inc
shl
adc
push
ror
add
adc
push
movsl
add
pop
idivb
stc
and
cmp
cli
cltd
andb
pop
mov
mov
xor
je
dec
jmp
xchg
pop
es
sub
dec
push
cli
xor
movsl
xchg
mov
or
fisubrl
dec
jae
inc
inc
sub
add
push
push
pop
sub
jl
sbb
cmp
jl
mov
dec
nop
mov
sbbb
or
stc
dec
mov
mov
mov
xchg
pop
jbe
dec
pop
adc
add
andl
je
and
divl
fidivl
sub
jno
mov
dec
push
into
push
add
rorb
or
jmp
push
pop
outsb
inc
xchg
jmp
icebp
adc
push
push
push
sbb
xlat
add
mov
pusha
shll
inc
imul
jle
insb
mov
jnp
jg
pop
inc
jg
add
push
stc
test
fs
push
sbb
sub
loop
push
lret
pop
dec
arpl
or
into
leave
add
push
jmp
dec
out
adc
mov
daa
jp
or
push
inc
adc
add
adc
shlb
inc
repnz
and
xor
pop
sbb
call
cmp
fcomp
daa
xchg
into
popa
lahf
pop
cwtl
push
pop
push
or
and
lds
repz
daa
pop
pop
fdivrp
xor
es
orb
js
shlb
push
adc
int
movw
mov
fstpl
push
cmp
or
mov
shlb
insb
shll
and
nop
cmc
inc
sbb
lds
hlt
lret
pop
jae
incb
jmp
jnp
inc
sub
xor
outsb
outsl
int3
cmc
insl
cmp
aaa
inc
or
shl
push
pop
and
jmp
push
push
das
data16
rolb
rorb
mov
pop
arpl
adc
idivb
sahf
adc
xor
ret
neg
lock
xor
loope
adc
imul
aad
les
in
adc
mov
push
add
mov
pop
jbe
cmp
hlt
jle
sahf
mov
repnz
std
and
pop
rorb
push
adc
les
adc
pop
cmpsb
lret
adc
out
sub
xor
inc
inc
cmc
sarw
dec
jo
test
popf
in
xchg
cmp
and
push
mov
adc
dec
loopne
leave
sbb
int
pop
cs
add
test
dec
inc
cld
aaa
js
repz
dec
or
stc
add
sbbb
incb
pop
shr
repnz
clc
repz
push
fwait
push
xchg
je
sbb
das
in
mov
push
fiadds
outsb
rcrl
xlat
test
stc
mov
jno
push
push
lods
mov
mov
adc
rcrb
mov
fwait
dec
inc
pop
and
int3
outsb
xchg
xlat
jmp
push
cmpl
test
jmp
xchg
aaa
dec
pop
ret
pop
adc
jg
cli
fs
fbld
mov
ror
sub
pop
push
mov
movsb
sbb
dec
mov
xchg
scas
xor
sub
or
dec
push
das
and
jmp
sbb
cmp
or
scas
adc
inc
xor
fists
xchg
or
add
aaa
lahf
jne
mov
js
pop
inc
push
test
add
cmp
sub
icebp
mov
fwait
aad
test
stc
and
dec
stos
pop
or
incb
add
push
popa
pop
sarl
bound
insb
test
sub
jmp
dec
pop
push
xchg
pusha
push
clc
rolb
jno
dec
loop
sub
sbb
inc
daa
jmp
add
pop
and
mov
popa
xor
daa
add
out
add
mov
leave
xchg
push
dec
and
iret
cmp
lcall
fsubs
xchg
inc
movsb
mov
lcall
xchg
adc
jmp
mov
xlat
int3
mov
lods
adcb
sbb
or
mov
jmp
leave
adc
push
pushf
pop
push
cli
mov
push
and
test
push
or
pop
push
mov
or
push
notb
gs
push
push
mov
ljmp
hlt
insb
ret
mov
jmp
add
shl
fwait
fs
test
mov
push
jecxz
jg
cs
push
das
sar
and
inc
and
je
cltd
adc
jnp
stos
stc
inc
sbb
in
and
imul
inc
rcrb
pop
push
adc
lds
inc
mov
and
xchg
mov
stos
sub
addb
jg
sub
cld
in
mov
nop
test
xchg
pop
xorb
stos
xlat
pop
push
ret
cltd
imul
imul
jl
jge
jg
sbb
mov
push
push
les
in
ret
mov
ret
adc
cmp
int
out
cli
mov
mov
dec
out
fiaddl
sub
mov
mov
adc
out
shlb
xor
xor
scas
int3
neg
rolb
idivb
xchg
dec
jmp
out
sbb
inc
or
test
fldenv
xchg
or
int3
jecxz
in
ret
jle
aas
jo
jg
jl
push
push
int3
jmp
leave
and
xorl
popf
sarl
data16
into
daa
adc
inc
mov
int
jmp
orb
xor
and
scas
lds
xor
mov
cmp
xor
in
xchg
idivb
push
sahf
adc
and
add
cmpsb
add
and
or
mov
xchg
or
pop
je
iret
movsb
leave
mov
adc
xchg
insl
mov
aaa
shll
int3
fldl2t
sub
lds
dec
add
xchg
xor
sub
cld
nop
sarl
outsl
cmp
push
add
or
pop
adc
out
cmp
mov
cmp
dec
fcoml
mov
scas
and
imul
ds
mov
shrb
pusha
daa
idivl
add
out
jecxz
pop
sti
xor
popa
xor
mov
inc
testl
adc
dec
mov
out
clc
mov
imull
mov
sbb
imul
push
and
gs
push
insb
push
inc
mov
dec
lahf
pop
xchg
test
pop
mov
xchg
sub
push
sbb
pushf
mov
popa
iret
orb
test
jns,pn
fimuls
and
dec
inc
add
pop
out
clc
push
mov
shll
bswap
xor
movsl
out
add
gs
stos
xor
daa
or
vmwrite
jae
mov
or
das
mov
mov
and
mov
dec
add
push
inc
jmp
xor
xor
cld
push
pop
push
icebp
inc
out
mov
xchg
or
int3
cmp
popa
dec
mov
push
sahf
pop
xchg
outsb
test
mov
xchg
dec
add
and
pop
push
lods
repz
jb
cwtl
or
sub
das
dec
lar
jne
cmp
cmpsl
jne
push
pop
add
jg
stos
pop
push
and
bound
cld
push
jmp
sub
sub
xchg
int
pop
mov
loop
mov
mov
stos
xor
scas
sarb
jmp
and
in
fs
inc
aad
jp
inc
dec
push
xor
jmp
mov
cs
cmp
lret
mov
enter
pusha
pop
sbb
mov
aad
push
mov
xchg
fimull
mov
xchg
cs
xorb
cld
pop
and
add
arpl
add
jge
push
cmpsl
push
pop
mov
jnp
lea
push
and
fisubl
inc
and
xor
add
jmp
cltd
pop
mov
xor
mov
adc
clc
xchg
addb
xor
jmp
stc
in
test
jp
daa
pop
jns
pop
subb
add
pushf
andb
repz
mov
mov
mov
in
in
pusha
adc
xchg
push
sub
ret
pop
push
mov
adc
int3
push
addr16
imul
push
sub
lret
add
push
sub
pop
push
das
adc
sub
sub
lea
xchg
fbld
pop
hlt
es
mov
sbb
add
test
sar
repz
lret
xlat
dec
jo
out
mov
xor
lret
mov
pop
and
jmp
lock
neg
clc
stos
cli
clc
dec
push
mov
jo
xchg
ja
shrb
lods
pop
jo
pop
ljmp
push
imul
stc
pop
add
push
lea
or
and
dec
imul
das
mov
cltd
jp
das
cmpsl
jge
mov
sub
shr
adc
shrl
inc
jle
nop
sub
pop
inc
push
mov
add
fmuls
inc
xlat
jns
cmc
jnp
mov
sub
ret
outsb
test
adc
pop
or
incl
mov
sbb
xlat
pop
mov
fsubrp
dec
scas
sub
jecxz
mov
out
dec
sub
fucom
mov
js
loop
pop
dec
stos
jecxz
je
or
movsl
adc
cltd
cmp
jp
or
pop
mov
inc
mull
adc
inc
mov
aad
and
jne
rcr
test
mov
jo
popa
subb
xchg
xchg
aas
adc
in
inc
add
in
add
jecxz
adc
jmp
xor
decl
std
pop
lea
roll
pop
imul
dec
sbb
push
ret
or
in
dec
pop
adcb
inc
add
repnz
jmp
pusha
movsb
adc
cmp
sbbb
sbb
sarb
sbb
fists
jmp
inc
and
mov
cmpsl
imull
test
ret
nop
ljmp
or
hlt
out
inc
ret
jmp
push
loopne
xchg
dec
add
fmull
pop
xor
push
jmp
sub
lods
mov
push
subb
adc
sub
or
pop
dec
stos
sub
jmp
jae
push
or
lock
addb
or
mov
inc
addr16
add
jae
xor
or
shl
jge
pop
int3
shll
repnz
dec
dec
div
mov
pop
pop
mov
cmp
or
sbb
es
pushw
lock
lock
xchg
sahf
mov
jmp
test
cs
pop
data16
jle
jne
jae
or
data16
cmp
adc
push
sub
dec
es
xchg
push
not
xor
pop
das
push
mov
stc
jmp
xor
push
mov
xor
push
push
stc
clc
shl
sub
addb
aaa
std
inc
stc
pop
xor
push
or
ficoml
dec
add
push
cmp
dec
sub
bnd
aad
sbb
jecxz
sbbl
lds
push
adcb
push
xor
add
mov
in
ret
fildl
pop
bnd
loopne
mov
pop
lods
pop
scas
sub
adc
out
es
shl
dec
dec
pop
xorb
ret
or
inc
dec
sub
add
rol
daa
inc
rolb
mov
rorl
or
jnp
fs
ret
loop
test
mov
das
lcall
pop
out
pop
xlat
sub
ret
out
push
jmp
lahf
sahf
xchg
ljmp
scas
mov
xchg
shrl
add
push
mov
outsb
mov
jnp
xor
mov
cmp
pop
fistps
lea
jg
negb
lock
pop
in
insl
pop
add
in
mov
lock
xchg
adc
add
or
adc
pop
std
sbbb
leave
pop
add
shll
sbbl
pop
pop
addb
or
or
push
dec
enter
pop
ret
jno
lods
lret
pop
inc
addl
test
xchg
inc
not
adc
xor
cwtl
jl
lods
xchg
push
daa
inc
pop
flds
xchg
mov
in
test
xchg
cmp
cmp
adc
xchg
xlat
xor
cmpl
in
stc
roll
pusha
jge
dec
push
popfw
call
push
push
adc
mov
arpl
jns
inc
fcoms
xor
repz
imul
shrb
adc
in
xor
xor
xchg
xchg
xchg
push
dec
jl
xor
jmp
xor
lock
into
scas
and
pop
and
inc
and
mov
outsl
add
inc
push
adc
je
addb
sbb
add
test
call
std
gs
mov
ss
outsl
dec
and
dec
jnp
lds
mov
or
sub
pop
mov
clc
pop
and
mov
jae
dec
sub
cmpsb
orb
mov
das
test
xor
and
xor
dec
sub
push
pop
sub
adc
cmp
add
outsl
xchg
adc
ror
dec
mov
in
cmpsl
lods
lahf
shll
hlt
mov
pop
pop
push
xor
std
add
mov
lock
shrl
jmp
inc
jecxz
mov
imulb
dec
repnz
jno
dec
mov
add
repnz
cwtl
fwait
and
or
ret
jno
jge
ret
xor
xor
adc
adc
lret
lods
sub
jno
in
pop
dec
repnz
and
add
fwait
roll
xchg
and
popf
in
ret
inc
pop
dec
push
call
aas
push
push
xchg
add
pop
mov
dec
loopne
jmp
lahf
push
fiadds
dec
sub
jge
lret
push
inc
popa
les
xchg
aad
pushf
or
adc
sub
xor
pop
sub
cmc
xchg
iret
and
jmp
jne
jne
jo
xchg
xlat
xchg
in
adc
mov
call
or
or
pusha
aam
je
std
sbb
jle
add
mov
pop
aad
dec
add
mov
lahf
pop
sub
mov
dec
sub
subb
lods
or
jle
mov
imul
cmp
cmp
jle
add
loope
add
push
and
enter
push
shr
inc
std
cmp
inc
outsb
lods
sub
jmp
dec
pop
mov
dec
push
pop
es
int3
jb
jg
add
sar
in
in
push
adc
sub
or
push
push
aaa
std
push
mov
xchg
xchg
bnd
add
ds
add
outsl
xchg
je
fimull
dec
icebp
and
pop
and
daa
mov
data16
sbb
pop
sub
pop
push
stc
hlt
add
and
imull
leave
push
and
test
push
shll
xchg
pop
jmp
shl
ret
ds
push
out
fdiv
out
pusha
or
mov
add
test
add
out
inc
enter
imul
aad
cltd
orb
mov
shr
adcb
popf
cs
push
jno
adcl
add
push
mov
mov
adc
push
and
popa
push
je
inc
adc
and
adc
dec
add
or
add
inc
lods
lods
pusha
adc
mov
into
call
pop
jg
add
jecxz
pop
lret
jns
cld
pushf
mov
popf
inc
push
xor
cmp
pop
add
pop
test
andb
cmp
sbb
jmp
in
sti
xchg
cld
cltd
bound
pop
jmp
fld
add
outsb
xor
mov
and
ret
or
pop
lahf
jbe
sub
stc
or
aam
mov
push
push
and
inc
sar
ret
inc
popa
in
orb
xchg
aad
pushf
add
fs
xorb
sbb
mov
or
mov
xor
inc
outsl
pop
mov
pop
xorl
leave
push
int
cmp
shr
mov
popf
cld
mov
push
ljmp
rclb
imul
pop
mov
rcrb
into
enter
clc
sbbb
ret
add
js
and
adc
and
push
xchg
xor
call
movsb
pop
sarl
jp
pop
mov
push
push
mov
jmp
push
loopne
xchg
jnp
mov
jmp
cmp
scas
adc
jne
xchg
ss
dec
movsl
push
fidivs
and
ja
shrb
mov
sbb
pushf
push
dec
movsl
sti
fists
xor
aam
out
adc
mov
lea
loopne
repz
xor
jle
in
rorb
aas
xchg
sbb
gs
cs
aaa
push
or
les
add
jle
inc
adc
aad
icebp
sbb
popf
sbb
inc
div
rcr
or
pop
cmp
mov
sub
cmp
jae
or
ret
sbb
and
shlb
out
and
inc
cmp
pop
lahf
jl
out
loope
or
hlt
daa
push
lcall
inc
mov
ljmp
push
shr
in
nop
arpl
push
sbb
or
pop
sub
out
dec
sub
lret
test
push
cmc
lods
dec
xchg
dec
or
xor
clc
jb
add
fcomi
imul
mov
mov
test
mov
pop
xchg
xor
leave
orb
sub
fidivrs
inc
call
rclb
fdivrs
idivb
add
or
mov
add
inc
push
add
push
arpl
inc
mov
rorb
imul
bound
mov
xor
icebp
pop
pop
or
xor
and
and
dec
xlat
xchg
pop
mov
mov
clc
add
shlb
or
cmpsb
pop
rcll
sub
sub
imul
addr16
out
test
out
adc
adc
and
out
add
in
xor
jne
sub
sbb
or
pop
push
pop
pop
js
mov
inc
sub
push
add
int
or
arpl
outsl
adc
push
insl
mov
and
add
jmp
xchg
ret
xchg
pushf
xchg
adc
test
pop
dec
mov
cmp
jle
aaa
add
inc
jmp
call
sub
pop
out
mov
lcall
cmp
js
ficoms
pop
jg
fchs
and
mov
les
rcrl
sti
test
not
xchg
and
sub
push
push
mov
pop
inc
jmp
push
aam
or
jmp
out
add
arpl
int3
je
mov
loop
ja
sub
imul
orl
pusha
les
mov
xchg
rorb
xor
into
mov
xor
mov
dec
jg
mov
aad
mov
cli
es
jnp
repz
and
adc
mov
icebp
pop
sub
fs
sub
imul
pop
and
or
lock
mov
mov
mov
xor
cmp
insb
inc
ds
and
pop
lret
xor
push
jle
xor
out
clc
adc
pop
stos
inc
mov
push
imul
xchg
sub
sar
xchg
pop
test
inc
ja
aad
push
push
mov
jg
loopne
decl
xchg
pop
ret
jbe
fcmovb
in
dec
xor
jg
push
push
das
loop
cmc
mov
inc
bsf
int
and
jle
add
jo
dec
repz
cs
sbbl
push
xchg
mov
dec
and
or
xchg
in
xchg
inc
mov
mov
or
out
push
dec
and
stos
xchg
xchg
sar
aaa
add
inc
jne
adc
pusha
jne
fisttps
push
jbe
push
xorb
jge
sub
jmp
mov
in
pop
cmc
mov
push
xorl
cmp
cwtl
dec
push
daa
mov
mov
insb
mov
test
add
push
push
mov
push
push
inc
fidivrl
outsl
adc
aam
mov
dec
out
sbbb
jbe
or
std
inc
and
sub
inc
movsl
mov
jmp
and
add
jl
add
push
mov
mov
loopew
int3
inc
push
out
pusha
leave
cmc
xor
mov
mov
cmp
in
and
jne
mov
call
aas
adc
push
pop
xchg
dec
jno
sbb
adc
fcomi
xor
xchg
push
aaa
and
idivb
sarl
fmull
lods
lock
push
sub
or
push
xchg
insl
popa
xlat
dec
js
pop
sub
pop
pushf
das
xchg
push
out
popf
cmc
popf
mov
das
stos
xchg
ja
test
jo
movsb
lret
test
sbb
push
fsts
insb
and
pop
js
push
push
int3
sbb
push
shlb
xchg
push
or
pusha
ljmp
icebp
mov
xor
inc
pop
or
rcrl
ret
sub
mov
jo
cmp
mov
dec
mov
add
dec
mov
sub
xchg
outsb
xchg
out
repz
cmpsb
add
pop
stos
xchg
mov
dec
jnp
jae
jmp
daa
imull
cld
loopne
ret
lret
sbb
pushf
gs
push
shlb
pop
scas
push
and
sub
xchg
sbb
jb
or
rorb
mov
inc
dec
pushf
mov
in
pop
mov
sbb
scas
sub
add
pop
add
xchg
iret
dec
inc
and
add
mov
cmp
xchg
dec
mov
cmpsl
mov
pop
pop
lods
sub
loopne
test
das
mov
jl
sub
mov
xchg
jp
pop
inc
fldt
push
insb
push
repz
lods
lret
xchg
mov
add
xchg
pop
inc
lret
fbstp
loop
push
push
inc
jmp
jmp
pop
adc
loopne
sub
mov
aas
mov
push
movsb
mov
inc
sbb
mov
push
add
mov
or
xor
xor
outsb
subl
cld
or
pop
pop
in
lcall
dec
pop
adc
aam
pop
addb
dec
lds
jmp
clc
add
jp
mov
push
inc
rorl
dec
sub
cmp
mov
sbb
add
push
push
adcb
or
lahf
jmp
push
push
push
and
jle
ja
push
popa
in
inc
arpl
push
push
xchg
add
and
aas
mov
pop
ljmp
inc
movsl
pop
pop
push
push
inc
jmp
dec
repz
xor
xlat
or
and
sub
out
std
jne
in
inc
hlt
leave
pop
adc
js
sahf
mov
pop
cmpsl
decb
xchg
push
lahf
adc
mov
dec
loope
call
scas
imul
dec
jecxz
mov
and
mov
cltd
or
enter
shll
nop
jmp
add
les
stos
clc
cmpsl
imul
inc
repz
ja
or
lea
cmc
inc
dec
imul
call
inc
mov
mov
jmp
cmp
mov
lahf
xchg
xchg
xchg
inc
test
test
xlat
xchg
adc
add
repnz
sub
xchg
mov
in
jmp
mov
and
dec
sub
fldcw
movsb
or
add
aad
test
call
repz
jb
cltd
int
pop
and
add
outsl
test
fs
adc
lret
or
mov
sbb
daa
xor
pop
call
dec
insl
jmp
pop
std
rclb
jb
mov
out
and
sub
rclb
and
and
and
subl
inc
ficoms
sar
mov
clc
jns
add
add
xor
pop
mov
fcompl
testb
subb
stc
rcr
mov
dec
sahf
push
mov
mov
negl
lcall
jg
outsl
jle
test
andb
repz
or
and
push
and
push
outsb
test
andl
in
mov
loop
iret
in
gs
cmp
std
pop
mov
std
pop
popa
xor
xchg
cmp
and
dec
in
in
jnp
xlat
push
xor
mov
sbb
mov
aad
jge
mov
or
sub
adc
dec
or
test
out
adc
xor
mov
xchg
test
scas
lods
and
pop
pop
repz
int
and
jo
pusha
stos
push
fdivrp
xchg
xchg
orb
daa
lret
pop
xchg
xchg
mov
daa
jnp
pop
and
js
pop
jp
inc
lret
push
sbb
shlb
sarl
adc
loop
hlt
push
les
and
push
add
loopne
jo
and
dec
sub
mov
dec
hlt
popf
jg
ljmp
fdivrl
jg
lds
addb
lcall
ljmp
mov
pop
shlb
out
pusha
jg
cmc
pop
jg
mov
outsb
arpl
adc
jno
sbb
mov
or
sub
rclb
cmp
sti
test
sub
in
jmp
decb
aam
lret
push
cmpb
cmp
jge
push
and
cli
nop
sti
xchg
fcoms
push
repnz
dec
sub
movsl
inc
push
jecxz
mov
pop
mov
jmp
dec
mov
sub
fs
lret
std
pop
ljmp
jg
insb
lds
push
pop
sub
dec
loope
add
add
outsb
sub
rorl
loopne
int3
daa
inc
mov
sbb
aam
pop
xchg
and
arpl
mov
adc
repz
jae
adc
cmp
xchg
inc
enter
push
pop
xor
lods
fldl
std
pusha
push
or
pop
loopne
mov
mov
pop
push
clc
test
fcoml
sub
sbb
das
inc
ds
dec
sbb
mov
add
movsb
mov
mov
test
rcrb
jno
push
imulb
repnz
pop
and
pop
aad
or
sarl
xlat
clc
mov
mov
scas
and
xchg
dec
add
mov
sbb
pusha
pop
add
adc
sbb
xchg
dec
add
scas
lret
mov
pop
xor
mov
mov
inc
int
mov
out
mov
jmp
xchg
popf
pusha
in
jo
pop
or
aas
popa
fs
cmpsl
inc
int
test
xchg
push
ficoml
or
stc
imul
int3
push
xchg
or
adc
jb
aad
js
adc
jge
xlat
arpl
cmp
cwtl
push
pop
mov
add
call
loope
and
xlat
push
stc
enter
sub
pushf
leave
clc
loop
cmp
ss
jmp
popf
out
mov
inc
mov
cmp
ret
pop
sbb
pop
dec
cltd
daa
mov
fsubrl
ret
in
sti
lock
push
scas
jno
cmpb
imul
aam
sarb
cmpb
dec
xor
imul
xchg
or
jmp
in
mov
xchg
jne
lods
arpl
iret
mov
mov
dec
xor
xor
cmp
xor
sahf
icebp
sub
jp
dec
or
repz
or
xor
pop
jbe
into
jb
fsubl
jge
dec
push
fld
mov
mov
adc
fistpl
sahf
stc
xchg
adcb
pslld
subl
add
icebp
cmc
shll
paddusw
mov
imul
xlat
and
pop
xchg
in
mov
cld
lcall
mov
in
add
and
mov
test
mov
subb
testl
xlat
jle
popf
push
std
inc
dec
inc
cmp
orl
out
jmp
or
ja
or
in
add
inc
jmp
inc
int3
loop
lret
mov
test
sub
push
icebp
cmpsl
fsubrl
mov
push
pop
outsb
inc
xor
sub
sti
jbe
dec
sub
jno
add
cmp
mov
push
cwtl
loopne
jo
sub
jnp
xor
add
ret
movsb
mov
inc
push
out
cwtl
bound
cltd
inc
or
mov
stc
rolb
mov
cmpsb
sarb
xchg
lret
xlat
mov
dec
movb
jmp
sub
rcl
jl
loope
lea
ret
ss
or
icebp
or
and
push
push
push
icebp
ljmp
rorl
mov
add
rcll
lods
lods
in
notl
sub
inc
or
adc
inc
test
jmp
adc
lret
in
shrb
xor
dec
mov
clc
mov
test
xchg
sub
call
out
or
insl
aas
push
pop
jmp
outsl
es
adc
pusha
lret
xchg
cmp
dec
enter
outsb
mov
sub
orl
out
xor
add
out
lret
dec
sbb
inc
jp
jae
dec
stos
andb
imul
lods
popa
pop
adcb
mov
adc
pop
jne
adc
scas
inc
or
shr
fs
xor
adc
push
sbb
jb
mov
push
add
out
add
daa
std
addr16
push
sbb
sub
push
iret
or
cld
icebp
loopne
add
std
jo
mov
sbb
ljmp
shr
shrb
test
jne
push
mov
data16
dec
pop
iret
cmp
arpl
adc
shl
jbe
bound
das
and
bound
push
or
jmp
xlat
in
test
jle
xlat
cmp
jp
negl
hlt
xchg
imul
add
add
js
cmc
mov
mov
pop
and
rorb
loopne
mov
sub
xchg
call
dec
mov
mov
jmp
fsub
push
add
add
roll
not
subb
push
dec
cmp
push
jle
xchg
nop
lods
test
stos
cmp
mov
nop
rcrb
xor
mov
sub
xor
push
or
jno
xchg
pop
jno
push
rorl
sub
mov
icebp
xchg
int3
sbb
mov
mov
sub
out
jne
sub
dec
or
or
pop
daa
jae
push
les
jmp
outsl
outsl
mov
jp
ja
adc
cmp
push
push
mov
push
jmp
mov
sbb
js
fistl
rorl
mov
sbb
and
ja
aaa
cs
movsb
push
popa
xchg
xchg
jmp
push
stos
add
int
jae
mov
cmp
sahf
sbb
or
insb
add
outsb
pop
mov
sub
mov
sbbl
icebp
mov
jg
adc
jp
cmp
jmp
and
gs
jle
mov
bound
mov
out
imul
ljmp
cmp
push
fldcw
add
outsl
enter
in
dec
pop
repz
sub
shrb
orl
push
cmc
adc
mov
add
xor
shll
add
cltd
push
shlb
dec
insl
cld
or
popl
pop
mov
adc
sub
clc
mov
pop
rcll
fldcw
mov
push
pushf
add
mull
sub
lret
push
xor
iret
xchg
out
cmpsl
jo
icebp
out
subb
addb
mov
or
jl
xchg
rol
add
xchg
add
cwtl
add
pop
add
mov
xor
mov
add
ds
mov
dec
mov
adc
add
pusha
add
cmp
mov
inc
pop
mov
aam
pushf
scas
inc
leave
mov
xor
scas
push
cmpl
adc
popf
adc
xchg
adc
push
adcl
jge
jbe
lods
jno
rorb
in
aaa
or
cmpsb
and
mov
pop
cmpsb
nop
int
and
stos
and
xor
out
add
sub
into
and
dec
addl
les
add
hlt
loope
lret
mov
popf
js
cmp
adc
adc
bound
jmp
int
xchg
inc
and
arpl
or
mov
subl
mov
cmpsl
add
add
data16
enter
add
add
and
shrb
nop
push
push
clc
imul
je
lock
adc
in
xchg
add
aam
fiadds
pop
adc
addr16
adc
sbb
std
mov
scas
xor
jo
in
aam
and
fcmove
imul
or
and
xchg
shrb
loopne
and
and
and
and
arpl
xchg
push
fsubl
and
ret
mov
iret
push
mov
ds
add
add
and
xchg
and
sub
orb
cmp
adc
xor
cmpb
mov
dec
sub
adcb
xchg
lods
rolb
mov
out
in
out
cmp
sbb
icebp
sbb
jmp
mov
add
scas
dec
cmp
cmp
mov
jmp
add
jmp
les
mov
test
dec
sbb
inc
push
mov
xor
rolb
push
mov
mov
jbe
xchg
dec
push
jnp
sbb
sbb
dec
push
or
cmp
sbb
push
push
push
add
movsl
data16
xor
sub
push
mov
inc
loope
jp
sub
mov
and
aas
push
pop
push
or
notb
jecxz
mov
and
pop
addb
lahf
pop
data16
or
popa
and
pop
imul
push
lahf
sbb
mov
adc
js
call
cmp
mov
das
jl
cli
and
xchg
add
in
and
testb
push
push
sub
and
xchg
cs
inc
jmp
pop
sub
push
sub
lret
pop
mov
out
pop
jmp
lahf
out
lahf
pop
mov
push
sbb
jge
cmp
xchg
push
adc
popf
stc
int3
movsb
push
or
push
lret
shlb
jno
push
clc
lahf
push
loope
subb
push
out
push
andl
adc
or
push
jmp
jl
pusha
sub
pop
and
lret
pop
pop
and
jo
rclb
mov
fldl
pop
dec
push
xchg
dec
stos
daa
jmp
dec
add
add
ljmp
aaa
dec
push
and
push
mov
pop
add
outsl
loop
or
cmp
mov
out
ror
or
sub
rorl
push
or
bound
aad
in
aas
adc
dec
arpl
cmp
mov
push
push
icebp
adc
shlb
jle
dec
jb
dec
push
sbb
mov
mov
fwait
lcall
or
add
loope
and
pop
push
adc
pusha
cmc
mov
mov
rorl
call
jge
add
fimuls
and
xchg
pop
push
add
jbe
and
out
roll
mov
loopne
jg
pop
sbb
push
sarb
push
xor
cmp
cwtl
jge
mov
sub
pop
mov
leave
cwtl
push
addb
mov
call
sbb
lods
test
sub
adcb
xor
push
hlt
pop
add
and
aam
jmp
sub
int3
iret
push
xchg
out
sbb
pop
sti
or
and
jmp
add
cmpb
sub
sub
add
sbb
sub
mov
ficomps
jne
in
cmc
jecxz
or
rcrb
fmull
cmp
mov
mov
add
or
enter
cmp
ljmp
jo
xchg
ficoms
repnz
and
leave
sti
icebp
sahf
add
in
popa
mov
pop
xor
movsl
hlt
shlb
or
fists
add
addl
clc
sbbb
adc
dec
lods
aam
mov
push
and
xor
sbb
xchg
push
mov
je
and
test
loop
les
and
mov
mov
pop
push
dec
movsb
scas
push
aaa
or
and
mov
in
ss
shl
test
push
cmp
es
stos
push
mov
lods
dec
pop
dec
in
push
and
dec
pop
loopne
outsb
arpl
jnp
ds
add
xor
push
or
mov
xchg
or
add
sub
orb
jnp
fdivrs
pop
dec
jmp
adc
fsubl
sub
out
mov
pop
clc
cvtdq2ps
mov
add
dec
mov
xor
or
adc
and
sub
add
in
movsb
mov
imul
in
xchg
xor
out
jb
ds
mov
xor
pop
repz
cmp
or
pop
cltd
dec
sbb
dec
fcomps
sub
mov
and
sub
and
mov
std
std
add
mov
in
sub
push
idiv
leave
push
aam
pop
add
stos
mov
add
pop
add
subl
shr
outsl
orb
popf
pop
push
push
and
addl
add
inc
fnsave
lock
addr16
jne
lods
adc
sbb
and
pusha
or
jmp
aaa
les
cmp
scas
test
movl
add
psubsw
or
or
scas
jecxz
dec
or
fwait
inc
es
imul
scas
jb
mov
in
inc
mov
aam
neg
and
xor
mov
in
insl
fistpl
mov
mov
pop
or
jne
aas
pop
sub
and
pop
xor
jmp
xchg
cmp
xchg
inc
mov
adc
mov
push
push
leave
ror
push
in
mov
les
jns
xor
add
pop
sub
mov
shrl
das
mov
pop
jmp
push
lcall
push
pop
cli
jne
and
pop
pop
pop
jl
mov
mov
add
pusha
dec
xchg
inc
and
dec
shl
mov
subb
ret
fidivrs
ljmp
pop
mov
mov
shr
add
dec
adc
jecxz
sbb
loop
popf
cmpsb
adc
pop
pop
lds
push
xchg
push
push
inc
int3
scas
call
jmp
jnp
insl
push
and
inc
test
mov
dec
add
xchg
jae
jmp
pop
outsb
pop
fiaddl
sahf
iret
pop
insb
mov
cs
mov
sub
in
mov
nop
lods
add
xor
add
inc
sbb
inc
sub
arpl
mov
push
jbe
orb
daa
bound
stos
add
in
inc
pop
jecxz
orl
push
int
lcall
insl
dec
sub
into
test
into
inc
cmp
shl
add
xchg
xor
push
sbb
add
push
add
or
aaa
daa
cli
add
mov
add
jbe
lods
loop
fbld
and
mov
cmp
or
pop
je
jle
in
pop
or
or
std
loope
add
and
stos
out
and
cmp
xchg
popf
mov
ret
ret
mov
fiadds
sub
jmp
inc
sub
shll
mov
inc
test
lret
xor
or
push
das
clc
cmpsl
mov
jnp
push
push
mov
and
or
jbe
aas
inc
ja
mov
dec
sub
xor
add
testb
lock
push
mov
sbb
push
dec
jno
cmp
int3
daa
mov
std
add
xor
cli
aaa
pop
popf
and
xor
push
pop
mov
mov
add
ret
push
faddl
movsb
mov
cmc
mov
cmp
push
xchg
adcb
or
stos
dec
mov
mov
jg
add
fidivs
fimuls
aaa
repz
call
jbe
jae
leave
inc
and
mov
push
aaa
shl
inc
call
adc
in
loopne
mov
pop
dec
xchg
clc
sarb
sbb
mov
ja
jecxz
sahf
incl
dec
and
jmp
mov
pop
add
xor
mov
jb
cmp
cmpsl
jbe
jb
jae
mov
call
or
sbb
jmp
mov
inc
pop
sbb
les
xor
out
sub
or
das
jmp
inc
mov
sub
add
call
pop
cmpsb
dec
jmp
lods
add
pop
mov
jg
dec
or
cmp
mov
mov
mov
push
push
repz
jle
or
or
enter
push
push
inc
jp
add
jo
dec
dec
push
adc
adc
push
inc
das
das
call
popa
or
dec
inc
movsb
call
cmc
jl
scas
mov
lcall
push
mov
mov
jmp
testb
addl
xchg
fidivl
dec
sbb
outsl
add
dec
adcb
sbb
in
push
in
cs
sub
dec
test
sbb
pop
push
xor
jns
fs
jb
add
clc
stos
add
or
dec
neg
sar
in
pop
daa
sub
mov
sti
push
aam
test
mov
lds
inc
test
das
lret
test
or
inc
add
and
push
xor
jmp
or
xor
xchg
add
xor
lcall
add
add
dec
imul
ret
or
into
xchg
stc
sub
orb
xchg
pop
mov
adc
or
xorb
sub
pusha
jnp
into
addr16
cwtl
push
push
push
pusha
jmp
in
aas
xor
daa
push
jae
pop
lret
aad
rclb
or
push
popf
xchg
push
dec
xchg
xor
and
push
arpl
mov
jmp
cmp
pusha
sahf
inc
push
add
sbb
push
repnz
inc
or
xchg
jbe
mov
aas
test
adcl
scas
or
pop
je
enter
cld
js
cmp
rcrl
pushf
sub
icebp
or
xor
cmp
jp
xchg
out
daa
pop
or
inc
loope
comiss
lock
xchg
repz
sbb
sar
mov
gs
bound
pop
jge
cmp
adc
dec
or
in
or
add
fidivl
dec
jg
jp
xor
dec
adc
xchg
lcall
fstpl
insb
mov
daa
push
aad
sub
sbb
mov
and
add
fidivs
pop
sbb
add
imul
jg
mov
xor
addr16
xchg
shlb
jmp
mov
shl
addb
push
mov
testl
sub
sub
pop
add
or
inc
mov
es
jge
xor
inc
add
pop
shlb
mov
add
call
or
aaa
jb
sub
xchg
insb
cmpl
daa
or
fadd
xor
rclb
add
push
mov
dec
push
push
mov
add
out
xchg
cmp
adc
cmp
mov
mov
push
pop
add
xchg
jb
add
mov
or
roll
jmp
pop
xchg
outsl
dec
inc
cmp
jmp
dec
into
fisttpll
lret
or
or
pop
sub
popl
repnz
fbld
aaa
jp
das
dec
sbb
and
mov
subb
jne
or
mov
mov
scas
enter
push
push
out
and
push
mov
cmp
or
cmp
or
ds
data16
dec
cmpsb
iret
out
sub
shl
fwait
xor
sbb
and
loope
enter
add
ret
xchg
jle
xchg
sbb
fwait
leave
scas
mov
mov
or
add
jae
pop
pop
scas
int3
jae
mov
loop
mov
aaa
jle
lods
or
xor
and
cmp
push
dec
stos
mov
ds
inc
int3
jmp
mov
stc
push
jge
and
push
daa
and
out
lahf
dec
popf
push
push
jo
inc
loop
sbb
outsl
out
sub
jp
xchg
addr16
outsb
test
lcall
and
negl
nop
cmpsb
or
push
out
mov
xchg
inc
push
call
adc
jno
ret
movsb
outsl
xor
mov
or
lds
adc
push
inc
testb
jbe
adc
mov
pusha
adc
fbld
ret
xor
push
clc
movsb
add
add
dec
inc
pop
adc
mov
jnp
out
inc
pop
sbb
mov
mov
ret
movl
movsl
pop
js
adc
push
pop
push
jmp
into
fisttpll
rorl
and
cld
jmp
fisubrl
jmp
mov
add
xor
pop
jg
jo
inc
mov
loop
popa
ret
test
in
pop
adc
or
xor
sub
inc
adc
shrl
test
add
clc
push
inc
pop
jmp
popf
into
push
pop
sub
sub
inc
push
ret
push
xor
add
imul
popf
ret
xor
cmc
push
sub
fiaddl
jp
cwtl
push
divb
cltd
xchg
dec
mov
subb
add
ret
ret
push
or
fcmovnb
ljmp
mov
lahf
bound
in
push
mov
mov
call
lahf
pop
arpl
push
xchg
addr16
mov
fwait
add
icebp
js
popa
jo
adc
sbb
je
xchg
mov
cmp
inc
and
xor
std
adc
push
fcomps
mov
sbb
add
jns
jnp
add
mov
xorb
jecxz
ret
pop
mov
js
notb
mov
sbb
lds
and
mov
mov
pusha
jne
push
daa
pop
sbb
mov
push
push
outsl
push
push
lret
adc
xor
shll
lods
adc
inc
pop
movsb
push
popa
call
mov
ds
add
inc
hlt
cmpl
bound
adc
xchg
pushf
ljmp
mov
add
add
lret
add
mov
lahf
pop
xchg
xchg
out
adc
push
xor
adc
pop
xor
add
imul
insl
sbb
inc
pop
pop
repnz
mov
mov
xorl
and
sarb
sub
push
out
lods
push
push
jne
mov
aas
lods
mov
mov
jnp
push
in
cmc
test
cmp
add
add
adc
pusha
test
pop
cmp
adc
sbb
pop
mov
addr16
push
jmp
jmp
sbbb
pop
adc
test
pop
cmp
stos
sarb
or
mov
mov
push
pop
inc
lea
leave
adc
and
add
orb
jg
add
pop
mov
testb
xchg
add
les
add
sbb
loop
pop
sub
push
push
and
std
cmp
dec
mov
adc
jp
xor
lock
loopne
std
inc
daa
pop
xchg
add
add
in
lock
pushf
xchg
in
mov
xchg
in
jmp
pop
aad
mov
pop
push
popa
push
xorb
sub
jb
into
xor
gs
arpl
or
xchg
pop
cmc
scas
loopne
shlb
ljmp
mov
add
mov
inc
pop
sub
adc
mov
adc
dec
push
xchg
xor
inc
mov
mov
mov
mov
shl
mov
mov
ss
mov
mov
mov
mov
cmpsb
or
xlat
push
dec
inc
cmpb
add
sub
jmp
mov
add
and
out
pop
or
pop
cmp
and
dec
arpl
push
dec
add
ftst
loopne
das
and
std
fildll
adc
cmp
dec
push
add
pop
repnz
jecxz
xchg
mov
push
fs
cmp
or
and
hlt
bound
dec
xor
jo
xlat
decb
jne
int3
jge
and
aad
ds
cmp
push
pop
cmp
and
cmc
adc
mov
test
sub
addb
mov
mov
xor
adc
fxch
add
add
dec
orb
loope
cmc
xor
jle
std
or
fs
stos
shlb
push
cs
push
jnp
mov
leave
dec
pop
aam
mov
dec
ds
aad
lea
mov
mov
adc
jmp
xchg
movsl
adc
add
and
fisttpll
popa
and
push
dec
pop
stos
sahf
xchg
je
jns
adc
cmp
jmp
xlat
not
movsb
or
out
das
xchg
push
xchg
fs
loopne
jmp
inc
sbb
add
jmp
testb
insl
cmpb
mov
lahf
imul
adc
and
jl
inc
ja
add
js
adc
lea
mov
iret
or
pop
ljmp
movsb
mov
inc
add
and
in
mov
and
and
pop
in
incl
push
push
mov
mov
mov
nop
push
outsb
mov
jmp
neg
addr16
or
sub
push
and
cs
pop
jbe
cmp
pop
dec
add
xor
add
xlat
cmpl
inc
clc
jmp
push
popa
cmp
daa
sub
mov
push
mov
pushf
rcll
in
sbb
movsb
cmp
or
push
out
or
dec
add
xchg
loop
adc
shll
insl
add
test
lock
in
and
mov
xchg
dec
clc
inc
add
pop
sbb
in
pop
fcmove
inc
dec
sub
mov
and
imul
pop
adc
sub
xor
push
psrld
inc
cmpsl
jecxz
pop
test
cwtl
sarl
sub
push
es
pop
push
and
ret
stc
or
inc
or
or
das
cli
mov
push
nop
jb
cmc
cmpsb
jmp
jae
push
xor
adc
shll
pusha
rcrb
push
dec
xchg
pop
or
and
add
and
pop
or
mov
mov
mov
addr16
cmp
jmp
rolb
fdivrl
add
push
scas
shlb
jnp
fisttpl
cmpsl
ja
push
lods
loop
push
movsb
movsl
pop
ja
xor
xchg
add
xchg
fisttpll
mov
jbe
xchg
les
jle
push
stc
and
outsb
cmpsb
lcall
mov
adc
in
sub
push
jle
mov
ss
test
pop
pop
fdivrl
cltd
pop
mov
orb
jmp
jo
icebp
aaa
pop
mov
jmp
push
mov
push
push
fcoms
jmp
cmp
popa
jne
aas
imul
lods
jge
test
pop
test
int3
cmp
cmpsb
sti
sarb
inc
loope
jmp
fwait
sbb
das
jl
cmp
rorl
sarb
pushf
pop
push
push
jmp
sbb
cld
lcall
pop
add
push
stos
repnz
pop
arpl
sbb
adc
je
xor
push
xor
pop
mov
sub
add
mov
xchg
fstl
push
cmp
mov
bound
das
xchg
inc
dec
sub
inc
ljmp
jno
lods
pop
popf
inc
into
xlat
jbe
pop
ljmp
xchg
lahf
inc
sub
dec
cmc
lret
pop
xchg
mov
adc
mov
rorb
mov
je
add
inc
mov
mov
ljmp
out
sub
lahf
inc
dec
cmp
dec
mov
xchg
pop
push
add
jno
jge
push
lret
es
mov
cmp
inc
js
inc
stos
xor
lahf
ret
dec
push
popf
popa
jmp
dec
shr
xorb
cwtl
idivb
fisttps
mov
lahf
inc
lret
pop
popf
adc
adc
mov
shrl
cmp
lds
in
addr16
insl
dec
jnp
pop
mov
lcall
mov
shll
jnp
dec
push
cmp
shll
add
xor
dec
or
adc
ljmp
xor
or
mov
fmull
push
or
in
xchg
dec
das
adc
andl
jmp
subl
aas
negb
sti
cmc
xor
pop
xchg
fistpl
push
in
ljmp
pop
and
inc
and
dec
or
sbb
xchg
mov
pcmpgtd
push
out
cmp
mov
push
inc
pop
dec
shlb
mov
mov
and
jno
xor
inc
mov
insl
mov
fmuls
daa
jmp
bound
xlat
imul
les
mov
jle
xlat
or
or
das
subb
pop
mov
dec
ds
xchg
bound
ucomiss
push
cltd
fwait
jecxz
cmc
xchg
rorl
cld
cltd
xchg
int
sbbl
dec
cmp
jnp
fwait
add
scas
enter
add
xor
mov
jge
and
popa
pop
cmp
push
mov
jmp
sub
fsubs
popf
and
xor
cmpb
ret
jae
adc
scas
sub
mov
inc
add
inc
and
call
inc
push
xor
fs
pop
or
pop
out
jmp
test
cmp
add
test
lock
mov
xchg
call
out
jmp
inc
inc
sub
ja
or
jo
repnz
add
in
lock
mov
ret
addr16
sbb
out
xchg
out
shl
sub
sahf
mov
jno
stos
sub
push
pop
add
mov
adcb
mov
mov
cmp
adc
and
jge
shlb
leave
add
jb
outsl
xchg
shl
pop
push
out
inc
aaa
dec
bound
nop
adc
pusha
in
jo
pop
jmp
pop
dec
mov
int3
call
pop
mov
pop
test
test
xchg
adc
add
clc
adc
jl
xchg
adc
add
push
lret
out
push
cmp
or
add
xor
ja
addr16
pop
mov
push
sub
jno
call
cwtl
xchg
and
es
adc
push
faddp
sub
gs
jmp
popl
fisttpll
sub
jnp
push
jae
sarl
push
aaa
lds
orb
jmp
cmp
mov
pop
faddl
or
popa
sti
test
mov
pop
cmp
push
mov
testl
sti
jb
ret
cmpsb
mov
push
add
add
les
mov
pop
or
add
outsb
hlt
imul
loop
xchg
das
pop
in
adc
pop
push
jle
xchg
int3
cmp
lahf
sub
pop
stc
testl
inc
sbb
inc
jo
push
adc
jo
ja
xchg
and
push
pop
mov
or
jmp
std
cmovns
add
imul
arpl
je
es
inc
into
xor
pop
mov
stc
cmpsl
xchg
and
es
mov
sub
outsl
inc
cmp
or
add
xlat
mov
push
iret
mov
call
fdivrl
push
pusha
xor
stos
int
clc
lods
dec
sbbb
hlt
arpl
mov
mov
xor
loopne
sbb
pop
pop
inc
inc
or
pop
push
mov
jmp
jmp
jnp
pop
fldl
push
mov
in
cmpsb
out
ret
fwait
inc
push
repz
pop
jnp
xor
hlt
xchg
add
aam
jb
jae
fs
pop
mov
bnd
adc
call
mov
jnp
fs
movsl
inc
pop
and
je
push
test
jp
das
mov
sub
jmp
out
mov
push
test
daa
add
icebp
pop
clc
shrl
bound
push
or
repz
jle
push
push
jmp
jns
imul
cmpsl
add
xor
das
in
push
out
mov
cld
jmp
shl
lcall
int3
xchg
sbb
mov
loop
mul
dec
fimuls
cwtl
mov
test
adc
jle
andb
popa
add
das
testl
pop
inc
mov
sti
cmp
jl
add
aaa
clc
stc
add
test
sbb
pop
or
cld
xor
xchg
or
push
pop
lock
push
das
and
or
mov
sbb
and
push
mov
cmpsb
push
std
cli
push
mov
das
pop
add
dec
pop
cltd
sub
xchg
push
adc
ljmp
push
mov
lock
cld
test
sahf
data16
inc
movsb
fcoml
filds
mov
mov
gs
leave
cs
add
push
xlat
inc
out
std
xor
nop
ret
pushaw
jp
add
je
mov
ljmp
aam
or
lcall
or
dec
mov
xchg
enter
pusha
clc
push
int
mov
repnz
jo
fcomps
mov
aam
ret
in
inc
add
jg
xor
daa
sarl
dec
nop
xor
loop
test
xchg
or
add
and
ret
lret
rolb
add
jne
lds
jmp
xchg
ja
subl
arpl
addb
jmp
ja
rorb
stos
inc
inc
add
sub
mov
bound
in
dec
sbb
push
mov
push
mov
mov
repz
cmp
pop
loope
push
in
fmull
jmp
push
cmc
fsubrl
cmc
pop
xchg
dec
cltd
loope
sub
enter
mov
rorb
push
jle
outsb
inc
push
fst
mov
shl
sub
pop
ror
mov
hlt
out
repnz
push
inc
fstps
push
loope
mov
dec
jb
mov
lahf
js
and
or
addr16
push
lea
jge
or
shrb
jbe
jo
mov
jb
cmp
sahf
loopne
es
adc
stos
or
dec
ljmp
sbb
xor
in
movl
jmp
ret
in
sub
into
jb
pop
adc
add
xor
inc
repnz
mov
aam
fists
fcoms
or
jecxz
stos
inc
jo
pop
dec
cld
mov
cwtl
cmp
mull
pusha
jne
int
adc
sbb
hlt
add
cli
push
mov
or
add
jmp
pop
rcrl
mov
inc
cli
mov
test
mov
cmp
int3
xchg
xchg
sbb
test
cmc
jmp
push
pop
pop
adc
fwait
jb
inc
and
and
jne
push
sarl
inc
jmp
insb
aad
pop
popf
adc
cmp
aam
jo
mov
addr16
push
pop
data16
sub
imul
push
or
mov
dec
repnz
imul
sub
sar
push
mov
push
leave
loopne
loopne
sub
jo
pop
nop
xor
pusha
push
jmp
jbe
add
sti
jle
sti
leave
cmp
mov
test
test
dec
push
testb
jno
inc
loop
xor
mov
sti
loop
loope
push
sbb
pop
push
pop
add
or
pusha
push
inc
mov
rcrb
dec
in
or
inc
bound
in
test
test
lods
sub
dec
sbb
scas
push
and
jmp
lahf
inc
jp
push
pop
jmp
mov
dec
sub
sbb
or
les
push
xor
shl
push
adc
int
inc
or
arpl
daa
push
sub
inc
stos
loope
add
mov
xchg
add
and
les
sbb
and
xor
sarl
cli
mov
out
loop
pop
mov
repnz
push
mov
insb
jmp
sbb
sbb
test
add
jle
nop
rclb
sarl
jmp
pop
fstps
lods
pop
inc
ds
cwtl
mov
and
sub
popl
push
cmp
aad
add
inc
add
xor
push
pop
sbb
lds
test
rolb
add
cmc
inc
sub
or
loop
cwtl
bound
dec
in
inc
xor
dec
jbe
test
dec
sti
dec
and
or
add
jg
and
scas
sub
and
pop
or
add
or
adc
add
pop
mov
shll
out
mov
out
rcll
in
das
cmp
out
sub
xchg
or
sub
das
mov
add
jp
adc
xchg
sub
sbb
insl
aaa
mov
pop
xchg
dec
add
lds
insl
cwtl
pop
das
xchg
stc
and
lea
inc
idivl
sub
sbb
loopne
addb
mov
call
xchg
jno
in
popf
movsb
add
ljmp
mov
inc
add
jbe
les
sub
add
addr16
lahf
rcll
sub
negb
jno
insb
pop
xchg
sbb
nop
xor
add
rep
adc
add
pop
imul
sbb
xchg
add
icebp
mov
pop
bound
push
or
add
mov
cwtl
loopne
xor
push
addr16
jp
mov
xchg
fdivr
add
inc
repnz
and
test
push
push
outsb
js
stc
orl
cmpsb
sbb
push
jns
rol
cmc
cmp
iret
repnz
pop
rcll
lds
aam
mov
or
test
sub
ds
and
aaa
notb
lods
xchg
pop
mov
gs
or
xrelease
push
xchg
pop
cmc
push
popf
inc
int
xor
mov
dec
lret
lcall
and
sbb
sub
jnp
std
and
or
in
ds
fiadds
push
pop
mov
sub
add
pop
sub
repz
fimull
pop
jge
adc
call
push
lock
mov
jmp
dec
add
mov
jmp
daa
shl
xor
and
cmpb
adc
inc
daa
repnz
jo
adc
shr
adc
loope
pop
inc
inc
sahf
outsl
or
scas
mov
aam
in
daa
shrl
push
popf
jmp
leave
fmull
push
push
imul
sbb
mov
dec
sub
lds
pop
push
addr16
faddl
mov
daa
inc
das
mov
xor
pop
sbb
cmp
adc
mov
inc
or
or
sub
jb
jg
pop
jmp
mov
das
loopne
pop
adcb
and
roll
ret
xchg
rorl
inc
pop
push
rcl
dec
ret
jns
cwtl
mov
push
xlat
jmp
lcall
push
pop
push
pop
neg
mov
imul
pop
cld
subl
scas
add
pusha
lahf
arpl
addr16
or
mov
ret
test
push
push
scas
cwtl
scas
cs
dec
daa
mov
push
xchg
sub
inc
lret
cmp
mov
xor
lret
cltd
enter
push
and
ror
adc
scas
pop
add
xchg
push
pop
es
or
pop
mov
repnz
jp
mov
sub
imul
inc
int3
xchg
pop
sub
xchg
nop
xchg
dec
xchg
adc
repnz
sbb
adc
fiadds
mov
cwtl
outsb
hlt
jo
xchg
hlt
cld
jo
push
push
push
cwtl
inc
inc
out
push
in
out
push
adc
mov
call
push
jne
neg
sub
es
push
inc
xchg
scas
add
sbb
mov
sti
or
sbb
fistps
sbb
push
or
rcr
repnz
iret
popf
ret
adc
jbe
pop
and
pop
mov
rclb
cmp
dec
xchg
imul
inc
jmp
ret
pusha
dec
sti
add
test
adc
int
lds
sub
dec
cmp
sub
cmc
dec
cld
not
pop
push
test
lock
cmp
icebp
fs
jnp
nop
ljmp
in
jl
xor
add
test
fs
pop
inc
faddl
pusha
sar
dec
jb
add
pop
add
push
fsts
pop
mov
sbb
cmp
inc
int3
das
ret
add
dec
repnz
xchg
jnp
xchg
adc
sub
fs
dec
lahf
push
mov
out
sbb
jmp
push
mov
xchg
or
or
cmpsb
mov
dec
pop
mov
dec
sbb
xor
jge
sbb
enter
fmulp
movsl
mov
pop
dec
inc
hlt
iret
fcomps
jno
mov
push
icebp
mov
cmp
outsl
lret
jmp
je
adc
pusha
adc
cmc
pop
lahf
loopne
push
push
xchg
movsb
push
leave
sub
push
add
mov
xor
push
decb
idiv
ljmp
leave
pop
or
sub
icebp
ss
leave
pop
or
inc
jmp
mov
xchg
jae
gs
mov
xchg
out
and
mov
roll
call
cmp
jo
mov
addb
and
std
mov
or
cmp
jnp
mov
movsl
add
jmp
iret
out
cld
jb
sub
aad
pop
loopne
out
lods
pop
jle
je
push
push
inc
sub
cmc
sarb
mov
mov
fld
and
data16
fs
sbb
and
or
xchg
push
andb
push
decb
pop
sub
push
push
mov
mov
fistps
sbb
xlat
out
sti
sbb
es
or
iret
or
pop
jmp
mov
addl
shrl
inc
pop
mov
pop
cmp
lds
ljmp
dec
pop
inc
add
mov
subb
movsl
sbb
popa
cmp
jg
call
cmpsl
fstps
add
push
aaa
add
inc
or
cmp
pop
outsb
in
push
adc
js
shlb
adc
imul
pop
in
into
pop
or
leave
daa
mov
push
jns
or
popa
pop
int
pop
push
and
push
xor
ds
push
dec
sbb
and
test
ret
jbe
pop
shr
adc
jg
ss
xor
or
pop
loope
hlt
in
shll
int
sub
in
bound
xchg
outsl
cmp
imul
dec
les
and
cmpsb
sbb
inc
sub
stos
push
lret
push
fdivrs
push
pop
and
xor
mov
lds
mov
push
repz
add
xchg
rorl
lret
mov
test
pop
cltd
sub
mov
cld
dec
sbb
ds
pop
push
mov
movsb
and
shrl
test
enter
orb
rclb
and
ljmp
lock
ret
push
xor
or
popa
dec
cmp
adc
dec
jge
js
ret
push
roll
mov
cld
mulb
or
sti
sub
jp
in
mov
lods
lea
sarl
or
sub
and
fwait
pop
pop
imul
xchg
icebp
add
movswl
jle
cmp
or
call
or
push
mov
hlt
sub
inc
mov
sbb
or
inc
push
cmp
sub
imul
jo
out
je
and
insb
mov
push
es
scas
xchg
icebp
mov
xchg
mov
loope
sbb
xor
and
jp
xor
cli
lea
xorl
fldenv
std
sahf
add
jp
mov
out
or
jmp
add
inc
dec
repnz
push
mov
xor
pop
clc
ficomps
das
push
sti
divl
sbb
adc
jno
cs
rcrb
xchg
mov
cmpb
jmp
test
adc
ljmp
pop
sbb
jl
loop
leave
sbbb
pop
or
or
pop
rolb
dec
add
aad
mov
cmp
mov
das
inc
mov
jnp
cmpsl
push
adc
jnp
fstps
test
inc
push
add
mov
sbb
mov
pop
inc
test
sbb
cmp
push
pop
adc
fdivr
pushf
cmp
mov
loope
popa
xlat
mov
ds
jmp
daa
mov
outsb
ret
or
cltd
ds
icebp
mov
inc
pop
cwtl
mov
ja
cmp
dec
xchg
fsts
add
cltd
inc
js
fcomp
sbb
leave
add
imul
push
push
addr16
mov
and
sbb
pop
xchg
das
add
add
push
adc
movsl
adc
das
pop
push
cmc
out
jmp
push
mull
push
es
push
mov
mov
psrlq
mov
jge
pop
adc
jae
call
js
push
and
xchg
mov
cli
mov
xchg
add
lret
xor
jmp
push
jo
and
mov
aad
iret
or
add
push
add
pop
test
mov
mov
arpl
fprem1
or
int
leave
pop
add
mov
xchg
pop
jmp
xchg
jmp
fldcw
pushf
push
adc
jl
jb
or
xor
int3
push
and
ret
scas
popa
pusha
add
inc
inc
add
repz
lahf
adc
scas
sub
add
inc
pop
pop
addb
fstpl
ss
mov
adc
add
js
inc
ljmp
repnz
pop
jmp
fdivrs
dec
faddl
dec
xor
mov
mov
gs
push
push
mov
add
das
pop
enter
les
in
push
addr16
adc
subb
mov
and
xchg
cmp
cmc
and
loope
or
addr16
rorl
sub
pop
dec
dec
nop
icebp
mov
subb
lcall
push
sub
repnz
pop
in
jae
mov
inc
dec
push
mov
sub
movl
pop
push
pop
dec
rorb
push
xor
in
loop
xchg
pop
pop
add
inc
or
add
shrb
dec
lret
call
fistps
enter
sahf
fildll
xchg
lcall
mov
or
rorb
pop
push
dec
lock
pop
mull
mov
stos
inc
rcrl
repnz
sti
push
popf
js
loop
add
and
std
bound
add
pop
mov
push
cli
dec
in
lock
stos
scas
in
mov
xchg
sbbl
jbe
adc
mov
or
fimuls
cmc
mov
mov
ret
xchg
test
in
mov
push
loopne
mov
pop
pop
mov
fstl
dec
push
pusha
nop
pop
scas
and
pop
jg
and
punpcklbw
rorl
fldl
jmp
andb
xor
pop
fs
loop
dec
adc
in
or
ds
push
ret
adc
aad
inc
in
mov
sub
dec
fsubrl
pop
leave
insb
test
ret
pop
hlt
add
jle
add
mov
bnd
les
and
or
das
in
enter
loope
jecxz
pop
push
inc
dec
ja
cs
movsb
lret
add
mulb
adc
add
shll
ljmp
pop
mov
insl
jns
faddp
mov
call
ret
pop
mov
arpl
push
cmp
je
cmp
mov
rcr
inc
sbb
push
push
cmp
sub
nop
dec
adc
sahf
fs
add
push
push
mov
adc
sub
cmpsl
dec
jmp
orl
dec
sarb
js
pusha
sbb
jne
mov
ds
and
push
je
das
stc
or
mov
add
pop
xchg
inc
mov
comiss
stc
and
into
mov
gs
mov
test
pop
bound
xchg
sti
and
lds
xchg
icebp
sub
ljmpw
cmp
pop
mov
aad
push
pop
stos
fisubrs
jp
xchg
pop
out
sub
push
das
mov
dec
sub
adc
jmp
pop
push
push
mov
dec
test
pop
push
and
jnp
pushf
xor
xchg
jmp
pop
jne
jbe
jle
or
and
sti
add
into
push
ja
jecxz
add
jmp
aaa
sbb
mov
ja
scas
jo
jbe
adc
dec
mulb
call
cmp
sar
jecxz
push
ljmp
sub
hlt
mov
mov
shl
xor
dec
cmp
mov
jl
leave
push
fstl
push
scas
xor
cwtl
adc
fsubrs
xor
or
jge
out
loopne
insb
add
jmp
into
pop
sub
xchg
jmp
cmp
sub
pop
pop
dec
shll
push
in
mov
push
pop
jp
mov
pop
cmp
fcmovnb
mov
das
xchg
cmp
cmp
std
and
hlt
jmp
push
notl
inc
adc
fsubr
in
mov
mov
inc
pop
jg
insl
rorl
inc
cmp
daa
sbb
mov
and
pusha
or
je
pop
out
addb
mov
nop
jle
dec
add
adc
sbb
nop
dec
pop
jg
cs
push
xlat
addb
rcrb
ret
mov
add
or
push
xchg
jo
je
push
mov
cld
jl
add
movl
mov
fsubrl
pop
loope
push
jae
cmp
or
or
ja
or
mov
in
repnz
pushf
pop
jmp
sbb
cmp
cmovle
sub
testb
and
jo
ficoms
fisubl
pop
sahf
dec
jmp
xchg
cwtl
lods
and
sahf
cld
pop
mov
loope
xlat
sbb
pop
and
mov
dec
push
sbbb
cmp
out
sbb
pop
daa
xlat
int3
sbb
push
in
ret
xchg
lret
push
jp
cwtl
add
movsl
call
lahf
mov
stc
and
jmp
jnp
and
adc
getsec
and
sbb
xor
rcll
cmp
xchg
mov
inc
cmpsb
mov
cli
dec
or
repnz
std
cs
andl
pop
gs
mov
jg
mov
mov
pop
test
popf
lds
mov
push
cmp
mov
test
loope
call
daa
inc
fcos
ss
jbe
mov
xchg
testb
std
xchg
cmp
or
outsl
jge
icebp
push
jp
roll
xor
repz
out
fnstcw
push
cmp
push
dec
jg
inc
inc
add
rcrb
xchg
mov
pop
fs
sti
dec
or
pop
daa
sbb
adcl
add
shr
jmp
sub
jbe
xorl
sub
stos
dec
test
cmp
xchg
out
mov
add
shlb
aam
push
shrb
outsl
add
hlt
aas
pop
loope
scas
and
adc
xor
shll
popf
jp
fistl
and
dec
xor
lret
sub
or
pusha
inc
fcomps
insb
or
pop
inc
cmp
loop
int3
add
mov
push
cmpsb
lds
or
out
dec
jg
or
enter
dec
push
std
sbbl
loope
adc
sti
push
aam
mov
pop
mov
popf
jnp
or
mov
xor
push
aad
xchg
aaa
inc
and
inc
pop
jmp
rorb
xchg
rorl
dec
or
insl
insb
lea
pop
or
jne
icebp
lods
ja
hlt
mov
or
mov
ficoml
ss
movsl
mov
cmpsl
shrb
icebp
gs
iret
shlb
insl
dec
and
pop
push
xchg
jg
stc
nop
adc
or
sbb
into
add
jb
push
fnsave
xor
fstp
lea
fcomip
andb
outsl
mov
xchg
push
mov
shl
adc
sub
dec
shr
cmp
faddl
ja
mov
jg
pop
cmp
adc
aas
sub
adc
inc
hlt
jmp
lods
xor
in
inc
push
cmp
sub
sub
sub
xchg
cmc
mov
add
je
sub
xchg
or
mulps
or
incb
add
sbb
push
dec
mov
mov
aad
jmp
psrlq
addr16
jbe
mov
push
sarb
inc
mov
ss
mov
ret
mov
lods
shlb
ficoml
bound
mov
mov
jmp
fisttpll
arpl
loop
pop
pop
add
mov
aam
pop
movups
push
insl
std
cmp
dec
dec
pop
mov
xor
cmc
and
stos
clc
fidivrs
xchg
aad
pop
or
dec
push
mov
xchg
ja
and
pusha
lds
add
mov
neg
fadds
jno
dec
inc
out
xchg
stc
mov
int3
sarb
loopne
lea
shll
sbb
lods
mov
fwait
xor
cs
jle
nop
xor
dec
insb
jns
mov
and
rcrl
gs
jae
push
add
mov
insb
pushf
sub
cmp
sarl
test
jecxz
mov
inc
mov
push
outsb
mov
ja
mov
inc
push
add
push
or
call
lock
enter
arpl
jmp
push
xor
mov
inc
push
xor
mov
adc
clc
jmp
dec
sub
das
adc
testb
push
mov
push
out
and
shll
out
cmp
sti
xchg
adc
add
call
outsl
mov
ffree
negb
cmp
xlat
add
icebp
sarb
adc
mov
into
push
inc
int
cld
add
pop
lret
movsl
int
aaa
lret
adc
and
push
sbb
clc
test
push
mov
cld
ret
ds
lcall
inc
push
orb
outsl
push
mov
sub
lcall
aad
ret
ret
jle
lret
std
ljmp
inc
xchg
dec
mov
or
jae
jo
subl
xlat
les
pop
xchg
mov
push
mov
enter
daa
lods
inc
adc
push
sub
push
popf
push
inc
lods
mov
push
add
jg
loop
aam
test
movq
mov
xlat
inc
aad
insb
idivb
push
cltd
fdivrs
jns
dec
or
mov
es
out
push
or
inc
sub
dec
mov
push
jns
inc
std
sub
ljmp
mov
stos
jl
test
repnz
mov
add
push
pop
jmp
insl
aam
and
cmp
or
mov
in
push
push
push
mov
pop
out
leave
sbb
aam
lock
and
inc
loopne
add
testl
sbb
imul
int3
inc
sub
add
push
rcll
jmp
stos
or
dec
push
daa
mov
js
das
fcomps
inc
mov
aas
push
adc
dec
jo
aad
cmp
pop
arpl
scas
xor
mov
sbb
sub
xchg
add
push
ret
push
das
or
push
and
sbb
sbb
das
sub
or
or
adc
inc
out
adc
add
data16
jb
xchg
jne
mov
mov
jle
imul
loopne
insl
dec
mov
adc
mov
daa
pusha
popf
mov
loopne
add
push
mov
not
sub
cmp
pusha
inc
int
sbb
sub
mov
push
jmp
hlt
jg
inc
mov
sub
pop
mov
aam
lock
add
das
iret
aas
push
mov
fstl
fld
jecxz
xchg
pop
lods
rcrl
pusha
sub
pusha
mov
mov
xlat
leave
mov
xchg
or
movsb
cmp
jg
mov
cld
jb
das
enter
mov
push
mov
push
dec
stc
mov
jne
mov
and
push
sub
pop
sbb
negb
pop
push
clc
pop
pop
cmpsb
mov
jp
adc
cmpl
pop
test
fwait
ljmp
jmp
xorl
jmp
mov
jl
in
jmp
xchg
cli
dec
hlt
adc
aaa
imul
pop
mov
adc
sti
stos
inc
lahf
pushf
in
std
jmp
inc
pop
add
xor
stc
jae
sbb
add
push
cli
inc
out
fwait
push
pop
mov
dec
push
xor
sbb
cld
mov
in
xchg
sbb
cmp
xor
rcll
cmpsl
daa
sbb
xorb
push
outsl
rolb
xchg
jbe
or
cmp
add
std
add
pop
jae
add
popf
xor
xor
lahf
mulb
inc
xlat
pusha
pop
push
clc
sub
add
movsl
push
fdivrp
shll
cmp
push
pop
cmc
xor
and
push
xchg
daa
ss
mov
enter
mov
dec
jmp
xchg
das
push
in
ds
or
in
lds
add
lods
popa
lea
lret
add
xor
cmp
sahf
aas
loop
neg
rcll
jp
sub
cmp
xor
or
mov
adc
pop
lock
xchg
sub
sub
inc
xchg
sbb
mov
mov
pop
jp
add
out
fsubl
fmull
loop
adc
in
add
adc
cmp
cmp
jecxz
pop
sub
fstpt
cmpsb
pusha
push
inc
pop
adc
inc
and
ficompl
out
inc
sub
dec
icebp
sub
rcrl
leave
shl
xor
fcmovne
sub
cmp
cmovnp
nop
imull
lret
popa
jns
add
jmp
mov
xchg
pop
sbb
push
sbb
inc
fildl
sbb
pop
xor
pop
jmp
push
lret
push
add
add
push
push
aas
push
dec
push
adc
fimuls
popa
add
and
pop
aam
pushl
aad
cmp
ret
lcall
mov
vucomisd
pop
or
pop
gs
and
ret
or
pop
rdtsc
clc
movsl
mov
enter
inc
test
xchg
dec
mov
jns
out
notl
push
pop
outsb
out
push
test
in
sbb
jnp
mov
decb
xchg
call
xchg
dec
shlb
neg
or
jl
pop
jp
pop
pop
les
add
sbb
das
int3
fdivl
jae
lret
add
pop
insl
cmp
divl
mov
jmp
shl
jb
in
out
test
add
ret
pusha
lods
xorb
adc
mov
mov
cmpl
adc
imul
mov
mov
mov
inc
push
pop
xor
xchg
mov
addb
fimuls
sub
inc
ja
push
sbb
inc
pop
cld
xchg
aam
jecxz
jmp
popa
sub
mov
pop
nop
xchg
dec
fadds
xor
sub
imul
fcoms
and
stos
add
mov
mov
pop
adcl
bound
mov
fidivrs
pop
or
adc
das
ficoms
xchg
mov
shll
std
xor
push
out
push
sub
lock
pop
jg
or
aam
stos
loop
lock
jmp
cld
loope
xor
sub
pop
data16
sbb
mov
mov
add
cmp
jle
sbb
and
add
cmpsb
add
and
cmpsl
mov
or
pop
mov
add
rclb
dec
pop
and
popa
add
sub
xor
inc
xchg
or
mov
and
and
xor
xchg
or
jg
lahf
dec
dec
repnz
push
mov
push
lcall
cmp
clc
gs
fldt
out
iret
ja
pop
lock
aam
dec
cmp
sub
sub
add
or
std
mov
pop
mov
cli
ja
lcall
cmp
push
add
and
and
mov
add
fimuls
add
xor
mov
insb
lea
std
mov
adc
dec
or
jns
fcomip
adc
dec
push
mov
les
into
jns
mov
lods
lret
mov
adc
fdivr
cltd
cmp
shrl
data16
push
push
cwtl
push
or
ret
loop
adc
ss
scas
sub
scas
cmp
pop
scas
pop
dec
sub
pusha
push
sarb
callw
mov
sub
loop
mov
jmp
das
mov
lret
shr
pushf
adc
stos
sub
push
cli
movl
in
test
or
add
or
pop
dec
popa
dec
lock
pop
sbb
fstl
ds
repz
push
jo
mov
test
lgs
movsb
adc
pop
imul
push
or
xchg
cmp
outsb
enter
jmp
or
cmp
pop
push
add
rorl
jmp
and
inc
movsl
jne
loopne
fstps
shrl
gs
cmpsl
fistps
sub
mov
push
dec
or
dec
mov
inc
jnp
pushf
lods
xor
ror
xchg
or
cmpsb
test
push
push
or
add
aas
mov
xor
cmpb
inc
inc
add
fiadds
out
or
pop
jg
jmp
std
out
int
aas
lea
pop
daa
add
xchg
mov
fdiv
pusha
in
xor
int3
lret
in
push
adc
push
pusha
stos
mov
pop
sub
pop
add
inc
cs
fmuls
dec
scas
jg
inc
testb
fmuls
idivb
ret
pop
sub
mov
popw
and
popf
loop
add
cmp
das
mov
dec
mov
add
int3
inc
imul
or
shll
jne
sti
nop
repz
jmp
pop
jmp
sub
negl
push
popf
test
add
xchg
mov
xchg
mov
add
sarl
call
rcll
adc
mov
dec
popf
jne
and
add
cwtl
xchg
dec
movsb
andb
dec
cli
divb
sub
xor
xor
mov
dec
and
fidivrl
pop
push
ljmp
pop
jle
and
lcall
sub
orl
repz
es
and
jmp
out
add
pusha
sti
inc
stos
mov
outsl
cli
adc
pop
cwtl
add
sub
xor
push
mov
xchg
jg
cmp
push
and
mov
and
not
add
jl
subb
test
popa
mov
stc
mov
addb
lahf
xor
jmp
mov
shl
sub
aam
or
inc
jmp
cmp
aam
lret
call
mov
shl
and
pop
mov
ficompl
shlb
mov
xchg
sbb
jb
or
popa
test
inc
add
popf
dec
mov
sbb
mov
lea
aaa
xor
inc
add
sbb
imul
decl
or
cli
faddp
shr
cmp
dec
or
stc
pop
enter
xchg
mov
addl
test
jns
jo
add
mov
and
mov
mov
lret
fxch
add
mull
pusha
sub
arpl
add
jmp
xor
xchg
dec
mov
icebp
mov
lock
xchg
push
repnz
and
int3
sub
xchg
pop
out
cmp
and
inc
pop
dec
arpl
pop
add
imul
cmp
sub
jbe
setle
in
cmp
clc
dec
xchg
and
mov
jne
hlt
or
cmc
push
fs
push
dec
push
jecxz
adc
jne
icebp
push
lock
mov
nop
cmc
sub
aam
das
or
pushl
cmp
ret
mov
inc
pusha
out
leave
xor
cwtl
je
push
sub
fistps
and
mov
sbb
cli
lods
adc
aam
dec
push
mov
aaa
fisubrl
mov
inc
or
test
mov
lret
ret
and
cmp
pop
adc
dec
mov
mov
push
pop
adcb
ds
nop
repz
xchg
out
loopne
push
mov
dec
xor
shl
add
rclb
iret
ret
adc
mov
aam
jbe
stos
pusha
mov
es
js
xlat
push
in
mov
jle
and
sub
fists
push
sbb
adc
pop
int
in
subb
cmpsb
les
add
or
stos
idivl
jae
jnp
jmp
and
push
inc
aas
mov
cmp
jl
arpl
and
pop
ret
cld
mov
add
push
push
bound
pop
and
leave
jle
jae
jae
adc
clc
jecxz
and
fcmovu
movsl
pop
movsb
mov
push
add
sub
pop
lcall
jmp
pop
pop
jns
cli
dec
or
nop
push
and
cmp
inc
jno
or
push
ds
mov
jmp
pushf
mov
cmp
loop
push
jmp
pop
int3
fists
inc
popa
das
add
add
jecxz
pop
mov
lahf
call
hlt
adc
sbb
and
out
out
ficompl
cld
cwtl
shrl
adc
dec
cmp
sub
add
rcrl
push
pop
cmc
dec
cmp
xchg
repnz
repnz
pop
repz
cmc
imul
addr16
mov
testb
push
not
jge
lods
pop
shll
fstpl
cmp
repz
mov
movsl
pop
xchg
jg
cmp
imul
push
cwtl
pop
or
jmp
dec
jecxz
jns
inc
jmp
stc
adc
stc
mov
push
je
push
adc
adc
jmp
movsl
jne
fidivrs
adc
xchg
mov
inc
mov
stc
sbb
inc
push
push
add
inc
pop
sub
sbb
pop
outsb
or
cmp
jns
in
add
call
mov
cmpsb
jno
inc
or
jl
jmp
mov
inc
dec
icebp
mov
jg
lock
shlb
add
ret
xchg
or
hlt
xor
pop
mov
into
jno
and
inc
add
test
add
cli
outsl
sub
inc
sub
jmp
call
mov
sbb
in
push
push
pop
xor
jp
insb
cli
xor
add
movsb
or
xorb
andb
xor
mov
or
cmpsb
bound
jge
pop
push
push
movsl
repz
shll
add
data16
mov
mov
cmp
call
add
pop
std
cmp
syscall
sub
jecxz
je
scas
std
mov
pop
test
rolb
fld
sub
xor
movsb
outsb
shll
xor
popf
scas
inc
idivl
ret
ficomps
repnz
jnp
sub
sbb
rdtsc
sbb
xor
sbb
pop
jns
insl
xor
sbb
mov
add
cli
push
dec
iret
mov
roll
xor
adc
push
mov
add
das
jbe
or
sbb
mov
pop
and
lret
or
push
xchg
sbbl
inc
adc
pop
push
or
mov
nop
pop
push
bound
lret
inc
fsubr
jnp
xor
arpl
rcrb
jnp
inc
pop
pop
xchg
js
les
pop
pop
jecxz
pop
or
add
xchg
cld
mov
pop
mov
lds
mov
das
or
adc
scas
push
add
icebp
sub
sti
cmp
or
sbb
push
hlt
outsl
out
adc
call
pop
or
cmp
movsl
add
push
pop
push
pop
aaa
jmp
dec
cmpl
cmp
or
out
push
adc
add
in
out
jmp
dec
cwtl
or
outsb
ret
inc
leave
push
jns
jg
inc
xchg
add
cmp
repz
mov
fisubs
mov
repnz
mov
pop
mov
push
pop
sahf
mov
jns
dec
cmp
jno
cmc
xchg
pop
sbbl
sbb
enter
jge
xor
es
subl
sarb
and
pop
pop
ds
mov
jmp
cmp
sub
mov
mov
pop
and
outsb
cld
cmp
cmp
push
jmp
insl
imul
cmp
push
in
push
add
ljmp
addr16
dec
inc
nop
pop
imul
sarb
add
test
jno
leave
add
fistps
cmp
or
fadds
xlat
and
leave
ret
mov
jmp
pcmpeqw
popa
sub
lock
ret
xor
or
inc
pop
cs
cmpsb
add
cmp
dec
xor
and
push
cmp
sbb
pop
sub
pop
add
pusha
cwtl
adc
sub
jmp
dec
add
push
lods
push
xchg
jmp
cmpsb
xchg
xchg
sti
sub
xor
pop
cld
lock
hlt
sub
mov
ret
popa
jns
in
pop
lock
loopne
or
jmp
loopne
lahf
xchg
cmpb
xor
jmp
inc
loopne
lcallw
and
movsb
mov
pop
or
or
pop
clc
cli
dec
les
sub
push
pop
push
data16
ficomps
addb
add
mov
jmp
xchg
pop
imul
ds
push
xchg
pop
mov
fcomp
insb
or
ror
mov
sub
mov
data16
push
add
call
fcomp
ficomps
xlat
aas
ret
push
add
sbb
xor
and
or
push
add
pop
cwtl
sub
rcrb
xor
add
iret
push
mov
mov
lret
or
inc
inc
iret
js
lea
jae
test
fsubs
jo
dec
int3
out
shl
mov
and
lods
cmc
rclb
jae
add
push
jmp
test
sti
jno
mov
push
bound
bound
push
adc
test
push
arpl
hlt
jae
mov
imul
push
cmc
cli
and
add
mov
int3
or
call
jae
shll
dec
mov
cmc
outsb
push
in
dec
call
cs
scas
movsb
mov
sbbb
das
std
push
mov
and
fistps
scas
sub
push
cwtl
test
and
push
add
jne
push
and
inc
ret
mov
mov
mov
push
movsl
mov
jmp
jmp
xchg
test
pop
clc
inc
leave
mov
mov
cmovne
pop
jbe
add
aaa
ja
or
rol
lods
stos
clts
fcoml
out
xor
je
andl
dec
pop
lea
push
cs
sub
vmovapd
push
xor
adc
xchg
push
and
or
adc
dec
push
cmp
insb
and
lods
sub
stc
dec
loop
xchg
popa
pop
or
jmp
fld
sbb
and
test
std
xlat
ja
repnz
mov
pop
xchg
xchg
shrb
shrl
adc
pop
jmp
test
pop
and
or
addr16
push
xchg
mov
pushf
dec
jge
loope
mov
and
lock
call
dec
mull
sub
out
pop
mov
in
mov
or
test
sbb
movsb
enter
icebp
adc
pop
mov
sti
mov
mov
mov
push
xchg
out
out
and
sub
shrl
sub
call
icebp
add
fs
xchg
ljmp
or
or
pop
gs
dec
sub
rorb
cwtl
jne
subb
inc
xchg
test
adc
add
mov
jecxz
pop
inc
jb
pusha
mov
sub
or
and
cmp
std
jmp
iret
mov
push
out
jecxz
mov
in
mov
mov
sarb
mov
cmp
push
aad
push
sub
inc
cld
ss
and
add
adc
jge
and
cmp
adc
jmp
mov
loope
mov
push
out
add
inc
mov
sub
leave
push
jnp
loope
push
mov
repnz
clc
mov
lds
outsl
outsb
inc
fs
jge
add
in
push
or
jbe
iret
sbb
ja
fwait
sub
or
fs
out
jmp
inc
push
push
outsl
pop
repz
and
push
push
cmp
ljmp
dec
add
fbld
into
cwtl
mov
pop
adc
out
dec
dec
in
addr16
or
subl
mov
cmpps
dec
sbb
inc
push
dec
not
add
outsb
imul
pop
sbb
push
sub
rorl
sbb
enter
movsb
pop
push
inc
pop
add
into
add
add
insb
inc
add
cmc
dec
repnz
push
push
jg
lods
or
jbe
xor
fidivrl
adc
jmp
dec
mov
cmp
jp
shld
cli
dec
into
pop
shl
pop
cmp
aad
adc
xor
jmp
add
insl
jmp
jns
pop
cmpb
jge
add
test
ljmp
xchg
pop
mov
add
notl
out
mov
mov
cmpsb
pop
or
rcr
jns
movsl
andl
fcomp
sub
cmp
fildl
jg
nop
orl
cmp
cmp
lods
xlat
push
jg
jp
dec
lods
or
pop
fbstp
imul
test
xchg
jge
and
pop
xchg
xchg
lock
sub
test
ss
cld
push
incl
pusha
adc
daa
jmp
loopne
push
andb
push
add
cld
pop
xchg
inc
or
repz
out
cltd
mov
cmp
lods
and
cmp
out
adc
or
mov
jmp
lock
repz
mov
int3
cmpsb
jmp
xchg
fnstenv
mov
push
in
inc
cmp
lahf
push
mov
sti
insl
movsl
mov
mov
dec
pop
inc
lock
push
sbb
out
push
mov
iret
and
dec
daa
mov
add
push
push
or
enter
imul
cmp
fldl
cmp
pop
and
jo
pusha
pop
je
inc
neg
xchg
push
adcb
sub
or
pop
xor
jo
adc
adc
bound
loope
pop
cmp
sbb
push
fwait
testl
std
xchg
pop
pop
adc
and
addr16
sbb
test
incl
and
xor
cmp
pop
sub
and
mov
mov
leave
dec
testb
dec
jno
add
jae
cs
pop
mov
sbb
sub
iret
jmp
push
inc
aad
dec
mov
jnp
lea
jmp
dec
cs
jae
sbb
push
or
mov
pop
pop
and
cmp
xchg
jo
lret
inc
test
loop
pop
push
fisubs
sub
inc
adc
dec
mov
scas
testl
add
hlt
adc
sub
push
std
push
dec
xchg
push
lds
jo
out
jmp
rcrl
push
or
std
andb
fists
jns
xchg
andb
cmp
rorl
shlb
xor
pop
sti
cmpl
mov
mov
push
sti
adc
call
mov
insl
scas
add
push
push
jl
les
mov
xchg
sahf
leave
fwait
jnp
lret
dec
push
or
test
dec
inc
fldcw
sub
out
cmpsl
addr16
push
data16
outsl
pusha
mov
jo
xchg
jns
or
add
ljmp
xor
pop
repz
jne
adc
or
cwtl
js
inc
hlt
push
sbb
ljmp
sti
fldcw
jae
adc
pop
pop
loope
pop
js
and
or
dec
xor
mov
test
addb
ss
mov
sub
mov
adc
inc
lods
cmp
pop
mov
push
push
sbb
in
jecxz
js
jge
sbb
xor
push
mov
movsb
pop
pop
pop
pop
cmp
or
shrb
fcmovu
jbe
push
mov
cld
push
inc
ret
rorl
sbb
and
imul
push
xchg
adc
nop
imul
int
daa
nop
pop
adc
orb
xchg
sbb
mov
cmpsb
pop
sub
mov
dec
ja
adc
cmp
pop
pushf
imul
or
jb
and
add
fisttpl
lods
scas
xchg
cli
popl
out
inc
pop
push
cmp
or
outsl
das
mov
add
inc
cmp
pop
mov
push
inc
jmp
add
mov
cmp
add
mov
cmpsb
inc
pop
adc
sub
mov
fs
or
scas
bound
ret
dec
sbb
xor
and
in
js
and
not
push
iret
inc
xorb
xchg
xchg
mov
in
daa
jle
sbb
or
pop
jbe
aad
into
or
xchg
cmp
or
jae
mov
lods
pop
mov
dec
rol
adcl
xchg
hlt
mov
adc
mov
xor
in
and
or
movsl
cli
push
int3
fs
inc
pop
push
mov
dec
inc
int3
pusha
cmpsb
xlat
jno
imul
daa
fldl
das
push
mov
mov
pushl
xchg
das
pop
pop
jnp
pop
adc
das
sti
das
add
loopne
push
add
push
mov
in
jp
iret
test
xchg
xchg
dec
das
jns
fs
repz
dec
adc
dec
mov
stc
ja
pop
add
pop
push
lcall
jmp
mov
loop
add
call
adc
gs
sbb
xlat
sbb
xchg
cmpb
or
pop
lods
mov
notb
in
xchg
add
call
pop
xchg
arpl
cmpb
outsl
mov
sub
stos
push
in
scas
mov
jg
jbe
jmp
pushf
into
pop
leave
insl
jne
push
and
repnz
arpl
mov
xchg
hlt
pop
pop
add
jg
stos
inc
out
cld
lds
push
push
pop
test
andl
mov
push
enter
jbe
divl
inc
sub
and
pop
mov
ss
pop
add
dec
scas
inc
ljmp
dec
inc
std
int
aas
mov
mov
stc
push
sub
mov
in
ficomps
insl
adc
sbbb
sub
push
pop
push
stos
call
push
clc
mov
mov
test
pop
stc
cltd
repnz
testb
xor
push
lods
sbb
orb
loop
jno
add
jnp
fistps
iret
ss
jnp
dec
xor
adc
pop
cmp
mov
scas
enter
out
mov
sub
xchg
mov
in
mov
nop
sub
sti
orb
xchg
ud2
mov
sbb
das
mov
lret
sub
mov
push
pop
sub
ss
movsb
mov
sub
pop
push
adc
dec
inc
add
push
push
loopne,pt
xchg
mov
add
loopne
clc
cmp
xchg
leave
push
pop
pop
pop
mov
dec
out
inc
cmpsb
das
fisubrs
call
loope
ret
xchg
cmp
sar
pop
loope
out
adc
mov
mov
xor
jmp
mov
push
dec
shlb
jmp
push
pop
xchg
into
test
lret
mov
pop
inc
jb
and
xor
cli
std
mov
push
jnp
jmp
nop
insl
and
push
aas
outsb
dec
test
call
mov
outsl
mov
sti
sub
push
dec
div
cmpsl
test
inc
mov
add
mov
test
repz
or
shl
adc
not
xlat
add
stos
out
outsb
and
ja
mov
inc
adc
sbb
mov
jns
out
insb
cmp
add
mov
xchg
fs
cmpsb
dec
cmc
icebp
pusha
fidivl
sub
outsl
pop
jb
and
leave
xlat
push
adc
inc
ret
repnz
dec
push
stos
mov
jmp
or
rcrl
movsb
shrb
jg
sub
mov
pop
outsb
loop
mov
add
dec
in
lea
outsl
dec
push
fimull
fmuls
das
loopne
push
iret
push
sub
in
push
and
mov
pop
bound
rorl
and
push
xchg
dec
std
adc
cmp
scas
arpl
or
add
push
fwait
cwtl
imul
das
jb
and
lret
pop
ret
adc
adc
mov
sti
mov
movsb
andb
je
out
imul
faddl
push
push
stos
notb
dec
jecxz
jl
pop
xlat
mov
cmp
xor
push
in
push
dec
out
lea
push
or
lds
in
jmp
ret
xor
sbb
push
in
lcall
pop
push
cld
loop
dec
and
jecxz
inc
shld
jmp
mov
or
and
adc
or
mov
stos
pop
scas
or
push
addr16
xchg
add
scas
sbb
lcall
cld
movsl
sbbb
xor
and
out
xchg
and
dec
pop
mov
sub
and
leave
lock
idivl
repz
sahf
pop
sbb
es
or
ljmp
sar
sbb
test
out
popa
and
sahf
notb
cltd
sub
push
jmp
inc
add
daa
mov
xor
outsb
mov
sbb
add
pushl
xchg
ja
xchg
shll
xchg
push
or
insl
mov
mov
shr
xchg
and
pop
sbb
mov
fstl
mov
ret
push
push
lods
xor
out
jmp
rclb
xchg
add
dec
bound
hlt
stos
jo
hlt
jo
xchg
pop
sahf
test
cs
and
into
or
jle,pt
pusha
mov
fs
push
push
dec
pop
lds
je
xchg
in
lahf
js
or
adc
std
xor
or
push
jno
or
push
cli
add
sub
sub
mov
mov
lods
stc
jae
cwtl
mov
pop
jne
mov
imul
cwtl
shr
in
and
pop
jmp
jnp
push
push
pop
fisubs
lock
and
subb
inc
daa
inc
aad
cmp
lcall
jne
stos
sub
inc
push
add
negb
xchg
pop
inc
imul
cwtl
mov
pusha
dec
jmp
das
and
push
aas
xchg
orb
lods
or
decb
mov
or
cld
xchg
adc
cltd
pop
push
and
pop
adc
pop
add
mov
ret
jp
add
shl
stc
mov
sub
push
mov
aam
add
mov
shl
add
loopne
pop
and
or
rclb
pop
push
pushf
add
pop
jecxz
int
icebp
out
push
mov
dec
pusha
loopne
and
repnz
or
adc
push
ret
push
add
or
icebp
mov
popa
sbb
loope
mov
cmpsb
lods
and
ja
sub
or
js
rorl
popa
movsb
jne
jecxz,pt
push
push
mov
fcoml
cltd
lret
mov
in
add
and
lock
in
jmp
and
pop
out
adc
std
xlat
add
mov
mov
push
inc
cmpsb
repnz
xor
cmc
out
and
rolb
pop
push
mov
xor
and
and
out
mov
inc
push
pop
jo
imul
shr
out
int3
fimull
jno
adc
add
int
and
push
mov
pop
mov
inc
popf
inc
jmp
xor
ds
sbb
push
inc
sub
dec
jns
out
add
adc
mov
pop
or
add
shrl
out
mov
and
add
push
data16
adc
imul
cmpsb
or
mov
sub
xlat
jl
or
mov
pop
out
jmp
call
inc
and
ds
pop
cwtl
orb
cmpsl
jae
mov
imul
dec
ja
push
push
mov
adcb
mov
sti
dec
push
shll
jmp
dec
mov
inc
xchg
lods
or
cmp
xchg
inc
mov
lret
dec
mov
mov
add
into
mov
or
or
cmp
out
jb
rcll
ja
xor
lret
filds
push
imul
or
push
out
jmp
ret
je
adc
adc
push
cmp
call
cmp
lcall
push
mov
sub
inc
jl
lock
adc
adcl
inc
dec
hlt
cmp
jns
pop
pop
std
inc
cld
mov
lds
mov
sbb
add
in
push
xchg
out
mov
jbe
lock
mov
push
dec
push
out
mov
add
or
loopne
mov
cli
lds
sub
dec
out
cmp
pop
in
mov
icebp
loope,pt
xchg
ljmp
cmpsb
outsb
inc
dec
lock
xor
sti
jnp
jmp
pop
ja
mov
dec
and
sub
xchg
mov
out
sub
or
lock
add
mov
xor
ret
ficompl
dec
cmovne
iret
pop
sub
mov
inc
add
jle
divb
mov
cmp
cmpsb
aas
mull
mov
or
lods
or
testl
cli
or
mov
loop
ja
cld
xor
subl
lret
rorb
jmp
push
sub
xor
mov
jge
push
jae
pop
push
push
mov
pop
jp
mov
mov
inc
and
jle
and
fidivl
add
adc
xchg
and
cmc
xchg
fsubl
into
and
mov
sbb
loope
sub
stc
add
loop
shrb
rclb
push
clc
sbb
xchg
js
dec
scas
rorl
mov
adc
and
cli
ds
shl
pop
jmp
mov
loopne
or
pop
and
add
mov
lds
sub
or
imul
in
pusha
xchg
sbb
sbb
mov
push
je
add
neg
xchg
mov
push
pop
jecxz
lods
std
addr16
sbb
mov
or
sub
jecxz
mov
or
pop
cmp
sti
rcrl
pop
cmp
sbb
mov
sub
jmp
add
xor
daa
xor
add
shlb
adc
jnp
out
pop
xor
stos
popf
mov
mov
pop
ljmp
xor
dec
cmp
lret
inc
ret
cli
ljmp
push
mov
mulb
or
mov
push
mov
add
popl
jbe
insb
jl
sub
cs
xor
push
fnstenv
jmp
rcrl
jmp
testb
out
jg
jecxz
push
lahf
hlt
insb
subb
insl
pop
rorb
cmp
mov
xchg
sub
cmc
or
or
insb
fs
xorb
outsb
inc
mov
ss
xchg
pop
push
mov
repnz
imul
or
lods
inc
push
rorl
mov
xchg
or
enter
mov
sub
xor
icebp
gs
add
add
incl
enter
sbb
sbb
enter
ret
sbb
pop
xchg
jno
je
ds
adc
sub
jmp
inc
pop
mov
shlb
js
jge
test
or
mov
fsubs
xlat
pop
das
xor
dec
xor
testl
cmp
js
rol
daa
out
sub
xchg
jns
or
subb
pop
push
xor
rolb
int3
add
daa
adc
push
cmp
xor
push
popa
pop
shr
scas
cwtl
outsb
jmp
rclb
test
and
popa
push
xchg
sub
mov
jb
sbb
cmpsb
test
pop
adc
iret
iret
push
push
xchg
mov
adc
cwtl
xchg
call
imul
lock
cld
pop
pop
add
jg
pop
jmp
xchg
scas
jnp
xor
in
push
iret
lahf
inc
push
sub
fsubrl
rcrl
in
dec
cli
push
test
in
add
loop
in
cmpsb
sbb
push
sub
icebp
fdivrp
ror
mov
jo
cli
inc
call
rcrl
call
daa
out
mul
mov
pop
imull
add
insb
push
sbb
pusha
and
cmp
xchg
xchg
adc
es
lods
adc
test
mov
jmp
pop
jbe
jb
add
jmp
out
sarl
iret
out
mov
adc
sbbb
cld
add
pop
ds
mov
jg
cmc
dec
stc
pushl
stos
adc
cwtl
pop
test
dec
mov
mov
aas
dec
sbbb
or
xorb
ret
xor
mov
or
insl
cltd
pop
push
rol
jg
mov
icebp
aam
xchg
inc
push
testl
push
loope
xor
or
push
push
test
sarl
add
sub
add
ror
cmpsl
imul
mov
mov
daa
pop
xor
inc
andb
into
jp
mov
and
data16
cs
call
cs
xor
push
test
test
jno
adc
pop
stc
jecxz
mov
dec
shl
ljmp
jb
mov
xchg
mov
dec
xchg
ja
inc
imul
mov
xchg
out
lret
cltd
pop
mov
xor
pop
sub
adc
test
mov
inc
cwtl
push
sbb
notb
cmove
das
pop
lret
and
mov
ljmp
mov
xchg
sbb
jnp
sub
push
iret
lock
inc
loop
in
outsl
dec
push
mov
sti
in
ds
adc
pop
xor
dec
pop
fcoml
jle
xor
add
and
pop
sbb
pop
sub
pop
mov
arpl
stc
outsb
lret
sbb
into
dec
jecxz
das
dec
and
lds
inc
add
mov
pop
dec
lcall
fisttps
out
sub
sub
popf
imulb
fmul
daa
imul
or
jmp
arpl
mov
sbb
out
mov
bound
iret
mov
outsl
shlb
sarb
sub
movsl
xchg
add
pop
rorw
push
dec
jge
dec
and
cmpb
jmp
js
dec
movsl
sub
aad
loop
and
not
int3
out
in
out
dec
es
jg
das
test
jno
xor
cmpsl
or
les
xor
or
das
ja
xchg
cld
jmp
pushf
lock
inc
test
add
jmp
dec
mov
push
adc
jle
xor
insl
and
adc
sti
pushf
and
lock
add
sti
rorb
ja
push
mov
adcl
rorb
aad
add
rcrb
clc
sbb
dec
jo
div
mov
addr16
out
mov
test
lret
or
jecxz
lret
out
ficoml
cmc
jae
xor
fwait
or
and
sub
shlb
sbb
stc
mov
jmp
xor
sub
out
sub
sarl
add
jge
pop
inc
orb
add
xchg
xchg
jnp
cmp
lods
mov
aas
mov
push
rorl
out
cs
adc
or
adc
jmp
or
xor
cmpsl
in
popa
pop
ds
test
cmp
add
or
xor
pop
mov
mov
stc
cli
push
ds
cmpsl
push
das
shl
mov
xor
pop
je
push
mov
add
imul
or
and
mov
mov
sub
clc
icebp
addr16
mov
fildll
push
pusha
out
ret
or
pusha
div
mov
pop
or
ja
addr16
xor
push
mov
jg
cmp
mov
incb
shr
add
mov
int
and
push
repz
cmp
push
cmp
inc
in
aas
pusha
insb
mov
inc
mov
mov
add
test
mov
or
push
sub
cmc
std
cmp
cmpb
in
pop
shlb
mov
xchg
add
jo
sbb
enter
jg
cmp
cs
xor
sbb
push
pop
mov
push
jns
dec
andl
jecxz
xlat
add
fs
leave
loop
dec
lods
xlat
sbb
add
mov
sub
jl
or
cli
cli
sbb
fnsave
fadds
push
pop
cmp
dec
xor
add
mov
pop
sub
sub
es
sbb
mov
imul
imul
sbb
pop
fsubl
test
push
enter
or
xchg
pop
or
mov
sbb
mov
cmp
movsl
frstor
cli
mov
icebp
cwtl
push
pusha
lods
cmp
mov
jmp
inc
mov
daa
pop
test
xchg
stos
ret
rorb
mov
jne
mov
lret
pop
fdivs
cld
or
and
sbb
gs
inc
mov
insb
xchg
call
push
jne
lea
push
inc
daa
mov
lret
xorl
lret
add
scas
jmp
and
xchg
sbb
movsb
xor
mov
js
pop
inc
mov
sahf
test
mov
cmp
pop
jmp
les
arpl
push
lods
dec
push
aam
jmp
movsl
mov
in
and
and
mov
into
test
dec
inc
xor
lock
mov
mov
xchg
stos
mov
icebp
push
fnsave
mov
dec
faddl
jnp
pop
xor
ret
add
mov
mov
in
sarl
lods
jg
jmp
cmp
test
add
aas
cs
jmp
bound
repnz
fistpl
lahf
fs
aad
aam
sub
push
add
std
mov
add
jecxz
xor
aam
dec
aas
loope
lods
push
mov
iret
out
pop
xor
inc
scas
in
ds
pop
jno
mov
idiv
cmpsb
mov
out
popf
inc
mov
xchg
cmpsl
out
out
test
popa
lds
bndstx
sarl
or
cli
jns
sub
pop
loop
jnp
repnz
adc
shlb
daa
nop
mov
xchg
inc
lds
outsl
or
add
fistps
rolb
add
insb
dec
mov
cmpsl
pop
or
mov
lret
movsl
notl
pop
into
mov
rorb
mov
push
add
rcrl
and
pop
or
dec
mov
add
out
insl
xorb
mov
sahf
dec
pop
or
sub
fadd
jae
ss
add
sub
and
pop
ljmp
cmpsl
ja
rcrb
add
xor
pop
and
sub
lcall
out
pop
ret
mov
xor
not
clc
mov
adc
push
pop
jmp
jnp
lds
mov
jle
shlb
in
adc
cld
iret
adc
add
lds
negb
scas
adc
or
mov
and
adc
push
sbb
or
fstpt
daa
fiaddl
jmp
jae
push
jg
fstl
dec
xchg
ljmp
adc
bound
jmp
jae
inc
xchg
mov
sbb
jno
fmuls
sub
psrad
add
jmp
sub
rorb
pop
out
or
pop
ja
popf
push
roll
pop
pusha
test
scas
loope
in
adc
movsl
jmp
ljmp
jmp
mov
mov
adc
pop
mov
jmp
gs
mov
out
lret
sbb
jns
movsl
mov
mov
test
add
insb
mov
pop
add
clc
arpl
lret
push
pop
fcompl
push
push
sbb
je
addr16
xchg
add
sub
loopne
in
push
or
sbb
mov
dec
std
mov
movsl
dec
sbb
adc
nop
out
xor
je
mov
pushf
pop
les
or
sbb
repz
cmp
pop
xor
lock
add
sub
in
and
or
jle
mov
push
idivb
cld
sbb
rorl
stc
mov
mov
roll
pushl
sub
push
das
pop
clc
dec
loope
orl
inc
mov
dec
sub
pushf
xor
leave
ret
pop
ja
xchg
push
push
cmc
sti
jne
jne
sarb
and
icebp
test
repz
pop
ret
xlat
cmpsl
inc
fiadds
pop
mov
rorl
sub
cmp
xchg
adc
adc
adc
mov
jnp
data16
push
xor
pop
out
mov
bound
addl
mov
int
fbstp
push
mov
xor
or
pop
call
mov
lcall
push
sbb
jmp
in
test
das
xchg
pop
xor
pop
sbb
or
dec
or
mov
cmp
dec
pop
dec
push
cmp
fsubrs
imul
xchg
bound
jecxz
repz
jns
inc
dec
and
leave
mov
push
loope
pop
das
stc
ds
out
xlat
mov
xchg
aad
movsl
cmp
lahf
mov
add
sbb
inc
push
jl
testb
inc
shl
cmp
add
sbb
in
es
lea
pop
loopne
sub
add
ljmp
jge
or
cwtl
xchg
inc
aam
mov
add
and
and
ljmp
mov
dec
sti
mov
xchg
mov
mov
jp
mov
xor
outsl
sbb
push
mov
aad
cmp
jmp
inc
arpl
and
stc
aas
lcall
aad
mov
test
pop
outsb
pusha
xchg
push
sbb
mov
fidivs
mov
add
or
push
cmp
dec
dec
mov
cmp
push
or
pop
jmp
pop
sub
scas
insb
mov
xor
test
mov
ret
xchg
dec
xchg
mov
mov
add
xor
add
mov
push
cmp
and
lods
test
cmc
dec
sub
pop
mov
inc
and
mov
add
cmp
xor
sbb
ret
es
sahf
sub
xchg
das
les
cs
loopne
adc
mov
ret
or
push
and
mov
cmp
or
in
mov
jmp
mov
pushf
lahf
cmp
sub
sarb
add
push
push
mov
add
pop
pop
or
push
out
mov
push
push
xor
adc
pop
pop
imul
jne
icebp
adcb
ret
fistps
test
adc
nop
enter
loope
call
pop
pop
lahf
hlt
outsl
or
mov
push
loopne
xchg
add
mov
scas
popa
dec
ret
sub
pop
mov
lock
pop
aas
jb
mov
jns
dec
jbe
jno
aas
mov
es
outsl
ds
xor
dec
aas
jp
sbb
pop
and
lahf
pop
push
sahf
or
mov
stc
or
cmp
lcall
jb
add
ret
aas
jno
mov
in
pusha
icebp
cmp
dec
cmpsb
loope
jmp
movsb
movsl
pusha
rolb
subb
and
push
push
data16
and
jecxz
sbb
repz
or
jmp
inc
fwait
push
push
mov
xor
stc
icebp
mov
jecxz
inc
adc
push
fsubr
dec
xchg
cmc
fwait
out
and
cld
or
jno
out
jns
xor
into
or
push
adc
loopne
sub
or
mov
scas
mov
jmp
cmp
xor
test
push
adc
stos
sarb
jp
ja
insl
dec
inc
scas
jo
mov
jb
cmp
mov
or
xchg
imul
scas
jns
adc
lods
addb
cmp
lahf
shrb
inc
imul
mov
hlt
neg
mov
and
jg
or
adc
jle
fnstsw
xchg
mov
dec
xor
inc
dec
sub
add
xor
mov
in
or
xlat
outsl
cld
xchg
sub
dec
xchg
mov
insl
push
ja
rolb
pusha
imul
jg
nop
mov
insb
xchg
outsb
sbbb
push
push
fs
xchg
call
int3
mov
fmull
cmpsl
fldl
and
sub
mov
pop
insl
jp
jg
lds
mov
and
pop
pop
adc
jne
imul
push
push
cld
cmp
mov
dec
add
insb
dec
pusha
inc
decl
lret
dec
imulb
jg
enter
mov
jge
pop
pop
pushf
and
lea
popf
xor
push
mov
pop
insb
mov
outsb
std
gs
scas
jno
mov
insb
pop
adc
es
adc
loope
adc
sub
shlb
mov
std
test
dec
push
sbb
sub
pop
mov
mov
int
sub
push
mov
shll
and
sub
rcrb
xchg
std
lods
pop
fldcw
shl
test
jmp
and
scas
pusha
mov
fistpl
int
pop
pop
mov
lret
add
jmp
subb
and
jp
outsl
add
mov
cmp
lahf
jne
pop
in
cmp
xor
pop
out
sub
push
dec
mov
pop
pop
scas
or
pushf
mov
add
and
pop
in
lock
or
inc
pop
mov
mov
mov
mov
in
sbb
push
dec
mov
clc
push
loop
loop
sbb
add
insl
mov
add
push
movsb
mov
loope
leave
test
push
xor
mov
xchg
loop
cmp
jmp
roll
mov
sti
cld
or
scas
idiv
sbb
out
sub
scas
or
dec
jle
xor
cli
lds
mov
push
das
jo
cmc
nop
loop
in
lret
adc
jle
hlt
shlb
sub
cmpb
aas
mov
stc
mov
jns
push
xchg
dec
divl
add
addr16
and
jge
jmp
jmp
and
xor
mov
dec
xchg
clc
pop
ret
jmp
pop
mov
xor
out
sbb
repnz
and
add
xchg
adc
add
in
jmp
cltd
dec
pop
pop
in
subl
jno
sub
nop
mov
addr16
iret
pop
push
adc
test
push
jmp
mov
pop
pusha
adc
jmp
sbb
loope
xchg
pop
es
loope
and
pop
dec
push
sbb
xchg
add
ror
add
add
pusha
aas
pop
insb
imul
adc
xchg
cmp
pop
adc
icebp
xchg
jmp
or
cmp
ljmp
imulb
push
inc
cmc
and
fimuls
lods
daa
pop
mov
dec
mov
stc
clc
and
gs
push
test
dec
scas
fisubl
test
dec
sbb
push
pop
xor
lret
push
testl
cmp
inc
out
mov
cmp
mov
pop
inc
and
push
xor
xchg
not
popf
cli
or
xchg
pop
and
xlat
pop
jne
sahf
scas
ja
xchg
int3
and
cli
call
mov
cli
das
test
mov
push
and
xchg
xchg
pop
mov
and
stos
cmp
adc
push
add
test
push
pop
jb
gs
mov
mov
xlat
add
dec
pop
test
outsb
aam
adc
in
js
iret
xor
lret
jne
inc
addr16
mov
in
xchg
daa
and
mov
dec
fisttps
inc
popf
inc
pop
push
add
incb
sub
cmp
sub
pusha
test
jae
push
mov
mov
pop
jnp
in
lods
jns
push
dec
adc
lcall
cmp
sti
sub
gs
imul
mov
pop
mov
or
pop
ja
pop
shll
test
mov
iret
jge
call
push
cmp
mov
or
ja
mov
sub
mov
push
sub
or
out
and
popf
sti
fs
hlt
adc
and
dec
scas
lods
mov
add
call
inc
shr
adc
subl
sahf
lret
dec
les
shrb
add
sub
les
out
add
bound
and
add
adc
rolb
and
out
cmc
pop
insb
std
je
add
xlat
loope
sub
pop
jmp
mov
in
add
mov
xor
jge
lods
jp
sub
jne
std
mov
sub
jle
xchg
sbb
pop
xchg
cmpb
repnz
fnstenv
fists
and
xor
and
xchg
push
fcompl
ljmp
shrl
mov
mov
mov
mov
add
and
add
aam
adc
push
pop
pop
or
clc
aad
push
pop
inc
imul
push
pop
xor
mov
scas
in
mov
adc
add
push
ror
adc
outsb
aaa
test
cmpsb
cmp
xor
andb
cli
and
imul
mov
inc
nop
mov
scas
sbb
bound
jg
adcb
cmp
insb
out
fdivl
jp
cmpb
cmp
push
jmp
xchg
pop
in
fwait
cmc
sbbl
mov
add
ds
imul
add
push
jmp
sahf
lock
ret
xor
xchg
mov
aad
addr16
ret
mov
lods
cli
jmp
lds
outsb
pop
push
lret
jae
mov
or
jle
int
in
sbb
cli
pop
and
mov
cld
mov
insl
sub
jmp
xchg
sub
mov
pop
add
dec
xchg
or
lock
sub
cs
jns
push
xor
int
push
sti
pop
lods
int
into
sub
push
adc
hlt
ljmp
icebp
sti
and
push
mov
add
clc
inc
inc
sti
lds
jmp
xchg
pop
fsubrl
xor
scas
add
inc
xchg
and
aas
xchg
mov
lcall
inc
inc
stos
popf
fistps
dec
push
inc
push
adc
or
iret
loop
fisttps
and
sub
lahf
push
testl
fs
sbb
xor
stc
xor
lods
or
cmpsl
shl
and
fdivs
rcll
test
jecxz
sarl
mov
imul
mov
movsb
pop
lret
sbbl
inc
dec
imul
stos
test
mov
movsb
jnp
pop
lods
stos
imul
xor
dec
rorb
mov
mov
ret
xor
adc
shll
mov
adc
xchg
adc
and
add
and
jae
cwtl
adc
mov
or
aaa
inc
jl
adc
add
dec
pusha
pushf
sbb
out
pop
idivl
add
sbb
pop
dec
out
mov
pop
mov
clc
adc
push
idivl
pop
push
adc
adc
rcll
xor
testl
mov
mov
sbb
dec
cmp
mov
push
shl
add
or
jo
jmp
dec
test
xchg
shrb
adc
sahf
inc
sub
sbb
and
add
jle
pop
in
adc
mov
outsl
and
xor
pop
inc
fwait
pop
inc
mov
testb
mov
push
adcl
aaa
iret
or
sbb
stos
or
sub
and
dec
and
daa
or
mov
push
enter
leave
lahf
fisubl
pop
rcrl
and
mov
fs
push
mov
cld
into
cmpb
test
out
ja
xchg
popa
mov
ljmp
pusha
jp
out
xchg
jg
rcrb
push
loopne
adc
inc
push
pop
mov
push
jno
dec
mov
pop
push
enter
daa
jne
loopne
dec
fwait
or
int
je
icebp
mov
push
mov
loopne
pop
lahf
or
aas
add
push
push
dec
lds
add
mov
in
les
mov
add
jmp
sbb
ljmp
push
repz
cs
push
mov
aas
and
mov
lcall
sbb
mov
lods
jmp
push
mov
popa
jmp
jl
push
sub
lds
mov
mov
push
cs
jmp
dec
shll
xchg
outsl
mov
adc
adc
and
das
test
xor
xchg
shll
sub
enter
pop
jp
dec
cmp
lds
mov
pop
bound
or
jle
xchg
pushf
and
dec
adc
popa
in
and
xor
jns
adc
mov
push
dec
inc
dec
pop
dec
int3
aam
vpxor
pop
scas
mov
daa
int3
data16
mov
push
xor
mov
cmpsb
fnstsw
leave
stc
and
pop
aas
or
jecxz
xchg
adc
sbb
enter
dec
and
test
mov
pop
xor
jmp
test
bound
nop
clc
cmp
push
cs
xlat
or
push
sbb
push
push
mov
add
dec
cs
and
fmuls
and
jo
xor
lret
ds
xchg
cltd
mov
outsl
in
inc
mov
aaa
int3
pop
cmp
add
mov
jp
jo
or
pop
testl
jns
or
pop
loop
inc
bound
aam
das
jbe
add
dec
mov
cli
int
in
cmpb
fcoms
pop
lods
sub
mov
shr
lds
dec
shll
pop
adc
add
xchg
or
test
jmp
dec
shlb
xchg
jmp
cmp
xor
pop
or
ljmp
sub
or
stc
fstpl
fldenv
movsb
test
cmpsb
sti
pop
mov
mov
add
outsb
bound
push
pop
cmpb
mov
mov
outsb
repz
add
adc
jg
or
imul
jbe
pop
or
inc
fstl
mov
and
jbe
and
mov
add
loope
inc
rorb
cmp
icebp
xor
add
sub
xchg
icebp
add
std
push
and
jge
push
or
das
xorb
lds
pop
mov
adc
mov
mov
enter
pop
dec
mov
stos
test
xor
add
movaps
dec
and
out
test
add
es
xlat
cmp
or
jle
pop
outsl
je
addr16
push
popf
dec
mov
mov
or
daa
push
jnp
lds
push
insb
push
subl
call
cmc
movsb
decb
js
and
mov
pop
sbb
daa
int
cmpsl
in
into
inc
jmp
sahf
addb
mov
push
jg
dec
sbb
test
and
pop
iret
xor
das
mov
push
pop
dec
jnp
or
or
cld
es
pop
mov
fnstenv
loope
out
popa
xchg
fldt
or
lea
je
add
popf
pop
push
add
sti
sub
push
sub
call
rclb
xlat
mov
jecxz
out
push
push
leave
add
insl
sarb
in
ds
cmp
sbb
push
lcall
cmp
rcll
lret
outsl
arpl
enter
shll
and
lret
jg
addr16
jno
xchg
adc
out
jno
jge
rcr
das
iret
aas
push
imul
addr16
and
leave
jmp
or
mov
jae
fsubs
xor
ficoml
jl
les
adc
cwtl
test
imul
xor
lea
add
add
pusha
addr16
outsl
push
xor
pop
in
cli
or
jmp
add
adc
cmc
add
mov
dec
jmp
ret
sbb
add
inc
jmp
mov
rcrl
ficomps
xchg
xchg
mov
into
arpl
mov
push
ret
adc
enter
mov
dec
pop
cli
mov
lds
out
aaa
lea
shrb
sub
pop
jg
lea
jae
push
dec
outsl
cs
sar
ja
loopne
pop
xorb
out
rolb
pop
mov
xor
popf
mov
sbb
rorl
push
sub
ds
cwtl
pop
pop
cmpsb
cmpsl
aad
push
sbbb
pop
pop
inc
imul
jns
mov
jmp
call
pop
nop
sbb
dec
ret
jle
pusha
pop
push
pop
inc
mov
pop
fwait
stc
shlb
mov
in
mov
rcrl
sbbl
fs
mov
icebp
sub
orb
mov
pop
stos
lods
cmpsb
lahf
mov
lods
int
sub
pop
xor
icebp
push
jmp
inc
loop
mov
cwtl
sub
pop
outsb
outsl
or
daa
mov
sbb
je
or
lcall
and
call
cwtl
xchg
outsl
orb
push
sbb
rolb
mov
testl
xor
imul
sub
rorb
push
xlat
cmp
jg
lea
out
adc
and
cmc
push
jno
scas
ljmp
add
and
repz
xor
orb
sbb
neg
cli
add
mov
push
xcrypt-ctr
cmpsl
pop
push
push
loop
xchg
mov
pop
or
dec
lock
lods
popa
add
xor
shlb
or
scas
push
inc
xchg
pop
ljmp
cli
stc
and
jne
gs
xchg
cmp
orl
or
fistps
jmp
dec
mov
pop
add
mov
stc
ds
cwtl
or
mov
jmp
adcb
push
scas
div
sbb
ret
jge
ret
insb
shlb
dec
add
inc
dec
cmc
or
scas
and
push
cli
roll
jb
xor
movsl
add
add
pop
add
lea
adc
mov
inc
pop
push
push
jo
pop
and
fmul
xor
or
inc
push
push
mov
add
ja
outsb
les
cmp
ret
popa
jnp
pop
sub
setno
testl
add
add
ljmp
add
lret
cmc
in
sbb
cs
sbb
fnsave
fldenv
rolb
xchg
cli
xchg
inc
out
inc
add
lock
jns
dec
sti
fists
pop
pop
shr
out
inc
decb
pusha
add
lods
xchg
inc
xchg
mov
stos
push
leave
jg
daa
inc
test
fidivrl
clc
dec
mov
in
mov
push
and
mov
mov
das
das
push
mov
push
adc
jb
and
jae
out
xor
dec
xchg
ret
push
jno
bound
or
pop
push
sub
xchg
mov
mov
fisttpl
dec
mov
subb
adcb
ja
cwtl
jne
jecxz
inc
inc
cwtl
push
ret
push
mov
arpl
mov
and
aas
add
mov
push
arpl
aas
neg
or
in
push
mov
xor
mov
sub
push
inc
lds
call
mov
filds
push
jmp
pop
in
mov
jnp
push
and
fsub
ret
mov
enter
xor
dec
call
pop
pop
sarl
ficoml
iret
fstpl
inc
pop
or
pop
push
mov
sub
shrl
dec
mov
inc
inc
or
inc
in
pop
idivb
test
xchg
inc
pop
fcoms
in
out
test
and
cmp
add
mov
push
mov
jne
repz
enter
push
insl
popa
sub
pop
jg
mov
sbb
divb
sbb
sub
pusha
sub
and
rclb
and
jmp
mov
push
xchg
push
add
pop
pop
mov
bound
sbb
push
push
pusha
ret
pop
not
add
xor
jmp
push
jge
cmpsl
shl
pop
dec
out
push
fsubrp
cmpsl
pop
dec
adc
push
lret
test
add
cmp
or
pop
jl
add
stc
in
roll
sbb
add
or
or
pop
mov
stos
rorb
aaa
inc
gs
jne
lods
sbbl
mov
ljmp
xchg
sbb
pop
hlt
jmp
dec
jp
test
shll
mov
in
xchg
shr
push
mov
sub
and
add
dec
lds
ret
inc
add
mov
ffreep
add
inc
fsub
in
rorb
icebp
cwtl
xor
jmp
ljmp
stos
negl
push
hlt
frstor
pop
les
cmc
lods
inc
addl
insl
sub
cmc
out
gs
mov
jne
push
daa
pop
push
and
add
jg
xor
lret
or
mov
inc
add
cmc
jp
dec
stc
mov
ja
out
push
aad
stc
jno
xorb
xlat
pop
leave
in
inc
adc
insl
imul
pop
sub
dec
mov
pop
lods
mov
lods
orb
push
in
xor
ret
add
insb
out
xchg
pushf
jge
add
and
inc
lods
andl
add
sub
pushf
movsb
cli
fisubrl
inc
lret
adc
cmc
push
cmp
test
or
cmp
xor
fisttps
or
cmp
mov
incb
jp
pop
mov
push
pop
add
add
add
std
popa
lds
sub
cs
fwait
lods
sbb
sub
add
sub
mov
dec
test
outsb
jmp
cmc
popa
jb
sbb
sbb
hlt
jnp
pcmpgtd
xor
shlb
fwait
movsb
adc
xor
mov
rol
add
inc
push
bnd
add
sub
inc
xchg
push
pop
pop
nop
fucomp
jnp
jno
enter
scas
pop
dec
mov
mov
mov
incl
add
mov
std
ljmp
or
mov
repz
out
mov
mov
pop
negl
popf
mov
popf
push
or
dec
in
sub
pop
aas
lds
sub
aas
dec
push
sti
adc
or
mov
shrb
jno
leave
aad
int3
in
adc
orl
mov
dec
loopne
pop
inc
jp
jo
and
mov
dec
add
jns
cmp
or
or
xor
ret
shr
mov
cld
jbe
sbb
mov
push
imul
enter
lods
in
push
mov
jmp
scas
mov
mov
stos
and
dec
and
out
jae
cmp
push
mov
ljmp
into
mov
dec
or
pop
pop
mov
xor
hlt
push
mov
mov
cmpb
add
add
imul
adc
jne
xor
sbb
add
imull
cwtl
js
xchg
out
les
mov
testb
or
cmpsl
push
std
test
clc
movsb
xchg
mov
popf
ret
inc
test
out
or
rorb
pop
repnz
hlt
xlat
lock
ljmp
mov
repz
pop
push
pop
pop
orb
sbb
pusha
movsb
stc
cmp
inc
sub
test
cmp
addl
mov
loop
in
imul
add
jmp
xchg
add
xor
or
and
fidivs
or
dec
push
or
xchg
push
mov
jmp
adc
jns
or
out
cmp
add
hlt
dec
xchg
pop
mov
add
jecxz
mov
test
push
negl
sub
mov
xor
call
aam
mov
outsl
mov
cmpsl
lret
sbb
adc
pop
rol
xchg
sub
dec
jne
push
sbb
sarb
push
adc
sahf
sbb
add
xchg
mov
sahf
dec
jmp
push
or
xor
adc
dec
adc
int3
and
out
sub
cmp
lods
rcll
bound
fsubr
mov
push
loop
pop
cmp
pop
push
test
mov
dec
dec
xor
out
cmc
adc
jae
in
and
loopne
jne
arpl
sub
je
rcll
iret
or
scas
lret
jg
out
cmp
sub
add
test
shll
add
lret
inc
test
cmp
pop
dec
xchg
enter
jmp
xchg
es
mov
add
xchg
and
imul
mov
dec
pop
in
cmp
je
cmp
lahf
clc
mov
mov
pop
in
pop
daa
fimuls
addl
jnp
sub
rorb
mov
negb
jns
add
dec
pop
and
mov
mov
popa
fldenv
sub
dec
cmpsl
xor
data16
dec
adc
int
movsl
jne
in
pushl
mov
push
movzwl
push
incb
fidivs
jnp
pop
dec
outsl
cs
dec
cmpsl
jge
jns
jmp
pop
fldl
insb
adc
and
dec
add
mov
lret
cs
jno
dec
ret
test
pop
stos
loopne
mov
mov
test
or
fcomip
mov
add
adc
loopne
or
and
ret
sub
nop
push
mov
int3
or
les
and
enter
test
das
inc
cmpsl
pop
xchg
lds
pop
mov
outsb
test
loop
shl
fs
aad
mov
lods
sbb
orb
and
pop
or
pop
xor
inc
in
sub
sub
jg
sub
jecxz
and
inc
adc
je
call
pop
addb
push
sub
pop
xor
in
push
mov
jle
pop
ret
pop
outsl
add
mov
or
cmpsb
push
add
ret
xor
or
xor
push
cmpsl
sbb
or
loopne
dec
pop
push
and
bnd
lcall
push
jmp
inc
and
imul
repz
clc
adc
and
xchg
rorb
jne
mov
cmc
cwtl
cmp
in
mov
jo
gs
adc
fldl
mov
mov
stos
cwtl
dec
xchg
mov
outsl
lea
adc
aas
cmp
jmp
dec
stos
cmp
adc
fisubrs
out
and
popf
cld
testb
lahf
push
xor
test
jmp
pop
xchg
dec
lret
aam
lcall
into
test
or
in
outsl
icebp
das
sub
push
out
add
mov
imul
dec
sub
shl
push
movsb
jmp
cmpsb
pop
and
jmp
call
mov
mov
cmp
dec
lds
test
add
sar
push
lock
xor
rcrb
or
inc
outsl
sbb
loopne
push
pop
mov
sbb
stos
stc
jmp
jo
sub
lods
or
mov
mov
jp
mov
gs
stos
repnz
push
push
jmp
add
ds
sbb
mov
adc
push
dec
sub
pabsd
cmp
daa
das
jno
enter
lret
insl
insb
jbe
imul
pop
mov
sbb
outsb
mov
sub
iret
dec
mov
bound
cwtl
and
push
cmp
push
jmp
mov
jl
loop
dec
repnz
imull
or
jp
cs
add
or
and
cmp
ds
xor
sub
inc
jmp
xchg
cmpsb
mov
jmp
mov
jnp
sub
int
push
sti
xor
scas
pop
call
inc
sub
cmp
imul
repz
fnstenv
mov
mov
popf
xor
icebp
out
push
inc
pusha
nop
pop
push
sub
xchg
push
pop
pop
inc
mov
fs
and
mov
je
sbb
dec
or
popl
test
inc
sbb
mov
shl
or
scas
lret
arpl
pop
repnz
fstpl
push
lock
xchg
push
mov
outsb
shl
popa
push
jno
and
mov
inc
sbbb
cmc
push
inc
test
dec
cmpsb
mov
cs
divb
add
adcb
mov
jo
inc
mov
push
dec
jge
aad
xchg
fbld
jge
outsl
jnp
movb
and
add
sahf
pop
xorl
fld
aad
in
shr
jno
subb
add
inc
mov
and
mov
arpl
adc
and
push
adc
add
cli
adc
mov
in
jp
arpl
push
and
adc
int3
mov
dec
movsb
addb
or
jnp
movsl
or
pop
or
mov
sub
dec
add
jne
nop
push
dec
dec
imul
sub
cmpsb
scas
add
and
fwait
xor
jbe
jge
adc
jmp
lahf
xchg
or
imul
xor
enter
sbb
push
add
mov
movsb
adcl
rclb
pop
nop
lods
gs
mov
pop
sub
mov
push
imul
xchg
xorl
dec
adc
adc
or
xchg
push
test
pop
stc
mov
dec
pop
lahf
jno
ret
jmp
xchg
dec
mov
add
and
or
push
inc
inc
shrb
adc
add
mov
mov
or
adc
ds
aam
shrl
cs
lahf
scas
sub
jae
and
cwtl
add
inc
mov
push
xorb
and
pop
dec
dec
mov
subl
mov
sar
in
pop
xchg
outsl
and
jae
mov
repz
stc
pushf
inc
push
add
ljmp
cmp
sti
sub
cmp
pop
push
xchg
add
mov
jo
lahf
fiaddl
adc
das
call
shrb
dec
in
mov
push
pop
jae
lret
inc
loopne
inc
xadd
cmp
dec
push
adc
lret
or
xchg
and
pop
popf
repz
cmpb
mov
in
cmp
or
mov
jg
int3
jg
dec
imul
add
inc
pusha
scas
pop
or
jno
cmp
push
mov
push
or
cmc
pop
lahf
xorl
rol
shrb
call
pop
shlb
adc
add
inc
push
xor
cs
loopne
cmp
push
dec
or
dec
sbb
mov
mov
flds
cld
xor
push
ficoml
adc
adc
mov
mov
xchg
loopne
stos
or
xchg
mov
jbe
insl
fildl
loop
daa
jae
fdivrs
loope
and
std
xor
add
ss
repnz
sbb
add
mov
fnstcw
cmp
das
sub
push
arpl
push
or
insb
shll
lods
test
cmp
jne
das
pop
inc
xchg
sub
adc
sub
orl
mov
add
movsb
mov
or
fwait
xchg
lcall
repnz
add
jmp
or
mov
xchg
push
add
mov
and
mov
add
add
xchg
loopne
cli
dec
inc
sahf
pop
mov
mov
cmpsl
test
sbb
cmp
in
cmp
add
mov
add
test
sub
jb
push
and
jno
sar
stos
jae
jnp
cltd
hlt
xorb
add
pushf
icebp
lea
arpl
lock
aas
cwtl
mov
inc
sub
add
sub
pop
mov
add
cmp
add
jl
enter
sub
add
xchg
cltd
inc
stc
clc
xchg
add
push
pop
subl
cmpsb
aad
jle
out
xchg
sub
push
leave
ret
pusha
inc
loope
sbb
xor
loop
add
cmp
add
and
inc
add
outsl
popa
iret
mov
jl
fs
add
add
aaa
dec
icebp
dec
dec
and
push
inc
xor
add
mov
dec
xor
add
pop
inc
push
sub
inc
sub
and
in
decl
sbb
mov
dec
cmp
jae
mov
shrb
add
pop
and
add
pop
sub
lret
xchg
sub
stos
or
popa
mov
sbb
out
aas
add
sub
xor
fdivrp
nop
dec
xor
hlt
cli
xchg
inc
dec
mov
insb
imul
dec
jecxz
clc
xchg
jg
insl
cmp
mov
adc
push
inc
pop
pop
sbb
rorl
or
mov
das
cmp
mov
insl
adc
xchg
fs
cmp
mov
push
pop
mov
xor
pop
sub
icebp
lcall
cs
dec
and
mov
out
add
imul
sbb
in
aam
lret
add
mov
or
pop
jne
daa
sub
pop
out
xor
loope
in
lahf
and
jge
pop
adc
lret
add
cltd
loop
cmp
add
std
mov
roll
push
test
push
and
daa
mov
inc
aaa
xchg
fsubrs
jae
push
fidivs
rorb
pop
pop
xor
mov
xor
add
lods
adc
fisubrl
shll
and
imul
pop
add
loopne
adc
pop
cmp
cmp
push
adc
cmpl
ljmp
sbb
fildl
negl
insl
mov
imul
fcmovb
cmp
xor
pop
lds
and
imul
add
pushf
loope
jecxz
mov
or
aam
push
add
fs
popf
cs
push
das
inc
xor
dec
enter
or
and
and
inc
ret
stos
dec
xor
dec
inc
add
gs
movsl
icebp
pushf
out
rcrb
cmpsb
cmp
lahf
add
sub
inc
xor
jge
inc
addb
mov
sbb
fidivs
stos
add
movsb
stos
xlat
cmpsb
adc
sbb
or
jb
add
and
add
lahf
call
xchg
mov
sub
mov
mov
pop
aad
xchg
xchg
shll
add
mov
dec
inc
mov
js
pop
dec
and
subl
rolb
fnstsw
pop
js
mov
jp
sub
mul
inc
pop
cmp
popa
sar
lret
and
cld
lcall
pusha
jecxz
pop
subl
sub
add
fwait
loope
test
push
add
orb
stos
fcmovbe
add
ljmp
sahf
add
xchg
aas
out
cld
shrb
dec
mov
add
pop
mov
aaa
inc
cmc
sti
and
xor
int
fstpl
jge
cmp
sub
inc
js
sbb
jae
mov
sti
xor
outsb
xchg
mov
pop
xchg
iret
add
fldenv
or
add
and
xor
cmp
dec
cmp
mov
mov
or
std
add
jge
add
xchg
lods
cltd
or
mov
pop
cld
data16
pushf
adc
add
insl
shr
lahf
dec
sbb
inc
popf
gs
pop
inc
rolb
mov
adc
or
or
insb
imulb
xor
in
xchg
add
ss
shlb
inc
mov
sbb
je
jno
and
testb
ljmp
fiadds
ret
loopne
pop
push
je
inc
push
cmp
adc
inc
dec
sub
scas
out
test
jmp
and
xchg
inc
hlt
xchg
add
cmp
sbb
inc
pop
shlb
add
xchg
and
dec
cld
aad
mov
mov
jb
jl
ljmp
jnp
add
pop
dec
cmp
pop
call
add
jp
pop
lods
rorb
pop
jl
jo
add
mov
icebp
inc
adc
out
inc
adc
add
mov
xor
inc
add
mov
pop
dec
jb
test
daa
sbb
loopne
and
add
sub
mov
pop
push
test
aam
rorb
add
add
jns
mov
pop
out
call
push
out
cmp
push
mov
mov
shr
sbb
sub
mov
cmp
or
adc
sub
push
jp
adc
adc
xchg
jb
sahf
repz
leave
mov
xor
mov
push
cmp
dec
cli
mov
push
adcl
and
push
lock
push
mov
xchg
loope
add
push
test
xchg
add
and
inc
xor
adc
inc
and
add
sbb
push
mov
jecxz
mov
jmp
xchg
pop
cltd
js
or
xchg
lahf
or
add
add
jnp
mov
add
adc
stos
sbb
inc
pop
adc
test
lea
push
push
and
imul
mov
iret
adc
or
lock
out
inc
and
cmpb
mov
push
mov
aaa
cmp
inc
adc
js
shlb
bound
inc
es
mov
mov
xchg
gs
mov
mov
sarb
pop
sub
dec
aad
add
lods
in
pusha
sub
mov
or
nop
and
jae
sbb
rorb
and
popf
adc
mov
dec
das
addr16
test
and
incl
sbb
sub
imul
add
sbb
movsb
add
mov
add
arpl
jmp
aas
in
inc
nop
push
add
push
test
cli
addr16
add
sbb
cld
popa
pcmpgtd
imull
xchg
mov
shll
sar
ds
scas
out
hlt
imul
sbb
out
dec
push
mov
cmpsb
pop
ja
or
iret
fwait
testb
jl
cmp
test
push
mov
movsl
rorb
or
lock
jo
js
xor
jmp
push
out
add
mov
in
or
lods
push
dec
adcb
cli
mov
add
in
in
push
into
adc
loopne
dec
jle
and
rol
push
pop
test
out
push
pop
push
inc
jbe
add
add
add
cmp
jge
mov
dec
xor
lret
jmp
mov
nop
adc
imul
cmp
adc
push
pusha
push
xchg
xchg
std
pusha
movsl
sarb
push
rcl
mov
jg,pt
clc
pop
mov
ja
out
repz
shrb
add
push
ss
add
and
loope
fsubrs
fwait
mov
add
mov
cmp
test
bound
jb
out
adc
sub
mov
sub
push
push
ljmp
js
adc
test
ss
jle
mov
mov
xor
cmp
aaa
inc
dec
dec
or
mov
inc
adc
subl
inc
xchg
cmc
xchg
add
sti
fsubr
decb
sbb
es
cmpsl
and
pop
pusha
test
jecxz
add
dec
andb
sbb
fcoml
cltd
add
xor
pusha
or
out
out
mov
mov
fiaddl
add
add
bound
test
sbb
and
movsl
jge
in
add
pop
cmpsl
stc
dec
mov
pop
sub
xchg
dec
addr16
sbb
add
mov
cmp
lock
add
pop
aas
xchg
add
push
lods
and
adc
cmp
inc
stc
clc
faddl
mov
jb
xlat
push
or
mov
dec
mov
mov
push
out
mov
outsb
lret
mov
add
dec
sub
xchg
fstpl
in
je
pop
ljmp
loope
and
or
xor
out
add
je
mov
mov
lret
pop
xor
lahf
jmp
je
jge
ja
jae
sub
testl
xor
pop
jo
add
rorb
testb
movsb
aad
or
add
leave
adc
push
ss
icebp
addb
sahf
loop
push
mov
sarb
aas
ds
xchg
and
fmuls
mov
das
inc
ljmp
adc
pushf
in
int3
or
adc
call
adc
push
sub
incl
popf
shrb
int
inc
mov
repnz
repnz
mov
loop
in
push
mov
addr16
add
sub
or
imul
filds
xchg
xchg
lret
movsb
add
outsb
add
lahf
mov
sbb
cwtl
test
cmp
jb
or
mov
inc
pop
inc
add
mov
fisubs
imul
mov
je
cmpsl
pop
frstor
decl
pop
xchg
stos
add
dec
cmp
jmp
shrb
mov
or
xor
add
push
ret
adc
push
pop
add
jne
insb
arpl
repnz
std
dec
inc
cmp
cli
hlt
sub
inc
icebp
lcall
push
mov
ja
cli
xchg
mov
fisubrl
ror
push
call
sar
push
cmpl
inc
xchg
stos
out
leave
addb
xchg
std
lea
sub
jne
xor
sbb
sub
in
inc
daa
cmp
and
mov
mov
ljmp
xor
xor
and
cmp
loope
pop
movsl
mov
xchg
adc
xor
push
outsb
add
data16
dec
div
js
add
movsb
int3
mov
jae
add
push
mov
cwtl
or
cmc
cld
xor
incb
pop
out
jp
sbb
sbbb
xlat
add
jns
mov
sbb
sub
add
sub
adc
mov
or
cmp
icebp
dec
mov
les
add
adc
add
pop
cmp
xchg
fwait
and
add
aas
dec
and
push
popf
mov
jno
mov
ja
xchg
lock
sub
xor
cmp
mov
mov
subb
sbb
pop
jge
rcr
out
inc
cmp
push
jecxz
push
xchg
mov
xchg
cmc
add
movsb
push
jge
xchg
ficompl
sbb
push
daa
inc
aaa
add
and
add
sub
arpl
mov
xor
into
ss
pop
in
aad
sub
xor
jge
add
push
and
loop
xor
shl
pusha
pop
push
arpl
nop
in
ret
lods
mov
and
inc
into
jno
xchg
mov
cmp
cmc
sub
fs
add
add
inc
or
and
dec
add
sub
cmp
ljmp
ret
call
shll
out
pop
adc
sbb
mov
jo
jle
push
adc
xor
adc
or
nop
and
fs
insl
aaa
in
mov
clc
out
xchg
add
sbb
jge
sbb
sti
xchg
out
push
adc
push
neg
add
dec
popf
xchg
lret
pop
xor
mov
shrb
sbb
outsb
add
jmp
inc
add
cmpsb
test
movsb
push
sbb
gs
mov
sbb
and
scas
ror
sub
adc
mov
mov
pop
mov
jne
inc
adc
shrb
dec
jg
repnz
cmc
scas
lret
in
push
add
inc
or
mov
cmovns
mov
add
addb
insb
bound
gs
fisubl
mov
mov
in
jbe
add
test
pop
add
xchg
inc
ss
stos
jns
loopne
dec
and
add
imull
mov
arpl
jg
std
inc
insl
cmp
leave
fxch
and
pop
dec
xchg
mov
dec
pop
addl
sbb
outsb
nop
loop
xchg
jecxz
pusha
sub
mov
add
pusha
adc
xor
add
inc
push
push
imul
xchg
subb
pop
shlb
or
jo
mov
or
adc
or
jmp
sub
add
pop
mov
sub
pop
pusha
mov
cmp
ja
popl
int3
or
add
adc
mov
fldenv
icebp
out
sbb
shll
clc
sar
cs
test
fisttps
out
xor
icebp
cmp
sub
roll
aaa
or
pusha
mov
add
shlb
test
push
fistps
jmp
js
cltd
dec
add
lods
popf
push
push
inc
sarl
aam
xor
sub
xor
sub
adc
fcomps
rclb
jl
pop
xor
loop
jp
punpckldq
out
mov
push
sub
fbld
mov
mov
addr16
cmp
inc
imul
adc
xlat
push
xor
inc
cld
xor
sub
inc
and
jno
cs
or
pop
cmpsl
xor
out
mov
push
and
xor
in
and
loope
and
add
and
dec
adc
rorl
mov
pop
pushf
aaa
push
pop
mov
adc
adc
movsb
pop
test
jl
es
adc
imul
dec
nop
popf
add
and
mov
mov
and
sub
mov
xor
sbb
leave
add
cmp
and
lret
jg
add
sbb
pushf
lods
sbb
sbb
sub
shlb
aad
out
add
aam
pop
outsb
jns
pop
in
mov
mov
aaa
rol
xor
shlb
testb
mov
cli
add
sub
inc
sub
add
loop
divb
dec
cmp
and
and
jle
adcb
mov
clc
pop
add
loope
fmull
add
stos
xchg
test
pushf
mov
int3
add
inc
and
mov
fcmovbe
mov
mov
or
pop
divl
push
jno
and
lods
sub
adc
mov
cmpsb
cld
cmp
add
imul
sti
cmp
and
clc
and
push
add
cmp
xor
add
outsb
mov
mov
sbb
data16
daa
jmp
or
mov
repz
cmp
add
push
or
js
add
je
testl
pop
push
sbb
push
xor
xchg
pop
cmp
dec
inc
sti
add
cli
cmp
mov
mov
mov
sbb
xchg
mov
arpl
and
or
aaa
stos
aad
ljmp
push
orb
std
cmp
xor
pop
cmp
mov
sbb
mov
xor
sbb
xor
ss
adc
sbb
leave
or
mov
out
pop
sub
dec
js
or
mov
and
enter
cmp
mov
dec
inc
jle
into
stos
dec
adc
inc
int3
dec
rcrb
subb
leave
mov
mov
cmp
into
and
in
push
ret
sub
jp
pop
ret
and
and
inc
cld
add
popf
xchg
mov
popf
test
in
lcall
sbb
dec
adc
inc
mov
ret
push
mov
mov
les
mov
xorb
std
les
jbe
sub
push
clc
xchg
pop
loopne
jno
or
add
adc
inc
or
shl
push
mov
in
sbb
jl
cwtl
or
test
cmp
popa
push
jno
mov
loopne
dec
and
pop
mov
adc
pop
test
loopne
add
lahf
test
or
pop
mov
sbb
add
sub
cmpsl
mov
adc
and
sbb
lret
cwtl
dec
sbb
stos
and
test
mov
dec
cmp
xchg
mov
int
cltd
sbb
push
dec
mov
out
test
sub
imul
jne
les
andb
test
xchg
push
mov
or
sahf
jnp
xor
inc
push
jb
xor
xchg
inc
icebp
ror
dec
mov
lret
test
xor
fsubrs
mov
in
push
in
inc
cld
test
xchg
orb
cmp
lea
loope
rclb
sub
orb
ficomps
movsb
sbbl
push
xor
sti
adc
or
inc
push
or
add
dec
int3
dec
sbb
es
lods
sbb
sbbl
jl
in
call
aas
adc
dec
je
cmp
add
inc
mov
push
rcl
andb
cs
lock
sbb
andl
jecxz
das
pop
push
pop
add
pop
or
cld
adc
xchg
cmp
sarb
pop
clc
inc
cwtl
hlt
and
and
roll
cmp
lcall
std
sub
sbb
xchg
pusha
sbb
aas
xchg
popf
arpl
or
js
pop
mov
or
leave
ss
sbb
addb
mov
sbb
stos
inc
push
jns
xchg
mov
and
into
repz
jl
stc
add
rorb
sbb
aaa
cmp
or
test
je
pusha
dec
sub
mov
add
xchg
xchg
pushf
lock
jo
inc
jbe
add
dec
sbb
sbb
push
or
adc
es
sbb
mov
mov
pop
in
enter
movsb
adc
or
push
or
lcall
pusha
test
pop
or
pusha
fldl
lcall
ret
cmpsl
xor
fwait
leave
add
adc
xchg
pop
mov
adc
cmp
pop
jo
ret
cmpsb
les
push
add
mov
dec
mov
or
icebp
pusha
adc
adcl
jle
iret
add
or
sbb
pusha
movsl
and
mov
call
or
pop
push
or
add
cmp
push
idivl
xor
cmp
push
mov
add
pop
adc
pop
nop
adc
push
sub
push
test
push
aad
xchg
add
popa
out
test
je
shlb
loop
add
push
and
push
scas
mov
push
and
add
pop
add
dec
stc
inc
test
test
add
aas
adcb
push
xor
adc
push
dec
push
cmp
pusha
sub
pop
or
and
dec
stos
push
aas
push
add
call
push
adc
add
push
ljmp
jns
js
shll
in
push
out
into
movsb
adc
imul
add
mov
fstps
jne
add
cwtl
jo
setns
pop
push
in
pop
cmpb
add
jmp
lock
fistpll
push
je
add
jo
pop
push
mov
add
sbb
push
jmp
inc
test
or
add
hlt
sbb
dec
mov
xchg
mov
dec
mov
mov
mov
testb
enter
cmp
adc
aad
xor
mov
andb
in
adcl
push
mov
xchg
jmp
rclb
pusha
and
testl
jl
adcl
cmp
add
or
nop
sub
adc
mov
mov
pushl
int
pop
pop
nop
adc
push
into
outsl
dec
stc
xchg
faddl
fs
pop
subb
xor
js
sbb
orb
xor
add
and
sbb
mov
test
ror
rcrb
mov
lock
subb
add
fistl
xor
iret
adc
mov
xorb
faddl
orb
and
in
sbb
out
test
cmpb
aad
and
loopne
ror
adc
add
es
push
lods
mov
inc
int3
xor
test
in
shrl
and
push
push
sub
fiadds
bound
cmp
pop
adc
jmp
or
jnp
xchg
add
adc
pop
push
mov
mov
dec
or
push
or
push
mov
push
or
stos
pop
inc
mov
add
or
adc
xlat
add
rorl
enter
add
out
test
and
and
add
call
and
sahf
in
and
arpl
mov
das
jge
add
cmpsb
pop
enter
push
mov
push
xchg
push
push
mov
inc
mov
xor
sarb
sbb
or
rclb
dec
add
test
sub
adc
or
jbe
pusha
into
outsl
lahf
or
jge
push
test
pop
out
cmpsb
int3
pop
testl
and
xchg
cmp
or
fdivrs
sub
ret
add
adc
lret
decb
inc
int3
dec
or
cld
push
sub
inc
and
jns
clc
subb
xor
push
jl
pop
lret
daa
and
sar
xor
pop
inc
dec
push
mov
clc
push
inc
add
movsl
rcll
sbb
dec
int
popa
leave
sbb
xor
cmp
sub
int3
xchg
inc
push
xor
sbb
cmp
es
jle
mov
xor
or
sub
mov
xchg
sbb
push
add
loopne
add
les
cltd
xchg
add
ja
sub
adc
and
push
out
test
loopne
inc
pop
or
ljmp
nop
pusha
enter
adc
and
ljmp
mov
jno
or
and
adc
js
ja
jae
dec
shll
iret
mov
xchg
mov
mov
mov
mov
add
or
mov
rorb
nop
xchg
clc
popa
add
add
adc
adc
xchg
sbbb
cmp
sti
sub
mov
dec
fmuls
dec
mov
aam
cmp
imul
test
lods
int
xchg
insl
test
add
stc
inc
add
inc
and
roll
sahf
in
popf
imul
adc
rcl
adc
or
pop
mov
rorb
call
mov
cmp
imul
jmp
arpl
inc
in
fsub
jge
into
mov
dec
pusha
aam
andl
pop
push
repz
adcb
and
repz
jg
shlb
jle
nop
test
hlt
mov
jno
sarb
pop
add
lret
or
sbb
mov
montmul
cmpsb
add
lock
xorl
nop
pushf
ret
push
inc
lods
dec
adc
mov
pop
push
or
mov
jns
adc
xorl
or
cmp
cld
adcl
push
add
jae
lods
outsb
addr16
jbe
bound
daa
cwtl
cli
test
pop
stc
lock
repz
add
pusha
sbb
add
dec
test
shlb
jo
pop
cmpsl
fsubl
mov
mov
jl
add
pop
shlb
pop
fstpl
pop
sbb
cli
cmpsb
and
js
cmp
bound
mov
fs
and
xchg
movsl
sbb
in
jbe
inc
pop
sbb
sub
lods
inc
mov
lds
jnp
orl
dec
xor
add
loopne
out
mov
or
ret
and
loopne
push
cmp
dec
mov
stos
addb
test
xor
in
jbe
xor
mov
std
sbb
clc
cmpsb
cmp
jbe
mov
xor
mov
mov
arpl
notl
rorb
jl
pop
add
add
xor
dec
sub
pusha
push
orb
clc
fwait
orl
les
xor
int
dec
mov
mov
push
mov
and
jp
xor
or
and
jmp
test
dec
cmp
in
add
cmpsb
das
push
insb
cwtl
dec
mov
mov
imul
mov
pop
mov
lock
or
jae
mov
pop
sbb
jo
test
shl
and
pop
push
js
sbb
push
test
icebp
cwtl
hlt
or
jmp
push
cmp
roll
inc
adc
ficoml
dec
add
ds
push
adc
push
pop
mov
je
pop
push
or
movsl
adc
fists
mov
cmp
jmp
or
adc
scas
movsb
enter
jecxz
cmp
xor
gs
adc
aad
xchg
or
jmp
repz
fwait
pushf
filds
cmp
push
pop
mov
pop
sbb
or
sti
or
mov
adc
and
dec
add
inc
add
mov
adc
and
dec
int
int3
and
inc
lret
mov
pop
pop
pop
pusha
addr16
cmp
push
add
bound
test
xchg
add
pop
lods
cmp
mov
add
mov
cmp
mov
lock
icebp
nop
inc
adc
and
in
stos
mov
jecxz
dec
incl
ljmp
mov
and
adc
cmp
mov
cmp
jns
fs
inc
add
stos
mov
xor
push
stos
sbb
mov
cmp
lods
call
jnp
xor
aas
clc
fs
cmpsl
sbb
dec
mov
cmpsb
fsubr
test
pop
rolb
and
mov
aaa
sub
sahf
push
in
sbb
je
or
test
cld
xor
jnp
adc
sbb
mov
outsl
bt
push
and
data16
cmpsl
insb
loop
xor
bound
cmpsb
push
stc
add
mov
sbb
outsb
push
sahf
sti
xor
cmp
pop
pusha
push
or
arpl
add
mov
cmc
cmpsb
cld
in
hlt
jns
test
mov
and
fstpl
jmp
popa
jns
lahf
insl
outsl
xchg
fs
cmpsl
pop
jnp
push
push
cmpsb
addb
push
mull
adc
jp
xchg
cli
rclb
jle
xor
inc
clc
cmp
sub
call
push
mov
mov
rcrb
mov
mov
mov
fcmovb
jno
sub
int
xor
cmp
cld
xchg
daa
clc
stc
sub
add
ja
push
test
cmpsb
sub
lock
sbb
loopne
mov
test
icebp
mov
hlt
stos
sbb
mov
adc
loop
inc
dec
add
stos
pop
cmp
into
xor
je
test
cli
xor
dec
test
arpl
xor
mov
pop
and
mov
lret
add
mov
pop
cmp
mov
rorl
inc
cmp
out
int3
dec
aaa
xor
popa
inc
mov
imul
pushf
nop
push
adc
fimull
cmpb
lcall
adc
cmp
dec
sub
pop
xchg
roll
loop
iret
xchg
or
mov
xor
mov
dec
sbb
jle
pop
dec
adc
test
or
pop
jbe
movsb
inc
xor
mov
or
les
in
sbb
xchg
jb
sub
sbb
jl
test
or
lea
xchg
adc
or
adc
xchg
and
inc
and
xchg
dec
test
mov
aam
lds
dec
nop
mov
aam
mov
inc
test
add
in
test
sti
and
popa
xchg
inc
mov
loop
sbb
pop
pop
xchg
mov
xor
les
add
add
dec
cltd
lcall
dec
addr16
dec
aaa
es
rclb
es
inc
and
lret
xor
rorl
lock
int
or
repz
nop
inc
and
movsb
jnp
inc
aaa
lock
insb
nop
inc
popf
adc
xchg
addl
test
ja
addb
add
leave
and
pop
mov
or
data16
mov
mov
clc
pop
adc
add
pop
push
jbe
xchg
pop
out
daa
mov
jno
or
lods
mov
mov
fiaddl
xchg
call
imul
outsb
sti
loopne
and
pop
push
inc
clc
scas
dec
shlb
push
frstor
out
or
sbb
sub
pop
repnz
cmp
add
sahf
test
dec
push
in
push
mov
xchg
add
cmpsl
ror
xchg
loope
add
inc
test
xchg
jl
andb
mov
hlt
or
push
sti
aad
add
mov
mov
testb
jns
sub
inc
test
push
mov
addl
or
repz
cmp
data16
int
adc
pop
push
sbb
add
leave
jmp
mov
flds
xchg
add
mov
xor
enter
add
fdivrl
add
adc
jo
add
fsub
into
add
sbb
ja
pop
mov
rcrb
pop
jo
and
scas
add
sbb
jecxz
dec
inc
sbbb
mov
lock
sbb
cmp
push
cs
mov
in
out
push
push
out
push
mov
pop
push
dec
mov
movsb
rclb
mov
rcrl
cmp
jl
in
sahf
add
cmp
add
mov
mov
sub
add
jmp
addr16
cmpsl
shrl
push
inc
stc
add
fiadds
or
cmp
jae
cmpsb
or
test
fbstp
ja
nop
add
mov
sbb
fucomi
rol
mov
jbe
push
fcmovbe
xchg
push
decl
pop
add
add
wrmsr
pop
test
xor
jnp
mov
js
push
daa
mov
add
dec
sbb
test
sbb
popf
out
add
mov
pop
pusha
stc
and
sbb
mov
cmc
mov
roll
ljmp
int3
add
das
test
aaa
insl
push
movsb
dec
mov
and
add
ret
sti
lahf
cmp
mov
jecxz
js
loopne,pn
scas
jl
jo
add
jg
jmp
stc
inc
call
jnp
adc
add
std
cmp
testl
mov
aas
or
xor
mov
addr16
add
in
bound
add
adc
xor
cs
pop
je
add
testb
pop
inc
adc
loope
xor
cmpsb
xor
adc
mov
add
inc
inc
iret
sbb
jle
data16
repnz
or
jns
cmp
bound
int3
adc
xlat
fadds
push
cmp
arpl
rcll
add
cmp
dec
and
sub
rolb
dec
lods
add
lock
push
inc
subb
out
aad
outsl
fwait
gs
add
out
lods
adc
mov
xlat
ffreep
rclb
fldt
xchg
mov
push
or
cmpsl
mov
add
or
push
inc
shll
jnp
cmpsb
push
ja
xor
inc
mov
cmp
sub
or
xchg
cmpps
add
rcll
jne
add
cmpsl
mov
outsb
movswl
sub
and
sbb
call
in
repz
jl
inc
dec
push
orb
int3
rcl
mov
mov
shll
and
cltd
inc
xor
and
jo
repz
add
inc
sbb
and
jl
inc
cli
hlt
ret
add
fsubl
jno
cmc
pop
call
jne
jb
loopne
faddl
mov
rcrl
lea
pop
pop
jns
mov
mov
filds
inc
and
andps
add
and
shlb
xor
mov
jecxz
mov
jp
loopne
mov
lock
or
filds
add
jmp
add
mov
dec
jo
mov
xchg
push
sbb
movsl
mov
gs
pop
mov
lret
and
sti
sub
aam
test
xchg
nop
cmp
add
pop
push
ret
out
and
mov
dec
and
outsl
call
xor
in
shlb
test
sbb
jp
hlt
or
pop
sub
cmp
or
ret
push
dec
jmp
jnp
mov
add
mov
ss
add
movsb
shll
loopne
sbb
and
jge
in
add
je
rorb
mov
pop
gs
incl
pusha
cmp
jns
push
add
sbb
jmp
loopne
dec
inc
xorl
and
mov
cli
mov
movsl
lret
dec
clc
cmp
cmpsb
sarb
add
fsubrs
add
cmp
add
sub
add
add
leave
inc
outsb
or
clc
mov
mov
mov
dec
pop
fs
cmp
inc
mov
jmp
les
add
test
push
mov
mov
or
and
dec
mov
xor
out
add
cs
xor
pop
bound
xor
shlb
inc
imul
adc
inc
push
add
push
cmpsl
les
rcrb
arpl
pop
adc
sub
sbb
add
push
call
roll
aas
mov
data16
pop
addb
push
dec
xchg
cmp
enter
jge
mov
sbb
jb
lods
xor
adc
into
xor
cmp
dec
mov
stc
jnp
add
add
jmp
jae
add
add
inc
push
jl
or
mov
push
mov
jmp
movsl
out
sub
enter
bound
lock
aad
fcmovb
sub
and
mov
addb
push
pushf
fwait
xor
cmp
cmp
fiadds
pop
add
aaa
pop
pop
rsm
into
jp
dec
dec
pop
and
or
dec
xchg
dec
adc
push
inc
mov
sub
pop
inc
ds
pop
loopne
cmp
push
push
inc
dec
sub
subb
cmp
sbb
sub
mov
aas
cs
mov
mov
ficomps
aas
pop
pshufw
jnp
pop
fstpt
fidivs
inc
cmp
sub
cmp
pop
sub
inc
dec
pop
add
xor
dec
dec
cmp
into
add
jle
jbe
in
cmp
jmp
add
xor
mulb
dec
sub
cmp
sub
sub
test
and
pop
mov
xchg
addb
shlb
dec
lcall
dec
cs
cmp
nop
cwtl
inc
pop
loope
jbe
push
push
add
push
sub
sbb
and
xor
or
mov
xchg
push
cs
or
test
xorb
shlb
ljmp
cmp
jg
pop
mov
push
pop
or
andps
push
popa
rcl
pop
inc
lock
cmp
cmpb
cmp
push
fimuls
inc
cmp
or
add
jecxz
dec
push
ds
pusha
sub
cmp
or
xor
cld
push
cmpb
mov
lock
lods
pop
xor
xor
push
roll
or
rorl
jl
inc
xor
xor
push
icebp
ss
mov
dec
pop
adc
cmp
and
or
xchg
pusha
xor
and
xor
push
pusha
rolb
pop
xor
pop
dec
mov
pushw
xor
popa
sbb
lock
jle
fisttpl
jl
mov
pop
orb
pop
push
jg
sbb
addl
jns
or
push
psraw
dec
ss
hlt
add
push
movups
mov
and
sbbl
aas
or
in
out
pop
add
pop
pop
add
xor
pop
xchg
popa
inc
cmp
and
push
pop
sub
pop
cmp
addb
sbb
clc
jle
or
ds
imul
pop
xchg
sbb
loope
fwait
cmp
cmp
dec
adcb
test
ficomps
jl
sbb
fs
addr16
dec
mov
inc
sub
xor
rcr
cs
pop
add
cmovs
mov
pop
loope,pn
adc
notb
cmp
imul
or
fs
adc
and
dec
pop
shlb
or
adc
xor
pop
dec
mov
push
dec
out
add
xchg
pop
fisubs
cmp
pusha
pop
inc
xchg
andl
movsb
stos
push
je
jl
cmpb
aas
data16
and
pop
add
dec
call
cmp
jle
add
adc
pop
inc
cld
inc
xor
push
add
imul
push
cli
dec
sti
movsb
xorb
cmp
mov
cltd
pop
add
dec
push
loope
inc
shlb
data16
cmp
enter
cmp
sub
jle
sub
call
inc
jle
je
js
add
inc
fdivrl
sbb
push
dec
pop
fimull
xor
dec
cmc
addb
jo
mov
sub
and
cmp
or
cltd
fcomp
mov
mov
inc
rcrb
adc
aas
aam
sbb
add
addr16
mov
fimuls
popa
xor
or
sub
xor
xor
xor
outsb
ljmp
orb
pop
push
nop
clc
push
dec
hlt
dec
gs
add
nop
and
inc
dec
pop
jecxz
and
daa
push
and
dec
aas
xor
and
aaa
add
add
jae
add
scas
fs
or
add
pusha
add
lods
push
push
adc
arpl
cmpsb
jo
rolb
fwait
outsl
pop
movsb
ret
popa
add
add
xor
push
movsb
out
out
pop
add
pop
or
insl
call
push
cmc
cli
mov
lods
mov
fdivp
push
out
pop
pop
fcomip
cmp
cltd
icebp
mov
xor
rcrb
fs
xchg
popa
aam
adc
jge
aaa
jns
jb
mov
xor
ds
mov
lock
mov
lea
add
repnz
sub
daa
sbb
add
add
andb
stos
sbb
out
cmpsl
and
sub
mov
dec
in
push
push
cmp
test
add
nop
movl
and
and
mov
mov
repnz
pop
dec
aad
fmuls
fsubr
icebp
test
cmpsl
mov
mov
pop
add
xchg
dec
das
clc
add
and
out
add
ja
cltd
lods
mov
mov
outsb
add
jno
test
hlt
push
jnp
push
push
push
fs
xchg
pusha
in
sbb
xchg
adc
sbb
roll
nop
xchg
fidivrl
in
xchg
add
mov
mov
push
pop
pop
test
jns
push
pushf
loope
jb
push
fdiv
xor
inc
ss
outsb
in
sbb
pop
pop
pop
and
addr16
add
xor
or
and
cmp
icebp
xor
in
inc
cwtl
in
clc
mov
pop
push
mov
negb
adc
ljmp
jne
mov
sub
mov
mov
jmp
sub
xor
xchg
lock
stos
xlat
inc
cld
xor
or
xchg
cmp
add
ret
testb
mov
insb
or
sbb
jle
mov
cwtl
pop
xchg
add
int
xchg
sbb
inc
sbb
pop
mov
xchg
dec
sub
adc
mov
add
or
popa
push
push
mov
popf
test
mov
nop
inc
or
add
in
push
mov
sbbl
push
aas
sub
mov
roll
andl
xor
pop
add
xchg
inc
fs
and
fisttps
stc
addb
pop
mov
mov
sub
hlt
es
add
pop
sahf
test
mov
bound
or
sbbb
or
or
and
cmc
inc
ret
pop
mov
pop
shl
mov
cmpsb
sbb
nop
add
push
cmpb
popf
mov
rorl
sbb
into
sahf
hlt
sbb
int
add
inc
cmc
adc
sbb
jno
mov
aaa
stc
je
push
enter
cmp
iret
mov
roll
push
and
sbb
pop
sbb
or
lahf
or
test
arpl
ret
mov
sbb
insl
pop
mov
sub
push
insb
adc
push
rclb
xchg
movl
adc
mov
add
test
jne
mov
in
mov
cld
mov
xchg
push
add
std
mov
sti
nop
xchg
adc
xor
test
sbb
je
pop
cltd
mov
shl
cmpb
dec
ds
add
add
cmp
rclb
scas
hlt
roll
adc
dec
and
scas
xor
sahf
adc
test
jl
mov
mov
mov
xor
push
call
jle
cmp
inc
dec
bound
js
scas
xor
push
add
dec
adc
enter
in
aam
push
dec
or
lea
sbb
rolb
dec
push
nop
add
imul
pop
add
push
push
clc
push
add
mov
push
add
mov
mov
fsubs
lahf
or
jno
cmp
ljmp
loop
cmpxchg
mov
add
inc
push
inc
mov
add
jae
iret
adc
mov
add
add
mov
adc
mov
jne
xchg
add
std
int3
insb
xor
ret
mov
dec
jno
add
outsb
fxam
into
lret
cli
mov
pop
or
xchg
dec
dec
jae
add
add
cltd
mov
mov
sbb
movsl
adc
pop
xor
lods
sub
rolb
aas
add
sbb
push
jecxz
or
sbb
and
adc
push
mov
and
add
lock
or
sub
cmp
mov
pop
sbb
adc
sbb
das
add
fiadds
add
aam
and
dec
and
pushf
cmp
mov
insl
mov
or
and
stos
mov
test
adc
pop
lahf
add
sbb
lret
inc
push
aas
push
mov
loope
stos
mov
mov
jne
mov
dec
dec
xchg
xor
std
pop
fdivs
lock
repz
pop
pop
and
hlt
lods
add
and
xchg
push
ret
test
and
push
mov
cmp
and
es
outsb
push
sbb
sbb
call
clc
jnp
iret
xor
stos
xor
and
in
jae
add
inc
test
fists
jmp
dec
into
dec
push
fwait
in
jecxz
adc
bswap
jge
fadds
pushl
mov
negb
xor
mov
inc
les
cmp
sarl
je
jae
xor
sub
or
ret
mov
jo
mov
xor
jecxz
inc
in
bound
add
and
dec
cmpsl
inc
sub
mov
xchg
jg
cmp
scas
faddl
test
add
push
ja
clc
pop
push
mov
lss
mov
orb
add
mov
add
dec
ret
fdivp
repnz
data16
loope
rol
and
in
repnz
cmpsb
sbb
mov
add
movsl
and
sbb
pushf
addr16
in
sub
pusha
xor
test
nop
inc
inc
xchg
xor
loop
jnp
outsb
jp
add
enter
std
and
int3
mov
enter
pusha
xchg
add
xchg
pusha
jnp
mov
pop
in
stc
xchg
add
out
ffreep
or
push
das
mov
mov
es
xchg
push
and
fdivl
pop
pop
and
inc
test
rolb
push
fdivs
xor
mov
int3
or
outsl
add
mov
mov
cmp
mov
or
push
xchg
mov
jns
or
outsb
addb
rcll
in
add
sub
int
popa
cmp
or
sbb
dec
mov
clc
sub
jo
jg
xor
mov
fsin
add
repnz
in
pop
sbb
mov
pusha
add
in
loop
xor
mov
test
das
xlat
in
cmpb
push
xor
mov
add
push
xor
mov
mov
cld
mov
repnz
enter
inc
mov
outsl
lock
xchg
lret
insl
out
enter
mov
les
repnz
and
push
add
and
ja
add
scas
rorl
inc
push
std
add
lret
xchg
div
dec
insb
pushf
in
and
xchg
inc
loope
mov
rcrl
in
mov
sub
pusha
int3
dec
in
insb
call
or
scas
add
nop
xor
xor
push
add
cld
mulb
rolb
sub
lret
push
nop
adc
add
cltd
jnp
ds
dec
push
aaa
mov
dec
xchg
nop
mov
jmp
repnz
les
jno
mov
js
mov
jno
add
sbb
in
dec
addb
pop
xor
sbb
ret
inc
cmc
mov
ja
leave
mov
jno
pusha
and
mov
lock
and
sbb
jo
mov
addl
ret
pushf
add
xorl
lahf
hlt
dec
sub
jns
int3
add
inc
mov
mov
add
xor
cli
jnp
sbb
leave
int3
enter
add
pop
pop
js
jo
fcmovb
mov
test
mov
add
repnz
fsubs
sbbb
das
int
test
mov
jp
stos
mov
and
addb
jp
add
mov
mov
loopne
test
jo
andb
mov
test
hlt
inc
lea
call
mov
and
scas
xchg
adc
into
mov
shlb
add
add
add
insb
fdivrl
sub
sbb
clc
repnz
dec
sub
cwtl
addb
test
repz
jmp
mov
mov
mov
or
cmp
xchg
pop
and
add
add
and
mov
and
push
dec
dec
call
data16
jge
xchg
js
es
ret
fdiv
push
xor
enter
movsb
arpl
push
push
jne
dec
inc
sbb
mov
adc
mov
mov
test
adc
les
sub
fs
test
inc
mov
es
mov
and
inc
loopne
jmp
mov
add
inc
scas
imul
or
stos
mov
xorb
sbb
in
or
int3
dec
ret
add
test
movsb
sub
add
popa
adc
orb
inc
mov
repnz
adc
mull
add
push
add
mov
call
test
loopne
outsb
push
adc
shll
mov
cmpsb
add
mov
stos
push
mov
sub
xchg
or
filds
and
sbb
in
nop
inc
lock
xchg
adc
add
cmp
jo
push
addb
sub
xchg
scas
mov
inc
nop
cs
push
dec
sahf
dec
cmp
add
outsl
fs
inc
jo
xor
sub
mov
pop
mov
jb
in
pop
jne
and
mov
and
fwait
loopne
outsl
inc
and
inc
add
sbb
mov
sbb
push
mov
xchg
lret
add
adc
mov
mov
and
pop
jnp
push
or
ror
sub
add
inc
mov
addb
cwtl
or
or
dec
inc
jo
sbb
mov
les
addr16
jg
rorb
lock
in
jns
clc
xor
test
mov
jo
dec
loop
and
and
test
cltd
gs
adc
mov
cmp
adc
jl
pop
mov
sbb
add
fsubs
add
out
pusha
sbb
and
sbb
jbe
movsl
clc
mov
or
ljmp
cmp
pop
jl
or
and
dec
pop
pusha
jno
dec
cmpsb
repnz
pop
iret
imul
ret
and
sbb
adc
mov
inc
add
inc
adc
jmp
addl
sbb
outsl
adc
lods
add
mov
add
jecxz
sbb
aas
leave
mov
movsb
and
or
xor
fmull
enter
add
adc
or
xor
pop
adc
daa
sbb
mov
test
lret
mov
cmp
cs
inc
mov
xchg
pop
jg
jmp
lods
push
or
idivl
push
cmpsb
adc
loopne
iret
xchg
jae
xchg
cs
adcb
add
mov
dec
add
repnz
jmp
xor
loopne
adc
add
orl
or
mov
cmp
in
into
dec
shrb
cmp
rorb
vmread
mov
cmp
xorb
inc
enter
inc
sub
adc
data16
sub
sbb
and
xchg
das
cli
xchg
xor
sub
int
ret
and
into
cmpsl
movl
jbe
sub
js
popa
mov
nop
mov
xchg
shrl
int
xchg
mov
sub
or
aad
in
inc
or
ja
fmull
test
les
pop
in
js
dec
pop
pop
jl
dec
subb
or
pop
cld
int3
and
push
je
inc
mov
incb
div
inc
adc
rolb
pop
jne
adcl
or
sub
add
out
push
popf
nop
lods
loopne
dec
xchg
jo
mov
xor
jbe
adc
push
jl
frstor
push
mov
sarl
ficoml
popa
js
sub
mov
adc
push
add
add
add
out
pusha
mov
push
fadds
and
es
sahf
in
cwtl
cmp
sti
add
adc
sub
push
dec
movsb
pop
mov
pop
add
cmp
push
je
inc
and
movsb
shl
jmp
sub
inc
sbb
cmp
in
add
push
cmp
pop
int3
shll
inc
add
cmp
jle
shlb
dec
and
xchg
xor
movsb
insb
test
rclb
dec
push
adc
sahf
adc
cwtl
js
xor
and
mov
inc
lea
and
push
jle
adc
lock
mov
push
arpl
add
cmp
or
rcrb
mov
inc
adc
js
movsb
adc
mov
inc
add
inc
mov
fcoms
pop
or
testb
arpl
stc
in
push
in
sub
xchg
fcom
inc
sbb
add
dec
dec
sub
mov
int
js
lea
push
xchg
les
test
in
nop
sub
ret
and
shrb
enter
call
inc
hlt
mov
pusha
ljmp
dec
and
add
jno
int
pusha
fadd
adc
or
movsl
in
out
je
inc
dec
add
and
push
out
cmp
sub
jns
ljmp
xchg
pop
pop
push
test
popa
lcall
or
mov
inc
inc
cmc
nop
movsb
and
xchg
rcrb
fcom
inc
js
sbb
outsl
fsubrs
or
loopne
mov
sbb
push
ja
cwtl
push
xor
add
mov
push
xor
inc
loopne
or
test
push
push
sbb
cmp
and
push
cwtl
add
fidivrl
inc
in
addl
cmp
jg
test
call
sub
xor
cmp
adc
adc
push
loop
and
in
inc
push
mov
je
subb
out
xor
mov
mov
mov
cmpsl
insb
fs
gs
xor
insl
je
out
and
ret
cmpsl
sub
sub
in
mov
xchg
sub
fdivrl
adc
fidivrl
jae
mov
add
cmp
stos
xorb
pop
cmc
xor
nop
cwtl
and
adc
movsb
mov
scas
inc
cmp
xchg
cmpb
jg
dec
iret
add
imul
inc
mov
fldl
out
push
pushf
clc
cmpsb
or
add
jns
sarb
push
jo
cmp
in
mov
stos
push
mov
in
je
hlt
arpl
cwtl
dec
adc
daa
cmpsb
daa
mov
push
mov
inc
cmp
adc
push
mov
mov
les
or
mov
rolb
int3
mov
adc
sbb
jns
lahf
dec
and
in
or
pop
or
aam
adc
aaa
call
jnp
add
inc
enter
jbe
adc
popf
add
sub
xchg
and
data16
in
dec
ljmp
loop
xor
mov
cld
xor
loop
int3
pop
pushf
int3
adc
xor
cmp
fsts
adc
addr16
insb
jbe
ds
push
daa
pop
bound
inc
test
dec
sti
rol
jle
dec
mov
lock
and
and
pop
xor
dec
mov
adc
aam
sbb
daa
dec
inc
push
hlt
sbbb
inc
inc
lds
mov
cmc
jno
lods
hlt
adc
mov
push
push
mov
hlt
lock
inc
pop
pop
mov
pushf
inc
adc
test
mov
cmp
xchg
sbb
push
mov
test
imul
lret
fldl
dec
inc
sub
mov
jle
add
daa
add
mov
lds
cli
repnz
inc
rolb
repz
iret
cmp
xchg
lock
pop
je
icebp
and
fdivrs
inc
pusha
add
push
mov
test
adc
mull
jo
push
shrb
push
mov
sbb
cmc
pop
jb
mov
imul
nop
dec
aad
loope
dec
movsb
enter
faddp
fsubrs
pop
cld
xor
repnz
movsb
xchg
vmovupd
inc
xchg
test
into
js
push
cmp
pop
in
mov
sbb
rorb
add
add
rorb
mov
inc
lret
cmpsl
call
xor
or
mov
add
add
out
add
mov
fs
sahf
add
and
ds
je
xchg
add
mov
jno
lret
inc
jg
add
cmp
in
popf
xor
adc
aas
filds
lcall
jbe
jo
dec
adc
aaa
bound
and
inc
sub
xchg
sub
dec
cmp
out
test
xor
jl
adcb
and
mov
or
out
js
ret
add
cmp
xor
jno
ljmp
je
jne
jo
pushf
insl
sbb
in
adc
loopne
jae
mov
and
pop
cmp
ja
xchg
inc
lods
loope
add
mov
dec
jp
call
cwtl
mov
test
xchg
mov
jmp
push
jbe
xchg
push
cmp
daa
mov
fcoms
mov
cmp
and
and
popf
les
loopne
test
jnp
sti
cmc
xor
neg
ljmp
rorb
sbb
es
or
or
loopne
rorb
adc
mov
adc
xlat
cwtl
lahf
loopne
xor
out
mov
jmp
lret
sub
xchg
xchg
popa
cmp
ficoml
mov
and
cmpsb
scas
in
nop
dec
pop
pop
cs
mov
loopne
lret
popl
adc
repnz
add
std
pushf
ds
test
sbbb
inc
stc
aad
add
bnd
pop
cs
push
cmp
add
loope
jle
sbb
int
test
std
jg
inc
lods
inc
aas
add
cmp
xlat
testb
nop
int3
mov
jle
xchg
cmp
xor
push
popa
call
dec
addr16
and
and
mov
mov
shlb
repz
sti
frstor
xor
sub
cwtl
push
xchg
sub
jge
xor
mov
adc
aad
andb
andb
pushf
xchg
popl
add
arpl
in
xor
int
xor
inc
loopne
sahf
call
mov
or
push
mov
and
cs
cmp
leave
jo
imul
stc
ljmp
jmp
and
mov
and
inc
add
movzbl
lcall
cmc
mov
ret
push
mov
nop
sub
add
mov
dec
mov
add
orb
and
and
sbb
movsb
mov
sbb
scas
inc
test
daa
mov
test
sbb
test
mov
mov
push
cmp
and
rsqrtps
sub
icebp
push
nop
mov
imul
or
cmpsl
je
jb
mov
mov
dec
arpl
push
adc
and
jmp
dec
and
mov
jb
and
add
js
inc
loop
sub
pop
bound
sarb
add
inc
sbb
sub
jns
test
add
add
shl
and
gs
add
or
enter
push
mov
js
test
sbb
int3
add
mov
pop
leave
mov
xchg
add
pop
dec
xchg
cmp
test
jl
lcall
rorb
dec
and
xchg
dec
xchg
and
shr
sub
or
push
inc
add
sbb
mov
mov
test
mov
leave
dec
test
movsl
inc
and
pusha
shll
les
es
and
jno
lahf
cmp
add
jns
divl
nop
popf
inc
adc
leave
jo
icebp
js
add
out
jno
mov
add
xor
lock
sub
aas
mov
dec
and
mov
pop
and
xor
sbb
add
popf
push
add
xor
push
in
sub
cld
mov
jbe
mov
cmpxchg
aas
imul
and
in
and
pop
cmp
jmp
dec
mov
mov
enter
or
out
add
mov
jle
xchg
add
sbb
inc
mov
pop
fdivrl
and
or
mov
pop
test
loop
cmp
pop
cs
add
dec
ret
jl
fists
inc
lahf
mov
lcall
mov
adc
add
mov
add
xorb
jbe
fsubr
hlt
and
pop
mov
and
jbe
popf
and
bound
aam
int3
jns
sbb
add
mov
pop
call
add
inc
adc
cmpsl
jl
orl
jne
fsubs
inc
pusha
pop
ret
fwait
add
push
and
rorb
lods
fs
movsl
aas
mov
mov
cmp
lret
xorb
add
out
or
sub
push
or
pop
dec
test
xor
push
dec
or
outsb
rcrb
cmc
les
popf
mov
rcrb
nop
xorb
add
int
aad
rolb
and
enter
mov
push
xchg
add
test
dec
dec
test
or
in
pop
jnp
bound
pop
fsts
sbb
add
test
stc
cmpsl
lods
or
xchg
push
adc
mov
cmp
in
or
repz
int
and
out
imul
add
mov
icebp
jge
cs
dec
lret
or
xor
aaa
popf
stc
mov
inc
pop
lret
cmp
inc
or
fisubl
sub
roll
les
lds
lret
jno
dec
lock
sti
add
add
push
mov
pop
call
enter
dec
pop
dec
mov
or
pop
scas
clc
andb
push
adc
mov
fs
aaa
dec
fs
add
inc
shr
push
test
movsb
icebp
xor
ss
dec
and
lret
or
pop
jno
jb
dec
test
push
in
cld
sub
outsb
mov
pop
add
mov
add
out
push
mov
jb
add
jno
cld
loop
dec
test
cmp
push
into
roll
mov
cld
cwtl
ds
shrb
sti
nop
xchg
jo
add
mov
xor
fadds
sbb
sbb
shrb
lea
add
or
es
add
xor
mov
int
shrb
push
jecxz
xchg
adc
ss
add
sbb
js
dec
dec
nop
cwtl
inc
pop
lods
jge
add
mov
jge
mov
sub
sub
fadd
test
sti
mov
xchg
mov
sbb
in
push
add
sub
jns
sbb
or
add
push
add
xor
dec
xchg
jno
inc
cmp
mov
jae
pop
and
es
push
in
mov
or
mov
test
std
icebp
out
fadds
pop
and
in
mov
lcall
add
xchg
jecxz
mov
sub
lods
xor
sbb
add
mov
shlb
pushf
inc
sbb
xorb
loope
pusha
cmp
and
test
sbb
pop
cwtl
leave
dec
fsubr
xor
pushf
test
sbb
inc
mov
xor
mov
mov
out
jae
jb
int3
pusha
jo
inc
dec
dec
rcl
mov
mov
testl
nop
pushf
call
andb
outsl
and
call
hlt
xchg
mov
fsubl
mov
push
cwtl
jmp
pushf
imul
flds
sarl
pop
loopne
shlb
xchg
mov
sbb
mov
in
jle
call
pop
mov
stc
cmp
ret
mov
jo
into
les
nop
pop
aaa
mov
mov
mov
mov
rclb
popl
nop
fdivs
jl
push
add
fldpi
add
imul
pop
movsl
jp
jg
divl
and
cmp
push
movsl
push
or
mov
lcall
inc
pop
loop
dec
xchg
push
and
pop
or
xor
xchg
std
or
and
jg
and
fsubs
test
dec
mov
loop
add
push
test
cmp
cmpb
push
sub
dec
add
cmp
lcall
les
sub
movsb
jae
test
and
js
nop
inc
push
mov
dec
cmp
shll
xor
lods
mov
or
mov
add
icebp
in
jl
jmp
dec
loope
popf
lret
lds
add
arpl
or
ret
sub
movsl
pop
je
in
outsb
dec
jno
xchg
fdivs
pop
inc
jns
mov
enter
xchg
lret
and
or
and
dec
cmp
pushf
mov
lock
xchg
fcoml
cmp
jp
jo
insb
xchg
xor
aaa
push
icebp
jbe
outsl
xor
ret
xor
sbb
lcall
in
jecxz
pushf
pushf
mov
and
fmull
les
cmc
xchg
mov
mov
lcall
dec
add
daa
outsl
dec
jp
call
das
mov
mov
sbb
add
into
outsl
cli
cwtl
enter
xchg
and
inc
lds
fnstcw
movsb
lods
aam
dec
sub
lea
test
arpl
dec
or
sub
in
add
ficoms
ret
lods
mov
mov
xchg
inc
mov
mov
fdivrs
or
xor
mov
sub
das
cltd
fdiv
aam
out
add
repz
pop
cltd
jae
sahf
mov
and
lock
test
sub
rolb
fdivrs
shl
mov
cmp
adc
into
fwait
sub
imul
imulb
xchg
test
leave
adc
lock
or
dec
enter
sub
jmp
sbb
nop
xchg
mov
jnp
imul
test
arpl
xor
mov
adc
int
fs
mov
ja
cmp
faddl
rcl
push
jbe
add
mov
aad
rolb
add
mov
loopne
adc
aam
enter
outsb
insb
inc
pop
cmp
cmpb
pop
inc
mov
cld
and
jo
mov
push
es
in
sub
pop
fstpl
add
cmp
xchg
dec
add
stos
out
and
mov
cltd
test
in
inc
push
test
mov
rorl
mov
call
lcall
fmull
es
dec
add
and
inc
inc
mov
mov
out
sahf
addl
cmpb
lret
and
scas
dec
add
cltd
es
clc
and
push
xchg
cmpl
cmp
cmc
stos
jp
sub
shll
enter
xchg
ret
in
cmc
pminsw
in
inc
cmp
adc
sbb
out
xlat
push
mov
lds
repnz
mov
inc
push
pop
aas
and
in
pop
inc
ja
sbb
or
mov
pop
dec
test
xor
adc
pushf
or
adc
xor
mov
test
xchg
push
int3
test
and
add
das
je
mov
or
data16
aad
lcall
adc
inc
inc
push
hlt
fs
xor
mov
btcl
loopne
sbb
or
test
ljmp
jns
sbb
lock
shrb
mov
int
out
or
add
fmull
pop
lock
add
es
xor
or
jge
mov
sub
pop
add
jnp
inc
mov
inc
pop
cld
sbb
jl
orb
loop
jnp
jg
dec
out
leave
int
push
sub
data16
xchg
cltd
add
and
outsb
outsl
jno
mov
hlt
sbbb
lahf
add
mov
push
je
outsb
repz
rcrl
divb
cwtl
mov
sbb
add
cmpsl
add
xor
jp
adc
test
call
mov
lods
mov
mov
add
mov
out
movsl
xor
sbb
sub
in
xchg
add
in
orb
inc
arpl
fwait
or
and
icebp
pop
repnz
out
xor
mov
add
sub
mov
adc
xchg
jle
mov
or
xchg
les
rorb
cli
orb
in
push
or
movb
adc
cld
sbb
loopne
outsl
mov
lock
adc
inc
ret
mov
add
adc
xor
aas
add
call
xchg
mov
shrl
dec
inc
add
repz
mov
clc
loopne
repz
data16
hlt
and
adc
add
jmp
adc
test
imul
pop
xchg
mov
mov
or
in
sub
mov
lods
ds
pop
add
fwait
sub
leave
lds
and
popa
jo
adc
jmp
adc
mov
lods
and
out
adc
pop
xchg
into
rorb
and
add
mov
inc
and
adc
mov
jno
sub
lcall
js
or
shl
sbb
rcrb
xor
sbb
test
mov
and
es
add
scas
movb
loope
push
arpl
jmp
or
dec
sbb
ret
notl
aas
jmp
and
xchg
mov
mov
int
cli
mov
orb
xchg
adcb
inc
in
and
cld
pop
adc
lock
clc
xor
mov
and
and
pop
js
inc
dec
cmpsl
inc
fs
adc
std
jns
pop
fsub
clc
mov
arpl
adcl
jnp
push
pop
pop
add
aas
push
pop
cmpsl
mov
mov
mov
dec
jge
and
push
cltd
rcrb
in
out
ds
notl
jb
mov
in
into
dec
or
mov
lock
dec
shll
mov
xor
incl
in
pusha
sub
dec
nop
mov
mov
inc
pop
mov
xchg
mov
dec
dec
in
push
add
cmc
leave
sbb
cmp
lock
fwait
sbb
sbb
sbb
mov
in
in
mov
push
jb
cmpsl
push
mov
xchg
es
iret
icebp
xchg
sbb
push
shrl
cmpsl
cmp
imul
dec
adc
bound
sub
jg
or
out
ret
dec
pop
enter
push
scas
and
movsl
xchg
icebp
xor
mov
out
mov
or
imul
jg
shr
mov
orl
shll
xchg
sub
add
pop
xchg
icebp
int3
lret
add
add
into
std
sub
push
adc
xor
test
adcl
enter
push
ret
or
add
fwait
pop
adc
push
xchg
ds
xchg
pop
enter
pop
and
fwait
shrl
shlb
cwtl
es
xchg
shrl
or
xchg
andb
addb
dec
mov
incb
popf
int
adc
aas
cmp
mov
sbb
lahf
adcb
clc
add
icebp
subl
adc
sbb
loope
aaa
push
or
ret
xor
pop
inc
cmp
cpuid
fsubrl
push
push
aad
test
add
faddp
xchg
lret
mov
mov
mov
cmp
push
lods
lds
pop
jmp
fldenv
cmp
xor
mov
icebp
test
fisubl
movups
ficoms
xor
test
adc
cwtl
shl
in
stos
pop
adc
mov
repz
sbb
cmpsl
mov
nop
pop
pushf
xchg
adc
stos
mov
mov
sbb
mov
add
clc
sub
lods
out
and
and
adc
pop
adc
mov
pushf
jns
es
push
rcr
pop
and
lret
inc
adc
sbb
cs
mov
jo
cmp
mov
sub
adc
dec
dec
cmp
jl
cwtl
scas
dec
loope
test
mov
mov
sub
loope
fwait
mov
push
mov
pop
xchg
or
shrb
xchg
sbb
inc
icebp
lahf
jecxz
push
push
and
out
cmpsl
aas
pop
test
in
dec
inc
hlt
inc
les
xor
or
popf
dec
push
sbb
inc
mov
mov
sub
mov
push
fiaddl
sub
test
fildl
add
shll
pop
and
repnz
mov
cwtl
or
dec
fadds
and
jmp
xor
mov
int3
popl
xor
inc
inc
and
jnp
push
hlt
aam
inc
lret
and
and
inc
addb
das
mov
add
inc
or
inc
std
and
in
enter
dec
jecxz
mov
xor
dec
xchg
incb
sbb
sub
out
movswl
mov
std
mov
arpl
mov
fs
mov
jl
adc
add
mulb
sbb
stos
lret
addr16
gs
mov
pop
mov
or
std
addr16
stos
xor
xor
subb
int
push
jno
sbb
inc
cmp
ljmp
and
adc
pop
repnz
repnz
xor
add
push
sub
jno
xchg
test
pop
mov
int
mov
mov
cwtl
filds
gs
cmp
cwtl
and
stc
or
popf
lods
mov
inc
mov
sub
inc
js
pusha
dec
xchg
dec
add
cmp
jg
pop
xchg
xor
cmp
push
out
inc
pop
mov
lahf
xor
mov
fdivrl
jecxz
fmul
nop
add
pushf
enter
dec
hlt
test
mov
sbb
mov
andb
mov
mov
loop
add
push
out
cmc
mov
cmp
movsl
jo
std
sbb
or
adc
sub
cld
mov
mov
mov
in
loop
js
or
les
or
sbb
and
pop
add
repnz
cltd
fiadds
cmovbe
add
ret
push
push
or
sub
pop
inc
and
daa
jne
xchg
push
pop
push
aam
stos
dec
shl
cmp
je
dec
push
dec
leave
inc
pusha
orb
enter
mov
sti
nop
in
stc
lods
mov
and
mov
fs
movsl
imul
jo
add
mov
and
ds
pop
jnp
mov
jnp
pop
orl
add
push
mov
sarb
cmp
cmpsb
adc
pop
mov
mov
mov
jl
add
jno
cmp
mov
inc
loopne
faddl
mov
mov
xor
icebp
inc
sbb
aam
pop
in
repnz
jnp
pop
mov
add
dec
add
and
cmp
xchg
cs
sub
pop
inc
aam
inc
scas
push
add
pop
adc
daa
mov
les
je
xor
es
or
in
push
mov
mov
lret
mov
jecxz
inc
push
pusha
inc
insl
pop
ret
push
pop
lods
sub
imulb
inc
mov
sbb
xchg
pop
mov
cmpsl
mov
jb
dec
add
out
sbb
pop
mov
add
or
mov
adc
icebp
add
and
pop
enter
leave
jmp
mov
mov
mov
sar
jb
mov
push
or
push
jg
sbb
mov
pushf
pandn
int
addr16
inc
in
inc
shlb
xchg
inc
add
mov
or
imul
mov
mov
push
pusha
lret
inc
cmp
movsb
ret
jne
sub
push
add
add
push
testb
pusha
or
pop
mov
mov
addl
xor
testl
rorb
in
aas
xchg
cmpb
sahf
push
and
adc
dec
jne
pop
mov
sub
test
pop
and
mov
sub
loopne
shlb
mov
stos
cs
aad
test
dec
add
jne
xchg
loope
enter
fistpl
popa
and
mov
mov
popa
cmp
bound
add
stc
push
push
adc
in
fs
adc
ficoms
add
or
rcll
je
inc
adc
xor
pop
mov
shll
rcr
mov
adc
dec
sub
les
sub
daa
jle
xchg
push
add
add
fstl
jb
push
sbb
movsb
js
xchg
xor
sub
mov
or
shlb
or
jno
cmp
shl
in
jae
sbb
mov
sar
adc
jne
mov
xor
xchg
lds
add
fiaddl
jb
sbb
mov
fidivrl
pop
cmp
sbb
xchg
push
mov
add
ljmp
out
cmpb
cmpsl
cmp
mov
xchg
mov
dec
mov
sub
dec
cwtl
pusha
mov
mov
popa
xchg
dec
push
mov
xchg
pop
fmuls
cmpsl
sbb
mov
sub
movhps
dec
push
xchg
push
arpl
push
fnstcw
xchg
sbb
and
mov
xorb
or
dec
leave
sti
sar
jne
sub
ret
jo
mov
lret
mov
pop
imul
out
hlt
fldt
shlb
sarb
xchg
xchg
pop
add
inc
push
pushf
fldt
mov
ss
xchg
adc
mov
rcll
pushf
push
add
mov
loopne
adc
cwtl
adcb
mov
and
cmpb
push
js
add
push
test
fdivrs
adc
rorl
sub
adc
cltd
jne
add
fidivrs
pop
std
cmpsb
dec
adc
add
int3
pop
int
stos
push
add
lods
test
sbb
pop
jne
pop
mov
pop
orl
dec
mov
inc
sub
add
mov
mov
test
fmuls
jp
or
sub
push
shrb
and
aad
add
sub
std
push
push
xchg
mulps
add
add
mov
iret
mov
add
adc
mov
fdivs
sub
sub
xchg
into
enter
sbb
cmp
pushf
les
sub
repnz
mov
jne
or
leave
inc
test
in
adc
psllw
outsl
inc
sbb
lret
dec
fwait
pop
and
fcompl
ja
cwtl
int3
and
mov
or
or
jne
imul
rorb
ret
lds
push
cmp
xchg
adc
inc
shll
adc
mov
or
les
xchg
xchg
nop
loopne
mov
fisttpl
or
aas
add
je
ljmp
or
andl
xor
test
lds
fidivrl
mov
or
dec
adc
cmp
dec
out
mov
lods
mov
adc
inc
mov
ret
popa
mov
adc
xlat
inc
pushf
or
lcall
sbb
jecxz
addl
inc
sub
rorb
xor
cmp
or
and
adc
aad
ficoms
sub
lcall
jbe
sbb
sbb
xchg
or
mov
sub
or
pop
nop
popf
test
dec
mov
mov
jb
sub
sbb
xor
inc
lock
push
mov
imul
inc
cltd
xchg
pusha
sub
dec
cwtl
adcb
add
and
cli
add
shl
xlat
or
sahf
mov
inc
adc
add
sbb
jmp
sub
std
sbb
aam
lret
xor
in
fnstcw
cmpsl
mov
mov
or
add
stos
and
sahf
faddl
add
mov
mov
cmp
shl
imul
mov
test
into
add
das
dec
int
shll
add
push
daa
fisttps
xor
out
pop
pop
inc
cmp
dec
hlt
lret
jbe
add
mov
xor
rorb
pop
sar
in
add
xchg
xchg
out
movsl
xchg
scas
adc
pop
mov
add
push
add
jb
xor
inc
add
mov
or
loopne
or
add
jbe
movsl
and
ret
mov
fstpt
pop
pop
divw
pop
xor
or
cli
cmp
add
cltd
dec
sti
and
jno
out
call
add
mov
test
stos
add
fs
cmp
subb
pop
pop
xor
or
test
sub
pop
mov
sbb
mov
inc
add
adc
and
cmpb
add
add
mov
sub
adc
or
add
push
test
xor
sub
inc
cmp
cmc
lret
add
push
popa
scas
negl
fdivl
inc
inc
out
daa
mov
clc
stc
les
jne
outsb
add
pushf
sbb
mov
ret
mov
pop
mov
cli
pop
pop
push
daa
mov
cmp
lret
mov
add
cld
movsb
xchg
sahf
fisubs
cmp
data16
outsl
inc
out
out
test
dec
add
pop
jns
mov
add
xchg
orb
rcrb
add
rcrb
xchg
add
or
lret
sub
jne
add
bound
je
test
fldenv
insl
push
jmp
loopne
push
sub
test
orb
push
leave
adc
aas
push
inc
push
xor
or
add
dec
sti
int
loope
push
push
xchg
xor
mov
call
add
movsb
lock
rcrl
in
add
test
mov
or
xor
xchg
shr
repz
dec
push
fisubrl
nop
ficomps
lods
pop
aad
pop
dec
push
js
lahf
mov
jle
hlt
cmp
fildl
add
or
mov
xchg
xchg
push
daa
shl
jnp
cmp
loope
out
add
repz
je
std
sbb
mov
movsb
inc
push
and
mov
sbb
inc
test
repnz
pop
fcoml
lods
sbb
jp
aas
add
push
pop
stos
add
sbb
incb
dec
inc
pop
and
shll
mov
and
lds
jb
add
lcall
add
xchg
out
mov
and
jmp
mov
dec
jle
repz
xchg
ds
outsl
xchg
adc
je
fbld
js
add
gs
push
dec
jns
push
push
jb
add
xor
xchg
cwtl
testb
xchg
add
jnp
sbb
dec
cmpl
out
cmp
and
ljmp
push
add
dec
test
je
aas
and
pop
mov
imul
dec
dec
cmp
rorl
add
sbb
add
and
add
add
lock
pop
loope
xlat
ret
sbb
cmc
lods
add
pop
add
jmp
dec
dec
jae
shll
dec
mov
mov
mov
pusha
inc
dec
fsub
jp
pusha
cmc
mov
add
or
movsl
cmp
and
add
hlt
adc
xor
repnz
jbe
call
test
enter
mov
xorb
jbe
sub
ljmp
sub
dec
add
call
repnz
add
jecxz
mov
add
mov
and
cmp
add
clc
add
subl
xlat
ljmp
pop
xchg
pop
fildll
fsubp
ja
outsb
aas
addl
cmp
aas
push
add
hlt
adc
sub
data16
mov
add
or
mov
pop
popf
cmp
dec
dec
std
subb
adc
pusha
or
rolb
jmp
je
mov
test
insb
loopne
and
hlt
mov
clc
push
push
in
push
mov
push
add
mov
inc
out
pop
pop
in
add
lcall
nop
inc
jmp
add
dec
pop
add
fidivl
add
js
int
mov
and
and
cmp
ds
jbe
movsl
loop
scas
orl
mov
hlt
mov
movsl
sub
add
mov
push
cli
add
push
addb
clc
loopne
add
sbb
mov
imul
push
imul
fmul
enter
jne
add
daa
xchg
int
add
pop
pop
movsb
imul
lea
popf
fmul
pop
dec
jb
and
and
push
lret
add
shlb
orb
js
je
insb
fildl
sub
dec
sub
lods
roll
cmc
das
cmpsb
fbstp
loopne
add
add
sbb
imul
add
xlat
jb
popa
ljmp
arpl
mov
jge
addl
ljmp
mov
lods
in
push
add
xchg
jmp
xorl
movsl
pop
into
sbb
mov
idivl
pop
or
mov
sarb
lret
cmp
or
cmp
xor
mov
ljmp
orb
push
or
pop
out
jg
cld
inc
cmp
jnp
xchg
je
movsb
test
push
inc
push
pop
out
imul
push
scas
test
movsb
sbb
dec
cwtl
faddl
mov
add
dec
push
lret
dec
pop
test
cli
jae
cmp
pop
popa
jo
jg
js
es
sub
sarl
lds
and
inc
add
loop
arpl
jo
or
dec
imul
out
or
add
call
cmp
xchg
mov
or
enter
adc
xchg
insl
add
inc
repnz
clc
iret
addl
cmpsb
add
leave
test
sbb
mov
xchg
testl
jbe
xor
imul
ret
cmpb
jmp
sub
leave
negb
add
nop
lods
lret
insl
mov
add
push
mov
and
xchg
in
add
cli
inc
in
xchg
mov
pop
loopne
add
and
add
add
imul
or
lds
add
fcompl
pop
mov
adc
in
nop
shl
mov
inc
in
outsl
out
int
xor
add
dec
test
lcall
int
adc
lock
std
dec
push
adc
cmpsb
insb
pop
add
add
cmp
into
add
pop
addw
jo
cmp
jb
sub
add
jle
imulb
arpl
cmpsl
in
mov
incb
aas
jge
test
mov
lahf
cmc
es
xor
insl
jle
add
in
gs
jecxz
add
xchg
sbb
lcall
loop
rorl
xchg
cs
test
add
dec
add
repnz
mov
pcmpeqw
je
inc
pop
sub
mov
fiadds
out
adc
push
out
adc
iret
fsubl
mov
negb
addb
sbb
stos
pop
pushf
call
or
mov
mov
dec
push
mov
sbb
pop
push
lock
in
movsl
cmp
add
inc
bound
sarl
xor
add
fisubl
jle
scas
and
sti
daa
sub
add
sub
jnp
mov
nop
and
push
mov
cmp
aam
mov
cli
sub
xchg
sbbb
pop
push
psubusb
xchg
insb
adc
out
leave
enter
pushf
jno,pn
pusha
cmpb
fs
cmpsb
add
sbb
jl
add
fcmovnb
add
or
push
and
add
inc
popa
icebp
fsubs
rorb
cli
sarl
in
aas
test
and
in
add
mov
cmp
rol
and
cmp
out
or
test
push
jl
repnz
add
sarl
xchg
sti
movsl
pusha
in
adc
out
test
inc
out
jae
pop
pusha
cwtl
pop
and
jns
lods
aaa
pop
push
pop
jno
lahf
das
fimull
je
scas
xor
sbb
adc
pop
pop
sbb
movsl
xchg
push
cmpl
jmp
fwait
sub
sub
xor
xlat
pop
add
lds
ds
test
es
pop
shrb
pop
int3
test
pop
lret
mov
lcall
mov
aas
mov
add
cwtl
frstor
adc
pop
pop
pop
xor
clc
push
test
xorb
sbb
aad
xorl
clc
xchg
xchg
adc
push
cmp
xchg
adc
scas
cwtl
sets
js
inc
cmpsb
jecxz
rcrb
jmp
outsb
push
add
call
adc
sbb
es
xchg
jecxz
popf
lods
enter
cmpsl
push
lahf
lret
add
rcll
push
fcoms
add
push
inc
fistpll
fwait
lock
cs
xor
dec
addr16
call
mov
push
loope
stos
movl
jns
mov
mov
sub
inc
jle
inc
push
inc
pop
push
js
idivb
lods
cmp
or
mov
add
sub
and
add
cmp
jp
std
rcr
aaa
push
cmp
testl
add
mov
pop
push
mov
test
pushf
popf
jo
jmp
and
add
scas
inc
js
nop
clc
dec
mov
dec
pop
pop
add
push
add
xchg
ja
pop
js
add
lret
and
inc
ds
rolb
mov
mov
cmp
lds
adcl
add
stos
mov
mov
push
jl
xchg
add
xor
lret
cwtl
add
push
or
mov
cmp
xchg
nop
pop
loopne
push
adc
pop
addr16
adc
add
aas
popa
xor
pop
icebp
int
incb
cmp
sahf
outsl
arpl
shll
add
lcall
lods
adc
sub
std
mov
add
mov
xchg
mov
add
pop
fnstsw
xlat
jno
ljmp
scas
mov
adc
loope
cld
pop
aam
insl
push
mov
ret
add
pop
insb
rclb
dec
inc
or
mov
mov
mov
inc
mov
jne
jecxz
jle
or
pop
loop
in
popa
push
mov
lcall
push
test
popl
nop
xor
pusha
out
fisubrl
je
fstpt
xchg
mulb
sbb
insl
add
test
push
mov
jp
mov
loope
cli
and
addb
sbb
stc
push
js
push
rclb
mov
lret
jo
shl
sbb
lcall
add
or
cmp
push
jnp
add
iret
mov
cmc
jl
out
ret
test
mov
mulb
sub
lods
or
andb
add
add
push
fstpt
add
divl
mov
add
or
aad
mov
mov
pop
fiaddl
repz
lea
inc
aas
push
add
jmp
xchg
loop
js
add
fsts
add
js
or
xor
lret
cmp
enter
inc
dec
fidivrl
aas
add
adc
add
jge
xchg
lock
add
stos
movsl
outsl
or
fildl
dec
pushf
jl
xchg
pop
add
add
push
sti
xchg
das
mov
and
ljmp
cmc
dec
addb
push
out
and
mov
roll
adc
adc
push
xchg
pop
movsl
loop
inc
adc
out
fcmovb
cmp
insb
add
lods
sub
or
or
cmp
test
loop
lods
add
mov
dec
shll
adc
mov
xchg
popf
mov
mov
sbb
sbb
bound
mov
loopne
add
arpl
ror
adcb
add
insb
cli
mov
pop
sti
push
fsub
add
cmp
mov
ja
adc
aaa
dec
and
add
push
push
fdivl
iret
jns
imul
mov
sahf
rolb
in
fs
pop
out
add
dec
xchg
popa
sub
push
adc
in
xor
into
stc
nop
mov
or
fcomps
inc
loopne
out
imul
adc
in
daa
mov
mov
and
ljmp
scas
pop
sbb
mov
fdivp
add
aam
xchg
shl
jbe
xchg
mov
arpl
jo
add
add
add
pop
pop
adc
shlb
in
test
hlt
adcb
inc
lods
add
cmpb
test
or
sti
rcrb
xor
xchg
mov
shl
mov
sbb
clc
sbb
or
sahf
inc
adc
jle
and
add
and
add
mov
ret
jg
adc
mov
inc
lock
jno
jecxz
pop
fcoms
mov
add
imul
clc
imul
lds
add
cltd
rcll
stos
sbb
jl
rorl
pop
imul
pop
add
loope
in
or
fidivs
jne
hlt
add
into
jecxz
mov
pop
fdivs
das
mov
cmpsb
and
jmp
xchg
sbb
mov
xchg
pop
stos
add
repnz
xchg
or
fisubl
cmc
pop
pusha
je
lea
mov
sti
stos
mov
stos
repz
xor
test
add
ret
inc
pop
sbb
pop
or
push
and
jp
add
aas
das
add
add
xor
and
movsl
jns
add
es
out
mov
inc
jb
loopne
push
mov
repnz
push
xor
xor
cmpsb
pushl
add
rcrb
es
xchg
lea
test
cmc
mov
add
outsl
cmp
xchg
nop
orl
push
pop
fsts
fcomps
bound
xchg
arpl
and
aam
push
jecxz
xchg
sub
pop
and
stc
je
or
add
fstl
movsl
sarb
jno
nop
jmp
adc
hlt
jl
clc
mov
test
movsl
pushf
push
ds
in
add
inc
jmp
mov
ss
dec
movsb
xchg
fs
push
add
push
jb
js
pop
jle
push
add
and
push
adc
add
pushf
les
repnz
add
ret
insl
fbld
xchg
sub
nop
cmp
das
push
mov
icebp
inc
and
cmc
mov
push
inc
sub
and
jbe
mov
pop
add
sbb
cld
pop
jg
mov
fdivs
adc
scas
rol
iret
jae
jns
xchg
aam
push
outsb
scas
in
add
sbb
movb
jbe
stc
mov
cmp
movsb
nop
xchg
insb
push
push
cmpsb
cs
add
pop
ja
cmp
pop
dec
pop
fimull
imul
sbb
popf
std
pushf
je
lcall
lock
sahf
ret
add
mov
fisttpll
push
stos
mov
sbb
adc
add
stos
filds
xchg
mov
or
pop
xchg
add
lcall
jns
push
xchg
rcrb
shll
xchg
inc
int3
les
pop
push
pop
or
dec
sarl
mull
mov
js
repnz
add
xor
outsl
lds
test
inc
adc
insl
sbbl
cwtl
push
shrl
push
and
orb
movl
aaa
out
jae
mov
xchg
mov
and
mov
adc
add
jns
loop
add
cmp
icebp
add
inc
adc
jnp
daa
mov
and
stc
enter
push
adc
add
clc
dec
dec
dec
fadds
insb
xchg
imul
lods
mov
adc
sbb
js
push
sub
xor
pop
xchg
hlt
mov
jmp
xchg
jmp
fmull
push
sub
rol
das
add
idivl
jae
add
arpl
sbb
fnstsw
lcall
enter
inc
iret
ds
stos
xor
lock
into
pop
adc
leave
aad
rcll
adcb
in
push
xchg
or
mov
xchg
add
or
fcmovne
lock
or
adc
hlt
hlt
mov
lods
sbbl
pop
outsb
mov
adc
xor
push
and
and
push
add
andb
hlt
mov
mov
test
into
pusha
add
cld
stos
cmp
loop
sbb
in
mov
add
addl
add
cld
aam
enter
mov
pop
rcrb
push
xchg
adcb
push
jb
mov
inc
add
ljmp
pop
push
and
insl
fimull
push
or
dec
cld
sub
dec
ljmp
clc
jg
rol
pop
mov
dec
decb
lock
add
and
sti
add
mov
shr
lds
sub
cltd
orb
and
mov
mov
xchg
mov
mov
xchg
movl
fcoml
xor
iret
fwait
aaa
and
movsl
das
or
xchg
and
repnz
daa
xor
rol
jl
orb
mov
je
pop
or
lret
out
mov
cmpsb
push
imul
arpl
mov
pusha
inc
je
cltd
dec
orb
inc
adcl
enter
je
inc
xor
fcomps
sub
and
es
mov
xchg
adc
xor
jns
iret
add
je
andl
xchg
xchg
mov
add
xchg
pop
lea
xor
outsl
scas
sub
outsb
mov
movsb
push
fcmovbe
roll
loopne
push
add
push
mov
jns
cmp
sti
mov
rolb
xorb
push
leave
rolb
ja
into
out
dec
lret
loope
test
sbbl
add
in
mov
pop
repnz
fidivs
int3
scas
sub
arpl
cmpl
sub
notb
sub
imull
cmp
int3
cmp
sub
and
daa
test
dec
loopne
enter
test
dec
dec
aam
sbb
and
dec
and
dec
and
and
and
adc
jp
sbb
xor
test
test
and
and
inc
adc
pop
and
popf
xchg
nop
cmp
push
and
scas
cwtl
nop
stos
test
adc
and
or
popf
adc
sub
jl
mov
dec
push
bound
insb
jmp
mov
nop
mov
jp
pop
mov
sub
sub
inc
add
and
fstpl
test
push
mov
popf
decl
add
dec
inc
lea
xlat
lret
out
mov
cld
mov
pushl
jle
verw
xchg
pop
push
cmc
out
jb
lahf
jns
insb
sbb
mov
dec
shl
pop
out
add
inc
fdiv
ret
xchg
ljmp
adc
pop
or
jge
mov
push
into
cmp
mov
jns
ret
add
inc
dec
lock
adc
or
popa
pop
push
fadds
fidivrl
cmp
inc
notb
icebp
mov
cwtl
roll
dec
cmp
mov
popa
loop
pusha
dec
mov
sbb
movsl
cmp
and
in
and
sub
mov
out
inc
mov
mov
out
fldl
push
push
push
cmp
fldt
out
sbb
inc
push
lods
mov
inc
pop
testb
cmp
outsl
add
movsb
sub
add
js
xor
push
add
rcrb
bound
push
lock
or
fisttps
sbb
fs
in
ds
add
add
fidivrs
push
push
pusha
push
push
sbb
fsubl
pop
pusha
add
lea
adc
sub
jno
pop
incl
pop
insb
int
adc
or
push
mov
fnstcw
add
push
lods
aam
les
aad
addl
add
and
inc
ja
xor
pop
xchg
xor
sub
adc
in
test
pop
adc
pop
push
rolb
inc
or
jne
cmp
add
lock
mov
stc
lret
out
jns
add
or
test
add
enter
mov
push
pop
inc
cmp
loope
inc
cmp
add
mov
cmp
cli
subb
ret
lods
pop
add
call
iret
addb
clc
push
sbb
adc
je
pop
inc
add
xor
add
mov
sbb
xchg
imul
into
cmp
dec
loope
jb
ja
cwtl
inc
or
hlt
add
pop
xchg
ds
mov
cmp
jb
dec
lcall
shll
stc
lods
push
les
cmp
add
xorb
add
outsl
jmp
mov
inc
add
jl
pop
pusha
cmp
push
add
stos
ret
scas
mov
data16
add
mov
pop
loopne
add
mov
call
mov
or
and
icebp
fidivrs
jbe
js
or
or
and
xor
or
jns
add
adc
cs
cld
movsb
add
cmpsl
lods
xorb
outsl
jne
out
int
comiss
mov
inc
loopne
cs
push
jmp
daa
sbb
lcall
dec
jl
mov
adc
mov
loope
lods
mov
stc
dec
les
and
add
dec
es
mov
pop
mov
or
cmp
mov
and
dec
loop
in
imul
push
les
xlat
mov
mov
add
mov
pop
jo
jecxz
loope
repz
int
add
imul
mov
push
clc
lods
jb
out
loopne
mov
pop
out
roll
cmp
cld
mov
sub
aad
movsl
fcompl
push
ret
inc
sbb
pusha
pop
in
xor
add
push
add
pop
rol
sarb
sbb
js
incb
jbe
sbb
add
jb
add
fidivrl
sahf
lock
dec
aad
add
add
fbld
push
cmp
pop
or
loopne
mov
or
call
aas
int3
or
pop
mov
in
push
fistpll
addl
add
sub
cmpsl
mov
nop
test
iret
add
or
pop
lods
dec
sub
mov
or
xor
cmpsb
dec
cmp
cmp
lods
aam
sub
cwtl
pop
pop
ja
ljmp
jle
pusha
inc
fists
pop
add
and
lods
adc
out
add
jnp
fwait
or
cwtl
ja
fldl
pop
scas
fimull
test
add
dec
lret
cli
psubusw
jae
in
add
sub
cmpsl
dec
xorb
leave
jne
insl
add
mov
mov
gs
push
push
mov
push
clc
enter
test
add
in
sbb
xchg
aas
pop
lock
imul
push
xor
dec
add
push
cmp
sub
pop
add
loope
mov
mov
cmp
add
jno
mov
sbb
add
mov
shlb
lahf
imul
fs
add
push
mov
scas
jns
xchg
inc
in
add
cmp
add
outsl
in
mov
mov
fcomp
sbb
jge
add
sub
and
hlt
out
pop
dec
xchg
mov
or
testl
pop
pop
sub
inc
mov
sbb
add
enter
not
into
add
inc
shrb
loopne
sbb
test
add
into
mov
in
ret
push
movsl
and
add
fbld
test
daa
and
into
enter
or
sub
add
pop
mov
or
adcb
ja
pushf
imul
cmp
cli
addl
fisubrs
imul
jae
add
jno
xor
mov
mov
dec
pop
push
arpl
inc
push
imul
iret
test
subb
adc
add
mov
dec
dec
push
movsb
cmpsb
add
sahf
jo
add
add
adc
and
fmull
call
xor
pop
jge
ljmp
int3
subb
jl
add
pop
xchg
and
ret
push
hlt
lock
loopne
push
sub
sbb
fistpll
push
mov
and
or
fs
data16
dec
inc
add
call
add
or
loop
sub
or
cmp
clc
repnz
lock
pop
jne
shl
and
mov
shlb
xlat
xchg
or
mov
xor
mov
or
and
sub
stc
hlt
leave
jecxz
std
sahf
xchg
add
inc
add
into
sbb
xchg
dec
jmp
add
adc
add
push
lods
movl
shll
test
push
aam
sub
pop
or
pop
push
cmp
scas
sbb
inc
mov
loopne
int3
and
jbe
div
add
outsb
scas
stc
jecxz
dec
fadds
ds
push
adc
mov
in
mov
pop
add
ja
sub
repz
and
bound
cmp
lahf
dec
ret
cmpsb
push
add
inc
pusha
sbb
add
jecxz
dec
data16
add
ficomps
and
sub
xchg
cmpsb
xor
pop
ret
mov
mov
xorb
rolb
mov
int
shl
and
int3
mov
into
lahf
aad
and
ljmp
jmp
mov
adc
mov
mov
cmp
xor
inc
mov
lcall
je
fsubrl
sub
adc
rcl
gs
es
int3
xor
xchg
ja
dec
mov
cmp
inc
push
cmpsb
cmc
sti
scas
dec
add
mov
dec
or
add
xchg
test
add
or
mov
jmp
enter
mov
and
push
or
sbb
mov
fcompl
xor
xchg
push
scas
lret
push
cmpb
outsl
jo
add
inc
andb
mov
sbb
in
add
and
popf
repnz
jb
mov
lret
test
int
aaa
ficoms
xor
inc
xchg
pop
je
repnz
pop
pop
mov
enter
mov
xor
ljmp
or
mov
and
mov
lret
lcall
das
int3
xchg
sarl
and
mov
nop
sub
or
mov
xchg
loopne
inc
xchg
xor
fldenv
mov
cld
test
movsb
add
hlt
mov
fadds
push
xor
dec
inc
popf
or
cmp
dec
int
add
cmpsl
hlt
pop
xor
pushf
jae
push
into
sahf
sarb
sbb
mov
add
lds
int
fsubs
jle
es
or
in
add
test
je
push
out
add
jmp
enter
std
add
fimull
in
cmpb
out
xor
dec
loope
mov
pop
repnz
xchg
push
sub
iret
es
and
aad
mov
add
ret
add
and
mov
xchg
and
in
adc
mov
adc
inc
mov
mov
pop
pop
mov
lock
rclb
fsubl
repnz
je
add
sbb
mov
addl
in
aam
test
cmp
mov
xchg
lock
push
fxch
sbb
mov
or
in
add
and
add
pushf
xchg
dec
mov
xorb
push
imul
dec
clc
push
add
in
jmp
and
mov
pushf
bound
sub
mov
mul
cmp
add
or
add
add
jg
nop
in
xchg
push
add
adc
add
push
cmp
test
adc
ja
js
and
inc
test
testl
inc
or
les
sbbb
add
hlt
das
lea
lret
add
jo
cltd
sbb
sbb
add
and
lret
xor
cmp
add
mov
mov
add
lcall
push
jmp
adc
cmpb
clc
int3
add
call
xor
cmp
add
push
lret
clc
add
sub
xor
cmp
sub
movhps
sbb
stc
inc
out
mov
mov
xchg
mulb
les
mov
test
inc
and
add
push
mov
inc
mov
jo
es
add
orl
cld
add
pushf
loop
mov
xchg
fdivl
push
jge
pop
mov
add
add
or
pop
push
in
pusha
loopne
push
or
add
ret
pop
or
les
sbb
cmp
xchg
dec
pop
rolb
sub
add
sbb
std
adc
call
or
sub
jbe
add
mov
lods
inc
or
push
ljmp
add
andb
shr
mov
fnstsw
pusha
dec
xor
pop
lret
xchg
inc
cmp
daa
and
fistpl
add
add
mov
pushf
enter
mov
inc
add
adc
test
sub
mov
jle
push
addr16
push
add
sbb
dec
push
es
dec
arpl
xchg
pop
dec
into
cld
add
shlb
push
scas
popa
pop
inc
lods
mov
add
xor
imul
outsl
add
mov
stos
inc
pusha
jg
push
test
xchg
or
adc
mov
testl
sbb
mov
insb
inc
out
mov
or
mov
sub
cwtl
popf
arpl
xlat
aaa
mov
push
inc
push
sbb
or
cli
jnp
cs
cmp
lock
sbb
out
clc
sub
mov
js
call
add
loopne
hlt
pop
popf
inc
cs
add
xor
stos
jle
in
pusha
shl
faddl
mov
mov
add
aad
je
jnp
add
neg
aaa
lret
add
mov
cwtl
lret
pop
mov
sysenter
mov
push
push
sbb
mov
add
pop
outsb
or
repz
and
enter
adc
inc
add
cmpsb
in
cltd
pop
pop
mov
xchg
adc
shrb
test
test
jl
add
fdivrp
stos
shl
push
inc
fs
sbb
lock
pop
cltd
imul
add
cmpb
dec
movsl
add
pop
cld
addr16
lea
jle
sub
rcrb
incb
scas
add
jl
add
mov
fadds
mov
les
test
adc
add
dec
or
jmp
xchg
dec
sub
jb
shl
xchg
outsb
lock
repnz
add
out
cmpsb
es
jae
cmp
cld
test
aam
and
cmove
pop
ror
mov
and
add
jne
xlat
add
xor
add
sub
test
sbb
mov
cmpsl
mov
add
shr
add
jg
or
dec
pop
dec
jle
add
xor
aas
pushf
xchg
add
adc
cmp
lds
xor
mov
insb
or
std
mov
mov
add
inc
pop
xor
inc
test
or
aaa
jnp
inc
fcom
ja
add
in
add
inc
dec
jle
push
mov
test
push
add
jmp
loop
incl
roll
mov
pushf
cmc
addr16
add
clc
xchg
or
fdivrs
push
fs
jns
add
andl
mov
sbb
xchg
jl
jae
andl
outsb
sbb
inc
inc
pop
outsl
add
lea
xchg
scas
push
push
xor
shr
adc
add
aaa
mov
lret
mov
xor
out
inc
jg
adc
pop
cmp
int
bndstx
push
in
and
nop
sub
rolb
and
mov
mov
and
xchg
sub
inc
adc
clc
fdivs
int3
es
push
nop
adc
adc
mov
sbb
loop
jb
push
xor
cmp
mov
inc
leave
fwait
sbb
int3
mov
iret
fisubl
outsb
add
and
xchg
sbb
pop
add
push
enter
add
cwtl
lea
or
sbb
or
xchg
or
out
sar
aas
andb
cltd
nop
xor
add
push
repz
add
pop
push
in
add
testb
icebp
xchg
sbb
in
aad
xchg
pop
sarb
hlt
pop
enter
add
fs
jnp
xor
cld
pop
imul
sti
pusha
clc
inc
in
xor
xlat
add
shr
repnz
and
pop
sub
ds
fbld
testl
dec
fcom
out
rcrl
adc
mov
lods
push
test
popl
mov
cmp
mov
repnz
maskmovq
testl
ja
add
pop
popf
or
fs
dec
cli
aad
inc
stc
ret
arpl
nop
loop
pop
mov
add
pop
and
xor
xorb
add
pop
inc
jnp
ret
int
dec
dec
push
pusha
mov
add
lahf
sbb
sbb
inc
sbb
jne
in
loop
add
aaa
cmc
add
outsl
adc
xchg
dec
out
jg
dec
mov
fildl
in
std
enter
cmp
mov
out
clc
out
mov
xor
into
or
inc
imul
movsb
add
mov
add
adc
addb
test
pop
es
nop
xor
rorb
stos
or
adc
mov
inc
add
add
dec
nop
mov
shl
jmp
adc
stos
inc
xor
leave
call
rorb
push
jo
icebp
mov
lods
ret
roll
jecxz
divb
je
fs
into
ret
pushf
sti
aaa
andb
inc
rolb
and
inc
stc
xlat
push
dec
leave
and
int3
loop
add
insl
xchg
inc
and
mov
push
sub
inc
imul
cmp
pusha
in
add
add
jo
push
insl
push
or
lock
push
insb
arpl
push
or
xchg
add
cwtl
inc
data16
fildl
add
mov
xor
adc
mov
mov
dec
mov
add
es
jmp
sbb
sbb
popf
enter
or
push
pop
lret
xchg
fistps
adc
add
mov
dec
xor
in
pop
adc
sbb
repz
inc
xchg
add
push
dec
jb
inc
add
test
movzwl
cmpb
adc
mov
or
mov
or
loope
sbb
sbb
ret
cmp
add
cmp
add
adcl
adc
xor
sahf
add
jp
arpl
xor
pop
movsb
add
pusha
or
outsl
mov
gs
push
pop
adc
sbb
jl
adc
and
nop
hlt
dec
sub
mov
push
xor
fnstenv
pusha
push
add
clc
jb
enter
sbb
sub
add
cltd
dec
push
or
pushf
sbb
add
data16
xchg
pushf
lods
mov
add
xchg
add
dec
add
mov
out
lock
add
mov
loop
test
sti
jb
or
cld
leave
jmp
adc
ret
xor
jbe
mov
mov
shlb
pop
mov
add
jnp
pop
pop
lahf
out
les
add
movsl
mov
jmp
mov
aas
addr16
xor
dec
push
call
and
lock
cmpsl
add
fmuls
mov
add
sbb
cmpsb
sbb
sub
sbbb
mov
enter
insl
js
es
sbb
sub
rcll
jo
fnsave
jnp
cmp
sbb
pop
aam
inc
out
push
push
add
cmp
mov
push
pop
arpl
sbb
dec
add
jecxz
nop
incl
xor
pop
sub
and
inc
test
xchg
icebp
add
add
sbb
add
ss
pop
and
push
add
jno
lahf
stos
out
cmpsb
aas
and
or
add
cmp
adc
push
nop
mov
push
and
lods
loop
and
pushf
aaa
add
jnp
icebp
mov
aam
lods
xchg
inc
add
jge
dec
push
and
gs
xor
push
push
mov
add
jb
mov
ret
cmp
dec
movsb
jae
mov
mov
jno
into
sahf
fsubl
scas
jge
fwait
ds
sbb
add
jmp
dec
xorb
pop
scas
push
hlt
pop
or
add
lds
mov
add
cltd
outsb
push
xor
lret
dec
fildl
adc
push
int3
loopne
jae
xor
jp,pt
sbb
adc
clc
push
add
js
test
add
outsl
xchg
add
xchg
adc
or
or
sahf
push
add
xchg
cmpsb
sti
pop
out
arpl
xchg
and
inc
shrb
jl
int
mov
add
imul
xchg
pop
pop
aas
xor
outsl
dec
loope
inc
dec
aaa
cmc
jne
sahf
fiaddl
cmc
lods
je
push
pop
daa
sbbb
ljmp
out
lret
dec
gs
iret
cli
std
adc
add
xor
xchg
flds
add
or
push
pop
cmp
mov
pop
test
xchg
nop
jns
inc
xchg
inc
sha256msg2
pop
and
cmp
xor
pop
mov
call
shlb
dec
imull
sbb
repnz
xor
cwtl
pop
arpl
cld
pop
ret
pop
andb
sub
add
mov
movd
ja
cli
xor
mov
sbb
pop
inc
cltd
cmp
shr
or
dec
jl
pop
cwtl
cmp
dec
sarl
aas
fwait
mov
and
cs
cmp
add
mov
repz
inc
push
xor
mov
pop
cli
pop
push
or
lock
shrl
add
jg
lret
mov
and
ret
stos
ds
cmpsl
cmp
out
xchg
mov
mov
mov
xor
pop
sub
sub
enter
lahf
add
jne
int3
cmp
and
xor
adcb
ret
sbb
add
and
loopne
add
dec
lret
mov
int3
inc
fmuls
cmp
mov
fiaddl
scas
iret
sbb
and
jbe
fadd
adc
jb
and
add
popa
dec
mov
int3
mov
les
sar
push
hlt
add
mov
jle
shlb
pop
stc
mov
ljmp
fisubrs
sbb
sbb
or
repz
sbb
adc
xchg
add
aas
hlt
xor
push
adc
pusha
test
add
repnz
mov
cld
loopne
div
xchg
add
sub
popa
fdivrp
fldenv
mov
add
jo
inc
sub
add
cmp
pop
jp
add
enter
call
inc
movsl
or
out
lret
sahf
cmp
pop
jnp
testb
jle
jo
and
lock
mov
aad
insl
jbe
movsb
xchg
or
iret
lods
addb
push
mov
inc
loopne
verr
int3
push
jb
setl
ja
inc
js
dec
add
hlt
fprem1
shll
inc
sbbl
clc
pop
das
add
mov
add
out
xchg
sbb
fmull
xlat
flds
cmp
jp
jbe
xor
jmp
lea
enter
cmp
dec
andb
inc
bound
or
sbb
loopne
jp
add
xchg
fdiv
sarb
mov
lcall
sbb
pop
dec
add
call
outsl
mov
push
in
sub
inc
mov
pop
jnp
hlt
add
fisubs
shlb
call
add
sub
jno
xrelease
testl
cmp
add
neg
xor
and
sbb
dec
add
or
dec
add
and
jns
and
pop
test
cmp
jl
mov
enter
aaa
inc
pop
movsb
or
fistps
cmp
ficoml
gs
loopne
inc
push
add
mov
or
push
dec
or
jne
mov
push
cld
and
daa
xchg
out
pusha
xchg
call
mov
add
mov
imul
and
jecxz
pushf
push
xor
fistl
push
enter
adcb
pop
add
out
push
sbb
rcrl
push
adc
dec
data16
push
lock
scas
add
repz
aaa
jb
add
push
std
add
call
lds
jo
add
dec
xchg
push
ljmp
ret
adc
dec
pusha
jp
add
iret
sahf
cmp
or
mov
enter
test
xchg
add
daa
jns
stc
shl
repnz
js
test
negb
cmp
out
adc
lods
sub
pop
call
and
fbstp
cmp
mov
add
dec
pop
fwait
xor
pop
add
cmp
movsl
or
in
push
pop
int
mov
add
ficomps
or
pop
pop
push
add
lods
js
add
loope
jnp
jns
rolb
add
xchg
fadds
aad
adc
add
fimull
push
loopne
xlat
xchg
jo
inc
xchg
jmp
aaa
enter
inc
arpl
into
sahf
and
xor
xchg
mov
push
xor
dec
jle
pop
xor
lods
add
or
push
add
pop
sahf
dec
and
push
push
sbb
push
cmp
mov
clc
mov
mov
je
lcall
jo
pop
and
ds
shrl
add
icebp
push
add
xchg
les
add
jb
cmpl
orb
fadds
cmp
repnz
jo
lea
adc
outsl
enter
mov
xor
loop
ljmp
ret
cmp
xor
fadds
stos
inc
add
es
push
cmp
arpl
pusha
mov
popl
adc
sbb
out
jp
pusha
lods
xor
ljmp
stos
ja
add
mov
repz
divl
xlat
xchg
fadds
mov
jecxz
and
jmp
shll
pop
scas
sti
mov
cmp
test
outsl
orb
xor
push
movsb
stc
enter
add
and
sub
mov
adc
cmp
movsl
mov
push
xor
lret
shr
pop
or
adc
or
jmp
mov
or
leave
dec
push
sbb
lock
mov
pop
test
add
lds
mov
inc
es
pop
push
dec
pop
inc
hlt
xor
inc
cmp
cmpsb
push
xor
xor
pusha
sub
test
jne
jecxz
or
xchg
sub
or
imul
mov
adc
lds
and
cld
xchg
jno
mov
loopne
jmp
sbb
and
out
add
mov
mov
data16
enter
add
or
push
sub
lock
xchg
add
add
clc
aam
stos
jmp
orl
xchg
lods
andb
sbbb
pop
lock
mov
push
addl
movsb
push
pusha
stos
jno
decb
test
add
mov
add
push
das
dec
fs
in
lcall
dec
and
lods
xor
dec
pop
add
sbb
dec
add
test
stos
dec
outsb
sahf
mov
js
pop
xorb
clc
push
cld
insl
sub
sub
cli
or
jno
lock
shlb
mov
add
cmp
xor
mov
test
cmp
add
test
sbb
inc
mov
jg
sbb
out
xchg
push
arpl
sub
or
std
enter
xor
sub
pusha
or
pop
pop
ret
stc
push
xchg
lea
enter
xor
bound
xor
stos
loopne
and
inc
dec
fs
mov
jbe
xlat
test
mov
xchg
jecxz
lret
out
ss
js
popa
inc
or
jmp
add
subl
out
mov
push
les
loope
add
or
ror
push
adc
popf
add
sub
cwtl
pop
sbb
xorb
cmp
ret
enter
jbe
ficoms
add
rol
ljmp
push
push
aaa
or
testb
mov
cmp
adc
js
xorb
in
and
cmp
sar
aaa
jne
adc
push
cmpsl
inc
into
sub
movsl
mov
jl
mov
push
mov
ftst
xchg
xchg
pop
in
std
add
cs
add
pop
insb
mov
push
je
pop
add
jae
add
push
push
sub
repz
inc
testb
stc
adc
push
addps
sub
les
dec
test
repnz
sbb
pop
cmp
mov
pushf
inc
push
cmpsb
ljmp
addb
xor
ret
stos
xchg
shrb
movsb
lahf
dec
orb
filds
pusha
rol
dec
stc
lock
int3
inc
mov
fwait
jo
loop
daa
fdivs
sub
mov
dec
out
movsb
inc
inc
add
stc
adc
sti
xor
loope
les
jmp
call
je
add
sub
mov
push
mov
rolb
hlt
imul
cmc
push
sbb
sbb
dec
adc
test
mov
shlb
enter
push
dec
lds
add
adc
or
xchg
data16
je
and
xorl
sub
xchg
inc
add
sbb
mov
adc
jmp
cwtl
xchg
add
sbb
in
pop
hlt
dec
hlt
fiadds
testl
fsubs
divl
sbb
cmp
pop
push
dec
enter
jae
push
sbb
rcrb
in
jp
lcall
loop
shlb
lret
ljmp
xor
lea
and
imul
decl
push
cmp
or
out
or
xor
pushf
daa
xchg
into
loop
pusha
lret
add
push
lods
xor
dec
outsl
mov
cwtl
js
dec
loopne
mov
push
xor
add
adc
icebp
add
mov
inc
add
cmpsl
dec
arpl
std
mov
xchg
xchg
add
or
mov
or
dec
add
xchg
push
pop
adc
xchg
and
xchg
mov
out
loope
push
or
clc
ljmp
sub
rclb
int
pop
ljmp
mov
jns
addr16
stos
or
pop
lret
and
clc
mov
shr
fstps
dec
xor
inc
pop
divb
mov
insb
add
xlat
sub
mov
psllw
out
adc
jo
enter
xor
sbb
pusha
shl
mov
xchg
fdivrl
mov
cmp
mov
insb
xrelease
sub
add
push
rorl
sar
int3
add
jnp
cld
pop
xchg
pop
pushf
xorl
shr
or
loope
enter
cltd
lahf
or
pusha
out
push
fildll
lret
mov
sub
rclb
lock
jg
mov
cli
mov
push
stos
cmpsl
jo
in
jno
jg
rcrl
arpl
add
jbe
mov
jge
push
xor
imul
add
adc
push
sub
adc
lods
hlt
inc
push
in
sbb
mov
mov
ljmp
mov
push
fidivrl
xor
pop
mov
add
lods
jo
jge
enter
xchg
xchg
js
add
repz
mov
mov
mov
pop
or
add
jno
lea
xor
pop
add
adc
fadds
aaa
inc
add
mov
flds
lods
and
aam
scas
sbb
iret
adc
or
pop
add
mov
fstpt
jae
add
sbb
enter
nop
mov
jmp
sub
scas
or
test
sbb
sbb
adc
inc
fldenv
add
lock
lods
mov
into
mov
jno
push
test
mov
add
roll
loope
lock
fmuls
cs
push
test
jnp
or
xchg
fidivrs
add
aas
cmp
sub
inc
into
mov
int3
cmp
inc
int3
push
movb
idivb
and
and
push
mov
ffreep
push
add
outsb
dec
pop
aam
cmp
mov
sti
gs
sbb
test
add
push
adc
cmpsl
rcrb
or
push
add
jbe
adc
sub
clc
lret
push
enter
and
cmpsl
cmp
add
faddl
icebp
add
cltd
or
ficoml
cmc
in
add
xor
inc
cmpsl
pusha
pop
pop
inc
test
xchg
and
dec
xor
fdiv
add
sub
repnz
jle
add
in
outsb
add
fisubrl
jo
mov
loope
and
push
add
xor
enter
imul
add
das
cltd
popf
in
inc
jae
test
int3
dec
or
or
sbb
pusha
mov
pop
shll
pop
clc
sbb
ljmp
sbb
sbb
fadd
xor
inc
lods
inc
insb
mov
rorb
mov
fs
push
pop
mov
out
xlat
add
lods
test
inc
jbe
repz
cwtl
mov
ret
add
sub
lds
sbb
adc
inc
push
mov
scas
mov
jb
add
and
popa
ljmp
lcall
test
cli
lds
loope
pusha
stc
lock
and
rolb
lods
js
add
dec
insl
push
outsl
in
mov
inc
fnstcw
cmp
sub
sub
mov
add
lods
fimuls
or
in
les
dec
xorb
mov
mov
push
sub
in
sbb
sub
push
mov
imul
lods
xchg
mov
sbbb
xchg
mov
adc
out
or
and
test
dec
sbb
or
popf
push
jno
xchg
mov
movsb
and
or
clc
enter
pusha
adcb
adc
add
add
rorl
cld
and
lahf
add
std
xorb
sbb
xor
sti
add
iret
dec
cmp
sbb
jbe
inc
cli
mov
mov
pushf
xchg
lods
add
push
ret
not
aam
xchg
mov
inc
movsl
mov
faddp
xorb
popf
xor
ljmp
insl
dec
and
mov
cld
daa
add
and
movsbl
add
inc
jns
mov
nop
cmp
or
inc
rorb
pop
cmp
xor
sahf
adc
cs
ljmp
imul
cmpsb
add
mov
cltd
aam
add
cwtl
and
pop
in
push
mov
mov
loope
dec
cld
cmp
sti
mov
pop
xchg
xlat
inc
and
dec
imul
out
xor
adc
in
jmp
movsb
out
xorb
enter
xchg
mov
add
fdivrp
iret
mov
sub
int
flds
sbb
pushf
mov
test
adc
and
add
nop
add
adc
hlt
loopne
dec
daa
cmp
mov
lahf
nop
xor
sarb
sarb
mov
movsl
rcr
mov
sbb
psubd
pop
repnz
add
ret
ja
pusha
sub
dec
xchg
lock
adc
push
les
je
pop
xor
add
in
jg
jl
push
pop
outsb
sbb
sarb
push
push
movsl
test
inc
mov
cmp
sbb
jno
jmp
jge
lcall
mov
cs
out
fdivr
les
test
mov
add
and
push
push
sahf
stos
mov
xor
mov
pop
test
sbb
loope
call
arpl
pop
rclb
and
fs
jecxz
daa
fcmovne
add
ds
xorb
ss
dec
adc
inc
mov
add
mov
in
xor
shr
fs
lock
fcomps
mov
stc
notl
add
sub
cmc
shl
imul
outsl
jmp
sbb
in
add
lods
cmp
inc
ljmp
fidivrl
push
mov
add
in
add
cld
mov
cmp
fcomps
or
adc
icebp
add
dec
adc
mov
push
rcll
pop
xchg
add
inc
cmp
cmp
add
scas
add
push
int
or
xor
cli
cmp
push
lods
popa
xchg
push
add
outsb
movsl
fwait
sub
cmp
and
push
in
iret
sub
dec
ds
gs
fcompl
popa
pop
add
lds
mov
roll
or
std
or
push
aam
cwtl
xor
mov
pushf
fldl
dec
mov
and
rcl
out
inc
cmp
fwait
dec
popa
xor
and
outsb
or
adc
sbb
mov
aad
imul
mov
mov
inc
popa
and
jp
shlb
cli
mov
data16
sub
pop
cwtl
add
icebp
or
pushf
add
in
and
add
pusha
ds
rorb
addl
repnz
pop
mov
mov
mov
cmp
scas
repnz
daa
jnp
xchg
and
mov
sub
sbb
inc
clc
mov
inc
stos
mov
adc
js
add
jne
and
push
add
adc
jno
jns
sbb
nop
out
add
loopne
sub
in
inc
loope
ret
jno
xlat
out
jmp
xchg
sbb
xchg
lahf
jmp
lcall
mov
sub
aaa
adc
mov
xor
pop
cmp
add
iret
in
xchg
out
add
lret
xchg
repnz
in
add
pop
rolb
std
xchg
aas
jbe
push
and
sbb
lods
roll
dec
insl
loope
xorb
add
sub
and
or
test
dec
add
add
pop
inc
aam
cmp
jnp
test
in
inc
adc
pop
or
scas
lea
ret
call
add
xor
and
xor
dec
pusha
adcb
add
inc
lds
jnp
pop
imul
nop
dec
mov
ljmp
push
or
xchg
dec
add
jl
mov
mov
add
jle
int3
add
pextrw
sbb
dec
mov
scas
mov
add
sub
add
repnz
cmpsl
mov
xor
inc
sarb
mov
pop
out
popa
xor
sbb
adc
add
mov
cmp
pop
sub
in
adc
mov
ret
or
sarl
in
push
dec
clc
cmp
push
fadds
xor
leave
and
mov
mov
cmpsl
add
jo
push
add
aas
popf
dec
push
sbb
cmp
ss
adc
pop
pop
xchg
lcall
enter
shll
inc
and
push
in
jae
subb
mov
loope
and
js
lret
and
push
mov
add
out
jp
inc
mov
out
and
jno
mov
dec
inc
rorb
sti
adc
push
call
adc
pop
mov
sub
add
cmp
jge
mov
pop
movl
and
add
xchg
ror
add
add
push
cmpsl
xor
cmp
add
jg
loopne
push
aaa
jae
mov
xlat
das
mov
jp
int3
aam
adc
jne
lock
xlat
icebp
push
leave
and
add
std
nop
push
icebp
pop
add
fadd
out
jb
dec
inc
mov
add
inc
call
sbb
inc
jg
outsb
mov
sub
xchg
pop
shl
xor
cmp
or
ret
add
cltd
lcall
push
push
push
push
ljmp
sbb
pop
jge
lods
xor
loopne
adc
lds
in
fs
rolb
add
add
xchg
and
mov
andb
lahf
pop
mov
mov
jnp
js
dec
sub
push
and
rclb
dec
sbb
sti
iret
cmp
emms
aas
ds
add
mov
xor
rorl
pop
jp
pop
fldl
mov
scas
push
fidivrl
sbb
or
ror
movsb
add
stos
jb
push
in
les
add
ds
and
xchg
and
cmp
je
pusha
adc
mov
or
mov
mov
je
dec
clc
in
add
mov
jo
cmp
jmp
je
pop
mov
xor
or
fmul
in
add
jne
lods
outsb
fisttpll
mov
mov
push
mov
add
pop
ja
and
faddl
jo
sub
add
push
mov
add
test
jge
pusha
sub
lret
hlt
add
xor
ds
les
dec
dec
add
cmp
rcrl
stc
adc
call
xor
or
or
jns
hlt
or
cmp
mov
cmp
xor
xor
lock
dec
mov
das
int3
call
xchg
push
inc
out
out
jo
add
mov
fnsetpm(287
cld
fs
into
jecxz
fsts
int3
dec
adc
mov
aam
inc
adc
add
lcall
add
inc
xchg
data16
mov
inc
pop
les
add
scas
insb
pop
add
fisubrl
mov
adc
push
adc
out
push
ret
or
leave
jne
or
adcb
das
adc
add
adc
mov
push
sbb
adc
stc
mov
lock
arpl
clc
jnp
jle
add
jl
sub
xor
out
subl
mov
adcb
dec
mov
cs
lcall
mov
and
or
xor
js
add
mov
test
aaa
out
add
xlat
js
xchg
cmp
lds
nop
add
fdivl
decl
mov
into
movsl
push
add
fiaddl
cli
cmp
xchg
pushf
and
lods
inc
pop
adc
mov
daa
push
inc
aad
add
je
xor
push
lds
add
add
xchg
mov
add
mov
in
sbb
add
mov
lret
or
pop
sbb
jno
insb
out
or
add
xchg
jmp
in
mov
xchg
loope
aas
jno
pop
addb
fucomp
ljmp
fmull
dec
xchg
push
jge
push
test
cs
filds
mov
add
mov
sti
fcomps
inc
popa
xor
sbb
test
sbb
rcrb
add
lods
push
in
mov
sub
pusha
sbb
cli
cmp
pinsrw
jb
cmc
push
lret
daa
add
pop
adc
jp
mov
pushf
pop
jbe
cmpsb
inc
mov
cs
pusha
adc
xor
cltd
pusha
das
or
repnz
pop
shll
mov
push
fnstsw
pop
addr16
in
mov
into
mov
scas
add
sbb
adc
push
pushf
add
lcall
or
shl
je
fwait
inc
in
mov
clc
xor
iret
lock
jle
xchg
je
das
daa
push
sbb
xchg
cs
fcoml
dec
jbe
dec
jge
lea
mov
xchg
insb
scas
add
inc
add
repz
enter
daa
into
leave
loope
repnz
aas
cwtl
nop
add
add
mov
pop
xchg
lahf
inc
mov
fadds
adc
adc
std
shl
jo
push
adc
repnz
les
rcrb
imull
cmp
mov
fldl
add
fnstcw
add
push
mov
pusha
add
popf
addb
movsb
pop
dec
cld
mov
add
cmp
daa
test
and
lahf
push
mov
cld
imul
dec
add
pushf
dec
inc
je
ds
gs
jbe
das
and
stc
sub
add
mov
jecxz
sbb
es
cltd
xchg
pop
mov
incl
mov
add
je
inc
xor
mov
sbb
test
dec
add
cmpl
xchg
std
or
push
add
scas
test
push
in
add
js
scas
jmp
lret
add
sub
ljmp
repnz
fildll
add
ljmp
lods
icebp
lret
or
cmpb
add
roll
cld
filds
jo
pop
pop
push
dec
mov
fsubrs
das
jmp
cmp
out
loopne
in
add
jns
scas
push
fcoms
shl
shr
mov
jnp
cmp
xor
pop
scas
sbb
pop
repnz
cld
stos
dec
imul
out
lds
add
mov
int
in
or
inc
mulb
jb
add
dec
movsb
js
dec
cmp
bound
scas
cltd
inc
add
sbb
andl
mov
sbb
scas
test
cwtl
add
add
not
repz
sbb
push
adc
adc
ffree
cmpb
aam
sub
inc
push
mov
sbb
xchg
es
in
xchg
push
adc
test
rep
ljmp
int3
sbb
inc
test
jge
mov
mov
shrl
cmpsl
adc
out
add
in
sti
mov
sbb
fs
fmuls
sbb
imul
arpl
aam
test
pushf
in
or
push
stc
ret
mull
outsl
add
xor
sbb
add
cltd
rcrl
push
sub
std
rclb
adc
movsl
jle
inc
jno
cmp
jmp
dec
adc
mov
in
add
or
add
sahf
loop
call
addb
hlt
cmp
insb
pop
roll
dec
ret
xorb
mov
cmpsl
or
lahf
mov
jns
xchg
aas
adc
lahf
sbb
pmuludq
mov
mov
outsl
cmp
in
xlat
cltd
inc
pop
or
movsb
or
sahf
aaa
add
mov
je
sub
testl
ficompl
adc
int3
stc
and
sbb
or
jo
dec
icebp
inc
inc
daa
ficompl
pop
jle
mov
pushf
cmp
xor
mov
add
mov
cmp
shrb
adc
xchg
mov
push
enter
ds
xorb
dec
data16
nop
lods
add
cmp
inc
dec
push
stc
cmpsl
jnp
add
out
dec
sub
jmp
insl
mov
dec
insb
mov
adc
stos
inc
jo
jge
pusha
sar
add
add
adc
rcrb
loope
inc
shrl
push
cmpsl
inc
sub
mov
dec
add
fsub
push
outsl
add
xor
mov
add
outsb
xlat
xchg
rclb
adc
in
xor
adc
jbe
addr16
adc
cmp
fs
scas
jp
popf
add
bound
out
leave
nop
and
sbb
adc
inc
orb
cld
cmp
test
cmpsl
xchg
andb
add
daa
outsl
je
or
std
add
fwait
mov
xor
add
sar
daa
in
xchg
hlt
ja
add
scas
pop
cs
fstl
test
or
xchg
aad
andb
call
int
add
icebp
gs
popf
add
imul
push
add
fcoms
in
mov
mov
rcrl
or
aad
and
jmp
js
ja
fs
call
cmpsl
jo
adc
or
mov
cmp
adc
mov
movsl
movsb
fistps
inc
je
stos
rolb
shlb
scas
out
add
dec
scas
movsb
xchg
mov
xor
or
outsb
pop
adc
xchg
data16
jmp
cs
dec
loopne
xchg
push
popf
daa
std
cmp
mov
lea
roll
jns
mov
xchg
out
adc
testl
jge
jmp
rep
loopne
sahf
cwtl
and
int
out
in
add
push
inc
add
les
aas
add
fldcw
cmp
addl
xor
adc
mov
dec
dec
cmp
mov
jp
sub
sub
or
daa
aaa
add
inc
out
rcrl
xchg
push
neg
shrb
or
lods
add
mov
add
lret
and
pop
fsubr
lock
js
jnp
int3
dec
pop
add
and
rcl
sbbl
sti
add
scas
ret
stos
sub
test
or
add
or
ds
mov
jnp
adc
std
repnz
repz
ret
dec
push
pop
xor
movsl
insb
shll
xchg
daa
sbb
aaa
adc
adc
jae
mov
or
in
aaa
pop
rcll
or
into
dec
add
xor
testl
loop
dec
xchg
adc
push
in
mov
loop
fwait
pop
inc
jecxz
xorb
xchg
push
adc
ret
xor
inc
notb
and
cmp
xor
adc
push
shlb
js
sbb
loope
add
jns
hlt
inc
add
push
lcall
call
cli
into
jge
nop
pushl
jp
lcall
mov
and
xchg
dec
popa
or
sti
cmp
adc
jle
xor
mov
add
lcall
ja
add
adc
out
fcmovu
ficomps
add
sti
inc
pop
aaa
into
clc
dec
add
pushf
jns
pop
pop
das
addl
int
add
jg
mov
pop
js
inc
or
jo
mov
sahf
jno
add
rcrb
mov
dec
xorb
sub
dec
sbb
cmp
fnstenv
jno
cmp
cmp
add
inc
inc
dec
aas
sub
cmp
ret
pop
insl
mov
jbe
xor
fucom
es
cwtl
popf
fstps
sub
jbe
fmuls
mov
inc
aam
mov
movsl
rcl
shl
push
jb
andl
add
int
add
mov
sbb
xor
lcall
fdivl
or
add
rolb
insb
and
sbb
aam
cmp
push
add
add
xor
addb
sbb
out
sbb
push
repnz
pop
xlat
out
and
ds
hlt
push
add
leave
icebp
aam
mov
or
enter
test
sbb
lds
shll
lods
outsb
orb
push
mov
imul
movsl
adc
andb
pop
das
push
mov
neg
call
pop
aam
in
mov
nopl
xchg
ror
repnz
jne
mov
sbb
mov
xorb
punpckhwd
stos
xchg
ds
xchg
je
popa
push
and
xchg
aam
push
add
sbb
or
fcomps
mov
sub
add
xor
enter
adc
mov
cwtl
dec
add
cmp
add
pop
into
lret
add
out
mov
repnz
sbb
imul
in
testl
sbb
xor
sub
ss
aas
xchg
sar
push
cmp
pop
hlt
in
jmp
adc
notl
cltd
call
mov
pop
xchg
and
cmpsl
inc
aam
aam
sbb
inc
ja
push
sub
add
mov
jb
stos
mov
adc
out
push
mov
inc
or
push
add
mov
pushf
sbb
add
cmpb
stc
cmp
js
inc
fstl
loopne
push
and
mov
fs
jmp
mov
add
cld
and
imul
mov
loopne
aad
adcb
cmp
sbb
out
add
in
sub
test
aas
mov
sub
adc
mov
pop
outsl
aas
ret
mov
mov
nop
arpl
ficoms
add
test
xor
out
fwait
iret
shrb
sbb
adc
xor
test
or
ret
pop
cwtl
mov
stos
add
mov
in
icebp
mov
pop
cld
mov
sub
mov
outsl
dec
push
repnz
add
mov
mov
cmpsl
dec
mov
call
mov
lods
hlt
mov
add
cli
mov
lret
pop
add
push
repz
dec
int3
movl
jmp
cmp
adc
lcall
shlb
aas
rol
pop
gs
mov
sub
cltd
jp
push
cld
cmc
lret
sbb
fst
in
mov
flds
pop
xchg
push
ja
xor
ss
xchg
add
pop
repz
cmp
dec
add
lods
mov
add
sub
ret
inc
outsl
cld
adc
shll
hlt
mov
add
sub
cmc
shrl
testl
int3
xchg
adc
mov
pop
mov
mov
in
lds
sbb
cmpsl
mov
add
sbb
jnp
xchg
pushf
aaa
or
mov
fiaddl
jno
out
mov
push
xchg
mov
ret
insl
pop
add
fimull
pop
cli
add
inc
add
sbb
icebp
add
rolb
adc
fwait
mov
and
xor
sbb
inc
fadds
faddl
push
jb
imul
adc
paddq
pop
or
rcr
xchg
mov
mov
sub
test
sarl
push
sub
pusha
add
jo
add
call
xor
fs
cli
pop
dec
lret
jo
sti
xchg
cmc
xor
sub
dec
lcall
outsb
cmp
mov
out
movsl
pushl
bound
fcomps
add
xchg
jnp
cmc
das
subb
cmp
adc
out
orb
ficoml
loopne
cmpsl
hlt
pop
mov
and
mov
cmp
add
std
jecxz
xchg
cmp
es
mov
mov
pop
addr16
add
adc
sub
les
sub
repnz
leave
add
cmp
into
add
push
ds
sahf
pushl
iret
icebp
pusha
and
push
jp
out
sahf
roll
in
test
das
rclb
out
pusha
sbb
das
cmc
jo
in
push
dec
or
outsb
int3
add
movsb
jl
or
mov
call
iret
lock
and
pop
sub
mov
cmp
arpl
add
xchg
and
loopne
xchg
hlt
push
test
xchg
inc
shll
nop
lock
je
pop
adc
and
test
mov
and
hlt
nop
fs
mov
nop
in
adc
sub
icebp
cmpb
in
add
pop
jmp
sbb
and
pop
push
push
cmp
mov
add
mov
add
pop
mov
inc
or
scas
push
sub
push
add
sub
dec
add
sbb
xchg
push
add
lcall
add
negb
dec
in
mov
das
ret
add
nop
inc
lahf
loop
daa
inc
pusha
pop
js
jbe
push
add
cmp
enter
cmpsl
repnz
pop
adc
int
rorb
cmp
das
jle
je
stc
aas
add
in
shl
xchg
enter
cwtl
mov
lods
adc
push
imul
rcrb
call
sub
adc
mov
clc
adc
cmp
loop
push
mov
fdiv
cmp
adc
lods
mov
icebp
xchg
movsb
lahf
fs
adc
loopne
xor
mov
add
out
mov
add
ret
jecxz
add
push
push
ficoms
push
mov
shll
cmp
and
or
or
mov
push
pop
scas
mov
cmpsb
mov
pop
inc
fists
test
sbb
loopne
cli
lcall
les
jns
add
xchg
mov
xor
lret
and
add
mov
call
mov
add
xchg
sbb
fs
jge
sub
mov
test
add
push
filds
mov
or
cltd
push
sbb
insb
cmp
insl
int
lds
dec
std
push
cmp
dec
adc
lods
jle
adc
add
int3
decl
imul
and
rcll
inc
loope
mov
xor
in
jo
lds
fwait
arpl
aas
push
cmpsl
jg
sbb
les
or
mov
add
repz
sbb
int3
test
imul
xor
add
fbstp
sarb
adc
xchg
xchg
sbb
jmp
add
mov
bound
add
adc
call
or
aam
jnp
add
repz
jge
cmp
cmc
add
cmp
pop
xorb
shl
mov
loop
push
mov
add
testb
les
mov
pop
xor
jno
sbb
sub
cmc
inc
fiadds
nop
loop
rolb
add
mov
sbb
stos
insl
inc
add
cs
pop
inc
cwtl
movsb
clc
in
add
cli
jecxz
stos
sub
mov
xor
fs
push
mov
cmp
and
js
jmp
mov
hlt
xchg
add
lods
pop
pop
add
ss
xchg
sbb
ja
push
inc
add
and
xchg
push
mov
cmpl
xchg
sbb
cld
push
bswap
and
cmpl
stos
movsb
jle
add
insb
add
enter
lret
outsl
orl
test
sub
icebp
jno
jmp
push
and
arpl
inc
sub
jl
add
add
out
je
je
or
fisubl
outsb
cs
ss
ljmp
in
int3
cmp
pop
lds
add
adc
dec
add
sti
scas
movsl
mov
cld
add
repz
sbb
push
mov
lock
mov
mov
cmpb
add
mov
pop
add
jb
test
jae
les
cmc
push
clc
pop
es
insl
mov
fstps
xor
in
out
add
test
int3
int
add
push
mov
cmc
fiadds
or
inc
cld
add
mov
jle
lock
clc
dec
insl
inc
dec
ret
nop
xchg
fisubs
addl
xor
popa
sub
pop
pop
sbb
lock
and
add
cwtl
inc
add
aas
std
jno
ret
mov
orb
fisttps
call
jb
push
ret
fisubrl
sub
dec
subl
mov
mov
mov
add
lret
outsl
add
inc
fsubrp
add
loop
mov
xorb
sbb
adc
les
mov
ljmp
mov
mov
mov
pop
shll
pop
mov
into
aaa
js
fcoms
mov
arpl
int3
sti
inc
lahf
cmpsl
push
stos
push
sbb
pop
dec
movb
sub
sbbb
das
mov
cmpsb
pop
xor
add
adc
sub
and
nop
or
int
loopne
mov
loop
add
outsb
aaa
stos
pushf
push
je
add
jo
mov
jl
xchg
add
xor
fwait
clc
push
push
mov
js
es
add
repz
rolb
pop
andb
lods
and
stc
sbb
sbb
mov
in
add
cmpsl
vmwrite
sub
lods
movsl
jns
int3
gs
cltd
pop
cmpsl
subb
ret
enter
rcl
sub
xchg
lods
add
cld
addl
xor
push
sbb
out
pop
mov
xchg
add
shll
add
imul
add
repnz
inc
gs
pop
rclb
ljmp
loope
sub
xchg
add
enter
inc
sbb
lds
jne
add
aas
and
das
sbb
loop
add
xlat
fisubrs
sbbb
sub
cld
mov
or
insb
loop
xchg
jns
add
jno
into
dec
add
mov
xor
mov
ret
sub
hlt
and
and
mov
out
or
arpl
int3
loopne
fwait
not
add
jg
adc
dec
test
js
xor
xchg
add
sub
dec
imul
add
pop
push
sbbb
movsb
push
adc
clc
cmp
sub
fnsave
testl
cwtl
fmuls
push
sar
add
pop
dec
add
mov
mov
mov
cmp
nop
xor
adc
jne
push
add
loope
and
cmpb
cmp
mov
sbb
xchg
push
ljmp
lea
pop
push
roll
xor
xchg
add
xchg
out
dec
push
sbb
xor
add
hlt
xchg
mov
test
orb
inc
fcompl
mov
xorb
mov
inc
fldt
das
push
rcll
or
dec
dec
cmp
inc
mov
sub
scas
inc
or
cmp
sub
emms
clc
add
subl
inc
cmp
dec
mov
inc
add
add
adc
mov
in
mov
dec
sbb
xchg
loopne
rcrl
cwtl
add
pop
xchg
pusha
jmp
sbb
test
xchg
jecxz
shlb
pop
sub
add
iret
adc
mov
and
add
pop
shlb
push
test
loope
adc
add
test
aaa
cld
jne
cmp
sub
rep
flds
sub
in
push
nop
inc
or
aam
xchg
add
fmul
test
ljmp
cltd
aaa
enter
sub
cmp
dec
out
xor
lahf
dec
fwait
mov
out
push
mov
daa
cltd
jge
outsb
int3
mov
add
sbb
jp
rclb
shll
and
hlt
mov
clc
arpl
mov
sub
gs
jno
repnz
nop
enter
divl
push
aaa
add
xchg
adc
xchg
dec
ljmp
faddl
hlt
addr16
add
jmp
arpl
inc
cltd
inc
cmp
xor
fmuls
cmp
push
sbb
add
popf
xor
pop
add
test
filds
sbb
cmpsb
arpl
loope
and
jno
dec
mov
out
xchg
inc
mov
add
sbb
aaa
pop
roll
mov
lahf
scas
mov
push
jae
xstore-rng
cmpsl
add
mov
jb
cld
mov
xchg
sub
dec
add
sti
pop
jo
push
lods
pop
outsb
inc
idivl
add
mov
xor
jl
cmp
xchg
shlb
rcrb
out
push
add
xor
jno
nop
xor
imul
push
lahf
add
loope
or
in
jge
sbb
xchg
dec
adc
mov
imul
lcall
inc
dec
jecxz
add
mov
adc
repz
xchg
int
add
stos
mov
xor
add
lods
test
adc
cmp
outsb
xchg
jae
add
in
sbb
lret
popa
sti
lock
pop
push
mov
test
xchg
or
imul
sbbl
and
mov
pop
push
les
push
push
mov
cmp
mov
mov
add
aad
popf
js
inc
cmp
scas
addb
xchg
sub
jae
or
adcl
cmp
fmull
lcall
ret
neg
add
jbe
push
pop
adc
xor
jge
rorb
data16
fcoms
add
push
cmp
sbbl
cmp
js
jge
jno
add
cmpsl
mov
daa
jp
lock
faddl
add
imul
ljmp
call
jae
xchg
dec
xchg
mov
mov
jp
out
inc
lcall
jle
pop
ret
lock
push
pusha
les
pop
xor
add
cmp
stc
push
sbb
nop
mov
mov
push
mov
xchg
mov
repz
fdivs
dec
std
out
add
mov
in
sbb
add
sub
les
xchg
lahf
pop
add
adc
call
xchg
xchg
push
iret
inc
add
ret
lea
add
fidivrs
scas
pop
xorb
int3
filds
leave
mov
imul
shr
jp
mov
inc
add
in
testl
pop
rcrb
das
cmp
fs
xchg
add
aad
pushf
insb
out
add
sbb
movsl
add
pop
jp
mulb
mov
int3
adc
pop
sti
add
clc
mov
pop
js
hlt
and
into
xor
fwait
push
push
sub
ret
ja
sbb
jnp
addb
mov
and
add
movsl
inc
imul
inc
mov
jae
in
sub
and
add
and
call
pop
pushf
add
inc
add
pop
cs
dec
add
mov
jmp
push
lret
push
jecxz
add
lcall
sub
jo
das
andl
inc
movsb
xor
mov
and
inc
or
dec
insl
invd
and
cs
add
bound
clc
cwtl
ds
lock
xchg
adcb
inc
es
clc
clc
add
and
fisttps
ret
lock
call
and
icebp
jg
popa
pop
testl
das
pusha
push
sbb
fwait
push
shrl
push
inc
add
dec
stos
mov
dec
iret
adc
add
cs
add
fisttpll
das
loop
inc
dec
inc
push
dec
mov
push
les
les
adc
add
test
fimuls
rol
jns
loope
add
out
mov
emms
pop
test
call
dec
jp
xchg
cmpb
push
dec
jp
popf
shrb
add
ja
mov
push
dec
lock
pop
jnp
ss
addr16
aaa
and
jecxz
loopne
push
push
sbb
rolb
aad
xchg
pop
pushf
clc
insb
and
xchg
shrb
ret
daa
rcr
add
jecxz
call
inc
cmp
ret
cmpsl
cvttps2pi
add
and
and
mov
pop
and
or
daa
pop
jo
add
divb
sub
aam
les
push
rol
push
add
ret
add
cmp
jo
adc
sub
sbb
cwtl
lods
jle
ja
pop
add
lods
cmp
imul
add
shll
sub
shlb
sub
cld
popf
repz
add
mov
jb
cltd
sbb
sti
jo
notl
lds
push
pop
mov
je
push
mov
or
push
pop
negb
adc
ss
out
je
add
mov
iret
in
leave
or
int3
out
adc
aaa
dec
mov
or
sbb
jo
adc
pop
pop
in
ljmp
loope
jmp
push
adc
adc
add
out
xor
pop
add
enter
push
lahf
clc
mov
cld
mov
sbb
pop
lock
adcb
add
and
mov
iret
pusha
cmpsb
pop
pxor
mov
hlt
arpl
dec
cmp
cmp
mov
jo
imul
sub
loopne
gs
call
inc
adc
subl
stos
hlt
cmpsl
fnstsw
inc
inc
sbb
or
sub
dec
notl
pop
xor
rolb
mov
cmp
dec
xor
add
clc
cmp
sub
lahf
je
add
mov
add
lock
data16
xor
mov
lock
hlt
add
mov
lock
lret
adc
mov
call
aam
mov
add
sarl
xchg
add
in
pop
es
mov
sub
dec
clc
stc
sti
inc
ljmp
pop
mov
add
dec
rcr
jle
test
and
xchg
inc
adc
sub
int3
hlt
lock
sti
sahf
sub
push
mov
dec
pop
sub
and
ret
adc
pop
adc
dec
jae
je
jno
and
fiadds
fiaddl
push
and
sbb
aam
mov
dec
jne
arpl
push
loopne
and
cmovp
push
mov
cmp
xor
sub
test
scas
mov
mov
mov
xor
fwait
or
fnsetpm(287
pushf
ret
add
icebp
cltd
insb
std
mov
sub
sahf
fyl2xp1
movlps
clc
inc
rolb
loop
add
push
xchg
inc
jo
jmp
add
inc
mov
popf
jns
add
add
mov
pop
jb
xor
inc
push
cmp
jmp
imul
mov
mov
mov
lret
in
dec
mov
sbb
ret
jbe
push
in
adcb
imul
mov
add
cli
int
and
cmp
sbbb
lock
jge
cmp
pop
add
add
imul
inc
jbe
add
dec
int3
xor
cmp
push
loope
xchg
add
mov
cltd
mov
clc
andl
add
adc
add
mov
clc
lahf
cmp
loope
rolb
cmp
mov
or
jbe
mov
jns
adc
adc
xorb
lret
adc
sbb
movsb
pop
mov
fcoml
jb
repnz
adc
loopne
or
ror
adc
repnz
push
inc
inc
pop
xor
push
test
cmp
sbbb
pusha
xchg
add
push
cmpsl
neg
shlb
adc
popa
mov
mov
pusha
sbb
push
cmp
add
xchg
xchg
data16
mov
rolb
nop
jecxz
cltd
jmp
adc
add
popl
mov
pusha
dec
and
mov
add
leave
imul
mov
push
sbb
add
icebp
jnp
add
cld
adc
push
out
add
fadds
aam
cmpsl
and
out
jns
mov
dec
add
dec
jbe
hlt
push
xor
jns
repz
or
rcll
adc
mov
push
cwtl
andb
add
cs
or
mov
js
lcall
fimull
sbb
pop
das
sub
adc
shr
mov
mov
inc
cmp
pop
push
sub
dec
sub
ret
dec
add
lret
add
int
mov
dec
add
sti
sub
sbb
sti
xor
repnz
xchg
aaa
xor
mov
pop
sub
mov
lds
cmp
fildl
push
xor
andb
add
xchg
sub
fisubl
jno
fdiv
add
fistps
movntq
leave
sbb
and
dec
adc
cmp
push
mov
xchg
shlb
sub
sbb
sbb
stc
je
outsb
cmp
dec
pusha
mov
push
fs
add
dec
xchg
cltd
xor
and
add
fstpl
out
clc
cld
stos
mov
add
daa
in
mov
mov
cmp
lock
sub
sbb
and
adc
cmp
sub
push
test
dec
mov
add
cmp
add
out
mov
cwtl
loop
mov
add
loope
sbbb
shlb
push
inc
fdiv
dec
mov
push
jne
in
mov
add
stos
call
popa
sbb
cli
lea
cmp
push
sbb
andb
aad
dec
addr16
hlt
fs
inc
pop
shl
hlt
js
pmulhuw
pop
or
popa
iret
push
into
in
inc
jb,pt
adc
xor
mov
cmp
rcrb
and
fldl2t
shrl
aad
dec
inc
dec
add
hlt
pop
xor
pop
or
mov
lret
adc
sti
ja
xchg
mov
sbb
orb
mov
shlb
sub
mov
cmp
mov
aam
mov
mov
addb
sub
adc
xor
push
mov
or
hlt
pop
ss
or
push
lods
add
ret
push
test
inc
dec
mov
cltd
adc
out
loope
and
sbb
cmp
inc
vfnmadd132sd
add
shr
dec
xchg
andl
rcll
orb
add
xor
fcomip
adc
xor
insb
pushf
loop
int
hlt
xor
xchg
mov
xchg
mov
data16
loopne
xlat
hlt
add
mov
xor
mov
and
or
cmp
adc
pop
cmovo
adc
imul
mov
cld
mov
mov
inc
adc
test
ret
insb
inc
pusha
mov
jnp
jb
and
mov
pusha
das
loope
adcl
add
data16
jge
add
into
mov
jo
mov
int
cmc
pop
add
scas
mov
iret
add
shl
xor
addr16
inc
loopne
lahf
xor
ljmp
sbb
add
roll
lret
cmp
pmulhw
in
aas
add
mov
push
jle
test
pop
vcomisd
ljmp
mov
mov
shll
xor
lahf
xor
add
sarl
ja
movsb
cld
inc
and
addr16
or
jns
pop
jb
ljmp
mov
ljmp
sbb
bound
mov
fcomps
sarl
add
xchg
incb
out
leave
add
and
mov
sub
sub
pushf
mov
js
int3
push
jmp
ss
inc
xlat
sub
xor
loope
pop
les
shlb
sbb
sbb
ljmp
fidivrl
scas
xor
popf
inc
sbb
gs
push
sbb
and
lahf
enter
shrb
shll
jmp
sub
and
adc
add
test
add
data16
add
cltd
inc
add
dec
mov
cmc
mov
sub
add
sti
das
sub
inc
xor
fmuls
inc
in
rolb
mulb
pushf
ret
into
lds
adc
cmp
push
or
les
movsb
xor
mov
popf
jl
or
lcall
insb
push
fwait
cmpb
sub
shlb
lock
jae
add
add
push
ret
or
add
mov
mov
cmp
imul
jp
mov
xor
fnstcw
push
dec
fdivrs
add
jns,pn
dec
scas
xlat
roll
sbb
xor
insb
sbb
or
sub
les
flds
pusha
push
push
mov
jns
cmp
loopne
aad
mov
mov
pop
sub
add
pop
sahf
aaa
rolb
add
adc
xchg
imul
cmp
sbb
inc
pop
test
ss
cltd
test
sbb
test
out
push
ret
dec
sarb
cmp
xorl
xor
ja
jmp
cmpsb
add
mov
xchg
push
mov
and
sbb
les
inc
js
pop
jp
add
jmp
pushf
add
in
sub
dec
push
add
xor
stos
ljmp
inc
inc
nop
lock
add
hlt
sub
xor
test
push
lods
cmpsb
mov
icebp
cmp
cltd
mov
mov
mov
push
push
enter
data16
subb
add
or
jo
push
add
out
add
test
fistps
xchg
pop
pop
jp
push
mov
sub
ss
sub
call
inc
arpl
hlt
cli
pop
pop
and
imul
cmp
pop
pop
and
mov
xor
mov
add
cli
and
add
and
push
inc
leave
filds
fstpt
mov
outsb
pop
dec
cmp
addr16
subl
jmp
add
cmp
sbb
dec
push
sbb
scas
cld
loope
enter
pop
dec
setg
xchg
stc
sub
adc
mov
sbb
popa
sbb
pushf
mov
dec
adc
stos
mov
sbb
sub
xor
and
dec
imul
sub
lahf
or
xchg
inc
test
pop
test
adc
mov
pusha
in
insl
incl
cwtl
mov
idivl
push
lods
int
rcrl
sub
je
pop
cmp
dec
les
subb
push
dec
pop
dec
mov
adc
add
inc
pushf
cmp
daa
xor
jcxz
js
pusha
push
imulb
mov
add
dec
mulb
popa
ret
sub
in
or
mov
shlb
pop
sub
pop
add
fld
out
add
mov
jmp
fs
cwtl
inc
sub
popf
imul
add
out
ss
sbb
jge
gs
mov
shlb
add
repnz
jecxz
test
aam
out
fwait
sbb
sbb
sarl
dec
pop
in
sbb
xchg
and
mov
xchg
and
test
jb
and
push
call
add
bound
or
pop
inc
sahf
stc
rcrb
xchg
or
push
sub
cli
shlb
xor
pop
js
mov
pop
lahf
mov
xorb
jg
sbb
cmp
popa
xchg
or
js
lds
add
or
lods
inc
or
int3
push
and
mov
xchg
xchg
inc
in
repz
movsl
cmp
icebp
mov
push
jb
cld
lock
xor
add
lods
test
orl
loope
adc
mov
pop
push
xor
popa
or
cwtl
or
pop
mov
inc
lock
enter
push
or
sub
xlat
inc
divb
lods
insb
scas
fyl2xp1
sub
xchg
push
mov
add
xchg
ss
xor
add
stos
andb
add
insl
fucom
mov
hlt
pusha
shl
and
ret
push
or
xorb
lcall
mov
lock
or
add
push
mov
cld
push
push
jge
inc
add
ficompl
or
jle
out
and
mov
notb
loope
and
push
and
cmp
and
mov
xor
cmp
gs
cmc
ficoml
in
add
pop
aam
icebp
push
push
inc
sub
add
repz
out
cmp
int3
dec
outsl
dec
inc
add
jno
icebp
iret
cmpl
mov
push
dec
inc
ret
or
sbb
adc
mov
sbb
jns
dec
mulb
mov
in
movl
sub
lds
lcall
or
mov
in
cmp
sub
out
mov
add
mov
adc
add
and
mov
ja
mov
dec
sub
xchg
xchg
sub
add
lods
addr16
fdivrs
xor
pop
push
stos
xor
pop
dec
xor
popf
cmp
dec
insb
enter
dec
pop
lds
mov
inc
add
xchg
movb
int3
or
xchg
mull
nop
dec
dec
sub
sub
hlt
jb
addr16
dec
fisttps
add
mov
pop
fisubrs
gs
adc
xchg
mov
sbb
inc
lcall
andl
lods
pop
hlt
add
xchg
xor
mov
add
mov
mov
adc
mov
push
out
or
mov
xor
mov
test
shll
push
inc
mov
and
sub
mov
dec
divb
scas
cld
and
fidivrs
pop
ds
jl
dec
or
pop
inc
aaa
pop
or
mov
add
lahf
rcrb
xchg
iret
call
xchg
add
add
push
push
mov
add
push
xor
xor
in
pop
sub
lea
jno
sbb
pusha
clc
test
enter
test
mov
out
sbb
dec
fimuls
sub
xor
bound
and
outsb
in
or
add
loop
ret
les
jno
pop
inc
lods
push
rclb
dec
add
out
add
insl
sbb
mov
xor
sbb
adc
cld
cmp
or
jns
inc
add
ds
enter
dec
dec
mov
rolb
add
lods
ret
mov
add
pop
jg
add
adc
test
and
xor
fnstcw
outsl
je
mov
xchg
into
clc
xor
addb
adc
inc
popa
test
inc
mov
sbb
addr16
or
sbb
aam
sbbl
cmp
ror
pop
sub
fdivr
shrd
loope
leave
xchg
addb
int3
inc
inc
add
xor
adc
ljmp
sbb
ss
add
rcll
inc
enter
pusha
xchg
sub
test
in
iret
dec
inc
aam
push
mov
int
add
or
mov
mov
add
pop
xchg
test
jl
jecxz
scas
subb
cmp
add
inc
inc
pop
rcrb
nop
sbb
add
hlt
rcrb
mov
fnstsw
fucomp
adc
sub
out
loope
adc
adcb
stc
int3
xchg
xor
jl
out
sti
iret
cwtl
sbb
jns
inc
mov
jb
lret
sbb
xchg
mov
popf
and
std
dec
inc
jne
dec
ret
lret
pushf
das
call
and
pop
push
dec
out
or
jl
mov
ds
cmp
fwait
adc
rclb
and
lods
pusha
cltd
ss
andb
push
cmp
test
inc
lahf
jle
push
cwtl
sti
mov
es
add
fsubp
fsubrs
or
xor
les
jmp
ja
xchg
sub
iret
xchg
xor
xchg
ss
adcb
decb
orb
repnz
sbb
add
add
xor
adc
cwtl
add
jp
push
pusha
jmp
pop
adc
inc
xor
cmp
in
dec
test
stc
dec
test
ja
dec
or
dec
test
xor
jns
loop
pop
insb
adc
adcl
jg
add
in
sub
dec
push
ror
int3
pop
or
ds
test
mov
cmp
dec
cmc
sbb
mov
fwait
loopne
popa
lret
add
inc
add
adc
mov
test
rcll
je
enter
inc
cld
dec
lods
clc
stos
es
in
mov
daa
add
in
scas
and
jns
outsb
inc
into
in
xor
cwtl
pop
sbb
repnz
or
add
insl
push
xchg
inc
inc
pop
add
pop
adc
iret
xchg
mov
add
call
add
enter
lods
out
stc
cwtl
int3
and
adc
adc
mov
shlb
xchg
add
fdivrl
iret
fldl
lahf
fisubrl
adc
clc
adc
fsubrl
pop
inc
cmp
mov
andb
xor
cltd
mov
leave
hlt
sub
inc
xor
adc
lahf
testl
pop
inc
or
arpl
add
cwtl
std
sbb
dec
fisttpll
dec
mov
dec
xchg
pop
ljmp
lea
inc
or
icebp
sub
inc
jge
xor
scas
call
in
loope
cmp
and
mov
sbb
add
dec
shlb
cld
pop
shrb
dec
xchg
mov
sbb
outsl
xchg
mov
pop
jl
int
repnz
jge
lea
in
adc
or
sbb
pop
cmpb
sahf
and
adc
adc
adc
pop
and
push
cmp
pop
sub
pusha
stos
and
subb
xchg
enter
sub
adc
add
test
add
inc
add
mov
jns
data16
mov
ret
movsb
mov
test
sbbb
push
mov
gs
repnz
test
lcall
xchg
fnstcw
add
and
pop
jecxz
adc
shrb
pusha
pop
leave
mov
movsb
xchg
ja
subb
pop
repz
mov
and
flds
js
pop
inc
pop
and
adc
insb
lret
loopne
stos
dec
pop
inc
or
mov
fstl
pop
daa
jmp
mov
xor
dec
jp
xor
popa
sub
sbb
mov
add
insl
js
int3
imul
sub
pop
imul
inc
cvtps2pd
scas
xor
sub
gs
or
sbb
add
cld
pop
aas
jg
xchg
add
pop
clc
mov
js
jnp
add
pop
sub
loop
stos
pushf
add
loopne
xchg
or
jns
cmp
push
mull
add
outsb
scas
lds
bound
push
stos
gs
sbb
adc
push
cld
or
mov
rolb
inc
mov
inc
ljmp
shl
mov
push
es
lds
push
xchg
and
cmp
mov
push
push
lock
call
clc
xor
pop
add
aas
dec
or
xchg
les
cli
dec
inc
mov
xor
dec
mov
sub
cmp
inc
mov
int
pusha
insb
movsb
in
add
shl
adc
cmp
push
jae
mov
cmp
and
inc
jp
dec
in
pusha
loope
mov
add
bound
test
mov
int3
jg
xchg
test
inc
and
xchg
fnstenv
packssdw
loop
js
dec
xchg
adc
inc
nop
in
jmp
mov
and
movsb
out
cmp
jp
mov
jb
into
and
repz
xor
test
lret
jmp
out
and
cmp
sub
mov
jns
fs
pop
sti
jp
xor
inc
dec
das
loopne
cmc
add
mov
in
fsubrl
sbb
shrb
xchg
arpl
adc
add
mov
sub
insb
data16
xchg
and
xchg
je
jmp
popf
cmp
ficompl
pop
sbb
push
pusha
mov
add
mov
and
add
leave
push
adc
inc
pop
cwtl
les
orl
or
in
dec
cltd
shlb
sbb
ffree
aam
push
jmp
push
pop
sbb
lea
in
into
add
in
and
dec
pop
sbb
lods
scas
sbb
xchg
sub
hlt
repnz
notl
inc
fists
push
jg
and
enter
sbb
sbbb
mov
enter
test
sub
cwtl
loop
xor
jmp
cmp
and
mov
mov
out
frstor
in
inc
js
movb
push
int
sub
fldenv
cmpsl
mov
sarb
stos
add
mov
adc
mull
shl
add
clc
adc
mov
jg
add
hlt
ss
add
enter
ret
pop
adcl
scas
call
orb
out
add
scas
lods
and
sbb
dec
adc
add
mov
shlb
daa
or
pop
mov
mov
aam
loopne
add
fbstp
sbb
add
leave
rol
mov
and
lea
add
and
addb
push
repnz
sbb
pusha
mov
mov
faddl
cli
jbe
imul
roll
inc
jns
sbb
daa
adc
out
in
sbb
and
add
mov
dec
cs
aaa
add
fnstenv
or
jp
add
jecxz
add
xor
loopne
xor
test
mov
dec
pop
fsubrs
sbb
jno
jb
js
or
scas
mov
jmp
cs
sbb
sub
sub
orb
pushf
push
sbbb
mov
roll
jo
inc
xor
dec
mov
or
shlb
inc
mov
xor
xchg
cmpsl
fidivs
pusha
push
push
pop
loopne
fs
ss
inc
icebp
es
or
cmp
inc
lret
shl
adc
lret
rcrb
fs
ret
mul
pop
mov
sub
push
xor
cmp
addr16
pop
ja
add
jo
scas
sbb
dec
cmp
bsf
jg
sub
jnp
jae
call
or
icebp
inc
repz
inc
jl
ss
sbb
add
jl
out
rolb
add
std
mov
xchg
xchg
or
stc
outsl
xor
or
inc
push
adc
cmp
dec
jo
nop
pop
in
add
xchg
pop
or
mov
sub
cld
mov
cmp
not
bound
sbb
mov
and
sbb
mov
pop
pop
aas
xor
out
sbb
in
mov
es
xor
mov
dec
loopne
mov
shr
sbb
sbb
dec
cmp
sub
xor
dec
mov
sbb
mov
fildll
and
dec
gs
mov
nop
sub
xor
add
adc
fs
loopne
push
add
test
add
stos
xchg
jnp
xor
lret
pop
xchg
lahf
stos
arpl
je
adc
mov
clc
add
xchg
insb
data16
and
adc
and
mov
pop
dec
adc
add
xor
cmp
in
xor
shlb
popf
iret
pusha
fnstcw
cld
mov
mov
and
mov
je
addl
jo
add
sub
sbb
imul
mov
cmc
popa
cmp
aam
add
sbb
inc
enter
mov
push
lods
pop
fcmovb
xor
xchg
dec
adc
movl
sbb
dec
or
ds
xchg
cmp
or
lcall
add
mov
jge
bound
cmp
out
sub
cli
sub
pusha
sub
or
andb
or
pop
sbb
shr
push
push
add
jmp
rcrb
sti
or
dec
add
mov
add
pop
mov
dec
push
adc
adc
call
hlt
mov
push
out
loopne
rcr
push
mov
jnp
dec
pop
sahf
bnd
pusha
and
add
addb
cmp
pop
adc
in
dec
ds
int3
rcr
and
add
xchg
andl
dec
dec
or
leave
cwtl
adc
loope
inc
dec
adc
iret
in
push
mov
jae
inc
aas
outsb
rcrb
rcl
inc
and
sub
sbb
mov
lods
sbb
fildll
fcmovbe
pop
xor
lock
loope
add
loopne
icebp
add
bnd
dec
cmp
sbb
repz
add
dec
test
inc
mov
sbb
mov
jns
pop
mov
insl
es
orb
mov
sahf
clc
push
adc
hlt
arpl
lret
push
adcb
inc
mov
sub
xchg
and
or
scas
arpl
jbe
pop
shl
mov
js
aas
xor
pushf
xchg
or
dec
sbb
push
jg
fbld
jp
add
popl
cmp
inc
mov
movsb
xchg
testb
sbb
add
or
cs
test
cmp
or
loope
adcb
mov
jae
or
call
add
pusha
loop
push
xor
insb
mov
movsb
and
dec
fidivs
sbb
adc
clc
out
cltd
or
add
mov
mov
dec
mov
jno
jmp
adcb
cmp
les
popa
mov
lock
icebp
inc
push
insl
and
jae
sbb
cmp
pop
push
pop
fsts
fimuls
sub
cmp
int3
push
nop
mov
xor
sbb
jo
pop
xchg
call
test
pop
adc
les
inc
add
pop
inc
mov
xlat
pop
jae
xchg
xchg
rcr
addl
inc
incl
mov
add
adc
inc
xchg
sbbb
jo
bsr
loope
sub
mov
push
or
sbb
and
and
sbb
mov
mov
inc
push
arpl
add
ret
aas
xchg
jno
imul
dec
pop
xchg
pusha
cwtl
jo
lods
mov
mov
adc
jle
rolb
add
dec
inc
jle
add
outsl
lods
fcoms
repnz
cld
clc
push
xchg
mov
cmp
into
add
out
fistpl
jmp
push
cmp
sbb
mov
roll
sbb
je
cmp
sbb
pop
stc
ds
fists
jg
mov
and
test
and
cmc
lock
pop
fidivrl
out
push
aad
adc
into
xor
or
dec
orb
mov
inc
pop
test
add
add
sub
pop
mov
mov
ss
inc
xor
lret
push
or
xchg
add
cmpsl
or
and
sbb
idivb
test
cltd
and
sbb
clc
sub
mov
push
movl
xor
lds
xor
nop
mov
pop
sbb
dec
mov
lret
xlat
and
dec
int
adc
add
push
insb
loop
push
loopne
add
and
and
add
mov
add
out
popa
mov
push
xchg
add
push
pop
or
cmp
add
add
pop
or
fsubrl
jno
daa
or
mov
orl
inc
adc
jb
repnz
lcall
jge
and
mov
inc
push
lahf
mov
jne
movl
fcoml
repnz
xor
and
jg
push
mov
push
gs
jmp
xor
add
push
adc
enter
push
adcb
mov
mov
cmp
ds
call
popw
xchg
cmp
and
mov
sbb
ja
lock
ja
mov
xchg
popa
addr16
lea
xlat
cwtl
out
sbb
stos
or
or
jle
add
shlb
cmpb
mov
cli
xchg
jmp
inc
pop
xchg
sbb
xchg
pop
mov
xor
add
inc
loopne
or
nop
outsl
xor
lock
sbb
jns
loopne
shlb
inc
sub
out
add
add
cmpb
mov
mov
add
js
gs
adc
add
daa
mov
std
sbb
xor
push
add
icebp
das
lods
xorb
add
or
mov
les
mov
sahf
mov
add
je
scas
pop
pop
stc
push
adc
jmp
scas
pop
adc
push
cmp
xchg
sub
gs
add
xchg
pop
add
ss
or
sbb
jle
or
add
sbb
add
dec
or
sub
std
in
lea
pop
cltd
cmp
into
insl
stos
loop
and
repz
mov
push
push
leave
cmp
xchg
dec
add
inc
cmpsl
add
xor
or
jno
adc
cwtl
pop
movsb
fiaddl
fwait
loopne
push
sbb
test
fadd
ja
out
in
push
add
mov
sti
pop
add
sbb
dec
fdiv
and
cld
mov
ret
mov
jle
and
dec
push
in
add
inc
xchg
in
mov
dec
and
out
and
cli
add
add
xor
cwtl
mov
mov
dec
or
xchg
add
std
and
cmc
addr16
push
mov
inc
xchg
and
and
ja
pop
stos
mov
xchg
add
dec
pusha
xor
cli
lea
sbb
nop
add
jnp
dec
mov
out
cmp
in
fcomps
xor
jg
cmp
mov
out
adc
push
xor
enter
nop
jo
xchg
movsb
pusha
add
test
nop
mov
cmpb
testb
jl
pop
dec
js
add
inc
orl
pop
in
jp
fwait
jg
sbb
test
in
add
call
push
push
roll
out
fisubrs
inc
in
add
mov
dec
into
adc
sbb
repnz
or
cmpsl
or
add
shlb
mov
lds
add
mov
out
out
or
rcrb
call
jne
aam
data16
mov
jge
ss
push
out
xor
add
pop
push
xlat
aas
push
inc
cmp
sub
je
add
sub
andb
push
stc
out
xchg
xchg
lret
mov
push
inc
les
jae
add
in
push
rcr
mov
nop
jae
pop
pop
xchg
add
cmp
and
pop
mov
dec
add
subl
sbb
sub
arpl
push
es
stos
repnz
jo
ret
movsl
shlb
add
outsl
pop
insl
sbb
mov
sub
cld
test
mov
add
add
or
int
jae
repz
or
mov
es
into
enter
bound
pop
rclb
int
and
sbb
dec
xchg
mov
and
xor
add
out
inc
push
sbb
push
and
push
sbb
stos
aad
adc
push
adc
inc
inc
adcb
mov
add
mov
add
lcall
xchg
shlb
jne
dec
sbb
push
lods
lea
cmp
add
push
addb
subl
jnp
add
out
inc
cmp
mov
stc
mov
test
xchg
add
dec
nop
xor
jo
mov
lcall
repnz
rorb
scas
in
ffreep
inc
xchg
and
jle
add
xchg
clc
iret
out
subb
stc
outsl
sbb
shrb
sbb
mov
dec
es
shrl
dec
or
xor
push
mov
mov
add
add
call
mov
and
and
sub
ljmp
pop
mov
lock
dec
mov
nop
mov
mov
aaa
push
dec
push
fucomi
lahf
add
into
inc
stos
cmpsl
dec
shl
mov
push
dec
aas
adc
add
pop
mov
das
pushf
ret
inc
xor
mov
pop
int
ljmp
adc
pop
xor
mov
or
or
sbb
popa
add
js
add
jmp
dec
mov
lods
adc
and
std
fsts
loopne
fiadds
mov
or
dec
mov
xor
xchg
ds
mov
mov
pop
xchg
bound
adc
and
lret
mov
lock
add
lods
popf
adc
test
into
bound
add
adc
movsb
les
rcrb
cmp
loope
inc
ret
and
lea
ret
push
lahf
sub
nop
in
incl
rcll
xor
push
test
jo
inc
data16
add
aad
fwait
xor
cmpsb
arpl
xchg
lahf
jae
add
mov
push
adcb
mov
mov
subb
lcall
sbb
js
add
add
int
cmp
xor
adc
xor
push
arpl
add
add
inc
mov
sbb
inc
sti
push
mov
rol
xchg
pop
hlt
add
cld
dec
addr16
lcall
jle
push
add
notl
inc
add
lods
sti
or
jmp
fistpll
and
mov
sub
loopne
inc
and
sahf
add
xchg
in
or
lods
inc
aas
add
rcl
movsl
pop
pop
mov
add
mov
add
sbb
sub
pop
sbb
clc
scas
loope
test
les
push
or
xlat
push
idiv
push
dec
add
push
fisubl
mov
incl
add
jno
imul
sbb
sub
loopne
test
and
cld
jns
test
push
enter
cs
mulb
into
inc
ret
adc
and
addr16
dec
add
add
jg
mov
inc
add
fsubrs
xor
data16
mov
dec
add
mov
pop
push
ds
bound
add
aas
mov
push
sbb
mov
dec
sbb
adc
fs
rcrl
sbb
mov
and
adc
nop
andb
stc
test
scas
clc
jns
movsl
pop
jo
movl
cmp
mov
call
data16
fdivl
roll
jo
jmp
xchg
sarb
sub
andb
push
xchg
cltd
lock
cwtl
rcrb
xor
or
add
aad
lods
push
push
cmp
jae
outsb
add
pop
fisubs
pop
cld
adcb
leave
mov
stos
testl
addr16
mov
rcr
mov
movb
cmpsl
and
xchg
push
mov
push
movsl
rorb
mov
pop
mov
xchg
or
cmp
sti
pop
test
jmp
cmp
add
inc
pop
int3
pop
out
add
and
xchg
scas
jecxz
xor
push
cmp
jns
sar
jae
rolb
sub
mov
inc
push
cli
xor
cld
gs
imul
into
aas
lods
jbe
test
inc
mov
xor
add
clc
push
popl
cs
stc
xorb
xor
pop
xchg
lods
cmp
sbb
clc
push
aam
or
sub
mov
lods
sbb
jp
gs
push
mov
jne
or
pop
adc
outsl
jae
fidivrs
add
loop
mov
xor
in
jmp
mov
rcrb
inc
cmpsl
pop
fistpl
mov
dec
inc
mov
aas
cmp
ret
add
repnz
mov
dec
lock
andl
lods
pop
sbb
add
shll
sbb
sbb
pop
cmp
mov
xor
repnz
scas
addr16
pusha
mov
stos
stos
xchg
scas
incb
cmp
insl
fs
cld
cmp
in
sbb
cld
add
dec
imul
dec
xchg
pop
sub
sub
mov
pop
lods
testb
mov
mov
pop
data16
test
insl
sbb
jae
inc
xchg
xlat
add
mov
stos
pop
add
inc
jno
mov
popa
aaa
stc
pop
fdiv
push
fcmovb
rorb
and
rclb
adc
mov
pop
push
hlt
jl
int3
xor
xchg
das
adc
mov
mov
in
adc
and
push
sub
push
movsb
xchg
gs
stos
shlb
dec
ja
and
add
jg
add
enter
dec
lods
pop
add
nop
add
push
mov
cmp
mov
inc
outsl
add
mov
inc
sub
lcall
das
or
xchg
add
es
cmp
daa
ret
test
cmp
jmp
faddl
idivb
mov
pop
or
mov
les
cmp
inc
cs
shlb
es
test
push
dec
popa
add
loope
lcall
xchg
out
jno
and
sbb
loop
inc
sarb
sti
add
pop
mov
dec
clc
xlat
sub
stc
out
mov
pop
pusha
adcl
aaa
rorl
in
orb
add
outsb
and
push
into
jmp
cmpb
inc
jp
icebp
inc
out
adc
cmp
jmp
out
sbb
jl
mov
push
int3
movsl
push
or
in
cmp
dec
lods
fs
mov
loopne
addb
aaa
pop
gs
or
pop
cmp
pop
lcall
mov
addl
pushf
icebp
add
xor
addr16
add
test
nop
fistpll
jge
scas
pop
add
jmp
pop
xchg
inc
or
add
mov
add
aas
mov
dec
ret
insb
add
add
pop
mov
add
arpl
xor
add
pop
rcrl
lock
lods
mov
add
jns
rolb
sahf
jo
aas
push
ror
push
adc
push
repz
and
cli
add
leave
inc
and
cli
adc
lods
add
sbb
or
jne
add
add
inc
call
add
cmc
into
adc
sub
outsl
ja
sbb
add
lret
sbb
add
inc
stos
loope
adc
outsl
repz
ret
or
das
and
pop
movsb
add
xchg
movsb
test
xor
or
jns
mov
xchg
add
popf
dec
jle
gs
add
cmp
lahf
adc
fsubs
add
popa
rorb
push
je
push
ror
call
subb
push
scas
ljmp
and
gs
lds
in
addr16
sbb
mov
adc
pusha
add
xchg
xor
ja
out
add
mov
scas
mov
dec
mov
jo
aam
lret
push
in
arpl
xor
cs
pusha
and
add
cmpsl
stos
mov
inc
and
add
lods
sub
inc
leave
fldt
mov
mov
rcrb
xor
repnz
mov
dec
push
mov
dec
outsl
adcl
repz
cwtl
imul
les
mov
ret
pusha
cmp
pushf
inc
lret
mov
dec
rorb
mov
add
adc
jmp
jb
jae
add
jbe
test
enter
push
xor
ja
test
sub
sub
mov
or
fcoms
std
pushf
cmp
xchg
add
pop
test
loope
sub
out
test
stc
xchg
and
lret
rcll
dec
sub
pop
jmp
cmc
jle
xchg
pop
cmp
cmp
mov
and
cmp
adc
mov
dec
add
outsl
mov
popf
ds
mov
mov
mov
add
cmc
mov
ret
movsb
pusha
sub
cmpsl
add
jns
cwtl
leave
inc
cmc
fadds
sub
ret
int3
mov
push
or
lcall
in
popf
pop
call
lods
inc
pop
adcb
cmp
in
push
pusha
mov
mov
xor
rcrl
in
repnz
adc
add
mov
iret
mov
mov
add
cli
adc
push
xor
add
pop
int3
sub
shlb
inc
fsub
mov
add
push
ljmp
adc
mov
insw
pop
mov
arpl
inc
fiadds
pop
and
jge
mov
dec
xor
and
push
adc
add
sub
fadds
insl
arpl
mov
test
pop
mov
xor
cld
aas
hlt
cmc
push
add
dec
xchg
outsb
add
rorb
andb
je
cld
dec
shll
es
dec
into
pusha
pusha
iret
push
sbb
mov
shrl
gs
fmuls
dec
fadds
push
lock
add
xorb
fadds
pop
stos
mov
pop
adc
mov
dec
stc
divb
ljmp
lods
loop
add
leave
paddb
test
cs
jne
fbstp
lock
or
xchg
frstor
dec
loope
call
test
loopne
mov
decl
jle
std
adc
cs
lret
pop
clc
test
lret
and
xchg
xchg
movsb
jne
cmc
add
sub
sbb
or
jmp
cmp
mov
mov
push
sbbb
mov
and
cmpb
out
sbb
hlt
js
and
ljmp
jo
mov
xor
add
or
nop
sub
and
pop
loopne
das
std
add
out
xor
fistpll
and
pop
or
mov
stos
jns
add
cwtl
mov
loopne
imul
sbb
add
mov
shr
add
pcmpgtw
jmp
fdivrs
in
jle
mov
and
cmp
fs
rol
push
cld
sbb
inc
push
call
fcmove
mov
mov
and
pop
add
inc
mov
scas
outsl
dec
or
pop
loopne
popl
or
push
fwait
imul
add
dec
nop
insb
pusha
push
dec
pop
or
aas
inc
pushf
in
aaa
add
push
mov
add
mov
shl
ljmp
xchg
xchg
add
mov
mov
push
lods
movsl
or
jmp
pop
test
addl
rol
pop
shrb
call
dec
xlat
shlb
addr16
repnz
jne
pop
call
add
push
cltd
loopne
stc
push
div
lds
add
aam
push
mov
cmp
jne
movsb
dec
mov
repz
fcoms
mov
jbe
imulb
sbb
ret
inc
xchg
paddb
and
inc
inc
jge
mov
add
jo
call
sqrtps
scas
mov
mov
stos
pop
mov
inc
jg
xchg
addr16
adc
xchg
sbb
shr
call
xor
movsb
rcrb
repz
das
enter
bound
add
lods
jl
mov
and
popa
das
jge
sub
incb
push
addb
jae
add
cld
pop
scas
add
arpl
add
nop
xchg
and
inc
push
add
mov
pop
inc
add
inc
daa
xchg
sbb
lds
cmpsb
mov
out
push
push
mov
xor
inc
add
sbb
push
xor
jmp
lods
mov
push
sub
stos
nop
add
push
pop
lea
mov
cmpsb
mov
sub
and
push
decb
lahf
addr16
addb
std
push
fldl
push
mov
add
sub
repz
es
mov
daa
call
enter
addr16
or
testl
les
iret
pop
or
or
sbb
push
pop
lea
add
xchg
negl
pop
mov
in
push
mov
mov
es
jb
add
add
jp
lahf
push
into
in
push
out
pop
jno
add
inc
adc
add
stos
push
push
cs
add
stc
or
mov
adc
inc
sub
jb
les
sti
int
pop
add
mov
adc
fwait
mov
dec
add
push
lar
cmp
jb
inc
add
xchg
les
add
aaa
xchg
into
push
sahf
push
jnp
pop
jge
mov
add
dec
inc
mov
mov
adc
inc
add
mov
xor
xor
dec
sub
ss
push
add
aam
andl
mov
and
push
enter
out
cmp
and
packssdw
sahf
mov
mov
inc
mov
add
push
ret
movl
cmpl
add
test
xchg
inc
lock
or
test
mov
sub
and
push
fwait
mov
jbe
rcl
add
jmp
mov
xchg
add
popf
xor
cld
str
dec
fimull
pop
lods
and
and
add
pop
mov
test
push
enter
push
mov
inc
mov
sub
xor
and
pushf
mov
out
xor
xchg
add
add
mov
sbb
pop
dec
bound
add
cmpsb
pop
rorl
faddl
fadd
mov
ja
add
pop
lock
push
sahf
pop
lods
test
in
xor
pop
or
cltd
xchg
push
leave
lock
mov
push
add
pop
ret
cmpsb
add
sbb
out
mov
imul
jbe
sbb
pushf
pop
add
add
mov
roll
repnz
push
inc
insl
or
sbb
mov
mov
jge
mov
add
add
lock
ljmp
or
dec
lahf
sub
add
cmp
cli
rorb
aad
outsl
push
inc
je
adc
dec
ret
xchg
pop
jb
mov
mov
cmp
jo
ret
sub
repz
push
decl
fnstsw
fcoms
pop
movl
das
idiv
aad
inc
jb
mov
add
roll
mov
dec
les
add
mov
nop
inc
andl
enter
int
out
roll
shl
or
jbe
xorb
mov
add
insb
call
xor
and
add
pop
jp
push
cmp
stos
add
jne
pop
jb
ds
repz
mov
popf
sarb
loop
xor
adc
mov
xor
or
jp
jb
add
std
xor
cmc
dec
xor
inc
sub
and
loope
add
negb
push
sbb
xchg
shlb
clc
iret
pop
mov
seta
cltd
movsb
fdivrl
mov
push
xor
mov
pop
data16
jns
dec
inc
pusha
adc
sbb
cmp
inc
inc
loope
scas
push
mov
push
or
push
add
and
mov
hlt
add
jp
jl
pop
int
inc
mov
mov
xor
dec
rcrb
push
jnp
subb
leave
aam
dec
add
mov
ja
loopne
ret
add
dec
xchg
push
push
fs
fadds
inc
xor
jbe
mov
add
cmp
in
and
add
pop
aas
enter
int
outsb
cmp
mov
mov
dec
aas
jno
push
push
sub
add
les
xlat
cmp
mov
shl
or
fcoml
mov
pop
arpl
sub
pop
pushf
push
pop
xchg
jp
mov
lods
bound
popa
inc
mov
jnp
sub
fisubrl
rorl
add
xlat
aaa
push
out
pop
pusha
cmp
jno
sub
ficoms
ja
dec
add
pusha
lods
jbe
rclb
aad
inc
fwait
hlt
cwtl
pop
or
mov
cli
call
lret
es
and
add
cmp
add
and
dec
test
aas
cmp
cmp
sbb
adcl
push
shrb
jg
jno
xor
cmpsb
inc
mov
bound
ret
ljmp
and
imul
outsb
sub
loopne
pop
ficomps
sub
fs
mov
push
dec
int3
or
xchg
pop
in
mov
xchg
shlb
add
aas
imul
push
cld
pop
add
out
mov
or
or
sbb
ret
xchg
add
fldt
inc
aas
clc
repnz
add
in
je
fdivr
ret
inc
out
or
in
cmp
cmc
cmp
or
mov
xor
aam
push
lahf
push
lret
pusha
test
pusha
cmpsl
inc
sub
adc
sarl
jle
loopne
jnp
mov
popl
cmp
fcomps
sub
or
mov
test
in
push
lock
xor
add
daa
add
imul
orb
add
jp
inc
int3
jnp
subb
fmuls
idivb
imul
stos
cmp
inc
lret
sub
push
lahf
fsubrl
ret
or
imul
mov
test
maxps
dec
dec
int3
inc
push
stc
and
add
pop
inc
frstor
add
icebp
jg
add
test
imul
cmp
jge
dec
fxch
gs
and
xchg
std
rclb
or
popf
xor
hlt
jo
or
sub
mov
lea
mov
xchg
jno
loope
mov
dec
add
xor
push
inc
or
adc
add
jecxz
enter
fistpll
add
int3
sbb
cmpsl
mov
nop
mov
xchg
and
pushf
and
dec
loopne
in
adc
push
mov
icebp
mov
mov
or
add
fidivrl
int3
fsub
jb
lods
mov
pusha
fbstp
dec
inc
xor
ret
dec
lock
xchg
notb
jecxz
and
jp
pop
movsl
out
add
fldcw
cli
add
jns
test
jno
or
jae
fimull
sub
mov
lods
inc
ja
sbb
sbb
out
cmp
rorl
push
xor
pusha
push
inc
je
mov
push
cmp
xor
movsb
test
loopne
adc
push
push
jecxz
inc
xor
push
sbb
bound
mov
out
andl
add
cmpsb
jns
sbb
or
cmpsb
lret
xchg
add
dec
aas
lods
mov
mov
sub
mov
mov
sub
adc
pop
add
jb
inc
enter
xor
cmp
xchg
cwtl
testb
mov
add
cmpsb
xchg
out
fildl
sti
add
arpl
clc
push
data16
xor
mov
or
sti
jae
cmp
cmc
imul
add
ret
jne
adc
adc
data16
xor
std
arpl
sub
pop
adc
in
or
mov
mov
fiaddl
mov
ss
repz
adc
xor
and
in
cmpb
push
push
or
ret
xorb
sbb
dec
cld
lret
js
sub
cmpsb
mov
lods
test
dec
and
pusha
and
or
test
enter
sbb
inc
ret
sbb
push
sar
test
pop
ljmp
imul
loopne
sub
repnz
add
or
fwait
mov
dec
scas
mov
push
sub
push
js
aas
aam
shlb
shrl
dec
xor
bound
stos
push
xchg
ja
dec
call
jne
repz
sbb
mov
insl
add
mov
jns
aaa
mov
cmp
dec
shr
xchg
addr16
xchg
dec
pop
in
add
aad
loopne
lock
roll
sub
lcall
xor
icebp
cmpsb
test
xor
test
lods
push
push
mov
add
cmp
xor
fistpll
add
scas
add
or
sbb
pusha
pop
loop
push
xchg
mov
and
xor
rcrb
and
mov
les
pop
clc
aaa
cltd
mov
test
mov
insl
in
jge
mov
cmp
mov
adc
insl
or
movsb
nop
push
test
dec
stos
int3
mov
rcr
jp
dec
out
and
xlat
cmpsb
cli
ret
or
or
mov
and
jl
jl
jl
sub
mov
adc
inc
adc
shl
loop
lods
xlat
cmp
push
mov
jo
daa
cs
imul
mov
dec
ret
pop
inc
xchg
mov
add
xor
jge
sub
mov
cld
mov
mov
test
add
out
in
leave
and
test
push
data16
cltd
cld
sarb
push
xor
mov
mov
mov
out
incl
push
pusha
shl
mov
xchg
push
gs
or
lods
sub
loopne
leave
out
mov
pusha
mov
pop
sub
jo
inc
jmp
or
ret
or
sub
or
in
add
xor
sbb
add
inc
test
rclb
sbb
sbb
push
fstps
jge
xchg
les
adc
ss
add
push
xchg
push
js
loopne
fs
sub
mov
and
jge
cld
push
sbb
int
jmp
mov
xorb
cmp
add
jbe
into
jl
mov
pop
cwtl
and
or
push
cmpsl
or
sub
sub
xor
add
ret
or
mov
pusha
xchg
hlt
rolb
xlat
or
sbb
arpl
popf
add
push
mov
xchg
mov
adc
inc
sub
add
jo
add
add
testb
add
pop
ret
inc
addr16
cltd
movsl
inc
or
inc
pop
and
mov
xchg
pop
pop
addr16
faddl
ds
imul
push
sub
push
shl
pop
js
xor
fnstcw
insl
test
push
mov
sub
je
sub
decl
icebp
xor
push
stos
fidivrs
or
loopne
in
lret
sbb
xchg
and
mov
push
adc
roll
cmp
je
xor
dec
js
sub
mov
lcall
ret
cwtl
je
loop
inc
jge
xor
sub
sbb
fildl
adc
pop
or
cmp
jne
adc
mov
mov
fnstenv
adcb
ret
and
xchg
cmp
jle
data16
add
loopne
pop
or
ja
lods
rorb
inc
int3
jg
adcl
test
mov
jp
es
xchg
je
test
mov
aam
nop
arpl
jb
mov
stc
je
mov
add
lret
push
loopne
adc
dec
cmc
cmp
lock
mov
orb
aaa
adc
pushf
add
dec
fdivl
inc
test
std
pop
sbb
cmp
pushf
je
cmp
push
and
xor
lcall
push
or
stc
inc
fadds
adc
inc
cmp
xor
test
xchg
cmp
and
es
add
inc
add
nop
add
popl
jbe
dec
dec
mov
adc
cmp
xor
push
jns
jno
sbb
movsb
popa
pop
lock
pop
loop
cmpb
rcrb
cmp
pop
mov
js
sbb
and
push
sub
faddl
inc
mov
sbbb
cmp
testl
dec
and
push
pop
lods
movsl
call
inc
mov
or
sub
sbb
mov
jne
add
add
in
dec
sub
and
addl
or
xorl
call
mov
bound
call
mov
shrl
mov
fwait
mov
loope
jae
mov
jg
nop
push
pop
icebp
xor
sub
adc
xchg
adc
fwait
adcb
sub
xor
push
and
rcrl
dec
sub
out
inc
cs
lods
inc
cmp
and
dec
inc
add
xchg
add
add
jno
mov
andps
push
dec
test
or
cmp
inc
negl
fimull
cmpsb
je
incb
sahf
pop
push
cmpsb
mov
loopne
aam
add
inc
or
movsl
aam
cmp
add
out
test
ret
mov
xchg
dec
push
shlb
mov
js
adc
inc
mov
dec
imull
aaa
jge
push
insb
or
scas
mov
add
arpl
xor
cld
je
mov
or
inc
popa
or
sbb
cltd
in
mov
pusha
imul
push
jnp
or
mov
add
pop
adc
inc
fsubl
nop
fs
cbtw
rorb
clc
and
mov
loop
lods
mov
cmp
mov
inc
out
mov
enter
mov
adc
add
outsl
pop
or
jno
rolb
add
fcoms
scas
popl
arpl
test
push
push
cli
cmp
insl
mov
add
mov
dec
loope
js
pop
inc
push
pop
test
insb
fdivrs
aas
inc
mov
js
notb
mov
add
bound
xor
add
adc
xor
and
cli
pusha
icebp
cmpsb
jae
loopne
jl
pop
fsubs
arpl
shlb
popa
icebp
cmpsl
pop
add
in
outsb
add
fs
pusha
lods
icebp
mov
pop
add
hlt
movsl
les
and
and
add
dec
sub
xor
testl
cs
call
adc
imul
lock
sbb
repz
nop
cmp
or
jno
dec
dec
push
js
or
inc
pop
add
dec
shrl
jbe
xor
ret
fdivrl
pop
jb
test
add
pop
js
popa
test
iret
add
mov
xchg
scas
dec
sbb
shrb
insl
mov
sbb
jae
je
cmp
mov
pop
add
repnz
stc
lds
dec
popf
add
add
aas
pop
jb
subl
fsubs
push
add
sbb
test
fadds
jp,pn
or
adc
jb
add
outsl
call
sbb
ret
adc
cs
cmp
mov
xor
jecxz
movsb
adc
mov
mov
into
push
cmp
int
push
repnz
mov
sbb
sub
xor
or
arpl
or
xor
fs
sahf
inc
mov
pop
inc
mov
aas
xor
sbb
fwait
iret
lock
add
hlt
and
pop
insb
add
jae
mov
shlb
inc
je
sub
inc
mov
ljmp
sub
push
cld
or
mov
add
fwait
test
add
mov
loope
push
and
aam
bound
inc
fildl
dec
call
cwtl
fldl
pushl
inc
ds
jmp
inc
inc
and
jecxz
cmp
mov
mov
xchg
cwtl
pop
inc
cs
fnsave
pop
inc
loop
cmp
aam
ja
cltd
and
insb
addr16
push
sub
mov
jnp
bound
xor
mov
arpl
push
dec
in
or
pusha
loopne
fcmovu
and
fiaddl
out
xor
push
aaa
loop
adc
lock
add
xlat
inc
hlt
push
xor
andl
shrl
jnp
adc
sub
add
xor
pop
nop
cmp
into
fsubs
es
js
dec
daa
mov
xchg
push
rcl
sbb
add
out
lods
jae
fnstcw
and
xchg
xor
xor
jge
sbb
out
fldt
sub
loop
stc
push
inc
lock
out
push
inc
pop
dec
add
jne
repz
adc
push
adc
inc
jo
jg
xchg
add
jge
in
pushf
lds
xchg
add
xorb
nop
pop
sub
dec
sub
adc
hlt
adc
xchg
sbb
add
sarl
stc
and
or
in
mov
sbb
xchg
test
sbb
data16
ret
adc
orl
imul
dec
add
test
fdiv
or
add
adc
in
mov
clc
sub
and
mov
stos
add
add
enter
adc
push
imul
and
sbb
push
lods
iret
mov
call
enter
pop
addr16
mov
push
xor
nop
or
adc
cmpsl
push
xchg
jl
xor
std
test
test
cmp
mov
sbb
xor
push
lods
out
dec
pop
adc
lock
or
inc
pop
jns
movsl
out
or
popl
je
clc
cmp
add
outsb
mov
pop
shlb
sub
adc
es
xor
inc
cwtl
add
aas
xchg
dec
and
push
add
sub
sub
out
dec
lock
js
loop
push
inc
and
jnp
add
jmp
loop
mov
out
and
and
hlt
sub
push
test
dec
leave
mov
rclb
jp
add
push
cmp
add
gs
xchg
or
and
inc
mov
xchg
xor
xchg
testb
add
pop
addr16
xor
jmp
out
cmpsb
jo
faddp
rolb
pop
fldenv
cmp
add
in
sub
mov
lods
test
sbb
test
or
pop
mov
cmpb
xor
and
in
lcall
pop
mov
jl
daa
pop
test
dec
insl
jge
les
out
sub
jns
aam
add
mov
and
mov
nop
and
cltd
jle
cmpsl
fists
push
movsb
sarl
cmpl
fistpl
and
or
and
nop
sub
add
sub
and
movsb
and
not
nop
in
ja
scas
sub
pushf
mov
movsb
push
mov
aam
mov
hlt
rcrl
push
mov
adc
xchg
movsb
shll
inc
or
ja
dec
test
adc
jecxz
add
xor
sbb
jbe
int3
push
nop
add
cmpsb
jne
aas
test
js
or
sbbb
in
nop
popf
mov
ret
mov
dec
add
sarb
mov
rcrb
add
fsubs
pusha
inc
pushf
je
dec
adc
sar
call
cmp
pop
sbbl
inc
rorb
outsb
les
jge
mov
mov
add
paddusb
dec
sub
jo
adc
mov
jbe
lahf
sbb
sub
lock
adcl
sub
or
ja
sub
adc
sbb
push
adc
push
in
lret
or
fwait
sbb
adc
loope
inc
push
or
or
pop
out
xor
or
ret
sub
xor
out
aas
sub
xchg
inc
mov
orb
xor
fwait
and
aad
sub
aam
mov
add
add
lods
enter
popa
dec
xor
xchg
xor
shrl
or
nop
in
icebp
pusha
nop
jge
sub
outsl
jnp
jbe
cmc
jne
cmp
cmpb
mov
inc
add
insb
lods
in
bound
or
lcall
jecxz
add
inc
out
notb
jae
mov
pushf
and
pop
pop
out
lret
jo
xchg
rcl
inc
faddl
hlt
lret
inc
xchg
sub
es
mov
add
inc
pop
add
insb
cmp
or
cld
lock
nop
je
rclb
cmpsl
call
add
or
in
and
mov
lods
pop
loopne
inc
jl
jae
add
cmp
loopne
dec
add
fcmovnb
ret
pusha
push
popa
and
movsb
push
int3
jno
sbb
xchg
mov
jl
sub
ljmp
jge
pop
das
jno
mov
es
xchg
xchg
mov
mov
inc
sub
add
or
cs
xor
mov
repz
sti
cwtl
mov
jecxz
cmc
push
fnstenv
or
pop
out
xor
xor
push
ljmp
jle
mov
in
sub
pop
je
out
adc
fdivrl
lds
pop
and
xor
popf
shrb
add
xchg
adc
mov
push
xor
es
leave
jp
insl
rorb
stos
add
in
pop
sub
cwtl
pop
push
xchg
or
adc
lods
mov
dec
sub
sti
sub
add
call
test
mov
pop
sbb
fwait
sbb
pop
imul
adc
xorb
add
adc
inc
jecxz
les
dec
pop
enter
jae
loope
sub
cmp
jge
add
test
push
aaa
sub
cs
push
xchg
mov
sbb
add
in
adc
add
lea
mov
mov
jle
dec
or
mov
sahf
push
xor
mov
adc
xor
lret
xchg
scas
and
xor
jmp
adc
xor
mov
pusha
sbb
mov
jns
mov
inc
cmp
pop
inc
jno
cs
xor
incl
xlat
xor
gs
mov
call
cmp
test
nop
add
nop
imul
dec
cwtl
push
or
sub
jns
out
mov
mov
ficoml
orb
sub
pop
fcmovnb
scas
fs
add
sub
mov
jb
or
call
adc
repnz
repnz
pop
inc
or
orb
aam
or
mov
test
in
sub
inc
pusha
out
jg
nop
pop
hlt
push
rorl
xor
inc
push
or
jns
sbb
ljmp
pop
imul
dec
and
shrb
test
push
out
adc
cmp
test
out
push
xor
cmpsl
xor
jmp
inc
dec
cs
mov
adc
loop
call
mov
xchg
mov
jp
pop
mov
scas
pushf
stos
pop
lock
in
repnz
imul
lcall
fxch
sub
xchg
pop
pop
lods
dec
loopne
rorb
add
hlt
add
into
rorl
out
aad
enter
lds
loopne
or
add
jne
fidivl
jae
loopne
xor
ds
cmp
xor
subl
imul
inc
rclb
mov
mov
dec
sub
fisubrs
fs
inc
cwtl
pop
les
jnp
xor
inc
pop
inc
cmp
cmp
scas
sub
lcall
add
mov
cltd
daa
call
sbb
and
in
mov
push
adc
test
and
pusha
mov
test
mov
adc
outsl
aas
mov
cmp
rclb
rorl
push
jecxz
pusha
into
add
lods
js
pop
and
xor
rolb
jmp
pop
lock
jl
pop
loop
mov
leave
pushf
push
les
mov
mov
or
gs
or
dec
xchg
pop
lods
and
pop
add
cmpb
addr16
sub
xor
cmpsl
lar
mov
pop
enter
outsl
xor
imul
push
outsb
xor
dec
cmp
rorb
push
in
lds
lret
push
orb
pop
and
movsb
popa
nop
or
rcl
push
pop
daa
pusha
push
push
mov
lods
adc
outsl
add
xor
insb
fcmovu
es
das
js
inc
dec
push
nop
sub
add
pop
shll
mov
fwait
lods
pop
lret
push
mov
fstps
daa
ret
add
add
cmp
hlt
maskmovq
xchg
sub
adc
std
imul
pop
push
add
add
mov
or
aaa
aad
cwtl
push
pop
jmp
bound
mov
adc
sub
xchg
add
pusha
sub
les
int3
adc
loopne
insl
loopne
fs
sub
mov
test
ds
or
js
ss
push
mov
xor
add
orl
mov
rcl
push
add
addr16
popf
ret
and
jbe
pop
jl
push
push
dec
mov
dec
push
add
lods
iret
push
sub
dec
sub
dec
pusha
mov
dec
scas
rcrb
cld
aaa
arpl
dec
mov
cmc
or
sub
popl
adc
movsl
daa
and
scas
add
dec
mov
loop
add
ror
js
mov
loopne
ja
xor
add
loop
pop
imul
xchg
subl
clc
sbb
mov
rorl
sub
or
aam
pushf
or
sahf
icebp
sbb
repnz
mov
pushf
jne
pop
leave
iret
xchg
add
jb,pn
and
and
pusha
test
clc
in
dec
subl
shl
inc
pop
inc
aaa
dec
adc
sub
test
negb
xchg
mov
adc
pop
xor
movsb
loopne
xor
ror
xchg
mov
nop
ljmp
js
lea
aas
mov
mov
aam
push
mov
shll
sbb
xor
iret
adc
inc
pop
je
in
add
xchg
out
repz
clc
jne
jo
scas
or
loopne
add
mov
daa
inc
js
insb
les
daa
add
xor
sbb
mov
inc
and
popa
jl
rcrl
sub
push
ss
in
les
enter
jecxz
call
xchg
or
adc
jbe
cli
addb
adc
cmp
push
ja
and
shlb
push
push
aaa
je
test
xchg
arpl
or
and
pop
mov
test
int
repz
ds
loope
pop
mov
cwtl
or
xor
add
xchg
pop
sub
cmp
cmp
dec
add
sbb
inc
out
lods
sarb
leave
das
pusha
add
fidivs
push
push
jg
cltd
xchg
cwtl
rcr
fnstcw
dec
add
or
or
mov
sbb
outsb
roll
jo
in
jg
jl
push
push
and
cmp
ss
sbb
cld
jne
imul
inc
add
inc
sti
lods
adc
stos
xchg
xchg
fwait
mov
sbb
mov
push
arpl
jmp
mov
pop
or
jle
sub
xor
dec
add
jecxz
pop
cld
scas
pop
lret
xor
mov
xchg
inc
pop
and
adc
es
les
rolb
cli
ret
fbld
push
push
loopne
aam
add
push
pop
mov
popa
and
inc
int
js
in
hlt
and
cmp
jns
sbb
dec
sub
mov
and
add
je
cld
jb
jo
add
pusha
and
in
in
outsb
test
loope
inc
add
scas
and
mov
or
das
std
or
adc
and
in
jmp
mov
sub
fbld
jbe
push
mov
add
cmp
push
or
inc
or
add
aam
xchg
push
add
in
jns
and
ds
test
push
xorb
xchg
cmp
and
push
pop
mov
push
scas
repz
adc
or
ja
fdivrs
shrb
inc
cmp
push
and
add
in
icebp
nop
pop
mov
jmp
xor
repnz
and
xchg
push
dec
clc
and
pushf
sub
jmp
test
shll
xchg
aas
sub
loope
push
sub
mov
arpl
mov
and
push
xor
test
jle
mov
pushf
jge
adc
pusha
or
lock
in
addr16
push
inc
andb
and
or
movsb
leave
jb
push
je
lods
lods
push
or
mov
mov
xchg
outsb
lret
jbe
inc
mov
or
sbb
pop
push
pop
or
pop
adc
pusha
hlt
fcoml
adc
daa
aam
inc
pavgb
clc
mov
mov
sub
in
dec
mov
or
les
or
add
divl
and
inc
push
mov
out
push
nop
add
ret
mov
fimull
nop
les
inc
insb
push
outsb
enter
mov
lds
xor
xor
jo
sbb
cmp
push
mov
fiadds
add
and
inc
loopne
nop
movsb
fwait
pushf
sbbb
add
xchg
add
mov
std
dec
mov
or
mov
pop
js
pushf
pushf
shlb
add
inc
daa
mov
stc
fwait
stos
push
or
pusha
adc
adc
data16
add
and
inc
mov
sub
das
dec
jo
add
mov
mov
sti
or
cmpsb
aas
add
enter
cwtl
or
sbb
jl
xor
dec
pusha
das
mov
add
jle
movsl
nop
fcoml
loopne
inc
addr16
push
dec
sbb
add
fwait
mov
cld
add
sbb
push
add
mov
bound
jecxz
nop
cmp
sbb
outsb
and
cmp
and
insl
add
stos
adc
jo
jns
enter
pop
scas
jle
imul
aam
push
mov
fstps
aad
repz
out
mov
loopne
ss
jmp
xor
jno
mov
jno
sub
stos
bound
push
mov
cwtl
add
imul
js
push
mov
enter
stos
jns,pt
mov
popa
int
in
int3
push
in
cmc
insl
push
adc
xor
movsb
mov
rorb
cmp
or
ss
arpl
xor
adc
pushl
hlt
cmp
ss
inc
std
lcall
jecxz
jne
mov
fistl
xor
and
arpl
mov
add
into
ss
jle
cmp
dec
es
xor
pop
cld
and
add
loope
sbbl
mov
imul
sbb
jns
in
js
ljmp
dec
push
adc
shlb
or
scas
cmc
subb
xchg
je
loop
cwtl
add
ficoms
int3
add
jmp
out
inc
imul
add
add
jbe
cmp
ret
jge
mov
and
pop
mov
loopne
cmc
test
nop
jecxz
fstl
and
sarl
aam
add
popa
xor
and
cli
and
pop
dec
mov
inc
inc
loopne
mov
add
popf
cld
or
dec
repz
fwait
dec
add
dec
dec
cmp
push
inc
fiaddl
and
out
andl
xchg
xchg
and
aam
xlat
add
gs
test
sbb
dec
int3
mov
cld
loopne
out
lcall
arpl
or
lahf
loope
shl
or
add
out
popa
mov
xor
xchg
add
xor
repnz
jns
sbb
xlat
push
adc
inc
add
xchg
scas
lret
xchg
les
pusha
mov
push
idivl
sub
xchg
dec
inc
test
lcall
inc
sub
add
lods
and
lcall
add
in
lods
cmc
mov
xor
inc
inc
add
filds
lret
iret
rcl
lock
sahf
xor
test
pusha
shlb
mov
inc
xor
jo
mov
rclb
xorl
add
outsb
or
add
inc
pop
call
pop
adc
cmp
rolb
xchg
push
mov
add
cmp
pop
cmp
in
cmp
mov
mov
cmpsb
sbb
ret
sbb
adc
cmp
imul
out
sub
mov
push
mov
loopne
andb
movsb
pop
inc
aas
add
mov
cwtl
mov
cs
imul
js
or
and
add
mov
and
jns
cmp
add
mov
jmp
mov
and
filds
inc
inc
bound
hlt
dec
inc
jns
fwait
pop
mov
xchg
cmp
ret
pop
push
push
ja
aam
add
pop
mov
mov
push
in
xor
sbb
repz
cmp
inc
sub
mov
loop
xor
add
cmpsb
mov
scas
movsb
cmpb
lret
out
insl
dec
sub
push
xor
fsub
sbb
ja
cwtl
pop
pop
addb
stos
les
add
and
or
or
mov
cmp
fwait
popa
sahf
push
xor
push
and
mov
rcll
jo
int3
xor
jmp
or
adc
sub
pushf
add
loope
sbb
ss
inc
in
cmp
shl
xor
or
adc
add
shrb
loopne
fildl
or
jle
aas
cmp
shld
fisttps
sbb
shlb
rolb
jp
add
ds
test
cmp
add
pop
inc
aad
mov
ljmp
pushf
xchg
mov
mov
mov
cltd
lret
js
add
push
add
pop
test
inc
push
push
jge
outsb
inc
cmp
xchg
mov
nop
ffreep
dec
lods
loope
jmp
out
lret
push
push
sbb
addl
add
add
jne
faddp
xor
out
push
xchg
adc
push
outsl
push
test
sbb
in
sbb
add
xor
mov
mov
adc
repnz
cmpsl
xchg
xor
push
push
iret
adc
sbb
jne
cmp
cwtl
out
lahf
add
mov
in
push
mov
push
sbb
adcb
out
xchg
mov
lret
jae
int3
cltd
inc
aas
pop
inc
add
sub
movsl
push
mov
sbb
out
outsb
sbb
add
aaa
sbb
mov
shlb
mov
mov
inc
or
call
lods
push
adc
aas
lcall
mov
aad
aas
add
repz
popa
mov
pushf
push
xchg
testl
push
lea
dec
jnp
sub
and
add
ret
or
pop
mov
add
movsl
dec
repnz
push
lret
in
mov
xor
and
shrl
outsb
add
xor
dec
mov
cwtl
stos
pop
mov
mov
mov
movsb
sub
add
adc
mov
xor
sub
mov
add
arpl
int3
mov
dec
mov
into
push
add
pcmpgtb
and
adc
and
in
cld
scas
jno
adc
sub
icebp
pop
xchg
loopne
jmp
sbb
and
scas
sbb
aas
xchg
pop
arpl
loop
dec
aas
je
sahf
addl
out
cmc
and
jl
daa
andb
int3
popa
repz
call
dec
xor
clc
inc
mov
mov
into
cmp
or
sbb
mov
jnp
sbb
jns
jo
addr16
inc
lret
add
test
xchg
jge
push
sbb
pop
pop
inc
dec
pop
sbb
ss
and
out
out
sub
xchg
adcl
clc
inc
rcll
add
bts
idiv
pop
pop
mov
daa
inc
inc
pop
jl
call
jp
inc
add
push
test
jae
out
loop
cmc
dec
dec
mull
add
inc
and
pop
jmp
sub
stos
es
add
sub
and
sti
test
in
fcoms
push
add
sub
cmc
sub
dec
jecxz
je
iret
dec
popa
sub
sbb
inc
enter
pop
ret
push
aam
lock
cmp
or
add
mov
or
and
xchg
add
fmul
mov
pop
mov
adc
dec
fnstenv
add
mov
push
std
mov
adc
mov
or
data16
rolb
jns
test
clc
subb
mov
or
fwait
adc
jnp
ja
shl
pop
xor
fstps
pop
pop
in
or
adc
in
inc
adc
mov
add
jnp
pop
mov
push
inc
pusha
enter
or
push
push
ds
sbb
xchg
jno
push
jl
rclb
xchg
sub
cltd
imul
andb
pop
xchg
inc
out
aaa
rcl
and
testb
ljmp
push
frstor
sbb
jae
jb
push
add
sub
clc
les
xchg
cli
push
mov
cld
jp
shlb
jo
enter
inc
fnstsw
fcmovne
cmp
bound
pop
pop
add
and
xchg
jle
mov
subb
ljmp
sahf
inc
lea
dec
sub
mov
mov
cmpsb
loopne
pop
jbe
out
adc
pop
adc
add
jne
or
sbb
ficoml
shll
xlat
popa
add
and
iret
and
pop
add
out
pop
mov
movsl
adc
push
les
dec
mov
push
and
cld
mov
and
xchg
jge
mov
imul
xchg
jg
push
roll
rcrl
rclb
mov
jge
and
leave
arpl
or
add
lret
pop
dec
add
cmp
push
sub
subb
ja
inc
into
sub
cmp
ret
dec
dec
dec
add
pusha
push
fxch
insl
sub
dec
or
cmp
lds
sub
jge
add
sub
mov
push
push
push
in
pop
mov
out
psadbw
loopne
jns
jnp
cli
ret
add
sub
pop
subb
xor
jo
dec
mov
pop
clc
xor
popa
jmp
xchg
andb
setne
sbb
dec
lds
mov
add
iret
add
push
cmpsl
jnp
xchg
jmp
push
in
cmc
sub
js
mov
mov
add
push
aas
mov
pop
iret
and
sbb
mov
add
sbb
lret
rolb
add
in
push
lcall
mov
popf
mov
pop
add
push
adc
mov
jns
or
pop
mov
push
jns
sbb
add
shll
enter
mov
cmc
mov
movsb
mov
movl
jno
dec
imul
cmp
movsb
xor
push
jmp
nop
std
dec
inc
pop
pop
lahf
push
xor
mov
add
shlb
aad
cmp
mov
mov
dec
xor
pop
mov
rcll
aaa
jp
andb
mov
faddl
xor
dec
fcoml
pop
sti
nop
mov
or
push
bound
and
inc
ja
jecxz
cmp
imul
add
js
sbb
add
xor
xchg
inc
pop
and
repnz
leave
xor
adc
push
rcrb
fisubs
pop
add
push
icebp
ret
fs
stc
and
mov
sub
arpl
and
leave
adc
and
sub
cmc
mov
adcb
aaa
or
push
loopne
in
arpl
push
jae
fldl
ret
adc
mov
nop
je
in
pop
repnz
movsl
nop
dec
inc
cmp
mov
ljmp
icebp
jl
aas
ja
push
test
pop
fwait
and
mov
xlat
inc
xor
mov
dec
mov
pop
jo
push
sub
mov
pop
jno
sub
dec
xor
mov
rcrb
adc
adc
push
movsb
pop
arpl
mov
icebp
pop
fnstcw
loope
inc
gs
out
adc
xchg
jecxz
add
ret
adc
push
cli
pop
push
dec
push
fwait
loopne
pop
cmc
jno
add
ljmp
mov
loope
stos
mov
imul
xor
dec
inc
add
xchg
call
stos
andb
adc
iret
imul
adc
rcrl
xor
rcrb
mov
dec
mov
stos
ljmp
mov
push
fs
adc
jge
xchg
jp
rclb
mov
daa
cmp
jns
andl
js
je
jb
jmp
shlb
or
inc
daa
pop
outsl
xchg
and
pusha
push
sbb
cli
sub
sub
and
add
cmp
xor
hlt
pop
loope
loopne
cwtl
jne
rolb
xchg
add
icebp
pushf
daa
stos
mov
out
das
mov
mov
enter
and
rolb
pop
loopne
out
pop
rorb
add
cmc
push
ret
adc
cltd
mov
adc
sub
mov
orb
iret
push
pushf
sub
sub
add
sub
arpl
cmp
mov
add
inc
push
and
push
or
test
popa
adc
aaa
mov
shlb
iret
inc
inc
and
or
mov
sub
cwtl
faddl
add
or
jmp
or
mov
and
jbe
add
sub
lods
sbb
mov
aaa
jp
pop
movsl
or
adc
shlb
les
jns
sub
sbb
push
xor
or
xchg
out
pop
inc
lret
adc
roll
sbb
lret
nop
sub
cmp
adc
jae
dec
mov
or
and
pusha
cmpb
pop
test
out
shrb
gs
lock
jnp
xchg
repnz
jecxz
loope
imul
or
bound
sub
and
pop
xchg
outsl
pop
sbb
ds
sbb
ret
inc
adc
add
push
decb
sub
sub
inc
xor
clc
jae
negb
dec
and
and
add
rcrb
insb
cmp
jp
dec
das
fs
ds
and
or
js
cli
dec
push
push
xchg
dec
xchg
cld
fcoml
pop
cmc
in
adc
adc
sub
fadd
xchg
inc
and
andl
jg
or
sbb
lock
fcom
and
test
pusha
out
rcrl
cltd
orl
cmp
pusha
push
cwtl
pop
mov
mov
xor
mov
inc
sub
mov
xor
xor
addb
or
push
sahf
adc
or
ds
sbb
mov
xor
adc
add
mov
ljmp
or
cmp
mov
inc
lcall
mov
test
inc
mov
shlb
mov
out
pop
add
mov
into
popf
cmp
loopne
hlt
push
adc
sbb
enter
xchg
sbb
test
add
push
imul
test
jge
mov
loopne
call
or
fsubl
adc
orb
adc
mov
sub
dec
mov
and
sub
fs
mov
xor
pusha
pop
jnp
adc
les
out
pusha
sub
mov
in
add
gs
sub
xor
mov
sub
xchg
adc
xor
mov
add
add
xor
xlat
dec
push
sub
push
jnp
loop
jle
pop
pusha
add
scas
pop
add
arpl
sub
add
sub
add
dec
fdivs
adc
fisttps
daa
add
jp
add
mull
add
adc
adc
xor
test
shl
dec
dec
out
movsb
hlt
add
adc
add
popa
ljmp
jg
inc
jecxz
loop
xor
stos
pop
inc
mov
lcall
xor
pop
es
and
in
data16
sub
pop
add
push
call
mov
jne
pop
mov
addb
sti
xchg
push
jmp
inc
movsb
adc
sub
aaa
xchg
xor
clc
add
dec
dec
sbb
inc
dec
je
sub
call
in
insb
push
out
sbb
add
out
fnstcw
push
roll
cmp
sbb
jge
jecxz
adcb
add
repnz
subl
add
pop
mov
arpl
push
adcb
pop
or
push
mov
inc
push
sbb
movsb
push
push
lods
enter
add
add
icebp
fidivrl
das
shlb
rolb
cmpsb
xchg
inc
xchg
xor
add
lret
pop
notl
pop
lret
js
nop
sub
push
dec
imul
shrb
pop
sub
and
adcb
or
jns
add
decl
repnz
mov
pop
fldt
jl
and
and
ret
call
push
xchg
pop
shl
inc
cli
fldcw
add
jae
mov
mov
pop
jg
cltd
out
outsb
mov
cmp
imul
dec
scas
jl
data16
add
repnz
jmp
adc
cmp
jl
pop
scas
add
add
pop
ret
sub
into
hlt
pop
scas
xor
scas
adc
sbb
xor
cmp
ficomps
mov
lcall
fwait
dec
cmp
ds
rcl
lods
out
pop
cmpsb
leave
in
inc
sub
aas
jl
mov
dec
mov
push
xor
dec
int3
nop
lock
push
hlt
pop
loop
push
cs
dec
adc
inc
add
pusha
push
inc
mov
add
sub
jb
sbb
jns
icebp
lret
out
push
mov
xlat
les
push
push
inc
xor
shlb
xor
mov
shl
or
lock
and
mov
push
icebp
add
fcoms
shll
and
dec
mov
sub
pushf
addb
fsubrs
and
insb
xchg
test
aad
xor
and
cmp
mov
push
or
nop
mov
sbb
ret
adc
jo
cwtl
adc
in
mov
loopne
frstor
push
leave
and
popa
bound
mov
pusha
pop
addb
push
lock
adc
pop
sub
fwait
sbb
cmp
pop
in
je
xchg
aas
pop
into
inc
mov
xchg
jnp
es
insl
or
xchg
pop
mov
push
fmuls
cmp
or
int
lock
pusha
int
or
dec
pop
mov
mov
sub
aam
xor
lea
xor
and
dec
pusha
xchg
and
add
movsl
sub
subb
int3
negl
mov
test
imul
outsl
pop
and
cmpsl
in
in
pop
adc
mov
les
xor
sbb
sbb
cmp
out
xchg
push
add
dec
lods
add
xor
in
test
jbe
sub
imul
sbb
fadds
dec
jnp
out
ret
sub
inc
orb
xor
mov
xor
add
pop
inc
hlt
xchg
cmp
inc
or
shll
popa
cmpb
pop
mov
out
xchg
cld
xor
test
ljmp
xchg
das
jl
out
mov
test
lret
dec
stos
inc
in
mov
and
mov
mov
ficoms
inc
and
jge
fs
mov
into
add
or
sub
inc
mov
adc
xor
cld
and
add
and
daa
jge
inc
sub
dec
fldl
push
sub
or
jg
cmp
or
push
enter
leave
lock
jbe
out
pushf
and
leave
adcb
pop
xor
icebp
sarb
cmp
sbb
or
addl
lcall
dec
movsb
clc
pushf
xor
xchg
xor
enter
inc
mov
sbb
add
xlat
out
ss
aam
add
or
addr16
mov
sbb
add
sub
test
xor
xor
dec
and
cwtl
inc
lock
xor
add
cmp
pushf
test
adc
flds
adc
push
call
dec
mov
push
xchg
movsl
cmpsb
add
sub
shlb
jl
subl
xchg
xor
pop
inc
sti
push
in
push
and
rcll
cld
or
pusha
jl
mov
mov
pushf
jno
push
jge
xlat
shlb
test
andl
xor
sbb
add
andb
pop
push
jb
mov
xor
inc
fldl
mov
int3
outsl
jo
out
adc
pop
xchg
sbb
adc
sub
cmp
enter
dec
mov
pop
ds
enter
mov
enter
pop
inc
or
adc
adc
pop
hlt
xor
fnstsw
les
sub
gs
adcb
mov
xlat
jns
lcall
out
push
and
pop
fwait
mov
dec
xor
add
mov
xchg
push
loop
and
cltd
gs
lock
enter
push
xor
adc
out
aaa
insb
add
mov
shl
imul
rcr
mov
inc
add
pop
ljmp
mov
rolb
add
push
inc
pushf
xlat
mov
add
dec
inc
lahf
push
out
sub
shlb
cs
add
out
leave
mov
add
jns
in
pop
int3
enter
push
inc
lds
xlat
aad
sbb
pusha
mul
arpl
out
lcall
outsb
add
mov
push
pop
pop
idivl
add
push
lock
bound
adc
shlb
stos
test
xchg
call
add
xchg
ljmp
adc
or
jp
pop
lds
inc
pop
rolb
xor
icebp
in
sbb
sub
jle
cmp
shrb
fxch
int3
addl
push
cmp
sbb
outsb
imul
jmp
dec
loop
adc
rcrb
shr
hlt
sarb
mov
inc
in
enter
scas
enter
add
flds
jae
add
mov
icebp
cld
pop
pop
sbb
lea
sbb
sbb
push
fdivl
mov
test
stos
es
testb
add
stc
pop
pop
xor
sub
pop
je
div
aas
pop
adc
mull
add
and
sbb
rcrb
pop
add
mov
add
rolb
lcall
inc
and
jge
pusha
aas
sti
loope
stos
add
push
hlt
jae
mov
add
cmp
inc
rclb
and
in
sub
mov
mov
shll
data16
and
fsub
cld
lock
inc
pop
lcall
push
cmp
jecxz
out
add
call
adc
mov
add
jne
aas
in
or
push
add
mov
mov
je
add
ds
xor
xchg
mov
enter
sub
adcb
add
iret
cmpsl
sub
or
xchg
iret
test
push
inc
iret
add
test
daa
jp
aaa
pushf
pop
xchg
mov
or
repnz
dec
jg
test
mov
stos
loop
push
sub
xchg
xchg
mov
mov
sbb
mov
mov
jp
dec
nop
jne
mov
jl
jns
or
in
cmpb
mov
aaa
cltd
cmp
shr
push
mov
adc
pusha
add
add
rcrl
int3
mov
rorb
addr16
fsubrs
sbb
mov
cmp
push
fcmovu
add
enter
mov
mov
or
add
or
jge
mov
pop
cmp
add
in
xor
sub
jo
dec
and
fs
mov
aad
cmpl
into
mov
mov
jne
clc
dec
dec
pop
add
nop
mov
and
aad
fsubl
add
jle
loopne
stos
push
int
jbe
add
addl
push
cld
loopne
pop
popa
scas
sbb
fidivrs
into
sti
pusha
add
outsb
fimull
xor
test
mov
add
adc
cmc
sub
addr16
frstor
iret
shr
and
fs
aad
aas
xchg
xor
ja
or
jl
lods
andb
lcall
mov
jno
mov
andl
iret
sbbb
jl
jae
lahf
dec
lods
push
stc
and
push
and
les
jae
dec
pusha
add
pop
lods
mov
add
cmc
nop
movlps
add
fwait
and
push
test
add
mov
add
pop
jle
cli
movb
add
enter
out
dec
inc
or
outsl
mov
add
js
sbb
xor
lock
pusha
add
popf
and
inc
or
sub
aas
stos
insl
subb
dec
negw
loop
and
sbb
negb
mov
xchg
cmp
loop
xorl
pop
xor
movsb
cwtl
in
add
enter
mov
dec
dec
push
adc
popa
add
and
push
out
cld
mov
dec
add
xchg
in
sbb
mov
inc
jno
adc
pop
add
gs
imul
int
fsubrs
mov
pop
jp
inc
mov
and
iret
and
add
pop
test
fldl
sub
dec
jmp
xchg
ss
mov
sti
cmovns
xchg
cltd
rolb
lods
mov
add
cwtl
push
cmp
repnz
push
lahf
push
add
in
mov
rcrb
in
pop
sti
fsubs
wrmsr
pusha
mov
loopne
mov
aad
add
dec
fidivs
push
cmp
into
add
xlat
xchg
mov
repz
xchg
cmpsl
ja
mov
sbb
mov
or
jnp
dec
push
inc
paddd
insb
lcall
jno
test
sbb
fimuls
inc
mov
pusha
scas
push
jle
test
dec
or
add
int
jp
sub
dec
push
inc
and
add
dec
push
popf
push
nop
jb
inc
xor
vmptrst
jno
add
adc
stos
pop
jg
stc
add
push
xchg
xor
shll
je
xor
mov
add
lods
and
rcrl
sarb
add
lahf
push
imul
add
scas
data16
adc
mov
jae
mov
mov
lcall
and
bsf
scas
xchg
sbb
lret
push
repnz
add
sub
ret
mov
lods
jmp
cmp
arpl
mov
movsb
call
mov
out
jecxz
add
xchg
roll
bound
and
imul
sbb
add
stos
mov
mov
lock
outsb
add
add
cmpsb
and
lret
mov
lahf
sahf
mov
dec
add
js
fnsetpm(287
sub
pop
or
add
subl
add
jmp
leave
lret
jne
adc
pop
add
lea
icebp
jae
add
add
push
ret
out
test
imul
push
and
adc
sbb
fbstp
add
inc
rorb
test
add
seta
xor
cltd
mov
fwait
or
std
out
jb
and
mov
fisttps
ss
cmp
subb
lds
dec
adc
fwait
lahf
pop
fldenv
test
mov
push
push
add
sti
inc
dec
sahf
xor
call
addb
daa
insl
fistpl
lret
mov
test
push
testl
test
push
mov
add
insb
or
fists
fbstp
cmp
mov
pusha
cs
lds
add
xor
mov
mov
rolb
in
int3
gs
pop
enter
xchg
and
fnsave
inc
sub
repnz
adc
scas
ret
mov
xchg
jbe
shlb
sbb
inc
cwtl
data16
mov
cmpb
inc
fcompl
mov
shrl
lds
push
and
mov
xor
dec
cmp
fildl
sub
pop
xor
add
push
jne
inc
incb
and
in
pop
cmp
sahf
inc
repnz
aas
popf
cmpsl
loopne
div
aaa
lock
addl
fsubl
or
push
sahf
filds
cmpsb
pminub
mov
into
push
adcb
inc
pop
add
daa
pop
js
sbb
test
pop
lcall
lret
push
add
add
call
jmp
and
push
push
mov
das
test
xchg
icebp
xor
mov
rcrl
mov
out
es
js
add
sysret
adc
sbb
aaa
pop
bound
pop
and
add
jo
dec
leave
test
add
popf
jecxz
fisttpl
cwtl
mov
cmp
sbb
or
cs
push
aad
and
add
out
iret
out
jmp
in
fsubrl
and
add
pop
divb
popa
shl
dec
add
add
add
mov
ja
adc
mov
or
dec
add
shr
lahf
xor
add
jecxz
das
fnstsw
jg
test
outsb
repnz
mov
lret
loope
xor
ds
fldl
add
scas
add
sbb
cmp
push
test
and
add
movsb
inc
inc
call
aam
and
dec
add
push
fists
sub
popa
mov
xor
cmpsb
dec
ja
mov
pop
pusha
add
leave
add
cmp
dec
and
xchg
add
xor
sub
div
push
pop
pop
pusha
aad
hlt
xchg
loop
dec
xchg
jp
xchg
pop
push
sti
cmp
cmpsl
aam
jb
pop
mov
add
lods
jb
mov
push
mov
test
mov
add
repz
xor
stc
ds
add
ljmp
mov
push
cmovbe
sbb
pop
int
dec
jp
add
and
cmp
mov
add
bound
xor
sbb
cmp
es
stc
xor
or
push
ja
mov
ret
pop
addr16
adc
xchg
je
out
jge
add
inc
stos
shrb
add
add
pushf
rol
loope
push
push
cmp
mov
mov
jmp
jp
add
lods
rcr
sub
add
and
push
shlb
pop
out
lcall
in
mov
enter
pop
inc
rcrb
sub
iret
add
jge
loope
jae
cmc
add
and
addb
pop
rorl
jae
das
call
or
les
xchg
outsb
pushf
jecxz
leave
test
xlat
loopne
sbb
add
add
push
add
jnp
add
push
test
sti
mov
jmp
ret
jl
lar
pop
repz
rolb
popa
push
hlt
out
add
push
cwtl
addr16
adc
cwtl
fstpt
aam
cmp
or
lock
dec
inc
movsb
popf
inc
mov
pop
loope
popa
dec
adc
das
test
pop
rolb
stos
aaa
pop
andl
cmc
xacquire
inc
inc
jne
or
sub
xor
aad
add
mov
test
fucom
ss
sarl
jne
pop
lret
lods
enter
fcmove
ror
nop
mov
adc
mov
add
lahf
in
cmp
adcb
adc
push
xchg
popa
mov
pop
or
mov
clc
insl
cltd
cwtl
test
cmp
and
mov
shl
lods
add
push
pop
arpl
jmp
or
cmc
pusha
jnp
xor
or
and
add
out
push
fnstsw
in
add
xchg
pop
dec
xchg
call
push
push
sbb
lock
aas
mov
dec
lret
mov
shlb
idivb
dec
xchg
xchg
add
xchg
pop
pop
fdivs
or
mov
test
mov
adc
xor
enter
movsb
dec
add
movsl
fnstcw
inc
or
in
cmp
add
aaa
jl
popf
and
jbe
das
mov
mov
sub
negl
adc
loopne
push
pop
jno
jae
out
popf
xor
push
mov
and
sarb
xor
fnstcw
sbb
out
mov
out
cwtl
cmp
loopne
push
and
inc
xor
cli
dec
out
jge
xchg
and
mov
and
leave
test
adc
sub
fadd
pop
stos
mov
daa
or
fidivl
repnz
out
mov
add
jb
mov
xor
loopne
sub
call
aad
lahf
hlt
adc
cmpb
sub
cmp
dec
and
jl
cld
scas
jge
dec
xor
push
into
and
pop
sub
pusha
ds
cli
aas
pop
xlat
dec
inc
shl
pushf
repnz
xor
xchg
out
mov
mov
faddp
jae
dec
loopne
jecxz
adc
fwait
and
and
aad
jnp
clc
lods
imul
sub
xchg
cltd
je
mov
mov
enter
test
and
dec
mov
mov
jecxz
jns
clc
mov
sub
andb
pop
js
dec
xchg
gs
test
push
cmpl
and
add
cli
dec
or
add
jns
sbb
test
sarb
adc
add
sarl
pop
rolb
std
add
cmp
into
adc
mov
aam
mov
lcall
jb
or
xchg
add
mov
sub
inc
loope
clc
cmp
xor
inc
sub
add
add
sarl
pop
fs
jnp
xchg
jo
les
cmc
adc
lock
addb
xchg
jmp
lods
fisubrs
adc
sbb
lcall
add
add
mov
pusha
push
pop
mov
push
add
fdivl
add
rep
out
inc
test
das
pop
inc
inc
mov
cmc
pop
cmp
sbb
out
xchg
stc
loop
add
sarb
call
ret
mov
lcall
sbb
sub
add
cwtl
sbb
push
inc
ja
cmc
mov
and
nop
or
push
cmpsl
push
pop
sbb
sbb
pusha
in
push
lcall
xchg
push
fmull
and
xor
adc
sbb
call
lock
dec
xchg
adc
mov
fldenv
and
mov
addr16
ja
or
and
mov
cmp
add
jl
adc
pushf
leave
test
pop
or
add
mov
mov
adc
or
add
repnz
xchg
dec
pop
and
ds
test
jl
add
add
lret
adc
cmp
dec
inc
mov
or
test
xchg
pushf
and
shll
sbb
jmp
fstps
outsb
add
push
pop
int3
push
or
in
mov
cmc
add
xor
ror
mov
movsb
pusha
stos
add
ljmp
mov
or
lcall
inc
fcoms
push
add
or
push
ja
or
push
mov
rolb
fs
push
push
iret
mov
aas
add
rol
mov
loop
xor
daa
jge
mov
xchg
mov
and
insl
nop
ret
pop
ret
and
in
or
xor
sbb
test
cmp
bound
add
pop
sub
sar
jmp
add
cmp
adc
test
inc
roll
lret
inc
fcmovnbe
test
xchg
add
fwait
in
jo
loopne
adc
jle
ret
arpl
jp
inc
xchg
dec
mov
push
cltd
lock
pop
fmull
cmp
mov
and
repnz
lds
mov
pop
data16
add
addb
jl
jecxz
push
cld
aas
add
jo
jl
mov
test
daa
add
sbb
ds
sub
addr16
loopne
add
mov
add
sub
pusha
sub
add
pop
dec
scas
enter
add
fwait
jmp
int3
mov
shl
sbb
adc
mov
dec
dec
cltd
pop
cmp
xor
iret
cmp
movsl
push
subb
pop
mov
or
adc
bound
ss
mov
add
fdivs
pop
mov
movsl
sarl
jge
andb
outsl
ret
xchg
iret
inc
test
cmp
addb
cwtl
jl
adc
cmpsl
mov
in
daa
mov
sbb
cltd
fiaddl
roll
repz
hlt
repnz
into
movsb
mov
xchg
jecxz
in
dec
pop
inc
mov
pop
insl
mov
xchg
mov
icebp
mov
xor
fcoml
inc
inc
add
das
sub
es
sub
jl
mov
mov
fdiv
sbb
dec
push
es
sarb
inc
or
push
jns
sbb
xchg
or
loope
add
and
mov
ds
jle
mov
dec
push
mov
sbb
adc
dec
repz
add
fstl
pusha
and
pop
xor
sub
enter
add
call
pop
movsb
popf
test
add
xor
fistps
mov
fstpt
lds
cmp
in
daa
mov
pop
sub
or
movsb
xor
in
and
xor
push
pop
adc
shrl
xor
inc
mov
xchg
dec
sbbl
pushf
or
push
popa
mov
add
loop
lahf
mov
adc
mov
iret
sub
fs
dec
adc
mov
mov
daa
jl
shl
icebp
pushf
xor
cs
ljmp
mov
adc
and
js
xor
push
sub
dec
push
insb
mul
cmc
inc
jns
nop
xchg
add
enter
mov
test
lahf
push
push
cmc
jo
xchg
inc
clc
pop
pop
in
inc
or
mov
dec
subb
arpl
enter
fxch
enter
hlt
dec
dec
lods
and
push
adc
xorb
lods
les
xor
dec
add
repnz
arpl
cmp
insb
jo
aaa
pushf
push
ret
mov
fsubs
lods
scas
in
pop
rolb
mov
jl
inc
adc
je
cwtl
ja
ljmp
xor
movsl
addb
fs
inc
jmp
dec
rcrb
jmp
push
stc
inc
leave
xchg
mov
or
xor
jb
pushf
jecxz
pop
pop
add
scas
sbb
int
inc
insb
mov
sub
mov
xchg
mov
pop
out
repnz
adc
mov
cmp
dec
mov
loopne
out
add
movsb
loopne
scas
cmc
push
dec
imul
mov
pop
cmp
inc
add
lods
sub
cmp
fsubrp
and
loop
cltd
mov
fwait
add
and
pop
jecxz
dec
andb
fs
jl
mov
hlt
and
add
cmpsb
xchg
addr16
jl
dec
and
out
ss
dec
in
cmp
cmp
xor
push
or
jae
adc
inc
call
das
das
fwait
dec
sbb
fbstp
sbb
pop
aad
push
cmp
add
int3
in
aaa
rorb
mov
inc
arpl
pop
push
loopne
ret
xor
test
and
hlt
sub
mov
xchg
loop
inc
add
adc
dec
hlt
in
add
sbbb
nop
sub
andb
jl
lret
mov
xor
sub
or
jnp
dec
gs
hlt
dec
adc
dec
inc
add
mov
dec
in
jl
cli
gs
inc
add
pop
mov
xchg
pop
or
movl
sub
in
enter
xor
lcall
out
mov
add
xor
shrb
dec
shlb
pop
pop
add
iret
mov
adc
ror
lods
rorb
add
cmc
ds
je
cli
mov
mov
add
shrb
ret
push
mov
orb
add
cmpsl
add
jecxz
dec
xor
add
xor
or
adc
sbb
dec
fcoms
mov
xor
pop
xchg
push
movsb
faddl
scas
in
jge
js
and
outsb
lods
add
lcall
dec
and
insb
add
jnp
hlt
imul
sub
test
or
inc
sbb
out
jmp
loopne
icebp
popf
cs
rcr
fsts
ds
rol
jae
xchg
test
call
jmp
subl
out
pushf
dec
dec
xchg
mov
test
lret
pusha
insl
notl
inc
mov
arpl
pop
ficoms
add
arpl
mov
cmpsl
lret
lock
ds
add
xor
mov
arpl
dec
icebp
loopne
scas
fstps
jnp
in
out
sbb
cmpsl
inc
addl
clc
sbb
arpl
aad
mov
adc
sbb
mov
add
xor
xor
cli
inc
push
out
sub
and
xor
add
aad
sbbl
add
mov
inc
mov
jnp
dec
test
cmp
dec
push
sub
and
pop
push
xor
sub
lock
dec
dec
inc
xor
lock
rclb
test
or
or
push
xchg
pop
ret
aam
add
xor
mov
dec
push
loopne
fdiv
inc
rcrb
mov
push
shrl
jp
cwtl
xor
test
add
aas
sti
lret
fwait
sahf
or
pop
mov
dec
stc
jo
sub
in
sahf
shlb
cmp
les
mov
dec
push
add
pop
pusha
push
add
or
mov
daa
test
fsubs
hlt
pop
data16
jb
jns
or
jp
add
aas
pop
add
sar
add
sub
cs
aas
mov
add
hlt
dec
cmp
adc
adc
je
les
or
pop
mov
mov
into
push
mov
ret
lock
stc
pop
mov
xor
lods
push
add
nop
pop
push
les
insb
ret
or
pop
rcr
fcompl
pop
repnz
add
scas
xchg
lea
aaa
cwtl
jbe
add
and
adc
add
mov
lret
scas
in
adc
sbbl
pop
pop
dec
sub
pusha
fildll
jl
inc
shlb
sbb
pop
fcmove
repnz
adc
hlt
push
xlat
inc
push
xor
sbb
push
loopne
enter
insl
loop
and
adc
adc
add
rcll
test
shr
imul
xor
xor
and
repz
mov
inc
pop
adc
mov
mov
adc
fnstcw
jp
pop
push
push
add
or
mov
imul
jo
adc
mov
and
enter
cwtl
lea
data16
push
je
sub
lea
mov
orl
inc
xchg
mov
es
mov
inc
fs
add
pop
loop
stc
cltd
cwtl
mov
pop
dec
sub
inc
jmp
hlt
jl
sub
imul
jge
test
lods
adc
pop
push
hlt
repnz
int3
jno
mov
push
xor
nop
mov
jle
adc
dec
scas
inc
aam
dec
adc
inc
mov
push
faddl
pop
das
cwtl
xchg
scas
outsb
call
ret
mov
aad
subb
in
or
lcall
mov
and
xchg
lods
inc
mov
scas
and
xchg
cmc
mov
aas
das
les
in
add
aad
imul
pop
adc
xor
enter
jg
je
mov
xor
aam
shrb
pop
push
je
add
cmp
pop
js
adc
add
mov
movsb
mov
xor
dec
lods
nop
add
sti
lahf
jbe
nop
sbb
jmp
cld
fmul
movsb
jae
popf
add
fs
nop
dec
orb
das
pop
cs
in
inc
xor
push
lret
nop
sub
mov
movsb
and
inc
jp
dec
jo
loop
lds
push
movb
insb
rol
dec
sub
inc
lea
mov
jne
sti
jno
mov
push
adc
outsb
je
mov
inc
scas
arpl
dec
xor
rcrl
sahf
mov
in
pusha
rorl
jnp
js
gs
pop
aad
dec
insb
sbb
adc
adc
pop
and
adc
in
add
fsts
lret
sub
imul
fdivl
mov
shr
aas
outsb
pop
add
fcompl
pop
fmul
adc
out
add
add
adc
adc
jl
aam
mov
mov
and
fldenv
stos
jb
sub
lods
jl
icebp
movsb
js
mov
insb
das
adc
pop
dec
xchg
jmp
fs
pop
mov
cmpsl
fs
iret
insb
push
jnp
pop
mov
aaa
out
mov
call
fimull
inc
js
push
pop
sub
call
cli
arpl
add
or
shlb
sub
clc
sbb
xchg
enter
pushf
pop
lods
lea
adc
insb
rol
sub
mov
and
add
cmp
daa
add
nop
pop
and
repnz
call
pop
jnp
adc
xor
cmp
and
add
dec
sub
cmp
add
jecxz
enter
xor
lock
dec
mov
cmp
mov
add
lock
and
sub
and
enter
jo
xchg
test
lds
fmull
push
or
mov
icebp
mov
rolb
in
inc
add
fs
ret
ror
dec
arpl
adc
lahf
dec
and
pop
mov
cmp
call
mov
adc
cmp
mov
subl
inc
sub
mov
sub
add
sub
nop
or
dec
xor
cmp
sbb
fmul
add
insl
shlb
popa
sub
mov
or
pop
mov
mov
cmpsb
xor
xchg
data16
popa
jle
sahf
mov
addr16
push
jmp
adc
jns
idivb
insl
or
loop
mov
test
movsl
and
in
or
ds
pop
xor
cmp
out
lock
adc
cmc
jae
jecxz
lret
adc
cmp
push
inc
sub
daa
out
outsl
ret
xchg
add
out
push
scas
jge
clc
mov
sbb
leave
inc
push
mov
or
sbb
add
adcl
or
popa
jb
cld
jle
add
les
add
imul
push
cmp
loope
cmp
jo
xchg
and
data16
pop
add
stc
pushf
xchg
fldl
test
mov
xor
subb
push
jl
faddl
lods
pusha
in
sbb
cmpsb
mov
ret
cld
call
push
inc
add
add
xchg
jns
add
mov
lea
push
push
push
call
pop
ret
add
inc
lcall
mulb
lea
sub
mov
add
enter
pop
ret
std
mov
inc
sbb
int3
push
ds
icebp
subb
clc
loopne
xor
push
pusha
mov
sub
popa
aas
push
push
icebp
jmp
add
pop
mov
jmp
arpl
dec
cld
pusha
test
push
in
mov
outsl
lods
add
pop
xchg
and
inc
push
ret
add
push
mov
lock
mov
jne
in
test
push
stos
add
push
xor
lret
xor
inc
push
ret
test
add
mov
sub
mov
xor
lock
mov
mov
or
sub
test
push
sarb
add
sbb
pop
sub
or
popa
jg
mov
sbb
add
xor
pop
sub
orb
mov
add
fisttps
push
pop
mov
pop
ret
add
push
call
fnstcw
in
pop
xchg
adc
push
sub
and
or
sbb
mov
pop
push
or
jne
rorb
scas
cmc
jne
add
push
iret
arpl
push
add
outsb
in
mov
mov
xor
in
inc
inc
and
add
ret
movsl
xor
sub
pusha
fadds
mov
subb
mov
adc
push
ss
nop
xor
jmp
je
sbb
stos
push
sbb
popa
mov
add
push
add
push
jb
push
pusha
add
push
or
adc
adc
das
jp
and
mov
pop
ret
enter
mov
inc
push
ret
add
adc
cmp
mov
shl
inc
test
ret
gs
or
test
or
ds
pop
inc
sbb
cwtl
sbb
sarl
adc
or
icebp
add
sbb
stc
push
pop
push
pop
pop
je
adcb
jns
or
sbb
sub
push
aad
pusha
xor
rcrl
add
mov
popa
out
jo
mov
pop
adc
jge
pushl
call
xchg
push
cmp
and
test
outsb
push
mov
sbb
ret
mov
pushf
inc
add
and
popa
mov
movzbl
out
xchg
mov
push
out
sbb
mov
inc
sbb
and
mov
les
adc
push
xorb
mov
cmpsb
or
inc
adc
cmpb
in
add
cld
push
sub
andb
xor
call
push
xor
cmpsb
or
mul
movsb
or
pop
test
jmp
jmp
sbb
sbb
pop
je
adc
es
xor
popa
lcall
inc
nop
out
iret
pusha
outsl
add
fiadds
jne
test
sbb
fwait
call
js
movsb
je
adc
clc
xlat
or
push
sbb
fldl
pusha
and
jno
xchg
pop
xchg
xchg
popa
cmp
jae
mov
cmc
sub
push
loopne
lret
sbb
popa
push
xor
aas
je
pop
or
sti
insb
adc
xorb
ret
stos
mov
or
mov
and
push
sbb
pop
and
inc
xor
sahf
ljmp
mov
test
out
push
dec
sub
sarl
or
push
mov
inc
mov
movsl
pop
cli
stos
stos
dec
sbb
fld
mov
dec
inc
loope
dec
xchg
and
mov
xchg
lcall
jns
xor
push
cmp
fnstenv
cwtl
movsb
inc
pop
sbb
push
ss
xor
pop
mov
inc
cld
pop
shlb
subb
xchg
insb
faddl
add
mov
mov
gs
add
xor
push
dec
push
sub
or
or
lock
mov
jb
push
fsubs
cmp
pop
icebp
sahf
sub
inc
cmpl
jl
xchg
in
ficoml
xchg
jo
bound
add
mov
jge
mov
and
and
je
sbb
mov
lret
sbb
jbe
int3
mov
popf
cmp
adc
mov
fwait
clc
and
adc
aaa
bound
cmpsl
add
dec
inc
lods
jns
out
in
jle
pop
imul
or
add
mov
cwtl
mov
cli
add
roll
or
cmp
lods
data16
mov
ja
sub
ss
or
inc
sbb
push
or
hlt
mov
mov
rcll
sbb
jno,pn
lret
adc
ret
cmp
and
push
push
enter
cmp
mov
xor
add
lea
dec
sub
clc
push
mov
mov
sub
push
dec
or
cmp
pop
add
sub
jno
xchg
and
bound
and
and
push
aam
push
or
ret
andb
pop
add
inc
push
stos
in
xchg
test
in
mov
jae
popa
adc
sbb
pusha
push
dec
xor
lock
test
test
xor
es
add
icebp
push
and
out
xor
mov
add
and
loop
xor
popl
mov
sbb
add
adc
lea
adc
mov
fidivrs
imul
and
cwtl
aaa
pop
sub
cld
adc
jmp
cmp
loop
mov
lods
and
xor
sub
adc
out
adc
sbb
scas
sub
pop
push
xor
pop
xlat
or
pop
loope
sbb
mov
loope
pop
or
xor
add
popf
or
cmp
lret
add
or
lods
or
lock
xorl
popa
mov
or
aas
pusha
and
sahf
xor
ret
inc
dec
bound
adc
repz
push
fmuls
add
add
es
mov
xchg
push
xor
in
sub
ds
cmpb
xor
enter
push
pop
mov
popf
shld
pop
and
ds
inc
cmc
add
xor
or
adc
imul
out
mul
add
fidivl
ds
mov
push
test
adc
cli
ja
inc
mov
mov
mov
pusha
clc
push
push
jne
cmp
and
mov
push
and
mov
fadds
int
aaa
sbb
sbb
pop
insl
inc
outsb
mov
sub
repz
sub
movsb
inc
popf
cmc
or
jg
movl
jo
adc
jnp
push
jno
sbb
popf
lods
sarb
jmp
jns
jo
pushf
or
inc
sbb
mov
and
xchg
jne
adc
movsb
lods
or
add
adc
add
lock
sbb
aam
pop
pop
in
into
xor
cmc
jne
mov
shll
pop
ffree
sub
jl
cld
fcomip
addr16
cmpsb
push
add
stos
or
fstl
loope
push
push
and
sbb
mov
into
push
sbb
sbb
mov
push
mov
and
scas
xor
insl
add
jne
add
sub
mov
xchg
sub
add
mov
mov
daa
ret
cmpsl
and
add
mov
js
sub
jne
insb
xor
aaa
outsl
mov
push
mov
and
push
or
test
into
push
add
scas
mov
and
xchg
dec
or
mov
movl
jmp
rcll
aaa
mov
mov
mov
xchg
adc
cmp
push
push
mov
call
in
cmpb
and
xchg
and
call
push
cli
xchg
add
sub
pop
enter
cli
pop
iret
sbb
scas
dec
clc
outsb
inc
add
in
and
into
lea
call
pop
mov
sub
int
sbbb
push
push
cmovs
mov
or
jo
cli
mov
jne
inc
je
popa
xor
nop
cltd
out
mov
adcl
adc
cmp
dec
lcall
call
stos
aad
insl
xor
test
mov
aaa
sub
pushf
test
leave
add
clc
mov
cltd
xor
mov
xor
mov
out
jg
ja
and
ja
sub
push
push
adc
jg
add
mov
add
mov
jae
dec
mov
adc
out
add
ret
lock
cmpsl
lret
xchg
xchg
test
lcall
fwait
or
dec
push
nop
add
loope
push
mov
lock
xor
xchg
mov
add
mov
sub
sti
lea
adc
out
cltd
add
clc
pushf
mov
jb
xchg
test
movb
mov
push
mov
xchg
orl
lea
addl
pop
inc
lret
push
sub
pushl
mov
jl
pop
popf
mov
rol
cmp
and
scas
fmuls
stos
sub
mov
and
push
mov
push
dec
sti
inc
cmc
push
xchg
xchg
pusha
mov
lret
or
in
add
inc
hlt
dec
push
or
add
lret
js
xchg
and
add
jl
test
inc
add
pop
inc
lods
push
pop
mov
pop
cmpb
xchg
pop
jmp
xor
sub
or
je
sbb
pop
cmpsl
stos
shl
cmc
lods
out
xlat
faddl
xor
push
out
mov
sar
adc
sub
lea
or
and
mov
jmp
xchg
add
loop
or
out
rclb
sub
add
addl
test
add
test
adc
xor
push
rsqrtps
mov
call
insl
pop
aam
push
pusha
data16
mov
cmpsb
mov
jl
sub
or
pop
pop
add
pop
add
push
jno
push
icebp
ds
rorl
xchg
or
and
pop
jb
pop
repnz
pop
out
fstpt
mov
shrb
test
inc
jmp
or
mov
gs
sub
mov
push
xor
adc
sub
mov
outsl
xchg
cmp
cld
or
call
add
cmp
jp
shll
xlat
mov
movsb
add
jge
hlt
jl
std
fwait
sbbb
es
add
fwait
and
mov
ror
push
push
movzwl
push
fwait
xor
cltd
out
add
scas
dec
sub
or
lcall
aaa
aam
nopl
pusha
or
inc
sbb
shll
sub
rclb
cmp
sar
rclb
idiv
or
sub
sub
add
scas
cs
cwtl
fldl
es
es
test
jns
adc
repnz
push
and
pop
pop
fmull
data16
jmp
mov
sarb
lods
fcompl
xchg
or
rcrb
xchg
movsb
clc
and
push
mov
pop
pop
inc
repz
mov
pop
xchg
adcl
cltd
cmpb
mov
fwait
mov
frstor
aam
cmp
pop
pusha
push
push
pop
daa
and
in
arpl
or
orb
cmpl
push
pop
test
sub
dec
sub
jp
inc
or
or
dec
jnp
adc
fcompl
or
sbb
or
xor
push
push
subl
xchg
shlb
lds
dec
or
sub
inc
xchg
jno
enter
lret
mov
add
scas
pusha
jl
adc
cmp
test
loope
lock
iret
jp
icebp
out
inc
and
jmp
into
add
mov
inc
add
pop
inc
jb
add
mov
sbb
add
push
jmp
sahf
fs
int
sub
shll
mov
add
pusha
ficompl
pop
push
aam
bound
push
mov
push
push
dec
and
jp
cmpsb
and
rcll
adc
lea
mov
cmp
cmpsl
xor
jecxz
adc
lds
popa
pop
cmp
and
add
xchg
std
add
stc
xor
cmp
add
call
and
int3
xor
xor
fdivrp
or
inc
add
ret
in
jo,pt
push
cmpsb
repnz
sub
push
cmp
mov
aaa
lahf
mov
pop
imul
out
ret
leave
add
cld
int
fdivrs
mov
push
ret
inc
or
test
insb
xchg
dec
pop
mov
lret
xchg
jno
ljmp
aas
jge
cmp
arpl
aaa
clc
shll
daa
pusha
push
nop
jne
push
sub
cmp
and
push
inc
xchg
and
push
clc
pusha
lahf
cltd
push
ret
pop
lods
pop
push
orl
add
sub
push
push
test
outsb
je
outsl
jge
loop
push
adc
dec
je
or
adc
or
insb
mov
dec
adc
add
cwtl
adc
xchg
mov
or
rcrb
adc
pop
movsb
and
mov
pop
inc
loopne
rcll
pop
pop
nop
push
dec
jp
stos
sub
or
cmp
jmp
mov
mov
shlb
xor
pop
or
mov
lods
sbb
push
push
inc
push
pop
pop
lds
xorb
aas
and
les
xchg
lahf
jmp
mov
mov
jl
and
xchg
add
stos
sbb
pop
insl
sub
xor
ds
stc
clc
xor
sbb
test
lods
testb
push
or
dec
sub
inc
jno
add
mov
ret
mov
push
loopne
stos
add
dec
mov
jg
mov
ficoml
pop
pop
jmp
lods
shl
and
inc
mov
ljmp
out
adc
in
pusha
or
loope
pop
aas
mov
mov
pusha
mov
bound
scas
xor
cmp
cli
and
scas
js
jmp
xchg
in
repnz
aaa
in
push
popf
aaa
lds
hlt
dec
dec
fistpl
xor
lods
ret
push
and
pop
dec
sub
mov
push
xadd
jnp
xor
add
movsl
adc
les
and
into
rolb
das
adc
push
or
cltd
mov
jle
lea
pop
cmp
mov
jne
lock
mov
mov
fildl
adcl
push
xor
xchg
popa
and
xor
repnz
or
jmp
rcr
sti
add
pop
adc
mov
fs
test
inc
dec
mov
mov
mov
sub
popa
inc
popa
xor
pop
push
sbb
push
test
mov
mov
sahf
push
out
push
xchg
nop
inc
movsl
js
outsl
add
inc
addr16
stos
fwait
pop
dec
nop
mov
sti
add
push
push
sbb
push
dec
add
loope
xlat
test
and
popa
sub
jne
or
stos
mov
cs
xor
cmp
ljmp
jae
mov
neg
es
and
aaa
nop
mov
pop
pusha
fadds
lea
xchg
push
push
pop
out
loopne
jbe
add
mov
cmp
push
pop
dec
addl
push
sbb
popa
and
jmp
mov
xchg
daa
daa
cmpb
leave
mov
jmp
pop
mov
popf
dec
cs
pop
jo
dec
cmp
jbe
lock
or
test
andb
comiss
dec
mov
push
mov
loopne
pop
add
lock
call
and
sub
movsb
mov
enter
add
mov
mov
adcb
push
and
dec
loope
xchg
cwtl
mov
pushf
or
jp
add
add
ret
and
xchg
adcl
repz
and
add
setg
xor
dec
add
leave
nop
sbb
lcall
push
mov
movl
loope
add
pusha
iret
mov
inc
xor
jns
cmpsl
daa
lds
orb
pop
das
cli
stos
mov
xor
xor
sahf
add
xlat
mov
mov
pop
xchg
pop
fwait
or
movsl
add
lods
inc
xchg
cmp
sbb
inc
adc
xchg
addl
cmp
mov
pop
add
pop
sub
adc
adc
popa
ss
stos
and
sarb
push
dec
pop
fwait
and
or
inc
fucomi
out
adc
cli
inc
add
mov
test
push
add
add
ret
jbe
fisubrs
out
test
and
mov
xchg
subl
mov
je
jno
adc
sub
jbe
or
adc
pop
mov
jmp
aas
dec
pop
cmp
xor
mov
ret
daa
test
inc
lods
cmp
call
add
sub
test
add
xchg
jae
adc
mov
rorb
jg
lds
jno
xchg
mov
gs
daa
add
pushl
out
mov
mov
adc
gs
mov
add
jmp
repz
pusha
dec
push
bswap
xchg
jns
add
add
jmp
rclb
mov
mov
and
loopne
jmp
idivb
adc
xor
adc
into
jp
mov
movsl
mov
add
ljmp
rolb
jae
test
popa
inc
repnz
in
push
xchg
xchg
cld
xor
jo
mov
sbb
jp
xorb
rol
ljmp
cmpsl
mov
sbb
xchg
lea
movsb
xchg
add
push
add
bnd
sarl
cltd
fxch
push
mov
add
aaa
lret
and
or
sub
ret
mov
xchg
fcoml
faddl
imul
adc
cmp
add
dec
xchg
push
add
daa
fldl
clc
lds
jbe
add
popa
int3
ljmp
xor
mov
enter
adcb
lds
imul
fs
int
or
adcl
or
pop
inc
loopne
sarb
inc
inc
pushf
pusha
ds
shr
add
dec
inc
push
rclb
mov
dec
inc
call
lret
xchg
dec
push
cmp
mov
in
adc
push
jmp
dec
dec
lea
add
or
addb
sub
pushf
loopne
mov
testl
adc
mov
jne
adc
jle
add
mov
fs
ret
add
xor
mov
dec
addl
cmp
aam
jecxz
pop
fcompl
mov
es
idiv
mov
pop
cmp
dec
xlat
push
or
fdiv
xor
or
adc
lock
mov
xor
daa
add
or
ror
lret
add
pop
push
add
mov
test
mov
addb
adc
fucom
push
xchg
add
inc
sti
fwait
push
aaa
push
pop
sub
addr16
push
mov
mov
imul
sub
mov
fsubrs
dec
add
xchg
aaa
jl
rorb
popa
or
or
pop
add
mov
loop
mov
imul
lds
aas
push
femms
inc
dec
and
add
call
js
add
mov
add
pusha
inc
les
popa
leave
cltd
mov
inc
aaa
pop
cltd
sub
ds
add
add
cltd
cld
sub
mov
push
pop
dec
ret
adcb
scas
adc
jmp
mov
orb
das
inc
lcall
lahf
xchg
xchg
fwait
inc
push
repz
bound
add
es
bnd
incl
out
jo
push
jo
push
lcall
out
sub
add
sbb
mov
sub
mov
or
sbb
fs
push
mov
push
popa
pop
call
les
and
sub
or
mov
cwtl
push
push
dec
in
push
and
jo
add
shlb
push
incl
push
movb
mov
std
cmp
dec
ja
ficompl
add
push
push
mov
or
jne
movzbl
inc
mov
push
xor
sbb
dec
mov
sahf
int
lea
jmp
inc
and
stos
or
jnp
adc
mov
sub
inc
iret
sub
mov
jle
mov
mov
push
mov
test
cmp
cltd
cli
imul
mov
lods
arpl
mov
cwtl
lret
sbb
test
adc
shr
push
lods
add
add
pop
push
into
xchg
and
and
mov
rcr
rclb
jmp
ret
add
mov
add
or
fimuls
imul
pop
rcrl
push
and
popf
es
cltd
cli
xchg
inc
ret
push
jae
xchg
push
inc
fs
enter
test
fwait
xchg
imull
test
or
fisttpl
loop
mov
add
pop
jmp
inc
enter
sub
sub
filds
or
in
mov
add
shlb
or
insb
jmp
and
adc
or
cmpb
add
fsts
and
or
or
movsb
adc
mov
mov
xor
in
xor
cmp
int3
sbb
pop
cmp
xacquire
adc
cmp
dec
xchg
stc
mov
or
sub
xchg
mov
mov
mov
ret
and
int
sub
fwait
xor
stc
incl
mov
add
xchg
add
jae
pop
lahf
test
aas
cmpsb
inc
xchg
mov
ret
dec
and
enter
pop
pop
clc
ret
leave
ret
sbb
loope
or
add
ljmp
xchg
dec
leave
push
cmpl
add
call
loope
mov
pusha
push
pop
sub
int
lock
xor
inc
adc
mov
pop
cmp
rolb
dec
test
dec
push
push
mov
shrb
add
inc
cmp
dec
ljmp
jmp
adc
clc
fcomps
or
arpl
and
sub
bound
adc
add
ja
mov
jbe
inc
push
mov
adc
mov
xor
nop
and
in
test
sub
inc
add
shlb
sub
mov
jmp
dec
pusha
cmpsb
sti
loope
fs
or
cli
icebp
adc
ja
sbbl
lock
mov
ljmp
lea
xor
mov
mov
in
or
pop
sbb
repz
js
dec
sub
xchg
cmp
lret
lea
fsts
adc
and
inc
in
add
mov
leave
add
mov
imul
dec
and
test
loope
xor
adc
scas
lea
call
gs
push
mov
xchg
std
mov
xchg
sbb
icebp
lds
dec
sbb
gs
das
push
cmp
adc
cmpsl
in
mov
cld
xor
test
rcrl
xor
xchg
scas
pop
cld
jmp
pushf
movsl
add
ja
call
rclb
sub
movsl
divb
and
repz
cwtl
dec
stos
lods
or
call
sbb
add
test
lds
cmp
add
loop
pop
popa
mov
addl
xor
mov
sti
and
addr16
mov
and
sub
xor
mov
xchg
and
xor
call
mov
loop
pop
push
lock
sbb
mov
or
add
pop
out
in
jmp
mov
or
shr
lret
xor
push
insb
das
xchg
out
mov
adc
call
call
push
jno
sahf
xchg
lods
loopne
sub
pop
jns
rcr
pop
pusha
hlt
pop
sub
insb
mov
imul
in
push
mov
add
lea
cmp
adc
mov
jmp
incl
lea
sbb
mov
call
sub
or
dec
push
loope
pop
push
ficoml
fstpt
addr16
mov
inc
push
and
movsl
imul
fwait
xchg
out
dec
dec
jg
bnd
xchg
jns
inc
adcb
push
add
andl
xchg
xor
inc
dec
sbb
lea
mov
lahf
mov
fstpl
push
sub
outsb
add
inc
xchg
js
outsl
icebp
add
cmc
loop
xorb
aam
mov
aas
andl
mov
jnp
or
mov
sarl
xchg
js
dec
sbb
outsb
adc
mov
ret
fdivrl
push
sub
inc
std
and
push
push
cld
sub
add
cmpsb
std
add
pusha
mov
incb
subl
das
add
sti
sub
addb
pop
dec
test
cmp
fildl
adc
insl
sahf
rolb
mov
push
pusha
dec
pop
jb
lahf
ret
mov
mov
loopne
mov
pop
lahf
mov
add
fistpll
fsubl
or
xor
xchg
mov
pop
cmp
sbb
adc
push
or
loop
push
and
popf
inc
sub
inc
add
sbb
sub
dec
movl
xor
push
sbb
push
divb
out
aam
lahf
sarl
popa
rorl
jne
testb
xchg
jmp
data16
sbb
les
sbb
add
sbb
xchg
inc
movsl
out
sti
add
xchg
cmp
hlt
and
xchg
fidivl
inc
push
mov
xor
mov
jle
fldcw
cli
je
inc
or
mov
and
adc
push
mov
sbbl
data16
dec
xor
stos
loopne
jnp
xor
dec
cmpb
iret
shl
sub
bound
lods
or
mov
test
inc
bound
inc
dec
imul
clc
insb
cmc
lock
add
imul
nop
adc
ds
ja
inc
sahf
jge
loopne
or
shlb
sahf
mov
jmp
fwait
rol
xchg
sub
mov
sbb
and
aaa
or
add
test
mov
mov
push
das
popf
popa
push
adc
add
hlt
sub
fistpll
fimuls
dec
adc
add
movsl
mov
sub
sahf
and
add
into
xchg
push
jns
push
out
fs
aam
xor
xor
push
pop
test
adc
in
adc
cld
sbb
jb
xchg
mov
jp
adc
test
and
and
or
je
hlt
or
out
fimuls
ret
dec
xor
adcb
push
repnz
push
adc
add
cltd
or
nop
pusha
jae
or
lds
push
pop
in
adc
in
repnz
arpl
inc
pop
bound
sarl
sub
popa
pusha
push
pop
or
nop
ljmp
dec
es
test
adc
sub
jno
insl
dec
stos
ficoms
fcmovnbe
jmp
in
fneni(8087
enter
add
xchg
mov
or
add
push
pop
into
fnstenv
adc
adc
pop
nop
loop
add
inc
movsb
push
jno
stc
cmp
jmp
add
inc
add
inc
popf
hlt
out
cmc
mov
add
dec
sub
shlb
sub
pop
or
add
or
mov
cs
fstpt
add
daa
dec
cmpsb
mov
cmp
add
jg
mov
testl
jmp
mov
shll
add
hlt
dec
mov
push
push
or
push
mulb
adc
fcom
lahf
mov
jp
mov
repnz
stos
push
xor
outsl
ds
pop
add
fnstcw
mov
push
adc
nop
push
lods
clc
pop
pop
push
jecxz
dec
cmpsb
scas
lret
or
adc
jl
inc
mov
adc
in
xor
pop
mov
in
nop
cmp
cltd
pop
loope
mov
outsb
jecxz
add
pop
pop
push
mulb
hlt
add
rcll
add
and
xlat
add
push
loopne
cmp
jl
sbb
addr16
cmp
or
and
cwtl
or
fdivrs
int
loopne
fdivrl
clc
ljmp
out
xor
mov
push
mov
mov
jge
das
push
in
cmp
mov
mov
xor
stc
std
sub
stos
sbb
xchg
dec
sahf
add
out
sbb
mov
mov
push
jno
add
ljmp
pop
scas
add
pop
cltd
inc
pop
pop
hlt
scas
add
fldcw
and
out
dec
movsl
add
movzbl
or
nop
faddl
pop
rorl
sub
push
push
lret
inc
mov
stos
jl
dec
cbtw
test
sub
pop
and
lret
adc
adc
js
pop
shll
popf
movsl
daa
test
inc
sbb
push
orb
pop
pusha
sub
lods
xor
mov
popa
sbb
loop
das
sbb
inc
xchg
jns
inc
inc
pushf
mov
loopne
orl
jg
in
dec
jmp
xorl
mov
test
mov
fdivl
lock
lret
mov
mov
add
movsl
inc
stos
mov
pushf
test
les
addl
inc
je
jmp
ds
cmpsl
push
sti
sub
push
mov
pop
xchg
lea
xor
int
leave
aam
dec
cli
in
and
orb
xor
dec
cld
pop
cmp
aad
pop
int
add
pop
push
es
in
std
shrl
push
jg
sub
loopne
adc
mov
lods
sbb
ret
rolb
hlt
add
mov
pop
jnp
mov
loope
add
push
xchg
xchg
in
or
leave
jne
add
adc
ret
add
mov
sbb
outsb
fdivs
mulb
sbbb
pusha
pushaw
inc
pop
shlb
movsb
out
mov
add
ss
mov
daa
or
mov
sbb
in
xchg
mov
adc
fnstenv
out
mov
lahf
sbb
xor
stc
dec
jp
cltd
xorb
loope
out
inc
movsl
stos
in
ds
dec
outsb
cld
add
in
pop
fidivrs
fnstsw
test
push
push
mov
add
pop
movsb
adc
ja
pop
cmp
push
mov
nop
xor
popf
out
add
leave
push
xchg
xchg
daa
cltd
dec
pop
jne
xchg
xchg
lfs
xor
mov
dec
fisttpl
popf
shlb
pop
stos
jb
xchg
cmp
lds
sbb
popf
mov
add
leave
inc
stos
adc
flds
sahf
xchg
push
xorl
mov
pop
in
pop
push
jnp
lret
loope,pn
mov
xchg
jb
add
xchg
cmp
push
push
push
les
lcall
pop
xchg
fistl
mov
roll
inc
xchg
inc
push
mov
sbb
push
lods
cmpsb
in
jnp
cmp
dec
cmp
ret
imul
cmc
and
outsl
in
mov
test
popf
inc
adcl
pop
xor
cmpsb
clc
lcall
test
push
in
les
mov
sub
into
enter
dec
xchg
add
mov
push
pop
sahf
sub
adc
or
stc
mov
mov
aad
xor
mov
sub
inc
mov
adc
mov
dec
ret
mov
xor
pop
jb
fmuls
out
popa
sub
xchg
mov
cmp
sub
push
jne
aad
int3
sbb
push
lods
pusha
lea
aaa
pop
mov
int
loopne
dec
mov
cs
sbb
dec
xor
out
outsb
shl
sbb
xor
xchg
leave
popf
inc
xorb
add
jnp
fstps
int3
lods
lock
add
pop
mov
jg
daa
pop
push
push
scas
lods
jae
xchg
pop
inc
leave
aaa
sub
sbb
jno
or
int3
or
and
fadds
fiaddl
inc
adcl
pusha
mov
add
addr16
loopne
repz
push
xchg
mov
pusha
aad
xchg
mov
xchg
mov
mov
aaa
push
orb
dec
lahf
sbb
or
nop
jmp
dec
or
out
loopne
ret
test
test
movl
adc
out
or
movsl
rorl
pop
aaa
xchg
aaa
movsb
add
icebp
cltd
lods
ja
inc
push
jmp
add
mov
lea
mov
push
xor
or
vmcall
call
orb
rorb
out
fnsave
loopne
fs
loope
sbb
sub
and
pop
adc
rclb
pushf
or
shlb
mov
daa
sbb
dec
push
add
cmp
cmpsl
pop
test
push
or
add
push
xor
orb
sarb
mulb
mov
jno
sbb
xchg
flds
cmp
xchg
mov
or
lahf
rorb
inc
sub
fstpt
add
mov
and
cwtl
aam
int
jl
faddl
sbb
dec
and
pop
add
push
sub
mov
push
clc
je
in
add
jne
popa
and
jmp
pop
fnstsw
test
mov
mov
add
sbb
data16
xchg
xchg
mov
mov
inc
pop
mov
sahf
jne
je
cmp
add
in
xor
adc
add
fwait
loop
mov
or
push
adc
sub
sub
push
mov
pop
popa
jo
icebp
inc
or
and
sbb
xlat
add
movsb
jb
loopne
or
popf
gs
add
mov
addl
mov
out
sahf
shr
xchg
adc
adcb
movsl
aam
add
and
ret
nop
out
mov
xchg
adc
orb
jae
mov
mov
and
cmpsb
jne
add
dec
test
adc
shrb
push
pusha
sub
inc
or
iret
out
loope
ret
inc
xlat
cmp
je
sbb
popf
lds
mov
lock
push
mov
sbb
cmp
push
xchg
out
jl
push
adc
jno
data16
push
adc
xchg
loopne
jnp
cmc
in
add
and
mov
test
add
aam
and
push
inc
pusha
imul
pop
push
push
adc
add
insb
scas
xchg
mov
cmpsb
pop
sub
push
pop
call
jo
popf
dec
std
pop
push
pop
xchg
cmp
mov
pop
add
or
or
mov
addb
xor
push
cmp
lea
inc
pop
add
movsl
lods
push
cmpb
shlb
outsb
dec
in
add
jl
mov
cwtl
pop
xchg
adc
cmpsb
es
nop
das
mov
or
add
or
cmpsb
pop
pop
xchg
adc
out
inc
das
mov
add
test
pop
cmpsb
clc
sti
sbb
mov
inc
inc
xor
add
mov
jl
hlt
add
int
mov
mov
and
movl
and
xor
pslld
push
push
mov
sub
shlb
inc
jle
adc
cmp
or
adc
icebp
add
fsts
jp
popf
loopne
xchg
movsb
and
gs
add
hlt
push
push
nop
jg
icebp
xchg
or
nop
jne
out
loopne
out
mov
fdiv
test
mov
jle
mov
fnstenv
dec
sub
testl
jle
and
sbb
andb
mov
out
jecxz
dec
jnp
mov
and
add
mov
leave
loope
add
mov
bnd
pop
dec
cmp
stos
fldt
rorb
push
arpl
mov
add
mov
in
das
fcoms
js
cmp
les
mov
xchg
shlb
in
gs
pop
lret
adc
pop
push
push
out
loopne
push
add
push
mov
adc
jp
jge
cmp
push
icebp
lcall
sub
shrl
add
mov
jmp
loop
das
cmpsl
enter
or
jl
sarl
and
popf
gs
notl
ds
adc
jecxz
add
nop
fnstenv
ret
xchg
adc
aas
pop
pop
lds
iret
sti
aaa
jnp
jo
cmp
nop
call
je
or
dec
inc
jno
stc
dec
pop
mov
call
adc
add
or
test
xchg
jg
push
add
mov
cltd
push
les
aad
sbb
mov
mov
jecxz
fldl2e
push
jnp
jno
mov
adc
mov
adc
mov
andl
ret
je
add
and
add
xchg
movsb
mov
cmc
inc
in
add
jae
je
mov
data16
aaa
es
add
daa
pop
fs
add
pop
sarl
je
jno
mov
mov
clc
cmp
xchg
lea
push
lret
xchg
sub
or
sbb
test
cs
jno
jp
inc
or
je
sub
pop
jp
inc
or
cmpsl
add
and
dec
jmp
dec
jno
mov
sar
jbe
daa
add
push
jle
push
mov
cmp
test
push
loop
add
lcall
pop
mov
les
push
movsl
push
cld
mov
mov
iret
add
test
mov
pushf
and
xchg
push
pusha
jb
lds
lret
cmp
test
mov
mov
adc
cli
adcb
add
xchg
mov
loope
in
mov
in
cs
cld
ja
or
ja
es
xor
jmp
and
movsb
int3
pop
cmp
add
rolb
cmpsb
or
pop
sub
mov
leave
jbe
loopne
mov
sub
mov
dec
add
inc
les
mov
adc
scas
outsb
push
add
jno
add
dec
add
mov
jbe
ja
and
stc
inc
sbb
adc
or
sahf
lock
inc
shrl
mov
cmpsl
mov
adc
jns
adc
inc
mov
pop
cs
jno
std
fcomip
xor
mov
push
addl
popa
in
push
mov
add
mov
adc
cmpsb
clc
js
outsb
je
add
xor
mov
jle
pop
dec
pop
mov
dec
mov
cmpsl
negl
lods
mov
sub
icebp
mov
add
cmp
inc
sbb
jne
in
cltd
mov
add
adc
jmp
mov
jns
inc
scas
xchg
cmpsl
jmp
xor
mov
sub
nop
or
cmp
dec
lret
dec
stos
fs
dec
xor
sarb
insl
add
inc
push
repnz
test
fidivrl
add
inc
mov
jmp
or
sub
and
xor
jns
sbb
sub
xchg
rcrl
sar
adc
xlat
fimuls
int3
jp
fcomp
sbb
jae
jo
stos
add
lret
xlat
imul
jp
jb
add
push
and
inc
jbe
imul
adc
add
cmpsb
repz
test
sub
push
nop
or
push
shll
sub
pusha
shll
add
jecxz
mov
loop
sub
pop
std
pop
add
loop
add
insb
dec
lock
enter
dec
mov
adc
adc
fs
xor
pop
push
adc
adc
fldl
mov
xor
pop
stc
and
fwait
bswap
push
fisubs
mov
sbb
in
int
push
sub
or
xor
and
fidivs
mov
loopne
cs
rclb
add
mov
jb
repz
mov
xchg
pusha
and
xchg
mov
adc
or
repz
pop
cmp
cmpsb
or
add
stos
pusha
call
inc
arpl
leave
sub
jle
and
adc
mov
dec
loop
popa
in
mov
xor
push
pop
sti
jg
xor
or
lods
ficompl
adc
enter
jae
out
push
sahf
jo
add
sbb
fcoms
push
cmp
push
mov
push
or
fstl
imul
into
int3
push
stc
jmp
dec
add
aaa
je
sbb
repnz
mov
pop
sbb
mov
js
sbb
mov
popf
jmp
xchg
pop
push
subb
add
and
popa
scas
outsb
in
mov
repz
pop
popf
sahf
dec
mov
aam
stos
mov
jno
sub
adc
inc
xchg
notb
loope
dec
add
mov
mov
mov
adc
push
add
mov
in
popa
stos
or
xor
testb
repz
dec
shl
fcmovnb
fistps
decb
cmovs
mov
push
in
push
add
das
jne
lods
pop
lods
mov
fsubr
adc
nop
mov
icebp
push
cmpsb
jg
add
loope
or
push
insb
add
sub
int3
sub
adc
sub
jae
and
ret
dec
aaa
push
add
sub
jp
jbe
fimuls
shl
or
jge
lret
fldcw
mov
pop
jle
aam
dec
mov
xchg
ret
cmp
push
stc
je
imul
inc
xchg
cmp
mov
mov
and
sti
pop
pop
lcall
lret
popl
sub
sbb
lods
mov
lock
shlb
in
sbb
in
jns
or
out
cltd
jecxz
mov
cmpsl
ss
pop
push
arpl
jp
add
mov
add
and
mov
inc
testl
mov
popa
xor
cwtl
cmp
inc
popf
adc
in
jno
nop
xlat
icebp
pop
je
add
cmpb
mov
push
stc
data16
adc
add
and
add
and
mov
cli
or
popa
xchg
jne
loop
arpl
add
or
lcall
fcoml
je
cmp
xor
stos
cmp
mov
ss
adcb
scas
je
incb
mov
or
add
xchg
adc
rcl
add
out
inc
xlat
mov
daa
pop
std
cmpsb
sarb
xor
arpl
or
mov
cmp
mov
mov
mov
in
xchg
sbb
cli
xchg
xchg
ss
mov
loopne
lock
sub
fcomp
adc
mov
loopne
int
mov
frstor
popf
cmp
cmp
pop
je
jmp
cmp
mov
adc
scas
push
add
xor
jg
dec
pop
lea
lock
or
jle
push
call
sub
inc
sbb
movsb
rcrl
fcomps
xchg
mov
cld
jmp
mov
imul
mov
sub
addb
das
inc
add
inc
dec
or
jnp
roll
add
dec
test
test
stc
ret
add
pextrw
or
int
jle
cmp
popa
xor
and
mov
dec
out
lock
adc
dec
dec
nop
add
ss
lock
mov
inc
xor
dec
jbe
sbb
ja
sahf
into
sbb
push
test
push
mov
je
sbb
inc
les
pop
or
subl
pop
adc
repz
mov
sbb
dec
popl
ret
nop
scas
cmp
add
into
mov
push
push
jecxz
mov
or
xchg
les
movsb
add
popf
adc
call
mov
cli
mov
add
call
call
jb
cwtl
daa
mov
inc
inc
pop
lea
imul
stos
sahf
push
rorl
dec
or
mov
and
les
hlt
cli
pusha
xchg
loop
addl
lods
in
lret
jmp
test
fisttps
lahf
pop
repz
nop
dec
sub
fmuls
mov
dec
xor
mov
adc
or
test
pop
lock
cmp
rolb
inc
aas
sbb
jp
and
pop
add
inc
pop
xchg
outsb
mov
lahf
jno
cmp
loope
test
int3
cmp
bound
shrl
je
and
sbb
adc
mov
add
pop
in
flds
ret
je
pop
insl
add
outsl
movsb
or
pusha
push
shlb
cmp
jns
inc
adc
lea
add
mov
jp
into
mov
mov
out
inc
loop
test
test
or
cmc
dec
test
lea
push
mov
and
cmp
stc
adc
popf
mov
and
and
lds
fadd
and
in
ljmp
pop
divl
jl
dec
xor
or
fs
iret
fmull
inc
adc
cmpsl
push
into
popf
out
sub
jle
mov
push
jg
xchg
fisubs
or
lret
push
std
popf
lock
xchg
sti
popa
xchg
push
in
in
dec
push
cltd
std
pop
xchg
xchg
repnz
ret
jmp
sub
mov
mov
jnp
or
push
pop
jns
mov
pop
int
sarb
cmp
sbb
jb
mov
mov
js
xchg
dec
rorl
add
and
sub
mov
adc
shlb
xor
in
inc
test
cli
mov
setbe
mov
popf
jnp
add
xor
out
mov
adc
movb
std
and
push
inc
or
mov
dec
in
iret
stc
xor
jmp
sahf
leave
imul
loopne
mov
xchg
and
mov
xchg
adc
sub
pusha
lret
hlt
lods
insl
jle
cmc
sbb
mov
gs
add
mov
inc
prefetchw
sub
mov
jns
xchg
pusha
jmp
test
jo
dec
push
mov
mov
sub
sti
jnp
shlb
mov
ds
aas
push
aas
lods
popa
jb
aas
lret
sbb
int3
aas
adcb
jge
pop
mov
inc
shr
xchg
and
mov
and
or
xchg
rolb
adc
leave
mov
jo
pop
cmp
add
mov
movsb
push
inc
flds
addl
out
ret
pop
xchg
aaa
mov
xlat
scas
push
xchg
orl
xchg
and
xor
pusha
lahf
rorb
mov
daa
aam
fwait
pop
orb
ret
mov
mov
push
cli
rolb
lds
andb
jbe
pop
pop
leave
and
mov
jns
andb
xchg
push
stos
mov
or
cmp
mov
std
enter
test
sbb
pop
dec
sub
sahf
inc
pusha
xor
and
call
das
roll
imul
cltd
jecxz
stc
inc
mov
icebp
and
les
sub
jmp
hlt
dec
jns
outsb
xor
sub
mov
adcl
insb
nop
data16
aam
add
push
clc
je
lock
xorb
pop
mov
xchg
adc
aad
stos
xchg
or
lcall
xor
mov
in
mov
loopne
cmp
movsl
mov
pop
pop
js
mov
xchg
jno
shlb
sbb
call
dec
fs
mov
les
sbb
test
out
xchg
fwait
and
lods
sahf
pop
add
mov
inc
ja
punpckhbw
mov
les
loope
inc
dec
and
xor
push
push
push
pop
pop
mov
movsb
sub
aas
jbe
mov
xchg
cltd
push
push
mov
daa
or
add
idiv
rol
lahf
decb
arpl
cmp
xor
popf
push
and
lods
pusha
add
clc
push
adc
popa
aaa
out
adcb
dec
imul
and
in
mov
pusha
lahf
jo
or
dec
mov
pop
das
dec
jg
xlat
daa
ror
mov
and
into
pop
das
push
ret
jnp
mov
mov
jns
xchg
xor
fsubl
sub
ficomps
fisttpl
mov
add
mov
movsl
andb
add
aaa
loope
stc
out
pop
add
adc
inc
xchg
call
fisttpl
in
ficomps
lahf
nop
dec
fmuls
sbb
push
roll
pop
dec
pop
jp
and
ret
test
sub
sbb
imul
cld
das
jo
cltd
add
mov
cmp
fs
xchg
jmp
push
popf
int3
and
pop
adc
lock
dec
jno
mov
test
mov
or
or
pop
stc
jge
je
pop
fnsave
xor
push
pop
lcall
lock
adc
add
lock
scas
push
and
sbb
jno
mov
into
xorb
push
push
and
cltd
repz
das
dec
ret
or
xor
mov
int
mov
mov
shll
out
pop
or
and
add
pop
jg
sub
cmpsl
aam
pop
push
lcall
bound
mov
outsl
dec
xlat
adcb
xorb
adc
jb
data16
push
lea
mov
xor
dec
add
dec
add
cmp
lock
lcall
es
or
pop
roll
lock
lods
mov
pop
rclb
mov
mov
jnp
add
push
xchg
sbb
dec
add
mov
add
mov
pop
repz
icebp
inc
dec
adcb
into
mov
and
push
inc
cmp
sub
cmpsl
xor
out
roll
cs
in
lds
repz
enter
mov
pop
leave
adc
repnz
dec
fwait
out
sbbb
insb
mov
fldcw
cmp
pop
aas
dec
add
fists
add
jmp
inc
add
jmp
pop
testl
fwait
nop
das
faddl
dec
pusha
cld
inc
cld
add
push
popa
push
cwtl
fisubs
aas
iret
rclb
sub
xlat
pop
adc
int
mov
adc
jl
sub
sbb
sub
push
mov
leave
mov
fmull
popf
rcrl
mov
jb
xor
ds
mov
adc
out
pop
aam
mov
mov
mov
inc
push
shll
pop
jne
mov
dec
jns
pop
fbld
ret
shlb
fstl
cmp
mov
test
fistl
jo
pop
das
and
fiadds
add
mov
daa
das
jno
adc
ret
push
pop
out
push
repnz
popf
push
cwtl
jmp
add
jl
or
and
pop
fisubl
adc
pop
pop
aam
cs
xchg
cmp
push
sub
or
cmpsb
add
shrl
ljmp
jns
dec
sbb
cli
stc
xchg
sbb
pop
insb
cmp
push
add
xchg
loopne
cmp
jl
push
xor
mov
sub
imul
mov
clc
leave
ljmp
orb
push
aaa
out
sbb
jae
add
cwtl
scas
adc
adc
mov
idivb
sub
bound
popf
cltd
and
xchg
and
mov
das
add
dec
add
and
inc
cmpsb
stos
pop
lds
pop
lods
sar
jmp
shl
jno
mov
rclb
fsts
mov
adc
into
movb
add
dec
flds
test
and
mov
jg
pop
outsb
movsb
inc
cli
xchg
add
push
in
sbb
lock
lods
add
sub
mov
or
hlt
cmp
popa
pop
arpl
adc
add
pop
push
and
push
or
inc
int
xor
and
mov
jl
jo
jge
xchg
adc
mov
int3
jns
sbb
or
push
xchg
adc
mov
adc
adc
mov
aam
jo
pop
pop
ret
add
mov
shr
push
cmc
cltd
aas
pop
sub
clc
mov
mov
loop
push
jmp
rcll
sar
pop
movb
setl
pop
adc
lods
out
mov
bound
mov
jae
xchg
sbb
fmull
pop
and
or
je
jmp
add
adc
xor
lods
pop
and
mov
movsl
pop
movsl
inc
xchg
test
mov
mov
jnp
adc
sbb
add
jb
out
daa
je
fiadds
aaa
stos
into
lods
jae
xchg
jne
cs
fdivs
add
jns
mov
add
and
nop
push
pop
nop
dec
loope
loope
jp
scas
add
popf
lods
roll
cmpsl
and
push
gs
or
jns
sbb
mov
and
xor
adc
int
jne
cmp
add
xlat
jnp
mov
lea
add
adc
xchg
ret
pusha
fisttpll
xchg
mov
jae
push
int
add
jecxz
lcall
xorb
call
bound
xor
popa
das
add
and
jo
mov
mov
outsb
cwtl
sub
cmc
push
push
inc
mov
mov
mov
movsl
xor
pop
test
pop
in
movsb
fisubl
std
pop
dec
push
shlb
nop
ljmp
pop
or
or
mov
jl
leave
sub
push
leave
ret
jg
jge
mov
shrl
scas
jne
call
mov
dec
inc
dec
repnz
dec
test
pop
int
sub
xorl
xchg
mov
xchg
adc
pop
jbe
sbb
rcl
and
xor
mov
les
lds
js
sarl
jmp
add
dec
loope
adc
pop
dec
cmpb
mov
add
sub
out
jbe
cld
test
add
lods
push
ret
jne
lods
loopne
push
mov
inc
lods
or
or
sub
leave
addb
push
ror
pushf
loopne
outsb
mov
push
fcoms
fisttpl
lods
jne
inc
cmpsl
add
test
mov
or
and
cmp
inc
push
daa
cmp
mov
cmp
lahf
add
mov
in
cwtl
test
mov
xor
adc
push
or
pusha
shlb
aam
nop
das
jae
xchg
mov
push
outsl
test
or
cs
clc
nop
rcrb
add
out
xchg
rorb
sbb
dec
add
xor
sbb
and
popa
pusha
test
mov
sub
add
pop
mov
mov
filds
je
xor
fs
std
inc
inc
daa
arpl
cld
jo
or
enter
xor
mov
add
arpl
dec
and
pushf
mov
jae
add
dec
movsl
pop
add
sbb
dec
roll
push
pop
mov
test
add
outsl
jno
add
add
out
pop
clc
pusha
dec
mov
mov
ljmp
dec
je
and
xchg
clc
lods
jl
sbb
cmp
add
icebp
push
adc
push
fsubr
and
mov
dec
das
cltd
or
jne
movsb
and
add
lahf
cmc
in
add
and
pop
add
mov
add
es
xor
or
lea
xchg
dec
scas
cmpsl
fistl
fistl
xchg
lcall
inc
mov
push
mov
iret
push
lods
pop
sbb
add
in
adc
xchg
add
fisttpl
orl
sub
aam
xor
loopne
pop
adc
mov
in
sarb
or
aad
sbb
hlt
push
leave
cmp
mov
mov
adc
fldt
icebp
pop
cmpsb
pop
or
pop
rolb
insl
bound
cmp
push
or
aaa
or
ret
gs
mov
mov
push
pop
mov
dec
or
clc
fldenv
add
or
sub
mov
popa
mov
lea
mov
add
test
daa
cmc
xchg
nop
movsl
int
add
imul
push
push
aas
push
add
addr16
rorb
loop
xorb
testl
out
pop
clc
fimuls
enter
stc
test
pop
xchg
inc
repnz
add
icebp
push
and
sbb
pop
pop
mov
fnsave
out
xor
faddl
inc
pop
clc
pop
or
sub
inc
sbb
or
mov
lods
int3
or
cltd
aam
sti
jge
and
add
into
xor
and
cld
sub
inc
enter
pop
test
fsubr
jns
scas
and
fs
pusha
xor
pop
mov
movsb
mov
pop
cwtl
mov
in
mov
leave
cmp
lods
add
xchg
or
out
xor
loopne
test
dec
or
adc
rcrb
mov
in
test
xor
arpl
push
xchg
or
aaa
jle
pop
test
adcb
int
inc
jne
nop
xor
xchg
push
or
jns
shrl
stc
lahf
pop
out
or
sbbl
mov
or
cmp
sub
insl
inc
outsb
jecxz
push
or
add
cmpb
cmp
mov
jo
mov
or
into
fnsave
push
repnz
xorl
xchg
dec
cmp
mov
fistps
sbb
aad
cmc
mov
xor
loop
add
adc
push
leave
scas
pop
fwait
lock
mov
and
pop
clc
adc
add
add
dec
daa
leave
and
mov
or
mov
jns
inc
jmp
sub
enter
cmp
mov
and
cmp
xchg
shlb
test
jecxz
mov
add
fs
mov
and
add
mov
std
add
xchg
mov
add
jp
ds
arpl
bound
xor
xlat
shl
test
or
shll
sbb
js
mov
scas
xor
mov
cli
or
jmp
mov
fnstenv
and
shr
int3
sub
ret
scas
stc
test
push
adc
and
xor
fstl
movsl
pop
push
ret
add
cld
movsb
pusha
dec
dec
mov
subl
mov
xchg
adcb
es
mov
lock
mov
or
xor
xlat
xchg
push
mov
sub
mov
push
aaa
mov
mov
jg
push
adc
pop
cli
sub
dec
mov
xchg
fldl
out
jo
inc
in
jno
in
inc
mov
and
mov
jo
int3
xchg
xor
movsl
roll
notb
imul
adc
leave
ljmp
enter
xor
adc
mov
xchg
xor
push
test
mov
jle
addr16
push
or
xchg
movsb
pop
adc
and
pop
mov
xchg
add
mov
enter
and
or
movsl
js
and
mov
push
xchg
push
inc
les
push
inc
mov
jp
add
lods
cmp
and
cld
xor
pop
mov
ret
pop
cmp
xor
mov
ss
xchg
mov
pop
mov
fidivrs
and
loop
sub
jg
jnp
cld
loope
cmc
shlb
lock
ret
sub
mov
jns
jmp
cmp
xor
mov
dec
push
mov
dec
in
push
inc
cmp
pop
pop
sub
mov
sbb
fucomp
outsb
fwait
lds
xlat
push
das
and
jmp
pop
sub
aas
and
insl
inc
fs
arpl
loope
jne
orl
stos
mov
pop
popf
imul
pop
add
popf
sar
movsl
lds
jmp
rorl
sub
xchg
cwtl
or
movb
icebp
mov
int
add
mov
inc
pop
std
stc
or
ror
xor
push
xor
sub
clc
pusha
jae
jo
icebp
add
xor
bound
jle
lds
cli
subl
and
lahf
or
xor
aad
pop
popa
xchg
mov
xor
sti
mov
andb
aaa
mov
fidivrs
or
out
pop
je
insl
mov
lret
addb
negb
stos
call
and
nop
pusha
pop
mov
std
dec
or
movsb
or
push
push
pop
jno
gs
scas
fwait
out
imul
addr16
pusha
jo
mov
popa
aad
in
incl
pop
and
pop
fnstenv
das
int
outsl
mov
xchg
rolb
cli
into
add
push
ds
pop
sbb
aas
sub
jns
push
jmp
mov
mov
lds
adc
stos
popa
pop
mov
pop
add
or
sbb
pop
repz
rol
outsl
jg
cwtl
xchg
sar
mov
add
lock
mov
pop
push
xchg
push
lods
jo
pushf
push
sbb
out
pop
sub
jp
mov
mov
lds
outsl
mov
mov
sar
outsl
daa
or
iret
repz
movsb
and
and
xchg
rcll
les
outsl
dec
jmp
and
dec
add
mov
xchg
int
push
cli
xchg
add
lods
mov
sub
push
add
adc
sub
mov
xchg
mov
add
inc
data16
aad
fbld
sahf
mov
sub
scas
mov
adc
jmp
test
fsubrp
dec
sarb
push
mov
aaa
add
in
arpl
inc
out
je
jmp
and
xchg
xchg
icebp
dec
rorl
and
out
add
das
lret
add
or
push
dec
loopne
mov
inc
xchg
push
in
jl
test
in
les
rclb
mov
mov
orb
jb
insl
push
inc
test
mov
cmp
add
and
in
aas
jp
dec
push
lret
dec
ds
iret
push
inc
and
fildl
rclb
inc
rcrl
mov
popa
jmp
mov
outsl
pop
add
loope
loopne
xchg
add
inc
out
mov
xor
dec
xchg
mov
stc
out
les
jecxz
adc
scas
push
and
sub
out
hlt
hlt
mov
aas
fisubrl
addb
cmp
dec
dec
push
iret
dec
ror
xchg
sarb
pop
lods
jl
imul
mov
push
test
adc
add
pop
rorl
and
icebp
add
xchg
dec
out
movl
pop
nop
into
mov
mov
mov
and
pop
jo
int
mov
sarl
dec
or
xor
sbb
in
fs
pop
in
movsb
push
sahf
mov
and
pop
popa
push
pushf
mov
add
imul
xlat
cmp
mov
out
mov
ja
add
xor
popf
add
adc
cmpsb
push
mov
push
sub
add
mov
push
or
and
test
lods
cmpsb
fbld
xchg
inc
sbb
fs
cmp
mov
push
mov
or
pusha
pop
mov
or
xchg
mov
dec
hlt
jae
pop
push
sbb
sbb
sbb
rcl
and
hlt
ror
add
and
les
test
adc
sub
jmp
enter
jns
adc
mov
mov
cmp
and
add
cmp
xor
out
loope
fimuls
ret
loop
jl
test
pop
jge
xlat
imul
add
sahf
add
js
mov
in
lds
std
into
pushf
sbb
stos
sub
into
int
aas
roll
xor
jne
add
xor
lods
push
sub
mov
jbe
add
mov
jg
add
add
mov
mov
popf
adc
inc
repnz
lret
add
int
push
movsl
cltd
js
nop
and
xchg
fwait
out
or
lret
loop
test
pop
mov
lock
or
mov
sub
push
add
xchg
in
cmpsl
xchg
dec
cmp
fsubs
and
shlb
nop
inc
sbb
aam
inc
cmpsl
sub
sbb
movsl
fstpt
clc
lea
push
movsb
mov
mov
mov
nop
adc
js
sub
adc
scas
mov
mov
push
xchg
int3
in
decl
and
mov
add
and
adc
imul
cmp
rep
repnz
push
xchg
imul
mov
stos
mov
cmp
nop
mov
cmp
push
and
mov
fcmovnu
rolb
adc
lock
daa
xchg
and
les
mov
add
sub
cmpsl
fimuls
mov
outsb
mov
pushf
push
add
outsb
out
dec
add
aaa
push
outsl
and
ljmp
sub
lds
dec
jecxz
daa
push
inc
decb
and
call
lahf
dec
repnz
and
rolb
mov
xchg
call
leave
pop
stc
icebp
push
mov
jns
sbb
das
out
cmovo
shll
pusha
mov
adc
add
sbbb
orl
mov
fmull
aam
jecxz
add
pop
dec
inc
cmpsl
sbb
in
mov
mov
xchg
sarb
mov
dec
lcall
outsb
pop
test
popa
ljmp
inc
adc
mov
scas
push
cmp
sbb
pop
xor
aaa
inc
inc
push
les
out
loopne
sbb
sbb
dec
mov
pop
jo
mov
dec
jmp
mov
mov
test
fidivl
fcompl
cltd
sbb
cmpsb
cmpb
add
push
jl
pop
xchg
pop
test
divb
push
add
out
ret
and
mov
call
cmpb
shlb
xor
imul
adc
or
rclb
sub
or
pop
xchg
xchg
movb
popf
int
mov
das
ret
xchg
add
test
mov
push
mov
mov
push
sub
rorb
repz
adc
mov
sbb
sub
add
rolb
xchg
adcb
in
or
dec
mov
push
or
jns
xor
dec
adc
and
pushf
pop
jecxz
sub
push
addl
dec
add
cmpsb
and
adc
out
jne
sahf
inc
push
das
sub
test
cld
lds
pavgb
xchg
jns
aad
dec
or
push
imul
fnstcw
lahf
xchg
or
in
std
sub
fisubs
popf
jne
sbb
test
inc
or
jg
adc
fimull
loope
divl
or
or
pop
pusha
jbe
lcall
xor
pop
sbb
loope
test
movsl
dec
sbb
pop
add
popf
nop
and
cmpsl
add
xchg
stos
incb
sbb
test
lea
mov
push
imul
pop
mov
daa
adc
shlb
pop
pop
daa
rclb
add
or
add
push
add
shrl
or
inc
daa
push
xor
je
insb
subb
pop
sub
jmp
ret
and
call
add
mov
cli
push
pop
mov
pop
fwait
das
in
imul
out
and
dec
pop
mov
mov
filds
popa
je
adc
into
repz
lret
xchg
idivb
fcoml
xor
out
fldenv
mov
cmp
and
stc
xor
popf
icebp
or
cmc
mov
scas
xchg
mov
xchg
mov
dec
sub
fisubs
adc
push
inc
mov
daa
pushf
pop
pop
mov
popa
inc
lea
lret
stc
mov
mov
inc
cltd
fadd
dec
mov
cmp
cmc
subb
cmp
sub
inc
mov
inc
sbb
fmulp
cmpsl
shrb
in
add
out
fcompl
mov
inc
inc
add
push
shl
mov
sub
jnp
adc
push
in
push
fimuls
subb
and
or
xor
test
sub
cmp
inc
push
pop
dec
xchg
inc
out
sahf
testb
add
add
jge
mov
cmpb
inc
or
popf
mov
cmp
and
mov
mov
cmp
mov
test
xchg
out
mov
xchg
mov
loop
idivb
push
push
scas
je
mov
pop
fldt
or
or
xchg
bound
js
mov
rcll
push
sbb
push
dec
mov
pop
and
pusha
call
inc
adc
ds
mov
cmp
insl
int3
ss
mov
in
mov
inc
out
jbe
inc
adc
lret
cmpsb
mov
cmpb
mov
cmp
fs
add
enter
cltd
add
jo
faddl
or
imul
ret
push
pop
mov
fsubrl
push
add
push
push
sbb
mov
sbb
ret
or
mov
dec
outsl
popf
sbb
add
lods
xchg
push
push
sbb
ret
cmpsl
out
xor
fidivrs
mov
out
icebp
inc
sub
xor
adc
sub
dec
push
mov
lret
jmp
popf
sbb
mov
dec
mov
mov
cmp
inc
xchg
push
mov
loope
or
in
subb
mov
adc
lret
bound
pop
push
cmpsl
mov
xor
add
adc
mov
sbb
aas
mov
pop
inc
mov
add
pusha
dec
pop
leave
pop
sub
es
jg
push
lcall
lea
mov
mov
cli
orl
mov
push
cmc
inc
push
dec
push
mov
pop
xchg
in
frstor
in
xchg
adc
lods
push
sbbl
mov
into
mov
mov
test
xchg
pop
scas
sub
pop
js
ss
xchg
fs
outsl
or
insl
xchg
imul
int
mov
dec
and
sbb
lods
cmc
shll
in
insb
inc
out
jmp
jg
sbb
and
in
das
test
out
lcall
mov
mov
bound
xchg
add
int
loopne
mov
xor
sbb
cmp
es
lock
adc
dec
push
fistps
loope
clc
lcall
fcom
enter
pop
outsl
lret
fs
push
and
popf
leave
es
ljmp
fs
idivb
xchg
clc
xchg
pop
xor
lds
cmp
cld
mov
cmpsb
xlat
mov
xor
add
mov
test
pop
bound
push
push
sub
pop
pushf
push
out
loope
xchg
cli
out
sub
push
int
push
xchg
add
adc
fisubrl
lods
fldl
pop
pusha
fmull
sbb
call
mov
add
sub
daa
adc
popa
adc
enter
hlt
test
jbe
mov
adc
add
pop
or
call
mulb
aam
xchg
mov
or
ljmp
xor
movsl
mov
push
fwait
sbb
sub
dec
inc
fs
out
add
sub
jle
fidivrl
and
xor
and
rcrl
and
call
ror
popa
sysret
cmp
or
jge
je
test
mov
push
cmp
fs
dec
fldt
fwait
div
inc
sbb
mov
mov
push
xchg
push
rorl
dec
imul
movzbl
aad
sbb
push
inc
out
cmp
cltd
fistpll
popf
xor
jbe
dec
cwtl
dec
and
add
ficoms
xchg
add
mov
cmc
or
jp
dec
repz
xchg
mov
stc
mov
dec
stos
cld
push
mov
hlt
stos
mov
int3
push
andl
test
xor
cmc
add
push
mov
pusha
outsl
fstps
add
mov
push
popa
push
ficoml
outsb
cmp
pop
add
dec
daa
je
mov
popa
lea
or
mov
enter
pop
fsts
jge
in
cmpsb
add
shll
ss
pop
out
inc
cltd
dec
push
lcall
push
loop
shrl
in
fadds
in
stc
ds
push
jno
lcall
cmp
mov
adc
fcomps
mov
xlat
fwait
pushl
dec
add
mov
in
pop
fsubrp
or
add
jmp
nop
inc
pop
and
cmc
add
cmpsl
xor
pop
in
mov
and
bound
push
notl
test
outsl
mov
into
dec
and
and
sbb
add
leave
int
int3
xchg
sbb
jns
loopne
cltd
mov
xor
jns
add
mov
dec
mov
dec
cs
aaa
xchg
stos
mov
nop
push
pop
jo
or
outsb
mov
mov
stos
fstpt
mov
mov
xlat
gs
dec
dec
popf
inc
imul
dec
mov
xor
pushl
xor
add
xchg
mov
mov
sbb
pusha
popf
lea
andl
mov
add
call
pop
and
adc
stos
push
mov
dec
in
popf
and
in
xor
scas
ja
mov
inc
dec
add
push
sbbl
into
loopne
add
dec
dec
test
les
mov
push
stos
mov
mov
fwait
repz
xlat
loop
je
push
pop
scas
fldenvs
pop
jmp
ret
lods
or
cmpsb
push
mov
xor
push
test
jmp
fsubrp
push
adc
mov
int3
push
pop
iret
daa
ljmp
in
add
es
xor
call
push
in
xchg
sub
push
movsl
sbb
pop
mov
or
or
or
add
inc
stc
cld
int3
std
bnd
gs
sub
test
and
rolb
xchg
xor
insl
les
aaa
xchg
mov
xchg
rclb
rorb
inc
jo
jge
dec
fs
iret
clc
jmp
sub
pop
jae
xor
mov
mov
or
jg
pop
sbb
movsl
jns
or
bound
inc
roll
pop
out
or
outsl
add
add
mov
mov
out
lcall
nop
es
lcall
lods
loopne
mov
cld
in
mov
xchg
pop
stos
insl
stc
mov
pop
xchg
mov
daa
daa
repnz
adc
orl
jle
push
mov
jmp
add
loope
mov
sti
bound
nop
lds
dec
inc
adc
adc
pop
jle
add
dec
xor
out
movsb
mov
dec
xor
xor
dec
add
or
pop
test
or
pop
lods
faddl
scas
sub
jne
jns
mov
fld
and
cs
call
hlt
sub
aad
loop
lea
loopne
push
add
xor
fwait
mov
sbb
out
or
jnp
in
mov
inc
lods
xchg
mov
inc
sbb
or
mov
mov
ljmp
int3
out
dec
test
or
fdivrp
loopne
push
add
cwtl
nop
pusha
mov
outsl
popa
aam
push
clc
xor
xchg
mov
push
pop
jb
popa
pop
jne
rorl
add
repz
add
ja
daa
es
sub
add
mov
cmp
add
andb
push
cmpsl
cwtl
mov
clc
insl
xchg
test
add
sub
pop
into
push
mov
orb
add
pcmpeqb
mov
jnp
je
inc
push
pop
popa
sub
xchg
dec
arpl
ja
inc
dec
daa
and
or
xchg
add
lret
jp
push
add
daa
or
dec
in
pop
push
sbbb
and
inc
aas
cmpsb
daa
loopne
adc
or
insb
out
add
aad
add
xor
mov
rorl
xor
sti
je
imul
aam
ret
xchg
mov
arpl
lea
mov
sub
pop
adc
pop
inc
test
cmp
sbb
add
mov
lea
test
and
push
mov
shll
bound
movsb
sbb
mov
out
xchg
rclb
outsb
mov
push
pusha
xchg
popf
sbbb
adc
push
jns
push
or
pop
add
das
xor
jbe
cli
cwtl
adc
je
scas
repz
movsb
dec
fimull
pushl
cltd
aaa
imul
sub
shll
out
sahf
loopne
fs
add
and
inc
xlat
mov
dec
mov
sahf
add
loopne
enter
push
add
scas
faddl
sbb
push
out
outsb
xor
int
xor
popa
jae
add
mov
add
xor
xchg
in
or
sub
xor
cmp
dec
call
pop
fucompp
inc
fisubs
out
dec
stc
sahf
int3
cmp
nop
pusha
daa
jno
jle
push
mov
outsb
popa
xor
cmp
adc
sbb
mov
das
mov
repnz
mov
xchg
test
ror
imul
outsb
mov
cmp
add
sbb
inc
adc
shr
push
dec
jo
addr16
fimuls
jmp
dec
or
fwait
lahf
adcb
lock
movsb
mov
cwtl
aam
hlt
popf
dec
cmp
dec
lock
add
jae
movsl
out
dec
inc
and
sbbb
pop
cmp
add
pop
cmpsl
dec
popf
add
adc
mov
mov
dec
add
adc
sub
cli
pop
pop
ja
shlb
sub
lahf
adc
mov
sub
xor
add
cmpsl
adc
addl
xor
jle
iret
ss
or
mov
dec
popa
pop
xor
inc
shrl
dec
jo
adc
mov
add
mov
mov
xchg
fidivrl
adc
jno
xor
ja
jecxz
dec
cmpsl
inc
push
test
add
jmp
jg
clc
push
gs
inc
inc
jp
sub
or
ss
mov
jno
sub
xchg
adc
test
mov
sub
adc
fwait
daa
or
ja
lret
fldl
mov
pusha
mov
aam
push
rclb
das
jecxz
and
rcrb
pop
push
jecxz
lret
pushf
test
sub
pop
push
inc
inc
sub
adc
xor
in
fbld
push
push
je
dec
xchg
fcmovnbe
subb
loope
inc
lret
out
out
or
test
adc
fadds
or
fnsave
dec
icebp
push
popl
pop
call
cmp
mov
fstps
push
cli
mov
shlb
imul
adc
add
push
stc
pop
xchg
xchg
loope
cs
and
lret
push
movsb
adc
dec
push
mov
add
sub
xchg
in
nop
movsl
xor
cs
push
pop
ficoml
mov
mov
popa
jmp
cmc
xorl
insb
das
dec
hlt
and
cltd
inc
pop
cmp
sub
mov
shrb
xor
sbb
add
mov
testl
mov
push
loop
in
mov
sahf
outsl
inc
fisubs
negb
cltd
call
dec
pop
cld
push
subb
negl
rcr
leave
jl
fcompl
out
pop
pop
push
icebp
into
cmpsb
inc
mov
jmp
sub
cmc
aaa
add
cltd
sbb
cwtl
xor
lds
mov
lret
sbb
dec
cld
lock
mov
hlt
popa
mov
enter
mov
loopne
xchg
je
jae
sbb
je
repz
add
inc
cld
add
pop
outsb
sti
stc
and
or
movsl
jle
loopne
and
ja
repnz
dec
nop
and
xor
test
mov
xor
inc
xor
dec
into
lea
lods
push
dec
or
xor
fbld
pop
xchg
mov
mov
imul
and
pop
xchg
adc
std
xor
cld
popf
pop
pop
or
pop
loop
lahf
add
les
mov
xchg
hlt
iretw
js
es
mov
jg
fucomi
dec
mov
shll
or
add
or
ljmp
jnp
sbb
and
and
rorb
mov
cmp
xchg
fidivrl
and
jo
or
nop
sti
mov
adc
das
pop
or
das
mov
push
std
mov
and
sub
mov
xor
leave
or
rcrb
and
or
jmp
mov
pop
in
and
sbb
ss
jl
and
jmp
stos
leave
mov
fstpl
fidivs
ja
lock
mov
add
pop
lret
push
mov
cmp
scas
mov
adcl
decb
or
dec
call
cmpsl
mov
aam
std
mov
ljmp
stc
jecxz
popf
xchg
pop
out
mov
das
mov
cmpsb
dec
dec
sti
push
call
daa
sub
fimuls
lcall
cmpsl
xor
daa
int
rorl
xor
mov
fsubl
add
leave
xor
and
jo
or
push
mov
dec
les
pop
sub
pusha
push
sbb
push
imul
call
fstps
add
mov
mov
fcmovne
arpl
cld
repz
jae
or
rcrl
lock
clc
mov
aam
push
cmpb
jg
pop
xchg
sub
fstl
bound
dec
out
dec
add
sbb
daa
cld
rorl
push
pusha
mov
add
popa
pop
sub
jno
jbe
mov
push
sbbb
das
pop
mov
sbb
sub
popf
adc
pop
and
add
loope
pop
jo
dec
add
movl
cmp
add
popa
call
mov
jns
cmp
mov
inc
mov
imul
add
mov
add
push
sbb
mov
imul
leave
jg
cmp
pop
add
push
dec
and
movsl
out
xchg
setns
xor
inc
les
fnstsw
jbe
fsts
add
sub
pusha
mov
cmp
add
mov
mov
jp
lcall
cmp
xchg
stos
jbe
adc
push
cld
sarb
fstps
into
loopne
int3
sti
sub
and
ret
mov
movl
js
xlat
push
aaa
repz
outsb
and
hlt
les
push
dec
or
jg
gs
dec
incb
popf
xor
adc
rcll
push
or
add
mov
cld
mov
scas
xor
sbb
jle
add
inc
xor
pop
shlb
mov
pop
into
leave
pop
cwtl
add
and
adc
cs
out
fisubl
nop
fbld
ljmp
rorb
push
adc
push
jne
xchg
push
in
out
sub
or
sub
pop
loopne
xor
xor
mov
add
pusha
repz
pop
sbb
std
das
cmp
popa
cmpl
or
push
pop
push
add
loop
and
pushf
and
add
sub
jnp
add
adc
adc
test
cmpb
leave
clc
in
in
movsb
scas
inc
mov
push
xchg
daa
pop
and
and
adc
or
shr
xor
jbe
lds
icebp
sub
and
pop
add
in
pop
repnz
or
test
fstpt
xorb
call
nop
inc
popa
mov
cmp
testb
stos
mov
insl
push
dec
dec
xchg
mov
mov
add
ret
xchg
popf
scas
shl
push
push
idivb
push
scas
or
pop
jno
inc
or
push
add
add
testb
mov
into
or
in
xor
out
daa
mov
mov
pop
add
shl
cltd
adc
mov
movsl
jmp
sbbb
inc
sub
jecxz
loope
outsb
push
shl
sub
mov
das
mov
xchg
repz
jl
add
test
jnp
cmp
xchg
stos
or
int3
iret
mov
stos
mov
jle
or
jb
scas
call
sub
add
lods
pop
pop
cmc
jmp
arpl
cld
add
push
lret
push
cmc
mov
movsl
repnz
test
adc
or
mov
or
clc
jp
popl
inc
or
push
cld
aad
scas
jg
pop
mov
sbb
ret
repz
stos
xor
mov
adc
in
pop
mov
fmulp
or
or
pop
lret
daa
pop
sahf
push
push
mov
leave
add
pop
xlat
xchg
dec
data16
adc
add
and
pop
popf
xor
and
int3
jmp
das
push
push
add
repz
or
nop
cld
xchg
pop
das
adc
ds
push
adc
or
pop
or
dec
shrb
pop
pop
push
mov
pop
popa
mov
int
jae
sahf
rclb
test
adc
out
mov
xor
or
ss
adc
pop
mov
popf
aam
rolb
bound
add
cld
mov
pop
jbe
xchg
movsb
mov
mov
push
add
aas
in
mov
adcl
sbb
pop
pop
loop
outsb
mov
lcall
xchg
sbb
pop
xchg
dec
std
outsb
fildll
inc
int3
xor
icebp
cs
adc
cwtl
jp
pusha
mov
jmp
sub
mov
leave
and
jns
arpl
cwtl
out
daa
ja
mov
insl
jp
add
fadd
es
int
and
arpl
gs
add
sbb
lea
xchg
jmp
sub
and
or
scas
mov
cmp
int
popf
daa
popa
and
jg
jmp
mov
out
or
in
add
outsl
fwait
xchg
sbb
xor
cli
cwtl
pop
pop
lahf
jns
add
in
push
sbb
xchg
test
mov
cmp
test
rcrb
jae
or
adc
mov
inc
adc
adcb
push
cltd
sub
rol
pop
lahf
push
mov
pop
adc
imul
daa
outsl
aaa
movsl
pop
test
adc
rolb
sub
jne
inc
in
cmp
outsl
mov
movsl
gs
shl
fisubs
shlb
push
faddl
imul
cmp
cmc
cmovnp
cmp
pushf
adcb
sbb
xchg
sti
outsl
adc
test
jge
cmp
dec
dec
out
adc
sarb
push
push
cwtl
mov
cmpsb
fiaddl
cli
js
cmp
loop
lock
jns
sub
mov
push
sub
stc
mov
cmc
rorb
aas
adc
arpl
popf
pop
add
adc
sbb
aaa
pushf
xlat
lea
fists
push
mov
mov
dec
add
jnp
mov
inc
jp
or
sub
sti
pop
cmp
and
fwait
xchg
cwtl
pushf
outsl
ljmp
int
mov
adc
pop
fdivr
sbb
cld
add
jo
jno
pop
int
ds
loopne
sbb
popf
fidivl
cmpsb
push
add
sbb
add
and
push
add
mov
xor
push
adc
xorb
jns
cli
call
rolb
and
jg
dec
push
mov
inc
sub
cmp
cltd
xor
sbbb
mov
fadds
xor
mov
mov
cld
test
notl
add
dec
xchg
xchg
and
fistl
mov
popa
xor
jmp
xor
jmp
push
sub
jmp
push
xor
cltd
incl
and
xchg
fisttpl
push
sahf
dec
rorl
cmp
or
pop
out
fucomi
mov
js
jno
lahf
scas
add
xchg
dec
add
pusha
sub
jp
inc
push
xchg
mov
push
adc
fistl
in
je
mov
or
lods
int
push
out
out
test
mov
popf
xor
pusha
mov
addl
je
and
fiadds
mov
frstor
add
rclb
rcrb
push
movsl
adc
or
inc
xor
jb
mov
jns
adc
jg
cmp
push
xchg
adc
mov
pop
and
sub
push
roll
and
mov
stc
cmp
mov
mov
jp
stos
aam
inc
jne
mov
or
sub
adc
repz
mov
daa
enter
lods
loopne
dec
jne
adc
mov
testb
add
stos
and
cmp
in
add
xchg
shl
fnsave
or
jne
test
insb
sbb
imul
inc
or
loope
pop
inc
shll
lret
ja
repz
pop
and
mov
xorb
xchg
nop
mov
mov
in
inc
bound
js
add
andb
test
mov
xchg
or
jg
dec
push
icebp
inc
hlt
push
or
mov
adc
leave
arpl
loop
dec
out
loopne
sub
xchg
les
mov
out
rcrl
mov
shrl
mov
sub
cs
xchg
cmp
jae
add
hlt
cmp
fnstsw
push
sub
pop
push
sub
xchg
cmp
jno
mov
jbe
sub
cmpsl
pop
lods
repz
dec
inc
adc
testb
inc
imul
adc
and
cmp
repz
mov
sbb
xor
jg
jecxz
add
push
or
add
lret
dec
mov
bound
cmpsl
and
cmpsl
js
sarl
mov
cwtl
loopne
test
push
in
cmc
rorb
xchg
imul
call
xor
add
pop
sub
or
add
push
jo
jb
incb
xchg
push
sub
dec
add
push
bound
loope
mov
dec
std
mov
jno
movsl
loop
fnstsw
and
cmp
or
push
fwait
bound
dec
cmpsl
into
sbb
mov
mov
daa
filds
rcll
or
push
jg
mov
sbb
stc
jecxz
clc
cs
shl
and
loop
sbb
or
pusha
dec
dec
test
repz
fcompl
icebp
cs
xor
jns
push
sarl
cmpsb
mov
or
add
jbe
jmp
adc
sbb
sbb
cli
pusha
outsl
popf
arpl
add
sub
cmc
stos
jle
dec
xor
out
mov
jle
add
ljmp
mov
pmulhuw
in
mov
jo
pushf
sahf
mov
mov
push
das
inc
mov
push
or
dec
or
add
aaa
outsb
int
fwait
arpl
jl
rcll
adc
dec
ljmp
test
push
push
pop
stc
ja
iret
sarb
pop
sti
fistpll
out
sbb
pop
addr16
mov
imul
sbb
jb
mov
mov
mov
sbb
and
add
or
cmpsb
xchg
add
cmp
std
inc
add
add
movl
leave
adc
adc
and
out
mov
jecxz
js
push
cs
aas
or
push
pop
sub
inc
jo
xchg
jp
leave
icebp
xchg
sub
add
imul
lock
adc
inc
jp
pop
outsl
xchg
pop
add
push
mov
stc
fmuls
adc
sbb
adc
cmp
sbb
jnp
out
inc
cmp
jns
push
repz
push
pop
ret
push
or
idivb
iret
cmpsl
add
xchg
addb
cmp
outsb
pop
inc
and
fbstp
lods
jp
in
imul
jbe
and
insl
test
or
sahf
and
and
adc
jmp
sbbl
cmp
mov
mov
es
addr16
pop
sbb
or
jg
pop
push
and
mov
mov
inc
sub
fnstenv
sub
filds
mov
sbb
jecxz
add
mov
xchg
dec
add
push
xor
xor
outsl
out
sub
mov
aad
sbb
pop
lahf
mov
add
ds
in
inc
dec
scas
add
xchg
sbb
jo
inc
mov
pop
jbe
pusha
add
push
int
loopne
mov
add
int
cmp
and
sub
push
je
rcl
stos
and
inc
xchg
sbb
loop
iret
and
cmp
pop
pop
dec
scas
dec
jge
push
push
decl
push
jb
lea
xchg
loop
aas
addl
xlat
sbb
xchg
and
dec
push
shl
xchg
sbb
aad
and
gs
vmovntps
scas
das
adc
mov
imul
insb
xchg
push
sbb
daa
pop
pop
ret
pop
lahf
loope
push
cs
ljmp
adc
aam
jo
es
push
pusha
jg
lds
jb
xchg
inc
push
test
fisubl
or
popf
std
sub
add
jne
nop
enter
xchg
and
mov
cld
mov
xor
data16
ret
test
mov
loop
sub
stos
lds
lret
xor
mov
mov
mov
mov
ret
jo
push
push
add
lock
sub
loope
xor
add
int3
lock
jnp
jl
dec
cmp
fbld
cvtps2pi
fisubl
cmc
cmp
insb
sahf
mov
push
cmpsl
xchg
jo
repnz
inc
cmc
sub
lcall
and
inc
inc
adc
add
ret
xchg
or
jo
lea
out
jg
icebp
xor
mov
mov
popa
nop
lods
cmpsb
loop
inc
fildll
int3
dec
or
pop
mov
mov
xchg
pop
movsb
mov
mov
jbe
push
mov
sub
aam
mov
add
cmp
mov
sarb
mov
nop
and
xlat
inc
sarl
dec
bnd
add
sbbb
add
jbe
sbb
or
stos
ja
adc
pop
push
bound
or
adc
bnd
ljmp
mov
jp
shr
jnp
dec
out
aaa
xor
mov
jle
idivl
xor
push
out
les
sub
jmp
xor
je
pop
daa
das
and
ljmp
sub
les
xor
leave
jmp
pop
xorb
lds
daa
add
xchg
push
fwait
dec
nop
in
pop
or
loope
subl
pop
cmp
jg
mov
rorl
les
and
pop
xor
or
sarb
pusha
mov
jo
lock
mov
ret
cmpsl
gs
and
ret
add
push
jge
popf
es
pop
ret
or
popf
mov
pop
aas
add
mov
je
fs
add
adc
enter
jge
inc
inc
xor
aam
add
dec
mov
inc
adc
mov
adc
fldenv
ljmp
dec
pop
cltd
popa
outsb
cmpsb
movsb
mov
push
enter
jmp
adcb
push
aaa
les
jl
push
add
dec
imulb
icebp
add
dec
hlt
sbb
lds
jge
icebp
add
fdivr
or
jbe
push
push
add
pop
mov
xchg
ds
adc
mov
jno
ja
add
out
imul
sub
ss
fisubs
add
inc
dec
xor
add
idivb
lcall
jbe
or
fisttpll
popa
lock
clc
cmc
mov
enter
mov
sub
jmp
xor
dec
mov
int
sbb
or
push
xor
push
mov
insl
xchg
pop
pop
sub
xor
xor
sbb
push
rorl
add
cmpsl
xor
in
jl
or
sbb
sarl
popa
jge
outsl
or
jl
in
mov
sub
or
mov
mov
push
cld
and
xor
xor
in
sti
rcll
adcl
gs
scas
xor
jae
addb
les
ss
ljmp
inc
lods
pusha
push
add
pop
adc
cld
and
adc
and
xchg
sbb
mov
stos
pop
dec
xchg
in
pusha
fadd
fildl
hlt
sti
outsb
insb
add
lods
mov
pop
cmpsb
xchg
pop
les
imul
add
add
test
sub
inc
out
enter
pop
sbb
mov
loop
mov
dec
sbb
shll
xor
jns
das
popf
jecxz
dec
ret
loope
jns
movaps
push
daa
repz
gs
add
inc
ds
and
sub
ss
and
imul
sti
shrl
ret
push
mov
dec
push
std
push
xchg
je
scas
int3
dec
push
add
jno
inc
mov
xorb
in
pop
outsb
push
lock
push
mov
mov
xchg
in
and
cmp
inc
or
push
nop
jg
loope
mov
pop
std
js
pop
lds
and
push
push
shll
adc
adc
add
out
das
adc
push
mov
fadds
cs
push
hlt
add
xchg
mov
mov
inc
push
push
loopne
aam
shll
jb
pop
lea
stc
xor
mov
lcall
movsb
and
ljmp
test
cmpsb
jecxz
mov
pop
mov
mov
gs
stos
add
cmc
or
pop
cmc
cmp
dec
and
sbb
call
roll
jp
leave
and
jmp
push
push
sbb
jmp
das
mov
cmp
and
xacquire
outsb
lock
nop
and
cmp
das
lods
sbb
cmc
stos
inc
mov
sub
adc
adc
mov
popf
mov
xor
dec
les
cmp
add
mov
jge
push
loopne
jb
xchg
scas
or
lret
ror
dec
pusha
int3
movl
or
test
mov
mov
addl
insl
insb
sbb
cltd
xor
icebp
jmp
outsb
adcb
lea
call
add
bound
fdivl
or
nop
jno
lods
mov
inc
adc
lds
in
stos
mov
rolb
adc
insb
cmp
orl
xchg
lret
lea
adc
pop
and
pop
mov
stos
shll
and
scas
pop
gs
icebp
outsl
pop
pop
push
add
outsb
sahf
fstpt
add
cmpb
mov
sbb
int
sub
inc
test
loope
aad
adc
jnp
std
cltd
add
js
mov
sti
mov
popa
out
sbb
daa
mov
add
stos
jecxz
xchg
jne
cltd
shr
rol
insl
and
test
dec
test
stos
adc
pusha
mov
pop
cmpsl
loope
or
sbb
dec
jno
add
pop
scas
mov
mov
mov
mov
pop
push
or
outsl
or
scas
stos
daa
sbb
and
push
add
jp
and
jne
xchg
std
or
incb
xchg
mov
stc
sarb
or
ror
andl
lea
xor
lock
fmull
push
mov
xchg
test
mov
add
movsb
lods
popa
mov
es
lea
daa
movsl
xor
lock
sbb
xor
mov
jno
adc
sub
jbe
int3
xor
mov
nop
mov
mov
sub
test
sub
xchg
adc
dec
xor
add
js
xchg
fstpt
add
jns
movsb
xor
dec
push
or
aaa
stos
adc
sub
leave
sbb
jmp
cli
pop
mov
outsb
adc
sbb
pop
stos
bound
out
add
fs
pmuludq
sub
repnz
addl
mov
mov
mov
lret
stc
movsl
jne
test
aas
std
je
jmp
pop
dec
aaa
pop
cmp
xchg
mov
add
outsl
mov
mov
jle
sbb
int3
mov
stos
rcll
das
mov
cmp
and
sbb
xchg
inc
adc
into
stos
add
outsb
mov
mov
xor
lods
lahf
push
stos
hlt
or
cmpsb
mov
sbb
fbld
ds
inc
movsb
jge
fldt
sub
faddl
test
pop
cmp
push
mov
push
add
add
out
sub
mov
mov
nop
xchg
cwtl
xor
fcomps
rol
fisubrs
into
jmp
inc
rclb
fiadds
loope
sbb
xor
out
in
hlt
das
subb
inc
jg
shrl
dec
adc
mov
xor
jb
push
adc
mov
sbb
sbbb
sub
out
lock
jo
add
or
repz
sub
repz
inc
or
xchg
out
ret
xchg
mov
test
push
std
loopne
loop
or
jbe
push
jle
lods
xor
dec
stc
insl
addb
xchg
rorl
adc
outsl
lods
add
aas
call
mov
pop
cli
stos
push
sub
mov
es
loopne
xor
test
mov
popf
imulb
pop
call
and
cmc
jle
cld
cmc
mov
enter
mov
ficompl
int
scas
adc
int3
imul
add
and
fiadds
mov
mov
add
jnp
iret
pop
cmp
and
in
lds
cli
mov
or
jno
ret
or
xchg
mov
jg
push
sbb
mov
xchg
jmp
sbbb
jnp
or
inc
sbb
sbbl
mov
pop
ficoms
cli
mov
push
into
ljmp
dec
jno
cs
lcall
inc
cmp
mov
pop
ljmp
mov
mov
xchg
sbb
out
jp
movb
adc
dec
dec
inc
pop
mov
sbb
adcb
repnz
out
push
inc
out
and
js
popa
inc
mov
popa
sub
jbe
inc
popl
adc
sub
movsl
leave
push
sti
adc
add
sti
gs
stc
sbb
pop
rorl
in
cmp
add
add
mov
mov
add
shrl
adcl
shlb
inc
out
add
push
std
rol
and
out
ja
cmp
fcomi
and
popf
mov
or
std
fs
mov
movsb
push
call
push
divl
stos
xor
dec
sub
aam
xchg
lods
mov
cld
sub
outsl
and
ficompl
xor
lods
lret
rcl
lahf
xor
int3
and
xchg
mov
pop
sbb
aaa
fisubrs
es
adc
movsb
jmp
pop
push
adc
popf
stc
in
dec
insl
sbb
shlb
filds
mov
add
sub
xor
pop
pop
push
add
mov
xor
pop
or
cld
int
rcrb
xlat
add
int3
dec
push
loopew
cmp
inc
test
inc
and
test
clc
jl
popa
popf
sub
sbb
ret
scas
in
into
ret
faddp
inc
fildl
push
jg
addr16
jle
dec
or
dec
das
and
push
push
cmp
adc
test
stc
jp
mov
lret
sti
xchg
or
mov
mov
pusha
test
and
lods
or
mov
dec
bound
fldcw
xor
cmpsl
test
popf
and
lcall
sub
pusha
sbb
loopne
cmp
cmpsb
xchg
adc
pop
js
cmp
adc
es
mov
mov
pop
jno
sub
push
mov
xor
mov
xchg
and
mov
fsubrl
mov
cmp
dec
ds
pop
shrb
mov
dec
pop
mov
mov
xchg
aam
imul
push
cli
add
jle
inc
ja
inc
les
arpl
or
dec
push
and
sbb
fisubrl
fisubl
popf
sbb
xchg
cmp
popa
add
in
jp
pusha
push
mov
jl
popf
das
pop
mov
adc
xchg
in
add
daa
xchg
push
gs
dec
rorb
int
add
cs
leave
out
mov
mov
fsub
xor
cmp
les
pusha
pop
fs
lock
mov
mov
cmc
xchg
adc
pop
lcall
xor
pop
out
or
je
mov
add
jb
inc
das
fisttpl
push
pop
and
pop
or
jne
sub
jecxz
adc
push
jg
imul
mov
add
pop
js
mov
pop
cmp
popf
xchg
call
mov
push
adc
shrl
daa
dec
mov
mov
push
xchg
add
sbb
fists
out
fmul
mov
imul
movsb
lea
mov
gs
or
loop
shr
and
stos
push
mov
rcrl
sbb
je
add
loop
adc
sbbb
push
add
into
movsb
pushf
lea
repnz
std
out
mov
xchg
lcall
bound
cmc
in
adc
cmpl
popf
xchg
and
and
leave
jge
or
or
mov
pop
sub
mov
shrb
aaa
mov
dec
adc
mov
add
xchg
fidivl
jbe
lahf
jo
xchg
fmuls
jbe
adc
dec
es
mov
adc
jnp
clc
movsb
and
push
pushf
leave
pop
aam
loop
jp
or
lods
daa
cmp
dec
pop
dec
mov
sbb
xchg
andb
inc
negl
out
dec
out
mov
adc
add
jecxz
les
lds
add
popa
sbbl
xchg
jo
stos
xor
out
push
hlt
daa
sub
mov
pop
dec
xchg
out
cmpsb
test
mov
or
mulb
add
and
lods
pushf
mov
sbb
jns
sbb
syscall
adc
and
dec
xchg
mov
subb
pop
daa
popa
or
imul
sbb
sti
mov
scas
movsl
pusha
and
loop
je
adcb
push
pop
dec
mov
sub
mov
push
xchg
pushf
andb
jb
out
sub
imul
inc
mov
sub
cmp
mov
mov
sub
add
shlb
push
notb
add
ljmp
or
xchg
sub
das
jl
ret
mov
inc
cs
adc
cmpsl
pop
jg
stos
xchg
inc
add
pop
out
push
cwtl
fdivr
call
jb
push
imul
inc
fucom
loope
cmp
add
sbb
pop
jae
xchg
push
xchg
clc
mov
dec
dec
sub
pop
cli
ss
out
je
mov
xlat
or
push
insl
in
adc
push
cmp
mov
push
push
push
das
mov
xchg
movsb
push
pop
popa
inc
mov
cmpps
sarl
mov
add
mov
frstor
jmp
jmp
cmp
leave
idivb
or
push
mov
pop
stc
cs
arpl
cmp
mov
dec
rclb
xchg
mov
fstpl
movsl
dec
testl
fwait
pop
sbb
loop
or
sub
push
gs
pop
dec
jae
jno
cs
sub
sub
cs
sub
cld
roll
add
mov
adc
cmp
cld
fwait
mov
popf
ja
and
fwait
adc
in
int
push
dec
sbb
dec
subb
fisubs
jae
dec
icebp
push
mov
mov
in
pop
xchg
and
jnp
jo
rorb
jne
xor
push
or
jae
jo
xchg
in
mov
xchg
les
inc
sbb
ds
addb
pushf
jb
pop
daa
popa
push
adc
popf
in
fnstenv
and
mov
mov
icebp
mov
je
imul
lock
sbb
mov
mov
mov
dec
add
mov
lret
call
cmpsb
js
cmp
lods
shl
andb
mov
pop
dec
loopne
popa
shll
push
adc
andb
xchg
sbb
pop
add
xor
ja
out
adc
jnp
mov
jg
int3
xor
add
les
lret
insb
pop
imul
mov
inc
push
inc
pop
shlb
mov
jmp
dec
test
pop
outsl
data16
jbe
pop
xor
std
mov
hlt
and
pusha
pop
add
cmp
or
pop
add
inc
sbb
pop
lds
movsl
les
cli
adc
mov
mov
insb
cmpsb
adc
lret
fdivrs
inc
adc
mov
and
popf
push
lahf
sarl
sti
xor
push
lods
sbb
mov
add
mov
mov
mov
lcall
mov
add
out
addl
pop
in
mov
outsb
sub
mov
cs
pop
daa
fldl
add
nop
mov
rorl
addb
mov
js
fisubrs
mov
js
push
xor
enter
cwtl
filds
sbb
add
adc
mov
ret
xor
push
lea
pop
mov
cs
push
jno
fwait
pop
push
bswap
out
sbb
mov
jae
and
xchg
jg
pushf
pop
movsb
popa
xor
das
and
pop
popf
leave
fsubl
sub
push
add
lret
mov
inc
and
xor
out
adc
adc
sub
mov
lock
sbb
fdivrl
add
popf
cs
lret
jl
fmuls
mov
mov
sub
loope
mov
add
or
inc
mov
mov
push
cld
cmp
icebp
repnz
sahf
dec
in
inc
addl
test
and
rorb
adc
mov
jge
bound
fistpll
lcall
xor
clc
xchg
rorl
addr16
pop
aam
jp
into
add
mov
pop
push
mov
out
aas
outsb
in
add
xor
xor
ficompl
outsb
out
add
cmp
xor
xchg
mov
lods
mov
ss
dec
lea
mov
pop
fistl
sub
iret
dec
test
fcmovnb
lock
mov
mov
testb
cmp
popa
inc
jae
jge
pop
cltd
push
test
fstpt
aad
fsubs
mov
and
xlat
ljmp
mov
lret
lds
mov
jecxz
or
sub
cmp
dec
hlt
sbb
push
and
mov
lock
in
fidivrs
adc
test
int
test
mov
add
cmp
jl
and
dec
pop
clc
ss
loop
sarl
jecxz
pop
fistps
push
jns
cmc
add
arpl
push
int3
sub
cli
pusha
test
loope
sub
xor
xor
ret
or
mov
adc
mov
nop
hlt
cld
push
icebp
inc
add
in
jl
jge
cmp
jnp
add
dec
les
sub
adc
test
pop
xchg
jg
xchg
popf
inc
push
xor
add
inc
sahf
jb
mov
data16
pop
loopne
test
test
leave
subb
push
xchg
pop
lods
inc
mov
arpl
add
mov
mov
inc
sbb
or
lds
test
into
lods
jmp
lock
pop
add
xchg
mov
fsqrt
xlat
sbb
jne
insl
popa
cmp
and
mov
mov
or
pushl
sbb
pop
fnstcw
xor
daa
fmulp
lret
jae
push
pop
loope
push
xorb
out
cmpsb
xchg
dec
cs
add
shlb
mov
cmovbe
imul
mov
xchg
mov
xor
push
loope
out
sbb
adc
and
or
inc
fcoms
lock
xor
loope
inc
or
add
rcrl
add
pop
xor
int
rcll
mov
inc
add
jae
and
xchg
ror
sbb
outsb
mov
push
rorl
and
xchg
scas
jmp
repz
rclb
insl
or
mov
out
pop
and
daa
loope
add
gs
push
mov
pop
ljmp
xlat
mov
aad
push
xorb
cmp
repnz
das
add
shll
dec
cmp
mov
bound
ja
dec
movsb
jmp
ret
or
sahf
add
in
mov
pop
sub
sbb
dec
push
sub
jo
xchg
rclw
cld
xchg
stc
out
arpl
add
out
popa
xor
loope
sub
mov
mov
push
dec
mov
sbb
jne
sub
adc
xchg
fmull
xor
mov
mov
ja
ret
pop
cmp
enter
dec
sbb
pop
mov
fimuls
dec
or
adc
pop
daa
sbb
cmp
mov
add
sub
push
push
out
mov
stos
pop
insl
inc
pop
jae
pop
mov
enter
lea
xor
add
dec
push
jge
testl
ja
sub
pop
pusha
mov
loop
or
xchg
loope
cmc
cmp
jae
cs
xchg
push
dec
cs
pop
pop
lods
lock
leave
mov
or
xchg
add
ss
movsb
out
and
insb
loop
or
xchg
dec
add
in
mov
push
mov
add
dec
lods
cltd
or
mov
add
stc
jbe
jmp
pop
adc
jle
jmp
mov
xchg
inc
mov
push
dec
add
insl
jecxz
pop
add
ja
xor
push
mov
int3
and
int
les
adc
inc
dec
add
pop
rclb
lods
nop
pop
repz
outsb
popa
pop
cmp
popa
call
jle
or
divl
lods
jle
mov
add
mov
and
repz
lret
mov
or
jne
and
mov
add
push
adc
fisubrs
loope
and
jae
pop
out
pusha
jecxz
pop
dec
jb
add
push
cwtl
das
popa
clc
xor
xor
fcom
xchg
nop
aam
aam
push
dec
sub
push
in
movsb
dec
pop
mov
sbb
dec
cs
push
sub
adc
xlat
test
lods
dec
ljmp
xchg
aaa
or
sbb
mov
mov
and
daa
cmc
negl
notl
js
out
cmpsb
jno
inc
jne
inc
rcll
inc
push
cmp
inc
dec
je
or
cmp
xchg
adc
popa
icebp
incl
and
in
fcmovb
pop
adcl
movsb
push
add
popa
subb
xor
add
sbb
inc
add
dec
or
inc
mov
adc
inc
inc
pmaddwd
push
add
sbb
pop
pop
mov
aaa
popa
xchg
add
movsl
daa
add
mov
jle
push
xchg
pop
and
push
aad
repz
lret
push
pusha
jge
rclb
push
adc
mov
fidivrs
xchg
pop
fcoms
loope
dec
popa
mov
jb
mov
mov
adc
shll
add
adc
popa
nop
sub
sub
clc
mov
adc
scas
sub
popf
aad
and
inc
ds
aaa
mov
push
imul
popa
mov
add
mov
or
xchg
pop
dec
jp
stc
rorl
adc
popa
aam
lcall
and
fiaddl
mov
inc
popf
in
inc
daa
push
cli
xorb
lret
xchg
in
pop
inc
dec
repz
orb
and
imul
add
adc
stos
in
insl
and
mov
sub
adc
sti
lret
sbb
jns
jo
test
jecxz
daa
nop
and
mov
inc
pushf
pop
sub
insl
arpl
push
mov
incb
orl
data16
and
lods
imul
cli
sub
sub
mov
jp
clc
mov
aam
jae
pop
cld
movsb
shrb
fsts
aam
jns
mov
push
mov
subb
not
adc
adc
jp
push
and
sti
inc
pop
mov
xor
xlat
pusha
or
push
xchg
xchg
mov
push
mov
pusha
push
lahf
and
movl
pop
jno
ret
mov
cltd
mov
mov
mov
mov
mov
fistpl
das
and
lds
popa
or
xchg
push
and
cvtdq2ps
es
or
pusha
mov
out
and
test
cmp
mov
pop
sub
sbb
pop
shrl
jmp
dec
or
or
push
mov
pop
sub
sub
and
xchg
xchg
and
test
testb
mov
ds
dec
adc
rcrb
mov
xchg
lcall
jge
inc
xchg
inc
mov
enter
sbb
sbb
fcmovb
sti
mov
mov
in
lods
and
push
xchg
mov
cs
loope
das
in
sarl
push
push
sub
dec
xor
mov
stc
jle
ds
mov
push
les
or
popf
mov
cld
ret
and
rol
inc
cs
cmpl
je
jmp
push
movsl
mov
or
int
inc
sbb
lea
icebp
fcoms
cmp
loope
sub
or
test
jae
mov
mov
push
arpl
cmp
es
sbb
push
mov
sub
adc
pop
cli
ja
fdivr
adc
aam
lods
call
pop
aaa
scas
sub
xlat
add
loope
fsub
ja
add
lea
addr16
mov
sub
add
fisttpl
jmp
shrl
jl
sub
sbb
out
repz
sarb
mov
push
lods
cs
cmpsb
inc
add
sbb
dec
mov
jecxz
or
add
mov
push
cmpsb
scas
xchg
dec
loope
jp
mov
sbb
lcall
xlat
mov
mov
xor
dec
mov
sar
mov
or
or
out
daa
in
xchg
or
cmp
inc
sbb
outsb
pushf
mov
or
int
leave
scas
pushf
cmp
push
es
scas
gs
je
push
pop
mov
test
out
mov
xchg
cmp
filds
outsl
xor
test
scas
mov
scas
and
fnstcw
sub
leave
lds
sbb
in
sti
cmpsl
adc
xor
fcmovne
add
sbb
add
or
mov
add
test
add
mov
stos
enter
fisttpll
lods
loopne
add
aad
pop
xlat
jmp
add
js
push
inc
test
daa
push
pop
mov
pop
repnz
push
or
add
adc
stc
xchg
or
xchg
add
fildl
shlb
xor
lock
rolb
adc
fsts
popf
aam
fmull
arpl
sub
adcb
pop
movsl
pop
fidivl
push
rorl
mov
mov
lea
jg
xor
sub
loop
cld
xor
dec
into
cmc
adc
mov
or
cmpsl
ljmp
add
pop
push
sub
ja
cmp
insl
shr
cmp
sbb
lods
hlt
xchg
enter
push
mov
adc
cmp
cmc
xor
das
pusha
and
lcall
fistpl
mov
pop
addl
imul
popa
jp
movsl
call
aaa
das
push
push
stc
pop
imul
lahf
aaa
sbb
jmp
iret
ljmp
sbb
push
xlat
lea
add
pop
push
addr16
inc
and
add
daa
add
mov
jl
flds
jge
movsb
mov
scas
stos
mov
cltd
xlat
insb
aam
mov
ret
popf
outsl
mov
pop
lea
repnz
mov
pop
andl
lea
std
lcall
lods
push
sbb
stos
add
popf
aad
aaa
xchg
movsb
xor
mov
xchg
dec
gs
dec
and
mov
xchg
xchg
dec
push
push
mov
xchg
and
and
mov
add
addb
pusha
aaa
lds
pop
mov
xor
cmc
in
jo
xchg
jae
sar
pop
add
repz
pop
sub
movswl
adc
lods
icebp
mov
sub
mov
mov
idivb
mov
adc
loopne
scas
and
cmpsl
test
dec
add
into
call
xchg
imul
dec
push
and
arpl
add
mov
pop
add
mov
pop
inc
and
dec
xor
add
pop
or
popf
outsl
pop
pusha
pop
mov
movsb
add
imul
icebp
jge
adc
idivl
pop
mov
push
add
test
out
fisttpll
and
push
jne
cmp
add
out
sbb
int3
popa
push
push
xlat
cld
loopne
scas
sub
sub
mov
xor
xchg
mov
out
xchg
or
inc
fistpll
mov
mov
xor
add
popa
aam
adc
sub
xchg
cmp
lret
fisttpll
sahf
or
jl
inc
sbb
sti
push
pop
hlt
icebp
xlat
call
cmpl
repz
pop
sub
shrl
mov
enter
or
xor
dec
dec
imul
std
cs
xor
jbe
add
mov
dec
clc
cmp
movsb
test
add
or
mov
jge
scas
das
icebp
add
mov
cmp
add
sub
pop
loope
rclb
dec
add
xchg
or
pop
jnp
sub
and
add
cmc
jmp
mov
mov
mov
repnz
or
addr16
loope
jp
decl
adcl
mov
xchg
add
dec
sbb
rol
sub
jg
cmp
push
push
xchg
jnp
fsubrs
jge
les
divl
js
in
xchg
sbbl
dec
inc
loop
add
pop
or
ja
add
xor
iret
cmpsb
or
je
mov
sub
mov
and
fs
in
dec
fdivrs
das
popf
xchg
dec
cli
cli
std
out
or
inc
cmc
jmp
outsb
enter
out
or
in
cmc
fstl
xor
idiv
cmp
adc
sub
xchg
jecxz
inc
push
mov
and
add
into
jo
and
push
shrl
ss
mov
pop
inc
out
dec
gs
cli
xor
pop
add
movsl
aad
add
push
not
pop
andb
xchg
shrl
pop
sahf
lods
lret
cmpb
sbbl
sbb
jbe
adcb
and
sub
or
xor
and
call
stos
mov
adc
dec
imul
dec
out
and
test
and
mov
outsb
add
cmp
jmp
cltd
adcb
pop
insl
add
push
mov
xor
mov
mov
outsl
ss
nopl
call
sub
and
orl
and
jae
xor
mov
mov
push
inc
cltd
add
add
daa
ljmp
and
out
fstpt
das
dec
scas
dec
test
lods
mov
jge
sbb
pop
test
outsl
sbb
mov
pop
shll
mov
xchg
daa
aam
mov
dec
and
xlat
stos
xchg
jae
pop
mov
pop
dec
xchg
les
clc
gs
loope
sub
adc
adc
sub
mov
aaa
inc
or
cwtl
xor
add
push
std
adc
push
mov
add
sub
sbb
add
scas
adc
adcl
adc
mov
dec
inc
mov
sbb
xor
sbb
enter
lret
mov
jmp
test
cmp
xchg
jmp
pavgb
add
push
aaa
xor
add
jge
loop
subl
and
lock
mov
in
aaa
or
or
jmp
mov
pusha
add
add
or
jbe
dec
icebp
lea
fists
test
jbe
mov
ret
add
dec
fistpl
andl
add
out
rorl
insl
jmp
adc
iret
jecxz
sbb
dec
adc
add
ret
push
xchg
and
jbe
imul
xor
es
cmp
test
popf
cltd
sbb
xor
jecxz
and
inc
and
mov
sub
scas
xchg
cmp
adcb
add
mov
ss
test
js
cli
add
xchg
gs
mov
mov
fdivrp
leave
sbb
inc
push
rcr
mov
jmp
and
pop
mov
add
mov
pop
sub
add
xchg
out
inc
ja
sub
ror
inc
shlb
push
pop
shrb
add
xchg
xchg
outsb
insl
mov
inc
fistpll
sbb
mov
fsubs
dec
pop
enter
jecxz
lret
mov
test
add
pop
xchg
sbb
jne
cmc
call
add
jmp
inc
adc
dec
sub
adc
mov
jno
movsb
cmp
cld
mov
popa
dec
lahf
cld
pop
adc
lahf
adc
add
mov
cmp
pop
or
popf
xchg
flds
popf
aam
lods
fdivrl
mov
shrb
lret
out
and
outsl
loopne
repz
add
popf
mov
and
int
pop
sbb
mov
mov
aas
add
add
popf
xchg
iret
jg
mov
hlt
mov
aaa
mov
popf
jae
add
roll
xor
mov
mov
xor
frndint
aaa
adc
cli
add
jnp
and
je
mov
jp
shrl
add
xor
in
add
cltd
in
jmp
adc
fstpt
cmp
nop
lock
adc
adc
pop
test
imul
xchg
jae
aam
mov
and
leave
add
aas
and
lods
adc
sahf
mov
jp
fldl
stc
adc
cmpsb
ss
mov
sub
fs
movsb
leave
pop
fnstsw
xchg
lea
sub
mov
push
fwait
pop
pop
or
and
xor
hlt
dec
xor
and
adc
andl
xchg
add
dec
stos
rcrb
dec
dec
scas
cmp
idivl
xchg
loop
loope
cs
in
in
push
xchg
sbb
mov
mov
pusha
push
pop
jmp
popa
jecxz
sub
roll
cmp
ss
sahf
ja
push
jecxz
ds
dec
xchg
repnz
add
mov
sbb
dec
mov
mov
jno
icebp
add
or
repnz
popf
xchg
dec
inc
jmp
fidivl
pop
stc
mov
es
sub
movsl
cli
mov
sub
adc
mov
dec
hlt
inc
jg
lahf
arpl
pop
xlat
hlt
outsb
push
add
xor
in
cmp
mov
sub
js
sti
dec
push
push
push
fnstenv
mov
stc
cmp
add
ja
inc
aas
insb
adc
cmp
hlt
faddl
jl
xor
hlt
xchg
mov
sbb
and
aas
jmp
adcb
or
adc
pushf
js
inc
das
mov
or
imul
dec
aaa
cwtl
lock
iret
cld
faddl
sbb
adc
and
outsl
in
out
add
cmp
pop
add
xchg
rorb
data16
cmp
jmp
mov
nop
repz
outsb
jb
lock
das
or
jle
pop
mov
shrb
fmull
add
sti
je
or
mov
popa
jne
addl
fisubrs
xchg
fsubs
pop
mov
push
cld
enter
out
ds
scas
jno
add
add
mov
mov
popa
cld
xor
add
sub
mov
add
or
scas
popa
movsb
or
dec
test
mov
clc
and
adc
fdivrs
sbb
popf
in
daa
sub
fstl
roll
mov
nop
pop
hlt
repnz
or
test
jle
sub
stos
jl
xlat
flds
xchg
mov
fwait
add
test
scas
add
fdivrl
fs
rol
cltd
dec
push
addr16
out
adc
push
test
mov
push
jge
sahf
mov
xchg
mov
mov
push
add
mov
mov
lahf
mov
mov
pushf
sbb
ret
fs
add
mov
lock
divl
cwtl
pop
cmc
mov
mov
je
push
or
xchg
shll
cmp
xchg
jmp
loop
outsb
scas
outsl
push
daa
push
xchg
inc
push
mov
jmp
jl
jae
imul
pop
mov
adc
idivb
fisubrs
aaa
std
xor
mov
leave
cmp
lret
aaa
loop
mov
imul
lret
andb
icebp
and
dec
jo
jae
and
cmp
movsl
ja
xchg
and
mov
pop
xor
cmc
cs
in
lahf
subb
add
mov
add
xchg
mov
out
out
outsl
cld
pusha
or
rcrb
mov
scas
nop
sti
push
mov
dec
pop
xor
mov
xor
mov
clc
sbb
xchg
xchg
push
inc
scas
lds
add
xor
push
push
pop
jnp
xor
xor
mov
mov
push
in
xchg
sub
xchg
push
lret
xchg
and
in
fidivrs
test
add
sahf
fisubs
fcoms
mov
mov
add
sbb
fdivrs
das
outsl
fmull
jne
stos
push
add
sub
daa
xchg
aaa
inc
test
jmp
xchg
div
jge
inc
jb
lods
scas
push
stos
les
imul
out
xor
cmpsb
sbb
lea
sub
push
lds
pop
movsl
adc
cmp
in
stc
pop
mov
pop
dec
mov
adc
fmul
and
add
add
out
cmp
pop
lods
push
jae
cmpsl
or
in
push
into
loop
out
push
daa
subb
adc
int3
out
fwait
push
les
dec
jl
addl
cmp
cmp
or
sarl
ljmp
lock
sub
pop
std
jo
jbe
fcmovnbe
and
jmp
mov
jo
ja
cmpsb
pop
cmp
xlat
pop
out
push
xchg
pusha
cld
shlb
sbb
or
dec
add
sahf
cltd
inc
add
cli
push
mov
mov
aad
stos
daa
aad
test
aas
cmpsl
nop
mov
push
mov
mov
ja
rorl
mov
push
bswap
sbb
insl
test
lock
lcall
adc
xlat
and
fildl
mov
dec
adc
adc
inc
add
or
lea
cmpl
inc
movsl
push
xor
lahf
aas
jecxz
aad
lods
lcall
add
jmp
test
int3
adc
sub
mov
or
fidivrs
mov
je
addr16
lock
das
xor
jle
mov
mov
mov
movsb
test
dec
fisttps
mov
inc
pop
das
push
pop
into
sub
ret
add
push
and
cwtl
out
add
mov
popf
andl
xchg
and
insl
sbb
dec
adc
mov
cmp
addl
dec
std
pop
cmp
push
dec
fbld
xlat
mov
je
inc
or
shll
je
dec
add
pop
out
loop
adc
mov
cli
cltd
mov
xor
push
stos
mov
pop
out
and
mov
test
mov
push
jg
adc
push
stc
dec
add
adc
mov
inc
das
lods
pop
xchg
push
es
sbb
mov
dec
and
lea
mov
push
pop
and
popa
dec
rcrb
adc
xlat
mov
xchg
xchg
fsubrl
pop
in
pushaw
push
add
popa
mov
push
test
into
cmpsb
daa
loopne
dec
movsl
lahf
jbe
imul
push
pop
cmp
call
lret
xor
adc
add
int
loope
jmp
jle
adc
addl
pop
push
push
pop
mov
clc
fisubs
cmpsl
call
sbb
mov
mov
sahf
jno
jecxz
lods
sets
dec
xchg
jmp
lea
addb
jbe
and
lret
mov
xchg
test
adc
jp
mov
sbb
or
mov
xchg
aad
jg
xchg
pop
jmp
les
push
mov
jge
adc
scas
fisttpl
inc
icebp
in
mov
stos
mov
cmp
or
rorl
aad
in
jns
inc
ljmp
jns
mov
inc
xlat
out
mov
daa
add
jno
sub
insl
add
or
outsl
mov
and
mov
or
adc
mov
or
or
in
fchs
jae
jg
or
add
jns
lods
adc
add
xchg
outsb
pop
insb
bound
scas
dec
or
das
nop
xlat
enter
jecxz
add
xchg
repz
mov
mov
xchg
adc
out
loop
xorb
sub
add
movsb
adc
mov
xor
cmc
push
fwait
out
sarb
jp
pop
sbb
cli
or
and
push
push
mov
divl
pop
call
add
mov
in
movsb
enter
mov
and
push
mov
xchg
sbb
push
lret
sub
rcrl
lds
ljmp
fwait
pop
mov
and
jnp
cmp
adc
pop
loope
inc
fwait
sti
lahf
push
addl
pop
dec
rorb
jno
imulb
pop
dec
int
das
adc
jnp
add
push
sbb
push
pop
mov
in
bnd
lcall
into
mov
mov
vmovntdq
xchg
fnsave
jecxz
mov
jmp
inc
loop
mulb
add
aad
inc
push
lds
add
sbb
repnz
and
pop
xor
and
outsl
pop
pusha
adc
loop
loop
xlat
push
cmp
movsb
inc
sub
sub
push
fidivrs
cmp
ret
pop
mov
dec
inc
xchg
sbb
shlb
cmc
repz
cld
insb
gs
add
xchg
call
aad
inc
push
push
movsl
push
shlb
pop
push
inc
inc
pop
nop
pop
mov
sbb
sub
add
mov
stc
pop
popa
imul
iret
sub
lret
pusha
mov
out
mov
xor
sub
push
into
popa
xchg
rcrl
mov
adc
cltd
jb
outsb
xlat
les
or
sbbb
mov
mov
test
mov
pop
push
cmp
shlb
adc
loop
xchg
in
roll
js
test
sbb
pop
add
popa
subb
arpl
inc
and
sub
scas
pusha
jmp
adc
add
je
mov
and
lods
repnz
and
dec
pusha
jb
push
in
and
loopne
mov
or
and
sbb
imul
sub
pusha
popa
lds
mov
orb
push
pop
push
out
int
fildll
lret
cs
push
fisubrs
pusha
and
jp
adc
mov
outsb
and
sbb
and
stc
mov
xchg
dec
mov
sub
test
dec
loopne
aaa
and
in
and
std
mov
aam
call
loope
cmp
sbb
mov
lcall
push
push
and
scas
pop
dec
popf
sti
push
cmp
add
xchg
xor
pop
sub
add
mov
and
dec
dec
in
clc
ljmp
jmp
adc
or
adc
add
cwtl
sub
in
sub
cmpsl
mov
or
inc
lods
mov
fs
repnz
subb
jne
punpcklbw
lea
imul
mov
int
pusha
and
int3
aad
cld
jmp
aaa
addr16
loope
scas
and
gs
or
out
aam
mov
int
popf
jl
dec
repnz
std
push
push
pop
xor
mov
sbb
mov
add
push
stc
pop
adc
push
sti
clc
mov
add
or
xchg
cld
xchg
add
or
mov
mov
call
loopne
std
xor
add
dec
inc
pop
xchg
sub
xchg
das
cld
jmp
jbe
inc
test
clc
xchg
fcomp
mov
popf
jns
repnz
xor
mov
movsl
int3
popa
jb
cltd
scas
nop
mov
pop
jns
cmp
filds
xchg
push
cmp
jmp
and
mov
shrb
aad
adc
mull
mov
jno
xor
aad
xchg
cmpsl
xchg
add
fadd
in
iret
push
addr16
clc
adc
lds
dec
repnz
aam
mov
dec
std
mov
out
out
pop
sbb
sub
xor
add
pop
jmp
mov
and
movsl
mov
lret
cmpsl
inc
inc
sbb
sbb
js
mov
ret
fdivl
andb
and
mov
or
cwtl
fdivrl
das
mov
push
sbb
push
mov
test
dec
inc
fsubrl
in
xor
push
data16
pop
in
mov
push
cwtl
lds
jne
rorb
imul
pop
or
xor
lock
int3
jmp
sub
call
out
lds
fildl
cwtl
sbb
mov
pop
push
inc
adc
sub
push
xor
nop
xchg
movsl
test
cli
sbb
sbb
and
in
popa
pop
pushl
mov
cmc
add
insl
test
sub
hlt
and
jo
mov
xchg
mov
loop
aam
add
add
add
ja
roll
movsb
in
ret
loope
fdivrl
or
xchg
or
mov
clc
lret
and
in
jo
sub
xor
inc
or
sti
adc
pop
out
adc
lret
mov
pop
aaa
insl
sub
icebp
lahf
cld
out
bound
xlat
das
fisttpll
out
scas
ret
je
imul
sbb
cmp
push
decb
push
mov
rol
jno
mov
mov
push
pushl
loopne
pop
popf
adc
xor
inc
mov
xor
add
std
adc
cmp
dec
dec
shlb
xchg
lods
add
iret
cmp
sahf
out
enter
mov
push
sbb
or
daa
lods
sarb
jle
inc
addl
cmp
test
mov
mov
test
dec
daa
lods
jp
int
dec
pop
stos
dec
xor
xor
mov
or
test
les
pop
dec
loope
add
mov
enter
and
mov
and
jmp
clc
std
mov
jle
mov
pop
shlb
and
and
leave
lods
inc
adc
cld
cmp
sub
call
test
cmpsb
cmp
lea
mov
add
test
inc
scas
add
lret
mov
sbb
jnp
add
filds
dec
cbtw
mov
pop
fiadds
jp
cmp
or
inc
jecxz
add
or
ret
push
sahf
mov
lds
add
cld
jg
out
movaps
sbb
add
clc
test
rol
adc
push
out
rorb
push
popf
test
dec
aad
push
push
mov
mov
add
xchg
push
pop
push
cmc
adc
mov
push
add
negl
scas
mov
mov
sub
xchg
mov
imul
push
sub
sub
lods
rcr
adc
insl
adcb
lcall
mov
out
loop
cmc
and
xchg
je
mov
cmpb
sahf
mov
addps
daa
loope
sub
cmp
popl
add
push
hlt
loop
pop
scas
adc
mov
add
mov
jl
and
sbb
push
test
stc
mov
dec
cli
mov
inc
enter
fdivl
dec
mov
sub
imulb
loopne
adc
imul
jae
jo
rolb
cmp
loopne
push
in
adc
dec
adc
mov
jmp
iret
cmp
pop
mov
sysret
insl
lods
mov
test
xchg
and
jne
add
std
popa
mov
mov
adc
dec
mov
popf
xchg
push
xchg
push
fisubrl
dec
add
lret
xor
dec
in
mov
mov
mov
lahf
push
pop
dec
pusha
push
loope
daa
testb
pop
push
imul
rcrb
imull
jne
dec
add
jo
mov
jnp
inc
mov
pop
pop
rclb
and
pop
cmp
dec
decb
int
inc
cmp
outsb
cmpsb
pop
push
popf
adc
in
and
dec
add
out
inc
mov
adc
mov
std
sub
mov
sub
das
stc
jno
das
jo
mov
fucomip
push
add
in
cltd
movsl
push
cmc
mov
leave
add
test
movsb
pop
or
jp
iret
and
daa
std
cmp
sar
mov
mov
inc
hlt
idiv
sub
shr
jge
or
jmp
ret
insb
filds
push
das
pop
scas
mov
sub
cmpsl
inc
stc
test
add
ds
or
pushl
cmpsb
mov
rcrb
std
sbb
xchg
punpckhdq
insb
inc
jo
xchg
popa
pop
mov
jbe
dec
xor
push
push
pusha
pop
negb
add
inc
aaa
pop
xchg
adc
pop
xor
jnp
cmpsb
mov
dec
sbb
fdivl
xorb
dec
lahf
pop
adc
push
xchg
cmc
scas
mov
add
call
mov
pop
add
sbb
or
int
shrl
sbb
lock
cltd
and
sbbb
pop
push
jle
lods
out
mov
lea
mov
push
dec
dec
dec
repz
pop
test
daa
push
mov
mov
add
jns
les
shr
pop
pop
xor
push
outsl
add
imul
mov
aad
xchg
adc
adc
inc
jmp
les
lods
out
xor
sbb
fimuls
xchg
add
lret
sbb
ljmp
mov
gs
scas
and
add
xor
mov
jecxz
xchg
push
out
mov
fiaddl
sub
or
sub
cmp
sbb
clc
inc
shr
lret
daa
pop
xor
cmp
jb
and
xchg
test
cwtl
push
rolb
xor
jnp
fsubr
popf
lahf
pop
lret
inc
push
sub
pop
sti
lcall
sbb
xchg
cwtl
adc
in
cmp
scas
lea
roll
vpshlw
and
or
divl
cmp
movsb
out
aad
inc
xor
add
xor
xchg
aad
mov
popf
lret
stos
insb
jl
push
add
clc
mov
inc
pop
jl
dec
gs
mov
push
push
insl
pop
fs
dec
sub
or
xchg
mov
gs
lock
jp
push
cmpsb
pop
bound
shrb
pop
jb
arpl
in
push
adc
adc
add
inc
xor
bound
sti
icebp
push
sbb
movsl
cmp
xor
jmp
mov
xchg
movsb
pop
pop
dec
push
mov
fmul
scas
xchg
lods
inc
and
adc
clc
cwtl
imul
lods
addr16
add
dec
pop
cmc
movsl
mov
xchg
adc
scas
xchg
lret
fists
pop
xor
inc
push
push
in
arpl
loope
adc
add
mov
mov
out
push
divl
test
adc
pop
imul
shll
lahf
popa
xchg
mov
fs
sub
jecxz
mov
xchg
int
fs
jo
popf
in
mov
aad
sub
add
dec
test
jae
or
fisubs
sbb
sub
cmp
inc
sbb
mov
adc
es
mov
mov
push
push
xlat
popa
or
or
and
jmp
push
nop
ss
or
mov
lret
dec
rcll
fildll
xchg
les
push
jp
fnstenv
add
or
roll
jns
push
add
jge
add
mov
cld
test
lds
repnz
mov
stos
add
lret
addr16
movsb
repnz
add
leave
into
dec
pop
cmp
test
pop
sbb
mov
xorl
popa
sbb
push
pushf
add
aas
inc
xor
add
push
add
pop
and
push
jecxz
xchg
jmp
cmp
data16
lds
dec
movd
xor
sbb
push
sarl
jne
xor
or
pop
movb
movq
pop
aas
add
dec
arpl
add
mov
shlb
aad
aam
pop
add
xor
jbe
add
xchg
ds
add
mov
or
pop
sub
dec
mov
xchg
add
ret
sbb
cmp
cltd
out
pop
pop
inc
ljmp
sbb
rorb
movd
sbb
jae
jb
gs
outsb
fsub
sub
inc
cmp
pop
das
popf
xchg
dec
repz
pop
xor
dec
xor
hlt
cli
nop
aas
es
loop
add
adc
mov
fcoms
add
ds
aaa
and
loopne
or
cs
test
dec
out
mov
adc
mov
xchg
inc
cli
addb
call
fs
jecxz
mov
sub
add
add
jae
call
insl
add
push
popf
inc
sbb
cmpsb
movsb
lea
dec
test
sub
add
or
push
sbb
cmp
data16
adc
push
sub
ret
add
mov
loopne
mov
add
add
adc
cld
cmp
dec
sub
inc
test
push
into
mov
shlb
jge
adc
ret
xchg
xchg
subl
imul
mov
or
repnz
lods
fmul
mov
xor
and
cltd
lock
dec
add
out
dec
ja
dec
inc
subb
add
xchg
lcall
mov
mov
or
add
pusha
out
mov
add
pop
adc
add
sub
lods
les
mov
add
sub
aas
xor
mov
cmp
ljmp
add
sbb
testl
jbe
xor
pusha
push
mov
cmp
inc
jmp
cmp
xor
lds
into
adc
and
out
bound
outsl
add
adc
stos
cmp
cmpsb
mov
xchg
add
dec
mov
sarb
sbb
mov
cs
mov
loopne
test
jo
jnp
push
movsb
lods
mov
test
or
sub
addb
adc
push
xchg
dec
fidivl
repz
push
ret
xchg
adc
ja
jge
out
xchg
mov
in
nop
cld
xchg
and
inc
test
push
add
pop
aaa
xchg
loop
popl
notb
mov
sbb
cltd
mov
mov
cld
nop
dec
xchg
mov
sbb
xchg
nop
sub
ljmp
sti
dec
inc
and
xor
sbb
adc
call
pop
xor
fdivrl
cmp
fcoms
add
scas
add
sahf
movsl
sbb
inc
add
jle
out
in
add
adcl
int3
sub
xchg
xchg
sarb
jl
sbb
adc
sub
or
out
push
cmp
jns
dec
push
hlt
es
pushf
cwtl
pop
mov
mov
repz
dec
inc
push
cmp
aas
or
gs
sub
add
loope
or
xor
pop
lods
test
cmp
mov
push
sbb
push
pop
adc
imul
repz
add
pusha
adcb
push
adc
mov
xchg
call
data16
test
pop
cmc
xor
clc
jnp
dec
mov
or
ret
or
icebp
pop
pop
add
adc
ds
ja
and
cmp
or
es
jbe
add
popf
daa
lahf
mov
mov
jecxz
xor
clc
lcall
pop
je
out
out
add
popf
scas
stos
add
test
aas
nop
popf
pop
xchg
xchg
cs
push
adc
cmp
push
jne
adc
call
test
jg
nop
ret
cwtl
pop
pop
or
cmp
mov
mov
daa
or
test
lock
nop
cmpsb
add
mov
flds
movsl
pop
mov
add
push
adc
sbb
mov
push
inc
dec
xor
push
shll
sbb
sbb
adc
inc
xor
inc
and
add
sysexit
inc
cmc
sti
add
cmp
add
mov
addl
call
shrl
call
cmp
add
adc
jno
and
mov
subl
test
lret
lods
std
add
rorl
and
inc
push
or
xchg
popf
inc
add
call
test
scas
fildll
in
mov
mov
sbb
dec
rcr
and
or
xchg
in
test
hlt
or
fwait
imul
lea
add
sub
lods
cwtl
jno
ss
sahf
inc
stos
and
loope
and
cltd
cwtl
repz
xor
sbb
shl
lods
pop
jne
add
cs
mov
test
ds
iret
movsl
xor
hlt
add
sbb
pop
outsl
push
jns
pop
imul
pop
dec
aas
mov
xchg
mov
scas
sbb
ds
add
clc
rcll
in
pop
andl
test
cs
call
or
filds
jp
jg
dec
lahf
mov
mov
nop
mov
decb
pop
xor
sbbl
sbb
push
adc
int
shlb
cmovb
mov
fnstsw
mov
rclb
insb
roll
cmc
mov
or
mov
sbb
in
sahf
add
nop
xchg
aam
lea
cmp
mov
jno
and
push
pusha
cmp
leave
paddsb
or
or
popf
mov
in
fwait
push
mov
or
roll
add
pop
or
idiv
cmpsl
add
sarb
loop
dec
inc
mov
jb
pop
leave
mov
cmp
and
in
ja
lret
and
dec
mov
and
je
pop
stos
test
lret
and
push
mov
adc
std
xchg
out
pop
addl
out
pop
push
mov
sbb
mov
stos
fiaddl
mov
jae
movsl
mov
xchg
daa
add
xor
xor
mov
sbb
jb
adc
pop
sbb
loopne
sbbl
mov
dec
xchg
add
dec
aas
flds
xor
andb
mov
movsl
and
jae
pop
and
push
mov
sbb
rorl
and
and
xor
and
sti
jne
mov
cmp
and
inc
lods
pop
shll
xchg
in
pusha
jb
adc
cmp
inc
aaa
test
mov
adc
add
fwait
dec
pop
jo
fstpl
shrl
push
stos
add
mov
fcomp
xor
out
icebp
add
jns
outsb
outsl
sbb
fists
loopne
xor
push
xor
xchg
xchg
in
repz
inc
mov
add
stos
jge
insb
add
sbb
jl
adc
push
mov
test
cmp
push
outsb
lret
adc
push
test
outsl
pop
add
mov
adc
sbb
aaa
sub
shl
call
cli
shrl
mov
sbb
dec
push
loope
and
jne
add
cwtl
and
mov
push
and
lods
jnp
leave
mov
adc
popf
push
mov
pop
inc
roll
iret
les
push
or
mov
jecxz
and
pusha
sbb
mov
mov
sbb
xor
jmp
leave
loopne
adc
pop
pop
nop
js
sbb
lds
ffreep
addr16
inc
sbb
jmp
addb
push
jno
aas
sbb
mov
popf
loopne
into
push
sub
arpl
xchg
in
mov
jl
es
cmc
mov
dec
lret
cvtps2pi
pop
add
adc
aad
pop
push
fnsave
pop
loopne
nop
adc
dec
adc
sbb
scas
shl
xor
movsl
stos
add
push
mov
add
ljmp
cwtl
push
mov
sub
mov
and
mov
push
shl
adcl
daa
je
push
push
mov
addl
insl
shr
cs
jb
lcall
addl
pop
cltd
repz
icebp
in
inc
xor
lods
sbb
test
mov
rcll
pop
mov
push
movsb
and
add
mov
mov
add
xor
jmp
fdiv
add
adc
dec
add
imul
push
lsl
jmp
fs
pop
or
jl
leave
mov
test
add
push
cmpsb
sti
inc
push
jle
add
push
adc
pop
or
pusha
add
push
sub
shrl
and
sub
arpl
and
mov
into
pusha
rcl
jne
mov
popa
pop
pop
and
mov
inc
mov
mov
imul
lret
jnp
sbb
and
rorl
sbb
mov
divl
and
xor
sub
pusha
movsb
lea
sahf
ret
and
and
push
lcall
inc
mov
add
setle
inc
pusha
xchg
mov
jmp
into
sbb
pop
test
and
sub
add
jmp
or
int
iret
pop
leave
push
shrb
dec
pop
jne
add
mov
inc
sbb
mov
adcl
adc
cmp
adc
scas
xchg
loopne
cmp
push
and
stos
cmp
sbbb
inc
btr
cli
daa
sub
loopne
push
ss
xor
leave
dec
lods
out
incb
jae
popa
and
or
add
cltd
push
inc
adc
mov
mov
and
lret
pusha
mov
cmp
pop
push
sahf
add
cwtl
or
ja
add
and
clc
push
jnp
xor
add
cmp
pop
inc
sub
mov
movq
ret
add
pop
jl
mov
push
loop
add
cmp
lock
xor
addr16
neg
add
out
or
loopne
push
into
jne
out
jb
add
and
int
cld
push
push
in
jae
pop
xchg
lock
jno
add
ret
xchg
pop
xchg
lock
mov
xor
fcmove
or
cltd
add
rclb
jnp
xchg
jb
pusha
mov
mov
fsubp
psubw
jge
popa
pop
scas
push
inc
xchg
mov
lods
mov
sbb
push
or
lods
and
push
insb
sbb
mov
frstor
cmc
in
mov
mov
cli
mov
data16
sbb
clc
pop
mov
add
adc
xchg
das
andl
lcall
out
fldt
shlb
add
lods
mov
and
lods
pop
add
xchg
loope
dec
pop
pop
push
mov
dec
cmp
outsl
xchg
sahf
addb
in
clc
ret
cltd
movb
pop
mov
int
and
mov
pop
cmc
inc
jp
lods
icebp
aas
pop
jno
xlat
add
mov
push
add
scas
xchg
fdiv
mov
mov
loop
nop
sub
icebp
clc
ss
xchg
xor
mov
ja
fs
sub
adc
mov
rolb
add
pop
mov
sbb
add
and
and
aaa
jae
pop
sbb
out
daa
push
movsl
jecxz
push
sub
jo
js
push
repz
add
xor
mov
xor
mov
or
add
xor
cmp
push
mov
lds
push
push
xor
push
push
mov
pushf
repz
popa
into
cmp
pop
mov
adc
es
jg
out
add
sbbb
test
sub
cmp
and
pop
inc
icebp
std
add
jmp
jle
add
arpl
jmp
lock
into
push
rorl
jmp
mov
pop
inc
inc
add
xor
mov
add
call
pop
mov
test
mov
inc
lret
xor
js
fs
dec
jo
lcall
pop
repz
loope
pop
movsl
dec
aad
add
add
jmp
xor
inc
jl
decb
or
and
add
insl
stos
popf
cmp
inc
push
pop
mov
inc
inc
test
testl
cmpsb
loopne
subb
pusha
dec
pushf
or
push
fistpl
pop
clc
sbb
js
jno
inc
int3
push
xchg
and
mov
loopne
loop
iret
imul
mov
les
or
and
rolb
sbb
lea
cmp
test
out
lret
movsb
mov
add
and
fcoml
scas
pop
mov
and
test
xchg
nop
cmp
pop
sub
add
add
sub
mov
dec
add
dec
add
inc
push
and
pop
sahf
jae
daa
rol
and
lods
je
xlat
sub
nop
scas
fwait
sbb
adc
scas
lods
cli
test
xor
mov
mov
add
mov
clc
add
cmp
pusha
sub
repnz
int
gs
mov
es
insl
push
negb
or
xlat
pop
cmp
jl
or
mov
cwtl
rol
sbb
mov
xor
jnp
inc
insl
loopne
add
outsb
pushf
lds
add
lret
xchg
cmp
cltd
lcall
or
and
add
mov
sbb
sub
ret
or
lcall
cld
push
mov
add
jno
aaa
inc
in
nop
jle
in
or
cmp
in
pop
shlb
hlt
nop
fsubrl
add
jle
mov
and
imul
mov
or
rcrb
pop
add
mov
sbb
inc
andl
shlb
lods
and
mov
out
push
inc
pushf
insl
add
popa
xchg
out
loope
inc
dec
mov
inc
iret
add
nop
jg
in
pop
adc
mov
out
cwtl
testb
fs
scas
sub
lahf
sbb
popa
sbb
in
fldcw
ljmp
add
mov
repz
aam
sti
imul
cltd
add
pop
xor
or
push
imul
xor
and
xor
add
xchg
or
cmpsl
cs
add
je
test
add
aas
fucomip
shl
xchg
dec
or
cmp
cld
inc
ret
out
in
add
lods
pop
adc
test
pop
dec
fisttpl
popa
andb
sub
jle
mov
pop
fcmovnb
cli
insl
in
iret
and
push
inc
xor
popa
add
bound
and
xchg
xchg
cmp
setl
lock
bound
imul
push
pop
pop
mov
jmp
aam
stos
adcb
jecxz
cld
filds
cmc
push
loopne
add
and
cltd
add
inc
pop
inc
sub
xchg
add
fs
lahf
movb
push
movsl
outsl
jb
or
and
mov
flds
xchg
dec
inc
jb
fstl
pushf
in
and
or
out
push
dec
or
add
push
cltd
fwait
test
jb
les
dec
rorb
pop
xchg
adc
out
and
jle
arpl
pusha
dec
jne
clc
fsubl
lea
das
gs
pushf
inc
add
adc
popa
pop
ljmp
mov
lcall
add
shrb
nop
in
fcompl
pop
dec
scas
add
aas
push
icebp
ds
push
xorb
mov
or
pop
sbb
fisubl
call
sti
mov
cwtl
add
ja
call
jo
aaa
mov
sbb
cwtl
or
sbb
push
pop
or
cmp
loope
outsb
add
inc
xor
pop
jno
push
sti
repnz
xchg
add
loopne
idivb
xor
sbb
adc
mov
pop
lds
fdivrs
popa
add
aad
inc
dec
xchg
mov
stc
sub
mov
cli
jmp
sti
add
mov
add
push
imul
cmp
fldcw
xor
mov
xor
cli
repz
jnp
add
mov
aaa
add
lea
lods
mov
std
iret
inc
aas
orb
lods
popf
out
pop
and
push
icebp
or
sti
lock
jae
cs
pop
add
mov
das
out
add
sub
add
insb
call
inc
add
push
mov
lock
xchg
xchg
or
pushf
lahf
adc
add
in
add
gs
jae
or
and
test
pop
adc
mov
mov
mov
js
cmp
jb
sarb
inc
add
mov
add
xrelease
xchg
mov
in
subb
cmp
shll
stos
aas
pop
sub
xchg
mov
add
xchg
bound
aam
repnz
clc
sbb
add
and
inc
test
adc
add
xchg
es
fs
inc
jl
test
lods
jle
jnp
push
xchg
idivb
sahf
testl
sub
add
dec
mov
jo
fildl
mov
add
outsb
and
fadds
andl
add
pushf
and
mov
fsubl
out
cmp
or
xorb
xor
in
imul
subb
cmp
and
mov
jbe
add
sbb
leave
sub
xlat
mov
je
pusha
push
pop
mov
adc
and
cmp
xchg
insl
or
mov
adc
pusha
stos
xlat
or
scas
cltd
rolb
mov
sub
std
ret
inc
xchg
mov
imul
lods
inc
inc
lock
fdivs
cmp
add
adc
popl
orb
fidivrs
aad
pop
mov
mov
pop
nop
sti
add
fadds
lret
xchg
push
dec
sub
inc
mov
pop
mov
stos
xor
mul
add
sub
ja
mov
sbbl
cwtl
popf
push
les
bnd
shll
pop
cmp
leave
inc
cld
mov
inc
lret
jo
push
les
rcrb
xchg
jnp
inc
loopne
adc
mov
stos
sub
ljmp
dec
push
jge
or
pop
cmp
test
into
sub
sbb
ss
sbb
push
insb
push
mov
cmp
popa
enter
das
adc
pusha
dec
les
adc
test
loop
add
mov
push
xchg
out
add
sbb
cmp
pop
pop
jne
adc
add
das
xchg
cmp
xchg
xchg
and
mov
cmp
str
add
adc
in
dec
mov
pushf
or
hlt
dec
lahf
or
push
stos
inc
mov
imul
aam
dec
outsb
pusha
mov
mov
add
mov
jbe
cs
xchg
loope
xchg
add
dec
cltd
add
or
pop
pusha
cld
ret
mov
mov
sbb
sub
sub
sarb
add
mov
add
xor
sti
shrl
add
jnp
lds
pop
cmp
jecxz
popa
pusha
fistpll
icebp
divl
lods
add
sahf
sbb
push
and
and
mov
lret
adc
aam
adc
vandps
adc
rorb
and
adc
add
data16
xchg
dec
cmp
adc
push
jo
sub
sbb
js
adc
push
in
and
cmp
pop
mov
xchg
adc
adcl
std
push
xor
ss
jne
sub
scas
ljmp
mov
popa
or
cmpsb
idivb
push
inc
std
pop
cli
sub
cmp
xchg
mov
or
aam
and
jmp
inc
dec
les
out
mov
outsl
sbb
mov
inc
lods
das
or
xor
add
add
cli
inc
add
xchg
and
inc
lock
shrl
adc
sbb
sub
add
fs
sbb
inc
orl
cwtl
mov
roll
dec
mov
sarb
sbb
inc
jl
bound
arpl
jle
and
inc
loope
test
sub
dec
push
xchg
inc
mov
es
sarb
add
pop
sbbb
sub
addl
les
sti
jecxz
es
scas
xchg
adc
cltd
pop
push
mov
aam
or
add
insl
lcall
ljmp
fdivl
popa
mov
add
or
jmp
add
add
add
test
mov
push
and
inc
add
roll
jbe
xor
imul
push
hlt
add
mov
mov
xchg
add
je
stos
pusha
icebp
inc
outsb
sub
mov
inc
push
divb
cmp
mov
or
test
jns
mov
add
mov
xor
mov
add
xchg
fmul
add
pop
negl
pop
flds
clc
js
jne
in
je
iret
add
push
pop
fwait
push
sub
nop
xchg
jnp
jp
std
dec
push
subl
addr16
add
cmp
sbb
addr16
xchg
fcomps
mov
push
ret
imul
xor
mov
mov
lcall
jne
add
or
adc
jl
xchg
rcrb
and
xor
xor
shll
daa
mov
xchg
int3
sub
fdivrs
mov
push
xchg
xchg
cmp
jae
sub
fmull
and
add
ja
fcoms
lea
adc
push
sarb
xor
sbb
jns
mov
das
xchg
or
sub
mov
lcall
lods
pop
fxch
sub
add
mov
push
pop
or
xchg
or
sbb
add
adc
scas
in
fdivp
stos
and
add
insl
clc
inc
aam
pop
movsl
pushf
cltd
adc
sbb
add
or
cmp
dec
nop
shlb
sbb
out
dec
xchg
test
or
pop
jo
sub
add
fs
int
jmp
mov
push
clc
cwtl
test
movl
dec
xchg
inc
xor
or
cmpb
addr16
fsubrs
dec
mov
fs
push
and
std
pop
mov
pop
mov
add
nop
lods
sarl
imulb
mov
stc
xchg
jns
jle
les
mov
pushf
outsb
sub
xor
jae
jo
jnp
jp
add
sarb
nop
add
loop
add
fwait
push
jge
xor
add
arpl
mov
ss
popa
iret
push
std
pusha
loop
les
xlat
dec
fistl
cmpsl
mov
cmp
dec
sbb
fcmovu
pop
pop
push
adc
out
add
fdivl
xchg
add
xchg
imul
cmp
loopne
xlat
inc
ss
insl
fdivp
add
sub
xchg
sbb
pusha
xchg
add
loopne
in
jo
push
and
daa
lods
dec
lret
stos
add
inc
frstor
mov
mov
cwtl
sub
ret
add
ss
and
sbb
add
cmpsb
mov
push
fs
sub
mov
sahf
and
dec
adc
adc
mov
and
jno
mov
mov
aas
xorb
pop
push
mov
jns
mov
flds
sub
rcll
add
cmp
xor
shl
in
mov
outsl
or
dec
rolb
add
sub
inc
call
repz
mov
add
cmp
jnp
mov
test
and
call
lcall
mov
mov
scas
loope
add
adc
mov
pop
xchg
mov
sub
xlat
add
nop
fdivrs
shr
push
push
inc
dec
sahf
out
adc
dec
mov
addr16
andb
sbb
sbb
and
mov
dec
loopne
push
pusha
mov
jge
add
inc
cmpl
les
sub
movl
push
js
inc
mov
addb
repz
das
out
addr16
mov
js
pop
cmp
xchg
add
jns
inc
push
sbb
or
fnstcw
add
push
ja
data16
mov
fdivrs
pop
dec
add
jmp
push
test
mov
adc
insl
mov
inc
mov
fnstenv
lods
adc
scas
add
add
repz
add
and
aas
mov
cld
adc
popa
add
lds
pop
sub
xor
push
sub
fistl
addr16
sub
add
mov
add
mov
or
xor
inc
loop
hlt
add
add
sub
les
pop
adc
lock
adc
iret
xchg
rolb
cwtl
mov
add
mov
sahf
testb
and
pusha
cwtl
jbe
add
fucomi
push
aas
jl
mov
xor
sub
add
ret
nopl
clc
jne
sbb
xlat
mov
inc
clc
pop
imul
pop
aaa
in
test
pusha
add
adc
rcl
in
mov
outsb
mov
mov
int
into
adc
nop
jmp
xchg
sbb
jb
lods
mov
dec
xlat
add
mov
adc
fs
jg
in
xchg
pop
jg
iret
popa
add
inc
adc
testl
mov
bound
jb
dec
icebp
dec
test
jmp
add
loop
mov
push
add
sub
add
push
in
out
dec
cwtl
loopne
ja
add
fidivrl
xor
sbb
movsb
lahf
jl
in
inc
dec
cs
in
xchg
add
and
adc
or
ljmp
adc
and
xchg
inc
add
push
cmpsl
lds
mov
ret
sub
add
push
ds
es
call
inc
mov
ss
ds
mov
push
les
adc
sub
sub
ror
ficoml
add
xchg
add
mov
and
add
cld
sbb
xor
jg
pushf
fimuls
les
inc
lret
call
rorb
add
pop
gs
add
outsb
jge
xchg
out
add
fsubl
ror
push
jb
sub
pop
call
add
jno
je
gs
sub
mov
addb
xor
inc
lds
add
pop
cmp
andb
or
inc
dec
add
or
aad
enter
loopne
divl
lret
scas
test
inc
pusha
xlat
and
mov
xchg
cmp
xchg
outsb
inc
add
mov
lock
jle
roll
pop
fsubrl
lret
dec
lahf
enter
sarb
ja
xchg
mov
mov
nop
mov
xor
add
addr16
popf
clc
mov
jo
cmovo
cmp
js
fsubs
push
sub
mov
cld
cld
push
icebp
jle
lods
pusha
inc
loop
inc
insb
testb
scas
adc
push
je
add
testl
out
insl
pop
inc
shlb
sahf
stc
or
pop
cmp
outsb
fdivl
pushf
repz
add
cmp
sub
dec
movb
data16
jp
cmp
fldl
and
inc
icebp
sub
jb
pop
xorb
and
mov
fwait
dec
mov
popl
adc
movsb
out
pusha
push
and
adc
sbb
sbb
je
adc
enter
das
insb
aas
in
cmpl
cwtl
add
xor
lar
xor
mov
push
clc
and
mov
in
stc
bnd
cltd
xchg
dec
push
cmp
in
jmp
cmc
enter
out
std
push
pop
shlb
adc
test
inc
in
lea
jns
jno
pop
test
ljmp
faddp
loop
add
nop
or
call
push
push
push
xor
cmp
call
jmp
adc
xchg
jecxz
add
and
mov
inc
adc
cmpsl
test
inc
cld
pop
xlat
add
or
cmp
add
cmpsb
jmp
sub
dec
pushf
or
lahf
adc
or
iret
flds
xor
in
mov
push
dec
add
and
dec
cmp
rorl
inc
or
js
arpl
in
sub
int3
out
mov
adc
inc
add
lret
scas
xchg
add
data16
pop
cmp
ror
push
shll
imul
jo
jns
mov
iret
pusha
jp
push
ja
xor
and
jl
lcall
cmovnp
push
pusha
dec
dec
rorb
loopne
mov
orb
shlb
dec
int3
adc
repnz
xor
pop
sbb
je
push
add
xchg
add
subl
call
dec
add
jae
aam
subl
mov
rorb
push
xorb
cmpsb
loop
enter
or
or
pop
lea
cltd
cmp
jp
out
loop
sub
int3
aad
pop
mov
add
in
hlt
xor
lds
adc
lcall
scas
add
sbb
aad
flds
aam
lods
pop
inc
xchg
pop
jl
add
scas
imul
dec
outsb
push
sub
cmpb
repz
dec
roll
in
nop
sub
test
cmpsl
enter
cmpl
fadds
rcl
rorl
push
push
mov
add
dec
mov
loopne
jae
adc
popf
adc
push
jne
pop
fiadds
sub
jb
mov
inc
add
outsb
add
enter
shrb
mov
mov
icebp
frstor
mov
pop
leave
push
mov
outsb
pop
and
and
add
insl
add
mov
add
pop
test
push
in
add
test
inc
int
xchg
lods
pop
sbb
xor
icebp
mov
movsb
add
mov
xorb
lahf
add
cmp
mov
test
fcomps
add
mov
incb
mov
fcomip
popa
add
testb
or
pop
scas
add
jp
int
test
imul
scas
mov
xlat
sbb
rcll
dec
push
ficomps
add
push
or
ljmp
iret
xchg
inc
fisubrl
roll
notl
notb
aas
popf
mov
filds
fldl
sub
jnp
mov
call
pop
add
mov
rorb
jmp
jbe
pop
es
add
cmp
xchg
sbb
outsl
add
or
gs
mov
shlb
ret
dec
mov
mov
cli
fadds
push
mov
aas
add
test
cmp
add
insl
stos
in
sbb
mov
cmpsl
mov
pavgb
add
push
insl
mov
add
inc
testb
into
jbe
push
and
add
mov
loopne
push
cmp
mov
pop
incb
jnp
mov
mov
lds
int3
jl
stos
jae
mov
cmp
out
and
mov
add
xchg
lods
stc
arpl
cltd
loopne
jo
mov
push
jmp
lahf
adcb
outsb
gs
mov
xor
lldt
outsl
ss
popa
mov
test
xchg
add
inc
ljmp
dec
jnp
add
and
sub
cmp
push
add
cld
enter
sbb
ret
adc
sub
inc
add
imul
cmc
sub
js
pop
mul
jnp
add
lcall
inc
pop
or
mov
add
mov
mov
cmp
cmp
inc
jl
das
add
add
xor
dec
loop
in
add
sbb
movsl
add
cld
fisttpll
mov
jnp
les
jp
sub
pop
popf
movsl
pop
inc
inc
les
push
and
fadds
fsubp
mov
or
into
add
lods
ret
xchg
inc
cmpsl
mov
mov
icebp
lods
dec
outsl
out
add
es
add
jle
mov
scas
jae
add
inc
scas
xor
ja
cmovs
xor
cmpsl
pop
ss
jg
out
xchg
rol
js
je
xchg
cwtl
and
or
lret
cs
into
inc
add
dec
in
mov
xchg
mov
pop
push
pop
pop
add
add
hlt
popf
push
ret
nop
mov
out
xor
std
add
adc
xchg
push
xor
inc
sub
cmp
or
ljmp
sbb
xor
xor
adc
out
mov
rclb
jns
cs
mov
fsubl
iret
js
dec
jmp
inc
adc
mov
je
adc
add
insl
mov
add
dec
pusha
pop
mov
mov
addb
sub
add
sahf
jno
movl
test
outsb
insb
add
dec
dec
or
jg
cmp
add
jb
mov
fisttpl
jl
mov
jbe
pop
jns
enter
out
addr16
inc
fs
sbb
add
fimuls
sahf
add
test
loop
hlt
sub
adc
insl
jnp
pop
jp
mov
mov
rclb
add
addl
stos
loopne
lahf
mov
sbbb
or
pop
repnz
sti
es
in
pop
cli
xor
add
dec
loop
add
outsb
ret
mov
mov
push
add
push
into
xchg
sub
out
mov
pop
adc
movhps
data16
xor
jp
dec
clc
out
jnp
lods
cli
jle
add
fwait
call
jmp
sub
adcb
icebp
stos
jl
lcall
dec
inc
and
into
cmp
cmp
jp
cld
push
xchg
les
movsl
add
pop
pusha
testb
std
or
pusha
cmpsl
test
ds
lock
daa
pop
push
mov
cli
mov
mov
mov
hlt
add
adc
xor
rclb
pop
rcrb
out
loopne
push
fstpt
add
imul
xor
rcll
cmp
aad
jae
ret
push
dec
pusha
pop
out
cmp
sti
push
lods
push
xchg
push
or
inc
bound
pusha
dec
mov
add
lret
stc
sub
push
je
pop
adc
dec
push
out
inc
mov
push
rorb
lret
cli
dec
add
dec
cmpb
shlb
jecxz
sbb
fwait
scas
push
mov
hlt
cmp
mov
jle
cmp
arpl
fxtract
paddusw
xchg
mov
loopne
dec
mov
sub
adc
js
mov
inc
add
mov
outsl
add
push
mov
nop
xor
std
or
stc
add
mov
cmp
xchg
loop
fsts
les
inc
pop
xchg
xchg
cmp
add
out
adc
cmp
in
lret
dec
mov
movsl
sub
mov
add
insl
je
jb
fs
nop
add
in
adc
aas
stos
xchg
add
inc
insl
mov
jmp
out
les
fidivrs
add
sbb
sbb
icebp
and
and
inc
and
bound
cmp
mov
rcr
in
ret
jmp
leave
or
ja
add
imul
dec
xor
or
adc
add
push
mulb
sahf
xorb
leave
pop
xorb
std
into
fs
out
shlb
or
xor
clc
rolb
mov
movsb
icebp
lea
and
xor
imull
pop
mov
in
push
rorl
addr16
fwait
loop
ficoms
push
jne
call
adc
pop
mov
enter
aaa
and
or
pop
push
pop
repz
pop
add
popf
push
lods
add
xor
add
cmp
call
mov
cmpb
lea
aas
ljmp
inc
mov
js
add
out
pop
sub
stos
test
add
bound
mov
add
fstl
lock
rcrb
pop
stc
sub
lds
enter
xor
mov
sub
inc
mov
ror
and
pop
rorb
push
sub
mov
mov
pushf
stc
xchg
lock
pop
sbb
out
sub
jge
add
mov
stos
add
dec
fnstenv
xor
out
sarb
bound
sbb
inc
jo
pusha
and
mov
mov
in
lret
mov
xchg
sub
test
popa
aas
addr16
mov
bound
fdivrp
push
cli
pop
sbb
and
adc
sub
add
fs
add
movsl
dec
jg
insb
lods
jmp
mov
add
sub
or
sub
jmp
insb
mov
jae
sub
xchg
cmp
mov
pop
mulb
hlt
mov
add
gs
js
int3
cmp
xchg
add
xor
enter
les
and
fisubl
paddsb
ja
mov
add
xchg
sbb
js
add
rolb
dec
pop
insb
push
jg
or
aas
hlt
pop
and
sub
imul
mov
mov
add
jle
into
imull
mov
jp
int
xlat
in
pop
pop
lock
jnp
int3
loope
adc
test
sbbb
sbb
pop
or
pusha
jbe
repnz
and
dec
mov
repnz
sub
inc
cmp
ja
ficoms
add
xchg
jbe
js
pop
push
daa
in
or
divb
cld
int3
sub
dec
test
mov
cli
dec
xorb
add
fildl
or
popa
adc
inc
jmp
and
xor
add
adc
sbb
ljmp
arpl
shll
out
inc
pop
lret
sbb
inc
sti
clc
jg
sbb
popa
dec
shll
add
bound
xchg
or
push
mov
sub
add
ds
sarb
add
bound
sbbb
outsl
cmp
sbb
outsb
add
push
ficoml
icebp
mov
xor
aas
sub
cld
pop
movsb
adc
rolb
inc
add
ret
fwait
mov
adc
insb
repnz
jo
add
mov
sub
addl
es
sub
mov
pop
jnp
mov
testb
mov
pop
sub
pusha
cmp
xor
xor
xchg
dec
popf
pop
add
inc
jg
in
outsl
pushf
cs
into
lea
test
or
dec
cmpsl
cwtl
pop
add
fists
das
cmc
loop
add
mov
pop
cmp
mov
lahf
mov
adc
dec
add
scas
add
mov
push
mov
in
ret
clc
jae
inc
out
add
adc
sub
shlb
or
sub
jns
and
pop
dec
pop
push
fbld
das
shlb
add
popa
insl
sbb
fldenv
inc
loopne
inc
or
fcompl
outsl
and
mov
or
imul
je
push
sub
ret
mov
mov
jno
mulb
xor
jne
fnstsw
mov
add
mov
sub
cmp
push
les
mov
xor
loopne
xor
aam
push
cmc
and
iret
pushf
ficomps
andl
faddl
jne
push
mov
add
xlat
js
mov
jle
add
xor
mov
cwtl
repz
aaa
add
cld
mov
xchg
sti
dec
je
je
add
xor
nop
and
push
pop
rcl
add
ret
shrb
add
stc
fistl
add
out
push
dec
inc
pop
sbb
cs
add
dec
js,pn
loope
mov
cli
or
adc
inc
add
fstps
popf
into
stos
std
cmp
inc
mov
adc
insl
jne
xchg
loope
pop
jg
je
call
xchg
leave
gs
adc
inc
hlt
push
testl
and
popa
xchg
mov
out
mov
bound
out
add
lods
mov
add
sub
add
idivb
gs
nop
xor
aas
fistps
sub
add
shr
in
cmp
pop
pop
push
add
rorl
ljmp
mov
add
jle
cmp
or
hlt
mov
push
add
cwtl
addb
and
ja
push
str
mov
es
jo
dec
aam
les
add
sete
inc
cmpsb
dec
test
xor
lods
mov
outsl
push
or
aas
push
das
jbe
pop
push
sbb
cmp
cwtl
movnti
and
fmuls
sbb
repnz
cmc
and
aam
movsb
stos
cmpsl
idivb
data16
push
sub
adc
push
push
inc
and
mov
insl
xor
xchg
and
jmp
aas
in
clc
add
mov
aas
xchg
xor
test
shll
call
nop
add
movl
and
adc
lahf
mov
cmp
add
jo
orl
dec
fimuls
or
xor
enter
dec
fcoms
or
in
lock
mov
leave
pop
fsub
mov
loopne
addl
sub
or
add
lds
lret
inc
mov
mov
add
dec
jl
xor
mov
cmpsl
add
int
mov
add
lcall
pop
push
cmp
or
fadds
xor
ror
add
sbb
push
inc
pop
test
add
insb
popf
enter
lods
pop
push
aam
inc
cmc
mov
adc
arpl
or
add
ljmp
cld
mov
aam
add
add
and
jp
xchg
orl
shrb
fwait
ds
adc
mov
stos
adc
sbb
jge
stc
and
sub
add
push
mov
pop
add
test
cmc
lds
pop
xchg
or
cmpsl
das
fdivrs
int
sub
and
add
repz
sbb
xchg
mov
ja,pn
sub
add
cmc
dec
pop
mov
sbb
add
pop
add
daa
adc
mov
rclb
cmp
adc
ss
sbb
xor
push
sbbb
repnz
gs
push
adc
mov
addr16
push
add
outsb
adc
rolb
lea
or
cmp
pop
lahf
pop
int3
adc
add
jnp
xor
in
add
out
dec
cmovs
push
leave
es
mov
cmp
dec
cmp
jo
sahf
cmp
mov
insb
sahf
dec
jbe
jne
xor
testl
ffree
incl
shll
adc
cmp
fstpt
push
icebp
daa
in
sbb
aad
fildll
mov
ss
sub
add
and
out
clc
pop
and
push
xchg
lcall
iret
mov
add
adc
mov
fldl
pusha
jg
jle
mov
push
fwait
insl
pop
loop
mov
ja
mov
test
pop
mov
mov
stos
pushf
push
loope
pop
sbb
add
cmc
jl
push
mov
out
pop
loopne
sub
pop
jle
mov
or
jns
xlat
xchg
push
stos
add
or
fsubs
or
loop
repnz
push
stos
and
push
cmpsl
ret
pop
sub
in
sar
mov
push
sub
adc
mov
adc
das
aaa
push
lods
add
repz
sbb
mov
sbb
lock
nop
cmc
or
movsl
sub
jp
mov
mov
add
add
daa
dec
cmp
dec
add
fcompl
and
mov
arpl
add
cmp
dec
aad
ret
lock
mov
push
jae
mov
dec
and
rcrb
shlb
push
pop
lahf
add
stos
cmp
int
add
mov
push
insb
dec
add
xor
scas
cmpsl
add
shll
add
pusha
cld
dec
fidivl
cld
sti
add
xchg
jl
jmp
subb
add
mov
add
aaa
mov
jg
push
mov
test
int3
out
xor
lcall
sbb
inc
jmp
push
std
out
fdivl
dec
add
cmpsb
xchg
add
int
lea
adc
mov
jb
andl
lcall
orb
add
rol
add
orb
aad
xchg
clc
roll
into
inc
mov
popf
pop
add
js
push
icebp
js
add
cmp
dec
or
loope
mov
into
movsb
orl
inc
sbb
cwtl
add
xchg
mov
sbb
shlb
add
and
out
mov
pop
push
jg,pt
cmp
xor
cltd
int
mov
lock
sbbl
fimuls
inc
jb
push
icebp
add
sub
pusha
mov
test
test
mov
add
add
sub
lds
inc
push
ja
dec
arpl
or
cmpps
add
lahf
push
inc
or
std
mov
jmp
mov
leave
fisubrl
out
inc
sub
push
push
dec
sbb
mov
mov
pushf
sbbl
xchg
sti
add
inc
pop
sbb
ret
push
xchg
cmp
sbb
inc
adc
popl
repnz
ret
and
mov
jne
mov
mov
or
add
lea
data16
dec
lcall
mov
ja
push
jmp
pop
lock
xchg
add
loopne
addb
add
xor
sarb
cld
pop
pop
sti
mov
aam
mov
add
js
and
test
fs
aam
in
dec
xchg
add
popl
sbb
fdivrs
pop
sbb
add
fistl
mov
sbb
push
outsl
bound
cld
add
dec
xchg
loopne
lret
loope
push
mov
add
lret
add
mov
aam
add
adc
mov
jbe
xor
or
and
mov
add
adc
dec
mov
pop
inc
sub
add
add
add
jle
in
repnz
out
fcoms
loop
sub
adc
sbb
movsb
fucomip
cmp
add
inc
imul
test
jns
nop
and
jl
add
rclb
inc
mov
subb
or
pop
mov
lods
jle
cmp
pop
add
jl
jae
mov
loopne
jle
mov
add
popa
mov
pop
mov
add
inc
or
shll
xor
xor
add
mov
cmp
xchg
mov
jmp
insl
add
and
sbbb
push
loope
addr16
ja
insl
inc
add
push
adc
pop
sub
leave
out
int3
mov
int
xlat
dec
add
adc
jmp
inc
add
push
pop
lock
dec
push
jp
dec
xor
cmpsb
jbe
test
mov
test
xchg
pop
sarb
add
push
cwtl
adc
mov
pop
addr16
popa
mov
push
or
add
jnp
in
sbb
cmpsb
and
ficoms
sti
mov
adc
add
push
mov
add
pop
es
insb
add
push
jnp
sub
pop
int3
addb
cmp
in
call
add
rcrl
dec
mov
roll
imul
add
outsl
and
rcl
dec
outsb
add
addr16
add
rep
pop
xchg
stos
jns
in
add
fdivr
pop
sbb
and
adc
adc
loop
cld
pop
cs
pause
sub
adc
in
inc
jmp
sub
add
ss
loopne
add
dec
ret
test
loopne
adc
fwait
pop
imul
lcall
add
gs
inc
fwait
mov
add
add
dec
mov
pop
out
push
mov
repnz
inc
add
stos
push
clc
pop
cmp
stc
add
pop
mov
sbb
inc
clc
jl
add
mov
popa
or
std
aas
inc
push
verr
xchg
xor
in
add
push
push
leave
jge
int
and
mov
add
adc
mov
cmpps
xchg
dec
add
push
insb
lret
insb
pop
add
mov
xor
in
flds
mov
mov
pop
inc
mov
sbb
xor
sbb
pushf
in
mov
sub
lds
sbb
pop
add
xchg
outsb
mov
add
mov
cmpsl
and
adcb
and
ret
mov
mov
adc
sarb
cwtl
aas
push
and
daa
adcb
push
push
pop
js
dec
pop
neg
mov
lods
jle
sbb
sarl
es
in
mov
lock
add
shrb
sub
arpl
out
push
adc
movsl
mov
in
sub
mov
push
leave
mov
popf
mov
push
insb
popf
mov
out
jne
data16
lods
or
movsb
rcl
add
add
call
xlat
sbb
sub
inc
loop
fisubs
add
mov
pop
add
push
jg
movd
add
cmp
adc
sub
inc
xor
inc
data16
push
push
icebp
xor
in
scas
mov
les
shlb
dec
pop
adc
test
stos
stos
jbe
shl
xchg
ds
adc
dec
mov
inc
push
mov
sbbb
xchg
xor
pop
add
cmpsb
repnz
cmp
rolb
jae
inc
push
push
add
mov
lahf
and
cs
mov
addl
lret
cmpsb
mov
fmull
aad
mov
add
xchg
xor
call
movsb
inc
sub
fdivl
sub
pushf
mov
ret
in
mov
jle
inc
lock
into
jne
movsl
sbb
addb
push
or
cmp
test
pop
push
insb
sub
jp
xchg
add
xchg
imul
add
lret
out
add
fistps
pop
enter
cwtl
jle
add
cmpsb
inc
mov
jno
pop
lret
pop
or
cmp
add
sbb
cmpb
xchg
add
xor
lock
xchg
pop
mov
ret
adc
test
push
inc
and
mov
cld
je
add
fidivrl
mov
pop
inc
mov
pop
cli
out
inc
out
ret
les
xor
das
or
jbe
cmp
sub
arpl
adc
push
in
add
push
jno
sub
push
cmp
les
cs
movsb
pop
push
rcrb
inc
scas
inc
or
pop
loope
add
aas
or
cmp
sub
fsubrl
add
ret
push
js
stos
adc
mov
cmpl
cwtl
sbb
imul
jno
push
imul
push
int3
cmp
imul
scas
inc
cltd
roll
dec
fdivrs
sbb
inc
cmp
mov
xchg
js
add
repnz
lds
mov
add
xor
push
jb
mov
cld
sub
fsubp
mov
add
lock
or
and
jb
add
pop
scas
jnp
js
add
setnp
add
stos
cmpsb
daa
movsl
cwtl
out
mov
movsb
add
or
pusha
mov
bound
mov
gs
add
lods
pop
mov
scas
xchg
and
add
je
xchg
addl
and
insl
add
fldt
jnp
mov
scas
add
shrl
fdivp
add
inc
jns
mov
cmp
out
xor
in
loopne
gs
js
xor
or
inc
cmc
jecxz
daa
lcall
sbb
cmp
sbb
push
pop
add
push
pop
push
imul
out
cltd
fs
lahf
ret
add
jns
cmc
out
ficomps
cmp
sbb
test
inc
gs
inc
lods
mov
push
aaa
dec
mov
mov
adc
mov
ljmp
pop
push
xchg
push
add
fimuls
lock
lret
jp
mov
jbe
sahf
add
mov
xchg
mov
je
adc
push
add
and
ja
rolb
xor
or
pusha
inc
jg
sbb
xor
push
xchg
add
push
cmp
or
and
scas
xchg
mov
push
cltd
and
mov
or
inc
hlt
dec
sar
jo
add
jo
xor
pop
and
sbb
dec
add
js
jl
or
inc
push
arpl
cli
subb
daa
add
cmpsl
lods
mov
add
in
sbb
pop
sti
iret
xchg
leave
pop
lods
sbb
icebp
add
out
fs
data16
outsb
test
mov
xor
or
jl
cmpb
jg
sub
add
sbb
jo
xor
hlt
xchg
sub
in
mov
mov
xor
outsb
popa
fistl
or
fsts
sbb
out
int3
inc
xchg
nop
js
loope
fisttpl
push
pop
inc
sub
pop
or
inc
fdivrs
sub
add
stos
adc
js
add
daa
sbb
inc
push
flds
pop
adc
dec
in
sbb
add
into
fisttpl
aad
cmc
sub
dec
xchg
cmpsl
push
inc
inc
adc
adcb
inc
add
jo
ret
ja
cmp
testl
fstps
enter
xchg
hlt
testl
clc
arpl
sbb
mov
push
xor
rclb
inc
add
inc
jmp
inc
mov
push
ss
jg
add
pop
xchg
jo
adcl
sbb
mov
loopne
out
sub
pop
clc
pop
rolb
out
cmc
add
or
or
inc
add
add
sub
orb
stc
loopne
add
movsb
fdivs
into
add
lods
fwait
das
push
xorl
sbb
mov
push
add
pushf
out
and
ret
cmp
xor
ss
gs
xorl
mov
divl
pop
xor
mov
xorb
cld
push
push
in
sahf
rcrb
mov
add
imul
push
jle
insb
lock
les
mov
incb
out
add
popf
subb
das
cmp
pop
lret
xor
push
stos
call
add
cltd
dec
ret
cmove
fcoms
hlt
sub
xchg
pop
or
pop
add
loop
dec
or
push
add
jb
cmc
jmp
pusha
das
sbb
popa
push
push
test
lods
faddl
add
sub
shrb
lods
arpl
sti
xchg
insl
cmpl
loope
mov
aad
in
dec
add
sub
test
mov
cmpsb
jle
adc
js
add
fimull
cld
xorl
inc
repz
into
stc
fs
inc
out
adc
ret
pop
outsb
push
movsb
jmp
push
sub
call
test
pop
mov
inc
add
mov
dec
ds
mov
add
call
add
cmp
stos
pop
out
sbb
fcoml
add
icebp
cmpb
popl
pop
iret
jae
cmp
add
xchg
inc
rcrb
test
andl
hlt
in
movl
xor
je
es
jno
add
mov
mulb
mov
mov
xor
xchg
lock
push
fdivrl
add
out
lea
add
cmp
jns
stos
mov
push
cwtl
or
jecxz
repnz
add
sub
push
mov
add
xor
shl
add
pop
clc
ja
push
add
sub
loop
add
sub
mov
icebp
jb
add
push
shrb
add
push
inc
xchg
fdivs
and
fnsave
push
xor
add
jmp
decb
rolb
test
out
inc
inc
rolb
add
popf
or
xorb
mov
aaa
movl
scas
or
packsswb
dec
dec
ljmp
cmp
add
hlt
shll
jno
add
sbb
jl
add
xor
cld
dec
cmp
add
mov
dec
add
pop
stc
ja
scas
sub
add
mov
movb
cltd
xchg
cli
in
xchg
es
xchg
pusha
clc
sbb
and
mov
mov
add
xlat
jmp
cld
sbb
xchg
ret
jns
and
add
aad
or
stc
ds
ret
jb
mov
pop
jno
sbbl
jo
add
popa
arpl
andl
push
cli
push
aad
addl
mov
orb
add
cli
shrb
push
add
mov
add
leave
push
cmp
adc
cmp
inc
fldl
pushl
fadd
subb
add
punpckhbw
inc
xchg
dec
cmp
add
out
sub
fidivrl
jmp
inc
add
pop
enter
addr16
adc
fwait
mov
fs
aaa
add
mov
pusha
mov
push
lahf
je
into
jle
add
add
clc
in
mov
clc
cmpsl
xchg
pop
push
repz
mov
insl
je
push
in
pop
xor
jg
cli
jb
dec
ret
lods
push
ror
xchg
ja
test
inc
lock
out
loop
leave
mov
add
mov
mov
mov
in
add
stos
xchg
add
add
or
ret
and
add
imul
jno
aam
enter
testl
pop
adc
ffree
clc
add
stc
nop
dec
or
pop
dec
in
lock
incb
lret
xor
imul
mov
clc
insl
dec
add
xchg
mov
fidivs
or
inc
movsl
dec
call
push
and
out
jecxz
mov
mov
enter
xlat
pop
jb
leave
sub
inc
imul
leave
fsubl
mov
ret
mov
shlb
fldl
mov
mov
jmp
and
arpl
cwtl
ljmp
nop
push
es
pop
daa
cld
fadd
add
jne
in
mov
mov
sbb
and
or
sub
setp
jmp
pusha
pop
mov
insb
inc
dec
mov
lds
pop
mov
xor
mov
dec
cli
push
mov
rclb
dec
fwait
add
jb
scas
mov
add
out
push
aam
xlat
xchg
popa
dec
movsl
and
sub
aaa
inc
rcr
in
adcb
je
add
dec
cmp
add
mov
dec
mov
and
push
cwtl
dec
mov
add
inc
sti
adc
stos
mov
or
jne
jo
add
jmp
aaa
jno
pop
inc
das
jg
push
adcb
push
arpl
ret
add
int3
add
xchg
push
js
or
adc
inc
inc
int3
add
cs
mov
popf
aaa
xorb
sbb
jb
sub
cmp
or
jmp
pop
sub
sub
add
pop
add
mov
lds
dec
push
add
int
mov
enter
and
or
mov
and
nop
add
pop
or
add
and
push
dec
add
sub
mov
hlt
js
add
adc
xor
fs
leave
jnp
cmp
xor
push
stos
and
aad
sub
cmp
inc
stc
clc
lea
imul
sbb
fimull
xor
mov
and
add
iret
andb
add
pop
stos
sbb
ret
das
lds
cs
les
mov
call
adc
adc
movsb
jecxz
inc
xlat
add
and
jle
add
je
xchg
fmull
mov
push
int
push
scas
inc
jno
mov
ljmp
pop
mov
add
mov
es
mov
shlb
mov
dec
inc
jecxz
js
clc
popa
add
cmc
xchg
pop
xchg
daa
jae
cmp
test
add
aam
out
fistpl
loopne
pop
sub
outsb
push
mov
fcompl
cwtl
add
in
xchg
cli
aam
push
mov
pop
rolb
into
cs
add
push
shlb
pop
lock
mov
add
inc
adc
dec
fs
pop
sar
nop
and
xor
add
push
fucom
add
add
dec
pusha
push
cmp
movsb
mov
mov
mov
pop
inc
popf
insl
clc
and
cwtl
rolb
mov
shlb
add
jnp
push
mov
push
mov
lahf
cmp
cli
in
imul
mov
pop
mov
push
push
sbbb
movsl
adcb
cmp
add
call
mov
mov
adc
mov
and
add
xor
push
add
in
pop
dec
repz
sbb
enter
xchg
mov
jp
out
or
dec
add
push
mov
jo
mov
or
cmp
gs
add
in
or
enter
dec
mov
ja
dec
lret
rolb
out
lea
jle
fnstsw
lods
in
scas
movsb
into
nop
mov
or
inc
mov
add
pop
cltd
jnp
loopne
pop
imul
mov
xor
dec
adc
pop
call
fiadds
test
loope
xor
xchg
add
jae
xchg
std
fwait
test
mov
lcall
add
push
scas
and
les
or
pushf
popa
or
stos
movsl
add
hlt
lret
imul
fcomi
adc
xor
push
push
add
xchg
pop
push
insl
cwtl
addb
js
push
in
mov
cmp
das
xor
call
addb
nop
xor
stc
push
sub
popf
addb
dec
add
sub
push
aam
dec
pusha
adc
push
push
add
sub
das
add
mov
in
adc
fwait
or
cmp
push
popa
add
out
add
imul
movsb
lods
add
incl
test
es
sahf
pop
and
js
pop
std
cmp
xor
out
sub
lcall
xor
mov
mov
pop
add
mov
xor
bnd
mov
cmp
pushf
inc
sbb
add
out
cmpsb
dec
mov
rcl
mov
cwtl
mov
add
mov
fxch
adc
xchg
push
loopne
mov
iret
mov
xor
and
add
rorb
mov
int3
xor
jmp
add
inc
pop
rolb
scas
in
add
or
mov
jle
daa
xor
popf
arpl
mov
mov
ljmp
data16
inc
mov
add
pop
mov
mov
add
push
add
mov
xadd
lret
leave
add
xor
fdivrp
and
and
pop
mov
sbb
pop
add
push
test
loop
mov
in
and
out
test
pop
int
sbbb
push
xchg
adc
call
in
loopne
add
aaa
iret
fwait
cmp
xor
leave
ljmp
repz
aas
addr16
pop
decl
jge
jnp
in
add
test
sbb
addb
add
nop
notl
add
out
dec
orb
shr
mov
jae
fstpl
mov
xor
lea
add
aad
push
pop
mov
out
inc
adc
add
int
loopne
js
pop
pop
inc
gs
fwait
jl
add
in
or
pop
pop
test
movsb
and
inc
sti
jge
xor
jne
iret
fsts
mov
pop
es
fildl
dec
out
fimull
xorb
dec
inc
pop
stos
fildl
leave
into
jne
test
pop
pusha
jbe
jno
sub
cs
movsb
inc
sbb
ret
mul
pusha
popa
dec
ljmp
xchg
stos
js
nop
cmpb
add
jp
sbb
imulb
test
lcall
add
mov
mov
mov
outsl
push
pop
nop
cmc
in
add
pop
and
dec
jg
lods
pusha
stos
push
jl
push
mov
mov
add
scas
stc
in
inc
and
ret
add
out
shr
aam
lock
das
data16
or
jbe
inc
addr16
mov
xchg
xor
movsb
or
loop
int
add
adc
in
out
adc
push
test
mov
lods
adc
or
out
pop
shll
ror
ds
pop
sub
xchg
int
iret
push
rorl
or
mov
add
call
loop
mov
aam
dec
insb
iret
inc
add
pop
ss
dec
add
fs
lods
cli
cmp
sub
or
test
or
lcall
mov
push
aad
dec
test
clc
mov
add
jmp
cmp
stos
lea
loopne
iret
dec
icebp
cld
adc
and
test
loopne
pop
xor
pop
and
ficomps
mov
jns
xor
mov
add
jmp
jecxz
test
pop
popa
jg
pop
out
push
mov
add
or
enter
jmp
cmpb
in
xchg
dec
cmp
push
sbb
cmp
and
cs
push
test
cwtl
dec
add
lret
int3
adc
in
jl
movsb
xor
adc
in
jae
sti
ret
jecxz
mov
mov
sahf
jbe
inc
fstpl
ds
sbb
xor
mov
lret
and
nop
mov
sub
mov
fisttpl
jp
int3
jns
jo
imul
sub
adc
add
jge
test
adc
add
gs
pop
lcall
fwait
jg
cld
fs
mov
adc
sti
imul
hlt
sub
loopne
add
inc
mov
hlt
pop
mov
sbbl
mov
mov
and
mov
add
enter
sbbb
jge
movsb
add
adc
scas
sub
xchg
cmpsl
loopne
mov
jl
dec
pop
sub
add
ror
leave
pop
gs
adc
stos
cmc
pop
imul
mov
add
mov
dec
sub
sarb
pop
inc
insb
nop/reserved
out
or
xchg
add
je
inc
dec
inc
mov
pop
cmpsb
aam
rolb
mov
xor
xchg
mov
add
jae
loopne
addb
and
xor
adc
out
stc
loope
and
insb
add
mov
andb
jo
add
arpl
leave
das
scas
lock
orb
dec
xchg
push
cmp
enter
jb
ja
adc
rclb
jp
push
push
mov
sbb
cmp
add
shrl
and
std
mov
xorb
idivb
pop
xchg
push
add
add
fiadds
pop
sbb
cmp
clc
aad
jge
adc
lret
loop
fisttpll
mov
mov
push
nop
popl
add
cld
lods
ljmp
xor
mov
pop
movsl
loopne
mov
mov
cltd
adc
push
adc
cwtl
dec
mov
aam
jo
add
add
dec
cmp
shll
andb
sbb
shrb
into
aas
fisttpll
jl
and
jmp
lods
adcb
xchg
outsb
icebp
scas
or
or
or
test
pop
stc
xchg
out
dec
dec
inc
daa
pop
push
cmp
in
or
ljmp
out
dec
add
jb
rorb
out
out
je
imul
add
inc
cltd
or
jecxz
out
add
ret
je
clc
outsl
jne
pusha
cmp
out
cmp
dec
popl
jecxz
andl
fucom
jno
pusha
mov
bound
in
mov
movsl
negl
lcall
imul
fists
stc
dec
repz
jmp
xchg
roll
fs
pop
jae
loopne
jge
movb
add
mov
jae
sbb
sub
test
pop
mov
sbb
pushf
add
sbb
daa
js
ja
nop
pinsrw
pop
push
lahf
add
rclb
test
sub
jle
jecxz
dec
icebp
or
or
fs
sti
and
adc
add
ss
add
loop
sbb
fdivs
pop
push
lahf
cltd
xlat
and
push
mov
jl
movsl
sbbb
lds
adc
push
enter
add
inc
mov
add
add
pushf
pop
sbb
cvtdq2ps
imul
add
jl
pandn
sbb
int3
scas
leave
add
imul
ljmp
add
ficoms
pop
data16
neg
sbb
xchg
sbbl
jl
inc
adc
sub
cmp
add
loop
and
scas
adc
dec
mov
push
adc
movb
push
and
xchg
cmp
add
les
mov
xchg
or
mov
leave
add
stos
stos
dec
jae
jecxz
add
xchg
dec
jnp,pt
xor
loope
dec
lock
dec
xorb
add
addr16
jo
add
inc
jmp
push
xchg
hlt
xor
cli
pop
inc
adc
out
xor
jl
and
dec
nop
mov
divb
sbb
jle
inc
fs
pop
out
mov
iret
xchg
inc
inc
push
mov
add
pop
pop
repnz
inc
add
jge
sub
add
nop
sbb
xchg
add
xor
inc
jns
fnop
cmp
jecxz
pop
push
imul
add
cmpb
add
cmp
addb
loopne
sahf
adc
lods
mov
ficomps
push
enter
jmp
mov
or
mov
sub
add
adc
cwtl
mov
std
add
push
in
pop
cmp
add
leave
cli
jae
xchg
or
lcall
cs
push
shll
cmc
roll
popf
mov
xchg
push
movsb
dec
fsubrl
xor
rorb
imul
pop
iret
cmp
cmp
jne
in
add
dec
cmpsl
inc
cwtl
xchg
inc
jl,pn
add
sahf
jnp
add
push
mov
sbb
sub
fdivrl
or
jg
jns
mov
sahf
add
scas
mov
pop
test
ja
mov
aaa
add
dec
mov
call
int3
cld
and
es
test
cli
pop
movsb
repnz
js
iret
push
rcll
fcomps
addr16
add
pop
and
mov
add
push
add
mov
adc
add
pop
and
add
into
call
sbb
scas
pop
in
ret
pop
adc
loopne
inc
push
cmp
out
add
jmp
dec
push
xor
call
add
int3
cwtl
and
jmp
stc
loopne
push
pop
xlat
fucom
mov
mov
dec
in
ret
and
mov
cmp
popa
xlat
jns
lret
dec
out
test
pop
into
cmpsl
add
adc
xorb
push
xor
add
nop
cmp
add
and
xchg
adc
inc
mov
xchg
sub
mov
xchg
or
mov
or
xchg
pop
mov
jnp
mov
push
xchg
adc
cld
arpl
imul
add
add
xor
add
into
lcall
mov
loopne
pcmpeqw
add
test
aam
pusha
pop
pop
xchg
or
addr16
add
mov
mov
std
fistpl
add
inc
ja
add
stos
repnz
ds
add
pop
lds
test
jg
dec
add
cltd
imul
pusha
cmp
mov
bound
hlt
addl
lds
xor
add
imul
pop
sti
cmc
jmp
shl
daa
xorl
dec
add
push
mov
xor
push
inc
mov
add
shll
jno
xchg
popa
dec
adc
sbb
xchg
cmp
aam
add
and
test
bound
loopne
mov
mov
mov
imul
xor
cwtl
and
jg
cmp
movsl
mov
push
mov
inc
sub
fcompl
sbb
stos
pushf
add
mov
dec
push
mov
add
andl
or
or
add
jle
call
and
mov
sbb
mov
push
fnsave
imulb
pop
sub
xor
add
enter
loop
fwait
mov
mov
je
jge
scas
jge
add
push
addr16
add
or
pusha
adc
pop
xor
adc
cltd
loopne
outsl
push
sbb
les
enter
sarb
sub
clc
cmp
gs
mov
stc
je
repnz
jmp
add
mov
jnp
add
imul
loopne
mov
push
xchg
leave
pop
add
adc
push
xchg
push
jmp
jnp
sbb
jmp
shrb
xor
lret
xchg
inc
jge
add
pusha
push
popw
push
addr16
clc
loopne
arpl
js
lcall
push
ds
mov
pop
sbb
lock
mov
dec
and
jmp
dec
and
jne
shl
dec
pop
jb
jge
push
or
pop
je
xor
inc
push
jno
or
rolb
xchg
fistpll
xor
ret
enter
sub
jae
dec
sti
pop
mov
cli
lahf
push
daa
into
mov
ss
jecxz
sub
cltd
inc
addr16
popa
lock
inc
andb
dec
stc
sbbb
sub
xlat
push
inc
pop
inc
inc
xor
jo
rcll
jle
ds
mov
sub
out
out
push
pop
mov
lock
mov
push
sbb
sarl
mov
pusha
enter
ds
cmpb
lret
mov
adcb
push
dec
sbb
les
ffreep
mov
fs
into
std
add
mov
rorl
fnstcw
cmp
mov
xchg
mov
inc
cmp
add
fmul
push
rcrl
push
in
and
inc
pop
add
mov
das
inc
std
xor
add
sti
cmp
push
mov
pushl
popf
dec
repz
inc
and
sbb
push
rolb
cmp
iret
jg
inc
or
cmovnp
mov
mov
mov
test
faddl
dec
push
notl
push
sbbb
add
mov
add
lret
mov
mov
jecxz
std
test
inc
insl
fnstsw
enter
fcoms
add
xor
test
shrb
push
add
xor
test
dec
pusha
add
lret
ret
cmp
and
mov
mov
ss
pop
lcall
and
fstp
dec
jl
lods
test
iret
jns
out
clc
icebp
repnz
test
push
sahf
ret
sub
hlt
dec
and
or
faddl
push
out
add
push
xchg
xlat
xor
push
ds
cwtl
scas
hlt
and
fwait
sbb
repz
lret
dec
bound
pop
mov
sbb
rolb
clc
leave
or
inc
scas
push
sbbb
pop
push
sbb
or
addr16
in
sbb
or
mov
add
push
jg
add
jp
pop
add
fldcw
xor
adc
mov
inc
mov
push
jg
inc
add
jp
sub
jne
xor
xor
ja
xor
pop
aas
movsb
adc
lret
push
popf
test
in
add
and
cmp
mov
loop
push
mov
push
xchg
popa
mov
jne
add
in
roll
and
in
add
sbb
lods
push
mov
movsb
mov
sub
fsubr
rolb
mov
sub
sbbb
adc
dec
mov
sahf
sbb
add
push
jae
mov
xlat
add
addl
add
jl
sbb
lods
push
fisttps
xchg
test
push
jg
imul
mov
push
icebp
push
pushf
iret
add
mov
movsb
inc
ficomps
and
mov
add
shr
sub
orb
xor
insb
test
and
mov
mov
sarl
ret
add
mov
fsubrs
add
pop
jb
pop
insb
arpl
test
push
push
add
lock
cmp
mov
aad
inc
arpl
jb
and
fsubrl
in
pusha
dec
xlat
cs
inc
insl
shlb
pop
add
sbb
push
in
test
stos
xor
jle
dec
ja
cli
pop
pop
cmp
roll
mov
stos
jmp
les
shlb
inc
in
movsb
cmp
and
add
inc
mov
cltd
aad
inc
fcoms
xlat
out
and
pop
lret
add
loopne
loopne
pop
push
lods
pop
and
jb
mov
rol
jo
gs
mov
out
sahf
xor
adc
and
mov
add
int3
aad
pop
daa
mov
insl
fiadds
push
jb
jo
add
jmp
add
fdivs
push
xor
fldenv
jns
xor
faddl
jecxz
mov
repz
add
das
inc
out
mov
arpl
enter
popf
mov
iret
xchg
lea
fistpll
add
push
movsl
nop
sbb
aaa
mov
cmp
bound
add
fldl
and
mov
je
lods
adc
scas
test
ret
xor
mulb
rcrb
mov
shlb
dec
jmp
mov
xor
fucomi
xchg
ja
add
mov
mov
and
xor
andb
ret
mov
mov
mov
mov
sbb
jg
mov
cld
cmp
jbe
movsb
daa
inc
add
push
loop
mov
or
and
cwtl
xchg
ret
mov
lahf
sub
movl
sub
rcrb
aam
in
stos
or
mov
mov
add
dec
inc
js
adcl
loope
push
cmc
out
adc
cmp
daa
outsl
xchg
add
in
sub
xchg
sbb
push
add
push
mov
adc
dec
adc
dec
aaa
add
and
xor
movsb
add
mov
lods
and
jg
ds
add
pop
test
adc
cld
sbb
push
xlat
jecxz
inc
dec
adc
ss
add
xchg
sbb
jns
and
imul
mov
xor
mov
cwtl
enter
mov
push
add
jbe
xor
cmp
flds
inc
mov
les
loopne
xor
leave
xchg
in
sub
pop
add
adc
cmp
adc
inc
pop
jl
fiadds
push
dec
push
xorl
adc
mov
push
pop
jb
add
incb
subb
mov
jo
and
mov
daa
jecxz
lods
leave
insl
jg
je
dec
pop
add
sahf
xchg
xchg
jae
add
lret
xor
add
mov
mov
jle
or
dec
pop
inc
fimuls
dec
jp
lods
addb
out
adc
dec
ds
add
scas
sbb
mov
pusha
popa
xlat
cltd
inc
cmc
jg
pop
and
movsb
aad
ficoms
mov
mov
pop
and
jge
arpl
cmp
lock
mov
ret
jge
fiaddl
and
mov
mov
sbb
add
fdivl
sub
in
rsm
fsubrs
ret
js
add
fildl
pusha
pop
xchg
mov
or
aaa
out
shlb
ret
mov
mov
mov
jns
int
push
divl
or
bound
mov
push
lods
mov
shlb
sbb
shl
mov
pushf
aaa
adc
pop
adc
xlat
dec
push
mov
and
mov
pop
jl
xchg
testl
inc
push
cwtl
into
jg
add
dec
mov
push
inc
fbstp
jge
js
les
add
push
lock
daa
cmp
cmp
pop
pop
lock
mov
inc
repz
data16
fisttpl
sahf
int
pop
pop
push
aad
and
divb
add
and
leave
push
in
hlt
dec
test
inc
repnz
add
xchg
cmp
adc
fldl
xchg
int
cmpl
inc
cmp
xchg
das
loopne
dec
sbbb
mov
pop
repz
cs
and
popf
in
jmp
mov
imul
int3
or
add
rcl
jl
or
lock
clc
loope
and
daa
adc
adc
aaa
xchg
pop
ret
dec
add
add
repnz
mov
ja
dec
call
imul
inc
sbbb
dec
sub
lcall
add
add
ljmp
lahf
aad
shl
inc
xchg
inc
test
les
js
daa
dec
and
cltd
rol
daa
dec
pop
or
filds
into
adc
jp
pop
call
cltd
enter
mov
cli
pop
dec
xlat
rcl
add
mov
mov
call
dec
movsb
inc
loope
add
fidivl
mov
fnstenv
and
cmp
je
pusha
jl
adc
and
sbb
cli
cmpsl
das
fsubr
dec
cmp
std
xorb
or
aaa
popa
and
fs
ja
add
std
sbb
imul
add
pusha
mov
imul
jae,pn
mov
out
and
cmpsl
and
add
mov
add
xor
push
leave
loopne
add
xor
cmpsl
in
pop
add
mov
push
add
mov
xchg
out
lahf
sub
ja
inc
xchg
cld
lea
lock
std
mov
shrb
dec
and
fbld
push
inc
test
popf
fwait
cmp
lock
test
scas
sbb
xchg
xlat
add
sub
or
cmc
pushw
push
flds
or
and
pop
or
dec
dec
mov
movsb
mov
add
stc
out
aas
push
arpl
shlb
xchg
add
sahf
repz
mov
call
sub
pushl
enter
imul
testb
js
clc
jp
xor
cmp
push
lea
mov
adc
add
cmpsb
popa
or
dec
int3
bound
pusha
add
push
mov
xchg
xor
push
test
mov
sbb
push
adc
mov
imul
and
add
inc
test
inc
adc
dec
or
lock
xor
mov
stos
sub
in
pop
jne
pop
ljmp
repnz
stos
push
fidivrs
add
orl
xchg
cmpsb
cmp
js
or
xchg
addr16
rclb
and
call
xor
xor
mov
repnz
xchg
out
fldl
lods
xchg
adc
ret
xor
push
add
pushl
inc
cmp
add
sbb
push
arpl
test
cmpb
add
push
in
lock
add
push
dec
pusha
push
adc
out
cmp
mov
or
dec
mov
addb
mov
adc
fstpl
int3
adc
mov
or
int3
roll
loopne
xchg
fistl
mov
orl
mov
lret
nop
mov
add
shlb
cmp
scas
in
jae
jecxz,pn
cli
pusha
push
outsb
add
fdivrl
pop
or
push
adc
daa
sar
nop
fdivs
mov
mov
js
unpckhps
and
outsl
ficomps
mov
cmpsb
push
test
jge
dec
inc
xchg
mov
les
adc
call
xchg
mov
add
or
std
movsb
shrl
mov
or
fs
add
call
inc
mov
out
daa
rolb
add
mov
xchg
sbb
xchg
fiaddl
push
mov
mov
aam
dec
test
sbb
sub
adc
test
inc
dec
es
and
nop
add
xor
call
xor
mov
cmp
enter
pushf
sbb
and
push
sub
adc
mov
add
add
push
sti
cmp
inc
cmp
push
mov
sbb
or
cmp
stos
adc
lret
lahf
mov
or
pop
mov
and
push
cmp
dec
shrl
mov
popa
aaa
add
jg
sub
shlb
add
mov
jb
sub
gs
lock
mov
adc
cmc
mov
pop
add
ret
fisttpl
fs
loop
push
add
adc
iret
int
or
jno
test
dec
ljmp
add
cmp
push
xor
inc
xchg
xchg
and
add
adc
outsl
push
pushf
andb
ja
add
pop
and
pop
insb
jno
push
arpl
icebp
mov
and
add
push
pop
add
mov
imul
cmp
or
add
fidivrs
sti
insl
or
or
shlb
push
mov
jmp
xor
sbb
sahf
sub
iret
shl
fnstsw
icebp
mov
mov
xor
pop
mov
loop
dec
mov
jle
pop
ja
push
or
sbb
mov
es
add
sub
dec
mov
cli
pusha
fsubrs
add
ret
jne
add
jp
sbb
cld
add
in
pop
lods
pop
cmp
add
push
adc
xor
pusha
cmpsl
add
mov
dec
push
test
or
pusha
push
or
add
cs
mov
xor
cmp
mov
sub
inc
add
jne
add
cld
mov
gs
pop
stos
xchg
cmpl
js
pushf
daa
test
out
push
jecxz
es
movsb
pop
xor
roll
pop
xchg
adc
mov
rcrl
test
mov
and
sbb
and
or
fsubl
add
mov
fnsave
aas
adc
add
or
pushf
adcb
xchg
or
dec
pop
enter
add
or
dec
add
aad
test
lock
add
cmp
fnstenv
cmpsl
push
dec
arpl
shlb
pusha
lea
pop
fcmovb
iret
pop
sbb
add
mov
lds
loopne
call
sub
sub
nop
mov
movsb
loopne
and
mov
pop
mov
les
dec
or
add
adc
cld
xor
sbb
addb
sar
outsl
mov
or
pop
and
add
jne
sbb
jns
call
fadd
loope
out
mov
test
pop
sub
sub
inc
and
mov
fadds
jb
push
mov
pop
jno
add
mov
imul
add
ret
jle
orb
or
cld
pop
aad
xchg
or
sbb
aas
adc
fnstenv
loope
dec
sbb
lock
mov
cld
jge
push
loope
xorb
repnz
insl
inc
add
adc
add
ja
cltd
mov
sbb
fadds
and
add
sti
mov
test
add
add
sub
popf
inc
cli
ljmp
add
push
test
add
fcoms
lea
push
pop
xchg
cmp
jae
data16
or
pop
xchg
movsl
fadd
aas
add
jb
lret
mov
dec
int3
add
ljmp
rol
cs
mov
add
gs
fwait
pop
fdivp
sbb
and
cmpsb
xor
cmpsl
xlat
fwait
dec
push
test
add
icebp
push
outsl
inc
hlt
mov
push
lods
add
rclb
push
xchg
negl
cmp
hlt
jg
add
aaa
mov
and
and
movsb
cmp
loope
pop
adc
sub
cld
dec
add
add
lods
outsl
rorb
leave
pusha
cli
push
addr16
adc
mov
jbe
and
pop
jb
loop
dec
imul
js
inc
mov
je
movsb
xor
gs
push
xchg
pop
and
or
lock
sbb
cli
jge
adcb
add
sub
or
add
mov
xchg
sub
inc
outsl
addr16
or
ret
imul
sub
sub
cli
add
insl
call
dec
mov
add
push
jo
imul
ret
jp
xchg
or
repnz
xchg
pop
loopne
inc
push
rolb
xchg
int3
stos
adc
or
hlt
pop
adc
jecxz
cmc
dec
test
inc
dec
mov
jbe
out
mov
or
add
das
mov
xor
lds
std
jl
test
cmp
push
jno
xor
jg
adc
aad
ljmp
lods
adc
or
jo
lret
aam
xor
imul
add
lods
repnz
add
test
cltd
or
stos
addr16
add
pop
dec
out
inc
lock
movsl
push
add
data16
xchg
sbb
imul
xlat
add
mov
sbb
out
dec
ss
adcb
fnstsw
inc
push
and
fs
dec
in
les
hlt
mov
xlat
jl
add
pop
jge
mov
dec
dec
out
add
cmp
push
and
cmp
jecxz
push
stos
add
fistpll
shll
notrack
sahf
stos
xor
icebp
std
add
mov
lock
xchg
and
test
jecxz
adc
mov
add
sbb
pop
dec
fldenv
in
shll
sbb
push
repnz
or
adc
es
mov
push
adc
xor
iret
je
sub
inc
and
mov
insb
pop
out
add
adc
nop
xchg
fldcw
test
or
or
jg
inc
lods
sub
mov
inc
mov
add
mov
and
add
mov
dec
push
jle
aad
or
inc
in
mov
xor
adc
xchg
add
adc
jo
repz
mov
lahf
inc
jae
nop
stos
add
and
popf
add
or
sub
xor
scas
popl
jnp
xor
push
add
pop
push
ljmp
std
call
adc
pusha
xor
fwait
add
and
lods
push
or
dec
insl
jb
sbb
nop
jl
lcall
and
mov
inc
int3
pop
adc
and
xchg
sub
enter
dec
aad
dec
testb
mov
ret
and
insb
xor
push
jmp
xlat
push
aam
mov
imul
je
pop
push
cwtl
lock
sarl
push
sahf
in
xor
or
jo
or
popf
fs
or
add
add
xchg
sti
push
dec
addr16
adc
xchg
sbb
in
pop
dec
pushf
lret
add
mov
ss
pop
or
test
add
and
xchg
add
mov
sbb
adc
push
adc
lock
cmpsb
and
lds
inc
mov
xor
adc
bnd
xchg
into
test
pop
xor
and
mov
add
cmp
roll
add
cmc
das
lock
daa
add
push
inc
into
mov
sarl
adc
add
mov
jo
jbe
add
addl
stos
nop
inc
cwtl
mov
sub
cli
mov
pop
push
adc
push
and
sub
mov
hlt
out
push
add
push
sbb
pop
sub
lret
arpl
dec
xor
jle
jecxz
pushf
inc
xadd
pop
pop
loop
inc
push
pop
cmp
enter
pop
add
out
sub
jmp
aas
push
add
push
cmp
out
sbbb
fdivr
sub
mov
aas
cmp
dec
subb
add
xor
mov
add
stc
cli
push
mov
xchg
jno
add
clc
mov
cmc
add
dec
hlt
push
mov
fcmovb
add
or
imul
adc
push
enter
jnp
mov
fst
xchg
sbb
cmp
mov
mov
pop
shr
pusha
bound
and
mov
aas
add
pop
mov
push
jmp
pop
sub
aad
rcrl
jl
cmp
decl
push
sub
push
js
add
lret
sub
mov
mov
inc
adc
push
outsb
add
xchg
call
cmp
insb
xorl
push
bound
push
xchg
fwait
xchg
and
add
push
mov
adc
lods
xor
addb
mov
or
fldcw
mov
push
add
mov
and
lock
andb
cmpsl
add
and
lock
jo
gs
mov
mov
ljmp
fcoms
add
cmp
call
arpl
and
sub
mov
cmpsb
test
dec
repnz
lret
out
mov
mov
or
sub
cmp
rolb
pop
sbb
andb
je
pop
movsl
daa
ds
into
leave
xor
mov
xor
pop
sub
xchg
cmc
add
sbb
cmp
or
gs
xor
or
xchg
nop
push
popa
or
jne
adc
jns
mov
dec
push
leave
pop
fistps
add
inc
ljmp
cmp
loopne
cltd
xor
cmp
aas
mov
jne
bound
in
add
xorb
sub
add
cld
mov
into
sbb
mov
out
lahf
ret
movaps
idivb
mov
inc
mov
subl
inc
enter
push
mov
daa
lret
mov
sub
adc
rcrl
outsl
aad
repnz
add
sbb
jecxz
cmp
dec
jae
sub
fsubr
adc
gs
adc
and
js
mov
xchg
push
scas
xchg
stos
mov
cmpsb
jecxz
add
cmp
adc
shll
add
jnp
lret
addl
push
ja
add
adc
and
je
fidivrl
dec
mov
mov
mov
shrb
lret
mov
push
jb
and
mov
push
cmpb
add
mov
jp
shll
and
movsb
add
mov
cmc
popf
cmp
add
xchg
clc
aad
push
xor
pushf
adc
cmp
imul
in
adc
outsb
push
or
add
bound
mov
or
add
insb
and
inc
add
subb
mov
pop
push
scas
and
pushf
pusha
add
sub
jle
outsb
pop
pop
jge
pop
insl
dec
and
add
daa
shll
jbe
ss
test
repnz
incl
mov
inc
std
pop
mov
nop
cmp
loop
add
mov
addr16
jbe
out
pop
dec
add
nop
addb
add
pop
fldpi
sub
scas
dec
jmp
out
jbe
jno
xchg
add
mov
cmpb
add
int3
dec
pop
clc
and
loopne
sbb
jecxz
push
sub
test
rol
or
add
je
adc
decl
nop
dec
shlb
pop
xor
shlb
xchg
mov
push
cli
add
sub
cmp
in
sbb
int3
scas
mov
mov
mov
and
add
dec
test
leave
mov
rorb
cltd
add
call
push
arpl
cmp
add
xchg
and
repz
ror
add
testl
xchg
or
sub
in
add
fsubrs
shl
push
gs
mulb
in
jle
filds
dec
movsl
test
jmp
mov
enter
mov
cli
daa
mov
leave
xor
nop
push
aam
xor
add
dec
mov
repz
sub
std
pop
mov
add
dec
mov
loope
out
nop
cmpsb
xor
sbb
in
ret
adc
mov
pusha
adc
xor
jo
cmp
mov
add
mov
test
or
or
popa
jno
cli
xchg
adc
arpl
pop
mov
or
jne
popa
push
ja
jle
pop
cld
insb
mov
push
mov
xchg
mov
push
data16
in
inc
add
imul
xor
push
mov
xor
outsb
cmp
fxch
ljmp
push
add
pop
imul
lea
aas
rcrl
scas
push
stc
lret
jle
adc
in
mov
fldenv
das
add
mov
pop
pop
jb
ret
out
adc
jle
std
daa
xchg
test
add
addr16
jnp
dec
inc
pop
test
das
add
sar
sbb
xchg
xchg
xor
push
cwtl
sub
or
add
fisttps
pop
or
mov
into
mov
and
push
mov
push
and
sub
add
and
mov
sbb
jae
mov
out
sub
push
cmp
mov
out
inc
in
stc
pop
and
shr
call
in
xchg
dec
cmp
dec
movsb
loopne
bound
add
inc
xchg
std
lcall
out
scas
into
mov
cmp
inc
iret
mov
testl
pop
adc
std
nop
push
add
in
inc
dec
rolb
xor
xor
xchg
and
push
xorb
sbb
notl
shlb
cmp
outsb
pop
push
mov
repz
pop
pop
je
sbb
notl
test
enter
fmull
sub
mov
push
faddl
dec
jmp
mov
add
sub
loopne
add
mov
add
arpl
mov
cmpb
subl
mov
mov
test
cmc
pop
mov
inc
ja
scas
loopne
adc
aad
repz
or
daa
in
adc
jno
int3
adcl
pusha
push
js
cmc
fiaddl
add
sbb
xchg
loopne
pop
mov
xlat
sbb
push
dec
inc
flds
lahf
lret
dec
push
clc
sahf
adc
push
mov
scas
sbb
jecxz
aad
or
sbb
cmp
mov
dec
mov
xor
mov
pop
and
jmp
adc
lds
cmpsb
cmp
icebp
jo
cwtl
imul
lea
jg
or
gs
inc
or
stos
inc
sub
sbb
add
imulb
jg
mov
push
sarl
add
ljmp
jp
add
std
arpl
out
dec
dec
cld
sarb
repnz
push
mov
std
testl
shr
cmp
push
in
rol
add
outsb
add
cmc
out
test
lods
pop
je
cltd
mov
add
sub
jge
xor
sub
jp
dec
sbb
cmp
cmpsl
call
add
stos
subb
into
mov
add
and
pop
add
repnz
mov
out
add
xchg
scas
ds
xor
push
imul
lea
pop
shrb
fisttpll
jl
xor
adc
mov
and
add
or
int3
cmp
ds
inc
cli
insl
sbb
adc
ficompl
pusha
rol
push
clc
pop
mov
cmp
jae
mov
xchg
add
xchg
add
lret
data16
add
or
inc
repnz
cmp
nop
cmp
pusha
loop
outsl
pop
dec
repnz
das
enter
or
daa
pop
test
lods
sarb
push
pop
fsts
imul
and
inc
add
jg
sbb
int
sbb
add
xchg
cmp
pop
add
int
or
insl
loopne
nop
add
dec
loop
add
shlb
sbb
lods
jo
pushf
loope
add
iret
xchg
push
xor
mov
vmwrite
std
and
imul
inc
fsubp
add
mov
add
outsb
in
adc
test
jnp
add
jmp
mov
lea
rcrb
stos
out
inc
repnz
ret
mov
lahf
xchg
add
out
test
mov
xchg
js
jle
pop
mov
into
add
out
push
dec
lods
imul
pusha
pop
add
xchg
imul
ds
push
loope
enter
cmp
aaa
aam
jno
pop
add
pop
int
add
mov
leave
lret
imul
call
fstpl
sbb
addr16
push
lahf
cs
mov
out
ss
in
inc
xor
xchg
test
cmp
jl
add
rorl
push
lock
add
andl
pop
push
out
adc
jl
fwait
mov
xchg
shrb
xor
nop
and
loope
or
and
xor
push
mov
out
xor
add
pop
orl
pop
call
pop
mov
add
leave
pop
push
add
stos
aam
daa
xor
add
dec
or
add
int
pop
movsb
add
stos
insl
cmpsl
adc
fcomp
aas
add
scas
divb
sbb
xor
sub
add
aam
mov
test
popf
adc
movsb
add
mov
loopne
scas
cmp
aam
daa
pop
push
add
pop
mov
pushf
gs
add
pop
dec
loop
outsb
btc
push
xor
mov
bound
arpl
push
pusha
and
push
popa
movsb
adc
xchg
dec
jnp
xor
mov
or
add
hlt
push
jno
add
dec
inc
mov
pop
mov
dec
pop
jbe
in
testb
cs
mov
lea
lods
inc
cmc
std
ds
scas
add
dec
xor
inc
pop
scas
or
dec
mov
popa
jo
cmpsl
stos
and
cmp
add
push
and
insl
xchg
or
ds
inc
pusha
cmp
in
or
add
jnp
and
repnz
xlat
xor
scas
pusha
out
cmp
iret
into
jle
lds
push
sbb
orl
imul
inc
jecxz
insl
rclb
xor
inc
jnp
cmp
dec
and
aad
lds
and
insb
adc
stos
sub
mov
fidivl
ret
inc
add
addb
pop
xor
in
mov
movb
fsubl
hlt
and
cmp
out
in
sub
add
jl
insl
xchg
ret
cmp
loopne
pop
add
mov
in
pop
add
adc
sbb
xor
add
dec
xchg
add
xor
sbb
or
or
test
xor
test
jns
push
inc
mov
and
cltd
and
sahf
or
lret
insb
enter
ljmp
pusha
aad
and
add
addr16
repz
xchg
testb
add
add
and
sbb
add
iret
nop
fwait
and
repz
jbe
push
rolb
ds
add
mov
push
add
loopne
push
lret
cwtl
rolb
pop
cmpsb
mov
mov
sbb
mov
add
out
inc
xor
roll
add
xor
rcrb
arpl
xchg
adc
mov
jnp
add
sbb
xor
inc
not
clc
mov
push
jmp
fidivs
stos
mov
xor
add
mov
xchg
ss
es
sbb
lcall
add
mov
pusha
fwait
jae
sbb
add
daa
icebp
cmp
cvttps2pi
and
or
mull
jne
sub
sbb
pop
mov
popa
loope
xchg
pop
add
test
jno
jge
add
cmpsl
repz
inc
and
add
ds
std
xor
mov
fnstenv
dec
mov
jne
add
sbb
add
and
mov
add
inc
rcrb
or
mov
mov
jae
add
mov
or
orb
cmpsb
xchg
sub
gs
shl
hlt
adc
in
sbb
in
sub
out
adc
int3
sub
jl
add
cmp
sar
out
das
sbb
mov
cmp
sub
add
sti
push
fs
sbb
lret
stc
jmp
pusha
nop
cmp
bound
add
pop
xor
sub
call
aam
in
sub
pusha
push
push
xchg
cmp
fstpl
roll
sub
test
or
pop
inc
mov
pop
add
test
cmp
pop
loopne
je
adc
xor
add
nop
dec
pusha
inc
jns
cs
or
mov
cwtl
cmp
sti
cmp
xor
loopne
test
pop
pop
js
divb
add
cwtl
or
outsl
sub
cmp
push
jp
sub
ret
push
xor
pop
shrl
jl
mov
cmp
add
test
push
das
popa
push
xchg
push
out
ret
out
add
inc
loopne
pop
dec
into
add
xor
test
mov
xchg
lcall
xchg
cmp
jp
mov
lock
mov
jne
xor
cmp
push
sbbb
add
xchg
nop
inc
sub
ds
push
push
loopne
mov
out
inc
pop
sbb
jmp
insb
add
mov
das
fiaddl
pusha
repnz
adc
outsl
pop
sbb
les
shlb
push
push
je
add
in
ja,pn
jle
cwtl
int
add
test
push
pop
aad
lret
add
or
or
pushf
pop
inc
mov
jle
jg
pop
pop
sbb
orb
and
cmpsb
inc
scas
jmp
adc
jecxz
lret
xchg
iret
out
repz
sub
jle
add
pop
mov
sbb
jb
inc
cli
pop
jbe
cld
lds
jmp
cmpsl
and
sbb
push
or
ja
cltd
shl
mov
and
cmp
jmp
movsb
ret
into
stos
les
bound
add
in
mov
mov
add
adc
mov
push
jo
or
in
ffreep
fadds
cmp
xor
in
add
aas
xor
adc
xchg
sti
mov
xor
jmp
add
fnstsw
xchg
pusha
hlt
dec
stos
pop
fsubrl
sub
adc
fprem
arpl
add
lock
sbbb
add
push
loope
inc
pop
mov
and
xor
xorl
push
push
push
shr
sub
es
test
in
xchg
cs
pop
sub
jl
sub
mov
push
mov
adcb
ds
aaa
mov
data16
add
shll
inc
add
add
sub
xchg
inc
xor
nop
test
movsl
filds
xor
jnp
loope
jecxz
add
shlb
in
pusha
sub
sbb
mov
mov
test
jo
push
mov
cli
inc
add
sub
adc
push
add
test
scas
xor
enter
sub
sarb
lahf
les
add
xchg
mov
data16
or
fisttps
jne
sub
cmp
imul
sub
incl
sbb
push
mov
adc
dec
dec
push
pop
mov
pop
mov
scas
lods
aaa
jno
mov
cwtl
paddusb
pushf
aam
es
sbb
add
mov
add
in
cs
rcr
out
sub
sbb
mov
mov
adc
sbb
fwait
and
mov
in
xchg
addr16
cld
pop
mov
add
stc
push
mov
ret
cmpsb
movb
sbb
xor
inc
std
mov
jno
xlat
test
repnz
jnp
add
aad
lahf
push
cmp
scas
push
movsb
add
dec
and
je
inc
jo
lods
lea
inc
sub
fiaddl
and
lcall
or
mov
clc
ja
mov
jo
repnz
pop
inc
mov
loopne
mov
push
insl
or
dec
nop
push
push
add
or
jo
mov
mov
adc
xor
bound
negl
push
and
or
sbb
xor
and
cmp
imul
fists
push
jl
out
adc
xchg
fstps
in
add
sub
lea
add
ss
adc
movsl
add
rorl
enter
pop
mov
fiaddl
mov
loop
pop
insb
jae
add
insl
jle
add
push
inc
pop
push
cmp
clc
push
add
lret
or
dec
dec
add
pop
or
and
xor
sub
dec
sbb
pop
cwtl
test
and
mov
add
daa
psrld
add
sbb
push
pop
add
pop
enter
xchg
int3
sub
cwtl
and
or
lret
push
into
enter
aaa
xchg
push
mov
jno
mov
pop
clc
mov
inc
pop
cmpl
std
and
add
gs
sbb
sub
inc
pop
push
mov
dec
jo
stos
sbb
andb
mov
dec
les
fadds
dec
fs
mov
pop
shll
nop
sub
add
sub
jno
push
add
leave
jge
mov
rolb
lret
lahf
fisttps
xor
test
fcoml
add
fs
andb
mov
bound
jne
add
enter
add
mov
and
sbb
outsl
and
js
das
lret
stos
icebp
ja
clc
inc
pop
imul
and
push
pop
add
pop
sub
add
jmp
pusha
es
int
or
outsb
scas
xchg
pop
push
jp
dec
cmp
push
aad
or
icebp
incl
sub
push
out
sbb
fadds
push
sarb
movzwl
bound
cmpsb
nop
in
pop
push
icebp
cwtl
ret
jo
and
xchg
test
xor
sahf
xor
inc
mov
pavgb
sbb
adc
lcall
cmpsb
push
sub
mov
loopne
inc
inc
add
jp
mov
scas
inc
add
dec
sarb
clc
jnp
repnz
adc
pop
pusha
inc
mov
xchg
mov
push
adc
outsb
sub
or
push
mov
and
lahf
mov
icebp
add
xor
in
addb
xadd
or
dec
loope
call
cltd
orb
int3
push
nop
jl
ljmp
pusha
cmp
imul
inc
push
cmp
or
jmp
jl
add
leave
adc
mov
push
jnp
xor
jae
fldt
pop
or
and
xchg
xor
push
jl
pmulhuw
mov
fucom
sbb
lods
dec
fists
in
push
add
pop
mov
negl
rorl
add
xor
std
and
xchg
fnsave
dec
bound
stos
push
mov
adc
xchg
andl
xor
data16
or
int3
mov
cmp
sub
jp
rclb
pop
add
mov
adc
xchg
rcrl
cmp
mov
adcl
hlt
cltd
call
decb
dec
rclb
rclb
mov
jecxz
xor
add
mov
inc
std
and
adc
in
xchg
mov
out
mov
cmp
scas
sti
jge
rcr
cld
or
xchg
add
stc
aaa
xor
and
imul
mov
sbb
sub
iret
adc
cli
inc
or
adc
mov
dec
push
test
cmp
call
jno
jns
mov
scas
cltd
insb
stos
jo
pop
mov
call
add
sahf
jle
ss
and
push
call
arpl
mov
sbb
mov
cmc
lahf
add
mov
add
pusha
repz
add
loope
adc
jns
cmp
js
mov
ret
mov
iret
xor
push
mov
testb
add
pushf
ja
leave
cmc
insl
rorb
add
mov
or
popa
jb
lock
rcll
pop
inc
inc
mov
and
push
cmp
cmp
jnp
add
mov
aam
push
das
dec
sbb
pop
add
lods
xchg
mov
add
xchg
test
jmp
cmp
add
jne
int3
inc
or
into
int
adc
lahf
add
add
aaa
ja
pop
clc
push
lret
out
cmp
and
or
add
adc
sbb
and
dec
push
adc
and
paddd
add
hlt
popa
aam
inc
repz
mov
sub
clc
arpl
decb
mov
add
ret
mov
jg
cmp
js
add
or
jo
sub
jmp
fimull
xor
xchg
pop
jbe
sub
out
mov
xor
sub
pop
mov
loop
or
jne
push
stos
jecxz
xor
cmpsl
inc
and
mov
pop
in
je
push
out
add
adc
call
jmp
mov
cmp
xchg
aas
add
iret
enter
fsubrs
clc
add
pop
mov
out
shrb
lea
cmp
and
add
stos
hlt
inc
xchg
popl
mov
jmp
stos
movsl
lods
int3
in
in
inc
mov
mov
fcoms
outsl
call
stc
xlat
pop
sbb
clc
add
mov
inc
cmovnp
lock
xchg
sbb
das
sub
xchg
jno
nop
jns
repz
frstor
pushf
fwait
or
xchg
xorl
add
push
jo
add
mov
mov
or
sbb
add
clc
lods
mov
mov
sbb
add
xchg
out
push
lcall
test
add
scas
or
mov
fcoml
xchg
aam
add
xchg
dec
divl
add
adc
jne
cmp
dec
add
out
enter
sbb
add
stos
and
loope
repnz
add
push
mov
jle
add
hlt
jnp
jb
cld
mov
and
das
cmp
pop
lods
add
sbb
pop
xchg
inc
and
dec
add
jnp
mov
cmpsb
scas
add
leave
pop
ds
add
pushf
cmovge
fisubrl
pop
or
sbb
loop
xchg
jg
adc
push
xor
out
add
into
sarb
pop
xchg
add
out
and
or
push
mov
es
jne
add
out
push
and
and
push
add
jno
fwait
subb
loop
aam
flds
dec
and
dec
aad
aas
push
jns
and
xchg
popf
add
jmp
add
push
aas
inc
dec
data16
cmp
cmp
add
movsb
and
fdivrp
mov
enter
popa
addr16
sub
aam
xor
lods
lods
add
cmp
cmp
enter
scas
andps
mov
scas
dec
fdiv
pop
adc
add
stos
mov
sbb
inc
shlb
cmpsl
dec
jl
call
jp
jl
or
mov
jns
sub
into
or
pop
pop
sti
dec
inc
add
insl
xor
mov
jge
sbb
inc
add
adc
pop
idiv
cli
add
mov
enter
nop
clc
andl
testb
push
xchg
mov
hlt
xchg
add
add
adc
incb
aam
rcrb
cli
inc
add
cs
push
aad
out
data16
in
mov
pop
push
test
xchg
push
add
hlt
icebp
jns
stos
gs
add
dec
testl
add
mov
xor
mov
mov
mov
push
gs
jge
jno
mov
pop
outsl
shl
fwait
mov
inc
jne
pushl
and
jo
cmp
jp
xchg
xchg
and
xchg
inc
lock
sbb
call
and
and
add
xchg
push
data16
enter
sbb
rolb
xor
xor
or
shll
push
mov
shrb
or
xor
into
je
jg
mov
adc
scas
and
sub
push
arpl
jg
jge
mov
imull
in
mov
cmp
test
or
dec
fs
cli
nop
sub
test
dec
jne
ret
into
and
es
sub
inc
cmp
addl
adc
subl
pop
adc
adc
adcb
and
add
inc
stc
xchg
jg
test
mov
push
adc
cmp
lcall
fstl
xchg
xchg
fists
cli
add
addr16
add
xchg
lds
add
jp
sub
sbb
les
loope
push
dec
jl
movsl
ss
and
mov
mov
icebp
andl
add
mov
fiaddl
int
mov
add
cmpsb
mov
jl
jmp
sbb
iret
mov
test
ss
adc
lahf
sarb
nop
cwtl
or
add
cli
xchg
add
cmp
add
aad
sub
mov
sar
int
daa
sub
mov
add
int3
rolb
into
add
pop
add
push
pushw
or
mov
insb
in
movb
dec
xchg
jae
daa
jecxz
add
shrl
mov
outsl
repnz
cmc
mov
ret
dec
enter
cmpb
add
sbbb
xchg
add
mov
mov
pop
hlt
cmp
mov
testb
cmp
mov
and
loope
cld
jnp
ss
xchg
lds
popf
add
fucomp
lret
bswap
hlt
inc
les
je
push
mov
inc
enter
inc
push
inc
cmp
push
jecxz
add
xor
mov
fsubs
flds
ret
add
fidivrs
add
mov
loopne
out
adc
pusha
shll
gs
frstor
pop
push
mov
jo
les
mov
fimuls
fucomip
mov
loope
push
cmp
add
jno
sbb
int3
add
mov
sub
add
mov
imul
add
and
sub
movl
add
or
add
arpl
dec
cmpsl
andb
lahf
call
test
mov
lret
add
jg
xor
outsb
hlt
sub
ds
jecxz
ret
orb
sbb
loope
ljmp
lock
fs
add
jae
sti
adc
pop
stc
pop
lret
daa
fwait
mov
pushf
xchg
faddl
addr16
jl
sti
jge
mov
mov
lea
pusha
loopne
push
aaa
dec
loop
and
add
rcl
dec
cwtl
out
adc
cmp
sub
out
ss
test
and
jbe
maxps
sbb
je
orb
dec
das
cwtl
mov
bound
xchg
sbb
les
add
dec
cwtl
jno
cmp
imul
sub
xor
mov
jns
lods
dec
mov
leave
mov
add
js
inc
pushf
xor
adc
xchg
out
les
jl
inc
clc
push
dec
repz
adc
test
pop
js
xchg
gs
inc
mov
int3
push
xchg
test
sbb
mov
pop
rclb
cmp
mov
add
mov
adc
cmp
mov
rclb
loop
xor
push
pop
leave
pop
out
xchg
rorb
mov
mov
ret
cmpb
aaa
add
and
dec
pop
add
pop
cmp
push
adc
loopne
sub
loop
sbb
jbe
fadds
pop
xchg
cmc
fistpll
clc
leave
and
add
jge
loopne
std
xchg
addl
adc
add
inc
andb
js
cs
shlb
fsubrl
adc
mov
cltd
cmpsb
dec
add
mov
rclb
adc
daa
add
sbb
add
cmp
insb
loopne
jle
add
xor
lea
add
arpl
add
jmp
cwtl
rcrb
mov
sbb
or
jp,pn
add
mov
or
mov
pcmpgtd
push
mov
mov
imul
out
push
add
sbb
sub
mov
xchg
cld
popa
and
jmp
pusha
gs
push
lcall
sub
mov
daa
jae
cmpb
inc
cmp
add
adc
scas
data16
outsb
xlat
mov
sub
add
mov
cli
fstpt
inc
or
jmp
aaa
pusha
mov
xor
dec
hlt
inc
add
mov
push
addb
jge
ljmp
stos
out
clc
adc
pop
aad
ror
xchg
and
add
out
mov
stos
movsb
jbe
add
sub
loop
add
out
pop
stos
imul
cmp
les
adc
dec
adc
and
push
dec
push
jg
dec
enter
add
jbe
add
enter
jne
div
jmp
add
xor
jne
add
and
cld
sbb
rolb
sbb
jno
add
fsubrs
pop
xor
cmp
sbb
outsl
add
xchg
xor
jns
cmp
js
popf
pop
mov
fbstp
add
jae
push
push
sbb
jne
cmc
sub
out
dec
outsb
hlt
leave
add
mov
rolb
mov
inc
test
repnz
fs
add
xchg
push
js
dec
dec
push
mov
pop
icebp
dec
fstpl
test
add
mov
inc
inc
add
pop
push
pop
push
inc
scas
dec
loopne
fbstp
repz
push
fcom
int3
add
pop
fnstenv
mov
inc
add
bound
push
mov
pop
jbe
pop
jnp
push
test
pushf
shrb
jb
mov
jge
ja
test
test
lahf
pop
xchg
add
into
sub
push
sub
enter
mov
incb
lock
xor
add
lea
cmp
or
push
jp
add
shrb
leave
test
fucomip
testl
sti
sub
jg
add
or
adc
enter
inc
stos
fisubl
lahf
push
add
push
aam
and
pop
mov
nop
jl
inc
and
adc
mov
lcall
adc
add
xor
ss
add
cmp
xchg
and
or
inc
cmc
hlt
jg
testl
push
pusha
ja
adc
out
dec
add
pop
clc
dec
xor
add
lahf
fs
add
or
lock
pop
ss
xor
xor
int
push
mov
dec
lcall
and
scas
add
or
pop
daa
lods
popf
cld
push
push
add
mov
and
cld
lret
js
movsb
xor
mov
popl
xor
push
dec
ljmp
mulps
pushf
or
add
jne
out
mov
rolb
push
clc
int3
lret
add
adc
mov
aaa
js
add
xor
xchg
outsl
xor
roll
sub
mov
xorl
push
pop
pop
icebp
cs
addb
jmp
icebp
add
push
and
test
out
lock
or
xlat
add
idivb
sub
add
movsl
adc
enter
stos
mull
gs
bnd
jecxz
int
sbb
add
sub
adcb
test
aas
in
scas
add
punpcklbw
xchg
jo
dec
jecxz
mov
or
movb
mov
push
adc
rcll
pop
stos
mov
mov
andl
mov
addb
push
sub
and
inc
in
xor
lret
mov
call
scas
xchg
xor
inc
mov
std
scas
movb
mov
loopne
add
sbb
out
cmp
add
clc
call
lods
adc
xchg
cld
sub
inc
fistpll
lcall
add
test
add
adcb
js
aad
push
sbb
jne
mov
add
sub
lock
xchg
add
out
and
push
adc
fdivr
in
pop
hlt
or
mov
adc
jb
jecxz
aad
insb
add
mov
inc
pop
in
lret
push
aaa
inc
inc
inc
adc
pop
add
push
ljmp
std
pop
jp
jae
mov
dec
add
mov
out
fcmovu
pop
aaa
cmpsl
ds
add
xor
push
add
outsl
push
fildll
lahf
add
lods
push
shl
ror
cmp
addl
xchg
out
rcrb
mov
jle
push
add
cmp
loopne
dec
lret
fisubrl
inc
xchg
push
xchg
mov
add
inc
mov
das
mov
pop
add
add
cwtl
rcr
cmpsl
push
pop
cmp
inc
sub
push
adc
and
xor
mov
mov
adc
push
dec
lret
lods
and
sarb
sbb
test
fsubrs
mov
aaa
jno
add
sahf
sub
out
or
mull
sub
mov
sbb
dec
out
or
je
insl
add
add
das
sbb
ror
mov
rolb
dec
xor
mov
aad
and
adc
sahf
shr
add
jbe
sub
data16
sbb
dec
sti
add
sub
ret
rcrl
fiadds
cmp
cmp
mov
jecxz
jo
cmp
adc
loopne
xchg
in
add
push
push
jns
into
lahf
idivl
add
push
add
mov
je
sarl
pushf
jge
ret
push
sbb
add
mov
aaa
pop
pop
ja
add
imul
daa
and
or
inc
adcb
gs
dec
add
sub
dec
add
adc
das
push
add
out
aas
push
push
icebp
test
mov
add
test
nop
adc
jbe
xchg
add
adc
addb
repz
cltd
orb
pop
mov
jne
rcrb
add
sub
mov
and
outsb
add
inc
int3
inc
inc
sbb
dec
mov
add
test
inc
add
js
loope
nop
push
and
lret
ss
mov
sti
popa
in
mov
cwtl
add
jge
ret
loop
hlt
ret
ds
outsb
cmp
fists
cmpsb
testb
cmpsl
pop
ret
mov
add
adc
push
stos
test
ret
stc
cmpsl
addb
addb
test
mov
inc
cmp
add
pop
adc
mov
fwait
ret
in
push
das
pop
add
mov
rolb
es
repz
xchg
fwait
add
jae
sbbb
add
xor
mov
andb
sti
int3
mov
sbb
xchg
adc
sbb
cmp
cmp
sbb
pop
and
testb
mov
outsl
aad
inc
and
pop
das
mov
xchg
xor
add
mov
clc
cmp
dec
lds
push
loope
or
in
and
aas
pop
ljmp
or
es
mov
dec
nop
and
jae
add
sbb
loopne
rcrb
add
dec
or
add
sub
xchg
jbe
add
push
test
sbb
cmc
mov
int
jbe
add
fnstcw
dec
jmp
negb
inc
jne
in
pusha
aaa
fwait
mov
cld
mov
jle
iret
or
or
add
xor
popf
mov
shrl
mov
mov
fadds
add
inc
fwait
loope
and
sub
cmp
push
pushf
movsl
add
out
fwait
rcrb
jno
test
hlt
add
int3
cli
push
jecxz
int
pop
mov
add
test
push
push
mov
add
loope
cmp
bound
clc
pushl
and
int3
xor
push
jecxz
dec
les
add
sarl
stos
rorb
loop
and
sub
add
jnp
orb
sbb
test
stos
xchg
cwtl
or
dec
mov
fwait
das
push
xchg
movsl
add
idivb
jnp
es
cmp
out
mov
inc
decl
dec
add
loop
or
and
cmp
and
mov
movsl
sahf
jmp
pop
xchg
mov
ljmp
fcomi
mov
lock
xor
push
dec
add
cmp
inc
mov
sbb
mov
cmpsl
int
sbb
addr16
sub
adc
sahf
push
adc
out
inc
xchg
insb
mov
cmpsl
and
jbe
mov
out
sbb
in
sub
sar
fiaddl
cld
int3
mov
fildl
or
push
dec
cmc
pop
ret
mov
xchg
ja
push
ljmp
push
dec
imul
mov
ret
in
push
test
sbb
push
push
add
gs
ljmp
xor
in
lock
loopne
cli
xchg
js
add
nop
fstl
jmp
out
lcall
push
sbb
aas
sub
adc
push
mov
jo
aaa
mov
pusha
xchg
mov
inc
push
mov
pop
faddl
divb
add
xor
pop
add
lea
add
mov
and
imul
out
leave
lcall
xor
inc
or
pop
dec
add
dec
push
xchg
call
test
insb
aam
inc
sahf
mov
inc
lret
dec
add
dec
in
add
sub
pop
mov
push
ljmp
inc
out
jl
add
shlb
xor
jbe
add
pop
stos
ja
add
mov
xor
fbstp
xchg
je
xor
jp
lcall
inc
outsl
rorb
ljmp
aaa
mov
loope,pn
in
inc
ds
mov
xchg
add
pop
sub
inc
mov
jmp
xor
ret
clc
addl
pop
push
push
addl
or
stos
or
lahf
stc
pop
adcb
add
sahf
lret
jle
aaa
ds
pop
and
add
icebp
ret
mov
fiadds
mov
add
lea
loope
lcall
movsb
mov
inc
inc
mov
jle
in
pop
andnps
out
adc
jae
sub
jmp
sahf
clc
stos
mov
adc
push
add
jp
xchg
mov
mov
mov
xchg
mov
mov
and
add
inc
sbb
or
sbb
je
push
mulb
mov
jne
test
cmpsb
lds
mov
mov
sub
inc
or
fs
cltd
dec
mov
cmpsl
adc
add
sarl
jg
jl
das
stos
enter
dec
inc
or
jecxz
mov
jp
mov
dec
sar
test
sahf
cmp
sbb
test
sbb
mov
loope
mov
fstpt
add
mov
lahf
add
leave
insb
add
mov
out
add
jo
into
lret
dec
pop
sub
pop
pop
sub
clc
fs
add
push
add
add
subl
nop
dec
or
nop
addr16
sub
xchg
pushf
dec
add
jb
push
jnp
sub
movl
fsubrl
inc
les
add
jg
add
sub
setno
and
mov
sar
cmp
les
dec
dec
int3
push
xchg
add
fcoms
out
loopne
sbb
pop
clc
and
lock
adc
add
shll
mov
mov
fildl
jb
xlat
cmp
pop
mov
adc
sbb
rclb
inc
jmp
loopne
fistpl
add
xchg
sarb
ljmp
call
loope
jbe
in
jmp
dec
cmp
loope
lock
fadds
ret
mov
push
push
movsl
inc
pusha
add
push
add
cmp
icebp
xor
adc
orl
pushf
data16
loopne
push
or
or
mov
add
lods
mov
addr16
sub
cmc
pushf
in
push
mov
pop
fadds
insl
mov
mov
imul
add
cmc
loopne
insl
fcoml
jmp
add
cmp
and
test
sub
das
loop
and
pop
xor
xor
sub
sub
in
mov
add
inc
and
fbstp
mov
sbbb
clc
or
or
ja,pn
pop
dec
inc
pop
cwtl
adc
aas
loop
imul
inc
jns
pop
jo
push
mov
sbb
dec
loop
jl
fisubs
shlb
cli
mov
aam
add
popf
xchg
js
cmp
and
push
dec
nop
pusha
add
adc
add
out
xor
iret
fdiv
rorb
push
add
xorb
lock
jle
jg
push
jecxz
dec
movsb
and
pop
fcom
cmpb
add
push
in
mov
dec
cmp
and
add
or
adc
dec
cwtl
xorb
popa
testl
or
mov
sub
aad
jl
pushl
cwtl
ds
scas
cmp
dec
in
mov
sbb
cmpsl
dec
cmp
inc
lock
cs
mov
add
sbb
ljmp
and
xchg
cmp
inc
mov
int3
and
nop
add
pop
dec
movsb
addr16
add
lea
daa
add
push
xchg
cmp
jb
pop
out
movsb
add
test
rclb
aad
incb
stos
jp
push
adc
stos
mov
stos
sahf
test
clc
jle
mov
lret
pop
dec
imul
add
insl
xchg
fs
adc
inc
cmp
add
repz
cmpsb
add
shlb
push
jp
call
mov
in
dec
enter
mov
test
dec
lcall
add
adc
lretw
out
ret
push
add
lds
sub
cmp
and
sub
ljmp
push
add
ret
mov
xchg
inc
add
jp
sbb
add
push
xor
lods
dec
push
or
xchg
test
das
lcall
mov
mov
sub
loop
push
mov
inc
jnp
mov
xchg
lods
inc
inc
mov
jge
pop
aaa
lret
enter
push
cmp
out
cmpsl
fiadds
push
dec
rol
ret
insl
je
aaa
enter
add
jns
inc
sub
addr16
std
ds
push
lret
jne
ss
shrl
jbe
sub
xchg
pop
sahf
arpl
xorb
mov
jmp
add
call
xchg
or
hlt
cmp
in
data16
nop
pop
xchg
sbb
mov
fnsave
sarb
sbb
movsl
dec
mov
enter
in
cmpsl
pop
inc
add
push
mov
xor
sbb
lret
cmpsl
in
sbb
leave
cmpb
loop
dec
cmp
lods
scas
cli
xor
cltd
cmp
stos
mov
pop
add
repnz
adc
cmp
add
jbe
sbb
add
adc
mov
jo
stos
adc
xchg
jle
ja
lcall
scas
jmp
cli
shrl
outsl
add
aaa
push
push
lock
ja
in
or
jnp
xchg
cmp
jmp
out
pop
ficoms
pop
scas
mov
in
pop
lret
adc
push
fisttpll
arpl
xorb
jmp
cmp
fcom
add
or
lret
ret
dec
mov
into
jnp
shll
push
mov
dec
add
out
cmp
add
cmp
dec
roll
or
daa
push
pop
push
fmul
adc
and
flds
push
dec
lods
shl
or
add
hlt
mov
adc
sbb
add
mov
add
daa
or
js
add
add
cs
popf
dec
shlb
add
and
cwtl
into
testl
fildl
and
les
dec
add
fsubl
inc
add
das
mov
clc
push
pop
push
mov
mov
cli
xor
add
into
mov
aas
rorb
flds
xchg
movsl
add
aam
push
les
push
add
cmc
mov
arpl
and
imul
push
and
mov
in
mov
add
in
mov
inc
xor
mov
mov
xor
das
mov
pushf
aad
adc
pop
or
inc
sbb
xor
dec
sbb
or
ret
cmp
test
addl
xchg
jle
lock
add
push
inc
pop
push
mov
add
mov
add
pusha
lea
scas
adc
inc
mov
push
imul
jne
fidivrl
dec
xchg
adc
filds
subb
daa
popf
mov
or
out
or
jg
add
sbb
lds
pusha
pcmpeqw
add
fs
xor
hlt
rcrl
pop
fwait
data16
add
sbb
test
sub
cmp
adc
stos
ret
sub
mov
scas
inc
cwtl
jl
add
mov
pusha
xchg
add
fwait
ret
scas
iret
divb
in
scas
inc
jns
aas
sub
test
les
pop
call
add
bound
shrl
jmp
pop
popf
jae
in
cld
or
loop
jnp
aas
mov
dec
out
mov
cmp
lock
mov
add
out
shlb
daa
add
addb
icebp
add
dec
aad
add
jmp
xor
dec
call
dec
jnp
inc
pop
and
cs
cwtl
push
add
sahf
mov
cs
scas
js
push
or
pop
leave
add
push
push
call
or
arpl
in
mov
cmc
int3
jp
arpl
out
pop
add
in
push
pop
sub
cmp
add
xor
leave
push
jmp
ja
jl
pop
cs
add
push
mov
jecxz
or
add
hlt
in
cmp
pop
mov
xchg
ss
mov
add
xlat
test
inc
jmp
add
sbb
jecxz
push
repnz
lcall
dec
lock
int3
js
aaa
ret
xorl
or
cmp
jbe
pop
fcomp
or
xor
jno
xor
xor
test
add
add
jp
adc
add
out
push
push
xor
rclb
outsl
notl
mov
push
xchg
adc
add
push
add
cltd
and
add
push
incb
add
or
cmp
cmpsl
push
add
test
add
sub
imul
bound
xor
xchg
mov
in
aad
lea
mov
lock
add
je
cmpsl
pop
pop
mov
add
or
add
popa
or
pop
aam
mov
or
clc
dec
in
sbb
mov
cmp
cmp
xor
add
add
rcrb
popf
mov
psllq
in
inc
out
add
insl
daa
or
rcll
mov
js
mov
rolb
imul
adcb
xor
and
pslld
pop
dec
nop
rol
pop
fisubrl
mov
cmpsl
imul
aam
es
mov
lahf
or
mov
jo
ljmp
rclb
add
pusha
ret
bound
jae
sub
sub
xlat
es
mov
cltd
adc
adc
rcll
mov
fcompl
pop
adc
or
andl
mov
push
cli
sub
xor
push
insl
addb
cmp
pop
jecxz
pushf
imul
je
pop
in
cmp
or
or
push
sub
je
inc
shlb
test
movsl
push
jo
pusha
pop
clc
push
icebp
ds
add
sbb
int3
fs
mov
jmp
aam
fdivrl
jp
fwait
loop
movsb
stos
arpl
je
dec
add
adc
jmp
test
xchg
and
mov
and
outsl
mov
stos
sti
xor
add
sbb
rolb
pop
sbb
add
addr16
je
push
sbb
sbb
mov
fwait
pop
in
inc
cwtl
xor
js
jo
loop
or
cmp
or
add
cmp
inc
fwait
jmp
ds
imul
add
dec
cmp
sub
adc
push
imul
xorb
sbb
inc
incl
jmp
dec
enter
stos
mov
jl
add
pop
sbb
pop
and
add
mov
lea
mov
stos
push
jb
iret
push
rorb
sbb
lds
movsbl
xchg
pop
cmp
mov
fldcw
mov
cmp
or
add
lods
subb
mov
std
or
arpl
xchg
outsl
rcrl
push
add
xchg
add
aam
je
in
pop
mov
inc
movsb
pop
add
mov
adc
or
add
or
add
inc
test
sarb
das
fadds
inc
and
ja
add
sub
jg
adc
cmpsl
pop
dec
lahf
shll
arpl
push
icebp
pusha
add
in
lret
add
loope
cltd
dec
cli
add
insl
js
dec
popl
mov
and
out
pop
push
repz
cmp
pop
mov
adcb
fs
in
sbb
lcall
stos
scas
int3
movsb
fldl
imul
test
add
dec
sbb
pop
shll
adc
xchg
sbb
clts
mov
pop
loope
mov
lret
fwait
cmp
es
js
in
fs
outsl
mov
add
lret
xchg
out
jnp
outsl
inc
daa
inc
data16
bound
push
jl
dec
add
adc
inc
or
pop
test
add
enter
add
lds
inc
dec
adc
jnp
cld
jbe
add
jecxz
jbe
mov
adc
test
add
std
call
mov
xor
sub
inc
mov
sub
pushf
out
add
xor
jne
push
add
call
sbb
add
dec
test
cmp
sub
cmpsb
xor
adc
mov
jo
xor
movsb
jne
add
pop
xchg
arpl
cmp
rcll
adc
cs
in
mov
pushl
add
inc
xor
sbb
mov
adc
int3
or
sbb
leave
inc
push
jge
rcl
fsubr
dec
push
or
lcall
and
or
in
dec
iret
loopne
jae
ja
fnstcw
jmp
jns
in
ds
test
add
roll
push
pop
add
pop
sub
inc
add
inc
cmp
stc
push
cwtl
or
add
out
adcb
adc
xchg
ds
push
lcall
pop
repz
addb
aaa
push
pop
cs
dec
xchg
dec
xchg
and
xchg
xchg
mov
add
sub
lds
jbe
cmp
mov
xor
jle
sub
xor
push
loopne
pop
clc
sbb
mov
lcall
out
xor
mov
into
mov
xchg
shl
jl
add
outsl
in
rcrb
mov
fadd
pusha
push
or
add
pop
add
or
jge
shll
pop
jp
cwtl
lock
cmp
add
cmp
arpl
adc
mov
dec
je
daa
scas
cmp
clc
pop
jmp
addl
rclb
and
xor
adc
dec
or
cmpsl
sbb
xor
sbb
add
in
adc
cld
push
incb
xor
cmp
add
jp
add
lret
inc
xchg
dec
adc
sbb
mov
pop
movsb
add
loope
xor
push
jne
lods
fistpll
das
pusha
inc
add
push
add
andl
in
aad
ret
add
inc
mov
cmp
cld
xor
cmc
mov
xchg
mov
add
ret
add
add
xor
rorb
or
insl
mov
xor
loopne
and
pop
and
sbb
aad
sub
add
decl
add
xorb
jno
js
mov
out
imul
add
add
mov
cmpsb
stos
jp
dec
bound
dec
add
in
pushf
xor
dec
lock
fwait
xor
mov
jne
dec
cmc
sub
pop
jbe
fdivrp
pop
xor
xor
add
popf
lock
adc
aam
xchg
add
popa
push
cld
mul
incb
push
lret
mov
mov
ficompl
scas
add
add
add
imul
dec
sbb
jnp
mov
add
add
mov
sub
les
inc
push
repnz
mov
fimull
dec
xor
rcrl
mov
iret
add
mov
fadds
push
test
push
and
cmpxchg
int3
idivb
jnp
adc
sub
jp
popf
loopne
sbb
push
in
pop
add
pop
loope
sub
scas
ret
jl
add
inc
xor
xchg
xchg
cmp
and
add
or
add
cmp
adc
push
inc
aas
mov
or
std
fwait
add
mov
repz
fisubs
scas
xor
inc
jbe
shll
mov
cld
test
and
add
inc
inc
jnp
mov
mov
mov
stos
fiaddl
test
add
scas
xchg
lahf
jle
cmp
icebp
jnp
xlat
insl
cltd
dec
sbb
fcoms
inc
rcrl
sbb
lods
add
jo
aaa
push
jno
push
pushf
lret
jns
aas
add
js
fiadds
sarb
hlt
cmp
idiv
sub
pusha
mov
mov
add
jecxz
xor
mov
add
movsl
repz
dec
aas
add
lods
push
xor
add
mov
fwait
dec
pop
adc
rcll
sbb
mov
rol
and
call
inc
add
in
scas
loope
push
cwtl
xchg
sti
sahf
add
imul
fucomip
add
dec
cmp
lret
gs
fimull
mov
adc
arpl
xor
sbb
rclb
pop
xchg
push
cmp
mov
shl
inc
and
iret
cmpsb
and
imul
mov
addb
int3
jecxz
mov
stos
pop
fldt
add
add
jecxz
insl
es
push
cld
add
loopne
sbb
dec
sbb
addb
and
frndint
scas
add
or
jmp
popa
mov
orb
loop
out
imul
in
iret
nop
sbb
or
rclb
cld
in
jnp
mov
add
jne
push
inc
or
xor
std
mov
out
dec
add
and
push
add
pushf
int
cmp
rorl
jb
mov
jp
add
fcmovnb
mov
jmp
mov
dec
rolb
lahf
pop
inc
mov
mov
pop
loopne
add
add
outsb
add
push
inc
pop
and
push
pop
test
dec
add
dec
mov
aaa
adc
mov
mov
push
add
xchg
daa
std
mov
xchg
sbb
scas
lret
scas
rcrl
cli
jae
and
mov
add
into
or
adc
lea
ja
insl
int3
sbb
rcrl
xchg
xlat
mov
add
lock
pop
mov
cmp
in
sbb
sbb
shrl
call
pop
aas
add
sub
pop
pop
add
cmpsl
mov
sbb
in
mov
sar
jnp
xchg
add
mov
enter
add
adc
mov
test
mov
add
cmp
dec
or
mull
xchg
xchg
loopne
mov
adc
mov
iret
jle
add
fisttpll
mov
pop
incb
insl
cmp
dec
pop
push
mov
and
cmp
out
mov
adc
pop
add
add
and
sub
sub
fildl
adc
add
fs
push
push
adc
imul
xor
push
das
push
mov
push
pop
scas
sti
cmp
pop
ret
add
dec
and
push
je
xchg
fidivrl
add
imull
push
cltd
es
nop
add
test
mov
or
jl
jecxz
xor
push
xlat
add
pusha
leave
popa
outsl
and
and
push
and
add
push
and
sahf
pop
push
xchg
mov
add
call
lret
fcomps
pop
inc
push
les
adc
sbb
call
daa
mov
outsl
test
pushf
mov
add
fisubl
dec
mov
rorl
add
cmp
dec
ja
mov
lds
sub
sub
adc
push
inc
pop
int
icebp
pop
lock
and
add
loop
test
repz
mov
dec
lahf
sbb
adc
loopne
add
cmp
adc
cmp
or
push
fadds
jne
mov
mov
ljmp
pop
lcall
add
cmp
imul
inc
cmp
push
sbb
aas
aad
lea
lcall
add
iret
sti
lret
cs
movsb
gs
aaa
dec
and
inc
xchg
test
inc
mov
push
add
xorl
add
inc
decl
dec
add
ret
mul
mov
or
push
fucom
out
lock
adcb
cli
cmc
add
add
ss
sub
mov
icebp
xor
pop
push
les
or
inc
into
ret
inc
mov
add
adc
rclb
mov
push
enter
push
xorps
and
dec
xor
inc
jns
prefetcht1
int
int3
in
xor
push
adc
add
push
rclb
rcrb
pop
shl
pop
jns
xlat
sub
mov
xchg
or
xchg
pop
xchg
inc
ret
add
fstpl
shl
mov
call
out
mov
insl
push
in
shrb
repnz
or
push
push
dec
sar
subb
cltd
add
adc
add
jbe
and
roll
xor
hlt
xchg
and
mov
or
roll
add
scas
mov
pop
sti
mov
hlt
push
jo
add
pusha
outsb
repz
sub
bound
and
notb
add
dec
mov
adc
push
aam
and
outsl
int3
cmc
call
inc
in
push
add
pop
xchg
loop
pop
xor
int
fsubl
push
inc
mov
push
je
pop
lret
movsb
add
mov
mov
add
adc
pop
mov
addl
pop
jmp
mov
jle
jb
nop
inc
push
add
push
add
shrb
cmc
push
repnz
push
adcb
cmpsb
add
mov
or
repnz
and
push
add
faddp
jmp
rolb
roll
in
jg
popf
push
or
cld
stos
sub
xchg
xchg
or
ret
mov
jle
add
mov
fnstcw
jae
ljmp
xlat
add
fsubr
les
cwtl
jno
add
sbb
cmp
xadd
adc
std
lahf
add
enter
add
fwait
push
jle
roll
rclb
add
cmp
sbb
jge
add
jl
lock
add
shrb
lods
add
es
mov
sbb
xchg
jnp
int
lcall
pop
lods
lock
cltd
or
xor
mov
inc
and
or
mov
and
and
out
lock
mov
stc
out
lock
pop
xor
pop
push
push
cmp
aaa
jecxz
xor
add
adc
sti
add
inc
clc
cs
int
add
mov
pusha
push
sti
mov
sbb
stos
push
sub
sbb
test
or
out
mov
jne
fs
jg
jnp
add
mov
and
sub
jp
jne
add
adc
bound
nop
fidivl
add
in
popf
rol
repnz
and
int
add
cli
out
cpuid
sbb
pop
pusha
popa
out
scas
in
add
sub
mov
pop
add
lods
or
in
mov
sbb
loop
lret
cmp
shll
jne
adc
ror
ljmp
xor
sarl
repnz
adc
lcall
inc
add
arpl
js
mov
testl
jns
sbb
pusha
mov
int3
adc
cli
add
add
or
mov
and
pushf
data16
inc
ret
out
sbb
shrl
adc
mov
dec
mov
lea
or
add
dec
push
or
jle
cmpsb
jg
pop
aaa
dec
lods
push
add
pop
testb
add
mov
dec
popf
adc
jns
add
outsl
xor
cwtl
test
inc
mov
push
mov
adc
cltd
sbb
dec
pop
add
mov
bound
adc
and
jmp
push
test
pop
lock
xchg
add
int3
scas
and
clc
push
andb
cltd
imul
add
setge
leave
rcrb
aad
cmp
sahf
add
add
push
int
push
test
push
enter
add
data16
sub
add
cld
push
xchg
push
icebp
pop
andnps
or
add
fisubl
ds
xor
cli
or
lock
movsl
out
pop
push
pop
inc
fcmovu
xor
jle
lods
add
out
gs
shlb
sbb
add
and
mov
xchg
pop
push
inc
xor
inc
cwtl
orb
mov
push
jge
mov
movsb
inc
aaa
sub
push
incw
add
adc
ja
sarl
das
and
fdiv
adc
mov
js
pop
inc
in
cmp
xchg
and
xor
outsl
lret
adc
jo
cmp
push
andb
sbb
sub
add
insb
pop
sub
add
xchg
adc
fsubs
or
adc
out
xor
add
cmc
ret
sahf
sbb
ljmp
inc
jp
add
push
and
das
pop
inc
push
mov
rorb
mov
jle
data16
imul
sub
popf
testb
fldt
enter
cltd
fisubrl
dec
mov
push
push
adc
ljmp
or
push
test
orb
lret
popa
push
rclb
sbb
pop
adc
mov
mov
popf
add
sbb
push
inc
sti
sahf
add
std
out
pop
add
inc
jbe
addr16
cmp
mov
add
lods
mov
call
push
lea
in
ja
ss
mov
in
inc
and
pminsw
mov
cltd
inc
mov
fdivrl
sub
les
mov
sbb
pop
lock
and
dec
xchg
cmp
cmpsl
inc
aad
movsb
loope
inc
adc
lret
mov
rorb
in
xor
lcall
sub
mov
cmp
mov
push
das
and
sub
cmp
jle
pop
flds
dec
rcrb
add
rorl
add
in
cmp
push
in
jo
les
adc
iret
cmp
aad
rorb
pusha
adc
mov
nop
cli
pushf
fnstcw
out
mov
and
add
je
sbb
or
daa
gs
mov
pop
add
loopne
add
sbb
fldenv
add
dec
loope
mov
inc
in
ds
sub
or
movsb
je
js
movaps
cmp
mov
mov
sbb
lods
mov
cmp
mov
xor
shl
xor
outsl
jnp
aas
fcomps
pop
push
xchg
add
fimuls
std
iret
fadds
nop
popa
ret
hlt
in
repz
sub
into
divb
cltd
add
adc
and
push
sub
frstor
das
testb
push
dec
mov
add
mov
enter
add
sub
xchg
ds
mov
or
mov
ffreep
fildl
int
out
add
hlt
sub
cs
xchg
add
pushf
bound
dec
dec
or
mov
fmuls
shll
xor
aas
cmp
add
pop
test
jnp
hlt
int3
addb
cmp
xchg
movsl
jbe
add
jg
fld
fs
sbb
shlb
jl
add
pop
push
adc
out
push
adcl
mov
mov
loop
xorb
mov
adc
sub
lds
addr16
popa
adcb
push
cmp
shlb
add
xchg
call
add
fsubs
cmpsb
test
adc
sub
inc
inc
cld
dec
jl
aam
and
and
adcl
mov
aam
dec
outsl
inc
add
xor
mov
add
cmpl
ror
cld
cmp
enter
mov
jecxz
add
xchg
sub
push
call
dec
repz
cmp
add
pop
cmp
mov
xor
cmp
jne
pop
jmp
dec
lods
sbb
mov
mov
arpl
add
jno
push
je
jo
mov
enter
outsl
mov
add
insl
jmp
mov
adc
mov
fdivrl
cltd
inc
pop
dec
xchg
xorb
push
mov
fnstenv
dec
inc
dec
add
and
mov
cld
or
push
cwtl
sub
add
ljmp
das
pop
divl
unpcklps
xchg
ret
orb
test
sbb
fistpl
mov
shll
xchg
jno
iret
cmp
ret
shrl
jg
mov
aas
mov
adcb
fildll
ficompl
inc
pusha
adcl
add
lds
dec
sbb
lock
add
ret
movsl
cmp
push
xor
orl
or
test
xor
xchg
adc
clc
dec
jp
imul
mov
add
mov
not
int3
hlt
incl
test
test
jmp
rcrb
push
sahf
js
int
dec
cmpsl
fisttpl
outsl
je
incl
pop
or
add
rcr
test
xor
stos
add
jg
ret
add
jo
mov
dec
iret
les
or
out
js
test
jg
in
mov
adc
aaa
cmp
or
push
pop
mov
or
aad
ret
jno
mov
lods
divb
dec
add
jnp
pop
and
cmp
gs
pop
adc
mov
mov
xchg
mov
mov
sub
jne
and
out
cmp
js
add
loop
or
and
add
jg
dec
pop
add
inc
loopne
xchg
fisttps
call
mov
pop
inc
xlat
pop
roll
inc
xchg
test
push
add
out
dec
pop
addr16
std
movsl
add
push
mov
add
rorb
inc
aaa
pushf
sub
mov
dec
incb
test
rcll
inc
push
ljmp
call
xchg
pop
add
fs
xor
mov
xor
icebp
add
adc
aad
scas
repz
cwtl
inc
sub
enter
mov
shll
daa
arpl
or
cmp
add
stos
push
daa
leave
sahf
mov
sub
pop
shlb
inc
push
aas
mov
cmpsb
shrb
loop
mov
add
flds
adc
xchg
je
add
mov
push
sub
scas
adc
adc
or
cmp
testb
test
pusha
dec
push
add
sbb
data16
imul
jmp
lods
inc
subb
out
inc
add
adc
mov
daa
add
jo
add
insl
loope
xchg
inc
ja
pop
mov
popa
andb
pushf
imul
mov
sub
jb
adc
add
adc
push
ret
mov
add
adc
mov
add
lock
sti
xchg
add
test
sbb
daa
xchg
mov
lock
das
push
jmp
jns
jne
add
push
lahf
shr
mov
add
cwtl
movsl
popa
add
scas
out
pop
decb
sbb
push
and
roll
mov
add
sbb
lahf
in
jne
jl
adc
dec
add
cwtl
shrb
push
mov
shlb
add
call
jne
int3
push
add
outsb
ljmp
aaa
fnstsw
or
cs
mov
mov
xchg
mov
xorb
xchg
flds
xor
inc
inc
and
pushf
add
fistpll
add
mov
sahf
xchg
add
insb
out
sti
cltd
inc
pusha
ret
ljmp
in
hlt
aad
insb
cld
add
and
rolb
cmp
imul
inc
lock
cmp
int3
sbb
lret
cli
add
fs
enter
pop
push
and
add
nop
pop
adc
punpcklwd
jns
pushl
add
mov
mov
sti
fcmovne
xchg
add
mov
adc
loope
and
ret
push
mov
inc
fists
xor
lock
enter
rorb
pop
add
sbb
jb
imul
in
adc
mov
add
call
add
in
pop
add
xchg
jecxz
push
enter
or
icebp
pop
cmp
mov
outsb
inc
test
add
pop
sarb
adc
push
lock
orl
add
in
adc
add
nop
jb
jns
cmp
add
out
push
or
pop
dec
inc
mov
jno
sbb
mov
pushf
je
mov
imul
ds
push
and
inc
call
fs
arpl
or
outsl
mov
add
jg
jo
popa
dec
xlat
jo
xor
addr16
xor
mov
sub
sahf
idivb
std
test
add
mov
pusha
out
xor
cli
loope
xor
sbb
lock
insb
lods
push
jecxz
or
add
dec
test
cli
pop
inc
pushf
lock
filds
in
sub
les
jnp
mov
std
add
lock
cmp
xor
inc
jae
pop
das
or
xor
sbb
lock
sti
ret
xchg
dec
pop
lret
add
push
aaa
cmp
cmp
inc
dec
mov
jge
fadds
or
jbe
lods
rorb
inc
sahf
add
or
cmp
sub
mov
icebp
loopne
stos
popf
push
dec
leave
cwtl
rolb
pop
push
test
mov
mov
or
pusha
dec
push
xor
sbb
lock
std
dec
inc
xchg
fs
add
or
add
mov
xchg
xchg
add
push
outsl
movsb
testl
adc
cmp
push
or
xchg
cld
nop
jns
fadd
cmp
mov
scas
push
inc
addr16
add
sbb
adcb
adc
pop
push
lock
jecxz
push
scas
cmp
mov
clc
cmp
sahf
aaa
inc
add
inc
mov
lahf
add
hlt
add
loop
adc
iret
gs
mov
cmp
jle
das
daa
inc
pusha
jae
add
sbb
aaa
inc
fcomps
int
add
xchg
mov
cmp
gs
out
mov
or
jae
mov
cmp
sbb
adc
inc
sarb
aas
jo
push
add
shl
shlb
pop
jnp
out
add
add
xor
sub
mov
add
xchg
or
add
sahf
cltd
shlb
inc
adcb
jp
add
mov
jno
dec
or
cli
pop
das
add
mov
les
fdivs
mov
cmpsb
insb
jo
jp
jge
pop
outsl
mov
add
into
lods
clc
pushf
add
daa
cmp
scas
lret
add
shrb
adc
sbb
fsubl
sub
pop
out
add
cmp
push
test
pop
fsubr
add
xor
out
add
sub
hlt
or
cmc
sbb
in
mov
adc
dec
sub
xor
fcmovne
mov
add
mov
xchg
add
sbb
sub
mov
jmp
adc
ret
fsubl
jnp
mov
add
hlt
push
push
sarl
adc
mov
daa
pusha
adc
mov
cmp
mov
call
dec
add
mov
push
adcb
cmp
add
add
fimull
mov
movsl
shll
mov
sub
testb
fdivrl
jb
sbb
xor
mov
add
loopne
cmp
xlat
xorb
pop
sub
and
minps
test
jns
dec
sub
lods
std
icebp
incl
loope
jmp
cwtl
mov
xor
mul
call
ret
addb
iret
addb
cmpsl
mov
add
cmp
inc
mov
or
xchg
scas
inc
rorb
imul
int3
jns
add
xor
scas
aas
neg
add
mov
aaa
cld
lock
add
pop
cmp
popl
repz
dec
cmp
add
xchg
into
jbe
adc
addb
adc
pop
add
ds
jg
sbb
jae
xchg
into
mov
orl
scas
add
cld
adc
jg
call
mov
jne
mov
jae
mov
hlt
adc
jae
dec
and
jns
stos
call
psubusw
adc
jp
aaa
add
ret
adc
jl
xchg
cld
mov
xchg
sti
popf
or
sbbl
cwtl
add
int
cmp
shlb
and
ljmp
popa
cmp
jns
lret
addr16
addl
sbb
adc
pop
popf
lods
jle
nop
aad
nop
sbb
js
add
je
pop
daa
pop
pop
xor
cmp
fadds
inc
xchg
sbb
movsl
mov
jge
mov
sbb
pop
cmp
fdivrl
rolb
or
push
subl
or
push
cmc
loopne
xchg
xor
mov
out
or
jae
lahf
adc
cmp
cli
xor
shrb
orb
fdivrs
sbb
lds
aam
jecxz
mov
insb
xor
inc
dec
xor
cmp
cmpsb
mov
les
mov
insl
in
mov
jnp
lret
loope
mov
or
cs
out
add
outsl
mov
dec
insb
shrl
addb
popa
add
push
jl
notb
add
cmp
cmc
add
jo
dec
pop
mov
ja
mov
inc
aaa
das
lret
call
dec
inc
daa
adc
xchg
xor
rcll
adc
add
pop
test
in
add
in
or
jge
int3
test
xor
ret
data16
arpl
dec
pop
dec
add
repnz
in
mov
inc
sbb
imul
rorb
xchg
jmp
cmc
add
mov
adc
int3
loop
and
pop
jbe
sbb
sarb
push
push
and
sub
test
clc
je
sbb
or
push
mov
mov
mov
roll
mov
ss
push
cmpsl
scas
adc
fmuls
sbb
mov
mov
push
add
push
addl
mov
xlat
andb
negb
in
int
mov
jbe
lret
inc
pop
sar
or
xor
pop
test
out
adc
outsl
scas
add
fadds
dec
add
loopne
scas
add
nop
add
xor
bound
adc
push
out
cmpb
sub
adc
fucomip
call
aaa
cwtl
popf
sbb
xchg
xchg
inc
lcall
jmp
mov
xor
and
fldenv
icebp
enter
hlt
incb
push
mov
ret
les
xchg
fucomi
push
str
push
shll
sub
xlat
cmp
cwtl
fs
add
jno
push
in
cli
pop
aaa
add
push
mov
js
adc
cs
dec
sbb
cmpsb
in
test
sbb
add
movsbl
add
sahf
sbb
xor
std
add
ss
dec
movsb
aaa
pop
hlt
push
xchg
add
mov
add
push
addl
add
or
xchg
ds
in
dec
pop
cwtl
or
loopw
mov
add
divb
leave
add
fwait
lret
sahf
adc
dec
mov
mov
jo
ja
cli
lret
pop
psubusw
jl
mov
jne
xchg
pop
and
lret
pushf
add
pop
enter
and
adc
cmp
bound
mov
fistpl
add
push
fidivrs
or
fmull
scas
or
ss
mov
bound
add
pop
dec
jo
mov
sub
pop
lmsw
push
movsl
or
push
test
sbb
push
or
fisttpl
add
mov
mov
xlat
sbb
iret
rolb
daa
mov
outsl
stos
sub
sbb
push
test
sub
cli
jo
out
loope
mov
add
mov
add
mov
mov
gs
movsb
std
mov
bound
xorl
add
dec
or
in
mov
xchg
or
mov
addl
push
jb
mov
lret
adc
outsb
cli
repz
mov
je
or
jne
dec
pop
daa
int3
pop
sbb
or
shrl
cld
pop
sbb
sti
add
add
movsl
dec
fisttpll
je
nop
add
jge
arpl
jle
lahf
add
in
setge
cmp
and
push
lock
add
mov
xchg
iret
mov
add
fcomip
lret
aam
add
dec
add
std
sbb
xchg
sarl
add
js
and
negl
cmp
dec
mov
mov
add
add
cmp
dec
push
ret
add
fcmovnb
test
pop
xor
inc
push
std
in
jp
dec
addr16
pop
les
and
sbb
int3
das
add
mov
inc
add
dec
cmp
ss
add
fdiv
or
test
mov
add
out
jns
add
dec
fidivrs
cmp
dec
jae
lods
out
and
add
fsubl
loop
pusha
daa
push
push
sarl
lods
pusha
test
mov
adc
sub
jecxz
add
sub
sbb
jo
add
add
sbb
ret
mov
es
pushf
add
popa
cmp
lock
cmp
xchg
in
mov
mov
push
out
inc
imul
pop
les
cmp
push
add
lock
mov
push
fistps
fsubrl
add
and
sti
inc
pop
leave
aad
mov
and
adc
xchg
mov
out
mov
xchg
add
push
xchg
push
and
push
scas
shlb
pop
mov
repz
xor
repnz
movsb
jns
pop
and
cmp
sub
idiv
repz
out
cmp
ret
pusha
addr16
add
inc
dec
inc
out
add
jl
add
stos
scas
cs
xchg
mov
push
sub
adc
add
es
sti
jl
adc
sub
add
outsl
mov
mov
ret
mov
jno
push
add
cmp
or
add
and
push
xor
ljmp
mov
or
jo
or
add
test
iret
sbb
movsl
imul
or
bound
gs
cld
das
or
mov
outsb
stc
sub
ja
cmp
mov
jmp
out
call
adc
xchg
xor
xchg
rorb
sub
push
ret
fs
dec
add
xor
out
mov
prefetcht2
lahf
int3
cmpsl
test
hlt
pop
pop
push
pop
add
iret
mov
add
lret
leave
jnp
and
imul
insl
pop
insb
cmpsb
xchg
mov
cmpsl
mov
sbb
mov
hlt
sbb
mov
mov
pusha
test
add
dec
js
mov
add
and
pop
sbbb
adc
dec
and
mov
outsl
or
pop
fwait
push
adc
push
orl
push
jp
push
mov
nop
sub
daa
aad
pop
imul
push
mov
or
add
lcall
cwtl
lods
in
pushf
add
movsb
fsub
cmp
hlt
cmpsb
sbb
lock
mov
or
sbb
clc
xchg
add
pop
push
mov
adc
in
xor
adc
cmp
inc
cmp
add
test
pop
pop
pop
clc
mov
or
cld
gs
jo
pop
add
icebp
ffree
sbb
sub
or
inc
repz
add
inc
cmc
nop
nop
or
pop
pop
sbb
add
inc
out
lahf
xchg
and
add
xlat
jmp
orb
lahf
xor
sbbl
adc
mov
dec
loop
jmp
push
cmp
push
xchg
cmp
sbb
js
ja
push
das
ret
ret
mov
test
sub
cwtl
fists
adc
mov
lret
lret
push
ljmp
aaa
jg
hlt
pop
out
sub
mov
fstpl
cli
rorl
jbe
add
mov
push
sub
mov
jmp
shlb
popa
or
aam
sub
addl
aad
inc
loop
and
clc
cmp
mov
jl
cmovae
aaa
add
loope
inc
pop
jb
cmpsl
push
lret
mov
test
jp
cmc
mov
add
adc
repnz
paddsw
shlb
pusha
cmc
or
insl
mov
scas
pop
sub
ja
rol
js
pushf
addl
add
in
add
jl
or
dec
mov
xlat
cmp
andb
jno
es
sbb
sub
xor
popl
adc
dec
cmpsb
mov
add
iret
ret
data16
insl
nop
add
movsl
scas
aas
cmp
inc
sahf
loopne
add
lea
pop
push
add
add
pushf
sti
in
data16
divb
lds
push
test
ja
cld
dec
xor
and
mov
int3
in
shlb
inc
add
jne
mov
shrb
or
or
aad
in
in
add
lds
sbbl
cmc
adcb
hlt
or
cmp
out
filds
lods
mov
or
enter
add
sbb
and
pop
lods
roll
sub
mov
ficomps
add
add
fmul
test
or
flds
dec
pop
jge
mov
dec
jl
mov
jnp
cmp
out
pusha
loope
lahf
push
dec
push
add
insb
jg
add
and
add
icebp
add
insl
mov
and
js
inc
fcoms
or
lret
adc
or
mov
fcompl
movsb
lahf
fsts
shrb
jge
aam
jae
or
in
cli
je
rcrl
cmp
jg
push
xor
sahf
lret
add
aad
rclb
adc
inc
add
adc
arpl
dec
push
or
lods
pop
je
rclb
pushf
add
movsl
adc
add
mov
in
repnz
sub
fs
add
xchg
ja
add
sti
pop
ds
mov
fsubr
xchg
adc
jbe
add
aam
sub
ljmp
arpl
lcall
pop
add
push
popa
add
rorb
stos
add
and
scas
adc
in
jg
jns
imul
in
mov
rolb
cmp
lcall
xor
xchg
add
addl
cltd
and
jns
sahf
add
sbb
lock
jno
adc
adc
push
rol
pusha
les
pop
or
push
rorb
pop
add
sbbb
cmpsl
xor
fildl
inc
cmpsb
loopne
cld
movsl
add
mov
cwtl
adc
xchg
inc
and
jo
mov
xor
aam
jecxz
out
pusha
and
sarb
jae
mov
ljmp
fdivs
ffree
filds
in
xor
push
or
xor
mov
daa
lock
mov
lds
in
add
shlb
sub
sbb
adc
shlb
mov
repz
add
push
aam
sub
and
into
outsl
push
inc
add
dec
cli
push
add
pop
daa
pop
ficoms
add
jae
push
add
clc
es
aas
push
mov
cmc
jle
cli
orb
mov
add
js
xor
xor
add
ja
repnz
add
add
sbb
mov
repnz
add
sbb
jns
lds
scas
add
dec
js
add
inc
sbb
cmpb
mov
fsubrl
cwtl
es
stc
sbb
inc
pop
sbb
cmp
imul
outsl
mov
cmp
fiadds
and
hlt
mov
push
jae
add
sbb
sbb
mov
push
jge
mov
loope
adc
cld
ja
sbb
push
pop
sbb
inc
cmp
mov
fwait
xchg
outsl
mov
push
jno
es
jmp
add
jns
xor
inc
push
xchg
mov
std
jge
cmc
in
cmp
idiv
stos
mov
in
jne
mov
sub
cmp
push
loopne
and
test
out
cs
sti
shlb
andl
ja
in
cmp
sbb
inc
loop
mov
xor
and
add
in
mov
push
loope
push
xor
add
cmc
cmp
add
pop
cmp
or
cmpsb
add
jb
mov
add
adcb
sbb
dec
xor
inc
mov
push
inc
imul
add
ss
pop
outsb
cmpsb
punpckhdq
pop
inc
sub
inc
xchg
xor
pushf
sbb
push
lea
mov
enter
add
jno
inc
nop
enter
inc
add
sub
out
push
imul
std
add
jae
fists
adc
pop
xchg
clc
pop
jo
daa
sbb
add
testb
pop
cmpsl
add
jne
dec
cmp
aas
add
push
or
cmp
or
add
jb
in
repnz
das
pop
add
loop
bound
inc
shrl
and
sbb
cmp
add
push
mov
scas
add
daa
sbb
movb
rclb
jns
pop
aas
add
sub
mov
outsl
mov
push
mov
fcmovne
add
repnz
lret
stos
popa
int3
ss
cmp
in
push
mov
rcrb
imul
stc
or
and
dec
iret
cld
inc
dec
add
sub
push
or
icebp
cmpsl
add
lea
mov
movsb
or
ss
subb
shlb
rcr
clc
fsubs
ret
add
mov
mov
and
aas
xorb
lods
inc
nop
popf
sub
ret
repnz
dec
xlat
lock
jnp
add
cmp
pop
es
daa
ljmp
jp
lret
inc
sbb
and
cmp
add
fmuls
imul
insb
and
jle
push
xchg
fs
and
add
inc
xchg
inc
pop
cli
mov
cld
lret
dec
mov
adc
dec
push
out
outsl
add
lcall
jbe
test
pop
mov
sub
add
in
int
adc
adcl
mov
cmp
clc
or
out
pop
daa
mov
lahf
mov
testb
loopne
fistpll
lods
add
int
add
mov
popa
and
test
clc
aaa
test
addr16
sub
loop
jno
or
pop
in
xor
add
or
xor
dec
and
pop
add
shll
dec
adc
mov
xor
jge
push
sub
or
movsl
mov
inc
scas
add
xchg
fs
jo
out
xchg
aad
je
jl
cmp
push
add
dec
or
test
dec
mov
test
and
ret
cld
and
jnp
inc
sar
xor
scas
mov
adc
mov
jb
rcll
xchg
insb
insl
rcrb
or
inc
cmc
inc
xchg
mov
ds
scas
cmpsb
lock
pop
jg
add
pop
dec
js
xchg
pop
add
xor
mov
push
inc
sbb
jo
add
imul
es
push
addr16
lock
jl
xchg
xlat
pop
mov
roll
pusha
mov
sbb
push
cmpsl
loopne
inc
repnz
incb
shll
xor
jns
call
cmp
cmp
dec
push
or
call
adc
lods
lock
in
int3
push
sub
add
scas
fnstcw
loope
xor
sub
lds
out
pop
inc
icebp
push
pop
sbb
cltd
in
mov
aas
popf
and
adc
ja
dec
sub
lea
inc
and
dec
subb
fisubs
add
jnp
and
fisubrs
or
push
adc
test
fidivrl
add
movsl
jle
lock
xchg
fdivs
imul
loop
pop
test
jl
push
daa
lea
insb
enter
add
dec
jns
lret
sbb
add
cmpsb
aad
jmp
mov
pop
mov
inc
add
sbb
jne
push
mov
into
jmp
push
sub
and
sbb
mov
cld
aas
cmp
xor
cld
out
jecxz
mov
sbb
rclb
daa
mov
jmp
mov
add
movsl
pop
insl
add
sbb
incl
mulb
fildl
push
sub
or
iret
popa
pop
or
js
popa
inc
aam
int3
sbb
call
and
inc
movl
sub
add
loope
lods
fwait
mov
pop
add
imul
mov
outsl
mov
fstps
fwait
add
mov
add
in
loopne
mov
lods
push
fnsave
add
push
jno
cmp
ds
adcl
dec
pop
shlb
cmp
in
dec
push
cmp
add
mov
inc
lds
jne
add
mov
and
out
nop
jno
test
add
mov
cli
jne
lea
cmp
std
arpl
ret
mov
xlat
mov
add
mov
pop
js
mov
lds
es
cmc
cmpsb
add
mov
or
jl
out
xchg
cwtl
jp
push
mov
mov
cwtl
add
xchg
push
mov
jb
sbb
cmp
cmp
and
add
sbb
xchg
int3
pop
sub
add
dec
mov
add
mov
pop
pop
push
xchg
add
ss
inc
add
or
mov
mov
add
sbb
cs
adc
aaa
cltd
int
popa
ret
or
shll
fnstcw
xor
fisttps
adc
fistl
and
add
lret
in
ret
add
xchg
sbb
add
jno
enter
dec
addb
lahf
add
icebp
mov
push
and
popl
aam
and
into
neg
jmp
shrl
inc
out
ja
in
rcrb
adc
loope
adc
add
cmp
sbb
std
call
inc
mov
jecxz
scas
lcall
into
lods
xchg
fadds
dec
add
js,pt
orb
cmpsb
lcall
repz
and
push
mov
dec
xchg
jne
cltd
sbb
sbb
pop
inc
arpl
add
cmp
pop
addr16
or
stos
jns
xchg
loop
lahf
sub
jnp
cli
jecxz
loope
das
dec
jl
cli
mov
adc
sub
or
add
inc
sub
fcompl
or
inc
pop
stos
int
fadds
add
pop
loopne
mov
js
das
arpl
xor
outsb
mov
imul
stos
mov
jnp
add
mov
cmp
cmp
add
and
pushf
adc
mov
es
std
or
or
aaa
clc
cmc
add
and
sub
add
xchg
add
add
popl
xchg
pusha
pusha
xchg
fisttpll
dec
insb
pop
adc
mov
sub
sub
cmp
testb
sbb
jne
aad
mov
aam
mov
pop
int
insb
fstpl
sub
add
push
xchg
and
mov
add
mov
movsb
pusha
in
popa
int
jge
and
inc
add
add
mov
jg
add
test
mov
in
push
enter
loope
leave
int
sbb
dec
ret
clc
xlat
lds
push
add
sbb
addl
fisttpll
das
gs
push
push
inc
mov
mov
jo
adc
scas
flds
rolb
and
sbb
inc
inc
rcrl
mov
sbb
std
adc
cltd
je
ret
dec
addr16
inc
les
add
pop
jg
mov
mov
inc
adc
in
jp
pushf
xor
adcb
aad
and
lods
add
lea
jecxz
push
test
mov
movsb
in
cmp
pop
mov
je
ret
je
add
push
stos
in
mov
pop
sbb
cli
incl
pop
mov
sub
addl
cmp
add
cmp
add
cmpsb
cmp
aam
dec
add
add
sbb
xchg
es
sti
stos
add
add
dec
enter
imul
inc
add
sbb
push
xor
pop
jne
addr16
and
inc
popa
or
add
mov
mov
addl
loopne
mov
dec
cmp
add
in
cltd
fildl
xchg
sti
xchg
jp
adc
xchg
fcomip
lea
add
mov
inc
shrb
add
mov
and
icebp
push
push
mov
or
inc
xchg
xchg
or
orb
sbbl
push
sti
iret
gs
mov
add
mov
cmp
rcrb
je
rorb
jecxz
sub
aas
adc
lea
cmc
sub
pushaw
and
inc
push
jl
cmp
pop
pop
add
push
insl
sub
into
in
cmp
mov
xlat
scas
sbb
fxch
xchg
dec
in
add
mov
lahf
pop
cmp
movsl
adc
test
ret
andb
pop
test
add
and
mov
sub
sub
mov
xchg
test
addr16
fbld
ss
pop
in
ja
sbb
add
js
pop
fildl
popf
inc
sbb
jge
mov
test
loopne
inc
nop
mov
adc
mov
bound
stos
adc
xchg
imul
scas
add
stc
jne
xchg
lods
out
add
mov
aad
adc
mov
jl
pop
enter
pusha
cmp
xchg
scas
divl
pop
lock
je
xor
push
stc
xlat
in
sub
jb
loop
or
movsl
xchg
out
mov
sub
std
mov
cmpsl
push
sbb
dec
add
rcrl
mov
xor
jbe
mov
add
add
movsl
sub
xchg
pop
mov
out
add
loope
mov
jnp
addr16
cmp
jae
or
dec
sti
inc
sbb
aad
test
adc
mov
dec
and
cmpl
add
add
add
ds
inc
clc
ljmp
xchg
int3
insl
fstpl
mov
das
pop
ja
xchg
les
popa
mov
subl
mov
dec
sub
push
dec
mov
xchg
repz
add
daa
inc
jp
jecxz
mov
lret
imul
pop
add
aam
xchg
mov
dec
push
adc
pop
sub
cmpsb
insb
call
and
cmpsl
add
jb
xchg
sub
cld
jns
lea
pop
mov
jo
leave
lret
mov
enter
inc
ja
mov
add
aad
icebp
gs
filds
adc
or
pop
movsb
cmp
addl
push
or
frstor
je
fucom
xchg
push
pop
sbb
pop
icebp
sahf
es
orl
scas
mov
cmp
or
xorb
fs
or
lods
fstpl
or
rcrb
gs
push
mov
stos
aas
subb
dec
jbe
mov
push
xchg
test
lods
add
or
cmp
ljmp
cmp
pop
dec
imul
cmp
sbb
add
pop
hlt
xor
pop
cmc
loopne
jo
stos
rolb
jne
pop
sarb
fdivs
push
dec
adc
mov
fiaddl
jge
add
lock
test
test
mov
mov
mov
lahf
mov
cmp
xchg
add
add
add
lock
jmp
mov
add
lods
stos
inc
jno
mov
nop
loop
inc
or
adc
sbb
push
jmp
fbstp
inc
sub
adc
arpl
and
das
mov
add
push
jb
add
pop
add
xor
sub
rolb
adc
fmul
cld
xchg
nop
sbb
fidivs
scas
sti
pop
xorl
cmp
repnz
mov
push
pop
iret
daa
mov
inc
ret
xorb
push
enter
jbe
ret
ror
js
repnz
add
lret
sahf
jmp
lock
aaa
es
cmp
punpcklbw
in
pop
hlt
add
cmp
mov
jae
add
lock
jnp
add
addl
popa
push
negl
cmp
xor
repnz
call
lahf
rolb
call
mov
mov
fdivrl
shlb
fimull
je
int3
pop
shlb
xor
push
pop
bound
iret
push
cmp
mov
dec
push
cmp
test
addb
jle
xchg
loop
jne
adc
call
cmp
stos
push
divb
flds
iret
and
lcall
mov
cmp
add
rclb
shl
pop
inc
ds
jp
or
pop
int
cmpsl
cmp
pop
mov
das
sbb
add
stos
pop
int
xchg
jge
sbb
mov
sbb
pop
pop
fsubp
push
pop
cmp
adcb
add
push
scas
enter
add
mov
repz
or
add
mov
xlat
lahf
xor
stos
cmp
mov
dec
fwait
xchg
addl
aaa
scas
sbb
sbbb
jmp
jge
cmp
cmpb
stos
ljmp
nop
cmc
pop
push
inc
call
jbe
mov
fnstcw
cmp
icebp
fldl
add
sbb
fcomi
movsb
imul
subb
mov
add
cmpsb
aas
adc
push
sarl
test
inc
cld
leave
add
pushf
sub
pusha
shlb
add
shl
sub
add
cltd
dec
fsub
out
pop
pop
imul
sbb
jmp
add
xchg
push
xchg
cli
test
pop
add
push
nop
dec
shrl
sub
test
add
pushf
cli
xor
stos
adc
mov
push
dec
mov
cmpsl
add
sbb
jns
and
add
ljmp
push
dec
daa
dec
sub
pop
mov
movsl
jbe
add
loop
adc
in
fnstcw
enter
jnp
or
cli
lret
cwtl
jo
add
mov
mov
add
jns
dec
scas
mov
out
add
es
add
test
push
hlt
out
mov
fwait
pop
outsl
push
mov
lods
pop
sti
add
dec
mov
sbb
jg
pop
xchg
ret
in
push
xchg
xor
adc
push
push
lret
push
int3
pusha
fsubl
mov
ds
xor
lea
push
sti
mov
add
in
pop
stos
cmp
andb
xor
inc
aas
or
arpl
mov
ds
inc
pop
xor
mov
mov
dec
out
add
test
sub
xchg
mov
jb
and
inc
xchg
mov
adc
mov
cmp
lea
mov
xchg
dec
xor
sbb
aas
in
push
mov
in
addr16
adc
test
dec
push
mov
pop
rclb
fwait
cmpsl
decb
cmp
sub
call
movsb
dec
das
loope
gs
loope
cmp
test
clc
xor
dec
dec
mov
in
or
inc
sub
cmp
push
add
pop
pop
cltd
and
add
repz
add
push
inc
add
jo
fdivl
cld
push
js
xor
shrb
add
imul
or
cmp
jne
add
enter
cmc
divb
repz
add
adc
and
cmp
aam
mov
push
cld
push
xlat
ds
and
add
and
dec
xor
adc
repnz
sub
insl
push
gs
lods
and
movsl
pop
push
push
aam
loopne
rclb
outsl
lea
sub
fadds
cmp
les
cwtl
or
inc
pop
inc
mov
into
mov
jle
add
sbb
ffreep
lret
push
add
sub
cltd
add
xorb
add
pop
icebp
movsl
decb
sbb
mov
push
testl
or
xor
stc
xor
add
sub
addr16
jp
les
lcall
add
nop
cmpsl
jo
mov
mov
mov
xchg
add
xchg
shlb
sub
add
and
cmc
lret
hlt
pop
sub
xor
add
adc
cmp
mov
or
addb
jnp
xor
add
movsl
jo
jns,pn
adc
sbb
mov
sbbl
nop
aam
cltd
std
pop
xor
lea
aad
xchg
pop
aaa
jg
shrb
add
cmp
ja
aad
cs
xor
sbbl
add
fidivrs
pop
inc
inc
shll
pushf
add
dec
in
cmp
rcrb
sbb
add
xor
arpl
call
dec
mov
sti
in
add
xor
test
xchg
and
jb
icebp
push
stos
jns
pop
or
mov
add
lahf
mov
add
mov
adc
sbb
cmp
dec
imul
add
mov
dec
ljmp
sbb
mov
sub
xor
push
data16
pop
add
cmp
cli
add
inc
ret
cmp
cwtl
xlat
add
movsl
xchg
loopne
rorl
xor
incb
sub
std
and
daa
add
adc
push
push
dec
nop
add
lahf
pop
mov
fnstsw
add
mov
mov
cmpsl
nop
add
and
mov
int
add
mov
jnp
inc
pop
xchg
add
add
jo
into
sbb
loope
sub
outsb
negl
push
jnp
out
clc
jp
jo
in
pusha
cld
shl
sbb
sahf
add
mov
shlb
pop
cmp
outsl
add
lds
repz
in
pop
jl
pop
push
neg
out
aam
les
pop
lods
sti
iret
mov
push
pop
push
mov
ja
push
sbb
es
leave
add
lea
repnz
nop
jmp
xor
das
push
pop
dec
pop
xchg
lock
mov
daa
pop
scas
enter
stos
pushf
fnsave
adc
cmpsl
push
repnz
testl
add
testb
push
dec
into
add
movsl
push
ljmp
lret
inc
scas
mov
daa
inc
mov
jb
sbb
cmp
jns
outsl
ss
or
ljmp
aam
lock
and
xchg
jae
and
std
dec
jecxz
repz
fldcw
out
fdivs
int3
cmc
hlt
in
add
or
add
fisttpl
daa
add
in
mov
pop
push
pop
push
sbbb
mov
add
sub
mov
mov
fcompl
inc
lock
jg
add
cmpsb
out
push
cmp
or
push
add
pusha
mov
jne
mov
mov
out
out
or
push
mov
jecxz
adc
inc
jp
sbb
mov
loop
jmp
xor
cmc
pop
add
mov
cmp
pop
stc
cmp
push
inc
push
sub
jnp
sub
add
pop
test
pop
mov
add
jns
in
imul
rclb
adc
xor
xlat
or
test
add
jge
cltd
jbe
xchg
xor
cmc
repz
loopne
add
aam
or
imul
pusha
test
adc
inc
or
shll
loope
pop
mov
inc
mov
lds
add
jno
or
stos
cltd
scas
and
inc
cmpsl
add
sbbl
add
jnp
push
dec
xchg
pmullw
fadds
xchg
and
movsb
add
jecxz
mov
lcall
sub
aam
add
mov
repnz
jg
push
mov
cmp
stc
add
push
jns
data16
insb
push
dec
sbb
inc
clc
mov
repnz
cmp
jle
ret
mov
xchg
shll
or
push
jno
add
jb
pop
lcall
sbbb
add
dec
fs
jns
xlat
pop
xchg
test
dec
add
or
mov
int
sbb
add
mov
mov
shlb
cld
xchg
xor
cmp
adc
test
cmp
pop
mov
push
fwait
arpl
push
jne
add
add
add
pop
data16
push
sbb
test
xchg
push
sbb
ret
mov
repnz
sbb
aas
and
lock
sbb
jo
adc
add
je
addr16
gs
add
push
cmp
pop
movsb
jo
add
cmp
pop
sub
mov
or
sbb
in
or
notl
cli
stos
cmp
inc
add
lods
adcl
aaa
or
sbb
test
shrb
outsl
and
jmp
enter
pushf
out
jo
cld
add
add
fld
add
sti
arpl
rcrb
pop
and
and
jae
stos
fcmovbe
jl
je
or
es
or
cmp
sub
xchg
ret
pop
add
jecxz
or
push
add
jecxz
adc
and
add
lods
sbb
outsb
add
cmp
add
dec
and
sarl
add
mov
ficompl
xchg
adcb
cld
cmp
lret
jnp
add
popa
pop
mov
repz
scas
push
dec
imul
sbb
cmp
out
das
data16
sub
ret
mov
jns
adc
lahf
daa
mov
push
add
or
add
inc
sar
xor
stos
loop
ja
or
mov
xchg
jnp
lock
push
add
xchg
and
add
popf
adc
and
scas
inc
push
shrl
lcall
add
je
imul
dec
nop
add
cmp
add
cmp
add
adc
pop
pop
mov
in
fidivrl
inc
dec
bound
xor
mov
lahf
xor
ss
inc
push
cmp
decl
inc
ret
xorb
aad
sarb
xchg
nop
fs
pushf
add
xchg
rclb
add
hlt
dec
mov
xor
dec
dec
lock
cmpsb
notl
dec
mov
xor
cmp
add
adc
sbb
fsubrl
out
adc
jl
sbb
mov
repz
or
in
add
sarb
push
xchg
mov
add
sbb
and
je
lcall
jmp
cltd
sbb
adc
stos
xor
ret
hlt
inc
dec
and
cmp
push
pop
jmp
pop
out
push
sbb
jge
rcll
fildl
out
shlb
sbb
dec
fldl
push
inc
add
icebp
add
and
add
aaa
sti
lret
cs
add
adc
and
add
daa
sbb
add
xchg
leave
or
stc
lods
push
pop
ljmp
mov
and
gs
cld
arpl
jne
sbb
add
lods
xor
mov
aas
or
fnsave
icebp
mov
rolb
cmp
mov
mov
adc
bsf
mov
or
stos
pop
mov
cmp
mov
test
loope
jl
push
mov
popf
and
stos
push
add
aaa
rclb
repnz
xor
add
or
stos
add
xchg
pop
xchg
or
xor
mov
xchg
loopne
jle
lods
out
pop
and
mov
dec
daa
pop
push
xchg
aam
shll
in
add
xchg
leave
mov
xorb
cmpsb
pop
jnp
dec
xor
adc
sub
jns
in
in
add
mov
add
jmp
lret
pop
mov
xchg
or
fldl
insb
dec
js
sbb
xlat
rorb
int
movsl
xchg
mov
mov
addr16
sub
fbstp
mov
inc
sbb
bound
inc
das
out
mov
imul
or
sub
cmpl
cmpsb
push
lds
push
int
add
shr
xchg
mov
je
pop
adc
mov
loopne
push
adc
mov
stos
mov
add
push
ss
sub
mov
shr
push
sub
inc
fsts
in
or
outsb
outsb
cmp
mov
jo
cmpsb
faddp
mov
lahf
fs
inc
out
frstor
pop
ljmp
and
das
loopne
sbb
rcrb
rolb
add
in
sub
out
lods
sbb
into
push
inc
dec
add
cli
xor
add
push
in
addb
push
cltd
arpl
out
sar
outsb
xor
ret
xchg
add
dec
fs
xor
adc
add
xor
mov
push
ret
add
call
punpckldq
xchg
adc
and
inc
jno
ret
dec
jnp
subb
cmpsl
in
add
aas
jl
dec
loope
imul
loop
pop
xchg
fcomps
add
pop
enter
jge
or
xchg
test
ss
js
add
into
sbb
sti
cmp
in
cmp
pusha
out
add
out
cld
add
cli
xchg
add
sti
aas
mov
faddl
mov
stc
inc
dec
cmpsb
iret
mov
push
mov
mov
lret
xchg
mov
mov
popf
aam
fdivl
push
adc
out
fdivr
hlt
xor
shl
xchg
mov
push
pop
cli
and
in
adc
push
inc
add
ret
outsb
imull
add
scas
into
add
xchg
test
pop
add
push
lods
or
cli
add
jae
jo
xchg
cmp
sahf
jmp
add
fcomps
fs
dec
mov
ljmp
cmp
in
aad
in
mov
cmp
and
in
lcall
push
cmpsb
in
scas
in
mov
fildl
pop
loope
jecxz
jl
cwtl
sti
call
push
pop
push
adc
ds
pop
mov
push
pop
xchg
and
mov
and
and
push
aaa
mov
pop
add
add
dec
scas
sbb
es
jne
add
adc
jle
ja
add
push
push
add
rcll
lahf
sub
add
mov
fcompl
cvtps2pi
cmpsl
push
pusha
scas
scas
add
dec
sub
out
xor
sbb
rcl
jo
shll
mov
adc
repz
sbb
adc
ret
negl
xor
ficoml
push
and
sbb
inc
add
fnstsw
add
mov
add
xchg
addr16
pop
add
or
lock
rorb
push
mov
into
xchg
in
sub
shlb
push
cmp
mov
add
sub
ret
add
hlt
add
mov
mov
outsb
pop
cmp
fs
push
add
mov
bnd
inc
fnstenv
mov
sub
xchg
jns
jb
dec
add
and
dec
jbe
and
cmpsl
add
or
mov
fs
add
je
test
sarl
rcr
xor
add
mov
jle
add
jecxz
orb
mov
inc
hlt
jb
add
xchg
dec
pop
inc
clc
fsub
loopne
dec
mov
cltd
loope
or
mov
gs
sar
lock
dec
test
pusha
sub
scas
fcomps
cmp
arpl
sub
outsb
adc
rol
add
and
adc
jne
in
insl
sti
xor
push
fsubs
push
adc
cmc
dec
lcall
fsubr
pop
inc
es
in
dec
add
icebp
sti
in
fcoms
xchg
add
arpl
pop
cld
inc
cli
dec
loopne
fisubrs
sub
into
add
adc
adc
mov
push
sub
addl
insb
mov
add
push
push
cmp
xor
aaa
and
or
movb
es
mov
add
jae
push
add
hlt
popf
orb
insb
mov
int
mov
addl
sbb
fwait
mov
leave
inc
sub
dec
fsubrl
pop
jb
aad
add
orl
add
pop
dec
test
inc
lock
or
jbe
lods
in
test
mull
cmp
sahf
and
adc
pushl
std
xchg
dec
jns
or
test
popf
cli
cmp
jmp
movsb
sub
das
mov
mov
daa
adc
ficomps
popf
in
lea
push
inc
add
outsb
xor
pop
xor
or
es
cmove
in
cmp
add
icebp
pop
insl
nopl
dec
cmp
mov
jno
lock
lcall
pop
dec
divl
addr16
mov
inc
enter
mov
xor
and
xor
add
lret
add
hlt
in
lcall
sar
fidivs
or
in
mov
das
adc
adc
shrl
lock
push
pop
xchg
roll
into
and
push
cli
add
test
add
or
sbb
mov
or
scas
sbb
adc
cli
xchg
nop
jmp
lret
hlt
mov
jne
add
and
inc
stos
push
xchg
xor
add
test
sbb
xchg
stos
sahf
js
jp
jo
jb
je
lds
xor
cli
sub
cmpsb
pop
add
movsl
inc
loopne
pop
mov
add
outsb
mov
and
mov
xchg
shr
and
mov
scas
outsl
add
cmpsl
xor
pop
ja
fiaddl
subl
popa
xchg
ja
cmpb
repz
mov
inc
ss
mov
mov
add
xlat
or
popf
sbb
test
and
mov
js
testl
out
dec
jns
call
sbb
int3
shll
test
leave
jo
and
hlt
cmp
rcr
add
hlt
push
aas
fadds
jecxz
call
popa
ret
stos
add
pusha
in
cmp
xchg
cmp
adc
andl
mov
lock
add
scas
es
stos
mov
jnp
nop
add
cmpsl
xchg
jmp
test
outsl
cwtl
shrb
loope
loop
or
inc
add
lcall
clc
jo
sbb
out
movb
js
push
out
loop
mov
jecxz
inc
mov
pop
add
call
jo
or
xchg
subl
xchg
popa
add
push
addr16
add
mov
push
mov
sub
add
add
daa
jge
add
or
cmpl
cmp
sub
or
mov
das
add
push
pusha
inc
pushf
cs
add
dec
cwtl
fdivl
iret
jnp
push
test
pop
xor
cmp
push
mull
cmp
fildll
jmp
pop
mov
scas
stc
jae
mov
adc
cmc
cmp
sbb
fbld
mov
call
outsb
aam
add
aas
and
mov
add
movsb
push
xchg
fsubs
add
adc
dec
add
jns
adc
and
imul
xor
dec
push
out
ljmp
pop
push
sti
lods
dec
cld
popf
cmp
mov
add
imul
test
sub
and
in
add
adc
add
jecxz
push
test
cmp
fwait
or
xor
clc
adc
rorb
add
jg
jmp
or
and
xchg
push
stos
test
jo
fdiv
sbb
push
adc
test
jbe
addl
out
inc
loopne
push
xchg
sub
adc
orl
repnz
mov
stc
ds
jne
mov
mov
ds
into
out
add
lock
pop
dec
cli
idivb
in
or
flds
push
mov
mov
nop
add
js
in
mov
insb
add
out
xor
imul
lock
xor
lahf
dec
add
lret
dec
fldenv
fcmove
xor
jmp
add
push
aad
repz
in
cmp
cmpsl
ret
sbb
movsb
add
push
fsubs
xor
adc
loopne
adc
pop
xchg
add
xor
mov
lock
test
pop
cmp
pop
stos
jne
pop
mov
fildl
loop
mov
push
shrl
add
daa
sub
add
inc
mov
push
mov
add
push
loope
mov
add
sbb
mov
out
push
in
sbb
and
pinsrw
pop
shlb
leave
inc
dec
iret
mov
inc
add
xchg
rolb
int
cmpsl
mov
jle
mov
mov
jl
pop
pop
dec
mov
nop
mov
mov
lods
aam
adc
cmp
sbb
std
or
inc
pop
fiaddl
cmp
dec
ret
mov
cmpsb
pusha
mov
add
push
inc
or
js
push
imul
mov
push
mov
cmc
push
mov
enter
or
push
fs
mov
mov
lret
cwtl
cltd
dec
xlat
mov
jmp
js
push
jp
das
jbe
mov
cwtl
testl
push
cmp
sbb
and
or
shlb
das
or
cmp
call
int
jmp
or
mov
and
cs
into
add
add
xor
mov
lock
sbb
nop
and
sbb
int
ljmp
je
mov
fcoml
mov
mov
jo
orb
and
xchg
daa
add
imul
icebp
mov
xchg
xlat
jns
add
mov
and
xchg
jp
lcall
add
scas
pop
push
xlat
fwait
lahf
xchg
add
and
jns
cmp
cmpsl
pop
scas
xchg
push
ficoms
mov
js
loope
dec
sbb
xlat
jle
push
mov
add
call
and
add
jl
adc
cs
xchg
or
sbb
aaa
sub
push
add
andb
add
jp
les
mov
leave
imul
imul
lcall
rclb
mov
aam
mov
fildll
xlat
pop
cmp
stos
ficoms
add
push
jmp
out
scas
xor
add
add
inc
xor
call
cmpb
xor
dec
lock
mov
or
mov
or
inc
int
cmpsb
addr16
shrb
inc
out
insb
test
dec
div
jmp
mov
rol
pop
push
shlb
pop
fcoml
lret
dec
je
or
cmpsl
and
lcall
nop
mov
fwait
jno
sar
fiadds
es
xchg
pop
adc
push
mov
cmp
cmp
mov
decl
pop
push
bswap
cmp
shr
pop
std
adc
dec
jae
push
clc
lds
movsl
push
cmp
add
leave
stc
ret
aas
add
fidivs
sti
add
xchg
xor
mov
mov
loopne
add
fwait
and
ljmp
leave
or
pop
sbb
pushf
stos
xchg
sti
add
enter
push
shlb
push
test
pusha
add
iret
mov
mov
mov
inc
and
push
add
adc
enter
repz
sub
mov
ja
test
mov
jl
jecxz
shll
cwtl
mov
add
popa
enter
cmp
push
ret
mov
pop
jl
cltd
pop
xchg
xchg
lods
jno
insl
lahf
mov
sbb
out
add
mov
and
add
outsl
pop
adc
js
xor
add
add
add
or
arpl
inc
pushf
test
pusha
ja
and
mov
addb
fimuls
adc
jb
inc
push
cltd
and
inc
add
jl
add
push
dec
jae
pop
push
and
aad
add
cmpsl
out
int3
stc
in
enter
rcll
mov
sub
jmp
pop
cmp
sbb
loopne
inc
add
xchg
in
jmp
addr16
pop
in
add
mov
xchg
andl
in
lds
repnz
popf
stos
add
and
out
dec
inc
mov
mov
clc
lds
add
dec
jge
cmp
icebp
int3
shlb
into
mov
adc
test
or
testl
rcll
add
lock
pop
adc
enter
and
imul
loope
push
pop
push
sbb
adc
in
xor
mov
stc
jae
stos
xchg
cmp
pop
cs
mov
pusha
cmp
movb
and
sub
cmp
push
cmpl
push
andb
popf
cmp
push
xor
jle
fstpt
mov
mov
sbb
mov
es
cli
out
or
imul
int
xor
and
add
insb
ficomps
dec
jecxz
mov
jle
jns
dec
loopne
es
mov
call
xor
xor
and
gs
add
or
xchg
or
stos
sbb
clc
jne
jo
movups
sbb
subl
movsl
jne
xchg
add
sub
popf
add
push
insb
adc
mov
or
mov
sbbb
dec
cwtl
add
xchg
push
jge
nop
xor
push
hlt
mov
adc
add
dec
aad
or
jecxz
pop
fnstenv
push
mov
jae
add
add
cmp
out
jbe
push
push
or
mov
test
lods
push
adc
pop
cmp
enter
out
fmuls
sbbb
jne
jl
add
fsts
mov
orl
in
and
push
xchg
jle
add
sbbb
xor
nop
sbb
sahf
dec
add
stos
xlat
fdiv
sbb
and
push
pop
mov
into
aaa
out
shll
push
mov
sub
scas
pusha
cmp
arpl
add
mov
ss
add
fs
cmp
pop
mov
shrb
add
test
jo
dec
js
add
and
sbb
sub
cld
mov
push
sbb
mov
in
ja
popl
popf
sbb
cmp
add
cmpl
dec
lea
sahf
inc
mov
xchg
scas
out
cmp
bound
inc
pusha
xchg
add
and
adc
xchg
mov
jmp
call
add
in
push
cs
jae
add
popa
cmp
add
jns
mulb
pop
jae
add
or
xor
mov
das
adcb
mov
add
mov
push
xor
fcomps
ffreep
cmp
sub
inc
cmp
sahf
hlt
in
add
mov
sarl
add
mov
jmp
stc
dec
in
and
sub
pusha
mov
mov
setns
sbb
sub
pop
popa
jmp
mov
popf
and
std
test
mov
add
add
adc
call
inc
xor
push
insb
or
test
mov
mov
jne
jecxz
or
xchg
add
addb
push
dec
push
push
jb
mov
outsb
fcmovbe
sbb
lds
jmp
xchg
add
fwait
mov
push
adc
ficompl
mov
lcall
push
es
add
mov
xchg
add
fadds
mov
cwtl
inc
shlb
cmc
pop
mov
nop
fcmovb
jp
testl
andb
cltd
pop
jecxz
repnz
mov
push
jae
cmp
loop
dec
lcall
mov
inc
je
dec
push
icebp
mov
lds
add
mov
cmp
xor
out
cmp
cmp
push
jne
test
cmpsl
jnp
loopne
xchg
push
jno
repz
xor
cmp
sti
adc
loopne
ja
add
pop
out
and
dec
cmp
and
or
sub
enter
sti
xlat
xchg
sahf
icebp
jge
cmp
mov
dec
mov
inc
adc
mov
rcrb
scas
lock
mov
push
mov
lahf
loop
outsl
pop
aam
imul
int
jns
add
inc
test
and
add
scas
lods
ret
lahf
add
push
or
mov
rorl
add
dec
js
jle
add
xor
jno
mov
pop
ret
cli
fsubr
dec
lcall
pop
mov
push
push
lds
adc
mov
dec
add
xor
mov
or
jp
aaa
cmp
and
mov
fbld
cmpsb
rolb
add
push
or
sarl
pop
mov
lock
mov
or
push
rcrl
lea
lret
test
cmp
bound
popa
mov
pop
cltd
xchg
xor
ds
int
cmp
sbb
adc
pusha
add
sub
roll
xchg
mov
leave
rolb
xchg
mov
add
mov
add
mov
bound
std
mov
and
cli
lods
add
test
add
and
or
lcall
std
add
adc
inc
sbb
mov
orl
loopne
rcl
jl
ret
or
mov
mov
ja
mov
cmp
push
popf
loope
faddp
imul
mov
repnz
add
mov
test
add
out
data16
cmp
mov
mov
inc
adc
popa
add
adc
sbb
call
add
jb
add
js
mov
xchg
mov
cltd
jmp
add
pop
loopne
adc
jne
aam
idivl
mov
sti
dec
xchg
pcmpeqd
jg
add
int
mov
icebp
jnp
in
popa
xchg
aas
ds
out
enter
cmpsl
mov
pop
and
aad
mov
cmp
loop
imul
or
stos
xchg
xor
pop
fcoml
popf
xchg
pop
movl
xor
add
fs
dec
adc
dec
aas
inc
mov
das
nop
test
add
or
inc
movsl
and
add
xchg
lcall
pop
scas
cltd
fisttpl
push
cmpsl
push
dec
shl
movsb
mov
stos
out
frstor
push
dec
pop
mov
add
rcrb
sub
add
add
popf
cmp
jbe
push
sub
std
movsl
fadds
pop
or
aas
ja
cli
add
xchg
shrl
testb
loope
shr
sarb
out
cmc
mulb
sbb
or
jno
andb
mov
sbb
stc
push
jo
mov
or
sub
jmp
nop
sbbl
jge
add
fwait
or
test
xchg
add
mov
push
leave
addl
testb
sub
xlat
shr
dec
mov
in
add
jmp
xor
movsl
pop
add
enter
popf
rcll
sub
cli
push
aam
rorb
outsl
add
dec
movsl
xor
ss
and
and
push
add
cmp
jmp
test
mov
test
add
push
sub
imul
incb
scas
or
jns
in
rorb
movsl
mov
and
daa
loop
flds
cmp
cmp
dec
repnz
push
mov
xor
pop
adc
or
in
loopne
xchg
les
mov
jne
xchg
xor
cmp
jg
lea
scas
sti
add
mov
add
adc
pusha
add
jae
push
cmp
icebp
xchg
cmp
dec
mov
sahf
mov
xor
insb
mov
aam
lahf
and
or
scas
in
add
mov
lods
dec
mov
add
decb
xor
decl
xchg
push
mov
and
rorl
rol
sbb
pop
lods
add
jae
fnstsw
cmpsl
sarb
cli
movsb
push
pusha
or
adc
mov
or
add
shlb
add
arpl
fs
cwtl
add
jb
dec
out
lret
ljmp
call
nop
push
xchg
mov
add
lcall
or
or
pop
sbb
adc
add
cld
loopne
in
and
add
ss
inc
lods
dec
push
cwtl
sbb
mov
mov
outsl
ljmp
add
mov
cwtl
inc
idivl
sub
fistpll
mov
scas
hlt
repnz
sbb
lret
mov
pop
dec
mov
in
movsb
shlb
pop
jae
cli
push
lret
sarb
add
mov
lock
loopne
xor
inc
add
mov
mov
jle
pop
orb
outsl
rolb
adcb
push
mov
mov
repz
sbbb
adc
add
fdivrl
int
daa
mov
outsb
add
sbb
shrb
sbb
mov
and
add
lcall
fistpl
xor
and
into
adc
gs
into
add
leave
lret
add
adc
jmp
and
mov
add
fdivs
xor
imul
gs
cld
mov
cwtl
push
dec
inc
adc
outsb
cli
add
jecxz
xchg
push
roll
cmp
and
push
aad
mov
dec
leave
xor
add
popf
movsb
pop
ljmp
add
xor
sbb
push
dec
inc
scas
in
enter
mov
dec
xor
inc
add
dec
push
popl
jp
fbstp
add
nop
inc
ja
sub
dec
adc
add
lret
jg
add
xlat
sbb
sub
cmc
leave
pop
xor
push
add
inc
mov
inc
enter
insl
cwtl
add
enter
adc
mov
push
push
jle
or
mov
loopne
in
add
into
and
sbb
and
inc
xor
ficoml
ss
jmp
int
pop
inc
adc
and
call
loope
je
xor
jno
out
adc
int
mov
scas
repnz
mov
mov
xlat
inc
mov
shlb
iret
es
and
adc
add
mov
push
fwait
sarl
in
xor
sti
xchg
inc
movb
jnp
xchg
xor
jns
and
inc
add
and
sbbl
sub
in
rcrb
lock
add
jo
jmp
cmc
sti
add
popf
sub
push
rolb
add
std
cli
cmpsb
rclb
outsl
loopne
pop
pop
push
adc
inc
les
jns
mov
push
add
ror
loope
imul
dec
push
loopne
rorl
adcb
mov
aas
add
and
sub
cli
xor
add
std
pusha
jle
les
push
in
lret
lcall
popf
push
jnp
jb
push
iret
clc
data16
inc
inc
icebp
mov
arpl
xor
ss
inc
sub
jp
or
popl
cmp
sub
cmp
pop
or
adc
je
imul
pop
xchg
gs
add
call
icebp
les
ss
gs
mov
add
mov
inc
cld
cld
dec
add
pop
sahf
cmp
and
mov
scas
add
push
rcr
add
push
pop
les
loopne
lods
pop
sbb
imul
out
es
sbb
pop
sti
xchg
add
int3
mov
stos
xor
gs
repz
inc
sbb
mov
push
and
inc
adc
inc
add
mov
push
inc
adc
int3
inc
and
sbb
out
push
mov
push
cli
dec
dec
hlt
add
mov
fs
mov
mov
loop
push
out
inc
add
jb
subl
sbb
xor
jge
inc
xchg
fdiv
push
ret
pop
cs
mov
adc
xor
add
lods
add
or
clc
out
enter
inc
mov
loopne
pop
pusha
xchg
and
or
mov
dec
add
cmp
jne
int3
lock
cwtl
xchg
add
pushf
repz
cmp
mov
lods
or
pop
nop
pop
xchg
adc
addl
inc
add
mov
shrb
scas
jg
imul
lret
push
pop
inc
xorb
or
lock
cmpsb
or
adc
movl
testl
inc
stos
scas
flds
and
cmp
mov
aam
or
das
inc
leave
add
sbb
lock
stc
add
cmpsl
loopne
dec
xor
adc
hlt
add
push
mov
mov
xchg
aad
adcb
or
lods
add
jp
xor
out
jbe
inc
pop
add
rcrl
fs
xor
add
ret
add
test
cwtl
es
lods
dec
push
xchg
inc
and
orb
insl
scas
lods
mov
pop
outsb
xchg
pop
mov
push
iret
popf
add
xchg
xchg
xchg
lods
subb
sub
jmp
pop
inc
lods
or
mov
xor
push
aaa
enter
outsl
push
add
adc
mov
sbb
inc
push
add
shl
int3
cmpsl
mov
cmp
addl
mov
test
add
xchg
add
adc
outsl
adc
lea
rcr
test
enter
imul
js
out
sahf
or
xor
push
dec
aad
movsl
mov
sbb
cmp
stos
cmpsl
fisubl
xchg
push
mul
push
out
fwait
subb
rcr
inc
add
mov
int3
jmp
test
and
add
shl
mov
jl
add
mov
dec
icebp
ljmp
dec
mov
sbb
pop
test
add
jecxz
orl
out
lret
dec
mov
sbbb
add
and
mov
mov
fdivrs
faddp
pusha
popa
lret
push
jp
dec
bound
leave
jge
lods
push
mov
xor
enter
pusha
sbb
out
jmp
in
xchg
lcall
xorb
movsl
mov
lock
sahf
fcmovne
sbb
adc
push
cmp
mov
adc
rclb
sub
add
jbe
sbb
add
push
push
push
pop
adc
or
out
xor
pop
xchg
pop
inc
xchg
out
add
movsl
cmpsl
inc
add
out
iret
sub
or
add
mov
dec
push
push
adc
add
rclb
lret
or
out
xor
or
fldl
mov
arpl
adc
rorl
jl
inc
dec
insb
ret
xor
add
addr16
insl
iret
rorl
negl
xchg
sub
xor
jmp
mov
loopne
add
les
inc
jo
aas
or
ret
pop
xor
or
mov
sub
add
out
ljmp
sbb
sbb
mov
jge
and
gs
add
xchg
imul
les
fcomi
mov
push
add
pop
cmpsl
orb
add
das
and
add
jae
daa
cmp
xor
jbe
in
pop
cmp
shrb
push
cmpsl
daa
ffree
mov
add
loop
jl
dec
popf
hlt
push
icebp
or
lods
xchg
int3
add
mov
lods
test
adc
icebp
add
fnstsw
aam
test
adc
cmp
jno
shlb
daa
add
jl
ror
xor
and
mov
add
int
imul
and
or
add
test
inc
es
add
dec
push
xor
outsb
sub
sbb
add
jnp
push
mov
stc
ret
push
add
push
testl
jp
mov
outsl
mov
add
icebp
loop
test
adc
fistpl
dec
push
mov
pop
cmp
pop
xor
loope
cli
aam
adc
les
sbb
leave
in
fwait
cmp
mov
cmp
andb
clc
das
sub
imul
std
gs
in
add
dec
sbb
sub
pop
daa
push
cmp
jle
insl
cli
fstpl
sub
and
cld
shl
ret
leave
sub
mov
add
mov
enter
rcll
sti
inc
xchg
jmp
loopne
sub
int3
add
cmp
sbb
adc
push
sti
scas
ds
add
add
mov
sub
fbstp
int
fcmovb
lret
add
ljmp
jo
add
orl
orl
or
in
pop
mov
lret
add
sub
or
out
xlat
push
inc
mov
mov
mov
dec
add
rorl
add
imul
mov
cmc
out
lock
pop
sbb
add
fwait
movsl
dec
adc
sbb
dec
jmp
pop
sbb
adc
cmpb
dec
cmp
add
jae
scas
les
push
sub
pusha
xor
add
lcall
loope,pt
adcl
xor
in
sahf
sbb
enter
loopne
add
jo
jmp
out
add
dec
xchg
xorl
add
sub
or
loopne
jb
nop
daa
add
push
imul
popa
add
push
add
xor
in
push
cs
ja
add
xor
add
lock
pop
add
sub
lret
jnp
add
jmp
inc
add
stos
fstps
pop
mov
mov
das
addr16
lock
cmp
cmp
cmp
aaa
cmp
shrb
mov
or
cmp
mov
jno
sub
pop
or
sbb
mov
nop
sbb
and
insb
jmp
imul
or
dec
sbb
repz
jge
adc
mov
in
pop
cmp
mov
ror
lcall
sbb
out
and
and
loope
and
in
and
leave
pusha
mov
mov
dec
les
mov
sbb
mov
push
dec
cmp
dec
inc
mov
xchg
add
jmp
in
int
mov
lock
push
mov
adc
push
nop
add
repz
sub
mov
or
push
in
mov
push
enter
lret
mov
jnp
xlat
push
bswap
xor
aas
sub
js
push
xor
push
test
dec
loopne
test
mov
dec
mov
faddl
jo
out
jge
jmp
xchg
pusha
in
add
mov
mov
dec
pop
mov
xor
imul
add
add
push
mov
ret
inc
xor
mov
xchg
add
pop
out
mov
mov
ret
icebp
outsl
push
add
dec
dec
push
hlt
cmp
addb
jp
mov
add
mov
add
mov
dec
loop
addb
adc
mov
xlat
cmp
push
pop
in
adc
mov
add
mov
fbstp
add
add
dec
call
or
jg
stc
insb
fiaddl
xchg
roll
pop
imul
add
mov
sub
out
add
push
push
dec
cmpsl
outsb
xor
push
int3
or
mov
or
pop
xchg
jnp
sub
mull
and
fs
xchg
loop
add
push
jge
sahf
mov
jno
nop
add
ret
in
fmuls
xor
sbb
xor
ja
adc
sub
testl
imul
push
or
xchg
cmpsl
je
add
pop
imul
out
and
outsl
and
sti
fildl
cld
repnz
imul
mov
add
add
jl
push
test
fs
add
lock
sti
cmpsl
push
sarl
pop
fadds
subb
fsub
pop
aad
cli
cmp
cwtl
sub
pop
lret
loop
dec
push
inc
mov
add
jmp
add
jp
push
mov
iret
adcl
push
add
pop
cmc
mov
sub
add
fnstsw
mov
inc
fcomps
rcrb
xchg
add
pop
add
jl
mov
cld
mov
cltd
cmpsl
lods
jecxz
cmc
fistpll
push
jle
and
add
leave
aad
cmp
add
mov
std
pop
jl
or
test
mov
nop
add
cmp
das
inc
lahf
ltr
mov
and
dec
or
jmp
or
jecxz
incb
add
or
or
pop
outsl
dec
mov
add
orl
mov
add
out
and
jmp
add
shrb
fadds
adc
sbb
xor
lods
pop
shll
and
add
out
js
sar
add
or
xchg
add
xor
repz
and
sbb
in
mov
push
lea
dec
cmp
add
loop
insb
push
pop
in
xchg
in
loopne
add
inc
insb
cltd
add
clc
fisttpl
stc
ss
out
outsb
mov
mov
cmp
mov
int
adc
pusha
sub
mov
pop
lret
cwtl
add
xchg
or
data16
adc
pop
lds
mov
into
ljmp
add
cvttps2pi
shrl
pop
cltd
mov
dec
jl
adc
xchg
sub
xchg
nop
lea
or
mov
add
sbb
lds
jb
mov
stos
cmp
adc
insb
test
pop
and
jb
xchg
enter
adc
mov
fsubrp
mov
js
adc
popf
inc
xchg
pushf
pop
cmp
add
enter
push
sahf
out
inc
add
cmp
add
adc
or
jecxz
xor
inc
xor
mov
cmpsb
in
sub
jg
pusha
fildl
sbb
push
das
or
add
ss
cltd
add
xchg
push
xor
or
push
test
push
dec
inc
nop
and
call
cld
ljmp
add
jecxz
add
stos
sahf
mov
dec
sbb
cltd
test
sub
xchg
xor
int3
mov
loopne
push
sub
mov
vmwrite
leave
call
pop
ror
sub
lahf
inc
adc
mov
push
add
xor
cmp
movsb
jle
add
inc
mov
sub
aam
pop
enter
mov
jno
ret
iret
and
dec
aad
lods
ret
or
or
add
push
popa
dec
mov
add
pop
jmp
add
xor
and
and
add
add
cmp
sub
sbb
or
popa
jmp
cmp
jle
pop
adc
or
lods
pop
inc
add
xor
repz
lret
add
je
insl
add
test
out
cmp
nop
or
nop
or
push
xchg
int
mov
add
outsb
jle
add
arpl
dec
dec
inc
or
jecxz
sarl
push
dec
sbb
idiv
stc
push
pop
jns
mov
cmc
sub
jecxz
shrl
mov
pop
add
imul
xor
add
js
dec
ljmp
cli
neg
and
fucom
aaa
push
clc
out
xor
add
inc
cwtl
notb
dec
push
xchg
fwait
leave
das
cld
addr16
push
xchg
add
and
stc
jnp
pusha
jne
fstps
mov
movsl
jo
in
loop
mov
add
insb
imul
in
fwait
add
dec
jae
mov
aaa
psubusw
lock
xor
pop
sbb
mov
in
adc
jae
inc
popa
xchg
jo
sbb
add
out
daa
das
add
jno
es
and
subb
daa
mov
mov
flds
nop
push
fsubs
and
add
leave
ja
rolb
adc
cmpsb
out
pushl
sub
pop
sbb
mov
addr16
add
test
inc
sbb
data16
sbb
and
loop
nop
dec
jg
xchg
sbb
cmp
jmp
fbstp
xor
add
adc
jae
cmp
xchg
adc
cld
push
cmp
xor
add
stc
fiadds
lock
aas
or
cmp
cwtl
dec
add
fdivs
push
inc
int
jl
add
or
sub
flds
pop
movl
pop
mov
xchg
push
push
mov
cwtl
sbb
aad
add
inc
gs
push
or
mov
stos
scas
xchg
addb
mov
inc
sbb
mov
push
pop
scas
jmp
adc
push
adc
or
movsl
dec
mov
mov
add
or
fimuls
add
jecxz
inc
pop
xchg
lcall
sbb
lods
movsl
aad
insb
add
nop
sub
fs
xor
call
jns
jae
add
cltd
loop
out
jno
and
jp
out
add
sbb
xor
lock
adc
pushf
push
jmp
push
push
sti
in
loope
add
clc
pushf
repz
stc
mov
mov
enter
mov
mov
pop
pusha
xchg
js
stos
xor
aaa
shr
icebp
pop
xchg
pop
in
das
lret
push
lret
mov
mov
scas
inc
mov
insl
and
lret
loopne
push
ror
in
cmp
jg
sarb
add
cwtl
pop
push
adc
sub
adc
sbb
pusha
mov
or
dec
insl
pusha
sbb
mov
add
loopne
out
ja
sbb
sbbb
dec
xchg
clc
jecxz
lock
add
inc
stos
add
fdivrp
les
es
test
jmp
mov
jnp
scas
jl
outsb
fs
xchg
std
adc
stos
adc
sbb
inc
push
testl
add
dec
lret
iret
fimuls
xor
je
add
sub
loopne
rcrl
xchg
and
filds
or
and
stos
outsb
daa
movsl
cwtl
mov
call
inc
mov
ja
jnp
add
sub
add
push
push
mov
pop
and
jle
insb
add
jo
add
sub
mov
lock
cld
inc
dec
push
nop
fsubrl
pop
add
xorb
fcomip
cli
mov
fcom
aad
movsl
xchg
xor
cmp
cmovo
scas
mov
les
adc
jl
sbb
add
popa
dec
mov
mov
xor
es
mov
out
dec
push
sub
jmp
mov
cmpsb
test
pop
in
add
mov
adc
lds
add
stos
sbb
aam
mov
add
adc
sbb
mov
aad
lret
push
jmp
arpl
shlb
popl
add
jl
push
cltd
sub
sub
in
or
xchg
adc
enter
mov
iret
mov
cmp
rep
xchg
fsubs
in
in
ret
and
or
cmp
xchg
addb
xor
cmp
adc
add
xchg
mov
and
push
dec
add
rclb
movsb
inc
mov
jns
and
dec
test
push
aaa
inc
stc
bound
inc
push
aam
call
rcrb
cmp
add
sbb
mov
cli
mov
insb
mov
fldl
inc
insl
pop
scas
dec
sub
lods
stos
and
out
leave
std
insl
xchg
push
cmp
faddl
hlt
xor
push
adc
cld
jle
add
clc
aaa
imul
mov
push
bound
mov
call
pop
sub
add
mov
dec
js
lcall
loopne
pop
adc
adc
rclb
push
inc
pushf
push
push
and
xor
adc
idivl
hlt
dec
or
jge
rolb
mov
adc
jne
out
mov
jg
in
out
cmp
out
cmp
mov
xor
fcmovnb
subl
lock
mov
loopne
inc
sahf
sub
add
lcall
add
test
movsb
push
outsl
repz
lcall
loopne
xchg
or
cmp
rolb
pop
mulb
pop
sbb
aaa
cmp
daa
push
and
push
leave
popf
in
jl
push
addb
inc
dec
test
push
lcall
add
mov
adc
pop
mov
inc
push
pop
leave
movsb
loopne
cmp
cmp
test
add
sbb
jl
mov
clc
aam
pop
pop
add
int
std
add
mov
mov
sub
cmp
bound
hlt
push
out
pop
mov
xor
dec
add
addr16
lea
mov
test
sub
jge
mov
add
test
sub
enter
pop
add
movsb
les
cmp
mov
fildl
push
stc
in
mov
rolb
xor
or
popa
inc
rclb
rorb
add
mov
xor
addb
or
xor
inc
inc
loope
sbbb
ja
mov
inc
xchg
and
add
in
in
add
vaddps
cmp
test
push
cmp
mov
sbb
data16
jmp
inc
test
pop
jae
rorl
jne
es
add
push
inc
int3
cmp
add
inc
mov
inc
lock
pusha
subb
or
pushl
add
pusha
mov
adc
pop
cmp
dec
push
je
add
insb
xchg
mov
add
aaa
in
add
dec
dec
mov
push
xchg
mov
shlb
xor
and
mov
cld
sbb
call
or
cmp
fadd
and
loopne
jl
dec
xchg
mov
nop
ljmp
shll
shll
sub
and
xchg
adc
inc
daa
pushf
orb
and
add
cltd
xchg
sub
sti
hlt
out
aam
mov
icebp
imul
testb
and
icebp
cwtl
dec
cmc
je
fisttpll
cmpsb
das
andb
insl
jl
jo
mov
push
jns
xor
add
mov
inc
adc
lods
xor
ds
lret
mov
cli
or
add
lods
pushf
push
imul
sub
adc
out
mov
sub
adc
adc
mov
adc
rolb
dec
lock
xchg
cmp
jl
fdivs
jecxz
rolb
push
cmp
dec
scas
jns
mov
shlb
inc
test
in
in
jae
out
push
roll
mov
mov
cmpsb
add
pop
popf
imul
and
pop
adc
lret
dec
pop
aad
flds
cmc
outsl
inc
adc
shl
scas
jp
add
hlt
or
sbb
popl
adc
insw
fildl
add
mov
outsl
xchg
fimuls
jns
ljmp
mov
add
and
enter
fcoml
shlb
jge
fiaddl
mov
sti
fmul
cmp
and
and
negb
push
cmpsb
push
add
sub
add
fiaddl
daa
loope
in
dec
pop
pminub
mov
fsts
add
push
pop
push
pop
or
leave
add
mov
mull
je
add
std
andb
pop
test
pandn
jns
cmpsl
and
sahf
roll
fisttpll
inc
add
fcom
cmp
das
sahf
add
dec
loope
add
push
push
popf
inc
ja,pt
pop
lahf
insb
shrl
aad
sbb
jecxz
cli
stos
imul
lds
mov
lods
mov
jbe
ss
push
scas
repz
mov
and
add
jbe
mov
stos
loope
and
xor
or
or
jp
cltd
mov
cld
push
sahf
pusha
inc
mov
inc
data16
jmp
inc
mov
and
test
stos
into
add
lcall
pusha
add
ss
repnz
jg
cmp
mov
add
in
xchg
jbe
add
pop
or
cmp
adc
adc
in
dec
clc
xor
or
xor
fidivrl
test
adc
or
mov
xorl
mov
push
cmp
push
fs
data16
bound
ljmp
add
push
orb
add
cmp
iret
xor
xchg
in
adc
enter
nop
inc
aas
adc
lds
push
mov
insl
dec
cmp
add
sbb
mov
pushf
stos
scas
lods
cmp
movsb
xor
jle
ss
imul
stos
loopne
in
clc
push
or
lds
xchg
add
xor
sub
pop
add
orb
inc
loopne
mov
or
aam
mov
fst
mov
aas
fscale
repnz
sbb
sub
imul
cmpsl
lock
add
test
bound
into
sti
pop
aaa
pop
add
add
ljmp
add
xchg
push
sbb
dec
cmp
lods
adc
add
fwait
jle
sbb
popa
xor
fadd
lea
xchg
add
pop
popf
add
js
mov
stos
cmp
mov
inc
cmp
or
je
add
aam
xchg
sbb
pusha
jle
xchg
push
inc
pushf
and
dec
mov
pop
icebp
pop
gs
adc
pop
sbb
mov
jle
outsb
hlt
cltd
xorb
add
sbb
dec
sahf
xor
arpl
es
pop
sub
shlb
mov
popw
push
lea
shrb
test
call
jle
or
jne
dec
mov
push
sti
pop
pop
sbb
xor
dec
aad
lods
push
or
jl
mov
xchg
push
push
outsb
mov
add
jo
xchg
test
dec
lcall
jle
or
ret
rolb
in
shrl
outsb
out
xchg
sbb
stc
out
nop
aas
add
fsubp
inc
fstl
mov
and
or
pop
add
add
test
xor
mov
add
sbbl
jge
add
jo
add
lahf
add
jmp
mov
add
out
int
cltd
je
pop
add
push
jo
mov
dec
loopne
xchg
add
mov
dec
aad
test
inc
dec
cld
add
add
test
mov
jns
das
inc
mov
in
mov
sub
xchg
hlt
bound
pop
cmp
cmpsl
sbb
rcr
popf
cs
jle
xchg
cmp
mov
mov
push
pusha
inc
sub
sub
and
add
movsl
jbe
and
add
mov
mov
out
add
outsl
push
insb
fnstcw
pop
or
aas
add
sbbb
xchg
loopne
mov
test
sub
and
jbe
mov
adc
ds
add
sahf
ja
adc
cwtl
cmp
or
icebp
xor
push
mov
cmp
shlb
loop
add
xchg
dec
test
test
pop
out
clc
cmp
or
mov
shlb
ss
add
cmp
dec
xchg
popf
add
fiadds
push
add
jl
push
jg
or
addr16
xchg
in
movsb
roll
dec
xor
push
cmp
es
hlt
pop
jg
xchg
cwtl
int3
add
popa
dec
lds
ljmp
outsb
add
imull
pop
or
push
scas
sub
jg
xchg
incb
arpl
fmuls
mov
jno
nop
mov
xor
add
ja
ret
dec
and
add
xchg
test
add
iret
mov
inc
ret
add
xor
insl
add
in
movsl
dec
lea
or
and
ret
ret
push
out
jo
movsb
jl
mov
or
shlb
add
cli
sbbb
aad
xchg
outsb
xchg
add
push
sahf
add
mov
cmpsb
xor
pop
add
lods
mov
stc
mov
adc
cmp
dec
cmpsb
xor
add
adc
je,pn
xchg
pop
mul
jns
hlt
scas
adc
fwait
rorb
push
cmp
orl
add
clc
jg
push
test
mov
cmpsb
dec
clc
add
out
loopne
sbb
inc
sub
loope
and
sbb
xor
loop
mov
add
scas
jg
adc
dec
lret
add
push
lcall
test
add
jne
scas
clc
jecxz
cmpl
inc
int3
add
scas
adc
mov
fdivs
add
jnp
int3
je
icebp
cwtl
or
jno
clc
or
add
test
enter
aaa
mov
xchg
jle
and
ret
jo
test
fmull
sub
movsl
addb
xor
cmc
add
inc
adc
sub
add
adcb
sti
pushf
out
xor
fmuls
enter
and
add
clc
dec
cs
mov
cmp
or
xchg
jbe
lock
add
scas
xor
xor
push
in
dec
pusha
loopne
cmp
adc
call
movsl
add
insl
or
pop
mov
mov
jbe
add
nop
adc
scas
mov
dec
movsl
test
inc
xchg
cs
stos
in
lcall
mov
popa
xor
lods
adc
scas
cmpsb
jo
add
arpl
decb
popf
dec
pop
inc
cld
ret
movsb
icebp
mov
mov
mov
paddd
push
add
out
pop
xor
fs
add
mov
sub
js
add
mov
add
or
and
jp
ss
xor
cmpsb
mov
pop
cmp
scas
addl
and
or
fiadds
sbb
xchg
rcl
cwtl
nop
jl
fmul
add
or
cmp
inc
cmp
jo
sbb
in
or
repz
and
cwtl
test
pop
inc
or
mov
inc
add
fucomip
mov
movsl
mov
rcrb
mov
dec
lret
xorb
mov
or
jle
lds
pop
int
sub
aam
in
cmp
xchg
cmpsl
cmc
xor
ljmp
ds
add
cmp
add
adc
inc
or
add
jns
ja
xchg
jmp
dec
in
pusha
jge
fstpl
jge
fs
add
fsubrs
add
push
aad
cmp
rcr
sbb
sbb
loopne
mov
push
adc
cmc
mov
push
push
inc
fidivrl
call
andb
in
out
jne
or
insl
sub
add
test
jecxz
sbb
push
rcll
daa
xchg
rolb
pop
or
lods
sbb
add
mov
jne
andb
ljmp
mov
jge
mov
sbbb
dec
pop
rcr
stos
sbb
sbb
jge
cmp
loop
das
xchg
inc
or
hlt
push
mov
fmulp
cwtl
clc
or
xchg
nop
popf
pop
add
scas
int3
push
std
cs
xchg
add
xor
xor
sub
rcrl
pop
mov
pop
jno
cld
adc
lods
xor
bound
pop
mov
movb
and
test
mov
xchg
addr16
imul
add
sbb
dec
pushf
sub
mov
andb
in
je
mov
xchg
add
fxch
sbb
add
jb
mov
fidivrs
sbb
add
and
and
cmp
sub
push
and
pop
js
daa
inc
jo
cwtl
roll
lret
xor
arpl
xchg
lock
inc
cmp
subb
pop
pop
je
sub
cmp
add
icebp
call
sbb
xlat
push
repnz
add
cmpsb
or
mov
lea
sub
in
push
xchg
cmpsl
int3
xchg
dec
sbb
or
jmp
xchg
mov
inc
xchg
aad
dec
aas
frstor
insl
in
add
rol
xchg
outsb
scas
add
xor
or
mov
fdivr
loopne
test
sbb
sahf
std
add
lea
test
add
testl
sbb
and
sbb
jecxz
push
and
add
insl
and
or
test
pop
stc
out
add
xchg
dec
xor
cli
xor
xor
add
mov
aas
outsb
cmc
cmp
lock
and
iret
in
add
xchg
add
mov
mov
loop
xchg
out
scas
add
jae
je
mov
repnz
or
add
fisttpl
cs
mov
cmp
sbb
sbb
push
insl
sti
pop
add
movsl
inc
sub
imul
push
pusha
xlat
add
loopne
lret
dec
adc
test
adcb
decb
jo
add
lds
pusha
fsubl
pop
fs
or
outsb
pusha
arpl
fiadds
ds
xlat
lret
sbb
mov
popl
aaa
push
xchg
sbb
add
fisubrl
cmp
pop
cmp
jae
aam
mov
ds
fmuls
sti
pusha
sub
ja
adc
mov
add
inc
xor
pop
out
in
xchg
push
stos
int
stos
arpl
xchg
mov
add
mov
movsb
out
inc
shll
pop
push
cmp
cmp
shrb
mov
pop
xchg
jne
add
mov
cmpsl
dec
and
mov
jecxz
clc
jno
pusha
push
xor
mov
mov
pop
jl
adc
lea
js
or
dec
arpl
enter
add
lret
add
inc
mov
add
inc
pop
adc
xchg
dec
jp
push
stos
int3
add
js
add
mov
mov
inc
adcl
mov
push
out
push
pop
cmpsb
pop
mov
sti
jge
out
lds
mov
add
add
cmp
out
push
mov
jnp
push
stc
and
xchg
add
push
push
popa
mov
sarb
add
call
fs
or
jmp
cmp
jne
add
add
or
fbld
les
fcmovnb
dec
sub
mov
add
xchg
repnz
sbb
out
sbb
jnp
lds
inc
or
mov
sbb
mov
xor
test
add
pop
xchg
mov
inc
or
mov
mov
inc
jo
push
dec
ret
or
bound
outsb
pusha
adc
nop
push
adc
pusha
xor
jae
sbb
mov
jmp
add
stc
int
pop
xchg
iret
add
pop
inc
or
push
dec
and
outsb
mov
mov
lfs
cltd
mov
rcr
add
push
push
dec
test
dec
dec
daa
aam
adc
inc
pop
cmp
loope
repnz
cli
mov
aas
inc
arpl
lock
in
dec
fadd
cmp
add
mov
decb
ret
nop
or
jmp
roll
add
int
jp
add
cmp
iret
mov
add
icebp
shl
out
jl
add
jecxz
sub
sbb
lret
jg
or
sub
stc
inc
push
or
dec
add
idivl
jl
inc
in
push
aaa
ret
push
mov
mov
std
in
sbbb
pusha
mov
inc
push
or
bound
and
js
std
and
enter
iret
jnp
shlb
cmp
dec
xor
xchg
add
or
add
add
dec
add
mov
lahf
adc
leave
xor
sbbb
or
xchg
clc
sbb
fcom
adc
push
push
int3
sub
sub
repz
fnstenv
inc
pop
sub
jbe
adc
test
cmpsl
pop
inc
add
inc
adc
test
addr16
lock
loopne
push
mov
push
add
adc
imul
jge
xchg
adc
jle
popf
or
add
mov
sub
push
popa
add
nop
add
mov
ret
lea
mov
push
dec
and
es
sub
add
cmp
xchg
xor
rorb
xor
call
xchg
shrl
fdivrs
fstl
add
adc
mov
push
sbb
inc
ja
cmp
je
lock
add
mov
xor
fadds
xchg
xchg
push
ret
sub
push
aad
scas
dec
jl
jae
inc
mov
jg
not
jno
add
mov
nop
mov
loop
mov
jg
sbb
fldt
add
fdivrs
fs
push
mov
xor
mov
pop
add
lahf
add
out
sub
adc
in
lods
add
sub
ficomps
stc
xor
mov
test
or
enter
test
cwtl
mov
sbb
xchg
inc
push
mov
jno
sub
push
test
add
test
lea
xchg
cld
add
mov
or
fdiv
push
aad
pop
mov
sbb
jb
orl
cld
xchg
add
ds
repz
repnz
mov
and
fwait
shr
ret
mov
cmp
inc
mov
stos
cmp
inc
adc
or
out
xor
rcll
lret
xchg
add
push
sub
pushf
mov
lea
loop
sbb
inc
std
int
cmp
and
mov
inc
adc
mov
add
out
mov
lcall
xchg
insb
loopne
rolb
jl
add
pop
and
add
pop
mov
xchg
or
add
mov
stc
aaa
add
mov
clc
pushl
daa
shlb
fsubrp
les
in
pop
leave
sarb
mov
mov
es
or
out
add
push
test
int
lock
sub
dec
push
int3
into
and
mov
jbe
jg
out
movsb
lds
addb
mov
inc
jp
int
add
nop
push
cwtl
rolb
aas
jo
mov
mov
shl
pop
mov
push
mov
dec
add
jmp
xchg
shrl
push
or
add
mov
xor
add
ret
sti
xchg
dec
xchg
call
push
mov
clc
dec
pop
pcmpgtb
or
insb
dec
rcl
add
mov
lea
add
ret
inc
mov
pusha
ret
bswap
mov
scas
addr16
dec
jmp
lret
mov
sub
sub
xor
jle
fiaddl
insb
pusha
das
lds
mov
mov
stc
add
add
aaa
push
std
daa
insb
lret
adc
jg
cld
add
add
mov
movsb
push
fwait
add
pop
loopne
mov
repz
out
mov
fisttps
cwtl
sbb
insb
into
sarb
add
dec
test
xchg
or
add
ror
and
push
int
cwtl
xor
xorb
loop
or
mov
mov
nop
rolb
xlat
xchg
call
mov
push
sbb
mov
adc
add
push
xchg
mov
pusha
sahf
test
cli
xchg
addb
stc
stos
std
xor
sbb
in
inc
mov
nopl
mov
jae
xor
push
push
xchg
dec
dec
pand
jnp
out
mov
in
out
push
sar
fldl2t
mov
fistps
lds
dec
insb
xchg
mov
xorb
out
shr
sahf
call
rolb
outsb
sbb
add
and
inc
or
iret
add
daa
pop
jge
inc
add
loope
push
push
outsb
addr16
inc
jmp
and
popf
es
clc
add
jl
popa
sub
add
fs
mov
ss
movb
pusha
jae
popa
push
add
dec
sub
pop
xlat
dec
sub
dec
sbb
jg
rol
pop
sub
sub
into
stos
adc
loop
jno
add
sarb
enter
add
in
mov
add
test
inc
mov
call
add
push
pushf
adc
divb
rorl
xchg
cmpb
popa
xchg
cld
iret
or
and
scas
ret
std
push
test
insb
pop
add
mov
xchg
pop
sbb
add
pop
jbe
xor
out
nop
jo
mov
outsl
sti
add
lcall
cmpl
pop
dec
ds
outsl
push
mov
mov
jmp
push
pop
les
popa
and
bound
mov
sub
dec
xorb
cld
sahf
cs
inc
shll
data16
rclb
add
pop
in
loopne
sbb
aad
mov
out
fwait
lahf
pusha
lods
push
fiaddl
lds
rcr
add
and
add
sahf
adc
add
dec
inc
xor
add
dec
xorl
push
jg
add
stos
jns
in
ds
push
pop
add
rorb
outsb
arpl
dec
dec
inc
loope
mov
call
add
int
cmp
nop
cmp
jne
xor
sub
subb
gs
xor
sub
cmp
add
inc
loop
add
or
bound
sbb
xor
nop
jae
inc
jno
cmp
out
pop
and
loope
xor
push
pop
push
sub
mov
loopne
jl
xor
das
ds
jmp
add
pop
pop
subb
int3
fadds
fcoml
adc
sbb
imul
add
dec
cmp
repnz
lahf
je
out
bound
add
add
mov
adc
mov
sbb
sub
fs
mov
add
movsb
es
pushf
enter
repz
lret
dec
add
icebp
dec
sub
and
clc
mov
rclb
scas
dec
dec
jp
xlat
cmp
ror
lret
mov
roll
aam
xchg
hlt
addl
movsb
stos
or
jo
add
sub
or
lret
fisubs
nop
subl
and
imul
faddl
outsb
add
fdivrs
icebp
sbbb
pop
repnz
rclb
mov
jp
shlb
je
loope
xor
sbb
enter
push
or
out
add
add
aam
dec
hlt
shlb
jne
add
sbb
xchg
mov
sbb
add
addr16
xchg
adc
outsb
aad
jp
repz
inc
push
adc
inc
dec
jmp
mov
xchg
jb
sbb
addr16
mov
sahf
push
stos
sub
xor
loop,pt
into
mov
add
aam
out
mov
pusha
xor
pop
add
mov
movsb
inc
add
ret
push
mov
mov
xor
pusha
shr
cltd
leave
icebp
xchg
inc
xchg
xchg
lock
jp
out
mov
push
dec
pop
and
pop
push
inc
loopne
lock
sub
ficomps
add
aam
mov
stc
xchg
xor
sarb
pop
sub
dec
in
add
xlat
testb
add
and
sbb
mov
sbb
jecxz
mov
jle
stos
rol
popa
inc
add
push
xchg
aad
shlb
ds
adc
xor
dec
vmwrite
inc
cmp
fwait
dec
add
inc
fldl
lds
cmpsb
dec
xchg
pop
cli
or
cli
push
xchg
into
ucomiss
xchg
ljmp
imul
lea
rcrb
xor
push
inc
aad
add
arpl
pusha
jae
add
jo
pop
ficoms
pop
jmp
jle
into
inc
add
xor
xlat
add
es
sub
xchg
mov
add
adcb
xor
add
jb
and
sub
ficomps
add
and
movsb
pop
add
inc
loopne
xchg
jnp
xor
jge
mov
push
loopne
stos
add
mov
cs
pop
ja
es
outsb
mov
and
enter
cmp
int3
ret
mov
ret
inc
mov
push
adc
sbb
add
jmp
popf
adc
cmp
sbb
jle
add
inc
cmp
add
in
inc
cld
aas
jo
add
movl
jle
mov
sbb
fimull
add
jmp
shll
inc
call
into
fisttpll
add
bound
jl
adc
jmp
cmp
in
ja
icebp
cmp
fs
sub
sub
mov
push
push
fcompl
out
movsl
pop
add
pop
cwtl
fs
faddl
int3
dec
ret
add
or
pop
jo
movups
daa
mov
nop
pop
mov
testl
xchg
lret
arpl
std
jno
add
int
sub
mov
pop
enter
xor
rolb
push
int
and
leave
add
dec
std
shl
scas
or
mov
inc
cli
shl
mov
add
fnsave
add
sub
popl
les
lret
pop
dec
dec
fsubs
fstpl
cmc
call
jp
cmp
add
int
mov
add
mov
lea
les
xor
jno
test
add
scas
and
popl
add
mov
pop
fsts
dec
sub
pop
adc
add
ret
cwtl
jl
add
jae
mov
sbb
mov
incl
out
lcall
or
pop
xchg
mov
add
or
in
push
dec
or
aas
jo
add
dec
jae
cld
add
cmp
sbb
pop
sahf
mov
push
inc
mov
mov
sub
add
add
pop
popa
add
loope
data16
push
icebp
rolb
lahf
sahf
sub
mov
mov
jnp
jne
and
imul
push
cld
fdiv
test
jne
mov
pop
push
push
lcall
out
dec
add
and
mov
cmp
xor
cmp
pop
push
loop
mov
incb
push
repz
xor
ret
and
mov
add
inc
or
and
add
dec
inc
addr16
das
pop
add
jmp
int3
pop
or
xchg
mov
jns
out
ja
xor
add
cmp
nop
imul
mov
lds
shrb
adc
pop
push
inc
xor
test
adc
fmul
pop
lds
and
insl
xor
lcall
inc
sbb
jb
cmpsb
sub
aas
jle
or
mov
mov
pop
pusha
in
clc
mov
call
popa
lahf
add
mov
int3
add
mov
push
int3
jle
push
jge
es
aad
neg
add
addb
mov
sbb
mov
movsl
lock
lcall
shlb
insw
xorb
cs
movl
dec
mov
mov
rolb
add
out
mov
filds
movsb
setl
test
enter
in
rclb
sbb
out
cli
mov
orb
xchg
cmp
xchg
add
mov
into
or
dec
or
and
sub
mov
mov
cmp
imul
rolb
movb
cmp
popf
jg
pusha
fdivs
mov
cmp
pop
aaa
js
fnsave
in
dec
push
and
xchg
mov
mov
jo
aam
adc
mov
add
icebp
mov
adc
mov
jl
pushf
xchg
mov
cltd
daa
fcomps
insl
les
shll
pop
sbb
mov
js
cmp
jg
adc
pop
pop
or
mov
mov
das
andb
xor
xchg
xor
out
add
notl
jle
xchg
add
jae
xor
adc
lcall
lret
mov
les
add
addr16
xchg
out
je
out
jo
test
cmp
mov
inc
xor
out
scas
adc
sbb
pushf
pop
adc
pop
pop
cli
mov
pop
sahf
add
jmp
push
cmp
push
sti
inc
outsl
mov
jp
aad
mov
xchg
xchg
add
cmp
pushf
shll
or
je
outsl
aam
jnp
loope
cld
add
mov
rolb
dec
jb
movsb
insb
inc
divb
push
sbb
test
inc
std
jp
cld
mov
int
cmp
in
add
in
je
shr
inc
fildll
xor
or
sub
add
mov
daa
add
inc
mov
add
enter
push
or
mov
and
sub
mov
cmp
xor
xor
xor
ret
std
add
mov
aaa
jle
mov
adc
cmpsb
sti
das
andl
jo
cmpsl
inc
es
add
sbb
adc
mov
leave
add
mov
dec
movsl
cwtl
lret
cmp
out
aam
xor
add
repnz
es
adc
paddb
addl
adc
cmpsb
sbb
sub
sbb
movsl
idivl
jmp
in
cmpb
add
nop
xchg
and
push
or
or
inc
out
pop
sti
test
add
inc
aad
inc
add
pop
dec
aam
pop
mov
mov
call
lret
ret
jp
mov
mov
and
mov
xchg
xchg
stos
push
imul
jae
add
insl
push
leave
add
jmp
mov
mov
inc
aam
insb
pop
mov
add
nop
ret
jmp
ljmp
mov
stc
ret
lahf
dec
mov
inc
adc
lea
mov
jge
hlt
mov
xlat
sti
cmp
cltd
fiadds
lds
int
nop
sub
stc
rclb
adc
add
add
shl
cmovo
dec
jns
ror
sbb
das
pusha
add
ss
push
fsts
add
lcall
rolb
xor
pop
push
mov
test
lahf
adc
test
int
or
push
sub
xchg
gs
adc
mov
pop
sub
mov
popa
sti
loope
je
testb
nop
out
mov
mov
rolb
mov
jl
inc
leave
or
pop
add
mov
ljmp
cmp
sarb
in
test
mov
add
repnz
addr16
pop
jae
fcoms
addl
scas
fdivr
push
clc
or
das
mov
fs
and
add
inc
mov
sar
push
loop
push
ds
sbb
and
mov
or
inc
or
xchg
push
sub
movaps
or
outsl
push
push
aam
fimull
xor
jg
adc
nop
lock
mov
pop
scas
pop
mov
imul
ds
mov
cld
mov
or
pop
mov
arpl
fildll
add
xchg
pop
pop
adc
cli
in
dec
dec
add
pop
mov
loopne
aas
push
xchg
loop
mov
lods
pop
dec
outsb
rcll
popl
mov
call
mov
leave
mov
imul
pop
adc
das
dec
mov
add
push
aas
pop
xchg
rclb
movsl
push
xchg
mov
fidivrl
or
lret
loopne
ss
aad
xchg
add
hlt
in
rolb
into
enter
jge
pusha
outsb
test
roll
xlat
out
mov
out
jge
adc
stos
sbb
es
add
lds
and
mov
scas
sub
add
dec
ss
and
movsb
push
cld
fmuls
mov
outsl
xor
push
xchg
push
jae
pop
test
pusha
adc
in
lds
add
or
push
repnz
push
in
cmp
add
dec
sbb
out
xor
out
bnd
cltd
addb
fnsave
push
xchg
std
pop
mov
enter
inc
pop
ja
jbe
inc
sub
fidivl
jo
inc
in
cmpsb
add
xor
scas
xchg
adcl
inc
xor
adc
push
add
sub
xor
dec
adc
add
add
aas
int3
jae
cmp
in
out
add
lea
jae
or
pop
cmp
dec
pop
sbb
mov
xlat
mov
add
scas
sub
adcl
add
jmp
jne
adcb
into
adc
test
xor
xor
rcr
inc
or
das
shll
loopne
or
repz
add
sbb
jnp
in
stos
call
clc
add
and
jnp
jg
sbb
add
xrelease
and
mov
mov
pop
test
pop
mov
pop
sub
or
dec
push
jo
stos
xchg
sub
xor
mov
xor
xor
ror
jcxz
repz
push
add
jp
outsb
add
jmp
inc
or
orb
fmul
add
dec
push
xchg
inc
add
dec
js
push
mov
sahf
xorl
les
filds
inc
out
add
xorl
pop
adcb
jno
sub
adc
sub
xor
mov
or
xchg
fisubs
jo
xor
cwtl
test
add
mov
sub
andb
cli
sub
sub
lret
mov
cltd
mov
push
pop
lods
and
lcall
inc
or
jbe
add
push
shll
mov
cmp
cs
pop
popf
push
nop
adc
ret
mov
cmp
cmp
insl
add
dec
into
std
gs
sbb
mov
or
pop
pop
add
call
cs
sarl
push
stc
cltd
enter
cmp
fs
or
loope
jecxz
or
push
adc
cmp
jmp
cmp
add
bound
cmp
jo
lahf
popa
setne
aam
xchg
inc
sbb
aas
pop
push
inc
and
enter
sbb
lods
or
add
sbb
push
ret
add
jbe
mov
add
cmpsl
sti
shl
jae
lret
fldenv
cmp
or
inc
adcl
xchg
add
mov
add
fwait
cmp
xchg
add
fistpll
mov
adc
ja
cmpsb
js
adc
add
xor
nop
pusha
es
and
xor
das
iret
cmp
inc
insb
jecxz
add
cmp
push
cmp
jns
sbb
loopne
aas
jmp
mov
jno
mov
rclb
add
adc
cmp
mov
jns
mov
inc
jmp
xchg
push
dec
adc
dec
or
pop
dec
push
cmp
or
sub
pop
cmp
or
mov
jne
testb
in
lock
enter
cmp
xchg
mov
popa
mov
push
adc
push
outsl
and
cmp
push
call
mov
insb
call
inc
ret
push
mov
loopne
add
movsb
in
mov
ficoms
test
jae
scas
push
cmp
bound
pop
add
mov
std
add
mov
or
sbb
xchg
sbb
nop
add
data16
pmulhw
lret
pusha
sub
nop
xchg
adc
mov
sbb
mov
ljmp
outsl
inc
sbb
and
shll
push
and
ret
jo
je,pn
int
add
test
cmp
push
sbb
add
mov
push
add
das
data16
nop
into
bound
add
lahf
dec
in
popf
lret
add
test
dec
sub
dec
lar
xor
inc
adc
lret
cmp
add
push
add
xor
lods
add
out
add
xchg
or
out
push
sbb
sub
adcb
mov
je
add
sub
add
dec
call
sbb
loope
push
popa
xchg
decb
rcl
add
dec
adc
pop
repnz
add
orb
inc
out
sbb
xchg
aad
sub
in
cmp
xor
add
xor
add
add
pop
adc
insb
xor
outsb
and
mov
scas
adc
pop
jp
or
jge
pop
sbb
dec
sub
enter
or
add
faddl
or
les
or
mov
dec
filds
lahf
stos
sar
pop
pop
add
xor
dec
and
jmp
or
sahf
cmp
add
popa
call
adc
inc
or
ljmp
and
mov
add
inc
int
pusha
repnz
hlt
lcall
stc
add
cld
and
stos
inc
jl
fwait
xor
inc
add
xchg
setle
or
dec
inc
or
in
pop
sbb
add
adc
mov
cld
xchg
popa
dec
fisubl
emms
mov
xor
mov
test
repnz
insl
add
pop
lret
pop
cmpsb
loope
in
in
repnz
xchg
insb
cmp
adc
pushf
mov
dec
addl
xchg
pop
daa
popf
fldl
repnz
jp
add
std
addb
mov
xorb
ds
push
mov
and
add
xchg
xor
xchg
and
lock
adc
add
xor
icebp
pop
ds
int
stos
dec
movsl
push
adc
insl
loopne
add
xor
adc
call
inc
mov
pusha
xor
pop
sti
mov
mov
add
jp
xor
aas
gs
popf
test
mov
rcll
push
xor
mov
xchg
repz
ss
add
insl
mov
scas
test
stos
ja
popa
pop
mov
xor
imul
test
inc
lock
dec
or
sbb
fwait
add
daa
aaa
jmp
mov
cmp
popf
cmp
jb
or
sbb
inc
pop
add
lds
imul
ds
int3
or
xlat
adc
data16
enter
push
fwait
or
xchg
sbb
mov
orb
sbb
add
jp
inc
xor
inc
cmp
or
movsb
fisubl
sbb
mov
fistps
adc
add
into
js
add
jnp
ja
dec
call
mov
jnp
and
mov
into
xor
leave
adc
inc
pop
push
mov
outsl
cwtl
popf
jmp
lods
ljmp
mov
mov
sahf
adc
lock
mov
or
add
iret
repnz
sti
enter
in
ljmp
or
mov
dec
dec
inc
jbe
and
and
dec
mov
fsubp
and
push
and
and
sbb
inc
mov
or
jle
mov
and
test
icebp
pop
inc
scas
adc
orb
or
mov
xchg
ds
fsub
cmp
sbb
sub
movb
mov
add
test
mov
mov
outsl
ret
cmpb
ficomps
ret
or
jmp
jbe
add
inc
adc
cmp
sub
daa
xchg
lcall
add
fisttps
jmp
xor
out
movsb
int3
push
or
jns
cmp
xchg
call
inc
add
int3
enter
test
stos
pusha
mov
or
cwtl
fcmovnu
je
xchg
add
and
popf
mov
lcall
ret
add
push
insb
add
jmp
fists
mov
ss
cmp
mov
scas
dec
and
int3
push
loope
sbb
mov
push
add
inc
rorl
lahf
push
lea
sbb
push
cmc
outsl
jne
out
add
mov
fiadds
mov
inc
push
cmp
sbb
dec
xchg
in
xor
lahf
mov
xchg
int3
push
cmp
in
pop
mov
movsb
push
das
mov
lea
jle
push
aam
std
dec
cltd
and
out
fisttps
shlb
mov
mov
cwtl
xlat
scas
mov
iret
sbb
mov
xchg
movsl
insb
mov
jbe
jecxz
push
and
pop
lock
lret
push
mov
faddl
mov
push
fscale
sti
inc
out
sub
xor
nop
jl
add
dec
jnp
dec
mov
xor
xor
xor
push
xchg
push
jns
jae
inc
sub
gs
cmp
ret
es
mov
mov
jno
add
popa
dec
mov
imul
lods
movsl
jg
ljmp
pop
adc
push
inc
addr16
jp
rolb
arpl
inc
xor
jg
dec
and
pushf
jle
pop
adc
cmpsl
pop
scas
popf
add
mov
call
cmp
pop
dec
stos
jg
or
or
push
adc
das
adc
mov
push
andb
cmp
add
aas
call
dec
sbb
and
inc
jnp
add
test
icebp
aas
sbbl
jae
mov
cmp
add
ret
aaa
xor
fnstcw
sub
addl
ret
mov
add
sbb
adc
push
mov
sahf
gs
add
dec
sbbb
xlat
inc
add
cwtl
and
xor
aaa
add
sbb
lds
pop
nop
les
add
inc
popa
push
shrb
sbb
push
pop
inc
push
shrl
fisttpll
lcall
enterw
and
jp
fbstp
nop
mov
mov
les
push
jecxz
push
cld
add
scas
loopne
dec
inc
add
shll
lahf
cmp
push
nop
push
add
pop
mov
sahf
popl
jbe
xor
lret
dec
push
xor
inc
subb
pop
loope
jbe
push
sbb
pop
pop
and
push
jnp,pt
lock
add
andb
and
loop
add
push
fdivl
and
push
subl
sub
and
loopne
bnd
sbb
push
popl
test
iret
push
fcomps
add
mov
jecxz
shlb
mov
xchg
cmp
mov
dec
push
push
add
inc
jbe
ds
or
out
inc
ja
es
stos
adc
mov
xor
dec
les
and
push
mov
fsubr
stc
mov
push
ljmp
out
mov
sarl
add
adc
and
loopne
xchg
add
xor
mov
les
sub
out
pop
cltd
flds
aas
add
lods
fbstp
add
lock
ret
clc
xchg
shll
mov
xor
mov
imul
fst
inc
sub
cmpsl
lock
xchg
jbe
xchg
jne
sbb
cmp
fbstp
pop
inc
sub
sbb
out
and
mov
jmp
add
xchg
or
adc
movsb
xorl
add
out
adc
or
ljmp
stc
rolb
insl
sbb
push
or
in
jbe
add
sbb
js
ret
or
shrl
mov
sub
jl
add
dec
pop
and
jge
sbb
mov
or
test
mov
sarl
test
arpl
and
sub
cmp
andb
cwtl
aam
xlat
loopne
cmp
shlb
sti
outsl
inc
aad
dec
cwtl
jbe
iret
mov
mov
jns
sbb
shlb
scas
and
lea
pop
mov
mulb
mov
mov
and
inc
loope
push
add
lock
mov
xor
add
mov
sbb
cmp
dec
add
add
mov
pop
sbb
add
js
dec
add
ss
jb
cwtl
cld
add
test
push
mov
dec
call
mov
or
jge
mov
leave
gs
xor
shr
negb
shrb
js
add
in
leave
std
in
mov
dec
jmp
sbb
inc
xchg
and
mov
inc
xchg
add
inc
mov
jle
add
aas
call
je,pt
andb
rcr
inc
dec
ror
sbb
lods
aam
or
sbb
xchg
mov
add
out
int
mov
ss
adc
imul
mov
arpl
push
les
in
and
xchg
mov
adc
jmp
xchg
cld
xchg
add
pop
lock
push
in
pop
add
cs
jns
outsl
add
sub
int
std
aas
add
test
popf
test
mov
in
in
add
clc
mov
imul
cmp
mov
xor
cld
aas
stc
inc
adc
cmp
jecxz
ds
ret
or
jl
dec
jae
pop
cmp
dec
in
sarl
and
pop
xchg
arpl
pop
cli
xchg
rolb
pop
or
push
ds
add
sub
inc
rolb
movsb
in
push
mov
push
in
pusha
inc
rorl
loop
mov
add
icebp
or
push
sbb
cmp
sbb
and
cmp
fmull
add
add
or
pop
js
scas
es
push
mov
adc
lds
xor
push
test
icebp
cwtl
cmp
gs
fsts
mov
or
jnp
jns
outsl
addps
js
push
jp
mov
stos
pop
add
inc
cld
jae
xchg
push
xchg
out
cmp
or
dec
rorb
and
cmpsl
sub
pusha
fwait
mov
sub
add
push
fiaddl
cltd
rolb
add
jmp
das
adc
xchg
pop
mov
enter
add
popf
insb
cmc
xchg
mov
mov
pusha
jno
jg
add
sahf
jp
pop
sub
clc
andb
insb
mov
or
out
lret
mov
in
sub
shll
adc
mov
mov
add
loopne
fildl
fists
fsubrp
cld
subb
cli
pop
mov
addr16
call
jl
push
jle
shrl
into
fadds
or
mov
leave
in
orb
add
xchg
mov
pop
loopne
and
pusha
pop
lret
mov
lds
mov
push
lods
adc
in
call
jns
out
pop
outsb
or
fwait
pop
xchg
mov
dec
sahf
inc
and
mov
sub
stc
bnd
mov
cwtl
shlb
adc
mov
iret
jg
ss
mov
aad
and
cwtl
add
mulb
das
sbb
in
sbb
sub
add
sub
push
add
mov
pop
lods
mov
add
push
mov
es
fstpl
nop
jp
popf
add
adc
add
mov
ror
or
pop
xor
xor
outsl
add
mov
stc
loopne
in
sbb
pop
cld
pop
mov
jmp
and
add
in
mov
data16
into
icebp
pop
orb
add
popa
sbb
movsl
shl
nop
bound
data16
test
jmp
sbb
cs
ffree
add
pop
imul
in
je
lret
in
lods
add
xor
int3
out
out
add
out
ja
enter
cwtl
xor
ljmp
jecxz
repz
inc
xor
or
pusha
add
or
cwtl
pcmpeqb
sbb
mov
mov
scas
and
pop
repnz
mov
add
mov
inc
addl
lret
and
pop
mov
pushf
mov
xchg
ret
push
or
cld
mov
movsb
sbb
movsb
in
add
loopne
je
insb
repz
jle
lret
xchg
add
and
rcrb
push
mov
aad
loope
pop
pop
sahf
pop
or
cmpsb
rep
out
jecxz
jns
movsb
push
pop
icebp
testl
ds
sbb
mov
test
mov
pop
inc
jle
xorb
mov
cwtl
stos
dec
movsl
pop
sub
and
sub
push
js
ret
jge
int
mov
jns
jbe
into
sbb
call
sbb
jno
sbb
fmul
pusha
or
test
cmp
ret
pop
int3
jl
pusha
add
xchg
mov
into
mov
mov
add
add
xor
inc
pop
popa
das
jae
icebp
pop
cmpsl
xchg
add
push
fwait
push
push
sbb
pop
inc
pop
pop
lock
xlat
and
popa
add
addl
lods
in
mov
mov
push
mov
dec
mov
pop
push
ljmp
lcall
test
icebp
roll
bound
arpl
pop
clc
push
outsl
sub
and
push
cwtl
adc
cli
lahf
sbb
adcb
add
push
jne
aas
shrl
xchg
in
mov
jge
sbbl
xlat
xchg
jo
scas
xchg
ljmp
sbb
nop
cmp
test
add
and
leave
adc
pop
insb
add
cmc
jge
in
pop
xor
aam
cmp
les
pop
hlt
rcrl
and
add
pop
into
push
lcall
cwtl
cmp
cld
mov
loope
xor
test
mov
mov
and
je
mov
repnz
push
lods
loopne
dec
loopne
and
nop
add
add
xor
subl
std
outsb
fnsave
add
lock
add
xchg
hlt
dec
adc
and
mov
cmp
lcall
push
ljmp
jb
mov
mov
rcr
cld
mov
mov
cmc
jo
add
jg
dec
in
pop
add
push
shrb
and
inc
push
fadd
stos
lods
add
xor
mov
adc
pop
inc
xchg
adc
popl
mov
lret
xchg
dec
nop
push
add
stos
inc
jbe
and
fimull
scas
cmp
fldl
mov
cmp
outsl
add
in
cwtl
xchg
pop
popf
rclb
add
mov
and
and
mov
lcall
sbb
les
mov
pop
cwtl
in
push
add
push
pop
lahf
popa
in
push
cmpsl
ror
add
lods
cli
outsl
or
add
cwtl
aas
adc
push
rolb
jl
pop
mov
jle
js
xchg
iret
jns
loope
cmp
lret
out
and
inc
cli
push
dec
add
rorl
rclb
jo
mov
rol
mov
cmpsl
mov
stos
enter
sbb
hlt
add
push
aam
es
push
xor
push
add
mov
out
add
lret
mov
stos
add
shr
sbb
clc
add
div
add
cmp
add
fcompl
stc
and
into
add
push
cmpsb
add
push
in
mov
fidivs
fsts
xchg
test
dec
add
add
aas
out
mov
inc
inc
sbb
mov
inc
pop
and
rorb
insl
xor
add
add
jmp
inc
inc
add
mov
int
add
jo
clc
out
mov
sub
pusha
fs
roll
push
mov
fisttpl
jmp
xor
push
inc
mov
cli
fs
negb
stc
arpl
cmc
and
lret
jl
mov
repnz
add
fcmovu
mov
push
stc
add
pop
cltd
sub
sub
add
mov
or
mov
push
xorb
xlat
xor
adc
mov
lret
mov
in
divb
sub
imul
lcall
xchg
or
repz
popa
add
mov
lock
in
nop
std
cltd
rcl
fucomip
add
mov
push
icebp
add
pop
repz
add
std
lahf
cbtw
dec
loopne
ljmp
sbb
xor
xchg
mov
dec
pop
pop
cmc
add
mov
jecxz
lret
bound
sbb
outsl
repnz
adc
cld
rep
cmp
out
mov
add
aaa
popf
push
stc
mov
and
cmc
dec
mov
sub
cmp
adc
add
mov
loop
aas
fisubs
cmpsl
cmp
adc
bound
xrelease
sbb
cmpb
xchg
dec
cmp
test
subb
repnz
or
mov
les
adc
popf
xor
inc
mov
dec
out
mov
in
adc
mov
push
movsb
sub
xor
andb
rcl
jnp
out
filds
mov
xor
jmp
sti
push
sbb
loope
dec
or
sbb
sbb
ret
mov
xor
add
scas
incb
fwait
loope
cmp
add
jp
sbb
or
sarb
pop
int3
mov
inc
or
ja
andb
push
mov
jns
add
nop
movsl
popa
cmp
stos
xchg
cld
lahf
push
ret
testl
push
test
in
outsb
hlt
and
xchg
add
push
dec
mov
inc
cmpsl
or
add
js
add
inc
inc
sub
loopne
cltd
loopne
or
sbb
loopne
loop
add
inc
aaa
cmp
add
inc
xor
or
stos
andb
cmpsb
dec
xor
mov
inc
and
add
andb
repz
pop
cmp
out
inc
out
or
aad
or
and
loop
and
in
les
pop
ja
mov
jae
jne
sub
mov
lret
pop
and
inc
inc
xor
adc
or
push
inc
mov
fs
and
mov
pop
add
adc
jmp
test
pop
test
pusha
lret
aad
icebp
adc
push
inc
das
adc
dec
sub
add
inc
jb
aaa
jge
add
xor
add
and
mov
add
sbb
and
mov
push
xor
jmp
sub
add
xor
push
mov
andl
inc
shrb
sbb
jp
pop
rcrb
cmc
dec
movsb
mov
nop
push
or
in
out
mov
adc
or
add
mov
sbb
cmp
sbb
enter
push
adc
cwtl
add
stos
arpl
leave
sub
test
and
lock
mov
mov
add
hlt
push
pushf
in
das
not
pop
mov
out
movsl
or
cld
cld
add
scas
shrl
push
loop
loope
loop
fdivrs
cmp
cmp
addb
add
hlt
stos
iret
roll
aam
xchg
mov
adc
pop
outsl
push
push
pshufw
mov
pop
mov
int3
int
xchg
jg
lods
xor
pop
add
in
mov
mov
push
mov
push
mov
sbb
fldenv
pop
lret
cmc
add
adc
int3
add
icebp
pop
fiadds
push
push
xor
add
push
add
xorl
mov
mov
inc
xchg
clc
in
sub
push
push
cmpsb
imul
clc
inc
js
and
test
ljmp
adc
and
jbe
mov
dec
shll
mov
sub
xchg
mov
cltd
inc
sbb
repz
inc
clc
adc
mov
negl
jmp
fstpl
add
or
and
mov
mov
mov
pop
add
pop
xor
icebp
shrb
jecxz
mov
add
stos
aas
jb
push
push
fsubp
push
and
add
lcall
enter
das
cltd
fs
add
ljmp
add
lods
add
pop
or
daa
in
and
cwtl
aam
popf
and
mov
jl
aaa
cmpsb
imull
mov
mov
out
add
faddp
push
and
enter
outsb
clc
jne
mov
add
mov
pop
xor
sysenter
test
sub
out
sub
arpl
push
push
lret
popa
add
mov
cmp
imul
std
insb
loop
mov
cmp
mov
sub
dec
push
stos
repz
popf
add
adc
jno
xlat
lea
pavgb
xchg
and
mov
mov
xchg
sbb
fidivs
and
sub
repnz
cmp
jae
ljmp
je
jl
and
mov
xchg
or
pop
mov
cmp
mov
dec
pop
test
call
sub
xor
and
add
add
rcll
test
es
je
sub
and
jno
fiadds
dec
jle
stos
fadds
mov
sub
add
inc
rorb
aam
movsb
add
cmp
jecxz
addb
dec
fsubp
out
add
sbb
lret
lods
inc
scas
loope
add
mov
mov
xchg
popa
mov
inc
dec
xchg
pop
push
loopne
add
pop
in
gs
mov
aas
inc
mov
cs
out
add
or
negl
insb
sbb
cld
sarb
add
xchg
rolb
adc
pop
xor
push
or
cmc
sub
lcall
out
jmp
and
out
jle
mov
jecxz
mov
jae
dec
les
mov
sub
add
pusha
xchg
inc
daa
cmp
mov
mov
iret
cld
xchg
pop
data16
call
jmp
pushf
push
pop
dec
iret
dec
sbb
nop
ljmp
jo
fwait
lahf
mov
adc
rcr
pop
adc
movsl
addl
mov
xchg
mov
cs
inc
sub
insl
je
add
dec
in
mov
or
stos
xchg
orb
or
enter
adc
add
imul
fwait
adc
pushf
jbe
or
stc
out
push
push
add
rclb
shll
inc
push
popl
ror
out
add
clc
dec
pop
cmpl
notl
jne
sub
fidivrl
aam
or
sarl
cwtl
daa
add
mov
sarb
mov
ret
push
sbb
ss
shlb
stc
icebp
filds
loopne
mov
iret
call
shrb
mov
aam
add
jecxz
sbb
cmp
enter
jae
and
bound
jno
ljmp
sbb
jg
mov
mov
addb
jae
lcall
lret
push
sahf
daa
push
sub
popw
in
add
lods
mov
xlat
pop
idivl
js
sbb
mov
adc
fimuls
cs
clc
inc
repz
inc
add
pop
lds
pushf
fsubrs
push
xor
sahf
add
outsb
iret
int3
fcmovnu
jg
or
push
pusha
sbb
push
cwtl
adc
cmp
mov
mov
fsubl
leave
adc
in
fdivrl
jo
mov
repnz
mov
and
or
pop
inc
sbb
xlat
push
sub
mov
repnz
pop
pop
add
push
js
or
pop
cmp
std
add
jo
mov
mov
or
stos
dec
mov
cmovle
mov
outsl
xchg
out
mov
enter
adc
cmc
push
mov
stc
cmp
enter
jo
sub
inc
and
pop
add
sbb
xor
push
adc
out
pop
in
add
add
pop
add
and
mov
andb
call
fimull
in
xchg
mov
jmp
negl
add
int
daa
enterw
add
loop
and
mov
add
pop
adc
and
movsl
and
pusha
add
or
cli
xchg
mov
add
add
mov
adc
mov
data16
add
pop
lock
add
popa
add
mov
dec
loopne
add
insl
pusha
out
aam
int
clc
lahf
and
fistpll
add
cmp
int3
movsl
add
pop
jns
sub
mov
push
test
push
and
xchg
clc
out
add
std
movb
repnz
and
cmpsl
push
jp
lock
xor
stos
sbb
push
aas
push
add
in
ja
dec
xchg
pusha
out
cmp
mov
cmpb
adc
inc
add
cmc
xor
fsts
pop
xor
nop
cli
lea
add
jge
xchg
dec
addr16
add
and
push
jno
push
aam
push
add
mov
mov
push
adc
add
push
insl
ret
add
adc
mov
xchg
aad
in
jae
lods
jo
ficompl
add
jecxz
test
je
in
test
xor
add
lods
ficomps
enter
and
fwait
cmp
in
add
or
sub
lret
loop
into
shll
std
or
adc
inc
aaa
xchg
mov
add
divl
cwtl
xchg
js
stos
repz
popf
add
and
cmp
adc
sbb
movsl
call
cmp
jp
mov
js
sahf
mov
loopne
stc
pop
add
jae
jne
dec
dec
add
aas
scas
lret
les
add
mov
jp
add
test
mov
xor
add
jge
mov
xor
sub
mov
adc
neg
pop
push
xchg
push
adc
sbb
or
add
scas
out
inc
sahf
shrb
pop
fwait
dec
out
add
into
push
add
daa
cld
inc
add
pushf
mov
mov
jge
lock
mov
add
and
add
dec
enter
pushf
imul
mov
add
mov
pusha
mov
dec
adc
hlt
inc
stc
adc
sub
testl
mov
jnp
sahf
add
int
sbb
test
shrb
dec
sub
or
add
js
int3
push
clc
add
enter
ror
xchg
out
add
push
inc
add
stos
inc
loope
lock
add
xchg
gs
adc
sbb
mov
ss
add
rolb
mov
out
or
mov
mov
loop
add
mov
repnz
lods
adc
arpl
call
jge
add
xchg
sub
pusha
clc
aam
sbb
arpl
aas
popf
jne
xchg
push
lcall
inc
jle
jbe
adc
notl
scas
dec
add
add
sub
or
inc
xor
add
stos
mov
test
cmp
in
rclb
cs
add
fdivrs
sub
sbb
xchg
and
aaa
std
sbb
or
rcll
add
mov
xor
testl
sarb
and
add
add
inc
icebp
cld
clc
add
push
sub
or
outsl
data16
nop
cmp
pop
mov
or
or
pusha
addb
aaa
adc
in
xchg
and
push
je
test
dec
lock
rolb
popa
or
add
test
push
push
add
jp
dec
inc
movsb
jo
sub
sbb
int3
add
lea
aad
ret
stos
push
cmp
aas
push
popf
add
or
cmpsl
ret
or
test
xchg
imul
cmp
mov
fwait
xor
mov
adc
es
stc
cltd
and
cmp
enter
mov
sbb
inc
jbe
leave
pop
lock
and
add
mov
mov
add
cmpsl
test
loopne
adc
test
movb
dec
repz
pop
call
push
add
fsubs
xor
pop
into
aad
cmc
les
testl
repz
dec
add
out
pop
add
jmp
ljmp
add
outsl
mov
outsb
adc
gs
dec
lods
xor
test
inc
pop
outsb
or
mov
adc
or
cld
add
repnz
shrb
pop
pushf
add
cwtl
pop
push
das
call
inc
cmp
daa
xor
xchg
inc
aad
adc
pshufw
cmpsb
inc
les
jmp
and
loope
das
cld
mov
jl
xchg
push
sbb
ds
test
shrl
xchg
out
nop
gs
mov
or
je
sbb
mov
xchg
iret
lock
add
cli
add
out
push
pop
adc
sbb
sub
sub
push
in
and
std
lret
out
rcr
in
cmp
adc
xchg
insb
push
enter
rcll
xchg
pusha
add
pusha
add
enter
loop
lcall
call
ret
fimuls
pop
inc
sar
mov
and
lret
jo
push
add
and
movsl
es
cld
nop
jo
xchg
incb
push
enter
sbb
or
ljmp
adc
push
jecxz
or
dec
into
jl
fdivl
rorb
mull
jecxz
xchg
add
add
and
lock
jns
mov
outsl
cwtl
pop
bound
je
jbe
xcrypt-cbc
cmpsl
push
mov
aas
inc
call
out
add
jo
jno
jmp
out
movsl
xchg
cmp
add
sub
cmp
inc
jno
test
pop
xor
jbe
jecxz
loopne
xchg
add
sbb
xor
outsb
add
xor
push
aad
scas
dec
fldl
inc
pusha
push
or
gs
inc
nop
cmp
rclb
cmp
jno
adc
jl
mov
int
imull
cltd
lock
sub
xor
sub
hlt
mov
push
or
pusha
add
and
filds
jmp
in
add
adc
pop
xchg
fcomps
add
les
shll
add
and
fidivs
jb
add
push
es
xor
add
xchg
outsb
nop
or
je
push
add
movsb
sar
add
pop
stos
inc
dec
or
mov
add
fcoms
sbb
xchg
xchg
dec
pop
in
add
pop
addb
mov
add
adc
xchg
fildl
imul
mov
scas
aad
js
aas
mov
or
mov
icebp
add
ja
loope
push
xor
jnp
add
sub
movsb
fldl
scas
ret
mov
pop
mov
adc
jmp
add
daa
out
pop
pusha
lods
push
adcl
sub
std
mov
pop
mov
pop
xor
add
push
mov
mov
int3
ret
ret
push
xchg
push
lds
jp
out
add
add
inc
rclb
fisubrl
pop
lds
push
cmp
imul
mov
sbb
add
mov
and
jmp
and
pushf
shr
mov
and
sbb
jge
add
xchg
pop
fcmovbe
ret
sub
jecxz
mov
add
popa
or
lret
dec
loopne
ret
add
repz
and
xlat
xchg
push
or
test
add
push
sub
shl
mov
lahf
and
lds
mov
xor
add
xchg
adc
sbb
movsb
add
ja
call
and
arpl
sub
jno
inc
pushf
aam
cmp
lods
cmp
fchs
cs
sub
ljmp
xor
icebp
imul
and
je
add
std
sub
pop
add
sub
add
or
push
dec
sbb
inc
subl
and
in
dec
inc
pop
add
adc
mov
inc
lds
xchg
cmp
addb
and
gs
mov
and
and
pop
or
aaa
inc
add
sub
add
nop
sub
inc
dec
stos
jo
mov
add
jne
add
ret
or
sub
arpl
sbb
and
pop
sbb
gs
add
ss
fsubl
bound
shlb
stc
adc
mov
popl
orb
add
pop
adc
inc
sahf
add
sar
adc
mov
inc
jge
or
stc
arpl
sbbb
jae
ljmp
cs
add
hlt
sarb
loope
cld
lock
xlat
xchg
xchg
mov
pop
lcall
add
dec
fs
ret
add
lret
jbe
cltd
fst
sub
dec
pusha
sub
add
ret
imul
adc
mov
ja
cmpsl
add
das
push
mov
movsb
add
ljmp
mov
push
int3
jge
sub
jo
imul
add
loop
sub
rorb
dec
loope
add
dec
mov
mov
xchg
mov
jne
mov
test
in
scas
add
cltd
aas
pushf
inc
adc
lods
jbe
add
rolb
mov
add
dec
aam
loopne
xchg
sbb
leave
push
jns
and
add
adcb
dec
xor
mov
push
mov
outsb
adc
cmovs
aas
loop
cmp
enter
subl
or
xor
add
pop
and
mov
xchg
cmc
adc
fisttpl
xchg
or
cwtl
inc
pusha
jle
es
nop
cmp
cmp
lock
leave
cmpsl
subl
add
loopne
pop
sbb
add
jo
call
mov
and
sbb
inc
cmp
cld
adc
mov
xor
xchg
mov
insb
jecxz
adc
sub
sub
in
test
in
xchg
es
cli
push
pop
and
jmp
gs
mov
add
cs
push
sub
mov
cmc
sub
add
cltd
inc
dec
out
popa
ljmp
push
fprem1
and
clc
scas
je
pop
aaa
adc
add
pop
pushf
push
imul
lock
lods
loop
and
jbe
push
cmp
add
shll
sahf
stc
add
mov
pop
inc
add
ds
lods
and
jp
pop
stos
adc
loopne
scas
and
cld
cmp
gs
jecxz
mov
out
mov
dec
nop
clc
add
inc
cmc
dec
add
addr16
xchg
test
shrb
xchg
or
xorb
js
aam
andb
add
fmull
in
out
stos
pop
lds
fdivl
enter
mov
test
mov
inc
add
iret
pusha
mov
mov
loope
cmp
add
pusha
mov
lods
push
jo
pop
addr16
out
imul
inc
cld
or
loop
push
enter
cmp
push
mov
sub
push
mov
daa
sub
testb
push
jmp
enter
dec
and
sbb
inc
add
in
arpl
movsb
ret
inc
fistpl
pop
adc
cmp
or
shll
jmp
jp
pop
lret
inc
fsubrs
inc
jo
int3
push
mov
adc
add
cmp
shr
jb
add
xchg
jp
cld
movsl
mov
add
faddp
jmp
sbbl
and
xchg
movsl
mov
je
pop
ret
stc
pop
nop
push
and
xor
rolb
inc
pusha
or
bound
mov
add
mov
pop
scas
pop
mov
mov
orb
pop
and
sarb
mov
cmpb
das
add
lahf
das
dec
es
imul
fstps
mov
loopne
add
inc
imul
or
divb
and
adc
mov
in
sbb
jg
add
xchg
mov
cmc
sub
mov
add
inc
sti
popf
add
in
mov
in
mov
das
cltd
xorb
push
add
insl
mov
sub
jmp
dec
sbbb
bound
test
inc
dec
cli
dec
push
sub
scas
int3
add
sbb
add
aad
outsl
add
dec
icebp
icebp
push
jp
inc
dec
pop
aad
cwtl
gs
add
xor
xchg
jae
cltd
adc
popf
and
pop
adc
stos
add
enter
aad
loopne
inc
call
add
mov
adc
pop
sarl
aas
leave
cmp
add
aam
fwait
sbb
mov
pusha
mov
movsl
add
jmp
xlat
aas
or
xor
and
imul
and
jbe
lock
mov
push
out
mov
in
adc
stos
xorl
sbb
inc
lock
dec
loopne
int3
ret
jmp
nop
push
xlat
repnz
leave
inc
in
pop
xchg
mov
sti
negb
cwtl
faddl
mov
lods
arpl
add
subl
sahf
xchg
or
sub
pushf
arpl
popf
sbb
lret
add
pop
pop
pop
jnp
cmp
or
inc
fiadds
pop
adc
cwtl
lods
add
stos
enter
or
jge
dec
nop
fcompl
push
inc
and
push
mov
adc
adc
xchg
fwait
sub
aam
mov
femms
pop
insb
call
std
out
repnz
shll
shlb
rcrl
xchg
mov
loope
xor
ds
int3
sub
div
add
mov
scas
pop
or
or
lret
sub
xor
sub
aam
sbb
jns
xor
add
dec
scas
loopne
mov
mov
xchg
psllq
rolb
and
rorb
jp
jne
test
xor
pop
pop
sbb
out
in
fsubrs
add
fcoms
inc
fildll
repnz
lcall
sub
or
mov
jne
into
add
orl
add
movsl
jp
xchg
sar
sbb
mov
cli
mov
jo
dec
xchg
sahf
or
and
arpl
shr
jl
cmp
or
mov
add
out
add
sarb
mov
adcb
add
loopne
out
cmp
jns
sarb
push
lods
add
enter
and
sbb
jg
pop
adc
dec
jo
push
push
leave
mov
pop
popa
pop
jo
jno
pop
loopne
and
sbb
flds
xor
idivb
push
icebp
rol
rolb
es
xor
incl
and
cmp
push
push
xchg
sbb
arpl
das
nop
jbe
add
mov
jbe
add
arpl
and
test
ss
xchg
push
push
mov
call
xor
and
add
adc
ficomps
sti
lret
inc
xor
dec
divb
popf
int
mov
test
dec
inc
fistpll
and
inc
dec
jmp
bound
icebp
js
pop
mov
cmp
inc
mov
outsl
xor
fldenv
inc
sub
inc
add
cld
cmp
xchg
inc
add
push
add
pop
sub
sbb
dec
cmp
gs
call
incb
mov
js
sbb
add
rclb
mov
shr
or
jge
cmp
sahf
mov
dec
call
dec
sbb
loop
push
ror
xchg
add
cltd
popl
or
xor
lods
subl
pop
pop
add
or
fsubrs
and
adc
mov
or
inc
cmp
mov
cltd
sbb
cmp
push
pop
rol
out
enter
imul
mov
addl
out
sub
stc
ja
dec
and
jbe
test
cmp
fs
je
arpl
sbb
lret
add
aaa
out
and
add
or
mov
inc
pop
mov
add
xor
pop
add
cld
mov
or
pop
cmp
mov
test
enter
jne
mov
pop
adc
pop
movsb
call
mov
xor
stc
cltd
mov
dec
pop
cs
adc
movsb
add
mov
lret
fwait
lds
adc
test
add
add
jb
clc
in
cmp
popf
jo
add
shrl
movl
push
rcrb
mov
pop
mov
stos
pop
and
flds
mov
negb
mov
dec
mov
and
data16
movsl
mov
inc
add
or
popa
lods
push
add
addb
in
inc
jo
int3
test
xor
bnd
mov
cmp
jb
das
add
inc
xchg
dec
and
xlat
add
inc
fmull
fsubrp
inc
test
pop
add
nop
adc
add
mov
mov
jb
int
jg
pop
xchg
add
les
mov
testb
mov
sub
add
int
pop
jns
cltd
fstl
add
add
icebp
lods
fcoms
jo
cwtl
add
sahf
add
cli
push
jmp
pop
mov
or
jo
clc
sti
push
xor
jle
mov
cmpsl
mov
fdiv
mov
cmp
fsubs
jle
xor
mov
push
dec
xor
jg
jecxz
cmp
add
je
aas
fadds
xchg
addr16
les
xor
sub
ljmp
out
sbb
xchg
add
xor
movsl
sbb
in
sub
call
mov
xor
es
xor
lock
ficomps
lcall
pusha
and
mov
xchg
sub
seto
add
fwait
xor
fistpll
add
cwtl
inc
jl
flds
mov
jne
add
inc
mov
out
push
pop
sub
lret
or
rcrb
push
xchg
outsb
push
int3
lahf
test
add
mov
xchg
outsl
ret
mov
sbb
popf
loopne
jp
adc
push
add
push
jle
mov
cmp
mov
jecxz
mov
sbb
mov
pop
stos
add
mov
aaa
push
mov
stc
inc
es
jecxz
das
xor
mov
cmpb
mov
aam
and
or
inc
outsb
das
and
xchg
sub
lret
ja
mov
adc
scas
sub
jmp
sub
lock
and
pop
add
xor
mov
sub
inc
cmp
and
inc
out
sbbb
mov
dec
lods
jecxz
clc
add
and
mov
pushf
mov
add
loop
push
ss
xor
push
scas
bound
dec
add
mov
out
out
adc
inc
inc
movsb
sahf
jg
sbb
xorb
push
xchg
out
add
and
add
sbb
in
fld
pushf
out
in
ja
cmp
add
xor
clc
and
rorl
mov
iret
ljmp
dec
inc
loopne
into
jnp
add
pusha
or
dec
clc
mov
inc
iret
bound
xlat
push
add
stos
and
popf
out
outsl
add
cmc
retw
adc
and
imul
lods
push
std
div
pop
loop
xchg
pop
loopne
or
or
jl
fisttpll
rcll
enter
sbb
icebp
xor
aas
cmpsl
and
sbb
ffreep
xor
add
mov
ret
pop
jo
mov
pop
mov
xor
dec
inc
adc
aas
loopne
fwait
repnz
popa
cwtl
inc
dec
mov
in
push
dec
int3
sub
sub
cmp
mov
ret
dec
mov
jle
add
fldt
cmp
xor
add
testb
aam
or
and
es
push
add
insb
rclb
dec
xchg
push
add
push
fsubr
add
jnp
add
mov
jne
xchg
popf
stos
inc
out
ljmp
mov
cmpsl
arpl
or
mov
aas
push
push
or
or
repz
xchg
dec
cmpsl
cmp
rolb
std
pusha
dec
outsb
or
cwtl
in
pushf
vpcomub
scas
addb
test
cmc
cmp
repz
sub
xchg
sbb
lahf
pop
and
clc
xlat
aad
xchg
pop
pop
sti
push
stc
lock
sbb
rorb
pop
cltd
mov
dec
sbb
add
out
pop
jg
es
inc
es
xchg
xor
xor
dec
or
add
jns
lods
sti
xchg
or
xchg
cmc
jno
xchg
add
mov
pop
jl
fmull
jb
mov
shl
fcmove
sahf
add
in
sbb
sbb
add
gs
sbb
inc
jae
inc
shrb
mov
fiadds
icebp
sub
test
cmp
ja
jge
lret
ficomps
lods
idivb
add
loopne
pushf
add
es
inc
outsl
pop
xlat
and
jl
test
pop
mov
or
fistps
in
ds
addr16
sub
pusha
xchg
jbe
shr
dec
fcmovbe
xlat
xor
xor
stc
cltd
nop
jnp
fists
shlb
loopne
pop
add
xchg
mov
lret
pop
push
add
xorb
ljmp
mov
cld
sub
das
add
gs
sarb
cmpsl
cwtl
clc
cs
mov
xchg
add
shrb
mov
adc
aam
push
adc
xor
ret
ficoms
xor
add
cwtl
mov
adc
int3
mov
sub
lock
push
jge
rcll
pop
add
cltd
cmp
shl
add
add
cli
push
cmpsl
sub
xor
mov
mov
jns
add
jmp
call
mov
lock
mov
js
push
inc
imul
jbe
call
push
ffree
and
ja
lea
xchg
in
out
add
clc
pop
mov
orb
inc
push
dec
lret
add
or
in
mov
xlat
loop
mov
pop
mov
repnz
mov
cmpsb
or
into
stos
cmp
mov
cmp
jne
imul
add
jb
cmpsl
nop
cmp
add
sarl
clc
push
aam
test
lahf
aam
push
add
xor
cs
or
add
adc
cmpsb
lcall
js
jbe
add
mov
or
hlt
in
call
mov
js
add
push
outsl
filds
xor
xchg
in
loopne
xchg
mov
addb
jb
xor
in
sbb
add
cld
sbb
or
pushf
pop
push
jne
mov
pusha
jg
xor
cld
in
add
pop
pop
mov
xchg
mov
test
loope
daa
xlat
mov
jnp
out
enter
ja
add
jmp
push
pop
pop
movsb
mov
mov
testb
lret
adc
sub
push
pop
add
std
add
and
mov
inc
pop
jge
repnz
pop
cmpsl
cmp
rclb
das
add
cmp
adcb
xchg
shll
movsl
add
rorb
orb
sbb
adc
add
pop
shrl
pop
xor
add
test
jb
out
in
add
orl
add
lods
sub
ret
out
push
cmp
sbb
int3
inc
orb
add
pop
dec
daa
jb
lock
mov
jle
pusha
pusha
adc
imul
jnp
test
add
sets
movsb
jge
outsb
dec
lahf
subl
jmp
add
cltd
lock
add
aad
add
mov
jbe
jno
movsb
add
fists
xchg
jle
nopl
mov
push
mov
xchg
pop
out
pop
xchg
or
and
push
andl
imul
push
and
add
nop
sub
insb
add
leave
mov
js
popl
mov
jg
add
pop
aaa
push
add
xchg
add
sub
divb
int
stos
mov
pop
lods
push
add
and
jecxz
in
loopne
mulb
add
popa
inc
jae
dec
andl
add
mov
pop
testl
or
test
pusha
rorl
pop
insb
jp
mov
mov
in
out
rcrb
or
adc
add
xchg
xor
clc
jo
add
movsb
pop
test
movsl
add
sub
mov
mov
xchg
std
or
cmpsb
nop
sbb
push
jnp
or
add
notb
imull
enter
and
data16
pop
dec
add
out
push
imul
inc
sub
test
clc
xorl
or
mov
subb
aas
push
in
stc
repnz
dec
addb
pop
adc
add
adc
faddl
icebp
and
or
xchg
out
push
add
sarb
lcall
bound
ds
pushf
push
fwait
cmp
movl
jbe
mov
sub
push
mov
stos
faddl
mov
mov
mov
loop
cmp
sub
ja
or
pop
jnp
orl
xchg
test
jp
fsubrl
pop
call
push
fcoms
clc
popf
push
add
lret
jb
dec
add
cmp
mov
or
js
xor
je
pop
cli
mov
subb
jb
add
jae
mov
in
add
push
add
pop
push
jge
pop
jne
add
pop
adc
push
add
cld
scas
add
mov
push
aas
shlb
stos
xchg
stos
gs
pop
inc
add
out
and
push
push
add
jb
outsb
xor
mov
cmp
ja
or
cltd
mov
add
push
lds
std
sbb
rolb
rolb
and
or
mov
or
lret
xchg
into
loop
xchg
lods
pusha
inc
or
push
mov
add
popl
mov
lods
sub
cld
scas
and
stos
jg
add
call
lea
cli
mov
jo
mov
push
rcr
pop
or
call
jl
dec
das
mov
addl
inc
les
into
mov
adc
popa
xchg
pusha
adc
out
add
dec
mov
je
push
mull
pop
stos
outsb
addl
cwtl
addb
xor
pushf
add
push
adc
hlt
jl
mov
or
cld
add
pop
cmp
imulb
xor
pop
out
cltd
mov
pop
shlb
add
loop
xchg
push
adc
add
scas
repnz
fcomps
fisttpl
pop
push
xchg
xchg
mov
loopne
insb
ret
mov
pop
outsl
and
push
fwait
add
mov
sbb
pop
jns
xchg
rcrl
scas
orl
sub
adc
sahf
jl
je
push
loop
inc
shr
icebp
xor
jnp
pop
xchg
call
loopne
dec
pop
push
mov
push
add
ss
push
jae
addr16
cltd
mov
rol
push
popf
adc
jo
and
sub
mov
cli
add
mov
and
fsubl
adc
add
add
push
xchg
dec
lds
push
sub
scas
mov
xchg
pushf
add
pop
in
pop
add
lock
xchg
add
pushf
push
daa
xor
imul
xorl
add
inc
das
mov
sbb
pop
fists
push
mov
enter
add
ss
cmp
incl
pop
js
sbb
dec
call
adc
pop
pushf
xchg
push
pop
enter
add
adc
pop
mul
pop
cmp
jnp
push
sbb
sbb
test
nop
dec
add
cmp
leave
dec
inc
and
test
push
pop
or
xor
cld
scas
mov
sti
add
dec
rclb
cmp
jecxz
loope
xor
dec
lds
fdiv
dec
shrb
test
addr16
and
rcll
mov
cmpsb
mov
add
shr
out
add
and
mov
and
int3
jecxz
and
ss
pusha
pop
adc
out
pop
mov
xor
push
in
xor
fcoms
test
add
push
enter
mov
pop
and
and
add
pop
sub
lcall
sbb
push
cmp
mov
add
mov
scas
jmp
out
add
xchg
loope
pop
xchg
add
mov
inc
mov
jbe
push
xchg
ss
mov
jns
add
or
pop
clc
xor
cwtl
std
adc
jne
inc
insb
pop
imull
rolb
cmp
movsl
push
and
add
pop
inc
shl
fs
negl
or
inc
add
mov
push
mov
pop
push
shlb
mov
pop
mov
mov
sbb
add
and
xchg
lea
and
push
add
out
js
add
inc
lcall
add
dec
or
mov
sub
clc
pushf
adc
xor
into
add
call
addr16
loope
cltd
adc
orl
fdivrp
inc
mov
sub
dec
cmp
sbb
adcb
jo
vcvtdq2ps
inc
mov
or
das
jno
stos
fmuls
add
orb
daa
add
testl
frstor
call
add
jmp
xchg
xlat
inc
push
jo
mov
jp
or
rcll
mov
movsl
add
mov
jp
in
loopne
add
in
or
rcll
adc
cld
push
and
mov
cmp
and
fcoml
add
mov
fdiv
test
pop
mov
xor
add
loope
add
mov
popa
sbb
stos
jl
dec
cmpsb
cmp
push
hlt
iret
add
xlat
cld
imul
push
jg
negl
movl
ja
arpl
add
lods
pop
pop
dec
rcrb
lret
xchg
ret
or
inc
add
outsb
loop
lock
dec
pop
inc
sbb
lock
les
cmp
ftst
aad
lahf
mov
jno
daa
add
sub
add
clc
inc
push
mov
xor
and
inc
ret
fdivl
xchg
add
add
xchg
jmp
popf
popl
push
jge
sbb
sub
mov
jg
add
jmp
jbe
popa
call
lods
pushf
adc
add
sub
cmpsb
jge
jecxz
jo
leave
xchg
rorl
inc
push
xor
lds
aam
das
iret
mov
xor
add
push
add
loop
add
inc
dec
subb
lds
xor
and
test
lret
cmp
shl
int3
fsubr
add
or
sub
add
mov
fists
xbegin
inc
int3
cmp
mov
shl
ja
sub
adc
in
cmc
sahf
int3
loope
ffree
int3
in
dec
lea
add
xor
adc
add
filds
lods
cmp
test
ja
lock
add
dec
ret
push
dec
lock
or
fisubl
insl
sysret
or
jmp
outsl
jb
or
lods
add
aaa
xor
add
push
adc
das
mov
std
test
jg
adc
mov
call
sub
aaa
out
ret
dec
push
loop
jne
xor
leave
cmp
or
mov
add
lcall
add
mov
add
jnp,pt
sti
add
lahf
fisttpl
mov
push
inc
push
int
sbbb
jnp
loopne
fstps
mov
pop
jmp
push
nop
or
jle
jl
mov
xor
mov
add
sub
or
call
ss
int
fmull
enter
cld
fs
push
xlat
xchg
jbe
shl
jae
lods
mov
gs
jle
out
inc
movsb
mov
add
loopne
cld
sub
loopne
lds
xor
sbb
fldl
movsb
in
mov
jge
stos
mov
cmp
add
pop
or
movsl
mov
xchg
push
ltr
roll
mov
movsb
pushf
jns
sbb
cmp
int
cmc
add
mov
fcoml
addr16
lds
jge
cmp
je
subb
les
pop
popa
movsl
lods
fdivrs
cwtl
mov
sub
int3
and
loope
lret
cltd
mov
pop
or
inc
ss
outsb
mov
std
inc
in
gs
rorb
sub
add
xlat
push
sub
repnz
adc
movsb
pop
add
jg
sbb
add
cwtl
rorl
bound
and
in
mov
stos
stos
test
shlb
popa
pop
je
mov
sub
mov
rcrb
int3
sub
shl
add
dec
sahf
push
mov
mov
xchg
cld
fdivrl
fstpl
and
js
dec
add
hlt
mov
push
or
rclb
shrb
xor
icebp
sbbb
mov
mov
mov
mov
jecxz
and
lock
jmp
jae
sti
xor
roll
inc
xchg
mov
pop
arpl
and
fs
mov
pop
aam
fldl
add
push
jecxz
add
add
pop
pop
dec
push
add
inc
jbe
or
cld
sub
push
add
add
rcrl
mov
movsl
popf
cmp
mov
cli
mov
outsl
cmp
mov
sub
jecxz
pop
pop
rcll
pushf
add
add
push
enter
loop
bts
lret
outsb
or
push
xchg
hlt
insb
pusha
add
mov
push
sub
push
dec
scas
fxch
dec
jecxz
cmp
nop
push
sub
or
xor
shlb
daa
popf
sbb
bound
adc
push
push
jo
inc
les
and
addb
adc
sbb
test
fcmovne
adc
mov
andl
icebp
add
loopne
dec
enter
mov
fnstcw
cmc
mov
mov
push
repz
mov
dec
movsl
mov
push
out
jp
cli
and
or
add
fidivrl
add
test
mov
mov
and
mov
lock
into
adc
cmpb
lods
out
cli
mov
pop
lahf
xchg
lcall
xor
add
mov
divb
inc
adc
test
stos
addb
stos
sbb
out
push
rolb
ss
lea
frstor
stos
notl
dec
dec
aaa
adc
mov
pop
subb
mov
xchg
add
cmp
mov
paddw
notl
cld
add
sbbb
jns
test
iret
adc
shrb
jae
fildll
add
dec
or
mov
mov
cld
int3
dec
jns
call
or
cltd
cmpb
add
or
int3
or
pop
out
sbb
loopne
add
mov
xlat
lcall
dec
sbbl
and
pusha
or
sbb
mov
add
pop
test
mov
pop
loopne
jge
push
cs
pusha
out
loop
mov
shl
inc
xor
and
xchg
ficoms
add
rorl
in
xchg
pusha
lods
in
or
fsts
push
cli
jbe
xor
adc
addr16
and
jne
gs
fwait
add
pop
jmp
xlat
jp
ljmp
add
push
fisttpl
out
out
daa
adc
dec
adc
shll
nop
addb
add
add
mov
jmp
out
and
loop
mov
enter
inc
inc
mov
out
mov
mov
iret
pusha
inc
subl
push
push
mov
xorb
fistl
pcmpgtd
in
daa
mov
les
or
mov
fiadds
adc
nop
mov
std
lds
add
sbb
out
mov
inc
adc
outsl
sahf
xchg
testb
xor
out
jns
inc
add
or
jnp
test
sbb
xlat
xchg
push
cmp
stc
daa
clc
sub
aas
lods
jecxz
test
rclb
mov
mov
lds
add
and
call
sbb
pop
mov
mov
lock
dec
add
je
cmp
push
dec
xorb
mov
add
sbb
and
cwtl
and
pusha
or
jecxz
sub
add
dec
xchg
rcrb
jae
xchg
pop
push
jmp
sub
loope
ljmp
filds
jne
sbb
jg
adc
sahf
outsl
sub
add
mov
add
lret
ss
mov
sub
xchg
pop
fdivr
adc
test
jge
ja
add
call
je
add
cmp
jmp
add
sbb
insb
add
in
xchg
ss
push
or
and
mov
les
ret
sub
fldenv
lods
push
popa
mov
test
rcrb
add
xor
and
out
adc
cmp
jl
sbb
imul
mov
add
jo
stos
add
sbb
es
in
dec
add
pop
ljmp
mov
sub
pop
or
sub
repnz
data16
mov
add
cli
mov
pop
cld
sahf
pop
mov
add
mov
dec
pop
pop
imul
icebp
ficomps
pop
imul
imul
pop
add
stos
pop
mov
xor
adc
xchg
in
enter
mov
in
repz
dec
add
insb
pop
jg
call
bound
push
shlb
leave
xchg
mov
adc
jnp
dec
sbb
out
cmp
add
push
xor
shll
mov
stos
ficoml
incb
jg
inc
sub
out
mov
xchg
jae
mov
sets
dec
test
sbb
rcrl
pop
loope
clc
xchg
mov
xchg
call
js
cmp
add
dec
roll
ficoml
pop
call
add
mov
jae
lods
add
dec
xlat
cltd
sbb
lods
add
ficompl
pop
vaddps
push
dec
sbb
rclb
pop
das
add
xchg
or
cmp
push
adc
lods
mov
add
inc
dec
push
stc
and
push
adc
repnz
add
add
and
lock
inc
insl
rcrl
push
pop
mov
mov
dec
fld
aam
inc
pop
outsb
stos
jp
aaa
es
popl
sbb
pushf
sarb
scas
fmull
test
test
pop
add
aaa
aas
fsubs
add
mov
ret
aad
adc
jae
add
push
cmp
je
jecxz
cmpl
shll
mov
outsb
jge
pop
daa
stos
sbb
cltd
mov
xor
sub
add
xchg
imul
mov
xchg
cmc
subb
mov
rclb
inc
sub
mov
inc
mov
jae
add
xlat
js
mov
pushf
add
subl
das
jmp
add
in
mov
movsl
cmp
scas
dec
scas
popf
mov
or
pusha
shlb
add
test
ret
cmp
push
push
add
mov
ds
inc
add
imul
lock
add
jmp
cmp
ss
add
test
dec
data16
or
in
addb
sub
icebp
cmpsl
sbb
mov
lret
sbb
add
and
lcall
in
lds
int3
cltd
sahf
push
xor
xchg
jl
add
out
sub
stos
add
call
outsl
pop
in
inc
js
outsl
pop
pop
mov
mov
push
jae
sbb
pop
pop
orl
cwtl
stos
mov
into
arpl
loopne
scas
in
sarb
fs
repnz
cmp
cli
out
mov
out
mov
xlat
add
aam
sbb
pop
popl
outsl
sub
dec
iret
jns
dec
stos
cmc
mov
or
fsubrs
mov
sbb
pop
cmpsl
test
filds
pushf
mov
dec
adc
mov
inc
daa
add
aaa
imul
add
andb
pop
neg
or
ss
jg
dec
sahf
add
les
shlb
mov
sbb
pop
lds
pop
push
pop
jecxz
mov
std
imul
push
push
or
pop
ds
mov
inc
sub
nop
or
ficoml
push
aad
loope
xor
jmp
cmpsb
fldl
and
cmovp
stos
mov
into
scas
add
push
lcall
add
cli
call
inc
cld
mov
and
or
shll
nop
jmp
xchg
andb
cli
rcll
adcl
xor
insb
cmp
stc
test
cmp
and
xchg
stos
xor
inc
or
cmpsl
mov
jle
inc
pop
bound
jb
cs
stc
cmp
add
mov
nop
pop
test
adc
jge
push
jle
cmpsl
jno
cld
test
add
mov
lods
pop
aam
subb
sbb
leave
test
dec
out
daa
jmp
push
adc
add
dec
jl
in
add
addr16
loop
push
add
dec
cpuid
insb
in
clc
jge
and
xchg
mov
fisttpll
jmp
int3
inc
ficoml
pusha
les
clc
addl
lods
aaa
mov
add
scas
cmp
mov
outsl
out
mov
cmc
enter
std
imul
imulb
lcall
mov
stos
popa
ljmp
sbbl
nop
push
push
addb
add
mov
pop
jae
mov
jne
out
cmpsl
add
cld
pop
fwait
and
pop
pop
adc
push
js
push
adc
cld
not
repz
in
pusha
add
je
sbb
xor
pop
add
add
pop
and
lods
add
lcall
adc
outsl
and
fiadds
jno
sbbl
gs
and
orb
cmpsl
mov
addb
pushl
jle
repnz
xor
fnsave
pop
inc
cmc
adc
pop
scas
lock
test
mov
sbb
pop
popa
mov
add
fiaddl
es
xchg
cmp
cmp
add
in
cli
xor
push
data16
imulb
ds
jno
test
and
jb
xchg
lock
pop
jbe
mov
mov
cld
bnd
pop
mov
push
and
test
sbb
mov
fisttps
add
ds
rcrb
jns
fadds
divb
push
xor
cmp
les
ret
add
shlb
add
adc
sbb
shrb
movsb
mov
add
lret
pushf
insl
in
add
push
cmp
xchg
sub
clc
jnp
int
or
loopne
jg
add
call
jle
xor
push
test
mov
lcall
mov
add
add
and
aaa
inc
add
imul
add
pusha
dec
add
in
pop
xchg
pop
mov
adc
jbe
hlt
cmpsl
sub
sub
test
mov
mov
mov
push
jno
pop
bnd
inc
dec
inc
call
push
daa
jae
mov
adc
jnp
scas
push
sbb
sar
icebp
add
fimuls
mov
mov
xchg
js
mov
jp
pop
lea
sar
icebp
call
xor
inc
loop
shll
loope
sahf
sub
test
popf
mov
push
cmp
in
inc
push
mov
mov
enter
repz
sub
mov
aaa
out
fwait
out
push
push
xchg
dec
cmp
daa
sahf
cwtl
pop
mov
inc
aam
shll
popl
xchg
cmc
call
add
xor
sbb
pop
daa
ss
fadds
insl
fcomip
push
mov
inc
test
add
and
fildll
notb
push
ret
mov
sbb
adc
rcrl
es
scas
insb
add
dec
add
or
int
ret
or
dec
mov
add
jo
and
in
pop
jne
add
mov
imul
test
push
hlt
cmc
test
rolb
fadds
or
subb
lds
push
loop
pminsw
sbb
add
pushf
xchg
push
or
cmp
mov
aas
fmuls
jo
jno
aas
jg
add
fwait
add
add
push
movb
or
add
add
and
jnp
fs
call
mov
movsl
or
jns
rolb
lods
push
jb
and
jl
pop
or
mov
mov
adc
pop
lods
or
test
ret
and
add
pop
arpl
sarb
sbb
hlt
scas
add
adc
xor
and
in
sub
push
sbb
into
pop
add
xchg
jnp
fadds
mov
iret
cltd
push
adc
add
adc
adc
cmc
es
or
xor
adc
add
xchg
inc
xor
mov
add
iret
cmc
fbld
xchg
adc
mov
cmp
cmpb
in
fwait
mov
sbb
dec
dec
add
xchg
clc
jne
adc
and
and
ds
add
notb
mov
leave
popf
pop
popl
push
out
xchg
sar
or
push
idiv
sub
rolb
fnstsw
mov
add
movsl
cmovp
stos
test
xchg
movsb
subb
add
push
in
and
add
loope
add
inc
sub
lods
ficoml
or
out
mov
jnp
call
add
mov
cwtl
mull
nop
adc
aas
ret
pushf
and
inc
add
adc
sbb
xlat
dec
sbb
loopne
ror
add
lock
add
test
sbb
push
icebp
mov
add
filds
push
std
add
sub
add
mov
jmp
ds
add
cmp
sbb
xchg
cld
pop
sbb
add
xchg
roll
push
int3
insl
xor
add
pop
fwait
add
pusha
mov
insb
xor
jb
jnp
mov
dec
mov
jp
sub
js
or
xchg
jmp
dec
adc
pusha
mov
ret
and
pop
inc
sbb
xor
fbstp
mov
pop
add
ret
xlat
jl
pusha
xor
bound
sbb
sarb
add
imul
inc
xchg
dec
mov
push
std
add
je
and
jecxz
scas
and
ss
xor
negb
pop
xchg
cmpb
mov
clc
jo
mov
jg
in
roll
test
pop
adc
mov
cmp
add
call
jle
lods
sub
add
xor
dec
aas
lahf
sbb
inc
push
xchg
dec
fbld
cmp
mov
loopne
nop
xchg
pop
fistl
out
cmp
mov
stos
xor
aas
adc
pop
loopne
enter
lds
add
popa
int
jne
or
insb
and
xor
xor
add
stos
std
pop
inc
push
lods
das
add
cmp
add
push
push
add
and
mov
fmulp
inc
adc
add
hlt
popa
jbe
shrb
loop
ret
xor
js
out
add
lret
push
xor
lahf
push
sarb
push
loopne
rcrl
add
in
lock
cmpsl
mov
test
testb
loopne
jnp
inc
test
inc
xor
sbb
neg
jne
pusha
or
mov
inc
adc
add
push
stc
push
add
hlt
fbld
cmp
ds
mov
dec
int3
sub
cwtl
dec
pop
push
lods
daa
or
mov
rcll
out
xchg
pop
add
out
imul
les
mov
inc
push
sub
push
das
out
je
and
bound
dec
idivb
into
hlt
shl
in
xchg
push
mov
inc
loop
add
movsb
mov
out
lret
lea
xorb
cmp
pop
cs
mov
dec
mov
pop
enter
out
lods
add
aaa
sbb
mov
in
add
mov
mov
test
gs
add
insb
dec
adc
add
call
ja
add
cmp
pop
sbb
decb
out
add
test
jae
xchg
jl
shlb
add
sub
fsubrs
outsb
enter
in
pop
sbb
dec
cmp
xchg
lahf
pop
jnp
call
scas
xchg
inc
wbinvd
fistpl
mov
or
mov
in
add
jno
insl
fstl
bound
rolb
aad
lea
pop
das
rorb
add
jnp
ss
mov
push
in
lahf
mov
pop
ret
loope
adc
adc
negl
cmc
add
aad
cli
lock
lahf
adc
sub
pop
cltd
lock
cmp
shlb
call
and
lahf
scas
sbb
xchg
mov
or
pop
shll
push
arpl
adc
filds
popa
pop
popf
test
divl
mov
js
jno
fists
fdivrl
je
in
push
jbe
nop
cld
and
sub
add
or
xchg
mov
add
inc
mov
sub
jo
add
xchg
test
rorb
and
xchg
push
adc
add
popf
lahf
mov
loopne
jp
js
pusha
in
lods
xchg
inc
adc
sbb
or
add
out
mov
stos
cmpsb
adc
pop
and
frstor
rolb
fidivrl
jge
dec
ja
add
jmp
pop
shll
add
ss
mov
pop
jne
add
outsb
in
test
lods
incl
add
mull
jg
push
js
sahf
mov
stc
rcrb
rcr
add
cltd
cwtl
and
movl
mov
cmp
inc
add
add
adc
ds
xchg
adc
ret
adc
mov
lcall
les
jo
ljmp
fnstcw
test
icebp
adc
push
movsl
mov
mov
jbe
or
inc
jnp
sbb
pop
sub
push
popf
jne
jp
sbb
or
jb
push
lret
jno
jns
xlat
jne
inc
test
pop
jecxz
mov
idivb
mov
xchg
lcall
negl
sbb
adc
cmp
push
xlat
add
outsl
incl
mov
lahf
mov
dec
inc
push
add
ret
mov
incb
dec
cmpl
and
call
sub
push
mov
stos
mov
adc
test
adc
xor
push
cwtl
cli
sbbl
les
stos
cmp
inc
and
cmpsl
out
mov
mov
pop
rolb
add
add
movsb
adc
push
pushf
fucom
xchg
push
imul
les
int3
jns
sub
jge
gs
mov
ja
jno
mov
fld
mov
test
push
xchg
mov
add
jp
sub
lsl
cmp
jnp
add
in
xchg
xlat
or
or
orb
push
cmp
outsb
sub
mov
sub
cli
mov
clc
add
es
add
sub
mov
push
fsubl
push
push
inc
pusha
and
jne
inc
jae
fstpt
mov
repz
daa
dec
jo
pop
add
das
loop
pop
add
inc
popa
mov
add
jb
push
stos
xor
jle
sbb
push
dec
dec
mov
jbe
push
cmp
or
cmp
add
adc
add
lds
add
mov
push
addb
sbb
add
pop
into
pusha
xchg
xor
lret
mov
shlb
scas
iret
push
xchg
pusha
xor
sub
clc
push
add
popf
cli
cmp
out
outsb
aam
dec
add
inc
xor
dec
andb
jb
inc
fildl
aad
jbe
dec
es
mov
adc
pop
fiaddl
fdiv
lahf
sub
and
jle
fadds
pushf
cmp
dec
loopne
clc
pop
mov
cmpsb
inc
into
daa
enter
mov
cmpsb
xchg
inc
lds
jg
push
push
push
mov
rcrb
lret
mov
js
dec
push
jo
cmc
adc
sti
hlt
push
out
add
in
dec
out
or
pop
adc
mov
andb
sub
fstpt
or
push
xor
jns
cmp
add
push
sbb
adc
outsl
xchg
stc
pop
xor
pmaxub
mov
std
jmp
popa
push
xor
inc
repnz
jnp
or
addb
pop
lahf
cmp
movsl
add
out
inc
repnz
and
mov
pusha
inc
popa
dec
bound
sbbb
aas
xlat
and
js
cmp
jbe
data16
inc
or
lock
or
xchg
dec
mov
pop
clc
leave
sbb
push
ljmp
adc
out
sub
push
sbb
imul
test
repz
push
jbe
sbb
push
movsl
adc
jo
mov
inc
lds
adc
inc
add
mulb
in
add
add
pop
fisttps
adc
xchg
dec
add
stos
mov
add
mov
sbb
mov
add
jecxz
test
scas
push
gs
les
sbb
dec
add
jo
ja
xchg
mov
cmc
ds
loop
and
push
cmp
test
xorb
pop
movsb
cmp
mov
mov
add
adc
ror
aaa
in
adc
jae
inc
ficoms
scas
pop
insb
add
call
add
sub
repz
add
ds
inc
add
sbb
add
mov
mov
jge
andl
or
push
adc
xchg
pop
orl
jnp
cli
push
dec
cmp
lahf
adc
stos
inc
sbb
repz
mov
sub
jnp
nop
mov
jecxz
sub
nop
arpl
xor
sub
aad
pop
scas
sbb
insb
jle
rcrb
cld
pushl
pop
add
imulb
add
test
js
add
sbb
in
mov
or
jge
pop
sub
jo
mov
add
test
ja
mov
stos
pop
xorb
dec
cmp
sub
cld
mov
sbb
testl
push
dec
pop
stc
pop
sbb
into
fwait
subl
aam
sets
frstor
andb
outsl
push
mov
fidivrl
jge
jae
mov
add
adc
add
dec
pop
jbe
inc
out
mov
insl
add
out
add
dec
add
incb
add
pop
stos
cltd
out
rolb
xorb
or
ds
es
sub
inc
xchg
add
aaa
sbb
dec
inc
add
and
roll
xchg
int
xor
nop
or
cmp
lock
das
jo
mov
fcmove
jnp
jbe
add
xchg
add
outsl
cmpsl
scas
adc
push
add
pop
mov
adc
add
pop
jno
jns
cmpsb
mov
cmpb
dec
clc
adc
adc
dec
cmp
pop
lcall
js
push
outsl
push
adc
inc
dec
push
jp
add
lods
mov
add
shl
mov
jae,pn
add
pop
push
loopne
pop
add
cmpsl
jno
insb
add
or
push
add
xor
idiv
xor
jecxz
jmp
xor
add
sar
mov
add
dec
push
xchg
xor
sub
adc
movsl
loope
lock
pop
xor
lock
mov
xchg
nop
add
inc
mov
or
int
sub
add
repnz
dec
or
add
ss
xchg
imul
jno
clc
aam
inc
jge
xor
xor
inc
in
sbb
xchg
cmpsl
rcrb
pusha
sub
sub
xchg
testb
sbb
add
inc
inc
dec
add
aas
mov
mov
pop
or
lock
mov
test
ret
inc
filds
nop
jnp
push
out
es
dec
in
or
inc
xor
call
or
nop
ja
fadds
xchg
cmp
xor
pop
pop
into
ret
pop
cmp
mov
xchg
jp
fildll
in
negb
or
xchg
cli
test
popf
mov
add
add
jo
daa
lods
stos
jecxz
add
pop
xchg
inc
mov
dec
add
push
mov
pop
add
dec
arpl
jmp
add
jle
push
movsl
lahf
scas
and
outsb
add
xlat
insb
jne
pop
mov
add
ret
mov
mov
lret
add
leave
pop
push
filds
sub
jmp
mov
int
mov
cli
add
daa
fs
lods
mov
aas
mov
add
jge
push
jns
cwtl
add
ljmp
cli
cmp
add
mov
jge
add
xor
add
pop
mov
nop
push
loope
aas
or
xor
xor
pop
cmovbe
dec
cmp
push
cmp
rcrb
stos
pop
andl
andl
mov
jns
jecxz
lods
fcomi
dec
mov
je
add
subb
mov
add
jo
adc
jb
test
arpl
mov
add
mov
push
push
jmp
lahf
rcl
jle
add
pop
or
add
mov
add
movsl
inc
add
mov
ljmp
movsb
push
ret
lds
mov
jne
les
adc
mov
mov
addb
mov
xchg
mov
cmp
push
sti
add
into
insl
aad
push
add
in
jp
jo
sti
jno
add
push
jne
add
rep
push
ret
add
lcall
push
inc
push
mov
into
cmp
add
enter
pop
dec
ss
hlt
mov
sbb
aam
add
loope
mov
add
dec
nop
mov
rolb
cmp
pop
or
or
pop
outsl
push
sbb
add
fs
sub
sbb
cli
jp
xor
sbb
out
insl
mov
add
sub
andnps
adc
andb
mov
mov
add
pusha
sub
je
arpl
inc
sub
inc
add
lahf
cltd
add
mov
lret
dec
or
imul
sti
aam
and
insl
movl
mul
test
push
mov
add
adc
mov
push
mov
stos
dec
adc
cs
jg
and
sbb
shlb
cpuid
jno
mov
cmpsb
mov
inc
mov
jo
aaa
das
add
lock
pop
xor
leave
std
push
sahf
enter
mov
jge
add
inc
rorl
push
xchg
add
outsb
push
mov
or
dec
les
lret
and
adc
mov
hlt
iret
add
lods
dec
xchg
pop
rorl
inc
imul
mov
mov
or
fs
ret
icebp
jle
pop
jl
iret
sbb
mov
jmp
add
outsb
dec
pop
or
in
xchg
lock
call
sbb
jb
fmuls
xchg
lcall
mov
imul
adc
add
push
mov
das
push
pop
cmpsl
bswap
mov
pusha
popf
mov
loope
lock
sti
loopne
sbb
mov
jmp
add
sbb
flds
out
movb
mov
mov
pop
sbb
popa
loope
adc
les
test
add
and
cld
fs
je
fwait
and
test
push
mov
add
lcall
jg
fstpt
add
ds
adc
or
pop
inc
in
bound
mov
push
push
add
add
pop
loopne
pop
add
inc
mov
ljmp
cmp
xor
add
insb
sbb
test
cmp
mov
scas
adc
dec
fdivl
mov
jne
ds
push
add
shll
addr16
loop
or
pop
mov
pop
repnz
mov
jnp
cmc
pop
rcrb
hlt
jl
pop
add
nop
or
in
sub
and
ret
xchg
sbbb
clc
adc
add
jns
test
inc
xor
andb
lock
pop
xor
fincstp
pop
push
mov
pop
adc
out
mov
pop
cmp
xchg
fcompl
sbb
mov
insl
lds
int3
xor
pop
xchg
test
adc
xor
mov
push
inc
add
or
add
lret
idivl
add
and
or
add
xchg
cltd
aaa
loopne
pop
and
movsb
jo
fsub
jecxz
adc
leave
pop
add
inc
filds
push
je
inc
nop
sahf
mov
shll
imul
sbb
sbb
sbb
icebp
jb
ss
cmp
add
cmp
stos
cmp
mov
addl
xchg
xorl
ret
mov
push
lahf
int
xlat
jge
sbb
out
cmp
les
fidivs
mov
add
aam
sahf
push
sbb
push
adc
xchg
mov
stos
fsts
jne
pushf
xchg
cltd
add
mov
push
icebp
aad
jge
add
mov
nop
in
add
incb
mov
jecxz
ret
sbb
mov
rcrl
mov
into
add
gs
clc
adc
dec
imul
mov
out
pop
mov
push
push
in
sbb
inc
add
xchg
add
sbb
sub
frstor
add
out
insb
cli
jmp
pop
push
xchg
add
movsl
and
add
jns
insb
loopne
add
loop
add
push
lret
mov
cmpsl
push
add
push
pusha
xor
jg
jb
or
add
jmp
xorb
add
dec
les
jecxz
dec
cmp
loope
out
ja
push
xchg
in
add
jl
out
xor
adc
lret
cwtl
or
and
dec
add
adc
pop
and
sub
inc
xchg
dec
pop
and
test
nop
cmp
xchg
out
adc
adc
pop
xchg
xchg
pusha
adc
test
and
adc
adc
dec
or
popa
pushf
mov
in
ds
fcoml
mov
lock
pusha
pop
pushf
aam
jmp
cmpl
add
xchg
push
mov
std
fwait
gs
sub
add
and
push
es
nop
pusha
xchg
mov
sbb
cwtl
mov
push
add
aam
mov
fildll
cs
jmp
cltd
lret
aaa
mov
test
xor
add
out
push
cltd
fs
add
mov
add
ret
dec
xor
or
xchg
and
sbb
movsl
pusha
mov
fisubl
js
xchg
and
paddsb
movsl
or
fcompl
jle
mov
or
das
imul
xor
addr16
xor
mov
enter
aam
cmp
add
push
jmp
pushf
push
cmp
and
fldenv
add
cmp
inc
in
xchg
xchg
mov
adc
push
push
and
shll
mov
test
add
in
je
mov
xchg
sub
popf
ret
lock
xor
inc
cmc
mov
repnz
mov
or
jnp
push
sub
add
cwtl
push
std
loop
dec
repz
dec
test
test
jmp
add
in
mov
jns
cmp
loopne
inc
sub
ja
mov
leave
adc
pop
cmc
add
sub
inc
add
pushf
cmp
add
shrl
loop
clc
and
pop
fidivs
scas
mov
push
fcoml
fwait
and
push
inc
lahf
aam
lcall
in
dec
pop
test
fadds
adc
add
jg
adcb
xor
fwait
dec
mov
rorb
xor
and
inc
pop
lods
add
cmp
add
insl
dec
mov
add
sub
in
push
or
push
lcall
or
setge
insb
xchg
add
mov
sub
sbb
inc
add
and
mov
adc
dec
and
push
mov
leave
mov
xor
enter
jns
cmp
xlat
dec
add
scas
lret
push
pop
add
incl
inc
scas
jb
jle
dec
pop
adc
mov
lcall
shll
sbb
btr
push
int3
add
or
jge
or
jmp
out
clc
movsl
shl
test
pop
fs
mov
jp
add
mov
inc
push
lcall
cmc
faddl
inc
sbbb
jge
orl
adc
pusha
das
and
mov
jle
jnp
imul
scas
and
nop
dec
sbb
fwait
sub
popf
ret
popa
scas
insl
cli
sbb
in
js
jnp
xchg
inc
addr16
dec
aam
cmp
fstpl
sub
xchg
arpl
pop
lret
cmp
cmpsl
outsb
scas
mov
xorb
push
sub
movsb
dec
xlat
test
xor
add
addr16
rolb
mov
mov
pop
xor
test
adc
xchg
sbbb
addl
mov
xor
sarb
cwtl
mov
and
mov
add
shll
mov
sub
inc
xor
das
mov
add
xor
and
pop
outsb
aad
fadd
loopne
stc
mov
add
adc
push
daa
fsubrs
jmp
jmp
jecxz
sbbb
add
xor
movl
and
and
inc
jnp
mov
pop
ljmp
movsb
mov
xchg
mov
scas
sbb
stos
add
mov
sahf
loope
xchg
push
loop
pop
push
in
fadd
pop
pop
enter
mov
lahf
adc
ret
roll
mov
cmp
push
add
stos
push
add
lock
add
cli
out
std
push
outsb
mov
mov
mov
nop
fsubl
cmp
and
int
cmpsl
and
push
sbb
stos
add
scas
lds
and
pop
into
add
push
sbb
test
icebp
movsb
dec
in
cld
ret
fstpl
out
cwtl
and
ljmp
fisubrl
xchg
add
cld
cmp
add
xlat
in
dec
inc
xor
icebp
in
and
sbb
shlb
ja
jnp
aas
pop
rolb
inc
sub
push
sbb
push
push
leave
or
notb
cmpsb
addb
cmp
mov
dec
lea
je
cltd
dec
pusha
aad
cwtl
jp
add
push
jbe
ljmp
xlat
cmpsb
test
xor
cmp
es
sbb
mov
and
ljmp
sub
mov
or
add
xor
jo
ficomps
jno
das
rolb
jg
add
into
mov
imul
or
ret
cs
cwtl
clc
icebp
addl
push
dec
sub
lret
inc
xchg
inc
mov
out
inc
cwtl
xor
test
imul
sbb
push
lret
and
add
cmp
cmp
dec
mov
iret
jo
xor
insl
add
filds
dec
or
out
cmp
lods
addb
or
roll
popa
jecxz
inc
daa
arpl
sbb
clc
imul
out
add
dec
call
cld
cwtl
cwtl
add
orb
add
jne
cld
orl
xchg
bound
xor
dec
add
sub
jns
aas
dec
cmovbe
scas
sbb
mov
mov
addr16
lcall
mov
out
outsl
loopne
add
add
pop
testl
mov
sti
jmp
sbb
in
mov
push
stos
lock
sbb
pop
pop
jge
lods
mov
cmc
and
into
add
lods
push
jg
ret
jp
movsb
movsb
rcrb
or
jecxz
add
ret
pop
push
push
fnstsw
add
sub
jnp
add
mov
jmp
inc
sbb
cli
popf
and
add
jne
mov
add
cmp
add
or
js
lret
jle
add
push
push
lcall
jnp
pop
inc
cmc
add
pop
push
xor
dec
adc
add
inc
xchg
out
pop
cmp
add
mov
bound
pusha
cmp
fidivrs
add
sub
les
int3
subb
mov
pop
jecxz
adc
add
jmp
sbb
out
ret
xchg
repnz
pop
and
loopne
data16
fildll
pop
sti
jo
sub
mov
dec
xchg
add
adc
push
jg
mov
aad
out
ljmp
ret
sbb
jae
mov
xlat
cld
add
retw
jmp
cmp
movl
rcrl
mov
outsl
add
push
popf
add
mov
ret
sbb
fwait
int3
test
mov
cld
roll
dec
or
jnp
add
xor
adc
jae
ret
nop
pushf
add
mov
push
add
ret
outsl
add
adcl
mov
sbb
addr16
xchg
test
inc
mov
add
xchg
int3
and
icebp
xor
dec
xor
pop
repz
lahf
call
rolb
je
add
dec
scas
imull
add
enter
cmp
hlt
pushf
sarb
pop
clc
std
sbb
xchg
adc
cmp
cmp
outsb
xlat
push
jl
aaa
sbb
dec
rclb
and
sub
bound
leave
pop
or
add
xchg
cmp
sbb
stos
sbb
xor
daa
or
mov
pop
xchg
in
movsl
unpckhps
das
mov
cltd
and
pop
inc
add
cmpsb
in
dec
add
jmp
test
mov
inc
sbb
bound
pop
mov
sub
aam
mov
add
xchg
push
and
and
jns
jle
lret
mov
or
mov
cmp
fnstenv
imul
pmulhuw
jnp
add
push
loopne
pop
xor
iret
enter
sbb
xor
xchg
pop
cmp
or
pusha
fbstp
cmpb
xchg
adc
add
pop
xlat
lahf
cld
xor
ret
and
enter
jbe
fcoml
cmpsb
push
mov
mov
jmp
add
out
dec
add
negb
xor
xchg
cmp
and
jl
mov
stc
add
and
jmp
divb
mov
pop
pop
fsubr
test
test
add
ss
jo
jle
cwtl
jo
fidivl
add
psllw
int3
aas
out
lock
add
shl
push
loop
add
lcall
pop
jns
add
xchg
test
push
pop
cli
out
ss
sbb
sub
jp
int
add
cpuid
add
cmc
inc
add
clc
inc
shlb
pop
or
movb
add
imul
ja
mov
jae
add
sub
push
repnz
fidivrl
ret
adc
test
or
xor
repnz
jecxz
add
int3
push
dec
sahf
pop
add
f2xm1
mov
lcall
cmp
repnz
mov
std
daa
fmull
imulb
mov
pop
das
mov
xchg
pop
shrl
push
outsl
es
lds
xor
nop
add
lea
ja
add
add
lret
add
lods
les
xchg
or
out
adcb
or
xchg
mov
nop
fs
out
popa
cltd
fsubrp
xor
ffree
bound
jb
jmp
insl
ret
mov
adc
jb
add
in
inc
jge
aad
hlt
add
clc
test
repz
in
jl
dec
add
test
pushf
pusha
ret
mov
jecxz
pop
mov
adcl
sbb
data16
cmp
stc
mov
mov
outsb
fadds
jecxz
sahf
shll
sbbl
jp
pop
sbb
xor
cld
std
loop
pusha
xlat
fcoml
xor
mov
loopne
push
or
insl
xor
add
int
test
popf
mov
les
dec
xchg
faddl
insl
add
sub
mov
sub
cmp
inc
insb
xor
and
add
sbb
lods
imul
add
mov
xor
and
lcall
push
lea
mov
test
jbe
sbb
add
adc
mov
pop
sub
pusha
shll
xlat
aam
add
mov
jnp
cmpsl
fisubrl
mov
stos
jmp
add
push
sbb
dec
sbb
sahf
ret
inc
fcomps
dec
fs
pop
fimuls
pop
dec
mov
pop
mov
clc
call
and
mov
lahf
js
add
fdiv
xor
repnz
jle
xchg
push
mov
mov
rorb
add
ss
dec
sub
add
pop
sbb
xor
in
add
dec
ficoms
xor
data16
mov
out
es
mov
xchg
cmp
xlat
mov
ds
adc
adc
or
add
and
bound
in
sub
push
subl
add
out
cmpl
clc
aam
testl
leave
xchg
or
out
dec
push
je
jp
cwtl
sub
dec
pop
fstpt
and
dec
mov
leave
gs
mov
xor
cmp
pusha
daa
sub
xchg
sbb
into
cmpsl
xor
mov
sahf
adc
pusha
mov
data16
pop
cmp
je
dec
call
int3
test
fldenv
sub
adc
lcall
mov
out
xorb
xlat
int
roll
xor
inc
fldl
hlt
jmp
loope
cmp
out
add
xor
jne
jg
int3
add
mov
add
in
pop
jo
or
icebp
pop
cmp
mov
add
jmp
sbb
push
shll
je
push
dec
fcompl
add
int3
and
shlb
cs
add
dec
adc
adc
jnp
cmpb
in
xor
gs
inc
aas
int
sbbb
pop
cmp
movsb
add
or
mov
add
in
ret
loopne
mov
cmp
push
pop
sarl
icebp
sbbb
push
jl
push
cmc
ljmp
nop
mov
rcll
movsl
mov
shll
nop
adc
add
int
shl
sahf
insb
les
jae
and
dec
lea
pop
or
inc
mov
shlb
pusha
pusha
mov
dec
xor
inc
xchg
xlat
pop
loopne
movsb
ljmp
sub
sub
rcr
push
mov
pop
add
sbbb
cmp
jl
int
pop
leave
or
sbb
paddb
ljmp
pop
or
movsb
cld
inc
mov
and
cmpsl
lock
repnz
pop
sbb
aam
and
in
mov
xchg
icebp
cld
sbb
jl
mov
push
repnz
mov
push
pop
repz
pop
cbtw
fcompl
xor
cmpsl
push
add
stc
jb
jno
add
inc
xor
mov
xor
outsb
mov
add
push
or
inc
insl
mov
call
dec
imul
mov
or
test
add
sub
cs
add
movsl
mov
xor
dec
mov
loope
inc
add
mov
mov
in
pop
pop
pop
pop
push
sub
mov
test
push
into
cmp
jle
insb
lahf
add
repnz
inc
ficomps
movsl
sub
ljmp
mov
cmp
sbb
mov
add
movsl
das
sbb
scas
movsb
inc
mov
sub
or
sar
cmp
add
sub
andb
jb
fidivs
pusha
mov
test
adc
push
pop
shll
add
mov
mov
into
xorl
cld
outsb
sub
lea
mov
add
push
xor
lahf
sbb
jno
add
lods
xchg
mov
out
repnz
pop
cmp
pop
pop
mov
decb
xchg
sbb
sbb
jno
addr16
add
stos
ret
add
cs
mov
xlat
add
nop
pop
pop
loop
incb
jge
std
js
add
adc
xchg
or
add
add
dec
lods
xor
fdiv
cmp
test
testb
out
fisttpl
cld
mov
mov
je
and
fwait
xor
loope
inc
and
fmuls
test
mov
repnz
je
shll
pop
add
lret
mov
push
repz
pop
dec
pop
or
add
nop
adc
dec
mov
mov
cmp
cmp
sbb
xchg
pusha
ror
pop
pop
or
iret
in
orb
add
push
xor
jmp
and
jae
add
sub
dec
gs
push
in
popf
inc
lcall
outsb
jg
fs
add
js
mov
pop
arpl
js
xchg
add
mov
loope
or
das
iret
into
mov
pop
mov
mov
add
mov
adc
and
pop
call
shlb
dec
and
mov
cltd
xchg
add
jl
lds
les
add
pop
jmp
fwait
or
mov
sub
add
mov
xchg
push
xchg
outsl
jns
call
or
add
das
push
mov
adc
les
repz
test
stos
cmpl
adc
xchg
jecxz
and
popa
inc
add
xchg
mov
xchg
jmp
cmp
add
test
sbb
add
push
lret
jl
inc
xchg
mov
adc
xor
test
pop
shlb
and
mov
mov
fwait
push
lcallw
and
dec
gs
jnp
inc
outsb
scas
pop
and
xor
push
js
xchg
xchg
sub
add
imul
pop
mov
xor
sti
rclb
and
daa
jnp
push
outsb
add
inc
aam
into
pop
fadd
int
ds
push
mov
out
jo
lock
xchg
jge
xchg
js
repz
and
movsb
xor
fidivs
lret
out
mov
xor
add
pop
ret
in
jmp
mov
nop
loopne
pop
inc
add
push
push
xor
movsl
and
mov
add
or
pop
rorb
lock
adc
jnp
add
fwait
ret
jecxz
xchg
dec
aad
pop
jae
xchg
sti
pop
movb
and
lahf
lret
sbb
popf
jno
jne
push
xor
scas
ja
fimuls
mov
add
shl
cmp
es
add
lods
add
push
pop
stc
fldcw
in
lea
jno
sbbl
popa
testb
mov
into
out
rol
insl
jg
jbe
mov
mov
push
notb
je
repnz
add
jle
test
add
inc
in
push
or
jnp
rorb
adcl
xor
cli
add
mov
inc
lods
dec
add
inc
scas
jecxz
and
arpl
mov
and
mov
ds
push
and
xor
cmpsb
add
lds
loopne
arpl
pop
cmc
or
xchg
fists
or
clc
or
inc
cmpsb
push
add
and
dec
mov
outsl
jnp
add
popa
jnp
rclb
addl
out
ficompl
insb
daa
inc
mov
add
aad
subw
sbbb
mov
add
jb
out
jmp
testl
iret
adc
adc
adc
add
and
mov
scas
xor
adc
jno
insl
andl
and
add
rclb
add
mov
jns
adc
adc
add
mov
sub
int3
add
jge
jnp
push
xchg
add
push
sarl
mov
xchg
add
inc
mov
add
xchg
lcall
inc
or
xor
imul
std
add
bswap
jg
or
insl
popa
mov
push
pop
pop
ret
sbb
clc
xor
cmp
andb
pop
push
mov
loopne
jmp
daa
jns
cltd
cmp
mov
add
stc
lret
test
dec
aaa
add
imul
mov
cmpsb
int3
stos
outsb
lock
inc
ljmp
add
jge
cmp
js
rorl
dec
push
adc
test
in
ljmp
dec
in
faddl
jl
or
aam
and
aam
pop
scas
nop
sti
data16
arpl
lds
mov
repnz
cld
loopne
add
cwtl
mov
and
mov
in
lock
adc
xchg
mov
xchg
cmp
push
neg
fs
stos
lret
shlb
xchg
pushf
sub
add
mov
daa
fstpl
in
fildl
out
mov
ret
rclb
daa
dec
hlt
cmp
or
aad
mov
addb
shll
or
fwait
cmpsl
or
push
pop
mov
inc
lcall
mov
xor
test
ret
jmp
jae
cmpsb
dec
mov
iret
int3
cmp
mov
sbb
and
sub
pop
stos
fisttpl
jge
leave
roll
arpl
cmp
ljmp
or
push
test
in
popa
xchg
pusha
out
jp
push
jp
test
stc
fs
popf
add
jg
xor
xchg
enter
inc
adc
mov
fucom
xchg
add
jge
gs
push
add
sahf
jmp
add
and
divb
ss
pop
roll
rclb
dec
xchg
xchg
add
bound
xor
ds
mov
mov
adc
js
dec
cmc
xchg
shll
test
enter
into
cmp
inc
insb
pop
mov
sbb
adc
mov
ds
bswap
lret
jo
push
mov
cwtl
std
popa
jmp
dec
jg
test
cmc
adc
sbb
out
sub
dec
popf
stos
add
inc
add
xchg
pop
pushf
pop
xlat
movl
adc
lds
outsb
addl
push
push
es
dec
push
jnp
sahf
lcall
jae
in
mov
gs
outsb
dec
cmpsl
and
adc
cwtl
jmp
mov
xor
cmc
cltd
add
xchg
add
and
cs
mov
gs
js
add
clc
add
inc
pop
subb
sub
mov
push
mov
arpl
outsb
in
sub
xor
add
or
cmpsl
sahf
add
inc
rolb
push
or
inc
mov
add
inc
push
fdivs
jno
cmpsl
add
out
mov
addb
ljmp
icebp
aad
sbb
pop
pop
in
int3
fiaddl
xor
inc
xchg
out
pop
fsubs
movsl
cmp
pushf
outsb
in
mov
aas
add
clc
nop
insl
add
stc
adcb
fs
mov
loop
fldt
jg
lret
bound
aam
call
mov
mov
inc
rcrb
rcr
mov
add
adc
pusha
xor
sub
mov
mov
js
sbb
add
or
dec
jns
cmovle
in
daa
or
mov
repnz
aas
add
shl
mov
pop
jle
dec
movsb
enter
imul
inc
cmpsl
add
cmp
loope
in
les
add
pop
jb
pop
xchg
push
or
fmull
lahf
add
and
sbb
cmp
sbb
movsb
or
mov
add
xchg
sbb
pop
or
add
mov
js
xchg
dec
push
add
into
inc
mov
xor
dec
cmc
push
popf
pop
lods
xchg
in
inc
xorb
mov
push
pop
and
adc
xorb
push
in
add
in
pop
jnp
pop
and
dec
xchg
jo
jge
mov
out
xchg
loopne
add
mov
push
test
dec
int
popa
cmp
mov
std
mov
iret
lock
aas
sbb
cmpsl
lcall
pop
xchg
cltd
insb
and
add
inc
sbb
das
rclb
sbb
sub
psllw
or
sbb
sub
add
cmp
push
in
push
in
dec
add
cmc
pop
std
adc
mov
xchg
sbb
scas
jo
lea
daa
jmp
sahf
test
les
push
cmpsl
stc
pusha
enter
mov
inc
add
cs
dec
incl
pop
insb
popa
jb
add
dec
jnp
cmp
xchg
fistps
push
cmpb
inc
xorb
bsf
es
xchg
add
inc
mov
mov
add
leave
std
xchg
add
lret
add
mov
mov
sub
xchg
xor
mov
add
push
jmp
add
mov
mov
lock
pop
lds
pop
add
ljmp
adc
leave
inc
jae
pop
mov
cmovge
mov
scas
mov
sbb
mov
cwtl
mov
or
dec
mov
shlb
les
jo
imul
sub
into
inc
sbbb
add
sub
stos
in
cmp
lahf
test
test
add
pop
sbb
xchg
hlt
and
loop
out
or
xor
mov
mov
jo
add
test
nop
add
adc
cwtl
mov
arpl
loopne
mov
dec
js
outsb
popf
or
das
xor
pushl
push
pusha
out
sub
dec
pop
js
in
shll
aam
jae
dec
lods
push
mov
or
rorl
cmp
inc
pop
adc
fwait
or
sbb
mov
add
mov
scas
add
loop
and
call
in
add
sub
xchg
xor
and
jne
sti
lcall
ret
dec
ss
cmp
icebp
lds
add
test
clc
rolb
lahf
push
mov
repnz
jb
add
popa
xor
cmp
xorb
mov
or
jae
sub
scas
mov
cmp
pop
push
sub
aas
add
fwait
add
inc
jmp
fcomps
add
jbe
fistpl
xchg
jo
xchg
sahf
mov
jne
cltd
pop
ret
ret
xchg
adcb
leave
mov
stos
dec
xchg
add
xor
sub
mov
arpl
pop
movsb
cs
out
pop
insb
xlat
mov
and
popa
sbb
dec
add
sub
mov
fisubrs
insb
add
sbb
notl
jmp
xor
cmp
mov
iret
mov
js
cmp
xorl
je
popf
popa
insb
loope
jl
add
scas
fucomi
frstor
jecxz
cmp
sahf
mov
mov
cmp
inc
inc
ret
jnp
push
lds
pop
dec
sub
mov
pop
rorb
lret
pop
loope
ficompl
sub
or
loop
adc
cmp
rcrl
jb
xorl
pop
add
in
dec
jg
enter
xchg
xor
add
shlb
mov
outsb
int3
rcll
push
movsl
add
adc
fwait
mov
dec
call
adc
add
mov
cld
xchg
leave
fldl
push
pushfw
loopne
pusha
subl
sbb
nop
xchg
cmp
nop
fmulp
stos
add
in
loope
cs
filds
out
nop
xchg
addr16
lods
add
jle
dec
adcb
adc
inc
inc
cmp
inc
xchg
stos
cmpsl
inc
jg
out
scas
jmp
dec
mov
xchg
filds
push
aam
test
mov
mov
repz
xorb
aaa
roll
stc
add
mov
mov
cs
lcall
xor
mov
and
subb
xchg
lcall
shl
push
or
mov
dec
pop
mov
cmp
lahf
aam
into
addr16
add
std
xchg
roll
fldt
in
cli
xchg
jbe
rcll
inc
out
xchg
shlb
xor
xchg
clc
and
pop
and
pop
add
sub
mov
xor
or
and
sbb
pop
push
mov
mov
andl
mov
outsb
xlat
jecxz
xchg
add
fildl
loopne
cltd
cmp
push
mov
sbb
out
dec
push
fucom
add
inc
jp
inc
xor
dec
mov
jnp
popa
sub
cli
stos
cltd
inc
cmp
iret
or
es
dec
popa
add
xor
mov
test
cltd
es
sbbl
bound
out
movsl
stos
push
adc
or
jae
in
cmpsl
inc
int3
or
inc
add
mulb
add
jno
add
push
jmp
pop
mov
add
push
cmp
dec
sub
roll
add
adc
call
sbb
fcomp
shl
cmpsl
pop
dec
push
outsl
das
bound
lock
pusha
xlat
xor
mov
cmp
in
mov
add
ds
lods
add
roll
aas
dec
inc
xor
cmpps
mov
leave
sub
add
sub
jmp
pop
loop
push
aam
fstl
inc
add
rcl
inc
add
jl
xor
xchg
lods
cmp
cmp
test
mov
push
sahf
cmp
popa
cwtl
and
push
xor
xor
or
daa
aad
sbb
jno
adc
loopne
mov
or
idivb
lods
mov
mov
adc
add
pop
xchg
and
sti
jmp
lcall
push
adc
clc
xor
out
add
pop
dec
xor
lods
andl
pusha
std
jmp
inc
cmp
in
orb
jns
sbb
hlt
mov
jl
jae
aaa
push
repz
pop
sub
sub
ljmp
xor
and
push
inc
jg
enter
imul
and
cmp
or
mov
imul
test
add
or
jbe
mov
push
pop
sbb
add
xor
enter
lea
movsl
arpl
out
pop
mov
mov
mov
shrb
fwait
add
sub
add
add
pop
fnstcw
outsb
add
cwtl
insl
or
sbb
aad
mov
in
pop
sub
mov
test
mov
cmp
mov
bound
inc
sub
fnstsw
add
jecxz
mov
xor
daa
ret
push
popl
add
pop
jp
mov
sbb
rcrb
sub
add
sbb
out
xor
pop
xor
push
adc
push
add
fisubrl
add
adc
xchg
adc
pop
or
lds
jo
adc
ret
in
and
pop
adc
and
adc
adcb
and
and
xlat
inc
ss
test
das
dec
in
jge
movsl
idivl
mov
fsubr
jl
lods
adc
inc
add
add
mov
pop
add
mov
into
rol
jp
jg
add
arpl
sub
add
adcb
push
jbe
push
faddl
mov
popa
pop
mov
lods
cs
add
scas
pop
xchg
add
lcall
in
repz
add
mov
stos
dec
add
push
sbb
add
jecxz
inc
xor
add
leave
fiaddl
push
cmpsl
out
ret
jnp
mov
pop
sbb
test
xor
popf
in
fisttpll
movsb
add
push
adc
or
add
imul
xchg
add
ss
lahf
add
mov
out
lods
adc
lret
aas
cmc
or
icebp
sub
ljmp
jae
dec
pop
fisubs
mov
loopne
add
xor
mov
dec
aas
dec
jns
add
inc
lods
in
fldl
add
push
cwtl
cmp
or
iret
fdivr
sub
div
jle
add
and
cmpsb
pop
insl
decb
or
xor
testb
mov
sarl
pop
add
aas
addr16
pusha
out
es
loopne,pt
sbbl
sar
adc
pop
inc
sbb
js
or
pop
xor
stc
fbld
add
outsl
dec
pusha
subb
mov
mov
add
sbb
mov
add
ljmp
in
mov
adcb
mov
mov
mov
dec
mov
push
dec
inc
mov
add
mov
dec
inc
xor
in
div
push
or
cmp
adc
aas
popa
fwait
add
push
add
loop
inc
in
mov
sbb
mov
push
dec
inc
shlb
jmp
movsb
sub
pop
add
cmp
mov
les
add
jb
cli
add
lods
fisttpl
xchg
add
les
adc
dec
cli
xor
lock
insb
xchg
push
jmp
notl
cs
or
cli
testb
or
inc
mov
cs
mov
xor
add
movsl
jo
leave
scas
lock
sti
shlb
jg
sbb
cmp
ret
cmp
cmpb
decb
pop
fs
testl
add
dec
xlat
daa
push
imul
mov
in
out
add
lea
xlat
fcoml
inc
xchg
aas
mov
in
je
iret
inc
inc
and
add
inc
cmp
mov
lock
es
shrl
xor
fdivrl
mov
pop
and
cmp
fdivl
cmpb
rolb
push
clc
push
insl
lret
xchg
nop
shrb
mov
leave
jbe
in
mov
mov
mov
xchg
maskmovq
negl
or
cmp
jmp
push
sbb
pop
add
adc
imul
insl
scas
aam
mov
add
daa
jnp
and
test
adc
std
or
outsl
jbe
sbbb
xchg
lahf
loope
mov
jno
xor
mov
sbb
xor
xor
mov
in
scas
xchg
imul
mov
fld1
xor
nop
in
into
xor
leave
les
add
push
dec
js
or
les
jne
rorb
adc
call
scas
stos
ror
jge
nop
cmp
dec
adc
add
pop
cmp
push
ret
lea
je
jmp
inc
inc
xor
rclb
gs
add
add
fld
cmpl
fnsave
push
sar
mov
mov
outsl
or
call
cmp
mov
xorb
pushf
mov
loopne
jns
add
mov
add
call
jbe
add
lahf
aas
aam
addr16
sti
add
scas
push
in
adc
jge
insb
mov
int
pop
sub
add
fisubrl
mov
mov
jp
mov
xor
jae
repz
cli
ljmp
fidivrl
cmp
push
sub
popa
rolb
add
seta
lods
jecxz
or
aaa
insb
enter
ficoml
fsub
pushl
sldt
lds
add
repnz
icebp
outsb
xchg
add
mov
cld
jbe
add
inc
and
outsl
out
std
loope
dec
adc
inc
xor
add
mov
cmp
jg
cltd
sti
push
cmp
add
sub
mov
fildl
rolb
stc
dec
js
pop
data16
clc
out
add
or
mov
sub
test
dec
lods
and
movsl
negb
dec
popf
aam
loopne
fiaddl
data16
fwait
jge
xor
add
jo
addr16
push
pop
cmp
outsl
adcb
pop
add
daa
repz
and
add
sbb
add
dec
xchg
xor
jle
and
jns
mov
aas
fwait
aad
call
inc
aam
jle
pop
loopne
dec
jo
inc
inc
add
push
in
punpcklbw
loopne
jge
push
std
movsb
cmp
adc
mov
and
insb
pusha
or
add
in
imul
leave
and
inc
mov
dec
ljmp
shlb
sahf
test
roll
scas
je
add
inc
ret
fs
add
out
int
repnz
aaa
add
or
orb
out
outsb
cmp
sbb
pop
stos
and
mov
cmpsb
test
pop
cmp
fistl
pop
out
add
stos
add
ret
imul
je
pop
sahf
adc
jp
mov
push
fsts
xchg
lods
add
or
pusha
scas
add
add
addr16
adc
std
rcr
lods
fbld
adc
push
mov
push
scas
mov
pusha
jl
jmp
push
or
mov
pop
fstpl
sub
and
rol
popf
mov
hlt
xor
add
jbe
mov
in
dec
add
enter
push
push
jnp
loope
cmpb
push
pop
sub
daa
les
inc
adc
adcb
add
add
mov
imul
lret
jae
out
sbb
inc
in
push
jns
push
or
mov
addb
aas
mov
and
push
aam
sub
add
into
rcll
sub
sbb
pop
rcrb
icebp
dec
xor
mov
add
pusha
pop
and
sbb
fs
pop
nop
push
cmpsb
jb
loop
call
outsl
popa
or
ja
inc
jg
jbe
jo
sbb
out
mov
lahf
mov
add
ja
add
push
aas
insb
mov
pop
cli
enter
sub
aas
lret
push
xchg
sbb
test
js
shrb
aad
jl
add
out
repnz
addb
add
push
fmulp
add
cmc
push
sub
xor
jl
shlb
add
lahf
mov
push
int3
pusha
push
ljmp
add
aam
out
test
dec
pop
pop
fstp
jne
and
add
dec
cmp
add
out
fsubrs
add
sub
cltd
hlt
push
testb
or
fiaddl
push
nop
add
xchg
and
pop
mov
adc
clc
fs
inc
lret
xor
pop
out
imul
loopne
scas
mov
and
insb
insl
mov
mov
mov
daa
xor
xchg
imulb
add
inc
adc
test
push
movsl
popa
sbb
pop
pop
loopne
add
pop
jbe
dec
add
add
loopne
jns
test
dec
push
add
or
imul
addr16
filds
shll
and
je
ret
pop
ficoml
test
stos
popa
add
hlt
jb
or
or
or
out
addb
xor
add
test
add
pop
lcall
aam
sarl
add
sbb
mov
mov
fwait
add
mov
gs
or
cs
xor
dec
cmp
loopne
shr
daa
jo
orb
mov
and
pop
adc
clc
fadds
mov
fsubrp
enter
imul
maxps
mov
push
or
aam
adc
loopne
test
lods
sbb
icebp
movsl
sti
pusha
test
cmpl
enter
fwait
call
loopne
sahf
out
mov
add
push
xchg
mov
lahf
ljmp
xor
je
add
cs
sub
cmp
test
bound
or
inc
ss
loopne
dec
adc
push
arpl
aam
dec
shl
adc
cmc
loopne
insb
add
push
ret
mov
push
push
pop
in
sbb
sbb
mov
or
xlat
push
jecxz
mov
mov
repz
or
cwtl
push
xchg
add
jmp
xchg
data16
ss
pushf
mov
xchg
pop
xchg
fwait
inc
mov
lods
push
mov
and
xor
dec
les
adc
je
idiv
pop
lods
in
mov
or
cmpsl
scas
and
in
jp
dec
sarb
sub
push
in
and
sbb
inc
fs
add
jmp
sbb
test
xor
jne
je
fildl
xor
mov
test
or
add
aad
subb
pushf
nop
mov
mov
movsl
enter
mov
testb
sbb
mov
repnz
jl
cmp
imul
lret
clc
ljmp
adc
mov
push
popf
fs
mov
mov
iret
dec
ret
add
loop
or
addr16
and
mov
repnz
add
imul
add
push
jecxz
aad
clc
fwait
push
leave
add
shrl
push
xor
cmp
popl
outsb
xor
subb
add
popa
and
pop
push
leave
scas
dec
add
out
sahf
and
mov
pop
add
inc
hlt
inc
popl
addb
xlat
xor
add
shlb
mov
xchg
mov
sub
mov
iret
les
mov
dec
xchg
shr
test
ret
ss
fs
or
pop
pop
mov
shlb
dec
loope
add
mov
mov
nop
add
fwait
icebp
stos
add
pop
addb
loope
into
movsb
or
inc
and
inc
push
adc
xor
jo
jno
in
jge
pusha
outsl
cmp
pop
adc
xor
pop
adc
jg
in
insb
loopne
idivb
mov
dec
mov
je
push
loopne
clc
sbb
push
mov
out
and
lcall
add
gs
imul
lock
out
movsb
push
sbb
lods
ret
add
mov
mov
icebp
xchg
leave
cmpsb
negl
sahf
mov
push
push
aaa
cli
ljmp
push
pop
cmp
pop
push
pop
cmp
pusha
adc
push
je
insb
and
xor
jl
ret
sbb
inc
shlb
push
push
sub
fadds
push
jne
mov
add
fildl
rolb
cmp
sub
shll
push
mov
adc
jl
aam
lahf
pop
stc
jb
push
jno
pusha
pop
push
test
in
repnz
adc
jae
add
lret
fdivl
scas
loopne
pop
cli
clc
in
pushf
xor
xchg
mov
adc
arpl
imul
mov
cmp
jl
in
das
xchg
aam
push
loop
stos
add
sub
sub
ja
add
adc
cmp
and
pop
test
cmp
rol
jns
shlb
lods
fadd
ja
or
out
inc
add
add
xor
pop
add
rcrb
sti
dec
inc
push
add
pop
lds
add
ja
mov
push
pop
add
dec
mov
jecxz
push
scas
and
ss
xor
or
add
xchg
push
pop
lcall
testb
roll
jl
mov
cmpsl
cmp
rcl
mov
or
add
push
imul
cmc
jnp
add
mov
es
push
out
or
cmp
aad
movsb
dec
sbb
adc
jg
adc
imul
sahf
add
mov
push
addb
repz
inc
movsb
mov
sub
loopne
mov
add
stc
call
add
dec
mov
jmp
jns
inc
mov
sub
fistpll
addr16
xor
fptan
sub
std
push
add
jp
sub
sarl
add
in
js
add
add
mov
jns
jo
push
rclb
push
int3
lock
cmp
dec
sbb
inc
jmp
add
repz
fisttpl
lcall
add
stos
push
add
push
add
xor
add
in
cmpsb
shl
mov
lret
test
xchg
test
aaa
jo
mov
rclb
or
hlt
xor
mov
add
pop
dec
cli
xlat
mov
inc
add
pop
adc
sbb
fcoml
push
xor
xchg
mov
lods
je
add
and
mov
hlt
es
stos
out
les
mov
add
arpl
int3
add
aaa
jno
jae
add
jmp
add
and
mov
sti
cmp
add
in
cmp
or
add
test
and
movsb
mov
std
and
inc
dec
fwait
add
out
and
movsl
nop
add
jbe
mov
mov
add
outsl
jnp
in
and
incl
sbb
loop
cld
pop
inc
lret
sbb
sbb
adc
push
lret
sti
add
sbb
dec
js
sbb
aas
and
add
add
outsb
xchg
inc
adc
cmpsb
or
or
fwait
orb
lret
and
rclb
je
add
fisttps
ret
push
add
movsb
and
aam
cmp
add
test
mov
leave
xor
scas
cwtl
dec
lea
mov
dec
mov
jae
add
test
sbb
divl
add
xor
adc
pop
add
ret
sub
inc
mov
sub
sbb
pop
in
inc
jns
add
fiaddl
cmp
cli
sub
mov
bndstx
and
xchg
fildl
popa
jge
adc
cmc
or
push
add
xchg
fildll
insb
ret
or
add
sbb
or
add
icebp
inc
popf
push
mov
xor
mov
cmc
out
pop
ja
push
or
add
xchg
jg
jmp
dec
incl
pop
dec
test
sbb
pop
movsb
add
cwtl
and
adc
out
xchg
xchg
je
sbb
xlat
inc
arpl
inc
mov
into
add
enter
jbe
and
rcrb
rcl
iret
sbb
fiaddl
sbb
add
fcoml
loop
arpl
add
xchg
add
cmc
mov
jle
inc
lods
mov
leave
pushf
in
cltd
outsl
nop
mov
sahf
je
add
xor
sarl
clc
popl
into
in
sbb
movsb
add
xlat
jbe
add
fnstcw
outsl
inc
xor
popf
cmc
inc
add
add
test
nop
fstps
dec
cmp
mov
subb
movsb
and
rolb
clc
mov
jns
add
aas
in
mov
sbb
mov
daa
popa
gs
hlt
sbb
rcll
and
add
and
jg
out
mov
jge,pt
jmp
inc
roll
out
add
dec
sti
and
mov
add
sub
stos
xor
pop
cmp
arpl
mov
sub
pop
add
and
fwait
lock
push
mov
sub
mov
jb
add
cmp
xor
ret
cmp
dec
out
inc
in
movntq
out
mov
rcrb
xor
jl
decl
imul
mov
mov
jnp
add
lcall
push
add
or
adc
lock
mov
daa
pushf
imul
sbbb
inc
pop
loop
add
push
lds
push
aas
es
dec
push
add
jp
dec
mov
dec
inc
rorb
dec
mov
jne
pusha
jg
mov
adc
dec
in
add
or
stos
fldt
pop
xor
pop
imul
push
bound
mov
pop
push
rorl
mov
insl
pusha
ds
mov
inc
je
push
xchg
shl
push
in
addr16
and
pop
dec
dec
imul
add
insb
mov
mov
and
mov
add
in
popf
and
add
sbb
jo
xchg
clc
incb
xor
enter
add
jne
lret
and
xchg
loopne
fldl
clc
dec
add
je
add
lock
dec
dec
add
mov
xchg
xlat
adc
pusha
sub
jne
sbb
js
mov
jbe
call
mov
nop
rorl
pop
and
jns
lea
mov
add
push
mov
inc
cmc
lea
jp
jo
lcall
xor
les
cltd
jle
jmp
lea
and
nop
add
add
pop
push
aas
out
in
push
dec
mov
test
xchg
fsubrs
pop
notb
mov
outsl
shr
call
sub
or
xor
pop
add
sbb
lock
enter
jle
mov
bound
jg
mov
push
push
jmp
push
test
fadds
sub
shll
push
das
mov
pop
insl
sarb
aam
add
xor
pushf
fnstenv
mov
sub
adc
dec
cmp
pop
sub
add
bnd
ret
fs
xchg
dec
add
movsb
cmpsb
out
mov
push
add
xor
sahf
out
shrl
add
cltd
xchg
fstpt
inc
push
pop
mov
ucomiss
aam
adc
int
call
addl
leave
add
out
mov
sub
dec
arpl
std
sub
xchg
in
or
dec
xor
lret
push
cwtl
cmc
lret
dec
push
or
loopne
mov
mov
sbb
imul
jo
or
adc
push
cmc
inc
je
jns
or
cmpl
int
mov
xchg
test
inc
enter
add
cmp
aaa
sub
mov
idivb
sahf
add
inc
adc
orl
sub
add
cmp
add
gs
popf
mov
int
lock
stos
add
or
loopne
in
loop
add
jecxz
xchg
inc
adc
and
in
add
pushl
push
jb
hlt
push
pop
push
ret
add
rolb
sub
jo
dec
xchg
jle
mov
pop
jmp
cmp
add
sbb
repnz
mov
dec
fwait
aam
sub
add
insb
inc
and
push
sub
dec
adc
add
add
dec
add
jecxz
test
leave
mov
xor
mov
jb
sbb
roll
adc
stc
insb
sahf
cltd
or
iret
push
adc
adc
or
std
and
inc
xlat
add
mov
rolb
cmc
mov
add
pop
sub
jae
add
shrb
std
ds
mov
les
scas
leave
fstpt
add
loope
sub
test
cmp
insl
inc
cmp
fs
add
pop
and
testb
sbb
mov
dec
cmp
jmp
push
scas
sub
push
popf
in
dec
cld
mov
push
testl
mov
add
es
fnstenv
mov
sarb
sbb
sub
sti
leave
out
add
xor
jl
add
pop
daa
or
cmpsb
clc
xor
sub
ljmp
hlt
pop
adc
jns
or
or
and
ret
and
aam
jl
add
lds
pop
push
sub
addb
pusha
inc
nop
mov
aam
mov
xchg
movsb
andb
push
dec
ds
lcall
add
xchg
jle
xchg
cwtl
pushf
mov
or
adc
lds
or
loopne
sti
add
mov
add
hlt
shlb
jnp
mov
ds
add
lods
lds
icebp
inc
xchg
jle
in
int3
insb
daa
and
add
arpl
sub
movl
lahf
add
pop
clc
sub
pop
js
add
lret
and
sbb
fimuls
add
mov
sbb
push
mov
sbb
mov
lcall
xchg
and
pop
mov
nop
lds
push
adc
sahf
shlb
adc
push
cmp
scas
add
stos
mov
sub
lret
jno
in
mov
rorb
add
jle
lahf
jmp
int3
mov
fdiv
shll
in
jle
cmp
lret
push
sbb
daa
test
arpl
in
ret
mov
inc
or
mov
cmp
popa
sbb
in
jle
nop
inc
jns
add
ja
adc
fstpt
sub
cmovl
and
push
aad
popf
adc
dec
ds
mov
dec
xchg
push
xor
adc
xor
in
sub
or
iret
out
cmp
push
push
sub
cs
inc
daa
add
lahf
call
cmp
inc
sub
add
mov
test
cmp
mov
sub
sub
push
xchg
cltd
imul
loop
push
pushf
fimull
scas
fisubrs
ja
into
out
pop
inc
and
inc
and
adc
xorb
aad
hlt
outsl
add
int
clc
add
jmp
adc
add
jb
dec
push
rol
imul
lock
out
mov
mov
aam
clc
mov
ja
pusha
arpl
jle
jp
fists
add
mov
lods
cs
in
int3
insb
dec
js
es
call
fst
inc
jge
mov
js
push
inc
in
pop
jl
add
in
sub
or
inc
test
add
push
in
adc
out
cmp
adc
or
add
aas
movsb
sub
cld
push
adc
pusha
sbb
adc
lcall
mov
jb
or
aas
jnp
add
push
mov
cmp
add
cmpsb
movsl
je
pop
push
pop
sub
lds
lea
and
mov
decb
pop
jle
mov
invd
loopne
fucomp
popa
xchg
push
out
xchg
shl
aam
loopne
push
or
mov
outsb
imul
xor
call
sbb
push
adc
mov
fldcw
dec
push
loop
xorb
aas
push
jo
dec
sbb
lret
lahf
jno
add
lods
lret
je
push
pop
add
add
push
adc
sub
xchg
push
hlt
push
and
fcomip
fs
loop
add
movsb
mov
loopne
int3
sub
add
sub
add
push
pop
mov
pusha
outsb
rcrb
jmp
cwtl
cmpb
mov
xchg
add
mov
add
fsubrp
ss
dec
dec
addb
incb
add
mov
jecxz,pt
pop
inc
fstpt
repz
sbb
in
mov
xchg
add
dec
inc
pop
push
call
sbb
or
add
cmc
leave
sbb
add
loope
xor
vmread
addr16
cmp
jne
push
push
push
xor
popa
dec
aam
pop
scas
cld
mov
xchg
adc
add
add
sub
jns
dec
jp
push
dec
outsl
loopne
or
hlt
loopne
dec
add
push
xchg
pop
cld
cmc
push
in
and
aaa
add
movsl
lods
int3
mov
lods
jo
or
or
jle
cwtl
push
xchg
xor
lahf
cmp
push
inc
mov
sub
or
call
pop
in
addl
lds
mov
insb
ja
add
add
jnp
inc
scas
push
cmp
sub
mov
xchg
cmp
sahf
mov
insl
push
add
nop
xchg
push
cli
adc
lods
jbe
add
push
pop
pop
into
mov
push
sub
subb
add
pop
mov
jle
popa
dec
add
push
and
or
dec
and
clc
imul
in
sbb
int
adc
outsb
stos
dec
sbb
test
jecxz
pop
jbe
daa
jno
add
lret
and
xchg
dec
repnz
jae
adc
sbb
imul
hlt
push
sbb
jge
andb
lock
and
fisttpll
fs
loope
dec
and
xor
mov
das
adc
repz
push
lods
fildll
in
sbb
cmp
inc
popf
popa
fwait
mov
cmp
push
add
cmp
mov
out
jmp
pop
fcomps
inc
sarl
xchg
cmpsb
lea
lods
rolb
dec
fisttpll
mov
push
jb
mov
push
cmp
inc
rclb
sub
lcall
das
jmp
pusha
hlt
js
add
xchg
mov
add
imul
into
inc
pop
push
lahf
add
jno
roll
pop
sti
int
adc
in
add
aas
leave
jg
loope
test
mov
jg
push
ljmp
lock
push
jmp
mov
pop
arpl
int
rcrb
and
cld
repnz
rcrb
mov
adc
mov
cld
cmp
repz
add
addr16
out
inc
in
dec
and
jbe
je
sbb
rorl
sbb
cltd
ljmp
or
cmp
cmp
in
mov
push
jge
xor
test
xchg
add
or
cld
fsts
mov
inc
dec
fisubl
mov
loop
add
mov
adc
out
repnz
into
xor
cmp
ds
outsl
xchg
je
pusha
adc
push
inc
ds
add
testb
jae
sbb
xor
stc
add
popf
add
ret
lds
fwait
cmpb
sub
push
stos
jg
out
xor
add
movsb
insb
pop
fs
lods
add
pop
jl
pusha
out
mov
sbb
in
pop
test
pushf
ljmp
jns
int
pop
jmp
xor
dec
pop
shrb
cld
out
bound
and
popa
fsubrl
iret
and
and
lret
xorb
xor
push
xchg
add
and
mov
and
add
sub
push
push
mov
inc
loopne
mov
mov
sbb
sahf
fwait
imul
cs
push
jb
mov
mov
ja
jg
mov
jo
adc
cltd
cmp
nop
cmc
and
pop
add
leave
xorb
dec
movsl
bound
sub
test
push
test
xor
ljmp
or
clc
movb
jno
sub
aaa
add
and
sub
test
xchg
inc
add
push
adc
les
dec
mov
addl
add
call
test
adcb
xchg
add
data16
sub
push
add
bound
jo
fildl
sub
dec
pop
jae
rdpmc
add
loopne
cmpsl
sbb
pop
adc
mov
pop
les
insb
fstl
aaa
add
ret
mov
pop
inc
xchg
xchg
add
fldcw
addb
stos
int
add
jecxz
sti
out
jnp
dec
mov
and
popa
and
sti
data16
adc
xor
xchg
add
pop
arpl
leave
mov
cmp
cmp
inc
into
icebp
ja
adc
sahf
mov
adc
add
add
cmp
mov
pop
das
add
push
lock
testb
jmp
pop
je
pop
clc
and
jbe
cmp
arpl
xchg
ja
mov
mov
test
imul
sbb
dec
xchg
sti
add
xlat
sbb
mov
data16
add
pop
mov
jns
xchg
dec
pop
dec
xchg
cmpsl
sbb
push
add
pop
stc
imul
xchg
je
fdivrl
loop
mov
pop
dec
jp
cltd
out
pop
imul
xchg
sub
call
mov
xchg
notl
cli
or
or
mov
inc
in
adc
sarb
mov
xor
mov
andl
mov
jle
pop
scas
insl
adc
inc
inc
loopne
jecxz
scas
aaa
popf
data16
dec
test
add
xchg
adc
and
outsb
enter
push
loopne
dec
mov
xchg
mov
jnp
and
popf
jg
pop
or
shll
add
ret
aaa
sbb
push
dec
pop
sbb
fildl
shrl
insb
nop
mov
dec
and
in
out
add
shrl
leave
mov
add
das
mov
in
add
lea
mov
int
push
mov
sbb
xor
out
sbb
cmp
add
mov
sbb
mov
mov
push
mov
mov
je
mov
rcrb
repnz
mov
cmp
hlt
inc
sbb
imul
cld
addr16
mov
adc
cmc
xor
mov
rol
fldenv
or
and
pop
fnsave
pop
and
movsb
sbb
sub
lock
pop
cmpsb
and
jo
or
xor
adc
cmp
xor
jae
add
mov
adc
outsl
mov
dec
pop
sub
aad
js
pop
ds
jnp
xor
lea
js
cmpl
pushf
sbb
sbb
jbe
orb
mov
clc
test
dec
pop
hlt
in
jns
in
mov
mov
adc
add
push
pop
ja
and
xor
or
xor
jae
inc
enter
in
in
cld
and
jecxz
add
sub
sti
clc
pop
sbb
xlat
sbb
cmp
inc
nop
pop
jno
ds
and
pop
jae
pop
mulb
sarb
inc
idivl
sbb
cli
add
cmp
xchg
add
lahf
mov
test
fs
add
popa
fwait
push
cmp
add
loop
and
adc
xor
xchg
adc
and
and
dec
scas
adc
adc
push
inc
mov
mov
mov
xorl
adc
stos
mov
or
inc
outsb
cwtl
inc
pusha
cli
inc
cmpsb
or
inc
mov
inc
mov
inc
mov
adc
inc
rcrb
xchg
leave
ret
mov
mov
shl
xchg
push
decb
push
repz
lcall
jle
xchg
mov
movsl
ds
inc
push
outsl
inc
mov
inc
mov
cmp
ja
pop
sbb
add
aad
ret
sub
cmc
add
or
sbb
sub
scas
xchg
sbb
mov
mov
out
xchg
test
ret
les
sub
or
mov
mov
je
xchg
outsl
jmp
pop
sbb
out
jecxz
data16
adc
add
lods
add
xchg
pop
into
add
push
dec
sub
stc
fisubl
sbb
movsb
add
mov
ds
sahf
addb
mov
jge
loopne
cmpb
lret
mov
and
add
lods
pop
std
dec
mov
or
lods
add
and
jb
mov
xchg
push
mov
pop
inc
scas
rol
cld
popa
jb
add
sbb
add
pop
xchg
incb
or
adc
push
addr16
imul
cmp
and
lret
movsb
sub
lock
fsubs
add
or
and
insb
add
cld
mov
roll
aaa
push
pop
xchg
cmp
add
mov
sahf
xchg
fcmovnbe
fs
sbb
repz
mov
mov
sarb
andb
or
or
inc
pop
xchg
jae
add
jecxz
rolb
jo
push
int3
mov
mov
add
cmp
das
nop
js
push
movsl
hlt
test
pop
fsubrs
mov
loope
pop
shlb
sti
mov
mov
popa
sbb
sarb
out
cmp
mov
mov
lock
add
or
and
cmp
adc
jbe
mov
lahf
mov
push
and
push
jnp
mov
daa
ljmp
test
push
add
iret
pop
loopne
sub
sbb
pop
jge
pop
jnp
adc
pushf
and
lret
sub
pop
rolb
in
and
dec
les
dec
add
adc
mov
pop
and
addl
adc
loope
jo
ja
mov
and
mov
or
xchg
push
pop
dec
inc
out
fucomi
inc
cmp
cmpb
xchg
test
pop
dec
adcb
loop
lock
jecxz
scas
cmpl
add
icebp
sarl
outsb
push
add
mov
and
repnz
inc
gs
cmp
adc
xchg
add
push
push
mov
jbe
sub
adc
adc
insb
jle
jne
bound
mov
jge
push
mov
outsl
add
pop
fs
cmp
in
push
add
dec
arpl
es
call
pop
inc
xchg
dec
repz
in
into
mov
sbb
sbb
pop
lret
xorl
popf
push
jmp
lret
clc
dec
push
data16
cmc
dec
add
fldt
incl
lahf
mov
jecxz
flds
add
xchg
mov
pop
ds
cmp
sbb
push
adc
insb
imul
mov
outsl
jl
sbb
in
rclb
and
loopne
sbb
shrb
repnz
xor
clc
lods
je
lcall
adc
adc
cld
push
pop
arpl
cmp
cmp
xchg
movsl
push
scas
in
fbstp
cmp
pop
add
std
fsubrs
xor
lahf
rclb
jbe
mov
push
jo
add
dec
leave
pop
and
sub
pop
add
pop
sub
aaa
inc
fs
adc
add
sbbb
in
dec
movlhps
clc
xchg
mov
mov
fldl
cmp
add
fstps
xor
xor
test
cmp
ret
orb
in
pop
jmp
add
or
add
fsubl
icebp
cmp
movsl
adc
outsl
mov
pushf
aaa
xchg
sbb
xchg
add
test
pusha
loop
rolb
add
and
ss
cmc
or
pop
mov
add
jno
pop
mov
mov
sbb
mulb
and
cmp
scas
adcb
repz
mov
add
pop
inc
or
cltd
in
arpl
rorb
cwtl
std
or
cmp
sub
and
outsb
arpl
add
pusha
jne
add
nop
out
aaa
add
clc
add
pop
and
in
lods
add
or
lods
mov
pop
push
add
dec
pop
mov
add
xorb
inc
adc
cltd
jae
pop
popa
lret
testb
stos
in
push
push
cmpsl
jo
jmp
push
xchg
adc
sub
xchg
aas
popa
invd
hlt
inc
add
sarl
sbb
rolb
sub
out
enter
pop
or
mov
cmp
in
push
add
dec
test
ret
repnz
adc
mov
inc
push
aas
mov
fwait
add
dec
pushf
jb
add
in
es
arpl
add
add
mov
mov
xor
dec
inc
xchg
pop
cmp
mov
out
pusha
je
xchg
push
lahf
lcall
cwtl
or
jmp
add
js,pn
add
fadd
test
xchg
icebp
insb
add
xchg
popl
mov
movsb
nop
fimuls
in
arpl
test
xchg
add
adc
jne
ljmp
add
dec
mov
add
jo
pop
add
dec
js
xchg
stc
cs
hlt
cwtl
add
mov
imul
aaa
jl
xchg
jae
das
insl
ja
lock
pop
or
outsl
push
aam
iret
add
push
mov
or
ds
jg
add
jge
pop
push
mov
cmp
lcall
inc
imul
les
xor
add
movsl
xchg
call
sbb
ljmp
sbb
add
mov
cld
push
cmpsl
repnz
sub
mov
out
xchg
cmp
add
loope
cmp
daa
adc
data16
aad
dec
pop
inc
int
inc
and
pusha
add
pop
cmp
aas
mov
push
out
add
jg
xor
pop
js
fcoms
and
pop
push
push
or
sbb
mov
adc
jo
adc
loopne
jno
and
jle
xchg
dec
jg
jecxz
add
jbe
pop
ds
adc
and
push
push
sbb
and
outsb
push
in
imul
sub
adc
add
xchg
and
add
jnp
mov
sub
repz
scas
add
imull
pop
dec
negb
xchg
add
rol
sahf
ret
fiaddl
fwait
jge
jl
mov
xor
sbb
dec
lods
inc
fcmovnbe
hlt
enter
cmp
outsl
pop
or
add
lods
call
jge
int3
mov
add
pop
xchg
in
add
das
mov
xor
dec
enter
lcall
roll
outsl
aad
ret
sub
icebp
cwtl
xchg
push
pop
ljmp
std
add
in
push
or
sub
cmp
stc
jae
es
call
add
pop
shlb
push
test
add
add
adc
ds
xchg
ss
add
sarl
icebp
add
adc
add
jno
cmc
add
ret
test
xchg
cmp
push
adc
mov
xor
and
push
add
and
push
cld
loopne
lret
cltd
ss
push
mov
add
addb
mov
mov
cmc
roll
filds
add
add
cmc
adc
roll
out
pop
cltd
mov
movsl
stc
xor
inc
or
fs
call
out
int3
add
add
bound
nop
mov
xor
enter
add
sti
aaa
jae
and
add
inc
jmp
ja
add
cmc
jne
cmp
cs
sbb
pop
or
mov
add
add
lock
add
imul
fs
add
mov
enter
pop
jae
add
in
dec
add
mov
mov
mov
mov
out
cmp
pop
add
push
dec
movsl
fsubs
repnz
pusha
inc
push
pop
xchg
cs
addr16
sbb
mov
jo
fdiv
inc
cld
and
cmp
ja
jg
mov
xlat
add
inc
inc
sbb
mov
scas
sub
add
add
mov
sahf
sub
inc
test
lea
ds
inc
jns
pop
mov
mov
cltd
psubq
mov
incb
mov
or
jmp
or
pushf
add
xchg
lret
or
mov
popf
test
and
mov
fucom
or
inc
mov
sti
pop
call
push
sub
add
std
sahf
orb
push
bound
paddb
pusha
jae
sub
pop
arpl
inc
dec
mov
paddq
ret
and
jbe
inc
inc
faddl
push
adc
sbb
push
add
jl
push
jbe
mov
ret
mov
stc
lret
out
or
andl
push
push
aas
sub
clc
xorb
loope
inc
aaa
or
adc
pop
jbe
int3
xchg
cmpsl
add
popf
out
shll
lea
iret
ljmp
aam
fcomp
sub
lock
enter
nop
jns
or
insl
add
mov
add
outsb
push
mov
dec
stos
fcoms
pop
movsl
out
pop
add
lods
shll
ljmp
add
mov
push
ds
shl
add
inc
addr16
hlt
jb
add
pushf
push
cmpsb
mov
cwtl
filds
sbb
mov
ss
mov
cmpb
mov
add
sub
add
pusha
mov
add
push
xchg
push
xor
push
test
add
daa
dec
sarb
cli
add
cmp
or
jp
mov
dec
xor
nop
pop
cs
cmp
sub
pop
push
inc
mov
and
mov
jmp
in
into
jb
or
add
dec
pop
loope
mov
add
pop
jg
lahf
jl
sbb
incl
push
shll
push
adc
iret
sahf
pusha
xchg
call
xchg
gs
jo
mov
lea
jg
clc
or
pop
and
inc
dec
lret
popa
dec
bswap
and
shlb
out
sbb
xlat
xchg
dec
cmc
notl
shlb
js
pushl
xor
scas
or
mov
add
loope
addr16
ret
rcrb
jle
das
sbb
mov
xor
insl
out
ja
add
and
add
loop
add
enter
cmp
inc
scas
stos
aam
add
xchg
push
in
lds
or
or
sub
ret
fs
or
in
loope
aam
and
pusha
inc
mov
cmp
push
dec
adc
pop
inc
sub
stc
ljmp
dec
push
xchg
ss
jg
movsb
fadds
mov
xor
add
and
fcomi
shrl
add
push
push
mov
push
outsb
inc
mov
jae
mov
incl
inc
jg
pusha
cmp
inc
movsb
cmp
icebp
aad
lret
int
jo
push
jl
loopne
add
repz
test
pop
mov
iret
add
inc
sbb
add
lret
daa
test
jbe
push
mov
js
add
fst
push
adc
xor
add
push
pop
cli
lret
add
pop
jnp
or
fucomi
cwtl
pop
add
rcrb
or
scas
and
mov
add
or
xchg
add
cmp
int3
add
sbb
mov
add
pop
cmp
lret
cmp
call
add
jecxz
and
sbb
outsl
jmp
add
cwtl
sub
rcrb
mov
mov
icebp
ret
dec
jle
and
cltd
xor
inc
out
ss
or
sbb
mov
sahf
add
mov
inc
inc
inc
pop
add
aas
lahf
es
mov
jg
decl
cmp
xchg
push
and
aas
lret
popa
add
ret
nop
add
or
pushf
mov
add
movsb
fnstenv
cltd
add
pop
cs
jo
cld
jmp
add
icebp
dec
xchg
pop
les
push
mov
inc
lret
pop
mov
add
sub
push
pop
or
jbe
arpl
fistpl
xor
fs
outsb
pop
mov
clc
rclb
incw
sub
add
push
nop
nop
pop
sbb
inc
dec
sbbb
xchg
test
cmpsb
fwait
dec
mov
mov
movsl
test
xchg
mov
ds
sahf
aas
dec
dec
mov
mov
and
fsubl
mov
jne
dec
in
mov
inc
push
mov
xchg
add
fiadds
pop
xchg
loopne
fisubl
ja
dec
test
and
or
xchg
loop
popf
ja
jge
jge
xor
and
mov
push
add
and
scas
pop
neg
faddl
sub
adc
rorl
xor
js
or
cmp
loop
cmp
adc
and
mov
cmp
mov
aaa
xchg
and
pop
rol
add
jl
add
dec
sbb
add
cmp
les
ror
call
and
dec
xchg
testl
enter
daa
push
pop
inc
pushw
xchg
popa
out
push
add
inc
pusha
xchg
add
cmpsl
outsl
or
out
ljmp
adc
dec
jbe
add
subl
cmp
pop
inc
bound
push
and
or
jg
pop
mov
and
jbe
add
das
out
sub
pcmpeqd
jmp
push
pop
inc
adc
mov
adc
jl
pop
js
in
pop
add
pop
or
loope
and
jecxz
mov
sub
dec
aas
sub
xchg
push
bound
into
cld
out
stos
subb
aaa
inc
shrb
lds
pop
jecxz
sbb
xchg
add
mov
xchg
into
jb
mov
jns
inc
add
mov
push
inc
adc
pop
jmp
addb
les
and
push
add
std
in
sti
aad
inc
enter
test
aas
mov
loope
das
popa
sbb
mov
adc
inc
flds
aas
es
mov
or
sub
data16
add
repz
push
cmp
aad
lock
cmovle
jl
mov
out
dec
mov
lret
add
sub
int3
repnz
push
xor
lahf
add
sahf
sub
outsb
rolb
sbbl
cmp
neg
fsubs
pop
sarl
or
mov
xchg
testb
inc
cmp
les
push
enter
push
lcall
fcompl
addr16
jl
add
cld
loopne
and
aaa
add
fcoms
mov
jno
or
and
mov
pop
movsl
mov
enter
sub
add
cwtl
xor
imul
std
arpl
rclb
add
ljmp
int3
clc
dec
sti
psubusb
push
ret
and
push
in
xorl
add
sarb
xlat
push
stc
das
sub
add
es
aaa
add
xchg
jl
mov
pusha
mov
addl
rol
aad
popf
push
pusha
add
out
je,pn
push
and
adc
nop
mov
cwtl
xchg
xchg
add
or
ret
inc
inc
mov
les
adc
sub
mov
push
push
and
xlat
std
add
and
dec
jnp
clc
inc
pop
ret
fildl
scas
shrb
add
xor
xor
and
jno,pt
test
inc
sbb
stos
daa
push
mov
add
call
and
mov
aaa
ret
std
add
cmovnp
sbb
rcrl
cli
sub
add
jae
jecxz
add
nop
mov
adc
addl
addr16
dec
add
ficoml
js
xor
add
jns
adc
mov
fisubrl
fcomps
nop
and
mov
inc
xchg
aaa
rclb
aas
mov
jae
movb
repnz
dec
imul
pop
shlb
clc
push
inc
jb
out
loop
test
sbb
addr16
add
mov
mov
xchg
mov
sahf
jge
mov
mov
add
rol
lahf
push
xchg
cli
add
xor
add
or
outsl
mov
lret
addr16
push
psrad
dec
mov
loopne
add
xchg
addl
repz
jp
clc
test
and
inc
mov
scas
ret
sub
mov
xchg
jb
mov
loopne
iret
je
clc
outsb
repnz
sub
aaa
gs
jnp
mov
sar
mov
sub
pop
xchg
ret
jge
push
or
sub
lret
cmp
sbbb
faddl
jp
pop
dec
jle
fdivs
pop
fistpll
inc
mov
mov
mov
scas
xor
cmp
pop
inc
add
ret
aad
shll
mov
mov
push
pop
jne
jb
pop
test
jmp
pop
pop
faddp
add
pusha
addr16
push
mov
dec
mov
sub
stos
ja
stc
decl
std
pop
or
xchg
or
subb
scas
sub
mov
add
mov
xor
add
rcl
mov
sub
cmp
add
push
sbb
clc
mov
aam
dec
rcll
rol
or
loopne
xchg
push
push
push
dec
loope
add
test
and
lods
loopne
add
inc
aam
push
dec
xlat
leave
icebp
xor
xchg
ret
mov
jne
push
bnd
jge
daa
in
aad
add
and
cmp
lret
pop
mov
cltd
adc
nop
mov
mov
in
aam
add
jb
mov
aas
cli
jmp
push
andb
mov
stos
xchg
jmp
inc
jg
not
mov
dec
inc
push
mov
fcompl
test
xlat
test
loopne
sub
outsl
xchg
in
or
rcrb
xchg
add
and
sbb
xchg
sub
mov
daa
popl
pusha
dec
push
lods
fyl2x
imul
addl
mov
stc
pop
cmp
cmovns
pusha
xchg
sbb
mov
add
loop
scas
xor
gs
inc
xchg
mov
movsl
dec
adc
add
cld
sbb
add
pusha
push
jmp
push
push
add
jmp
in
aas
cmp
negb
jmp
add
adc
jl
movsl
rclb
push
sub
mov
mov
sub
outsl
movsl
inc
sub
cmpsl
rolb
or
arpl
test
jl
mov
cmp
dec
fstl
iret
repnz
les
sbb
mov
push
loope
imul
loopne
mov
movsb
clc
test
inc
push
add
pop
mov
xchg
fstps
push
cmpsb
add
mov
add
sbb
dec
push
add
dec
cld
pop
cmp
mov
pop
jmp
add
lods
and
cmpsl
cmp
es
js
adc
movsb
call
int3
jns
loope
loopne
inc
xchg
add
repz
mov
mov
dec
mov
add
dec
inc
pop
adc
xchg
mov
jmp
pop
push
or
cld
pop
sbbl
nop
cmp
mov
fwait
jae
js
shlb
xchg
jg
add
xor
xor
push
movsl
in
sub
pusha
stos
add
sbb
sbb
push
push
mov
pop
jmp
cmc
jns
sbb
pop
adc
mov
pushf
xor
pop
jmp
sub
sub
icebp
orb
pusha
test
inc
dec
enter
test
clc
add
pop
js
sbbl
shll
stos
cmp
stos
fsubrp
sbb
push
popa
xchg
cmpb
stos
addr16
mov
fadds
aam
push
dec
and
xor
push
fidivs
push
aaa
test
fs
add
lret
and
pop
cs
add
fisttpl
sub
lock
push
mov
inc
loopne
inc
pop
lea
lahf
jo
pop
adc
popf
out
xchg
cmpps
movsl
adc
xor
add
xchg
xor
test
inc
icebp
in
jbe
add
xchg
or
add
mov
xor
mov
pop
cmp
loop
add
jl
add
imul
inc
add
lret
popa
mov
dec
int3
add
inc
cmp
xor
jle
aam
xor
add
pop
filds
rorb
sti
adc
mov
xchg
ja
mov
push
andl
shlb
add
mov
sub
dec
mov
inc
test
adc
pop
mov
add
insb
sbb
dec
rorb
add
inc
imul
xor
lock
mov
lahf
ss
cltd
lret
mov
leave
add
insl
jecxz
loope
pop
in
or
xchg
sbb
mov
rcl
cmp
fnstcw
mov
xchg
mov
lahf
out
sbb
add
mov
shr
push
test
xor
lods
push
test
jmp
and
xchg
in
jno
push
inc
mov
cltd
inc
repz
mov
mov
and
addr16
mov
add
out
jg
pop
lods
add
fwait
adc
pop
mov
xchg
mov
mov
dec
lcall
ffreep
pushf
cmpl
jle
lods
test
fadds
shlb
mov
or
sbb
dec
xor
popf
lods
xchg
lock
sub
add
fidivrl
adc
ret
pop
pop
movl
out
in
bound
mov
add
xor
xorl
add
imul
popa
mov
dec
sarl
add
nop
mov
xor
dec
ss
fsubrl
jo
icebp
cmp
hlt
mov
mov
add
inc
mov
lea
dec
loop
mov
or
mov
mov
std
cmp
sbb
les
xor
mov
fnclex
pop
push
enter
mov
lock
and
adc
cmp
add
inc
in
scas
sarb
dec
xchg
sbb
nop
push
jne
push
push
lock
push
and
stos
rclb
and
mov
push
push
pop
sbb
shld
dec
cmp
shll
pop
ja
or
mov
mov
add
test
dec
inc
imul
mov
mov
mov
dec
inc
cmp
fmuls
stc
mov
adc
sub
enter
add
scas
iret
xchg
out
push
aaa
add
push
or
mov
lock
adc
xor
adc
and
add
and
hlt
cltd
xchg
cmp
pop
mov
lret
cmp
nop
int3
add
mov
jbe
cwtl
incb
outsl
push
jb
mov
and
and
cmp
or
adc
xchg
fimull
imul
pop
jmp
mov
dec
aad
add
pop
int
mov
xchg
mov
or
xor
push
pop
fcomps
sbb
pop
mov
andb
jmp
test
sub
jnp
inc
lods
push
loop
mov
jo
and
mov
outsl
xchg
ljmp
pop
iret
jmp
cmp
movsl
sub
lcall
int
mov
push
sbb
sbb
add
jmp
inc
bound
add
jns
fimuls
jbe
mov
jecxz
xor
mov
lret
jl
lcall
fwait
push
out
negb
cmp
mov
mov
push
mov
inc
scas
test
xchg
mov
sete
in
or
sbb
int3
and
push
outsl
shll
ret
shrb
jge
cltd
movsb
push
lock
pop
dec
sub
push
sbb
xchg
ja
cli
cs
add
push
cmpsb
sahf
insb
add
sarb
scas
ss
push
or
xchg
movsb
mov
lea
xchg
adc
inc
fwait
inc
cmpsl
repz
adcb
cld
test
mov
roll
pop
mov
xor
add
add
pusha
cmp
test
mov
insl
sub
adcb
push
les
movl
leave
jle
or
in
mov
popf
jno
cli
pop
add
push
test
lock
inc
jae
add
xchg
cmc
sub
sbb
mov
add
lret
je
add
out
jo
add
fdivr
jg
mov
cmp
or
test
sbb
sub
in
mov
or
xchg
cli
inc
push
testb
mov
ja
pusha
cmp
add
sub
idivl
jmp
packuswb
pop
xchg
sbb
xor
xchg
fidivl
cmp
mov
or
xor
add
aam
loope
sbb
cli
push
mov
clts
mov
lret
push
aas
sbb
pop
int3
and
cmp
sti
jno
add
push
inc
and
sub
add
mov
add
jmp
insl
ret
inc
fisubl
mov
mov
mov
cld
mov
jmp
int
add
xchg
lock
jae
fdivrl
andb
jno
xchg
or
push
mov
xchg
loopne
add
das
mov
daa
pop
in
jne
add
stos
sbbb
and
iret
or
mov
add
pop
inc
clc
aam
add
inc
addr16
add
bsr
loope
movsb
mov
mov
dec
mov
sub
add
aad
mov
jbe
inc
sub
pop
sbb
jge
cmp
add
fcoml
or
fiadds
stos
ja
push
aam
lock
cmp
add
mov
pop
xchg
or
push
push
adc
push
pushf
popf
in
test
les
dec
add
scas
mov
add
pop
push
sbbl
push
push
pop
enter
inc
daa
mov
mov
inc
add
nop
aaa
pop
add
out
sar
out
daa
loop
fsub
into
rolb
jmp
inc
mull
push
adc
xchg
and
inc
ja
pop
loopne
inc
add
cmp
push
add
mov
mov
inc
add
pop
scas
popa
insl
fwait
pop
add
dec
movsb
mov
push
xor
lahf
cmpb
jecxz
sbb
add
add
lcall
cwtl
jp
sub
gs
in
icebp
nop
ds
mov
cs
and
sbb
add
xor
arpl
mov
jo
leave
mov
call
jp
inc
js
add
push
stos
cmp
pop
sub
sbb
pop
mov
pop
jnp
out
xor
nop
pop
popa
mov
inc
test
out
filds
and
pop
xchg
mov
mov
repz
addr16
inc
adc
aas
or
inc
pop
cmp
and
add
jne
pusha
push
icebp
shlb
xor
andb
add
mov
bound
sub
std
push
add
add
jo
pop
add
cmpl
add
jno
fistps
add
scas
mov
mov
mov
mov
cli
out
dec
ds
cmp
pop
out
sbb
jnp
lret
sarb
stos
xor
xor
lret
movsl
push
into
clc
add
sub
fwait
mov
jo
sbb
cmovl
sti
jg
loop
jb
cmp
movsb
pop
mov
mov
jmp
cmp
add
ds
mov
test
lock
pop
jb
jge
in
ja
arpl
pop
jle
icebp
jl
pop
jae
dec
mov
inc
inc
or
scas
dec
ret
subb
push
mov
sub
or
incb
adcl
mov
mov
sbb
add
add
mov
pusha
roll
adc
xchg
cld
or
rcrl
jns
incb
imul
mov
mov
pop
stos
mov
dec
lcall
add
pop
in
mov
lock
insb
adc
imul
arpl
xchg
xchg
mov
aaa
cli
inc
add
mov
cmpsl
and
add
testb
mov
mov
add
dec
mov
pop
dec
xor
out
add
test
stc
mov
fldcw
cmpsb
cmp
rorb
dec
and
push
sub
add
insb
pop
mov
sarl
mov
shl
loopne
mov
enter
mov
sbb
cwtl
inc
sub
push
pop
mov
pop
sub
shll
dec
pushf
iret
lods
js
add
fstps
in
xor
sahf
sarb
lds
fldcw
jbe
xchg
sub
repnz
ret
cs
out
mov
test
mov
xor
dec
pop
jl
sub
orb
xchg
fmuls
xchg
movmskps
push
and
sbb
mov
add
inc
or
jae
mov
push
jnp
lock
bound
add
or
dec
add
dec
pop
aam
in
inc
fsubr
adc
cmpsl
nop
jl
push
testl
pop
js
and
cmpsb
pop
xlat
jmp
ds
pushf
mov
adc
mov
xchg
add
test
out
out
push
mov
imul
arpl
mov
jne
inc
dec
inc
fwait
clc
jecxz
or
push
lods
ja
cmp
fnstcw
jmp
sbbb
mov
lock
test
xchg
adc
xor
adc
jnp
push
mov
mov
ds
add
dec
mov
imul
add
xor
add
fiaddl
sbbb
stc
ret
rcl
fmulp
add
inc
shlb
in
jp
cmp
sub
clc
adc
lahf
nop
clc
or
in
mov
into
iret
mov
lock
cmp
and
nop
push
jbe
data16
in
dec
jnp
dec
pop
sub
add
push
cmc
add
mov
add
jmp
adc
outsl
les
rolb
ss
rclb
add
or
in
add
out
or
sbb
push
dec
call
pop
cld
lock
pop
movl
out
scas
loopne
idivl
add
sbb
mov
sub
add
nop
jns
and
push
pop
add
addb
sti
cmp
jbe
inc
sbb
add
add
outsb
add
lahf
dec
popf
inc
ss
add
aam
sbb
repz
std
js
push
pop
aad
pop
pop
loop
fldt
push
mov
xor
sub
add
leave
movsb
and
or
addb
out
dec
pop
push
sub
cmpsl
imul
cld
fdivrp
mov
push
add
fst
push
push
aas
inc
and
jae
dec
adcb
adc
sbb
stos
popf
movsb
out
cmp
sub
out
or
jno
aaa
and
sti
dec
flds
pusha
and
sbb
rorl
clc
shl
mov
stc
xlat
loop
push
mov
rolb
lods
add
sahf
adc
sbb
and
jne
imul
jno
les
pop
cmp
fldl
pop
mov
mov
push
push
mov
dec
sbb
add
push
loopne
jae
les
mov
xchg
aas
iret
cld
dec
popa
xchg
jmp
les
stc
outsl
adc
rcl
lds
jle
pop
mov
push
and
aaa
nop
clc
es
sbb
xchg
rorb
add
and
jbe
add
cmp
adc
fsub
push
pop
add
mov
mov
sbb
push
cmp
sbb
mov
adc
pop
filds
jbe
shrb
add
pop
add
clc
sbb
mov
shrb
mov
ficoms
inc
xchg
cltd
js
mov
bound
add
adc
or
mov
aam
dec
add
lahf
cmp
enter
test
cmpl
aam
cmp
mov
mov
lea
pop
adc
nop
cwtl
push
mov
movsb
add
mov
jg
add
adc
jp
add
sbb
dec
or
dec
pop
jne
xchg
test
add
sbb
mov
lret
cmpsl
clc
push
add
mov
cli
cmpl
mov
pop
ss
es
sub
jae
dec
mov
add
insb
loopne
sbb
mov
jecxz
enter
pusha
cmpsl
cmp
sbb
je
mov
xor
xor
add
int
or
cwtl
or
adc
lcall
pop
inc
mov
sbb
in
sbb
sbb
inc
mull
aaa
dec
faddl
xchg
es
mov
bound
enter
shl
decb
in
iret
inc
inc
outsb
push
cmp
mov
call
jle
add
xor
sar
ss
into
pusha
cmp
jmp
cmp
int3
add
daa
mov
ds
cmp
pop
add
mov
clc
mov
daa
pop
testb
add
xchg
lcall
in
and
add
lret
mov
mov
fcoml
add
gs
dec
test
mov
jg
cmp
jno
mov
test
out
insb
dec
lcall
jmp
xchg
sbb
movl
gs
cmp
mov
cmp
add
or
nop
sub
or
loope
push
daa
sub
push
cmpsb
pop
inc
adc
out
fisubs
pop
das
ret
and
push
data16
repnz
inc
mov
push
xlat
cwtl
push
mov
int
or
addb
sub
dec
adc
sbb
repnz
push
notl
iret
out
add
scas
sbb
test
std
cmp
insl
mov
add
lock
cld
mov
shlb
xor
add
push
and
mov
jo
out
cmc
mov
xchg
push
mov
pusha
inc
fwait
addb
mov
idiv
ljmp
lret
mov
imul
sub
inc
les
fwait
add
pop
std
mov
add
jecxz
icebp
sub
rolb
add
mov
mov
inc
rorl
lcall
std
int3
out
sti
sub
sub
insb
lods
push
test
jbe
sub
add
cmpsl
mov
mov
cmp
add
adc
jl
inc
int
out
pusha
fnstenv
add
repz
lea
push
xor
cmp
and
sbb
aam
xor
shrb
add
int
jp
inc
loope
add
xlat
das
sub
test
addb
scas
pop
aam
dec
add
xchg
aaa
dec
das
out
and
add
cld
out
push
lods
outsb
repnz
xor
add
popa
jns
cmp
rcrb
scas
add
xchg
repnz
sbb
or
xor
add
enter
sbb
push
sub
lcall
js
xor
sbb
popf
ret
inc
rol
test
mov
cmp
outsb
and
js
jl
add
cld
fsubs
sub
pop
repz
dec
fcomip
add
xchg
adc
jae
mov
push
dec
mov
loopne
add
xchg
sbbb
out
xor
mov
test
cltd
outsl
pop
sbb
xor
add
jmp
loope
repnz
adc
dec
xchg
stos
cmc
add
flds
or
ficomps
loope
int3
addb
outsb
add
mov
je
out
mov
fistpll
addl
jb
loopne
mov
sbb
add
xor
fisttpll
add
movsb
pop
iret
add
ljmp
xor
fwait
add
leave
into
cmp
push
inc
add
rcrb
stos
push
cwtl
pop
adc
ja
inc
rclb
rolb
xor
hlt
jb
adc
xor
jns
loop
int3
cmp
sahf
xor
and
push
add
dec
push
jp
pop
inc
popf
sbbb
add
insl
das
adc
movsb
add
int3
adc
mov
punpckhwd
in
loop
leave
sub
inc
push
jo
aam
in
test
repnz
cmp
out
pop
lahf
and
lods
mov
scas
cmp
inc
xchg
push
push
xchg
leave
pop
or
cmp
pusha
jns
xchg
icebp
or
pop
inc
jecxz
repz
outsl
dec
add
sbb
add
in
push
mov
lock
mov
mov
add
push
lock
add
or
lock
mov
xor
loopne
pushf
rclb
add
aaa
gs
mov
xchg
loopne
arpl
pop
sub
add
call
sarb
in
pop
jbe
lock
sbb
push
addb
pop
push
mov
add
xchg
or
test
add
xchg
push
pop
mov
inc
mov
dec
mov
or
pusha
cmp
cmc
bound
add
iret
xor
pop
sbb
das
fadds
inc
add
sub
push
cmpsb
push
mov
jae
push
mov
xchg
in
push
enter
mov
cs
jb
push
test
mov
sub
lds
inc
popf
repnz
or
mov
shl
repz
pop
cltd
sbb
lss
add
lods
add
adc
push
jl
add
adc
mov
sbb
jmp
mov
ret
xor
and
inc
add
scas
adc
mov
andb
adc
cmc
incb
or
mov
xor
sbb
mov
test
add
push
xchg
xchg
cmp
lods
push
add
xor
dec
sbb
andl
add
clc
test
lret
and
dec
rolb
arpl
test
inc
add
sbb
pusha
insb
add
sub
sbbb
rolb
inc
pop
push
mov
aam
jge
adc
and
sbb
dec
ret
in
nop
scas
outsl
pop
bound
fadds
dec
call
cld
push
je
sbb
rorl
add
test
cmp
add
int
add
pop
shlb
and
xchg
es
test
ret
lds
pop
cmpl
add
loopne
in
test
add
push
decb
lahf
test
andl
mov
stos
icebp
push
ja
adcl
cmpsl
xor
or
andb
or
adc
gs
sub
add
mov
sbb
add
mov
jmp
nop
push
add
jg
push
sbb
pop
out
inc
icebp
cmpb
mov
add
inc
cmpsl
cmp
insb
add
test
cmc
pop
add
jp
int3
inc
pop
cmp
roll
add
imul
add
inc
clc
jmp
mov
sbb
hlt
nop
add
cmp
aad
push
repz
pop
les
mov
fldenv
sbb
xchg
std
cmp
push
fisttps
pop
push
add
dec
rolb
data16
clc
add
push
fiadds
rcll
leave
sets
adc
lods
clc
push
cli
mov
cmpsb
bswap
sub
xorb
inc
add
push
repnz
sahf
ds
xor
out
or
push
xchg
out
inc
outsl
lcall
dec
sbb
loopne
rcll
add
sub
add
cld
leave
sub
lcall
add
movsb
loopne
add
out
rol
repz
add
sbb
add
cmpsb
xor
push
pop
add
out
xchg
adc
push
xchg
add
xchg
inc
pop
fwait
pop
aas
int3
cwtl
es
jbe
mov
or
mov
add
ret
dec
ja
add
dec
loop
rcll
std
mov
sub
sub
add
pushf
outsl
add
jo
push
call
push
iret
jle
dec
out
arpl
push
or
cmp
xchg
jle
int3
jecxz
loop
mov
fdivr
adc
mov
inc
mov
test
js
cmp
es
add
mov
cmp
adc
inc
das
and
cmp
cmp
push
add
fs
add
mov
add
sti
lods
fcoml
adc
mov
pop
add
ss
sub
lea
add
das
and
xor
inc
jo
std
cmp
add
and
imul
insb
add
popa
jge
bound
sbb
dec
cltd
lret
pop
push
call
xchg
or
std
pop
faddl
mov
pusha
inc
xor
mov
add
adc
enter
fsubs
add
addr16
dec
test
or
mov
mov
aad
xor
adc
xchg
inc
jb
iret
das
fwait
mov
mov
xchg
dec
sbb
lods
pop
fadds
adc
add
push
jmp
hlt
add
and
pop
inc
sbb
add
ret
in
pop
add
push
adc
push
mov
sbb
addr16
js
lock
xchg
inc
data16
add
aad
mov
add
popf
test
mov
jnp
sub
mov
add
xchg
jmp
or
scas
data16
popf
add
sti
lret
add
or
mov
movsl
push
xor
shrl
pop
add
mov
rorb
pop
dec
mov
jnp
xor
scas
and
jne
rcr
inc
lods
mov
les
add
rolb
jl
pop
scas
cli
xor
fnop
inc
aad
jg
adc
cmp
lret
jno
add
out
mov
lret
pop
pop
enter
mov
aad
add
cmp
push
jmp
pop
rcrb
add
dec
add
mov
jcxz
ds
faddl
lods
loope
adc
lock
pop
add
add
jl
inc
mov
push
in
adc
inc
pop
and
fwait
addr16
ret
rcr
jg
or
ja
in
pop
add
mov
and
sub
add
xchg
pop
dec
or
popf
hlt
cmpsl
or
nop
cwtl
add
stos
test
xchg
dec
inc
inc
mov
in
nop
rclb
imulb
loope
lock
ss
data16
sbb
adc
lret
test
test
mov
hlt
add
sub
cld
popf
add
jo
push
jge
jns
je
add
repz
dec
mov
in
cmc
cld
roll
mov
adc
jmp
inc
pushl
adc
shlb
ret
imul
or
add
mov
mov
fxch
out
mov
push
add
pop
push
xchg
or
pop
rcl
lds
xor
cmpb
mov
xlat
add
call
mov
sar
das
inc
or
loope
rorb
add
lret
sub
add
push
xchg
dec
mov
xor
mov
add
in
mov
dec
xorb
inc
fcmovnbe
mov
add
lcall
push
inc
xchg
xor
sub
adc
pop
adc
psrad
ds
mov
mov
scas
add
add
imul
adc
mov
rorb
push
push
out
out
dec
ds
add
jl
mov
or
rclb
xorl
scas
and
add
xor
dec
sbb
jae
xchg
jmp
cwtl
outsl
add
xchg
push
lret
jbe
cmpl
mov
cmpsb
inc
mov
dec
and
mov
dec
movsb
add
mov
lods
add
jge
fcmovnb
or
rcrl
popa
add
or
dec
add
subb
add
imul
mov
cmpsb
lds
mov
jg
pop
xchg
addb
add
inc
test
or
mov
add
mov
cmp
loopne
pushf
sub
fs
add
cli
adc
scas
popa
add
add
push
add
xchg
sub
insl
aaa
lret
stos
lss
pushf
mov
add
popf
loopne
inc
dec
cs
lds
sbbl
inc
ljmp
jg
and
test
cli
mov
xchg
lea
scas
and
pop
cmp
xor
push
loopne
jae
add
stos
mov
pop
push
out
dec
add
add
or
aas
adc
aam
and
add
clc
idivl
xchg
jmp
mov
enter
or
add
lods
ficompl
orl
pinsrw
lods
jno
dec
test
add
jmp
sahf
push
add
adc
add
xor
lahf
push
pushf
adc
sbb
inc
or
add
xchg
dec
sub
jne
add
test
adc
je
popf
clc
pop
xchg
mov
shr
inc
stos
mov
or
add
loop
mov
add
nop
add
mov
sub
or
popl
push
inc
lahf
gs
mov
inc
jae
das
cwtl
add
test
xchg
xchg
adc
inc
ja
popl
add
imul
or
test
aad
dec
pop
dec
xor
or
sbb
outsb
mov
cmp
jg
and
mov
addl
clc
fiadds
rorb
in
fnstcw
xchg
mov
or
xor
cwtl
push
cmp
cmp
movsb
sub
insl
nop
je
and
and
sbb
gs
movsb
pop
add
pop
popa
pop
aaa
xor
add
sbb
push
shrb
stos
sbb
jae
cmp
and
mov
sbb
add
sbb
or
pop
jb
jno
aaa
orl
test
add
mov
mov
push
pop
dec
cltd
mov
add
jge
or
mov
pop
lds
add
test
lcall
std
ret
cmc
cmp
jle
add
mov
iret
and
sub
push
add
test
dec
mov
test
lock
fsts
or
cwtl
int3
add
daa
jg
mov
lret
pop
or
inc
and
lcall
inc
add
jecxz
sbb
dec
mov
jo
dec
mov
add
fwait
mov
outsl
adc
aas
repnz
mov
ja
and
popf
or
add
pop
pusha
jns
xor
xor
int3
or
add
ret
rcrb
dec
pop
sub
inc
pushf
add
bound
push
daa
in
dec
add
lcall
ljmp
sub
loope
int3
mov
add
push
insb
or
repz
icebp
inc
movsb
hlt
xor
mov
xor
leave
outsb
in
push
out
mov
jo
cli
cmp
jle
pop
inc
sub
push
ja
xor
aad
mov
xor
faddl
push
add
andb
faddp
pop
test
add
jle
outsb
out
add
add
sbb
cmpb
and
out
movsb
out
loopne
pop
add
lret
cmpsl
popf
outsb
adc
jp
mov
test
aam
xchg
dec
mov
sbb
pop
pop
mov
enter
data16
pusha
jge
xchg
mov
add
cmpsb
clc
fldcw
add
ja
add
data16
mov
jg
add
push
xlat
mov
clc
or
push
ja
inc
je
pop
pusha
adc
add
ret
add
jb
sub
shlb
sub
popa
iret
inc
dec
dec
lock
adc
add
pusha
cltd
test
test
call
aas
les
mov
xor
popa
mov
stc
jle
lret
imul
rolb
pop
inc
or
mov
jbe
mov
addb
pop
pop
add
popf
mov
outsb
outsl
adc
arpl
xchg
mov
xchg
adc
xor
jnp
pushf
inc
shll
mov
jno
das
ret
add
sbb
mov
sbb
adc
sub
xor
iret
cs
mov
in
loopne
cmc
or
adc
xchg
mov
push
push
sbb
xor
push
ret
mov
jp
sahf
add
fwait
inc
dec
add
loop
mov
cmp
add
std
mov
in
dec
cmp
jne
scas
mov
push
mov
cwtl
insb
xor
aad
std
out
adc
cmc
js
hlt
mov
enter
dec
pop
lret
ficoml
or
pushl
repnz
push
dec
jae
les
lret
push
mov
add
xchg
lock
les
jae
sbb
adcl
pop
je
hlt
pop
int3
and
inc
divl
out
in
push
xor
sbb
testl
cmpsb
sub
adc
xor
ret
mov
sbb
mov
jo
xchg
scas
ds
adcb
lcall
ss
xor
test
icebp
or
addr16
lock
test
jno
rolb
movsl
int3
mov
jl
cmp
mov
dec
mov
in
lods
or
scas
jae
mov
imul
xchg
iret
pusha
add
dec
mov
mov
sbb
dec
fucomp
mov
jae
push
sahf
pop
push
les
add
ret
pushf
hlt
sbb
xchg
ja
cmp
mov
pop
out
cmp
mov
insb
push
pusha
out
ja
add
and
or
sahf
scas
pushf
xchg
add
push
lcall
out
pavgb
sub
jo
jg
cmp
add
pop
jp
les
push
dec
inc
xchg
je
int
dec
xchg
and
inc
mov
add
addl
insb
push
mov
pand
mov
outsb
jmp
test
pop
add
and
jp
pop
jnp
inc
and
mov
lods
bound
sbb
inc
add
test
xchg
shrl
cmp
mov
mov
add
inc
dec
nop
mov
ljmp
sub
cs
bound
orb
lds
sbb
int3
jl
add
xchg
adc
push
jp
cmp
testb
jg
out
mov
inc
sub
jno
popf
add
ficoms
ljmp
dec
jmp
enter
cmp
mov
in
movsb
mov
pop
out
mov
clc
add
dec
add
jmp
outsb
jmp
insb
add
icebp
jecxz
into
mov
mov
loopne
cltd
js
and
into
mov
adc
add
outsl
xchg
add
shrl
sbb
int
mov
mov
mov
push
repz
les
pop
lods
cmp
inc
adc
push
xchg
aad
push
test
sar
dec
xor
add
add
sbbl
aad
pop
mov
adc
mov
inc
inc
insl
test
das
xchg
cmpsb
sbb
loope
xor
addb
dec
cwtl
cmp
out
sbb
ja
jns
add
fs
xor
rolb
aad
sub
mov
andl
popl
jge
inc
or
imul
adc
outsb
das
pop
inc
addr16
add
and
sub
pop
add
push
ds
sbb
pop
dec
push
pop
xor
xor
mov
dec
dec
push
add
pop
dec
pop
es
js
sbb
lea
inc
clc
inc
add
cli
xchg
imul
mov
psrlq
js
add
cltd
andl
test
test
mov
cwtl
aaa
push
add
loop
mov
enter
cli
ss
popf
adc
clc
orb
mov
bound
out
inc
and
add
aaa
in
pop
xor
mov
ss
aam
lret
inc
cmp
and
lods
lahf
jp
xchg
jp
add
cmp
add
push
pusha
imul
data16
test
sub
add
jne
jl
das
lea
seto
lods
sbb
mov
adc
or
adc
pop
push
jp
xor
lret
imul
add
mov
hlt
and
mov
ds
dec
add
sub
mov
jle,pt
imul
cmp
jnp
dec
fmul
and
shll
pop
xchg
andb
pop
add
dec
lds
mov
mov
dec
mov
shll
mov
jb
xor
xor
call
in
test
dec
leave
jg
dec
aas
add
or
jns
cld
add
test
add
mov
mov
add
insb
pop
push
push
xchg
or
or
ret
inc
popw
pop
sbb
inc
insb
sbbb
add
frstor
fwait
add
stc
insb
lock
in
ret
cwtl
add
xor
ret
mov
sub
mov
jb
xchg
or
adcb
movsl
and
scas
ss
pop
add
enter
insb
fsts
std
mov
adc
cmp
popf
mov
arpl
loope
inc
cmc
add
lahf
mov
add
fdiv
cwtl
rcrl
mov
pop
incl
add
sub
orl
gs
clc
sub
pop
sbb
cltd
xchg
popf
fadds
lods
cmp
add
sbb
or
clc
lods
popa
js
add
insb
shll
jne
add
dec
std
xlat
lock
mov
mov
adc
mov
add
jbe
mov
hlt
setg
ja
push
add
aam
jmp
add
sti
fnstsw
test
push
add
or
icebp
iret
lahf
push
imul
xchg
xor
out
sub
xchg
inc
cwtl
iret
add
clc
cmpsb
mov
ja
pop
push
xor
cmp
xchg
sub
in
ret
add
dec
add
cmp
add
mov
pop
je
hlt
add
stos
insl
addr16
or
out
es
sarb
add
sub
es
push
add
and
dec
mov
loope
xchg
adc
mov
add
mov
mov
cli
aas
dec
sbb
insb
test
stos
xor
inc
or
jae
jle
jne
sbb
or
inc
add
jb
and
mov
add
pop
cmp
out
dec
cmp
sub
repz
loop
fists
push
inc
icebp
adc
add
wbinvd
fidivrl
pop
fldl
lds
loop
xor
cmp
sub
lods
sub
repnz
jns
in
stc
add
daa
push
insl
enter
sbb
sub
xor
add
movsb
ljmp
push
mov
add
mov
test
dec
lock
clc
int3
sbb
ret
into
sbb
xor
out
mov
lock
popf
mov
pop
inc
adc
push
pop
mov
xchg
jnp
jns
add
ja
adc
enter
sbb
add
movsb
sub
cltd
stos
sbb
inc
gs
mov
insb
pop
cwtl
or
cmp
push
popa
nop
add
iret
frstor
pusha
aam
rdpmc
and
iret
test
add
sbb
hlt
call
sub
add
jo
adc
imul
lea
dec
loopne
sub
sbb
call
insb
nop
xor
ss
sbb
mov
mov
sarb
jmp
ror
mov
cld
cltd
jnp
leave
and
ficomps
xor
add
jo
int
insb
add
fsubl
cmp
sub
pop
lcall
xchg
inc
aaa
imul
mov
mov
sbb
inc
popl
dec
push
push
adc
jg
xchg
mov
add
mov
add
popa
hlt
sbb
xchg
ret
sbb
repz
jbe
add
dec
push
xor
daa
push
std
mov
sbb
rolb
add
mov
and
fidivrs
cld
or
mov
add
adc
push
pop
or
sbb
inc
popa
cmpl
xlat
punpckhbw
rcll
jecxz
and
xchg
add
push
cli
jne
xchg
add
test
lds
shlb
jno
cwtl
adc
adc
repz
jle
cli
jmp
sbb
jl
add
es
inc
loopne
pop
repnz
add
fidivrs
add
cmpsl
jp
pop
mov
push
iret
arpl
mov
fstl
stc
pop
arpl
sti
xchg
aad
std
xor
jl
push
xor
in
pusha
jle
shlb
lret
lods
pop
in
push
mov
pop
inc
mov
lods
sbb
xchg
nop
stc
repnz
les
and
outsb
cmp
pusha
in
add
movsb
inc
ret
out
cmpsb
jmp
xor
out
xchg
popf
mov
and
popa
lock
outsl
shlb
add
or
mov
xchg
pop
movsb
cmp
rcrl
xchg
loopne
leave
jl
cvtps2pd
insb
mov
pop
js
aaa
je
jmp
mov
cwtl
lea
inc
add
adc
xchg
testb
lods
loop
mov
stc
add
jmp
cmp
sbb
xor
enter
or
push
cvtpi2ps
pushf
je
fsts
nop
xor
test
jno
sarb
pop
jl
ret
lods
add
je
adc
mulps
dec
jno
cmpsb
pop
sahf
adc
sbb
fdivrp
out
test
jns
or
mov
add
xor
add
mull
loope
mov
arpl
roll
addr16
inc
add
xchg
jp
mov
int3
inc
add
mov
scas
add
out
fcoms
es
pop
and
mov
rorb
cmp
add
negb
and
push
lods
mov
repnz
push
cmp
insb
add
cmpl
sub
add
sbb
in
pusha
pusha
or
add
add
mov
add
jmp
add
loopne
sub
aas
push
xor
xchg
mov
push
mov
sub
rorl
inc
add
fs
push
jp
in
mov
cmc
fmuls
loopne
popf
inc
cmpb
add
jmp
push
cmp
sbb
push
shll
sahf
jle
rcll
or
loop
mov
dec
mov
or
add
icebp
outsb
mov
flds
shr
pop
dec
jl
mov
mov
dec
add
pushf
dec
and
mov
jmp
dec
lods
inc
mov
fimuls
data16
shl
ds
in
pop
add
out
leave
aad
ds
pusha
push
ja
mov
add
add
aaa
rcr
addb
dec
add
ficomps
cmp
and
inc
lret
icebp
int3
dec
pop
cwtl
aam
lcall
xor
popf
xchg
jge
jo
inc
inc
sbb
cmp
xor
add
das
push
pop
add
mov
popa
fistps
shrb
aad
mov
adc
fsts
punpcklbw
cmp
movlps
cmp
insl
push
ja
sub
xchg
adc
out
sub
mov
clc
adc
faddl
insl
call
icebp
sarb
std
int
add
push
iret
pop
push
push
push
jge
popf
add
mov
push
and
sub
shrb
add
iret
and
fcmove
cli
aam
hlt
cld
add
popa
loopne
add
push
aad
add
xchg
dec
and
lahf
jns
sbb
pushf
in
nop
lret
pop
and
jl
xor
jo
out
shll
rolb
add
inc
into
inc
add
nop
mov
aad
sub
sub
loope
add
ja
pop
dec
loop
pop
xor
sbb
cmp
fldl
je
jae
cltd
inc
push
or
push
or
movsl
sbb
shll
jg
add
ret
jno
pop
or
sbb
scas
hlt
arpl
add
mov
test
push
dec
clc
aam
adc
xor
and
add
iret
pop
xchg
ljmp
xchg
push
cmp
jo
add
mov
mov
in
mov
xlat
mov
pusha
ret
cmpl
sbb
cld
add
or
iret
jmp
add
lret
add
mov
add
mov
push
lock
repnz
dec
daa
push
pop
adc
xor
xor
movsb
mov
cmpl
mov
ret
jns
or
jo
mov
pusha
push
push
nop
ljmp
xor
jno
cmpsl
sbb
loop
rclb
sbb
xor
pushl
jle
inc
add
adc
inc
shl
pop
xor
cmpb
pop
inc
xchg
or
jl
push
pop
cmp
xor
jne
add
mov
inc
push
nop
add
and
mov
add
jno
pop
adc
cmp
scas
xlat
and
lock
das
add
jb
es
ret
add
sub
popf
data16
repnz
add
push
adc
add
or
push
cld
leave
jg
add
std
push
test
dec
fimull
cmp
in
push
pusha
pop
and
add
add
dec
and
sbb
xchg
test
call
mov
or
in
sub
and
inc
jecxz
repnz
lret
outsb
je
jl
add
mov
inc
add
add
out
outsl
add
rorb
aas
lahf
jae
and
or
mov
stos
push
out
scas
add
stc
fdiv
or
and
nop
or
jmp
les
jge
add
add
sub
sbb
or
xor
lods
clc
cwtl
addr16
push
adc
add
fwait
test
jg
cmpsl
stos
bound
mov
add
jne
lret
cmpsb
and
enter
and
outsb
mov
mov
jae
ficomps
push
mov
adc
pop
movsl
xor
xchg
andl
jecxz
pop
inc
jg
pop
popa
cmpsb
add
dec
inc
movsb
arpl
lea
mov
out
fidivrs
mov
sahf
in
out
mov
push
pop
rcrb
insl
adc
xchg
dec
push
dec
and
flds
lahf
xchg
out
inc
sub
cmp
lock
lods
lcall
iret
dec
je
in
adc
dec
mov
rolb
pop
sbb
xor
ret
add
adcb
mov
sbbl
test
pusha
sahf
xor
xor
mov
mov
mov
pop
push
in
rorb
sarl
dec
and
mov
add
mov
add
nop
dec
push
mov
mov
jb
adc
ficomps
and
add
sar
out
add
fxch
jle
adcb
inc
add
mov
test
pop
jne
scas
push
rcrb
repnz
add
das
mov
add
sbb
out
mov
sbb
pop
cli
in
mov
mov
mov
cmp
call
sub
jle
mov
iret
adcb
push
or
add
rcrl
sbb
sub
jp
xorl
filds
fisttpll
mov
jbe
pop
icebp
add
out
adc
add
sub
xor
test
cmpsb
sub
orl
enter
ret
adc
lods
out
xchg
stos
inc
inc
pop
cmc
sahf
sub
fwait
cld
add
movsb
mov
mov
lods
roll
jnp,pn
add
movsl
fmuls
scas
js
add
imul
clc
hlt
push
jno
testl
loopne
pop
dec
pop
jg
adc
add
arpl
dec
mov
nop
movl
fsubrl
xchg
ret
mov
or
imul
cli
cmp
insb
or
cmp
jne
add
adc
add
inc
add
cmc
push
dec
jnp
mov
sbb
adc
xor
je
add
fldt
test
sbb
mov
add
fnstenv
jns
mov
or
jno
mov
sub
sbbl
test
popa
ret
mov
add
movswl
mov
cwtl
nop
and
les
leave
rorb
add
nop
jns
flds
and
pop
loope
xor
cmpps
mov
adc
mov
ror
adc
sub
repz
or
xchg
jge
mov
lods
pop
or
mov
xorb
jbe
adc
cmp
outsl
ret
incl
mov
das
aam
add
imul
pop
cmp
popa
xchg
cmp
push
push
jp
test
rorl
sbb
or
mov
nop
stos
xor
and
mov
out
push
xor
inc
jo
inc
sub
test
inc
fwait
ja
and
xor
leave
inc
sub
cltd
cmpb
inc
mov
push
call
add
xchg
hlt
sub
mov
add
dec
dec
add
shl
data16
jp
outsb
mov
cmp
mov
jbe
push
rcr
pop
jl
push
into
and
movsl
bsf
mov
cwtl
in
sub
jp
add
clc
push
mov
fidivrs
jnp
mov
hlt
outsl
test
adcb
pusha
test
pop
cmp
movsl
dec
icebp
int
push
cld
mov
daa
fadds
dec
mov
cmp
add
fisubrl
fwait
hlt
popf
js
add
int3
imul
xchg
and
sbb
jae
mov
scas
jo
pop
xor
fiadds
jp
nop
in
inc
int3
add
outsb
pop
mov
addl
add
mov
xor
gs
push
dec
scas
or
jmp
inc
sbb
add
call
sahf
add
sbb
and
sub
sbb
js
mov
add
arpl
dec
cld
lcall
pushf
xor
mov
pop
loope
ds
fwait
add
jae
pop
xor
xchg
pop
outsl
popl
out
popf
inc
insb
lret
nop
or
jnp
and
enter
sub
aas
out
add
or
or
add
push
insl
xchg
ret
add
fabs
mov
mov
mov
add
fsub
sti
jnp
mov
cmp
incl
mulb
ret
in
adc
add
movsl
ds
xor
push
ja
add
add
or
stos
mov
rorl
lahf
clc
jmp
jl
adc
arpl
inc
lods
jge
push
sub
str
sbb
mov
push
jmp
push
add
jg
decb
and
call
int
lods
pusha
adc
pop
add
jne
arpl
xchg
jae
or
int3
xlat
sub
sbb
add
push
pop
nop
cmpsb
adc
cmp
movsl
repnz
addb
int
mov
and
push
cltd
stos
into
out
cmp
sbb
dec
jo
dec
add
cmp
in
xchg
xor
es
mov
cld
jmp
add
subl
jl
outsb
jnp
mov
xor
fwait
imul
call
mov
mov
fs
add
add
cwtl
cmp
shrb
add
mov
xchg
mov
cmpsl
dec
sbb
imull
mov
call
inc
xlat
and
fldcw
std
add
pop
add
sub
mov
mov
sbb
mov
dec
stc
add
gs
cmp
sbbb
add
ds
cmp
pop
repnz
or
cmp
inc
pop
repz
jge
inc
mov
fcomps
add
sbb
pop
pop
add
jmp
dec
dec
push
mov
cmc
les
popa
xor
testb
repnz
enter
mov
out
or
sti
jecxz
movsb
push
or
rol
add
repnz
cmp
dec
mov
cltd
mov
js
adc
int3
push
data16
jae
mov
test
enter
add
and
jb
pop
in
xor
pop
outsl
lret
aad
negb
js
aam
lods
add
sti
adc
cld
add
mov
fidivs
in
jne
add
adc
rcr
movsb
adc
or
dec
das
addb
cmpb
test
adc
cmp
fwait
stos
dec
pop
cmc
out
add
cmp
dec
fadd
pop
loopne
cmp
or
sub
push
mov
jo
sub
das
lcall
nop
dec
or
mov
add
xorb
lret
adc
mov
or
cltd
sbb
or
stc
ljmp
out
mov
cmc
sbb
xchg
mov
push
push
add
ret
cmp
movsl
pushf
xor
mov
cli
xlat
add
sub
mov
hlt
ret
mov
stos
add
pushf
arpl
cmp
jno
out
dec
nop
sarl
dec
xor
push
mov
inc
dec
push
test
insl
cmpb
shll
sub
int3
add
repz
int
in
mov
jg
stos
xchg
add
cld
mov
adc
imul
mov
mov
clc
cmp
sbb
xor
and
dec
hlt
aaa
dec
shlb
mov
sarb
call
leave
fistps
mov
sbb
add
sub
out
repnz
sahf
add
inc
mov
test
push
mov
ret
aas
aam
inc
int
movsb
inc
idivl
jnp
popf
xor
and
sub
shrl
jnp
or
sbb
inc
imul
scas
push
test
inc
into
jbe
and
push
inc
xchg
cmp
lock
cmp
sbb
inc
pop
sahf
inc
pop
cmp
aas
or
dec
arpl
call
mov
sbb
dec
add
pop
sbb
add
cmp
mov
popf
nop
ret
test
cs
mov
jle
fstps
cmp
fstpt
ret
lahf
dec
mov
pop
icebp
mov
mov
dec
jl
inc
push
loop
push
fildll
pop
int3
popf
and
mov
cmp
and
jmp
jne
push
inc
jp
fsubrs
pop
and
or
or
adc
sbb
cmp
push
fnstenv
not
arpl
popa
cltd
push
sub
js
ret
add
test
insb
jnp
add
cmpsl
rorl
mov
fbld
aaa
jno
lock
inc
mov
xchg
sbb
mov
add
pop
aas
mov
lock
xor
sub
test
nop
add
lods
inc
out
add
sbb
cltd
sub
or
popa
mov
outsb
and
stos
add
test
pop
mov
adc
mov
int
adc
adc
enter
outsl
mov
cmp
and
adc
jmp
jnp
addr16
lret
rcll
push
mov
dec
faddl
inc
loopne
push
dec
pusha
or
popa
arpl
js
in
push
jbe
mov
shl
mov
aam
add
daa
or
cmp
jbe
and
dec
or
jp
lock
js
popa
xorl
je
inc
push
inc
push
xor
sbb
dec
sub
inc
push
pop
daa
mov
cmp
xchg
iret
cld
fadds
in
filds
sub
aaa
int3
mov
add
push
cmc
push
mov
add
xchg
data16
dec
xchg
sbb
or
iret
xor
movl
push
mov
rcpps
hlt
add
mov
jge
pop
jmp
fsubp
inc
lods
dec
mov
arpl
add
xchg
imul
test
pop
push
xchg
test
ret
add
pop
xor
icebp
and
mov
lahf
cwtl
ljmp
enter
mov
mov
inc
xchg
jge
gs
stos
mov
int3
xchg
mov
and
adc
push
sbb
and
sub
jbe
clc
xchg
lret
sbb
enter
rcll
cli
cmpsb
lcall
xlat
sbb
push
rcrb
pop
jae
dec
shl
call
js
lcall
int3
lahf
mov
mov
sbb
sub
inc
movsl
push
xchg
push
scas
mov
push
jl
sbb
mov
std
add
nop
dec
lahf
add
or
xchg
dec
push
imul
or
push
add
test
push
cld
aam
sbb
mov
out
cs
push
sbb
out
fdivrl
sub
or
setl
lods
shlb
fbld
add
nop
call
or
repnz
ret
loopne
inc
stos
out
outsb
les
test
push
jo
lahf
rorb
and
inc
add
push
sbb
adc
dec
mov
int
outsb
xchg
cmp
pop
les
imul
es
add
out
ss
aam
mov
test
adc
lods
mov
rolb
sbb
add
mov
pop
cmp
or
icebp
adc
sahf
rorl
dec
cmp
lock
pusha
add
jb
fwait
dec
cmp
jnp
adc
add
push
rcr
popf
cmp
push
fidivl
sub
push
fdivl
push
sub
dec
incb
test
lcall
push
adc
rolb
sbb
pop
xchg
add
in
add
es
add
lahf
sub
xor
jnp
add
enter
dec
push
sub
inc
rcl
sbb
repnz
scas
faddl
mov
pop
xor
sti
lds
push
outsb
cmp
mov
or
sub
popa
add
nop
test
std
inc
int3
fwait
dec
mov
adcb
or
cmp
nop
mov
xchg
js
fs
dec
faddl
mov
mov
rclb
add
or
ds
inc
add
stos
xor
fs
insb
nop
in
rcrb
xor
mov
xchg
cmp
out
add
mov
fldl
arpl
add
scas
imul
icebp
cmp
xor
and
inc
mov
cs
clc
aad
jle
push
in
pop
mov
push
testl
adc
adc
fdivs
or
out
push
inc
mov
add
test
and
shl
pop
mov
add
jb
icebp
push
cmp
movsb
pop
jae
orb
mov
mov
and
mov
xchg
pushf
addl
iret
out
push
and
lods
fisubrs
sbb
xor
pusha
ljmp
out
and
in
mov
aam
mov
adc
xchg
xor
test
out
sub
not
repz
inc
sarb
mov
rclb
or
inc
lock
je
js
nop
add
aaa
xor
mov
mov
mov
jmp
add
xlat
je
add
pusha
cli
lock
dec
not
sar
dec
sbb
andl
push
add
lea
mov
push
xor
leave
icebp
test
pop
test
stos
inc
mov
pop
pop
mov
scas
mov
sbb
filds
cmpb
add
add
add
shlb
fs
pop
sarl
add
jecxz
test
add
or
sbb
push
and
iret
or
lds
mov
add
scas
jl
adc
or
ljmp
and
addl
repnz
rcrb
xchg
aas
repnz
mov
xchg
int3
je
mov
jne
inc
nop
mov
push
rorb
pop
fidivl
es
int3
and
popa
mov
shl
call
inc
or
inc
test
cltd
inc
adc
add
sub
aaa
xchg
push
or
xchg
push
mov
jecxz
fcmovnb
and
mov
and
push
jns
adc
mov
dec
pop
jbe
push
daa
sar
add
sahf
loop
stos
bound
or
lods
pop
rorb
push
scas
mov
in
jo
clc
rclb
inc
ret
popa
dec
and
ret
xchg
adc
xchg
sti
push
add
cmp
test
lods
cmpl
mov
push
sub
lret
add
push
fldl
pop
dec
in
inc
sbb
js
rclb
cmp
sub
aad
imul
mov
lret
dec
fmul
ds
enter
dec
xchg
mov
int3
sub
push
inc
and
and
popf
decl
insl
sub
pop
cwtl
push
push
add
dec
shrb
pusha
add
scas
add
pop
jne
jb
add
mov
mov
cmp
jg
stos
jb
xchg
mov
jnp
mov
aad
push
daa
jmp
pop
fdivs
cmp
xchg
jmp
aam
cmp
les
pop
pop
add
xor
int
movsb
mov
push
mov
ljmp
loop
aad
and
dec
and
or
push
mov
mov
push
ja
sub
sbb
es
mov
fidivrl
int3
add
repz
adc
mov
fsubrl
push
pushf
repnz
shrb
sbb
cwtl
call
or
dec
push
cmp
cltd
add
movl
lock
ret
add
movsb
stos
int
and
jo
nop
dec
push
sub
popl
adcb
adc
mov
shlb
inc
mov
pop
jge
pop
inc
mov
das
add
outsl
int3
pusha
ljmp
popa
dec
pop
push
xchg
sbb
rcrb
and
jl
adc
or
mov
pusha
pop
out
std
add
push
and
fstps
add
je
idivl
jge
imulb
or
icebp
add
inc
or
stos
mov
imul
jo
fstpt
xchg
inc
inc
xor
hlt
add
inc
test
lock
sub
fs
push
add
xor
gs
leave
dec
and
imul
add
mov
add
or
sub
cmp
sub
loop
loopne
mov
daa
sbb
inc
inc
je
add
loope
add
pop
dec
or
jge
push
lods
repz
jecxz
or
mov
add
sub
dec
push
jge
mov
test
dec
repz
xchg
scas
cmpb
mov
xchg
pusha
cli
jns
or
or
sbb
or
clc
rorl
and
mov
jmp
loop
in
and
mov
adc
ror
sub
cmp
jb
mov
mov
cltd
add
jmp
push
push
pop
push
roll
sbb
or
push
jecxz
addb
adc
outsl
stos
cmc
lret
add
stos
xor
sbb
adc
mov
push
cmp
test
and
clc
sub
pop
add
and
repz
sub
rorl
and
shr
loop
add
int3
sbb
pop
pop
mov
ror
test
mov
dec
pop
imul
sar
xor
add
cmp
adc
jge
lods
imul
dec
clc
and
sbb
sarl
mov
mov
jb
insb
sbb
sub
mov
and
cltd
add
ret
mov
popl
adc
fstpl
inc
subb
xor
punpckhdq
test
stos
jns
or
enter
sar
xor
je
cwtl
repz
add
mov
cwtl
ret
les
fiadds
cmp
fcmovbe
mov
xor
popa
add
in
adc
pop
mov
cwtl
or
mov
hlt
and
push
jl
aaa
xor
and
pop
dec
mov
adc
or
sbb
hlt
sub
sbb
add
add
cmc
push
popf
xor
push
mov
cmp
sbb
mov
push
mov
cwtl
testl
or
imul
notl
sub
mov
popa
ljmp
or
mov
pop
push
int3
push
mov
mov
cltd
add
insl
fs
in
dec
cwtl
add
movsl
stc
add
dec
fdivp
add
cwtl
mov
push
in
push
inc
scas
add
mov
mov
fsubl
fadds
inc
int3
adc
pop
jno
fsubl
mov
mov
movsb
xchg
and
lret
add
mov
test
lock
push
sbb
xor
inc
pop
pop
icebp
mov
mov
pusha
jmp
or
scas
or
jecxz
mov
push
mov
inc
add
test
xorb
add
fisttps
hlt
sbb
pop
add
cwtl
nop
lcall
dec
inc
or
dec
sbb
push
mov
movsb
movsb
jg
and
iret
mov
xor
fdivp
dec
add
and
gs
jle
hlt
or
xchg
or
cltd
in
mov
test
jae
or
xor
adc
inc
stc
mov
lock
sbb
cmpsb
add
jmp
pop
cmpsb
mov
pshufw
fs
cwtl
into
adc
data16
mov
ljmp
inc
les
mov
outsb
mov
inc
movsb
add
push
cs
adc
out
test
cltd
cltd
sub
sbb
nop
stos
mov
sbb
jg
sub
jp
loope
in
xor
mov
and
and
ljmp
das
xchg
lret
inc
test
cltd
or
out
push
test
or
pop
jmp
mov
shrb
mov
mov
out
lcall
mov
cmovs
fcoml
add
add
mov
push
dec
scas
aas
add
repz
sahf
loop
in
sub
sbb
xchg
arpl
aad
dec
mov
pop
and
loopne
mov
addb
mov
int
popf
mov
mov
sbb
in
nop
popa
cmpsb
movsb
add
push
dec
fists
and
add
scas
jle
jno
and
inc
push
in
pop
loopne
sub
dec
mov
movsb
add
xchg
push
rcr
adc
mov
or
pusha
ret
xchg
js
lret
xorb
cld
add
sarb
xchg
call
and
or
and
add
ja
repz
scas
mov
aam
ljmp
push
pop
pop
cmp
out
test
sbb
xor
or
in
lcall
xchg
stc
or
repz
adcb
sbb
imul
outsb
sbbl
mov
adc
rcrb
pop
jle
push
cmc
xor
movsl
jns
test
arpl
lock
cltd
adc
data16
mov
mov
add
inc
popa
jnp
add
loope
in
mov
cld
cmp
lods
mov
mov
subb
and
mov
clc
sub
push
cltd
test
cmp
fcompl
je
les
sbb
int3
rdtsc
inc
out
cmpsl
cltd
hlt
stos
jae
xchg
add
sbb
subb
mov
mov
sti
fs
add
xorl
inc
imul
js
pop
push
mov
fisttps
pop
leave
stc
aad
jle
pop
jg
mov
and
inc
xchg
cmpl
filds
das
subb
push
fsub
bound
icebp
sarb
push
xchg
mov
sahf
cmpsb
faddl
test
mov
mov
fildl
add
out
add
cli
cltd
or
adc
add
out
mov
les
in
andl
dec
loopne
or
pop
push
addb
mov
in
shlb
stos
insb
nop
inc
mov
push
mov
adc
or
int3
fwait
adc
pusha
dec
addb
arpl
pop
lret
add
test
incl
fmuls
mov
add
inc
jmp
or
xor
add
and
notl
cli
lahf
push
or
and
test
push
jg
out
roll
mov
cmp
cmp
mov
rol
jecxz
test
mov
bound
dec
xorb
stc
rol
jns
fucomi
add
adc
inc
cmpsb
arpl
or
or
fidivrl
fsubrs
mov
mov
cltd
mov
ljmp
or
stc
add
mov
add
sbb
add
xchg
popf
addr16
cmp
and
data16
jl
mov
xor
add
xor
add
mov
adc
int3
xor
loope
dec
ljmp
push
adcl
cmc
rorb
shrl
dec
adc
mov
jl
cmp
bound
inc
faddl
stos
xor
cmp
mov
inc
scas
jmp
int3
adc
into
dec
push
rcr
sbb
pop
fnstsw
aad
nop
push
mov
jnp
dec
xor
ds
and
add
jno
cli
sar
fsubs
sub
mov
arpl
in
mov
dec
dec
flds
push
sub
pop
dec
or
xchg
fdivrs
loope
pop
fwait
mov
jb
jo
ret
sub
pop
add
ret
jg
cs
or
inc
sub
push
xchg
scas
adc
mov
or
fadds
dec
nop
pop
mov
or
mov
sbb
pushf
in
and
or
or
pop
int
inc
xor
stos
sahf
aad
add
mov
xchg
mov
shll
fsubrs
outsl
mov
add
sbb
imul
fwait
mov
cmp
xor
outsb
add
stos
mov
pop
cwtl
mov
test
pop
mov
arpl
sbb
mov
mov
es
mov
subb
aam
aas
test
gs
stos
aad
ret
adc
adc
jge
and
sbb
cli
sub
push
bound
loop
je
mov
mov
mov
mov
gs
cmp
and
dec
cwtl
addb
xchg
pop
or
jno
inc
xor
test
leave
mov
mov
mov
dec
sbb
cld
sbb
cmpsl
xchg
imulb
mov
aas
in
add
cwtl
ss
push
adc
jmp
arpl
xchg
jg
nop
cli
pop
outsl
or
inc
scas
sbb
insb
cs
lods
in
rdtsc
dec
test
jle
mov
mov
cwtl
mov
sbb
and
mov
jo
insl
loopne
bound
jp
mov
loopne
fadds
cmpsb
push
pusha
je
mov
mov
cmpsl
stos
sbb
test
or
add
sbb
les
and
add
or
mov
xor
add
cmp
add
sub
lret
jo
push
cs
adc
les
fistpll
mov
or
and
pop
mov
fstpl
mov
mov
push
sbb
fdivr
add
sub
or
and
push
add
sub
or
dec
iret
and
mov
hlt
adc
clc
add
out
ljmp
xchg
pop
push
jp
aaa
add
mov
xchg
pop
push
add
inc
xorl
xchg
popa
mov
push
and
scas
pop
jno
leave
aas
add
test
shll
rolb
pop
push
jmp
insb
lahf
addb
adc
cmp
sbbb
lcall
jmp
jae
xchg
or
add
int
or
pop
sbbl
loope
call
out
xor
jp
jecxz
lods
jl
mov
inc
cwtl
mov
and
xchg
add
adc
lods
jnp
jl
add
loop
adc
add
mov
js
adc
int3
mov
adcb
out
adc
nop
jno
adcb
loope
cmpb
std
fldl
stos
dec
ret
and
in
xor
rclb
fcoml
out
adc
push
repz
clc
pusha
add
push
pop
cwtl
mov
stos
mov
nop
fnstcw
arpl
sub
xchg
add
cmp
pop
mov
fsubr
orl
add
inc
jp
adc
addl
out
inc
sub
xchg
mov
and
pop
mov
test
and
lds
and
dec
popa
mov
add
cmpsl
add
sbb
xor
out
cmp
repnz
jle
enter
mov
xchg
inc
rclb
lods
add
orl
mov
cmp
hlt
push
mov
or
or
inc
mov
aas
cld
push
movsb
add
cmp
add
loopne
add
mov
repz
pop
fmulp
pop
pop
add
xor
nop
add
mov
xchg
test
sub
orb
push
out
test
pop
jge
mov
jbe
das
fs
rolb
jmp
add
insb
fwait
jle
or
in
cmp
fimuls
hlt
push
sbb
repz
inc
mov
fs
pop
in
add
push
and
pusha
sub
add
jmp
pop
push
cmp
movb
call
fs
cmp
call
inc
fwait
lret
add
inc
ficompl
sbb
and
cmpsl
xchg
jb
push
enter
out
hlt
and
rolb
out
shl
adc
inc
lret
imul
fwait
std
mov
xchg
sub
xchg
adc
hlt
ljmp
xchg
pop
adc
push
xor
push
mov
inc
in
bound
movsb
fldcw
or
jle
xchg
add
mov
push
pop
add
nop
mov
fwait
adc
jmp
and
scas
and
out
pop
addl
push
rorl
push
and
add
sti
jns
push
test
adc
enter
and
push
mov
push
mov
pusha
push
lahf
fwait
xchg
sub
and
popf
icebp
or
jb
packssdw
cmp
mov
mov
and
int
aas
mov
enter
xchg
push
sub
or
insl
inc
or
cwtl
aas
xor
ja
pop
mov
and
adc
loopne
adc
dec
fidivrl
sti
mov
fsubs
and
movsb
jecxz
sbb
jbe
mov
or
out
andb
jb
in
and
jg
add
gs
push
test
add
lea
dec
xor
aas
add
dec
bound
mov
push
mov
imul
mov
sbb
mov
xor
mov
mov
aam
in
dec
and
fmulp
mov
mov
mov
or
xchg
and
cwtl
or
repz
enter
hlt
adc
sub
xor
cmp
scas
dec
les
mov
repnz
out
cmp
xchg
fs
and
call
notb
pushf
in
mov
pop
loopne
lods
sti
pop
mov
mov
sub
cld
movsl
mov
lret
jo
sbb
pop
mov
mov
add
fwait
xchg
mov
dec
mov
lcall
aad
cmc
xchg
pusha
add
xor
movsb
sub
pop
test
ja
add
jmp
filds
adcl
xor
stos
xor
mov
loope
outsl
mov
add
and
dec
or
test
insb
cmp
push
pop
adc
adc
loopne
sti
push
adc
adc
add
loope
clc
cltd
and
push
test
lea
jmp
cld
push
fmuls
dec
shll
add
insl
fwait
mov
inc
xchg
mov
add
test
cltd
inc
nop
add
sub
mov
mov
repz
lods
inc
js
and
mov
or
stc
push
add
mov
add
mov
and
and
or
jno
enter
in
lret
stc
sbb
jmp
out
mov
rol
les
add
cld
mov
add
pop
mov
stc
idivb
fcoms
push
aad
pop
xchg
out
rcrl
fsubrs
sbb
ds
mov
aad
iret
jl
xchg
cmp
add
les
mov
cli
cltd
rorb
add
cld
xlat
xchg
gs
jl
mov
js,pn
xor
out
or
das
test
jmp
xchg
aam
adc
xchg
mov
inc
arpl
add
pusha
mov
sar
mov
add
push
cmp
cwtl
sbb
inc
fwait
and
or
aad
test
add
cmp
je
jle
add
std
fsubp
ds
push
add
loop
jae
or
adc
mov
xchg
add
data16
or
mov
xor
jns
shlb
cmp
cmp
sub
or
sbb
sbb
ror
cmpsl
mov
sbb
stos
popa
int
int3
mov
sbb
add
fcoml
das
rcrb
sbb
sbb
rcr
aas
mov
push
sub
or
push
call
cmp
mov
pushf
stos
or
xor
clc
les
cmp
add
pop
lods
push
addr16
push
mov
xchg
pop
xchg
or
xchg
add
sub
sysexit
mov
dec
or
mov
leave
addb
jne
or
or
mov
ss
mov
sahf
inc
ret
or
in
cmp
xor
jno
sub
xchg
gs
and
mov
sub
pop
sbb
or
pusha
mov
adc
inc
test
xor
push
arpl
jne
add
aad
jg
rcrl
addr16
sbb
add
lock
adc
cmp
add
stc
in
addr16
scas
ret
aaa
xchg
sbb
std
or
insb
adc
dec
lea
aaa
test
loope
xlat
jecxz
add
jnp
or
lahf
nop
arpl
inc
cld
inc
lret
cld
push
add
repz
mov
push
pop
notl
or
scas
mov
or
aam
or
adcl
add
movsl
fsubp
xchg
dec
daa
cmp
add
popa
jge
mov
jnp
loop,pt
aaa
add
inc
into
sub
mov
int3
xchg
movsl
cmp
jno
scas
mov
inc
adc
mov
in
lcall
cltd
ds
stos
add
test
add
mov
fbstp
das
stc
test
sub
inc
pop
push
sub
lock
les
out
lock
mov
xlat
es
or
mov
sub
gs
in
sub
ss
jl,pn
std
dec
xor
xor
xchg
sbb
jns
adc
mov
jo
lret
push
inc
add
inc
shrl
pop
nop
add
fisttpll
test
lret
insl
sub
add
cltd
lret
stos
movsl
add
lds
sbb
std
dec
xchg
in
add
pavgw
out
lods
add
push
sbb
call
aam
das
sub
test
jb
clc
dec
pusha
ret
outsb
shrl
add
iret
add
mov
adc
stos
test
js
pop
test
pop
or
pop
std
pop
lock
lock
addr16
add
jl
pop
add
jle
cmc
mov
mov
mov
inc
je
xchg
popa
sbb
andb
test
add
sti
es
sbbl
mov
lahf
ficomps
loopne
nop
lods
jb
add
or
and
std
and
mov
jmp
dec
jl
add
lahf
mov
mov
mov
mov
subl
push
movsb
gs
push
sub
leave
inc
xorl
mov
dec
xorb
call
cmp
jbe
sbb
int
add
xor
ficoms
pop
dec
jbe
andb
sub
cmpsl
ja
xor
mov
jo
aaa
pop
add
xchg
add
or
mov
jecxz
adc
xchg
int3
add
jo
push
popa
mov
adc
pop
cmpb
and
push
rorl
inc
fiadds
sub
std
xchg
adc
push
add
fs
add
andl
jbe
popa
add
jmp
shl
cwtl
and
cmc
int
jle
mov
push
sub
mov
imul
test
enter
xorb
adc
fcmove
jo
mov
add
mov
repnz
add
pop
adc
xor
es
xchg
sub
into
inc
and
rcll
xchg
and
mov
out
push
jne
push
add
loopne,pt
shlb
xor
fildl
stos
rolb
adc
add
ljmp
dec
pop
cli
imul
cld
rcll
xchg
jns
mov
mov
mov
cld
pop
mov
add
lds
pop
add
hlt
sub
and
sbb
es
or
or
jb
filds
lea
mov
mov
cmp
ds
scas
or
jae
inc
sub
test
xlat
andl
xchg
jl
sbb
inc
cmp
adc
push
add
or
sbb
rclb
add
cmp
ret
shl
add
mov
jecxz
push
dec
add
nop
repnz
xchg
imul
in
pop
pop
dec
cwtl
xor
inc
add
and
xor
ds
ja
or
lock
cs
or
or
and
or
push
mov
cltd
inc
dec
fisttpl
les
lret
in
adc
ficoml
adc
rol
pop
mov
add
test
sbb
or
xchg
pop
and
lds
in
int
fnstcw
xor
test
pop
test
xlat
jle
es
mov
sub
mov
jp
sub
cmp
add
xchg
inc
in
out
dec
jmp
aad
mov
inc
dec
xchg
jo
popf
add
sbb
mov
adc
jecxz
pusha
mov
xor
imul
add
movsl
mov
cld
aaa
outsl
mov
mov
mov
inc
ljmp
push
mov
add
sub
and
inc
fsubrp
add
fwait
mov
mov
mov
jns
xor
add
xorl
mov
lds
dec
push
sbb
push
fiadds
adc
push
aaa
popf
lcall
add
mov
xor
pop
jge
mov
add
dec
pop
mov
imul
add
pop
out
in
jnp
add
ljmp
jp
out
add
aad
nop
rcrl
sbb
add
adc
mov
pusha
inc
and
gs
xor
mov
rolb
out
pop
xchg
cmp
pushf
aaa
pusha
mov
dec
push
jge
fsubr
cwtl
nop
cmp
aam
dec
add
cmpl
aam
cmpsb
sbb
popf
movsl
sub
and
push
fmuls
lea
adc
imul
inc
insb
mov
mov
push
ret
mov
mov
mov
sbbb
daa
popf
mov
sub
mov
push
or
sbb
aaa
in
or
mov
jns
les
add
cmp
sbbb
inc
pop
xor
or
mov
add
jmp
pop
sbb
ret
xor
sub
loope
inc
std
xor
jmp
add
or
jp
std
xor
addl
arpl
jge
add
test
jg
jbe
jp
enter
mov
push
add
pop
pop
inc
lds
add
enter
pop
push
fs
adcl
push
push
ret
pop
flds
push
daa
adc
outsl
mov
xchg
push
jg
adc
xchg
cmp
inc
inc
fildl
lea
sbb
stos
arpl
fmull
pop
enter
add
loopne
and
inc
gs
pushf
cmpsb
cltd
push
mov
pop
dec
jae
icebp
add
push
cmpsb
enter
out
pushf
adc
inc
add
cmp
and
mov
jb
shrb
mov
addl
or
rcrb
cmp
into
mov
dec
rclb
jle
add
mov
add
add
pop
stos
fs
add
or
in
shrb
mov
xchg
mov
sbb
xor
xor
cmpsl
adc
add
pop
xchg
sbb
sbb
xor
cmp
mov
adc
test
inc
in
cmp
gs
ljmp
pop
out
shrb
adc
imul
mov
adc
rdmsr
push
jg
add
mov
xor
pop
wbinvd
inc
add
in
in
push
sti
mov
add
sbb
add
cwtl
in
xchg
in
aaa
inc
rorl
add
or
push
icebp
push
loope
and
repnz
call
push
mov
sbb
les
imul
add
fcomip
or
shrl
sub
lock
in
adc
test
mov
lods
jmp
movsb
dec
jecxz
aas
pop
pop
roll
movsl
stos
jns
dec
cmpsl
out
in
addl
mov
pop
shl
mov
mov
adc
scas
popa
stos
mov
inc
int3
xchg
mov
sbb
mov
xor
or
push
lret
int3
and
nop
and
or
dec
lods
dec
fldl
loopne
adc
sub
mov
and
cmp
sub
test
out
pop
lods
frstor
lret
or
adc
pop
jmp
dec
imul
mov
or
push
inc
cmp
imulb
in
pop
push
pop
sbb
pop
or
mov
cwtl
pushf
lahf
sbb
js
adc
adc
and
sarl
push
jmp
add
cli
jge
lods
adc
bound
pop
in
repnz
add
jp
or
mov
unpcklps
pop
daa
adc
and
mov
xchg
mov
mov
adc
lcall
mov
cltd
cmp
jmp
sbb
mov
neg
sub
and
xchg
mov
jne
loop
sbb
mov
adc
int3
pop
mov
aad
fmuls
sbb
dec
inc
xor
add
shrb
lock
push
pop
adcb
ret
es
and
jge
popa
push
testl
aam
jmp
adc
lahf
dec
or
push
cmp
mov
sbbl
loop
je
xor
shlb
shl
xor
pusha
add
stos
xchg
jp
dec
insb
or
in
mov
stc
lods
pop
cwtl
mov
mov
shrl
sbb
dec
cmp
lock
push
dec
pop
ljmp
push
cwtl
dec
nop
xor
add
jg
adc
inc
dec
or
adc
filds
mov
nop
jno
inc
sbb
dec
pop
cltd
xchg
push
and
jae
adc
sbbb
sbb
testb
pop
cwtl
and
adc
push
or
fists
cmp
in
push
lret
mov
push
fnstenv
sbb
cltd
mov
aam
xchg
pushf
rolb
xor
fildl
or
xor
lcall
add
and
pop
mov
shlb
xor
dec
loope
add
adc
inc
hlt
cld
jge
idiv
xor
ds
popf
pusha
push
sbb
mov
cmp
pop
cltd
or
xlat
pop
or
lods
inc
and
dec
addb
testb
lock
mov
add
loop
xor
mov
stos
roll
xchg
out
add
inc
mov
and
mov
xchg
les
cmp
add
idivb
or
pop
add
jg
lock
adc
cmp
jmp
dec
cmc
mov
insb
fildl
adc
lds
xor
cltd
jns
movsb
sbb
dec
movsl
or
idivb
add
inc
mov
pop
movsb
push
nop
pop
test
je
bound
jae
cmp
add
ss
mov
jbe
cmp
jle
add
push
iret
in
mov
sbb
lods
dec
mov
test
lds
movsb
mov
add
dec
imul
fdiv
je
pop
cmp
mov
mov
jno
lods
cmovl
sbb
xlat
cmc
js
push
xor
adc
insl
test
add
test
push
sahf
cmpsb
xchg
lret
mov
xor
cs
rclb
insb
and
xor
pop
ljmp
dec
jp
mov
push
inc
mov
shlb
and
mov
insl
js
test
pcmpgtw
adc
clc
sub
push
adc
sbb
test
xchg
scas
es
add
cltd
push
repnz
imul
cmp
pop
add
push
arpl
dec
nop
aaa
sbb
mov
mov
fs
adc
divb
mov
outsl
sub
mov
cmpsl
dec
rcrb
mov
jge
cmp
movsl
subb
inc
add
arpl
add
aaa
into
pop
pop
bound
xchg
lahf
add
push
mov
pop
adc
fwait
add
scas
repnz
frstor
dec
sub
sub
nop
or
jo
mov
stos
push
mov
popa
fsubp
dec
cs
movl
sarb
movsb
adc
xchg
out
mov
dec
jl
pusha
lds
pushf
nop
xchg
inc
xchg
or
xor
add
fcoms
mov
sub
push
testl
sti
imul
or
sub
add
je
mov
mov
or
mov
push
dec
pop
and
sub
scas
inc
push
aas
dec
add
cmpsb
std
lods
pop
adc
mov
pop
in
aaa
mov
fcomps
pushf
es
jl
push
js
js
test
in
lahf
pop
lcall
shlb
add
mov
cmpsb
add
ja
call
mov
xor
aas
leave
hlt
loope
sub
adc
mov
sbb
cmpsl
adc
filds
loopne
in
test
mov
aaa
inc
add
and
jge
lcall
das
negb
and
nop
dec
cwtl
inc
add
pushf
negb
mov
lret
lock
adc
pushf
sub
shlb
sbb
pop
out
jecxz
loop
add
adc
xor
mov
cmp
fs
popf
pushf
lock
pop
add
jno
stos
mov
xchg
idivb
add
push
hlt
repz
pop
mov
jo
addb
inc
test
les
addr16
xchg
mov
out
xchg
scas
test
push
add
jns
cmp
sub
xchg
add
mov
jg
addr16
mov
sbb
dec
mov
sbb
or
inc
daa
sub
add
inc
sahf
xor
pop
pop
inc
gs
jbe
pop
xor
je
pushf
movsl
and
out
popf
add
xchg
arpl
adc
xchg
cli
jl
push
test
jno
arpl
add
mov
lock
pushf
in
xchg
or
ljmp
jae
int3
xchg
push
add
xchg
mov
mov
push
dec
push
adc
xor
fwait
adc
mov
pop
jo
ljmp
testb
mov
lret
pushf
insb
andb
jl
in
sbb
sarb
into
rcrl
gs
dec
int3
ret
jge
test
push
sub
pop
or
clc
xchg
inc
test
fwait
push
xor
cmp
sub
mov
les
pop
insl
test
sub
xor
leave
inc
lahf
fucomi
mov
test
data16
mov
or
inc
imul
scas
mov
leave
js
cwtl
sti
add
adc
push
test
pop
pop
mov
in
add
sub
mov
adc
mov
rolb
fadds
adc
in
add
sbb
pop
loop
mov
xor
jp
inc
mov
ss
inc
arpl
sar
cmp
mov
sub
add
sbb
adc
dec
icebp
cmp
jmp
or
movsl
mov
sub
mov
js
test
shlb
push
loop
mov
rorb
jl
aam
cwtl
pop
adc
pop
inc
xorb
sbb
out
int
add
push
mov
adc
jmp
adc
add
jo
mov
std
dec
sbb
pushf
xchg
inc
dec
call
cmp
xchg
add
mov
mov
mov
add
mov
cli
mov
in
cmpb
add
and
cmp
fwait
add
add
enter
in
js
hlt
iret
inc
repz
dec
mov
fstl
inc
adc
jnp
dec
xor
mov
mov
sub
movsb
popa
subb
add
mov
dec
subb
sub
inc
sub
jae
jg
jmp
cmp
mov
nop
adc
loop
ss
and
push
cmpsl
jecxz
std
or
xor
sub
outsl
cmp
movsb
lods
rclb
mov
das
sbb
sbb
aaa
xchg
mov
and
scas
lret
sub
jmp
sbb
pop
add
js
aaa
and
clc
int3
loopne
cmp
je
xor
lods
mov
dec
add
sbb
and
add
lahf
into
push
add
aaa
ja
das
test
and
add
nop
mov
aaa
sbb
scas
and
add
rorb
mov
shlb
mov
add
in
popa
push
out
pop
add
pop
stc
out
adc
cli
and
inc
lock
and
loop
add
xlat
xor
mov
lds
sahf
cld
gs
mulb
add
sbb
mov
rcrb
add
jl
les
mov
cs
push
jg
addr16
popf
andl
stos
sbb
push
int3
popa
add
adc
pop
dec
cmp
dec
pop
xchg
inc
push
push
adc
push
xor
loopne
adc
pushf
inc
push
jns
in
insb
dec
mov
imul
nop
add
mov
test
jl
push
bound
mov
out
sbb
cmpsb
lcall
pop
and
popf
and
lea
arpl
pop
or
insl
rcll
rorb
in
adc
fs
cwtl
mov
test
out
decb
pop
adc
pop
mov
sbb
mov
dec
stos
mov
inc
mov
rcrb
mov
inc
mov
pop
mov
cmp
add
adc
mov
mov
dec
pop
mov
add
or
mov
xchg
adcl
test
or
mov
shll
js
pusha
pop
cs
sub
pop
out
add
rcrb
in
and
out
out
clc
dec
pop
jle
push
mov
adc
pop
pop
and
popa
loopne
push
add
lret
cld
add
hlt
fistpl
pop
xor
leave
fisttpll
adc
scas
addb
or
aad
adc
fildl
adc
pushf
add
inc
adc
pop
push
adc
adc
jb
add
adc
push
adc
mov
scas
add
movsb
nop
mov
inc
xor
pop
xor
mov
add
jbe
pop
xchg
cmp
outsl
xchg
pop
mov
push
adc
in
fdivr
shr
push
add
addr16
pop
add
orb
sbb
mov
les
loopne
sbb
pop
mov
scas
adc
call
add
lods
xchg
sub
sbb
xchg
push
dec
inc
add
adc
aam
xchg
and
push
aam
xchg
lods
mov
inc
scas
mov
inc
sub
push
adc
in
add
loope
jmp
pop
cmc
inc
leave
jp
add
push
faddl
cmp
mov
stc
mov
pop
pop
cmp
mov
sbb
and
add
popw
xorb
movsb
cmp
push
pop
xchg
xchg
sub
push
pushf
jns
in
cmp
cmp
jnp
popaw
outsl
ss
movsl
xchg
or
pop
xor
mov
fisttpl
or
xchg
mov
rorl
mov
add
dec
mov
add
shll
mov
jg
in
into
cltd
scas
xchg
xchg
aam
mov
setg
mov
sarb
add
sub
stos
pop
xchg
mov
fdivr
sbb
jecxz
lret
pop
add
mov
rolb
mov
jne
movsb
dec
mov
xor
mov
cltd
or
push
fcmove
pop
adc
add
mov
iret
add
jg
and
mov
add
xor
out
aad
dec
hlt
inc
loopne
arpl
add
mov
inc
xor
das
test
cmp
int3
in
add
jbe
mov
xor
ds
jmp
pop
hlt
xor
sahf
mov
jb
and
bound
jo
cwtl
je
inc
test
sbb
or
xor
test
loop
xchg
pop
mov
mov
in
sub
scas
dec
mov
repnz
xchg
test
mov
push
in
popf
pop
add
jne
jmp
add
xchg
mov
or
mov
add
call
dec
add
mov
sub
jp
mov
mov
pop
les
popf
rolb
dec
clc
dec
adc
inc
and
adc
dec
std
mov
lret
into
dec
nop
xor
sti
add
adc
inc
push
push
ljmp
sbb
xor
test
loop
pop
jbe
fsubr
add
movsb
jo
pop
cmpsb
dec
shlb
lret
daa
test
and
push
cmp
mov
dec
incl
stos
jbe
or
jns
shlb
test
mov
adc
lea
sbb
mov
add
test
inc
cmp
xchg
test
rcl
sub
inc
fcoml
mov
add
mov
pusha
js
mov
cld
lods
movsl
les
adc
push
loop
pop
mov
adc
inc
and
lea
in
and
movsb
int3
sub
cs
push
mov
xor
mov
flds
iret
js
jge
jns
aad
shrl
pusha
push
push
jle
add
test
push
sub
xchg
sub
dec
insl
pop
aas
inc
movsb
cmp
add
fidivrs
insb
sub
mov
movsb
inc
cmp
test
push
jecxz
aaa
inc
mov
inc
and
or
das
sbb
aam
scas
clc
add
add
push
in
inc
cwtl
adc
xchg
inc
mov
adc
icebp
and
mov
pop
inc
mov
push
cmpsb
mov
add
sbb
fistl
nop
mov
lock
paddusb
in
jmp
mov
add
cmc
cmp
insb
aaa
push
jnp
pop
jecxz
aas
fistpll
push
xor
jg
dec
dec
pop
adc
popf
sub
add
daa
pcmpeqb
xor
int
pushf
lret
inc
stos
adc
push
nop
xchg
adc
mov
in
add
push
mov
cmp
and
inc
pop
sub
cmp
lock
aas
jl
and
pop
aaa
push
dec
into
enter
mov
ja
inc
xlat
cmp
data16
pop
repz
cmp
cmp
stos
dec
sbb
rolb
shl
stc
and
mov
and
pop
adc
or
mov
hlt
push
pop
subb
inc
adc
jb
add
mov
add
push
mov
add
inc
xchg
out
jp
mov
inc
dec
dec
adc
imul
fsub
mov
mov
add
inc
in
pop
cmp
or
xchg
repnz
sbb
mov
je
cld
sub
sub
imul
sbb
sub
xor
jge
mov
adc
nopl
pop
icebp
xchg
cmp
and
dec
mov
aas
sub
add
or
or
fnop
shl
adc
mov
add
cli
lcall
data16
jp
and
sbb
fwait
insl
pop
sbb
hlt
aas
add
mov
mov
in
sbb
enter
jge
dec
add
sub
push
add
inc
sbb
adc
adc
or
adc
cmp
les
arpl
sbb
popa
pop
mov
and
daa
xchg
fsubl
sub
add
test
aaa
dec
jne
lock
dec
js
add
movsb
inc
cmpsl
popf
mov
lods
fst
cmp
mov
rolb
outsb
jno
add
mov
lcall
xchg
and
pop
and
pushf
leave
dec
pop
daa
jl
add
mov
mull
lcall
cmp
adc
out
fs
je
sub
and
sbb
cmp
and
insb
mov
inc
push
mov
xor
addb
rorl
pop
pusha
mov
imull
shlb
idivb
stos
addl
in
jo
lock
pop
push
cld
js
adc
and
adc
test
pop
call
mov
mov
cs
push
in
adc
bound
aam
cmp
dec
icebp
scas
sub
sti
jo
lahf
inc
fmuls
insb
mov
adcl
adc
or
push
mov
clc
cwtl
lods
push
pop
orb
pop
cmp
aaa
fbstp
xor
sub
testl
and
scas
daa
dec
sub
or
mov
test
push
xchg
ss
adc
jo
push
add
mov
and
adc
adc
and
sbb
xchg
test
jecxz
add
cmp
jle
pop
jmp
cmp
and
scas
pop
add
clc
mulb
sbb
lods
mov
in
rclb
mov
jg
xor
clc
sbbl
cmp
and
adc
fisubs
sub
cmp
aad
cwtl
in
mov
dec
push
mov
in
add
push
sbb
pop
pop
ret
sub
add
fmuls
or
add
loopne
pop
jns
mov
scas
mov
inc
and
loope
push
orb
push
sbb
in
add
inc
or
and
dec
add
pop
dec
add
adc
icebp
cmc
movsl
repz
xchg
inc
out
xchg
add
xor
decl
xchg
in
stos
fidivrs
test
add
mov
mov
cmc
sbb
fsts
mov
mov
adc
mov
ficomps
push
call
scas
addr16
cld
cmpsb
aad
add
mov
movsl
cmp
xor
xor
fiaddl
inc
jo
adc
pop
add
or
lret
add
movsl
lret
adc
repz
rorb
test
mov
fbld
add
add
pop
out
xor
and
int
loopne
xor
aas
xchg
xchg
push
adc
nop
mov
pop
or
subb
xchg
add
pop
pop
insl
xchg
xlat
add
sbb
in
xchg
sbb
stos
sar
inc
test
dec
push
pop
imul
jnp
int3
push
add
push
jecxz
mov
pop
shlb
pop
loopne
cli
mov
dec
mov
repz
mov
dec
fsubrs
outsb
xchg
xchg
pop
mov
cmpsb
mov
sbb
popa
repz
mov
int3
add
push
addr16
fwait
add
fadds
call
pop
imul
add
dec
or
iret
fisubl
add
jecxz
mov
je
adc
lock
mov
xor
add
mov
mov
add
xor
adc
stc
add
sbb
and
mov
or
mov
dec
dec
je
adc
and
movsb
push
in
int3
daa
adc
push
sub
xor
cmpsb
cmp
loope
arpl
sbb
fsub
or
aas
jg
in
fsubrs
scas
dec
jl
cwtl
and
push
inc
inc
sub
repnz
sub
push
in
lock
mov
jmp
bound
mov
daa
pop
mov
fadds
push
sub
cmpl
leave
orb
pop
lds
and
xor
adc
sbb
movsb
add
xchg
add
push
cmpb
nop
xchg
add
sarl
mov
add
fwait
jl
mov
js
lahf
dec
inc
aam
jg
mov
fwait
and
ret
add
repnz
push
adc
std
aaa
pop
jl
mov
mov
arpl
mov
add
pop
mov
movsb
mov
adc
shlb
das
sub
xchg
cltd
aam
add
mov
cmp
add
and
and
mov
inc
sbbb
mov
aad
movsl
xor
mov
fdiv
divl
data16
inc
jmp
add
cld
inc
xchg
insb
loop
mov
aam
inc
pop
add
iret
cld
iret
and
jg
xchg
mov
shll
mov
ficoml
dec
int3
push
pushf
xor
sbb
cli
mov
pop
pop
add
jl
adc
or
cmp
add
sub
xchg
or
xor
roll
sbb
imul
dec
adc
pusha
sbb
mov
xchg
mov
push
sbb
in
cld
scas
mov
loop
or
lret
addb
sbb
rorl
mov
pop
lock
lods
gs
jg
ja
out
sbb
sbb
xorb
cwtl
mov
cmpsb
adc
mov
dec
sbb
cwtl
mov
add
aas
ja
or
xchg
jo
inc
add
aad
in
lods
addb
and
inc
xor
imul
leave
sbb
test
adc
subl
test
adc
or
test
in
add
ds
add
mov
repnz
test
push
mov
adc
pushf
imul
sbb
adc
insl
in
pop
cs
jb
cmp
test
inc
xchg
mov
inc
in
inc
mov
mov
int3
mov
dec
push
inc
sbb
in
pop
mov
sub
dec
cs
and
adc
stos
out
inc
mov
es
xorl
xor
inc
mov
and
or
loopne
popa
inc
sbb
push
dec
xorb
and
aas
movsb
dec
or
sti
push
inc
inc
or
push
in
add
outsl
mov
or
add
leave
mov
bndstx
pop
pop
mov
push
test
mov
les
andb
xchg
and
mov
hlt
mov
inc
inc
pop
add
sbb
loop
push
pop
jbe
or
sbb
cmpb
les
add
jne
frstor
push
sub
dec
mov
sub
ret
add
jl
enter
loope
std
add
add
hlt
bound
or
jae
scas
xchg
popf
adc
add
add
push
mov
cmp
mov
cmp
xorb
or
cltd
pop
xchg
adc
add
pushf
jl
pop
arpl
mov
mov
dec
ret
test
push
sarb
mov
jae
xor
add
mov
sbb
icebp
filds
lds
push
test
hlt
cmp
std
shl
nop
push
and
repnz
xchg
leave
loopne
insb
pushaw
fcomps
into
push
jns
movsb
add
add
jge
mov
cld
call
pusha
or
mov
movsb
jne
rcrb
cmp
loopne
leave
and
adc
mov
cmp
mov
jle
lar
jne
mov
and
jl
sub
xchg
jno
sub
sub
cmp
mov
add
mov
mov
lcall
lock
addl
sysret
jo
ljmp
mov
cwtl
aaa
inc
xor
es
lahf
xchg
loop
dec
out
pop
dec
jp
int3
mov
and
iret
add
mov
nop
adc
and
add
mov
shlb
mov
xor
out
cld
inc
loopne
mull
add
loope
add
sahf
jecxz
add
in
push
pusha
and
mov
ljmp
add
sti
xor
pusha
inc
xor
jo
test
push
or
sbb
xor
push
add
in
sub
fwait
dec
push
mov
sub
enter
adc
mov
adc
xor
pop
pop
inc
aam
dec
jp
cmp
insl
test
test
dec
les
mov
sbb
loope
in
mov
adc
test
mov
mov
mov
clc
cmc
shll
inc
pop
jmp
cltd
rolb
push
pop
fsubs
aaa
cmc
xor
add
sub
dec
xor
xchg
xchg
mov
add
and
imul
push
in
push
xchg
mov
int3
mov
mov
rcl
dec
jp
mov
or
jns
push
and
jo
pop
jnp
and
push
jp
add
lds
pushf
mov
push
cmpb
sarl
ljmp
add
loop
add
test
and
lods
xchg
shlb
sbb
pushf
xor
inc
fwait
or
in
jl
cmp
xchg
pop
test
pop
add
cmp
cwtl
lods
lods
xor
push
pop
nop
insb
lock
ss
sbb
and
xor
cld
jge
jns
test
adc
lret
push
loope
xchg
dec
lock
dec
sbb
lret
sub
dec
xchg
or
xchg
xchg
in
or
adc
fs
push
and
mov
fisttpl
je
push
mov
pop
div
in
pop
mov
pop
mov
mov
fmull
js
dec
cmpb
ss
adc
pop
shlb
push
add
mov
jle,pt
pmaxub
dec
mov
xor
icebp
jl
adc
ffreep
fsubrs
adc
loope
rcrb
jns
sbb
mov
je
clc
andl
and
mov
arpl
sbb
lods
inc
dec
adc
mov
add
pop
xorb
loop
cwtl
jmp
jbe
add
data16
mov
add
pop
cltd
push
in
clc
inc
dec
loop
prefetch
test
jae
mov
sbb
dec
push
stos
mov
movsl
scas
mov
pop
add
jno
outsb
inc
mov
mov
int3
cwtl
mov
pop
mov
add
push
xchg
add
adc
imul
pop
push
out
hlt
lock
and
test
nop
shlb
adc
js
aad
sbb
cld
jmp
in
xchg
out
outsl
in
add
adc
call
pusha
add
andb
add
push
repnz
add
jle
add
pop
inc
fsts
fimuls
dec
jp
fs
cwtl
dec
in
sub
inc
or
test
pop
push
push
and
addl
add
mov
push
cltd
and
sbb
sbb
das
pop
cmp
and
hlt
fcomps
cwtl
cmp
inc
add
xchg
adc
lods
pop
mov
loopne
sbb
add
lcall
add
in
imul
and
cmp
mov
pop
inc
andb
push
in
xchg
pop
insl
mov
push
rcrl
sub
xlat
sbb
pop
mov
pop
lods
das
mov
nop
mov
aam
nop
cmp
mov
xchg
ja
aas
and
add
mov
popw
rcrb
mov
adc
pusha
cmp
push
addr16
sbb
pop
pop
xchg
or
push
jbe
push
jb
xlat
and
addr16
call
out
pushf
adcb
repnz
loopne
sub
out
jmp
std
and
add
cs
insl
mov
bound
adc
fwait
mov
sbb
lahf
and
lock
add
lods
or
bound
enter
rcrb
in
or
dec
pop
lea
add
rcrb
and
xchg
and
mov
insb
in
add
mov
and
je
dec
jo
or
fmuls
mov
popf
add
outsl
mov
adcl
inc
add
rcrl
mov
test
jo
mov
pusha
leave
test
and
lret
dec
aas
out
cmpsb
pushf
rolb
sub
add
add
jbe
add
dec
push
or
insb
mov
ljmp
cmpsb
and
ret
and
aaa
bound
add
add
or
xlat
jbe
cwtl
insl
aad
movsb
in
call
xor
cmp
and
adc
repnz
subb
push
add
cmp
mov
and
test
inc
faddl
clc
out
sub
or
insl
fisttpl
push
xlat
lock
jecxz
jnp
testb
mov
xchg
inc
mov
call
cmp
lret
xor
popa
test
mov
int3
fadds
mov
insb
push
out
cltd
es
in
or
add
adc
add
testb
xor
lock
int
das
lcall
jae
sti
inc
fildl
add
mov
int
sbb
mov
pop
xor
cmp
add
mov
pop
scas
pop
pusha
fimull
add
test
sqrtps
sbb
push
jl
xchg
or
push
ss
push
add
das
fucom
dec
inc
add
in
xchg
xchg
and
xchg
in
add
faddl
dec
mov
mov
inc
inc
nop
rorl
add
mov
popa
aam
adc
sbb
jb
rorb
mov
or
mov
in
bswap
mov
adc
or
add
adc
pop
xchg
rolb
xor
int
and
or
divl
nop
mov
jbe
call
sbb
xor
test
sub
je
ds
push
cwtl
push
cmp
sub
pop
add
fisubs
outsb
pusha
fwait
ret
mov
pop
jg
sub
xor
inc
aam
pop
inc
cmp
repz
xor
in
std
jle
cli
lock
pop
adc
and
inc
xor
roll
adc
imul
aad
or
and
or
daa
mov
std
mov
fadds
loope
dec
test
lds
loop
xor
push
fnstenv
jmp
push
cmp
clc
mov
cs
sahf
add
and
repnz
and
outsb
aam
in
and
mov
push
xor
test
lcall
sbb
cmp
jmp
xor
shr
icebp
inc
andb
std
pop
shl
out
pop
mov
in
arpl
add
add
add
in
mov
mov
mov
daa
loop
stc
dec
rcll
in
aas
rol
dec
jne
and
sub
addr16
lahf
iret
push
rcrb
add
call
orb
inc
dec
xchg
bswap
cli
push
mov
jmp
mov
jb
cmpsb
or
test
insl
adc
cmp
mov
adc
add
sub
cli
sub
jae
and
mov
sub
jle
adc
popf
enter
mov
pop
pop
scas
xchg
adc
push
popf
xor
cmp
adc
mov
into
xchg
inc
push
add
sahf
push
xor
leave
mov
or
cmpsb
add
sbb
sub
in
add
xchg
sub
or
in
mov
push
inc
mov
mov
fidivrl
adc
inc
push
out
or
xlat
xor
add
pop
adc
mov
adc
fbstp
jl
mov
xchg
add
dec
jo
in
loopne
cmp
ljmp
bound
inc
add
push
ret
mov
dec
xchg
xchg
outsb
loop
repz
sbb
sbb
or
push
loop
and
jecxz
outsl
cmpsl
test
xorl
adc
stos
add
adc
xchg
aad
cs
loopne
adc
nop
inc
add
aas
push
lods
add
rcll
sbb
popf
loopne
inc
imul
or
sub
mov
dec
cmp
xchg
scas
add
mov
add
dec
fs
add
bound
pop
lock
pop
sbb
mov
add
rol
fisttps
adc
mov
xchg
add
shll
repnz
adc
dec
scas
roll
shll
or
cmp
std
dec
cmp
add
inc
scas
or
push
add
in
cmpb
stc
mov
sbb
icebp
fcoms
mov
fwait
or
xchg
dec
enter
xchg
xor
and
mov
hlt
sti
add
add
mov
sbb
lret
js
movsb
sahf
addl
mov
add
mov
mov
int3
andb
stc
xchg
test
add
or
push
std
xchg
inc
fidivl
fwait
clc
or
fs
lcall
xchg
setl
out
stc
pop
pop
fdivrs
popf
addb
dec
inc
add
cltd
add
adc
add
mov
dec
fwait
js
rorb
add
adc
clc
mov
and
out
lret
cltd
cmp
rorb
cmp
loopne
jae
or
cmpsl
inc
mov
pop
mov
aad
adc
pushf
in
sbbb
popa
popf
les
push
testb
shll
push
add
mov
sbb
in
mov
xchg
dec
addr16
adc
push
sti
push
mov
add
xchg
out
push
aad
or
add
sbb
stos
cmovne
and
outsb
mov
mov
scas
mov
add
inc
inc
xor
jb
in
inc
cwtl
scas
and
mov
add
nop
popf
add
call
mov
and
sbb
mov
into
mov
popa
test
in
sbb
push
xchg
xchg
add
adc
leave
pop
xchg
adc
popf
pop
push
imul
cmc
jp
pushf
adcb
in
mov
jecxz
adcl
sbb
push
sbb
adc
fwait
dec
mov
mov
and
add
lock
jg
push
cmp
mov
inc
loop
add
popa
inc
jmp
dec
mov
add
xlat
shl
mov
add
dec
pop
cmp
push
loope
add
or
or
mov
xor
mov
lcall
push
test
mov
pop
pop
xchg
xchg
adc
push
stos
ljmp
pop
shll
fwait
lret
mov
pop
loope
aaa
daa
cld
mov
mov
and
insl
push
adcb
adcl
sub
cmp
jmp
das
sub
orl
lahf
pop
dec
out
js
hlt
add
dec
sarl
jle
rorb
add
inc
dec
cs
in
lahf
mov
or
fists
ja
sbb
hlt
cmp
out
cmp
lock
fcomps
pop
cmpl
jo
cmc
inc
pusha
cmp
rclb
xor
sbb
ljmp
xlat
pop
scas
jns
das
jo
addl
sbb
or
lock
add
adc
inc
imul
sbb
add
mov
adc
mov
mov
lretw
in
loopne
xor
adc
outsb
nop
jns
push
and
jg
jnp
pusha
daa
and
cmp
push
lods
and
xchg
insb
in
adcb
loopne
sti
adc
or
shl
aaa
or
stc
inc
iret
add
loopne
xor
shll
cmpsb
cmp
push
xchg
add
sbb
adc
cli
stc
cmc
adc
sbb
mov
pop
xchg
sbb
add
ffree
int3
sbb
xchg
add
cmpsb
push
push
mov
lods
sub
or
add
aam
pop
push
mov
insl
cmp
fwait
sub
push
pop
or
pusha
pusha
jno
into
xor
sub
mov
inc
ret
push
sbb
inc
mov
add
imull
pop
add
or
push
jae
push
add
mov
out
int3
out
dec
icebp
aad
push
fnstsw
add
out
xor
insl
dec
stos
cmp
orb
lods
xchg
scas
jb
inc
inc
out
sti
push
enter
and
sbb
lret
xlat
adc
xchg
lock
into
lahf
std
stos
out
adcb
sbb
pop
push
loopne
scas
add
lods
mov
jmp
xor
mov
mov
lods
add
fwait
popa
loopnew
and
nop
inc
inc
push
cmp
add
cmc
daa
movsb
out
xchg
sub
add
sub
hlt
inc
mov
daa
cmp
inc
push
sub
or
pop
bound
sbb
ret
xchg
sub
pop
loopne
jbe
shrl
xchg
mov
inc
clc
shl
cmp
jae
pop
push
pop
mov
pusha
cmp
sub
push
in
mov
xchg
push
push
dec
add
daa
pop
mov
or
add
sbb
lret
add
clc
inc
cs
inc
or
out
xchg
push
cmp
leave
fsubl
add
or
push
scas
add
jecxz
repz
ret
jmp
cmp
add
js
xor
cmp
push
in
in
mov
adc
mov
int3
jl
scas
sbb
pop
jecxz
dec
push
sbb
xor
js
add
mov
sbb
push
jle
jnp
pop
mov
mov
addr16
or
call
les
mov
js
push
add
adc
popf
insb
mov
cmp
aam
loopne
stos
sbb
test
add
ret
arpl
add
mov
push
mov
mov
cmp
cmp
or
or
sarb
test
add
mov
add
jb
mov
add
inc
pop
cmp
adc
rorl
into
or
add
inc
mov
mov
add
pmulhw
movl
mov
insb
pop
jno
cmpsb
pop
aas
movsl
in
imul
sbb
cmpsl
add
mov
lahf
add
adc
add
jnp
js
ljmp
inc
loopne
jnp
jle
push
into
mov
add
and
clc
pusha
pushf
xor
test
add
jb
shrl
add
pushf
or
sti
pop
out
mov
insl
callw
cmp
add
hlt
addl
cli
jge
or
mov
int3
and
xor
out
push
int
jle
push
pop
fsts
inc
inc
mov
add
xchg
pop
ret
in
shlb
rclb
or
mov
jno
add
scas
aaa
lods
mov
mov
das
rclb
daa
bound
or
subl
sub
loop
cmp
insb
add
sbb
xor
mov
rorl
movsl
and
mov
push
bound
push
cs
clc
cmpsl
xor
iret
add
ret
nop
and
rolb
dec
in
mov
mov
add
mov
stos
add
xor
fcoml
loopne
push
push
cmp
pop
add
rolb
add
and
fsubl
addl
popa
shrb
call
roll
xor
and
jbe
xchg
notl
filds
rclb
mov
pop
in
jmp
addr16
push
jp
add
inc
scas
cmp
mov
sub
add
cmc
add
int3
xor
fisttpll
fwait
jl
sbb
jg
sub
add
inc
xor
ja
and
pop
xchg
or
jae
sub
cli
or
cmp
shrl
dec
out
sbb
das
dec
call
and
or
sub
adc
or
or
pop
add
movsb
push
js
push
cmp
mov
add
loope
pop
add
aas
ret
cmc
fisubrs
inc
call
or
jno
popa
imul
mov
gs
and
add
mov
out
adc
jmp
add
ljmp
add
xchg
mov
mov
xor
mov
push
adc
mov
xor
sbb
adc
mov
fimuls
mov
pop
call
push
aas
cmp
rcr
js
in
xor
stc
cmc
push
clc
jo
push
xchg
add
xor
add
inc
outsb
mov
jo
pop
aam
jle
mov
mov
nop
outsl
sbb
pop
add
cltd
mov
stos
test
mov
aam
sti
push
sbbb
push
and
push
les
pop
ss
jecxz
pop
push
sar
ljmp
jo
pop
jge
daa
add
or
pop
pop
dec
jnp
sti
fadds
popa
dec
jo
fnstenv
jbe
add
mulb
addr16
and
mov
jg
lcall
xorb
sbb
les
loope
cwtl
add
call
add
mov
and
lods
fiadds
sti
mov
sbb
jmp
mov
xor
add
mov
add
cmp
imul
repz
xchg
sub
jae
ret
lock
nop
adc
mov
leave
sub
add
push
cmp
mov
mov
out
push
out
sldt
mov
mov
mov
jle
add
xor
jg
add
jl
cwtl
xor
add
pop
repnz
iret
or
in
fdivrl
add
adc
fadd
xchg
inc
or
cmp
fmuls
mov
inc
pop
pusha
lcall
adc
loopne
add
inc
je
xor
lock
sub
adc
inc
test
lods
sub
and
adc
fxch
sarl
xchg
test
xor
inc
add
sbb
dec
fmuls
add
ret
add
outsb
jo
pusha
inc
or
mov
and
clc
mov
mov
push
scas
jns
pop
or
xor
movsb
cltd
stc
and
sbb
add
jae
popa
idivl
iret
mov
jecxz
add
add
out
jp
test
push
push
push
cmp
and
loope
inc
out
jg
and
dec
or
ror
adc
mov
mov
add
adc
ss
add
inc
aas
lds
ret
roll
xor
nop
or
inc
jnp
inc
cmpsl
add
shlb
and
xchg
jo
xchg
jns
repz
mov
push
sub
pop
in
mov
fildll
aam
or
xchg
rolb
add
add
push
sub
test
pop
enter
xor
dec
subl
std
xchg
sbb
xchg
mov
pop
mov
sbb
sahf
adc
inc
test
xchg
xorb
daa
dec
popf
xor
add
movsl
pop
dec
dec
movsb
push
add
lock
xor
ret
les
testb
pop
cmp
add
int
pop
xchg
call
xor
mov
dec
sbb
sub
roll
push
sbb
push
jne
cmp
jge
lds
mov
mov
loopne
sub
ds
add
movsb
outsb
sar
or
xor
insl
xchg
jno
xchg
dec
inc
add
pop
mov
ds
push
rolb
push
lock
jmp
add
mov
lcall
mov
or
dec
push
push
pusha
inc
add
xor
stc
pop
add
in
push
inc
lret
adc
add
lods
rorb
dec
jle
cmpps
push
adcl
jb
add
fwait
jecxz
clc
push
adc
mov
mov
leave
add
filds
jb
stos
mov
sub
pop
mull
js
repnz
bound
fdivr
lret
stc
and
dec
jg
and
pop
add
push
jo
or
and
orb
ljmp
das
shrb
push
jb
ret
test
fisttpl
mov
add
test
ret
or
and
sbb
ficoml
gs
add
jmp
incb
inc
jne
ds
mov
xchg
mov
inc
add
cmp
add
rolb
into
inc
mov
jmp
add
add
push
mov
add
fistps
mov
inc
mov
xchg
push
xchg
iret
outsl
push
add
jae
push
add
cmp
iret
push
add
loope
lods
adc
cltd
mov
add
pop
mov
rolb
jl
or
test
jge
outsb
addb
add
aam
sbb
aad
fdivs
cmpsl
in
std
data16
pop
xchg
loopne
mov
ret
pop
repnz
cmc
add
aaa
sahf
mov
shrb
outsb
sub
jge
adc
rolb
jg
add
cmp
add
addl
pop
testl
cmp
sahf
xor
rcll
jg
xorb
adc
lods
jecxz
out
loopne
rclb
add
lahf
xor
push
inc
inc
sti
mov
pop
in
mov
aaa
fwait
stc
ja
xchg
dec
cmp
jle
mov
pop
cltd
cmp
jne
hlt
sbb
add
xor
mov
ljmp
sub
mov
in
in
mov
xor
sub
add
push
xchg
out
sbb
add
sbb
push
add
add
ljmp
add
mov
js
add
out
jp,pn
or
add
pop
ljmpw
mov
insl
adc
add
dec
cwtl
fists
inc
nop
add
out
cmc
jbe
cs
fcoml
xchg
rclb
cld
dec
es
data16
fs
or
repnz
icebp
out
adc
adc
in
push
divb
ret
jb
testl
mov
push
in
push
add
dec
sub
pop
push
ud0
add
test
rcll
adc
jne
add
iret
mov
decl
add
loop
lahf
dec
roll
xorl
pop
stos
pop
mov
add
data16
sbb
pop
arpl
fmull
cmp
add
inc
push
jbe
into
add
or
and
addr16
not
push
push
ljmp
ror
sbb
add
xchg
pop
pop
or
loopne
mov
jle
adc
add
mov
and
fiaddl
add
add
mov
jmp
xor
pop
daa
inc
fiaddl
in
push
inc
or
dec
shl
nop
rcll
js
and
sbb
test
cmp
cmp
jecxz
add
dec
mov
imull
xchg
shlb
add
nop
sub
sbb
shlb
push
daa
testl
cli
mov
add
sub
rorb
jg
in
mov
mov
lret
notl
jge
pop
or
mov
int
inc
push
sbb
dec
ljmp
add
sbb
and
mov
sahf
xchg
jne
sbb
popf
test
push
add
dec
add
push
sbb
jmp
add
pop
jecxz
xor
push
in
push
xchg
loopne
ds
iret
add
mov
adc
xor
add
add
add
imul
cltd
cmp
add
pop
mov
js
push
push
loopne
and
xchg
jne
jbe
loopne
add
mov
inc
add
add
cmp
fcmovnbe
push
xor
loopne
imul
js
pop
cmp
iret
rolb
or
fwait
add
imul
and
push
dec
and
bound
mov
frstor
add
xor
enter
enter
sub
sub
lods
fs
add
mov
nop
test
mov
push
scas
pop
sbbb
mov
push
push
popf
es
lret
and
mov
in
outsb
add
int3
stos
popf
sbbb
add
dec
add
cmp
add
cmpsb
pop
cmp
add
mov
mov
add
or
adc
sub
leave
rcrl
pop
jle
xchg
ficoms
mov
mov
aam
scas
js
dec
sti
mov
jge
je
add
ds
pop
add
mov
arpl
in
add
inc
bound
add
inc
dec
mov
mov
jmp
mov
rorb
jbe
sbb
jg
cld
pop
add
lcall
adc
repz
xchg
cmc
and
or
mov
imul
cwtl
pop
lock
jo
and
and
mov
addr16
pusha
dec
jge
sbb
mov
sarb
mov
cmp
repz
cli
addr16
sub
dec
cmpsl
sub
sbbb
in
xor
pop
leave
fdivr
sbb
add
mov
add
and
cli
arpl
fwait
adc
nop
dec
dec
or
push
fidivs
xchg
rolb
adc
dec
repz
cmp
add
xor
cmpb
mov
add
mov
mov
fwait
sarb
and
dec
cmp
add
loop
out
add
push
loopne
fisubl
enter
mov
xor
jno
jae
std
push
xor
mov
dec
xlat
mov
sbb
sbb
sbb
or
cmp
mov
dec
cld
adc
push
add
fimull
js
fistps
jae
add
jno
mov
subl
push
adc
or
jp
mov
inc
pop
aas
fs
dec
adc
lret
in
in
xor
aam
mov
cmpsl
pop
frndint
xor
lcall
sub
fs
and
rorb
lds
dec
push
lock
jb
sbb
js
dec
dec
add
scas
adc
pop
mov
or
sub
and
loopne
mov
cmp
pop
or
jnp
push
mov
or
addb
sub
push
jne
mov
sbb
nop
cli
mov
icebp
subl
js
sub
xchg
int3
sub
add
pushf
lods
and
jle
jne
in
aam
add
jecxz
popf
rorl
jne
pop
clc
scas
imul
add
mov
loop
pusha
mov
sbb
sbb
daa
fcmovnu
add
pop
pop
xor
adc
push
ja
enter
pop
fisubrl
fiadds
sahf
stc
add
adc
push
and
add
fcomip
sub
add
sub
imul
sbb
fwait
lret
pop
cmp
sub
addb
mov
into
faddl
push
aam
cmp
add
or
adc
xchg
xchg
add
xchg
loopne
mov
push
cmpb
push
xchg
call
jp
dec
mov
pushf
int3
add
popa
iret
out
jb
cld
lea
adc
rolb
sbb
add
xor
xor
scas
sub
inc
add
int3
xor
jno
add
insb
xchg
and
jp
mov
pop
and
cmpsb
xchg
rcl
xchg
mov
fwait
mov
xchg
test
icebp
pop
or
mov
or
mov
adcb
loopne
aas
roll
cmp
data16
or
test
das
push
add
push
ja
mov
xchg
add
sbb
mov
inc
in
pop
push
jbe
add
shl
adc
xor
xor
mov
fcmove
ljmp
test
aaa
fsubp
mov
adc
jmp
in
sub
lock
jmp
jecxz
out
and
push
mov
call
sbb
mov
jg
in
nop
js
stos
xor
cmc
adc
jo
pop
inc
adc
mov
xor
insl
mov
sbb
iret
shl
sahf
sub
mov
dec
xor
bound
mov
lcall
ret
pop
adc
add
aad
inc
mov
and
in
dec
xchg
filds
sub
scas
ret
hlt
and
cmp
mov
or
mov
or
cmpsl
loope
sbb
les
xchg
faddl
mov
xchg
popa
add
push
cld
mov
fwait
mov
imul
mov
insl
jnp
mov
add
cmp
mov
movsb
jb
xchg
pop
xchg
push
xor
adc
aas
xor
add
dec
sahf
add
pop
lds
mov
inc
insl
test
jmp
add
sarl
dec
push
in
lods
jb
add
push
insb
mov
push
add
push
add
cmp
push
pop
push
and
sbb
inc
dec
sub
add
loop
xor
pop
pop
or
daa
xlat
in
add
ret
test
rsm
enter
lea
into
jae
add
pop
and
mov
mov
dec
inc
out
pop
mov
pop
pusha
rcrb
xchg
or
jg
xchg
add
loop
out
pop
mov
push
dec
subb
add
sahf
shll
scas
adc
arpl
jge
add
xor
push
ss
xorl
outsb
sbb
push
cmp
add
mov
fisubrl
mov
ljmp
shll
cmpsl
add
jl
jne
push
inc
mov
add
pavgb
int
std
mov
sti
and
pop
sub
lcall
mov
sub
sub
out
mov
into
xor
jge
cmp
adc
subb
xchg
inc
push
xor
dec
or
mov
or
stc
xchg
or
cmp
add
add
push
fcoml
dec
insl
repnz
xor
jle
xchg
mov
jne
adc
sub
xchg
inc
or
dec
jbe
or
xchg
xor
cmp
lahf
rcl
nop
int3
add
ljmp
repz
mov
das
add
outsl
subl
inc
in
sub
sbb
imul
sub
pop
dec
sbb
add
and
daa
inc
imul
mov
dec
out
inc
lods
sub
push
hlt
in
xor
sti
cmp
test
lret
add
lea
sbb
fdivs
test
add
sbb
ljmp
pusha
clc
pop
push
cs
cmc
xor
sahf
mov
mov
mov
inc
popf
or
fsubl
mov
out
jmp
aad
pop
cmp
xor
repz
cs
mov
add
sahf
push
push
pop
iret
cmp
mov
add
jmp
cmp
call
sbb
jne,pt
rcll
xchg
ljmp
int3
mov
xor
cmp
adc
xchg
icebp
xorl
sub
int
repz
and
pop
xchg
add
in
jp
leave
mov
push
mov
add
fistpll
scas
test
mov
and
jo
jbe
sbb
jno
inc
xor
call
push
cmp
ljmp
add
push
and
leave
xlat
cli
or
push
rol
pop
stos
jne
add
in
movb
push
cmc
outsl
xchg
test
mov
popf
push
xor
out
adc
hlt
prefetch
jns
mov
pusha
std
xorb
fadd
adc
xchg
add
xor
inc
pop
mov
adc
cltd
roll
sbb
ja
sti
mov
pop
mov
add
pop
xor
filds
xchg
cmp
sbb
inc
loopne
inc
xchg
insl
push
clc
sub
add
test
mov
push
jg
mov
jae
in
inc
ja
ret
dec
addb
adc
js
outsb
andl
out
mov
xchg
outsb
inc
pusha
mov
inc
add
dec
test
scas
iret
arpl
add
mov
add
and
or
js
dec
pusha
push
repz
nop
dec
adc
insb
sbb
pop
mov
dec
push
push
add
and
addb
gs
mov
lock
jbe
dec
mov
and
outsb
jnp
lock
mov
rorb
push
outsl
jp
int3
out
add
cmp
push
push
add
ss
clc
mov
add
roll
add
clc
jecxz
xor
adc
add
inc
mov
pop
mov
pop
cmp
enter
mov
in
cmp
adc
jl
and
add
jmp
xchg
cmp
pop
pop
jge
cmp
rcll
fsts
mov
add
jle
in
enter
mov
enter
adc
out
gs
add
stc
cwtl
lret
add
adc
add
push
mov
xchg
data16
loopne
das
adc
scas
nop
mov
pop
pop
movsl
jl
pushf
lock
dec
jge
add
jge
mov
add
mov
push
add
adc
mov
add
cmc
sbb
pop
jns
repnz
lahf
outsb
mov
popf
pushf
and
out
test
call
pop
js
lahf
shll
add
sbb
mov
and
mov
xchg
sub
shl
pop
push
or
cwtl
add
inc
pop
lcall
ret
cmp
push
filds
sbbb
push
push
mov
repnz
xchg
sbb
push
mov
mov
cmpsb
inc
test
xchg
rorl
sbb
mov
lds
mov
sub
fdivrl
lcall
decl
adc
jne
and
negb
adc
inc
in
lcall
push
xchg
les
dec
or
add
jno
aam
push
add
enter
ret
fisubs
pushf
mov
arpl
push
ss
push
dec
dec
dec
jg
loop
push
sbb
cltd
cli
dec
or
loop
add
add
pop
pop
lods
push
mov
jbe
add
data16
sbb
adc
stos
psrad
inc
pop
sahf
clc
test
push
and
xor
clc
pop
enter
shl
jg
xor
pop
jge
arpl
mov
cmp
enter
lret
nop
arpl
pusha
filds
sbb
std
cmp
mov
fstps
cmpsb
sub
aad
movb
lds
mov
stos
inc
clc
push
insb
mov
xlat
adc
int3
in
inc
mov
sub
aas
add
adc
scas
rclb
fsubrs
sbb
add
pusha
mov
rcrl
pop
pop
and
iret
sub
movsb
roll
jl
rcrb
and
push
or
inc
addb
jmp
add
outsl
icebp
popa
mov
sbb
jmp
sarb
mov
test
lret
loopne
mov
insb
add
aam
mov
jne
mov
imul
roll
out
push
mov
je
fisttps
fisubrl
add
dec
jg
cmp
ficoml
subb
daa
fdivrl
sbb
cs
sbb
xor
and
xor
shlb
inc
add
push
mov
pusha
mov
pop
xor
pop
push
jb
mov
jns
push
mov
lcall
pop
not
js
cmp
inc
test
mov
xor
sbb
fsubrs
mov
repz
sub
add
gs
fstp
sbb
addr16
add
jp
insl
adc
add
loope
int
xchg
pop
push
shlb
sub
jno
testb
stc
cmp
loopne
or
leave
cs
push
in
xchg
and
push
add
mov
jl
xchg
jo
stc
add
sub
sbb
add
mov
frndint
add
shlb
xor
add
xchg
jnp
or
add
sbb
mov
cmp
rol
mov
xchg
shlb
pop
insb
out
adc
loope
arpl
clc
push
dec
add
nop
jb
xchg
xchg
cmpsb
jbe
mov
jecxz
loope
sbb
push
cmc
cs
add
xchg
and
das
fmuls
arpl
mov
orb
adc
inc
mov
add
sarl
push
pop
in
and
scas
add
jmp
add
nop
shll
and
add
push
cmova
add
out
shll
fimull
rorb
in
add
xor
adc
incl
cwtl
scas
shll
push
outsb
adc
ret
call
daa
dec
out
aam
pop
add
hlt
pcmpgtb
xchg
lds
mov
cwtl
mov
lods
jp
andb
mov
jns
inc
nop
aam
add
mov
cmpsb
loop
add
add
xor
leave
inc
fistps
dec
mov
enter
push
dec
rclb
int3
popf
or
dec
push
shll
sarl
add
sub
xchg
scas
and
es
cmpb
or
popf
and
adc
fisttpll
or
in
pop
jle
gs
mov
outsl
aas
inc
adc
scas
shlb
ss
sbb
cmp
rcl
sub
add
fiadds
xor
jo
lods
es
and
push
jp
push
lret
mov
movsb
add
pusha
scas
push
or
cltd
test
inc
add
sbb
add
aad
aam
mov
adc
test
lcall
add
xchg
mov
jmp
jns
outsl
sub
mov
dec
cmp
cwtl
lcall
insl
add
add
rol
sub
add
call
or
iret
in
es
add
pop
aaa
cmc
pop
imul
mov
ljmp
popa
xor
cmp
dec
faddl
dec
xchg
add
test
imul
fs
cmpsl
inc
or
jnp
push
test
pusha
pop
xchg
dec
add
pop
mov
rcll
inc
stc
mov
push
mov
aam
cld
sbb
arpl
mov
adc
fidivs
ja
jg
test
int3
subb
into
loop
add
divb
add
daa
add
sarl
xchg
lea
pop
adc
push
lock
push
and
add
aaa
lret
pop
push
bound
adc
pusha
add
mov
aad
aaa
xchg
add
fwait
and
jae
loop
fcomps
mov
add
gs
pop
popa
mov
jle
push
call
inc
mov
add
xchg
fs
push
aas
dec
xchg
push
scas
into
rorb
pusha
xchg
add
gs
mov
adc
jg
mov
rclb
ffree
cltd
into
js
or
or
jae
and
adc
and
add
cwtl
sti
cmp
adcb
test
sub
pop
pushf
outsl
push
add
ret
and
add
or
xor
xorb
xchg
les
imul
push
pop
jae
pop
add
inc
xchg
mov
iret
test
inc
xor
shlb
sahf
jecxz
nop
cwtl
mov
or
xlat
iret
add
mov
popf
inc
andb
inc
cmc
mov
xchg
xchg
mov
jg
and
pop
cld
add
add
fcmovnb
bound
mov
push
add
sub
fisubl
pop
pop
loopne
pop
in
xchg
add
jbe
xchg
add
mov
mov
xor
fldenv
xlat
and
dec
xchg
adc
scas
sbb
push
mov
out
shll
addl
lahf
cld
in
or
push
jb
inc
orb
jle
lods
add
xchg
mov
jmp
adc
dec
pop
ret
add
fldcw
daa
add
adc
enter
cmp
mov
jge
jns
pop
jmp
add
outsb
aas
es
sub
fmulp
out
inc
insb
lcall
enter
adc
add
aad
or
imul
mov
inc
xchg
call
sbb
jbe
add
sti
ss
lods
in
add
dec
mov
es
sub
int3
jo
add
enter
xor
lods
jns
add
sti
pop
std
xchg
and
sbb
xlat
push
out
lret
mov
insl
and
ret
arpl
movl
shrl
sbb
cmp
adc
pop
sbb
sbb
popa
or
inc
add
and
and
out
test
inc
testb
not
jno
push
add
jae
or
mov
addr16
aaa
push
popa
dec
repz
add
out
and
cs
daa
js
addl
jae
add
xor
arpl
jnp
add
hlt
fucom
lret
fdivs
bound
push
js
add
imul
jno
cltd
and
and
and
lods
into
mov
ficoms
mov
push
decl
test
ret
push
pop
mov
cs
mov
push
mov
sbb
adc
repz
xor
jo
inc
outsl
shlb
lds
sarb
push
add
int3
inc
pop
test
cmp
sbb
dec
sbb
add
mov
mov
pop
insb
lods
adcl
pop
add
push
daa
int3
bnd
shr
jbe
xchg
add
and
icebp
aaa
mov
and
int3
mulb
cmp
nop
add
pop
cmc
loop
sub
in
xchg
arpl
jb
add
cmovp
mov
cmc
shr
ds
mov
mov
jno
inc
scas
push
inc
repz
in
push
and
push
mov
xor
stos
adc
xor
movsb
rorb
mov
pop
and
push
push
pop
cmp
and
mov
cmc
xor
mov
cmp
pushf
xor
pop
mov
repnz
sti
loopne
addb
ja
movsl
inc
icebp
popa
jbe
add
repz
fistpl
xchg
mov
sub
aaa
ror
mov
pusha
sub
add
lret
mov
xor
and
ffreep
mov
mov
in
pop
push
mov
out
divb
mov
sarb
pusha
mov
cmpb
and
dec
gs
imul
mov
sarb
negb
inc
push
mov
push
push
push
inc
filds
mov
sbb
adc
add
sbb
stos
lock
jo
sbb
mov
shlb
pop
add
out
and
mov
sbb
rol
jecxz
call
sahf
push
jmp
add
xlat
addl
mov
mov
and
push
adc
push
scas
mov
pusha
push
xchg
mov
mov
jns
mull
out
test
dec
xchg
and
adc
push
fwait
in
mov
jmp
and
mov
aas
out
sbb
mov
loope
add
jecxz
add
neg
addl
scas
xor
add
data16
out
dec
dec
mov
or
pop
inc
add
adc
sbb
pop
sbb
aas
jbe
rcr
fwait
mov
add
xor
ss
in
push
int
incb
jns
ja
cmp
test
inc
xchg
ffreep
mov
testb
xchg
mov
out
cltd
rcll
call
cmp
add
or
mov
test
fs
psadbw
add
jnp
add
lods
push
fnstsw
inc
mov
inc
cmp
mov
orb
outsl
sbb
imul
mov
cmpsl
mov
inc
imul
test
ret
ficomps
enter
ss
add
mov
xchg
sbb
xchg
jnp
mov
cmp
scas
add
pop
pop
mov
sbb
inc
jnp
add
push
xor
into
sub
push
out
icebp
sbb
push
jno
sbb
insl
sbb
add
jne
lock
out
mov
fldenv
cmc
sbb
adc
xor
mov
stos
xor
cmp
sbbb
push
nop
call
in
lods
mov
jbe
popf
add
mov
cmpsb
cmp
int
dec
pop
nop
pushf
add
jae
push
cmp
sub
subb
popa
xchg
cwtl
scas
adc
sub
mov
inc
inc
mov
adc
repnz
in
push
arpl
mov
mov
fstpl
mov
mov
out
testl
add
mov
mov
adc
add
xchg
dec
add
sub
push
push
arpl
rcr
cmpl
loopne
pusha
inc
insb
add
add
or
icebp
xor
dec
rorl
xlat
pop
jno
inc
jl
push
mov
push
pop
leave
cld
daa
adc
jo
scas
test
into
ja
add
mull
rolb
jp
dec
pop
cltd
xor
cmp
inc
mov
adc
lock
ss
insb
mov
jb
in
push
stc
adc
push
adc
cmpsl
mulb
mov
nop
mov
add
jo
sub
sbb
add
and
data16
call
lods
sbb
arpl
or
ja
loop
hlt
clc
add
fiaddl
xor
lret
jo
call
push
mov
add
ror
push
jge
stos
and
push
pop
push
add
xor
aad
mov
dec
xor
popa
inc
jge
mov
sbb
lods
add
jo
arpl
adc
in
jmp
xchg
add
sub
xor
or
mov
jns
out
sbb
cwtl
xchg
les
add
add
add
and
addr16
out
fildl
push
imul
incb
andb
cmp
jne
mov
mov
adc
nop
push
loopne
or
add
leave
mov
cmp
mov
out
add
lods
mov
adc
and
scas
mov
sub
mov
add
cmp
lock
adc
adc
mov
loopne
fistpl
ljmp
sbb
add
in
and
add
flds
xchg
pop
and
mov
stc
bound
es
clc
add
cmc
dec
sub
lds
xchg
push
lock
ret
push
inc
dec
les
xchg
jb
aaa
addr16
inc
pop
hlt
adc
push
adc
pop
lcall
ja
inc
xlat
mov
enter
and
lret
xchg
pusha
push
pop
xlat
mov
js
add
cmpb
inc
lock
sbb
dec
add
fincstp
js
subb
mov
pop
mov
leave
jp
cmpsb
dec
xchg
inc
fldenv
pop
inc
andl
and
loopne
adc
dec
jle
ja
adc
divl
loopne
cmpsl
push
cwtl
daa
add
inc
add
es
rolb
adc
jnp
add
arpl
mov
push
add
fidivl
js
pop
cmp
aad
std
stos
xlat
dec
or
add
sbb
push
cmp
loope
jnp
or
jne
push
dec
sub
sbb
xor
movb
iret
shrb
cmp
mov
or
jno
insl
xchg
arpl
add
xchg
scas
fs
cmp
cmp
xor
mov
lods
add
pusha
ret
in
adc
pop
add
outsb
push
je
mov
test
cld
popf
push
add
ss
in
std
lock
popf
sub
loope
pop
cmovl
add
push
xor
mov
pusha
fwait
add
shlb
popa
daa
lret
gs
jecxz
enter
loop
add
jmp
lock
mov
add
je
out
mov
jo
jns
dec
scas
fsts
fdiv
add
push
imul
jnp
loopne
cmp
addb
movsl
xor
and
pop
in
sbb
mov
in
xlat
lods
mov
add
adc
jp
inc
jge
data16
pop
rcrb
add
insl
dec
sbb
xchg
adc
jl
stos
push
mov
ret
jb
add
ja
loopne
das
ljmp
sbb
mov
pop
sbb
cltd
ja
adc
lret
lods
or
pop
popa
das
mov
shlb
add
aam
inc
cmp
imul
out
fisubs
clc
inc
add
pop
xor
nop
add
dec
lea
test
hlt
loope
scas
scas
test
mov
adc
push
fs
add
xchg
sbb
jno
mov
shrl
pop
mov
ja
aaa
pop
add
daa
mov
loopne
push
repnz
orb
dec
filds
push
jne
add
lods
or
mov
add
loopne
dec
dec
add
push
mov
adcl
push
es
inc
addb
sbb
lods
loopne
dec
test
jne
add
fsubs
xor
ret
add
clc
test
in
add
call
jge
jnp
add
test
jecxz
push
js
xchg
leave
pop
nop
stos
lret
loop
push
adcb
icebp
addb
mov
or
ljmp
arpl
je
popf
fldenv
add
push
pop
xchg
aad
cmp
pop
cmp
rcrl
call
dec
mov
add
add
pop
xlat
add
pop
loopne
fs
xor
add
add
xor
repz
xorl
or
icebp
mov
push
and
es
or
adc
aas
ja
cmpsl
shl
loopne
js
dec
or
in
add
add
sbb
jge
push
add
js
add
ds
push
xchg
out
call
shrb
aas
mov
xchg
sbb
repz
sti
push
push
pusha
add
bswap
dec
jnp
dec
int3
fwait
hlt
rcr
pusha
xlat
add
add
lret
xchg
or
jnp
loope
sahf
xlat
std
adc
mov
adc
dec
subb
pop
xor
inc
pop
mov
push
fsubs
mov
add
sub
push
dec
push
xor
mov
xchg
aam
cmpsl
add
mov
scas
aad
or
inc
loopne
repz
ret
ficomps
loopne
mov
lahf
cmp
add
lods
jne
icebp
inc
lock
pop
pop
push
inc
faddl
loope,pn
stos
xor
cmp
mov
adc
int
jnp
pop
pop
bound
insl
aas
cmp
xchg
pop
dec
mov
mov
xor
or
sub
orb
insb
mov
push
add
mov
xchg
outsl
inc
pusha
or
pop
sub
out
mov
add
xor
adc
scas
hlt
jnp
dec
rorb
push
push
dec
push
mov
scas
jne
add
mov
or
cmp
inc
add
mov
add
stos
loopne
aad
nop
xchg
add
xor
es
jp
iret
and
pop
nop
or
pop
je
fsubrs
mov
add
pop
jle
sbb
mov
test
jbe
add
or
call
sub
add
adc
xor
sbb
push
les
cmp
pop
add
scas
sub
lret
lea
sbbb
sub
mov
aas
out
nop
ret
cmc
mov
add
ja
and
jg
jbe
pop
in
add
ficompl
push
rcll
lcall
inc
testb
int
dec
xor
mov
xor
pusha
ja
cs
sbb
ds
imul
cli
mov
add
pushf
inc
pop
add
xlat
sub
sbb
add
cmpb
sub
sub
dec
pushw
or
mov
addr16
lods
xchg
adc
fwait
xor
or
pop
cmp
sti
add
mov
in
jnp
add
push
insl
add
xchg
das
inc
add
mov
leave
lcall
lahf
and
sub
cld
push
mov
add
mov
add
lcall
mov
add
ss
repz
xchg
jae
dec
mov
xor
sbb
mov
shll
lods
dec
jne
inc
ja
xchg
add
xchg
or
sbb
in
add
jp
push
dec
jnp
scas
dec
jo
add
mov
adcb
lods
fcomps
mov
dec
ret
dec
sbb
cs
mov
adc
mov
add
lcall
lret
loope
xor
push
jl
add
subb
xlat
cmpsl
and
xor
lret
inc
pop
xchg
inc
adc
imul
add
cmp
mov
xchg
ljmp
aaa
lret
sbb
scas
inc
aad
loope
dec
jnp
fs
test
aaa
popl
mov
adc
insb
daa
pop
cltd
cmpsl
mov
sbb
pop
cs
lods
sbb
sbb
cmpb
pushf
iret
outsl
dec
mov
add
push
lahf
lea
mov
push
or
hlt
pushf
lahf
xlat
jns
jne
pop
dec
sub
sub
jno
add
lret
ret
sub
adc
testl
adc
jne
mov
int3
jecxz
cmp
and
add
push
add
adc
cmp
call
pop
pop
cltd
mov
std
imul
bound
add
xor
add
iret
xlat
add
out
mov
sbb
pop
dec
add
push
in
dec
add
mov
cmp
cmpsb
addb
jns
push
xchg
mov
test
gs
pusha
bound
dec
popa
mov
xor
and
cli
or
movl
adc
and
add
cs
push
cwtl
pusha
mov
jecxz
push
pop
inc
add
into
shl
rcrl
das
hlt
rcrl
mov
mov
out
out
adc
add
mov
dec
jecxz
jbe
xor
pusha
and
ja
or
pop
add
lock
add
mov
sti
jmp
into
and
xchg
add
jbe
shl
push
bound
push
shlb
push
mov
dec
add
lret
xchg
jg
mov
sbb
lret
cmp
enter
pop
mov
daa
cs
adc
add
out
scas
cmpb
add
outsl
int
fcmovnb
xorb
je
cmp
adc
add
push
xor
jb
xchg
mov
mov
inc
cmpsl
cmp
add
out
jns
dec
das
cli
fiadds
adc
inc
fists
add
in
inc
and
dec
add
jae
enter
or
mov
std
out
mov
aas
pop
mov
mov
inc
mov
and
lock
and
lret
popa
mov
add
mov
or
inc
call
popa
mov
sub
out
add
idivl
xor
clc
jns
sub
add
mov
ficoms
add
mov
sbbb
shrb
icebp
jo
lret
or
dec
jbe
cs
inc
setb
add
enter
xchg
test
jns
test
mov
push
aas
xorl
clc
popl
idivl
nop
mov
inc
add
pop
push
push
test
addl
dec
xor
or
and
sbb
dec
test
mov
movsl
aaa
xchg
and
jb
mov
popa
pop
push
add
xchg
lcall
add
fistl
add
es
cmc
mov
xor
xchg
stc
add
pop
dec
or
rclb
and
xor
jg
pop
into
add
and
dec
adc
scas
cmc
adc
fimull
pop
and
pushf
lods
test
inc
pop
rcr
xor
push
and
cmp
out
inc
cs
in
and
repz
clc
dec
test
cli
add
sub
sub
adc
and
ss
inc
xchg
sub
mov
mov
out
out
ljmp
xor
std
mov
add
lods
mov
jp
test
sub
jle
add
jle
lods
clc
xchg
adc
adc
pop
xchg
push
fs
mov
insb
popa
icebp
push
jne
lock
or
or
pop
cmp
cmc
dec
xchg
push
dec
jne
push
and
or
add
cmp
dec
jne
cmp
ret
es
add
xlat
fdivrs
aad
push
cmp
testb
clc
mov
pop
pop
lods
rcll
add
mov
icebp
adc
push
xlat
jnp
out
clc
filds
sahf
popf
adc
add
inc
xchg
sub
and
xchg
lahf
mov
test
lea
add
pushl
cmp
push
sub
ds
dec
insb
dec
add
cwtl
push
adc
fistpll
daa
sub
stos
sbb
cmp
cld
add
jnp
movsl
jns
outsl
fldl
pop
push
mov
mov
jae
rolb
in
xlat
lds
jmp
sbb
outsb
int
sbb
add
leave
push
or
add
dec
mov
inc
jge
xlat
fldl
ret
add
pop
dec
pop
push
push
ja
lret
xchg
xchg
mov
dec
jmp
je
add
addr16
adc
pop
cmovbe
ret
mov
sub
mov
jbe
add
mov
xchg
adc
insl
imul
out
adc
push
sti
sar
cwtl
jbe
xchg
add
xchg
jno
and
mov
cmp
pop
push
dec
mov
mov
push
add
push
push
or
sub
loop
stos
mov
cmp
pop
add
int3
dec
lods
jle
pop
mov
popa
adc
mov
add
mov
out
lcall
js
jge
xchg
and
inc
sti
popf
fidivrl
push
clc
add
test
cmp
sub
sbb
repnz
add
cli
xchg
incl
inc
lea
or
rolb
mov
pop
and
jg
push
adc
adc
sbb
xor
mov
sub
add
jo
jg
movb
outsb
add
mov
push
call
mov
subl
add
or
jo
sub
mov
adc
push
mov
and
clc
cmpsb
ds
add
and
xor
jp
sahf
mov
adcb
push
push
mov
add
inc
mov
adc
movsb
aas
dec
cld
adcl
repz
rorl
daa
dec
inc
xchg
sahf
cmp
sub
mov
push
pop
jns,pn
lcall
mov
jmp
shlb
mov
js
and
add
add
mov
and
jne
adc
sub
or
mov
mov
inc
dec
int3
scas
push
dec
outsl
popa
lock
pop
les
pop
cmpsl
insb
popf
mov
and
pop
xchg
aas
repz
inc
cmc
iret
idivb
add
mov
sbb
repnz
add
push
add
mov
xchg
sbb
subb
adc
add
push
hlt
and
int
clc
shl
mov
ds
loopne
mov
jne
mov
or
adc
lock
cmpb
mov
cmp
shrb
popa
fildll
call
add
jo
add
inc
pop
add
stos
aaa
bound
xchg
pushf
pop
cmc
shrb
ljmp
xchg
dec
add
repnz
adc
fisubl
xor
jne
dec
mov
mov
iret
xchg
shr
shrl
ret
push
sub
icebp
rclb
testb
shrb
insb
push
ljmp
rep
xor
arpl
inc
aad
addb
mov
adc
cwtl
sub
pop
jmp
cmpsb
pop
in
int
hlt
sbb
lds
popa
sbb
inc
mov
add
xchg
lret
enter
mov
bound
cmc
pop
mov
rolb
mov
dec
rolb
sarb
cmp
imul
inc
adc
dec
cmp
dec
xchg
scas
stos
add
add
insl
add
sarb
stos
jp
add
pop
fsub
push
push
xchg
test
es
stc
push
out
adc
add
loopne
or
push
and
inc
add
mov
add
call
push
push
test
stos
xchg
jecxz
inc
rol
dec
fwait
sbb
inc
cltd
icebp
add
loope
sbb
adcb
push
outsb
mov
cmp
ds
je
pusha
arpl
cmp
add
xchg
scas
les
pop
sar
ja
sbb
or
push
mov
mov
xor
ret
rcll
add
negb
rcrb
test
push
inc
jns
add
sti
mov
push
outsb
clc
nop
pop
fwait
sub
mov
sahf
lcall
stos
jo
cmp
sbb
jle
and
lds
int
inc
or
cmp
push
loopne
push
add
mov
adc
repz
mov
pop
add
pusha
cmp
xor
cltd
ljmp
jbe
scas
pop
adc
ds
add
xlat
daa
inc
cmp
aad
pop
out
add
out
add
into
jl
clc
mov
in
js,pn
mov
xorb
xchg
lcall
stos
add
out
and
jmp
pop
mov
js
xchg
cmp
popf
insl
pop
xchg
fcoml
popa
cwtl
mov
sub
lods
xchg
pusha
cltd
add
pop
scas
pushf
cmp
mov
sub
daa
push
add
push
in
pop
cltd
adc
mov
les
mov
bound
cld
pop
or
push
pop
aad
mov
leave
xor
inc
into
out
add
push
imul
loop
pop
dec
add
mov
fucomip
adc
and
cld
mov
jne
add
into
pop
pop
add
pop
call
adc
ds
push
call
adcl
aas
mov
lret
sbb
mov
fidivrl
jg
in
ds
add
xchg
jl
movsl
hlt
push
or
pusha
insl
inc
ficomps
sbb
pop
test
out
add
or
pop
add
sub
sbbb
ja
iret
clc
push
mov
mov
imul
xchg
add
jae
in
add
xchg
add
mov
xchg
repnz
add
mov
push
push
and
repz
add
inc
push
add
jmp
jbe
xor
out
addr16
add
pop
dec
mov
subb
add
insb
add
pop
mov
pop
push
xchg
sbb
mov
add
addr16
pop
fcmove
add
inc
bound
rorb
fcom
sub
xor
xor
loopne
addb
mov
andb
hlt
lret
add
adc
push
push
call
and
xchg
mov
inc
out
ds
add
test
ss
add
mov
repnz
stos
sbb
ja
popa
imul
fidivrs
add
cmpsb
movl
xor
jecxz
mov
cwtl
add
fabs
and
int
sbb
fs
push
lret
mov
sbb
adc
mov
add
shrl
mov
sbb
xchg
inc
leave
scas
xchg
mov
decb
xor
iret
push
filds
call
movsb
ss
mov
aam
call
add
push
outsb
cmpsb
push
inc
addb
js
add
repnz
or
imul
dec
test
and
sbb
add
mov
cmp
aaa
push
cltd
and
ret
jg
jbe
mov
xchg
push
mov
sbb
cli
sti
add
adc
adc
add
pop
xchg
adc
popf
lds
and
mov
pop
call
jl
shufps
add
je
push
add
inc
frstor
pop
mov
push
adc
shl
icebp
repnz
mulb
pcmpeqw
xchg
call
add
sbb
scas
add
pop
stos
add
mov
and
fs
mov
addb
sbb
add
push
jnp,pn
sbb
cmp
cmc
arpl
add
sbb
mov
adcb
or
mov
adc
call
push
stc
push
mov
bound
adc
inc
cld
lods
cmpsb
inc
jae
aad
mov
fisttpl
inc
mov
mov
roll
mov
and
nop
fidivrs
out
dec
enter
sbb
cwtl
stc
xchg
add
jmp
mov
mov
cmp
mov
add
bound
and
push
negl
nop
sbb
in
imul
das
xchg
xor
fs
add
add
les
jbe
sbb
dec
sbb
adc
lods
sbb
les
mov
dec
adc
stos
call
add
inc
mov
inc
ror
or
jle
mov
mov
mov
mov
mov
filds
adc
and
and
inc
aaa
or
scas
inc
adc
add
push
pushf
add
arpl
hlt
sbb
add
lahf
pcmpeqb
jae
add
push
leave
outsb
or
and
add
fstpl
xlat
arpl
shlb
pushf
push
in
xor
pop
pop
xchg
js
mov
mov
es
pop
cld
push
jo
cwtl
push
pop
cli
sub
jge
push
std
lret
pop
cmpsb
mov
mov
adc
inc
mov
adc
add
test
sbb
push
ljmp
aaa
xchg
sbb
and
mov
sub
push
inc
aad
xchg
pop
pop
mov
sbb
pop
mov
add
add
add
mov
mov
addr16
xchg
dec
adc
mov
xorl
mov
popf
sub
in
add
nop
lret
mov
inc
sahf
push
sbb
xor
les
out
mov
add
mov
push
add
sub
sti
dec
insl
rolb
call
jno
les
inc
fnsave
fcmovb
inc
nop/reserved
xchg
loope
xor
add
dec
negb
jne
add
fcoml
cmp
adc
inc
arpl
add
sbb
pop
scas
jmp
add
cwtl
mov
add
sti
loopne
outsb
jo
je
pop
iret
sub
adc
mov
mov
lar
cli
and
jle
sbb
ret
xchg
insl
jmp
mov
add
dec
xor
mov
jmp
mov
xchg
in
stc
adc
and
add
add
cmp
jge
movsl
mov
xchg
loop
xchg
scas
stos
test
pop
xlat
call
fiaddl
jp
or
fstpl
add
fisttpl
imul
int3
ja
pop
test
test
add
in
aad
sbbb
movl
sub
inc
mov
or
rol
mov
add
ss
sub
jge
add
mov
out
test
push
insl
add
add
in
mov
adc
or
cwtl
pop
outsl
insb
fdivrs
xchg
and
dec
daa
mov
and
mov
add
mov
lds
test
mov
jae
add
mov
mov
int
imul
jl
dec
jmp
sub
xor
clc
push
xchg
outsl
inc
mov
dec
inc
js
add
xchg
add
dec
push
pushf
punpckhbw
inc
inc
mulb
xchg
add
mov
dec
pop
add
std
gs
ds
push
add
sbb
add
adc
xor
clc
iret
pusha
rcrl
mov
imul
test
aas
mov
jp
sub
divb
std
cmp
xor
pop
lret
add
mov
fcmovne
mov
cmp
jns
sahf
push
lock
std
xchg
mov
mov
pusha
cmp
add
inc
daa
jl
dec
mov
dec
rcll
add
ficoms
lret
mov
fwait
and
aad
xchg
add
lock
in
test
push
xchg
test
cs
add
and
outsb
test
pop
add
rcrl
andb
add
push
les
cmc
push
in
repz
and
add
adc
fcomps
and
les
mov
lods
orl
sub
insl
testl
mov
xor
cmp
pushf
mov
mov
sarb
xchg
out
and
enter
xchg
fiaddl
add
cmpsb
dec
xor
push
add
pop
movb
push
insl
iret
arpl
push
ret
sbb
rcr
lahf
fdivrs
add
dec
pop
xchg
pop
rcr
popa
xchg
add
sbb
rolb
add
adc
je
mov
and
cmp
inc
pop
pushl
imul
shlb
push
mov
cmp
mov
scas
add
cmp
sahf
shlb
pop
les
loopne
or
bound
cmpl
jbe
jl
or
inc
rcrb
push
push
loopne
pop
xor
mov
or
add
cmp
dec
inc
and
sub
adc
ljmp
add
js
ljmp
add
pop
mov
mov
iret
add
arpl
lock
push
add
aad
sub
hlt
rcrb
pusha
cmp
cwtl
adc
pop
shr
sub
xor
clc
xor
aam
sbb
cmc
movsb
or
add
push
scas
sahf
mov
fcoml
leave
insb
inc
jl
add
js
les
mov
pop
flds
clc
mov
xchg
cmp
jbe
add
out
insb
add
imul
sahf
outsb
mov
add
or
pop
add
sbb
add
push
xchg
out
add
nop
mov
outsl
mov
inc
push
sbb
and
push
leave
sub
mov
mov
cmp
or
add
mov
pop
mov
add
int3
rcrb
mov
dec
mov
pop
popa
outsl
push
sub
lods
add
add
fsts
mov
test
cwtl
xor
les
sbb
movq
or
rcl
add
repz
inc
mov
adc
mov
add
stos
pop
sub
loopne,pn
aad
add
add
pop
pop
mov
add
je
int3
sbb
rclb
loop
add
arpl
stos
imul
and
mov
in
pop
aas
std
test
jp
cmpsb
xor
inc
andl
loope
jb,pn
sub
mov
idiv
pop
rcr
push
pusha
fcmovnb
mov
jb
fwait
cld
and
add
add
jge
ss
mov
add
adc
addl
sti
das
hlt
push
add
cmp
lret
mov
jle
in
or
outsb
fistpl
shlb
add
test
rcr
pop
adc
mov
in
add
clc
xor
pop
push
xchg
xchg
sbb
push
mov
lcall
xchg
xorb
mov
popf
sbb
push
aad
inc
and
enter
outsb
dec
nop
enter
int
fsubr
mov
int3
loop
jecxz
dec
enter
push
dec
lret
and
push
loopne
pop
notb
inc
dec
push
pop
nop
mov
mov
addl
pop
arpl
subb
popa
add
adc
push
add
movb
scas
xchg
jge
sub
dec
xor
pop
movsb
insl
mov
mov
lock
pusha
or
push
fs
fwait
mov
cmp
add
sub
loopne
add
es
incl
dec
cltd
icebp
push
je
or
dec
xchg
sar
cmp
add
icebp
fimull
cmpb
dec
add
loopne
popl
test
sub
cs
stos
add
push
pop
lds
lea
sbb
push
sbb
jae
imul
push
add
rolb
add
jecxz
ljmp
pop
add
ret
add
pop
mov
inc
jo
add
std
pop
es
pop
mov
or
cltd
jns
add
fdivp
pop
sahf
mov
out
pop
rorb
jb
or
jno
add
xor
insl
or
lret
mov
dec
pop
cli
data16
imul
rolb
lds
dec
add
stos
mov
stc
mov
push
rolb
je
ret
add
movsb
add
call
pusha
cmp
popf
mov
insl
dec
sti
pop
xchg
adcl
jecxz
add
jbe
pop
add
enter
xor
pop
or
aas
ljmp
jo
add
shll
scas
add
push
dec
mov
ss
adc
loopne
enter
lahf
lods
int
ret
clc
rolb
mov
cmp
add
or
pop
enter
repz
pop
cmpsb
cld
aam
in
jl
adc
add
dec
leave
pop
subb
dec
cmpsl
imul
pop
mov
mov
adc
or
sub
jg
sub
cmp
add
sub
mov
sbb
lret
stos
out
cmp
imul
xor
cltd
faddl
cmp
cld
mov
push
ljmp
mov
in
mov
cmc
cmpsl
adc
sbb
cli
out
add
aam
pop
aad
and
xchg
sub
cmpsl
push
inc
fildl
test
lock
arpl
je
sar
repz
add
iret
mov
rcrb
and
and
mov
fnstcw
xor
add
test
mov
adc
lret
sbb
ljmp
jl
les
outsl
adc
leave
lods
push
mov
cmpsb
repnz
xchg
push
out
add
pop
add
dec
xchg
test
and
in
push
add
sub
rcrb
lods
and
loop
pusha
les
lock
movsl
push
add
dec
push
pop
rol
lods
xchg
loop
add
cmpsl
lret
fsts
loope
pop
adc
xor
je
pusha
mov
inc
mov
in
rorb
dec
cs
cbtw
add
inc
lods
je
rcr
nop
mov
bound
and
in
cld
push
ljmp
subb
push
addr16
in
int
cmc
out
in
xlat
fmuls
push
push
pop
shrl
pushf
xor
cmp
pusha
test
cmp
or
push
pop
movsb
adc
add
repnz
cmc
jb
out
pop
fisttpll
stos
push
pusha
inc
xchg
pop
mov
adc
pop
cmc
push
pushf
ficoms
lock
cmpsb
subl
jno
mov
mov
testl
cmp
mov
mov
cmp
add
push
out
or
jbe
jae
pop
sub
popa
xor
fs
xor
ret
stos
sub
repnz
mov
inc
lahf
add
cltd
add
stc
xchg
test
test
push
add
push
dec
xorl
imul
push
dec
cmp
decl
shl
jno
int3
mov
rclb
mov
lods
mov
ljmp
mov
mov
cmc
add
cmpb
add
dec
stc
clc
pop
xchg
call
mov
jne
daa
rcrb
mov
inc
add
dec
xlat
outsb
add
add
and
mov
sbb
cld
sub
fchs
adc
cmpsl
inc
lods
pusha
mov
rol
sub
and
mov
lea
add
aaa
fldl
les
jno
out
insl
add
clc
bound
imul
push
pause
jl
sub
and
scas
push
push
and
jo
sti
in
lret
push
sub
fld1
add
int3
lds
dec
push
nop
add
lods
sub
or
outsl
add
aam
in
idiv
inc
inc
sub
lds
icebp
inc
inc
cmp
adc
jno
dec
add
es
ret
call
imul
daa
call
imul
std
stos
test
and
add
adc
push
jmp
rolb
loope
mov
or
dec
or
lea
mov
and
adc
icebp
sbb
pop
insl
push
int
adc
rcr
sbb
inc
fisttps
arpl
inc
cmp
mov
pop
dec
fldt
enter
repnz
lret
mov
and
add
in
leave
inc
inc
cmp
addb
lods
push
add
mov
or
cmp
ja
loopne
inc
inc
enter
pusha
jge
jb
fcoml
add
mov
imul
outsl
addr16
pop
lock
push
mov
inc
add
add
pop
lret
sahf
push
pusha
xor
rol
jl
lods
push
lods
lock
aad
dec
sub
add
xchg
jns
push
dec
mov
andb
addl
or
cwtl
and
ss
mov
stc
jne
pop
daa
cld
dec
js
add
or
std
pop
adc
cld
and
sti
jo
dec
sub
push
jns
or
and
add
decl
clc
add
daa
push
mov
pushf
enter
xchg
repnz
iret
add
and
mov
es
add
jecxz
fcompl
mov
cltd
sub
hlt
jmp
loopne
cwtl
jecxz
clc
add
daa
ret
jge
add
aas
sub
add
jb
pop
packssdw
clc
rolb
outsl
add
mov
pop
pop
mov
xchg
xor
push
push
jb
adc
loopne
mov
xchg
repz
sti
adc
ljmp
sub
in
fdivr
testb
jmp
xorl
add
aas
cmpsl
out
xchg
add
push
inc
js
xor
adc
inc
in
repnz
or
push
add
fldenv
sbb
in
push
lock
add
sub
ljmp
into
movsl
jp
mov
mov
push
imul
adc
mov
mov
and
sbb
or
and
sub
mov
xchg
push
cmc
or
loope
rorb
pmaxsw
cmp
jbe
es
or
sub
add
sbb
sub
sarl
ljmp
push
test
lds
pop
in
lret
add
jbe
ljmp
mov
mov
pop
xor
add
or
fidivrl
add
sub
sub
mov
mov
adc
push
xchg
out
adc
aam
int3
adc
fadds
mov
insb
pop
ret
add
mov
mov
xchg
loopne
add
mov
jbe
sub
inc
mov
xchg
mov
dec
push
in
push
loop
pop
push
loopne
cmpsl
cmp
xor
insl
add
adc
add
xlat
and
cmp
or
fstl
es
loope
jb
add
movsl
rorb
cmp
xor
mov
test
add
or
pop
aad
fadd
cmovns
cltd
xor
test
sbbl
call
cmp
enter
inc
es
mov
repnz
mov
sbb
call
mov
jle
pop
cmp
or
bound
add
inc
ret
pop
mov
add
adc
ret
add
sbb
sbb
out
jmp
hlt
add
insb
jo
push
push
imul
enter
add
popf
xchg
and
cmp
gs
std
inc
inc
push
add
stc
and
lcall
mov
mov
sbb
mov
cld
pop
cwtl
add
mov
inc
inc
xchg
lret
loopne
aad
cmp
jge
call
mov
fsubrs
cmp
outsb
lcall
and
inc
fildl
add
int
jns
jp
in
add
inc
jnp
add
cwtl
outsb
out
jno
xor
mov
rclb
addl
int3
jne
movsl
jbe
xchg
add
lods
inc
xor
add
cmp
cmp
and
push
add
movsl
inc
cmp
fildl
dec
insl
add
mov
cmp
sub
in
mov
daa
subb
adc
jne
add
xor
cmp
repz
test
js
add
lods
leave
xchg
and
addl
cmp
call
insb
add
cmp
xchg
add
inc
add
lods
mov
cmp
mov
inc
cs
xchg
mov
clc
nop
mov
js
jle
icebp
cmc
rcrl
add
movsb
outsb
add
or
xlat
cltd
adc
movsl
sbb
add
mov
jl
enter
dec
push
imul
jmp
sbb
cmp
lock
int3
add
adcb
imul
add
mov
loop
ljmp
cltd
orb
lahf
cmp
aam
and
repz
jl
lods
mov
shlb
int3
add
mov
fstl
mov
fstpt
nop
pusha
pop
push
mov
add
xor
aas
pop
lea
pop
mov
jnp
dec
add
in
add
fcmovb
mov
pusha
lcall
dec
mov
add
shlb
mov
xor
add
jge
add
repnz
and
aaa
outsl
xor
es
fs
xchg
test
cmpsl
lds
bound
pop
and
pop
add
or
je
xor
shlb
or
pop
push
xchg
xchg
sbb
add
imul
push
fbstp
movsl
popa
insl
inc
jmp
jmp
add
xor
and
jnp
push
mov
mov
dec
or
push
add
add
inc
inc
cwtl
test
cmc
mov
add
mov
mov
pop
fiaddl
int
std
outsb
adc
and
rol
add
neg
jae
add
pop
adc
out
rorb
stc
mov
out
add
mov
jle
popf
mov
in
fadds
subl
sbb
hlt
mov
btl
mov
lods
dec
repz
lahf
push
clc
aas
push
adc
rorb
notl
stos
or
add
lea
mov
dec
mov
add
out
and
imul
push
add
xchg
mov
push
xor
mov
sbb
dec
mov
mov
xchg
and
adc
scas
xor
lret
add
out
and
inc
mov
add
mov
test
test
jb
cmp
lahf
add
jno
fnstsw
xor
pop
adc
add
xchg
stc
pop
push
xchg
es
sbb
push
and
add
mov
in
adc
fstl
adc
sbb
pop
test
leave
pusha
mov
je
cmp
or
out
push
adc
mov
xor
add
sub
clc
jne
fisubs
das
daa
sub
cmp
loop
inc
lahf
xchg
sbb
mov
push
into
dec
loopne
jge
or
pop
push
sahf
rcr
pusha
loopne
mov
sbb
lods
cmp
add
mov
arpl
clc
or
hlt
mov
sbb
and
lea
push
pop
push
cmp
pop
push
add
imul
add
sub
pop
add
dec
ljmp
fiaddl
pop
and
out
js
sub
jl
leave
out
add
mov
adc
mov
xchg
repnz
and
add
or
stos
aaa
add
mov
push
orl
nop
inc
fldenv
cmp
mov
jp
inc
loopne
nop
mov
mov
add
jae
pop
mov
addr16
enter
dec
std
jmp
frstor
sub
inc
mov
sub
sbb
add
mov
arpl
inc
lds
or
enter
test
orb
jbe
pushf
rolb
das
dec
rcrb
std
mov
mov
add
mov
mov
nop
lock
enter
loop
push
dec
push
inc
xchg
mov
sub
test
movsb
ss
jne
or
push
sti
out
pop
pop
lret
cmc
sub
aaa
jp
repz
pop
mov
and
push
aas
cmp
aam
push
adc
es
es
cmp
pop
das
push
dec
mov
pop
inc
mov
mov
add
add
ret
cwtl
rcrl
out
xlat
mov
pushf
and
add
inc
pop
sahf
add
popa
sub
push
xor
add
sub
arpl
enter
add
pop
in
test
sti
sbb
dec
xchg
adc
imul
pop
mov
hlt
add
es
mov
insb
lret
add
les
dec
pop
mov
push
mov
pop
inc
cld
insb
mov
repz
sbb
add
dec
mov
or
in
push
leave
add
push
xor
ret
and
add
out
daa
add
inc
sbb
pushl
jne
mov
loope
iret
cmp
inc
test
sub
sbb
fistps
lret
add
inc
cmp
jbe
cwtl
test
rclb
dec
or
sbb
sub
xor
loopne
das
jle
adc
sub
jno
decl
rorl
in
mov
mov
add
ret
movsl
and
flds
loope
in
out
fwait
or
pop
insb
pop
add
or
repz
add
adc
rorb
pop
sahf
or
push
cmp
sbb
sub
loopne
sub
add
and
popf
push
mov
jns
adc
xchg
mov
push
or
jnp
and
es
adc
pusha
pop
jo
push
or
dec
add
mov
fnsave
sbb
dec
pop
jle
pop
cltd
or
cmp
and
push
push
rcll
jge
mov
daa
hlt
hlt
mov
shr
ficoml
pop
add
pop
or
nop
dec
fwait
pushf
add
jb
test
mov
add
xchg
sbb
mov
pop
mov
fmull
add
test
je
repnz
insl
mov
or
ja
rorb
addl
aaa
add
in
repnz
dec
inc
xor
mov
inc
dec
into
push
pop
jg
loopne
cld
loopne
pop
mov
jle
add
insb
arpl
push
adc
and
xchg
insl
sub
pop
cmp
pusha
or
push
push
aad
and
call
ja
je
cmp
mov
lock
imul
loope
dec
mov
out
shll
test
add
imul
leave
fldl
das
push
push
inc
add
dec
or
cmp
lahf
pop
add
xor
mov
dec
les
add
fsubrl
xchg
in
add
or
xchg
in
test
mov
push
lahf
adc
mov
sbb
push
aam
push
mov
jl
fmull
add
adcb
jge
les
mov
xor
lock
xchg
jo
nop
pop
je
mov
cld
sbb
push
adcb
push
test
repz
xor
rcl
imul
cmp
or
pop
sbb
dec
fbstp
js
aas
cmpsl
dec
fsub
clc
movsl
xchg
ret
add
or
xorb
shrb
jno
add
pop
lock
sbb
js
mov
jl
cmp
xor
xchg
jp
sbb
add
addr16
xchg
loopne
insl
xor
dec
imul
jo
cmp
or
outsl
pop
inc
pushw
rclb
jne
icebp
std
sbb
jo
lods
mov
aad
int3
add
stos
dec
testb
cmpsb
iret
xchg
call
add
fwait
stos
ja
pusha
dec
aam
and
lock
mov
lods
push
xor
test
jle
add
or
cmp
mov
pop
cld
sbb
sub
sub
scas
push
cmp
mov
mov
add
xchg
and
imulb
xor
cmpsl
lret
movsl
push
push
cwtl
mov
push
js
aad
xor
xor
adc
add
inc
mov
addb
or
in
mov
push
fmuls
add
push
xchg
cmc
shll
cltd
lret
inc
add
pop
inc
rolb
pushf
stc
pminsw
xchg
mov
or
lock
test
xor
enter
sub
push
add
mov
pusha
pop
das
mov
sbb
or
inc
add
pusha
stos
mov
cltd
repnz
aaa
repz
adc
fists
jecxz
add
enter
dec
insl
add
xchg
cwtl
add
and
loop
lea
xlat
dec
iret
int3
xor
xchg
test
bound
mov
loope
fidivl
or
mov
out
loopne
and
add
adc
inc
bound
sbb
sub
inc
mov
push
jmp
jo
adc
cmp
clc
xchg
jge
ret
sbb
jnp
lods
fwait
loop
add
mov
inc
pop
adc
add
aaa
and
roll
cld
aam
dec
ljmp
mov
outsb
fimuls
xchg
pop
lds
sbb
ficoms
pop
dec
cmc
int
mov
aas
and
lret
mov
mov
repz
xor
or
dec
add
lahf
push
inc
mov
xchg
les
call
push
insl
xchg
and
stos
add
repnz
mov
iret
add
add
aaa
add
and
push
rcrl
xor
jbe
jle
cmp
push
movsb
sub
out
inc
lods
aas
add
add
jnp
sbb
xlat
sahf
test
stc
js
and
addb
sub
inc
orb
inc
hlt
xchg
icebp
add
xor
shll
push
loope
cmp
jne
xor
inc
pop
fimull
fwait
sbb
mov
divl
xchg
add
mov
jl
jecxz
adc
out
loopne
or
test
hlt
fiaddl
mov
or
sarb
push
cmp
jns
cmpsb
add
push
test
stos
mov
add
loope
xchg
outsb
fisubrl
or
inc
sbb
dec
sbb
std
repz
aam
dec
or
mov
xchg
dec
jae
dec
rcll
mov
adc
std
je
add
pop
jmp
out
add
xchg
sub
inc
repz
in
clc
push
add
icebp
gs
mov
sub
add
sbbl
flds
cld
inc
addr16
pop
cmp
mov
dec
sub
out
dec
sbb
pop
xor
add
add
testl
push
push
loopne
or
nop
add
out
imul
sti
lods
add
inc
bound
add
fsubl
sahf
cmp
jmp
std
adc
sahf
pop
addr16
mov
pusha
sbb
sbb
lods
fcoms
adc
repz
in
incb
sbb
push
ja
sub
flds
mov
xchg
int3
push
cs
in
xchg
test
popa
out
add
repz
xchg
cmp
mov
jg
mov
or
fmuls
dec
fsts
loope
adc
inc
or
dec
rcll
pop
iret
xor
inc
cmp
and
add
dec
xchg
add
mov
pop
or
ret
ljmp
jo
sbb
lods
cmpsl
or
je
loopne
cwtl
inc
add
call
imul
lock
jne
pop
xor
sbb
test
data16
ljmp
pop
add
daa
into
ljmp
ret
or
mov
mov
iret
cwtl
mov
xchg
daa
xor
pop
imul
push
repz
xor
into
sub
dec
add
ja
cltd
or
and
cld
lock
sbb
or
jg
into
shll
subb
arpl
or
lock
hlt
orl
data16
insb
add
sub
jg
adc
and
xlat
mov
xchg
stos
mov
lcall
add
add
dec
outsl
rcr
add
mull
call
sub
push
mov
addl
mov
jo
stos
add
cmp
lret
mov
roll
es
sbb
inc
jns
ja
out
inc
add
std
xchg
in
or
add
cs
xor
add
mov
cmpb
test
jecxz
mov
add
call
sti
xor
mov
aas
das
imul
scas
add
add
inc
or
or
add
jbe
xor
mov
push
outsl
ret
inc
clc
inc
into
leave
add
les
cmp
shlb
mov
lds
add
divl
imul
in
mov
sub
popfw
xchg
sar
or
sbb
mov
dec
addl
jae
add
push
ja
add
mov
subb
mov
push
incb
shlb
or
sub
pusha
jno
xchg
mov
mov
mov
add
or
push
pop
add
add
xor
lea
loopne
call
cli
fisttps
xor
push
or
add
fnsave
pop
out
dec
mov
mov
aaa
cld
pop
add
xor
xorb
or
add
cmp
inc
mov
data16
jb
in
popf
add
add
pop
cwtl
data16
xor
cmp
into
adcb
cmp
enterw
xchg
add
movl
mov
sti
push
add
jp
fdivl
insl
mov
mov
sbb
jg
add
inc
sbb
adc
addb
add
and
sub
jo
push
sub
mov
add
sarl
popl
fmul
popf
aaa
push
test
loop
int3
mov
inc
jne
mov
mov
cs
outsl
mov
bswap
add
push
xchg
rcrb
out
jno
add
jnp
into
and
cltd
out
sbb
sbb
pop
push
inc
lgdtl
or
pop
jne
push
pusha
push
adc
aaa
pop
add
push
je
cmp
jne
inc
in
out
in
rolb
and
test
sbb
ret
into
xlat
mov
insl
scas
xor
add
mov
in
sbb
negb
andb
mov
xor
xlat
mov
aas
js
sahf
in
add
mov
dec
add
cmc
push
add
xchg
fwait
test
dec
out
aaa
xor
inc
push
loopne
mov
xchg
test
in
sub
out
movb
ret
xor
jmp
inc
addl
cmp
outsb
add
sahf
add
repz
aad
cmp
mov
dec
add
xor
dec
imulb
or
cmp
push
cwtl
movsb
in
add
loope
shll
cli
add
xchg
sbb
or
jmp
out
or
test
call
movsb
jne
add
adc
xlat
aas
or
mov
inc
cmp
subb
push
mov
ss
mov
pushf
and
xchg
adc
mov
cmp
add
cltd
adc
add
stos
add
add
xlat
jnp
cwtl
xchg
cs
push
xor
xchg
sub
roll
push
push
ja
leave
jmp
mov
cmp
js
movntps
push
inc
pusha
inc
push
mov
stos
add
add
cmp
xchg
adc
cmpsb
and
into
sub
fsubl
mov
aam
js
add
hlt
adc
mov
or
mov
les
enter
in
add
push
into
shlb
adc
loop
ja
movsb
nop
dec
sub
add
xchg
xor
jp
sub
fimull
std
out
nop
cmpb
push
stos
or
clc
shlb
xchg
sahf
add
movsl
bound
dec
add
jp
push
sub
and
mov
push
repnz
mov
add
inc
push
add
and
push
ds
cld
xor
xor
dec
add
movsb
push
and
push
movsl
mov
add
sbb
push
add
and
mov
xor
and
inc
add
sub
add
jnp
cmc
mov
inc
dec
push
popa
add
adc
imul
adc
nop
fbld
pusha
mov
sub
cmp
rcr
sbb
or
xchg
and
sbb
fs
mov
dec
push
loopne
cmp
add
mov
pop
es
inc
or
add
imul
adc
dec
push
lods
xchg
std
add
pop
mov
aam
cli
cmp
jge
push
bound
add
repz
adc
dec
mov
les
cltd
push
scas
ret
or
sub
roll
push
lds
sbb
mov
mov
pop
add
cmp
int3
sbb
push
ss
cld
jp
js
add
rclb
inc
mull
fsubs
pop
inc
add
cmp
rcrl
xor
stos
popf
dec
inc
push
push
and
lods
wbinvd
adc
sbb
mov
rolb
jne
pusha
mov
mov
in
sti
les
jp
in
scas
push
std
push
cs
lcall
lds
xchg
xorb
pop
cmpsl
out
add
mov
mov
pop
xchg
flds
rcll
pop
lret
lods
add
clc
mov
mov
or
lds
addr16
inc
fimull
loop
mov
testl
add
dec
add
cmc
dec
add
movq
or
cmpsl
bound
outsl
lcall
aas
mov
add
out
adc
xchg
aam
pop
add
test
or
clc
xor
cld
add
mov
add
or
dec
add
jo
sbb
cmp
inc
xchg
or
out
repz
add
mov
pop
xchg
out
sub
and
adc
sub
pop
jne
test
xchg
mov
add
out
mov
popa
daa
outsb
inc
sbb
sahf
nop
add
adc
inc
mov
mov
scas
pushf
rolb
ret
repz
pop
out
aas
test
adc
adc
jns
aad
test
fildl
and
bound
sbb
add
xor
popa
pop
repz
fimuls
adc
xchg
fidivrl
pop
and
in
pop
adc
cmp
into
add
cld
add
jns
outsl
add
stos
lret
mov
insb
add
adc
iret
jbe
or
stc
shrl
add
loope
orl
xor
imul
add
add
sbb
xchg
lds
and
pop
rolb
loope
inc
test
test
int3
mov
add
pop
movsb
int
cmp
add
adc
sti
add
push
insl
add
or
cmp
lcall
popf
addl
je
add
dec
or
add
xchg
fs
and
sbb
in
out
ffreep
dec
aad
negl
lret
popl
and
mov
xchg
in
jo
dec
add
ret
movsl
roll
gs
mov
enter
shlb
dec
lahf
movsl
push
sbb
je
mov
sub
loop
out
sarb
test
xchg
add
jne
insb
and
aad
push
addb
or
jne
xchg
mov
pop
xchg
clc
jbe
addl
rclb
xor
jno
insl
mov
lea
cmp
jo
pop
push
imul
mov
sahf
push
mov
sbb
fbld
aam
negb
jae
iret
shl
fwait
imul
pop
cld
bound
cs
cmp
mov
mov
sti
xchg
std
mov
or
push
cmp
xor
cs
adc
push
mov
sub
into
mov
les
out
cli
adc
inc
fwait
inc
rcrl
dec
pop
jle
xchg
movsb
sbb
fdivs
aas
cmp
jns
cmpsl
inc
add
add
jmp
inc
inc
or
orb
rolb
and
hlt
icebp
lods
push
lret
pop
insl
out
mov
and
cmpsb
insb
xchg
pop
addb
cs
je
mov
lcall
scas
in
cmp
cmp
and
mov
inc
sub
mov
mov
stos
add
test
mov
xchg
mov
push
mov
rorl
or
and
shll
sbb
imul
enter
xlat
aam
rorb
mov
sub
pop
call
mov
mov
mov
es
cmp
aas
cmp
jns
rclb
push
mov
sbb
jge
or
push
in
add
rorb
and
add
mov
jns
setns
loop
sub
fildl
sub
xchg
out
push
xorl
add
je
int
mov
aas
loopne
and
push
or
sub
push
mov
lcall
pop
add
fildll
add
and
imul
scas
or
cmp
stc
das
aad
fcoml
fidivs
push
mov
out
push
arpl
xor
das
fdivr
out
imull
lea
push
xchg
sub
popa
in
xchg
cmc
add
lods
stos
movsl
adc
push
repnz
popa
adc
dec
inc
fwait
xor
je
aas
mov
jg
sub
and
lcall
push
pop
nop
xchg
adcb
jno
push
rcrb
cmp
add
pop
movq
fisubrl
pop
pop
ds
jns
popf
stos
pushf
lcall
out
lods
pop
jl
dec
sbb
push
mov
pop
push
std
ljmp
outsb
or
cmp
xor
in
popf
fstp
inc
or
sub
pop
ljmp
lret
repnz
lahf
cmp
mov
js
cltd
add
ss
fwait
add
mov
mov
add
mov
add
std
add
mov
xor
enter
push
dec
jmp
add
repz
sbb
xorb
cmpsb
in
pop
inc
or
pop
or
push
js
in
push
outsb
sbb
cmp
shrb
rcr
add
lcall
idivl
cmp
nop
xchg
sbb
mov
xor
pcmpgtd
adc
pop
outsb
pusha
in
or
add
scas
cld
dec
cmp
loope
adcb
pusha
sub
clc
push
jge
push
outsb
ds
add
cld
sbb
xlat
mov
mov
fistps
add
in
lret
push
notl
loopne
sbb
pop
xchg
add
sbb
add
mov
nop
jle
dec
mull
insb
pop
push
pop
cmp
imul
dec
rolb
mov
xor
mov
fadds
jge
faddl
adc
and
lret
popa
dec
inc
xor
gs
push
inc
scas
mov
lea
mov
mov
cmp
add
mov
pop
cmp
add
push
cmp
add
js
or
or
sar
and
add
pop
test
ror
jp
add
mov
jo
daa
fdivr
mov
or
add
cmp
push
mov
or
push
add
shll
pop
icebp
inc
ja
xor
jae
push
push
test
data16
ret
sbbb
inc
xchg
into
cmp
lcall
cmp
inc
aas
clc
pop
xlat
orb
ds
mov
mov
je
add
xor
adc
add
sbb
out
add
inc
add
rorb
mov
pop
mov
enter
add
sbb
nop
arpl
fstps
xchg
leave
mov
push
cmp
orl
out
daa
or
dec
pop
adcb
cld
add
pop
ljmp
popf
xor
mov
mov
out
pushf
or
es
cmp
add
insb
dec
pop
push
adc
popf
pop
cmp
add
pushl
mov
xlat
mov
pop
aad
clc
out
ljmp
mov
mov
imul
xchg
jne
jo
and
out
xchg
add
dec
jg
push
mov
mov
mov
das
jae
add
hlt
mov
mov
or
stc
xor
adc
add
mov
adc
in
subl
sub
out
jge
add
jge
loop
fnstcw
dec
jge
add
cmp
cmpsl
cmp
xchg
sahf
jae
inc
xor
dec
sbb
dec
das
out
mov
xchg
mov
dec
xchg
mov
jmp
mov
mov
pop
inc
mov
inc
sub
or
bound
shrb
jmp
es
add
aas
adc
sbb
xchg
or
clc
jb
xchg
xor
cmp
jbe
pushf
add
cmpsb
bound
cmp
movsb
mov
movsl
mov
inc
inc
add
test
sbb
cltd
sbb
add
mov
jle
inc
jne
add
into
dec
jge
push
cwtl
add
fs
sbb
push
add
jecxz
sub
aas
xor
sub
dec
cmpb
or
xor
push
cmp
xor
stc
jo
subb
cld
xor
add
lds
outsl
cmp
pop
andl
in
mov
xchg
aad
js
add
pop
pop
fimuls
fwait
mov
xor
lock
add
insl
and
fildll
add
popa
aam
hlt
push
add
cmp
pop
setne
inc
xchg
add
push
jae
jns
outsl
add
sti
mov
int3
add
cmp
add
flds
xor
jl
inc
mov
lcall
inc
cmc
add
stos
or
andl
add
push
shlb
pop
mov
shrb
rorb
mov
cmp
sbb
xchg
or
fstpt
fisttpll
cmp
mov
mov
cli
lea
dec
mov
push
xor
inc
adcl
or
or
scas
xchg
aam
pusha
pop
aaa
adc
jnp
add
leave
jne
xchg
fdiv
dec
push
or
hlt
push
and
dec
pop
rcr
dec
push
icebp
cli
imul
fimull
xchg
add
popf
shrb
jl
add
and
cmc
lods
mov
mov
mov
jmp
add
adc
in
in
lods
ss
dec
cmp
add
and
cmp
push
int
test
lock
pop
test
js
jns
loope
pop
int3
loop
sbb
out
inc
clc
or
cmp
xchg
inc
push
cmp
pop
inc
inc
popf
test
test
pop
jmp
lret
movsl
cmp
dec
lock
test
or
fcmovne
shlb
scas
add
xor
push
xchg
add
lahf
mov
fnstsw
popa
pop
int3
mov
movsl
pop
push
clc
push
cmp
aad
xchg
cmpsb
stos
push
add
push
sbb
sub
aam
rcrb
mov
lcall
push
add
popf
ss
mov
add
xor
sbb
lods
or
or
mov
out
inc
jo
outsb
cmpb
add
insl
mov
ja
add
je
lock
push
pop
sbb
push
loope
mov
add
cmp
add
dec
push
ljmp
std
clc
sub
fistl
gs
inc
jne
add
push
testl
push
push
adc
fidivrs
pop
add
pop
lods
xor
ljmp
outsl
es
imul
cmpsb
test
inc
or
pop
leave
push
mov
pop
pand
sub
dec
pop
sarb
lahf
xor
ficompl
inc
loopne
xor
cmpsl
and
test
rclb
sbb
in
fwait
add
sahf
add
lahf
jo
xchg
sub
add
std
mov
icebp
jbe
or
jl
je
adc
xor
and
pop
jl
add
stos
dec
cwtl
aas
out
xchg
jns
add
je
lds
mov
add
scas
sbb
pop
add
loopne
dec
mov
and
aas
sub
test
sbbb
jnp
mov
jl
repz
mov
xor
mov
add
or
xor
jl
jge
mov
int
mov
jg
add
lret
test
or
lea
xchg
cmp
lea
add
arpl
add
fsubrs
add
mov
iret
sub
jmp
add
js
pop
imul
push
xor
addb
das
stos
enter
sbb
imul
sub
pop
sbb
cltd
jp,pt
jmp
jl
mov
xchg
test
aam
pop
mov
sub
gs
orb
inc
pop
fs
add
mov
add
idiv
pop
push
xchg
nop
lret
popf
int
ret
mov
and
mov
imul
add
fwait
and
jbe
ja
fs
xor
pcmpgtb
jecxz
push
shrb
sbb
int3
dec
add
cmp
std
adc
jbe
add
inc
jns
ss
push
mov
push
cmp
shll
push
mov
pop
ljmp
mov
and
lods
orb
push
xor
add
xchg
inc
icebp
sbb
je
lcall
call
lds
in
sbb
jp
add
sahf
dec
xor
shlb
add
movsl
and
xchg
pop
add
into
or
add
sub
mov
imul
sub
inc
add
cmp
jo
es
xchg
mov
lcall
sbb
add
rcl
dec
inc
lods
add
arpl
pushf
add
cmpsb
ret
xor
addb
jmp
popa
out
enter
repnz
pop
mov
mov
or
fwait
rcrb
add
lret
jno
or
repz
add
add
pop
loopne
and
push
mov
rolb
add
fs
xchg
ss
faddl
test
sbb
andb
add
sub
xchg
mov
pop
add
loopne
inc
pop
popa
decb
stos
mov
insb
es
popf
or
cmpb
in
stos
add
ja
lods
push
add
std
cs
or
sbb
mov
adc
lods
test
cmp
insb
sti
and
ja
and
aas
push
jae
in
add
movsb
push
popf
aaa
call
add
subb
and
sbb
push
mov
lods
in
in
add
fs
xchg
add
mov
lods
rolb
in
test
iret
or
add
fwait
mov
sbb
lock
dec
testb
mov
pusha
fsubs
adcl
imul
xlat
in
in
sbb
fs
push
add
pop
adc
inc
add
sub
mov
cmp
test
fwait
add
dec
jge
add
inc
enter
jp
mov
jecxz
call
adc
ljmp
cmp
xlat
xchg
sub
mov
add
or
mov
and
push
rolb
mov
sbb
inc
sub
frstor
pop
cli
es
mov
add
lret
loopne
mov
add
inc
mov
stos
mov
test
sbb
daa
or
vpunpckhdq
roll
dec
lahf
and
repnz
decb
addb
adc
insb
jo
pop
add
xchg
pop
adc
jmp
and
out
lret
add
or
mov
dec
push
mov
mov
mov
push
int3
pop
inc
xchg
outsl
dec
jmp
cmp
int3
aam
je
jle
add
ds
mov
stc
jle
in
mov
inc
and
add
jg
aas
pop
xor
pusha
lahf
aaa
add
pop
xchg
fs
repz
add
es
data16
add
mov
insb
mov
pop
cld
jecxz
sahf
in
test
sbb
dec
push
jne
push
push
leave
cmp
jns
decl
and
add
jle
mov
sbbb
and
sbb
push
push
pushf
imul
movb
pop
sub
shlb
leave
scas
lods
add
sbb
jl
add
mov
adc
add
sbb
lock
cmpb
pop
in
jge
adc
pop
lods
aas
imul
ret
sbb
mov
mov
add
cwtl
je
add
sbb
xor
shr
jo
and
or
add
push
mov
mov
pop
loopne
jnp
add
cmp
sub
add
gs
add
int3
mov
jb
add
mov
sub
dec
add
and
push
adc
stos
ret
sub
cmpb
fdivrs
or
add
jle
adc
add
popa
cmp
push
push
fldl
sub
hlt
js
icebp
arpl
xchg
add
fistpll
je
clc
dec
sub
push
add
mov
in
or
push
mov
and
xchg
stos
jmp
adc
push
repnz
jno
lcall
pop
rcrl
dec
add
push
fmull
pop
xor
and
fwait
daa
pusha
mov
roll
xchg
cld
cwtl
dec
aad
inc
nop
dec
inc
dec
lret
out
mov
sub
out
inc
add
jle
sbb
pusha
add
stos
sbb
not
add
xor
push
repz
mov
pop
pusha
xchg
jp
imul
lcall
lods
ficomps
adc
cmpl
cmp
sti
int3
jo
and
sbb
cmp
loopne
sbb
psllw
in
subb
imul
lds
icebp
or
jp
repz
aaa
cmp
cmp
add
pop
or
or
mov
add
dec
xor
add
pusha
loope
jns
stos
fwait
add
stc
leave
jno
jl
mov
into
adcb
adc
sbb
pop
mov
add
loop
repnz
and
or
aaa
cli
adc
pusha
push
xor
stos
sbb
dec
clc
icebp
ss
mov
outsb
imul
push
rcrb
sub
mov
jns
mov
xchg
mov
push
cmp
lret
or
rcrl
adc
and
pop
imul
adc
cld
inc
jb
mov
and
xor
jae
jl
aam
insl
loopne
add
lcall
dec
int
xchg
ret
add
add
leave
sub
jno
ss
psubusw
inc
jo
add
mov
imulb
orb
cltd
rolb
outsl
push
mov
inc
add
test
decb
add
pop
std
outsl
sarb
add
ret
scas
mov
das
xor
movsb
cmp
adc
or
add
leave
adc
mov
rorb
xor
jno
push
jns
cwtl
sbb
jns
add
clc
jo
rorb
add
sti
lret
mov
sbb
sub
or
add
adc
dec
cmp
mov
mov
cltd
lret
sbb
xorl
or
add
mov
enter
sbb
aas
testl
push
subl
aas
mov
push
orb
in
data16
xor
sti
fcmovnbe
add
fcmovu
pop
nop
ret
pop
test
mov
int
cwtl
jl
mov
fists
add
lcall
dec
repz
rcrb
jbe
push
xchg
adc
loop
xor
cmpsl
adc
in
pop
and
insb
add
mov
or
pop
jmp
test
mov
loopne
lret
pop
out
and
int
cmp
push
adc
inc
pop
mov
mov
add
and
popa
loop
ds
add
loope
pushf
add
inc
movsl
add
pop
lock
cmp
add
xchg
xor
jo
add
and
in
dec
mov
in
dec
xor
add
push
sbb
mov
dec
sbb
cwtl
jecxz
cmp
outsl
je
xchg
cltd
out
add
push
mov
mov
inc
sub
push
jp
shlb
addr16
decb
insl
outsl
rcrl
in
add
cmp
mov
cs
add
lods
rolb
mov
arpl
inc
movsb
mov
jb
add
pusha
xchg
mul
movsl
and
ja
push
fs
insl
add
scas
push
insb
mov
fisttps
mov
mov
les
stc
and
sbb
gs
add
lahf
pop
adc
iret
pop
arpl
pop
cltd
add
fildll
add
daa
mov
and
pop
push
rclb
cmp
cmp
dec
pushf
out
loop
inc
cmp
stos
ljmp
dec
cmp
lock
inc
cmp
int
int3
push
decl
aad
mov
sub
mov
push
gs
std
add
daa
insl
adc
shll
dec
mov
add
push
jmp
pusha
or
push
int
repnz
jb
add
mov
push
adcb
adcb
xor
clc
and
cmovne
add
sbb
pusha
arpl
mov
out
cmp
or
movsb
loop
shlb
lea
ret
pop
add
jp
jmp
fidivs
adc
shlb
sbb
mov
stos
ja
push
adc
fldcw
ret
pop
das
pusha
cs
pop
jb
inc
je
xlat
add
xchg
int
ds
out
add
pop
arpl
cli
adc
mov
in
and
and
push
movb
in
push
dec
mov
mov
mov
lods
cmp
pusha
sbb
cmc
mov
sbb
xchg
cmp
dec
and
inc
jne
push
into
aam
sahf
cmp
sarb
or
pushf
inc
push
lret
frstor
mov
cmpsb
xchg
insb
loop
jo
imul
add
daa
cmc
jno
mov
ds
cmpsl
adc
jge
in
sub
add
loope
fildl
lahf
sarl
pop
cli
out
push
inc
push
xor
mov
add
and
daa
push
imul
mov
xorb
shll
daa
xor
mov
dec
cmp
mov
sbb
cs
adc
pop
adc
test
push
ds
mov
mov
add
dec
fsubl
push
sub
in
jmp
inc
cmp
lret
mov
enter
xchg
adc
mov
pop
clc
addr16
add
add
push
mov
rcll
or
inc
in
scas
dec
xor
cmpsl
jle
shll
xorb
pinsrw
orb
fisttpl
add
ja
pop
pusha
and
xchg
imul
mov
mov
cmp
in
daa
xchg
adc
scas
fldl
loop
cld
add
dec
fnstenv
ds
aam
mov
jp
and
dec
add
rol
inc
scas
add
jns
sub
loope
add
div
ret
xor
test
movsl
mov
pop
or
cltd
imul
push
mov
xor
fldt
mov
adc
sahf
add
fdivl
aam
xchg
mov
cs
lret
xchg
cmp
add
test
js
jg
jb
mulb
ja
iret
xchg
cmc
add
inc
gs
sub
js
add
cwtl
cs
mov
loopne
add
arpl
loop
pusha
repnz
js
add
test
lods
cld
pusha
pop
jno
aam
fnsave
add
add
cmpsl
out
xor
dec
ss
jo
dec
cmp
xchg
jecxz
add
and
les
sub
mov
lds
mov
cmp
jle
daa
mov
std
sub
mov
xor
fimuls
adc
xchg
aaa
rolb
mov
jne
add
push
sub
mov
push
daa
enter
sub
or
pop
mov
cmp
mov
insl
mov
jae
xchg
cmp
dec
in
sub
or
cli
pop
xchg
xorb
in
dec
pop
mov
jg
sbb
insb
addb
add
sti
mov
mov
hlt
test
mov
inc
cltd
jle
and
jno
idiv
pop
pop
dec
roll
push
int3
mov
sbb
add
scas
xchg
jno
dec
mov
add
js
mov
add
fwait
pop
loope
idivl
jmp
js
push
push
sbbb
or
lcall
add
push
clc
jns
push
inc
push
xor
and
adc
lcall
xchg
cmpl
gs
add
add
inc
xchg
or
jns
push
or
inc
sbb
pop
xor
or
stos
sub
push
push
inc
push
call
sbb
xchg
ror
lea
sbb
mov
loope
add
repnz
xchg
xor
xchg
imul
rclb
inc
sbb
mov
sbb
xor
cli
sbb
sub
or
insb
popf
int3
lret
xchg
popf
and
and
xchg
mov
dec
fdivl
cltd
mov
sub
out
ss
add
je
das
loopne
dec
lods
add
jbe
adc
cwtl
mov
movb
dec
decb
add
add
iret
insl
out
jb
es
lret
dec
push
jp
jbe
jnp
mov
and
push
lret
das
into
mov
pop
add
cmp
fsubrl
and
ja
add
out
pop
scas
adc
je
inc
cmp
xchg
add
jnp
push
add
outsl
stos
cli
pop
and
xor
mov
adc
add
or
push
lods
fwait
das
lcall
pop
cld
mov
popf
sbb
lahf
les
sahf
jb
pop
xorb
jne
scas
or
mov
pop
rolb
mov
sub
loop
or
push
or
fmull
mov
and
mov
int
inc
pusha
out
add
xlat
jnp
shlb
sbb
sbb
inc
daa
add
ja
sarl
addb
or
pop
das
or
mov
pop
sbb
sub
clc
mov
jbe
jmp
lds
or
push
pusha
jp
inc
pop
cwtl
adc
ret
dec
xchg
add
add
es
sarl
orb
pop
jle
push
add
or
aas
xchg
push
mov
fwait
stos
data16
out
jl
insb
fcmove
mov
sbb
mov
lahf
jb
or
jle
in
scas
ss
insb
pop
mov
js
dec
aam
dec
in
or
xchg
clc
xchg
rolb
daa
push
pop
jecxz
or
sldt
jl
jns
xchg
int3
pusha
test
add
lcall
pusha
cmp
mov
fdivrs
mov
je
pop
adc
adc
sbb
movsl
add
inc
lods
or
stos
sub
and
xchg
inc
xor
cmp
mov
and
scas
pop
xchg
bound
dec
add
push
xor
leave
pushf
jae
cmp
add
cmp
fbstp
daa
add
mov
add
dec
shrb
clc
cmp
idivl
push
dec
mov
cmovne
int
add
fdivrs
add
mov
xchg
pop
mov
test
stc
mov
outsl
add
or
xor
sub
fwait
add
dec
xor
pop
insl
aam
pop
xor
push
sahf
cwtl
loop
add
repnz
jmp
add
xor
cld
add
jle
xchg
in
int
jl
sahf
pmaxsw
xor
inc
loopne
in
push
lahf
cmc
cmp
cli
cmpb
mov
mov
out
sbb
xor
add
push
fcoml
cmp
xlat
add
loop
test
jae
add
aam
jmp
stos
imul
jg
popa
mov
push
call
dec
or
mov
ret
pusha
movsl
in
pop
das
push
mov
push
xchg
js
cmp
dec
into
cli
push
lret
ja
pop
fisubrl
test
popa
movsl
mov
les
jle
add
adc
and
or
ja
aad
imul
ss
ret
clc
add
maskmovq
test
add
ret
mov
pop
cs
lret
xchg
add
lret
jae
aas
sub
fisttpl
inc
add
fstp
mov
sbb
jmp
add
negb
mov
and
add
cltd
lea
lret
ficoml
leave
add
sub
add
cmc
out
and
sbb
test
xlat
daa
push
add
sub
sbb
pop
inc
cmp
cmp
or
mov
push
push
lods
add
test
jmp
stc
out
add
xor
addr16
rorl
add
xchg
popa
sub
or
adc
ds
mov
out
add
in
adc
adc
pop
pop
add
xor
cmp
inc
dec
nop
hlt
add
mov
sub
add
and
lret
cmp
xor
jp
cmp
push
pusha
inc
and
add
cmp
jg
or
add
pop
xor
add
nop
or
mov
in
mov
fsub
sbbl
inc
cmp
cltd
pop
fsubl
pop
mov
jns
pmaxsw
mov
or
outsl
add
divl
sarl
aam
adc
and
dec
hlt
fsqrt
xlat
jo
pop
mov
aam
xchg
pop
sbb
ds
xchg
rorl
aaa
popf
adcb
shlb
repnz
rclb
rorl
outsb
push
shlb
push
cld
xchg
test
mov
call
push
ret
cmp
add
loop
pop
push
sti
insb
sbb
adcb
sbb
adcb
leave
add
jns
ja
jg
aam
filds
dec
gs
cwtl
add
jge
in
cli
adc
add
nop
sub
addb
and
test
cmc
popl
pushf
adcb
enter
xchg
aad
mov
shl
add
notl
cmp
adc
in
lret
lcall
mov
cli
add
inc
shrl
cmpsb
push
add
add
cmp
jge,pn
sbb
jae
aas
pop
and
mov
movsb
push
dec
out
mov
sbb
push
dec
roll
push
mov
mov
xchg
add
sub
jb
add
lcall
mov
mov
dec
push
ret
jnp
push
mov
sbb
sub
lea
push
addl
push
lcall
dec
cmp
xor
outsl
lfs
sbb
push
es
xchg
or
cmp
scas
adc
aas
lea
or
pop
ljmp
pop
add
popw
lods
pop
in
mov
roll
mov
sub
xchg
loopne
and
add
fldcw
add
in
cmp
add
adc
xor
aam
clc
fsubl
xor
push
arpl
jno
aas
pop
loope
add
dec
mov
filds
out
repnz
adc
rolb
pusha
mov
sbb
scas
call
dec
cmp
add
or
dec
or
xor
aaa
test
sbb
pusha
xorl
fs
push
add
in
and
xorl
mov
scas
mov
mov
sub
mov
sub
lgs
out
push
cld
add
rcl
or
add
mov
and
std
push
and
jmp
sbb
and
test
out
push
int
xchg
or
jno
xor
fwait
iret
xor
loop
add
nop
gs
mov
cwtl
or
aas
inc
add
and
or
xor
xchg
pop
push
adc
lret
jmp
push
mov
pop
xchg
call
mov
mov
jo
add
hlt
or
and
fwait
orb
mov
inc
mov
in
cmpsb
pop
in
add
insl
test
add
aad
pushf
enter
rcrl
out
in
push
ljmp
loopne
add
push
or
mov
iret
pop
xor
in
dec
add
jb
or
push
mov
lret
push
jo
or
xchg
sub
outsl
mov
enter
clc
mov
pop
adcb
das
jp
dec
and
add
mov
mov
add
jp
add
push
add
arpl
add
lea
add
and
insb
jmp
jle
std
mov
cmp
pop
add
shll
shlb
mov
pop
pushf
out
std
jg
mov
orb
cli
cmp
mov
imul
test
rcr
xlat
fs
cmp
jne
pop
leave
mov
in
add
es
adc
pushf
int3
inc
adc
sbbb
push
call
push
cli
mov
add
shlb
pop
aas
jo
xor
mov
adc
insb
dec
push
jb
jl
lahf
sahf
pusha
adc
add
loop
mov
pop
inc
mov
push
int
sarl
jbe
mov
mov
lret
jle
add
cmp
cli
in
add
or
pushf
nop
xchg
fldcw
add
mov
testb
jecxz
movb
adc
hlt
loopne
lahf
shll
mov
je
ljmp
add
cltd
sub
push
mov
cltd
loope
mov
mov
scas
pop
notb
ud2
stc
inc
lods
or
fidivrs
in
add
adcb
dec
add
adc
aad
mov
or
test
je
pop
lahf
fcom
cli
inc
dec
aad
clc
subb
xchg
add
movsb
shlb
add
ds
inc
inc
lea
mov
push
cli
mov
int
sub
dec
mov
pop
ret
add
add
sahf
sbb
add
in
inc
outsl
mov
pop
je
daa
xor
cmp
ja
adc
movsl
push
pop
dec
cmp
cli
or
mov
pop
insl
outsb
sbb
popa
or
sbb
lods
jae
in
daa
pop
mov
xchg
arpl
loopne
mov
ret
cmpsl
add
lods
add
add
call
xchg
ds
inc
inc
pusha
arpl
cmp
add
lods
pop
jae
inc
xchg
int3
lcall
dec
sbb
adc
out
subb
jg
mov
repz
popf
cmp
enter
loopne
test
sbb
pop
xor
mov
shl
ret
lcall
out
popf
jle
sub
std
loope
faddl
je
mov
pop
out
xlat
roll
insb
add
andl
push
add
nop
inc
loopne,pn
mov
cmpsl
add
sbb
lret
push
in
sbb
out
xchg
or
add
leave
mov
out
cwtl
mov
inc
fnstsw
movsb
dec
ja
scas
add
adc
popf
lret
jb
add
lock
dec
fldl
push
mov
pushf
dec
cmpsb
add
mov
ss
cwtl
add
mov
xlat
test
sub
mov
repz
add
shl
fldl
and
sti
cmp
out
add
mov
outsl
xor
xchg
pop
jns
add
adc
cltd
lock
sbb
ljmp
sub
mov
cmp
in
pop
inc
addb
sub
xchg
push
in
sahf
pop
testb
inc
fsubl
dec
clc
adc
sbb
add
ja
adc
inc
inc
jnp
rcrl
movq
in
mov
movsb
cmc
mov
and
sbb
xor
cmp
pushf
and
sbb
imul
pop
mov
mov
sbb
in
add
mov
subb
loopne
jno
mov
nop
sbb
mov
pop
nopl
jecxz
into
repz
sbb
add
negb
mov
js
loop
add
cld
dec
xchg
cmp
cmp
rorl
stos
fmul
in
add
add
rolb
les
stos
adc
dec
add
mov
pop
insl
add
and
ss
jge
push
adc
pop
cmpb
or
add
inc
shlb
mov
add
sbb
add
mov
sahf
sbb
cld
add
jg
jmp
or
popa
add
mov
outsl
int
out
adc
lods
sbb
add
sub
lret
in
lods
or
push
icebp
cmp
mov
xchg
repz
outsb
mov
dec
add
pop
enter
sub
iret
or
jge
add
cmp
pusha
add
push
enter
add
or
add
xchg
cmpsl
aas
push
sbb
mov
sar
andb
xchg
ja
and
push
pop
or
iret
adc
pusha
xlat
add
imul
add
add
or
sbb
ds
nop
flds
cwtl
or
push
leave
cmc
add
test
or
cs
jae
inc
xor
push
cmpsl
les
movsb
xor
nop
add
xchg
js
or
cmp
add
sub
cltd
add
shll
dec
mov
cs
insb
rclb
and
das
or
call
rcrl
mov
cmp
test
lret
mov
inc
xchg
clc
inc
xorb
pop
cmp
add
ret
inc
mov
shr
push
es
push
hlt
subb
fisubl
adc
or
xchg
inc
mov
addl
std
ss
pop
mov
add
adc
push
add
push
xor
into
imul
xor
inc
test
sbb
pop
fcomp
ud0
lret
inc
pop
inc
andl
daa
stos
adc
arpl
fsubs
frstor
add
fstpt
pop
in
mov
cmp
add
insb
data16
jg
std
ret
add
adc
xor
push
mov
mov
int
andb
mov
cmp
imul
sbb
adc
xchg
lods
dec
mov
add
scas
or
cmp
in
sub
jl
decb
js
or
out
cmp
sarb
outsb
ss
ds
out
adc
adc
int
or
sub
loopne
push
inc
add
out
dec
clc
push
push
pop
add
fimuls
dec
ret
mov
cmp
jns
push
scas
add
adc
add
fcmovnb
in
adc
in
xchg
ret
jmp
leave
hlt
sbb
je
and
out
in
lds
cli
call
adc
lea
pop
pop
push
mov
dec
leave
xor
clc
lcall
sub
sbb
mov
mov
push
push
mov
add
mov
test
inc
pusha
mov
push
aad
fimull
push
nop
inc
sti
int3
arpl
in
sbb
xor
add
cld
pushf
into
clc
push
loope
repz
or
sub
add
xor
leave
pop
in
push
loop
jne
add
adc
imul
pop
and
mov
stos
fwait
loope
push
ret
iret
mov
cmpsl
les
pop
adc
add
jmp
rcrl
hlt
insl
pop
cltd
imul
dec
filds
lret
les
mov
stos
push
add
fadd
insl
push
fcmovu
mov
fwait
adc
adc
movsb
sbb
sbb
lahf
add
inc
add
neg
aam
cwtl
jmp
xor
out
subb
scas
xor
sbb
std
add
flds
add
inc
movsb
mov
sbb
dec
jl
rcrb
leave
lcall
stos
push
mov
or
repnz
push
add
fstps
outsl
xchg
adc
roll
and
fstpl
mov
mov
inc
movsl
mov
mov
andb
insl
je
inc
add
inc
stc
xchg
add
inc
aam
pushf
pop
push
imul
ret
jecxz
lods
hlt
cmp
stc
push
adc
mov
or
xchg
xchg
add
mov
in
insb
add
mov
add
mov
in
cmp
loope
mov
mov
fdivr
sbb
fwait
cmp
in
into
jecxz
dec
inc
add
mov
sahf
loop
add
jns
sub
push
inc
pushf
add
lret
into
shrl
add
js
in
scas
inc
add
mov
daa
add
mov
or
inc
mov
les
stos
orb
push
insb
ret
mov
dec
and
mov
push
out
div
mov
lea
and
fsubrs
aam
int
add
sbb
dec
push
pop
or
pusha
xor
add
aam
addr16
enter
add
cmp
int3
sbb
pushf
fisubrs
nopl
adc
xchg
push
pop
mov
jbe
push
add
ja
ret
ret
fnstcw
mov
les
andl
cmp
and
xchg
loopne
imul
add
sahf
sbb
push
popa
or
dec
dec
xchg
and
cwtl
sub
add
jns
push
pop
outsb
jge
scas
pop
mov
add
xor
and
sub
nop
stos
rolb
notb
pop
jae
insl
cmp
shrb
mov
cmpsb
add
scas
insl
add
mov
jo
add
pop
sub
inc
popf
push
pop
adc
jmp
iret
add
outsl
js
hlt
shlb
es
pushf
adcb
add
arpl
jae
push
popa
pusha
ljmp
out
rcrb
push
cmc
or
or
adcb
adc
imul
adc
adc
and
cli
iret
out
mov
sub
sbb
push
xor
hlt
loope
ret
sub
dec
stos
add
fwait
dec
in
faddl
jb
push
test
mov
add
adcb
push
add
and
adc
and
cmp
ret
add
cs
sub
dec
dec
add
jle
sub
mov
rorb
add
pop
xchg
push
xchg
mov
inc
xor
adc
mov
rcrl
std
mov
inc
pmuludq
fsts
repz
pop
sbb
bound
inc
sub
jmp
in
xchg
add
or
int
add
cmp
daa
push
lods
pop
dec
xchg
add
aas
sbb
popa
sub
test
rorb
add
mov
stc
in
add
jle
jno
xor
imul
jge
lods
pop
dec
addb
add
aad
add
xchg
dec
lcall
stos
pop
add
je
jnp
pop
aam
rolb
ret
add
and
sub
sub
fnstsw
nop
push
pop
lock
add
loopne
sbb
adc
push
js
add
mov
icebp
out
dec
pop
pop
scas
cld
int3
pop
add
pop
adc
loopne
mov
nop
mov
mov
pop
mov
push
mov
cmp
insb
clc
pop
add
data16
jg
xorb
and
push
das
add
lcall
in
es
push
dec
dec
add
fcomp
fstpl
push
mov
sub
xorb
add
test
and
push
adc
roll
xor
jb
sbb
pop
jns
insb
cli
add
adc
pop
scas
mov
lret
add
test
xor
jbe
jae
jmp
add
scas
inc
addb
xor
rorl
jno
or
add
adc
in
pop
cmpsl
add
xchg
jae
add
inc
cwtl
ja
xchg
pop
ljmp
outsl
pop
sbb
pop
mov
xor
jb
rclb
pop
jne
add
add
add
fistps
add
fmul
mov
add
out
fnstsw
add
xchg
hlt
sub
cmpsb
mov
add
or
movsb
ss
dec
orl
inc
fldl
bound
shl
mov
pop
idivl
call
hlt
cli
in
add
in
add
push
inc
mov
test
out
mov
daa
add
lret
xlat
adc
insl
pusha
cli
les
push
shrb
mov
shl
pop
fmuls
add
je
call
add
data16
inc
mov
inc
dec
xchg
xchg
push
loopne
and
or
mov
mov
je
repz
add
jp
loop
cld
cmp
add
imul
ds
cmp
insl
add
pop
mov
xchg
outsb
hlt
das
xchg
dec
cmp
jecxz
xor
inc
sahf
xchg
icebp
ljmp
sbb
or
jne
fsts
cmp
add
pop
jns
aaa
add
pop
and
xor
es
cmp
adc
sbbb
mov
in
stos
ljmp
in
pop
mov
mov
push
pop
sbb
xor
dec
mov
cmp
pop
and
and
das
mov
aaa
add
mov
fiadds
and
adc
jne
ficomps
add
sub
mov
adc
ret
sldt
arpl
dec
dec
inc
fadd
inc
jb
xchg
in
out
outsl
xchg
cmp
push
mov
stos
iret
lds
int3
add
sbb
js
jae
xchg
or
call
mov
cmp
fimull
add
jl
mov
hlt
add
push
xchg
imul
push
add
stc
aad
sti
int3
push
das
push
cs
popa
pusha
fucomip
into
js
out
cmpb
adc
sub
stc
sbbl
and
dec
mov
movsb
ror
int3
and
test
pop
xchg
mov
jbe
std
lea
clc
add
mov
loop
jno
pop
fistpll
add
fndisi(8087
notb
lret
lea
push
mov
jge
jae
jno
insb
xor
push
shlb
cmpsl
ret
sbb
cli
and
mov
bnd
add
fadds
cmp
xor
movsbl
add
daa
clc
rolb
imul
mov
push
or
add
pop
popa
in
add
sbb
cmp
fildl
aam
inc
push
lgs
cmpsb
sbb
jne
and
add
outsl
cs
notl
sbb
fwait
inc
shl
test
or
shrb
mov
adc
out
pusha
sbb
inc
pusha
xlat
mov
dec
sbb
call
dec
mov
pop
pushf
xlat
add
xchg
and
mov
add
pushf
les
jae
lock
add
fistpll
imul
xor
movsb
lock
sub
sub
incl
mov
loopne
sub
add
call
psubsb
add
scas
into
clc
fldl
mov
loopne
add
push
cmpsl
out
mov
jl
mov
jb
pop
mov
jecxz
cwtl
adc
push
xor
sub
add
and
push
mov
pop
leave
orl
out
nop
addb
jge
out
adc
sbb
adc
test
xor
cwtl
movsb
repnz
inc
push
add
inc
cmp
add
cmpsl
add
mov
bound
mov
shr
pusha
andb
movsl
cmp
xor
in
or
sbb
insl
sbb
and
inc
add
cmpsb
dec
inc
mov
pop
mov
rcrb
daa
add
push
inc
shlb
xor
dec
sbb
out
mov
pusha
jg
aaa
insl
mov
or
add
add
popa
jl
lock
jg
add
sbb
or
and
orb
fldenv
lcall
mov
mov
xchg
xor
mov
add
sub
pop
fsubs
mov
jbe
jo
jmp
mov
inc
pop
outsl
dec
xor
xor
mov
and
inc
dec
fwait
es
inc
cli
and
notl
or
xor
lahf
push
add
pop
cmp
aaa
jg
cmp
rclb
pop
inc
push
fcoms
and
inc
add
sub
clc
pop
movsb
pop
roll
xor
cmpb
ds
add
adcl
sbb
jno
out
xorb
dec
into
cwtl
and
andl
addb
loopne
xchg
shlb
ja
jo
lock
mov
mov
dec
cs
das
mov
mull
inc
sbb
xor
or
jbe
frstor
in
mov
sbb
push
pop
cmp
clc
mov
pop
push
xchg
adcl
test
xor
add
pop
dec
or
push
sbb
mov
repz
fs
or
data16
sbb
xor
inc
in
repnz
repz
outsl
add
in
iret
xchg
repnz
and
pop
stc
data16
out
pusha
jg
add
and
test
xor
testl
add
fistps
xchg
dec
xchg
jge
lret
xor
mov
push
jg
add
inc
mov
stos
mov
mov
sbb
push
pop
xchg
mov
cmp
sbb
and
lret
sub
add
fmuls
ljmp
dec
adc
mov
inc
test
outsl
into
and
adc
roll
movsl
iret
sub
call
daa
mulb
add
mov
pushf
push
or
mov
in
xor
push
and
or
mov
sub
sarb
into
repnz
mov
sub
jns
add
mov
je
sub
pusha
add
push
rcll
pop
push
data16
shrb
orl
popa
sub
testb
loop
add
aad
add
addb
inc
dec
clc
add
or
ja
jnp
dec
add
cmpsb
hlt
adc
cli
dec
sbb
add
movsb
mov
stc
pop
sub
pop
add
cmc
cmpsl
insl
adc
call
jge
lods
stc
inc
gs
mov
add
aas
imull
add
nop
imul
inc
popa
imul
sbb
rolb
roll
cmp
test
mov
test
mov
stc
push
pop
or
cmp
sahf
add
xchg
cmp
sbbb
clc
aad
add
shl
inc
jp
add
fnstsw
xchg
popa
inc
add
mov
lods
xor
lds
adc
xchg
aam
filds
stos
xor
or
lea
aas
int
pusha
inc
rcr
imul
cmovs
adc
loopne
push
jl
cmc
pop
movsb
bound
sbb
out
mov
pop
ljmp
data16
pop
inc
iret
shl
add
lods
sti
out
movsl
mov
sub
cli
cld
sub
mov
or
rcl
add
mov
shlb
inc
jno
add
cld
push
mov
add
fimull
add
dec
and
cmpsl
inc
fbstp
sub
jmp
pop
mov
fs
pop
and
dec
adc
add
jnp
fdivl
sbbb
xor
dec
add
fidivrl
scas
and
sub
mov
rolb
sub
pop
jne
arpl
nop
jge
jmp
into
aas
inc
fidivrs
cli
mov
mov
stos
or
jl
xchg
xchg
mov
mov
mov
fmull
push
push
push
push
shl
cli
inc
xor
js
sub
and
sbb
sbb
in
dec
add
add
popa
nop
pushf
loop
add
arpl
int3
adc
test
mov
in
add
fidivrs
test
add
push
push
pop
lods
add
inc
clc
cltd
push
in
push
add
or
sub
test
mov
sub
loopne
pop
add
add
mov
jb
add
jno
jecxz
jne
push
bsf
cltd
xchg
out
mov
push
fisubrs
rolb
je
js
test
mov
jg
add
pushf
or
push
mov
push
arpl
inc
movsl
mulb
pop
cld
into
inc
dec
dec
nop
xchg
scas
mov
inc
out
mov
in
ljmp
sbb
imul
pop
xlat
xor
push
add
xorb
jmp
add
cld
aaa
inc
sahf
dec
and
pusha
pop
dec
and
lea
push
rorl
mov
adc
mov
stos
adc
sahf
xor
into
lcall
push
test
push
pop
cmp
and
pop
push
clc
add
call
andb
add
fistps
push
mov
rcrl
pop
jb
push
add
repnz
inc
jnp
cmc
add
pop
daa
push
push
adcb
pop
inc
test
dec
rcrb
lea
pop
testb
loop
dec
in
cmp
sbb
cmp
xchg
xor
in
dec
or
jge
push
add
in
dec
in
dec
insl
and
aaa
xlat
add
popf
lahf
xchg
cwtl
cmp
push
inc
add
loope
mov
loope
mov
nop
push
jb
shl
xchg
and
sti
add
pop
rcrl
adc
lahf
int3
es
pusha
xchg
mov
shlb
pop
shlb
jno
add
stos
mov
add
je
add
imul
mov
jo
rolb
adc
in
add
jmp
cmp
je
aas
cwtl
pop
test
mov
mov
jecxz
into
sbb
mov
mov
mov
push
in
cmpl
adc
cmp
lods
aad
or
xchg
in
add
data16
jnp
sub
imul
div
or
in
xor
mov
prefetchw
add
mov
add
pusha
cld
push
add
shrb
sarl
mov
add
loope
pop
cld
imul
stc
inc
pop
mov
add
sbb
push
add
aad
xor
lds
sbbl
xor
fimull
loopne
stc
cmp
lret
adc
roll
pop
jb
xchg
add
lea
in
mov
stc
lods
add
push
popa
lret
add
test
xor
insl
clc
pop
mov
fneni(8087
mov
aaa
push
add
inc
sub
push
push
movsl
mov
add
or
jo
mov
xchg
add
lock
aas
sub
sbb
add
or
cmpsl
jle
mov
sub
sub
in
and
hlt
arpl
dec
ss
xchg
jle
insl
adc
push
xchg
push
and
fs
jae
and
ss
pop
out
inc
sub
cmpb
outsl
cmpb
lea
jns
fcomi
rcrb
pop
jo
adc
mov
dec
xlat
and
mov
mov
push
repz
jmp
mov
movsb
fcomi
pop
out
pslld
pop
in
shll
iret
mov
jmp
or
cltd
push
push
insb
movl
add
icebp
es
mov
and
jl
jae
leave
clc
xor
aam
add
stos
or
arpl
rolb
mov
add
js
adc
add
loop
or
mov
stc
out
in
add
mov
inc
add
xlat
pop
cmp
into
pop
add
movb
out
shlb
xorl
cmp
mov
pop
push
add
clc
adc
add
jle
shll
fisubl
push
and
sbb
pop
mov
mov
fcmovnbe
push
add
ja
xchg
fwait
les
cmp
dec
mov
mov
lcall
inc
push
mov
dec
movsl
add
cwtl
loopne
add
xchg
and
mov
dec
pop
dec
or
iret
popa
jmp
sub
mov
cmp
addr16
push
add
das
stos
dec
inc
xlat
icebp
cwtl
call
add
call
fdivrs
add
sti
adc
insb
and
sub
mov
cmc
int3
or
mov
call
xchg
icebp
rcrb
xor
pop
mov
add
adcl
xor
orb
stos
add
or
push
add
cmp
lods
add
int
out
adc
pushf
mov
jns
mov
in
mov
dec
xchg
roll
xchg
pop
mov
shrb
pop
add
std
and
das
jmp
mov
fildl
xor
shl
xchg
hlt
testb
mov
out
inc
call
fdivrl
and
rcrb
push
iret
ficoml
inc
gs
adc
jg
sub
or
data16
add
pop
fmuls
bt
mov
xchg
adc
sti
andl
adc
mulb
jnp
pop
mov
adc
jg
clc
sbb
mov
inc
test
xchg
jbe
rolb
shl
xor
repz
fadds
sub
std
add
mov
test
cmpsl
inc
mov
add
xchg
je
sahf
push
sbb
jno
inc
aaa
push
mov
inc
fisubrs
cltd
ret
jnp
and
lahf
add
xchg
outsl
add
cmp
mov
jmp
fldcw
repnz
sbb
not
rorb
adc
pop
add
jge
cwtl
mov
mov
roll
xor
lds
fisubs
popa
pop
and
mov
jp
jmp
adc
jns
out
xor
or
sti
cs
pop
clc
fstps
push
pop
inc
and
rolb
sub
lock
mov
pop
adc
inc
cmp
jns
add
adc
mov
add
icebp
inc
cmp
pop
add
dec
and
lds
xor
adc
pusha
decb
pusha
add
orb
fmuls
inc
sub
fwait
popa
out
xor
add
das
mov
loop
dec
xchg
and
ljmp
jg
pop
outsb
fcmovnu
add
in
add
mov
mov
sbb
fs
add
xchg
pop
subl
mov
repnz
xor
add
push
lds
sbb
mov
scas
add
dec
add
cli
add
add
jle
rcrb
or
cwtl
sbb
int
rcrb
cmp
iret
fwait
test
pop
aam
dec
or
pusha
sbb
mov
lds
jae
dec
js
leave
loopne
cli
fprem
xor
xor
add
add
mov
leave
xchg
test
jmp
in
cwtl
mov
add
in
mov
sbb
mov
and
loopne
push
add
jo
mov
stos
and
cmp
push
cltd
imul
push
loopne
push
cwtl
es
out
sahf
cmp
je
out
lods
ja
cmp
mov
iret
movl
orb
movsb
add
roll
push
xor
add
ja
fdivrs
xchg
and
sub
mov
add
in
push
inc
faddl
adc
insl
fcos
clc
push
push
add
mov
add
adc
jnp
pop
mov
add
mov
clc
cmc
sub
out
inc
jecxz
pop
repz
mov
imul
add
cmpsb
popl
cli
xlat
call
sub
leave
outsb
scas
mov
push
pop
xor
in
inc
or
popf
dec
fldcw
inc
testb
hlt
std
bswap
sti
shrl
mov
xchg
insl
call
mov
xchg
or
push
add
clc
xor
add
pop
lahf
mov
cmpsl
sub
fldl
add
xchg
fstps
pusha
out
xor
ret
and
dec
das
es
push
cmpsl
add
cltd
lahf
movsb
mov
xchg
mov
adc
les
ljmp
and
fucom
nop
or
cld
iret
ja
add
jno
insl
push
stc
popf
in
addb
inc
cmp
mov
xorb
lahf
jmp
mov
mov
mov
or
push
pop
push
or
sub
test
ret
test
xchg
loopne
xchg
jo
sti
or
pop
push
cmpb
rolb
insl
lea
lock
imul
hlt
loopne
in
xlat
add
rcll
sub
sbb
xchg
add
lahf
xchg
mov
sahf
xchg
test
fmull
gs
or
add
and
add
in
push
scas
add
lea
cwtl
shlb
pop
sbb
bound
popa
negb
xor
push
mov
hlt
xchg
add
jmp
xchg
je
and
fildl
add
push
imul
push
add
sbb
mov
inc
mov
pop
mov
dec
ss
jg
test
add
aaa
ljmp
fildll
add
dec
xor
sbb
icebp
mov
pop
inc
stos
test
aam
jg
adc
jno
pusha
shrb
push
imul
dec
pop
stos
lahf
xor
mov
xor
mov
cmp
mov
sarl
add
xor
pusha
adc
outsl
imul
loopne
pop
xchg
in
jno
insl
repnz
add
ja
adc
mov
cld
divb
sbb
jne
sub
jo
sar
cmp
in
mov
xor
mov
xchg
adc
lcall
cmp
cmp
pop
inc
inc
jo
stc
push
clc
popa
les
xchg
dec
push
push
test
inc
aam
dec
mov
pop
les
xor
les
aas
jg
movsb
push
sub
std
add
nop
shlb
testl
daa
cmpsl
lcall
mov
xlat
add
sub
js
and
mov
sbb
mov
pop
fsubrl
sub
shlb
xlat
pop
push
loopne
jge
cmp
cs
repz
dec
add
sahf
and
mov
or
push
rcrb
xorl
sub
xor
aam
dec
cmp
rorl
mov
and
sbb
add
das
adc
sub
pop
pop
aam
jno
pushf
mov
ret
pop
add
imul
rorl
pop
shlb
int3
and
add
adc
sub
es
or
test
cmp
xchg
xor
pusha
sbb
mov
subb
push
or
rolb
push
or
mov
jge
pushf
psrlw
inc
stos
popa
pop
mov
or
dec
add
inc
test
lcall
add
xchg
scas
mov
push
inc
lret
jl
mov
repz
in
pop
adc
enter
scas
cmpsb
ffreep
sbb
int3
add
jbe
inc
pop
sbb
add
movsl
cmp
daa
jne
add
loop
lcall
cwtl
sbb
out
fiadds
and
xchg
pop
lahf
icebp
ret
iret
pop
cmp
cltd
xor
add
cmpl
sbb
push
xchg
and
daa
mov
adcb
addr16
cmp
pop
sti
pop
add
cmp
sbb
pusha
rolb
pop
nop
in
cwtl
xor
push
sub
sbb
out
xor
jo
pushf
sbb
arpl
push
das
rol
enter
movl
mov
ret
sahf
in
mov
mov
lock
popl
subb
dec
orb
jg
mov
fcompl
movsb
int3
pop
jb
call
mov
int
dec
loop
add
pop
pusha
inc
gs
rcl
or
repnz
and
mov
stc
add
lods
add
lock
cmpsl
scas
dec
mov
mov
add
shl
or
jl
clc
pop
mov
xchg
sub
sbb
mov
add
cld
mov
fdivrl
mov
cmp
addb
lret
cmp
xorb
mov
mov
mov
lods
lcall
cmpsb
movq
xchg
adc
inc
mov
subb
not
in
lods
push
mov
aaa
sub
adc
pop
mov
neg
mov
cmp
inc
pusha
mov
inc
adc
xor
scas
pop
push
sbb
icebp
pushl
ret
lock
ret
mov
adc
xor
pop
xchg
lea
aam
or
dec
imul
or
xlat
add
push
loopne
push
in
pop
inc
shl
rcl
cwtl
mov
mov
iret
xor
in
or
push
fisttpll
xchg
or
or
cmp
add
ret
and
outsb
mov
dec
mov
jl
fwait
mov
mov
in
add
pusha
scas
into
push
pushf
xor
movl
sbb
or
popf
add
inc
fdivl
push
movsl
inc
mov
adc
cmp
and
sub
sub
aad
nop
into
arpl
or
jp
sub
pop
jo
mov
mov
out
cmp
pop
xlat
mov
mov
or
add
shlb
xor
inc
and
mov
or
jecxz
and
push
jg
in
testb
aaa
sub
xor
popf
push
sbb
mov
mov
or
iret
out
inc
and
mov
cmp
sarb
adc
insb
test
outsb
pop
add
cmp
aaa
xchg
inc
inc
add
mov
pusha
ss
or
out
aas
inc
icebp
xor
or
jmp
jb
adc
lea
and
shrl
inc
xchg
add
call
sbb
orb
ss
jp
add
aad
inc
add
mov
xchg
fcoms
inc
mov
jne
jo
xchg
iret
or
add
and
mov
pop
test
jns
std
cmp
adc
push
mov
pusha
mov
ret
pop
test
dec
fwait
pop
int3
popl
adc
lahf
lea
or
sbb
mov
loopne
mov
xchg
andl
mov
push
dec
clc
sbb
mov
xchg
in
add
and
sbb
mov
mov
mov
bound
xchg
xor
pop
enter
cld
cmp
push
or
insl
rcll
in
add
xor
dec
mov
cmc
popf
jo
data16
das
roll
addr16
adc
es
hlt
out
pop
mov
mov
outsl
loope
rcr
inc
cmp
push
pop
pusha
dec
out
and
push
dec
lea
mov
mov
xchg
sub
out
cmp
notb
add
sbb
dec
cmpsl
pop
scas
cmp
mov
daa
dec
push
adc
xor
push
rolb
fsubrl
pop
notl
cli
mov
cmc
out
push
addb
clc
pop
sbb
inc
xor
sub
add
les
add
cmp
xlat
pop
xor
adcl
push
xchg
jp
add
xor
ret
cmc
add
mov
sti
je
lock
aad
xorb
int3
mov
mov
imul
fisubs
js
outsl
sub
xchg
mov
add
and
pop
sbb
or
aas
inc
lahf
call
out
subb
xchg
jnp
add
jns
sub
or
clc
adc
insl
fucomi
sti
mov
push
pusha
push
or
add
jbe
sahf
mov
mov
call
sbb
js
push
jecxz
sbb
hlt
jmp
add
outsl
xchg
push
ja
sub
add
mov
stos
ret
add
adc
cltd
imulb
aad
jbe
in
and
cmpsb
adc
dec
fisttpll
sub
inc
lea
leave
rcll
notb
and
inc
jge
jmp
test
inc
and
mov
inc
sub
sub
ret
mov
and
mov
or
xor
lea
sub
andb
xchg
cmc
add
dec
mov
sbb
andb
sub
outsl
icebp
jge
cmp
and
aas
sub
push
sub
pop
jle
add
cmp
jg
shrb
cmc
push
loope
pop
pop
in
cld
sub
popa
scas
adc
mov
lds
ror
xchg
imul
pop
aad
ljmp
mov
inc
sub
cld
jnp
jecxz
mov
cwtl
orb
movsl
inc
mov
xor
dec
mov
mov
pop
xchg
push
lea
iret
fwait
cmp
cmpsl
cltd
pop
jge
add
jne
pop
xor
out
imul
add
add
insl
int3
push
or
add
sbb
sarl
mov
sub
cmp
mov
out
lock
add
adc
dec
jmp
cmpl
arpl
sub
mov
sub
ss
sbb
cli
test
push
rcrb
lret
xor
cwtl
push
in
mov
orb
cmc
cmpb
aad
mov
scas
or
add
sub
out
ret
add
mov
xchg
dec
and
jnp
add
inc
divb
repnz
sbb
dec
jmp
addr16
cs
mov
hlt
lods
xlat
add
lcall
add
cmp
movsl
and
popa
cmp
push
sbb
mov
ss
add
xchg
cli
cld
sbb
mov
testl
mov
or
push
call
adc
push
add
mov
push
add
maskmovq
idivl
jle
incl
and
jnp
and
cs
sbb
or
cld
add
call
iret
push
in
add
test
jns
test
push
mov
fwait
mov
inc
arpl
out
add
pop
cmpb
loopne
add
xchg
rorb
negb
lahf
xchg
jae
sbb
jne
push
push
or
jmp
popa
xor
lods
add
sub
dec
clc
dec
pop
lret
sbb
dec
shl
mov
fdivrs
lahf
sbb
xor
jp
jo
dec
in
stos
mov
jnp
dec
and
add
and
mov
or
pop
int
mov
inc
lock
adc
shrb
sbb
xchg
mov
push
out
add
mov
add
fsub
push
fldenv
dec
push
xchg
lahf
icebp
pop
int
insl
mov
cmpsl
rol
add
cmpsb
pop
sub
add
in
push
fisubl
idivb
pop
lds
shl
fsubr
add
into
mov
in
xchg
jmp
push
inc
pop
push
inc
pop
pause
ret
adc
push
test
inc
mov
adc
xchg
xlat
test
jae
sarb
pop
xchg
add
fldl2e
jno
inc
sub
jmp
mov
pusha
add
ficoms
pop
dec
testl
test
loopne
repnz
jg
add
rcl
dec
add
pop
pop
daa
pop
ret
add
mov
or
pop
sub
add
cmp
addr16
or
popa
cwtl
mov
out
test
or
mov
add
inc
out
xorb
test
aaa
sarl
pop
add
or
mov
push
xchg
add
jo
aad
adc
add
fwait
mov
std
lods
sbb
stos
cmc
js
push
loopne
mov
jp
mov
xor
adc
or
popa
mov
loop
pop
xchg
sahf
push
add
hlt
incl
xor
xor
push
or
je
jne
push
dec
push
mov
outsb
and
or
fwait
jl
push
arpl
add
add
lods
call
lock
push
movsl
arpl
or
dec
popa
dec
cld
mov
pop
pop
mov
lods
stc
lock
fisttpll
xchg
fdivr
repnz
jl
pusha
dec
add
and
jl
prefetch
dec
or
sbb
adc
push
push
cmp
add
fwait
and
jno
sahf
in
adc
xchg
inc
testl
movl
inc
das
imul
leave
rclb
add
add
sub
jne
add
repz
push
ljmp
add
mov
add
das
ret
fsubr
mov
cmp
addb
in
lods
repnz
mov
adcl
mov
mov
sarl
xchg
cmp
jns
aas
fxch
addb
aaa
cmp
add
adc
push
mov
jno
mov
sbb
testl
mov
aas
add
aam
iret
cwtl
loopne
mov
addl
xchg
add
cmp
xchg
ljmp
dec
push
mov
pop
add
fistpl
jmp
int3
test
cmpsl
push
and
and
pop
nop
add
enter
mov
add
or
out
add
ret
sti
lea
ja
sbb
pop
fs
xchg
dec
in
pop
dec
mov
push
xor
xlat
push
imul
loope
sar
vpaddd
pusha
jo
add
ja
sbb
loope
aam
or
xor
jnp
or
aas
adc
std
and
xor
inc
pop
add
mov
das
ret
imul
push
mov
mov
pusha
fisubs
aad
roll
xchg
unpcklps
push
ret
mov
test
cmp
add
idivl
pop
adc
rcl
push
loope
xchg
add
inc
pop
ret
sub
aam
mov
add
pop
gs
add
jne
out
add
pop
jo
cmc
iret
lock
add
and
jnp
sub
test
mov
jmp
in
hlt
lock
jne
cmp
cmc
fimull
sbb
sub
stc
jae
scas
test
sub
fdivrs
add
jl
insb
int3
or
pop
int
scas
into
aas
push
adcb
or
jno
addb
pop
add
inc
addb
test
and
je
ds
hlt
fsubr
pop
jge
mov
cmp
add
mov
and
push
sub
mov
sahf
in
jle
mov
in
into
stos
cwtl
xchg
add
cmp
sti
inc
movsb
hlt
scas
cmp
movsl
add
dec
xchg
add
aaa
inc
cmp
push
fnstcw
inc
loop
fadd
pusha
test
daa
popf
mov
pop
jbe
cmc
dec
xchg
and
dec
rcll
sbb
add
inc
mov
mov
sub
and
mov
push
adc
sbbl
shlb
add
in
rorb
out
data16
mov
hlt
loope
pop
or
add
clc
jp
daa
sarl
je
mov
aam
les
lret
subb
push
ret
cmp
push
pop
sti
loopne
add
mov
mov
and
leave
sub
add
inc
add
mov
pop
pop
sahf
subl
insb
xlat
into
iret
push
add
js
mov
inc
and
pusha
movsb
addb
push
roll
and
add
and
mov
dec
add
pop
jae
cmc
bound
xchg
push
pop
mov
mov
add
sbb
mov
xchg
repnz
enter
jb
add
sbb
pop
ds
test
add
cmp
sub
xchg
ss
ret
cmp
sub
enter
jmp
lock
std
sbb
imul
push
aam
sub
hlt
frstor
mov
add
and
add
in
hlt
test
sub
mov
arpl
ds
mov
dec
jle
je
cmp
test
add
mov
xorb
out
ljmp
arpl
into
jl
lock
lock
add
xchg
sbb
pushf
les
jb
mov
inc
add
push
jae
sub
sysexit
mov
pop
mov
lahf
std
add
inc
fnstsw
sarl
adc
mov
and
cwtl
test
sbb
inc
lock
adc
sbb
xor
sti
add
mov
popa
pop
mov
cmpb
aad
jno
add
out
movsl
inc
ret
mov
push
mov
fiaddl
and
xor
je
pusha
xchg
test
aas
and
add
cmp
sbb
add
mov
pop
or
xchg
call
rolb
jle
jno
add
scas
push
cld
sub
add
add
xor
push
mov
cs
cmpl
sbb
xor
dec
cmc
jnp
sbbb
xchg
scas
adc
mov
push
add
mov
std
fucomi
in
mov
sub
and
ljmp
mov
mov
xchg
push
rcll
lock
repnz
pop
mov
or
xlat
mov
jge,pt
pop
inc
sbb
jmp
iret
mov
lret
rorb
add
add
aad
ret
and
fs
sahf
add
cmp
xchg
cmp
add
in
movsl
xlat
imul
pop
mov
pusha
scas
jecxz
ret
enter
daa
or
frstor
pop
xchg
les
imulb
enter
sbb
aaa
adc
cmp
lds
addr16
lcall
pushf
out
cmp
mov
mov
and
pop
mov
nop
jge
mov
jns,pt
xor
out
mov
xlat
mov
add
jo
fcomps
lds
or
mov
push
push
sbbb
movsl
add
sbb
loopne
lock
clc
pop
adc
add
imull
add
add
movsb
add
bound
sbb
push
push
inc
std
shlb
lea
dec
leave
icebp
clc
adcb
aas
pushf
xchg
pop
push
fsts
subb
test
inc
add
adc
fsubp
xor
mov
int
mov
pop
push
mov
dec
das
push
add
loopne
push
and
mov
das
and
movsb
out
fiaddl
mov
gs
add
adc
xor
ret
adc
jnp
xor
enter
xchg
jno
or
add
add
repz
icebp
negl
push
fdiv
sub
xor
jo
sbb
mov
fwait
cmp
dec
sbb
cmp
pop
xlat
pop
cs
push
inc
ret
adc
xchg
mov
and
mul
add
sub
cli
push
loopne
push
jo
push
nop
cmp
add
sub
es
lret
xor
mov
test
shrl
sbb
and
xor
aaa
push
jmp
jecxz
add
sbb
test
fsubs
xchg
addr16
add
inc
cmp
add
jnp
and
jg
push
inc
test
add
cli
add
xorl
enter
add
cld
lcall
out
negl
sbbb
sti
sbb
adc
stc
fisttps
popl
or
inc
push
imul
jb
sub
lcall
add
inc
cmp
dec
aaa
daa
mov
pop
sbb
mov
inc
xchg
dec
xchg
push
int3
push
mov
ret
xor
pop
popa
fisubrs
jno
rolb
push
std
mov
mov
dec
push
loop
inc
jp
dec
add
sub
out
faddl
shl
add
sbb
rclb
push
in
add
inc
inc
popa
add
mov
stos
mov
add
adc
fwait
call
into
sub
mov
mov
outsl
add
xlat
pop
jns
push
add
jbe
add
sub
aad
lea
lret
loopne
mov
sbb
xor
pop
jmp
lock
pop
inc
xor
sbb
inc
pop
mov
add
cmp
incb
ficompl
or
cmp
pop
rcrb
add
popa
push
pusha
cmpsl
mov
ljmp
mov
sub
pop
inc
xchg
aam
mov
imul
and
xor
add
into
subl
cmpsb
add
xlat
ret
ja
sbb
bt
mov
fildl
cmpsl
cmp
mov
cmp
add
je
orb
mov
xchg
enter
scas
add
sbb
mov
icebp
dec
shlb
mov
push
fidivrs
pop
iret
shld
adcb
shr
xchg
jae
rclb
xchg
cmp
leave
and
mov
mov
push
ret
arpl
add
xchg
and
add
fldt
insb
addr16
mov
test
js
xlat
sahf
cmp
add
wrmsr
fs
sbb
dec
or
sub
lea
outsl
pop
dec
lock
add
movsl
shll
orl
jle
xor
mov
push
stc
add
cmp
rolb
stos
pushf
mov
cmc
mov
icebp
mov
jno
or
inc
mov
add
cmp
pop
ljmp
push
cli
jl
add
scas
adc
add
mov
push
jge
dec
ret
push
add
cmp
shll
cmp
arpl
leave
or
pusha
mov
lock
lds
inc
xor
add
enter
add
pop
lods
das
pop
and
std
sub
or
in
stc
push
aam
repz
aaa
rcrb
mov
loopne
xor
xor
inc
pop
pop
push
sbb
dec
add
mov
fsubs
push
test
pop
out
mov
xchg
scas
pop
leave
dec
add
cmc
jge
lret
into
sbb
ja
push
jg
inc
mov
sbb
int
mov
fsubrl
jno
scas
mov
mov
or
outsb
nop
or
cmp
add
mov
add
pusha
repz
shrb
mov
push
int
sarl
movsl
sub
cmp
mov
add
outsb
insb
adc
stos
mov
inc
add
push
or
xor
mov
push
adc
sbbb
mov
mov
rcr
repnz
fs
cmp
das
add
xor
into
mov
rolb
lea
jmp
test
push
imulb
add
sti
call
add
xchg
fildl
xor
push
xchg
sub
cmc
data16
mov
dec
loop
add
dec
xchg
mov
add
inc
sbb
push
add
pop
jl
add
jne
lcall
push
rcl
in
add
xlat
push
or
sti
add
repnz
nop
leave
add
loop
or
or
and
scas
cmp
xsaves
incl
roll
scas
scas
push
cmc
xchg
add
mov
jo
outsl
pop
repnz
add
nop
pop
mov
dec
cmp
mov
not
cld
cwtl
xchg
fmulp
pop
sbb
test
xchg
add
pop
push
jno
js
addb
pop
sti
inc
pop
add
stos
push
and
icebp
mov
pop
sbb
mov
jno
pusha
xor
jo
push
mov
addr16
push
int3
xlat
call
ret
push
imul
jecxz
pusha
mov
xor
ja
test
loopne
pop
loop
pop
iret
or
mov
daa
mov
sarl
jle
jmp
mov
add
arpl
je
push
daa
sub
lahf
sub
pop
rol
movsb
jg
cmp
fcoml
pusha
and
jp
mov
cmp
clc
insb
xadd
pop
shll
push
sub
ret
mov
add
sbb
fdivr
aam
sub
cmp
lea
sub
adc
cmp
cmpsb
add
jbe
xor
icebp
dec
xlat
dec
lock
fdivl
dec
cmc
push
lock
add
sub
addl
add
add
cmp
push
or
test
std
jo
mov
popa
add
imul
fs
xchg
dec
pop
cmp
data16
out
clc
push
jg
add
push
jp
mov
jo
ja
or
jae
stc
stos
aam
fchs
lahf
add
in
mov
in
mov
adcb
test
pop
inc
add
mov
jae
and
cmpsl
add
pop
sub
dec
shll
je
and
shrb
lods
mov
mov
add
add
jp
lds
stc
pop
add
mov
add
sbb
cmp
add
xor
movsb
mov
fwait
in
jnp
lock
xchg
fadds
enter
adc
cwtl
imul
inc
shlb
push
pop
jp
movsl
loop
jmp
xchg
inc
out
jb
scas
add
lcall
add
mov
leave
call
cmp
and
jecxz
dec
mov
cmpsl
push
mov
nop
scas
jg
xor
inc
push
fildl
shl
inc
test
scas
jnp
int3
leave
sti
iret
std
jl
add
test
mov
jo
pop
ret
movsb
shlb
setb
andb
sub
lahf
pop
testl
jle
aam
xor
sbbb
mov
sbb
test
mov
add
adc
pop
daa
push
icebp
mov
add
aad
cli
pop
repnz
fcompl
mov
roll
into
push
add
xor
lock
push
lahf
cmp
mov
std
and
add
cli
push
into
test
xchg
mov
jbe
les
call
push
aam
add
out
insl
sbb
and
push
int3
je
add
aam
mov
inc
nop
in
popf
ss
push
add
adc
pusha
adc
aas
jecxz
adc
add
call
xor
loopne
add
cmpsl
test
add
mov
dec
aas
inc
push
loope
pusha
mov
push
mov
jb
pushf
les
or
push
push
out
push
pop
sahf
test
or
add
rolb
addb
pop
ljmp
subl
mov
add
movb
sbb
add
test
test
mov
mov
ja
add
adc
lcall
sub
cmp
mov
lds
insb
jno
pop
jb
fwait
loopne
sbb
cmovo
push
mov
xor
lock
loop
add
add
scas
jg
mov
push
roll
sub
mov
xchg
pop
push
popa
ljmp
pop
outsl
inc
cwtl
add
aas
push
out
nop
inc
nop
adc
pop
mov
ds
and
fsubrl
add
ret
das
ss
mov
xor
pop
mov
movsl
push
mov
add
inc
jnp
bound
mov
andl
pop
adc
das
jo
add
andb
add
add
loop
insl
dec
nop
mov
xor
jnp
mov
incl
mov
fnstenv
stc
xor
test
ds
loope
ficomps
ss
scas
inc
add
int
sub
aam
pushf
mov
jl
cwtl
adc
push
or
inc
add
in
jnp
jmp
pop
add
add
dec
mov
xchg
dec
imul
lds
add
cmp
add
add
lcall
add
cmp
dec
jb
nop
dec
add
cmpsb
cltd
jno,pt
imul
shl
addl
pop
sti
push
jns
call
repz
test
pop
cli
xchg
ja
icebp
sarb
push
outsl
inc
or
fsub
jns
jp
repz
pop
cli
mov
push
xchg
gs
ds
jl
pop
movsb
out
and
inc
sbb
push
pop
jns
int3
orb
repnz
je
movsb
repz
or
xchg
call
imul
add
testl
mov
pop
sub
lds
inc
movsl
enter
dec
dec
add
jno
nop
sub
jl
add
cmpsb
das
into
pop
lock
enter
cmpb
cmp
test
pop
fucomp
or
mov
pop
push
leave
jmp
add
hlt
jae
push
pop
enter
jle
or
xchg
and
push
test
cli
cli
sbb
lock
cmpsl
mov
ljmp
das
and
out
jns
push
push
testb
mov
and
xor
cmpsl
add
faddl
shl
jmp
add
dec
out
mov
fwait
loope
push
xor
shlb
add
push
cmc
lds
movl
dec
filds
cli
inc
sbb
mov
and
add
sbb
add
pop
xor
les
sub
lret
push
pop
pop
and
lods
lds
mov
fstpt
testl
push
nop
push
push
movsl
aaa
add
je
adc
add
pop
inc
loopne
add
or
out
in
fisubrs
test
push
lods
push
repnz
cmp
sbb
jmp
roll
cmp
inc
mov
dec
dec
dec
in
test
add
pop
js
dec
cmp
mov
icebp
shll
cmpl
jge
add
and
pushf
add
rolb
push
sbb
in
aam
push
push
mov
lods
add
sbb
nop
pop
or
popa
add
addl
out
push
mov
shl
jecxz
xchg
add
adc
mov
push
add
pop
sub
jb
mov
das
ljmp
mov
test
cwtl
orb
pop
add
jle
sbb
js
in
pop
gs
mov
push
icebp
adc
or
push
add
mov
insb
add
hlt
pand
mov
lds
add
cli
sbb
add
aaa
stos
sbb
int
gs
pushf
add
incb
arpl
das
lahf
and
addb
xor
cmp
add
rcl
subb
mov
add
bound
in
sbb
pop
out
imul
gs
xor
call
mov
add
test
jbe
dec
scas
or
push
loopne
aam
loopne
roll
dec
pop
mov
sub
xchg
and
add
and
mov
jo
inc
add
cmp
inc
lock
pop
mov
in
or
sbb
fsubr
clc
pusha
mov
pop
into
shll
add
pop
les
ljmp
jle
xlat
mov
add
clc
push
ljmp
loopne
xchg
fisubrs
lret
mov
add
sahf
jge
jg
and
push
jo
pop
lds
jp
jae
add
mov
adc
test
xchg
sbb
mov
mov
mov
and
cli
cmp
push
rol
dec
cmpsb
or
adc
int3
mov
and
leave
add
icebp
movsb
add
fcomp
mov
addr16
pusha
adc
in
cwtl
fstl
pop
mov
add
xchg
test
pop
outsb
es
sbb
xchg
sub
nop
faddl
jecxz
outsb
xlat
mov
push
fstps
pop
cli
mov
int
fsubrs
addl
mov
sub
add
mov
sub
jg,pt
xchg
pop
or
jl
mov
and
add
rorl
cld
int3
add
in
xchg
das
mov
arpl
cmc
mov
rolb
mov
or
push
out
add
mov
incb
and
add
and
sub
push
faddp
dec
mov
aas
pop
mov
inc
nop
jl
sbb
xor
xchg
dec
pop
lret
jg
cmp
pop
push
fidivs
adc
enter
das
sbb
stc
insb
sub
icebp
add
sub
inc
es
popa
ss
cmp
mov
inc
shrl
jns
aam
push
cmp
cmpb
or
int3
movl
and
scas
stos
cltd
pop
push
orl
fistps
pop
add
repz
aaa
jae
mov
push
fadds
inc
aam
lock
sub
dec
xchg
push
sbb
imul
push
pop
aas
and
adc
cmpsb
dec
xchg
jecxz
add
and
outsb
notb
in
pop
jmp
jbe
inc
stos
push
mov
dec
addl
xchg
or
add
lods
pop
fwait
mov
aam
push
inc
fidivs
in
and
jb
xlat
mov
mov
out
xchg
inc
imul
repnz
add
vmread
gs
and
cmp
mov
mov
xchg
bound
add
fistl
stos
sub
orb
ror
cmp
add
gs
and
sub
stos
xchg
cs
xchg
dec
pop
aam
aam
jecxz
rorl
dec
fiadds
pop
xlat
sub
and
inc
push
add
jb
aas
mov
repz
xor
inc
ss
mov
cmp
hlt
andb
sub
sub
mov
and
pop
sbb
push
lods
shl
inc
add
rorb
pop
jo
inc
mov
sub
pusha
lcall
test
xor
sbb
es
sub
sub
pop
ja
int
adc
cltd
out
xchg
outsb
sbb
scas
fdivrs
dec
subb
in
notb
mov
imul
fiaddl
sti
inc
inc
les
call
xchg
inc
xchg
mov
xor
shlb
in
xchg
mov
mov
add
mov
sbb
sbb
pop
call
ret
xor
sbb
js
std
dec
pop
adcb
pop
mov
push
popf
inc
mov
mov
push
mov
in
xchg
push
cmp
addr16
ret
sub
ds
loope
gs
adc
fmuls
rol
mov
mov
jo
push
add
mov
mov
add
sbb
sbb
cmp
push
push
add
xor
mov
adc
out
or
pop
add
sbb
sbb
mov
push
inc
js
pusha
push
mov
push
int
jbe
lods
mov
sub
bound
xchg
cwtl
inc
cmp
rolb
mov
jecxz
cmpl
pop
fnsave
mov
xchg
sub
mov
cmp
add
in
add
jae
push
outsl
cmp
shlb
sbb
ja
xorb
mov
sarl
pop
xchg
mov
jp
add
cmp
push
add
cmp
add
pop
mov
dec
xchg
xchg
jl
xsha256
cmpsb
adc
jne
clc
mov
add
stos
sahf
add
adc
xor
jl
das
xchg
xchg
test
adc
sub
jb
xor
or
in
test
mulb
pop
das
xor
out
pusha
xchg
push
repz
add
setns
mov
jns
cmc
push
inc
aad
xchg
rclb
test
and
or
jno
cli
rolb
subl
jne
add
jae
mov
cmp
sbb
fbld
add
outsl
push
push
incb
mov
add
aad
cmpsb
push
mov
fsubrs
sbbb
fidivs
push
fwait
orl
push
jb
mov
add
sarl
cwtl
js
dec
pop
fs
or
add
pusha
ja
popa
std
pop
cmp
pop
test
add
xor
sub
mov
add
icebp
mov
sbb
outsl
mov
andl
daa
into
add
jne
test
jnp
sti
push
cmp
cmp
add
cmpsl
es
jle
push
add
les
cli
add
repnz
jno
add
pop
arpl
xchg
mov
add
mov
in
cmc
cmp
and
add
push
hlt
xor
repz
pop
add
and
sbb
mov
mov
rolb
dec
sub
je
movsb
cltd
adc
pushf
stos
add
jmp
dec
fcmove
add
iret
mov
ja
fcompl
daa
push
psrad
clc
xchg
lret
iret
cwtl
add
cltd
push
cmp
je
ss
cmp
arpl
inc
add
fstpt
adc
imul
push
mov
leave
std
add
push
in
jns
jae
add
enter
pop
nop
outsb
out
add
mov
xchg
add
mov
add
mov
jle
cmp
push
push
lods
add
mov
xor
add
outsl
notl
xor
inc
roll
xchg
lea
mov
cld
pop
aam
mov
pop
enter
cmovb
sub
sbb
roll
jmp
fnstcw
jns
sub
dec
add
daa
adc
dec
add
cmp
sub
dec
aad
sbb
add
daa
and
ror
rolb
add
dec
and
jmp
fsub
aaa
sbb
add
push
adc
inc
bound
dec
mov
leave
cli
add
or
les
rorb
jae
jg
cmp
sbb
add
pop
jg
mov
lahf
adc
fidivl
xchg
sub
sbbb
in
mov
jp
scas
dec
sarb
add
in
cmp
inc
stos
cmpsl
or
jo
mov
adc
cmc
fsubs
clc
xchg
inc
lods
add
ss
jbe
hlt
push
sbb
lods
aam
subl
in
shl
add
fs
call
dec
add
fldt
xchg
mov
stos
sbb
pusha
xchg
push
cld
out
add
inc
inc
out
xorb
mov
adc
adc
xchg
mov
roll
push
jmp
pop
roll
cmp
jb
jae
dec
add
pop
mov
aas
fldenv
xor
inc
shll
add
mov
cmp
shl
xchg
mov
in
pop
shll
scas
imul
fsubrs
inc
mov
inc
push
comiss
hlt
mov
rorb
pushf
sub
rolb
iret
or
jns
cs
xor
add
aas
dec
mov
dec
xchg
insl
cmpsb
mov
aam
es
shr
cmp
ficompl
xlat
sub
xor
or
and
ljmp
nop
imul
popf
inc
call
fidivl
je
negb
dec
aaa
addb
lea
je
adc
fadd
cmp
loop
xchg
outsb
pusha
cli
sbb
bound
add
lcall
lock
jle
mov
outsb
sarl
arpl
out
xchg
add
pop
mov
ss
xor
pop
add
jb
mov
stc
add
sub
leave
push
fsubrl
fwait
das
mov
dec
shrb
rolb
dec
pop
setbe
stos
pop
pusha
into
dec
ljmp
xor
mov
cld
add
mov
out
sub
jo
add
fld
std
xor
add
and
push
lds
push
cmpb
mov
cmp
jg
sub
cmpsl
ljmp
out
dec
jge
in
xchg
add
push
addr16
dec
iret
fsubrl
sub
xchg
aaa
push
stc
notb
fiaddl
jno
enter
add
sub
push
dec
sbb
faddl
icebp
or
cmpsb
paddsw
xorb
add
test
or
notl
dec
add
xchg
push
movsl
in
jp
add
arpl
loope
xchg
je
xchg
and
js
ljmp
mov
cmp
add
sub
scas
lret
test
push
pop
sbb
mov
in
rolb
aam
aas
add
ret
jns
loopne
leave
inc
fs
cmpsl
add
pop
mov
mov
xchg
sti
push
cld
leave
pop
test
add
pop
cmp
mov
lods
mov
cmpsb
inc
push
pop
jge
mov
xor
adc
fstpt
mov
push
fs
add
cmp
jp
add
fmull
flds
data16
ljmp
in
enter
jg
add
lret
and
adc
mov
lods
cs
aad
pop
int
into
jbe
outsb
test
pop
mov
jg
add
mov
fsubrl
xchg
mov
sbb
sub
in
imull
test
jns
int3
int3
adc
hlt
xor
inc
or
mov
cmp
mov
adc
xor
nop
mov
cmp
cld
pop
sub
push
mov
das
or
int3
xor
outsl
add
icebp
stos
inc
add
cltd
outsb
jp
fnsave
movsl
loop
push
add
daa
and
mov
lea
or
int3
xor
add
sub
dec
paddusw
cld
add
inc
rorb
mov
iret
mov
cmpb
cmp
inc
fdivrs
jge
sbb
jle
add
movsl
shlb
mov
scas
je
scas
push
mov
and
or
add
jno,pt
cmp
pop
add
cmpsb
mov
pushf
out
push
int3
sub
or
sbb
add
test
imul
leave
dec
dec
roll
les
dec
ds
imul
dec
xlat
mull
mov
mov
jle
add
cmp
int
push
push
mov
clc
mov
rcl
iret
pop
test
jno
mov
mov
shlb
movsl
xlat
pop
mov
pop
xor
mov
pop
cmpsl
mov
mov
add
repz
xor
add
arpl
imul
mov
leave
push
xor
add
dec
stos
cmpsl
mov
negl
pop
sahf
fldenv
jg
adc
mov
test
push
push
mov
das
push
add
lahf
out
sbb
int
lods
fucomi
pop
in
dec
lds
xchg
mov
mov
pop
inc
test
add
sbb
xor
xlat
test
ja
push
push
incb
repz
subl
xchg
inc
cwtl
rolb
loop
push
dec
mov
jp
push
pop
mov
nop
imulb
add
in
mov
add
inc
push
dec
cmp
shll
mov
ja
mov
out
bound
je
or
lret
jno
jo
add
js
and
test
pusha
inc
adc
add
leave
dec
pushf
mov
std
cwtl
pop
pop
inc
inc
loop
not
lret
rolb
jae
mov
in
mov
xchg
clc
mov
sarl
cli
xchg
daa
add
jnp
xchg
mov
xchg
add
dec
or
mov
mov
xor
adc
and
mov
sahf
jbe
rorb
jno
add
pop
push
ss
test
cmpsl
jmp
xor
pop
add
dec
popa
mov
add
clc
inc
dec
mov
xchg
adc
adc
sarb
lea
pusha
popa
imul
jl
cmp
loopne
jnp
xchg
add
adc
in
ret
cli
das
loopne
test
add
add
adc
push
push
jb
add
sub
andb
ss
pop
push
sti
push
jecxz
sarb
add
decl
call
mov
sbb
jmp
xchg
xchg
and
nop
jb
add
sbb
cwtl
xor
xor
pop
add
push
adc
or
lahf
or
jle
add
inc
imul
push
sub
cmpl
mov
fs
test
and
xchg
repnz
jns
clc
in
pushf
fcomi
add
cmp
add
or
popf
inc
dec
out
out
orb
pop
pop
out
and
nop
add
es
inc
lret
adc
shrb
or
jl
cmp
xchg
add
jno
mov
fsubrl
daa
jbe
dec
add
aam
and
or
sub
int3
jne
sub
aas
rcr
ficoml
add
pop
mov
or
lret
push
mov
aas
scas
add
mov
and
xchg
rcr
add
dec
cmpsl
gs
mov
ret
repnz
ret
mov
mov
test
push
inc
ja
xchg
adc
cs
mov
clc
inc
sub
lret
sbb
sub
push
inc
sub
addr16
mov
gs
test
mov
inc
and
dec
or
push
orl
fdiv
push
call
sbb
xor
pop
sbb
jo
fwait
mov
inc
and
and
nop
inc
push
add
cmp
adc
sub
jg
sub
add
je
sti
loopne
aam
sbb
pop
and
push
add
pop
jae
pop
dec
jne
or
mov
loope
lret
mov
outsb
sub
add
and
mov
gs
hlt
mov
shrl
cmpsb
adc
stc
scas
jno
std
ffreep
lcall
jmp
mov
hlt
add
mov
xor
push
add
aad
loopne
and
mov
push
sbbl
inc
lret
jg
test
mov
std
push
lods
jb
xor
loop
mov
jo
loopne
mov
xchg
iret
lods
daa
test
push
pop
rolb
test
roll
or
push
lds
andl
fnstenv
adcl
movsb
fisubrl
or
pop
fsubs
sub
inc
in
mov
add
push
xor
and
pop
pop
sbb
int3
sbb
add
and
icebp
mov
and
sbb
rcrb
add
arpl
mov
loopne
lcall
outsl
sub
cld
in
les
adc
out
add
aam
or
and
add
ror
das
mov
push
cld
iret
and
fs
dec
loope
mov
jmp
mov
pushf
loopne
insb
out
xor
and
rcr
cmp
cmc
push
faddl
fcmovb
mov
xchg
push
add
mov
hlt
clc
xor
jae
add
jo
ss
pusha
or
loopne
popa
sbbl
adcb
lods
pop
push
mov
pop
repz
jnp
mov
add
push
shlb
out
jp
add
xorb
xor
test
pop
adc
cmp
dec
test
xor
add
push
dec
mov
add
pop
stos
rdseed
fidivl
js
cmp
data16
repnz
mov
fsubrl
mov
popf
hlt
loopne
sbbl
xchg
mov
fcmovnu
out
inc
ljmp
out
fnstsw
mov
arpl
inc
push
cmp
je
add
sub
pop
mov
cli
repz
outsl
mov
dec
ror
pop
loopne
adc
mov
xor
test
dec
test
mov
insb
stos
and
xor
adc
fimull
cli
nop
test
or
loopne
inc
mov
mov
in
jp
dec
dec
add
add
sahf
cld
hlt
cmp
imul
xor
pusha
not
cltd
pop
mov
loopne
lods
mov
lock
jo
adc
sbbb
add
inc
test
fdivrl
cmpsb
arpl
in
jb
sub
or
fimull
subb
xchg
add
in
shrb
mov
cmp
nop
or
enter
xor
push
cmp
inc
adc
or
sahf
pop
add
cltd
popa
dec
jp
pop
fnstcw
pusha
mov
in
pop
mov
cli
in
add
cmpsl
add
insb
and
mov
xor
xlat
cli
pop
add
add
fadd
xor
adc
insb
xor
shlb
cmpsb
mov
in
pop
jbe
cmp
xchg
mov
out
loopne
pop
push
mov
js
pop
add
data16
add
push
mov
adc
jno
dec
sbb
cmpb
xchg
jnp
add
push
fcom
js
add
hlt
add
push
add
mov
add
dec
dec
jl
mov
hlt
in
pop
lea
andb
inc
mov
add
mov
gs
cmpsl
mov
or
pop
mov
sbb
jl
rcl
add
in
stos
pushl
or
movsb
and
sub
pop
test
or
inc
out
pop
iret
loopne
and
sbb
sbb
jmp
add
push
data16
mov
pop
jae
ss
add
sbb
outsl
add
cmpsl
mov
add
dec
lods
lea
push
fwait
pop
sub
addb
dec
cmpsl
and
pop
out
add
push
push
mov
and
add
sub
jmp
or
clc
mov
adc
movq
adc
xlat
roll
jl
cmp
pusha
pop
push
adc
idivl
sti
subb
pop
pop
and
pop
cmpsb
nop
mov
xlat
sarb
call
test
add
add
cmc
outsl
inc
jl
cmc
repnz
inc
decb
sub
xchg
add
ja
mov
cmp
inc
popfw
xlat
xor
neg
lock
fdivrs
cld
and
jmp
xchg
fdivrl
dec
popa
aaa
clc
mov
add
and
pop
push
and
push
mov
fs
sbbl
ljmp
scas
xorb
dec
add
lods
enter
push
jl
lds
out
dec
add
cs
int
push
xor
mov
mov
xlat
testl
sbb
sbb
cmp
cmp
add
and
xlat
mov
xchg
fistl
data16
inc
or
sar
outsb
push
mov
push
xchg
jb
notb
jmp
into
fsubl
fsubrs
addb
jge
addl
ss
pop
jb
sbb
cmp
mov
add
call
mov
xor
add
adc
sbb
pop
cmpsl
lahf
mov
enter
sahf
insl
sub
jp
loope
xor
sbb
add
lea
lds
inc
sarb
sub
adc
mov
xchg
jo
and
jne
dec
xlat
es
lret
fucomi
insb
push
xor
movsb
pop
add
cwtl
rolb
addb
or
xor
sbb
in
mov
cmp
data16
flds
imul
bound
mov
jle
add
out
fnsave
ljmp
mov
xchg
test
inc
loopne
ja
cltd
in
mov
adc
pop
push
in
xor
lds
add
xchg
sbb
jnp
lods
add
in
out
jbe
sub
sti
test
cmp
add
mov
aad
stos
and
hlt
cld
call
inc
xchg
repz
sbb
addr16
and
jle
add
or
adc
aam
pop
lahf
repnz
dec
nop
and
test
rolb
sbb
add
shll
push
scas
jmp
in
add
push
std
mov
mov
fs
movl
sbb
cmpsb
mov
outsb
dec
mov
sbb
and
ficomps
add
sub
push
add
add
or
add
sbb
jmp
sub
or
int
repnz
push
stos
aad
cmp
add
inc
packsswb
faddl
adc
sub
cmp
data16
int3
add
pushf
pop
xchg
add
or
test
test
mov
dec
or
cs
mov
cmp
add
mov
stos
aas
add
xchg
mov
arpl
fiadds
or
xchg
int
inc
mov
sub
dec
add
xor
push
out
cwtl
sub
lods
fistpll
jge
repz
sahf
mov
add
jae
push
push
add
fisttps
inc
cwtl
les
or
sbb
popf
jp,pt
add
adc
jns
pop
add
fistpl
xchg
xchg
sbb
push
adc
jle
jne
mov
shll
popf
add
mov
mov
add
aad
enter
mov
adc
push
adc
add
leave
and
ljmp
roll
stc
out
mov
clc
flds
and
mov
cmp
xor
in
call
paddusw
sbb
mov
mov
or
dec
add
aad
arpl
lahf
mov
jb
lahf
mov
lcall
icebp
mov
notb
cmp
dec
add
push
iret
aaa
sub
std
push
sahf
les
lea
clc
insl
or
rorb
enter
stos
out
std
int
add
cmp
add
jecxz
ljmp
xchg
notl
xchg
lea
push
rolb
add
in
lret
xchg
add
adc
mov
push
fstpt
mov
loopne
mov
add
insl
sub
inc
scas
xorb
shll
test
inc
mov
subb
movsl
adc
int
mov
or
mov
xor
test
std
pop
mov
pop
adc
add
clc
and
add
mov
or
int3
ror
dec
add
daa
das
cli
je
mov
aam
mov
inc
push
inc
jno
faddl
sub
dec
add
call
xor
shl
popf
inc
add
cmp
faddl
outsl
push
cltd
sbb
mov
call
jns
sti
shl
sub
rcll
mov
clc
cmp
sbb
sub
mov
and
lretw
shlb
cli
jge
push
cmpb
std
fcmove
mov
ds
jl
dec
cld
mov
xchg
add
xor
add
js
loopne
lods
data16
adc
inc
arpl
sub
mov
jecxz
jns
sbb
inc
mov
shrb
sbb
xor
push
adc
out
subb
push
pop
es
add
sbb
mov
cmp
adc
jnp
cltd
dec
sbb
cmc
js
xor
sub
add
jge
xchg
daa
and
xchg
ds
adc
push
sub
and
adc
pop
cwtl
inc
std
add
adcb
or
mov
push
pushf
and
shl
je
mov
sbb
rorl
jg
scas
adcb
add
sti
frstor
mov
pop
adc
cld
clc
loope
push
add
sbb
cs
mov
adc
sbb
pusha
lods
enter
xchg
mov
add
loope
int3
and
inc
test
nop
aam
sahf
add
lods
push
xchg
aad
xchg
adc
ror
sahf
dec
pop
outsb
xor
sbb
jae
sbb
jbe
call
push
pushf
xchg
and
cmc
mov
mov
in
aad
push
insl
sub
add
lock
ror
cs
sub
fsubrs
push
out
or
mov
cld
stc
enter
test
arpl
loopne
pop
inc
add
into
sub
out
pop
pop
addr16
loopne
xor
loopne
outsl
add
cmpb
fwait
aam
add
push
arpl
pop
stos
sub
cmp
das
je
cmp
adc
inc
lcall
movsb
int
lahf
dec
ja
or
dec
push
add
fisubrl
std
data16
mov
roll
jmp
cli
rolb
aad
push
test
push
cld
sub
add
divl
adc
pop
push
dec
dec
add
int3
cmp
mov
fidivl
cmpsb
jecxz
jg
into
pop
xchg
adc
lahf
test
cmp
sbb
pop
pop
imul
ret
jl
insb
loopne
add
mov
mov
popa
mov
jecxz
dec
jbe
pop
or
mov
dec
xchg
sbb
push
rolb
xor
iret
cwtl
frstor
adc
add
xchg
adc
mov
push
sub
pop
dec
mov
add
adcl
add
nop
add
es
xor
add
fdivrs
lcall
push
bound
cmp
sbb
ret
xor
jle
add
out
jp
dec
add
mov
add
cmp
std
cmp
mov
jae
fnstenv
jno,pt
push
xchg
lods
add
xchg
fadds
scas
adc
or
aas
pop
nop
push
inc
bound
mov
cmp
outsb
pop
orb
jno
fwait
adc
add
cmpsl
jge
xor
es
ja
push
in
mov
mov
or
fcoml
xor
sbb
test
cvtdq2ps
add
lea
data16
push
add
in
dec
sub
or
sub
add
lock
mov
sub
in
popf
rcl
test
cmp
cmp
mov
mov
xchg
jnp
out
add
mov
lods
iret
add
lea
or
imul
pop
add
push
jo
dec
or
mov
add
lock
sbb
sbb
cltd
repz
psubb
lock
into
inc
inc
paddusb
and
add
lret
icebp
push
xchg
movsl
or
xorl
andb
pop
ds
sahf
js
notb
fisttps
lock
add
adc
cmp
cmp
inc
sub
pop
mov
inc
push
jo
or
movsb
fmuls
adc
rol
enter
loopne
add
xchg
adc
popa
out
pop
addr16
add
mov
dec
inc
push
xchg
cmp
pop
pop
fcoml
js
xor
adc
int3
push
mov
add
xor
jp
add
cmpsb
xchg
adc
sti
pop
inc
loopne
adc
lock
xchg
popl
mov
ret
add
mov
add
push
mov
clc
mov
sbb
repnz
inc
push
xor
daa
pop
dec
jo
jmp
cs
repnz
pmullw
mov
mov
ret
sbb
add
stc
mov
ja
jne
popf
ss
fstpl
mov
icebp
sti
call
xchg
pusha
adc
cmpl
sub
lods
jne
mov
ret
push
add
jmp
loopne
dec
cli
add
out
jecxz
adc
out
pop
add
lock
sub
scas
xchg
push
test
ss
mov
mov
rorl
jbe
insl
ja
add
cmp
scas
add
inc
mov
cmc
or
imul
mov
testb
inc
and
add
xor
push
jl
push
inc
jnp
int3
test
and
lcall
xchg
add
or
add
cmc
adc
sahf
add
stos
xchg
inc
shlb
loop
and
lcall
mov
cld
test
iret
add
or
push
push
jno
sbb
mov
add
or
jo
enter
push
lock
or
add
mov
add
xchg
xchg
xchg
add
push
sbb
sub
pop
cwtl
mov
add
fistpl
std
add
jle
mov
push
xor
iret
fisubl
stos
cld
mov
dec
dec
xorl
and
push
fs
sbb
fildll
adcb
aad
add
jnp
shrb
or
int
xchg
push
popa
inc
dec
fildl
add
xor
outsl
xor
call
push
outsb
cmp
dec
adc
or
scas
cmc
dec
sbb
mov
cs
and
in
stos
leave
cmp
sub
loope
and
mov
add
add
inc
incl
cmp
cmp
fcmovne
mov
lret
push
jg
sub
push
mov
and
js
jp
addb
sbb
inc
push
add
cli
mov
xor
lock
push
cwtl
test
pop
add
lods
mull
ds
data16
mov
mov
xor
lock
adcb
add
lret
out
sub
mov
pop
ret
pusha
and
jmp
xchg
sbb
pop
dec
pop
add
inc
sub
xchg
int3
ds
push
fdiv
icebp
lock
mov
inc
add
les
jb
cmp
sub
pop
imul
dec
into
cmp
or
dec
je
shlb
leave
dec
sarb
adc
jo
roll
xor
push
cmc
add
push
ljmp
dec
jns
pop
sub
fdivrl
add
xchg
ljmp
sbb
loop
movhps
inc
stos
add
adc
scas
lds
outsb
in
movsb
xchg
mov
fidivrs
mov
nop
push
out
dec
pop
loope
add
iret
ret
push
movsl
or
cmpsb
addr16
stos
loopne
sbb
add
cmpsl
xchg
inc
jmp
ret
add
or
out
jnp
add
xchg
popa
inc
pop
lcall
popf
xorl
push
jnp
xchg
fbld
rcrl
addr16
mov
jl
mov
xor
cmp
mov
sti
pop
imul
cmp
jnp
sub
pop
scas
add
mov
or
lret
mov
outsb
das
inc
push
je
jb
mov
sbb
add
inc
sbb
add
dec
cmp
inc
das
push
pusha
adcl
pop
int3
ret
sub
mov
outsl
add
dec
push
adc
mov
jmp
dec
and
push
in
call
jg
add
loop
cwtl
push
adc
add
mov
popa
repnz
add
dec
iret
or
outsb
jnp
andl
sbb
and
or
or
mov
or
add
xchg
push
adcb
test
inc
loopne
mov
lds
sub
sahf
cmp
push
invd
iret
loopne
dec
xchg
std
adcb
jo
fldl
adc
push
mov
or
cmp
xchg
inc
or
sti
xor
jb
fnstcw
enter
mov
lea
shll
inc
mov
out
jl
pop
rcll
jmp
dec
pop
pop
mov
sbb
add
jmp
jns
lea
pusha
xlat
addr16
jp
add
int
dec
add
ds
adc
jg
mov
in
sub
mov
dec
add
addr16
mov
pop
add
jbe
leave
sti
enter
inc
xor
ja
xchg
insl
lret
scas
or
xchg
add
sarb
cmp
jne
push
and
jmp
push
stos
aaa
imul
in
mov
fadd
ret
inc
xor
inc
add
icebp
cmp
inc
push
xor
inc
mov
and
in
call
mov
lods
jl
aas
sbb
sti
js
cs
sub
add
sti
mov
rcll
enter
jle
pmulhuw
imul
jnp
ds
add
push
fisttpl
add
and
pop
xchg
es
sub
movsb
hlt
ret
daa
add
pop
clc
mov
push
push
mov
jb
mov
push
push
add
cmp
inc
lods
shrb
insb
pop
add
sub
repz
mov
adc
fisubrs
test
cmpb
jp
dec
sbb
push
add
and
out
cmpl
mov
leave
cld
add
or
xor
mov
push
adc
xchg
mov
xor
mov
sub
test
popf
push
push
pop
test
jae
mov
xchg
les
mov
add
out
xor
add
idiv
loop
ds
inc
push
mov
sub
lahf
bound
sahf
add
sub
out
mov
inc
aad
add
sub
insl
mov
pop
add
or
sbb
push
jnp
inc
stos
cs
and
pusha
shl
inc
int3
push
or
pop
pop
fildll
dec
add
cmp
std
gs
push
dec
mov
cmp
push
sbb
and
xor
add
and
jmp
xchg
add
pop
mov
ret
mulb
add
test
cmp
addl
movsb
dec
ja
loope,pn
stos
xor
add
orb
hlt
ret
aad
add
xlat
loope
popf
icebp
add
mov
pop
mov
and
addr16
add
push
dec
mov
lds
es
imul
leave
xor
ficompl
fwait
or
movsl
loopne
bound
orb
cwtl
rcr
ljmp
dec
sbb
dec
mov
nop
rorl
ret
aam
and
mov
xchg
fsubr
or
xchg
adc
xorb
stc
lea
jecxz
or
and
pop
rcr
xor
aas
into
out
push
jno
sti
add
or
add
mov
rcrb
ja
and
shl
xor
add
test
pop
push
mov
orl
enter
and
aam
int
mov
movsl
subl
les
sbb
and
popa
test
sub
loope
sbb
jb,pn
roll
mov
sub
and
sub
aam
dec
fmull
add
dec
xor
pop
jp
and
fwait
es
add
cmpsb
inc
dec
pop
dec
testl
in
mov
inc
mov
sbb
xor
xorb
sarl
sbb
in
ss
jp
in
cmp
sahf
mov
movsb
push
mov
fnstcw
dec
xor
push
ljmp
test
arpl
in
ja
adc
push
aas
mov
push
jae
mov
in
aas
inc
ret
add
addr16
push
cmp
cs
test
ss
loop
leave
pop
xor
sbb
addl
xchg
dec
add
jns
or
lock
add
cmpsl
sub
fdivrp
cmpsb
andb
push
pop
add
cmp
out
andb
mov
repz
and
andb
mov
jmp
clc
jg
add
push
pop
aam
lods
insb
sbb
cmp
test
mov
sub
scas
mov
mov
into
dec
xorb
add
hlt
mov
addr16
fisttpll
sub
ficomps
shr
cmp
roll
pop
jnp
test
cmp
pusha
pop
cs
xchg
roll
add
dec
call
cwtl
enter
imul
aad
mov
jnp
lret
int
adc
rorb
in
xor
cmc
adcb
xor
inc
mov
xor
sahf
mov
sub
sbbb
mov
push
ss
ja
add
cltd
je
jnp
clc
stc
aas
jo
add
sbb
adc
es
adc
mov
and
testb
mov
jp
sarb
add
ficomps
add
push
mov
or
xchg
jg
jnp
bound
idivb
cmp
cld
mov
sbb
push
mov
push
daa
scas
jo
jge
sbb
aas
cmp
mov
cli
push
ja
push
and
gs
inc
mov
mov
add
cltd
and
push
add
movsb
push
sub
mov
aaa
stos
ss
inc
mov
aad
mov
xor
es
hlt
nop
or
mov
push
test
ja
cs
pusha
mov
push
stos
bound
inc
mov
push
out
subb
cmpsl
lea
je
aam
adc
insl
cltd
push
jns
mov
add
hlt
mov
cmp
inc
pop
inc
push
shlb
ja
jle
int3
xchg
or
in
pop
add
sbb
sti
incl
xchg
add
sub
inc
in
add
sbb
fildl
pop
add
mov
or
movsl
pop
clc
push
addr16
enter
icebp
repnz
push
addr16
mov
sub
add
icebp
in
pop
fdivl
hlt
add
xchg
cmpsb
push
cmc
cmp
ds
rcl
jae
mov
scas
inc
pop
mov
push
fwait
add
and
pop
mov
or
lret
into
shlb
jle
sub
ret
shlb
dec
pop
add
add
iret
add
mov
jne
xor
dec
adc
addr16
add
daa
cmpsb
ja
add
jle
add
dec
fstpl
jg
add
push
xchg
insl
fcmovb
pop
out
push
cmp
sbb
and
outsb
loopne
into
dec
dec
and
mov
dec
in
stos
dec
test
popl
rclb
add
es
cwtl
add
test
add
jl
dec
shlb
movsb
lret
jmp
jnp
add
scas
adc
hlt
pop
mov
add
mov
mov
mov
jge
sbb
xor
cmp
pop
lds
add
cmp
out
xchg
add
mov
xchg
test
mov
lcall
jmp
mov
fneni(8087
xor
jno
sti
pop
cmp
cmp
ljmp
outsb
in
dec
addl
cmc
pop
lock
pop
rcll
or
addr16
fdivs
push
insb
sbb
push
rclb
sub
pop
out
add
in
and
push
scas
adc
add
popa
out
adc
xchg
rorl
adc
outsl
ds
nop
and
std
repnz
push
sbb
sub
add
sbb
cmp
or
imul
xor
push
out
mov
std
sub
cld
insl
in
test
add
push
mov
jno
fsubr
adc
xor
pushf
insl
roll
pop
sub
adc
cmc
add
xor
pop
xchg
and
xor
cmpsb
shrb
mov
cmp
nop
jl
sub
cmp
inc
push
mov
call
fucom
xchg
movsb
pop
or
cmc
and
mov
dec
adc
stc
push
inc
std
mov
add
loopne
or
rcr
xorl
cld
sbb
pop
push
popa
jae
or
psubw
loope
jo
add
add
add
aam
mov
nop
push
mov
or
aam
subb
pop
add
mov
mov
xorb
inc
cmp
push
out
pusha
pop
enter
add
mov
and
cwtl
rolb
aaa
jne
insb
add
pusha
mov
test
pop
jmp
stos
add
xor
es
movl
jl
or
dec
sub
imul
dec
push
cmpb
pop
in
push
mov
mov
cli
lods
cltd
sbb
pop
push
xchg
and
push
incl
mov
mov
push
mov
or
xchg
or
aaa
sbb
pop
add
mov
fcompl
add
cmp
aas
jecxz
rcr
fisubrs
dec
stos
adc
fbld
push
shl
inc
std
sbb
cli
mov
cmp
sarb
push
cmpsb
shr
xor
mov
cld
punpckldq
in
add
inc
add
sbb
ds
add
add
mov
xchg
cmp
or
out
add
cmpsl
xchg
adc
push
les
repnz
add
nop
xor
andl
test
add
lea
mov
jae
fmull
mov
dec
or
inc
dec
lods
add
pop
cwtl
add
ret
push
pop
lret
inc
jnp
sub
mov
jp
or
dec
jp
addb
jmp
add
scas
or
nop
inc
add
mov
jg
add
mov
add
jno
and
int
gs
add
hlt
icebp
xor
cmpsl
xor
fisubl
out
lds
movsb
add
xor
jb
mov
mov
mov
sbb
insb
roll
and
iret
in
clc
std
add
and
sbb
int
mov
dec
cmp
sbb
dec
sub
pop
nop
and
sbb
add
sub
xchg
inc
add
divl
mov
push
rcrl
sahf
pop
mov
add
stc
icebp
mov
adc
addl
dec
lret
faddl
mov
int
outsb
imul
out
or
icebp
out
sub
xchg
js
add
loop
push
clc
cmpl
sbb
sub
idivl
lahf
add
dec
push
arpl
loopne
xchg
push
hlt
jg
clc
das
inc
pop
sbb
sbb
int
adc
ja
sub
fwait
xchg
add
les
test
xchg
sbb
or
inc
test
xchg
xor
push
rorb
in
dec
sbb
aaa
add
and
add
aam
hlt
les
mov
cli
out
push
lcall
xchg
repnz
add
aas
fs
divl
sub
data16
adc
adc
and
hlt
add
outsl
mov
aam
xchg
pop
addr16
or
pusha
imul
ja
subb
or
cmpsl
arpl
aaa
les
add
sbb
aad
sub
fldenv
test
hlt
mov
fdivs
inc
add
mov
pop
movaps
sbb
add
xor
aam
add
addl
jbe,pn
clc
ret
loopne
sbb
or
push
sbb
xor
sub
xchg
and
fldlg2
imul
push
orl
sbb
shlb
icebp
xor
or
add
add
je
xchg
addr16
lcall
or
inc
xchg
push
mov
pushf
inc
pop
movsb
cwtl
sarl
fs
pop
clc
out
in
adc
and
or
loop
ljmp
jg
lahf
mov
push
loopne
adc
pusha
mov
add
sbb
fldl
shll
in
jp
dec
test
pusha
andb
mov
popa
es
add
sub
aam
fs
mov
pop
sahf
pop
add
sti
and
mov
arpl
in
lret
pop
sub
mov
inc
or
mov
mov
ret
ds
je
cmp
push
shlb
repnz
repz
xlat
add
jns
std
cmc
sbb
add
adcb
adc
pop
dec
jne
pop
mov
jb
mov
rcl
sbb
pop
lods
add
into
lcall
sub
or
sub
fstpt
stos
add
pmulhw
xor
call
or
imul
push
add
sbb
add
in
mov
xor
cmp
stos
jb
cltd
pop
jg
dec
inc
pushf
jecxz
sbb
sti
stos
in
cmp
add
mov
add
pop
rorl
adc
xchg
jno
jnp
push
cmp
mov
add
movsl
dec
push
sbb
xchg
movb
fsubrs
push
cmp
mov
adc
and
inc
cmpsl
jo
dec
xchg
imul
mov
cltd
mov
jnp
hlt
mov
mov
sub
and
cmp
iret
mov
fdivrl
ret
adc
icebp
popf
int
divl
cmp
cmpsb
and
psadbw
aam
test
shll
ds
pop
divl
inc
xor
test
mov
xchg
lock
add
fildll
cmp
pusha
mov
imul
inc
mov
sub
add
nop
in
fsubrl
mov
add
and
pop
lock
jp
popw
push
add
push
int3
faddl
cmc
lret
mov
loopne
mov
pop
pop
add
xchg
hlt
add
sbb
test
fisubrs
mov
adc
adc
push
popf
repz
loope
mov
or
mov
pop
pop
dec
add
into
xlat
xor
lea
movsl
pop
jl
sub
jecxz
add
inc
mov
add
xchg
mov
sbb
pop
roll
xchg
cmp
loope
rorb
xchg
or
mov
and
fisttpl
jmp
into
call
out
int3
mov
push
popf
sbb
add
cmp
mov
jle
test
lods
cmpsl
lret
shll
dec
aam
jp
add
adc
in
negb
lcall
add
push
imul
sub
cli
iret
jge
fwait
add
fstpl
incb
fisttpl
pop
inc
sub
sbb
mov
xchg
mov
add
sti
bound
push
and
icebp
xor
stos
or
dec
pop
sub
cmpb
iret
pop
cwtl
sti
mov
clc
xor
mov
test
mov
imul
sbb
mov
sbb
pop
add
and
sbb
mov
jmp
adcb
lds
in
inc
repnz
sub
xchg
femms
inc
int
out
test
mov
add
call
pop
inc
imul
sbb
movsb
jne
loopne
shll
lods
sub
jno
js
lds
push
push
adc
mov
add
data16
add
lods
pop
les
repnz
js
ficoms
adc
ret
push
push
cmp
xor
das
js
out
dec
jmp
sti
or
scas
and
nop
bound
adc
int
and
cmp
inc
inc
pop
ljmp
imul
inc
mov
mov
mov
dec
je
hlt
xor
adc
nop
out
sub
ds
add
call
adc
pop
shlb
and
lcall
mov
scas
add
or
fdivr
push
add
insl
clc
popf
mov
rolb
add
shr
jnp
add
insl
lock
addb
das
push
sbb
add
iret
orb
xchg
mov
movsl
sbb
pop
jmp
adc
or
mov
and
lea
add
fld
cmp
stos
push
adc
sbb
lods
cmp
sub
cmp
cld
or
push
cld
nop
push
in
sbb
xorb
cmpsb
inc
jns
call
xor
mov
fidivs
add
push
mov
push
addr16
negl
push
clc
push
hlt
cmp
cli
or
or
loopne
inc
add
jnp
mov
xchg
int3
pop
arpl
inc
mov
movsb
or
inc
inc
insl
shlb
mov
or
mov
cmc
decb
je
or
xor
push
stos
add
jl
addl
icebp
sbb
dec
outsl
add
pop
ss
imul
add
loop
lahf
jno
or
sub
leave
stos
sbb
bound
sub
movl
xchg
subl
add
push
movsl
or
inc
adc
lahf
add
mov
sbb
popf
fwait
pop
out
daa
jo
scas
sbb
movsb
push
jns
jb
xor
outsb
fwait
ss
cmp
mov
adc
lcall
lds
dec
lahf
hlt
add
jbe
dec
iret
in
mov
push
incb
push
xchg
add
call
jp
scas
jno
imul
cmpsl
add
int3
bound
cwtl
loopne
cltd
add
addr16
xchg
jp
sub
jo
fwait
stos
push
pusha
add
sub
daa
sub
add
mov
pop
in
cwtl
add
lahf
sub
add
pop
cmc
push
add
test
dec
movsl
add
repz
adc
or
lea
aaa
mov
jns
cmp
cwtl
mov
xor
cld
add
dec
pop
in
dec
and
push
cmp
jecxz
and
lock
add
pop
push
jnp
mov
enter
sub
and
and
mov
sub
aaa
add
ja
ret
test
pop
mov
adc
scas
add
arpl
sti
add
into
icebp
sub
xor
mov
ud1
or
cmpb
push
lods
test
pop
add
pop
ret
stos
ljmp
shlb
pop
daa
pusha
jmp
fcomps
movsb
int3
jmp
pop
mov
jo
mov
jle
in
or
aam
pop
adc
pop
andl
cmp
fwait
pop
movsb
add
and
lret
sarb
outsl
sarl
jnp
inc
sbbl
and
in
pop
cmp
mov
jecxz
sbb
add
jns
jp
and
jmp
rclb
enter
cmp
lock
jecxz
xchg
pop
and
push
ja
aas
inc
pop
adc
imul
test
add
sub
xchg
inc
add
inc
cmpsb
push
inc
filds
lock
jne
add
icebp
int3
int
and
sbb
outsb
sti
add
in
clc
cltd
jns
in
add
dec
int3
jl
sub
adc
test
in
pushf
hlt
and
loopne
inc
add
sbb
push
fs
loop
add
scas
xchg
pop
mov
movmskps
cmpsl
xchg
mov
cwtl
adc
cld
push
add
scas
pop
ror
push
mov
cltd
add
mov
fdivl
loope
repnz
imul
fbstp
pop
jno
data16
sub
lods
inc
daa
fimull
mov
add
shl
cmp
pusha
stos
add
into
rorl
add
jl
add
nop
je
push
sbb
jns
mov
bound
mov
mov
push
add
mov
lods
add
fldcw
adcb
enter
xchg
dec
pop
inc
xor
ret
xchg
cld
cmp
inc
cmp
daa
fcomps
rcll
test
pop
xchg
cs
pop
mov
sub
xor
add
mov
popf
das
jge
pop
mov
sbb
mov
add
aaa
ss
fsubs
frstor
inc
mov
xor
outsb
pop
dec
mov
push
and
jle
inc
xchg
dec
mov
cld
or
jbe
add
jge
xor
adc
pop
dec
xor
dec
xlat
inc
gs
add
mov
punpcklbw
sbb
repnz
dec
mov
sahf
lret
pop
hlt
in
sahf
mov
iret
es
idivb
inc
negl
in
frstor
add
cld
and
call
in
jge
loopne
add
pop
mov
add
mov
adc
pushf
push
cmc
xor
sbb
pop
mov
add
sti
out
mov
push
mov
xor
out
mov
test
pop
cmp
push
std
inc
add
adc
pop
mov
stos
mov
cmp
les
mov
inc
add
xor
orb
add
clc
sahf
pusha
pop
subl
dec
add
sub
je
mov
adc
daa
or
in
pop
aaa
push
dec
cmpb
jg
jl
out
pop
lcall
addr16
hlt
lahf
jbe
rorl
and
rclb
add
testb
dec
add
test
rorl
add
dec
mov
aaa
nop
or
fs
pop
lret
sbbb
in
xchg
add
fidivrl
add
cs
popa
test
cmpsb
stc
add
fcoml
pushf
sub
xchg
adc
and
loopne
les
jp
js
add
or
pop
rclb
xchg
cwtl
add
add
or
inc
xor
mov
rorb
aam
adc
xor
mov
add
std
and
mov
add
inc
push
sbb
push
sbb
out
add
add
fcoms
mov
dec
or
xchg
mov
and
shl
hlt
je
add
outsl
push
jmp
jb
mov
mov
aam
outsb
add
cltd
lret
test
fdivl
daa
js
inc
pop
add
mov
mov
add
jg
or
rorl
dec
les
adc
imul
std
bound
shrl
sti
jle
popl
pop
sub
mov
pusha
xlat
in
inc
add
sti
add
sbb
ret
pop
dec
es
add
stos
adc
fsub
add
mov
clc
mov
add
dec
mov
mov
cmp
aaa
int3
add
xchg
mov
daa
cmovns
js
dec
cmpsb
add
jnp
add
jbe
push
mov
or
ror
dec
dec
test
mov
insb
mov
pop
inc
add
inc
subb
mov
add
stos
pop
fdivrs
mov
dec
aas
jo
scas
pop
imull
repnz
test
adc
mov
fstp
cmp
testb
popa
sbb
pop
cwtl
repz
mov
movsb
lock
cmpl
pop
sbb
add
ja
add
test
cwtl
mov
ret
add
mov
fcompl
add
mov
mov
add
xchg
sub
shrb
jno
add
cmc
xchg
xor
or
mov
xor
pusha
psraw
add
sti
jg
loopne
aam
pop
mov
loop
jb
lcall
pop
push
add
xor
outsb
mov
cld
iret
sbb
push
fisubl
daa
es
add
ds
imul
lock
sub
pushl
hlt
pop
or
pop
push
xchg
cmp
add
stc
push
inc
xchg
push
jmp
dec
mov
pop
out
stos
adc
lods
cmpsb
loop
add
rolb
into
fwait
test
xchg
addb
push
mov
jl
or
mov
push
add
fnstenv
dec
icebp
add
or
aam
int
sub
fstpl
out
adc
mov
dec
cmc
mov
add
fcompl
add
sub
aad
add
jo
jg
and
ret
and
mov
sub
addb
sbb
pop
xchg
push
lret
movsl
mov
out
fmuls
inc
loopne
add
fisubl
mov
add
subl
lods
je
sub
add
xchg
pop
sbb
ret
scas
mov
mov
cmp
jbe
xchg
push
add
mov
push
pop
or
cmp
subb
rcll
mov
aaa
ja
or
mov
ret
jp
lods
or
jne
add
mov
xchg
push
mov
push
jnp
push
mov
test
dec
repnz
sbb
sub
pop
loopne
push
xchg
pop
sbb
add
mov
mov
add
imul
int
mov
ds
adc
out
dec
icebp
add
aas
pop
xchg
fidivrl
fs
sti
mov
jne
fxch
mov
cmp
jp
pop
add
lods
or
shrb
aad
add
lods
sbb
push
add
xchg
popa
nop
dec
or
jl
add
jge
add
aas
nop
testl
sbb
sub
inc
xor
inc
movsb
rolb
sbb
jae
inc
out
xchg
shlb
jo
sbb
push
ss
inc
ds
add
mov
and
mov
dec
ja
rorb
and
add
cmp
pop
popa
cmpsl
add
jbe
stos
add
lahf
in
outsl
cmp
fmull
inc
popf
rorl
lret
mov
jg
dec
add
mov
or
mov
cmp
add
jl
das
test
push
pop
fldt
cli
jle
mov
idiv
nop
jp
stos
dec
testb
es
movl
mov
out
or
rorb
xor
and
mov
lods
scas
mov
imul
mov
cmp
or
int
or
cmp
popl
into
jno
orb
inc
sahf
decb
cmp
push
add
scas
lcall
mov
mov
mov
mov
jo
push
mov
jbe
jne
adc
loopne
cwtl
pushf
scas
xchg
or
imul
inc
fs
jp
pusha
mov
inc
pop
jge
xchg
in
mov
dec
add
inc
fdivr
test
adc
cs
jb
sub
int3
dec
outsb
inc
add
or
mov
loope
out
and
dec
or
and
adc
push
aas
insl
lods
add
or
mov
xor
lsl
mov
ljmp
call
lret
add
pushf
mov
dec
add
outsb
sbbw
push
or
pop
xchg
test
pop
pop
pop
dec
push
hlt
das
pop
push
repz
and
js
scas
xor
jo
add
aad
and
mov
add
jnp
and
push
ss
les
pop
nop
mov
add
clc
push
pop
addb
int
sti
rorl
mov
fiadds
push
pop
out
pop
call
push
test
scas
sub
inc
jne
mov
sbb
je
int3
outsb
xchg
add
imul
add
sub
outsb
loope
dec
add
and
lock
cld
sarb
test
inc
cmp
jbe
add
sbb
fisttps
jnp
pusha
and
pop
loopne
loopne
dec
repz
and
fisubs
mov
add
or
sub
aam
add
jge
das
mov
pusha
rcrb
mov
call
mov
jg
nop
jge
mov
mov
jbe
lahf
movsl
mov
inc
orb
lret
es
add
lcall
push
adc
push
jle
xlat
xchg
add
cltd
insl
push
fsubrp
add
mov
add
push
dec
cmp
rcrb
push
mov
sbb
mov
mov
sbb
sahf
lret
pushf
sbb
out
xchg
and
pop
add
jns
sbb
lret
roll
fs
pop
jno
inc
call
divl
xor
lcall
out
xchg
cmp
push
movsl
fcmovnbe
add
ret
ljmp
or
sbb
testb
xlat
jl
jno
lret
cmp
mov
and
loopne
ljmp
sbb
loopne
insl
lds
add
cmp
outsl
add
mov
cmpb
aad
out
add
mov
dec
es
lea
inc
pusha
mov
push
push
pop
and
aad
sahf
jmp
sbb
loop
jle
add
push
mov
add
cli
jmp
add
iret
cmp
add
mov
movsl
add
jmp
cmpsb
test
rorl
ret
test
add
xor
push
repz
sbb
xor
ljmp
sbb
popf
add
fiaddl
jmp
ss
push
ljmp
in
mov
adc
push
shll
mov
add
pop
loope
xchg
lods
sbb
inc
dec
add
insb
test
xor
pop
cmp
mov
pop
xor
popa
push
aad
mov
orb
out
scas
frstor
rcl
mov
into
dec
addb
addl
push
add
and
add
popa
imul
mov
xchg
and
add
xchg
inc
xchg
push
sub
pmaxub
add
and
ja
sbb
xchg
data16
cwtl
ret
in
adc
xchg
dec
add
jns
push
out
sti
or
pop
push
and
sub
xor
mov
mulb
loopne
push
jnp
mov
loopne
ds
int3
repnz
jle
mov
push
scas
add
cmp
lret
mov
ret
add
jge
ds
incl
push
push
call
je
cmpsl
jbe
xchg
out
add
lods
and
stos
cmp
cmp
ss
dec
add
jl
add
cmpsl
rcrb
push
je
repnz
stos
add
data16
nop
mov
or
fwait
pop
jp
push
add
lods
in
jg
testb
icebp
push
outsl
xchg
jmp
repz
cmp
lret
and
lret
lock
sub
pusha
mov
lcall
roll
lods
cmp
cld
faddl
loopne
mov
lods
or
pop
mov
pop
jb
and
or
leave
mov
mov
pusha
lods
sub
dec
and
fcomp
push
xor
in
stc
sub
push
mov
add
mov
and
mov
fisubrl
jg
fists
jecxz
push
xorb
push
outsb
add
jnp
sbb
hlt
ficompl
xor
jmp
or
lret
add
mov
movsb
lods
test
dec
daa
add
lods
mov
negb
jns
cmpb
or
add
out
xlat
jnp
roll
repz
push
mov
and
add
fcompl
aam
jne
and
sbb
repnz
add
nop
pop
sti
cs
inc
mov
pusha
mov
and
push
sbb
adc
mov
clc
imul
inc
aad
pop
push
add
insb
jmp
sbb
push
movsl
push
xor
push
xor
push
add
int3
sahf
sarb
sub
fisttps
xor
push
dec
and
sub
sub
fldenv
add
xor
push
add
inc
roll
aam
or
push
addl
cmp
inc
ss
sti
sbb
add
or
pop
nop
iret
lret
add
cmp
sub
add
push
ret
xchg
add
or
pand
xor
dec
lock
mov
pop
or
push
aad
loopne
ret
push
mov
ljmp
and
movzwl
add
mov
pop
popl
ljmp
fldl
in
xchg
daa
xor
add
jl
fstpt
jnp
add
hlt
dec
jl
xchg
sub
and
mov
cmp
and
iret
or
lds
add
insb
push
add
rcll
jnp
or
shlb
faddl
inc
sbb
jge
shlb
jne
call
lock
and
mov
hlt
sarb
cmpsb
scas
aas
add
out
push
adc
pusha
push
cld
mov
faddl
push
sbb
sub
cmp
data16
or
aaa
cld
adc
cmpl
loop
add
shlb
stc
xchg
daa
int
in
push
maskmovq
add
mov
fwait
mov
add
cld
cmp
fiadds
push
mov
pop
mov
repnz
bound
fcom
mov
sub
inc
int
pop
sti
rcr
add
ret
lahf
pop
test
inc
sti
mov
mov
fwait
cmp
outsb
icebp
fcompl
add
hlt
icebp
inc
xorb
push
xor
and
cmp
and
aas
ret
jb
push
test
int
hlt
shlb
cmp
xchg
rcrl
test
sbb
lret
cmp
add
fistpl
mov
scas
jno
mov
jo
add
cmpsb
mov
iret
jl
cli
mov
lret
cwtl
mov
jnp
push
pop
ja,pn
jp
inc
and
cmpsb
dec
add
mov
fsubl
jl
repnz
hlt
sbb
add
jmp
pop
mov
cmp
mov
pinsrw
repnz
pop
out
xor
add
daa
and
xor
out
add
js
pop
inc
iret
add
add
call
jno
add
stos
adc
rcr
add
bound
dec
or
push
jl
add
mov
sub
push
test
out
dec
ficomps
jo
inc
mov
data16
es
add
decl
add
rorb
pusha
pop
pop
pop
xchg
mov
shl
mov
cmp
into
jmp
test
outsl
cmpsb
xor
add
cmp
push
popa
int
out
adc
mov
bound
inc
popl
adc
in
push
add
outsb
sub
add
aad
jae
gs
mov
sarb
jmp
lock
mov
sbb
pop
in
sub
add
xchg
jno
add
lcall
insl
movsb
push
sbb
out
iret
pop
push
mul
lods
cmp
and
mov
adc
jbe
nop
loopne
paddusw
adc
jg
dec
sbb
inc
cwtl
adc
ss
stc
xor
cmp
fsubr
loope
mov
in
bound
movsb
mov
in
mov
popf
jle
and
mov
popa
fwait
es
aad
mov
sbb
cmp
mov
loop
aaa
xor
mov
and
out
mov
or
jae
orl
rclb
or
lret
cltd
cmp
mov
lock
pop
dec
shrl
fdivrs
enter
rcrb
push
je
outsl
mov
mov
cmp
inc
add
test
push
fsubp
gs
push
sub
sub
dec
pop
cmp
cs
xchg
add
mov
ret
push
mov
push
pusha
mov
jae
push
mov
sbb
rorl
inc
push
push
sub
add
jae
lods
jbe
pop
outsl
xor
adc
popa
loope
in
je
adc
rcll
and
mov
jno
sbb
add
cwtl
add
add
ja
lea
dec
aaa
jecxz
mov
and
loopne
mov
jne
stos
add
jnp
aaa
lcall
xchg
mov
in
mov
xchg
jns
push
popa
sub
out
stos
rolb
or
add
int3
call
sub
sub
mov
add
cmp
jp
imull
and
add
imul
and
jo
nop
popa
outsl
lcall
mov
inc
fmuls
jg
xor
add
and
cwtl
pop
shlb
add
aas
sbb
jb
mov
or
lea
add
lret
pop
std
jnp
pop
mov
imul
add
inc
push
sahf
call
add
mov
ror
call
cmp
add
hlt
fnstcw
loopne
mov
mov
aam
inc
add
jecxz
aas
ss
push
or
scas
out
or
xor
pop
inc
add
insb
cmp
jo
add
repz
cwtl
xchg
add
dec
fstpt
jb
push
xor
out
adc
push
repnz
xchg
or
out
daa
enter
je
fldt
sub
std
dec
stos
aaa
imul
add
pop
xlat
sub
jo
icebp
je
ds
add
pop
jle,pt
jg
push
lahf
inc
ficompl
fs
mov
inc
mov
add
repz
pop
aas
dec
xchg
pop
cmp
cli
xor
popf
outsb
fadds
divb
push
cmp
xor
xchg
cmpsb
sub
adc
mov
cmpsl
jle
cmc
sbb
shll
out
call
add
popf
jbe
or
cltd
lock
and
xchg
call
stc
dec
arpl
mov
jne
jge
mov
and
jnp
cmp
inc
in
sub
xor
or
cwtl
mov
push
ds
testb
cwtl
ds
lret
aam
shrb
cmc
mov
pop
addr16
outsl
in
pusha
stos
dec
cmp
adc
add
add
jge
out
add
mov
dec
inc
add
mov
pop
nop
ret
cmp
xchg
repz
imul
inc
movsl
nop
sar
mov
lods
loopne
add
sbb
mov
hlt
in
dec
jns
scas
dec
mov
nop
cmp
xchg
push
cmp
mov
adc
sar
lahf
jl
add
outsl
dec
sbb
fwait
push
out
sbb
add
lcall
add
pop
add
or
jle
xchg
add
xor
and
dec
adc
inc
jmp
xchg
in
or
sbb
shlb
outsl
jbe
xor
dec
mov
jmp
lock
dec
sar
lea
jecxz
cltd
pop
xor
sub
jno
add
or
ret
jle
add
dec
mov
cmp
aam
aad
mov
push
in
ljmp
out
int3
add
pop
pop
lds
rorb
jle
outsl
mov
add
jp
dec
cmc
and
jne,pn
pfcmpgt
pusha
jae
sbb
pop
add
ds
stc
pop
out
test
ror
repz
xor
cmpsl
shlb
push
xorb
add
sbb
push
xchg
fidivrs
in
jle
les
sbb
mov
cwtl
out
sub
add
mov
fmul
dec
cmpsb
and
add
rcll
dec
movsb
dec
add
sbb
cli
je
jmp
xchg
imul
jmp
jo
js
add
cld
pop
adc
mov
dec
pop
out
fwait
sbb
inc
xor
outsb
add
pop
js
outsl
mov
add
arpl
sub
pop
stos
add
inc
subb
push
or
ss
sbb
jo
cltd
mov
ljmp
xlat
xchg
mov
sbb
jne
std
jge
shlb
lods
pop
dec
cmpsb
leave
pop
aas
hlt
and
and
testb
or
adc
mov
add
jnp
pop
pop
mov
mov
add
mov
cmp
lcall
aad
mov
nop
mov
out
dec
imul
sbb
out
lds
in
inc
mov
xchg
mov
sbb
loop
cmp
sub
fwait
sub
add
fdivs
mov
pop
sub
cmp
addl
mov
cmp
jne
aad
add
and
enter
lret
add
xchg
adc
inc
mov
iret
inc
cmp
add
aam
jne
mov
fnstsw
outsl
jl
adc
test
pushf
jg
shl
mov
rolb
arpl
repnz
sub
inc
das
sub
push
cmp
movsb
mov
sbb
add
call
cmp
sti
test
pop
insb
repz
sahf
shlb
xchg
pusha
dec
push
pop
lods
mov
pop
adc
mov
sbb
std
jmp
cmp
push
aaa
pusha
addr16
xlat
outsb
sbb
loop
or
lock
adc
sub
push
clc
add
movsl
add
je
fbstp
es
xchg
mov
push
pop
push
ret
jg
data16
aam
push
xor
fcoms
jb
adc
add
push
adc
cltd
push
sub
xchg
add
sti
test
pusha
sbb
jg
lock
push
xchg
call
push
add
data16
pop
out
sbb
daa
arpl
mov
add
jnp
orl
add
mov
or
xchg
and
inc
push
outsb
mov
mov
scas
dec
sahf
jno
pop
subb
int
xchg
mov
push
fdivrs
add
cmp
sbb
lret
pop
arpl
xchg
xchg
rolb
jp
cmp
cmp
outsb
add
stos
aaa
jne
outsl
sbb
add
lret
xor
int
js
popa
jg
sbb
cmp
jb
add
pop
loopne
pop
inc
inc
dec
add
inc
mov
and
fistl
push
lcall
movsl
mov
xchg
std
add
push
mov
fidivl
push
pop
rorb
cmpsl
sbb
call
rolb
push
int
imul
testl
into
mov
call
lret
ret
mov
and
rcll
sub
dec
insl
jo
push
das
mov
shlb
lds
add
call
sub
mov
cwtl
out
push
jle
push
lods
insb
ficomps
in
push
add
fdivrs
fisubrl
addr16
mov
mov
enter
adc
lds
pop
movsb
push
or
enter
and
cwtl
xor
and
jo
test
clc
shll
aaa
jo
loope
aaa
add
pop
int
push
dec
xor
add
imul
jne
sahf
xchg
dec
or
sarl
and
insb
fistpl
int3
add
mov
gs
mov
ficoml
adc
mov
adc
and
pop
mov
or
imul
xor
out
cmpsb
je
adc
std
ffreep
adc
or
xor
and
test
jle
frstor
mov
int3
mov
loope
jo
pop
outsl
sub
insb
dec
adc
out
movsl
popa
lock
inc
rcl
adc
add
sub
mov
mov
add
test
xor
inc
cmp
add
jg,pn
add
shlb
sub
jbe
cwtl
inc
pop
jo
sbb
pxor
dec
fwait
add
adc
mov
imul
jo
add
pop
repz
popf
scas
rolb
mov
and
mov
ds
xor
dec
and
js
js
lcall
lods
jns
inc
or
fldl
xchg
lret
push
xorb
inc
add
pop
sub
mov
inc
sbb
cmc
leave
xor
sbb
add
or
cmp
inc
pusha
ja
arpl
stc
dec
lods
imul
inc
or
stos
aaa
lcall
sub
dec
cmp
jo
inc
dec
mov
mov
or
xor
incl
lahf
incb
hlt
push
add
add
ds
mov
dec
ret
and
add
ret
int3
test
sub
pop
mov
das
cltd
movsl
pop
push
notb
adc
add
mov
add
mov
add
movsl
cmp
js
jbe
insl
jnp
mul
dec
add
push
dec
add
cmpsb
int3
push
popa
into
pushf
punpckhwd
push
add
daa
mov
mov
cmpsl
xor
mov
popf
sbb
dec
xchg
and
fs
mov
stos
jle
mov
jo
outsl
aas
jbe
mov
out
xor
decl
sbb
and
adc
popa
add
sar
xchg
jno
pop
fwait
push
push
dec
push
inc
push
ret
in
int
fldenv
jecxz
jge
dec
cs
fisubrs
loopne
int
sbb
pop
idivl
popf
sarb
and
jns
sbb
adc
mov
rcrl
and
clc
add
lret
adc
add
imul
or
mov
adc
add
insl
clc
cld
shrl
les
shrb
mov
int
and
and
in
addb
loop
xor
mov
sub
in
adc
lea
test
push
push
mov
inc
xor
outsl
cltd
mov
jns
divl
cmp
adc
xchg
xchg
call
jle
add
ja
call
xchg
xor
push
add
jae
push
shlb
dec
inc
nop
fwait
jg
mov
pop
daa
insb
sbb
xorb
pop
data16
aad
rcl
xchg
add
jo
sub
add
push
into
iret
jmp
dec
mov
nop
mov
sbb
stos
mov
mov
cs
test
jns
mov
in
add
popa
repz
lods
lret
in
pop
str
stc
enter
adc
js
push
add
and
xor
and
xlat
cmpl
stos
sbb
fdivs
mov
nop
xchg
out
mov
mov
jp
cmp
aam
sahf
mov
inc
add
mov
dec
pop
dec
push
jne
outsb
dec
push
inc
dec
jb
rcrb
pop
data16
xor
repz
sahf
push
imul
daa
scas
sub
push
and
pop
push
and
insl
jb
xor
pop
add
enter
mov
sbb
inc
rolb
pop
or
popa
and
add
sbb
test
sub
add
outsb
mov
jp
xor
add
mov
dec
mov
outsl
and
push
jb
xchg
lods
mov
add
cwtl
fs
push
and
and
ret
out
jmp
sbb
test
xchg
int
shl
mov
inc
mov
jl
push
add
dec
xor
pop
push
movsb
mov
jns
pusha
inc
cmp
pop
mov
js
adc
movsl
rcll
mov
ljmp
and
outsl
jl
cmpsl
insl
mov
cwtl
sub
loope
loopne
xchg
in
or
in
adcb
sub
xchg
mov
inc
mov
lds
shrl
cwtl
xor
pop
lods
mov
or
es
test
or
popl
sub
xor
push
dec
dec
fs
es
xchg
out
shlb
test
push
add
pop
popa
inc
mov
out
or
rolb
ljmp
push
push
clc
mov
cmpb
cmp
add
and
dec
add
insb
popa
outsb
cmp
add
push
mov
inc
push
push
sub
or
xchg
shlb
das
add
mov
push
pop
inc
fimuls
movl
push
es
stos
sub
sub
sub
xor
mov
xor
adc
shrl
sbb
dec
imul
sbb
add
pop
lods
inc
lret
leave
hlt
xchg
lock
jge
dec
and
add
push
fdivp
addl
jp
and
add
repnz
adc
push
test
inc
iret
add
ljmp
lods
and
shlb
xor
or
arpl
dec
xor
dec
and
aad
xchg
je
cwtl
mov
call
cld
movsb
adc
outsb
sub
push
jb
cmp
add
jbe
pop
fimuls
jmp
les
or
mov
inc
loop
inc
mov
lods
movb
nop
add
jno
scas
sti
adc
int3
arpl
add
repnz
fwait
test
ja
add
dec
push
xchg
pop
daa
jnp
loopne
sub
add
cmp
sub
or
pusha
sub
sbb
mov
add
scas
cmpsb
movsb
xor
rorl
das
and
movsl
sbb
mov
jp
cmp
xor
sbb
xchg
lods
sub
nop
mov
loopne
scas
pop
ljmp
sbb
cs
imul
mov
dec
loopne
xchg
call
cmpsb
shrb
push
test
pop
add
call
repz
add
mov
xchg
bound
jl
mov
dec
pop
js
jmp
jo
jl
jecxz
adc
mov
xchg
mov
or
cmp
mov
in
mov
movsb
add
or
jmp
add
out
cmc
xchg
jle
add
jp
dec
pop
or
mov
loop
fldl2t
xorl
inc
jne
andb
xchg
mov
jno
pop
aam
pop
add
insb
mov
js
test
adc
dec
stos
setg
lock
clc
in
es
cmp
fldpi
outsb
cmpb
rolb
push
daa
xor
cltd
out
aad
enter
and
jo
jno
add
mov
mov
in
mov
in
mov
imull
add
xchg
int
lods
movsb
imul
add
and
mov
jl
push
lahf
loopne
cmc
jg
inc
push
iret
xorb
sbb
mov
loope
push
mov
cli
and
movsl
jbe
test
out
addl
xchg
inc
inc
pop
inc
or
incb
mov
pop
lea
fwait
add
xchg
mov
dec
mov
adc
inc
push
out
mov
jp
jnp
push
mov
jno
sub
popf
je
aaa
aas
iret
inc
jb
xchg
aas
add
jge
in
fbstp
sub
and
mov
mov
icebp
inc
sbb
pop
pop
sbb
nop
and
ret
jmp
fwait
add
lret
insl
inc
inc
scas
shlb
ds
xor
fcompl
inc
dec
dec
call
xor
and
add
add
test
lods
sbb
xor
in
sub
cmp
cmp
jbe
popa
cmp
pop
arpl
pop
neg
les
fs
scas
jmp
pop
jge
mov
int
mov
sbb
call
jae
mov
cmp
xorb
fildll
xchg
mov
add
mov
pop
cmp
incb
mov
ja
icebp
jnp
dec
repnz
xor
pop
add
and
push
add
pop
ss
add
loop
cmp
loope
mov
stc
insb
sahf
xor
stos
mov
push
loop
into
ljmp
enter
test
pop
xorl
push
xchg
hlt
sub
and
cmp
push
cld
shll
push
je
pop
aaa
movsb
leave
jbe
inc
test
push
add
inc
outsb
xchg
add
xchg
stc
mov
push
add
shlb
lret
push
insb
ja
popf
rcl
inc
add
push
pop
jge
addr16
add
cltd
lahf
add
push
fidivl
ret
sbb
add
shlb
test
push
pushf
add
lahf
dec
fistpl
repz
add
out
orl
add
imul
jl
pop
inc
es
pop
mov
add
test
test
cmp
addl
cmp
add
or
sbb
add
jns,pt
add
and
push
repz
cmp
sar
inc
test
in
inc
mov
nop
shlb
rol
into
in
adc
and
and
cmp
adc
inc
mov
insl
pop
bound
and
or
xchg
addl
inc
lcall
jge
adc
cmp
xchg
stos
mov
adc
and
popf
adc
and
inc
test
jne
pusha
jb
js
mov
xchg
sub
add
and
idivl
aam
push
or
shl
mov
lods
sbbl
repz
mov
ja
jp
inc
je
push
add
xchg
adc
outsl
test
add
sti
sub
sarb
sub
xor
jae
add
mov
xor
movsb
push
cli
and
push
pop
int3
sahf
shl
mov
add
and
mov
push
retw
shll
test
mov
pop
outsl
mov
inc
stos
sbb
add
inc
add
sbb
scas
add
jnp
cltd
dec
ret
sub
shlb
mov
xlat
pop
ljmp
ffreep
mov
pop
or
and
mov
ret
inc
mov
cmp
out
mov
push
and
fdivrp
cmp
lcall
xchg
insl
sbb
inc
ficomps
pop
mov
jecxz
jg
dec
ret
js
jmp
filds
clc
lret
xor
sub
out
cld
add
or
mov
dec
pop
lods
pop
into
push
push
inc
int3
push
add
divl
fidivrs
sub
into
lahf
daa
movsb
jecxz
and
xchg
mov
rcll
pop
popf
ret
xlat
mov
jp
sub
lods
loopne
mov
dec
pusha
dec
mov
add
push
sbb
jae
jo
add
jp
xchg
stos
insl
add
fcoms
or
rclb
or
ret
pop
lds
push
mov
aas
dec
adc
add
push
outsl
add
xlat
sub
test
aam
add
mov
mov
adc
lods
mov
add
sbb
add
mov
pop
movsl
pop
xchg
mov
pop
stc
xchg
repz
int3
test
mov
int
mov
hlt
je
or
adc
and
mov
ficomps
add
sbb
xor
cmpxchg
mov
jge
lcall
or
dec
inc
dec
xchg
nop
add
je
adc
adc
add
leave
dec
add
add
cmp
or
mov
pop
adc
push
xchg
xchg
insb
jnp
pusha
aaa
jmp
pusha
stos
cmp
mov
jle
sub
sbb
jp
cmp
xchg
xor
sbb
int3
je
and
sarb
add
iret
add
add
mull
int3
xchg
pop
scas
jo
add
lock
jbe
push
cmp
and
or
jne
aam
add
cs
test
dec
push
mov
sahf
lods
push
cmp
sbb
dec
js
cmp
add
clc
gs
add
popl
dec
and
pop
enter
xchg
mov
pusha
movsl
sub
inc
sbbb
mov
fiadds
pop
adc
insb
aad
xor
cmc
fucom
jg
mov
in
aaa
add
adc
lret
lret
hlt
push
add
mov
hlt
cmp
loope
ljmp
insb
cmp
sub
pusha
sbb
mov
sub
lock
add
mov
pand
aaa
pusha
and
jge
cmp
add
pushf
or
fists
loope
daa
loopne
adc
outsb
jl
fdivrs
shr
lods
add
test
lock
lret
dec
jmp
insb
daa
cmpsl
pop
dec
sub
not
inc
sbb
inc
test
add
sti
and
add
sub
or
xchg
jg
add
xlat
imul
mov
lds
and
xchg
jne
mov
inc
xor
cmpsl
sbb
and
push
xchg
dec
pop
rorb
repnz
mov
js
sbb
dec
loopne
xchg
push
imul
mov
inc
jg
add
adc
cmp
stos
push
test
lahf
dec
sbb
mov
sarl
sub
inc
mov
icebp
cmp
out
orl
add
notl
fbld
add
jns
pop
insl
cmp
add
xor
nop
or
sub
xchg
fisubrl
ljmp
rcrb
push
xchg
ret
push
pop
lock
mov
sbb
or
inc
sbb
dec
sub
adc
inc
jl
mov
add
arpl
dec
mov
xchg
sbb
pop
pop
out
pop
push
in
push
ss
in
mov
loopne
out
aas
fsubrl
xor
jp
clc
jno
sahf
fimuls
dec
arpl
push
sub
sub
push
js
cmp
cmp
mov
adcb
orb
cmpsb
imul
cmp
loop
test
adc
repz
or
and
jmp
pushfw
insl
cmp
and
and
dec
iret
add
insl
fsubrl
mov
add
push
out
pushf
cs
add
pop
jae
sub
std
call
shlb
add
push
jmp
add
dec
xchg
sbb
test
and
add
popa
xlat
in
push
mov
pushf
clc
jge
pop
cltd
je
push
xor
mov
cwtl
add
aaa
pop
filds
push
es
loope
add
fcompl
push
add
jnp
mov
add
lea
ret
or
nop
in
mov
adc
icebp
shl
mov
aas
into
and
adc
enter
sub
mov
cs
icebp
addb
xor
add
jb
fsts
push
cmp
jo
or
arpl
xchg
adc
add
push
mov
dec
mov
jo
inc
push
bound
sbb
add
inc
subl
xchg
pop
insl
mov
xchg
jb
lret
sbb
push
outsl
daa
pop
rcll
add
out
jl
aas
call
jbe
pop
inc
push
dec
cmp
xor
ja
adc
add
cmc
and
and
rolb
pop
inc
loopne
jo
xchg
add
shrb
outsl
inc
imul
test
mov
add
dec
out
test
mov
pop
jp
jno
pusha
inc
xchg
xchg
add
fbld
xchg
mov
inc
out
sub
cmpsl
add
cmc
cmp
sub
jno
rep
dec
out
xchg
add
mov
rcrb
cmpsl
and
rcll
add
jmp
enter
icebp
test
dec
aam
test
shll
out
inc
rolb
xchg
mov
popa
lret
push
clc
push
lret
xor
adc
pop
stos
cli
les
mov
loopne
mov
mov
push
sub
push
shlb
cmp
loopne
sbb
int3
add
test
and
adc
in
add
and
pop
stos
mov
jge
dec
aad
cmpsb
pop
dec
xchg
and
fwait
into
dec
inc
fadds
xlat
jae
iret
insl
xchg
test
add
cmc
pop
xchg
imul
stc
hlt
aam
cmp
mov
inc
add
jmp
clc
sti
add
pop
addr16
jo
mov
mov
sub
cmp
ja
push
inc
dec
jp
inc
push
inc
pushf
sub
dec
push
add
and
and
lds
jnp
mov
sbb
mov
ftst
push
add
cmp
in
hlt
fmuls
js
jecxz
and
push
adc
pop
fsubrp
add
mov
mov
sti
in
orb
lret
mov
inc
mov
in
mov
xorps
inc
test
pop
jno
lcall
jbe
testl
xchg
xchg
popf
cltd
add
aad
add
add
call
rol
aaa
lahf
dec
mov
pop
push
jnp
pusha
xor
mov
pop
cmp
pushf
push
int3
fists
repnz
pop
cmp
or
or
int
mov
clc
add
lea
sbb
sub
sbb
addr16
ret
mov
dec
adc
mov
js
mov
int3
pop
loop
jge
das
xchg
and
pop
jns
shrb
xchg
int3
xchg
mov
insb
out
push
call
ja
xchg
aas
fistpl
pop
pusha
push
cs
and
fisubrs
pop
sbb
ds
repnz
cmp
movsb
lock
add
orl
loopne
mov
mov
mov
dec
fstpt
in
cmp
icebp
sbbb
add
xor
imul
mov
push
lahf
sub
mov
cmc
inc
mov
test
test
cltd
add
lods
push
lret
andb
scas
sbb
push
call
mov
xchg
pusha
test
inc
pushf
inc
add
enter
jne
call
adc
or
orb
stos
stos
cmpsb
add
mov
out
mov
ja
pop
push
hlt
adc
loop
pop
mov
es
mov
sbb
xor
inc
mov
das
pop
add
inc
fs
push
call
mov
pop
mov
xchg
aas
pop
es
out
cmc
sbb
adc
push
repnz
cwtl
lock
mov
add
inc
jns
out
imul
mov
mov
int3
mov
out
jae
mov
popa
mov
rclb
pop
jl
xchg
pop
pop
test
xor
adc
out
adc
add
inc
cmpsb
inc
outsl
mov
leave
cmp
push
push
dec
fisttps
sub
stc
sti
add
lock
hlt
in
scas
lds
xor
dec
daa
xor
ss
fisttpll
inc
mov
arpl
pop
pop
adc
cmpsl
add
or
adcb
add
lahf
in
xchg
xorl
mov
mov
shl
pusha
sbb
lock
lods
xor
push
push
out
push
lds
add
push
adc
xor
repnz
in
cld
add
add
cmp
jb
ret
inc
aaa
sbb
in
ljmp
pop
call
out
and
push
xchg
add
popa
lds
or
mov
cmpsb
push
mov
xchg
dec
xchg
ss
mov
or
andl
sbb
xchg
into
pushf
adc
mov
pop
mov
fsub
iret
xchg
sbb
add
aam
fcoml
pop
insl
loop
daa
rcrb
add
popa
push
adc
insb
xchg
sbb
fcomps
xor
cmp
inc
mov
xorl
in
test
loop
gs
jge
dec
add
inc
repz
sbb
daa
add
dec
fcomps
mov
adcb
loopne
add
lock
xchg
repz
add
imul
jmp
or
pop
std
jmp
pop
pop
add
xchg
sbb
and
es
mov
lods
hlt
add
jb
lcall
outsl
push
xchg
adc
push
sub
pop
dec
enter
or
xchg
push
push
push
push
les
cmp
sub
std
nop
xchg
iret
mulb
xchg
ljmp
inc
popf
sub
jb
or
movsb
pushf
sbb
divb
fsubrs
cmp
insl
add
push
pop
mov
push
sub
stos
daa
imul
mov
sarl
adc
subb
and
sub
fstl
decb
add
and
mov
add
adc
adc
add
add
fnsave
adc
dec
mov
xchg
jmp
sub
in
push
sub
dec
loopne
enter
mov
adc
mov
push
jge
add
jns
sub
shlb
xchg
clc
sbb
pop
lret
mov
rorb
mov
push
das
dec
sub
call
cs
and
add
aad
cld
sub
push
add
xor
pop
push
dec
popf
mov
mov
sub
xchg
add
loopne
and
pop
lock
sbb
dec
arpl
cs
popa
adc
inc
les
jg
inc
and
mov
in
add
sub
jae
js
leave
lret
push
into
fiadds
add
repz
pop
popf
dec
hlt
push
jae
adc
lock
mov
xor
loopne
cli
and
add
xchg
sbb
add
mov
push
xchg
sub
and
es
mov
pop
inc
rcrb
cmp
dec
shlb
inc
sahf
mov
shlb
xchg
sarl
stos
jbe
cmpb
cmpsb
ljmp
xchg
xchg
cltd
rolb
pushf
test
add
in
sub
xor
inc
in
cwtl
cmp
movsb
into
push
xor
leave
cmp
daa
cmpsl
push
adc
add
hlt
shlb
rol
ja
jbe
jmp
jno
sar
loopne
add
cwtl
inc
or
mov
mov
inc
ss
pop
push
lods
or
test
mov
mov
enter
fidivs
rcrb
sti
cmp
mov
adc
loopne
iret
stos
push
jl
pop
mov
scas
outsb
fdivrs
add
adc
inc
movsb
and
add
in
lods
sbb
hlt
add
mov
leave
xchg
fsubrl
sub
mov
in
addr16
loope
add
sub
mov
xorl
jp
or
hlt
mov
mov
xor
add
jp
pop
outsl
push
or
push
xor
in
and
xchg
icebp
xchg
jno
add
xor
fwait
inc
fdiv
test
in
clc
mov
cmc
jge
mov
add
xchg
cld
adc
sub
cmpsl
sub
add
jbe
das
repnz
push
iret
and
dec
cmpl
mov
pushf
add
pop
movsl
imul
mov
pusha
dec
add
push
inc
aad
push
or
movl
adc
in
adc
cmpsl
pop
sub
cli
cmp
movw
int3
sbb
hlt
lds
mov
stos
pop
mov
mov
stc
aad
pop
lds
rcll
gs
cmp
fists
mov
pop
cmp
into
out
inc
add
or
fstpl
push
jb
fidivrs
add
loop
mov
push
add
push
int3
out
lret
add
pop
dec
mul
rolb
add
xchg
rorb
out
add
shl
sub
arpl
pop
mov
orb
in
jge
or
jl
addl
push
push
inc
std
or
lcall
adc
push
movsb
xor
sbb
inc
orb
gs
pop
int3
add
daa
sub
jae
mov
xchg
aad
aas
mov
inc
ds
dec
add
push
out
subb
iret
icebp
add
adc
xor
mov
nop
scas
idivl
cltd
mov
lock
and
cmp
mov
dec
xchg
outsl
icebp
add
adc
pop
and
or
sbb
add
andl
dec
add
inc
popa
cmp
je
loopne
test
in
jmp
sahf
mov
xor
sarb
adc
lcall
data16
ja
testl
inc
mov
add
lret
xchg
rorb
sub
mov
add
jge
lods
cmp
push
xor
xchg
mov
dec
pusha
sbb
push
aas
jmp
mov
stos
mov
xchg
sub
push
mov
jge
mov
fcmovnu
add
lret
ret
or
out
pop
dec
fsub
xchg
sub
and
xorb
icebp
or
pusha
lods
jb
mov
xchg
mov
sub
fcoml
mov
or
aad
push
sbb
or
mov
xchg
test
mov
jmp
xor
pop
lret
jne
icebp
dec
jns
add
or
add
cmp
mov
xor
jo
inc
and
icebp
jp
jne
sbb
outsl
sub
repnz
test
clc
pop
lea
push
ss
insb
pop
aad
jge
xor
cmpsb
or
sbb
push
add
fistpll
pop
bound
shll
pop
add
push
mov
pusha
lea
dec
sub
add
test
rcrl
or
mov
ss
nop
mov
call
aas
pop
jnp
mov
dec
mov
fisubl
in
repnz
aas
int3
sbb
fiadds
xchg
outsl
push
mov
mov
push
cmp
push
add
fcmovnbe
lock
jmp
mov
adc
or
inc
mov
fcom
es
scas
mov
cltd
rolb
fadds
pop
pop
mov
push
push
xchg
pop
popf
mov
je
dec
cmpb
push
fmuls
push
add
ret
inc
sub
into
test
add
lock
inc
mov
jle
and
jo
pushl
sub
stc
ror
mov
adc
push
in
sub
test
loope
jno
jle
addr16
add
repz
lods
adc
dec
pushf
add
dec
pop
int3
incl
stos
shll
js
mov
add
repz
aam
push
call
add
add
incb
xchg
es
pop
loopne
cmp
cld
pushf
sub
das
pusha
or
jbe
fildll
int3
andl
or
xchg
jg,pn
adcb
jl
sbb
pop
loope
testl
xchg
add
lret
cmpsb
xchg
dec
and
cmp
add
and
xchg
xorl
xchg
ja
push
push
inc
add
push
lcall
pop
aaa
loopne
and
fldenv
roll
inc
pop
mov
jg
sbb
addb
jo
add
cmp
into
out
dec
dec
add
in
or
testl
adc
mov
inc
xchg
push
pop
add
and
aad
mov
dec
dec
pop
push
add
dec
sbb
sub
movsb
paddq
sub
push
lods
out
xorb
inc
dec
xorl
mov
mov
add
inc
movsb
push
sbb
jmp
sub
fisubs
sbb
mov
jno
push
das
add
xchg
mov
bound
jp
sahf
jmp
push
xor
mov
outsl
jmp
jns
movsb
mov
dec
add
pop
je
into
fldl
outsl
fdivs
mov
lods
inc
jecxz
out
cmp
add
and
std
jne
adc
mov
stc
loopne
cmpsl
add
dec
lret
inc
and
pop
push
xor
dec
jmp
in
adc
push
add
aad
sbb
divl
sbbb
daa
add
aaa
add
add
test
add
jnp
lods
xor
add
pushf
adc
pop
popf
in
xor
mov
out
pop
add
jbe
hlt
jmp
sub
cmpsb
xor
add
insb
inc
ljmp
or
fsubrl
mov
dec
add
xor
cmp
lock
mov
push
jbe
push
stos
scas
dec
jo
jns,pn
add
adc
lea
dec
sbb
xor
xor
movb
mov
add
std
cmc
mov
hlt
jmp
push
out
enter
lock
add
push
jae
mov
dec
push
inc
repz
int
shlb
mov
mov
loopne
jge
add
cmpsl
fidivrs
push
xor
sahf
xchg
in
pop
sub
xor
xor
sarl
mov
shl
movsl
mov
daa
js
rcr
mov
sub
pop
clc
aad
sbb
out
adc
pop
nop
loop
sub
addr16
sbb
jb
sar
add
arpl
notb
clc
sub
lcall
cmp
cmpsl
movsb
out
repnz
mov
fiadds
clc
stos
push
leave
xchg
add
cli
mov
or
pop
dec
pop
jmp
sub
out
out
test
lar
adc
aaa
push
xchg
add
dec
lahf
cs
cmpl
xor
leave
cwtl
dec
inc
mov
cwtl
mov
add
popa
and
push
inc
inc
hlt
cltd
sti
sarl
sbb
out
loopne
xchg
in
aaa
add
adcb
outsb
mov
add
movsl
inc
lock
std
mov
sbb
jo
ds
stc
fisubs
sbb
jb
pop
insb
rolb
add
fwait
and
aas
lods
pusha
inc
fsubrl
test
cmp
lahf
lcall
add
iret
sbb
fistps
sbb
test
lds
scas
inc
mov
mov
adc
add
roll
adc
test
enter
fldt
cli
add
ljmp
pusha
les
pop
jecxz
mov
jb
shll
mov
adc
movb
adc
ficomps
pop
add
ds
orb
or
inc
jge
pusha
je
daa
nop
repz
dec
jg
add
cmp
jo
int
out
xchg
js
or
addl
addr16
jne
and
enter
or
sbb
ret
mov
lods
cmp
inc
ljmp
shll
bswap
xor
out
int3
inc
add
mov
mov
div
push
xor
ret
cmpsl
sti
popf
lcall
add
jnp
pop
pop
lock
add
sub
mov
inc
cmpl
clc
pop
push
mov
lods
lret
dec
out
inc
call
inc
sub
add
push
out
cmc
mov
sbb
inc
add
fcomi
xorl
jne
out
add
mov
dec
std
sbb
js
pop
pushf
hlt
pop
enter
inc
mov
add
std
add
jns
dec
lea
and
xlat
sub
mov
dec
pusha
mov
test
inc
jae
nop
rclb
sub
and
fsave
pop
rclb
outsb
fsubrl
xor
adc
dec
lods
into
add
push
dec
clc
add
xor
inc
cmc
add
cmpsl
jae
sbb
movl
lcall
in
imul
xchg
sarl
xchg
adc
test
subl
dec
out
cmc
rol
push
cld
dec
add
movsb
inc
movsb
xor
sti
mov
jns
in
push
scas
sti
mov
add
icebp
shrl
pop
ljmp
out
and
xor
stc
sub
call
dec
fnstenv
cmp
add
push
les
xchg
or
mov
lcall
sbb
xorb
sbb
test
and
nop
add
xchg
xor
xor
sub
or
xchg
sub
mov
mov
cmp
xchg
rol
sbb
xchg
cmpsl
inc
cwtl
les
sahf
pop
mov
shrl
repnz
add
xchg
mov
push
mov
mov
adc
test
daa
sbb
and
add
mov
in
add
stos
orl
push
jl
mov
push
add
and
daa
pop
sbb
adc
ds
or
mov
lock
xor
mov
aam
add
and
push
shl
dec
sarl
fnsave
addr16
popf
add
cmpb
scas
sbb
sbb
add
daa
add
cmp
rclb
test
mov
pop
and
sub
xchg
sbb
and
adc
dec
es
sbb
xchg
cld
or
jnp
and
cmpsb
pop
add
lret
cli
movl
inc
pop
cmpb
call
fsubr
adc
push
mov
inc
xor
jb
adc
pop
mov
inc
arpl
sub
and
lea
js
or
loopne
sbb
pop
add
fwait
push
mov
lahf
add
imul
cmp
add
xor
mov
mov
scas
cmp
shrb
pushf
push
lahf
cwtl
je
xchg
xor
jle
cli
add
xchg
addr16
fists
int3
mov
mov
adc
jns
lcall
fists
pop
ret
loopne
jge
xchg
sbb
xchg
dec
and
mov
in
movsl
inc
push
xchg
or
ds
gs
lret
sbb
stc
sbb
ret
or
adc
leave
add
data16
or
test
sbb
add
add
sbb
xor
add
mov
sub
int3
or
dec
fildl
ja
idivb
add
sub
adcl
or
fstpl
xchg
cmp
jae
fdivrs
add
or
mov
cmp
and
roll
push
sysenter
movsl
std
add
xchg
pop
leave
xchg
cld
rclb
mov
xor
hlt
out
aam
pop
pop
push
fiadds
jnp
push
dec
jo
call
push
adc
push
pop
adc
sbb
mov
invd
or
cmp
push
xchg
cld
or
mov
adc
das
and
or
shlb
scas
cmpb
fcomps
dec
jo
pushf
cmp
mov
or
mov
into
dec
mul
inc
add
inc
lods
inc
mov
roll
ja
iret
xor
adc
in
enter
arpl
aas
int3
pop
xchg
mov
cmpsl
cmpsb
xor
mov
fmul
or
lahf
push
pop
add
ds
pop
fmull
test
mov
add
mov
imul
test
sub
decb
lcall
inc
test
add
aas
pop
and
test
pop
mov
sub
mov
pop
xor
test
jns
pushf
adc
and
les
shrb
and
mov
dec
push
inc
imul
push
or
xchg
ja
and
adc
inc
or
lcall
mov
sub
xchg
and
gs
and
inc
pop
and
mov
inc
daa
xor
jp
test
or
inc
push
and
mov
jl
xchg
mov
mov
call
pop
adc
or
sbb
cmpsb
insb
adc
test
in
test
mov
xor
mov
sbb
add
pop
into
jo
in
pushf
loopne
stos
loopne
xor
and
lock
pop
and
outsb
push
ret
sbb
xchg
pop
inc
adc
push
sub
nop
push
pop
fcom
inc
push
subl
cmp
jae
add
fwait
cli
ljmp
dec
sbb
xorb
sub
cltd
pop
add
jmp
jb
jecxz
sub
rolb
lret
and
inc
mov
ficomps
sahf
lret
cli
or
enter
xor
and
mov
rcl
push
xor
mov
cmp
mov
into
mov
cmp
insb
or
add
and
add
lret
xor
aas
mov
pop
lahf
pusha
cltd
jbe
insl
gs
rolb
ljmp
pop
fs
jne
mov
mov
scas
inc
pop
mov
jnp
aas
insb
add
mov
and
js
aas
sbbb
adc
jecxz
adc
mov
xor
in
mov
dec
sbb
fwait
sub
mov
and
adc
and
add
xchg
or
mov
push
test
mov
repnz
cmp
add
sub
addb
int3
sbb
mov
adc
pop
add
add
xor
fstpl
lret
movsb
mov
and
andb
xchg
in
push
test
cmp
adc
jne
adc
orb
lret
and
mov
xchg
decb
sbbb
nop
lods
jbe
fadds
sbb
mov
xor
xchg
inc
cwtl
xchg
lea
shrb
les
xor
into
pop
lock
fs
lcall
stos
cwtl
fisttpl
aad
enter
inc
xchg
outsb
xchg
mov
fsubl
cltd
xchg
xor
pop
fs
mov
lea
jg
adc
mov
inc
or
stos
jge
dec
test
xlat
add
fiaddl
pop
in
sub
mov
add
lret
xchg
and
mov
mov
add
outsl
lcall
ret
movsb
inc
and
mov
mov
or
add
in
aas
syscall
adcl
loopne
fwait
jl
les
movsb
cltd
cmpsl
mov
cltd
mov
xor
imul
std
fbld
mov
pop
pop
ret
data16
aad
add
in
je
jle
pusha
xchg
shll
pop
dec
sbb
test
xchg
inc
sbb
mov
sub
sbb
pop
out
adcb
mov
xchg
jo
push
cmp
iret
lahf
clc
dec
mov
stos
xor
js
cltd
jbe
add
inc
icebp
jo
pop
inc
jge
je
or
sar
pusha
cmp
mov
mov
xchg
orl
andl
jae
lcall
inc
push
in
xchg
sbbb
add
aas
jge
subl
cmc
xchg
cmpb
or
enter
add
lahf
push
ret
inc
imul
and
std
test
push
or
in
pusha
push
lret
jno
dec
into
pusha
jb
ss
pop
push
icebp
mov
testl
cmpsl
add
mov
adc
jg
fmuls
inc
push
mov
push
sbb
outsb
push
cmp
in
push
movsb
pop
mov
inc
jl
cmp
sti
cmp
add
inc
call
and
push
and
and
in
je
pop
and
add
jno
lret
addb
push
aaa
imul
jl
insb
mov
push
rcr
mov
sub
push
out
dec
outsl
hlt
push
int
adc
push
mov
daa
in
movsb
xor
mov
dec
cmpb
jb
or
jl
addr16
inc
ficoml
mov
pop
jnp
add
pushf
addb
sbb
aas
or
test
pop
in
dec
cld
mov
adc
jbe
hlt
push
addr16
clc
inc
and
add
mov
adc
dec
mov
gs
dec
js
sbb
add
or
inc
inc
mov
es
and
adc
ret
nop
stc
fcoms
sub
jle
add
cmp
movsb
dec
pop
inc
cmpsl
mov
add
dec
xor
imul
cmp
push
loopne
out
ljmp
sti
into
adc
popl
mov
xorb
push
movsb
movsb
std
sbb
adc
adc
repz
mov
jg
pop
xchg
xor
cmovg
lods
push
push
cmp
sarb
pop
or
loopne
pop
dec
adc
jae
mov
sbb
sub
subb
sbb
clc
addb
adc
scas
inc
add
in
cmc
mov
jo
out
arpl
jl
rol
pop
xchg
mov
dec
add
cmp
cmpsb
pop
pop
in
outsl
jo
jbe
in
add
add
icebp
adc
js
cwtl
mov
mov
cmp
add
jnp
ror
and
notb
fdiv
cli
icebp
sbb
jns
inc
shlb
pop
jmp
jbe
or
std
into
out
mov
add
addb
std
icebp
mov
popf
pusha
mov
jp
rolb
inc
out
add
push
test
ja
push
sbb
mov
xchg
loopne
pushf
dec
cmp
add
sahf
push
mov
adc
and
es
fists
rolb
or
and
pop
mov
mov
pop
cmpb
push
push
add
jbe
outsl
pop
add
cmpl
bnd
add
xor
or
dec
test
mov
mov
inc
out
pop
in
push
addb
push
aam
add
mov
inc
fsubrs
dec
xor
mov
inc
pusha
push
pop
aam
icebp
add
dec
mov
lret
insb
cltd
inc
push
dec
test
add
add
rcrl
jo
in
inc
adc
mov
cwtl
jl
push
push
pushf
add
jns
cld
jae
rol
ss
add
lock
sub
test
fnsave
xor
out
inc
add
arpl
lock
mov
cmp
or
loopne
jno
pusha
mov
mov
shrb
mov
ss
add
cmp
aas
mov
hlt
pop
sbb
pop
mov
add
add
cmc
jb
cmpb
add
andl
notl
add
sti
inc
push
xchg
or
sbb
adc
dec
shl
pop
insb
mov
or
andb
mov
in
scas
pop
clc
or
push
add
pop
dec
cmp
popf
movsl
add
cltd
jmp
das
dec
push
or
pop
out
add
sti
add
jns
ret
add
cmpb
mov
add
inc
push
pusha
fwait
jmp
push
and
cmpsb
ret
mov
add
xlat
mov
push
add
in
imul
divb
or
scas
or
lock
push
clc
inc
add
mov
lea
and
or
in
xor
ret
test
ret
add
pop
sbb
stos
push
pop
pop
out
jl
popf
push
xor
shlb
xor
xor
add
push
xchg
popa
pop
cs
cmpl
int3
sbb
imulb
add
mov
insb
add
insl
outsl
cld
pushf
imul
and
jp
movb
add
push
into
das
jae
cmpsb
xor
push
js
lea
push
push
mov
pop
lods
add
movsl
inc
mov
xor
sbb
xor
pop
pop
xor
xchg
add
and
mov
adc
sbb
xor
inc
jo
or
xor
shl
xor
mov
pop
pop
cwtl
jbe
inc
test
fs
and
or
loop
mov
pop
add
mov
ret
adc
mov
mov
pop
and
sbbb
add
push
add
add
cltd
mov
aam
mov
xor
out
dec
cli
out
add
es
mov
pop
mov
mov
cmp
bound
push
cmp
enter
xor
mov
lcall
inc
cmp
push
fwait
jns
aam
cmp
enter
scas
jmp
push
lret
pop
test
adc
add
sbb
cmpsl
or
movsb
or
dec
add
loope
mov
fwait
addl
add
dec
xor
rorb
cmpsb
push
add
sbb
and
mov
add
rorl
add
rol
insb
xor
cmpl
loop
push
mov
xor
jl
pop
adc
mov
fnstenv
lds
xchg
sub
dec
lahf
outsb
scas
das
jb
mov
cvtps2pd
data16
mov
pop
mov
fmuls
and
pusha
arpl
jo
add
mov
ret
movsl
lret
pop
add
clc
sbb
scas
add
adc
stos
fistl
and
mov
neg
test
mov
add
add
cmp
and
sbbb
cmp
and
test
jno
push
mov
popa
and
ljmp
or
cltd
sbb
adc
xor
movsl
test
cmp
xchg
clc
movb
fs
xchg
popa
xlat
test
xchg
test
sub
adc
jmp
push
lea
cvtpi2ps
lock
add
daa
cmp
lods
push
rolb
gs
pop
push
pop
fisttps
and
ret
push
sub
movb
or
pop
mov
add
cmp
xchg
mull
cwtl
fs
loopne
add
mov
rorl
loopne
data16
mov
int
ljmp
add
js
loopne
push
add
icebp
decl
pushf
shl
sub
sbb
orl
sbb
orb
cli
stos
loope
icebp
flds
shlb
lods
mov
mov
push
icebp
aad
adc
xor
cmp
das
gs
push
mov
sub
xor
lret
add
bound
pop
cmp
and
mov
or
lods
jb
add
mov
loopne
and
xor
imul
dec
xchg
add
push
dec
add
jg
xchg
pop
push
xor
cmp
xor
add
test
in
add
sub
add
dec
sahf
mov
mov
cmp
inc
push
enter
xchg
or
into
push
xchg
stos
ret
add
jo
add
and
arpl
ss
jb
xchg
adc
fs
push
push
sbb
jnp
jb
ret
cmp
je
dec
pop
cwtl
sbb
cmp
stc
add
push
dec
mov
bound
sbb
adc
or
cmc
sbb
lods
mov
push
sar
mov
loopne
mov
and
loopne
jmp
cmp
push
add
mov
mov
and
test
sbb
add
outsb
lret
jnp
out
rcr
or
xchg
cmc
cwtl
movsl
fnsave
jl
add
jb
inc
out
andb
or
inc
push
mov
push
inc
movl
fwait
mov
add
push
dec
pop
les
outsb
dec
add
cwtl
int3
jo
or
and
jmp
mov
stos
adc
mov
add
mov
mov
mov
cwtl
push
cmp
lods
addb
test
push
push
lock
pop
xchg
dec
out
loop
add
push
fwait
mov
loopne
out
xor
adc
add
xchg
dec
add
loopne
lea
xor
adc
loopne
jg
xchg
jp
nop
push
jo
sbb
les
enter
rclb
add
sub
pushf
adcb
sub
xor
sti
mov
dec
ljmp
mov
xchg
push
push
mov
or
popa
fdivr
data16
add
ret
cli
or
mov
mov
inc
jns
enter
pop
mov
push
add
sub
ret
and
add
cwtl
outsb
lods
enter
arpl
sbbb
insb
cmp
lock
jae
outsl
dec
pop
push
insl
add
adc
pusha
lahf
xorl
icebp
ret
add
xor
sbb
mov
in
aad
pusha
negl
lods
test
push
add
mov
adc
lea
mov
fisttpl
or
addl
loopne
test
and
push
mov
popf
jo
or
jg
sbb
jns
push
add
pop
test
mov
das
stc
or
add
xorl
leave
xorb
push
negl
stc
add
push
cmpsl
pop
and
push
jp
in
sbb
in
sahf
jns
pusha
add
and
xor
or
mov
mov
ror
repz
std
sub
and
ljmp
out
add
js
inc
mov
js
xor
add
xlat
or
xor
out
sbb
incb
mov
and
and
fsubl
xchg
xchg
lods
jo
jbe
mov
push
sub
push
or
xor
std
pusha
incb
dec
loopne
addr16
inc
push
push
leave
ret
xchg
aas
outsb
test
jns
add
xlat
adc
adc
loopne
xchg
adc
mov
hlt
add
sub
loopne
push
dec
add
stc
jl
lgdtl
push
orb
es
add
sahf
add
clc
push
rol
aam
mov
daa
repz
stc
dec
cld
test
addb
adc
lds
into
push
sbb
aas
inc
push
loop
call
xchg
loopne
pushf
fldl
jecxz
push
and
ret
add
adc
jb
or
add
aam
sbb
jg
pusha
add
add
and
shl
fimull
sbb
stc
cmpsb
jl
loopne
fwait
sti
pop
push
and
shr
js
stc
add
hlt
mov
popa
lahf
sbb
jge
hlt
pop
dec
add
shll
push
add
cmpb
inc
lea
add
scas
pushw
add
out
jge
cmp
lock
mov
jno
push
push
fmulp
xchg
mov
add
bound
jl
imul
and
jl
ds
mov
xchg
sub
dec
pop
lahf
pop
icebp
call
daa
int
rorb
mov
gs
rorb
popf
add
test
insl
mov
add
pop
cld
jns
jmp
add
sub
jg
jl
or
mov
vmovq
inc
testb
mov
mov
add
mov
jae
stos
add
jp
lock
xchg
stc
fstl
xchg
mov
add
cmc
fbld
movsl
add
or
push
in
sub
inc
mov
aad
ret
pop
mov
add
lcall
sarl
insb
pop
cwtl
sahf
mov
out
subb
xchg
push
cli
mov
add
in
ret
leave
pop
fisubrl
cltd
mov
add
outsb
inc
add
jae
shll
in
mov
add
add
push
xchg
mov
cmc
add
adc
pop
jmp
std
add
sub
in
lahf
push
aam
lods
scas
sub
add
push
mov
sbb
inc
push
es
adc
xor
mov
fisubl
adc
fwait
mov
aaa
push
add
imul
xchg
cmpsb
sub
jne
push
fwait
inc
addb
imul
pop
cmp
test
mov
sbb
push
or
dec
lock
and
aas
add
push
jo
shlb
mov
clc
test
inc
cld
jae
fsubl
xchg
sbb
nop
push
gs
movb
fwait
sub
stc
or
lock
das
cltd
faddl
mov
add
or
or
popf
movsl
sti
and
ljmp
xchg
imul
fistl
add
jl
stos
dec
pop
and
mov
into
mov
testl
ljmp
fld
jbe,pt
pop
filds
enter
out
mov
mov
aas
dec
pop
repz
add
js
outsb
inc
sbb
popa
sub
mov
add
dec
add
jmp
pop
or
mov
or
pop
mov
andb
lock
push
add
mov
in
dec
fldln2
mov
fsubl
add
dec
das
outsb
js
arpl
ret
rcrl
mov
cs
insb
dec
rol
add
leave
push
mov
jp
sbb
fldl
nop
repz
push
imul
inc
mov
loop
push
add
sti
repz
add
lods
push
je
adc
add
nop
ss
fs
pusha
adc
in
pop
add
pop
add
adc
pop
or
fsubrs
add
lock
xchg
in
sbbb
add
jo
sarb
mov
mov
and
inc
pop
dec
add
cli
push
and
iret
inc
adc
inc
movl
mov
jge
test
stc
add
or
imul
jno
add
sbb
movsl
jb
lock
out
adc
xchg
fstpt
push
cmp
sbb
cmp
addr16
mov
adc
dec
ret
xor
mov
fcmove
sbb
cmpb
dec
out
aad
das
push
rolb
imul
fcomi
cmp
cli
orl
jae
lods
inc
shll
cmp
sbb
xor
add
pop
addb
dec
add
and
inc
sidtl
gs
data16
push
insl
add
sub
push
rcrb
add
call
in
arpl
pushf
sub
add
movsl
add
dec
mov
stos
stos
test
mov
push
sbb
outsb
xchg
adc
mov
pop
mov
pop
inc
pusha
pusha
mov
cltd
mov
mov
rclb
js
xor
mov
jl
cmp
scas
fcoml
mov
jo
adc
add
mov
mov
adc
imul
mov
pop
or
xor
pop
add
sbb
xchg
push
mov
rolb
movsb
xor
in
repnz
cs
fidivl
int3
mov
fst
outsb
pop
ret
add
cmpsb
sub
movl
push
std
mov
mov
xchg
sbb
add
je
shlb
inc
imul
push
adc
sbb
insl
sarl
mov
hlt
ret
sbb
add
inc
mov
jmp
jne
add
pop
je
jno
xor
jl
push
cld
into
sti
mov
sbb
cmp
inc
mov
gs
sub
and
mov
popf
add
fcmovnb
fwait
add
sar
jno
jo
add
sbb
dec
add
pop
nop
xor
push
adc
add
lahf
jb
dec
dec
push
aas
pop
out
outsb
cmp
ljmp
mov
pushf
push
xchg
and
mov
je
das
cmp
mov
es
xlat
jl
cmc
add
out
sub
bound
and
movsl
fmul
cmp
mov
jbe
push
clc
insl
mov
pop
pop
mov
push
jo
add
ret
add
adc
stos
sbb
mov
mov
xor
les
fwait
mov
mov
shl
ja
mov
outsl
test
cmp
push
cmpsl
pusha
mov
push
sub
lods
test
add
int3
mov
shll
in
rorb
mov
leave
sbb
and
push
add
dec
test
xchg
mov
xchg
iret
push
pusha
jno
cmp
lock
arpl
into
orl
add
lds
das
sub
scas
in
and
je
test
insb
sbb
out
les
sti
add
push
cli
cwtl
mov
insb
out
inc
rorl
fadd
sahf
and
inc
ret
inc
pop
into
sub
scas
inc
rcll
inc
sbb
addl
jno
imul
leave
inc
mov
sbb
push
stos
nop
mov
repnz
pop
jne
pop
add
into
push
add
push
call
push
jmp
mov
sub
popl
cmp
lret
xchg
pop
out
dec
ljmp
jecxz
cmpsl
mov
mov
jle
push
ret
test
add
fldcw
add
xchg
dec
dec
or
cmp
mov
mov
push
pop
push
imul
cmpsl
add
sbb
add
and
and
and
push
add
ja
adc
lahf
or
mov
in
add
test
jb
mov
notb
sti
popa
xlat
and
adc
mov
jbe
lea
fisubrs
jmp
xchg
sub
pop
mov
pop
mov
add
jno
in
orl
push
out
addl
fcomps
stos
push
jge
ret
sub
shll
mov
xchg
jae
addr16
mov
leave
add
pop
push
sbb
aas
subb
pop
dec
cmc
icebp
push
out
add
idivb
xchg
adc
inc
xchg
sub
cmc
inc
mov
aaa
popl
xor
cmp
mov
adc
add
fwait
add
xlat
stc
loopne
dec
mov
adc
adc
mov
cmpsb
mov
push
lcall
icebp
adc
add
std
cs
push
dec
adcl
push
sbb
inc
in
addr16
scas
les
data16
pusha
lods
mov
into
ret
rolb
imull
jle
rorl
out
xor
add
ficompl
adcb
jne
push
adc
inc
mov
push
cmp
adc
cmp
les
add
in
outsb
sbb
xor
pop
and
xchg
es
inc
in
ds
xchg
pop
icebp
gs
jbe
inc
sbb
add
pop
vdivps
rclb
ljmp
xchg
or
adc
or
mov
or
popa
loopne
scas
add
out
js
fsincos
dec
pusha
mov
mov
roll
shrl
movsb
das
xchg
stc
repnz
push
mov
imul
mov
iret
sbb
movsb
or
sub
cmp
xor
xchg
or
xor
jae
push
inc
pop
loopne
in
push
mov
data16
gs
pop
add
cmp
vxorps
add
movsb
add
dec
stos
jmp
enter
subb
add
adc
and
pop
movb
xor
mov
pop
push
cmpsl
mov
mov
mov
lret
insb
scas
inc
cmp
rolb
xor
out
inc
roll
adc
jno
jg
and
pop
add
pop
repnz
into
mov
sbb
inc
div
add
testb
flds
pusha
push
pop
sub
out
jo
pop
ljmp
out
push
add
cmpsl
das
xchg
push
sub
jnp
and
jbe
imul
jno
xor
cmpb
outsb
mov
cmpsb
mov
jne
inc
mov
je
mov
jns
sti
and
pop
jbe
adc
aad
sbbb
pusha
sub
mov
lods
push
in
sahf
xor
outsl
cwtl
shll
push
leave
add
idivb
pop
loopne
fdiv
cli
or
sbb
jl
or
jecxz
jno
and
pusha
sti
ja
push
add
pop
fiadds
aas
in
mov
xchg
addr16
and
es
and
add
mov
aam
les
dec
lea
sbbl
lods
xchg
cmc
add
push
cmovge
and
rol
loop
mov
arpl
jae
test
add
inc
fdivs
mov
xchg
lock
cli
xor
add
xor
mov
and
loope
js
stos
loopne
popa
pop
pusha
xchg
mov
mov
ja
js
call
or
adc
insl
aas
mov
sarl
sub
testl
cmp
xchg
or
cmp
or
mov
in
or
inc
cmp
jl
push
and
outsl
xor
mov
lret
sbb
out
add
iret
lea
or
cmp
xchg
aas
xchg
orb
or
mov
add
stc
mov
jg
adc
sahf
add
loope
or
mov
fldl
add
insb
jo
lock
rclb
push
pop
or
enter
or
pop
js
test
push
add
test
into
push
and
or
aas
in
std
sub
xor
add
adc
mov
dec
jl
sub
inc
push
mov
shl
and
cmpsl
test
mov
loope
cwtl
jg
out
lea
jns
lds
or
cs
aam
in
or
or
inc
incb
push
in
test
fisttpll
bound
clc
xchg
add
jb
mov
lahf
repnz
pop
insb
mov
clc
out
insl
pushf
mov
pop
stc
aas
jg
je
aaa
and
add
dec
data16
cli
sbb
cmp
jo
push
and
inc
repz
movsl
lea
clc
add
test
or
aad
jb
adc
scas
add
jmp
jo
loope
pop
mov
adc
push
add
ss
push
add
jns
in
ret
add
es
stos
cmc
loop
add
jmp
mov
mov
movb
mov
test
sbb
ror
and
cmp
gs
sti
ss
push
xchg
inc
into
adc
mov
add
fsubr
sahf
xor
inc
adc
push
ljmp
add
xchg
push
rcr
shlb
pusha
xor
fcoms
sub
flds
call
sahf
adc
mov
and
fldl
cmc
sub
ret
push
adc
mov
jns
jno
sub
shll
jl
add
in
lods
std
inc
or
push
add
ljmp
pop
push
cmp
mov
dec
in
add
sahf
call
lea
dec
loop
in
mov
add
ret
popa
xchg
in
loope
xchg
sbb
clc
or
dec
test
mov
rep
mov
lds
pusha
add
pop
mul
fwait
test
test
mov
cmc
or
ja
add
mov
add
jl
hlt
fldenv
in
sbb
int3
mov
add
inc
xor
xor
dec
sub
shl
scas
add
mov
sub
dec
lods
push
pop
dec
scas
sub
jbe
roll
sbb
push
dec
cmp
cmp
das
adc
lds
xor
push
cmc
jbe
push
movsl
clc
pusha
mov
add
lock
mov
mov
cmpsl
fmull
jle
add
call
xchg
out
lea
sqrtps
cmp
loopne
test
inc
push
jge
add
pusha
repnz
sahf
xchg
cmpsb
cmp
orb
sub
sub
push
imull
add
and
mov
add
popa
adc
mov
psubusw
add
push
add
test
push
adc
jno
and
addr16
mov
cmp
pop
sbb
mov
fcomip
and
jp
dec
dec
clc
mov
sbbl
mov
iret
dec
add
cwtl
add
cmp
ret
pop
sub
adc
dec
mov
xchg
mov
inc
or
ret
inc
xor
adc
movsb
arpl
shl
jnp
sub
and
imul
or
in
add
addl
or
sbb
std
add
add
pop
lcall
in
imul
cmp
jmp
and
and
mov
add
or
add
and
push
dec
dec
add
int
imul
mov
xchg
cld
dec
pop
and
cmp
lods
outsb
in
add
insl
xor
add
sbbl
inc
sbb
add
and
lds
sbb
mov
adc
lcall
jmp
add
xchg
stc
xor
inc
rcl
mov
lods
cs
mov
inc
sti
cli
ljmp
dec
push
mov
jmp
mov
mov
test
pop
ret
add
subb
dec
pop
push
add
arpl
xchg
cmp
or
outsl
push
dec
sbb
xchg
popa
repnz
jnp
stos
add
mov
add
data16
cmpsb
jns
nop
addr16
lds
clc
inc
daa
or
sbb
jb
test
shlb
and
mov
add
and
xlat
int3
push
and
pop
pop
cmpsl
mov
orb
cmp
test
icebp
orb
xlat
add
loopne
scas
dec
xchg
or
js
add
xor
cmp
addr16
sub
fcoms
cmpsl
adc
add
into
sbb
jnp
ja
adc
pop
in
pop
pushf
aaa
pop
pusha
pusha
icebp
inc
or
dec
sbb
adcb
inc
pop
or
xchg
cwtl
fdivs
ds
rcrl
mov
adc
pop
adc
push
outsb
inc
pop
fs
popa
mov
out
dec
loopne
push
jno
and
leave
ror
das
cmp
rcrl
push
pushf
lods
pop
pop
or
loopne
gs
icebp
pop
sarb
into
push
add
arpl
cmp
dec
pop
clc
dec
or
add
rcrb
prefetcht0
cmp
pop
or
and
jo
lret
push
add
cmp
notl
sub
push
add
sbb
and
or
and
fmul
cwtl
xchg
mov
shlb
aad
ss
xchg
scas
add
mov
imul
fwait
dec
push
fstl
xchg
pop
lock
test
mov
dec
add
insb
bound
je
add
xor
je
data16
xchg
sbb
push
mov
or
stos
out
pushf
push
sub
cltd
inc
shl
outsl
and
jmp
xorb
add
xchg
jmp
sub
add
sbb
add
insb
xor
test
push
hlt
cli
push
clc
repz
rcrb
add
cmpsl
xchg
mov
sbb
mov
pop
pop
mov
dec
xor
dec
adc
es
inc
pushf
roll
add
icebp
xor
cwtl
mov
push
dec
test
add
sub
or
fidivs
add
in
sub
add
jmp
or
or
or
push
enter
cmp
lea
pop
mov
dec
pop
flds
pop
adc
add
ja
push
call
stc
mov
in
jne
add
in
stos
stos
jnp
add
add
xor
mov
sbb
xchg
or
test
cmpsl
xchg
loop
int3
and
aad
imul
std
test
pop
cmp
sbb
dec
add
mov
loop
add
in
push
out
add
lds
xor
push
aam
add
and
in
add
repz
push
fdivr
les
adc
add
cmp
push
jle
add
push
mov
sub
loop
cmp
mov
mov
test
inc
inc
aaa
lret
add
cmp
add
or
cmp
mov
sar
aas
inc
pop
fistl
insl
sub
cli
cmp
jecxz
mov
aaa
add
mov
scas
ss
inc
cmpsb
loop
xor
add
sahf
add
adc
in
lods
lea
pop
sbb
out
push
dec
pop
mov
in
mov
xlat
add
gs
mov
fwait
add
xor
push
mov
addr16
mov
adc
mov
lods
fs
fldl
shlb
cltd
lcall
adc
sti
pop
mov
mov
mov
fldl
dec
pusha
ljmp
ficomps
fidivl
js
clc
jbe
rcrb
out
or
jae,pn
pop
cli
jmp
jb
pop
sbb
sar
mov
add
ret
mov
add
clc
sahf
mov
or
fidivl
out
arpl
jno
xor
insb
out
sbb
int
jle
push
cld
mov
add
jne
daa
inc
jmp
mov
aam
mov
insl
add
jb
sub
dec
mov
hlt
mov
andb
sbb
lods
outsw
pop
cmp
jnp
movsl
pushf
mov
mov
lods
adc
lea
enter
add
dec
add
lock
mov
or
nop
mov
sbb
jle
imul
movsl
sarb
testb
icebp
push
xchg
cltd
stos
jo
pop
shll
cs
iret
or
xor
scas
rolb
jecxz
sarl
lock
cmp
in
mov
hlt
filds
xor
mov
push
add
xchg
lret
or
scas
add
notl
rcrb
pop
sbb
mov
test
cmp
xchg
out
ds
dec
loope
test
cmp
sub
push
in
cli
mov
jl
add
sbb
in
mov
add
pushf
ficoms
xchg
dec
call
cmp
addl
dec
mov
daa
push
jnp
and
add
loope
scas
fists
add
push
pop
sub
stos
test
push
mov
addl
and
cmp
jg
loope
lds
in
inc
movl
jl
pop
push
bound
jae
pop
test
pop
arpl
cmp
lret
fadds
loope
lds
lahf
sbb
jl
dec
scas
cmp
add
push
int3
pop
pop
cld
mov
sahf
pop
push
pop
push
nopl
sbb
cmp
das
je
add
and
es
and
dec
jbe
add
dec
inc
add
cmp
mov
cmp
movsl
or
sbb
in
xchg
xchg
adc
mov
mov
hlt
push
jp
add
and
lcall
adc
mov
stos
pop
sbb
push
push
and
daa
mov
out
popa
inc
sub
mov
shlb
add
or
test
pavgb
scas
out
subb
std
or
or
mov
jno
cmp
or
enter
xor
int3
dec
inc
mov
cmp
pop
bound
xchg
push
xchg
xor
xchg
cmpsl
pop
dec
xchg
pop
jbe
arpl
cmp
mov
lret
jg
add
or
lock
dec
je
out
inc
push
sub
dec
dec
ret
xor
out
andl
sub
lcall
mov
mov
stc
loopne
mov
inc
cmp
inc
add
add
xchg
pop
lods
adc
sar
mov
add
pop
sahf
popl
test
les
pusha
push
dec
sarb
add
inc
adc
pusha
lods
lock
aas
and
in
daa
pop
out
mov
jmp
mov
add
jp
je
fcmovnbe
adc
mov
push
adc
test
stos
xchg
xchg
lock
push
pop
cld
add
aad
idivl
cmp
in
add
sbb
jmp
into
dec
orb
and
and
add
addl
cltd
fs
or
std
test
add
add
js
or
sbb
and
sub
sub
leave
rclb
jg
push
add
xchg
fsts
mov
in
add
fsubrl
ja
dec
xlat
mov
push
icebp
sub
cmp
mov
push
or
and
pushf
mov
mov
mov
rolb
dec
mov
dec
ss
and
movb
add
sub
mov
cwtl
push
and
daa
outsb
xchg
inc
jo
enter
xchg
add
add
int
and
mov
xchg
or
add
stc
mov
inc
sub
pop
test
dec
out
loopne
pop
mull
add
stos
cmpsl
sarl
insb
out
jge
or
nop
and
orb
arpl
jg
loop
into
std
jl
dec
int
add
adc
leave
mov
adc
icebp
and
add
cmp
mov
out
mov
dec
lcall
addr16
adc
xchg
loopne
faddl
movsb
pop
adc
fcomps
aad
jne
int3
pushf
popf
add
pop
mul
adc
mov
xor
enter
push
outsb
sbb
in
jl
push
popa
aas
dec
rcl
add
inc
nop
je
repz
pop
xor
hlt
add
cmp
dec
fiaddl
push
pop
pop
or
jo
mov
cld
add
push
jo
xchg
std
sub
das
mov
or
jno
lds
lret
pop
insb
adc
add
inc
xchg
mov
popa
ja
add
adc
ret
pop
jno
fdivrl
notb
jne
push
push
pop
mov
outsb
ret
add
test
push
ja
cld
in
movsb
jl
add
dec
loop
xor
sahf
insl
or
lcall
enter
inc
or
in
test
push
shrb
pop
add
stos
inc
js
mov
mov
mov
sub
adc
loopne
mov
lea
sub
jb
add
mov
push
add
insl
inc
loop
daa
andl
add
push
repz
je
pusha
jp
add
ret
add
sbb
sahf
push
pop
int3
cwtl
and
stc
pop
imul
add
jmp
mov
jecxz
xadd
mov
fidivrl
push
jne
mov
mov
pop
add
bound
inc
movsl
aas
iret
add
pop
xor
mov
loop
push
jl
sub
pop
popf
jp
je
pop
or
sbb
test
call
pusha
hlt
nop
filds
fildl
push
out
aaa
sub
scas
mov
add
les
adc
push
xchg
enter
pop
inc
jge
clc
movsb
mov
test
rorb
xchg
repnz
mov
jnp
enter
add
ds
int3
mov
sub
xchg
pop
ror
cltd
cmp
cs
add
fnsave
push
lea
dec
add
xor
jg
out
test
out
lret
mov
fistpll
or
sbb
sbb
push
add
mov
icebp
and
sti
hlt
add
inc
jl
cli
out
loope
jmp
add
les
add
stos
adc
std
shrb
pop
xor
out
xor
adc
push
andb
lahf
xchg
mov
and
fistps
ror
insl
xchg
pop
add
cmc
jbe
mov
into
add
xorl
popa
or
sarl
fsubs
xorl
mov
add
fcmovnu
fstps
les
imul
cmpsl
imul
push
push
dec
loopne
insb
aas
adc
aad
popa
jle
dec
push
xchg
sbbb
mov
lds
mov
outsl
add
and
test
or
or
adc
repz
testb
aad
addb
add
imul
sub
xchg
push
or
dec
lret
aas
es
jp
add
ret
mov
shr
push
push
jbe
and
stos
cmp
lods
push
push
pusha
mov
inc
fs
add
mov
add
xchg
jl
pushf
es
repz
lods
jns
add
sub
loopne
cs
icebp
mov
pop
fstps
jnp
pushf
lcall
stc
and
sti
add
cmp
lock
pop
test
xor
add
cmp
jne
in
adc
test
add
test
pshufw
cwtl
fbstp
loopne
lret
add
sub
fldt
shlb
add
mov
fsubs
adc
mov
or
dec
cmp
push
xor
das
jne
pop
jecxz
rol
iret
dec
jne
cmpsb
add
sub
jge
test
and
ffreep
mov
ljmp
int
and
add
test
mov
pop
loopne
lret
cwtl
xchg
pop
sub
push
inc
mov
sub
mov
dec
add
inc
mov
pop
cmpsb
icebp
fbstp
jne
jmp
jl
xchg
pop
push
fcompl
cmc
test
xchg
add
push
pop
pop
push
rolb
cltd
leave
lock
adc
ds
cmp
je
enter
fdivrl
pop
cmc
push
add
and
sub
lods
jbe
add
ss
lret
xchg
jmp
mov
adc
ja
das
pop
inc
pushf
incl
xor
cmp
sub
adcb
pop
loope
adc
cmpb
add
ds
and
inc
sub
add
push
scas
mov
push
outsl
loop
movsb
loopne
scas
add
cmpsb
mov
sarl
push
mov
pop
mov
add
fiaddl
mov
inc
mov
cwtl
pop
and
mov
cld
imul
into
test
clc
jb
push
jle
or
dec
gs
jl
xor
call
sbb
inc
mov
add
repnz
jne
hlt
add
loope
push
add
or
sub
and
nop
mov
push
dec
adc
jge
or
inc
gs
pop
xor
xchg
and
cmpsl
dec
add
xchg
icebp
inc
std
xchg
decl
mov
dec
sub
enter
shl
pop
add
push
or
lcall
cmp
lock
pop
lods
xchg
push
fcmovu
xchg
cmp
pop
ret
out
jae
mov
movsl
loope
cmp
inc
enter
xor
decb
shrl
xchg
jns
mov
lods
aam
inc
or
jmp
loope
dec
lods
dec
jbe
pop
je
inc
mov
pop
add
loop
add
xor
add
xor
lock
push
add
cmpsb
test
push
pushf
jp
nop
jo
iret
mov
es
repz
add
mov
loopne
inc
add
add
jns
fdiv
loop
cs
and
push
xor
test
or
and
xor
add
jp
pop
add
lret
int3
jns
add
cltd
test
jbe
cmp
mov
xchg
mov
popa
pop
add
pop
xorl
adc
push
add
insb
and
push
addl
mov
mov
add
or
sahf
cmp
inc
add
add
pop
jg
add
mov
dec
or
lods
xor
enter
gs
adc
sub
xchg
popa
pop
daa
mov
and
cld
pop
loop
add
cmpl
sbb
mov
push
push
dec
add
cltd
jge
bound
inc
add
hlt
mov
add
mov
push
add
adc
inc
sbb
aas
xchg
xchg
add
stc
shll
mov
add
ds
sub
xor
and
fwait
ljmp
sub
fsubs
add
mov
int3
add
sub
lahf
mov
mov
xchg
ja
lcall
adc
sub
cmp
inc
xor
sti
cwtl
sbb
dec
lret
test
daa
scas
xchg
enter
ljmp
ret
hlt
add
sbb
test
add
popf
lfs
or
dec
dec
inc
cmp
add
add
ret
negl
dec
push
enter
or
icebp
testb
scas
pop
pushf
scas
xor
xor
pop
mov
test
or
add
push
pushf
xchg
pusha
sarb
push
movsb
sub
add
ljmp
sub
xor
or
loopne
and
add
ljmp
xor
inc
and
in
push
push
mov
mov
lcall
jb
es
or
mov
xor
add
out
rorb
dec
add
mov
idivb
add
xchg
mov
add
test
and
pop
mov
andl
inc
in
bound
jle
add
dec
pop
cmc
ss
jns
inc
or
or
inc
add
dec
xchg
pop
inc
sub
popl
or
or
roll
cmc
call
xchg
ret
pop
and
cs
addl
lods
mov
pop
or
pop
out
push
loopne
lods
inc
in
call
jno
aad
je
jbe
inc
push
jl
lds
sbbb
pushf
add
or
xor
add
je
fildll
jl
cmp
add
mov
outsl
add
or
push
sbb
aam
es
sbb
inc
or
cmc
ja
xorb
js
push
pop
mov
xor
jb
add
or
test
mov
cmp
popa
add
dec
aaa
aad
rcrl
pop
add
mov
add
xchg
sub
and
push
test
add
mov
and
stos
rorb
std
test
fisubrs
adcl
test
xchg
addb
cmp
aam
mov
cmpsb
lods
add
add
js
and
pop
add
cmp
mov
push
pop
or
add
push
in
in
adc
inc
add
or
add
pushaw
mov
and
add
mov
add
popa
fsubp
stos
jno
xor
popf
add
fs
shlb
lock
xchg
mov
jnp
repnz
das
aas
jbe
push
decl
mov
adc
pop
cmp
mov
sbb
fdivs
and
sbb
mov
and
shll
mov
pop
out
add
jle
pop
lret
add
sbb
add
test
shlb
cmp
jle
jns
addr16
outsl
inc
pop
push
testl
add
insl
mov
xchg
scas
cmp
sahf
add
mov
jecxz
pop
push
aas
in
pop
sbb
add
sub
testl
push
enter
mov
ds
ss
cwtl
add
mov
and
jp
sub
repz
popf
or
adc
leave
jae
cmp
sti
insb
movsl
xchg
mov
and
push
hlt
out
orb
lret
xor
push
or
or
pop
cmp
xor
inc
add
clc
adc
push
das
mov
or
sub
push
faddl
adc
xor
or
mov
inc
adc
cmp
pushf
inc
in
arpl
xor
and
cmp
xor
sub
and
ret
or
xor
adc
pop
xchg
aam
push
shll
or
cmp
sbb
xor
pop
cltd
pop
inc
test
or
push
adc
sbb
test
les
inc
cmp
jl
and
in
pop
sbb
push
stos
enter
xchg
in
or
xchg
push
push
mov
push
push
fwait
test
and
jbe
or
cmp
xor
mov
fs
mov
lods
in
sbb
cld
and
or
or
xor
or
insb
test
mov
mov
test
push
add
xor
inc
mov
mov
inc
test
sub
in
daa
inc
imul
or
xchg
or
ret
cmp
adc
sahf
pop
loopne
fiaddl
xchg
icebp
add
insl
pop
nop
or
cmp
enter
xchg
shrb
or
ljmp
xor
or
xchg
repnz
or
nop
and
xchg
mov
adc
orl
fs
or
xchg
sub
insb
dec
and
jecxz
call
aas
data16
sbb
js
sub
cmpb
or
adc
or
data16
sub
call
fstpl
dec
rorb
je
sbb
out
sbb
addl
les
cld
xchg
add
arpl
les
inc
cltd
or
nop
inc
outsl
in
or
js
xor
arpl
or
fmul
push
shlb
push
mov
lds
mov
into
sbb
mov
add
inc
xchg
sti
or
push
cmp
movsb
cmp
push
mov
fs
aam
or
or
or
adc
adc
and
in
lahf
dec
repnz
dec
int3
ljmp
cmpsl
es
jbe
and
dec
clc
stos
lock
xchg
bound
in
inc
add
imul
nop
jo
dec
adc
or
mov
lds
sbb
les
push
or
sub
fcoml
xchg
push
nop
adc
jle
fldl
popl
cmp
movsb
loopne
push
mov
or
adc
sbb
sub
and
xor
loopne
and
aam
mov
lea
movsb
adc
mov
xor
add
aam
les
out
and
inc
add
insb
out
jl
or
mov
adc
adc
xlat
mov
pop
scas
push
test
push
mov
xor
adc
and
push
dec
push
mov
xor
lcall
out
ret
inc
mov
or
add
les
xor
lret
sbbb
hlt
and
andb
sub
in
stc
adc
or
fsubs
aaa
mov
test
sbb
loop
xorb
jo
daa
adc
int3
lahf
mov
ficomps
add
mov
or
mov
and
push
mov
and
in
and
and
adc
cmp
and
dec
mov
bound
or
xchg
fsub
push
ret
adc
mov
leave
hlt
mov
add
add
mov
popf
or
xor
cwtl
incb
mov
lcall
rcrb
push
adc
push
int3
pop
sahf
adc
arpl
pusha
bound
or
and
push
cld
cmc
cmp
cmp
adc
and
mov
nop
dec
sbb
push
cwtl
adc
in
enter
lods
xor
movsb
xchg
mov
fdivrl
sbb
test
xor
pop
mov
repz
les
cld
lea
test
addb
xchg
shlb
dec
push
sbb
sub
add
sbb
adc
inc
inc
xor
or
pop
jno
int3
adc
insb
inc
jmp
in
and
mov
in
in
and
loopne
push
lods
int3
add
xchg
mov
cmp
dec
push
mull
push
push
stos
adc
popa
sub
xor
mov
add
pop
inc
je
add
dec
int3
adc
popa
jle
mov
inc
fwait
pusha
pushf
push
dec
fs
jl
pushf
mov
pop
cmpb
jmp
adc
in
push
mov
shlb
adc
aam
or
and
add
jae
aam
xor
adc
pop
mov
or
inc
xor
inc
xchg
je
pop
inc
decb
lods
inc
neg
arpl
pusha
add
cmp
add
leave
cmpl
inc
push
and
adc
clc
stos
adc
xchg
push
or
push
add
mov
insb
mov
mov
lods
hlt
add
mov
cwtl
lea
lahf
push
int3
push
pushf
inc
in
js
mov
cmp
aam
mov
fdivr
je
pop
gs
xor
nop
lods
and
ret
mov
or
pop
xchg
imul
les
add
shll
les
insb
das
rcrl
mov
jl
or
mov
cld
popa
mov
aam
push
cwtl
xor
or
cmpsb
enter
and
adc
push
int3
clc
loopne
sub
mov
mov
inc
xchg
mov
cld
rorl
test
add
hlt
jecxz
mov
in
loop
and
cmp
insb
mov
xchg
jno
jo
loopne
fsubl
inc
mov
push
inc
bound
mov
jl
rorb
rcrb
or
fs
push
sbb
jl
xor
xchg
inc
mov
js
inc
mov
in
inc
test
testb
les
pushf
xchg
add
jmp
or
ror
jns
fcoml
mov
test
pop
xchg
inc
adc
cltd
aam
lock
flds
sbb
mov
bound
xchg
cmp
outsb
sbb
leave
nop
or
adc
pop
adc
xor
and
mov
pushf
in
and
push
and
or
imul
jbe
leave
pop
mov
push
aam
sub
dec
shll
adc
je
outsl
or
pop
jo
or
mov
int
mov
pop
aam
cmpsl
push
jae
and
adc
mov
and
fisttps
fs
push
loopne
jne
xor
pop
xor
xor
notb
pushf
pop
daa
pop
cli
test
gs
pushf
lret
lret
js
push
sbb
push
out
popa
aas
shrb
iret
inc
push
mov
insb
sbbb
add
cmp
leave
enter
hlt
out
mov
das
pop
inc
mov
cmp
addl
cmp
into
aaa
and
movsb
add
cld
mov
stos
inc
inc
xchg
inc
andb
push
out
int
mov
and
adc
movsb
lcall
je
ds
call
into
and
jo
jl
nop
or
ljmp
rcrl
rcl
or
mov
pop
adc
xchg
mov
cwtl
mov
adcl
and
mov
dec
scas
in
and
inc
sub
mov
adc
sbb
pushf
je
test
cmp
xchg
ja
sbb
xor
mov
fdivl
jl
and
cmp
sub
xor
in
ja
ror
jmp
into
mov
push
int3
rcr
or
add
adc
inc
add
rcl
fisttps
faddl
adc
pop
dec
clc
loopne
arpl
test
hlt
les
dec
add
xlat
or
notl
test
mov
fiadds
pop
xchg
push
test
imul
pop
aad
js
xor
pop
into
xchg
mov
adc
les
inc
scas
test
or
xchg
popl
js
adc
int3
adc
fcompl
and
mov
gs
insb
les
add
sbb
lods
sub
mov
pushf
xor
xor
or
sbb
pusha
pushf
cmp
jg
inc
cmpsl
and
add
add
dec
movsb
sbb
and
dec
mov
inc
mov
les
mov
xor
jne
les
adc
fs
jbe
in
lods
rorb
inc
dec
mov
dec
and
inc
mov
hlt
adc
int3
inc
adc
fcoml
xchg
inc
add
adc
insb
fistl
or
cld
fadds
inc
rolb
aam
add
roll
fimuls
mov
int3
adc
sahf
sbb
cmp
popa
xor
jl
cwtl
or
push
or
lods
inc
imul
cmp
inc
je
dec
inc
pop
les
out
adc
sbb
mov
jno
adc
in
cli
nop
bound
lods
incl
and
push
cmp
arpl
lock
pop
cmp
jl
push
mov
and
sbbl
cmpb
je
sbb
test
inc
test
sbb
push
mov
sbb
inc
enter
subb
sbb
cmpsb
pop
insb
test
roll
in
hlt
test
mov
push
xchg
or
push
cmp
aam
cmp
jns
out
rclb
lods
fwait
mov
push
sbb
stc
arpl
loope
stos
aaa
inc
jp
test
push
pushf
xchg
mov
lock
add
in
shrb
mov
and
lock
insb
add
lcall
sbb
add
adc
aas
or
in
inc
xor
adc
movsb
mov
jbe
adc
inc
or
push
cmp
int3
loopne
jl
leave
fmull
sbb
fsub
loopne
in
hlt
inc
mov
xchg
sbb
bound
sahf
add
movsb
jmp
mov
sti
ret
mov
jge
repnz
fwait
rol
push
and
push
lsl
fs
add
jl
mov
lock
call
mov
and
inc
dec
sub
push
mov
inc
mov
mov
call
cmpsb
pop
xchg
movsb
inc
in
sub
pusha
lahf
adcb
xor
adc
and
outsl
sbb
mov
mov
inc
xchg
mov
adc
and
movsb
pushf
xchg
inc
addl
add
sub
pusha
and
pop
leave
fcomp
pusha
fmuls
push
lock
int
les
sbb
mov
xor
pop
lods
jmp
push
enter
call
outsb
fnstcw
jnp
les
pop
mov
xchg
dec
lock
inc
cmp
lea
fistpll
aad
js
in
sub
xor
hlt
sub
imul
xor
js
inc
dec
xchg
lea
mov
cmp
cwtl
fiadds
lea
sbb
aam
cmp
add
add
push
mov
cmp
sub
mov
xor
cmp
clc
rolb
in
lahf
clc
push
mov
and
sti
and
shl
clc
xchg
cmc
xor
pop
cmp
cmp
xchg
xchg
movsb
dec
aad
lock
cmp
xor
call
sahf
hlt
adc
jl
sti
sbb
or
inc
js
sahf
add
adc
movsb
aam
call
push
dec
cwtl
push
mov
adc
mov
call
and
lods
add
sub
or
push
cld
add
push
dec
or
or
adc
movsb
adc
test
les
cmp
fcompl
dec
lret
rorl
pusha
pop
fstpt
sbb
inc
pop
mov
lock
in
sub
cwtl
or
sub
mov
or
lahf
xor
sbb
push
int3
fadd
push
adc
les
in
fistpll
and
xor
dec
popa
clc
dec
mov
fistpll
aad
stc
sbb
cmp
outsl
cmp
pop
ja
aad
andl
dec
pusha
jo
sub
js
inc
xor
pop
jp
enter
dec
push
dec
test
and
and
sub
jne
test
mov
dec
icebp
inc
cwtl
test
push
or
or
and
mov
outsl
push
ret
xor
icebp
or
std
inc
int3
js
andb
mov
push
mov
into
and
cmp
cmp
push
jl
mov
daa
push
les
hlt
lods
or
in
xor
lret
jns
jne
add
jo
loopne
sarb
xor
jp
orl
loopne
daa
pop
xor
pop
xchg
call
adc
xor
xchg
inc
xor
fbld
lret
test
ss
pop
jl
bound
in
outsl
sub
rcrl
xor
adc
fwait
sbb
sbb
inc
adc
lock
and
push
rcll
cwtl
fisttpl
insb
pop
lock
and
loope
jl
or
lds
mov
popa
cmp
cwtl
int3
out
cltd
inc
out
cltd
or
adc
jge
loopne
out
or
adc
xor
inc
and
push
in
std
or
push
sarb
inc
mov
inc
fmuls
inc
dec
rol
or
movsb
sub
sub
or
add
movsb
mov
lea
xor
dec
xor
dec
or
je
mov
cmp
adc
adc
cld
add
xlat
fstpl
es
mov
insb
adc
mov
inc
cmp
cmp
jl
lods
mov
sub
aam
pop
cmp
int3
lods
dec
je
pop
lock
cmp
scas
outsl
insb
orl
test
inc
bound
adcl
loope
adc
mov
or
leave
call
scas
fwait
js
out
int3
push
jg
movsl
dec
rorl
jecxz
nop
lahf
jl
push
push
or
cmp
je
adcl
pop
xorl
and
and
adc
loopne
js
cltd
jnp
and
fcoml
insb
js
sub
add
test
or
enter
clc
wrmsr
or
cmpsb
fwait
je
in
cltd
mov
jo
jl
imul
mov
aaa
insb
rolb
mov
mov
imul
or
lods
dec
pop
subb
outsl
insb
subl
jl
sahf
mov
mov
push
pop
movsb
sub
enter
mov
xlat
jno
call
or
int3
sbb
xchg
or
test
xor
in
lods
or
mov
sub
ret
hlt
gs
fmul
jl
or
or
leave
pop
cwtl
rol
jge
inc
idivl
adc
je
adc
js
mov
or
out
lock
lods
movsb
jecxz
loopne
add
mov
dec
inc
adc
leave
je
xor
inc
aam
xor
jbe
and
inc
lods
pushf
mov
or
aam
add
sbb
or
adc
mov
mov
hlt
mov
inc
in
insb
mov
inc
leave
cwtl
hlt
mov
or
adc
test
sbb
and
adc
cmp
or
mov
hlt
popf
pop
outsb
jo
adc
fisubl
sar
lret
rcrb
cwtl
xor
clc
sbb
xor
push
jl
or
cld
and
mov
push
out
push
xor
sbb
pop
clc
fists
movsl
or
js
hlt
and
andb
cmpsl
pop
clc
cmp
adc
jge
cmp
loopne
sarb
inc
xor
pop
sbb
pop
clc
test
adc
dec
xor
pop
rol
cmpb
and
mov
sarb
push
decb
popa
sub
mov
inc
push
and
push
cli
xor
dec
stc
arpl
inc
pushf
adc
or
or
xchg
add
adc
dec
xchg
in
mov
sbb
or
mov
insb
adc
les
push
push
inc
stos
or
inc
sbb
sbb
js
sbb
cli
lds
mov
cmpl
es
xor
push
cli
bound
in
outsl
sub
fcompl
movsl
or
and
dec
loop
add
inc
mov
cmp
sarb
fs
cmpsl
insb
hlt
push
fldcw
stos
cs
insb
sti
enter
inc
sti
rol
mov
add
bound
clc
es
cmp
lods
das
xchg
lock
cmpsb
fwait
sbb
ret
jg
jnp
arpl
pop
fadd
adc
pop
cmpsb
jl
leave
or
inc
out
xchg
rorl
and
cmpsb
fistps
stos
sub
mov
add
les
mov
mov
pusha
in
adc
call
outsl
add
cmpsl
mov
pushf
add
xor
out
jecxz
cmp
ljmp
xor
shl
lods
test
popf
add
xchg
add
ja
imul
mov
or
add
cmp
add
loop
add
insl
adc
repz
leave
xlat
adc
shr
andl
add
lahf
adc
sbb
in
add
sub
sbb
jl
add
pop
or
es
popa
or
int3
mov
add
bound
test
ret
cmpsl
mov
fwait
adc
shll
call
scas
aam
or
lahf
adc
add
pop
fisttps
xchg
pop
lods
popf
sub
and
add
inc
mov
mov
xchg
jle
addr16
idivl
inc
xor
adc
xor
pusha
cmovg
fistl
add
enter
add
in
test
sbb
jb
out
push
aaa
mov
mov
lods
out
add
adc
jo
aam
loope
fnstsw
in
pop
adc
xlat
imul
cmp
push
jb
test
jl
xor
movsb
lock
or
adc
mov
adcl
xchg
mov
xchg
jp
add
outsl
lahf
cmpsl
mov
insb
pop
in
ss
or
test
add
movsb
mov
push
repz
mov
in
push
push
rcrl
test
fwait
popf
lock
mov
mov
jmp
and
stos
or
out
mov
and
jle
lock
add
dec
stc
dec
adc
les
sbb
out
lds
xor
xor
ret
pushf
xor
fwait
lods
jne
rcrb
jnp
dec
push
add
xchg
xor
sub
roll
lcall
mov
in
test
notl
rclb
les
and
cmpsb
add
push
test
scas
mov
cwtl
ja
gs
add
sub
dec
andb
add
or
imull
cmp
push
mov
ret
str
mov
cmpsb
repnz
andl
push
je
fsubl
fwait
xor
and
lock
mov
add
lods
push
push
cs
test
sarl
mov
dec
add
scas
inc
movsl
dec
add
cmc
jno
je
pop
jae
mov
in
mov
out
faddl
sub
adc
jp
add
lock
ficomps
add
outsb
jecxz
pop
nop
loop
sbb
loope
lock
mov
add
lea
xor
std
jb
cmp
movsl
subl
xchg
add
and
adc
push
mov
lds
fmuls
pop
mov
shr
adc
test
add
out
push
in
cmpsb
aas
add
bound
push
imulb
fwait
pop
push
add
jo
test
pushf
mov
roll
inc
pop
pop
in
cmp
sub
shr
push
dec
add
out
sti
dec
pop
aam
mov
sbb
shlb
dec
push
cmpb
inc
xor
movsb
vmwrite
add
dec
xor
cld
andl
scas
xchg
test
aas
cmp
scas
sbb
mov
sub
pusha
push
cmp
out
push
mov
pushf
mov
add
lahf
sbb
jne
push
xorb
adc
or
js
into
add
iret
movb
fstps
bound
jle
add
or
ss
pop
dec
sbb
pop
push
xchg
push
mov
insl
mov
clc
or
int3
aam
and
ret
call
adc
fcoms
in
nop
mov
enter
add
fstpl
add
mov
filds
mov
jp
mov
imul
aaa
push
mov
pop
in
dec
add
pop
clc
jno
in
lock
push
or
xchg
xlat
lock
outsb
push
adc
mov
mov
ja
movsl
push
sbb
add
cmp
jb
mov
pusha
mov
cmc
add
addr16
jns
icebp
add
je
sub
cmp
pop
test
lods
add
pop
fwait
dec
lret
cs
pop
and
hlt
lods
cmp
push
jno
mov
nop
add
push
or
testl
mov
add
outsb
jmp
or
mov
in
push
adc
insl
sti
iret
cltd
dec
pop
add
or
lock
js
and
daa
cli
adc
cmp
test
aas
rcrb
add
adc
mov
cs
in
rolb
repz
xchg
dec
add
add
push
lods
out
xchg
jnp
repnz
or
call
push
pop
sbb
daa
enter
or
mov
and
and
sbb
fs
dec
xchg
push
jno
and
lcall
push
roll
decb
out
nop
add
push
mov
dec
add
js
and
push
sbb
mov
mov
and
sahf
repnz
cs
call
rolb
imul
jmp
push
and
mov
or
test
sub
pushf
insb
mov
ss
add
pop
dec
jmp
jbe
je
hlt
fs
xchg
test
mov
mov
push
imul
jmp
orb
add
test
and
sbb
mov
shrl
sbb
and
mov
add
cmpsl
js
mov
daa
cmp
ud0
adc
add
xor
and
into
divb
call
pop
cmp
test
imul
ljmp
xchg
xor
xor
and
jb
add
stos
xor
inc
aad
add
mov
stos
pop
lock
in
sbb
or
or
bound
and
sbb
push
dec
insb
enter
popa
mov
in
add
push
rcll
pop
int3
popf
mov
add
leave
rcr
pop
std
add
lods
rclb
and
pop
loope
adc
mov
bound
lahf
adcl
cmpsl
jb
es
test
nop
adc
loop
jmp
xor
add
movl
lea
mov
cmp
repnz
mov
and
add
add
fdiv
scas
adc
clc
fldl
out
jmp
mov
add
mov
mov
and
jb
stc
inc
in
mov
lods
dec
rcl
aaa
clc
adc
sbb
pop
push
add
adc
ja
int
int3
adc
add
cmp
jb
push
imul
test
je
add
dec
data16
es
sbb
xor
outsb
or
jbe
add
cmp
pop
rolb
cmp
and
ljmp
repz
push
pusha
pop
sbb
pop
ret
lea
aad
sbb
cmp
aam
fiaddl
fcomp
insl
add
dec
bound
push
mov
cmp
enter
jmp
xor
sahf
jg
add
sbb
sbb
out
int
xchg
aam
pushf
sahf
push
mov
jmp
test
call
and
mov
jne
hlt
ret
cmp
lock
inc
clc
cmpsl
sarb
repnz
movsl
in
push
gs
popf
pusha
enter
test
daa
inc
sbb
and
mov
inc
push
lcall
and
filds
lods
jno
cmp
jo
mov
pushf
adc
std
add
or
fidivrs
loop
jg
xor
enter
lret
mov
aam
dec
sbb
pusha
test
mov
aad
out
repnz
aas
pop
dec
adc
lock
jl
jle
adc
into
push
insb
xchg
sbb
bsr
mov
mov
pop
pop
mov
xchg
xor
popf
sbb
push
xchg
or
xchg
pusha
sbb
cmpsb
testl
scas
inc
push
fiaddl
mov
nop
jecxz
xchg
daa
add
xchg
push
out
loope
add
or
loopne
add
mov
js
mov
scas
test
cld
add
pop
push
mov
shll
pop
add
cmpsl
adc
notb
test
inc
add
cld
scas
cltd
inc
cmp
testb
mov
dec
xchg
es
adc
andb
add
inc
push
addr16
mov
add
jle
xchg
arpl
addl
sub
push
bound
adc
shr
add
cwtl
fstl
out
hlt
popa
adc
loope
call
or
adc
fisttpll
add
cmp
sub
adc
jae
add
sub
leave
add
sbb
sub
push
mov
add
outsl
mov
mov
ljmp
call
cli
mov
rcr
hlt
cmp
ja
add
nop
iret
xor
loop
out
cmp
add
adc
mov
jae
idivl
pop
push
scas
addb
cmp
jb
mov
mov
inc
add
lods
push
in
mov
lods
sarb
jns
dec
cwtl
nop
jl
inc
inc
dec
aam
stos
xchg
or
pop
push
sub
push
fstps
dec
out
sbb
in
jbe
repnz
add
add
subl
popf
jno
andb
pop
pop
add
xchg
dec
push
mov
pushf
movnti
lahf
lock
scas
mov
mov
or
out
and
sub
popf
push
push
lret
jg
add
test
int3
add
mov
xor
fs
add
add
ljmp
scas
push
pop
xchg
xor
stc
movsb
pop
shl
xchg
mov
mov
mov
and
mov
je
add
icebp
ja
push
push
or
mov
pop
inc
sarl
lods
rcll
add
mov
mov
and
mov
addb
mov
data16
and
ds
jge
fidivrl
or
flds
out
and
add
rcrl
movsl
mov
sub
mov
mov
insb
cmp
pop
addr16
mov
lds
mov
scas
jg
ror
add
cmpsb
jb
js
pusha
xlat
incb
add
and
stos
pop
sbb
push
xor
mov
add
cmp
mov
cmp
add
pop
jg
flds
inc
adc
cmp
loopne
push
adc
ja
add
xlat
jmp
pop
repnz
stos
jecxz
jbe
adc
out
add
sbb
mov
daa
mov
hlt
mov
cltd
add
arpl
cld
test
pop
clc
sbb
jp
out
mov
cmp
push
cmpsl
dec
add
in
loop
mov
push
ja
jbe
sbbb
and
push
sub
jg
push
shrl
add
iret
ret
icebp
add
cmpsb
xchg
push
jecxz
aas
add
fs
dec
inc
dec
dec
or
mov
sub
aad
fisttpll
mov
faddl
xor
lahf
cli
cmp
dec
movsl
nop
adc
mov
rcrb
popf
imul
xorb
ja
add
cmp
fildl
pop
not
sub
jae
adc
das
fdivrl
jno
and
pop
add
push
inc
jecxz
jle
pop
pusha
ret
xchg
cmpsb
call
dec
mov
rorb
hlt
pop
mov
push
adc
enter
add
xor
sbb
jb
add
mov
jg
test
into
push
outsl
xor
jnp
dec
xor
inc
sbb
jmp
cmp
push
mov
add
imulb
repnz
call
daa
cmc
stc
mov
jnp
nop
mov
sbb
add
test
iret
shlb
add
inc
or
mov
add
out
movsl
xor
jo
add
imul
adc
and
jo
cmp
cld
or
inc
test
add
and
loop
push
pop
in
loopne,pn
fwait
pextrw
add
mov
or
popf
add
pop
xchg
adc
and
fs
and
ret
mov
xchg
mov
xchg
jo
popa
add
xor
addb
inc
pop
xchg
int3
imul
lcall
xchg
add
shrb
dec
add
pop
mov
lret
mov
in
fwait
xor
add
adc
mov
push
mov
and
pop
and
movsl
adcb
add
shrb
push
pop
mov
loopne
pusha
out
add
arpl
pop
inc
mov
in
rcr
add
shlb
xchg
add
mov
adc
repnz
ficomps
daa
mov
xor
gs
xor
inc
jns
cmp
push
popa
pop
mull
or
or
add
loopne
imul
test
cmp
add
out
int3
jnp
jp
xor
mov
inc
sbb
push
add
push
adcl
xor
sbb
xchg
push
sbb
adc
mov
out
in
add
cmc
cmp
sbb
sub
mov
adc
movsl
add
or
lods
add
mov
test
jnp
mov
in
test
test
test
mov
ret
and
cmp
into
inc
cmp
pop
scas
add
mov
xor
add
int3
and
mov
xor
add
mov
loop
xchg
lods
or
dec
fadd
adc
adc
add
adc
imul
add
sub
add
outsb
xor
xchg
aam
jg
cwtl
push
addr16
or
add
adc
dec
pop
push
mov
jb
stos
popa
add
es
jo
movl
lcall
mov
nop
add
adc
inc
jecxz
add
lahf
add
jno
mov
push
jb
sbb
sbb
jl
or
hlt
and
pop
notb
push
pop
outsl
bound
fnstsw
cmc
add
nop
pusha
scas
test
je
adc
ss
xlat
lret
cmp
or
jecxz
add
pusha
adc
shrb
add
add
adc
lret
add
add
adc
add
mov
jae
pushf
jo
loope
add
mov
int3
xchg
in
movsl
jg
sbbb
jmp
jno
idivl
aam
cmp
push
cmpsb
fmulp
lock
out
sub
shrl
cmp
mov
jne
push
pushl
int
push
loopne
mov
popf
pop
std
fisttpl
lock
and
lock
or
mov
fisubrs
and
xchg
add
inc
inc
push
pop
inc
pop
std
add
mov
outsl
popa
pop
dec
push
adc
hlt
inc
imul
push
pop
mov
sarb
dec
out
jbe
test
xor
pushf
sbb
cwtl
add
push
mov
test
clc
jp
or
loope
fisubrs
cmp
int
xchg
andb
add
call
in
xor
add
pusha
movsb
incl
xor
xlat
test
sub
adc
stc
sbb
mov
sbb
add
and
call
inc
outsb
mov
cmp
add
out
decl
dec
pop
add
add
cmp
fwait
int3
and
sbb
dec
jne
faddl
and
movl
xchg
sti
pusha
out
fildl
pop
xor
aam
inc
cmp
incl
dec
test
or
stos
add
or
cltd
xchg
or
lock
pop
ljmp
push
addr16
add
out
sbb
jo
add
mov
lea
ds
out
add
mov
push
add
jmp
pop
nop
mov
xchg
inc
adc
in
outsb
pop
jae
test
pushf
xor
test
aas
orl
popa
add
mov
lret
pushw
xor
jns
and
pop
inc
pop
fdivrp
lcall
jmp
push
mov
xor
enter
int3
adcl
pop
push
add
jb
fstpt
addr16
mov
insl
pop
jns
xchg
lret
push
push
aam
and
mov
bound
add
sub
cli
loopne
or
call
xchg
push
insl
add
push
sbb
lods
lret
or
mov
add
mov
std
or
fadds
cld
call
ret
mov
mulb
cmpl
jmp
shrb
sub
fs
cmp
in
loopne
ret
sbb
add
pop
lahf
cmc
testl
adc
out
add
ret
call
mov
sahf
dec
cmp
jae
mov
into
adc
js
add
mov
lods
mov
data16
adc
cwtl
xchg
loope
nop
push
or
mov
bsf
cmp
mov
test
push
cmp
pop
sub
add
dec
sbb
sti
inc
fcompl
push
push
dec
mov
sub
in
add
cmpsb
inc
mov
mov
push
lods
cwtl
inc
ud0
cs
std
pusha
add
lock
adc
xchg
pop
test
add
mov
sub
pop
fldl
das
jmp
ss
lret
cwtl
lret
add
hlt
ja
in
jle
pop
addl
data16
sbb
mov
add
jp
jle
cmc
lock
mov
test
add
ret
mov
call
mov
lds
lret
lea
in
lock
mov
jg
fs
jmp
sub
rcrl
lock
imul
shll
clc
add
ds
sbb
les
loope
or
lods
or
daa
adc
lds
insb
pushf
aaa
inc
and
mov
stos
test
push
mov
jmp
xchg
sahf
add
sbb
into
les
add
mov
jle
pop
sbb
add
mov
sub
iret
jmp
lock
sub
pop
call
adc
fs
cltd
dec
pop
enter
push
daa
sbb
int3
hlt
inc
add
sbb
dec
adc
imul
xor
xor
cmpsl
mov
pop
je
pop
pop
add
mov
push
sub
hlt
add
shll
dec
repz
mov
push
pusha
gs
add
mov
push
adc
arpl
mov
mov
push
push
movl
cmp
add
add
scas
lahf
loop
in
cmp
sub
xor
and
adcb
mov
in
xchg
push
xchg
xor
sbb
sarl
lods
push
fwait
inc
xchg
add
cmpsb
inc
nop
add
aaa
xor
cld
add
mov
add
cmp
inc
xchg
dec
outsb
repnz
out
in
roll
push
inc
gs
aas
dec
mov
push
out
add
dec
js
outsb
fstpl
cmp
adc
or
cmp
mov
daa
inc
xchg
xchg
inc
fsub
mov
cmp
mov
add
fistpl
mov
mov
xlat
dec
or
ds
movups
or
filds
test
ja
add
movsl
test
int
xor
add
shl
add
int3
ret
jle
cli
and
dec
pop
add
cs
pop
sub
in
add
adc
lock
fildl
push
add
adc
jae
pop
xchg
add
out
sbb
inc
push
add
out
pusha
mov
int3
pop
aam
bound
xor
vpmaxub
pop
mov
rclb
pop
adc
add
cmpb
push
dec
sbb
or
in
add
pop
fisttpll
inc
sbb
loop
addb
test
call
dec
mov
push
xchg
xchg
shrb
sub
push
pusha
xchg
fwait
add
fdivl
mov
loopne
movaps
jns
add
jmp
sub
js
add
adc
pop
dec
js
xchg
cmp
add
pop
sub
pop
fwait
div
jne
mov
movnti
mov
add
nop
mov
jge
sub
in
xchg
mov
call
out
mov
inc
rclb
cmp
sar
imul
cltd
iret
rcrb
inc
jmp
or
cs
fwait
inc
jo
jl
fiadds
cltd
lods
mov
out
add
dec
adc
jns
sbb
lahf
add
sub
mov
es
jg
js
sbb
jmp
cmp
jno
and
cmp
push
add
pop
add
call
pop
cmc
insb
mov
or
jne
hlt
add
push
jle
lret
mov
imul
add
imulb
andl
pushl
xor
mov
push
add
add
sub
xor
push
sbb
pop
testb
ret
adc
add
loopne
fsubrl
inc
mov
or
cmp
shlb
dec
push
mov
ljmp
jnp
cwtl
or
add
push
push
stos
adc
arpl
aaa
xchg
iret
in
test
scas
lock
scas
hlt
xor
xchg
mov
mov
xchg
ror
lock
jns
ds
leave
cwtl
xor
xchg
sub
cmovge
clc
push
mov
out
lea
inc
xchg
or
pop
cmp
adc
pop
hlt
fildl
push
push
enter
shlb
sbb
sbb
and
out
or
je
mov
popa
ret
mov
imul
pop
add
xor
mov
dec
aas
add
das
loope
in
lret
lock
add
pop
daa
xchg
rorl
add
movsl
pusha
cld
mov
cmp
push
fildll
call
inc
fstps
add
jmp
mov
adc
jb
les
adc
mov
jmp
or
out
xchg
add
es
xor
add
pop
shrl
push
out
add
push
xor
dec
push
cmpl
rcr
or
hlt
and
movsl
ud0
into
mov
popa
dec
pop
int
add
test
pop
test
inc
mov
test
repnz
dec
jns
scas
fnstenv
adc
test
add
sub
xor
add
loop
add
lret
push
enter
aam
into
xchg
add
stos
xlat
cmp
jo
les
dec
pop
lcall
fiaddl
pop
test
sub
push
cmp
mov
add
inc
xchg
push
sub
bnd
xor
add
lds
popa
xor
lret
jne
mov
dec
add
lods
int
fcomi
popa
push
aas
xor
sbb
sbb
aas
fwait
pushf
add
push
jp
jbe
test
add
jno
xchg
loope
test
rorb
cmpsb
lahf
mov
pusha
mov
add
mov
lds
and
add
xchg
test
add
mov
jle
jnp
sbb
adc
push
push
mov
adc
stc
mov
adc
in
cmpsb
mov
push
adc
pushw
adc
fnstenv
unpcklps
es
outsl
add
ds
in
cli
mov
sti
inc
xchg
inc
movsb
push
add
test
jmp
mov
inc
dec
push
shll
add
lock
fcmovbe
imul
les
loop
cmp
xor
aam
adc
pop
ss
sbb
xor
push
add
nop
inc
loop
pop
mov
pop
sub
mov
rolb
mov
add
mov
les
jl
pop
shlb
aad
xchg
in
lds
jb
fucom
cwtl
inc
add
jl
inc
lds
sarb
xor
jle
shll
push
pop
imul
mov
nop
sub
jb
xchg
push
xlat
cmpsb
js
pop
pop
flds
rol
jmp
mov
push
enter
inc
jp
xor
push
imul
insb
sub
lret
orl
sub
add
mov
lods
push
test
cmpsb
call
out
mov
and
sbb
mov
sti
pop
rorl
jae
mov
adc
add
mov
and
imul
mov
roll
movsb
addr16
add
mov
push
sbb
jl
movb
push
cli
and
shlb
in
pop
add
or
mov
inc
mov
xor
fldl
xchg
in
mov
pop
lahf
in
sub
jl
imul
pop
jb
cmp
add
mov
xor
pop
xchg
sbb
push
stc
pop
scas
addr16
xchg
ljmp
sbb
mov
pusha
lret
adc
ret
xor
cmp
mov
into
in
sub
add
scas
rcrl
xchg
aas
push
add
mov
sub
xchg
sbb
scas
xlat
add
mov
lods
add
or
and
lea
xchg
stos
lock
in
add
pop
fwait
adc
mov
mov
inc
nop
jg
fistps
add
es
mov
pop
scas
loopne
xor
cmp
stos
mov
fisttps
add
scas
push
sbb
push
sbb
push
adc
clc
adc
dec
hlt
lahf
outsb
and
xor
mov
mov
inc
push
or
adc
mov
call
leave
int3
cmp
pop
mov
imul
call
nop
les
push
push
pop
js
or
mov
add
sbb
cltd
icebp
fsubrs
pop
and
rorb
xor
mov
push
mov
jo
push
clc
loope
and
sub
xor
pop
aaa
add
icebp
lods
mov
adc
jne
xlat
adc
sbb
dec
mov
subb
cld
push
add
into
shrl
pop
fwait
popa
leave
jno
add
cmp
mov
add
jmp
movl
adcl
iret
cli
and
lcall
mov
add
cmp
and
fs
add
cltd
add
insb
aas
sbb
inc
push
add
xchg
add
xchg
faddl
cmp
mov
lods
out
add
ljmp
rcr
mov
clc
mov
hlt
adc
adc
jl
and
leave
andps
ds
aas
add
mov
add
mov
flds
pop
imul
push
add
mov
cmc
je
addl
test
push
mov
ljmp
cs
lods
jl
sbb
add
lahf
popf
sub
add
mov
adc
daa
shlb
push
push
arpl
push
cld
cmp
pop
les
push
fs
test
mov
pusha
ret
adc
fists
sub
pop
jge
sub
hlt
outsb
adc
negb
das
add
cmp
pop
je
bswap
xor
inc
inc
repz
push
push
cmp
fsqrt
add
cmpsb
lods
push
call
inc
lret
jmp
pop
add
add
cwtl
inc
or
mov
mov
xor
shrb
xor
adc
xchg
popa
cwtl
sub
lret
inc
inc
rcrb
adc
std
pop
lret
mov
inc
mov
call
xor
incl
ret
jno
fnstcw
xor
jno
and
add
and
in
int
add
repz
and
jo
sbb
sub
mov
sub
xlat
cwtl
sub
les
or
loopne
mov
xor
std
and
lahf
xchg
adc
add
lds
int3
cmp
add
or
dec
pop
mov
sub
fldlg2
cmp
jg
fdivs
inc
ss
lret
pushf
and
adc
lcall
cwtl
stos
add
adc
pop
ret
fiaddl
imul
mov
icebp
int3
or
dec
cld
xor
add
fdiv
ljmp
mov
mov
add
aam
sub
sbbb
das
int3
cmp
pop
dec
sbb
cmp
mov
and
push
mov
loopne
cld
popa
or
shll
sub
das
pop
inc
dec
ret
jle
inc
mov
dec
inc
lds
or
stc
xor
inc
add
ss
add
rorb
inc
fistpl
pushf
inc
clc
test
adc
and
jnp
inc
stos
push
sub
inc
inc
cmpsb
stos
mov
rorb
addb
insb
or
and
push
xor
xlat
xchg
lret
add
mov
jle
cmp
cld
or
loopne
shr
sbb
push
dec
mov
add
mov
jmp
es
or
mov
cmp
mov
mov
mov
pusha
pusha
cmc
loopne
or
jge
lsl
dec
xchg
movzwl
add
sub
int
add
scas
movl
sbb
cwtl
cmp
sbb
ljmp
push
rcrl
fmull
and
add
out
mov
dec
mov
setae
pop
xchg
add
xlat
cmpsb
mov
in
dec
test
addr16
ja
and
add
shlb
add
mov
cmp
repnz
pop
inc
les
jb
loopne
pop
shrl
push
adc
test
ss
rolb
in
and
push
sbb
sar
cmpsb
pushf
add
imul
outsl
sub
inc
sbb
xor
cli
xchg
and
and
adc
add
inc
mov
clc
rcrb
adc
adc
add
mov
lods
popa
adc
sbb
daa
dec
loopne
push
fistpl
sub
icebp
sub
xchg
or
mov
cmp
mov
and
fucomi
mov
xor
or
xor
mov
lcall
popa
test
xor
in
xor
faddl
ret
push
dec
das
jle
sub
enter
stos
cltd
imul
sub
pop
inc
inc
icebp
cmc
adc
xorb
mov
add
mov
cmpsb
pop
xor
and
mov
test
pop
xor
adc
daa
xchg
pop
pop
and
inc
push
dec
mov
pop
cmp
fdivrs
add
sub
mov
xor
add
adc
push
push
xor
mov
inc
inc
insb
int3
push
jge
pop
iret
push
add
bound
push
shlb
add
xor
insb
xor
pop
clc
push
inc
cld
add
xor
and
test
push
enter
add
mov
loope
fwait
aam
divb
imul
loop
cmc
push
int3
push
sub
sbb
repnz
aam
jb
add
movsb
adc
scas
pop
cmc
dec
adc
and
mov
leave
call
xor
mov
add
out
mov
add
inc
pop
in
inc
call
jmp
inc
pushf
scas
and
xchg
enter
shll
or
xorb
lods
jecxz,pt
mov
int3
stos
jmp
cmpsb
xchg
mov
adcb
mov
cmp
out
aad
mov
lock
call
and
loope
dec
int
pusha
enter
jae
adc
mov
mov
fisttpll
pop
movntq
mov
push
es
inc
sub
dec
add
ja
inc
stc
popa
jo
cmp
dec
adc
das
add
pop
cmc
push
scas
add
add
inc
fcompl
adc
or
jo
iret
push
ret
pop
es
movsb
gs
in
xorb
fldt
mov
pop
or
dec
mov
rcrl
and
mov
into
lods
dec
fsubl
repz
pop
push
jne
stos
mov
subl
sub
xor
mov
adc
mov
cmpsl
sbbb
hlt
mov
pop
loope
pop
and
jge
in
cmp
adc
inc
jno
xchg
add
test
gs
pop
cmpsb
lods
xchg
pop
cld
cmp
push
js
pop
test
fs
shrb
jp
cs
pop
outsb
clc
inc
jb
test
push
inc
mov
sbb
mov
inc
xor
mov
push
sub
btr
lcall
adc
bound
adc
pusha
pop
mov
stc
cmp
leave
add
stos
lock
jmp
push
cwtl
push
sbbb
fld
adc
mov
js
rol
stc
jo
pop
nop
pop
inc
das
stos
add
jp
rcrb
icebp
sub
leave
sbb
jbe
add
cmp
lahf
loopne
pop
push
mov
orl
fnstsw
inc
jae
jmp
or
clc
add
mov
fst
jo
outsl
mov
adc
fucom
dec
add
jno
mov
es
pusha
test
hlt
movsb
or
adcb
outsb
daa
imul
mov
js
je
fcomps
nop
fcomip
jge
mov
test
inc
int
lret
pop
push
sbb
push
push
add
cmpsl
mov
or
js
push
in
bts
call
in
cld
les
jno
call
adc
sub
cmp
xchg
int3
fdivs
add
fildl
fsubl
inc
ret
cmp
mov
and
push
shll
push
iret
add
shrl
hlt
inc
data16
nop
lds
addr16
mov
push
xor
daa
dec
mov
and
xor
adc
ret
rclb
add
gs
cmp
sti
sub
dec
je
fwait
cwtl
cwtl
xchg
filds
mov
pop
xlat
inc
jg
subl
cwtl
sarl
sub
push
faddl
shlb
push
in
vmovaps
xchg
xchg
insb
adc
shlb
jae
or
in
or
sub
cmpsb
rolb
dec
mov
imul
add
out
xchg
push
jne
jno
jl
mov
not
pop
add
mov
pop
and
sbb
mov
or
add
or
into
test
lret
add
mov
insl
mov
jl
rorb
xor
loopne
push
sub
lods
pop
pop
outsl
add
sarb
loopne
ja
fimuls
push
sub
out
push
data16
xchg
popf
negb
jno
ljmp
fs
add
addr16
adc
add
xlat
ja
popa
inc
loop
add
outsl
sbb
jbe
pop
mov
sub
data16
std
out
jb
mov
adc
cmp
cmp
or
notb
inc
cmpsb
add
dec
stos
dec
std
data16
mov
wrmsr
dec
notb
insb
add
aam
in
mov
inc
mov
xchg
jl
jae
add
movsb
xor
sbb
stos
nop
mov
mov
dec
out
sbb
int
cltd
sbb
jl
test
push
shl
add
jge
add
rorl
add
int3
lcall
ret
add
iret
movsb
lods
pusha
cmp
push
push
arpl
sub
mov
mov
xor
pop
scas
mov
lret
rolb
dec
jo
or
in
xchg
mov
xchg
mov
je
add
mov
in
cwtl
mov
xchg
es
stos
test
inc
mov
adcb
dec
xchg
sbb
mov
push
frstor
daa
scas
xchg
repz
adc
jp
lods
sbb
add
lahf
imul
sbb
mov
push
inc
pop
sbb
add
push
sti
pop
sub
js
paddusw
out
push
dec
xor
lea
and
mov
jl
sbb
mov
add
out
test
jno
sbb
fisttpl
mov
xchg
and
adc
cld
fs
add
addl
fdivp
or
cmpb
jecxz
outsl
test
jne
sub
clc
or
pop
sbb
js
dec
sub
add
lea
xor
shufps
or
push
cmp
ja
leave
imulb
adc
adc
mov
inc
dec
xchg
adc
push
or
les
sub
fmuls
leave
add
jle
pop
test
in
or
inc
fmul
fadds
bound
scas
mov
cmpsl
push
jmp
aam
mov
add
cmp
and
add
pop
iret
nop
inc
dec
dec
icebp
fiaddl
in
into
es
xor
or
dec
add
xchg
pusha
and
inc
sub
movsb
pusha
call
pcmpgtd
popa
jo
and
inc
in
std
sbb
cwtl
clc
call
lods
test
and
roll
xchg
mov
popa
cli
adc
dec
xor
xor
hlt
aam
pop
aas
pop
push
mov
pop
dec
dec
mov
mov
mov
and
cmp
ss
adc
pop
sbb
xchg
jmp
shl
sub
mov
notb
lret
das
sub
nop
sbbb
fistl
lcall
movsb
adcb
cli
fadds
push
lret
cmpb
pop
dec
loope
jns
hlt
and
push
les
add
ljmp
jo
stos
sbb
push
movsb
jl
cmpsb
jg
insl
xor
aas
lock
cmpsb
inc
pusha
inc
lds
in
mov
inc
push
scas
mov
fadd
xor
mov
add
pop
cmpsb
push
pop
jb
push
push
out
sub
sub
xor
js
xor
cmp
dec
into
push
mov
add
mov
xlat
cmpsl
les
pop
jbe
add
lahf
rorl
addr16
xor
arpl
lods
add
sahf
push
dec
aam
daa
addr16
orl
xchg
or
les
rcrb
arpl
push
dec
inc
adc
roll
pop
stos
popa
fs
and
ds
add
mov
xchg
andl
pop
jns
push
jnp
dec
add
shl
ja
ljmp
cmp
in
adc
mov
fbld
mov
xchg
aam
lcall
lods
test
push
mov
xlat
cmp
fldl
fbstp
jp
xchg
xchg
sbb
xor
mov
rcr
aaa
dec
and
and
lock
es
cld
cmp
scas
mov
mov
push
add
add
cld
imul
xor
sub
imul
mov
ror
sbb
mov
inc
daa
clc
aam
lcall
mov
in
sbbl
roll
and
xorl
les
fdivl
fmull
cld
cmpsb
dec
cwtl
inc
push
push
out
adc
int3
dec
cltd
andb
clc
cmp
mov
add
ror
xchg
pop
sbb
sbb
imul
lcall
pop
push
mov
inc
fwait
les
movsl
cmpsl
add
push
fs
rolb
add
push
fiadds
sbb
ja
sahf
movsb
adcl
loopne
clc
cmp
mov
and
andb
lods
mov
pop
mov
test
dec
adc
and
xor
sbb
and
inc
insl
add
loop
adc
sub
jns
add
sub
aas
lea
adc
in
add
inc
mov
jbe
push
cmpsl
or
mov
fildl
jno
jae
adc
gs
fsubs
xor
add
inc
dec
dec
out
dec
pop
cwtl
xor
setnp
xchg
leave
iret
pop
rorb
and
cmp
les
cltd
in
dec
es
adcb
lds
sbb
xlat
or
xor
pop
inc
inc
mulb
jge
xchg
ret
fwait
addb
jne
xor
push
sub
xor
dec
pushf
add
in
cmp
adc
xor
addr16
loopne,pn
fldl
inc
jg
xor
xlat
sbb
jle
outsb
loopne
stc
out
or
cmp
pop
pushf
add
xchg
xchg
pop
xchg
mov
out
imulb
xor
inc
lds
and
cmpsl
mov
dec
add
jo
imul
aaa
jge
xor
push
push
sbb
out
add
pushf
fcmovnu
jnp
aas
cmp
es
adc
fsub
mov
pop
dec
lods
xor
mov
gs
and
inc
bound
dec
and
sbb
les
jmp
jl
cmp
loope
es
lahf
lods
push
loop
sbb
rolb
fadds
repz
jmp
dec
stos
popf
jb
fwait
iret
xor
push
mov
ja
add
test
ljmp
cmp
lds
movsb
or
test
mov
sti
outsb
xorl
das
xchg
stc
test
inc
movsb
insb
jae
add
dec
jo
insl
adc
mov
mov
xchg
sbb
cld
dec
pusha
pusha
dec
movsb
rclb
add
mov
test
jmp
adc
notb
add
inc
inc
dec
scas
xor
mov
pop
push
adc
mov
push
lahf
adc
lds
mov
jbe
inc
xchg
aad
fistpll
out
nop
sub
push
cwtl
inc
and
xchg
faddl
roll
add
rcrl
mov
mov
repnz
dec
test
lock
ss
or
push
mov
popa
pusha
add
add
add
pop
in
lds
pop
mov
pop
add
add
adc
mov
add
inc
fdivrs
inc
fisubrl
adc
jb
pop
call
pop
cmc
mov
sti
push
inc
jne
xor
out
enter
adc
and
pop
lahf
and
xor
gs
pop
movl
mov
icebp
test
iret
xlat
pop
pop
mov
xchg
mov
jbe
inc
cmp
movsl
inc
ljmp
cmpsb
mov
dec
xor
add
sub
mov
mov
iret
inc
or
or
pop
js
cld
out
xor
movsl
sbb
stos
lea
sub
add
and
leave
cmp
sub
pop
inc
je
lds
enter
js
cmp
xor
or
sbb
lret
mov
movl
jbe
aam
rorl
out
mov
sti
xor
in
dec
les
cwtl
push
jns
jg
imul
xchg
adc
dec
mov
inc
cmpb
pop
mov
jl
je
sub
or
jne
and
pop
and
enter
inc
insb
or
cmpsl
loopne
adc
xchg
inc
dec
adc
test
mov
or
mov
addl
js
mov
scas
dec
scas
call
mov
mov
pop
orb
dec
mov
fmul
dec
xorb
sarl
adc
jne
mov
add
jle
add
push
push
sbb
push
jmp
dec
out
xchg
sub
dec
inc
cmc
add
dec
xor
rcr
call
es
rol
cmp
imul
inc
adc
shll
fucomip
sub
jns
enter
sahf
cmp
pushf
iret
cwtl
and
push
sub
add
js
xor
cmpsb
add
pop
push
sbb
in
mov
in
cld
sbbb
cmp
jno
push
mov
jne
sbb
movsb
push
adcb
push
mov
add
adc
fisttpl
nop
jge
xchg
or
in
mov
sbb
xor
mov
cmp
mov
pop
jbe
fwait
shll
out
aam
pushf
pop
sub
addr16
sbb
pusha
add
fdivl
cwtl
test
push
adc
test
repz
out
test
jo
adc
add
jne
and
push
dec
mov
lcall
nop
inc
inc
rclb
repnz
into
xchg
lret
lds
inc
clc
jmp
add
fwait
ss
pop
nop
lock
xor
sar
mov
add
or
lret
add
mov
bound
data16
fisttps
repnz
lods
and
adc
jno
mov
jo
popa
add
dec
das
jge
aam
inc
mov
cmp
lret
and
mov
xorb
nop
mov
in
xchg
and
pop
xchg
jno
and
js
pop
add
lods
int
mov
movsl
sbb
fwait
js
call
push
int3
aad
adcb
xchg
pop
xor
mov
mov
pop
mov
inc
dec
dec
cwtl
and
inc
dec
cmpsb
mov
inc
sahf
mov
adc
or
pop
push
sub
pop
and
add
jecxz
adc
sbbl
ljmp
test
int3
push
movsb
cmp
scas
push
addb
and
and
ret
xchg
fwait
push
jl
add
pushl
mov
add
mov
or
int
insl
pusha
ret
divb
es
mov
mov
imul
add
dec
xor
xor
gs
xlat
cltd
ret
js
xchg
enter
js
cmp
je
cmp
insl
xorl
jle
jns
inc
pusha
sub
and
or
pop
sbb
inc
mov
cmp
insl
add
sub
mov
repz
xchg
mov
add
dec
add
ljmp
fadds
and
inc
add
xor
stos
call
add
loop
es
cwtl
inc
mov
inc
or
stc
xchg
push
lods
pusha
shrb
sbb
mov
inc
iret
jge
dec
fnsave
movsb
shll
pop
cmpsb
lea
adc
dec
icebp
add
faddp
add
lods
data16
add
push
aaa
shrb
cmp
pushf
xchg
dec
push
sbb
mull
test
and
xor
sbb
add
or
enter
jp
adc
cmc
xor
push
push
pop
insl
mov
jl,pt
rcrl
rclb
push
es
movsb
jl
rol
rclb
clc
fldenv
loopne
sahf
cmpsb
mov
sub
xchg
add
adc
test
cmp
pop
nop
rcrb
xlat
adc
cwtl
andl
mov
adc
aas
push
inc
clc
xchg
mov
push
leave
icebp
daa
adc
push
pop
insb
ja
pop
or
xlat
add
icebp
scas
cmp
or
jbe
push
pop
xchg
das
jle
sub
in
dec
and
ret
xlat
lret
lea
pushf
mulb
fcomp
xor
xchg
nop
add
cmpsl
mov
or
pop
xor
inc
push
ss
add
cs
nop
mov
add
lahf
dec
movsl
xor
sbb
xor
adc
mov
loopne
int3
or
into
xor
leave
mov
pop
or
stos
pop
xor
push
lcall
add
mov
dec
jno
mov
mov
enter
add
and
mov
mov
pop
xor
mov
call
dec
ror
adc
cwtl
add
sub
pop
data16
or
je
ds
add
daa
lds
pop
mov
push
rcr
pop
mov
or
jg
sbb
aad
mov
inc
lods
imul
outsb
xor
cmp
xchg
cmp
scas
pop
nop
and
xor
lahf
stos
add
mov
dec
test
mov
fmul
sbb
movsb
xor
rcrl
das
mov
xor
or
jno
adc
lock
add
dec
mov
add
xchg
cwtl
aam
mov
xor
inc
add
js
sbb
add
mov
xor
push
mov
dec
movsb
dec
mov
jbe
lods
je
das
insl
repz
orb
fwait
lret
inc
sbb
push
rorl
fdivs
sub
mov
and
rclb
xor
pop
pop
mov
mov
outsb
cmp
fnsave
lahf
clc
imul
out
inc
inc
je
icebp
push
int
ret
cld
test
pop
seto
adc
add
add
enter
add
pop
jnp
roll
xor
cmp
cmp
mov
mov
mov
add
lret
loope
push
push
cmp
mov
mov
fwait
push
adc
adc
add
jecxz
test
and
icebp
add
or
inc
sbb
pusha
add
add
xchg
inc
pop
in
sbb
ljmp
insb
xor
jl
xor
add
adc
add
je
scas
add
add
int3
dec
and
rolb
movsl
jp
push
add
adc
push
sbb
add
and
dec
mov
push
iret
lahf
jb
cld
into
xor
xor
sti
add
xchg
or
sub
add
pushf
loop
movsb
shlb
xor
fwait
lcall
dec
or
jnp
pop
xor
cld
cmp
push
mov
xchg
shlb
add
xchg
push
push
add
fcomi
jg
add
pushf
imul
cmp
cld
sbbb
leave
xor
movsl
mov
pop
dec
mov
sub
or
and
orl
pop
xchg
xchg
popf
and
test
in
adc
addr16
add
roll
mov
push
insb
or
ret
enter
add
and
lret
or
sbb
cmp
xchg
ds
mov
in
add
jns
arpl
lea
mov
test
call
add
inc
lods
sub
ds
adc
xor
dec
cltd
test
xor
push
mov
mov
inc
icebp
mov
cmpsl
mov
or
lret
xor
adc
mov
int3
cltd
add
jno
add
iret
ret
movsl
cwtl
mov
cmp
push
pop
into
push
push
cmp
addr16
sar
cmp
data16
inc
or
xchg
hlt
dec
mov
add
lods
cmp
imul
jg
jl
inc
adcb
inc
cmp
out
or
roll
daa
sub
push
loopne
add
xchg
or
add
lcall
cli
rolb
hlt
test
jl
call
imul
push
inc
pop
mov
rolb
lods
pop
adc
xchg
je
mov
into
add
cmc
mov
dec
mov
push
stos
and
cmp
cmp
sub
xor
loopne
int3
push
insb
add
add
sbb
mov
outsb
iret
in
shl
das
imul
xchg
or
out
pop
adc
xlat
inc
lods
rcrb
loopne
pop
and
test
xor
hlt
push
and
ljmp
sub
bound
aad
inc
js
xchg
inc
out
sar
add
adc
hlt
lret
push
xor
mov
fwait
cmp
sbb
sub
lahf
xchg
sub
nop
std
jne
add
frstor
lock
fadd
add
dec
sbb
mov
xchg
and
fadd
add
push
shrb
loop
add
hlt
lret
sub
cmp
dec
mov
mov
lret
pusha
add
imul
cs
xchg
dec
insb
inc
fnstsw
test
fsub
int3
mov
test
mov
sbb
call
and
std
dec
mov
xorb
subb
pop
inc
jno
ss
inc
mov
dec
xchg
jecxz
aam
rorb
add
cmp
push
test
xor
jns
or
mov
mov
xor
adc
add
cmp
mov
sbb
xor
shll
push
xlat
dec
add
xor
adc
pop
dec
jl
cmp
mov
mov
jb
pushf
fdivr
loop
unpcklps
pop
and
mov
push
and
inc
add
mov
loope
xor
aam
push
pusha
cmp
add
in
rorb
shl
and
movsb
hlt
cmp
add
clc
lret
add
and
pop
mov
sbb
enter
jns
mov
jg
ds
xchg
into
jl
pusha
xor
int3
fidivrs
push
lds
scas
sar
pop
lret
icebp
into
sub
add
leave
mov
loop
pop
sub
shlb
mov
inc
and
cld
add
scas
push
mov
call
stc
fsubr
dec
and
das
jg
es
fwait
mov
xor
pop
pop
add
es
dec
push
int
clc
mov
in
xor
loope
sub
mov
inc
daa
xchg
and
jbe
in
add
ja
pop
je
push
test
rorb
mov
test
or
xchg
xor
adc
inc
or
cmp
add
mov
xorb
pop
push
pushf
test
or
jns
xor
lods
filds
test
mov
mov
je
push
mov
xchg
or
aam
int3
mov
popf
xchg
repz
psubb
andb
dec
sub
push
in
sbb
das
decb
jmp
lret
jno
inc
push
rolb
std
pop
outsl
and
insb
pusha
cs
dec
lods
sub
lods
das
and
stos
adc
loopne
sub
pop
push
int
pop
mov
es
mov
pop
movsl
cmp
inc
or
pop
mov
lret
sbb
pop
pop
bound
test
cmp
sarl
fwait
imul
add
mov
mov
enter
subl
in
dec
push
in
or
push
aas
jle
add
popa
in
mov
jae
add
add
rcll
dec
xor
or
pop
adc
mov
rcrb
mov
xchg
xor
push
fdivl
les
stos
add
sub
xorl
or
js
mov
movl
ds
enter
jmp
inc
add
cs
mov
add
fsub
fwait
cltd
pop
and
in
lock
push
fistpl
test
movsl
mov
movsb
ja
test
insb
test
dec
and
jne
and
addb
shr
jmp
push
inc
sbb
inc
cmpsl
dec
movsb
push
pop
hlt
add
lds
xor
enter
adc
not
xor
add
xor
mov
dec
add
invd
mov
xor
inc
xchg
inc
pop
mov
mov
aas
or
mov
dec
add
pop
cmp
dec
scas
jecxz
dec
mov
orb
lea
cmp
popf
pusha
add
out
cmp
adc
pop
fidivl
pusha
sbb
pop
sahf
pop
xchg
rorb
mov
xacquire
add
popa
das
rol
mov
cmp
add
pop
les
fmuls
mov
add
stos
xchg
xor
adc
fstl
mov
push
jecxz
cmpsb
sub
dec
pushf
sub
add
jb
pop
sbb
aam
rcrb
adc
xor
shlb
sbb
nop
stc
test
xor
push
mov
lock
fs
pop
lods
mov
divb
cmp
adc
shl
add
adc
inc
xor
inc
xor
xor
xorb
movsl
ljmp
ss
jne
push
cmp
js
stos
call
push
dec
push
jae
popf
add
mov
ret
cltd
xchg
test
movsl
add
jnp
mov
mov
or
sub
pop
fwait
sbb
shll
lds
mov
and
xchg
cmp
rclb
lea
divb
fsubl
push
in
cmpsb
icebp
add
mov
pop
scas
out
xor
sbb
stos
add
mov
jl
fbstp
imul
dec
in
cmp
push
rcr
push
outsl
and
mov
movsb
and
add
dec
adc
jmp
jae
dec
mov
popa
mov
xor
sub
xorl
test
sub
popf
and
das
xor
mov
pusha
int
jnp
or
cmp
pop
adc
adc
nop
inc
add
es
dec
mov
cmovs
sbb
lcall
shll
fmull
xchg
daa
adc
popa
xor
xor
sbbb
add
sahf
pusha
mov
dec
mov
and
cs
rsqrtps
xchg
sbb
mov
inc
cmc
mov
cs
mov
call
jg
cmpsl
push
xchg
push
lds
mov
xor
rorb
cmpsl
pop
add
mov
fmuls
das
testb
cs
pusha
xor
mov
mov
add
cmc
sbbl
fwait
xchg
clc
push
add
lods
testl
jns
enter
mov
cmp
add
inc
xor
into
sbb
push
leave
mov
pop
fwait
loop
and
call
pusha
pop
sub
stos
test
hlt
mov
add
scas
call
or
popf
mov
sbb
pop
inc
mov
push
iret
in
inc
xor
and
fsubr
out
mov
add
xchg
pushf
push
xor
xchg
mov
mov
subb
sbb
incb
pop
or
add
dec
lock
cmp
push
mov
leave
push
pop
mov
les
jecxz
lds
ss
or
inc
mov
imul
push
adc
dec
mov
js
test
and
mov
popa
loopne
xor
outsb
aad
pop
dec
add
das
rorl
add
fwait
add
xchg
add
std
or
add
inc
or
test
pop
cmp
dec
inc
inc
data16
call
stc
push
mov
aas
or
lret
cwtl
add
adc
mov
lods
por
cmpl
mov
fpatan
jo
rolb
aad
scas
ficoml
xchg
cmp
add
xchg
out
dec
dec
leave
or
cmpb
loop
xchg
push
notb
sbb
and
xor
pop
pushl
jmp
xor
dec
add
int3
pop
into
add
cli
pop
sub
xchg
pop
push
fists
add
in
lret
lds
mov
loopne
xor
shlb
sub
insl
inc
xor
les
or
xchg
rorl
lahf
int3
push
aas
mov
pop
dec
or
adc
rol
fs
add
xchg
cmpl
or
sahf
jo
push
mov
and
xchg
les
add
add
fsubrl
cs
sbb
test
je
adcb
enter
cltd
xchg
jge
sub
add
xor
dec
cmc
xorb
mov
ror
imul
stc
lret
push
shlb
pop
inc
out
jp
mov
jns
add
and
mov
mov
add
or
add
or
xchg
push
and
das
push
out
pusha
das
mov
in
pop
xor
mov
fstpt
dec
mov
fiaddl
jmp
pop
push
mov
das
mov
cmp
add
movsb
xor
or
fnstcw
insb
push
xor
pushf
xchg
movsb
sbb
xchg
int3
rorb
sbbb
in
sub
inc
pop
rolb
push
pop
gs
cmp
push
pop
or
add
decb
inc
imul
lds
popa
daa
push
pop
sbb
daa
loope
xchg
faddl
negb
cmc
imul
mov
or
and
inc
jo,pn
or
xchg
xor
sahf
enter
xchg
rcr
fs
loop
pop
dec
or
cwtl
jmp
cmp
mov
dec
sub
or
mov
mov
mov
les
dec
and
add
push
iret
arpl
sub
cmp
aad
push
xlat
sbb
mov
scas
sub
push
leave
sbb
je
pushf
push
mov
es
push
cs
add
lret
and
jno
cmp
mov
xor
lock
xchg
fwait
repz
mov
mov
or
test
cmp
mov
sub
add
push
loop,pn
rcrb
popa
mov
xor
push
pusha
nop
mov
cmpsl
cld
mov
cmp
fs
into
fnstsw
push
sub
mov
add
cmp
add
add
xchg
push
pop
les
mov
pushf
rolb
movsb
jmp
push
outsl
imul
mov
bound
inc
mov
adc
out
sbb
or
fcomps
add
xchg
ja
das
cmpsb
and
add
ficoml
or
andw
or
jno
btr
xchg
mov
cwtl
inc
cmp
add
cmp
jge
aas
ret
fldl
pop
lcall
outsl
adc
inc
incb
push
xchg
das
sub
fadd
jns
pop
lcall
xchg
lock
mov
pop
adc
mov
sbb
mov
and
add
lret
nop
inc
shlb
add
add
fcoml
cmp
rolb
or
add
jno
cli
test
pop
dec
sub
das
sub
mov
bound
xor
dec
xchg
mov
enter
pusha
push
jns
repz
xor
add
cmc
add
mov
mov
xchg
xor
sbb
cmpsb
inc
sbb
mov
add
stos
inc
lret
loope
xor
jmp
iret
mov
add
dec
pop
mov
add
push
inc
and
cwtl
inc
mov
inc
into
xchg
jge
loopne
add
pop
js
pushf
sbbl
inc
clc
xor
fcoml
int3
add
es
adc
mov
rol
jno
jg
add
jne
mov
sub
sub
inc
or
mov
in
push
out
fld
adc
pop
mov
shll
stos
inc
xchg
mov
cmp
sbb
shrl
mov
or
cld
loope
rorb
jno
mov
dec
pop
add
addb
stos
int3
lods
and
add
enter
add
pushf
mov
inc
add
mov
inc
sti
adc
jmp
mov
sarb
pop
sub
fs
jmp
add
mov
xor
or
push
push
int3
daa
mov
cmpsb
cmp
jo
scas
mov
enter
dec
adc
fsubrs
jle
cmp
pop
add
pop
mov
xchg
nop
cli
movsb
pop
ret
cmpsl
sbbb
push
inc
lods
pop
mov
movsl
orb
loopne
stos
mov
gs
mov
mov
and
push
pop
mov
dec
outsl
dec
jl
add
aad
push
std
push
lcall
jge
shrb
shll
or
xchg
adc
adc
movsl
fadds
push
pop
sbb
inc
stos
xor
lock
sub
pop
mov
inc
lret
mov
push
adc
add
fcoml
mov
aaa
ljmp
mov
mov
pop
mov
xchg
into
add
movsl
shrb
lea
enter
call
xor
add
flds
cmp
adc
arpl
repnz
sbb
mov
add
dec
and
add
js
mov
xchg
jmp
adc
sub
clc
add
loopne
push
push
sarb
cmpsl
addl
sub
jge
addr16
adcb
les
in
pop
fsts
push
and
mov
xadd
and
add
jb
insb
cwtl
cmp
mov
pusha
push
pushf
mov
mov
das
outsb
cmpl
ficompl
add
add
add
inc
dec
add
call
pusha
add
insl
push
lock
adc
inc
bound
sub
push
test
inc
or
mov
add
adc
cmpsb
push
cmp
add
sub
shrb
add
or
insl
pop
mov
rclb
ret
or
sub
shld
fwait
bndstx
mov
or
adc
add
in
inc
and
mov
aam
sub
shlb
enter
pop
inc
push
pop
push
add
fstl
jl
ret
cmp
add
add
rcrl
pusha
push
push
add
mov
std
push
andl
add
into
cwtl
mov
aas
xlat
xchg
sub
lods
pushf
and
imul
test
xchg
sti
pop
pop
aam
pop
or
adc
add
out
les
std
xor
repnz
mov
mov
and
mov
push
aad
mov
rorb
and
movsb
pop
add
xchg
cmpsb
fmull
and
aam
pop
fistl
pop
es
repnz
adc
mov
or
adc
enter
imul
lods
jp
sub
rcrb
jle
push
icebp
mov
pop
cmova
stos
jmp
mov
addb
mov
jl
add
inc
push
int3
fildl
add
addb
sahf
stc
mov
scas
inc
adc
lods
mov
inc
popf
cmpsl
and
inc
outsb
in
push
or
cmp
xchg
add
or
cmpb
pop
in
addr16
add
pop
push
xor
push
js
call
adc
lahf
dec
mov
xor
pusha
mov
inc
call
sti
jmp
bound
push
jbe
add
aam
inc
shrl
sub
sbb
push
inc
loope
mov
pushf
inc
mov
mov
xchg
mov
in
outsb
add
mov
inc
adc
test
push
lret
add
dec
cld
int
push
adc
rcrb
comiss
add
call
orl
adc
mov
mov
sbb
fwait
xor
push
mov
jbe
push
add
cltd
addl
leave
in
test
add
cltd
sbb
pop
dec
pop
adc
inc
inc
test
leave
jnp
cwtl
xor
mov
mov
out
sub
hlt
and
sub
pop
aas
add
sbb
rorl
push
iret
fs
rcrb
pop
push
inc
inc
enter
and
sbb
dec
mov
push
add
and
outsb
xchg
iret
jmp
sarb
lahf
rolb
or
or
xor
movsl
mov
ret
movsb
inc
into
add
shrb
add
xor
add
add
lea
add
push
test
inc
lods
jl
sarl
inc
add
sbbb
pop
loopne
mov
test
sti
aas
add
fiaddl
sub
out
jo
sbb
orb
cld
xor
pop
ljmp
mov
jno
pop
mov
sbbb
add
cli
scas
add
inc
push
test
fmull
xor
stc
pop
push
mov
into
mov
rcrb
inc
sbb
add
add
cmp
pop
push
dec
or
addb
sub
sarb
push
push
xchg
cmp
adc
popa
lods
int
adc
out
push
xor
das
imul
call
in
addb
sbb
add
cmpxchg
xchg
jnp
inc
or
mov
mov
mov
js
notl
adc
out
xor
dec
adc
push
or
inc
orb
mov
sbb
hlt
cmc
mov
dec
nop
mov
mov
mov
bound
add
ret
imul
nop
dec
dec
je
add
pop
fs
daa
inc
xchg
pushf
inc
and
clc
jae
adc
shl
ret
add
push
movsl
inc
fadds
add
inc
pop
and
adc
mov
in
shlb
bt
mov
pop
out
and
add
das
xchg
out
jg
ror
aad
mov
cmp
add
lea
cmp
inc
cmp
lret
or
roll
xor
lret
sub
pop
sbb
outsb
adc
cmp
shlb
psubsb
jmp
fwait
into
dec
daa
enter
mov
inc
or
push
push
imul
mov
mov
insb
sub
orb
push
pop
jge
int
add
shrl
mov
inc
loop
nop
dec
enter
loopne
dec
xor
aad
inc
pop
movsl
push
pushf
inc
out
push
add
outsb
mov
add
mov
add
xor
int3
daa
hlt
sti
adc
cld
push
pop
rcrb
inc
xor
inc
sbb
add
les
fimuls
stc
push
and
dec
js
add
fisttpll
or
pop
ret
cmp
fs
cmpsb
add
jge
fstps
fwait
add
popf
or
mov
or
loopne
pop
add
call
icebp
adc
cmp
xlat
dec
sub
xchg
push
sub
mov
xchg
cmp
cmp
mov
mov
xor
xor
push
call
xchg
sub
xor
cmp
inc
cmp
sub
cld
mov
mov
lock
sub
or
leave
iret
mov
outsb
movsb
movl
dec
mov
rcrl
fstpl
push
in
mov
mov
imul
pushl
cs
and
add
pop
nop
jo
inc
pop
mov
mov
cld
imul
fsub
cwtl
test
roll
pop
rcl
adcb
push
xor
roll
add
leave
add
mov
orl
mov
fisttpl
aaa
sbb
pop
push
enter
loop
add
cmp
je
ds
je
int3
popa
mov
jp
test
cmp
nop
jo
cmc
movsl
xor
sbb
mov
or
sbb
mov
jbe
inc
mov
out
sbb
add
sbb
cmpsl
cmp
scas
iret
jae
dec
mov
loop
sub
mov
add
add
add
stos
lock
stos
mov
add
push
add
ja
xchg
inc
mov
flds
stos
mov
push
test
ds
les
stos
fwait
jb
add
push
xchg
add
out
outsl
sub
pop
rcrb
inc
lods
rorl
call
push
pop
aam
rorb
pop
and
aas
sbbb
add
push
fwait
or
les
jno
mov
sub
call
push
jo
mov
sbb
add
inc
ds
pop
pop
push
ret
dec
or
lock
push
push
add
sbb
jmp
jbe
pop
stos
sahf
xor
out
orl
ja
ret
fstpt
mov
sbb
cmc
xor
cmp
icebp
in
pop
lock
mov
pop
mov
or
in
fistps
pop
in
add
aam
xor
push
or
test
cmp
inc
dec
pop
mov
lods
adc
pop
cmp
fsubrl
movsb
sti
add
mov
cmp
xor
jg
movsl
mov
or
xor
call
add
jo
movsl
fidivs
push
js
js
rorl
sbbb
aad
lea
sbb
dec
xor
and
mov
xor
mov
pop
add
pop
scas
jg
and
or
inc
jnp
jo
and
push
xor
mov
jns
add
clc
xor
jmp
addr16
stos
out
pop
pop
rcrl
inc
xor
and
dec
mov
or
inc
cmp
add
mov
lea
arpl
ret
push
push
fcomp
dec
sarb
fwait
dec
jmp
stc
pop
popa
enter
mov
cmp
add
lds
xchg
and
mov
and
xchg
or
sbb
fsubp
insb
add
fidivrl
add
mov
rcrl
mov
sti
and
jecxz
out
adc
sbb
or
jno
inc
xor
jge
rcrb
sub
test
mov
pop
mov
test
dec
push
mov
addb
dec
lret
xor
adc
or
pop
jg
movsl
aas
dec
jge
lea
loope
cmovl
pop
jne
mov
repnz
cmp
or
loop
push
les
fucomp
repnz
mov
mov
ret
js
xstore-rng
cmpsl
add
fwait
sbb
das
rolb
inc
inc
add
cmc
inc
sbb
jne
jg
sub
inc
add
dec
fwait
add
fsubrl
sbb
dec
or
cmpsl
and
das
and
pop
sar
mov
aas
mov
iret
int
xchg
adc
sbb
icebp
jnp
inc
shlb
inc
pushl
xchg
loope
inc
cmp
jno
int
in
idivl
int3
lret
test
ds
dec
jg
lock
addb
jnp
fsubrs
mov
sbb
dec
cltd
rcr
mov
out
lahf
sti
adc
sbb
ret
add
das
insl
jnp
notb
outsl
mov
je
test
lock
cmp
pop
add
and
movsl
sub
mov
hlt
cmc
sbb
inc
out
lret
mov
lock
xchg
outsl
xchg
pop
iret
mov
add
out
and
addl
ret
je
scas
add
cs
mov
cmp
sbb
fwait
cmpsl
and
and
daa
cmpl
outsb
jne
bound
or
out
outsb
shrl
dec
loopne
pusha
pop
inc
and
add
mov
jl
jns
pop
and
in
fs
sub
setp
clc
push
add
xchg
popf
cmp
ret
sbb
push
cmpb
mov
xor
clc
add
bound
jnp
push
movsl
cs
add
push
or
cmp
cwtl
xorb
test
adc
push
fisubrl
int
ja
sub
or
les
stos
int3
movsb
loopne
shlb
pop
mov
and
and
hlt
mov
xchg
push
mov
cmp
insl
sub
mov
xor
lds
adc
adc
ja
adc
in
sbb
sbb
call
mov
cmp
pop
jno
add
inc
lret
test
jo
xchg
push
adc
cmp
int3
andl
movsl
push
push
jl
mov
and
adc
das
shrb
xor
fstps
jne
aad
jnp
add
cwtl
push
mov
mov
mov
add
xchg
dec
pop
adc
add
addl
call
adc
inc
movsl
rcll
sub
add
repz
jle
xor
or
add
cwtl
fisttpll
add
xor
lret
push
dec
clc
fidivrs
lock
and
ja
sbb
mov
adc
pop
inc
push
das
add
sub
je
int
insl
enter
fwait
testl
imul
mov
and
mov
mov
push
add
jnp
adcl
fcomp
xor
bound
incl
shlb
mov
jmp
add
mov
fdivrp
ret
add
lcall
add
ja
xor
ja
add
cmp
jp
test
in
iret
outsb
xor
or
mov
mov
mov
xor
pusha
jo
subb
int
or
xor
nop
inc
push
clc
mov
push
movsl
jp
popl
and
cmpsb
int3
aas
mov
and
shlb
cmc
dec
lcall
sub
movsb
pop
xchg
rcrl
sbb
fsubr
clc
mov
xor
and
mov
sarb
dec
add
das
xchg
adc
sub
inc
pop
mov
sbb
push
arpl
and
aad
movsb
es
data16
rclb
ds
and
sub
mov
add
xchg
das
dec
shrl
or
cmc
cld
inc
sarb
mov
inc
dec
test
mov
push
les
and
or
subl
dec
sarb
add
repz
mov
xor
pop
add
scas
pop
sti
add
data16
lock
rclb
sbb
add
mov
sub
push
cld
pop
inc
fisubl
push
and
and
rcrb
xchg
xchg
pusha
inc
add
cmp
clc
inc
adc
mov
push
into
pop
pop
inc
or
sub
adc
sbb
dec
cmpb
cmpl
mov
and
enter
int3
adc
push
jns
cltd
cld
xchg
testl
push
push
push
mov
shlb
shlb
xchg
xchg
mov
lcall
lock
push
pop
cmp
add
test
and
sub
add
ss
loopne
jle
je
or
lock
add
jmp
jge
lahf
pop
lcall
dec
scas
xor
and
push
jno
shll
inc
dec
jp
cvtps2pi
andb
add
jge
cld
xchg
lods
add
movsb
mov
mov
add
sbb
stos
xchg
or
insb
lret
movsl
pop
xor
and
mov
cwtl
jp
cs
hlt
push
adc
ret
sub
clc
adc
test
rcrb
repz
mov
addr16
jo
sub
push
xor
fwait
loopne
ret
xchg
and
addb
xchg
xorb
cmp
xchg
loop
and
mov
jns
pop
ja
aas
stos
les
hlt
jno
jmp
aad
add
aas
add
mov
data16
add
in
mov
lcall
jg
in
jnp
ljmp
pusha
and
add
sbb
push
mov
xchg
jo
mov
add
adc
add
rcll
sub
orb
xchg
jmp
scas
ret
loope
imul
xchg
iret
mov
int
fs
push
xchg
inc
in
iret
push
dec
fs
xorb
add
and
dec
icebp
add
fwait
add
xchg
int3
dec
inc
aad
cltd
and
and
cmp
and
sub
add
pop
sub
push
fstps
and
nop
pop
xchg
sub
incl
sarl
adc
mov
or
xor
rolb
popf
movsb
sbb
outsl
mov
and
mov
cwtl
or
inc
pop
out
sub
jg
int3
loopne
or
sub
add
xchg
cli
jnp
je
jle
out
xorb
in
ja
cld
rorl
add
add
std
pop
add
iret
aaa
ja
mov
mov
rorb
enter
cmp
and
jne
mov
pop
or
dec
in
mov
pop
fmuls
sarb
incl
mov
and
mov
hlt
es
pop
xor
push
add
hlt
or
add
add
xchg
test
xor
or
jle
xchg
sbb
insb
cmc
in
into
shlb
mov
cmp
fs
nop
mov
add
inc
pop
leave
add
stc
adc
vpaddusb
inc
test
xor
mov
sub
cld
es
and
cld
sub
stc
enter
cmc
inc
push
mov
mov
sub
push
jno
jb
or
cltd
popa
mov
pushf
call
fcmovne
fs
add
jp
pop
pop
cmova
cmp
cmpb
push
or
data16
daa
adc
insl
add
mov
pop
mov
and
repnz
rcrl
and
sarl
int3
xchg
mov
addl
jl
leave
pop
mov
aam
add
popa
lds
add
data16
inc
rclb
iret
aam
pusha
jo
lods
rcrb
clc
adc
lret
sbb
test
cwtl
pop
nop
or
and
mov
push
adc
mov
xchg
mov
inc
stos
sbbb
lcall
xchg
inc
mov
inc
stos
cwtl
fcompl
cli
mov
push
rcrb
mov
repz
mov
cmp
das
dec
cmp
push
jae
inc
loopne
cmp
fs
push
pusha
sbb
dec
mov
jo
pop
jno
pop
jmp
and
leave
fwait
push
call
clc
push
push
sahf
test
jl
cmp
inc
mov
push
test
dec
insb
cmpsb
cwtl
rolb
ret
xchg
push
and
sti
in
dec
sbb
add
inc
jbe
repnz
mov
dec
stos
movsl
leave
or
xor
cwtl
mov
xor
scas
int3
add
mov
mov
jge
fdivrl
aam
rcll
and
pop
xchg
outsl
dec
pushw
loopne
and
movsl
sub
mov
mov
frstor
sub
push
aad
or
rolb
push
cld
shlb
lock
in
push
repnz
mov
test
inc
daa
pop
mov
sbb
pop
stos
xor
and
popa
mov
popf
mov
add
sbb
lds
fwait
mov
add
push
mov
xchg
jno
mov
xchg
shlb
mov
push
lret
shrb
test
adc
jp
push
ret
sub
and
mov
sbb
gs
push
and
arpl
mov
cmp
sbb
cmp
out
jbe
into
xchg
add
pop
mov
in
cmp
rolb
mov
adc
sbb
cmp
push
cmpsl
dec
sub
in
inc
push
xchg
nopl
xor
cmp
sbb
fistl
xor
fsubl
subb
hlt
je
mov
add
jae
stos
rorb
add
iret
jo,pn
xlat
cmp
cltd
add
mov
sub
push
aad
or
pop
push
add
lret
push
jnp
cwtl
push
adc
inc
mov
popf
pop
sbb
into
push
js
and
cmp
xchg
xor
imul
pop
hlt
ljmp
add
stc
sub
fs
addr16
or
and
adc
xchg
inc
addb
sar
fisttpl
cmp
cltd
enter
outsb
sbb
push
add
inc
sbbb
adc
sbb
jge
or
pop
inc
jmp
add
mov
test
lret
push
push
pop
mov
dec
lea
cltd
jl
jns
pop
mov
sbb
inc
pop
sbbb
sub
lock
lahf
out
xchg
aad
test
lock
pop
push
loop,pn
xor
outsb
mov
xchg
sub
loope
call
insl
fwait
cld
bound
xor
jl
aas
popf
xor
cmp
sub
and
or
das
ss
inc
xlat
push
push
lds
lcall
inc
loope
push
adc
adc
push
dec
pop
push
adc
push
jg
mov
mov
xchg
xchg
xor
in
iret
ret
and
int3
dec
stc
das
jb
add
jb
add
aad
push
xchg
or
dec
popa
call
inc
sarl
or
cmpl
out
das
push
bound
xchg
movsl
gs
subl
jo
lahf
cmp
sbb
iret
out
mov
repz
cmp
lock
jle
add
mov
mov
mov
daa
and
testl
test
mov
iret
add
mov
jle
pusha
inc
add
mov
lret
sbb
mov
test
dec
mov
pop
into
adc
pop
das
pop
js
cwtl
xor
adc
icebp
xor
add
mov
fistpl
pushf
cmc
jge
adc
or
repz
ljmp
mov
sub
xchg
movsb
shlb
lcall
movsb
xchg
cmpsb
test
movsb
xor
mov
pop
sbb
mov
mov
add
push
push
fwait
mov
xorb
popf
lcall
sub
pop
add
cld
sbb
and
add
dec
push
and
rolb
fptan
mov
fadd
adc
pop
xabort
add
sbb
cmp
movsb
lret
dec
mov
shrb
into
loope
data16
movsl
and
and
int3
insb
push
add
adc
fcomp
imul
jmp
sbb
push
daa
adc
adc
inc
lcall
mov
add
faddl
pop
add
je
mov
lods
ret
jg
lret
jns
and
inc
mov
pop
lahf
scas
je
sub
fmull
add
pop
aas
sti
mov
mov
jge
repz
out
aad
mov
mov
mul
push
add
push
fucom
mov
mov
fsubs
xor
mov
repz
ss
dec
int3
adc
push
loopne
mov
dec
out
or
pushf
mov
outsb
nop
adc
lods
xor
xchg
mov
pop
sbb
fmul
adc
push
es
mov
fwait
add
les
aam
sub
imul
cld
cwtl
aas
push
sub
subb
xchg
das
movsl
push
sbb
hlt
sub
xchg
pop
mov
fdivl
add
fwait
cli
das
cmp
in
int3
jg
stos
pop
sbb
repz
clc
or
in
push
adc
mov
mov
ljmp
repnz
test
aaa
jb
add
mov
dec
ja
je
inc
dec
or
stc
add
push
xor
adc
icebp
xor
fimull
lds
cmp
add
xchg
in
jo
ret
mov
lds
xor
popa
xchg
dec
sub
popa
js
and
imulb
add
out
out
in
shlb
inc
fsub
movsb
mov
call
add
test
pop
push
enter
mov
and
fstsw
mul
or
sbb
loopne
mov
sub
outsl
loop
sbb
or
mov
rorb
and
add
xchg
cmp
add
mov
es
jl
xor
loopne
or
mov
xchg
cmp
enter
loop
sub
imul
add
jg
push
jo
in
insb
cmp
les
or
pushf
and
dec
loope
decb
adc
lcall
mov
and
clc
push
push
rcl
add
add
les
push
pop
inc
bound
add
pop
or
push
in
pop
dec
test
or
nop
inc
add
negb
mov
pop
mov
aad
push
and
pushf
negb
mov
mov
rolb
pop
mov
bswap
fwait
cmpsl
enter
mov
movsb
cld
pop
lock
js
shrb
addb
pop
and
adcb
fldenv
sahf
xchg
inc
test
dec
mov
adc
movl
sbb
sbb
xrelease
push
test
fnstcw
js
add
adc
sarb
adc
mov
or
mov
adc
add
mov
pop
iret
dec
or
pop
int3
cmovge
popf
das
test
mull
or
loopne
mov
mov
add
or
push
filds
sub
sbb
ret
cwtl
inc
mov
add
lret
rorl
dec
xor
dec
mov
test
add
mov
sub
js
xorb
scas
add
mov
dec
sub
inc
sbb
cld
cmc
xchg
rorb
and
xor
adc
pusha
adc
mov
mov
pop
addr16
mov
or
lds
push
int
mov
xchg
int
or
arpl
fcoms
fldl
xor
mov
jo
xor
sahf
sub
xchg
jns
or
lods
mov
mov
mov
aad
js
icebp
add
push
and
arpl
xor
test
xchg
gs
cmc
or
movsl
inc
aam
mov
add
cmpsl
inc
jnp
sar
stc
mov
adc
cmp
shlb
add
cmpsb
sbb
sbb
sahf
inc
jne
mov
add
mov
fcoms
pop
rolb
adc
xchg
add
jne
mov
xchg
rcrb
cmpsl
add
dec
test
clc
push
jb
dec
mov
ret
push
insb
mov
add
rorb
std
jno
xor
cmp
rolb
jbe
in
outsb
pusha
je
add
js
pop
or
and
daa
add
xchg
aam
add
mov
sbb
cmp
or
cmp
cmc
and
mov
mov
nop
sbb
cmpsl
pop
cmpb
inc
mov
inc
rcrb
add
xchg
mov
lcall
loop
xor
mov
mov
sbb
mov
mov
insb
aas
fdivs
add
xor
mov
mov
aad
outsb
mov
jne
or
lods
test
je
push
rcr
nop
xchg
jecxz
ret
inc
inc
movsl
sbb
hlt
clc
addr16
mov
int3
sbb
rclb
outsl
add
in
int
idivb
push
xor
xor
shlb
mov
push
lret
cmpb
rorl
inc
push
cmp
mov
mov
dec
addr16
int3
fwait
out
cmp
cltd
and
daa
jmp
and
dec
aam
and
mov
pop
inc
js
pop
push
mov
mov
cmp
adc
call
pcmpgtd
jbe
cwtl
inc
fisttpll
in
test
test
sbb
and
add
aas
mov
sub
cs
int3
pop
in
push
add
sub
scas
es
mov
cmpb
rorl
and
jae
sub
mov
clc
add
aaa
mov
inc
fs
pusha
adc
jp
adcl
sti
sub
mov
call
push
rorb
cmc
daa
ja
push
add
pusha
and
add
push
jge
loopne
jl
cwtl
jbe
xor
mov
add
ret
in
shlb
repz
jo
dec
cld
test
jne
add
mov
mov
add
je
xlat
mov
xchg
mov
mov
ds
add
scas
and
stos
and
jo
inc
test
or
fdivl
add
cmp
loope
in
aam
pop
jnp
repnz
stos
test
rclb
js
jb
ss
movsb
mov
xor
orb
adcl
push
aad
mov
dec
cwtl
add
rorb
cmp
out
mov
test
rorb
add
inc
dec
gs
xchg
loopne
push
pusha
loope
cmc
jle
xor
lret
rclb
shrl
jl
das
lahf
les
stc
fwait
sub
cmp
inc
lcall
int3
or
jno
sbb
andnps
dec
xchg
cmp
pop
pop
divb
or
mov
movsl
pop
das
mov
insl
dec
lds
inc
add
jle
sahf
fsubrl
or
insb
mov
jae
pop
xor
shrb
les
paddw
push
rol
pop
sbb
add
das
daa
stos
jo
dec
test
add
lods
cld
jg
mov
shll
or
lock
mov
and
sahf
ficomps
or
xor
scas
ltr
lret
xor
add
in
and
cltd
mov
sub
pop
movsb
jmp
dec
mov
and
out
cld
cmpb
bound
subl
sbb
and
adc
or
mov
fcompl
adc
jo
imul
mov
inc
pop
dec
filds
ja
jns
pop
jns
loop
inc
pusha
xchg
gs
subb
aad
adc
cli
cmpsl
iret
rolb
cmp
adc
sbb
pop
jg
adc
aam
sbb
ret
add
mov
and
sub
hlt
push
outsl
lea
pop
xchg
adc
das
int
test
repz
fldenv
les
xchg
fs
insl
dec
mov
pop
mov
add
mov
lds
xor
hlt
push
xchg
cmp
sarb
loopne
dec
pushf
mov
adc
repz
jne
fdivs
in
push
xor
mov
aad
xchg
cs
rclb
and
lds
inc
negb
mov
or
adc
mov
imul
inc
mov
mov
inc
inc
hlt
pop
dec
cmp
shl
rcrb
add
dec
and
inc
pushf
xor
ret
add
movsl
sub
leave
test
push
or
les
or
cmp
pop
lock
and
dec
add
sub
add
cmc
pop
lods
lods
sbb
mov
shlb
lret
sbb
andb
sub
push
xor
jbe
push
int
shrb
jmp
and
repz
add
lock
jbe
and
ficompl
loope
or
test
int3
mov
pop
push
mov
rolb
inc
and
push
call
outsl
mov
dec
add
das
sub
pop
add
cmpl
out
daa
fsts
movsb
and
nop
xor
and
inc
mov
sub
xorb
adc
mov
fdivrl
push
jg
adc
xor
and
stos
push
xchg
int3
push
clc
add
cmp
loope
add
or
add
cwtl
leave
push
call
push
or
pop
pop
mov
dec
test
xor
mov
or
shll
mov
mov
inc
stc
in
add
pop
mov
bt
sub
push
test
rorb
arpl
fbstp
std
cmp
lods
int3
inc
adc
sub
push
dec
xor
std
dec
add
mov
push
jmp
add
adc
int3
add
pop
cltd
repz
push
sub
mov
orb
addb
call
xchg
xor
add
movsb
pop
jnp
push
das
add
xor
add
mov
cwtl
out
lock
lea
xchg
das
pusha
mov
ds
std
and
cmp
in
xor
adc
dec
movsb
inc
aaa
or
mov
ret
and
push
add
mov
int3
call
mov
sub
movsb
xor
and
int
pop
push
push
fwait
lods
aam
cmp
pop
shlb
sub
leave
jp
add
adc
imul
int3
adc
add
mov
jg
sbb
shlb
xchg
add
lock
fwait
mov
add
faddl
dec
add
shrb
loope
nop
mov
inc
pop
pop
sbbb
sarb
cld
mov
sub
mull
aam
fisubl
adcb
mov
lods
and
push
or
cmc
mov
insb
adc
repz
orb
pop
jo
inc
test
add
dec
push
lea
mov
fcoml
hlt
inc
rorl
test
dec
mov
pusha
xchg
add
and
add
cmp
jo
mov
movsb
dec
cltd
jno
xor
test
add
jne
cmc
push
push
push
add
jae
xchg
gs
pop
mov
push
movsb
jns
call
xchg
jne
jb
lret
gs
jbe
mov
cmp
cmp
popa
add
lahf
bsf
or
jns
add
jg
imul
xorb
ss
lock
push
xchg
test
dec
push
or
out
cmp
inc
cmp
ret
in
shlb
cmp
lock
sarb
add
pop
sbb
lahf
cltd
pop
int3
adc
shll
add
popf
fwait
movsb
hlt
pop
xchg
call
or
cmp
pop
scas
pushf
fisubs
pop
jl
test
in
pop
add
mov
mov
stos
pop
fwait
rclb
push
int
clc
addl
and
mov
mov
pusha
clc
aas
or
out
xchg
and
pop
add
push
mov
push
test
jp
inc
loopne
fwait
add
jl
or
sub
add
stos
repz
and
imul
push
cmp
dec
test
inc
orb
fwait
dec
lds
addr16
xor
arpl
mov
daa
push
leave
xor
in
mov
test
rcll
xchg
xor
add
repnz
lahf
add
dec
xor
push
mov
std
mov
ss
lods
add
popa
pop
pop
mov
sub
arpl
lods
adc
sarb
and
sub
lods
in
or
movsb
nop
andb
sbb
mov
js
inc
cmpsb
inc
sbb
and
arpl
mov
loope
push
dec
jl
dec
repnz
mov
mov
out
jo
adc
pop
inc
sbb
addr16
bound
fdiv
pusha
aas
xchg
add
or
or
push
mov
sub
and
mov
add
cwtl
pusha
sub
dec
cld
rcrl
scas
mov
cltd
inc
nop
aam
scas
sub
adc
cmp
pop
cltd
jmp
xor
mov
add
jmp
adc
ret
xor
les
into
mov
nop
insb
int3
in
or
cmp
mov
push
add
loopne
xchg
rcrb
pop
lcall
mov
add
push
scas
add
push
fdivrl
lea
cmp
push
scas
mov
pop
mov
mov
movsl
lahf
adc
les
mov
add
sbb
and
add
xchg
adc
mov
cmp
inc
xchg
or
daa
pop
dec
add
inc
nop
and
xchg
fldz
ds
or
int3
scas
mov
shlb
mov
cld
jg
cmp
outsl
cld
or
test
test
cltd
push
add
jb
lods
dec
and
pop
cwtl
push
iret
repz
sub
jg
add
fadds
enter
cmp
and
pop
mov
jg
pusha
adc
pusha
pop
add
rcrb
insl
sub
jne
mov
or
int3
clc
lret
scas
out
mov
push
popf
or
jno
inc
inc
mov
fs
nop
dec
add
sbb
add
adc
shl
xchg
ds
xor
inc
enter
jle
add
inc
ds
dec
and
dec
and
sub
pop
repnz
or
jmp
pusha
xor
dec
and
das
cmp
sub
mov
icebp
ja
add
int
and
mov
test
add
ret
jecxz
outsl
ror
sub
and
inc
daa
inc
shr
fs
jp
add
movsb
mov
add
mov
jb
pop
loop
fsubs
or
adc
movsl
sbb
mov
or
jnp
scas
insl
cmp
cmpsl
cwtl
xchg
jnp
pop
xor
sbb
mov
cld
adcb
enter
inc
dec
xchg
hlt
js
mov
cmpsb
test
lods
jo
out
xor
xlat
cmp
je
rolb
push
add
das
fstps
loopne
test
push
rolb
pop
insl
or
bound
add
inc
imul
dec
mov
xchg
test
push
cwtl
sbb
jo
mov
shlb
jl
pop
adc
je
cmp
pop
faddl
test
call
out
add
fdivrs
sbb
adc
xor
pusha
call
mov
in
cmpsl
xor
add
or
xchg
adc
inc
hlt
push
insl
movsl
and
popf
mov
jo
fwait
cmpsl
xchg
gs
push
lahf
dec
jo
shrl
enter
sub
mov
dec
adc
sarl
mov
ss
push
push
inc
loopne
hlt
sti
mull
mov
cmc
add
imul
pop
rcrb
add
cmp
mov
dec
cmp
xor
aaa
mov
xor
xchg
sub
cmp
stos
scas
pusha
shlb
ljmp
pop
inc
xchg
outsl
add
addr16
xchg
dec
cmpsb
imul
enter
mov
out
addr16
pusha
aad
cld
mov
and
dec
pop
mov
pop
test
cmpsb
adc
nop
and
ds
adc
cmc
xchg
call
mov
dec
and
dec
int
addr16
adc
cmp
xchg
pushf
xor
cmp
mov
add
pop
dec
lods
xorb
mov
fiadds
shll
sub
pop
jmp
fsubrs
loop
loope
jge
cld
add
mov
xor
mov
test
rolb
sub
cmp
shlb
pop
xchg
add
fwait
ret
pusha
and
pop
nop
add
xchg
daa
xchg
iret
loope
add
icebp
pop
dec
jp
mov
out
mov
aam
add
mov
pop
sub
mov
je,pt
and
loop
icebp
add
lret
repnz
push
int3
hlt
add
adc
cltd
enter
and
mov
fwait
loop
add
in
mov
inc
lds
and
mov
mov
push
sbb
dec
push
pop
adc
scas
or
pop
adc
jl
shl
in
mov
sub
dec
sbb
into
lret
mov
pop
fwait
int
das
dec
cmp
inc
out
add
repz
xchg
andb
mov
pop
or
fwait
hlt
sub
imul
inc
out
inc
les
das
outsl
stos
rcrb
xor
addb
popa
cmpsb
jp
adc
sbb
bswap
sub
ficoms
ljmp
push
les
pop
xchg
sbb
fld
or
sahf
jp
cwtl
and
scas
add
push
sahf
mov
jmp
or
mov
mov
mov
loope
inc
pusha
adc
adc
pop
dec
push
xchg
dec
repnz
add
ljmp
mov
mov
iret
es
rclb
cwtl
pop
movsb
loop
add
or
jne
dec
mov
mov
xchg
iret
push
cmp
sub
mov
push
adc
push
push
pop
loopne
ficomps
adc
hlt
xchg
pusha
push
pop
into
inc
pop
xorl
cmpb
xchg
das
repnz
sub
pop
or
jbe
add
fwait
dec
aad
add
cwtl
pushf
das
leave
mov
mov
scas
les
inc
mov
adcb
pop
sbb
bound
push
imulb
mov
ret
lods
add
notl
bound
pop
xchg
xlat
call
xchg
outsl
lcall
cmp
pushf
shll
mov
cmp
pop
arpl
ret
or
pop
and
adc
ret
xor
outsb
cwtl
or
jno
fnstcw
stc
pop
or
stos
imul
into
cmc
cmp
add
and
pop
pop
mov
rorb
add
aas
xor
sbb
jl
and
test
cmp
and
jl
inc
mov
dec
xor
test
pop
daa
repz
mov
lods
lods
movl
pop
sbb
jb
test
stos
push
mov
enter
xchg
xchg
mov
rcrl
cltd
gs
out
xchg
push
jno
xorb
mov
push
adc
hlt
add
lods
jne
sbb
pop
nop
push
push
fcompl
pushf
test
lea
lods
ret
enter
movaps
stos
and
adc
addl
sbb
lahf
jp
sbb
add
fmull
mov
sbb
and
roll
inc
sub
or
fidivs
sar
movsb
or
cli
push
push
lock
outsb
in
and
pop
add
xchg
sub
popa
outsb
dec
push
inc
pop
or
cmpsb
out
cmp
aas
orl
mov
add
daa
popa
jo
pusha
push
push
inc
mov
xorl
jae
fsubrl
sub
addb
out
and
xor
add
lret
push
daa
xor
push
cmp
shl
in
push
dec
and
add
pop
xchg
insl
pop
add
sub
lock
fs
int
jnp
jle
pop
push
or
mov
int3
fisttpl
jle
divps
pop
dec
xchg
or
sbbb
clc
int
nop
in
cmp
sbb
sub
and
ds
movsb
add
shlb
inc
pop
inc
jle
int3
imul
rorb
je
mov
or
mov
aaa
dec
push
test
xchg
sub
in
cmp
or
inc
mov
adc
mov
mov
mov
movq
sbb
pop
jnp
push
int
test
out
stos
mov
push
xor
pop
loop,pn
add
pusha
orb
add
and
push
mov
pop
and
jno,pt
ss
fdivr
xor
dec
in
rcr
inc
jae
aas
mov
mov
stc
inc
xor
std
imul
sbb
sub
bnd
clc
sbb
sidtl
push
in
rcl
call
sti
push
push
xchg
lds
or
pop
sub
inc
jp
push
pushf
xchg
std
push
fsubs
repnz
loope
push
jbe
fisttpll
and
outsl
ret
nop
outsb
push
in
xor
sahf
xchg
xor
pop
mov
and
int3
mov
or
xor
mov
jb
push
add
repnz
iret
mov
jns
test
jo
add
jbe
mov
xor
pop
pop
add
leave
test
push
hlt
mov
adc
addb
sub
push
ja
scas
popa
add
sub
xor
js
pop
lock
xchg
lret
inc
pushf
loopne
jb
cmp
cmp
mov
lcall
mov
orb
adc
push
sti
add
movsb
dec
sub
dec
xchg
test
adc
lock
movsl
add
or
jle
test
shll
xchg
insl
pusha
cmp
arpl
add
ret
cmpsl
dec
aas
testb
int
sbb
jo
push
push
movsl
mov
cmpsl
mov
add
shl
and
mov
inc
imul
mov
fadds
into
push
and
cmc
lea
or
in
pushf
jl
dec
dec
xor
roll
jno
add
les
lret
adc
sahf
mov
pusha
sbb
xchg
add
xchg
xor
mov
sbb
add
ljmp
loop
sti
or
daa
add
and
fs
fwait
or
adc
pop
cwtl
rclb
add
test
push
mov
bnd
mov
lcall
stos
push
add
xor
aas
adc
dec
dec
push
mov
sub
icebp
sbb
fists
jge
clc
sub
stc
push
incl
mov
sbb
fidivrl
mov
cmp
outsb
jns
flds
cmpsb
pop
mov
adcb
pop
insb
inc
mov
repnz
xchg
pop
sahf
mov
add
or
es
ret
int3
sbb
addb
sbb
or
xchg
dec
xor
xor
lret
insl
and
sbb
fmul
inc
daa
push
add
pop
sbb
jbe
mov
and
loope
add
cmp
inc
cld
adcl
push
std
test
testb
mov
xchg
imul
cld
out
jmp
pop
andl
movsb
and
lds
and
in
add
pop
hlt
sti
addl
fistpll
inc
or
ss
xlat
adc
adc
xlat
inc
cmpsb
jp
daa
std
cltd
add
mov
cmp
nop
xchg
mov
sub
insb
mov
jno
or
outsb
adc
out
cltd
aam
in
out
pusha
and
and
mov
mov
ret
daa
aad
repnz
std
pop
or
mov
data16
inc
mov
or
mov
pusha
mov
repz
jno
xor
mov
movsl
add
shrb
jl
pop
sbb
mov
bound
add
push
repz
cld
dec
orb
and
sbb
movsl
loope
adc
lea
jno
mov
jp
xorb
stos
aam
imul
in
hlt
cmp
adc
into
cmp
mov
fwait
mov
fistps
clc
inc
test
adc
and
mov
add
dec
dec
into
lods
push
pop
xor
mov
pop
sbb
in
jge
cli
lahf
dec
sbb
cld
test
dec
or
jo
mov
and
xchg
fmul
add
cmp
jbe
neg
ljmp
inc
adc
cs
xor
adc
xchg
int3
rcrb
inc
les
outsl
jp
out
push
hlt
or
out
movsb
test
mov
add
xchg
stos
sbb
cwtl
mov
mov
mov
cld
add
repnz
stos
lret
fildl
cmp
jg
repz
add
pop
lock
insb
rcll
mov
andb
mov
in
jo
and
in
ret
jno
pop
outsb
mov
xchg
cmp
mov
daa
clc
mov
lods
sub
mov
mov
cmova
cmpsl
pusha
fs
add
sub
mov
pop
add
ja
scas
das
call
repz
les
add
add
scas
mov
mov
cs
jl
push
cmp
mov
xor
out
mov
mov
pop
popw
scas
inc
mov
sub
xor
or
adc
push
cmp
cmp
pop
aam
mov
in
mov
cld
add
pop
push
inc
sub
jnp
neg
and
jmp
popa
in
add
movsl
outsb
aaa
aas
ljmp
mov
or
sub
and
jns
push
movsb
pop
dec
pop
and
push
or
inc
fstps
out
movsb
add
lret
call
push
or
or
adc
jl
mov
xchg
pop
and
xchg
push
pop
and
stc
and
rcll
or
add
or
shl
pop
push
or
addr16
add
mov
jle
mov
cmpsb
xchg
sbb
adc
jl
faddl
xchg
cwtl
repz
insl
push
les
lock
cwtl
inc
lds
push
aam
clc
pop
rcrl
push
sbb
add
jecxz
pusha
adcl
fsubs
add
add
mov
push
push
mov
or
loope
mov
insl
push
dec
ret
fwait
or
fidivrl
mov
add
adc
pop
mov
xchg
push
shlb
inc
int3
add
adc
pop
popa
cmp
adc
push
movsl
dec
mov
mov
enter
bound
jle
pop
into
and
adc
rclb
add
fdivl
sub
aam
cmp
pop
push
inc
jl
add
cs
mov
or
sub
mov
pop
add
mov
orl
nop
bound
sub
sbb
shrb
test
cmp
mov
xlat
inc
popf
xchg
xor
test
or
add
shrb
push
addb
movsb
shl
and
insb
push
cmp
adc
xchg
je
lds
es
jp
add
inc
popa
mov
xchg
nop
int3
movsb
cmp
clc
or
push
rorb
cwtl
xchg
cwtl
dec
sti
in
push
add
stc
aas
fs
xchg
inc
xchg
lcall
gs
xchg
insl
inc
mov
faddl
mov
push
cmpsb
jnp
mov
loop
inc
rcrb
sbb
fmull
jnp
nop
xor
add
rorl
push
in
mov
cmc
adc
and
les
iret
sbb
cmp
jno
mov
add
dec
mov
sub
aam
decb
jg,pt
xor
mov
or
push
nop
je
or
enter
adc
jecxz
sub
movsb
int3
or
mov
data16
inc
and
jge
shlb
pop
adc
test
jecxz
sub
popa
ds
shrl
outsb
pop
mov
xor
shll
call
mov
add
pushf
pop
jle
ret
shld
outsb
enter
or
xchg
xor
insb
repnz
mov
add
fildll
rol
xor
sbb
or
rorl
stc
or
js
sti
add
push
adc
push
pop
cmp
sub
sar
cld
xor
xorl
insb
cmp
xchg
or
stos
jo
icebp
jae
xor
or
lods
add
fsubrs
push
add
ret
test
imul
dec
insb
call
inc
nop
and
xchg
lret
mov
and
add
push
push
mov
and
jnp
push
cmp
xor
test
arpl
push
jmp
outsl
or
or
sbb
js
enter
rcll
daa
decb
or
pop
or
rclb
adc
add
stos
cmp
in
sar
and
mov
and
pop
not
mov
and
dec
push
subl
pop
or
add
roll
popa
fimuls
lock
insb
cmp
and
pop
mov
mov
and
js
inc
xchg
in
add
fwait
and
add
jo
arpl
loopne
and
sti
push
inc
rol
enter
or
fdivr
test
cld
add
movsb
mov
std
test
outsl
sub
ja
mov
sbb
jno
adc
int3
je
add
leave
or
shl
pushf
add
ljmp
ficompl
pop
and
mov
ja
leave
xchg
cltd
or
sbb
mov
pop
adcl
pop
fsubs
cmp
cs
cld
pop
add
loopne
in
xor
test
jmp
repz
pop
pop
sbb
push
push
pop
in
fs
imul
adc
push
add
sbb
push
loope
push
dec
lods
outsb
adc
mov
add
aas
mov
jae
pmulhw
outsl
xchg
cld
fcmovb
add
push
inc
pop
faddl
push
lret
pop
mov
test
lcall
dec
add
or
inc
inc
add
int
push
pop
push
xchg
je
and
mov
xor
fidivrl
sbb
call
outsb
in
mov
and
push
or
sub
and
jg
adc
fmul
aaa
adc
add
in
fldt
add
lret
lods
adc
into
add
sub
lea
adc
in
addl
pop
add
fsubrs
inc
push
add
sub
mov
add
cmc
mov
push
push
mov
ret
sbb
mov
jne
hlt
inc
ret
mov
ljmp
and
dec
dec
jle
mov
mov
arpl
dec
movl
repnz
shrl
faddl
test
cltd
in
jl
add
out
int3
sbb
or
aad
clc
inc
push
inc
insb
cmpsb
pop
test
rclb
add
shr
stos
mov
sub
aaa
outsb
enter
test
pop
fmul
add
aaa
notl
outsb
aas
rcl
mov
fmull
addr16
test
sbb
mov
dec
and
insb
test
subb
sbb
mov
jmp
aaa
sbb
clc
lods
xchg
sti
push
outsl
aad
lock
stos
js
sbbl
movups
repnz
popa
aas
cltd
xchg
fdivl
and
and
push
in
and
lds
pop
sub
or
xor
aad
sub
cmp
inc
adc
xchg
or
inc
dec
mov
cmpsl
das
subb
pop
nop
xchg
pop
cmpsb
push
movsl
mov
add
dec
inc
mov
popf
xor
lods
andb
cmpsb
add
lahf
and
sbb
mov
mov
inc
int3
js
hlt
lds
add
cmpsl
and
add
loope
inc
or
push
rolb
mov
lock
add
mov
andb
add
enter
lret
add
xchg
rolb
inc
dec
dec
dec
fnsave
jnp
or
fs
pop
and
outsb
movsb
rcrb
out
mov
or
pop
or
stos
andb
sub
fcmovbe
daa
ret
xchg
push
pop
jecxz
in
mov
mov
or
pop
xor
xor
cwtl
popa
lods
sub
addb
xchg
add
fldt
test
cmp
mulb
push
sahf
sbb
pusha
xchg
cmp
enter
fiaddl
lcall
adc
imul
and
and
ljmp
mov
push
sub
mov
lock
fwait
nop
subb
out
or
push
jns
ja
add
movsb
dec
add
out
clc
dec
xchg
nop
adc
fwait
jo
pop
add
stc
orl
stos
imul
mov
andb
jg
popa
gs
lods
mov
cs
lods
add
jl
adc
sub
xorb
loopne
imul
cmp
nopl
int3
lahf
sub
clc
icebp
test
dec
neg
xorb
rcrl
sbb
xchg
in
pop
mov
fcom
psrad
aas
sti
outsl
test
inc
pop
ljmp
and
shl
push
mov
cwtl
sbb
jb
jo
or
movl
push
and
fwait
push
adc
addl
sbb
push
lock
and
in
and
mul
push
aad
add
cmp
mov
outsb
and
mov
add
in
push
jle
out
imul
shl
jecxz
add
sbb
mov
pop
sbb
fxch
pop
xor
insb
dec
popw
adc
jae
inc
inc
iret
mov
bound
addb
mov
pop
push
neg
sbb
test
cmp
xchg
inc
push
or
add
leave
pop
repnz
mov
pushf
add
test
aam
sub
dec
pop
ja
or
jmp
icebp
imul
loopne
aaa
adcb
stc
pop
mov
aas
add
cmp
and
test
mov
mov
push
lcall
test
mov
add
xchg
jns
loopne
ret
clc
jmp
gs
sbb
mov
jne
adcb
sbb
and
inc
dec
adc
inc
clc
popaw
mov
adc
add
add
call
lea
jl
fcompl
mov
call
enter
jnp
pop
xchg
dec
sahf
test
cmp
imul
add
sti
add
add
loope
cli
fistpl
clc
inc
jle
movb
repz
fisttps
icebp
dec
sub
adc
cmp
xor
push
daa
add
lods
rclb
in
in
test
je
out
add
testl
sbb
pop
aas
enter
repnz
pop
lret
fwait
xorb
inc
and
int3
fldenv
add
cmc
test
push
add
mov
lret
adc
or
jl
pop
pop
pop
sub
cli
sub
in
stos
mov
pop
fwait
cmpsl
rolb
sbb
stos
jbe
sti
test
sahf
add
psrld
lea
add
int
cmpsb
xchg
or
sbb
pop
test
fbld
pop
add
pop
and
push
int3
in
out
fcmovb
cmp
add
or
call
stc
mov
push
cmp
add
push
xlat
add
mov
test
aam
and
mov
jne
dec
test
cltd
add
arpl
into
push
pushf
push
sub
add
jmp
dec
jne
sbb
pop
push
xor
or
jnp
daa
mov
subl
jl
adc
add
sub
fdiv
subb
add
cmp
xor
add
xchg
mov
nop
adc
addb
pusha
mov
xchg
jl
pop
mov
sbb
and
jae
sub
or
outsl
xor
xchg
cwtl
adc
mov
sub
test
push
xchg
pop
mov
xchg
rolb
das
jecxz
dec
and
pop
mov
cmp
mov
add
pop
repnz
or
sub
stos
xor
cmp
push
jp
xchg
rcr
dec
cmpsl
je
jge
push
stos
or
push
test
lret
aad
push
xchg
adc
sbb
xchg
push
shr
and
adc
int
adc
mov
and
popa
jae
test
xchg
lods
jo
add
sbb
clc
mov
scas
cld
ljmp
fsts
mov
fsubl
js
mov
xchg
add
addl
or
jp
testl
test
cmc
test
dec
leave
add
add
xchg
ljmp
sbb
lods
adc
stos
insl
sar
or
add
fcomp
and
test
xor
lret
adc
int3
cwtl
cmp
ffree
das
in
cmp
sbb
clc
popf
inc
adc
and
outsl
ljmp
outsb
and
in
add
in
or
and
sbb
hlt
sbb
add
pop
fadds
xchg
xchg
mov
push
mov
add
mov
xor
push
cmc
push
lock
or
or
iret
jmp
adc
nop
out
pop
enter
aaa
inc
inc
pop
xor
sti
pusha
lock
addb
test
pusha
push
push
add
xlat
fs
pop
or
pop
add
icebp
movsl
mov
shll
enter
not
dec
mov
jno
adc
and
mov
mov
cmp
lea
xchg
jmp
xchg
loop
test
jle
fs
pusha
adc
adc
fildl
clc
lret
inc
jle
and
jb
push
out
jp
lods
sbb
pushf
addr16
ffree
push
jbe
add
mov
lods
fninit
push
fdivrs
pop
and
shlb
add
mov
cmp
mov
movsl
jnp
pop
sub
outsl
mov
jbe
adc
inc
and
inc
add
js
pop
pop
mov
test
cld
js
nop
lods
clc
or
sub
dec
fs
and
push
cmp
mov
sbb
pop
add
in
mov
pop
jno
sub
dec
test
mov
mov
xor
lods
or
adc
or
xor
cmpb
movb
ja
orl
lods
movsl
add
repnz
loopne
sub
push
jae
loop
test
daa
inc
insb
xor
jl
int3
xchg
push
push
aas
lods
push
cmpb
popa
adc
xor
sbb
xorb
dec
lret
sahf
and
bound
loopne
jo
jmp
add
pop
dec
xchg
and
sub
and
in
movsb
popf
std
pop
mov
jecxz
push
jle
repnz
pop
jl
xor
push
adc
lcall
dec
inc
lods
rol
repnz
xor
jb
jo
sbb
data16
pop
mov
lcall
call
andb
out
insb
cmp
nop
push
mov
cld
add
popa
testl
sti
xchg
push
or
and
dec
push
mov
add
lea
rcrb
xor
jb
add
testb
outsb
add
lea
add
sti
push
ds
xchg
mov
push
mov
leave
test
push
inc
pop
test
add
mov
and
push
test
les
xchg
sub
sbb
add
sbb
in
sub
icebp
or
test
pop
movsb
leave
push
das
pusha
mov
iret
inc
sbbl
add
pop
cmpsb
jne
insb
fstps
dec
inc
mov
stos
std
jl
cmp
cmc
stos
dec
idivl
adcb
pop
leave
cwtl
mov
mov
add
cmpsl
add
jns
arpl
sub
inc
out
out
sbb
and
cld
imulb
jo
les
stos
jae
sbb
or
add
lods
testb
roll
pop
dec
add
data16
in
add
xor
ltr
inc
aas
fmuls
xchg
dec
and
movsl
mov
add
adc
add
in
fs
inc
xchg
sbb
inc
sub
xchg
dec
mov
add
mov
enter
and
in
cmp
subb
inc
pop
mov
enter
add
add
jecxz
rorb
sbb
xor
xor
sbb
lret
fistl
or
sub
mov
adc
and
dec
mov
les
daa
out
inc
repnz
pop
imull
test
adc
iret
mov
lret
jmp
pop
xchg
divb
push
data16
mov
nop
movsb
stc
imul
add
or
sbb
fwait
loopne
mov
stc
into
xor
mov
js
push
out
outsb
aad
inc
mov
push
jnp
jle
or
insb
je
out
iret
xchg
jmp
rclb
jl
test
add
scas
mov
cmp
inc
mov
loop
or
js
repz
mov
clc
cmp
push
sbb
dec
cmp
sbb
cmp
insb
inc
xchg
je
lock
fisubl
add
out
addb
jl
cltd
bound
dec
cs
inc
or
lds
sti
dec
icebp
adc
lds
xchg
cld
and
aaa
dec
xchg
test
mov
add
cmp
dec
push
add
jne
decb
test
and
or
call
push
add
addb
cmp
lret
nop
jne
or
and
mov
sbb
push
insb
test
push
leave
xor
repnz
sub
jg
pop
sbb
sbb
test
test
sub
and
add
jmp
insb
jge
adc
hlt
and
or
sub
add
cmp
movsb
sbb
stos
mov
pop
lret
shld
enter
rcrl
in
pop
mov
sbb
add
push
int3
repnz
xchg
inc
enter
add
or
adc
movb
push
jl
arpl
add
in
mov
add
imull
aaa
push
or
subb
push
pusha
lods
push
add
push
rcrb
aad
clc
add
iret
add
add
lock
xchg
rcrl
jge
in
call
lods
inc
xchg
movsb
shrb
faddl
sub
mov
jne
sarl
pop
aas
into
fwait
jge
stos
add
or
sbb
mov
jbe
or
shll
in
sbb
xlat
test
les
jl
cs
movzbl
xor
icebp
sub
or
mov
in
xor
cs
out
cmp
add
lret
and
pop
add
arpl
inc
mov
imul
std
and
sub
rolb
push
das
and
fiadds
sbb
ss
fsub
mov
push
add
test
adc
sti
not
adc
stc
lock
fs
mov
adc
ficoml
mov
testl
xor
mov
dec
mov
jbe
add
cmp
ret
test
in
dec
xchg
sti
pop
lods
inc
adc
pop
daa
add
stc
adc
negl
cmpsb
les
add
mov
or
add
dec
mov
enter
test
icebp
test
add
fwait
or
xchg
xor
jno
jle
cmp
loop
fsts
rclb
repz
mov
jl
cltd
pop
movsl
mov
xor
inc
add
adc
inc
stos
in
icebp
sbb
sbb
orb
ds
popa
mov
mov
xchg
rcrl
cmp
push
test
xchg
dec
ss
sub
dec
mov
add
pusha
out
stc
data16
inc
xchg
loope
push
xor
add
out
fidivrs
xor
or
pusha
lcall
push
push
rol
cmp
std
or
lcall
psubsw
push
out
enter
sub
sbb
int
add
enter
dec
cld
test
lods
stos
cmp
or
mov
movsl
or
jb
ja
push
push
stos
jno
add
dec
ret
lock
adc
sub
or
clc
cmp
sbb
cmp
cld
rclb
outsb
or
rcll
fs
pop
cs
bound
adc
push
test
cwtl
xchg
push
dec
xchg
inc
jp
sub
xor
lock
jecxz
jne
cwtl
aaa
adc
cld
sbb
xchg
inc
into
jnp
cmp
aam
push
shl
fisttpll
outsb
inc
add
sarb
repz
jb
int
out
jne
out
push
filds
sbb
addr16
jae
pop
add
js
cli
addl
adc
pop
and
xchg
add
mov
push
nop
and
pop
cmp
std
movsl
xor
add
in
rcrb
cltd
sub
das
adc
or
imul
fadds
push
incl
mov
int3
int3
cwtl
add
sub
fsincos
mov
enter
inc
jge
mov
sbbl
sub
pushf
cld
repnz
in
and
rorb
cmp
inc
add
int
inc
dec
sub
or
pop
push
das
or
jne
add
pop
bts
push
jg
mov
js
adc
mov
loope
push
add
inc
in
hlt
or
stos
mov
int3
add
pop
hlt
mov
in
movsl
cmpsl
bound
xor
sbb
test
icebp
jp
push
loop
jp
imul
sub
cmpsl
jne
cwtl
cmp
rcl
or
test
rol
add
std
ret
sub
lods
add
add
das
add
mov
sub
add
cmpsb
and
mov
sbb
add
movsl
shlb
cltd
and
mov
outsb
mov
sbb
add
xchg
cmp
sub
icebp
sbb
data16
nop
in
or
dec
loope
add
jmp
cmp
dec
xchg
sub
or
movsb
mov
xchg
shrb
test
ret
inc
arpl
push
daa
cwtl
jo
inc
movd
or
or
pop
jns
mov
jge
xchg
int3
mov
pop
sub
rolb
jle
int3
flds
adcb
xor
loope
pop
testb
fcompl
lods
and
and
add
mov
xor
out
cmp
add
aas
out
pop
call
loopne
inc
sbb
add
jl
popf
jbe
roll
ret
xchg
or
add
add
or
and
inc
je
ds
loop
imul
and
data16
mov
jae
daa
add
cmp
push
rol
or
ljmp
xor
dec
icebp
jb
cmc
xchg
sbb
lret
std
orb
int
pop
cmp
and
sub
sbb
cmp
out
jnp
clc
call
pop
mov
lret
xchg
add
ljmp
add
pop
inc
jns
push
push
pop
nop
sbb
jo
pop
int3
rolb
cmp
xchg
xor
sbb
adc
hlt
pusha
mov
sbb
cmp
or
sbb
and
xor
add
push
pop
cs
call
push
out
push
dec
jecxz
adc
mov
cwtl
add
lods
cmc
out
in
ret
lea
inc
or
sbb
testl
loop
cld
pusha
pushl
mov
pop
pop
or
push
inc
push
fadds
das
and
mov
hlt
sbb
inc
push
xchg
pop
bound
shlb
int3
into
sub
hlt
mov
adc
sbb
sbb
pop
setl
sbbl
lahf
mov
push
nop
fs
cmp
pop
int3
int
mov
push
daa
dec
cld
movsl
mov
mov
dec
add
lret
mov
add
xlat
scas
in
leave
push
jmp
cmp
test
in
jnp
lret
mov
or
xchg
or
mov
repnz
fwait
mov
std
pop
xchg
unpcklps
pop
cmpl
cmp
sbbb
test
inc
mov
decb
enter
int
movb
mov
jnp
insb
outsb
in
inc
or
mov
push
inc
add
orb
popf
fstpt
call
or
ss
adc
dec
jge
adc
and
sub
pop
sub
cmpsl
push
add
out
shll
sbb
jl
mov
xchg
ja
push
lock
cmpsb
jbe
adcb
pop
in
rcrb
aad
jnp
add
xor
fdivs
or
cltd
pop
or
xlat
pushf
sbb
pop
mov
add
pop
push
scas
sub
fmuls
sti
addr16
repnz
mov
outsb
cwtl
mov
mov
sbb
sbb
cli
dec
into
pop
push
xchg
dec
data16
sub
pop
fs
pop
and
les
call
movsb
add
mov
lret
sub
mov
cmc
stos
and
jo
push
clc
add
inc
adc
pop
add
cmp
dec
cld
mov
sub
orb
sti
push
lods
mov
jge
out
pusha
pop
outsl
and
sar
and
mov
adc
push
scas
popa
dec
add
add
out
outsl
pmuludq
nop
pop
sbb
test
jp
dec
cwtl
or
or
add
stos
pop
les
in
dec
xor
dec
jle
push
lods
xor
cmp
adc
lods
jp
add
push
mov
test
adc
pop
repnz
and
call
insb
sbb
sub
pop
pop
lds
imul
add
mov
dec
je
jmp
pop
jo
movsl
pop
pop
cmp
dec
pusha
sub
or
daa
add
enter
movb
cmc
dec
or
mov
add
repz
ljmp
sahf
cmp
and
mov
rcrb
into
in
test
repz
mov
ret
add
dec
fwait
pop
add
movsb
sub
inc
leave
mov
sub
decb
fistpll
dec
mov
rol
jo
stc
xor
adc
outsb
mov
add
addb
add
mov
loope
repnz
add
mov
repz
pop
jns
xchg
mov
xchg
cmp
xchg
push
incb
adc
lods
es
add
push
sarb
push
cmc
shr
cmp
mov
add
movsb
ret
loope
fisubl
lods
cs
movsb
xchg
push
or
std
mov
ficoml
dec
push
mov
pop
inc
adc
nop
repz
xor
jl
inc
enter
push
mov
addl
cmpb
xchg
subb
adc
dec
xchg
loop
rorl
insb
nop
andb
jno
dec
mov
es
adcb
sbb
add
adc
adc
aad
mov
adc
or
add
pop
pop
mov
adc
aam
cltd
test
pop
cmp
add
mov
sbb
in
ret
mov
nop
dec
addl
xlat
imul
and
pop
aam
pop
mov
mov
dec
or
adc
add
cmpsb
cmp
jo
cmp
mov
pop
pusha
adc
add
adc
daa
and
add
lahf
fstpt
dec
sub
dec
out
mov
pushf
push
add
insl
fcoml
cmpsl
mov
in
jp
sbb
aaa
pop
pop
jns
push
adc
je
jl
test
enter
adc
or
mov
shrb
xor
hlt
mov
lods
dec
mov
push
je
stos
jecxz
out
loopne
pop
jno
daa
sbb
cmp
mov
xor
xchg
push
mov
jmp
adc
sbb
aad
mov
xchg
push
cld
add
pop
pop
inc
mov
jp
enter
in
scas
add
rcrb
xchg
call
xchg
xor
push
push
xchg
push
clc
mov
or
out
push
enter
push
and
incb
adc
fsub
js
sbb
sub
sub
in
mov
aam
enter
cmpsb
in
jmp
adc
lods
mov
imul
cs
adc
xchg
cwtl
je
int3
rcll
xor
add
mov
cmp
mov
cmpsl
sarl
pavgw
es
xchg
lret
into
jp
sbb
hlt
pop
mov
leave
pop
fucomip
scas
jae
push
loope
sub
in
repnz
enter
test
inc
and
mov
stos
fs
inc
js
lock
out
addb
jo
aam
xor
sbb
jle
add
fmull
jne
sti
push
add
andl
sbb
add
pop
lock
inc
ja
cwtl
push
push
mov
add
mov
or
adc
clc
flds
cmp
pop
gs
jecxz
mov
or
add
repnz
or
inc
vmovhps
sbb
push
push
out
xlat
lea
push
add
push
dec
fwait
add
aad
adc
xor
pop
mov
cs
add
cmp
mov
movsl
mov
mov
mov
and
push
xor
sub
ljmp
or
fs
les
sbb
sub
add
lock
andl
stos
std
subl
cmpsb
out
add
imul
outsl
and
clc
add
add
jo
mov
xor
mov
lret
mov
jnp
or
jae
aaa
mov
fadds
sbb
loope
and
lods
add
mov
arpl
aas
push
repnz
jns
add
pop
sti
out
or
add
mov
sub
sub
fwait
shrl
sbb
or
mov
out
add
pop
or
loop
rcll
cs
mov
inc
cmp
xor
jecxz
push
je
dec
fsubr
jb
jge
sub
ret
sub
in
roll
sbbb
popa
cmp
bound
pop
xor
jo
insl
push
add
mov
xor
adcb
add
sbb
xor
cmp
stos
mov
fwait
ljmp
bound
call
pusha
add
gs
pop
lock
sbb
aam
and
lods
ss
add
cld
adc
in
xor
bound
loope
fsubr
lahf
add
scas
adc
cwtl
push
xchg
cwtl
or
mov
xchg
or
xchg
stc
jns
adc
lods
dec
mov
lock
dec
mov
mov
push
push
sbb
add
and
jns
add
fwait
icebp
ja
pop
jp
add
xchg
pop
push
or
jmp
add
mov
stc
test
sbb
add
jbe
cld
lret
mov
add
add
add
xlat
dec
inc
lods
jl
jl
mov
loop
push
sbb
add
lods
mov
out
daa
mov
adc
sub
hlt
dec
out
inc
inc
pop
or
push
mov
pop
sahf
stc
xor
cmp
shlb
sub
addl
lock
xor
roll
icebp
dec
out
and
add
adc
mov
push
and
push
add
mov
sahf
rorb
sbb
sbb
push
iret
jl
or
daa
cmpsl
js
inc
inc
dec
cmp
fwait
insb
push
mov
loope
xor
xor
mov
add
sub
mov
or
lock
add
pop
cwtl
mov
pop
or
andb
popf
inc
add
mov
jns
lret
dec
or
jmp
pusha
movsb
xlat
or
lds
adc
push
pop
xchg
sbb
fwait
cwtl
dec
jbe
add
fsubs
and
sub
outsl
inc
adc
mov
cmp
fldt
push
nop
orb
xchg
mov
repnz
cli
sbb
ss
ret
mov
xor
adc
sbb
fmull
cmp
iret
mov
shrb
dec
lds
jp
mov
fsubr
ret
insb
add
test
add
lret
scas
cwtl
add
mov
mov
cld
or
fimuls
cmpl
mov
inc
sbb
dec
sbbb
out
stc
insl
dec
adc
test
gs
test
test
movsl
sbb
add
jge
cltd
mov
mov
cmc
fldl
mov
sub
xchg
sti
sbb
xor
out
xor
lock
lock
lock
xchg
cwtl
jl
pop
cs
rorb
xor
add
add
add
inc
and
push
dec
sub
or
mov
push
xchg
add
lock
sbb
pop
inc
xor
push
xchg
jae
add
mov
xchg
mov
pop
cmp
push
add
ret
xor
aam
dec
push
call
jbe
sbb
or
cmp
iret
mov
sub
stos
mov
aas
mov
dec
mov
xor
int3
aad
push
je
test
imul
lret
and
add
xchg
in
push
jo
xchg
mov
pop
xor
cld
mov
dec
add
dec
stc
xchg
fsubl
cmp
inc
push
ljmp
sub
outsb
add
pusha
and
out
movsb
mov
xchg
enter
mov
scas
inc
jl
xchg
lock
or
push
push
fwait
test
add
jnp
stos
add
movsl
mov
in
gs
mov
dec
jno
lods
adcb
inc
push
and
add
mov
fidivrl
insl
jecxz
add
flds
aam
or
nop
inc
xlat
sahf
cmc
and
leave
mov
dec
jnp
rolb
clc
and
sub
mov
gs
loop
sub
push
out
or
in
add
and
mov
xchg
mov
jle
cmp
and
mov
inc
inc
sbb
inc
pop
mov
in
cltd
sub
push
aam
dec
loope
mov
sbb
mov
mov
sbb
nop
pop
adc
xor
add
xor
cwtl
and
cld
sub
mov
popa
cmp
mov
add
rol
push
and
test
mov
pop
in
cmp
xor
loope
or
inc
flds
loopne
or
sbb
mov
mov
xchg
sbb
sub
add
cmp
or
adc
jae
test
bound
aam
adc
lcall
stos
andl
dec
mov
add
xchg
out
dec
inc
cltd
loopne
sbb
add
fwait
in
push
pop
sbb
in
cwtl
loope
sbb
sbb
sbb
scas
dec
xchg
xchg
shlb
arpl
sub
adc
xor
bound
addr16
push
inc
cmp
mov
mov
bound
sbb
inc
or
fs
cmpb
lods
jge
repnz
ja
sarl
lock
test
xchg
cmp
push
sub
jecxz
add
jbe
mov
and
test
mov
pop
push
sub
inc
lret
sub
movsl
mov
push
cmpl
cwtl
xchg
inc
add
jns
pop
add
push
pushf
shlb
fldl2t
roll
js
testl
sar
jb
mov
adc
adc
mov
add
arpl
and
andb
jecxz
dec
hlt
clc
xchg
movaps
add
out
stos
mov
sbb
or
and
je
ret
in
mov
loope
enter
mov
adc
lret
call
xchg
into
add
repnz
inc
xchg
and
jbe
push
jnp
add
mov
mov
add
orl
adc
insb
lods
jae
mov
fiaddl
test
into
xorl
call
cmp
dec
jnp
sbb
mov
push
into
add
adcb
jns
add
cmp
cmp
jge
sar
inc
out
add
popf
lea
xor
pop
add
stc
int3
test
je
sbb
mov
aaa
pop
push
jge
xchg
xor
lret
cmc
and
psubd
pop
and
ret
js
add
pop
ror
push
pop
lds
jmp
scas
mov
add
jae
mov
xchg
mov
pop
jl
push
mov
aad
aaa
sldt
mov
add
dec
hlt
pop
sub
pop
add
sbb
and
mov
cmp
fldl
sbb
add
push
inc
adc
insb
rol
mov
leave
jg
xchg
repnz
add
into
cmp
add
mov
fdivrs
add
sbb
gs
sub
popa
scas
movb
dec
pop
enter
lock
xchg
push
or
push
cmpsl
ret
inc
mov
imul
scas
lret
inc
mov
add
in
adc
jnp
sti
sbb
dec
int
fildl
repz
dec
enter
xchg
scas
or
int
test
add
dec
dec
stc
rclb
xchg
push
inc
orb
cmp
xor
push
cmp
sub
repnz
movsl
pop
push
mov
fistpl
ret
add
rorl
xor
adc
popa
cmp
repz
iret
add
mov
sub
inc
jne
add
fcoml
jle
in
aam
fiaddl
xchg
pop
aaa
jo
mov
pop
adc
push
je
std
mov
cmp
sti
sbb
inc
or
in
dec
add
clc
add
hlt
dec
aam
clc
dec
pusha
adc
fnstsw
xadd
fisubs
int
mov
test
adc
jmp
in
push
adc
out
daa
incl
movsb
into
push
inc
icebp
mov
ja
sti
dec
add
movb
mov
add
in
mov
mov
fadds
mov
es
je
das
cmp
andb
or
sub
mov
rolb
aam
inc
mov
jno
adc
loope
outsb
add
sub
xor
mov
es
xor
daa
jle
shlb
inc
movntq
out
les
add
jbe
mov
add
test
test
add
aas
and
xchg
sub
filds
pop
ss
insb
adc
adc
pop
xor
fsub
jo
jecxz
xlat
es
push
pop
mov
adc
subl
into
out
xor
fld
insb
add
lret
cli
bound
pop
push
mov
pop
add
add
ja
add
inc
add
adc
in
or
push
or
push
sbb
mov
hlt
std
mov
rcrl
negl
stos
push
dec
or
in
movsb
jb
add
pop
push
aad
lahf
js
jnp
inc
push
xchg
add
vcmpps
push
jmp
or
mov
aaa
or
add
jl
je
jnp
lods
xchg
cmp
repz
dec
add
pop
outsb
movsl
fisubl
ljmp
add
xor
dec
clc
adc
enter
daa
add
into
ds
mov
pop
lock
add
dec
testb
fidivrs
cmp
sbb
aam
push
outsl
sbb
xchg
and
add
rorb
lahf
fisubs
addb
scas
add
mov
imul
mov
les
push
and
pop
push
add
out
dec
xor
stc
and
add
inc
push
cmpsl
xor
mov
add
mov
lahf
test
lock
inc
sbb
repz
addr16
insb
cmp
pop
xchg
dec
test
jg
adc
mov
rorl
fsubs
ret
iret
and
in
fnstsw
cld
add
mov
xchg
jne
faddl
test
dec
ds
add
jp
mov
jl
add
xchg
pop
dec
push
lcall
adc
xor
dec
enter
cmpb
mov
nop
jns
xor
into
pushf
xor
popa
and
pop
sub
xor
inc
scas
cmpsl
jmp
int
xchg
lret
dec
ret
repnz
mov
push
xor
pushf
mov
cld
pusha
inc
cmp
icebp
pop
sub
add
out
imul
pop
movsb
dec
jbe
xchg
iret
xor
mov
nop
cmpsb
cmp
push
sbb
cmp
movl
imul
das
aam
mov
dec
jno
xor
std
jle
sub
mov
xchg
pop
test
pusha
mov
mov
sub
sarl
stc
add
inc
cmpsl
jge
pop
pop
add
dec
ret
cli
inc
out
mov
jb
sti
bound
popa
test
push
sbb
mov
js
sbbb
mov
mov
and
shrl
movsl
mov
adc
fwait
mov
shll
hlt
nop
aaa
xor
ret
add
sub
push
adcb
mov
je
fnsave
add
lahf
mov
dec
mov
push
lea
add
gs
ret
mov
popl
fwait
incl
mov
lret
pop
popa
data16
xchg
gs
push
mov
loop
mov
add
cmp
cltd
out
add
xchg
mov
push
inc
clc
rorl
test
add
cmp
add
scas
sub
jo
push
je
xadd
in
xchg
add
leave
sarl
orb
test
loopne
nop
cmp
loop
mov
add
cmovbe
add
aad
cltd
xor
cmp
fdivrs
sbb
pop
outsl
mov
adc
rolb
in
jns
nop
cmp
xchg
jbe
cmp
inc
dec
dec
mov
stos
xlat
pop
push
cltd
adc
add
mov
cmc
add
push
xchg
fld1
sbbl
add
pop
mov
stos
shrb
testb
add
add
xor
cltd
scas
ret
loope
sahf
in
pop
lods
xor
popf
add
std
cmpsl
sbb
xchg
cmp
repnz
sub
mov
fcomps
jb
sub
rcrl
and
and
mov
add
mov
in
mov
ja
adc
inc
outsl
leave
sbb
lods
and
inc
jae
pop
lds
or
ss
adc
or
xchg
sub
xor
add
push
mov
aam
sbb
mov
insb
add
mov
mov
push
push
xor
cmp
and
fisubrl
lahf
inc
xor
in
icebp
mov
mov
mov
mov
inc
inc
roll
xchg
sub
rcr
push
push
push
testb
hlt
lods
inc
int3
pop
ds
aaa
sub
shrb
jo
les
roll
shlb
out
int
and
mov
mov
in
inc
dec
xchg
push
arpl
test
pop
add
cmp
add
orl
or
lret
enter
icebp
and
add
jo
sarb
cmp
push
lock
aaa
adc
sbb
das
mov
je
pushf
xor
add
jns
cmp
and
jmp
in
out
mov
out
outsb
inc
ret
jbe
clc
test
scas
insl
or
add
lret
icebp
jmp
in
pop
pop
cmp
xorl
gs
mov
mov
xor
or
adc
pushf
sbb
mov
dec
dec
or
jle
shrb
or
jns
pop
push
ja
inc
cmp
mov
adcb
outsb
mov
popf
clc
les
out
sbb
sbbl
lds
jbe
fs
add
dec
pop
mov
jle
dec
mov
adc
dec
cmp
mov
add
cwtl
lock
fcmovne
xchg
sub
call
adc
sbb
mov
sub
cmp
in
inc
mov
inc
xchg
rcr
ljmp
aas
push
sbb
out
movsl
jb
fs
das
cmp
or
push
orb
incb
xor
insb
push
mov
andb
sbb
fsubrs
ret
int
inc
fwait
xchg
or
enter
sbb
les
mov
repz
xchg
test
test
pop
enter
clc
pop
inc
cmc
jo
rolb
fsubs
mov
hlt
sub
das
adc
outsl
xchg
mov
add
sbb
cwtl
mov
dec
add
verw
mov
xor
mov
pop
cwtl
pop
shl
push
jge
pop
add
std
pushf
jno
sti
add
fucomip
or
and
mov
inc
je
fcoms
in
arpl
push
push
mov
push
add
push
sahf
clc
cmp
or
jb
sub
add
or
pop
mov
mov
pusha
std
add
cmp
or
push
pop
insb
das
shrb
mov
ja
shr
xchg
adc
out
xor
xorb
rol
mov
imul
mov
and
jb
dec
fstpl
add
mov
or
adcb
loope
cmpsb
jno
loopne
iret
sub
mov
cld
loop
mov
scas
xchg
adc
and
add
cmp
pop
push
mov
addb
add
adc
cmpsl
cltd
add
adc
inc
push
ret
add
and
pop
sbb
outsb
divb
gs
daa
loop
jg
push
clc
inc
sarb
sub
hlt
jp
add
sbbl
adc
mov
jecxz
push
jne
loope
imul
xchg
pusha
jge
jl
xor
ss
mov
pop
mov
add
dec
fistpl
ljmp
mov
adc
jbe
cmp
dec
or
pop
push
loope
movsl
or
int3
add
xchg
pop
jg
add
sub
stos
jecxz
pop
sarl
out
push
movsl
pop
push
push
or
cwtl
ljmp
add
push
mov
cmp
or
sbb
in
xchg
mov
mov
gs
or
cmp
cmp
push
nop
call
rolb
xchg
fdivrs
mov
sbb
and
push
and
pop
out
sub
xor
sbb
repz
data16
out
or
jle
imul
jg
jl
add
lahf
push
cld
mov
testl
test
xor
insl
clc
add
lock
mov
push
hlt
jnp
orb
aaa
push
ret
lea
mov
orb
pop
add
add
pusha
lcall
xchg
sbb
pop
mov
fwait
inc
and
inc
add
icebp
jl
pop
dec
imul
mov
ret
int3
add
loop
pop
lret
stos
xchg
mov
mov
add
and
rolb
inc
add
xchg
cmpsb
and
int
pop
and
mov
add
rcl
xchg
mov
xor
dec
push
mov
lods
out
pop
or
aaa
add
and
inc
subb
aas
stos
mov
push
add
movsl
cmc
frstor
mov
and
add
sbb
mov
call
cmp
xchg
jne
out
push
inc
mov
cmpsb
push
out
bound
pop
or
call
sbb
jbe
js
cli
repz
add
add
fimull
je
cmpsb
jecxz
in
stc
in
xchg
jno
daa
mov
insl
sub
xchg
cmpsb
dec
adc
inc
add
dec
into
pop
push
add
mov
fidivl
and
lock
pop
add
call
mov
sbb
sahf
cld
add
add
out
and
jp
mulb
adc
test
lods
xlat
mov
aad
jl
dec
add
mov
clc
sbb
push
data16
fisttps
inc
or
push
cmp
pop
inc
addr16
push
and
inc
fnstsw
push
std
clc
clc
add
je
and
push
lcall
stos
and
cmp
push
je
pop
ffree
jno
xorl
sbb
push
pop
outsb
in
xchg
add
jb
pop
cmp
and
rorb
popa
mov
or
add
or
sbb
seto
and
mov
sbb
pop
add
xchg
push
and
lods
std
test
fstpt
add
jo
mov
pusha
scas
negb
arpl
xor
push
dec
sbb
add
mov
aas
ljmp
lret
xchg
jl
pop
xor
das
add
add
jecxz
out
dec
jmp
pushf
test
es
sbb
clc
cmp
push
or
call
enter
repnz
jae
call
cmpb
icebp
idivb
ds
in
dec
adc
cltd
push
andb
je
pop
and
ss
repz
addl
in
add
cmovle
mov
pop
and
shlb
dec
clc
rolb
stos
ss
adcl
push
push
and
std
rcr
ficomps
cmp
add
test
adc
add
sub
mov
scas
add
cmp
mov
fldl
loope
lods
repz
dec
mov
xchg
filds
int3
add
xor
add
sbb
imul
xor
scas
call
loopne
add
xor
jne
jg
clc
inc
pop
stc
xor
dec
jmp
aaa
add
loop
xor
ljmp
pop
pop
add
add
push
dec
add
cmpsl
xor
outsl
into
pop
lock
mov
gs
mov
add
mov
lret
add
pop
sti
popa
xchg
and
das
adc
int3
lahf
loopne
pop
cwtl
cwtl
adc
adc
jne
jmp
inc
sub
rorb
lock
and
xor
push
addr16
es
mov
cwtl
add
and
add
fcomps
hlt
pusha
sub
or
aas
movsb
pop
pop
and
pop
sbb
add
ljmp
or
sub
outsl
xchg
rolb
inc
adc
jne
inc
test
sub
cmpsb
ss
out
pop
xchg
icebp
add
test
fistps
mov
es
xor
add
repz
add
xor
inc
add
daa
pusha
aaa
stos
popf
mov
dec
add
je
lret
icebp
pop
and
add
fistps
hlt
or
mov
jge
inc
dec
int3
push
xor
xorb
jo
mov
bound
add
mov
test
jns
cmp
add
jmp
shr
daa
lock
jp
jecxz
into
ss
add
fidivl
inc
push
mov
sbb
xor
mov
roll
mov
mov
sbb
stc
mov
pop
xor
pop
int
push
mov
sub
adc
addl
hlt
das
scas
inc
int3
sbb
repz
lock
pop
jns
adc
mov
pop
cld
movsl
mov
rolb
xor
add
xor
mov
pop
nop
jmp
push
cmc
adc
pop
add
sbb
stc
in
mov
xchg
mov
dec
aam
add
add
sub
les
or
cmp
xor
mov
or
fs
cmp
cld
cmp
out
mov
jnp
scas
xlat
add
jle
fisubs
sbb
shll
dec
je
add
movsb
xor
pushf
iret
je
lea
dec
pop
or
adc
xchg
xchg
pop
cmp
add
adc
sbb
stc
icebp
rorb
jne
push
sti
out
or
hlt
mov
in
xor
sub
inc
std
cwtl
add
jbe
xor
into
add
aad
out
mov
addl
fcoml
xorb
and
sarl
or
add
and
mov
cs
in
in
divb
add
cwtl
lret
aaa
pop
movsb
int3
push
sbb
dec
ss
adc
std
fmul
pslld
lock
mov
mov
sbb
aad
inc
sbb
mov
cmp
aam
add
jb
jl
rcrb
sbb
jo
pop
daa
lods
cs
fldl
js
sarb
sbb
lock
bnd
or
push
sbb
add
cmp
enter
es
loop
addl
sbb
roll
push
sbbl
pop
and
sbb
hlt
ret
pop
mov
add
addl
lods
jg
fcmovbe
cltd
mov
xlat
out
dec
imul
fwait
sub
and
sbb
add
or
add
fistl
out
add
test
add
push
dec
sbb
inc
xor
jae
mov
dec
inc
ljmp
andl
add
addr16
add
lds
mov
add
or
add
test
insb
and
call
or
jnp
or
sbbl
test
mov
add
hlt
mov
or
adc
sarb
divl
pop
cmp
fldl
push
adc
mov
ljmp
dec
rorl
lods
sbb
inc
cld
test
cs
xor
pusha
push
xchg
jae
sbb
loop
push
inc
enter
mov
frstor
fcomi
and
sbb
jns
cs
mov
aaa
xor
sub
sbb
pop
jb
lret
rcrb
add
mov
adc
dec
mov
in
mov
outsl
incb
add
jecxz
rcl
lea
push
mov
inc
cmpl
adcb
jbe
add
and
roll
mov
test
sbbb
test
imul
aaa
xchg
jb
add
jae
mov
test
fnsave
loope
call
add
mov
pshufw
mov
sbbl
cwtl
pushf
add
jns
or
mov
and
and
pop
adc
nop
add
int3
orb
fiadds
jo
rolb
sub
sbb
lret
pop
dec
pop
cmc
cmp
xor
mov
hlt
sarl
incb
lock
lods
in
add
dec
add
inc
fwait
jae
addl
mov
inc
popl
pop
gs
fists
cmp
adc
mov
add
fiaddl
mov
cmovs
pop
leave
cmpb
aam
jp
xor
rol
les
add
daa
mov
dec
xor
add
mov
pushf
mov
pushf
cmp
ja
xlat
and
jns
loopne
inc
add
sbb
mov
push
out
imul
sub
sbb
pusha
jmp
call
sahf
mov
addr16
enter
sbb
shr
mov
loop
push
add
pop
shl
xor
add
and
push
rcrb
aaa
mov
cmp
nop
loope
call
and
xchg
mov
pop
outsb
out
add
imul
cmp
add
jns
movsl
icebp
xchg
sahf
nop
add
stos
es
sbb
sbb
push
push
inc
mov
mov
gs
adcl
dec
xor
add
imul
mov
pusha
cmp
pushf
vmovntdq
add
xor
mov
sub
andb
xchg
xor
sysexit
lods
aas
cltd
inc
shrl
xor
pop
pushf
inc
fiadds
adc
movsb
sub
lret
mov
xor
push
inc
jl
mov
cmp
adcb
jecxz
sub
sbb
rcpps
movsb
rcrb
or
mov
pop
add
pop
and
cmc
add
leave
mov
sahf
or
mull
jnp
mov
push
data16
sub
sti
mov
movsb
test
cmp
testl
push
hlt
addb
push
stc
incl
popa
popa
inc
inc
mov
mov
adc
cmp
sbb
popf
xchg
ja
ret
outsl
movsl
pop
add
mov
lcall
add
or
outsl
aas
fdivs
add
sahf
xor
cli
scas
adc
pop
imul
ds
lret
add
das
add
push
pop
jae
into
sub
mov
add
clc
mov
xchg
ret
outsb
or
mov
jle
movsb
imul
add
mov
add
gs
jmp
sarb
and
cmp
andb
push
add
out
sti
push
jl
push
cli
adc
hlt
cmc
xor
mov
xor
test
cld
push
clc
mov
fs
sbb
sti
inc
jle
adc
mov
mov
pusha
movsb
insl
pop
cmp
test
shrb
add
push
and
cmp
lock
in
add
mov
movsb
sbb
mov
ds
sub
add
repnz
xor
dec
xchg
push
data16
fnstenv
lock
leave
xorb
test
jge
pushf
pusha
int3
and
jno
add
aaa
test
cmp
dec
call
lret
or
jg
cs
add
inc
aas
jle
roll
mov
sbb
push
cmp
bound
add
loop
cli
add
and
mov
lcall
stc
std
or
pushl
cmc
out
outsb
inc
add
test
lds
xchg
fxtract
jp
data16
in
jo
bound
adc
push
mov
sbb
inc
xchg
sbb
and
leave
in
loopne
lea
out
call
or
movsl
xorl
and
mov
push
mov
ljmp
push
dec
push
add
add
jbe
push
test
shl
inc
mov
xchg
roll
mov
fs
add
jp
dec
push
jo
sarl
loop
lock
fcmovb
incl
fisttpll
mov
add
in
andl
dec
aam
pop
add
pop
jecxz
mov
cmp
dec
mov
in
cs
pop
dec
add
movsb
xlat
sbb
pop
mov
add
sub
dec
aad
std
insb
in
add
add
pop
nop
ja
in
cmpsl
jo
add
lcall
dec
add
stos
loopne
push
mov
xchg
dec
test
in
cmc
lret
out
pop
popa
pop
or
ss
jmp
loopne
xor
clc
push
add
test
out
int3
xor
arpl
or
cwtl
loope
sub
add
xbegin
xor
sbb
test
or
mov
int
cld
jno
add
mov
scas
add
sub
inc
dec
mov
mov
add
andl
lahf
jl
loope
and
icebp
pop
pop
mov
cmp
add
mov
mov
and
fadds
rolb
and
sub
pop
add
push
and
xchg
add
pop
shrl
jno
inc
pop
sarl
in
out
pop
add
mov
addb
cmc
fdivs
add
roll
clc
je
add
nop
aam
sti
push
mov
fstps
sbb
add
cltd
mov
mov
add
mov
push
jp
cmp
mov
imul
adc
xchg
mov
pop
test
fistpll
std
call
add
test
jecxz
icebp
out
mov
xor
sub
ss
or
add
pop
movsl
daa
jl
mov
repz
sub
pop
mov
cmc
add
dec
or
into
jo
dec
pushf
rolb
sbb
mov
test
adc
mov
cmp
push
jp
test
rclb
imul
aaa
hlt
inc
lock
fcomi
int3
fimull
movsl
add
xchg
es
inc
test
xchg
repnz
mov
orb
add
cmpsl
daa
xchg
aad
divl
mov
push
icebp
shrb
imul
cmc
lret
push
outsb
add
add
loop
mov
pop
sbbb
pop
or
pop
cld
dec
dec
rcr
add
fidivrs
pop
scas
movb
js
jo
pop
mov
add
cltd
push
gs
lds
inc
inc
xchg
jmp
pop
fnstsw
xchg
insb
enter
jp
mov
cltd
pop
xchg
add
mov
mov
add
scas
arpl
repz
sub
add
jecxz
mov
les
repnz
jb
dec
jl
je
lods
sbb
out
in
dec
pop
shlb
movsl
add
jnp
sbb
adcb
aad
test
add
mov
push
cli
mov
jmp
sbb
lds
in
jbe
xor
dec
jmp
pop
repnz
inc
xor
out
add
add
pop
inc
mov
or
out
add
ret
test
roll
fildl
pop
push
jge
repnz
add
call
rcrb
and
or
cmp
push
pusha
or
and
stc
in
rorb
neg
hlt
rclb
xor
jle
jno
cmp
clc
pop
lea
insb
add
or
pop
adc
add
or
aam
add
and
add
cwtl
mov
sbb
inc
out
push
mov
jecxz
testl
lods
mov
mov
inc
sub
add
and
xorb
add
shlb
sub
fdivl
jo
fdivrs
cmp
add
jge
cmp
sub
sub
out
jge
clc
adc
mov
ss
repz
sbb
nop
pop
xor
imul
jo
mov
xchg
and
inc
std
mov
pop
push
add
mov
inc
loopne
mov
lods
dec
hlt
dec
push
cmp
add
fs
popf
xchg
repnz
adc
inc
sub
or
adc
cwtl
push
movsl
mov
xchg
and
pop
adc
aam
rcr
push
jg
mov
stc
mov
es
inc
out
xchg
dec
scas
xor
into
inc
aam
sub
loopne
inc
add
insb
sbbl
ret
or
insl
xchg
aad
mov
adc
fdivrs
xor
add
jae
js
add
sbb
sahf
aaa
pop
push
pop
add
daa
mov
sbb
push
aas
mov
fwait
loopne
add
push
inc
dec
fdivl
lea
push
jecxz
sbb
or
pusha
dec
mov
adc
dec
add
jnp
sub
add
or
push
cmc
loopne
lock
jp
mov
or
inc
shl
pop
outsb
test
lock
mov
adcl
loopne
jg
test
ljmp
cmp
jo
cld
sti
or
pop
mov
and
outsb
jae
inc
ja
add
into
fadds
add
push
and
sbb
daa
lock
xchg
jbe
hlt
fnstcw
mov
pop
add
cwtl
dec
jno
nop
pushf
add
clc
dec
lods
push
pop
ja
incb
leave
adc
daa
add
test
jmp
je
repnz
das
cli
or
mov
sbb
lahf
dec
and
pop
arpl
aaa
ret
dec
or
inc
fsubr
xorb
cmpsb
dec
sbb
test
mov
and
cs
lahf
mov
insl
dec
je
lea
xorb
inc
setnp
push
pop
pusha
int3
xor
repz
pop
lcall
xor
insb
push
rolb
lea
jecxz
mov
popf
cld
cmp
push
add
mov
divb
addb
push
or
sbb
ss
aaa
mov
dec
inc
pop
inc
sub
inc
out
xchg
pop
push
mov
jle
jae
aam
xchg
dec
push
inc
scas
or
shlb
add
insb
cmpsb
jno
loope
das
add
js
ficomps
adc
test
cmc
adc
mov
pusha
ret
insb
push
push
test
xchg
loopne
stos
add
lahf
mov
mov
xor
sbb
insb
push
iret
cmp
rorb
add
cmc
cs
add
jg
push
sti
cmp
xchg
les
nop
rolb
cmp
add
dec
pop
push
inc
jmp
mov
sub
mov
adc
es
jl
add
aad
xchg
inc
loope
into
sub
add
incl
dec
dec
lahf
ret
inc
add
xor
sbb
cmp
add
and
mov
and
push
mov
loopne
pop
inc
rcrl
subb
push
add
adc
outsb
xchg
aam
sbb
out
add
xlat
mov
add
mov
add
addr16
sub
add
test
jbe
test
loopne
aas
or
jl
adc
scas
jns
mov
inc
pop
jge
cwtl
sbb
data16
pop
pop
sbb
movsl
xchg
sarb
jecxz
shrl
ds
pop
xor
loopne
cmp
int3
cmp
and
das
je
jle
cmp
mov
cmp
jmp
lret
adc
xchg
lock
jl
loopne
cs
mov
mov
lret
pop
sbb
mov
ds
adc
jge
adc
xchg
les
jnp
mov
arpl
mov
sub
cmp
inc
and
or
notb
push
leave
sbb
push
orps
hlt
jl
cmpb
test
or
inc
add
or
adc
push
jb
pop
adc
inc
int3
stos
cltd
jnp
out
add
sarl
sarl
repnz
add
mov
test
sub
add
loope
cmp
xor
insl
fstpl
cmc
mov
sbb
std
loop
push
and
or
sar
in
cli
mov
ret
xchg
xchg
inc
jae
add
cld
fcom
ret
add
fisubl
add
add
dec
dec
push
add
adc
pop
cmp
jne
push
and
out
add
arpl
adcb
push
push
cwtl
pop
jp
dec
mov
cmpb
mov
inc
stos
push
popa
sub
cld
xchg
xchg
pop
orl
nop
mov
mov
in
cld
jecxz
add
stos
pop
sub
hlt
push
fnstsw
repz
add
push
add
fwait
jbe
jmp
jg
addb
ss
enter
cmpsb
outsb
loopne
inc
pop
cmp
xchg
push
movsb
pushf
enter
mov
xor
mov
adc
add
dec
loop
sbb
cmp
insl
mov
iret
add
pop
lock
dec
imul
jb
xor
and
pop
or
leave
cmp
movsb
mov
or
adc
mov
cmp
inc
lock
insb
jge
call
fnstsw
aam
pop
popf
jl
icebp
and
or
rolb
fisttpl
push
dec
incb
imul
add
pushf
sbb
jle
add
add
jmp
stos
mov
mov
mov
sbb
rorl
dec
mov
dec
inc
dec
dec
fcompl
cmp
inc
xchg
arpl
imul
adc
mov
push
pusha
xchg
pop
mov
std
je
scas
xchg
or
add
add
sbb
mov
arpl
inc
into
push
rolb
mov
mov
add
mov
addr16
ljmp
cmp
notl
cmp
stos
mov
push
in
jae
adc
insl
add
xchg
sub
pop
aaa
adc
adc
rcrl
jle
imulb
cld
subl
pop
and
push
cmp
push
jmp
mov
not
add
adc
mov
adc
push
popf
sahf
fnstcw
mov
scas
cmp
add
sbb
jl
dec
add
ds
push
xchg
cmpsl
xorb
in
pop
loope
pop
cmpl
test
mov
stos
aas
mov
in
cld
xlat
aaa
add
add
out
mov
stos
aam
dec
mov
add
sub
loopne
mov
add
push
push
popa
call
cmp
cld
repz
push
loop
out
cmp
imul
psubsb
cwtl
outsl
adc
mov
cwtl
jmp
sbb
add
cmp
sbb
pop
inc
dec
aaa
lret
add
pop
sub
xor
dec
xchg
loopne
clc
push
mov
aas
mov
adc
push
test
jmp
add
cmp
pop
adc
mov
rolb
xchg
test
aas
sub
adc
push
mov
pop
fcomi
nop
pop
in
cmpsl
pop
mov
das
dec
xchg
and
pushf
ljmp
outsl
add
xor
adc
add
test
add
xchg
mov
mov
inc
lock
sar
aas
xor
push
shll
jnp
add
and
subl
xchg
aam
sbb
sub
iret
add
xorl
mov
sbb
jbe
idivl
aam
mov
shlb
inc
dec
lds
pop
cld
sub
add
icebp
rcrl
out
aaa
sub
add
aam
or
cli
call
mov
pop
xor
andb
nop
sti
cltd
stos
insb
sbb
pop
inc
loopne
xchg
js
incl
sarb
add
scas
es
inc
pusha
jo
add
out
mov
adc
xor
loopne
mov
jae
push
mov
lret
and
adc
filds
enter
stos
test
lock
add
movsl
push
popa
mov
ltr
xchg
rcrb
add
hlt
shrl
jmp
scas
cs
icebp
xchg
dec
pop
push
adc
sbb
and
cmpsl
adc
cmp
fisubs
add
pusha
lcall
rolb
push
iret
cmpsb
jns
jo
add
int3
xor
add
fadds
add
jbe
mov
cmp
mov
jae
mov
filds
test
comiss
add
or
dec
clc
push
mov
pop
push
lret
stc
adc
cmp
nop
add
loopne
inc
stos
sahf
push
sbbb
add
adc
adc
jle
out
out
mov
sub
dec
test
pusha
rcll
and
adc
and
push
add
mov
jmp
xor
or
inc
xchg
sbb
mov
enter
add
mov
int
fnsave
add
test
add
lcall
pop
xchg
ja
rclb
mov
pusha
xchg
les
lds
jle
stos
xchg
mov
mov
cltd
xchg
add
repz
push
in
fmul
mov
repnz
pop
pop
add
fisubl
jp
mov
sbbb
add
and
loop
and
pop
mov
enter
insl
sarl
add
cltd
dec
scas
pop
repnz
test
in
pusha
add
mov
jecxz
or
mov
jmp
jg
cmp
push
daa
or
dec
jns
sbb
rorb
test
das
pop
inc
je
fcoms
xor
jle
loop
push
add
jp
nop
je
in
fadds
adc
sbb
lods
sbb
ds
cmp
in
and
xor
ja
xchg
and
push
mov
cmove
fidivl
cli
jecxz
outsl
mov
pop
xchg
pop
push
cmpsl
sub
push
add
jno
sub
mov
fs
in
cmp
mov
and
mov
lahf
mov
hlt
mov
cmp
mov
addr16
add
push
add
cmpsl
das
cld
sub
add
mov
nop
dec
or
hlt
movsb
add
jl
xor
outsb
add
cmp
lock
xor
sarb
cmp
dec
outsl
nop
xchg
cmpsb
xor
sub
clc
lcall
mov
sub
mov
bound
dec
xchg
int
shlb
sahf
jg
add
cmp
lea
xchg
cmp
add
push
jp
xchg
xorb
outsb
sbbl
xchg
sbb
add
dec
mov
adc
pusha
sldt
dec
and
mov
test
out
sbb
daa
in
loopne
pop
rcrb
inc
dec
mov
push
xchg
pop
daa
push
test
insl
inc
pop
pop
xor
movsb
jecxz
mov
add
lods
jp
fstp
cmpl
bound
pop
jbe
add
sti
lret
inc
outsl
push
aam
add
fistpl
mov
dec
subl
je
sbb
mov
add
sub
mov
add
roll
jle
mov
jg
mov
xchg
sub
aam
xchg
fisubrs
gs
addb
imulb
jg
push
rclb
mov
xchg
xchg
or
mov
push
pop
pop
add
and
mov
cwtl
mov
mov
sahf
cmp
xlat
aaa
pop
ret
scas
add
xchg
fs
ja
adc
add
push
add
pusha
ret
out
das
jg
iret
push
pop
test
add
xor
out
lahf
shl
inc
outsl
add
or
scas
cmp
add
push
or
int3
xor
add
mov
daa
ljmp
jmp
iret
sbb
push
negl
jne
inc
add
nop
xchg
inc
push
mov
stc
inc
aaa
push
sbb
pusha
gs
mov
test
mov
and
nop
rol
ret
inc
js
cmp
xor
or
mov
jg
imul
and
clc
push
sbb
add
les
xor
andl
push
add
in
test
inc
add
pop
inc
pop
pusha
or
mov
cmp
jnp
sub
lret
xor
hlt
xchg
pop
jcxz
cmp
popa
lcall
mov
mov
pop
sbb
jge
mov
add
push
call
aad
sub
gs
das
popl
aas
cwtl
cmpsl
add
mov
add
adc
jecxz
out
vorps
std
or
mov
add
repz
cmpsl
clc
lds
lahf
cmp
inc
or
pop
test
jge
stc
and
pop
mov
adc
mov
add
fs
jmp
mov
xchg
lock
dec
loopne
mov
cltd
aad
dec
pop
cmp
mov
leave
dec
es
js
add
adc
ljmp
mov
daa
add
xchg
aas
push
dec
adc
hlt
jmp
add
ja
out
cltd
pop
dec
pop
lea
int
fistpl
test
stc
push
add
jecxz
loopne
es
dec
xchg
sbb
mov
adc
xchg
sub
or
ret
sbb
adc
arpl
xor
sbb
xlat
sbb
adc
sahf
iret
pusha
lds
mov
int3
icebp
dec
out
testl
imul
test
test
add
sahf
out
inc
test
add
pusha
scas
mov
push
xchg
addl
jns
inc
pusha
cltd
addb
pop
fcmovnbe
adc
jnp
add
inc
rolb
nop
dec
push
rcll
cmp
sub
mov
pop
xchg
inc
mov
adc
cwtl
xchg
ret
jns
cmpsb
sbb
cli
sub
sbb
push
dec
cs
movl
pusha
lcall
jnp
nop
push
or
push
sahf
add
out
pop
mov
push
or
test
mov
mov
inc
add
xor
pop
mov
js
sbb
mov
std
call
jns
aad
add
or
rcrb
sub
push
add
out
and
and
pop
xchg
dec
add
lock
xor
add
fldt
sahf
cmp
xor
or
adc
and
flds
xlat
mov
je
std
mov
enter
dec
ss
and
or
inc
mov
mov
push
pop
icebp
sbb
xor
sbb
ret
fs
adc
mov
notb
or
test
cmpsl
pop
loope
xor
mov
xor
outsl
mov
xchg
sbb
xor
ja
scas
dec
sub
mov
xchg
test
lcall
push
orl
in
das
sbb
fiadds
imul
sbb
shlb
add
jns
pop
add
pop
sub
xchg
in
fmuls
adc
add
sbb
sbb
xchg
or
or
comiss
call
pop
add
popf
mov
int3
imul
mov
or
xchg
subb
add
xor
movsb
mov
and
mov
lock
stos
shll
sbb
daa
xchg
mov
jg
roll
fs
test
jno
inc
in
and
mov
loop
push
push
sbb
push
add
test
movsl
ret
mov
add
cmpsl
icebp
and
or
icebp
mov
xchg
fwait
jge
add
push
adcl
lods
test
mov
test
test
mov
and
and
sub
lahf
mov
sbb
and
sti
cld
mov
xor
mov
in
fmul
or
add
push
or
add
jp
pop
pop
sahf
add
inc
jo
xchg
add
movsb
pop
sub
adc
out
sbb
ret
dec
add
out
dec
add
ds
lds
push
jp
add
dec
cmp
sub
out
mov
inc
and
mov
jne
mov
pop
int3
jo
push
scas
in
dec
push
xor
and
cli
xchg
add
and
add
popa
jl
jmp
add
ljmp
sahf
adc
test
movsl
xchg
mov
push
test
in
push
std
or
push
push
pop
push
jne
sarb
pop
insl
sbb
pop
loopne
add
stos
jl
in
jno,pt
add
cmp
pop
shrb
lods
pop
roll
cs
push
pop
adc
jae
inc
loopne
and
jge
sbb
xchg
rclb
daa
fiaddl
ja
nop
scas
fisttpll
push
add
mov
or
in
add
sbb
out
cli
subl
iret
or
lock
inc
pop
or
out
fs
addr16
push
cmpl
or
loop
cwtl
or
sub
or
pusha
mov
add
inc
popa
imul
jno
jmp
sbb
dec
mov
fcoms
xor
arpl
orl
mov
jne
sbb
add
leave
dec
or
imul
add
cli
clc
dec
add
mov
add
cmpsl
or
icebp
hlt
pop
loop
aas
jno
push
ret
stos
add
popa
mov
sbb
mov
mov
add
fcmovne
fwait
cmp
stos
add
jae
out
mov
test
xor
testb
imul
insb
sarl
mov
xchg
push
inc
sbb
add
mov
fadd
je
out
mov
sbb
and
pop
call
add
push
adc
pop
and
xor
loope
mov
inc
popa
xor
adc
cmp
sub
cmp
and
lret
shll
outsl
mov
add
mov
add
call
movzbl
and
aaa
pop
movl
mov
dec
call
cmpsl
pop
stc
mov
aad
in
ret
pop
in
add
cli
repnz
xchg
adc
add
push
fwait
sahf
and
pop
ss
pop
cli
jg
aas
xchg
js
jge
lock
xlat
xor
out
and
add
adc
push
fnstsw
add
loop
jne
insl
cmp
add
gs
and
mov
lcall
mul
pop
repnz
repz
cmp
xchg
jg
jecxz
add
dec
mov
add
int
push
xchg
repnz
int
psubq
ja
add
notb
add
adc
pop
jne
xlat
cwtl
xor
mov
pop
pop
mov
sub
inc
jo
cwtl
ss
sub
xor
jmp
or
inc
test
xchg
and
movsb
mov
add
adc
mov
push
cmp
and
insl
push
es
add
mov
ret
sub
enter
inc
mov
add
xchg
mov
add
mov
adc
aas
loop
subb
icebp
aam
jg
jae
mov
adc
xorl
jmp
jg
lret
cmp
sbb
mov
ja
pop
lods
adc
enter
int3
push
xchg
sbb
sub
les
sarb
rolb
jbe
pop
jmp
mov
jnp
out
adc
mov
jne
cli
xorb
and
jnp
rcll
add
dec
xor
cmp
dec
repnz
in
shrb
bound
sub
xlat
pop
and
fwait
sbb
push
adc
cmp
add
inc
jmp
ret
push
ljmp
stc
sbb
cmc
mov
mov
add
jl
jmp
lret
and
mov
mov
lds
aad
xlat
in
mov
jb
inc
shl
int
mov
mov
leave
adc
cltd
sub
dec
dec
pop
ljmp
mov
or
jb
add
movsl
xchg
loope
daa
sbb
xor
mov
inc
faddp
push
add
cltd
popf
enter
pop
mov
les
lret
fs
dec
int3
daa
add
sbb
xor
add
adc
pop
lock
add
flds
dec
push
enter
mov
inc
sti
aad
or
push
push
dec
xchg
mov
loope
scas
stos
or
sbbl
xchg
jg
sub
or
mov
mov
cmc
dec
testb
ss
xor
sbb
rolb
xor
inc
push
je
push
rcrb
push
cmc
xor
xchg
push
add
mov
sbb
je
pop
cwtl
loope
add
sub
add
and
stc
addl
xchg
call
jbe
add
mov
ds
pop
popa
test
pop
sti
or
jmp
bound
sbb
stos
pushf
sbbl
mov
lcall
jb
dec
mov
pop
mov
lods
sarl
cld
mov
mov
mov
lods
iret
jno
push
jb
xor
add
test
out
jmp
ljmp
sub
rol
add
adcb
out
clc
mov
stos
add
rorl
lock
jmp
mov
add
ja
ficoml
aad
mov
pop
dec
addr16
cmp
nop
fcoms
add
in
inc
loopne
jae
movb
and
into
das
or
sti
push
jge
movsl
fwait
mov
or
jae
xchg
repnz
test
sbb
les
jno
mov
xor
fs
add
xor
pop
adc
insb
lret
insl
rcrb
or
ja
fstpl
cmc
mov
cmp
xchg
add
in
out
adc
jo
add
rcrl
in
add
out
mov
ds
loopne
lcall
iret
inc
cmpsb
cmp
xor
hlt
mov
xor
out
mov
push
mov
xchg
or
xchg
call
sub
cmp
fbstp
sarl
add
outsb
in
repnz
test
add
dec
mov
add
inc
rolb
fbstp
out
or
mov
outsb
add
fwait
mov
push
dec
push
push
dec
data16
pop
sbb
ss
add
dec
xor
fisttpl
pop
xchg
sbb
push
dec
inc
jae
add
push
cmp
adc
lods
enter
add
das
xchg
dec
cld
dec
nop
xchg
add
es
cmp
int3
aam
arpl
mov
dec
ret
popa
movsb
cwtl
xchg
inc
nop
inc
add
jbe
fildl
adc
xchg
fisubs
jmp
cmp
xchg
add
repnz
jae
add
fildl
or
jecxz
out
add
sub
lock
xlat
adc
jg
or
cmp
and
repz
and
xchg
arpl
pop
imul
insl
cpuid
ja
inc
add
add
movlps
add
cs
pop
push
xor
push
mov
nop
stc
or
add
pop
mov
cmp
popa
dec
js
lret
mov
jo
add
xor
mov
push
in
push
shrl
dec
lods
mov
cmp
pop
insb
test
in
data16
in
hlt
adc
mov
push
addb
fnstsw
add
test
mov
add
nop
test
add
inc
shlb
xor
pmovmskb
sbb
lcall
or
pushf
add
mov
jmp
xor
add
inc
pop
lret
test
xor
cmp
dec
bnd
lcall
add
cld
push
loop
push
add
les
lock
loopne
addb
addb
mov
push
cmp
xor
jge
gs
loop
add
lcall
inc
cmc
pusha
nop
cmpsb
xchg
into
and
adc
and
push
jp
icebp
das
mov
sbb
pop
push
scas
mov
adc
dec
cltd
bnd
aam
jno
repnz
dec
rcrb
add
xchg
xor
and
fmull
xchg
push
add
jns
inc
cmp
adc
add
cmpsl
dec
rcll
cmp
ds
jae
inc
test
sarb
mov
add
cmp
les
shr
sbb
aaa
push
add
test
cs
loopne
pmullw
inc
lret
test
jae
mov
xchg
push
jmp
cmp
inc
inc
test
insl
inc
leave
push
add
jmp
xor
rcll
add
insb
xor
add
scas
mov
jecxz
flds
clc
cltd
faddl
add
push
xor
pop
inc
data16
jle
add
in
mov
sbb
pop
or
dec
addl
out
test
idivb
mov
clc
add
cmpb
rcrb
pop
jne
lock
cmc
into
add
jecxz
or
imul
shl
rorl
add
mov
pop
loopne
mov
mov
ljmp
fidivs
stos
incb
and
or
out
mov
mov
cli
fiadds
and
push
lods
test
add
jnp
and
inc
push
sub
mov
xchg
push
lret
jle
imul
add
fwait
rcrl
ja
add
xor
pushf
jle
jnp
lods
cs
fdivr
add
or
mov
mov
sub
addr16
pop
add
sub
je
lret
xchg
clc
jbe
add
lds
cmp
push
pusha
cmp
inc
pop
scas
inc
sub
pavgb
sbb
pop
mov
add
aaa
add
fs
or
mov
push
orl
rorb
add
cmp
pop
js
and
dec
mov
add
in
mov
xchg
add
pusha
push
fdivrl
out
add
cmp
cmpsl
data16
cld
test
fisubs
push
inc
and
jecxz
aas
in
jno
xorb
push
inc
rorb
cld
cld
loopne
push
rcll
adc
lds
add
jge
int
inc
pop
mov
sahf
rol
rorl
cmpsb
sbb
xchg
add
sub
adc
xchg
das
loop
add
pusha
jmp
add
sub
js
nop
lret
mov
hlt
sub
test
out
push
dec
pop
sub
push
dec
add
call
add
mov
add
cmpsl
js
cmp
pop
or
outsb
add
push
xchg
pusha
or
xor
sbb
sub
push
pop
cwtl
out
sbb
push
inc
sti
into
and
inc
cmpsb
push
sbb
aam
inc
outsb
call
jg
notb
pop
xor
sahf
add
push
xor
adc
insb
movsb
lds
add
xchg
mov
cs
hlt
int3
mov
mov
out
popa
mov
xor
call
vmwrite
hlt
fildl
in
jnp
test
xor
iret
jbe
repz
sbb
fisttps
add
adc
testb
adc
js
jecxz
mul
out
popa
ljmp
inc
ret
xor
sarb
jo
push
jno
test
inc
sahf
push
insb
andb
fdivrl
and
lods
test
ljmp
gs
jg
add
xor
push
add
cli
cmp
ds
nop
sub
push
xchg
andb
add
xchg
cmp
mov
add
dec
adc
add
mov
clc
push
inc
int
in
and
push
subl
jg,pn
sub
mov
add
jns
nop
clc
cmp
inc
add
sub
and
xchg
scas
test
inc
shl
cli
push
ss
rcr
cmp
dec
arpl
pop
dec
hlt
rcrb
ja
fwait
jp
jo
inc
jae
or
jo
add
mov
testb
test
pop
je
cmp
jle
dec
mov
popa
imul
xor
into
pushf
add
imul
loopne
cld
int
xchg
insl
std
inc
ljmp
dec
enter
gs
add
xor
into
jo
insb
or
pop
cs
and
add
mov
and
inc
cs
loopne
push
jb
jl
jns
shl
xor
add
repnz
cmpsl
pusha
inc
xor
in
es
mov
and
and
adcl
ret
fstp
dec
rorb
add
inc
pusha
int3
xorl
imul
mov
pop
dec
cmpl
mov
pusha
sub
add
pusha
fisttpll
and
mov
cwtl
mov
adcb
mov
lock
adc
sub
cmp
mull
or
and
adc
mov
cli
aas
xchg
imul
bound
icebp
mov
jns
dec
shlb
add
sbb
popf
dec
ficoms
subb
jp
mov
push
sbb
addr16
and
xor
jb
inc
ljmp
cmc
push
add
aad
inc
outsb
xchg
and
sub
adc
leave
repnz
test
push
test
loopne
es
inc
push
mov
fsubrp
xor
jge
mov
cmp
and
push
lds
fadds
xor
imul
lock
mov
or
pusha
mov
pushf
lock
in
repnz
add
out
inc
pop
jle
jmp
push
cltd
add
add
lods
xchg
mov
add
adc
out
add
lcall
add
sbb
push
jo
ret
rcll
insb
cs
xchg
xor
out
push
out
aaa
scas
xchg
add
jge
mov
or
outsl
das
in
enter
ficompl
in
add
adc
fwait
out
in
addr16
lods
shl
mov
movb
test
or
push
adc
jo
and
sbb
xor
cmpl
push
lret
xor
mov
adc
add
test
int3
mov
dec
xor
fwait
cmc
imul
mov
inc
mov
cld
and
sub
adc
cld
out
mov
dec
xchg
add
leave
pop
push
js
subl
dec
movsb
add
loop
subl
jne
add
addr16
popf
mov
fwait
mov
add
mov
push
mov
rcl
rcll
in
dec
icebp
xor
dec
adc
lcall
test
loop
sbb
in
inc
sub
push
enter
pusha
push
xor
dec
popa
rcr
cmp
jl,pt
notb
mov
loopne
sub
lock
inc
outsl
add
test
adc
pusha
xor
add
mov
sbb
repz
sbb
mov
orb
orb
call
mov
ljmp
jae
loope
and
pop
in
push
sbb
mov
and
test
jecxz
jo
fiadds
pop
mov
ja
add
sbb
movsb
mov
inc
shlb
add
mov
fdivr
popf
mov
cmp
je
scas
call
jp
dec
cmpb
adc
pop
mov
testb
orb
lods
bound
and
adcb
xchg
jge
pusha
xchg
and
or
jnp
xchg
and
daa
and
fdiv
adcb
cwtl
xor
inc
testl
shlb
icebp
xor
fiaddl
inc
idivl
pop
dec
xor
mov
call
stos
ja
sbb
addr16
dec
test
lock
push
movsl
jns
repnz
lods
jae
test
cmp
flds
loope
or
popa
xor
sub
mov
ret
test
es
sub
push
sar
and
or
and
rclb
cwtl
add
out
out
popf
in
add
dec
sub
lcall
sbb
sub
int3
mov
add
in
testb
es
cld
add
addl
sub
dec
xchg
or
lahf
outsl
pop
push
dec
nop
pusha
mov
aas
cmpsl
dec
stc
mov
shrb
lahf
pop
mov
add
inc
xchg
test
lcall
sbb
adc
sub
mov
add
xchg
fwait
test
stos
imul
mov
mov
icebp
movsl
sub
add
mov
xchg
jle
das
push
and
add
nop
cmp
dec
jl
adc
pop
and
adc
adc
addb
xor
repz
jnp
xor
inc
sbb
inc
sub
and
sbb
lcall
add
add
je
adc
cmp
jb
sbb
cmp
add
lds
lret
xor
or
psraw
jb
pop
lods
hlt
shl
call
jmp
mov
mov
aas
mov
xor
xchg
adc
iret
inc
mov
daa
add
push
movsb
test
and
mov
ljmp
dec
add
movsl
test
arpl
into
push
cs
cmpsb
fnsave
sub
add
mov
jg
inc
mov
jp
enter
jo
mov
and
cmp
ljmp
pop
shll
addr16
pop
clc
jae
cltd
jmp
mov
imull
ds
cmp
outsl
imul
jmp
int3
mov
iret
dec
mov
cmp
imul
stc
sbb
pop
inc
xchg
fildl
enter
mull
int3
fiadds
jne
push
dec
or
xchg
xor
jg
dec
arpl
or
rolb
jge
jo
add
ret
inc
xchg
push
and
mov
dec
lahf
or
dec
push
stos
add
mov
pop
add
jb
jmp
clc
cmpsb
push
cmpb
push
sahf
shl
fsubl
mov
mov
jp
cmp
inc
push
adcl
popf
or
lock
xchg
je
mov
jnp
pushf
jno
add
sbb
and
xchg
xchg
movb
jle
stc
in
add
xchg
mov
jmp
int3
adc
test
mov
mov
pusha
aam
dec
faddl
fneni(8087
jns
mov
add
movl
loope
xor
pop
sub
pop
push
je
sbb
sahf
and
test
xchg
mov
jb
mov
fldcw
mov
dec
pop
and
add
sbb
int3
jo
cmp
mov
push
out
push
std
sbb
leave
sub
fsts
add
cltd
std
ffree
pop
fadd
xor
js
push
add
mov
and
jecxz
sbb
xorl
adc
lret
and
cmp
cltd
cwtl
add
mov
xchg
or
add
sbb
fildll
pushf
mov
cmp
ret
inc
orb
add
dec
add
and
pop
out
sub
movsb
add
and
sub
xchg
std
inc
jnp
push
push
clc
inc
aaa
add
out
imull
pop
rcll
inc
in
pop
into
add
shlb
and
and
or
and
and
incl
add
add
or
xor
add
mov
cmp
mov
or
push
push
adc
movsb
cs
mov
and
fstl
pop
inc
test
adc
jmp
dec
dec
pop
sbb
rcr
dec
jge
dec
mov
loopne
adc
movl
idivl
jl
cmpsl
fimull
pop
ljmp
dec
sbb
out
sub
mov
dec
xor
pop
inc
arpl
fnsave
jg
or
pop
lcall
and
jp
xor
or
mov
icebp
add
dec
xor
inc
movsb
shrb
adc
or
aaa
push
cmp
add
lret
addb
mov
je
lahf
addr16
loopne
cmc
mov
add
jb
mov
roll
dec
add
gs
shrb
das
cmc
add
scas
push
test
and
hlt
pusha
inc
popl
and
push
push
mov
hlt
out
or
insb
cltd
add
add
cmpsl
jmp
inc
push
sbb
out
add
inc
test
sub
shrb
ja
sub
and
jns
jecxz
xor
fisubs
push
jno
mov
pusha
sub
into
mov
das
out
add
jmp
sub
sub
adc
cmpl
fcoml
data16
and
aas
cmpsb
stos
add
and
add
pushf
xchg
push
hlt
in
cmp
test
push
fildl
into
aad
adc
dec
jbe
xchg
mov
add
setl
push
sub
ja
test
cmp
and
fisttpll
mov
adc
aam
xchg
push
mov
or
dec
sarb
loopne
pop
push
aaa
addl
incl
add
jo
or
push
add
mov
dec
lods
add
popf
subb
or
cld
inc
test
dec
jg
and
movsb
rcl
jl
dec
movsl
mov
and
mov
pop
pop
rcrb
scas
fwait
inc
insl
cld
mov
add
mov
mov
aam
aaa
mov
push
inc
fisttpl
add
repz
scas
das
add
pusha
testb
les
rcrl
mov
cmp
jns
push
inc
std
sahf
inc
add
outsl
sarl
adc
push
loop
push
adc
or
stos
in
es
shrb
ltr
adcl
add
aam
mov
shlb
jnp
adc
cmp
cmp
lock
jle
mov
xorb
ja
pop
enter
mov
jno
cmp
call
pusha
aad
ret
xchg
flds
inc
popa
xor
aaa
add
cs
add
cmc
test
xor
xchg
or
dec
mov
add
ja
lock
mov
aad
add
inc
push
lahf
and
pop
out
add
pop
leave
ljmp
mov
cwtl
jnp
jb
movsl
outsl
cli
scas
add
jmp
cmpb
add
iret
pop
aam
add
pop
add
add
push
lods
ja
add
call
ret
mov
fimull
cmp
dec
repnz
ja
jnp
in
aas
loop
jmp
dec
pop
addl
cli
pushf
mov
sub
movsb
sub
adc
jl
lds
test
or
in
mov
sub
sbb
inc
ret
rorb
stos
rorl
sub
xor
lret
std
sbb
xchg
pop
mov
loope
pop
jmp
mov
add
add
div
push
jns
out
dec
add
mov
daa
loop
loopne
or
add
or
inc
out
push
adcb
jp
lock
jo
push
movsl
insl
push
xchg
push
pusha
dec
add
lods
mov
fiadds
lds
mov
into
scas
cwtl
push
mov
dec
and
sahf
dec
xchg
add
repz
jnp
inc
adc
shrl
xchg
and
jne
xor
jnp
add
xchg
sub
rcr
pop
shll
pop
icebp
inc
dec
cmp
mov
xchg
jno
pusha
ja
sub
mov
cli
add
jb
outsb
sbb
fiaddl
jnp
mov
out
iret
loopne
sbb
pop
pusha
jl
cmp
mov
or
int
test
mov
dec
mov
outsb
cmp
push
pop
add
add
cltd
sub
stos
arpl
loope
and
mov
lds
dec
adc
fstpl
xor
mov
int3
in
fildl
scas
mov
adc
cmp
jg
pop
and
das
test
enter
pushl
mov
mov
mov
push
lret
jo
mov
mov
push
in
cmp
or
repz
flds
icebp
and
call
sbb
xchg
add
pop
out
and
lock
mov
fiadds
daa
sti
aad
push
lea
cmpsb
push
orb
clc
popf
add
pop
mov
testl
mov
test
imul
xchg
xor
rorb
push
pusha
cmp
call
rclb
jae
pop
or
xlat
jg
mov
pushl
es
ficoml
and
out
bound
sbb
sar
stos
add
dec
es
cli
iret
add
mov
cmp
stos
pushf
rolb
lods
jg
add
ja
add
lock
negb
add
repz
add
cld
aaa
mov
or
cmc
adc
icebp
rclb
in
subl
jo
push
mov
or
daa
adc
lods
addr16
in
xchg
mov
shlb
ret
xchg
inc
jae
es
call
movl
pop
ljmp
sub
in
mov
pop
pushf
test
lds
rcr
and
xorb
outsl
jge
inc
fcomps
lods
add
scas
push
push
in
cmp
aas
fwait
ljmp
lcall
cmp
adc
sub
sti
pop
mov
mov
mov
mov
push
lea
loope
sbb
add
pop
clc
add
mov
ret
imul
xchg
js
add
jne
inc
add
pop
push
sahf
insb
lods
add
mov
les
imul
lret
repz
mov
xchg
push
hlt
cmp
add
mov
sub
insl
sbb
xchg
push
adc
jo
add
ret
or
es
cli
clc
orb
dec
test
js
je
and
and
or
aas
xchg
outsb
add
or
cmp
xchg
xor
hlt
add
jbe
popa
add
out
mov
nop
sti
dec
fidivrs
jns
push
push
cmpsl
loope
daa
mov
pop
ja
jle
or
dec
jb
add
imul
jno
out
in
mov
push
mov
fcompl
jo
add
push
or
test
pop
pusha
ds
xor
dec
dec
cmpsl
or
ja
sbb
stos
int
cmp
or
add
out
and
add
and
ds
mov
shll
cmp
mov
arpl
cmc
add
and
inc
push
adc
or
popf
jecxz
lock
into
sbb
and
or
xchg
testl
sub
mov
in
hlt
rcrb
or
pop
cmp
loopne
mov
jbe
add
stc
insl
pop
and
xor
add
xor
pop
sub
mov
xchg
add
ret
add
dec
pushf
dec
mov
cmpsb
test
xor
jmp
mov
fistpll
add
mull
mov
jo
xchg
add
jno
out
mov
jne
add
icebp
sbb
aad
insl
rcrb
jg
and
cltd
fnstcw
xor
out
shlb
push
adcl
cmc
mov
jbe
xchg
popf
add
xor
cmp
jb
rclb
mov
paddusw
sbb
add
stos
insl
mov
rolb
sub
incb
in
pop
jns
add
inc
add
subb
jg
test
call
in
sbb
imul
jmp
aas
stos
cli
ja
sub
insl
lea
fimull
push
movsb
roll
rcl
in
push
dec
pop
pop
add
out
mov
jg
sub
jne
fstpl
add
pusha
nop
rcrb
aaa
cmp
pop
mov
adc
arpl
repz
das
flds
jge
or
pop
sub
ret
repz
inc
ljmp
xor
ror
test
in
jle
add
add
mov
mov
or
dec
jmp
add
push
ret
add
sbb
add
imul
mov
test
imul
cmpsb
add
mov
je
add
out
in
mov
stos
cmp
and
arpl
xchg
insb
cmp
daa
lcall
push
add
test
jmp
pop
inc
outsb
lahf
xchg
pop
rolb
mov
adc
xor
andl
xchg
sbb
push
adc
push
add
sub
es
adc
out
in
xor
pushf
adc
add
mov
das
arpl
aas
add
cwtl
inc
je
fsubrs
jmp
shll
pop
mov
mov
dec
mov
nop
js
xchg
cmc
xchg
aaa
pop
dec
xor
sbb
testl
andw
movsl
add
mov
add
push
movsb
ret
test
daa
cmp
call
outsl
dec
xor
push
jl
xchg
jae
movsl
jecxz
adc
fnstsw
popf
mov
addb
rcrb
xor
mov
in
arpl
pop
neg
out
mov
and
shll
js
cmp
add
loopne
mov
fadds
mov
jmp
inc
shll
dec
or
jb
mov
aad
add
jp
cmp
dec
sbb
in
cld
jbe
shll
mov
mov
push
add
cltd
push
push
mov
lcall
sar
cwtl
sbb
int3
add
sbb
push
adc
rcr
sbb
sbb
cmc
ja
mov
popf
sbb
inc
xchg
int3
pop
test
add
lahf
push
stos
sti
xchg
push
add
sub
jl
loopne
push
add
stos
add
cmp
cmp
xor
pop
testl
or
push
add
add
call
nop
cmpsb
add
ficomps
add
std
sub
cs
inc
loope
incb
add
pusha
xchg
push
add
add
xor
in
push
pop
add
aas
enter
pusha
jne
fs
add
stos
adc
sub
xchg
add
sub
lahf
clc
adc
xchg
pusha
inc
and
addl
and
in
mov
fwait
arpl
pop
das
add
iret
rcl
dec
xor
cltd
rclb
xlat
inc
xor
fbstp
push
rcrl
xor
fcompl
bound
xchg
pop
and
int3
mov
xor
shlb
fdivrs
adc
loop
or
fstl
sbb
jge
es
cwtl
out
add
lret
aaa
mov
test
jmp
sbb
hlt
mov
jg
add
push
push
pop
stos
iret
push
aam
sub
pop
add
addb
sub
pop
mov
xchg
xchg
popa
insl
pop
incl
test
jl
add
outsl
outsb
popf
xchg
negb
add
popa
cmpb
add
pop
fs
ret
mov
adc
popa
jne
xor
and
ljmp
and
push
stos
inc
cmp
add
pop
lret
cmp
bound
xchg
jp
inc
enter
jns
inc
ficoms
add
xor
fwait
mov
mov
or
int3
xorl
setno
test
bound
les
out
cld
pusha
or
int3
jbe
cmp
xor
rolb
nop
mov
sub
les
cltd
mov
inc
sbb
lret
mov
mov
dec
aad
mov
fs
fdivr
pop
add
mov
repnz
popa
push
pop
mov
xchg
std
xlat
call
pop
inc
sub
rcl
fstpt
mov
mov
xchg
sub
push
mov
cmp
mov
jae
fidivl
hlt
bound
pop
pushf
test
mov
pop
jmp
iret
mov
popa
push
sub
lods
add
ja
sti
lods
lret
lock
ljmp
xchg
push
outsb
inc
test
and
or
dec
loopne
repnz
arpl
jbe
add
sbb
add
xor
cmp
aad
in
add
jne
jmp
pop
xlat
pop
enter
xor
popf
js
loope
and
fistpll
loopne
test
sub
ret
data16
sub
dec
cmp
xchg
inc
in
jne
aas
xlat
repz
out
gs
pop
mov
addl
or
mov
ror
cmp
mov
pop
andb
ret
push
mov
jno
mov
pushf
pusha
outsb
adc
add
xor
outsl
sbb
mov
add
xor
ret
addl
addr16
xor
bound
add
jo
out
ficompl
sbb
rclb
pop
mov
adc
jecxz
mov
test
dec
fwait
aas
lsl
pushf
push
pop
jle
pop
xor
dec
dec
js
xor
xlat
incl
jns
stc
inc
mov
sbb
stos
sahf
jl
add
loop
popa
mov
pop
cwtl
inc
jle
cld
xor
movsb
sub
sarb
inc
pop
inc
ja
push
and
jno
nop
push
dec
jno
add
sti
sub
ds
loop
dec
pop
add
push
je
pusha
ja
rcl
pop
cwtl
adc
mov
adc
lods
and
push
sbb
pop
mov
stos
rclb
mov
int3
rol
mov
push
inc
sbb
sbb
pop
das
das
xor
mov
cwtl
jge
xor
lahf
rcrl
es
call
dec
jne
test
out
sbb
xchg
dec
cltd
add
or
inc
jl
nop
jo
rolb
aaa
imul
arpl
inc
cmpl
xchg
sbb
out
mov
ror
sub
popa
sbb
inc
jbe
hlt
xchg
ret
jns
jl
adc
subb
outsl
iret
cmpsl
ss
sbb
loopew
sbbl
or
fcmovb
arpl
mov
aad
test
lods
jae
call
dec
insl
jge
add
adc
andb
sub
pushf
icebp
in
mov
jne
insl
dec
lret
cli
add
inc
call
pop
dec
xchg
fisubrs
outsl
add
cmp
pushf
icebp
pop
jg
popa
cmp
sbbl
add
dec
xor
xchg
xchg
xchg
movsl
lods
inc
clc
stos
pop
sub
or
jp
jbe
fucompp
dec
mov
stc
sbb
pop
mov
pushf
pop
jp
or
xor
and
dec
vpaddw
jnp
mov
cmp
sub
lods
add
inc
inc
les
repnz
in
xchg
divb
add
int3
cs
test
jnp
push
enter
fs
jl
out
add
xchg
rolb
aas
mov
movsb
add
inc
in
xor
adc
push
xor
ficoml
outsb
push
sbb
dec
xchg
sbb
movsl
sbb
pop
fs
cmp
lahf
add
lret
and
add
int3
or
jbe
add
or
sbb
add
cmp
insb
sahf
mov
scas
and
andb
js
insb
dec
or
jno
adc
lods
adc
les
std
and
add
xorb
subb
outsb
push
nop
cld
fadd
mov
inc
daa
mov
or
sbb
push
add
or
pop
sbb
pop
xchg
pop
mov
cmovb
in
rol
insl
and
stos
adc
xor
push
adc
fcoml
les
cltd
aam
cmp
int3
xchg
or
add
data16
cld
gs
inc
popa
subl
pop
es
sahf
dec
loopne
add
arpl
xorl
sub
lods
addr16
inc
cltd
dec
dec
pop
add
mov
add
sbb
imul
jo
fwait
cmp
pop
data16
push
icebp
add
into
jno
sub
jae
add
fs
addb
add
mov
add
sbb
add
ds
lret
hlt
scas
mov
enter
cmp
or
mov
sub
ja
cwtl
das
jmp
imul
repz
xor
inc
ret
inc
lods
xor
loopne
hlt
jno
loop
pop
xchg
movsl
add
sbbb
fs
add
push
mov
push
or
cli
std
jbe
add
xchg
or
add
mov
std
add
fcoms
inc
ror
push
lahf
stc
jne
cmp
ret
test
cmp
test
cmp
cmp
push
adc
sub
jg
sbb
push
or
mov
sbb
and
mov
push
xorb
leave
push
aas
sbbb
adc
sbb
pushf
add
jl
cs
std
leave
aaa
pop
call
xchg
icebp
dec
addl
sbb
ret
inc
test
cmp
jle
add
pop
ret
add
inc
pop
and
or
xchg
subps
pop
in
add
adc
xchg
dec
mov
pop
int
add
add
dec
test
inc
xchg
sahf
mov
xchg
jae
repz
mov
and
and
mov
ret
or
pop
pushf
iret
sbb
xor
sbb
mov
movsl
pop
mov
fmull
add
imul
cmc
add
js
add
sub
mov
loopne
fcomi
arpl
add
dec
test
dec
and
sbb
inc
pusha
mov
hlt
es
add
ja
js
jg
outsb
add
aad
mov
adc
inc
push
add
fisubrl
mov
pop
pop
mov
inc
cld
and
ljmp
movsb
lock
push
sti
ret
adc
push
dec
in
push
sbb
pushf
mov
inc
aas
mov
dec
ret
nop
sbb
xor
movsl
xor
jg
aam
push
add
xchg
jo
or
lret
adc
and
loop
cmp
mov
cmc
pop
fadds
imul
and
adc
scas
icebp
enter
fidivs
dec
or
repz
cli
andl
and
add
leave
sub
cmp
arpl
sub
add
xchg
xchg
xlat
shlb
add
dec
int3
sahf
add
mov
lock
icebp
loop
sub
or
insl
mov
je
stc
lock
or
iret
pop
scas
or
jle
jno
add
add
inc
or
add
iret
loop
scas
ret
and
mov
add
mov
sub
pop
xchg
outsl
adc
adc
mov
sbb
jnp
in
sbb
subl
lea
popa
add
test
mov
or
sub
imul
add
rcr
jmp
adc
jge
mov
jle
add
shll
jp
jle
xor
popa
mov
out
mov
adc
jecxz
jle
adcl
mov
ficoml
add
leave
and
sbb
shufps
imul
loopne
mov
push
adc
in
mov
jmp
cmp
loopne
inc
out
push
xchg
pop
js
jo
pusha
mov
mov
push
or
enter
dec
xchg
mov
jl
and
dec
cltd
inc
mov
stos
sbb
rcll
fimuls
xchg
inc
pop
adc
add
popf
xchg
mov
iret
mov
push
jl
shr
movsb
mov
add
sbb
sub
push
mov
inc
mov
or
sbb
and
and
inc
mov
jl
add
jmp
pop
sbb
ljmp
sub
gs
mov
jl
testb
push
shrb
hlt
repnz
es
cwtl
mov
dec
add
mov
call
pop
aad
sbb
xor
push
pop
pop
sbb
add
xchg
or
or
dec
pusha
add
sub
sub
mov
or
or
sub
adc
push
add
push
inc
pop
test
ds
data16
adc
pop
mov
imul
fcompl
pusha
insl
orb
das
and
mov
jg
addl
roll
xor
test
cmp
subb
push
add
xlat
fbld
scas
dec
add
mov
jle
cs
loopne
call
andb
daa
faddl
fcoml
mov
pushf
loopne
mov
xlat
incl
sbb
les
shl
ret
xor
inc
aam
add
je
sub
in
js
dec
pop
mov
fs
pop
clc
out
add
sbb
daa
pop
cmp
or
rorb
jle
push
pop
popa
ds
push
out
jl
xor
adc
and
insl
lods
or
mov
jnp
add
mov
pop
adc
pop
cmp
push
in
lods
sub
sub
popf
std
mov
orl
push
repz
rcrl
mov
sbb
inc
mov
dec
daa
or
jecxz
add
in
bound
sbb
push
sub
push
nop
push
cli
cs
push
add
jge
inc
and
mov
jle
xchg
adc
out
popf
and
cmp
push
mov
push
movb
icebp
imul
daa
sbb
jne
adc
cmpsl
gs
cli
add
imul
in
inc
sbb
adc
cmpb
inc
decl
in
add
jecxz
imul
xchg
add
cli
or
adc
mov
int
outsb
adc
in
neg
pop
fcoms
cmp
in
test
fmull
leave
mov
jecxz
mov
adc
mov
cmp
cwtl
add
add
leave
push
push
mov
lahf
add
jle
adcb
cmp
jg
or
cwtl
or
enter
popa
std
add
insl
ljmp
nop
jecxz
popf
pop
icebp
dec
xor
pusha
push
push
pop
movsb
lahf
cmp
mov
xor
inc
add
mov
ror
orl
hlt
pop
and
add
stc
dec
mov
mov
and
in
cmpb
inc
cld
cltd
cmpsb
sbb
aad
xor
xchg
inc
inc
or
mov
or
mov
or
dec
in
outsl
mov
add
mov
push
hlt
movsl
lret
dec
and
sub
add
pusha
mov
push
add
ljmp
mov
ret
jbe
add
lcall
and
fiaddl
dec
clc
nop
mov
xchg
and
incl
fld
inc
iret
test
dec
jmp
faddl
xor
popf
lret
je
jl
add
jo
jo
mov
arpl
add
popa
dec
test
add
cwtl
xchg
add
inc
test
pop
lods
dec
xor
xlat
mov
add
dec
addr16
hlt
mov
xchg
adc
add
aam
jmp
push
lock
aaa
pop
test
lock
data16
add
xor
loopne
int3
add
mov
sbb
orb
daa
add
xor
sub
add
mov
mov
aas
icebp
add
inc
xor
icebp
and
lock
push
dec
nop
add
ret
mov
dec
pshufw
push
dec
xor
sbb
aas
push
cmp
orb
push
xlat
es
or
and
cwtl
sub
mov
sbb
add
and
mov
add
iret
sbb
lds
pop
sbb
push
or
mov
xchg
pop
mov
outsb
cmc
testl
xor
lcall
out
xchg
dec
popa
aaa
dec
cwtl
dec
adc
or
bound
mov
and
sub
out
icebp
movsb
lret
imul
mov
in
ret
inc
mov
push
pop
xchg
mov
mov
cmp
inc
int
into
dec
loop
xor
dec
add
pop
ljmp
lcall
push
test
mov
xlat
mov
hlt
mov
mov
jge
mov
int3
xor
subb
xchg
repnz
lds
je
int
add
bound
and
mov
enter
pop
sbb
ret
or
test
dec
adc
jg
sub
enter
sub
jg
sti
inc
fiadds
xlat
shll
sbb
test
cmc
call
nop
fwait
inc
add
pop
fsub
add
push
divb
adc
fcmovb
addl
enter
cmpsb
dec
cwtl
add
pushf
and
xor
inc
lock
loopne
popa
idivl
mov
dec
mov
sbb
fsub
inc
inc
inc
mov
int3
aaa
mov
cmp
xor
nop
outsb
or
sti
pusha
in
divb
fwait
xchg
add
aam
adc
and
xlat
sub
and
xor
xchg
nop
dec
push
in
pop
cmpb
loopne
in
pop
add
das
inc
pop
fimuls
adc
add
cld
add
in
test
es
std
add
popf
lods
scas
rolb
fimull
and
dec
aam
lds
mov
loopne
dec
sbb
mov
mov
cmp
addb
lods
sub
add
cmp
scas
sbb
xchg
insl
mov
add
faddl
ds
add
addr16
dec
int
cmp
lds
flds
icebp
rorb
mov
insl
jno
repz
xor
and
add
mov
and
mov
cwtl
cmp
movb
repz
or
fneni(8087
ret
gs
es
xchg
mov
sub
cs
push
mov
and
xchg
mov
mov
jns
add
das
mov
aam
ret
adc
js
or
sbb
pop
add
adc
in
add
aam
jp
movsb
sahf
dec
idiv
add
int
inc
repz
xor
roll
push
mov
push
push
jno
or
pcmpeqb
mov
and
or
pop
movsb
pop
test
imul
mov
push
roll
nop
add
mov
dec
add
and
cmp
faddl
cmc
fstpl
sub
jns
sbb
sbb
push
sbb
movl
loop
testb
cmp
xor
adc
loop
xor
mov
inc
jo
add
aaa
int3
dec
and
jmp
or
test
ja
and
cmp
mov
push
fistpl
and
cld
add
int
or
inc
sahf
xor
mov
mov
pop
pusha
xchg
add
sbb
or
mov
mov
inc
out
jp
jp
pop
lods
loop
add
cmp
mov
pop
sysret
pop
insl
add
push
imul
test
mov
jg
mov
lret
dec
insl
add
inc
nop
fiadds
in
and
idiv
aad
dec
xchg
je
mov
or
xchg
fmull
hlt
add
mov
or
mov
arpl
push
add
inc
not
add
mov
loop
lods
inc
stos
jbe
addr16
clc
aas
fldenv
mov
xchg
mov
jmp
jl
adc
push
lods
jae
cmp
sbb
loopne
lcall
lahf
pop
loopne
mov
dec
sub
or
sub
fldl
outsl
xorb
aas
js
sbb
push
dec
mov
sub
lock
popl
movsb
js
dec
jno
nop
pop
or
enter
cmp
lods
lea
pop
dec
aad
push
dec
inc
mov
mov
iret
rolb
rdpmc
ret
and
jle
cmp
and
add
lahf
push
cmp
xor
add
mov
push
jl
je
pop
xlat
add
mov
push
sbb
data16
inc
mov
push
lea
rcl
leave
ror
repnz
or
movsb
out
mov
aas
in
add
clc
mov
jp
add
xchg
xor
roll
je
push
cli
or
mov
push
popf
int
cmpsl
sub
std
xchg
ss
cltd
lcall
and
rolb
or
mov
add
ljmp
sbb
jmp
inc
mov
mov
lods
sbb
jo
ror
xor
push
stos
or
xchg
arpl
jnp
ja
pusha
imul
and
into
test
fs
pop
sub
jl
jmp
adc
or
shll
mov
add
pushf
mov
inc
notl
add
add
je
bound
ja
sbb
in
mov
push
scas
add
lods
lcall
push
cmp
fisubrl
xchg
mov
add
mov
push
add
xor
xor
sub
call
out
inc
inc
add
mov
mov
nop
stos
sbb
lidtl
and
push
cwtl
jo
mov
jecxz
pop
mov
ret
add
xorl
loope
mov
and
scas
jge
lock
dec
sbb
push
jo
add
inc
pop
xchg
testb
popf
cwtl
subb
outsl
pop
inc
fwait
iret
or
ret
add
shrl
add
std
das
push
or
stc
cwtl
adc
xor
lds
inc
aas
pop
xchg
repz
call
in
leave
out
clc
mov
dec
lahf
push
jle
and
push
mov
xchg
xor
push
or
ret
sub
mov
test
es
lcall
inc
into
shlb
into
mov
add
xchg
cmp
sub
xchg
sbb
jns
sub
nop
or
push
loope
js
loopne
sbb
adcl
sub
mov
inc
rol
dec
adc
clc
ret
adc
push
push
add
dec
pop
jne
fnstsw
add
mov
xor
add
addb
in
inc
pushl
sahf
add
inc
fs
push
xor
dec
std
fldl
js
gs
test
add
mov
scas
jle
xchg
mov
xor
and
imul
cli
int
mov
je
jl
adc
xchg
test
inc
mov
pcmpgtd
and
add
push
mov
int3
int
push
xchg
dec
adc
cli
add
negl
add
sbb
cmp
jno
sti
jns
add
jp
in
sahf
cli
or
andl
or
subb
into
or
mov
lahf
insl
pop
jg
sub
cld
je
or
mov
pop
pop
shr
nop
adc
fsubl
loopne
loope
mov
pop
cmp
clc
jecxz
add
fiadds
or
dec
call
stc
xor
das
je
pusha
int
dec
xor
mov
lods
or
cmp
add
lcall
mov
popf
sbb
daa
mov
push
cld
or
xor
jns
add
out
jbe
filds
cli
and
rolb
push
mov
mov
int3
es
xor
lods
xorb
xchg
add
adc
lock
inc
ds
add
mov
mov
inc
or
mov
xchg
lret
mov
fs
push
scas
jnp
jle
clc
push
sbb
cmp
pop
dec
mov
jecxz
add
inc
add
insb
mov
cmpsl
adc
lcall
mov
adc
push
cmpb
jno
dec
xchg
jnp
orb
or
mov
xchg
subb
cli
je
das
imul
add
movsb
sbb
clc
add
mov
lahf
stc
xor
rolb
jg
clc
fsin
loopne
cltd
pop
sbb
push
or
pushf
test
xchg
loope
mov
or
ret
adc
push
xchg
push
jne
pop
js
cs
aam
and
sub
cmpsb
lock
repnz
mov
add
jae
xlat
movsb
xchg
xor
fsts
inc
jl
fbld
lret
sahf
in
mov
add
int3
cs
xor
add
add
jbe
sahf
add
pop
arpl
test
xorb
outsb
mov
inc
pop
jle
scas
sbb
lods
mov
jnp
aas
pop
push
lret
scas
inc
or
push
out
mov
andb
xor
sbb
jb
xor
mov
dec
cs
dec
adc
cwtl
cwtl
jae
jl
pop
xchg
hlt
push
xchg
jl
mov
xchg
hlt
sub
and
movsl
test
sbb
cmp
cmp
icebp
and
addb
ja
outsl
test
movsb
or
inc
les
or
rorl
add
stos
xchg
out
loopne
sub
cmp
in
mov
mov
mulb
add
jl
sbb
test
imul
enter
and
mov
in
mov
xlat
sub
andl
mov
insb
addr16
and
cmp
mov
push
mov
push
lods
jb
and
inc
sbb
add
int3
and
scas
shll
jo
andb
sub
fsubp
int3
out
pushf
nop
pshufw
sub
dec
and
loopne
pop
mov
mov
cmp
cmp
xchg
mov
test
je
leave
jae
adc
outsl
fwait
mov
cmp
or
clc
inc
jnp
data16
push
xor
rolb
add
mov
orb
movsb
add
sahf
stos
das
in
mov
fiadds
cmp
add
inc
stos
mov
ds
jns
xchg
lret
add
loopne
lahf
jle
xchg
add
sub
pop
dec
jp
xorb
mov
push
cmpl
arpl
or
sub
add
mov
lods
add
pop
out
sbb
and
fists
mov
and
out
sti
and
xchg
push
js
jle
xor
icebp
aaa
fpatan
and
mov
imul
jnp
xor
into
sub
add
push
icebp
lods
test
popa
push
pop
pop
inc
push
mov
push
or
rcrb
sbb
shlb
sbb
insl
in
mov
insb
add
mov
pop
nop
punpcklwd
sbb
loope
aam
push
or
and
jbe
insb
test
pop
push
mov
addl
mov
jnp
push
fisttpl
les
in
adc
or
jge
mov
rcrb
data16
add
sub
in
jecxz
out
add
sbb
rcl
xchg
lcall
mov
jns
xchg
or
and
mov
test
dec
int3
adc
lock
add
les
add
push
and
cld
xor
test
push
enter
cld
mov
and
mov
enter
or
mov
mov
or
pop
pop
fdivs
dec
mov
daa
js
xor
jg
jl
jecxz
insb
popa
dec
inc
mov
push
sub
jns
add
xor
mov
jmp
pop
jae
xchg
shrb
test
ljmp
call
pop
mov
xchg
jo
push
test
mov
iret
mov
add
add
fsubr
jl
and
adcl
scas
imulb
add
repz
in
sub
call
mov
stos
mov
call
mov
cmp
imul
lret
sub
xor
push
add
push
add
mov
test
jmp
and
sbb
adc
andb
addb
repz
jae
xor
cmc
xor
mov
call
imul
pop
std
inc
stos
mov
and
mov
add
sbb
inc
jns
clc
mov
andb
cmpsb
adc
mov
daa
and
out
inc
cmp
test
cmp
sbb
cmpb
out
stos
add
data16
loopne
pop
add
or
iret
inc
hlt
popf
add
inc
fwait
xor
aaa
push
and
dec
aam
push
sbb
cmp
xor
jnp
fwait
sub
lea
mov
inc
fs
sub
pop
incb
mov
push
and
int3
add
push
pushf
ret
arpl
rolb
push
add
inc
pop
test
add
cwtl
push
add
mov
movb
inc
ret
inc
mov
test
add
jge
loop
jp
arpl
mov
out
add
loope
inc
cmp
outsl
sbb
scas
pop
js
jmp
mov
nop
inc
popa
jno
inc
inc
jecxz
ret
mov
cmpsl
adc
pxor
xchg
cmp
jp
fsubs
sub
test
in
add
insl
xor
sub
inc
lods
ficoml
inc
push
add
and
aas
xchg
jb
int3
je
loop
xchg
push
add
jp
and
add
dec
clc
lea
inc
loopne
shll
dec
jne
inc
mov
sub
shrl
xor
inc
push
dec
xchg
pop
add
icebp
lcall
xchg
jg
push
inc
pop
mov
out
push
dec
dec
sbb
idivl
sahf
add
loopne
nop
and
cwtl
movsl
add
xchg
xchg
je
and
movsb
int3
adc
rcr
and
sti
test
mov
or
popa
rcll
xchg
sti
add
imul
mov
push
jnp
or
data16
out
adc
adc
hlt
or
cwtl
jo
dec
jmp
pop
cmp
leave
enter
fcmove
sbb
jl
jno
sub
mov
adc
and
outsb
sub
insb
jmp
mov
sub
sbb
movsl
fs
les
pop
cs
cld
lods
mov
mov
inc
sahf
mov
and
repnz
adc
pushf
add
adc
iret
pop
mov
add
inc
sub
ret
pop
add
sbb
add
mov
jno
push
filds
jns
adc
icebp
push
sbb
mov
scas
xor
sbb
pop
stc
dec
xorb
fsubrs
push
gs
adc
test
or
mov
sub
in
sbb
pop
shll
addb
in
pop
popf
movq
fs
repnz
pop
add
add
jne
dec
push
mov
and
faddl
mov
and
add
in
xor
add
sub
cld
shlb
jbe
mov
add
or
scas
mov
outsl
lock
or
aam
fcoms
push
mov
add
lods
fdivrs
push
subb
movb
cmpsl
jmp
xor
hlt
add
imul
push
movsb
pop
js
pop
mov
loopne
mov
cmpl
mov
repz
mov
push
hlt
or
frstor
push
test
pop
pop
sub
test
push
sub
in
inc
and
mov
or
mov
in
es
out
or
inc
sbb
mov
pop
mov
std
ficompl
adc
push
push
adc
and
popa
mov
lret
or
jg
fiaddl
sbb
es
adc
and
call
adc
cwtl
xchg
or
fwait
or
enter
or
jb
cwtl
xor
adc
sar
call
jle
add
cmp
xchg
add
push
xchg
test
lcall
testl
sub
push
or
xchg
pusha
fdivr
xor
pop
je
sub
mov
iret
pop
mov
nop
int
inc
add
in
add
test
dec
add
jbe
rclb
int
or
gs
and
jns
push
xor
lret
jnp
xchg
cwtl
push
add
imul
mov
jne
push
rorl
loope
adc
add
jl
repnz
or
imul
out
push
jecxz
sti
dec
add
jle
add
mov
in
push
add
ret
and
hlt
inc
push
loopne
lock
jnp
jecxz
adc
xchg
sub
add
in
clc
mov
xor
adc
dec
pop
inc
fisttps
add
xor
adc
or
pop
or
movsb
mov
hlt
lods
lock
or
cmp
mov
push
mov
add
pop
aas
sbb
cld
outsl
dec
jl
and
ret
je
jle
fwait
addb
cs
icebp
add
test
insl
jge
and
and
js
and
dec
dec
push
add
pusha
sub
pop
mov
inc
jo
in
push
iret
adc
int
mov
mov
push
or
xchg
mov
or
mov
insb
aam
xor
jecxz
loope
sti
in
mov
inc
fs
cmp
add
fs
stos
pop
icebp
push
lea
in
jns
fucomip
xchg
ret
jnp
imul
jle
data16
out
ljmp
mov
dec
leave
sbb
lods
push
mov
in
xchg
adc
leave
jp
jnp
dec
test
xchg
rorl
idivl
dec
sbb
pop
in
xchg
inc
rcrl
stc
cmp
test
fcomi
add
sub
shll
jmp
sub
aas
mov
adc
adc
and
xchg
sarb
aas
movsb
les
add
subb
sub
repnz
dec
add
add
adc
stos
enter
lock
dec
mov
cmp
shl
mov
fwait
pop
cmp
test
in
shlb
add
mov
pop
pop
test
add
add
adc
inc
rcrb
sbb
inc
rorl
mov
incl
outsl
push
add
mov
sarl
adc
add
adc
pop
aad
cwtl
or
mov
sbb
add
dec
sbb
cltd
leave
and
inc
jo
in
xor
add
or
daa
clc
repz
int
xor
sti
sbb
rorb
pop
test
push
jge
and
jnp
jno
out
js
lods
popf
rcl
loop
push
rolb
mov
jno
mov
adc
and
mov
mov
repnz
scas
xor
out
push
sbb
mov
clc
sub
sbb
cmp
and
mov
pslld
cmp
inc
xchg
mov
jecxz
dec
outsb
inc
jp
es
push
call
data16
add
inc
popf
ffreep
stos
aas
jecxz
jnp
push
mov
jecxz
jl
jno
add
inc
and
mov
cmp
into
rorl
lock
mov
test
rolb
pop
add
enter
sub
xchg
imul
mov
pop
lds
or
and
adc
rorb
std
add
mov
dec
mov
mov
pop
jnp
jo
or
mov
daa
in
add
xchg
jnp
lcall
and
pusha
lods
sub
pop
add
dec
js
or
pop
cwtl
xchg
addl
lock
cmp
add
mov
movsl
cmpl
xchg
pand
cmpsl
xchg
pop
xchg
or
hlt
lods
inc
or
outsl
add
xor
pop
cmp
negb
jae
cli
mov
inc
inc
out
nopl
cmc
inc
xchg
pop
xor
xchg
mov
inc
dec
sbb
add
ret
and
push
sbb
lahf
ret
mov
jne
imul
sub
aam
push
cwtl
push
sbb
mov
xchg
int3
call
adc
mov
jno
mov
scas
mov
rcl
add
sbb
stos
shl
repz
xchg
push
dec
das
dec
ja
inc
fidivrs
and
xor
push
mov
pop
jmp
dec
and
in
fcmove
dec
or
or
adc
xor
or
jl
loope
outsl
push
sbb
fstl
sub
popa
sub
xchg
std
out
and
leave
xchg
add
inc
pusha
hlt
jnp
pop
sbb
jecxz
mov
aas
in
or
lea
into
das
dec
mov
cmpl
pop
sarb
push
xchg
das
je
add
sub
insb
mov
in
inc
nop
dec
aas
and
cld
add
xchg
mov
or
jo
in
xchg
addr16
mov
push
sub
outsl
stc
in
loope
inc
inc
mov
pop
pop
dec
xchg
lock
add
xchg
dec
push
andb
ficoml
add
push
xor
les
fidivrl
mov
cmpsl
mov
jbe
clc
sub
or
loopne
add
inc
lock
mov
dec
push
pop
popa
cmp
popa
xchg
pusha
sub
cwtl
andl
adc
mov
xor
inc
xor
ficoms
jge
iret
rorl
inc
mov
dec
sub
or
in
xlat
addb
inc
fs
sbb
stc
mov
mov
mov
or
and
xchg
add
idiv
inc
test
rorb
loopne
int3
push
adc
jmp
test
cli
xchg
ja
sbb
push
mov
add
mov
or
add
jae
and
adc
pop
shl
in
pop
test
subb
lahf
sub
jb
in
jne
cld
add
roll
cwtl
aam
dec
cmpsl
and
jl
sbb
movsb
icebp
ja
dec
mov
sbb
and
std
xchg
xchg
enter
fwait
pop
pop
adc
sbb
sub
jne
xor
gs
ficoms
addb
ja
fldl
shlb
and
jno
lods
or
sbb
lret
inc
call
imul
clc
bound
pop
cmp
into
pusha
mov
lcall
int
nop
add
push
stc
add
into
dec
subl
int
adc
pusha
popa
movsl
getsec
ror
popa
rorb
test
jns
add
cmp
dec
movsl
dec
xchg
or
mov
add
aas
outsb
add
into
push
movswl
or
mov
cmp
popa
pop
fadd
popa
in
cmpsb
mov
add
ds
jae
mov
lock
cltd
in
nop
inc
sbb
push
adc
push
fistps
cltd
mov
push
and
push
outsl
jb
fsubs
stc
add
mov
xor
dec
dec
into
inc
jmp
sbb
and
or
sti
lahf
xchg
mov
mov
inc
dec
roll
lds
fndisi(8087
incb
jbe
dec
jbe
ds
js
cmc
and
sti
orl
sar
inc
loope
add
sub
push
xor
ret
push
test
fadds
popf
add
loope
sti
into
xchg
pop
loop
data16
pop
insb
adcb
cld
add
dec
sub
cmp
divb
movsb
lods
and
scas
rorb
nop
shrl
add
hlt
xor
inc
ss
or
lret
sub
jo
pushf
pop
or
roll
cs
sbb
out
pushf
add
and
shl
lret
dec
xchg
outsl
and
sarb
inc
jae
add
outsb
arpl
push
mov
shl
lock
pop
mov
dec
cwtl
jns
dec
outsb
out
orb
fnstcw
test
int
stos
rclb
or
xor
lods
inc
sahf
inc
mov
xor
lds
mov
cltd
cmp
mov
mov
pop
adc
mov
dec
das
negb
add
rcl
mov
mov
mov
add
inc
dec
jge
pusha
mov
add
loope
dec
xchg
jge
jmp
mov
sbb
lods
cmp
les
xchg
and
mov
shl
pushf
cwtl
cs
cmp
lods
mov
jo
je
add
push
test
std
cwtl
data16
pop
inc
fnstcw
push
loopne
xor
adc
dec
stos
or
in
in
cmp
mov
sbb
inc
jecxz
pop
lock
xchg
add
lahf
add
lcall
mov
sbb
andb
sbb
cmp
pop
and
in
push
int3
cli
pop
cmp
mov
mov
insl
inc
test
and
jbe
lret
roll
dec
in
inc
and
adc
jecxz
add
add
pop
jo
cmp
pop
jno
push
add
aaa
xor
dec
xchg
jns
and
and
jbe
dec
lods
mov
add
outsl
jmp
adc
or
dec
and
cmp
xchg
rorb
push
add
sarb
in
or
xchg
add
mov
push
and
je
add
cmp
test
jae
pop
sub
out
pop
sbb
xchg
adc
orb
mov
or
aam
add
push
cmpsb
lock
pop
sbb
add
scas
dec
mov
pop
imul
shll
insl
jns
jne
jge
and
std
adc
xchg
shl
jbe
ljmp
xchg
mov
mov
rolb
mov
aas
mov
sub
cmpsl
dec
xchg
jecxz
pop
sbb
xchg
test
and
inc
or
mov
in
adc
and
lods
ja
enter
lods
in
add
mov
xor
out
fbld
mov
add
or
aam
popa
jo
or
pop
bound
mov
and
sub
sbb
pop
fwait
inc
adc
lahf
aas
mov
loope
add
ss
mov
mov
imull
fimuls
xor
xchg
mov
mov
dec
ds
pop
test
or
add
shll
fsub
mov
mov
xchg
pop
pop
xor
imul
jg
jp
movsl
add
push
push
je
sub
xchg
add
into
inc
lds
in
mov
or
cmp
dec
pop
sub
js
mov
add
mov
push
out
add
jg
hlt
xor
jnp
ja
das
lock
lods
pusha
sub
icebp
sub
je
sub
pushf
stos
jbe
pop
loopne
sub
add
and
test
and
xchg
cmp
add
cld
aad
pop
test
mov
lret
mov
ficoms
gs
js
je
sub
mov
aas
scas
mov
popa
mov
jnp
pop
add
sbb
jg
or
mov
cltd
mov
nop
add
adc
and
lcall
arpl
adc
leave
jecxz
loopne
mov
push
jg
popl
sub
popf
or
sahf
jns
test
cs
xor
mov
shrl
sub
dec
jl
add
mov
ss
les
lods
cs
adc
or
leave
xchg
rcll
jmp
add
nop
lods
fwait
bound
cwtl
add
mov
mov
add
lea
mov
or
cmpsl
add
mov
xchg
int3
add
das
xor
sti
xchg
aaa
push
je
sub
mov
or
push
les
incl
lods
add
mov
and
mov
lds
std
push
mov
les
mov
int3
pushf
shrl
gs
fsub
mov
js
popf
jo
sbb
pop
add
pushf
shrl
loope
faddl
dec
das
xor
cwtl
dec
add
or
add
ljmp
lods
inc
push
bound
cmp
and
mov
add
loopne
rol
sub
mov
outsl
pop
mov
cmp
test
lret
xor
add
mov
jne
jb
add
popf
jno
cmc
pop
sbb
sub
cmp
pop
movsb
dec
or
shlb
push
test
pushf
inc
xor
lret
cmp
loopne
adc
leave
add
add
sub
nop
clc
add
sbb
call
or
push
adc
push
inc
add
cld
add
sub
dec
pusha
jno
jo
add
dec
xchg
roll
mov
movsl
rolb
pop
mov
add
mov
adc
xor
pop
cmpsl
jp
adc
add
inc
mov
cltd
cmp
jo
aad
nop
add
shrl
in
pushf
cmpsb
xchg
adc
xchg
xlat
cmp
cmp
add
jnp
mull
into
insb
xchg
inc
jbe
aam
add
xchg
xor
movsb
lock
add
mov
outsb
mov
add
ss
andb
push
mov
bound
mov
movsl
movsl
and
scas
cmpb
sub
mov
add
and
jge
in
dec
aad
inc
pop
dec
xor
arpl
nop
mov
pop
inc
push
lods
adc
out
add
fcomps
push
sub
dec
movsb
adc
add
pusha
call
xor
call
test
push
add
xorl
jmp
sub
inc
push
ret
xor
adc
outsb
xlat
jae,pn
add
test
lcall
lret
jnp
cwtl
jo
mov
dec
nop
andb
cmpsb
and
dec
sahf
push
cmp
add
add
xchg
ss
cmpb
add
out
adc
add
mov
push
and
jge
addb
lret
movb
les
notb
inc
dec
xor
aam
mov
ja
loopne
inc
incl
in
fadd
jg
xor
add
xchg
leave
inc
xchg
push
sahf
rolb
loope
mov
push
cld
movsb
mov
xor
nop
call
out
and
test
mov
inc
js
filds
cmp
push
mov
add
sbb
mov
nop
enter
pop
add
dec
fisttpll
add
daa
cmc
jno
psubw
repz
cltd
in
sahf
divl
mov
pushl
mov
mov
cli
orb
add
mov
inc
mov
add
call
enter
lods
test
xchg
les
add
les
loopne
add
or
jns
mov
faddl
hlt
stos
mov
adc
in
mov
lret
iret
fisubl
call
add
faddp
call
push
std
dec
dec
xchg
out
add
or
mov
inc
test
push
jo
adc
pop
and
test
popa
jg
imul
lret
pop
add
sbbb
or
mov
pusha
pop
iret
add
xchg
nop
push
and
stc
enter
or
dec
pop
cmc
in
cmp
mov
xor
add
ds
push
mov
xchg
insl
jl
pop
adc
ret
add
sti
add
push
cmp
imul
or
lret
sub
or
in
xchg
adc
adc
fbld
imul
xor
dec
and
push
cmp
add
sti
add
jne
add
and
into
fwait
subl
les
inc
in
sti
xor
add
cld
loop
push
mov
sub
and
in
mov
pop
js
in
dec
call
cmc
ficompl
fadds
cmp
add
jns
inc
sub
add
adc
stc
sub
cmp
aam
adc
xor
jecxz
cmpsl
dec
test
add
sbb
jne
xlat
jmp
popa
xor
cld
int3
mov
inc
mov
fs
lock
stos
aad
jns
cmpsl
ja
cli
push
add
cmp
ret
cmp
lds
pushf
rcrl
cli
mov
into
xchg
push
sahf
call
shrb
and
cltd
filds
repnz
mov
xor
outsl
and
shlb
outsl
cwtl
or
sar
rcr
or
ss
push
sbb
mov
in
outsb
jnp
sub
pop
in
add
cmc
pop
add
sbb
pop
add
push
pop
popa
and
sbb
add
lods
das
sub
mov
leave
xor
lret
outsb
mov
popa
dec
rcr
cmp
or
sbb
push
cmp
inc
mov
dec
loop
pop
hlt
pop
es
sbb
jl
call
stc
or
sub
movsl
adc
dec
sub
jno
mov
jb
add
in
sbb
inc
pop
xor
inc
clc
lret
cmpb
js
mov
xchg
lds
ds
int
cwtl
dec
daa
adc
add
sar
outsb
add
ficoms
mov
mov
jg
repnz
xlat
popa
add
insb
mov
pop
add
popf
xchg
adcb
out
shl
pop
pusha
dec
iret
mov
dec
das
pusha
and
sahf
mov
addr16
icebp
ret
in
add
jl
lret
and
sbb
daa
jb
movsl
lock
jne
in
add
add
inc
ds
fisttps
lcall
xor
jp
std
dec
sub
sbb
add
lret
out
dec
das
movsb
mov
mov
jbe
and
jle
or
dec
pop
sbb
inc
jne
add
mov
sub
bound
add
sub
das
pop
push
dec
cmp
mov
mov
xlat
xchg
add
mov
push
dec
loope
loopne
add
fdivrl
cmp
jmp
sub
xchg
or
shrl
sbb
out
scas
add
notl
icebp
cmp
inc
or
ds
mov
cmp
xor
or
sti
mov
cmp
push
fwait
sbb
dec
xchg
xchg
add
push
add
cmp
and
repz
mov
gs
or
int3
or
pop
inc
or
jge
sbb
ret
pushf
cmp
outsl
pop
pop
icebp
pop
popf
add
adc
jbe
jo
roll
mov
in
sbb
repnz
xchg
mov
shl
outsl
jg
mov
fadds
mov
push
adc
jg
or
icebp
je
lea
add
dec
push
cltd
add
gs
clc
adc
cld
pop
and
xor
cld
lock
repz
pop
cltd
and
inc
adc
pushf
add
icebp
sbb
xchg
movsb
mov
push
fs
sbb
imul
cmpsb
cwtl
cmpsl
cs
enter
push
fs
jle
add
fiaddl
sub
and
mov
jb
andl
or
lock
lods
clc
sahf
dec
dec
addb
loopne
xchg
push
test
fcmovbe
mov
fcomip
movsb
dec
test
mov
sbbl
or
fistpl
test
push
enter
jecxz
sbb
inc
add
ja
faddp
imul
adc
enter
push
add
in
lahf
nop
imul
dec
push
ret
loop
mov
and
addl
loope
in
movsb
add
xchg
mov
add
inc
sub
push
sbb
xor
movsl
dec
and
ss
dec
ret
aad
rolb
pop
adc
or
cmp
sub
movsl
mov
cs
loopne
and
ficomps
add
mov
mov
scas
std
lock
pusha
mov
push
dec
out
sbb
ret
iret
nop
adc
shrl
outsb
mov
sbb
inc
ret
ja
xor
jns
push
mov
movsl
std
push
je
xchg
jle
xchg
mov
dec
xchg
xor
push
je
push
push
cmc
daa
pop
dec
enter
bound
fists
mov
adc
or
pushf
or
lcall
dec
inc
je
add
mov
std
push
cmp
cltd
pop
mov
popf
add
xchg
xor
inc
call
jns
pop
orl
mov
fucomip
cwtl
add
cmp
sbb
std
addb
inc
ljmp
into
and
xchg
or
pusha
es
adc
lods
lcall
pushl
push
mov
add
sub
push
mov
pushl
mov
add
popl
pop
push
mov
push
push
pop
push
mov
add
pop
sub
xchg
pop
mov
call
int3
pushl
pop
push
mov
add
add
xchg
mov
push
push
pop
add
sub
xchg
pop
mov
pop
sub
mov
mov
sub
mov
add
push
mov
shl
neg
inc
inc
xor
sub
pushl
pop
add
sub
add
cmpb
jne
sub
mov
mov
movb
sub
pushl
pop
add
push
mov
push
pop
push
pop
pop
push
push
push
mov
mov
add
sub
push
pushl
pop
popl
pop
mov
push
mov
call
push
mov
push
mov
not
and
dec
and
xor
sub
pop
add
push
mov
xor
add
pop
pop
mov
pushl
mov
add
push
mov
add
add
xchg
pop
pushl
pop
push
mov
add
push
mov
add
pop
xchg
pop
ret
push
mov
push
push
popl
addl
mov
add
pusha
pushl
push
mov
xor
pop
pop
push
push
pop
or
add
add
xor
pop
pushl
subl
pop
push
mov
mov
sub
shr
sub
push
mov
sub
pop
add
pop
shr
push
push
mov
add
push
mov
mov
pop
mov
add
add
mov
pop
pushl
push
mov
sub
pop
mov
add
push
mov
and
inc
xor
add
pop
jmp
push
mov
add
push
mov
add
pop
add
sub
sub
xor
pop
sub
mov
mov
add
sub
inc
shr
sub
add
add
sub
add
pop
push
push
mov
push
pop
sub
mov
pop
add
mov
add
sub
mov
push
pop
add
pop
or
jne
popa
leave
ret
