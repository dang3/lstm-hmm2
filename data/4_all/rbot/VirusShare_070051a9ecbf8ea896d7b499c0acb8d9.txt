decl
add
mov
push
push
mov
push
call
mov
pop
test
je
jg
notl
add
dec
push
sbb
adc
or
les
mov
mov
mov
idiv
pop
pop
pop
ret
push
mov
mov
jg
push
mov
push
lea
push
sbb
lret
xchg
lock
push
pushl
add
notb
and
adc
add
movups
and
jnp
mov
mov
pop
ret
adc
mov
ds
dec
add
xor
incl
dec
inc
add
incl
add
xor
cmp
setge
dec
and
add
add
fstpl
ret
push
jge
add
shr
sub
fisttpll
rcl
sti
add
mov
mov
pushl
neg
lea
pushl
jmp
movb
cmpsb
sar
mov
xor
add
add
add
add
or
adc
cmc
pop
divl
jg
rcll
lea
pop
inc
push
push
push
addb
push
xor
sar
inc
sub
movsl
loopne
cmp
daa
stc
iret
jne
cltd
divl
fstpl
mov
jp
leave
lret
push
scas
nop
inc
jecxz
sub
repnz
sub
pushf
and
jno
divb
outsb
gs
fisubrs
dec
dec
pop
mov
shlb
pop
push
dec
sbb
in
push
outsl
push
add
and
bound
movaps
dec
mov
loopne
les
push
mov
add
adc
lock
in
pop
lldt
mov
mov
mov
adc
xor
adc
or
ja
in
jle
shr
push
pavgb
dec
mov
inc
in
inc
push
call
xor
call
jns
call
dec
adc
test
ret
add
push
push
mov
add
lea
push
push
pop
enter
call
jo
push
push
mov
rcrl
push
sub
push
jno
cmp
loopne
aam
fdivl
fimuls
sub
push
ret
and
jnp
jge
test
adc
pop
aad
jo
sbb
add
fiadds
dec
push
pop
popa
cmpsb
enter
adc
mov
int3
push
sbb
leave
loope
push
fistps
fimuls
xchg
or
add
mov
adc
jns
sbb
pushf
push
addr16
insb
nop
gs
rorb
cs
jb
enter
out
orb
test
xor
push
fdivs
enter
cmp
push
adc
inc
push
jns
enter
jge
call
or
dec
fsubl
lea
fdivrs
enter
les
clc
mov
ja
push
clc
lock
fs
stos
clc
clc
and
daa
mov
mov
mov
insl
mov
or
and
pop
pop
push
sub
add
cmp
dec
lock
data16
andl
adc
jl
std
inc
add
mov
sbb
std
push
frstpm(287
pop
jge
or
and
adc
jne
imul
pop
adcl
cltd
xor
cld
jne
dec
and
ret
xor
inc
add
sub
adc
aaa
lret
fcmovnu
aaa
rorl
or
clc
add
in
out
xorb
jns
data16
std
cmpsl
lahf
adc
fcomps
rolb
add
cmp
mov
jo
inc
push
mov
mov
jne
sub
leave
push
cmp
cli
push
push
scas
in
fisttps
mov
push
mov
daa
in
mov
pop
cmp
push
cmp
push
add
push
mov
test
push
pop
gs
test
xor
fs
dec
lock
mov
cld
shlb
inc
push
push
sbb
incb
inc
sub
jg
jno
mov
cmp
sub
push
push
push
add
sub
icebp
inc
dec
jne
clc
stc
push
loopne
and
pushl
jge
xorb
xor
addr16
lcall
or
shl
in
outsb
mov
clc
fmull
daa
push
outsl
aaa
in
fstl
dec
fstpl
cmp
inc
fadd
pop
pop
faddl
addr16
fs
out
mov
xor
sub
mov
cld
xor
push
orb
pop
or
ss
sub
cmp
pop
jae
loope
cmp
sar
xchg
push
call
repz
outsl
jge
add
push
jmp
adc
jne
jmp
lret
jbe
jne
mov
fadds
pusha
daa
daa
and
fildll
jbe
mov
lret
mov
lea
sbb
shr
rep
mov
and
rep
das
mov
push
lock
stc
add
add
sbb
or
fbstp
add
aas
icebp
sub
movaps
std
push
and
add
divb
add
out
pop
cld
sbb
jbe
add
mov
jecxz
in
xchg
mov
call
xchg
xlat
jb
imul
jb
mov
lea
fbstp
out
xchg
loopne
pop
cmp
adc
or
outsl
cmp
test
dec
jne
mov
xchg
cltd
mov
mov
add
iret
xchg
pushl
and
or
pop
push
addb
mov
mov
cmp
mov
cmp
lock
and
fldt
cmp
cmpsl
out
and
in
negl
je
ss
mov
movsl
adc
sti
inc
cmp
mov
outsl
cld
cmp
jne
mov
cmp
je
sbb
push
test
pop
movb
je
add
es
test
pop
sarl
sbb
repnz
and
movsl
fdivr
lret
pop
sub
xor
sub
insl
push
stos
stos
mov
sbb
notb
sbb
sbb
rcr
adc
xchg
cmp
pop
imul
outsb
add
nop
xchg
push
lea
push
inc
fdivrl
add
mov
pushf
jo
or
mov
add
sbb
mov
stos
dec
lret
cli
out
xor
mov
mov
aaa
push
mov
aas
hlt
mov
adcl
jle
je
stos
pushl
cmp
fsubs
std
add
inc
sbb
inc
push
mov
out
add
add
xor
adc
std
mov
test
jne
mov
jmp
mov
add
rcll
sub
loop
jp
out
mov
xor
imul
cmp
je
sbb
mov
jae
addr16
and
add
rolb
or
and
mov
jl
daa
mov
test
add
push
icebp
loopne
stc
add
and
enter
push
outsb
arpl
push
xor
std
add
ret
mov
or
mov
ret
ja
cwtl
push
push
mov
mov
sub
jle
inc
mov
lret
and
sub
pop
insl
add
push
scas
roll
mov
and
mov
xchg
or
xor
mov
lret
loope
sbb
loope
mov
pop
or
mov
cmp
jae
and
adc
gs
stos
aad
sub
pop
jae
or
push
lds
icebp
mov
push
into
cli
jg,pt
pushf
fstl
mov
std
lock
push
dec
js
add
add
jae
rcrl
mov
xlat
clc
in
mov
mov
or
incb
jmp
push
add
test
pop
sbb
mov
adc
ja
push
pop
fmull
jl
ret
pop
push
inc
aas
cmp
jbe
mov
xor
call
inc
cmp
iret
mov
cmp
je
ja
adc
dec
push
fildl
adc
cmp
in
shr
and
daa
pop
jmp
ljmp
jecxz
mov
jns
clc
pop
stc
cmp
jae
call
outsl
jmp
cmp
jae
add
cmpsl
punpcklwd
or
dec
je
loop
sbb
pop
sub
mov
repz
pop
push
push
out
pop
pop
and
or
insl
add
icebp
xchg
sub
stos
cmp
push
mov
outsl
mov
fnstsw
cmp
xchg
loopne
leave
lds
ja
adc
or
sub
pop
jae
jmp
push
xor
add
sbb
sub
jo
bound
repz
push
jmp
shlb
rol
push
int3
mov
test
iret
pop
flds
not
push
fcomi
shr
jbe
and
js
clc
mov
add
mov
test
test
call
pop
mov
ret
mov
call
push
jbe
in
push
fs
movsl
loope
inc
inc
imul
pop
test
inc
push
andb
mov
enter
ja
sti
cmp
lods
shrb
mov
lcall
and
mov
pusha
test
push
aaa
divl
sti
lcall
lds
testb
jne
orb
ficomps
xor
cld
add
fdivr
xor
adc
inc
xor
ds
ja
xor
cmp
mov
mov
push
push
add
dec
ficoml
cld
or
and
cs
loopne
cld
les
jle
in
pop
in
mov
dec
hlt
or
push
push
jge
push
test
push
adcl
and
pop
push
inc
movsb
imul
lds
push
xchg
ss
call
mov
clc
shll
sbb
mov
sbb
jmp
sub
add
and
icebp
sbb
pop
int3
mov
cmp
popf
jle
loopne
push
je
cwtl
xchg
ds
sbb
xor
test
out
dec
fadds
add
mov
mov
push
push
mov
sbb
lock
das
add
sbb
push
xor
mov
int3
sbb
popf
cwtl
xor
aaa
jecxz
inc
sbb
clc
jbe
sbb
int
fldcw
movl
pop
cmp
jbe
mov
pop
push
add
cld
std
sbb
aaa
mov
and
push
mov
lock
lods
and
push
imul
imul
pop
jle
mov
adc
mov
xor
push
fildl
sbb
daa
iret
jl
lock
mov
add
inc
cmp
in
rol
ret
dec
push
push
push
lds
les
and
leave
int3
clc
pop
add
les
insb
sbb
pop
cmp
push
pop
nop
imul
inc
ljmp
fdivrs
and
cwtl
jno
and
adc
imul
push
sub
ret
loopne
dec
pop
je
mov
mov
daa
xor
lret
cwtl
adc
mov
stc
mov
inc
nop
lcall
movsb
ret
push
popa
pop
or
sbb
cltd
xchg
xchg
add
out
mov
ss
and
or
insb
rcll
scas
cmp
scas
push
pop
testl
popa
rorb
das
and
or
push
mov
inc
fcmovnb
dec
pop
pop
das
adc
into
ljmp
lret
repnz
clc
cld
lock
lcall
jbe
jno
lock
pop
adc
hlt
dec
mov
mov
dec
cmp
fs
dec
mov
repnz
clc
cld
cld
mov
mov
decb
sbb
and
adc
dec
pop
jg
or
ja
add
mov
mov
push
add
sbb
or
mov
dec
popa
xchg
loope
push
outsl
adc
lods
sbb
pushf
push
jae
inc
stc
rclb
bound
data16
push
mov
rolb
sub
fwait
clc
rcrl
and
loopne
fimuls
mov
xor
imul
das
xor
mov
insl
xlat
cmp
setg
pop
pop
sbb
mov
ds
cld
xchg
das
inc
lea
aam
orb
xor
jo
fsubs
jg
mov
pop
imul
sbb
cmp
cld
out
stos
scas
jge
dec
je
jg
orl
lcall
push
inc
pop
jo
stos
adc
mov
fstl
in
sub
je
shlb
aaa
push
fcomp
das
subl
cmp
push
sub
mov
mov
xchg
fcmovnb
jnp
dec
mov
rcl
lods
insl
test
jp
in
imul
xorl
and
jne
sub
pop
into
adc
add
mov
jnp
aad
sub
mov
cmpsb
sbb
imul
pop
pop
fcomp
push
fstpt
cmc
imul
pop
mov
out
adc
adc
insw
fs
loopne
pushf
adc
xchg
mov
add
cwtl
sbb
ret
aad
xchg
call
xchg
add
mov
pop
or
sbb
pushf
ret
daa
int3
add
cltd
mov
or
aam
dec
sub
push
adc
aad
push
add
imul
hlt
adcb
fs
decl
xor
movsb
sbb
xor
pop
cmp
jne
push
xor
in
aas
les
scas
pop
ss
int
mov
mov
cld
jo
mov
insl
subb
push
mov
sbb
mov
divl
aas
inc
push
dec
or
fsubrs
in
aam
or
cli
mov
cmpsl
jmp
dec
scas
rol
fcomps
mov
sub
jmp
movsl
filds
and
dec
pop
inc
cmp
orb
jbe
mov
cmpsb
sbb
lds
jno
js
add
mov
cmp
add
sbb
inc
mov
lods
sarb
roll
sbb
mov
aam
push
mov
loope
je
inc
pop
fdivs
icebp
out
push
mov
sub
dec
mov
adc
int
in
pop
dec
scas
jle
scas
jno
jmp
testl
jmp
jp
imul
je
mov
adcb
jo
outsb
sub
cmp
xchg
es
shrl
incl
aad
mov
cmp
std
mov
or
push
xchg
inc
jno
addl
xor
xor
sbb
cmp
push
aam
stc
push
pushf
cmp
loopne
add
add
js
cmpsl
ret
pop
push
push
mov
mov
pusha
add
or
cmpb
push
fstl
loopne
push
jge
sub
cmp
jge
movzwl
js
out
push
push
cli
or
lock
loopne
sub
push
push
repz
test
pop
addb
sbb
xor
and
adc
mov
xor
mov
add
repnz
adc
push
mov
push
mov
scas
or
push
push
push
fwait
push
or
add
inc
stc
lock
or
rcrb
push
lock
cld
mov
call
jle
dec
adc
ss
mov
mov
loopne
je
dec
adc
dec
cmp
inc
add
push
lea
cs
sbb
imul
or
int
lds
ja
add
insl
mov
rcll
add
call
jns
sbb
cmpsb
pop
in
sub
cmpsb
insl
mov
divb
push
xor
out
xchg
cmp
cmpsl
cmp
pop
push
cmp
cmp
mov
movsb
pusha
sbb
rcll
pop
push
push
add
pushl
pop
int3
loope
cmp
sbb
insb
adc
repnz
outsl
push
or
pop
push
int
flds
xchg
inc
xlat
mov
outsl
mov
or
push
mov
jle
push
clc
cmp
mov
test
sub
and
push
pop
or
shlb
divl
or
xor
jmp
xor
push
pop
js
cltd
fs
mov
out
mov
hlt
or
sbb
mov
call
ss
out
adc
sub
testl
add
pop
pushf
mov
nop
pop
in
mov
lret
mov
and
cmp
add
mov
int3
jl
hlt
sub
mov
imul
pusha
sbb
lds
cli
fidivs
sti
push
cmp
sti
mov
jge
mov
imul
pop
stc
mov
push
shr
in
aas
xchg
loope
loopne
add
push
cmp
add
push
fiaddl
jl
inc
adc
mov
rolb
mov
rcl
fidivl
push
fcom
test
dec
lods
xor
out
pop
fidivrs
lock
mov
les
jl
int3
sbb
aas
adc
mov
pusha
lea
pop
shrb
push
lahf
jns
pop
inc
je
in
xchg
push
pusha
sub
push
ljmp
dec
nop
mov
aaa
das
divb
and
jo
add
pusha
enter
jl
fistpl
jbe
in
jmp
adc
jmp
adc
pop
xor
jmp
aaa
jge
jno
pop
leave
iret
fs
js
cmp
jo
mov
jo
cld
add
enter
and
pop
mov
sub
adc
lcall
je
das
add
or
push
ficompl
pop
int3
push
push
push
loopne
xlat
inc
mov
fdivl
sub
je
sti
cld
inc
pop
add
sub
pop
or
pop
adc
push
js
mov
hlt
mov
repz
fldcw
adc
dec
xchg
sbb
incl
out
dec
adc
cmp
jg
mov
out
push
adc
pop
mov
dec
add
inc
or
movsbl
inc
push
adc
pop
adc
adc
sub
sti
mov
and
mov
add
mov
adc
sub
or
cmpsb
cmp
jns
adc
pop
rolb
fmuls
shrl
pop
rorl
enter
jge
ret
sbb
push
push
div
and
add
adc
cmpsl
jo
pop
jnp
sub
test
adc
sub
cld
dec
add
or
enter
icebp
cld
adc
mov
sbb
negl
leave
jnp
inc
jmp
mov
mov
pushf
pusha
push
adc
call
je
push
enter
aam
pushf
push
mov
mov
adc
cmp
xor
insb
leave
xor
inc
cs
cmp
inc
inc
jge
add
sbb
cwtl
je
inc
pusha
push
mov
mov
sbb
mov
mov
lock
mov
xorl
sbb
cmp
push
sub
sub
in
cmpsl
or
mov
jmp
cmp
test
adc
imul
lock
nop
push
xor
pushf
loop
pop
xor
mov
xchg
je
in
dec
pop
cwtl
sub
jmp
push
xor
insb
sbb
sub
pop
das
inc
push
adc
push
sbb
pop
aad
popa
cld
push
jmp
jmp
movsb
xor
jo
adc
cld
fsts
pop
jmp
aad
pop
mov
xchg
lea
inc
cmp
cmpsl
inc
sbb
pop
hlt
lea
xchg
xorb
call
mov
mov
cwtl
mov
and
add
cld
push
pop
and
and
xor
shr
add
insb
cmp
decl
lock
dec
jne
pop
pop
jecxz
not
and
icebp
ret
setl
std
pushl
pop
sub
inc
or
out
cmp
out
jne
inc
push
pop
cmp
sub
ret
sub
jge
xchg
and
daa
sbb
add
xlat
push
mov
cmp
sbb
push
cmp
or
nop
clc
add
clc
jb
je
push
xor
into
aad
xor
test
scas
add
mov
inc
mov
addl
push
pushf
push
ljmp
xor
popf
inc
cmp
dec
or
mov
or
mov
mov
js
adc
jae
xchg
insl
dec
repnz
mov
daa
test
clc
and
pop
sub
sti
or
or
xor
jns
in
sbb
jge
insb
test
mov
testl
ret
inc
fsubrl
cmpsl
mov
add
push
pop
xchg
dec
xchg
imul
xor
addr16
in
pop
push
stos
or
cmp
fmuls
dec
shr
stos
add
arpl
pusha
nop
fs
mov
sbb
or
and
inc
jns
xor
pop
loop
mov
cwtl
test
loopne
dec
cmp
add
jne
push
shr
rclb
jb
in
rclb
xchg
divl
aam
inc
lods
mov
jl
in
sub
lock
sub
and
push
mov
and
pop
outsb
cmp
pop
mov
mov
xchg
out
pushl
push
pop
jmp
movsbl
mov
pop
stos
iret
ror
cmp
jbe
test
cmc
inc
or
push
lds
insl
int
mov
push
cmp
clc
jne
shlb
test
and
cmc
add
mov
pop
shll
mov
cld
mov
push
and
and
popa
cs
orb
fstps
sti
adc
sub
jo
xchg
jg
add
push
mov
sbb
mov
lods
jb
loopne
sbb
ret
xor
scas
ficoml
xlat
add
test
mov
dec
sarl
jge
test
cld
cmc
fisttps
arpl
push
and
mov
adc
dec
cmc
addl
daa
mov
jnp
jb
dec
test
cltd
add
cmp
fwait
push
jbe
aaa
adc
jg
repz
icebp
fisttpl
sub
jne
data16
mov
dec
sbb
rcrl
or
mov
jmp
jne
scas
xor
xor
add
cltd
pop
inc
or
test
fmul
in
push
mov
push
movsl
push
es
insb
inc
mov
fs
les
dec
rolb
pop
push
leave
fisubs
and
sarb
or
shrb
push
and
cs
push
dec
sahf
outsb
mov
jnp
add
jbe
divb
push
mov
jb
or
inc
xorl
xlat
lahf
sbb
aam
cs
orl
or
jmp
pop
lcall
sbb
hlt
je
jp
push
ficomps
lahf
jns
sub
jge
adc
lods
outsb
add
hlt
cmpsl
pop
movsb
loop
pop
mov
cwtl
cli
sub
mov
pusha
inc
rcll
aaa
in
add
push
pop
and
pop
in
xchg
test
sti
clc
cltd
push
push
mull
shlb
push
cmc
sbb
adc
pop
xor
in
sbb
pop
in
add
pop
pop
xor
or
aaa
stos
rclb
jbe
sbb
jne
enter
stos
jbe
xor
jne
xlat
and
imulb
mov
mov
adc
ret
pop
in
call
sbb
test
inc
fwait
dec
fcmovne
loopne
pop
xor
cmpb
and
sub
fwait
aam
std
or
lock
mov
mov
add
xor
inc
iret
movsb
in
jmp
jmp
jno
cmp
cmp
call
xchg
int3
je
fnstenv
leave
leave
ret
rcll
test
lahf
jl
loopne
jae
mov
sub
cmp
filds
push
add
lods
les
jge
ja
cmpl
cmp
add
call
pusha
push
jmp
cmp
mov
and
mov
xchg
add
roll
xchg
adc
fsubrs
je
mov
inc
xor
imul
rcll
stc
cmp
xchg
mov
jbe
div
pop
mov
addr16
adc
add
fiadds
push
shl
xchg
adc
and
mov
adc
push
ret
loopne
fiadds
in
aaa
add
lret
bound
call
adc
adc
or
les
push
xor
xor
rcrl
lock
inc
sti
rolb
mov
add
fisubrl
test
gs
aas
mov
or
and
mov
jb
inc
and
loopne
iret
push
sahf
push
and
lock
jnp
push
shll
pop
push
arpl
mov
mov
movl
je
mov
sahf
pop
push
pop
push
add
mov
sbb
or
pushw
pop
js
je
jbe
push
jo
int
add
das
or
lock
call
inc
pop
push
repnz
adc
xor
jne
jle
mov
add
cmp
jl
ret
add
adc
add
icebp
dec
adc
rorl
outsb
xorb
mov
adc
pop
cmp
test
in
lahf
pop
test
adc
jg
ret
adc
mov
je
jnp
pusha
cld
pop
cltd
idiv
test
hlt
mov
sub
jmp
dec
leave
aaa
dec
inc
cld
cmp
jb
mov
mov
inc
dec
jmp
andb
leave
jle
xor
xor
sbb
sub
pop
xchg
testl
push
mov
and
and
enter
cmp
mov
daa
mov
in
push
add
subl
das
arpl
imul
adc
sbb
pop
lds
mov
sub
add
pushf
pop
cltd
out
xor
mov
in
jge
push
inc
ret
xchg
clc
add
and
cmpsb
and
sbb
jns
hlt
xchg
clc
cld
mov
pop
mov
out
push
sbb
cmp
mov
mov
and
mov
xchg
jbe
lret
hlt
lock
dec
call
cld
clc
push
jg
jmp
mov
xchg
ss
xlat
outsb
sbb
iret
xor
test
pop
xor
loop
xchg
adc
and
aas
loope
cs
pop
sbb
and
jecxz
cli
xor
pop
inc
pop
fidivl
in
loope
push
push
jb
repnz
xor
xor
int3
sti
es
mov
lock
testl
clc
mov
es
xor
jg
lods
and
inc
add
je
popf
mov
cs
ss
sbb
andl
and
jo
xlat
push
enter
jg
lock
mov
addr16
mov
xchg
divl
push
push
cmc
cmp
mov
pushf
les
jecxz
jne
pop
mov
lods
pop
add
push
cmp
mov
inc
repz
fsubs
cltd
add
push
sbb
push
loop
lods
mov
sbb
inc
mov
inc
mov
xchg
lods
callw
or
mov
add
cmpb
xor
insb
sub
iret
in
popa
jmp
nop
cmp
shll
mov
sub
dec
and
sbbb
jle
add
mov
and
shlb
add
in
cmp
xor
in
rcrl
das
cmp
pop
imul
pop
mov
mov
mov
and
add
lret
hlt
push
and
fs
jbe
dec
cmp
mov
pusha
dec
and
cmp
xor
gs
das
dec
sbb
inc
mov
sub
push
fs
mov
sbb
pop
fs
flds
mov
cmp
mov
je
cmpb
jmp
ror
sti
je,pn
sub
inc
shr
test
adc
or
or
repz
or
nop
cwtl
imul
data16
pop
loope
xor
mov
or
dec
cmpsl
or
push
or
int
cli
sub
in
cmpsl
sub
push
dec
arpl
mov
pop
jg
jecxz
mov
repnz
aaa
nop
int
rcrl
mov
cmp
mov
pavgw
inc
cmp
xor
loop
out
jg
pop
jbe
mov
lret
inc
sub
lods
xor
test
clc
push
ljmp
fs
jle
mov
sub
xor
mov
or
cmp
sti
dec
out
cs
loop
lods
pop
addr16
lahf
stc
push
push
push
lods
nopl
sbb
mov
adc
lods
jne
mov
add
inc
cmpsl
insb
mov
adc
inc
cmpl
out
adc
fs
je
jle
mov
sbb
xor
je
push
jmp
jge
add
pop
pop
push
retw
inc
mov
clc
rcrb
mov
push
dec
cmp
divb
fs
in
nop
std
push
std
in
push
pop
and
loop
xchg
xor
push
dec
mov
dec
in
or
cmp
jle
call
push
ret
sub
pop
xor
and
out
fwait
mov
pop
sbb
push
xor
lods
sahf
jle
sbb
call
pop
test
sbb
pop
cmp
mov
jb
cmpw
jne
cmp
push
pop
sbb
bound
ret
mov
push
lea
cmp
push
pop
test
inc
cmp
js
loopne
mov
push
jbe
xor
push
insb
les
addr16
pop
pop
push
ret
jl
and
jbe
mov
adc
inc
sbb
fsub
rcr
cmp
inc
push
shlb
sbb
lods
aad
inc
cmp
js
data16
loope
scas
aam
je
fs
xor
ds
shrb
push
shlb
add
jecxz
movsb
fidivs
adc
int3
mov
inc
jno
lea
sbb
xor
inc
lock
jg
cmp
pushf
lahf
notb
push
int
lret
sbb
idivl
jle
imul
and
cmp
jne
outsl
and
inc
aad
adc
fnsave
loop
in
add
imul
mov
mov
cmp
clc
pop
pop
in
cmp
pop
sub
call
inc
add
inc
cmp
jae
jmp
or
inc
xlat
pop
outsb
mov
xchg
fadd
out
sahf
xor
push
and
and
shlb
mov
call
call
inc
mov
xlat
or
add
mov
sti
adc
xchg
repnz
sbb
or
mov
add
mov
pop
or
and
mov
jae
mov
mov
mov
into
in
push
cmp
xchg
inc
mov
sahf
mov
mov
jae
cmp
push
icebp
fcoms
out
and
jg
js
push
call
cld
and
cmp
jne
sahf
lock
add
push
xlat
mov
movsb
pop
fiadds
or
pusha
cwtl
loope
aad
xlat
xchg
sbb
in
push
xlat
xor
xchg
push
push
into
xlat
jmp
ja
push
jo
clc
add
cmp
andb
pop
sub
js
cmp
or
leave
mov
sub
cmp
je
inc
inc
inc
cmpb
adc
hlt
xor
mov
mov
sub
jo
adc
or
inc
or
cli
pop
dec
mov
push
rcl
jle
xchg
pushl
xor
repnz
push
cwtl
mov
mov
rorb
sub
xor
push
adc
lret
dec
negl
sbb
mov
xorl
pop
sub
jecxz
sub
mov
cld
xor
lods
sub
pop
ret
mov
adc
fisubrl
dec
xor
dec
in
loop
jecxz
clc
push
cmp
decl
test
mov
cmpb
jo
cli
and
mov
jbe
inc
inc
or
cmp
int3
jecxz
mov
push
fistl
jmp
add
inc
xor
jno
mov
add
inc
data16
dec
out
mov
add
inc
sbb
mov
add
int
loop
push
add
xor
sahf
add
shlb
sbbb
mov
jecxz
jg
shl
inc
add
clc
iret
push
cwtl
xor
pop
cld
ss
adc
or
add
roll
lock
lahf
pop
mov
aam
mov
mov
push
mov
loopne
mov
sub
inc
lret
sbb
cmpsl
loopne
ss
int
fnstcw
mov
dec
xchg
es
popf
ja
mov
clc
push
mov
fs
inc
lea
fdivrs
mov
mov
addr16
pop
push
sbb
add
iret
stos
cmc
xchg
icebp
inc
gs
jl
push
push
aad
fimuls
test
sbb
repz
xchg
and
xchg
imul
loopne
lock
pushf
movl
call
out
leave
cmp
jbe
lea
mov
inc
add
cmp
jne
cmpl
mov
dec
incl
push
or
lret
adc
roll
jb
pop
or
jg
data16
icebp
jg
mov
jbe
aas
fsincos
std
gs
je
ror
hlt
jmp
dec
or
ror
jg
push
add
mov
arpl
jb
call
mov
cld
sbb
mov
ficoml
push
shlb
insb
sahf
stc
pusha
cmp
push
andb
dec
mov
repnz
or
push
sbb
cmp
inc
adc
push
in
ss
push
mov
test
je
add
repnz
mov
movsb
pushf
aaa
scas
sarb
and
fsubrl
movsw
test
pusha
stos
rcll
nop
inc
lcall
cmpsl
loop
xchg
push
cmp
mov
ret
mov
jmp
orl
test
or
xchg
push
sbb
bound
movl
push
mov
xor
sar
xlat
push
cmp
xor
fistps
push
push
sub
xor
inc
jo
in
inc
mov
ret
shlb
sbb
and
xchg
mull
insl
movsl
in
dec
int
pop
lcall
jno
lcall
pop
jl
xchg
dec
or
nop
pop
push
ret
add
and
js
scas
add
inc
mov
jne,pn
and
cmp
mov
sti
mov
push
enter
stc
and
arpl
lret
sub
and
cwtl
nop
xor
xor
and
pop
cmp
jbe
mov
hlt
inc
test
dec
adcl
mov
inc
or
popf
cmp
popa
adcl
and
sub
daa
les
test
loopne
push
jo
cmp
enter
add
lock
or
test
xor
pusha
sub
xchg
inc
out
cltd
daa
test
lock
testb
push
ret
sub
ficoml
dec
roll
pop
add
pop
imul
js
leave
lods
or
pop
push
add
adc
xor
leave
mov
or
cmc
mov
movsl
sbb
xchg
mov
fcoml
in
jecxz
jo
imul
xchg
addl
les
hlt
cmp
jne
loopne
test
and
mov
push
and
dec
push
out
jg
inc
mov
inc
out
out
pop
xor
stos
fnstsw
cmp
inc
mull
sbb
pop
adc
mov
addl
ret
dec
adc
dec
insb
enter
scas
add
push
lds
sbb
or
int3
fwait
lods
orl
xchg
or
sub
sbb
or
jb
lcall
cmp
jae
in
test
inc
mov
lock
mov
daa
jbe
ret
pop
dec
jbe
iret
adc
push
insl
or
xor
out
push
mov
out
inc
lock
ficoml
jbe
pop
adc
jns
inc
outsl
push
cmpsl
not
pop
xor
fistps
rol
inc
in
enter
adc
fcmovne
sbb
push
incl
ljmp
cmpsl
inc
pop
xlat
les
nop
pop
dec
popa
rol
insl
mov
and
pop
cmpl
or
mov
add
adc
jbe
gs
and
jbe
mov
enter
pop
cvtdq2ps
pushf
mov
mov
cld
pop
pop
or
push
xor
or
or
cs
dec
adcl
or
out
addb
xchg
or
jge
orb
lock
jmp
jge
add
push
mov
jp
pop
adc
and
mov
das
sbb
clc
pop
orl
enter
fs
or
lahf
mov
int
pop
cmp
inc
adc
shrb
cmp
call
inc
push
mov
jp
std
mov
xchg
or
divl
mov
add
stc
mov
std
sbb
adc
sub
add
sarl
pop
jo
stc
mov
push
push
mov
pushf
add
mov
lods
add
mov
cwtl
adc
inc
sub
lods
and
fisttpll
sub
mov
pop
pop
jmp
push
cmp
jns
pop
mov
cwtl
mov
sbb
lahf
sbb
into
int
push
daa
mov
pop
pop
add
test
clc
cmp
mov
jmp
bound
js
and
je
aam
lea
pop
sub
push
xlat
adc
mov
sbb
adc
lret
mov
mov
mov
sbb
data16
aas
add
adc
rclb
push
sub
sahf
pop
pop
les
xor
xor
add
push
and
in
clc
jb
pop
adc
pop
cmp
or
shrl
adc
fcmovb
mov
dec
sbb
loopne
popf
mov
stc
out
mov
jl
lcall
xor
and
xor
divb
jne
in
mov
lock
movb
jmp
addr16
aas
das
pop
inc
sbbl
dec
push
inc
mov
nop
mov
in
or
xlat
bound
jne
rolb
out
stos
mov
mov
iret
adc
push
fiaddl
jg
xor
jne
sbb
das
sbb
cltd
cmp
in
mov
out
call
adc
push
mov
cmp
movsl
nop
sub
js
and
insb
mov
test
mov
mov
in
pop
out
aaa
jp
push
push
sub
push
xor
xor
pop
xor
pop
inc
mov
sbb
setae
xchg
push
loopne
hlt
cmp
push
je
inc
push
and
pop
andb
int3
aam
push
push
shrl
lret
popa
mov
pop
inc
lea
or
inc
leave
dec
jne
adc
jmp
test
mov
dec
cmp
or
cmp
xchg
sbb
pop
xchg
add
push
insb
je
pop
cld
xor
mov
gs
mov
push
push
mov
add
adc
roll
jns
je
popa
lods
xchg
mov
imul
outsl
pop
aad
insl
gs
push
jne
fistps
cmpb
push
adc
push
insl
xchg
push
cmp
push
in
xchg
test
adcb
scas
or
popf
pusha
cmp
sub
xor
leave
mov
xlat
test
cmpsl
sbb
add
fadds
fs
add
hlt
inc
push
sub
movsb
sub
jno
push
movsl
js
hlt
jns
imul
inc
add
call
lcall
cmp
or
cmp
fbstp
jo
imul
add
add
mov
push
push
out
push
mov
or
lahf
mov
add
mov
jbe
cmpsl
repnz
add
jns
ljmp
inc
daa
aaa
ficoms
in
xchg
inc
inc
push
push
pop
push
sub
cmp
jo
mov
add
popa
inc
out
mov
mov
sub
stos
loope
or
sub
jno
cmp
push
int
insl
rorl
xchg
xor
push
pop
add
jbe
push
and
add
and
and
lock
rcrl
stc
adc
loopne
and
testb
inc
icebp
cld
and
in
jbe
fnstenv
lds
enter
jmp
stos
testl
cs
sahf
mov
enter
cmp
mov
popa
mov
lock
sbb
es
xor
push
loope
jne
pop
or
mov
stos
mov
xchg
test
xor
pusha
xor
adc
mov
push
loopne
dec
aam
adc
adc
pop
sbb
jl
push
push
and
add
xchg
lods
jo
push
out
adc
sub
or
inc
addb
test
leave
cli
bound
push
je
cmp
in
incb
push
neg
xor
mov
pop
push
es
mov
out
pop
stos
loopne
sbb
jno
nop
or
jne
push
roll
test
lcall
and
ds
jne
movb
push
inc
pop
mov
push
aad
and
xchg
enter
lcall
test
in
sbb
mov
lret
and
je
sub
pop
jmp
std
add
mov
mov
fwait
cmp
push
and
lcall
jno
fcmovb
fstpl
sbb
scas
sarl
pop
cwtl
pop
sbb
std
sbb
lea
inc
sub
adc
push
outsl
adc
pusha
adc
popf
adc
les
shlb
in
sarb
mov
dec
push
outsl
mov
pop
les
mov
fmuls
add
cmpsb
mov
or
adc
mov
or
push
or
sub
sbb
push
psubw
inc
aas
and
adc
sbb
repnz
mov
xor
mov
dec
mov
inc
jg
push
inc
inc
fdiv
int
stos
push
push
ja
pushf
jb
push
and
fildl
movsb
je
aaa
jb
inc
sub
mov
push
scas
sti
mov
sub
push
add
andl
andl
push
dec
test
and
nop
pop
xchg
add
push
rep
rolb
cmp
jge
dec
jg
push
nop
shrb
mov
mov
fisttpl
dec
rcrl
cmp
or
shrb
push
sub
rcll
inc
subl
cmp
clc
inc
in
hlt
cld
push
sbb
pushf
inc
popf
jl
jno
les
aam
int3
push
push
fwait
adc
imul
clc
rcrl
loopne
mov
push
pop
in
test
fcomip
les
cmp
pop
sbb
sti
mov
incl
adc
movl
xor
push
mov
push
jnp
jge
push
add
daa
and
xchg
pop
add
lods
insl
in
mov
sub
add
scas
push
testb
andb
cmp
outsl
and
and
and
jnp
xor
fucomip
inc
xchg
or
mov
push
mov
push
test
mov
xchg
fistps
xchg
jg
add
add
je
shll
sbb
pop
adc
xor
xchg
and
subl
cmpl
daa
in
push
pop
bound
lock
lock
ret
sub
cmp
rorb
je
xchg
xor
push
std
stc
sub
xor
xchg
dec
dec
inc
lcall
je
pushf
pushf
int3
xor
sbb
inc
inc
mov
sbb
adc
cmp
sbb
js
sbb
enter
call
sbb
push
mov
sbb
sbb
jns
mov
push
cs
adc
mov
sahf
idivl
aam
das
inc
pop
in
pop
rolb
or
add
sar
jmp
xchg
dec
sub
push
call
jmp
cmp
cmp
pop
les
insb
mov
iret
xor
mov
test
je
inc
into
dec
sbb
xor
dec
inc
enter
leave
xchg
or
decl
sbb
or
pusha
sbb
and
mov
enter
or
mov
xor
push
xchg
xchg
xchg
sub
sbb
inc
inc
sbb
add
inc
mov
in
and
sbb
mov
pusha
data16
jmp
push
in
repnz
test
mov
dec
sub
cmp
dec
enter
cmp
imul
mov
and
add
loop
pop
mov
xlat
int3
add
nop
cmp
sbb
orb
fs
aam
rcrl
mov
enter
inc
xor
cltd
popf
dec
pop
or
mov
xor
or
push
in
insb
fcomps
pop
jge
pusha
fadd
or
sbb
and
pop
enter
fsubrs
mov
jo
inc
inc
call
repnz
int3
xchg
dec
orb
test
fs
pop
fs
mov
cltd
dec
and
dec
sbb
dec
inc
inc
mov
sbb
adc
iret
leave
or
loopne
add
dec
sub
repnz
les
inc
cmp
inc
push
fdivp
xor
sub
xchg
sbb
sbb
shl
jb
and
lods
int
fstps
or
dec
lea
sbb
cltd
xor
sbb
mov
xor
les
jb
js
cwtl
sbb
orb
es
xor
mov
push
cmp
sbb
in
jbe
push
in
pop
jbe
xor
dec
and
daa
and
add
dec
inc
dec
inc
inc
add
clc
dec
daa
mov
inc
mov
xchg
xchg
xchg
and
int3
pushf
dec
and
mov
dec
shlb
xor
in
mov
mov
and
and
stc
add
in
lods
loope
and
and
in
insb
fs
leave
mov
inc
shlb
xchg
fnstenv
pop
cltd
and
and
sbb
pop
and
je
punpckhbw
jno
imull
jl
xor
lock
jb
aad
pop
inc
push
js
mov
or
clc
sbb
sbb
push
arpl
test
inc
sbb
iret
hlt
mov
fwait
inc
dec
pop
call
inc
dec
data16
xor
xchg
and
cmp
inc
dec
adc
pushf
mov
call
mov
cs
lret
sbb
add
addr16
sub
and
lret
mov
and
mov
fnsetpm(287
add
xor
push
jbe
js
xchg
enter
push
inc
fsubrs
mov
movsb
pusha
lock
push
movsb
mov
rcrb
sub
sub
sbb
or
insb
dec
in
lds
test
sbb
fs
xor
cwtl
xor
cmp
in
in
hlt
dec
cld
call
fcmovne
fadds
dec
pop
hlt
sbb
sub
adc
sbb
in
shr
adc
imul
mov
jb
unpcklps
adc
dec
shrl
dec
fidivl
cmpb
inc
adc
sbb
insb
inc
es
pop
dec
mov
sbb
nop
and
sbb
dec
push
inc
push
push
pushf
sbb
fildl
dec
mov
inc
movb
cmp
inc
push
subb
jns
sub
inc
int3
inc
mov
nop
out
inc
mov
jb
xor
enter
push
popa
jl
sbb
cltd
sbb
xor
push
mov
icebp
or
test
mov
jo
into
pushf
sbb
in
xchg
cmp
cmp
addr16
xchg
inc
or
or
jb
dec
xchg
inc
inc
jae
hlt
pop
pop
pop
out
add
or
cmp
push
shlb
push
jne
test
aas
cmp
das
and
mull
outsl
inc
leave
and
and
push
jb
and
or
xor
lock
lock
xchg
dec
push
sbb
cld
fsubs
popl
sbb
sbb
mov
or
cs
sub
adc
dec
push
cmp
sbb
inc
mov
nop
mov
sbb
sub
cmp
and
cmp
mov
inc
repnz
inc
in
dec
dec
pop
shrl
adc
push
adc
xor
nop
pop
mov
cmp
inc
ljmp
cs
jbe
push
jno
loopw
fbstp
mov
scas
std
test
je
add
cmp
push
push
cwtl
movsb
mov
lahf
pop
clc
add
add
in
adc
mov
mov
das
or
xchg
xchg
or
xor
or
lods
into
js
js
pushf
out
rolb
inc
add
adc
pop
clc
mov
nop
icebp
rorb
jl
jle
jge
jnp
jae
pop
push
imull
dec
arpl
mov
cmp
je
test
or
add
enter
rclb
sub
dec
cmpb
jne
cmpb
cmc
out
lea
push
cmp
mov
inc
add
inc
cmp
jl
push
fdivr
cmpl
pop
je
call
inc
ffreep
xchg
test
adc
jle
mov
stos
lea
jl
repz
adc
aas
fidivl
pop
inc
mov
mov
dec
cmp
jle
pop
and
inc
pusha
jmp
and
xchg
cmp
pop
jl
cmp
jg
flds
stc
inc
sbb
sbb
adc
inc
mov
insl
test
out
loop
mov
dec
sub
into
pop
enter
sub
jle
xchg
popf
cld
ret
add
jb
sbb
test
aas
pop
mov
inc
pop
sub
arpl
mov
add
add
sub
lea
cltd
shrb
outsl
mov
cltd
lods
aam
test
mov
dec
jmp
adc
sub
addb
gs
icebp
sbb
lahf
outsl
out
aaa
add
adc
cmp
cli
sti
cmp
jg
or
jne
inc
hlt
dec
lea
mov
je,pn
and
push
push
mov
lea
pop
push
mov
mov
sub
call
sub
xor
pop
jmp
iret
mov
cmp
inc
and
jg
idivb
and
cmp
je
mov
jge
add
incl
in
xchg
sub
popa
add
notl
xchg
rorb
enter
sbb
push
sbb
imul
jl
mov
sbb
daa
loopne
fcoms
in
xor
jns
js
je
mov
sbb
lret
pop
add
add
mov
sbb
pop
xchg
adc
dec
fistpl
xor
add
push
mov
popf
add
mov
adc
mov
cs
es
test
jns
and
push
in
pop
pushf
ret
pop
mov
sub
mov
popa
je
pop
jne
jl
aas
ret
cmp
mov
and
jae
cmp
mov
hlt
push
daa
lcall
sub
decb
xchg
push
xchg
jns
insb
or
in
jo
arpl
push
dec
stos
sbb
push
add
dec
repnz
push
push
jge
mov
rclb
sbb
ror
aam
push
loopne
popa
sub
push
dec
add
adc
pop
inc
xchg
insl
sahf
inc
add
jne
insl
mov
cld
fidivl
mov
fdiv
ret
test
adc
inc
push
outsb
lea
push
dec
push
pop
nop
adc
add
mov
movaps
fwait
xor
aad
inc
mov
ds
push
push
add
jns
xchg
push
dec
aaa
sub
mov
and
push
jmp
mov
ja
push
cmp
push
adc
into
jle
pop
add
das
pushl
data16
xor
sub
inc
test
push
mov
mov
xlat
xchg
dec
or
jmp
out
loopne
xchg
incl
cmp
aas
add
popa
mov
repz
fmul
clc
std
sti
das
je
or
je
jle
or
dec
lock
out
jmp
lcall
or
push
in
xlat
adc
sub
mov
sbb
or
icebp
xchg
mov
xchg
sbb
sar
ja
jnp
pop
je
mov
sub
cmp
add
adc
std
xor
out
add
js
and
dec
pop
inc
adc
or
test
orl
out
shll
sbb
nop
push
aaa
jg
int
jmp
add
push
test
incl
push
insl
je
lea
jg
cmp
ja
movzbl
and
jg
fdivr
fstpl
adc
or
push
mov
sub
and
sbb
push
adc
sbb
jle
or
jo
push
push
bound
and
adc
daa
imul
sub
xor
dec
shll
aaa
ds
data16
add
add
or
pushf
add
or
or
mov
mov
inc
lods
inc
repz
adc
inc
rolb
xor
iret
shll
aas
cld
push
fcoml
je
push
mov
cwtl
add
xchg
sub
adc
add
or
mov
pop
cld
jle
sub
inc
add
dec
je
add
lret
mov
sbb
pop
jge
in
xchg
xor
pop
adc
pop
lea
jb
push
in
push
loopne
aam
sbb
orb
adc
ss
jne
adc
push
sbb
and
dec
inc
add
sbb
push
xchg
jp
adc
add
sbbb
xchg
xor
pop
pop
aam
or
mov
push
outsl
aam
pop
cmovs
push
loop
inc
jae
jnp
dec
inc
add
and
dec
xor
pop
mov
pushf
adc
mov
pop
mov
jmp
dec
cltd
sbb
cli
sbb
jne
arpl
pop
imul
lret
repnz
pop
ret
inc
add
icebp
jne
push
push
cmp
cmpb
roll
js
xorb
fnstcw
testb
jne
orb
mov
mov
test
pop
mov
push
pushl
sbb
pop
pop
cmp
xchg
add
andl
pop
push
orb
sbb
enter
pop
mov
jmp
adcl
and
pop
and
cmpsb
lods
addr16
mov
add
cld
xchg
or
lea
push
sahf
jbe
and
add
lahf
xchg
push
add
adc
adc
scas
ret
inc
insl
add
lea
movups
push
xor
or
or
andl
lock
lods
mov
adc
test
cmpsb
adc
fidivl
push
push
mov
lock
aaa
test
adc
cmp
cmc
popf
insb
mov
addb
mov
hlt
cmp
xor
call
in
and
push
je
ja
jmp
or
mov
pop
sbb
jo
jbe
mov
cmpb
jg
adc
in
push
or
sub
cmp
adc
or
addl
push
shlb
sete
addl
loopne
push
push
jp
cmp
pop
dec
add
xchg
and
pop
pop
cmp
push
mov
scas
add
shll
mov
rcl
je
inc
movsl
dec
add
cmpb
inc
or
in
leave
or
sbb
and
jne
fidivrl
sub
pusha
sti
adc
addr16
jmp
add
ficomps
pop
fcoml
mov
call
loop
push
cld
sbb
and
pop
repnz
in
add
push
aam
outsl
insb
push
mov
cmp
cmpsl
nop
jnp
push
add
sbb
rorb
subb
or
inc
pop
test
mov
mov
inc
mov
push
mov
or
pop
xchg
popa
popa
xor
sbb
sbb
sbb
xchg
inc
pop
movsl
add
mov
jbe
adcb
add
lret
mov
pop
xchg
sbb
push
xchg
pop
icebp
fcompl
xchg
inc
jo
xchg
int3
pop
sbb
or
ret
movsl
mov
pop
and
orl
xor
and
and
inc
pop
and
cmp
or
sbbl
xchg
sbbl
pop
push
leave
inc
cs
loopne
inc
dec
lods
nop
popa
push
int3
cmc
es
or
pop
pop
jmp
push
push
lods
add
sub
mov
pop
sbb
push
or
bsf
rcrb
push
add
push
rclb
nop
and
pop
push
adc
mov
push
jle
mov
push
andb
je
cmp
jno
push
call
fcoms
jnp
les
jge
cld
xchg
test
lods
mov
imul
cmp
jmp
idivb
xor
pop
adc
ret
jmp
stc
sbb
andl
sbbb
cwtl
cmc
je
pop
xor
rorb
cld
lds
push
cmp
ficoml
xchg
int3
scas
dec
jnp
xor
test
addr16
enter
xchg
clc
jnp
out
adc
ja
je
pcmpeqb
or
outsb
cld
repnz
clc
xor
and
iret
mov
mov
xor
enter
or
mov
je
sub
lahf
or
mov
js
pop
dec
rclb
lods
lahf
loopne
imul
jle
nop
or
push
pop
ja
je
out
sbb
adc
push
sti
adc
repz
mov
push
push
pop
jle
divl
sub
pop
je
or
stc
iret
cltd
push
pop
shlb
and
lret
out
pop
fcompl
and
cltd
dec
xchg
sbb
xchg
pop
and
inc
jge
rclb
lret
call
mov
add
xchg
pop
cld
fnstsw
push
shl
cmp
inc
cwtl
sbb
xchg
xor
movsb
aas
mov
pop
inc
cmpsb
mov
lea
or
lret
xchg
mov
pop
das
out
pop
adc
pop
mov
sbb
and
add
loopne
jecxz
inc
mov
leave
je
call
loop
orl
popa
xor
mov
outsl
mov
pop
out
inc
cli
test
iret
dec
jmp
cld
and
and
outsb
je
jnp
rcpps
pusha
pop
inc
push
xchg
push
push
mov
push
push
ja
jge
mov
xlat
shll
cmpsl
mov
ret
cmp
std
jmp
push
imul
movsl
sbbb
inc
mov
and
xchg
cmp
jbe
lea
fistl
cmp
and
shlb
cli
push
pop
mov
ja
jb
fisttpl
imulb
ret
inc
repz
mov
push
or
lock
and
sbb
test
or
sarb
aaa
xchg
add
mov
mov
mov
mov
dec
clc
add
dec
std
push
push
push
out
lahf
or
test
das
mov
test
inc
push
add
add
mov
aam
lahf
outsl
mov
stos
mov
mov
jns
or
pop
pop
cwtl
cmp
sbb
sbb
shl
xorl
fnstcw
nop
jp
clc
mov
or
pushf
ss
mov
in
cmc
add
wbinvd
out
shrb
sub
jne
cli
test
pushl
sbb
clc
mov
pop
and
fldcw
jne
push
sub
ds
int3
das
sar
mov
cmpsb
insl
test
loope
subl
lock
daa
mov
and
insb
test
mov
sbb
out
cs
cmp
mov
push
adc
mov
mov
sahf
movsl
push
aad
jne
mov
pop
add
cmp
and
pusha
sub
out
lcall
fadds
xchg
dec
stc
cmpsb
dec
xor
xchg
xchg
in
insb
push
jno
jae
cmp
aam
xchg
idivl
add
cwtl
or
mov
add
in
popa
insl
and
add
dec
inc
inc
xchg
push
dec
ret
cmp
call
or
xor
mov
fldl
test
inc
movsl
push
dec
inc
pushl
push
fs
mov
jl
andb
inc
aam
and
pop
sbb
sub
arpl
adc
push
pusha
inc
shlb
or
mov
or
cmp
add
and
arpl
add
mov
test
cmpb
dec
pop
outsb
xor
mov
ret
sub
mov
adc
or
and
ljmp
sti
je
push
dec
bound
lea
enter
dec
stc
in
ss
adc
or
mov
mov
adc
mov
test
adc
pop
je
xor
sbb
adc
add
mov
clc
jb
ja
nop
int
push
sbb
mov
mov
mov
or
sbb
inc
xor
cmovo
pop
fnstenv
mov
xchg
pop
jle
and
jne
cmp
cmp
or
jmp
in
in
hlt
mov
mov
pop
xlat
ds
push
xchg
in
pushf
pop
push
push
xorb
dec
pushf
movsl
negl
lcall
push
add
and
adc
js
push
fildll
or
idivb
push
shrl
in
repz
dec
inc
dec
dec
ret
xor
jne
xor
stos
shr
or
push
nop
std
shr
lds
add
mov
add
add
icebp
mov
inc
daa
or
aas
cmp
je
out
pop
mov
and
fcoms
push
mov
dec
lcall
and
ficoml
inc
fstpl
jnp
inc
imul
xchg
inc
xchg
mov
push
jmp
jo
stos
mov
mov
mov
cmp
and
pusha
push
outsl
sub
insb
je
popa
mov
sub
pop
int
pop
inc
dec
add
push
lea
aaa
push
pop
pop
pop
xor
subb
push
and
add
int
in
mov
push
sub
cld
dec
or
aaa
cmpsb
mov
movsl
push
jl
or
adcb
je
outsl
mov
sub
push
cld
arpl
scas
and
sbb
pusha
jb
int
dec
cmp
fs
push
push
jb
jl
add
daa
xor
add
add
repnz
add
jo
or
sub
les
xorl
movsl
fdivrl
shrl
prefetcht0
aas
repz
or
pop
clc
cmc
mov
and
int3
add
or
and
in
push
aam
push
lock
adc
mov
add
imul
bound
push
in
push
fadd
enter
inc
pop
or
xor
cmp
adc
add
pop
adc
adc
pop
inc
jmp
mov
outsl
sub
pop
add
ja
push
pop
repz
sub
or
fadds
ja
inc
adc
xor
xor
mov
pop
mov
out
mov
mul
and
adc
clc
add
push
pop
rol
sbb
jno
adc
pusha
and
pusha
incl
loopne
or
sub
mov
xor
sbb
mov
add
les
lret
lock
pop
inc
inc
push
lock
int
add
imul
mov
mov
fsubl
enter
jle
popf
cmp
xor
or
insl
cmpl
push
add
and
aaa
mov
sbb
ret
mov
jle
jmp
cmp
je
or
je
or
and
add
fbstp
cmp
in
jl
jmp
lock
test
adc
xchg
push
fcmovb
xlat
or
lcall
lock
cld
and
add
inc
insl
sbb
iret
sbb
cmp
jbe
fnstenv
xchg
push
lock
mov
push
dec
sbb
push
push
orl
pop
lods
mov
push
fidivl
inc
push
push
out
dec
mov
les
xor
mov
push
jae
dec
pop
mov
mov
pop
push
imull
pop
jne
mov
dec
movntps
mov
mov
or
and
inc
xchg
dec
fsubrl
pop
repz
push
out
jmp
pushl
cmp
add
mov
movb
insl
stos
cmp
add
jmp
int3
cmp
add
je
loope
inc
mov
push
or
fstps
push
ret
rclb
inc
and
sub
push
es
sub
inc
aam
push
push
int
pusha
inc
ret
jns
push
mov
or
jnp
loope
cmp
jne
call
add
lock
nop
mov
pop
add
lods
in
and
push
sub
or
sti
jne
push
jno
test
push
push
dec
inc
pusha
jns
ficoml
and
outsl
cmp
and
or
push
push
add
sub
push
out
roll
add
sbb
outsb
xor
push
insb
lcall
imul
jne
add
sbb
shlb
jno
out
xor
push
shll
or
lock
jno
pop
int3
je
fst
and
push
ss
mov
mov
xor
insb
dec
sub
sbb
cmp
insl
dec
int
imul
mov
inc
mov
int
and
adc
xor
cmp
addl
sub
clc
jbe
jns
and
mov
and
and
push
aas
adc
scas
pop
sub
loopne
push
push
popaw
shll
data16
sub
push
roll
je
sbb
push
mov
xor
pop
lods
and
xor
cmp
je
imull
xchg
push
sbb
inc
add
inc
adc
into
dec
nop
ficoml
or
mov
cmc
xchg
cmp
pop
ja
lret
pop
xor
ret
mov
push
mov
cwtl
cld
xchg
add
add
mov
jns
or
in
xor
push
and
pop
pop
fiadds
push
xlat
int3
cmp
jo
test
loope
or
mov
out
cmp
push
sbb
jno
stos
int
xchg
in
repz
cmc
lret
outsb
inc
mov
roll
rclb
loope
das
in
or
cmpb
cmp
iret
es
adc
fs
dec
add
sbb
push
dec
int
jo
push
in
add
dec
rolb
inc
jecxz
push
add
shrl
mov
lahf
out
test
fildl
adc
mov
add
sub
xor
dec
inc
xor
mov
pop
pop
lock
sbb
stos
mov
xor
sbb
test
xlat
mov
or
add
xorl
sbb
jl
adc
loop
jno
xchg
sbb
js
inc
data16
dec
ret
add
pop
jp
mov
xlat
adc
push
in
test
loope
xchg
jne
dec
fbstp
adc
inc
and
es
xchg
push
nop
addr16
cmp
shlb
lret
je
int
sbb
sub
gs
inc
cld
push
test
or
and
dec
xor
sbb
mov
ficomps
testb
lods
test
dec
sub
mov
mov
jns
ss
adc
mov
je
mov
pop
push
lock
push
push
push
jae
das
ja
ret
test
or
mov
sub
out
movsl
jl
push
dec
jae
jl
and
and
orl
mov
or
push
xor
xor
add
adc
in
dec
sbb
mov
jecxz
pop
add
add
nop
test
or
push
cmp
mov
test
test
or
mov
and
or
cmp
stos
pop
mov
lods
test
nop
jge
rol
pusha
xorps
mov
mov
les
bound
sbb
inc
test
pop
inc
mov
add
pop
aad
pusha
pop
jo
arpl
mov
cmp
cmpb
pop
xchg
sub
sub
sbb
pop
sbb
xlat
mov
or
insb
out
and
and
jge
outsb
jl
call
faddl
xchg
sbb
sub
cmp
jne
mov
popf
sub
dec
js
test
enter
dec
adc
test
add
sbb
cwtl
test
xor
pop
pop
inc
adc
mov
test
movsl
adc
iret
dec
into
xor
pinsrw
dec
sbb
add
push
mov
sbb
pop
test
push
adc
cmp
push
jl
lret
cmp
pop
jmp
daa
lret
fld
lahf
mov
push
imul
sbb
inc
mov
inc
imul
push
sbb
mov
inc
xor
or
inc
inc
mov
je
pop
stc
or
push
movsb
leave
or
jg
mov
cmp
jl
mov
push
or
movsl
jo
hlt
icebp
ds
roll
sub
jne
sub
add
test
out
pop
sbb
and
cmc
pop
cmc
insl
sub
jg
sub
cmp
push
jo
mov
icebp
jnp
jbe
adc
mov
jecxz
aas
ror
or
lea
pusha
and
test
loope
and
dec
adc
es
cmp
nop
in
dec
fists
loopne
jnp
jne,pt
push
adc
test
adc
es
arpl
and
test
xchg
xor
cmp
push
cmp
or
xorl
jle
sbb
jmp
mov
ret
push
in
ds
pop
mov
adc
loopne
or
leave
rolb
sub
or
inc
mov
jp
mov
outsb
adc
inc
push
xchg
push
mov
xchg
sub
jmp
and
jp
xchg
dec
sbb
pmuludq
xor
push
roll
adc
out
scas
jl
jge
xor
sub
xor
jecxz
lods
xor
and
sbb
inc
sahf
pop
mov
inc
cs
add
adc
pop
cld
test
inc
clc
cs
sbb
push
enter
in
inc
fcoml
inc
fsubs
int3
int
push
lods
mov
adc
xor
or
in
xchg
or
mov
or
mov
sbb
js
pusha
enter
adc
inc
cmp
and
and
imul
and
pop
xor
add
add
jb
clc
cmp
push
dec
mov
sbb
sbb
stc
add
push
in
pushf
sbbl
aas
test
mov
adc
out
fidivrl
insb
lds
push
mov
repnz
dec
lahf
xor
and
cmp
rol
les
dec
fs
mov
cmp
or
mov
cmp
ret
mov
lcall
xorb
lock
call
inc
inc
cs
into
cmp
mov
enter
mov
daa
mov
mov
sub
imul
lcall
iret
or
push
mov
das
fs
sub
cmc
aaa
jb
inc
ds
loopne
xorb
adc
xor
and
xor
inc
cs
jmp
cmp
cmp
fs
test
das
jne
inc
inc
sub
and
jae
push
add
xchg
dec
or
jl
orl
aaa
mov
addl
in
ret
cmc
jno
cwtl
and
mov
fwait
sbb
cmpl
sub
xor
pop
enter
movsb
movsb
enter
cwtl
imul
test
jns
enter
jo
jb
iret
mov
repz
sahf
pop
add
push
in
xor
jns
enter
inc
repnz
leave
xor
and
mov
scas
sub
je
cmpsb
pop
fs
sub
inc
ret
mov
jmp
ja
and
sbb
adc
xor
pop
adc
fs
sahf
sub
rolb
inc
cs
add
and
jb
sub
hlt
andb
repnz
outsb
sub
pop
call
xchg
sub
andl
repz
inc
cs
frstor
les
movsb
das
push
cltd
pop
enter
jo
mov
xchg
icebp
add
push
enter
dec
ss
loope
dec
das
in
xchg
mov
loop
ja
mov
js
and
or
jo
and
jb
fs
pusha
pop
xor
das
pop
aaa
fs
sahf
and
and
test
out
and
jns
enter
inc
sbb
jnp
mov
sub
and
or
sub
and
pop
xor
sbb
adc
adc
and
sub
out
adcb
in
pop
add
jnp
outsb
ds
sbb
sbb
std
add
out
push
mov
daa
pop
pop
dec
pop
fimull
cmp
cmpsl
inc
jmp
lahf
int3
fistpl
mov
adc
mov
lock
or
adc
jp
cmp
stos
sbb
lock
mov
lods
sub
or
jo
inc
jl
sti
repnz
stos
test
push
fs
lret
and
and
sbbb
je
xchg
pusha
push
mov
add
inc
cmp
sub
or
jg
cmp
fwait
mov
sub
jle
mov
mov
jns
inc
sub
or
mov
hlt
or
push
push
cmc
fadds
inc
clc
cmp
jle
push
dec
push
inc
or
push
or
dec
or
lahf
mov
add
fiadds
int3
aaa
and
push
pop
bnd
out
add
fwait
xor
leave
mov
adc
push
mov
orb
add
fidivs
cmp
sbb
inc
push
or
sarb
int
push
xor
out
insb
mov
orl
xor
cli
pop
adc
adc
and
ds
cmp
jmp
in
pop
rolb
inc
jge
and
cmpsl
leave
or
push
add
lock
lahf
or
sub
test
lcall
inc
pop
je
xlat
sbb
jge
mov
aas
cld
add
lds
jne
adc
pop
xor
jge
je
xchg
mov
test
repnz
sbb
ja
sub
and
jecxz
inc
pop
in
cmp
jge
sbb
lret
inc
mov
lods
ds
fs
movsb
ret
pop
test
scas
pushf
jge
xor
and
sahf
pop
leave
push
mov
xor
sbb
adcb
insl
insb
in
nop
xchg
or
iret
pusha
xchg
or
mov
repnz
push
ljmp
inc
in
sahf
pop
clc
adc
or
cmp
xor
mulb
subl
inc
sub
jns
sub
ds
add
and
pop
clc
and
clc
fadds
or
call
fwait
pop
inc
stc
pop
sub
lock
or
fists
in
mov
dec
adc
and
je
popf
adc
jmp
aaa
push
or
nop
xchg
pop
je
push
stc
aas
jo
es
push
movzbl
dec
fwait
xor
int
imull
notl
sub
xchg
jl
and
inc
jns
jge
sub
push
mov
in
loopne
lods
aas
fs
jno
adc
cmp
enter
jne
sub
inc
ljmp
shll
jl
mov
mov
test
xchg
fs
sahf
push
push
inc
adc
out
or
insb
or
pop
mov
shrl
mov
outsb
mov
stos
push
lods
push
xchg
and
popf
cmp
aad
jo
insb
stos
jo
aam
inc
sbb
je
and
adc
ret
xchg
iret
pushf
xchg
mov
jb
xchg
sbb
cmp
arpl
inc
test
jo
xchg
and
push
jb
jb
adc
adc
call
mov
cs
imul
shll
or
fs
sub
shlb
or
enter
or
xchg
or
push
or
nop
lods
faddl
test
jae
mov
int
adc
fsubs
xchg
mov
pop
cmp
test
pop
jle
mov
jne
imul
sub
sub
popa
sar
sbb
test
mov
aam
or
mov
push
pop
adc
imul
movsl
lea
dec
les
adc
sbb
cltd
int
pop
inc
adc
jge
xchg
xor
movsb
movsl
push
pusha
loopne
fadds
cld
lahf
xlat
cmp
pop
jne
jmp
mov
out
jg
imul
mov
jl
pop
mov
ficoms
lret
je
and
xor
xor
and
adc
xorl
mov
out
jg
sbb
testb
adc
xchg
adc
mov
push
dec
or
leave
cmp
mov
in
push
mulb
add
popa
loope
add
mov
fstpl
mov
ret
je
xor
imull
setne
inc
inc
lods
dec
cmc
pop
xchg
pop
cli
sti
pop
mov
jle
fucomip
pop
loop
movb
ss
cmp
inc
das
pop
das
stos
pop
push
mov
jl
cwtl
into
into
fsts
je
cmp
mov
lea
fwait
sbb
dec
inc
je
js
jp
push
or
sti
jl
cmp
js
adc
cmpb
jne
push
jmp
mov
ficoms
mov
add
mov
jp
test
lea
repnz
aaa
xchg
sub
aam
sbb
mov
dec
adc
sub
or
add
pushf
mov
fdivr
push
and
and
je
mov
push
jp
mov
or
or
xor
test
movsl
and
pop
repnz
adc
sbb
push
push
push
push
cmp
or
mov
jb
clc
xor
test
scas
adc
and
push
addl
pop
fstp
xchg
add
mov
out
test
push
imul
sub
ljmp
adc
push
xorl
add
int
cmp
push
xchg
ret
out
lret
jns
movb
pop
add
mov
jle
sub
cmp
inc
mov
or
jns
sub
ret
xor
lea
sbb
mov
cltd
inc
stos
or
arpl
insl
jl
mov
rep
enter
dec
push
hlt
mov
pushf
add
clc
loop
sub
xlat
and
inc
pop
dec
and
push
mov
xchg
push
gs
arpl
or
inc
fwait
sub
les
mov
aaa
insb
lock
hlt
inc
pop
push
nop
popf
push
mov
jns
enter
or
add
sti
push
orb
call
and
fxch
test
push
xchg
cltd
push
loopne
mov
pop
lahf
jb
sub
push
mov
xor
pop
cmp
lea
outsb
adc
jns
icebp
xor
cli
sti
and
popa
jl
xor
cmp
sahf
pop
jo
mov
jbe
sbb
lods
xchg
aam
mov
pop
call
mov
and
or
pusha
sbb
das
lcall
cli
jae
add
lea
add
push
pop
xor
sub
and
inc
push
out
fisubs
cmp
lahf
xchg
adc
es
es
mov
xchg
sub
inc
scas
and
es
inc
xor
sbb
nop
pop
xor
in
fsubrs
shr
cld
fs
pusha
cld
and
dec
and
sarb
repnz
nop
xchg
lock
imul
adc
nop
in
int3
and
or
pop
nop
xchg
in
cld
add
mov
inc
pop
jp
bound
xchg
push
stos
and
push
or
and
jecxz
cltd
lea
or
or
in
push
sbb
nop
insl
inc
inc
popf
push
enter
test
push
xor
adc
xor
sub
inc
push
in
clc
lock
hlt
sbb
adc
inc
js
inc
imul
inc
xchg
xchg
and
clc
or
sti
sub
jo
adc
sbb
dec
or
push
add
cmpsb
adc
mov
sbb
enter
add
orl
and
fdivl
arpl
movsl
jns
xchg
mov
add
jmp
dec
sub
rorl
insb
push
jns
inc
loopne
and
adc
fadds
mov
mov
and
dec
mov
orb
stc
xlat
orl
push
jmp
test
mov
mov
jecxz
mov
dec
and
jae
push
sub
idivl
dec
jb
jo
cmpsl
and
js
test
cmp
and
pop
mov
xchg
push
jl
fwait
insb
lock
movsb
stc
or
ss
popa
sarl
adc
pop
or
adc
out
sub
aad
dec
lds
scas
stos
xor
aaa
push
push
stos
nop
adc
cwtl
int
mov
fistpll
sbb
mov
daa
mov
ja
mov
pop
ja
loopne
scas
mov
mov
dec
mov
jbe
and
or
sbb
repnz
push
cmp
xor
loop
sbb
jne
mov
sub
mov
jns
and
and
imul
jbe
es
test
movsl
cmp
jp
and
add
jbe
xchg
popa
imul
leave
out
rcrb
pop
xchg
mov
jo
adc
sub
sbb
cmpxchg
and
pop
and
xchg
mov
adc
adc
sbb
push
jb
movsb
aaa
sbb
cmp
jno
jbe
sub
mov
mov
sbb
add
push
popa
adc
add
sub
dec
cs
sub
test
sbb
sbb
sbb
cmp
jns
addr16
jmp
add
lret
mov
push
push
test
fisttpll
add
jmp
xchg
dec
push
sub
add
arpl
and
sub
cmp
scas
adc
sbb
rclb
jnp
je
icebp
jne
sub
sbb
lcall
mov
mov
cmp
lods
mov
dec
enter
sub
push
sbb
xor
and
dec
and
inc
daa
iret
pop
repnz
jo
xor
pop
push
sub
arpl
outsl
outsb
jne
clc
lock
inc
jecxz
int
xchg
mov
in
cwtl
dec
out
pop
or
adc
loope
sub
or
dec
jne
push
jbe
imul
orl
push
je
push
push
scas
xchg
mov
push
aaa
sbb
adcb
je
mov
sbb
into
add
ret
mov
sbb
mov
dec
xlat
ds
or
inc
aaa
ret
inc
push
ret
lods
stc
push
ljmp
or
jl
ja
and
pop
nop
dec
cmp
mov
icebp
je
adc
add
or
je
in
push
std
je
push
sbb
lods
test
inc
fadds
sbb
inc
push
xor
add
jae
cmp
push
enter
daa
sub
push
iret
mov
push
je
fdivrl
xor
mov
in
js
fs
xor
push
test
adc
and
and
js
jae
jo
push
arpl
inc
mov
cld
adc
push
or
push
inc
mov
inc
adc
sub
or
jmp
lea
dec
xchg
mov
mov
add
mov
aam
sbb
adc
ror
push
cmp
inc
inc
push
rep
xchg
shlb
jecxz
mov
mov
scas
and
nop
leave
outsb
mov
clc
clc
jl
jl
out
push
in
lcall
xor
push
or
or
clc
call
clc
cld
jb
xor
sbb
or
std
sub
or
enter
cmp
push
jns
push
xor
jb
mov
pop
add
sbb
test
mov
mov
push
arpl
or
adc
js
iret
cmp
mov
adc
xchg
xor
jo
or
fcoml
jmp
inc
test
cmp
sub
idivl
mov
dec
nop
jno
add
pushf
sbb
add
or
mov
testb
cld
push
xor
sub
pop
je
pop
shll
push
sbb
xchg
mov
push
jmp
mov
je
pushl
lock
or
jno
cs
out
pusha
mov
in
adc
jle
xchg
into
push
jo
adc
dec
lock
lea
je
lock
jo
push
inc
jg
sbb
mov
cmpsl
lods
jo
lds
fcom
mov
inc
es
mov
xor
enter
ret
dec
dec
adcb
push
sbb
dec
and
jbe
dec
enter
aaa
mov
jl
xor
cwtl
push
pop
mov
mov
insb
push
cwtl
jo
xchg
pop
inc
sub
sbb
sahf
sarb
data16
xor
and
jae
mulb
mov
push
mov
push
jns
pop
xor
or
and
pusha
jno
or
adc
pop
jb
mov
mov
or
repnz
add
shlb
cmp
pop
enter
call
push
sbb
scas
orl
cmp
mov
cmp
dec
rorb
or
sbb
ret
divb
daa
cmp
mov
enter
idivl
clc
inc
js
movsb
jle
push
rorl
iret
shlb
xchg
adc
add
or
je
cltd
or
xchg
notb
out
in
sub
inc
jbe
sbb
sbb
sbb
test
loopne
push
shl
sbb
or
xchg
in
jne
mov
scas
int3
ljmp
rolb
mov
push
pop
aaa
xor
mov
inc
inc
or
cmp
int3
adc
and
lcall
push
add
imul
inc
xchg
push
imul
inc
jl
sbb
dec
pushl
adc
or
fadds
movsl
ret
sbb
add
dec
jbe
test
jo
adc
imul
out
in
xor
fcmovnb
dec
or
test
push
dec
scas
dec
lea
sbb
call
or
mov
int
add
clc
adcb
and
or
mov
and
rcrb
mov
inc
xchg
cwtl
push
out
add
cwtl
gs
and
stc
and
lods
and
in
and
insb
ret
push
xchg
test
das
je
ja
add
inc
sub
call
jo
or
je
jno
adc
pop
xchg
test
mov
push
gs
out
jnp
aaa
ss
aaa
lret
jbe
jb
xchg
and
arpl
fs
xor
loopne
cs
adc
adc
add
fdiv
xor
scas
mov
outsb
test
je
push
and
adc
test
inc
jo
fmull
lods
outsb
jmp
xorl
add
and
sub
xor
inc
mov
sahf
push
inc
popa
pushw
insb
stc
add
push
inc
xchg
lods
clc
pop
dec
inc
xchg
arpl
mov
test
scas
xchg
pusha
pop
jl
je
in
jb
push
test
sbbb
push
add
ficoml
dec
jb
mov
or
adc
pop
dec
outsb
or
inc
and
xchg
cmp
pop
add
mov
shrb
jle
xchg
sbb
sbb
hlt
insl
or
push
jp
push
cmp
push
sti
sub
loopne
test
adc
insl
pop
jnp
je
pusha
mov
lret
pop
mul
adc
xor
and
cwtl
icebp
stc
lea
or
lock
mov
dec
and
adc
pusha
mov
insb
lock
mov
aaa
into
add
loop
iret
adc
icebp
push
or
or
inc
adcb
push
fidivl
mov
addl
and
aad
insb
sbb
push
mov
push
rcll
and
dec
xor
enter
sbb
push
sub
mov
dec
inc
or
cmpsl
xor
push
je
shll
xor
cld
cld
lds
cmp
push
notb
pushf
ret
cld
and
adc
jl
push
adc
test
jo
repnz
nop
cltd
hlt
sbb
mov
loope
dec
insb
sub
pop
push
das
adc
lods
in
xor
jmp
fistps
icebp
sub
sbb
leave
and
jmp
mov
push
pop
push
xor
sub
and
mov
sbb
js
and
or
icebp
clc
cli
jb
mov
or
repz
or
inc
pop
xor
movsl
sbb
sti
inc
push
enter
sub
add
inc
xchg
mov
js
push
ffree
fisttpl
push
push
adc
clc
cld
in
push
push
fldenv
in
inc
adc
cmp
jne
imul
test
sbb
repnz
push
imul
jnp
enter
and
mov
xor
dec
movsb
inc
xchg
and
imul
pshufw
xlat
or
jo
imul
push
and
cmp
rcl
and
xor
inc
and
outsl
int3
xchg
xchg
mov
push
pop
fisttpl
jmp
sub
push
adc
cs
mov
pop
jb
pop
cld
pop
in
cld
sbb
adc
fdivr
addr16
or
stos
mov
cmc
jmp
arpl
pop
lret
inc
imul
enter
mov
pop
inc
pop
cld
pop
or
sbb
insb
push
gs
mov
in
adc
push
push
mov
xor
push
lods
pop
pop
mov
pop
lods
test
add
gs
mov
rcrb
push
or
mov
pop
add
sbb
jns
lods
sti
pop
and
push
push
mov
sub
cmp
xor
rclb
xor
cmp
pop
add
xchg
mov
jl
xchg
jge
mov
and
cmp
lea
je
cmp
ficoms
test
pop
pop
cwtl
lea
jo
inc
jge
shll
push
loop
and
mov
loope
repnz
mov
cmp
je
push
loope
sbb
mov
mov
test
push
xor
loope
imul
lahf
pop
loope
inc
imul
iret
xchg
sub
stc
rorb
add
cmp
add
dec
add
jns
dec
mov
dec
sbb
fisttpll
mov
and
push
dec
movb
and
std
loopne
jp
faddp
push
jns
add
pop
add
push
mov
dec
scas
icebp
jmp
xchg
mov
lret
xor
and
mov
sbb
dec
lods
lock
loope
inc
je
adc
add
mov
jecxz
aam
adc
imul
cld
push
dec
mov
sbb
ret
out
les
out
in
push
sahf
add
jo
sti
stc
inc
pushf
or
inc
sub
xchg
loop
xchg
xor
jno
push
adc
popa
xor
or
mov
and
pop
fs
in
push
mov
adc
scas
lds
xchg
pop
cld
roll
pop
or
push
push
and
xor
mov
lret
cmp
sub
int3
add
call
ljmp
clc
jne
sub
push
xor
mov
dec
sub
dec
cmc
mov
sbb
adc
mov
loopne
in
mov
int3
push
and
pop
jb
fcmovbe
sbb
int3
lea
cmp
test
add
mov
mov
sti
mov
cmp
mov
push
push
js
xchg
xchg
nop
and
mov
jle
cmp
adc
ret
insl
mov
pop
pusha
leave
nop
cmp
mov
int
mov
test
cmp
popf
dec
fadds
fbstp
in
movl
mov
fsubr
xchg
popa
insb
and
mov
cmp
aad
dec
cmp
mov
mov
push
mov
push
outsl
and
sub
pop
je
xor
inc
mov
insb
jl
or
push
mov
cmp
dec
cld
cltd
sub
jbe
push
outsl
xor
or
push
mov
pop
add
add
imul
daa
xchg
add
or
xor
mov
or
cltd
inc
xchg
pop
pop
jg
lahf
push
inc
in
or
mov
push
add
std
push
pop
ja
and
xor
add
inc
and
xor
pusha
cmp
ds
cmpl
movsl
cltd
sbb
popf
std
bound
mull
pop
sbb
cmp
jb
cld
stc
cmpsl
insl
cmpsl
sbb
xor
sti
jl
cmpl
push
das
jo
lock
jecxz
in
addb
scas
push
int3
jb
lock
adc
push
inc
sub
enter
js
xor
loope
mov
popa
dec
sub
xor
mov
add
and
or
loopne
inc
pusha
out
adc
int3
jnp
call
pop
cwtl
push
inc
int3
xor
jnp
cwtl
jecxz
adc
mov
lret
and
pop
inc
jb
daa
test
aam
sbb
inc
les
cmpb
push
mov
pop
mov
or
faddl
add
sbb
or
lock
or
test
or
stc
popf
scas
mov
dec
jge
cmp
aam
inc
cmp
push
leave
mov
ret
add
jmp
push
push
incl
push
clc
shrb
call
mov
adc
pusha
sbb
push
inc
outsb
std
inc
insb
mov
pushf
in
sbb
mov
or
add
mov
push
loopne
or
inc
add
push
cs
sbb
faddl
jmp
icebp
lea
scas
popf
or
fcoms
movsb
push
push
adc
dec
scas
pusha
cwtl
shlb
cmpsl
popf
ss
sbb
cmp
push
add
nop
test
jns
mov
lods
or
mov
jb
cmp
popa
cld
cld
adc
xchg
dec
pusha
je
and
addr16
arpl
shr
lea
popf
shl
jne
mul
les
xor
cmp
add
insb
pop
push
xorl
xchg
cmp
jl
ret
fistps
push
aas
mov
rcll
imul
mov
jno
jge
jnp
pop
addl
andb
sbb
push
lea
aam
lock
mov
cli
call
jns
jne
sub
mov
insb
xchg
je
daa
dec
inc
inc
loope
je
sub
adc
movl
fisttpll
insl
leave
sbb
imul
mov
sbb
mov
in
mov
or
pop
cli
mov
scas
iret
sbb
leave
and
mov
dec
icebp
sub
push
mov
jne
push
je
movsb
cmp
lcall
cmp
mov
jae
and
cwtl
xchg
test
xlat
pop
add
js
mov
add
test
push
inc
push
pushf
leave
push
cmc
call
arpl
int3
and
lret
or
sub
pop
push
mov
adc
xchg
mov
mov
xchg
inc
into
mov
rcr
xchg
pop
daa
in
sti
dec
push
je
dec
push
sbb
inc
xchg
inc
push
mov
sbb
aam
inc
leave
int
add
cmp
dec
xchg
outsl
mov
enter
jle
add
test
in
xor
lock
add
in
in
pop
xchg
mov
or
push
pusha
imul
adc
xor
and
leave
push
pop
adc
push
out
les
mov
sbb
out
inc
shlb
jle,pn
stc
pop
cmp
dec
lods
or
jl
jb
xor
add
jge
incl
bound
fists
aas
push
and
das
es
adc
inc
cmp
jl
andb
mov
adc
dec
pusha
xor
add
adc
jae
mov
mov
add
add
sbb
inc
and
call
cmp
jl
push
pop
pop
pop
inc
inc
mov
or
push
push
and
or
aas
jge
pop
push
sbb
leave
nop
sub
xor
jp
loope
xchg
stos
mov
jo
ss
lret
mov
out
test
add
cmpl
out
pop
jne
adc
fwait
cmp
mov
mov
add
mov
or
mov
mov
ds
jne
lahf
jns
fcomi
push
shlb
pop
add
adc
cwtl
xlat
add
repnz
sbb
xor
loopne
push
mov
icebp
or
push
push
iret
dec
add
jbe
movntq
lea
ja
jns
in
mov
daa
pusha
or
jmp
push
dec
inc
xchg
xor
adc
or
and
xor
popa
lea
jb
add
rcll
or
inc
dec
inc
hlt
dec
adc
mov
add
or
mov
jge
add
sub
cmp
adc
lret
cmp
addr16
call
adc
cld
flds
roll
clc
push
pop
pop
ret
pop
iret
and
sub
xchg
shlb
push
hlt
xchg
in
jnp
push
push
sbb
hlt
je
jo
xchg
add
push
mov
mov
out
or
push
clc
mov
lea
dec
jmp
or
xchg
cwtl
sub
push
inc
mov
movhps
call
fwait
mov
pop
jae
pop
or
cmp
andl
xor
mov
adc
and
mov
mov
xor
cld
movsb
cld
bound
inc
sbb
lds
or
push
movsl
ret
inc
or
pushl
sub
scas
xor
inc
inc
call
clc
mov
pop
push
mov
pop
and
or
sub
sbb
or
aam
je
dec
lahf
inc
add
jl
mov
into
inc
mov
cmp
or
mov
sub
out
pop
push
lahf
sbb
cmp
push
mov
nop
inc
xor
push
cli
notl
and
stos
push
mov
inc
sbb
adcb
fs
in
fs
inc
lea
xor
clc
mov
jne
mov
xchg
aam
push
adc
or
je
push
push
inc
lods
add
xor
adc
in
mov
negb
push
ret
pusha
sbb
add
aaa
adcl
in
in
and
or
mov
sbb
dec
jno
cmp
nop
push
dec
adc
rcll
adc
sub
pop
enter
clc
jo
cmp
clc
ljmp
inc
pusha
cmpw
pop
jne
mov
jp
push
insl
les
lock
mov
mov
popl
jbe
mov
clc
testl
mov
movsb
mov
js
addl
jns
mov
add
hlt
xor
push
inc
adc
and
out
add
xchg
les
mov
pop
loopne
add
push
or
sbb
jb
add
push
or
cmpsl
inc
aas
sbb
dec
enter
inc
aas
sbb
pop
cld
aad
clc
nop
je
mov
inc
fisubrs
add
fcoml
jmp
and
inc
adc
rclb
inc
mov
lea
push
loopne
cmp
aas
mov
cmp
lcall
repnz
lahf
adc
or
and
mov
mov
js
add
sbb
and
inc
jno
adc
push
leave
add
stos
dec
inc
shrl
cs
pop
xor
pop
jmp
sub
pop
push
or
and
rcl
adc
xchg
cli
and
or
mov
clc
xchg
or
adc
jae
or
cmp
fisubl
push
ficoms
hlt
push
add
add
std
and
xchg
inc
dec
or
xchg
adc
inc
fsts
sub
jecxz
xor
mov
sahf
pop
push
jns
in
out
xchg
call
push
dec
pop
sub
je
dec
je
add
and
add
das
jae
fidivl
mov
xlat
or
jmp
push
jmp
aad
and
mov
or
pop
cwtl
xor
xor
mov
sarb
imul
jge
mov
adc
push
xor
out
cwtl
add
negl
ja
ret
lods
sbb
mov
push
pusha
cmp
lock
push
int
jge
loopne
pushf
fmuls
popf
push
and
out
jmp
jb
add
xorb
xchg
roll
loope
add
cs
push
pop
mov
fwait
add
add
xlat
xorb
pop
ret
or
popa
xor
or
or
dec
flds
adc
inc
fcomp
adc
push
push
push
jmp
pop
push
mov
icebp
pop
or
shll
xchg
push
mov
test
and
out
ss
mov
push
xor
add
or
lods
add
shlb
or
push
xchg
inc
sbb
inc
push
dec
andb
loope
setne
loop
rcrb
xchg
dec
hlt
adc
jb
inc
xchg
adc
mov
jnp
xchg
or
js
pop
arpl
xor
xchg
jle
rol
pop
xchg
int3
cmp
insb
aaa
adc
rolb
aas
jbe
fcmovnb
loop
mov
lahf
std
or
push
je
movb
mov
inc
inc
mov
es
xchg
and
xchg
inc
ja
lret
pop
adc
jmp
mov
in
xchg
inc
testl
or
jne
inc
arpl
add
repz
sbb
aas
xor
dec
les
sbb
out
das
fisttpll
jmp
mov
mov
clc
fstpt
inc
fistpll
jo
push
cmp
je
cmp
xor
pop
testl
insb
cmp
jl
out
adc
andl
stc
pop
cli
test
xchg
dec
sti
cld
or
jmp
imul
and
inc
inc
in
or
in
negb
and
or
pusha
lcall
or
mov
sub
sbb
js
dec
sub
punpckhbw
in
jno
add
push
daa
pop
lret
je
sbb
cwtl
push
sbb
mov
dec
pop
and
popa
enter
add
pop
jo
or
ljmp
push
mov
mov
jbe
out
in
sbb
or
jg
xchg
outsb
pop
insl
fsts
xorl
movsb
adc
inc
adc
sub
mov
enter
sub
into
mov
xor
push
jb
outsl
pop
sub
ret
cli
push
sahf
mov
xor
rcr
lods
pop
mov
mov
loopne
cvttps2pi
jo
das
xchg
cld
and
mov
ret
push
shrb
std
mov
mov
sbb
xor
sub
js
and
bound
ja
inc
sub
jns
shl
jae
aam
sub
decl
lods
sub
fwait
pop
lea
fwait
ja
cmp
aam
push
cmpsl
clc
add
xchg
cli
ret
jo
js
push
dec
mov
adcb
xchg
faddl
fisubrs
in
xchg
cmpb
ds
sbb
add
xchg
mov
pop
sub
mov
lds
xchg
rorl
sbb
mov
pop
out
adc
push
test
adc
push
dec
cmp
inc
mov
fsubs
sbb
mov
test
jne
shll
pop
orl
push
and
push
ss
ficompl
fs
sub
mov
sub
js
mov
das
fldenv
xchg
ret
lret
xchg
outsb
popf
push
lods
xor
sarl
cmp
je
cmp
jb
or
sti
add
xchg
add
add
pop
roll
insl
xor
aaa
data16
push
and
bound
das
jne
je
push
addr16
inc
push
pop
mov
and
cli
je
jnp
shll
add
in
rolb
mov
sbb
pop
nop
mov
cmp
sbb
mov
push
mov
test
xor
shl
mov
xor
div
pop
mov
adc
jecxz
sbb
or
das
inc
repz
les
inc
insb
push
mov
movsl
cmpsb
dec
loope
aas
mov
sub
push
add
cmp
mov
add
adc
test
rorb
loopne
inc
or
push
or
mov
mov
popa
sti
and
add
or
ss
pushf
pop
pop
dec
mov
inc
inc
str
xor
mov
mov
les
sub
incb
xlat
push
push
nop
cmp
xor
add
fidivs
push
push
outsl
xor
aaa
fmull
test
pop
ja
jb
idivl
add
and
push
inc
inc
out
jns
cmp
xor
movsb
jns
lcall
jg
out
or
xor
sub
sbb
add
adc
outsb
addr16
push
fwait
call
lcall
shll
enter
cmp
mov
or
xor
mov
add
pop
es
cmp
dec
sahf
or
fcoms
jne
aam
cmpb
add
popf
cmp
into
sub
and
pop
add
xor
clc
les
pop
pushf
mov
dec
pop
daa
lahf
push
add
xor
xchg
daa
xchg
mov
shlb
xor
aas
dec
adc
movsl
dec
movsb
pop
adc
push
mov
adc
add
clc
movsl
loope
lock
or
sub
dec
push
call
test
mov
push
mov
mov
arpl
push
push
dec
pop
dec
sti
aam
inc
jmp
xchg
jp
pop
push
mov
fsubs
push
push
push
inc
ret
enter
pop
rcrb
jno
icebp
push
cmp
add
imul
clc
nop
xlat
or
sbb
mov
adc
cwtl
stc
pop
lcall
or
add
cmp
lock
negl
inc
decl
add
push
xchg
cmp
clc
pop
xor
inc
cwtl
aam
push
adc
pop
call
icebp
or
add
test
lods
adc
push
cmp
pop
sarb
xor
fnstcw
xor
test
daa
aaa
sub
call
add
sub
xchg
popa
aas
and
push
je
push
push
dec
xchg
jmp
mov
fidivl
popa
lods
imul
cmp
xchg
loope
sbb
dec
test
cwtl
sarb
ss
push
data16
pop
push
cmp
and
and
mov
std
add
movsb
mov
adc
nop
imul
cwtl
gs
clc
adc
and
cmp
dec
dec
into
insl
call
mov
xchg
and
add
mov
test
xor
mov
inc
sarb
in
and
pop
shrb
lock
pusha
call
xchg
adc
jp
pop
movsb
sub
subb
fisttps
mov
xchg
xchg
leave
rcll
adc
push
vcmpnleps
push
ss
aas
add
or
or
divl
push
add
or
icebp
ss
jbe
push
cmp
xor
pop
mov
mov
xchg
sahf
mov
add
sbb
cld
orl
inc
je
fwait
sbb
jg
xchg
shll
mov
and
and
adc
cmp
mov
inc
add
aas
movsb
add
pop
add
lea
dec
js
sub
sbb
cltd
jmp
inc
cld
and
sbb
dec
rcl
jae
ss
inc
adc
push
ret
inc
xor
fadds
mov
ret
sbb
jle
lea
add
add
or
cwtl
sbb
test
pop
lods
push
sbb
mov
or
in
arpl
dec
fidivrs
mov
mov
mov
fistl
mov
xchg
lea
movsb
mov
je,pn
fmuls
mov
testl
xor
in
fcomps
jmp
inc
pop
lea
mov
add
or
arpl
movsb
xchg
mov
clc
and
out
inc
push
sbb
xchg
lahf
adc
sub
shl
in
or
xchg
mov
movsl
jnp
jg
and
mov
test
jge
jne
cmp
je
inc
or
fsubs
xor
in
add
movb
jl
jmp
mov
stos
test
nop
int
in
xchg
mov
stos
es
sub
and
imul
es
mov
mov
inc
ret
cmpsb
rcrb
xor
sub
push
cmp
es
mov
push
dec
dec
cwtl
rclb
pusha
fs
hlt
in
pop
rorb
cmpl
adc
cmp
jl
or
aaa
add
cmp
sarb
js
in
imul
loope
aad
jge
gs
out
mov
test
mov
cltd
std
jo
fistpl
pop
sub
test
lods
add
jbe
mov
mov
outsl
inc
mov
xor
rolb
jmp
test
inc
out
mov
pop
mov
push
pop
cmp
lods
rcr
push
jo
sub
rcl
add
loopne
int
cmpsl
lret
adc
jp
mov
pop
cltd
clc
pop
mov
test
jle
cmp
jnp
jne
fisttpl
add
xchg
loope
xor
cld
lahf
xchg
mov
sub
addr16
testl
cmp
rcl
inc
xor
outsb
aas
mov
push
je
inc
inc
inc
pop
xlat
inc
sub
ret
mov
pop
mov
adc
dec
call
hlt
sbb
jo
push
mov
insl
sbb
cmp
sbb
aad
adcl
inc
cmpsl
adc
fstps
sbb
mov
mov
pop
mov
xchg
stos
adc
movsb
cld
pop
mov
push
pop
arpl
pop
adc
and
mov
push
xor
or
sbb
lret
xor
repnz
stc
push
mov
mov
sbb
add
adc
data16
cmpsl
mov
mov
sbb
or
jbe
jg
add
inc
dec
loop
aaa
js
xchg
dec
jne
cmp
xor
cmp
sbb
fdiv
push
iret
sub
pop
xor
es
jo
adc
outsb
mov
mov
je
inc
fs
ret
push
sub
sti
or
arpl
loopne
xor
cmp
add
jnp
cmp
sub
or
data16
sub
mov
pop
pop
mov
les
popf
sub
out
jns
xchg
movsb
cli
xor
test
lods
inc
ficoml
pop
cs
lock
adc
and
inc
sub
xchg
push
test
je
inc
pop
jle
jmp
push
or
adc
sub
aas
je
pop
push
loopew
xor
lret
or
ret
inc
or
and
xchg
xchg
sbb
mov
int3
fsubl
cs
inc
aaa
jnp
insl
inc
jmp
das
sub
mov
mov
lea
mov
push
add
cmp
adc
mov
mov
or
jge
pop
cmpb
sbb
push
inc
dec
or
addr16
int
sub
jne
cmp
mov
sub
inc
add
cmp
jge
cmp
je
cli
jmp
mov
mov
cmp
jl
cmp
jg
jmp
xor
or
add
sbb
adc
ja
pop
incl
in
cmpsb
mov
clc
das
shll
addb
sbb
mov
insb
shr
or
call
mov
fwait
lock
jg
mov
pop
or
mov
fldcw
mov
mov
aas
jmp
mov
fidivrl
sub
mov
cmp
mov
pop
sub
mov
or
sbb
pusha
adc
fnstcw
pop
popa
cmp
sub
adc
shll
jmp
xor
adc
add
nop
jl
jne,pt
testl
push
lahf
and
imul
repz
push
adc
or
popa
jmp
cmp
js
push
iret
xor
lds
dec
testl
call
aas
sti
sbb
les
dec
negb
mov
jecxz
xchg
push
mov
inc
insl
jmpw
push
sahf
mov
jle
in
xor
add
pop
arpl
push
xchg
movsl
out
push
inc
fstps
push
pushf
mov
mov
inc
adc
sbb
int
push
sub
pop
pop
adc
add
sbb
enter
andb
nop
adc
into
pop
mov
mov
ret
bound
test
add
rclb
sub
add
fdivl
pop
icebp
push
mov
rcrb
loopne
ret
or
mov
orl
inc
mov
jno
pop
movsl
mov
xchg
push
cmpl
add
popl
cmp
loopne
inc
lock
xchg
inc
lods
sbb
iret
mov
mov
in
movsl
and
leave
and
pop
sub
and
add
push
pop
inc
cld
push
in
adc
ret
int3
add
add
xor
sub
inc
icebp
inc
sbb
jne
pop
incl
mov
add
xor
xor
out
imul
testl
inc
cld
push
xor
add
fsubrs
dec
bnd
leave
add
int
inc
ljmp
std
sbb
push
push
add
cli
add
mov
roll
cmp
jbe
rorl
js
push
adc
sub
sbb
and
cmp
jb
xor
hlt
fs
cmp
cmp
jb
scas
cld
jle
loopne
add
das
test
cmp
imul
shlb
rorl
pop
out
inc
add
add
mov
mov
gs
lods
push
dec
add
add
nop
inc
inc
inc
inc
jle
cmpsb
imul
and
mov
or
inc
mov
mov
call
call
shll
clc
cld
jo
mov
lea
lock
adc
adc
xorl
push
jl
and
xor
mov
repz
cld
ds
adc
lea
jl
cld
cmp
xor
and
std
cld
out
or
fbld
xor
fsts
das
repnz
stc
sub
xor
ja
cmpsb
mov
or
push
push
fildl
jne
mov
repnz
dec
mov
lods
mov
aas
and
mov
out
add
das
adc
dec
push
pop
add
mov
mov
or
push
mov
push
insb
lcall
das
sbb
dec
shll
sbb
adc
shll
or
xchg
add
stos
fdivs
push
sbb
pop
lsl
pop
inc
xor
mov
cmpsl
rsm
jg
and
sahf
test
je
add
xor
mov
clc
jge
cli
add
ds
je
sub
pop
inc
dec
jne
mov
dec
testb
repz
lret
je
rep
je
sbb
mov
inc
dec
jl
les
rolb
and
mov
imul
and
loop
ret
mov
push
push
cmp
adc
dec
xor
pop
cmp
or
addr16
add
ja
push
xor
sbb
inc
mov
jae
pusha
in
insl
test
imul
cmp
push
lds
adc
lock
cmp
sub
jae
cmp
pop
out
fnstsw
rorb
push
and
insb
test
jg
cmp
xor
sub
mov
pop
push
lea
push
jnp
int
notl
jo
push
xchg
pop
jmp
or
mov
jo
add
popa
imul
div
push
jmp
test
fstpl
sub
fcompl
fnstsw
sahf
jne
jg
mov
and
ret
and
push
jge
fwait
adc
mov
push
daa
cs
jnp
outsl
or
mov
fnclex
ret
ret
mov
mov
add
outsl
adc
adc
pusha
movsb
outsl
xor
inc
cmp
insb
ret
mov
ret
hlt
fstcw
fwait
jg
or
out
std
or
cld
fistpll
or
and
dec
mov
cs
mov
or
xchg
rolb
mov
sarb
mov
nop
add
in
arpl
mov
jmp
loop
negl
std
add
xchg
sbb
pusha
add
cmp
push
push
sbb
addr16
lret
repnz
inc
popa
std
in
jge
bound
add
mov
mov
mov
pop
testb
inc
ja
pop
cmpsl
std
push
add
cmp
inc
adc
mov
fs
shl
pop
cmp
pop
ret
or
adc
jge
inc
push
or
cwtl
in
in
mov
rol
mov
push
nop
ss
sbb
cmp
mov
xchg
shll
testl
nop
rolb
pavgb
fcomps
push
cmp
in
addb
in
push
xchg
sub
pop
xor
clc
xor
lock
and
fcomp
adc
add
fldenv
rolb
inc
aam
inc
add
fsubrl
clc
and
sub
cmp
test
test
sbb
xor
arpl
mov
and
pop
push
dec
inc
cvtps2pd
inc
dec
or
adc
xor
xorb
call
out
and
jne
jg
jno
jae
mov
jmp
mov
sarl
test
cs
je
inc
pop
cltd
imul
mov
int
and
mov
mov
dec
addl
add
add
shlb
dec
inc
push
pop
and
maskmovq
notl
mov
or
add
inc
or
in
insb
jnp
lock
xchg
sbbb
je
add
push
xchg
cmp
daa
pop
cmpb
adc
push
xchg
or
cmp
ret
dec
cmp
push
push
push
popa
adcb
addps
call
mov
and
sub
mov
mov
dec
or
inc
std
das
jl
add
out
dec
loopne
add
jb
call
or
je
sbb
pop
arpl
mov
loopne
jg
loop
repz
or
push
or
push
pop
mov
in
or
adc
pop
or
dec
add
pop
sbb
filds
testb
rcll
dec
mov
push
push
pusha
mov
cmp
mov
cmc
inc
push
adc
in
loopne
push
pop
dec
imull
sti
push
lock
sub
ds
ljmp
jecxz
les
clc
inc
ds
nop
cmp
mov
and
dec
push
jo
aas
and
inc
pop
clc
cmp
or
faddl
aam
xor
dec
rol
mov
push
data16
adc
loopne
add
roll
sbb
ds
jns
cmp
nop
aas
inc
aas
cwtl
adc
fistps
test
enter
aas
and
nop
aas
dec
imul
mov
or
push
push
pop
mov
xor
insb
je
aas
mov
inc
inc
aas
aas
mov
cmpsb
push
mov
inc
loopne
push
jno
je
dec
js
je
jne
mov
or
icebp
sub
addr16
pop
adcb
jae
push
cmp
rcll
pop
cmp
stos
sti
fistpll
add
pop
sub
stc
add
jmp
mov
or
adc
das
out
movsb
or
adc
arpl
push
scas
xchg
loopne
fldenv
jne
push
and
mov
mov
adc
das
es
or
test
jmp
fnstcw
inc
shl
hlt
movsb
jg
je
mov
inc
add
in
rorb
scas
lahf
xchg
movsl
pop
push
or
dec
out
mov
or
jmp
add
cmp
cltd
or
jmp
mov
inc
leave
mov
add
xor
and
jmp
int3
stos
icebp
xor
cmp
add
push
loopne
jecxz
pop
pop
lea
mov
mov
jge
aas
mov
jbe
loope
inc
mov
testb
sub
test
je
test
mov
idiv
cmpsb
xchg
xor
sbb
xor
inc
testl
in
sbb
jg
pop
sbb
rolb
popf
dec
mov
std
movsb
xor
jle
inc
cmp
inc
mov
cld
and
jp
rcrb
sahf
cmpsb
aas
mov
mov
pop
push
jmp
cmpsl
inc
mov
je
sub
ret
xchg
sbb
dec
mov
xor
aaa
je
mov
je
insb
xor
inc
xor
push
and
sub
or
test
sbb
push
jo
push
xchg
add
cmpsb
pop
lock
call
pop
mov
test
mov
mov
or
mov
clc
imul
ret
sahf
add
sar
and
setnp
dec
icebp
test
adc
push
xchg
jne
lds
mov
push
cmp
jg
jb
and
test
das
jae
sub
inc
pop
mov
mov
sbb
ret
jge,pt
orl
push
std
lock
cmp
and
call
mov
inc
jg
sub
fwait
adc
jnp
jp
inc
xor
mov
shl
inc
ret
fisttpl
ja
xchg
dec
add
jmp
jge
loopne
add
shlb
leave
rcll
pushf
mov
aas
push
aad
pop
cltd
gs
cmpb
cld
testl
mov
lahf
call
or
out
inc
jecxz
pop
mov
and
adc
jmp
sub
mov
cmp
mov
sub
push
xor
outsl
and
movl
outsb
jns
add
add
lea
cmp
cli
pusha
jmp
cmp
ret
jne
andb
mov
fnsave
add
imul
test
je
out
jge
adc
test
je
scas
sbb
lret
jnp
sbb
shlb
sbb
jp
sbb
or
ljmp
pop
inc
cmp
lods
cmc
ja
sbb
jbe
loopne
stos
push
pop
cld
mov
clc
jmp
add
lret
and
addl
add
aad
pop
jne
inc
test
lds
or
pop
push
lock
pop
push
shl
shr
mov
test
je
mov
fstl
fiaddl
push
inc
push
dec
fs
cmp
dec
shll
and
inc
jp
sbbl
ret
pop
push
loope
das
and
movsb
and
lea
xor
or
mov
out
je
mov
inc
cmp
shr
inc
hlt
or
fcoms
sarl
jecxz
push
adc
divl
lret
push
jge
daa
aas
stc
xor
pop
iret
xor
adc
scas
pusha
jne
and
or
add
mov
cmp
inc
mov
xchg
out
cmp
je
test
xor
adc
xchg
pop
arpl
pushf
xor
inc
outsb
or
cld
add
sub
jg
fisttpll
cmc
scas
inc
imul
shlb
add
das
jne
pop
pop
pop
add
lock
loopne
scas
std
lea
mov
fsubrs
and
cmp
mov
jno
inc
mov
bound
mov
and
push
insl
divl
mov
push
bound
sbb
jo
add
jo
sti
jg
jle
push
les
inc
push
je
mov
mov
inc
push
add
push
jmp
cltd
clc
or
pop
repnz
mov
cmp
push
jne
andb
pop
mov
cmp
jne
pop
popa
pop
jo
jmp
test
xchg
push
mov
int3
sub
mov
xorb
inc
cmpl
cltd
repz
sbb
adc
mov
test
adcl
imul
pop
int3
cmp
daa
push
neg
or
orb
rolb
adc
jbe
imul
ret
add
and
aaa
stc
jb
das
call
jg
pop
cmp
sub
faddl
cld
jmp
cmp
setae
dec
adc
cs
je
dec
aas
out
jmp
adc
push
push
imul
int
aaa
mov
add
jmp
or
pop
mov
mov
or
lcall
sub
psrld
pop
push
lea
and
lds
mov
mov
test
push
jne
cmp
push
sub
sub
pop
fimull
sub
loopne
xchg
or
add
pop
push
mov
pop
test
mov
aaa
lret
and
inc
push
inc
aam
jno
pop
push
rolb
jmp
or
int
mov
dec
cmp
sbb
lods
and
mov
pusha
roll
addr16
push
and
add
js
fcmovb
jg
subl
push
sti
lret
or
inc
mov
cmp
mov
and
outsb
shl
jmp
jecxz
xchg
or
movlps
and
xchg
mov
push
jns
jmp
or
cwtl
or
lret
jmp
std
jmp
cld
mov
push
sub
fs
cmpsb
ret
out
jmp
es
add
mov
adc
loope
xor
scas
and
jno
dec
movsb
std
ss
inc
add
sbb
movsl
shll
jle
jmp
fisttps
cmp
js
jb
pop
mov
cmpsb
sbb
je
pop
cmpsb
inc
dec
and
fmuls
mov
roll
jmp
add
inc
subl
cmpsl
out
fnstcw
je
mov
sti
sub
jmp
repz
repz
das
xchg
dec
js
lret
inc
add
fdivrs
jb
lcall
mov
or
sahf
inc
incl
dec
dec
jmp
dec
cmp
mov
sub
push
push
pop
cld
test
dec
push
mov
aam
gs
loope
inc
adc
dec
test
rolb
int
sbb
hlt
rorb
inc
call
adc
sbb
fistpl
aaa
adcb
xchg
int3
or
sahf
outsb
mov
jns
push
shr
inc
std
ljmp
in
addr16
xor
jmp
rcr
or
jne
idiv
mov
fcomip
mull
inc
mov
add
jb
gs
fidivl
jb
cmp
mov
bound
fistpl
fdivl
lods
jmp
fdivl
push
imul
adc
or
xlat
shll
or
or
jbe
add
pop
sbb
adc
or
neg
sbb
js
dec
cmp
icebp
pop
mov
xchg
dec
push
sbb
push
inc
xchg
in
leave
mov
int3
and
dec
fldenv
sbb
adc
int
mov
shr
rcr
dec
fcomi
enter
sbb
adc
sbb
gs
and
pop
pop
push
sub
gs
adc
rclb
jnp
ja
jl
jp
icebp
push
clc
or
and
jmp
dec
call
push
insb
xchg
lock
fnstsw
lahf
je
push
scas
sub
pop
fstps
push
dec
pop
aam
push
add
push
lret
xchg
lods
out
sbb
or
mov
repnz
or
std
movsl
xlat
cmc
je
test
decl
push
inc
inc
dec
sbb
shll
mov
mov
loop
push
stos
adc
inc
dec
call
pop
sarl
mov
jp
or
repz
inc
pop
fsts
dec
sub
outsl
je
cmp
loope
adc
ljmp
loop
sbb
pop
xor
mov
mov
scas
aad
idivl
lret
sbb
out
jne
or
xchg
clc
fiadds
int
ja
push
call
push
and
and
outsl
ret
adc
adc
imul
incb
rolb
rclb
adc
incl
adc
hlt
adc
cmp
mov
jg
xchg
mov
jg
xor
or
xor
cmp
and
aas
pop
mov
cmp
adc
add
sti
or
pop
add
mov
mov
mov
shr
dec
repz
insb
add
lret
sub
loope
paddsw
xlat
or
mov
and
lea
mov
pop
mov
pusha
and
ss
fimull
ret
jb
testl
cmp
jbe
add
or
scas
sbb
add
mov
adcb
add
cmp
dec
and
cmp
int3
sarb
into
cld
jg
hlt
mov
add
push
jne
adc
jne
sbbl
imul
dec
mov
test
sub
movb
and
pushl
jmp
mov
pop
neg
sbb
neg
push
rolb
sti
mov
pop
sbb
rorb
inc
aaa
mov
mov
cmp
in
out
pop
test
aas
push
push
or
leave
ss
repz
icebp
ljmp
sbb
call
imul
push
sti
pop
mov
arpl
pusha
inc
sbb
in
jle
cmpw
or
test
fs
pop
xchg
into
fdivp
mov
add
pop
mov
dec
mov
or
pusha
repnz
jle
imul
add
popf
lea
nop
jo
enter
gs
push
inc
push
loopne
rclb
xlat
pop
sub
jne
jb
xchg
out
cmpsl
inc
jl
adc
and
sbb
pop
sbb
jecxz
lahf
xor
cmp
pop
jge
cmp
nop
icebp
and
or
mov
mov
jmp
mov
ja
std
sti
mov
testb
jo
xlat
sarb
or
or
rcrb
add
loop
push
push
rol
scas
lds
lea
sub
pop
pop
loope
shr
sbb
addl
bound
sub
inc
inc
popw
ss
sbb
imulb
rcl
dec
into
aas
sbb
xchg
icebp
xchg
pop
in
push
jge
fistpl
int3
aad
sub
xchg
out
jge
xor
or
shlw
mov
andb
aaa
inc
inc
inc
leave
in
inc
ja
pop
or
push
loope
rorl
or
jb
push
lcall
sbb
jp
scas
sub
mov
lea
sbb
inc
subl
popf
repnz
lahf
cmp
cmc
cmpsb
xor
push
sub
mov
loopne
jne
jmp
pop
or
and
test
pop
stos
lcall
adc
shrl
dec
push
dec
das
mov
pop
out
outsb
ret
mov
adc
cld
fs
add
cmp
add
or
jne
xor
adc
mov
or
arpl
fwait
mov
xor
aas
add
push
lea
cmp
shrb
lock
mov
das
sub
cmp
jae
sbb
in
pop
push
mov
and
cmpsb
fs
cmp
sub
jae
scas
push
das
mov
gs
and
pusha
sub
jg
and
sbb
pop
nop
ss
xchg
std
mov
data16
inc
inc
test
loopne
sub
lcall
jge
mov
testb
adc
mov
stc
pop
lock
mov
add
xor
iret
cmpsl
das
pop
fbstp
adc
sub
test
xor
movsb
insb
xor
push
mov
imul
adc
jge
fs
je
cmp
jb
jge
adc
ficoms
inc
sti
sbb
lock
shll
mov
adc
xlat
inc
add
aas
stc
sbb
sbb
pushf
inc
or
daa
push
mov
call
lahf
mov
jecxz
mov
roll
repnz
test
xchg
repz
out
leave
cmp
loop
sub
add
dec
not
mov
cmp
dec
mov
clc
test
or
mov
mov
lea
jecxz
or
inc
cmpsl
sub
push
test
clc
mov
jmp
push
adc
popa
or
les
inc
sbb
xor
xchg
xchg
jmp
ret
insl
push
pop
or
fcoms
pusha
xor
add
aam
mov
mov
hlt
mov
aam
adc
mov
or
push
mov
out
or
lret
call
and
dec
pop
mov
ja
imul
fwait
jl
fs
jae
xor
and
push
or
aas
ss
or
xchg
std
mov
outsl
push
pop
je
dec
aam
pop
pop
add
pop
or
test
mov
push
jl
push
imul
loopne
or
cwtl
push
push
ja
jns
and
cmp
cmpl
mov
test
sbb
adc
mov
dec
scas
lret
dec
loop,pn
insb
pop
dec
ss
add
lods
add
mov
jl
push
call
inc
push
adc
pop
in
sub
cmp
or
sahf
mov
pop
shll
xchg
adc
xchg
sti
ret
in
lods
xor
cs
cmpl
movl
mov
jno
jne
inc
add
scas
cmp
mov
idivb
add
nop
push
stos
push
pop
push
inc
mov
movsl
add
and
inc
mov
outsl
xchg
pop
mov
or
or
clc
xchg
sub
or
fiaddl
pop
mov
dec
and
add
icebp
popf
pop
addr16
push
push
mov
and
pop
push
arpl
mov
jo
loopne
xchg
testl
ds
imul
negb
pop
pop
mov
jmp
adc
jnp
xor
xor
shll
sub
cmp
fisttps
pop
add
jmp
fcoms
and
std
inc
mov
sub
pop
cld
add
shr
mov
mov
icebp
dec
aad
imul
mov
mov
hlt
adc
jl
dec
cmp
loope
jg
stc
jmp
dec
pop
pop
adc
pop
jg
iret
jbe
push
out
adc
sbb
pop
or
daa
cmp
jae
mov
cwtl
shr
lea
not
and
decb
jne
ljmp
mulb
shl
pop
inc
mov
mov
rorl
jns
lcall
mov
cli
add
sti
sar
dec
int
imull
cmp
jnp
cs
jne
sub
and
add
pop
cmp
dec
jbe
mov
ret
cli
in
pop
lret
sti
cmpb
loop
jl
cli
jg
imul
xchg
xchg
and
ljmp
push
adc
jnp
and
mov
and
dec
pop
add
and
punpcklbw
addr16
xchg
stc
mov
push
dec
mov
or
inc
clc
in
das
dec
arpl
sbb
orl
and
fstpt
lea
mov
jmp
or
sbb
packsswb
sbb
sub
lea
xor
rcll
add
cmp
aas
xorl
pop
adc
decl
cmp
repz
cli
mov
mov
dec
push
loope
add
movsl
divb
mov
xor
inc
dec
push
call
aas
xchg
cmp
or
sbb
dec
movsb
mov
dec
push
inc
jg
push
decb
adc
inc
hlt
pusha
add
push
or
cmpl
dec
and
cmp
adc
daa
cmp
jmp
add
into
mov
and
rorl
in
push
lea
push
push
test
or
dec
and
mov
jns
mov
and
int
rol
dec
lods
or
xor
pop
in
rorb
aam
push
hlt
push
imul
dec
jbe
sbb
sub
dec
pop
not
call
pop
mov
rcrb
fisttps
sbb
push
and
mov
iret
jmp
in
mov
jb
push
jne
mov
cmp
dec
adc
insl
jmp
xor
pop
shlb
outsb
ja
mov
jmp
es
jl
pusha
xor
testl
sbb
pop
mov
mov
mov
cmp
jg
pop
sbb
push
pop
mov
cli
lock
cmp
insb
add
inc
adc
mov
xlat
mov
push
jne
pop
mov
sti
mov
stos
decl
xlat
je
mov
lret
mov
mov
dec
scas
into
jne
insl
pushl
enter
jl
shl
inc
jmp
mov
stc
ljmp
icebp
test
add
cmp
jle
mov
stos
lock
xor
shll
and
or
shll
dec
mov
decb
jne
stos
push
and
xor
push
shr
xor
push
sub
ret
inc
and
push
insb
xor
mov
inc
adc
jp
pop
xor
pop
jp
addl
and
fidivrs
or
inc
test
sub
fs
decb
jge
mov
test
add
into
sbb
and
or
adc
jmp
push
pop
pop
aad
or
jnp
bound
sub
out
or
aam
sahf
outsb
add
mov
cld
fs
icebp
mov
add
inc
add
cld
mov
inc
push
jnp
out
lea
jne,pt
cmp
cmp
in
shlb
xlat
and
sbb
dec
cltd
adc
jmp
shll
mov
imul
inc
inc
pop
push
fwait
adc
data16
adc
icebp
or
and
inc
lock
add
mov
xor
mov
xchg
popw
daa
mov
popf
and
push
daa
pushf
mov
cmpsl
xchg
push
inc
stc
dec
dec
xchg
cmp
incl
pop
mov
cmp
jge
push
mov
inc
or
cmp
cli
shr
sahf
loopne
ret
outsl
imul
inc
pop
divl
add
sub
push
rorb
cmp
ds
or
out
jns
pop
adc
dec
in
add
lea
xorl
inc
out
dec
in
cmpl
mov
psubsb
inc
cld
lock
jp
cmp
pop
sub
sub
sub
or
add
clc
push
out
fldt
inc
gs
or
pop
inc
mov
inc
test
mov
pop
cmp
jg
test
hlt
mov
jne
or
mov
pop
paddw
mov
add
adc
xlat
lea
sub
xlat
dec
push
stos
maskmovq
ljmp
push
mov
cmpsb
cmp
mov
cmp
ret
cld
and
repnz
dec
add
dec
popl
pop
jne
jb
loope
sbb
test
daa
jl
pop
mov
add
pop
cld
or
aam
pop
cmpsl
clc
jl
and
push
cmp
je
rol
jge
mov
adc
jge
repz
jg
sub
add
outsb
sub
cld
adc
xchg
mov
cld
cmp
sbb
lea
add
adc
jg
pop
or
lret
pop
pop
popf
rorl
jb
and
mov
and
and
adc
sub
sub
jnp
adc
or
add
test
pop
in
js
clc
jl
mov
lea
scas
lret
inc
or
mov
dec
insl
pop
sbb
push
stos
xor
and
push
add
jbe
push
adc
fstl
xor
movsl
dec
inc
mov
push
jl
xchg
mov
repz
jne
nop
xchg
lahf
and
lret
ret
and
adc
jp
lret
mov
or
jmp
jnp
cmp
sbb
aam
ret
pop
dec
repnz
enter
clts
sbb
xor
or
dec
into
bswap
pop
xor
inc
ret
mov
mov
sbb
jnp
cmp
mov
cwtl
jge
jecxz
inc
or
or
out
or
inc
mov
add
cmp
pop
lahf
icebp
adc
rorl
lods
xorl
xor
fs
gs
push
aaa
and
movsl
aam
xchg
push
mov
adc
sub
sub
pop
cmpsb
movsb
or
xor
jb
mov
and
pop
xchg
push
inc
push
push
movnti
jg
inc
cli
lcall
pop
or
test
test
je
lcall
add
pusha
dec
jle
add
pop
es
pop
stc
test
and
cmp
mov
or
icebp
dec
pushl
cltd
das
jecxz
shll
lret
and
shl
or
mov
or
inc
xor
jbe
divl
jmp
fs
and
jmp
add
mov
test
je
cmp
arpl
mov
or
test
adc
test
fidivl
cmc
push
imul
pop
add
mov
xor
aaa
cmc
shll
je
or
mov
lea
xor
add
mov
mov
scas
push
xor
sbb
andl
insb
nop
aaa
repnz
jnp
and
fcomps
mul
jmp
arpl
or
jmp
sbb
movsb
cli
shl
or
sub
dec
jg
add
movsb
or
in
and
repz
xchg
fstps
fstpl
cmp
popf
push
inc
sbb
and
pop
cmp
nop
xor
cld
inc
jp
inc
jb
inc
or
add
mov
adc
sti
add
add
cwtl
std
out
test
fisttps
incl
fistpll
add
push
add
adcb
jmp
adc
loope
or
or
testl
add
push
imul
scas
test
adc
push
sub
and
outsb
mov
pop
adc
pop
fldl
fstpl
sbb
xchg
push
jo
push
std
loop
jecxz
out
addr16
je
test
mov
pop
adc
jmp
inc
shl
jmp
neg
add
inc
mov
add
sti
stc
mov
cmp
and
push
mov
cmpl
stc
iret
pop
push
or
jmp
nop
jnp
add
sbb
pop
add
cmpsl
ljmp
fstpl
mov
jmp
aas
xor
fcmovnb
mov
pop
dec
inc
push
mov
loopne
dec
in
push
fistps
fstpl
fmulp
jb
mov
test
into
adc
les
adc
xchg
lret
repz
insl
sub
and
loope
jb
sub
and
jns
dec
jo
sbb
push
sbb
pop
ret
stc
into
insl
idiv
dec
lds
lret
mov
jmp
pop
mov
rcll
sbb
setnp
jg
push
or
inc
loope
pop
jnp
add
insl
fucom
fildll
sbb
je
orb
add
xchg
icebp
cmp
jmp
pop
pop
xor
or
fwait
adc
cmpsb
jo
push
sub
add
loop
pop
cmp
std
cmpsb
jno
fisubrl
inc
in
push
mov
push
cmpsb
adc
sbb
das
in
dec
arpl
pop
shrl
sub
xchg
dec
sbb
lock
add
cmp
lahf
or
clc
push
sub
pop
add
dec
les
ja
dec
leave
ficoms
push
lea
xchg
inc
sahf
adc
ss
adc
pop
pop
popf
cmc
xor
mov
pop
aas
mov
je
pop
inc
cmp
or
inc
rorb
mov
es
hlt
popa
sub
movsb
push
pop
inc
aam
push
test
push
add
push
jmp
or
cld
pop
add
ss
aad
pop
add
push
cs
push
jl
jns
cmpb
loopne
or
dec
push
cmc
dec
mov
cmpl
or
dec
outsb
insl
or
cmp
call
mov
nop
data16
bound
adc
mov
jmp
add
sar
pop
inc
push
in
add
pop
ja
loopne
sbbl
adc
repnz
pop
mov
mov
add
pop
or
gs
repnz
dec
push
gs
mov
push
negb
jnp
clc
jle
shll
adc
addb
aaa
ds
or
out
gs
out
fwait
mov
movb
faddl
pop
inc
ljmp
sbb
add
and
jnp
sub
shll
xor
fstsw
aaa
mov
sbb
fnclex
sbb
pop
lock
and
fiaddl
cld
or
cld
aas
pusha
sub
mov
sub
inc
fistpl
fwait
sbb
fwait
scas
idivb
fsubs
add
sbb
dec
and
outsl
pop
fadds
loopne
call
sbb
adc
and
fldpi
xor
orl
push
inc
inc
pop
pop
fidivrs
clc
cmp
adc
fdivp
cmovbe
lock
fmull
insl
lock
pop
call
pavgb
add
and
pop
fidivs
add
mov
ret
pop
pop
jns
add
mov
dec
clc
gs
je
inc
jmp
cmp
xchg
or
std
mull
mov
or
leave
jne
pop
jmp
mov
pop
sti
inc
icebp
or
hlt
and
sub
test
fidivrs
cmp
xor
inc
adc
and
jecxz
in
dec
cmpb
je
cmp
add
adc
add
cmp
aad
sbb
sbb
jl
je
rcll
andb
cld
xchg
inc
inc
fisubs
xor
or
push
cltd
cmpb
enter
push
sbb
pop
lock
push
mov
sub
sbb
add
idivb
mov
pusha
out
mov
aam
pushl
pop
lea
pusha
cmp
mov
rolb
lret
pop
jecxz
xchg
fxch
xor
xchg
add
or
adc
push
out
ja
popa
ret
mov
xchg
pusha
lds
push
cmp
lret
cmpb
mov
enter
inc
out
jmp
adc
dec
cmp
pop
add
jns
neg
daa
sub
and
fs
jg
cltd
pop
idiv
jnp
xchg
idivb
fisubrl
or
xchg
xchg
cli
xchg
adc
in
lds
leave
sub
sub
adc
xor
loopne
orl
roll
into
jmp
adc
imul
jmp
adc
std
rolb
inc
lea
lret
mov
mov
pop
xor
and
loope
ret
add
cmp
mov
call
inc
jno
sub
out
pop
and
neg
jmp
pop
cmp
jl
imul
sbb
pop
push
push
adc
ss
and
pop
and
fs
mov
mov
dec
cli
or
dec
rcll
aad
icebp
push
arpl
lahf
cmp
cmp
pushf
rorl
inc
inc
fbld
sub
dec
mov
lods
or
stc
and
or
mov
dec
or
dec
xchg
cmpsb
and
lock
movb
inc
pop
fiadds
or
ret
dec
sub
pusha
loop
int3
les
adc
mov
data16
out
pop
in
pop
fldt
loop
sbb
popa
shr
and
repz
cmp
fstpl
push
mov
push
add
out
xor
notb
lods
inc
xchg
cmp
xchg
cli
mov
flds
enter
jle
add
ucomiss
pop
sbb
jne
scas
bound
or
cmpsl
lock
push
cmpl
popf
js
jbe
or
decl
or
sbb
in
or
and
les
adc
mov
sarl
pop
das
xor
and
mov
loopne
sbb
inc
or
inc
sub
add
push
or
add
push
jne
sbb
inc
ret
jle
leave
cmp
jp
punpcklbw
loop
push
out
sbb
pop
xor
leave
or
insl
out
imull
or
repnz
fistl
sub
inc
adc
add
sub
notb
pop
pop
sub
sub
fadds
push
arpl
jae
jl
jnp
jg
sbb
inc
popf
and
xor
fistpll
and
jle
jbe
loop
cmovge
mov
add
dec
loop
dec
clc
or
loope
das
xchg
clc
adc
hlt
add
jmp
sub
jge
in
mov
lret
mov
cmp
mov
pop
int
add
jp
xor
cmpb
and
sub
outsl
lock
mov
jle
mov
jns
push
add
jns
sahf
add
lcall
jg
lock
jae
cmp
jl
cmp
jg
pop
rclb
aas
dec
mov
xor
mov
lods
push
adcb
mov
lock
push
cmc
inc
adc
ror
adc
or
mov
add
js
lea
test
roll
or
inc
xchg
mov
orl
testb
bound
and
testb
sbb
xor
pop
mov
or
test
or
cs
inc
and
xor
or
aad
inc
mov
mov
je
adcb
inc
add
cmp
pop
out
and
dec
or
push
imul
imul
movsl
mov
in
in
push
ret
and
test
jp
ja
insb
xor
mov
cmpsb
mov
mov
aaa
push
jno
stos
sbb
dec
je
loope
push
clc
pop
jno
and
xchg
aam
jp
lods
test
push
push
loopne
push
add
cvttps2pi
and
out
fstl
sbb
jmp
add
mov
mov
pushl
cmp
nop
push
rcrb
cltd
xchg
push
push
jle
jb
cmp
pop
pop
inc
sbb
orb
or
pop
sbb
dec
adc
mov
mov
loopne
pop
out
pop
sub
sub
pop
sub
cwtl
cmp
fisubrs
and
outsb
xor
jbe
out
sbb
adc
push
sub
sub
in
sbb
notb
lea
mov
jnp
loopne
cli
cmpl
jbe
mov
sbb
cmpl
sti
jge
jne
or
je
xchg
out
cmc
fstp
cld
push
adc
push
cmpl
js
or
popf
or
dec
cmp
pop
or
outsb
shll
adc
cmp
adc
or
jmp
and
xor
add
add
iret
sbb
adc
adc
push
jo
xchg
pop
sbb
unpcklps
sub
and
and
push
dec
hlt
je
popa
cmp
xchg
jae
and
in
pop
mov
sahf
fists
push
pop
sbb
add
xchg
inc
mov
mov
montmul
cmpsb
or
xchg
xor
add
in
nop
or
je
cmpsb
data16
cmp
mov
cmp
jmp
jae
push
imul
add
das
sbb
mov
addb
fcomps
inc
bound
cltd
jmp
xor
jmp
mov
mov
mov
jl
jmp
xchg
push
icebp
xchg
daa
xor
push
sbb
cs
push
imul
xchg
fistl
ror
sub
cli
inc
ret
sub
movb
popf
or
push
add
add
pop
dec
lea
push
pop
push
jge
loope
stos
clc
push
jl
insl
cld
jp
test
mov
mov
pop
es
jmp
pop
sub
in
add
pop
lock
cmp
icebp
or
mov
xchg
xchg
mov
inc
xor
pop
dec
cmp
push
sbb
cmp
xchg
cmpsb
inc
stos
nop
pop
and
inc
insb
sysret
push
shrb
adc
shlb
js
adc
inc
pop
jmp
test
mov
test
call
pop
aam
or
mov
pop
adc
xor
and
or
test
add
add
cmp
getsec
mov
push
movsb
mov
fists
pop
pop
fs
je
les
sub
or
sub
xor
push
push
mov
pop
and
jnp
pusha
and
mov
cmpsl
jnp
sar
and
cmp
mov
test
loop
std
and
push
test
and
mov
adc
in
imul
clc
push
sbb
push
aam
sbb
and
inc
jo
jle
pushf
inc
cmp
stos
dec
stos
ds
sbb
xor
mov
inc
call
das
jecxz
adc
hlt
push
neg
addl
jge
adc
push
in
jl
icebp
sti
cmp
jl
or
push
rorl
dec
pusha
icebp
cmp
test
test
je
sbbl
ds
testb
lcall
sub
cmp
pop
int3
add
insl
lds
xor
pop
sub
sub
mov
aad
sbb
sbb
or
add
aas
cmp
addb
arpl
adc
lea
lea
loopne
popa
sub
dec
xchg
in
loopne
add
inc
inc
sub
das
pop
xor
lock
into
mov
lea
insb
imul
or
and
sti
ja
add
orb
and
sar
jg
ss
cmpb
jne
inc
inc
dec
sub
popa
dec
movsl
adcl
outsl
cmp
xchg
gs
sbb
popa
in
and
sbb
popa
cli
xor
aas
or
addr16
pop
mov
sbb
mov
out
jae
sbb
mov
test
and
cmpsl
lret
test
add
cld
xor
sub
loopne
mov
cmp
pushw
sahf
mov
mov
add
cmp
and
or
sub
cmpw
lret
push
outsl
adc
jmp
popa
add
es
add
lea
push
fistpll
iret
sahf
lock
insb
and
jns
test
lock
dec
loope
add
jle
jge
lahf
fistpll
call
xlat
call
stc
call
movsl
jae
je
pop
mov
sub
pop
inc
add
je
stos
aas
xor
jg
sub
inc
add
mov
shrb
sub
repnz
into
cmp
sbb
mov
jno
sub
addr16
fidivs
in
mov
lock
ljmp
inc
mov
add
mov
mov
nop
movsl
and
in
mov
fs
mov
adc
sub
xchg
ret
and
pusha
cmpsl
dec
xor
addr16
sbb
add
mov
xchg
add
std
data16
inc
jl
pop
popf
mov
leave
cmpb
icebp
cmp
sti
jle
adc
mov
push
cmp
or
cld
or
jnp
mov
ja
adc
std
imull
inc
ljmp
mov
jmp
sub
js
inc
or
test
jmp
das
or
push
pop
and
pop
mov
or
jmp
inc
js
shll
je
jne
pop
jmp
jp
and
inc
fsubrs
jbe
sub
pop
ja
cltd
jmp
pop
outsl
dec
cmpsb
jge
shr
inc
or
loopne
xor
icebp
adc
jl
je
jg
jl
jae
xchg
call
aas
fcmovbe
mov
cli
jmp
pop
or
jne
and
fs
sti
inc
mov
testl
inc
in
mov
sarl
push
xor
cs
popf
test
rcl
jne
adc
cltd
rorb
ret
xor
shrb
inc
cld
std
and
cmp
jle
add
mov
testb
mov
jmp
mov
lahf
cmc
xor
fs
cmpb
xor
dec
inc
push
movb
adc
mov
xor
fcomps
dec
sar
ret
movsl
es
outsl
ja
lods
adc
jmp
pop
adc
je
inc
mov
jne
lock
dec
xor
icebp
xchg
push
or
xchg
hlt
scas
cld
movsl
je
and
ljmp
jns
rcrb
arpl
xor
or
fs
xor
push
inc
mov
jnp
xchg
lds
push
inc
push
clc
fwait
dec
mov
dec
lock
jbe
mov
dec
mov
sub
mov
mov
pop
add
dec
test
inc
or
repnz
pop
out
adc
in
mov
fimuls
jle
add
jle
test
dec
dec
jge
jg
lea
dec
add
push
mov
mov
jl
jae
or
adcb
movsl
into
inc
jp
shrl
add
add
and
andl
mov
jg
mov
pop
adc
mov
dec
jno
es
fistpl
and
push
insl
andb
loop
int3
cmc
mov
add
movsb
sbb
mov
cld
mov
mov
js
adc
fs
cmp
sbb
icebp
out
movb
add
addl
das
in
int3
lods
mov
orl
hlt
sub
fistl
add
ret
dec
or
push
inc
sub
lahf
dec
dec
jg
bts
add
test
xlat
push
and
loop
xchg
out
cmpb
push
lret
push
test
repnz
ljmp
sti
dec
mov
loopne
ja
add
in
pop
dec
add
inc
lret
adc
adc
pop
dec
inc
rcrb
gs
jg
je
addr16
je
or
push
outsl
idivl
or
inc
jmp
cmpb
jne
or
xor
inc
add
lret
cmc
jnp
fidivrs
aas
lret
out
notl
daa
inc
bnd
insl
push
je
jl
addr16
icebp
jmp
jbe
sti
jmp
decb
sti
cmpb
adc
mov
adc
mov
cmpsb
mov
cmp
aam
sbb
sti
inc
scas
ja
ja
push
cltd
cmp
imul
jmp
mov
xchg
xor
xor
add
jnp,pn
and
pop
imul
inc
shlb
in
sbb
je
cmp
fmull
outsl
jg
pop
daa
sbb
sub
mov
clc
add
mov
addr16
or
sbb
push
jbe
loopne
push
and
or
add
es
out
loopne
fistps
in
jmp
inc
jle
mov
cmp
mov
sub
jg
out
jne
mov
mov
pop
test
adc
push
jg
sbb
adc
std
arpl
add
hlt
pop
cmp
pop
lret
adc
push
fnstsw
and
adc
scas
in
push
inc
mov
pusha
rcll
mov
inc
and
mov
push
inc
fistpl
insb
ss
in
mov
sti
mov
rolb
jno
movb
insl
test
ret
outsl
in
xchg
mov
and
inc
push
dec
xor
or
sbb
dec
jne
push
daa
inc
gs
mov
add
mov
int3
andb
cmp
xor
cmp
sub
sbb
loope
cmp
mov
dec
push
imul
add
dec
cli
add
outsb
jo
mov
xchg
out
call
xor
sbb
inc
and
jns
inc
lods
add
dec
stc
aas
push
cmp
jbe
mov
pop
data16
ret
inc
and
cmpb
popf
cmpsl
cmp
push
mov
bound
fdivrs
xchg
icebp
add
adc
push
sub
arpl
xor
add
mov
mov
add
je
addps
jge
ss
js
outsl
outsl
pop
adc
push
mov
jl
pop
jne
aaa
cwtl
fisubs
pop
xor
mov
or
subb
iret
pop
nop
adc
es
inc
pushf
aas
cmp
jnp
mov
or
pop
inc
push
cmpsl
and
mov
mov
fisubl
inc
cmp
cmpb
das
pop
ss
cmp
jae
mov
jmp
ret
cmp
loope
add
and
lock
inc
mov
mov
aas
or
dec
loope
add
dec
sar
add
shr
mov
mov
mov
cmp
jmp
jmp
test
or
sub
rcr
jmp
lea
or
inc
movsl
jb
pop
jg
jg
frstor
mov
push
enter
call
mov
add
lret
test
je
pushf
jne
daa
push
js
or
sbb
adc
enter
popf
pop
cmp
pop
sub
push
stos
mov
jmp
popf
xchg
lock
ja
xor
push
mov
jnp
adc
push
push
daa
push
in
fwait
sub
jg
lret
push
add
jb
mov
xchg
scas
or
inc
fmuls
pushf
xchg
movsb
cmp
add
push
fnstsw
rolb
out
add
jecxz
adc
fidivrs
dec
sub
aas
or
jo
test
daa
fmuls
in
test
fcoml
sbb
add
and
pop
fadds
das
mov
adc
lahf
add
pop
lods
xlat
jno
faddl
fdivs
mov
cltd
add
adc
dec
xor
add
inc
mov
mov
loopne
add
dec
fcompl
mov
neg
mov
mov
outsb
sbb
jo
cmp
jbe
insb
shl
jmp
lea
shl
jmp
jnp
xchg
fwait
je
push
imul
pop
or
mov
jl
sarb
jge
je
neg
pop
lret
lea
xchg
into
add
mov
adc
add
push
fcomp
fcoml
and
ret
repz
cmp
or
inc
shlb
das
inc
dec
mov
xchg
inc
mov
adc
in
adc
dec
pop
pop
xchg
fwait
daa
sbb
enter
cmp
ds
mov
cwtl
orl
ljmp
inc
mov
mov
test
xchg
push
xor
xchg
push
int
dec
mov
dec
mov
sbb
xchg
add
jno
jmp
dec
dec
cmp
jle
lods
mov
xchg
pop
inc
pop
scas
jmp
pop
out
pop
xchg
pop
aam
add
mov
add
daa
sbbb
add
imul
ljmp
sbb
push
inc
cmpsb
xor
mov
mov
cmc
ret
jo
xchg
ja
insl
mov
inc
jmp
dec
call
xor
add
pop
fldenv
dec
jg
pop
fucom
mov
push
mov
jo
push
clc
xor
xor
push
je
add
sahf
pop
shrl
test
or
ret
sarl
or
or
int
mul
sbb
sub
add
loope
rcrl
clc
aad
xor
cmp
lock
xchg
xor
pop
lea
aas
js
shl
add
add
je
call
lods
cmp
cmp
inc
add
xor
sub
xchg
addr16
pop
cmp
sbb
pop
sbb
jo
call
jne
cmp
mov
test
lock
in
xlat
jmp
adc
adc
and
dec
or
pop
pop
adc
les
pop
inc
and
inc
andw
out
or
sti
jne
push
push
sbb
mov
mov
pop
and
jnp
loope
test
testb
fsubrp
daa
movsb
fcomps
jne
inc
sbb
sbb
jbe
cmp
loopne
xchg
pop
cmp
inc
lods
pop
iret
aaa
test
lret
aam
xchg
inc
mov
arpl
popa
sbb
add
inc
aas
push
and
pop
or
sbb
or
pusha
mov
or
sub
xor
or
ficoms
mov
push
inc
pop
mov
cmp
loopne
xor
out
and
pop
push
lock
add
cmp
xor
clc
sbb
xor
loope
cmp
add
mov
mov
mov
add
add
out
or
mov
xor
sarb
pop
jmp
hlt
cmpl
mov
ret
xor
push
cmp
aas
cmpb
mov
sar
cmp
cmp
jmp
cmp
int
mov
and
fwait
pop
push
or
sub
jge
cmpl
orb
lds
mov
ljmp
sub
mov
add
mov
push
xchg
ds
rcl
and
insl
push
rol
push
popa
je
cmp
sarl
test
nop
xchg
mov
into
jle
and
add
or
test
inc
add
mov
or
ss
xor
clc
push
jg
pusha
sub
je
or
je
push
lock
loopne
scas
dec
cltd
lods
mov
filds
or
nop
fldpi
mov
mov
jmp
lods
inc
jne
mov
jmp
pop
jne
push
sbb
pop
add
mov
out
enter
or
lret
bound
jnp
cmp
ud2
es
inc
mulb
jnp
or
cmp
mov
adc
xor
mov
into
repnz
int3
mov
je
pop
xor
pop
addl
movsb
lods
adc
ret
pop
ja
int3
lret
jge
cmp
sbb
and
call
cwtl
mov
pop
add
sbb
or
jg
mov
mov
push
jle
mov
jae
mov
cmp
je
testb
and
mov
ret
jmp
mov
aaa
fdivr
pop
clc
push
shl
imul
cmp
cmp
out
pop
sbbb
xchg
mov
add
sub
or
adc
dec
jo
inc
pop
lds
add
incb
add
mov
add
jb
lea
fwait
sahf
mov
jb
jb
inc
mov
and
outsb
gs
adc
mov
or
inc
add
loope
or
sbb
add
add
xor
and
xchg
jl
pop
js
cmp
add
dec
mov
mov
das
jmp
pop
lea
cltd
rcr
insl
and
mov
stos
pop
test
je
or
jg
or
jmp
and
mov
adc
std
imul
dec
add
sbb
mov
or
daa
mov
dec
xchg
sbb
mov
xor
push
out
pop
movb
inc
mov
jae
mov
or
lods
pusha
test
aaa
adc
loopne
mov
adc
ljmp
inc
call
mov
xor
jp
shll
int
rclb
jmp
fwait
adc
mov
je
out
jle
scas
xor
jb
je
pop
mov
enter
sub
mov
push
insl
jge
fldl
and
js
cmp
in
push
push
adc
aam
test
movsl
out
icebp
insb
jno
mov
les
inc
adc
outsb
add
cmp
pop
arpl
stos
bound
or
testb
or
xchg
and
bound
sub
sub
dec
pop
mov
adc
adc
movb
cmpsl
adc
xchg
push
sub
outsl
dec
jae
cmpl
sub
popa
or
or
xchg
pop
sub
inc
jns
jecxz
jl
leave
inc
inc
repz
ljmp
ret
adcl
add
pop
mov
aad
add
cmp
shll
cwtl
imul
mov
push
pop
imul
loopne
inc
cmp
cmp
mov
lock
jmp
aas
lock
fwait
pop
or
pop
aad
sarb
les
and
mov
sub
jb
or
sbb
mov
sti
aad
push
mov
ret
ret
ja
jb
bswap
add
nop
dec
imul
and
leave
and
rolb
stos
ret
sub
inc
push
xchg
sub
sbb
jnp,pn
jl
cmp
sbb
in
and
mov
std
in
add
adc
adc
cs
adc
cmp
shrl
cmp
jmp
notl
fwait
mov
xor
adc
insb
pop
lgs
and
push
push
pushf
clc
popa
aaa
push
pop
add
xchg
add
scas
dec
sbb
fcompl
pop
or
adc
scas
and
push
inc
fcmovu
inc
mov
ret
pop
dec
icebp
xor
add
ret
fsubs
xor
inc
or
mov
icebp
xor
stos
jg
push
inc
pop
mov
sub
xchg
gs
mov
dec
inc
jle
mov
adc
push
sub
push
enter
pushf
or
imul
cmp
jno
incl
jg
es
sbb
add
jecxz
sub
lock
add
pushl
dec
cmp
icebp
dec
pop
repz
sub
test
jg
and
scas
jp
cmpsb
mov
sbb
or
mov
pop
cmp
sbb
pop
and
nop
imul
sbb
jnp,pn
push
ss
out
cld
pop
jecxz
movsb
mov
arpl
lcall
and
dec
jmp
pop
mov
pusha
pop
inc
or
dec
insl
mov
lock
jae
xchg
mov
mov
inc
bound
or
ret
or
idivb
inc
lret
ret
lea
and
pop
insl
int3
cmp
fwait
aaa
add
xchg
add
mov
fisubs
inc
mov
pop
fcompl
xor
dec
sbb
repz
dec
aas
add
push
jmp
mov
sbbb
mov
adcl
dec
pop
add
loope
rolb
popl
clc
sahf
test
ja
mov
pop
inc
dec
in
mov
test
xor
sub
or
arpl
cmp
push
cmpl
adcl
mov
lock
pop
xchg
inc
ret
adc
cmp
mov
sbb
orl
add
orl
aad
lock
inc
or
pop
je
sbb
outsb
cld
push
adc
andb
andl
andb
es
pop
mov
sahf
inc
inc
pop
push
and
sbb
add
dec
loope
mov
xor
das
sub
movsl
das
aas
pop
pop
cld
mov
mov
cmpsl
inc
adc
xor
and
and
ret
mov
inc
leave
mov
nop
cmp
call
dec
pop
icebp
add
out
jge
and
add
add
mov
imul
inc
ljmp
cmp
ja
cld
ds
out
movsl
xchg
lea
ja
dec
or
shl
stos
lea
je
mov
lods
jno
add
and
ja
or
sub
lods
or
cmpsb
daa
jbe
inc
inc
scas
dec
hlt
daa
rorb
cld
add
rcrl
cmp
or
loopne
mov
xorl
xor
movsl
movsl
pop
mov
cmpb
bound
mov
scas
push
inc
insl
cmp
jae
pop
imul
and
rcll
fwait
stos
add
dec
add
pusha
xor
sub
cmpsl
xchg
and
xchg
push
mov
pop
or
sub
cmp
lods
cld
jne
jb
movsb
sbb
sub
jg
mov
mov
dec
out
pusha
cmp
adc
xchg
jns
or
push
fsts
andb
fldcw
int3
das
mov
test
lods
or
add
add
adc
loope
rcrb
cli
pop
add
inc
repnz
mov
shll
fwait
scas
sbb
aas
lahf
add
mov
stos
rep
inc
test
mov
inc
sar
andl
mov
loop
test
and
imul
std
cmp
leave
sub
mov
imul
pop
scas
inc
in
imul
lea
gs
cmc
repnz
jle
mov
jmp
xor
mov
jmp
andb
loope
add
xor
push
out
sbb
push
xchg
lock
and
jb
arpl
das
mov
jmp
dec
orb
mov
enter
leave
push
push
mov
add
outsl
sub
loope
dec
push
jne
notl
cmp
dec
xchg
arpl
push
cmpb
imul
decb
testb
inc
inc
xor
sub
inc
adc
adc
shrd
jmp
andb
cld
push
lock
dec
sbbl
xchg
sub
mov
shrl
mov
mov
add
outsl
imul
pslld
inc
xor
or
jmp
pop
ljmp
sbb
or
pop
ljmp
and
lret
mov
and
push
inc
mov
adc
mov
mov
sbb
xchg
das
or
scas
mov
pop
mov
test
sub
movsb
fildl
xchg
je
movsb
fsubrs
call
je
fprem1
addr16
sub
cli
xchg
pop
mov
ret
je
das
cmp
jae
cmpb
jne
cmovb
sub
subb
add
mov
and
add
pushf
lret
pop
outsb
test
es
mov
sub
add
jle
shrb
pusha
and
xor
sbb
inc
xchg
addb
pop
jae
add
fdivr
pop
xor
inc
or
arpl
imul
mov
or
test
add
loopne
int3
mov
sbb
enter
or
xchg
rorl
out
lods
xchg
mov
push
and
scas
test
clc
sti
add
or
mov
into
imulb
sarb
mov
mov
jl
push
cmp
sarl
add
push
cmp
jge
lea
sub
or
out
pop
faddp
or
jne
mov
movsb
cmp
fcoml
cmp
stc
sbb
dec
cmp
xchg
test
cmp
lahf
andb
xor
cmpsb
call
pop
loope
sbbb
mov
jmp
push
sub
push
hlt
push
and
sbb
call
mov
xchg
cmpsb
pop
sbbl
push
iret
jbe
adc
je
and
jmp
or
add
adc
lea
pop
pop
pop
cmpsb
cmpsb
mov
je
aaa
xor
xchg
loope
ret
test
jo
loopne
jno
mov
push
notl
mov
out
out
neg
sub
inc
or
jbe
inc
sbb
ja
imul
push
jmp
lods
push
mov
mov
test
mov
inc
xor
dec
cmp
je
cmp
je
inc
cmp
pop
sbb
cwtl
lock
or
sbb
cmp
cmp
andb
add
pop
jecxz
lock
roll
aas
xchg
and
lods
xchg
jg
pop
sbb
outsl
jne
pop
decl
sbb
rol
jecxz
push
pop
push
push
mov
sbbb
dec
cmpb
jecxz
jo
iret
mov
loopne
loopne
sub
sbb
mov
and
pop
hlt
pop
xchg
cmpsl
imul
mov
outsb
insb
pop
dec
dec
xchg
imul
push
inc
insb
dec
mov
cmp
leave
or
mov
imul
leave
aam
ret
mov
mov
pop
lds
and
aaa
inc
mov
inc
cmp
loope
les
jecxz
adc
jnp
lahf
push
mov
mov
inc
inc
pop
cmpsl
push
jbe
aad
into
sbb
cmp
cmpb
inc
cmp
loope
stc
mov
testb
imul
je
or
or
popa
loope
addr16
xchg
jmpw
ja
dec
sub
loopne
push
cwtl
cltd
mov
enter
adc
push
adc
fs
fs
or
xor
and
adcl
mov
push
fildl
xchg
rorb
sbb
aas
ret
outsl
sbb
sete
or
jmp
rorl
push
aas
js
push
inc
adc
push
pop
inc
arpl
or
jns
dec
dec
cmpb
mov
add
jmp
cs
sbb
xchg
ss
aas
aaa
jno
add
add
mov
popa
mov
and
loopne
lea
add
mov
push
or
cmp
adc
or
icebp
les
push
push
sarl
inc
fldcw
aaa
add
lcall
xchg
dec
ret
dec
aaa
cmp
out
fistpll
and
repnz
ja
es
sub
clc
sbb
loopne
mov
jmp
jmp
xor
fimuls
push
and
addr16
adc
dec
inc
jo
pushf
push
inc
dec
dec
inc
mov
xchg
push
pop
xlat
orb
or
cmp
mov
stos
div
push
arpl
idiv
or
sub
inc
aad
popf
xchg
test
mov
imul
or
or
mov
test
cmp
dec
pusha
in
inc
sahf
data16
or
sbb
ret
test
dec
and
out
and
dec
push
cmp
jae
sbb
pop
in
add
movb
mov
sbb
loop
ret
push
lods
lds
dec
push
test
hlt
push
ljmp
xchg
lea
testb
and
lock
imulb
add
pop
lcall
std
shll
pusha
or
data16
jne
minps
mov
sub
xchg
jl
xchg
adc
loopne,pn
adc
inc
mov
in
sbb
hlt
mov
into
add
stos
mov
fstps
sti
push
fs
iret
mov
or
mov
dec
add
inc
add
and
sbb
fdivr
lea
jne
test
add
mov
negb
ret
dec
ss
fimull
shl
xor
mov
test
push
int
int3
mov
sbb
pop
mov
ud0
jne
or
outsl
or
jl
add
cmp
insl
cmp
loop
adc
inc
ret
push
inc
xor
pop
inc
xor
cmp
pop
xchg
xchg
sarb
push
testl
and
sahf
adc
mov
rol
in
jae
or
out
decl
pop
sbb
lea
call
mov
pop
orb
xor
dec
in
sub
pop
jnp
add
push
sbb
shrb
pop
loop
mov
cmp
pusha
xor
xor
jmp
in
fwait
jmp
mov
jg
rolb
pop
sub
out
xor
mov
mov
push
pop
sbb
leave
insl
cmp
mov
or
adc
in
in
scas
fbld
push
adc
mov
pop
jnp
sub
pop
sbbb
movsb
cltd
lock
jp
fstpt
mov
mov
and
or
xchg
or
jo
dec
sbb
fsts
rclb
loopne
and
add
ljmp
mov
das
or
dec
pop
outsb
jmp
and
sbb
lret
and
cmp
sub
popa
jmp
leave
sbb
clc
push
outsl
test
adc
inc
xchg
dec
cmp
insl
andb
nop
popa
dec
mov
dec
sarb
adc
in
pop
jmp
aas
lea
or
popa
cmpsb
sbb
push
pop
ja
rcrb
jne
mov
and
adc
add
adc
adc
cmpsb
das
xchg
jo
cmp
fs
and
push
fistpl
lods
or
mov
xor
push
cmp
pop
add
lahf
push
out
popl
or
push
or
push
sub
les
add
pop
pop
clc
imul
xor
fstps
orl
xor
pop
adcl
or
and
fwait
push
adc
mov
jmp
js
ds
mov
add
cmp
adc
lcall
jmp
or
jmp
or
dec
mov
nop
idivl
int
or
add
insl
pop
pop
test
pop
mov
and
push
inc
ja
hlt
xor
outsb
xchg
ss
add
add
test
sbb
lret
mov
jl
popa
sbb
into
mov
sti
lea
or
or
or
add
xor
or
dec
sbb
pop
clc
cmpsl
or
add
adc
or
jbe
xchg
push
ret
mov
sub
or
shl
not
test
jne
inc
push
jge
icebp
mov
insb
add
and
dec
fsubr
mov
out
xchg
mov
pushf
cltd
adc
cmp
sub
add
push
mov
and
scas
dec
js
ss
sbb
in
add
sub
loope
out
xor
test
in
mov
mov
pop
mov
add
ret
pop
cltd
xor
xchg
es
add
mov
cmp
sub
pop
test
jge
pop
mov
mov
push
pusha
lds
xchg
dec
cld
push
dec
lret
and
dec
fnstcw
adc
inc
cmp
repnz
enter
shll
cmpsb
sbb
hlt
and
lock
leave
ret
xchg
sbbb
dec
or
imul
shl
cli
jge
pop
inc
cltd
push
or
popfw
or
inc
cwtl
or
push
mov
sub
not
arpl
and
mov
and
or
push
mov
fidivl
movsl
pop
cmp
hlt
push
pop
mov
jge
sub
and
jb
jb
cli
add
mov
jae
or
add
dec
jecxz
push
imul
dec
or
xchg
dec
push
or
mov
shrb
add
sub
xchg
fdivl
and
add
inc
and
ljmp
mov
cmp
and
mov
sub
pushf
pushl
cmp
lret
add
add
fstpt
xchg
fcmovbe
xchg
loope
jge
cmp
fdivrs
sub
push
das
pushf
adc
sub
sbb
fiadds
orl
jl
xor
cmc
shlb
mov
and
mov
add
inc
push
mov
cmp
andb
inc
add
inc
lds
adc
jg
daa
hlt
adc
movsl
and
fcomi
loope
pop
or
or
incl
mov
outsb
fldcw
lcall
jne
and
hlt
rorb
dec
aad
iret
pop
mov
sub
and
sbb
test
cmp
rcrb
xlat
sbb
add
xor
in
movsb
xchg
sahf
jge
cli
jmp
cmpsl
jle
movb
test
mov
jle
mov
mov
xchg
rolb
pop
mov
inc
mov
jmp
adc
scas
or
or
das
jmp
jnp
sub
incl
shll
push
insl
orb
xor
push
mov
or
movsl
cmp
mov
lock
mov
cmp
sub
movsl
movsl
test
pop
add
and
fistl
mov
mov
jle
mov
or
test
dec
push
mov
add
push
mov
cmpsb
inc
inc
pushf
shl
iret
inc
sub
rcll
fnstenv
pop
add
ds
setl
js
dec
dec
mov
inc
mov
and
jne
cmp
loope
xor
adc
inc
gs
dec
add
adc
enter
data16
pop
loop
pop
xchg
into
jge
call
adc
leave
mov
shr
or
lea
mov
fcomi
dec
dec
loopne
jmp
and
iret
cltd
xor
call
xchg
test
cmp
push
add
sbb
mov
add
lds
cwtl
icebp
push
loop
mov
or
push
adc
mov
repnz
mov
ret
push
or
popa
je
or
inc
dec
jmp
or
inc
adc
and
jl
das
and
andl
add
push
add
and
sub
aaa
mov
lock
lods
or
mov
and
pop
pop
jbe
sbb
adc
jne
mov
jmp
cmp
jge
mov
shlb
es
mov
adc
and
pop
in
shlb
fistpl
xorb
jnp
mov
sub
fnstcw
mov
mov
ret
inc
lea
movsb
push
out
lock
mov
or
popa
and
call
push
aam
push
cmpb
shlb
mov
push
aam
xchg
inc
push
sub
insb
lcallw
popf
test
xorl
xchg
ret
and
inc
push
push
mov
add
xchg
or
push
movsb
or
shrl
mov
mov
icebp
adc
adcb
cmpsl
ret
and
movsb
xchg
sbb
pop
shl
adc
sbb
data16
sbb
cwtl
loope
push
arpl
rorb
outsl
jle
ljmp
popa
loopne
fadds
add
rcl
addl
das
pop
jne
inc
inc
loopne
push
jb
cmp
jne
add
xchg
fldl
push
js
jge
test
lret
sbb
imul
mov
jo
out
mov
cmp
jae
or
ret
scas
jae
movsl
ret
inc
rol
and
shl
add
bound
jg
pop
mov
cli
inc
push
aad
jg
sub
insl
stc
xor
dec
pop
adc
aas
cmpb
mov
or
in
adc
mov
notb
pushl
fs
mov
and
mov
ret
and
add
out
or
inc
xchg
loope
sub
nop
cld
sbb
mov
dec
sahf
scas
test
push
loope
add
adc
xchg
arpl
inc
data16
xor
ja
push
mov
cmpsb
and
and
add
inc
scas
push
data16
mov
xchg
pop
sbb
push
pop
push
and
sbb
icebp
xchg
sbb
adc
sub
cmp
or
pop
fsub
cmp
imul
fstpt
and
mov
mov
movsb
cmp
fs
and
dec
int3
push
and
dec
lahf
test
idivb
movsl
add
ret
scas
hlt
dec
loop
test
or
icebp
and
add
jo
push
cmp
xor
xor
pop
jmp
inc
cltd
and
lea
mov
mov
test
cmp
pop
push
adc
jmp
shl
fbstp
xchg
xchg
and
inc
loopne
dec
push
jae
jge
push
call
pop
ss
aaa
test
outsb
adc
or
xchg
fistpll
fists
hlt
jmp
or
jmp
testb
pop
mov
pop
mov
sbb
cmp
dec
scas
pop
cmp
push
popf
cmp
or
inc
pop
sti
and
inc
lret
mov
pop
jns
in
stos
sub
repz
dec
push
push
adc
mov
xor
shlb
sub
pop
lock
and
rcll
roll
add
jge
cmp
dec
shl
pop
jge
pop
and
notw
scas
mov
pop
mov
pop
movsb
cmpsb
aad
scas
nop
icebp
bound
test
push
scas
mov
jp
in
je
movb
pop
andb
adc
pop
imul
lds
cmp
sub
incl
or
mov
sub
jl
push
sbb
mov
adc
fiadds
inc
jmp
sbbb
je
or
je
xor
mov
jne
adc
add
or
sub
mov
inc
pop
sbb
mov
je
pop
jge
add
cmp
out
sbb
cmp
mov
adc
clc
aaa
adc
nop
imul
add
rcll
mov
lods
sub
xchg
jno
pop
cmp
mov
inc
je
mov
or
insl
shrb
fdivp
jp
or
test
sahf
mov
loop
div
or
mov
add
pop
push
stos
mov
iret
jne
sub
sbb
and
push
aad
ret
mov
dec
test
jne
cmpsl
orl
fadds
adc
lret
or
outsl
inc
cld
test
pop
ret
dec
repz
mov
or
in
mov
repz
in
dec
out
add
js
enter
je
icebp
add
push
push
pushw
test
dec
or
aas
insl
adc
ret
adc
push
lock
je
fwait
jge
sbb
sbb
push
js
sub
sti
xchg
adc
push
adc
rcrb
mov
clc
cmp
int3
repz
mov
sbb
dec
xor
test
repnz
mov
incl
xor
add
rolb
push
mulb
sub
movsb
inc
or
mov
sbb
push
mov
push
sub
add
adc
cmp
jle
pop
mov
test
icebp
imul
dec
daa
inc
lcall
mov
mov
rorl
inc
adc
jle
shlb
cmpb
mov
mov
hlt
push
push
cmc
shrb
pop
xor
add
push
pop
sub
jmp
add
mov
cmp
and
jl
nop
pop
cmp
xorl
int
nop
orl
repnz
xor
xor
sub
arpl
push
ja
and
or
xor
ret
mov
or
push
pop
mov
push
adc
pop
mov
xchg
dec
jmp
les
out
in
mov
in
inc
pop
xchg
xor
mov
les
cmp
dec
push
jg
insb
jg
aas
dec
cmp
jl
cmp
jg
inc
jmp
popa
cmp
inc
pop
ss
xor
pop
push
adcl
mov
push
jp
fldenv
inc
mov
and
jb
xlat
add
or
cmp
popa
mov
mov
pop
or
sbb
cmp
idivl
std
add
mov
cmpsb
push
iret
and
xor
movsb
push
mov
pop
mov
adc
in
fsubs
push
sub
mov
movsb
and
mov
and
dec
mov
jne
adc
xor
notb
push
push
popf
mov
jmp
cmp
push
jmp
outsl
fcompl
icebp
inc
sbb
ret
mov
sti
and
push
xchg
xchg
and
ljmp
fimull
cmp
jge
cmp
jl
out
mov
push
lret
enter
ret
adc
and
jle
push
xchg
sarb
xchg
push
xchg
rdpmc
leave
xlat
out
adc
rcrl
mov
out
lgdtl
push
pop
xor
mov
mov
andl
sti
mov
pop
xchg
or
inc
mov
add
mov
sar
stc
push
add
lea
push
and
cltd
notl
push
sbb
push
jge
loopne
pop
sub
add
pop
stc
jmp
clc
sbb
sbb
push
add
xchg
ret
fidivrs
mov
push
psubsb
into
jle
sub
jmp
adc
or
adc
js
dec
les
or
fcomi
adc
inc
add
sub
sub
pop
xchg
fsincos
adc
mov
lods
or
ret
jns
add
test
sbb
adc
dec
push
insl
inc
and
xchg
push
mov
jno
mov
movzbl
or
xchg
test
sbb
push
hlt
add
gs
loope
outsl
cmp
inc
cmpsb
test
icebp
and
inc
inc
insl
jmp
and
roll
rorb
loopne
addr16
push
dec
jb
mov
mov
ljmp
mov
mov
mov
dec
sbb
shlb
icebp
mov
outsl
and
dec
cmp
lea
insl
test
clc
call
xor
jno
into
jae
jp
add
or
push
movsb
adc
lds
repnz
daa
sub
aaa
cmp
lcall
out
das
or
sbb
sub
jmp
jecxz
or
rorb
into
add
sbb
xor
shr
or
mov
mov
shr
shll
sbb
jecxz
mov
cmp
or
mov
outsl
mov
sbb
shl
shr
or
push
aas
mov
fcoml
js
int3
xor
mov
lds
jp
pop
adc
jbe
test
repz
movsl
movsl
push
ss
xchg
pop
jo
cs
or
pusha
shrl
sbb
adc
mov
add
inc
and
mov
mov
rolb
jne
jg
shll
xor
mov
or
out
dec
adc
call
std
add
sarl
pop
jae
adc
cmp
pop
add
iret
shr
jmp
cld
pop
data16
das
xor
and
pop
gs
movsb
hlt
add
inc
pop
rcrb
andb
cld
test
sbb
mov
addb
cmpsb
add
adc
mov
dec
dec
or
or
jne
out
pop
std
dec
std
iret
in
clc
or
xchg
ss
lret
inc
decb
jl
cmp
push
das
xchg
hlt
add
cmc
sbb
push
inc
mov
fsubr
mov
jbe
mov
push
mov
cmpsl
push
test
rcrb
adc
pop
lahf
jl
mov
in
insb
push
into
mov
or
push
fs
jle
inc
jle
jle
arpl
mov
jp
jg
dec
push
movd
dec
or
add
pop
data16
scas
pop
push
lcall
push
ret
cmpsl
cli
cmp
jbe
dec
jmp
jmp
lret
sbb
and
stos
inc
leave
icebp
orl
push
aam
mov
popa
fsubs
outsb
push
jmp
adc
xor
mov
mov
pop
jne
in
sbbb
or
repz
adc
jnp
add
mov
add
adcb
into
xor
lods
test
push
lea
lcall
inc
je
imul
xorl
dec
gs
clc
pusha
mov
fs
jmp
aas
pop
inc
push
or
pop
dec
adc
fnstenv
mov
mov
fdivs
mov
cmpsl
gs
xchg
pop
pop
pop
dec
pop
jmp
xchg
and
enter
and
lock
mov
inc
rolb
jg
mov
mov
push
dec
xchg
sub
or
outsl
rorb
mov
into
inc
add
push
pop
pushl
cld
jbe
cmpb
jl
incb
add
pop
jp
dec
inc
dec
adc
inc
jmp
pop
scas
ficomps
sbb
mov
push
scas
or
push
insb
sub
mov
cmp
xorl
enter
loope
jge
add
loopne
pop
xchg
mov
fsubrl
inc
sbb
cmpb
add
loope
lret
pop
movsb
add
cmp
xor
mov
push
jp
icebp
push
and
mov
clc
ljmp
scas
imul
lret
jno
enter
shr
stos
adc
call
mov
or
pop
mov
mov
push
lock
inc
or
adc
jle
xchg
mov
jne
enter
pop
ss
mov
pusha
leave
xchg
loopne
sub
mov
push
cld
add
test
mov
lcall
lcall
in
out
imul
and
mov
sti
out
aas
fcomps
filds
sub
push
cs
mov
sbb
adc
xor
xorl
xor
mov
mov
loope
mov
add
xor
or
cld
shll
ret
pop
aad
inc
sub
lods
xchg
mov
pop
jnp
es
inc
jne
push
and
mov
mov
lea
lods
addl
rol
add
movzwl
iret
inc
jmp
push
rclb
shr
or
lcall
sahf
jne
or
mov
dec
mov
lea
inc
popa
add
repnz
shlb
orl
push
inc
xor
mov
test
add
jne
add
ret
xchg
sbb
or
push
icebp
jmp
mov
xor
loope
sbb
mov
pop
or
xchg
sbb
jne
popf
pop
neg
sarb
cmp
pop
dec
xor
pop
aas
mov
mov
push
jge
sarb
lea
and
ret
xchg
sti
mov
dec
sbbb
sub
pop
pop
mov
decl
cli
ja
out
mov
jne
fisttpll
mov
lea
jl
and
mov
add
push
dec
jmp
mov
inc
lcallw
add
ret
sub
mov
aas
andb
mov
or
lods
pop
hlt
fnstcw
clc
mov
add
andb
rcrl
jo
insb
xor
push
xchg
roll
inc
je
sarb
rclb
adc
jecxz
pop
sbb
loopne
mov
cmp
sti
push
xchg
les
mov
int3
sbb
mov
out
lea
orl
or
dec
add
sbb
or
mov
mov
or
sbb
push
and
or
xlat
sbb
adc
mov
sahf
arpl
xchg
sub
call
or
lea
adc
ja
std
cmp
add
testl
cmp
push
fdivl
dec
mov
pop
out
adc
or
dec
xor
mov
pushf
les
loop
and
cmp
hlt
dec
add
les
mov
or
lock
ja
mov
or
sub
sbb
sahf
and
mov
enter
fnstenv
xor
jns
push
bound
push
mov
out
rcrl
mov
testb
xchg
sahf
std
dec
loopne
add
pushl
movsb
scas
mov
loop
mov
mov
dec
mov
cmp
lar
cmpsb
xchg
subl
mov
add
sbbl
jmp
sub
push
fimull
adc
sbb
bnd
pusha
jo
loopne
pop
add
movsl
or
jge
push
lea
adc
pop
lahf
xchg
sbb
xlat
adcl
or
aaa
or
in
lods
sbb
and
lods
cltd
and
lods
cmp
ljmp
lods
adc
nop
push
lock
mov
loope
xor
xchg
pop
ja
je
dec
or
sbb
pop
aad
inc
lea
xor
mov
sub
jle
bound
pop
and
movsb
xor
mov
dec
lds
outsb
jno
shlw
xor
xchg
popf
add
jge
test
mov
xor
das
push
lcall
clc
pop
loope
stc
mov
ret
and
or
shll
iret
add
aad
cld
xchg
xlat
or
jg
lods
cli
std
mov
push
inc
lahf
mov
sbb
pop
sbb
jg
icebp
jge
push
or
cmp
jne
cmp
cmp
fsubrl
ret
cli
div
cmp
push
cmp
adc
add
and
call
dec
fsts
loope,pn
mov
mov
add
adc
pop
dec
jle
add
lea
fdivrl
hlt
add
adc
adc
sub
add
sub
enter
lods
push
call
incl
cwtl
or
adc
ljmp
call
adc
or
jg
loopne
aam
orl
push
inc
sbbl
inc
out
mov
mov
cmp
or
mov
gs
movswl
out
lret
jnp
add
movl
insb
aaa
mov
negl
faddl
imull
sbb
xor
inc
imul
loop
ret
loop,pn
push
out
or
add
in
out
movsl
xchg
stos
icebp
inc
mov
nop
fimuls
ret
mov
sbb
pop
fiadds
mov
pcmpeqw
or
push
sbb
mov
xor
mov
add
add
lds
sbb
and
cmp
frstor
jge
mov
sti
je,pt
loop
and
loopne
or
pushf
inc
les
ret
push
test
jle
add
lea
out
jge
cmpl
jb
lea
movsl
add
testb
dec
add
test
cli
inc
pop
xchg
mov
incl
jne
push
mov
mov
lock
aaa
cmpsb
mov
add
cmpl
lea
push
add
mov
xadd
pushf
test
fistpl
push
mov
enter
add
ret
xorl
in
adc
imul
mov
popf
stos
pop
lock
call
jne
addl
jo
sbb
mov
mov
roll
xchg
xchg
ds
das
cmp
stos
pushf
ss
inc
xchg
dec
add
or
dec
or
lcall
test
and
cmc
daa
lea
xchg
fmuls
pop
add
jne
push
mov
or
mov
cmp
in
cmpsl
inc
add
or
out
pusha
jb
inc
scas
jne
dec
inc
popf
dec
sbb
mov
mov
push
push
inc
test
xor
or
sbb
fcom
sbb
xchg
add
xchg
mov
enter
add
addr16
ret
leave
or
cwtl
add
mov
movd
and
fbstp
jg
jecxz
push
dec
xor
gs
sti
cltd
sub
mov
lret
lret
mov
mov
mov
xchg
daa
ret
add
lret
movl
movsl
movsl
xchg
inc
popw
jp
popa
movsl
popf
and
xchg
xchg
sbb
jbe
jle
loop
jne
nop
pop
leave
xor
jo
insb
iret
fs
adc
add
pop
push
and
and
popf
pop
andb
divb
dec
add
fildl
jecxz
out
movsb
xchg
popa
cmp
xchg
jg
fstl
fldl
and
loopne
and
adc
xchg
shlb
les
push
sub
push
jb
ret
mov
adc
jmp
sbb
mov
insl
inc
and
cltd
or
ret
and
sti
and
pop
addr16
mov
frstor
mov
xor
ret
sbb
cmp
dec
call
xor
test
add
jno
repnz
in
fisttps
xor
mov
dec
ds
lock
mov
inc
sub
jg
ds
xor
xor
lea
pop
cmpl
mov
mov
test
and
lock
dec
loope
sbb
cmp
xor
movb
xor
jp
scas
fcmove
lea
jae
fists
dec
push
or
rorl
clc
andl
popa
mov
or
mov
and
pusha
in
pop
sub
call
jo
pop
pop
filds
fistpl
fcomi
roll
leave
les
fadds
add
cs
popa
outsl
and
sub
imul
subl
cmp
pop
xlat
int
add
jbe
clc
add
pop
add
adc
mov
ret
xor
add
inc
adc
rorl
pop
add
sbb
jmp
call
mov
mov
dec
fbld
adc
xor
mov
jmp
vmaxps
rorb
out
addb
pop
add
fists
cmp
shlb
xchg
lds
aaa
shlb
ret
jnp
jmp
and
cmp
test
jg
or
jmp
jl
cmp
fnstsw
es
sub
add
push
sbb
rcrl
push
xor
xchg
mov
or
inc
dec
insb
int3
add
and
push
pop
cmp
decl
cmp
ja
or
int
mov
and
cmp
cmp
clc
ja
and
inc
inc
callw
cmp
je
jmp
sub
shlb
push
push
inc
mov
mov
mov
sbb
inc
push
inc
pop
pop
out
pusha
icebp
push
dec
pop
faddl
enter
test
les
ror
cmp
loop
cmp
ror
adc
xlat
out
insb
ss
repz
out
adc
xor
inc
push
push
fxch
es
mov
cs
xchg
push
pop
or
flds
imul
mov
dec
cld
inc
repnz
loopne
idivb
xor
push
fsts
mov
enter
push
push
push
push
mov
shll
testb
add
pop
sti
lods
dec
fwait
pop
sarb
push
jno
xor
std
or
jge
xor
in
or
test
dec
loope
cltd
lods
in
mov
loopne
lods
movsb
mov
je
mov
mov
aam
xchg
or
sarb
gs
fidivl
fidivs
push
stos
mov
push
mov
mov
test
fistps
sbb
mov
cmp
popa
cmc
cmp
test
xchg
pop
faddl
add
in
gs
fs
enter
lds
xchg
lods
pop
pop
inc
mov
mov
mov
je
inc
popa
or
push
jo
xchg
push
push
adc
and
push
cld
push
pop
sarl
cmc
popf
or
gs
or
sbb
dec
ljmp
and
pop
cmp
adc
add
rclb
sbb
shrl
dec
mov
sbb
sbb
adc
pop
sbb
xor
push
push
faddl
lea
lret
jge
push
add
aam
int3
jnp
push
aad
subl
test
roll
cld
lea
mov
or
mov
bound
arpl
pop
inc
iret
shl
insl
push
jnp
insl
and
adc
sarb
sbb
test
and
or
lahf
loopne
xor
sbb
out
enter
sbb
clc
sub
jo
or
sub
mov
addr16
sub
push
adc
in
lods
mov
mov
fwait
lods
dec
repnz
dec
mov
dec
daa
lock
inc
push
mov
insb
nop
add
sbb
add
inc
aam
inc
adc
call
das
and
push
push
das
xor
xor
je
and
jae
jne
push
popa
je
outsl
outsb
cmp
dec
outsl
testb
sbb
add
js
repz
mov
push
add
aas
ljmp
pop
cmc
aas
jmp
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
push
movsb
mov
aad
mov
rclb
mov
sub
call
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
inc
test
adcl
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
lcall
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
pushl
aam
call
xor
add
mov
push
loope
or
insl
or
incl
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
std
call
sti
pop
popa
mov
into
cmp
mov
inc
movsl
fisttps
xchg
fdivr
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pushl
pop
dec
or
cmp
add
daa
adc
or
and
test
jmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
aas
dec
ljmp
cmp
lods
insb
mov
mov
lcall
call
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
lcall
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
call
dec
fisttpll
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
push
dec
add
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
jmp
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
call
push
pop
cmpsl
call
ret
shlb
sbb
ret
es
lcall
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
sti
dec
jo
lret
pop
or
adc
sahf
gs
lcall
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
jmp
lds
mov
jmp
mov
mov
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
sti
push
aas
js
inc
add
xor
loopne
std
das
aas
jmp
fcmovnb
outsb
and
popf
insb
outsl
fbstp
jge
add
push
add
pop
add
in
cmpsl
addr16
in
pop
jbe
imul
jo
imul
xlat
lock
xor
add
loope
pop
mov
outsb
and
arpl
fidivl
js
fiadds
push
mov
dec
add
pop
pop
pop
jns
push
xor
add
cmp
cli
insl
outsl
fs
push
cmp
je
arpl
jae
insl
aas
mov
data16
ret
outsl
jb
imul
popa
arpl
iret
mov
sub
paddsb
xchg
pop
inc
push
dec
addr16
iret
out
push
jbe
insb
outsl
xor
add
pop
pop
ja
add
sarb
fadds
inc
inc
inc
dec
jae
jb
adc
and
pop
jl
js
jne
pop
sbb
or
push
in
stc
sti
dec
inc
dec
xor
scas
sub
xor
xorl
xchg
pop
imul
push
dec
cmpl
in
leave
mov
out
jp
mov
pop
or
push
das
adc
add
push
add
adc
clts
add
add
add
xor
sub
push
pop
pop
or
aaa
dec
aas
repz
push
push
pop
push
and
add
pusha
push
js
jbe
insl
add
pop
sub
add
sbb
loope
sub
movsl
jne
add
out
outsb
jne
jecxz
fldt
pop
mov
addr16
push
ds
inc
push
jb
inc
imul
jb
jb
push
dec
dec
cmp
sbb
push
dec
dec
inc
sbb
add
inc
and
xor
adc
mov
lock
mov
jo
dec
aaa
mov
je
je
or
push
in
cmp
lret
ja
jno
mov
mov
jns
je
xor
out
call
jne
addr16
arpl
nop
xchg
sbb
mov
cmpsb
pop
push
icebp
mov
dec
sbb
les
into
mov
arpl
cmpl
xor
inc
out
mov
jge
jmp
jb
mov
or
das
rcrl
pop
add
mov
jo
addr16
insl
inc
xchg
insl
mov
xor
lahf
xor
xor
push
insl
sahf
pop
push
and
push
enter
addr16
stos
cmpb
fdivrl
in
and
and
cld
push
out
jo
pop
shll
push
imul
inc
sub
and
dec
imul
in
dec
or
inc
sbb
and
in
cs
add
int
ss
dec
jne
ds
xchg
xor
push
push
cld
pop
aas
js
dec
test
or
inc
jb
push
std
sub
xchg
movsbl
out
jecxz
xchg
or
dec
add
fbstp
xor
jbe
aas
xchg
push
pop
pop
inc
gs
stos
jecxz
je
popa
or
add
jne
daa
pop
push
shll
pop
mov
addr16
outsl
sahf
xor
push
dec
inc
dec
add
outsl
push
dec
dec
inc
add
sarb
push
ds
cmp
push
cmpsl
stos
pop
sahf
pop
push
repz
fnsave
je
rcrl
loopne
leave
jbe
add
stos
out
jo
add
nop
add
popa
inc
jg
push
adc
mov
fcmovb
lahf
pop
daa
xchg
inc
cmp
shll
outsl
jo
add
xor
mov
enter
and
xchg
mov
add
pop
mov
daa
sbb
inc
repnz
mov
push
ret
inc
mov
cmp
pop
dec
loope
inc
push
pop
loopne
sbb
js
push
filds
push
pop
push
and
loopne
pop
cmp
movsb
pop
inc
ja
fwait
mov
pop
jo
sbb
das
mov
or
aas
add
mov
dec
pop
mov
loope
shlb
call
adc
add
pusha
pop
xor
sbb
inc
sbb
pop
xor
push
ss
dec
aam
or
add
in
mov
xor
loopne
test
outsl
shlb
and
adc
cld
cmp
or
adcl
stos
mov
aad
xchg
jle
push
and
ss
jb
adc
add
mov
das
fisttpl
mov
ljmp
nop
inc
add
add
inc
aam
sub
and
insb
sub
dec
push
dec
inc
jb
iret
or
aaa
adc
add
and
push
fstpl
call
push
dec
and
dec
inc
push
inc
dec
and
dec
inc
dec
dec
add
adc
lock
incl
imul
jne
sbb
dec
dec
inc
xor
repnz
pop
xor
xor
and
fs
fisubs
xor
sbb
or
add
or
lret
jg
mov
dec
inc
and
inc
inc
inc
inc
pusha
in
mov
or
inc
inc
inc
add
push
add
cmpsl
inc
inc
inc
imul
dec
dec
dec
dec
cmp
push
push
push
push
push
jg
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pushf
incl
xor
sub
js
and
call
aas
mov
push
call
mov
jecxz
imul
lret
sub
pop
push
repnz
aas
cli
xchg
inc
call
xor
fildl
mov
adc
xorb
push
add
jns
pusha
rol
lcall
pusha
call
pop
jl
inc
cmp
inc
jmp
sub
arpl
inc
inc
jmp
jmp
std
mov
shlb
mov
lds
add
push
scas
je
inc
jmp
mov
popl
pop
popa
ret
pusha
mov
add
pop
add
js
mov
mov
stc
cmp
lahf
or
clc
mov
cmp
aas
test
mov
testb
add
std
jge
mov
mov
push
adc
es
push
mov
adc
mov
xchg
popl
and
filds
sbb
cltd
movb
add
xor
sub
lods
sbb
call
pop
ror
add
mov
pop
fisubrs
jne
inc
and
mov
adc
push
call
xchg
ret
jmp
sbb
sahf
add
fidivrs
int
in
pop
cs
lods
test
lret
enter
jecxz
adc
arpl
xorl
mov
fs
pop
cmpsb
push
sarl
mov
push
mov
push
push
pusha
push
jmp
push
cwtl
and
xlat
sar
mov
out
out
aam
mov
idiv
pusha
push
push
push
sub
add
mov
mov
jmp
nop
shlb
das
das
push
rolb
push
insl
and
sbb
in
mov
add
daa
mov
jae
mov
and
addr16
mov
in
dec
and
imul
out
mov
jae
sbb
mov
jbe
in
ss
add
je
add
inc
sbb
dec
fisubs
jbe
xor
add
out
xor
cltd
inc
mov
fimull
scas
and
ljmp
adc
jmp
pop
dec
xchg
or
mov
xor
lcall
xchg
imul
xor
fsts
movsl
lcall
mov
lcall
iret
into
enter
imul
shrb
xchg
rol
pop
popf
fdiv
ljmp
adc
mov
lcall
mov
js
sbb
adc
pop
xchg
adc
lcall
in
cltd
sbb
ret
shl
popf
and
leave
add
cwtl
repz
sub
pop
sahf
fwait
cltd
sahf
and
pop
adc
popf
fstpt
daa
insl
xor
sbb
out
std
jne
adc
inc
xor
adc
fbld
in
jle
mov
xchg
adc
mov
iret
lret
lret
movsl
cli
hlt
std
push
mov
jge
pop
jno
xor
enter
xchg
jmp
dec
ret
shlb
ja
jno
addr16
in
leave
jmp
sti
jbe
fdivr
std
jmp
ljmp
cld
and
fcomps
jle
das
xor
idiv
std
aad
sti
pop
jmp
xor
ljmp
shrl
xacquire
sti
lock
cmc
stos
sbb
lock
jmp
outsl
addr16
jp
je
insb
cmp
imul
std
mov
pop
push
inc
inc
dec
pop
sbb
outsl
fcoms
shr
std
pop
je
jae
arpl
push
arpl
rorl
outsl
in
ja
inc
jne
jb
xor
pop
add
outsl
or
popa
imul
sti
fwait
popa
jb
fidivs
sub
in
fimuls
cmp
pop
push
aas
insb
aaa
jo
and
push
outsl
outsb
test
cmp
imul
pop
in
inc
mov
into
inc
insl
lret
push
ret
sbb
insb
push
mov
je
aad
jbe
mov
gs
insb
sbbb
push
rcr
dec
shll
add
mov
inc
add
popf
pop
or
sbb
mov
mov
jne
sub
or
cmp
outsb
xchg
push
jo
loope
data16
jmp
jne
sub
shll
mov
mov
fists
ja
insb
mov
mull
rclb
aas
popa
and
jb
sub
cli
inc
addr16
js
lods
cmp
sub
sbb
sub
pop
and
or
adc
or
into
mov
bound
fisttpl
fstl
daa
and
jl
loope
push
insl
jo
sbb
addr16
or
pusha
inc
paddb
add
push
push
dec
inc
pop
add
das
pop
out
cltd
cmpsb
ds
cmp
adc
and
sub
sub
or
mov
dec
xor
dec
cmp
cmp
pop
mov
mov
lcall
pop
cmp
das
fsubrl
xor
test
sub
pop
lock
dec
xchg
pop
jb
adc
sub
xchg
nop
inc
adc
or
fsubs
les
mov
sub
in
sahf
sbb
movsb
es
nop
and
push
sbb
nop
daa
xchg
jbe
push
sbb
and
and
and
pop
pop
push
and
push
mov
pop
aam
das
mov
fs
xor
cs
lock
and
movsb
jo
into
and
sub
and
inc
cmp
xchg
and
xchg
pop
and
dec
pop
enter
shlb
lods
and
fs
xchg
nop
or
jnp
je
das
pop
sub
cmp
and
mov
sahf
imul
lcall
gs
or
push
mov
adc
cmp
scas
setne
ds
imul
add
sub
jb
gs
data16
jg
and
sbb
subl
sbb
push
push
adc
imul
mov
arpl
cs
add
daa
dec
outsl
arpl
sti
subb
sbb
and
pop
fcomp
push
push
dec
push
dec
pop
imul
fbld
std
mov
gs
jo
bound
adc
jo
int
test
fmull
pop
adc
adc
inc
aad
and
jl
inc
cld
and
je
gs
imul
loopne
out
insb
push
add
and
addr16
imul
lea
xor
addr16
insl
jo
loope
and
ret
dec
shll
and
lret
cmp
testl
cwtl
mov
inc
pop
dec
jne
notl
fbld
push
mov
pop
jbe
push
xlat
aas
push
fwait
les
sub
inc
insl
pop
and
pop
outsb
dec
shl
dec
movsl
push
and
lods
insl
mov
mov
ja
xchg
sub
push
jg
push
add
bound
pop
sbb
adc
jmp
bound
cli
mov
dec
icebp
and
hlt
push
shrl
pushl
imulb
inc
das
inc
push
inc
dec
push
dec
dec
push
dec
inc
outsl
arpl
arpl
push
in
popf
inc
xor
xor
incl
das
testl
arpl
pop
in
mov
adc
arpl
xchg
add
xor
inc
lock
dec
sub
sbbb
xor
daa
mov
inc
mov
sub
pop
or
or
lods
outsl
xlat
xor
in
and
cmp
negb
mov
xor
mov
std
mov
dec
inc
push
pop
mov
orb
lret
and
cmp
add
bswap
sub
jns
jo
jg
push
jne
jae
mov
test
mov
and
pop
or
push
sbb
les
mov
push
pop
or
xchg
leave
mov
jb
testl
pop
and
fisubrl
out
xor
aas
inc
mov
add
and
xchg
pop
imul
inc
jno
insb
mov
mov
pop
movsl
dec
sbb
push
inc
outsl
pushf
stos
aaa
cmp
mov
insb
movsb
data16
xchg
jnp
subb
mov
jbe
sbb
and
pop
popf
js
sub
lods
add
popf
std
xor
arpl
push
push
jecxz
mov
xchg
data16
lcall
xchg
pop
fsubrs
imul
les
inc
xchg
push
sbb
shlb
daa
push
sub
add
xor
notl
push
push
jg
es
sbb
rcl
add
fldl
mov
cwtl
arpl
inc
imul
sub
inc
dec
pushf
jp
jno
cmp
imul
imul
or
adcb
jo
loope
adc
repnz
pop
sti
xor
inc
les
jne
or
jnp
in
sbb
jae
push
arpl
xor
adc
adc
jge
pushf
cmc
xchg
fs
xor
inc
andl
fwait
xor
push
sbb
rcrl
push
mul
outsb
imul
popa
cmp
gs
add
pop
add
mov
dec
fs
mov
rorl
imul
or
jbe
pushf
pop
mov
xor
cmp
push
imul
mov
push
xor
jo
jbe
loopne
xor
outsl
outsl
inc
imul
mov
sub
xorb
xor
cmova
fimull
mov
xchg
jae
ja
inc
stc
adc
jno
inc
insb
dec
or
in
mov
jp
dec
inc
outsl
jne
lea
roll
fcomip
insl
aas
movsb
pop
hlt
lock
jne
sub
loopne
sbb
das
inc
add
and
ret
xchg
out
addl
xchg
cmpsl
pop
sub
jb
xchg
cwtl
cmc
cmpsl
iret
inc
inc
inc
int
jp
dec
push
mov
jbe
imul
jg
push
or
or
addr16
pusha
or
lods
in
fcmovb
jnp
cs
push
and
sub
push
jb
jae
sub
aaa
test
fsubrl
mov
sbb
jno
jo
mov
push
sbb
fidivrl
xor
add
inc
dec
inc
cmpsb
rorl
jns
imul
sbb
daa
pop
js
cs
es
bound
inc
arpl
adcl
add
and
lea
stos
cmp
xlat
push
aas
add
hlt
ja
fmuls
sbb
popa
sub
mov
dec
mov
dec
pop
imul
gs
cs
add
dec
inc
push
jg
or
pop
mov
mov
jl
dec
push
xchg
out
dec
xor
fs
mov
mov
test
imul
jge
loopne
rclb
dec
inc
push
sbb
sbb
ja
mov
fsubrs
mov
mov
fstpt
mov
aas
xorb
sub
addb
or
scas
add
sub
les
pop
aaa
dec
pusha
mov
jo
or
outsb
mov
mov
xchg
sub
shrl
bound
insb
mov
pop
or
cld
test
out
add
pusha
test
aaa
sub
fs
adc
notl
dec
add
push
dec
inc
sbb
adc
inc
pop
or
fcmovnb
imul
sbb
bound
jbe
xor
mov
adc
or
mov
mov
cmp
sbb
inc
xlat
lret
mov
add
mov
inc
aas
mov
inc
testb
gs
dec
cmp
push
inc
push
push
andl
inc
bound
push
data16
add
xchg
pop
add
push
sub
test
cs
or
pop
and
popa
dec
testb
jne
test
insl
adc
jo
add
add
jne
sub
push
pusha
push
insl
xchg
clc
faddl
daa
subps
push
sub
jbe
call
das
sub
cwtl
sub
add
inc
roll
jno
add
fildl
or
pop
inc
scas
das
dec
es
adc
insb
lds
je
or
or
or
test
mov
subl
mov
data16
sub
dec
arpl
inc
adc
push
push
jne
dec
je
fbld
xchg
imul
cs
sub
add
xchg
jns
jne
pop
sbb
or
fwait
mov
imul
and
xor
popa
dec
push
inc
inc
scas
push
add
or
and
add
loop
dec
das
inc
mov
add
add
loope
and
ss
rclb
add
or
jge
adc
fldt
adc
mov
add
mov
call
dec
pusha
das
xchg
add
jg
or
mov
push
xchg
lret
adc
jg
out
or
mov
sbb
stos
jns
imul
sbb
inc
popf
bound
popa
jg
ret
lds
or
push
push
dec
adc
add
xor
or
mov
adc
inc
xor
mov
gs
xchg
cmp
xchg
lcall
test
xor
rclb
or
es
xchg
fprem
lret
inc
inc
push
push
push
inc
lahf
dec
push
push
or
cmp
data16
sub
pop
mov
pop
js
daa
sub
std
pop
mov
sub
or
scas
or
pop
nop
dec
dec
push
aaa
je
dec
xor
adc
scas
inc
popf
mov
push
inc
in
mov
movsb
push
outsl
push
jns
cmp
scas
pop
dec
das
and
add
outsb
push
pop
push
inc
xor
aaa
and
das
and
xor
gs
push
arpl
mov
mov
bound
pop
push
aad
mov
jmp
inc
je
cmpsb
pop
das
shrb
xor
push
rorb
shll
fisubrs
xor
xor
fnstenv
sbb
jno
call
dec
mov
jae
xor
push
or
jmp
push
or
or
push
and
and
lods
and
ljmp
dec
cmp
ss
aam
or
int3
addb
adc
dec
dec
cmp
outsl
pop
insl
jns
in
aaa
arpl
xchg
insb
cmp
sub
jae
adc
jle
iret
sarb
icebp
cmp
int3
out
adc
sub
repnz
and
jmp
pop
aam
imul
and
push
and
je
pop
js
inc
push
add
dec
push
and
sub
imul
mov
stc
insb
jae
push
das
inc
adc
sub
inc
sbb
inc
adc
mov
cmp
mov
push
cmp
add
and
add
out
pushf
shrb
outsl
jge
xchg
je
adc
ret
je
push
push
or
push
dec
and
and
mov
and
push
inc
sub
in
insl
imul
cmp
adc
idiv
lahf
jle
dec
dec
push
mov
and
and
cmp
sub
sub
xchg
ja
or
inc
adc
inc
pop
test
lahf
adc
dec
dec
call
push
add
cmp
adc
jae
stos
insl
and
sub
movsb
inc
stos
sub
pusha
lock
dec
inc
push
dec
and
shll
in
jmp
and
dec
or
dec
add
imul
pop
test
imul
jae
and
sub
lods
cmp
mov
cmp
add
fsubrl
and
pop
in
and
xor
cmp
dec
das
daa
dec
adc
popl
and
inc
inc
sbb
loope
movsl
pop
ja
xchg
xchg
xor
in
mov
cmpsl
das
or
inc
adc
or
mov
popl
cs
xor
decb
jmp
arpl
popa
cwtl
inc
test
adc
jge
sub
push
or
pop
or
shll
add
cmp
adc
arpl
out
mov
js
test
and
push
addr16
fwait
xor
inc
dec
cmovne
dec
push
dec
jge
sbb
lret
xor
inc
fbld
xchg
adc
or
rorb
in
jmp
xchg
arpl
push
or
xchg
fdivrl
sbb
pop
adc
insl
fildl
or
es
pop
and
push
inc
pop
test
xor
daa
jno
xor
daa
and
jb
xor
daa
daa
and
je
daa
and
daa
xor
daa
and
jbe
aaa
ja
daa
daa
and
cmp
in
add
pop
xor
and
daa
das
daa
jp
xor
and
daa
xor
shlb
xlat
push
aas
add
push
xor
xchg
es
xor
in
pop
and
es
jns
and
movsb
lret
stos
pop
pop
repnz
fisubs
cmp
es
nop
mov
cmp
sub
pop
pushf
xor
mov
pop
xchg
or
rcrb
or
enter
push
es
add
gs
pop
ds
push
adc
mov
mov
aas
adc
lcall
daa
dec
outsl
mov
xor
adc
pushf
xor
daa
fistpl
frstor
jge
popa
mov
cmp
popa
push
cmpsb
adc
jg
adc
xor
inc
mulb
add
push
push
daa
dec
push
les
pop
jle
imul
insb
adc
cmp
cmp
daa
lods
popf
push
cmp
pop
push
adc
out
xchg
adc
inc
adc
add
lcall
mov
in
push
ja
add
adc
ret
adc
jb
sub
mov
jb
mov
cmp
fcompl
rcr
nop
fisttps
inc
push
push
dec
pop
push
push
mov
pop
or
ja
pop
xchg
dec
sub
push
push
fisubl
or
dec
sarb
es
xor
testb
pop
or
sbbb
es
adc
roll
and
rcrb
and
cwtl
js
or
jle
inc
push
pop
fidivl
es
dec
daa
pusha
xlat
jbe
push
inc
dec
or
add
or
shlb
outsl
das
imul
punpckhdq
insl
dec
lcall
adc
popa
dec
xor
and
bound
xor
and
arpl
fs
xor
xor
imul
aaa
push
mov
outsb
jb
aas
in
pop
dec
inc
pop
popf
sub
scas
add
fs
pop
sub
inc
cmp
and
xchg
stc
and
imul
fs
cmc
in
inc
inc
aam
arpl
std
mov
or
cmp
fwait
leave
mov
inc
ja
jo
jle
popa
jbe
xor
cs
mov
mov
or
sub
pop
inc
sbb
add
and
inc
subl
lahf
xor
jbe
je
jb
and
jne,pt
jno
repz
push
jo
loopne
dec
fwait
dec
and
mov
aaa
xchg
mov
push
jo
pop
mov
mov
arpl
cmpb
das
aad
sti
fs
inc
fs
daa
xchg
cmp
insl
jo
mov
aam
mov
inc
jmp
xchg
sbb
decb
jo
insb
jo
imul
push
cmc
inc
cltd
push
lods
movsb
push
aas
push
xchg
push
pop
cs
jecxz
sbb
mov
cmove
sti
rcr
out
mov
dec
nop
es
lods
pop
outsb
xor
mov
fmul
sub
mov
scas
nop
daa
push
or
jbe
scas
gs
outsl
bound
inc
mov
pop
rclb
outsb
jo
sbb
dec
arpl
mov
je
inc
lods
pop
inc
mov
ret
inc
push
icebp
out
arpl
mov
outsl
jp
insb
dec
sbb
das
xor
sub
xor
pop
ret
add
fsubrs
daa
push
pop
std
push
cwtl
fcomps
jb
inc
bound
and
fadds
inc
dec
pop
imul
fidivl
ja
jge
cwtl
test
jl
js
popa
les
imul
std
jbe
mov
pop
xchg
jne
push
xchg
iret
bound
rorb
lds
cmp
popf
int3
outsb
insb
push
adcb
outsl
sub
mov
lahf
inc
cmpsb
int3
out
scas
repnz
test
aam
add
out
je
jbe
sbb
push
out
into
rcrb
push
pop
movsl
subb
pop
push
xchg
mov
insb
mov
or
flds
jge
mov
cmp
loopne
fnstcw
inc
dec
jae
push
inc
jae
arpl
adc
mov
push
xchg
push
jg
push
cmpsb
ja
xor
inc
sbb
mov
arpl
inc
mov
mov
icebp
inc
imul
bound
js
inc
insl
pop
cmp
fldcw
push
or
outsl
out
mov
aad
dec
mov
outsb
pop
rorl
addr16
inc
lock
xchg
push
push
out
xchg
jae
jo
xor
divb
in
aad
inc
sub
push
push
or
lods
or
jae
sbb
xchg
jmp
in
lea
call
inc
sbb
add
push
fcomps
fwait
adc
lods
add
iret
push
push
outsl
imul
loopne
testb
push
nop
in
jo
jne
outsb
lea
imul
or
push
inc
mov
push
cwtl
sbb
dec
jno
data16
fisubl
jle
popf
fstpl
int3
sbb
adc
push
fs
scas
and
leave
sti
in
adc
inc
inc
lret
popa
stos
sub
sbb
cmpsl
and
lds
fisubl
sbb
bound
sbb
sbb
push
popa
ja
add
lea
lea
adc
mov
jmp
mov
jb
rolb
ret
aam
pop
jo
sub
fstpl
pop
in
ret
aaa
pop
test
sbb
ja
int
testb
cmp
jmp
call
xchg
inc
ret
dec
adc
mov
inc
sbb
pop
inc
xchg
mov
sub
dec
mov
jp
dec
pop
inc
jns
shrl
lods
xor
jle
or
jae
es
cmpsb
out
imul
lods
dec
or
mov
rcrb
pop
fwait
cs
pop
push
shrb
in
test
mov
cwtl
pusha
xor
xor
cmpsb
xor
or
jbe
rorl
das
pop
insl
pop
push
push
daa
xor
add
scas
adc
pop
outsl
jbe
call
xor
xor
popf
ret
popf
rolb
push
es
insl
dec
push
xchg
ret
scas
cmp
xchg
movntps
and
adc
jae
inc
in
jle
and
arpl
mov
push
dec
jnp
or
test
jl
xorl
dec
xor
adc
dec
sub
lock
and
adc
daa
call
les
xor
mov
push
mov
lods
movsb
pushf
xor
xor
xchg
mov
add
pusha
and
pop
cli
push
pusha
xchg
pop
nop
popa
jnp
or
cmp
and
or
push
rdtsc
punpcklwd
paddusw
adc
pcmpgtd
outsl
jl
push
loope
push
jo
xchg
cmpl
sti
and
sbb
loopne
out
movb
push
or
inc
mov
jnp
dec
daa
daa
jno
push
aaa
scas
outsb
dec
add
sub
or
scas
mov
insb
out
jae
je
sub
in
jae
pop
fcmovb
pop
inc
mov
and
jae
bound
outsb
addl
cmp
inc
or
push
mov
and
je
mov
sub
mov
xor
push
cmp
imull
adc
add
lret
mov
je
mov
adcl
out
inc
lods
add
dec
fisubs
push
test
fiadds
jo
test
add
dec
dec
sbb
cmp
andl
mov
gs
mov
fs
fstps
mov
popa
mov
jb
sbb
jg
sub
sbb
les
jnp
sub
loopne
jg
addl
leave
cmpl
test
mov
popa
insb
fmuls
jne
pop
bound
call
jno
sbb
scas
lret
es
push
or
and
scas
jo
xchg
popa
mov
ja
xor
andl
loope
pusha
in
inc
inc
adc
xchg
sbb
mov
cmp
inc
adcl
pop
lods
add
sbb
jle
push
and
pop
or
mov
mov
test
aam
adc
push
outsl
lea
push
les
push
cmp
push
data16
sub
iret
stos
and
mov
popa
pop
fdivrl
dec
dec
insb
cmpsl
insb
inc
or
and
or
mov
das
pop
push
dec
push
cwtl
add
dec
das
ds
insb
and
sbb
sbb
sub
ja
and
test
cmp
aaa
add
imul
insb
aaa
jecxz
or
cmp
pop
xor
cld
or
jne
or
fstps
and
dec
sub
adc
adc
mov
cmp
push
mov
lcall
jo
mov
mov
dec
mov
adc
nop
push
fisubrl
mov
add
les
sub
scas
adc
rorb
cmp
imul
js
xchg
insb
addr16
and
das
and
mov
sbb
add
fs
fcomp
push
test
mov
arpl
add
push
daa
ret
insb
xlat
out
data16
outsb
xchg
cmp
push
enter
xchg
mov
decb
imul
addr16
xorl
bound
adc
pop
adc
and
sbb
ret
ret
fwait
out
shll
lods
inc
ljmp
jbe
enter
and
mov
sbb
xlat
dec
mov
and
add
jle
cmp
xor
pusha
inc
int
pop
xor
sub
jecxz
mov
mov
and
roll
jb
out
rcrb
cmp
sbb
insl
xor
pop
roll
das
jl
push
dec
insl
outsb
lods
jne
pop
add
mov
mov
inc
adc
or
ret
rcll
mov
mov
cmp
sub
arpl
fwait
or
addr16
loopne
ret
pop
adc
inc
inc
outsl
popf
mov
dec
or
mov
add
insb
jns
or
call
enter
insb
mov
and
vpsrld
outsb
inc
popf
shrl
enter
xor
mov
adc
call
xchg
pop
mov
fidivs
inc
xorb
inc
jne
add
inc
dec
jmp
add
mov
jns
dec
stos
mov
jge
push
popa
add
jbe
popf
mov
mov
dec
jae
mov
outsb
int3
stos
outsl
jmp
inc
or
das
cmp
push
jmp
negl
jno
pop
pusha
pop
sub
and
xor
dec
push
push
dec
lret
push
dec
gs
adc
mov
inc
cld
mov
inc
push
push
and
cs
negb
movsb
and
je
aas
aaa
sbb
sub
es
sbb
add
dec
mov
aaa
cmovp
mov
aas
pushf
inc
arpl
fimull
xor
ja
jl
adc
pop
mov
pop
add
sbb
enter
data16
fildl
out
adc
push
pop
add
jbe
hlt
enter
aas
cs
outsb
jne
outsl
loopne
adc
jmp
add
and
or
push
add
xchg
xor
sub
inc
sub
movsb
pop
adc
mov
mov
or
lds
jbe
notb
imul
jo
inc
mov
xor
jp
pop
xlat
pop
push
test
fsubs
clc
subb
inc
popl
popa
aaa
outsb
lea
cmp
pop
dec
jae
mov
push
push
pop
push
dec
inc
cmp
imul
xor
mov
addr16
in
mov
cmpsl
fsubl
rolb
les
lcall
imul
imul
sbb
adc
mov
ss
or
hlt
push
in
push
in
lcall
aam
int3
shrb
imul
jl
jo
rorl
lcall
xor
shll
and
dec
shll
adc
add
imul
loopne
daa
imul
outsb
fwait
cmpsb
mov
mov
nop
push
lcall
push
cmpsb
imul
shll
imul
aam
lcall
mov
mov
cwtl
rcrl
mov
xor
jo
fs
pop
push
xor
inc
cmp
sub
pop
mov
inc
add
sbb
add
cmp
scas
movsl
pop
xchg
push
add
cmpsl
or
movsb
pop
inc
and
divl
xchg
shll
pop
jo
outsl
push
loope
out
imul
push
lea
inc
cmp
pop
arpl
fisttpll
mov
mov
insb
mov
mov
bound
lldt
cs
or
dec
es
imul
pop
dec
test
fisttps
imul
sbb
pop
pop
addr16
push
push
outsl
push
inc
cmp
idivl
aas
bound
xor
arpl
arpl
mov
ds
lds
int3
push
and
je
lea
lds
orb
pop
push
mov
shll
shll
jg
sub
xchg
mov
mov
sbb
outsb
sub
insb
inc
bound
test
push
jne
adc
inc
xchg
inc
ja
inc
add
push
xor
jbe
stc
out
mov
out
ds
outsl
bound
jno
pop
cld
push
ja
js
push
xor
in
pop
pushf
rcr
push
fsts
pusha
repnz
fsubrl
imul
cmp
xchg
mov
insl
push
xor
push
add
sahf
xchg
imul
adc
xchg
pop
gs
sbb
aas
cmp
ret
daa
jge
ss
inc
cmp
sub
jb
mov
outsl
push
pop
cmp
js
movntps
add
insb
out
pop
mov
pop
fs
les
xor
leave
xchg
cmpl
xorb
and
xor
sbb
das
push
push
push
pop
inc
nopl
push
or
push
aas
push
cltd
outsb
inc
xchg
stos
dec
jo
out
xchg
mov
dec
pop
pop
imul
popa
fs
into
xor
cmp
popa
daa
inc
lahf
rolb
sbb
or
xor
sbb
jne
add
adc
cltd
inc
out
mov
mov
mov
push
sti
fistpll
jae
sbb
pop
xlat
jb
pop
fdivrs
push
sub
aas
add
jbe
jnp
push
lods
lds
dec
pop
fs
inc
mov
sub
inc
push
inc
cs
dec
dec
or
dec
lods
mov
mov
add
ss
inc
mov
gs
dec
dec
inc
dec
adc
sub
lods
adc
add
scas
icebp
dec
mov
fstp
adc
outsb
pop
dec
dec
push
push
and
test
stos
inc
cmp
push
aam
fists
aas
fucomip
call
or
pop
pop
jnp
dec
test
aad
pop
dec
imul
inc
push
push
inc
lret
inc
xor
xor
outsl
and
movsl
sahf
outsl
pop
push
adc
lods
comiss
pop
push
xor
pop
fisttpl
inc
imul
sub
add
pop
and
add
or
gs
cs
rolb
inc
push
jg
xor
cmp
sahf
fcoms
mov
lods
sub
mov
and
movsb
jae
push
jo
jl
sub
or
pop
inc
xor
popa
pushf
push
mov
push
imul
stos
shrb
xlat
lods
xchg
rorb
xchg
xor
sub
cmp
lea
pop
fmull
xchg
push
or
mov
pop
xchg
lock
jbe
pop
sub
bound
fsubrs
mov
xor
push
dec
mov
adc
push
push
pop
inc
mov
xor
dec
cmp
dec
insb
mov
mov
inc
pusha
inc
aaa
je
in
push
push
add
test
ja
imul
pop
sbb
or
pop
sub
add
hlt
aad
insb
shll
adc
fsubs
mov
or
fistpll
cmpsb
jbe
fists
lods
loop
pop
adc
test
push
adc
sub
or
mov
stos
inc
iret
cmpsl
or
imul
imul
loopne
xorl
xchg
aas
dec
outsl
inc
inc
cmpsb
movsl
lea
ret
sbb
mov
add
xchg
outsl
aas
insl
and
imul
push
sbb
cmp
orb
movsl
inc
imul
adc
xchg
sub
mov
pop
imull
loope
push
mov
dec
inc
js
xchg
ds
jo
daa
popa
inc
dec
dec
mov
aas
sbb
cmpb
shll
push
insl
cmp
inc
popf
mov
sub
inc
pop
ret
sbbl
bound
sub
xchg
mov
nop
cmpsl
add
dec
aas
fst
cmp
outsl
pop
cmpsl
popf
rorb
pusha
out
xchg
mov
iret
outsl
sbb
pusha
adc
push
sbb
insb
lds
sbb
pop
fwait
sub
and
mov
xchg
fsubrs
and
jo
dec
xor
gs
mov
xchg
daa
mov
mov
pop
scas
or
add
sub
ret
inc
testb
adcb
dec
push
add
pop
mov
les
insl
push
scas
add
mov
aam
sub
inc
pop
jne
mov
aas
or
ja
dec
jae
jbe
add
or
push
rorl
mov
aas
mov
sub
cltd
push
mov
out
pop
inc
add
lahf
pop
ljmp
and
mov
xor
mov
cwtl
addl
lds
sub
das
packuswb
push
xchg
in
xor
pop
cmp
mov
scas
in
xor
or
popa
push
add
sub
cs
sub
shrl
dec
movsb
pushw
cmpsb
fbld
xlat
lcall
addr16
inc
cmp
lods
movsl
push
xor
inc
pop
inc
cs
push
xchg
lods
inc
push
mov
lock
dec
dec
dec
orl
mov
mov
js
ja
sti
or
add
cmc
add
aad
imul
push
mov
pusha
xchg
rolb
mov
movsl
pop
mov
add
or
aam
iret
nop
fsubr
cli
inc
pop
inc
inc
fldcw
mov
cmp
movsb
inc
mov
mov
push
adc
push
outsb
or
cmp
scas
dec
adc
dec
les
sbb
outsl
adc
push
sub
lock
inc
inc
dec
pop
inc
loopne
add
xor
jne
jg
inc
push
test
popf
inc
inc
mulb
add
daa
pop
lock
ret
push
push
mov
mov
mov
pop
cli
jae
pop
adc
dec
sub
rol
dec
dec
hlt
add
add
lret
rcr
sub
xchg
movsl
mov
jo
sub
jae
xor
sbb
ffree
or
imul
jbe
jp
insb
cmp
jg
jne
movsl
leave
pop
loope
daa
push
adc
fmuls
nop
inc
test
inc
xor
jb
pop
or
jmp
or
xchg
adc
in
or
out
test
adc
mov
cmp
les
and
mov
push
lods
mov
popa
mov
jp
aam
sub
pop
xchg
outsb
sub
and
mov
jo
hlt
je
or
add
rcr
sub
push
rorl
mov
pop
lahf
bound
xor
adc
in
and
push
arpl
sub
imulb
push
jo
pand
push
cs
sbb
sbb
dec
push
test
daa
popa
and
popf
cmp
imul
cmp
jb
push
insl
jbe
dec
mov
and
sub
jne
push
outsl
adc
inc
push
inc
arpl
imul
xchg
sub
xor
adc
pop
pop
push
mov
or
xchg
loope
mov
xorb
shlb
sub
and
into
jne
add
nop
ret
cli
std
jo
addr16
loop
pop
push
lock
push
testl
rclb
push
or
fimuls
xor
jb
popa
ja
lock
push
arpl
sub
mov
popa
orb
add
or
adc
pop
ds
inc
cwtl
popa
pop
ss
das
cs
sbb
jb
dec
loopne
out
adc
test
sbb
aaa
out
pop
push
xlat
jno
mov
add
mov
arpl
adc
push
adc
neg
push
insl
lret
ret
aaa
ret
mov
mov
xchg
adc
add
pop
jns
push
lods
adc
mov
repnz
addr16
add
outsl
mov
mov
aas
shlb
jge
and
bound
cmp
mov
mov
xor
outsl
add
into
pop
cltd
cmp
jb
stc
or
fs
jb
add
popf
push
push
add
cmp
int3
scas
loope
mov
pop
je
push
fimuls
xlat
adc
mov
push
mov
jo
xlat
pop
dec
xchg
push
sub
cmp
jmp
jae,pn
jno
mov
push
mov
lahf
loope
lock
jno
jne
push
out
movsl
orb
pop
repnz
sbb
aaa
bound
sahf
cmp
in
or
leave
add
pop
popa
je
setg
daa
mov
shlb
sub
push
scas
int3
lods
cmp
lret
cs
pusha
aaa
jo
push
mov
inc
inc
push
adc
sub
mov
push
xchg
cmp
es
add
push
daa
pusha
cltd
hlt
sbb
push
sbb
addr16
outsl
fsubs
popf
add
adc
ss
xchg
inc
orl
aas
loopne
inc
and
add
cmp
cmp
sub
add
negb
pop
sbb
cltd
add
sbb
sub
jbe
sub
into
mov
ja
pop
iret
imul
ret
outsb
push
es
out
push
or
addr16
popf
mov
sbb
negl
repnz
ss
ret
nop
aad
mov
rorb
aaa
xor
cmp
or
or
fs
jae
sti
push
mov
inc
ja
repnz
sbb
cs
lret
ja
jnp
lods
popf
xchg
and
enter
jg
push
stos
add
mov
xor
adc
sbb
sbb
adc
inc
cmp
push
adc
daa
data16
pop
stos
jo
xlat
test
mov
fbld
xchg
mov
ss
push
in
push
dec
dec
nop
sub
xchg
rcr
add
insl
mov
xor
mov
daa
xchg
out
adc
xor
nopl
fmulp
push
sub
and
js
push
dec
jo
pop
mov
aad
pop
or
inc
mov
addr16
jecxz
mov
xor
inc
jne
ret
sub
movsl
and
cmp
inc
aaa
popa
outsb
sbb
ja
mov
fs
sbb
lahf
sbb
xchg
mov
pop
lcall
sub
dec
and
popa
clc
xchg
xor
and
dec
mov
inc
in
mov
cmp
or
push
pop
mov
pop
adc
dec
lret
sbb
pusha
fcmovnb
push
push
popf
idivl
sub
test
sbb
mov
outsb
sti
push
jne
test
add
in
lea
jmp
add
fisttps
fimull
mov
or
inc
dec
inc
push
inc
jmp
gs
dec
adc
xorl
push
aam
sbb
lgdtl
cli
shlb
aas
push
inc
push
push
jo
test
lahf
mov
add
push
jg
loope
jo
xchg
out
push
inc
adc
xor
add
xchg
cli
lea
and
pop
or
hlt
iret
test
dec
addr16
mov
add
shrb
repz
inc
xor
xor
jo
xchg
dec
outsb
sbb
mov
cmpsl
mov
cs
outsl
jg
cmp
imul
jg
dec
inc
test
aam
push
test
orb
lock
dec
push
pop
sbb
cmp
jo
pop
stos
adc
push
andl
pop
sub
and
push
pop
push
add
jae
das
shlb
fstpl
inc
or
inc
jl
and
lahf
popf
xchg
imul
decl
add
inc
push
xor
lds
sub
lahf
fldenv
sub
push
push
jns
pusha
aaa
sbb
pop
mov
insl
cmp
cwtl
packsswb
add
push
pop
and
inc
add
daa
pushf
mov
mov
shll
push
xor
and
mov
in
mov
movb
sub
pop
imul
inc
sbb
inc
add
ja
shrb
inc
imul
andl
xchg
cmpsl
dec
or
xor
rcrl
add
add
push
pop
push
ret
xor
cltd
popf
lea
cmp
mulb
add
and
sbb
mov
dec
pop
ja
imul
jl
or
aas
stc
in
add
push
add
scas
dec
inc
js
lcall
mov
inc
cwtl
or
pop
aas
inc
pop
add
ret
xor
addl
push
jo
or
xchg
inc
push
dec
pop
outsb
lcall
push
loope
jl
push
inc
inc
inc
dec
dec
dec
xchg
sbb
add
test
cli
sub
out
sub
sarb
adc
sub
idivl
mov
xor
jae
inc
enter
pop
adc
shll
jne
pop
jb
mov
inc
imul
jo
mov
pop
fcoms
pop
inc
iret
jb
outsl
cli
or
or
pop
adc
hlt
xchg
lods
addr16
inc
dec
xor
dec
cmp
insl
adc
inc
sub
cmp
outsb
es
sub
iret
sbb
sbb
arpl
add
and
adc
ret
xchg
sbb
jb
and
add
pusha
sbb
lahf
jne
nop
popa
add
ja
xchg
adc
jg
pop
add
mov
pop
mov
je
push
dec
xor
mov
mov
inc
loope
sub
xor
inc
or
mov
in
add
sbb
mov
pop
arpl
inc
mov
jmp
and
ja
jns
lods
or
aaa
fisttpl
or
xchg
and
cwtl
inc
add
subl
pop
jmp
call
loop
xor
or
dec
cmpsl
dec
in
inc
loop
das
mov
or
and
inc
push
add
js
xchg
jge
or
or
xor
inc
jl
inc
cmp
rolb
lret
js
inc
and
ss
mov
add
dec
push
push
and
adc
push
add
adc
test
sub
pusha
ret
arpl
push
rcr
lahf
sbb
call
add
add
push
call
sub
test
adc
call
inc
leave
jne
ret
call
pop
sbb
in
dec
ret
pop
pop
pop
push
sub
jg
pop
mov
rep
mov
stos
push
push
push
cmpsb
test
or
loopne
incb
rol
sbb
mov
in
mov
sbb
and
imul
test
adc
ds
stos
or
jg
xchg
dec
mov
sub
ja
test
in
incl
mov
or
sub
test
cmove
pop
sbb
add
pop
inc
push
push
mov
dec
dec
jp
and
inc
dec
sub
repz
imulb
xor
xchg
cmp
in
xor
inc
sbb
jae
mov
or
jne
imulb
inc
inc
push
mov
sbb
add
dec
into
fmuls
jp
and
or
pop
push
imul
sbb
adc
addl
xor
push
imul
out
xchg
and
pop
mov
add
jnp
jb
push
cmp
sbb
and
mov
iret
or
in
cmp
add
rolb
fisttps
or
or
ret
cmp
std
pop
jbe
pop
adc
aas
ret
dec
inc
iret
inc
bound
mov
or
add
xor
and
xor
shlb
and
push
adc
and
test
or
movsl
or
mov
inc
or
add
or
mov
xor
xlat
lcall
pop
out
adc
scas
add
sub
sub
sbb
sub
or
inc
push
xlat
inc
rolb
mov
das
pushf
arpl
mov
es
inc
and
add
fsubs
add
xor
lock
fildll
arpl
aas
pop
pop
jne
jae
aaa
inc
add
pop
sub
and
sbb
inc
add
mov
mov
iret
je
pop
mov
inc
data16
adcb
clc
add
rorl
push
loopne
push
fcompl
cmpsb
imul
imul
cmpsb
imul
cwtl
add
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
leave
xchg
outsl
cmpsb
xor
lock
clc
decl
pop
dec
add
das
das
or
mov
pop
addr16
in
nop
jle
insb
jnp
pop
adc
daa
add
sub
and
sub
xor
cmpsb
fwait
inc
jb
push
add
and
lcall
or
adc
add
cmpb
add
add
imul
aad
daa
pop
push
push
push
dec
xor
add
add
add
or
popa
orl
or
aaa
mov
pop
nop
or
mov
daa
adc
adc
and
xorl
or
das
push
xorps
mov
mov
insl
push
imul
ss
pop
andb
cmpb
add
or
test
xchg
ss
sahf
mov
push
sbb
rclb
sbb
add
into
setp
outsb
add
pusha
cmpb
aas
jns
add
sbbl
and
mov
and
pop
enter
inc
mov
iret
mov
in
call
mov
jle
adc
push
ficompl
mov
dec
mov
fcomp
loopne
jae
jle
imul
push
sbb
inc
lea
mov
fs
push
nop
xchg
inc
push
fs
xchg
xchg
dec
and
fisttps
add
sti
inc
insb
cmpsb
imul
shll
lock
adc
adc
jo
cmp
xor
jns
pop
adc
stc
inc
mov
xor
sarl
jns
jp
pop
xor
cld
je
movsb
imul
inc
ret
icebp
or
xor
bound
xchg
add
mov
out
jg
dec
push
add
adc
add
testl
rol
out
xorb
icebp
test
test
enter
inc
jg
in
sub
aaa
pop
dec
or
pop
push
xor
rcrl
js
mov
xchg
dec
rcl
repz
xor
dec
mov
cmp
pop
ja
pop
ss
shll
mov
cmpsb
cmpsb
dec
insb
loope
add
leave
xchg
mov
or
or
enter
ret
mov
adc
jg
inc
and
sbb
dec
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
add
inc
stc
mov
adc
mov
decl
js
jg
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
cmpb
leave
fwait
xchg
and
and
jg
fildl
add
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
call
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
xchg
test
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
incl
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
jg
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
or
pop
addr16
add
sub
mov
add
mov
mov
add
fs
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
sub
sub
push
loopne
add
inc
js
popa
outsb
fs
dec
and
pop
mov
je
push
popa
pusha
push
addl
and
jb
push
push
pop
dec
add
or
dec
pop
xchg
add
loopne
xchg
adc
dec
and
mov
jnp
lret
out
ds
sbb
test
ds
pop
lcall
adc
sub
ja
addl
sub
outsb
push
pop
cwtl
fst
je
xchg
in
mov
out
adc
cld
cmp
push
das
jl
aad
rclb
sbb
add
xchg
jge
or
ss
adc
movsb
incl
cmp
popa
je
imul
lods
add
lcall
jb
rclb
xchg
xchg
push
and
dec
xchg
rorb
inc
add
push
pop
push
jo
dec
jnp
push
dec
sti
xchg
dec
outsl
and
xor
insl
push
add
in
rclb
push
pop
xchg
jo
or
insb
fisubrl
fisubs
push
imul
inc
xor
nop
cmp
add
stos
xchg
loopne
ret
ja
add
dec
gs
xor
push
pop
inc
nop
adcl
inc
pop
pusha
xor
out
mov
bnd
outsl
imul
dec
adc
adc
gs
sub
sub
xchg
xor
outsl
xchg
popa
mov
xchg
push
sub
xor
fidivs
push
push
xor
add
aad
loopne
fistl
dec
jns
pop
jo
xchg
or
sbb
icebp
aaa
mov
xor
inc
popa
or
nop
nop
je
je
jecxz
movsb
outsl
addr16
mov
pusha
mov
insl
and
add
and
jo
inc
das
shrb
pop
mov
push
jo
gs
stos
lods
bound
jo
fcoms
sbb
cmp
jo
stos
jecxz
js
imul
cmp
in
out
inc
jns
out
sub
outsl
jo
push
mov
movl
loope
or
inc
leave
dec
arpl
inc
fsubs
stos
jo
aas
addl
int
dec
lock
mov
push
lods
ret
aad
mov
lcall
clc
popf
imul
enter
dec
ret
movsl
xor
mov
mov
xchg
rcrb
pop
fninit
stos
outsb
inc
jb
gs
mov
sbb
cmp
loope
and
sbb
int3
out
push
outsb
outsl
fcmove
inc
jbe
lcall
shll
push
je
ja
mov
shll
sbb
push
ja
pop
mov
mov
add
cmpsb
and
pop
inc
inc
sbb
ja
dec
sti
jecxz
popl
gs
aas
adc
jmp
roll
add
sbb
lock
dec
addb
mov
adc
negl
xlat
ss
icebp
adc
pop
push
sbb
cmovg
adc
insb
xor
mov
decl
mov
lret
repnz
or
mov
lret
or
or
lret
mov
pop
adc
xchg
mov
es
cmp
xor
neg
in
dec
and
sidtl
add
adc
mov
rclb
fisttpl
and
push
add
iret
ficoms
divb
or
jo
add
adc
adc
adc
push
dec
inc
add
add
jmp
add
shll
and
mov
and
jb
fnstcw
add
add
add
dec
sahf
js
push
lock
dec
hlt
mul
xor
add
and
xchg
lock
out
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
