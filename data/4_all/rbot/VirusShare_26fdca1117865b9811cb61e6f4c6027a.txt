xchg
mov
sbb
xchg
test
scas
sub
lock
fnstsw
cmp
and
les
xchg
cmp
aas
xchg
stos
xchg
cmp
mov
adc
sbb
ljmp
or
mov
jg
or
ljmp
mov
dec
push
aad
std
mov
and
insl
jo
xor
loope
jl
out
stc
out
adc
sarl
lods
adc
repz
out
pop
lahf
mov
ret
sub
cmpb
xchg
xlat
cmpl
xchg
pop
mov
test
add
lds
xor
push
cld
or
fs
lods
stc
and
inc
daa
add
xchg
cmpsl
add
mov
insl
mov
pop
test
cmc
gs
dec
fwait
dec
popf
add
cmp
lds
dec
pop
repnz
sbb
adc
je
hlt
mov
negl
add
sbb
pop
pop
scas
push
adc
jno
mov
add
cmp
and
iret
push
js
dec
mov
ds
or
jae
sar
add
imul
movsb
gs
push
mov
out
dec
xchg
shl
stos
out
dec
movsl
test
repz
mov
adc
mov
je
hlt
jb
dec
rcl
jae
cmp
imul
add
mov
pop
xor
push
adc
push
ss
mov
xor
mov
popf
mov
out
mov
sbb
enter
gs
push
test
in
cmp
xor
mov
and
fwait
sub
aas
and
in
inc
xchg
sbb
and
add
adc
push
fs
insb
push
lcall
dec
mov
stc
or
out
mov
repnz
pusha
mov
cmp
or
push
inc
lret
inc
jb
mov
xor
fnstenv
fnsave
sub
leave
icebp
sub
pop
out
sbb
mov
xor
stc
popf
add
bnd
xchg
xor
lock
imulb
xchg
xor
out
push
inc
jecxz
aam
pop
cmp
sarb
dec
jmp
or
cld
inc
stos
popa
jae
pop
mov
lea
loop
pusha
inc
sbb
add
sbb
xorb
push
inc
mov
enter
dec
cmp
ffree
push
outsb
cmp
mov
mov
pop
add
les
call
jge
stc
shll
ret
aad
in
sbb
sbb
push
dec
les
sub
pusha
dec
mull
mov
jo
insl
sahf
repnz
adc
inc
mov
imul
cwtl
aaa
push
das
push
mov
loope
and
out
repnz
pop
arpl
scas
cmpsl
jp
loope
test
stos
pushf
shll
mov
addr16
ja
imul
stos
adc
fisubrs
cmpl
fwait
dec
outsl
mov
out
mov
xor
and
jnp
mov
xchg
fwait
jo
out
out
add
push
mov
and
mov
cli
jne
cltd
dec
push
mov
sub
xchg
ljmp
jae
mov
shlb
in
js
iret
adc
or
jle
pop
test
aam
pop
push
fidivs
pop
inc
adc
dec
loope
adc
inc
dec
out
jns
orl
test
xor
push
shll
pop
adc
dec
movsl
dec
jbe
xor
push
push
out
pusha
test
outsl
out
mov
push
lcall
mov
inc
dec
outsl
pop
ficoml
scas
xchg
pop
push
stos
stc
imul
push
push
aaa
insl
xor
jle
sub
shrb
inc
jo
aaa
arpl
pop
jns
mulb
jp
inc
cmp
ret
cmc
in
insl
adc
mov
push
dec
mov
cltd
pop
pop
out
xchg
les
mov
mov
testb
loopne
mov
jp
out
lret
movsb
lods
mov
jo,pt
jno
add
inc
push
sub
test
arpl
adc
cld
fimuls
int3
sbb
ja
inc
xorb
dec
adc
mov
out
and
jg
loopne
push
and
shlb
jmp
mov
sub
in
in
es
jmp
mov
pop
inc
ret
and
jge
jg
ss
and
icebp
out
outsb
das
push
adc
cltd
pop
pop
jns
rcrl
sub
into
shr
in
repnz
stc
push
add
popa
int
xor
push
cmpsl
jo
and
sahf
vmovapd
insl
sbb
pop
icebp
push
les
lods
jne
bound
dec
sbb
push
sub
call
imul
out
jbe
and
push
add
lds
lret
or
adc
jg
or
mov
lcall
ret
fdivrl
call
push
mov
mov
fstpt
sub
push
dec
push
pop
mov
xchg
inc
fwait
lds
lret
adc
fidivrl
and
in
and
mov
mov
leave
in
rclb
or
scas
push
pop
xchg
pop
ret
ret
jo
cwtl
pop
arpl
stos
in
cltd
pop
pop
call
sar
movsl
inc
in
in
mov
dec
adc
and
lock
jl
push
mov
jmp
cmc
dec
inc
and
call
dec
mov
or
dec
insl
or
dec
loope
les
pushf
rclb
mov
and
mov
mov
mov
cmpsl
gs
scas
mov
sub
test
mov
dec
test
inc
stos
out
je
push
xorl
imul
call
das
das
stc
outsb
jge
mov
mov
outsl
xor
test
out
xor
movsb
out
jnp
call
mov
ss
xchg
lock
nop
xchg
jle
lods
std
ret
jnp
mov
xchg
xchg
rcrl
into
jge
jb
movl
roll
aad
insl
dec
cld
jno
pop
addr16
or
push
pusha
addr16
leave
inc
bound
cmpl
jl
cmc
sbb
dec
lods
mov
mov
jg
popl
xchg
scas
pop
or
mov
cwtl
and
lock
std
ret
sbb
xor
add
lret
or
andb
pop
outsb
inc
sti
mov
xchg
mov
popf
cmp
pushf
test
add
inc
insb
lods
sub
inc
sub
into
mov
stos
aas
push
cmp
mov
mov
pop
lcall
lock
sarb
jmp
inc
add
outsb
loope
sub
inc
add
out
lods
cltd
inc
jge
mull
pop
aam
jnp
xchg
adc
cld
sub
sub
imul
cmpl
sub
jl
mov
sbbl
insl
or
mov
shlb
leave
andl
or
aad
mov
jecxz
mov
stos
loopne
mov
cmpsl
fsubrs
cmp
mov
sti
std
arpl
push
loop
dec
mov
bound
punpcklbw
dec
pop
or
or
sbb
mov
ja
test
pop
sar
and
inc
xchg
xlat
call
cld
shll
mov
adc
adc
inc
adc
into
loope
fcmove
xor
push
add
cltd
imul
lret
inc
scas
hlt
ffree
lds
test
lods
fildl
or
cli
jle
in
sbb
push
sub
ljmp
mov
mov
sub
pop
push
je
push
daa
pop
dec
popf
out
loope
fwait
call
mov
scas
mov
aas
cmp
fmull
repnz
ret
sahf
movsb
clc
jne
dec
mov
fidivrs
mov
dec
pop
push
adc
cmp
out
cs
inc
rolb
imul
jmp
adc
or
addr16
in
xor
ret
mov
mov
cmp
mov
jmp
sbb
imulb
push
jne
cmc
push
xor
adc
add
ss
and
fsubr
pusha
das
cli
pop
add
jg
addr16
fnstsw
shll
pop
xchg
stos
and
pop
and
push
mov
ss
or
lret
out
and
xchg
adc
fwait
shll
neg
mov
ret
or
adc
loop
mov
pop
lods
mov
or
mov
fcoml
hlt
lods
aam
rcrb
and
dec
mov
stc
push
outsb
fwait
mov
add
insb
or
or
xchg
out
cwtl
and
pop
xor
mov
jecxz
mov
mov
loopne
sti
sub
adc
xchg
push
xchg
call
xchg
push
adc
sub
push
dec
loope
pop
jl
push
in
inc
sbb
pop
in
xor
pop
pop
aam
fptan
repnz
icebp
jg
dec
popf
sbb
shl
lods
in
pop
mov
add
shr
sub
ret
test
inc
lcall
pop
inc
jae
add
ljmp
clc
arpl
rol
loop
dec
dec
iret
adc
mov
sti
lods
fs
and
fsubl
insb
sbb
add
mov
push
js
fldcw
dec
pop
xor
dec
jb
int3
push
cmp
mov
cwtl
mov
or
out
mov
fwait
jg
dec
or
mov
scas
ljmp
fnstcw
fldcw
add
mov
das
inc
ja
and
outsb
dec
jge
add
repnz
cmc
lds
xor
rorl
inc
inc
jns
and
test
fistpl
rcl
pop
ret
icebp
repnz
je,pt
jp
pop
mov
fidivs
fdivs
sarb
xorl
std
leave
rcrl
inc
ljmp
add
sbb
je
fwait
xlat
rcl
lcall
jle
jecxz
ret
and
das
in
loope
jb
lcall
sbb
and
imulb
imul
dec
sti
mov
std
push
lret
mov
jmp
mov
jno
repz
scas
fs
mov
pop
mov
mov
repz
cmp
aas
jl
push
xor
mov
mov
jl
cmpl
inc
sahf
fwait
pusha
sbb
test
and
add
arpl
xor
fimuls
stos
lods
adc
outsl
in
sbb
add
mov
fnstenv
fwait
test
sbb
inc
sub
and
and
and
mov
mov
pop
movsb
das
fnsave
pop
cmc
sbbl
mov
mov
stos
fsts
sbb
scas
daa
dec
cli
add
cmp
mov
push
rorb
das
jbe
jp
outsb
fcomp
or
notl
insb
jne
mov
std
and
pop
or
xor
dec
sahf
jo
ja
outsl
test
fnsave
jno
xchg
cwtl
popf
push
xlat
pop
push
jnp
inc
dec
cmp
icebp
sbb
sub
adc
fwait
ret
xor
cmc
test
punpcklbw
loop
adc
inc
add
bound
lahf
jge
popf
pushl
loopne
repnz
cs
addl
mov
lret
out
cmpsl
shrl
cwtl
sub
repnz
jecxz
and
dec
scas
xchg
or
repnz
rorb
mov
repz
add
inc
fs
or
dec
push
mov
addb
mov
xchg
xchg
in
dec
push
movsb
lea
icebp
mov
push
in
dec
inc
les
push
popa
fcom
pop
rcrb
fdivr
dec
sbb
loope
add
mov
shll
or
xor
cs
fs
pop
inc
insl
lods
test
rolb
popf
push
pop
inc
xchg
sti
cmpsb
add
int3
arpl
mov
leave
sbb
mov
adcb
iret
xchg
xor
scas
dec
movsb
sub
and
icebp
hlt
jecxz
daa
adc
insb
and
dec
subl
and
imulb
loopne
fcmovne
push
in
jp
jne
fists
int
rcll
cltd
jecxz
sahf
test
jnp
aas
adc
pop
mov
rcrb
push
sub
adc
inc
sbb
mov
jns
popa
sbb
add
push
push
loopne
mov
jecxz
sub
in
jo
mov
jbe
div
ret
and
mov
out
ss
mov
repz
cmp
jae
jne
fcomps
or
inc
lds
outsl
pop
popa
push
movsl
xor
stos
or
mov
sbb
incb
in
cmp
ds
ss
sbb
inc
fidivl
les
sarl
add
jmp
xchg
mov
stos
ljmp
adc
jo
int3
pop
sti
das
insb
out
ja
mov
mov
jns
sbb
fcmove
mov
in
fistpl
mov
xchg
ret
setb
sbb
mov
popf
ror
rcrb
loope
addb
mov
xchg
xor
xchg
mov
cmp
fdivr
outsb
loope
adc
dec
int3
das
mov
dec
cmp
xor
mov
mov
adc
xchg
adc
mov
das
pop
andl
in
add
iret
add
vandnpd
adcb
pushf
imul
int3
mov
mov
jmp
rclb
mov
push
mov
aas
jae
pop
rcrl
push
jne
adc
fwait
stc
cltd
in
out
lret
mov
jl
push
in
into
mov
nop
insl
mulb
pop
pop
test
dec
mov
cmp
addb
fadds
jl
repnz
pushf
test
xchg
insb
pop
sub
fbstp
movsl
mov
pop
dec
call
dec
rcll
pop
dec
addr16
dec
mov
fiadds
cmpsl
fsubrl
cltd
imul
outsl
or
mov
mov
add
dec
pop
xchg
ljmp
dec
jmp
mov
jns
repz
aad
xor
les
jmp
lock
popf
jle
leave
sub
cmpsl
mov
std
ret
outsl
mov
jno
mov
movl
push
popf
les
and
jb
mov
sub
push
and
bound
mov
out
pop
cli
push
mov
loop
fwait
pop
sar
mov
mov
cltd
ret
shrl
or
sahf
fs
hlt
jl
add
idivl
sbb
pop
pop
fstl
in
xchg
inc
sub
rcrb
push
shr
mov
pusha
add
sbb
lds
mov
int
insb
out
popa
jns
and
dec
push
mov
fsubs
sub
pop
cmp
mov
loope
lods
mov
adc
stc
stos
sbb
dec
mov
out
mov
std
fstps
test
loop
pop
roll
add
lahf
imul
out
leave
rcr
insl
jle
sbb
and
and
sub
ja
push
sti
dec
pop
inc
jge
xchg
push
jo
mov
sub
je
loop
jb
push
inc
mov
rcll
aaa
sub
mov
and
adc
call
inc
jmp
pop
jae
loopne
loopne
lock
add
jge
or
lock
call
cmpsl
add
inc
xor
add
jnp
sbb
jge
pop
adc
sahf
or
loop
mov
ret
pop
out
and
cmp
fadds
pop
icebp
ror
movb
pop
jb
std
cmc
movsb
or
inc
flds
je
push
jp
jmp
sbb
in
xchg
out
cmp
icebp
leave
mov
rcrl
js
je
loop
std
push
add
dec
mov
leave
pop
out
xor
in
jae
xchg
xchg
and
ret
or
and
and
rcl
push
out
testl
jmp
inc
dec
test
mov
mov
out
in
xor
mov
xor
inc
sbb
aas
movsb
insb
into
cmp
cmp
mov
icebp
es
xchg
daa
fsubr
in
imulb
add
push
mov
arpl
cmp
and
test
loop
mov
pop
imul
xor
pusha
jno
ret
push
popf
push
jge
xchg
cmp
inc
std
int
movsl
subl
lods
fistl
call
or
and
in
scas
fdivl
ret
popa
std
push
cmp
sbb
mov
and
mov
push
or
cmp
mov
pop
insb
adc
or
adc
jns
aam
jo
fadd
jmp
out
sbb
sub
mov
push
dec
iret
jb
outsb
mov
inc
and
and
insl
xor
loop
push
insb
cmp
adc
movsb
outsb
loope
and
cmp
pop
out
mov
ljmp
inc
test
pop
out
inc
cmp
sbb
or
test
and
fcomps
jp
dec
dec
or
sub
lea
rcll
out
sahf
cli
jg
mov
addr16
jae
out
insb
mov
lock
jmp
sub
aam
enter
test
inc
sub
clc
jo,pt
cs
push
fsubs
lret
jge
jge
inc
pop
cmpsb
pop
shrb
pop
into
adc
ret
or
out
andl
sub
or
inc
inc
mov
shll
jp
shr
out
fwait
mov
jbe
out
mov
pop
daa
sub
sub
mov
fucomp
movl
xor
mov
xchg
lcall
js
mov
loop
je
mov
jae
repnz
push
subb
jnp
pusha
dec
dec
jbe
nop
jbe
in
mov
ljmp
es
test
and
adc
icebp
and
cmpsb
cwtl
inc
or
mov
xchg
jg
jo
pop
fists
cmpsb
add
mov
add
sub
je
loopne
sahf
mov
sbb
out
ret
out
arpl
insb
cmpsl
jg
fidivrl
pop
mov
pop
adc
add
pushf
lahf
or
aaa
ficompl
sbb
mov
addr16
pop
sbb
rcrl
pop
push
and
add
cmpsl
out
jns
rcll
adc
and
pop
bound
inc
xlat
into
in
data16
scas
add
clc
xchg
clts
mov
mov
adc
xor
pop
mov
adc
sbbb
fdivrl
push
movsb
push
pushf
push
jbe
imull
dec
cmc
mov
bnd
and
pop
cwtl
bnd
sbb
ror
mov
in
insl
mov
in
sub
ss
xor
pop
or
std
and
loop
dec
shrl
dec
push
lods
popa
jp
add
mov
int3
add
aas
out
lret
out
out
xorb
stos
push
add
push
fists
xorl
sahf
xchg
dec
nop
and
sbb
addb
lret
dec
les
jae
mov
adc
dec
sub
jle
inc
loop
bnd
stos
aam
jg
fdivl
cmpsb
lret
cmp
repz
add
popf
sbb
sti
push
div
xor
sbb
mov
mov
aaa
push
and
or
add
mov
pop
jl
repz
xchg
out
ljmp
mov
daa
lds
int3
xchg
or
dec
xchg
dec
jb
push
dec
mov
sbb
push
test
test
popf
lahf
je
pop
test
xchg
sbb
jp
nop
aad
add
popa
ljmp
pop
sti
insl
daa
and
pop
test
fcoml
popf
add
and
addr16
sub
mov
mov
insl
aas
xchg
or
pop
cmp
adc
push
lea
fsubrl
test
mov
stos
and
push
aas
das
or
push
dec
jp
pop
repnz
jbe
hlt
int3
aam
popa
and
fisubrl
stos
negl
out
xlat
cmp
cmpsl
xor
sub
push
daa
and
aad
ror
push
out
mov
mov
lock
pop
sbb
movsl
stc
add
jge
jge
call
push
cmp
jae
inc
jbe
leave
sub
cmpb
inc
insl
jb
ret
fidivrs
outsb
pop
es
loope
dec
mov
in
push
imul
inc
outsb
sti
cmc
into
mov
clc
rcl
scas
xchg
test
xchg
mov
dec
mov
xor
xchg
mov
jl
imul
test
jns
shld
pop
pop
clc
lds
lods
cli
adc
cli
out
xor
shufps
repz
jbe
ljmp
adc
sub
dec
sahf
es
push
push
cmp
testb
insl
or
and
out
repnz
sbb
sub
xchg
shll
or
clc
sarl
xor
pop
addr16
pop
push
shlb
jbe
lds
xchg
adc
lahf
jecxz
push
in
inc
add
push
lret
ss
ds
repz
test
sub
jbe
xor
xor
pop
push
sub
push
sahf
mov
cmp
push
mov
aaa
or
sub
adc
fisttps
xchg
clc
inc
in
leave
outsl
push
mov
aas
repz
lods
jp
push
pop
mov
sub
iret
mov
adc
or
mov
jo
mov
in
ja
mov
js
fstps
cmc
pop
int
xchg
adc
rcll
cmp
pop
adc
repnz
fwait
sbb
sub
xchg
arpl
or
jo
imul
push
int3
ret
jle
add
daa
insl
stos
or
xor
dec
and
psrld
addl
dec
lods
mov
ja
scas
xchg
adc
push
int3
jge
and
push
add
adc
add
push
and
add
add
add
ret
dec
jbe
xor
mov
mov
test
or
mov
fxch
int3
pop
inc
sbb
sbb
push
aam
sti
xor
sbb
xchg
out
inc
adc
test
jo
sbb
sub
and
mov
in
lret
cmpsb
jnp
imul
push
sbbb
sbb
scas
adc
lods
jl
or
inc
jne
sub
test
push
or
push
jnp
hlt
inc
sbb
jo
repnz
jmp
or
mov
cmpl
bound
fcmovnb
leave
and
xor
mov
and
and
push
fsubrl
out
push
mov
rolb
std
fisubrl
int
cmpsb
mov
add
xlat
or
add
stos
add
push
repz
and
adc
or
outsl
add
mov
jbe
mov
push
out
sbbl
push
mov
int3
je
adc
popf
adc
outsb
pushf
sbb
test
stc
adc
jno
jno
inc
out
xor
ja
xchg
mov
jns
imul
je
pusha
dec
int3
mov
add
fs
push
test
mov
fnsave
cltd
push
jb
or
repnz
fiaddl
sub
movsb
pop
mov
repz
add
addr16
mov
pop
les
sti
mov
lea
ljmp
jecxz
fbstp
or
or
les
mov
fidivl
pop
xchg
das
add
cli
push
push
mov
in
mov
mov
out
jno
sub
rcll
dec
add
inc
mov
add
or
call
xor
jns
lods
mov
je
testl
and
inc
push
hlt
pop
shlb
inc
data16
lahf
gs
int
push
jns
xchg
jbe,pt
xchg
xor
xor
xlat
cs
and
inc
mov
cmp
dec
add
lea
iret
cmc
dec
add
lock
gs
inc
fmull
insl
pop
mov
jno
mov
jmp
les
xor
mov
jns
xchg
scas
rcrl
js
in
data16
mov
mov
mov
push
test
sti
jae
pop
aam
enter
fimull
dec
cpuid
push
pushf
add
xchg
pop
jge
imul
ret
cmp
out
push
loope
mov
inc
pop
mov
dec
std
inc
jp
ret
mov
xchg
aad
nop
pop
sbb
push
push
adc
pop
sbb
mov
pop
loopne
out
jecxz
mov
movsl
push
notl
ret
and
popa
stos
sbb
push
sub
inc
inc
cwtl
push
fs
or
jge
roll
ret
mov
mov
adc
inc
jp
arpl
jb
cwtl
sti
mov
xor
xchg
or
sub
mov
adc
cmpsb
and
in
loope
shll
les
cmp
and
cmp
pusha
xchg
add
loopne
repz
int3
mov
adc
int
pop
sti
lret
dec
xchg
in
inc
enter
out
mov
add
jge
mov
outsb
mov
mov
push
inc
fdivrp
mov
dec
shr
loope
aas
or
adc
jb
adc
rcr
dec
or
mov
adc
sbb
pop
lea
gs
push
xor
mov
sub
inc
mov
ror
adc
aas
jg
pop
pop
push
ret
jns
xor
xchg
rclb
cmpsb
inc
shlb
pop
insl
cmp
mov
and
xchg
cmp
mov
dec
inc
fbstp
lret
dec
and
mov
mov
pop
mov
cmp
mov
push
dec
or
js
aam
fyl2x
jp
fiadds
out
rorl
icebp
jle
cmp
cmp
ljmp
or
push
xchg
add
mov
nop
pop
int
dec
cmp
popa
into
jae
jns
ja
fiadds
and
inc
mov
les
into
lds
pop
xchg
jge
pop
xchg
mov
mov
sbb
les
test
xchg
jp
mov
sbb
mov
scas
fildl
stos
pop
leave
pop
sti
rcrb
mov
mov
lods
int3
mov
and
jnp
pop
xor
jmp
sub
sbb
lret
jmp
mov
sbb
loop
jmp
decl
out
stos
int3
pop
xchg
lds
sub
rclb
loop
test
xor
icebp
daa
push
or
cmp
nop
add
movl
test
cmp
xchg
sub
daa
cwtl
dec
sbb
xchg
lock
push
inc
aad
adc
push
pop
pop
jb
dec
push
pop
cmp
in
add
add
scas
push
shll
cmp
sbb
cmc
cmp
pushf
insl
dec
sbb
imul
orl
mov
mov
mov
pushf
cltd
cmp
or
ss
sbb
mov
dec
sub
sbb
pop
xlat
ret
xor
cmp
dec
add
adc
inc
std
push
addb
and
jge
fstpl
repnz
subb
dec
inc
inc
outsl
adc
push
xchg
cs
ja
jl
loop
cmp
mov
inc
push
dec
pop
pop
jle
inc
test
or
inc
cmpsb
repz
dec
ljmp
gs
in
xchg
push
mov
sub
fs
cmp
sbb
rcr
adc
pusha
insb
jg
push
push
hlt
int
dec
sarl
in
cs
outsb
and
cmp
or
fcoms
inc
xor
xor
inc
loop
jne
mov
mov
xchg
push
std
pop
mov
adc
push
sbb
mov
leave
xor
jp
inc
mov
mov
pop
rolb
lahf
or
and
stos
imul
aad
dec
ret
or
xchg
xchg
push
mov
rol
arpl
movsb
mov
jg
nop
jge
pop
jmp
pop
sub
pop
cs
inc
shrl
xlat
xor
sar
pop
sbb
push
scas
dec
jbe
push
sub
cli
add
jb
mov
cwtl
cmc
and
mov
inc
int3
mov
bound
adc
ds
mov
into
fwait
jmp
mov
scas
pop
out
mov
mul
rolb
loope
les
aam
mov
mov
fs
cli
push
lds
inc
jmp
xor
cltd
cmp
fs
movsl
cli
std
lahf
je
outsl
add
nop
pop
ds
sub
cmp
fistpll
cs
xchg
je
test
movl
cmpsb
and
sub
ret
inc
push
out
mov
outsb
dec
loop
ss
sbb
jb
test
cmc
hlt
int3
cmc
xor
inc
adc
mov
lock
mov
cmp
imul
mov
in
bound
pop
jae
and
push
int3
mov
xlat
scas
daa
xchg
inc
add
and
xorb
sub
mov
push
dec
add
push
mov
add
mov
fwait
push
stc
mov
lods
add
sub
xor
jecxz
inc
aad
push
sahf
faddl
sbb
xor
and
into
push
lods
mov
pushl
popf
nop
jae
arpl
mov
pop
iret
rcr
mov
notb
jecxz
adcl
inc
cmpsl
pop
daa
outsl
imul
lret
fstl
jns
mov
ljmp
mov
aam
icebp
mov
adc
repnz
adc
mov
arpl
sbbb
and
mov
xchg
test
xor
mov
fcompl
lcall
inc
in
icebp
sahf
dec
addr16
push
jge
int3
and
sub
enter
notl
addr16
pop
decl
cmpsb
sub
sub
xchg
adc
xchg
mov
sub
mov
jb
pop
xchg
inc
and
imul
sbb
mov
add
in
push
shlb
xorb
sub
add
lret
inc
out
push
bound
scas
cmp
mov
push
push
lock
arpl
rolb
sub
stos
pop
rcrb
movsl
loop
push
outsb
in
push
inc
shl
and
dec
or
mov
repnz
adc
inc
arpl
pop
cmp
lretw
pop
xchg
xor
add
jne
dec
mov
xchg
adc
lds
lods
sbbb
ja
in
jl
push
daa
pop
imul
and
adc
jg
enter
in
and
fdivs
jecxz
fimull
pop
xorb
dec
mov
ja
jmp
sti
pusha
and
stos
cmpsb
ds
lahf
push
test
out
push
push
notl
test
push
cmpsl
mov
jb
cmpsl
scas
push
adc
jb
mov
pop
jae
mov
add
ss
in
std
pop
jp
mov
int
repz
pop
push
lods
add
sub
or
jmp
and
sbb
call
dec
cmp
mov
stos
test
lods
xchg
test
adc
push
mov
push
add
lods
xor
mov
adc
ja
pop
out
jle
out
mov
or
rcll
and
and
dec
jno
cld
sbbb
xchg
push
jl
inc
jge
pop
jo
fsub
popa
icebp
pop
xchg
popf
mov
xchg
cwtl
inc
loop
push
jp
or
inc
je
addr16
inc
int3
pop
hlt
hlt
cmp
ret
ss
mov
mov
mov
add
or
xchg
movsl
scas
and
and
cmp
adc
cmp
push
xchg
movsb
xor
mov
xchg
sub
mov
xor
inc
mov
in
sub
roll
ds
jmp
fwait
ljmp
aam
jl
xor
aaa
sbb
mov
or
adc
mov
xchg
ds
loopne
or
in
scas
je
jo
jo
mov
jp
dec
inc
in
mov
dec
adc
fdivs
cmp
hlt
mov
xchg
inc
push
mov
test
cmpsl
sarb
mov
cwtl
lcall
insb
push
pop
mov
jg
popa
dec
rcrl
or
and
push
and
pop
out
lock
lea
mov
xchg
movnti
xor
std
add
daa
lret
sti
and
adc
cld
pop
arpl
add
add
cmc
bound
ljmp
loopne
or
stc
movsl
mov
or
cli
jmp
push
push
inc
iret
dec
movsl
ret
idivl
test
mov
inc
dec
rep
dec
hlt
aam
or
fcomps
out
shl
or
cmp
out
jne
sub
addl
xor
inc
rcr
dec
inc
call
imul
clc
sbb
xor
insl
call
adc
sti
dec
push
push
fs
sti
rcrl
lds
int
decb
push
mov
mov
loop
sahf
push
xchg
mov
inc
movsl
xchg
aaa
pop
cwtl
cli
movsl
add
leave
jnp
xor
inc
cmp
cld
jle
leave
push
ljmp
arpl
out
lds
xchg
inc
sub
cmp
fistps
and
pop
mov
sbb
sbb
inc
dec
es
pop
mov
adc
scas
mov
int
lcall
pop
ljmp
fsub
jle
cmpsb
push
ljmp
inc
movsb
mov
cmp
cmp
sahf
cmpsb
cmp
testl
dec
aas
xor
jmp
adc
cmc
push
mov
lcall
es
mov
mov
idivb
cmp
movsb
sahf
sbb
jecxz
mov
lods
test
xor
daa
mov
and
js
out
addr16
aad
xor
and
shlb
adc
dec
pop
or
je
jmp
mov
cmp
leave
lcall
imull
into
push
pop
push
inc
pop
mov
pop
xchg
icebp
mov
pop
and
cmp
add
popf
sbb
cmp
bound
cwtl
lods
movsb
pushf
adc
jmp
loop
mov
cmpsb
inc
jge
push
scas
scas
add
push
leave
mov
movb
xlat
popa
mov
repnz
add
cmc
das
pop
mov
outsb
mov
mov
push
mov
rcll
add
dec
scas
sbb
jns
push
lods
pusha
lahf
movsb
mov
push
popf
imul
aad
fs
dec
cli
sbb
ja
cmpsl
stc
in
inc
adc
inc
fiaddl
outsb
xor
cltd
aaa
xlat
cmpsl
mov
fs
popa
into
jecxz
outsl
dec
shll
mov
vdivss
fwait
inc
inc
pusha
repz
test
adc
mov
loopne
bound
mov
lahf
adc
push
fmuls
out
in
cmp
int
dec
movsb
pop
xchg
dec
mov
cmpsb
dec
stc
loop
outsl
daa
jne
outsb
or
inc
and
xor
xchg
scas
fidivs
mov
sbbb
repnz
loop
idivl
mov
pushf
ret
or
insl
nop
je
mov
mov
xchg
adcb
fwait
pop
jbe
cmp
lock
hlt
sub
mov
fdivrs
ljmp
fwait
dec
in
out
jg
std
sti
mov
pop
loope
jbe
xchg
addl
lock
scas
inc
jge
push
mov
inc
bound
outsb
int
push
xchg
insb
cmpsb
add
xchg
movhlps
push
mov
pop
xor
pushl
xor
add
jmp
leave
lods
cmpsb
loope
addr16
adc
loope
fistps
aas
fwait
cld
outsl
dec
cmpsb
push
out
mov
cmp
andb
mov
cmp
iret
sbb
aad
push
nop
loopne
psubd
push
pop
ja
mov
mov
out
push
cmp
loop
jmp
or
shl
adc
pop
bnd
or
jne
jle
or
icebp
and
lret
mov
cmp
aad
xchg
push
sub
fwait
sahf
in
push
shrb
scas
movsb
dec
dec
notl
mov
sub
cmpsb
icebp
xchg
bound
adc
sbb
mov
loop
cmc
xor
scas
xchg
mov
pop
inc
les
xchg
pop
push
scas
mov
icebp
cmp
sub
xchg
pop
daa
xor
je
mov
pop
sub
pop
xchg
js
aaa
or
cwtl
adc
fs
jns
cmp
lret
mov
les
dec
jne
ret
sahf
lods
inc
push
rcrl
aam
insb
push
rcll
jb
add
mov
int
sti
push
sub
push
cwtl
fnstcw
out
mov
sub
mov
mov
nop
sub
out
pop
lret
xor
neg
jle
shlb
aaa
sarl
mov
stos
lds
pop
cmp
sbb
scas
add
dec
mov
pop
mov
inc
js
cmc
add
decb
mov
ds
sub
scas
push
int3
adc
sub
out
jne
aas
pop
cmpsl
jge
sub
in
cli
notb
xor
mov
mov
sub
pop
jmp
mov
dec
mov
jb
std
icebp
or
sub
mov
mov
and
enter
notl
lds
inc
enter
cmp
add
cmc
roll
sub
loopne
cmpl
pop
stc
mov
test
pop
jge
fs
dec
outsb
mov
lods
sbb
cmc
jge
pop
and
sbb
inc
daa
push
pop
mov
cwtl
ficompl
lea
shl
lea
iret
ja
dec
icebp
adc
pushf
cmp
xor
imul
mov
ret
fwait
pop
in
jb
enter
in
mov
mov
or
cmpsl
pop
pop
std
pop
jbe
fsubrl
sbb
aas
addl
xchg
fiaddl
je
adcb
imul
addl
inc
pop
sarl
or
mov
nop
dec
hlt
rcll
adc
pop
rcrl
fbstp
pop
jge
shl
xchg
adc
ret
pusha
das
mov
out
sub
mov
inc
aas
sub
shl
xchg
mov
mov
mov
test
push
in
xchg
je
shl
fdivrl
cmc
jp
jmp
sti
adc
sub
pop
xor
mov
mov
sbb
inc
cli
push
outsb
mov
scas
insb
dec
pop
mov
cld
xor
inc
push
ds
pusha
popa
test
push
popf
or
push
stc
inc
loopne
jne
jnp
ds
or
out
sbb
push
mov
and
shll
xchg
xor
test
adc
cli
pop
or
mov
nop
adc
mul
mov
pop
pop
and
idivb
rcrl
push
into
packuswb
cwtl
les
aas
inc
stos
lret
icebp
xor
fisttpll
push
andl
stos
add
stos
xchg
es
lea
test
add
lret
mov
adc
stc
adc
pop
push
das
test
int3
insb
adc
cld
push
pusha
sahf
sbb
fs
sub
insl
pop
ds
cmp
int
leave
test
sti
call
mulb
cs
es
push
xlat
sub
inc
scas
mov
aam
iret
int3
mov
xchg
push
xor
faddl
mov
movsl
inc
es
push
pop
fdivrs
call
shlb
mov
out
sbb
fwait
adc
mov
fcoml
aad
cmpsb
movsb
dec
outsl
sub
shrb
sbb
cli
cmp
aaa
sar
ret
sarb
dec
lea
pop
mov
orl
es
jns
inc
iret
in
sub
jb
add
dec
jmp
sbbl
insl
pop
loopne
in
add
add
pushf
or
mov
mov
lahf
pusha
dec
jle
aaa
int
ret
sbb
repz
mov
faddl
jg
xchg
inc
lds
adc
mov
stos
add
jb
xchg
mov
push
cltd
xchg
jmp
les
mov
jo
enter
sarl
bound
aas
loopne
add
jl
idivb
adc
jbe
push
inc
mov
movsl
or
mov
bnd
mov
dec
fisubl
sub
imul
mov
adc
decb
jb
icebp
inc
mov
mov
inc
pop
mov
adc
rorb
scas
sti
leave
pusha
out
fsubrl
aad
rcrl
mov
ficoml
pop
lea
xor
sbb
xchg
lret
sub
push
add
xchg
std
ljmp
sbb
rol
scas
push
stos
out
mov
dec
fcompl
add
or
cmp
jne
and
xor
lea
adc
js
pop
and
sbb
loope
add
test
mov
in
sahf
xchg
mov
jp
scas
dec
cmpps
lret
and
mov
xchg
scas
jb
dec
pop
push
arpl
cmp
push
jl
mov
xchg
sbb
leave
fiaddl
jp
lods
mov
or
call
mov
inc
fsubr
pop
xchg
test
ret
test
stos
push
loope
leave
inc
icebp
adc
push
daa
sub
movsb
lret
mov
add
out
imul
out
cmp
inc
adc
mov
jb
or
cmp
pcmpgtw
push
push
paddsw
adc
xchg
test
mov
cmp
mov
repnz
mov
jo
incb
mov
repz
ret
xchg
jecxz
lods
xchg
js
stos
daa
sub
in
into
mov
repnz
jno
orb
clc
adc
insl
cmpsb
loop
shl
sbb
scas
sub
fcoms
mov
mov
lcall
cmp
xlat
jno
sbb
push
dec
arpl
orl
outsl
mov
lea
aaa
dec
fnsave
xor
and
xor
adc
cmp
or
or
aad
push
cmpsb
aas
jg
mov
addr16
test
clc
cmp
inc
sti
repz
sbb
sbb
sub
pop
icebp
fistps
dec
push
dec
cmp
test
pop
mov
outsl
mov
inc
mov
dec
jne
ror
inc
mov
jl
insl
push
leave
pop
rcll
iret
mov
rolb
filds
pop
add
and
jmp
sub
out
pop
sbb
mov
dec
scas
and
imul
xchg
aam
ds
adc
clc
inc
cmpsb
xchg
lret
push
xchg
int3
cmp
pop
mull
cmp
cmpb
dec
mov
test
pushf
or
cmp
pop
test
dec
or
pusha
iret
or
xchg
xor
and
add
movsb
repz
mov
imul
gs
pop
inc
stc
fisubs
fwait
jmp
sbb
out
xchg
pop
pop
mov
jg
xchg
pusha
loopne
pop
inc
sub
xor
xor
ret
jo
outsb
xchg
xchg
pop
adc
add
js
push
lret
and
inc
lods
push
sbb
cmp
xlat
jno
fwait
pop
sti
das
xchg
or
inc
xlat
add
mov
cmpsl
jbe
call
ljmp
movb
daa
movsl
fildll
sbb
jp
add
mov
mov
das
add
push
lea
xor
pop
ds
orb
mov
pop
inc
ret
pop
jmp
adc
in
mov
cmp
xchg
rol
std
add
mov
xor
jo
inc
xor
sub
jno
xlat
pop
and
pop
stc
aaa
call
mov
scas
push
negb
test
ret
inc
sub
mov
out
test
cmpsl
daa
sub
movsl
roll
and
xor
daa
out
test
daa
sub
mov
daa
inc
mov
and
sar
push
push
pop
dec
lea
cmpsl
mov
test
push
ds
adc
cmp
push
repz
dec
aaa
andl
out
adc
out
xchg
or
mov
dec
movsl
lods
push
sub
mov
dec
dec
or
jbe
push
dec
xchg
out
nop
add
adc
lret
int
test
mov
bnd
aaa
dec
and
fmull
and
fisubrs
or
lret
jno
or
gs
push
adc
mov
ret
mov
je
cmp
mov
bound
sbb
ret
cmpsl
xchg
dec
mov
stos
ds
add
fdivrs
xor
jae
lods
inc
xchg
dec
mov
mov
mov
add
lcall
call
addl
pop
sub
dec
xchg
das
push
sbb
push
clc
xor
and
sbb
stc
push
lea
scas
jle
test
insl
ret
lods
stos
sub
into
inc
jne
and
nopl
mov
add
push
mov
sbb
push
xchg
jl
je
ljmp
xchg
cmp
mov
pop
insb
out
push
std
dec
dec
mov
test
jbe
scas
push
mov
outsb
std
jle
push
mov
repz
mov
push
add
or
pushf
pop
lds
jbe
or
iret
ljmp
jo
inc
mov
mov
push
fcmovnbe
fsubrp
sbb
leave
ss
sub
mov
aaa
add
leave
sub
or
daa
add
lahf
stos
mov
mov
mov
rclb
dec
or
sbbl
test
dec
stos
sub
fwait
add
and
inc
sti
aad
push
push
pop
mov
gs
lods
test
lods
cmp
or
lret
fwait
shl
cld
jae
cld
add
xorl
jo
lods
rcl
int3
xor
fldcw
inc
inc
shrl
subb
ss
sbb
loop
aam
cmp
lods
adc
sarb
mov
or
or
jle
sub
cmpsb
mov
push
xor
xor
pop
jle
vmwrite
mov
fdivrl
lret
adc
pop
mov
cmc
pop
jg
ljmp
dec
xchg
cmpsb
loope
dec
pusha
sbb
mov
lahf
or
or
mov
xchg
push
sub
and
inc
jmp
pop
push
es
fcompl
data16
inc
rolb
rcr
push
adc
lret
lods
loopne
inc
movntps
adc
in
loope
fwait
mov
js
dec
jno,pn
movsb
cmp
or
sub
and
mov
and
xor
data16
adc
pop
iret
add
cmp
or
int3
nop
pushf
test
psadbw
adc
shll
cmp
daa
jae
xor
ja
mov
cmp
dec
clc
loopne
pop
cmc
mov
addr16
pushf
daa
push
pop
adc
jae
xor
ds
push
loope
bound
mov
cmp
sarl
mov
sub
xchg
movsb
pop
sbb
test
gs
mov
loope
ret
push
mov
shll
ljmp
out
shlb
mov
or
jae
mov
mov
xor
imul
mov
stc
lret
in
loope
aas
hlt
aaa
mov
nop
fistpll
frstor
mov
mov
aaa
aad
iret
lods
imul
xchg
adc
outsb
xor
or
jl
inc
repz
mov
test
shl
call
pushf
jge
leave
xor
das
mov
das
aaa
pop
and
add
inc
out
pop
add
dec
or
push
filds
jmp
add
xchg
jle
aaa
shll
sbb
sti
mov
stc
cli
and
divl
fstl
sub
popa
xchg
mov
mov
dec
out
hlt
sub
mov
and
ss
in
add
pop
push
jbe
fstpl
add
adc
out
pop
std
inc
pop
loopne
adc
ficoml
push
dec
fwait
data16
sti
in
rclb
or
mov
insb
and
pop
dec
sti
js
lock
subb
fistl
stos
adcl
dec
inc
cmp
pop
hlt
adc
stc
test
or
lret
add
pop
in
imul
mov
lea
ja
fwait
cltd
push
cmp
mov
bound
pushl
jle
and
mov
lods
leave
dec
xchg
xlat
xchg
pop
push
nop
jecxz
push
or
aaa
adc
aas
lds
mov
inc
das
mov
mov
movsb
pushf
sbb
lds
ret
ja
push
push
sub
jae
push
lret
jp
push
stos
jmp
pop
rcl
push
lret
leave
mov
xor
jmp
pop
imul
outsb
iret
cmpsb
sub
sub
lods
aas
push
pop
push
xor
jne
sub
sahf
cmpb
imul
push
cmpsl
sub
inc
jmp
pop
push
push
push
cmp
adc
inc
mov
pop
push
rclb
mov
cs
pop
outsb
aas
sbb
dec
dec
xchg
test
mov
dec
jnp
test
jne
dec
les
mov
sbb
or
loope
mov
pop
jno
inc
lcall
xor
dec
mov
fldcw
daa
cmp
cmp
insb
lods
mov
jge
bound
and
in
outsl
outsb
mov
jmp
sbbb
mov
mov
out
jge
push
insb
test
and
lcall
push
cmpsb
cwtl
cmp
mov
dec
cwtl
shlb
push
mov
dec
adc
jmp
xchg
fisttpll
pandn
aas
test
loop
cmp
push
loopne
xchg
fidivrl
cmp
shr
in
adcb
dec
inc
lcall
sbb
xor
mov
aam
popf
sbb
enter
xor
cli
int3
pop
xchg
add
pop
pop
daa
mov
out
mov
inc
sbb
lahf
lea
cltd
bound
lods
adc
mov
psadbw
dec
lcall
out
cmc
jae
jmp
xchg
jmp
shlb
jg
pop
popf
or
jb
enter
inc
inc
roll
adc
sbb
cmp
cmp
xchg
add
loope
push
mov
mov
cmpsb
shl
setno
add
in
orb
dec
push
mov
in
push
pushf
out
ja
fwait
rol
icebp
movsl
out
mov
mov
decb
lea
jg
mov
jae
loop
into
cmc
xchg
mov
insl
adc
push
mov
inc
rcrb
in
and
mov
sub
pop
mov
cmpsl
adc
out
ret
psrld
xchg
lcall
or
popf
sub
ret
mov
fcom
jne
dec
xchg
adc
push
adcl
and
mov
adc
cs
push
cmp
add
and
arpl
loop
mov
inc
xchg
shll
mov
jmp
xor
jbe
in
mov
cmpb
ret
push
adcb
out
or
pusha
addr16
mov
out
push
or
mov
xchg
fldl
cmpsl
bswap
test
cmp
mov
cmp
cmp
xor
jg
push
adc
sbb
sub
test
and
xchg
xchg
mov
cmp
or
aas
pop
push
mov
pop
push
inc
mov
lret
fs
and
insb
xchg
imul
out
scas
in
outsb
shll
ret
push
into
adcb
lods
sti
fwait
jle
call
push
leave
inc
push
push
mov
leave
push
xchg
or
rorb
dec
icebp
clc
mov
fidivs
cmp
or
gs
rol
adc
cs
xor
add
mov
mov
inc
fistl
inc
popf
and
pop
inc
add
xacquire
xchg
mov
int3
mov
rorb
xchg
push
pop
das
rclb
shlb
mov
enter
je
and
cmp
inc
push
dec
mov
dec
cmp
andb
sbb
push
push
or
aad
je
pop
sti
mov
icebp
lahf
and
iret
imul
xor
push
pop
sbb
xchg
aas
sarb
jecxz
push
pop
fnstsw
rorb
aad
mov
xchg
fiaddl
xchg
jp
lret
jo
add
lcall
xor
xor
cs
sbb
or
or
shll
jmp
cmp
cmc
mov
add
jg
pusha
test
jne
fwait
xorl
push
lea
ljmp
test
loop
out
lcall
and
cmp
add
jb
sarb
pop
mov
iret
fcmovu
or
fisttpl
xchg
mov
xchg
out
scas
shlb
mov
pusha
stc
push
ljmp
ja
ds
pop
lar
sbb
repz
mov
cwtl
and
and
inc
faddl
adc
add
sbb
push
out
out
jl
mov
jle
mov
nop
sub
int
je
cmp
sar
sbbl
or
dec
hlt
cmp
icebp
inc
mov
add
fstps
push
imul
cmpsl
push
lcall
and
adc
stc
dec
mov
mov
mov
int
pop
popf
and
push
adc
inc
sub
jge
lcall
mov
fisttpl
adc
lds
mov
into
pop
jmp
dec
xchg
repnz
arpl
adc
and
movhps
jle
sub
addr16
or
jnp
xchg
movsl
mov
outsb
sti
fldenv
sbb
xor
icebp
test
dec
loopne
push
iret
and
lock
mov
shr
outsl
cmp
or
loopne
and
xor
fwait
nop
dec
jmp
dec
iret
xor
xor
arpl
iret
scas
pop
xchg
lret
rcrb
xor
jno
sub
ss
pushf
mov
xor
dec
bound
inc
xchg
movsb
push
jo
in
dec
lret
scas
mov
cltd
jl
daa
xor
iret
aad
fistps
lcall
inc
jnp
shlb
pop
jl
xor
arpl
cmpsl
sti
repz
pushl
push
xor
cmp
mov
dec
enter
fcoms
fwait
mov
adc
aas
push
xorl
das
loop
sbb
in
mov
adc
pop
or
push
clc
fiadds
xor
mov
fwait
pop
mov
fstpl
mov
or
cltd
push
mov
test
add
mov
sub
dec
sbb
inc
out
dec
push
pop
es
xor
int3
arpl
mov
jg
push
and
ss
xchg
xchg
inc
ss
sti
jmp
lock
mov
sub
mov
stc
xchg
jns
fsubrs
push
into
movsb
cli
loopne
popa
cmpsl
inc
jg
sbb
mov
and
inc
or
jl
js
push
mov
pop
xchg
lret
jecxz
rcr
sbb
jae
dec
jo
dec
dec
xor
sti
mov
loope
sub
mov
mov
cmp
ds
subb
into
popf
or
xor
je
sarb
test
enter
sbb
rcrb
add
bnd
lods
jne
out
pop
add
mov
das
or
and
movsb
inc
or
cld
mov
cmpl
cmpsl
push
adc
pop
or
add
lods
and
push
rcl
je
cltd
or
ret
jmp
add
mov
xor
leave
sub
add
mov
out
cmp
fsubp
xor
ffreep
pop
btr
nop
jo
cmpsl
cmp
cmp
xchg
ret
xchg
cs
adc
jg
cmp
mov
outsl
fstpt
pop
push
repz
and
inc
movsb
lods
xchg
cmpsl
loopne
lcall
mov
stos
daa
mov
jnp
jnp
and
lods
hlt
and
insb
jns
sbb
adc
es
mov
pop
in
inc
adc
mov
imul
lret
mov
in
in
ret
jl,pt
bound
sub
jp
std
dec
out
std
or
dec
inc
jecxz
push
leave
in
mov
dec
int
fdivr
adc
add
mov
adc
les
xlat
inc
rorb
mov
cmpsl
mov
inc
in
popf
dec
and
or
jae
aam
cmp
jle
push
shlb
ja
and
cld
clc
ds
pop
out
jecxz
xchg
jnp
es
push
lcall
xor
jno
pop
inc
sbb
orb
dec
jne
and
hlt
xchg
movsl
rcll
daa
dec
or
sbb
mov
push
adc
ss
pop
call
jg
adc
mov
xchg
mulb
xor
fiadds
imul
sbb
fnop
ds
insb
cmpsb
sarl
out
aam
mov
nop
fistpll
jns
mov
cwtl
std
movsb
outsl
outsb
and
sahf
add
out
repz
add
jbe
push
push
mov
push
jmp
sbb
pop
out
mov
jne
rcr
out
dec
jecxz
lods
test
mov
jmp
orb
scas
fldl
fnstcw
subb
loop
mov
in
push
ds
push
cmp
mov
aam
aad
clc
mov
test
mov
xchg
inc
fildl
test
add
mov
push
scas
or
out
loop
je
adc
or
cmp
popf
ret
xor
cmp
push
ja
xor
xchg
fwait
adc
jne
ds
test
out
test
aad
aaa
jge
ds
push
cmp
orb
ss
call
lahf
adc
sbb
push
negl
js,pn
fiadds
or
push
hlt
or
lods
shll
xlat
dec
mov
negb
stos
mov
mov
movsb
mov
mov
icebp
cmc
add
icebp
jg
cwtl
xor
scas
jmp
lea
mov
cwtl
adc
cmpsl
ds
loopne
lock
add
hlt
test
xor
mov
repnz
sub
cmp
daa
mov
cwtl
cltd
hlt
fucomi
mov
push
sub
pop
fsubrl
jle
sbbb
pop
mov
das
push
dec
cwtl
stos
cmp
in
sub
fidivs
xchg
loopne
xchg
pushf
sub
inc
aaa
sub
push
insl
push
jg
fs
sub
xchg
out
cmpsb
lcall
aas
fwait
mov
int
aas
dec
xor
lret
mov
cltd
add
cmpsl
mov
dec
sbb
mov
xor
add
inc
loop
push
test
or
push
repnz
adc
mov
mov
jbe
or
cltd
test
fwait
pusha
js
or
pop
xor
or
insl
xor
jmp
dec
fnstcw
mov
mov
adc
insb
dec
lret
push
mov
fstps
mov
popf
lahf
shl
lock
mov
call
mov
add
imull
xor
fwait
pop
jnp
cli
lods
fdivrs
pop
aaa
push
lock
mov
cmp
sti
aam
jmp
cs
sbbl
xchg
arpl
lret
add
push
mov
das
scas
cmp
stos
xchg
in
cmp
andb
sub
sahf
xorl
add
or
adc
inc
sbbl
mov
mov
dec
sub
cmpsl
mov
loope
shrb
jno
mov
jle
stc
inc
hlt
mov
mov
stos
scas
or
pop
add
cmp
sub
add
mov
and
and
movsb
jno
lock
mov
xor
aad
lret
adc
daa
insl
xor
jge
adcb
in
mov
stos
je
das
pop
pop
outsb
test
enter
imul
push
and
cmp
push
jmp
pop
sbb
lret
adc
jmp
xor
pusha
inc
test
test
incl
int
imul
fisubrl
pushf
xor
add
stos
arpl
enter
in
ficompl
mov
xor
sahf
outsb
rclb
lock
mov
xor
cmpsl
cmp
mov
inc
cmp
mov
dec
mov
add
mov
incl
inc
fnsetpm(287
cmpsb
xor
dec
dec
jb
mov
notl
insb
jae
leave
sahf
std
or
xor
cs
bound
ss
int
sbb
sarl
test
lret
sub
cld
mov
xor
xchg
test
rolb
sub
repz
in
push
dec
iret
cs
mov
xchg
sti
cmc
push
repz
cli
sti
gs
movsb
sub
imul
inc
or
mov
pop
sahf
mov
push
push
dec
cmpb
fcomps
repnz
push
ret
fstpt
sarl
sti
into
push
fcoms
lods
mov
pop
popf
xchg
loopne
aas
pusha
push
jb
mov
xchg
or
sub
jno
pusha
mov
daa
loop
imul
xlat
aas
sbb
and
aad
rcrl
cmp
or
jne
ljmp
rorl
ror
pop
adc
lods
bound
sub
xor
leave
sbbl
addb
jno
mov
icebp
mov
cwtl
xchg
rorb
push
icebp
xchg
dec
sbb
push
jbe
inc
fldcw
int3
fcomi
pushl
add
fcompl
imul
xor
sahf
push
test
outsb
arpl
inc
jge
mov
inc
imul
mov
xor
jbe
xor
mov
mov
outsb
movsl
add
sarb
push
push
rcrl
outsb
cmpsl
out
sbbl
cmp
sbb
push
sbb
jb
fdiv
loopne
iret
push
mov
add
mov
sti
push
fistpll
push
cltd
mov
xrelease
cwtl
clc
xor
xchg
xchg
inc
sub
add
es
add
inc
cltd
mov
jns
inc
mov
inc
data16
jg
cmpl
or
sbb
mov
fadd
cs
ja
cmpsl
aas
jle
inc
sub
in
xchg
cmc
mov
cmp
daa
jno
loop
pop
mov
cli
les
popa
push
sarb
push
les
inc
insb
es
lahf
cmp
sub
in
dec
je
icebp
push
test
xlat
sub
push
cmp
rcrb
les
clc
lret
ret
mov
mov
es
mov
cli
pop
xor
popa
cmp
xlat
test
int
adc
sbb
cmp
mov
push
imul
inc
and
in
addr16
mov
or
int
jl
sub
push
arpl
daa
aad
xchg
mov
push
jae
sarb
mov
mov
jge
and
cmpb
cmp
sahf
inc
movd
fsubp
xchg
xchg
out
enter
cmp
jp
jbe
test
fidivl
lret
inc
outsb
enter
lds
jo
test
mov
inc
sbb
add
inc
adc
push
mov
mov
jl
pushf
in
inc
scas
or
int3
clc
sarb
fimuls
push
ja
sbb
push
cmc
mov
xor
xchg
pop
mov
mov
dec
popf
cmp
xchg
push
stos
ficomps
mov
sub
mov
fidivrl
cmpsb
shrl
jp
test
cltd
lds
incl
cmpsl
add
fisubl
adc
fidivl
jo
aaa
dec
out
in
imul
call
xchg
inc
clc
sbb
dec
cmpsl
and
loope
cmp
cmp
cmc
mov
xchg
mov
lock
and
xchg
jnp
xor
or
hlt
xor
sub
ja
xchg
push
push
or
lret
enter
or
std
cmp
sti
or
adc
and
and
jbe
mov
mov
test
idiv
inc
mov
sub
incl
lret
orb
jb
out
fidivs
ja
lret
mov
addr16
scas
mov
fsubr
inc
cmp
das
xchg
push
push
scas
scas
cmpl
xchg
sbb
push
rcrb
sbb
cltd
or
push
adc
pop
push
inc
mov
or
pop
cli
lods
or
cmp
ret
outsb
not
push
lods
clc
xchg
mov
cmpsb
cs
inc
and
dec
cli
in
sub
push
mov
add
cwtl
inc
xchg
int
or
or
pushf
daa
and
jge
pop
jg
nop
jb
dec
out
lret
push
push
rorl
pop
rcrb
outsl
dec
mov
ljmp
mov
mov
mov
cmp
jle
dec
dec
mov
cli
out
lds
jle
es
adc
push
xchg
sub
cltd
pop
mov
jae
mov
dec
adc
xchg
mov
add
in
clc
sahf
hlt
pop
inc
mov
mov
dec
imul
movsb
mov
inc
sarb
pop
push
cmpsl
or
push
aas
aam
shll
lret
mov
ljmp
xchg
jl
out
jl
pop
xchg
push
imul
fnstenv
cltd
sahf
pop
in
popa
push
stos
aad
inc
sbb
and
inc
pop
popf
add
pop
cmp
mov
scas
addr16
imul
imul
addb
in
lds
ja
stos
add
shl
insl
mov
fs
xchg
int3
cmp
stos
jnp
adc
nop
scas
cmp
dec
cli
jp
lahf
pop
out
repnz
mov
pop
lcall
dec
gs
xor
in
and
sbb
jg
or
int
push
xor
insb
test
push
into
push
popf
inc
mov
jo
das
outsl
xchg
int
int3
pop
mov
mov
mul
mov
ficoms
add
mov
pop
mov
sbb
mov
in
dec
mov
js
inc
and
inc
int3
hlt
inc
mov
mov
or
popa
ds
imulb
inc
adc
mov
push
jl
outsb
pop
mov
inc
leave
pop
fadd
cmp
dec
in
and
rcl
push
test
aas
sbb
into
push
mov
into
sub
stos
nop
fistpll
lahf
jno
xchg
imul
sahf
xchg
xor
push
out
inc
sar
mov
mov
pop
cs
insb
sbb
mov
cs
rcrl
mov
fnstenv
pop
fmulp
ds
pusha
pop
movb
sti
test
out
cmp
cmp
out
push
sub
sbb
pop
sub
push
fcomps
mov
inc
fiaddl
and
loope
mov
outsb
mov
sbb
mov
jns
add
ja
in
mov
cmp
push
inc
adc
xchg
sbb
jecxz
xor
outsb
inc
mov
fnstcw
jnp
push
cli
add
fbstp
inc
sbb
aam
mov
sbb
pop
inc
and
rcrl
shll
pop
sub
push
jl
loop
xor
pop
andb
pop
cmp
enter
test
mov
inc
seto
lods
xchg
leave
movsl
lock
jecxz
sub
sub
mov
jge
dec
fisttps
arpl
mov
pop
int
or
int
dec
stos
cmp
aaa
mov
test
negb
dec
sbb
xor
push
mov
adc
les
iret
adc
and
push
mov
test
fisubrs
mov
sbb
es
adc
jmp
int3
mov
dec
fsubr
push
pop
js
and
xchg
push
sti
xchg
gs
lcall
and
mov
fsubr
or
lock
xor
inc
xchg
loopne
and
jo
int
stos
sbb
fsubr
and
jecxz
mov
jns
lret
ret
fwait
sub
or
fcmovbe
jno
icebp
xchg
in
jmp
adc
dec
daa
dec
fnsave
outsl
xor
and
or
mov
push
add
mov
mov
into
addl
push
pop
sbb
inc
nop
frstor
fcmovbe
xchg
dec
adc
jg
or
inc
loopne
dec
imul
push
push
push
sbbb
xchg
adc
mov
fisubrl
dec
mov
rcll
fwait
and
in
mov
pop
loop
mov
push
xchg
lock
mov
shl
xor
mov
add
pop
test
dec
mov
mov
inc
push
std
mov
xchg
adc
mov
aaa
push
push
cwtl
pop
xor
pop
adc
or
sahf
lcall
cmpsl
jne
in
pop
imull
xchg
iret
test
lret
data16
out
push
jle
jo
enter
lock
ja
rorl
and
xor
nop
inc
lret
aaa
adc
xor
mov
lcall
mov
daa
mov
and
nop
inc
mov
stos
jmp
sbb
sbb
data16
adc
out
and
xchg
int3
mov
daa
dec
mov
into
or
xchg
xor
mov
xchg
xchg
or
js
cmp
mov
iret
cmp
fcmovbe
mov
loope
pop
dec
leave
test
dec
popa
pop
pop
nop
push
adc
call
push
js
sub
dec
pop
mov
or
mov
repz
ja
mov
test
xchg
and
imul
hlt
std
push
mov
jg
std
mov
pop
aas
mov
fwait
sbb
bound
repz
or
lret
icebp
movsb
shlb
jne
push
jae
leave
gs
push
sti
sbb
adc
scas
mov
jl
inc
lea
jnp
icebp
aaa
sahf
cmp
xchg
pop
xchg
or
add
or
pop
bound
add
sub
sbb
je
rcrl
popf
fwait
or
les
pop
arpl
mov
ja
movsb
push
mov
mov
cli
sbb
push
pop
insl
popf
mov
inc
or
dec
mov
loope
lea
pop
stc
stos
push
das
imul
inc
or
xor
push
fwait
pushf
testl
jp
push
or
iret
pop
add
rorl
hlt
sbb
push
mov
mov
cli
fisttpl
mov
aaa
js
pop
push
add
in
aad
ret
nop
je
outsl
popa
scas
loop
addr16
sub
add
mov
cli
sub
stc
jl
pop
out
mov
jb
jo
loopne
pop
jecxz
dec
in
cltd
mov
data16
mov
push
ljmp
aaa
mov
cmp
lcall
dec
mov
dec
cmp
pop
or
sbb
pop
roll
dec
inc
out
jbe
xchg
xchg
pop
or
inc
jl
sub
pushf
loopne
mov
rorb
lods
and
sub
in
ss
jp
mov
iret
jmp
xchg
fldl
loope
dec
pushf
xor
fcmovb
scas
sbb
adc
nop
xchg
cmp
fsubr
rcll
mov
je
sbbb
outsl
bound
xchg
sub
sub
imul
stos
mov
jbe
jge
and
inc
sub
scas
test
data16
popf
push
movsb
out
in
jg
in
clc
xchg
repnz
push
in
sbb
sub
and
cmpb
arpl
inc
lock
icebp
loop
xchg
dec
sub
rcll
add
ret
int
mov
and
icebp
add
mov
ds
imul
outsb
outsb
xchg
sahf
mov
jnp
sbb
add
or
jg
inc
in
ss
insb
leave
push
jge
ss
adcb
shll
dec
add
pop
call
mov
or
adc
inc
iret
pop
je
sub
nop
cli
shlb
or
dec
and
out
or
rolb
stos
sti
add
xchg
jl
and
ss
js
jge
out
sbb
sbb
mov
add
sub
repz
xchg
js
xchg
ss
shr
inc
lds
fdivr
enter
int
daa
lods
mov
inc
or
jge
adc
and
jecxz
xchg
mov
divl
fildl
rcrl
xchg
lea
mov
xchg
js
outsb
pop
enter
pop
and
mov
aas
jp
push
push
fisubs
scas
adc
inc
ss
mov
fstpl
inc
imul
addl
int
shlb
and
adc
nop
das
gs
adc
inc
pop
lret
sbb
mov
notb
inc
pop
flds
scas
jmp
jle
jae
dec
aam
gs
jb
ffree
je
je
lods
sbb
in
adc
inc
gs
ljmp
cmpsb
aad
test
mov
and
cmpsl
test
xchg
adc
pop
decl
loop
gs
xor
sbb
jge
or
cmp
dec
lahf
cmp
cmp
push
test
push
popa
data16
push
xchg
dec
stos
cli
sub
mov
out
jae
push
in
stc
jmp
mov
cmp
out
cwtl
mov
mov
hlt
popa
sbb
aaa
jmp
xchg
ds
xchg
enter
repnz
addr16
mov
mov
cld
add
pusha
mov
fisubs
sbb
vmwrite
out
stc
lds
pop
fsubrs
pop
mov
shll
xor
sbb
mov
cwtl
cmpb
ja
nop
sub
or
and
test
ds
jg
and
lcall
sbb
jmp
out
push
add
insl
aam
clc
loop
xor
test
lahf
cld
sbb
arpl
dec
call
mov
mov
pushl
imul
jb
pop
negb
gs
sti
subl
sub
mov
jae
int
test
pushf
push
pop
push
add
jmp
inc
jp
jp
xchg
jae
sbb
enter
lret
mov
ret
and
pop
into
adc
fsubrp
int
in
sbb
pushf
test
imul
mov
and
test
in
fldt
inc
sub
sbb
jecxz
mov
xlat
int3
mov
sub
and
test
and
int3
adc
es
cli
dec
xchg
sub
cmp
jmp
mov
fisubl
inc
sarb
push
push
xchg
lock
add
xorl
jb
or
mov
push
les
fisttpl
jecxz
mov
adc
ss
cwtl
pop
sahf
negl
or
push
adc
fdivr
adc
mov
mov
and
cmp
fucomp
mov
ret
enter
xor
test
push
cmpsl
jmp
and
mov
js
loope
test
test
dec
push
cmp
jo
and
test
mov
fwait
sbb
out
mov
loopne
pop
fidivrl
in
pop
cmp
xlat
setl
icebp
daa
addr16
and
cli
xchg
xchg
fwait
dec
testb
jae
std
inc
add
aad
mov
and
push
lcall
insb
inc
cmc
mov
inc
stos
cs
pop
push
mov
jp
sub
mov
cwtl
insl
inc
into
sbb
movsl
sbb
aaa
shll
xchg
jo
cs
add
mov
das
push
jno
push
stos
rolb
mov
fadd
mov
fsubl
movsb
ror
test
xor
loope
cmc
aad
dec
push
fcmovnb
imul
popa
loope
imulb
mov
jo
into
cltd
cmp
orb
mov
jo
cltd
arpl
mov
mov
jp
add
push
or
scas
pop
xchg
call
mov
and
pop
pusha
testb
mov
xchg
jnp
mov
arpl
ja
cmc
loopne
test
mov
in
pop
mov
and
adc
ss
cmp
sub
jnp
inc
aas
dec
and
cmp
dec
push
in
inc
aas
daa
jns
daa
fwait
lock
pop
cli
pop
jle
mov
rcl
or
int3
jo
jno
push
hlt
inc
cmp
div
jnp
fisubrl
clc
xchg
jb
int
mov
fidivl
pop
fistpl
mov
fdivrl
or
mov
arpl
cli
sarl
out
icebp
jmp
xchg
mov
xlat
cmp
adc
sub
out
sbb
push
mov
repnz
xor
or
jbe,pn
mov
and
scas
scas
ret
push
or
aas
or
loopne
jge
and
xchg
js
push
mov
loop
fists
xor
jne
jge
jle
fwait
pushf
pop
out
sub
jge
mov
add
and
shlb
pusha
jp
or
cwtl
nop
out
pop
repnz
insl
popa
push
cwtl
or
cmp
dec
or
dec
inc
das
sbb
mov
loopne
sti
out
jmp
sahf
test
xor
push
push
es
mov
jg
mov
push
adc
lds
add
jg
push
xchg
and
test
jle
test
cmp
ficomps
call
pop
jbe
xchg
inc
sbb
addr16
aad
or
add
jmp
push
jle
sub
and
mov
lods
movsl
adc
fiaddl
iret
popf
cmpsl
aad
adc
lret
cmpsb
js
mov
inc
jns
or
push
mov
dec
jno
in
out
jbe
pop
jnp
push
fimuls
out
xor
push
mov
addr16
xor
pop
sub
rol
mov
cs
mov
inc
sub
dec
sbb
cmp
leave
out
jae,pn
stc
sbb
popl
movsb
dec
fidivs
fmull
imul
add
push
mov
loope
mov
dec
adc
cmc
adc
lods
adc
nop
inc
push
inc
sbb
clc
out
jne
das
fmulp
add
fyl2x
cltd
jne
add
jmp
leave
mov
lds
loope
mov
sbb
loope
mov
lret
pop
stos
inc
mov
mov
fimuls
mov
dec
push
mov
add
cmpsb
popf
shl
jl
leave
je
leave
into
and
fistpll
test
ret
fwait
cmp
jne
push
sti
mov
push
in
stc
outsb
xchg
adc
cli
mov
sbbb
pop
js
add
dec
movd
push
repnz
fsubrl
push
loope
aaa
test
or
mov
mov
dec
les
inc
xchg
mov
test
ja
adc
lock
sub
pusha
mov
fs
push
insb
add
inc
xchg
outsl
in
sbb
bound
aam
sar
add
shl
adc
notb
mov
jb
pop
and
ret
dec
lock
fists
sub
xchg
call
lods
xor
mov
inc
add
mov
inc
add
adcb
ret
repnz
push
pop
pop
mov
sbb
push
add
mov
cmp
rorb
mov
dec
push
call
mov
repz
cmpsl
pusha
add
rorb
cld
xor
lock
fisubrl
or
cmp
xor
inc
pop
pop
in
mov
inc
addl
push
pop
fisubrs
or
ret
mov
mov
mov
in
push
pushf
mov
inc
mov
push
popa
jmp
popa
imul
out
clc
jb
es
cmp
test
cld
or
mov
dec
pop
sub
inc
mov
jae
push
or
jno
rorb
in
out
arpl
inc
push
and
cmp
data16
jb
data16
repnz
in
mov
out
in
xlat
mov
mov
test
dec
xor
sbb
adc
inc
test
stos
sahf
roll
jmp
mov
push
lods
scas
jne
das
lods
jne,pt
mov
lods
mov
adc
js
jno
daa
push
xchg
insl
js
cvttps2pi
daa
movsb
ja
dec
or
adc
mov
cmpsb
pop
jmp
or
out
and
aad
rcr
das
inc
out
xor
jo
repnz
jg
jo
mov
fistl
dec
loope
adc
lahf
jne
in
out
out
xor
inc
shlb
sbb
inc
mov
jl
mov
xchg
ljmp
in
mov
jl
inc
inc
add
add
sbb
jo
add
clc
push
shll
push
mov
cmp
add
repnz
jmp
les
inc
add
adc
fmulp
fdivrp
sub
mov
add
add
xchg
xor
lds
test
adc
dec
shlb
imul
add
sbb
sbb
sbb
repnz
lret
icebp
sbb
push
ret
fbld
xor
fwait
jo
aaa
adc
cld
mov
subb
test
pop
ret
andl
scas
mov
pop
sub
lahf
sti
jg
shrl
js
push
sbb
popf
or
jbe
lods
xorb
mov
push
repnz
leave
push
rcrl
orb
lahf
sbb
xchg
jno
pusha
jb
negl
sub
sub
aaa
test
shll
mov
bound
repz
and
lods
mov
into
test
in
push
add
sbb
rclb
in
insb
popa
inc
inc
fcmovnbe
xchg
push
xchg
pop
xchg
rcr
inc
add
dec
popf
repnz
push
jno
sub
out
pushf
cmp
dec
lea
imul
sbb
mov
lret
sub
dec
sbb
mov
sub
jle
pop
dec
adc
add
imul
sahf
leave
movsl
pop
dec
fcmovnb
icebp
aad
sbb
aaa
es
daa
xchg
mov
or
dec
and
das
jp
and
mov
mov
outsb
jbe
pop
pushf
dec
les
je
push
xor
test
imul
adc
movl
mov
fisttps
je
cmp
lcall
dec
mov
mov
test
rclb
jp
shlb
sub
call
hlt
out
popa
mov
or
cs
lahf
shrb
inc
dec
xor
std
call
push
insl
or
cwtl
add
icebp
adcl
push
mov
test
int
imul
cmpsb
pop
xor
add
cmpsl
mov
jl
push
out
jnp
xor
or
cmc
mov
leave
sbb
pop
push
sti
lret
test
fnstsw
cmp
dec
imul
mov
mov
xchg
shlb
loope
je
xchg
mov
and
cld
ja
dec
jmp
aas
adc
dec
mov
jns
cmp
push
out
sub
jg
xor
aas
or
jnp
adc
add
sub
mov
push
mov
popa
mov
sub
adc
adc
nop
loopne
out
pop
test
incb
ja
mov
or
sbb
mov
jg
popf
call
sbb
fisubrl
mov
inc
jmp
jmp
xlat
repz
or
int
aaa
fwait
sub
ljmp
sbb
inc
xchg
daa
in
imul
lods
lds
fs
cmp
das
imul
pop
mov
jmp
xor
pop
je
dec
mov
and
jecxz
mov
ret
push
and
ljmp
xorb
mov
lcall
push
inc
xlat
pop
push
push
xor
std
in
lret
fidivrs
iret
fucomp
mov
sar
out
mov
xchg
imul
adc
pop
cmpsb
lret
decb
push
pop
popa
les
adc
je
mov
rorl
xor
xorb
dec
mov
insl
push
mov
dec
jne
lcall
mov
cmp
jnp
popa
sub
cmp
iret
or
or
gs
cmc
add
mov
inc
and
push
adc
mov
out
rcr
mov
and
adc
sbb
and
inc
or
imul
test
in
divl
jne
ljmp
ret
sub
ljmp
and
stos
pop
push
and
dec
push
pop
cmp
pop
addr16
ja
in
mov
dec
push
xor
sbb
imul
sti
sub
sbb
fiaddl
ret
inc
lea
mov
dec
and
jmp
sub
push
sub
push
sub
pop
add
jp
mov
lock
sub
mov
stos
inc
fildl
xlat
add
pop
mov
test
add
pop
js
jge
cltd
sbb
inc
adc
stos
lods
mov
iret
daa
push
cmp
sub
pushf
pusha
push
jbe
dec
hlt
xlat
cli
adc
test
mov
outsb
or
jnp
insl
cwtl
jg
dec
dec
cltd
mov
push
mov
xor
leave
adc
mov
cmp
mov
rcrl
scas
push
xchg
cmpsl
inc
mov
xor
sbb
mov
mov
out
adc
adc
sbb
hlt
sti
inc
jnp
or
movzbl
call
inc
out
mov
int3
adc
test
push
sbb
sbb
xchg
inc
cmc
inc
cltd
ud2
jns
xchg
inc
pop
push
scas
jge
in
push
push
add
popf
cmp
jg
or
imul
mov
popa
out
insl
rclb
mov
mov
or
push
mov
out
pusha
lds
push
ljmp
xor
outsb
jnp
dec
lock
negb
xor
je
ds
outsl
sbb
mov
cmp
fs
pop
add
gs
insl
cld
jo
mov
sub
jb
pop
adc
outsb
inc
push
fistl
sub
shr
push
mov
sbb
push
test
xor
loop
arpl
mov
mov
mov
loopne
lds
inc
popa
jp
je
jl
and
mov
loopne
add
lret
xchg
or
jp
sub
aad
mov
fst
test
fdivrl
xchg
sub
orb
add
mov
mov
mov
orl
jle
aas
mov
fsubrl
cs
add
xchg
add
jmp
xchg
adc
sbb
push
aas
in
arpl
imul
mov
pop
in
adc
shrb
loop
cmp
mov
dec
imul
jno
aaa
jae
mov
sbb
push
arpl
into
daa
sti
dec
push
out
out
jno
mov
daa
cld
cli
sub
ret
out
sbb
lcall
lods
fcomp
fcomp
sahf
or
add
cmc
arpl
adc
test
mov
mov
jb
jl
jne
pusha
dec
jmp
int3
sbb
icebp
mov
dec
mov
aas
xchg
test
dec
cld
jb
ret
mov
test
in
scas
pop
push
sbbb
je
pop
mov
inc
push
inc
lret
pop
xchg
add
nop
cmpsb
fbstp
in
ret
cs
icebp
sbb
sti
in
fwait
cmp
jp
ss
rcpps
mov
ljmp
adcl
add
sub
add
mov
insl
sub
cltd
lret
pop
push
test
sub
pop
rorb
inc
fdivrs
daa
inc
and
insb
fbstp
xchg
neg
or
and
or
pop
push
mov
jae
dec
aam
aas
or
repz
cmp
mov
scas
insb
sbbl
mov
add
stos
imul
or
shl
int
addr16
repnz
shl
cmp
fdivl
sbb
sarl
pushf
sahf
rolb
dec
pop
jno
jnp
jns
mov
inc
mov
imul
add
or
rcr
cmp
bound
imul
cmpb
sbb
push
mov
sbb
xlat
ffreep
mov
xchg
clc
fwait
loopne
push
daa
inc
loopne
push
call
jg
cli
subl
into
pop
jo
push
adc
lods
mov
jle
outsl
jecxz
jns
xchg
ret
xor
jmp
ljmp
maxps
scas
aam
imul
and
insl
sti
pop
leave
movsb
je
aas
call
insb
xchg
mov
test
in
mov
add
mov
rcll
dec
dec
flds
xchg
jp
lds
sbb
sarb
loope
call
jo
adc
xchg
addr16
inc
mov
xor
sbb
sub
std
mov
cmp
pop
gs
mov
pop
pop
imul
mov
xor
shlb
call
push
loopne
jne
pop
data16
loope
mov
mov
lret
pop
les
unpckhps
mov
scas
data16
in
xor
push
ja
mov
ret
insl
mov
fiaddl
test
int3
and
sbb
adc
testb
pop
das
mov
mov
cli
lods
dec
pop
xchg
clc
xchg
jbe
out
dec
fxch
int3
mov
and
add
xchg
lret
sti
or
movsb
arpl
xor
mov
sar
add
clc
in
fsubr
outsb
mov
das
push
or
cmpsl
mov
scas
fists
xchg
and
lds
sti
xchg
adc
sbb
jns
mov
mov
mov
fbld
xchg
ja
cld
cmp
add
repz
stos
xor
scas
xor
mov
sub
dec
test
lock
jl
pop
and
jnp
popl
imul
outsl
xor
lret
cmp
out
fwait
cmc
insl
lea
adc
test
cmpl
cmp
rorl
jns
fs
sbb
clc
jno
mov
mov
mov
hlt
xchg
mov
repz
push
mov
loopne
mov
dec
cmc
xor
cmp
adc
sti
jmp
sbb
xchg
stos
testb
jb
mov
dec
mov
nop
hlt
leave
xor
jle
jl
aaa
fisubs
mov
in
push
sti
imul
cltd
jne
push
sub
lods
mov
shr
xor
bound
pop
fistps
inc
insl
jb
pushl
movsb
das
insb
and
scas
mov
dec
xchg
lcall
movsl
jg
cmpsb
mov
jp
xchg
inc
sub
ret
fildl
into
lea
and
call
dec
pop
xor
mov
dec
sbb
fwait
lret
sbb
aam
and
out
cmp
sbb
ret
fcomps
ret
inc
add
jnp
sahf
mov
inc
repnz
and
rcll
mov
fisttpll
arpl
mov
sti
iret
dec
mov
mov
mov
aam
aam
pop
jbe
lea
cmc
cltd
push
inc
mov
inc
add
jge
test
je
ljmp
push
mov
inc
fldl
xor
push
adc
push
adcl
aam
jnp
outsb
ljmp
add
popa
add
mov
xor
mov
bound
inc
into
test
data16
test
adc
mov
adc
sbb
xchg
or
and
lahf
push
scas
push
mov
rcr
mov
cmpsb
movsb
mov
lahf
pusha
sub
ja
scas
negb
jle,pn
lea
adcl
jl
add
into
cli
fimull
adc
cmp
rolb
loopne
test
movsl
into
sbb
push
mov
cmp
dec
mov
in
sarl
or
mov
mov
xlat
call
pop
scas
sbb
popa
jle
in
sub
in
sbb
adc
daa
fnstenv
movsb
dec
aaa
rolb
fildll
insb
mov
daa
mov
push
sarl
in
cmp
adc
in
jae
add
xor
je
jle
loopne
xchg
mov
dec
mov
pop
inc
int
scas
leave
lea
testb
cmp
lds
aas
xor
mov
test
pop
dec
xchg
mov
mov
push
mov
test
dec
sub
add
lahf
inc
ss
loopne
rolb
scas
cmp
push
inc
subl
xchg
mov
mov
movsl
or
test
outsl
test
inc
sbb
and
aad
sub
loopne
mov
test
imul
push
ffreep
mov
rol
mov
int
jecxz
xchg
cmp
mov
cmp
pop
loopne
ret
xor
mov
sub
xor
jge
popa
mov
inc
scas
dec
insl
les
xchg
popa
call
movsb
inc
iret
dec
loopne
cli
add
inc
andb
adc
push
xor
in
adc
xlat
in
in
mov
and
rclb
push
mov
fs
add
dec
testl
ljmp
aaa
gs
cmpl
mov
lods
add
movsb
ret
jg
sbb
jo
out
lret
mov
popf
nop
dec
pop
ss
jle
popa
xor
push
push
sub
cmp
or
cltd
cmp
mov
test
test
daa
daa
mov
in
rcrl
xchg
int
xchg
cmpsl
idiv
mov
inc
sub
mov
cmp
in
ret
mov
setno
add
pop
pop
sub
pushf
rcll
rorb
nop
jo
imul
aam
add
repnz
mov
cmp
loop
cwtl
dec
push
mov
sbb
shll
insl
and
sti
imul
sub
aaa
dec
test
xor
xchg
lcall
pop
je
pop
sbb
gs
mov
cmp
jecxz
cli
and
mov
cs
or
inc
cmpsb
popf
outsl
jae
sarb
add
adc
ljmp
and
in
sbb
hlt
jp
inc
aaa
sub
out
lods
loopne
enter
clc
mov
cmpsl
mov
xlat
mov
sti
outsb
mov
mov
pop
test
lds
adc
sbb
sbb
sbb
cmc
das
sub
scas
lret
int3
xor
push
mov
fucomip
fst
lret
pusha
cmp
das
push
add
arpl
or
sahf
dec
insb
jmp
pop
adc
ficompl
movsb
cmp
pushf
mov
or
pop
fnsave
mov
push
or
out
cli
mov
push
movsb
arpl
shl
jp
and
sub
mov
sarl
sub
inc
adc
loopne
cmpsl
mov
pusha
fcmovb
mov
data16
stos
mov
mov
cmp
inc
push
out
out
add
std
jecxz
jnp
pop
sar
jno
pusha
mov
outsb
and
or
pop
xchg
push
scas
mov
std
cmp
push
jno
jg
sbb
dec
adc
adc
dec
mov
leave
dec
pop
out
outsl
push
stos
mov
fprem
aam
fwait
xor
inc
xchg
mov
adc
pop
hlt
jecxz
cmp
iret
decl
sub
pop
fstpl
pop
mov
nop
daa
sub
popa
xor
cmpl
dec
push
sbb
imull
inc
mov
fldt
sti
jg
cmpsb
lea
mov
mov
pop
xchg
adc
sub
fwait
or
dec
push
and
jnp
cmp
xchg
jbe
adc
dec
movsl
mov
cmpsb
pushf
inc
daa
sbb
pop
lods
das
in
loop
cltd
stos
mov
push
sahf
frstor
outsb
dec
and
sub
movsl
insl
mov
loop
test
mov
clc
aas
mov
repz
shlb
adc
and
rcrb
mov
int
repz
rorb
xchg
inc
sub
das
mov
pop
cmp
in
bnd
add
dec
data16
pusha
fdivrs
pop
inc
cmp
or
das
ja
ljmp
cmc
arpl
cmpsb
je
mov
mov
sti
push
les
cwtl
ficoml
sarb
dec
loop
ficomps
outsb
shl
add
adc
mov
test
mov
or
sub
in
fstpt
mov
fdivrl
sub
loop
mov
push
mov
jp
and
and
xor
test
mov
fwait
sub
push
push
cmp
and
sbb
mov
adc
push
sbb
adc
or
cmc
stos
jnp
cmp
adc
adc
mov
add
cmpb
add
mov
push
and
ds
mov
sbb
lods
xor
sbb
mov
add
imul
pop
jae
insb
jns
xchg
jecxz
pushf
orb
enter
mov
pop
lock
rol
outsl
loop
mov
inc
jge
mov
inc
lcall
loope
popf
mov
mov
loopne
clc
xor
push
mov
insb
inc
or
add
or
call
sub
mov
divl
xor
push
dec
xor
adc
cmpsb
pop
pop
add
mov
lods
jo
adc
imul
xchg
and
testb
push
mov
sbbb
leave
cmp
orb
stos
cmc
push
out
jle
jmp
dec
out
adc
call
xchg
dec
in
fcomip
sbb
xor
sub
fwait
cmp
inc
mov
sbb
jne
mov
popa
pop
sarl
adc
ja
dec
aam
out
fs
in
pop
dec
js
es
inc
scas
mov
sub
mov
mov
popa
nop
or
dec
cmp
xor
cltd
lods
jle
clc
aam
ja
sbb
icebp
inc
mov
pop
movsb
dec
mov
mov
rclb
xchg
test
sbb
mov
add
xchg
addr16
mov
inc
stos
and
int3
idiv
sub
xor
sbb
push
jne
gs
scas
and
cs
movsl
or
imul
xchg
jns
sbb
dec
cmp
pushf
push
inc
xchg
mov
dec
or
jge
lods
jae
jbe
xor
mov
gs
xor
push
mov
das
mov
pop
lock
push
leave
incb
icebp
clc
cmpsl
jnp
or
jae
ja
cld
mov
or
hlt
and
hlt
and
sub
push
pop
rorl
cmp
mov
clc
jo
cmp
and
jbe
scas
pop
sub
xor
in
leave
xchg
in
int3
and
insl
sbb
aas
mov
vpextrw
lds
dec
out
mov
or
add
aad
addr16
mov
or
jo
shll
cmpsb
test
fcmovnu
cmp
mov
jecxz
inc
add
orb
jb
push
jo
xchg
fisttps
inc
insl
fsubs
push
adc
sub
push
push
xchg
int
movsl
rcl
outsl
arpl
icebp
mov
sahf
xchg
icebp
mov
cmp
ds
xchg
jge
pop
sbb
mov
or
push
out
mov
test
xorb
cmp
sbb
int
push
cmc
pop
add
adc
decb
pop
jb
test
mov
sub
into
and
and
and
mov
cmp
xor
inc
xor
mov
dec
fucompp
jns
in
push
mov
sbb
sbb
adc
mov
ret
mov
scas
sbb
jnp
nop
xchg
cmp
push
inc
in
fdivr
int
cmp
inc
sub
shl
adc
sbb
sti
stos
outsl
sbb
aas
jbe
jne
cmp
adc
xchg
or
fmull
or
jno
adc
negl
add
pop
fdivrp
add
xchg
dec
sti
orb
jl
add
fstcw
cmp
shll
jne
cltd
dec
loope
or
sbb
inc
test
call
sbb
scas
push
xchg
add
in
loop
fsub
mov
mov
cwtl
add
jmp
popa
cld
leave
inc
psrlw
jno
icebp
out
gs
rorl
xor
jbe
sbb
lret
push
add
dec
pop
xchg
cmp
nop
and
testb
push
dec
and
push
test
push
pop
push
xor
mov
mov
xor
inc
jnp
cmp
push
mov
pop
adcl
xor
out
out
sub
jb
sub
mov
movsl
and
dec
dec
xor
dec
shl
aad
scas
daa
inc
inc
lret
imul
in
and
xchg
xlat
and
and
and
in
sbb
imul
sbb
orl
mov
movl
scas
stc
mulps
outsb
arpl
sti
mov
rol
jecxz
addr16
inc
enter
adc
or
fld
push
jbe
ds
mov
shrb
cmc
insl
outsb
cli
and
push
mov
sub
or
call
jno
mov
and
or
test
cmp
sbb
xchg
cs
fnstenv
xor
push
lahf
mov
insl
jge
loopne
ja
push
xor
mov
pushf
pop
shll
jnp
sbbb
xor
cmp
dec
jge
or
pop
loop
xor
jg
dec
fisttpl
cmp
popf
xchg
sbb
test
mov
shll
mov
in
mov
push
loop
or
pop
fimull
loope,pt
mov
sbb
and
out
popf
xor
sub
lret
sub
data16
inc
loop
arpl
adc
imul
push
sub
faddp
je
addb
mov
lcall
loopne
cld
aad
mov
jle
fcmovbe
and
mov
jns
imul
xchg
and
cld
shlb
mov
inc
clc
shlb
fwait
xchg
rol
insb
lret
hlt
popf
sbb
addl
std
jae
xchg
je
adc
stos
stos
pusha
xor
popa
xorl
xchg
push
stos
scas
ds
insb
fcoml
fdiv
adcl
lods
lds
jne
int
inc
and
dec
mov
fisubs
shlb
mov
jbe
shl
aad
cmpsl
icebp
pusha
mov
jmp
fcomps
aam
imul
ret
jl
sti
or
cmp
insl
add
nop
movsb
push
dec
test
movl
rcl
sbb
rcl
sbb
mov
pop
push
xor
fdivrs
and
inc
inc
mov
leave
in
cltd
and
ficomps
aam
mov
idiv
adcl
jno
sbb
int3
push
in
push
xor
mov
push
popf
test
inc
xchg
in
shll
rcl
int3
in
sbb
dec
in
ss
sub
xor
dec
test
call
or
imul
hlt
cmp
inc
push
shlb
jo
test
cltd
in
out
addr16
cmc
popf
jmp
lret
jns
dec
jecxz
cli
sti
popf
scas
xchg
jl
xlat
addl
and
jo
movsb
jbe
dec
pop
rorb
iret
adc
shll
ret
add
cltd
xchg
out
into
jmp
daa
push
mov
push
stos
test
popf
fadds
fincstp
js
je
stc
mov
es
ret
inc
push
pop
das
pop
jne
addr16
pop
dec
lea
aas
mov
repz
enter
jmp
mov
adc
dec
sub
data16
in
clc
cmp
dec
inc
ja
out
addr16
les
test
insb
mov
mov
lret
lret
shrl
addr16
or
lods
subl
or
iret
push
push
xchg
lock
movsb
lahf
adc
jbe
xlat
xor
mov
pop
pop
cmpsl
lds
push
dec
push
cli
repnz
pop
fsts
loopne
xchg
fs
inc
out
push
popf
dec
xchg
fnstcw
xor
lahf
fmulp
das
fdivs
ror
scas
lods
xchg
ret
rcrb
test
insb
push
testl
data16
rcr
pop
sbb
dec
adcl
inc
mov
jg
mov
sbb
push
roll
adc
mov
xor
repnz
rcl
fstpl
xlat
or
mov
dec
popa
cwtl
pop
push
bound
ret
or
fldt
xchg
jne
mov
xor
mov
push
jns
push
int
call
xchg
sbb
das
push
pop
lea
cltd
mov
cmpsl
rclb
sub
sub
mov
cmc
clc
mov
jns
mov
sbb
push
sbb
mov
mov
add
inc
es
jecxz
inc
jbe
scas
ret
pushf
push
push
cmp
cld
out
ret
pop
cwtl
stos
mov
mov
and
jnp
jecxz
popa
insl
cs
in
mov
mov
imul
scas
mov
xchg
out
pop
add
sbb
shrl
lds
cmp
inc
int3
xchg
inc
push
adc
mov
push
push
jns
data16
xlat
sub
movsb
sbb
dec
out
cmpsl
xchg
scas
pop
mov
mov
cltd
cmpsb
fadd
jge
jmp
out
andl
jno
and
lcall
movsl
and
pop
inc
and
cli
mov
stos
idivb
inc
jbe
pop
ret
ret
xlat
bound
lcall
xchg
push
or
pop
gs
stc
adc
int3
mov
test
addr16
pop
and
fisubrl
or
dec
add
sbb
dec
dec
stc
pop
js
pop
scas
sbb
jo
sbb
and
fnstsw
packsswb
test
hlt
push
sub
pop
into
lock
push
and
sub
clc
bound
dec
rclb
mov
inc
adc
pop
arpl
xor
call
sub
push
adc
test
pop
xchg
or
insb
mov
loopne
lret
push
cmp
sbb
inc
in
hlt
out
mov
or
push
into
mov
and
or
dec
ja
sahf
push
jns
dec
xlat
fnstenv
mov
in
xor
hlt
cmp
and
inc
int3
or
das
icebp
mov
inc
mov
sbb
ret
xchg
inc
stos
movsb
imul
cli
decb
rorb
mov
pop
call
addr16
jnp
fnstenv
ficoms
pop
xchg
add
mov
divl
dec
xlat
in
push
push
push
fwait
imul
in
rcrb
xlat
jg
lods
inc
movsl
fwait
mov
add
test
push
mov
fdivrs
mov
shlb
jno
sbb
sbb
push
add
xchg
lcall
push
iret
sbb
jp
inc
fucomip
enter
pslld
les
movsb
cs
je
outsb
pushf
shll
fildll
test
test
leave
mov
mov
outsl
pop
inc
in
pop
out
inc
andb
faddl
js
sbb
sbb
mov
and
in
sub
mov
mov
shll
jne
dec
mov
insb
jne
mov
les
adc
jae
pushf
cmpsb
pop
cmc
cs
inc
into
pop
popa
xlat
push
cmp
sub
xchg
sub
cwtl
dec
pop
aaa
sub
leave
lret
adc
stos
aas
cld
rcll
dec
cmp
push
lret
pop
pop
dec
pushf
mov
jecxz
add
in
mov
push
push
dec
daa
mov
js
sbb
arpl
mov
daa
fdivs
add
push
popa
mov
mov
enter
dec
push
div
test
ljmp
and
add
nop
mov
mov
and
mov
lahf
leave
sbb
jmp
mov
insb
loopne,pt
lcall
add
insl
mov
sbb
jle
jl
lds
push
sub
and
ds
cltd
ret
pop
in
adc
hlt
and
xchg
pusha
in
push
pop
adc
movsl
or
xor
div
or
mov
sbb
movss
out
pop
xchg
aas
or
shl
dec
mov
push
mov
push
rolb
ret
dec
pop
mov
mov
stos
add
mov
jp
mov
sbb
fnstenv
sbb
stos
mov
cmpsl
cmp
sti
aam
imul
xchg
fisttpll
cld
inc
push
dec
push
lock
push
icebp
xchg
cmp
lock
xlat
dec
mov
data16
jne
mov
fsts
mov
mov
mov
sti
pop
data16
jae
jne
jo
jne
add
pop
mov
lret
sahf
arpl
aaa
fcmovnb
pusha
jecxz
add
sahf
or
cltd
lahf
sub
push
popf
outsl
jecxz
push
jmp
loopne
shlb
movsb
cmc
and
pop
jecxz
mov
sti
jae
add
leave
jmp
clc
stos
fstpt
loop
mov
sub
mov
push
pop
scas
mov
pusha
or
xchg
xor
inc
test
mov
mov
push
and
cwtl
sbb
xor
push
nop
scas
xchg
ret
inc
xchg
lahf
inc
add
xchg
cmp
add
xchg
mov
sbb
orps
std
push
shll
mov
fs
mov
mov
pop
iret
leave
jbe
mov
push
or
mov
mov
movsl
rcrl
movsl
das
xor
xor
jmp
insb
jb
adc
jne
rorl
dec
jne
arpl
addr16
test
out
push
stos
ljmp
xlat
aaa
cmp
and
insb
imul
cmp
test
sub
push
mov
and
psubq
jne
cld
lods
cmp
dec
cld
cmp
push
pop
jl
dec
push
out
adc
adc
out
int3
jp
dec
mov
xchg
mov
inc
daa
inc
adc
enter
cmp
mov
push
in
insl
or
aaa
jno
cmp
jle
xlat
sub
mov
je
fisttpll
inc
cs
xlat
es
mov
or
sub
inc
push
imul
into
jmp
pop
add
and
repz
lcall
pop
icebp
imul
in
int3
or
aam
xor
cmpsl
shlb
pop
inc
aad
stos
adc
mov
cld
dec
in
adc
adc
fwait
sahf
loopne
dec
pop
mov
aam
insb
sbb
push
repnz
ja
add
cmc
adc
mov
cwtl
add
shrl
mov
pop
xchg
push
arpl
test
out
adc
sub
fnstcw
rolb
mov
add
adc
mov
add
inc
test
add
pop
push
ficomps
cwtl
mov
adcb
ljmp
int3
xchg
sti
push
xor
push
mov
daa
dec
rcll
mov
lret
jl
in
cs
call
mov
shl
inc
gs
test
inc
fs
aas
cmp
sbb
lahf
sar
adc
imul
cmpsl
cmp
mov
sub
cld
xor
and
mov
push
xchg
add
adc
add
push
push
shll
pop
aas
dec
dec
and
outsl
shll
mov
sti
scas
test
xor
ljmp
insl
out
aas
push
pop
test
es
out
xchg
jae
dec
inc
and
in
mov
iret
mov
jle
xchg
mov
jge
popf
cmp
xchg
das
jg
jmp
mov
out
jmp
push
dec
out
adc
sbb
pcmpgtb
add
mov
in
bts
xor
aad
sub
sub
repz
and
xchg
adc
jne
cmpsb
je
adcb
adc
test
call
jo
dec
cmp
push
jl
es
mov
mov
push
ret
lcall
xchg
fwait
iret
lret
cwtl
andl
mov
rclb
inc
xlat
out
inc
pop
xor
jmp
sbb
std
imul
out
rolb
xorl
sub
or
jle
mov
mov
mov
bound
mov
mov
mov
popa
xor
add
aaa
sti
lds
bnd
pop
xchg
rcrl
push
or
mov
les
test
dec
outsl
call
sub
jae
sbb
and
mov
mov
filds
test
lret
lock
pop
lods
mov
insb
xor
push
or
xchg
cltd
fisubl
mov
xor
outsb
call
add
mov
sahf
push
push
sbb
xlat
or
sbb
outsb
and
test
pop
out
aam
divb
shll
out
adc
jmp
das
and
repz
pop
or
push
sub
cmpsb
adc
jns
int
test
xor
mov
rcl
and
add
test
test
or
stos
mov
mov
test
and
mov
ja
ss
std
add
inc
xchg
mov
sub
imul
xor
pusha
xchg
lods
jle
data16
popf
imul
jmp
inc
movb
jbe
inc
inc
iret
dec
lds
sbb
call
inc
jno
imul
mov
lahf
rcrl
and
mov
inc
int
arpl
pop
xor
jae
xchg
out
inc
repz
cmp
aaa
and
push
lea
cwtl
rep
rcll
frstor
mov
sti
inc
fcoms
leave
mov
xchg
or
jno
js
stos
jl
mov
and
cmp
xor
rcll
in
and
outsl
jp
pop
cwtl
shll
inc
push
sub
mov
and
pop
mov
and
orl
movsl
pop
sbbl
std
cmp
mov
mov
mov
cmp
mov
je
jg
dec
cmp
pop
shlb
mov
stos
cwtl
xchg
fistpl
cwtl
or
add
pop
ds
or
jbe
cmc
jmp
push
fiaddl
repz
dec
sbb
lods
cmp
cmp
mov
mov
fcompl
aaa
rolb
jo
xor
push
aas
pop
xorl
adc
lods
clc
mov
mov
jmp
ds
and
lea
or
push
inc
mov
pop
jno
inc
xor
aam
cwtl
gs
cmp
out
mov
mov
pop
stos
inc
mov
mov
mov
stos
dec
add
and
rol
frstor
adc
or
sbbb
sahf
std
dec
jmp
sbb
pop
pop
push
enter
sub
ss
mov
sub
in
cmpsl
inc
sbb
in
ss
leave
sub
sub
cmp
stos
xorl
dec
ret
cli
cmp
add
dec
mov
jmp
or
mov
test
push
add
jmp
mov
or
dec
jge
call
sbb
mov
xor
out
pop
dec
jg
add
stos
xor
mov
and
leave
pop
subb
les
and
inc
push
mov
or
imulb
scas
adc
test
fwait
xor
mov
inc
jnp
nop
popa
pop
popa
mov
sub
pop
jmp
jae
dec
jae
dec
sub
js
add
push
adc
and
cltd
lods
ret
leave
adc
scas
push
and
cs
mov
and
jle
and
pusha
and
push
sub
mov
mov
aad
xor
fwait
pop
xor
rolb
out
shll
sbb
dec
ljmp
shrl
sbb
push
push
jg
xor
adc
adc
fwait
push
pop
mov
adc
jle
mov
jae
adc
enter
fistpl
adc
xchg
pop
push
fistl
jge
jecxz
loop
jnp
lds
pop
dec
ljmp
or
xchg
mov
je
jp
xchg
jne
fidivrl
push
int3
xchg
ljmp
lods
outsl
loope
imul
dec
ret
xor
roll
sbb
and
test
xchg
and
jp
or
ljmp
dec
ja
pop
xor
ds
imul
add
movsb
pop
mov
rcll
add
stc
xchg
dec
mov
xchg
sti
cmpsl
inc
hlt
dec
std
inc
pop
push
xlat
push
nop
xchg
mov
rcrb
notl
push
adc
xchg
mulb
jbe
repnz
pop
bnd
iret
pop
jle
sbb
sub
xchg
pop
push
fwait
rcll
pop
sbb
shll
jo
mov
dec
cmpb
lcall
jnp
loope
lock
xchg
mov
and
loopne
sub
sbb
test
in
addr16
or
lock
inc
mov
sub
lds
xor
mov
xchg
ds
lods
adc
xchg
sub
daa
mov
outsl
imul
repnz
add
mov
xchg
fildll
mov
xchg
xchg
cli
or
js
je
cmp
insl
ljmp
xchg
repnz
popf
lock
clc
add
ljmp
inc
fucom
push
adc
test
int3
rolb
ljmp
aaa
aad
call
jle
sbb
jmp
sahf
lods
add
cld
push
jp
push
sub
mov
mov
push
icebp
jle
xchg
stc
ror
jl
into
xor
or
repz
inc
sub
iret
jno
dec
les
out
pusha
mov
or
sub
xor
mov
sub
jns
aad
gs
jbe
mov
incl
adc
push
mov
fisttps
add
xchg
and
fidivl
adc
xor
loope
sub
test
mov
add
dec
sbb
movsl
add
lea
inc
xlat
mov
pop
mov
dec
xorb
push
test
loopne
cld
mov
sti
mov
scas
mov
mov
jmp
aas
in
add
cmp
push
repnz
sub
pop
outsb
inc
out
aad
test
push
jl
jnp
cmp
fsubrl
jne
inc
sti
popl
add
mov
mov
out
mov
push
pop
mov
jp
pop
out
fstpl
ljmp
frstor
sub
mov
fiaddl
and
insb
jne
adc
hlt
mov
sbb
call
in
pop
movsb
popa
xor
lahf
jbe
in
dec
cmpsl
loope
call
push
pop
adc
aas
ljmp
enter
in
in
jo
push
mov
cmp
mov
jns
das
inc
mov
xchg
push
jbe
pop
push
cltd
xor
es
ja
mov
or
push
inc
addr16
jns
outsl
clc
fdivs
mov
bound
idivb
jmp
xor
push
cmp
and
or
cmp
pop
cmp
arpl
lea
movsb
out
ret
xor
mov
int
jmp
sub
pop
inc
add
lods
jge
in
fwait
ja
mov
insl
loope
sub
jnp
adc
sbb
scas
stos
jno
sti
ss
jbe
arpl
xchg
pusha
xchg
jge
and
cmp
inc
test
or
jae
sarl
sahf
fidivrl
add
or
mov
pop
rcrb
or
lea
imul
inc
mov
push
sub
addl
rol
lahf
push
sub
pop
dec
clc
adc
cs
adc
hlt
inc
cmp
mov
fwait
push
shrl
cmp
enter
xor
sbb
jae
not
and
scas
xchg
sbb
jo
ljmp
stc
and
mov
pop
inc
pop
outsl
movsb
mov
out
inc
push
cmp
popf
loope
inc
mov
or
jo
insb
icebp
or
enter
jge
pop
sbb
jp
cld
push
shll
pop
repz
repz
inc
fidivrl
leave
cmp
sbb
push
cmp
jmp
lods
ja
sbb
pop
lea
mov
and
adc
sbb
stc
fimuls
sub
mov
pop
fwait
mov
pop
mov
sbb
xorl
and
inc
xor
mov
xor
or
test
push
add
fwait
insb
xor
push
inc
push
mov
pop
fimuls
push
shr
leave
sbb
dec
sti
dec
and
inc
sarl
xlat
lret
cmp
rep
or
enter
or
xchg
rclb
pop
stos
and
jge
lods
icebp
mov
gs
sub
outsl
and
pop
cmp
stos
dec
lods
and
aam
and
fmull
push
stos
les
cmpsl
mov
push
push
outsl
pop
mov
adc
fidivrs
jnp
out
out
in
cmp
mov
push
or
popa
push
enter
mov
pop
push
movsl
ljmp
fcoml
mov
arpl
popa
mov
xchg
jns
mov
and
out
lods
or
add
loop
xchg
xchg
lock
ss
stc
add
insl
xor
push
pop
nop
xchg
sbb
fidivl
pop
mov
mov
xor
test
rcrb
jbe
xlat
fstpt
rcl
mov
pop
cmp
mov
ljmp
mov
jo
mov
std
std
lods
repz
jae
jmp
fdivrs
out
sbb
loope
jo
inc
sbb
iret
je
push
mov
mov
ss
daa
rolb
dec
fistl
out
push
xchg
xchg
sarb
call
into
mov
shr
ds
aaa
sub
cmp
outsb
sbb
mov
gs
dec
jmp
cmp
ss
ljmp
adcl
adc
les
fdivr
pop
pop
xor
mov
mov
jmp
pusha
js
dec
and
cmp
outsl
aaa
out
sbb
jge
cli
mov
adc
jecxz
mov
jne
pop
cmpxchg
sbb
sub
sbb
in
xor
and
and
mov
outsl
mov
stos
imul
pushf
sahf
cs
and
mov
jl
std
push
adc
lcall
repz
test
fs
sbb
mov
mov
scas
pop
repnz
popf
or
xor
adc
or
push
insl
sbbb
lcall
mov
stos
aad
xor
mov
popa
ljmp
lahf
jb
sub
jmp
jns
negl
mov
dec
fistpl
aad
lods
rcrb
xor
push
add
inc
add
sub
mov
cltd
or
stos
arpl
pop
loope
dec
mov
xor
and
push
fcomps
sub
adc
mov
pop
adc
orb
or
mov
mov
lods
loopne
cmp
push
fcoml
mov
pusha
pop
jg
repz
push
into
sub
std
imul
add
lahf
xor
mov
pop
cmp
mov
adc
repnz
loopne
gs
and
pushf
mov
jge
lret
add
ret
mov
pop
cmp
leave
xlat
xchg
aas
dec
call
loopne
and
fistpl
push
popf
adc
or
mov
xchg
and
out
fwait
cs
cmc
sub
xor
sub
and
hlt
mulb
insl
mov
push
lock
and
das
push
xor
test
jns
movsb
jae
pop
lds
and
jne
dec
in
out
sub
mov
sub
out
add
cmp
add
pop
ss
xchg
xchg
jb
mov
sub
cmp
rcrb
and
js
sahf
imul
in
imul
adc
mov
and
or
and
pop
jno
shll
add
cli
mov
cmc
sub
cmp
loope
frstor
adc
sub
ret
lahf
mov
lods
pop
arpl
push
ret
iret
call
movsb
jge
add
in
mov
inc
testb
icebp
add
loopne
inc
negl
pop
xor
xor
mov
pusha
out
test
adc
outsb
int3
shl
shlb
pop
or
mov
sub
xlat
adc
inc
sbb
aad
testb
std
xlat
or
nop
ljmp
loope
hlt
popf
loope
fbstp
imul
inc
outsb
xor
xchg
not
or
pop
jle
or
ficomps
fsubrl
test
jecxz
push
dec
call
lock
fidivrl
addr16
stos
outsl
pminub
cmc
pushf
and
lods
insl
mov
lods
test
mov
sahf
test
jo
pop
pop
jg
sbb
xor
je
stos
jno
or
push
jnp
cmpsl
and
in
aam
outsl
daa
in
clc
mov
out
xor
jge
adc
ret
mov
mov
mov
in
cli
lock
aad
pop
pop
or
std
add
adc
lcall
ja
es
enter
push
mov
sub
mov
outsl
xchg
outsl
mov
test
inc
mov
sub
or
insb
lea
and
xorb
add
mov
pop
das
add
pusha
push
cmp
adc
cmp
std
push
dec
cltd
or
imulb
jmp
inc
test
fs
vpmacsdql
adc
push
ret
sub
lods
mov
sbb
fwait
sub
jns
sbb
fiaddl
pop
outsb
xor
ret
dec
cmp
cmp
rcrb
and
inc
shrl
add
or
out
dec
or
xlat
rcl
mov
and
jno
lock
mov
dec
add
dec
mov
mov
cld
lods
neg
mov
dec
dec
push
push
jnp
adc
mov
cmpsl
jnp
dec
outsl
jne
leave
std
jg
aad
sub
xchg
push
arpl
or
mov
inc
cltd
jo
ficomps
popa
jmp
sbb
sbb
sub
cmp
mov
add
pop
jecxz
imul
std
idivl
cmc
push
loopne
inc
and
xor
mov
jns
inc
and
aaa
xlat
sub
dec
dec
lods
scas
sbb
adc
mov
shlb
repz
leave
push
or
inc
loopne
sbb
imul
add
sub
scas
dec
fidivrl
sub
xchg
ljmp
sub
cltd
cmpsb
jbe
xchg
push
popf
pop
jl
in
lcall
adc
mov
lods
shrl
fnsave
outsl
cs
push
in
and
cmc
icebp
xchg
nop
fcmove
into
push
xor
inc
arpl
and
js
dec
aaa
add
enter
push
fistps
or
push
mov
pop
jecxz
inc
pusha
jns
es
fmul
xlat
iret
push
jmp
lcall
mov
sbb
pushf
mov
cmpsb
call
int3
or
add
nop
popa
hlt
ret
sti
cmp
mov
push
int3
test
pop
lahf
cld
icebp
mov
pop
lcall
inc
rclb
repz
lea
bound
fimuls
cwtl
jp
sahf
inc
push
ja
in
ficompl
popa
mov
cmp
testl
repnz
dec
iret
jge
sbbl
hlt
mov
pop
and
das
lret
lret
jo
ja
mov
rclb
pushf
xor
incb
sbbb
xchg
add
fsubrl
mov
pop
sub
push
popf
shlb
mov
fisubl
sub
mov
les
push
mov
fidivl
scas
outsb
outsl
enter
mov
cmp
cltd
inc
int3
mov
pop
jg
sub
int
pop
loopne
xchg
push
xor
int
aad
adc
insb
dec
jnp
adc
pop
jnp
inc
out
sbb
mov
roll
lea
mov
les
pop
mov
push
pop
inc
insb
mov
scas
dec
pusha
mov
dec
mov
dec
shlb
shl
and
cltd
inc
xor
add
xchg
cmp
popa
dec
not
push
mov
ds
cmpl
outsb
dec
lds
fmulp
add
push
and
xor
xchg
es
test
mov
sub
sub
orl
popf
ret
add
scas
out
jp
imul
loope
mov
and
fisttps
jmp
or
stc
popa
jge
inc
aaa
push
and
push
lock
orl
mov
sub
movsl
mov
xor
cwtl
cmp
dec
movsl
fildl
movb
scas
xchg
clc
jecxz
and
fadds
fs
and
mov
test
es
add
ficoml
testl
pop
push
dec
sbb
jnp
in
aas
shlb
pop
ljmp
and
jmp
das
lock
jecxz
cmc
adc
stc
dec
xchg
jns
stc
adc
inc
movsb
xorb
push
push
lret
xchg
sahf
pop
or
into
pop
aam
push
mov
adc
loop
popa
movsl
ljmp
scas
sbb
and
pop
xchg
cwtl
das
das
inc
imul
jne
roll
xchg
pop
das
lahf
push
or
subb
div
adc
inc
dec
and
xchg
lods
sbb
inc
lret
cmc
inc
jp
outsb
push
imul
dec
or
push
jae
sahf
movsb
jae
adc
test
lcall
adcb
rcr
fildl
or
jb
ljmp
ss
sub
xor
sub
push
cmc
xor
dec
dec
sahf
jg
je
cmp
dec
mov
cltd
psraw
lods
xorb
cmpsb
js
roll
out
or
shrb
add
pop
aam
jae
adc
les
mov
xor
pop
add
jmp
test
push
shll
test
jle
cs
jmp
cs
inc
lods
jnp
lcall
sahf
sub
mov
jae
adc
out
xchg
inc
aam
repz
mov
ss
lea
das
loope
inc
loope
dec
or
push
shrl
das
sbb
xchg
xchg
adc
mov
aas
pop
cmpsl
jge
cmp
sub
sahf
mov
sbb
ror
imul
or
and
je
js
xor
ficompl
mov
cmc
push
lods
testb
lret
xchg
mov
pop
push
sbb
and
dec
dec
adc
sarb
xor
jbe
cmp
shrl
sti
sub
adc
xchg
sbb
ds
cli
xchg
add
dec
fiaddl
adc
insb
jne
mov
je
imul
push
addb
out
xor
dec
notl
mov
fimuls
sti
lods
xchg
loop
arpl
cmp
mov
pop
push
je
into
mov
add
inc
push
sbb
jmp
out
fistps
leave
mov
scas
fs
mov
or
fldcw
fsub
jp
mov
lods
lds
mov
movsb
rcrb
mov
stos
test
sbb
test
sahf
lcall
lds
add
push
into
mov
mov
cmp
sub
push
xchg
mov
sahf
mov
test
ds
loopne
je
push
fldenv
mov
pop
ds
ljmp
sbb
cltd
jl
in
call
or
or
jnp
movsl
inc
repz
sbb
cmp
pop
or
cmc
inc
jecxz
insl
test
loope
and
out
sub
bound
and
jno
mov
cli
jb
cmp
jns
push
icebp
adc
scas
jno
es
lret
roll
push
je
outsb
loope
mov
jp
add
out
mov
mov
lods
xchg
cmp
jns
popf
push
hlt
ss
in
cmp
je
push
xchg
cmp
lret
movsb
pusha
push
add
fstpt
dec
sbb
push
test
outsl
mov
push
rcl
jne
lea
cmc
mov
xchg
scas
arpl
mov
in
js
jl
fistps
sbb
lahf
inc
pusha
loop
je
test
mov
sarb
repz
jbe
xor
inc
cmp
cmp
mov
xchg
sub
cmpsb
dec
mov
inc
icebp
xchg
xor
imul
out
push
cmpsl
push
xchg
add
xor
jb
mov
push
loop
pop
mov
push
adc
nop
sbb
fs
jmp
ret
sbb
mov
pop
sub
test
pushf
jno
sbb
and
cmp
inc
fsubrl
ret
xor
aaa
das
into
add
fdivl
popf
cmp
or
jne
in
push
and
lahf
push
or
aas
ja
mov
inc
sti
outsb
leave
std
inc
dec
dec
jl
filds
inc
inc
int
or
negl
hlt
mov
pop
push
cmc
jnp
add
cmp
je
jge
bound
mov
mov
adc
inc
sub
outsb
testl
xor
and
or
sub
lea
mov
pop
xchg
and
xorb
push
dec
ss
je
es
stos
mov
inc
adcb
cmp
xor
inc
nop
cmpsb
shrb
movsb
xchg
push
test
mov
cmpsb
fs
cwtl
lea
fisttpll
jg
and
loope
inc
sbb
mov
inc
pop
rolb
cmpsl
push
pop
xlat
data16
inc
out
imul
sbb
fwait
push
gs
add
pop
in
shrl
and
pop
push
lds
fildll
mov
lods
xchg
mov
int3
fisubl
cmp
jae
das
mov
mov
pop
mov
aam
mov
or
pop
mov
add
jno
jecxz
insb
repnz
push
and
stos
push
xor
mov
mov
repz
push
mov
dec
insl
test
stc
mov
mov
mov
sahf
dec
out
jns
ret
push
andb
mov
jmp
sahf
leave
dec
push
popa
mov
dec
jl
ds
data16
add
adc
mov
movsl
dec
aad
jp
int3
mov
cltd
sbb
loop
jb
mov
shll
pop
xor
sarb
outsb
dec
xchg
mov
fdiv
imul
xchg
jne
xor
xchg
sub
dec
out
push
add
jbe
jg
push
xchg
dec
movsb
mov
and
cld
sub
cmp
or
xor
test
sahf
ret
sub
movsb
out
xchg
mov
arpl
daa
mov
cmp
xor
xor
pop
add
insb
mov
mov
popa
jecxz
sbb
roll
popa
fwait
mov
clc
cltd
je
arpl
jne
mov
jne
add
in
icebp
adc
stos
jb
nop
lea
push
in
ret
mov
ret
adc
and
push
pminsw
fmuls
inc
pop
lret
add
mov
fstps
icebp
scas
bound
mov
adcl
jmp
adc
fs
jb
xchg
adc
push
jae
sarb
or
mov
xor
test
jne
mov
stos
adcl
fdiv
fists
lods
xor
pop
inc
mov
mov
or
cmc
push
mov
adc
loopne
cmc
pop
in
out
sahf
int
test
enter
add
mov
mov
mov
je
xor
mov
imul
fistl
jl
push
sub
sub
ret
movsl
leave
xor
roll
lods
mov
xor
decl
test
addr16
add
add
lods
sbb
cmp
pop
cmp
movsb
jne
icebp
pop
mov
add
ds
dec
aad
xor
scas
fucompp
push
add
lds
cmpb
addr16
or
mov
push
xchg
xor
and
jno
push
sub
jecxz
stos
xorb
sbb
imul
xor
lgs
sub
pushf
dec
add
je
ljmp
pop
sti
xchg
or
mov
ss
pop
scas
mov
mov
sbb
xchg
xchg
icebp
xor
dec
or
aam
aaa
mov
mov
lods
stos
ffree
clc
xchg
and
mov
adc
or
add
xor
bound
fmull
fcmovnbe
sub
add
pop
add
les
jg
inc
stos
ud2
mov
mov
mull
hlt
iret
es
mov
sub
xor
insl
inc
mov
popf
clc
sbbl
aas
lods
push
adcl
aas
or
and
mov
jno
pop
mov
sub
rolb
xchg
jl
loop
dec
xor
out
jne
loope
jge
out
int
xchg
jg
out
mov
jns
cltd
out
sub
in
in
and
push
sbb
fstpt
push
mov
adc
dec
loope
xor
pop
hlt
sub
in
mov
cmp
sub
fistps
fildl
rcr
xor
xor
xchg
lods
jbe
fwait
push
hlt
repnz
out
pop
jns
pop
jns
push
cmp
jo
aaa
adc
mov
cld
pop
jbe
inc
cmp
int
sbb
sub
cld
cmp
lds
sbb
insl
negl
sbb
jns
loope
aas
sub
push
cmp
dec
insl
xor
enter
push
inc
rorb
decb
xchg
sub
add
jmp
inc
sub
aas
dec
sub
and
cld
rcrl
inc
lahf
data16
movsl
xor
into
sti
aam
sub
inc
or
fildll
sti
bound
in
popa
xor
or
pop
fistps
or
aaa
add
inc
lea
andl
faddl
and
mov
iret
sbb
cmp
leave
add
xchg
rorl
xchg
fcmovne
inc
jg
jl
cmc
push
and
dec
or
out
mov
mov
jg
dec
movsl
pop
add
mov
sub
pop
loopne
ror
dec
mov
jns
jo
add
setne
pop
nop
cld
mov
testb
sbb
fwait
xor
in
int
and
outsb
repz
jecxz
mov
mov
out
testb
pop
cltd
xchg
cmp
aaa
sbb
xchg
xor
mov
sub
ljmp
dec
sbb
dec
dec
jno
idivl
neg
loopne
mov
and
std
jle
pop
sbb
in
mov
pop
adcb
cmc
nop
loopne
mov
int
ja
loope
aad
jg
shl
repnz
sub
sbb
out
xor
stc
in
push
pop
roll
or
and
sbb
lock
jp
dec
dec
dec
lods
mov
or
jns
into
pop
lea
arpl
pop
subb
rcll
sbb
cmpsl
adc
repz
jge
out
jo
shl
mov
test
pop
fs
jbe
decb
fiadds
imul
aaa
sahf
loopne
imul
rclb
jl
orb
xlat
xorl
pusha
inc
repz
outsb
or
and
outsb
sahf
jne
out
pop
sar
lret
jmp
std
movsb
int
int
loopne
cmp
inc
jb
out
popf
leave
jge
and
jnp
jb
cmc
pop
sub
sbb
mov
jle
int3
cwtl
mov
xchg
and
fs
cld
inc
das
out
cli
or
out
pop
fwait
dec
mov
js
pusha
mov
aam
mov
ficoms
lea
aad
mov
mov
push
nop
js
out
adc
sahf
sarl
stc
jl
mov
jbe
sbb
loopne
sbb
dec
mov
stos
jno
sbb
xor
int3
and
popf
int
xor
mov
mov
enter
xor
gs
mov
lods
les
mov
imul
shlb
out
mov
mov
cmp
rorb
mov
rcrl
ficompl
pop
lret
sbb
cs
xor
push
push
xor
fnstcw
pop
inc
cmp
xor
add
data16
jb
enter
jnp
ss
push
cltd
ss
xchg
std
adc
notb
out
inc
sub
xor
out
lcall
sub
idiv
out
rep
fwait
popa
imul
jno
out
sbb
push
movsl
xor
jnp
lahf
xlat
pop
fists
xchg
fs
sbb
es
ret
mov
jo
call
js
push
mov
sub
sub
jp
lds
xrelease
cmc
int3
cld
mov
addl
pop
test
and
push
cmp
testl
fs
dec
std
xchg
iret
js
imul
rolb
fisttps
jecxz
fadds
aam
fs
movsb
xor
xorl
dec
xchg
cs
sub
xor
push
push
lcall
out
cmp
mov
dec
movsl
add
cmpl
imul
sbb
clc
mov
add
dec
xchg
adc
fld
test
test
arpl
cmpsb
bnd
test
xchg
and
lret
inc
outsl
dec
jae
jne
aam
out
or
or
movsb
inc
or
lret
xchg
cli
add
aad
push
dec
fcom
sbb
shl
insb
clc
mov
test
inc
scas
clc
in
cs
mov
popa
push
lahf
sbb
xchg
aad
jmp
cli
out
push
adc
push
rclb
mov
pop
jge
imul
aad
outsb
ljmpw
ret
jne
mov
push
les
sahf
sbbl
test
rclb
sub
lods
stos
repz
mov
aaa
sub
lahf
jae
test
sub
xor
dec
dec
and
das
push
fstpt
xchg
xor
fistpl
jnp
jo
cld
inc
sarb
or
xlat
push
loop
adc
cmp
lods
push
or
push
jns
int3
cmpl
ss
or
xchg
inc
popf
mov
jmp
fs
idiv
dec
inc
fstpt
dec
addr16
movsl
cmp
mov
add
cmp
add
cs
loope
sub
pop
fbstp
test
push
insb
shll
aad
imul
daa
jmp
and
cmc
adcb
mov
add
cmp
dec
xchg
jg
mov
jecxz
mov
movsb
xchg
sbb
inc
mov
call
int
cmpsb
lret
push
out
mov
adc
jp
int3
mov
jmp
shrb
jnp
xor
mov
outsb
stos
or
test
enter
add
cmc
fisttps
mov
js
das
loope
loopne
xchg
push
ficoml
subl
inc
es
mov
int3
ja
mov
aam
jns
fldenv
insb
push
icebp
mov
sbb
mov
xchg
mov
push
or
bnd
pop
cmp
inc
in
add
mov
mov
dec
push
int3
dec
divl
subb
cld
xchg
aad
loopne
jo
push
int3
ds
dec
repz
cmp
cwtl
dec
push
and
fdivrl
ja
push
jno
adc
cltd
mov
adc
adc
push
pop
xchg
cmpsl
lock
adc
ss
fcmovne
outsl
popa
test
jne
insl
lahf
sarl
fidivrs
push
sub
and
dec
pop
cmovae
cld
dec
ret
call
leave
push
aad
sti
in
adc
daa
jecxz
pusha
fstpl
ljmp
fsubrl
ret
push
jge
add
dec
dec
rclb
sbbl
xor
cmp
pop
movsb
dec
pop
cmp
sbb
std
add
out
enter
pop
or
add
into
jbe
fsts
pushf
jne
mov
push
test
xchg
sbb
jmp
out
mov
mov
push
cmp
int3
je
dec
iret
xrelease
jns
and
and
xor
jg
loopne
pop
fmull
je
and
jp
cwtl
mov
xchg
xchg
mov
pop
sbb
mov
inc
push
mov
scas
lcall
test
adc
jle
lds
inc
dec
jnp
leave
mov
mov
add
xchg
out
mov
movhps
das
mov
dec
sbb
in
lock
orl
dec
and
mov
add
and
jge
xchg
loopne
mov
addr16
cmp
loopne
mov
out
pop
add
dec
sbb
mov
pushf
or
inc
push
fcmove
pop
inc
pop
pop
fsubs
lds
mov
mov
stos
mov
sub
arpl
loopne
out
sbb
test
push
testl
cmp
jl
scas
and
iret
or
adc
nop
fnstsw
dec
sub
mov
mov
xchg
test
jo
add
jle
cmpsb
xor
pop
mov
or
push
lock
cld
in
mov
addr16
mov
pushf
ja
mov
xchg
stos
stos
test
shll
sub
dec
enter
in
loop
jmp
leave
mov
and
pop
ljmp
dec
pop
adc
lods
push
inc
and
scas
pop
dec
push
and
mov
cmp
js
divl
clc
orb
adc
add
inc
shl
insl
mov
fistpl
mov
lret
fisttpl
or
test
jle
or
dec
xchg
xchg
jmp
fwait
lret
mov
ljmp
js
cltd
lea
scas
jg
sub
mov
and
pop
jp
lods
pop
sub
out
pop
pop
dec
popa
xchg
push
inc
mov
addr16
int
mov
mov
out
jge
push
ficoml
mov
out
pusha
push
mov
push
popa
imull
cmp
loope
fcomp
in
pop
dec
xlat
das
out
cld
jns
into
in
test
shlb
insb
movsl
cmp
xchg
out
mov
jns
repz
sar
fstl
dec
and
mov
push
je
inc
addb
lret
mov
int
into
cmpsl
xor
push
push
scas
pop
out
sub
mov
inc
lcall
push
or
mov
sbb
call
andl
scas
or
repnz
sarb
pop
clc
adc
cmpsb
scas
pop
ja
jle
dec
add
int
cltd
rcrl
jle
outsl
jge
mov
ds
in
pushf
mov
imul
out
add
mov
negb
sub
mov
xchg
int3
aad
lds
cmp
sti
mov
repnz
xlat
dec
test
jae
lret
adc
push
popf
cs
cltd
ljmp
mov
decb
xchg
iret
cmp
outsb
push
lods
clc
or
push
movsl
sbb
inc
cmp
imul
ror
out
loopne
scas
das
mov
lret
adc
xchg
lods
inc
or
lret
sub
jmp
add
pusha
lret
scas
cli
loop
sbb
mov
mov
dec
lds
sub
iret
shrb
inc
push
cmpsb
les
xchg
int
stos
imul
push
jmp
addl
cmpsb
enter
mov
xchg
sarl
fildll
js
nop
aad
xor
fwait
scas
mov
sbb
stos
daa
repz
aad
pop
pop
push
sub
sbb
mov
cmp
and
adc
and
add
xor
out
or
out
dec
notb
outsl
adc
fdivrl
call
mov
jecxz
inc
sbb
stos
cmp
xchg
sarl
cmp
lret
fisttps
dec
cmpb
push
stos
xchg
call
sarb
sbb
in
stos
mov
xor
push
dec
in
inc
sbbb
xor
lds
xchg
dec
stc
mov
inc
imul
out
jo
add
es
ljmp
loop
fsubl
cmp
bound
pop
notl
pop
mov
adc
cli
push
and
mov
xchg
sub
lods
mov
dec
and
rcll
adc
push
cmpsl
push
inc
es
enter
pop
sbb
lods
push
int3
mov
loop
ds
sbbl
lods
push
fmuls
adc
daa
rcrl
fcompl
xchg
or
cmp
xor
gs
dec
xor
movsb
inc
hlt
scas
mov
movsl
sub
mov
or
stos
mov
dec
jl
push
sbb
adc
pop
icebp
pop
inc
jmp
push
mov
inc
pop
out
sbb
cmp
aaa
sub
sbb
fsubr
hlt
inc
dec
je
pop
jge
call
add
orb
add
aad
imul
push
insb
cmp
fidivrs
adc
mov
mov
cmpsb
lret
scas
fwait
sub
test
xor
cmp
test
add
ljmp
mov
dec
or
or
adc
int
push
inc
pop
addr16
aam
lods
lahf
je
mov
imul
int3
shlb
pop
in
dec
pop
mov
push
addr16
sbb
lcall
sub
xor
sbb
dec
sbb
mov
pop
stos
mov
pop
push
daa
std
cmpsl
dec
cmp
dec
shll
data16
in
sub
je
arpl
mov
gs
stc
xor
cmp
fwait
stos
imul
xor
clc
push
sti
in
dec
cltd
call
mov
movsb
mov
mov
in
dec
adc
cmc
lds
or
xchg
mov
sub
cli
add
cld
je
xchg
outsl
addr16
xor
fdivrs
jl
push
rcll
sahf
pop
imul
add
icebp
ja
and
sbb
or
push
cmc
mov
push
mov
sbb
lcall
es
sub
mov
jb
push
jge
adc
pop
mov
popa
mov
fwait
cltd
xor
push
dec
lcall
sub
cmpsb
mov
adc
mov
mov
sub
jo
pop
xchg
mov
pop
jmp
mov
cs
pop
push
mov
clc
pop
inc
pushl
pusha
repz
ficomps
sub
nop
scas
jne
imul
cli
fldl
lret
mov
clc
popa
adc
aad
in
shl
cld
sub
and
arpl
or
xchg
sub
gs
lret
and
inc
xor
movsb
push
mov
fmulp
mov
jbe
push
popf
mov
sbb
pushf
sbb
pop
stc
mov
jns
dec
popa
dec
repnz
cmp
pop
fidivs
mov
out
pop
cmp
test
insl
adc
xor
lcall
pop
insl
adc
jp
sbb
xchg
jg
push
mov
inc
or
fisubl
fsubs
inc
or
test
dec
add
lret
clc
push
ds
stc
adc
frstor
shl
insb
xchg
add
jmp
sbb
icebp
ljmp
or
pop
and
or
jge
popa
mov
adc
fsts
out
adc
sbb
cmpsl
mov
xchg
mov
fildl
and
inc
jmp
in
stos
mov
ret
mov
xor
cwtl
outsl
mov
push
movsl
pop
push
or
push
inc
ja
arpl
test
and
add
mov
jmp
xchg
insb
lods
and
jbe
xchg
xchg
push
jae
inc
add
jnp
in
mov
cmp
imul
adc
bnd
ffreep
pushf
sbb
jle
scas
sub
xor
push
addr16
test
negb
xchg
add
pop
ss
dec
je
pop
fnstsw
and
ret
rorb
mov
xor
aam
cld
push
push
enter
and
pop
xlat
icebp
repnz
jae
xor
cld
inc
jns
adc
add
pop
add
xchg
loope
nop
ror
mov
mov
xor
shl
ss
dec
fmull
cli
sti
or
shrl
cmp
js
mov
test
sub
lcall
jecxz
cmp
sub
outsb
scas
jns
xchg
or
cmp
add
sub
sub
inc
gs
push
push
mov
insl
push
fbld
adc
sbb
and
hlt
into
iret
mov
lock
clc
mov
pop
and
xchg
xor
add
fldpi
insl
cs
aas
push
dec
push
sub
push
sbb
cmovae
je
push
mov
adc
cmpsl
jne
sti
in
mov
cltd
fwait
jne
jl
push
jmp
jp
adc
mov
mov
fisttpll
jg
rclb
jge
inc
mov
out
sbb
and
pop
sub
outsl
add
pop
lahf
xchg
add
adc
cmpsl
jae
mov
mov
sahf
jnp
sbb
jp
sub
pop
lcall
mov
jecxz
cmc
xor
jl
mov
xor
aaa
insb
stc
xchg
add
add
mov
pop
inc
scas
dec
jae
dec
xor
jae
mov
mov
jecxz
cmp
jae
mov
mov
popw
lahf
sbb
idivl
jbe,pt
ret
enter
mov
sbb
cmpb
mov
adc
scas
into
xchg
sub
jne
es
sbb
notb
mov
sbbl
lds
adc
sbb
add
lods
or
sbb
fadds
xor
bound
addl
inc
and
fs
fwait
cld
jae
nop
add
add
and
out
xchg
cmp
sbb
into
jns
mov
pop
rorb
xlat
sbb
ljmp
xchg
es
sbb
mov
xchg
sbb
dec
sbb
cmc
lock
scas
dec
in
cmpsl
inc
dec
push
lahf
loope
mov
sub
xchg
mov
dec
pop
push
ror
imull
mul
into
cmpsl
lea
push
fcomp
outsb
mov
lcall
xchg
mov
std
add
sub
out
mov
mov
movsb
pushf
cmpsl
mov
dec
dec
pop
stos
inc
mov
in
dec
addr16
jge
into
ljmp
fiadds
pusha
inc
xor
inc
sub
mov
into
addl
pusha
push
xchg
jne
dec
xor
leave
out
sub
cmpsl
sbb
filds
jp
in
rclb
mov
push
pop
dec
pushf
loope
sbb
cld
out
mov
push
popa
in
in
outsb
push
inc
loope
in
sbb
pop
mov
insl
aas
push
mov
jb
int3
loope
push
sbb
adc
mov
xchg
sub
dec
sub
iret
inc
push
xchg
in
mov
out
mov
clc
fwait
addb
pushf
fcompl
out
icebp
jle
sub
dec
jp
insl
fisttps
inc
inc
aas
out
xchg
dec
bound
adc
sbb
fldl
dec
pop
test
inc
adc
jecxz
mov
sbb
xchg
mov
into
inc
shrb
call
imull
push
dec
dec
cmpsb
movsl
cmc
dec
aam
mov
and
jne
es
jl
xchg
inc
mov
sub
xorb
lcall
mov
or
movsb
pop
aad
out
int3
icebp
jg
lret
mov
jns
add
fldcw
dec
mov
adc
mov
outsb
pop
mov
and
insb
mov
cmp
xchg
in
pushf
pop
rcrl
aaa
push
inc
xor
lahf
popa
adc
push
push
out
imul
pop
sti
in
lea
cmpsl
inc
jmp
xchg
imul
fs
lcall
test
push
jns
pop
lcall
aad
into
jno
test
js
inc
mov
lret
cli
mov
sub
inc
int
push
lock
adc
inc
xor
call
cmp
xchg
jmp
in
fs
mov
sti
hlt
pop
xor
mov
test
and
mov
inc
mov
std
iret
jge
mov
mov
xchg
jne
mov
or
jb
push
xor
cld
jp
adc
pop
xor
ja
lods
xor
cwtl
std
subb
cmp
adc
mov
jmp
scas
pushf
gs
xor
imulb
xchg
fisttpll
xlat
jae
imul
cmp
dec
dec
sahf
cmp
add
inc
push
mov
shrb
mov
add
sahf
mov
data16
out
jnp
jae
ret
mov
int
cwtl
les
leave
push
lcall
dec
aad
jp
mov
mov
loope
ss
mov
mov
push
imul
and
je
mov
lcall
aam
movsl
xchg
sbb
mov
cmp
enter
loopne
idivl
sub
inc
push
shrl
ds
out
mov
arpl
loopne
mov
jl
aam
mov
jno
call
arpl
pop
lret
out
ljmp
fwait
int
subl
fsts
dec
mov
mov
cmc
loopne
sbb
xchg
xor
repz
lret
mov
pop
jecxz
loopne
rorl
mov
incb
cmp
and
testl
ss
mov
lea
dec
mov
imull
adc
cmp
push
lea
enter
addr16
pop
in
inc
pusha
mov
mov
mov
sbb
push
pop
inc
int3
dec
lahf
out
lahf
mov
mov
ror
test
sahf
cmp
sub
cltd
popf
xor
mov
push
cmp
lock
push
hlt
ds
jbe
or
cltd
xchg
js
fbld
into
push
push
shrb
orl
mov
jmp
mov
or
add
pop
je
pop
jecxz
ss
movsb
xor
pushf
mov
lods
mov
cmp
in
insb
lds
sbb
sbb
cmp
jmp
sub
pop
insl
and
and
xchg
push
jns
mov
cmp
xor
xor
mov
cmp
hlt
int3
out
test
xchg
cltd
negl
lock
sub
or
loopne
jg
sub
imul
sbb
mov
xor
in
adc
inc
sub
filds
mov
xchg
movsl
xor
mov
and
lahf
cmpl
xor
push
push
jmp
dec
sub
lock
stos
dec
lods
rolb
add
jne
cltd
dec
loop
mov
push
je
sarl
pushf
jl
sti
insb
sub
test
pop
or
pop
sti
adc
add
inc
xchg
div
or
sbb
mov
in
mov
pop
movb
or
xchg
jbe
xchg
mov
cmp
mov
enter
pop
pop
lock
nop
push
sbb
movsb
pop
xor
and
outsl
leave
xor
add
mov
xchg
aad
stc
cmc
scas
in
jg
sbb
lods
movsl
lea
cmp
adc
adc
data16
hlt
xchg
aam
scas
dec
and
cmc
pop
push
mov
push
call
daa
and
sbbb
movsl
mov
mov
insb
ljmp
inc
adc
and
sub
pop
in
sub
nop
cs
push
shlb
pop
std
rcll
sti
push
data16
mov
sbb
js
jle
je
sbb
sbb
mov
sbb
sub
sahf
push
test
push
sub
mov
ljmp
xor
cld
fadds
lods
push
or
cmp
in
dec
fisttpll
pop
jnp
fidivs
mov
inc
push
pop
cs
icebp
jno
nop
frstor
pushf
lea
mov
adc
sti
mov
xorl
xchg
jp
inc
or
push
sbb
sbbb
iret
mov
test
out
xchg
dec
mov
insb
je
pop
sbb
mov
inc
or
xor
js
sbb
fidivl
pop
jns
push
shlb
sbb
mov
leave
and
lods
sahf
sub
das
es
mov
or
adc
jmp
scas
and
jnp
test
inc
fistl
sti
in
cmp
jmp
frstor
loope
call
push
sbb
rcr
in
call
pop
clc
lock
inc
xor
xchg
adc
nop
cmpl
fmull
mov
push
mov
movl
lret
aaa
out
sahf
bound
mov
arpl
outsb
adc
inc
hlt
clc
int3
sbb
loopne
mov
inc
push
pop
rcrl
mov
sbb
cmp
sahf
xor
dec
pop
vpsubb
pop
or
jmp
mov
xrstors
lret
rolb
jl
inc
jno
add
jp
push
iret
out
add
in
add
inc
fsubs
inc
jae
xchg
adc
in
inc
into
push
gs
std
loopne
dec
cmpsl
inc
cmp
ds
push
push
ds
fcmovb
jmp
fs
jecxz
or
cwtl
jns
dec
dec
or
pop
or
dec
xor
test
inc
ret
mov
pop
inc
sbb
gs
xchg
inc
aas
sub
mov
lret
je
ret
sbb
scas
movsl
daa
push
adc
arpl
jo
les
stc
pop
mov
idiv
xchg
or
push
cmp
adcb
inc
dec
imul
jo
pop
call
mov
mov
fsubrs
int
xlat
int
cmp
sub
rep
xchg
mov
push
scas
adcl
lret
idivl
mov
cltd
pusha
pop
fisubs
dec
test
mov
lea
mov
std
es
cwtl
cmpsb
add
lods
fmull
lock
movsl
aad
dec
outsb
xlat
je
ret
int3
and
fistpl
sbb
jge
outsb
aad
adc
int3
outsb
clc
dec
pop
xor
out
addl
sub
out
repnz
lahf
jp
ljmp
cmp
mov
mov
sahf
xlat
pop
sbb
shlb
insb
sahf
and
add
jb
ja
call
in
mov
call
jbe
cmp
dec
inc
fs
jae
xor
in
fsub
sub
fnstcw
xor
push
pop
push
clc
push
xor
cmp
inc
mov
repz
sahf
pop
inc
rcll
out
lock
std
aaa
out
pop
jbe
mov
and
out
mov
lock
jmp
jge
xchg
xorb
pop
int3
sub
sub
pop
notl
pusha
nop
mov
aam
pop
push
clc
pop
negb
cmc
mov
ret
push
mov
les
rcll
stos
cmp
stos
in
jge
sub
inc
mov
mov
sub
int3
pop
dec
sub
aas
mov
pop
mov
adc
daa
adc
mov
or
add
jecxz
ficoms
pop
xchg
cli
subl
daa
mov
shrb
mov
xchg
sub
dec
mov
mov
push
das
xor
fadds
mov
lods
dec
pop
dec
bound
xor
ret
mov
mov
jmp
stc
test
sbb
popf
into
push
jle
je
sub
test
shll
dec
insb
push
sub
inc
dec
dec
pushf
mov
jnp
xchg
inc
pop
add
jns
cmp
fwait
xchg
or
fmuls
jo
pop
inc
stc
dec
jae
jb
jae
and
xchg
dec
xor
lea
call
test
jg
mov
popf
js
dec
dec
add
adc
iret
mov
inc
imul
addl
push
jmp
inc
jns
xchg
dec
mov
lahf
dec
pushf
lock
add
dec
push
repz
push
jnp
pop
mov
push
ds
fbstp
loop
outsb
add
test
sbb
sub
loope,pt
pop
pop
push
mov
in
lods
adc
mov
es
inc
loope
pop
loopne
enter
cli
ret
push
int3
lar
dec
insb
cs
pop
aas
pop
fnstcw
pop
mov
sbbb
gs
ret
in
or
or
push
inc
add
or
dec
ss
jo
push
and
mov
push
lds
bound
inc
or
push
jno
les
out
mov
in
sbb
rcrb
inc
js
mov
inc
sub
pusha
xor
jno
cmp
daa
sub
adc
mov
xor
daa
xchg
jge
jg
lock
scas
push
xchg
xor
push
enter
mov
insb
out
pop
cmpsb
or
fstps
push
sbb
icebp
push
insl
out
into
stos
test
out
mov
add
fidivs
scas
lea
cmp
and
mov
lea
or
sub
ret
mov
push
pop
pop
jle
inc
lret
ss
add
cmp
sub
dec
pop
filds
in
addl
add
mov
xor
rcll
dec
iret
dec
adc
test
pushf
add
rcll
mov
rcll
mov
iret
pop
lea
iret
lods
das
mov
xor
nop
loop
rcrl
or
and
sahf
cmp
jecxz
sarl
cmp
sub
test
lods
xchg
fs
in
scas
shrl
outsb
in
std
jne
out
leave
ja
dec
mov
adc
jbe
push
jmp
pop
rcrb
icebp
sbb
shrb
fsubrl
fsts
stc
rolb
jns
outsb
es
sbb
inc
jl
in
cld
add
fadd
in
lret
enter
or
and
and
and
ds
mov
inc
add
mov
pop
inc
mov
jmp
fsubr
inc
outsb
sub
mov
push
aam
add
fwait
das
aam
dec
and
sub
nop
ficoml
into
lods
in
pushw
lods
negl
cmp
imul
jmp
arpl
das
xchg
cmp
mov
inc
mov
sbb
in
xchg
push
mov
xchg
push
mov
xlat
sub
leave
xor
les
aam
dec
sub
pop
mov
pop
cmpsl
sbb
test
xor
push
test
ja
inc
xchg
or
out
mull
inc
dec
std
loope
movsb
cmpsb
xor
push
push
das
push
pop
daa
ss
pop
aam
jl
dec
ds
sbb
bound
movsb
xchg
or
cmp
adc
popf
stc
or
hlt
jg
iret
test
pop
or
fdivp
test
mov
lods
stc
or
add
lea
jl
fnstsw
jb
jl
call
or
dec
ret
out
jb
pop
sbb
jp
mov
insb
movsl
icebp
xchg
fisubs
push
mov
out
in
loop
sahf
adc
nop
enter
data16
jne
or
mov
pop
gs
shl
dec
cmc
sarl
negb
pushf
fadds
xchg
mov
sbb
and
daa
test
mov
scas
imul
mov
mov
out
lock
ret
inc
adc
add
roll
in
clc
add
addr16
sbb
push
dec
sbb
jmp
subb
les
inc
aas
mov
test
jmp
test
subb
inc
add
ja
ret
ret
int3
inc
test
push
fstps
cmp
or
pop
jp
xchg
sub
cmpsl
repz
adc
pop
dec
mov
out
or
test
push
movsl
jns
loopne
cli
jle
push
out
inc
mov
jae
xchg
add
jg
mov
shl
subl
pop
xor
sbb
into
inc
call
push
les
cltd
inc
scas
adc
pop
xor
cmp
xchg
lcall
cld
je
imul
sbb
movsb
or
cli
jg
push
sbb
fisubs
lahf
or
xchg
repz
adc
jmp
sti
mov
xchg
mov
call
mov
jp
mov
push
cs
aas
xor
stc
inc
xor
cwtl
ss
dec
mov
addr16
push
std
es
ret
sbb
mov
call
test
pop
xor
lret
mov
aas
mov
push
and
movsb
adc
repnz
dec
aam
ss
or
push
cmp
lahf
inc
and
push
mov
xor
out
mov
aas
out
sti
ds
inc
sahf
stos
adc
cmp
js
aaa
out
iret
push
aaa
mov
inc
adc
mov
or
or
adc
or
sbb
sar
out
mov
mov
adcl
das
xchg
outsl
xor
ss
add
in
ret
gs
xor
inc
jnp
test
or
daa
out
mov
jmp
adcl
and
fcom
and
adc
insb
movsb
fs
shlb
aas
add
jge
inc
repz
fildl
cmp
roll
inc
xchg
iret
cs
frstor
push
xchg
mov
inc
bound
sub
mov
adc
sbb
xchg
inc
adc
mov
mov
sti
mov
lahf
ljmp
jbe
pop
sbb
or
cmp
mov
sub
jbe
sbb
xchg
pop
movsb
les
imul
pushf
add
divb
mov
pusha
clc
popa
push
adc
pop
decb
loop
pushf
stc
lock
sub
rorl
or
jo
xchg
stos
nop
xchg
adcb
add
test
call
xchg
cli
or
cmc
xorb
adc
jns
push
mov
sbb
sbb
xchg
mov
mulb
adc
imul
jp
mov
pop
dec
xor
popa
mov
xchg
and
clc
xor
mov
push
adc
and
dec
iret
xor
pop
ljmp
adc
shr
add
adc
jecxz
pop
jmp
ds
ja
inc
push
xchg
mov
idiv
lods
lret
sub
jo
testb
sub
repz
push
movsl
pop
push
orl
arpl
sub
mov
push
inc
cwtl
cmp
repnz
mov
cmp
aam
fmuls
xchg
scas
loopne
scas
insb
and
fmul
aad
aad
xor
lcall
movsl
sbb
xor
fisubrl
sub
sub
mov
xchg
xchg
rorl
out
fidivl
inc
jae
fmulp
nop
stos
or
andl
jnp
imul
or
repnz
nop
xor
add
cmp
xchg
out
mov
mov
fldt
dec
std
mov
jne
in
xor
fs
sub
decl
adc
jmp
cmpsb
and
xchg
out
push
int
dec
jb
das
je
mov
fstl
push
fnstsw
mov
lret
xlat
xor
cmp
nop
xchg
and
dec
inc
jne
xchg
jle
mov
mov
jb
loopne
and
xlat
dec
cmp
or
gs
mov
lret
mov
enter
pusha
jle
mov
scas
push
ror
adc
sub
mov
push
add
js
add
xor
into
in
mov
jmp
jl
push
push
push
imul
pop
xlat
data16
mov
xor
adc
in
aas
or
jle
or
jno
xchg
dec
mov
inc
pop
xor
ds
sub
pop
jb
pushf
stos
pop
sbb
insb
inc
jp
lret
jg,pn
add
lock
nop
dec
mov
mov
pop
movsb
push
push
mov
fisubrs
mov
cld
daa
push
fbld
imull
or
jmp
or
into
dec
mov
stc
into
xchg
fstps
pop
fstpl
xchg
pop
rorb
sbb
call
sbb
jne
fwait
or
js
aas
dec
jnp
cltd
int3
popaw
fdivrs
xor
adc
sbb
mov
mov
xchg
sub
pop
clc
xchg
push
push
lcall
mov
push
lret
scas
bnd
adc
enter
das
ja
xchg
negb
sub
jne
rcrl
movsb
adc
adc
lock
mov
mov
mov
add
lds
test
fistpll
cmp
xlat
pop
mov
fmuls
addr16
and
push
adcl
in
lock
push
daa
cs
and
or
inc
add
test
lock
pop
xchg
and
xchg
jge
jnp
jge
icebp
out
jno
jo
data16
inc
push
das
jae
mov
ret
add
mov
pop
push
mov
sahf
into
mov
popf
xor
movb
arpl
xlat
or
mull
jecxz
jmp
dec
cmp
movsb
and
jbe
js
push
pop
xor
stos
cwtl
fadds
or
add
sbb
sbb
or
sub
subb
push
jmp
pop
pop
adc
sbb
mov
push
and
and
lea
xchg
popf
loop
fs
cmpsb
lock
inc
inc
out
or
test
xorb
inc
xor
mov
je
mov
repnz
xchg
mov
mov
dec
add
xor
outsb
das
fcoms
pushl
sub
loope
lods
aaa
test
add
int
or
adc
pop
sti
in
repz
push
les
lret
xor
jnp
xor
mov
xchg
cs
adc
cmp
sbb
outsb
pop
pop
notl
or
arpl
sub
adc
aas
cli
ffreep
mov
int
mov
dec
and
jnp
lds
popf
aad
rorl
mov
imul
or
jp
and
jns
adc
sub
scas
mov
pusha
iret
lea
sbb
daa
xchg
bound
sahf
mov
into
push
movsb
inc
xchg
outsl
jns
jp
cli
add
insb
fcomip
xor
jecxz
insl
xchg
cltd
mov
xlat
jg
aam
pop
pushf
cmpsb
subl
bound
jns,pn
fidivl
dec
pop
push
adc
adc
and
mov
adc
mov
loop
add
pushf
pop
ljmp
stos
or
mov
mov
mov
adc
and
data16
adc
cld
sahf
imul
cmp
push
cmc
test
pop
mov
js
repnz
jl,pn
sete
adc
pop
jge
cmp
ljmp
imul
insb
cld
jns
cmp
sti
xchg
push
es
repnz
jbe
fstpt
sbb
fisttpl
pop
mov
add
jns
outsb
jg
dec
cmp
dec
pusha
rolb
hlt
fstpt
rcll
fmulp
into
cmp
in
dec
shrb
lret
jb
jg
clc
rorb
and
sbb
add
rcr
fcom
jae
inc
mov
movsb
cltd
int
mov
sub
xor
cld
insb
sub
dec
jl
pop
repnz
ficomps
mov
jmp
pop
repz
fcmovb
cs
stos
lret
jmp
cld
stc
sub
cmp
jp
dec
pop
mov
faddp
lahf
xchg
nop
add
sub
dec
mov
orl
clc
sub
and
cmp
mov
push
xor
fimull
lret
repnz
inc
loopne
mov
mov
adc
push
xor
dec
jo
ss
and
mov
mov
das
mov
lods
xor
test
lds
lret
pop
push
rcll
xlat
std
jp
push
mov
and
and
fldenv
jp
mov
or
push
arpl
inc
sub
or
add
out
and
sahf
mov
mov
dec
cmp
mov
jle
stc
iret
cld
pop
inc
js
pop
sbb
push
pop
push
or
into
pop
fcomip
jo
inc
aaa
and
xchg
stos
sub
dec
push
push
fnsave
lea
jo
xor
popa
inc
fidivl
push
test
stos
push
sub
lret
sti
shll
cld
lea
adc
or
arpl
enter
cli
lcall
dec
sub
sbb
jns
ds
mov
aaa
lock
pop
shll
or
mov
and
add
in
push
nop
xchg
lea
inc
jg
je
lcall
xlat
push
sub
mov
push
push
jbe
mov
sbb
or
fnsetpm(287
lock
call
cli
or
or
lret
lea
or
js
movsl
pop
adc
push
push
frstor
adc
daa
outsw
mov
stos
xor
lods
xor
pop
sub
xchg
testb
hlt
mov
popa
cmp
cmp
movb
shlb
xor
cmp
adc
pop
and
dec
dec
and
cmc
mov
test
adc
ret
sbb
sbb
aas
mov
mov
sub
push
mov
imul
cmpb
add
aam
jb
mov
xchg
repnz
mov
mov
nop
pop
push
mov
jno
cmp
sub
jle
add
pop
cmp
daa
ret
xor
sbb
notl
xlat
lock
cld
pop
jge
lret
mov
leave
xor
addr16
mov
mov
sub
cmpl
bound
ficoml
scas
out
sti
cmc
sub
xlat
dec
and
and
testl
sbb
arpl
rolb
and
out
xor
mov
pop
gs
push
xor
dec
mov
scas
adc
push
adc
sbb
je
mov
in
add
aas
inc
scas
jb
cmp
xchg
xchg
mov
ret
xchg
fwait
leave
mov
pop
les
loop
dec
das
loop
ss
push
jl
adc
in
xor
dec
fisubrs
shrb
imul
loop
scas
mov
sbb
xor
xlat
adc
addb
mov
stos
ljmp
mov
push
push
out
add
sub
mov
mov
ljmp
nop
fwait
and
pop
pop
aaa
dec
cmp
popl
pop
aam
ret
mov
out
mov
dec
imul
stos
enter
mov
out
xor
call
loope
push
sbb
fwait
orb
jnp
setle
cs
cli
mov
or
outsw
xchg
inc
push
mov
cli
dec
cmc
std
mov
xchg
pop
sbb
adc
rorl
sub
sbb
or
xchg
xchg
in
addr16
pusha
adc
es
ja
aas
xchg
test
lcall
mov
mov
mov
mov
sub
pop
mov
xchg
pop
cwtl
out
sbb
vsqrtsd
ds
dec
jle
pop
push
mov
pop
clc
lock
repz
arpl
fimull
in
pushf
js
dec
add
outsb
das
stos
das
or
jno
and
vmovdqu
imul
nop
mov
mov
sbb
out
mov
fs
enter
sbb
xchg
jmp
addr16
push
repnz
cmp
jp
and
aad
in
push
pushf
xor
sahf
loop
lret
ljmp
mov
jecxz
arpl
dec
ss
fcmovbe
inc
rorl
daa
dec
or
es
andb
mov
add
ss
mov
imul
push
and
push
pop
mov
in
lea
out
sahf
mov
icebp
mov
std
xchg
jmp
inc
push
mov
dec
lret
mov
xchg
lret
lock
pop
push
cmpsb
add
movsl
daa
shll
push
xor
in
mov
jne
pop
lds
ret
mov
dec
out
movsb
outsl
mov
sbb
ficoml
movsl
enter
fists
fdivp
xlat
jp
xchg
nop
jbe
jecxz
sub
cld
and
adc
adc
test
loopne
cmc
sub
movsl
out
lcall
inc
mov
and
sub
aas
loopne
jge
mov
jo
jp
gs
lods
lock
icebp
cmc
add
bound
sub
fcmovu
xchg
dec
jb
adc
shl
add
jl
xchg
add
jne
mov
add
jmp
cli
add
xchg
sti
cld
and
cmp
dec
es
sub
or
push
jl
mov
cwtl
xchg
hlt
or
fmull
scas
aaa
mov
je
stos
jmp
dec
jbe
cmc
out
cwtl
insb
cmc
xor
sub
inc
xchg
ds
sub
cli
xchg
push
xchg
stos
insb
mov
incb
repnz
xor
pop
mov
mov
std
add
insl
repnz
ficoml
mov
xchg
push
cmova
nop
push
pop
mov
notl
sub
jg
call
cmpsl
jns
jge
mov
lock
nop
mov
sbb
leave
pop
dec
icebp
jp
movsb
ljmp
or
pushl
xchg
push
or
add
jns
xacquire
cld
and
inc
fs
arpl
dec
test
stc
dec
hlt
sbb
popa
aam
stos
xchg
lods
pop
push
sbb
mov
jnp
out
cltd
pop
jns
in
fdivs
xchg
addr16
fcoms
dec
mov
es
cmp
mov
xchg
adc
int
xor
shll
xchg
pusha
lds
addb
inc
or
push
and
pcmpeqw
push
cld
cmp
jmp
push
subb
adc
pop
movsl
repnz
popf
jns
aaa
lods
sbbl
jle
negl
inc
mov
push
inc
push
dec
adc
iret
lret
dec
daa
lahf
in
int
or
mov
mov
adc
ds
in
mov
pop
stos
mov
pop
loop
movsb
bound
cmp
lds
mov
or
lds
nop
lds
sbb
lahf
gs
xchg
pop
jmp
jb
outsl
adc
jp
pop
cli
jecxz
clc
int
or
jmp
dec
out
fcoml
lcall
cld
frstor
insl
loopne
test
cmp
sbb
pop
add
and
pushf
and
jne
aaa
jns
xor
lods
pop
testl
inc
adc
jg
pop
scas
and
push
jl
fs
insl
jns
dec
icebp
mov
cmp
lcall
push
cld
jae
or
lcall
cmp
ficoml
bound
in
push
jae
test
hlt
pop
into
leave
mov
mov
and
aam
ja
sbb
scas
xor
lock
lret
imul
cwtl
jmp
decb
mov
cmc
loope
fs
stos
out
pop
xchg
inc
out
movsb
adc
pop
cld
cmp
mov
push
pop
stc
mov
gs
cmpsl
out
les
imul
inc
fwait
mov
gs
sub
test
mov
movsb
lea
pop
mov
imul
lret
int3
dec
idivb
adc
aam
jmp
cmc
sbb
lods
mov
shll
jp
mov
enter
dec
outsb
xor
bnd
xchg
xchg
inc
insl
js
push
out
daa
lcall
lock
fnstcw
gs
mov
arpl
jmp
sbb
movsb
mov
popa
or
out
fisttpl
push
inc
inc
orb
add
or
arpl
or
mov
loope
movsl
mov
pop
test
stc
cmc
add
mov
push
fbstp
xor
aad
jb
fistl
cltd
popf
std
gs
xor
and
sbb
and
mov
scas
dec
sub
jmp
decb
int
inc
ss
cltd
jmp
fistl
sub
data16
mov
popa
cmpsl
sub
scas
adc
cmp
pop
aas
and
xchg
cli
lock
scas
xchg
jbe
and
xchg
xorb
mov
xchg
ss
jne
rol
sbb
add
adc
pop
jmp
xor
enter
into
add
popf
clc
cmp
gs
sub
das
sub
dec
dec
rcrl
mov
pop
ja
cmpsl
cmc
mov
jge
mov
pop
lds
add
fnsave
pop
sahf
pop
sti
xchg
sub
into
sbb
sub
addl
mov
cmc
sub
into
inc
stos
imul
les
lods
scas
sbb
inc
cmpsb
and
mov
shl
jo
aas
dec
add
mov
push
lahf
or
test
push
mov
imul
ljmp
adc
mov
scas
bound
stc
test
nop
xorl
or
or
sbb
mov
push
repz
push
inc
adcl
faddl
loopne
rcll
xor
repnz
movsl
into
stc
lods
jp
std
mov
subb
pop
call
aas
and
sub
add
andb
nop
cmpb
push
inc
jge
aas
repz
mov
inc
xchg
push
lahf
movsl
lods
push
das
fidivs
xlat
adc
mov
xor
mov
jns
mov
mov
inc
repz
mov
inc
shrl
test
xchg
testl
roll
add
cmp
pop
stos
js
mov
nop
sbb
jo
pop
mov
sub
push
fwait
in
adc
inc
lahf
lds
fidivl
wbinvd
js
mulb
or
aaa
imul
enter
loope
sub
icebp
cmc
fcomps
out
js
xchg
fadd
lea
and
mov
pop
cmp
in
inc
adc
mov
out
jl
cmp
adc
nop
xor
testb
xor
push
shl
inc
cmp
jge
cmpsl
jo
xor
adc
push
cmc
int
andl
adc
loop
mov
lds
sbb
decl
movq
mov
shlb
ds
or
insb
inc
adc
adc
in
sbb
push
mov
and
jo
out
cmp
jmp
or
mov
or
pop
sub
test
iret
test
movsl
lds
int3
arpl
pop
dec
pop
pop
cltd
fidivs
inc
shll
sbb
icebp
lahf
lret
int
sahf
or
sbb
add
push
jg
pop
mov
cwtl
add
dec
cmc
mov
nop
xchg
fsubp
leave
aam
jge
xchg
pop
xchg
push
in
mov
or
dec
dec
fs
shlb
cmp
add
cli
enter
and
mov
cmp
cld
inc
aam
daa
inc
out
adc
mov
pop
cli
xchg
jg
or
mov
cmp
adc
fisttpll
in
loope
les
inc
sbb
lret
fsub
mov
mov
and
jb
popa
shlb
imul
scas
xor
cmp
dec
xchg
fucomip
pusha
xor
add
mov
and
inc
popa
jnp
xchg
fmull
mov
je
flds
movsb
adc
es
out
cli
sbb
je
sbb
rolb
or
stos
cmpsl
add
xchg
lret
add
sar
and
dec
pop
roll
es
mov
std
adc
inc
jp
cmp
inc
mov
xor
adc
mov
test
mov
xor
mov
pop
mov
and
test
dec
dec
inc
addb
lods
sbb
lret
js
cld
pop
mov
inc
into
lret
pop
movsb
jge
xchg
and
jno
fcoml
pop
pop
ja
les
orb
sbb
inc
into
frstor
cmpsl
arpl
fldcw
mov
pop
mov
pop
dec
push
jb
xor
into
nop
push
adc
xchg
mov
rcl
fisubs
xchg
xchg
and
pusha
and
lcall
and
jecxz
add
or
ss
jecxz
ficomps
in
lret
fistpl
cmp
sbb
pop
scas
mov
repz
mov
mov
xchg
mov
adc
xchg
adc
xchg
or
das
adc
or
ja
ret
in
std
dec
mov
rolb
xchg
fneni(8087
andl
inc
bound
mov
pop
jb
sbb
dec
rolb
push
jae
mov
sub
or
aad
mov
inc
inc
mov
repz
inc
hlt
cwtl
mov
dec
jge
aam
in
divl
xor
stc
fisubl
frstor
cld
mov
dec
mov
rcll
movsl
adcl
loopne
fbld
scas
mov
pop
lret
and
fsubs
cmpsl
cmp
sub
fs
pop
stc
aam
pop
divb
cwtl
dec
fbld
inc
adc
mov
cmp
out
ret
repnz
or
in
test
xchg
pop
xlat
mov
jge
push
imul
jbe
mov
dec
sbb
icebp
mov
and
pushf
enter
popl
push
pop
stos
or
xchg
lret
or
push
in
out
push
jge
enter
xchg
je
fsubp
orb
scas
inc
xchg
adcl
and
lods
pop
mulb
xchg
sbb
push
lahf
arpl
or
xor
inc
clc
jp
jge
adc
in
cmp
lods
push
into
movsl
pusha
filds
mov
lcall
push
push
test
in
jp
mov
mov
cmpsl
hlt
push
dec
add
mov
dec
jge
push
outsl
mov
mov
or
addl
jns
loope
popa
sbb
jg
and
ficoml
jmp
loope
fstps
sbb
sbb
jae
cltd
fidivrl
cltd
or
xlat
or
cmp
sbb
mov
dec
mov
push
sub
pop
pusha
dec
push
mov
bound
jle
testb
aaa
loopne
das
dec
dec
loop
cmpsb
sub
cmp
inc
push
neg
and
push
stos
mov
imul
push
insb
push
aad
jnp
and
faddl
and
mov
pop
adcb
daa
cs
ds
mull
sub
pop
lea
das
aam
dec
js
ret
and
xchg
rorl
hlt
or
dec
es
mov
add
mov
rcrl
add
sarb
rcrl
mov
andb
fcoms
push
xchg
jae
lea
dec
cmp
inc
popf
les
jnp
sub
in
test
loopne
mov
movsl
pop
icebp
mov
jne
jno
inc
shll
rorb
cmpsb
out
jp
sbb
cmp
pushf
and
mov
sub
clc
decb
in
mov
lea
repz
fsubrs
iret
imul
push
lret
jle
cmp
jge
dec
aas
daa
dec
cmc
scas
loopne
mov
ljmp
shlb
cmp
lret
push
rolb
mov
jle
jge
mov
mov
or
iret
mov
test
ret
icebp
xor
or
mov
jo
fstps
outsl
xor
or
sub
mov
pop
xor
popf
scas
movsb
les
iret
pop
dec
fdivrl
jno
xchg
mov
insb
and
push
sahf
mov
cli
pop
rcrb
xor
and
ror
aaa
dec
xchg
pop
dec
add
mov
stos
xchg
or
ret
or
push
or
cmp
or
arpl
mov
cmp
je
outsl
ja
adc
sub
mov
push
add
loope
push
mov
mov
aad
or
inc
sub
lcall
and
js
xorb
aam
dec
cmpsb
inc
inc
push
mov
hlt
adc
cmp
pusha
cmp
dec
sbb
cmp
popa
xor
push
fcomps
std
loop
dec
fucomi
icebp
lahf
xorb
cltd
outsl
adc
lods
leave
xor
clc
or
imul
pop
mov
jmp
stc
mov
lods
add
outsb
scas
sbb
dec
cmp
mov
idivl
adc
jae
and
add
inc
cmp
shr
push
ja
and
aad
jmp
dec
sub
cmp
nop
xor
sbb
fmul
ss
insb
pop
in
test
js
inc
dec
dec
sub
inc
adc
ss
push
cmp
inc
movsb
pop
les
sub
mov
pop
fbld
push
ja
lret
cmp
pushf
xchg
adc
inc
cs
xlat
test
stc
add
jp
loopne
xor
adc
test
cmp
inc
mov
mov
xbegin
stc
pop
or
mov
dec
push
sub
sub
test
push
mov
faddl
and
std
in
cmp
scas
out
lahf
addr16
push
out
adc
jno
mov
or
imul
jp
outsl
adc
cltd
ret
arpl
fimull
shrl
inc
dec
xor
aad
rcll
mov
das
jae
jae
int3
nop
mov
mov
push
mov
mov
test
sbb
add
push
inc
outsl
lret
jp
add
jmp
mov
mov
cmp
mov
mov
stos
cli
stos
scas
xor
jecxz
stc
sbb
xchg
sbb
mov
clc
adc
xchg
mov
sarl
jmp
loopne
pop
cmp
or
jb
pop
icebp
sub
in
jg
cmp
jmp
mov
ljmp
inc
arpl
jmp
mov
jmp
adc
push
scas
pop
addr16
ds
scas
inc
mov
in
mov
mov
pop
add
sarb
jns
stc
or
fidivrl
and
add
dec
addl
add
push
shr
xor
jns
inc
loope
push
ret
ds
fs
movl
push
xlat
lds
ror
adc
cmp
xor
push
shlb
popa
sub
xor
int
pop
inc
mov
mov
clc
mov
xchg
loop
imul
xchg
cmp
pop
jg
fucomi
cltd
cli
jb
dec
and
add
test
cmp
jmp
jl
mov
sub
adc
mov
lret
jno
dec
inc
xchg
int
loopne
jbe
jno
incb
fwait
or
insl
xchg
mov
dec
pop
out
add
es
push
dec
push
xchg
jno
leave
add
ret
out
sub
mov
into
fistpll
clc
sbb
xor
mov
xchg
pop
add
movsb
jecxz
inc
push
push
or
or
iret
incl
xorb
sbb
and
jae
fwait
sarb
sbb
lret
lods
mov
inc
nop
push
std
cli
inc
imul
and
cmc
je
dec
mov
fcoml
pop
and
fildll
dec
mov
pop
int
cmpsl
or
scas
call
stc
or
xchg
leave
andb
jmp
xor
jg
shlb
rcll
jnp
cmp
test
dec
push
sbb
sub
mov
out
adc
pop
sbb
pop
icebp
adc
add
mov
pop
addb
sbb
xchg
jno
cltd
or
sbb
jle
repz
mov
sub
push
jp
push
push
mov
mov
adcb
add
mov
inc
xor
std
sub
out
mov
insb
push
fistps
mov
enter
movsl
in
fnstsw
cmp
push
lods
lea
lret
xchg
or
push
mov
xchg
insb
mov
adc
imul
push
jb
pop
mov
outsb
adc
leave
mov
push
shrl
fisubrl
inc
sub
xchg
js
xchg
mov
xchg
ja
mov
ficompl
and
dec
scas
push
shlb
call
data16
xor
sbb
xlat
mov
jae
and
push
test
mov
xor
mov
into
xchg
shll
shrl
xor
addr16
and
in
je
mov
pop
dec
or
push
leave
rolb
cmp
jns
mov
sub
aas
adc
pusha
inc
cmp
dec
sub
data16
movsl
lods
xor
or
cli
sbb
shll
or
mov
cmp
fsubrl
mov
push
iret
adc
jne
ror
add
test
aaa
rorl
mov
in
pop
xor
subl
outsl
mov
das
out
mov
insb
cmc
loopne
and
mov
jne
jb
xor
or
mov
pop
mov
loopne
push
cs
mov
test
mov
iret
sahf
test
jle
push
and
shl
fnstenv
cmp
or
lahf
fs
out
or
popa
imul
push
dec
stos
test
leave
jae
mov
fstpt
notl
in
xchg
unpckhps
mov
imul
in
push
popf
shl
dec
cmpl
sub
adc
pop
outsb
jae
pop
cs
or
sti
sub
push
fsubl
push
xor
cmpsb
das
mov
inc
mov
ret
add
or
inc
leave
mov
jno
mov
cwtl
loope
pop
push
xchg
dec
out
adc
clc
dec
roll
cli
lock
lock
pop
call
int3
les
addb
mov
pop
mov
insb
ss
and
mov
sub
inc
xchg
cld
fists
pushf
ja
xchg
cltd
mov
add
dec
pop
mov
gs
and
mull
sub
adc
movsb
clc
fcoml
dec
js
inc
in
fadd
pushf
mov
xor
dec
ss
rcrl
addr16
push
popf
clc
and
inc
out
push
filds
xchg
call
das
sti
dec
hlt
movsb
xchg
out
jae
xor
sub
lods
daa
add
jo
test
jbe
add
sahf
test
adc
cltd
jb
or
test
push
inc
push
push
les
adc
andb
fs
push
cmp
lret
xor
add
aam
lds
es
mov
jmp
dec
arpl
daa
ret
addr16
imul
sahf
xchg
push
inc
and
lret
sub
xor
adc
pop
rcl
into
jae
out
mov
insb
inc
or
loope
cmp
or
loopne
dec
test
adc
sub
or
jecxz
rcll
sub
popa
js
xor
jg
out
push
jns
repnz
fsubrs
decl
fwait
add
dec
mov
xor
lret
insb
jno
xchg
mov
xlat
daa
pusha
xchg
mov
or
repnz
mov
nop
xchg
out
ja
fistpll
gs
push
aaa
jp
lock
loopne
imull
fwait
pushf
nop
in
mov
adc
or
mov
shll
enter
in
out
mov
push
mov
rclb
das
lret
and
cmp
jbe
push
cs
push
movsb
cs
js
fs
jge
std
mov
push
cmpsl
or
out
mov
dec
sub
lret
sub
dec
std
and
inc
aaa
dec
ret
movsl
mov
test
ret
xchg
cmc
push
rolb
xor
xor
in
ljmp
loopne
insl
lret
mov
repnz
push
stc
sub
fbld
es
lret
add
jle
pop
lods
jo
movsb
push
sub
jp
pushf
push
push
mov
cmp
cmp
aaa
pop
adc
adc
ss
pop
dec
cltd
push
je
repz
faddp
mov
xor
cmc
sahf
int3
pusha
in
cmp
xchg
fst
pusha
mov
nop
sbb
cmpsb
gs
jae
pop
inc
jne
xchg
es
sub
xchg
jle
popf
lcall
lea
aas
and
cmc
mov
push
iret
pop
sbb
pop
les
push
push
mov
xchg
rcrl
es
jne
jg
aam
fucomi
popa
sbb
pop
adc
mov
hlt
popf
add
push
insl
fdivrl
je
cwtl
jb
arpl
in
jne
fstl
scas
ss
cmc
lret
or
jb
sbb
andl
xchg
ja
jbe
mov
and
push
aam
cmp
pop
pop
xor
jnp
es
call
outsl
in
xchg
inc
cs
xchg
fsubl
sub
xadd
jg
mov
imul
cmc
stc
jbe
mov
iret
call
sbb
push
aaa
mov
jl
mul
daa
mov
and
test
dec
addr16
je
icebp
js
cmp
sbb
push
xor
and
int3
popa
mov
mov
cmp
clc
pop
sub
outsl
std
sbb
movsb
fidivl
loope
fisubl
mov
xor
jp
lret
bound
jmp
xchg
mov
loopne
ja
add
dec
dec
push
jecxz
lds
and
jno
mov
pop
jmp
lret
pop
jae
scas
mov
pop
lret
mov
sbb
cmpsl
add
test
sub
xor
cmpsl
std
cmp
adc
int3
loope
mov
in
or
in
ja
fsubrs
std
cmp
fwait
xor
scas
sarl
mull
sbb
sub
xlat
cld
test
int3
inc
xor
jns
shlb
mov
popf
mov
inc
dec
jmp
subl
adc
cmp
sub
adc
into
sub
outsb
gs
xor
aas
jnp
xchg
cwtl
or
pop
movsl
sbbb
rolb
adc
inc
jae
clc
sub
sub
outsb
mov
fcmovnu
popf
cmc
inc
in
mov
leave
jae
cmpsb
adc
inc
mov
inc
push
and
fmull
pusha
stc
fwait
mov
pop
arpl
or
test
outsb
daa
xchg
sahf
xor
and
in
add
andb
push
incb
add
out
cld
adc
lds
in
ja
dec
sbb
xor
jns
mov
inc
lods
mov
fmul
mov
push
in
outsl
and
xor
and
or
movsl
out
ds
je
dec
xchg
inc
movsl
ljmp
dec
inc
mov
shl
test
xchg
data16
ficompl
jmp
cmc
shlb
mov
iret
jnp
fs
mov
arpl
out
std
push
jp
push
mov
mov
icebp
mov
xchg
jns
or
and
xor
jecxz
jae,pn
adc
cltd
shll
ret
xchg
scas
cmc
and
lock
lock
mulb
jnp
inc
push
push
aam
inc
imul
or
daa
inc
or
leave
ss
sub
mov
mov
outsl
mov
push
mov
add
mov
pop
cmp
jg
cli
mov
add
loop
jle
daa
adc
pushl
inc
hlt
dec
popf
stos
gs
xor
jbe
pop
sub
loop
mov
push
arpl
cmp
cli
mov
xor
fnstcw
adc
jg
das
mov
cli
mov
push
loop
decb
or
int3
mov
push
pop
xchg
cmp
and
out
xchg
mov
jb
loop
fiadds
es
lret
pop
push
or
jecxz
sub
jp
jae
pop
xor
cmp
pop
jecxz
ljmp
leave
xor
pop
push
jne
mov
cmp
out
test
or
dec
js
nop
xor
jb
out
lret
dec
adc
dec
adc
push
mov
inc
xchg
fcoml
add
iret
mov
inc
jecxz
rcrl
loop
sti
mov
push
sbb
imul
pop
data16
in
or
bound
xor
decb
cmp
test
mov
fisubrl
sub
sbb
mov
and
fists
daa
outsb
cld
jg
aaa
dec
dec
mov
mov
sbb
sti
insb
fsubl
pop
push
xchg
add
add
in
cmp
mov
clc
jg
push
pop
xor
or
push
xchg
add
push
mov
push
adcb
jg
or
lahf
jno
mov
jl
push
enter
lahf
jo
shrl
inc
jb
fdivl
jns
aam
mov
nop
int
pop
fadds
mov
lret
out
cmp
cld
dec
cmp
lea
aas
xor
imulb
sub
add
adc
cmp
xchg
popf
xchg
out
test
inc
rclb
add
push
rolb
push
dec
xor
imul
ftst
outsl
iret
cmpsb
bound
aas
seta
sub
sarl
pop
jae
cmpsb
add
jl
dec
push
push
sbb
cmc
mov
pop
cs
dec
mov
addb
push
pushf
xor
loopne
sarb
xchg
in
pop
test
lahf
push
inc
roll
fs
pop
sbb
cmp
adc
adc
fistl
repnz
fistpl
ds
int
mov
pop
pop
arpl
and
push
scas
dec
xchg
or
xchg
pop
shlb
out
xchg
pop
stc
rolb
xor
mov
cmpsb
dec
mov
lds
xchg
stos
mov
lods
mov
into
les
mov
stc
int3
fwait
dec
fists
dec
xor
mov
xchg
push
adc
mov
push
lret
sub
filds
leave
jo
adc
or
push
sbb
gs
jge
fisubs
pop
push
popl
pop
hlt
movsb
mov
xchg
jno
divl
mov
pusha
mov
aaa
rcll
mov
mov
mov
pop
jl
jle
fs
popf
adc
adc
cli
ja
cltd
test
jno
dec
adc
lahf
lret
and
mov
aad
sbb
mov
jle
outsb
jno
dec
ret
ja
mov
mov
cs
es
stos
lods
push
loopne
pushf
or
cmp
cmp
loop
inc
mov
iret
movsl
icebp
leave
fadds
xor
adc
out
aam
jbe
mov
imul
sub
adc
cld
sub
test
nop
cmp
cmp
rcr
arpl
or
cmp
int3
popf
or
jnp
inc
test
dec
pop
pop
or
outsb
divl
out
les
stos
aas
pop
loope
push
cmc
cmpsb
shlb
or
fwait
int3
xor
bswap
xchg
or
mov
jnp
stos
jp
sahf
enter
sub
sbb
cmp
pop
inc
push
sahf
jae
aas
notb
pop
lea
je
xchg
sbb
adc
ss
test
ret
pop
push
loope
dec
popf
or
inc
sub
dec
fadd
shlb
sbb
jae
sbb
test
dec
imul
sbb
mov
leave
mov
sbb
rclb
sub
out
sahf
mov
xchg
mov
dec
data16
sahf
xchg
clc
aas
mov
add
outsl
repnz
int3
arpl
aam
cltd
adc
adc
pushf
jmp
jp
sub
dec
sub
push
popf
js
movsb
push
add
xlat
inc
inc
fstpl
jbe
adc
pop
fdivrl
pop
fidivrs
add
ljmp
mov
popa
xchg
loopne
or
fxtract
nop
add
arpl
shrl
push
cmpsl
rclb
mov
xchg
mov
pop
add
cmp
daa
cmp
fnstsw
xor
in
shrb
gs
jo
jbe
rorb
add
ret
cmp
add
fldt
lcall
clc
lea
aam
sbb
pop
idivb
xorb
pusha
and
mov
lds
mov
pushf
lock
adc
test
mov
jne
xchg
push
mov
not
jmp
shr
inc
into
arpl
mov
cmc
push
mov
cmpsl
dec
mov
lahf
mov
ret
out
in
iret
pop
xor
push
int3
push
loop
push
push
cwtl
es
pop
aam
test
loop
testl
out
mov
add
loope
pop
mov
cltd
daa
xlat
repz
popa
mov
loopne
cli
popa
ss
lea
fstpt
imul
roll
or
aaa
push
jmp
jle
stos
mov
and
stos
mov
ja
inc
fiaddl
push
enter
fs
xor
mov
pop
add
les
mov
mov
inc
bound
jle
xlat
push
fucom
mov
cmp
fldpi
out
fsts
add
mov
inc
jnp
cmp
gs
pop
sbbl
inc
or
or
or
xchg
gs
cmc
cmpsl
call
test
scas
es
add
hlt
push
leave
inc
mov
add
int
fbld
lods
and
jnp
mov
ja
dec
in
push
enter
ss
jmp
mov
sub
cmpsl
add
xchg
pop
pop
fs
cli
cmpsl
ljmp
shll
jo
aad
push
adc
mov
add
inc
jg
lods
and
jl
mov
sbb
sub
cmpsb
jmp
or
sahf
cwtl
cmp
add
rclb
pop
jb
dec
insl
roll
loop
and
mov
iret
nop
xchg
jle
xchg
jmp
pop
lcall
popf
jl
push
or
mov
rcrl
aam
stos
jo
dec
inc
test
add
icebp
stc
fnsave
stos
imul
sti
or
pop
ret
xor
call
adc
mov
adc
xchg
daa
xor
push
std
jb
in
push
cwtl
ret
push
or
out
cmp
ret
jbe
xor
out
enter
js
fldenv
aas
fmul
fdiv
daa
xchg
jl
mov
and
sarl
add
xor
jnp
add
mov
xchg
sub
push
mov
sahf
xor
jp
or
insl
divb
ret
sbb
scas
movsl
jmp
add
cmp
add
pop
les
push
lahf
push
movsl
in
nop
sub
push
scas
icebp
ljmp
pop
jl
jne
lods
iret
shrb
pmaddwd
mov
iret
cwtl
lcall
pop
test
rcl
lock
mov
jecxz
pop
push
lret
mov
js
bound
je
push
fs
scas
testl
pop
mov
sbb
mov
sbb
lret
inc
jge
and
pop
out
adc
pop
cmp
jle
mov
mov
cmp
mov
sbb
mov
pushf
ljmp
pushl
loopne
pusha
adcl
je
ficoml
inc
lds
repnz
cmp
std
loopne
and
in
icebp
fcomps
fmulp
ret
or
out
xchg
sub
xchg
outsb
xlat
mov
mov
jne
popa
jo
jae
mov
sub
clc
add
js
jb
jle
push
insb
dec
lea
mov
and
or
sub
lret
in
add
enter
ficoms
leave
aaa
mov
or
js
pop
sub
xor
aas
sub
pusha
fidivrl
in
pop
push
fidivs
sbb
insl
imul
not
cld
cmp
dec
add
dec
iret
xchg
inc
int3
pop
sub
lods
pop
mov
xor
mov
imul
icebp
xchg
and
dec
cld
sbb
push
sbb
lcall
or
jb
or
in
mov
rolb
pop
iret
test
and
cld
out
adc
pop
shll
inc
ret
push
pop
shll
movsb
insb
jo
enter
adc
stos
data16
jl
mov
mov
xchg
xor
mov
or
lret
outsl
outsb
inc
pushf
dec
jb
dec
insb
inc
cmp
in
imul
repnz
cmp
ljmp
data16
xor
xor
sub
jns
sbb
mov
fadds
mov
push
test
bound
cmpsl
mov
mov
scas
inc
repz
sub
inc
icebp
mov
mov
mov
add
xor
xor
mov
sbb
mov
sbbb
mov
xchg
cwtl
pop
inc
push
fisubs
sbb
shll
push
push
mov
pop
mov
dec
popf
loope
ja
mov
fstpt
mov
leave
out
fcoml
cs
mov
xchg
adc
mov
lea
and
loopnew
xchg
inc
enter
das
mov
lret
lods
fstl
jle
mov
das
pusha
fsubl
and
mov
lea
fcmovbe
pop
mov
cltd
jae
mov
les
in
test
cmp
xor
xlat
push
insb
fiaddl
je
or
addr16
or
cmp
jnp
sti
mov
inc
cmpsb
out
push
cs
jecxz
mov
or
sub
dec
push
mov
xchg
inc
sbb
pop
out
aas
and
mov
cwtl
sub
xor
jnp
adc
push
mov
filds
mov
es
push
pushf
faddl
addl
cwtl
outsb
movsb
cmpsb
mov
inc
orl
in
lret
jns
out
and
out
inc
ds
fbld
dec
or
push
lret
add
xchg
or
cwtl
ds
pop
cld
jae
sub
pop
mov
hlt
shll
imul
mov
mov
rcll
jns
pop
aad
into
sbb
ja
push
or
pop
jns
mov
jae
xchg
in
addr16
dec
scas
pop
ja
push
add
cmpsb
out
cmp
std
mov
loope
sbb
sub
std
arpl
or
call
xlat
imul
sub
popa
aam
or
fnstsw
jae
mov
and
aam
xchg
push
movsb
arpl
xor
xchg
and
pop
loopne
xchg
call
mov
std
icebp
insb
aaa
sub
xchg
insl
dec
cmp
sbb
ret
insl
cld
sub
lcall
push
mov
movsb
pop
push
loop
stos
fistps
ret
shl
push
insb
add
lret
jae
data16
or
popf
icebp
lret
jl
cmp
xor
sub
sub
out
pop
jne
stos
mov
sbb
inc
out
sbb
out
out
fs
pop
mov
out
or
mov
jmp
xchg
in
pop
popf
adc
ret
cmc
mov
outsb
pop
insl
in
fninit
inc
clc
push
stos
outsl
pop
popf
mov
jno
xlat
loopne
mov
push
loope
in
out
xchg
ja
enter
ffreep
jmp
mov
and
ja
mov
push
mov
cmp
lret
jnp
or
andl
sti
je
pop
jno
and
xor
sbb
inc
ljmp
shrb
leave
outsb
cld
inc
pop
shr
xchg
cmp
imul
jmp
adc
push
gs
push
call
pusha
inc
pusha
and
inc
cmp
and
pop
repnz
cltd
pop
mov
sahf
mov
fimuls
mov
inc
int
adc
push
mov
and
sbb
xchg
push
repz
jnp
cli
daa
mov
adc
lods
or
out
pop
inc
push
movsb
adc
xor
pop
fiadds
stc
bnd
repz
outsb
push
mov
iret
stc
mov
cwtl
popf
push
je
mov
jle
mov
push
mov
sbb
xor
out
xchg
mov
pop
psllw
sti
cwtl
jge
jae
fidivrl
jp
add
xchg
lods
inc
or
lods
xor
lahf
test
paddusb
add
es
rolb
push
mov
xor
adcl
mov
repz
jnp
adc
push
enter
addl
in
movsb
js
mov
xchg
ljmp
xchg
imul
push
stc
push
lods
xor
mov
sub
pop
or
mov
je
mov
pop
dec
push
pop
jns
mov
mov
dec
sahf
mov
loope
and
xchg
aam
sub
fwait
inc
gs
dec
pop
fcomip
int3
dec
jo
adc
and
sbb
push
mov
inc
dec
jmp
int
stc
pop
push
pop
je
cs
loopne
shrb
jnp
pop
insb
dec
dec
nop
xlat
cmpsb
mov
mov
insb
mov
sub
xchg
gs
push
bound
inc
mov
mov
insl
addr16
pop
inc
push
pop
ja
bound
fldcw
jle
dec
ljmp
xchg
sarl
jns
xchg
inc
xor
push
adc
repz
jl
or
iret
std
cs
or
jbe
aaa
stc
dec
nop
fdivl
repz
cmp
icebp
das
into
mov
insb
stc
pop
mov
add
je
gs
and
mov
push
mov
stc
fildll
ret
movsb
lahf
jnp
sbb
push
xchg
mov
movsl
cmp
dec
jb
daa
incl
push
mov
ret
cmp
xorb
ja
sbb
out
int
add
pop
pop
inc
in
push
and
jno
xor
pop
test
aaa
stos
fsubl
pop
enter
jne
and
sahf
sub
mov
das
dec
roll
fldcw
mov
ret
insb
loopne
push
mov
mov
jns
xchg
stc
jp
subb
popa
bound
push
pop
jno
vcvtsd2ss
sbb
enter
clc
push
stc
pushf
dec
divl
lock
xor
stos
popl
jae
cmp
fbstp
mov
mov
cli
jbe
out
mov
sahf
dec
and
jmp
sbbb
out
loopne
in
iret
leave
in
nop
in
mov
lods
fimuls
out
test
pop
mov
adc
into
and
je
xchg
pop
pop
jne
lahf
js
mov
pushf
pop
mov
or
inc
dec
test
ret
mov
mov
xor
jnp
add
sbb
imul
shll
or
sub
push
and
lahf
andb
lds
mov
cmpsb
jge
in
enter
sbb
int
sbb
dec
fsubs
cmc
mov
fdivl
adc
xor
dec
pusha
aas
int
jnp
in
sub
mov
cmp
xchg
shlb
and
fs
or
sub
mov
fwait
repnz
imul
cmp
pcmpgtw
or
ja
push
xchg
movsl
push
fsts
leave
mov
add
jnp
cli
stos
pop
loop
imul
data16
shll
popa
push
psllq
adc
fildll
lret
mov
fidivl
mov
ja
sub
lret
mov
ja
sahf
mul
divb
add
add
test
and
sbb
dec
out
icebp
insl
push
and
xchg
cmpl
arpl
push
aam
jnp
push
and
movl
mov
jle
push
pusha
mov
xlat
out
dec
pop
in
add
lods
push
jnp
addb
add
mov
shll
sub
xor
shrb
xchg
cmp
xor
cmp
decl
cld
mov
push
adc
mov
push
xchg
push
cld
pusha
adc
cwtl
sarl
lods
cmc
int
fldcw
jg
dec
mov
or
aas
push
sub
enter
add
mov
push
mov
push
pushf
xchg
scas
sbb
call
pop
arpl
push
in
sbb
enter
jo
or
negb
aad
push
icebp
xor
outsb
es
push
xchg
mov
add
push
cmp
ljmp
mov
sub
sbb
mov
cwtl
pushf
icebp
mov
daa
pop
jmp
jne
mov
lock
jbe
mov
ror
dec
insb
ret
movsl
xlat
xchg
and
adc
sbb
mov
mov
sarb
pop
hlt
sbb
fstpt
sbb
mov
mov
cmp
int3
popf
data16
push
pop
sbb
adc
xor
xor
movsl
push
xchg
mov
clc
std
dec
adc
pushf
and
lods
jmp
and
xchg
push
lret
mov
sub
cmp
daa
jbe
xchg
mov
addr16
pop
jae
or
add
jecxz
lret
scas
cld
sub
jns
jmp
call
xor
push
into
cltd
cs
push
jno
pop
stos
lahf
sahf
cmp
mov
push
push
cli
neg
lcall
mov
insb
fdivrl
stos
dec
lret
mov
hlt
dec
movsl
fidivs
cld
scas
icebp
loop
or
mov
fistps
lods
cltd
mov
nop
out
imul
or
add
sbb
cli
cmc
arpl
cli
mov
cwtl
daa
sub
pusha
pop
xor
fs
out
in
out
imul
ret
leave
filds
fstpl
out
in
mov
pop
repz
iret
ja
mov
push
addr16
xchg
inc
insb
out
shlb
adc
cmpsb
mov
mov
fimuls
xor
aad
outsl
push
in
and
jae
xchg
push
lcall
insb
popf
sbb
jnp
push
inc
lock
and
cmpsl
xchg
lods
or
enter
sub
test
mov
xor
out
testl
lret
cmp
mov
lea
fistps
les
jne
jmp
rcrl
sub
fidivrl
mov
shrb
daa
jno
mov
mov
push
cs
xor
cmp
into
jecxz
cmc
mov
lahf
xor
sbb
into
test
jp
out
cltd
sbb
iret
mov
mov
push
out
inc
fsubrs
gs
dec
and
lret
pop
ret
arpl
mov
inc
fwait
loop
xor
or
xor
xchg
and
xchg
fcmovnb
mov
mov
sbb
popl
in
ret
fcomp
loope
sub
mov
imulb
cwtl
adc
mov
jl
lret
cltd
sub
mov
cltd
jb
lret
cmp
xor
pop
lcall
mov
or
inc
fisttpl
adc
inc
push
xchg
mov
xchg
pop
mov
pop
pusha
pop
pop
insl
mov
jb
in
loopne
mov
mov
fstpt
repnz
pushf
add
int3
sub
xchg
jp
mov
mov
sub
out
or
push
in
je
mov
xor
mov
in
sub
mov
lods
pop
jecxz
into
cmp
rcll
inc
mov
sbb
into
lods
mov
cmc
sbb
and
fidivrs
sbb
out
xor
mov
enter
psrlq
popf
cmpsb
jbe
repz
mov
cmp
fs
push
jnp
cltd
mov
pop
lods
xor
repnz
rcll
xchg
dec
js
out
int3
jbe
inc
sbb
test
in
dec
xchg
dec
pop
sub
mov
xchg
or
cmc
mov
lods
pmuludq
pop
xchg
fcoms
xchg
shll
ret
mov
inc
mov
mov
sbb
imul
or
mov
mov
inc
pushf
mov
test
test
fs
mov
jmp
leave
sub
scas
sub
in
sub
imul
fsts
out
lcall
jmp
cmpsb
push
cmp
jo
push
cwtl
push
xchg
into
pushf
inc
enter
inc
lods
in
lods
push
xchg
and
es
fsub
rorl
aas
mov
insb
imulb
repz
sti
fneni(8087
ds
cld
xchg
cmpsb
adc
push
push
stos
jbe
push
mov
ja
movsb
mov
or
xchg
jl
rclb
inc
test
cmp
mov
inc
jns
or
push
mov
xor
cmpsb
dec
lret
mov
sbb
and
push
jb
lds
leave
mov
mov
inc
hlt
hlt
sbb
xchg
sti
and
pop
je
mov
jg
dec
int3
fidivrs
lods
push
mov
mov
or
sub
add
outsl
stc
insl
mov
dec
mov
clc
or
jo
adc
sahf
in
outsb
adc
xchg
pop
mov
insl
in
cwtl
push
push
cmp
sahf
movsb
cli
push
pushf
js
test
or
mov
inc
fucom
mov
cmpsl
xchg
xor
push
out
dec
loop
add
in
lahf
pop
inc
adc
add
ja
aas
sub
lcall
ja
rolb
ja
or
outsl
mov
mov
sub
xor
out
pop
pop
xor
inc
pop
or
push
bound
or
pop
lahf
mull
cmpsl
scas
loop
mov
and
fildll
jae
pop
and
ja
cwtl
lods
sbb
out
repnz
fadd
push
xchg
add
sti
xchg
sbb
bnd
ja
cmc
mov
jbe
sbb
scas
sub
mov
add
enter
mov
out
or
add
jecxz
or
push
mov
jne
adc
xor
mov
sub
mov
test
fs
ror
stc
stc
cmp
in
lea
and
jno
adcb
mov
xor
mov
dec
inc
mov
sbb
ret
ds
inc
movsl
iret
in
lret
sub
push
scas
arpl
test
adc
pop
xor
dec
dec
loope
mov
jo
add
push
jmp
addr16
adc
pop
fwait
cmc
stos
ja
pop
sub
push
sti
add
adc
dec
xor
nop
cmc
and
ja
lock
or
je
iret
xchg
add
push
sbb
jmp
add
lahf
mov
popf
cmp
pop
pop
stos
push
jae
jge
or
pop
int3
jne
movsl
inc
mov
xchg
inc
sbb
xchg
xchg
sbb
test
in
xchg
sbbb
or
hlt
sub
rcl
mov
ds
push
addr16
and
mov
jno
outsb
push
popa
add
xchg
sub
std
mov
and
stos
push
testb
mov
bound
mov
xor
sbb
adc
int3
sub
sub
jecxz
mov
mov
add
scas
pop
xchg
jbe
xchg
adc
inc
push
push
int3
lea
rcrl
push
xor
adc
xorl
loope
imul
mov
jle
test
push
stos
sbb
mov
divb
mov
mov
add
cmp
fcmovbe
sub
mov
out
and
in
and
xchg
inc
rolb
jmp
test
jp
adc
jle
mov
imul
pop
cmpl
and
push
fs
inc
mov
mov
xor
push
pusha
push
inc
sub
mov
and
dec
mov
mov
xor
or
push
sub
jns
test
cmp
stos
ja
enter
fwait
push
pop
ja
sbb
pop
pop
pushf
and
sub
outsl
lret
add
mov
int
jge
cmpb
stos
push
insl
in
mov
or
inc
mul
fdivp
loope
xchg
enter
inc
or
cltd
scas
pop
cld
in
loopne
jl
out
cmp
test
xor
lret
icebp
xor
insl
leave
xchg
xor
xchg
loopne
pop
sub
rep
fiadds
rcl
testb
or
push
mov
mov
dec
cmpsb
mulb
mov
sub
adc
sahf
adc
in
mov
mov
in
lsl
cmpsl
js
out
in
es
push
xchg
add
inc
rcrb
xor
mov
cmpsb
add
fdivs
repz
xchg
sub
dec
push
mov
ja
inc
adc
out
pop
ljmp
xor
push
mov
lret
sbb
sub
push
lea
xorl
fmull
mov
dec
aas
pop
jecxz
mov
dec
testb
lahf
xchg
cli
xor
push
ficompl
adc
xor
xor
sub
adc
ret
push
test
xchg
xor
addr16
repz
lahf
call
jnp
fmull
cmpl
mov
movb
xchg
mov
dec
shrb
mov
je
mov
stc
pop
dec
push
testl
adc
lock
bound
fwait
cmc
das
sub
iret
into
add
or
lea
xchg
fs
rolb
xlat
fmuls
mov
pop
xor
dec
int3
mov
shl
push
test
push
sub
xlat
cmp
mov
dec
and
pop
adc
std
dec
xchg
paddsb
lahf
mov
test
cmpsb
sub
dec
mov
loope
sub
push
sahf
mov
sub
cld
sbb
or
int
cld
sbb
sbb
xchg
sub
cmpsb
fwait
popf
sbbb
lods
mov
in
adc
cltd
jl
shlb
jmp
push
jnp
mov
or
xorl
or
jl
inc
and
jb
in
sbb
push
sub
out
rclb
mov
sub
imul
jmp
in
cs
std
js
and
or
dec
loop
push
jg
mov
cmpsl
es
std
mov
gs
push
insb
jge
push
cltd
es
jae
jnp
ja
pop
pop
fimuls
lds
sahf
push
popf
test
es
pop
jnp,pt
nop
clc
inc
ret
in
lret
mov
es
imul
lcall
inc
mov
int
jmp
sub
outsl
sarb
mull
sub
inc
and
adc
jne
or
ds
test
push
push
xor
loope
outsb
in
subl
insb
addb
mov
push
pop
mov
lods
in
and
xchg
lock
fsubs
mov
in
out
movsb
testb
pop
in
add
std
loopne
mov
out
jle
or
je
lret
inc
stos
cmpsb
enter
aam
mov
add
dec
jae
mov
gs
data16
dec
push
mov
gs
push
jnp
pop
stc
xchg
je
xor
pop
cld
das
dec
rcrl
rclb
lods
pusha
cmp
es
cltd
push
dec
outsl
add
or
in
push
hlt
cmpsb
fbld
das
or
mov
fists
sub
in
inc
cmp
sbb
xchg
mov
das
test
repnz
adc
mov
orb
cmp
ds
pop
int
sub
push
mov
frstpm(287
cmpsb
sbb
shrl
jl
sbb
bound
sbb
lods
shll
adc
jecxz
or
ja
cmpl
mov
lock
cmp
test
dec
das
out
ljmp
lahf
xchg
mov
stc
push
divb
daa
mov
stos
jo
push
inc
shlb
jmp
mov
testl
lret
pop
loopne
sbb
and
sbb
std
or
mov
in
pop
xchg
xchg
jbe
test
ret
es
or
roll
mov
stos
mov
sahf
push
mov
sub
or
jge
push
ss
xchg
ret
icebp
adc
bound
repz
adc
mov
arpl
out
adc
sub
mov
xchg
movsl
addb
ljmp
xchg
mov
or
jo
aas
xor
add
cli
sbb
icebp
rcrb
das
sub
fcompl
mull
xlat
das
mov
adc
outsb
es
repnz
add
es
xchg
mov
and
lahf
es
add
sub
push
inc
lahf
sahf
lcall
pop
push
mov
fsubrl
jge
adc
push
cmp
test
pop
outsl
stos
loope
sub
add
and
scas
and
push
and
sbb
cmp
xor
aam
and
loopne
sub
xorb
repnz
movsb
inc
and
jae
fisubl
ja
fisubl
or
xor
fsubrs
inc
into
inc
iret
jle
lock
into
popa
push
and
fiadds
cmp
jnp
mov
pop
outsb
out
jbe
xor
mov
ss
mov
pop
mov
mov
push
xor
dec
adc
or
cmp
cmpsl
cmp
or
push
imul
sarb
ficomps
adc
cmpsb
xchg
xor
rorb
adc
push
dec
jmp
mov
imul
jb
mov
xchg
mov
icebp
pop
adc
cmp
sbb
fistl
and
and
push
cmc
shlb
sub
pop
sbb
inc
idivl
call
sbb
daa
sarl
cltd
inc
xor
ret
es
data16
lods
iret
mov
inc
out
cmp
xlat
loopne
fdivrl
pop
stos
ret
loope
sub
xchg
pop
and
sarl
sbb
fadd
out
shll
add
testb
shlb
jp
adc
push
testl
adc
push
nop
in
dec
jl
mov
mov
add
popf
mov
mov
or
xorl
mov
adc
sbb
in
insl
xchg
in
xchg
push
int
pop
in
or
sub
add
insb
mov
jge
lret
in
adc
ret
or
cmp
add
mov
and
xor
or
or
mov
fidivs
mov
insb
sub
cld
test
outsb
xor
xchg
sbb
out
gs
inc
sbb
icebp
ret
or
or
sbb
cld
into
dec
in
rorb
push
test
push
testl
sbb
cmp
jne
pushf
cmp
cltd
loope
sbb
xor
fiadds
mov
lods
incl
js
xchg
stos
jge
aad
iret
orl
subl
mov
loopne
repz
xchg
ret
dec
mov
jmp
movsl
lods
mov
fld
inc
pusha
mov
scas
pop
fldenv
xor
pop
pop
lods
lret
jl
cmpl
cmp
pop
add
and
cwtl
mov
and
fcoms
decb
mov
xor
movsl
pop
pop
fistpl
test
dec
dec
pop
inc
fwait
clc
test
std
cmpb
je
fwait
test
mov
dec
addr16
idivb
daa
fcmovnu
pop
imul
ficoml
subb
in
xor
popf
stc
push
out
fsubrl
ret
and
idivb
sti
cs
jge
test
int3
stos
adc
inc
lret
jno
loopne
mov
fsin
push
and
scas
xchg
push
xor
stc
sbb
add
cli
inc
roll
adcl
inc
sub
repz
cmp
xchg
lods
icebp
rcr
push
push
ljmp
repz
pop
pop
or
mov
aam
cltd
or
sahf
push
dec
lods
xlat
push
mov
mov
push
dec
repz
push
xchg
pushf
js
movsb
and
inc
mov
dec
xchg
pop
add
xor
mov
inc
idivl
xchg
cmpl
in
add
clc
xchg
mov
popa
lds
mov
mov
insb
dec
nop
idivl
fs
push
je
push
jno
aam
into
gs
cmp
adc
insl
xor
lods
xchg
pop
scas
stos
cs
cmp
xor
and
lret
arpl
inc
icebp
out
movl
int3
push
cmp
or
pop
cli
jl
push
xchg
dec
cmp
repz
insb
lds
cmp
sbb
pop
popf
cmp
mov
dec
dec
int3
pusha
push
cmc
sbb
lods
testl
fs
mov
out
in
outsl
hlt
jle
aaa
test
aaa
lods
dec
sbb
cmc
imul
mov
mov
or
jns
call
enter
sti
pusha
and
push
fisubl
mov
rclb
hlt
mov
cmc
lret
lds
imul
in
in
add
mov
cmpsb
testb
sub
jae
out
mov
rcll
jg
ds
ja
insb
push
ret
out
insb
ret
mov
addr16
inc
cwtl
xchg
push
shll
frstor
mov
sbb
iret
jp
imul
and
bound
sub
in
push
or
lods
sbb
inc
ss
xchg
fistl
sub
bound
add
in
fstl
or
push
cmpsl
adc
out
mov
xchg
sbb
inc
pop
adc
test
mov
into
xor
jl
add
push
mov
sub
arpl
stc
mov
jp
lock
mov
pushf
movsl
or
adc
xchg
add
pusha
sarb
pop
adc
mov
ret
mov
std
jmp
inc
test
rolb
pop
ficoms
jnp
movsb
jp
in
jge
sbb
jb
jg
mov
mov
popf
mov
adc
add
push
aas
insb
mov
inc
stos
fdivrp
inc
xor
mov
lcall
icebp
or
push
mov
rcrl
mov
movsl
pop
jmp
mov
jns
inc
pop
xchg
int3
mov
sbb
xlat
cmp
xchg
jae
push
adc
jp
mov
sub
out
mov
pushf
mov
xor
cmc
pusha
dec
icebp
push
push
arpl
sahf
mov
lea
jle
inc
lret
pop
stc
mov
mov
cmp
xchg
dec
out
in
mov
aad
call
imul
push
push
test
sub
jle
sti
es
jno
inc
add
sbb
xor
test
add
cmp
fxch
addr16
lock
fbld
out
xchg
dec
pop
arpl
or
pop
add
call
movsl
outsl
nop
lock
inc
test
sub
nop
pop
jl
nop
gs
or
enter
outsb
cmp
xchg
in
mov
ficomps
stos
and
jns
sub
push
dec
cmpb
jbe
mov
and
xchg
std
xchg
mov
ret
cltd
push
or
fmul
outsb
jge
cmp
in
sbb
pushf
fs
mov
nop
mov
cltd
pop
pop
pop
psadbw
pop
xchg
pop
adc
pop
mov
sbb
out
jmp
push
and
cltd
enter
stos
sbb
movsb
inc
imul
mov
jb
in
xor
cmp
outsl
push
mov
sbbb
mov
mov
pop
loope
cltd
lret
ficomps
push
fstl
jnp
push
and
push
rol
insl
mov
cmp
movsl
push
out
ret
adc
lock
loop
jmp
xor
addr16
lahf
popf
pop
clc
pop
and
scas
xchg
adcl
xchg
pop
cmpsb
sarb
leave
xorb
loop
inc
jnp
pop
repz
movsb
xor
mov
repnz
mov
jge
sub
sub
sbb
test
out
cmp
xchg
mov
jno
push
decb
inc
mov
jp
loopne
push
mov
mov
orl
sbb
clc
xor
jp
pop
lahf
sub
push
iret
dec
xchg
in
into
push
add
or
push
push
push
int3
jg
nop
mov
shlb
in
repnz
std
push
mov
xor
pop
adc
jnp
outsl
xor
ss
ds
stos
lods
pop
mov
test
cmp
pop
dec
push
adc
int3
sub
push
iret
testb
cmp
jb
mov
and
lcall
lret
pop
jbe
fwait
and
bound
mov
xchg
inc
pop
xchg
dec
inc
cld
dec
loope
xor
dec
loop
fwait
ret
mov
nop
insl
add
loop
or
jae
sub
adc
cmp
aad
mul
cmpsb
add
aas
ljmp
cmc
insl
std
add
and
pop
dec
aam
out
jo
mov
push
jmp
add
adc
jne
xchg
cmc
adc
jae
arpl
pop
lret
je
mov
scas
std
fsubrl
or
add
and
or
roll
orl
lods
pop
int3
dec
into
enter
arpl
mov
or
jecxz
dec
add
cmp
xor
mov
pop
mov
out
shlb
jecxz
add
mov
cmpsb
mov
addb
lods
outsb
out
push
das
sbb
cmp
cmpsb
rcl
sbb
repnz
ret
ja
fsubr
scas
cwtl
ficomps
dec
sbb
nop
mov
jne
sbb
mov
push
jle
stc
and
cmp
mov
mov
fisttps
adc
mov
sahf
sahf
lods
ret
cld
aaa
int
loop
imul
mov
ret
mov
fwait
mov
mov
pop
jnp
mov
stos
push
ss
push
cwtl
in
pop
mov
mov
push
les
pop
mov
push
cmpsl
rcl
repnz
dec
jb
xor
mov
pop
dec
movsb
sti
shrl
in
adc
inc
push
mov
cmpsb
lds
inc
lods
adc
out
or
fidivs
fistps
push
mov
xchg
or
sbb
rolb
xor
roll
cmp
cmp
stc
iret
pushf
and
jae
sub
sbbb
test
stos
mov
xor
add
mov
mov
push
sub
fmul
push
push
test
pop
cmpsl
jb
out
push
test
pushf
jnp
xchg
adc
push
dec
scas
mov
and
les
inc
inc
mov
or
or
sbb
mov
xchg
es
jl
mov
push
test
pop
sbb
sbb
pop
sub
outsb
jg
lea
add
clc
cmpsb
jg
cmp
mov
jbe
outsl
or
xchg
unpckhps
mov
leave
mov
sahf
out
push
sbb
mov
popa
pop
stos
adc
pop
mov
ljmp
les
loopne
jecxz
ret
and
repnz
sbb
popa
or
xchg
mov
clc
rcrl
mov
divb
in
xchg
mov
in
icebp
rcrl
arpl
fbld
aas
cmp
clc
in
mov
mov
daa
int
je
orb
dec
push
dec
jns
shrl
stos
ljmp
shrb
adc
pop
xor
inc
mov
andl
xchg
mov
ffreep
scas
xchg
mov
add
cmp
inc
in
jp
inc
es
loope
stos
dec
push
dec
mov
jmp
int
mov
ja
out
in
mov
sahf
cld
addr16
hlt
sti
into
inc
adc
add
int
sub
add
outsl
fidivs
cmp
shll
sbb
add
shll
cmp
clc
push
ljmp
in
lret
mov
movsb
jne
inc
and
push
insl
test
stos
add
pushf
sbbb
xor
add
insb
mov
repz
fistps
cmp
sbb
out
ss
les
movsl
add
enter
jle
sub
cld
es
cmp
loopne
push
movsb
mov
movsb
lds
xor
or
mov
in
jg
push
cmp
push
ret
lcall
mov
mov
mov
pop
clc
pushf
cli
lods
insl
stos
inc
jnp,pt
addb
inc
adc
xchg
pop
rolb
pop
jae
int3
dec
mov
add
dec
nop
add
out
pop
ss
out
jne
enter
xchg
xor
mov
inc
sub
adc
xor
repnz
pusha
aas
jae
mov
inc
mov
stos
scas
and
push
inc
sar
adc
sub
ja
cs
stos
nop
inc
aaa
repnz
into
push
push
add
add
addr16
and
or
add
and
add
test
adcb
mov
xor
lods
push
sbb
mov
das
mov
leave
lods
stos
stos
iret
mov
aad
cmp
cmp
stc
xchg
adc
push
fiaddl
mov
dec
sub
add
and
fistps
add
in
leave
mov
cmp
mov
mov
jbe
add
xchg
fs
xor
xchg
inc
stc
cltd
adc
xor
in
sbb
push
xchg
sub
xlat
mov
inc
sbb
stos
imul
int3
addl
addr16
lahf
adc
mov
cwtl
sub
xor
cmpsb
cmp
sahf
mov
xor
cli
insb
rcl
neg
cli
xchg
pop
jp
mov
jp
jb
fdivs
in
push
pop
xchg
mov
mov
insl
rcrl
inc
dec
in
or
cld
sbb
adc
mov
or
pushf
sbb
fwait
xchg
jmp
mov
pop
sub
mov
mov
sbb
shll
mov
mov
pop
rorb
inc
pop
pop
mov
sub
adc
dec
xchg
int
mov
ret
iret
xchg
cltd
rcrb
addr16
xchg
mov
xchg
or
ljmp
push
rcrb
mov
fstpt
adc
ds
ds
in
add
leave
xor
pushf
cmc
lods
xor
sbb
cmpsb
and
jl
inc
inc
hlt
mov
jg
pop
sbb
cmc
enter
dec
sub
scas
jae
mov
cltd
in
push
dec
fucom
je
loop
mov
mov
inc
or
push
mov
fnstsw
jb
scas
or
add
add
or
shlb
out
popa
mov
jmp
fildl
dec
sti
cmpsl
pop
mov
test
outsb
push
push
and
ja
aam
or
xor
add
or
sti
add
inc
cwtl
xchg
in
mov
test
sbb
rcll
jl
cwtl
jge
imul
push
ret
adc
js
shr
xor
jle
outsb
mov
xchg
sub
pop
scas
dec
mov
xorb
mov
pop
test
xchg
mov
cs
movl
inc
cli
call
aas
mov
sbb
je
dec
xor
sahf
popa
jmp
movsb
aaa
aas
incl
mov
not
cmp
sbb
ljmp
xor
add
inc
mov
xchg
xchg
mul
ror
adc
mov
xchg
cld
dec
repz
mull
mov
sti
movsl
sub
cmp
xor
add
clc
adc
xor
push
xor
dec
add
test
mov
loopne,pn
xlat
je
ds
sti
inc
jl
pop
and
pause
rcll
mov
icebp
ljmp
lock
inc
lcall
xor
sbb
pop
loope
add
sbb
adc
js
pop
xor
inc
ljmp
mov
outsb
fsubrs
fbld
dec
pop
pop
popf
dec
ftst
mov
lret
daa
inc
test
lods
cmp
adc
dec
lock
pop
jecxz
out
loopne
stos
cmp
xchg
scas
mov
xchg
in
int
xorb
mov
push
or
and
pop
mov
dec
add
mov
jnp
fst
movsl
popa
jl
sbbb
movsl
es
xor
in
cld
in
fnsave
mov
cmp
ret
loop
jb
inc
jns
fdivrs
and
jo
adc
lods
mov
test
movsb
ljmp
test
mov
inc
push
mov
inc
bound
loopne
leave
popf
ja
imul
iret
fwait
mov
fnsave
xchg
call
test
and
jno
fmuls
mov
cmp
pusha
mov
stos
sub
adc
pusha
dec
push
and
mov
gs
mov
inc
mov
cmp
cmp
daa
cs
inc
sbb
pop
cmp
cmp
test
add
mov
mov
sbb
les
xchg
mov
popa
stos
loope
cmpsl
iret
push
xor
or
cmp
xor
push
lock
ja
bound
push
jno
adc
loop
and
sbb
pop
sub
lock
cli
sub
pop
xchg
mov
inc
cmp
xor
jo
lock
inc
pop
pushf
dec
xor
and
insl
jns
hlt
ja
jge
inc
pushf
mov
out
cmpl
enter
sbb
pop
or
adc
lret
adc
and
fbstp
pop
icebp
mov
jno
cmc
nop
jbe
cmpsb
aad
push
xlat
ja
in
sti
adc
jnp
sub
pushf
mov
mov
sbb
cli
imul
sub
xor
mov
lcall
hlt
and
dec
xchg
scas
xchg
inc
test
iret
jmp
inc
in
cmp
mov
jbe
dec
mov
xchg
sti
iret
cmpsb
scas
lds
push
add
fs
and
jb
in
leave
int
add
mov
arpl
cltd
lret
imul
les
jle
fldenv
mov
gs
jb
sub
mov
test
cmp
push
lods
fidivl
stos
leave
push
popf
push
xlat
loopne
adc
or
int
inc
sbb
popa
fnstenv
rcrb
mov
add
scas
popf
sub
and
inc
push
dec
scas
stos
out
pop
pop
insb
mov
or
stc
mov
xchg
data16
dec
jns
add
xor
mov
mov
jecxz
or
cmp
out
loope
nop
repnz
ja
mov
jne
loopne
or
paddw
add
mov
stc
data16
dec
and
adc
ret
dec
orb
mov
add
shrb
pop
inc
inc
xor
mov
mov
cwtl
mov
dec
xchg
rcrb
cmp
cmpsb
mov
aas
ret
and
cmpsb
jl
jle
ficoms
inc
test
add
jnp
cmpsb
push
imul
xor
inc
push
lret
inc
mov
add
fisttps
out
push
sub
movsl
or
sbb
mov
push
pop
loopne
xchg
or
pusha
lcall
icebp
outsb
or
ss
inc
iret
xchg
dec
pop
or
xchg
rcll
ljmp
sti
arpl
loopne
shr
pushf
jle
pop
xchg
xchg
or
mov
fs
shl
sbb
sub
pop
cmp
adc
mov
sbb
into
int
sub
cld
pop
gs
rcrl
mov
xlat
mov
test
inc
sub
jns
aas
jne
rcrb
ljmp
scas
pop
dec
js
test
rcrb
cmpb
xchg
xor
mov
stos
stos
sbb
dec
pop
xor
jns
pop
dec
fstpt
or
xchg
pop
jns
pop
dec
cmpsb
fwait
push
jns
fs
xchg
pop
adc
ficoml
sub
es
lds
aas
hlt
das
pop
sub
sub
lahf
cwtl
int3
arpl
mov
and
in
mov
or
pusha
dec
cmp
xchg
and
fldenv
xchg
and
push
shl
cmpsl
pushf
pop
xchg
add
movsl
xchg
sbb
mov
sub
xor
jmp
dec
imul
lds
in
pop
push
jae
punpckhbw
aas
bound
movsl
jmp
ss
addr16
hlt
in
inc
jo
pop
ret
cli
stos
push
dec
sbb
dec
add
in
or
out
push
out
sub
in
es
xor
adc
push
sub
fsubrp
jmp
and
fs
iret
subl
sub
jge
cltd
jmp
dec
aaa
jns
add
orb
lret
into
out
into
aad
inc
rcl
pop
jmp
xorl
cmp
cmc
mov
dec
in
jns
adc
pop
adc
jo
outsb
ja
adc
dec
lds
pushf
adc
outsb
inc
ffreep
adc
cmc
or
subb
in
pushf
pop
mov
clc
imul
pop
push
or
ret
mov
js
insl
adc
stc
lahf
in
jns
sarb
jl
data16
mov
adc
out
das
lods
sbb
arpl
cmpl
mov
mov
inc
sbb
sub
fsubl
xorb
lret
sub
movsl
jge
imul
mov
mov
or
fsts
sbb
fisubrs
lret
add
popf
mov
add
dec
pop
mov
cmp
add
adc
outsl
push
outsl
adc
push
and
mov
scas
jle
sti
or
sub
call
loop
fwait
push
fisubrl
mov
in
jno
add
adc
mov
mov
pop
dec
and
jg
je
fdivs
mov
clc
clc
adc
fdivrs
xor
xchg
mov
xor
mov
clc
cmpsb
clc
push
add
and
mov
push
xchg
lds
cmp
movsl
arpl
jle
call
cmpsl
loopne
dec
sbb
adc
out
ds
out
xor
daa
dec
insl
cmpsb
push
and
xlat
xorb
or
sbb
scas
test
and
lock
mov
xchg
stc
adc
or
xchg
inc
pop
push
dec
mov
mov
cltd
repz
pushf
jmp
je
mov
jmpw
mov
mov
enter
sub
ret
out
add
ds
push
inc
pop
or
lret
outsb
push
and
pop
rolb
test
push
scas
cmpsb
into
mov
xor
jbe
adc
inc
icebp
lea
pop
icebp
add
mov
ja
arpl
shlb
movsl
stos
mov
inc
pop
xchg
adc
cmp
in
jbe
insb
mulb
push
lcall
push
fidivrl
sub
sbb
sub
loope
outsb
dec
nop
cmp
xchg
sub
fwait
std
aas
mov
jmp
adc
cwtl
cmpsb
sbb
out
stos
xlat
lret
jbe
je
push
mov
test
mov
mull
mov
mov
or
push
repz
lods
inc
cmp
xchg
jb
jnp
gs
sub
xchg
adc
stos
inc
xchg
ds
sbb
cmp
mov
adc
out
push
fidivrs
jno
repz
mov
cmpsl
loope
or
xor
aas
adc
icebp
das
les
or
cmp
pushf
adc
mov
test
cmp
jnp
aas
rorb
out
dec
pop
sub
jl
fs
jae
shll
das
add
adc
mov
rclb
push
xorb
dec
das
xchg
loopne
sbb
xor
add
in
andl
mov
sub
pop
icebp
sbb
mov
lret
mov
icebp
mov
fs
in
pop
je
xchg
mov
popf
mov
cltd
mov
jmp
imul
stos
fldl
jl
outsl
mov
cmp
xchg
pop
push
or
cmp
xor
test
push
movzwl
out
or
pusha
and
cmc
imul
jl
add
lret
push
ljmp
rorl
xor
aas
lods
lea
es
mov
cmpsl
in
je
add
push
xor
subb
sub
cltd
fwait
jo
out
js
fmulp
fwait
mov
jl
rcrb
or
adc
adc
xchg
mov
subb
add
lock
cli
movsb
outsb
jg
dec
cmp
out
mov
and
mov
sub
jecxz
xlat
hlt
dec
icebp
arpl
xchg
mul
xchg
rcrl
and
mov
pop
adc
jno
fisubrl
pop
cwtl
jecxz
ret
jbe
xor
out
test
xchg
mov
push
std
pop
minps
into
rclb
dec
push
or
std
cmc
insb
mov
pop
xor
mov
mov
sub
out
jbe
std
enter
and
gs
sub
lock
dec
xor
pop
clc
roll
xchg
out
xchg
lea
popf
out
mov
ja
adc
inc
loope
scas
insl
push
pushf
pop
mov
es
sbb
dec
ds
add
pop
cmpsl
mov
and
bound
iret
adc
imul
pop
add
int
mov
push
push
pop
pushf
xchg
in
adc
mov
out
sub
add
dec
scas
adc
pop
mov
pop
inc
sub
daa
gs
pop
loopne
daa
xlat
cmp
cmpsl
fistl
mov
cld
cmpsb
cmpsb
cmp
jl
push
mov
mull
mov
test
push
pushf
sbb
in
mov
jle
push
in
lcall
jne
std
cmc
icebp
fcompl
xor
outsl
jnp
mov
xor
adc
mov
ja
popa
insl
scas
lret
pusha
in
mov
mov
xor
pop
clc
loope
loop
lods
popa
out
xchg
call
jnp
cwtl
test
add
jp
movswl
sahf
push
sbb
add
aas
sahf
mov
aam
fwait
cli
je
add
jg
addl
adc
lret
mov
leave
sbb
fwait
pop
scas
bound
arpl
cmc
jno
clc
imul
mov
mov
xchg
mull
and
ja
push
clc
or
jne
xor
jbe
dec
xchg
movsb
js
icebp
and
sub
or
fcoms
out
sti
lods
add
sub
incl
ret
jnp
xor
aas
notl
mov
pop
lahf
adc
jmp
jae
outsb
sub
int3
scas
int3
xchg
lcall
xor
push
cmpsl
mov
mov
call
xor
ljmp
sub
jmp
fisttpll
fsubrl
iret
fisttps
mov
dec
add
push
setno
sbb
pushl
dec
lret
push
lret
insl
mov
icebp
sbb
push
shlb
sub
xlat
xchg
cli
insl
push
inc
and
pop
in
stc
jl
xor
inc
mov
shl
fisttpll
jmp
mov
outsl
cld
push
lahf
push
mov
sub
int3
xor
dec
or
sbb
aaa
pop
fs
lret
cmp
jne
insb
xchg
jae
xor
mov
push
ret
lcall
ret
xor
xchg
imul
insl
icebp
push
mov
mov
adc
dec
mov
fstpt
dec
push
pop
lret
mov
and
adc
jmp
push
mov
fmul
or
mov
xchg
pop
lock
sbbl
mov
pop
dec
xchg
xor
insl
dec
jo
xchg
bound
xchg
xchg
sarl
pop
test
inc
and
cmp
and
or
out
aad
add
bnd
jns
lret
sbb
ds
sbb
push
and
in
dec
dec
add
xchg
push
lret
ljmp
xor
inc
xor
sub
jecxz
cmp
mov
adcb
lods
mov
or
ds
dec
shl
int3
adc
cmp
xor
inc
push
inc
cs
xchg
arpl
sbb
shlb
sbb
inc
ja
mov
js
dec
fs
mov
icebp
sub
clc
adc
movsl
fwait
push
cs
xchg
jnp
or
inc
cmpsb
subl
test
loope
jns
jno
sub
lret
roll
fldcw
or
pop
data16
clc
xchg
aam
jle
push
gs
mov
push
leave
mov
loop
mov
inc
xchg
or
shl
fldt
sahf
jbe
scas
out
dec
pop
rcrl
movsb
fs
movsl
mov
fldt
rolb
adc
xchg
mov
sub
mov
jg
jecxz
dec
aad
rclb
xchg
cmp
inc
jg
push
cmp
lods
sbb
mov
xchg
sbb
lahf
push
frstor
xor
mov
pushf
xlat
aam
add
cmp
in
jne
out
and
push
bound
adc
insl
dec
or
fstl
in
nop
mov
ret
lds
and
in
stc
jge
jle
push
daa
mov
into
es
call
sbb
jmp
aam
mov
jge
sbb
push
dec
mov
nop
lock
inc
push
daa
xor
sub
jns
insl
jl
dec
icebp
xor
add
es
jo
test
fildll
mov
loop
jp
stos
sub
mov
inc
and
mov
inc
stc
cwtl
cmpsb
adc
mov
jno
loopne
sbb
jle
mov
enter
out
mov
and
mov
fimuls
ret
jb
cmp
mov
pop
cmp
sbb
divb
xchg
sub
stos
arpl
xchg
and
jecxz
sbbb
rol
enter
ds
mov
xor
pop
inc
pushf
adc
sbb
js
rcl
call
mov
and
pop
cld
dec
xlat
jne
mov
popa
cmp
cld
fisubl
jl
push
rclb
and
mov
mov
jg
lret
mov
gs
pushf
mov
pop
xor
jle
mov
push
sub
lea
or
push
add
xor
movsl
dec
testl
mov
stc
ja
push
jle
inc
popl
xor
and
jb
xchg
jp
int
lea
jg
sbb
push
outsb
jbe
cwtl
dec
lea
mov
fiaddl
dec
sub
std
push
mov
aad
dec
push
in
repz
sbb
push
mov
movsl
ja
pop
addl
jle
push
pop
fs
imul
gs
fldenv
je
lret
repnz
sub
add
mov
cmp
lret
mov
fcoms
add
xor
fiadds
or
movsb
mov
ret
loope
inc
test
xchg
adc
inc
aad
pop
adc
ljmp
mov
push
push
mov
push
das
add
sub
dec
mov
nopl
pop
inc
cmpsl
mov
cmc
adc
in
fcoms
push
mov
aad
xor
jl
aam
mov
test
cltd
bound
xor
es
or
jg
in
cmp
test
js
inc
push
mov
xor
cmpsl
push
adc
or
xor
stos
pop
xor
test
lock
mov
push
das
jns
int
mov
hlt
imul
xor
sub
pop
jg
pushf
or
push
push
ss
leave
les
cld
jnp
insl
cmp
sub
dec
nop
loopne
out
adc
pop
shl
mov
xor
mov
cwtl
je
mov
fistpll
movsb
push
jl
sbb
jp
sbb
shll
xor
int
and
gs
adc
in
mov
ret
les
cltd
push
mov
mov
jecxz
data16
mov
sub
inc
lods
push
cmc
mov
mov
stos
notl
pop
fwait
mov
sub
insb
sub
imul
int
call
sbb
idivb
jne
cmp
xor
aad
ret
jl
adc
adc
inc
andl
aas
xchg
or
inc
iret
aas
jecxz
pop
in
aad
jno
je
push
test
pop
mov
jo
or
shrb
out
push
icebp
and
jle
pop
notl
in
pop
fwait
test
cmp
fsubl
pop
sahf
push
add
es
mov
push
or
cmp
out
push
pop
cmp
fidivrl
sbb
pop
out
fisttpll
adc
or
mov
and
pop
adc
arpl
shl
push
inc
push
sub
orb
mov
mov
push
xor
scas
and
sub
mov
and
sarl
push
dec
push
call
lret
push
sbb
jno
mov
lods
xlat
roll
sbb
inc
or
pop
hlt
sbb
or
adc
ljmp
aas
iret
repz
movsb
lret
jle
sbb
arpl
add
push
lods
andb
ja
xor
ficomps
push
mov
jle
mov
xchg
xchg
adc
lcall
pop
int3
call
stos
les
xchg
in
adcl
sbb
xor
enter
mov
es
push
aas
inc
jmp
sub
sub
xor
inc
jns
pusha
daa
mov
data16
xor
dec
insb
and
dec
inc
xlat
fsub
pop
aaa
stc
dec
flds
push
mov
pusha
mov
cmp
fimuls
int3
inc
pop
inc
imul
cmc
sbb
dec
xchg
push
out
sub
les
insl
and
loopne
jp
push
hlt
inc
mov
popf
out
and
cmp
fs
pop
adc
jl
mov
dec
in
jne
inc
jno
stos
sti
jnp
scas
dec
fidivs
adc
and
pop
jmp
and
mov
cld
sbb
lods
addr16
gs
dec
push
jl
aam
mov
mov
xchg
adcl
mov
out
jp
insb
cmpsl
insb
inc
xor
inc
outsb
and
adc
ljmp
aad
inc
insl
or
adcb
popf
sbbb
sbb
imul
int3
mov
ror
pop
xchg
movsl
dec
hlt
xchg
pushl
lods
rolb
mul
pop
sub
andl
es
call
jo
insb
test
adc
push
out
mov
xchg
lods
mov
mov
and
mov
sub
cmp
outsb
outsb
mov
imul
push
movsb
sbb
push
call
aam
popf
clc
xchg
push
in
out
stos
pop
loop
dec
out
jmp
mov
pushf
js
dec
pop
push
adc
aaa
mov
ja
dec
mov
test
out
pushf
lret
cli
add
out
es
sub
or
pushf
gs
lods
and
cmpsl
push
outsl
sub
mov
in
subb
pop
pop
pop
stc
mov
push
cmpsb
test
dec
pushf
test
dec
fdivs
jae
pop
sub
roll
rol
mov
sahf
push
scas
dec
out
jg
inc
xor
mov
aas
testb
inc
enter
lods
in
jbe
dec
sub
leave
sub
aad
sti
dec
rorl
inc
nop
jns
js
push
popf
fistl
dec
sbb
je
add
inc
pop
sbb
sarb
pushf
jns
pop
push
and
mov
outsl
out
or
push
out
mov
xor
dec
sbb
iret
mov
je
pop
pusha
jecxz
enter
or
cwtl
cmp
xchg
cmp
das
lea
mov
jae
loop
repz
xchg
inc
sub
loop
sbb
std
cli
popf
xor
rorb
fldenv
pop
xchg
jo
pop
repz
pop
fdivrs
lcall
mov
leave
add
dec
inc
test
or
aam
mov
mov
loop
mov
jbe
xor
xor
je
sub
clc
jns
xlat
ss
repz
cli
inc
mov
pop
xor
out
sub
pop
xchg
bnd
aas
stc
into
jle
pop
inc
and
in
daa
mov
cs
iret
sbb
xor
sbb
mov
subl
sub
xor
mov
push
movsl
into
std
loopne
add
and
mov
xor
mov
sub
arpl
scas
cmpsl
les
xor
test
xchg
ret
out
xchg
addr16
daa
sqrtps
imul
arpl
fsubr
push
ss
or
mov
decl
or
icebp
stos
inc
cld
push
ret
shlb
cmc
pop
repz
mov
or
or
push
inc
mov
push
test
xchg
test
lcall
or
push
js
sub
cld
leave
or
ret
cld
pop
aam
and
test
in
xor
stos
in
inc
jno
incl
mov
mov
jg
fnstenv
scas
icebp
imul
in
mov
scas
sub
xor
jp
loopne
push
repz
leave
jl
xchg
cmp
lods
adc
sahf
inc
sbb
pop
rclb
mov
mov
aam
js
or
jl
adc
int
outsb
adc
inc
shrl
repz
scas
push
into
test
adc
decl
jne
cmp
jb
jge
mov
push
xor
loop
mov
push
or
mov
dec
cmp
or
lret
sub
imull
add
cltd
divl
fs
testb
clc
and
cmpb
aas
pop
in
add
fs
xor
jo
push
xlat
enter
push
xchg
lret
push
stos
in
scas
repz
inc
orl
into
mov
mov
movsl
mov
pop
mov
cmp
cmp
lock
ljmp
xchg
or
push
aam
xchg
aam
data16
inc
mov
aaa
jbe
mov
jmp
ret
andb
leave
leave
mov
aam
xchg
pop
or
jle
ss
sbb
mov
mov
sbb
sbbb
mov
int3
mov
test
inc
jae
das
jge
sub
inc
adc
stos
sbb
cwtl
mov
idivb
sbb
ficoms
or
mov
pop
push
inc
js
lret
ret
mov
mov
sub
inc
lds
js
cmp
pop
pop
ret
inc
inc
mov
jmp
mov
pop
lods
sbb
mov
std
push
cs
sbb
inc
aaa
jg
mov
add
stos
mov
outsl
cmc
sub
mov
cmpsl
es
repz
xchg
ficoml
frstor
mov
xor
pushl
add
call
jmp
push
js
jae
stc
hlt
ret
aas
add
and
addr16
sbb
xchg
or
push
hlt
outsl
cmp
push
sub
cwtl
loopne
jecxz
mov
and
or
lcall
pop
stos
sub
jecxz
int
movsb
jne
in
inc
pop
xor
add
les
popa
or
aaa
push
out
xchg
xor
jns
lretw
push
mov
sbb
insl
lods
xor
sub
mov
xlat
ja
add
mov
test
das
js
lods
je
push
push
mov
test
in
and
out
mov
xchg
mov
add
push
lods
je
jp
insl
xchg
rcrb
xlat
mov
fmull
push
sbb
sub
mov
cmp
inc
jnp
cmpsb
xor
in
xor
das
xor
repnz
arpl
adcl
int3
sahf
xor
push
add
mov
shll
movsl
adc
pop
jno
sub
jnp
in
out
push
jecxz
and
xchg
cmp
in
inc
cmp
aad
fs
and
inc
dec
xor
xchg
inc
mov
repnz
push
fwait
jp
pushf
dec
xor
outsb
popa
inc
pop
aas
mov
loopne
out
dec
sub
out
pop
movsl
jbe
test
xchg
pop
addb
or
faddl
xchg
fdivrs
pop
daa
and
mov
repz
pushf
idivl
lods
jae
lods
adc
in
movsb
lea
xor
mov
mov
dec
dec
pusha
mov
inc
out
scas
or
cltd
add
call
mov
pop
sub
outsb
push
je
stc
cmp
inc
nop
cmp
fimuls
icebp
xor
jae
pop
movsl
xor
mov
fwait
and
imul
jle
jmp
test
imul
je
jno
mov
int3
mov
loop
icebp
addr16
movsb
jmp
fidivrs
mov
or
add
xor
scas
sub
lods
adc
jbe
sub
in
and
cwtl
xchg
lods
mov
jge
mov
xchg
xbegin
in
jbe
adc
fwait
xchg
aam
dec
cmp
enter
stos
cltd
test
mov
mov
push
cmc
push
cltd
stos
bound
sbb
dec
xchg
dec
lea
fs
sub
clc
cmp
adc
es
add
cmp
and
outsb
pop
rcl
in
js
xchg
pop
insl
hlt
xchg
sub
adc
pop
cmp
rolb
dec
adc
jae
sbb
mov
jo
push
adc
mov
nop
scas
stos
mov
movsb
mov
mov
mov
pop
push
stos
insb
arpl
push
stc
jl
ss
dec
pop
fnstcw
add
cmp
push
or
lret
xor
fiadds
in
push
incl
mov
and
ret
in
orb
hlt
mov
shll
mov
dec
lret
jbe
pusha
jo
and
enter
pop
or
cmp
dec
jle
popa
fnstsw
shrl
inc
mov
push
int
mov
sub
lea
jmp
outsl
scas
cmp
dec
mov
dec
sahf
push
test
popf
mov
jecxz
cmpsl
rol
push
push
mov
push
or
jle
push
into
aaa
sub
cld
ss
mov
outsl
pop
xor
aad
pop
xor
into
add
rclb
xor
fs
mov
btrl
popa
jl
fwait
aas
sub
rolb
xchg
sub
rolb
inc
rolb
fsubrs
fs
xor
xlat
das
leave
pop
rorl
aam
imul
pushf
mov
insl
mov
mov
arpl
push
xor
fbld
insl
lods
cltd
stos
dec
insb
mov
inc
push
mov
inc
sub
add
lods
push
or
mov
scas
fidivrs
and
cli
jns
scas
dec
push
ret
sub
jno
aam
or
cli
lock
and
sbb
mov
das
add
test
inc
cmpsl
cld
xor
fisubrl
xor
ljmp
or
dec
fwait
sub
pusha
mov
xchg
test
les
ja
cmpl
push
jmp
pop
cmp
add
shll
leave
cmp
rcll
pop
daa
xorl
jae
std
xor
mov
cwtl
inc
or
lcall
pop
xchg
pop
xchg
les
std
outsl
pop
jns
and
cmc
hlt
dec
adc
out
das
adc
lds
insb
das
rcl
xor
hlt
adc
scas
dec
inc
pop
pop
stos
lcall
jmp
stc
mov
js
or
mov
pop
ja
or
push
fstl
test
or
fiaddl
cmp
dec
out
inc
jg
adcb
push
mov
bound
add
cmp
movsb
addl
pushf
push
jnp
mov
xlat
insl
pop
push
roll
mov
mov
sbb
and
pop
das
sub
pop
out
adc
adc
int
sbb
cltd
pop
mov
sbb
fnstenv
movsl
dec
jecxz
lods
sub
pop
pop
push
dec
ds
jns
or
pop
mov
insb
gs
sbb
std
xor
enter
jmp
push
push
xor
fsubrp
stos
pop
inc
jg
in
loopne
fstpl
fsubrs
stos
les
cmp
mov
std
les
adc
je
stos
ret
imul
shrb
imul
mov
pop
jbe
dec
push
in
pop
mov
ss
pop
fidivrl
arpl
xchg
js
adc
es
cmp
pushl
dec
mov
sbb
mov
cmc
xor
pop
fs
jne
jnp
inc
jb
add
ficoml
stc
cmp
and
imul
xchg
adc
push
lds
cltd
pusha
and
testb
sbb
or
cld
xorl
je
or
pushw
or
cmc
add
insl
pusha
dec
dec
dec
aam
sub
adc
jae
sbb
xchg
xor
pop
shl
cmp
mov
mov
pusha
movsl
and
sub
cmpsl
cltd
std
pop
inc
pop
add
or
xor
imul
cmpsb
jo
sub
daa
bound
cmpsb
sbb
sbb
xchg
jmp
inc
cltd
pop
xchg
cmp
push
int3
add
or
push
jmp
rcr
pminub
push
cmp
pop
aam
pop
xchg
lret
push
fsubrp
sbb
and
ss
sub
push
icebp
iret
sub
fmull
dec
scas
les
push
mov
mov
fnstenv
dec
push
arpl
mov
sbb
out
and
rol
movsb
sub
jbe
cmp
xchg
mov
in
in
lods
cwtl
aam
sbb
shrl
adc
pop
out
lret
sbb
and
cmp
ja
and
bound
out
jl
mov
sub
mov
lds
sub
test
lahf
daa
fldt
iret
sbb
sarl
mov
lcall
push
sbb
enter
and
ljmp
ds
in
and
or
decb
push
ret
pop
arpl
decb
imul
push
mov
add
fdivr
xchg
int3
sub
data16
out
add
xor
push
rolb
add
dec
out
subl
fnstcw
fs
add
enter
jg
das
push
into
out
insl
aad
inc
sbb
sub
cmc
movl
dec
test
test
clc
rolb
call
sbb
in
outsb
jae
mov
pusha
jle
mov
or
lahf
xchg
fstpt
filds
jns
add
call
mov
mov
lock
or
push
lods
sbbb
jp
push
and
xchg
mov
lock
jne
test
xor
push
loopne
in
jge
daa
lds
pusha
cmp
dec
in
aas
dec
jge
jg
fsubr
fisttpll
push
rcrb
inc
push
movsl
add
jns,pt
cmpsl
out
call
cmp
ljmp
int
adc
mov
xchg
xchg
loope
and
or
rcrb
enter
je
or
cmp
sub
shlb
stos
rcr
xchg
iret
add
sub
pop
out
test
pushf
sub
fildll
sub
cmc
sahf
adc
test
pop
inc
sahf
push
inc
fdivrl
mov
les
daa
xchg
in
cs
int
cmpsb
iret
xchg
test
orl
jno
jno
or
sbb
out
in
aad
mov
jbe
icebp
sub
mov
pop
lods
mov
out
push
mov
popa
iret
sub
adc
fcmovb
int
bound
into
dec
cmp
lea
add
mov
lds
mov
ljmp
movb
jo
cmpsb
iret
sub
push
mov
jmp
sub
dec
inc
gs
imul
cmp
daa
leave
sahf
dec
xor
pop
push
add
std
jmp
jb
fbld
test
cwtl
cmp
push
jl
pop
mov
jnp
xchg
cli
fcoms
imul
jecxz
mov
sbb
adc
imul
adc
dec
pop
mov
mov
cmp
insb
fdivl
adc
negl
repz
inc
and
fstp
pop
cltd
lcall
rorb
pop
adc
inc
es
xchg
pop
adc
test
aas
xor
pushf
mov
shrb
cmp
xchg
xchg
push
int
lods
and
mov
jl
add
mov
rcll
push
add
dec
adc
mov
jns
scas
mov
push
fimuls
gs
dec
rcrb
dec
sub
inc
cmp
xchg
insb
sub
jle
in
inc
std
push
dec
xlat
repnz
hlt
or
or
pop
jnp
mov
leave
sbb
push
inc
pop
xor
pop
mov
fsubrl
mov
xchg
loop
mov
insb
out
movsl
inc
leave
cmc
lods
out
inc
mov
mov
sbb
cmc
adc
lods
fucomip
mov
add
or
and
adc
notb
pop
mov
xchg
mull
ja
mov
cmp
push
stos
cmp
inc
jns
push
cmc
leave
in
lods
fucomi
aas
inc
nop
repz
sbb
jae
inc
stos
ds
mov
or
jl
jbe
out
leave
mov
int3
outsl
cmc
mov
xchg
jno
addr16
pop
xchg
pop
notl
sbb
jne
test
sbb
in
imul
ss
div
lea
or
mov
fldenv
xchg
and
jge
in
stos
rcrl
pushf
xchg
lds
int
fstpl
mov
jb
mov
cmpsb
or
mov
jo
pop
cmp
xor
and
inc
dec
xlat
xchg
sub
dec
adc
aad
cltd
repnz
ret
shl
les
nop
inc
out
subl
and
daa
lds
rclb
ss
lahf
repz
insl
iret
jg
or
sbb
outsl
jg
sbb
and
pop
rcrb
lret
test
dec
sub
enter
shll
cmpb
inc
mov
jg
inc
add
push
jns
popa
push
cmp
push
sub
int3
xor
into
inc
lds
push
sbb
xchg
lret
cmpb
ja
pop
sub
jnp
jno
andl
dec
dec
mov
mov
sub
jb
inc
sub
movsb
cltd
inc
inc
imulb
cmp
pop
cmpsl
fs
xchg
cwtl
mov
in
pushf
addr16
inc
incl
fisttpll
cli
fbstp
jno
pushf
cmp
sahf
push
sbb
adc
popa
lret
loope
mov
mov
in
inc
jg
or
add
rolb
outsl
cmp
pop
popa
mov
pushf
les
mov
xchg
push
ret
mov
scas
ljmp
mov
push
insb
in
stos
or
xlat
gs
ficoml
inc
in
mov
lea
cmc
sti
sbb
dec
xor
push
push
push
push
pusha
adc
cmp
xlat
push
push
mov
aad
mov
cmp
or
fbld
mov
sbb
inc
pushf
adcl
out
xchg
fdivrl
mov
ret
pop
or
inc
adc
sbb
bound
jne
push
outsb
fs
mov
nop
ss
rcrb
push
movsl
mov
fadds
inc
sarb
mov
insl
and
sti
cmpsb
shll
les
cmc
xchg
hlt
cwtl
jecxz
aaa
mov
pop
aad
pusha
bswap
push
in
aad
pop
dec
pop
outsb
push
out
and
jl
cltd
jmp
add
leave
mov
sets
and
fcomip
adcl
mov
iret
cs
lret
cmpsl
call
xchg
cmp
mov
out
cmp
jo
frstor
out
test
mov
lret
lds
ss
inc
inc
sarb
cli
loopne
mov
or
or
das
mov
inc
lea
or
lods
and
ret
inc
jge
add
bswap
jle
pop
jecxz
out
subb
add
fsubrs
and
movsb
sti
popa
sbb
push
sbb
and
aad
cmp
push
push
xor
inc
mov
xchg
je
jl
and
outsl
sbb
and
adc
sub
cld
aam
and
mov
dec
cltd
aam
pop
popa
int
lcall
xchg
inc
pop
pop
and
jnp
js
mov
push
adc
jl
cmp
xchg
orb
loope
sbb
mulb
push
in
scas
lods
inc
loope
inc
pop
cmp
scas
cmp
dec
jl
rol
sbbl
popf
mov
cmp
loop
je
push
jmp
and
lahf
icebp
sbb
ret
mov
cmpsb
adc
stc
icebp
mov
roll
xchg
loopne
mov
stos
cwtl
pop
out
and
enter
pusha
xor
popf
mov
testb
fsubs
or
mov
xchg
test
sar
mov
movsl
mov
xor
das
add
pop
and
pop
jmp
and
icebp
ret
inc
sti
jno
jne
icebp
jbe
mov
lea
sub
repz
les
sbb
ss
pop
jno
leave
cwtl
arpl
stos
xchg
xchg
xor
mov
negl
shrb
fidivrs
out
mov
leave
xchg
stos
and
or
pop
pop
nop
add
sbb
lcall
mov
xchg
cld
rdpmc
lea
pop
fsubr
in
hlt
mov
inc
mov
je
inc
sbb
jg
cmc
jg
sahf
leave
mov
push
je
in
enter
fisubrs
cli
cmp
xchg
int3
mov
hlt
or
jp
push
or
and
dec
xchg
shlb
jecxz
clc
mov
inc
in
cmc
mov
mov
xchg
int
outsb
jno
jo
bound
pushl
enter
push
xor
and
push
and
sub
adc
jb
fwait
mov
dec
arpl
adc
jb
outsb
cmovs
into
mov
dec
xchg
scas
push
mov
divb
lds
jp
ds
out
mov
fnsave
test
add
cmc
outsb
and
cwtl
je
sbb
xor
push
jns
pop
scas
push
push
adc
dec
cltd
add
cld
pop
pop
scas
mov
ds
in
mov
dec
pop
and
fldl2t
jns
icebp
sarl
adc
lcall
and
xor
cli
out
imulb
xor
pop
jb
adc
scas
nop
imull
push
iret
popf
xchg
xchg
subb
xor
inc
mov
sub
xchg
hlt
ret
pushf
push
stos
or
dec
and
mov
mov
dec
lret
jg
das
fucomip
das
mov
sbb
dec
cmp
xorb
dec
pushf
mov
imul
push
push
dec
mov
shll
push
or
in
aad
loope
jae
scas
fwait
sbb
adc
sar
push
jne
imul
mov
imulb
push
xor
fistl
fadd
ret
mov
push
sub
imul
cli
mov
mov
mov
stos
addb
or
push
push
clc
cmc
pop
stos
std
cltd
mov
adc
arpl
movsl
shll
inc
icebp
push
fidivs
inc
imul
sahf
sub
add
and
cwtl
fisttps
xchg
ret
into
lret
sub
cmpsl
outsb
and
cmp
mov
mov
xchg
xchg
mov
cmpl
xor
jmp
push
iret
or
or
cmc
pop
adcl
sbb
fdivrl
xor
scas
cltd
and
cwtl
stos
insb
fs
bound
stos
iret
xchg
inc
aaa
hlt
pop
jg
mov
les
dec
or
icebp
shll
mov
loopne
cs
mov
xchg
mov
mov
xchg
mov
xor
sbb
enter
push
push
xchg
shll
repnz
imul
pop
scas
jns
lahf
std
shlb
ljmp
cmc
hlt
movsb
movsl
and
fwait
sahf
or
loope
inc
jmp
out
pushf
rolb
jp
lods
jb
push
and
leave
sub
das
xchg
push
sbb
jbe
out
push
adc
fsubr
mov
mov
sbb
outsb
into
xchg
add
test
xor
call
lahf
das
dec
mov
arpl
test
inc
ja
fidivrl
mov
je
out
test
and
ja
es
in
jno
testb
sbb
repz
in
ret
cltd
shll
cli
fimull
pop
and
jle
outsb
jne
test
sub
ret
cltd
daa
add
fdivr
mov
push
aam
dec
filds
inc
imul
mov
aaa
nop
je
pushf
outsb
mov
mov
lret
iret
js
or
mov
and
inc
cmp
ljmp
cmp
movsl
mov
mov
add
fisttpl
jo
xor
jbe
add
call
js
fbld
jb
push
jg
fcos
add
into
sbb
enter
std
inc
lahf
adcb
adc
pop
xchg
push
aas
push
cmc
mov
popf
xchg
ss
les
out
add
jns
test
pop
icebp
add
lods
add
mov
cmp
add
scas
jae
pop
aaa
in
rcrb
dec
mov
stos
in
nop
sbb
test
mov
insl
sarb
sub
xor
jg
fwait
or
mov
add
pop
sbb
lea
cmc
cmc
mov
sub
jmp
jle
ret
mov
xor
daa
jo
imul
add
jg
cmpsl
stos
xor
push
push
mov
xchg
in
inc
mov
xchg
cltd
or
mov
cmp
aam
jg
icebp
movsb
jo
xor
in
push
ja
mov
out
ljmp
cmpsb
mov
mov
xlat
mov
mov
cltd
adc
mov
xchg
clc
xor
test
inc
jl
pop
and
xor
aaa
lods
in
sahf
push
push
sub
inc
xlat
dec
out
mov
sbb
imul
xchg
sbb
rclb
call
or
and
int3
dec
adc
add
int
xchg
test
ss
rcll
mov
jbe
insb
cmp
mov
scas
std
hlt
fmuls
aad
mov
dec
jmp
inc
add
clc
repnz
mov
sbb
lcall
xorl
sahf
inc
push
iret
in
push
or
sub
pop
pop
adc
repz
xchg
ret
dec
imul
addb
rcr
sub
pop
or
jl
mov
test
outsb
and
fistpl
sub
sub
faddp
out
cli
jae
addr16
lds
mov
sub
gs
jmp
ficoml
dec
pop
sbb
lock
pop
stc
in
les
sbb
jmp
cld
xor
mov
aaa
pushf
pop
enter
dec
adc
jb
sub
adc
fwait
cmp
push
rcl
jl
shl
sbb
mov
pop
cli
push
adc
and
pop
jae
arpl
cmp
or
popa
xchg
lcall
cs
loope
cmp
xor
movl
mov
jno
pop
out
cmp
xor
bound
jle
mov
fdivrl
pop
jbe
xor
xchg
sahf
call
test
mov
aas
or
pop
loope
pop
xor
xchg
clc
cmp
or
vpsllq
iret
sub
or
cmpsb
ret
movsl
int
xchg
cli
xlat
xchg
xor
pop
pop
xchg
xchg
sub
ds
xchg
or
xor
add
loop
ffreep
leave
shl
outsl
mov
mov
cmp
outsb
shl
cmpsl
jbe
repz
lahf
mov
mov
mov
daa
mov
mov
int3
xlat
and
sbb
mov
sbb
sbb
add
mov
frstor
clc
pop
call
lds
js
mov
or
in
xchg
mov
out
dec
inc
fwait
leave
pushf
sub
fcmovnb
fcompl
mov
int3
add
ljmp
lds
ficoms
insl
adc
outsb
and
pop
mov
inc
xor
testl
in
jl,pn
jge
ret
push
aaa
inc
pusha
sbb
ss
xchg
movb
add
push
sbb
sbb
adc
mov
iret
testl
mov
pop
mov
cli
outsb
sbb
scas
mov
sbb
jl
sub
roll
cmp
inc
mov
out
xor
xlat
push
dec
or
shufps
out
sbb
test
jle
push
rcrb
fiadds
addr16
pop
cmp
mov
or
in
and
lcall
lods
xchg
pushf
pop
dec
fstpt
ds
js
data16
push
add
sub
push
out
jmp
enter
adc
arpl
data16
mov
add
ret
icebp
add
cmp
push
push
ljmp
or
inc
mov
repnz
das
cwtl
push
pop
cmp
xor
jns
dec
loop
sbb
add
adcl
xlat
psrlq
icebp
mov
inc
int
inc
movsl
popf
mov
add
popa
into
jmp
pop
mov
andl
or
or
out
xchg
in
in
lods
cmp
mov
lock
jmp
push
push
enter
daa
ret
push
and
sub
mov
pop
popa
gs
add
or
and
mov
inc
push
stos
fcmovne
enter
imul
fwait
jbe
add
movsb
jp
lods
icebp
dec
adc
inc
test
lea
cld
aad
call
add
sub
jne
push
add
rcll
cltd
lock
sbb
imul
popf
and
jg
push
pop
jmp
mov
rorl
and
jg
icebp
sbb
addr16
icebp
sub
push
dec
mov
int3
mov
inc
mov
or
or
or
scas
stos
ret
les
pop
dec
outsb
popf
idiv
jmp
ret
scas
dec
lcall
mov
leave
aam
outsb
roll
and
loop
pop
enter
inc
cltd
bound
or
sqrtps
mov
ss
mov
mov
and
dec
iret
xor
cmpsl
mov
std
cli
sub
adc
jb
addr16
mov
xorl
je
mov
or
jb
mov
cs
cmc
xchg
jecxz
bound
jb
xor
scas
xchg
mov
xor
in
inc
outsl
iret
jge
inc
hlt
xor
arpl
sahf
out
insb
xor
loopne
push
push
mov
das
sub
pop
push
jg,pt
or
add
and
call
cmp
pop
stc
jge
jl
out
fsubr
sbb
into
or
cmp
cld
or
sub
add
ss
in
popa
or
add
jns
in
into
jnp
insb
ja
imulb
sub
dec
push
push
insl
add
int
leave
xchg
lcall
xor
arpl
aaa
je
fimull
pop
sbbl
inc
mov
sbb
add
int3
or
test
repz
ret
push
jmp
std
int3
dec
ljmp
popa
jmp
sahf
jno
push
mov
adc
movsl
inc
xchg
inc
stos
cmp
js
push
sahf
imul
clc
std
cmp
pop
ljmp
or
fcmove
and
jno
pop
xor
dec
pop
in
mov
ja,pn
xor
pop
leave
jbe
mov
out
jle
jb
xchg
pop
add
bound
mov
test
push
fiaddl
stos
inc
dec
outsl
mov
and
inc
je
out
inc
mov
mov
stos
lahf
pop
pop
andb
sub
or
lods
xchg
mov
add
pop
fstpt
sub
mov
adc
testl
loope
cmp
sahf
out
rolb
jecxz
imul
jnp
and
pushf
mov
rol
inc
outsb
push
mov
fs
cmp
cmp
in
mov
scas
mov
dec
jne
xchg
xor
adc
and
test
jo
stos
cmp
mov
mov
jl
lods
and
std
in
xor
jb
add
aam
sarb
sbb
iret
es
push
roll
std
push
clc
aas
mov
and
lds
and
xor
out
cmp
ljmp
pop
xor
xchg
jne
and
cld
loop
or
push
stos
dec
mov
inc
mov
mov
repz
cmp
iret
xchg
out
inc
idivl
lods
loop
xor
out
test
fdivs
pushf
and
loopne
mov
jns
aam
or
sub
inc
mov
fcoml
mov
xchg
lcall
and
sub
sub
mov
adc
into
pop
sti
mov
roll
jmp
aam
loop
mov
add
sahf
add
rolb
rol
sub
jl
adc
push
in
mov
and
ret
out
xor
jg
das
je
inc
or
xor
jmp
add
cmc
cmp
je
adc
shlb
out
inc
sbbb
mov
imul
lods
icebp
or
fs
sahf
pop
int
in
fnsave
jo
inc
sbb
pop
fildll
pop
mov
cmc
add
fwait
mov
add
lds
cmc
lret
pop
push
sbb
sbb
and
lcall
jno
or
xor
ss
inc
lock
lods
jl
push
testb
loope
mov
in
sub
dec
mov
stos
push
mov
dec
cs
jnp
adc
dec
sub
push
rol
test
xor
repnz
ret
lods
xchg
int
jmp
lock
cmp
mov
and
xor
inc
adc
jmp
xlat
jne
iret
push
or
sub
pop
nop
negb
xchg
icebp
fcomi
ljmp
mov
cmp
mov
mov
mov
stos
popf
sar
out
sbbb
inc
pusha
mov
test
popl
rep
clc
in
inc
and
dec
jg
mov
dec
mov
xor
push
dec
xor
aam
lds
pop
fst
jae
fsubs
pushf
inc
cs
xor
out
enter
out
aaa
js
push
arpl
jl
aad
in
inc
or
sbbl
jecxz
imul
push
cwtl
xchg
cmp
lock
aaa
mov
enter
je
sub
popa
xchg
notl
int3
lret
sbb
jno
sahf
mov
bound
sbb
shl
sub
xchg
in
mov
bound
mov
add
in
pop
mov
fldcw
loope
sub
adc
lods
inc
mov
fidivs
mov
sub
mov
xchg
scas
sbb
inc
push
inc
ljmp
adc
mov
push
cwtl
lret
pushf
sub
and
ja
adc
or
imul
insb
mov
lds
push
ds
xlat
adc
int3
mov
in
xor
jb
leave
sub
adc
xchg
iret
xchg
lahf
dec
jmp
or
pop
jns
jge
xorl
push
mov
push
in
nop
out
jl
and
add
dec
lahf
enter
xor
cmp
fildl
das
mov
jl
mov
or
or
cmp
mov
sarb
hlt
test
xchg
adc
in
aaa
xor
inc
push
lret
out
in
outsb
cmpsl
or
out
pusha
xor
adc
cmp
in
or
inc
jmp
out
in
pop
call
jne
xchg
jp
and
cmp
outsl
stc
lock
push
adc
popf
push
lahf
int
or
fs
mov
and
add
test
mov
decb
fimuls
pusha
adc
outsl
hlt
scas
test
lea
cmp
cmpsl
sub
ret
xchg
fsubrs
mov
pop
stos
mov
in
pop
int
ja
mov
cmp
shl
addb
pop
and
or
sbb
fdivrl
mov
sti
leave
icebp
bound
add
hlt
lret
aad
jmp
pop
sub
push
aaa
fdivs
sbb
xor
in
dec
das
add
or
frstor
adc
lock
inc
divb
rcrl
dec
xchg
fisubs
dec
shlb
enter
jno
call
cmc
ja
mov
mov
jno
test
pop
orb
inc
adc
arpl
je
push
leave
adc
add
lret
mov
insb
imul
lods
out
lea
xchg
mov
mov
repz
sarb
pop
ret
push
les
inc
lahf
jbe
pop
sub
mov
pop
in
mov
in
loopne
pop
mov
or
pop
mov
sbb
pushf
push
adc
dec
jge
adc
push
jbe
dec
inc
movsb
into
mov
mov
cmp
into
pop
cmp
add
jns,pt
inc
adcb
jne
lods
inc
mov
mov
shll
pop
jecxz
loopne
lcall
adc
cmp
addb
sbb
nop
mov
mov
mov
mov
xor
adc
cmpsl
dec
pop
pop
sub
cwtl
add
jne
inc
subl
outsb
xorl
adc
mov
mov
out
ss
popf
inc
sub
inc
sbb
cmpsl
xchg
aaa
xchg
adc
jecxz
test
lods
fcmovnb
cld
adc
push
outsb
pop
scas
jmp
inc
push
mov
pop
cwtl
xchg
mov
scas
loope
dec
push
les
jecxz
jmp
icebp
lods
or
lret
inc
lahf
mov
jp
sbb
int3
jge
dec
outsl
adc
mov
jns
test
stos
add
mov
jno
sub
mov
push
js
test
mov
pop
stos
cltd
lahf
xlat
sti
pop
jle
scas
dec
cmpsb
cmpsb
pop
and
dec
mov
dec
dec
push
xchg
sahf
xor
push
je
dec
push
push
dec
push
aas
push
pop
dec
xor
sbb
cmp
sti
mov
cmp
jne
dec
push
push
rorb
imul
adc
in
jnp
movsb
bound
jbe
cmc
aaa
negl
das
xor
add
out
pop
cltd
mov
mov
push
es
push
pop
mov
call
sub
xchg
sub
and
push
outsb
and
addl
cld
outsb
test
or
popa
sub
gs
xor
ficomps
cmp
xorb
sbb
rorb
aas
jmp
xor
push
test
or
push
hlt
xlat
push
out
rorl
fwait
ret
inc
add
inc
pop
mov
push
hlt
test
mov
fisttpl
mov
mov
sub
repnz
sbb
jb
cmp
int3
mov
nop
ljmp
dec
jbe
cs
mov
out
lea
insb
push
inc
sbb
sub
sub
lahf
dec
pop
js
mov
mov
cmp
inc
sbb
out
sub
dec
jmp
adc
ss
xor
inc
out
add
pop
cmpsb
rcll
xor
sbb
jno
insb
mov
mov
insl
fcmove
push
aaa
sbb
dec
in
jmp
and
mov
lret
or
adc
jno
icebp
aam
aam
dec
js
repz
sub
call
push
sahf
cwtl
push
enter
mov
mov
xor
push
adc
stos
xor
repnz
insl
arpl
push
mov
mov
jp
jb
rclb
sub
xchg
ret
insl
mov
dec
aaa
gs
cmp
ss
subl
sbb
into
bound
shrb
or
add
jae
lods
fdivrs
fisubrs
fcomi
ret
push
xor
adcb
outsl
jle
stos
out
jge
mov
pop
or
mov
loopne
inc
insb
xor
jno
or
cli
stos
xchg
pop
dec
mov
xor
and
sub
push
test
pushf
mov
jno
pop
cwtl
rol
sub
lcall
mov
jp
pusha
cmpsb
scas
repnz
push
popf
je
orl
xchg
ficomps
or
sbb
inc
pop
adc
in
and
xchg
xor
sbb
fwait
ret
xor
push
jmp
xchg
dec
lcall
sbb
stos
imul
js
jmp
ds
mov
and
xchg
insl
jle
enter
add
sbb
mov
insl
outsl
dec
insl
addr16
loope
inc
pop
das
lret
adc
arpl
jnp
mov
xor
mov
push
mov
and
or
fidivrs
jnp
sub
xor
mov
imul
cmc
inc
sub
dec
or
adc
push
in
cmp
sub
pusha
lods
jo
xchg
insl
push
fcomps
ss
incl
sbb
adcb
xchg
loope
and
cmpl
add
mov
cmp
and
sub
fsubr
test
lea
inc
xlat
adc
mov
mov
mov
jg
fisubl
lods
jne
and
leave
decl
xchg
mov
iret
and
ljmp
mov
cwtl
mov
lea
stc
fstps
loop
push
call
xorl
push
sbb
test
addl
sub
mov
mov
dec
je
mov
ficoms
sbb
hlt
mov
mov
vpsubw
into
jbe
bound
cltd
adc
ja
mov
mov
es
sbb
das
rcll
out
add
fidivs
stos
adcb
mov
pop
roll
inc
lret
repnz
cmpsb
add
stos
adc
xor
insb
test
lds
je
and
xchg
popa
pop
nop
sbb
mov
xor
loopne
jg
stos
sub
cld
add
inc
jbe
std
or
aas
push
test
cmp
test
mov
inc
mov
movsb
repnz
fiaddl
ja
aad
into
cmp
ja
movhps
inc
sti
dec
inc
jge
add
push
inc
scas
jp
push
jmp
mov
xor
bound
loopne
jecxz
xchg
ret
pop
aaa
lret
shl
push
repz
in
es
xor
inc
inc
sbb
cmpsl
addr16
and
arpl
loope
pusha
enter
sahf
jo
dec
mov
jno
mov
lods
push
lahf
jbe
test
sub
mov
int
xchg
jge
fcmovbe
rol
arpl
xchg
pop
mov
sti
icebp
or
xlat
pop
cld
fcomp
jmp
push
mov
inc
sub
sbb
je
loopne
fdivr
and
dec
fnstenv
aam
push
fcomi
jns
mov
test
movsb
sbb
leave
and
xchg
sahf
loope
mov
cmp
xchg
subl
dec
pop
sbb
sbb
addr16
cli
sub
mov
inc
pop
ja
shll
mov
lret
xor
mov
mov
adc
outsb
jns
cmp
rorl
add
stos
test
fwait
nop
loope
inc
mov
pusha
cmp
shll
das
push
sub
data16
mov
ret
jmp
push
loop
pop
cmc
jl
in
xlat
inc
cmp
stos
movsl
sub
jnp
pop
out
pop
icebp
shll
in
popf
imul
mov
ss
sbb
mov
pop
mov
jmp
mov
sub
int
sbb
jno
jg
xchg
xchg
lea
pop
adc
into
pop
lcall
cmp
js
dec
out
cmp
jp
or
mov
arpl
int
push
aaa
sahf
jae
ss
inc
mov
push
lret
mov
out
in
into
xchg
addr16
insl
popf
mov
mov
mov
inc
cmp
sbb
int3
push
aaa
push
inc
negb
jp
enter
xor
sbb
mov
aaa
or
add
pop
cmc
dec
push
adc
ret
cltd
iret
cmp
xor
pop
mov
adcl
cmp
xchg
outsb
ret
addr16
pop
add
mov
fdivrs
push
add
pop
pop
xchg
or
jnp
mov
xlat
cmp
inc
pop
jecxz
sub
fs
lock
fiaddl
mov
cmp
sub
inc
cmp
addr16
bound
jmp
ret
mov
adc
mov
movsl
push
ret
and
dec
push
mov
mov
ss
sub
or
cmp
popa
testl
dec
imul
in
ficomps
inc
add
ss
cmp
clc
fs
inc
adc
cmc
stos
pop
int
aam
mov
sbb
jne
inc
xlat
push
stos
cmp
insl
stos
movsl
inc
add
subl
jl
inc
inc
popa
xchg
sbb
imul
push
sbb
scas
cltd
pop
mov
push
outsb
mov
cmpsl
sbb
or
or
xor
loop
jp
ds
ret
cmpsb
dec
cld
out
inc
stos
xor
out
leave
xchg
fiaddl
pop
dec
cli
repz
or
push
das
mov
cmpsb
ljmp
stos
jns
test
outsb
dec
add
mov
out
gs
cmp
nop
negw
dec
lods
sbb
int3
and
lock
mov
sahf
mov
cmpsb
push
add
orb
cwtl
xor
shlb
xchg
rcr
push
in
rcll
nop
lods
ds
mov
cmp
pushf
pop
and
push
out
jns
push
popf
mov
lds
movsl
pop
inc
inc
sub
inc
mov
repnz
dec
pop
mov
lahf
pop
inc
xor
xorl
mov
pop
cmp
out
and
pop
add
cmp
movsb
push
mov
stos
xchg
insl
pop
mov
cld
xchg
cmp
mov
jbe
pop
or
cmp
jno
nop
xchg
pop
icebp
loope
push
inc
mov
or
test
dec
push
mov
jecxz
pop
mov
mov
mov
stos
add
ret
xor
pop
popa
call
lret
test
sub
ret
mov
sbb
pop
jnp
or
pop
push
shll
addl
xchg
rorl
int
jae
imul
xor
int3
fidivs
out
xchg
sarl
mov
test
out
sub
cltd
mov
int3
std
sarl
xorl
dec
iret
dec
outsl
push
push
ret
mov
nop
lret
mov
sbbb
pop
push
sub
dec
repz
jecxz
lcall
xchg
nop
sbb
mov
jns
dec
ror
xor
jno
ds
inc
sbb
cmp
and
movsl
sbb
inc
aaa
xchg
mov
out
xlat
mov
xor
lea
cmc
subl
lods
in
pop
sub
cmc
addl
jge
jmp
jge
and
cmp
inc
sbb
xchg
jmp
cmp
test
or
mov
dec
hlt
adcb
leave
inc
nop
jno
xor
mov
sbb
adc
stos
lods
inc
dec
aam
inc
cs
std
mov
stos
xlat
out
lods
fdivrl
mov
sbb
sti
jo
inc
jge
inc
adc
mov
test
sbb
addr16
addr16
pop
or
mov
dec
fmull
test
sub
xor
ja
test
mov
inc
xchg
dec
popa
cmpsb
sti
loopne
gs
inc
stos
and
pop
je
addr16
push
and
pop
cwtl
cltd
or
test
xchg
aam
jecxz
pop
mov
lds
mov
and
cltd
adcl
cmc
and
inc
jg
cmp
xchg
inc
jp
mov
sbb
and
cmp
push
rcrl
hlt
mov
loopne
xchg
mov
pop
cmpsb
imul
ficompl
and
scas
add
rcrl
cmp
addb
mov
outsl
xor
test
daa
mov
xchg
fdivl
adc
in
and
xchg
in
pushf
addr16
push
and
mov
push
test
insb
inc
dec
mov
sub
fs
lds
mov
es
daa
leave
push
fnstenv
pop
sbb
mov
xchg
mov
xor
push
pop
imul
cmpsl
pop
cmp
clc
push
adc
test
pop
cli
out
nop
loop
int3
out
je
insb
push
inc
mov
inc
xor
add
push
inc
std
fcompl
dec
popa
ret
pop
and
add
add
pop
imul
cli
pop
movsl
mov
jl
je
aam
jl
sub
cltd
insb
dec
movsl
dec
aaa
push
dec
das
xor
pop
mov
cmp
movsl
negb
rcrb
inc
cmpsb
aaa
mov
movsl
jl
and
outsl
fdivl
repnz
sbb
cli
shlb
mov
jle
or
aad
cmpsb
js
jmp
xor
jecxz
in
jae
sub
dec
lods
jp
push
jno
arpl
add
sub
adc
test
mov
xchg
xchg
stos
adc
adc
adc
xor
mov
push
aaa
cld
sarl
loop
sub
xchg
scas
fidivs
jle
add
inc
dec
out
sub
aad
mov
mov
fiadds
adc
imul
mov
or
push
imul
jg
shlb
xchg
jl
adc
adc
mov
test
lods
xor
scas
roll
rcl
lahf
push
mov
jmp
lret
push
stc
loope
pop
fsubp
popa
jge
ret
push
int
jecxz
adc
jno
adc
push
enter
mov
mov
mov
movsb
inc
dec
xchg
js
jl
lds
push
dec
or
or
lods
out
out
xor
cmp
pusha
or
neg
push
inc
push
push
popw
inc
scas
movsb
insl
sarl
dec
cltd
xor
lds
pop
insl
adc
aad
mul
call
cs
mov
imul
incb
dec
in
ds
outsl
or
xchg
loope
xchg
mov
pop
fbstp
pushf
into
nop
fists
fs
sub
sahf
inc
mov
ja
scas
push
pop
mov
lahf
push
dec
sarl
scas
xor
jecxz
add
jp
icebp
shll
popa
xor
in
out
jno
loope
and
mov
ficoml
in
pop
mov
loope
cli
in
stc
shll
sub
orb
mov
or
xchg
inc
outsl
inc
push
xlat
fyl2x
push
rcll
ss
xchg
mov
cmpsl
mov
negl
sbb
mov
mov
out
add
les
out
xor
sbb
sub
outsb
xchg
add
std
mov
jno
fimuls
out
xor
push
cmp
dec
imul
bound
add
and
push
jns
adc
je
fs
bound
push
or
ficomps
xor
subl
inc
mov
daa
pop
mov
sub
cltd
and
outsb
sub
gs
bound
ret
in
sbb
jg
and
les
nop
add
push
jl
jecxz
jns
cmpsl
mov
popa
jbe
cmp
jp
xor
mov
mov
insl
mov
jo
negl
push
inc
movsl
add
ljmp
leave
sbb
test
hlt
hlt
cmpsl
mov
push
loopne
cmpsl
repnz
and
cmpsb
adc
out
sub
pop
adc
dec
and
or
aam
enter
mov
jmp
repz
and
movsb
sbb
cmpl
jle
or
repz
neg
sarb
push
add
jecxz
jmp
mov
dec
xor
repz
nop
xchg
jb
cmp
add
insb
in
popa
lahf
xchg
adc
push
pop
out
xor
fsubrl
sbb
mov
jbe
nop
mov
jecxz
mov
cld
cs
jns
mov
cs
push
push
mov
sub
push
dec
xorb
dec
xor
dec
inc
popf
jl
sub
or
or
dec
or
pop
outsl
cmpps
inc
ljmp
jbe
cmpb
les
arpl
insl
cmp
cmp
jns
ret
iret
jno
jp
jp
adc
sarl
pusha
inc
adc
adc
popf
lcall
pop
mov
mov
out
fldcw
orb
push
inc
xchg
adc
push
cmp
pusha
orl
insb
rorb
ss
shrb
popa
mov
mov
fistpll
js
mov
popf
cwtl
cli
sbb
xchg
jns
aaa
mov
jns
idivl
inc
test
stos
sti
inc
xor
add
lcall
dec
mov
add
in
xchg
flds
dec
mov
xor
shrb
icebp
cmp
idivb
pop
int
in
outsl
add
fwait
and
aam
fstpl
pop
loopne
test
shrb
add
ds
sub
and
jecxz
adc
shrl
dec
out
sar
xchg
popf
je
int3
lret
test
mov
xchg
pop
sbb
movsl
iret
mov
push
ret
sbb
xor
pop
or
sub
ficompl
rsqrtps
sub
sub
cli
cmpsb
dec
mov
jle
sbb
inc
int
push
into
pop
or
lcall
sbb
aad
inc
fs
pop
cmp
push
in
rcll
push
testl
xor
data16
cmp
or
clc
push
dec
pop
nop
inc
in
xor
sub
sbb
push
in
cmp
aaa
add
cmpsl
pop
popa
je
adc
lahf
mov
popf
sub
pop
mov
dec
mov
daa
icebp
xor
mov
cs
pop
jecxz
inc
inc
lahf
lods
inc
sub
repz
imul
lret
adc
in
mov
fst
dec
push
mov
mov
sbb
bound
rorl
and
xor
add
pop
pop
sarb
outsb
xor
mov
lods
inc
mov
xor
sbb
xlat
pop
inc
cmp
xchg
pop
sahf
pop
push
or
push
les
popl
push
jbe
mov
not
sarl
out
lods
push
and
lods
addr16
cwtl
or
cmp
int
sti
pop
push
pop
cld
jo
roll
mov
inc
mov
faddp
divb
jg
or
push
pop
inc
mov
arpl
addr16
repz
xor
adc
xor
lret
mov
jecxz
fcomi
push
clc
push
cmpsl
pop
mov
daa
push
mov
scas
pusha
push
ss
scas
push
fsts
sbb
jg
fbld
sbb
fs
std
stc
mov
xchg
adc
pop
lcall
cltd
adc
pop
push
cmp
push
mov
xchg
sbb
test
pusha
imul
outsb
mov
scas
and
sahf
add
jge
cmp
add
add
fwait
xchg
sub
ficoml
ja
push
cmpsb
jnp
test
add
scas
adc
adc
jno
ret
mov
shrb
rorl
add
ret
add
jo
jge
xor
les
rcrb
roll
inc
or
inc
mov
dec
cmp
sbb
push
jns
push
inc
int
mov
jp
jo
mov
daa
jl,pn
sub
inc
mov
adcb
dec
dec
mov
sbb
mov
pusha
mov
popa
pop
push
dec
out
ss
xlat
pop
inc
or
push
inc
scas
add
push
cmp
xor
dec
subb
fcompl
adc
inc
add
clc
movsb
jae
outsb
pop
into
mov
sub
sti
test
add
or
inc
lahf
jg
ss
sbb
subl
xchg
and
pusha
mov
add
loope
lcall
jae
ja
mov
cs
xchg
repz
mov
or
sarl
cmp
rorl
xchg
fs
xor
sub
sbb
fbld
sub
push
shrb
push
loop
mov
jno
insb
ljmp
mov
pusha
mov
jecxz
mov
dec
arpl
adc
push
mov
lods
movsb
outsl
xor
test
mov
mov
fs
out
dec
pop
imul
rolb
cltd
mov
xchg
aas
rclb
pop
dec
mov
xchg
adc
ret
mov
andb
out
dec
mov
dec
inc
mov
xor
stos
popa
xlat
ljmp
add
jp
bound
orl
push
scas
cmp
adcl
jns
sub
mov
xchg
sbb
fndisi(8087
cmp
dec
jno
imul
lret
fdiv
gs
pop
sub
arpl
mov
jno
sarb
sub
in
mov
push
dec
dec
std
jecxz
xor
mov
mov
addr16
retw
insb
icebp
sbb
loop
mov
mov
inc
xor
cmp
data16
scas
cwtl
lahf
out
inc
stos
std
out
out
aam
outsl
pop
pop
js
push
pop
les
ljmp
mov
gs
add
pop
hlt
jnp
lcall
and
inc
test
mov
sar
inc
xor
cli
and
testb
ljmp
adc
fs
jbe
xchg
xchg
and
add
push
mov
popf
hlt
mov
es
push
lods
sbb
xchg
repnz
jae
out
sbb
idivb
dec
push
adc
xlat
fidivs
adc
sbb
jmp
test
ret
icebp
aam
or
insl
push
xchg
dec
jp
test
pop
vorps
cmp
cmp
hlt
pusha
pop
in
ljmp
leave
lods
aaa
testl
pop
push
dec
call
adc
add
pop
mov
cwtl
pop
int
and
and
sti
out
push
cmp
mov
cmp
sub
pop
adc
add
das
mov
jmp
inc
dec
mov
sbb
out
repz
scas
outsb
out
jno
mov
daa
xchg
mov
add
pop
jg
sbb
inc
iret
fwait
mov
pushf
popf
mov
movsb
lahf
sub
sti
xchg
lods
sub
nop
and
loopne
jo
pop
xor
jecxz
adc
mov
mov
xchg
mov
mov
cmp
fiaddl
decl
push
sub
movl
push
and
mov
xchg
sbb
mov
cmpsl
lods
push
cwtl
mov
adc
fildl
or
jp
push
into
in
dec
int
dec
jp
mov
sub
leave
and
mov
enter
jae
cltd
mov
push
scas
fldcw
adcl
adc
adc
cmc
dec
mov
mov
es
ljmp
dec
adc
imul
movsb
dec
pop
out
and
inc
dec
popa
lds
and
or
aam
adc
jno
jmp
dec
sti
cmp
push
adc
xor
gs
divl
adc
aaa
or
jns
add
jnp
sbb
push
and
pusha
jb
jnp
and
fwait
pusha
test
lods
push
orl
lahf
dec
cmp
mov
mov
addr16
popa
push
pop
std
xor
mov
mov
adc
insb
jp
shll
outsl
movsb
ficoms
xchg
cltd
jae
add
mov
push
xchg
int3
xchg
in
mov
lock
cmpsl
xlat
je
inc
mov
pop
push
xchg
in
adc
dec
xor
mov
pop
pop
cmovb
leave
sub
mov
inc
aam
popa
out
inc
cmc
pop
scas
add
dec
cmp
jo
push
repnz
mov
loopne
mov
pushf
xlat
pop
sbb
out
popf
and
and
mov
shrl
out
imul
cmp
stc
dec
ret
call
push
and
adc
inc
int3
notb
mov
mov
mov
into
es
rolb
sub
fdivp
mov
or
pusha
sub
jbe
out
mov
push
fdivrl
adcl
cmpsb
pop
mov
es
jge
sub
pop
aad
jle
fwait
scas
dec
sbb
mov
mov
in
jne
sbb
int
sub
push
dec
loopne
pop
dec
fmuls
es
cmpsl
cmp
cltd
rolb
js
sbb
fists
movsb
test
sti
icebp
push
jae
idiv
in
mov
push
sbb
divb
mov
pop
inc
jns
subb
xchg
adc
roll
xchg
scas
pop
xchg
pop
aaa
movsb
nop
ja
aam
jbe
push
inc
sti
mov
movsl
sub
and
lret
popa
add
scas
jno
enter
movsb
xor
sub
cmp
xchg
out
loope
fstps
dec
rolb
adc
cmp
test
imul
das
add
mov
nop
xchg
sahf
mov
loopne
adc
push
cli
data16
and
arpl
push
cmp
sbb
into
mov
cmp
out
xchg
sahf
jnp
dec
std
mov
mov
add
fcom
adc
inc
aam
js
fistpll
aam
push
dec
das
sub
lock
adc
and
hlt
ds
push
jl
add
adc
sbb
dec
call
fidivrs
fcoml
cmp
pushf
sub
mov
loope
sub
push
faddl
add
sbb
ljmp
mov
repnz
lods
jmp
sti
push
dec
iret
cmpsb
xchg
xchg
sub
push
push
pop
ficoml
dec
and
aad
sbb
sbb
dec
add
add
mov
sub
iret
ljmp
les
in
jb
or
not
xor
repz
notl
stos
add
dec
xchg
push
cmp
jl
dec
mov
movsb
out
and
sbb
mov
lcall
add
movsl
jp
adc
sub
xor
int3
mov
push
sbb
dec
adc
mov
aam
mov
push
cmp
cmc
or
pop
loopne
daa
adc
push
push
es
incl
adc
shl
lcall
inc
lcall
cmpsb
stos
xor
jne
mov
in
jb
mov
cltd
ret
add
out
cmp
and
mov
mov
dec
mov
or
subl
popa
std
push
sub
jne
loopne
rorl
cmp
sub
ja
out
out
xchg
outsl
sbb
fldl
imul
xchg
scas
icebp
and
lds
or
jne
xor
push
scas
std
inc
jns
ds
clc
add
and
das
dec
cmp
pop
aaa
cmpsl
out
inc
test
pop
test
ret
cli
sub
xchg
push
sbb
and
sbb
out
fcmovbe
add
sbb
sbb
cltd
inc
out
test
or
add
mov
and
dec
or
int3
das
je
pop
out
sbb
push
dec
pusha
outsb
mov
pop
ja
xor
dec
sar
pop
pushf
xchg
movsl
or
jb
cmp
sub
les
call
jno
mov
xchg
and
cmpb
mov
cld
rsm
lods
scas
loope
sub
sub
iret
scas
jno
dec
sbb
jns
movsl
jno
push
pusha
pop
add
add
push
test
scas
and
mov
mov
or
lret
subl
orl
outsl
push
mov
cld
sar
or
and
addr16
push
xchg
mov
leave
sub
xor
mov
push
or
xchg
jecxz
in
insl
sbb
adc
shll
xor
test
xorl
jbe
mov
arpl
cltd
mov
or
idivb
xorl
daa
mov
dec
cld
orb
and
xlat
dec
insb
inc
aaa
inc
sbb
and
sbb
in
and
sub
fwait
mov
mov
xchg
mov
lahf
dec
xor
adc
sbb
fiadds
mov
stc
cmp
shll
xor
inc
cmp
aas
daa
dec
jl
pop
into
bound
mov
dec
test
mov
sbb
pop
mov
adc
sbb
lcall
inc
jbe
pop
repnz
pop
cmp
push
js
shr
jp
add
sbb
cmpsb
mov
leave
in
insl
cwtl
mov
repz
faddp
jns
mov
mov
clc
pop
adc
jg
jge
jmp
adcb
lods
shrl
pop
aam
sub
jmp
divb
add
into
out
mov
inc
insl
clc
xchg
or
loop
push
or
jbe
sbb
and
push
fisttpl
or
stos
sahf
jmp
ficomps
popa
push
add
in
out
mov
loope
mov
add
mov
cmp
lock
mov
jb
subb
pushf
jno
mov
scas
dec
adc
xchg
test
xor
or
mov
jmp
mov
xor
daa
jae
add
and
mov
das
sub
mov
add
add
mov
loopne
into
inc
hlt
add
xchg
rcl
shlb
mov
pop
sbb
out
data16
das
push
lcall
pop
aaa
aam
inc
enter
cmp
lds
mov
arpl
mov
xchg
in
sub
jmp
mov
sub
push
shll
inc
mov
mov
rcrb
xchg
jle
sbb
shrb
mov
icebp
in
into
icebp
mov
rorb
outsb
packsswb
insb
lahf
mov
test
filds
mov
arpl
sbb
loope
loopne
push
push
push
ljmp
inc
jno
lods
das
pop
push
imul
sbb
leave
push
or
loope
jg
fidivrs
xor
push
adcl
nop
cld
std
addr16
lret
inc
out
jns
gs
clc
mov
scas
out
mov
inc
jp
xchg
cmp
sub
push
mov
rolb
mov
int3
enter
jge
addl
pop
test
mov
into
cmpsb
inc
dec
xchg
mull
imul
cmp
shll
fcoml
inc
dec
xchg
mov
mov
push
sub
cmp
cmc
mov
push
adc
ljmp
xor
cmp
xchg
xor
inc
daa
mov
ljmp
repz
lea
insl
xchg
nop
orb
rolb
in
movsb
je
sub
divb
incb
call
or
adc
out
mov
stc
movsb
xorb
aas
adc
jbe
movsl
lock
cwtl
pop
add
inc
out
fs
push
pop
mov
aaa
imul
fwait
adc
or
inc
push
out
xor
xchg
and
push
xchg
and
es
or
cmp
scas
cmp
iret
scas
xchg
and
add
add
mov
divl
jne
pop
fldt
and
scas
inc
mov
jl
pushf
and
mov
and
add
jge
insl
cli
lret
lds
xlat
xchg
adc
gs
mov
mov
push
cmp
test
in
nop
pop
out
lahf
jg
inc
xchg
adc
push
xor
inc
cltd
cmp
add
jg
aaa
sub
dec
inc
pop
add
sbb
stc
jne
es
sbb
mov
cltd
lods
mov
imul
cmp
dec
cld
in
repz
insb
and
jle
repnz
jne
jnp
lret
pushl
mov
inc
in
andb
or
dec
pop
test
das
xor
ret
or
in
js
int
mov
test
in
nop
xchg
sub
push
or
cld
ret
inc
bound
and
adc
repnz
mov
cmp
popa
cmp
mov
icebp
mov
push
loop
and
test
out
aas
pop
add
push
fsubrl
cmpsb
push
push
test
adc
and
fisttpll
pop
stos
jmp
outsl
push
fs
iret
imul
lret
dec
clc
fstpt
dec
sbb
sarb
jmp
xchg
xor
sbb
cmp
xlat
pop
cs
xchg
push
fldl
jle
rcll
dec
gs
add
sbb
lods
add
cs
lods
outsl
fnsave
and
xor
fcoml
or
sar
cli
jb
out
movsl
mov
mov
mov
lret
push
sti
cltd
mov
lods
cmc
out
xchg
push
gs
repz
add
xchg
jb
pop
xchg
mov
push
mov
sbb
shlb
shrb
ja
jg
enter
jmp
popa
add
lret
xchg
in
outsl
mov
gs
jae
popf
xorb
add
dec
or
and
xchg
pop
add
mov
not
cwtl
push
scas
inc
hlt
inc
mov
xchg
iret
mov
mov
fists
popa
adc
sbb
jns
jo
fs
sbb
lock
jae
add
add
cmp
in
gs
cmp
cli
std
xchg
test
fisubrs
push
iret
scas
inc
in
insl
push
cmp
sub
bound
in
out
insl
dec
push
xchg
sub
mov
int3
mov
xor
sbb
inc
push
pop
bound
adc
pop
inc
jns
jbe
dec
cwtl
mov
xor
in
jae
shlb
movsb
orb
inc
add
mov
xchg
xor
in
cmpsb
arpl
repz
pop
xchg
mov
xchg
repz
inc
lock
fs
mov
out
push
cmpsl
loope
inc
pop
mov
aad
push
mov
lods
jecxz
xor
fistl
imul
add
and
sub
sub
in
xor
or
xchg
inc
ds
add
push
imul
inc
push
inc
aam
fs
fdivl
cmpb
pushf
adc
cmp
outsl
fistl
dec
add
repz
arpl
mov
cmp
xor
add
aaa
and
push
cmc
daa
icebp
xchg
or
pop
sub
jl
ret
or
outsb
cmpb
dec
mov
loop
and
pusha
push
inc
aam
dec
mov
mov
cmp
push
or
fdivl
leave
jnp
and
sub
push
repz
dec
jp
cwtl
adc
push
pop
cmp
inc
cltd
imul
jg
repnz
mov
push
fbld
ds
mov
inc
repnz
sub
ret
testb
out
push
arpl
test
loopne
lock
push
sub
cmp
sbb
loop
add
sub
test
scas
in
adc
push
sbb
inc
mov
add
outsl
pop
es
imul
pop
jnp
sbb
mov
addr16
test
sbb
popw
sbb
mov
std
aaa
xchg
xchg
xchg
dec
mov
pop
jmp
aaa
jne
and
inc
add
pop
adc
pop
or
mov
add
mov
cmp
jl
out
sub
ja
mov
mov
lock
jg
mov
cld
pop
cli
jp
dec
aad
test
ss
fisubl
rcrb
mov
jae
inc
jbe
inc
pushf
ret
jmp
add
mov
mov
repnz
xchg
sub
jbe
fisttpl
ljmp
cltd
and
and
adc
xor
pop
add
mov
test
and
dec
mov
mov
aas
mov
fisubs
cmp
cmp
inc
sub
insb
lret
pop
cli
addr16
ret
or
dec
popa
movsl
push
jb
inc
push
scas
mov
xchg
ret
lds
vandnps
sub
orl
cmpl
iret
test
cmpsl
loope
mov
push
mov
pop
data16
stos
or
sbb
enter
mov
xchg
xchg
pop
mov
mov
insl
icebp
in
ret
inc
ds
and
adc
stc
and
pop
or
ret
adc
jecxz
fcomip
sbbl
sub
aad
lea
xor
xchg
cli
fwait
jle
gs
ljmp
ljmp
rcll
push
pop
dec
ret
or
jnp
push
scas
aaa
into
cmp
mov
push
int3
mov
bound
mov
hlt
fidivs
inc
loop
fisttpll
shrb
psubq
test
daa
adc
ret
push
scas
lds
out
das
roll
jg
inc
adc
inc
stos
movsb
cmpl
cld
and
loope
cmp
fistpl
pop
push
cwtl
fstl
mov
pop
sbb
fsts
and
sub
pop
sar
adc
inc
adc
std
push
sti
or
in
adc
loop
cmc
rol
sub
stos
loope
jno
mov
int
add
add
jmp
cmp
lret
jo
arpl
iret
nop
fwait
push
nop
out
sbb
push
aam
sbb
ret
gs
enter
imul
mov
out
lret
cli
pop
bound
push
pop
mov
lcall
add
xchg
imul
leave
and
dec
or
sub
sti
test
jge
icebp
movl
push
sbbb
push
outsl
clc
nop
inc
jecxz
stc
sbb
in
arpl
dec
in
fwait
dec
ss
lea
inc
subl
mov
cmovne
enter
dec
mov
ljmp
pop
mov
jmp
stos
or
mov
out
inc
decb
xchg
mov
cmpb
sbb
stc
mov
sub
pop
imul
xchg
in
lock
adc
loop
mov
clc
mov
and
inc
adc
leave
and
and
loop
daa
sahf
add
rolb
xchg
pop
fwait
add
shl
dec
jnp
pop
pop
sar
sub
fwait
adc
mov
jae
pop
inc
jae
pop
lods
pop
jo
lret
fistl
adc
cmp
ljmp
pushf
popf
fisubrl
loopne
aad
ret
into
cmp
add
lods
dec
sub
pop
xor
add
adc
xchg
or
push
ja
dec
jmp
es
outsl
sub
pop
leave
mov
aaa
rcl
jnp
mov
jge
pusha
xorl
jl
dec
push
je
push
rorb
sub
push
subb
inc
sbb
es
sbb
push
test
xor
jne
fiaddl
adc
and
lahf
fisttps
pop
mov
scas
jae
lods
out
and
rorb
test
xchg
fs
mov
scas
pop
inc
out
das
xor
and
xor
lret
sbb
dec
test
mov
frndint
sbb
inc
ss
cli
into
call
mulb
mov
fistpll
push
sbb
dec
shlb
push
lods
js
dec
jp
out
shr
outsl
dec
loopne
push
mov
xor
cmp
add
jmp
adc
test
pop
andl
add
mov
mov
sub
lea
fwait
mov
or
rol
loop
in
push
or
jmp
cwtl
scas
jg
pxor
adc
pop
out
pop
mov
push
negb
pusha
sub
enter
sarl
sub
inc
mov
xlat
loopne
jnp
sub
arpl
into
lret
rorb
test
jno
sti
jp
lret
xor
inc
jb
adc
xor
insb
outsl
pop
lcall
push
je
loop
mov
jp
xor
test
test
jle
push
sbb
js
lret
in
jle
jg
cmp
leave
dec
negl
pop
mov
orb
in
test
scas
popf
pop
fwait
pop
lods
sbb
mov
icebp
inc
and
ret
dec
xchg
fs
lods
incl
xchg
pop
push
mov
xchg
mov
mov
mov
pop
lcall
push
mov
inc
dec
ljmp
xor
arpl
xchg
js
roll
dec
xchg
lret
jmp
les
push
iret
aad
repnz
sub
out
push
je
fsubrs
in
xchg
mov
pop
lods
jo
aaa
repz
pop
jg
rolb
or
hlt
dec
lea
int
xchg
add
ss
leave
fisttpll
mov
lods
frstor
pop
iret
ror
xor
add
ja
mov
out
xchg
clc
and
es
cmp
jmp
nop
loopne
inc
push
test
xchg
insl
add
rorb
dec
adc
push
adc
out
fldcw
jae
push
outsl
mov
rolb
add
xor
jg
cmpl
cmp
das
mov
lods
pop
scas
orb
and
xor
jp
dec
adc
jb
out
xchg
dec
dec
hlt
xlat
scas
mov
andl
xchg
inc
mov
push
and
push
scas
out
in
cmp
les
jecxz
cmc
sub
jno
stos
ss
sbb
push
sbb
sbb
mov
adc
inc
cmp
gs
in
mov
subl
inc
insb
and
and
mov
rolb
mov
xor
inc
inc
add
cmc
pop
xor
push
shlb
and
push
cmp
jp
test
in
loopne
dec
inc
cmp
dec
cs
jne
loop
daa
lret
pushw
in
or
rcrb
lock
xchg
fsts
mov
push
aam
pushfw
cmp
test
dec
jl
ret
add
aas
shrl
pop
in
dec
jno
push
mov
popf
mov
inc
dec
xorb
mov
negl
daa
mov
int3
xor
into
jne
add
sti
dec
xchg
or
or
jmp
mov
inc
nop
fwait
push
repz
lock
fs
push
push
ljmp
pusha
int3
into
mov
jg
adc
mov
out
sub
mov
in
leave
jmp
jl
dec
push
and
mov
fistps
inc
enter
mov
xchg
xor
jae
and
dec
xor
aad
test
cmc
mov
sbb
lea
mov
shlb
shrl
xchg
mov
decb
bound
xor
js
fidivs
sti
inc
xor
mov
cmp
jge
cld
sarl
aad
pushf
roll
pushf
imul
loope
xchg
std
dec
daa
pop
jb
das
mov
dec
dec
cwtl
add
addr16
xor
push
jecxz
mov
loopne
mov
and
cmp
dec
cs
mov
lock
xor
cltd
sbb
sbb
in
lds
mov
insb
mov
aam
mov
mov
cli
push
out
popa
test
and
inc
sub
lea
ds
xor
notb
dec
sahf
pop
clc
pop
dec
pop
jmp
inc
daa
loopne
jne
push
rclb
push
pushf
negb
icebp
or
je
pop
stc
negb
cmpsl
jae
sbb
shll
and
jb
iret
je
mov
jl
sbb
xor
stos
jge
icebp
sbb
jne
push
pop
push
adc
sub
iret
test
pop
jp
mov
ds
jb
jne
ja
repnz
mov
mov
test
shrl
jns
nop
aas
push
pusha
adc
movsl
stos
sarl
pop
cltd
mov
dec
jecxz
movb
ja
ljmp
mov
cmp
mov
cmp
ret
sub
andb
pop
adc
out
ret
cmc
fiadds
sub
std
and
pushf
pop
mov
inc
int
mov
push
outsl
outsl
and
xchg
test
push
add
sbb
xchg
pop
adc
dec
lea
pop
lods
aaa
cmp
push
cmpsl
dec
out
aaa
aad
jns
js
mov
and
cmp
sbb
and
mov
pop
shlb
loope
lds
pop
xor
int3
jno
cmovb
push
js
stos
and
or
rcll
mov
pop
cmp
inc
test
loopne
test
fistpl
js
fdiv
adc
mov
xor
subl
popf
in
cmp
jo
inc
js
cltd
movsb
sub
inc
or
or
mov
lret
aad
lea
nop
or
rcrl
inc
and
nop
dec
test
jmp
rolb
stos
ret
in
xorl
jmp
dec
xchg
mov
test
out
inc
xlat
mov
pop
pop
dec
lea
pop
xor
fiaddl
pop
xor
or
and
jl
clc
or
pop
mov
push
movl
int3
xorb
int3
popf
addl
add
jge
arpl
popa
fmuls
pop
bound
push
mov
mov
lret
mov
inc
pop
mov
movsl
mov
sbb
outsl
fbld
fstps
mov
repnz
stos
imul
lea
pop
jge
xchg
in
mov
adc
scas
jg
arpl
add
popa
sahf
push
add
lcall
xor
mov
sub
ds
sbb
fnstenv
lahf
xor
mov
mov
jl
icebp
jae
cmpsl
fistps
sarl
outsl
loope
xchg
push
pop
jb
xchg
shll
outsb
mov
mov
call
inc
xor
rorl
add
adc
xchg
mov
int
cmpsb
repz
orb
movsb
divb
and
jbe
sub
and
leave
shrb
imul
adc
mov
iret
cld
cwtl
mov
inc
cmpl
add
dec
adc
xor
lahf
cltd
inc
lcall
sbb
std
inc
inc
call
addr16
addr16
fisttps
sub
push
mov
std
mov
push
add
ljmp
pop
fisubrl
pop
cwtl
sub
outsl
out
add
sti
push
in
add
mov
sub
add
stc
repz
xor
xor
clc
loop
dec
xor
push
or
mov
shrl
mov
dec
pop
scas
jecxz,pt
or
jb
mov
pushf
xor
testl
and
xor
mov
adcb
out
add
lahf
or
imul
mov
push
popa
mov
mov
idiv
push
sub
fcmovb
jno
mov
sub
add
push
insb
mov
inc
pop
push
xor
repz
in
adc
mov
jo
cmp
xor
sbb
rol
lods
jg
adc
adc
xlat
mov
imull
imul
cld
imul
fcomi
jmp
mov
shll
xchg
std
inc
mov
mov
iret
adc
sbb
push
mov
inc
mov
xor
outsb
pop
in
scas
adc
mov
jp
outsb
dec
lret
mov
mov
or
mov
leave
stc
or
sub
lods
sub
xchg
insl
dec
mov
fnstcw
xchg
jge
insl
and
mov
mov
cs
bound
push
lock
jbe
push
xchg
popa
scas
xchg
shll
outsb
clc
xor
jno
mov
sub
sahf
scas
fildl
sub
add
popf
pop
or
mov
popf
lock
es
mov
inc
cmp
mov
adc
adc
sub
adc
jp
jl
loopne
inc
push
gs
in
inc
mov
mov
test
lcall
push
cwtl
sti
fildl
gs
and
xor
cmc
jge
jnp
xchg
push
stc
and
lock
xchg
inc
or
and
test
add
out
lock
pop
insb
pop
je
inc
daa
sbb
xlat
lock
mov
std
lcall
fstpl
das
adc
pop
and
gs
cmpsl
ficomps
fdivl
repnz
mov
xchg
push
loop
mov
push
cmp
int
push
idivl
fdecstp
insl
pop
jle
sub
scas
aaa
jmp
or
push
test
xchg
add
lods
lret
sbb
add
ljmp
jle
and
add
and
repnz
mov
loopne
and
push
lods
je
aaa
sub
loop
xor
pop
jge
push
insl
stos
sbb
in
xchg
mov
fdivrs
data16
and
mov
push
jge
xor
jge
lret
cmp
mov
lret
pop
into
inc
jle
testl
iret
sbb
daa
xchg
mov
mov
lahf
push
and
rorb
ret
or
pop
testl
cmp
dec
mov
and
mov
cltd
std
ss
cltd
jae
push
scas
sar
jmp
fbld
lods
adc
pusha
leave
in
lcall
mov
mov
aad
sbb
in
push
jb
stos
jbe
jp
in
pop
nop
lds
js
dec
test
mov
fsubr
inc
dec
sbb
adc
lret
pop
hlt
mov
rclb
insl
lea
adc
xor
das
pop
pop
xor
ja
je
data16
mov
push
sbb
not
mov
adc
xchg
mov
test
lds
int3
pop
fsubrs
imul
outsl
rol
xchg
jno
out
setns
mov
and
inc
gs
imul
imulb
imul
ficoml
push
daa
imul
adc
mov
dec
idivb
push
add
adc
pop
fildl
mov
add
mov
mov
or
pop
push
jecxz
mov
fisubrl
pop
dec
mov
insl
cmpb
filds
outsl
add
cmp
js
popl
mov
jl
inc
lret
sub
adc
orl
cld
cmpb
cmp
in
leave
fwait
lret
sbb
xchg
shlb
stos
lock
dec
jp
shll
cmp
pop
scas
mov
push
sbb
bound
push
dec
lcall
jns
pop
dec
insl
stos
mov
jg
push
push
inc
gs
mov
jnp
imul
dec
hlt
pop
cltd
int
xchg
xchg
add
jecxz
adcl
or
fnstcw
sbb
mov
ss
sub
out
cmp
and
mov
cmp
mov
loope
mov
ret
jmpw
addl
nop
mov
out
adc
mov
push
sub
xchg
in
adc
fcompl
dec
jno
dec
aad
dec
jo
adc
rorl
imul
aas
push
xchg
shlb
divl
mov
mov
inc
mov
jle
pop
push
jb
lcall
cmp
imul
das
std
subl
add
mov
fcomps
mov
rcrb
adc
mov
push
pop
xor
aas
jno
pop
push
sub
mov
in
mov
hlt
xlat
push
mulb
dec
sub
sbbl
lcall
or
cwtl
pop
xorl
push
sarb
jno
loopne
adc
xor
adc
and
scas
sti
xorl
or
shll
mov
mov
or
mov
in
clc
std
ret
or
mov
lret
adc
sbb
js
lea
cmp
push
xchg
mov
push
dec
bsf
mov
cmp
arpl
cwtl
xchg
mov
rcl
lret
cmc
sbb
cmpsb
cmp
loopne
pop
lea
mov
imul
jne
repnz
jo,pn
es
mov
mov
lcall
or
push
jmp
outsl
movsb
and
aam
xlat
roll
inc
adc
scas
cmpsl
cmp
jmp
pop
imul
mov
out
mov
in
sub
pop
rcr
mov
jge
jl
sti
outsb
jae
and
aas
add
push
and
lahf
addl
pop
xchg
icebp
jge
push
dec
nop
lahf
inc
in
leave
lods
sahf
ret
call
sarb
sub
pop
dec
add
xchg
pop
and
roll
xor
inc
cmpsb
test
add
test
or
lock
je
or
adc
dec
jmp
jns
fs
rolb
fistps
rcrb
icebp
inc
ljmp
mov
push
jecxz
xor
lods
push
push
add
in
movsb
mov
repz
mov
add
popf
shlb
ret
sbb
cmp
dec
or
hlt
pop
adc
and
cmp
pop
jae
pop
bndldx
add
and
rcrl
out
cmp
pop
repnz
mov
ja
adc
pop
data16
jl
ret
xchg
int
add
ficoms
add
push
inc
sub
imul
jecxz
mov
lcall
or
loopne
popf
pop
or
ds
push
sub
daa
xor
xor
xor
bnd
movaps
mov
mov
mov
adc
push
dec
out
sub
sbb
adc
add
lahf
cmp
dec
dec
loopne
sahf
sub
push
mov
mov
pop
lret
mov
jnp
stos
rcrl
xor
push
std
jmp
movl
mov
in
mov
popf
pop
scas
outsl
dec
aam
push
add
out
repnz
sbb
fisttps
out
jmp
sahf
addr16
cmp
fstpl
sbb
xchg
cs
cmpsl
push
aad
cmp
push
mov
jno
sbbl
aam
sarl
jo
pop
out
fsubrp
insl
data16
pop
push
rcl
push
leave
shrl
test
add
push
out
dec
das
ds
or
and
out
into
sbb
lahf
leave
jns
gs
or
sbb
sbbl
daa
lret
lea
jne
dec
pusha
mov
sbb
sbb
loopne
jo
pushf
pop
scas
test
mov
lcall
jnp
das
sbb
nop
push
movsl
xor
loope
in
push
dec
enter
jle
test
inc
mov
pop
js
xchg
fdivl
and
jo
or
stos
adc
cltd
scas
test
push
add
stos
mov
stos
mov
sbb
pop
idivb
mov
pop
sbb
sahf
push
fnstenv
and
push
xor
dec
sub
inc
lcall
push
shrb
mov
mov
das
into
ja
pop
mov
xor
mov
clc
fsubl
ja
mov
jle
jb
popf
lods
cmc
arpl
rcll
inc
jp
iret
in
sti
roll
mov
or
orl
sbb
test
icebp
jl
sub
test
xchg
add
ret
push
xlat
cs
inc
add
xchg
mov
xor
icebp
loopne
test
cmp
adc
push
roll
fsubp
adc
cs
in
xor
push
inc
add
jno
ds
test
fsubs
cmpb
jl
and
aam
call
sub
mov
fs
sub
insb
shll
sub
je
gs
stc
mov
adc
fimuls
call
std
inc
mov
push
dec
sub
jb
mov
test
jmp
dec
jge
lods
xor
lret
xchg
das
scas
adc
fidivs
test
push
add
repnz
call
dec
shrl
add
fs
mov
dec
iret
lret
mov
mov
mov
daa
push
cmp
or
mov
fistpl
data16
test
and
sbb
jmp
mov
cmc
lock
jo
xchg
dec
mov
inc
pop
mov
or
inc
or
push
leave
sbb
aad
mov
add
mov
cmp
mov
jp
pusha
mov
inc
sahf
out
scas
out
jge
in
mov
pop
add
in
fbld
pushf
dec
pushf
mov
iret
or
pop
sbb
in
inc
icebp
jmp
jmp
pop
inc
xor
mov
or
xor
inc
fucomip
fimull
xchg
fs
mov
mov
sbb
push
cmpb
mov
cmp
lods
call
add
jns
les
rcl
sbb
lret
pop
outsb
repnz
lcall
rol
add
or
jo
push
int
fwait
int3
ja
xor
into
cmc
jg
xchg
jnp
or
mov
addr16
nop
jl
and
sbb
xchg
je
repz
jnp
js
xor
xchg
fbld
leave
pop
addb
shlb
cld
jp
mov
dec
mov
cmpsl
std
sarl
mov
adc
dec
xchg
cmpsb
icebp
xchg
imul
mov
rorb
rolb
icebp
mov
sub
or
shl
repnz
adc
pop
in
xchg
or
loop
cli
lahf
push
mov
movsl
inc
decb
xchg
shl
ficomps
xor
push
cmp
aam
dec
fnsave
jne
push
pop
loop
xchg
jmp
addl
loop
push
movsb
xor
popa
xor
ret
test
xor
mov
push
mov
call
pop
repz
test
shl
xchg
add
mov
pop
mov
cltd
push
hlt
fdiv
jle
outsb
mov
sti
rcr
push
and
mov
frstor
pop
inc
scas
fisttps
pop
mov
adc
and
pushf
testb
push
rolb
and
fs
orb
in
xor
loopne
das
adc
inc
test
mov
sub
ret
xchg
dec
jmp
push
lcall
test
sub
cwtl
mov
dec
cli
xchg
mov
fistpl
sbbb
loop
jle
fisubrl
xor
cmpsb
xchg
ja
std
mov
cmp
loop
inc
mov
mov
and
xor
mov
mov
xor
mov
cmp
frstor
loope
pop
dec
sub
cmp
xchg
fs
cmpsl
pop
push
inc
fisttps
xlat
jno
fsub
fwait
fnstcw
and
int3
jns
push
jmp
jp
je
test
pop
js
shlb
push
xchg
jmp
imulb
cltd
enter
xchg
lahf
xor
dec
xchg
push
and
sbb
dec
andl
outsl
lret
xchg
sub
push
rcrb
push
es
jmp
sbb
clc
fists
mov
sub
negl
mov
and
shrl
mov
mov
loope
ljmp
out
lret
dec
pop
scas
jle
jbe
test
loopne
or
das
dec
je
loop
mov
popf
mov
jno
jge
call
jp
test
xchg
movsl
jno
xor
mov
push
rcll
nop
dec
xchg
and
outsl
test
outsl
int
pop
clc
mov
mov
jae
jbe
mov
jns
fsubs
xlat
mov
pop
mov
lret
ror
push
or
add
or
inc
shrl
push
test
and
lods
das
mov
bound
cmpl
test
arpl
cmp
addr16
ja
sub
pop
idivb
pop
imul
xchg
mov
cmpsl
xchg
push
pop
mov
mov
lods
jmp
sti
es
inc
call
jp
ss
aam
push
dec
cmpsl
jle
pop
jmp
push
rorb
lods
jecxz
in
fsubrs
sub
sti
sub
adc
push
xor
xor
ljmp
sbb
pop
flds
or
popf
or
push
adcl
adc
and
jl
out
arpl
add
sub
dec
mov
lds
mov
mov
mov
jnp
mov
fisttpll
mov
push
in
or
dec
xchg
push
outsl
cltd
pop
jp
leave
fwait
cmp
xrelease
ja
xchg
out
popa
push
icebp
add
data16
imul
xor
add
test
mov
xchg
jg
inc
nop
movsb
xor
cmp
fs
stos
div
int3
push
cli
imul
popa
add
push
out
das
imul
test
fcos
inc
dec
enter
push
push
mov
inc
mov
gs
sub
and
leave
cmp
iret
or
dec
push
mov
adc
in
fmul
push
mov
lea
je
popa
xlat
mov
inc
pop
push
mov
loop
lea
cwtl
inc
icebp
mov
aam
jg
rcrl
std
popa
xchg
lea
stc
cmp
mov
push
hlt
movsl
xor
in
mov
and
pushf
or
scas
insl
mov
sub
stc
stc
clc
inc
mov
mov
mov
loope,pt
and
dec
mov
hlt
ficoms
lea
inc
cmp
xor
loope
mov
in
push
cmp
lea
addl
cltd
push
inc
aad
sub
adc
inc
mov
pop
mov
lret
sbb
sbb
push
cmp
mov
repnz
or
push
mov
push
jo
jg
lods
lahf
ret
sbb
xor
mov
jae
fcmovnb
mov
push
mov
ret
int
lods
out
cmpb
jmp
dec
sbb
mov
push
mov
cs
loope
push
rol
and
mov
mov
inc
fwait
out
out
loop
hlt
sbb
lock
in
shlb
or
pop
sbb
lds
jg
add
pmullw
inc
jo
inc
inc
es
xor
enter
add
repz
sti
cmp
mov
pushl
push
xchg
std
nop
xchg
dec
cmpsl
out
add
shll
arpl
inc
add
movsl
mov
dec
decl
gs
dec
loope
mov
cli
lcall
mov
dec
sbb
jne
jle
adc
push
cmpsb
ds
out
adc
push
adc
sbb
icebp
xchg
loope
push
test
cmp
faddl
jl
xchg
stos
cmpsb
inc
sbb
mov
nop
mov
shlb
xlat
jge
add
pop
mov
and
or
pop
in
adc
jge
loope
jecxz
repz
insl
add
mov
push
pop
stc
insl
mov
call
or
push
and
es
push
inc
out
out
adc
pusha
leave
cld
jle
mov
pushf
jb
fwait
ljmp
jecxz
xchg
jp
or
mov
push
mov
inc
nop
je
mov
add
cmp
or
leave
xor
inc
mov
popf
or
stos
sbbb
mov
adc
gs
jo
rcrl
je
inc
cli
pop
cli
lret
sar
int
addr16
xchg
fldl
adc
mov
inc
gs
xor
cld
out
cltd
mov
pop
les
mov
cmp
sbb
loopne
xlat
fdiv
imul
push
sti
iret
shlb
stos
or
or
frstor
sarl
sbb
repz
aad
dec
dec
push
fwait
ret
pop
das
test
push
mov
add
outsl
sbb
test
scas
je
cmp
adc
push
in
dec
inc
cmp
cmp
test
inc
lock
push
and
and
mov
push
outsl
movsl
sbb
aas
mov
and
imul
xor
dec
cmp
lds
xor
jecxz
les
mov
test
fsubrp
pop
dec
inc
jge
dec
adc
insb
cli
scas
cmp
sarl
sbb
jbe
aam
sti
mov
dec
clc
mov
mov
out
out
jle
mov
push
lahf
jbe
test
faddl
push
xchg
xchg
pop
lock
mov
mov
mov
mov
or
push
mov
ds
and
popf
test
add
pop
sbb
xlat
cwtl
pop
jne
fwait
and
hlt
xor
mov
xlat
ret
lret
cld
pop
dec
xchg
push
add
push
and
jecxz
das
aam
jmp
dec
mov
mov
cltd
movsl
popf
sub
loopne
stos
imul
push
fistpll
std
or
shlb
dec
sub
or
rolb
sbb
shll
loopne
sbb
out
scas
scas
mov
mov
pusha
mov
or
es
adc
xchg
lods
cwtl
jbe
adc
ds
jl
fnstsw
xchg
or
das
enter
push
sbb
in
jl
and
addr16
fistps
mov
ja
adc
xchg
out
mov
xor
pop
pop
push
movsb
push
sub
push
lods
fwait
das
xchg
jmp
inc
ret
nop
sbb
mov
jge
pop
inc
fsubrs
hlt
addb
mov
lcall
cmpl
xor
fnstsw
mov
aaa
int3
imul
jle
sbb
cmp
rclb
es
or
call
fisttpll
nop
xchg
xor
idivl
jo
fwait
inc
aaa
lcall
mov
repz
cld
cmpsl
std
ret
and
xchg
cmpb
xlat
add
decl
xchg
adc
jno
xchg
xor
cmp
fstl
rcr
cmp
es
mov
pushf
jnp
or
jae
mov
rolb
xor
cld
arpl
inc
jo
lea
dec
inc
cmp
call
pop
outsl
add
mov
les
fs
sar
xor
mov
test
ds
jo
movsl
cmp
das
into
rorb
cwtl
pop
and
jmp
out
int
pop
mov
decb
movsb
popf
fdiv
lret
mov
or
inc
xchg
mov
es
mov
jbe
add
dec
test
mov
sahf
loop
popa
mov
jne
sub
shll
mov
and
and
adc
lahf
mov
rcr
xchg
and
xchg
orb
sbb
mov
adc
fs
and
add
push
aas
push
movsl
push
sbb
rcl
mov
xchg
jbe
jbe
cmpsb
and
xchg
mov
sarb
loop
scas
out
cmp
sbbl
aaa
pusha
dec
sbb
jp
mov
push
mov
add
fstl
mov
inc
sbb
xor
aas
mov
add
int3
stos
sbb
jecxz
mov
data16
clc
icebp
jg
arpl
inc
fcomp
sbbb
xchg
sub
sbbb
popf
add
sub
mov
pop
rorb
mov
sbb
aaa
and
test
dec
mov
or
push
pop
cmp
dec
sbb
cltd
cli
test
pop
xor
mov
imul
mov
add
dec
cli
inc
push
adc
shlb
cmpb
dec
in
int3
outsb
push
std
fucomip
lcall
testl
jg
mov
movsb
push
int
mov
movsl
cmpsl
dec
sub
cmp
add
cmpsb
sub
sbb
jle
enter
mov
mov
jns
add
and
in
xchg
sbb
negl
and
repz
sbb
test
jns
jmp
adc
jno
aas
jne
scas
mov
mov
sub
add
jp
xchg
lock
push
lahf
mov
sti
push
jo
adc
adc
mov
cmpsl
cmp
adc
movsl
int3
lret
sub
pop
xor
or
adc
or
xchg
dec
cltd
cli
jne
out
jg
idivl
add
outsl
outsb
sbbl
add
mov
hlt
push
add
loopne
lods
mov
mov
cmp
in
xor
outsl
out
loope
movsb
adc
leave
sti
jmp
outsl
cmpsl
sbb
sbb
test
les
push
mov
push
insl
int3
jl
jg
fnsave
jae,pn
mov
sbb
mov
out
xchg
xor
jbe
ds
jl
pop
dec
mov
xchg
fcmovb
add
sbb
sbb
pop
int
ss
lret
pop
inc
mov
push
mov
fstl
push
push
jbe
jne
cmpsb
add
inc
rcl
in
push
sbb
call
popf
xchg
std
adc
mov
mov
adcb
adc
dec
imul
add
jae
xchg
nop
stc
xor
dec
mov
jnp
in
push
push
add
ja
shrb
pop
shrb
hlt
jmp
aas
lods
je
adc
insb
push
psubusb
sbbb
jns
jb
lea
dec
rclb
xor
lea
movsb
cmp
testl
cli
test
sbb
pop
nop
les
mov
dec
int
loope
dec
rorl
adc
push
or
add
ret
arpl
andl
inc
mov
or
sub
test
mov
pop
clc
mov
je
int
inc
mov
mov
ret
cld
inc
outsl
sub
cmp
int
jne
fbld
mov
loopne
ret
adc
push
or
in
xchg
loopne
mov
cmp
clc
out
inc
sub
jnp
jp
jnp
test
test
fisttpl
outsb
and
fwait
test
inc
mov
jmp
ja
ja
or
es
and
or
adc
push
inc
xchg
pop
movzbl
dec
enter
fidivl
cmc
pop
sub
xor
push
mov
ficoms
fisttpl
jbe
call
lods
out
imull
inc
xlat
fistps
insb
js
xor
adc
cltd
mov
or
sbb
pop
jmp
jle
pop
xchg
std
jae
add
loopne
jo
sbb
shl
jnp
xchg
mov
int3
loopne,pt
push
or
in
lahf
mov
mov
pop
fidivrs
xor
jg
push
pop
mov
mov
fldt
loopne
out
shlb
rol
pop
lret
or
and
mov
outsb
sti
push
and
movsl
pop
aam
popa
lock
cltd
ja
mov
add
or
pop
shrl
js
or
imul
outsl
jecxz
sbb
adc
push
lret
xor
mov
inc
lret
loope
sbb
or
or
daa
in
mov
adc
xlat
les
sub
cmc
ss
pop
push
push
jbe
push
movsb
test
lods
cmpsb
mov
mov
enter
scas
pop
adc
aas
mov
jnp
mov
outsb
pop
sbb
inc
nop
ficoms
rcr
push
dec
cmpsl
push
sti
cmp
sbb
adc
scas
cmp
dec
movups
dec
int3
cli
dec
out
rclb
movsb
fwait
push
jge
fidivrs
and
jg
sar
xchg
pop
mov
in
out
mov
jo
sbb
bound
shlb
push
xor
out
cmpsl
test
icebp
adc
out
mov
inc
sti
ret
pop
cmp
lods
movsb
daa
movsb
repnz
pop
mov
cmc
out
push
sahf
push
mov
xchg
lods
jb
notl
and
cmp
mov
dec
push
pop
jmp
or
out
sbbl
push
jno
lahf
cwtl
mov
dec
outsl
dec
inc
inc
dec
insb
outsb
shrl
dec
lahf
mov
pop
or
push
repnz
inc
and
test
cwtl
cs
shr
mov
pop
push
enter
mov
add
push
test
mov
push
or
scas
lods
xchg
int
mov
pushf
std
cmpsl
mov
data16
sbb
lods
or
sbb
pusha
or
cmp
insb
stc
pop
fstl
push
in
mov
mov
inc
add
out
shl
ud0
bound
jecxz
in
add
lods
mov
lods
xor
jbe
loopne
xchg
push
filds
stc
push
mov
insb
int
sub
or
and
rorl
data16
outsb
aaa
dec
dec
add
test
bound
cmp
ja
adc
adc
jmp
lahf
xchg
cmp
dec
jnp
pop
roll
push
and
cmpsb
enter
leave
jge
or
cmp
push
addr16
loope
jmp
xor
xchg
out
fcoml
mov
pop
mov
stos
cmp
std
xor
int3
cmpb
adc
pop
mov
fcoms
xchg
mov
negb
jle
incl
ret
int
mov
cmp
adc
mov
daa
cmp
jne
dec
arpl
sbb
jo
or
mov
push
nop
sbb
inc
or
out
scas
in
outsl
jg
lods
cs
inc
and
xor
cmc
add
mov
jbe
jno
sub
js
pop
and
push
out
xlat
mov
mov
dec
lods
je
mov
sbbb
ss
cld
dec
mov
sbb
push
movsl
and
mov
adc
sti
repz
sti
dec
imul
cwtl
dec
ljmp
into
notb
cmp
out
lret
cmpsl
sbb
aas
mov
jnp
mov
lds
repnz
or
jb
or
jle
mov
and
test
xchg
cs
pop
pop
xor
das
add
push
push
push
add
loope
mov
xor
sub
test
frstor
dec
stos
xor
mov
xchg
aas
mov
or
in
aas
dec
call
rcr
adcb
mov
push
lock
push
add
and
pop
xchg
mov
lret
aaa
inc
mov
mov
cld
sbb
jns
shlb
and
adc
das
int3
or
xor
aas
loopne
arpl
mov
sub
xchg
ret
ret
inc
pop
jp
or
aam
xchg
xchg
pop
ds
nop
imul
lea
add
push
hlt
in
stos
jmp
mov
pushf
mov
mov
inc
xor
xor
std
adcl
rcll
mov
test
jecxz
xlat
arpl
jle
stos
fistpll
mov
pop
push
ss
adc
movsl
pushf
cmp
mov
adc
fsts
cmp
bound
mov
xchg
cmpsl
push
cmp
add
add
lret
lahf
push
ja
popa
adc
shl
inc
pusha
inc
mov
fidivrs
repz
adc
mov
pusha
add
iret
adc
sbbb
addl
mov
fs
sbb
lods
sahf
cli
aad
pop
xchg
inc
xchg
and
cmp
mov
loop
nop
negb
dec
or
mov
ja
pop
mov
mov
fiadds
mov
xlat
sbb
mov
lret
mov
push
mov
movsb
pop
lret
sbb
fnstcw
xchg
data16
shll
mov
sub
scas
out
pop
test
jb
adc
add
lcall
je
mov
pop
jno
jns
jne
sti
test
sbb
and
sub
sub
push
test
test
sub
mov
mov
push
mov
out
loop
sub
pop
mov
dec
jl
cmpl
xor
adc
lds
push
loope
call
fistps
stc
dec
cmp
lret
cmp
mov
int3
popa
ljmp
sub
mov
dec
mov
ret
sub
aam
inc
pop
and
cmpsb
insb
incl
push
jmp
adc
pop
mov
push
mov
aaa
push
je
xchg
aam
dec
push
sub
adc
dec
cwtl
lock
pop
pop
mov
andl
mov
rcrb
sbb
xor
rol
mov
push
mov
rcl
out
push
sbb
mov
mov
sub
iret
mov
pop
cmp
jmp
clc
jmp
cmp
mov
cmp
dec
xor
dec
cli
jle
sbb
push
rcr
jl
ret
mov
js
cmp
xor
pushf
dec
push
fcomip
cmp
test
and
lret
push
adcb
rorb
mov
push
lea
sbb
push
lods
insb
lods
fs
sbb
mov
pop
rorb
mov
test
mov
mov
jp
ja
int
test
push
leave
or
scas
idivb
adc
adc
ror
scas
jb,pt
push
insb
xor
xchg
stos
loopne
jmp
mov
or
loopne
mov
or
push
mov
test
jb
call
into
inc
push
gs
pop
cmpsl
into
arpl
or
roll
out
inc
sarb
jne
mov
xor
push
push
inc
inc
mov
movsb
xchg
into
cmp
and
or
jmp
movsl
shrl
out
xlat
mov
mov
mov
xchg
mov
addr16
ffreep
sub
inc
popa
call
push
cmpsl
cmp
addr16
pop
cmpsl
push
xlat
sbb
stos
negb
push
mov
cmp
out
adc
push
inc
pop
and
ja
inc
push
mov
cmp
subl
lods
xchg
mov
ficomps
daa
mov
adc
lahf
std
loope
jns
mov
loop
xchg
xchg
push
or
aam
jmp
mov
or
adc
sarb
in
clc
stc
enter
jg
insb
or
push
mov
popa
xchg
fldl
cmc
lea
jmp
xor
cmp
push
ret
jne
push
movsl
pusha
pop
sbb
ds
pop
jo
in
jae
subl
or
fimuls
adc
addl
add
mov
mov
mov
sub
out
push
fistpl
int
sbb
mov
addr16
sub
repz
jmp
mov
out
xor
stos
xchg
inc
pop
adc
xchg
xor
stos
mov
outsl
xchg
dec
xchg
jb
push
adc
inc
cs
cmp
jmp
push
inc
stc
mov
or
pop
mov
ljmp
movsl
arpl
stos
das
mov
jns
cmp
into
aam
lea
sub
mov
cmp
xchg
mov
lods
add
cmp
icebp
ljmp
jo
mov
adc
sarl
mov
lret
iret
mov
cmp
daa
ss
lahf
repz
andl
inc
mov
dec
xchg
xchg
aaa
pop
addr16
frstor
xlat
or
adc
movsl
mov
ds
push
jne
pop
fstpt
into
aaa
or
inc
pop
imul
leave
in
sub
cmp
jo
xchg
jne
incb
pop
mov
xchg
sub
insb
mov
call
cmp
cmp
add
add
xor
repnz
xor
pop
pop
mov
pop
jb
pop
jo
stos
adc
dec
pop
ljmp
lahf
xor
fldl
and
xchg
pop
outsb
fidivl
dec
es
mov
aas
data16
shll
addr16
dec
push
sub
push
dec
pop
pop
push
sub
test
outsb
jl
pop
cmp
scas
or
pop
andb
out
dec
xchg
das
mov
fimull
cmc
pop
into
nop
outsl
insl
out
int
sbb
fs
lret
ss
mov
aas
jbe
inc
lcall
sbb
xlat
lahf
jne
pop
rcll
and
imul
cmc
dec
in
jecxz
xor
or
lea
push
dec
jp
push
cltd
into
sbb
sar
xchg
out
jno
inc
jns
push
pop
cli
insb
pop
nop
jo
roll
inc
push
int
int3
test
inc
add
fnstenv
push
sahf
es
jae
les
inc
dec
in
roll
push
sbb
sub
mov
scas
mov
xchg
pop
xor
cmp
sub
shll
jmp
call
mov
fcompl
mov
adc
mov
sub
test
mov
nop
sbb
cmp
leave
adcb
push
imul
and
jp
test
fs
push
lret
leave
or
mov
fstpl
dec
mov
and
inc
jnp
push
addr16
negl
lods
lea
xor
cmp
fstl
loopne
insl
cmp
ficomps
movsb
inc
push
and
adc
shrl
pop
negl
mov
inc
pusha
ja
push
adc
xor
cmp
pop
mov
sbb
std
sub
hlt
or
add
mov
icebp
jl
movsl
sub
ja
lret
xchg
orl
inc
mov
cwtl
lods
pop
ja
or
in
outsb
pop
mov
xchg
and
add
rcr
inc
dec
push
loopne
in
jle
inc
mov
adc
pop
lcall
xor
sub
inc
fidivs
dec
jg
cmp
mov
mov
or
shl
or
popa
rcll
sub
xchg
and
adcl
lret
ljmp
loope
lcall
cmpsl
and
mov
addl
mov
sub
push
adc
mov
pop
xor
addb
into
les
cld
or
leave
lods
icebp
cmp
ljmp
cli
jnp
pop
jns
sbb
repnz
sub
cld
lds
mov
movsb
or
mov
or
jle
outsb
push
xlat
and
sub
mulb
fnsave
xlat
mov
adc
ret
mov
imul
into
jmp
adc
cld
inc
mov
ds
aas
insl
add
inc
movsl
fisubrs
adc
jae
stos
sub
xchg
int
pop
test
xchg
pop
pusha
and
ds
add
dec
pop
mov
nop
clc
out
pop
cmp
xor
das
mov
push
sbb
ror
inc
push
mov
loope
inc
lcall
lods
inc
jb
add
or
arpl
xor
ret
fwait
pop
sbb
push
sahf
xchg
xor
sbb
or
mov
adc
ds
mov
pop
push
dec
xor
repnz
sbb
in
pop
shlb
or
imul
sub
addb
faddl
jbe
call
jae,pn
mov
repz
mov
cmp
dec
jb
lds
add
in
sbb
bound
inc
int
pop
mov
cltd
out
test
or
imul
dec
dec
cltd
mov
movsb
jae
and
or
rcrl
repnz
repz
mov
add
fldln2
mov
inc
and
out
sub
outsb
pushf
mov
syscall
cmp
out
cmp
div
mov
xchg
mov
das
mov
fwait
mov
ss
pop
outsb
mov
inc
pop
pop
sbbb
adc
add
out
stos
sub
test
js
or
add
xor
cmp
bound
inc
nop
mov
ret
sub
imul
xor
or
mov
scas
sbb
add
test
fwait
cmp
inc
push
and
adc
imul
lcall
xor
mov
xor
rclb
cmp
enter
sarb
pop
lock
pop
aad
out
sbb
fsubr
and
sbb
cmp
repz
les
xor
sub
and
mov
scas
imul
mov
repnz
xchg
js
mov
imul
jo
pop
xchg
pushf
lea
jmp
loop
into
sbb
es
out
jne
lods
bound
rcrl
dec
adc
orb
jmp
sbb
sbb
lret
fmul
and
pop
jg
and
jne
cltd
icebp
inc
aas
adc
scas
sub
push
les
enter
ret
rorb
mov
push
inc
jb
jmp
cli
sti
into
test
stos
leave
lods
rcrl
bound
lds
pop
loope
push
pop
repnz
hlt
fsubp
loop
or
xor
scas
mov
xorb
xchg
insb
push
lock
fadd
sub
add
xchg
jmp
test
scas
push
ds
adc
enter
jne
xchg
xor
or
in
push
psubb
nop
sahf
sbb
fistpl
push
dec
sbb
sub
jne
enter
fisubl
daa
outsb
mov
ret
pop
pop
xchg
push
xlat
xchg
test
shlb
jmp
mov
sub
push
push
push
mov
arpl
jno
frstor
mov
push
ret
cmp
fwait
add
and
repz
add
inc
into
pop
push
dec
insl
nop
inc
push
jno
mov
mov
sbb
clc
bound
imul
out
in
cmp
inc
out
test
pop
pop
or
mov
sar
or
mov
inc
pop
sti
lret
std
fsts
jp
pop
xchg
and
cmp
push
sbb
push
sbb
aam
movsl
push
cmp
jmp
rcll
add
scas
enter
fldenv
cmp
jl
cltd
repz
sti
xchg
into
sub
dec
call
and
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
sub
int
es
fwait
aad
dec
xchg
jecxz
test
mov
xchg
xor
mul
add
iret
repnz
adc
cld
jne
sub
scas
divps
mov
pop
sub
jbe
inc
je
cmp
or
inc
jne
sbb
mov
ljmp
int3
lahf
movsl
dec
and
sysexit
stos
cld
sub
arpl
mov
mov
loope
movsl
incb
dec
lret
andb
lret
je
jo
pop
add
sbb
fs
adc
outsl
sbb
sbb
sbb
pop
mov
or
std
into
pop
imul
idiv
sub
pop
fldt
int
xchg
mov
negb
popf
mov
jle
mov
pop
and
ret
xchg
xchg
test
mov
lcall
nop
cld
cmp
cmpsl
dec
pop
cwtl
outsb
jle
insb
adc
aad
dec
inc
lock
adc
mov
pop
test
mov
and
in
xor
mov
and
adc
aas
cmpps
fcmovb
aaa
add
sub
stos
stos
ljmp
popf
arpl
pop
orl
sub
adc
and
out
add
sbb
movsb
test
les
repz
push
dec
push
and
sub
cmpsl
pop
shll
or
jg
mov
fcomip
pushf
mov
dec
or
leave
xor
aas
xor
push
or
or
sarb
adc
mov
and
add
bound
push
mov
xlat
lret
fildl
addr16
adc
pop
adc
push
ljmp
test
in
fidivrs
ja
cmp
stc
adcb
cwtl
aad
subl
sbb
sub
pusha
mov
adc
out
mov
add
push
addr16
jecxz
mov
movb
or
mov
or
adc
push
sub
pop
mov
lods
filds
gs
cmpsb
pop
jmp
dec
mov
loope
fstps
cwtl
jp
mov
mov
jbe
jae
cli
scas
dec
and
add
mov
mov
cli
cli
outsl
pop
lods
lock
cmp
in
shlb
mov
pop
jo
pop
pop
inc
push
dec
add
shlb
or
inc
scas
ja
inc
add
ja
shll
push
jns
cwtl
daa
mov
dec
add
lret
add
sub
std
jne
fs
add
mov
aam
out
inc
jns
out
lds
sbb
loope
ljmp
add
push
clc
mov
test
in
out
cli
push
neg
lahf
xor
sbb
adc
or
aaa
test
pop
inc
cli
clc
leave
xchg
in
into
insl
jge
test
pop
xor
pop
push
sbb
clc
xor
sti
pop
lods
jno
lock
out
out
vpunpckhqdq
aas
stc
stc
jmp
jge
loopne
loop
xchg
xchg
imul
cmpsb
xchg
in
test
pushf
mov
pop
mov
xor
adc
outsb
push
imul
xchg
loopne
dec
mov
add
push
shrl
ret
cmp
rclb
pop
repz
sub
push
lea
jnp
xor
mov
mov
sub
add
repz
lods
xchg
sti
push
aam
push
mov
stos
leave
fadds
mov
and
mov
cli
cmpsb
es
push
call
and
in
pushf
addr16
add
adc
push
fsubrl
xchg
and
repz
in
repz
movsl
adc
leave
mov
out
cmpl
ret
mov
sahf
cs
std
xor
adc
adc
mov
shl
cmp
cmc
out
ss
cmp
ss
dec
push
mov
insl
adc
jns
inc
lock
pop
loopne
sti
outsb
sub
std
mov
aam
pop
or
clc
inc
inc
mov
sub
repnz
or
add
pop
xchg
addr16
das
sbb
push
dec
in
push
pop
outsl
bound
rcll
inc
fisubrl
cwtl
sub
cmp
push
outsb
add
in
add
roll
xchg
xchg
mov
or
aam
leave
sbb
mov
cmp
int
ficomps
fwait
lds
mov
enter
mov
fnstcw
repz
adc
ljmp
aas
inc
and
les
sbb
fcompl
loope
idiv
lods
jne
fs
insb
imul
subl
aaa
cs
add
nop
adc
cmp
jmp
loop
xchg
scas
cli
adc
or
ja
dec
loop
lods
adc
dec
xor
call
mulb
and
int3
jmp
xchg
into
cli
inc
jmp
sti
lock
dec
flds
jbe
inc
mov
dec
sbb
je
xor
orl
inc
pop
and
pusha
stc
push
lods
inc
push
scas
or
out
mov
lds
scas
cwtl
std
nop
mov
mov
jl
push
mov
mov
movl
inc
lods
hlt
out
push
lahf
jae
loop
mov
mov
movlps
mov
orb
lret
lea
sub
xor
or
rcrb
xor
jge
rorl
gs
cli
dec
adc
dec
xor
add
mov
mov
or
cmpsl
push
sbb
aam
mov
pop
pop
sub
outsl
sahf
or
push
or
cmc
stc
jg
pop
popf
fwait
rcll
jno
mov
cld
or
or
mov
nop
repz
xchg
and
leave
pusha
or
gs
mull
dec
mov
int3
adc
in
mov
jo
xor
mov
mov
lahf
lret
sub
adc
sub
fwait
xchg
jno
insb
pop
cmpsb
cmp
sub
cli
push
pop
daa
push
sbb
mov
mov
popf
xchg
xchg
sub
std
jecxz
and
or
xlat
js
mov
jecxz
mov
std
mov
mov
cmp
int
jno
addr16
jne
and
adcb
das
cmp
mov
jmp
adc
jp
lret
sahf
mov
sbb
das
icebp
mov
mov
cwtl
je
popa
push
cmpl
stc
xor
loopne
dec
mov
loop
insl
notb
popf
pop
mov
or
fldl
lahf
xchg
inc
int
inc
lock
sub
dec
cs
sbb
cwtl
add
outsl
loop
push
jecxz
and
xor
out
ror
iret
inc
xchg
sahf
cld
mov
outsb
leave
ret
js
cmpsl
lods
loope
mov
push
sahf
fs
sbb
imul
push
sub
and
pop
jecxz
mov
xchg
xchg
imul
xor
add
arpl
loop
jnp
and
mov
bound
sbb
or
lods
xchg
lods
cmc
mov
into
cli
pop
sbb
lcall
cmp
xlat
out
cmp
push
add
xchg
push
lret
xor
std
add
in
arpl
data16
cmp
mov
outsb
cmp
out
iret
and
icebp
adc
ja
lea
in
test
add
in
inc
xchg
adc
aaa
sub
lahf
sub
or
pushf
stos
dec
outsb
or
int3
aaa
jae
inc
mov
or
outsl
cmpl
sub
cmp
jge
daa
mov
call
cmp
stos
lods
sub
jle
jg
jmp
push
outsl
cld
mov
and
out
subl
pop
mov
rolb
mov
cmp
aam
ss
movsb
cs
js
and
sub
inc
push
pop
and
popf
mov
dec
and
inc
dec
imull
jbe
fmull
sub
sbb
or
pop
iret
xchg
pop
dec
mov
int3
bound
lock
dec
bound
cs
test
sub
jp
add
std
push
out
cwtl
nop
notb
jmp
xor
or
sbb
push
in
testl
iret
fstpl
sub
jne
pop
adcl
cmp
in
or
addb
lock
ds
dec
or
pop
loop
jnp
daa
mov
lock
lcall
and
or
sarl
repnz
jmp
sahf
inc
outsb
adc
pop
fnsave
loope
xchg
icebp
cli
mov
xchg
and
pusha
cmpsb
cwtl
xor
sub
and
sbb
xor
sub
dec
pop
cltd
adc
mov
adcl
cmpsl
or
jle
and
push
sub
mov
ljmp
pop
mov
push
imul
fcomps
leave
lea
mov
sbb
xlat
xchg
add
ja
mov
add
inc
test
mov
rol
cmp
mov
stos
test
push
xchg
insb
enter
repnz
subb
test
add
inc
or
sbb
pop
in
inc
mov
mov
call
jae
sub
fnsave
cmpsb
mov
push
scas
and
xchg
stc
mov
aaa
test
xor
mov
sti
mov
fmuls
fst
std
test
sub
xor
nop
fistpll
dec
push
test
lods
cmp
daa
mov
repz
pusha
incl
aad
add
hlt
mov
ret
mov
mov
in
fisubrs
out
adc
pop
mov
cld
inc
jecxz
xchg
call
sub
aad
popf
ja
pop
mov
cmpsb
or
repnz
jns
daa
cltd
mov
out
pmulhw
mov
sbb
cli
sti
cwtl
xlat
stc
cltd
lods
lahf
inc
repnz
sub
fwait
mov
or
push
in
jb
lret
clc
movsl
xor
mov
push
mov
stc
aad
xlat
push
es
mov
mov
fstpt
cmp
push
xor
dec
jmp
or
loope
dec
pop
xchg
jb
das
das
dec
mov
xor
and
int
es
xor
imul
xchg
or
xchg
xchg
cmpl
imul
sub
fsubrl
int
xor
or
xor
push
test
or
mov
movsb
mov
test
add
fidivrl
dec
sbb
mov
push
fs
sub
sbb
out
cmp
aaa
push
xor
lcall
mov
xor
insl
mov
or
std
mov
cltd
add
repnz
lcall
mov
pop
mov
aam
in
int3
adc
mov
sub
push
inc
iret
fwait
dec
xchg
divl
nop
add
mov
add
jnp
adc
hlt
inc
mov
mov
jmp
test
cmp
scas
pop
ja
std
jns
sbb
cmp
xabort
icebp
fnstenv
cmp
and
xchg
cmp
mov
and
les
out
cmp
mov
inc
stos
add
lods
jnp
fcompl
stos
ljmp
lret
fstpl
dec
mov
xchg
insl
xor
nop
dec
inc
dec
jb
imul
and
or
cs
call
test
fldenv
and
push
and
fdivr
pand
enter
mov
push
jecxz
push
push
fmull
cld
cmpsl
mov
push
xchg
and
lret
sbb
jae
jecxz
push
adc
and
or
mov
adc
mov
enter
loope
lods
push
and
xchg
aam
xchg
push
aas
loopne
stos
iret
pop
into
out
push
fimull
pop
push
mov
dec
adc
in
das
dec
lcall
mov
shlb
arpl
leave
cli
sub
cwtl
call
mov
xchg
add
lock
xor
hlt
xchg
cmpsb
andl
xchg
popa
push
jnp
fwait
loop
or
ljmp
icebp
mov
inc
popf
push
mov
mov
clc
stc
jnp
xchg
mov
push
inc
adc
ljmp
sub
out
jbe
add
lds
and
fs
sub
jb
xlat
cs
push
sahf
cmp
or
fisubl
daa
mov
add
xor
mov
cmpsb
je
cmpsl
hlt
xlat
pop
rep
decl
loope
cmp
outsb
dec
into
orb
jg
shl
push
sbb
int
adc
mov
push
dec
or
mov
adc
jle
and
loopne
mov
fists
ret
inc
loope
insl
mov
xchg
fcoml
mov
push
subl
mov
xchg
repnz
ds
lds
inc
xor
xchg
leave
push
jae
mov
mov
aaa
icebp
mov
dec
push
or
mov
fs
push
enter
mov
repz
loop
rcrl
push
fidivs
data16
fs
test
stos
fsts
sbb
adc
aaa
dec
sbb
jecxz
xor
pop
fisttpll
mov
xor
and
data16
lret
cmp
movsb
out
or
pop
sbb
cmp
cmp
ss
mov
je
adc
and
sub
cmp
fabs
xchg
sub
inc
lods
loop
mov
xor
sub
sbb
sub
adc
xor
dec
mov
dec
cmp
cmpsl
loope
inc
cld
dec
push
push
mov
lods
cltd
addr16
insl
lret
cmpsl
adcb
pop
or
out
mov
sarb
xor
repz
cmc
out
pushf
das
mov
mov
popf
xchg
adc
lea
jno
mov
data16
loop
sub
dec
adc
pop
jl
setnp
xchg
lods
sub
test
sub
icebp
sub
sub
outsb
or
aam
jb
rep
leave
out
or
or
fidivs
sti
leave
pop
pop
xchg
test
gs
dec
jne
aam
sbb
adc
jge
pop
insl
js
push
mov
sti
push
ja
jp
shll
sahf
dec
dec
int
mov
ds
imul
inc
xchg
adcl
popa
xor
lahf
jo
out
and
mov
mov
aaa
sahf
lcall
mov
mov
aaa
add
jg
sub
inc
test
stos
int3
mov
xor
insb
outsl
jne
xor
sub
test
xor
jo
push
outsl
mov
lea
jno
mov
add
jp
mov
out
jp
popf
mov
add
mov
out
je
sbb
jl
xchg
mov
pavgw
enter
or
xlat
adc
jp
call
test
je
mov
aas
or
push
mov
stos
outsb
adc
mov
lret
shlb
scas
add
adc
add
mov
pop
push
ljmp
cmp
or
cltd
mov
jne
mov
inc
loope
mov
xchg
cld
imul
in
adcl
dec
jge
outsb
fs
mov
mov
mov
sbb
icebp
lods
jg
loope
loop
push
outsl
clc
mov
and
push
dec
xchg
vmread
xchg
inc
loopne
jnp
shrl
jl
sub
jbe
pop
mov
mov
add
shll
aam
aad
cld
pop
les
cmpsb
jb
outsb
aad
shl
mov
out
lock
lds
aam
xor
aad
xchg
out
add
rep
mov
sub
je
outsb
mov
pop
loopne
inc
xor
xor
fnstcw
xor
out
and
sbb
test
dec
mov
mov
mov
mov
rcrl
cmp
push
ret
xchg
push
pop
shll
pop
add
mov
stos
es
adc
sti
test
jnp
jge
lock
std
and
adc
pop
mov
jne
jne
jo
xchg
xchg
jnp
jecxz
imul
jno
fdivrs
mov
imul
dec
adc
mov
ja
outsb
icebp
sub
jmp
or
rcrl
mov
addr16
loop
repz
test
in
testl
jb
sub
xlat
rclb
and
mov
xchg
xlat
xor
or
mov
xchg
enter
in
mov
pop
inc
jle
mov
cmp
int
pop
or
lock
scas
rorl
test
test
adc
cmc
inc
lds
adc
and
movsl
movsb
add
and
mov
xor
loope
imul
inc
mov
adc
outsb
mov
imul
cmp
sub
lret
outsl
enter
inc
inc
loopne
add
or
jecxz
xlat
inc
dec
xchg
adc
jne,pn
mov
dec
popf
xchg
cmp
fwait
xchg
mov
push
or
and
enter
xor
je
adc
lret
push
test
arpl
push
iret
sti
es
test
pop
pop
lcall
cmc
cli
out
cmp
les
pop
aas
sub
push
ja
adc
or
cmp
sbb
cmp
pop
add
into
inc
out
inc
or
sbb
es
xor
mov
adc
scas
fcoml
pop
push
gs
add
xlat
shrl
mov
lds
mov
jg
push
cwtl
adc
xorl
nop
pop
pop
sti
mov
addr16
cmp
mov
cli
inc
jae
or
push
mov
scas
jae
cmpsl
inc
cli
or
adc
inc
stos
fmull
adc
ret
pop
add
ljmp
leave
xor
pop
sub
es
pop
sub
and
sbb
hlt
lds
scas
loop
mov
sbb
inc
pop
pop
adc
pop
call
data16
inc
or
mov
lods
cmpsl
xlat
jne
add
je
pop
mov
arpl
loopne
push
or
sub
dec
sub
sub
in
cmp
cwtl
dec
ss
or
mov
adc
add
popf
mov
adcl
sbb
repz
out
or
pop
jecxz
push
popf
dec
and
mov
roll
dec
icebp
test
icebp
cltd
jp
mov
xchg
stos
pop
movsb
cs
jno
mov
pop
jge
push
inc
insl
in
xchg
ficoms
jmp
je
and
cmp
jecxz
fwait
insl
push
icebp
pop
or
shl
pop
fimuls
scas
sub
mov
add
cmc
filds
dec
cmp
or
pop
stc
add
in
adc
and
std
pushf
rorb
fadds
scas
pop
pop
out
popf
dec
mov
mov
arpl
fidivrs
pop
ds
data16
imul
add
inc
shlb
fisubl
or
pop
rol
scas
sbb
pop
dec
xchg
cli
mov
jne
cmp
scas
fmull
bound
add
jmp
rclb
jecxz
mov
clc
int
shll
xchg
nop
push
inc
ljmp
call
mov
arpl
dec
mov
fs
pop
mov
dec
xchg
mov
scas
lock
mov
lock
stos
call
add
dec
pusha
aad
cltd
repz
dec
negb
cmp
rclb
xchg
imul
sub
outsl
fisubs
and
push
mov
cmpsl
jecxz
sbb
sarb
lea
sub
addl
jg
jmp
loop
jl
inc
js
mov
adc
ret
cmp
lods
push
lret
sub
cmp
inc
sti
lods
hlt
add
negl
dec
pop
repnz
sbb
mov
push
in
pop
je
fsubrs
jl
push
xchg
lea
arpl
aas
je
sbb
dec
in
clc
cmp
adc
cmpsl
mov
stos
dec
aas
test
imulb
lahf
enter
sub
je
mov
not
mov
or
je
movsl
in
pop
fidivrs
cltd
bnd
fs
out
pop
in
cmp
xor
xchg
loope
add
inc
jne
push
mov
jge
xor
mov
mov
int3
mov
fs
lret
scas
leave
push
adc
imul
push
sbbb
inc
dec
sbb
shrb
sub
adc
pop
pop
sbb
sub
cmp
cmp
dec
cmp
les
mov
lret
mov
test
imul
pushf
imul
fildl
sahf
daa
sub
imul
ror
pop
mov
adc
lret
jl
mov
pop
loop
mov
jo
jle
add
push
push
addb
cmpl
js
dec
inc
pop
loop
and
jg
repz
mov
jg
daa
xlat
movsl
adc
in
mov
or
cld
sarb
and
stos
mov
adcb
cvtpi2ps
push
in
subb
sub
or
mov
xchg
pusha
mov
sub
hlt
mov
inc
loope
cltd
cmpsl
add
fwait
loope
aas
add
cs
insl
imul
xor
iret
insl
cmc
or
movsl
out
cmp
sarl
mov
mov
xchg
xchg
adc
cmc
or
call
and
scas
int
pop
cli
imulb
pop
out
es
gs
jnp
negb
jo
mov
cmp
mov
and
xor
ret
sarb
daa
adc
lahf
repnz
ljmp
push
push
or
sub
adc
jp
and
adc
sub
lods
inc
jb
jge
push
lret
mov
mov
or
clc
cli
mov
dec
aaa
xchg
aaa
mov
popa
add
add
jno
inc
cmp
push
mov
mov
mov
inc
or
jp
pop
ljmp
dec
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
.byte
mov
pop
out
iret
out
sbb
dec
cmp
ljmp
pop
add
adc
sbbl
gs
popf
rorb
adc
sbb
jg
call
mov
mov
mov
cli
adc
hlt
shrb
aas
mov
jge
jb
cmc
cld
cltd
mov
cld
repz
sub
scas
adc
mov
lahf
shlb
push
mov
sbb
fidivrs
or
iret
add
mov
mov
fcmovu
xor
push
imul
mov
fadds
aaa
add
add
icebp
dec
and
jmp
and
sarb
mov
mov
push
fistl
arpl
call
mov
std
jge
inc
pop
loopne
rolb
jl
loopne
pmulhw
xchg
or
pop
shl
mov
subb
adc
dec
mov
push
sbb
je
dec
stos
cmpsb
and
aaa
std
mov
cmpsl
enter
push
jg
test
push
pushf
xchg
and
mov
shr
jne
js
leave
jo
rcrb
aad
mov
je
pop
jmp
or
stos
pop
decl
shlb
lret
sub
sahf
mov
nop
rclb
imul
int
insl
lret
sub
leave
mov
dec
lods
popa
in
and
cwtl
add
imul
fnsave
bound
sub
or
push
es
gs
fdivs
pop
push
es
lahf
xchg
lahf
data16
mov
xor
inc
pop
inc
adcb
in
sbb
jns
inc
dec
jno,pt
cli
sbb
jecxz
push
into
adc
jp
insb
push
sub
pop
sbb
jp
mov
mov
push
ret
add
es
xor
dec
push
pushf
jp
mov
int
out
and
loopne
pusha
pop
cmpsl
shl
shlb
fsubrs
inc
sar
daa
test
mov
aam
inc
lea
ret
ds
jno
mov
mov
lea
cmp
and
iret
lods
xchg
sbb
cltd
test
shrb
aaa
and
clc
cs
xchg
in
or
aam
bound
jmp
or
insb
ss
jmp
cmp
shll
jmp
and
test
and
outsb
sbb
xchg
jb
cmpsl
sbb
dec
jecxz
iret
js
mov
jno
push
lock
imul
dec
cli
lret
add
mov
jmp
lahf
sbb
xor
adc
daa
enter
add
fwait
adcl
dec
imul
movsl
or
mov
adc
fwait
movsb
pop
adc
test
not
xchg
test
out
es
inc
pop
jge
xor
sub
leave
jmp
mov
icebp
add
into
inc
adc
lret
push
popf
xchg
pop
xchg
ret
jge
stc
or
lea
dec
popf
dec
and
xor
push
popf
mov
cli
scas
cmpsl
ss
or
mov
mov
adc
stos
dec
lods
lods
push
loopne
movsl
and
xchg
or
ret
loop
cmpsb
addr16
les
add
dec
jle
and
out
adc
js
lock
pop
pop
add
pop
fsubs
or
bnd
push
sub
inc
jl
sbb
hlt
mov
inc
mov
test
shll
and
xor
or
jle
adc
iret
psrad
jne
call
dec
mov
sbb
in
mov
dec
xchg
adc
decl
les
or
into
shlb
subl
mov
data16
add
lcall
or
xor
xor
shr
sbb
push
mov
xchg
mov
add
cli
sbb
ds
pop
jns
jbe
xor
pop
mov
fistpll
sub
xchg
pop
push
push
test
pop
mulps
sub
int3
xor
fiadds
mov
cmp
or
fstpt
and
jnp
jp
shll
in
fidivl
cmp
test
sbb
jl
mov
mov
push
pop
mov
arpl
pop
fdiv
cltd
cmp
inc
repz
ljmp
data16
jae
push
sub
fbld
sahf
pop
hlt
inc
ret
mov
in
clc
inc
add
popa
sbb
clc
xor
repz
pop
sub
fwait
cmp
mov
cmp
ss
fucomip
sub
mov
xor
ret
adc
dec
jp
shll
mov
stos
adc
mov
nop
sub
xchg
jae
movsl
or
pushw
pop
lret
pop
xor
aas
enter
mov
sbb
in
xchg
mov
ds
adc
loop
les
or
push
mov
mov
repnz
xchg
jo
fsubrs
mov
cmp
mov
jecxz
jb
adc
mov
xlat
mov
mov
mov
mov
push
decl
and
gs
insb
adc
sub
pop
mov
pushf
xchg
or
mov
add
in
sbbl
xor
or
stc
xchg
inc
pop
inc
mov
jmp
mov
movl
imul
js
lahf
dec
jne
out
jo
out
sub
jb
or
aad
aaa
stos
stos
test
dec
sub
enter
mov
add
test
rolb
xor
jmp
daa
push
jne
fs
xchg
add
repnz
dec
push
xorl
into
mov
mov
xor
xlat
stc
jnp
mov
loopne
js
dec
mov
and
scas
lea
test
aaa
orb
mov
jne
ds
adc
aas
mov
mov
pop
mov
jo
or
xchg
dec
mov
stc
push
cmp
lret
inc
sub
sub
xchg
and
mov
mov
ja
leave
jb
rclb
xor
cmp
fsubs
add
in
out
sbb
int3
stos
in
jnp
jg
sub
in
inc
cmp
sbbl
xor
in
inc
fmuls
ja
sub
fistps
sbb
fidivl
sub
std
cmovnp
enter
clc
xchg
sub
pushf
pop
test
jo
and
jno
mov
bswap
in
mov
and
mov
adc
test
iret
mov
daa
pop
scas
sbb
loop
jae
fisttpl
or
or
fcmovne
sbb
cli
cmp
lock
jns
pop
lods
fcom
add
sahf
aas
sbb
xchg
cs
jl
testb
sbbl
lock
gs
lcall
jne
cld
jecxz
jo
sarl
jge
test
jne
ret
movsb
insb
xlat
pop
cmp
clc
xchg
aaa
sub
addr16
pop
push
fisttpl
lock
outsl
xchg
xor
xchg
adc
sbb
dec
mov
outsl
sbb
out
lods
pop
fcomps
inc
and
cmpsb
inc
mov
mov
ret
scas
movsb
popa
push
rolb
sahf
imul
mov
hlt
or
dec
dec
fwait
call
sbb
push
fsubl
mov
fs
daa
andb
jns
fistps
mov
sub
adcb
mov
sub
mov
mov
ljmp
push
in
addr16
ret
inc
test
add
and
mov
int3
sub
sub
clc
ja
cmp
push
push
cwtl
mov
jecxz
ja
fsubr
cltd
push
imul
aad
mov
es
rcr
xorl
loope
fs
jmp
pop
push
xchg
jp
hlt
in
mov
mov
imulb
lea
rcl
xchg
mov
xor
push
jge
mov
push
loop
and
push
xchg
je
adc
je
sub
and
mov
aaa
mov
xchg
nop
cmp
jmp
test
je
clc
divl
test
outsb
lret
push
pop
aad
js
add
jno
adc
aad
and
push
movsb
shl
cmpsl
ret
or
fdiv
xchg
or
or
push
jbe
mov
ja
pop
pusha
xor
adc
gs
es
aam
lock
pop
jp
lret
in
mov
jae
rcrb
and
jle
ds
subb
xchg
cmp
lds
mov
lret
hlt
notl
mov
push
mov
aad
popa
mov
subl
mov
or
das
cmp
jl
adc
xor
hlt
sub
push
inc
jmp
or
shrl
mov
rcll
sub
pop
sbb
lods
dec
fsubs
sub
add
sbb
pop
repz
inc
jmp
or
push
push
xor
mov
leave
pop
or
cmpsl
add
les
add
cli
cmp
xchg
sub
loope
leave
in
out
pop
lods
jg
popa
or
outsl
xor
mov
xchg
outsl
fxch
cmp
mov
jnp
aam
jne
hlt
jp
mov
icebp
or
fwait
sub
je
xchg
add
lock
dec
or
test
or
lcall
mov
scas
out
shr
push
add
xchg
or
in
mov
lea
scas
bnd
dec
push
xchg
insb
es
dec
dec
into
jo
jns
lret
mov
xchg
sbb
pushf
nop
iret
add
nop
in
cwtl
rclb
push
pusha
scas
call
aas
or
test
or
mov
fisttpll
inc
and
adc
test
xchg
xchg
repz
shr
inc
mov
mov
xor
mov
pop
test
inc
movsl
add
sbb
imul
xchg
xchg
push
sub
mov
pop
mov
addb
and
leave
inc
mov
enter
scas
lods
aaa
aam
js
cmpsl
cmp
fldenv
test
mov
and
xor
sub
dec
push
cmp
imul
cmp
rcll
loope
clc
pop
or
xlat
mov
mov
push
push
insl
out
jecxz
push
mov
shrb
mov
jmp
pusha
shrl
push
enter
xor
popf
aas
pop
fisubl
movsb
sub
adc
divl
test
fdivrs
cmp
pop
arpl
loope
pop
mov
in
clc
pop
pop
shll
test
cmpsb
cltd
sbb
sub
aad
pop
test
es
loop
pop
insl
shl
cmp
jne
push
inc
mov
ja
sti
pop
mov
sub
cld
lea
movsb
jmp
jmp
mov
and
jo
insb
ret
jnp
dec
inc
clc
nop
in
addl
jp
adc
call
xorl
jp
dec
xchg
mov
ds
sbb
sarb
pushf
in
rorb
lahf
gs
cmp
push
fnstenv
add
cmc
and
aam
fsubr
pusha
popa
cmpb
lahf
lahf
pop
push
ja
or
repnz
clc
mov
rcr
mov
lea
or
movd
xorl
mov
je
lahf
leave
insb
jb
sub
cmp
jne,pt
lods
push
mov
pop
pop
mov
xor
pop
leave
insl
js
and
inc
aaa
fwait
sbb
andb
sub
in
out
add
jle
mov
loope
lret
mov
ds
jp
ret
xor
sub
movsb
popf
fsubrl
sahf
aam
or
mov
repz
or
fs
push
lds
test
fwait
pop
arpl
mov
fs
and
clc
xchg
jmp
loope
negl
lds
dec
and
cmp
lds
aaa
inc
and
and
xor
scas
push
push
push
xor
xchg
insl
clc
arpl
mov
cmc
lcall
mov
and
cltd
into
fwait
jp
mov
mov
mov
xor
out
jae
add
mov
js
cmp
add
mov
test
push
enter
stos
sub
ret
pop
pop
in
mov
pop
stos
add
imul
sbb
push
inc
lods
loopne
dec
sbb
xor
aam
pop
push
or
repz
mov
jge
and
xchg
outsl
mov
sub
lcall
push
out
cwtl
fidivrl
ja
inc
add
jle
cmpsl
and
insb
xor
cmp
jo
mov
pop
mov
testb
je
and
mov
xrelease
xor
or
loopne
pop
loop
xchg
xchg
inc
ss
fwait
es
out
addr16
jns
out
jae
push
insl
jae
xlat
repz
call
mov
imul
cmp
outsl
mov
inc
mov
std
xchg
in
push
mov
data16
push
out
xchg
adc
and
sbb
fwait
mov
loope
dec
jne
mov
pop
leave
cmp
mov
imul
sarl
pop
and
sahf
jg
mov
lcall
dec
pop
fildl
push
lcall
sbb
mov
xor
push
pcmpeqw
jb
xchg
pop
add
sti
jle
cmc
push
pop
lods
push
fwait
mov
adc
lods
pusha
shll
mov
and
imul
fsts
js
cwtl
fwait
mov
data16
xchg
xchg
dec
pop
es
add
fisubrs
inc
push
lret
add
push
mov
xchg
mov
sub
ret
or
sbb
inc
cmp
pop
mov
je
push
mov
out
sti
insb
mov
cmpsb
xchg
shll
scas
pop
xchg
pop
dec
push
arpl
fucomi
out
sbb
mov
mov
xchg
sbb
xor
and
lea
pop
int3
xchg
sub
shlb
sbb
or
decb
in
lret
ja
add
xor
and
push
pop
and
sti
sbb
sbb
sub
lea
mov
nop
mov
xlat
or
mov
sbb
out
pusha
sub
in
mov
filds
ja
jbe
push
andl
cmp
add
push
mov
stos
lock
flds
mov
fs
int3
fdivr
les
rcrb
andb
xchg
mov
in
jo
lahf
and
cmp
mov
ljmp
and
aas
sub
dec
iret
or
push
shl
xor
add
aam
adc
cmp
fwait
mov
pop
mov
loope
insb
mov
out
push
outsb
sbb
fsubrl
cltd
cmp
mov
out
cs
aas
lcall
mov
mov
pop
lock
push
je,pn
add
jg
cmp
mov
sub
lcall
or
iret
fcmovnbe
push
outsl
push
dec
push
mov
mov
mov
notb
and
xor
shrl
fmuls
lds
sahf
clc
mov
sbb
cmpsb
push
jecxz
loope
sbb
stos
jmp
push
mov
rolb
cli
out
xchg
mov
push
cmp
mov
repz
popa
ss
ret
adc
pop
roll
mov
xchg
dec
push
pop
and
pop
sub
add
stc
out
testb
push
add
xor
jns
sti
mov
fcoms
inc
cld
sub
divl
xor
cld
cmpsl
xchg
fwait
jno
xor
add
adc
scas
mov
pusha
jl
leave
pop
xorl
push
or
push
mov
test
jmpw
or
repnz
push
inc
jb
add
in
push
mov
or
adcb
das
inc
pop
adc
push
insb
xlat
out
cltd
roll
mov
ror
and
pop
inc
pop
xor
in
mov
cmc
out
lods
cmp
xor
lock
cmp
xchg
popl
or
ljmp
pop
or
stc
daa
lods
insb
inc
ret
xor
aad
imul
hlt
mov
addr16
xchg
js
je
pop
dec
adc
xor
test
in
jecxz
ljmp
jmp
pop
lock
cmp
push
lret
mov
js
sub
mov
iret
daa
pop
mov
or
jno
add
loopne
lock
lods
mov
ja
xor
push
inc
popl
cmp
stos
adc
rcrl
aad
movl
sahf
lahf
xor
sbb
or
jnp
in
xchg
dec
jo
push
jb
xchg
xlat
xorb
filds
sar
dec
cltd
mov
push
jbe
cmpsb
mov
loopne
adc
add
lock
mov
adc
push
pop
dec
dec
jns
jno
inc
sub
jns
push
shrb
sbb
pop
xchg
mov
mov
push
push
cmp
sub
inc
popa
sti
pop
mov
fdivrl
jl
pop
push
inc
and
mov
adc
or
test
push
and
fs
pop
dec
lods
call
or
pushf
notl
dec
cmp
xchg
iret
mov
add
hlt
or
popa
sbb
xor
jbe
lds
mov
stc
fisttpll
push
mov
sahf
add
or
icebp
rcrl
push
ffree
dec
and
cltd
insl
inc
mov
add
or
pop
pop
xchg
daa
pop
jnp
add
nop
push
fsub
xor
lds
jo
das
or
push
sbb
push
mov
sub
push
loopne
std
lret
inc
xor
push
and
push
iret
sbb
enter
dec
inc
adc
push
js
push
inc
fiaddl
cmp
jmp
pusha
pop
in
and
or
rcrb
and
dec
jo
push
in
jae
cmp
xor
sbb
fstl
test
popf
popa
subb
pusha
pop
outsb
xor
or
push
inc
or
sub
sti
lcall
jp
sub
loop
cs
imul
jl
aaa
pusha
dec
popa
xchg
dec
out
sbb
pop
cmc
pop
inc
fwait
repz
pop
aad
test
outsl
mov
sbb
cwtl
lret
out
jb
je
pop
pop
movsb
cmp
scas
or
push
add
repz
or
fadds
jno
add
lcall
outsb
or
sbb
inc
cld
lods
gs
rcrl
push
stos
cmp
bound
cmp
out
jno
or
and
sub
adc
scas
mov
ljmp
and
push
pop
fdivl
movsb
rclb
dec
pop
jns
add
out
and
in
or
enter
jle
out
repnz
xchg
add
popa
loope
fidivrs
xchg
adc
adc
push
idiv
test
ja
inc
fmuls
xchg
lcall
mov
add
dec
and
push
mov
sbb
push
cmpsb
jns
pop
jge
pop
lret
out
adc
adc
leave
adc
lret
sub
xchg
inc
cmpsl
pop
js
sub
data16
push
jns
lret
add
and
int
lret
lods
mov
cli
xlat
push
fmuls
and
or
ja
push
std
lea
add
in
stos
lods
call
repnz
push
pop
loope
jecxz
cmp
stos
xlat
mov
add
pop
popa
aam
insl
jne
ficoms
xchg
leave
rcrb
push
sahf
inc
repz
inc
ficoml
std
mov
dec
pop
test
lret
test
bound
scas
push
mov
fisttpl
sarb
fmuls
jno
in
sarl
mov
hlt
jae
movsl
pop
in
pop
test
cwtl
inc
push
inc
decb
mov
fisttps
movsb
mov
mov
cwtl
jno
aas
inc
sub
pop
pop
dec
sub
and
cs
mov
inc
push
addr16
cs
mov
leave
aaa
outsl
mov
dec
fs
in
push
mov
std
jne
fcomip
inc
fnstcw
dec
in
push
xchg
adc
push
xchg
out
sub
xlat
add
movsl
or
jge
shll
cmp
popf
and
gs
imul
fdivrl
aam
ror
mov
pushf
jnp
outsl
xor
cltd
add
inc
outsb
sub
adc
add
mov
push
xor
ss
sbb
loopne
push
insl
test
scas
xlat
pushf
lock
sbb
sahf
xchg
pusha
mov
cmp
lock
ss
push
lret
add
and
adc
shll
aam
inc
fistps
dec
mov
xor
jmp
and
jmp
mov
mov
imul
cmp
je
sbbb
std
inc
stos
push
xchg
mov
xchg
movsl
js
sub
xor
popf
fldenv
mov
push
pop
xor
mov
mov
je
loopne
rcll
lock
repnz
or
pop
add
cltd
cmpsb
mov
adc
add
clc
movsb
cmpb
repnz
mov
sub
decl
or
call
mov
fsubl
fldt
jb
pop
icebp
sub
clc
mov
in
inc
push
retw
xor
stc
data16
je
dec
jbe
pop
mov
lods
loope
fwait
push
paddd
xlat
repz
pop
or
imul
push
mov
lret
test
lea
insl
dec
iret
sbb
or
loopne
pop
push
cmc
xchg
outsb
ret
icebp
enter
loope
xor
xchg
xchg
movsb
mov
mov
lea
mov
insb
xor
cmpsb
sbb
pop
or
cmpb
mov
repz
movsb
out
jo
jge
pop
repz
fwait
je
cltd
test
insl
addr16
ljmp
les
dec
in
pop
and
push
sahf
xchg
outsb
and
xchg
mov
push
imul
lods
push
add
aas
lock
dec
fs
xchg
mov
pop
inc
mov
sub
xchg
fs
leave
xchg
loop
divl
xor
cmpsb
xchg
inc
push
sahf
jnp
sbb
movb
inc
imul
loopne
into
and
rorl
mov
mov
addr16
lahf
pop
dec
popa
and
mov
pop
push
repnz
mov
shll
push
jle
lret
hlt
test
sbb
pop
sub
add
loop
and
inc
jo
mov
aaa
insb
gs
pop
sub
call
inc
cmpsb
sub
aaa
push
into
or
stos
pop
adc
mov
sbb
test
and
pshufw
aad
sbb
jecxz
in
xchg
pop
dec
mov
stos
ljmp
outsl
xor
or
mov
outsl
or
adc
icebp
pop
sbb
iret
push
push
insl
or
pushf
sbb
mov
mov
lods
sbb
jb
push
in
fwait
mov
les
mov
and
inc
pop
sub
sub
movsl
movsl
sub
jle
sbb
out
int3
clc
into
push
mov
sbb
dec
aam
cs
adc
push
mov
lcall
pop
stos
je
iret
lret
mov
sbb
movsb
movsl
mov
ret
mov
or
pop
fs
xchg
test
cmp
jl
pushf
fistpl
pushf
fwait
in
test
in
jle
aad
in
iret
cmc
call
and
push
flds
sbb
negl
jmp
arpl
mov
mov
xchg
pushf
nop
mov
jns
mov
insl
in
mov
scas
ficomps
fiadds
and
add
push
dec
jns
xchg
loope
insl
push
cli
ds
int3
jge,pt
es
faddp
loop
shrl
inc
fimull
lret
fnstsw
scas
sarl
movsl
mov
xchg
mov
pop
xchg
jns
and
mov
outsb
je
sub
call
in
outsl
outsl
mov
repz
or
push
in
xlat
xor
adc
adc
sub
cmc
push
adc
call
jns
mov
orl
cmp
adc
mov
and
push
out
lods
in
pop
push
js
or
sub
mov
push
stos
push
adc
xchg
pop
ret
push
mov
mov
leave
jnp
mov
les
or
xor
pop
cli
mov
movb
mov
mov
add
inc
inc
lods
xchg
insl
jns
inc
testb
or
shll
movl
icebp
test
mov
jb
mov
adc
jmp
shlb
add
inc
test
scas
mov
xor
mov
push
cmp
test
mov
ss
jo
inc
sarb
cmp
es
dec
inc
xor
fdivrs
dec
stos
pop
das
pop
outsl
or
fstpl
test
jmp
mov
mov
fildl
in
inc
sarl
dec
and
cmp
mov
inc
push
xchg
push
adc
fsubrl
push
fimuls
mov
or
lods
add
dec
stos
xlat
or
cmp
inc
out
xor
mov
gs
inc
outsb
add
shr
cli
fdivr
push
daa
mov
les
testb
sub
arpl
adc
cmpb
jo
repnz
fistpl
pop
mov
test
mov
xchg
movb
loop
sub
sub
insb
imul
xlat
cli
sbb
jg
mov
out
pushf
xor
xchg
pop
jo
ret
inc
pop
xchg
fnstenv
mov
xor
inc
mov
inc
loope
xchg
pop
push
push
sarb
lret
rcll
pop
nop
ljmp
mov
sub
mov
sahf
pop
rcrl
adc
mov
xchg
lret
xchg
or
ja
inc
adc
xchg
push
fcmovbe
mov
adc
hlt
fbld
pop
int
inc
push
les
jmp
cmc
sti
adc
xchg
push
test
inc
push
inc
push
ret
divl
mov
and
sbb
test
sbbl
mov
xor
into
cltd
jecxz
outsl
daa
in
sub
or
pop
fcomps
nop
repnz
int3
out
push
das
pusha
stc
icebp
idivl
mov
jns
je
je
inc
jb
adc
lahf
aam
int
fwait
aad
scas
and
lods
cltd
rorl
fadd
push
insl
in
sti
cld
iret
lahf
mov
aas
add
loop
nop
mulb
leave
ss
in
daa
xchg
sub
mov
lea
push
loope
lret
xchg
add
inc
fstl
push
sar
or
mov
dec
loopne
mov
test
cmp
inc
xchg
dec
and
inc
jae
pop
cltd
adc
das
cltd
jns
in
mov
jo
inc
popf
sub
sub
xor
flds
daa
mov
jmp
es
sub
xor
fsubr
inc
cmpsl
add
andl
inc
dec
icebp
std
call
pop
dec
fxam
and
mov
add
xchg
cmc
xchg
jg
imul
lret
jmp
inc
sbbl
shll
jmp
dec
cmp
das
or
mov
in
or
out
aaa
push
lods
scas
test
inc
popa
mov
repnz
add
sbb
push
xchg
push
lods
mov
sub
insb
aaa
addl
loope,pt
pop
aam
xchg
inc
cmp
js
add
arpl
sarb
pop
sahf
imul
xchg
ret
add
inc
sbb
cmp
insl
and
dec
lock
xadd
add
out
repnz
roll
lods
jmp
es
loop
jl
jecxz
jne
adc
mov
stos
divb
or
jns
adc
mov
loop
ljmp
and
push
subb
dec
insb
inc
into
pop
xorl
das
xchg
insb
inc
aaa
out
sub
test
loopne
inc
pop
ds
mov
daa
cwtl
test
xchg
enter
adc
xor
dec
xor
push
shlb
xchg
divl
in
adc
pop
pop
sbb
loop
cmp
jnp
jns
daa
stc
mov
aam
dec
add
fs
out
sub
enter
sub
cmp
or
lock
lods
movl
jle
pop
xchg
fstl
lods
roll
or
in
ss
lret
push
dec
pop
inc
pop
movsb
loop
lahf
mov
sub
mov
add
mov
mov
cmp
xor
xchg
fisubrs
jg
xchg
mov
andl
dec
mov
inc
mov
pop
xor
clc
xchg
sbb
adc
xor
or
imul
mul
fstpt
test
leave
push
xor
aam
mov
cmp
mov
push
mov
pop
addb
test
and
pop
xor
hlt
or
mov
mov
aas
xor
cmp
aaa
jne
sbb
hlt
ret
xchg
inc
inc
fiadds
cld
jb
adc
cmp
jg
mov
jnp
bound
scas
sbb
xchg
cmp
mov
push
imul
push
not
call
insb
enter
and
loop
dec
lods
stc
inc
pop
int3
imul
aad
or
mov
insb
pop
adc
cltd
cmp
push
int
fildl
inc
push
mov
push
adc
or
mov
mov
push
pop
addr16
inc
loopne
and
mov
out
xchg
lods
dec
or
and
call
sub
testb
mulb
pop
jo
push
test
mov
roll
in
jae
mov
inc
dec
or
cmc
xchg
xchg
xorl
fcomi
in
fcoms
pop
dec
movsb
pop
xchg
test
test
js
jle
xor
and
xchg
sbb
sbb
add
push
faddl
adc
adc
inc
ret
cmpsb
inc
mov
xchg
loope
jecxz
mov
xor
orl
mov
sub
jae
dec
jle
xchg
adc
pop
inc
dec
ljmp
lods
inc
cld
sbb
and
push
fisubs
pop
shlb
test
scas
sub
aas
lahf
cmpsl
xchg
pop
mov
dec
cmc
jno
cld
pop
popf
mov
lods
or
test
popa
push
into
jg
push
sub
mov
push
std
xor
jge
fstl
mov
adc
pop
add
xorb
xchg
add
dec
decl
and
test
aas
loop
pushl
movsb
gs
ret
jmp
aam
leave
or
sbb
ss
scas
push
out
out
pop
xor
lcall
in
sub
mov
pop
xchg
adc
jle
addr16
mov
pop
sti
push
cmp
icebp
mov
mull
dec
addr16
dec
mov
in
pop
cli
fidivs
mov
jo
and
inc
int3
movsl
dec
sub
xchg
leave
fnstcw
or
xchg
lods
inc
fdivs
xchg
mov
xchg
xchg
and
fnstenv
mov
je
mov
add
mov
jb
inc
test
jmp
mov
push
lret
test
push
jne
jmp
test
sbb
inc
dec
and
cmp
andl
adc
shrl
and
push
mov
jmp
lret
out
imul
pop
sti
out
xor
mov
pop
mov
clc
pop
sbb
jbe
mov
jns
add
add
clc
cli
add
cmpsl
jmp
jle
fs
fisttpl
daa
add
arpl
inc
inc
inc
daa
lds
and
ja
and
mov
cltd
mov
dec
inc
add
pop
loope
repnz
ficomps
pop
jns
dec
paddb
fs
in
repz
dec
xchg
rcl
mov
loop
imul
mov
push
mov
pushf
add
cwtl
pusha
gs
rclb
push
adc
push
jg
test
adcl
out
ja
sub
loop
outsl
mov
inc
cltd
pop
in
inc
nop
loopne
mov
sbb
jae
push
xor
sahf
repnz
dec
fcomps
cmp
or
and
mov
jmp
repnz
xor
jle
test
daa
fs
lret
lcall
aaa
lahf
cmp
nop
insb
repz
inc
inc
cmp
sub
push
scas
mov
sub
les
push
push
repnz
xor
mov
lds
je
into
adc
popf
xlat
cs
inc
jo
cmp
lods
mov
les
lods
mov
test
insb
jecxz
mov
movsb
add
push
daa
mov
pusha
and
cli
addr16
xor
prefetch
movsl
repz
lock
dec
cmp
outsb
filds
xor
ljmp
test
push
jmp
xchg
jl
adc
mov
rol
mov
lds
mov
xor
mov
adcl
jp
xor
sbb
push
and
into
jp
lock
icebp
pop
ljmp
mov
mov
sbb
sarb
pop
sub
in
stc
es
sti
repnz
mov
sbb
push
lods
inc
lret
dec
sahf
xchg
xor
or
lods
cwtl
ret
sahf
iret
rorb
sbb
ljmp
mov
shlb
out
mov
fadd
sahf
mov
mov
dec
mov
cwtl
mov
push
ret
jecxz
sbb
ljmp
notb
dec
into
dec
cmp
ljmp
adc
mov
xor
stc
clc
or
aad
sbb
dec
lods
fwait
shll
sub
push
fsts
aad
mov
xlat
mov
jns
mov
sub
jo
jecxz
fs
adc
arpl
movq
and
pop
aaa
sbb
fstpl
jb
repnz
xchg
stos
jae
push
adcl
xor
fldl
in
mov
xchg
scas
and
add
pop
lret
rcrl
test
mov
xchg
js
int
push
adc
and
sub
and
lea
lahf
mov
sti
and
scas
jns
add
in
test
repz
rcll
test
mov
mov
dec
xchg
jno
cmp
and
ljmp
sub
loopne
adc
mov
xchg
in
daa
lods
fildl
push
scas
movsb
cmc
mov
out
outsb
push
sbb
dec
inc
repz
sbb
cmp
dec
filds
cmp
push
lret
iret
sti
std
cmpsl
into
mov
inc
adc
fidivs
pusha
push
xlat
jno
imul
and
fisubrs
int3
fiadds
pop
test
int
jmp
nop
arpl
inc
das
data16
sarl
mov
adc
int3
and
pmaddwd
lret
fcomp
jp
fwait
movsl
pop
leave
mov
mov
jno
ljmp
test
push
arpl
pmaxub
cmc
lret
ja
lea
insl
in
fsubl
inc
jno
jg
sub
stos
xchg
scas
adc
dec
and
sbb
cmpsl
pop
in
sbb
mov
outsl
add
mov
sbb
and
icebp
push
sahf
cli
xor
xlat
mov
push
rolb
xor
aaa
xor
ret
cwtl
test
insl
mov
in
xorb
cmp
or
push
out
xor
mov
into
inc
push
mov
adc
rclb
or
stos
jnp
cmpsb
dec
jp
pop
imul
sub
test
ret
gs
push
sbb
lods
shrb
cmp
mov
imul
pop
loopne
and
pop
fsubl
mov
fwait
mov
ficomps
adc
cmp
cltd
jl
popf
fisubs
and
dec
insb
jmp
lret
std
mov
shr
bound
mov
mov
dec
xlat
popf
cwtl
movsl
mov
scas
arpl
outsl
into
frstor
jne
leave
lds
jecxz
lret
inc
adc
aaa
jns
fcmovbe
outsl
lods
mov
pop
cli
and
mov
dec
stos
inc
and
in
or
and
leave
fwait
mov
icebp
xor
fisubrl
stc
mov
mov
stos
ret
cmp
jl
sbb
mov
lahf
and
inc
pop
adc
popf
cmp
fwait
outsl
ffree
mov
sti
dec
fs
xor
outsb
inc
push
xchg
mov
adc
sub
push
jp
jne
mov
lds
daa
sbb
push
movsb
popa
or
sbb
ret
adc
lcall
stos
xor
pop
xchg
bound
stc
cmc
jae
cmp
push
adc
test
push
jno
cmc
stos
es
dec
pop
mov
js
fwait
pusha
xchg
or
sub
andb
push
mov
or
sub
in
aad
and
or
sti
lods
jnp
inc
fildll
sbb
dec
inc
dec
sub
jge
add
ljmp
jp
push
outsb
jmp
std
cltd
cmp
stos
test
push
sti
rorb
push
fs
addr16
jecxz
sub
dec
dec
xor
lret
shl
sub
movsb
push
adc
fbstp
ja
mov
or
or
inc
gs
or
arpl
cmc
and
ret
mov
fdiv
pop
pop
jbe
xor
repz
mov
lret
test
inc
out
dec
adc
dec
cmp
int
pushf
or
hlt
ljmp
scas
inc
repnz
or
cmp
fwait
mov
add
loopne
lock
mov
push
fmull
mov
lock
sub
inc
call
ret
cld
je
xchg
aad
sbb
scas
pop
lahf
add
nop
fstl
cmp
cmp
outsl
mov
sbb
and
fmuls
push
leave
xchg
repnz
mov
push
div
xchg
scas
lret
out
cmpsl
into
lods
push
xor
push
jecxz
outsb
add
roll
out
fistpl
xor
stos
dec
lret
rep
leave
xor
sbb
adc
scas
popf
dec
ret
xchg
lahf
jnp
je
aaa
push
pop
mov
mov
shll
mov
add
xchg
rorb
fdivl
scas
pop
jae
mov
call
sub
outsb
mov
lds
sub
jbe
movsb
loopne
jnp
and
sub
cwtl
jl
xchg
enter
test
stos
js
scas
loop
stc
dec
lds
push
mov
les
subl
movsb
add
in
sub
cmp
scas
xchg
pop
cmp
or
mov
icebp
in
sub
nop
sub
dec
jmp
sub
dec
sub
add
push
cmp
dec
bound
aas
jp
les
lods
xchg
push
add
repz
lahf
xor
mov
test
sub
dec
sbb
xor
inc
shrl
mov
and
inc
scas
imul
xchg
push
loopne
aam
jle
sub
mov
push
into
and
pop
enter
stos
addr16
add
clc
mov
and
sbb
sbb
mov
mov
aam
inc
popf
je
jp
jl
cmp
das
sahf
ficoml
hlt
dec
inc
mov
pop
out
lds
ret
mov
push
mov
imul
pop
xorl
pop
jno
clc
push
mov
popa
mov
mov
adcb
psubb
iret
shrl
mov
pop
adc
inc
xchg
dec
add
enter
clc
icebp
mov
cmpsb
out
into
out
in
inc
inc
int3
or
mov
cmp
addr16
mov
call
iret
test
inc
xor
mov
arpl
adc
mov
sub
jo
xor
and
sub
fcomip
pop
dec
je
int
jo
mov
nop
cli
outsl
repz
sub
push
or
aad
insb
inc
adc
aad
shlb
push
jne
and
test
xor
mov
sarl
mov
fimull
mov
adc
ret
push
push
dec
jnp
das
movsb
xor
in
outsb
testb
push
sti
lret
shlb
rorb
xor
dec
or
arpl
sub
mov
mov
lret
push
cli
fstps
jle
mov
jmp
pop
dec
inc
shlb
sbbb
sub
rcl
mov
cmpsb
push
lret
mov
fisubrs
cmpsl
test
inc
dec
or
push
jns
sub
cmp
in
cmpsl
adc
xchg
sub
mov
mov
fs
mov
pop
dec
mov
sbb
push
test
or
decl
sbb
les
lcall
and
inc
cli
sub
out
adc
and
ds
sahf
xchg
pop
and
push
jecxz
js
insb
aaa
popa
mov
add
das
dec
sahf
jae,pt
loopne
xor
dec
out
xor
stos
xchg
je
xor
invd
test
jmp
fimuls
and
inc
xchg
in
add
or
pop
cmp
mov
jnp
arpl
les
mov
fnstsw
js
sbb
lea
fmull
rcrl
sbb
mov
add
xor
repz
jle
sub
pop
dec
xchg
lcall
clc
das
shrb
popa
imul
pushf
push
inc
adc
movsb
cmp
mov
fistl
or
dec
mov
and
inc
jge
jmp
into
mov
push
or
push
xchg
into
xor
das
lcall
aaa
add
test
mov
xchg
jp
and
cmpsb
mov
popa
daa
mov
adc
notl
roll
adc
movsb
or
adc
add
pop
mov
xorb
mov
push
xor
push
sbb
das
mov
xor
fsub
sbb
xchg
sub
pop
adc
sbb
movsb
push
in
int
xor
xchg
cmp
mov
dec
jno,pn
jmp
popf
xchg
aam
out
xchg
cltd
sub
movsb
push
test
push
sub
lcall
inc
mov
jmp
arpl
stc
ljmp
xchg
dec
divl
inc
xchg
je
push
or
xor
inc
pop
jae
ljmp
jp
ja
sbb
mov
jg
jnp
aas
mov
jno
inc
imul
cmpsb
push
and
mov
les
xor
cltd
jge
addr16
js
out
xchg
dec
mov
sbb
pop
cmc
mov
mov
mov
arpl
mov
movsl
js
mov
lret
movsl
test
jns
cmpsb
mov
lock
xchg
push
mov
jno
in
xchg
adc
jmp
insb
jl
dec
adc
ret
jnp
rcrl
jg
std
gs
fimuls
jg
cmp
sahf
in
xor
cmp
pusha
lret
pop
xor
pop
cmp
dec
mov
lahf
jmp
sbb
vsubps
push
inc
fwait
mov
and
rclb
mov
std
sbb
in
sub
sbb
and
out
push
jo
cwtl
add
dec
sbb
xchg
dec
inc
out
add
aam
inc
daa
dec
mov
loop
dec
pusha
jbe
int3
pop
stos
jae
jp
or
imul
sbb
push
les
xor
sub
cmpsl
out
fwait
test
add
xchg
adc
dec
push
mov
ret
aas
mov
repz
xchg
add
mov
dec
std
xchg
cmp
inc
mov
add
cmpsl
xchg
pop
fiadds
mov
loop
popf
sub
cmp
cld
sbb
fs
add
push
int3
pop
test
clc
jecxz
cmp
repz
mov
dec
mov
cwtl
lods
mov
loopne
cmp
out
xchg
lea
aaa
xchg
insl
dec
pop
imul
sbb
pushf
mov
sub
decl
scas
in
arpl
test
rol
test
pop
adc
adc
and
mov
mov
add
mov
int3
adc
dec
sub
mov
out
push
and
bound
pop
pop
xchg
ret
jo
and
xor
inc
pop
idivb
mov
jecxz
xlat
add
mov
aam
hlt
popa
sub
dec
jl
mov
add
scas
lods
fdivrl
stc
add
lret
cmp
lea
mov
lret
mov
loope
ficomps
aaa
dec
cmc
dec
jmp
add
mov
lods
dec
repnz
sub
pop
fnstenv
mov
xchg
popf
cli
cmp
dec
cmp
subl
stc
popa
rcrl
das
cmc
cmovno
push
aaa
jns
iret
or
push
xor
jo
cmpsb
or
int
das
mov
cmp
push
xchg
lcall
jne
lret
lock
mov
lods
rcll
push
sbb
jo
adc
gs
testb
sub
pop
lods
rorl
push
gs
sti
pop
lret
sbb
xchg
cltd
and
sbb
jbe
pop
fbld
sbb
or
mov
fs
loop
adc
outsl
xchg
mov
xlat
dec
dec
pushf
fsubs
sub
outsl
sbb
cmp
test
jnp
adc
rcl
pushf
imul
sbb
mov
in
pop
in
ficoml
jns
or
into
loope
cmc
mov
xchg
cmp
imul
jo
inc
test
div
push
daa
negb
subl
adc
scas
adc
ds
ss
jge
pushf
mov
mov
xchg
movsl
mov
jb
inc
js
jl
jae
mov
inc
andb
adc
mov
push
sub
xor
into
mov
sub
arpl
ret
loopne
out
sub
xchg
mov
ljmp
push
bound
push
inc
adc
dec
mov
dec
test
pop
je
inc
inc
shrl
lret
and
push
dec
orl
clc
push
add
xchg
jmp
jg
cmp
repz
imul
pop
or
jne
push
out
jmp
out
loop
ds
je
sbb
add
dec
aaa
or
and
test
push
aad
dec
mov
xchg
loop
sti
test
xchg
fidivl
push
sahf
ja
mov
pusha
dec
stos
xor
inc
mov
out
sub
lock
ret
jecxz
gs
lds
inc
lds
in
pushf
dec
ret
or
cltd
jge
into
insl
lea
sub
mov
mov
lcall
jecxz
mov
add
std
xchg
xor
pop
pop
mov
mov
mov
out
test
push
outsb
dec
fnsave
jne
jbe
and
insb
ds
mov
negb
jbe
pop
sub
bound
aas
outsl
pop
adc
push
cmp
pop
insb
jns
sahf
pop
jnp
or
dec
xor
pushf
xorl
js
inc
les
dec
mov
add
pop
inc
jb
and
fsubr
cmc
mov
jbe
inc
ja
popf
cmp
dec
shlb
add
loopne
mov
jl
xor
or
sahf
xchg
cmp
jl
adc
outsb
shlb
and
js
fcompl
inc
dec
push
pop
in
xchg
mov
pop
cmp
out
pop
dec
and
ret
xor
test
mov
xor
sub
ljmp
mov
sub
imul
outsb
and
sbb
sub
cltd
and
xchg
mov
int3
adc
or
sub
in
jmp
cmp
sbb
or
aaa
mov
jg
cmp
push
fidivl
mov
jb
leave
lcall
xor
enter
xchg
xor
jl
adc
and
sbb
testl
mov
push
leave
dec
or
sti
shll
and
lds
pop
add
leave
pop
mov
mov
mov
std
call
ret
mov
int3
imul
inc
fadds
int
cmp
jns
js
repz
add
mov
daa
add
and
fwait
lock
cmp
ds
les
xor
rcll
pop
fidivl
shlb
and
addb
jb
out
dec
push
push
test
test
in
test
and
push
nop
fidivrl
xlat
lods
daa
test
pop
in
in
js
sbb
sbb
xor
ljmp
imul
mov
fcomps
fucomip
sub
lahf
leave
adc
out
jnp
dec
out
outsl
jmp
xchg
cmp
pop
and
vpslld
cmp
fcmovbe
call
insl
aas
fs
mov
push
fstpl
mov
dec
loop
or
push
push
in
fimuls
popf
mov
dec
mov
lods
ljmp
push
xor
out
test
xor
pop
aas
jne
les
imul
mov
pop
mov
sahf
add
testb
and
popf
out
js
sbb
xchg
insl
mov
lcall
sbb
dec
jbe
in
push
rolb
in
lret
fdiv
adcb
add
lcall
fisubs
enter
rol
pop
and
jo
imull
enter
imul
push
xchg
mov
lods
xor
sub
fcomps
ds
daa
xor
fbstp
lea
cmp
shrb
xchg
xor
bound
sbb
jle
or
lds
pop
into
push
icebp
dec
adc
scas
mov
insl
andb
pop
das
mov
jge
dec
adc
jbe
aad
rol
inc
mov
rclb
adc
repz
mov
mov
ja
repnz
repz
add
add
jb
xor
je
xrelease
ds
fldl
add
dec
stos
cmp
adc
jl
lods
mov
sahf
jbe
les
add
xchg
subb
iret
jnp
fildll
es
addl
push
xchg
adc
add
mov
lods
iret
inc
out
or
pop
adc
std
push
bound
jle
test
ja
xor
cmp
jno
mov
clc
mov
mov
lods
ds
push
xchg
rolb
test
or
add
dec
sbb
mov
pop
pop
jne
xor
and
inc
sahf
push
in
dec
push
daa
push
or
loopne
and
inc
inc
ret
out
cmpsb
loop
jbe
loope
pop
sub
mov
push
inc
pop
imul
movsl
xchg
or
mov
les
mov
gs
push
pop
add
and
call
push
adc
xchg
or
cmpsb
pop
test
sub
pop
fiaddl
mov
add
flds
sbb
push
pop
sbb
arpl
out
test
mov
scas
xchg
sub
mov
loopne
push
ret
mov
test
pop
and
inc
stos
jmp
xor
jno
hlt
test
adc
sub
mov
mov
add
jno
repnz
xchg
add
data16
into
dec
adc
pop
pop
ja
push
jmp
pop
push
orl
fdivr
cmpl
pop
je
push
sub
sbb
test
ret
hlt
pop
mov
test
jl
cmp
adc
loope
inc
and
xchg
das
lret
or
lcall
idiv
js
stos
or
xor
jno
xchg
sub
add
leave
test
inc
cmpsb
in
push
lods
fidivrl
enter
pop
cli
test
sbb
add
cli
nop
dec
aaa
in
fld
sub
lcall
in
dec
mov
into
dec
leave
adc
enter
add
inc
add
add
enter
cmp
mov
lret
adc
ja
aad
cmc
lret
je,pt
push
push
iret
bound
and
pop
shrl
in
repnz
sbb
pop
jmp
je
jg
rcrl
cmp
stc
jp
or
push
inc
mov
cmpsl
pop
fisubrl
iret
pop
jmp
imul
fcoml
jbe
xchg
inc
sbb
notb
ss
pop
daa
cmpl
clc
stos
stc
push
jne
repnz
repz
adc
adcl
mov
int3
pop
add
jle
jmp
add
lods
pop
imul
cmp
adc
sub
imul
cs
cmpsl
dec
std
mov
xchg
sub
mov
stc
fmuls
or
dec
xchg
jne
push
adc
jge
pop
fidivrl
fadd
fstpl
jae
mov
cmp
sbb
sar
jmp
sub
cmp
ret
cli
shlb
mov
sbb
sbb
js
mov
lods
data16
mov
cltd
test
cmpsb
pop
es
rol
sub
aaa
mov
addb
pop
mov
jnp
jl
mov
jmp
dec
fimuls
mov
cwtl
mov
jne
icebp
cmpsl
adc
repnz
or
ljmp
lea
shrl
cwtl
lret
stc
sub
out
cmp
test
inc
cmp
fdiv
lods
jge
repnz
cmc
jns
inc
and
dec
pop
add
out
jnp
xchg
mov
pop
pop
scas
test
jmp
cld
jecxz
outsb
bnd
jns
dec
sbb
out
outsb
rcr
xchg
adc
adc
xchg
adc
das
sub
dec
loopne
cmp
add
xor
test
ja
pop
je
inc
in
les
popa
test
aaa
popa
dec
aad
inc
mov
mov
push
ret
xor
cmp
jnp
test
es
lea
or
stc
sti
or
dec
mov
add
les
pop
into
ja
xlat
inc
push
add
add
scas
scas
xor
add
xor
jg
mov
popa
jb
ror
push
mov
mov
jle
fstpl
sbb
pushl
xchg
jbe
and
les
sub
push
jne
or
into
xor
adc
xchg
and
add
pop
or
popa
mov
je
scas
scas
test
pop
push
fcom
test
idiv
push
pop
test
lahf
pop
flds
sarl
lea
insb
lods
mov
add
testl
adc
pop
and
push
xchg
and
call
jmp
add
pusha
and
pop
sub
dec
sahf
cmp
mov
mov
xchg
and
cmp
cmpb
cmp
pop
sbb
mov
pop
mov
push
imul
jb
push
cmpb
sahf
out
sub
and
jle
mov
adc
iret
add
add
cs
or
adc
push
and
lcall
add
call
enter
dec
divl
out
mov
add
inc
jne
inc
adcl
mov
pop
dec
lods
push
push
popf
nop
fistl
in
repnz
shlb
inc
mov
leave
add
imul
xor
sub
shrl
pushf
fstpt
mov
xchg
xorb
mov
test
shrl
fiadds
dec
xchg
mov
popf
mov
mov
mov
enterw
inc
xchg
pop
and
or
popf
pop
outsl
add
push
iret
mov
rolb
pop
lahf
xchg
fscale
and
cs
sbb
jo
int
iret
xor
inc
movsl
and
outsb
sti
mov
mov
mov
dec
sbb
int3
inc
sub
fstps
repz
inc
push
sub
mov
lods
and
lret
test
push
jg
js
aas
popf
mov
cmp
cmp
cmpsl
es
out
sarb
dec
in
jne
shlb
gs
pop
lods
in
cmp
push
mov
cmp
adc
fidivs
sbb
pop
popa
xchg
rolb
push
divl
loope
adc
call
hlt
mov
sbb
ljmp
sbb
add
jne
addr16
daa
xchg
dec
inc
out
pop
or
mov
dec
add
adc
inc
mov
push
cld
mov
xor
data16
dec
test
aam
in
shll
lods
subb
push
sbb
and
dec
jb
loop
int3
les
push
sub
outsb
stos
cmpsl
sub
push
or
sbb
mov
cmpsb
and
sub
js
dec
sub
jne
idivl
sbb
add
arpl
les
test
mov
adc
dec
enter
popf
pop
sub
add
in
andl
jae
mov
shlb
lcall
push
insb
mov
xor
push
adc
fiaddl
adc
loop
mov
insl
mov
push
lret
addr16
dec
and
mov
sti
jbe
dec
mov
insl
pop
inc
and
inc
cmp
or
stc
adc
popl
mov
rclb
cmp
and
mov
cmp
call
and
add
jne
cmpl
mov
ret
lods
les
aad
clc
sub
sbb
sub
popa
cwtl
cmc
push
je
dec
fldl
mov
push
data16
inc
dec
xor
pop
jae
aam
push
xor
sub
roll
enter
jecxz
mov
jbe
sbb
ret
pop
mov
dec
adc
xor
ds
xor
push
lea
daa
nop
mov
inc
ret
mov
stos
in
push
cmpsb
adc
cmpsl
insb
push
stos
int
or
inc
inc
cmp
loop
jl
add
loopne
cmp
sbb
ss
cld
cmp
jmp
ss
jmp
xchg
jne
cs
hlt
xor
shll
loope
and
test
ljmp
jne
mov
pop
js
adc
pop
je
cmpsl
ret
and
in
push
das
jo
mov
pushf
outsl
sti
int3
js
out
pop
decb
dec
inc
mov
in
negb
leave
inc
add
add
psubq
mov
or
inc
xor
cmp
repz
jle
xor
push
pushf
inc
push
xor
xor
lock
xlat
rorb
mov
stos
sbb
push
sbb
lahf
int
repz
cmpsb
mov
jmp
pop
add
dec
pshufw
imul
mov
sbb
or
xor
and
jnp
js
add
cmpsb
mov
xor
sti
xlat
xor
xchg
mov
outsb
mov
or
jo
out
call
pop
cmp
movb
lret
pushf
jmp
add
jl
or
aad
fnstcw
push
add
pop
dec
popf
jne
mov
fs
aad
sub
rclb
xchg
cmp
jecxz
inc
dec
and
lea
fdivs
xor
jg
fdivrl
sbb
lea
shll
pop
pop
push
iret
sub
or
push
fwait
add
jne
ret
shll
in
scas
test
or
out
pushf
ret
std
cmp
sbb
sarb
xchg
adcl
push
orb
mov
inc
stc
mov
int
cld
add
orb
cwtl
imull
sub
xor
loop
mov
stos
mov
clc
or
ljmp
dec
sub
mov
lea
setne
dec
fcmovu
gs
iret
and
dec
stos
sub
andb
sarb
sub
mov
xchg
sub
xchg
lods
xor
popa
outsl
pop
repz
pop
dec
std
pop
ret
in
jae
in
or
jge
js
ds
cmp
mov
xor
adc
or
jecxz
sahf
lea
daa
arpl
xor
or
fldl
repz
mov
dec
mov
cmpsl
out
lret
iret
scas
jo
fimuls
push
sbb
pop
cs
daa
mov
pusha
xlat
mov
jle
fnstcw
mov
scas
iret
cli
jge
xlat
or
ficoml
mov
sub
dec
cmp
ss
xchg
dec
insl
insb
cli
ja
shl
adc
mov
inc
lret
imul
shlb
shr
push
nop
daa
stc
sahf
pop
and
fs
popf
adc
cmp
ret
xor
scas
inc
lea
mov
xchg
sub
push
cmp
mov
imul
test
mov
sahf
jae
mov
dec
test
jo
hlt
sub
loope
enter
xchg
xor
in
push
aad
jle
call
adc
sti
addr16
rep
fdivs
sti
daa
sbb
outsb
gs
mov
pop
in
daa
jo
repnz
lret
pop
iret
pushl
add
cmp
int
aaa
cwtl
cltd
inc
in
inc
pop
test
js
enter
add
int3
pusha
dec
rorb
subb
xor
or
and
sub
test
push
jbe
fwait
mov
inc
mov
dec
mov
add
fisttps
sub
cmpsb
add
dec
push
test
fsubrs
stos
sbb
in
mov
mov
js
aad
insb
dec
arpl
xor
inc
arpl
loopne
sahf
cmp
shrl
adc
push
jns
movsb
iret
bound
or
repz
add
stos
cmpsb
lods
dec
fs
sbb
pop
dec
push
xor
popa
out
mov
test
imul
pop
rorl
fs
mov
push
lret
data16
mov
sub
or
ret
scas
push
xchg
data16
jo
andl
dec
shrb
xchg
lods
sbb
pushf
sub
pop
ret
insl
lret
pop
movsw
lock
and
ja
loop
pop
arpl
je
aas
ret
out
into
std
add
aad
mov
push
mov
dec
outsl
xor
cmc
lods
jno
inc
aam
lds
and
jle
pop
gs
daa
jle
mov
repz
icebp
xor
sbb
out
movntq
out
pusha
stos
push
pminsw
inc
jmp
stos
or
movsl
call
jbe
loope
xor
xchg
cmp
add
pop
inc
arpl
mov
in
cmpsb
clc
in
ds
addb
je
pop
fdivr
divl
xchg
pop
int3
jl
nop
and
in
incb
test
mov
jmp
sbb
jecxz
aas
daa
xchg
sub
mov
push
mov
and
pop
cmpsl
aad
jb
aaa
imul
imul
gs
fisttps
pop
cmp
sarb
jle
sbb
xchg
or
xchg
jg
fs
lret
pop
lock
cmp
jg
add
leave
jns
push
cmpsb
lds
jo
test
loopne
adc
les
and
push
pavgb
sbbb
lods
pusha
jo
sub
dec
push
inc
loopne
mov
add
sbb
out
in
imul
shr
insb
test
lods
xchg
fwait
cs
cmp
jg
pop
mov
sti
clc
mov
mov
sub
imul
add
mov
in
ret
and
adc
add
cmpsb
stos
loop
mov
pop
rclb
mov
fisubl
xchg
nop
mov
lret
or
jno
pop
xchg
inc
scas
adc
mov
pusha
xchg
sub
nop
push
stc
es
aam
cli
insb
dec
xchg
and
dec
and
cltd
stos
fimull
int
mov
in
aad
lods
mov
stc
push
sahf
and
in
mov
psubb
mov
ja
mov
test
jbe
inc
mov
mov
stos
stos
inc
hlt
mov
and
or
jle
inc
push
xchg
test
lea
adc
xchg
add
dec
sbb
stos
dec
hlt
mov
lock
cmpsl
or
xor
push
xchg
rolb
cmp
repnz
imul
dec
outsl
cmc
mov
loopne
jb
sbbb
pop
cmc
fdivrs
fs
jmp
inc
and
inc
inc
mov
push
push
sbb
out
push
xor
xor
out
ja
popa
xor
adc
insb
repnz
mul
xchg
jge
jbe
repnz
mov
fdivrs
adc
inc
fbstp
jns
inc
xor
arpl
adc
adc
jge
mov
sub
dec
je
and
cmp
rcr
xor
fidivrl
dec
lods
cmpsb
nop
adc
bound
sub
adc
push
popf
mov
insb
movsl
imul
popf
sahf
push
mov
adc
push
test
faddl
xchg
pop
cli
adc
xchg
fdivr
ret
mov
aam
cs
aas
cmp
sub
push
cmp
fsub
cmp
cmovbe
push
test
cmp
mov
bound
jb
mov
push
lret
jmp
push
das
cmp
ret
or
sbb
xchg
jbe
sti
add
loopne
push
shlb
movsl
xchg
sbb
cmp
xor
add
jecxz
jle
inc
shrb
insb
add
mov
mov
dec
pop
dec
inc
in
mov
adc
dec
fisubs
pop
xor
push
out
fucomip
xchg
jo
mov
pop
cmp
rorl
out
xchg
push
shll
movsl
xor
inc
push
inc
data16
xor
aaa
cmp
dec
xchg
and
dec
mov
js
cmp
xchg
and
mov
pop
lret
add
iret
inc
dec
mov
in
push
mov
test
add
mov
push
and
jge
scas
push
jge
mov
jae
je
mov
cld
mov
xchg
fwait
popf
push
mov
out
push
and
ss
xlat
test
pop
or
inc
xchg
movsb
jnp,pn
dec
adc
push
xchg
int3
bound
mov
in
sub
clc
push
enter
out
push
cmpl
dec
addr16
mov
xor
and
pop
sbb
lods
xchg
mov
xchg
std
sahf
stos
lret
xchg
loop
add
xlat
or
push
mov
push
xor
sbb
pop
out
xchg
add
daa
mov
scas
jo
out
jns
jne
xor
pop
sbb
xchg
aam
sub
mov
lock
xchg
cld
jnp
movsl
pusha
push
stc
xor
push
adc
ds
mov
add
outsb
in
jb
movl
cld
dec
bound
add
movsb
fdivs
jno
mov
xor
jl
pop
fsubs
sbb
addl
repz
mov
xchg
cld
fwait
add
pop
rcrl
add
and
lret
push
mov
cmp
sub
push
mov
shl
cmp
mov
pop
movsl
mov
lea
in
popl
push
dec
outsl
ss
fdivrs
pop
jge
jp
mov
popa
mov
xchg
sub
ja
jp
mov
repnz
outsb
mov
mov
dec
mov
pop
push
clc
dec
jecxz
pop
pop
add
dec
outsb
ja
lods
out
out
xor
inc
sahf
mov
mov
push
ljmp
out
inc
inc
push
sub
sbb
call
pop
pop
push
pop
call
mov
push
and
rol
rclb
sub
iret
xchg
loope
imul
out
push
jmp
arpl
push
pop
shrb
push
iret
inc
mov
jl
jns
notl
pop
cmp
jno
hlt
in
das
roll
mov
sub
push
cmp
mov
mov
orb
jne
cmp
nop
sahf
mov
loop
add
mov
cmp
push
mov
sub
enter
xchg
push
notb
xor
jb
mov
dec
in
fcmovnbe
cmpsl
sbb
sti
test
sbbb
loop
imul
sbb
dec
or
xchg
incl
andb
push
cmpsl
dec
les
mov
dec
roll
mov
xlat
out
loope
mov
pop
xchg
pushf
push
xor
adc
jae
sti
mov
movsb
jge
jns
lea
jne
loop
dec
pop
sub
xchg
or
cmpl
pop
add
sbb
ret
xchg
dec
cmpsl
xchg
loope
movsl
fs
clc
mov
push
dec
push
mov
rclb
jecxz
lea
test
pop
mov
add
mov
jmp
sbb
push
mov
loope
loope
into
cmp
push
add
mov
enter
loop
fsub
xor
pop
scas
out
daa
jecxz
cmp
cs
pop
popf
mov
cli
and
mov
mov
aad
dec
cld
and
in
decl
add
mov
mov
jns
xchg
pop
mov
jo
mov
sub
pop
fsts
ret
adc
nop
sub
push
dec
push
lret
cmpsl
jae
test
mov
push
iret
nop
repz
lods
push
xor
mov
pop
mov
mov
cltd
popa
call
int
push
pusha
ss
mov
mov
inc
jecxz
mov
and
mov
pop
xchg
fisubl
add
shr
mov
xor
xor
int
mov
adc
ja
jae
daa
push
xor
cmp
sahf
pop
cwtl
scas
push
repnz
enter
push
into
in
cmc
repz
add
add
outsl
sbb
push
sub
jle
mov
jge
stos
sbb
das
mov
scas
pop
mov
aam
sbb
cli
mov
mov
pop
int
lcall
aas
xchg
push
stos
inc
jg
popf
mov
out
cltd
pop
push
jns
repz
sbb
fsubs
inc
loopne
leave
out
xchg
and
ds
pop
nop
sbb
jne
lea
ret
push
ret
in
jge
int3
and
imul
bound
cmp
mov
aaa
push
lret
mov
adc
repnz
pop
or
mov
dec
out
cwtl
xor
mov
jo
jge
add
lret
lret
or
and
xchg
cli
es
and
mov
popf
ja
loope
lret
xchg
adc
hlt
jge
xchg
dec
fidivl
xchg
aam
adc
repz
insb
out
inc
mov
dec
int3
sbb
lret
jns
or
outsb
push
dec
sbb
je
xor
mov
mov
and
push
les
lods
dec
cmc
xchg
out
dec
sbb
in
sbb
sbb
lret
sub
daa
or
sbb
pop
sbb
mov
xor
xchg
test
test
jge
inc
xor
sbb
mov
sti
icebp
popa
jnp
insl
mov
dec
in
fs
mov
mov
pop
mov
add
sbb
mov
lahf
inc
clc
cld
ds
xor
mov
push
lret
push
loopne
je
in
mov
mov
push
das
repz
adc
jp
cs
in
aam
movsb
int3
pop
sub
push
pushf
lret
icebp
pop
or
inc
roll
pop
dec
adc
testb
test
mov
push
andl
and
out
push
gs
cmc
jbe
jl
and
out
arpl
cmp
lahf
lret
cmp
je
lods
js
push
cmp
mov
shrl
stos
xor
and
shrb
jne
or
cli
sbb
cmp
jb
sbb
mov
inc
je
out
mov
cli
adc
adc
cmpb
fldenv
or
xchg
push
dec
inc
jbe
cmc
sub
fadds
mov
mov
and
inc
dec
inc
ds
cmp
outsb
pop
dec
shll
insb
push
sub
addb
push
dec
jno
xchg
popa
cld
push
xchg
mov
or
mov
cmp
repnz
push
iret
ljmp
popa
testb
testl
fwait
and
mov
dec
mov
jecxz
ds
cs
push
dec
je
add
or
ficomps
inc
ror
cmp
mov
mov
rcr
in
inc
adc
movups
cmp
fs
mov
xchg
jbe
or
adc
call
in
lea
sub
fwait
ljmp
mov
out
or
pop
mov
pop
sub
popf
call
in
aam
cld
rorl
out
int
jge
fnstsw
mov
call
jno
mov
jns
mov
and
dec
pop
lods
pop
fcoml
add
adc
xchg
mov
cmpsb
leave
lods
sub
push
mov
xlat
mov
add
dec
dec
adcb
nop
cli
mul
adc
xchg
add
in
lret
sub
pop
in
test
mov
outsl
adc
sar
mov
and
cmp
mov
push
bound
jmp
mov
mov
inc
dec
stc
mov
sub
jmp
sub
dec
add
js
pop
xlat
jle
or
andl
mov
push
int3
cs
daa
call
add
mov
xchg
mov
lret
xchg
mov
leave
adc
dec
sbb
mov
mov
push
mov
mov
pop
ja
sbbl
adc
sti
aad
orb
out
add
fdivs
jle
inc
mov
mov
push
popf
jl
jmp
add
mov
adc
pop
jns
add
jno
add
add
test
push
dec
mov
ss
sub
mov
push
cmp
mov
lea
and
into
es
lock
les
ffree
cld
push
jns
pop
daa
data16
pop
outsl
mov
mov
dec
daa
jl
add
mov
add
negl
je
and
mov
jp
mov
push
jmp
shrb
idivb
push
ret
cmp
xor
push
outsb
out
inc
push
inc
cmpsl
mov
sub
mov
jp
xchg
js
push
sbb
shlw
lock
jge
testb
or
pop
sub
dec
scas
addb
mov
es
push
mov
shl
sbb
pop
repnz
sub
adc
add
lds
dec
in
shlb
inc
mov
mov
add
cmp
fdivl
pop
add
adcb
fwait
sub
testl
sbb
ret
xlat
fidivs
call
js
pop
arpl
xchg
and
mov
in
or
clc
push
lret
movsl
push
push
iret
addl
push
adc
sub
xlat
imul
loopne
mov
and
jmp
sbb
add
dec
and
sbb
test
lcall
jg
inc
add
in
outsb
stos
lods
bnd
pushf
sub
adcl
scas
xor
xor
mov
mov
enter
jno
clc
adc
clc
mov
psllq
fsubrs
test
loop
mov
push
outsb
cmp
daa
sbb
xor
jnp
sbb
inc
push
outsb
cmc
insl
jl
je
inc
fwait
pop
cli
add
xor
xchg
pop
inc
dec
idivb
inc
cmp
sarb
leave
pop
xchg
or
jne
cmpsb
inc
or
push
outsb
cmp
dec
sbb
pop
xchg
mov
push
dec
adcb
stos
pop
movb
ret
sbb
and
xchg
mov
lea
mov
insb
and
sub
and
push
sub
sti
setle
pop
pop
adc
adc
ja
lret
movsl
mov
pop
mov
inc
pop
cmpl
aam
mov
outsb
pop
loope
mov
pop
out
xchg
das
jl
test
xor
xor
xchg
in
dec
jle
in
jle
cmp
adc
movb
lret
dec
dec
adc
fnstsw
sti
in
call
loop
scas
sub
push
std
and
jne
test
mov
scas
cmp
pop
jne
gs
pop
sar
sbb
lock
lods
fsubrl
ljmp
lock
incl
mov
popa
mov
pushf
sbb
cli
lds
movsl
outsb
xor
in
outsb
push
pusha
dec
idivl
loop
jb
dec
inc
jg
sbb
jp
in
aaa
mov
int3
in
xlat
jne
mov
sub
movsb
xor
addr16
or
sbb
scas
lahf
es
add
cmp
int3
push
fwait
jmp
outsl
adc
add
fistps
mov
cmpsb
outsl
push
out
cwtl
jmp
out
mov
shrb
fucomip
out
imul
aad
into
and
jle
test
scas
jbe
dec
ljmp
add
sub
or
xchg
lret
lods
ficoml
out
pop
pop
and
sub
sub
roll
cmpsl
inc
inc
rcr
int3
sub
cmp
paddb
or
push
lahf
lock
cli
push
pop
insb
push
das
xorb
fistl
mov
push
pop
sub
lret
cmp
and
in
fcmovbe
and
in
ljmp
xchg
inc
sar
cli
lret
and
pop
sub
repz
idivl
dec
and
dec
and
jmp
adc
in
adc
loop
out
push
push
stos
xchg
inc
mov
xor
clc
sar
enter
push
and
in
call
aad
stc
lock
mov
dec
rolb
insl
ficoml
mov
mov
fwait
mov
mov
dec
scas
add
imul
push
pushf
mov
sarl
mov
xor
mov
add
sbbb
dec
mov
or
imul
pop
mov
cmp
mov
xchg
cmp
rorl
pop
das
inc
repz
push
push
cmp
movsl
das
imul
js
loopne
clc
mov
sub
mov
dec
ljmp
or
push
test
lea
test
push
popf
pop
scas
mov
shrb
jl
adc
stos
mov
inc
outsb
mov
fldcw
mov
or
popa
jecxz
add
and
scas
int3
and
inc
sbb
dec
add
xchg
jle
dec
or
or
negl
xor
cld
loop
or
cmp
mov
cmp
xor
jecxz
fwait
jae
push
pop
mov
fstpt
shrl
and
pop
mov
and
adc
adc
mov
hlt
mov
xchg
adc
add
pop
repnz
orl
loopne
xchg
out
int
sbb
arpl
dec
xchg
sub
movsl
ss
mov
jg
mov
mov
int3
jb
fstl
cwtl
lods
mov
mov
out
sub
lret
adc
cmp
sub
inc
mov
jne
roll
dec
rol
in
in
pop
adc
pop
push
leave
sbb
imul
add
aas
inc
sbb
popa
xchg
scas
push
dec
imul
shlb
popa
bound
cmp
pop
push
xchg
xchg
cmp
clc
inc
add
repnz
jmp
lock
in
leave
in
sbb
ja
repnz
fistl
push
sub
and
cmp
pop
ret
lock
in
into
das
mov
mov
rorb
js
mov
inc
jnp
insb
dec
in
addr16
push
inc
cmc
add
sub
dec
pop
dec
push
jmp
push
pushf
mov
push
pop
dec
movb
mov
xor
or
jns
push
cld
loopne
rcrb
lret
lods
sub
jecxz
int
push
cmp
sbb
mov
mov
addr16
xor
lods
lds
mov
jne
xor
hlt
std
cwtl
roll
adc
fnsave
scas
push
adc
xor
cmp
pop
xchg
clc
pop
ja
hlt
xor
dec
mov
cmp
test
adc
cmp
or
scas
stos
jecxz
push
jmp
icebp
xchg
sbb
out
sahf
jmp
mov
iret
in
adcl
outsb
sbb
pop
sub
stc
xor
ror
inc
imul
int
adc
pop
fadd
push
int
mov
ja
sbb
sbb
mov
bound
aad
mov
inc
shll
jmp
mov
mov
push
insb
jl
add
jge
adc
or
mov
add
xor
pxor
test
je
cli
nop
repnz
pop
push
pop
add
test
add
pusha
shlb
mov
clc
jb
mov
daa
adc
fildl
jb
inc
sarl
bound
call
cmpsb
mov
cmpsl
mov
enter
and
cmp
adc
xor
adc
push
test
xchg
imul
and
outsl
mov
sub
shl
jne
cmpsb
sub
push
mov
cmp
dec
bound
loope
sub
mov
test
js
or
jne
sbb
sub
lcall
clc
push
inc
aam
mov
sub
dec
mov
mov
sbb
sub
inc
inc
iret
mov
and
out
orl
dec
mov
mov
outsl
xchg
cwtl
add
dec
icebp
jnp
cmp
dec
outsb
fistpll
out
std
push
ds
and
les
and
cltd
inc
wrmsr
mov
cmp
or
mov
adc
out
mov
mov
cmp
rcll
lock
sbb
nop
test
call
and
nop
mov
neg
aas
cli
cmp
enter
xchg
mov
hlt
inc
iret
fbstp
insl
hlt
ficoms
pusha
out
popa
mov
mov
jne
mov
lcall
stos
shl
inc
loopne
orb
pop
pop
or
xchg
in
cmpl
dec
push
ja
pop
jl
insl
adc
mov
repnz
inc
jle
push
adc
cmp
ficoms
pop
cmpsl
xor
xor
xor
fists
jmp
jecxz
insb
xchg
mov
imul
xchg
mov
sbbl
mov
dec
sbb
fsts
xchg
ljmp
sbb
or
iret
xchg
jne
sub
div
xor
xchg
xchg
push
sub
subb
or
xchg
cmp
dec
add
aas
lcall
xchg
mov
scas
pop
xchg
mov
inc
fsubrs
push
cmp
bound
addr16
cmp
fsts
fldcw
stc
lcall
xchg
cltd
add
push
push
add
jecxz
pop
push
sarl
in
xor
adc
pop
mov
push
mov
ret
ds
adc
pop
lret
lods
bound
aad
add
mov
fistpll
inc
jbe
or
rcl
xchg
add
aad
into
cmpsl
jge
int
dec
cmp
push
dec
sub
mov
or
loop
movups
jp
hlt
sbb
xchg
js
ja
daa
out
and
jmp
data16
pop
fsubrl
mov
lods
jl
sub
and
xchg
add
dec
aas
in
test
into
push
mov
test
sbb
sbb
pushf
lods
xor
xchg
sbb
ret
int3
lret
and
mov
aad
pusha
mov
push
jle
fs
enter
jns
jne,pt
push
test
pop
outsb
add
inc
scas
jae
inc
dec
sbbb
hlt
push
es
pusha
iret
mov
cmp
xor
imul
loop
xor
pop
sbb
pop
or
jmp
mov
bound
xchg
imul
cltd
cmp
add
add
lods
xlat
xor
es
fldt
pop
test
hlt
dec
js
flds
lods
and
fiadds
dec
inc
inc
pop
sbb
jns
inc
insb
jmp
jg
or
jb
pop
push
lret
push
xor
ret
sub
xchg
nop
and
test
adc
ljmp
fcompl
mov
clc
arpl
pop
leave
shll
loopne
mov
icebp
sbb
mov
loop
loop
pop
sbb
hlt
add
cmp
pushf
lock
imul
imul
pop
lods
int3
xchg
inc
cmp
xchg
cmpsb
outsl
or
bound
mov
popf
fisttpl
sarl
pop
xlat
adc
cmpsl
js
push
jg
adc
xor
sub
mov
sub
xor
xchg
incb
or
icebp
pop
cmp
mov
cmp
add
cs
and
lods
jb
xchg
cli
and
lahf
adc
fnstsw
fnstsw
pop
mov
bound
insl
test
push
mov
cwtl
fildll
popa
mov
cmp
in
cmp
test
cmp
call
inc
inc
pop
jecxz
shlb
dec
mov
roll
push
xchg
xchg
mov
or
ret
xchg
xchg
ret
mov
mov
add
sub
lds
pop
bound
pop
xchg
rolb
and
popa
and
dec
fadd
arpl
clc
push
movsb
push
popa
inc
adc
jecxz
cmp
test
jmp
pusha
clc
add
and
inc
adc
std
popf
jecxz
lds
scas
ds
loope
loopne
loope
xor
xor
fwait
out
pop
push
loope
movsl
leave
cmp
push
into
shl
jg
lock
iret
out
pop
mov
repz
ds
xchg
je
hlt
mov
mov
fidivs
mov
xchg
enter
mov
or
add
test
dec
push
cwtl
call
loopne
push
or
inc
sub
mov
inc
jae
test
xor
stos
xor
jmp
cwtl
arpl
repnz
cmp
out
xor
adc
test
fidivrl
iret
adc
xchg
lds
push
xor
jns
enter
mov
clc
lcall
sbb
and
in
push
enter
fildl
sbb
pop
mov
inc
pushf
iret
cmpsb
call
push
outsl
test
fldl
xchg
push
aas
cli
cmp
scas
push
movsb
mov
xor
and
lea
xor
imul
fstl
mov
jecxz
and
sbb
jb
sub
loop
data16
std
and
jae
cmp
sahf
mov
cld
cltd
aas
jge
adcb
pop
pop
ss
loopne
inc
call
pop
mov
push
lock
push
out
popa
pop
fsub
dec
hlt
cli
pop
sbb
fstl
sub
test
push
mov
negl
sbb
out
fwait
jb
xor
mov
inc
inc
sub
imul
mov
mov
repz
or
lret
arpl
push
cmp
inc
jg
aad
mov
movsb
inc
add
cs
dec
mov
iret
fwait
test
leave
addr16
ds
pop
lods
sbb
out
leave
push
push
scas
movsl
xor
idivb
cmc
push
jecxz
and
mov
imul
cld
in
sub
js
dec
xchg
repnz
jle
inc
jp
int
les
pushf
test
gs
pop
jg
push
mov
sbb
cs
in
jecxz
in
jge
fidivrl
jmp
loope
fcoml
xchg
xchg
bswap
mov
fildl
ret
or
in
movsb
push
ret
and
fsubs
fildll
out
xor
repnz
test
mov
and
and
scas
dec
popa
fcompl
push
cmp
loopne
cld
cmp
ret
add
xchg
mov
inc
jp
sub
push
dec
push
mov
inc
adc
adc
and
aaa
and
xlat
out
jno
mov
sub
mov
jl
lcall
sbb
cmpsb
or
cld
loop
adc
fcmovnbe
and
lahf
into
or
ja
ss
cs
shl
jno
frstor
fsin
ret
and
loopne
jns
outsl
adc
jmp
xor
outsb
pop
xchg
push
fmul
push
rolb
nop
data16
mov
leave
pop
cltd
mov
mov
sbb
scas
pop
les
cmp
stos
inc
clc
mov
sbb
stos
pop
repz
xlat
rolb
dec
test
incb
ret
and
mov
jne
and
or
dec
iret
jl
dec
jnp
pusha
inc
mov
mov
stos
push
flds
ret
add
push
ss
xchg
mov
lea
mov
push
jns
lcall
roll
insb
test
xchg
movsl
in
adc
in
push
cwtl
sub
ret
out
jmp
leave
inc
xor
je
inc
fistpll
aad
xlat
cmpsl
rcrb
pop
xchg
es
xor
mov
insb
sbb
pop
jb
and
call
cwtl
imul
push
ret
push
mov
pop
dec
lods
lock
and
mov
pop
mov
test
inc
or
test
mov
adc
enter
pop
push
xor
inc
adc
sbb
xchg
mov
lock
mov
xchg
mov
sub
mov
lcall
add
mov
cmpb
push
mov
cwtl
inc
xchg
lret
cmp
loop
cmpsl
lret
cld
test
mov
or
mov
mov
aas
clc
cmp
call
cmc
xor
push
jbe
stos
aaa
rolb
pop
and
add
call
mov
outsl
movsb
add
cmp
test
inc
in
popf
aad
mov
sti
or
push
mov
cmp
stc
out
outsb
add
lahf
jle
lds
adcb
xchg
push
cmpsl
loop
int3
pushf
test
dec
cltd
out
lcall
incb
pop
sub
xor
xchg
mov
pop
pusha
xor
pop
in
div
outsl
loopne
cmp
sub
mov
adc
fdiv
mov
decb
adc
roll
xlat
shlb
adc
mov
inc
add
or
pop
jne
lods
out
sub
push
shlb
es
mov
ret
add
xor
fs
push
cwtl
inc
gs
clc
jns
insb
imul
mov
dec
add
popl
jl
ds
add
ss
xchg
test
xchg
sub
mov
jns
iret
dec
mov
mov
cwtl
adc
or
lcall
shrl
mov
mov
ljmp
mov
insb
fldt
mov
xor
pop
and
mov
pop
cltd
jp
inc
cmp
adc
insb
inc
pop
push
dec
dec
out
fwait
lods
subl
ret
out
das
sarb
and
lcall
sbb
testl
lfs
popf
aam
cli
jnp
cmp
pop
call
pop
movsl
fnstcw
mov
filds
jmp
iret
sub
and
cmp
cmc
push
jmp
les
ret
lock
pop
sub
outsb
out
daa
add
cmc
sbb
push
ds
mov
repz
or
add
mov
rorl
mov
mov
aam
lea
stos
fs
mov
push
cmpsb
cs
jge
inc
cmpsl
hlt
test
dec
cmp
insl
add
fcompl
adc
add
dec
xchg
outsl
inc
ret
jmp
out
inc
mov
popa
jb
mov
fisubs
lea
dec
pushf
pop
bound
fwait
jp
cmpb
in
cmpsb
fcoms
out
out
add
lahf
and
fcomps
xchg
dec
call
xor
mov
inc
out
xchg
pusha
adc
pop
inc
jg
in
push
push
jle
in
test
sub
inc
cmp
pusha
push
cmp
xchg
mov
mov
outsl
or
gs
dec
dec
jmp
dec
mov
adc
and
pop
insb
fiadds
dec
inc
mov
mov
repz
stc
pop
or
push
andl
les
inc
push
jns
push
mov
test
add
lahf
xor
adc
dec
pop
xchg
adc
mov
arpl
fmul
adc
fsubl
nop
mov
mov
jo
xor
and
ret
sahf
out
in
pop
popf
cli
fisttps
jns
push
mov
sbb
lahf
cmp
xor
or
dec
xchg
insb
cmp
cmpb
aad
dec
es
lea
xchg
xor
scas
jl
sbbl
das
cmovle
inc
pop
mov
add
push
pop
jo
std
aaa
mov
aam
mov
test
dec
push
fnstcw
dec
mov
pushf
jmp
xor
sti
sti
mov
push
jecxz
fidivl
jo
fisttps
hlt
loop
or
testb
int3
movsl
fstp
cs
push
insl
leave
into
adc
sahf
fidivrl
xor
sub
mov
testl
out
scas
data16
jnp
rolb
cmp
xchg
dec
jnp
cmp
daa
xchg
sub
push
pop
mov
inc
adc
or
push
shlb
jbe
ficomps
pop
sti
fwait
sub
test
js
xchg
leave
idivl
dec
jnp
icebp
insl
pop
inc
inc
mov
mov
into
neg
ret
in
mov
pop
xor
pop
sbb
sbb
stos
push
dec
jg
xchg
pop
or
or
ret
fadds
jp
add
xchg
push
stos
adc
jne
xor
xor
fdivrl
pop
pusha
dec
ret
aas
xor
mov
or
jge
sub
sbb
mov
dec
or
jne
sub
ja
xor
push
daa
fisubrl
xor
jne
xchg
add
insl
popl
out
xchg
pop
xchg
xchg
enter
pop
test
ds
mov
cwtl
das
mov
mov
jbe
xlat
jns
popf
cmp
mov
dec
cli
loope
add
addl
cmp
rorl
lods
jecxz
mov
stc
pop
xchg
fiaddl
and
out
mov
push
faddp
lret
call
inc
pusha
xlat
mov
add
adcl
pusha
pop
sub
or
shrb
sub
push
xchg
adc
sub
jge
rcrb
orb
and
inc
sti
mov
arpl
ret
out
pop
sbb
cmpsl
orb
int
sbb
lods
daa
cwtl
sbb
call
cmc
cmc
stos
jge
cld
stos
mov
pop
test
and
push
or
sahf
cmpsl
aaa
mov
dec
jp
or
and
pop
nop
mov
add
inc
inc
mov
jg
inc
or
mov
insb
movsb
enter
lcall
outsl
push
push
nop
cltd
fldpi
cmp
mov
in
mov
pop
fistpll
outsl
push
add
and
call
imul
lods
inc
int
shlb
dec
sbb
dec
movsb
pop
cmpsl
push
push
xchg
jl
dec
pop
jns
in
pop
cmp
mov
dec
pop
dec
or
mov
dec
pop
sbb
das
push
mov
xor
idivl
sbb
push
cmp
sub
movsl
lret
dec
pop
mov
sub
sahf
rorb
pop
inc
adc
daa
jnp
dec
test
fmuls
cld
aas
add
adc
mov
xlat
jne
add
sarl
sbb
push
mov
cmp
ret
repz
xor
fiadds
inc
lds
loopne
lods
mov
sub
lods
mov
les
imul
sbb
dec
mov
cltd
mov
cmp
addl
mov
and
or
lods
adc
cmpsb
sub
jecxz
enter
pop
cltd
test
mov
push
movaps
jns
fidivl
jecxz
jecxz
jo
imul
xor
fcmovnbe
imul
jmp
imulb
nop
push
xor
add
test
mov
je
pop
ds
adc
xchg
testb
mov
lcall
mov
fcomps
sti
adc
mov
push
sbb
xchg
cld
jb
repnz
or
fsubr
and
js
sti
pop
and
inc
add
or
fs
mov
scas
cld
out
les
dec
dec
add
imul
leave
roll
add
in
int3
xchg
push
mov
jmp
jle
in
xor
sti
mov
jecxz
sti
lods
mov
push
mov
mov
imul
addl
mov
jb
rcrb
mov
call
push
and
rolb
outsl
rcr
push
mov
sbb
out
add
add
push
adc
sub
aam
push
mov
xchg
outsl
inc
and
jae
int
leave
lods
inc
inc
xor
out
inc
out
jb,pt
outsl
xchg
in
push
xchg
vorpd
shl
inc
xor
lcall
add
roll
jbe
mov
loop
in
dec
mov
xchg
push
push
cmp
lock
dec
test
icebp
fcoms
aam
mov
arpl
out
lcall
addr16
jge
or
push
mov
dec
push
pop
iret
and
stos
xchg
mov
rcll
fsubp
pop
inc
es
jmp
dec
pop
jns
fsubl
dec
inc
push
mov
pop
inc
icebp
pop
push
xor
push
test
inc
out
ret
lahf
jbe
mov
push
mov
fcmovbe
mov
sbb
popa
cld
cmp
and
not
push
mov
sbb
sbb
jnp
push
lcall
mov
out
adc
mov
mov
stc
test
xchg
lods
inc
dec
call
popf
arpl
sub
mov
pop
jno
adc
inc
jo
addr16
scas
pusha
cmp
loop
mov
out
movsl
add
pop
mov
mov
mov
mov
mov
sbb
pop
sarb
sbb
fistps
mov
leave
sbb
aad
mov
lods
and
dec
out
lret
ret
sbb
imul
xchg
mov
sbb
pushf
sbb
xchg
inc
inc
push
jns
cmpsl
inc
mov
mov
sarb
in
push
test
shl
bound
jno
nop
ja
ljmp
cmp
and
or
movsl
lea
cltd
jle
mov
cmpsb
je
add
pushf
and
add
out
jmp
sarl
sub
sti
xlat
aam
cwtl
movb
fcmovne
rcrb
mov
test
pop
dec
cmpsb
pop
test
mov
test
push
test
xor
outsb
hlt
jge
popf
sub
ds
pushl
in
pop
outsl
mov
sbbb
dec
je
ja
mov
sbb
push
jp
dec
xchg
fwait
ret
int
dec
stc
mul
dec
cmp
pop
fwait
lods
fisubs
and
loop
add
icebp
sub
out
frstor
adcl
insl
and
call
adc
cmp
lea
xor
out
fwait
mov
add
cmc
fs
push
sbb
cs
es
nop
pop
shlb
mov
lea
out
adc
divb
xor
lret
mov
sbb
jns
inc
jns
sbb
dec
repz
dec
call
shlb
into
lret
pushf
inc
call
dec
xchg
xorl
lods
movsb
in
and
xor
les
sbb
mov
icebp
and
cmpsb
fwait
shl
adc
pusha
pop
jae
clc
repz
sbb
jge
fnsave
dec
push
xor
cmpsl
popf
mov
nop
fadds
jb
leave
or
out
jg
mov
insl
lcall
arpl
push
lret
mov
mov
and
xor
shrb
je
pop
mov
inc
subb
cmc
push
loop
ror
push
shrl
pop
jne
mov
and
pop
mov
pop
into
insb
gs
bound
movsl
push
fisttpll
das
inc
ss
std
pop
xchg
cmc
ret
add
push
or
pop
cmp
jge
sbb
mov
and
out
add
and
and
adc
inc
xor
inc
test
mov
and
or
pop
lock
push
mov
sbb
mov
push
and
pop
lret
out
mov
pop
xor
testl
push
scas
lret
adcb
push
scas
and
mov
lods
out
push
pop
fldl
pop
loopne
ja
or
je
xlat
in
sub
decb
sbb
fs
jb
insl
inc
sub
icebp
mov
xor
data16
inc
inc
mov
rclb
stc
popf
js
test
insb
clc
mov
adc
cmp
sub
mov
lahf
cmp
cmpb
adc
test
out
push
sbb
in
and
mov
adc
cli
dec
jb
inc
jle
jb
js
and
lods
fwait
pop
jle
stos
rorb
scas
or
cmpsl
xchg
adc
imul
and
test
lods
lahf
mov
adc
jae
iret
xor
fmull
pop
push
inc
stc
gs
push
je
daa
out
push
cltd
sub
pop
inc
cmc
cmp
push
mov
repz
mov
clc
xchg
push
jno
xor
clc
jns,pn
and
sbb
gs
or
lea
xadd
loopne
test
pop
es
in
pop
cmp
mov
jl
loop
pop
test
xchg
cmp
je
push
clc
xchg
sub
add
rorb
cld
cmpl
push
sub
aad
ret
pop
imul
lds
adc
xchg
negl
pop
add
inc
jg
add
scas
rorl
outsl
add
jbe
out
adc
call
pop
mov
jns
enter
test
arpl
fstp
shrl
aas
inc
cmpsb
lock
cld
pushf
mov
jecxz
les
es
outsl
je
notb
dec
movsb
clc
fidivs
push
into
xorl
aam
js
outsb
addl
push
daa
xorb
std
mov
dec
arpl
dec
push
pop
mov
std
sub
xor
hlt
mov
cmpsl
adc
out
outsl
jo
movsb
and
push
dec
or
mov
pop
xlat
movsb
or
pop
ss
xchg
loopne
push
sub
daa
leave
dec
fcomp
xchg
mov
mov
adc
repz
cmp
ret
dec
xor
cmp
or
pop
and
inc
popf
jmp
ss
and
fcmovbe
shll
or
or
add
adc
testb
repz
mov
pushf
sbb
jb
dec
cmp
jle
addb
rcll
ja
sti
cmp
sub
mov
and
lahf
inc
push
test
ret
jle
bound
cwtl
add
dec
push
in
sub
mov
jecxz
sahf
pop
push
bound
inc
xchg
mov
out
ret
outsl
pusha
into
sub
adc
or
movsl
pop
xor
sti
dec
in
push
push
push
and
add
sub
shr
mov
mov
mov
decl
pop
ror
cs
xor
mov
ror
xchg
leave
sub
out
pop
add
stos
or
aaa
or
mov
mov
push
fcoms
adc
xor
fnstsw
mov
in
mov
inc
sbb
jo
adc
cmp
pop
je
cltd
faddp
push
push
adc
jl
sub
sub
jo
inc
in
dec
mov
orb
jl
data16
push
xor
push
mov
lea
cmp
cmp
scas
push
fldl
mov
push
inc
cmp
clc
mov
cmp
cmpsl
mov
ss
lods
js
sbb
ret
sahf
iret
fcomps
cmp
jp
inc
pop
fnstsw
mov
fadds
push
jmp
aaa
in
pop
xchg
imul
jne
aaa
or
adc
inc
xchg
loope
mov
sbb
push
sarb
shl
pop
stos
push
cmp
or
insb
xor
mov
call
pop
test
mov
cmpsl
mov
rcr
mov
lcall
inc
mov
sbb
loop
cld
or
mov
inc
mov
push
pop
dec
out
bswap
ljmp
call
cld
push
addl
in
pop
adc
pop
ja
ljmp
aas
in
push
push
imul
mov
sti
test
or
pop
data16
ds
mov
jnp
outsl
inc
xchg
fcmovnbe
or
xor
cmp
adc
pop
cmp
xor
stos
or
rorl
pop
and
fildl
jno
jge
and
sbb
sarl
mov
into
add
ror
bound
roll
mov
cmp
mov
xchg
sub
add
in
push
jmp
push
lods
addr16
jno
into
jl
mov
jae
leave
inc
and
pop
movsl
decb
shr
sbb
fcomi
mov
dec
pop
xchg
sbb
jno
les
or
add
xchg
rolb
xchg
mov
jge
int3
lods
jmp
lods
jp
aad
lods
mov
insl
repnz
add
shlb
fst
aam
xchg
xchg
outsl
or
mov
xchg
sbb
cwtl
shrl
stos
jnp
popf
daa
adc
push
stc
jp
xchg
ljmp
mov
scas
mov
rcll
ret
push
mov
push
lods
dec
fidivl
enter
dec
in
sub
orl
rol
mov
cmp
mov
jecxz
ljmp
hlt
cmp
push
xchg
sar
push
add
sub
shlb
lea
je
bswap
fsubs
arpl
sahf
adc
cmpsl
cmc
xchg
sub
inc
xchg
jecxz
push
sbb
mov
mov
lea
push
cs
push
adc
in
outsb
cmp
pop
stc
lcall
shll
jle
rorl
leave
popa
jbe
orl
jmp
int3
test
sarl
jbe
andl
mov
stc
negl
fbld
scas
loop
sbb
and
cmp
test
push
or
jmp
sbb
push
and
sarl
push
negb
orb
inc
mov
sbb
addl
xchg
decb
push
insl
sub
and
ret
mov
adc
mov
jmp
inc
push
in
push
divb
pop
push
mov
in
add
sub
push
push
cmp
fwait
rorl
dec
mov
mov
jge
jmp
out
cwtl
sti
and
xor
and
testb
lds
addb
fisttps
xlat
in
jge
les
adcb
sti
or
push
jg
idivl
sbb
push
fmulp
lods
jo
repnz
lret
cmp
dec
lods
cmc
icebp
aaa
outsb
or
imul
fs
fistpll
leave
xchg
add
jns
icebp
and
rcl
cmc
pushf
cli
jge
negl
or
mov
das
dec
fstpt
push
fsts
leave
fistl
push
fdiv
jns
mov
loope
jb
lret
xchg
sub
push
sub
dec
mov
movsl
xchg
adc
lods
mov
mov
cmpb
roll
ds
mov
jp
fsubr
lea
xchg
push
js
pop
iret
mov
fnsave
mov
add
js
addr16
and
push
push
push
lods
xchg
and
add
jle
sbb
xor
sbb
sub
cld
jmp
repz
pop
movsl
mov
loopne
xchg
mov
pop
loope
jge
sti
scas
mov
in
and
pushl
inc
xrelease
lret
cmc
push
and
jae
cmp
jne
sub
pop
movsl
test
cli
fisubrs
mov
aam
popf
xor
loope
test
mov
inc
movsl
cmp
jmp
adc
cmp
je
outsl
ja
push
sbb
mov
arpl
cmpsl
pop
andl
inc
lahf
and
and
dec
cmpsl
loopne
and
addl
lcall
nop
adc
les
arpl
push
mov
lods
cli
ds
ja
imul
outsl
sbb
loope
adc
push
and
scas
jno
cmp
jns
dec
call
jbe
and
data16
fisubl
lea
shll
das
sub
pop
pop
test
mov
sbb
movsl
mov
enter
pop
xchg
cmp
dec
mov
push
pusha
sti
stc
shrl
jns
inc
in
rcll
mov
sub
dec
push
push
nop
into
rclb
and
lahf
sbb
ss
mov
mov
xor
jno
nop
xchg
push
xor
sbb
fwait
leave
rclb
repz
jo
inc
aam
movsb
push
mov
push
sbb
fisttpll
ret
clc
insl
add
xchg
dec
push
mov
enter
aaa
test
lea
mov
divb
pop
or
pop
sti
data16
mov
pusha
addl
fwait
xchg
sti
add
pop
sub
mov
jl
pop
xchg
push
or
xor
das
lods
outsl
push
inc
sbb
dec
scas
stos
frstor
jecxz
fs
in
jbe
xor
xchg
je
aad
push
mov
push
and
scas
mov
loopne
xchg
inc
cs
stos
test
dec
pop
jae
mov
movsb
ficoml
cs
adc
mov
dec
int
lret
jno
xor
mov
stc
cmp
or
jno
xchg
lods
scas
pusha
mov
insl
in
mov
adc
xchg
sub
jo
add
icebp
xchg
das
cmpsl
xorb
xchg
cli
stc
mov
or
jl
leave
movups
jns
cwtl
jns
loop
sbbb
jmp
imul
push
cmp
imul
es
pushf
adc
jae
ljmp
roll
or
sub
ja
arpl
push
push
popa
lods
ja
ss
ljmp
sbbl
cmpsb
inc
in
push
jecxz
adc
xchg
or
lds
inc
push
aaa
mov
cmpsl
xor
gs
push
loop
and
add
mov
mov
xor
cmp
or
pop
mov
insl
hlt
inc
adc
jp
dec
lea
jb
push
dec
fs
pop
jno
mov
lret
mov
loopne
sub
stos
out
shl
or
ja
mov
mov
adc
mov
popf
add
cltd
mov
xchg
jnp
jp
sahf
and
addr16
xchg
sub
add
inc
jnp
xchg
ss
rcrl
pop
mov
outsb
cs
insb
js
mov
push
push
push
cltd
sub
jle
lahf
cmpl
xor
inc
js
sbb
xchg
rcll
ret
push
mov
and
add
pop
push
iret
jbe
sahf
ret
into
fsts
insb
mov
inc
aas
sub
mov
outsl
dec
mov
lds
mov
inc
insb
mov
repnz
xchg
icebp
push
sub
adc
aas
jo
push
out
adc
push
xor
enter
push
and
lods
fcmovbe
lods
inc
xor
and
and
lcall
andb
negb
xchg
iret
js
mov
xor
es
sarl
int3
fadds
push
test
inc
sub
fdiv
inc
imul
jno
enter
mov
das
lret
pop
popa
dec
andl
xor
dec
les
cmp
sub
push
fwait
pop
xorl
mov
adc
sub
push
imul
push
aad
lret
lret
push
jo
sbb
dec
ss
mov
stos
sub
ds
out
lret
mov
cmp
xor
jno
jge,pn
jmp
mov
jo
adc
out
out
fdivp
out
push
jg
add
sub
sub
or
xchg
jae
sbb
fsubl
mov
out
jae
add
xchg
push
push
fnstsw
or
test
or
enter
sahf
rolb
pop
jl
add
and
xchg
and
dec
pop
ret
aaa
mov
sbb
int
mov
lds
and
push
adc
fdiv
push
iret
scas
pop
int3
fdivrl
hlt
wbinvd
ficompl
popf
xchg
cmp
out
dec
je
push
sub
jb
inc
sbb
inc
out
dec
pop
push
outsb
sbbl
pop
pop
aam
ljmp
int
push
shll
push
inc
fwait
sbb
loope
outsl
clc
sub
sarb
ja
push
scas
pushf
or
jno
sub
pop
test
imul
in
mov
je
sub
jnp
cmpsb
lea
cmp
sbb
inc
popf
stos
mov
pop
mov
inc
outsb
fiadds
mov
in
fstpt
pushf
out
imul
push
dec
cmpl
fs
leave
lds
lret
std
cmc
and
dec
call
pop
add
xchg
jl
aaa
imull
rcl
in
in
pop
cmpsb
mov
lcall
sbb
inc
inc
js
mov
testl
pop
in
cmp
lea
mov
dec
sub
push
fincstp
adc
mov
cmp
adc
jno
mov
stos
or
out
jg
sbb
xor
xchg
pop
mov
fisttps
loope
jg
pop
lock
add
push
pusha
stos
sbb
mov
fnstsw
add
lods
xlat
sub
ret
bound
mov
mov
inc
jbe
sarl
cmp
movsb
mov
ffree
fwait
push
dec
mov
stc
fsubr
add
daa
ds
fcmovbe
es
add
test
sti
pop
pushf
mov
cwtl
iret
imul
sbb
ret
repz
mov
mov
idivl
sahf
jge
adc
xchg
aas
cmp
imul
push
dec
ja
and
mov
pop
call
jg
in
lret
bound
je
imul
pop
loop
pop
inc
mov
cwtl
add
movsb
movsb
sahf
push
hlt
pop
aam
or
insb
inc
movsb
stc
xchg
add
into
loope
stos
imul
push
push
mov
aam
jbe
stos
add
sbb
sbb
jmp
inc
pop
cwtl
mov
pop
aam
ds
das
orb
adc
add
js
pop
jno
shll
mov
lahf
iret
and
xchg
mov
sbb
cld
arpl
inc
test
mov
inc
out
mov
push
es
and
cmp
adc
sbbl
push
push
pop
dec
mov
jnp
push
loope
pop
dec
dec
and
adc
enter
dec
imul
add
call
adc
les
adc
mov
jne
pop
push
or
int3
push
scas
inc
push
adc
repz
popl
movsb
mov
xlat
sbb
jbe
mov
mov
out
mov
mov
mov
mov
rcrb
out
jae
dec
mov
rolb
cmc
sbbb
gs
or
lret
pop
push
mov
mov
fnsave
sub
fdivrs
out
cmp
movsb
mov
sub
xor
mov
dec
mov
mov
pop
mov
repnz
mov
ret
insb
das
cmp
sbb
arpl
push
mov
add
sub
in
fbstp
fimull
cltd
xor
xor
bound
adc
xor
dec
enter
fsub
sarl
fildl
out
push
xchg
push
std
sbb
hlt
loop
inc
nop
inc
sarb
jecxz
or
sub
stos
jecxz
cmp
sbb
push
and
jmp
and
fstl
loope
dec
and
add
fiaddl
aam
and
and
imul
xor
adc
fwait
mov
push
imul
rcrb
sbb
xchg
xchg
or
outsb
sbb
push
pusha
mov
and
in
lret
cld
stc
ja
enter
and
cmp
lea
adc
ret
sbb
psubusb
or
dec
dec
xor
jle
faddl
adc
and
insl
xchg
add
push
sbb
sti
jo
adc
arpl
movsb
xchg
adc
adc
cmp
xchg
scas
ret
cmp
push
push
mov
push
test
mov
in
cli
pop
inc
fsubl
adc
fs
dec
dec
inc
push
jmp
mov
repz
jb
push
movsl
cwtl
mov
pop
pusha
pusha
filds
sbb
pop
sti
call
stc
inc
aaa
jnp
outsb
mov
mov
adc
push
dec
lret
mov
xlat
lret
repz
pop
pushf
xlat
jnp
dec
rorb
adc
nop
mov
out
ret
js
loop
push
movsb
pcmpeqw
push
cmp
mov
nop
and
add
in
lret
inc
sub
push
jno
pop
std
fisttpl
jae
gs
push
xchg
cmp
mov
xchg
push
outsl
xor
jno
in
xchg
dec
out
mov
mov
test
mov
sbb
pop
popf
cmpsl
popa
je
xchg
jns
pusha
or
repz
cli
sub
and
aaa
std
icebp
test
inc
xor
mull
sbb
jnp
mov
cltd
push
jl
lods
jbe
in
imul
imul
arpl
inc
cmp
outsb
jae
stos
inc
mov
addl
ds
pop
test
or
add
or
aas
sub
fwait
pop
cwtl
call
add
dec
push
mov
cmpsb
inc
jae
dec
jecxz
int3
das
punpckhdq
or
and
mov
push
mov
std
test
lcall
cld
aam
mov
and
imul
lock
or
rcrb
mov
pop
fdivs
mov
sbb
jp
jecxz
movl
mov
adc
lds
negl
sbb
mov
repnz
test
fisttpl
jg
int3
and
dec
inc
test
mov
mov
cld
cmp
imul
mov
dec
adc
add
pop
pop
loopne
loopne
cmp
inc
mov
pop
push
popa
xlat
mov
cmp
mov
sub
adc
daa
test
sub
imul
andl
dec
inc
mov
inc
jecxz
xchg
add
sbbl
fs
int
jne
out
adcb
leave
mov
sub
icebp
fnstcw
loop
dec
outsl
xchg
lcall
arpl
outsl
ret
and
adcl
dec
rorl
in
mov
lods
mov
ja
out
fwait
mov
test
mov
divl
push
pop
jbe
es
mov
hlt
xchg
mov
in
jns
test
jg
loopne
sti
jne
mov
push
xchg
pop
pusha
mov
pop
rcl
ja
inc
inc
mov
pop
aaa
pop
jne
lahf
push
inc
or
jnp
movsl
out
and
loope
mov
cmp
push
sti
and
roll
lods
adc
jp
xchg
sbb
jle
mov
es
in
divb
sti
lods
sti
pushf
shrb
outsl
sbb
sbb
mov
lret
xor
repz
push
sbb
xor
inc
add
in
and
and
fidivs
pushf
loope
push
cltd
aam
addb
sbb
dec
xor
mov
mov
lods
xor
or
cli
pop
pusha
jns
sti
aaa
jbe
cmp
dec
mov
out
xlat
jle
cli
pop
mov
xchg
xchg
cmpsl
xchg
jmp
movsl
lret
int
and
jae
fldenv
lods
adc
pop
pop
insb
sub
cltd
and
push
movsb
sub
cwtl
jp
jecxz
xor
rorl
daa
jns
dec
jae
mov
bound
add
andb
out
lea
sbb
jnp
xchg
insb
push
imul
std
int
mov
push
pop
test
gs
inc
mov
jno
enter
arpl
inc
dec
push
stos
pop
lods
sahf
and
sbb
into
in
mov
lea
xchg
push
sub
xchg
fbstp
lock
jns
cmpsl
fisttps
xchg
jge
ja
mov
bound
mov
rclb
sbb
hlt
mov
sbb
jno
sub
aas
gs
cwtl
dec
sub
mov
mov
xchg
push
mov
fisubl
or
mov
stc
lods
outsl
call
es
push
dec
loope
jne
and
sbb
pop
dec
out
movsl
sub
push
sbb
scas
rclb
pop
aam
xor
lret
jle
inc
xchg
jo
cmp
icebp
mov
fdivr
ljmp
adc
sub
mov
mov
dec
pop
insl
xchg
movb
sbb
pop
loope
push
jecxz
int3
and
mov
aaa
mov
sub
or
cld
push
aam
mov
cmpsb
mov
sub
and
dec
jg
clc
int3
push
or
pop
sbb
push
push
lcall
imul
std
cmp
mov
pop
or
cmovnp
jle
jmp
mov
jmp
inc
pop
inc
xor
addr16
out
sub
inc
mov
jmp
xor
pop
in
dec
sub
jnp
pop
pop
mov
shlb
repz
lods
out
mov
cmp
ret
mov
sub
and
push
push
ds
sbb
ljmp
popa
ljmp
imul
cmp
inc
inc
popa
dec
jb
mov
or
out
das
xor
xor
in
pop
imull
add
fcomps
sub
mov
fsts
sub
rol
pusha
xchg
pop
mov
ss
mov
sub
and
popf
and
add
dec
in
and
imul
sbb
push
pop
sbb
out
cs
push
in
and
or
xor
inc
test
cmp
or
and
xchg
lods
or
mov
je
test
and
js
stc
mov
push
lret
outsl
adc
imul
in
xchg
xchg
mov
shlb
pop
xor
mov
fdivrl
ret
sub
sbb
repz
pushf
scas
mov
sti
fldt
rclb
or
pusha
out
adc
aad
adc
push
icebp
mov
fdivrs
cmp
ret
jae
and
inc
xchg
dec
fs
jle
pop
ret
fst
cmpl
fidivs
xor
inc
mov
pop
inc
cmc
loop
loop
rcrb
xchg
xor
gs
shrb
cmp
aas
or
shll
mov
sbbl
dec
pop
jbe
adc
fimuls
and
xchg
les
gs
cmpsb
push
arpl
xlat
lds
loope
pushf
inc
dec
mov
inc
jp
stos
enter
xchg
shl
add
lock
xchg
inc
add
mov
mov
nop
mov
inc
xchg
imul
mov
push
shrl
loope
sbb
rcrl
jle
sbb
lds
jl
dec
or
jbe
imul
add
cmp
pop
dec
iret
dec
push
mov
add
pop
pushf
popf
repnz
jle
mov
mov
sbb
scas
sub
dec
push
imul
pop
pop
in
jnp
fnstcw
jp
add
cld
mov
or
imul
stc
movsl
sahf
pop
repz
sub
loope
testb
das
ret
out
push
loopne
pop
daa
pushf
ficompl
mov
or
sbb
jmp
mov
add
xchg
es
outsb
sub
andb
pop
out
stos
xor
std
push
out
jg
inc
je
pusha
and
fistl
ret
sub
decl
mov
adc
lret
pop
add
out
xchg
sbb
xchg
pop
xchg
mov
inc
lahf
shrl
iret
jmp
fidivl
mov
stc
fisttpl
sub
lds
xor
or
mov
test
sbb
and
mov
mov
rorb
call
sub
popf
jmp
lret
jo
lea
dec
jle
aad
and
mov
movsb
xor
rclb
aaa
pop
push
pop
xor
lods
sbb
mov
mov
pop
adcl
in
sub
or
push
push
cmpsl
sti
push
mov
add
stc
sti
sbb
insl
int3
lods
add
add
sbbl
loop
mov
les
jge
sbb
stos
jns
sbb
test
pop
adc
mov
lea
sub
shll
stos
sub
lret
lods
fldenv
push
pusha
fabs
or
xchg
in
pop
jge
cmp
mov
scas
jns
movsb
adc
cmp
dec
int3
lds
adc
sbb
mov
int
stos
aam
or
jl
test
cmpsl
inc
inc
lret
lcall
fmull
xchg
xorl
sbb
xchg
xchg
pushf
mov
arpl
ret
pop
es
sub
dec
or
adcl
and
int3
jae
setns
out
shr
dec
cld
and
cli
mov
dec
add
lea
cwtl
js
lock
iret
jge
xchg
fimull
inc
aad
outsb
sbb
xchg
outsb
sbb
jmp
out
arpl
mov
in
push
pop
cmc
out
cmp
pop
les
fistpl
aam
xchg
mov
jl
rcl
stos
ja
xlat
dec
sbb
mov
mov
xor
add
mov
in
and
fbstp
cmpsb
fldl
push
sub
and
mov
dec
mov
dec
pop
xchg
cmc
hlt
into
outsb
xlat
fsubs
iret
xor
ljmp
lods
test
adc
push
shlb
mov
aaa
mov
pop
insb
xchg
test
sub
in
rcrb
sub
mov
inc
push
add
or
insl
js
aad
lea
mov
cltd
test
push
jg
aam
jge
and
or
mov
dec
in
imul
mov
push
jbe
loop
sbbb
inc
fs
es
adc
or
ds
pop
pop
idiv
pop
sbb
xchg
nop
pop
orb
ss
sysexit
pop
fsubrp
test
cmc
pop
ljmp
sbb
mov
mov
arpl
shrl
inc
add
loop
setge
pop
ret
and
je
push
pop
icebp
loopne
and
pop
arpl
out
test
das
bound
int
pop
pop
loopne
pop
popf
xor
mov
imul
fadd
fcoms
into
aam
fwait
aaa
cli
push
das
pop
loop
pop
pop
aaa
out
adc
mov
rcll
xor
stos
mov
ja
lods
cld
iret
jg
pop
decl
sbb
cld
ret
jl
out
shll
sbb
sub
ss
xlat
lahf
pushf
lock
adc
loopne
add
aaa
sbb
shll
cltd
ljmp
mov
xchg
xchg
mov
mul
or
mov
push
inc
pop
les
scas
cmpsb
mov
in
add
int
xor
notl
xchg
dec
imul
test
loopne
or
ds
stos
pop
add
stc
mov
xor
outsl
jle
nop
ret
lret
dec
cmpsl
xor
jno
pushf
pop
xchg
push
lods
fcoml
insl
into
fildl
jecxz
aaa
dec
add
outsl
push
imul
js
loop
mov
mov
pop
fstpt
pusha
xchg
mov
leave
inc
add
ljmp
push
mov
addb
mov
sub
mov
in
mov
sub
push
rcrb
adc
leave
stos
dec
das
mov
ret
bnd
scas
mov
out
movsl
insl
push
pop
inc
cli
and
pop
es
inc
out
rorl
jae
xchg
scas
jbe
ja
ljmp
mov
popf
mov
and
inc
xchg
es
inc
fwait
mov
pop
inc
xchg
mov
stos
pop
insb
or
fisubl
test
add
call
fcoml
and
adc
dec
inc
jmp
mov
enter
div
cld
push
call
sbb
lret
aaa
ja
push
and
sub
xchg
push
call
mov
nop
ror
push
insl
mov
in
adc
scas
test
push
sub
mov
mov
andl
lcall
mov
xchg
xchg
in
es
popa
int
cmp
and
add
fdivrs
add
pop
sbb
je
xchg
jmp
fcmovnu
adc
out
push
inc
inc
lret
test
xor
lcall
subb
xchg
jle
cwtl
mov
aam
dec
adc
mov
aad
lods
adc
stos
mov
insb
subl
mov
jmp
pushf
pushf
arpl
sbb
mov
and
or
mov
cmp
xor
imul
fmull
int
stc
adc
je
imul
add
jnp
add
leave
cmp
jnp
cwtl
ret
out
mov
sub
adc
aaa
xor
sti
cmp
popf
mov
inc
icebp
sbb
mov
lds
sub
inc
push
out
loope
push
les
jg
dec
push
sub
cli
dec
mov
repz
scas
lock
and
mov
loop
into
das
cli
adc
sbb
push
push
sub
xchg
call
mov
cmp
add
push
call
dec
loopne
mov
hlt
test
mov
pop
pop
sti
sbb
enter
nop
add
addr16
movsb
ss
sub
adc
jae
add
mov
filds
sahf
fst
jmp
jns
adc
in
stos
jo
aam
cmpl
div
clc
ficomps
xchg
pop
xchg
sub
lea
call
xor
or
and
lcall
mov
enter
gs
push
xor
test
cmp
in
cli
repz
std
push
jnp
mov
out
adc
sahf
ret
jle
xchg
ljmp
cwtl
cmpsb
xchg
dec
sub
lock
psubsb
inc
add
mov
in
call
xor
stc
xor
cs
das
xchg
test
lods
pop
sbb
sub
int3
sbb
jns
in
push
add
ret
rclb
leave
add
rcll
cmp
mov
out
push
cli
sub
in
repnz
push
std
push
and
movsb
repz
and
push
fdivrs
inc
add
dec
stos
sbb
fdiv
mov
inc
das
cmp
adc
jecxz
stos
adc
test
cmp
dec
mov
mov
jb
ret
gs
sub
or
mov
std
ja
aas
sbb
lods
mov
inc
cmp
outsb
mov
add
mov
loop
and
scas
lods
lods
mov
push
xor
pop
cwtl
pop
mov
stc
ret
aam
inc
push
xor
cmp
neg
cs
mov
xor
xchg
lods
mov
lea
mov
jmp
sar
dec
int
push
jg
push
std
ja
jbe
jbe
cmp
add
push
movsb
test
movsl
pop
cmc
into
jg
dec
push
addr16
int3
sbb
sub
stos
or
out
sbb
and
imul
push
repz
into
dec
addr16
filds
push
xchg
call
dec
lret
fisttps
or
push
adc
mov
dec
xor
loopne
lcall
mov
mov
pop
fcmovnb
movsb
sbb
push
inc
popf
xchg
sub
sahf
stc
sub
cwtl
push
dec
mov
mov
lea
add
sbb
enter
adc
movsl
enter
dec
stos
inc
hlt
clc
mov
pop
push
or
sbb
jp
add
insl
lds
icebp
shrb
hlt
jnp,pt
sbb
xchg
movlhps
push
xchg
out
sbb
iret
pop
fwait
lret
sbb
inc
fiadds
stos
shrl
lcall
je
mulb
mov
jl
or
jmp
mov
jmp
mul
jp
mov
bswap
int3
cmpsl
lods
jmp
add
pushf
adc
icebp
hlt
sub
imul
push
sub
pop
pop
outsl
mov
enter
inc
add
jbe
jb
cwtl
clc
inc
ret
sub
jo
sarl
popa
mov
jb
push
push
inc
and
pop
xchg
adcb
push
pop
inc
mov
movsb
xchg
movsl
mov
mov
sti
rolb
sub
orl
movsb
and
mov
xchg
jg
int
imul
cwtl
hlt
xor
mov
les
mov
or
shll
mov
lahf
mov
lret
mov
js
aam
mov
xchg
inc
mov
xchg
stos
push
push
xchg
jle
xlat
std
stos
inc
lret
rclb
fs
mov
shll
imul
std
mov
jl
test
lret
mov
shr
leave
leave
pop
xchg
mov
repz
dec
lods
hlt
data16
arpl
out
insl
push
js
pop
and
dec
cmp
sbb
mov
cs
and
and
inc
lods
xchg
daa
dec
push
xor
add
dec
jle
in
loope
adc
stos
jns
xchg
lret
jne
pusha
xor
fisttps
dec
inc
vpminsw
addr16
adc
or
cmpsb
enter
rorl
dec
xchg
in
push
xor
add
out
lods
sbb
jae
pop
xor
stos
xor
movsb
loope
xchg
add
sahf
inc
cs
jb
sbb
or
xchg
out
es
in
inc
push
iret
pop
and
inc
decb
mov
push
pushf
call
mov
adc
imul
insb
je
push
mov
or
cmpsb
mov
and
cltd
dec
jmp
push
dec
in
stc
fcomps
dec
jl
push
add
pop
dec
and
bound
loopne
dec
repz
adc
testb
loope
push
or
test
loop
hlt
es
mov
dec
cmc
mov
gs
xor
rorl
mov
aaa
jecxz
inc
adc
cmp
xchg
out
andb
fmull
fs
loope
cwtl
push
mov
adc
sbb
mov
loopne
adc
rcr
mov
inc
and
loopne
adc
popl
movsb
lock
cmp
push
fsubrs
nopl
icebp
jmp
jg
push
mov
pushf
mov
int3
lret
jp
push
mov
dec
xchg
sbb
mov
mov
popf
sbb
int
push
add
ret
movsb
pop
and
pop
jmp
mov
in
in
xor
je
lock
adc
dec
cmp
insb
ljmp
dec
xor
jns
mov
call
decl
mov
cld
loop
add
sub
jns
aam
mov
sbbl
ret
outsb
push
js
loop
add
xor
mov
and
jno
inc
and
dec
mov
xchg
out
xor
or
push
scas
mov
jle
jge
shl
xor
push
mov
mov
sub
and
cmp
sbb
dec
loopne
gs
xchg
cmp
hlt
cltd
push
add
add
addr16
push
push
sbb
xchg
pop
and
mov
sub
pushf
test
adc
push
xor
ljmp
addr16
mov
inc
pop
adc
adc
sub
dec
stos
jne
imul
imul
aam
pop
in
das
and
cs
xchg
daa
mov
fisubrl
add
loop
mov
mov
cmp
cmpb
lods
push
lods
test
aam
arpl
int3
sbb
pop
push
out
pop
jecxz
jle
out
gs
jno
scas
movsb
shlb
int
jmp
lock
sbb
in
add
push
mov
mov
sbb
ds
mov
inc
dec
lods
sbb
mov
out
loopne
sti
mov
cmp
fisubrs
lea
repz
inc
inc
push
loopne
push
ficoms
adc
mov
lret
sub
in
xchg
rolb
int
shrb
add
push
push
mov
jmp
sahf
adc
out
inc
mov
lds
sub
shll
out
nop
movsb
lret
cmp
cmp
repnz
cmp
imul
lret
std
and
bound
mov
popf
push
test
daa
sbb
mov
imul
add
pop
lret
jl
xor
jle
cmpl
inc
mov
xchg
scas
hlt
mov
push
dec
test
cmpsl
fsubl
xchg
jo
cmp
sbbb
jg
mov
jo
loop
hlt
mov
lds
push
bound
stos
movsb
cmc
int3
mov
and
add
push
dec
xchg
loop
inc
movsb
in
cmpsl
cli
inc
adc
mov
ljmp
or
push
pop
xchg
fstpt
add
mov
ret
cmpb
out
sub
dec
in
outsl
setno
and
xorl
outsb
mov
dec
fs
ja
int3
mov
pop
pop
test
push
in
cmpl
jns
mov
addr16
xchg
adc
mov
test
mov
xchg
pop
rorl
jmp
xor
repnz
test
pusha
mov
insb
mov
nop
cli
aas
ds
mov
popa
bound
sahf
in
sub
xchg
pop
test
inc
adcb
lock
adc
popa
sti
and
jge
mov
out
xchg
jl
mov
movsl
gs
lock
into
adc
rcr
les
push
pusha
mov
sbb
and
fists
cmp
sbbl
dec
cmpl
adc
int
in
xor
call
pop
jb
inc
sub
fsts
pushf
adc
cwtl
mov
stos
insl
fiaddl
cli
inc
xchg
das
std
adc
in
cmpsl
push
icebp
pushf
adc
gs
cmp
aam
jmp
pop
push
push
sbb
sahf
jns
out
cmp
mov
pop
xor
mov
in
popf
push
xor
rdpmc
testl
mov
loope
scas
mov
jp
cwtl
xchg
push
ss
popf
xchg
in
add
pop
or
clc
mov
dec
pop
add
pop
outsl
dec
movsl
and
or
adc
mov
push
jb
lock
and
cltd
xor
and
neg
fwait
or
push
sarb
jb
add
mov
aas
ljmp
mov
sbb
fsts
into
daa
dec
hlt
in
rclb
mov
std
pusha
in
ja
push
mov
rcll
cmpsl
sbb
add
sub
and
jle
dec
xchg
mov
ret
ja
pop
mov
pop
mov
and
and
cld
stos
test
mov
faddl
test
sub
lret
mov
cmp
sbb
xchg
stc
sub
movsl
imul
jb
fiadds
cmc
stc
jae
call
fisttps
pop
pop
lock
js
or
or
rclb
push
xchg
pop
out
add
push
push
mov
mov
inc
pop
dec
jg
fcoms
jnp
stos
cmp
aam
cmp
dec
divb
mov
bnd
pop
push
mov
stc
je
and
jb
stc
loopne
jg
into
cmp
enter
xor
mov
dec
scas
and
xor
mov
jge
jne
idivl
or
sarl
add
leave
inc
movsl
mov
xchg
cmp
ret
and
pop
pushl
test
cvtps2pd
mov
dec
daa
push
dec
stos
xchg
mulb
add
test
test
shrb
cmp
push
call
mov
mov
push
add
dec
sub
fwait
call
sbb
lods
push
mov
jge
xchg
gs
and
fcomps
dec
sbb
in
stos
xadd
mov
cmp
lds
cltd
or
pop
pop
adc
push
shrb
and
cmp
orl
ret
sub
jo
sbb
scas
rcl
idiv
roll
adc
push
fcomip
xor
int
inc
push
inc
sbb
mov
cmp
test
insb
cmp
jne
in
xlat
imulb
mov
fldenv
lock
pop
out
add
xor
mov
push
shll
mov
imul
xchg
mov
lock
jmp
ret
aam
ja
shll
rolb
sbbb
or
movsb
iret
or
call
sub
dec
dec
ret
push
std
mov
ja
fcmovu
sbb
xchg
xchg
inc
test
mov
mov
ss
inc
and
pop
out
push
jb
or
int
mov
or
repnz
roll
fidivl
ret
cmpb
sbb
cmp
cmp
mov
or
jg
and
stos
push
fists
stos
out
cmpl
jns
testl
lock
jecxz
mov
sbb
or
add
and
adc
xchg
xchg
xchg
js
xchg
ss
fsubs
sbb
cwtl
dec
sub
add
test
xlat
cmp
mov
jne
pop
add
lahf
sbb
test
int3
xor
add
dec
add
mov
lcall
mov
aad
jle
xchg
jae,pn
lcall
push
sbb
test
lea
mov
lea
sbb
inc
lret
or
cmpsb
pop
loopne
stos
xchg
adc
sahf
sar
jne
int3
pop
push
push
mov
xchg
inc
cmp
sbb
jns
push
xor
das
out
xor
sbb
insl
mov
adc
jne
dec
push
pop
repz
jo
stos
into
jmp
in
mov
lds
mov
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
mov
test
rorl
fwait
xchg
lea
aad
shlb
loope
push
xor
insl
dec
in
les
add
add
add
add
and
add
inc
add
addb
add
add
add
pop
add
addb
add
jo
add
add
add
rolb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
rolb
push
add
add
add
add
pop
add
add
add
add
add
into
pop
add
add
add
add
push
add
dec
add
dec
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pusha
pop
add
inc
add
add
add
add
add
addb
add
roll
addl
add
loopne
add
clc
push
add
inc
add
sub
add
and
add
inc
add
add
add
add
rol
lock
js
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
clc
ud0
rolb
filds
add
filds
add
add
aas
in
add
pop
call
add
add
add
push
add
add
add
add
add
psubb
rorb
add
pop
cld
add
pop
incb
add
incl
add
addb
inc
add
clc
pxor
push
out
cld
pop
incl
add
add
add
adc
add
add
add
add
add
and
incl
add
or
test
add
add
add
add
sbb
and
xor
cwtl
cmp
out
nop
mov
stc
mov
cmpsl
imul
xchg
out
in
rcrl
adc
jmp
sbb
lock
pushf
dec
aam
add
cmp
jae
inc
adc
mov
shlb
pop
inc
in
sub
lretw
mov
sub
pushf
mov
xor
outsb
inc
pusha
arpl
cmpsl
jb
xor
sub
add
mov
or
or
jmp
mov
pop
pop
sbb
mov
pop
mov
cltd
push
fs
add
lret
fnsave
fldl
xor
ja
cltd
pop
insb
push
out
popl
ret
push
sbb
sbb
daa
cld
decb
mov
in
imul
aad
cmp
imul
xchg
xchg
pop
aam
push
mov
out
sub
dec
and
in
push
xchg
mov
jp
push
cs
cmp
mov
hlt
xor
push
lret
lock
ss
add
cmp
lret
lahf
test
imul
lock
xchg
cmp
push
out
lahf
push
sub
cmpsl
jne
loope
scas
sbb
test
ljmp
jp
jg
pop
push
in
jno
xchg
xchg
add
subb
enter
out
cmp
push
cld
dec
mov
sub
clc
scas
andl
test
popf
sub
fiaddl
pop
and
outsl
fiaddl
mov
cmp
sahf
test
or
fstpl
sub
jbe
std
ret
mov
jns
loopne
fs
xor
xor
add
in
mov
insl
test
ret
in
enter
xchg
xchg
ret
xchg
shlb
push
fwait
pop
lcall
out
jnp
push
repz
sub
adc
pusha
push
push
cs
push
inc
stos
push
mov
mov
dec
pop
adcl
adcb
add
adc
lds
xchg
mov
adc
or
mov
addl
adc
jns
mov
adc
pop
push
mov
sbb
test
ret
lea
fisubrl
xor
fiaddl
xor
xchg
dec
pop
std
out
repz
lock
es
pop
mov
jnp
out
out
or
nop
dec
cmp
mov
movsb
lcall
sub
shrl
dec
add
mov
xchg
stos
jnp
daa
jge
mov
cmp
cmpsb
jg
lock
add
jge
jae
inc
pushf
pop
int3
pop
movsl
pop
xchg
add
icebp
sahf
stos
push
stos
cmpb
push
mov
mov
icebp
push
in
aas
jl
add
stc
xlat
mov
icebp
xor
dec
das
jmp
inc
and
mov
std
iret
sahf
les
xchg
and
mov
fisubl
in
xchg
jg
std
or
jo
mov
sub
or
stc
xchg
push
mov
shl
inc
cltd
hlt
ss
and
mov
add
inc
push
incl
mov
popa
out
roll
xor
arpl
mov
sbb
mov
xor
imul
je
dec
push
mul
lea
mov
in
repz
cmpsb
inc
sbb
js
dec
inc
sub
ds
xchg
mov
xchg
addb
rep
sbb
notl
lea
addl
dec
sbb
es
xor
jbe
push
lret
inc
push
call
fwait
mov
pop
scas
fisttpl
lock
sbb
xor
inc
pop
stos
test
pop
imul
pop
adc
test
pop
fimuls
add
mov
jg
fnstenv
call
xor
add
jl
mov
push
popa
movsb
or
push
popf
cmp
and
daa
stos
fsubs
icebp
add
daa
cmc
xor
mov
lds
das
sbb
push
inc
fimuls
call
faddl
dec
pop
push
xor
and
mov
push
ja
pop
clc
cs
mov
stc
jae
xchg
add
stos
fwait
cmc
pop
jbe
mov
ljmp
sahf
lahf
je
or
scas
jge
mov
mov
imul
jns
lret
mov
adc
xor
and
add
ror
imul
pop
andl
nop
mov
das
fwait
cmp
cs
and
dec
hlt
push
jle
call
xor
inc
test
fnstcw
roll
test
cmp
jecxz
jp
xchg
imull
and
jnp
lahf
roll
shr
nop
adc
outsl
jmp
stos
cli
mov
mov
xor
mov
xor
xlat
jle
jbe
mov
inc
rclb
es
xorb
mov
insb
xchg
xchg
jecxz
mov
mov
lret
cld
jmp
dec
inc
sbb
mov
jp
push
aad
js
xor
rorb
lds
sbb
push
push
flds
dec
movsl
rol
lds
fdivs
fcomps
dec
je
fdivl
jne
cmpb
mov
jecxz
pop
test
movsb
negb
ret
int3
mov
hlt
push
push
das
popf
or
nop
outsl
adc
push
push
xor
jnp
test
xchg
xchg
cli
jbe
ljmp
jp
mov
mov
push
mov
pop
cmp
insl
subl
cwtl
stos
push
inc
mov
outsb
test
shl
sub
add
ja
jns
dec
lahf
xchg
mov
mov
push
enter
xor
xchg
mov
jmp
mov
sbb
imul
lods
lods
xor
jmp
xor
jns
lock
daa
mov
jae
xor
jae
sbb
pop
pushf
movsl
repnz
mov
cmpsb
mov
test
aaa
lods
pusha
mov
mov
scas
mov
push
lods
mov
lret
pop
sub
xor
inc
cmp
cld
cmpsl
ja
out
loop
xchg
push
sahf
dec
mov
je
popf
jmp
daa
xchg
xchg
iret
addr16
xor
dec
pop
dec
adc
nop
loope
mov
jmp
roll
arpl
test
inc
push
stc
pusha
jo
push
je
loopne
jl
or
stos
pusha
mov
test
xor
outsb
mov
lods
das
je
xor
inc
cltd
adc
test
dec
cwtl
pop
cmpsl
scas
cmpl
repz
pop
sub
jmp
and
mov
mov
lea
jecxz
mov
and
in
pop
cmpsb
aas
in
rclb
push
jl
sbb
push
mov
mov
push
outsb
lock
das
gs
mov
fs
test
sub
lahf
xor
andl
sti
ljmp
popa
testb
jns
sub
enter
addr16
das
push
inc
and
fcompl
dec
pushf
popf
dec
shrb
scas
aam
test
xchg
cmpb
ds
or
ds
adc
mov
das
iret
jmp
mov
in
sub
addl
xchg
sub
add
incl
mov
cmp
mov
inc
in
ret
lret
or
testl
addl
mov
out
push
mov
shlb
shll
addb
inc
mov
imul
loop
arpl
scas
bound
shlb
std
push
mov
inc
repz
stc
ds
sbb
and
push
xorb
adc
leave
stc
pusha
ja
mov
movsb
int3
cmc
mov
add
lahf
jbe
add
xchg
fs
inc
mov
mov
inc
and
pushf
ja
sub
push
stos
inc
addl
aaa
ljmp
jns
mov
clc
fisubs
inc
fistl
repz
dec
das
or
dec
mov
cld
push
enter
sbb
adc
lods
pushf
test
sbb
xor
addl
cmp
and
icebp
ss
sbb
sub
mov
out
jb
mov
inc
push
lods
inc
push
jae
loopne
pusha
pop
mov
push
xchg
xor
jmp
dec
jecxz
pop
jg
insb
mov
leave
je
inc
mov
test
xchg
push
cs
and
imul
fcoml
or
xor
dec
notl
enter
jns
std
xchg
data16
mov
lret
shl
mov
sbb
pop
jo
cmpsl
xlat
std
xchg
stc
mov
add
out
incl
into
mul
lret
clc
cmpsl
hlt
cmp
push
in
iret
pop
dec
and
pop
cwtl
std
pop
test
jne
movsl
in
push
mov
clc
nop
fnsave
cmp
adcl
cmp
cmp
pop
add
cmpl
jle,pt
mov
mov
sahf
jne
mov
hlt
xlat
ret
scas
mov
iret
cmp
mov
sub
loope
in
loopne
xchg
dec
ds
div
in
int3
lcall
xor
xchg
jae
int3
push
ficoml
cmpsl
lods
adc
and
jno
push
popf
sub
push
pop
sub
enter
pushl
xor
dec
pop
cmp
pop
xor
gs
jnp
mov
cmp
sub
stc
repz
xor
cli
pop
mov
repnz
outsl
cld
xor
jp
inc
cmp
mov
jecxz
pop
jecxz
xchg
jmp
add
add
or
inc
and
cmpsl
pop
cmp
mov
dec
xchg
xor
fstpt
lods
mov
pop
push
xchg
rclb
stc
add
mov
or
jp
negl
mov
pop
in
jns
xor
mov
mov
test
pop
shll
les
sub
push
jo
mov
push
in
and
js
dec
xor
call
mov
mov
ja
add
mov
fstpl
popf
dec
or
or
das
je
out
push
dec
imul
xchg
mov
mov
jge
clc
sbb
jne
arpl
mov
push
push
filds
cmp
shlb
cmpsl
aad
add
dec
loope
cs
out
sahf
jns
pop
daa
xor
cltd
mov
cmpsb
add
aam
add
into
dec
mov
je
movsl
dec
outsb
mov
xor
cmp
dec
btr
pop
mov
nop
hlt
lods
mov
push
daa
fprem
iret
fdivs
jbe
mov
fimuls
pop
test
movsl
xor
push
mov
lds
push
xor
sbb
test
push
jmp
imul
xchg
cmc
sbb
cwtl
pop
outsl
jae
std
enter
inc
pushf
ficoms
lret
add
and
std
jb
test
sti
jno
loopne
outsb
push
and
or
stos
call
jne
les
dec
or
in
stc
popa
dec
add
jns
dec
jg
mov
mov
mov
add
imul
test
adc
ss
aaa
std
sti
mov
aad
loop
in
pushf
aaa
pop
gs
nop
dec
jle
mov
mov
mov
mov
int3
sbb
mov
aaa
sub
out
dec
mov
mov
or
cmpsl
xchg
and
pop
fincstp
test
or
push
xlat
orb
ficoml
in
push
das
inc
mov
enter
sub
xchg
push
pusha
or
rolw
sbb
mov
out
sbb
into
out
push
les
frstor
cmp
pop
out
pop
ret
dec
loopne
nop
cld
jecxz
les
sahf
daa
xor
ss
push
dec
push
mov
inc
in
pop
insl
aas
dec
rcl
pop
sub
mov
ror
pop
aad
lcall
xchg
lds
inc
je
mov
ds
or
nop
jbe
push
call
out
xor
jnp
aad
xor
shrb
jo
mov
das
scas
inc
adc
mov
pop
sarb
fisubs
incl
fsubp
jbe
add
jl
cs
add
pop
fsubrs
xlat
jmp
push
or
out
bound
loopne
dec
or
adcb
scas
mov
sbb
xchg
mov
in
adc
mov
jae
fcoms
mov
jecxz
push
push
dec
aad
insl
xchg
enter
xchg
fnstenv
fnstsw
cltd
jo
push
pop
movb
pop
lock
mov
sbb
je
and
insl
sti
arpl
xchg
stos
and
imul
adc
arpl
sahf
in
mov
dec
dec
push
adc
push
mov
aas
pop
stc
cmp
cmp
clc
mov
mov
push
mov
jecxz
dec
pop
mov
sub
cld
push
jmp
ss
pop
push
adc
insb
add
icebp
js
inc
stos
push
test
out
xchg
std
aad
and
shl
and
mov
mov
dec
mul
imul
lret
inc
push
lea
xor
rorl
sahf
sbb
aam
psubsb
pop
sbb
ja
lahf
mov
lret
jge
push
hlt
seto
enter
repnz
into
xor
lcall
loop
in
push
dec
inc
dec
dec
scas
mov
aam
js
dec
mov
aas
movsl
cmp
inc
or
rolb
dec
xor
or
insl
out
scas
dec
adc
sub
call
or
gs
testl
loopne
jo
push
aam
call
cld
push
mov
addr16
test
or
bound
inc
pop
inc
or
cmp
div
adc
xor
push
dec
test
out
lea
inc
sbb
mov
test
inc
fwait
das
fwait
jbe
jne
xor
in
dec
test
push
call
pop
or
ja
icebp
dec
es
pop
das
pop
xlat
xchg
addr16
cltd
fstpt
dec
imul
xchg
pop
ror
xchg
sahf
dec
jo
adc
fiaddl
or
pusha
loope
cli
add
xlat
xchg
orl
xor
pop
sub
adc
cmpsb
mov
push
mov
and
pop
mov
sbb
add
mov
out
shll
imulb
inc
sti
or
and
sub
push
sahf
jbe
je
xchg
xlat
pop
out
jg
cmc
add
jb
loope
out
mov
xchg
nop
mov
sbb
mov
xchg
cld
imul
sarl
push
push
stc
enter
sbb
cmp
jo
mov
int
insb
lcall
cmpsb
sub
jmp
dec
stos
test
mov
test
ret
ror
mov
call
clc
inc
fdivl
scas
ret
mov
xor
les
mov
push
sub
lret
xchg
daa
sarl
sbb
push
daa
cmp
lods
out
addl
idivb
or
cli
mov
jo
jecxz
fmull
popa
js
jno
xchg
inc
leave
lods
fmuls
out
adc
add
out
aas
cmpsb
push
arpl
fsts
mov
xor
xchg
bound
push
stos
cltd
cltd
jns
fisubs
test
sbb
push
ss
dec
pop
out
and
push
push
add
lea
push
inc
fwait
aad
hlt
mov
rcrb
in
adcb
push
lret
jmp
add
jae
outsl
mov
ja
and
outsl
movsl
ss
popf
mov
jns
cmp
mov
pop
nop
adc
push
add
push
or
scas
in
int3
ret
cmp
sub
test
movsb
push
cmp
fsubrl
jns
xchg
or
sub
jmp
mov
mov
fsub
mov
movsb
call
inc
push
pushf
shlb
mov
bound
inc
cli
popf
xchg
rolb
sub
outsb
cltd
mov
and
pop
jmp
pop
in
jmp
jg
iret
mov
pop
dec
and
cwtl
inc
imul
jne
cltd
rcr
sbb
jp
pushf
jmp
sarb
nop
or
aad
stos
fsubrs
mov
cmc
into
mov
ret
sbb
and
fbstp
pop
xor
jne
mov
les
out
shlb
xorw
dec
sbbl
inc
mov
inc
mov
outsb
dec
scas
popa
jecxz
xor
repz
push
shrl
lods
pop
mov
or
mov
popf
popf
imul
imul
dec
cmp
or
sub
and
xor
outsb
or
test
lahf
popa
jge
sub
inc
aaa
cli
mov
mov
pop
jns
leave
mov
clc
xchg
xchg
orb
sti
pop
aas
inc
inc
mov
sub
dec
jbe
xchg
mov
mov
aas
stos
lock
mov
icebp
adc
sti
mov
lock
int3
scas
sub
or
stc
sub
adc
ds
pop
ret
mov
mov
sub
cmp
mull
sbb
sti
xor
lret
xor
cmp
gs
fsubp
mov
adc
mov
mov
in
or
mov
jmp
mov
xchg
shrl
pop
inc
push
scas
add
add
pop
push
xchg
inc
xor
out
jmp
cmp
arpl
push
cmp
dec
inc
jmp
scas
in
in
lock
cli
mov
out
or
mov
outsl
dec
jl
sbb
rclb
das
movsb
stos
add
popf
xor
mov
stos
push
pop
cmp
mov
sub
jge
xchg
testb
push
lods
sbbb
push
cmp
mov
fsubs
pushf
inc
sbb
or
mov
or
jp
orb
sbbl
push
mov
lcall
lds
scas
xchg
dec
fcoms
xchg
aad
xchg
scas
pop
mov
push
mov
cmp
cltd
out
out
cmp
cltd
push
ret
ja
cmp
push
or
mov
leave
push
fisubs
adc
adc
mov
xlat
fwait
mov
and
xchg
fwait
mov
mov
pop
sub
sahf
ror
out
outsb
lret
jnp
push
xorl
adc
mov
sub
dec
jae
imul
ret
mov
dec
and
or
sahf
addr16
inc
push
mov
pmaddwd
movsb
mov
pause
jmp
shl
adc
pop
push
subb
popa
loopne
ds
imulb
scas
adc
cltd
imul
stos
test
add
and
or
sarb
mov
cld
xor
call
test
cmpl
inc
xor
pop
int3
mov
out
ja
or
push
fsts
loopne
mov
fiaddl
enter
add
mov
das
pop
mov
pop
sahf
ljmp
push
cmpsb
or
and
and
or
jp
push
fsubl
test
ret
cli
push
shrl
xchg
and
xor
into
and
dec
into
cwtl
push
or
xchg
lods
bound
xchg
push
xor
adc
push
cmp
dec
mov
cmp
pop
pop
testl
sbbb
int
fcompp
jae
xchg
idivl
imul
push
inc
or
loopne
insb
addl
xlat
daa
outsb
aad
jnp
daa
or
mov
repnz
xor
dec
mov
jmp
push
sub
mov
jno
push
push
push
adc
ret
xchg
jns
nop/reserved
cmp
cld
pop
xchg
mov
insb
lret
hlt
les
mov
cmp
aad
xor
and
mov
fidivrl
aaa
mov
cmp
repnz
add
sbb
mov
pop
mov
rorb
add
mov
rorb
imul
stos
mov
mov
fbstp
cmpsl
push
dec
jp
xchg
push
add
inc
clc
gs
pop
mov
mov
aam
inc
cld
cmp
xor
mov
push
icebp
cmp
xchg
mov
les
mov
add
sub
rorb
dec
arpl
test
xlat
ficoms
ret
orb
xchg
push
movsb
sbb
cli
test
scas
insl
jne
sbb
fcompl
in
pop
fdivr
xor
sarb
orb
push
arpl
mov
out
das
inc
jbe
xor
leave
push
ss
jo
push
push
pop
sbb
pop
or
push
jp
popa
jne
mov
in
mov
jl
sub
dec
and
mov
mov
lea
jmp
int
insb
adc
jmp
xchg
dec
nop
xlat
and
xchg
daa
xchg
js
jl
mov
fwait
cmp
loopne
subl
mov
jecxz
lret
cltd
pop
call
jmp
and
xchg
out
mov
nop
mov
or
fmuls
les
jecxz
xor
mov
das
xchg
scas
enter
fsubr
aad
adc
sbb
inc
fnstsw
mov
add
xor
xchg
lret
xor
repz
dec
or
mov
mov
loopne
test
xchg
lcall
push
pop
pop
push
int3
daa
lock
mov
cmpsl
insl
xchg
pop
mov
pop
ds
pop
pop
mov
cmp
push
rclb
pop
ja
mov
push
addr16
fcmovb
hlt
jg
fildl
sub
rorb
testl
cmp
cmp
loop
sarb
add
mov
out
outsb
shrl
push
push
clc
out
aad
and
mov
and
xor
jnp
out
xor
pop
or
fsubr
inc
dec
xor
pop
sub
stos
ss
insl
xor
dec
or
push
test
adc
nop
mov
mov
jnp
sub
out
xchg
inc
mov
inc
jmp
shrl
pop
insb
jp
sbb
or
push
dec
imul
ficompl
in
lock
fsubp
shrl
fst
mulb
sbb
mov
jae
in
pop
insb
adc
adcb
aaa
xor
test
mov
adc
lret
sahf
mov
cli
test
ret
inc
and
push
and
cmpsl
or
std
mov
ljmp
cld
mov
into
std
jno
sarb
cld
sub
into
subb
lahf
bndstx
mov
push
xor
push
and
mov
movsl
adc
popa
lods
xchg
push
cltd
imul
stos
sbb
ljmp
inc
fs
push
adc
les
rclb
xor
jnp
dec
out
clc
out
or
add
scas
push
ds
xchg
flds
or
dec
aad
and
inc
ret
dec
mov
iret
xchg
xor
inc
cmc
add
sti
mov
add
mov
repz
cld
push
pop
sbb
pusha
cmp
dec
adc
adc
and
lahf
sbb
mov
and
add
push
insl
loop
dec
dec
add
sti
mov
popa
and
pop
sub
ror
and
shlb
fstl
xor
xchg
sbb
outsb
push
add
push
insl
inc
xchg
stos
xchg
hlt
aas
insl
stc
dec
mov
push
fbstp
mov
insb
sbb
mov
xor
ret
and
stos
jp,pn
cltd
fists
out
enter
pop
iret
inc
ret
cmc
mov
jns
int
dec
or
jbe
mov
xor
or
divb
push
sbb
jb
lahf
sub
mov
das
popf
lods
popf
loop
mov
inc
push
inc
out
lahf
pushf
or
inc
inc
lret
sbb
xchg
into
cs
mov
dec
or
jmp
push
sbb
inc
out
xor
push
stos
lahf
dec
push
cmpsb
mov
pop
test
addr16
movsb
push
jae
add
dec
int
sub
inc
mov
cs
daa
bound
push
movsl
clc
xchg
jp
pushf
pop
push
in
xchg
cmp
push
inc
push
cli
outsb
jecxz
fs
mov
mov
mov
xchg
pop
testb
fcmovu
sahf
sti
mulps
rcr
xchg
jg
lock
fwait
aaa
xchg
arpl
add
data16
cmpsl
and
das
repz
add
sub
movsb
sbb
adc
pop
jbe
xor
pop
in
cli
push
xor
shlb
subl
jnp
popf
mov
gs
or
mov
xor
adc
and
dec
xchg
mov
jns
fistpll
fs
jne
test
sub
cmp
sarb
mov
push
sar
inc
or
hlt
adc
std
adc
sub
inc
out
repz
add
scas
jge
xchg
inc
jnp
pop
lahf
or
popa
xor
dec
or
repz
xchg
jmp
pop
bound
mov
sbbb
or
into
inc
xchg
add
movsb
inc
jns
add
ds
divl
shrl
ja
dec
int
call
stc
pop
gs
and
ja
push
inc
rorl
lods
inc
orb
rcll
sub
sub
sbb
jo
out
add
fsubrs
mov
or
cmp
imul
test
lret
push
sub
lahf
fisttpll
mulb
ljmp
adc
mov
jecxz
push
or
sbb
mov
push
and
test
test
mov
jb
pop
or
xchg
jo
gs
pop
fwait
loope
lret
add
cmp
mov
xchg
cmc
outsb
cmp
mov
xor
lock
cmc
xor
cltd
inc
arpl
loope
jp
jo
es
pop
arpl
lds
stc
xor
fisttpl
mov
mov
jecxz
mov
xchg
sbb
cmp
pop
movsl
imul
sub
or
das
js
out
mov
jl
jnp
popf
fs
jp
shlb
inc
out
btr
mov
xor
popf
lret
repnz
xchg
push
aas
inc
fiaddl
adc
xchg
sub
insl
sub
mov
ss
mov
pop
inc
sub
repnz
dec
cwtl
jp
jmp
dec
fidivl
insl
cmpsb
fwait
cwtl
jbe
jecxz
int
push
dec
jmp
adc
jbe
loopne
push
xchg
add
out
dec
dec
iret
xor
pop
orl
daa
aas
fisubrl
jecxz
xchg
sbbb
fbstp
or
mov
push
mov
dec
xchg
out
and
int3
enter
cmpb
push
jae
adc
pop
jbe
pop
mov
je
inc
or
and
cwtl
shl
test
xor
xor
sti
pop
iret
sub
inc
inc
stos
xchg
pop
ficoml
lret
mov
jnp
ror
dec
cli
in
movsb
or
out
mov
loop
sbb
mov
mov
stos
dec
pop
out
lret
or
dec
mov
cs
push
out
cmpsl
jl
test
int3
cmp
movsl
sub
pop
xchg
or
sub
cltd
hlt
xlat
pop
lret
fsubrl
mov
xchg
add
sub
xor
test
cli
shlb
sbb
or
cmp
stos
add
push
or
mov
mov
inc
add
cmp
dec
in
stos
push
add
outsl
dec
jle
lods
std
inc
lock
je
gs
mov
jae
arpl
jae
adc
outsl
cmp
xor
mov
mov
lcall
cmp
sbb
mov
mov
lret
mov
xchg
push
mov
jge
jg
mov
lret
pop
fldl
arpl
adc
movsb
loopne
std
daa
repnz
insb
and
insl
pop
sbb
insl
inc
rorl
xor
insl
push
mov
rcrb
call
push
xor
cld
push
cltd
shlb
sbb
setbe
adc
cmp
lret
dec
sub
fldenv
out
dec
pop
sub
mov
pop
lods
les
or
cmpsb
and
test
mov
or
mov
and
and
push
sarb
sbb
or
cltd
mov
dec
jno
mov
lret
inc
xchg
add
cmpsb
das
sbb
pop
mov
stc
inc
lret
nop
cmp
inc
xor
dec
stos
or
sub
cmp
loope
pop
icebp
je
shlb
fidivl
mov
incb
mov
mov
push
cmp
cltd
cltd
jns
inc
mov
icebp
clc
add
shlb
fbld
mov
mov
adc
dec
inc
shlb
pop
cmp
fucomip
add
sub
test
pop
lahf
jecxz
dec
cmc
popf
fdivs
jmp
jo
bound
adc
inc
cmpsl
popf
push
pop
adc
lea
or
push
mov
mov
scas
insl
lea
xor
iret
jbe
dec
iret
fistpll
shl
jg
xor
sub
subl
inc
cmc
and
sahf
sahf
jmp
cmp
push
test
jp
imul
arpl
aaa
adc
in
and
xor
mov
pop
loope
loopne
jnp
nop
and
push
push
mov
cmp
aas
arpl
ret
jle
push
cltd
jns
xchg
pop
orb
mov
pop
adc
sbb
sub
xor
mov
pop
loopne
mov
inc
outsb
outsb
push
addr16
and
repz
pop
cmc
das
jns
out
addr16
xor
sbbb
cli
push
xor
xchg
mov
popa
rcl
xrelease
xchg
mov
adc
sub
push
and
pop
and
arpl
mov
xchg
mov
xor
adc
pop
addb
lock
test
fucomp
dec
xor
test
pushf
cmpsb
pop
cmp
lods
xchg
fistps
xlat
push
js
rorl
xchg
and
sub
repnz
outsb
rorb
xlat
jno
sbb
adc
fnstenv
xchg
and
cltd
sbb
jle
pop
hlt
and
mov
test
out
stos
insb
stos
jle
bound
pusha
lea
xchg
sbb
das
jb
and
movsb
mov
jmp
lea
stos
sub
sub
cmp
push
rclb
iret
fs
pop
xor
je
add
data16
inc
mov
out
sbb
mov
paddq
ljmp
stos
sbb
test
sti
lret
dec
out
in
test
rcrb
inc
mov
in
aas
imulb
loopne
mov
addr16
pop
cmpsl
mov
xlat
push
or
and
dec
fcomps
fdivrp
mov
and
jecxz
push
jbe
push
inc
inc
jle
sub
or
xchg
adc
leave
sub
sbb
scas
mov
and
das
inc
jbe
mov
sbb
shll
push
aad
and
dec
pop
push
cmp
imul
mov
jecxz
mov
ret
cltd
mov
or
aaa
andb
inc
mov
cmp
lock
test
jecxz
imul
jl
mov
pop
es
or
movsl
loopne
xchg
mov
xor
fadds
mov
cmp
mov
push
movsl
sti
inc
mov
and
add
outsl
daa
adc
out
lret
sub
lock
add
inc
push
or
and
pop
divl
jg
pusha
or
loop
or
xor
fcoms
mov
push
ret
das
push
push
adc
mov
xor
out
adc
pop
dec
mov
mov
and
dec
lods
fldt
fimuls
push
dec
sub
ffree
xchg
add
in
mov
lods
mov
test
adc
movl
xor
cmc
dec
cmp
test
in
mov
ret
push
sub
or
fldcw
rclb
sahf
mov
dec
xor
sub
or
jecxz
lret
invlpg
imul
out
jne
inc
or
movsb
ja
push
xchg
lret
push
xchg
sbb
jae
insl
popf
mov
stos
push
std
int
aad
sbbl
repnz
and
sahf
sub
or
push
mov
mov
mov
fadd
fidivs
mov
scas
add
and
mov
int
mov
sbb
jbe
and
push
pop
cmp
adc
sbb
in
cmc
mov
cmp
xor
int
lds
aam
inc
push
mov
push
sub
lock
loop
call
nop
mov
mov
xchg
mov
push
mov
pushf
repz
pop
popa
leave
mov
outsb
aam
or
jge
out
movsl
pop
aaa
xchg
sub
repz
sarb
mov
jne
popa
add
jns
adc
fcmovnu
mov
push
insb
in
mov
ret
pop
lret
mov
pop
fstpt
outsb
in
push
mov
mov
xlat
mov
dec
jb
push
and
inc
js
imul
pop
cmc
setne
std
mov
inc
fsubrl
xchg
movb
hlt
jb
and
jp
jmp
in
xchg
fdivrl
sbb
es
mov
dec
nop
jp
adc
add
or
jmp
sub
xchg
push
mov
rcrl
ret
push
arpl
std
inc
mov
test
setbe
sub
lret
loope
xchg
xchg
mov
cmp
xchg
jnp
mov
mov
dec
mov
scas
in
and
pop
enter
das
sahf
xor
rorl
jecxz
mov
sbb
out
jecxz
fwait
pushf
test
in
mov
push
in
mov
enter
cmp
cmp
sub
xchg
or
orl
ljmp
ljmp
xchg
dec
fwait
jo
jno
lods
lea
mov
sbb
in
clc
xchg
sub
mov
notb
push
icebp
jg
dec
or
rol
pop
push
sbb
fmuls
into
in
push
or
testl
shlb
addr16
jmp
cld
or
ja
enter
testl
add
adcl
pop
pop
bsr
pop
outsb
xchg
lock
cmp
rcrl
dec
rcrl
push
push
pop
aas
hlt
jbe
jb
mov
ficompl
jp
shl
and
lods
data16
fcomip
push
pop
imul
sub
mov
pop
xchg
in
sbb
dec
add
jmp
mov
loope,pn
push
stos
inc
lds
push
sbb
xor
pop
out
adc
hlt
imul
test
inc
lods
hlt
mov
mov
xor
out
and
and
xchg
jmp
and
shrb
or
cmpsb
mov
push
push
mov
cmpsb
inc
imul
inc
mov
mov
sub
hlt
clc
icebp
and
jns
lock
lret
int
loop
sub
sbb
dec
push
xchg
arpl
mov
popl
sti
popf
push
pop
fldln2
lock
jmp
iret
sub
sbb
jp
add
inc
mov
mov
cmc
jg
sahf
mov
adc
jmp
lods
dec
jmp
mov
sbb
hlt
insb
mov
pusha
sbbb
jge
dec
dec
xor
and
test
jl
xor
test
lds
inc
jmp
xor
fs
mov
pop
jg
mov
fs
adcl
sarb
xchg
and
xchg
mov
sbb
stos
decl
stc
outsb
pop
xchg
xor
add
inc
int
add
std
and
sbb
sbb
inc
les
cmp
adc
jmp
mov
repz
mov
mov
sub
icebp
incb
out
mov
cmp
call
mov
stc
sbb
mov
gs
sbb
imul
or
hlt
insl
paddsb
out
out
mov
pop
fwait
ret
test
add
mov
jge
and
dec
inc
inc
or
sub
out
sub
dec
cmp
sub
ss
xchg
sub
imul
and
adc
mov
mov
mov
lret
mov
xchg
in
hlt
loopne
or
pop
out
mov
xchg
loopne
sarl
jo
mov
repnz
enter
dec
fnclex
inc
or
dec
dec
mov
mov
das
push
paddd
in
adc
push
push
jne
mov
nop
adc
sahf
mov
or
loope
test
and
push
icebp
xchg
sbbb
popa
dec
daa
cmc
popfw
cwtl
xchg
xchg
mov
repz
xchg
adc
stc
mov
mov
negb
out
or
sbb
jae
jns
in
xchg
stos
xor
or
in
repnz
imul
pusha
outsb
mov
int3
push
aas
inc
push
push
lock
jo
fisttps
jge
cmpsl
or
loop
push
imul
or
xchg
push
and
jge
xchg
sbb
inc
call
mov
scas
idiv
and
jmp
shll
fistl
out
aad
and
shlb
dec
mov
cmc
push
cltd
push
scas
outsl
sahf
adc
js
add
and
ret
adc
or
mov
mov
xor
mov
push
jbe
push
and
pop
int
dec
lcall
lock
mov
cli
iret
loopne
mov
les
push
push
out
cmpsw
rorb
notl
rorb
clc
cmpsb
mov
push
dec
leave
les
xor
cld
push
scas
aam
loop
outsl
add
push
pop
fimuls
inc
mov
sub
xor
mov
in
sbb
adc
mov
in
push
inc
fmul
out
mov
movsb
add
jne
nop
lahf
aam
dec
adc
xchg
adc
int3
stc
shl
mov
push
or
jp
pop
inc
sub
test
les
pop
aam
aam
inc
mov
imul
fcoms
fisubs
adc
pop
lret
jno
fistpl
jecxz
mov
mov
stos
ja
out
jmp
and
fwait
push
dec
and
and
sub
repz
sbb
fidivl
lret
addr16
dec
xor
pop
inc
icebp
mov
lret
ja
aaa
out
jle
js
movsl
sbb
lock
aam
lret
xchg
stc
jo
scas
jle
scas
repnz
pushf
mov
push
dec
data16
jmp
mov
add
pop
cmpsl
lret
xor
or
int3
adc
mov
jne
mov
adc
pop
and
test
stc
jbe
mov
push
nop
popf
fmuls
and
xor
int3
jg
and
mov
mov
dec
push
xlat
popa
cmp
mov
pop
loop
cmp
adc
shrl
jle
lock
or
enter
imul
call
cld
movl
out
cmp
sub
popa
dec
stc
xchg
and
add
cmp
adc
pop
jecxz
inc
out
xor
popf
outsb
dec
es
and
inc
mov
cmpl
sahf
add
xor
jp
jb
adc
sbb
ss
outsl
cmp
ret
mov
mov
jnp
shr
mov
dec
or
out
mov
lret
stos
mov
or
jb
mov
mov
ret
in
ret
ret
xor
mov
mov
dec
xlat
xchg
xchg
fadds
cmpsl
inc
xlat
outsl
push
xchg
in
and
xchg
add
cmp
lds
sbb
mov
ds
nop
iret
mov
dec
ds
bound
pushf
test
sub
xorb
inc
loopne
pop
orl
push
leave
in
jbe,pt
xor
jge
aaa
adc
andb
lret
dec
dec
jecxz
pop
xor
sbb
ret
push
or
aaa
aas
dec
push
jnp
dec
mov
cmp
adc
das
push
dec
out
lcall
lret
insb
cwtl
sbb
or
lret
pop
mov
stc
xor
fsubs
jge
mov
lock
jbe
ret
xchg
leave
adc
mov
loopne
std
jg
dec
inc
sbb
fs
scas
xor
rol
js
dec
or
mov
jbe
push
and
xchg
mov
test
and
roll
cmp
rorl
xchg
sarw
pushf
push
loopne
sbb
cli
les
lods
test
loopne
xor
jecxz
mov
stos
sub
inc
bound
or
cltd
jge
fsub
js
jp
or
cmp
jbe
sub
daa
pop
sahf
and
fildl
push
int
pop
out
mov
bound
jns
hlt
fildl
cmp
cltd
fsubl
gs
sub
rorl
imul
pop
dec
repz
mov
popl
xor
pop
stc
fwait
dec
mov
jne
rolb
leave
push
ja
push
pusha
daa
mov
mov
mov
les
xchg
fs
inc
adc
int
cmp
cmc
les
arpl
das
push
xchg
xchg
dec
adc
mov
idivb
fistps
mov
pop
out
adc
repnz
sbb
sarl
cmpsl
xchg
nop
sbb
adc
or
pop
decl
pop
add
sbb
call
imul
push
loop
aaa
stc
shrl
add
cltd
lcall
shll
dec
sub
or
mov
pushf
jl
push
lret
pusha
lret
inc
loop
lahf
xchg
aaa
pushf
mov
or
sub
rorl
test
ds
clc
jbe
shlb
cltd
je
sub
lock
adc
in
into
lcall
sti
iret
mov
and
insl
test
sub
add
jecxz
xchg
ja
shll
adc
ja
xchg
inc
in
mov
push
hlt
push
pushf
imul
cmp
shr
jg
cmp
aas
fwait
xor
add
cmpsl
movsl
or
push
mov
jne
shrb
ja
sbb
mov
enter
movsb
popa
push
ffree
jp
cmp
adc
mov
lahf
adc
push
jno
mov
mov
mov
fs
cmp
imul
imul
dec
push
mov
cli
into
dec
fxch
cs
xrelease
sub
cmp
jno
inc
push
stos
jle
cmp
repnz
cmp
leave
jb
nop
cmp
loop
xchg
sbb
addr16
pusha
iret
jns
xor
xorl
iret
dec
rorb
fcomip
mov
lock
jle
push
mov
arpl
and
mov
mull
jmp
pop
sub
and
xchg
jb
push
lcall
mov
xor
jl
add
incb
push
imul
in
adc
push
lea
pop
ljmp
scas
shr
mov
sub
pop
pop
dec
stos
pushf
and
popa
cmp
mov
imul
in
std
shl
or
xlat
pop
pusha
add
push
sub
mov
faddl
mov
dec
je
push
insb
mov
inc
push
fmull
mov
aaa
addb
sub
fincstp
mov
inc
mov
fists
addr16
stos
stos
inc
lea
xchg
loopne
mov
ljmp
cmp
pushf
rolb
sub
sahf
xor
add
dec
iret
dec
push
pop
push
adc
add
mov
xor
aad
push
xor
jge
rorb
jns
add
stos
sub
popa
decl
pop
icebp
lock
movhps
push
and
pop
cmp
sbb
dec
or
push
mov
cmp
ret
adc
inc
cmc
ljmp
lahf
mov
mov
mov
mov
enter
pushf
into
and
sar
xchg
pop
mov
pusha
aam
rcrb
sub
imull
and
clc
or
out
nop
sahf
loop
enter
imul
mov
clc
mov
jmp
add
test
and
mov
fprem
enter
pop
mov
aam
pop
add
outsb
repz
movsl
fistpll
push
ljmp
mov
mov
push
jmp
cmpsb
pop
jno
daa
ficoml
mov
ss
lock
mov
int
loop
mov
push
in
movsb
divl
jg
scas
dec
mov
dec
mov
popa
pmulhuw
cld
xchg
mov
mov
lea
fdivl
std
aad
int
inc
enter
push
imul
gs
loop
mov
xor
mov
test
push
in
sub
lock
jb
mov
add
mov
xor
lods
jge
xor
stos
inc
sbb
enter
decb
insl
outsb
sbb
cmp
mov
loope
insl
rolb
cmp
adc
push
mov
xchg
insb
mov
lea
mov
mov
add
mov
add
add
aaa
fbld
out
fwait
mov
adc
cld
mov
xchg
adc
shrb
xchg
lcall
adc
ljmp
into
jp
aam
shlb
imul
pusha
sub
xchg
repnz
bound
test
xchg
stos
jbe
sahf
iret
pop
mov
lock
movsb
mov
add
sti
insl
push
js
inc
stc
shlb
clc
std
push
loope
iret
jae
jecxz
daa
inc
stos
cli
sub
int3
nop
lcall
jne
inc
push
and
sub
je
mov
add
dec
daa
movsb
and
adc
pushf
mov
subl
mov
or
add
clc
pop
outsb
mov
add
jl
jne
sbb
adc
jecxz
jb
idivb
lahf
jl
cmpsb
sub
fwait
mov
inc
xorl
push
call
stc
jecxz
xor
sti
cmp
fmul
mulb
mov
cmc
xchg
mov
frstor
pop
fldcw
fsubp
pop
pushf
mov
pop
mov
mov
in
arpl
movl
pop
pushf
cmp
aas
outsl
hlt
pop
and
fcmove
aas
fmull
inc
add
icebp
mov
push
jnp
xor
mov
mov
cmpsb
pushf
call
lea
or
imul
cmovge
jg
les
mov
add
cltd
ja
xor
ds
das
lock
mov
data16
xorl
jmp
adc
jmp
aas
je
inc
xchg
mov
cltd
icebp
dec
jmp
enter
xchg
lret
in
in
inc
fisubrs
ds
mov
enter
xchg
xor
mov
sahf
pop
inc
push
sub
icebp
sub
imul
add
or
test
and
aad
jne
dec
xlat
adc
mov
xor
cmp
pand
faddl
inc
dec
cmp
jge
fldcw
rorl
pop
sub
sbb
or
lahf
push
mov
int
and
loopne
cmpsl
bound
daa
and
adc
shr
hlt
push
dec
adc
xchg
dec
cmp
lock
outsb
inc
mov
adc
pop
mov
into
pop
jne
xchg
add
and
push
mov
cltd
mov
jmp
aam
pusha
or
jnp
inc
lock
mov
mov
js
cmp
fdivl
sub
imul
or
aaa
shrl
es
lret
test
pop
nop
dec
mull
push
push
xor
push
ljmp
fcomps
mov
or
mov
dec
xor
jg
ja
es
fsubrs
in
cmp
in
ljmp
jecxz
xchg
std
cmp
jb
adc
popa
and
xchg
leave
fnstenv
mov
jb
std
xor
push
add
int3
aaa
sub
icebp
push
inc
jle
xchg
xchg
fstl
in
xor
iret
inc
repnz
jnp
xor
into
bound
pusha
jbe
mov
addb
icebp
inc
mov
add
mov
imul
sub
jge
test
mov
xchg
push
or
mov
push
hlt
jnp
and
out
push
mov
add
sbb
aad
sbb
jmp
sbb
out
stos
xor
outsb
inc
pop
jp
aad
test
aas
fwait
ret
icebp
clc
push
adc
int
insl
es
pop
pushf
ds
int3
in
pop
ret
pushl
stc
movsl
repz
or
or
sub
cmp
aad
shl
xchg
push
sahf
mov
inc
push
or
fstl
xor
push
call
push
or
notl
mov
dec
sub
rcr
dec
jl
js
enter
scas
xor
cwtl
push
inc
fs
mov
push
lahf
shlb
or
mov
mov
pop
jle
inc
push
add
enter
mov
stos
mov
ja
fisttps
hlt
jo
adc
mov
cmp
call
jmp
mov
inc
popa
and
insb
insb
jo
lods
mov
in
mov
das
dec
lret
adc
add
xor
jl
jbe
fwait
icebp
pop
lock
add
pop
mov
dec
test
xchg
inc
adc
add
inc
mov
hlt
adc
andb
inc
lock
out
dec
and
pop
scas
ljmp
incb
pop
adc
popf
cs
test
fwait
inc
ret
mov
mov
movsl
ljmp
and
stos
insl
add
addb
enter
mov
inc
push
adc
mov
push
mov
cmpsl
jl
fs
outsb
aas
cwtl
loope
mov
ret
ljmp
test
cmp
jmp
pop
movsl
sub
xchg
pop
int
mov
lret
dec
push
mov
insl
mov
inc
cmp
jbe
xor
cmc
shlb
push
add
and
and
fisttpl
aam
cmp
inc
inc
sbb
or
sbb
mov
rclb
sti
inc
and
mov
adc
in
fs
insl
and
inc
lret
jl
jae
adc
xor
incl
emms
cs
and
outsb
outsl
je
cld
cli
and
shlb
jmp
mul
sub
pop
or
mov
pushf
lahf
andl
sarb
or
in
std
jmp
dec
and
fdivr
repz
and
shlb
sbb
lods
jp
cs
pop
mov
mov
pushf
push
cmp
in
int3
mov
insl
mov
mov
inc
lods
sbb
adc
mov
imul
out
or
jle
jmp
jge
sub
out
addl
inc
adc
lock
or
sti
mov
insl
inc
pop
or
out
nop
sar
pushf
lret
inc
es
bound
and
mov
fwait
jns
les
pop
inc
std
xchg
test
arpl
xor
mov
out
pusha
ret
scas
test
and
sub
in
or
xchg
lret
push
popa
or
mov
xor
adc
rdtsc
cwtl
int
add
ss
xor
call
sub
lahf
adc
xchg
xor
enter
xor
insl
inc
adc
inc
imul
adc
fcompl
push
jbe
cmp
rcrl
pop
movsl
mov
pop
dec
pop
mov
add
orl
xor
outsb
add
imul
adc
das
aas
mov
daa
mov
cmp
xor
sub
aaa
add
scas
hlt
jg
or
dec
rorl
stos
add
pop
sbb
mov
das
mov
xchg
into
cmp
sbb
sbb
inc
pusha
sbb
mov
xor
jno
adc
addr16
pop
xchg
js
cld
push
sub
cli
push
sti
and
sub
add
scas
sub
pop
adc
jle
dec
pusha
mov
cld
aaa
xor
mov
add
mov
lret
addr16
loopne
enter
call
mov
je
add
aad
fwait
sub
cmpsb
fsubr
and
nop
shll
loope
rolb
lds
dec
in
jmp
sub
jno
xor
add
push
test
cli
push
mov
mov
pusha
mov
jae
adc
addb
add
xchg
sub
mov
aas
inc
xor
mov
pushf
mov
je
dec
inc
mov
jmp
cltd
mov
cltd
mov
outsb
fidivl
into
sbb
lret
cmovp
loopne
mov
sbb
cld
xchg
out
ja
or
adc
fisubrs
arpl
int3
mov
sub
mov
sub
rolb
jae
sub
sysenter
pop
pop
in
divl
mov
adc
test
dec
mov
adc
stos
jp
cmp
pop
sbb
push
dec
jp
mov
pop
sbb
dec
jg
lock
gs
xchg
outsb
aam
and
icebp
mov
push
pushf
enter
or
pop
ljmp
cmp
push
xchg
cld
jb
pop
xchg
xchg
mov
mov
xchg
cs
mov
movsl
out
sub
movsl
jg
insl
inc
call
sbb
inc
inc
clc
imul
std
sub
xchg
js
lret
subb
mov
push
mov
sub
rorb
mov
pop
lock
mov
aaa
repz
in
inc
popf
sbb
xor
notl
lock
pushf
lods
cld
mov
sahf
stos
mov
cmc
adc
or
pop
push
and
push
or
outsb
lret
ss
mov
xor
bnd
ljmp
idivl
pop
rorb
sub
xchg
push
cmp
pop
mov
and
ds
mov
out
xlat
iret
sbb
data16
sti
xchg
stc
xchg
dec
mov
push
das
mov
test
mov
lret
pop
xchg
push
iret
inc
pop
dec
in
push
test
subl
or
movsb
shrb
repnz
mov
pop
mov
dec
lock
and
and
add
ljmp
mov
push
adc
jne
xchg
shll
or
pop
lret
mov
loop
mov
fsubrs
or
fwait
in
add
bound
fldenv
pop
movsl
in
pop
imul
xorl
popa
and
adc
enter
push
adc
mov
pop
data16
mov
mov
jae
mov
or
negb
mov
xor
pop
and
sub
push
addr16
insl
int3
enter
outsl
lods
std
jmp
mov
push
jl
fidivrl
mov
mov
and
and
jp
cmp
push
addr16
mov
push
push
sbb
repz
mov
js
dec
dec
inc
and
pushf
out
out
mov
fisubrl
clc
cmp
push
imul
mov
push
mov
pop
push
adc
std
pabsw
cmp
xor
aas
out
mov
push
or
dec
outsl
into
repnz
mov
mov
xlat
repnz
add
adc
aas
xorb
xorb
push
xchg
call
setne
sbb
ds
int
shll
and
std
loop
rcrb
jge
pop
inc
cmp
xor
xor
dec
cld
ret
push
adc
push
mov
mov
lock
mov
and
push
cwtl
dec
test
ret
push
jae
das
cltd
incb
adc
addl
fs
mov
and
push
cwtl
dec
test
ret
push
jae
das
cltd
incb
adc
addl
fs
mov
and
push
cwtl
dec
test
ret
push
jae
das
cltd
incb
adc
addl
fs
mov
and
push
cwtl
dec
test
ret
push
jae
das
cltd
incb
adc
addl
fs
mov
and
push
cwtl
dec
test
ret
rcrb
dec
inc
int3
test
jmp
aad
dec
bound
in
aaa
ljmp
adc
adc
push
mov
mov
lock
mov
and
push
cwtl
dec
test
ret
push
jae
das
cltd
incb
adc
addl
fs
mov
and
push
cwtl
dec
test
ret
push
jae
das
cltd
incb
adc
addl
fs
mov
and
push
cwtl
dec
test
ret
push
jae
das
cltd
incb
adc
addl
fs
mov
and
push
cwtl
dec
test
ret
push
jae
das
cltd
incb
adc
addl
fs
mov
and
push
jnp
insl
test
iret
addb
add
int3
adc
sahf
lea
or
sub
xchg
push
std
cmp
jmp
icebp
cmpsb
mov
adc
loope
pushf
adc
inc
clc
mov
xchg
stc
pop
daa
fcmovnu
fyl2x
jle
inc
sbb
mov
cmp
call
clc
push
dec
and
test
je,pt
and
dec
mov
mov
inc
adc
sbb
aad
add
cltd
in
jle
outsl
sub
stos
dec
insl
je
mov
pop
imul
adc
mov
sbb
mov
cmp
xchg
lret
pop
pop
insl
mov
or
nop
or
or
into
fsts
sub
incl
jmp
cmp
shrb
divb
test
inc
test
xchg
jp
sbb
cmp
mov
std
xchg
out
psraw
add
xchg
jg
popa
dec
addr16
test
mov
mov
cmpsl
adc
xchg
mov
sub
pusha
lret
sbb
cli
adc
sbb
out
mov
aas
mov
cltd
fmull
enter
hlt
pop
add
push
dec
xlat
xchg
notl
sbb
jo
rorb
jne
and
hlt
xor
jmp
mov
inc
xor
aaa
mov
dec
fwait
shll
dec
and
dec
push
sti
jo
ja
mov
fisttpl
dec
out
aad
and
push
mov
scas
inc
adc
into
dec
aaa
pop
push
aad
and
xchg
mov
jno
or
adc
inc
dec
inc
add
ja
pop
pop
mov
push
daa
mov
lcall
outsb
shrb
ds
cmpsl
inc
fsubl
enter
in
jae
inc
rol
mov
add
daa
inc
jge
xorl
push
mov
ret
pop
dec
add
sbb
cltd
les
aad
sub
or
mov
fs
pop
adc
jge
xor
iret
ds
ja
fildll
scas
sti
les
rcrb
pop
pop
mov
mov
fisttps
mov
outsb
sahf
fcoms
xchg
jp
mov
es
sub
jno
test
pop
jne
and
clc
cmp
shll
and
in
lcall
lods
seta
out
push
mov
sbb
push
jge
add
out
lcall
lods
mov
shll
cmpb
lret
btsl
sub
rcrl
inc
movsb
xor
cmp
push
push
aas
mov
in
jb
iret
cmp
jecxz
ret
pop
jno
mov
sbb
xchg
ret
fiaddl
mov
mov
pop
and
mov
pop
dec
int
mov
pop
pushf
ja
push
jle
sbb
out
ss
iret
mov
adc
cltd
imul
insl
xchg
inc
loopne
cmp
mov
adc
pop
pop
lahf
jnp
sub
fiadds
lcall
scas
mov
scas
sub
ss
or
push
mov
je
fwait
or
aaa
fwait
testl
pushf
fildll
push
daa
jecxz
cmovb
mov
xor
sbb
push
call
jae
bound
inc
scas
mov
lahf
test
mov
lods
pop
pop
sub
outsl
stos
movsl
xlat
xor
jmp
fnsave
cmp
jge,pt
iret
test
add
imul
adc
mov
pop
mov
jge
and
dec
sahf
jle
adc
fwait
int3
add
or
xchg
push
fistps
sbb
sub
sub
movsb
in
sarl
bound
adc
stos
jp
dec
cli
or
xor
insl
lods
jb
jmp
movsb
push
sti
outsl
dec
inc
scas
dec
dec
into
outsb
andl
rcrl
push
or
test
addr16
cmp
fsub
sub
inc
xor
shrb
loop
sbb
fstpl
mov
fiaddl
aaa
sbb
sti
in
aam
and
mov
das
dec
push
fs
call
add
mov
adcl
and
sub
cmp
push
test
adc
inc
pop
and
adc
mov
nop
movsl
mov
xchg
inc
cli
dec
mov
xchg
mov
sti
lret
clc
ret
cmp
or
xor
adc
mov
jp
pop
inc
dec
add
sahf
dec
insl
cmp
xchg
stos
inc
mov
jo
xchg
pushf
adc
add
inc
fwait
mov
fnstsw
or
inc
fs
mov
xor
ja
shlb
or
les
test
cli
sbb
adc
pop
je
jle
push
loope
cld
xor
sub
cmp
jp
mov
mov
sarl
loop
aas
mov
xchg
lods
fsubs
out
mov
dec
mov
dec
aad
xor
and
push
clc
imull
push
cld
and
std
loop
imul
les
push
lcall
push
pusha
and
into
jae
jp
xchg
gs
daa
mov
xor
xchg
sbb
dec
xchg
xchg
xor
lret
jb
sub
ja
adc
xchg
cmp
mull
inc
and
sub
add
and
sahf
ja
adc
ja
sub
or
mov
inc
frstor
gs
cmp
sbb
sbb
ljmp
cs
mov
and
pop
int3
dec
xor
jl
push
out
lock
int
pop
adc
icebp
bound
lret
test
or
mov
cwtl
ret
into
popa
icebp
lods
stc
xor
sub
int
add
sub
dec
rclb
lods
mov
shll
cmp
nop
add
pop
adc
push
sub
xchg
add
inc
pushf
dec
fwait
push
sub
inc
and
frstor
andb
inc
fs
or
push
ret
cmp
xchg
and
cmp
jae
xchg
addr16
pop
subb
mov
shrb
int
fs
adc
inc
xchg
pop
scas
test
push
dec
das
mov
push
mov
pop
jg
sub
ja
jo
push
or
xlat
push
mov
lock
xchg
outsw
insl
popl
lods
mov
js
cmpsb
popf
loopne
pop
out
jns
aam
outsb
sarb
scas
push
sti
out
cmpl
dec
inc
das
bound
mov
clc
xchg
jo
inc
or
out
mov
adc
int
xlat
mov
cwtl
xchg
mov
dec
test
test
insl
xor
and
ja
push
scas
jns
dec
xchg
aas
nop
mov
xchg
dec
cs
cs
js
cmpb
mov
in
bnd
in
popa
push
js
fnstcw
gs
xchg
xchg
mov
or
push
jne
pop
fcompl
sbb
cmpl
loop
ret
pop
mov
xlat
push
xor
popa
lahf
jmp
xchg
jnp
xchg
jnp
jbe
inc
call
cltd
iret
push
rcll
mov
add
push
push
adc
add
hlt
cmp
push
jg
xchg
lds
mov
or
sub
and
into
mov
in
mov
pop
and
dec
lcall
out
cmp
inc
cmp
repz
dec
jnp
adc
dec
inc
add
shlb
ja
test
aad
movsb
fadd
sbb
les
daa
rorl
repz
mov
test
gs
dec
xchg
or
pop
mov
add
cmp
out
in
pop
fs
fmulp
mov
push
testb
dec
shll
inc
xchg
rcr
mov
aad
cmp
cmp
dec
fs
rorb
subb
or
xor
xchg
and
outsb
or
jno
jno
inc
adc
and
jp
xchg
nop
out
pop
scas
data16
pop
aam
jo
movsb
mov
inc
imul
push
pop
mov
xchg
loopne
stos
inc
mov
mov
jp
mov
mov
pop
stc
inc
push
adc
sbbl
inc
cmp
cmp
in
add
sbb
fsubs
or
nop
loopne
xchg
lahf
test
repnz
cld
ffreep
lea
test
mov
subb
aam
std
test
dec
sub
adc
rolb
outsl
dec
sub
pusha
xor
or
sbb
jg
cmp
rcll
mov
lret
leave
inc
out
nop
imul
imul
vpsrld
jae
mov
mov
dec
xchg
cmpsl
xchg
cwtl
sbb
and
ljmp
lcall
cmp
loope
call
add
jle
dec
xchg
and
sbb
push
pop
cmp
cltd
and
mov
loop
imul
out
xchg
xchg
pushf
cmpb
loopne
movsb
and
pop
test
adc
sbb
push
loop
push
push
mov
scas
fwait
push
xchg
adc
daa
ficomps
enter
mov
dec
jnp
shll
sub
inc
push
dec
addr16
adc
inc
jg
rol
test
pop
call
sub
or
mov
cmpsb
in
xorw
and
and
dec
in
js
cmp
jns
mov
or
sbb
arpl
jno
pop
bound
add
andb
lret
lret
pushf
adc
pop
pop
loope
subb
add
push
jle
pop
mov
mov
in
loope
or
lahf
icebp
fmul
or
xor
daa
lock
hlt
xchg
je
aad
push
and
ss
adc
cmc
sub
inc
dec
rolb
out
jno
pop
mov
mov
mov
les
test
cmp
xchg
xchg
inc
out
push
sbb
push
sarb
imul
scas
pop
rclb
out
inc
add
sub
int3
mov
cli
or
adcl
and
cmp
cmp
sbb
or
jmp
mov
jne
jle
mov
call
xchg
mov
xor
jno
stos
out
adc
addr16
loop
xor
adcl
jp
cmc
push
js
out
ror
mov
pop
xchg
sbb
cmp
repnz
divb
mov
mov
xor
loop
int
sub
sbb
pusha
add
mov
xor
test
mov
and
clc
fwait
int
aaa
sbb
push
loope
push
mov
cmp
mov
mov
js
mov
inc
clc
mov
pop
js
das
pop
adc
jg
pop
cmp
jg
gs
movsl
fs
outsl
int3
inc
clc
ja
insl
dec
push
dec
xchg
fnstcw
fwait
mov
les
test
rorl
fwait
mov
.byte
mov
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
das
mov
push
stos
repnz
add
cmp
inc
scas
cmp
leave
adc
ljmp
adc
xchg
jae
and
in
lret
stos
test
mov
cwtl
sahf
enter
pop
add
jmp
jmp
call
stos
into
add
push
jl
add
sub
lret
pop
imul
jmp
stos
vpsadbw
sbb
cmpsl
daa
pushf
mov
push
sbb
xor
or
mov
sbb
push
mov
jo
leave
call
adc
out
into
je
adc
push
rcrl
or
imul
sahf
popa
jae
xchg
jae
insl
mov
test
pop
shlb
rclb
sahf
js
movsl
xchg
mov
add
call
cld
insb
adc
inc
mov
popf
stc
cmc
aad
cwtl
fcoms
and
inc
push
push
repnz
and
or
ret
mov
push
insl
or
lods
cmpsl
mov
popf
rorb
js
outsl
lret
ljmp
popf
into
imul
dec
in
pushf
cmpsb
clc
outsb
test
arpl
hlt
out
mov
mov
jl
xor
push
pop
loope
xchg
or
jg
mov
push
pop
adc
mov
jmp
ficoml
leave
dec
or
xchg
jmp
fdivrs
mov
shl
or
out
adc
jb
add
aam
and
fmull
shll
lcall
jp
adc
popf
arpl
ficoms
pop
and
cmpsb
test
xor
ficoms
cmpsb
and
cmc
test
ss
xor
add
pushf
sub
inc
sbb
rcrl
pushf
pusha
pop
ret
and
cmpsb
cwtl
test
mov
mov
inc
mov
mov
rclb
cmp
out
mov
pop
mov
inc
sub
or
jg
sub
adc
les
sub
in
lcall
scas
jae
add
stos
aam
jecxz
scas
mov
jo
sbb
and
scas
out
mov
jg
or
jmp
icebp
out
mov
mov
xor
cmp
inc
push
and
out
add
push
cmp
adc
scas
xor
mov
cmp
ror
mov
ret
sub
mov
call
push
adc
push
sbb
sub
icebp
jecxz
ret
stc
dec
nop
xor
mov
stos
shl
push
xchg
cmp
mov
daa
mov
dec
inc
imul
movsl
outsb
jae
mov
jmp
rsqrtps
addr16
lods
in
mov
test
mov
out
and
adc
imul
mov
add
test
add
ss
adc
mov
lea
mov
jae
mov
xchg
xchg
push
or
dec
fiaddl
sbb
pop
push
sub
imul
packuswb
std
fidivrl
jg
xchg
cmp
dec
cmpsb
fwait
pop
ret
mov
fs
jl
pushf
cld
out
or
stos
popa
push
mov
lods
sub
imul
scas
stos
adc
loope
mov
div
jl,pn
mov
xchg
adc
imul
sub
into
test
xor
sub
in
xchg
imul
mov
movsb
movb
jl
aam
inc
scas
out
aam
ret
mov
in
rcll
in
shll
stos
xchg
sub
cmp
sahf
pop
in
jp
insb
jecxz
or
fdivs
sbb
mov
push
inc
inc
mov
repz
dec
jb
or
push
xchg
je
arpl
lret
fninit
pusha
dec
jle
push
jl
mov
pop
je
push
sahf
push
pop
xchg
adc
sbb
ds
arpl
mov
sbb
movsl
test
into
dec
das
and
push
inc
inc
xor
outsl
rclb
insl
cmp
pushl
ret
stc
and
data16
aaa
rolb
icebp
mov
push
loopne
scas
mov
xchg
xor
sbb
sub
add
data16
mov
mov
adc
mov
xor
insl
xchg
adc
push
aas
mov
int3
jp
xchg
pop
pusha
mov
xor
test
sub
mov
cmp
les
fistpll
xor
or
add
ljmp
lret
adc
sbb
cmp
ja
repz
ffree
call
inc
dec
or
mov
lret
ljmp
pop
fstps
and
push
jle
jge
jo
cmpsb
mov
fldenv
aam
adcl
or
xor
inc
mov
pop
jae
gs
mov
cmc
add
test
cmpsb
into
push
mov
xor
xchg
cmpsb
mov
test
lcall
mov
idivl
rcrb
mov
test
inc
mov
cld
scas
jge
sub
sub
sbb
push
mov
nopl
or
jecxz
mov
aaa
orl
add
jle
or
sbb
xchg
aaa
fisttpl
mov
xchg
fdivrs
stos
cmp
xor
xor
orl
insl
mov
jp
mov
inc
push
fmuls
scas
dec
imul
mov
adc
xchg
imull
mov
inc
mov
jge
and
fcmove
jb
mov
arpl
pop
pusha
outsb
mov
and
out
sub
sub
iret
xlat
jp
fldenv
jge
loop
rcl
xchg
push
leave
adc
les
jge
jg
imulb
test
pop
outsb
sbb
cmp
stos
push
les
mov
cmpsl
notl
pop
dec
sbb
or
and
adc
decl
xchg
or
mov
dec
movsb
shlb
sahf
and
daa
mov
xor
add
aas
inc
dec
xlat
cmp
mov
xchg
cmp
dec
jp
lods
in
cs
popf
inc
out
sbb
in
sahf
pop
nop
push
out
mov
cld
fcmovb
or
or
adc
push
int3
lret
xchg
stos
mov
sahf
pop
lret
icebp
xchg
fidivl
sub
fs
mov
loopne
repnz
mov
fimuls
sarl
push
pop
add
stos
test
dec
arpl
mov
push
adc
popf
cld
loopne
inc
dec
popa
xor
fisubrl
jmp
lahf
or
lea
in
imul
aas
js
push
jmp
jecxz
add
adcl
jno
lea
movsl
sbb
fnstsw
dec
out
sbb
cwtl
inc
jo
add
call
xchg
and
add
sub
dec
pop
jecxz
ja
jb
mov
lcall
test
pop
jg
dec
test
imul
sbb
scas
pop
mov
ljmp
stc
mov
sti
fadds
leave
push
xorl
std
ljmp
int3
clc
xchg
shl
gs
pop
add
testl
mov
mov
stos
mov
push
ds
sub
sub
jns
fnstsw
sarb
xchg
dec
aad
in
jg
xchg
ret
sub
inc
aaa
and
and
or
data16
add
sbb
fdivrl
push
loope
gs
ret
mov
xor
cli
rcll
jbe
iret
and
mov
stc
sub
xor
pushf
xchg
lock
sbb
jg
inc
nop
leave
lods
shl
mov
rolb
jno,pt
dec
jge
pop
mov
and
loop
into
mov
or
lcall
mov
loope
les
lahf
cmpsb
dec
jnp
push
inc
mov
imulb
pop
fisubrl
push
testl
pop
ret
push
mov
clc
lcall
jne
inc
xchg
mov
sub
add
out
test
sub
or
lods
int3
or
mov
dec
ds
xchg
aad
iret
in
push
test
mull
dec
xor
clc
arpl
xchg
xor
add
xchg
loope
lahf
rcl
pop
loope
jne
inc
das
adc
mov
lock
or
xor
cmp
jnp
and
push
mov
cmpsb
rcr
and
popa
xchg
mov
mov
sbb
push
push
call
xchg
clc
daa
lods
sub
pusha
xchg
stc
mov
out
jl
addr16
cmc
pusha
pop
fwait
mov
adc
xor
cmpsl
mov
fidivs
mov
popa
mov
jle
inc
hlt
lret
sub
fistps
adc
ja
arpl
jae
scas
andb
lret
out
sub
out
sub
jbe
arpl
insb
addl
stos
jne
inc
mov
cmp
mov
insb
out
mov
or
out
inc
mov
or
sbb
push
ret
pop
imul
inc
dec
stos
xor
push
push
jl
dec
jbe
inc
loop
rol
std
push
mov
push
push
or
fdecstp
inc
push
add
mov
jo
adc
lret
int3
push
dec
mov
pop
push
in
ret
xor
scas
jnp
lahf
mov
movsb
cmp
stc
mov
in
adc
pop
add
enter
out
xor
sahf
lock
lahf
scas
xchg
sahf
rolb
pop
push
mov
push
js
leave
pop
movsl
dec
fiadds
adc
gs
imul
incl
jp
mov
clc
popf
lahf
ret
sti
xchg
inc
repz
popa
or
push
out
sbb
scas
dec
inc
ja
mov
jg
mov
into
lcall
add
cs
pop
jmp
xchg
and
test
loopne
sarb
ds
mov
mov
sbb
add
js
rcrb
test
dec
aaa
out
ljmp
test
dec
fcmovu
adc
std
pop
enter
mov
add
add
loop
out
sbb
mov
ljmp
lret
loop
jg
and
cltd
pop
sub
les
pop
ljmp
es
push
pop
mov
inc
shll
sub
fldcw
int
jg
push
js
stc
mov
rol
repnz
cmp
ret
push
cmpb
ljmp
insb
ficoml
lods
testl
popa
in
in
das
push
jmp
stos
xchg
jns
stos
movsl
and
out
cmpsb
push
and
add
mov
lods
or
nop
xlat
adc
pop
jle
jne
cwtl
lret
pop
mov
dec
xor
jmp
adc
and
fnsave
mov
or
jb
mov
push
fcomps
mov
jbe
sbb
lea
or
fimuls
mov
and
mov
cmc
sbb
inc
int
loopne
lods
or
mov
mov
test
ret
js
jmp
mov
mov
ljmp
inc
int
sahf
mov
orb
pop
xchg
or
inc
xor
xchg
cmc
mov
jp
jmp
sub
xchg
pop
in
insl
adc
lahf
pushf
jae
inc
lret
aas
mov
pop
es
dec
shlb
sbb
outsb
rep
xchg
jge
lea
shlb
dec
mov
xchg
test
cmp
out
mov
inc
loop
cld
out
fbld
aas
icebp
lret
add
hlt
mov
cmp
add
pop
mov
insb
jecxz
cwtl
mov
mov
in
lret
ss
cmp
leave
mov
loope
lods
push
xor
insb
std
cmpsb
jnp
push
cwtl
adc
sbb
pop
mov
hlt
in
or
xor
mov
push
lret
mov
mov
cld
test
lods
rcrl
sbb
cmp
aad
push
fcoms
roll
cmp
out
dec
rcll
in
adc
xchg
mov
shlb
test
in
scas
sub
pop
or
stc
popf
mov
das
sub
testb
data16
pop
xchg
mov
lahf
repz
imul
fs
sbb
jmp
jmp
mov
fidivrl
or
cld
mov
xor
hlt
xchg
and
push
cwtl
push
inc
push
add
mov
jne
ret
xchg
movsl
data16
hlt
xorb
cli
pop
imul
jns
jns
add
aaa
mov
lret
jge
sbb
sbb
mov
fs
andb
lahf
dec
jnp
pop
pop
or
adc
xor
aam
fmull
or
fldcw
adc
scas
out
out
dec
out
stc
sarb
gs
adc
lds
pop
scas
dec
mov
out
fdivl
push
sub
into
addr16
inc
insl
iret
xor
es
sub
xor
jnp
sbb
testb
jl
hlt
push
testl
add
pop
jl
mov
hlt
dec
sbb
jb
fwait
sahf
sarb
mov
pushf
scas
sahf
ja
lods
and
push
fsts
in
xchg
imul
mov
adc
add
dec
add
xor
xchg
pop
cmp
stc
mov
adc
jne
inc
aad
loope
xor
cltd
shll
adcl
ret
cmp
jle
lock
pop
scas
or
fs
adc
xor
jae
lret
ret
lret
loope
sbb
mov
sub
gs
cmpsb
aaa
xor
rcll
jo
add
in
stos
sub
data16
out
inc
icebp
or
int
pop
nop
enter
pop
mov
jle
ja
push
mov
mov
ss
mov
sub
xchg
or
pop
sti
mov
mov
lret
sbb
or
enter
adc
sub
xchg
push
jp
push
cltd
xchg
ds
jo
add
int3
mov
mov
pop
inc
pop
inc
adc
xor
scas
rorb
addr16
and
add
mov
sbb
mov
adc
or
jl
idivb
inc
push
cmp
cmp
adc
mov
aad
nop
xor
cmc
outsl
mov
push
pop
pop
xchg
push
enter
cli
pop
jne
movsb
fsub
cli
cmpsl
sbb
mov
hlt
hlt
insb
sbb
cmp
int3
push
mov
fisubrl
int3
xorb
out
aas
jb
lock
aam
push
inc
xchg
xchg
inc
int
push
mov
arpl
mov
and
int
sub
rorb
cmp
scas
mov
cld
cltd
xchg
mov
pop
cli
and
in
fnstcw
and
xor
push
mov
fiaddl
add
inc
pop
out
lods
sub
test
lods
mov
cmp
jge
xor
movsl
in
hlt
je
je
adc
ret
sbb
dec
test
xchg
xor
inc
fcompl
dec
mov
test
std
pop
daa
add
aas
mov
mov
ret
scas
mov
cmpsl
loope
jg
mov
xchg
mov
repz
into
push
idivb
cli
inc
fs
mov
sti
ss
or
mov
loop
enter
xchg
cli
xlat
jl
rorb
scas
repz
push
mov
cmp
scas
sbb
jmp
out
xlat
inc
subl
mov
xor
cmp
adc
mov
xchg
mov
into
pop
push
sub
nop
sahf
jecxz
bound
xchg
andl
outsb
xchg
pop
sbb
sbb
test
jns
adc
icebp
and
out
mov
loope,pt
adc
in
mov
jno
and
jg
adc
xchg
lahf
fnstenv
clc
js
jnp
mov
cld
dec
mov
lods
jb
mov
dec
cltd
inc
mov
xchg
inc
add
js
pop
fisttpll
mov
xbegin
lea
mov
rorb
mov
fadds
fs
or
xchg
dec
sub
add
jns
mov
in
dec
xor
push
je
cmp
in
std
decb
xlat
insl
ja
movl
add
xchg
cli
pop
and
pop
cmp
xchg
daa
imul
jge
lods
dec
test
xchg
mov
cltd
jo
push
mov
push
mov
stos
mov
mov
hlt
loopne
scas
sbb
into
popa
fwait
movlps
cltd
cmp
dec
jae
pop
adc
add
neg
out
popf
out
pop
add
adc
outsl
ds
mov
sub
jns
add
dec
lcall
jno
xchg
clc
dec
jb
push
push
ret
push
cmpb
lret
xor
xchg
add
sbb
push
mov
jecxz
jmp
or
jl
mov
pop
out
js
jbe
push
xor
dec
dec
insb
ret
rcrl
sahf
shrl
inc
jnp
and
aam
aam
xchg
push
shrl
popf
adc
jl
xchg
repnz
dec
pop
das
mov
mov
jb
shrb
repnz
add
xlat
test
dec
rcr
mov
xchg
adc
or
ljmp
xor
cwtl
insb
inc
pushf
push
jmp
enter
imul
fdivrl
or
pop
push
in
pop
lods
bnd
xor
or
loop
icebp
xchg
sarb
push
adc
js
sbb
mov
or
test
insl
and
daa
ljmp
gs
adc
push
je
xchg
jge
cmpsb
cld
stos
loop
in
cli
stos
lods
cmp
pushf
jmp
sahf
stos
push
sbb
pushf
out
adc
push
test
pop
and
mov
and
pop
sub
and
mov
popa
sub
sub
faddl
in
sub
lcall
in
fcompl
push
sbb
pop
jg
sub
inc
jl
push
jg
sub
leave
shlb
pop
jg
jne
push
daa
subb
fs
and
loopne
orl
inc
lret
int
aam
sub
xor
add
mov
cmc
jecxz
jne
and
push
loopne
add
pcmpgtb
mov
repz
add
call
in
xor
dec
xchg
out
jnp
mov
and
push
rcrb
add
js
lods
js
jo
cmp
mov
sahf
std
stc
insl
addr16
jge
jno
ret
and
ljmp
testb
inc
mov
jle
lock
in
andl
hlt
pop
out
sbb
pop
js
rcr
mov
faddl
imul
inc
call
add
leave
mov
mov
inc
imul
pushf
jp
outsb
lcall
sbb
jne
cmpsb
and
cmp
cmpb
or
gs
popf
stc
xchg
dec
addl
sub
shll
and
movsb
adc
mov
inc
mov
add
or
inc
leave
hlt
cmp
psrld
repz
out
mov
in
cmp
das
fcoml
pop
aas
mov
pop
add
jae
sbb
pop
test
mov
add
mov
xchg
xchg
add
dec
sbb
int3
adc
xchg
jge
into
data16
and
pop
and
push
mov
je
mov
outsl
or
cmp
sbb
mov
mov
out
add
add
sarb
sub
lcall
out
lcall
in
sub
push
in
out
cmp
push
rcl
test
insb
dec
loope
sub
push
inc
dec
call
aaa
das
cmp
arpl
leavew
mov
lea
push
jo
lods
out
mov
sbb
xor
push
sbb
sbb
popa
fwait
push
imul
in
cmpsl
add
xchg
fnstsw
push
lock
scas
in
mov
lret
cmpsl
daa
push
adc
std
jle
jbe
sbb
add
mov
jge
sub
scas
and
adc
pop
adc
outsl
lods
inc
dec
jmp
adc
cs
pop
out
pop
push
std
addr16
test
pop
and
neg
lret
jg
sbb
mov
mov
nop
nop
pop
adc
cmp
pop
sbb
adc
inc
sub
stc
pop
mov
and
inc
cwtl
bound
cmp
popa
inc
out
add
enter
pop
pop
mov
cmp
mov
ss
loop
pop
das
loop
fidivrl
sbb
ljmp
ret
mull
fcompl
cs
add
subl
dec
mov
dec
out
scas
bound
xor
fmuls
inc
pusha
or
adc
fs
shll
sti
dec
cmpsl
mov
data16
outsl
data16
mov
test
mov
outsb
xor
jl
stos
mov
loope
orl
sub
mov
pop
sub
movsb
stc
push
mov
jb
inc
stos
adc
out
stos
push
ficompl
sbb
sbbl
shlb
inc
outsl
pop
mov
iret
jmp
das
arpl
popa
scas
test
sbb
fisttpll
adc
sub
test
bound
jp
psubb
mov
sub
pop
cs
ficoml
dec
pop
sub
jnp
or
or
mov
sub
mov
dec
int
inc
adc
mov
out
repz
pop
lcall
outsb
iret
push
adc
adc
or
push
rcll
pop
mov
pop
test
daa
out
pop
mov
das
imulb
mov
stos
jle
and
sub
inc
ret
pop
pop
jle
pop
inc
pop
test
jo
add
push
xor
xchg
in
mov
out
stos
jp
xchg
push
testb
pop
cltd
push
dec
int3
scas
adc
int3
push
movsl
push
lods
popa
pop
or
arpl
int
add
xlat
wbinvd
lods
or
add
jp
sub
or
ret
add
in
mov
push
lods
sbb
test
addr16
sbbb
dec
rolb
push
add
or
pop
sbb
pop
mov
testb
jae
xchg
pop
jae
hlt
adc
sbb
mov
into
mov
call
jge
mov
insb
fwait
in
mov
inc
fwait
jge
xchg
add
je
or
mov
scas
pop
bound
pop
jp
push
int
or
dec
xchg
push
fisttpl
pop
call
mov
imul
ss
jmp
add
jae
mov
jae
insb
arpl
add
lcall
inc
mov
imul
mov
cmp
mov
xor
repnz
add
jmp
cmc
pop
or
sub
fdivr
ss
imul
rol
jnp
bound
std
ja
dec
or
jl
ds
push
repz
xor
negb
addb
insl
jno
call
int3
nop
scas
inc
in
xchg
test
mov
cs
insl
into
test
sbb
xchg
jg
mov
adc
cld
inc
mov
es
test
adc
bound
sub
testb
mov
popa
lods
std
xchg
mov
orb
xchg
lods
flds
or
mov
fwait
pop
mov
scas
jb
test
push
push
pop
adc
mov
dec
jns
aam
pop
adcb
or
sahf
add
push
push
jecxz
movsl
fisubl
mov
xchg
iret
mov
insb
mov
jnp
fs
fistl
sub
fimull
xor
cs
xchg
in
jg
lock
or
bound
jl
cld
dec
pop
push
fsts
neg
dec
push
out
outsl
loop
test
ljmp
sub
call
pop
insl
and
inc
pop
pop
lcall
sub
in
and
jmp
mulb
stc
jecxz
xchg
cwtl
mov
mov
adc
cmpsl
sbb
mov
mov
adc
sahf
fs
push
pop
hlt
or
insb
out
xor
sahf
insb
pop
in
jmp
stc
push
incb
sbb
inc
lret
xchg
ljmp
enter
enter
add
jmp
inc
inc
fcomps
jb
lods
push
sti
inc
mov
in
cli
jb
mov
sub
xor
shll
mov
je
mov
loop
ffreep
push
imul
push
xchg
add
out
cmp
ficoml
sti
push
out
and
rclb
push
mov
pop
or
pop
negb
ret
add
test
mov
shlb
out
mov
and
mov
cmp
addb
cs
je
and
sbb
xchg
adc
xor
add
inc
cli
inc
cmc
ljmp
jecxz
clc
ss
or
mov
dec
inc
dec
or
xchg
dec
or
sbb
bound
insb
clc
not
pop
setne
and
fwait
jb
out
jns
sahf
sarb
mov
lods
jae
iret
testb
loopne
jge
xor
push
dec
ljmp
aad
sbb
pop
mov
dec
jg
cmpsb
stc
mov
inc
movsb
or
push
adc
and
les
in
fdivrs
out
sub
cmp
dec
xchg
into
xor
out
out
mov
inc
cmp
pushf
cmp
flds
pushf
and
ja
sar
xor
hlt
sbb
or
lods
ja
test
dec
dec
add
jmp
mov
push
hlt
scas
js
cmc
push
pop
ret
lret
out
aaa
mov
test
movsb
push
dec
cmp
subb
mov
pop
clc
jb
jp
mov
push
fidivs
or
dec
pushf
outsb
jb
mov
lret
stc
pop
dec
mov
out
pop
sub
les
out
into
push
jnp
push
jae
xor
lcall
pop
iret
fsubp
push
push
rorl
add
push
pop
arpl
adc
aad
scas
stos
fs
scas
and
jne
clc
or
add
jle
cmc
mov
cmp
inc
xor
pushf
notl
cltd
fisttps
cwtl
imulb
mov
mov
mov
iret
pop
aas
rorb
outsl
cmp
pushf
mov
frstor
inc
push
shlb
add
push
movsb
test
stos
sub
movsb
add
aas
rorl
or
push
int
sbb
cmc
mov
dec
inc
addr16
negl
in
loop
inc
lock
push
jae
insb
jo
addr16
add
fidivrs
nop
stos
loopne
mov
adc
or
dec
ja
mov
add
imulb
xor
inc
in
loope
xor
loope
adc
and
pushf
or
xlat
add
aaa
add
push
jno
xchg
mov
fstpl
loop
ljmp
or
jge
stc
je
pop
and
xchg
add
mov
pop
inc
push
xchg
andb
fsubrp
dec
iret
in
int3
iret
and
jmp
or
pop
jo
sub
mov
bnd
icebp
hlt
xlat
jns
test
stos
sub
stos
push
sarl
lcall
mov
adc
loop
jl
sub
mov
in
and
mov
cmp
dec
push
mov
out
jp
pop
test
fsts
fstl
sbb
insl
mov
mov
sub
shll
out
mov
jae
into
pop
adc
or
or
jno
xor
mov
mov
lret
xorb
out
xchg
push
popf
add
aam
loope
fimuls
ja
dec
push
push
stos
sbb
adc
pop
cmp
arpl
pushf
jbe
mov
sbb
ds
push
jne
or
add
push
jbe
xor
cli
sub
addr16
jno
ljmp
jecxz
neg
adc
add
out
jg
fisubrs
and
enter
in
lods
dec
xchg
ja
mov
jne
popa
xor
repz
cmc
mov
lahf
outsb
fimull
and
cmp
mov
movsl
adcl
cli
sbb
dec
push
repnz
mov
scas
push
call
call
shlb
out
sbb
enter
repnz
bound
jmp
arpl
movsl
cmpsl
int3
xor
jno
push
ss
dec
nop
outsb
movsl
test
lahf
pop
push
or
repnz
pop
add
test
push
loop
lahf
lahf
cmpsl
decw
xchg
cmovs
jbe
and
aas
dec
xor
nop
cmp
or
cld
fidivl
sti
inc
push
cmp
outsb
fiaddl
cmp
out
jg
sarl
xchg
shlb
cltd
fsts
movntps
sub
leave
je
pop
and
rolb
mov
insb
jmp
adc
push
mov
cmpsb
xchg
and
pop
mov
sbb
repz
push
movsl
cltd
and
mov
rcrb
cmpsb
cmp
adc
aad
loopne
inc
repnz
xchg
aaa
jecxz
and
xchg
add
xchg
addb
inc
cmp
xchg
or
add
mov
jb
adc
inc
loopne
mov
addr16
and
add
fnstenv
lods
addr16
fstpt
addr16
jb
cmp
cltd
jge
int
and
mul
out
mov
mov
add
test
fcmovnbe
xor
dec
jmp
dec
jmp
inc
jl
add
push
jmp
jns
outsb
mov
ds
repz
mov
mov
xchg
sbb
fwait
dec
loope
out
xchg
loopne
bound
lret
jmp
fcmovnb
arpl
gs
bound
fnstenv
inc
js
mov
dec
sbb
or
inc
mov
pop
paddw
push
call
fcmove
jecxz
les
insb
add
movsb
jb
sub
adc
inc
xor
test
cmp
mov
lret
out
scas
push
call
jb
push
dec
adc
and
fldl
aaa
sbb
loope
and
push
dec
jnp
push
lods
xchg
jbe
or
adc
mov
movsb
or
gs
out
xlat
fmuls
inc
ret
imull
push
setae
ss
push
into
es
cltd
insb
mov
mov
cli
pop
add
repnz
bound
push
pop
mov
insb
idivb
dec
fcomi
insb
adc
push
leave
ss
lcallw
mov
or
jbe
jno
imul
out
loop
push
jns
cld
push
cwtl
push
sbb
repz
add
int3
lea
xor
testb
add
imul
push
movsb
xor
leave
cs
lahf
sbb
mov
adc
mov
mov
movsl
mov
mov
flds
mov
ss
sbb
mov
cmp
lock
aas
push
insl
mov
pslld
fdiv
adc
jp
mov
jno
sbb
mov
add
push
mov
adc
mov
xchg
mov
stos
or
xor
test
enter
jp
sahf
bound
jo
cwtl
xchg
and
incb
mov
xor
jmp
rorb
lcall
movsl
sarb
rorb
xchg
push
stos
cmp
in
cmpsb
add
xchg
mov
aaa
cmpsb
lock
shr
decb
repz
xlat
bound
leave
jg
sub
leave
mov
aam
out
fwait
pop
push
jb
lcallw
push
adc
shll
clc
or
mov
cmp
jle
dec
incl
roll
gs
repz
loopne
jmp
sub
sub
icebp
add
scas
idivb
sub
sub
push
inc
pop
or
aad
lret
shl
dec
dec
adc
sarl
lret
dec
ffreep
lcall
dec
sbb
rcrb
add
mov
fldenv
es
sahf
lahf
jne
mov
add
in
adc
insb
inc
xorl
stos
repz
add
aaa
insl
xlat
test
push
sub
test
mov
dec
idivb
mov
cmp
adc
push
test
jnp
inc
mov
adc
add
cs
in
repz
mov
xor
or
leave
inc
in
cmc
and
out
mov
les
ret
cld
filds
inc
in
adc
cwtl
sarl
add
cmp
loop
xchg
push
enter
psraw
dec
and
xchg
sahf
loopne
lods
aam
and
enter
test
lahf
adcb
popf
dec
mov
insl
cmpb
push
or
xor
dec
fcmovbe
testl
stc
and
xor
test
mov
fcmovu
cltd
test
jo
mov
ljmp
and
dec
or
pushf
cmp
lea
push
inc
test
push
xchg
sub
and
cmc
fldenv
loopne
dec
or
cmpsb
adc
popa
mov
xchg
or
les
out
adc
aad
and
out
ret
in
inc
fxch
xchg
outsb
mov
dec
or
testl
mov
aas
push
inc
sbb
cmp
push
and
inc
jl
mov
push
loop
shlb
pop
pop
loop
daa
xchg
fsubrs
xchg
add
shlb
dec
mov
xor
gs
sub
out
and
sar
mov
cmp
add
add
jl
aaa
es
sub
or
push
jbe
fildl
or
inc
cmp
mov
addr16
rol
pop
jb
dec
jnp
dec
nop
cwtl
fwait
and
pop
std
out
out
adc
dec
stos
dec
sahf
lea
repnz
push
fstpl
sbb
dec
sbb
ja
xor
repz
cmc
adc
inc
jns
sbb
jmp
mov
sub
stos
test
hlt
lret
nop
cmpl
or
mov
dec
clc
jmp
cmp
xlat
repz
std
cltd
rcrb
mov
or
and
mov
cli
cli
mov
inc
aaa
imul
jns
sbb
xchg
data16
push
push
lods
repz
scas
or
dec
xchg
inc
jno
push
push
mov
xor
push
fcom
insl
jmp
into
and
fldt
nop
in
rolb
mov
or
mov
jnp
iret
mov
arpl
or
xchg
in
fnsave
shll
out
xlat
inc
xor
sbb
in
push
sbb
jmp
sub
or
shlb
bound
pop
mov
sub
subl
adc
xor
scas
fdiv
fwait
push
and
das
bound
repz
mov
pop
dec
push
sbb
push
xchg
dec
or
jmp
ret
adc
push
jb
andl
shrb
adc
mov
pushf
scas
jp
ds
sub
lods
fwait
inc
cmc
xor
int
arpl
dec
xchg
mov
bound
xor
leave
repnz
icebp
lcall
out
jo
cmc
fcoms
cli
jge,pt
sbb
sbb
in
and
popa
pop
in
fstpt
clc
mov
mov
fldcw
cmp
pop
into
filds
andb
push
outsl
out
add
lcall
add
and
je
pop
jb
int3
addr16
mov
mov
lds
inc
repz
ja
mov
adc
inc
push
fldt
pop
shr
xchg
mov
pop
stos
dec
xor
dec
inc
add
add
jp
sbb
test
aaa
in
mov
in
pushf
xchg
jne
or
push
ret
xchg
mov
add
data16
xchg
roll
fs
std
call
jmp
ljmp
cli
nop
mov
xchg
frstor
rol
insl
call
push
xor
imulb
mov
leave
loope
adc
add
push
mov
dec
call
mov
xchg
fisttps
and
pop
fs
fmuls
inc
push
xlat
data16
outsb
loope
movsl
xchg
mov
cmp
and
and
in
inc
pop
jecxz
xor
pop
int3
cmp
push
jl
test
jae
test
jns
jg
push
lods
test
or
xor
push
push
cwtl
ficomps
pop
inc
or
cld
sub
adc
jle
fmul
add
movsb
sbb
inc
or
imul
or
xor
inc
fidivs
jb
xor
int
sti
jae
int3
pop
cli
repz
ficoml
inc
pop
fdivs
stos
jge
iret
cld
jne
add
jae
and
test
aad
xchg
outsl
dec
adc
mov
push
push
hlt
cmp
inc
xor
or
adc
shl
mov
mov
mov
inc
addb
xlat
xchg
leave
mov
mov
stos
cs
and
xchg
fstps
pop
mov
mov
adc
adc
add
pop
pop
lret
stos
aam
add
mov
stos
subb
sbb
add
enter
pop
iret
lcall
jbe
in
push
call
add
xchg
and
sub
push
fsubrl
xchg
mov
inc
adc
mov
rorb
pop
or
cld
push
leave
insb
inc
add
stos
jne
stos
outsb
inc
sbb
push
lret
xchg
add
imul
cmp
xor
shl
pop
imul
fwait
inc
xchg
xchg
pop
cmc
inc
push
or
fdivrs
nop
ds
sub
inc
notb
dec
aad
data16
fs
push
sbb
aas
out
or
inc
sub
enter
outsb
movsb
xchg
test
pop
sub
add
dec
sub
pusha
lret
imul
sbb
test
and
arpl
int
sub
mov
adc
ja
rorb
in
imulb
dec
aam
push
pop
aas
mov
pop
mov
pop
pop
push
sbb
in
loop
pop
cmp
and
mov
sbb
jno
test
dec
sub
xchg
fildl
lret
jg
out
pop
test
imul
mov
and
cmp
lods
mov
jg
enter
aam
jb,pt
sub
push
add
shrl
pop
mov
lods
pop
ljmp
mov
push
xchg
hlt
subl
xorl
mov
pop
inc
aaa
mov
lcall
iret
add
movsb
loopne
jo
test
std
ficoml
inc
arpl
test
add
in
cmp
sbb
pushf
js
rcrl
into
shl
cmp
xchg
imul
push
inc
fmul
repz
push
out
sub
bound
test
sahf
jb
mov
sub
call
clc
push
sbb
add
pop
push
inc
shr
daa
sub
lahf
scas
add
mov
cs
or
popf
ret
mov
mov
sbb
dec
or
popa
adc
scas
mov
inc
dec
fidivrl
lods
sbb
xchg
lea
jne
mov
mov
cmp
pop
fidivrl
add
and
popf
aad
bound
mov
addr16
cmp
or
mov
cmp
idivb
dec
adc
or
pop
fbstp
es
lods
aam
dec
das
js
test
inc
mov
ret
rdtsc
lods
xchg
pop
es
movsl
daa
push
push
dec
in
mov
cmpsb
sbb
arpl
push
repnz
notb
inc
daa
mov
aaa
cwtl
mov
leave
shlb
rorl
gs
sbb
stos
je
fstpl
outsl
and
xor
int3
sbb
mov
xchg
dec
lods
push
icebp
addr16
js
xor
lahf
jge
ret
and
sbb
push
mov
inc
inc
cwtl
rol
testb
dec
or
test
aad
enter
imul
and
jle
cmp
xchg
fidivrs
mov
cltd
pushf
sbb
push
mov
cmpsl
sbb
jmp
out
inc
and
lock
sar
enter
hlt
mov
ja
sbb
test
clc
pop
xchg
ret
add
xor
xor
in
test
jns
fstl
push
xchg
lods
insl
cld
mov
push
mov
and
push
call
inc
shrb
mov
je
arpl
ds
gs
mov
cmp
movsl
pop
mov
cwtl
out
test
xlat
jns
adc
idiv
jmp
mov
in
cld
rorb
push
and
repz
aaa
int3
frstor
shll
add
iret
fstps
jbe
fucomi
mov
jnp
pop
dec
sbb
xchg
push
aad
xchg
mov
test
fldcw
dec
dec
shrb
cmp
pop
and
jp
data16
adc
xor
sub
jae
cli
mov
popf
xor
xlat
mov
push
stos
sub
aas
mov
in
pop
xchg
inc
fwait
rolb
mov
idivl
test
mov
shrb
sti
je
mov
mov
mov
fwait
gs
cmp
insb
sbb
test
xchg
pop
loope
or
jns
ljmp
outsl
push
jmp
lcall
mov
add
xor
add
dec
add
rclb
cmpl
push
mov
es
test
inc
in
sarb
shll
xor
xchg
pop
lock
fldcw
aam
sub
dec
fdiv
pop
or
outsl
int3
cmpsl
pop
mov
xchg
cli
enter
flds
fwait
aad
push
notb
test
push
push
jmp
adc
mov
sub
in
test
mov
gs
add
popa
jecxz
lods
mov
sub
lock
into
call
addr16
mov
pop
bound
imul
push
pop
and
inc
push
mov
popf
fidivrs
jo
lcall
cmp
mul
call
jae
nop
inc
xor
cmpb
push
ljmp
imul
dec
cwtl
mov
adc
mov
adc
aad
mov
add
int
lds
movsl
pop
sbb
jns
cmp
lea
daa
dec
mov
out
xchg
shll
mov
scas
lea
outsb
mov
sbb
fdivrl
test
or
inc
dec
cmc
jns
add
imul
jle
mov
push
outsl
push
add
ror
jo
dec
aas
sub
lea
xchg
xor
xlat
mov
std
out
sub
js
mov
imul
mov
push
cwtl
adc
dec
fmuls
inc
inc
mov
popf
shl
xor
adc
ja
jg
push
mov
adc
push
mov
leave
rorl
ret
inc
ret
jle
pop
jg
cmpsl
ret
negl
sub
out
addr16
jle
dec
mov
or
mov
dec
adc
dec
and
and
cmp
cmp
xchg
pop
sub
mov
inc
pop
mov
inc
int
fdivrs
cwtl
mov
push
jmp
insl
out
add
and
cmpsb
cwtl
imul
add
pop
xchg
inc
pop
ret
xchg
fstpt
jb
add
mov
outsb
and
lret
movsl
mov
insb
clc
jge
out
xor
dec
cmc
negb
xchg
mov
mov
dec
lock
in
nop
pop
das
aam
mov
pop
push
popa
jmp
scas
daa
dec
cmp
jp
stc
dec
enter
jae
inc
adc
clc
push
out
jno
and
scas
ret
inc
push
inc
out
aaa
into
mov
test
adc
and
test
test
rcll
shll
mov
cmp
cmp
jl
push
inc
jns
sbb
sbb
adc
inc
push
stc
mov
and
stos
push
xchg
sub
jmp
mov
or
nop
dec
inc
and
inc
fbld
and
mov
xchg
mov
std
fcoml
adc
jecxz
pop
sub
nop
outsl
pushf
push
jmp
in
xor
out
movsb
cmp
cmp
mov
inc
mov
test
int3
cmpsb
xchg
mov
in
cmp
loop
sbb
aam
inc
addr16
adc
repnz
and
xor
js
xchg
xchg
popa
or
das
dec
mov
les
sbb
mov
push
inc
scas
out
dec
jbe
mov
jae
pop
ret
rcrb
das
mov
imul
sbb
fadds
je
dec
xchg
add
push
adc
lods
or
sub
cwtl
xchg
push
daa
fidivrs
xor
ss
fdivrl
push
stos
subl
dec
mov
inc
adc
push
imull
xchg
fildl
int3
loope
movsb
pop
out
inc
mov
in
addr16
dec
xor
loope
push
inc
jl
cmp
jmp
imul
fcoms
xchg
pusha
enter
xchg
stos
ss
cwtl
jae
cmp
jno
jo
mov
jno
cmp
ret
jle
mov
pop
adc
flds
push
sub
daa
sbb
cli
pop
and
sub
jl
loopne
aas
mov
mov
pop
in
pop
dec
out
and
pop
repz
cmpsl
push
inc
incl
lret
sub
leave
movsb
enter
mov
mov
xor
lret
xchg
es
popf
cltd
pusha
lock
aam
stos
fcoms
sub
insl
mov
outsl
popa
push
in
insb
loope
pop
adc
les
in
fdivrl
xlat
in
lret
cli
imul
stos
cmp
roll
lret
insb
repnz
cmp
adc
ss
mov
sbb
mov
cmp
sahf
jo
cltd
imul
push
xchg
jno
pop
rorl
nop
jbe
pop
jle
rcl
jb
stos
push
and
push
push
mov
push
stos
xchg
stos
sbb
and
sub
inc
pop
lret
fidivs
dec
or
std
cli
mov
rcr
lret
cli
int3
jb
and
or
mov
cmp
filds
push
and
scas
add
cmp
lret
ror
pushf
in
enter
pop
jg
xor
mov
pop
sti
jle
dec
mov
and
lret
dec
sbb
fists
incl
les
pop
and
and
xlat
or
in
pop
add
inc
sbb
pushf
jbe
andl
jo
pop
cmp
bound
lcall
xchg
nop
push
lods
sub
shrl
sub
cmc
std
or
pop
or
call
js
repz
lods
cmp
movsb
aam
xchg
mov
int3
test
xchg
ret
popa
cwtl
xor
cmp
stos
inc
jae
cmp
jle
ret
cmp
aas
push
xor
stos
cmovs
dec
lret
xchg
leave
mov
popf
cmovbe
roll
mov
scas
int3
pop
push
sub
imul
push
add
pusha
jg
xchg
lods
and
and
cmc
add
and
loopne
xchg
or
movsl
add
lock
lcall
and
imul
pop
dec
shrb
lret
arpl
sbb
std
mov
lahf
lret
mov
xchg
loopne
rcpps
ret
pop
pop
insb
sub
push
movsl
xor
dec
js
jnp
insl
insb
mov
je
and
stos
xor
cwtl
pop
and
mov
cs
outsl
pop
mov
sbb
push
rcll
arpl
fidivl
push
lret
insb
shrb
int
sahf
push
or
jge
sti
lods
repnz
das
xor
xchg
data16
jo
mov
xchg
pop
and
mov
xorb
pop
mov
mov
rol
lock
movsl
pop
icebp
dec
pushf
dec
in
mov
pop
lahf
es
pop
sbb
roll
gs
insl
stos
inc
pop
sub
std
notb
jle
lea
fcmovnb
fdivrl
lcall
jle
movsl
les
je
add
xchg
je
stos
push
fucomip
sub
jecxz
pop
adc
ljmp
hlt
pop
dec
adc
jno
xor
outsb
inc
mov
cmpsl
lods
or
cwtl
repz
ja
add
mov
ja
ret
xchg
shl
dec
jae
movsb
mov
push
cmp
inc
pushf
xchg
dec
jbe
icebp
sub
imul
scas
enter
push
dec
push
out
sub
mov
adc
ja
test
jecxz
sahf
jo
jl
push
ret
repz
lods
sbb
inc
sub
mov
adc
add
ja
add
imul
fsubrs
dec
aaa
xchg
mov
loopne
rolb
inc
iret
push
pop
js
cmp
cld
orl
push
rol
movsb
cmpl
xor
outsb
cltd
mov
jl
pop
jae
jmp
shll
in
mov
popf
cmp
xchg
arpl
je
pop
mov
aad
insl
cltd
inc
pop
jmp
or
sbbl
imul
mov
das
jecxz
cmpsb
mov
sub
adc
sbb
mov
das
movsb
popa
scas
pop
jne
xor
push
mov
aas
es
dec
mov
cmp
js
push
mov
mov
adc
cmp
rol
hlt
pushf
loope
ret
push
in
pop
scas
mov
cmpsl
dec
mov
adc
mov
lret
das
es
push
and
adc
cli
or
arpl
cmp
or
daa
je
lods
adc
push
inc
movsb
pop
jge
push
mov
xor
add
cmp
mov
stos
mov
jns
jmp
imul
xlat
test
mov
mov
fstcw
jae
stos
pop
lcall
shll
test
push
cs
jo
and
insb
repnz
pop
rcr
mov
pop
jge
incb
jecxz
iret
arpl
fdivs
pop
xor
jge
mov
jns
xor
and
enter
lahf
lret
inc
cli
add
push
xor
stos
sbb
xchg
push
xor
lahf
pop
jp
aam
sub
pop
jo
xchg
pusha
jne
sbb
shrl
out
lock
xlat
xor
push
sbb
push
jle
and
mov
out
subl
push
in
push
mov
mov
sbb
aad
call
add
mov
inc
mov
das
add
out
mov
mov
sahf
dec
fmuls
mov
out
ljmp
outsl
mov
pop
je
repnz
je
daa
out
mov
divl
jbe
insb
lahf
cwtl
xor
sbb
leave
xchg
out
mov
cmc
jmp
dec
add
cmpsb
lock
decl
icebp
jge
shrl
xor
subb
xchg
aad
mov
cli
pop
jle
mov
rcl
jne
mov
into
fldl
cmp
mov
insb
sahf
popf
test
in
mov
fidivrl
lds
xor
push
ljmp
mov
mov
aas
lds
test
out
mov
push
sub
insb
repz
add
cld
mov
out
rcrl
pop
xchg
adcb
clc
pop
adc
es
xchg
sub
or
stos
fsubrl
outsb
xchg
and
mov
icebp
aam
or
mov
nop
add
and
add
sub
fdivrs
sub
cltd
jg
sbb
push
out
push
dec
mov
mov
mov
or
rolb
int
lds
in
iret
movsl
pushf
xchg
mov
dec
scas
sub
cmp
xorl
out
js
push
jp
test
flds
sub
mov
adc
cmp
scas
nop
lea
pop
sub
jne
cmp
frstor
call
insb
in
idivl
jg
xchg
out
shrl
mov
pushf
push
ss
or
mov
mov
jbe
xor
test
pop
sub
mov
push
lret
add
push
popf
push
leave
call
jae
lret
add
sbb
xor
mov
andb
mov
xor
inc
js
lds
mov
pop
sub
sub
bound
inc
aas
adc
mov
lret
mov
mov
pop
and
movsl
pop
cmp
mov
cmp
mov
fcomp
inc
pop
sbb
icebp
xchg
and
test
ja
in
je
adc
insb
sub
push
shll
xchg
inc
fstpt
call
imul
or
lods
jne
push
push
sbb
and
xchg
cmp
or
jmp
test
push
cmp
push
int
js
mov
add
pusha
sub
or
call
pop
sbb
jnp
out
pop
dec
lcall
jnp
enter
in
ds
nop
push
incb
sbb
aad
pop
ss
lock
sub
add
scas
add
and
xchg
mov
les
xchg
pop
mov
pusha
gs
mov
or
xchg
divb
dec
or
mov
pop
and
aad
inc
mov
push
lea
and
pop
nop
pusha
fistps
push
mov
dec
adc
push
outsl
xlat
loope
mov
mov
jg
addr16
cltd
sbbl
jno
popf
sbb
je
cmpsl
in
fcoml
push
cmp
xchg
mov
add
pushf
push
and
xchg
sbb
adc
xchg
xchg
in
shlb
xor
dec
inc
aaa
fidivrs
jnp
out
test
sub
jle
sbb
jge
add
dec
pusha
inc
in
test
mov
add
mov
xchg
or
pusha
pushw
and
popf
hlt
movsl
cmp
enter
iret
popa
jl
adc
adc
and
dec
pop
and
stc
sub
outsl
dec
lahf
xor
les
pusha
icebp
shrl
ja
int3
cmp
add
jae
sti
xchg
loopne
xor
sbb
call
pop
push
mov
fwait
lret
inc
jmp
decb
fdivs
adc
add
xchg
outsb
xchg
ss
sbbb
xchg
xlat
stos
invd
negb
sub
push
push
loop
jle
out
popf
mov
es
pop
fidivs
lcall
push
xor
jg
les
out
mov
imul
pop
jge
imul
gs
mov
out
dec
dec
in
dec
out
xchg
arpl
jmp
lods
push
daa
insb
and
jmp
into
xchg
adc
sub
call
test
jb
out
scas
xor
sub
inc
push
push
pusha
into
or
sbb
cmp
fsubl
and
out
bound
add
leave
or
shll
scas
loop
loopne
lea
lret
push
inc
lret
aaa
lret
popa
push
sub
push
enter
fiaddl
stos
out
mov
mov
orl
lds
popf
push
xchg
jb
xor
inc
lret
push
cmp
dec
sub
aas
inc
int
fcmovnb
and
scas
ret
pop
popf
aaa
or
in
shl
inc
into
dec
cwtl
inc
xor
stc
lret
xor
idivl
xor
out
fdiv
mov
mov
int3
jp
lods
pop
xchg
or
dec
mov
ret
gs
jle
or
jge
xchg
xchg
mov
mov
mov
push
mov
movsb
imul
int3
test
das
adc
jp
movsb
jg
add
clc
jge
push
inc
fwait
jmp
pushf
sub
or
sbb
addb
inc
addr16
clc
fwait
mov
jp
inc
jbe
add
fdivrs
dec
pop
jae
fwait
call
aam
test
and
adc
loopne
cmpsb
cmp
aam
loope
mov
dec
inc
and
inc
add
mov
push
jo
dec
dec
cmpsb
push
inc
sub
pop
movsl
or
outsb
add
jg
sbb
mov
xor
aaa
xbegin
xor
call
jno
jo
mov
orb
pop
push
cmpsb
and
add
mov
test
push
les
or
dec
mov
inc
iret
push
sbb
scas
loop
xlat
mov
xchg
ret
popa
das
mov
leave
xor
pop
push
jnp
loope
jg
scas
xchg
mov
inc
dec
cmp
shr
sbb
cs
repnz
insl
pop
pop
mov
push
nop
cmp
punpckldq
clc
sbb
xchg
fwait
push
es
mov
mov
mov
add
dec
lods
es
js
pop
lcall
cmp
cmp
imul
dec
xlat
xchg
fcmovnbe
mov
dec
jbe
repnz
jl
push
xchg
lods
add
dec
pop
or
and
push
clc
fisttps
jge
ficompl
call
pusha
popf
fsubr
or
aas
jnp
inc
subb
add
push
out
xchg
rcr
push
add
jge
pop
sbb
xor
into
mov
xchg
aaa
mov
stc
inc
test
xchg
jns
mov
mov
aam
std
notl
imul
int
repnz
je
shr
mov
mov
out
push
mov
cmpsb
jns
jnp
test
and
cltd
dec
dec
xor
ss
xor
fidivrs
cmpsl
fdivrs
cmpsb
pop
lea
jb
push
mov
ja
sbb
add
orl
mov
fcomi
cmpsl
imul
frstor
sahf
or
sbb
int3
mov
pop
add
shll
out
dec
xchg
lret
xor
add
test
je
and
inc
insl
cli
or
les
test
pop
mov
aam
jbe
popa
movsb
adc
mov
xchg
cs
outsl
xchg
mov
push
loope
icebp
mov
fsubs
adcb
or
cltd
pop
xor
lods
mov
mov
cmp
dec
in
mov
jp
leave
jle
mov
in
ljmp
out
adc
or
or
ljmp
pop
je
or
jmp
sub
mov
aad
jbe
popf
pop
jp
inc
rorl
rcrl
inc
and
loope
adc
icebp
add
push
popf
xor
or
jno
inc
xchg
add
pop
mov
adcl
push
jnp
popa
fnstsw
fcoms
nop
call
fisttpl
loop
fs
idivb
out
jmp
xchg
push
cwtd
enter
iret
lods
jge
hlt
scas
cmp
rclb
daa
xor
xor
push
shll
andb
sub
scas
and
mov
mov
sti
out
or
or
in
test
jmp
jmp
sub
push
test
inc
inc
adc
movsl
xor
and
sti
sbb
arpl
fldt
cmp
mov
jb
int
call
scas
mov
sub
pop
xchg
ficompl
mov
sbb
sub
push
cmp
stc
inc
or
shrl
xchg
inc
outsl
sub
push
dec
xchg
jg
sbb
inc
outsb
idivb
jns
or
ds
andl
rorl
adcl
jle
out
cmc
dec
movsl
lods
jge
adc
ret
out
mov
idivb
int3
pop
mov
xchg
call
mov
mov
pushf
loopne
pop
scas
mov
mov
out
mov
pop
jg
add
ret
mov
out
in
push
loope
dec
inc
adc
add
add
push
jle
dec
mov
ret
mov
add
incl
frstor
sbb
and
mov
cmpsb
jne
das
adc
cmp
push
scas
push
outsb
shrl
icebp
cmpsb
dec
gs
lea
cli
xor
and
mov
jge
xor
sahf
adcl
inc
popf
dec
fs
and
sarl
stos
in
nop
in
sbb
lods
test
out
insl
push
jno
inc
and
inc
clc
xchg
push
faddl
pop
adc
fucomip
xchg
mov
mov
jmp
pop
and
jnp
dec
in
sbb
mov
ds
inc
movsb
lods
cwtl
lea
insl
inc
cmp
popf
movb
roll
pop
mov
sahf
dec
subb
adc
and
outsb
out
aaa
jge
dec
gs
xor
and
adcb
sbb
dec
mov
pop
cmc
ret
outsb
in
mov
out
sarb
inc
lea
in
inc
call
pop
sbb
sti
push
imul
sub
jge
xchg
adc
and
sbb
lock
jmp
sbb
ds
daa
sub
or
enter
insl
and
rcrl
sbb
sub
pop
pop
push
test
inc
lods
cwtl
stc
test
fsubl
jne
nop
cmp
sbb
arpl
pop
jecxz
push
lds
or
pop
in
jp
lcall
mov
sbbl
mov
icebp
dec
jne
inc
sbb
fstl
nop
lods
pop
pop
add
xchg
test
fwait
jbe
mov
push
sub
ljmp
dec
pop
sub
sahf
testb
out
sahf
shll
jecxz
pop
push
popf
into
imul
cli
ja
out
mov
popa
inc
push
cli
std
imul
gs
cli
daa
mov
dec
fldl
xchg
mov
sbb
cmp
pop
jno
and
out
mov
mov
jmp
adc
mov
mov
add
and
xlat
dec
pushf
iret
xor
mov
iret
rcl
jno
lcall
hlt
xchg
orb
repnz
cld
cmp
mov
je
xor
push
push
insl
dec
stos
mov
aam
lock
popa
in
add
fnstcw
pusha
dec
mov
mulb
fcoml
movsb
sub
inc
dec
sub
push
or
pop
push
icebp
cmpsb
addr16
sbb
scas
cmc
fists
das
jne
push
and
inc
out
mov
shll
adc
mov
xor
mov
push
decl
dec
je
mov
mov
cmpsb
mov
lcall
outsl
hlt
lods
xor
scas
sub
or
aad
ret
push
xchg
sahf
inc
rcll
mov
fs
aaa
lds
in
icebp
push
mov
jmp
stos
lcall
popa
mov
dec
jb
cmp
aaa
or
popf
stos
mov
repnz
cmp
xchg
sbb
or
aaa
adc
add
fistpl
or
lret
scas
and
add
sub
fisubl
int
and
xchg
ret
gs
mov
jge
addr16
jp
jecxz
jno
popa
dec
jo
jnp
jno
or
iret
xchg
cmp
xchg
cld
out
in
stc
cwtl
mov
movsl
leave
cmp
or
fwait
leave
xchg
mov
or
movsl
sub
and
push
fildll
mov
push
iret
xor
xor
loop
in
pushf
lods
imulb
pop
nop
dec
aas
imul
out
xchg
or
push
fnstenv
mov
jp
push
add
mov
mov
xchg
sbb
pop
sbb
inc
xchg
imul
add
aad
lea
test
jbe
leave
inc
pop
cmp
mov
sbb
inc
shlb
ja
and
xchg
mov
inc
call
xchg
out
xchg
std
mov
movsb
add
dec
scas
jl
xor
test
in
jae
cmp
daa
xor
adc
push
in
pop
fildl
call
movsb
pop
dec
rcr
fcompl
cmp
sub
cmp
pusha
xor
sub
push
push
jmp
add
gs
pop
cs
test
jle
pop
adc
int3
push
mov
scas
inc
dec
xchg
push
push
gs
add
add
aam
lcall
add
fidivrl
push
pop
addr16
adc
adc
sbb
cmpl
les
sbb
icebp
xlat
pop
jecxz
clc
inc
cli
xchg
and
lock
js
rorl
adc
mov
das
inc
mov
mov
inc
inc
xor
sbb
jecxz
mov
into
neg
andl
repnz
mov
xor
xlat
jecxz
dec
or
jmp
mov
das
addr16
ja
cmpb
adc
jg
in
xor
js
mov
inc
fdiv
fsubs
popa
xchg
xor
cmp
adc
inc
cltd
fdiv
sbb
sbb
ret
imul
mov
cmpsb
movsb
testl
test
inc
arpl
enter
dec
lret
add
and
or
ret
xchg
cmp
sub
subb
scas
pop
js
mov
cmp
jecxz
mov
jnp
imul
repnz
sub
sbb
mov
je
popa
add
cld
cwtl
in
push
cmpsl
and
cmp
hlt
pop
inc
ret
int3
mov
adc
sub
fldt
sbb
mov
jmp
insl
aaa
mov
mov
jnp
sbb
dec
lods
outsb
sbb
lea
fld
mov
add
push
movsl
jmp
sbb
add
xchg
jbe
int3
clc
sub
dec
std
call
shlb
lds
cmpsb
or
pop
loop
add
fsub
sbbb
insb
and
xor
cmp
or
dec
cli
jle
clc
mov
dec
jne
jl
xchg
lret
outsb
mov
and
xchg
insl
jmp
mov
inc
or
xor
test
rclb
fwait
jne
repz
push
int
aam
lahf
lcall
cmp
inc
mov
loop
push
js
fcmovu
roll
insb
pop
jmp
add
and
dec
mov
jmp
mov
cmpsl
pusha
not
pop
cmp
imul
inc
leave
arpl
mov
ljmp
aaa
inc
andb
dec
call
xor
or
mov
mov
push
pop
pop
pusha
out
mov
mov
cmp
data16
sub
or
loope
fs
les
xchg
mov
cmpsl
shl
xchg
cmp
jle
sarl
orl
adc
cmp
xor
repz
cltd
fsubp
aas
mov
mov
aas
lret
in
into
lret
add
loope
pop
dec
lret
stos
add
lcall
rolb
mov
or
mov
fs
mov
sbb
pop
ja
mov
mov
pop
lods
outsl
std
mov
or
stc
pop
leave
mov
jns
rcrb
sub
or
adc
ret
enter
inc
mov
jecxz,pn
mov
lea
inc
imul
inc
push
push
fcoml
push
dec
orb
clc
jp
push
mov
xchg
mov
mov
cli
outsb
or
adc
call
or
xchg
aas
rcr
shrl
outsl
add
pop
movl
in
jle
jecxz
movsb
add
and
negb
cmpl
jno
xor
popa
lock
cld
adc
fsubr
jle
ds
add
pop
pop
imul
add
insl
cmpsl
and
sub
lret
jbe
cmpsl
mov
ds
or
fs
mov
mov
add
add
aaa
stc
mov
xor
lret
cwtl
jnp
cmp
pop
pop
or
lret
mov
inc
popf
shlb
dec
int
add
inc
jb
or
push
jnp
mov
cmc
pop
push
nop
das
stos
in
or
mov
dec
popa
mov
mov
int
jmp
ret
pop
insl
and
cs
adc
rorl
mov
pop
mov
fwait
jno
add
push
out
in
mov
cld
add
add
mov
repz
test
out
cmpsb
push
jge
rorl
jmp
cmpsl
xchg
leave
movb
jae
jle
fwait
popf
push
lods
fmuls
imul
mov
mov
out
gs
fs
and
adc
xchg
add
pop
sub
dec
fiaddl
mov
out
adc
cs
icebp
sub
daa
dec
and
cmc
inc
les
shll
push
xlat
inc
sarl
call
push
sbb
insl
sbb
add
add
cmp
mov
out
adc
lahf
inc
cmp
imul
lods
repz
push
je
mov
mov
jns
and
test
pop
shrl
decb
cld
les
mov
xor
test
shlb
lock
in
push
xchg
addb
in
outsl
mov
lods
jl
inc
ss
popa
loop
jbe
xchg
fcmovb
insl
fimuls
xor
mov
dec
adc
cmp
arpl
pushf
scas
jge
adc
into
xchg
es
loop
add
jb
test
add
push
movsl
imul
adc
pop
add
push
adc
sbb
adc
push
out
cmpsw
mov
push
adc
and
mov
pusha
jns
orb
add
insb
xor
inc
psraw
jl
rdmsr
lods
lea
addl
mov
cmp
pop
ss
pop
stos
xchg
lret
xor
cmp
stos
out
es
xchg
call
add
testl
in
jp
popa
push
mov
bswap
leave
hlt
pop
lret
shll
mov
jae
nop
sbb
jne
ror
enter
push
pop
sbb
mov
jnp
enter
pop
push
push
jle
push
pop
push
pop
adc
inc
mov
xorb
adc
es
mov
xlat
data16
movsl
ss
daa
or
add
inc
jne
xchg
push
add
sarb
cli
dec
sub
daa
cs
outsb
inc
or
mov
mov
cmp
idivb
cmc
insl
ror
dec
sti
or
in
sub
sbb
jo
mov
lds
mov
ds
clc
into
rcrb
and
aam
adc
pop
scas
mov
or
sar
and
fnstenv
and
and
cmpsl
sti
int
mov
andl
jg
arpl
fsubs
cmp
adc
dec
mov
and
mov
sub
add
jp
call
out
aam
out
gs
out
xor
iret
repnz
cltd
fcompl
cmp
fs
add
outsb
push
cmpsl
sbb
sahf
loop
cmp
daa
out
adc
and
das
lods
scas
cmpb
add
mov
out
fsts
xor
and
enter
nop
clc
sub
add
add
jne
xor
pop
jle
sahf
inc
aas
inc
aas
mov
mov
jne
cmp
lret
mov
inc
test
scas
sub
adc
notl
outsl
cwtl
or
cmpsb
sbb
mov
pop
mov
addb
pop
mov
cmp
or
stc
into
mov
pop
cltd
mov
cmpb
xchg
jp
xchg
jo
xchg
and
scas
int
jecxz
mov
insl
and
mov
stc
xchg
movsb
sbb
jae
pop
mov
push
xchg
push
sarb
ljmp
in
loop
outsl
sbb
imul
sbb
out
xchg
xchg
jno
ds
inc
push
pop
mov
imull
insl
adc
ficompl
push
sub
out
or
out
and
repz
xor
out
rcrb
call
fiaddl
push
mov
sbb
xchg
punpckhbw
pop
loopne
cmp
lods
ds
mov
and
inc
lahf
arpl
mov
adc
mov
repnz
incl
ret
pop
jmp
gs
femms
or
scas
inc
cmp
jmp
jbe
cmp
mov
xor
sbb
xor
sub
popf
jle
mov
ffree
sub
sub
jb
jmp
arpl
rorb
pop
das
dec
xchg
mov
cmp
lret
push
pop
inc
dec
pop
sahf
mov
and
cmp
cs
sub
dec
sub
sub
rcrb
jb
sub
or
and
repz
lea
and
neg
bound
or
and
mov
lock
sub
fidivs
xlat
xchg
mov
xor
inc
fldcw
and
jae
cmp
cmc
pop
add
jno
mov
hlt
mov
jnp
xchg
jp
mov
xor
mov
icebp
jne
dec
iret
adcl
xorb
jb
mov
sarl
dec
xor
clc
adc
xchg
xchg
jb
loope
pop
aas
mov
movsb
dec
and
mov
mov
adc
sbb
mov
and
pushf
push
push
push
push
xchg
into
mov
xor
cltd
in
push
mov
insl
sysenter
in
iret
mov
xchg
add
sbb
add
ljmp
cmp
and
pop
mov
fwait
mov
cld
repnz
aaa
ljmp
sbb
jg
imul
les
sub
cld
rolb
cs
lock
stc
test
ret
dec
pushf
cmpsl
or
mov
frstor
in
pop
cmpsb
and
scas
lea
fwait
bnd
xor
adc
lea
adc
out
mov
das
int3
adc
sbb
int3
xor
xchg
pop
dec
movsb
out
dec
aaa
adc
sub
mov
add
or
out
xlat
insl
daa
lea
inc
sbb
ljmp
stos
jmp
iret
lds
pop
es
sbb
mov
sbb
mov
int
xchg
out
dec
pop
movsl
stos
fbstp
pop
xor
xchg
pop
xchg
jo
call
jbe
and
pop
ret
fcompl
pop
notl
lds
out
jge
popa
fistpll
ljmp
in
jl
push
pop
rcl
pop
mov
cmp
dec
movsb
fsubp
adc
daa
sbb
mov
lods
push
push
inc
push
push
int3
push
dec
sub
sbb
js
nop
sub
inc
test
dec
lods
cmc
or
mov
pop
xchg
lret
pop
mov
inc
jbe
lcall
or
fisttpll
nop
out
jnp
jge
add
jge
int
cmpsl
in
testl
aam
loope
add
xchg
repz
ficompl
xchg
push
add
mov
pop
jl
test
mov
popf
mov
movsb
daa
js
xchg
das
jmp
jno
cmp
inc
ss
dec
iret
add
sbb
jp
jns
fsubp
pop
cmc
aad
add
cmp
pop
rolb
stc
int
push
sub
pop
test
out
mov
mov
add
and
or
in
pop
cs
gs
jns
out
lods
insl
mov
push
les
jp
add
jns
or
mov
imul
mov
leave
mov
lods
lret
hlt
push
fsubrl
shlb
lahf
mov
inc
inc
pop
xor
jno
je
out
and
out
enter
lods
inc
xchg
sbb
xchg
scas
stos
in
test
push
repnz
cmp
mov
push
mov
sbb
popa
fdivrl
xlat
loop
clc
test
adc
push
push
dec
std
lods
loope
push
mov
dec
bound
aaa
inc
fildll
mov
sbb
inc
jle
or
lret
sbb
movsl
icebp
pop
subb
jns
mov
pusha
push
jae
out
inc
andl
dec
jecxz
stos
sbb
mov
aam
inc
inc
dec
jle
addl
adc
out
mov
adc
ret
mov
js
shl
pop
jmp
and
jg
addl
stc
add
mov
xchg
lret
jl
xor
dec
test
sahf
mov
sub
mulb
xor
adc
add
mov
xchg
mov
pop
out
fiadds
cli
stos
outsl
inc
cmpsb
cmpsb
or
push
or
cmp
inc
cmp
push
mov
aam
pop
dec
movsl
fnstsw
mov
or
pop
pop
dec
incb
je
mov
jmp
cmp
xchg
dec
aam
movsb
dec
cltd
pushf
xor
dec
push
hlt
mov
fbstp
pop
addr16
jo
xorb
adc
push
cltd
das
in
add
xor
jl
inc
push
add
inc
cmc
das
das
int
mov
or
xchg
testl
pop
pop
sbb
out
fcmove
dec
test
cvtdq2ps
scas
clc
or
scas
test
push
mov
xor
out
sbb
repz
insb
inc
or
inc
or
or
add
inc
aam
lahf
jbe
or
out
lret
adcb
xor
mov
push
push
jge
cwtl
ss
cmp
mov
rorb
mov
or
addb
sub
ret
int3
addr16
lcall
xchg
dec
jns
mov
push
mov
lahf
jno
and
jb
xor
push
in
push
test
into
cmp
and
pop
sbb
xor
gs
pop
loopne
push
sub
adc
xchg
mov
ss
dec
jne
pop
cmc
dec
in
icebp
jae
push
aaa
dec
pop
sub
jge
cmpsb
fisttps
push
xchg
mov
movsb
cwtl
sbb
inc
pop
ljmp
inc
loope
andl
scas
clc
mov
aam
push
dec
dec
in
mov
or
push
out
push
mov
mov
adc
inc
push
add
pop
xchg
pop
lret
dec
lret
adc
inc
lahf
icebp
loop
adcb
mov
std
mov
mov
std
std
out
mov
push
dec
pop
push
mov
dec
jge
sbb
insl
lods
sar
les
xor
decl
mov
mov
sub
push
arpl
stos
repz
sbb
jg
inc
xor
insl
mov
cltd
outsb
mov
pextrw
inc
push
pusha
mov
adc
dec
mov
xchg
jp
push
sbb
das
dec
aad
lret
jnp
push
cmpsl
lods
divl
cmc
sub
add
push
xor
xchg
mov
jbe
roll
adc
dec
das
push
lret
leave
jle
pop
jo
jo
or
mov
ss
push
loopne
xchg
jge
pop
fimuls
inc
in
add
add
push
movsl
push
in
rep
pop
inc
xlat
pop
cmp
or
mov
dec
or
cmp
das
cmp
pusha
inc
xor
lcall
add
scas
cld
ljmp
outsl
ljmp
mov
cmp
mov
mov
push
movsb
fistpl
jl
push
lret
adc
mov
sbbl
inc
push
add
cltd
inc
pusha
dec
test
mov
nop
gs
into
pop
daa
es
push
cwtl
xchg
and
mov
sub
push
xchg
int3
sub
pop
ss
mov
cmp
mov
out
inc
rorb
gs
jp
xchg
jno
leave
test
cmp
out
outsl
lcall
pop
inc
ja
imul
rcr
xchg
push
fisubl
lret
test
repz
jne
scas
jg
fisubrl
mov
scas
push
mov
jb
dec
cmp
fisubs
frstor
aam
jecxz
in
push
stos
int3
sbb
or
xlat
jge
repz
pop
call
fisubrl
ja
jns
pushf
cmp
int3
mov
pop
filds
pop
sub
push
adc
cli
insl
adc
mov
out
pop
or
xchg
jnp
out
mov
mov
ret
jnp
fldt
shll
adc
inc
leave
cmp
mul
mov
popf
cld
outsb
ror
loope
mov
jp
dec
clc
addb
mov
in
stc
shl
jae
fxch
sti
inc
sbb
mov
push
in
cmp
lds
mov
out
push
add
inc
int3
aam
out
adc
adc
push
pusha
leave
jecxz
cmp
test
cli
pop
mov
daa
mov
int
push
jl
and
pop
sbb
in
mov
sbb
pop
test
out
aaa
add
push
adc
mov
lea
outsb
in
xor
aas
sub
lods
pop
mov
pushf
test
imul
insl
inc
fimuls
jp
mov
and
mov
shrb
mov
cmp
inc
addr16
out
mov
pusha
cmpsb
int
add
xchg
imul
mov
addr16
sub
es
scas
fwait
cli
iret
stc
test
cmpl
shrb
pop
bts
sti
xchg
imul
aad
rcl
je
leave
enter
fs
leave
cmp
or
movsb
loope
pusha
mov
pushf
shlb
add
push
shlb
cmpsl
mov
stos
xor
cwtl
cs
add
jo
out
fucomp
imul
mov
cld
xchg
push
aad
cmp
call
lods
mov
or
outsb
dec
sbb
nop
pop
test
cmp
nop
lock
fimuls
add
jno
loope
stos
cld
push
pop
cwtl
mov
stc
cmp
jmp
dec
push
outsl
int3
in
mov
xlat
sahf
icebp
xor
inc
testb
mov
xchg
inc
jnp
fisubl
sub
data16
lret
test
out
pop
mov
add
in
xchg
stc
jg
adc
mov
test
sub
push
jecxz
push
push
imul
jb
cmp
and
and
lods
daa
in
fdivs
sub
aad
into
push
inc
dec
cmpsl
jns
xchg
mov
lret
jp
push
dec
mov
jnp
jo
adc
jmp
sub
mov
imul
fiaddl
adc
inc
add
call
imul
scas
sti
shlb
lods
mov
push
dec
and
jecxz
ret
aam
lcall
pop
das
test
hlt
sub
pop
jo
cltd
inc
pop
or
pop
sub
hlt
orl
repnz
push
cmp
cmpsb
adc
arpl
test
int
add
cmp
jle
adc
fistl
lret
pop
mov
mov
mov
adc
sub
daa
ja
les
jnp
jbe
pop
mov
sbb
xchg
push
xor
mov
das
popa
test
xlat
aas
xor
pop
in
inc
popa
dec
sbb
or
cli
and
imul
imul
cli
call
ljmp
ljmp
xor
mov
sbb
scas
mov
dec
add
outsl
outsb
mov
xor
and
fcomip
in
jmp
pop
outsl
jnp
pop
sahf
sbb
scas
inc
repnz
cmp
fs
jp
cmpsb
cmc
lcall
add
jecxz
pop
cmpsl
push
push
fwait
lds
movsl
aam
pop
xchg
loope
adc
cmp
dec
subb
imulb
jge
addl
aaa
jnp
sbb
cwtl
push
jl
movsl
je
mov
inc
mov
dec
pop
lret
push
xchg
loopne
lahf
repz
aas
in
ret
cmp
and
shll
pop
in
scas
add
jge
push
adc
xor
push
jmp
add
pop
and
popa
or
lahf
insl
std
inc
ret
or
test
sbbl
mov
lahf
mov
mov
shrl
jl
push
sub
jns
xor
frstor
xchg
push
popf
fwait
mov
mov
pop
ret
stc
inc
fs
popf
dec
adc
decb
out
inc
or
arpl
fwait
test
movsb
addl
push
je
cltd
fmuls
jp
repz
out
or
sub
and
mov
mov
cs
add
ja
jo
ja
es
outsb
xchg
mov
xchg
out
lods
sarb
dec
mov
push
cmp
sahf
mov
call
test
das
cmp
sarb
fucomip
and
and
shl
aaa
fcmovu
sbb
cwtl
pop
xchg
adc
cmp
or
and
in
sbb
pop
pop
cmp
xor
int
or
test
mov
in
push
rcrl
dec
mov
jg
pop
and
dec
outsl
and
or
xor
std
mov
std
movsl
pushl
movsb
ror
leave
or
mov
cltd
mov
dec
mov
inc
lahf
and
cwtl
std
jecxz
mov
jg
fadds
push
sbb
pop
xchg
sbb
xor
loop
dec
mov
jno
jp
add
lds
dec
jp
add
dec
idivl
faddl
mov
or
mov
mov
shll
xchg
ja
and
in
repz
xchg
sti
or
mov
push
push
insb
sub
stos
mov
pop
mov
adc
test
dec
les
mov
jecxz
pop
and
ret
add
add
and
xchg
es
btr
fsub
inc
popa
pop
lock
pop
add
out
inc
mov
js
cmp
sbbl
loope
mov
int
push
or
cmpsl
mov
int
into
add
pop
pop
lret
push
mov
sahf
xchg
stos
es
fimull
xchg
cmpsb
clc
push
adc
xchg
jp
add
jne
movsb
jno
aaa
data16
mulb
fwait
mov
in
nop
xchg
pop
xchg
sbb
pop
std
cmp
test
cltd
movsb
fadd
jne
and
mov
push
aam
jo
sub
sub
popa
out
test
in
inc
jge
mov
adc
jno
scas
stos
inc
lods
pop
lahf
gs
jae
daa
add
mov
jo
movsl
cmp
jno
pop
loope
shr
push
mov
sahf
sbb
insl
adc
bound
push
cli
inc
paddusb
push
push
add
xchg
mov
int3
dec
jl
les
dec
push
mov
pop
sar
int3
scas
sub
inc
ret
push
mov
inc
push
test
add
pushf
lea
inc
mov
std
lcall
hlt
rorl
sbb
jo
into
repz
or
fwait
imul
sti
cmpsb
push
fs
or
clc
es
pop
pop
jle
push
jmp
arpl
or
xor
in
jnp
inc
lock
out
pusha
jmp
insl
lock
or
jl
and
mov
inc
into
ss
popa
inc
loope
mov
sub
std
xchg
subl
subl
push
lock
cs
aam
xor
test
cmp
add
jbe,pn
fisubrl
fists
pop
pushl
inc
sbb
cmp
addl
mov
push
shrb
sbb
lods
sub
mov
icebp
push
push
and
push
push
cmpsl
sbb
cmp
scas
jne
fiaddl
mov
inc
pop
es
mov
inc
sbb
jne
nop
or
ja
xchg
out
or
jae
push
into
sub
adc
adc
cmp
pop
cli
outsb
add
dec
mov
inc
shll
mov
add
cmc
fdivl
sub
pop
jo
bound
sahf
mov
jo
adc
shll
ja
pushf
mov
xchg
loope
sahf
pop
adcb
lds
aaa
movsl
rcrb
in
push
push
shlb
out
pop
lds
mov
sti
jbe
or
xchg
push
mov
xor
add
adc
das
mov
shrb
mov
ds
cld
gs
mov
jb
xchg
cmp
cli
std
mov
xlat
lea
jmp
shlb
ret
jmp
jmp
clc
xlat
std
xor
nop
sub
sbb
daa
or
sbb
pop
ret
je
pop
in
fdivr
jbe
into
ss
add
xorl
inc
insb
xchg
sub
dec
movb
adc
mov
rcrl
stc
sti
jg
adc
or
enter
push
fwait
mov
cmp
flds
testb
ljmp
and
data16
cmp
add
fwait
pop
pop
js
ja
adc
xor
or
mov
mov
mov
push
aas
out
outsb
sbb
push
sub
arpl
sbb
enter
out
and
and
cmpsb
mov
add
push
daa
test
rcrl
test
test
rcrl
icebp
pushf
xchg
lds
push
popa
aam
jmp
mov
jae
push
sbb
cmp
rcrb
cwtl
and
push
xor
push
cmp
call
xor
lret
mov
pop
xchg
jae
sarl
adc
mov
and
shll
js
cmpsl
icebp
mov
inc
cmp
outsl
inc
popf
test
rcrl
mov
xorb
addr16
sub
adc
adc
mov
es
mov
sbbl
mov
cmpsl
sti
sub
inc
mov
sbb
push
faddl
inc
repnz
or
jle
aaa
dec
outsb
arpl
aas
imul
mov
cmp
cmpsb
in
mov
jl
repz
push
cmp
inc
aam
sub
mov
jge
insb
jp
cmpsl
cld
outsb
in
jne
jne
cli
mov
out
and
mov
fdivl
lods
xchg
gs
mov
dec
std
sbb
and
pop
cmc
mov
dec
add
lcall
add
aad
repz
xor
cmp
divb
outsb
daa
imul
pop
js
movsb
das
repnz
rclb
xchg
mov
cmp
sub
mov
ljmp
jnp
mov
mov
cmp
dec
sti
shlb
push
dec
cmp
sub
in
mov
rcll
jg
mov
xchg
mov
jg
cmp
mov
mov
xchg
mov
push
cmp
in
bound
test
sti
repnz
jmp
mov
xchg
mov
loopne
pop
fdivrs
mov
mov
jbe
xchg
loop
dec
xlat
cmp
lahf
iret
in
ss
dec
add
dec
xor
xchg
push
and
mov
cmc
jge
cmp
dec
popf
mov
popa
and
int3
or
cmc
js
mov
xor
jno
daa
outsb
leave
push
test
pop
cli
mov
int
cmpsb
or
push
ret
push
aaa
xor
pop
loop
repz
sbb
mov
std
popa
inc
add
push
xchg
cmp
leave
call
bound
jp
push
std
call
or
mov
sub
and
xlat
lds
jp
push
repz
andl
cmc
fsubrs
adc
sbb
and
xor
or
pop
aam
out
adc
jmp
outsl
sub
stc
mov
int3
cwtl
fnstcw
popf
sbb
loope
mov
dec
hlt
pusha
outsl
adc
repz
cmp
jg
ss
xchg
mov
loopne
sub
test
xchg
rorl
mov
fwait
sub
ret
shrl
jg
or
jae
movsl
adc
test
mov
add
outsl
jp
pop
pop
mov
or
inc
dec
push
fsts
mov
outsb
ja
shl
je
xor
sahf
push
xchg
cmp
or
loope
mov
loop
in
sahf
xor
jg
pushf
inc
pop
adc
mov
push
push
es
aad
ret
hlt
lret
mov
pop
cmp
fistl
push
scas
xchg
lods
scas
mov
cs
sbb
sbb
mov
xor
xor
cmp
jmp
std
iret
push
mov
jl
add
or
cmp
jle
popa
test
out
jno
punpcklwd
fisubs
xchg
mov
inc
enter
push
mov
jl
imull
mov
cs
sahf
dec
adc
add
cmp
pop
gs
pop
fisubl
xor
insl
fisubrl
inc
lret
addr16
cmc
pop
movb
aam
jmp
loope
pop
bound
dec
adc
lods
cmp
mov
xchg
repz
mov
in
mov
test
jae
jge
and
cwtl
nop
addr16
insb
into
roll
push
xor
dec
cmp
mov
sbb
inc
les
in
inc
dec
or
pushw
lret
ficoml
mov
je
in
inc
popf
sub
and
es
fldz
pop
push
addr16
sbb
je
cli
cmc
dec
jl
fisttps
inc
pop
int
add
mov
mov
call
cmp
ret
jecxz
push
stos
jb
orb
mov
ret
dec
in
or
mov
adc
xchg
lcall
enter
inc
sbb
pusha
outsl
call
ja
jge
dec
xchg
sub
push
imul
aad
fcmovnbe
cmp
inc
cmp
push
data16
sub
jle
jo
hlt
cmp
out
icebp
push
bound
pop
xlat
mov
sub
stos
je
fwait
enter
stc
enter
jp
adc
data16
popa
xor
pop
xchg
sub
mov
add
adc
fidivl
das
les
or
xchg
lods
fcmovnbe
mov
nop
leave
lea
xchg
cmp
addl
xor
mov
push
insb
or
jg
ficompl
leave
or
pop
stos
in
std
enter
outsb
ja
es
scas
sbb
xorb
sub
stos
outsl
sub
dec
test
xor
clc
fs
shll
outsl
loopne
ror
mov
push
sub
out
lock
mov
xor
pop
shll
int
lock
clc
jno
cmp
inc
sahf
and
or
rcrl
sub
and
iret
mov
cmpl
sbb
iret
rorl
aaa
clc
jge
in
xor
xor
imul
mov
sbb
js
les
popa
dec
inc
aaa
movsl
fiadds
test
into
xor
into
push
std
lock
sub
in
mov
and
pop
cmp
jae
or
add
push
inc
pop
cmc
ljmp
ljmp
pusha
std
adc
jecxz
btr
push
mov
ret
scas
and
cmc
insb
push
mov
dec
loop
add
out
rorb
push
dec
loop
mov
jns
ror
jbe
xchg
jl
enter
das
sub
cmp
adc
in
jecxz
push
xchg
in
mov
push
hlt
push
rcrl
sahf
enter
or
sub
and
movsb
in
shlb
dec
xor
shrl
jb
inc
add
mov
std
insl
je
lea
xchg
jnp
pop
cmpl
or
lods
sub
and
push
jmp
ret
fistpl
or
jb
fdivrp
ret
ret
in
in
pop
pop
imul
push
mov
and
ss
pop
and
ficoms
fcomps
lock
iret
lods
xor
insb
je
fldcw
pop
mov
cmc
xchg
pop
sub
popa
cltd
hlt
dec
insl
outsl
pop
and
adc
andb
outsb
pop
roll
add
ret
sti
inc
dec
adc
jecxz
xchg
stos
cltd
stc
fistps
cld
xor
dec
cmp
adc
rcrl
lcall
lea
movsb
push
mov
ret
cltd
aad
stc
mov
je
sub
sbb
fdivl
faddl
shll
shrb
hlt
or
cmp
adc
xchg
push
xor
inc
clc
sbb
jl
es
sahf
shlb
push
inc
rol
rcrb
sbb
or
add
mov
pushf
jbe,pn
adc
fcomps
mov
pop
cmp
sbb
mov
js
iret
mov
scas
rcll
negl
xor
push
inc
popl
and
adc
nopl
mulb
scas
shrl
orl
outsl
add
pushf
jge
inc
mov
dec
xchg
jecxz
mov
xchg
mov
addr16
mov
push
inc
mov
sub
or
mov
add
lret
inc
fwait
xor
xchg
cmp
icebp
repnz
mov
call
xor
add
sub
sub
pop
mov
jb
inc
cmpsb
cmp
or
jecxz
xchg
hlt
scas
jmp
popf
add
fs
sbb
aaa
mov
sub
call
repnz
imul
pop
mov
pop
fldenv
int3
xor
pop
cmpsl
add
in
add
aam
or
push
dec
xorb
and
arpl
lea
loope
xor
stos
or
inc
out
cmp
inc
pop
mov
jl
pop
mov
test
xchg
pop
mov
pop
dec
pop
push
cltd
inc
adc
mov
js
dec
pushf
mov
add
sysret
xchg
jg
add
lcall
add
in
or
movsl
enter
fmull
pop
jle
pusha
fmull
xor
mov
add
cmp
cmp
cmp
je
inc
xchg
fwait
out
andl
int
xchg
orl
adc
sub
imul
inc
inc
mov
jecxz
dec
xor
mov
cmpsl
pop
xchg
push
cmp
lahf
int3
xchg
and
mov
lcall
inc
inc
enter
xchg
sub
andl
push
mov
xchg
sbb
inc
aas
pop
icebp
fistpl
push
mov
mov
add
jmp
push
out
je
xchg
sbb
inc
add
pop
in
xchg
sarl
movsl
add
push
js
push
ss
fcmovu
ficoms
adc
and
pop
add
jnp
int
cwtl
mov
pop
add
push
subb
fwait
imul
test
daa
pop
mov
sub
sub
cmpsl
ljmp
dec
setl
xchg
xchg
setb
pop
aaa
pop
les
push
push
cmp
mov
movsl
out
inc
nop
sti
data16
or
cmp
add
sub
adc
xor
mov
out
leave
adc
inc
jae
push
add
sub
jmp
jnp
jb
addr16
or
xchg
insl
addl
clc
scas
stc
mov
mov
jno
sbb
or
subb
sub
push
hlt
sub
cwtl
jne
mov
jl
sbb
data16
and
cmc
fcoms
jno
dec
add
mov
ror
lret
dec
testl
sub
mov
xchg
fiadds
pop
sbb
das
mov
call
or
cs
pushf
bound
call
mov
insb
dec
dec
sub
int
test
nop
add
mov
jp,pt
repz
pop
sbb
jns
in
push
stos
push
loopne
lretw
out
ds
rorb
dec
fcompl
ret
xor
sbb
movsl
daa
inc
fadd
sbb
pop
cmp
push
test
jb
inc
pop
imul
xor
hlt
bound
test
mov
fs
mov
mov
js
jo
adc
lods
mov
mov
add
sbb
test
sbb
xchg
xor
addl
cmpb
les
data16
push
movhps
dec
ss
lods
push
lret
adc
addl
enter
xchg
mov
lea
ss
lahf
lret
mov
mov
xchg
shrl
cmp
mov
rorb
pop
xor
popf
aad
sub
xorl
dec
popf
ja
pop
adc
in
sub
shrl
test
dec
adc
mov
fisubrs
fs
xchg
setp
mov
fadds
push
xor
or
bound
popl
movsb
push
push
add
sbb
test
repz
mov
insb
into
fdivr
push
or
imul
cltd
ret
dec
xchg
je
add
repz
and
jmp
pop
mov
add
enter
clc
shl
nop
lods
aaa
inc
les
or
jmp
cli
inc
rcl
js
imul
dec
mov
sbb
sub
xchg
jo
out
xor
sub
fldenv
xchg
xchg
xor
jb
imul
addr16
mov
int
jge
xchg
daa
add
repz
or
sbb
cmp
push
push
mov
imul
leave
nop
mov
cld
aam
nop
cmp
loopne
xor
insl
adc
jo
bound
mov
aad
in
cmc
lret
sub
add
out
jle
fidivs
stos
or
fwait
cli
sti
inc
cmp
and
sbb
jecxz
mov
mov
hlt
int3
xchg
sub
lods
movsl
dec
jb
in
in
xchg
jmp
dec
mov
daa
xchg
push
push
inc
outsb
xor
or
jg
pop
cs
inc
mov
repnz
push
lock
cmp
ds
sub
xlat
mov
and
sub
out
or
pop
jg
cli
inc
pop
gs
jb
andb
inc
cmp
popf
or
mov
push
mov
inc
push
clc
sbb
int
lret
ljmp
push
cmp
mov
mov
mov
out
mov
cmp
fwait
mov
mov
fdivrl
mov
jge
scas
mov
aas
xor
push
mov
inc
cltd
cmc
dec
jle
dec
mov
imul
cmp
data16
and
jg
add
pop
ds
jle
fs
test
and
cmp
std
inc
shrb
fnsave
add
in
pop
shlb
nop
cli
jno
jae
mov
shll
andl
sbb
das
or
mov
and
add
test
insb
fprem
xchg
mov
fcmovu
iret
call
mov
scas
sbb
mov
ja
cwtl
sti
pop
gs
outsl
aam
mov
cld
dec
mov
dec
pop
xchg
fwait
inc
cmp
mov
inc
dec
push
sub
jns
push
std
inc
xchg
pop
or
pop
lret
or
and
pop
loopne
sub
and
movsl
xchg
jg
lcall
in
mov
fisubs
sub
icebp
cwtl
test
roll
mov
in
mov
aas
or
insl
in
or
push
mov
jne
aad
mov
iret
cmpb
mov
rorb
out
cltd
ljmp
test
dec
dec
mulb
inc
and
sahf
jb
adc
je
data16
push
inc
sbb
cmc
test
outsb
imul
cmp
or
out
or
mov
pop
push
leave
out
xchg
rcll
sub
push
jmp
int
in
dec
sbb
loopew
lds
mov
dec
pop
cmp
sub
pop
xchg
out
icebp
mov
cmp
sbb
cld
add
cmpsb
mov
mov
xchg
sbb
mov
rcrb
xchg
adc
arpl
sbb
cmp
sbbb
pop
das
add
mulb
push
loopne
insb
out
stos
fnsave
mov
mov
mov
inc
mov
pop
fdivrp
push
cli
lret
aad
data16
int
es
dec
into
call
adc
jb
adc
dec
cwtl
pop
and
test
jnp
ja
inc
pop
call
inc
jnp
out
fldenv
lahf
jno
leave
xchg
scas
shrl
iret
or
xchg
or
lds
movsb
jg
clc
adc
dec
push
shrb
and
imul
cmp
faddl
push
dec
imul
pop
dec
xchg
lret
cmp
jne
daa
jns
clc
test
clc
out
cmp
in
sbb
adc
pop
jecxz
mov
add
dec
dec
aad
out
pop
mov
mov
imul
ja
in
in
lds
adc
in
mov
dec
xorb
enter
mov
neg
pop
adc
jmp
cmp
or
sbb
fsubl
dec
dec
les
stos
push
xor
mov
enter
push
xlat
push
rorl
fisttpll
xor
jecxz
xchg
jmp
daa
cmovne
add
xchg
scas
xchg
mov
in
jbe
mov
and
shrl
stc
out
adc
hlt
hlt
lods
push
iret
push
push
les
mov
inc
ss
sbb
out
dec
add
dec
adc
push
psubd
xchg
rcr
jmp
icebp
insl
and
adc
lcall
add
outsl
notl
dec
lods
popf
and
loope
jle
inc
mov
test
inc
insb
push
sub
mov
push
sbb
lret
repz
test
sahf
push
push
pop
mov
data16
inc
pop
cmp
das
jge
out
jl
mov
loope
inc
xor
lahf
dec
sub
mov
mov
dec
push
in
push
jns
inc
add
mov
pop
adc
adcl
in
pusha
test
repz
mov
shl
movsb
mov
xlat
in
pop
rcrb
xor
mov
or
push
push
mov
cmpsl
jno
scas
xor
dec
outsb
mov
xchg
xor
mov
adc
xor
loop
xchg
js
in
outsb
lret
arpl
mov
imul
out
cmp
scas
sub
push
add
jg
sbb
push
stos
arpl
repnz
sub
sarl
and
cli
popf
xchg
push
bound
push
mov
fmul
stos
or
cmp
and
mov
push
push
pop
aad
jns
jb
lret
in
add
pop
and
mov
xchg
lock
mov
or
clc
sub
fbld
test
mov
mov
xor
bound
imul
in
int
ret
dec
cmpb
daa
adcl
fldt
fisubl
mov
or
cmp
jge
jb
and
pop
sub
push
test
ja
dec
inc
fs
inc
and
cwtl
inc
jbe
xchg
push
adc
and
add
sub
adc
inc
adc
cmp
xchg
and
adc
ljmp
xor
scas
into
or
rorl
dec
pop
filds
dec
jmp
insl
dec
imul
lods
in
dec
fnstenv
out
jecxz
jge
push
out
in
xchg
dec
add
cs
or
mov
leave
lahf
sbb
lret
ret
push
pop
xchg
inc
addb
adc
test
xchg
in
stc
hlt
fwait
scas
daa
push
mov
scas
mov
xchg
mov
insb
loopne
in
sub
cwtl
test
nop
mov
pop
movsb
mov
fsts
fisttpll
decl
les
ds
mov
sahf
add
aad
sub
lcall
add
in
jno
dec
int
fsubs
adc
xchg
push
mov
add
add
rclb
xchg
sbb
cmpsl
out
repnz
fisubrs
scas
xchg
sbb
add
adc
and
imul
pop
pusha
inc
add
add
in
mov
push
fnstcw
popf
js
push
jp
or
call
loop
sbb
sbb
sbb
cs
lret
cmp
sbb
nop
sbb
mov
insl
sub
stos
pop
hlt
call
fcomip
adc
mov
cmp
lahf
inc
mov
and
xor
cmp
aad
fiaddl
fst
sbb
jno
into
jnp
inc
imul
mov
mov
ret
mov
pop
pop
rorl
adc
lea
jns
jne
jl
lea
rol
or
push
xor
pop
dec
cmpsb
mov
popa
jle
push
bound
stos
jmp
in
jns
pop
fiaddl
int3
sub
shrl
es
cld
mov
lret
and
out
lods
imul
in
mov
adc
cmpsl
movsb
inc
lret
cmpsl
shll
or
mov
jl
fs
loopne
jne
or
or
jl
or
mov
test
push
sbb
add
jb
rorb
rcrl
daa
cmp
and
mov
mov
mov
adc
ds
push
add
push
add
arpl
out
pop
repz
cmc
inc
lds
cltd
and
pushf
out
lock
clc
fsubr
mov
nop
shlb
or
dec
mov
cltd
dec
ror
aaa
or
mov
sbb
jmp
cmp
iretw
mov
fwait
inc
jg
out
insl
push
xchg
popf
pushf
jle
inc
and
sub
movsb
imul
cmp
pop
sahf
arpl
rol
sub
sub
inc
mov
popa
mov
mov
fisubs
fistpll
fs
loopne
pop
imul
push
in
pop
out
aaa
negl
inc
push
inc
bound
lods
rcr
adc
jo
fucomp
cli
push
inc
arpl
inc
mov
mov
je
adc
ret
fmull
pusha
fists
jmp
xor
stos
inc
movd
adc
shlb
ret
iret
out
in
cmp
pop
leave
sahf
mov
popf
test
std
rep
in
xchg
ljmp
push
ss
sahf
fstpt
and
inc
lcall
out
dec
push
movsb
enter
sub
cwtl
mov
ja
xor
xchg
jmp
mov
fsts
xchg
adc
add
in
xor
lea
inc
jne
fsubs
mov
cmpsl
and
jb
and
popa
mov
xor
cltd
cmp
push
stos
inc
adc
icebp
add
fdivs
sub
mov
sbb
lea
mov
aas
add
js
rol
mov
xor
pop
xlat
inc
inc
lcall
test
cmp
jo
pop
outsb
mov
dec
insb
je
repnz
dec
outsb
jmp
fstl
push
mov
sbb
cmc
lret
mov
push
and
mov
jns
add
jns
add
jns
add
jns
add
or
sub
add
jp
add
or
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
rorb
add
add
incl
add
add
ret
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
lret
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
fmull
add
add
incl
add
add
dec
add
add
add
in
dec
add
incl
add
add
add
add
incl
add
add
testl
incl
add
add
clc
dec
add
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
add
dec
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
or
and
dec
add
lcall
dec
add
dec
add
incl
add
add
adc
add
add
add
adc
sbb
dec
add
incl
add
add
add
incl
pop
dec
add
fwait
dec
add
jmp
dec
add
and
add
add
add
incl
add
add
and
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
sub
add
add
incl
add
add
sub
add
add
incl
add
add
add
add
incl
add
add
sub
add
add
sti
cs
add
cs
add
add
add
incl
dec
add
dec
add
inc
xor
les
dec
add
xchg
dec
add
add
mov
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
xor
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
cmp
add
add
incl
add
add
cmp
add
add
incl
add
add
cmp
add
add
incl
add
add
dec
add
add
add
incl
add
add
cmp
add
incl
add
add
dec
add
add
add
jmp
ds
add
ds
add
jmp
aas
dec
add
in
aas
dec
add
aas
dec
add
incl
inc
dec
add
dec
add
jmp
inc
dec
add
pushl
inc
dec
add
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
dec
dec
add
ljmp
xchg
dec
add
add
add
add
push
jp
add
jo
add
or
fidivrl
add
jns
add
jns
add
or
sub
add
jp
add
or
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
aaa
outsl
fs
inc
in
and
js
push
xchg
jmp
mov
fwait
and
push
or
dec
cs
mov
dec
je
addb
lret
mov
pop
insb
cmp
shrl
jb
ss
lds
push
pop
outsb
mov
sahf
js
fmul
test
add
sub
xchg
dec
push
call
cmc
jno
cmp
sbbl
int3
imul
enter
aam
jge
repnz
and
mov
xor
in
fwait
stc
stc
cs
data16
dec
jmp
pop
sbb
or
cmp
test
xlat
insl
out
pop
mov
fwait
std
ret
imul
fwait
adc
fsub
xor
in
pop
cli
mov
mov
push
xchg
pop
and
push
xchg
dec
imul
xor
cmp
fcomps
add
inc
pop
sbb
loopne
ret
mov
xchg
int
inc
mov
stos
nop
pop
nop
loopnew
sub
enter
mov
sarb
fsubrl
mov
jle
jb
cmpsb
arpl
fimuls
pop
pop
cmp
inc
xchg
ja
cmp
and
xor
push
ret
mov
add
mov
mov
inc
test
mov
repnz
sbb
scas
dec
adc
in
inc
push
push
add
mov
mov
fdivrs
cmpsb
mov
adc
stc
mov
arpl
hlt
or
clc
sub
rclb
mov
hlt
clc
shr
ret
test
add
mov
jecxz
mov
and
popf
bound
cmp
loope
mov
loopne
je
iret
dec
adc
jecxz
addl
mov
cmc
movl
into
pop
or
outsl
inc
sarb
out
xor
lock
fwait
ret
sbb
pop
test
in
ljmp
push
outsb
fnstenv
in
cmp
pop
scas
or
push
jl
int3
bound
xchg
mov
ds
addr16
in
push
lea
aad
mov
or
insl
sbb
loopne
incb
or
push
jg
test
nop
gs
xor
out
cmp
cmpsl
inc
mov
iret
xchg
and
add
enter
jge
mov
cmpsl
test
lret
call
adc
jo
test
scas
insl
aam
dec
push
add
sbb
cmc
xor
mov
jle
add
mov
je
ret
jns
sbb
sbb
mov
jmp
cmp
icebp
sub
int3
inc
mov
cmpsb
push
mov
scas
or
fwait
dec
ss
addr16
mov
cwtl
fs
ret
enter
push
xor
sbb
sub
enter
and
pop
xchg
pop
cmpsb
out
inc
std
pop
int3
xchg
cwtl
adc
in
adc
das
and
fstl
mov
fnstsw
testl
cltd
push
fists
enter
imul
inc
pop
push
pop
lahf
mov
jge
xchg
push
insl
sbb
sub
hlt
aam
adc
or
jmp
mov
mov
lock
or
push
jmp
mov
push
mov
scas
rcrb
lcall
xor
adc
cmpsl
es
lods
xor
test
cli
rolb
cmpsb
inc
cmp
pop
cmp
jae
shrb
lcall
mov
mov
push
mov
movsb
outsl
fadd
in
pop
pop
xchg
cmpsb
push
cmp
push
push
pop
push
hlt
pop
xchg
imul
mov
add
xchg
mov
ret
xchg
fcomp
js
std
into
dec
leave
pop
xor
sub
xchg
sbb
push
addb
xchg
add
mov
mov
out
sub
and
and
popf
add
pop
jno
in
cltd
idivl
ret
sub
and
jbe
and
push
xor
lahf
mov
add
or
inc
cld
cs
dec
or
ljmp
movl
mov
inc
movsb
and
pop
in
lods
inc
ljmp
and
jmp
push
lahf
add
jl
cmp
cmp
pop
add
hlt
mov
pop
scas
cld
lea
mov
mov
cmp
ja
mov
sbb
stc
inc
mov
xchg
mov
sub
or
cltd
push
movsl
roll
out
mov
jbe
add
inc
roll
adc
or
jge
push
scas
xchg
aaa
mov
lcall
insl
inc
adc
test
dec
pop
cmp
fcoms
divb
aas
pop
dec
repnz
ret
sbb
mov
pop
pop
jnp
and
xor
mov
test
ljmp
stos
ds
insl
inc
out
into
sbb
mov
add
mov
mov
and
push
testb
arpl
call
in
push
push
sbb
fisttpl
out
or
inc
dec
pop
lahf
ret
cmp
nop
hlt
mov
int
adc
xlat
add
mov
sbb
rol
mov
loop
jl
in
aas
dec
pop
pop
ljmp
lcall
cs
or
cwtl
mov
das
pop
imulb
inc
cmc
adc
movsb
outsb
and
cmpsl
mov
movsl
cmp
pop
push
int
adc
mov
dec
push
ror
dec
sub
and
js
jae
lahf
add
sub
add
in
in
pop
pop
inc
test
mov
enter
cmp
pop
xchg
ret
fimuls
out
out
dec
and
icebp
lods
ljmp
mov
sbb
and
insl
xchg
xchg
fcmovnbe
mov
mov
lret
mov
rorb
xor
push
push
dec
daa
je
sub
fstpt
fwait
xchg
test
dec
enter
add
scas
mov
out
out
jb
stos
gs
add
cmp
inc
cmc
xor
and
and
inc
loopne
push
jbe
mov
es
or
fwait
bound
ss
aas
lret
ret
sbb
out
mov
fmull
dec
and
clc
sub
movsb
mov
orl
push
cmp
sub
loop
push
jne
lahf
std
mov
fisttps
popa
sub
mov
mov
dec
cmp
mov
add
mov
sahf
mov
addl
enter
call
adc
testl
xlat
dec
icebp
fmull
ljmp
inc
dec
jae
push
dec
adc
cs
push
adc
lcall
or
and
push
mov
xor
add
sbb
push
fmul
or
xor
hlt
cld
nop
incb
je
dec
pushf
ret
addr16
pop
or
push
lret
js
ds
inc
mov
push
or
ret
xor
fstl
int
popa
push
lock
xchg
int3
adc
fs
adc
cmp
jno
pop
and
pop
test
sub
arpl
jns
xor
stos
adc
jp
stos
sbb
stc
inc
data16
mov
sahf
outsl
mov
arpl
cli
pop
or
cmp
sub
inc
xchg
jne
push
fs
sbb
jl
lret
scas
mov
push
mov
push
outsb
ja
jg
data16
sbb
cmp
sub
rcrl
or
mov
jnp
pop
lea
jo
inc
out
xchg
daa
pushl
insb
outsb
jle
sahf
sbb
push
pop
iret
mov
lds
push
add
xchg
ja
cwtl
stc
pop
jbe
stos
pop
mov
mov
popa
jae
mov
mov
mov
push
movsb
sub
dec
xor
and
stos
outsl
pop
negb
lds
in
hlt
cmp
scas
adc
out
rcl
test
shrl
xor
mov
icebp
and
lods
inc
jbe
jg
out
sti
jno
xchg
int
inc
push
lahf
int3
xor
pop
notl
jg
jg
out
stos
loopne
pop
daa
or
in
sub
xchg
inc
sbb
and
movsl
test
adc
cmc
stos
ret
js
shl
sub
fs
or
and
sbb
stc
sub
aam
mov
fwait
xchg
jno
jle
push
fldt
addr16
icebp
or
scas
test
int
lahf
dec
loop
sbb
xchg
lahf
jo
sahf
add
pusha
js
daa
mov
and
push
xor
cs
inc
and
dec
jmp
xlat
or
clc
test
jne
js
notl
cmp
insl
insb
movsl
fidivs
jne
mov
xchg
cwtl
sbb
mov
add
jbe
and
pop
test
stos
mov
jg
jle
insl
scas
cld
push
mov
xchg
lock
fdivl
add
mov
cmpsb
lret
or
fs
or
xor
testl
mov
push
lods
imul
push
fstpl
xchg
push
test
cs
jns
inc
mov
sub
xor
sub
int3
xchg
inc
pop
adc
cmp
dec
shrl
xchg
push
dec
sti
push
arpl
addr16
test
iret
jnp
xchg
iret
mov
or
mov
mov
cltd
add
gs
sar
jmp
cmp
add
jbe
ficoms
out
lea
dec
into
ret
test
out
xchg
mov
fmull
add
lret
dec
cmp
adc
xchg
push
jns
mov
fstl
sub
pop
andb
jo
mov
mov
mov
daa
fisubs
push
fstl
jmp
imul
adc
xor
or
ljmp
jne
push
and
test
push
mov
movsl
jne
mov
test
insb
nop
test
testb
shll
arpl
or
bound
or
push
and
jp
addb
lods
xchg
cmpsb
sbb
mov
bound
fstl
int3
and
sbbl
int
shr
fstl
shlb
sti
rolb
push
jbe
frstor
rsqrtps
pop
in
scas
push
imul
enter
fwait
bound
dec
xlat
imul
arpl
insl
push
int
mov
cmp
and
inc
xchg
jbe
out
rolb
cld
pop
call
mov
movsl
pop
divb
repz
fnsave
insl
daa
add
shlb
lcall
cltd
jp
sub
or
lds
das
dec
popa
pop
pop
adc
cmpsb
dec
clc
mov
cmpsl
xchg
cmc
loopne
inc
rorl
adc
add
inc
push
scas
xchg
mov
clc
inc
fwait
movsl
test
fimuls
popa
popf
lret
cltd
adc
jmp
xlat
xor
in
pop
mov
mov
jnp
popf
bound
add
fcompl
fisubrs
and
nop
neg
pop
aad
mov
adc
pop
cmpsl
dec
mov
push
ds
test
lock
std
in
xor
pop
inc
sbb
mov
mov
push
cmc
int
scas
pop
adc
or
pop
das
stos
loop
xlat
mov
jae
hlt
es
addr16
test
scas
mov
adc
cld
in
inc
es
jmp
sbb
xor
fidivrs
push
jg
add
das
jp
imul
push
shlb
cmpsb
pop
cmc
aam
int
iret
xchg
and
push
lcall
adc
icebp
out
xor
mov
mov
jnp
pop
stos
push
or
add
int3
in
les
jbe
ss
shrb
add
mov
sbb
sbb
add
das
mov
popf
cltd
adc
imul
stos
mov
inc
enter
xchg
movsb
mov
cmp
and
xchg
stos
mov
jecxz
add
push
out
test
pop
scas
and
or
std
cmpsl
xchg
mov
xlat
mov
mov
sub
push
add
mov
into
xchg
mov
add
cvtps2pi
inc
lahf
sti
je
fildll
bound
ss
or
mov
dec
mov
fnstenv
xchg
adc
push
cmp
lods
jg
sub
adc
lea
arpl
enter
xor
sbb
pop
das
ss
push
ja
xchg
lret
in
cmp
lds
sbb
aam
pop
inc
test
mov
cmp
mov
jnp
xchg
inc
and
ja
insl
xchg
lock
jmp
push
xor
shl
int
aas
cmp
int3
lods
ret
dec
sarl
hlt
dec
mov
lcall
dec
xor
mov
nop
mov
hlt
push
sub
jg
scas
fiaddl
add
and
lea
loope
lahf
xor
fs
jae
jbe
ret
xchg
push
xlat
out
mov
sbbl
or
cwtl
adc
mov
and
mov
and
test
daa
lods
mov
sub
dec
fisttpll
das
in
insl
cmp
push
loope
pop
daa
pop
cmpsl
in
shll
adc
xchg
sbb
mov
mov
ss
jns
fprem1
sub
cmp
stc
inc
aas
mov
mov
dec
loope
cmp
push
jmp
mov
aaa
mov
push
sarb
xor
mov
lahf
sub
lds
adc
sbb
dec
mov
inc
mov
or
fildl
scas
out
fmulp
cmc
adcl
or
outsb
sbb
fcompl
and
jg
pop
dec
rorl
call
pop
ret
mov
outsb
or
sti
scas
stos
in
stos
jae
inc
mov
repz
sahf
fnstenv
mov
icebp
ss
mov
xchg
push
shl
pop
xor
adc
mov
lea
cmp
mov
cwtl
add
sbb
and
adc
xor
into
push
clc
xorl
fwait
out
stos
hlt
dec
ljmp
aas
imul
push
in
loopne
sbbb
nop
adc
cmpb
jo
mov
stc
mov
jp
push
mov
pop
sub
xor
and
fldt
popa
das
inc
adc
pop
or
negb
pusha
sahf
subl
adc
jg
mov
sahf
iret
pop
jns
pop
xchg
test
xchg
and
add
fldenv
setbe
shlb
jbe
push
cmp
or
lcall
rorb
cmp
shlb
jp
sti
fdiv
jbe
xor
xchg
or
vandnps
pusha
jg
cltd
sbb
ljmp
pop
mov
or
inc
mov
cmp
add
sub
xchg
mov
sahf
test
rorl
loope
pop
sub
out
mov
cmpl
fcoms
cld
pop
jb
inc
movsb
ret
fstl
sbb
mov
pusha
inc
cmp
popa
loope
pop
add
adc
lret
or
rcrb
lret
mov
int3
xor
ljmp
in
aam
ljmp
into
int3
daa
jp
xchg
inc
cmp
sub
fwait
xchg
loop
shlb
icebp
in
adc
dec
sub
push
mov
mov
or
or
pop
jmp
loop
pop
jecxz
dec
jns
xor
test
pop
mov
fs
push
sbb
add
mov
push
mov
sbb
and
or
xor
outsb
cmp
cmpsb
push
aas
cmpsl
mov
mov
cmp
add
push
sbb
xor
insl
in
cmp
mov
mov
pop
sub
addb
bound
dec
iret
and
or
mov
repz
jno
mov
movsb
mov
dec
jns,pt
cmp
xchg
mov
jle
lret
pop
divl
leave
inc
aad
mov
sub
aas
jns
imul
mov
aaa
sbb
mov
out
sbb
insl
sbb
loopne
push
mov
push
bound
test
xor
ret
pop
test
cmpsb
daa
je
add
sbb
stc
ljmp
sbb
fstps
ja
pusha
add
jge
loope
and
mov
mov
add
aaa
dec
jae
fs
xchg
sti
shrl
or
or
js
push
lret
iret
seto
cli
jmp
cmovns
clc
and
pop
mov
lret
sub
mov
push
in
aaa
or
push
pop
fldl
fptan
fimull
push
popa
xor
fnstenv
adc
mov
enter
pop
lcall
jns
imul
xchg
divb
test
insb
imul
dec
add
test
adc
sub
test
push
adc
shll
pop
jbe
mov
pop
bound
mov
repz
adc
jb
inc
lock
or
or
movsl
push
jb
cmc
mov
inc
xchg
test
cs
bound
pop
jne
mov
sbb
lret
mov
mov
in
push
jae
and
mov
mov
inc
call
es
mov
roll
push
mov
push
and
jmp
out
scas
test
or
mov
aam
mov
mov
mov
sbb
pop
mov
ljmp
jle
inc
adc
repz
adc
jne
loop
int3
mov
test
sub
sti
xchg
adc
cmp
imul
pop
pop
add
push
mov
mov
cmovb
inc
xchg
or
jl
repz
cwtl
lea
push
adc
push
push
into
ds
inc
ret
stos
test
jle
mov
popf
jmp
jo
mov
aaa
outsl
dec
ss
fwait
or
ret
push
jae
addr16
out
jne
add
test
std
mov
aam
lods
fs
xor
and
add
shl
in
sbb
and
jb
lds
dec
insl
jns
xor
pop
add
inc
stos
scas
push
call
jp
loopne
mov
xor
cmpsb
lds
push
call
outsb
in
mov
add
mov
sub
jbe
not
pop
inc
mov
ficoml
cmpsb
pop
addb
int3
pop
daa
pop
or
cmpsl
jl
push
repz
ret
or
jo
pop
icebp
addr16
movsb
mov
add
or
aaa
icebp
inc
add
pop
xor
sub
sub
ret
or
lret
lret
fldenv
out
loop
daa
jge
std
mov
cli
andb
sub
daa
mov
add
pop
push
adc
das
jecxz
out
test
sub
dec
pushf
push
xor
xor
jge
pushf
dec
mov
testl
dec
ret
je
push
xor
ret
rcr
jbe
mov
inc
xchg
cwtl
out
and
push
rclb
pop
bound
jns
test
sahf
lret
fcmovbe
sub
adcb
in
aam
mov
adcb
ljmp
mov
mov
out
lret
popa
orb
jo
add
test
shll
jecxz
cmp
push
pop
inc
notb
mov
mov
push
lcall
dec
mov
push
jge
xchg
cmpsb
sahf
xchg
lea
xlat
adc
std
ret
or
hlt
xchg
cld
scas
sti
and
cli
mov
cmp
jae,pt
movsb
call
mov
mov
pop
fmuls
jae
push
out
iret
fadds
xchg
aam
mov
and
lcall
ret
xchg
dec
js
in
xor
dec
test
jmp
stc
xchg
lea
sbb
test
lods
shll
xor
popf
push
adc
dec
cmp
stos
fs
xor
scas
inc
sbb
aad
push
xor
mov
dec
sbb
nop
lahf
mov
dec
jbe
hlt
push
pop
cmpsl
in
jno
xchg
pop
movsb
sub
ljmp
stc
in
aas
push
mov
pop
sbb
push
lea
cmp
aas
aas
pop
sub
xor
cmp
or
inc
loop
pop
or
add
fists
shrb
ss
xchg
testl
cmpsl
push
xor
or
mov
popl
adc
mov
mov
mov
jmp
and
rcll
fwait
addr16
lods
mov
shlb
inc
or
push
fs
jae
dec
sbb
out
jmp
ss
or
mov
dec
adc
inc
mov
xchg
testl
adc
ljmp
test
mov
sbb
xchg
xchg
mov
mov
fwait
cmpsb
pop
dec
sahf
xlat
mov
add
add
fdiv
leave
mov
cmp
out
adc
xchg
push
cmp
cmp
xor
in
pop
dec
mov
mov
xchg
xlat
sti
idivb
ficoml
sub
std
bound
mov
sub
jp
or
dec
xor
test
insb
mov
and
sbb
jmp
lret
outsl
data16
mov
cmp
aad
and
xchg
xchg
and
sarb
popf
or
outsl
dec
loope
inc
cli
pop
jl
test
dec
xlat
xor
cmp
and
adc
xor
mov
in
lret
push
enter
popf
xchg
cmp
lret
jae
pop
shlb
jl
aam
je
add
fs
les
mov
rcll
push
bound
int
pop
cmp
jmp
mov
into
adc
mov
js
imul
mov
aas
call
enter
mov
in
and
sarb
out
mov
test
mov
test
cmpsb
jmp
xor
jno
xchg
xchg
or
mov
cmp
xchg
xor
mov
push
sbb
lods
in
and
add
push
shrb
mov
adc
adc
mov
cmp
pop
test
add
mov
add
ljmp
aas
pop
cltd
push
xlat
or
pop
sbbb
pop
adc
ss
lcall
add
and
add
jmp
add
stos
jne
orl
outsb
aad
dec
cmc
mov
iret
lods
popf
jae
xchg
loope
add
cs
fbld
imul
out
sarl
lods
popa
cs
js
and
push
sub
add
mov
xorl
pushf
rclb
add
and
pop
fisubrs
repz
push
out
add
loope
xorl
add
sub
xor
and
cmpb
push
mov
ret
push
cmpsl
movsb
stos
sub
fs
sbb
mov
movsl
in
repnz
movsb
inc
pop
jbe
leave
push
sbb
add
xchg
addb
