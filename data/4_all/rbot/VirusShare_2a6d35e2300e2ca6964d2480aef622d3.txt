add
add
or
add
add
add
loopne
add
add
add
add
gs
xor
fs
insb
add
popa
fs
jo
xor
add
add
add
insl
jae
arpl
cs
insb
add
dec
push
inc
dec
dec
add
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
mov
mov
xor
test
je
push
mov
shl
shr
or
movsbl
xor
inc
mov
test
jne
pop
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
popa
ret
push
mov
push
mov
mov
rorl
sub
loop
rorl
pop
pop
ret
push
mov
push
mov
dec
push
je
dec
je
dec
je
dec
jne
push
push
call
pop
pop
push
jmp
push
push
call
pop
pop
push
jmp
push
push
call
pop
pop
push
call
jmp
mov
mov
mov
lods
mov
mov
mov
mov
mov
mov
shr
add
test
jne
movzwl
sub
jmp
andl
push
mov
push
mov
add
add
cmpl
jbe
mov
add
push
call
cmp
pop
je
incl
mov
add
inc
inc
cmp
jb
mov
mov
cmp
pop
pop
jne
xor
jmp
movzwl
jmp
mov
mov
lea
mov
add
pop
leave
ret
push
push
call
pop
pop
pushl
pushl
pushl
call
ret
push
push
call
pop
pop
pushl
pushl
call
ret
push
push
call
pop
pop
pushl
pushl
call
ret
push
mov
push
push
call
pop
pop
pushl
pushl
pushl
pushl
pushl
call
pop
ret
push
mov
push
push
call
pop
pop
pushl
pushl
pushl
pushl
pushl
call
pop
ret
push
mov
push
push
call
pop
pop
pushl
pushl
pushl
pushl
pushl
call
pop
ret
push
push
call
pop
pop
pushl
pushl
call
ret
push
push
call
pop
pop
pushl
call
ret
push
mov
sub
push
push
push
xor
push
call
mov
mov
mov
pushl
mov
push
call
push
push
call
add
push
push
push
push
call
mov
push
push
call
mov
lea
movzwl
push
add
push
pushl
lea
mov
call
push
push
call
add
push
push
push
push
push
push
push
push
push
push
call
push
pushl
call
push
push
call
add
push
push
call
push
call
cmp
pop
pop
je
pushl
pushl
call
jmp
push
push
call
pop
pop
push
call
push
push
pushl
lea
pushl
mov
pushl
call
lea
push
pushl
mov
push
pushl
pushl
call
add
cmp
mov
jbe
mov
add
mov
jmp
mov
lea
push
pushl
mov
add
push
mov
mov
add
push
pushl
call
lea
push
mov
mov
movzbl
push
push
mov
mov
add
push
pushl
call
movzwl
addl
add
incl
cmp
jl
mov
mov
add
mov
lea
push
push
push
mov
add
push
pushl
call
push
pushl
call
pushl
call
add
push
call
int3
int3
mov
add
ficomps
add
add
add
lret
add
add
scas
add
imul
jae
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
mov
adc
add
mov
inc
dec
add
out
lahf
and
cmp
adc
and
dec
add
loope
mov
sub
or
insl
push
in
or
out
in
lock
in
arpl
enter
out
mov
loopne
xor
call
in
and
addl
xchg
and
aas
adc
or
dec
mov
mov
pop
sbb
test
sub
or
dec
sub
dec
inc
or
adc
loop
adcl
loope
inc
adcb
add
insb
bndldx
nop
adc
add
mov
rol
stos
push
inc
mov
insl
mov
xor
and
addb
pop
jmp
fiaddl
orl
scas
jle
scas
inc
mov
sbb
int3
and
mov
jne
inc
cltd
inc
sbbl
and
jmp
jns
and
and
xchg
jge
push
sub
or
push
sbb
mov
arpl
call
mov
pop
cmp
cmpsb
loope
lods
mov
repz
add
push
mov
pusha
subl
or
rcll
into
add
or
rcll
mov
mov
mov
sub
push
dec
mov
add
addl
pop
xor
xchg
loop
adc
adc
popa
ljmp
or
clc
mov
mov
mov
test
xchg
popl
adc
or
js
mov
inc
sub
loopne
lea
adc
mov
add
jg
arpl
sbb
mov
cli
adcl
or
or
shlb
mov
xchg
adc
js
ret
or
rcrl
and
fxch
dec
cmp
cltd
aad
sbbb
cltd
mov
mov
adc
xchg
xor
sbb
popa
sbb
push
cmp
loope
sub
xlat
pop
dec
lock
arpl
iret
mov
inc
mov
sbb
xchg
mov
xor
mov
adc
xchg
lea
andl
bound
fwait
ljmp
icebp
xchg
cmp
test
push
inc
into
inc
dec
inc
jp
pop
add
fmull
aas
sbb
push
adc
mov
clc
adc
ret
inc
push
movsl
mov
xor
fadds
aaa
xor
ja
lret
cmpsb
sbb
ret
scas
mov
cltd
pop
sbb
add
sbb
xor
loop
fdivrs
xchg
jmp
adc
mov
sbb
sbb
arpl
xor
mov
lcall
fildl
fcmovne
or
adc
adc
dec
xor
or
inc
jmp
sbb
popf
ljmp
add
mov
push
lea
mov
test
jecxz
sbb
add
jle
xchg
add
or
cmp
outsb
add
dec
or
fldl
out
cwtl
bound
or
add
adc
sbb
xor
pop
sbbb
and
xchg
xorl
icebp
bound
and
orl
daa
push
lcall
mov
imul
sbb
les
sbb
add
lods
cwtl
out
ret
mov
cmp
mov
cmc
ljmp
and
shll
push
es
cwtl
fists
mov
add
shlb
cltd
or
cmc
fistpll
xchg
jb
ja
mov
stos
insl
sbb
adc
shlb
stos
pop
mov
dec
or
add
sub
and
xchg
xchg
nop
mov
sahf
adc
dec
and
fwait
mov
sbb
dec
ljmp
push
jmp
aas
lahf
mov
rorl
enter
stc
mov
mov
or
mov
cmp
loope,pn
jl
push
xchg
rdtsc
loop
test
insb
cmp
push
mov
jns
scas
gs
jmp
int
arpl
sub
sbb
or
popf
xor
mov
push
insb
sar
push
js
inc
lret
in
sbb
cld
fbstp
shlb
pop
inc
popa
push
dec
mov
and
nop
adc
les
dec
shrl
push
pop
sti
inc
mov
movl
mov
pushf
mov
push
or
and
jnp
js
loopne
movsb
jbe
mov
inc
inc
arpl
bound
sbb
dec
je
mov
and
or
aam
adc
mov
xchg
cmpb
xchg
lods
pop
js
add
std
sub
adc
mov
add
xchg
mov
fimuls
dec
adc
inc
jne
lahf
cmc
stos
mov
cmc
filds
push
push
and
push
dec
les
sbb
int
and
sbb
fldl
mov
mov
pop
insb
add
loop
push
mov
loopne
push
adc
cwtl
arpl
into
dec
loope
popf
add
shlb
nop
sbb
cld
push
js
into
inc
inc
mov
mov
in
cld
rclb
lds
ds
push
adc
adcb
add
andl
adc
add
or
aas
mov
daa
lcall
jle
or
fwait
incb
sbb
jbe
adc
loopne
add
bsr
mov
add
sbb
push
push
sbb
and
pop
test
inc
cmp
xor
inc
xchg
add
push
sti
rcrb
cwtl
movsb
adc
pop
test
add
push
push
sahf
add
insl
ret
sbb
cmp
cli
loopne
les
lea
ficompl
sahf
add
xchg
adc
cmp
sbb
mov
add
cmp
or
mov
stos
int3
adc
sbbb
js
fcompl
dec
xor
push
sahf
scas
jo
and
cwtl
nop
jg
nop
jl
xor
je
xorl
and
push
push
xchg
decb
add
nop
mov
fldcw
mov
or
push
adc
rorl
shl
xchg
dec
mov
or
adc
adc
je
add
scas
cmpsl
ljmp
dec
ret
fsubrs
jle
add
mov
or
pop
das
sub
add
test
scas
sbb
mov
mov
outsb
test
rorl
add
outsb
sub
jo
enter
pop
sahf
mov
enterw
aas
xchg
pop
lods
lahf
sub
fimull
sub
nop
or
adc
adc
add
dec
inc
pop
mov
xchg
mov
cmp
imul
mov
and
je
pop
call
lret
enter
lock
loop
inc
push
in
sbb
adc
and
rcrb
movsb
push
xchg
pop
scas
scas
lds
out
cmp
mov
fs
and
adc
test
and
lret
inc
inc
push
pushf
xchg
dec
pop
fs
or
cs
cmp
cwtl
pop
js
add
pusha
cmpl
push
inc
jmp
push
lea
jl
rorl
stc
mov
push
pusha
popf
mov
loope
pusha
test
popl
cltd
add
mov
add
mov
add
incb
rcrl
and
nop
pop
fsubl
push
adc
loope
lahf
adc
pop
add
adc
mov
sub
mov
adc
jecxz
in
sbb
lahf
es
outsb
xchg
jb
xchg
test
pop
mov
popf
clc
lcall
fwait
adc
into
jge
sahf
add
xchg
pop
fld
sbb
mov
outsb
inc
mov
xchg
xchg
or
roll
shll
pop
das
xchg
mov
insb
test
and
add
push
dec
mov
cmp
pop
and
incl
xchg
lret
mov
sbbb
sbb
test
loop
pop
dec
dec
nop
js
add
mov
push
movsb
dec
cmpsl
js
mov
rcrb
mov
out
loope
sbb
add
dec
mov
sahf
ret
pop
inc
into
stos
dec
cmpsb
shlb
imul
push
adc
clc
es
push
mov
scas
lea
add
mov
sahf
addl
lds
sbbb
test
mov
scas
test
shll
jg
lcall
mov
mov
or
dec
addr16
inc
or
mov
subb
xchg
nop
xor
push
or
xchg
stos
push
pusha
mov
dec
les
mov
ret
xor
add
or
dec
dec
mov
imul
scas
inc
inc
push
adc
xchg
cwtl
xchg
test
gs
push
test
movsl
fwait
out
cwtl
inc
or
sbb
pop
lahf
cmp
cltd
nop
lds
out
sub
ret
ret
loope
mov
mov
popa
stos
mov
loop
mov
and
lsl
mov
push
inc
mov
and
xor
es
xchg
xchg
mov
gs
inc
mov
loopne
sbb
cmp
addl
jg
xor
imul
and
lret
xchg
lret
out
daa
dec
or
fld
push
mov
jmp
int3
mov
xchg
and
movsl
xchg
dec
xchg
sub
mov
mov
adc
jle
push
sbb
add
aas
popa
orb
addb
xchg
cmp
push
mov
xor
test
std
andl
xchg
lahf
or
xchg
hlt
add
cmp
push
cmp
xchg
jo
push
std
pop
idiv
lcall
mov
sub
xchg
shll
inc
adc
and
xor
sub
dec
cwtl
ret
imul
imul
lds
das
inc
push
adc
mov
or
sub
aas
enter
inc
cmpsl
out
push
pop
add
popf
pop
ret
add
cmp
cltd
sub
adc
jle
sbb
cmp
sub
cwtl
xor
andl
mov
push
xchg
jae
xchg
push
jb
add
jl
cmp
mov
rcll
roll
jno
push
andl
add
xor
or
xor
pushf
cmp
jg
and
out
push
and
out
movsl
pop
xchg
loop
movsb
inc
mov
test
inc
sbb
pop
gs
mov
jo
mov
into
js
add
add
fsubl
cmc
or
cli
bound
mov
lods
in
mov
push
test
nop
jb
loope
xor
jbe
pop
lock
and
push
dec
mulb
subb
cmp
jno
cmpsb
lahf
push
je
cli
mov
add
lcall
jns
adc
repnz
fisttpll
push
in
mov
subb
or
push
fwait
mov
dec
xor
push
lea
xor
bound
js
add
add
popf
mov
and
push
xor
push
mov
dec
xchg
std
test
add
loopne
push
and
int
cwtl
iret
rcrl
and
inc
cmc
mov
loop
mov
xchg
dec
enter
push
ds
lds
pushf
sbb
mov
pop
or
icebp
sub
addb
rcrb
dec
pop
or
and
mov
jmp
sub
lds
push
and
or
mov
out
sbb
arpl
and
out
jmp
jae
mov
pop
pop
push
repz
mov
insl
sbb
mov
orb
rcll
data16
fcomps
ret
cmp
jg
xor
inc
push
pop
add
hlt
stos
and
xor
pop
cmp
add
lods
or
into
push
test
pop
and
aaa
gs
cmpl
mov
cmpsl
mov
adc
mov
hlt
add
sub
dec
mov
rol
lods
lret
jl
mov
cmp
adc
je
sub
mov
or
jecxz
cmp
roll
fbld
fldt
adc
test
add
jmp
cwtl
rol
enter
fs
push
jnp
adc
or
and
xchg
sbb
adc
mov
inc
mov
inc
push
mov
out
int
xchg
push
imul
jecxz
loop
mov
aaa
out
hlt
sub
or
mov
loop
int
push
mov
addr16
icebp
mov
or
jns
or
pop
pushf
sub
ss
cmpsl
loope
pushf
add
mov
lea
addb
cmp
cmpsl
movsl
mov
dec
out
and
sbb
testl
dec
dec
ret
mov
cmp
lea
push
fldl
sub
sub
aaa
add
in
push
sub
xchg
int3
add
aas
add
mov
xchg
mov
imul
outsb
push
sub
and
lret
call
mov
jne
lret
inc
pushf
filds
je
jmp
push
jg
inc
adc
lcall
out
insl
daa
mov
es
push
scas
dec
xorb
add
mov
mov
movsl
and
enter
pop
pop
inc
roll
push
stos
into
sbbl
popl
inc
dec
cmp
mov
push
sbb
inc
adc
sbb
enter
and
fyl2xp1
loop
mov
push
cmpsb
test
add
push
arpl
rorb
jmp
and
sub
lods
or
stos
rorb
pop
leave
push
iret
lods
mov
push
andl
xor
ljmp
sub
fisubrl
test
ret
lret
jo
push
bound
inc
dec
pop
jg
push
rcll
sbb
lret
or
loop
sub
ljmp
inc
ffree
fsubrp
ljmp
sub
mov
adc
mov
dec
inc
out
inc
and
push
inc
and
push
insl
subl
inc
add
int3
jne
jae
sub
pushf
lahf
mov
jno
pop
lods
jl
add
mov
push
lahf
mov
xchg
mov
lcall
adc
add
jnp
sbb
jne
sub
xor
xor
fdivrl
int
adc
out
sub
stos
gs
int3
addb
xchg
push
push
xorl
jg
cmp
inc
arpl
js
and
jnp
cmp
mov
sbb
iret
ret
mov
xchg
mov
out
nop
adc
jnp
nop
jne
or
call
sbb
repnz
pop
enter
leave
add
lcall
rolb
jno
ss
aad
rolb
or
or
mov
test
and
or
xor
inc
or
add
mov
pop
inc
nop
inc
jnp
or
scas
jnp
mov
sbb
rcrl
mov
mov
sub
movsb
stos
inc
cmpsb
mov
pop
xchg
pop
daa
mov
sub
sbb
ja
pop
mov
inc
xor
subb
lock
push
stos
add
lret
fs
lret
push
adc
sub
dec
loope
jp
jns
orb
sub
add
lock
push
mov
jg
xchg
or
pop
daa
mov
jae
inc
rclb
cs
movsb
clc
sarl
jno
fwait
ret
popa
ret
fstps
mov
xor
pusha
mov
or
jno
cmp
addb
loopne
pop
popf
add
sahf
addl
and
inc
cltd
cmp
inc
jle
and
es
addr16
rcrb
pop
mov
and
out
ret
loop
lock
test
adc
pop
test
xchg
imul
jb
pop
or
ret
mov
inc
adc
test
push
pushf
sub
jecxz
sbb
push
sub
sub
mov
pop
popf
leave
aas
mov
cmp
dec
xchg
lret
or
fldenv
test
mov
adc
je
xchg
adc
ret
or
mov
ret
adc
lahf
or
xchg
or
loope
jno
imul
cltd
movl
sbbb
iret
mov
push
mov
lret
popf
cwtl
lcall
pop
addr16
repz
shlb
pop
lea
or
fdivrp
and
xchg
ret
je
inc
orb
lods
pop
dec
xor
xor
pushf
xor
addr16
jo
fsubs
mov
divl
mov
arpl
mov
add
mov
add
add
mov
and
add
out
mov
or
mov
sbb
inc
mov
sub
dec
test
gs
add
mov
sub
rorl
add
add
mov
and
push
in
mov
jp
shlb
fcompl
into
flds
jp
lcall
sub
mov
mov
in
xor
rolb
notb
scas
das
cmpsl
adc
inc
or
in
push
push
adc
mov
push
mov
cmpsl
adc
cmp
imul
jae
lods
iret
test
pop
xchg
ret
js
loopne
push
int
mov
inc
andb
shlb
and
mov
mov
sbb
push
pop
inc
test
rcrl
roll
jne
lods
mov
mov
icebp
push
pop
loopne
icebp
lods
in
clc
mov
testb
jbe
or
mov
or
and
cmp
push
pushf
shlb
adc
mov
fmull
mov
jns
adc
xor
clc
cs
pusha
xor
jmp
jno
outsb
data16
bound
sbb
cmp
or
ret
jbe
push
mov
inc
mov
shl
add
xchg
cwtl
mov
out
adc
int3
std
in
iret
push
popf
inc
hlt
dec
enter
loopne
mov
jmp
addr16
ja
dec
mov
ret
push
adc
cwtl
dec
popa
cwtl
test
jle
stc
cmp
lock
pusha
mov
mov
cmp
pop
test
mov
pushf
sbb
push
xchg
stos
and
pop
adc
add
frstor
fldenv
stos
or
push
stc
jl
fucomp
dec
in
enter
pop
test
sbb
sarb
add
push
push
jae
xor
add
inc
shrb
dec
clc
js
test
xor
lds
pop
mov
push
rolb
jp
or
dec
inc
mov
cmp
pop
mov
leave
xor
add
mov
bound
add
mov
dec
pop
rorl
mov
movl
push
pop
inc
jg
sbb
ret
jo
into
add
push
push
inc
stc
jecxz
or
popa
nop
inc
rclb
jmp
inc
adc
fbld
push
mov
add
and
inc
jmp
and
testl
dec
ret
xchg
scas
xor
lahf
repz
sbb
cmp
mov
xorl
inc
in
repnz
rorl
push
bound
sbb
out
movsl
push
aas
jmp
rcrb
nop
add
fdivrl
test
cmp
inc
sub
cmp
sub
sbb
sahf
test
fs
test
mov
andl
sbb
test
add
jl
pop
pop
and
out
adc
rorl
mov
mov
dec
cld
adc
or
stos
or
sbb
adc
mov
or
inc
int3
mov
enter
push
add
cs
cmc
or
rcrw
subl
adc
or
ret
push
insb
mov
aad
jbe
mov
jae
dec
ss
sbb
jno
sub
mov
icebp
sub
or
fstp
lea
cvttps2pi
add
lds
xor
xor
mov
or
dec
adc
mov
pusha
adc
xchg
enter
push
ds
int3
mov
or
mov
test
into
mov
lret
into
stos
je
adc
repnz
sbb
mov
pusha
jmp
mov
mov
aas
mov
aad
lds
andb
mov
xor
lahf
or
push
sbb
push
stos
popf
test
rcl
int3
sbb
sbb
jge
jne
mov
lea
test
int
and
inc
fwait
mov
rcrb
push
jle
sub
mov
inc
inc
add
scas
sbb
je
mov
xor
roll
xor
sub
sti
cld
mov
jl
mov
xchg
mov
xchg
xchg
lods
xchg
cli
mov
mov
dec
aaa
push
mov
mov
aas
jo
adc
adc
mov
arpl
outsb
lods
into
scas
out
xlat
pop
adcb
push
mov
aas
fs
nop
jl
and
mov
jmp
lock
xchg
sub
pop
mov
fld
dec
sbb
xor
add
lahf
vmaxpd
or
xchg
inc
xorb
jp
cltd
push
adc
pusha
adc
std
bound
dec
ror
aaa
xor
jae
popa
mov
hlt
mov
cltd
pop
mov
xor
jge
jo
push
shr
inc
sub
or
xchg
scas
pop
adc
fsub
push
orl
dec
xchg
sub
inc
mov
pushf
cli
in
cwtl
or
pusha
popa
sub
cmpsl
ret
xchg
adc
mov
repz
wbinvd
cmpb
aas
push
push
dec
xchg
add
or
xchg
and
ret
mov
mov
repnz
push
orb
aas
or
push
bound
pop
adc
stos
and
cmpsl
push
or
mov
sbb
add
lock
xor
mov
adc
xchg
in
inc
push
sbb
enter
mov
inc
sbb
pop
mov
add
inc
xchg
je
mov
adc
push
mov
mov
repz
xor
movsb
inc
add
lret
mov
sbb
lea
add
addr16
add
jne
inc
test
mov
ss
sbbb
sub
sub
mov
lock
push
mov
sbb
add
add
cli
adc
enter
daa
inc
xchg
ret
nop
add
out
add
insb
scas
nop
add
and
push
and
movl
hlt
push
lods
ret
pop
cmp
fistps
sub
pop
ret
sbb
cwtl
hlt
js
popf
adc
ds
or
mov
rclb
and
xlat
adc
or
test
fidivrs
std
mov
popa
ss
or
std
jecxz
or
pop
orl
mov
popf
or
xchg
sbb
jle
adc
xchg
mov
add
jns
out
and
dec
xchg
cmp
dec
add
or
nop
sub
fistl
adc
add
out
cmpsl
pop
jo
out
mov
lea
insl
test
stos
nop
lret
cmp
jo
lcall
xchg
lods
xor
rclb
vcvtsi2ssl
in
xchg
jae
or
sub
cmpsb
adc
inc
leave
pop
outsl
add
lret
push
inc
add
and
loop
xor
sbb
mov
inc
mov
and
mov
lahf
jno
xchg
hlt
rolb
xchg
sbb
decl
popf
test
jb
pop
fwait
xchg
jmp
sub
repz
dec
push
xchg
or
das
es
nop
loope
loope
dec
mov
pop
sub
sbb
test
adc
imul
cltd
cwtl
push
mov
xchg
pop
sub
lds
jp
sub
subb
xor
mov
xchg
cltd
xchg
and
cmpsb
add
fwait
mov
and
fimull
pop
rcrb
push
pop
sub
xchg
add
mov
test
mov
subb
pushf
les
popf
mov
fbld
and
pop
or
and
addl
mov
les
imul
pop
or
fnsave
mov
sbb
mov
mov
rcr
mov
cld
xchg
ja
xor
lock
xchg
mov
or
hlt
ja
xchg
jg
inc
insb
xchg
cmpsl
fs
jns
mov
movlhps
mov
movsl
xchg
imul
inc
and
add
test
dec
test
push
sbb
sbb
sub
movsl
mov
in
cmp
add
push
adc
add
pop
mov
mov
xchg
imul
call
mov
js
add
inc
mov
js
cs
add
push
nop
mov
mov
inc
jmp
loopne
loop
or
adc
in
clc
dec
in
in
rcll
imul
incl
mov
js
push
xor
adcl
test
sbb
popf
loope
std
fwait
jns
enter
scas
jecxz
push
sub
inc
jns
pop
or
jge
cmc
xor
xor
lea
push
xchg
ret
jne
sub
ret
lds
pop
xor
rolb
inc
add
lods
es
xchg
mov
inc
or
out
rorl
cmp
sbb
cmp
les
aaa
lret
into
or
mov
xor
add
adc
pop
push
jecxz
add
outsl
std
or
add
cmp
popa
mov
mov
xchg
adc
mov
ds
jmp
sbb
inc
xor
jmp
mov
roll
shr
jle
jge
pop
arpl
and
in
push
or
addb
jle
cmp
jmp
loopne
sub
adc
popf
int3
test
xchg
add
aam
lods
leave
subb
inc
std
add
fs
mov
sbb
leave
cmp
insl
test
push
push
xchg
fdivrs
or
ret
add
xchg
mov
pop
test
loop
add
xchg
mov
adc
sub
push
xorb
or
daa
es
adc
mov
fcmovb
push
jno
fmul
bound
sub
xchg
jbe
add
andb
mov
sbb
aas
inc
mov
cmpsl
xlat
adc
xchg
mov
sub
add
sbb
mov
rcrb
xor
push
push
int
cmp
enter
daa
out
pop
jns
incb
adc
add
xchg
mov
imul
sbb
sub
xor
sub
out
and
or
push
je
and
mov
mov
or
test
mov
add
lret
outsb
mov
mov
ret
cmc
or
ljmp
or
jmp
arpl
cmp
rorl
lahf
xor
pop
add
pop
add
decl
add
outsb
scas
xor
lret
ret
fadd
pop
fwait
loope
mov
in
clc
jp
loop
loop
add
adc
shr
out
lds
es
add
push
adc
mov
insb
mov
mov
inc
sarb
adc
jo
pop
add
lds
adc
push
pusha
loopne
add
push
call
test
or
sbb
js,pt
push
repnz
adc
and
push
and
andl
ret
push
xchg
cmpb
aas
adc
mov
std
scas
ret
pop
pusha
mov
mov
pusha
ret
pop
imul
daa
std
into
inc
pop
dec
fs
push
inc
mov
orb
lea
adc
ficoml
and
dec
int
inc
pop
inc
pop
adc
aas
mov
mov
jmp
std
fstl
fwait
aaa
shll
insl
inc
inc
pusha
js
mov
nop
mov
inc
movb
or
das
repnz
inc
cs
aad
mov
cmpsb
inc
xchg
out
andb
ror
xchg
push
dec
ljmp
or
push
xchg
jp
add
xchg
dec
jb
sub
xchg
mov
or
xchg
adc
mov
jo
js
nop
dec
mov
push
cmpsl
and
pushf
dec
lods
sarb
xchg
sub
adc
sub
or
xor
sbb
jge
fdivs
lret
push
jno
adc
dec
pop
filds
mov
jge
xor
pop
sti
or
movsb
or
and
add
pop
les
jg
mov
nop
imul
orl
sub
or
push
out
or
jmp
orb
sub
fldt
aas
and
lret
test
es
lar
and
push
std
lea
pop
cwtl
shrb
sbb
data16
mov
jp
andl
lds
and
xor
loope
sbb
adcl
loopne
ret
int
arpl
into
dec
or
mov
test
adc
jecxz
pop
loope
add
mov
lods
or
push
test
jb
scas
pushf
add
pop
add
and
fmull
mov
xor
fucom
pop
xchg
ret
adc
rorb
jns
out
pop
and
stos
rorl
and
or
mov
fidivrl
xchg
shlb
xorl
int
loope
test
repnz
es
mov
outsb
scas
andb
imul
and
sub
xchg
rol
popf
sub
mov
inc
call
les
cmp
add
ja
addb
jmp
ret
outsb
lahf
xchg
sbb
arpl
in
jp
ret
sbb
popl
xor
fmuls
sbb
mov
sub
daa
add
adc
cwtl
jae
pop
push
cmp
or
xor
leave
addb
jp
dec
fmul
int
fcomps
mov
lret
adc
jno
xchg
in
adc
dec
rcrl
mov
push
or
xor
and
lds
jae
out
push
pop
inc
dec
xchg
push
or
mov
add
adc
or
stos
dec
cmpsl
push
ljmp
adc
sbb
dec
dec
test
mov
adc
fnsetpm(287
inc
std
pop
rolb
jge
repnz
out
inc
xor
fiaddl
stos
adc
or
or
sahf
cmp
arpl
xor
gs
mov
lret
sbb
cltd
movsb
push
cmp
pusha
loope
sub
mov
cmp
jns
xchg
mov
and
push
xor
sub
xchg
sbbl
enter
pushf
fnstcw
insb
popf
subb
mov
sbb
push
insb
adc
sbb
pop
cmp
call
dec
loopne
loope
sub
test
cld
mov
push
lock
or
dec
nop
addl
lahf
imul
cltd
popa
cmpsl
ja
fiadds
push
out
pop
cmp
shll
mov
mov
int3
pop
adc
out
mov
xchg
xor
movsl
fwait
cmp
push
push
mov
pop
or
add
adc
stos
mov
xchg
call
jge
pop
leave
out
xchg
sbb
mov
loope
cmp
in
cmpsb
or
mov
test
xlat
xchg
ds
sbb
int
cmp
pop
xchg
cs
push
movsl
pop
rcrb
out
sbb
lret
std
adc
add
rolb
push
add
fildl
dec
cmp
mov
xlat
ret
rorl
adc
and
stos
xor
push
popf
out
popf
loopne
sbb
in
jbe
adc
pop
cmp
stc
push
xchg
and
mov
adc
adc
xchg
lods
jo
scas
mov
fsubl
push
aam
ljmp
rcl
data16
dec
mov
fiadds
nop
mov
mov
icebp
xor
dec
jo
jle
sbbb
cs
adc
xchg
stos
aaa
cmpl
sbb
sbb
adc
xor
icebp
andl
nop
rcrl
xchg
pop
and
adc
adc
ss
pop
ja
push
mov
fstl
or
imul
lds
or
fdivs
lret
lret
pop
sub
mov
addb
icebp
and
jl
jno
icebp
jecxz
mov
clc
incl
mov
addr16
daa
mov
mov
cltd
xor
sti
mov
inc
mov
lret
cmp
pushf
adc
jno
dec
or
sub
pop
sbb
xor
mov
mov
pop
fldt
push
pop
movsl
ss
pop
les
mov
or
mov
shlb
shll
jb
mov
xor
sbb
jbe
pop
xor
xor
and
pushf
pop
sbbb
mov
jns
mov
adc
adc
add
xchg
cs
aas
in
pop
xor
add
sbb
arpl
test
sub
xor
stos
cmpsb
pusha
hlt
pcmpeqb
xchg
push
inc
and
mov
push
add
dec
push
movsl
popf
xchg
jne
lret
push
nop
push
sbb
mov
xor
fwait
negb
add
sahf
popa
jo
push
mov
mov
aas
dec
add
negl
jecxz
dec
mov
lea
rclb
fdivrl
and
fwait
int3
jl
sub
and
mov
insb
hlt
push
push
xchg
pushf
inc
cmp
stos
mov
push
inc
negl
hlt
or
mov
js
cmp
inc
incl
dec
and
mov
leave
pop
pop
inc
xor
push
adc
aas
js
rcll
adc
sbb
and
add
popa
popa
mov
push
sbb
mov
add
or
aam
notl
loopne
pop
sbb
mov
loope
les
jle
add
and
sbb
cmp
jg
movsl
and
movsb
dec
aas
icebp
cmp
ret
aaa
xchg
pop
add
mov
push
xor
jg
fadd
icebp
imul
into
lret
and
dec
jmp
lret
js
lea
mov
add
jmp
add
xchg
mov
cs
mov
rorl
pusha
loopne
rcl
or
fwait
pop
mov
jl
jecxz
inc
inc
lret
loop
gs
or
pop
cmp
rcrb
mov
enter
xchg
jl
cmp
leave
inc
sub
jno
aam
cmpsb
cmp
pop
xchg
std
cmp
inc
ret
jg
andb
pop
push
aas
test
adc
bound
imul
pcmpeqb
ret
into
lock
decb
cmpsl
cmp
jb
add
mov
xchg
or
rcrl
lea
adc
xor
sub
lods
mov
push
adc
pop
jb
push
mov
aam
jnp
xorl
xor
cmpl
push
lods
mov
and
jb
data16
or
out
sbb
popa
mov
cmc
mov
mov
addb
idivl
push
xchg
sbb
or
cltd
mov
fwait
jg
mov
add
mov
arpl
fnstcw
xor
dec
or
pusha
dec
add
dec
mov
inc
mov
pop
mov
push
xchg
cmpsb
pop
insl
dec
add
inc
ret
pop
lcall
xchg
sbb
inc
test
cwtl
adcb
repnz
inc
push
fstl
adc
aaa
addr16
sbb
nop
sub
movsb
sub
inc
sbb
test
add
shlb
pusha
push
xchg
mov
inc
and
xchg
dec
lret
daa
mov
enter
cltd
andb
and
repnz
fucom
add
adc
inc
mov
lret
pop
insl
dec
inc
and
rcll
orl
add
rcrb
adc
inc
andl
js
cmpsl
outsl
jbe
adc
dec
jo
sbb
jo
fwait
or
push
adc
sub
push
mov
adc
js
cmp
and
push
push
daa
out
lcall
xor
and
or
es
lret
cwtl
push
lock
cmp
js
inc
lods
lret
add
or
scas
pop
fnstsw
lods
test
pusha
mov
mov
xchg
xchg
jns
pusha
inc
sub
and
or
cmp
out
xor
xchg
aas
adc
cmpl
inc
shll
aad
sbbl
jp
dec
add
inc
das
nop
lcall
arpl
mov
sub
test
add
and
mov
scas
lods
mov
icebp
in
sub
add
lods
into
cld
stc
xchg
mov
stos
push
jge
into
push
iret
mov
jno
mov
ret
jg
pushf
xor
rcrl
sub
push
mov
mov
mov
je
adc
loopne
into
shlb
push
add
in
and
mov
sbb
loopne
pop
or
or
pop
xchg
jmp
sub
cmp
pop
gs
imul
jb
mov
dec
cmc
lds
dec
je
mov
inc
bound
xor
shll
sbb
mov
dec
je
mov
fs
and
data16
hlt
les
or
dec
movsl
repnz
add
or
or
mov
arpl
sub
mov
sbb
pop
xchg
repz
int
adc
clc
aad
add
std
cmp
daa
xor
stos
pop
loopne
adc
or
or
movsb
sub
add
movsb
out
dec
cmp
pop
or
add
bound
or
xorl
inc
jl
test
cmpb
adc
adc
das
push
sti
popf
push
push
cmp
cmpsb
outsl
xor
xchg
lock
sbb
mov
nop
cwtl
cmp
xlat
and
jg
cltd
xorb
orb
popf
test
xorb
lcall
outsl
lret
push
sub
mov
pop
add
addr16
and
cs
out
imul
cs
xchg
push
mov
xchg
test
pop
xchg
jo
imul
xor
arpl
orl
push
imulb
push
sbb
test
or
lds
inc
ds
and
clc
or
mov
xchg
jno
popf
daa
adc
arpl
cmc
out
push
xchg
sbb
or
das
add
out
rcr
arpl
and
lahf
adc
aam
add
mov
jle
mov
mov
mov
mov
push
and
jo
enter
inc
jp
loope
dec
movsb
mov
add
cmp
dec
movsl
cltd
nop
xchg
in
and
or
aam
push
test
adc
int3
in
dec
cmp
add
mov
push
push
test
mov
jp
or
xchg
jle
cltd
adc
rorl
stos
andl
addb
jne
cmp
pop
mov
lea
repz
jo
in
sbb
repz
daa
and
mov
dec
push
mov
sub
adc
adc
dec
dec
scas
jnp
ja
lea
sbb
fsub
stos
std
add
testl
mov
add
addb
xchg
or
inc
inc
ljmp
insb
jae
add
dec
popa
rcrl
mov
test
cs
jnp
xorl
negb
xor
les
push
mov
sti
lret
decl
inc
xchg
inc
out
sbbl
stc
fwait
sbb
icebp
enter
shrb
mov
pusha
dec
mov
decl
cmp
scas
mov
add
xorb
xchg
cltd
lea
push
sub
and
addb
pop
pusha
push
mov
mov
mov
mov
inc
test
cmc
or
xor
data16
scas
loop
inc
fldl
or
nop
xor
add
mov
out
or
jno
xlat
rcrl
push
sbb
adc
pop
pop
rcrl
adc
cltd
inc
inc
xchg
mov
inc
cmp
push
movsl
les
nop
mov
roll
push
jae
sub
add
outsb
inc
in
add
mov
in
mov
dec
popa
dec
popa
xor
mov
pop
mov
and
movb
nop
data16
mulb
pop
and
jge
test
and
push
jg
repz
jbe
popa
lds
mov
out
jbe
test
sbbb
adc
mov
push
mov
pop
lcall
ja
mov
and
ret
fists
scas
or
arpl
jp
push
mov
sub
std
lret
push
mov
lods
xchg
pop
popa
mov
aam
xor
insb
add
pop
fstpl
xchg
and
sbb
mov
dec
inc
call
inc
sbb
jmp
or
xchg
jae
gs
jge
xchg
das
movsl
or
or
push
or
aas
xorl
dec
mov
sub
inc
lret
inc
sub
aaa
test
dec
clc
bound
xchg
in
mulb
es
xor
xor
mov
inc
mov
das
lods
xchg
inc
stos
icebp
mov
inc
lcall
mov
xchg
jl
xchg
repnz
int3
cli
sbb
mov
add
add
mov
mov
push
jge
popf
inc
inc
and
inc
mov
daa
iret
movsl
adc
sbb
sbbl
xchg
ret
bound
imul
dec
mov
jmp
push
jmp
sub
pop
test
imul
or
push
movsl
xor
call
jb
sub
cmp
lret
xor
sbb
jge
ja
cmpsb
pusha
cmp
xchg
lcall
sub
int
xchg
xchg
dec
rcrb
mov
xchg
add
pop
daa
inc
or
cltd
adc
jmp
xchg
jno
sbbl
add
gs
adc
push
cltd
mov
inc
lahf
fldt
and
add
add
cwtl
prefetch
loop
push
xchg
shlb
addl
rorb
jecxz
icebp
outsl
lret
mov
cmpsb
cld
inc
bound
addb
loop
jp
xchg
jge
movsl
test
test
ss
add
or
cwtl
or
cmpsb
and
inc
xchg
cmp
aad
popa
call
and
add
xchg
cwtl
inc
xchg
xchg
push
loop
stos
lcall
lea
adc
pop
xlat
dec
xchg
or
cmc
adc
push
adc
adc
push
xor
xchg
adc
mov
add
or
add
sub
mov
mov
inc
sub
jb
lret
test
sbb
adc
in
mov
scas
mov
inc
lods
nop
orl
add
inc
mov
addr16
xchg
jge
xchg
cwtl
mov
and
aas
adcl
movsb
lret
xchg
inc
mov
mov
sbbb
test
dec
xchg
mov
aaa
movsb
rorl
test
mov
inc
movsb
addl
xchg
pop
pushf
xchg
jo
xchg
jmp
movd
or
icebp
mov
repz
bnd
sbb
push
pushf
pushf
addl
push
inc
test
repnz
push
stos
add
xorl
jb
cwtl
add
xor
andb
sub
ret
push
add
nop
adc
repnz
mov
lock
sbb
xchg
and
mov
push
or
xchg
shll
int
xchg
push
test
lret
addl
or
mov
xchg
inc
dec
pop
sbb
subl
mov
sbbl
sbb
push
and
daa
test
arpl
push
adc
cmp
fwait
aaa
jge
cmpsb
and
xchg
add
movsb
add
aaa
xor
xchg
xchg
imul
cmp
push
dec
mov
test
iret
xor
or
inc
es
and
xor
jecxz
test
xchg
mov
dec
xchg
test
mov
and
or
mov
or
add
mov
cmpsb
xor
mov
shll
nop
cwtl
and
sub
bound
cmp
sub
or
pop
and
or
dec
mov
cli
mov
add
cwtl
js
pop
push
mov
mov
nop
daa
dec
push
push
cmp
inc
inc
xchg
ds
add
add
addl
xor
or
or
mov
adcl
rorb
cmp
xchg
adc
xchg
mov
inc
movsb
add
or
in
stos
add
adc
pop
or
push
and
adc
inc
subb
xchg
mov
adc
mov
aaa
push
data16
dec
sbb
sbb
mov
out
push
add
and
pop
scas
pop
in
cmp
sbb
mov
mov
mov
adc
mov
add
jo
pop
mov
sbb
mov
or
cmp
stc
nop
pop
data16
addl
mov
sbb
imul
lea
repz
nop
xorl
hlt
fs
insl
add
sbb
icebp
cmpb
imul
push
xchg
pushf
jo
cmp
add
pop
xchg
pop
push
pop
xchg
add
rcrl
adc
sub
sbb
fsts
dec
adc
or
test
mov
das
xchg
jp
adc
rcrw
fisttpl
mov
loope
sub
mov
jno
or
xchg
dec
xchg
pushf
add
push
sbb
cmp
iret
adc
pop
addl
scas
push
pushf
sbbb
mov
mov
dec
and
inc
xchg
sub
test
ficoms
addl
mov
jp
xor
sbb
popf
fstl
ficoms
ljmp
push
or
sahf
inc
sub
imul
movsb
insb
sub
shr
cltd
cmpsl
inc
jp
or
scas
test
mov
in
xchg
xchg
mov
pop
sub
cli
fiaddl
lret
dec
push
fdivrs
adc
or
push
cwtl
test
dec
add
cmp
cltd
rclb
sub
hlt
or
cltd
cwtl
ss
push
add
stc
adc
pushf
push
adc
mov
or
sbb
sbb
add
dec
sub
clc
sbb
pop
mov
test
cmp
cltd
push
stc
adc
pushf
sbb
lcall
repnz
sti
adc
sub
sub
sbb
xchg
test
add
add
fnstenv
cmp
icebp
or
sahf
sbb
psrld
xchg
xchg
mov
and
add
ljmp
dec
inc
cmp
mov
outsb
push
cmp
out
into
xor
into
xor
sub
adc
dec
xchg
insl
mov
add
sub
push
sbb
adc
push
add
mov
pop
leave
jno
push
jo
dec
fiaddl
mov
pop
push
test
cwtl
nop
push
sbb
add
shlb
mov
test
sahf
cwtl
dec
in
and
lret
lods
push
push
push
sub
inc
lret
push
data16
add
mov
mov
add
add
jg
mov
sbb
and
inc
xchg
pop
roll
addl
dec
jge
cltd
push
inc
cli
mov
inc
movsl
or
inc
out
sub
fwait
mov
push
xor
lahf
and
test
push
out
inc
sbb
add
jo
out
adc
fs
ret
je
mov
fcoms
rcrl
testl
adc
mov
iret
mov
out
sti
arpl
mov
pop
and
add
or
call
xchg
loope
imul
dec
bound
or
addb
outsl
out
inc
out
out
sbb
pop
xchg
loope
and
mov
shlb
iret
jmp
sbb
jae
push
xchg
or
imul
xchg
mov
icebp
inc
loopne
lds
push
push
hlt
and
mov
push
out
lds
fmuls
fbstp
mov
test
sbb
sbb
test
or
ret
mov
inc
lods
loopne
jmp
inc
dec
xor
mov
and
int
sbb
imul
sbb
inc
mov
loope
dec
jecxz
xor
and
scas
inc
add
cmp
test
ret
test
test
test
cld
test
lret
or
pop
adc
add
pop
add
cmpsb
lret
sbb
insb
sbb
rcll
hlt
xchg
stos
sbb
mov
movsb
aas
loope
js
fisubs
jmp
or
notb
cmpsb
cmp
mov
mov
popf
mov
adc
sbb
inc
lea
add
mov
loopne
mul
pop
xchg
mov
dec
sarb
cmpsb
pusha
aam
cmp
lods
lock
das
xor
fldenv
int3
add
xchg
inc
xchg
push
pop
mov
cld
adc
fcomps
sbb
jnp
inc
xchg
mov
bound
test
or
out
stos
les
ja
mov
xchg
pop
leave
insb
sahf
pop
sahf
popa
push
pop
dec
add
dec
sub
pusha
inc
mov
dec
cltd
call
loop
jb
popf
jp
popa
or
test
or
mov
int
sbbb
sub
cwtl
or
pop
dec
repnz
and
movsl
out
insl
ret
lret
cmp
jno
lcall
and
flds
or
les
ret
xchg
xchg
jg
push
add
shll
jmp
cld
push
pop
mov
add
mov
out
test
fdivl
inc
stc
and
adc
mov
mov
call
or
cmc
sub
pushl
and
out
mov
int
mov
dec
push
scas
mov
mov
mov
push
inc
fildl
pop
mov
pop
xchg
cmp
mov
cmp
add
or
add
xor
and
cmc
in
jb
test
dec
push
and
add
mov
hlt
mov
stc
sbb
xor
add
sbb
je
push
jecxz
dec
fsubrs
pushf
sub
call
add
mov
inc
push
xor
or
outsl
mov
push
outsb
add
inc
stos
rcl
xchg
lds
cmp
mov
cli
jl
pop
mov
enter
push
mov
aas
mov
popl
bound
fs
outsl
leave
js
sti
dec
push
sub
call
popa
adc
repnz
andl
inc
inc
loop
add
out
ljmp
sbb
add
popa
std
xor
inc
das
in
cli
mov
add
and
les
bound
adc
decb
dec
int3
cld
mov
les
leave
rcll
pop
test
sarb
std
jno
or
cltd
outsb
faddp
push
inc
sub
mov
shl
dec
and
push
addb
xor
out
push
cmp
inc
scas
cmp
dec
daa
lahf
ss
loopne
xchg
jg
filds
stos
inc
and
adc
mov
pop
mov
psubusb
mov
pop
daa
cmp
nop
movb
fs
sub
mov
or
inc
cmp
and
add
cmp
cmp
sbb
cmp
rclb
adc
add
leave
arpl
mov
push
in
pop
dec
arpl
mov
jle
mov
cmpl
js
mov
mov
into
pusha
movsl
or
fsts
jge
dec
xchg
arpl
stos
mov
mov
jmp
jecxz
mov
scas
push
pop
iret
decl
setns
lahf
loope
xor
les
loope
rep
in
cmpsb
mov
std
pop
aaa
dec
lea
mov
xchg
int3
xchg
mov
mov
pfrsqit1
subl
les
jg
dec
cwtl
ds
sub
pop
dec
in
dec
sbb
pushf
cmp
cmp
dec
and
popa
and
shll
mov
xchg
push
loop
fsts
ret
pop
adc
mov
sub
and
xor
repnz
xchg
push
xor
stc
clc
inc
and
or
jnp
jo
outsl
rcr
popf
add
xchg
cmp
sbb
mov
pop
cmpl
sbb
push
sub
adc
popa
mov
mov
xor
aaa
adc
fs
ljmp
inc
inc
andl
aaa
cltd
dec
add
adc
or
leave
push
mov
loope
jo
adc
mov
pop
add
xchg
repz
mov
sbb
sarl
shrl
dec
lods
jmp
sbb
cwtl
mov
stos
cmpsl
mov
cmp
mov
sbb
cmp
jmp
pop
jae
fcoms
cwtl
mov
sub
daa
hlt
test
jbe,pn
aam
iret
mov
add
movsb
mov
add
mov
push
stos
mov
cwtl
sub
mov
mov
xchg
xor
pop
inc
xchg
inc
pusha
push
stos
and
mov
inc
leave
test
inc
push
loop
mov
adc
js
jg
xchg
dec
mov
and
inc
sbbb
jb
fildll
call
loopne
clc
adc
mov
cltd
jnp
jmp
loopne
inc
inc
xor
pushf
dec
jae
les
adcl
int3
xchg
mov
push
out
jns
jbe
in
add
xchg
add
or
sbb
repnz
mov
jno
roll
orb
inc
outsb
pop
fnstenv
sub
inc
push
jecxz
scas
or
ret
lods
mov
sbb
or
dec
or
negb
fsubrl
mov
mov
mov
and
lea
sbb
push
es
scas
xor
mov
jbe
repz
adc
ljmp
cmpsl
mov
xchg
mov
decl
adc
ret
sbbb
sbb
icebp
fmul
push
orb
mov
lcall
imul
fimull
cltd
in
xchg
push
jge
jno
in
mov
fldcw
mov
cmp
js
xchg
lret
aaa
mov
gs
push
sbb
movsb
cmp
xchg
xchg
aaa
and
das
fstl
pop
test
aad
das
imulb
nop
ret
add
xchg
xchg
popa
iret
nop
push
cltd
mov
jp
sub
dec
adc
shll
jmp
sbb
push
push
jns
xor
adc
mov
icebp
sub
mov
scas
xor
mov
and
movsb
out
xchg
aas
inc
or
inc
add
repnz
push
push
pop
mov
mov
fnstsw
pop
lds
add
xor
lock
ret
loope
stos
pop
call
and
sahf
pop
mov
mov
popa
adc
ret
fbstp
fists
push
or
repz
cmp
xor
popa
cmp
call
lds
fs
inc
pusha
inc
shrl
loopne
lock
out
mov
rcrl
sub
out
mov
or
outsb
push
ljmp
pop
les
push
sub
enter
daa
loop
push
push
bound
and
add
enter
js
pop
popa
out
pusha
add
js
mov
cmp
xlat
jb
sub
in
decl
in
ret
test
shl
out
sub
pop
mov
mov
xchg
inc
sub
aam
test
or
sub
add
sub
movsl
or
inc
andl
mov
inc
stos
scas
or
stos
pusha
inc
push
push
test
inc
and
loop
xchg
test
mov
syscall
mov
in
lock
arpl
or
jne
popa
dec
test
adc
enter
es
xchg
aam
je
mov
xor
mov
fdivrl
movsb
das
insb
push
mov
and
mov
movsb
mov
stos
aam
iret
mov
adc
jbe
xchg
mov
or
rclb
or
jge
mov
and
popf
loopne
cmp
sub
and
push
je
aaa
shr
sbb
lea
jp
xchg
add
fisubrl
or
add
lahf
lock
mov
or
movsl
idivb
js
xor
fists
push
or
daa
test
dec
loope
fcompl
jge
pop
or
lods
outsb
ficompl
push
xchg
andl
js
test
movsb
mov
ljmp
ss
cmpsb
xor
push
add
jo
adc
dec
int
pop
push
shl
sti
push
xchg
push
ret
fcomp
jb
xor
pop
inc
mov
jecxz
jne
inc
or
cmpl
add
cmpsl
leave
loop
add
add
inc
sub
pop
push
lea
cmp
popf
and
xchg
jge
inc
or
xor
adcb
pop
xchg
out
xor
inc
scas
popl
xlat
loop
imul
ljmp
mov
sub
push
jnp
call
flds
pop
ret
ret
pop
pop
jmp
or
jo
and
sarb
ds
scas
push
dec
pop
call
stos
xchg
inc
and
lret
pusha
inc
enter
mov
jb
shr
xor
xchg
pop
sbb
xor
dec
mov
or
add
xchg
push
sub
gs
push
xor
xlat
dec
je
adc
or
push
push
jb
dec
ret
or
pop
mov
lea
lcall
mov
push
or
xor
pop
fdiv
call
out
int3
jb
or
cltd
pushf
mov
xchg
or
iret
pop
shlb
scas
push
inc
in
add
push
xor
fistpl
jo
jl
mov
push
movsl
or
add
dec
inc
add
pop
sbb
loope
push
insl
nop
stos
mov
test
mov
sub
jb
or
xchg
addb
mov
ljmp
fbstp
lret
mov
add
jle
pop
inc
lret
mov
cmp
pop
cltd
mov
ljmp
setge
sbb
inc
mov
lods
lea
sbb
xor
adc
mov
into
mov
stos
pop
cmp
mov
out
inc
mov
dec
bound
pop
pop
sbb
inc
push
and
scas
addr16
dec
push
je
pop
xor
mov
leave
xchg
rorb
cmpsl
adc
loop
add
ja
cmpsl
push
push
add
add
adc
mov
insl
test
addr16
jl
in
sbb
or
out
pop
mov
outsb
stos
add
ja
out
ficomps
imul
and
orl
xchg
cmp
stos
std
out
mov
addl
daa
jne
xchg
bndldx
sub
push
push
push
scas
cmpsb
rol
lds
push
jle
mov
mov
loope
inc
stos
inc
stos
rolb
cwtl
fdivrl
data16
mov
popf
dec
mov
or
mov
jmp
lret
mov
gs
push
enter
daa
fistps
fwait
cltd
fimuls
or
adc
push
test
inc
xor
add
aam
insl
ret
cmp
insl
jmp
in
daa
cmc
clc
jge
stos
ret
arpl
dec
rcll
inc
dec
xchg
pushf
sub
in
dec
leave
or
fwait
xor
xchg
mov
mov
pop
loopne
sub
icebp
and
jmp
addl
mov
shrb
mov
pop
aas
sbb
mov
or
in
sbb
pop
sbb
fists
or
add
int3
xor
jg
mov
pop
jno
push
jae
sahf
pusha
aaa
mov
push
push
loop
mov
or
dec
and
jno
ror
sub
and
mov
mov
push
cmpsb
or
push
fisttpl
into
shl
jb
mov
xchg
gs
pop
testb
mov
mov
mov
aaa
inc
dec
cmpb
cmc
sti
dec
add
and
or
push
push
and
lods
movsl
jl
outsl
mov
loope
data16
in
and
ror
cmp
pop
test
in
cmp
xor
or
push
notb
inc
and
or
and
dec
cltd
cmp
insl
and
jb
icebp
ds
or
xchg
adc
push
loop
lds
xchg
sbb
or
das
or
aad
xchg
lods
push
imul
add
repz
out
xchg
sbb
add
xchg
test
dec
lods
icebp
pmuludq
mov
xchg
adc
ficompl
mov
lret
push
popa
and
sub
xchg
out
or
icebp
lahf
xor
push
in
xor
cmp
sub
cmp
push
stos
vmread
xchg
add
enter
pop
out
scas
or
or
add
push
pop
loop
in
xor
push
xor
lahf
xchg
icebp
pop
dec
xor
imul
ljmp
mov
push
imul
cmp
inc
xor
lret
xchg
sub
mov
jecxz
pop
xchg
lahf
pop
inc
inc
ret
push
std
add
mov
je
ljmp
int3
push
dec
pushf
sbb
pop
in
cld
jle
fwait
imul
and
ret
ljmp
sbb
rorl
mov
andb
add
daa
and
insb
clc
lea
jle
inc
sahf
fs
add
icebp
mov
js
sub
in
or
push
out
fistpll
adc
mov
shlb
and
mov
mov
mov
mov
sarl
mov
sbb
push
inc
xchg
into
inc
cmp
sarb
xor
adc
fadds
fbld
pusha
daa
add
inc
rcr
nop
test
movsb
sbb
dec
mov
popa
addr16
push
imul
test
and
ret
loope
sbb
dec
sub
xor
or
and
adc
divl
push
rolb
or
sbbb
lea
xchg
mov
rcll
mov
jge
mov
lcall
add
outsb
push
loop
mov
xor
mov
cmp
mov
lds
lds
loopne
mov
cmpb
scas
imul
pop
fcompl
ss
add
movsl
les
stos
or
add
xchg
enter
mov
in
repz
add
in
test
and
test
ja
std
fisttpl
je
adc
test
out
lods
cmpsb
dec
mov
or
mov
ret
cmp
mov
insb
ljmp
lea
int
dec
push
sub
xor
mov
sbb
imul
add
push
rorb
cmp
or
adc
les
loope
adc
jae
lea
mov
add
int
jg
data16
mov
adc
cmp
mov
lret
loopne
sbb
fstpl
hlt
inc
out
add
push
xchg
jmp
or
daa
and
dec
sub
pusha
add
push
sbb
movsl
ret
popa
insl
lahf
push
jno
pusha
sbb
scas
es
gs
fisttpl
test
and
stos
lods
cmp
lea
jbe
xlat
pop
movsl
jo
ljmp
scas
aas
mov
test
pop
push
fisttps
xchg
dec
mov
das
or
pop
movsb
int3
repz
aad
and
jo
jb
or
sbbb
mov
lds
test
cmp
push
mov
adc
push
xchg
addb
jmp
dec
bound
mov
or
int
inc
jae
filds
dec
pop
popw
mov
in
xor
pusha
add
mov
or
hlt
inc
push
and
sub
and
jo
mov
cmpsb
scas
adc
in
xor
xchg
mov
loope
in
popa
cmc
dec
add
pop
mov
icebp
mov
addr16
loop
mov
fdivs
popa
and
pop
xchg
cmp
addl
mov
push
or
or
mov
es
and
mov
fists
es
mov
cmpsl
jle
or
inc
out
push
lods
mov
aam
sbb
shlb
fs
stos
mov
outsl
movsb
sbb
mov
push
ror
icebp
push
cmp
mov
adc
stos
sbb
addb
adc
dec
jo
push
addb
call
or
insl
xor
pop
fdivrl
das
test
xor
fmuls
shr
add
sbb
add
pop
mov
cwtl
outsb
jge
loop
add
xchg
dec
in
inc
jo
or
mov
pushf
cmpsb
decl
adcb
mov
mov
inc
stos
aam
jl
push
push
sub
pop
add
stc
ficoms
mov
xorb
imul
in
filds
mov
pusha
cltd
fwait
and
or
lret
pusha
mov
pusha
inc
rclb
cmp
lea
mov
xchg
adc
push
outsb
addr16
pop
imul
sbbl
cmp
push
inc
dec
addl
push
pop
sub
sahf
sbb
add
addb
push
sbb
inc
push
test
add
je
or
jb
out
out
pushf
push
fisttpll
imul
call
pop
pop
dec
add
push
adc
and
adc
adc
adc
mov
adc
adc
nop
or
mov
mov
fs
int
and
push
cmp
and
inc
cli
in
xchg
cmp
rorb
and
xchg
inc
add
push
inc
add
xor
bound
loop
adc
fs
std
dec
mov
xlat
push
pop
sti
insb
std
and
xchg
inc
pop
les
or
xchg
mov
pop
arpl
idivl
add
test
in
mov
imul
stc
xchg
add
stos
jb
ss
push
repz
notb
jne
inc
test
and
test
andl
das
xor
mov
xchg
xor
out
faddl
or
cmp
dec
xor
and
in
and
iret
repz
bound
or
loopne
cs
pop
int3
mov
les
inc
inc
bound
lahf
xor
lret
loopne
pop
mov
inc
fldt
adcl
je
aad
cmp
sbb
movsb
test
xchg
subl
sbb
mov
and
add
mov
fmuls
adc
adc
mov
add
adc
pop
push
push
cmpsl
mov
shrl
ret
dec
rclb
inc
and
fists
or
cmpsb
mov
xchg
sub
push
popa
xor
ss
stos
nop
data16
std
cmc
rorb
mov
rolb
and
mov
cmp
aas
mov
dec
mov
pop
pop
push
cwtl
add
mov
fisubl
cmp
adc
nop
push
or
and
icebp
xor
or
mov
out
xlat
nop
lret
dec
fisttpll
mov
mov
pop
push
or
cs
inc
lahf
cmp
cmc
push
or
mov
or
sbb
test
inc
jo
xor
fists
mov
stos
and
inc
cli
adc
cmp
ss
int
and
test
mov
pop
ljmp
mov
xchg
or
scas
popa
sahf
les
fbld
mov
test
lock
cwtl
inc
mov
insb
pop
pop
or
sbb
sub
outsl
pop
loopne
test
xchg
lock
inc
mov
xor
insb
je
mov
imul
leave
out
mov
mov
pop
adc
xchg
imul
push
icebp
xor
dec
dec
ret
pop
lods
or
dec
dec
add
lret
rorl
add
add
cwtl
lahf
call
ljmp
xor
lds
fcmovnbe
adc
inc
mov
es
ss
adc
stos
add
sub
repnz
or
and
and
dec
test
stos
xchg
push
dec
xchg
cmpsl
rcrl
and
sub
xor
sahf
leave
xchg
mov
pop
insl
adc
adc
inc
mov
popa
lret
add
add
adc
outsb
hlt
shll
and
out
cwtl
mov
adc
roll
fiadds
pusha
adc
jns
mov
and
shlb
or
pusha
inc
sub
pop
mov
sahf
inc
lret
addr16
dec
mov
mov
lret
lret
mov
or
or
adc
xor
lahf
pop
les
mov
rolb
or
cwtl
rcr
cli
or
inc
mov
xor
mov
loope
inc
scas
fwait
or
inc
xchg
faddl
fs
inc
es
xchg
xor
enter
mov
mov
sti
dec
adc
add
mov
push
add
shl
or
adc
call
xchg
mov
or
cltd
popa
cmp
xchg
cld
gs
cmp
bound
pop
add
icebp
cwtl
andb
pop
mov
jp
inc
sarl
push
bound
dec
inc
test
mov
pusha
mov
mov
test
lcall
or
add
fdivs
xchg
mov
push
mov
push
cmp
add
push
mov
push
stos
add
push
mov
jns
sub
adc
sub
pop
loopne
pop
loope
push
lods
add
test
and
fnstenv
adc
inc
cmp
cmc
xchg
je
xor
in
mov
and
aaa
mov
sbb
test
mov
inc
dec
daa
fs
and
pushf
xor
outsb
movsb
addl
psubsb
nop
pop
xchg
push
hlt
xchg
in
and
sbb
dec
adc
incl
jl
test
push
fs
lods
movsb
inc
in
popa
adc
inc
sub
push
popf
mov
push
mov
out
jns
xor
sub
ljmp
je
stc
push
add
push
mov
adc
cmpb
pop
shr
scas
lret
cld
andb
xor
add
cs
or
xlat
mov
mov
sbb
adc
nop
push
push
test
add
and
push
add
pop
fisubl
xchg
test
add
add
daa
fnop
loopne
fwait
xchg
lret
fucom
mov
repz
sub
sbb
sub
adc
adc
xor
mov
mov
pop
mov
dec
fadds
std
fucomip
add
adc
push
cmpsb
or
push
xchg
movb
jp
jmp
js
add
adc
inc
lods
fsubl
adc
cli
and
pop
push
lret
mov
roll
ret
aaa
adc
and
mov
ds
pop
ljmp
lret
xor
push
test
mov
mov
iret
add
and
and
and
push
outsl
lahf
xchg
popa
inc
les
orl
push
dec
inc
stos
lods
sar
pop
pop
add
push
push
or
inc
test
cmp
pop
inc
pop
repz
sbb
xchg
or
xor
mov
xchg
inc
fdivp
jb
fistpl
xorb
pop
or
mov
jno
scas
in
mov
not
outsl
sub
sbb
add
xchg
sub
loopne
pop
cltd
xchg
inc
es
bound
pop
les
jae
arpl
cmpsb
push
jns
jg
adc
daa
fistl
ficomps
ficomps
cmp
pop
jb
ret
lods
lret
jno
frstor
push
inc
xchg
mov
data16
adc
iret
outsb
inc
hlt
xchg
out
xchg
mov
les
xor
dec
iret
or
fidivrs
or
gs
push
iret
push
dec
push
les
lret
xor
out
jns
push
xchg
jl
pop
inc
aaa
add
xchg
dec
or
or
or
aam
xor
mov
test
ficoms
addr16
and
and
xor
mov
int3
lods
outsl
lahf
mov
pop
fs
dec
inc
loopne
icebp
jno
movsb
rorb
sub
jne
sub
xchg
mov
mov
movsb
xchg
inc
lds
mov
sub
iret
push
cmp
scas
gs
daa
incl
or
enter
or
in
push
das
inc
stos
dec
push
and
mov
jp
jmp
mov
xchg
out
mov
sub
push
outsb
and
stos
movsl
push
pop
add
xor
lret
fisttpll
inc
iret
lock
and
lcall
xchg
mov
aaa
add
imul
adc
arpl
adc
jge
sbb
popf
andb
cmp
lods
shlb
and
push
jbe
loope
or
mov
lcall
ret
cltd
inc
inc
add
fisubl
mov
add
adc
popa
insb
and
adcl
dec
fcoms
jg
xchg
mov
call
scas
sbb
and
pop
push
add
stos
mov
add
jg
mov
mov
adcl
and
inc
insl
mov
mov
mov
and
sbb
and
daa
inc
or
dec
or
dec
xchg
jge
jmp
add
test
pop
stos
pop
hlt
jmp
aam
int
add
insl
leave
aaa
cmp
adc
jnp
fwait
push
mov
std
mov
pop
push
xchg
add
add
inc
mov
lock
lea
push
and
push
gs
inc
xor
or
fs
mov
add
cmp
sbb
xchg
inc
or
push
xor
add
mov
adc
mov
sub
das
add
jb
scas
lcall
movsb
dec
mov
push
xchg
int3
repnz
push
enter
push
push
les
pop
mov
add
push
pushf
cwtl
push
mov
test
jns
jno
adc
adc
push
mov
andl
data16
lahf
inc
dec
in
dec
filds
roll
mov
mov
and
lret
sbb
bound
test
cs
sub
cs
test
inc
test
sub
lea
cmpl
lea
fmuls
adc
add
push
adc
popa
sub
in
inc
mov
inc
sbb
cltd
dec
xchg
push
sub
xor
dec
add
add
add
andl
popl
lret
add
adc
push
incl
push
or
add
push
orb
jp
adc
and
xchg
push
inc
xor
add
xor
push
or
sub
or
cltd
or
or
adc
popa
cmpsl
mov
movsb
inc
mov
or
decl
and
pop
icebp
test
xchg
cmpl
xchg
or
daa
les
xor
and
push
or
iret
bound
and
decl
lea
orb
outsb
das
call
sbb
out
mov
or
test
ljmp
fisttpl
mov
popf
or
loopne
inc
dec
daa
inc
jl
fisttpll
lods
and
sbb
or
adc
fisubl
sub
mov
adc
mov
inc
xchg
sub
push
mov
test
or
mov
add
push
xchg
adcl
and
xor
bound
rcrb
sub
pop
push
cmp
call
mov
inc
cmpb
adc
mov
cltd
les
xchg
test
ss
aam
or
push
sub
xchg
sbb
dec
andl
adc
inc
ss
push
popa
sub
push
test
push
jbe
jno
fnsave
pushf
int
test
xlat
push
push
inc
lret
inc
jp
enter
mov
mov
xchg
add
or
add
iret
scas
xor
xor
mov
dec
sub
xlat
ljmp
mov
sbb
adc
or
adc
pop
cltd
pop
dec
test
loop
add
mov
cli
add
nop
xchg
orl
enter
sbb
adc
xor
xchg
das
mov
and
jb
test
insb
mov
cmpsb
adc
add
mov
and
addb
cmp
cltd
mov
or
stc
or
fmuls
add
adc
add
mov
adc
xchg
test
cmp
sub
adcl
add
fcoml
cltd
pop
push
test
iret
loop
sub
sbb
and
enter
sbb
cltd
xchg
bound
inc
dec
mov
test
inc
push
or
and
lea
fwait
or
fs
inc
push
loop
js
or
lds
cmpsl
push
mov
xadd
mov
int3
into
push
mov
mov
mov
and
xchg
or
xorl
xor
mov
pop
sbb
add
test
push
insb
sub
cwtl
add
and
jno
test
adc
pop
pop
push
and
adc
cwtl
jl
test
dec
fs
sub
sbbl
test
les
sub
mov
inc
lods
adc
lcall
lcall
and
or
jns
adc
xor
sbb
xchg
mov
inc
sahf
adc
bound
mov
push
mov
or
div
push
sub
ret
dec
or
imul
gs
jbe
sbb
push
movsb
sub
clc
mov
inc
mov
push
mov
jne
mov
fiadds
in
out
jl
sbb
arpl
rcr
rcrb
arpl
pop
xchg
fs
stc
enter
jge
mov
aas
fmuls
mov
or
dec
adc
sbb
sub
mov
sbb
ljmp
xorl
test
dec
ss
mov
mov
add
dec
or
mov
sbb
pop
push
push
xor
inc
enter
push
repnz
sub
mov
repnz
pop
jecxz
subl
ss
mov
in
sub
or
mov
les
pop
andl
addr16
or
cmp
and
icebp
push
xchg
cmpsb
mov
jb
jl
push
and
adc
dec
dec
mov
or
cmp
or
add
adc
add
cmpsb
mov
jle
test
mov
mov
and
pusha
push
sub
adc
lds
hlt
rolb
dec
or
stc
jecxz
or
adc
inc
icebp
and
xchg
add
or
jnp
pusha
pop
mov
dec
std
shlb
inc
sub
jae
cmpsb
ret
and
dec
pop
sbb
imul
push
mov
mov
pop
shl
inc
dec
push
add
jle
cld
inc
ljmp
add
push
pusha
gs
or
fs
dec
fs
std
dec
add
aaa
pop
xlat
popf
inc
dec
out
mov
add
and
imul
mov
mov
inc
movsb
xchg
or
fs
xchg
jo
ja
scas
popf
shl
add
xor
jmp
and
adc
sub
call
popf
mov
icebp
lret
or
and
and
cld
out
test
xchg
popa
sub
popa
test
mov
pop
imul
test
push
adc
xor
push
inc
fwait
add
les
fdivl
test
mov
and
mov
push
pop
xchg
mov
sbb
loop
test
sbb
test
ds
nop
jmp
fwait
add
clc
js
adc
xchg
adc
xor
sub
test
push
shlb
icebp
add
xchg
arpl
push
pushf
push
stc
xchg
dec
movsb
push
or
fadds
mov
rcrl
or
add
and
mov
pushf
pop
stc
fwait
loop
inc
flds
loop
add
addr16
push
mov
add
cltd
and
test
mov
push
push
ret
sub
add
mov
insl
and
mov
push
popf
or
and
inc
bound
fcoml
inc
push
xor
cmpb
and
mov
xchg
push
xorl
call
les
shll
roll
sbbb
push
sbb
cltd
loop
fs
test
pop
orl
add
or
popa
movsb
add
test
sub
mov
movsb
sub
inc
mov
dec
add
add
mov
mov
and
inc
add
dec
mov
les
or
int3
test
push
and
sbbl
rolb
and
or
mov
fwait
mov
add
ret
inc
aas
js
xchg
mov
adc
push
xchg
gs
or
scas
nop
adc
or
rorb
xor
scas
sbb
xchg
hlt
andb
fisubl
cwtl
push
xchg
ret
and
push
mov
push
mov
add
xor
cltd
test
push
mov
push
sub
and
sbb
sub
loopne
mov
mov
mov
lds
mov
fiaddl
add
mov
dec
fisubs
xchg
inc
lea
js
arpl
mov
lahf
mov
repz
and
call
pop
jns
aas
flds
in
dec
dec
mov
cmpsb
adc
lret
in
sbb
fisubs
dec
cmp
repnz
mov
call
int3
jno
nop
inc
push
rcl
ret
mov
adc
pop
and
pop
test
and
xor
das
loop
xchg
popa
or
xor
adc
mov
arpl
cmpsl
in
rclb
xor
sbb
sbb
push
push
dec
aaa
pusha
sub
ret
orb
jb
je
add
adc
in
outsl
and
lds
fstps
jge
out
call
pop
lock
das
into
sub
fisubrs
lret
in
xchg
data16
popf
scas
cwtl
mov
add
xorl
nop
popa
cmp
outsl
xor
fsubl
ds
mov
dec
mov
or
es
cmpl
mov
inc
or
pop
dec
adc
add
jbe
lock
or
ret
roll
inc
jne
stos
lds
dec
pop
test
lds
add
lret
loope
sbb
mov
pop
mov
add
test
pop
sub
and
dec
mov
or
cmp
jnp
loop
es
jb
mov
pop
pop
add
sub
out
mov
bound
lahf
and
mov
jg
add
and
xchg
xor
or
xchg
cmc
inc
dec
and
les
frstor
sub
cli
push
pop
inc
add
loopne
mov
cmp
sbb
xchg
add
mov
cmp
lret
pop
mov
loopne
mov
fistps
push
sbbb
dec
pusha
mov
and
cmpsl
rorl
lahf
or
jo
nop
mov
pop
pop
dec
call
xlat
or
sub
hlt
xor
lock
lahf
adc
lcall
push
dec
pop
sbb
pushf
jne
cmp
mov
pop
imul
mov
cmp
fcomps
cmpsl
incl
or
pushf
orl
lret
dec
lret
pop
mov
sub
push
mov
sbb
xchg
iret
inc
sub
push
jg
pushf
inc
leave
and
mov
or
faddl
inc
sub
stos
mov
pop
add
adc
inc
test
inc
ret
jmp
mov
lret
or
call
lahf
daa
xor
push
rorl
sbb
pop
dec
popa
and
popf
test
insl
mov
inc
sub
stos
pop
jecxz
mov
cmp
or
out
add
cli
add
test
iret
adc
addr16
dec
test
push
mov
xchg
cs
add
or
push
cld
adc
iret
mov
rorl
ds
xor
in
xchg
cmp
xor
fs
pop
and
lret
iret
xchg
test
stos
es
cld
mov
cmpsl
fidivl
xchg
sbb
mov
mov
mov
dec
xor
leave
mov
test
add
jno
rcr
daa
mov
cs
test
jecxz
mov
inc
int
and
add
loopne
test
and
enter
add
fsub
push
or
mov
xchg
push
test
inc
fisubrs
fildl
arpl
add
cmpsl
jg
cltd
test
mov
mov
imul
jp
orps
in
mov
xchg
and
jne
sti
adc
sub
int3
test
push
and
pusha
push
sub
mov
loopne
lcall
mov
inc
imul
jmp
jl
test
dec
sbb
ja
mov
inc
cltd
in
jno
icebp
out
stos
nop
aad
fnsave
mov
add
cltd
test
mov
leave
push
mov
cmp
xchg
push
cwtl
mov
lea
pop
push
bound
dec
adc
mov
cmpxchg
mov
iret
ret
mov
mov
add
and
iret
jnp
cltd
mov
sub
pop
xchg
fwait
in
andb
decl
jmp
or
lret
bound
push
movl
dec
add
lods
subl
adc
or
outsb
pusha
in
fistl
mov
daa
push
pop
pop
add
push
mov
dec
add
pushf
adc
ljmp
hlt
out
stos
add
pop
add
or
sbb
mov
sub
pop
or
push
jp
aas
adc
mov
ficomps
adc
daa
ljmp
jecxz
jo
data16
rolb
daa
or
or
iret
outsb
adc
pop
mov
push
syscall
ds
cmp
jo
subb
rorb
movsl
xchg
sahf
in
push
mov
mov
xlat
dec
or
cmp
movsb
lea
scas
sbb
shlb
dec
mov
test
and
mov
lea
out
sbb
jne
adc
nop
lahf
sub
inc
adc
fs
adc
sub
pusha
out
sbb
mov
inc
or
add
int3
xchg
jmp
ret
das
and
loopne
add
dec
sub
mov
sbb
lods
nop
adc
fsubs
insb
inc
sub
das
jb
sub
stos
in
fs
push
jmp
and
or
inc
call
daa
push
add
inc
pop
sahf
cmp
mov
add
sbb
shll
cmc
addb
lds
mov
clc
mulb
insb
stos
inc
je
movsb
ret
xorb
pop
inc
dec
cmp
or
sete
xchg
aas
and
push
mov
xorl
and
and
pushf
jae
add
jno
pushf
dec
test
jle
hlt
daa
out
lahf
inc
lahf
cmp
fwait
roll
push
sub
push
jecxz
adc
pop
aad
or
inc
xor
popf
mov
dec
pop
dec
xor
hlt
imul
orl
loop
inc
lahf
cmp
sbb
dec
test
loop
dec
sub
pushf
push
mov
pop
pop
xchg
test
dec
or
fcmovnbe
out
aas
and
add
out
aas
data16
mov
pop
jg
and
movsl
cmp
mov
orb
jecxz
and
mov
sub
mov
je
dec
mov
mov
fisttpl
inc
add
mov
push
loope
mov
cmp
or
pop
pop
or
and
int3
xchg
xor
inc
sbb
repnz
add
loopne
xor
fcmovb
je
gs
insl
test
push
jno
cmp
outsl
daa
mov
faddl
lahf
adc
adc
and
adc
inc
mov
and
lret
and
jmp
mov
fldl
sbb
pop
call
jmp
inc
jecxz
inc
xor
into
push
call
ret
add
mov
orb
pop
and
sbb
pop
push
sahf
xor
add
sahf
stc
shll
or
and
adc
fists
inc
scas
sarl
outsb
and
inc
or
popf
ljmp
mov
cld
add
xor
loop
push
inc
or
ficompl
add
fmul
out
rclb
pop
dec
cmpb
aaa
cmpsb
loopne
or
sahf
pop
addr16
inc
in
cmp
test
jg
test
xchg
mov
inc
imul
insb
loop
jl
test
dec
sbb
lea
dec
add
sub
add
mov
mov
aaa
incb
loop
xchg
lds
push
cmp
mov
leave
imul
or
pop
test
inc
mov
andnps
shll
cmpsl
add
imul
or
xchg
push
cmp
cmp
add
imul
in
sahf
scas
push
adcl
fdivr
mov
ret
sti
push
inc
imul
js
mov
fimull
mov
pop
int3
mov
adc
or
sub
fs
sahf
jb
sub
or
shl
add
and
adc
call
outsl
adc
push
out
sub
push
or
add
dec
pop
inc
pop
inc
dec
mov
push
sub
and
cmpsl
or
sbb
adc
and
dec
and
ds
lcall
inc
pop
imul
daa
inc
cmp
aam
mov
mov
orb
cs
mov
dec
lods
adc
xor
inc
xor
inc
jp
arpl
jg
push
les
mov
pop
push
jge
mov
outsb
testb
add
cmp
sub
inc
pop
jno
imul
sbbl
adc
cmc
mov
test
aam
lret
cld
mov
push
pop
ljmp
xlat
push
jmp
cmpsb
into
push
xchg
jb
cltd
outsl
push
inc
pop
push
lahf
pop
rcrb
pop
sub
mov
dec
das
lret
repnz
pop
sub
or
lret
push
mov
cs
andb
and
mov
pop
pop
leave
idivb
add
nop
mov
sub
jl
sarl
jno
cmc
std
lods
paddsw
je
cmp
sbb
xchg
mov
or
fisttpll
loopne
push
jbe
or
dec
cmp
sti
xchg
or
andb
push
sub
shrl
or
mov
or
fwait
scas
push
adc
dec
test
iret
mov
mov
ja
sub
ds
cmp
push
add
cwtl
xbegin
add
mov
add
out
ret
add
jnp
rcl
sub
fidivrs
mov
movsb
test
sbb
pop
shl
adc
jle
push
or
inc
xlat
xor
dec
arpl
sbb
fisubrs
dec
or
test
sub
fcoms
jb
rclb
xchg
add
lea
iret
jne
jg
loop
clc
ret
notl
cltd
xchg
daa
xchg
test
xchg
addr16
test
mov
xchg
movsl
jno
aad
xorb
push
out
sub
xchg
adc
dec
je
push
xor
mov
es
lahf
adc
in
test
jae
inc
in
and
sub
jl
adc
push
imul
rorb
or
sub
adc
cmpsl
pop
out
adc
or
xchg
roll
fsts
lret
lret
adc
cmpsl
mov
je
push
lods
test
pop
gs
push
jnp
adc
jp,pn
mov
push
test
push
pop
inc
fs
lods
enter
adc
fs
mov
pop
mov
cs
and
mov
add
int
movsb
xchg
and
incl
popf
sub
xchg
dec
int3
out
mov
push
mov
dec
add
xor
test
insb
jno
enter
push
push
and
test
aaa
xchg
adc
and
dec
mov
push
push
cmp
das
icebp
push
test
xor
jp
pop
loop
sub
icebp
outsl
jmp
rcrb
cltd
sbb
push
and
jecxz
mov
or
xchg
inc
inc
sub
sbbl
xor
in
lods
test
sub
or
xchg
mov
xchg
loopne
insb
cmp
jno
imul
daa
lods
imulb
add
cltd
add
mov
sbb
or
mov
add
mov
inc
xchg
movsl
aaa
push
aas
dec
and
ja
push
pushl
cmp
andb
xchg
dec
jge
add
das
pusha
loope
mov
enter
or
lret
fucom
in
push
movsb
stc
rcl
push
and
or
dec
popa
inc
adc
dec
xor
stos
sub
or
push
insl
xchg
and
mov
addl
inc
mov
pop
lahf
scas
push
nop
or
mov
fadd
imul
jmp
pop
push
sbb
pop
mov
mov
popf
mov
mov
cmp
pop
sub
jl
cmpb
loop
jp
dec
cmp
add
and
inc
sbbl
insl
or
nop
sbb
test
insb
mov
in
int
in
mov
xchg
fs
adc
and
call
pushf
shll
loope
lods
jo
enter
inc
in
iret
and
cmp
inc
outsl
pop
ljmp
lods
out
mov
loopne
aaa
sti
lret
inc
les
inc
fildl
pop
add
rcl
test
add
or
mov
sub
jmp
movsb
negl
mov
cmp
and
sbb
in
loope
sbb
int
add
adc
pop
inc
cli
push
and
lea
sub
sbb
or
xchg
jne
adc
lds
pop
arpl
imul
mov
js
pop
je
inc
js
dec
jp
sbb
adc
cmc
push
sbb
mov
mov
sbb
pusha
push
imul
adc
push
data16
inc
stos
push
loopne
insb
cmp
arpl
cmp
sbbl
xor
insb
movsb
add
lcall
mov
cmp
jno
jbe
popa
mov
ror
insb
sub
xor
mov
push
test
pop
pop
cmp
push
gs
mov
or
ret
fistpll
sub
popa
outsb
bound
sbb
xchg
add
fists
xor
pop
gs
xor
fsubs
ret
pusha
add
mov
in
cmp
mov
adc
mov
mov
bsf
cwtl
std
mov
and
and
pusha
push
hlt
outsl
movsl
ret
rclb
inc
or
xchg
ja,pn
sbb
into
mov
repnz
xchg
xchg
cwtl
out
out
jl
mov
lret
sub
add
dec
addr16
outsl
imul
inc
loope
rcrl
cmp
adc
in
mov
sahf
inc
int3
xchg
mov
jmp
cmp
and
push
aas
inc
mov
stc
xchg
cmp
pop
mov
cmpb
ljmp
sub
add
movsl
inc
int3
aam
lahf
dec
adcb
adc
subl
dec
shrl
iret
sub
xor
jno
iret
and
mov
popf
sbb
adc
fiadds
jp
cmpsl
push
mov
mov
xchg
pusha
roll
outsb
and
stos
lcall
sbb
test
add
aaa
mov
pop
es
push
leave
in
enter
inc
sub
xchg
cmpsl
gs
popa
xchg
or
cld
pop
xchg
lret
cwtl
mov
sbb
test
aam
pop
mov
xchg
pop
es
mov
movsb
mov
pushl
add
or
adc
push
and
mov
pop
inc
inc
sbb
ret
stos
jmp
les
inc
jge
dec
jle
mov
xlat
xchg
xchg
push
rsm
sub
sarb
addl
xchg
loop,pn
enter
and
ficomps
pop
test
out
jb
adc
push
sbb
fs
das
pop
cmp
ljmp
add
insb
mov
and
or
fidivrs
cmp
aad
or
jp
aam
pop
xchg
out
movsb
sbb
xlat
or
sub
or
xchg
adcb
xchg
test
pop
lahf
nop
dec
and
lock
jge
insb
and
dec
dec
pop
fwait
in
push
in
fisubs
fimuls
rclb
sbb
int
gs
mov
lds
dec
sbb
xor
add
inc
sbb
pop
mov
popf
lcall
add
outsl
or
mov
icebp
cmpb
cmp
inc
sub
data16
pushf
pop
add
test
add
test
or
or
je
jmp
gs
popl
fs
popa
mov
adc
jp
test
cmp
push
lahf
lret
scas
mov
mov
dec
cmc
xor
inc
jmp
outsb
lock
mov
add
es
adc
js
mov
pop
sub
out
push
push
mov
jae
jge
inc
sbb
and
pop
dec
add
bound
movsb
jl,pt
popf
xor
lret
xor
and
xchg
pop
cmp
cmp
repz
inc
das
push
jns
nop
roll
or
stos
aas
mov
loope
or
pop
mov
jne
sbb
sbb
inc
pop
sub
rol
adc
xchg
add
adc
sbb
test
in
lock
fildl
orl
mov
stos
mov
out
rcrl
jge
pop
imul
or
cmpsl
cmp
jo
or
jo
push
mov
pop
inc
xor
cmp
addb
xor
xchg
lods
dec
mov
sbb
mov
out
roll
xor
sbb
inc
jmp
inc
and
out
aam
jo
test
mov
cli
mov
aad
xor
test
rorb
jne
lahf
test
shll
out
and
pop
ror
mov
cmpsb
imul
add
or
lahf
inc
jno
push
repnz
push
popf
pop
push
js
orb
inc
dec
imul
mov
add
divb
cmp
pop
add
js
nop
dec
or
xchg
movsl
roll
mov
andl
into
lods
sahf
enter
adc
fnsave
orb
imul
es
add
xchg
add
lods
pushf
and
repnz
shr
pop
aas
mov
and
mov
adc
pop
inc
loop
push
xchg
cmp
push
or
pop
xchg
adc
push
repnz
push
xchg
sub
pop
dec
pop
in
in
shl
test
or
arpl
movsb
jb
scas
mov
js
ss
frstor
and
movsb
in
mov
xchg
popa
fldcw
mov
push
int3
mov
xorps
dec
nop
stos
cmc
and
jle
xchg
dec
mov
cwtl
sub
les
xor
cmpsl
fsub
and
pop
mov
mov
insl
sahf
scas
ljmp
or
sub
xchg
leave
es
xchg
stc
mov
out
movsl
movzwl
or
shlb
and
out
aaa
mov
mov
sub
or
inc
test
sbb
es
push
add
fsubrs
push
jge
andl
xchg
in
jbe
push
orb
push
and
jae
xchg
mov
jl
inc
xchg
int
xchg
push
out
flds
mov
and
and
sahf
stos
xchg
mov
add
andb
sti
mov
push
mov
movsb
shrb
mov
adc
addr16
outsl
stos
push
cld
fisttpl
xor
loop
jecxz
decl
cltd
inc
add
dec
pop
add
dec
xchg
lock
lods
adc
push
mov
in
std
lahf
jecxz
testl
push
je
test
das
adc
mov
shrb
daa
lock
into
fcoml
inc
sub
mov
dec
and
in
sbb
cmp
out
rcrb
mov
in
cmp
mov
xor
aad
inc
out
dec
int3
out
pop
dec
mov
sahf
jns
xchg
js
cli
push
adc
js
enter
mov
std
leave
xchg
sbb
add
imul
add
gs
popa
push
lds
jge
sub
add
subl
jae,pt
int
outsb
sub
mov
mov
pop
and
xchg
pop
inc
lods
movsl
cwtl
jbe
mov
cli
add
xlat
sbb
jo
aas
add
adc
add
test
inc
adc
push
mov
add
ss
mov
test
xchg
add
in
dec
insb
mov
and
lcall
mov
adc
rcr
push
inc
inc
pop
sub
dec
sub
jbe
mov
pop
test
les
add
ret
lahf
cmp
sub
punpckhdq
push
stos
ret
dec
ljmp
andb
xchg
add
popa
or
add
jge
mov
out
inc
dec
xor
stc
pop
rcrb
imul
pop
push
sbb
mov
xchg
lret
test
call
add
stos
xor
mov
aas
popa
pusha
movsl
push
out
call
ret
data16
aad
stos
frstor
je
xchg
bound
add
pushf
inc
xchg
ljmp
daa
in
and
and
pop
and
loope
out
xchg
mov
into
jmp
adc
daa
dec
sbb
in
das
dec
add
andl
or
mov
or
add
or
xchg
add
cmp
sahf
cmc
popf
scas
and
insb
ret
xchg
nop
int
test
or
mov
mov
xor
mov
ss
scas
jno
stos
adc
add
icebp
rcl
and
adc
movsl
xchg
pop
iret
add
inc
mul
xor
in
dec
cwtl
clc
sbb
inc
sbbl
and
add
lahf
push
jge
sub
inc
test
lea
cmp
andl
mov
data16
pop
push
fdiv
xchg
enter
push
test
and
sbb
and
inc
shlb
andb
rolb
inc
sub
out
xchg
in
xchg
movsb
or
cmpl
sub
xchg
lcall
mov
pop
push
std
cld
out
inc
xor
pop
push
aas
jmp
sbb
pop
sub
mov
es
jbe
fstl
je
pusha
scas
push
das
add
or
subb
sub
in
mov
add
js
out
sbb
mov
cmp
adc
push
call
pop
shll
sbb
adc
sub
loop
jg
les
cmpsl
clc
daa
adc
call
jbe
fstpl
in
cmpsl
popl
cmpl
push
les
test
lahf
bound
xlat
ret
mov
das
pop
sahf
loope
push
push
mov
or
adc
test
xchg
pushf
xchg
sub
test
jae
rcrl
mov
add
jae
jno
loopne
sub
cwtl
mov
add
hlt
inc
dec
aad
mov
out
dec
inc
xchg
add
and
ljmp
andl
lret
jb
mov
aad
cmpb
stos
ljmp
lds
pop
xchg
les
xor
mov
popa
mov
dec
inc
data16
xchg
and
mov
sub
addl
movsl
in
push
sbb
mov
ret
stos
add
imul
in
adc
and
xor
gs
iret
pop
loope
lock
add
mov
enter
mov
sub
fucomp
dec
out
ja
mov
pop
insl
push
stos
dec
movsb
dec
add
adc
jmp
daa
aad
push
inc
inc
hlt
push
mov
push
stos
aaa
cmp
pop
jbe
test
loop
pop
and
or
shlb
ret
mov
int
aas
dec
xor
ljmp
inc
add
mov
testl
les
mov
adc
pop
imul
push
mov
js
ret
sub
lea
and
fistpll
icebp
mov
int3
pop
adc
jo
popf
and
std
sub
adc
add
and
or
and
inc
mov
sbb
mov
sbb
or
js
test
push
add
lea
ret
lea
lret
ret
in
orb
orb
xchg
sbb
dec
popf
dec
mov
rolb
xchg
rcr
andb
adcb
stos
xorb
and
addr16
arpl
loop
xor
sub
mov
and
and
stc
dec
jecxz
jl
push
in
and
mov
in
jge
add
popl
test
jb
add
mov
jecxz
and
bound
dec
test
cltd
add
and
dec
sub
mov
cltd
inc
mov
mov
sub
sbb
sahf
fldt
inc
mov
decb
popl
jo
add
stos
mov
fwait
aas
or
xor
xlat
add
jge
inc
mov
xor
aas
lea
test
sub
cwtl
add
and
sub
and
dec
fs
dec
push
mov
mov
movsb
ja
int
xchg
jecxz
and
push
push
xchg
mov
call
dec
mov
pop
push
add
xchg
jge
int
pop
adc
es
adc
adc
pop
xchg
in
cmp
dec
sarl
pop
mov
insb
addl
xchg
ret
push
adcb
icebp
jo
pop
push
insb
jge
andl
stos
or
nop
cwtl
adc
sub
pop
ds
jl
adc
add
cltd
aaa
sbbl
repz
and
or
mov
filds
add
dec
xchg
push
mov
dec
add
aam
fs
adc
add
mov
push
xchg
rcll
xor
enter
jecxz
sub
xor
mov
lea
cltd
movsb
arpl
push
mov
sbb
push
push
fwait
pushf
sub
jecxz
sub
pushf
cmc
adc
and
in
insl
popf
mov
and
test
push
lret
cmc
pop
mov
out
sbbl
cmp
pop
ret
lods
and
xchg
or
push
loop
outsl
inc
xchg
sub
add
pop
shr
or
arpl
sbb
bound
popf
inc
xchg
andl
xor
andb
cmp
cmp
and
loop
arpl
push
pusha
fdivrl
pop
mov
mov
scas
int3
flds
popa
adc
add
ljmp
sub
cmpsl
mov
sub
xlat
incb
dec
push
addl
xchg
mov
testw
adc
sub
subb
fstl
sub
inc
filds
add
cmp
mov
es
jg
jo
out
jmp
mov
xchg
out
push
pop
in
ljmp
cmp
sbb
pop
and
inc
and
sbb
aaa
adcb
nop
adc
fs
mov
setbe
pop
and
rcrl
shrd
jecxz
inc
sbb
pop
fisttpll
cld
lock
mov
and
xor
pop
xchg
loop
movsl
sub
push
or
mov
dec
cmpsb
shll
loopne
push
icebp
sbb
out
inc
stc
loope
inc
addr16
incb
pop
mov
and
inc
add
cmc
call
out
xchg
xchg
jmp
and
leave
loopne
add
sbb
xchg
jbe
dec
ljmp
dec
outsl
add
cmpsl
sub
pop
faddp
push
push
mov
aas
sub
pop
sbb
inc
fbld
mov
rolb
and
les
mov
pop
insl
pop
push
or
xlat
and
stos
jb
imul
and
scas
xor
and
fwait
inc
cltd
adc
aaa
cmp
inc
movsl
add
clc
jg
rcrl
gs
lods
popf
sbb
pop
hlt
jmp
xchg
out
dec
rorb
add
or
mov
and
pusha
lahf
jae
pop
pusha
mov
dec
pusha
popf
fildll
sbb
mov
add
jno
cs
stos
add
leave
xor
cs
aaa
icebp
or
mov
jle
test
jnp
push
xchg
lahf
shlb
lea
rcrb
jmp
sbb
push
dec
or
sbb
xchg
xchg
aad
movsb
and
dec
dec
add
fsub
sub
sbb
mov
dec
test
mov
xlat
addr16
or
dec
call
push
lret
mov
jecxz
cmp
insl
pop
mov
loope
push
movsb
mov
inc
push
inc
lret
sub
mov
add
mov
add
imul
add
mov
aad
xchg
jge
mov
adc
add
rcl
mov
test
or
icebp
mov
lcall
inc
cmc
jno
lods
mov
mov
frstor
mov
mov
popa
or
push
and
push
in
fwait
clc
sbb
imul
xor
std
xchg
jns
incl
sbb
imul
push
loop
cmpsb
add
lods
sbb
cmp
into
sub
dec
add
jge
mov
ret
sub
sub
imul
add
push
cwtl
and
mov
pop
sbb
mull
gs
push
aam
xchg
sub
les
jbe
sub
clc
das
pop
xlat
xor
fcmovnu
inc
mov
fdiv
popa
fisttpl
lds
jmp
add
mov
lahf
leave
jg
cli
adc
mov
dec
inc
sub
lahf
loopne
adc
push
sub
lcall
cmpsb
ds
iret
add
xor
mov
sub
or
ss
daa
lret
fwait
leave
ret
sub
daa
or
imul
pop
push
push
xor
ficompl
adc
out
mov
bound
or
lahf
xchg
fistps
mov
sbb
jmp
lahf
add
push
inc
lds
mov
shl
popa
div
mov
dec
in
or
pop
sub
stos
outsb
and
lahf
pop
jle
pop
pusha
mov
adc
push
mov
dec
sbb
mov
add
pushf
or
fisubrs
xacquire
cmp
xchg
out
ret
jp
xor
ret
ret
mov
and
jno
int3
fmul
lret
or
mov
jo
mov
and
mov
outsb
icebp
mov
inc
mov
icebp
test
cli
repz
cmp
pop
or
fimuls
xchg
test
xchg
dec
mov
int3
lret
inc
or
and
add
cwtl
or
dec
mov
push
or
dec
fmull
and
pushf
out
jmp
dec
mov
pushf
mov
or
adc
movsb
inc
xchg
push
sar
sbb
inc
or
in
cltd
popf
and
loope
adc
adc
fadd
cld
or
leave
push
dec
leave
inc
les
out
ret
in
push
scas
add
rol
test
call
pop
add
in
scas
inc
cmp
mov
or
push
pop
and
das
dec
xor
jo
gs
jp
push
rcr
sbb
nop
loop
mov
mov
jge
divl
mov
or
pop
aas
xor
pop
imull
flds
inc
inc
push
cmp
mov
jns
test
pand
out
pop
imul
out
add
xchg
iret
push
mov
dec
or
cmp
xor
jnp
xor
testl
test
lahf
nop
pop
les
lcall
jge
mov
dec
pushf
icebp
sub
xchg
push
sti
stc
es
sbb
mov
cmpl
sbb
sub
add
flds
arpl
cmp
fcmovu
and
mov
add
sub
pop
xchg
and
ficomps
aas
inc
ljmp
xchg
add
daa
loop
cwtl
xor
sub
cmpsl
pop
movl
xchg
incb
adc
xchg
adc
add
mov
add
incl
push
cmp
mov
mov
repnz
hlt
popf
fcoms
jnp
jl
xor
fs
rclb
addr16
mov
pop
rcrl
sub
cwtl
bound
in
mov
xor
pop
out
adc
testb
enter
or
dec
add
bound
adc
ret
push
mov
dec
adc
ljmp
mov
call
jge
cmc
cld
mov
dec
mov
or
popa
adc
test
xchg
sbb
cmp
inc
in
pop
mov
adc
test
push
cmpsb
leave
inc
xor
sub
xor
ret
xchg
mov
add
stos
add
xor
leave
push
or
es
add
in
xchg
orb
mov
andb
sbb
jmp
call
dec
add
add
dec
xor
pop
push
js
fistps
sbb
xchg
fsub
lar
mov
sbb
xchg
jl
ret
mov
and
ret
sbb
and
lods
insb
psubsw
outsb
sub
das
inc
adc
int3
mov
jg
out
cmpsb
mov
xor
jne
ss
push
std
adc
imul
add
jl
rcl
inc
sbbl
mov
push
mov
dec
lahf
add
mov
xchg
xlat
pop
arpl
lods
push
jo
push
mov
mov
or
xchg
mov
dec
popa
and
out
lea
inc
jno
sub
mov
sub
adc
addb
add
lret
pop
mov
adc
loopne
loope
pushf
lods
dec
push
pushf
test
je
in
mov
punpckldq
inc
push
or
push
popa
and
jecxz
and
pop
adcl
ret
in
cmpsl
dec
subb
cltd
mov
jns
mov
push
aad
or
sub
dec
mov
jmp
add
sub
mov
adc
add
test
or
imul
jbe
and
cmpsl
sbb
xorb
jb
movsl
add
push
repz
xchg
dec
das
mov
push
sub
movsb
mov
dec
jmp
xor
outsb
xchg
sub
jne
cmpsb
add
adc
stc
xchg
out
inc
fistps
sbb
lret
pushf
push
sbb
jg
mov
test
add
test
xor
mov
out
stc
dec
add
in
mov
inc
test
sub
mov
in
jno
stos
jmp
xor
or
mov
dec
scas
out
mov
iret
jge
iret
push
test
loop
cmc
push
stos
rcll
inc
outsb
inc
xchg
test
or
xchg
mov
mov
xchg
stos
push
push
bound
shl
and
rcll
outsl
add
bound
scas
dec
push
jmp
loop
aaa
push
bound
cmp
sti
pushf
addl
adc
and
mov
xlat
shlb
inc
in
mov
ja
mov
push
leave
push
pop
rcrb
xchg
and
xchg
test
popa
add
test
mov
mov
and
xchg
data16
das
dec
fdivl
and
insl
or
out
imul
adc
dec
shrl
xchg
scas
fistps
jmp
cmp
xchg
or
dec
sub
add
lods
mov
inc
stc
mov
loop
fsub
imul
test
gs
cli
sub
ss
jl
push
or
stos
dec
dec
dec
add
mov
rcll
fs
out
mov
mov
mov
xor
and
sub
clc
subb
mov
dec
dec
dec
cmp
stc
adc
dec
and
clc
leave
test
pop
inc
fisubl
std
in
dec
pop
xor
data16
sub
push
push
fsubrs
cmp
sub
dec
lods
stos
sub
std
inc
in
aam
sbb
jmp
repnz
xchg
adc
xor
arpl
or
mov
pushf
pop
out
sti
xchg
mov
fidivrl
out
je
xchg
rep
adc
sub
orl
fisttps
dec
push
imul
popl
add
xor
int3
das
mov
sbb
subl
lds
ret
or
xor
rolb
popa
jmp
pop
inc
pop
in
jecxz
pop
sarl
mov
push
shll
dec
xor
test
arpl
mov
sbb
aas
enter
inc
call
scas
fs
add
jae
xchg
pop
jae
add
dec
xlat
pop
repnz
sbb
insl
add
dec
and
xor
pop
or
shl
add
ja
xor
addb
add
test
and
mov
into
sahf
and
pop
pop
and
addl
out
outsb
mov
inc
fiadds
ljmp
inc
xchg
bound
fwait
out
loop
sti
outsl
cmpsb
add
popa
mov
jle
inc
cmp
orb
push
xor
test
aas
data16
jp
jg
clc
cmp
mov
in
xchg
fnstsw
cltd
adc
xor
icebp
add
add
lcall
insb
pusha
sbb
fs
add
fmulp
push
cmp
inc
fucom
jle
add
fsubs
add
inc
aaa
sub
sub
addb
xor
decl
leave
cli
mov
pop
out
int3
aaa
push
adc
bound
pop
ja
movsl
and
sahf
or
adc
movsl
loop
mov
test
loope
lcall
xor
mov
test
dec
jecxz
sub
out
pop
popf
scas
aaa
push
fs
sub
sbb
nop
or
add
dec
imul
lods
inc
jno
xchg
push
pusha
jo
pusha
jnp
inc
cmp
rcrl
pop
aam
fistl
mov
cwtl
dec
aaa
mov
xchg
test
insb
xchg
push
push
aas
orb
inc
outsb
push
lahf
fwait
mov
jl
sbb
pusha
and
mov
pop
xchg
jmp
adc
push
and
or
insl
jle
xor
out
imul
push
or
lret
mov
pop
pop
cmpsl
sarb
fisttps
adc
loope
cmp
data16
pushf
and
pushf
and
mov
movsb
adc
push
push
lcall
fcoml
adc
movsb
adc
xor
out
adc
or
out
inc
mov
sub
pop
inc
adc
stc
cwtl
mov
mov
shlb
insb
nop
push
adc
push
mov
xchg
les
movsl
call
enter
mov
cmpb
mov
shll
shl
add
add
xor
add
lahf
sahf
cs
incl
sub
add
js
adc
popl
or
ljmp
leave
rorl
dec
jg
mov
push
cmpsb
xor
mov
or
mov
pushf
aas
leave
inc
dec
add
sahf
lret
mov
pop
bound
pop
and
adc
add
push
fs
sbb
jo
push
fisttpll
imul
or
les
rol
std
xchg
xor
iret
loopne
movsl
sub
push
and
jge
mov
push
xor
lea
mov
xchg
das
subl
repnz
xor
or
mov
pop
movsb
or
test
add
mov
push
cmp
mov
pop
add
push
or
fnsave
adc
push
xchg
inc
into
adc
or
pop
fadds
cmpsl
rolb
and
inc
add
jl
les
and
cmp
and
andl
jnp
cwtl
cmpsb
push
clc
ficoms
add
xchg
sbb
push
sub
cld
dec
pop
xchg
flds
add
subl
inc
jns
cmp
lds
aad
dec
sbb
cltd
push
subb
xchg
mov
xchg
xchg
bound
adc
mov
loope
mov
mov
sti
mov
pushf
dec
add
push
sub
jp
jge
push
and
nop
xlat
add
and
mov
mov
sub
rclb
and
jmp
or
lcall
sub
popa
movsl
mov
mov
fstps
ds
lcall
adc
sbb
data16
data16
fs
sti
sub
sub
inc
inc
leave
mov
test
sbb
xor
add
test
or
stos
loopne
xlat
dec
xor
cmp
add
out
sub
leave
fdivrp
out
push
out
mov
or
mov
add
and
mov
jmp
and
roll
xor
inc
jb
sbb
dec
sbb
xorl
jnp
push
sbb
add
jge
int
icebp
pushf
loop
add
ljmp
mov
fildll
add
popa
fnsave
mov
pop
movb
cmp
loope
or
xchg
mov
orb
andl
sahf
jbe
leave
mov
loope
sbb
mov
scas
jno
mov
add
add
push
out
in
xor
outsb
jns
inc
jp
adcl
inc
xchg
pop
lods
inc
jo
or
jg
push
xor
in
or
add
jno
loope
test
mov
sbb
out
inc
sub
and
outsb
out
pop
aaa
jle
mov
shrb
pop
sbb
add
cwtl
aam
nop
cs
and
mov
imul
insl
push
into
jp
add
outsl
mov
jb
rcr
push
sbbl
je
push
sbb
orb
std
push
cmp
lret
cmp
lea
cmp
inc
mov
jmp
sbb
add
lods
stc
enter
mov
lock
adc
cmp
mov
mov
pop
rolb
and
and
jo
ret
mov
cs
pop
adc
mov
aam
mov
andb
and
add
sbb
or
mov
movsb
aam
popf
js
push
jg
pushf
dec
pop
cmp
dec
les
lds
add
bound
jnp
cmpsb
push
jo
mov
pop
es
andl
cli
into
ret
shrb
incb
lahf
test
push
inc
sub
shrl
int3
dec
push
imul
das
ffreep
daa
dec
cltd
and
pop
test
inc
xor
push
mov
pop
pop
xchg
mov
dec
lret
cmp
das
mov
pop
mov
stos
or
scas
pop
mov
sbb
push
subl
jbe
imul
dec
mov
or
dec
mov
pop
dec
sub
sub
out
cmp
pop
fisttpll
fistpll
mov
cmp
jmp
shlb
add
push
les
cmp
xchg
in
test
idivb
push
mov
xchg
hlt
lods
mov
lds
sub
cwtl
sbb
sbb
mov
std
int
pop
or
bound
adc
add
test
std
adc
mov
fists
xchg
xor
les
ficoml
mov
xchg
jg
mov
fwait
rcr
sbb
sub
and
jg
or
xor
mov
cmpsb
insl
inc
test
cltd
rcrl
xchg
add
xchg
pop
shl
stos
sbb
pop
cwtl
and
int3
jae
insl
adc
sub
jns
loope
and
xchg
add
add
and
xor
mov
and
add
iret
sub
sub
or
sarl
push
mov
push
fadd
fwait
lcall
mov
mov
dec
sbb
add
and
mov
cmpsb
stos
aad
testb
cltd
lret
or
xchg
mov
int
scas
outsb
test
sbb
and
lahf
cmp
sub
push
push
and
adc
adc
pushl
adc
fistps
mov
sub
shrl
ss
and
data16
or
push
cmp
ret
std
add
pop
pop
test
mov
stos
mov
push
rorl
add
sahf
pop
icebp
roll
xor
mov
sti
fcoml
add
jns
mov
loop
adc
xchg
popa
xchg
inc
add
sub
push
add
xor
or
shrl
cltd
jns
mov
or
push
cld
rorl
push
pop
bsr
mov
inc
sub
inc
bound
loopne
dec
outsl
call
jg
mov
cmp
cmpsb
mov
jecxz
add
cvtdq2ps
movsb
mov
out
call
xchg
pop
rcll
mov
pop
and
std
mov
test
xchg
add
test
lret
imul
testb
jle
test
je
leave
test
adc
or
ret
xchg
test
pusha
out
mov
mov
adc
push
adc
sub
sahf
lods
icebp
dec
adc
mov
popf
jo
adc
pop
enter
sbb
pop
xlat
and
icebp
or
pushf
xchg
push
dec
add
arpl
je
ljmp
scas
jo
xchg
push
popa
sbb
shl
rol
sahf
cs
push
add
push
cmp
lcall
lcall
inc
test
pop
enter
dec
and
ficoml
inc
rcrb
mov
xor
dec
mov
aas
inc
and
adcb
sarl
pop
rorl
shrb
lea
imul
inc
adc
mov
je
test
bound
add
add
xchg
mov
in
or
inc
or
fadds
data16
add
adc
and
cltd
add
xor
xchg
dec
mov
dec
push
or
sub
adc
adc
and
push
xchg
or
or
data16
inc
add
adc
cmpsb
adc
sub
loope
nop
addl
and
inc
addb
or
add
add
add
push
fdivl
add
sub
insl
sub
stos
inc
push
jle
and
inc
jle
imul
int3
std
dec
inc
or
pop
jmp
leave
sbb
mov
and
and
inc
and
pop
xor
sub
adc
fisubrs
inc
push
dec
inc
je
pop
add
push
rorb
dec
stos
ds
and
cmpsl
cmp
adc
and
movsb
xor
sub
jbe
jg
push
icebp
add
cs
mov
push
sbb
jne
add
mov
ret
push
mov
add
and
hlt
test
in
xchg
pop
xchg
push
sub
add
daa
sub
shrb
jns
sbb
dec
nop
loopne
es
and
dec
and
add
sub
divl
into
mov
dec
jg
pusha
mov
test
sub
xchg
add
jle
cli
ja
and
and
rorb
sbb
shll
adc
popa
xchg
shrl
imul
adc
in
clc
andl
and
cmpsw
adc
rcrl
popa
ds
inc
outsb
pop
pop
cltd
xchg
rolb
adc
scas
loope
pusha
cmp
adc
jle
or
cmp
subl
cmp
fmuls
loope
pop
mov
aas
inc
test
ja
and
aad
pusha
add
and
lock
jp
mov
les
pusha
sub
mov
cld
lahf
pop
cmp
sbb
int3
fld
and
popa
add
sub
push
jbe
sbb
and
pop
xor
cli
adc
cli
orl
cmpsl
aaa
adc
sbb
pushl
push
aas
dec
adc
cmp
and
add
add
test
sub
cli
imul
nop
mov
mov
inc
inc
sbb
xchg
add
adc
les
sarb
cmp
inc
test
push
xchg
nop
or
adc
popa
mov
ffreep
stc
aas
inc
and
int3
push
xchg
sbb
add
ja
inc
cwtl
sahf
push
mov
je
popa
test
call
stos
rcll
sbbb
les
inc
push
xchg
dec
sbb
lock
xchg
inc
je
test
inc
mov
mov
xor
adc
lcall
loope
push
and
fsubs
sbb
inc
cmpsl
push
mov
mov
movsl
xchg
addl
gs
cvttps2pi
pop
mov
sbb
mov
add
mov
loopne
frstor
pop
pop
lcall
into
lret
cwtl
js
cmp
fbld
mov
cwtl
inc
xlat
adc
stos
mov
orb
cmc
push
sub
pusha
add
inc
cmp
xchg
mov
push
orl
and
mov
push
mov
leave
sub
popa
shlb
xor
cld
outsl
emms
lds
or
negb
or
xchg
movd
cli
loopne
mov
bound
jge
sbb
mov
sbb
test
rol
andl
or
sub
cmp
push
xor
jge
pushf
nop
test
out
inc
call
sahf
dec
ret
mov
ret
les
push
imul
rolb
pop
add
or
mov
popf
lret
mov
shrl
jg
js
ljmp
lret
push
and
adc
loop
xchg
xor
or
fisttpll
movsb
pop
scas
test
or
add
push
jecxz
jno
jl
out
test
lret
or
imul
xchg
push
sahf
mov
jge
dec
jg
fldenv
aad
test
cltd
pop
and
push
inc
into
ret
sti
enter
mov
mov
aad
dec
lret
fadd
inc
mov
add
and
inc
mov
mov
xchg
xchg
stos
nop
lcall
push
test
xor
xchg
adc
fwait
daa
rorb
push
pop
mov
xchg
in
test
jmp
das
flds
pop
sub
adc
adc
loop
push
or
cli
nop
cwtl
add
movhlps
popa
adc
daa
jge
inc
dec
andb
sbb
mov
or
sub
dec
jle
les
mov
jb
jne
lea
pop
inc
jno
adc
call
std
pop
pushf
sub
repnz
jne
scas
push
cmp
loope
outsb
ret
sti
pusha
or
addr16
sub
clc
clc
jmp
stc
cmp
add
and
mov
stc
ss
test
popa
pusha
inc
and
leave
add
ficompl
cmp
lds
xchg
data16
dec
mov
mov
jmp
loope
xor
lds
orl
popa
shll
mov
mov
inc
and
icebp
inc
adc
scas
jmp
or
jg
sbb
or
loopne
nop
andb
and
mov
loop
mov
xchg
cwtl
lds
sub
stos
sbb
mov
inc
shl
xor
or
lret
pop
fidivl
jno
imul
cmpsl
cmpsb
scas
and
mov
ret
mov
and
cmpsl
imul
les
push
and
cwtl
popa
addb
pop
sahf
sub
fldenv
sub
dec
loope
mov
mov
push
sub
fwait
mov
xchg
cmpl
jg
xchg
adc
mov
pop
or
adc
jne
jb
mov
clc
enter
jg
mov
or
pusha
lret
gs
sub
mov
ljmp
dec
sbb
jmp
pusha
sub
and
sbb
sbb
jle
mov
mov
cmpsl
add
jb
into
popa
and
outsb
arpl
and
test
jae
or
aaa
mov
fmull
sub
adc
and
xchg
jnp
adcb
sbb
sub
repz
ret
xor
stos
sbb
pushf
addb
repnz
rcr
push
imul
adc
add
dec
cmpsl
outsb
das
dec
lret
addr16
and
add
sub
mov
mov
movsb
jne
cmp
addb
adc
shrb
imull
xchg
int3
aam
orb
repnz
adc
sub
mov
or
mov
xor
dec
test
rol
mov
mov
enter
jns
and
push
or
inc
pop
gs
sub
jg
mov
cmpsl
mov
popf
xchg
mov
dec
nop
imul
les
push
imul
fstl
addl
mov
inc
xor
nop
or
arpl
hlt
lret
ljmp
add
xor
loop
insb
fcoms
or
mov
pop
cmp
pushf
repz
call
cmp
push
popa
push
repnz
mov
jo
lret
add
sub
cmp
insl
xchg
fadds
out
arpl
ret
cmp
pxor
cld
mov
test
cmp
xor
lahf
sbbb
jecxz
jg
sub
and
mov
js
mov
or
dec
inc
pushf
xlat
inc
aaa
mov
inc
gs
mov
aaa
mov
xchg
scas
icebp
sbb
xor
in
or
imul
dec
mov
nop
orb
add
xchg
and
pop
mov
sub
dec
and
fiaddl
jmp
sub
scas
arpl
int3
in
into
pop
ss
inc
pusha
leave
test
stos
sbbl
ret
mov
adc
xor
push
jae
mov
mov
add
xchg
arpl
addb
pop
or
xor
and
sti
xchg
mov
sub
loop
bound
in
out
jmp
les
xchg
dec
and
dec
loopne
lods
test
inc
push
inc
cli
pop
fstp
and
push
mov
loop
mov
call
inc
xchg
cmpsl
jnp
push
scas
xchg
incb
xor
xchg
sub
push
mov
loope
test
or
xor
stos
pop
add
add
ffreep
sbb
add
movsb
adc
inc
cwtl
out
mov
mov
addl
jno
push
hlt
adc
shll
scas
fs
push
add
scas
pusha
fst
cwtl
lea
test
out
dec
mov
or
xlat
shrb
js
addl
shrl
dec
hlt
add
imul
add
inc
cs
mov
and
lret
cmpsw
sbb
jle
lret
add
stc
aas
out
repnz
mov
dec
lods
jp
popa
imul
push
push
shrl
int3
push
sbbb
mov
sti
cmp
xchg
roll
inc
or
sub
fisubl
nop
and
mov
enter
cld
push
loope
inc
push
out
mov
sbb
loope
jg
sub
mov
in
fbstp
cmp
sub
fwait
mov
cli
leave
cld
xor
fs
mov
pop
addr16
mov
data16
add
pop
clc
cmp
push
jmp
enter
fstl
jmp
lock
lahf
mov
subl
or
out
add
pop
xor
loopne
outsb
xchg
lahf
dec
es
adc
adc
dec
lret
add
in
inc
std
fsubrs
sub
cmp
bound
sbb
mov
cmp
je
pop
push
popa
gs
mov
xchg
mov
xchg
sarl
dec
add
js
pusha
jmp
cmp
popa
roll
mov
sti
sbb
pop
sarb
bound
mov
jmp
in
inc
orb
xor
pop
and
xchg
add
popl
add
out
or
fidivrl
test
cmc
mov
add
rol
insb
adc
psrad
mov
cmpsl
inc
movsb
cs
fldcw
and
test
push
mov
add
dec
mov
mov
lret
and
or
mov
in
je
jb
int3
xor
and
jnp
out
add
dec
lds
imul
push
andl
lahf
cmp
push
sbb
mov
fmulp
mov
stos
gs
push
sbb
out
and
gs
neg
jb
cmp
or
mov
mul
dec
lea
js
pusha
sub
add
lcall
repnz
xchg
hlt
adc
imul
dec
adc
dec
mov
insl
xchg
and
sbb
mov
flds
popa
sbb
inc
mov
dec
arpl
and
and
jb
jnp
pop
divb
mov
sub
out
jae
sub
or
loop
mov
xchg
imulb
pop
jmp
and
hlt
stos
test
push
pop
test
jg
and
mov
add
and
add
imul
mov
cmpsl
xchg
jno
jnp
cmp
mov
cmpsl
pop
inc
cld
mov
sbb
or
adc
mov
fsubrl
jecxz
cmpsb
jmp
pop
xchg
insb
or
fcoml
hlt
add
call
mov
lds
enter
add
nop
lock
dec
add
jge
ror
lret
addb
test
subl
ret
or
loopne
jge
add
adc
sbb
xor
test
mov
push
adc
mov
lret
int3
nop
push
lea
mov
xchg
and
negl
loop
rorb
sbb
lret
xchg
pop
jo
jecxz
and
mov
fsubl
scas
push
sbb
loope
sub
jle
loope
test
adc
xchg
bound
cmc
jo
sbb
jae
test
div
mov
or
sahf
inc
xchg
jae
clc
rcl
add
test
icebp
jecxz
adc
popf
adc
xchg
inc
fdivp
mov
add
loopne
lcall
xchg
jnp
pshufw
outsl
and
std
iret
add
dec
adc
setp
cwtl
test
and
out
out
mov
imul
xor
fwait
mov
sbbb
sbbl
jg
sub
or
add
mov
push
mov
and
pop
cmc
cltd
add
sbb
in
sub
daa
inc
mov
xchg
inc
les
outsb
mov
pop
lcall
dec
ret
idivl
test
in
mov
ja
sub
xor
mov
adc
mov
push
enter
popa
and
jns
in
sub
daa
popf
xchg
inc
add
sub
adc
pop
push
xor
adc
and
shlb
add
mov
jecxz
mov
mov
push
das
push
or
or
mov
cs
xchg
mov
sub
and
mov
aas
imul
add
mov
sbb
imul
arpl
add
dec
or
movsb
cmp
mov
adc
cmpsb
mov
sbb
pop
mull
int
cltd
lret
xchg
xchg
push
divl
lds
sub
and
loope
je
cmp
pop
test
sbb
rorb
bound
fcompl
test
sbb
mov
mov
addr16
pop
jle
ret
andb
outsl
lds
dec
add
xor
cmc
add
lahf
ss
ljmp
orl
mov
dec
and
sbb
sti
cs
sbb
jle
jge
dec
or
pop
pop
aas
std
add
jl
jae
xchg
add
outsb
cmpsb
add
jmp
icebp
loop
icebp
sbb
xchg
and
idivl
lds
incl
sub
and
mov
loop
shlb
adc
jno
sbb
negl
mov
fs
cmp
xorl
push
fucompp
sub
loop
call
push
nop
xchg
insl
xchg
into
cmp
jne
mov
cmpsb
xor
mov
sarb
cli
inc
test
addr16
sbb
push
xor
pop
in
or
xchg
mov
repnz
pop
mov
cs
lock
cmp
xor
xchg
or
adc
xchg
and
popf
cmc
lret
popf
jecxz
sub
fimuls
icebp
push
out
or
adc
subl
dec
inc
fstl
outsb
mov
or
sbb
pusha
arpl
add
and
pop
lret
dec
xor
mov
mov
jge
enter
insl
dec
popa
mov
imul
insb
test
addb
sbb
mov
cmpsl
adcb
cmp
xor
addl
outsb
orl
out
subb
repz
lcall
or
add
add
xor
xchg
mov
hlt
cwtl
int3
js
pop
mov
in
xchg
mov
loope
dec
int3
repnz
inc
ret
adc
dec
or
pop
rol
mov
jl
mov
fcomps
push
add
inc
jg
outsb
add
das
pop
insb
cmpsb
mov
push
adc
arpl
fisubs
pop
add
push
dec
push
add
sbbl
cmp
sbb
sbb
jle
js
test
pop
sbb
mov
fs
add
addl
inc
xchg
add
dec
xchg
int3
push
or
out
popf
xchg
mov
jnp
aad
sbbb
dec
mov
mov
sub
popa
sub
test
loopne
les
out
pop
sub
insb
sbb
mov
mov
inc
cmpsb
mov
add
push
in
addr16
add
mov
sbb
sbb
xchg
orb
xchg
and
xchg
and
fdivl
shrb
dec
es
adcl
mov
pop
jmp
test
add
jno
ret
cmc
push
mov
fs
adc
in
lcall
mov
imul
mov
movsl
ds
js
mov
adc
inc
xchg
cmp
test
inc
into
testl
scas
int3
jbe
pop
int3
fs
movsb
lea
lret
loopne
mov
dec
out
insl
orb
jl
rolb
out
imul
mov
pop
mov
int3
mov
xor
mov
add
popf
xor
pop
pop
out
loope
jecxz
xchg
push
push
adc
xchg
call
imul
mov
sarl
add
dec
rcrb
cld
and
sub
dec
xor
sub
sbb
fwait
stc
mov
mov
loope
mov
les
cld
cmpsl
pop
fs
fdivs
ljmp
sbb
popl
mov
push
ds
cmp
fmul
fwait
jbe
xchg
pop
cmc
test
xor
cmpsl
js
imul
adc
pop
ss
dec
out
std
mov
or
and
nop
sub
mov
add
daa
dec
addb
movsb
sahf
or
div
xor
xchg
mov
aas
mov
mov
push
or
loope
adc
dec
into
inc
loopne
roll
xor
outsb
and
add
shlb
les
push
sbb
int
and
in
dec
push
out
xchg
add
push
mov
addr16
jecxz
add
adc
xor
and
push
popa
jle
aas
int3
test
hlt
pop
mov
xchg
sub
hlt
and
add
cs
movsb
pop
dec
pop
jmp
jg
popa
stc
sub
dec
cmp
lret
jno
xlat
outsb
imul
sub
scas
roll
lds
xchg
inc
push
jmp
fisttps
out
and
fsubs
arpl
outsb
ret
pop
fwait
dec
pusha
outsb
roll
mov
test
jl
sub
test
sbb
das
inc
loopne
cmp
fidivrl
bound
mov
mov
shrb
mov
nop
stos
jno
call
dec
repz
sbb
call
bound
mov
inc
xchg
icebp
addr16
mov
mov
pop
mov
and
mov
imul
or
in
dec
movsb
movsb
or
jno
sbb
rolb
leave
in
inc
add
pop
sub
call
xor
adc
andb
rcrb
rolb
cmc
daa
dec
icebp
addb
mov
push
dec
sbb
push
inc
movsb
mov
mov
add
out
stc
loope
mov
outsl
call
jp
mov
gs
jle,pn
jae
enter
add
mov
xchg
add
push
leave
and
dec
xchg
mov
es
dec
pop
dec
pop
inc
xor
ret
mov
fstl
adc
call
adc
pop
adc
out
fs
mov
xchg
fsts
ja
pop
adc
and
outsb
aaa
sub
push
or
push
int
add
arpl
test
sbb
ljmp
pop
daa
and
notb
sbb
mov
outsb
push
sti
in
mov
ret
sub
leave
jge
movsl
dec
fs
jne
or
pop
test
mov
outsl
xor
mov
and
add
das
es
jmp
test
sub
mov
lcall
popa
jne
or
ret
dec
mov
enter
out
addr16
adc
pop
or
and
cli
lds
mov
xchg
loopne
pusha
xchg
push
push
or
or
std
push
lahf
add
lret
sub
cmp
test
xchg
call
outsl
js
xor
cld
cmpsl
push
iret
mov
xchg
lods
nop
daa
popa
xchg
sub
push
out
je
mov
add
aas
out
xchg
push
sbb
mov
or
pusha
xor
test
arpl
fnstenv
imul
add
add
mov
add
jno
nop
sarb
cmp
push
dec
fbstp
pop
into
ficomps
bound
adc
xor
add
xor
sub
inc
stc
dec
inc
cwtl
std
and
movl
and
xchg
icebp
jno
das
xor
fsubp
sub
add
mov
dec
daa
leave
fsubp
ss
or
outsb
pusha
jecxz
nop
dec
dec
orb
mov
dec
ret
pcmpgtb
sub
mov
loopne
sub
cmp
pop
xor
call
cld
mov
xchg
pop
and
add
xchg
lret
inc
adc
cmp
std
out
adc
testl
push
in
ret
push
mov
movsl
mov
jnp
xor
pop
aas
dec
fldz
es
xchg
mov
mov
outsb
jl
filds
clc
mov
mov
pop
in
test
pop
arpl
test
mov
aaa
xchg
and
lret
pop
add
stos
push
sub
out
loope
inc
jb
mov
inc
clc
xor
dec
inc
lahf
lods
jo
loope
gs
cmp
add
scas
nop
outsb
insb
mov
add
adc
rcr
jmp
mov
movsb
pop
popa
push
icebp
sbb
jno
cmp
and
cmp
stos
add
jecxz
pushf
mov
les
sub
adc
mov
push
inc
ljmp
jg
mov
xchg
push
enter
loope
mov
clc
andl
cmp
xor
add
push
out
and
add
loope
mov
xchg
out
cmp
stos
xor
call
mov
or
int
mov
add
imul
mov
data16
mov
fs
gs
das
pusha
sbb
mov
mov
xorl
je
mov
cmp
mov
push
imul
jne
dec
xchg
loop
jp
inc
jo
popa
dec
add
arpl
incb
loope
and
jns
das
test
faddl
orb
sarl
std
push
insl
sbb
add
sbb
imul
mov
mov
jmp
add
mov
jo
mov
outsl
push
movsb
add
loope
cmp
pushf
xchg
and
and
shld
fnsave
sbb
add
and
xchg
rcrb
pop
xor
inc
movsb
jo
fwait
mov
push
sti
and
add
mov
popf
push
out
and
insl
stos
ret
inc
pop
and
and
xchg
mov
sub
xchg
jnp
call
mov
mov
dec
pop
mov
jp
loope
orb
cld
sub
adc
roll
addr16
in
jns,pn
mov
dec
in
aas
mov
xchg
loop
sub
int3
mov
or
cmp
arpl
jg
mov
sbb
pop
sbb
pop
lahf
das
fcoms
lock
das
fsubrs
addb
and
and
inc
out
mov
sbb
ds
push
cmp
jne
mov
mov
es
mov
mov
and
shrl
shlb
and
divl
lds
jmp
xor
fsts
rcll
ret
lds
inc
jae
mov
xchg
push
popa
sarl
test
repnz
std
in
mov
rorb
pop
ss
dec
mov
xlat
ja
gs
loope
arpl
push
jg
mov
scas
fimull
cmp
and
cltd
mov
xchg
pinsrw
test
xchg
or
mov
xchg
jbe
and
and
push
cmpsb
jb
adc
mov
dec
js
stos
push
sub
pop
mov
addr16
daa
lea
into
rorl
push
test
out
std
sub
xchg
sbb
sub
inc
add
xchg
stos
leave
dec
and
mov
inc
movsb
fildll
jno
iret
fldcw
cmpb
cltd
imul
loope
cmp
test
jb
fmuls
or
cmp
lret
sahf
dec
add
mov
cmp
roll
xchg
arpl
repnz
pop
shlb
outsl
sub
push
or
nop
adc
mov
movsl
cmp
addr16
movsb
out
loope
add
addr16
lcall
mov
or
fiadds
dec
mul
sbb
iret
adcl
adc
jge
stos
mov
and
nop
add
test
inc
stos
loopne
sub
xor
push
mov
inc
orl
nop
xlat
xchg
enter
mov
shrl
adc
jp
rorb
popl
add
icebp
insb
cmp
cld
push
jb
scas
dec
lret
mov
icebp
add
mov
and
sbb
lock
leave
stos
sub
sub
ffreep
icebp
or
rcll
mov
and
pop
pop
icebp
xchg
or
lods
and
and
rorl
cmp
add
xchg
out
xchg
push
mov
or
push
and
lock
xor
test
rorl
or
add
lahf
push
sbb
dec
jne
roll
stc
test
mov
lahf
add
mov
add
into
adc
addl
imul
push
repz
push
pop
lret
add
imul
cmp
jae
sub
and
cs
or
mov
fsubrp
push
inc
dec
test
test
fsubs
inc
cmpsl
inc
xchg
inc
movsl
fmuls
imul
xor
jns
mov
cmp
scas
je
xchg
adc
jb
inc
inc
out
test
movsl
into
add
dec
jo
aaa
into
pusha
mov
dec
mov
rorl
pop
scas
cmp
cs
aaa
fadd
cld
jno
ror
cltd
loope
aad
popa
dec
pusha
test
mov
mov
push
and
mov
jbe
lods
sbb
pushf
sub
and
adc
lret
test
mov
int3
jmp
sbbl
hlt
arpl
adc
xlat
movsb
mov
es
sub
pop
popf
jbe
insl
stos
nop
sbb
imul
popa
mov
cmp
fldt
shll
in
adc
sbb
data16
fcompl
push
fwait
loope
adc
mov
out
sub
repnz
push
mov
loop
adc
les
add
cmp
mov
filds
mov
adc
or
adc
push
or
stos
es
addl
incb
add
add
xor
bound
xchg
jo
dec
cmp
enter
and
sbb
in
push
or
mov
push
push
jl
jns
loop
cmp
mov
test
xchg
xor
push
movsl
fdiv
into
in
ret
popf
insb
outsl
xor
outsl
gs
sbb
mov
mov
ljmp
jo
xor
sub
xchg
mov
loope
sarb
pop
cmpsb
mov
xchg
add
add
testl
xor
inc
fld
std
add
inc
xchg
out
sbb
shrb
into
xchg
cld
test
popa
inc
addl
rclb
inc
add
inc
add
and
xor
stc
cld
loope
mov
xchg
mov
addb
pop
sbb
ror
jmp
gs
je
iret
into
push
and
sbb
fnstcw
pop
mov
lret
add
sbb
xchg
aas
shlb
or
dec
dec
dec
xchg
push
orb
ds
daa
rolb
cltd
les
shlb
bound
loope
xchg
add
cmp
test
push
pop
ljmp
pop
es
sbb
and
sbb
cld
xor
popa
aas
mov
fwait
out
movsb
and
lods
xorb
arpl
int3
add
pop
inc
dec
inc
stc
sbb
dec
in
cmpsl
jnp
or
add
push
xchg
ja
out
sub
in
pandn
mov
mov
jge
popa
or
in
mov
andb
aas
arpl
push
dec
dec
and
inc
lcall
xchg
popl
stc
dec
in
loop
mov
add
call
incb
sbb
sbb
scas
movsb
adc
inc
pop
mov
lcall
adc
or
push
pop
and
cwtl
stos
mov
sub
push
lods
sub
popa
dec
mov
pop
pop
push
adc
int
mov
push
call
adc
fstpl
pop
push
mov
sub
pop
sbb
insb
sahf
add
push
mov
cmpsb
stos
or
adc
dec
mov
mov
test
insb
mov
mov
mov
popf
mov
test
pop
jp
cld
dec
pop
mov
rorl
mov
dec
jecxz
lahf
pop
or
sub
jo
lea
cmp
push
sub
xor
xor
or
push
packsswb
outsb
cld
add
je
sbb
or
out
int3
dec
enter
lahf
sub
xor
pop
push
push
xor
ja
mov
ljmp
imul
mov
lea
or
sbb
imul
mov
or
sub
cvtdq2ps
pushf
fimuls
mov
inc
shll
cmp
xchg
mov
lea
pop
gs
pop
test
inc
outsb
push
sub
and
sub
jbe
push
inc
dec
loop
mov
scas
loop
cmp
pusha
arpl
and
pop
mov
add
mov
enter
scas
pop
mov
lea
cmpsl
inc
pop
lods
insb
minps
repz
shl
add
add
mov
cwtl
pusha
push
stos
dec
jae
cli
push
and
mov
scas
into
icebp
in
leave
and
cmpsb
mov
push
xor
mov
add
xlat
aas
test
pop
pop
decb
popa
jmp
loop
inc
inc
loop
shlb
pop
sti
adcb
movsl
loop
pop
cwtl
inc
jmp
mov
gs
in
rolb
xchg
orl
lock
int3
rorl
sub
insl
push
mov
fdivrl
fwait
ret
or
bound
bound
add
sub
jl
imul
leave
mov
or
cmp
cld
jns
leave
les
ljmp
rorb
roll
lahf
jl
add
shrb
rolb
ret
movsb
mov
sub
adc
cmpsl
iret
lahf
inc
mov
pushf
jb
pop
sbb
loope
nop
test
mov
or
mov
mov
orl
add
fwait
dec
inc
imul
mov
adc
pop
jp
nop
dec
imul
pop
out
nop
mov
ficomps
fnstsw
xchg
adc
gs
dec
xor
pop
loopne
add
rcrb
jne
out
ret
adc
adc
adc
cmp
mov
mov
or
add
push
adc
pop
movsl
pop
jg
or
adc
jmp
adc
or
and
push
arpl
dec
pop
mov
lds
sahf
repnz
ret
mov
pop
pop
xor
popa
cmpsl
scas
adc
loope
fisttpl
rorl
cltd
and
stos
loop
scas
adc
jecxz
cmp
sbb
xchg
test
inc
xchg
in
mov
push
xor
std
outsb
popf
movsb
sbb
add
jg
dec
inc
call
xor
mov
sub
or
ret
jbe
dec
dec
pop
mov
pushf
scas
push
sarb
test
or
and
and
dec
and
loop
jecxz
test
push
mov
test
int3
cmc
and
in
test
pop
push
xor
mov
pop
cmpsl
movsl
rol
and
xchg
rorb
adc
jl
lret
mov
push
and
bound
scas
pop
stc
push
and
mov
enter
add
stos
mov
loope
add
enter
mov
adc
cmpsl
mov
lea
lock
lea
test
ret
or
repnz
enter
scas
loopne
jo
movsl
mov
lahf
sbb
loop
push
sub
rcr
cmp
sahf
loop
dec
inc
sti
gs
shrl
mov
fldt
inc
ret
push
push
add
lret
xchg
es
andb
sub
out
add
cmpsl
push
sti
mov
push
xor
sbb
or
sbb
loope
cltd
xchg
andb
fs
pusha
pop
cwtl
rcrb
adc
mov
loopne
mov
scas
sti
dec
js
sbb
pop
mov
and
in
movsb
arpl
mov
fs
adc
stos
decl
out
xchg
loopne
movsl
sarb
jnp
loope
xchg
add
xchg
scas
inc
sub
dec
or
push
loop
test
push
mov
inc
gs
call
mov
aas
test
push
xor
cmp
push
adc
sub
xor
in
daa
sbb
add
test
and
das
fs
mov
loope
and
incb
je
dec
lret
mov
sub
adc
and
bound
mov
inc
adc
ficoms
mov
sbb
stos
les
icebp
sbb
jg
sbb
sub
and
dec
mov
or
movsl
and
sub
outsl
jae
xchg
xorl
dec
mov
movsl
popf
pop
das
or
lock
pop
dec
xlat
sarl
push
or
loopne
and
dec
cwtl
sbb
jmp
sub
push
jecxz
repnz
movsb
pop
cs
jbe
or
jne
shr
and
out
xchg
inc
stc
lea
lea
mov
cmp
push
ror
addr16
adc
xlat
or
add
mov
inc
lret
mov
xchg
ret
mov
pop
sub
fs
ret
add
pop
mov
pop
andl
arpl
push
push
addb
mov
adc
scas
mov
arpl
loop
push
cmc
push
cld
xchg
mov
nop
addr16
rol
js
mov
leave
adc
stos
lret
sub
sub
ja
push
addl
arpl
adc
rorb
lcall
add
adc
mov
lock
out
roll
mov
mov
mov
cmp
xchg
sbb
mov
push
pop
xchg
jnp
js
pushl
mov
mov
in
mov
cmp
adc
clc
sbb
xchg
invd
cs
pop
rclb
add
popl
dec
lock
and
fs
and
adc
out
movl
clc
movsl
inc
pop
imul
es
stos
or
add
hlt
ja
cmp
int
mov
xchg
rorl
and
mov
push
or
test
std
je
andb
mov
mov
flds
pavgw
cld
arpl
pop
gs
fildl
xchg
jno
leave
add
push
jns
enter
xor
or
inc
imul
lret
movq2dq
add
adc
fiadds
jle
pop
cmp
dec
or
ljmp
loop
enter
push
fyl2xp1
lret
imul
or
dec
mov
lcall
cwtl
insb
cmp
jmp
jnp
adc
test
add
std
rclb
ja
loopne
add
inc
push
inc
fidivl
adc
mov
push
adc
sub
pushf
mov
pop
jmp
lock
imul
outsl
pop
loop
movsb
jns
clc
mov
lds
adc
orb
push
pop
xchg
ret
imulb
lods
sub
gs
xlat
insb
loop
hlt
out
lcall
fnsave
cmp
xor
roll
mov
je
cmp
mov
ficoms
rorb
icebp
push
xchg
xchg
loop
adc
inc
mov
lret
sub
loop
std
push
ja
push
nop
dec
add
fists
mul
xor
les
adc
sub
inc
test
add
add
and
cmp
cmp
fmull
aas
test
sti
das
andb
xchg
mov
out
sub
push
cmpsb
test
cld
pop
inc
push
pushf
add
pop
jmp
out
inc
mov
movsb
mov
mov
inc
ret
dec
push
mov
xlat
mov
or
incl
insl
lea
movsb
jg
sub
push
xchg
icebp
pop
push
setnp
sbb
hlt
cmc
mov
out
sbb
dec
and
add
lock
loop
dec
cvttps2pi
sub
mov
loopne,pt
dec
sahf
cmpsl
adc
and
mov
leave
arpl
add
sub
andb
cmp
push
imul
movsl
jle
inc
push
push
add
pop
xchg
sahf
jmp
add
pop
and
pop
or
rolb
leave
or
ret
inc
and
in
pop
inc
bound
xchg
loop
movsl
push
movsb
iret
es
and
pop
je
nop
sub
mov
inc
stos
push
add
xchg
push
inc
mov
pushf
dec
fiaddl
in
loop
js,pt
ja
loopne
outsl
cld
mov
icebp
xchg
and
inc
clc
xchg
push
dec
pop
stos
lret
push
xchg
adc
insb
pushf
data16
xchg
mov
dec
lahf
adc
jno
fstp
stos
add
lahf
pop
or
xchg
add
add
in
enter
xchg
dec
dec
and
and
js
les
testl
add
cwtl
sbb
xor
sub
mov
sub
or
ljmp
push
pop
mov
icebp
pop
pop
inc
std
dec
mov
pop
or
mov
scas
inc
fiaddl
shl
test
cwtl
pop
cmp
stos
sub
ja
stos
cmpsl
dec
fs
pop
out
in
adc
fcomp
stos
sub
push
mov
hlt
xor
cwtl
and
push
out
sub
sub
pop
mov
rolb
rorb
std
ret
dec
inc
lock
adc
rorb
stos
arpl
mov
mov
xchg
inc
add
fimuls
push
outsl
inc
test
mov
cmp
sbb
push
loope
jmp
in
push
adc
inc
dec
enter
enter
aas
inc
mov
gs
ljmp
stc
dec
fisttpll
add
fs
and
das
fisubl
xchg
scas
mov
and
mov
lock
js
lret
xchg
pop
subb
popa
cld
imul
cmp
cmpsb
insb
popf
dec
mov
test
sbbl
and
lcall
les
jg
sbb
pusha
jg
into
out
pop
stc
stos
in
cmp
sub
fwait
push
data16
mov
sbb
shlb
cmp
xchg
insb
cmp
dec
pop
and
push
cmp
jg
pushf
sbb
mov
insb
rorb
rorl
push
xor
cmp
mov
push
pop
fwait
mov
insb
sbb
insb
jo
into
jmp
vpsubsb
dec
push
and
out
std
xor
jns
push
shrb
add
andb
insb
mov
cli
xchg
jnp
pop
fs
add
std
dec
les
lea
add
inc
orl
add
add
scas
iret
sbb
scas
test
inc
jl
xchg
arpl
shll
fldl
test
cmp
ret
mov
xchg
repz
jo
push
dec
jge
shlb
inc
jns
rcr
sbb
into
dec
nop
in
or
loope
mov
imul
test
xchg
out
out
and
les
cmp
xchg
mov
int3
dec
and
and
arpl
xor
lahf
in
and
push
rdrand
int3
sub
inc
insl
jl
testl
xor
jecxz
sub
inc
stos
or
arpl
inc
enter
xor
inc
inc
mov
xor
ror
add
shlb
mov
mov
hlt
or
sti
cmp
gs
out
pop
pop
pop
mov
imul
andb
pop
les
mov
roll
xchg
sbb
into
sub
pop
and
movsl
inc
dec
movsl
mov
sub
nop
imul
ret
and
leave
or
sbbb
dec
lcall
cs
or
into
fsubs
in
xchg
mov
scas
in
inc
ret
les
mov
and
gs
xchg
cmpsb
mov
nop
push
nop
add
or
rorl
push
adc
sbbb
je
mov
aad
add
rcll
add
xchg
or
push
dec
and
sub
push
int3
adc
mov
rclb
leave
add
hlt
pop
insl
and
jge
jge
fbld
push
mov
push
and
xor
lds
jno
jns
icebp
cmp
xchg
push
gs
xor
test
xor
mov
inc
fnstcw
in
in
pushf
sub
sbb
sub
xor
push
cmpsb
imul
cmp
sub
pusha
shrl
ret
stos
cmp
aas
ror
xchg
js
add
inc
pop
faddp
push
gs
dec
fcomi
int
xor
loop
jge
dec
daa
push
add
xchg
sub
data16
sub
roll
xor
add
add
mov
std
xor
add
jae
das
cpuid
iret
bound
mov
enter
sarl
cmpsl
push
out
lret
scas
and
mov
mov
out
in
cmpsb
pushf
jmp
pop
out
loopne
jp
andl
jge
adc
fisubl
dec
fimuls
jle
stc
and
sbb
sub
jb
or
out
xchg
enter
mov
xor
xchg
jge
insl
addb
leave
sbb
dec
inc
and
pop
pop
or
mov
or
les
mov
pushf
xchg
pop
pop
mov
or
outsl
adc
sub
or
cmp
cmp
roll
mov
sub
mov
popf
sbb
and
sbb
jmp
clc
jno
add
gs
lret
pop
sbb
imul
mov
hlt
addb
test
mov
mov
sahf
negb
and
ja
sub
mov
sbb
imul
rclb
mov
outsb
sbb
mov
and
ds
mull
and
push
into
cwtl
pop
and
mov
adc
loopne
dec
daa
or
cmp
cmp
inc
xor
mov
out
leave
lods
dec
ljmp
add
xchg
hlt
add
push
xchg
and
loopne
mov
xor
std
jno
jle
mov
pop
inc
into
cmp
or
cmp
cmpsl
inc
add
stos
outsl
sub
inc
loopne
insb
and
mov
sbb
int3
adc
or
mov
movsb
pop
and
mov
in
test
ffree
dec
pop
les
xor
push
adcl
fwait
jmp
xor
repnz
mov
add
sub
std
cmp
out
cmpsl
xchg
aaa
cmp
ret
out
fldcw
data16
jo
test
incb
ficoml
adc
mov
dec
inc
mov
jnp
int
das
pop
cmp
lret
or
sbb
xchg
xor
mov
imul
int3
sti
ret
or
xor
loope
dec
mov
imul
cmp
add
jns
mov
jae
mov
mov
push
adc
lds
popa
push
mov
mov
out
aam
mov
clc
pop
sbb
mov
sub
icebp
hlt
test
incl
sbb
mov
ljmp
add
lods
scas
xlat
scas
push
mov
dec
xchg
stc
mov
add
jl
jae
lret
shl
add
faddp
sub
pop
fstp
icebp
es
inc
add
jnp
sub
daa
sbb
inc
mov
xor
mov
pop
push
or
nop
vpcomud
pop
bound
and
icebp
jge
lds
notl
pop
lock
pushf
scas
mov
lock
xor
pushf
les
cmp
sbbl
scas
inc
fdivr
repnz
in
inc
repz
aad
pop
add
repz
and
jge
jno
arpl
mov
mov
sbb
fiadds
sub
jg
ficoml
adcb
mov
sarb
and
mov
add
enter
and
or
sub
jno
sub
xor
subb
test
cmp
test
test
sub
adc
and
sbb
mov
jb
push
rdpmc
jle
mov
mov
jnp
icebp
xlat
pusha
mov
stos
adc
outsb
jp
inc
lret
mov
cmp
xchg
sub
or
insb
shl
les
fsubs
push
rcll
ret
clc
lcall
out
sbb
cld
mov
lahf
dec
xor
sbb
and
ror
pop
cs
ret
testl
sub
adc
sbb
test
mov
mov
cmpsb
into
cmp
jnp
add
jne
bound
cmp
fdivrs
cld
add
inc
jbe
pop
jno
fisttps
push
stos
sahf
ficoml
pop
mov
pop
cmpsb
iret
ljmp
adc
dec
mov
fsubl
ret
mov
or
mov
lret
xlat
test
fsubrl
lods
mov
xlat
mov
push
aaa
mov
add
and
daa
mov
aam
es
jno
cmp
push
faddl
jmp
xor
mov
xchg
mov
andb
cmc
add
in
inc
pop
jl
add
addb
xor
ret
dec
jns
f2xm1
mov
sbb
xchg
inc
inc
xor
and
imul
repnz
sub
mov
push
push
and
in
call
push
gs
mov
push
xchg
dec
popa
and
jmp
lods
inc
scas
jnp
lcall
fs
add
adc
jno
add
cmp
pop
fnstenv
xlat
mov
sbb
sbb
imul
push
in
jo
lret
dec
loope
movsb
xchg
mov
inc
add
insl
cmp
pusha
push
sub
lods
inc
loop
ljmp
push
or
jl
mov
cmp
mov
icebp
jmp
inc
sub
stos
hlt
jo
inc
xchg
or
jge
test
xlat
repz
lods
and
pop
adc
push
fs
inc
das
mov
mov
clc
ljmp
push
test
loop
hlt
adc
out
jge
mov
ret
cmp
add
in
inc
sarb
jp
icebp
sbb
in
pop
jge
and
and
mov
call
imul
add
add
aam
pop
or
jnp
adc
pop
sti
add
jp,pn
pop
push
inc
pop
ss
je
mov
push
insb
cmp
or
cmp
inc
lcall
push
xchg
cmp
ret
es
dec
pop
mov
mov
jno
mov
iret
and
aas
int
jb
jg
test
std
add
stos
mov
lahf
andb
addr16
test
enter
inc
cltd
inc
test
push
cmp
adcb
jmp
pop
mov
or
flds
das
shrb
xchg
outsb
fcomps
adc
jg
mov
cli
jl
or
insl
jae
insl
pushf
sbb
mull
sub
mov
mov
test
inc
in
mov
lock
lcall
xor
dec
lahf
or
xor
hlt
mov
xlat
ret
test
ds
getsec
sub
or
push
or
insl
dec
movsl
add
cmp
call
inc
lcall
cmp
movsl
push
imul
pusha
jecxz
jge
and
mov
iret
xor
nop
fisttpl
jo
movsl
lret
lods
dec
bound
into
mov
lcall
mov
mov
int3
adc
pusha
adc
or
mov
inc
fimuls
push
sti
iret
lret
push
in
mov
nop
mov
sbb
inc
pop
out
xchg
sbb
dec
mov
ljmp
adc
xchg
push
fldl
popa
inc
push
jno
push
or
mov
adc
jb
xor
dec
aam
popf
sub
mov
add
ret
sub
mov
jmp
andl
lock
in
pop
dec
fcomps
popf
jno
imulb
xchg
cmpsl
icebp
lcall
fisubs
addl
pop
gs
outsb
pop
inc
or
xor
repnz
mov
mov
dec
or
xlat
nopl
sub
xor
sub
lds
nop
xorb
mov
sbb
mov
and
add
jo
cwtl
test
aam
xchg
jb
jge
dec
lret
push
mov
in
mov
cwtl
xchg
test
fstl
pop
mov
ja
sub
iret
mov
inc
inc
adc
adc
mov
inc
adc
or
jb
push
enter
sahf
addr16
out
mov
inc
mov
ret
adc
cmpsl
jp
adc
dec
fnstsw
rcl
pop
outsl
out
sub
js
mov
aas
outsb
lds
in
dec
adc
dec
stos
inc
sub
fisubs
movsb
dec
imul
jne
or
inc
pusha
mov
iret
and
and
imul
mov
push
adc
cmp
call
int
lods
add
jb
insb
icebp
mov
adc
inc
mov
dec
roll
std
mov
mov
mov
cwtl
inc
loop
sbb
and
enter
or
dec
mov
sbb
pop
sbb
mov
inc
add
jno
mov
mov
setno
stos
mov
inc
outsb
sar
dec
sahf
pop
mov
mov
test
idivb
int3
ret
adc
ss
scas
jecxz
add
or
test
xchg
cmc
mov
dec
repz
jno
jp
lods
in
imul
sbb
ret
scas
lret
int3
ljmp
xchg
movsb
push
rol
out
cmp
std
push
lahf
pushf
inc
mov
movsl
cmp
in
lret
popf
cwtl
mov
or
into
xor
and
ret
add
stos
loopne
mov
adc
fsubs
inc
and
push
xor
and
adc
and
sub
bound
les
sub
mov
cmp
dec
jmp
inc
es
dec
outsb
inc
cmc
jmp
cltd
daa
lods
imul
test
mov
stos
pop
mov
cmp
icebp
rcrl
xchg
xchg
pop
je
jno
xchg
shll
push
push
or
jo
add
pop
std
imul
inc
or
outsb
add
cmpb
jecxz
xchg
ret
and
push
sbb
ret
or
add
pusha
cltd
shrl
push
pop
push
lods
aad
cmpb
and
adc
cmp
dec
xor
push
pusha
sbb
push
addr16
sti
dec
pop
cwtl
ret
adc
push
inc
outsb
cmp
movsb
and
repnz
mov
in
lcall
aad
fbld
inc
sbb
adcl
pop
sub
dec
mov
mov
sub
jb
jle
shlb
add
or
mov
ret
out
cltd
in
mov
ja
testl
jb
and
loopne
iret
push
xor
rolb
lds
mov
adc
sahf
inc
test
cmp
cmpsl
int
pop
cmp
pop
jb
scas
adc
sub
mov
movsb
inc
mov
cmpsb
cmpsl
push
lock
mov
inc
out
andl
push
add
in
aas
icebp
cmp
and
cs
push
les
stos
fs
lret
ss
sub
adc
fs
mov
mov
sub
cmpsl
sbb
inc
and
or
test
pop
add
inc
cpuid
mov
pop
ds
int
pop
enter
gs
andb
pop
std
and
push
lret
scas
inc
cmpsl
push
lret
sbb
loop
fistps
adc
lods
fadds
data16
inc
subl
pop
pop
jmp
aas
and
mov
rcrb
push
movsb
fadd
outsl
push
andb
mov
loopne
inc
and
rorb
sbb
popf
xchg
xchg
inc
scas
jae
lcall
add
pop
adc
sub
push
movsl
or
orl
mov
or
lahf
push
movsb
arpl
pop
loop
pusha
pop
mov
pop
adc
jb
inc
int
leave
std
subl
daa
mov
stos
jecxz
add
xchg
add
movsl
xor
xlat
fdivr
mov
lds
getsec
aam
or
jno
mov
fistps
pop
jg
mov
or
adc
adc
mov
adc
jns
mov
or
out
jns
adc
aas
cwtl
cmp
xchg
sbb
les
mov
lret
imul
jl
jp
cmp
bound
les
xchg
pop
mov
in
loop
data16
xchg
sahf
sbb
mov
sub
aaa
inc
pop
lock
cmp
dec
fisubl
out
adc
outsb
inc
pop
or
inc
cmp
fstpl
xchg
lcall
jge
dec
mov
dec
rcll
add
sub
cmp
dec
xor
sub
aas
leave
adc
inc
ret
adc
sbb
test
or
adc
xlat
xor
dec
or
mov
push
shrb
or
pop
sbb
loop
sub
les
lea
sarb
adc
andb
push
sbb
cmpl
imul
rcrl
lret
push
in
ds
sub
adc
mov
cmpsl
out
frstor
jb
or
jmp
sub
test
xchg
dec
sub
cmp
sbb
stc
loop
lock
aad
mov
das
xchg
dec
leave
and
inc
or
nop
ret
xchg
xchg
fiadds
dec
and
jmp
sahf
dec
outsl
subb
or
dec
xchg
orl
cmp
xchg
rorl
sub
sub
js
mov
add
lahf
adc
jle,pn
inc
inc
icebp
iret
clc
cmp
inc
add
push
int3
or
pop
stos
xchg
out
out
cmpsb
es
dec
xor
xchg
and
inc
cmpsl
cmp
mov
mov
mov
sub
inc
add
pop
dec
imul
or
pop
ss
jmp
fstl
outsl
movsl
rcr
cmp
repz
sub
add
popa
ja
and
and
stc
push
cwtl
adc
dec
dec
lahf
dec
jb
push
enter
fwait
mov
add
pop
gs
and
jmp
push
icebp
or
lahf
sarb
pusha
pop
out
dec
add
and
test
ja
addb
sete
mov
testb
pop
pop
xchg
scas
pop
add
jmp
cmpsb
jbe
sbb
rcr
dec
push
shrl
pop
ljmp
adc
sub
mov
jo
add
hlt
scas
adc
add
js
and
sub
adc
iret
imul
outsl
xchg
imul
pop
shrl
lds
leave
in
sbb
shlw
xchg
in
out
pop
fimull
jp
js
adc
ss
jo
test
ret
and
pop
mov
mov
mov
push
sub
push
jmp
adc
mov
and
xchg
fs
push
std
int
jmp
loop
mov
and
shrb
fiaddl
xchg
xlat
or
loope
loope
jns
mov
pop
aas
xchg
outsl
repz
xchg
int
rclb
adc
push
stos
inc
push
pop
xor
roll
mov
push
je
test
inc
push
inc
jbe
add
mov
push
outsb
fisubrl
lods
push
shll
enter
push
movsb
or
add
lahf
mov
data16
sub
cmpsl
divl
cmp
dec
mov
lret
mov
sub
lds
into
xor
out
das
xchg
data16
adc
jp
fdivrs
stos
bound
ret
in
aas
test
mov
adc
dec
mov
xor
add
add
inc
js
mov
mov
mov
movsb
dec
push
cmc
mov
aas
and
arpl
nopl
dec
roll
iret
stc
jg
inc
leave
scas
jns
adc
mov
pop
add
andb
jnp
sbb
fdivl
je
push
and
test
and
jnp
mov
and
mov
jmp
mov
mov
cmpl
out
mov
movsl
pop
in
mov
mov
add
daa
dec
cwtl
push
ret
cs
push
ljmp
adc
insl
pusha
pushf
lock
mov
pop
int3
mov
dec
popf
inc
and
fstl
sahf
mov
stos
add
add
fcoms
mov
add
and
gs
mov
pop
lret
popa
frstor
sbb
mov
insb
bound
cmp
pop
test
sub
push
mov
and
daa
clc
sub
push
adc
push
out
mov
adc
xchg
push
rolb
incb
adc
add
ljmp
mov
cwtl
xchg
dec
xchg
out
push
mov
arpl
xchg
lahf
pushf
icebp
shl
mov
xchg
lahf
lret
je
loope
pop
xor
jnp
adc
inc
cwtl
addb
adc
push
add
push
gs
dec
cltd
lcall
andb
out
push
fists
sbb
jle
ret
and
negb
sbb
inc
inc
lcall
les
loopne
in
mov
or
mov
push
imul
lock
imul
orb
test
jae
push
std
je
gs
mov
xor
stos
outsl
dec
sub
out
fdivs
dec
adc
sbb
roll
adc
cli
push
mov
push
add
sbb
xor
mov
aas
inc
psubb
cmp
cmp
xchg
add
cmp
pop
loope
stos
inc
outsb
jmp
incb
ljmp
rcrl
ret
sub
inc
push
lea
rclb
push
mov
and
mov
test
es
aam
mov
xchg
add
push
push
inc
fsubrs
test
mov
xor
xor
xchg
adc
mov
xor
dec
mov
pop
idivl
pop
cwtl
inc
xchg
insb
into
mov
in
or
and
or
or
sbbl
imul
mov
and
in
lret
in
pop
popf
jmp
aaa
push
sub
cs
inc
leave
sbb
sub
or
ret
loopne
or
arpl
dec
lea
fcmovb
xchg
lret
mov
jmp
inc
out
movsb
scas
sbb
outsl
jp
or
iret
jno
and
sbb
xchg
inc
pop
cmpsb
into
xor
lret
sub
movsl
test
adc
andl
lret
insl
sub
aad
imul
xchg
mov
xchg
mov
pop
int
xchg
add
xchg
ja
std
xor
rolb
mov
sarl
cld
test
arpl
sub
fildll
xchg
cmpsl
test
cmp
sbb
sti
ljmp
jge
xor
fiadds
test
sub
dec
push
test
mov
add
movsb
sar
and
cmpsl
mov
sub
xchg
push
testl
adc
cmpsl
inc
cmp
mov
or
push
mov
test
and
dec
xchg
mov
out
fwait
adc
js
and
rcll
jge
es
mov
xchg
popa
sub
stos
andb
add
jp
fbld
clc
pop
jb
fwait
je
sub
in
or
lret
dec
pop
inc
ljmp
xchg
lods
jmp
rcrb
pop
clc
loope
jmp
bound
inc
mov
ds
addb
xchg
add
lret
and
mov
xor
mov
jo
bound
pop
pop
xchg
leave
add
add
inc
pop
out
shll
mov
push
jae
fcompl
loopne
mov
inc
daa
mov
mov
inc
scas
and
xor
sbb
test
xchg
xor
add
and
insl
in
cmp
mov
push
or
sbb
stos
adc
add
fdivs
or
pslld
sti
push
sub
cmp
add
mov
inc
or
push
ret
cld
lods
lds
add
mov
xchg
and
add
loopne
mov
dec
or
cltd
into
add
add
adc
mov
mov
mov
cs
pop
pop
xlat
cmp
popa
add
and
stc
pop
stos
push
stc
iret
sbb
out
inc
test
lds
cli
cmp
push
jmp
sbb
add
data16
pusha
es
dec
in
popa
and
and
fisubs
inc
lret
mov
push
leave
mov
loop
mov
mov
add
adc
stos
and
sbb
test
xorb
shrb
add
fists
add
mov
push
fadds
lcall
ss
test
mov
scas
sub
cmpb
pushl
test
push
xor
shr
and
inc
in
adc
dec
mov
jae
and
jno
dec
or
sbb
arpl
out
xchg
jg
lret
dec
mov
push
loope
cmp
out
test
ret
jo
into
mov
std
popa
je
jbe
or
cmp
xchg
test
add
dec
in
jns
icebp
mov
mov
adc
inc
fwait
inc
mov
mov
aam
lea
xor
or
out
push
repz
out
loope
hlt
movsl
sub
pop
dec
iret
popf
daa
and
pop
and
adc
xchg
loop
shl
outsl
add
jg
pop
mov
jnp
adc
clc
pop
repnz
dec
xchg
lret
cmp
clc
mov
mov
nop
add
mov
or
mov
mov
add
addb
add
stos
push
shr
bound
ficoml
xor
lcall
dec
or
push
lahf
cmp
sahf
add
inc
testl
mov
js
cwtl
stc
or
fisubrs
xor
loopne
leave
dec
sbb
stos
push
lds
adc
insl
out
push
adc
inc
roll
loopne,pt
dec
push
mov
cltd
fsts
xchg
pop
pop
inc
cmpsb
mov
pop
cltd
int3
lahf
mov
cld
jbe
adc
mov
stos
mov
in
or
mov
push
addb
cwtl
es
sub
adc
repz
loop
inc
std
loop
pop
jns
pop
jp
sbb
mov
orb
mov
das
ret
ds
clc
rolb
daa
sarl
ja
dec
pminub
dec
xlat
mov
stos
mov
shrl
adc
and
in
mov
sbb
hlt
test
pop
and
and
add
cmp
and
cmp
leave
in
repz
outsl
mov
inc
call
cmp
mov
sub
dec
imul
sbb
inc
pop
mov
cmp
bound
adc
aam
aaa
add
leave
call
in
cmp
les
sub
loope
lds
daa
pop
pop
sub
pop
push
mov
ljmp
push
mov
pop
and
xchg
es
fiadds
xor
imul
mov
push
aaa
inc
or
movsb
lahf
and
and
jns
popf
inc
js
pop
popa
dec
mov
popa
jnp
and
addl
jp
adc
sbb
fistpll
aam
jns
jl
add
jnp
sbb
arpl
adc
sub
sbb
mov
in
sbb
movntps
test
mov
inc
clc
addl
imul
test
cmp
aas
in
xor
sbb
xchg
sbb
pop
cmpl
int3
inc
xlat
popl
cmpl
jnp
mov
and
xchg
js
aas
or
stos
cmc
arpl
jle
push
jecxz
lods
jle
lds
test
iret
and
dec
and
sub
out
mov
in
inc
dec
pop
ja
lcall
pop
rorb
repz
and
xor
pop
andb
out
addr16
pop
and
ret
mov
mov
or
iret
adc
popf
inc
stc
push
mov
subb
jno
mov
out
mov
mov
cmovs
aam
lahf
sarl
sbb
fwait
adc
loope
mov
mov
cmp
add
pop
lds
adc
or
dec
addl
insl
test
push
pop
cmpsb
jo
adc
inc
xchg
in
aas
dec
pop
dec
xchg
aaa
lcall
stos
mov
outsl
leave
addb
inc
test
stc
test
pushf
hlt
mov
mov
dec
pop
push
leave
pop
rorb
or
es
mov
mov
cmp
cmp
mov
adc
inc
call
fstpl
shr
in
mov
mov
cmpsb
push
daa
cmpsl
pusha
cmpsl
rorl
pop
insl
mov
pop
push
add
mov
rcll
or
aad
stos
les
repz
jl
or
lock
xchg
adc
push
and
add
scas
je
aas
pop
jge
int3
addr16
jle
test
mov
mov
ret
loopne
push
mov
jmp
jns
movsl
out
xchg
loope
mov
int3
xchg
mov
xchg
add
push
xchg
in
test
pop
pop
enter
lahf
in
cltd
test
cltd
fs
pop
add
lds
sbb
pop
adc
ja
ljmp
pop
nop
bound
pushf
mov
repz
aaa
mov
fldl
jge
xor
mov
sub
jns
imul
pusha
rcl
cmp
popa
mov
sbb
jno
adc
push
leave
sbb
jnp
je
sbb
sbb
and
inc
and
adc
in
sbb
fwait
jo
loope
jp
or
adc
pop
jae
cmp
mov
in
mov
pop
das
add
pop
popf
adc
push
adc
inc
sbb
jecxz
add
rolb
ret
push
sbb
stc
fs
mov
inc
mov
adc
flds
mov
xchg
push
adc
fimull
jge
dec
add
loop
aad
lret
jns
leave
push
test
push
ja
loop
popf
scas
lret
sbb
aad
shr
lret
jge
adc
adc
ss
cli
sbb
jecxz
sub
jl
dec
jno
mov
dec
sub
cmpsl
or
gs
sub
and
lock
cmp
lret
lds
aam
or
mov
dec
das
add
dec
cmc
jl
xor
ret
xchg
js
jns
call
rorl
sti
jnp
xchg
aam
mov
pop
jmp
pop
push
scas
inc
movl
push
js
fldl2t
or
ds
cmp
std
pop
sbb
stos
pop
cmp
push
inc
div
add
daa
shll
jo
gs
add
in
out
fsubrp
rcrb
and
test
add
stos
rcr
filds
out
dec
mulb
cmp
sbb
arpl
push
adc
in
std
outsb
ficompl
jl
add
add
mov
cmp
cmp
jne
add
outsb
mov
add
mov
filds
add
mov
sub
vprotb
pop
sbb
mov
dec
inc
rolb
mov
sub
enter
mov
stos
and
xor
push
ljmp
bound
dec
adc
outsb
and
mov
push
adc
add
and
gs
adc
addb
cmpsb
xchg
sub
sbb
xlat
mov
sub
gs
stos
pushf
or
aam
push
push
in
add
jb
xchg
add
lds
pusha
stc
daa
add
cmpsb
and
sbb
movsl
arpl
les
dec
ss
mov
and
outsb
push
popf
repz
xchg
adc
je
cmp
cwtl
pop
cmp
add
popf
dec
scas
je
jl
inc
ret
mov
mov
mov
pop
jle
in
sti
jo
in
mov
call
insb
aaa
or
mov
xchg
jle
adc
or
adc
addb
push
insb
std
fisttpll
mov
test
xor
stc
gs
test
test
or
jecxz
pop
xor
and
and
mov
adc
push
out
int
xchg
xchg
test
out
xor
adc
cwtl
call
dec
mov
xor
jnp
adcb
mov
mov
adc
fadds
sbbl
clc
mov
or
es
test
subl
loop
scas
add
sub
add
or
stos
addb
mov
imul
add
mov
dec
cltd
mov
subl
add
add
inc
arpl
loop
dec
cmc
ljmp
mov
outsl
hlt
or
js
dec
rcll
cmp
inc
aaa
hlt
dec
inc
popa
cmpsl
and
cwtl
or
pop
imul
andb
fimull
cmp
psubw
icebp
pmulhw
orl
xchg
mov
iret
sahf
add
dec
fisubs
push
fcomps
imul
sbb
out
popa
sbb
test
mov
mov
push
add
mov
add
pusha
and
ljmp
in
pop
arpl
mov
cmp
enter
push
cmp
gs
sub
sub
clc
jmp
pop
jg
loopne
in
pusha
cmpsl
and
push
loope
inc
fcoms
repz
or
mov
jge
js
and
adc
pop
inc
inc
jge
push
pop
mov
ds
andb
and
sbb
fs
pmulhuw
std
mov
popa
sub
sahf
out
xor
test
sbb
jp
push
mov
push
adc
xchg
inc
mov
bound
mov
rolb
imul
add
aad
cmp
lahf
dec
testl
shrl
and
cmp
pop
xchg
push
iret
pushf
ja
shll
mov
ds
aaa
jbe
dec
inc
and
pop
dec
jle
les
mov
jg
shlb
nop
mov
test
or
fwait
mov
adc
cmp
test
add
sbb
jno
mov
xchg
push
mov
xchg
decl
mov
xchg
dec
xor
pusha
lret
dec
mov
inc
jmp
popf
sub
xchg
shll
mov
fdivrp
mov
into
sbb
gs
push
inc
aam
or
mov
ja
mov
loope
rcr
or
scas
inc
fs
push
xor
and
out
fistpll
xlat
frstor
ss
or
mov
jne,pt
int
and
push
dec
adc
in
loopne
xchg
and
testl
mov
mov
lds
into
mov
push
pop
or
outsb
push
sub
gs
or
mov
fidivrs
or
mov
inc
pop
jno
dec
jp
pop
push
add
cmp
inc
movsl
xor
stos
icebp
insl
add
cmc
mov
jmp
mov
outsl
ret
rcrl
pusha
pop
mov
daa
pop
test
stos
ret
jmp
push
arpl
dec
inc
push
mov
mov
or
xchg
movsb
adc
or
xorb
inc
or
and
fwait
xor
test
test
push
mov
pop
adc
mov
lret
lcall
ficomps
stos
xchg
dec
lret
hlt
inc
push
jge
outsb
ret
push
lahf
cmp
xor
out
push
fs
mov
jne
adc
loopne
loop
ret
cmp
daa
out
nop
jno
clc
leave
ljmp
rcrb
scas
call
jb
ds
mov
and
mull
jle
sbb
in
cli
pop
lcall
in
xlat
rcr
or
es
dec
ds
daa
sbb
sarl
mov
jecxz
sbb
xchg
inc
sub
daa
dec
pusha
mov
les
or
rol
and
popa
mov
ljmp
cmp
std
clc
aas
les
pop
loope
inc
lods
dec
push
add
sbb
clc
daa
add
nop
jne
sub
xchg
inc
mov
lret
jbe
sbb
dec
mov
inc
insl
or
das
pop
xor
or
jno
aas
pusha
pop
sarb
jo
xchg
or
sub
sub
fsubrs
pop
and
ret
mov
jge
xchg
mov
pop
pop
pop
bound
adc
arpl
faddl
adc
sbbl
add
mov
pop
mov
popf
dec
jno
rorl
loope
in
dec
pop
cmpsb
nop
adc
lahf
push
nop
inc
and
in
and
out
mov
cmp
add
push
sbbb
bound
std
xchg
add
inc
aad
repz
ret
inc
adc
scas
mov
fs
inc
pushf
mov
xor
lds
push
push
xor
shll
dec
iret
xor
ret
int
cmp
popa
rcll
test
popa
xchg
adc
dec
jae
push
xchg
mov
jecxz
push
mov
cmp
scas
xchg
jp
xor
xor
in
dec
cmc
sbb
cmp
cmp
ret
pop
cwtl
lock
inc
jo
inc
sbb
sbb
push
test
dec
loope
xchg
jae
mov
faddp
pusha
jecxz
loope
mov
jp
sbb
cltd
arpl
xchg
sub
loope
adc
mov
pop
and
mov
rorl
inc
mov
cmp
pop
xchg
push
push
add
das
xchg
lods
or
jbe
lods
mov
xor
push
in
orl
outsl
pop
and
das
int3
and
sub
sbb
scas
pop
cmpsb
sub
adc
fwait
jg
js
bound
lock
sbb
cltd
jmp
jo
or
stc
pop
loope
sub
xor
std
int
and
mov
icebp
jne
push
xor
inc
dec
ja
jecxz
mov
jbe
cltd
and
fcompl
fstps
mov
dec
out
outsl
sub
xlat
and
icebp
adc
push
or
out
jmp
push
or
ret
sqrtps
addl
adc
outsl
rcr
outsl
mov
lcall
loopne
push
ret
mov
add
shl
inc
sahf
cmp
cmp
insb
push
lret
adc
push
dec
lods
sbb
nop
sbb
inc
pop
gs
jnp
loopne
add
add
mov
mov
inc
pop
ret
jg
xchg
test
push
lret
inc
adc
ljmp
sbb
inc
int3
mov
add
call
pop
lret
popf
push
mov
les
fistps
lods
int
sub
push
rcll
nop
jns
aam
stos
inc
add
xor
andb
pusha
jo
dec
roll
hlt
push
xchg
pop
mov
loop
adcl
daa
adc
in
movsb
cmp
dec
lods
sub
mov
enter
sbb
aaa
fsts
xchg
test
mov
in
or
mov
mov
pop
sbb
jno
enter
std
addr16
loopne
in
fiadds
sbb
jge
mov
jae
mov
inc
pop
mov
jecxz
fdiv
movsl
and
inc
and
push
popa
es
int3
jg
emms
cmp
sbb
mov
lcall
add
or
jmp
nop
repnz
ret
pop
movl
movsb
adc
push
or
mov
lods
lock
jg
sbb
xor
add
xchg
xchg
in
pop
inc
loop
insl
and
mov
cs
xchg
roll
lret
sub
jle
aaa
and
pop
ret
xchg
dec
loope
lret
std
pop
xchg
adc
fildll
mov
incl
sub
push
es
repnz
mov
out
outsl
add
xor
sub
or
jg
mov
adc
hlt
ss
outsl
pop
mov
or
sbb
or
scas
mov
xor
lock
mov
les
int3
ret
cmp
cmovp
mov
xor
add
cli
lods
xlat
outsb
mov
adc
mov
jle
rcrl
insl
push
popf
sub
inc
xor
sbb
cs
pop
xor
jg
adc
push
mov
jmp
inc
lcall
or
or
cld
pop
cwtl
inc
mov
sbb
and
loopne
or
cmp
add
aam
loopne
sub
lret
rcl
jbe
jp
cmp
outsb
stos
add
rorl
sub
test
push
pop
arpl
pusha
pop
dec
lret
add
mov
xchg
pusha
sbb
push
pop
icebp
les
push
xor
mov
loop
inc
push
mov
add
jge
orb
dec
mov
jbe,pn
push
jecxz
pop
sbb
outsl
mov
stos
jp
movsl
test
ljmp
push
fcomip
mov
mov
push
les
daa
mov
je
pusha
lds
xchg
mov
call
rolb
dec
inc
loope
and
mov
leave
add
outsl
jmp
adc
pop
cmp
push
sub
push
xchg
sarb
test
lahf
shr
adc
icebp
inc
movb
xchg
ds
or
fisubl
sahf
loop
das
adc
ds
in
scas
frstor
inc
nop
push
push
add
add
sub
pushl
sbb
or
ficompl
test
iret
lock
lret
outsb
out
add
add
mov
cmpsl
push
inc
out
dec
test
cmp
add
or
cmpsl
xchg
xchg
cmp
cmpsl
push
bound
xchg
js
sub
loopne
mov
jae
loop
les
xchg
jge
cmp
outsl
sbb
mov
idivl
stc
loop,pt
xor
into
lods
add
roll
mov
lds
sarl
repnz
cmc
dec
shrl
xchg
jge
dec
sbb
pop
push
aas
call
sbb
das
adc
xchg
dec
lods
inc
push
std
popa
es
pushf
bound
pop
les
hlt
xchg
in
out
sub
je
pusha
shll
mov
dec
mov
xor
in
or
dec
mov
sub
movsb
in
insl
int
xchg
and
arpl
fldenv
addr16
daa
bound
push
mov
or
jmp
jg
adc
pop
das
dec
pushf
ret
popf
jmp
enter
push
and
mov
in
aad
popa
cmpl
add
push
clts
sbb
jae
shlb
aas
lret
lea
mov
pop
arpl
dec
xor
addl
lock
adc
pop
push
addb
mov
xlat
scas
and
clc
sbb
xchg
cli
jg
xchg
jecxz
add
pusha
dec
pushf
hlt
enter
scas
mov
aad
xchg
sub
fimuls
repnz
js
leave
mov
pop
pop
mov
or
mov
rcr
push
add
enter
in
decb
inc
inc
pushf
out
cmpl
loope
es
int3
inc
dec
sbb
movsl
inc
jle
mov
mov
je
push
std
push
jg
add
bound
inc
addb
jle
sarl
inc
and
scas
insb
adc
xchg
int
inc
add
pusha
push
jmp
sub
jbe
out
add
lods
das
in
pop
sbb
pop
test
add
into
and
cmp
shr
or
stc
jns
mov
add
jno
inc
test
mov
cmp
mov
mov
or
imul
into
out
scas
cmp
cwtl
adc
stos
pop
mov
repz
adc
dec
sti
ja
mov
movsl
mov
into
mov
xchg
dec
and
inc
into
dec
sti
cwtl
scas
pop
sbb
inc
in
xchg
jl
jo
jo
sbb
out
ret
jp
test
test
gs
mov
dec
inc
int
push
scas
lock
push
outsb
or
clc
dec
fisubl
xchg
nop
xchg
mov
nop
fmull
lods
pop
push
add
call
or
adc
jmp
jle
add
push
add
fs
xchg
es
push
sbb
bound
mov
rorb
ret
scas
pop
aas
test
inc
cmpsl
lret
andb
jecxz
fst
dec
adc
aaa
push
mov
ret
call
xor
xchg
sub
imull
and
cwtl
push
push
notb
sub
pop
out
sbb
movsb
orl
daa
addl
js
jmp
xor
xor
adc
scas
pop
inc
cmp
push
cmpsl
mov
push
jecxz
push
dec
addr16
mov
inc
add
flds
scas
adc
aam
mov
adc
js
and
xor
adc
xorl
mov
inc
mov
fbld
out
cmp
mov
inc
not
loop
sete
push
or
xchg
xchg
repnz
sbb
add
shrl
iret
mov
pop
mov
jg
and
fisubrs
test
jnp
inc
add
insl
aas
push
adc
mov
ret
shrl
outsl
mov
xlat
pushf
xchg
fidivs
mov
push
rorl
mov
ljmp
jle
fs
mov
repz
mov
mov
mov
imul
adc
mov
les
mov
out
icebp
leave
out
js
sbb
bound
sbb
out
cmp
daa
repnz
outsb
and
out
mov
pop
xor
leave
adc
pushf
sahf
mov
outsl
push
lahf
push
inc
out
cld
mov
jne
mov
mov
outsb
std
aaa
or
mov
sub
jb
dec
adcb
es
addr16
scas
push
inc
xchg
out
sbb
scas
xlat
cmp
pop
add
outsl
sbb
xchg
lret
bound
idivb
fwait
mov
nop
inc
pusha
cwtl
imul
and
int3
or
stc
jns
lcall
add
bound
outsb
call
test
pusha
andb
inc
lea
sub
gs
jae
repz
push
or
jne
rolb
lods
add
mov
dec
dec
sbb
stc
in
addr16
or
inc
jmp
popa
mov
loop
gs
jecxz
cmp
push
popa
adc
dec
mov
fdivrl
movsl
aad
pop
testl
sub
jo
add
mov
lret
jg
push
sub
xor
loope
push
sbb
xchg
cmp
push
inc
cmpsl
xchg
cli
sbb
or
and
add
frstpm(287
cmp
sub
xchg
mov
cli
cmpsb
clc
cmp
and
pop
pop
fs
cmp
mov
test
or
daa
or
jns
lods
pop
repnz
fwait
cld
scas
and
mov
pop
outsb
xor
paddusw
push
inc
mov
out
jle
add
dec
add
pop
in
or
sbb
stos
gs
pop
cmp
sbb
and
sbb
ljmp
andb
xchg
gs
mov
dec
out
mov
lret
or
hlt
xchg
add
fs
popa
movsb
leave
jno
ret
pop
icebp
mov
jo
test
mov
iret
lret
dec
inc
out
adc
stos
cmc
fadds
pop
mov
or
das
xor
aaa
and
imul
hlt
lret
and
or
sbb
out
add
adc
xchg
lods
push
xlat
loopne
sbb
ljmp
cwtl
lods
xchg
jge
sbb
out
in
dec
mov
or
js
jle
push
ljmp
and
rcll
xor
jns
test
push
adc
imul
inc
xchg
data16
inc
into
int
pop
stos
lea
mov
int
clc
cmpsb
aam
call
es
or
mov
mov
and
push
inc
outsl
popf
sbb
fmuls
adc
dec
push
rol
and
mov
test
and
adc
inc
in
mov
sub
sub
outsl
push
sub
cmp
add
sub
pop
rorb
mov
sub
shll
sbb
popa
add
repnz
popf
xchg
addr16
add
mov
lock
inc
imul
ds
jg
mov
test
jno
ss
jnp
lods
xchg
push
and
nop
movsb
fiaddl
imul
enter
lds
mov
sub
mov
dec
or
and
jbe
outsl
jno
xchg
test
jns
add
idivb
loope
mov
iret
ss
sbb
jno
jmp
adc
xor
xchg
and
pop
mov
mov
outsl
lods
mov
mov
pop
ss
mov
push
aam
jle
jle
call
sbb
adc
pop
xchg
cmp
add
bound
jmp
cmpsl
push
push
shrl
fcomp
cli
mov
adc
out
mov
lock
add
xchg
rclb
xchg
mov
icebp
sbb
shll
scas
jne
xchg
mov
movsbl
push
pop
dec
movsb
fisttpll
cmp
add
dec
mov
add
cmp
dec
or
movsb
xchg
or
mov
rol
pop
cmp
sbb
inc
inc
inc
sub
nop
and
cmp
sbb
xchg
mov
push
rclb
insl
sub
push
or
xchg
ss
ret
test
addb
push
inc
mov
rclb
xchg
or
movsb
fcompl
daa
mov
mov
xor
push
mov
pop
inc
popf
or
adc
inc
sub
add
cmpb
push
dec
xchg
push
sti
das
pop
and
add
addl
mov
add
test
les
dec
fists
push
sbb
xchg
push
dec
sub
push
les
sbb
test
pop
sti
xchg
cmp
les
or
push
or
and
and
jo
inc
mov
mov
sub
xchg
inc
and
inc
inc
push
hlt
xchg
or
out
mov
or
inc
ljmp
add
pop
test
and
outsb
sbb
dec
cs
fldt
rol
imull
nop
addl
mov
xor
in
cmpsl
pop
jg
cld
add
scas
incb
int3
loope
and
cmp
xor
inc
or
or
cmpsb
xchg
int3
rolb
jnp
adc
sbb
and
leave
divb
das
mov
out
mov
idivl
in
xlat
add
loop
or
fisubs
cs
adc
cmp
arpl
mov
jae
rcrb
subb
pcmpeqw
dec
adc
mov
int
fwait
and
or
add
mov
or
insl
mov
lods
inc
xor
mov
jmp
pop
mov
push
mov
mov
cmp
enter
pusha
jne
lahf
xchg
cmpsb
push
sbb
jmp
sti
mov
mov
push
inc
pop
adc
daa
or
in
sbb
push
add
mov
test
negl
mov
mov
rclb
fwait
loope
ss
rcrb
loop
loopne
xchg
or
int3
mov
lds
add
mov
into
and
pop
add
mov
cmp
mov
xchg
notl
sbb
xor
pop
xchg
out
xor
rcll
mov
sbb
movsl
inc
in
scas
loopne
or
sub
subl
mov
push
inc
sub
lods
adc
cmpsb
pop
push
into
mov
loopne
mov
push
pusha
and
cmp
mov
mov
sbb
xlat
ja
lahf
rdtsc
pop
in
mov
test
sub
jp
sbb
xchg
cmpsb
inc
pop
push
sbb
ja
or
pop
test
mov
cmp
lahf
fimuls
insl
mov
icebp
mov
or
pop
mov
jnp
pushf
add
inc
xchg
dec
add
daa
scas
dec
add
and
add
and
add
lea
notl
cmp
fisttpl
and
cmp
inc
sbb
addr16
mov
xchg
shlb
movsl
divl
fstl
add
inc
pop
pushf
jge
dec
sbb
pop
cmp
cmc
dec
sbb
shlb
push
inc
jo
insb
pushf
rolb
lods
maxps
pop
loopne
andl
les
lock
pop
jp
adc
pop
cmp
ret
mov
stc
dec
in
lock
or
and
xchg
in
sbb
sbb
add
pop
jl
and
pop
dec
sbb
cld
cmp
ret
xlat
mov
sbb
xor
cmp
outsl
xor
xchg
cmp
insb
imull
decb
rclb
cmpsb
mulb
pop
push
or
arpl
add
pop
imul
jnp
popf
out
scas
push
or
es
jno
or
add
mov
les
lods
or
dec
cmpl
and
movsb
inc
in
ja
ljmp
stos
push
push
test
xorb
insl
xchg
pop
clc
pop
loopne
ss
and
xor
fwait
movsl
ret
lahf
insb
or
inc
jle
shlb
popf
inc
inc
lods
and
dec
std
and
inc
scas
lock
mov
pop
inc
push
movzwl
shlb
punpcklbw
xchg
add
shlb
jnp
in
popa
cli
ficompl
push
dec
mov
push
jg
adc
mov
fsubl
int
push
notb
jecxz
loope
iret
pop
or
pop
dec
in
movl
mov
and
int
in
xor
js
or
jo
add
pop
sbb
pusha
inc
js
in
daa
int3
add
hlt
fsubrp
or
sti
cs
int
pop
sub
rcrb
insb
loope
sbb
nop
mull
jae
mov
out
fstps
loopne
pop
imulb
andl
ja
pop
pop
push
sub
jbe
les
mov
fneni(8087
lret
in
fwait
ljmp
leave
insb
push
inc
and
add
test
popa
cmp
xchg
mov
inc
stos
icebp
stos
lods
and
sbb
mul
xchg
or
out
cmp
jl
and
inc
cwtl
push
cmp
bound
pop
mov
inc
mov
xchg
and
jmp
sbb
push
cmp
push
call
jb
or
outsb
rcrb
add
test
xchg
in
shll
shrl
and
outsl
loop
push
sub
and
pop
out
or
or
out
pop
dec
or
sub
bound
repz
and
ror
add
call
lods
sub
int3
aaa
sub
pmullw
ret
scas
jg
dec
insb
test
adc
pop
mov
push
in
in
add
or
adc
push
xchg
pop
lock
addb
add
fsubrs
addb
in
jmp
clc
and
push
out
int
scas
sbb
into
dec
pop
test
push
mov
fimuls
imul
in
pop
jno
inc
cli
or
jo
or
add
loop
sub
cmpsb
es
or
pop
or
xchg
push
inc
test
and
push
pop
mov
mov
inc
and
pop
sbb
sbb
stos
cs
push
mov
mov
jns
jmp
jb
sub
ljmp
dec
or
pop
add
pop
mov
push
cld
adc
push
push
out
fstpl
inc
add
or
or
inc
sbb
or
jle
leave
int3
rorl
cs
aam
xor
xor
inc
jb
sbb
pop
ret
pop
mov
add
dec
ja
xchg
ret
ret
je
sub
lret
pop
push
or
mov
push
or
and
push
lock
es
sbb
jbe
jb
and
xchg
or
jo
dec
inc
inc
lea
or
jns
mov
or
adc
push
gs
adc
loopne
rcl
push
or
pusha
sub
xor
into
outsl
sti
in
dec
mov
clc
cmovp
out
enter
cmp
dec
adc
mov
jge
clc
bound
add
add
popa
jle
cwtl
fs
cmpsl
or
movsb
push
add
pop
pop
mov
push
pop
lods
xchg
dec
xor
push
mov
mov
add
mov
mov
dec
inc
pushf
int
xor
mov
jnp
push
sub
sub
mov
mov
cs
sub
sub
cmp
std
xchg
sub
or
jl
adc
jmp
sahf
mov
xchg
or
orl
mov
lret
dec
repnz
add
mov
loop
test
dec
mul
or
lods
inc
data16
cmp
ret
sub
add
dec
jae
test
cmp
push
pop
pop
cmp
xchg
adc
add
cmpsl
pop
out
pop
shlb
pusha
sub
jb
mov
cwtl
cmp
sub
cmp
add
dec
inc
lret
scas
add
mov
add
movsb
fistpll
dec
push
dec
mov
add
and
pop
push
pop
xor
mov
push
rcll
sbb
dec
fs
imul
pop
rsqrtps
pop
pop
adc
sbb
or
inc
orl
or
inc
orl
sub
rcrl
adc
lcall
mov
sbb
and
call
pushf
add
iret
wbinvd
sbb
or
xchg
inc
add
xchg
push
rolb
test
addl
aam
movb
push
sub
cmp
cmp
stos
and
sub
ss
push
xchg
popa
pop
adc
adc
subl
pushf
adc
popa
cmp
and
addl
loopne
push
jl
add
mov
test
add
sbb
or
incb
add
xchg
xor
ja
mov
cltd
fadds
push
mov
sbb
and
xchg
stc
pop
cmp
lahf
cmp
xchg
pop
test
mov
xor
addb
test
iret
mov
sti
loopne
inc
out
or
inc
push
nop
stos
mov
mov
pop
push
lods
sub
lods
lods
outsb
insl
call
mov
inc
js,pn
ret
insl
dec
loopne
mov
test
xor
and
lea
stos
gs
cltd
pop
js
mov
ret
int3
test
sub
or
push
adc
xchg
add
jmp
ret
adc
leave
rorb
xor
ss
mov
fists
inc
testb
and
dec
dec
mov
sbb
lahf
in
insl
xchg
add
inc
je
pop
insb
lret
test
add
xchg
sbb
push
push
jle
into
inc
fcmovnb
xchg
or
xchg
out
inc
sub
jecxz
imul
mov
and
or
or
inc
push
inc
adc
and
xchg
dec
inc
inc
push
mov
dec
mov
push
lods
add
and
int3
insl
test
orb
outsb
mov
repz
jle
add
mov
and
jecxz
lret
or
lods
or
call
faddl
or
daa
repz
roll
lock
dec
cltd
in
mov
push
jne
xor
mov
xchg
test
out
push
lods
lret
sbb
test
xchg
leave
enter
push
lods
or
sub
in
cs
pusha
mov
pop
mov
outsl
add
inc
test
lret
mov
inc
inc
ficoml
lods
or
sbb
lods
in
xchg
mov
push
repnz
lea
mov
and
sub
sub
jns
or
gs
fistpll
aas
shl
imul
or
or
popf
cs
cmp
xor
jecxz
repz
jne
lahf
xchg
mov
mov
pop
lret
dec
nop
insb
outsb
sub
lahf
movsl
imul
dec
stos
scas
pop
test
xor
cmp
dec
jecxz
test
dec
mov
dec
dec
sub
or
add
sbb
sub
push
movsb
les
inc
out
mov
sub
psrad
cltd
lret
fwait
mov
int
xchg
loop
xchg
scas
pop
popa
dec
sbb
add
cwtl
lcall
sub
test
lds
or
push
lods
testb
aam
shrb
fmul
aas
in
or
sub
dec
sub
lods
test
add
lcall
or
lret
mov
mov
mov
dec
pop
dec
mov
adc
and
xor
inc
xchg
add
cwtl
push
arpl
dec
aad
scas
and
fsts
push
imulb
and
push
cmp
add
adc
adc
adc
pop
dec
fadds
push
sub
mov
lods
dec
sub
push
nop
push
mov
mov
in
push
mov
xor
or
and
or
in
ljmp
and
xchg
and
nop
and
test
mov
mov
push
cmp
dec
dec
inc
jb
inc
mov
int3
faddl
dec
loop
xorl
out
mov
mov
mov
sbb
lock
mov
shrb
dec
push
sub
aad
int
add
mov
xchg
add
adc
adc
xchg
inc
call
orb
pop
bound
out
add
and
repz
jb
jno
jnp
leave
push
inc
add
push
push
or
mov
les
call
popf
cwtl
pusha
push
outsl
sub
hlt
mov
xchg
inc
push
gs
mov
add
adc
add
or
lret
dec
inc
scas
dec
or
cmp
mov
fists
inc
pusha
mov
mov
pop
mov
in
test
js
in
add
aas
push
cmpsl
inc
addr16
or
push
adc
test
xchg
xor
lods
insl
sub
xor
mov
push
leave
sub
or
lret
int
out
out
mov
mov
push
clc
jecxz
sahf
mov
jl
in
dec
pop
push
cmc
insb
jmp
jle
and
insl
mov
push
dec
push
sub
jge
mov
dec
cmpsl
lods
insl
sbb
insl
add
pop
cwtl
stos
fnstsw
movsl
jnp
sub
add
in
xchg
das
mov
scas
jl
or
jno
push
pop
mov
data16
insb
inc
subb
call
mov
loopne
mov
dec
adc
cli
add
jmp
gs
or
mov
inc
cmp
ljmp
add
scas
push
push
sub
ret
cmp
roll
mov
xchg
jmp
adcb
jmp
test
roll
test
mov
add
pop
scas
and
mov
inc
mov
dec
popa
xor
sbb
nop
or
add
add
insb
and
jno
push
loopne
push
mov
add
jno
mov
insb
mov
add
add
xchg
lret
jno
test
insb
movl
pusha
add
or
adc
pop
and
and
dec
daa
xlat
test
push
mov
and
and
inc
arpl
mov
cli
sub
or
add
andb
and
mov
mov
and
add
and
and
repz
add
and
dec
push
ljmp
sbb
dec
pop
in
inc
or
lret
mov
xor
add
pusha
inc
mov
insb
sub
and
adcl
add
and
lret
inc
inc
sub
xor
and
xorb
inc
xchg
xor
test
sbb
pop
add
popa
push
and
dec
xor
and
loopne
and
jb
xor
ljmp
sub
shrl
shrb
subl
je
and
fs
and
call
cmp
in
xchg
cmp
mov
jo
mov
test
leave
jmp
ljmp
in
xor
cmp
or
icebp
inc
and
leave
imul
or
fsubp
pusha
xor
mov
es
cli
test
mov
adc
icebp
pusha
iret
leave
xchg
and
jmp
aas
fdivs
lods
aas
jmp
sub
mov
sti
push
shrl
mov
or
or
sub
loopne
adc
addl
mov
cmc
rolb
iret
cltd
daa
lock
sub
pop
adcl
sub
fwait
and
lods
dec
int3
fwait
bound
xor
mov
xor
fwait
call
or
int
orb
sbb
sub
cmp
gs
stos
inc
test
inc
subl
mov
xor
pop
sarb
mov
and
andl
mov
aam
lods
outsb
into
dec
out
pop
iret
sbbb
out
rorb
xor
mov
outsb
out
dec
scas
cmp
push
mov
mov
outsl
jecxz
mov
test
movsl
inc
mov
or
mov
or
and
pop
outsl
or
ficomps
rolb
and
add
test
add
fmull
in
nop
add
int3
test
leave
outsb
and
cmp
add
nop
pushf
pop
call
add
fucomip
dec
add
in
jo
jmp
test
and
push
out
cmpsb
push
inc
les
sub
or
inc
sbb
rcr
adc
adc
dec
mov
jle
pop
fmulp
or
or
or
pop
add
out
xchg
out
cmp
roll
cmpsb
es
lahf
jnp
cmp
adc
adc
push
inc
orb
xor
adc
lds
out
or
add
das
gs
pop
dec
or
imul
popa
inc
mov
orl
mov
sub
ja
mov
int3
out
test
out
mov
adc
mov
xchg
fsubs
fmul
or
push
inc
loop
daa
add
cmp
lea
jecxz
pop
test
in
test
in
je
add
add
cmp
js
jge
or
dec
xchg
add
adc
out
sarb
scas
mov
push
into
add
lea
dec
or
jmp
inc
and
int3
or
fldz
adc
mov
andl
xor
pushf
out
dec
dec
ljmp
push
pop
or
add
or
lea
stos
mov
in
or
imul
dec
cld
lret
or
push
test
add
or
xchg
add
or
mov
jmp
inc
push
stc
subb
add
or
jecxz
ljmp
mov
enter
imul
out
push
negb
mov
int3
adc
fiaddl
xchg
shrl
jmp
sbb
gs
lret
sahf
or
roll
in
push
loope
popa
andl
shrd
or
or
push
call
cmp
sahf
push
pusha
rcr
inc
push
inc
xchg
mov
fdivrs
jmp
imul
adc
stos
sub
sub
lods
or
in
or
dec
pusha
lea
push
iret
out
out
add
outsl
mov
cmpsb
shlb
pop
mov
pop
ret
mov
cmp
fs
cmp
inc
arpl
loope
mov
or
push
dec
add
addb
daa
notb
and
push
loop
xor
pop
ret
into
clc
cmp
loop
adc
pusha
jg
sub
ret
push
lock
mov
xchg
cmp
fidivs
or
adc
adc
inc
cmp
sbb
mov
das
movsb
test
insb
cwtl
pop
cmp
pop
sbb
jns
and
mov
xchg
out
jnp
jge
pusha
push
add
out
xchg
in
aaa
insb
sbb
or
jecxz
aas
nop
inc
add
loopne
push
add
aas
shl
mov
xor
stos
dec
fists
stos
mov
fimuls
bound
add
mov
ret
faddl
mov
add
fldenv
jle
inc
rol
mov
mov
stos
or
pop
add
pop
or
frstor
das
jmp
cmp
out
add
scas
and
stc
aad
jmp
sbb
loope
insb
andb
subb
jnp
cmp
sub
aas
fistpll
pop
sbbl
pop
cltd
outsl
loop
in
loopne
roll
xchg
inc
clc
push
sbb
cld
cmc
lret
jno
pushf
mov
popa
ds
dec
cmp
cmpsb
lock
push
add
out
out
mov
mov
add
jge
loopne
cwtl
add
out
push
add
fnstsw
push
cs
jge
pop
and
fisttpll
arpl
flds
addb
mov
and
xor
subb
add
les
fsubrl
cld
xchg
add
inc
shrb
aas
aam
inc
cwtl
dec
xchg
inc
ret
inc
pop
dec
cwtl
sbb
sub
mov
movsb
aas
fldl2t
inc
imul
inc
inc
push
mov
int3
lods
icebp
fcompl
fidivs
lahf
lea
mov
in
jecxz
loope
add
inc
inc
sub
ficoms
mov
cmpb
pop
cmp
mov
arpl
add
sub
aad
dec
inc
movsb
sub
inc
orb
xor
ljmp
sub
pusha
in
loop
jns
sbb
loopne
inc
popa
and
pop
mov
in
push
push
aas
pusha
pushf
dec
sub
and
jno
mov
stos
insl
sbb
fistpl
add
jo
jo
sti
out
pop
cld
arpl
sbb
test
pop
scas
out
incl
push
jnp
adc
adc
push
jns
adc
orl
push
mov
sbb
popa
dec
mov
xchg
jl
sbb
lcall
sbb
push
fnstsw
adc
mov
mov
sahf
lcall
shl
and
and
jp
cld
out
test
sbb
shlb
xor
dec
xor
push
mov
and
imulb
add
orl
test
inc
xchg
out
rcll
fldl
int
lods
jmp
ficoms
aaa
pusha
mov
shl
int
in
loope
popf
in
xchg
cs
and
lcall
dec
sub
jmp
ret
jecxz
pushf
and
movl
lds
add
sbbb
mov
and
dec
out
lea
pop
sub
mov
pusha
shlb
in
adc
and
es
xchg
xorb
mov
jno
jno
mov
sbb
xor
sbb
cmp
add
mov
mov
mov
jo
fiadds
push
outsb
add
iret
xchg
sbb
cs
scas
popf
mov
xor
or
push
pop
or
or
jbe
push
in
pop
dec
repz
adc
and
inc
push
push
mov
push
movsb
test
int3
in
xchg
xchg
int3
push
adc
inc
cmc
lods
insl
xchg
scas
mulps
push
lock
jl
je
dec
add
pminsw
sbb
pop
jbe
into
mov
les
or
mov
pop
into
dec
cmc
popf
inc
and
pop
ds
or
cmpsb
outsb
into
inc
mov
decl
or
out
lock
add
leave
mov
or
mov
mov
lret
add
pop
add
lea
sbb
push
loope
push
leave
sub
cmp
movsl
shlb
dec
xor
add
andb
mov
pusha
lds
lcall
mov
mov
imul
pusha
xor
dec
lcall
enter
out
push
sub
lret
stos
jbe
and
ret
xor
dec
or
or
in
inc
jne
xchg
imul
mov
push
imul
test
and
lods
pop
sbb
sub
insb
int
inc
adc
or
push
lods
push
aaa
jb
aaa
int
push
add
jecxz
cld
cs
jp
pop
cmp
sub
and
mov
and
dec
pop
or
movsb
and
pop
xor
inc
lcall
std
mov
mov
mov
lock
leave
lock
outsb
push
mov
push
adc
fs
addb
jp
pop
mov
pop
push
or
test
xstore-rng
cmpsl
add
aas
jno
mov
xlat
shlb
leave
dec
inc
call
or
lods
rolb
inc
iret
test
jo
test
jo
test
dec
test
loope
int
xchg
and
push
cli
cmc
adc
popf
mov
vpsubq
cmpsb
pop
pop
jno
jnp
out
aad
stc
push
xchg
insb
mov
rcr
dec
shrb
outsl
xchg
xchg
clc
loop
in
cmp
lods
lcall
xchg
dec
decl
dec
cltd
dec
push
int3
int3
sub
add
lods
mov
jnp
in
mov
lods
mov
ljmp
rorl
dec
pop
loop
mov
mov
or
lcall
shr
lods
insl
movsb
xchg
inc
add
arpl
scas
std
adc
test
sbb
pop
idivl
imul
fcom
cmpsb
and
mov
xchg
push
and
jecxz
dec
dec
shlb
push
subl
popa
sbb
dec
fs
iret
mov
call
scas
inc
insb
outsl
pop
gs
fisttps
int3
mov
add
repnz
jmp
dec
adc
repnz
or
lcall
stc
sub
insl
cmpsb
cwtl
arpl
mov
shld
jecxz
inc
mov
into
mulb
xchg
xchg
jge
loope
into
inc
xor
cmp
mov
leave
out
add
dec
ja
xchg
test
in
arpl
dec
outsl
xchg
dec
pushl
enter
and
mov
push
xchg
dec
cltd
in
push
les
push
mov
test
pop
mull
push
stos
outsb
adc
lods
xchg
adc
and
lcall
pop
cmpsb
push
jle
out
or
lcall
repnz
push
pop
les
pop
mov
aad
xchg
push
sub
cmp
or
dec
push
adc
inc
mov
movsl
sub
sub
xchg
sbb
add
addr16
push
leave
xor
test
lods
test
fwait
add
jge
lcall
sub
inc
dec
xchg
pop
lcall
in
inc
inc
mov
sub
mov
test
pop
fisubrl
push
xchg
lret
es
xor
jmp
push
mov
mov
xchg
xor
int3
cld
in
or
in
sbb
mov
test
les
cmp
popf
adc
add
ja
scas
test
push
and
out
add
add
mov
or
rclb
cmpsb
mov
push
or
mov
mov
ja
outsb
imulb
bound
das
and
scas
jb
das
hlt
out
loopne
jne
out
daa
hlt
mov
or
int3
mov
sub
hlt
and
add
sub
ljmp
gs
jge
dec
rorb
add
sbb
test
shll
mov
cwtl
or
xchg
cwtl
lds
sub
out
es
cld
imul
aaa
mov
add
scas
sub
dec
repnz
or
jge
test
sbb
es
inc
push
mov
jmp
aad
inc
mov
adc
or
movl
testb
lds
imul
mov
jbe
lods
gs
jg
dec
je
sub
stos
pop
out
mov
mov
mov
fcmove
sub
loop
xchg
lret
iret
and
out
nop
push
mov
outsb
mov
cmp
push
testb
fucomp
lock
sarl
out
mov
mov
jb
xchg
pushf
out
mov
or
push
aad
mull
dec
mov
cwtl
into
or
adc
inc
fcmove
repz
sub
xor
loope
or
jne
or
divl
sbb
mov
lret
jecxz
loop
mov
outsl
stos
fmull
sub
dec
jo
mov
and
iret
test
mov
ret
enter
outsl
rolb
inc
and
sub
push
or
jle
dec
outsb
push
pusha
fsubp
sub
and
push
aam
in
inc
dec
push
xor
in
andb
add
insl
push
cmpsb
pop
filds
std
mov
popf
sub
roll
cld
test
push
lods
or
xchg
call
es
sub
cmp
dec
sub
sub
add
dec
pop
int
es
enter
cmp
cwtl
test
lods
xchg
call
out
es
ds
lods
ret
jle
xlat
jp
lret
mov
cmp
pop
or
ja
orb
push
jp
inc
mov
mov
cmp
push
sbb
gs
xchg
mov
iret
mov
dec
dec
jmp
inc
stos
mov
fcoms
ret
lea
push
aaa
push
adc
imul
push
test
dec
das
add
shrl
shld
dec
lds
inc
clc
xchg
leave
mov
xchg
push
xor
dec
outsb
iret
nop
loop
dec
sbb
cmc
sub
stos
test
lcall
xchg
orl
nop
add
jmp
test
scas
stos
add
arpl
out
cmpsb
loope
push
mov
inc
cwtl
sbb
cmpl
push
add
push
inc
popf
lds
add
mov
or
loopne
out
movsl
iret
inc
fstpl
pop
sub
jne
sub
add
xchg
add
lods
push
subb
xchg
std
fadds
jge
xorb
add
pop
icebp
jbe
popf
loope
cmpsl
aas
inc
lret
xor
popa
lret
cltd
aaa
dec
loope
mov
mov
lods
je
or
sub
imul
dec
jecxz
lock
addr16
in
sub
mov
ljmp
adc
xchg
jle
fldenv
mov
push
push
pop
dec
das
add
dec
mov
test
daa
dec
push
out
jbe
xchg
and
add
pop
xchg
jne
mov
call
xchg
loop
sub
loop
push
daa
out
xchg
mov
sub
stos
mov
mov
mov
push
and
xor
jg
int3
or
ret
test
mov
fisubrl
xor
cmp
sbb
xorl
scas
inc
push
push
lea
pop
sahf
mov
add
lahf
or
test
jno
lret
push
mov
test
dec
leave
lahf
popa
jne
es
xchg
imul
cmc
popa
mov
jge
cmpsb
sub
je
jns
dec
test
pop
ret
add
xchg
int3
outsb
rorl
stos
lods
repnz
insb
inc
popf
jo
test
or
dec
push
inc
mov
sub
inc
addl
dec
xor
cltd
loope
or
insb
call
lret
cmpsl
xor
ja
pop
cmp
sbb
jne
ret
sub
cmp
pop
mov
inc
dec
inc
xchg
xchg
xor
into
add
jae
ja
or
dec
cli
lahf
sub
mov
mov
mov
and
aaa
jo
ret
xchg
xchg
es
je
jne
iret
roll
sbbb
adc
lock
push
mov
xor
push
repz
pop
and
aad
in
xchg
mov
es
cltd
cmp
enter
outsb
repnz
jecxz
xchg
jmp
push
add
das
dec
dec
and
pop
sbbb
test
dec
inc
fiadds
push
cltd
adc
movsb
xchg
test
dec
cmc
or
mov
enter
xchg
rorb
mov
movsb
jno
mov
xchg
xchg
out
sub
dec
mov
outsl
pop
aad
inc
bound
imul
push
rorb
pop
add
shl
out
push
push
adc
mov
inc
mov
inc
xchg
es
add
int
shll
sub
insb
add
aam
or
jno
test
sbb
popl
enter
lds
dec
stos
dec
roll
mov
push
test
dec
test
cmpsl
ret
iret
arpl
imul
sub
cmp
cmp
push
lahf
lret
pop
addr16
sbb
dec
mov
mov
scas
or
push
xchg
pushf
push
dec
movsb
daa
mov
cmpsl
jbe
ror
mov
subl
push
addb
inc
pop
inc
adc
scas
dec
lods
repnz
in
cmp
xor
xor
jge
xlat
jle
mov
rorl
mov
mov
or
add
daa
sub
test
lods
les
ret
push
test
movsl
jle
nop
hlt
data16
mov
sbb
sti
movsl
addr16
sub
loop
data16
cmp
pushf
xchg
pop
xchg
sub
test
test
in
add
and
sbb
xchg
jp
stos
cmp
cmpsb
fmull
add
repz
les
cmpsb
ljmp
out
mov
xchg
dec
mov
clc
push
data16
jae
inc
pop
cld
stos
push
sbb
out
mov
mov
push
dec
movsl
movsl
xchg
sbb
pop
aam
loop
cmp
xchg
jne
js
push
add
lods
push
aas
or
cmp
sbb
int
jno
fnstcw
sub
sub
mov
test
das
ljmp
mov
sbb
stos
push
or
imul
sub
ljmp
xchg
sub
popf
dec
and
mov
scas
push
mov
rorl
pop
dec
add
scas
jmp
in
scas
pop
shrl
scas
dec
add
push
sti
les
and
jp
mov
or
inc
xor
or
loope
imul
outsb
jmp
stos
jge
mov
xchg
push
rcrb
nop
out
out
dec
xchg
out
push
imul
bound
push
dec
out
mov
dec
nop
stc
xor
sub
scas
mov
stos
push
ret
xchg
and
sub
insb
jle
sub
xchg
cmpsb
pushf
imul
mov
pushf
out
xor
and
test
stos
dec
push
dec
push
and
cmp
mov
cmp
xchg
push
jl
cmp
push
add
inc
dec
int
cmc
dec
dec
stc
rcrb
xchg
mov
jne
ss
cmp
outsl
sbb
out
mov
inc
sbb
aas
mov
jmp
fucomp
mov
xchg
imul
dec
add
in
jmp
leave
aas
imul
movsb
movsl
aas
mov
mov
inc
push
jmp
dec
push
sub
sbb
lea
stos
testl
adc
mov
dec
in
out
aas
add
flds
sub
in
or
cli
inc
cmp
or
xor
icebp
push
and
or
sbb
testb
aaa
adc
jp
aam
mov
sbb
dec
pop
mov
out
sbb
xor
bound
cmpsb
xlat
jge
lea
addr16
loopne
jle
add
ret
data16
imul
daa
xchg
rorb
test
add
add
insl
inc
mulb
or
cmp
ror
repnz
out
dec
repnz
stos
cmp
lahf
ja
jmp
daa
jl
push
roll
movhps
int
push
test
pop
das
aaa
test
mov
in
fldcw
cmpsb
xchg
or
xchg
insl
in
pop
nop
push
xor
xchg
push
imul
ss
scas
sub
push
testb
into
sbb
insb
loope
fmuls
xchg
call
add
aas
pop
das
outsl
in
insb
inc
imul
push
je
mov
xchg
xchg
rcrl
inc
int3
mov
out
out
mov
sbb
std
inc
xor
addr16
lcall
push
xchg
inc
int3
sub
inc
sbb
pop
cmpsl
cld
jb
lcall
insl
arpl
push
pop
xchg
insb
cmpsb
or
add
mov
push
push
pop
pusha
lods
push
cwtl
inc
mov
jnp
lahf
out
jne
pop
dec
mov
mov
hlt
mov
cmp
ss
test
xchg
mov
sahf
test
jnp
sar
pop
jmp
dec
jns
push
jmp
cwtl
dec
dec
mov
ljmp
push
es
mulb
out
int3
in
stos
subl
imul
in
dec
and
xchg
xor
mov
mov
fdivr
test
jmp
fmull
jecxz
pushf
push
fs
in
test
pop
cmpsl
inc
mov
push
out
lcall
jae
cmp
scas
stos
sub
scas
stos
push
movsl
insb
in
sub
jecxz
cmpsb
sub
xor
sbb
call
sub
mov
adc
push
dec
mov
sub
int3
int
pop
lods
lds
inc
dec
pushf
pop
out
popf
test
push
ljmp
push
mov
jg
and
pop
push
or
movsl
xchg
out
jmp
pop
cs
les
int3
and
in
dec
mov
enter
pop
imul
insl
sbb
push
aad
int
adc
mov
sbb
les
call
loope
or
mov
xchg
test
fwait
xchg
arpl
cmp
cmc
rolb
dec
mov
dec
ficoms
movsl
cmp
mov
adc
jne
icebp
inc
push
push
push
call
jmp
push
dec
or
gs
in
and
in
int
daa
adc
dec
mov
sti
push
fcomi
test
or
loope
scas
leave
xchg
or
outsb
sub
adc
mov
lods
mov
inc
test
push
lock
inc
hlt
loop
dec
sub
scas
push
adc
pop
mov
sub
leave
scas
stos
xor
cmpsl
mov
push
and
sub
mov
push
inc
mov
es
mov
dec
adc
pop
push
into
mov
sbb
sarb
mov
insl
or
or
and
fs
pop
add
add
test
out
sub
push
mov
xchg
enter
test
shrl
pop
sub
movsl
in
cs
cli
pushf
mov
fldl
xor
imul
xor
mov
stos
outsl
xlat
jbe,pn
lahf
movsl
rolb
stos
and
xor
and
push
mov
push
xchg
test
mov
inc
sub
inc
outsb
div
icebp
pop
call
pop
mov
inc
mov
push
inc
xor
test
xlat
dec
test
pop
push
mov
adc
add
orl
test
out
into
insb
leave
and
xor
xchg
add
mov
mov
mov
inc
leave
insl
fldl
jmp
imul
and
outsl
mov
insb
sbb
ds
mov
dec
push
mov
xor
movsl
xchg
xor
mov
mov
push
enter
mov
mov
in
xor
in
das
fsubr
add
outsb
jmp
in
lods
ds
dec
dec
pop
mov
pop
add
pop
ret
adcl
jge
lea
inc
fstpt
movsl
iret
dec
scas
mov
negb
sbb
lret
adc
outsl
sub
or
mov
sub
mov
cmpsl
aam
xchg
movsb
leave
into
adc
fs
int3
and
imul
and
in
xor
dec
shl
pop
dec
dec
repz
inc
xchg
adc
jne
or
mov
sbb
xor
add
mov
andb
sub
add
movsb
insb
scas
cmpb
call
daa
fiadds
loope
in
push
addr16
mov
pop
add
push
lret
push
aam
loope
int3
xchg
popa
inc
in
stos
inc
popf
xchg
inc
je
push
pop
and
insl
add
insl
pushf
add
daa
push
out
pop
dec
push
mov
cmp
xor
stos
repz
adc
and
call
xchg
or
das
mov
push
dec
or
xchg
inc
addb
inc
cmp
pushf
sbb
pop
mov
xchg
push
xor
push
add
adc
or
nop
dec
test
mov
daa
or
add
or
inc
test
sbbb
mov
cwtl
test
add
xchg
push
adc
xchg
fisubl
xor
xor
xchg
add
add
adc
or
or
test
mov
inc
test
pop
cltd
inc
test
cmp
pop
mov
fbld
adc
or
xor
xchg
and
xchg
or
enter
orb
orl
inc
addb
add
lcall
add
pushf
sbbb
xchg
or
xchg
add
add
mov
adc
nop
xchg
or
test
or
xchg
addl
inc
add
and
add
sbb
cltd
xchg
push
mov
mov
push
xorb
adc
cs
mov
xchg
inc
or
adc
xchg
or
mov
push
xor
pop
test
orb
sbbl
push
xchg
pop
add
or
adc
orl
or
xchg
dec
sub
inc
add
adc
test
xor
adc
cwtl
sbb
add
add
mov
xchg
dec
add
adc
add
xchg
mov
adc
addl
and
inc
jg
cmp
test
xchg
sbb
cltd
push
xorb
adc
xchg
add
add
adc
push
nop
or
sub
dec
or
xchg
dec
and
add
add
pop
add
dec
cwtl
mov
pop
cmpb
pop
test
xchg
xchg
xchg
xchg
mov
xchg
test
add
adc
xchg
mov
sub
inc
add
add
addb
cmp
and
subl
xorb
push
mov
xchg
dec
sub
mov
sub
or
xchg
inc
add
add
addb
dec
in
pop
cmp
and
subl
xorb
push
or
adc
xchg
or
mov
add
adc
or
addl
aaa
fisttpll
call
aaa
std
add
mov
push
test
or
das
adc
lea
test
adc
mov
and
add
test
xchg
add
pop
add
adc
mov
adc
adc
adc
test
test
xchg
dec
sub
mov
daa
adc
mov
addb
add
mov
cmpb
pop
mov
xchg
push
xor
push
add
mov
adc
or
add
add
or
mov
add
cmp
inc
test
ss
add
adc
or
adc
or
and
add
test
add
or
adc
xor
push
mov
xchg
push
sub
or
sub
or
xchg
inc
add
add
xorl
adc
add
xchg
cltd
cmp
or
or
add
xor
subb
dec
or
adc
xchg
or
add
bound
dec
and
aam
adc
sbbl
push
adcb
dec
add
dec
add
or
mov
add
adc
xchg
sbb
add
lcall
xchg
push
mov
mov
push
xorb
adc
das
xchg
mov
xchg
dec
or
adc
xchg
or
mov
xchg
test
add
mov
xor
adc
xchg
or
xchg
or
orb
add
inc
andb
pusha
andl
pop
test
or
popf
pop
cmpb
pop
mov
xchg
adc
xchg
mov
das
adc
lea
add
adc
or
xchg
add
or
pop
addb
mov
pop
cmpb
sbb
cwtl
or
adc
add
dec
add
dec
add
test
sub
test
xchg
inc
mov
ss
test
sbbl
add
add
adc
xchg
or
adc
add
inc
test
add
addl
mov
xor
pop
add
pop
add
adc
or
adc
das
xchg
push
or
adc
or
xchg
add
mov
adc
adc
popf
add
add
adc
xor
push
or
adc
xchg
or
mov
add
adc
or
addl
test
xchg
mov
cwtl
test
test
xchg
push
xor
push
add
adc
mov
mov
test
xchg
add
and
pop
push
add
mov
add
xchg
dec
and
subl
adc
add
add
mov
mov
es
add
and
cmp
add
add
adc
or
xchg
xchg
xor
push
adcb
dec
test
or
sub
test
xchg
andb
inc
mov
adc
test
push
sbbb
push
test
mov
xchg
mov
xchg
dec
mov
adc
xchg
mov
dec
pop
aaa
mov
and
cld
dec
mov
add
xchg
dec
and
cs
or
sub
or
xchg
xchg
xchg
or
add
cmp
pop
mov
xchg
pop
xor
add
add
adc
or
or
sub
xchg
pop
mov
or
xchg
and
orl
add
cmp
mov
cmp
push
add
adc
xchg
xchg
push
mov
mov
dec
add
adc
or
xchg
add
adc
xor
or
xchg
sbb
xchg
adc
test
mov
xchg
or
mov
add
adc
xchg
add
adc
xchg
or
mov
sbb
xor
cltd
dec
and
adc
sbb
test
xchg
xchg
adc
nop
dec
subb
or
sub
xchg
xchg
inc
mov
xchg
add
fwait
popf
cmp
pop
sbbb
push
test
jns
cs
mov
mov
mov
inc
add
pushl
xchg
mov
ss
pop
mov
xchg
xor
add
or
mov
sub
push
or
adc
adc
fistps
xchg
sbb
adc
add
dec
test
or
sub
andb
inc
dec
test
xor
push
mov
or
xchg
pop
xor
test
xor
dec
add
sbb
rolb
mov
mov
test
andb
lahf
adc
adc
mov
xorb
pop
or
adc
or
mov
subb
or
pop
or
test
xchg
add
and
pushf
jle
and
mov
push
test
xchg
adc
xchg
or
xor
push
or
adc
xchg
or
add
add
adc
or
add
and
add
pop
pushf
sbb
pop
mov
xchg
push
xor
push
subb
jns
adc
or
test
mov
inc
test
sbbl
mov
xchg
add
xorb
mov
adc
add
add
or
mov
sub
inc
add
adc
xchg
add
add
clc
pop
incb
test
sbbl
push
xorb
adc
cs
mov
xchg
dec
mov
xchg
inc
popa
xchg
mov
add
cmp
dec
xchg
cmp
outsl
cmp
dec
add
add
adc
xchg
or
mov
es
mov
and
add
adc
add
pop
ret
sbb
popf
add
add
adc
pop
cltd
or
xor
test
test
xchg
push
cs
mov
sub
or
mov
dec
add
test
adcl
push
test
cmp
sbb
mov
xor
dec
test
or
mov
pop
or
or
xchg
and
orl
in
mov
push
mov
xor
xorb
test
and
xchg
mov
mov
xchg
xchg
inc
test
add
add
add
adc
xchg
or
xchg
add
add
adc
or
or
sub
xchg
pop
mov
or
xchg
and
orl
in
and
test
cmp
xchg
xchg
xchg
mov
nop
add
test
mov
xchg
pop
or
test
xor
pushf
dec
and
xchg
cltd
fwait
cmp
or
dec
subb
or
lea
xchg
inc
mov
adc
or
test
fwait
xchg
sbb
xchg
hlt
add
xchg
adc
mov
mov
orl
test
or
xchg
ds
sbb
aaa
xchg
sbb
xchg
xchg
xchg
xor
adcb
dec
add
dec
add
adc
or
xchg
add
xchg
nop
rclb
add
cwtl
lcall
adc
xor
push
xorb
push
mov
adc
mov
inc
or
inc
fisttps
xor
add
adc
xchg
or
xchg
add
xorb
adc
adc
orb
inc
add
inc
add
add
xchg
add
cmp
pop
add
xchg
pop
mov
rcrl
mov
dec
subb
or
daa
adc
xchg
inc
xchg
outsb
test
and
sbb
adc
xchg
add
test
xchg
push
xor
push
add
push
mov
xchg
sub
or
inc
add
pop
push
pop
add
popf
add
add
adc
mov
xor
adc
add
push
adc
test
mov
inc
test
add
test
add
adc
xor
cmpb
sbb
aaa
adc
adc
mov
daa
xchg
mov
test
andb
add
and
test
sbbb
and
cmpl
or
xchg
xchg
pop
aaa
test
xchg
mov
dec
pushf
push
add
xchg
push
or
xchg
or
mov
or
xchg
inc
xor
xchg
sbb
orl
add
xchg
push
xor
push
add
xchg
push
or
mov
test
mov
inc
add
inc
add
add
xchg
add
add
sbbb
mov
xchg
test
xor
push
mov
push
xchg
das
add
orb
test
add
add
test
add
xchg
or
adc
mov
xchg
xchg
xor
roll
push
or
mov
mov
adc
sub
inc
test
xchg
xchg
adc
addl
push
test
sahf
sub
inc
cmp
cmp
cmp
cmp
xchg
xchg
push
xor
xchg
sbb
repnz
xor
and
orb
out
test
sbb
rcrl
mov
orl
sub
enter
mov
adc
mov
or
xchg
and
add
jle
cmp
add
add
adc
or
xchg
adc
add
add
mov
xchg
or
mov
add
xchg
inc
dec
test
adc
add
push
test
adc
xchg
add
add
adc
sub
dec
or
adc
test
mov
orb
test
and
nop
sbb
popf
test
or
xor
test
or
push
lahf
pushf
sub
xchg
mov
dec
movsl
adc
and
or
xchg
and
inc
add
xchg
cmpl
or
cmp
pop
test
push
adcb
test
or
sub
andb
mov
xchg
inc
nop
or
test
fwait
xchg
sbb
xchg
push
xorb
push
test
xchg
mov
mov
and
sbb
sub
enter
and
daa
test
inc
add
add
add
addb
nop
or
cmp
cmc
aad
or
add
add
xchg
push
xor
push
add
mov
cwtl
or
or
mov
or
icebp
ljmp
mov
push
xchg
addb
and
add
pop
outsl
cmp
xor
mov
mov
sub
xor
stos
xor
sub
xor
cwtl
add
test
adc
xchg
or
xor
push
test
push
nop
cs
orb
dec
add
inc
andb
add
test
addb
loope
add
lahf
sahf
mov
xchg
fwait
popf
cmp
pop
sbbb
push
add
push
add
xchg
adc
xchg
test
xor
or
adc
xchg
mov
test
sub
dec
test
add
add
inc
test
add
xchg
pop
or
pop
cmp
pop
xorb
push
or
adc
add
adcb
dec
test
or
mov
add
adc
and
test
and
add
nop
mov
pop
test
sbb
cmp
push
push
xchg
mov
xchg
test
test
adc
xchg
or
cs
orb
dec
add
or
xchg
and
orb
adc
mov
aaa
adc
or
adc
add
add
mov
add
xor
xor
pop
loop
sti
fcompl
sbb
jg
movsb
in
ret
jecxz
xchg
ret
or
mov
jl
pop
inc
loopne
cmp
insb
lods
mov
and
push
mov
jmp
fnstsw
sub
mov
mov
or
addb
or
xchg
movsl
subl
daa
and
add
and
into
adc
je
subl
xorl
and
inc
add
ss
sub
mov
and
mov
or
xor
mov
pusha
rcrl
mov
mov
inc
add
mov
cmp
arpl
mov
stc
push
add
inc
cmp
xlat
sub
fmull
mov
lret
mov
dec
popa
xchg
inc
pop
mov
mov
subl
loopne
adc
cmp
inc
add
and
and
or
adc
inc
testb
and
or
cmpsl
sub
jno
add
adc
pusha
add
or
sub
sbb
add
outsb
add
and
shrl
xor
lds
loope
in
add
inc
and
popa
add
pusha
orl
mov
cltd
pop
add
xor
pop
push
and
les
ret
les
and
inc
into
dec
jb
cmp
jl
in
cli
or
fucomp
lea
xchg
add
adc
rorl
pop
or
les
and
and
xchg
out
test
sub
gs
push
fldenv
dec
push
cmc
cwtl
mov
out
in
rol
sub
stos
adc
rcrb
cli
scas
mov
or
andl
mov
cmp
pop
mov
inc
push
dec
fadd
andb
adc
add
or
jmp
or
or
popf
sub
call
arpl
in
dec
xchg
andl
dec
push
out
ss
fisubrl
or
adc
movsb
iret
jmp
xchg
xchg
cmpsb
aam
inc
inc
mov
loop
aad
ret
cmpsl
inc
mov
cmpsb
inc
dec
pusha
cmp
add
cld
push
fldenv
cmpsl
inc
mov
jno
inc
add
mov
xor
dec
jl
ret
cmp
jecxz
xor
push
jg
clc
jnp
cmp
or
xor
inc
icebp
popf
clc
push
test
fidivrs
decb
iret
xor
inc
jl
loop
icebp
xlat
call
into
lahf
inc
or
add
stc
mov
pop
add
pop
ret
push
cli
out
add
add
loope
bound
xchg
sub
and
cmp
enter
cmp
add
imul
movsb
imul
fimuls
out
jge
mov
and
adcb
add
cmp
inc
pushf
lret
nop
push
addl
mov
cld
mov
or
and
mov
faddl
cmpsb
add
inc
cwtl
xor
test
add
adc
or
add
mov
lcall
adc
inc
push
andl
rolb
data16
lret
push
and
cmpl
les
dec
dec
add
and
inc
cmp
add
add
xor
and
or
andl
adcb
adc
daa
adc
xor
jno
xchg
inc
dec
inc
xchg
pop
test
loop
adcb
and
adc
mov
sub
and
jb
cmp
flds
fstpt
sub
and
adc
or
cmpsl
xchg
loope
push
and
and
andb
add
add
cmp
and
and
pusha
and
lret
sbb
cwtl
add
jnp
and
divb
cmpl
insl
int3
lea
pop
mov
mov
leave
jb
mov
push
cmovle
dec
dec
xor
inc
xlat
and
lock
icebp
push
or
loopne
movsb
cmp
xor
psraw
imul
mov
stos
rol
or
push
adc
and
cli
andl
pop
add
sbb
pop
xchg
mov
roll
fst
test
dec
out
fildll
jns
lods
in
push
rep
or
cmc
imull
test
pop
test
pop
add
mov
lea
push
adc
lea
icebp
or
imul
popf
shlb
adc
and
and
icebp
mov
test
fsubr
daa
dec
xchg
and
test
arpl
out
movsb
sbb
cmp
fwait
push
ret
jns
push
inc
insb
mov
andl
mov
add
rolb
aas
pop
insb
inc
and
sbb
push
or
push
das
adcl
dec
imul
sub
or
or
push
fsubrl
adc
inc
sahf
imul
xchg
or
cwtl
movsb
pop
push
ror
and
xchg
mov
adc
or
sub
arpl
and
add
jge
mov
into
sbb
fs
add
inc
je
in
inc
or
ficompl
ret
adc
sub
daa
jp
mov
xor
lahf
leave
fdivl
inc
xchg
or
adcl
adc
or
frstor
lods
je
push
sbb
mov
ret
jle
outsl
insb
insb
adc
sbb
xor
fmull
mov
iret
mov
das
popa
insl
int
lea
mov
nop
les
add
push
mov
inc
mov
xor
adc
xchg
inc
adc
adc
je
cmpsb
jo
dec
jge
jmp
inc
inc
scas
or
add
mov
imul
cwtl
push
daa
pushf
add
mov
mov
or
and
imul
add
xor
push
xchg
dec
adc
outsl
pop
rcrl
mov
enter
es
add
push
andl
xchg
inc
sub
xlat
push
dec
xchg
mov
imul
mov
add
sub
mov
dec
push
or
mov
mov
mov
cltd
mov
cmp
mov
mov
mov
mov
jb
mov
mov
fsubs
xchg
sbb
pop
add
je
lods
jno
mov
sbb
or
adc
shll
repz
mov
xor
add
sbb
adc
mov
mov
lea
mov
pop
add
insl
adc
or
dec
sub
adc
adc
and
push
push
push
and
xchg
push
xchg
or
shlb
mov
cmp
ja
mov
dec
aad
daa
test
or
cltd
adc
push
idivb
jno
sub
mov
or
int3
mov
ret
pop
sub
inc
orl
cmpl
cs
xor
mov
fcmove
mov
dec
dec
push
xchg
mov
dec
add
test
mov
dec
mov
insb
mov
sub
jg
and
out
lea
cmp
leave
inc
adc
test
jp
jg
sbbl
inc
or
in
cmpb
addl
cli
or
inc
pcmpgtw
inc
jbe
cmp
insl
adc
loope
sbb
xchg
and
or
cmp
orb
or
scas
bound
add
jbe
insl
lods
outsb
or
cltd
addl
lcall
iret
pop
mov
xchg
pop
aas
mov
loop
pop
adc
dec
mov
loope
imul
dec
adc
ds
cmp
repz
bound
negl
sub
pop
testl
leave
add
inc
sub
cmp
iret
sbb
int3
adc
scas
int
in
and
int3
popf
inc
sub
add
loopne
mov
gs
je
shl
int
sbb
movsl
popa
xchg
or
imul
xor
cli
nop
add
insl
insb
shrl
leave
rcrb
popa
push
rorl
xchg
pop
int3
cmp
loope
dec
adc
cwtl
add
shrb
subl
push
rorl
leave
or
ret
rorb
inc
xchg
lret
imull
sbb
or
add
out
mov
adc
es
jb
int
test
mov
in
push
fimull
and
or
movsb
sub
loope
bound
mov
mov
or
test
popf
cmp
mov
xchg
adc
mov
jb
test
mov
sub
jp
test
add
add
xchg
push
push
dec
int3
js
aad
cltd
add
mov
jae
mov
mov
inc
sub
sti
aam
outsb
or
cwtl
and
les
inc
dec
rcrb
lock
cli
sub
orl
adc
repz
push
shll
and
out
ret
call
int
pop
mov
pop
sbb
inc
push
xor
sub
ret
mov
inc
in
pop
xchg
inc
stos
dec
imulb
jae
sub
push
add
in
dec
mov
popa
pushf
cmp
push
adc
xchg
and
cmp
andl
inc
hlt
jae
sbb
sub
or
mov
stos
and
xchg
cltd
adc
rcll
add
add
sub
xlat
sub
sub
ljmp
mov
sub
and
pop
add
and
add
dec
cmp
dec
in
scas
test
cmp
mov
dec
push
std
mov
jp
adc
loop
in
inc
sub
adc
sbb
cwtl
sahf
add
mov
les
add
dec
sarl
inc
sbb
loope
and
cltd
adc
int
cmp
test
or
sbb
repnz
shrl
mov
testl
pop
inc
adc
adc
xchg
aaa
or
jae
adc
sub
pop
das
xchg
movsb
xor
popa
lods
cmp
mov
sub
orb
inc
adc
cs
orb
xor
xchg
and
lds
xchg
movsl
movsl
push
dec
and
mov
int
and
loop
dec
sbb
idivb
and
adc
mov
mov
dec
dec
into
sub
push
shrl
hlt
addb
add
aam
addb
add
push
jno
rorl
mov
cmp
dec
sbbl
lods
xchg
mov
in
dec
jns
or
test
mov
push
jge
pop
popf
xchg
popa
or
mov
cmp
bound
into
mov
inc
leave
es
xor
lods
pop
inc
ret
xchg
xchg
mov
cmp
idivb
xchg
xchg
add
mov
or
sbbl
inc
icebp
ret
sbb
jae
xchg
and
in
sbb
inc
lds
xorb
insl
into
jno
and
mov
int3
adc
mov
fxch
fwait
xor
jb
add
dec
or
jbe
nop
addl
sbbl
dec
cmp
adc
lea
shlb
push
sub
xchg
and
fldt
insl
pushf
addl
outsb
adc
push
test
inc
mov
sbb
and
dec
adc
pop
int3
mov
fimuls
test
push
bound
add
aas
mov
or
adc
ret
sbb
sub
xor
mov
pop
inc
dec
adc
adc
or
push
cmpsb
test
add
rcl
dec
psrad
sub
mov
jb
or
sub
imul
fs
mov
cmp
sub
dec
push
testl
dec
bound
popl
add
pop
sub
lods
cmp
into
pop
adc
or
cmp
loope
cmp
add
push
dec
pop
iret
test
sbb
ret
cmp
and
sub
and
mov
adc
lock
add
test
add
add
sbb
jno,pn
add
cs
add
and
jp
std
mov
outsb
push
push
inc
test
sbb
std
pop
loop
add
pop
into
outsb
popf
repnz
cmp
test
mov
mov
adc
lahf
jge
add
rclb
mov
outsl
jns
push
sbbb
inc
xchg
or
popf
lcall
and
lds
lods
leave
shll
movsl
daa
dec
mov
mov
sbb
in
add
or
jg
ret
xor
or
cmc
subl
mov
add
adc
movsl
testl
shrb
and
sub
rolb
das
lds
pop
iret
mov
shrl
int
lea
add
cmp
or
outsl
adc
popa
ja
inc
insb
dec
cmc
adc
sub
mov
xorb
jmp
inc
sub
cmpsb
dec
popf
das
sbb
cmp
insb
das
adc
scas
jge
addb
push
in
pop
pop
test
inc
push
or
add
inc
or
in
mov
ljmp
je
popf
cld
lods
outsb
cli
lods
in
cli
mov
dec
push
lods
les
add
push
or
ljmp
loop
das
dec
mov
imul
insb
mov
cltd
push
add
add
push
shlb
iret
xchg
imul
adc
xor
add
loop
pusha
mov
pop
ljmp
ret
adc
jmp
inc
xchg
sub
push
bound
dec
scas
pop
ret
sbb
lock
roll
xor
shlb
inc
mov
xchg
cmpsb
dec
xchg
push
or
sbb
dec
mov
cltd
push
sbb
rcl
xchg
inc
xchg
xor
insl
mov
iret
lcall
or
mov
xchg
sbb
and
lea
mov
push
rcll
iret
out
inc
lock
lods
push
mov
loope
or
mov
into
sbb
orl
mov
lret
out
dec
adcb
cld
stc
mov
push
xchg
sbb
adc
daa
xchg
adc
adc
jne
test
mov
push
ljmp
hlt
cmp
dec
in
lds
adc
inc
cltd
popf
add
cmp
les
and
adc
cs
ss
adc
fimuls
xchg
add
sub
and
nop
inc
ficomps
fidivl
in
in
stos
mov
ds
mov
loope
mov
mov
outsb
xchg
int
xchg
add
sbb
xchg
out
mov
test
ss
addl
andl
lea
in
fiaddl
and
adc
pop
sbb
adc
insl
into
outsl
pop
adc
sti
imul
add
popf
stc
dec
adc
add
popf
mov
orb
and
stos
adc
xchg
repnz
push
mov
addl
push
xchg
les
bound
popf
inc
pop
inc
andl
insl
enter
es
fwait
push
sbb
xor
push
inc
mov
push
cmpl
daa
and
cmp
out
mov
lret
fs
int
movsb
shr
add
mov
adc
lahf
ja
mov
mov
mov
xchg
inc
add
adc
adc
adc
iret
lea
bound
addl
mov
xchg
in
test
pop
dec
jno
xchg
push
mov
mov
into
pop
rorl
mov
repz
in
bound
xchg
sbb
jb
and
xchg
push
push
adc
fwait
push
icebp
push
sub
sarb
jb
xchg
push
lods
dec
or
in
int3
inc
mov
add
jle
xorb
lea
addl
sbb
call
and
enter
pop
xchg
ret
cwtl
mov
and
sbb
jge
mov
outsl
mov
movsb
cs
push
sub
lea
in
lea
mov
sub
loope
pop
pusha
push
or
or
mov
adcl
pusha
adc
mov
outsl
pop
lret
scas
or
jb
mov
into
test
stos
cmp
fisttps
mov
or
sub
fwait
bound
fsubl
sbb
mov
scas
or
lcall
mov
push
push
sub
push
aaa
ret
lds
fadds
or
imull
and
inc
or
popa
mov
ret
lret
sbb
test
dec
in
adc
inc
cs
mov
cmc
ja
outsl
xchg
shl
test
adc
fisttps
sarl
or
sub
lods
add
or
mov
test
push
mov
aad
sub
cli
pop
and
addb
shrb
sub
and
aas
add
sub
orl
scas
and
xchg
adc
inc
dec
icebp
push
jecxz
rcll
sub
xor
js
sub
pop
rcrl
sbb
add
add
ret
fwait
adc
fsubr
xor
xchg
int3
lsl
sub
inc
fisttpll
push
push
adc
inc
xor
sub
add
test
in
xlat
sub
sbb
or
push
loopne
mov
mov
lea
dec
mov
add
mov
or
xor
fucomp
adc
jl
jmp
xlat
and
adc
or
mov
push
add
hlt
sub
and
call
inc
sbb
or
or
mov
or
add
sub
sbb
lock
inc
das
int3
pop
mov
add
out
adc
add
orb
or
xchg
into
int
and
lds
xchg
xchg
jg
adc
and
stos
test
mov
mov
adc
orb
test
xchg
and
lahf
or
xchg
sub
gs
dec
adc
or
xchg
push
inc
idivl
in
fcomi
lret
nop
xorl
mov
cltd
xor
push
orl
xchg
inc
xchg
jb
add
add
int
mov
push
pop
or
popa
push
mov
das
mov
icebp
and
fistl
popa
int
adc
mov
sub
pop
add
popa
lea
adc
mov
test
inc
cmp
mov
repnz
xchg
and
cs
inc
mov
add
data16
xlat
icebp
push
jecxz
lock
lcall
dec
sub
out
loope
and
adc
or
addl
add
or
adc
or
addl
xor
cmpsb
enter
subb
inc
sub
rorl
shlb
loop
and
mov
syscall
add
xor
or
push
mov
mov
mov
andl
smsw
fdivl
inc
adc
repz
push
cmp
test
inc
addl
fld
jnp
int
jg
aaa
arpl
cmpsb
lds
outsb
lods
add
test
sub
std
mov
repnz
mov
pop
and
bound
rcrl
mov
mov
mov
mov
popa
in
cmp
mov
or
adc
adc
pop
clc
data16
ficompl
inc
in
jno
imul
inc
sbb
cmp
cmp
adc
or
lods
xor
ret
xchg
add
inc
mov
add
pop
int
jecxz
scas
daa
push
mov
push
stos
push
mov
fnstcw
pop
ret
popf
add
mov
fimuls
add
cmp
adc
popa
hlt
mov
add
lea
inc
mov
pop
add
into
ds
adc
lods
xchg
lds
push
cwtl
roll
add
or
rcr
in
adc
sar
insl
add
mov
and
mov
lods
mov
or
sbb
test
or
and
dec
push
in
push
sbb
xchg
push
orl
pop
adc
movsl
dec
imul
and
add
fdivrl
je
ret
jmp
cmc
lret
adc
cmp
cmpl
lods
sub
fdivrl
mov
or
mov
mov
add
sbb
test
push
or
xchg
cmp
aaa
sahf
ret
into
inc
dec
scas
cld
int3
pop
and
int3
clc
cmp
pop
pushf
pop
imul
xchg
mov
scas
lret
sub
add
mov
das
jmp
mov
pop
lea
xchg
sbb
lods
pop
add
add
testl
cs
mov
cmp
adc
das
mov
ret
sub
ds
xchg
sbb
mov
jne
mov
push
sbb
je
mov
add
sbb
and
fstps
mov
xchg
cltd
cmp
gs
jg
mov
mov
add
push
mov
ret
push
shll
cmp
shr
cmpsl
out
ret
xchg
sbb
aaa
loop
push
add
dec
aaa
mov
cs
and
out
add
fwait
repnz
addb
insb
ds
popa
sub
mov
roll
mov
mov
jecxz
xchg
les
mov
sub
mov
mov
in
xor
dec
lds
mov
cmp
mov
ljmp
in
adc
mov
insl
cmp
inc
es
dec
sbb
or
icebp
xor
mov
fldl
stos
je
add
cmp
push
ret
addl
mov
adc
arpl
add
mov
add
jb
mov
xor
stc
lods
mov
xor
or
push
and
add
adc
xchg
mov
push
inc
pop
ret
push
jne
pop
mov
inc
mov
test
mov
add
out
push
sub
cmpsl
cmp
aam
inc
pushf
insl
mov
mov
push
lahf
enter
mov
test
xchg
ja
add
xor
out
and
into
and
xor
sbb
or
mov
add
xor
into
push
bound
adcl
mov
add
ret
or
xchg
popa
sbb
push
add
sub
cmp
push
push
popf
mov
bound
mov
test
or
enter
mov
cwtl
shl
stc
add
test
dec
ljmp
add
xchg
scas
or
cmp
shrb
insl
int
repz
dec
sub
testb
lods
dec
sub
shr
mov
sbbl
jo
sub
subl
out
sub
mov
sbb
jno
jns
pushf
mov
xchg
clc
add
nop
flds
adc
cwtl
test
or
sbb
ret
mov
test
inc
sahf
movsb
aas
test
ret
mov
adc
cmp
nop
xchg
loop
and
mov
loope
addb
add
sub
movsb
jae
add
jle
and
sub
or
xchg
les
fdivr
mov
or
mov
sbb
xor
ljmp
and
lret
dec
aas
in
ret
fimuls
adc
scas
push
dec
test
sbb
xor
pop
or
movsb
int3
sbb
sub
sbb
pop
notl
adc
stc
push
adcl
jno
movsl
add
push
cmp
lahf
or
mov
pop
sub
xchg
lods
subl
xchg
or
loop
lea
mov
inc
popf
cmpsb
sbb
dec
repnz
adcl
xchg
jnp
in
mov
or
arpl
adc
and
push
cmpsl
roll
ret
and
push
mov
xchg
or
lahf
fisttpl
fwait
mov
jmp
out
xchg
xor
mov
testl
addr16
std
inc
ljmp
xchg
std
or
push
in
push
xchg
popa
lahf
adc
and
add
add
mov
mov
cltd
aam
sbbl
or
lea
add
mov
lea
pop
sbb
dec
and
std
or
sbb
xor
adc
xorl
add
rcrl
lods
xor
mov
jp
or
test
or
into
sbb
lods
lods
or
sti
or
aam
and
or
fcoms
xchg
adc
loope
sub
xchg
xor
mov
cld
in
movsb
mov
mov
add
inc
jle
and
pop
mov
jle
int3
or
jmp
je
pop
mov
iret
xlat
cmpb
cmp
icebp
sbb
or
cmp
addl
loop
dec
xchg
fmuls
into
dec
das
and
dec
add
adc
push
sahf
jg
sbb
mov
xchg
pop
loop
test
sub
push
add
mov
adc
sbb
sbb
mov
mov
xchg
mov
add
or
xchg
add
adc
stos
mov
loope
lret
add
xchg
addb
mov
lds
sbb
int
inc
adc
or
test
xchg
lea
and
adc
addb
cmp
loop
sub
iret
test
iret
cmpsb
or
in
xchg
xchg
pop
lea
jmp
sahf
jg
lea
data16
pop
icebp
pushf
or
jne
or
shrl
dec
inc
enter
xchg
out
scas
ja
int
inc
xchg
xchg
or
sub
sub
adc
ret
out
xchg
add
test
or
repnz
xchg
inc
andl
pop
inc
adc
add
ret
jg
dec
popa
addb
sub
mov
or
ret
push
cmp
xor
xor
scas
bound
iret
mov
ret
adc
cmpb
inc
repz
or
aaa
movsb
fwait
xlat
xchg
nop
sarl
addr16
mov
push
mov
or
inc
popf
pop
dec
testb
ljmp
in
sbb
inc
adc
int
orb
fldt
fisttpl
inc
mov
mov
inc
dec
dec
push
ret
outsb
cltd
or
push
sub
pop
add
pop
or
jno
jmp
fstps
ret
dec
loop
lcall
xchg
leave
push
mov
das
and
xor
in
jb
das
add
inc
outsb
push
adc
and
cmp
sbb
adc
jb
mov
sbb
bound
xorb
and
loop
or
add
es
cwtl
ud2
push
clc
loop
shl
inc
push
push
ficompl
push
jp
jbe
in
mov
add
xchg
adc
xchg
insb
inc
xchg
jbe
lahf
insl
cmpsb
and
pop
sub
mov
into
or
cmpsb
mov
xor
jp
scas
push
push
dec
push
adc
hlt
xchg
sbbb
push
inc
mov
test
mov
mov
addb
mov
fcomps
lret
sbb
xchg
mov
and
add
stc
add
rorl
sbb
test
comiss
lahf
lods
sub
and
push
out
sbb
xchg
inc
insb
push
cltd
int3
mov
inc
test
ljmp
test
mov
sub
inc
js
pop
lret
jmp
jne
lea
es
inc
xchg
lods
test
sub
push
iret
fwait
popa
inc
insb
push
scas
rolb
bound
xchg
push
jle
sub
add
xor
adc
xchg
ret
add
mov
add
mov
outsl
rolb
adc
mov
add
cwtl
das
into
dec
push
fbstp
xor
xchg
int3
sbbl
aad
sbb
xor
cmpsb
rorl
mov
mov
lods
pop
adc
or
cmpb
andl
push
dec
mov
inc
sbb
inc
mov
mov
fistps
into
adc
sub
add
mov
mov
addb
iret
xchg
lds
xlat
jl
ud1
ljmp
or
push
test
loope
test
mov
cs
loopne
loop
adcb
andb
jl
cli
sub
adc
pushf
dec
add
or
imul
dec
jecxz
cs
jae
add
test
or
lahf
sbb
or
ljmp
sub
leave
scas
loop
push
jo
test
xchg
nop
sbb
push
lds
jmp
inc
mov
test
xchg
arpl
push
cwtl
cmpsl
or
je
push
xchg
fs
dec
es
xchg
inc
test
push
xor
xor
push
inc
and
cltd
out
cmp
in
sub
and
dec
ss
icebp
in
das
mov
mov
and
lds
jmp
daa
xorl
mov
mov
xchg
and
inc
xchg
lds
and
mov
lds
repz
mov
fdivr
fwait
cmp
and
add
pop
or
inc
mov
sbbb
push
test
push
sub
jmp
in
insb
test
inc
std
mov
movsb
hlt
pop
xchg
movsb
mov
add
scas
mov
flds
push
cmpsb
push
xor
bound
mov
push
mov
jmp
inc
mov
mov
fwait
dec
jmp
dec
mov
xchg
sub
ljmp
es
cmp
jmp
jg
insl
push
jle
imul
test
inc
push
lcall
add
jmp
inc
daa
mov
out
les
call
aad
outsb
test
push
jl
or
in
mov
mov
psrld
stos
ljmp
push
add
cltd
mov
xor
pop
pop
push
mov
subl
or
mov
mov
xchg
jl
mov
mov
push
inc
movsl
mov
les
mov
sbb
inc
xchg
cmp
push
pop
loop
fmul
and
inc
outsb
mov
inc
lcall
subl
fdivrl
lea
movsl
sub
dec
or
mov
lds
movsb
test
mov
xor
lock
mov
adc
clc
pop
pop
lcall
jmp
test
enter
adc
xchg
enter
push
jne
out
mov
mov
lahf
scas
inc
push
inc
adc
xchg
cmp
addb
mov
xchg
jne
mov
test
lea
cmp
stos
and
mov
mov
push
sbb
das
dec
dec
ljmp
dec
aas
nop
cmpsb
loop
daa
cwtl
cmp
mov
in
sub
aaa
mov
add
lods
push
dec
fimull
mov
lret
jecxz
subl
pop
and
ljmp
sti
add
aas
cld
pop
mov
iret
adc
or
fwait
jge
push
push
cmp
sbb
leave
orb
cmp
push
push
loope
mov
pop
mov
pop
loop
movsl
cmp
icebp
pop
xchg
sub
lods
rorl
adc
pop
into
push
cmp
xchg
out
pop
out
cs
movsl
jmp
daa
insb
sbb
dec
cmp
xlat
push
not
cmpsl
dec
pop
sahf
aad
fisttpll
ret
cltd
pop
stc
dec
movsb
test
test
pop
cltd
cmp
out
dec
test
dec
ret
orb
xchg
ret
pop
rorb
es
or
mov
dec
popf
out
in
test
adc
lret
jns
sbb
push
jnp
sti
mov
add
pop
xchg
mov
fs
imul
adc
inc
jp
xchg
les
push
addr16
add
int
lods
aad
lret
adc
jg
nop
inc
into
insl
adc
in
fistl
jle
je
daa
aas
mov
mov
mov
cmpsl
loope
pop
mov
in
cs
inc
push
mov
pop
pop
cli
nop
dec
dec
or
adc
mov
nop
xchg
mov
in
adc
inc
or
add
dec
das
repnz
and
mov
pushl
ror
fdiv
adc
nop
mov
in
cmp
xchg
lret
fwait
repz
push
fprem
and
or
cmp
adc
sar
jmp
sub
cmp
xor
outsb
xor
and
xchg
aam
add
popf
dec
sbb
dec
mov
add
out
enter
mov
mulb
outsl
sub
or
add
repz
cmp
pop
fisttpl
adc
and
xor
out
mov
dec
mov
and
lahf
or
push
int3
pop
mov
fldt
xor
mov
pop
adc
int
repnz
xchg
push
or
stc
repnz
inc
shl
in
in
sub
leave
aaa
pop
aas
cltd
int
addr16
bound
push
or
insb
and
jge
and
mov
or
mov
pop
out
test
imul
dec
adc
xor
in
iret
aas
insl
lret
or
fwait
pop
popf
xchg
gs
xchg
fbld
cltd
mov
iret
setge
mov
ljmp
adcl
add
dec
or
rcrb
ror
xor
sbb
pop
jg
stos
push
sbb
lds
pop
lahf
xchg
mov
cmpsb
es
stos
xchg
scas
xchg
stos
hlt
mov
adc
hlt
inc
nop
cmpsl
popf
dec
cmpsl
adc
lret
fisubs
lahf
xor
push
movsb
mov
cmpl
push
sbb
or
inc
mov
xchg
test
subb
dec
pminsw
jne
arpl
mov
xchg
or
add
aaa
xor
sbb
div
scas
mov
fldcw
dec
repz
das
rorb
add
sub
out
out
cld
addr16
xor
pushf
ffreep
and
push
sbb
inc
or
mov
rolb
sub
data16
or
add
push
mov
and
gs
or
cmp
jecxz
mov
dec
sub
pop
addr16
jae
scas
pop
repnz
pop
inc
inc
lds
insl
mov
pushf
shrl
or
mov
call
loopne
pop
xchg
pop
call
push
mov
sub
out
sbb
fwait
ljmp
pop
cld
add
dec
cli
ds
iret
sub
jl
cmp
cld
movsb
lock
dec
and
sti
pop
call
js
push
and
dec
ret
push
js
movsb
push
xlat
iret
push
clc
in
mov
leave
decb
scas
loop
push
sti
xchg
or
std
leave
cmp
xor
fadds
outsb
cmp
adc
sahf
jecxz
adc
ljmp
adc
test
push
stc
xchg
jmp
or
sbb
lds
cmpb
scas
insb
inc
sub
bound
lods
orb
rcr
push
test
mov
sbb
test
andl
pop
mov
je
ja
imul
insl
aad
lcall
mov
inc
mov
xchg
and
adc
and
lret
mov
mov
icebp
popf
iret
xor
out
xchg
push
lock
or
sbb
ret
jnp
test
out
or
sbb
rorl
cmp
bound
pop
enter
xor
test
js
mov
sbb
fsubrl
fmull
adc
test
test
pop
mov
inc
mov
shl
pop
inc
sti
lods
fisubl
outsl
sub
outsl
test
out
sub
lahf
mov
test
add
imul
jb
mov
or
sbb
cmovp
push
into
push
popa
cltd
ror
or
lock
adc
xchg
jo
cwtl
jmp
inc
lcall
lcall
push
push
and
icebp
dec
repnz
popa
mov
or
jno
mov
and
orl
mov
adc
in
push
jo
add
popa
inc
cmp
mov
inc
pop
push
mov
mov
add
lods
jmp
in
adc
hlt
or
adc
fdivl
and
das
stc
in
xor
fidivl
or
rolb
push
es
pop
lea
fs
mov
shlb
int
cmp
mov
jg
and
andps
sbb
icebp
sahf
insl
pop
subl
icebp
push
xlat
inc
data16
inc
mov
adc
push
test
sub
ljmp
movsb
aas
call
mov
dec
pushf
jns
add
shrb
nop
xchg
push
out
jb
je
int3
jne
mov
xchg
nop
sbb
mov
icebp
jae
hlt
mov
mov
out
pop
test
jae
push
mov
push
xor
les
dec
sub
jno
imul
push
test
subl
push
mov
in
pop
int3
xchg
fwait
daa
lods
or
adc
scas
insb
mov
mov
rcrb
xchg
or
and
adc
out
cmp
sbb
int
lret
add
dec
sbb
repnz
xchg
mov
add
adc
mov
push
lahf
xchg
xor
adc
pop
movsl
cs
je
mov
in
push
and
ret
mov
lods
stos
fistps
jae
or
push
push
aad
mov
aam
pop
xchg
fisubrs
jne
add
mov
xchg
movsl
xor
xchg
fcomip
add
jae
out
mov
mov
xchg
mov
mov
sub
clc
insb
dec
loope
ret
push
outsb
mov
cltd
imul
or
cmpsl
sub
subb
rolb
sbb
leave
xchg
scas
add
adc
jg
jmp
ss
sbb
test
adc
jno
jmp
and
mov
adc
int3
sub
movsl
mov
imul
mov
es
mov
jbe
jecxz
sete
cmp
mov
xchg
mov
mov
xor
out
sti
lods
lea
sbbl
sbb
icebp
rcll
jp
ret
cs
dec
shlb
pop
scas
cmpsl
into
test
fdivrp
into
pop
out
sub
dec
sbb
adc
scas
or
es
push
xchg
cwtl
out
add
cvtps2pd
adc
lods
or
mov
fwait
mov
xor
loope
div
mov
cmpsl
stos
add
adcb
movsb
xchg
out
pop
jnp
movsl
adc
adc
in
lahf
leave
jmp
aam
gs
push
test
test
pop
inc
mov
outsb
or
in
outsb
inc
xlat
cmp
in
jmp
xchg
ljmp
aas
fs
push
push
sub
adc
adc
in
adc
xchg
inc
mov
out
addr16
pop
sub
add
dec
sahf
loopne
jge
push
iret
sub
inc
out
mov
subl
adcb
in
ljmp
cmp
add
sub
in
jmp
fisubrl
movsl
mov
popf
dec
and
lods
xor
pop
fisttps
sub
pushf
lods
push
lcall
outsb
xchg
test
lret
in
mov
sbb
add
sub
xor
and
cmp
cs
andb
or
out
push
mov
mov
lock
inc
dec
leave
clc
mov
inc
sbb
xchg
jge
mov
shll
xor
out
scas
xchg
in
inc
sbb
je
pop
adc
jb
pop
lahf
or
in
pop
pop
lahf
xchg
cmpsb
xchg
in
lahf
push
or
jmp
call
xor
mov
xchg
xchg
andl
cmp
push
test
out
test
sahf
jae
shll
rolb
sub
and
add
mov
adc
stc
push
mov
and
xchg
add
jl
and
and
or
gs
add
jmp
dec
inc
shll
add
fmull
jg
ljmp
cmp
aas
add
ret
mov
call
xor
add
sub
mov
sbb
addb
inc
aas
adc
cmp
sbbb
inc
addb
jno
gs
mov
inc
or
adcl
inc
cmp
adc
cmp
sbb
adc
sub
mov
dec
lcall
nop
mov
mov
xchg
dec
jge
test
xchg
popl
and
insl
idivb
je
test
mov
or
in
mov
scas
jle
mov
adc
into
ds
hlt
fdivs
enter
lcall
data16
pop
pop
xchg
movsb
retw
sub
in
push
out
push
inc
cmp
test
ret
sbb
iret
or
test
in
jae
mov
test
leave
hlt
mov
lret
ud0
dec
xchg
movsl
pop
xchg
xchg
mov
cli
push
mov
test
movsb
pop
sbb
gs
or
inc
stc
inc
dec
dec
adc
dec
or
mov
pop
dec
xor
fldt
outsb
jno
jecxz
adcl
loop
xchg
lods
or
test
lea
mov
fsubrl
jg
test
push
dec
imul
lret
mov
cmp
jns
call
jne
aam
mov
into
out
xor
xchg
cmp
test
mov
xchg
rol
xor
dec
mov
mov
mov
or
enter
inc
sub
xchg
imul
rclb
pop
pop
xor
test
push
fimull
in
pop
mov
mov
cmp
inc
insl
xor
sub
in
stos
mov
dec
inc
adc
addl
ds
out
fsubrl
je
nop
out
pop
push
or
push
cli
cmp
test
movsl
inc
mov
push
pop
out
std
mov
push
cmp
jecxz
pop
mov
sbb
movsl
or
scas
fmull
stc
mov
jbe
in
or
adcb
leave
daa
jbe
sar
lret
jl
xchg
dec
inc
incl
imul
push
je
pminub
xchg
add
sarl
test
sbb
add
cmpsb
push
mov
sub
and
sbb
mov
cmp
mov
in
inc
dec
cmpl
sub
shr
sbb
lods
xor
test
add
test
mov
nop
jbe
or
stos
mov
lahf
mov
imul
sub
jp
sub
and
sub
scas
add
push
call
inc
bound
lahf
sbb
repnz
lods
cld
mov
pusha
insl
into
arpl
push
orl
adc
mov
jle
sub
inc
add
or
xchg
lods
jp
or
dec
lret
dec
addr16
fimull
mov
in
fiadds
xchg
push
pop
lcall
and
jmp
mov
lea
adc
lds
sbb
mov
movsl
lret
testb
sub
imul
or
ds
xor
ds
fwait
xor
push
dec
out
xchg
sti
xor
pop
js
rorb
cmp
inc
sbbl
rorl
lcall
xor
jns
mov
shlb
sbb
dec
in
dec
scas
pop
mov
xlat
lods
scas
notb
mov
fwait
adc
mov
out
adc
push
cwtl
mov
mov
push
pop
dec
dec
ret
and
repnz
ret
pop
negl
cmpsl
adc
test
and
and
xchg
fs
mov
jp
mov
in
xchg
sub
leave
and
sbb
shlb
shl
rcll
xchg
jle
cltd
dec
mov
andl
jno
add
mov
fbstp
pop
xor
push
mov
int3
xchg
lods
xor
push
jmp
lret
fsubrs
and
fcomi
ds
test
jl
lea
adc
pop
ss
ffree
scas
mov
mov
cltd
cmp
insb
cmpsb
movsb
bound
fucomp
mov
insl
add
leave
lahf
aas
mov
test
dec
xchg
xchg
in
rorb
and
pop
fwait
mov
je
scas
dec
ret
ss
fcmovb
adcl
xchg
dec
aam
lcall
int3
inc
mov
pop
jmp
fcmovbe
xchg
push
mov
mov
jecxz
jo
popf
int3
inc
scas
mov
nop
xor
test
cmpsl
out
insl
push
imul
jp
pop
fs
ficompl
mov
and
xchg
xor
and
pop
cmp
xlat
popa
and
mov
in
sbb
dec
push
into
mov
outsb
cmp
arpl
lret
xchg
leave
std
stos
mov
jne
lret
sbb
outsb
jp
push
out
sub
mov
sbb
jae
xchg
xor
xor
orb
xchg
inc
pop
cmpsb
cmp
xchg
mov
inc
xchg
fimuls
push
test
mov
xchg
call
fisttpl
jmp
aas
mov
lret
insl
orb
sbb
mov
dec
aaa
or
mov
dec
push
dec
ja
dec
mov
push
jge
inc
push
cmp
inc
push
mov
push
sub
mov
dec
push
sbb
jnp
mov
mov
rolb
out
stos
lods
adc
inc
bound
test
mov
push
imul
ret
or
xchg
xchg
dec
pop
mov
push
mov
xchg
out
pop
or
mov
inc
into
into
movsl
lret
fisttpll
into
test
dec
cli
inc
dec
push
mov
cmp
cmp
and
fldcw
add
not
jp
into
and
inc
cmp
test
mov
add
or
out
sub
decl
adc
xchg
pop
andl
or
or
fwait
ds
and
out
decb
push
test
and
and
and
test
shlb
jmp
pop
arpl
js
xor
nop
and
mov
call
push
pop
loop
push
cmp
cmp
and
sar
pop
sbb
pop
or
fdivrl
pusha
pop
in
xchg
sub
mov
imul
icebp
jae
or
or
xchg
push
dec
sub
loopne
push
cwtl
lret
clc
mov
lods
gs
cmp
mov
loope
dec
rcrb
xchg
psubsb
sbb
out
add
out
addr16
out
mov
std
pop
add
rcrb
mov
mov
push
add
mov
loop
inc
icebp
lds
and
pop
push
mov
mov
xlat
and
or
dec
push
push
add
and
jg
lcall
inc
and
jae
add
loop
adc
imul
mov
and
sbb
or
sub
orl
adc
or
cmpsb
bound
inc
sub
xchg
sub
xchg
add
add
lcall
sahf
test
add
outsl
icebp
sbb
orb
bound
add
or
clc
cmp
add
add
mov
lods
add
xor
cmp
push
mov
ret
and
sbb
lock
xor
or
js
xor
jnp
adc
shlb
or
out
test
xchg
and
pushf
hlt
pop
xchg
fcoml
mov
bound
adc
lods
inc
and
xor
or
fsubr
push
pop
dec
dec
sbb
es
cmp
xchg
int3
dec
push
cmc
lds
scas
aam
sbb
pop
mov
sahf
adc
adc
inc
push
mov
and
xchg
arpl
sbb
addb
xor
add
add
addb
add
mov
sub
lret
ljmp
adc
mov
dec
xchg
and
and
nop
or
adc
sub
test
sub
and
push
xchg
xchg
cld
push
stc
mov
push
push
aam
add
lcall
and
and
xchg
add
scas
push
and
icebp
xchg
out
sbb
xor
adc
dec
jle
pop
popa
add
leave
sub
add
or
pop
xorb
xchg
or
cli
or
std
and
daa
fisttpl
cld
adc
or
shll
adc
xorl
add
adc
test
adc
inc
xor
test
and
add
loop
lret
test
and
stos
addb
fiaddl
push
cwtl
movsb
inc
jle
sub
imul
add
pushf
sbb
out
das
adc
push
xchg
adc
sbb
push
mov
xchg
pop
or
int
sub
outsl
lcall
sbb
sub
xchg
in
cmp
pop
and
xchg
push
test
pop
pop
out
xchg
push
inc
sahf
cmp
and
add
push
and
mov
mov
popa
sub
mov
mov
and
rclb
test
add
aaa
sbb
aam
es
mov
js
ficoms
add
mov
mov
pop
mov
shl
outsb
jge
xor
repnz
adc
in
add
ja
subb
cmpsl
jp
fwait
stc
loopne
das
jmp
or
pop
and
dec
mov
xor
icebp
and
adc
mov
mov
aam
pusha
sub
outsb
pushf
test
add
test
loop
push
mov
std
xchg
xor
repnz
dec
scas
cmpb
shl
rcll
mov
cs
test
adc
mov
xor
mov
push
push
mov
mov
jg
pop
dec
push
jmp
les
stos
adc
subb
es
stos
jg
movsb
or
mov
adc
mov
sbb
cltd
mov
inc
jno
adc
dec
mov
movsb
cmp
pusha
lahf
and
inc
loope
scas
adc
sbb
mov
mov
test
bound
mov
jmp
cli
and
sbb
push
jecxz
sbb
aam
sub
xchg
in
mov
inc
jo
ja
pop
mov
repnz
mov
adc
cmp
loop
loopne
sbb
mov
repnz
fldenv
adc
mov
pop
xchg
dec
pop
sar
xchg
xor
fs
adcb
pop
pushf
insb
jno
es
mov
dec
and
or
out
movsl
icebp
mov
rclb
mov
mov
push
inc
std
sysexit
adc
popl
fwait
iret
or
lret
fs
xor
ljmp
add
add
outsl
lods
cwtl
jne
push
xor
add
call
pop
sbb
jp
popa
add
or
xor
jge
rol
dec
enter
loopne
addr16
inc
jp
push
cmp
clc
ljmp
inc
inc
mov
ss
sbb
adc
push
ljmp
movsl
and
push
mov
lret
int
adc
mov
fadds
add
push
lret
repz
out
and
pop
push
or
jmp
xor
aad
stos
cvttps2pi
sti
shll
les
fwait
sub
call
dec
mov
sbb
sbb
stos
jo
call
lahf
ficoml
sub
in
cld
or
dec
push
movsb
adc
jp
pop
jae
fildl
add
