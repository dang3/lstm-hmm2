mov
mov
xor
cli
fs
pop
call
xchg
rclb
and
xor
xor
rol
add
add
ja
jb
xor
cld
inc
test
roll
cmpsl
movsb
xchg
or
and
aaa
dec
stc
call
test
in
or
sub
cmp
pop
adc
inc
sbb
stos
jle
shll
and
cwtl
adc
mov
test
insl
sub
addr16
lea
xor
adc
inc
jno
mov
pop
popf
mov
and
mov
repnz
ja
mov
cmp
mov
xor
iret
sub
cmp
mov
mov
push
dec
fcoml
or
and
or
iret
jmp
xor
pop
lods
pop
jp
fcmovne
divb
xchg
jae
jg
xchg
or
inc
or
mov
xor
mov
insl
jge
push
xchg
push
je
daa
nop
lcall
xchg
gs
push
lock
loop
mov
jecxz
ror
mov
adc
test
mov
fcompl
jnp
aaa
xchg
add
imul
inc
imul
ss
pop
push
cmpsb
xchg
sub
je
ret
mov
mov
cmp
adc
inc
or
adc
push
orb
cmpsl
dec
jecxz
das
mov
mov
mov
popf
das
clc
out
arpl
add
jp
scas
xchg
and
add
dec
rclb
dec
mull
mov
rorl
data16
sbb
dec
cmp
inc
mov
aaa
lret
sarl
or
loopne
aam
mov
or
call
push
push
xor
aas
xor
mov
test
inc
insl
fstl
pop
cmpb
xchg
int3
jo
or
faddl
xchg
stos
push
push
jnp
stos
inc
or
int3
mov
arpl
aam
add
lock
pop
hlt
dec
inc
test
or
or
movsb
push
inc
sbb
mov
jnp
adc
pop
fnstsw
push
les
jbe
fldcw
mov
pop
mov
sbb
std
arpl
ficoms
in
cmp
pop
in
jnp
pop
push
nop
jle
mov
pop
in
mov
pop
out
ret
imul
mov
mov
pop
les
sub
jo
das
test
imul
pop
mov
enter
pop
mov
pop
fsubl
jge
mov
mov
ficoms
popf
pop
nop
jnp
mov
and
loope
sbb
hlt
xor
ficompl
pop
arpl
aad
cmp
mov
push
ds
scas
push
int3
dec
push
push
xor
pop
ljmp
roll
rclb
movsb
sbb
stos
xchg
push
mov
jnp
push
inc
outsb
dec
inc
out
out
push
out
es
in
sahf
leave
movsl
das
jne
xchg
sbb
sub
pop
popf
iret
iret
sar
lods
daa
cmp
push
fdivr
imul
cmc
lock
jbe
repz
fimull
daa
shrb
pop
shr
inc
dec
add
xor
jmp
inc
mov
ret
inc
test
int3
rorb
dec
dec
mov
add
or
xchg
push
nop
sbb
jmp
lret
imul
dec
mov
add
popa
jg
das
xchg
pop
lds
lret
mov
adc
cmp
mov
imul
mov
fmul
and
test
jb
sbb
sub
clc
mov
cmc
xchg
lods
in
jbe
jb
and
push
mov
cmp
mov
sbb
test
movsl
xchg
and
inc
cmc
into
aam
jg
je
aas
cmc
orl
test
call
jmp
inc
inc
push
lcall
push
mov
or
xorl
addl
out
add
sbb
scas
or
lods
jae
das
mov
jmp
adc
fistpl
data16
shrb
lds
xor
in
pop
xchg
pminub
push
sbbb
in
lcall
lods
pop
ja
sub
fcoml
cmpsb
mov
pop
mov
mov
pop
mov
xchg
js
cs
adc
adc
mov
inc
push
cmp
xor
inc
push
test
mov
fiaddl
and
xor
je
jo
dec
movsb
adcl
fnstcw
icebp
int3
adc
cmp
sub
xchg
mov
repz
imul
fcmovnbe
scas
jbe
in
lea
push
divb
repnz
sti
cmp
fnstenv
mov
mov
cmp
loop
aas
pop
sbb
jge
lahf
push
add
rcr
data16
ret
sbb
test
jl
orl
mov
loopne
rorl
decl
add
sbbb
sub
jo
outsb
out
jp
repz
repz
mov
ret
jmp
push
jb
movsl
mov
xor
enter
xchg
leave
ror
inc
push
sbb
fwait
imul
out
pop
jg
insb
pop
shrl
inc
arpl
and
jp
pop
xlat
inc
or
cltd
sahf
shrl
push
in
movsl
and
jge
leave
add
sarb
sub
sbb
push
and
jbe
repnz
push
pop
mov
and
ret
movsl
fwait
mov
es
jnp
or
xchg
filds
sub
add
sysenter
aaa
clc
inc
or
mov
lret
inc
xor
icebp
pop
or
mov
fisubl
out
sbb
testl
movsl
push
add
rorb
jns
das
subb
je
sti
add
jmp
sub
enter
aad
push
faddp
lahf
jnp
xchg
jo
xor
jb
cmpsl
jne
in
push
xchg
jo
cs
lods
fdivrl
dec
icebp
pop
js
xor
mov
aaa
push
jae
jmp
adc
scas
mov
stos
mov
out
mov
sbbb
outsl
inc
sbb
test
mov
adc
jge
and
mov
xchg
loope
aam
pop
clc
mov
xorl
jmp
into
xor
cltd
enter
sbb
mov
cmp
loopne
sbb
leave
cmc
sbb
xchg
add
xor
ja
out
insl
int3
sub
lds
sub
push
shlb
rcr
xchg
add
jecxz
push
mov
jmp
bound
mov
test
hlt
sub
add
aas
insl
sub
push
movb
jae
dec
insl
and
jne
cmpsl
insl
ss
mov
scas
mov
lret
js
inc
rorl
pushf
outsl
mov
mov
mov
xor
mov
out
das
ret
xchg
iret
test
orb
flds
inc
sbb
fbld
and
cmp
and
hlt
pop
adc
mov
pop
jns
bound
fidivl
aas
adc
inc
push
rcr
add
jmp
clc
cmovle
std
push
jno
jle
mov
cmovp
and
les
in
repz
inc
gs
xchg
inc
fcoml
addr16
jb
jmp
inc
cmpsl
mov
arpl
imul
adc
scas
add
xor
jl
add
sbb
mov
mov
addr16
lock
pop
cs
faddl
jns
add
push
stos
mov
sahf
jo
cwtl
pusha
lds
dec
std
lock
fwait
inc
fchs
js
ja
ret
dec
mov
dec
subb
pop
ret
jne
pop
push
pop
sub
shlb
shlb
das
cmp
in
xchg
insb
xchg
ss
mov
fwait
repz
pop
cmovo
xor
adc
les
dec
inc
inc
dec
sbb
cwtl
add
adc
cmp
mov
jmp
sub
cmp
call
jp
aas
push
xchg
ret
push
push
mov
out
test
lock
enter
cmpl
inc
mov
aad
add
je
cmp
cmp
popa
xchg
mov
inc
mov
jmp
faddl
xchg
imul
fcompl
adcl
mov
jmpw
xchg
loope
xchg
repnz
clc
push
scas
sbb
popa
mov
mov
repnz
cltd
gs
mov
das
mov
int
mov
addr16
pusha
cltd
xor
in
push
nop
fadd
pop
mov
sub
cltd
push
ret
cmp
mov
and
push
mov
lds
jmp
xlat
mov
adc
mov
stos
push
pop
sbb
scas
adc
pop
xchg
jnp
rcrl
add
push
incb
adc
loope
mov
fisttpl
xchg
sahf
mov
ret
mov
data16
and
adc
in
xchg
frstor
cmp
rclb
sbb
mov
outsb
outsl
push
aad
ret
dec
pusha
push
sbb
mov
xchg
inc
js
insb
pop
gs
std
in
mov
sarl
xchg
pop
cmpb
loope
xor
cwtl
pop
xor
test
push
mov
in
jns
push
mov
out
xor
inc
pop
sarb
lcall
mov
xchg
imul
lcall
mov
jno
gs
fcmovnbe
jae
mov
scas
push
sti
movsb
fdivl
and
into
pop
loop
adc
mov
push
jg
mov
xchg
pop
mov
push
jo
or
pop
sbb
jl
movsb
mov
dec
loop
inc
cmp
cli
jb
out
dec
xor
loop
adc
out
into
cmp
std
loop
pop
fdivr
mov
jle
lcall
out
adc
pop
lahf
bound
push
lret
jb
mov
imul
call
cmp
push
push
mov
cmp
lods
adc
test
insb
and
xor
in
in
stos
xchg
pop
inc
iret
repnz
jge
in
loope
repnz
cld
xchg
outsl
fnstcw
aaa
mov
sub
adc
mov
xor
sbb
inc
inc
jmp
mov
jmp
stos
sbb
ret
push
aaa
pop
lea
push
jae
xor
hlt
mov
cmp
jbe
sub
or
out
in
sub
pop
jnp
jo
dec
outsl
in
add
lahf
sbb
lret
xchg
sbbl
pop
stos
xor
fbld
mov
mov
dec
test
pusha
dec
xchg
adc
insl
repnz
cmpsb
pop
aaa
scas
sbb
adcl
jae
imul
outsl
fisttpll
and
inc
clc
loopne
pop
or
in
mov
pop
sbb
add
pop
hlt
sub
sub
add
inc
jge
inc
add
mov
imul
push
mov
lds
leave
push
nop
mov
cs
inc
imul
jmp
cmp
js
es
cmp
stos
push
loopne
mov
xchg
aad
std
dec
lret
es
pusha
xor
dec
fbstp
movntps
imul
and
xor
cmp
mov
into
mov
dec
dec
pop
pop
adc
and
push
lds
outsl
cwtl
push
xchg
cmc
add
or
fisubrs
push
insb
std
dec
and
clc
loope
shrl
sahf
mov
jmp
sarb
pop
sub
ja
std
or
popf
test
inc
push
jge
mov
jb
mov
ret
pusha
scas
xchg
sub
repnz
and
xchg
cltd
xor
ja
xor
xor
int
xchg
cltd
int
jb
out
test
jne
sarl
xchg
repnz
and
pop
xchg
mov
push
frstor
dec
jbe
decb
mov
adc
and
or
fs
popa
mov
mov
push
sbb
xchg
sub
xchg
mov
mov
mov
cmp
jne
pop
dec
and
jb
or
lret
xchg
mov
or
sub
out
mov
jge
push
cltd
or
popa
cli
jmp
mov
imulb
out
scas
sbb
mull
mov
pusha
inc
movsl
outsl
mov
mov
mov
leave
push
jl
push
mov
mov
push
mull
test
cwtl
aad
mov
addr16
ds
das
sarl
xor
cmp
mov
push
out
fidivl
mov
jno
cmp
jo
pop
pop
dec
sub
fiadds
cli
aas
fdivrs
test
xchg
lods
cmp
sub
js
out
in
pop
xchg
jg
inc
add
xchg
cwtl
pop
push
loope
clc
inc
test
test
mov
and
mov
push
hlt
insl
and
sbb
sub
mov
mov
add
add
rorb
sub
data16
test
jecxz
out
iret
out
jle
sub
adc
adc
shll
inc
inc
jbe
pop
xchg
xor
push
or
pop
addr16
dec
mov
xor
jbe
das
adc
repz
dec
stos
mov
in
subl
stos
insl
xchg
xchg
movsb
dec
dec
movsb
cld
lock
ljmp
mov
ljmp
mov
or
cmp
gs
loopne
sub
push
mov
adc
mov
mov
mov
cmp
pop
mov
pop
addl
stos
mov
outsb
jle
xlat
scas
pop
inc
jne
out
inc
sbb
popf
repnz
ja
sub
cwtl
xchg
fwait
cli
sub
mov
mov
add
add
mov
and
xor
pop
jns
xor
pop
mov
out
call
iret
or
idivl
lds
push
cmp
icebp
mov
sbb
jp
sarl
mov
and
push
lods
or
lods
push
mov
movsb
out
dec
scas
cmc
mov
aas
xchg
jmp
adc
or
rolb
add
sbb
andb
fnsave
xor
dec
xchg
xchg
dec
inc
int3
test
cltd
imul
cmpsl
dec
cli
lds
into
pop
sbb
push
cmp
test
insl
xor
xor
jle
xchg
movsb
in
psadbw
inc
adc
mov
add
jnp
inc
mov
hlt
cmp
stos
push
fwait
xchg
jge
enter
xchg
cmp
push
xchg
jns
pop
cmp
add
call
adc
mov
xchg
add
xor
sbb
test
jp
cmp
aam
loop
mov
add
sti
pop
add
pop
inc
jo
lret
or
xchg
shlb
cld
cwtl
das
sbb
fmull
adc
fwait
in
ficompl
bound
ss
rcrl
ja
mov
cmp
je
jb
daa
cld
aam
lahf
add
push
mov
daa
cli
rcl
out
outsl
and
es
jae
test
arpl
jb
fs
lods
mov
cwtl
inc
inc
les
xchg
mov
or
push
dec
out
rclb
pop
cmc
lret
bound
dec
xchg
xchg
stos
add
incb
pop
fwait
dec
test
movl
add
hlt
or
adcl
cs
jo
cmp
push
fstp
mov
mov
loopne
inc
inc
cs
push
inc
add
repnz
dec
fcoml
jno
mov
in
sub
jle
jo
test
scas
mov
mov
push
add
cmp
daa
mov
inc
mov
jne
sbbb
add
outsb
xchg
mov
clc
stos
push
pop
jge
adc
mov
inc
sub
mov
and
push
les
add
insl
inc
inc
enter
aas
popa
cmpsb
add
push
leave
mov
outsl
inc
push
pop
add
imul
add
sbb
pop
sarb
ret
rorb
stos
orl
shlb
jne
and
lret
add
fisubrl
and
inc
sbb
xlat
rcl
pop
call
movsb
or
push
std
out
aad
mov
test
scas
dec
lock
mov
xchg
rcll
push
adc
or
dec
cmpsb
lcall
jmp
push
mov
movb
pop
pop
and
inc
jge
popa
test
add
xchg
mov
mov
fldenv
sahf
leave
pop
scas
or
fisubrs
xor
insb
out
sbb
mov
xchg
add
test
inc
jmp
arpl
cmp
clc
addl
and
xor
cmc
cmpxchg
incb
sub
mov
push
decl
test
xor
std
loope
arpl
dec
push
enter
jge
fsubrl
dec
dec
and
jmp
mov
lock
push
shl
adc
sub
pop
data16
popa
xchg
dec
out
xor
dec
clc
cmp
movsl
je
repz
sub
pop
push
std
loop
adc
push
mov
jno
xlat
or
clc
iret
and
xchg
pop
add
mov
out
xchg
gs
sbb
pop
push
mov
rcrb
out
mov
das
push
ljmp
xor
dec
mov
cmp
xchg
jno
std
xor
mov
push
div
scas
fmul
dec
arpl
add
test
add
fbstp
mov
xor
scas
add
sahf
sub
imul
cmpsb
jne
mov
jecxz
pusha
es
scas
mov
push
lock
aaa
fisttpl
add
mov
into
dec
icebp
sahf
push
mov
enter
int3
push
leave
out
mov
xchg
inc
adc
sbb
dec
fwait
jo
pop
andl
dec
push
mov
and
js
lods
adc
inc
xor
xchg
inc
inc
cs
in
mov
jae
xorl
jno
jbe
testb
and
fwait
xor
or
cmp
mov
xchg
subl
mov
mov
movsb
jp
inc
stos
gs
insb
cmpl
and
jnp
pop
mov
or
and
xchg
and
pop
movsl
pusha
jbe
out
shl
lcall
addb
idivb
or
fcompl
stos
fisubs
sbb
into
sub
xchg
test
outsl
xor
cmpsl
fsubs
mov
push
xchg
loopne
loopne
jns
ja
aas
sti
push
fs
sarb
xor
mov
add
rclb
push
ret
mov
mov
outsl
mov
pop
scas
iret
jle
push
add
popf
and
dec
f2xm1
sbb
push
push
hlt
mov
jl
xchg
jo
imul
adc
es
sbb
mov
in
and
dec
aaa
cli
sbb
xchg
inc
dec
in
mov
aaa
nop
jmp
mov
shrl
xchg
cwtl
repz
and
jb
call
icebp
push
ja
out
loope
sbb
push
movsb
into
or
clc
xorb
fisttps
push
leave
scas
cmp
and
cmp
xchg
sarl
insb
mov
push
in
pop
sbbl
enter
adc
pop
pop
dec
stos
dec
mov
scas
inc
cmp
incb
fwait
push
mov
pop
jb
and
js
fs
adc
push
aam
sub
mov
cmpsb
mov
and
push
imull
pusha
hlt
lahf
mov
inc
push
push
nop
pop
and
je
inc
andb
and
jnp
shl
and
mov
dec
cmp
sbb
adc
inc
je
mov
mov
iret
jno
mov
pop
sbb
pop
xchg
xor
sahf
orl
add
inc
jo
mov
push
lcall
jno
lea
or
clc
dec
push
cmp
pop
push
fimull
fwait
mov
mov
add
jg
lds
add
dec
rcl
cmp
cmc
repz
cmp
jecxz
lcall
mov
sub
shrb
dec
inc
iret
push
gs
rcrl
leave
inc
pop
jecxz
fnstcw
cmp
clc
dec
sub
sub
roll
lea
ds
stos
or
ficoml
stc
stos
clc
pop
mov
in
inc
ljmp
je
xor
pop
push
in
popf
hlt
xor
outsl
lock
pop
les
adcl
cs
out
pop
daa
adc
gs
xchg
sti
mov
dec
pop
imull
adc
lock
mov
adc
insb
mov
dec
push
out
mov
daa
add
xchg
mov
dec
shll
or
repnz
aam
rorl
add
dec
scas
jb
inc
call
aas
inc
mov
pop
sbb
lock
data16
fcoml
jmp
mov
or
std
rcll
jns
inc
jno
jbe
push
mov
sub
out
jb
testl
mov
or
repnz
lds
cmp
inc
jne
mov
test
imul
aaa
mov
push
mov
cmpsl
dec
data16
jo
icebp
gs
sbb
pop
pop
fnstsw
adc
xchg
mov
sbb
jne
add
lahf
dec
ret
ret
xchg
cmpl
cmp
mov
icebp
push
pop
into
jns
mov
mov
test
xchg
aaa
pop
imul
push
aad
or
xor
mov
push
jecxz
negb
push
sbb
jge
mov
pop
push
fs
xchg
jae
int3
cmp
push
insl
add
out
sub
movsl
out
dec
cmp
bound
sahf
xchg
mov
cwtl
mov
lds
out
loopne
jp
sub
cli
mov
mov
addr16
iret
jno
mov
leave
ss
leave
xchg
inc
fmuls
dec
adc
pop
daa
sub
mov
lcall
rcrb
lock
mov
xor
sub
je
insl
and
adc
xchg
ret
aas
mov
aaa
xor
inc
mov
nop
sbb
or
xchg
mov
pop
jns
inc
sahf
outsl
jno
and
movsb
add
aaa
insl
in
lock
int
dec
cmp
cmpsb
roll
lock
mov
out
sub
pop
mov
aas
sub
jmp
insl
insb
inc
fistps
sbb
sbb
lcall
push
mov
inc
jb
icebp
lahf
xor
adc
std
adcl
test
jnp
and
push
out
cwtl
pop
sbb
and
mov
arpl
xchg
xlat
test
mov
loop
xchg
fiaddl
data16
bound
in
sti
jle
adc
gs
dec
ficomps
adc
inc
mov
mov
or
pop
add
pop
les
push
xor
gs
push
jnp
xor
jo
sub
jne
aam
or
jg
dec
jmp
inc
mov
mov
add
pop
mov
pop
xchg
mov
mov
pop
negb
in
cmc
hlt
adc
into
add
dec
mov
xchg
xchg
jbe
jmp
dec
mov
repz
or
mov
push
enter
imul
cwtl
sub
mov
je
xchg
in
mov
aas
and
cmp
sub
xchg
ret
sbb
ficomps
and
dec
daa
das
arpl
dec
lock
jecxz
push
dec
and
insb
pop
push
in
push
adc
pop
ficompl
ret
adc
add
insb
push
adc
jmp
gs
pop
pushf
mov
out
pushf
imul
mov
push
rclb
out
aas
insb
mov
movsb
mov
mov
loop
rorb
mov
mov
icebp
fdivrs
incl
aam
pusha
inc
jb
mov
fnsave
push
pop
jne
loop
xor
xor
cmp
mov
jae
jno
mov
mov
lahf
faddl
scas
and
pushl
mov
jp
pop
xchg
cmpsl
lahf
andl
adc
jecxz
pop
jl
dec
adc
mov
pop
push
dec
jecxz
xor
in
xor
gs
inc
mov
sti
aas
cmp
popa
adc
cwtl
xchg
fldl
loopne
xlat
andb
ret
div
and
push
stc
xchg
call
lret
fnstenv
cld
add
pop
pop
cmpsl
and
mov
pop
aam
push
sub
xlat
push
test
clc
out
cmp
pop
addr16
xor
imul
sbb
gs
cltd
add
shl
cltd
rep
sub
mov
push
inc
mov
lahf
fnstenv
ljmp
or
aas
dec
dec
bsr
push
cmp
and
adc
mov
dec
xchg
xchg
cmp
xchg
jns
mov
mov
leave
sbb
aam
call
sbb
xor
inc
dec
xchg
inc
gs
sbb
mov
mov
mov
les
pop
cmc
push
xchg
addr16
jmp
repnz
in
leave
es
icebp
cmp
stos
repnz
mov
jle
xchg
mov
stos
and
pop
push
dec
pop
mov
cs
and
mov
mov
add
ret
arpl
sbb
and
int
sub
arpl
pop
sbb
sbb
mov
scas
scas
out
mov
pop
add
adc
push
adc
daa
and
ja
fcompl
das
pop
sbb
test
negb
dec
repnz
push
mov
push
sub
jg
scas
rolb
mov
mov
mov
pop
ret
aas
subl
dec
or
outsl
test
xchg
scas
popf
jo
mov
and
mov
mov
adc
lea
sti
and
dec
mov
push
inc
cwtl
push
je
sbbl
dec
sti
lahf
dec
add
xor
mov
vmovntdq
sbb
cld
or
jnp
sub
mov
cli
loop
ret
pop
out
dec
mov
xchg
sub
les
data16
jmp
imul
hlt
pop
loopne
jb
xor
jmp
jecxz
cwtl
and
push
adc
mov
data16
push
mov
loopne
cmpsl
insl
dec
das
pop
xor
pop
xor
scas
mov
jbe
js
loope
xor
push
push
ja
lods
mov
dec
loopne
jge
mov
test
arpl
outsl
iret
repz
sahf
and
mov
out
js
stc
out
imul
sub
jecxz
cli
xchg
inc
cld
pop
mov
mov
arpl
mov
push
imul
add
xor
and
stos
xchg
inc
inc
adc
out
push
pop
dec
lar
cmp
mov
xor
mov
outsb
push
inc
mov
and
mov
jg
pushf
out
sub
jne
popa
pop
or
mov
fwait
dec
xlat
orl
es
fisttps
inc
dec
cmp
mov
flds
sahf
imul
xor
fisubl
xor
xchg
sub
jae
pushf
pop
jno
or
mov
movsb
das
xor
cmp
push
loope
jno
add
cmp
sbb
out
incb
fsubrs
sub
sti
andl
and
cmp
push
xor
xchg
hlt
int3
lods
push
nop
stos
jbe
pop
rcr
stos
stos
dec
jo
repnz
decb
mov
pusha
imul
push
pop
sahf
cld
addr16
orb
sti
or
push
loope
aam
jns
sub
ja
add
adc
push
jg
jno
inc
xlat
push
arpl
test
out
jge
or
in
and
ret
add
or
mov
or
add
clc
adc
jb
pop
lods
pop
and
push
xchg
mov
dec
xor
and
mov
data16
into
mov
cmp
adc
divb
stos
test
adc
fdivl
and
mov
sahf
in
movl
cmp
xchg
jnp
push
xchg
pop
add
jmp
jge
inc
lret
out
das
dec
mov
cli
arpl
jecxz
pusha
icebp
sbb
shlb
hlt
pop
or
lock
dec
pusha
icebp
stos
shr
mov
xlat
cmp
les
ds
cmp
xchg
push
fneni(8087
loope
xchg
movzwl
jns
shr
jg
fdivl
sbb
jne
jg
sarl
jmp
mov
jno
add
mov
aam
mov
cmp
or
fst
jb
cmpsb
xor
cmpsl
jne
inc
push
push
xor
push
iret
repz
xorb
xor
scas
in
scas
pop
mov
cmp
ljmp
xchg
in
movsb
mov
and
inc
inc
std
loop
ss
pushf
xchg
pop
mov
cmp
jle
test
dec
cmp
inc
mov
mov
add
sub
insl
pop
mov
cltd
push
loop
jnp
shll
jns
push
jmp
mov
fisubrs
inc
push
xchg
lods
jns
bound
jns
shrb
call
mov
pop
test
pop
jp
rcrl
cmp
jne
or
int
shr
dec
in
xor
sub
jmp
sbb
sub
stos
cmp
sbb
xor
testl
sti
test
out
inc
adc
out
lds
pop
lcall
xchg
in
fildll
lds
jbe
je
push
pop
lods
xchg
mov
xchg
sbb
mov
jbe
mov
aaa
outsl
test
gs
sti
sub
loopne
leave
jg
jmp
xor
and
mov
gs
adc
mov
pop
or
lock
aam
cmp
sbb
pop
call
sub
jbe
xchg
dec
sbb
pop
pop
arpl
sbb
mov
fs
and
lcall
out
cld
testl
or
repnz
mov
lea
insb
aaa
and
or
leave
std
sahf
adc
clc
or
push
sahf
aas
stc
sub
xchg
and
sub
xchg
cwtl
push
lahf
movsb
aas
sete
and
fists
cmp
mov
and
lods
mov
addl
or
push
adc
sub
jnp
fisubl
pushf
xor
mov
pusha
add
jb
lds
rcrb
outsb
dec
inc
insl
aaa
repnz
fs
adc
cmp
cmpb
pop
or
stos
add
daa
fmull
cmp
popf
insl
sti
xchg
enter
mov
xchg
nop
ret
mov
cmp
add
scas
or
xchg
imull
or
fs
xchg
jp,pn
mov
das
popa
cli
ret
sahf
mov
sub
lock
inc
call
gs
or
mov
rcrl
insl
pop
enter
mov
mov
out
cmp
aad
push
cmp
aam
adc
xlat
fsubrs
gs
les
jl
sbb
and
cmpsl
mov
loopne
jg
inc
add
fidivs
gs
xor
mov
nop
jp
push
mov
fcoml
cli
add
fldt
sar
push
add
std
pop
or
or
pop
mov
test
test
dec
push
out
test
incl
inc
scas
dec
mov
xor
aam
inc
pop
sub
add
inc
jecxz
mov
mov
jns
cmp
mov
and
rclb
mov
int
inc
into
push
lret
fcompl
test
iret
mov
xlat
cli
iret
xor
imul
xchg
mov
mov
in
xchg
outsl
mov
or
push
inc
mov
pop
xor
push
pop
or
xchg
xchg
mov
fiaddl
gs
mov
out
cmp
jbe
cmp
loope
add
imul
push
cmp
mov
icebp
mov
mov
cltd
xchg
in
outsb
dec
in
cmp
inc
stos
push
decb
xchg
jne
ss
inc
stos
loopne
int3
mov
mov
cmp
pusha
cmp
cmpsl
sub
mov
xchg
pop
jl
pavgw
test
inc
jae
push
scas
inc
jle
out
sarb
pop
arpl
sahf
push
cmpsl
aaa
lds
push
push
je
and
arpl
js
inc
repz
pop
cltd
movsl
mov
insb
add
dec
aaa
lret
sub
call
pusha
orl
dec
lock
add
and
out
cmc
push
loop
imul
mov
mov
mov
push
dec
mov
es
bnd
push
xchg
push
mov
inc
add
fnstenv
je
sbb
neg
lcall
ds
dec
ljmp
mov
pop
push
xor
jb
je
or
ss
push
jp
jmp
nop
xchg
xor
push
test
xchg
push
lds
test
fisttpll
shl
pop
sub
push
shl
mov
cmpl
bnd
dec
xchg
lds
mov
xchg
xchg
int
arpl
loope
shl
fs
sbb
in
icebp
js
loope
add
in
xor
and
xorb
pop
push
xchg
pop
jmp
imul
or
dec
pop
sub
call
push
les
mov
stos
pop
inc
xchg
lret
mov
pop
fnstsw
and
cltd
add
mov
lods
push
xchg
ret
xchg
mov
mov
orl
daa
repnz
rol
cmp
xchg
arpl
pop
cmp
sbb
xor
push
movsb
mov
jmp
pop
fs
push
mov
pop
mov
add
vpunpckhdq
aaa
fdivs
es
inc
add
dec
cs
adc
and
xorb
mov
or
or
adc
xchg
jo
mov
lea
inc
lcall
jecxz
xor
sub
pop
push
xchg
add
mov
test
pop
ss
stos
xchg
in
cmp
pop
dec
jno
daa
int
fxch
les
loope
sti
sub
xchg
jns
mov
popf
scas
jg
inc
dec
cltd
pop
popa
push
mov
dec
mov
loopne
jnp
std
loop
cmp
shlb
pop
sub
mov
negb
stos
icebp
stc
inc
jnp
fs
aad
out
cmpb
mov
sbb
call
test
scas
mov
jo
xchg
mov
stos
into
insl
jne
and
call
lods
push
sti
jmp
xlat
cwtl
aad
and
xchg
gs
hlt
inc
inc
lea
into
jo
mov
adc
gs
imul
loope
adc
cmpsb
xchg
mov
enter
jle
xorb
mov
sahf
cmpsl
imul
pop
push
mov
das
lea
or
cmc
jbe
mov
mov
dec
sbbb
xchg
fwait
in
mov
mov
push
push
cmp
push
mov
push
insb
mov
pop
aad
movsb
mov
adc
addr16
jle
aaa
xorb
pop
cmp
ret
cli
lcall
sub
push
xchg
out
popa
arpl
ret
mov
iret
ds
cmpsl
pop
jae
test
dec
xchg
movsb
ret
fistps
ljmp
call
sti
lock
stc
outsl
ffreep
push
test
mov
roll
inc
add
jb
nop
fs
mov
or
lods
or
mov
pushf
xchg
jbe
js
fisttps
mov
es
push
mov
sub
js
xchg
fisubl
push
xor
cmp
mov
lods
cmp
daa
aam
addb
fwait
pop
push
push
or
fxch
mov
sarl
mov
sbb
mov
mov
mov
aaa
fs
lcall
stc
dec
insb
lahf
push
outsb
popl
lods
sbb
pop
xor
inc
adc
pop
ja
xor
mov
inc
ret
test
fnsave
mov
pop
lea
aam
push
test
insl
imul
cmp
add
xor
ret
and
mov
jecxz
test
xchg
in
inc
stos
mov
sub
nop
decl
rolb
ss
cs
adc
mov
xlat
out
enter
push
cs
or
popl
sbb
inc
push
mov
imul
ret
pusha
enter
ret
xor
mov
mov
data16
cs
jne
stos
loopne
push
out
sbb
enter
jbe
pop
fs
pop
and
gs
xor
mov
mov
mov
pushf
xchg
lock
jno
je
loopne
mov
jle
repnz
sub
add
and
pop
mov
jo
int3
test
arpl
mov
fsin
cmc
push
sub
add
jp
pop
add
jg
xchg
fnsave
jnp
enter
xlat
and
faddl
push
shrl
insb
mov
and
xchg
jb
test
or
out
sbb
lcall
xor
or
xchg
inc
dec
dec
cmpsl
mov
cmovne
pop
dec
dec
lds
out
inc
adc
cmc
dec
cmp
dec
inc
jbe
inc
enter
gs
in
sbb
movsb
jnp
xchg
shlb
jo
mov
stos
mulb
and
jnp
shrb
leave
and
pop
aad
mov
sbb
repnz
or
adc
mov
cwtl
push
jb
movsb
mov
insl
idivb
sbbl
and
inc
xor
inc
inc
popf
gs
mov
xchg
mov
cmp
sbb
rol
lds
xchg
push
and
jmp
xor
fildl
xchg
push
icebp
cmpsb
or
adc
or
cmp
push
mov
adc
hlt
add
add
das
aas
xchg
aam
ret
cmp
jae
adc
adc
mov
lds
adc
xchg
es
into
xor
mov
cmpsb
sahf
mov
js
ljmp
jmp
cmp
and
push
aam
fnstsw
mov
leave
jo
repz
cmp
jne
aam
aad
test
loop
ror
popf
pop
out
in
xchg
cmp
out
daa
or
mov
arpl
mov
lods
push
in
mov
mov
subl
xor
jns
data16
lods
ret
and
rclb
sub
xchg
sub
mov
mov
movsl
pop
test
sub
fdivrs
dec
jl
mov
or
mov
movl
repnz
push
push
pop
sti
lahf
pop
popf
mov
jno
jnp
sbb
cmp
lret
inc
xor
xchg
shl
cmp
cmp
ficomps
movsb
xchg
shlb
mov
and
xchg
fnstenv
xchg
or
mov
into
add
loop
or
fadd
push
jbe
jmp
int
ljmp
jg
in
stos
and
arpl
push
mov
mov
lahf
in
jne
int3
dec
xor
adc
sbb
fucomip
cmc
xchg
out
pop
out
inc
test
fwait
jmp
out
in
mov
lcall
testl
sbb
mov
mov
inc
jnp
mov
jne
push
pusha
pop
addb
jg
add
mov
xchg
rclb
push
mov
sahf
mov
mov
fistps
xchg
inc
shl
decb
popl
xor
xchg
fs
mov
pop
jbe
aad
sub
iret
ficoml
lahf
pushf
imul
out
stc
adc
das
xchg
icebp
fildl
fdivrp
repz
lods
icebp
enter
dec
inc
clc
pop
arpl
mov
insb
movsb
out
out
adc
scas
mov
shll
in
pop
push
push
sti
xor
dec
nop
test
ljmp
inc
loope
pusha
ret
fs
and
sub
inc
insb
fnstcw
pop
dec
cmpsb
add
bound
pop
add
mov
sub
adc
inc
fstp
fidivrl
iret
aas
lret
insb
or
cmp
xchg
sti
sti
jmp
sub
out
pop
cmp
dec
inc
hlt
iret
sar
lcall
test
dec
adc
push
sti
stc
push
out
jno
leave
and
mov
lret
sbb
std
loop
repz
mov
lcall
or
aam
sub
xorb
ret
pop
loop
out
adc
dec
inc
addr16
jecxz
or
and
inc
pop
mov
dec
xchg
push
jmp
xchg
jb
add
mov
repz
xchg
scas
push
mull
sbb
mov
adc
jge
ds
mov
xor
js
arpl
aad
mov
test
js
call
int
push
sbb
mov
in
imul
sbb
arpl
add
and
data16
lods
mov
mov
les
jne
andb
imul
dec
outsb
mov
sti
pop
lahf
dec
repz
pop
adc
div
adc
icebp
jbe
jo
mov
lock
ret
fldcw
mov
andb
insb
ljmp
in
mov
sub
mov
enter
test
pop
rolb
push
in
push
rcl
mov
lock
mov
sub
mov
cs
sub
push
jne
out
add
dec
in
ljmp
mov
jo
jbe
and
sbb
sub
fcomps
jmp
pop
movsl
fildll
xchg
mov
rcl
nop
cmp
stc
out
rorl
sub
mov
xor
pop
add
loopne
add
fs
sub
cmp
je
aaa
pop
in
adc
adc
pushf
jg
or
xor
and
adc
test
sub
fisubrs
sbb
pop
cwtl
sahf
push
mov
sbb
cmpsl
mov
sub
ljmp
out
test
push
mov
fs
xchg
popf
mov
adc
aam
test
lcall
testw
adc
loop
jg
jge
adcb
dec
push
aas
lret
hlt
aas
sahf
cltd
loope
jecxz
out
jge
gs
loop
arpl
sbb
jno
fmull
idiv
rclb
cmp
aaa
lea
xorb
xchg
dec
in
dec
js
inc
mov
scas
ret
les
ds
jge
sti
pop
ljmp
imulb
pop
pop
stos
sbbb
dec
sbb
adc
mov
mov
leave
inc
cmp
ret
sub
adc
and
loopne
jno
mov
icebp
cmp
out
jl
add
push
repnz
loopne
rcrl
lret
dec
addb
cmp
push
mov
aas
push
ds
in
jae
mov
add
repz
clc
or
cmp
cmp
movsl
inc
pop
ret
mov
iret
orl
call
jo
loop
xlat
dec
pop
incl
pop
insb
dec
sub
xchg
xchg
xor
mov
enter
jmp
sbb
test
rcll
ret
imul
mov
jae
inc
jbe
push
mov
lret
faddl
add
push
and
or
xchg
inc
push
pusha
mov
jne
sarb
jg
pop
dec
fs
repnz
fs
or
sbb
lahf
mov
xchg
scas
cmpsl
pusha
clc
push
push
push
lret
push
cli
outsl
loope
jg
adc
jl
sub
adc
aaa
ds
loope
daa
or
popf
out
fisttps
cmc
das
addr16
fstpt
sbb
push
loope
dec
xor
sbb
ret
xlat
jmp
test
aaa
imull
pop
sti
inc
loop
push
mov
inc
mov
outsl
pop
repnz
dec
pop
ds
pop
push
dec
inc
or
nop
and
fisubl
test
pop
mov
sbb
cmpsb
ss
jae
or
inc
hlt
sbb
nop
mov
imul
scas
xor
xor
jge
das
leave
stos
inc
inc
mov
jbe
clc
xchg
incb
ds
adc
mov
test
xor
adc
push
shl
leave
pushf
cs
mov
cmp
mov
ds
adc
outsl
ror
add
sahf
dec
jne
mov
pop
aam
rolb
sbb
or
cmp
xchg
fs
js
shl
in
repnz
jge
jp
pusha
dec
jno
fimull
xchg
adc
xchg
shl
into
sbb
cld
jns
pop
sbb
lods
faddp
movsl
and
sahf
adc
out
jb
addr16
mov
pop
push
lcall
rclb
arpl
adc
shll
stos
and
push
sub
pop
stos
call
jle
jl
shr
xchg
or
mov
cmp
aad
enter
sub
mov
cmc
inc
int
scas
je
mov
xchg
mov
push
fs
xor
jno
dec
and
sbb
jecxz
ja
pop
gs
test
enter
adc
mov
sub
test
sub
xchg
xor
movsl
rcrb
icebp
pusha
sbb
xchg
pushf
inc
in
cltd
jno
fidivs
cwtl
mov
dec
fisttpl
inc
outsb
movsb
mov
xchg
push
adc
jmp
jmp
pop
push
sbb
mov
mov
sbb
jne
iret
jno
and
nop
addl
or
cmp
sub
fdivs
add
cs
pop
jg
shrl
mov
sahf
pop
or
lods
pop
inc
cmpsl
xchg
repz
and
jns
mov
add
jge
cld
out
push
adc
push
popf
adc
call
or
and
loope
xchg
sbb
xor
sub
mov
push
xor
pop
mov
mov
cltd
xchg
lahf
mov
nop
add
jb
es
xor
nop
cmp
pushf
and
stc
xchg
clc
test
cmp
outsb
xchg
ret
push
sub
andl
incb
or
adc
aas
test
xor
insl
clc
adc
in
mov
mov
xor
mov
divl
in
fistpl
out
inc
sbb
jb
inc
outsb
out
in
cmpsb
in
pop
sbb
arpl
lods
mov
mov
inc
mov
fdivrs
cltd
lds
loop
dec
cwtl
push
lret
mov
xchg
add
cwtl
push
test
sbb
mov
add
jb
ljmp
pushf
ds
sahf
sbbb
push
ret
jae,pn
data16
sarl
out
xchg
in
or
shrb
or
ss
ret
loop
cmp
in
fcomps
fisubrl
jbe
in
scas
mov
dec
ret
lret
int3
xchg
xchg
mov
add
rcrl
ljmp
xchg
sub
out
fisubrl
into
dec
push
ds
or
cwtl
ja
sub
xchg
push
mov
shr
stos
jmp
pop
xchg
imull
jl
xchg
add
jg
sbb
xor
pop
mov
arpl
adc
test
add
and
loopne
arpl
dec
add
daa
xchg
xor
mov
fadds
mov
bnd
lods
loope
dec
data16
xor
or
nop
stc
in
add
push
jne
sti
pop
sbb
cmpsl
mov
push
out
das
lcall
lcall
xor
mov
add
push
cld
test
rcll
ret
xor
fstps
cltd
pop
dec
cmpsb
cli
xchg
std
shll
cmove
dec
cwtl
inc
xor
push
leave
mov
xchg
jl
sti
or
sarl
cmpsb
bound
ds
or
dec
cs
mov
cli
jecxz
popf
js
sub
clc
adc
or
sahf
jg
mov
cwtl
or
and
push
aaa
insl
add
sbb
dec
insl
adc
jbe
pop
fidivrs
insb
cmp
mov
push
in
aaa
sub
scas
rol
aaa
and
dec
mov
scas
xchg
jne
cmp
or
inc
add
xor
loopne
popf
adc
inc
or
nop
aad
insl
push
mov
mov
jae
pop
pushf
pop
sub
and
push
mov
fnstcw
cmpsl
cmp
xor
outsb
ficoms
in
add
aam
xchg
mov
or
scas
fdivrs
inc
sbb
add
inc
es
fcmovnu
dec
xor
dec
stos
mov
mov
sbb
or
sbb
aas
lods
jne
repz
out
cmc
out
pop
mov
push
cmp
das
pmaxsw
bnd
lret
test
sbb
mov
jl
in
pop
enter
movsb
and
sub
lret
xchg
ficoms
add
fmuls
and
inc
jl
mov
pop
in
repnz
enter
shrb
out
cld
loope
insl
stos
incb
jg
in
pushf
into
gs
ja
test
sbb
outsb
clc
js
xchg
ret
add
mov
inc
sti
out
mov
mov
icebp
pop
or
push
nop
test
mov
aam
repz
mov
out
insl
stos
cmp
loop
rolb
jl
loopne
bound
jg
test
inc
jge
xor
ficomps
jg
ds
pop
je
inc
addl
mov
bound
ds
imul
and
aaa
mov
nop
cmpsl
lods
sbb
push
in
adc
sbb
xor
sbb
repnz
test
int
xor
icebp
xorl
cmp
and
sub
dec
negb
adc
jge
jge
aas
mov
leave
repnz
std
lcall
xchg
jo
xchg
int3
in
and
ret
lcall
adc
js
enter
pop
inc
or
inc
mov
cli
add
faddl
jle
cwtl
jo
bound
lret
xchg
pop
sti
sbb
jg
mov
sti
and
sub
popf
fs
lret
insb
flds
cld
inc
lret
or
outsb
hlt
mov
pop
nop
jle
roll
dec
aas
mov
inc
shll
push
jns
dec
xor
sbb
xor
das
out
sbb
adc
jge
mov
jle
pop
and
nop
xor
xorl
push
or
stos
mov
adc
icebp
std
lds
pop
or
mov
mov
mov
cmpsl
mov
cltd
test
sbb
mov
hlt
mov
push
or
push
mov
seta
pop
cmp
and
addr16
roll
and
jbe
dec
push
cmpsl
sub
lods
cmpsb
adc
push
shlb
mov
pop
cmp
lcall
dec
push
fnstsw
sbb
jmp
mov
inc
jg
adc
dec
shl
test
in
mov
mov
aas
shrl
mov
addr16
jge
pop
into
dec
in
cmp
sbb
call
mov
shl
fsubl
jecxz
sub
add
xchg
jbe
xor
push
or
add
cmp
into
pop
sbb
jnp
aad
dec
fdivrp
scas
outsb
dec
add
popf
fldl
cmpl
inc
out
jecxz
in
shlb
xchg
xor
jg
add
stc
outsb
dec
js
dec
sub
popa
jbe
rorl
jo
testb
dec
jmp
cmp
cmp
mov
out
loopne
adc
ret
cvtdq2ps
push
test
test
orl
scas
xchg
xchg
pop
fiadds
mov
outsl
inc
inc
rcrb
enter
xchg
movsb
xchg
inc
dec
jae
xchg
sub
imul
out
lds
int
ds
enter
cmpsb
xor
sbb
push
and
xchg
mov
and
out
and
out
int
inc
scas
add
push
cltd
inc
adc
in
sub
xchg
ret
subl
cld
lret
pop
les
and
ss
frstor
leave
inc
int3
push
pop
les
rorb
jno
pop
xor
mov
add
icebp
addb
rcrb
xorb
jb
push
faddl
push
pop
call
sbb
mov
test
and
fwait
jle
add
add
lcall
push
mov
xchg
ljmp
cli
inc
jne
es
cmpsb
push
jo
sub
adc
xchg
push
cmc
and
pop
test
and
out
addr16
aam
int3
inc
mov
jecxz
mov
dec
jecxz
ds
add
mov
sti
notl
push
xor
imul
ffree
fidivl
cltd
mov
cmp
movsb
jno
push
add
dec
inc
mov
dec
cli
cmc
xor
rolb
cvtdq2ps
stos
sub
or
std
mov
cmpsb
pop
sarb
jmp
mov
loopne
test
mov
sub
ret
test
sub
in
addr16
inc
ret
push
pushf
scas
test
scas
mov
lcall
mov
leave
ljmp
movl
jb
or
inc
push
cli
mov
mov
loop
or
jg
fcomps
sbbl
mov
cmp
movsb
popa
ljmp
iret
push
movsb
ss
dec
or
or
sbb
fs
push
loop
fcmovnb
data16
loope
pop
cli
lods
addr16
lret
or
scas
jb
in
adc
mov
jecxz
scas
and
jmp
test
js
pop
outsl
imul
jbe
jp
imul
sbb
or
and
or
lods
arpl
movsl
xor
and
sbb
sub
adc
cmp
cwtl
imul
cmp
loop
adc
in
into
inc
stos
and
flds
adc
shl
sub
dec
push
loopne
mov
add
fninit
ret
dec
stos
aas
mov
push
hlt
popa
mul
and
dec
xlat
push
repnz
dec
rcll
aas
add
int
ret
sub
imul
hlt
pop
inc
jno
pop
popf
or
pop
push
sub
and
mov
lcall
add
loope
clc
aam
add
ret
ss
out
add
loope
or
out
mov
not
pop
lods
cmc
cmpsl
aas
in
repnz
pop
xchg
enter
incl
outsb
jmp
cmp
push
push
adc
js
cmp
mov
shlb
mov
inc
popf
adc
mov
push
mov
add
mov
es
rorb
jle
push
incb
jno
mov
adc
dec
cmp
imull
mov
rorl
dec
xchg
jne
test
aaa
dec
push
xchg
movsb
or
cmpsl
pop
ljmp
bnd
adc
mov
cmp
andb
cwtl
jne
iret
andl
lea
popa
fistl
aam
call
cmpsl
xlat
js
into
and
sahf
sub
aad
cmpsl
push
mov
mov
out
cmpsb
in
mov
mov
pop
out
pop
cs
lret
shll
xrelease
sbb
jl
sti
call
int
cmp
repnz
xchg
les
xchg
pop
loop
shr
test
push
cli
xchg
aad
movl
pop
scas
pop
testl
mov
dec
xor
xor
in
push
pop
aaa
mov
pop
xchg
add
fwait
jne
sbb
lock
adc
jne
outsb
mov
notl
outsb
mov
aas
scas
or
nop
or
add
iret
dec
divb
xchg
sti
push
jae
xlat
inc
add
int
ljmp
in
push
aas
ja
mov
jo
xchg
inc
aas
mov
stos
lds
movsb
outsl
inc
sbb
jnp
sbbl
sub
xchg
cmpsb
jle
jno
aad
sti
dec
adc
jge
shlb
add
inc
cwtl
mov
sub
add
and
cmpsl
jmp
xchg
js
xchg
jne
dec
cmp
inc
jbe
ret
mov
in
popa
mov
mov
mov
push
and
js
outsl
out
test
aas
mov
push
dec
adc
lods
pop
loop
addr16
xchg
mov
les
adc
pop
xchg
push
jmp
fwait
aas
sti
mov
xchg
dec
push
neg
addl
mov
outsl
shrl
dec
enter
shll
jb
jno
mov
sub
xor
movsl
imull
sub
scas
cwtl
cmp
loopne
aad
jbe
or
fnsave
pop
xorb
outsl
movsb
push
add
das
mov
add
cltd
xor
rcrl
xor
ret
lock
js
shll
and
lret
push
jp
test
pop
mov
sbb
pop
repnz
pop
negb
iret
jge
mov
lock
mov
in
cmp
icebp
mov
test
loop
lahf
movsb
sub
shlb
std
sbb
add
iret
sbb
aas
stos
mov
mov
in
jle
aad
adc
mov
pop
scas
xchg
sub
pop
add
pop
or
jle
movsl
push
xchg
jl
inc
ss
in
and
mov
pop
xor
dec
push
cmpsl
call
xlat
and
test
bound
test
mov
push
clc
mov
adcl
mov
cmpl
stos
ret
inc
das
lock
popa
into
dec
lahf
jl
xchg
inc
push
mov
jp
push
xchg
sub
stc
test
jbe
pushf
mov
cmp
or
lret
xchg
scas
repnz
cmp
ds
inc
push
mov
das
popfw
movsl
add
add
sub
pop
ss
pushf
xor
pop
adc
xchg
push
push
enter
xchg
mov
scas
push
out
bound
mov
dec
in
lret
sahf
mov
push
sbb
dec
push
lds
popf
push
fldt
xchg
adc
out
inc
pop
mov
push
sub
std
pop
sahf
push
iret
imul
sub
ss
mov
js
mov
push
add
dec
jne
cs
xchg
les
inc
mov
test
push
mov
pop
and
xchg
jo
lock
push
push
stos
aas
nop
push
mov
cmp
cwtl
dec
cmp
movsb
sbb
movsl
sbb
pop
addb
mov
in
dec
adcb
dec
xchg
add
fucomp
fmull
xchg
fistl
bound
adc
fidivrs
lock
jns
cmpsb
lea
or
xorl
adc
es
cld
mov
lret
ficomps
int
jb
sub
mov
push
lret
sub
shll
cmp
push
push
dec
nop
sub
pop
shll
out
push
cmpsb
loope
or
xchg
pop
ljmp
add
xchg
inc
mov
andb
cmpsb
cmp
push
das
flds
jns
mov
dec
sbb
test
or
stos
sbb
or
pop
pop
shr
inc
and
or
jo
jle
int
call
add
pop
xor
addr16
addr16
insb
insb
mov
or
jne
flds
enter
in
push
add
stc
mov
pop
inc
mov
fwait
push
inc
add
mov
mov
cmp
push
and
push
push
int
dec
mov
shlb
mov
pop
loop
push
pop
fcomps
add
push
pop
mov
sbb
dec
mov
pop
clc
out
into
aad
clc
push
xchg
ja
mov
cwtl
cmpsb
lock
ret
mov
pop
fiadds
in
push
divb
sbb
icebp
in
sub
or
out
xchg
xchg
ror
rorl
sub
cmpsl
jmp
idivl
stos
xlat
sbb
popa
push
in
push
addr16
xor
jp
cmp
adc
pop
fldenv
pusha
arpl
arpl
xchg
sar
push
add
packssdw
adc
orl
je
dec
outsb
popa
cmc
adc
xchg
ret
xor
iret
add
clc
int3
push
and
adc
sbb
or
push
sarb
jns
jns
cwtl
mov
push
fiadds
aaa
jo
int3
imul
and
inc
fcmovnb
sbb
sbb
negl
xchg
mov
adc
rcrb
ja
push
daa
xchg
popa
push
fucomp
aas
xchg
pop
push
push
mov
jo
xchg
cmp
loop
add
fisubrs
fucomp
xchg
add
shlb
inc
ja
push
fstps
mov
je
cmp
mov
test
cmp
les
insb
loop
cmp
mov
sbb
xchg
fwait
jb
mov
int3
ret
xchg
sbb
outsb
pop
dec
or
icebp
subl
xchg
call
push
xor
jle
sbb
jge
fcoms
lods
cmp
mov
push
hlt
jbe
lds
setp
shr
push
cltd
add
int
ds
in
dec
cli
push
adcb
adc
xchg
jp
and
and
sti
loop
push
mov
test
jnp
rorb
lds
jmp
es
imul
sbb
repz
inc
mov
lret
mov
jae
outsl
das
and
roll
fs
std
jecxz
addr16
inc
neg
jecxz
or
mov
jge
pusha
pop
jo
pusha
pop
fnstenv
mov
mov
loope
imul
arpl
lahf
adc
in
mov
push
inc
mov
cmpsl
cwtl
cmpsb
inc
enter
cmp
imul
and
jecxz
dec
sbb
push
inc
test
mov
add
xchg
out
push
dec
movsl
sub
xchg
clc
adc
mov
push
cmpsl
mov
inc
cmpsb
add
pusha
cmp
sbb
arpl
adc
addl
cmp
test
jne
rcll
sbb
and
push
cmpb
loopne
inc
fdivr
adc
mov
ret
sbb
and
mov
lret
loop
in
xlat
scas
mov
inc
in
cmp
imul
scas
xor
dec
movsb
subb
and
inc
mov
orl
rolb
stc
dec
subb
push
fsubl
sub
inc
add
add
stos
cld
movsb
into
icebp
mov
or
ret
cmp
pushf
nop
fwait
xchg
loop
insl
and
scas
mov
push
xor
into
adc
arpl
cmp
pop
out
mov
push
sarl
dec
mov
jae
je
fcmovbe
mov
scas
cld
push
cmpsl
arpl
and
lahf
imul
iret
cmp
mov
mov
jmp
cmp
pop
gs
fadds
js
pop
sbb
enter
lods
sbb
into
xor
mov
jnp
je
cs
rcrb
fistpl
push
mov
lea
xor
or
pop
add
or
hlt
mov
stos
xchg
sub
addr16
mov
mov
mov
stos
xchg
mov
cmpsb
sti
movsl
jecxz
add
or
ds
cli
and
jmp
ret
inc
push
mov
pop
cs
in
xor
movsb
inc
stos
dec
ret
movsb
push
jl
outsl
adc
rclb
cmp
push
bound
dec
mov
jge
mov
add
repnz
daa
call
scas
lahf
add
lock
fdivs
and
or
push
repz
sbb
mov
aas
pop
fcoms
and
popa
lea
push
or
inc
cmp
push
sahf
pushl
fadd
adc
popf
adc
pop
aad
mov
nop
ror
push
adc
lret
daa
test
popf
push
lods
sub
lds
ret
adc
push
cmpsb
dec
pop
sub
mov
cmp
mov
fists
stos
shrl
shr
mov
sbb
adc
add
lahf
dec
cmc
aaa
es
and
out
ss
hlt
mov
leave
lret
in
mov
stc
dec
sub
call
mov
movsl
inc
sub
jmp
push
pop
mov
push
mov
jl
mov
fldenv
and
cltd
aas
mov
inc
adc
add
leave
fidivrl
icebp
ja
sti
bound
loope
dec
lcall
pop
aaa
sbb
pop
dec
add
cmp
xor
sbb
xchg
pop
int3
and
test
pop
mov
ja
pop
mov
jecxz
mov
mov
jb
mov
test
add
xchg
test
mov
or
or
repnz
pop
aas
xchg
xchg
sbb
pop
pop
movsb
rcrl
fstps
mov
mov
stos
mov
outsl
jle
xorl
mov
adc
popf
popf
movsb
push
es
arpl
xchg
fiadds
jmp
es
push
pop
mov
mov
xor
jg
iret
and
in
cmp
cs
jg
jae
push
pop
sub
xchg
jbe
xchg
mov
jg
jo
clc
pop
mov
cmpsb
pusha
shlb
xchg
testb
aam
inc
jae
sti
ret
cmc
adc
mov
sub
mov
xor
scas
lcall
or
les
aaa
jno
cmpsb
and
test
rcrl
or
push
mov
mov
mov
push
stc
inc
pop
cmp
mov
scas
mov
insb
add
push
ret
outsl
sub
sbb
or
jbe
ss
aaa
jbe
std
and
cmpl
pop
in
jne
inc
sub
lods
jb
leave
sbb
inc
jae
mov
cwtl
pop
lahf
mov
mov
stc
popa
fs
ret
outsl
cmp
lock
xchg
ss
push
xchg
stc
mov
sbb
jnp
cmp
lcall
mov
xchg
cmp
push
xchg
in
push
lcall
shlb
cmp
sbb
inc
rcll
pop
int
push
aad
xchg
push
sbb
cld
stos
pushf
cmp
mov
mov
cli
cmp
arpl
repnz
mov
lret
pop
xchg
sbb
mov
lret
aaa
and
into
pop
push
adc
mov
rorb
sub
out
dec
jo
test
mov
pop
ret
adc
jmp
out
outsb
sar
inc
pop
andl
popf
les
movq
lock
pop
jnp
push
add
mov
mov
dec
push
mov
lcall
fistps
pop
clc
cmp
js
lret
addr16
rorl
jge
or
fucomp
daa
std
ret
xchg
mov
jg
mov
adc
fistps
insb
and
or
stc
loopne
add
in
push
out
jp
and
ss
loopne
negl
mov
dec
incl
hlt
dec
popf
push
xor
mov
adc
test
loop
lret
xor
shr
xlat
sbb
cs
cmpsb
xchg
cmpsl
imul
jae
dec
fimuls
sbb
addr16
popf
cmp
pop
xchg
movl
fidivrs
dec
sbb
mov
mov
or
aam
imul
fs
pushf
cs
xorb
push
push
in
jmp
stos
pop
fdivrs
pop
addl
add
inc
dec
dec
mov
pop
pop
add
les
xchg
fstpt
divw
mov
nop
enter
and
push
sti
push
stos
pop
subl
dec
mov
scas
pop
dec
fbld
or
mov
test
pop
dec
jno
jl
or
push
and
fsubrs
jge
jl
imul
push
fidivrs
insl
cli
in
clc
clc
jmp
sbb
jg
sub
stos
push
jo
outsb
mov
lds
sub
mov
xchg
jg
and
imul
push
nop
cld
pop
and
pop
fstps
adc
sub
mov
cmp
mov
mov
cmpb
sbb
and
jge
mov
xchg
stc
cs
add
stc
sbb
adc
int
jbe
aas
leave
es
mov
xchg
inc
and
push
pushf
adc
jle
push
xchg
mov
mov
push
test
xor
sbb
js
mov
out
fdivs
adc
out
enter
imul
and
jns
adc
aad
and
mov
jmp
test
js
add
aad
mov
xorb
jb
test
movsl
in
push
inc
lahf
inc
push
les
movsl
jb
push
ja
or
add
mov
add
aam
idivl
xchg
aam
pop
movsl
pop
movsb
lods
in
mov
sbb
ret
push
jp
test
fadd
aad
enter
js
adcb
lcall
add
stos
adc
into
mov
lcall
or
xor
jmp
fldenv
jns
mov
add
jbe
push
clc
and
inc
mov
lret
jns
inc
xorl
out
inc
xchg
xchg
pop
fistl
add
push
pop
mov
xchg
adc
xor
shrl
xorl
cmpsb
int3
mov
orl
mov
movsb
push
jne
dec
xchg
insl
aad
iret
divb
and
xor
mov
add
inc
or
push
push
pop
add
lret
sub
std
stos
arpl
xchg
fdivrs
cmp
mov
fdivl
lcall
xchg
mov
mov
mov
in
mov
aad
jae
sbb
dec
mov
sub
dec
xchg
outsb
je
ficompl
hlt
push
call
jle,pn
daa
sub
cmp
sbb
in
in
jp
shrl
jge
push
xchg
push
arpl
nop
mov
jecxz
dec
jae
or
cs
xorl
mov
pop
inc
mov
cmpsb
pop
mov
adc
or
xor
stos
mov
mov
fmul
xchg
mov
xchg
dec
lcall
and
neg
js
xor
addl
js
shr
mov
addb
jo
xchg
mov
xchg
repnz
and
fmuls
jno
mov
popa
mov
movsb
sub
push
mov
jno
mov
fcoml
adc
pop
xor
mov
fisttpll
std
pusha
movsb
sub
pop
aad
xor
cmpsb
les
jmp
mov
adc
aad
xor
in
decb
jl
bound
faddl
inc
iret
or
cmp
jns
out
js
jno
arpl
arpl
es
and
es
or
push
sub
ret
push
sbb
fs
aam
into
sbb
xchg
cmp
loop
mov
stc
je
sbb
xor
daa
adc
subb
xchg
inc
adc
sub
inc
mov
pop
cmp
cmp
cltd
aas
push
movsl
sbb
pop
jl
cmp
inc
fcomps
cld
mov
enter
popf
mov
cltd
test
cmp
int3
push
movsl
mov
cmp
pop
adc
fcomps
sahf
fnstenv
rolb
sahf
cmp
shl
lods
add
mov
ret
daa
fists
sub
add
add
fimull
into
fisttpll
pop
push
lock
or
mov
add
xchg
aas
dec
xorl
adc
iret
mov
js
and
adc
xchg
shlb
loop
shlb
cmc
pop
mov
imul
ret
rolb
dec
shll
push
or
push
shr
mov
addb
sub
pushf
sub
xchg
mov
flds
mov
scas
movsl
push
das
xchg
clc
sbb
ja
enter
lods
mov
mov
ret
fmulp
inc
and
pop
nop
pushf
stc
jb
into
aaa
shr
pop
pop
dec
mov
pop
xchg
stos
adc
pop
enter
pop
mov
or
cmp
ret
sub
insb
fimull
stc
jmp
and
hlt
test
leavew
xchg
js
subb
sti
inc
and
cmp
stos
push
in
push
push
xlat
xchg
movsb
fcompl
dec
adc
jecxz
rolb
adc
jmp
cld
xchg
sahf
mov
push
sbb
pop
in
inc
js
sub
test
pop
add
inc
ljmp
mov
cmp
mov
movsb
and
push
adc
push
jne
mov
adc
add
pop
jge
insl
inc
jb
pop
pop
or
test
mov
sbb
test
popf
sbb
leave
inc
icebp
fwait
xchg
into
imul
insb
xchg
dec
push
push
and
hlt
daa
sub
xchg
fwait
test
movsb
insb
pop
aam
mov
lret
mov
movsl
popw
ffreep
mov
dec
cmpsb
sbb
sub
sbbb
or
cmp
cmp
pop
pushl
std
ds
movsb
cmp
mov
push
xchg
mov
pop
pop
mov
icebp
push
int
sbb
adc
loopne
xorl
push
add
jo
sbb
dec
iret
int3
pushf
cmc
jecxz
clc
cld
data16
push
jb
add
xchg
mov
jns
cli
xchg
push
mov
pop
fidivl
inc
mov
loope
cmp
adc
dec
idivl
dec
jecxz
add
sti
cld
ret
mov
pop
mov
and
rolb
or
add
std
std
scas
cli
iret
or
pushf
mov
or
rorb
cmpsl
jmp
aad
jne
shll
pop
and
movsb
jg
fs
inc
cmp
jb
adc
xor
lds
sbb
and
or
jnp
push
sti
les
in
mov
loopne
insb
enter
out
push
cmp
dec
fsubr
cmp
add
dec
xor
jl
sub
stc
jp
xchg
das
lods
xchg
rol
pushf
sbb
sbb
ret
popl
hlt
into
ret
xchg
sbb
cmp
insl
push
pop
mov
cmpsb
daa
lcall
fstpl
pop
je
inc
xchg
push
pop
test
outsb
flds
mov
shll
xchg
fiaddl
nop
stos
aas
pop
inc
fwait
push
or
out
dec
bound
push
les
stos
push
loopne
iret
adcl
arpl
and
mov
fcom
test
mov
push
push
pop
mov
mov
jle
clc
mov
mov
sub
int
mov
ljmp
jns
in
jne
or
cmp
popf
lock
test
lods
and
loop
push
mov
jg
loop
inc
outsb
out
aam
cmc
fnstcw
jle
mov
cmp
and
jnp
add
push
aam
push
das
js
jae
add
push
push
pop
clc
out
xchg
xor
int3
mov
lret
sub
xchg
push
cwtl
iret
shll
xor
into
shll
dec
sub
push
jecxz
mov
push
fldcw
cli
jg
push
lcall
test
popa
adc
mov
bnd
data16
test
xlat
mov
movsl
pushf
jbe
push
add
xchg
in
mov
or
pop
nop
fsubrp
pushf
mov
hlt
dec
push
mov
js
add
fdivrs
roll
cmc
fs
sbb
or
cld
lahf
out
ror
jp
pop
jg
sbb
test
stos
popl
lods
aam
cmp
lock
arpl
out
and
inc
cwtl
es
into
push
mov
jb
adc
inc
scas
and
and
rcr
jnp
dec
jmp
test
fistps
lods
sub
push
aam
mov
sti
int3
lock
loop
mov
push
or
or
scas
fistpl
daa
push
in
test
fidivl
jnp
dec
adc
jg
push
pop
inc
das
in
mov
xchg
ds
mov
mov
ljmp
mov
arpl
cwtl
xlat
pop
shll
mov
leave
stc
rcr
jecxz
out
fcoml
jp
push
mov
cmp
lods
and
out
inc
push
fstp
sub
inc
inc
into
jecxz
stc
nop
lods
xchg
cmp
ss
dec
pop
scas
and
sti
or
clc
sub
in
mov
outsb
lods
out
xchg
mov
and
and
xchg
aas
fwait
out
xchg
adc
sub
jne
or
rcr
invd
adc
sub
lods
repz
and
xchg
rolb
mov
aam
xchg
and
jg
push
pop
xchg
shlb
arpl
pop
sbb
add
in
lret
jp
jnp
mov
out
ds
dec
adc
pop
mov
mov
sahf
sbb
das
sbb
pop
mov
push
lods
xchg
fwait
sbb
pusha
or
mov
cmp
arpl
in
fldenv
cmp
dec
mov
sub
and
inc
cmpsl
out
int
inc
adc
push
movsl
dec
add
xchg
popf
and
ja
pop
loop
loopne
imul
out
jecxz
or
aas
clc
dec
cmp
das
pop
shlb
shrb
mov
and
stos
dec
sub
cmp
aam
aad
jg
jge
ret
xlat
ficomps
mov
dec
aad
jl
movsl
mov
fcmovbe
or
mov
mov
bound
test
or
sub
xchg
lret
xor
cmp
jo
or
mov
test
mov
fiadds
lods
aad
xor
ds
pop
xchg
lret
ret
mov
sbb
or
test
movsb
or
pop
addr16
test
sti
push
mov
scas
mov
fmulp
into
test
inc
ret
lods
dec
test
lret
mov
cltd
icebp
dec
xor
push
aaa
mov
imulb
push
inc
mov
out
ljmp
xor
cmc
lahf
sub
dec
fsts
lock
mov
out
pop
xchg
loop
push
test
out
cmp
ss
pop
mov
pushf
nop
or
or
into
cli
xchg
das
loop
repz
out
mov
cmp
repz
outsl
pushf
pusha
aad
les
dec
sub
add
pop
in
pop
mov
xchg
call
js
adc
lds
and
inc
jecxz
repz
adc
loope
pop
or
pusha
mov
pop
js
or
leave
mov
or
std
adc
hlt
mov
sub
fnstsw
cld
test
ss
sbb
cli
sub
sbb
push
jne
rcrl
cmp
clc
pusha
add
pop
lods
andl
push
stc
and
mov
hlt
inc
out
dec
dec
mov
cld
mov
dec
pop
push
gs
mov
xchg
in
xchg
mov
out
hlt
test
imul
icebp
and
pusha
mov
shl
add
inc
mov
jb
pop
dec
movsl
shlb
shll
aaa
cmpsb
mov
mov
fstp
mov
push
clc
pop
lret
fidivl
or
hlt
aam
fiadds
js
lea
add
pusha
popf
lds
xchg
and
lret
pop
stc
movsb
mov
mov
add
clc
mov
and
dec
into
push
mov
cs
push
in
sbb
mov
jne
popf
and
or
xchg
in
sti
xor
stc
in
sub
cli
adc
mov
dec
and
pushf
ja
or
xchg
jae
cwtl
fs
shl
fnstenv
sub
adc
arpl
pop
pusha
mov
cmp
sbb
rcll
push
dec
clc
arpl
ret
mov
movsb
iret
dec
pop
sahf
test
sub
imul
adc
data16
mov
ja
push
sar
scas
ljmp
aad
pop
add
push
sub
mov
jb
js
pop
lret
push
jp
pop
xor
xor
xor
pop
mov
cmp
jnp
cmp
mov
repz
cmp
add
cmp
test
inc
push
inc
repz
daa
jmp
in
adc
jbe
xchg
jb
fsub
and
adc
mov
inc
adc
stc
push
outsb
in
mov
and
ss
or
xchg
sub
movsl
inc
fwait
cmpsb
mov
fidivrl
mov
xchg
and
fadds
iret
cmp
cld
sbb
test
lea
inc
sbb
subb
and
push
cmp
xchg
jns
fwait
in
sub
rcrb
ja
into
call
mov
into
loope
jg
jle
in
jge
ffreep
jmp
add
add
in
jl
jle
and
mov
push
pushf
dec
push
or
ror
mov
ds
adcb
rorl
adc
adc
mov
adc
mov
test
dec
push
jne
mov
mov
or
js
xchg
push
cmpsl
mov
std
ss
out
aam
mov
pop
jns
ror
aad
push
dec
pop
ss
mov
lret
jb
nop
in
jns
scas
stos
in
or
dec
sub
inc
cmp
sub
or
inc
outsb
leave
jp
push
add
fiaddl
ret
scas
jnp
roll
je
pop
hlt
int3
hlt
or
ss
cmpsl
jno
push
or
cs
mov
inc
dec
pop
inc
xchg
loopne
call
push
lahf
loop
sbb
lret
movsb
dec
pop
adc
ja
into
imul
jns
and
xchg
pop
mov
stc
adc
enter
dec
inc
dec
arpl
cwtl
add
dec
cmp
mov
jecxz
loop
pop
xor
int
xlat
enter
pop
out
xchg
dec
mov
out
insl
mov
inc
push
popa
and
loopne
mov
push
xor
movsl
pusha
lret
rcll
and
xor
imul
sti
sub
push
push
pop
lcall
stos
fbld
int
popa
pop
scas
insb
jmp
cli
pop
cmc
cmp
jb
sub
je
daa
xlat
popa
jmp
pop
mov
addl
and
mov
jge
push
add
scas
in
fdivrp
fstpl
inc
cmpsl
aad
icebp
fistl
pop
jmp
insl
cld
out
loopne
fcoml
jmp
insl
shll
or
daa
jp
xor
into
jg
shl
pop
pop
mov
cmpsl
movd
cmpsb
push
rcrb
rorl
loope
movsb
cltd
cwtl
lods
out
sub
sbbl
sti
lcall
adc
mov
fs
mov
pop
test
fcomps
bound
cmp
dec
aad
in
dec
scas
ljmp
ljmp
or
cmp
in
cmp
faddl
dec
adcb
out
rorb
lds
xor
aad
and
dec
jge
js
loope
movsl
div
adc
mov
je
mov
pop
mov
cmpsb
loopne
sub
fnstenv
cmpsb
xchg
or
fisubs
jne
sbb
xlat
outsb
popf
cmc
dec
and
pushf
cmc
xorb
ret
mov
xor
sub
aas
aas
movsb
cs
pop
or
adc
add
mov
add
cli
stos
pop
clc
inc
mov
and
and
rcrb
fwait
pop
orl
sbb
mov
test
std
inc
or
pusha
mov
jo
push
mov
and
inc
in
mov
xchg
hlt
xchg
push
mov
filds
xchg
pop
jmp
hlt
dec
jo
andb
pop
push
and
jae
add
adc
adc
xor
cmp
jae
add
mov
stc
dec
mulb
dec
loopne
jo
xchg
mov
inc
mov
insb
pusha
xchg
popf
ffreep
call
pop
lahf
add
scas
lret
add
lahf
push
shll
ret
inc
shl
jns
pop
push
arpl
cmp
fisubs
cmc
fistl
int3
xor
out
push
jge
sbb
cmp
sub
das
sbb
inc
push
sbb
sar
lds
mov
icebp
ss
or
ljmp
andb
cmp
stos
stos
jae
mov
or
mov
outsb
adc
inc
dec
cmpsl
push
add
shlb
cmp
inc
lcall
push
movsb
mov
inc
std
push
adc
dec
inc
rcr
rcrb
dec
mov
mov
dec
adc
push
ret
add
arpl
lret
push
je
or
imul
subb
mov
mov
ret
cmpsl
andb
jg
sub
fnsave
jb
inc
addb
ficoml
xchg
loope
push
out
xchg
add
add
movsl
xor
pop
sbb
test
mov
add
mov
or
xchg
lods
movb
ret
add
negb
add
cs
cmp
aaa
addr16
and
cmpsb
mov
out
in
inc
xchg
stos
into
rorb
pusha
lds
nop
test
imul
rcll
insl
ficoms
outsb
ret
inc
repnz
sbbb
add
sub
adc
mov
or
jmp
ja
repnz
adc
cli
ljmp
pop
rcll
mov
filds
push
sbb
pop
lret
cmpsl
cmp
fs
dec
xor
mov
pop
cs
and
pop
ljmp
stc
lea
inc
cmp
mov
mov
dec
test
mov
mov
imul
popa
shll
lds
out
or
jne
cmp
cmp
sbb
push
popf
orb
cmp
sbb
and
roll
repz
mov
sub
cmp
jo
sub
lock
loope
and
pop
push
inc
adc
into
test
rorl
arpl
orl
pop
or
lock
fdivs
movsl
outsl
mov
cmp
inc
sahf
push
add
cmpsb
int
stc
pop
stos
aam
cli
cmp
data16
repnz
push
clc
jmp
add
jmp
xchg
sub
ret
inc
in
popf
sub
pop
mov
mov
cmovp
push
lock
jmp
cmp
lods
repz
xchg
xchg
stos
ljmp
dec
jecxz
add
xchg
cwtl
repnz
lods
gs
push
cli
dec
addl
jbe
mov
xor
fldt
jo
adc
cmp
push
sti
lcall
mov
aas
xor
xchg
ret
sarl
scas
dec
pop
inc
and
mov
gs
lds
or
shll
lret
loopne
out
dec
push
inc
xlat
cmp
cmpb
ja
out
enter
ret
pop
lods
inc
cmp
scas
jae
gs
dec
push
out
adc
jmp
enter
insb
xchg
push
cltd
mov
ljmp
jp
dec
mov
imul
jb
inc
or
adc
sti
sbb
ja
mov
sub
xlat
cmp
out
js
xor
cmp
push
test
popf
pop
ja
xchg
add
inc
xor
out
and
insb
cmp
mov
add
sub
sahf
xchg
or
roll
mov
scas
mov
ret
sub
in
inc
jns
sub
js
add
xchg
push
mov
fdivrp
mov
pop
rcr
mov
into
mull
dec
or
or
push
jmp
movsb
and
pushf
or
dec
xchg
sbb
push
sub
push
ss
leave
loopne
lahf
sti
mov
sbb
mov
movsl
loope
movsl
je
push
cltd
lret
pop
mov
xchg
jo
sti
pop
adc
mov
adc
gs
sub
mov
rcrl
lahf
mov
shr
jbe
je
add
xor
adcb
dec
xchg
out
mov
xchg
adc
inc
and
inc
lea
mov
out
mov
and
outsb
jge
mov
sub
or
jns
mov
push
aas
pushf
xor
adc
dec
xchg
loop
int3
cli
test
int
cmp
test
pop
cld
out
enter
mov
ret
xorb
pusha
stos
call
loop
rcrl
adc
stos
pop
and
mov
push
scas
test
mov
sbb
pop
orl
and
rorl
aaa
das
js
es
in
dec
pop
xchg
ds
mov
xchg
sbb
loope
mov
cmp
dec
mov
leave
cmp
mov
fsts
ret
push
jge
rcll
and
je
jbe
jp
xor
mov
jp
clc
cli
inc
push
int3
scas
pushf
push
mov
jae
fbld
aad
pop
sub
movsl
mov
test
pop
das
popa
pusha
mov
xor
cltd
lcall
sbb
test
sbb
mov
xchg
mov
in
xchg
xlat
mov
mov
movsl
push
aaa
movsb
je
jg
fwait
inc
dec
enter
and
add
jg
xor
xchg
incl
add
lock
fldenv
sub
mov
mov
cmp
clc
xor
jg
rorl
loop
push
nop
icebp
xchg
adc
test
add
out
movsb
and
std
mov
adc
outsb
inc
cld
or
adc
inc
es
or
push
cli
pop
jb
imul
push
scas
push
jbe
push
xchg
cmc
inc
mov
test
loopne
inc
cs
xchg
xor
sti
cmc
and
es
fcmove
int3
inc
cmpsl
stos
mov
outsb
push
sub
xchg
std
nop
pavgb
stc
push
bound
lods
hlt
icebp
ljmp
add
into
xchg
push
andb
pop
jno
pushf
test
aas
aad
inc
push
std
xor
jp,pt
jmp
jle
jne
in
cmp
stc
cwtl
inc
loope
mov
faddp
imul
cwtl
ret
cltd
dec
lea
and
sbb
ret
xchg
jmp
ljmp
mov
lea
adcl
je
mov
jne
push
lret
cmp
fcmovne
pusha
pop
sarb
add
ds
lahf
xor
enter
fisubrs
sub
ljmp
jo
xchg
in
mov
mov
negl
mov
mov
xchg
clc
shrl
add
in
push
sbb
loop
imul
cmp
in
insl
pop
or
mov
sub
dec
pop
and
sub
ror
cwtl
and
sbb
xor
push
sarl
test
out
or
inc
fists
xor
out
sbb
xorb
fnop
idivl
popf
inc
push
insl
push
jmp
les
inc
lret
mov
sbb
aam
je
lds
xor
nop
mov
mov
push
jg
mov
daa
and
aam
cmc
jg
out
aad
pop
push
cvttps2pi
in
sbb
xor
sub
roll
pop
and
out
les
and
ja
iret
cltd
jecxz
jno
jno
aam
jb
sub
and
fsts
gs
pushf
mov
pop
sbb
test
and
lea
outsb
sub
push
and
aaa
xor
stos
js
adc
sahf
bound
jp
or
fwait
jne
imulb
addr16
movsl
and
mov
addr16
pop
and
mov
stos
mov
lds
pushl
sub
movsb
or
roll
xadd
aas
cwtl
repz
mov
add
mov
or
in
mov
cmp
jne
pop
xchg
xchg
inc
enter
mov
outsb
mov
adc
mov
and
cmc
dec
pusha
lcall
jp
sub
push
sbb
js
mov
arpl
les
out
test
ljmp
push
push
push
sbb
mov
add
xor
popl
into
fnstsw
pop
js
pushf
mov
fildll
xchg
movsl
jle
rcl
rcrb
jbe
mov
imul
sub
jecxz
ss
bound
adc
cmpsl
hlt
pop
inc
loope
dec
cli
adc
jae
leave
in
mov
cmpsl
add
imul
pop
sbb
int
and
iret
repnz
xchg
fwait
sbb
add
lds
and
pushf
pop
xor
cmp
fdivl
pushf
ds
fstpl
mov
mov
sub
mov
push
or
sub
fstps
push
lahf
xchg
shrl
lea
test
cmp
in
jl
ret
aad
cltd
pushf
inc
les
int
sbb
movsb
out
outsl
mov
out
leave
mov
test
lods
xchg
fs
push
and
test
test
xlat
imul
fnstenv
xchg
std
outsl
and
fstpl
pop
push
sbb
lods
add
lods
stc
xchg
mov
fs
fwait
roll
dec
xor
ja
inc
inc
jb
jo
pop
jmp
ret
sub
lcall
and
shl
dec
aad
das
lret
jmp
sbb
lcall
es
ds
pop
push
cmp
imul
pushf
ds
repnz
sub
idivl
lret
mov
scas
das
push
fs
mov
stos
mov
fmull
es
and
xchg
flds
sub
pop
xor
cltd
stos
sub
bound
adc
outsl
mov
pop
movsl
negb
stos
pop
int3
mov
stos
sbb
sub
aas
sub
das
test
int
dec
out
shlb
mov
pop
pop
and
faddp
out
jmp
inc
and
adc
test
mov
arpl
add
js
mov
add
mov
dec
mov
pop
fmull
fstps
lea
or
lea
mov
mov
adc
pop
mov
sbbb
shl
fidivrl
imul
daa
arpl
insb
lcall
xchg
mov
unpckhps
xchg
cmp
loop
popa
mov
cs
mov
inc
scas
test
aad
xchg
aas
mov
cs
fs
and
flds
mov
shrl
cs
dec
stos
pop
cmp
daa
gs
lds
mov
outsl
mov
push
xchg
mov
adc
jl
pop
adc
pop
jns,pn
cmp
add
or
mov
mov
out
xchg
pop
jb
push
mov
add
addr16
ja
add
sub
fistpl
sub
push
scas
in
bsr
shrl
std
lcall
sbb
rcl
fwait
lahf
mov
mov
dec
fcmovnu
inc
test
mov
cs
sub
mov
pusha
xor
ss
push
enter
adc
xor
sub
mov
pop
sub
aam
sbb
insb
popa
ret
iret
adc
stos
sbb
and
cmp
mov
sbbb
movsl
and
jns
scas
dec
adc
lret
divl
int
ret
mov
gs
mov
push
xchg
lods
hlt
minps
jp
mov
mov
inc
clc
dec
movsl
xchg
sbb
shll
push
iret
mov
cmp
push
and
ret
xchg
push
xchg
jnp
mov
mov
sbb
ud2
lahf
movhps
xor
ret
mov
add
inc
sbb
rcr
test
sbb
mov
dec
ja
xor
cmp
shld
testl
lret
inc
lds
sub
daa
inc
mov
dec
nop
shlb
ret
in
xlat
stc
mov
xlat
push
pusha
outsb
xor
lods
aaa
jbe
insl
movsl
jb
scas
gs
scas
pushf
mov
xor
fdivp
stos
decl
and
loop
int
adc
mov
fucomp
xor
push
mov
push
js
mov
movsl
mov
incb
test
adc
mov
lret
pop
fstpl
int3
push
je
push
cli
std
jbe
fwait
xchg
push
sub
les
mov
mov
outsb
pop
adc
xor
outsl
push
xchg
jp
xor
subb
push
lds
out
cltd
dec
movb
pop
adc
in
sub
mov
orb
test
mov
inc
mov
sbb
popa
cmpsb
jmp
iret
fwait
pushf
clc
lock
insl
test
jb
lahf
fcmove
loop
lahf
add
das
stc
out
mov
rcrl
dec
ljmp
ja
xchg
push
dec
fistpll
aaa
mov
mov
add
sbb
mov
fimull
test
mov
fisttpl
pop
pop
mov
inc
pusha
mov
jle
dec
add
in
mov
divl
cmpsl
pop
pop
mov
out
arpl
sbb
mov
mov
jmp
adcl
mov
ljmp
push
adc
xor
aam
lock
and
mov
and
pop
xor
in
mov
xchg
xchg
cmp
xor
out
call
add
out
scas
ret
jge
popa
mov
aad
push
mov
pop
bound
push
mov
push
daa
decb
lods
insl
movsb
inc
xchg
dec
mov
sub
sbb
or
xor
pop
fstpl
jns
arpl
pop
mov
fldt
imul
mov
mov
stos
cs
mov
arpl
or
mov
ficompl
jnp
fwait
mov
jbe
call
push
fbstp
xbegin
pop
xchg
nop
pextrw
pop
jl
aad
jbe
mov
stos
popf
dec
and
shlb
sub
mov
mov
mov
leave
pop
sbb
pop
xor
jbe
and
repnz
ror
inc
jnp
insl
mov
pop
xchg
mov
das
aaa
xor
jbe
lcall
push
mov
not
push
leave
inc
daa
test
dec
adc
push
inc
mov
stos
cwtl
ret
int3
ret
clc
jecxz
jp
adc
cmc
dec
and
mov
mov
in
hlt
xor
rcr
mov
mov
pop
push
ds
inc
dec
loop
or
in
pop
movsl
push
sahf
fstps
negl
fcompl
lahf
xor
adc
rcl
ljmp
pusha
cmp
iret
xlat
scas
in
lods
jg
into
add
lds
or
mov
setnp
push
push
add
mov
subb
aas
dec
cmpsl
or
cmp
mov
cmp
or
sbb
js
mov
insl
loop
fdivrs
xor
arpl
lahf
or
into
mov
xor
outsb
arpl
and
pushf
insb
in
pushf
xlat
inc
mov
out
or
or
pop
lcall
xchg
les
pop
cmp
pop
lahf
jbe
bound
mov
fidivs
inc
loop
xlat
xor
lds
test
adc
and
leave
xchg
les
or
push
jns
or
inc
les
fwait
mov
xor
dec
ret
into
and
jl
mov
pusha
lret
inc
push
insb
xor
sub
jl
je
adc
jge
repnz
repz
pop
pop
sbb
add
sbb
add
lock
fnstenv
mov
xor
push
fdivs
adc
int3
fistpl
int3
ficoms
je
xchg
scas
adc
fstpl
or
jg
xchg
jne
or
xchg
jb
jnp
adc
sub
jp
push
inc
cmpsb
cmp
add
repnz
mov
andl
xor
inc
dec
inc
push
mov
js
inc
rcll
adc
pop
es
jl
dec
pop
test
loope
or
lret
scas
mov
push
xor
mov
fsub
xchg
test
add
xchg
mov
les
test
cmp
dec
daa
or
dec
fisubrl
fldenv
add
lea
mov
push
cmp
enter
js
and
jo
jle
sub
push
push
testl
ret
inc
sbb
xor
add
jae
popw
push
cmp
xor
xor
pop
sub
mov
ds
xchg
nop
mov
jl
out
push
lret
push
pslld
and
ja
in
inc
sub
das
ds
jnp
push
es
out
mov
cltd
ret
cmp
jecxz
jle
dec
jb
mov
idivl
out
xor
and
scas
jno
or
and
ja
call
icebp
insb
inc
lds
ljmp
mov
js
xor
ljmp
sub
inc
push
push
and
mov
push
mov
sbb
leave
cmp
cli
dec
aaa
cmp
lahf
xchg
bound
push
fstl
xor
inc
decb
adc
cltd
push
bound
out
int
in
stos
push
jp
jp
jno
adc
sub
mov
insb
xor
mov
fstps
insl
xchg
rcrb
shl
cwtl
adc
and
inc
push
pop
daa
jecxz
jb
mov
out
or
sbb
jmp
push
ret
push
mov
std
mov
sbbl
sbb
sbb
int3
or
mov
cmp
jge
push
imul
aaa
int
ja
mov
call
xor
cmpsb
rolb
jno
jg
sub
push
mov
xchg
data16
les
lock
movsl
ret
aas
in
sbb
sub
cmp
shll
cmp
and
mov
adc
jle
push
mov
out
ja
dec
sti
xor
aaa
cmp
ja
das
xor
xlat
out
aas
xchg
dec
call
or
fnstsw
inc
adc
cmp
mov
outsl
or
aas
dec
scas
out
fistpll
pop
into
mov
mov
test
add
stos
inc
je
push
inc
dec
mov
sbb
mov
lock
shrb
mov
jl
je
xlat
dec
insl
punpcklbw
push
xchg
enter
lahf
or
arpl
or
aam
sbb
in
js
add
iret
pop
cmp
sbb
xchg
cld
xchg
leave
cmp
mov
sarl
xor
in
pop
dec
xchg
jo
sbb
gs
push
cmpb
cs
ret
fwait
pop
and
mov
xchg
sbb
test
sbb
cwtl
bound
xchg
mov
push
push
stos
ret
data16
sbb
addr16
push
aas
lods
and
jp
lret
mov
shl
mov
iret
daa
fstps
in
gs
cld
mov
jo
sbbl
push
push
cmp
in
adc
adc
ss
inc
aas
js
xor
movsl
in
sub
dec
jp
adc
rcrl
adc
or
nop
sub
and
cmpsl
shrb
pop
fmull
dec
jno
mov
dec
int3
fsubl
jb
mov
inc
inc
mov
lock
mov
or
pop
pop
push
jbe
pop
xor
cwtl
cmpb
push
leave
pusha
ljmp
or
rcl
pop
enter
pop
or
hlt
xchg
sub
outsb
in
fs
pop
arpl
adc
nop
inc
outsb
scas
popf
xchg
xchg
addr16
pop
jb
push
roll
repz
pop
push
out
push
out
and
jno
sti
or
pop
cmp
mov
push
movsb
sub
int
jae
enter
or
call
scas
popa
pop
inc
dec
jle
and
cmp
lahf
cmpsb
xor
ficomps
mov
test
mov
xchg
fldl
pop
test
js
cmp
mov
aaa
sti
inc
mov
or
inc
gs
push
ss
add
popa
lret
and
mov
pop
mov
sub
or
addr16
cmp
incb
fs
fsts
ja
cmp
jno
mov
int
mov
shlb
inc
pop
jae
test
pop
jl,pn
ja
scas
xchg
or
xchg
fwait
push
jle
pop
pushf
repz
mov
xchg
sub
pop
cwtl
cwtl
iret
repnz
sbb
sti
and
add
push
ret
stc
negl
fimull
and
je
loopne
xchg
pop
mov
adc
xor
test
xchg
sbb
das
cmpsl
jecxz
fidivl
sbb
mov
stos
into
xor
sarl
addr16
mov
cmpsb
ret
les
cmpsl
dec
out
xchg
sub
mov
into
in
int3
loop
fpatan
dec
or
dec
imul
xor
into
lock
adc
iret
call
ficoml
icebp
addr16
dec
sbb
and
nop
sbb
loop
push
dec
xchg
sub
mov
clc
repnz
mov
test
sbb
fwait
stos
mov
aam
pushf
push
mov
inc
pop
adc
fwait
adc
push
xchg
jl
andb
cmp
push
jnp
aas
push
js
cmp
and
shlb
fnstcw
mov
stos
adc
sub
stc
mov
xchg
push
popa
adc
into
pop
adc
scas
gs
lods
rorb
and
lret
int
shl
adc
lds
les
mov
lock
or
jae
push
dec
mov
mov
shlb
cmp
jne
pop
sarl
mov
daa
mov
xchg
popa
jmp
pusha
xchg
scas
lods
xchg
cmp
push
incb
sbb
out
shll
int3
loop
gs
inc
call
cmp
and
sub
mov
popf
xorb
out
dec
push
shld
mov
sub
mov
call
adc
mov
jl
fcomps
xor
inc
push
lods
mov
fldcw
rcll
adc
and
mov
inc
jg
dec
sti
lret
mov
pop
mov
sbb
roll
dec
dec
add
ret
mov
and
cmp
outsb
fisubs
push
mov
pop
pop
mov
and
xor
mov
test
movsb
jae
jmp
fcomi
jl
scas
mov
into
jae
incb
lcall
and
jp
adc
je
ficompl
loopne
cmpsl
les
mov
nop
jp
lea
xor
xchg
jp
inc
rep
shll
pop
test
in
sti
mov
insl
mov
scas
fisubrl
sub
fists
mov
mov
fs
pop
xchg
das
out
xor
shrb
and
cli
inc
pop
cmc
hlt
fs
or
bound
xor
cmp
mov
cmp
sub
jmp
scas
outsl
stc
test
mov
push
in
mov
repnz
out
mov
xchg
push
sbb
lret
cmp
pop
jecxz
pop
ss
xchg
mov
or
les
jbe
decl
pop
xchg
hlt
hlt
repnz
inc
popf
cmpb
gs
cld
insl
loopne
dec
js
nop
ret
dec
sub
popa
cmp
inc
xor
mov
jno
cmpsb
hlt
test
xchg
ret
cmc
or
pop
fnstenv
movsb
pop
or
xchg
push
add
mov
mov
push
pop
jmp
sub
adc
pushf
xchg
jle
daa
sbb
fwait
lret
pop
out
dec
pop
pop
fnstsw
sbb
lea
test
push
inc
icebp
xchg
mov
pop
pop
int3
sbb
push
mov
xchg
aad
mov
imul
pop
mov
pushf
adc
cwtl
test
gs
sub
inc
pop
scas
fiadds
dec
hlt
pop
rcrb
outsb
faddl
pop
pop
mov
push
lods
aam
lahf
cmp
and
std
jns
mov
fisttps
sahf
shrl
mov
repnz
das
leave
in
lret
bound
idiv
int
pop
movsb
or
mov
fists
adc
insb
out
fs
xchg
cli
sbb
jnp
mov
sub
push
nop
dec
dec
pop
mov
lods
mov
sub
ret
insl
sahf
lea
mov
xlat
orb
in
fs
sahf
xchg
mulb
jns
and
dec
ret
fstl
test
rcrl
mov
pop
int3
lahf
adc
xchg
sub
loope
popf
sbb
add
push
mov
push
pushf
pusha
leave
push
or
mov
loopne
les
push
and
sarl
cmp
pop
xchg
cltd
dec
call
cmp
add
scas
jns
xchg
or
stos
test
push
arpl
popf
fstpt
dec
imul
iret
lods
insb
cld
aad
hlt
sbb
sbb
int
ret
cmp
arpl
jnp
push
sub
cli
adc
mov
divl
lret
movsl
out
jl
push
xchg
jno
adc
xor
pushw
out
mov
and
loopne
mov
sar
mov
daa
sub
push
test
push
mov
cmp
xor
add
pop
sub
lcall
jge
mov
lods
jl
scas
ljmp
icebp
pop
lahf
dec
pop
decb
sarb
scas
lcall
jnp
mov
jae
mov
mov
jb
and
sahf
std
outsl
xchg
add
lret
mov
adc
add
push
in
lea
and
jl
xor
or
mov
jmp
add
mov
push
rcl
dec
cmp
rol
pop
jg
xor
icebp
dec
je
or
push
and
dec
scas
xchg
push
jo
sub
cmpsb
cld
cmp
aam
test
flds
inc
pop
add
out
xchg
mov
mov
mov
or
in
adc
aam
rorl
mov
in
ljmp
fs
jmp
cltd
jl
ljmp
pop
dec
lods
mov
test
mov
add
andl
mov
mov
cmpsb
sbb
inc
loopne
sub
mov
pop
lods
mov
mov
dec
les
pop
test
inc
xor
sbb
fidivrl
push
inc
add
scas
pop
mov
dec
jmp
jno
push
inc
jb
inc
fwait
mov
fwait
bound
imul
and
inc
mov
call
cmpsl
push
or
lret
pushl
test
sbb
push
mov
jb
lret
cli
call
data16
xchg
jl
imul
outsl
lret
and
dec
in
dec
push
scas
pop
lods
jo
test
shr
ds
cmp
pop
insl
popf
loope
sahf
clc
clc
popa
ret
mov
jg
lods
mov
jb
mov
cmp
mov
or
cli
jmp
mov
push
movsb
mov
fsub
add
cmp
nop
mov
in
sub
xchg
pop
stos
dec
out
xchg
pop
getsec
loop
pop
ret
xchg
pop
or
and
rcll
dec
mov
adc
sub
fisubrl
pop
xchg
roll
xchg
aaa
aaa
out
ret
aad
mov
lcall
push
lcall
sbb
in
or
jbe
lcall
jp
enter
shl
sub
jmp
mov
rorb
imul
jecxz
cmpsl
clc
dec
jb
mov
jns
mov
aaa
iret
inc
test
out
repz
mov
mov
mov
mov
ja
inc
and
pop
adc
xchg
test
rorb
xchg
pop
aam
push
clc
rorl
xchg
movlps
lods
stos
inc
mov
hlt
testl
mov
adc
mov
popa
pop
add
in
lret
notl
aaa
in
and
push
push
in
fucomp
fwait
aad
addr16
lcall
pusha
push
repnz
and
adc
jne
bound
xchg
cli
nop
sahf
movsl
pusha
sub
stos
in
ss
mov
mov
popa
xchg
mov
out
loop
inc
pop
dec
sbb
push
loopne
fsubr
add
adc
aaa
pop
out
mov
sti
push
mov
mov
adcb
test
mov
mov
lods
xchg
push
andb
lods
push
inc
cmpsl
lret
repz
push
mov
fs
repnz
ja
stc
cmp
pop
ret
rcrl
roll
insl
pop
add
in
inc
das
jns
dec
dec
cld
test
addl
mov
outsb
cmp
ret
mov
mov
movsb
cli
icebp
pop
imul
xor
add
mov
fidivs
out
push
sub
test
lock
mov
addr16
fsub
int
push
dec
xchg
mov
movsl
mov
lea
pop
push
repnz
push
sbbl
in
dec
inc
test
stc
int3
adc
add
aam
call
jmp
xor
inc
sti
ja
push
dec
ds
push
scas
ss
xchg
leave
nop
in
scas
insb
fcmovbe
mov
jnp
pop
xchg
fnstcw
fiadds
out
push
loope
nop
iret
lahf
push
dec
addr16
sub
adc
pusha
or
icebp
dec
hlt
aam
loope
pop
xor
js
insl
jno
push
es
jmp
dec
sub
jo
popf
aam
fistps
popf
sti
mov
push
test
pop
mov
cmpb
jecxz
stos
std
mov
sub
lock
add
add
data16
hlt
leave
pop
jo
xorb
je
inc
ss
inc
repnz
stos
and
fsubl
dec
call
sbb
add
or
xor
sub
mov
sbb
sbb
mov
push
xchg
push
adc
jge
or
jns
dec
push
pop
sub
test
pop
ljmp
mov
mov
add
call
fistpll
mov
imul
sti
sub
stc
push
lcall
sar
fldl
or
aad
push
sahf
and
cs
xor
shrl
mov
ret
mov
outsb
mov
cmp
cmpsl
dec
ss
sarb
gs
movsl
and
jle
xor
fstpt
out
push
mov
movsb
cmpsb
dec
jne
pusha
aas
xor
test
jns
mov
push
pop
call
push
adcl
mov
cmp
stos
adc
stos
xorl
inc
mov
dec
xor
mov
xlat
xor
jo
inc
mov
movsb
rcll
ret
shrb
pusha
push
pop
jecxz
in
pop
jmp
mov
sbb
pusha
xchg
dec
dec
jb
mov
shrb
test
addr16
int3
rolb
dec
sub
xor
push
dec
mov
popf
jne
sbb
les
outsb
push
stos
xchg
inc
add
push
ljmp
addr16
inc
ret
jp
or
mov
mov
outsl
sbb
mov
pop
mov
out
cld
sbb
jle
pop
add
in
lret
aaa
sbb
sub
pop
aas
js
or
cmpsl
pop
fistpl
rorb
and
shl
imull
lret
popf
sti
inc
mov
add
xchg
test
out
js
cmp
popf
in
mov
std
jle
jecxz
inc
lods
cmp
fidivrs
lods
pop
sbb
xor
ds
mov
and
and
mov
lret
pop
pop
ss
lret
jnp
int3
adc
daa
dec
inc
dec
dec
inc
imul
aas
scas
sub
pop
mov
paddusw
addr16
movsb
add
mov
jecxz
push
call
add
dec
out
sbb
jge
add
mov
xchg
mov
mov
ljmp
mov
xor
mov
sbb
ljmp
loope
xchg
addr16
mov
cmc
icebp
jns
jle
xlat
xor
data16
push
hlt
jo
mov
jmp
insb
cs
or
daa
add
pop
out
shrb
lods
xchg
clc
into
popf
cmp
dec
lods
pop
mov
or
pushf
xchg
xchg
pop
inc
pop
pop
pop
lret
ror
sub
inc
dec
mov
sbb
and
out
popa
xchg
inc
push
mov
mov
std
add
push
add
insb
ret
sub
outsl
pop
cmp
int3
inc
dec
pusha
dec
mov
lret
or
mov
scas
cltd
cltd
movsl
lock
adc
test
out
push
dec
jne
add
adc
sbb
ss
das
jbe
adc
mov
jle
sbb
push
test
loop
jge
mov
out
push
movq
or
mov
push
cmpsl
outsb
out
mov
push
or
js
jb
pop
inc
add
fwait
adc
lret
cmp
cmp
dec
xor
jg
icebp
scas
xlat
cmc
or
shll
mov
rorl
sarl
xorb
adcb
faddl
rol
jae
push
add
add
lahf
incl
fwait
in
jecxz
add
inc
loopne
mov
and
sahf
push
dec
push
jl
lock
jae
inc
mov
mov
cmpsb
sub
pop
mov
lcall
cmp
and
xor
loopne
add
inc
jmp
pushf
xchg
outsl
lods
mov
lods
ss
clc
fsubl
mov
adc
jl
fnstenv
sbb
mov
adc
and
push
xchg
rcrb
sub
inc
addb
and
in
outsb
push
pop
pop
xchg
xor
notb
sub
repnz
mov
push
mov
sbb
pop
notl
adc
mov
sbb
mov
adc
cmp
fildll
cld
lahf
int3
or
push
or
orb
in
aad
int3
out
dec
and
mov
mov
pusha
inc
pop
pop
cmp
pushf
sub
lret
daa
adc
cli
inc
adc
movsb
jl
clc
fnclex
sbb
pop
ljmp
push
fistpl
hlt
aas
dec
mov
mov
xchg
ficoms
sbb
add
xor
aas
testb
or
js
stos
sbb
and
shlb
iret
inc
fwait
pop
jns
addb
jno
cmp
lods
mov
inc
sbb
imul
fadd
rcrl
cld
adc
xchg
mov
add
fwait
or
stos
adc
xchg
mov
adc
cmpsl
xchg
mov
mov
inc
inc
jne
hlt
orl
rorb
mov
mov
jb
fwait
loope
jo
mov
mov
jae
xor
add
iret
pushf
push
ret
pop
inc
neg
mov
lods
int
aam
lea
ljmp
scas
mov
rcrl
cwtl
iret
sbb
mov
xchg
hlt
mov
inc
and
fstp
cwtl
push
ret
mov
in
adc
adc
iret
xlat
jmp
mov
xor
in
sti
lods
mov
shlb
test
push
jecxz
xchg
in
or
mov
je
pop
notl
jg
shll
jg
push
ja
test
or
stos
jp
inc
rcrb
lret
jecxz
sahf
xchg
dec
jo
in
aaa
cld
mov
sbb
loopne
int
inc
fmuls
xor
lock
xchg
and
loop
cmp
movups
cmp
pop
test
out
jecxz
and
push
cmp
fsub
shll
lcall
push
test
stc
imul
into
jge
shll
mulb
add
mov
push
mov
sbb
ja
push
push
mov
cli
push
add
fwait
cmp
pop
arpl
jl
jae
sbbb
les
jg
call
xchg
push
pushf
sbb
addr16
pusha
jl
mov
and
adc
inc
sbb
sbb
scas
mov
push
pop
inc
jl
adc
mov
enter
push
repz
cmp
jbe
sbb
jae
fcmovnb
scas
aad
lods
lret
ret
pop
sub
or
stos
xchg
mov
stos
xlat
fnstenv
fildl
call
nop
imul
ret
in
mov
and
mov
sahf
jbe
xchg
pop
fadd
xchg
adc
pushf
dec
popf
mov
mov
hlt
add
xchg
mov
dec
lret
mov
pop
xchg
and
sarl
icebp
add
movsl
mov
push
inc
or
pop
pusha
rcrl
xchg
adc
jge
es
pop
sub
xchg
push
in
jb
pop
dec
test
jo
add
jne
pusha
mov
stos
in
inc
cmc
mov
dec
cmp
dec
sub
sbb
mov
mov
popf
push
fists
scas
daa
mov
xor
cmp
jmp
imul
std
or
in
dec
push
pop
jp,pt
sbb
sub
aas
lcall
clc
cmpsl
jle
es
je
jecxz
and
fyl2xp1
xchg
mov
mov
mov
hlt
enter
fisubrl
lcall
lds
loope
add
jle
cmp
cmp
test
mov
enter
fldl
pop
adc
dec
push
leave
imul
mov
inc
push
outsl
icebp
nop
mov
mov
fcoml
jbe
pop
jnp
cmp
mov
push
lret
mov
jp
mov
push
sub
mov
sub
in
push
inc
sub
mov
xchg
xor
scas
mull
fsubrs
bnd
pop
add
je
lret
js
adc
mov
inc
pusha
ljmp
sbb
cli
enter
push
inc
add
adc
pop
xor
stc
mov
outsl
inc
mov
imul
jnp
jl
int
test
imul
jno
sub
xchg
out
cmc
mov
inc
adc
mov
popf
lods
pop
or
and
jmp
into
jp
push
jge
ret
lods
test
not
fwait
movsb
add
add
inc
mov
xchg
sub
mov
dec
jns
mov
pop
jge
mov
and
sub
and
mov
shl
leave
mov
jne
sub
fldt
pop
enter
sbb
sbb
rolb
pop
arpl
fcmovb
jg
dec
hlt
inc
lds
iret
out
out
inc
adc
pop
mov
push
xor
popf
jl
sbb
repz
rcr
pop
pop
enter
sub
rorb
xor
mov
shr
hlt
mov
pop
test
jg
push
add
push
jmp
xchg
pop
and
ljmp
dec
and
insl
jle
gs
into
pusha
adc
sub
loope
call
mov
inc
out
into
push
stc
dec
sbb
sbb
cld
xor
mov
ret
mov
inc
mov
xor
cmp
lcall
lret
push
daa
xchg
out
das
cmp
inc
fcoml
add
or
das
out
pop
push
sub
in
xor
cmpsl
pop
xchg
and
rclb
mov
int
es
mov
es
lret
inc
cmpl
aad
pusha
adc
clc
ficompl
sub
in
pop
mov
iret
movsl
jbe
and
aad
sub
jmp
mov
push
andb
jl
fadds
add
nop
arpl
movsb
and
leave
dec
sar
std
repz
sbb
adc
scas
cmp
shlb
loop
test
inc
js
push
jle
cltd
and
lods
repz
arpl
mov
ror
aam
and
cmp
add
movsb
dec
in
cld
dec
pusha
insl
adc
push
jmpw
cmpsl
cmpsb
pop
jb
bound
punpcklwd
repz
bound
loopne
pop
mov
inc
mov
fcompl
mov
fsubrl
out
es
cwtl
hlt
inc
mov
jmp
es
xchg
sbb
in
adc
loopne
subl
pop
xor
inc
cmp
inc
aas
in
mov
sti
sub
popf
les
inc
xor
dec
pop
imul
scas
jae
sbb
mov
inc
push
mov
jns
addb
fldt
stos
ds
sar
iret
jo
mov
mov
add
outsb
and
sbb
icebp
in
repnz
inc
or
inc
popa
shlb
imul
push
xchg
in
ljmp
pop
mov
cs
ret
es
add
inc
orb
loop
jge
roll
lret
lea
adc
cli
sub
sub
mov
pop
inc
xchg
in
push
insl
in
fcoml
xchg
xor
add
push
fisubs
pop
mov
fisubrs
adc
jnp
xor
fcmovbe
sub
dec
shrd
outsl
cmp
jmp
mov
arpl
movb
or
xor
sbb
sahf
decl
xchg
ss
sbb
xchg
mov
jo
xor
and
xor
pop
dec
sbb
xrelease
push
xorl
pop
cmpsl
aas
jmp
jg
mov
cwtl
push
outsb
es
in
mov
mov
out
mov
adc
daa
incw
orl
adcb
jge
inc
in
icebp
cmp
push
adc
clc
movsb
shll
addr16
or
ljmp
pop
adc
push
jmp
inc
sbb
jnp
push
adc
gs
jbe
aam
mov
or
cltd
inc
cltd
xacquire
cmpb
lret
lods
addb
lret
add
mov
inc
mov
sahf
les
mov
and
xor
subb
popf
test
xor
cmp
test
lea
repz
repz
lea
jnp
jmp
in
leave
push
cs
mov
add
or
ret
lcall
inc
lds
add
mov
ja
ror
push
mov
rcl
mov
sub
rclb
and
inc
jns
jp
xor
and
pop
shlb
cmp
sti
cmp
sbb
add
mov
inc
dec
and
dec
push
sti
mov
sub
cmc
lret
adc
popf
dec
pop
popf
xchg
adc
fs
add
cwtl
shrb
dec
es
loope
inc
push
jns
sbb
mov
xchg
xchg
test
clc
sbb
pop
je
xchg
stos
pop
dec
popa
mov
pop
pop
xor
xchg
mov
rcll
sub
in
mov
ret
lds
mov
or
and
fildll
mov
adc
mov
inc
cltd
or
ds
xor
movsl
inc
loope
cmpsb
aam
xor
add
icebp
sbb
jmp
push
aad
push
adcb
fidivrl
fdivr
idivb
sbb
jmp
mov
push
loope
ja
fstps
lods
lds
push
add
sub
sub
or
add
aad
jecxz
enter
jo
or
lock
pusha
mov
xlat
cmp
xchg
mov
daa
mov
cmpsb
push
mull
and
mov
lock
popa
jae,pt
push
repnz
divl
sbb
imul
scas
aas
dec
push
or
add
or
sub
dec
in
dec
inc
add
jge
jmp
popa
test
sbb
aas
fs
daa
insl
scas
mov
fcompl
push
stc
dec
popf
cmp
rol
jae
movsb
or
pop
outsb
sub
add
or
pop
adc
mov
lds
adc
jns
add
bound
jae
outsl
arpl
xor
addr16
jo
dec
movsb
jb
icebp
push
out
fs
add
bound
inc
out
stos
xor
adcb
mov
pop
jb
in
cmp
shll
push
jo
insb
movsb
jmp
inc
lahf
inc
mov
les
je
pop
adcl
mov
sbb
loopne
push
xor
sbb
cmp
lods
popf
in
and
push
data16
sub
xchg
icebp
or
outsl
add
dec
inc
xchg
xchg
fiadds
xchg
mov
scas
xor
mov
es
cmpsb
in
std
jg
xor
je
jnp
xchg
inc
sub
xchg
ljmp
pop
sub
cmp
mov
fisubs
rorb
push
jne
mov
and
ret
sub
pop
cmp
popf
push
mov
xlat
pushl
adc
jo
sub
dec
xchg
nop
pop
outsb
lock
jns
adc
sahf
mov
lods
xchg
cmp
loope
subl
inc
test
mov
cmp
iret
or
mov
shr
mov
xchg
psubusb
aas
mov
enter
add
add
xchg
lahf
inc
daa
jns
stos
fistl
loop
fs
fmull
add
mov
xor
mov
aad
jnp
rolb
call
xchg
xor
into
in
and
shl
xor
and
push
adc
push
orb
into
sbb
addr16
mov
int3
jno
pop
js
dec
add
xchg
jge
ds
push
inc
pop
adc
push
cmc
and
andl
jnp
cltd
aaa
dec
xor
mov
jno
daa
fsubl
lea
insl
cltd
mov
in
daa
lods
scas
mov
jbe
or
movsl
push
es
add
pop
dec
repz
aam
insb
xchg
add
jmp
pop
aas
adc
sbb
ss
add
in
iret
test
pop
xor
ret
out
mov
cld
sub
cmp
xchg
or
adc
pcmpgtd
mov
ret
xor
outsb
stos
sarl
fisubrs
hlt
inc
sbb
and
mov
out
sub
fldenv
push
fidivrl
sub
daa
rorl
or
jno
pop
xchg
pop
adcl
ret
call
movhps
add
sbb
in
jae
jmp
mov
aad
imul
dec
fs
push
imull
scas
mov
lahf
xor
mov
add
scas
dec
sbb
addl
jge
push
cmp
test
cmpl
stos
scas
dec
sti
test
mov
xchg
cmp
call
cmp
movsl
movsl
push
stos
cmpsl
adc
lret
ss
mov
lods
shrb
xor
push
daa
out
aam
add
icebp
pop
push
enter
push
mov
dec
cmpsl
xchg
push
xor
mov
out
jl
loopne
hlt
or
pop
lahf
neg
cmc
outsb
fldenv
xchg
mov
in
mov
jmp
data16
adc
pop
int3
faddp
jb
sub
inc
loopne
popf
sbb
xchg
cmp
mov
setg
mov
dec
sbb
sbbb
push
inc
xchg
xchg
dec
mov
fnsetpm(287
pusha
xor
dec
sbb
push
enter
addr16
jp
je
lret
les
lds
jecxz
imul
mov
flds
pusha
mov
jmp
fisubrl
push
aad
adc
mov
rcrb
sub
xor
mov
or
mov
adc
roll
ja
popa
adc
ss
dec
push
aas
inc
inc
scas
jbe
arpl
bound
inc
es
cs
push
mov
stc
jae
inc
sbb
out
test
popf
std
mov
rolb
mov
push
mov
pusha
and
fidivs
ret
adc
xchg
insl
xor
and
dec
sub
lcall
jp
hlt
inc
jp
and
sub
xchg
push
add
cmp
push
xchg
jge
mov
push
jb
cmpsl
push
fisubl
ror
pop
sbb
outsl
mov
or
sbb
sbb
leave
aam
cmc
orl
sbb
jl
leave
pop
mov
out
arpl
mov
ret
mull
push
scas
dec
dec
out
ror
jg
negb
push
mov
lock
ds
cmpl
push
jp
addr16
or
cs
out
fnsave
cmpsb
mov
mov
js
lods
aad
jae
scas
fistpl
sbbb
insl
xor
test
pushf
jmp
out
mov
aas
mov
and
mov
mov
pop
and
flds
enter
and
push
pop
xchg
lock
sahf
inc
andb
out
lret
xor
out
pop
fst
sub
mov
jp
icebp
movsb
mov
addr16
xchg
sti
mov
shrl
xchg
xor
push
mov
push
jecxz
cld
add
mov
mov
js
fwait
jno
jbe
mov
xchg
push
pop
and
xchg
popa
sbb
or
sbb
cmpsl
iret
mov
push
stos
shlb
insb
ret
scas
in
cmpsl
loop
sar
js
or
jp
lcall
cli
mov
dec
jl
sarb
gs
ljmp
incb
cmpsl
aad
inc
insb
inc
jle
daa
mov
imul
je
cmp
insl
stos
cmp
xor
pop
xor
andl
push
mov
cmp
jns
movsb
adc
add
gs
and
xor
push
mov
mov
sub
orb
jbe
andb
jbe
dec
and
mov
les
xor
aam
shlb
loope
adc
popf
or
je
bound
xor
xor
aaa
push
clc
call
sbb
cmp
push
mov
test
ss
test
lods
and
jmp
call
ja
data16
das
clc
or
pop
push
mov
xchg
in
inc
call
jmp
aam
xor
mov
lods
fisttps
scas
les
xchg
loope
leave
inc
adc
and
add
mov
push
movsl
in
mulb
xlat
or
mov
inc
add
sti
leave
mov
xor
scas
icebp
jl
cli
subl
mov
mov
into
xchg
pop
pop
test
mov
mov
xor
fbld
jge
xchg
or
sbb
adc
mov
push
pushf
sbb
lret
mov
jecxz
adc
jbe
dec
adc
int
xchg
je
es
sahf
mov
mov
les
push
orb
fists
xchg
push
xor
sub
jle
mov
cmpsw
out
or
cs
cs
andl
lods
lods
aas
in
rcl
adc
gs
jno
test
jmp
mov
repz
push
push
lds
xor
mov
cmp
push
pop
push
jl
outsb
mov
ja
jmp
test
aad
and
mov
jne
gs
rcrb
sbb
js
popa
xchg
xchg
push
iret
inc
hlt
sbb
rclb
daa
mov
fwait
mov
int
cmp
lock
fsubs
out
cmp
xorl
sbb
aad
sbb
or
jmp
mov
sbb
push
incb
adc
push
pop
mov
fbstp
cmp
fsub
out
stc
mov
int
leave
dec
inc
mov
je
flds
add
mov
sbb
in
shl
xlat
fwait
lahf
ja
jo
sub
in
push
dec
out
xor
mov
pop
xchg
adc
pop
dec
add
adc
jae
xor
pop
fdivrs
add
inc
push
cs
cmp
cli
in
mov
aas
mov
mov
jns
mov
and
test
fisttps
lret
adc
popf
fcoms
jns
add
mov
gs
xor
cmc
ss
out
cmp
insb
dec
popf
or
push
adc
shrb
dec
ss
or
push
mov
popf
inc
data16
int
adc
cmp
mov
icebp
pop
push
mov
insl
pop
cwtl
xchg
enter
jo
incl
setge
shll
aas
jle
ds
mov
mov
sub
das
ret
outsb
scas
jne
xchg
sbb
add
jg
lcall
int
push
lcall
cmp
xor
inc
pop
int3
cwtl
sbb
insb
shlb
add
test
stc
fs
outsl
sub
adc
movsb
lds
sbb
jl
pop
sub
aad
mov
or
je
ret
dec
cmp
out
lods
xor
loop
adc
lret
pusha
repnz
scas
or
loope
fcmovne
add
imul
ret
loope
push
mov
lods
inc
shr
iret
mov
clc
inc
add
cmp
imul
add
add
js
adc
dec
adcl
hlt
pop
adc
pop
push
and
pop
and
pusha
pushf
adc
sub
inc
test
loop
stos
or
mov
ret
mov
ljmp
push
mov
in
enter
dec
xchg
sub
imul
lret
ljmp
loope
or
imull
mov
pusha
push
daa
dec
aam
add
lahf
add
mov
add
dec
ds
mov
xor
pop
and
jno
sbb
jl
push
inc
inc
xor
adc
jo
cmc
jbe
jecxz
sbb
push
pop
xor
mov
push
dec
pusha
mov
loopne
pop
and
imul
clc
int3
aam
arpl
and
inc
pop
inc
xchg
gs
cmp
int
loopne
sbb
cmc
stos
dec
dec
and
jmp
mov
pop
test
jne
mull
ja
popf
xchg
outsb
stos
sbb
std
mov
xlat
aad
mov
inc
inc
rcrb
cs
cltd
xor
lock
mov
push
orb
cmp
and
sbbb
push
call
iret
clc
xchg
mov
cmp
xchg
push
dec
cltd
mov
testl
stos
dec
mov
mov
cmp
loopne
or
sbb
movsb
mov
lret
daa
xchg
arpl
cmp
push
mov
cltd
sarb
fs
arpl
loope
call
les
dec
mov
cmpsb
stos
dec
push
aas
sbb
ds
stc
mov
and
adc
out
out
xchg
mov
mov
call
adc
mov
cmp
mov
xchg
dec
sub
cmpsl
repnz
pusha
lret
dec
xchg
in
cmc
add
imull
jae
mov
xchg
jne
lcall
mov
mov
rcl
sbb
loope
fmuls
mov
mov
dec
sub
loop
xchg
mov
leave
lea
push
push
mov
stc
mov
fcmovne
dec
movsb
fisubrs
dec
cwtl
push
lods
dec
outsl
jmp
mov
popa
lods
pop
das
nop
mov
pop
xor
mov
cmp
jns
mov
pop
jo
xlat
pop
adc
or
lea
add
mov
orl
pusha
add
in
mov
insl
mov
adc
jnp
or
lds
and
loopne
int
aaa
cs
loope
push
imul
and
negl
add
cmpsb
js
cmp
movsb
push
pop
jae
push
dec
mov
dec
cld
sbb
push
add
aaa
aad
rorb
out
xchg
out
test
push
sti
cmpsb
popa
or
adc
mov
test
stos
adc
test
inc
es
inc
rdmsr
inc
sbb
dec
mov
test
push
nop
mov
jle
jno
sti
add
into
into
push
add
xor
xor
ret
rolb
fwait
mov
xchg
and
or
sbb
dec
add
nop
ret
test
fwait
dec
dec
cmpsb
fsts
icebp
cmp
push
cs
pop
aaa
mov
jb
cmpsl
out
push
addl
push
push
mov
push
ret
mov
add
ljmp
divl
sbbb
dec
and
mov
ficompl
and
dec
stc
stc
iret
jmp
and
int3
rcll
ror
scas
pop
hlt
jnp
and
sbb
pop
pop
shrb
jecxz
sarb
cmp
mov
shl
cltd
jmp
sbb
and
cmp
xchg
push
inc
jns
repnz
or
xchg
jg
rorb
mov
test
pop
dec
cmp
lcall
cmpsb
inc
cwtl
jne
fs
push
pop
shrl
arpl
std
xchg
lret
scas
cmp
rorb
in
pop
jb
or
leave
lods
out
dec
test
sbb
lock
mov
or
loop
pusha
iret
mov
xchg
fwait
cli
fnsave
movsl
push
lods
je
scas
push
or
mov
loopne
jecxz
mov
stc
push
sbb
dec
shlb
andb
js
mov
add
mov
cli
in
sub
pop
add
lods
jae
into
inc
jne
int3
sahf
pop
mov
nop
aas
mov
js
popa
and
or
or
mov
xor
sbb
sarl
icebp
out
push
andb
testb
push
stos
in
xchg
fdiv
sub
nop
and
clc
mov
ror
call
cld
das
rcrl
cmp
sub
sbb
mov
dec
adc
out
push
ja
sbb
ljmp
jp
imul
xchg
out
ficompl
xor
mov
iret
xor
or
das
stos
push
es
add
jnp
mov
xorl
mov
and
xlat
out
rep
xorl
push
xor
xchg
data16
sahf
test
shlb
shld
cwtl
dec
inc
or
jnp
sub
inc
aaa
xchg
push
sub
pop
outsl
mov
jl
scas
xchg
nop
cli
push
mov
fs
inc
dec
mov
in
adcl
int
jmp
mov
test
mov
scas
dec
push
push
int3
pop
into
inc
push
push
pop
incb
cmp
dec
mov
divl
fnstenv
in
enter
ret
and
out
jb
add
mov
insl
mov
es
test
sub
sbb
and
repz
mov
scas
pop
pop
push
sub
jo
cmpsb
push
cmc
ret
adc
movsb
xor
adc
loopne
in
sbb
sub
sub
lods
int
into
sti
push
test
mov
inc
shl
jbe
jb
pop
in
jmp
clc
mov
das
cmp
cmp
dec
jmp
fsubrl
popw
outsl
pop
push
sti
daa
mov
lds
mov
jo
jbe
dec
or
jl
inc
loop
push
or
jmp
cli
push
mov
push
lahf
jl
cmpsb
inc
or
push
dec
inc
adc
ret
mov
mov
dec
pushf
ja
dec
mov
or
sbb
dec
insb
cmp
loop
cltd
data16
mov
popa
mov
fucomi
invlpg
daa
sbb
push
pusha
mov
icebp
xor
aam
sub
iret
xchg
fst
mov
mov
inc
and
mov
fldenv
jge
xchg
mov
lret
imul
mov
nop
movsb
xorb
mov
aam
mov
inc
xchg
lds
cmp
ja
out
sub
xchg
cwtl
orb
pusha
cli
lret
jns
mov
jo
arpl
aas
mov
push
dec
int
jo
sahf
add
ss
sarb
push
negl
popa
clc
outsl
movsl
inc
jl
out
push
insl
jo
xor
xchg
dec
pop
cmp
sti
les
leave
and
push
test
scas
scas
scas
dec
repz
ljmp
push
mov
lock
jmp
imul
imul
jmp
ret
gs
fbstp
sub
jle
xchg
mov
out
lahf
fisubrs
mov
push
stos
inc
jle
pop
push
into
mov
jmp
les
mov
jl
out
dec
jmp
add
inc
call
or
enter
pusha
pusha
and
sbb
test
cmovge
sarl
jge
pushf
xchg
clc
jle
stos
outsl
jb
mov
add
out
mov
sbb
dec
adc
push
push
in
repnz
mov
enter
mov
push
mov
xchg
fisubrl
stos
fcompl
push
mov
and
jb
stos
mov
lea
sbb
xchg
sbb
leave
je
dec
inc
rcll
js
hlt
and
or
pop
rcrl
or
cwtl
popf
fcmovnu
pushl
mov
pop
lock
jecxz
dec
push
pop
scas
dec
jle
jle
lcall
in
pop
mov
xor
cmpsb
dec
push
mov
je
inc
xor
inc
push
xchg
lahf
xchg
int
sbb
mov
mov
add
inc
aas
imul
push
jecxz
sbb
or
jnp
mov
test
and
iret
jmp
mov
fidivrs
out
add
cmp
pusha
ret
sbb
data16
mov
jne
dec
push
inc
inc
xchg
adcl
test
jns
sub
add
or
mov
ret
int3
cmp
sbbl
xor
fwait
fwait
inc
aaa
clc
mov
mov
js
subl
push
mov
testl
jl
scas
aam
cmpsb
add
jae
add
and
sub
iret
cmp
mov
and
mov
and
pop
adcb
jne
int3
les
mov
add
out
pop
jp
mov
cmpsb
rclb
das
xlat
les
nop
fsubs
vpunpckldq
test
push
dec
adc
popf
xchg
mov
lods
outsb
adc
xchg
movsb
int
sbb
mov
out
insb
mov
hlt
jp
push
add
icebp
mov
fs
jge
inc
adc
mov
and
insb
and
aaa
subl
shll
xchg
xchg
adc
inc
lods
cmp
push
shrb
ds
or
push
in
aaa
bound
aaa
ret
gs
xchg
dec
mov
jmp
mov
inc
into
imul
and
mov
dec
decb
faddl
dec
fcoml
dec
add
in
inc
mov
pop
inc
xor
jp
fmulp
pmaxub
sub
aaa
and
jae
cmp
mov
push
xchg
xchg
call
stc
or
repnz
in
jo
imul
mov
icebp
shll
outsb
mov
push
jmp
jbe
repnz
ja
add
xor
jecxz
add
inc
cmpsb
adc
pop
roll
in
test
jbe
iret
inc
xor
int
fmuls
sbb
lea
not
roll
push
jmp
cmpsb
jbe
lods
push
ljmp
and
mov
lret
cmp
ffree
cmp
rcl
rcrl
cmp
arpl
popa
dec
jle
pop
or
movsl
decl
jnp
aad
push
pop
mov
ret
dec
in
mov
xchg
aaa
xchg
sarb
jmp
dec
sbb
test
mov
xor
and
jb
pop
push
xor
lock
and
adc
push
sbb
imul
add
push
in
push
push
dec
pop
clc
inc
rorb
mov
sub
popa
jecxz
or
xchg
hlt
and
mov
push
int3
in
fwait
mov
sub
cmp
ja
clc
loopne
mov
inc
into
cs
cmp
mov
mov
movsl
mov
aam
inc
xor
sbb
xor
sub
jmp
inc
lods
fistps
ret
iret
test
mov
movsb
scas
or
aas
lods
add
addr16
jge
imul
js
mov
aam
pop
push
repnz
shrb
call
pop
mov
adc
pop
push
sbb
pop
hlt
stos
mov
dec
adc
inc
push
push
mov
pop
dec
adc
pop
insl
loop
popa
xchg
cmpl
pop
mov
jle
pop
fldpi
mov
arpl
repz
arpl
mov
call
iret
cwtl
adc
adc
add
inc
in
in
adc
pop
sub
into
adc
mov
shlb
xchg
mov
mov
sbb
jae
test
pop
cmpsl
hlt
mov
inc
shlb
inc
sti
dec
xchg
lcall
mov
push
test
test
stc
test
adc
add
mov
jmp
xor
xchg
es
xchg
int
cs
xchg
mov
xor
stos
jnp
sbb
ficompl
pop
xor
mov
or
outsl
sahf
jns
addr16
sub
jo
repz
xor
cmp
sbb
aas
mov
test
jne
sub
std
loope
xor
mull
cmp
call
lods
jmp
mov
mov
aas
cmp
inc
sub
test
mov
mov
push
mov
jae
lods
inc
sahf
repnz
jo
cmp
lret
sub
scas
pop
inc
mov
push
adc
push
loop
mov
popf
jle
xchg
jle
cmp
jge
mov
rorl
insl
or
mov
push
sbbl
inc
sahf
into
lret
push
dec
adc
cwtl
adc
rolb
jp
fidivrs
divl
dec
mov
sbb
lock
incl
and
not
push
push
clc
and
mov
sarl
cmp
clc
dec
jmp
xor
insl
ja
mov
scas
and
or
xchg
mov
pop
pop
ficoms
add
scas
pop
std
lcall
out
or
lock
bound
ss
jb
pop
or
jg
cld
pushf
inc
adc
cmc
stos
mov
out
jmp
adc
mov
test
xor
xchg
mov
push
lret
sti
aam
mov
jmp
add
mov
lods
cmp
inc
mov
or
xchg
sub
inc
xchg
push
insb
divb
gs
push
enter
add
adc
dec
insb
mov
pop
pop
js
cli
add
push
cmc
roll
cs
jb
addr16
jl
out
and
out
incb
mov
or
enter
xor
and
lret
inc
insb
movsb
jne
inc
cmp
ljmp
inc
cli
fwait
and
inc
dec
stos
mov
inc
clc
movsl
mov
inc
sbbb
add
testl
ds
aam
stos
rorl
xchg
scas
outsl
sub
test
sub
cs
jmp
sbb
ja
test
adc
pop
movsb
ds
jbe
shl
test
pop
out
sbb
jbe
rcll
scas
inc
mov
in
or
pop
mov
sub
movsl
rorb
lret
mov
inc
enter
and
aam
aas
test
pop
push
jmp
adc
cli
dec
ret
sbb
pop
mov
push
xlat
loope
xchg
jne
add
xchg
mov
lcall
mov
fwait
cmp
das
xor
sti
out
mov
xchg
pushf
pop
int
lret
push
cli
jp
add
fld
shll
xchg
sub
js
loope
aaa
lahf
repnz
in
mov
sbb
fs
dec
sbb
or
and
jecxz
lret
and
jg
inc
jo
insl
fadd
xchg
pop
xchg
lea
cmpsb
jmp
insb
lds
and
inc
into
mov
mov
rcrb
ret
fcoml
test
jp
outsl
or
and
pop
rcrb
test
fdivrp
jl
cmp
mov
pop
rcrl
sub
xchg
jmp
in
decl
movsb
pop
push
fcoml
or
and
orl
test
jne
mov
neg
xor
mov
scas
xchg
fwait
pop
mov
cwtl
jno
pusha
outsl
fidivs
enter
movsb
cld
jmp
xchg
and
mov
scas
mov
movsb
jae
stos
xor
in
test
xor
repz
jmp
xchg
loop
addr16
outsl
mov
outsb
mov
pop
iret
dec
cmp
xchg
hlt
pop
decl
into
jp
daa
repz
jp
adc
and
push
jmp
sub
scas
in
bound
adc
loop
jmp
fstl
cs
test
fmuls
and
jmp
lods
mov
lea
cmpsl
dec
mov
add
add
fbld
jns
sbb
xor
mov
js
cwtl
xchg
jle
xor
add
xchg
adc
mov
push
mov
xor
cltd
add
dec
xchg
inc
cltd
mov
rolb
mov
xchg
js
xchg
lret
mov
or
xor
repz
add
outsb
aas
fstl
xchg
mov
pop
in
mov
jne
xchg
push
cmp
call
and
mov
cmpps
add
fcmovnbe
xchg
gs
hlt
imul
iret
fwait
cs
pushf
imul
add
nop
dec
push
aam
or
dec
fwait
or
sbb
movb
xor
mov
je
mov
arpl
imul
xchg
stos
mov
jg
out
jecxz
adc
sub
and
pop
test
in
add
jo
dec
cmp
lods
enter
and
jle
lret
icebp
adc
ja
jne
adc
call
jge
sbb
loop
outsl
sbb
or
inc
fld
inc
cmp
cmpsl
inc
push
imul
iret
mov
and
mov
sti
icebp
cli
mov
imul
movsb
test
adc
lahf
push
aad
pop
in
mov
fwait
and
cmpsl
dec
jl
mov
jns
sub
mov
or
pop
push
shlb
xor
adc
stc
aaa
push
cmc
sub
test
and
mov
ficoms
push
jmp
lods
pop
jecxz
icebp
jo
pushf
outsb
jge
daa
jl
cmp
mov
sub
daa
pusha
cmpsl
aaa
rcrb
push
push
or
incl
dec
dec
adc
cmp
fwait
repz
inc
lods
mov
stos
inc
cmpsl
cwtl
rol
bound
cli
cmovg
push
rcl
xchg
jae
mov
xchg
in
cli
fsubs
sarb
dec
or
sarb
lock
adc
sub
and
dec
dec
and
mov
xchg
inc
cmp
adc
mov
ret
dec
lods
xchg
inc
in
fists
xor
or
dec
int
es
jo
inc
xchg
adc
adc
rol
push
mov
pop
daa
pop
sub
icebp
inc
gs
fwait
lea
jl
in
idivb
sbb
fs
popf
jae
mov
movsb
lret
mov
push
out
jb
popf
mov
adc
out
cs
shlb
or
xor
ljmp
xlat
int
leave
cli
xor
inc
fwait
aas
pop
mov
scas
or
push
sbb
mov
sahf
xchg
or
aam
jno
mov
and
inc
push
mov
push
add
sub
push
pushf
pushf
dec
jge
movsl
imulb
mov
inc
mov
idivb
leave
cmpsb
jne
xor
out
lods
addl
mov
ret
jne
rcrl
hlt
cwtl
jbe
cmpsb
mov
outsl
xrelease
sbb
leave
or
fldcw
out
cmc
test
and
mov
and
inc
lock
inc
adc
stc
add
sub
pop
scas
iret
inc
lahf
daa
and
nop
jbe
or
add
jno
dec
fldl
xor
sbb
shl
xchg
outsb
add
sub
and
push
inc
test
push
fdivrl
movsl
popa
stos
sub
push
jge
inc
push
fisubrs
daa
imul
mov
push
in
adc
adc
xlat
cmp
fldcw
sti
cmp
loop
adc
jo
inc
sub
or
fs
pushf
repz
enter
test
outsl
xor
sti
and
divb
insl
stos
pop
sub
pop
sbb
sbb
leave
push
aad
pop
cld
and
ficompl
push
addr16
stc
test
push
push
mov
lret
dec
mov
xchg
stos
adc
adc
shll
mov
mov
rolb
mov
mov
in
mov
jp
das
mov
and
and
mov
sbb
subb
add
ljmp
xchg
push
loopne
push
pop
fwait
out
sbb
es
mov
adc
jp
pop
icebp
adc
mov
xor
out
inc
addl
mov
push
lods
jp
xchg
inc
sbb
stos
rcrb
gs
mov
out
dec
lcall
xchg
cs
ret
jae
mov
fidivs
adc
out
inc
insb
iret
movb
or
mov
pop
bound
dec
jge
mov
daa
bound
push
xchg
pop
std
out
cwtl
jecxz
ja
mov
repnz
xlat
insl
ljmp
mov
push
xchg
inc
ror
sub
sbb
int3
in
mov
bound
aad
push
enter
add
jp
aad
jb
outsl
mov
jne
daa
jae
mov
adc
xor
out
gs
out
cs
dec
mov
fwait
ror
jl
mov
hlt
pop
nop
idivb
jmp
sub
cs
shrl
dec
mov
mov
sub
xchg
dec
push
xor
adc
clc
sti
add
jmp
in
cwtl
ds
inc
inc
das
loop
testl
and
orl
mov
xchg
push
or
xchg
mov
adc
jecxz
xchg
inc
add
adc
sbb
stos
add
dec
inc
stc
xor
mov
mov
lock
mov
and
bound
inc
mov
mov
jb
adc
push
in
jb
adc
in
bound
sbb
push
xchg
pop
iret
outsb
int
mov
lret
aas
fnstcw
mov
inc
mov
and
cmc
push
ljmp
jecxz
cmp
inc
pop
and
adc
sarb
cmp
hlt
cmc
mov
cs
sub
jg
aas
inc
fs
ret
jmp
xchg
shrb
fs
jecxz
adc
nop
or
scas
aas
outsl
jp
or
jbe
xchg
or
jg
cs
out
aas
movsb
sbb
in
or
jle
testl
iret
cld
cmpl
iret
cmp
insl
pop
fidivl
mov
mov
movsb
pop
into
faddl
mov
lock
lret
sub
jl
dec
out
je
fisttpll
xor
push
das
mov
dec
inc
jb
xor
push
repz
sahf
mov
xchg
pop
xor
cmp
lret
push
popa
scas
out
add
xchg
xlat
sbb
mov
cmp
divl
push
mov
push
cmc
imul
xchg
jo
mov
sub
repz
dec
pop
scas
lods
hlt
mov
xchg
pop
xchg
aas
int3
inc
sbb
sbb
cmc
xor
rcll
inc
mov
push
repnz
arpl
bound
enter
jo
jnp
cmp
fcompl
or
cmp
pop
mov
cmpsb
loope
cmpb
stos
inc
sahf
adc
mov
push
mov
mov
xchg
xchg
and
mov
insb
call
inc
cmc
or
imul
addl
or
xor
push
dec
lahf
out
and
int3
cmp
push
inc
push
roll
mov
int3
sbbl
aad
testl
pusha
call
mov
and
xor
leave
push
stc
jecxz
scas
ret
in
movsl
leave
loopne
daa
nop
xchg
dec
fnstenv
and
jp
cld
cmp
aam
and
add
push
adc
mov
rorl
jp
sub
and
int3
inc
cmp
dec
push
clc
pop
push
mov
push
imul
rcrl
ficompl
inc
pop
out
ja
push
inc
popa
mov
addb
lods
bnd
mov
jb
mov
mov
inc
shrl
pop
loopne
cmpsb
mov
or
jl
hlt
les
cmp
popf
inc
data16
xchg
adc
lods
push
lahf
xor
sub
insb
insb
inc
js
sbb
adc
dec
jns
enter
inc
inc
sahf
pop
out
cmpsb
fistpll
sbb
aas
sub
xchg
and
pop
stos
or
cltd
mov
mov
jnp
xlat
stos
outsl
insl
andl
testb
adc
dec
jb
fisubs
jb
mov
adc
pop
ds
iret
cmc
xor
mov
xor
aad
inc
xor
jecxz
ss
fcmovnu
jae
fucomp
je
pushf
inc
ret
je
sbb
insb
scas
lcall
mov
jle
lds
fisubl
adc
mov
cmc
loope
mov
testb
and
cmc
lds
nop
fwait
pop
popf
pop
mov
jnp
push
imul
jle
add
rcl
movsb
in
mov
xor
jb
jno
test
mov
sti
mov
inc
mov
gs
xor
sub
arpl
adc
jno
jae
cmc
adcb
ss
jmp
ja
mov
pop
dec
loop
rcr
xor
dec
add
mov
xchg
popa
ret
loopne
stos
inc
les
push
or
pusha
addr16
loope
ss
jge
es
mov
push
mov
ffreep
inc
rcrl
or
aas
sub
fdivrl
fidivl
repz
sub
pop
mov
add
xchg
push
adc
sbb
add
sarb
and
push
into
xchg
rorl
jg
les
scas
xchg
jl,pt
test
push
mov
cmp
fcomip
sahf
cld
adc
inc
cmp
mov
pop
jmp
xchg
lock
js
lods
loope
int
lods
pop
test
xchg
mov
mov
mov
cltd
xchg
sub
scas
pop
xchg
mov
cwtl
popa
xor
inc
rorb
mov
push
mov
xor
and
xor
cs
mov
mov
cmpsl
outsb
repnz
in
dec
xor
aam
xchg
scas
cmp
fincstp
clc
rol
mov
dec
cmp
fnstcw
push
push
fnstcw
pop
cmp
adc
and
xor
inc
dec
cmovle
mov
mov
ret
test
inc
data16
imul
gs
cmp
and
mov
jg
add
imull
inc
fildll
outsl
pop
mov
shll
sbb
aas
dec
adc
das
mov
xor
jmp
xchg
call
call
mov
imul
adc
sbb
jnp
fisttpll
dec
and
or
cs
sbb
and
jmp
dec
adc
aad
pop
and
push
stos
rcll
fadd
mov
out
push
jp
jnp
sub
pop
sub
clc
mov
mov
cwtl
add
jle
sub
adc
push
and
lea
inc
mov
or
ja
add
sub
sub
jle
test
fwait
inc
test
sub
imul
xchg
addb
xor
dec
bound
clc
addr16
push
nop
jo
jae
lret
int
pop
sbb
dec
es
lods
sar
std
or
sbbb
xchg
adc
aam
mov
add
cld
adc
xchg
mov
cmp
dec
push
mov
lcall
rol
mov
loop
stos
lcall
rcrl
imul
rorl
mov
call
jnp
dec
mov
bound
xchg
int3
push
sbb
xor
adc
sarb
rep
push
cmpsb
std
dec
cwtl
xchg
aas
inc
cmp
jmp
fwait
ret
and
xor
sbb
or
xchg
sbb
push
cmp
clc
mov
loopne
mov
shl
or
mov
insl
jo
jp
add
fadds
cwtl
or
in
pop
add
add
jmp
sti
pop
dec
ss
add
jge
shll
jmp
xlat
rolb
int3
pop
mov
movsb
je
mov
fsub
mov
cmpsl
sbbl
sub
dec
and
pop
lret
jmp
jns
cmpb
adc
dec
xchg
jno
mov
and
add
push
popl
in
pop
fnstenv
aad
mov
insb
push
ss
std
into
je
jecxz
lahf
push
ror
sub
cwtl
and
xchg
jo
mull
dec
push
push
aas
dec
subl
ljmp
nop
adc
inc
popf
movsl
or
clc
jp
cwtl
lock
sbb
ljmp
cmpsl
call
rolb
xor
xchg
mov
addl
jp
push
jns
dec
in
outsb
cltd
mov
push
pop
cltd
xchg
xchg
mov
sbb
xor
dec
inc
sarl
lret
mov
lods
sahf
mov
inc
gs
stos
mov
aaa
arpl
ret
cmc
movsb
jne
mov
insb
nop
mov
mov
iret
arpl
fcoms
loop
mov
mov
popf
rorb
mov
mov
jae
in
add
push
adc
xor
pop
movsl
dec
scas
movsl
aad
push
xor
lea
push
popf
aad
xor
sbb
xor
cs
popf
imul
out
lret
jmp
inc
fidivrl
jmp
xchg
pop
mov
or
mov
inc
jno
in
push
push
ret
ja
std
push
out
dec
and
pop
lret
sarl
mov
test
jae
jnp
xchg
push
mov
xchg
push
movl
loope
mov
pop
jecxz
dec
int3
pop
xor
jg
lds
jecxz
sbb
dec
push
sub
movsl
sbb
pop
mov
sti
pop
cld
shr
mov
inc
or
lcall
xchg
push
mov
jb
cmp
jp
in
ds
mov
inc
dec
mov
inc
jae
popf
add
dec
add
push
outsl
popa
sub
mov
mov
xor
dec
enter
xor
jmp
mov
insl
dec
popf
add
dec
repz
scas
hlt
bound
add
adc
adc
popa
jge
mov
inc
fnsave
js
mov
ds
lea
or
shll
jb
ret
mov
and
push
inc
icebp
repnz
or
and
pop
notb
lea
int3
lcall
and
clc
add
sub
sub
rcrl
push
and
mov
int
repnz
adc
adcb
adc
push
push
fiadds
jge
inc
jge
push
ret
adc
movb
push
in
ss
scas
stos
sti
aas
pop
dec
stos
fnstsw
lods
and
inc
mov
xor
movsl
fwait
mov
xlat
into
mov
xor
xchg
pop
adc
mov
or
xor
clc
xor
insl
xor
js
popf
enter
pop
and
xor
test
cs
pop
mov
fs
pop
popf
pop
int3
imul
cltd
pop
jecxz
jmp
dec
push
lea
into
push
cmpsl
imul
xchg
jno
and
ror
sub
aaa
imul
clc
or
cmp
and
sti
nop
ss
mov
push
push
or
or
jle
enter
jns
loop
cmp
test
push
push
xlat
nop
movsb
mov
sbbb
inc
and
outsl
adc
xchg
pushf
fdivs
aas
filds
sub
pop
jbe
int3
dec
add
xor
aad
mov
adc
push
or
push
push
xchg
out
scas
or
jg
clc
sar
mov
pushf
hlt
jo
data16
sbb
fwait
xor
sti
sbb
mov
das
mov
sub
pop
jne
cmp
lods
add
push
rclb
into
lcall
fs
mov
std
adc
ja
fsubl
sub
hlt
dec
sub
xor
xchg
pop
nop
sub
stos
sti
xlat
ss
fisubs
insl
lahf
imul
pop
and
xchg
push
mov
test
xchg
fistps
aad
jns
jmp
int
notl
rcrl
cwtl
cmp
icebp
cmc
cmp
mov
mov
and
mov
mov
dec
out
mov
dec
mov
pop
and
daa
add
xor
aam
jp
jmp
pop
outsl
inc
jo
jo
mov
out
sub
hlt
inc
ljmp
cmpsb
xchg
lock
inc
fdivrs
push
mov
xchg
int3
imul
mov
xchg
stc
jo
fmuls
mov
lods
lds
jne
sub
fdivr
scas
pushf
mov
mov
rolb
dec
cmc
add
out
js
ret
dec
into
xor
mov
pop
std
xchg
adc
sti
sub
pop
imull
movsl
xchg
cmp
mov
sbb
lret
add
popa
mov
mov
and
or
adc
mov
push
fs
stc
xchg
loop
repnz
push
cmc
sbb
push
scas
or
outsl
push
divb
dec
pop
push
or
das
nop
outsb
xor
jmp
adc
js,pn
bnd
pop
or
inc
sub
mov
inc
lcall
sbb
xchg
lahf
xchg
mov
sub
cmp
inc
push
imul
pop
out
cld
ljmp
test
add
cwtl
xlat
fmul
je
stos
adc
pop
dec
in
sub
inc
daa
loop
jg
fsubrl
mov
lcall
or
fs
inc
arpl
xlat
mov
repnz
xor
fildl
stos
negb
push
jae
repnz
cmp
cmp
pop
mov
div
mov
jns
mov
stc
jnp
sbbl
push
ljmp
mov
xlat
mov
icebp
and
imull
and
sub
inc
adc
gs
aaa
clc
test
test
inc
pop
stos
div
repz
cmpsb
mov
ljmp
cmovo
inc
sub
leave
or
inc
xchg
bnd
push
xchg
mov
adc
mov
ljmp
sub
rcll
and
in
or
imull
jle
sub
dec
xor
inc
fidivrs
jg
mov
lret
push
mov
aas
popa
test
sbb
mov
push
aaa
insb
sub
cli
insl
in
dec
push
xchg
icebp
aad
ja
jno
dec
jg
cmp
xchg
mov
fistps
mov
push
aas
movsb
adc
push
xchg
add
xchg
aaa
ja
lods
pop
stc
inc
jns
jp
jp
sbb
lea
pusha
add
pop
pop
push
and
mov
xor
mov
xlat
add
dec
inc
int3
mov
or
inc
pop
or
rcr
jo
push
xor
ror
in
adc
cmpsl
and
pusha
mov
cmc
mov
call
mov
pop
sub
cmp
fcoml
lret
ficoml
jecxz
loope
leave
hlt
ja
imul
push
out
or
daa
movsl
xor
cmp
dec
movsb
inc
lods
sahf
and
cltd
or
mov
jae
xchg
or
xor
enter
mov
cmp
mov
mov
mov
dec
cwtl
cmpsb
adc
pop
push
or
pop
xor
mov
cmp
arpl
dec
jnp
adc
xlat
aas
insl
xchg
cwtl
mov
outsb
jmp
pop
pop
std
sub
and
push
and
rcrl
int
rorl
mov
jmp
jp
sbb
mov
movsb
mov
in
push
add
shl
jl
add
push
mov
mov
aas
dec
push
jmp
insl
ja
je
fucomip
jg
daa
scas
pop
insl
pop
adc
cmp
js
jnp
insb
add
mov
scas
jno
cltd
mov
in
xorb
shl
fldt
add
pop
jge
mov
push
orb
call
and
jp
addr16
iret
pop
sub
cmpl
adcb
pop
mov
pop
cld
dec
jns
jns,pn
cmp
test
repnz
outsl
sbb
cmp
cld
pusha
test
dec
cmp
xchg
fwait
cli
lret
add
sar
popa
dec
mov
repz
cmp
rcl
testb
outsl
or
or
and
cltd
jecxz
pushw
in
andb
adc
or
and
repnz
pop
add
adc
cmp
xor
jl
xor
pop
nop
cwtl
jae
and
sahf
cld
pop
repz
inc
mov
xor
xor
cs
xchg
mov
lods
or
mov
and
imul
inc
mov
xchg
push
xorl
cs
cmp
jbe
insb
loope
mov
adc
cmp
ja
push
mov
xor
and
lods
pop
cmp
mov
cmpl
outsl
lret
sub
and
sub
ret
and
lods
cmpl
or
in
sub
mov
add
aaa
call
mov
sub
xchg
adc
out
cwtl
add
ret
mov
inc
xchg
movsl
push
adc
sub
xor
pop
gs
cld
bound
cwtl
ds
inc
or
movsb
or
std
xor
jmp
mov
xchg
sub
xor
cmpb
ljmp
xor
mov
jmp
fstl
lahf
adc
movsb
repnz
pop
fiaddl
xchg
mov
xchg
call
es
lods
jno
sub
cmp
subl
jecxz
sub
lret
jmp
sarl
xor
push
mov
aad
popf
dec
xor
out
jo
jnp
cmp
push
dec
rorb
fimuls
inc
sarl
push
add
lcall
dec
sub
in
rcrl
inc
addr16
jl
daa
js
test
xchg
outsl
add
gs
pop
xor
jge
fmull
outsl
stc
sbb
push
cvtpi2ps
mov
fs
imul
mov
out
in
push
out
push
pop
pop
pop
in
ja
adc
lahf
add
les
sbb
outsb
popf
in
int
add
mov
adc
mov
orl
call
pop
ss
xor
int
xchg
jg
roll
push
dec
cmpsb
je
push
xor
imul
sbb
dec
jb
mov
fnsave
inc
shl
jo
adc
mov
cmpsl
fucom
cltd
jge
or
or
cmp
inc
imul
mov
lds
cld
and
bound
rclb
frstor
imul
jp
mov
idivl
shr
lds
sub
repz
dec
mov
xor
jno
pushw
xor
lret
xchg
pop
test
add
push
shlb
jbe
adc
popf
idivb
lock
pusha
jge
lret
jecxz
sub
pop
pop
fnstenv
scas
hlt
daa
xchg
insb
xchg
in
stos
mov
mov
xchg
js
mov
mov
dec
hlt
mov
pop
jle
xor
in
in
enter
jmp
pop
gs
into
sub
fdivrl
pop
xor
gs
ud2
jns
adc
std
outsl
in
mov
ret
xorb
inc
mov
loopne
testl
stc
push
xchg
repz
jnp
sahf
ret
sbbl
sbb
jl
lret
hlt
das
stos
sti
int
sbb
push
repz
fists
xchg
add
je
ret
inc
shr
cmp
lea
add
shll
icebp
aam
std
jmp
out
mov
pop
adc
xchg
jmp
sbb
ficomps
cmp
jae
lahf
dec
outsb
gs
fisubs
sbb
scas
jmp
data16
dec
repz
mov
push
pxor
or
cwtl
and
out
loop
je
dec
in
mov
mov
mov
lds
popf
push
mov
add
lret
adc
push
mov
subb
jno
mov
icebp
and
pop
mov
jne
or
add
arpl
hlt
jne
sub
push
jae
push
clc
adc
inc
sarb
or
sbb
pop
gs
fsub
mov
cs
js
roll
add
lods
jae
or
lock
into
popa
push
cwtl
dec
xor
shll
cltd
in
or
cld
or
jne
ss
jo
or
or
arpl
jb
cmpsl
cmp
loope
out
cli
xchg
inc
cmp
lock
jl
mov
imul
inc
mov
int
mov
mov
cmp
or
lcall
lea
inc
hlt
xchg
insl
mov
ljmp
cmp
out
push
and
sub
xchg
mov
mov
into
inc
jno
xor
sbb
dec
jb
movsw
adc
int3
js
imul
lret
xorb
mov
stos
sub
sbb
pop
push
out
repz
lods
inc
push
xchg
cld
sub
add
inc
jecxz
push
repz
mov
mov
cli
pop
lods
pusha
arpl
pop
inc
out
addr16
shll
mov
pop
cmp
daa
mov
pop
shl
pop
insb
mov
pop
lds
insl
fucomi
pop
test
jecxz
subl
push
or
cmc
inc
rclb
gs
imul
adc
push
lds
cmpsb
rcl
aad
xchg
inc
push
xchg
and
mov
dec
sub
or
aad
mov
push
jecxz
and
sbb
pushf
xchg
pop
movsl
or
jmp
pop
test
call
mov
mov
xchg
in
ss
nop
cmp
fstpt
inc
push
push
jae
xor
test
adc
out
subb
pand
pushf
movsl
bound
rcl
cmpsb
mov
mov
mov
jno
mov
push
mov
daa
jl
cld
repz
sub
aas
sub
rorl
cmpsb
mov
inc
insl
sbb
aam
cmp
pop
mov
jnp
call
fwait
sbb
lahf
sub
xchg
jg
out
cmpsb
xor
cmpsl
popa
jmp
dec
loopne
rcr
ret
jne
leave
repnz
mov
cld
dec
lret
nop
roll
xchg
mov
dec
incl
mov
mull
jl
mov
rcr
cmp
pop
dec
xchg
jle
pusha
and
sbb
cmp
jae
enter
fsubrl
pop
imul
int
xchg
inc
mov
arpl
adc
push
pop
pop
sbb
das
dec
pop
cmova
jg
xchg
push
int
shl
nop
xor
pushf
cmp
out
mov
rcrb
jecxz
and
xor
and
aas
subl
clc
inc
push
sub
xchg
fucomip
sahf
imulb
and
sbb
call
push
jmp
pop
add
sub
sub
pop
cltd
mov
mov
push
fwait
mov
mov
inc
jmp
loopne
jo
jl
mov
mov
inc
pop
fs
or
sti
jnp
pop
add
cld
mov
xor
or
repz
cmp
repz
inc
imul
sbb
sbb
adc
fmulp
and
dec
and
scas
cmp
inc
call
pop
jb
adc
out
and
adc
in
pop
xchg
pop
push
push
adcb
sub
pushf
mov
xchg
fcmovbe
pushl
mov
and
sti
mov
es
jns
xlat
adc
cmpsl
jge
leave
sbb
ds
mov
add
xor
add
int
mov
sub
jl
jmp
test
add
std
cli
cli
push
mov
or
sti
shrb
mov
and
pop
cmpsb
sbb
call
sbb
inc
cmp
xchg
and
cwtl
movsl
js
rcrl
sub
fwait
ret
je
sub
fisttps
loop
loope
je
xor
lods
adc
jge
push
movsl
dec
int3
ja
inc
movsl
gs
insl
int3
mov
cmp
aas
mov
xchg
sbb
nop
mov
clc
and
movsl
out
sbb
lcall
insl
lods
lods
xchg
sub
jge
mov
aaa
int
xchg
loopne
pop
sbb
inc
sbb
jecxz
mov
xchg
fisttpl
addr16
mov
mov
cmc
jne
adc
call
xchg
cld
lcall
fcoms
sti
mov
jb
dec
orl
adcl
mov
fwait
into
push
lock
jmp
and
push
mov
mov
jae
mov
movsb
gs
jne
xchg
xlat
cli
mov
outsl
xchg
in
je
shlb
sbb
mov
paddw
push
push
fs
mov
mov
aam
adc
stos
xor
xchg
dec
mov
cmp
jp
ds
aaa
repnz
jne
or
xor
add
push
add
rclb
or
gs
cs
jp
or
xchg
mov
mov
stos
out
pop
adc
lock
dec
sbb
cmp
add
jbe
xchg
repnz
mov
in
out
cs
mov
adc
mov
iret
iret
rol
mov
pop
cmp
mov
in
pusha
loop
movsb
lock
cmpsb
inc
sub
mov
push
lret
aas
aam
sub
arpl
jmp
aad
sti
rol
sub
cmp
sub
mov
lock
shlb
inc
hlt
and
enter
pop
loop
sbb
aaa
xor
loopne
cmp
loope
mov
cwtl
xor
cmpsb
pop
mov
mov
enter
jg
popl
icebp
or
int3
mov
jge
in
push
loopne
pop
stos
leave
xor
stos
mov
bound
divl
out
ja
or
lock
andl
lods
cmp
sbb
lods
data16
xchg
pop
dec
lods
sub
leave
pop
xchg
xor
sbb
adc
mov
xchg
sbb
shr
repz
mov
or
pop
enter
add
movsl
add
cwtl
xchg
sub
jmp
adc
and
aas
nop
sub
push
xor
cltd
shrb
push
cld
stc
or
dec
xchg
cli
subl
jns
mov
ret
xchg
cmpsl
dec
bound
add
pop
mov
cld
jno
mov
cmpsb
jae
and
imul
lcall
inc
cmp
xor
xor
jbe
xor
scas
lret
lcall
adc
adc
subl
clc
inc
scas
adcb
outsb
hlt
jle
das
xchg
sub
inc
popa
inc
mov
loope
cmpsl
out
fdivrs
xor
add
mov
push
movsb
addr16
adcb
sub
add
fwait
pop
sti
cld
xchg
lret
sub
sbb
sbb
sbb
notb
mov
in
cmc
lret
or
xor
xor
lret
in
mov
fcomip
sbb
mov
pushf
jg
int
push
dec
adc
mov
into
cmp
xchg
cmp
dec
iret
push
loop
lods
cld
sub
test
jecxz
cmp
sub
push
lcall
enter
pop
pop
arpl
and
lret
adc
jo
repz
repz
adcl
ret
out
xor
sub
int
jp
dec
mov
cmc
out
xor
adc
in
xchg
cs
leave
mov
jl
push
pop
out
cmpb
mov
test
rcll
cmp
js
scas
lock
push
sub
dec
cld
mov
lds
jns
lcall
orb
test
imul
lods
int3
push
sbb
and
stc
sti
rcr
stos
push
loop
lea
sub
jbe
sti
sahf
mov
stos
loopne
cmp
add
or
cmpsl
in
sarb
sarb
cmp
mov
mov
sar
arpl
mov
out
js
out
xchg
lods
rolb
fnstcw
es
icebp
bound
cli
sbb
sub
push
inc
cld
push
outsb
imul
jg
mov
fwait
push
cmp
pop
or
jl
push
adc
cmp
movsl
xchg
add
adc
es
push
xor
dec
insb
cmpsb
jge
xlat
sbb
push
int
dec
lds
rorb
int
jns
add
ljmp
call
loop
andnps
xor
je
mov
xlat
lock
mov
cmp
outsb
nop
loop
outsl
xlat
push
xchg
or
adc
xchg
popa
cs
mov
add
mov
idivl
aas
jmp
bound
cmp
pop
or
das
jle
mov
stc
nop
popa
pop
daa
add
jno
daa
mov
lods
aad
int
inc
shrb
mov
int
test
xchg
dec
int3
icebp
jns
jb
cs
lcall
mov
fdivs
enter
adc
std
mov
clc
mov
gs
jne
inc
cmpsl
mov
push
icebp
push
loopne
js
test
fsubl
mov
movsb
cmpsl
inc
lret
lahf
arpl
pop
sahf
rolb
lock
xchg
pop
scas
push
lahf
movsl
mov
shll
xchg
ret
cmovl
pop
push
lods
adc
and
jp
inc
js
sahf
cmpsb
jecxz
dec
xchg
jmp
sub
je
insl
loope
stos
mov
fptan
aas
insb
in
nop
inc
out
sbb
lods
or
xchg
lret
aas
addr16
in
stos
lcall
aam
jnp
aaa
insb
push
cmp
inc
std
out
xchg
adc
ljmp
mov
cmpsl
in
sbb
cmc
hlt
outsl
aaa
movsb
sbb
out
and
ja
pop
xor
cltd
ds
outsb
and
popf
movsb
pop
ja
sub
push
cli
dec
dec
xchg
fstl
popa
mov
adcb
js
inc
insl
sarl
ljmp
pop
xor
fs
or
cmp
roll
lods
sub
jl
jmp
insb
into
repz
dec
mov
cmpsl
shrb
sub
mov
xchg
fsubs
hlt
jno
push
add
mov
adc
push
repz
scas
inc
pop
mov
add
out
testb
xchg
xor
xchg
push
sub
mov
lods
mov
dec
test
sub
lret
mov
sub
fidivl
cmpsl
mov
cli
jae
mov
invd
push
rclb
js
out
clc
or
sub
mov
por
rorb
lods
insb
push
fisttpl
mov
cmpsb
test
mov
subb
cltd
addr16
aas
testb
pop
inc
inc
mov
jno
loop
stos
out
adc
jnp
negl
out
sbb
sub
mov
pop
out
lcall
je
mov
sti
pushf
nop
or
pop
xchg
clc
xorl
push
pop
jmp
lret
enter
add
pop
movsl
push
mov
js
jmp
in
pop
push
out
push
push
loopne
int
sub
mov
inc
push
adc
pop
movsl
cmpl
movsl
jg
fcomi
add
loopne
mov
mov
inc
das
xor
out
inc
movsl
adc
scas
cmpsb
stos
mov
inc
push
and
negl
out
sti
test
push
mov
lahf
stos
xlat
mov
dec
imul
scas
ds
shlb
lret
adc
sub
rorl
mov
cmc
pusha
rorb
dec
push
inc
es
cmp
push
call
cmpsb
out
inc
loope
cmp
mov
or
sbb
inc
pop
mov
jp
mov
jp
dec
or
adc
iret
cs
xor
mov
xchg
xlat
stos
cmp
or
adc
mov
inc
mov
mov
adc
cli
sub
adcb
push
test
shr
imulb
sub
sbb
es
xchg
jb
lods
ret
and
sub
xchg
cmp
outsl
and
xchg
shr
in
xor
pushl
push
fsubr
ljmp
jae
out
add
push
sbb
lods
xor
sbb
pop
pop
jp
xchg
rcr
out
int
shrb
stc
mov
int
add
jp
idivl
popa
or
pop
jb
mov
push
jno
insb
pop
in
lods
adc
sbb
and
mov
pop
test
add
mov
cmp
je
mov
push
pop
cmp
imul
mov
dec
incb
push
xchg
imul
out
pop
inc
lds
mov
adc
mov
mov
fistl
imul
pop
loop
adc
dec
adc
push
cld
cmp
pushf
mov
pop
jmp
mov
in
add
sbb
insl
inc
test
mov
leave
cmp
push
add
add
xor
push
xchg
lret
mov
cmp
in
xor
sahf
push
cmp
jnp
dec
fcmove
push
mov
and
clc
xor
lods
mov
push
mov
sub
lods
dec
dec
daa
xchg
stc
pop
cmp
dec
cmp
mov
pop
pop
jmp
cld
movsl
mov
sub
cs
mov
adc
jl
add
in
subb
scas
imul
sbb
push
jmp
mov
dec
jle
stos
mov
push
test
xchg
out
jp
sbb
cmc
aaa
data16
push
jnp
mulb
push
xchg
pop
lock
inc
mov
sahf
mov
imul
cmp
xchg
push
ljmp
loopne
pop
lret
xchg
adc
jle
push
sarb
lds
xchg
and
xchg
push
adc
outsl
inc
ja
jle
js
or
mov
stos
mov
arpl
into
nop
mov
mov
mov
and
mov
stc
mov
stos
push
ret
loopne
in
jecxz
imul
test
adc
movsb
or
or
in
jbe
notb
andl
cmpsb
cmp
mov
cli
mov
adc
push
cmp
or
scas
jb
filds
insb
cld
xor
sahf
dec
lcall
inc
xor
lods
in
fmull
cli
cmp
rep
pop
fisubs
stc
pop
mov
stos
rorl
sub
stos
push
push
mov
lea
push
test
cmc
xlat
outsb
inc
mov
outsb
mov
add
cmp
shrb
in
data16
js
cmp
sbb
daa
nop
aam
xchg
aad
es
hlt
add
scas
mov
xchg
cli
add
pop
lods
sub
and
xchg
sub
push
cmp
aad
mov
sbb
and
cmc
popf
repz
pop
and
lea
push
rcll
mov
or
xor
inc
pop
les
sbb
sbb
mov
mov
frstor
mov
lret
inc
fldcw
xor
cld
out
pop
mov
mov
dec
xor
rol
push
fs
cli
dec
inc
mov
push
loopne
jae
mov
inc
outsb
inc
lods
aaa
mov
mov
mov
sbb
mov
dec
bound
loop
pop
cmp
xlat
cmp
pop
xchg
adc
ss
or
mov
jle
test
jecxz
xlat
andl
dec
push
sahf
jnp
push
and
int
shlb
insl
cltd
xadd
sub
pop
ret
mov
mov
cmpl
in
jmp
cmp
xabort
andb
ljmp
aaa
push
dec
stos
push
mov
sbb
inc
xor
or
jnp
mov
jo
cli
int3
jne
js
rcrl
repz
sti
mov
xor
loopne
sub
pop
adc
lret
dec
inc
repnz
jle
cmp
xchg
loopne
dec
fistps
loop
fsts
xchg
mov
popf
sub
add
mov
lods
mov
or
jg
push
push
iret
movsb
lds
sbbl
notb
push
cmp
adc
imul
rol
addr16
fsts
xchg
mov
add
pop
xchg
sbb
mov
je
add
popa
and
in
into
mov
jbe
cmp
cmp
in
xorl
addr16
mov
add
cmpsl
dec
cld
pop
mov
fdivrp
lahf
mov
movd
lock
enter
fcmovu
jecxz
jmp
jae
sbb
mov
mov
mov
xor
push
mov
nop
pop
xor
jne
sub
lods
pop
repnz
pop
sbb
popf
mov
inc
test
jle
pop
es
ja
mov
mulb
imul
sti
mov
mov
scas
lret
cmp
test
cmpsl
cmc
lea
loope
loop
xor
es
insl
dec
cs
fcomip
lods
ret
pop
dec
pop
ljmp
fwait
mov
xchg
inc
xchg
add
sbb
gs
seta
dec
js
into
mov
in
lcall
aad
cs
push
test
gs
jns
dec
lods
les
dec
cmp
lret
adc
jmp
insl
jmp
scas
cmc
push
fsubr
movsb
pusha
mov
hlt
inc
or
jae
xor
pop
sbb
or
mov
adc
mov
push
cmpl
into
adc
jno
adc
mov
out
fs
sub
xor
push
mov
sbb
push
push
je
sti
or
inc
call
cmp
cmp
idivb
push
mov
pop
fwait
and
sti
into
cld
mov
shrb
jb
imul
repnz
mov
xchg
cmp
pop
dec
test
in
bound
ret
jns
enter
mov
sub
or
jb
mov
push
xchg
mov
in
cmp
jnp
jo
cmp
out
pop
jg
fsts
adc
add
push
pushf
sbb
aad
jl
mov
sahf
mov
mov
mov
adc
xchg
cmpsl
stc
das
movsb
add
adc
cmc
jns
and
aas
dec
dec
mov
rclb
out
out
imul
aam
dec
jp
cmpb
adc
adc
push
out
inc
mov
lds
xlat
sub
js
clc
or
sub
fisttpl
pop
push
mov
jle
xorl
test
dec
mov
add
nop
xlat
sar
add
fsts
dec
inc
test
add
fwait
or
and
xor
aad
jle
push
push
push
shrl
popf
jmp
jmp
xchg
out
xchg
mov
add
subb
int
xor
sub
jns
cmp
inc
loopne
aaa
jmp
fisubrs
ja
stc
ljmp
js
jmp
jmp
mov
xchg
shr
dec
sbb
std
repnz
mov
lret
inc
ljmp
jge
repz
mov
data16
repnz
pop
imul
push
or
int
fcoml
lods
sub
daa
jb
push
test
xor
mov
inc
sub
popa
dec
rclb
or
and
cmp
sub
sbbl
je
popa
add
sbb
repz
xchg
fidivs
xlat
cmp
mov
cmp
jbe
gs
mov
icebp
dec
mov
mov
sarb
out
aaa
dec
cltd
ret
jmp
push
test
pop
mov
push
loope
inc
int3
andb
mulb
jmp
insb
scas
daa
cmc
inc
mov
jne,pt
push
and
xor
jmp
popf
push
inc
je
or
movd
mov
and
andb
int
xchg
ja
popa
cmpb
pop
shrl
xchg
pop
scas
jg
adc
bound
cmpsb
mov
negl
sbb
cmp
xor
cmpsb
sbb
cmp
shlb
push
addb
decl
cmpl
popf
jl
in
pop
mov
movsl
mov
dec
lret
mov
cmp
int3
dec
mov
sahf
ficoml
cld
rcrb
add
pop
push
push
fdivrs
xorb
call
dec
xchg
std
ljmp
jecxz,pt
cs
pop
pop
sbb
adc
dec
mov
lahf
mov
fnstcw
ret
test
xor
push
inc
cltd
xor
cmp
cwtl
in
fsub
int
pop
sbb
pop
imul
inc
cmpsl
scas
push
pop
in
pop
adc
pop
shlb
and
pop
inc
push
pop
fwait
inc
cmpl
in
pop
and
lahf
push
test
lds
and
orb
movsb
cmc
jns
mov
add
les
lods
xchg
in
cmc
xor
inc
mov
jnp
rorl
add
rcrl
xor
pop
stos
mov
or
fnstsw
xchg
jl
jg
ljmp
mov
std
mov
andb
bound
movsl
call
adc
cmpsb
jp
jo
jne,pn
hlt
xor
ret
daa
inc
fsubrs
jo
cli
dec
cld
jmp
aad
jle
mov
mov
popf
xor
rcrl
mov
sbb
sbb
fwait
les
mov
jno
jo
lahf
mov
cmp
xlat
insb
pushf
into
inc
leave
cli
test
aam
test
and
icebp
lock
cmp
divb
stos
and
jg
int3
jns
ljmp
in
push
mov
popa
stos
cmp
rolb
sub
movsb
in
dec
mov
mov
int3
stos
jbe
dec
xchg
push
lds
test
push
mov
scas
std
push
push
mov
mov
or
or
sub
mov
add
aas
out
xchg
sbb
stc
testl
leave
push
inc
xchg
stc
mov
fistps
pop
adc
xor
sar
mov
xchg
outsb
call
ja
test
push
les
jbe
sub
insl
cmp
jmp
iret
lahf
lea
cmpl
xorb
leave
sbb
cmpsl
ret
inc
push
ret
lret
mov
cmpl
shll
adc
cmp
cmp
sbb
add
pop
loopne
inc
outsb
mov
inc
in
and
and
mov
pop
fistpll
lret
xchg
push
ficoml
out
fcmovnu
daa
js
lock
jp
movl
jbe
push
push
fstpt
shrl
or
mov
mov
test
and
loop
pop
push
cwtl
pop
and
push
inc
fwait
icebp
or
test
and
adcb
jns
outsl
cmpsl
cwtl
js
cwtl
mov
sbb
int
and
lea
inc
mov
scas
xor
nop
shrb
outsb
dec
and
mov
fs
loop
xchg
lods
mov
inc
jp
sahf
dec
jno
shlb
xor
push
lods
call
int
in
scas
mov
aad
dec
loope
dec
ret
mov
add
insl
arpl
pop
call
xor
or
pop
divl
scas
out
shlb
add
xchg
fisttpll
adc
pop
mov
adcb
adc
sbb
fwait
push
mov
arpl
mov
popl
or
cmpsb
mov
push
js
mov
mov
mov
add
xor
and
loopne
inc
test
jno
repz
xor
and
or
test
adc
mov
cmp
cmp
add
xlat
push
inc
cli
mov
rcrl
or
test
lret
pop
xor
or
sbb
push
gs
push
sarl
ret
gs
ds
sub
das
push
imul
fadds
rclb
mov
sbb
out
adc
sahf
out
inc
cmp
cltd
insb
in
jle
addr16
xor
push
out
mov
shrb
data16
mov
pop
sbb
xor
pop
mov
sbb
cmpl
inc
bound
nop
xlat
dec
scas
cmp
ret
pop
jno
adc
sahf
testb
insl
pop
mov
int3
scas
mov
xor
rorl
and
lock
stos
pop
inc
in
loop
fldenv
bound
pop
shrb
adc
mov
test
pop
xchg
out
or
mov
stos
jo
sub
mov
mov
adc
imulb
loopne
dec
std
fstpt
and
jae
mov
int3
inc
adc
adc
sub
nop
xchg
mov
movsl
cmpsl
hlt
sahf
mov
pushf
adc
outsb
push
daa
jb
jge
or
push
mov
lret
xlat
push
fnsave
test
clc
push
xchg
mov
sbb
cmc
bound
bound
cltd
push
xchg
mov
mov
dec
out
pop
popf
xorl
sub
push
push
push
pop
jp
pop
sarl
rclb
test
aaa
jae
fildl
or
or
cmp
fs
imul
mov
add
mov
or
and
inc
aam
or
mov
jns
insb
xchg
rcrb
mov
aas
sbb
mov
mov
call
push
stc
add
mov
mov
lock
sti
sti
jle
mov
sahf
xchg
repnz
mov
daa
dec
out
cmpsb
push
sbb
sub
out
mov
mov
cmp
jae
fld
les
mov
sbb
xor
inc
push
cmp
dec
inc
shl
call
out
push
cltd
inc
ficompl
pop
jle
stc
out
aad
sbb
call
scas
fwait
cmc
jbe
adc
sub
loope
mov
out
xor
lods
xchg
rclb
mov
mov
add
iret
pop
mov
jbe
stc
icebp
pop
icebp
mov
mov
xchg
pop
ds
lods
sahf
sti
mov
fwait
fwait
push
into
mov
or
inc
mov
pop
test
push
shlb
sti
lods
pop
xor
xor
pushf
outsl
leave
pavgb
cmp
inc
jp
aad
outsl
or
add
push
int
xchg
xchg
pop
les
aam
inc
rol
jecxz
das
lret
loopne
adc
sub
xchg
lods
hlt
rclb
dec
adc
add
movsb
ret
icebp
stos
push
sub
jbe
cmpsl
pop
jnp
cmp
enter
mov
fidivrs
outsb
mov
or
xchg
scas
adc
push
cmp
jg
sub
gs
loopne
dec
mov
mov
test
lret
movsb
sbb
pusha
adc
sub
repnz
sub
cs
xor
xchg
iret
push
jns
jge
push
mov
and
insl
mov
mov
mov
or
test
insb
insb
ret
mov
sub
repz
es
imul
add
mov
add
out
ja
mov
push
mov
xchg
mov
or
and
cmpl
sub
cwtl
enter
aaa
repz
arpl
cmp
jmp
pop
roll
jno
std
cmp
loopne
addr16
ret
inc
shll
stc
arpl
cmp
cwtl
jge
pop
sti
sbb
pop
test
inc
std
cmp
push
pusha
jp
push
sub
cmp
adc
inc
fisubrl
jmp
iret
adc
jg
bound
push
mov
ficomps
les
mov
nop
jno
sbb
sti
hlt
in
xor
andl
out
test
sbb
xchg
fadds
adc
fsubr
popf
gs
jnp
mov
mov
loop
or
in
jg
xor
das
jl
mull
test
or
mov
out
push
and
aas
pop
ret
daa
cmpsl
add
pop
adc
lock
loopne
adc
orb
mov
ret
lea
movsl
insb
cmp
dec
or
cltd
push
sbb
mov
jne
dec
outsb
xchg
and
mov
add
mov
sbb
or
lret
dec
xchg
sbb
mov
icebp
popf
mov
mov
popa
data16
sub
jge
xchg
pop
mov
lods
adc
or
xor
call
lods
lret
xchg
inc
sbb
test
scas
pop
sbb
cmp
sub
jge
test
mov
stos
divl
xor
add
ss
decl
sahf
repz
ja
add
pop
push
add
in
cmc
int
mov
jb
mov
xchg
mov
je
lahf
jg
ljmp
xchg
sahf
ret
cmp
test
push
das
dec
lods
jmp
dec
sbb
cmp
pusha
ret
cmpsb
push
test
adc
out
push
ficompl
inc
jmp
xchg
mov
ljmp
mov
testb
es
push
ret
inc
cmpsb
add
cmp
or
loopne
adc
cld
test
pusha
cmpsb
xor
sti
jbe
inc
pop
xchg
push
pop
jecxz
subb
mov
xchg
fisubrl
fsts
and
shr
stos
test
test
pusha
sahf
cwtl
sbb
fdivs
fisubs
sub
ds
js
leave
add
in
sub
jns
add
int3
flds
je
jbe
in
adc
lds
aam
iret
xchg
jle
mov
sbb
iret
dec
add
stos
inc
and
mov
add
cmp
repnz
jns
in
push
mov
test
stc
adc
pop
cmpsb
andb
dec
dec
xor
mov
bound
add
leave
mov
xor
lahf
popf
shl
int
or
es
je
call
dec
sub
pop
add
mov
outsb
pop
aam
cld
dec
fcmovnbe
aad
loop
sub
push
ss
rorb
loopne
std
out
sahf
rorb
iret
pusha
pop
add
xor
mov
aam
push
bound
mov
movsb
movsl
and
jle
mov
jecxz
mov
popa
jns
inc
add
dec
lock
jg
dec
pop
push
ljmp
dec
icebp
push
dec
pop
pop
stc
out
dec
fisttps
lret
and
cmpsb
loop
notb
ja
cmpsb
sub
loopne
fcompl
inc
mov
stos
add
out
sub
addr16
mov
pop
std
dec
xor
ss
lds
xchg
adc
popf
push
jp
aaa
lea
jno
insl
lret
dec
idivb
mov
aas
cli
cld
or
arpl
mov
addr16
stc
dec
stos
xchg
insb
fimull
inc
dec
frstor
mov
pusha
stc
push
loopne
pop
cmp
sub
fs
sbb
sbb
dec
add
mov
dec
push
pop
orl
and
jne
pop
add
cmp
mov
xchg
mov
dec
lock
scas
repnz
sub
ret
or
push
test
jg
cmpb
jl
adc
stos
and
out
addr16
movsb
ja
test
jne
and
aam
mov
cld
mov
gs
xchg
xchg
mov
das
idiv
cld
lock
ss
lret
push
adc
adc
and
cmc
aaa
insl
and
dec
push
push
dec
test
out
ljmp
fcmovne
pop
scas
test
xor
fisttpll
js
add
cld
jb
call
adc
xorl
movl
cmp
lods
inc
sub
adc
icebp
je
shr
mov
outsb
dec
scas
jl
outsb
je
bound
push
mov
dec
push
cmpsl
xor
ljmp
push
mov
dec
push
pop
loope
mov
jno
ret
sbb
cmp
add
dec
dec
inc
jecxz
and
loopne,pn
ljmp
mov
mov
test
mov
or
inc
call
pop
movl
mov
mov
xor
xchg
mov
cmp
jl
xor
adc
or
pop
out
idivl
lret
orl
icebp
mov
je
rcrl
xchg
adc
out
mov
mov
mov
jo
int
f2xm1
jge,pn
test
dec
fisttpl
pop
bound
gs
cmp
sub
add
aam
dec
jns
xchg
aas
dec
push
mov
test
jne
push
push
dec
ja
enter
test
sbb
fadd
mov
sub
leave
rcrb
ja
push
mov
sub
mov
lods
rorl
test
dec
sbbb
in
mov
push
push
and
rol
fs
push
lahf
int
adc
push
jne
and
bound
mov
cli
pop
and
loopne
or
repnz
or
hlt
or
xor
mov
mov
ja
fwait
pop
inc
and
cmp
xchg
mov
inc
dec
xchg
arpl
loopne
bswap
lock
mov
inc
cmp
enter
inc
icebp
push
add
push
lods
dec
je
fsubr
enter
add
loop,pt
sub
and
fldenv
adc
scas
inc
arpl
jg
adc
jg
xchg
pop
bound
scas
ljmp
sbb
push
inc
test
xlat
xor
jge
shrb
add
jge
mov
dec
sub
xor
inc
pop
mov
in
lods
pop
pop
roll
push
pop
movsl
lea
dec
sub
daa
mov
es
mov
pop
stos
test
cmp
aaa
or
out
cmp
cmc
stc
jne
int
inc
call
mov
sbb
lock
orl
test
rorb
aad
subb
icebp
fists
jg
and
lret
clc
fsubrl
js
cmpps
cmpsb
hlt
adc
pop
or
lcall
js
mov
test
push
std
xchg
repnz
push
inc
dec
aas
or
xchg
mov
test
cmp
pop
adc
and
jb
sbb
xchg
mov
imul
and
xlat
mov
fisubl
dec
outsb
sbb
mov
das
dec
adc
pop
add
scas
sub
inc
or
mov
fdivrs
sti
sub
into
movsb
inc
push
mov
popa
mov
loopne
sbb
push
push
push
xor
imull
xor
test
sahf
addr16
aad
adc
inc
or
inc
push
ja
fldl
ret
mov
js
fcomps
inc
ja
mov
inc
adc
bound
gs
aaa
gs
pop
mov
fildll
and
or
xchg
sub
std
xchg
mov
push
adc
jl
roll
xlat
das
cmpsb
cmp
or
pop
mov
inc
and
in
mov
jno
in
in
lret
xchg
sub
scas
xor
cli
fmull
out
leave
aas
mov
int3
mov
into
or
lcall
fildll
hlt
ds
movsb
xchg
add
mov
sub
inc
add
jmp
pop
fdivp
call
loopne
jp
insl
dec
fs
in
lods
xorb
sub
bound
cmc
pop
inc
cwtl
js
int3
jecxz
inc
shl
jmp
dec
inc
das
push
jne
std
mov
lea
push
stc
aaa
pop
mov
pop
pop
cs
push
imul
test
repz
sbb
add
dec
imul
pop
adc
loopne
and
flds
test
jg
push
sub
push
and
mov
add
mov
mov
cmpsl
mov
sbb
pusha
sahf
pop
mov
jns
aaa
movsb
cmpsb
jno
sbb
fbld
int
cmp
pop
mov
xchg
fbstp
pop
sub
std
dec
ds
loopne
or
and
les
fnstsw
arpl
sub
leave
xchg
shll
dec
xchg
or
mov
adc
pop
sbb
movsl
sbb
outsl
push
mov
je
mov
mov
test
jns
imul
sti
sub
cwtl
sbbb
jg
mov
sub
jb
mov
inc
fidivs
xchg
adc
xchg
imul
ja
sub
fildl
cmpl
and
inc
test
movsl
aam
aaa
mov
bound
enter
out
enter
out
cmp
mov
inc
cmp
rorl
adc
pop
pop
jl
or
arpl
push
push
jge
mov
mov
popa
addr16
push
xorb
into
cli
sbb
gs
jnp
jno
ret
test
dec
mov
xor
loopne
ret
jno
cltd
xor
push
mov
sub
and
xchg
xor
xchg
fwait
in
cmc
mov
push
mov
call
aas
jge
push
test
out
and
adc
ret
jecxz
imul
hlt
jg
xchg
int
adc
and
scas
pop
cmp
roll
in
sbb
add
ret
pop
dec
fwait
mov
in
mov
test
out
hlt
pop
push
inc
pop
fisubrl
stos
pslld
or
cmp
jmp
sti
mov
mov
mov
add
rcrl
jg
fidivl
ret
test
pop
dec
cmp
xorl
inc
mov
mov
jle
sub
neg
fists
test
push
fidivs
aaa
popf
and
xchg
loope
idivb
ljmp
stos
pop
xor
jbe
mov
mov
pop
out
es
push
mov
leave
je
insl
jne
xor
sub
jmp
cli
subb
mov
bound
fnstenv
inc
xchg
loope
cli
cmp
pop
inc
fcoms
fstl
mov
imulb
pop
nop
je
jae
jne
push
in
mov
mov
sbb
arpl
mov
pop
sbb
push
dec
and
js
sub
adc
lea
add
insl
pop
xchg
sub
cmp
jae
ret
jge
aad
aaa
or
xchg
clc
and
jno
cs
xchg
leave
mov
cli
xorl
les
inc
ss
fisubrl
test
arpl
xor
push
imul
mov
adcb
test
inc
out
aaa
mov
sbb
jnp
cltd
push
inc
cs
popa
mov
sbb
pop
jb
cli
push
aad
fucomip
loopne
lods
out
mov
adc
pop
fs
loop
cmc
lods
pop
notb
lock
cmpsb
inc
mov
mov
pop
test
mov
xchg
sbb
lret
dec
gs
je
mov
dec
lret
rcr
scas
je
sbb
jmp
mov
mov
cltd
push
sbb
dec
nop
das
sub
mov
jge
and
mov
aam
push
out
and
push
lcall
pop
out
nop
pop
ret
std
aas
out
jnp
dec
and
cmp
xchg
xchg
cmp
jl
push
test
js
sub
insl
sub
ret
mov
rcrb
adc
repz
push
cmp
xor
es
sub
sub
shr
jo
cld
stos
es
imul
imul
mov
xor
mov
sub
cmp
mov
jns
sti
lds
adc
addr16
mov
ss
push
test
mov
icebp
sub
cmc
test
mov
xlat
clc
rcr
je
and
adc
push
xchg
in
push
mov
cmp
fistpl
out
icebp
pop
popf
dec
mov
and
loopne
inc
xchg
sti
aad
int
sahf
stos
outsl
pop
mov
fsub
mov
and
cmp
dec
clc
stos
and
sbb
mov
shr
or
mov
pop
sub
in
hlt
rcrb
sub
sbb
lds
je
cmc
xlat
mov
mov
rorl
push
ljmp
cld
into
fcomip
fidivrs
adc
jle
and
mov
cltd
adc
xchg
mov
scas
inc
inc
into
mov
dec
cmp
lahf
ret
sbb
jne
cwtl
sbb
adc
mov
xor
push
addr16
adc
in
fisubrs
sub
pop
add
and
ds
jmp
dec
mov
in
dec
aam
xor
clc
and
inc
testb
lock
mov
cmp
iret
mov
mov
out
fistpl
out
les
fdivp
mov
outsl
cmp
push
mov
ss
rcrb
and
cmp
mov
in
ficoml
pop
imul
scas
or
addl
xchg
cs
xlat
dec
or
ja
pusha
in
and
imul
cmp
push
in
cmp
xchg
cmpsl
inc
push
lret
das
jmp
adc
hlt
sub
ss
sub
in
xor
daa
mov
adc
jl
pop
movsb
add
iret
clc
sar
daa
mov
mov
lods
jp
in
imul
loopne
int3
gs
fsts
dec
xor
mov
outsb
adc
imul
dec
daa
ficomps
rcl
ss
ss
arpl
xorl
pop
sub
gs
inc
shl
pop
dec
in
mov
adc
cmp
mov
in
sarb
or
ret
jno
inc
and
fmull
loopne
cmp
adc
data16
inc
jb
sbb
push
xlat
ret
jns
sub
jae
fsubs
cld
xchg
push
jle
push
fst
call
or
xchg
pop
xchg
ret
out
sbb
lret
or
js
mov
push
mov
jmp
and
mov
insl
add
stos
out
mov
or
and
mov
sub
sbb
push
shrl
mov
adc
push
mov
data16
nop
fwait
cmpsb
mov
imul
icebp
mov
cmp
jo
dec
pop
int3
cmc
cmp
jo
test
or
mov
and
xlat
aad
jp
lret
insb
in
xchg
js
shl
scas
sub
xchg
and
repz
mov
or
push
jge
push
mov
aam
sbb
xchg
mov
cmp
add
push
jl
shl
in
jb
mov
insl
push
fbld
clc
lahf
xchg
sbb
push
xlat
and
hlt
addr16
xlat
jns
daa
punpckhbw
cmpsl
cltd
push
inc
dec
inc
xlat
lock
cmp
lods
stc
fisubrl
mov
and
sub
imul
aam
out
mov
popaw
cwtl
lds
jae
std
pop
inc
cmp
cmp
dec
jb
ret
inc
pop
jb
push
push
std
inc
rol
imul
loop
sti
movswl
pushf
push
roll
sbb
cmc
inc
jno
test
daa
test
push
push
repnz
enter
cmp
imul
fists
cmc
cwtl
outsl
aaa
mov
dec
mov
push
movsb
jb
movsl
inc
push
loop
mov
loopne
ljmp
fidivl
push
push
test
loope
push
adc
fists
xchg
xor
stos
adc
jns
sbb
insb
rorb
jp
in
mov
mov
shr
push
mov
inc
cmc
pop
ss
add
sub
jg
xchg
int3
xchg
in
nop
inc
inc
dec
add
pop
pusha
push
in
fcoml
stos
inc
and
pusha
xorl
sahf
and
pop
xchg
xor
dec
ret
mov
out
xchg
dec
sub
mov
mov
les
adc
ljmp
clc
out
and
ss
pop
lods
rcr
add
and
dec
stos
jg
mov
test
fmull
sbb
push
cmp
fsts
mov
xchg
repnz
sbb
imul
adc
cmp
mov
fisttpll
in
stc
inc
push
sti
scas
or
mov
out
and
push
adc
xor
cmc
out
mov
add
pusha
or
mov
sub
cli
fnstenv
and
fisttps
lahf
rcrb
pop
lahf
jb
mov
mov
and
incb
mov
ds
push
and
or
cmp
mov
in
lock
rcrb
or
sbb
mov
mov
jnp
dec
ljmp
stos
repnz
flds
fs
cltd
xchg
pop
cmp
scas
out
popa
or
cmp
imul
jl
xor
jmp
leave
sub
or
pop
sbb
or
ret
je
cmp
scas
inc
mov
adc
mov
pushf
and
loope
cmp
lret
mov
mov
adc
or
mov
sub
add
push
xor
test
adc
sbb
scas
aaa
pusha
push
bts
bound
outsb
push
sub
daa
popa
pop
add
jns
mov
dec
push
jge
sahf
adc
out
dec
orl
jno
sub
adc
les
pop
sub
loopne
bound
push
adc
mov
mov
cwtl
rcll
cltd
jne
data16
stos
movsl
icebp
jle
mov
jle
xchg
jo
cld
stos
aas
sbb
ss
fsubr
push
push
or
xchg
and
pop
jo
cld
cmpl
sti
dec
push
sub
dec
pop
inc
and
ljmp
add
scas
pop
mov
or
xchg
jmp
out
sbb
pushf
outsb
xchg
xchg
nop
push
in
jns
mov
mov
cli
out
cmp
jno,pt
adc
sub
jns
mov
inc
out
pop
out
repnz
ss
sub
jmp
or
outsl
xchg
ljmp
jl
shrl
test
lret
jecxz
in
hlt
add
loopne
loopne
add
rcrl
shl
nop
mov
rcl
jg
call
cmp
push
add
pop
lcall
xchg
pop
popf
aaa
jmp
icebp
push
mov
inc
xchg
add
push
xor
fimull
mov
je
cltd
and
adcb
pop
xorb
push
push
decl
daa
jl
jecxz
out
mov
sbb
xor
inc
sbb
adc
aad
in
mov
jg
or
mov
les
dec
cmp
movsl
mov
lods
out
lcall
mov
cmp
mov
out
inc
call
dec
ds
dec
adc
aad
mov
popa
push
jl
cmc
out
pop
hlt
in
lcall
repz
push
lea
pop
fbstp
cltd
call
fs
xor
sbb
sbb
out
cmp
cltd
or
call
sbb
vpand
aam
imul
mov
out
xor
fisttpll
cmc
and
dec
lret
sub
pop
or
test
sbb
repnz
jl
xor
or
or
lds
sub
xor
sub
push
cmpsb
outsl
inc
cmp
dec
pop
sbbb
jnp
dec
pop
and
cs
faddl
inc
inc
sub
adc
xchg
xchg
push
ljmp
daa
fadd
fmuls
dec
sbb
push
aas
mov
roll
xor
add
int
or
dec
notb
and
pop
dec
add
jl
addr16
pop
into
push
mov
mov
test
mov
pop
mov
loopne
lock
lods
int3
jp
add
mov
mov
pop
adc
mov
mov
pop
mov
add
aaa
pusha
mov
sub
sub
mov
daa
icebp
std
lcall
in
scas
shl
mov
ss
jae
jnp
inc
inc
inc
cmpsl
sub
mov
push
mov
add
mov
cmp
add
xchg
shlb
aas
inc
mov
daa
leave
daa
add
or
add
int
adc
ljmp
push
mov
mov
adc
aaa
pop
ret
mov
dec
jge
inc
pop
pop
sub
lret
out
or
ret
jb
lds
jp
push
mov
imul
sahf
mov
sbbl
mov
js
mov
out
fisttpl
mov
and
mov
add
push
jo
jmp
or
cmp
mov
mov
mull
adc
dec
ficoms
scas
mov
adc
leave
jge
jnp
dec
div
sarb
mov
stc
sub
and
adc
repnz
movsb
dec
rcll
movsb
cmp
mov
xor
int3
cli
call
test
mov
jne
dec
mov
shll
jbe
lea
orb
rcr
pop
mov
or
dec
mov
and
ja
lret
mov
mov
mov
push
lea
add
sahf
mov
mov
jl
out
outsl
push
sahf
test
pusha
mov
repnz
nop
addr16
jle
cmp
aaa
cmp
xchg
push
cmp
add
in
or
pushf
cs
dec
dec
mov
mov
jecxz
loop
out
fs
popf
ss
loope
ficoml
pop
add
dec
inc
cvtdq2ps
bound
imul
nop
fadds
pop
int3
rcrl
mov
inc
popa
into
xchg
or
fidivl
add
jl
sti
adc
jno
outsb
dec
mov
and
dec
in
jl
adc
inc
lcall
shrl
xchg
pop
mov
mov
lret
fcomps
nop
ret
rol
sub
popa
fmull
xchg
pusha
call
and
sahf
insl
cs
shlb
cli
push
outsb
or
xor
mov
xchg
push
imulb
js
test
dec
enter
aas
sub
push
sbb
dec
mov
dec
hlt
cmpsl
dec
in
das
repz
test
jnp
cmp
adc
outsl
sub
xor
mov
aaa
or
fbstp
aas
jnp
aam
mov
scas
scas
iret
adc
loope
or
dec
or
loope
ds
movsb
mov
mov
jb
or
aas
scas
mov
xlat
movsb
ret
andb
sbbb
outsb
mov
cmpsl
add
sub
or
imul
xlat
scas
lea
pop
shl
cmpsl
enter
dec
jb
test
sub
popf
jo
cmp
or
jg
std
mov
lret
and
cmp
add
adc
subl
insl
insb
mov
sbb
sbb
cltd
jp
sbb
outsl
ret
xlat
push
push
rclb
xchg
xchg
pop
mov
stos
sbb
mov
loope
sbb
cmp
ljmp
xchg
notb
or
xor
cmp
push
leave
inc
push
add
xchg
insl
aas
xor
imul
fld
xchg
jg
test
lds
fs
fldt
jbe
test
int
int3
pop
fdivrs
fnstcw
jmp
xor
jge
mov
mov
jb
frstor
not
aas
lcall
mov
xchg
mov
xor
adcl
icebp
icebp
pop
push
jmp
mov
lret
inc
adc
jecxz
das
xor
jb
outsb
mov
xor
stos
pop
je
shrl
or
leave
jecxz
xchg
pop
iret
push
inc
das
rcrb
inc
mov
sbb
aaa
loope
enter
mov
or
adc
shlb
push
jnp
stos
in
jno
lret
lcall
lea
xchg
push
cld
dec
icebp
inc
popa
push
lcall
dec
sbb
lea
cld
fnstsw
lods
je
mov
sub
repnz
enter
fistl
es
gs
les
add
add
mov
arpl
cmp
iret
std
add
stos
dec
aam
cmp
test
test
cmc
lret
repnz
out
imul
rcl
and
icebp
xchg
adc
loop
shll
mov
lea
insl
xchg
jmp
in
mov
shr
xchg
jmp
xchg
dec
inc
add
dec
mov
loop
jnp
mov
fstl
pop
inc
fsubrl
inc
icebp
sahf
mov
outsb
ret
xchg
cmpsb
mov
mov
or
dec
push
mov
mov
pop
mov
stos
adcl
jo
pop
push
push
lods
push
fs
jl
in
mov
pop
in
lea
lcall
push
imul
popa
fisttpl
daa
sbb
rclb
mov
test
jp
bound
in
cmp
mov
lods
or
nop
mov
fcoml
mov
outsl
or
mov
or
outsl
incl
inc
pop
push
and
xchg
or
cmp
cltd
out
outsl
push
iret
addr16
lahf
cmp
outsb
insb
push
aaa
xchg
mov
cmp
push
push
outsb
and
hlt
cwtl
or
pushf
lcall
aaa
cli
sbb
loop
fidivs
xchg
repz
jbe
lahf
xchg
ljmp
addr16
push
out
dec
cmp
mov
fsubl
add
into
adc
fnstenv
cmc
stos
or
mov
jno
je
stos
jae
dec
xchg
xchg
sub
xchg
imul
ss
sti
das
inc
mov
mov
jns
repz
xchg
outsl
mov
test
in
push
inc
lock
push
imul
xchg
mov
es
fldcw
xchg
subb
jmp
cmp
adc
mov
fadd
mov
lcall
sbb
mov
daa
jecxz
das
js
mov
cld
xchg
or
aaa
push
sahf
mov
adc
dec
adc
leave
out
movsb
push
out
jle
ljmp
mov
cmpsb
sub
cld
test
jge
adcb
jp
addr16
in
call
push
pop
sbb
out
xchg
mov
out
fistl
pop
inc
inc
mov
lret
inc
add
loope
sub
inc
xchg
xor
xor
cmpsl
push
push
fsubrs
aas
add
lock
test
xor
pop
jae
cmp
mov
jbe
in
sbb
fs
xorl
das
fadd
xchg
inc
jns
fistl
dec
es
cmp
movsl
mov
cmp
fdivrl
sahf
cmp
jnp
push
jmp
xchg
insl
mov
xor
adc
stos
sub
mov
sahf
cmp
jmp
int3
pop
adc
mov
push
or
dec
mov
movsb
pop
iret
frstor
sahf
lahf
sbb
mov
jg
or
add
std
push
add
lock
call
pop
mov
add
fstps
inc
push
inc
pop
push
mov
les
pop
cmpsb
mov
sahf
xor
cmp
push
mov
dec
cs
xchg
shll
mov
cmp
dec
pop
fwait
clc
inc
inc
or
mov
push
aad
ja
adc
pop
dec
mov
push
stc
dec
mov
pop
pusha
add
les
mov
inc
es
fwait
jecxz
mov
or
jb
push
xor
pusha
sbb
leave
dec
movsl
dec
cld
pop
ljmp
daa
add
cmp
inc
add
mov
dec
xor
pop
icebp
jnp
fisubs
xchg
test
dec
js
lods
xchg
pop
fiaddl
add
aaa
mov
xlat
cmp
adc
idiv
aam
sub
jg
dec
ficomps
aad
mov
sbb
fadds
mov
out
lods
mov
mul
sti
and
in
jge
jp
sub
rclb
mov
out
popf
jne
js
sub
pop
inc
clc
push
lcall
mov
jne
cld
ja
imul
push
mov
add
out
mov
push
push
or
fistps
and
adc
add
or
lahf
lret
add
mov
inc
das
pop
fmuls
mov
sbb
adcw
rcrl
pop
push
xor
pop
adc
xchg
gs
lea
data16
inc
mov
test
xchg
sub
push
push
das
cwtl
fst
sarb
pop
sub
or
jmp
push
mov
inc
idiv
lods
jns
jno
mov
fs
jb
or
div
push
dec
mov
xlat
xor
jnp
adc
inc
sub
jge
and
xchg
mov
add
xchg
mov
stos
cmpsl
movsl
test
roll
stos
add
fldt
jno
or
ds
pop
xchg
cwtl
mov
pop
mov
es
cltd
xor
jp
out
ljmp
leave
push
lret
repnz
lock
xchg
imul
push
lock
les
lea
cmc
or
ljmp
loope
cmpsl
mov
inc
jl
jbe
icebp
dec
sbb
xor
insb
les
jns
test
or
fst
cli
mull
cmp
xchg
aad
xlat
pop
mov
insl
push
shll
leave
sub
push
mov
and
out
mov
int
hlt
je
dec
mov
and
mov
cwtl
test
mov
mov
fbld
popl
notl
mov
jo
xchg
fisttpl
mov
dec
sbb
lock
dec
enter
sbb
xchg
mov
pusha
scas
insl
test
cltd
pop
imul
add
adc
pop
jg
push
or
push
inc
inc
stos
mov
pop
pop
or
hlt
icebp
rol
out
outsl
pop
fcomps
and
clc
sarb
movsl
pop
adc
jecxz
orb
xchg
and
jecxz
push
dec
and
repz
out
xor
mov
adc
lock
cs
sbb
scas
loope
adc
shrl
notl
push
and
test
dec
push
les
xor
mov
testl
icebp
jne
cmpl
push
cmc
jge
lds
and
push
xor
cmp
cmc
push
inc
pop
shll
aas
xlat
lcall
sub
sub
jbe
dec
mov
dec
sbb
add
lret
cli
inc
lds
test
dec
in
xor
loopne
outsl
sub
or
std
lods
out
adcb
andb
test
dec
mov
fisttpll
popf
dec
sbb
outsl
cwtl
incb
stos
rolb
jg
mov
mov
sbb
int3
mov
xchg
repnz
fisttpll
add
nop
cld
int
icebp
popf
xchg
sub
mov
fistps
mov
jmp
pop
or
fisubs
and
popf
ds
xor
xchg
mov
in
js
sahf
xchg
fimuls
mov
mov
push
cmc
or
sbb
dec
mov
cld
xchg
push
inc
adc
pop
xchg
mov
jno
mov
jnp
jge
xchg
cmp
hlt
pushf
loop
dec
cltd
xchg
push
out
and
imul
xchg
mov
push
jbe
into
lcall
add
scas
dec
lock
stos
push
push
sub
mov
xchg
cwtl
lods
fwait
pop
test
xchg
lea
nop
jns
gs
inc
mov
inc
push
test
aaa
or
test
sbb
fldt
mov
out
out
je
icebp
shl
sbb
aam
cld
dec
xor
and
xchg
std
sbb
stos
pop
push
xor
jb
inc
test
jns
insl
ss
out
insl
sub
mov
and
pop
push
jnp
push
jmp
xchg
in
test
push
int
jo
in
or
xor
jnp
mov
jmp
mov
call
cwtl
push
or
add
sbb
add
pop
push
out
xchg
inc
movnti
gs
and
aaa
lods
mov
jb
fistps
fiadds
push
insl
or
gs
dec
mov
pop
addl
sub
sbb
std
int3
outsb
sub
cmpsl
icebp
mov
mov
es
bound
jne
into
jbe
add
push
insl
push
push
xchg
pop
jo
out
mov
mov
push
fwait
adc
jb
inc
mov
sbb
gs
push
dec
xlat
shll
jnp
les
int3
popl
lahf
out
pop
or
sub
repz
cmp
ret
dec
int3
sbb
xor
shl
dec
scas
mov
andb
cmp
pop
hlt
cmc
mov
out
add
and
imul
jo
mov
or
dec
je
fistl
and
mov
decb
fwait
daa
xchg
shl
and
movsl
jge
lods
mov
mov
loope
cmp
stos
mov
cmpsl
imul
cmp
stc
test
aas
adc
enter
fdivr
adc
jne
pop
cmpsl
mov
mov
sti
outsl
inc
int
and
cmp
mov
sub
xor
addr16
jge
in
xor
test
out
int3
jae
mov
and
outsl
adc
or
lret
pusha
test
pop
mov
cwtl
insl
repnz
jne
loope
adc
out
fs
aas
xchg
mov
adc
xchg
sbb
loope
pop
int3
dec
mov
lds
pop
popa
fcomps
fstpl
and
add
cmp
daa
push
lods
jae
sti
inc
pop
jns
repnz
and
je
xor
xchg
xchg
or
ds
sbb
mov
daa
arpl
mov
fs
stos
cmpsb
adc
add
xor
push
test
dec
pop
fildll
mov
test
mov
sub
inc
dec
stc
aad
inc
sub
jb
xchg
sub
push
cltd
mov
lret
movsl
dec
lret
adc
pop
add
mov
sub
cmp
xchg
jecxz
sahf
jae
xchg
iret
sbb
sarl
or
pop
jo
adc
lds
and
inc
pushf
rclb
xchg
adc
int
repnz
mov
addl
loop
mov
dec
pop
scas
adc
lods
push
mov
xchg
das
cmp
fstpt
aas
dec
std
daa
stos
cwtl
inc
shl
ss
dec
mov
in
cmpsl
rolb
mov
insl
movsl
or
mov
syscall
out
jle
pop
and
mov
test
adc
imul
clc
fildl
mov
push
xor
sahf
es
dec
inc
adc
xlat
leave
jle
sarl
fwait
cltd
and
adc
into
or
stos
jo
sbb
sbbb
popa
cwtl
xchg
or
imul
push
daa
add
nopl
add
push
rorl
xchg
ja
pavgb
lea
dec
jnp
int
dec
push
mov
push
in
ja
sbb
and
pop
dec
mulb
fisubs
les
paddusb
in
daa
aaa
xor
fdivrs
and
pop
lret
gs
sub
xor
daa
dec
daa
popf
mov
mov
push
lds
lock
outsl
sub
shll
adc
pop
xchg
xor
sbb
cltd
in
inc
lea
or
dec
xor
dec
into
cmp
xor
int
cmc
xor
push
mov
fwait
lret
xchg
fstl
pushf
out
aas
and
jo
inc
pop
jge
adc
fsts
or
imul
xchg
sub
gs
pop
mov
or
jle
aad
fs
inc
js
pop
pop
lret
es
jno
enter
push
or
push
int3
pop
push
adc
jno
arpl
cmp
popl
sbb
sti
inc
imul
sub
adc
stos
add
adc
jl
xor
movsb
imul
mov
mov
pop
aas
push
pop
repz
jae
push
xor
fucomp
jmp
js
mov
fnstenv
repz
push
sbb
jle
xchg
sbb
jnp
cmp
je
pop
inc
scas
push
push
ja
loope
mov
push
mov
jecxz
and
mov
aaa
je
inc
das
xchg
pop
daa
adc
inc
movsl
inc
and
cmpsb
addr16
or
mov
leave
dec
cmp
mov
ret
scas
push
shr
pop
test
fisubrs
dec
mov
mov
sub
adc
sbb
push
jp
rcr
mov
lods
test
pusha
out
jmp
in
xlat
xor
or
mov
outsb
add
sub
mov
mov
xchg
xchg
cmpsl
inc
push
lods
add
gs
jle
pushf
xchg
fimull
mov
lods
cmp
mov
push
pusha
sub
gs
sub
dec
adc
mov
aam
fdivs
dec
mov
inc
daa
jno
data16
dec
sbb
pop
mov
mov
and
movsb
or
push
xchg
imul
in
imul
mov
lock
mov
and
arpl
xchg
fisubl
push
push
pop
add
shrb
mov
mov
inc
xchg
mov
rolb
jg
cli
out
out
push
test
es
das
aam
nop
bound
stos
incl
and
inc
push
jae
mov
stos
pop
cltd
xor
ja
xor
scas
jmp
pop
rclb
ja
in
testl
mov
push
loopne
cmp
insb
pushf
adc
mov
mov
movl
jle
adc
ret
xchg
fsubs
lret
cmp
dec
ret
test
clc
fisttpl
xor
cwtl
cmp
fwait
xor
out
daa
jb
lcall
stos
cmp
cmpsl
cmc
jge
out
jle
xor
out
xorb
out
or
mov
cltd
adc
jmp
and
pusha
adc
pop
add
jmp
addb
jo
rcrb
hlt
bound
ds
jge
pop
gs
jno
or
aas
sbb
outsl
mov
mov
push
les
int3
cltd
mov
and
shrl
mov
jecxz
addb
add
inc
and
outsl
mov
add
add
xor
imul
arpl
dec
cmp
push
sbb
dec
mov
loopne
rcr
popa
adc
cmp
inc
lods
mov
dec
mov
mov
cmp
jae
fsubrp
mov
subb
int
dec
pop
rcrb
into
xchg
out
adc
outsb
loopne
xchg
pushf
stos
sarl
push
pop
test
push
int
outsl
fsubl
push
pop
out
cli
popw
aam
aam
aad
stos
cld
in
jnp
call
aad
rcll
inc
inc
add
push
add
sub
mov
dec
nop
loope
adcb
push
and
aaa
inc
cmpsl
add
hlt
xchg
lock
ret
fldenv
jno
xor
pop
pusha
fmuls
int3
lcall
xorl
ret
clc
pop
js
sbb
jmp
mov
adcb
mov
lds
or
sbb
or
stos
add
cmpsl
push
out
jne
cmp
outsl
xor
sbb
movsl
pop
cmpsb
insb
lret
xor
xchg
cmpsb
dec
test
test
test
mov
insl
shll
sbb
pop
arpl
jns
insl
jmp
fsubrl
jo
add
inc
fcmovnbe
fimuls
divb
jmp
sub
lds
cli
adc
sub
popa
inc
dec
jecxz
cmp
push
sub
sbb
mov
inc
cld
xchg
fwait
xlat
add
test
in
and
sub
push
and
dec
inc
fdivrp
dec
xor
mov
imul
dec
arpl
mov
xor
out
inc
loop
sbb
jp
fdivr
jp
lret
push
push
dec
jae
pop
xchg
lock
in
lret
mov
and
into
mov
inc
daa
jp
testb
xchg
sub
xor
addb
or
push
stos
mov
mov
cs
dec
scas
fstps
mov
pop
or
mov
out
jge
aam
mov
out
jle
std
nop
in
jbe
xor
inc
fldt
jl
mov
popa
out
sub
push
add
jl
pop
pop
push
adc
inc
hlt
mov
adc
ljmp
dec
out
sysret
jne
js
mov
popf
push
jge
inc
push
data16
sbb
mov
push
cmpsl
outsl
xchg
jbe
mov
dec
mov
scas
xor
loopne
test
ret
push
xor
inc
jg
cltd
jne
mov
aas
xchg
movsl
fs
push
mov
ja
lods
cmp
push
es
sbb
and
pop
sbb
enter
pusha
push
loop
imull
ds
adc
cwtl
lods
mulb
sub
jo
aad
ja
divb
bound
lods
icebp
sbb
fcomps
mov
rolb
xchg
and
mov
pop
fisttpl
call
cli
cmp
mov
nop
or
mov
out
movsb
jmp
stc
std
sub
enter
dec
cmpsl
adc
jmp
iret
cmp
loope
push
scas
gs
xchg
sub
cmp
push
lock
add
out
mov
ja
xchg
loop
fcomp
cld
loope
push
notb
mov
xchg
adc
pop
mov
and
mov
and
add
movsb
add
push
iret
inc
inc
jb
inc
inc
lods
out
pop
inc
and
ret
jbe
xlat
int
sbb
pop
insl
scas
inc
jnp
xor
xor
cli
loop
xor
jbe
push
jno
jae
mov
mov
movsb
lret
xor
clc
mov
xlat
push
idivb
lods
dec
stos
mov
adc
fld
cmpsb
cmp
fisttpll
mov
cmpsb
icebp
roll
and
dec
add
inc
iret
jne
fwait
sbb
addr16
test
push
flds
les
call
adc
sarb
in
cmpsb
xchg
cmp
testl
mov
jns
mov
movsl
int
psrlw
sub
mov
push
loop
repnz
lods
in
fnstenv
data16
mov
xchg
test
dec
mov
mov
fstpt
sub
xchg
popw
pop
cmp
mov
inc
jle
test
out
call
and
imul
lods
movsl
movd
lret
iret
testl
dec
xchg
mov
lds
jecxz
push
pushf
cmp
push
sbb
inc
cld
outsb
pop
loope
mov
mov
mov
push
push
movl
jmp
cmp
sub
insb
enter
int3
movsl
dec
dec
mov
divl
stos
outsb
in
clc
sub
inc
leave
xchg
xor
mov
push
xchg
inc
bound
insb
push
ss
xchg
mov
sub
jnp
mov
sub
and
repnz
js
xor
mov
inc
fisubrs
add
popa
aaa
mov
adc
jns
int3
flds
stc
push
addr16
xor
push
adc
mov
popf
adc
push
out
mov
out
pop
shrb
cwtl
cmp
ficomps
push
xchg
sub
pusha
xor
leave
jg
lea
pop
xor
faddp
rorl
sbb
mov
sub
lock
popf
out
es
mov
pop
xchg
or
repz
cltd
cmpsb
xor
push
push
xorl
addr16
enter
jmp
rep
jl
outsl
add
pop
int
mov
mov
lods
sbb
pop
adc
mov
xor
dec
roll
jae
xchg
je
push
mov
mov
sub
sub
in
jmp
js
test
dec
enter
call
xor
and
add
jg
nop
addr16
std
addl
jge
shrb
mov
inc
mov
cmp
jno
pop
mov
popf
pop
jecxz
adc
sub
mov
and
inc
sarl
mov
xchg
inc
cmpsl
subb
sbb
add
mov
or
cs
movsl
push
push
push
in
aad
je
in
lret
test
pop
adc
dec
rolb
mov
sbb
mov
sahf
jnp
push
xor
ss
add
ret
mov
mov
cld
ja
les
cwtl
sub
mov
lahf
inc
sbb
sub
xor
or
scas
cmpsb
jns
insb
push
in
mov
aas
xchg
arpl
xor
mov
pop
or
fildll
ljmp
ret
cld
insl
dec
lods
insb
in
scas
shlb
cmp
push
pop
rcrl
mov
mov
pop
cmpsl
das
cwtl
lods
in
mov
dec
mov
pusha
xchg
xchg
icebp
pop
lea
pop
fcmovnu
outsl
shlb
pop
out
nop
jecxz
jnp
ss
leave
lods
cli
out
push
or
pop
jmp
mov
insl
lds
jnp
enter
scas
sahf
push
paddw
dec
xchg
clc
data16
or
lea
pop
mov
mov
iret
xchg
popa
push
sub
push
test
in
pop
mov
test
loop
mov
xlat
xor
sub
push
adc
mov
cmp
out
into
mov
pop
ret
outsb
inc
inc
xchg
out
cmp
std
xor
jp
sub
inc
pop
jmp
pop
sub
int3
leave
push
pop
mov
push
mov
xchg
adc
mov
cld
sbb
out
add
push
sbb
icebp
or
cmp
lret
cmc
call
lods
dec
pop
nop
sti
rcll
cmp
jo
jmp
or
fdivrl
rcll
mov
xlat
loopne
cmc
push
xchg
mov
inc
fldenv
cmp
les
pop
jns
imulb
rorl
pop
add
pop
cmpsb
mov
ss
cmpsl
jnp
es
sbb
lea
cmc
jl
lahf
into
sub
add
mov
pop
mov
pop
sub
add
in
mov
xchg
lret
jae
fwait
or
jmp
popa
adc
ror
xchg
push
mov
fdivl
jnp
inc
outsb
sub
mov
mov
mov
lds
lahf
add
inc
lahf
xlat
mov
xor
mov
adcl
pop
xlat
push
hlt
cmp
lcall
lock
lret
imul
addb
pusha
aam
and
mov
jecxz
dec
and
push
out
mov
ds
scas
je
jno
push
mov
adc
dec
orb
mov
mov
inc
shll
std
pop
shll
out
dec
sbb
cmp
test
movsl
jmp
adc
in
cmp
push
pop
cmp
cwtl
movsl
in
or
push
mov
insb
pop
outsl
adc
lea
sub
xor
mov
out
aad
loop
mov
insl
in
aam
dec
xor
roll
outsl
pandn
loop
sub
mov
and
pop
xlat
add
pop
les
jo
inc
mov
shl
cmp
movsb
or
push
insl
pop
and
stos
mov
je
fs
push
cltd
xchg
das
outsl
pop
inc
and
in
lcall
push
stos
push
pusha
jo
dec
pusha
add
sub
loopne
inc
mov
push
and
mov
aaa
adc
mov
ja
pop
push
add
pop
pop
push
cmp
jg
mov
shll
push
sub
jmp
jbe
inc
cs
repz
jl
mov
pop
add
es
jmp
cmp
call
and
mov
fistps
sub
rcrb
rol
addr16
xor
shrb
in
jno
lcall
pop
cwtl
xchg
push
sub
sbb
jecxz
subb
pop
xchg
and
sub
xor
cmp
or
jg
mov
inc
mov
mov
sbb
pop
or
pop
cmp
sbb
gs
push
sbb
pop
xor
xchg
aas
ja
imul
push
popa
sbb
xchg
test
pop
fsin
and
xchg
xchg
xor
orb
lret
pop
fisubl
inc
mov
into
mov
pop
scas
dec
dec
mov
in
cmc
andl
xchg
and
shll
cld
outsl
out
icebp
mov
and
dec
ss
in
sti
and
xchg
andb
out
add
popa
sahf
fstl
jmp
sub
cmp
addr16
out
pop
loopne
stos
subb
add
fsubrl
stos
jecxz
jo
mov
jp
mov
nop
xor
mov
frstor
dec
xchg
mov
xchg
mov
pop
and
mov
out
xor
xchg
jnp
mov
test
xchg
js
ret
add
jne
test
mov
rclb
aad
jns
js
fucomp
ja
sbb
in
imul
or
mov
popf
test
mov
fadd
rol
addb
add
pop
adc
daa
mov
push
cld
cmpsl
or
or
js
out
pusha
mov
inc
fsubs
xchg
pop
out
inc
add
push
fldl
insb
sub
sub
add
inc
mov
push
cltd
lcall
shll
rcl
add
pop
pop
int
repz
mov
push
bound
xor
lock
arpl
push
into
movsb
dec
stos
aas
mov
dec
mov
je
paddusw
stos
pop
pop
add
cmp
lock
inc
pop
arpl
add
stos
mov
or
stc
ss
pop
mov
pop
leave
xlat
jne
call
mov
adc
and
or
push
lcall
pop
bound
adc
jmp
mov
sarl
and
inc
adc
jno
jae
pop
movsl
add
pop
lahf
mov
call
adc
fisubs
mov
aam
shrl
sbb
mov
out
sbb
ljmp
fs
add
das
lods
push
inc
adc
cs
stos
ja
shl
pop
lea
out
movsl
dec
rcl
sbb
mov
nop
shll
jge
add
andb
sbbl
test
cltd
jecxz
dec
mov
mov
sar
cmp
rol
negb
loopne
test
cmp
xor
mov
or
ret
cs
mov
add
leave
xchg
mov
xchg
inc
inc
stos
pop
dec
ret
jne
and
mov
sub
xor
scas
in
mov
cmpsl
addr16
xor
int
mov
divb
es
and
jo
test
rorb
aad
movb
mov
bound
pop
xchg
sub
xor
xchg
in
jb
xchg
fidivs
push
mov
jb
pop
into
outsb
mov
scas
lahf
push
icebp
cmp
orl
push
inc
xor
adcb
lock
inc
andl
lahf
mov
sbb
pop
rorb
sbb
mov
sub
out
push
jl
test
or
aad
cmp
out
pop
out
or
cld
add
add
in
xchg
cmp
mov
fisubs
and
jle
xor
fcmovb
insl
dec
adc
fs
daa
fstl
loope
popa
push
sbb
mov
out
sub
call
push
lods
in
sahf
ljmp
xchg
outsb
outsl
int3
out
pop
stc
and
stos
xchg
dec
scas
adc
add
and
xchg
jl
ret
out
je
pop
mov
js
xchg
mov
lahf
mov
fwait
xor
cwtl
addr16
cwtl
bnd
cs
jne
inc
adc
mov
test
mov
sbb
pop
and
enter
icebp
jl
mov
adc
cs
mov
pop
mov
jo
pop
and
addr16
ja
xchg
jno
movsl
push
and
sti
sub
mov
cltd
pop
adc
shlb
xchg
fsub
jno
movb
xor
xchg
dec
xchg
mov
repnz
jae
and
les
bound
dec
lock
icebp
idivl
movsl
mov
inc
adc
add
xchg
loop
test
xor
lret
cld
xchg
and
mov
pop
inc
mov
or
imul
mov
sub
icebp
xor
lret
mov
orl
in
filds
jnp
leave
inc
xchg
test
sub
push
lea
into
sub
leave
or
out
and
sub
pushl
shlb
xchg
jp
cmpsl
psubsb
inc
mov
xchg
scas
sub
sbb
add
mov
outsb
clc
rorl
insb
sub
repnz
mov
push
sbb
inc
les
jecxz
adc
jmp
dec
outsl
pop
cmp
jle
pop
mov
xchg
repz
cmpsl
stos
lds
xlat
cli
andl
jl
sub
push
mov
sbb
or
or
xchg
je
cmp
int3
ret
sbb
dec
xchg
sarl
mov
sahf
cmp
bound
mov
int3
pop
iret
pushf
xor
push
add
pop
xchg
push
cmp
mov
push
fcmove
cmp
sbb
int3
xor
xchg
lahf
mov
jl
and
std
fdivrl
push
pop
push
cld
fiadds
xor
int
mov
mov
in
mov
push
jp
mov
jle
mov
popl
imul
out
ds
sub
movsb
pop
jmp
dec
out
cmp
or
cld
popf
xchg
cmp
push
out
mov
dec
clc
adc
andb
shl
mov
lret
shrl
cwtl
cli
js
xchg
sbb
daa
jae
lcall
negl
enter
inc
mov
sbb
cmpsb
ds
jge
loop
and
mov
add
stos
push
jo
dec
arpl
xor
dec
pop
rol
push
ja
dec
out
cvtdq2ps
daa
les
mov
sbb
cs
clc
pop
addl
popf
aad
jbe
sbb
lods
pusha
xchg
mov
int
pavgb
dec
orl
xchg
jg
test
mov
cli
dec
test
mov
or
test
sbb
fistps
mov
in
sbb
mov
fcomps
stos
and
xchg
call
mov
push
gs
add
loop
hlt
add
sbb
loope
mov
and
test
mov
mov
push
gs
pusha
sub
dec
dec
jnp
lret
fwait
xorb
out
lcall
arpl
lds
sarl
xor
xchg
mov
pop
bound
mov
xchg
and
xchg
stos
aad
pop
sbb
push
rolb
push
push
ljmp
fistpll
jbe
push
mov
xor
fwait
mov
mov
pop
jge
incl
out
xor
arpl
sbb
push
push
testb
sub
push
and
inc
mov
imul
inc
outsb
push
mov
sbb
ret
idivb
mov
gs
push
fnstcw
nop
dec
jl
mov
mov
adc
cli
scas
sti
movsl
shrb
loope
scas
sub
pop
cld
push
or
dec
add
cmpxchg
rol
flds
fisttpl
dec
arpl
pop
push
fcmove
cwtl
fildl
je
orb
ja
sbb
cmp
jns
cmp
adcl
into
xchg
mov
xorb
inc
push
data16
clc
pop
call
cltd
jmp
outsl
mov
sbb
cmp
pop
std
insl
or
sarl
pop
add
mov
mov
cmp
arpl
das
cli
adc
int
call
mov
cmpsl
xchg
mov
mov
loope
test
sub
and
sti
rcrl
notl
in
adc
stos
sub
adc
pop
arpl
xor
adc
lret
inc
ljmp
cmp
adc
cmp
pop
rsqrtps
sbb
dec
pop
cmpsl
fistps
and
dec
iret
add
add
and
xor
lret
outsl
sub
stos
jge
daa
scas
arpl
mov
jl
xchg
mov
fwait
into
xor
adc
in
mov
movsb
adc
out
lcallw
shll
fsts
test
cli
mov
rclb
stos
inc
mov
dec
mov
repz
or
lock
jg
imul
outsb
cmp
add
xor
fwait
xchg
mov
xchg
pop
sbb
sub
xchg
leave
repnz
push
movsb
or
cmp
scas
pop
adc
cwtl
cli
adc
testb
pop
pop
xchg
sbb
pop
mov
ljmp
add
aas
mov
loop
sbb
imul
std
mov
jp
gs
cltd
xor
mov
mov
dec
call
aam
lret
call
inc
rcl
sbb
je
dec
xchg
mov
fistl
dec
xchg
adc
jl
je
rorl
fcmovbe
sahf
fldenv
dec
jge
mov
cmp
pop
and
idivl
std
test
sub
lods
pop
pop
xchg
je
xor
push
hlt
inc
mov
mov
add
pop
inc
or
push
lods
dec
dec
scas
lret
cltd
dec
rolb
cli
push
jo
scas
in
aaa
popf
aas
xchg
pop
mov
mov
push
pop
push
xor
loopne
jmp
push
repnz
cs
push
ljmp
xchg
jo
and
dec
mov
ret
out
ljmp
into
test
inc
movsb
or
add
aas
pop
fstpl
outsb
jno
pushf
and
jb
sub
stos
std
inc
stc
ror
lock
adc
push
pushf
add
or
push
outsl
xchg
nop
daa
scas
hlt
xchg
mov
int3
mov
add
cmovg
and
xchg
aad
call
fwait
sub
pmulhuw
flds
fidivrl
mov
or
jo
popa
int
aad
push
fwait
xor
and
idivb
stos
adc
loope
test
and
sbb
loopne
sbb
arpl
sub
push
aaa
int
xchg
int3
cmp
leave
push
sbb
push
inc
cmpsb
insb
mov
xor
clc
out
xchg
loop
clc
mov
xlat
or
or
add
lods
sub
in
das
ss
stos
sarl
jle
lcall
sub
mov
xchg
andl
mov
adc
mov
adc
adc
fs
fldcw
xchg
in
push
cmp
jno
pop
mov
inc
pop
mov
xchg
test
mov
pushf
pop
mov
dec
scas
xchg
pop
pop
cmp
sub
cmp
xchg
xchg
pop
adc
cwtl
test
daa
mov
cmp
pop
push
filds
inc
cltd
ljmp
mov
cmp
out
ja
iret
repnz
push
xchg
xchg
popa
push
xchg
and
das
jno
mov
push
adcl
fldl
daa
pop
mov
lds
dec
mov
xchg
stos
ret
and
or
inc
hlt
stc
jp
cmp
mov
negb
and
add
leave
mov
xchg
gs
mov
jge
loope
into
push
and
mov
pop
xchg
fprem1
fnstcw
nop
jae
lahf
adc
jl
loope
push
orb
je
mov
cmp
inc
popl
adc
repnz
xor
push
xchg
add
loope
push
lcall
xchg
addr16
adc
mov
mov
mov
out
lods
dec
cltd
ss
inc
adc
lods
sub
ljmp
movsb
inc
loop
pop
sub
dec
cltd
mov
hlt
mov
cmp
movsl
mov
xchg
jno
cmp
sti
xchg
lret
aad
push
push
in
pop
nop
cli
mov
je
ror
insl
pop
mov
in
xchg
lret
decl
push
scas
repnz
cld
jmp
mov
jp
inc
int3
ficoms
daa
fwait
repnz
jg
jge
daa
clc
push
xor
cli
sbbb
inc
fld
sub
dec
pop
inc
mov
in
imul
inc
leave
mov
fisttps
push
or
mov
xchg
cmc
ja
add
cmpsb
mull
sbb
xor
bound
andb
in
scas
movsl
rcr
mov
xor
xor
mov
xchg
cmp
ljmp
movsb
loop
test
das
in
dec
jne
inc
insb
in
dec
jo
cmpsb
add
jb
sbb
arpl
mov
aaa
daa
add
jne
gs
cld
bnd
shlb
inc
test
pop
mov
andb
add
lahf
or
sbb
sete
mov
adc
loop
ds
or
sub
push
mov
aad
fmuls
idivl
je
pop
loopne
or
outsl
xchg
push
sti
push
or
sbb
loope
ret
mov
adc
pop
fcoml
lret
lds
mov
mov
out
mov
xorb
mov
xor
ss
movsl
test
outsb
nop
and
sbb
mov
mov
jbe
movsb
or
loope
int
les
xchg
push
leave
sahf
mov
xchg
mov
sbbb
data16
in
pop
repnz
in
push
sub
repz
cmpsl
jb
sbb
imul
shl
inc
shufps
insl
mov
jmp
mov
inc
adc
xor
insl
add
shlb
orl
es
sbb
in
jecxz
inc
or
in
imul
inc
cltd
and
sub
scas
inc
je
sahf
test
lods
insl
bound
les
jnp
divl
xchg
push
pop
mov
or
loope
sbb
into
inc
mov
pop
enter
fdivl
add
xchg
leave
dec
imul
clc
dec
adc
inc
aam
sub
lret
and
dec
or
arpl
inc
popf
sbb
ror
sub
lahf
mov
ljmp
ss
fisttpll
cmpsl
cld
xchg
jbe
loopne
mov
xchg
mov
or
jbe
pop
lock
ljmp
add
xor
push
xchg
shlb
jge
clc
ret
fdiv
movsb
and
cld
in
out
loope
sbb
scas
or
push
dec
in
xchg
out
test
sub
pop
jl
add
popa
mov
cmp
adc
adcb
mov
push
pop
pop
xor
jo
adc
xchg
lds
pop
mov
jl
mov
push
or
outsl
push
pusha
jp
xchg
and
js
hlt
fistl
nop
scas
in
outsl
push
fwait
ja
enter
es
imulb
sub
jle
stos
add
pop
aaa
in
xchg
xchg
jl
sahf
cld
rcrb
mov
jo
ret
push
sbbb
add
cli
aam
or
adc
inc
sub
inc
loope
rcrb
sbb
adc
pushf
xor
cltd
inc
cmp
sbb
xchg
push
into
test
push
jbe
int3
add
xchg
push
orb
cmp
push
lret
inc
stos
repnz
xor
xor
dec
pop
int
ljmp
sti
fsubr
mov
mov
or
push
sti
push
mov
jmp
mov
scas
cmpsl
ret
scas
rol
inc
pop
divl
cmp
jge
bound
jb
inc
pop
and
xchg
or
cmc
pop
cld
pop
jg
lret
out
pop
imul
incb
scas
jbe
mov
xchg
imul
lock
xlat
mov
xchg
jae
jg
and
fs
adc
cmp
mov
jns
es
inc
xor
or
mov
cmp
jp
sub
scas
hlt
in
stos
inc
cmp
mov
xchg
push
mov
pop
mov
or
mov
push
mov
add
cmp
aaa
xchg
leave
add
and
repnz
dec
cmp
xor
push
inc
sbb
mov
push
lcall
adcb
shlb
add
jo
mov
in
outsl
cld
stos
mov
jnp
adc
inc
push
es
shlb
dec
dec
pop
fstp
add
lods
pop
cmpsl
outsl
arpl
in
mov
xor
or
shll
mov
lea
fldenv
outsl
ss
mulb
mov
jb
xchg
aas
jecxz
les
dec
lea
mov
lds
lcall
and
and
nop
in
movsl
xor
xchg
les
in
xchg
sar
leave
pop
cmp
adc
xchg
cwtl
cs
cmp
fstpt
iret
adc
in
mov
xor
stc
sub
jle
xchg
insb
pop
xchg
std
cltd
cmp
insb
lahf
fldl
jle
mov
mov
les
dec
dec
and
dec
or
sub
iret
add
mov
push
push
mov
add
push
rep
test
sahf
out
pop
mov
add
outsl
mov
mov
lahf
xor
and
cmp
inc
in
push
ss
shrl
inc
lret
jae
mov
out
jns
sub
xchg
push
in
icebp
ja
std
add
pop
fcmovnbe
sbb
xor
pop
mov
xchg
int
fdivp
test
sbb
or
adc
xchg
je
cmp
pop
inc
add
jp
ret
mov
mov
mov
stc
cmpsl
sub
mov
test
mov
mov
pop
mov
jae
iret
insl
lahf
inc
add
mov
repnz
adc
call
stos
sub
push
jp
nop
and
mov
ficoml
ret
sub
pop
or
mov
jnp
jo
mov
ret
add
dec
xor
mov
add
lock
lret
pop
jo
mov
lea
sbb
push
out
fwait
or
xchg
mov
and
ret
test
movsb
test
lret
decl
out
lds
test
push
push
icebp
or
push
imul
mov
scas
jo
daa
in
xchg
lret
lock
sbb
cmp
or
push
imul
mov
pop
icebp
fisubrl
mov
jns
jae
pushf
mov
mov
cmc
fwait
xor
mov
jp
insl
shlb
rorb
sbb
mov
leave
sub
dec
adc
lods
jnp
mov
jns
fmuls
repnz
pop
and
jo
test
clc
iret
mov
mov
mov
inc
pop
pop
or
mov
xor
fnstcw
mov
movsl
sub
jne
test
xchg
in
addr16
in
out
xchg
mov
out
and
dec
pop
aas
pop
jbe
inc
outsl
mov
dec
push
fsts
or
mov
sbb
sbb
pop
and
cmpsb
jnp
and
jne
into
orb
scas
inc
cmp
pop
pop
out
jl
data16
in
das
mov
lcall
add
jnp
loope
ret
into
jp
pop
sbb
aaa
jne
pop
and
aam
int
mov
out
cmp
or
mov
adc
xchg
cmp
push
dec
pushf
and
mov
push
xlat
mov
sbb
daa
pop
stc
out
push
inc
mov
in
imul
pop
dec
push
jo
aaa
arpl
dec
add
popf
shrb
xchg
mul
pop
jns
cltd
push
add
xchg
cmp
push
pop
sub
enter
xchg
mov
push
test
pop
enter
cmp
test
dec
in
dec
push
sbb
out
inc
into
sub
std
fcompl
xor
arpl
hlt
in
ljmp
cmpsl
cwtl
inc
mov
push
ljmp
mov
add
mov
and
lods
insl
bound
cli
push
sub
fxch
cld
add
es
ljmp
mov
and
and
aad
std
adc
out
orl
ljmp
pop
fadd
dec
inc
or
shlb
mov
xlat
sub
dec
xchg
inc
xor
out
mov
mov
mov
test
cmp
int
sub
in
das
test
sub
sbb
roll
ffree
fisubs
addr16
pop
or
mov
xlat
inc
cltd
addr16
and
pop
test
cmpsb
js
pop
fildll
inc
push
cmpsl
in
push
push
mov
pop
xchg
shlb
adc
js
jge
lret
fdivp
cmp
jl
imul
xchg
cld
in
gs
jns
xchg
xchg
pusha
inc
xchg
mov
leave
lock
push
jmp
mov
in
push
insb
ror
mov
pushf
mov
mov
adc
daa
adc
movsl
scas
mov
out
sbb
aaa
cmp
repz
or
sub
pop
sub
mov
xchg
mov
and
fwait
cmpb
push
pop
movb
dec
insb
pop
daa
mov
aaa
push
and
test
cmp
mov
out
xor
bound
dec
and
scas
inc
out
das
cmp
fsubrp
jo
mov
sub
xchg
ss
enter
or
daa
imul
call
je
push
xor
repnz
loop
out
subb
cmp
js
cmp
adc
out
or
into
test
or
dec
add
jno
cmp
mov
out
mov
pop
test
test
mov
sbb
mov
mov
pop
daa
cwtl
cmp
lds
call
stos
jle
or
ljmp
shrl
jle
or
or
mov
sub
es
mov
xchg
push
shl
jp
mov
sti
lods
inc
lock
lret
shrb
aas
inc
inc
mov
je
adc
ficomps
sbb
sti
mov
fcmove
fimull
mov
stos
lds
mov
mov
sbb
leave
out
add
sub
lcall
repz
add
or
int3
pop
mov
aas
jl
idivb
pop
loop
jp
mov
mov
ret
nop
adc
lds
nop
bound
dec
sbb
lret
lret
xchg
les
xorb
cmp
push
cmpsl
cltd
addr16
xchg
test
f2xm1
push
mov
jae
aam
cmp
and
pop
test
push
dec
push
flds
inc
sbb
mov
push
imul
in
ds
test
xchg
mov
jge
idivl
jae
maskmovq
testl
repz
es
test
mov
cmp
lahf
loopne
mov
inc
push
inc
sbb
sahf
or
mov
dec
enter
loopne
mov
fnstsw
clc
cwtl
jno
ret
sbb
dec
aas
daa
xor
xchg
pop
xchg
pop
sti
xchg
pop
add
fdivl
mov
std
push
inc
or
inc
xor
adc
dec
inc
jbe
ja
jge
sub
push
mov
cli
inc
call
dec
out
adc
fdivs
rolb
xchg
scas
inc
divw
push
movb
jns
out
arpl
add
push
arpl
inc
mov
sub
adc
push
mov
stos
sbb
shrb
and
imul
mov
pusha
dec
cmc
adc
popf
cmc
jne
es
insb
hlt
ljmp
pop
ds
mov
rcrl
test
push
cmc
mov
mov
adc
fsts
xchg
xor
sbb
clc
mov
mov
cli
fdivp
cmc
cmpsb
out
xchg
push
mov
dec
loopne
sub
xor
push
xchg
stc
js
xlat
out
bound
push
mov
fimull
or
and
cmp
das
jno
sbb
addr16
fnstsw
sbbl
pop
ja
out
jl
ss
and
adcl
ja
mov
adc
cltd
pusha
sbb
push
xchg
mov
inc
loop
int
stc
jmp
inc
test
mov
inc
imull
jno
imul
jo
jle
sarl
scas
cmp
fnstsw
mov
movsl
push
jge
stos
push
add
dec
test
push
xor
popf
nop
lret
pop
roll
adc
iret
dec
xrelease
ret
lods
test
pop
pushf
stos
popl
inc
sub
pop
sub
insb
dec
mov
out
and
and
ds
in
lcall
xchg
jp
or
test
ds
xchg
xor
xchg
mov
mov
xchg
mov
mov
xor
sahf
aas
shlb
xchg
mov
pop
mov
in
lret
aas
pushf
dec
add
mov
xlat
cltd
mov
xchg
test
lcall
sub
iret
call
mov
or
aas
sub
push
xor
pop
es
jno
inc
pop
xchg
in
sbb
dec
inc
dec
leave
xchg
mov
out
andl
sbb
cmpl
pop
loope
lcall
loopne
and
test
fistpll
stos
mov
mov
lods
mov
xor
sub
push
mov
sub
int
push
cld
sub
mov
jecxz
cmp
pop
ficompl
insl
xchg
ss
cwtl
in
orb
xor
cli
aam
adc
fsub
lds
loopne
rcl
in
fs
dec
xorl
popf
jle
and
leave
add
aas
jb
mov
scas
adc
xorb
mov
push
repnz
jne
xor
pop
insb
out
cmp
outsb
outsb
pop
sub
inc
push
mov
sbb
rorb
xor
mov
xchg
movlps
in
ljmp
push
mov
and
out
push
sti
push
push
adc
mov
insl
cmp
pop
movsl
arpl
out
pop
cmpb
mov
ss
out
rcrb
das
int
cmpsb
add
add
sub
ficomps
and
and
dec
std
cmp
out
repz
mov
cmp
mov
nop
mov
mov
addl
cmp
fs
jmp
adc
cmpsb
pop
mov
aaa
out
mov
xor
aad
lods
ljmp
cld
xchg
addr16
popa
push
and
shll
mov
push
ror
orb
aam
andb
and
sbb
insb
out
outsl
xchg
inc
test
cmp
sbb
std
sarb
or
and
xor
into
sahf
cmp
dec
and
sbb
int
adc
push
pop
mov
add
loop
inc
and
sbb
addr16
lock
mov
cmp
cld
sbb
sbb
adc
int3
push
cli
mov
cltd
out
fnstsw
jle
pop
imul
inc
xchg
push
mov
jmp
lahf
aaa
dec
add
mov
in
inc
inc
and
jnp
and
jo
cmp
and
lods
jne
pop
out
sarb
hlt
aad
andb
xlat
and
mov
xchg
rcr
fnstenv
cli
add
adc
je
imul
pop
and
in
mov
sub
daa
sub
out
mov
fists
fwait
idiv
dec
lods
cmc
icebp
aaa
pop
jecxz
bound
lods
adc
sbb
cmp
loop
enter
hlt
or
sub
cmp
lcall
push
mov
sar
inc
data16
es
sub
sub
dec
cmove
rcrl
mov
or
std
test
push
cmpsb
out
filds
mov
aad
cwtl
test
sti
xlat
divl
negb
cmp
inc
mov
repz
fisttpll
push
popf
les
mov
or
bnd
push
lods
and
aaa
popf
add
rcr
add
sbb
cwtl
mov
xor
mov
xchg
bound
outsl
ljmp
idiv
leave
mov
fcoms
nop
fldt
test
dec
shrb
push
daa
jne
fistpll
cmpsb
sarl
mov
in
pop
sahf
or
test
adc
dec
idiv
push
stos
movsl
fidivl
ss
in
nop
mov
scas
inc
sbb
std
add
mov
cs
push
enter
leave
mov
imul
adc
ja
out
cwtl
into
aad
hlt
into
sub
bound
out
cmp
mov
iret
outsl
movsl
fnsave
leave
imul
pusha
stos
popa
ficomps
fs
cld
and
mov
mov
sbb
sbb
das
jb
sub
mov
subl
loopne
mov
sahf
push
adc
jae
cmpsb
mov
and
gs
add
adcl
cmp
fcoml
sub
mov
xchg
in
stos
jno
xchg
les
mov
xchg
loopne
fcoms
cmp
sbb
push
pop
push
push
sbb
ds
out
ss
test
repnz
cmp
mov
mov
std
push
pop
mov
sahf
or
insl
pop
iret
ret
sub
cli
pop
pop
mov
jb
and
mov
mov
loop
mov
mov
push
xchg
shll
push
adc
sbb
lret
aam
adc
sti
pop
mov
push
out
xchg
test
rorl
ret
mov
inc
shrb
sbb
ret
xchg
mov
repz
fcmovbe
mov
adc
addr16
movsl
jne
ja
lods
int
icebp
in
and
mov
jbe
mov
xor
lcall
addb
movsb
inc
cld
fucomp
push
fwait
mov
pop
shrb
imul
aad
jl
ret
and
jne
sarl
or
int3
mov
push
mov
adc
xlat
sbb
ret
ret
jle
pop
jno
lods
out
hlt
lods
xchg
bnd
xor
cmpsb
psubw
fwait
add
js
movsl
mov
andl
or
jne
test
hlt
sub
rcrl
cmpsl
pop
sub
sub
xor
jnp
mov
dec
lock
push
gs
inc
shlb
and
dec
sbb
or
cmp
sbb
roll
es
xchg
xchg
xchg
cs
xadd
and
cmp
pop
mov
stc
xchg
jno
push
lods
hlt
jge
jnp
mov
scas
lods
xchg
or
push
nop
dec
in
mov
rorl
push
fisttpl
cwtl
jg
push
jne
push
fistl
std
idivl
fildl
and
sbb
pop
cmp
in
sbb
add
inc
pop
lcall
jnp
add
inc
xor
mov
div
cltd
push
outsl
jp
mov
push
sub
movsb
fistpll
xlat
adc
push
sub
dec
fldenv
icebp
pop
cli
test
rorl
jmp
push
orb
jecxz
xchg
and
adc
loopne
add
std
push
xor
jnp
daa
cmp
or
loop
daa
addr16
stos
mov
jecxz
in
hlt
cmpsb
sbb
sbb
dec
cwtl
hlt
lods
aas
push
mov
in
mov
sub
adc
jo
pop
dec
dec
pop
int
mov
sahf
xor
adc
das
cli
xorb
mov
fsts
add
out
fildll
ljmp
cmp
fistl
push
mov
rcrb
fcmovnu
aam
cmp
mov
ret
pop
sbb
inc
test
pushf
lahf
or
loop
es
inc
add
mov
arpl
pushf
dec
pusha
mov
push
nop
test
js
jae
insl
inc
sub
inc
ret
outsl
mov
adc
gs
scas
mov
sbb
outsl
stos
repz
xchg
ss
nop
call
dec
and
repz
sbb
repnz
cmp
iret
ret
pop
out
in
inc
push
inc
xor
adc
decb
xchg
orl
es
mov
outsl
mov
int
dec
outsl
add
imul
mov
int3
adc
push
leave
stos
test
movb
shll
pop
movsb
xchg
mov
int
cld
das
pushf
imul
push
cmpsl
test
cmp
push
jb
in
push
dec
fwait
das
hlt
sahf
and
lcall
fidivs
and
sar
pop
add
adc
fisttps
pushf
xor
xchg
out
mov
pusha
leave
and
gs
cmpsb
mov
sahf
rolb
pop
icebp
lods
push
arpl
push
mov
dec
in
nop
push
clc
mov
dec
dec
nop
js
into
int3
fildl
adc
sbb
int3
sbb
data16
repnz
and
outsl
mov
xchg
push
jg
rcrb
out
pop
fstpt
jg
and
cmp
subb
test
push
dec
fdivrl
rcrb
mov
push
movsb
mov
dec
ss
sub
push
loopne
insb
mov
push
mov
inc
pop
xchg
sbb
cmp
xor
pop
gs
lcall
sahf
or
js
mov
and
inc
fadds
xor
das
shll
pop
ss
dec
mov
pop
out
sbb
daa
cmp
arpl
je
test
push
add
sbbb
shlb
test
popa
push
rcrb
fisttps
sbb
repnz
and
jno
aam
xchg
rcrl
xchg
lret
sbb
xlat
xor
xlat
js
jmp
cmc
jo
mov
cmpsl
or
lods
xor
pop
out
test
push
pop
xchg
mov
inc
mov
xor
sti
repnz
mov
outsb
not
lock
loopne
js
rol
mov
cwtl
xchg
nop
in
pop
add
scas
mov
mov
in
push
push
sbb
inc
pop
fwait
push
sub
leave
insb
dec
js
cltd
fyl2xp1
sbb
addb
sub
sbb
adc
sbb
mov
lret
je
mov
out
aaa
add
xchg
daa
dec
dec
daa
pop
jnp
inc
fucomip
pop
cli
es
xor
leave
push
mov
lock
mov
xchg
addr16
sub
push
jne
dec
and
adc
inc
add
iret
inc
loope
xchg
fwait
mov
mov
scas
sbb
out
add
hlt
mov
clc
repz
fcoml
popa
nop
inc
sbb
lds
mov
push
push
push
mov
icebp
jecxz
jo
repz
scas
nop
adc
stc
pop
fs
insb
push
fs
cmp
jg
pop
rol
or
repnz
sub
and
jno
and
sbbl
lods
add
mov
sub
inc
insb
mov
cmp
jmp
cmp
sbb
adc
stos
shrl
pop
and
mov
mov
xor
fmul
les
dec
int
or
jbe
sti
stc
jbe
stos
or
iret
mov
add
mov
jg
dec
inc
xor
fdivrl
out
gs
and
xor
push
mov
es
in
xor
out
xchg
iret
js
sbb
mov
sub
cwtl
leave
fisttpl
and
shl
fisttpl
or
sarb
bound
popa
gs
rorb
mov
js
loopne
sti
pop
adc
aas
fcompl
or
imul
bound
and
das
pop
or
clc
xor
das
cmp
mov
push
into
dec
insb
jp
repnz
sbb
in
add
push
bnd
ljmp
cmp
push
or
adc
fwait
out
popf
dec
cmpsl
dec
xchg
adc
add
lds
test
pusha
lret
push
loope
xchg
std
fistps
add
and
in
and
jl
pop
mov
std
xchg
ret
stos
xchg
sub
mov
mov
icebp
adc
xchg
cmc
mov
shll
xchg
jle
xchg
cld
push
mov
adc
fsubrl
jbe
jmp
sub
icebp
jns
shlb
push
popa
push
xchg
inc
push
cli
pop
out
sub
hlt
imul
in
pop
push
shlb
imul
push
xchg
xchg
into
stos
insl
jne
stos
lcall
lret
sbb
xor
mov
cmp
jb
xchg
inc
not
push
insb
cmp
into
das
pop
rorb
inc
repz
int3
cmp
mov
in
cs
icebp
in
cmpsl
sbb
push
insb
ljmp
xor
xorb
push
orl
add
xchg
mov
cmp
push
push
cmpsb
sbb
mov
push
repz
push
sbb
fcmovb
adc
add
fs
in
arpl
push
sbb
popa
bnd
push
jae
lods
iret
add
push
sub
rclb
mov
out
scas
cmp
scas
and
lods
icebp
pop
unpcklps
cli
sti
movsl
fisubrl
arpl
in
movntps
jg
addb
mov
aad
addb
push
adc
and
out
inc
mov
bound
push
dec
into
test
and
pop
mov
mov
inc
xchg
jns
mov
into
notl
sbb
mov
jb
dec
nop
and
lods
dec
fcompl
mov
jp
add
aaa
jmp
notb
jle
mov
mov
mov
movsl
cmpsl
and
jl
into
fsubrp
cli
mov
test
mov
jns
cmp
lds
mov
mov
bound
rorl
bound
push
jge
outsl
sub
dec
push
into
mov
jmp
inc
fucomip
pop
adc
xchg
movsl
movsb
dec
shr
inc
inc
sbb
int
mov
sbb
lds
jle
jl
push
ja
loopne
repnz
ret
pop
cmp
xor
aas
xor
mov
adc
xor
addl
and
test
aad
js
fsubp
xor
dec
in
xchg
movsl
lret
movb
mov
and
fistps
pop
cmp
popf
arpl
in
xchg
mov
cld
popl
testl
lods
inc
mov
add
insb
add
fwait
fwait
ret
dec
pop
adc
sti
fcoms
pusha
fnsave
ficoml
lret
mov
adc
jns
imul
adc
lds
test
das
and
jmp
cmpsl
adc
das
ficompl
sub
iret
push
fisubs
in
scas
jno
repnz
mov
shlb
xchg
mov
in
pop
das
sub
push
mov
xchg
loope
push
popa
lea
inc
dec
lods
mov
int
mov
in
test
push
adc
sub
add
mov
adc
sbb
es
das
prefetch
or
ficompl
repnz
dec
fidivrl
into
sbb
fsubrs
push
cmpsb
mov
xchg
mov
and
and
add
dec
fldcw
ja
inc
mov
push
mov
sbb
test
and
and
sahf
pop
aam
jb
imul
mov
jo
jbe
bound
and
jbe
cmp
push
jb
pop
adcl
pop
add
and
sbb
cld
lock
repz
mov
aad
adc
imul
adc
in
sbb
mov
and
add
test
imul
push
push
sbb
sub
or
clc
xlat
push
lret
pop
jl
sbb
mov
dec
arpl
mov
mov
cs
ret
push
sbb
enter
sbb
adc
stc
call
pop
add
pop
leave
mov
jo
mov
arpl
cmp
stos
mov
xchg
sub
stos
mov
cmp
xchg
xchg
inc
mov
in
scas
mov
xlat
pop
dec
aas
xchg
or
or
outsl
pop
pop
mov
shll
cvtpi2ps
inc
idiv
ror
lock
sarb
movsb
cmpsb
push
push
lock
faddp
out
scas
cs
jbe
lods
mov
cmp
popf
sti
lock
lds
insb
sahf
popa
xor
adc
out
inc
dec
sbb
cwtl
jo
ja
mov
mov
push
push
dec
nop
xchg
sar
mov
xchg
cltd
shlb
shrl
out
mov
sub
mul
cltd
std
int
aam
push
out
push
fsubrp
sarb
mov
adc
or
mov
fmull
push
push
xor
test
xor
out
add
xor
sti
pop
mov
mov
cli
sub
inc
das
cmp
ja
pop
and
adcl
push
daa
pop
sbb
addl
push
lea
xchg
mov
out
popf
xchg
xchg
icebp
sbb
push
sbb
mov
cmp
sub
sbb
pusha
jge
sbb
test
mov
dec
and
and
adc
jmp
or
xor
push
jg
es
add
stos
stos
cmpsb
pushf
cltd
hlt
mov
sti
xor
or
or
and
pop
sbb
mov
outsl
pop
push
test
fdivs
into
dec
sub
aad
popa
mov
sub
adc
mov
outsb
fildll
loop
nop
mov
psubw
pusha
andl
mov
dec
jo
and
push
dec
imul
stos
fcoms
ds
push
aas
in
mov
xor
inc
jo
xchg
sbb
sub
mov
dec
sub
mov
aam
cmp
or
test
test
jg
push
pop
and
jg
add
int
mov
inc
inc
lods
sbb
adcl
mov
mov
movsl
mov
pop
xchg
pop
aad
cmp
fdivrl
int
shrl
sahf
and
dec
les
add
dec
sbb
rcrb
mov
xorl
push
mov
lea
or
cmp
fimull
adc
lret
mov
dec
idivb
mov
jbe
lahf
jb
jmp
clc
aaa
out
mov
dec
icebp
stc
je
mov
clc
arpl
jae
push
ljmp
rolb
in
test
mov
mov
icebp
and
xchg
sbb
shll
out
mov
mov
and
dec
adc
les
flds
add
push
pop
sub
iret
sbb
data16
or
jns
xchg
adc
inc
int3
jae
pushf
outsb
rorb
xor
dec
icebp
fildl
pop
pop
in
mov
and
insl
cmp
ljmp
rcrl
xlat
ret
inc
pop
sbb
es
sub
ljmp
call
lcall
idiv
pusha
inc
in
jg
lods
cmp
and
sahf
jg
icebp
insl
dec
mov
pop
clc
jo
xor
adc
cmp
sahf
cmp
add
adc
out
stos
dec
mov
inc
adc
push
arpl
xor
stos
aas
movsl
call
push
pop
sub
inc
mov
pop
sbb
sbb
loope
enter
outsb
mov
jne
in
fildl
data16
cld
sti
jecxz
push
mulb
or
repnz
into
dec
addr16
jnp
mov
out
addl
icebp
adc
mov
or
and
add
ret
lods
mov
ss
shrl
cltd
ret
push
lods
test
cmp
or
add
add
adc
ja
xchg
push
sbb
sub
aam
stos
loop
hlt
gs
aam
outsb
mov
call
adc
cs
repnz
mov
fiaddl
xor
adc
test
mov
dec
insb
xor
loope
pop
sbb
dec
mov
inc
jle
jo
push
inc
xchg
xchg
dec
push
in
lret
cli
add
add
add
push
fdivrl
sub
add
and
sbb
fidivrs
not
hlt
add
sub
loopne
inc
inc
push
movsl
pop
in
jl
mov
negl
sets
dec
pop
das
out
add
mov
call
pushf
cmp
push
mov
addr16
inc
outsb
mov
pop
aad
faddp
push
dec
mov
cmovns
or
push
insb
sarl
mov
push
pop
cmp
dec
jmp
fwait
push
data16
mov
cmpb
jge
sahf
inc
mov
mov
push
scas
xor
pop
push
movsb
pop
mov
or
pop
jg
cmp
or
scas
jecxz
inc
and
fs
sub
clc
inc
stc
sbb
mov
in
faddp
mov
cmpsl
sub
sub
sub
out
bnd
lods
out
inc
ret
dec
lcall
call
rcrl
fdivrl
mov
insl
loop
into
loop
adc
push
aam
pop
std
push
sub
fstl
loope
popa
into
xor
add
add
mov
lret
jle
jns
into
push
adc
cli
push
xlat
sti
pop
dec
lcall
add
adc
add
push
mov
xlat
mov
pusha
mov
and
pop
jnp
aad
ds
mov
sub
cmpl
int
mov
sub
add
adc
ret
fdivl
insl
cmp
sub
dec
ds
imul
xchg
stos
or
push
sub
push
dec
xchg
xchg
xor
cs
subb
pop
cli
cmpsb
or
mov
rol
sahf
xchg
dec
bound
sti
push
push
and
jnp
xor
adc
xor
fadd
inc
adc
adc
pusha
fcomps
cmpsl
mov
dec
jnp
je
jmp
repz
mov
sarb
sub
adc
and
xchg
pop
lret
lcall
ljmp
bound
mov
ljmp
in
push
in
mov
inc
pop
imulb
testb
mov
in
pop
mov
pop
hlt
pop
push
adc
adc
test
int
mov
jmp
test
sbb
add
stc
xor
push
pop
lock
mov
xor
lret
scas
loop
test
dec
add
test
and
pop
mov
lret
jmp
sbb
pop
mov
jecxz
add
sub
cld
sub
test
mov
add
int3
imul
lcall
rorl
mov
pop
aad
popf
shlb
clc
bound
push
stc
xchg
mov
inc
push
inc
pop
bound
and
scas
clc
sbb
aaa
clc
ja
popa
mov
out
add
outsl
pop
add
es
int3
xor
mov
pop
mov
xchg
xchg
cwtl
sahf
je
outsl
pop
fwait
pop
jmp
cs
and
push
repz
xor
and
mulb
mov
jb
sub
popf
outsl
fdivr
sbb
pop
out
jecxz
addr16
jo
cwtl
push
pop
mov
shll
sub
cmp
mov
fnstsw
xchg
xchg
inc
add
lods
das
xchg
add
push
dec
js
bnd
adc
xrelease
mov
cmp
iret
sub
mov
repnz
push
xchg
mov
fidivrs
fcoms
cli
ret
jb
add
cld
aam
or
mov
mov
daa
mov
xlat
add
aam
add
lahf
mov
push
outsb
sar
add
and
jns
mov
movsb
loop
inc
rol
mulb
add
stos
pop
int3
xchg
xor
dec
movsl
sub
adc
jg
xchg
rcrb
add
adc
sub
shll
mov
mov
iret
jae
cmp
cwtl
sbb
mov
and
cmp
and
test
gs
rclb
cld
xchg
ss
add
rcrb
in
lret
rorl
xchg
jge
movsl
cmc
pop
int3
inc
pop
lret
sbb
dec
mov
mov
aaa
cmp
cmp
xor
ds
incb
push
dec
data16
loope
xchg
or
outsl
stos
inc
lahf
insb
je
pop
and
cmp
les
jp
mov
cwtl
xchg
adc
ljmp
cs
and
and
sub
mov
outsl
mov
xlat
pop
aam
stos
daa
ffree
xchg
aas
cmp
pop
sti
push
andl
ret
int
imul
pop
mov
inc
add
lcall
mov
aaa
fldl
mov
pop
jnp
bound
pop
movsl
leave
xor
repz
ficoms
inc
dec
pop
and
dec
and
popf
mov
push
lods
jmp
mov
idivl
ja
mov
or
ja
fistl
icebp
orl
jnp
xchg
shlb
fidivs
pop
mov
repz
and
jbe
cli
dec
sub
jmp
stos
cmp
or
sbb
add
mov
sub
xor
xchg
mov
out
cmp
adc
test
xchg
and
push
imul
aad
arpl
inc
dec
ret
ret
inc
es
setnp
lret
and
cmp
mov
inc
or
fisubrs
or
aaa
mov
sbb
jmp
out
push
inc
mov
std
xorl
pop
sub
add
and
xor
in
cmpsb
mov
test
add
mov
enter
insb
hlt
xor
mov
jbe
out
negl
ja
sbb
pop
mov
aaa
ret
shll
insl
add
loope
aas
cwtl
and
pop
cmp
int3
pusha
fcoml
dec
ss
aam
push
mov
stos
or
sahf
inc
mov
add
fcmovnb
fdivp
icebp
cmpsb
jl
jp
xchg
in
cmc
pop
push
enter
push
test
inc
xor
jno
sub
call
shrl
outsl
pop
and
pcmpgtd
or
insb
mov
insl
jg
cmpsb
or
xor
lea
test
arpl
insb
push
push
ss
cmp
out
fstpt
packssdw
push
cwtl
sbb
mov
cmp
xor
leave
jge
fidivrl
push
adc
jne
mov
mov
in
flds
push
ficomps
daa
mov
not
loope
push
xor
ficoms
pop
rclb
lret
scas
jbe
sub
movsl
cmp
sbb
ds
xchg
xor
in
insb
cmp
sbb
inc
jbe
sub
add
mov
push
mov
sarl
fdivrs
cmpsb
mov
push
push
dec
pop
mov
addr16
pop
sbb
gs
lret
push
xchg
cltd
imul
sub
xorl
in
sub
cmp
jle
stos
scas
jg
or
and
adc
cli
push
xor
jmp
push
loope
lock
les
mov
loopne
or
cmp
or
imul
push
sub
fimull
xor
mov
xchg
jbe
fnstenv
inc
or
and
mov
aam
popf
push
pop
jp
push
xor
pop
add
sbb
jne
mov
sbb
cmp
dec
adc
arpl
mov
or
cmpsl
cmpsl
pop
mov
out
std
cmp
jno
mov
enter
lahf
cmpl
cmovs
pop
lret
mov
xchg
outsb
and
mov
ss
mov
jb
mov
pushf
mov
out
cmp
mov
movb
pop
jge
or
push
and
sub
push
jae
imul
outsb
cmc
sub
dec
pop
ljmp
rcll
jp
or
inc
push
lcall
xchg
xlat
inc
adc
pop
mov
les
mov
fadds
in
in
sbb
psrlq
addr16
adc
fs
repnz
scas
lds
aas
adc
in
bound
mov
adcb
cmp
in
dec
std
icebp
mov
fs
das
lea
pop
subl
push
sbb
cmp
sbb
jecxz
xor
gs
ret
jmp
stos
jle
mov
lret
jmp
stos
les
popf
jae
mov
sub
mov
out
in
mov
jge
icebp
cmp
mov
out
mov
andb
xchg
cli
test
in
sub
in
jle
fists
pop
xor
inc
mov
and
inc
dec
or
in
mov
ja
inc
ret
mov
and
ret
out
cli
stc
ja
daa
xchg
sub
add
fs
cmp
xor
dec
jo
out
in
mov
leave
dec
adc
cld
mov
and
call
mov
or
nop
fsubrs
ss
cmp
inc
outsl
out
loop
pop
pop
sbb
inc
mov
mov
js
or
xchg
cmpsl
ljmp
mov
std
sarb
dec
bound
pop
mov
leave
mov
les
frstor
out
cltd
mov
jg
out
loope
popl
or
sbb
sbb
pop
xchg
adc
or
cmp
push
stos
ja
repz
lock
lods
adc
mov
cpuid
std
rcll
or
mov
ffreep
hlt
movsl
sub
pop
test
test
enter
fistps
push
nop
dec
ja
into
dec
xor
sbb
jp
rclb
sbb
in
xlat
icebp
nop
gs
or
add
lret
jmp
mov
adc
sbb
rcl
xchg
outsl
es
insl
jmp
and
mov
mov
fadd
add
inc
shlb
pop
xor
ljmp
iret
adc
sbb
push
add
out
mov
mov
sar
xchg
int3
cli
push
xchg
cli
loop
mov
cmp
fisttps
cmp
sub
cltd
mov
jp
jge
xchg
inc
into
inc
pushf
std
mov
xchg
mov
outsl
pop
push
adcb
lahf
cmp
push
sub
arpl
negl
or
mov
loopne
cs
js
std
popa
fidivrl
and
pop
mov
shll
cmc
or
push
pusha
pop
repz
adc
notb
push
push
cmp
je
cmpsl
std
mov
jne
mov
lahf
lahf
sub
and
adc
dec
das
and
andl
sub
mov
mov
outsb
popa
aaa
sub
push
push
mov
mov
xchg
cmp
scas
notb
sti
dec
push
loope
ficompl
mov
push
pop
into
int
jl
sbb
push
into
clc
jecxz
cmp
pop
std
addr16
das
xchg
aad
dec
roll
movsb
popa
mov
jne
jae
adc
inc
xchg
adc
lret
and
add
add
hlt
dec
jmp
mov
in
xchg
pop
jecxz
ds
jg
push
add
jbe
int
push
roll
pop
adc
or
mov
stc
shlb
mov
cwtl
jecxz
xchg
outsb
lods
imul
xor
fcompl
cmpsb
xor
lods
hlt
and
gs
clc
push
xchg
mov
jno
mov
aad
shrl
outsl
sub
push
jecxz
data16
sbb
ja
mov
addl
xchg
pop
pop
xchg
xor
add
addb
mov
icebp
fs
data16
xchg
insl
xor
scas
fistpll
xor
test
leave
inc
lock
jl
or
ret
cli
adc
je
adc
jae
aam
orl
jmp
ljmp
stos
sub
or
stc
mov
out
icebp
inc
sbb
pop
xchg
pop
enter
dec
sbb
in
xor
push
popf
clc
xor
aas
dec
mov
jmp
or
cltd
sbb
push
les
mov
xchg
shlb
outsl
jo
dec
xor
or
push
inc
sbbb
aad
popf
xlat
xchg
sbb
dec
ret
push
xchg
por
and
movsb
xchg
in
fdivr
popf
pop
rcrb
push
dec
add
push
in
lcall
dec
movsl
leave
jle
adc
sub
sub
inc
enter
adc
push
out
mov
pop
push
mov
or
xchg
sub
push
adc
mov
xchg
leave
and
repnz
rcl
fstl
jge
sbb
je
pop
dec
cltd
es
xor
icebp
out
mov
fisttpl
xlat
outsl
jbe
mull
leave
outsl
xor
pop
test
or
imul
shl
aam
inc
jns
loop
sub
les
push
ljmp
xor
sarl
adc
lcall
adc
inc
xchg
pop
xchg
sbb
cmpsl
mov
xchg
stos
push
shlb
xchg
inc
mov
or
mov
outsl
loopne
add
lds
xchg
cltd
push
xor
and
jmp
pop
hlt
or
inc
mov
jae
je
adc
xchg
or
std
mov
or
mov
stc
ljmp
adc
mov
mov
add
push
pop
pop
loopne
das
sti
cwtl
pop
jns
add
xchg
out
bound
xchg
fcmovnb
hlt
addr16
enter
lret
mov
add
daa
frstor
cltd
mov
sub
dec
lret
add
push
inc
aam
ret
cmp
or
test
pop
repnz
xchg
insl
adc
push
scas
data16
shr
out
pop
decl
cld
cmp
into
orb
data16
aad
cmp
popf
sub
inc
into
not
mov
pop
fcomps
mov
add
imul
dec
pusha
push
sar
xchg
inc
sar
dec
icebp
nop
inc
inc
adc
xlat
mov
test
test
roll
add
mov
jl
pop
shll
xchg
in
lods
pushf
mov
adc
out
mov
pop
insl
mov
icebp
mov
jae
push
sbb
pop
adc
lods
jbe
outsl
cmp
add
and
fidivrl
scas
jae
jb,pn
cmp
insb
mov
jo
push
xchg
lods
sbb
sbb
mov
leave
popf
frstor
pop
xlat
popf
adc
mov
shlb
xchg
fisubrl
jo
push
mov
or
pop
outsb
or
call
jecxz
jb
data16
pop
icebp
cmpsl
testl
subb
dec
notb
add
lock
jbe
into
cmp
insl
and
das
mov
gs
adc
pop
rolb
xor
push
xchg
pop
loop
mov
daa
subl
test
sahf
jnp
ds
lds
sub
xor
push
sub
lods
dec
cli
movl
ss
mov
cmc
add
inc
clc
xor
jo
mov
pop
add
dec
rcll
out
test
and
iret
xchg
xchg
fmuls
insb
fwait
mov
mov
sbb
loopne
shl
mov
fdiv
testb
pop
in
aas
repnz
out
xlat
scas
xor
adcl
pop
stos
mov
in
gs
adc
dec
scas
mov
sti
mov
pop
adc
jbe
dec
daa
sahf
mov
sub
sbb
pop
xchg
push
repz
dec
inc
aad
mov
fdiv
cmp
notl
fwait
das
outsl
add
and
sbb
decb
cltd
cmp
mov
es
faddl
and
in
inc
cli
sar
lret
mov
outsb
mov
shll
xchg
dec
jle
cmp
lret
mov
or
ret
inc
dec
data16
in
sbb
add
add
out
iret
aam
aad
cmpsb
ja
test
add
add
jb
jg
std
cmpsl
jne
mov
push
adc
mov
jg
xchg
xor
push
add
sbb
jbe
movsb
int
fwait
rcl
cmp
jmp
add
and
inc
pop
ss
pop
push
imul
shlb
dec
imul
or
mov
push
pop
fistps
shrl
vminpd
in
in
inc
sub
cmp
adc
data16
mov
adc
nop
mov
imul
push
push
add
lret
mov
frstor
push
cmp
cmp
cmp
test
lahf
mov
lret
rol
test
ror
xchg
scas
fidivs
push
xor
xchg
sub
jnp
push
mov
mov
inc
leave
push
je
dec
cmp
ror
inc
pop
jmp
mov
imul
gs
icebp
nop
dec
repnz
lret
mov
sbb
xor
or
push
ds
pusha
add
push
xchg
fistl
out
outsb
adc
pop
add
jmp
pop
enter
push
sbb
cmp
mov
add
cli
cwtl
mov
jb
sub
mov
jbe
inc
je
inc
pop
cmc
pusha
sbb
into
or
insl
lcall
inc
add
cld
xor
cmpsb
mov
or
jl
repz
cmp
cmc
stos
and
data16
mov
and
aas
add
js
and
and
insl
jmp
add
adc
stos
jp
mov
fnstenv
xor
jne
sub
and
in
fidivrs
push
dec
fimuls
hlt
fwait
pushf
fisubrl
hlt
fadds
mov
dec
cwtl
add
sub
mov
nop
std
xor
pop
fidivrs
repz
inc
push
sbb
inc
pushf
xchg
fnstsw
aaa
sbb
int
jb
or
rcl
adc
push
aam
dec
je
jnp
mov
mov
inc
imulb
cmp
sub
lahf
sbb
cmc
leave
push
jmp
inc
add
push
test
mov
add
push
and
xchg
mov
movsl
add
jg
ljmp
sub
ficoml
adc
pop
out
mov
add
xchg
lock
pop
mov
icebp
xchg
pop
lock
cmp
sarl
mul
pop
lahf
gs
iret
sub
push
push
push
adc
xor
jo
fwait
std
xchg
push
cwtl
fdivs
lods
enter
mov
mov
sbb
insl
sbb
das
mov
lods
stc
mov
lods
jae
sbb
insl
sti
cli
mov
push
cwtl
adc
dec
leave
sbb
rcll
mov
inc
pop
insb
add
stc
sub
fildl
jmp
pop
rcll
pop
fs
inc
and
cmp
adcl
mov
in
mov
add
or
or
call
xor
in
sub
push
jp
das
inc
jno
ljmp
jno
in
cmpsl
arpl
add
xchg
repnz
sbb
ss
inc
jae
aad
mov
mov
jne
movsb
test
std
icebp
aad
fucom
mov
pop
cwtl
mov
pop
xor
in
mov
std
cmp
mov
dec
mov
sub
subb
insb
cld
sbb
daa
cs
ficoml
repnz
shll
inc
dec
enter
push
or
and
aad
sarb
in
pop
hlt
data16
add
mov
lret
pusha
pop
rclb
cmpb
out
cwtl
or
push
pop
sub
lahf
fsubs
data16
pop
push
insb
shlb
and
in
les
pop
popa
mov
rcrl
xor
dec
mov
cld
xchg
mov
xchg
and
shrl
mov
jecxz
lcall
ja
in
rclb
inc
add
sub
stos
sbb
mov
stos
enter
rcrb
imul
jae
repnz
test
jmp
divb
mov
fldenv
lret
or
lock
inc
push
mov
js
dec
loope
jo
outsb
add
lods
cmp
push
sti
push
fisubl
mov
std
stc
iret
or
fs
xchg
jle
xchg
ficoms
cld
imul
mov
rol
fs
and
scas
ret
jno
xchg
jns
les
jns
pusha
scas
dec
enter
das
or
adc
subb
ret
arpl
mov
jnp
or
push
cmpb
cmp
pop
iret
in
mov
mov
jne
xchg
out
mov
fld
icebp
push
stos
je
xchg
push
outsb
mov
dec
mov
outsl
push
adc
mov
into
outsb
cmp
add
data16
aam
imul
pop
imul
int
ja
mov
push
push
jge
hlt
cwtl
xchg
push
cmp
or
cmpsl
cwtl
lea
repz
pop
cmp
test
mov
fdivp
pop
mov
ljmp
call
in
clc
aam
std
aaa
inc
xchg
ret
add
aaa
bound
fcmovb
imul
jg
ficomps
cmp
pop
cld
ret
pop
arpl
inc
sub
push
dec
popa
xchg
sub
jl
das
daa
iret
aas
pop
sub
adc
jb
nop
aas
and
and
in
fildll
sbb
fs
stc
inc
lcall
out
cmp
sar
adc
mov
xor
cmp
cmp
adc
into
inc
sbb
pop
cld
decl
leave
xlat
cli
push
cmp
adc
bound
and
pop
mov
mov
loop
push
sub
in
in
cmp
fildl
iret
enter
clc
imul
adc
push
sub
icebp
inc
in
jbe
int3
jnp
fwait
sub
pushf
or
cmp
or
sbb
pop
and
andb
cmp
mov
inc
jle,pt
dec
enter
clc
xchg
and
roll
mov
mov
inc
mov
sbb
mov
nop
out
push
and
adc
xchg
push
dec
inc
insl
mov
call
sub
push
jle
call
fistpll
aaa
xor
or
mov
xchg
lcall
or
mov
icebp
fadds
mov
lea
and
dec
xor
adc
fs
push
ljmp
sbb
mov
cmpsl
mov
lahf
shr
outsb
mov
inc
arpl
test
bound
or
sbb
clc
dec
and
adc
lahf
in
enter
div
push
jecxz
pusha
enter
loop
lock
dec
xchg
sarb
xor
xchg
out
jb
pop
rcr
rorb
movsb
jb
inc
cmc
or
push
mov
and
iret
ret
jns
rcrl
mov
push
mov
mov
repz
int
fisubl
inc
jl
rcpps
push
push
inc
mov
jge
mov
aad
and
cmp
cmp
add
call
pop
test
xor
out
jecxz
test
mov
adc
hlt
rorl
adc
fdiv
jle
inc
xor
insb
dec
jl
sbb
test
xlat
mov
jb
jl
es
lret
add
cld
push
and
mov
fisttpll
mov
arpl
pop
add
imul
inc
ja
pop
ss
aad
or
sbb
xor
or
jbe
mov
imul
mov
cmp
testl
mov
and
adc
shlb
dec
push
pop
pop
pop
add
stos
and
int3
jns
push
cmpsb
stos
repz
or
jo
dec
mov
stc
lds
test
adc
dec
cmp
fldl
cli
sbb
or
and
mov
inc
adc
ret
out
call
aad
test
std
add
push
cltd
subb
sub
jg
sub
adcl
push
jnp
sbb
out
scas
mov
mov
cmp
xchg
push
push
out
inc
ror
addr16
cs
aad
pop
xchg
push
cmc
inc
roll
stos
popa
and
dec
jnp
test
mov
test
or
dec
and
mov
cmp
cmp
xlat
mov
mov
xor
and
mov
mov
adc
xor
sbb
std
xchg
mov
push
jbe
cli
push
adc
xor
sub
mov
repnz
mov
pop
call
fwait
dec
js
mov
mov
cmp
daa
jmp
pushf
daa
mov
es
adc
push
aad
scas
dec
test
pop
push
test
ljmp
insb
lea
xchg
mov
dec
cld
aad
inc
repz
mulb
xor
push
pop
adc
scas
popa
daa
xchg
test
filds
ljmp
aaa
sbb
adc
ret
and
lods
shll
mov
mov
inc
clc
mov
or
or
in
sub
sub
aas
imul
fidivl
out
sbb
or
mov
sub
xor
icebp
mov
test
pop
js
pop
cmp
cltd
pusha
test
xchg
adc
push
push
into
movsb
cmp
arpl
iret
mov
push
sbb
mov
jmp
addr16
pop
jge
pop
xchg
and
push
cmpsb
fsubs
into
fcomp
jmp
cmp
ds
sbb
daa
xchg
aas
mov
xchg
or
xchg
and
mov
fwait
xchg
xor
mov
push
lret
loop
adc
arpl
mov
push
cmp
clc
cmp
lret
push
jle
inc
fisubrs
mov
jle
sbb
sahf
fcompp
or
push
xor
xchg
dec
pop
jge
inc
jge
sub
sbb
mov
stos
push
inc
add
je
mov
dec
mov
data16
pop
test
lcall
and
scas
test
xchg
mov
and
rorb
cmp
push
pop
loopne
mov
or
lea
fs
repz
cmp
pop
cmpl
icebp
mov
dec
bswap
pop
dec
adc
jno
bound
jo
shl
lahf
or
enter
inc
jg
xchg
lret
mov
ja
hlt
push
out
push
divb
push
push
inc
pop
adc
out
aaa
inc
push
cmp
fildl
rolb
push
out
pop
push
mov
out
cmp
insl
sbb
jns
gs
cmp
scas
cld
inc
dec
cmpsb
ds
bound
xlat
mov
adc
dec
inc
adc
mov
mov
mov
adc
mov
lret
adc
das
test
lcall
cmp
enter
cltd
dec
enter
popf
je
lods
and
pop
inc
lods
or
xchg
mov
push
dec
lahf
fists
pop
xchg
dec
push
mov
xchg
mov
cwtl
sbb
ds
call
xchg
mov
add
push
push
push
xor
inc
push
pop
adc
out
lods
cmp
aaa
iret
repnz
ret
movsl
inc
lahf
dec
push
out
jmp
jg
mov
pushw
cmpsl
lods
orb
cmp
loop
jecxz
jecxz
push
cltd
or
xlat
pop
in
mov
sub
cmpsl
ljmp
jne
fsubrl
inc
nop
jge
imul
imul
add
adc
xor
stc
clc
inc
adc
outsb
inc
in
dec
and
xchg
sbb
push
lret
sbb
mov
xchg
mov
or
andb
fistps
xorl
jnp
fbstp
cmp
or
sbb
pop
push
shlb
pop
cwtl
dec
dec
xchg
fadds
lcall
jne
ficomps
adc
push
pop
out
mov
sbbl
push
sbb
xor
shl
lahf
insl
or
insl
dec
out
mov
push
push
lock
inc
jmp
cltd
pop
cs
sub
cli
std
sbb
ret
lcall
andl
jle
or
in
int
fwait
xor
stc
sbb
and
fdivrp
dec
xor
or
lods
mov
mov
jbe
pushf
andb
jb
xchg
out
sbb
test
add
adcl
cmp
rcrl
loope
add
jns
sbb
repz
mov
in
fs
xor
fidivrs
outsl
lods
mov
cmovns
rorb
push
or
dec
divl
or
dec
xorl
stos
int
pop
aaa
xchg
pop
xchg
xchg
loop
fimull
stc
les
out
aam
call
push
dec
cmp
test
cli
adcb
xor
cmp
jmp
incb
mov
cli
in
pop
push
arpl
repnz
incl
scas
push
mov
test
test
imul
inc
pushf
in
pop
ja
cld
fstpt
fstpt
mov
inc
mov
incl
lret
mov
stos
mov
std
rcrl
xchg
jecxz
push
xor
lods
xorl
aad
mov
inc
fcoms
inc
jge
or
popf
outsl
movsl
into
cmp
aad
lcall
xor
mov
ficomps
das
push
mov
jecxz
aam
lcall
in
scas
fldcw
mov
mov
repz
push
push
xor
xchg
dec
in
sub
loope
push
out
dec
and
jecxz
outsb
in
in
in
ljmp
cwtl
cli
cs
bound
imul
or
mov
inc
imul
xor
sub
subb
mov
push
cld
lods
std
outsl
shll
xor
pushf
jo
xlat
pop
and
lods
xchg
addb
jae
push
sbb
mov
aam
pop
test
jne
lds
mov
xor
lsl
mov
cmpsb
fnstcw
stos
push
fildl
lds
mov
ficomps
loop
test
sub
aaa
jg
mov
sub
adc
push
outsl
sbb
stos
loopne
mov
push
test
sahf
in
lret
sub
insb
inc
out
pop
ja
sbb
aas
addr16
jmp
xor
mov
jg
or
shlb
shr
test
fidivl
testb
inc
nop
das
mov
and
mov
jmp
les
andb
pop
pop
addb
inc
mov
idiv
leave
inc
push
lret
jmp
pop
and
add
mov
adc
daa
data16
cmp
sub
pmulhuw
inc
popf
inc
inc
mov
push
mov
or
lret
ret
adc
and
pop
xchg
sbb
std
xor
in
stc
out
cmp
out
out
fxch
mov
jle
fwait
les
daa
push
mov
jb
pop
or
dec
shr
dec
jp
leave
ss
orb
outsb
xchg
in
xchg
out
mov
xchg
mov
clc
mov
sbb
cmpb
in
xchg
rorl
mov
dec
inc
and
cmp
pushf
orl
icebp
roll
cs
and
pop
out
cld
xor
pop
test
imull
mov
aas
dec
movsl
push
add
inc
daa
mov
sub
stc
jb
mov
jle
dec
stos
shll
popa
mov
cld
loope
outsl
mov
cs
in
hlt
xchg
adc
in
mov
jl
push
inc
dec
je
sbb
push
or
fucomp
xor
xlat
sub
adc
dec
push
xchg
xchg
sti
mov
and
mov
adc
mov
sbbb
inc
lea
fiadds
les
xchg
dec
dec
leave
leave
xchg
sub
repz
jle
jne
dec
pop
aad
ljmp
sub
and
push
out
mov
inc
test
add
mov
fdivr
fs
push
leave
rcl
pop
fstp
je
clc
out
inc
inc
mov
in
addr16
les
mov
sub
mov
sbb
or
push
cmp
scas
add
push
xchg
adc
dec
cmp
rcrl
insl
cld
jbe
jp
es
sbb
push
jns
ja
frstor
jle
out
loopne
fwait
idivl
movsb
push
repnz
in
or
cli
ljmp
clc
adc
jl
orb
pop
adc
xor
aad
out
xchg
push
jle
dec
jnp
enter
push
xchg
mov
out
cwtl
mov
dec
iret
xchg
push
in
push
addr16
pop
icebp
and
fdivs
sarb
mov
mov
mov
addr16
ds
fst
dec
pop
cmp
repnz
sub
adc
inc
les
jge
mov
test
pop
mov
aas
movsb
xor
pop
and
cmp
fcmovnbe
jno
stc
stos
mov
sbb
push
and
call
mov
dec
sbb
pop
push
paddb
and
and
dec
ret
mov
outsb
lock
adc
sub
and
push
pop
mov
lods
cmc
ljmp
xchg
xchg
fisubl
loopne
sbb
js
sub
out
pop
and
icebp
and
pop
xchg
loopne
jno
fs
push
test
inc
scas
jge
ret
pop
mov
ficoms
sbb
ss
fs
pop
push
jecxz
and
stos
pusha
mov
jmp
repnz
sbb
adc
sub
cmp
cmp
push
add
xlat
jmp
push
mov
xchg
mov
hlt
xor
mov
inc
push
xchg
xchg
xchg
stc
cmp
cmpsb
sbb
add
ljmp
es
jecxz
jno
in
icebp
cld
xchg
add
push
adc
pop
cmp
jno
outsb
or
add
rorl
dec
adc
push
loopne
add
bnd
jp
push
and
rcr
push
out
mov
jae
cmc
jmp
sbb
dec
or
test
inc
adcb
mov
push
das
xchg
nop
xor
std
sbb
mov
arpl
call
mov
mov
inc
pop
clc
lods
xorb
int
cmpsb
addr16
mov
push
ss
fs
test
ss
and
inc
mov
adc
xorl
andb
mov
add
stos
lahf
and
sbb
ja
or
xchg
shl
inc
or
xlat
and
xchg
and
sub
mov
std
sbb
hlt
outsl
scas
inc
jl
jg
pandn
xor
sahf
es
jnp
lock
pop
mov
insb
shr
nop
pop
jno
sti
repnz
les
sub
ret
or
adc
cwtl
cmp
xchg
jb
lock
mov
push
fs
ds
and
repz
jl
divl
test
fdivs
and
ja
push
and
push
dec
gs
fdivrp
loopne
mov
dec
or
pop
xor
ss
flds
xabort
dec
pop
in
jle
inc
or
repnz
in
xor
push
andb
jb
xchg
xor
xor
out
jp
or
xchg
scas
hlt
xchg
inc
add
andb
mov
ret
lea
ja
outsl
push
arpl
push
lock
cmp
fists
mov
in
test
dec
mov
mov
leave
mov
push
inc
push
xchg
cwtl
adcl
in
outsl
sarb
cmp
cltd
lret
mov
pcmpgtw
lock
pop
dec
cmpsb
xchg
push
xchg
outsb
outsl
mov
sahf
aad
inc
xlat
add
movsl
add
pop
lret
cmp
pusha
or
mov
pop
jb
cmp
cmpl
xchg
inc
xorb
int
and
lahf
mov
pop
cmpsl
stos
push
mov
pop
in
inc
add
mov
in
adc
and
imul
cs
jo
or
sub
jns
clc
stos
mov
push
out
dec
frstor
rolb
sbb
pusha
cmpl
sbb
fs
add
test
push
pop
jo
das
scas
push
mov
push
nop
adc
dec
dec
pop
int3
pusha
arpl
fnsave
pop
leave
push
dec
cmpsl
fwait
rorl
loop
ds
lcall
mov
jl
xor
inc
sub
enter
packsswb
clc
jl
fimull
sbb
push
mov
imul
jb
popa
fisttps
push
mov
push
dec
fdiv
lcall
push
push
int
xor
in
or
xchg
pop
repnz
dec
cmp
sbbb
mov
test
outsl
subl
cmp
xchg
jno
int
int3
scas
adc
test
cltd
psrlw
mov
push
stc
jmp
insl
jg
xor
lods
push
ja
shlb
in
xchg
add
dec
stc
scas
mov
leave
aad
rolb
loop
fwait
add
inc
ljmp
ja
call
fisubs
inc
mov
fcomip
inc
and
mov
cmpsb
daa
adc
mov
ret
xchg
or
xor
fmul
imul
lret
dec
loope
push
and
and
ret
or
sar
loope
movsl
dec
xchg
ds
sub
xchg
fnstenv
cmp
ja
xor
cmpsl
aas
fmulp
and
imul
jno
pusha
mov
mov
sbb
pop
mov
fists
fistpl
xchg
or
mov
arpl
ret
shl
stos
ja
mov
cmp
mov
mov
push
cld
mov
or
ret
scas
mov
mov
ficomps
pop
pushf
stos
mov
inc
or
lock
mov
ljmp
in
inc
xlat
fildll
rolb
xchg
movsl
insl
sbb
inc
cmp
sbb
in
das
mov
dec
fs
mov
and
push
popa
xchg
addr16
addr16
mov
mov
fwait
loop
mov
mov
mov
stos
into
leave
or
push
adc
xchg
repz
into
cvttps2pi
les
add
mov
je
adc
iret
fwait
std
xor
into
js
aad
movsl
loope
jg
icebp
leave
shl
lret
pop
xor
add
shrl
ret
lods
add
cld
push
idivb
cs
andb
xor
scas
jno
and
jne
daa
jl
das
das
or
adc
or
dec
sbb
xchg
pop
mov
cwtl
aaa
xchg
dec
add
jns
int
out
mov
out
sahf
adc
call
lea
jmp
or
and
inc
inc
into
cmpsb
sbb
inc
xor
in
xchg
lahf
mov
rorl
jecxz
and
pop
or
xor
ljmp
inc
lret
lret
fidivrl
cs
jb
add
out
jecxz
xor
dec
sub
lahf
pcmpeqb
xor
or
ja
mov
adc
sti
test
test
sub
dec
xchg
imul
inc
dec
and
mov
lds
cmp
add
xchg
push
int
mov
gs
inc
in
scas
or
xor
xor
loopne
arpl
int
or
ret
mov
rcll
jge
mov
stos
mov
cmc
out
popa
jb
mov
jo
popf
inc
out
jne
fwait
arpl
inc
mov
jnp
ja
jecxz
lea
fisubrl
addr16
sub
dec
jmp
cs
mov
pop
scas
mov
das
insl
inc
jne
add
mov
ja
into
pop
pop
jne
in
pop
int3
cltd
sbb
jbe
add
xchg
stc
movsb
fnstsw
inc
jmp
out
cmp
push
push
mov
mov
mov
mov
adc
dec
mov
xchg
pop
andb
lods
gs
ss
fmull
jo
jg
js
xchg
test
and
jnp
xor
add
out
jae
insl
xchg
pop
inc
add
xchg
xchg
xchg
push
imul
jne
test
mov
pushf
arpl
sbb
dec
pop
mov
clc
popa
sbb
pop
arpl
idivl
mov
and
mov
cmp
arpl
rcrl
sub
sti
lahf
jns
cmp
push
push
inc
rol
loop
mov
add
cmc
fcompl
int
sub
imul
shlb
lret
lds
cmp
test
xchg
jge
mov
mov
xor
outsb
mov
pop
daa
jl
inc
out
mov
ret
idivl
aas
and
inc
dec
insb
cmp
aam
fsubrl
lock
add
mov
fucomip
data16
or
rorb
mov
push
lods
ljmp
enter
pop
xor
cmp
js
mov
hlt
loop
in
jg
outsl
mov
cli
push
in
push
enter
or
sub
dec
inc
jne
in
lahf
cmpsb
xor
gs
jmp
mov
xor
fs
sbb
xor
xchg
es
inc
test
cmpsb
push
jge
and
mov
xchg
mov
push
subb
pop
es
and
xlat
pop
add
or
add
hlt
pop
sti
std
mov
inc
xchg
pop
call
test
fisubs
jle
inc
in
or
push
aas
mov
jmp
pop
loop
and
hlt
ja
cltd
pop
dec
inc
sbb
fs
adc
dec
jl
aas
icebp
and
test
jo
sub
jnp
movsl
gs
add
in
insl
fsubp
rcrl
xchg
xchg
add
push
and
push
test
adc
test
jecxz
fildll
fidivs
xchg
jne
movw
mov
ljmp
sub
insl
xor
sub
mov
in
mov
push
mov
popa
rclb
in
mov
jno
mov
fstps
loope
xchg
push
jl
aad
pop
movsl
mov
mov
jo
mov
push
lods
lock
or
stos
mov
shrl
and
insl
push
lret
xlat
das
push
sub
in
cmp
sbb
push
push
into
test
into
cmp
push
mov
ret
inc
daa
clc
jl
fs
arpl
jno
mov
data16
or
test
sbb
outsb
push
ret
pop
dec
mov
inc
jmp
jecxz
sub
ret
dec
das
stos
in
and
ljmp
or
test
movsb
xor
jle
cmp
sub
sti
push
out
inc
pop
jmp
cmp
cmpsb
mov
or
out
cld
scas
push
sub
cld
add
loopne
call
fistl
mov
dec
imul
push
pop
sub
sbb
das
push
mov
ds
fs
lea
je
inc
sbb
and
cmp
xor
mov
jne
or
cmpsb
lods
sti
xchg
sbb
fwait
bound
roll
inc
sbb
inc
pop
xlat
lret
and
sub
or
adc
pop
add
popf
sub
leave
dec
iret
jecxz
ret
push
jno
push
xor
sub
fs
sti
cmp
jae
rol
out
jnp
adc
add
add
je
push
loop
jle
in
in
pop
aad
xor
jecxz
jecxz
sbb
pop
cmpsb
or
mov
xor
loope
xchg
push
jne
or
insl
stc
das
lods
cmpl
sbb
push
jbe
std
fs
andl
xchg
rolb
xor
shrl
or
pop
adc
dec
push
and
sbb
test
out
leave
inc
sub
and
push
test
in
inc
jg
xchg
fdiv
xor
add
jae
push
mov
or
rorl
cmpsb
add
xchg
sub
les
cmp
add
call
jnp
and
dec
out
push
icebp
cmp
mov
outsb
mov
cmp
in
push
cmpsl
dec
dec
add
or
mov
cli
repz
jae
mov
xchg
stc
sbb
test
cld
lret
in
sub
push
xchg
lret
js
inc
add
aaa
loopne
or
xchg
scas
add
push
sarl
adc
or
ljmp
gs
iret
and
test
inc
mov
scas
jno
cmpsl
mov
cmp
lods
fcmovu
sub
popa
xchg
test
mov
cld
jno
xor
sub
pop
and
mov
sbb
outsl
push
mov
inc
movsl
les
jne
xor
lret
or
mov
jns
push
inc
testl
push
cmp
pushf
dec
mov
fcom
mov
subb
fbld
xchg
xor
sub
lods
push
ss
add
insb
fisubrs
xorl
pmaxub
mov
add
lods
cmp
and
push
movsb
int
or
cltd
stos
pop
fwait
ljmp
lret
or
lret
adc
jae
cmpsb
inc
in
loopne
mov
dec
mov
push
lds
out
dec
cmpsb
scas
jno
jno
data16
jmp
not
mov
mov
inc
gs
mov
mov
mov
xchg
das
push
cmpsl
cmpsl
rcr
cmp
out
out
xchg
stos
ror
mov
dec
sbb
mov
scas
fcoms
cli
add
fbstp
push
jbe
in
rcr
mov
test
insl
fs
xchg
push
xor
cmp
inc
sti
ret
cwtl
or
xor
xchg
lret
movsb
xchg
cmp
ljmp
fadd
ret
push
jbe
pop
sbb
push
mov
mov
hlt
cmp
jl
insb
out
pop
push
sub
shlb
adc
cmp
xchg
out
lea
pushl
pop
es
test
mov
cmpsl
xchg
out
aam
mov
cs
mov
mov
sub
pop
inc
das
es
fistl
pop
or
movsb
pop
hlt
add
rorl
jmp
push
push
jmp
sub
push
pop
lock
imul
push
xchg
ret
or
xor
insb
dec
xchg
push
mov
dec
jge
mov
sub
or
cs
or
into
dec
add
loopew
push
dec
pushf
mov
aas
cld
xchg
nop
pop
cmp
jnp
and
lods
into
data16
rcll
fistpl
jnp
test
xor
stos
shlb
or
pusha
inc
mov
cmp
js
mov
subl
pop
mov
int3
sub
jg
int3
cmp
fcomp
and
fldenv
jl
dec
es
ds
dec
ljmp
jmp
pop
sbb
aad
and
xor
dec
jb
xor
aam
into
sub
push
jge
aaa
jmp
stos
mov
fists
lock
sbb
sbb
icebp
push
lea
cmp
cmp
add
mov
push
lret
cmp
pop
enter
push
pop
je
mov
mov
dec
jmp
cld
ficompl
xchg
ror
inc
call
xor
add
mov
mov
mov
xlat
notb
clc
les
mov
nop
xchg
jns
cld
or
cltd
aam
out
test
outsb
inc
subl
ret
push
test
arpl
mov
push
imul
daa
pop
enter
test
mov
neg
mov
cld
or
jb
sbb
jmp
inc
dec
cmpsb
and
lret
mov
mov
mov
pop
add
leave
clc
imul
dec
sbb
enter
ret
bound
rorl
dec
cwtl
sbb
out
adc
repz
dec
jb
test
xchg
mov
loopne
jne
jnp
cmpsb
lock
add
mov
and
push
jno
sub
sti
mov
arpl
add
push
stos
mov
inc
pop
ss
in
pushf
mov
mov
sbb
shlb
fstps
in
cmp
shrb
dec
cltd
xor
insl
shrb
or
sub
fstl
cmp
or
psubw
shll
in
or
test
jmp
mov
mov
adcl
aas
sbb
jns
xchg
push
jns
xchg
lcall
movsb
test
xchg
mov
mov
mov
inc
in
loopne
mov
jbe
hlt
mov
push
inc
xor
pop
ret
push
pop
mov
mov
xor
cmp
push
mov
cltd
test
int
adc
pop
lock
jg
rclb
das
scas
inc
icebp
mov
inc
pop
sbb
xchg
adc
xor
ds
loope
or
mov
and
insl
loope
std
inc
fwait
xchg
cmp
rcr
fisubrs
jnp
sub
pop
mov
and
cmp
lcall
mov
imul
dec
loop
xchg
add
stos
add
nop
frstor
and
lret
cmc
mov
sub
xchg
jbe
xchg
adc
lahf
lret
mov
rcl
mov
test
aad
jg
and
push
push
jb
shll
mov
mov
das
ret
test
mov
ds
es
ss
mov
cmp
mov
inc
xlat
mov
dec
push
add
sub
mov
cld
popa
cld
sbb
fwait
xchg
das
inc
mov
xchg
mov
mov
mov
cmc
push
aam
mov
xchg
nop
adc
add
arpl
int
mov
mov
jl
fs
jns
dec
orl
push
mov
int3
inc
xchg
repz
xor
mov
iret
repnz
pop
push
mov
xor
mov
sti
push
xchg
jp
sbb
xchg
and
sub
addr16
or
jp
jg
dec
into
cs
push
in
out
aaa
xor
inc
pop
clc
roll
out
adc
icebp
jmp
sbb
push
sbbb
or
sbb
rcrl
xor
lods
fidivs
and
xor
cmp
push
popf
mov
adc
mov
sub
insl
jb
pop
jo
mov
mov
adc
mov
adc
add
jb
jge
ja
icebp
stos
dec
inc
dec
loopne
int3
sbb
js
xchg
js
mov
nop
lahf
pop
jne
add
arpl
mov
push
sub
sbb
cltd
push
mov
mov
cmp
cmc
jecxz
mov
mov
mov
or
inc
dec
cmc
jmp
lahf
test
jg
jbe
adc
out
mov
add
into
push
popa
mov
push
dec
ss
repnz
mov
jne
dec
xchg
fcomip
sub
bnd
aam
out
subb
pushf
push
mov
dec
jge
sbbl
enter
cwtl
ljmp
push
fsts
push
mov
arpl
jne
insl
inc
mov
loop
repz
jg
dec
mov
fsubrs
sub
leave
jecxz
mov
sbb
push
shr
ljmpw
push
cmpsl
cmp
and
je
pushf
xchg
ja
push
test
cwtl
jno
mov
test
lods
jmp
ret
fsubrl
adc
push
test
xor
roll
xor
and
sti
mov
ljmp
xchg
addl
mov
cld
inc
int
adc
push
in
adc
adc
xchg
sub
out
dec
and
test
int3
repnz
lds
cmp
jp
mov
adc
icebp
push
push
push
push
lods
push
sarl
ja
sub
xor
loop
lret
inc
out
stc
cmpsl
int
lahf
std
push
outsb
mov
sub
mov
xor
scas
ljmp
mov
xchg
sbb
jne
rcrl
mov
xor
jb
jae
arpl
test
icebp
icebp
mov
shll
out
pop
ljmp
sub
cmp
sbb
stos
test
push
arpl
cltd
cmpsl
loop
sub
jns
js
popf
sbb
test
mov
scas
pop
cli
pop
push
and
pop
push
cmpl
nop
test
int3
out
and
push
int3
aam
mov
movsb
fiaddl
ret
xlat
movsb
push
fcmovnbe
clc
and
jge
add
cmc
push
rcrl
lret
inc
sahf
cltd
stos
push
lret
mov
mov
ljmp
and
inc
icebp
dec
aas
and
rcrl
adc
sub
mov
jb
xchg
add
sbb
push
mov
pop
cmp
lods
movsb
or
push
call
ljmp
aam
mov
cs
iret
popf
push
jecxz
inc
cld
js
jae
cld
dec
cs
xchg
loopne
pop
cltd
lods
flds
mov
nop
movd
bound
or
mov
sub
out
lahf
shlb
xchg
into
subb
cmpsb
or
dec
jmp
clc
shrl
xor
adc
push
idivb
or
mov
jl
cmpsl
inc
out
aam
cmp
push
mov
fdivr
test
sbb
adc
adc
mov
enter
mov
jl
inc
and
jae
add
mov
jge
inc
nop
repnz
push
stc
lea
adc
std
mov
pop
jg
stos
repz
movsl
jbe
insl
in
xor
ret
clc
stc
cmp
xchg
xchg
sbb
sub
mov
lcall
mov
loopne
cmpsl
jecxz
inc
sub
fcom
stos
in
push
pop
dec
adc
inc
rcr
nop
rolb
pushl
leave
lahf
xor
test
call
adc
and
push
push
jmp
in
divb
mov
xor
fwait
jb
mov
loope
shll
movsb
cmpsl
popf
test
insl
mov
sbb
imul
inc
xchg
imull
pop
add
imul
pop
mov
fildl
dec
jp
mov
sbb
add
cltd
mov
jmp
js
xor
sbb
imul
push
ret
adc
push
inc
sbb
movsl
sti
out
ja
movsb
push
jp
inc
pop
mov
arpl
dec
xor
push
and
je
push
adc
dec
jbe
adc
xchg
test
add
mov
cmp
inc
test
mov
mov
stc
popa
jno
out
out
add
cmpsl
out
mov
xor
pop
loope
in
aam
add
test
fcos
cli
loope
xchg
out
movsl
pop
mov
xchg
xchg
adc
in
pop
pop
mov
push
rorb
out
outsl
push
push
int
dec
iret
ja
cmpsl
and
pop
mov
and
inc
sarl
rcrl
jle
sub
jecxz
jno
scas
sbb
xor
mov
shrl
dec
cs
or
insl
popf
and
mov
mov
es
nop
or
cmc
push
into
push
dec
clc
lret
dec
mov
jle
add
push
repz
cwtl
loop
xchg
jnp
add
adc
test
pop
jo
xchg
mov
sbb
add
sbb
mov
push
or
pop
pop
leave
cmp
xlat
xor
adc
jge
int3
cmp
add
xchg
sbb
shll
and
adc
mov
or
repz
pop
jae
mov
data16
int3
pop
mov
popf
lods
js
sbb
cmp
push
add
mov
test
pushf
sub
xchg
jecxz
stos
pusha
push
std
in
loopne
cmp
push
xor
aas
mov
lcall
xchg
sub
sbb
lahf
pusha
mov
mov
jg
jne
and
lods
push
lods
sub
stos
bound
lahf
push
push
pop
insl
in
pop
orb
testb
jb
add
mov
pop
pop
sti
shll
repz
negb
dec
inc
adc
int
cmp
pop
or
xchg
push
sub
in
cwtl
stos
mov
lock
and
xchg
enter
mov
leave
imul
or
jg
pop
lret
je
mov
gs
popa
aam
and
jle
sbb
ljmp
jae
pop
adc
add
pop
mov
inc
cmp
and
shrl
subb
and
scas
filds
addr16
pop
pop
ficoms
rol
mov
mov
cmp
icebp
adc
mov
fimull
pusha
jnp
fiadds
pusha
sub
sar
xchg
test
cmp
popa
xor
dec
in
adc
and
in
inc
cltd
pop
jmp
add
fidivrl
sar
add
loop,pt
repz
or
clc
cmc
push
sub
test
int3
push
lea
arpl
dec
flds
mov
or
rorl
movsl
jl
dec
cwtl
add
out
jle
cmc
shlb
sbb
lahf
divb
ds
push
sub
dec
jmp
jno
sbb
stos
lea
int3
pmulhuw
cmpsb
sbb
add
cld
push
fisubl
lds
out
stc
imul
mov
repnz
push
out
bound
push
or
loope
mov
popf
xchg
cmp
mov
dec
sub
dec
pop
leave
pop
std
bound
mov
mov
lods
lret
loop
pop
jl
sbb
push
push
ja
and
movsb
jbe
js
sub
call
test
pop
fwait
test
faddp
lods
pop
pop
test
jae
and
mov
jge
sbbb
dec
push
pusha
bnd
add
add
mov
lahf
xchg
push
jno
ljmp
test
int
add
bound
pop
subb
sub
cmp
push
cli
repnz
sub
rolb
outsl
dec
jno
add
fsubrs
rdpmc
jne
repz
cld
in
dec
cmp
dec
stos
mov
fisubrl
fidivs
addr16
aam
roll
adcl
mov
lds
xchg
call
cmpsl
pusha
xor
into
cli
fnstenv
pop
popf
add
fidivrl
add
fildll
test
xchg
daa
fcmovb
jg
push
and
push
stos
ffreep
ss
lock
ret
inc
dec
push
dec
push
xchg
or
cmp
or
xor
lods
mov
fwait
xchg
insb
mov
mov
pop
push
shll
sub
mov
shrd
sub
inc
outsb
in
lret
pop
lret
xor
cmc
or
fisubrs
test
jge
xor
in
jl
sbb
push
lods
lcall
std
clc
xorb
ljmp
ret
mov
mov
lock
add
push
movups
and
push
ljmp
xor
bound
or
ret
loope
push
xchg
or
adc
push
push
dec
or
dec
shrb
jno
popl
mov
mov
in
adc
xchg
test
pop
add
mov
push
or
bound
mov
shrb
cs
xchg
leave
mov
imul
ja
lret
in
xchg
mov
pusha
pop
and
jno
push
jbe
inc
and
repz
adc
lea
fdivrl
fiadds
jnp
adc
inc
fs
push
into
jmp
fs
xchg
xchg
sub
push
adcb
push
or
or
add
xchg
out
push
rol
inc
sbb
fwait
xor
in
push
pop
xchg
push
jecxz
jp
ret
std
sahf
aas
ret
fwait
mov
dec
cmp
cld
push
inc
pop
cmp
xor
cmpsl
lock
or
in
jo
xchg
or
ja
jecxz
jp
insb
aad
rolb
lods
fsubrp
push
cmpsb
add
lahf
jge
aad
test
rolb
jp
repz
mov
xor
ja
stos
aas
lea
icebp
adc
cmp
and
int
out
popf
xchg
lret
push
stc
adc
dec
mov
jae
test
mov
incl
pop
mov
sub
cli
mov
pop
xchg
cmc
mov
out
jge
shlb
dec
test
jnp
call
es
xchg
push
rorl
cmp
push
add
mov
push
mulb
lock
ret
sbbb
imul
cmp
adc
mov
int3
xor
out
jle
fxch
push
sbb
in
inc
test
cmp
mull
push
jnp
sahf
push
mov
data16
inc
int
es
sub
sarb
hlt
inc
aam
sarb
adc
mov
repz
imul
jae
ss
call
jl
enter
sub
and
sbb
scas
mov
cs
nop
mov
add
mov
mov
cmp
cmp
mov
out
popa
rcll
fwait
cs
mov
lcall
aad
cmp
pushf
fdivrp
fnsave
sbb
mov
sbb
nop
cmp
sub
aad
insb
imul
adc
inc
ret
addr16
or
jmp
je
inc
test
push
es
in
in
movsb
mov
es
adc
or
and
pop
mov
push
test
cmp
lret
loop
jns
dec
mov
call
push
pusha
jnp
and
addr16
adc
inc
aas
sti
pop
data16
lds
addr16
dec
pop
divps
mov
push
gs
cmp
mov
nop
icebp
ss
das
aas
sahf
sub
int3
jnp
sbb
data16
lods
out
into
adc
adc
lcall
cmpsb
dec
mov
jne
ss
and
insb
cmpl
xor
pop
dec
pop
xchg
adcb
xor
fmul
fisubl
dec
cmp
mov
lods
pop
cmpb
stc
ja
mov
or
sub
sbb
inc
xlat
out
aas
jge
push
mov
adc
sti
pop
sar
or
adc
fistl
mov
cmp
add
fistpll
inc
cmp
cmc
pushf
or
push
es
outsb
icebp
pop
mov
leave
sub
bound
nop
lock
imul
sub
adc
dec
je
pop
ret
arpl
or
sti
push
mov
mov
jl
fildl
subb
insl
or
xor
sahf
mov
ret
jae
popa
jbe
push
sub
dec
es
hlt
pusha
xchg
aad
in
pop
stc
popa
push
iret
sub
mov
pushf
pop
es
nop
mov
cmpsb
pop
fwait
cs
fcmove
cmpb
cmc
inc
mov
stos
sarl
pushw
ljmp
test
jbe
jle
in
cmpsb
mov
cmp
leave
sbb
jg
xchg
cmp
jp
gs
xorl
or
lods
add
mov
test
stos
push
addr16
jo
insb
loope
cmp
loopne
rorl
inc
pushf
mov
aaa
sub
mov
insb
jnp
dec
adc
jb
add
roll
push
xchg
cmp
adc
ret
or
jns
fistpll
jno
jbe
dec
repnz
js
enter
dec
mov
add
pop
ljmp
shl
dec
fsubrl
out
fstpt
inc
inc
mov
insl
pop
dec
in
dec
repz
xchg
and
and
sbb
xor
jp
insl
inc
les
mov
adc
jns
cltd
popl
ret
mov
fimull
sub
mov
dec
loopne
ljmp
test
pop
or
gs
cmp
jg
mov
dec
cmp
out
int3
or
sub
xchg
adc
cmp
ret
loope
mov
jae
inc
aaa
leave
adc
aad
sbb
ror
ret
add
arpl
mov
jnp
mov
jge
es
jns
mov
mov
sar
jle
sub
bndldx
jae
inc
jb
mov
cltd
fs
sub
sarb
sbb
icebp
je
js
bound
hlt
or
fisubrs
jb
or
pop
in
inc
push
lret
insb
pusha
mov
mov
aaa
inc
push
subl
leave
or
inc
cmpsb
sahf
fsubl
inc
or
je
xor
pop
lods
hlt
into
aad
dec
sbb
dec
xchg
mov
data16
ret
push
int3
or
stos
insl
mov
mov
sub
dec
sub
pop
and
jl
movl
jp
insl
or
int3
mov
pop
mov
pop
jne
mov
les
push
lret
out
pop
mov
sbb
jb
scas
xchg
loop
mov
mov
dec
jmp
in
pop
lods
mov
dec
pop
xor
cmp
xchg
xor
inc
outsl
xor
sub
dec
pop
bound
add
nop
dec
jg
mov
cld
inc
clc
adcb
je
dec
scas
add
and
and
sub
cli
mov
mov
adc
popa
sete
in
and
test
popa
pop
stos
sub
cmp
test
mov
scas
xor
lds
push
scas
push
cmp
sbb
mov
cmp
jmp
lods
add
xchg
jecxz
rorb
out
popa
out
sbb
xor
inc
pop
or
push
cs
xorl
enter
fdivr
imul
pusha
jl
mov
add
stos
pop
fistl
push
hlt
repz
mov
jp
inc
int3
mov
rcll
aad
cmp
out
arpl
lea
dec
aad
leave
push
dec
pop
lods
inc
mov
stc
pop
das
inc
lahf
shrl
pop
push
dec
sbb
inc
xchg
push
jns
subl
cmc
loop
pop
clc
dec
addr16
ss
in
mov
pop
cmp
je
cmp
adc
sub
mov
mov
bound
lret
sub
jns
fstps
fdivrl
or
and
inc
ds
hlt
ja
mov
mov
repnz
dec
arpl
mov
rolb
mov
pop
lret
imul
cmpsl
jb
xchg
push
dec
repnz
xor
rcrl
out
insl
fisttps
and
sub
mov
and
jmp
lea
xor
jle
cmpsl
pop
insl
ja
fldcw
gs
into
xor
sub
lds
jae
sub
lahf
sbb
mov
pop
ret
xchg
outsl
ja
outsb
pop
cmp
notl
xchg
sbb
add
pop
frstor
lahf
adcb
jns
in
fistpl
fidivs
inc
vsqrtss
cmc
mov
out
jno
ja
cmpsb
sbb
pop
mov
cs
cwtl
xchg
mov
jbe
mov
js
dec
add
push
xchg
rol
sbb
stos
aas
cmc
xor
pop
jl
nop
inc
mov
inc
cmpsl
sub
fnsave
jg
xor
sub
inc
js
or
cltd
sqrtps
lret
lods
jae
sbb
jmp
or
ret
pushf
cmp
mov
sub
and
xor
add
xchg
sbb
push
leave
je
loop
and
xlat
add
lods
push
xor
push
outsb
xchg
adc
pusha
xor
aam
jle
stc
lcall
push
mov
xchg
cmp
mov
movsl
pop
jmp
sub
faddl
lock
rclb
xchg
subl
inc
xchg
xchg
outsl
leave
repnz
clc
shll
cli
mov
movb
insb
cltd
loopne
sgdtl
scas
nop
pop
jo
pavgw
dec
fwait
adc
in
sbb
cmp
loop
dec
push
or
lahf
dec
fiaddl
mov
insb
sub
scas
push
push
add
dec
mov
xchg
inc
popf
movsl
adc
xor
fisttpll
lock
push
mov
mov
jmp
push
int3
or
mov
dec
adc
and
mov
jg
add
lret
ljmp
sub
ret
xchg
in
ds
xlat
aad
popa
pop
ret
insl
je
outsb
sarb
xor
mov
addr16
inc
cltd
jp
push
dec
and
lock
push
mov
cli
jns
cmp
jo
jne
add
stos
add
xchg
fisubrl
loope
or
inc
fdivrs
das
test
xchg
lock
imul
or
test
ljmp
push
dec
into
repnz
mov
or
fwait
addr16
dec
add
xchg
iret
sbb
stos
clc
insb
jg
fwait
ds
aas
pop
or
jle
cmp
add
pop
adc
lea
in
xchg
movsl
nop
loope
push
jmp
xchg
dec
arpl
cmp
mov
out
out
ss
cs
ficoml
repnz
and
xor
mov
inc
mov
nop
ret
pop
fbstp
fxch
cmp
incl
sbb
xor
xchg
jno
cmc
push
adcl
mov
xlat
inc
mov
repz
pcmpeqd
add
les
mov
mov
jns
add
mov
inc
mov
cli
push
jecxz
outsb
pop
mov
xor
out
or
enter
add
xchg
xchg
ss
dec
popa
notl
xor
inc
mov
mov
aam
sahf
xchg
sub
mov
mov
ret
test
sahf
jns
mov
lock
sbb
movsb
or
xlat
mov
add
mov
lods
insl
daa
lcall
jnp
stc
push
mov
mov
xchg
bound
loopne
loope
mov
xor
xchg
fstpl
add
iret
in
pushf
jmp
aaa
aaa
das
xchg
and
xchg
push
ljmp
test
dec
pop
jge
mov
bswap
pop
or
ficoms
aaa
pop
lret
add
mov
inc
out
or
jnp
leave
jg
fisttpll
insl
dec
pushf
inc
ret
notl
outsl
rcrb
cwtl
mov
test
xor
add
xor
jle
cmpsb
fistl
lret
xchg
mov
pop
cld
add
gs
xchg
xchg
xor
bound
sub
aaa
sub
imul
mov
nop
movsl
mov
push
aam
push
pop
hlt
cltd
add
cmp
stc
sbb
mov
jb
lods
dec
cmp
inc
movsl
mov
std
dec
int
mov
bound
ss
aas
out
or
rcrl
sub
pop
mov
xor
mov
pop
mov
test
sbb
in
xor
adc
imul
add
outsb
cmp
rcl
out
xchg
sbb
out
adc
mov
jge
sub
imul
jb
in
push
jg
or
repz
pop
call
push
shll
aas
jl
shll
push
push
inc
clc
ljmp
inc
cmp
js
inc
lret
push
mov
out
call
fsts
xor
rclb
fcoms
cmp
mov
std
cs
icebp
sbb
cmp
pop
jl
xchg
shll
dec
xchg
push
xor
mov
jmp
ficomps
push
push
rolb
push
mov
inc
cmpsb
je
mov
and
xor
add
addr16
xor
cmp
orb
sub
or
dec
cwtl
jmp
mov
sub
fcmovnbe
arpl
jne
jae
or
adcl
adc
int
fnsave
outsl
mov
push
pop
arpl
lret
lock
mov
mov
iret
and
sti
clc
in
or
push
push
mov
mov
mov
fnsave
sub
jp
in
push
pop
xor
notl
insb
adc
sarl
aad
pusha
push
out
ret
cmpsb
ret
arpl
add
mov
mov
sbb
jge
cmp
jae
dec
cmpsl
into
std
inc
lods
ljmp
lea
orb
test
add
jmp
popa
adc
dec
pop
jle
jae
fdivrs
cmp
mov
mov
es
das
pop
addr16
dec
movsl
ss
and
push
arpl
fisttpl
mov
sahf
in
sub
daa
mov
add
jnp
sbb
cld
mov
adc
shll
stos
jns
add
outsl
jge
mov
fsubrl
lea
dec
mov
push
push
or
in
outsl
daa
test
dec
and
push
in
test
mov
sub
cmc
mov
jp
les
loop
sbb
push
arpl
inc
in
jmp
adc
outsl
add
unpcklps
push
loop
sub
mov
lods
and
cli
cmp
in
push
dec
das
cltd
icebp
imul
es
push
in
iret
aam
xchg
cld
push
or
in
mov
scas
sti
cmc
xor
mov
xchg
aad
je
xlat
cmp
rcrb
or
inc
pop
mov
rcl
pop
pop
inc
fildll
and
add
push
sbb
mov
rcr
stc
sub
sbb
jmp
lahf
pop
mov
push
cli
imul
mov
test
inc
adc
cld
and
out
mov
scas
pop
arpl
in
adc
xor
lcall
mov
pop
aas
dec
xchg
lods
jb
xchg
mov
cmpsb
push
scas
loope
sbb
mov
inc
std
xchg
clc
call
push
out
sub
mov
pop
leave
stc
jae
rcl
insl
aas
pop
lahf
lcall
sbbl
inc
xor
inc
sbb
enter
push
dec
shll
adc
dec
mov
jbe
add
int3
les
insb
fwait
fwait
add
sbb
mov
inc
xchg
arpl
mov
sub
ret
mov
sbb
repnz
jne
sub
mov
leave
fsubrl
sub
cmpsl
mov
sbb
ja
call
outsb
jo
scas
pop
repnz
into
mov
jp
in
jbe
xchg
movl
adc
xchg
jge
and
aas
rclb
loop
mov
lods
xchg
xchg
lret
icebp
mov
shll
imul
aas
sbb
jl
dec
outsl
dec
mov
pop
push
mov
push
ja
cmpsl
ds
dec
dec
es
jne
pop
lea
shr
xchg
test
shld
movsl
test
mov
sbb
mov
or
movsb
jge
cs
mov
jae
fwait
cmpsb
xchg
and
orb
sbb
mov
dec
inc
les
call
dec
les
xor
push
and
dec
das
mov
jbe
cld
add
movsl
fnstcw
scas
mov
sbb
insb
mov
cmpsl
out
and
ret
push
sahf
mov
pop
adc
int3
add
in
loop
aas
ds
mov
add
or
fisubs
mov
js
cmp
aad
add
inc
add
and
push
push
aad
stos
daa
mov
test
sbb
inc
mov
repz
test
popa
dec
push
push
xor
out
jp
jl
stc
or
loop
pushf
push
jl
xchg
insb
frstor
js
int3
inc
pop
mov
lods
or
mov
jecxz
inc
and
aas
inc
jle
sbb
lahf
mov
mov
rolb
cmpsb
xor
sub
and
mov
push
bswap
cltd
sub
call
mov
jo
fdivrl
inc
popf
inc
sbb
insl
jge
push
popf
and
test
aaa
cmp
and
insb
shr
mov
stc
xchg
mov
jns
iret
push
adc
movsb
das
pop
add
and
xchg
sbbl
mov
sbb
sub
lcall
xchg
imul
cmc
out
fistpll
stos
fcomi
imul
dec
call
mov
mov
xchg
ficoms
aas
lret
sahf
cmp
test
mov
js
adc
mov
push
out
push
xchg
mov
xchg
xchg
out
insb
shll
roll
xchg
cmpl
sub
popa
or
and
subb
addl
iret
shll
arpl
xor
mov
les
stos
and
xchg
adc
or
and
out
and
or
xorb
xchg
mov
jbe
dec
pop
ljmp
imul
je
mov
mov
cmpsb
lock
sub
dec
xor
out
dec
ffreep
in
xchg
jnp
test
test
insl
out
stos
mov
and
push
sbb
int3
sti
add
xor
cmp
and
mov
lcall
cmp
test
xchg
cmp
cmp
jg
pop
punpckldq
jg
lea
stos
bnd
dec
stos
mov
jnp
sub
mov
iret
lock
pop
daa
and
nop
dec
lret
test
mov
in
xchg
popa
dec
js
int3
orb
test
mov
addl
stos
add
fcmovb
push
inc
cwtl
sbbl
sub
out
pop
mov
stos
xor
pop
stos
add
frstor
jno
mov
loopne
push
and
mov
bound
inc
pop
insl
xchg
mov
ljmp
inc
rol
insb
mov
ficomps
mov
adc
movntps
mov
stos
mov
mov
decl
push
cmpsl
inc
shl
ret
push
pop
and
fsubrl
shrb
fwait
pop
fcompl
lret
xchg
mov
out
cmpsl
sub
inc
jbe
lock
push
xchg
cmp
dec
je
push
cmp
shrb
aad
daa
mov
lret
scas
dec
cmp
pop
push
daa
hlt
cmp
movsb
lcall
pop
inc
cltd
inc
push
push
sbb
sub
xchg
bound
je
bound
shll
sarb
xor
cmp
das
jo
mov
je
les
sbb
and
in
popf
cld
pusha
inc
push
and
mov
or
out
jns
sbb
and
ss
adcl
push
out
ss
jae
adc
cmp
add
je
out
xchg
addr16
mov
or
push
dec
adc
int3
push
mov
cmp
das
jnp
xchg
in
xlat
cld
adc
and
decl
pop
cmp
xor
dec
cld
xor
or
lds
add
andl
adc
ljmp
inc
in
jle
out
mov
push
adc
inc
adc
dec
jb
loop
test
jl
fs
jecxz
push
and
int
mov
or
or
int3
mov
sub
sub
mov
pop
push
fiaddl
add
jmp
cmp
mov
inc
addr16
mov
jne
push
mov
movsb
mov
mov
cmc
jno
xlat
pop
and
jns
hlt
xor
sbb
out
sub
int
aaa
and
loop
cmp
sti
or
fwait
mov
jae
bound
subb
scas
std
mov
shlb
sub
inc
int
and
mov
in
xor
aad
mov
push
imul
sbb
pushf
sbb
xor
inc
popf
sahf
or
adc
cmpsb
xchg
scas
iret
jne
aad
inc
int3
mov
rolb
test
dec
testb
mov
pop
xchg
lcall
jp
andl
xchg
sub
and
sti
cmp
and
enter
and
add
ficompl
mov
outsb
fdivrl
and
sbb
iret
mov
or
mov
xchg
sbb
jl
lods
xchg
jno
adc
iret
stos
scas
mov
cmpsl
jmp
pop
leave
dec
mov
add
loopne
sub
pusha
sub
xor
inc
into
jo
pop
jb
mov
or
dec
jge
mov
adc
mov
call
xor
or
or
mov
pop
cmp
mov
in
subl
xchg
lret
ret
sbb
rcr
loop
pop
insb
call
xchg
loop
jmp
mov
xor
push
out
mov
mov
xor
lret
lods
mov
mulb
fistpll
mov
inc
repnz
mov
fildl
jae
add
and
mov
and
sub
mov
sbb
lcall
xchg
out
dec
aad
mov
scas
popa
inc
or
or
lret
shld
mov
mov
mov
int
je
mov
sub
fimuls
xchg
pop
pop
pusha
xchg
test
jmp
xor
xchg
jne
dec
jnp
outsl
movsb
iret
imul
xlat
daa
inc
out
mov
stos
mov
mov
adcl
jge
add
test
stos
pop
out
mov
js
dec
inc
xor
leave
push
mov
dec
inc
mov
mov
xchg
lds
imul
test
cld
jecxz
inc
xor
iret
ja
adc
sub
cwtl
xor
out
sub
or
xor
fists
dec
sub
push
mov
pop
xor
je
adc
into
add
das
cmpsb
imul
sub
xchg
rclb
leave
repnz
sub
out
mov
push
mov
and
rcr
test
mov
test
aaa
mov
test
pop
mov
in
jae
xor
mov
sahf
scas
sbb
fsts
addl
jbe
jne
cmpsb
fdivp
xchg
jmp
xlat
jne
adc
out
cli
scas
inc
daa
add
addr16
lcall
clc
pop
loope
lcall
jo
aaa
lahf
sub
jns
or
xor
dec
pop
fwait
pop
or
daa
push
pop
lock
ficoml
fdivl
mul
mov
jmp
lods
jg
mov
inc
push
stos
rcll
sub
out
aas
ja
mov
mov
cmpsl
jge
mov
and
sub
rolb
daa
inc
push
js
adc
clc
sbb
mov
jg
jb
aaa
add
cmp
and
call
cmpsl
shrl
insl
xor
or
push
movsl
cld
sbb
push
xchg
lock
push
sub
jge
shll
and
mov
lock
xchg
mov
and
pop
kmovb
fbld
adcb
or
in
pop
cmp
mov
retw
cmp
stos
sbb
cltd
roll
mov
dec
outsl
pushf
dec
add
sti
popf
pusha
std
jbe
ficomps
dec
dec
jmp
fs
mov
insb
dec
xor
sbb
in
pop
ss
dec
mov
incb
inc
adc
mov
cmp
call
push
dec
cmp
add
pushf
ja
inc
jo
adc
mov
jno
mov
adc
fistps
sbb
imulb
aaa
and
and
lcall
and
cs
xchg
sub
sbb
cli
out
int
adc
xor
test
sbb
jmp
cs
icebp
pop
sbb
jb
push
in
lods
cmp
mov
cmp
or
ja
les
hlt
adcb
cwtl
mov
jmp
aaa
stc
aas
imul
and
repz
xchg
pop
fisubrl
push
xchg
adc
xor
insl
dec
js
into
rolb
leave
fldenv
mov
inc
xor
mov
sti
cmp
leave
imull
push
jmp
jmp
mov
mov
orb
hlt
repnz
jo
aaa
std
shll
repz
in
ret
fistpll
pop
mov
inc
inc
pop
or
cld
mov
out
mov
scas
pop
push
push
pusha
sub
idivl
iret
shlb
xor
jns
sub
push
dec
cld
mov
pop
sbb
xor
mov
orl
jp
mov
rorl
gs
pop
mov
pop
add
int3
das
hlt
popf
xor
and
jp
jge
fisttps
pop
in
jb
movsl
cmc
les
dec
xor
ljmp
aam
shlb
jnp
mov
cmp
lea
pop
add
inc
xor
inc
mov
sahf
lods
mov
pop
insb
rclb
push
xor
into
cld
or
dec
inc
push
enter
sbb
stc
stos
jb
fimull
mov
mov
inc
js
mov
xchg
mov
dec
or
fmuls
pusha
jo
scas
movsw
aaa
pop
xor
out
idivb
inc
add
jge
lcall
cmc
cmp
loop
lea
sub
xor
jl
call
xchg
or
adc
imul
pop
jbe
sbb
inc
pusha
cld
hlt
mov
dec
cmp
xchg
jge
in
into
rorb
mov
dec
inc
jns
inc
arpl
xchg
outsb
clc
sahf
pop
sbb
pushf
cmpsb
in
sub
test
daa
aas
mov
scas
outsb
inc
icebp
mov
push
xchg
incb
int3
fmuls
into
fistpll
int
arpl
cs
enter
je
fisubrs
sbb
faddl
mov
mov
jg
push
or
and
mov
cld
sbb
out
add
fmull
stos
adc
inc
neg
or
mov
push
add
int
mov
cmp
inc
pop
je
xchg
xchg
xchg
ret
scas
shlb
mov
stos
xor
push
adc
sti
testl
mov
push
cmpsl
outsl
and
mov
cmp
dec
sub
aam
test
or
hlt
xchg
arpl
xor
test
mov
sub
mov
xchg
fpatan
mov
dec
in
mov
faddl
sub
lret
xchg
cmc
adc
ja
pop
enter
add
enter
add
dec
sbb
cmp
punpcklbw
je
call
aam
test
jb
insb
inc
dec
sub
cwtl
cmp
cmp
lcall
sub
lahf
mov
divl
mov
notl
mov
and
stos
mov
xchg
mov
xor
add
stc
ds
push
add
xchg
or
fisttpl
orb
fs
loope
jl
cmp
pop
imul
cmp
pop
dec
aaa
and
sub
xchg
loop
jecxz
pop
leave
jecxz
mov
pop
dec
out
leave
pop
orl
test
scas
or
jge
ljmp
lds
push
add
rol
jge
out
or
ret
mov
shl
ds
sbb
xchg
mov
fs
or
aas
push
cwtl
movl
in
adc
push
inc
insl
push
xchg
inc
sahf
mov
push
jo
mov
adc
in
out
xchg
mov
inc
jl
inc
sub
fsubs
add
push
lret
gs
enter
jg
mov
jb
dec
cmc
dec
xlat
imul
cli
cmp
xchg
lret
cmp
pop
pushf
mov
add
cltd
or
inc
cmpsl
imul
inc
stos
mov
lahf
movsl
into
xor
mov
pop
pop
andl
adc
dec
xor
dec
cs
iret
divb
sbb
into
cmp
mov
dec
lock
ljmp
mov
mov
dec
int
sbb
sbb
shll
and
xchg
pop
mov
jns
and
inc
inc
xchg
push
inc
icebp
ja
xchg
and
imul
xchg
fcoml
popa
dec
pop
cmp
and
hlt
dec
mov
or
fsubs
jmp
jns
fmuls
aas
cld
mov
les
loopne
cli
ret
xchg
daa
sbb
xor
push
outsl
xchg
pop
jg
fwait
out
push
mov
data16
mov
int3
and
je
push
xchg
hlt
insb
push
push
out
push
sub
scas
add
dec
leave
push
lahf
sbb
js
sbb
inc
ja
sub
sarb
fimull
into
insb
adc
jmp
nop
inc
jnp
add
filds
push
sbb
out
xor
shlb
sbb
daa
pop
inc
sbb
in
sar
xchg
dec
scas
in
decl
insb
inc
pop
add
imul
aas
and
imul
push
test
pop
cmpsb
mov
sbb
js
push
mov
or
mov
xchg
jae
filds
popf
cmpsb
mov
mov
lock
sbb
cmp
sbb
and
jbe
es
adc
sbb
es
pusha
out
mov
rcrl
cmc
pusha
or
mov
stos
in
sub
loope
addr16
xchg
push
jbe
push
jcxz
cmp
insb
dec
mov
cmp
xchg
mov
outsl
mov
outsl
mov
cmc
xchg
popf
loopne
loopne
mov
pop
push
in
inc
dec
jae
aad
mov
pop
pop
lret
in
lea
lods
testb
dec
or
pop
nop
xchg
subl
jmp
mov
sbb
aad
pushf
jle
dec
push
sub
jae
sti
iret
jns
fisubrl
dec
xlat
out
mov
flds
jle
repnz
std
pop
xchg
jge
nop
pop
dec
lret
xor
movb
stc
xor
inc
mov
pop
inc
adc
mov
push
and
xlat
xchg
insl
daa
xor
sub
subl
aas
pushf
and
sbb
int
hlt
outsb
sub
xchg
fmull
shrb
add
push
sti
jae
sahf
xchg
mov
mov
aas
fiadds
xor
xchg
add
movb
fisttpl
jg
outsb
and
pop
arpl
cli
inc
mov
out
outsb
mov
fists
push
dec
call
jmp
xor
and
mov
movsl
push
mov
cmp
mov
sub
loop
jbe
jns
out
push
es
sbbl
mov
pop
or
cmpsb
dec
mov
in
add
dec
inc
cmpsb
inc
or
in
sarb
and
jp
into
test
leave
ret
insl
mov
mov
andl
adcl
pushf
dec
js
jle
out
ret
push
jp
bndstx
mov
xor
cmp
call
cld
rclb
adc
scas
js
leave
insl
shrb
loopne,pn
inc
jl
repz
jbe
mov
dec
push
push
inc
cmp
faddp
mov
dec
jno
dec
push
adc
fdivrp
add
dec
cmp
das
fsubrs
and
or
les
push
imul
adc
jbe
cmc
imul
mov
xchg
adc
aaa
fs
push
movsb
outsb
jecxz
add
mov
test
xchg
dec
rcr
dec
jp
in
push
sub
test
sub
mov
push
inc
inc
add
push
aam
add
xlat
outsl
les
testb
roll
jp
fidivrs
xchg
data16
mov
push
repnz
std
outsb
ret
add
adc
xchg
sub
jno
jbe
cwtl
inc
xchg
call
push
fistpl
adc
icebp
add
xchg
jmp
clc
insb
adc
mov
lahf
or
pop
xor
shlb
mov
pop
xor
js
fisttps
fistpll
jne
mov
leave
adc
flds
adc
xchg
ret
pop
imul
out
call
push
lds
fadds
imul
xor
imul
out
sub
mov
dec
jns
jno
aam
cwtl
lcall
push
mov
push
stos
mov
mov
sbb
inc
jl
xor
sub
cmpsl
inc
lock
xchg
in
xor
lods
xor
out
xchg
std
hlt
sbb
clc
mov
sbb
xchg
xchg
xor
pusha
jl
aaa
notb
rcll
dec
or
add
hlt
cmp
fildll
js
pushf
loope
into
inc
mov
sbb
or
jae
inc
mov
sub
loopne
repz
fistpl
jns
icebp
sub
outsl
fs
push
xor
subl
push
mov
xchg
push
inc
xlat
inc
lret
push
xchg
and
sti
push
in
in
mov
sti
lock
cmp
add
and
jmp
add
mov
adc
inc
in
jo
xchg
push
mov
inc
pop
scas
xor
sbb
mov
pop
movb
out
adc
fiaddl
mov
out
aad
mov
mov
ljmp
out
mov
jl
in
mov
aaa
decb
adc
inc
popa
sahf
das
in
mov
fisttpl
sub
cs
ret
loopne,pt
push
mov
push
aam
xor
jp
lret
lcall
repz
add
adc
mov
mov
add
sti
pushl
and
push
call
mul
call
pop
mov
movsl
cmpsb
pop
sub
in
dec
sbb
lcall
or
xchg
xchg
or
in
jmp
push
int3
sbb
lret
push
push
jecxz
stos
jae
sahf
mov
add
in
mov
add
ds
push
call
push
pop
test
clc
mov
fwait
cmpb
lret
mov
or
sub
hlt
cli
pop
inc
pop
or
xor
cmc
les
ss
and
push
loopew
data16
fiadds
add
ljmp
loope
popl
insl
mov
decb
fwait
rcr
lods
jl
xor
mov
fisubrs
lods
lcall
test
incb
lahf
cld
pop
ret
lea
mov
adc
outsb
push
repz
movsl
add
scas
lahf
or
mov
sbb
fisubrs
dec
dec
inc
shl
cld
sub
mov
repnz
cmpsb
rorb
outsl
lds
pop
jecxz
inc
cmpsb
mov
jne
adc
arpl
push
std
mov
cmp
ss
mov
movsb
rcrb
ljmp
call
or
inc
dec
and
paddusw
jecxz
jmp
mov
add
int3
inc
adc
mov
lock
jnp
inc
sbb
sub
push
fmull
int3
pop
pop
push
push
sbb
cmpsb
cmp
sete
xor
pop
outsl
sahf
dec
xchg
enter
adc
push
mov
mov
je
sbbl
xchg
pop
push
scas
pop
cmp
sub
les
mov
imul
add
push
inc
stc
mov
dec
push
sahf
shlb
lea
cwtl
in
test
pop
pop
cld
jecxz
or
jbe
ret
loope
aaa
xor
outsl
into
or
xchg
sarl
push
stc
add
push
fucomp
arpl
gs
fs
pop
stc
ficoml
xor
lea
xor
es
out
inc
xor
jne
or
jbe
jns
lcall
add
les
stos
push
cmpsl
xor
fistps
push
mov
fistl
push
jbe
repnz
jg
jo
iret
in
outsb
arpl
inc
mov
push
rcrb
mov
iret
shll
mov
pop
sbb
jmp
cmp
pop
mov
and
pushf
sahf
sbb
push
lcall
icebp
and
mov
xchg
inc
sub
mov
jo
dec
mov
cmpsl
pop
push
das
and
adc
ja
in
sub
cwtl
lea
add
ja
jns
mov
mov
and
mov
cmpsl
int3
lock
add
jb
push
jnp
movsl
cmpsl
add
sbb
dec
mov
aad
fdivp
rcll
lret
cmp
mov
sub
lret
cmp
sub
xchg
pop
enter
inc
jne
fwait
ja
jns
jg
in
xor
mov
cmpsb
adc
jnp
mov
or
cs
cmpsb
mov
out
aam
jg
pop
push
test
sbb
subb
cmpsl
mov
xor
dec
and
push
aam
mov
adc
fbld
cmp
ss
ret
test
testl
push
or
dec
pop
jb
shll
outsb
mov
cmp
xchg
jl
dec
js
xlat
bnd
pop
xor
lods
mov
pop
fistpll
mov
sub
mov
cmp
out
sbb
mov
inc
xor
mov
push
rcrl
dec
dec
int
pop
mov
xor
aas
sar
pop
ljmp
and
cmp
aaa
mov
add
mul
aad
shrb
cmc
inc
mov
and
and
cmp
shl
je
adc
out
push
mov
lahf
inc
lods
testl
add
pop
mov
jne
es
jge
lret
inc
imul
icebp
test
rol
jp
fnstsw
push
pop
iret
fnstsw
sub
push
cmp
inc
add
jae
push
pop
fnsave
pop
mov
jno
lock
mov
push
push
sub
sub
push
xchg
pop
ret
cli
mov
fnsave
add
test
xor
out
out
into
sbb
pop
pop
and
mov
and
mov
mov
arpl
add
fwait
xchg
jae
cmpsb
sub
xor
lret
rorb
dec
push
sti
mov
mov
mov
sti
sub
inc
das
pop
addr16
and
jmp
jbe
jns
popf
adc
sbb
aam
sbb
enter
cmp
dec
jno
icebp
test
lret
mov
mov
cmp
mov
push
inc
inc
loope
int3
dec
pop
pop
aam
imul
push
adc
jns
cmp
sub
pop
sub
mov
push
dec
pop
ja
loop
jns
sbb
imul
sub
rorl
mov
and
xor
pusha
lds
or
iret
movsl
sub
dec
test
cs
lahf
sti
jge
dec
and
mov
or
jnp
add
sbb
andb
daa
fcomi
or
pop
mov
lcall
repz
adc
loopne
es
pop
mov
lret
in
in
add
clc
fiaddl
xchg
push
xor
pop
lcall
mov
jns
lret
add
dec
mov
cmp
insl
and
ret
fildl
iret
push
stos
loop
xor
dec
gs
pop
sub
xor
mov
movsl
sub
outsl
lods
sbb
jbe
sbb
dec
cmp
inc
cltd
roll
adc
cmpsb
inc
adc
jmp
cmp
test
xchg
div
cltd
push
and
outsl
mov
daa
stos
test
in
pusha
mov
jnp
imul
dec
outsb
and
clc
adc
mov
loopne
je
call
in
mov
xchg
push
mov
xor
mov
es
dec
adc
int3
jle
scas
cli
xor
mov
jb
cltd
xchg
test
enter
sbb
dec
mov
jnp
aas
and
out
pop
lea
jo
add
sarb
push
inc
inc
fstpt
xchg
jo
scas
mov
test
sub
notb
call
es
fdivrl
pop
ljmp
xor
fwait
sub
push
aaa
stos
notl
addb
adc
popf
imull
imul
and
in
or
fs
mov
out
cmp
adc
xchg
pusha
lods
mov
xchg
xchg
and
adc
repnz
mov
mov
fs
popa
dec
pop
cmp
push
jns
mov
push
inc
mov
test
cmpsb
fsubrs
insb
mov
inc
mov
stos
in
stos
pop
push
ja
insl
jnp
stos
mov
adc
popa
popf
arpl
push
add
lret
imul
xlat
mov
sbb
dec
cltd
les
adcl
and
jge
xlat
mov
cs
jne
stos
mov
lret
add
out
je
aad
dec
lock
div
iret
leave
adc
dec
sbb
sbb
fucomi
adc
in
lds
jg
movsl
pop
jl
pop
inc
mov
rorl
xor
inc
jg,pt
dec
arpl
mov
data16
push
dec
jbe
test
ficoms
add
pop
fldcw
xorl
mov
stos
xchg
xchg
rcrb
adc
lcall
negl
cld
xor
push
stos
sub
jmp
lahf
push
popa
repnz
fistps
in
cmp
xchg
dec
xor
mov
xlat
push
clc
aad
mov
cmp
mov
ljmp
flds
cmpsl
fstpl
fisttps
bound
int
aad
arpl
mov
lahf
add
shrb
cmpsb
inc
mov
inc
mov
lds
push
mov
aad
add
pop
xor
outsl
add
xor
push
enter
ss
xor
sbb
aam
in
jge
mov
mov
orl
mov
jnp
push
mov
or
inc
mov
pxor
lret
lahf
jle
pop
cs
fildl
push
into
je
movb
fucom
add
test
push
and
pop
aas
push
daa
xchg
pop
ds
mov
lret
xchg
adc
lret
inc
addr16
shll
outsb
aas
es
stos
insl
clc
inc
sbb
jo
cs
cmpsb
cmp
in
add
cmp
dec
out
pop
push
shll
inc
leave
mov
ficoml
nop
cwtl
dec
inc
cmp
xor
addr16
dec
push
shll
rolb
mov
jg
cmp
sbbl
cmc
imul
xchg
lcall
cmp
cltd
add
mov
arpl
or
mov
aad
and
jne
fadd
test
sub
push
adc
jo
add
pop
mov
pop
xor
cmc
cmp
mov
xchg
pop
xor
jb
sub
addr16
scas
rclb
jns
mov
mov
pop
jle
lahf
lea
mov
in
xor
xor
mov
cmp
push
shrb
xor
push
push
sub
xor
scas
xchg
mov
xor
adc
pop
outsl
inc
fnstsw
rolb
jp
out
and
pop
stc
xor
sub
mov
pop
lock
lcall
adc
push
dec
xchg
mov
rcll
cmp
mov
in
repnz
inc
xlat
fdivrs
push
xchg
sub
jle
loop
idivb
adcl
mov
sbb
bswap
insl
into
addr16
jns
sahf
cmp
sub
cmpsl
mov
fsubrl
or
ficoml
jns
or
or
sub
jae
add
int3
andb
lret
sub
and
outsl
andl
push
test
add
lahf
das
cltd
je
data16
nop
bound
jo
push
jb
int3
test
jnp
xor
leave
jmp
aam
imul
adc
xchg
icebp
mov
xor
movsl
stos
movsl
push
clc
stos
in
ds
dec
mov
lea
test
and
nop
adc
add
pmullw
push
mov
insl
ljmp
jp
sti
cmp
es
repnz
jmp
pusha
add
lahf
mov
in
and
dec
xchg
mov
mov
mov
sub
loopne
negb
sub
mov
mov
sbb
jne
xor
das
or
pop
fldt
shrb
ret
lret
push
fcomi
add
xchg
push
arpl
or
dec
bswap
inc
fs
mov
pop
lock
xchg
sti
mov
push
add
outsl
clc
add
icebp
xor
imul
icebp
ror
add
xor
in
repz
xor
stos
into
mov
loop
pop
in
in
inc
mov
push
shr
ret
cs
push
or
mov
dec
test
dec
inc
gs
mov
jp
pushf
shl
or
add
pop
push
popa
andl
sub
sub
mov
push
push
push
jno
sbb
nop
sub
in
ds
mov
xchg
fbstp
das
sbb
ret
mov
loopne
das
imull
mov
iret
je
or
fwait
dec
xor
lock
icebp
xchg
jns
mov
mov
fiadds
loopne
jmp
cmpsb
cli
jns
jb
inc
or
rcrl
push
pop
or
or
inc
clc
andl
jae
adc
jp
sbb
popf
or
mov
data16
out
and
stc
sub
ljmp
test
pop
test
cmp
push
test
outsl
pop
cmp
mov
out
and
xchg
jb
inc
les
inc
ds
fmull
orl
cmpsl
minps
bound
pop
pop
or
xor
pop
dec
ficoml
movl
outsl
mov
pop
jae
call
inc
add
xor
jmp
sbbl
push
lock
add
mov
inc
rorb
or
cmp
into
mov
arpl
or
or
jmp
or
cltd
pop
mov
mov
inc
mov
or
and
sbb
cwtl
mov
popf
fldcw
out
es
sbb
push
aaa
sub
in
xor
loopne
js
sub
loopne
jno
imul
repz
or
push
dec
adc
or
mov
mov
dec
loopne
aad
mov
pop
cmp
and
or
adc
in
fsub
push
cmp
ljmp
xor
adc
sub
rclb
xchg
in
xchg
cmp
inc
daa
pop
scas
cmp
ret
in
cld
cld
into
lret
repnz
loopne
fdivrp
xchg
loop
mov
push
pop
pop
push
push
mov
addb
jge
into
jl
adc
sbb
out
jns
xlat
nop
movsl
ljmp
roll
cltd
roll
es
push
push
bound
enter
dec
or
cmpsb
push
cli
clc
cmc
stc
cmp
cmp
inc
loop
movsl
pop
std
adc
push
es
aad
xchg
cltd
xchg
mov
test
shl
je
mov
mov
dec
outsl
inc
jbe
xor
fwait
lahf
add
sti
mov
popa
xor
cld
cmp
push
jo
or
dec
pop
xchg
imul
mov
pop
fmull
or
jno
roll
scas
cmpsl
dec
call
push
fwait
add
dec
or
dec
or
jno
push
xchg
rcrb
sbb
cmp
lcall
inc
mov
popf
in
lods
cmpsb
pusha
imul
mov
add
mov
aas
pop
sbb
jl
sbb
xchg
mov
add
pop
pop
sbb
arpl
divb
popf
mov
fwait
enter
rol
sub
lock
stos
shll
jo
shrb
add
or
iret
sub
fcompl
jmp
repz
rcr
rclb
sbb
mov
loope
mov
add
mov
xchg
test
setle
gs
sub
out
pop
sub
nop
bnd
test
add
mov
adc
frstor
cmpsl
psubusw
cs
or
cld
xchg
mov
xor
cmp
loopne
xor
mov
mov
mov
lds
sti
fs
cmc
xor
cmc
nop
imul
mov
xchg
out
inc
std
je
pusha
subb
xor
dec
jle
ds
mov
inc
ja
hlt
pushf
mov
mov
je
dec
mov
cld
or
sbb
mov
test
dec
jl
mov
test
push
xchg
and
imul
das
ja
push
call
mov
jno
adcb
fsubr
mov
and
cmpsl
and
push
std
scas
cmc
test
or
pop
mov
icebp
aad
lods
inc
push
cmp
cwtl
pop
adc
lahf
cmpsl
xor
cmpsl
lahf
jmp
mov
out
cmc
and
ja
nop
test
sbb
xor
xor
add
jl
roll
inc
xor
jge
icebp
inc
cmpsl
jl
lods
mov
cwtl
sub
mov
push
and
mov
test
insl
mov
lret
inc
lods
lret
add
mov
jecxz
push
out
clc
fnsave
mov
inc
cmp
adc
rcrl
jb
cwtl
insl
pop
ljmp
sahf
and
pushf
insb
mov
adc
scas
ret
in
fildl
lds
mov
adc
int3
cmpsb
mov
add
push
push
mov
or
rep
outsl
in
fldl
xchg
aam
pop
out
jo
cwtl
lea
dec
add
hlt
stos
sbb
aas
mov
jbe
lds
outsb
out
dec
addb
add
mov
stc
adc
ljmp
stc
rclb
aaa
mov
adc
out
out
jae
pop
leave
push
add
sub
cs
add
or
mov
loope
push
mov
movsb
mov
or
lods
inc
rcr
jmp
int3
dec
mov
cs
mov
ds
push
mov
sbb
repnz
push
xchg
and
ret
xor
or
lds
push
adc
push
sub
cmp
jae
or
mov
mov
scas
ret
mov
inc
shrb
inc
out
imul
sbb
pusha
push
cmpsb
mov
xchg
movsl
jmp
push
outsl
push
into
pop
sub
cltd
inc
mul
inc
in
mov
mov
lahf
cwtl
sbb
scas
mov
mov
scas
clc
xchg
cmp
repz
pop
mov
dec
movsl
scas
mov
daa
mov
push
or
adc
fistpll
pop
or
mov
or
xchg
mov
inc
cmp
sub
hlt
jmp
mov
repnz
jo
push
push
frstor
push
xor
cmpl
push
std
gs
inc
lret
sbbb
inc
xchg
and
adc
das
adc
jae
mov
jmp
mov
and
ljmp
out
mov
mov
je
ds
cmpsl
mov
loopne
daa
sbb
cmp
and
sbb
aaa
pop
ja
sbb
popa
xlat
xchg
rol
xchg
or
cmp
hlt
sub
or
jle
mov
sub
out
mov
add
pop
or
push
jbe
mov
ret
out
jge
loope
jne
sbbl
call
adc
rorl
popf
dec
xchg
ja
hlt
enter
cmc
mov
pop
pushf
or
mov
adc
jo
jns
mov
leave
leave
mov
push
stc
dec
mov
jl
fnsave
sbb
mov
xor
in
pusha
aad
in
mov
mov
mov
fwait
jnp
push
hlt
lea
mov
movsl
jge
loope
ljmp
push
icebp
out
mov
pop
sahf
add
pop
rolb
outsl
mov
xor
into
mov
add
sti
xchg
test
add
test
ds
les
fcmovnu
adc
sti
loop
xlat
pushf
fsubl
inc
and
decl
loopne
mov
mov
xor
jae
push
std
rcrb
loopne
push
mov
dec
xor
lea
test
adc
add
rcrb
shlb
xchg
sbbl
xor
std
in
stos
xchg
test
shlb
cmpsl
mov
sbb
ss
jl
in
iret
jns
adc
adc
mov
push
arpl
inc
repz
imul
fsubrl
repnz
in
test
xor
clc
jbe
rolb
xchg
pop
movsl
outsb
outsl
test
dec
adc
gs
xchg
lret
jl
not
jnp
fistpll
pop
or
rcrl
test
insb
dec
xor
mov
movsl
negl
cld
dec
mov
mov
jnp,pt
sbb
cmp
dec
stos
in
testl
flds
or
pmaddwd
or
jo
inc
addr16
sbb
xchg
imul
mov
cmpsl
and
pop
pushf
roll
cs
fadds
mov
fistpll
testl
mov
mov
lods
hlt
mov
aam
aad
jo
pop
sbb
call
sbb
pusha
int3
stos
arpl
pop
add
mov
rol
jp
dec
jmp
jmp
adc
aam
js
aaa
sbb
divl
fiaddl
inc
imul
mov
cmp
lret
fldenv
xchg
mov
scas
pop
dec
sub
nop
insb
push
imul
adc
inc
xchg
push
cmp
add
lds
scas
ds
mov
dec
dec
imul
test
in
in
mov
dec
or
sbb
mov
inc
mov
pop
cmp
movsb
dec
or
jmp
lds
ds
xchg
mov
rcrb
xlat
lds
setb
mov
or
shll
pushf
adc
mov
cltd
inc
orl
fs
into
test
dec
lods
cmp
sahf
and
nop
ljmp
push
daa
fisubl
dec
test
xor
jle
mov
adc
mov
sub
int3
cmp
mov
jno
cld
pop
add
mov
inc
pushf
out
sub
mov
xor
hlt
xchg
push
pop
xor
movsb
pushf
xchg
leave
out
jmp
mov
les
int3
add
into
mov
testb
fidivrl
add
adc
pop
push
lock
mov
add
mov
xlat
outsb
adcb
fadd
mov
xchg
jnp
fs
push
ljmp
ja
add
and
lcall
cmp
adc
jmp
sub
sub
fdivrs
push
pop
pusha
xor
jnp
cmpsl
cld
insl
pop
cli
inc
push
mov
sub
inc
repz
int3
or
imul
sub
pop
jno
pop
xor
cmpsb
mov
mov
cmp
mov
sbb
cmp
popf
sub
add
popa
and
or
decl
xor
lret
adc
lret
xor
mov
cmp
cmp
imul
sbb
das
leave
shll
or
inc
cmp
jo
popf
jle
aaa
xlat
sbbb
push
into
mov
mov
or
xchg
fisubrl
cmp
stos
jnp
rclb
gs
popf
pushf
popf
fimuls
mov
rcrl
test
ljmp
out
cmc
dec
jmp
jecxz
shlb
add
or
mov
dec
loope
insb
fistl
aad
or
and
and
sbb
clc
jge
js
push
jecxz
jge
or
jae
arpl
cmc
lret
add
cmp
ret
stos
dec
mov
ja
push
cld
and
mov
pop
fimuls
lods
inc
xchg
push
mov
push
jmp
adc
aad
cmp
inc
add
and
and
fadd
test
loope
movsl
or
dec
sbb
sbb
out
lods
test
sarb
inc
sbb
mov
fiaddl
adc
mov
sbb
in
mov
jnp
push
ja
test
mov
xchg
jno
pop
gs
lock
jmp
dec
shl
jp
push
cmp
popf
push
inc
scas
outsl
js
movsl
movsb
das
sbb
test
and
jb
rorl
popw
inc
adc
orb
sub
dec
cmp
xor
xchg
lret
lret
mov
mov
je
jb,pt
out
popf
daa
and
mov
ret
and
push
and
in
lcall
das
pop
rcr
bnd
imul
popa
and
or
xchg
fstpt
cs
add
neg
jle
je
popa
inc
push
pop
lahf
fcomi
dec
bound
aas
xchg
push
lods
and
add
xor
movsl
stos
aam
sti
stc
sub
sbb
add
dec
push
stc
sbbl
jae
jno
enter
sbb
mov
mov
push
xchg
sub
mov
add
inc
loop
add
sub
movl
xchg
mov
mov
mov
in
sub
out
outsb
cmc
rolb
das
pusha
mov
fldt
lds
pushf
adc
mov
mov
and
add
push
dec
cmp
cli
mov
cmp
lahf
push
movsb
pop
jns
icebp
mov
push
push
mov
lret
sbb
pop
and
fdivrs
pop
dec
popf
icebp
pop
or
loope
je
aas
rorl
dec
pushf
mov
jge
int3
jnp
sbb
jo
sub
jnp
mov
repz
inc
je
or
iret
orb
push
push
push
sub
ss
and
push
outsl
lret
divl
incl
mov
push
push
pusha
int
sbb
xor
mov
aam
mov
jl
je
sbb
mov
xchg
outsl
fs
mov
add
pop
sbb
out
add
xor
add
or
lret
movhps
mov
jnp
xchg
push
or
xchg
mov
sub
aas
inc
adc
pushf
adc
jne
fnstsw
pop
push
fldenv
mov
add
mov
dec
add
stos
push
pop
shlb
xchg
orl
inc
add
scas
rcl
pusha
nop
fdivr
shlb
and
data16
adc
mov
std
ficoms
fsubrp
shr
add
xchg
gs
das
cmp
inc
sbb
shlb
sub
outsl
out
mov
mov
sarb
test
clc
aam
leave
jecxz
xchg
repz
mov
fsubrs
movl
xchg
bound
lea
shlb
adc
leave
repnz
lock
push
dec
fldenv
jge
pushf
leave
pushf
lret
cmc
adc
fdivrs
xlat
int3
pop
hlt
mov
pop
adc
sbb
dec
test
dec
leave
loope
jecxz
and
aad
repnz
lock
shll
adc
inc
jae
or
lods
ss
cmpsl
mov
jbe
mov
add
mov
adc
sub
lret
hlt
jl
add
nop
test
fnstcw
adc
cmp
call
push
xor
in
xchg
mov
mov
pop
adc
mov
jle
add
lret
push
stos
xor
mov
or
sbb
mov
xchg
jl
xor
iret
in
out
sub
test
fisttpl
test
jge
inc
sbbw
sbb
outsl
hlt
filds
sub
into
pop
dec
pop
loopne
ss
outsb
jnp
push
ljmp
dec
lcall
mov
loop
jno
in
movsb
out
mov
push
mov
fstps
popa
xor
and
adc
mov
mov
cli
cmp
dec
into
sahf
aam
adc
inc
mov
xchg
cmp
pop
add
sahf
fwait
stos
xchg
mov
decl
lea
imul
or
jecxz
mov
testl
inc
lds
in
adcl
cmp
inc
inc
push
and
mov
mov
jecxz
mov
pop
cmp
xorl
into
mov
push
lcall
loopne
fnstsw
cwtl
mov
cld
js
adc
repnz
cmpsl
inc
push
or
fstl
testb
pop
iret
jae
outsl
repz
jl
cmpb
sbb
pushf
outsl
dec
popa
cltd
jge
and
or
sub
mov
cmp
push
movsb
cmp
mov
lds
or
repz
sub
dec
outsb
add
mov
movsb
sbb
stc
movsbl
and
lods
mov
fbld
xor
in
addr16
mov
into
add
pop
xor
cmp
das
xchg
add
dec
pusha
jmp
shll
lret
sar
mov
inc
in
testb
addr16
arpl
in
vpcomud
add
xchg
sbb
sub
testl
les
rcrb
fbld
fs
ffreep
lahf
sub
inc
push
lcall
popa
adc
leave
inc
push
pusha
test
dec
lret
fadd
push
mov
cwtl
adc
cld
sahf
incb
icebp
sbb
jb
mov
movsb
inc
mov
inc
int3
add
mov
mov
outsb
inc
jp
ds
jecxz
jl
mov
inc
mov
movsb
jge
aas
mov
lret
cmp
xor
xor
lret
in
push
lock
adc
arpl
sub
ds
push
in
outsl
mov
rolb
and
mov
add
gs
cwtl
lea
das
cmp
outsl
mov
sarb
xor
imul
jl
test
out
xchg
pop
or
aaa
cmp
sub
cmp
dec
insl
dec
repz
inc
fadds
aam
add
das
les
mov
fs
hlt
mov
sbb
or
jmp
fidivl
into
fnclex
mov
sarb
sbb
lahf
push
mov
fwait
cmp
mov
sbb
add
add
add
jo
scas
movsl
adc
mov
or
mov
leave
pop
test
sti
imul
push
push
lret
sub
and
popa
push
jbe
mov
bound
or
fstps
inc
inc
in
test
mov
icebp
in
fadd
push
jno
js
insl
dec
jae
clc
std
inc
ds
adc
mov
sbb
movsl
cmp
cmp
push
push
adc
dec
inc
xor
lret
sahf
orl
push
jmp
fwait
add
mov
push
jnp
cmp
xchg
add
nop
jo
jle
pop
aas
scas
test
fcomip
xor
mov
ja
adc
mov
insl
dec
fadds
fcomi
push
pop
mov
sub
jl
repz
outsb
mov
cmp
dec
mov
mov
push
sarb
and
inc
cmp
and
sbb
dec
fbld
push
fcoms
ds
lea
cwtl
mov
stos
cs
push
push
push
jmp
inc
cmp
loope
enter
jg
adc
jb
in
lock
fs
adc
popf
cmp
mov
fldt
ss
push
std
or
sarl
dec
repnz
xchg
mov
pop
xchg
jmp
jnp
or
pop
scas
and
adc
xlat
pmulhuw
and
xchg
leave
test
outsl
and
xchg
push
and
jno
cltd
pop
int3
mov
lea
xlat
in
add
mov
cmc
mov
sbb
add
sti
pop
insl
stos
std
mov
insl
cmc
dec
daa
mov
ljmp
jmp
fistps
ret
xor
movsb
mov
popl
js
subb
mov
loopne
repz
mov
lea
popf
enter
mov
icebp
inc
mov
mov
dec
push
add
testb
xchg
dec
push
lea
mov
dec
call
push
cli
inc
adc
sub
gs
jbe
and
mov
es
mov
mov
fisttps
or
inc
add
sbb
and
dec
mov
and
addr16
rcll
pop
stos
cld
aam
push
inc
cmp
push
mov
xor
fnsave
push
lock
js
iret
lcall
lods
jecxz
jecxz
aaa
sarl
loop,pn
fbld
fdivl
scas
outsl
in
jne
mov
cmc
dec
and
inc
hlt
or
loope
xor
int3
sbb
lret
add
jecxz
fidivrs
in
sbb
pushf
fldl
clc
adc
mov
rclb
lcall
lods
pop
mov
jbe
dec
fs
les
pop
in
inc
sbb
adcb
xor
pop
mov
inc
and
xchg
mov
std
loope
or
stos
cmp
push
fxtract
bound
test
sbb
cmc
push
jp
ficoml
sub
lods
arpl
out
sub
dec
insl
out
mov
and
push
bound
ja
push
xchg
shlb
lds
outsl
js
daa
nop
mov
jns
pop
mov
data16
ret
and
inc
mov
pop
sub
xchg
stos
sar
dec
add
sahf
aas
cmp
jne
mov
sbb
push
push
jnp
jmp
aas
jb
sahf
push
cltd
ss
mov
mov
into
in
jmp
fnstcw
or
or
outsl
lods
sbb
lea
incl
int3
mov
push
add
mov
or
lods
in
cmp
or
mov
mov
pop
sbb
idivb
mov
std
lret
ljmp
mov
fcomps
sbb
pop
add
in
imull
adc
fwait
ja
jmp
jg
in
sub
push
inc
cli
pop
popa
push
mov
lcall
mov
clc
mov
mov
in
and
adc
and
mov
mov
movsl
rorb
testb
setle
loopne
dec
jge
jns
jmp
push
xchg
sti
sub
dec
xor
cmp
and
mov
jo
add
jmp
xor
cli
clc
fs
mov
dec
fs
aam
dec
loopne
fs
cmp
ljmp
add
clc
frstor
and
adc
mov
jle
jl
das
lds
ret
sub
inc
aam
lahf
or
popf
das
push
xor
adc
mov
lea
dec
pop
push
cmp
fdivrs
repnz
and
test
in
or
stos
jns
mov
pushf
test
add
xchg
xor
fildl
adc
jmp
xor
sub
add
lock
in
cld
mov
fidivrs
dec
jne
push
inc
or
fimuls
pop
mov
cld
sub
jnp
pop
jb
dec
outsl
lea
add
es
movsl
jbe
stos
sbbl
pushf
sub
xchg
int
inc
and
xchg
mov
jmp
lret
out
jmp
int3
les
inc
es
cltd
insb
sbbb
jecxz
movsl
test
sti
push
into
mov
popf
leave
popa
inc
add
rep
mov
std
sub
stos
or
dec
jo
dec
imul
pushf
xor
add
push
push
das
push
xchg
cmp
xor
xor
adc
inc
test
add
les
lret
sbb
xor
jp
mov
pop
push
lods
mov
adc
adc
imul
cld
cmp
dec
or
shld
outsl
fwait
ret
or
scas
ret
enter
bnd
outsb
sub
sub
lods
lods
dec
shll
sbb
cli
ret
mov
cltd
fnstsw
push
fucom
xor
sarl
pop
jle
pop
sub
mov
movsl
dec
cmp
cmp
xchg
ret
adc
ret
xor
lea
insl
aad
inc
pop
jnp
stos
pop
imul
push
rorb
imul
out
fdivl
addr16
mov
rol
xor
rolb
stos
fbstp
sbb
lret
sbb
fldcw
movsb
xorl
out
sbb
clc
mov
fists
xchg
int
out
movsb
inc
ds
jo
pop
mov
aas
push
and
mov
and
push
mov
insb
rorl
repnz
cltd
fldl
stc
daa
icebp
mov
dec
dec
int3
xchg
push
das
leave
mov
mov
and
in
bound
mov
add
cmp
xchg
jp
scas
push
iret
pushf
jg
addb
aaa
js
cmp
push
jg
pop
addr16
addr16
mov
ds
mov
jne
and
dec
icebp
and
mov
int
and
xchg
jno
add
dec
clc
dec
or
daa
cmp
loope
sahf
inc
sub
lods
out
daa
mov
xchg
mov
ret
inc
xchg
ficoml
sbb
dec
pop
dec
cmc
jno
cmpsl
clc
bound
cmp
or
ret
ret
xor
std
jecxz
insb
call
lret
xchg
jno
aas
test
add
into
push
mul
loop
addr16
pop
adc
and
inc
or
or
fildl
inc
dec
pop
cltd
out
adc
hlt
jecxz
scas
fstps
repz
mov
push
movsl
and
inc
ficomps
movsl
cld
sbb
xlat
cld
popf
jl
inc
or
je
std
jae
dec
int3
pop
cmp
dec
adc
sbb
mov
int
add
out
cmpsb
add
arpl
orb
movsl
pusha
jge
cltd
mov
in
sbb
or
pushf
nop
cmp
std
xchg
cmp
ja
pop
dec
xlat
incb
adc
inc
xchg
cmp
mov
jmp
stos
mov
jbe
and
clc
pop
loop
in
insb
pusha
or
push
fcomi
dec
pop
rclb
jnp
insb
popf
mov
fwait
xor
xchg
nop
aad
insl
mov
adc
and
sbb
in
std
push
fmuls
out
mov
bound
jae
cmc
pushf
aad
mov
sub
jb
les
adc
test
sub
cmp
xchg
xchg
xor
fmull
push
mov
sbb
mov
in
out
mov
repz
mov
int3
fistps
cltd
push
jmp
imulb
lds
or
mov
rorb
sub
mov
mov
jb
push
jo
mov
sbb
push
std
inc
mov
aas
mov
push
mov
cmp
xchg
pusha
mov
mov
cli
dec
adc
aam
ss
mov
jnp
lods
adc
pushf
ret
daa
add
mov
xor
push
push
fnsave
icebp
int
dec
mov
addr16
push
mov
fs
mov
jl
adc
mov
aam
dec
mov
pop
mov
mov
cmpsb
add
scas
or
mov
sub
call
into
push
cmp
or
xchg
dec
inc
sbb
cli
repnz
arpl
cld
sub
mov
xor
roll
mov
out
push
and
mov
fmul
jmp
hlt
mov
adc
mov
jmp
dec
lcall
ret
add
cltd
pop
jns
adc
cld
cmpsl
mov
pop
or
shlb
sbb
call
lahf
cwtl
xchg
inc
stc
repnz
pop
cmc
add
cltd
jae
cmp
cmp
aas
inc
dec
dec
sbb
loope
adc
in
cmp
fldl
lea
ja
mov
repnz
xchg
cmp
or
lcall
sbb
lcall
shl
push
les
pop
int
jmp
sbb
arpl
inc
movsb
scas
sub
cmp
out
sub
add
pop
or
adc
jno
insb
fiaddl
xchg
pop
sub
jbe
xor
fsts
sbb
mov
out
fsubrp
mov
mov
or
jg
xor
sbb
dec
imulb
pop
movsb
xor
pop
roll
into
ds
fsts
mov
arpl
pop
sub
push
cli
and
pop
cld
mov
loop
cmp
adc
lods
pop
mov
bound
lock
ja
imull
inc
js
mov
mov
pop
arpl
imul
inc
inc
insb
adc
mov
nop
or
add
xlat
xchg
jge
inc
and
push
insb
pop
adc
adc
btr
mov
sti
mov
outsb
sub
pop
sub
adc
cmpsb
mov
incl
fadds
lds
nop
lock
xlat
jg
shrb
add
cmc
jl
push
cmpsb
dec
in
push
sbb
or
or
fmull
jl
dec
out
adc
inc
movsl
adc
sub
pop
sbb
pop
inc
test
or
adc
mov
ljmp
jbe
insl
adc
ds
fcmovnbe
lret
dec
mov
les
push
push
insb
fldcw
std
mov
das
and
rclb
sub
add
push
outsl
mov
or
mov
cmp
lahf
or
dec
mov
sti
pushf
enter
imul
shll
adcb
popf
and
fcomp
andb
insl
or
mov
add
lret
xchg
add
data16
cmp
fsubs
aaa
mov
lods
or
mov
ret
push
or
or
call
push
out
jge
cmp
mov
and
stos
sub
or
add
out
pop
psrad
add
ds
add
push
inc
out
or
leave
pop
mov
movsl
test
out
and
inc
aad
repz
test
fnstsw
vmulss
fdivl
shl
cltd
rclb
dec
lods
pop
rorl
movsb
imul
orb
lock
xchg
adc
push
dec
imul
lods
mov
dec
add
popf
inc
ja
imul
rclb
and
add
adc
mov
push
cmp
in
push
imul
leave
inc
dec
add
cmpsb
sahf
ja
jmp
push
cli
adc
sbb
cmp
dec
test
sbb
pop
dec
aad
mov
stc
ds
mov
xchg
xor
xchg
int3
pop
into
cmc
cltd
add
push
loope
push
and
cmpsl
push
mov
jo
cmpl
das
add
sub
dec
imul
lods
mov
pop
xlat
outsl
aad
call
sbb
sbb
jle
xchg
sbb
pop
int
xchg
outsl
mov
fiadds
cmp
jl
adc
lret
adc
cs
call
jecxz
pop
add
outsl
imulb
dec
jge
cmp
dec
xchg
fbld
es
call
mov
pop
cmpsb
aas
cmp
adc
cmp
cmp
sbb
dec
pop
aam
xor
lods
outsl
lods
or
mov
push
test
pop
xorb
cs
mov
push
xlat
mov
add
xchg
out
rcrl
ret
int
and
push
jae
mov
in
jbe
outsl
or
bound
xchg
push
stos
fcos
jnp
or
and
call
dec
and
add
scas
dec
mov
pop
pop
sarl
and
lea
mov
or
fadds
jl
jo
rorl
pop
cmp
jle
mov
into
cmp
add
and
shl
ljmp
sub
jge
jne
lret
andb
jmp
pop
cmp
test
mov
xchg
mov
addr16
fs
dec
mov
mov
mov
lret
rolb
pop
addr16
push
jne
lret
mov
add
xor
or
bound
adc
loop
frstor
pushf
outsl
cmp
jg
and
in
pushf
inc
mov
pushf
addr16
cmp
clc
lea
lds
mov
jbe
xchg
fwait
outsl
cld
push
dec
mov
cmpsb
dec
out
or
add
stos
in
int
imull
and
sarl
jne
mov
lcall
jb
cld
rcrb
dec
or
gs
or
sbb
fnstcw
sbb
jbe
inc
push
loop
cmp
cmovno
inc
sub
pushf
xchg
lock
pop
sub
not
iret
mov
dec
call
pop
sbb
shrb
sub
inc
and
scas
xchg
int
jg
data16
stos
pop
mull
cld
das
cmp
cmp
movsl
in
scas
aam
in
xchg
adc
test
mov
mov
push
xchg
pusha
push
call
cmp
test
jmp
int3
int
dec
pop
jne
sbb
sub
mov
mov
pop
idivb
dec
pop
popa
push
in
pushf
mov
mov
insl
sub
add
imul
push
cmpsb
aaa
shrl
adc
imul
mov
cmc
int3
add
int3
pop
stc
add
mov
into
int
popf
push
and
outsb
adc
int3
std
push
lahf
xchg
lods
ds
cmp
inc
xor
and
cmpsb
pop
add
push
int3
daa
dec
imulb
in
movsl
xlat
jno
hlt
xchg
movsb
mov
add
jmp
jg
xchg
out
aaa
inc
jg
sti
adc
mov
stc
mov
leave
fistl
add
xchg
dec
inc
xor
faddl
adcl
and
sbb
pop
mov
push
rcll
pop
dec
or
sub
aam
imul
fistl
shlb
mov
clc
lahf
sbb
mov
jmp
scas
nop
dec
into
sbb
cmp
fs
xor
jge
push
cmp
xchg
in
dec
sbb
jecxz
add
xchg
sub
dec
aam
fildll
inc
mov
jecxz
inc
sub
int
rorl
fcmovnbe
pop
rclb
movsl
sahf
inc
paddusb
ficompl
push
std
filds
xchg
negl
imul
jecxz
imul
adc
dec
or
mov
push
mov
adc
sub
stc
sbb
mov
je
mov
stc
jo
push
rorb
mov
or
loope
in
popa
add
jmp
xchg
or
push
mov
popf
das
lods
pop
test
sub
jg
inc
and
in
jg
outsl
icebp
testb
movsl
jae
mov
fists
out
testb
jno
xor
loopne
fs
sub
pop
or
rorl
add
mov
xchg
loopne
push
and
add
add
xchg
cmp
nop
cmp
inc
arpl
push
icebp
adc
out
pop
les
add
insl
ja
and
jg
ret
xor
dec
mov
test
cmpsl
xor
mov
lahf
mov
mov
scas
fs
dec
dec
fwait
or
jg
push
daa
dec
les
inc
jle
xlat
repz
inc
arpl
je
pop
pop
dec
xor
add
addb
mov
flds
pop
cwtl
or
imul
cwtl
clc
arpl
stos
stos
fiadds
sarb
lcall
sti
mov
stos
lret
stos
pop
xchg
icebp
mov
dec
mov
fildll
cli
aaa
push
adc
movsl
aad
mov
in
mov
inc
call
xchg
sub
cmp
test
notl
out
jne
ja
daa
pop
js
imul
xor
dec
rcrl
add
pop
pop
add
ret
loopne
mov
inc
xor
ja
sbb
mov
lds
inc
inc
lcall
cmpsb
insb
dec
dec
je
jne
loope
popf
sub
push
mov
les
mov
and
incl
ss
fcomp
xchg
daa
dec
or
jmp
sbb
inc
push
xchg
sbb
cmc
xchg
jb
and
inc
jo
mov
jno
loope
pop
mov
arpl
jge
ror
jmp
clc
mov
or
mov
out
sub
dec
imul
fisubrl
in
mov
and
imul
lahf
dec
push
mov
add
and
into
leave
cmp
mov
ja
cmp
jnp
aaa
mov
sub
in
ja
dec
fs
addr16
add
test
pop
aam
lcall
lods
cmp
push
test
xlat
test
and
pop
xor
adc
mov
push
ret
lahf
js
stos
in
pop
popf
sahf
add
rolb
cmc
imul
pop
mov
and
or
icebp
ds
loop
add
cmpsl
aam
xor
dec
pop
sub
sbb
dec
add
out
push
jmp
std
loopne
sbb
adc
push
out
ucomiss
pop
xorl
dec
movl
lret
iret
mov
rorl
jmp
xchg
xchg
insb
add
xchg
js
sub
mov
jecxz
xor
flds
leave
mov
mov
mov
xor
sub
push
lret
adc
pop
dec
inc
ds
test
mov
loopne
bound
mov
push
jmp
cmp
clc
ja
int3
or
jo
mov
lahf
test
push
jecxz
push
les
gs
inc
test
push
push
int3
neg
subl
roll
mov
cld
mov
mov
lods
test
daa
sarb
fistpll
adc
inc
gs
fidivl
pop
jecxz
das
xchg
in
nop
or
test
aam
imul
or
mov
jae
pop
and
pop
es
or
mov
jnp
pop
js
addr16
inc
xchg
pop
mov
jnp
fnsave
ficomps
icebp
js
pushf
les
out
sub
popa
loop
and
shlb
popf
push
mov
xor
mov
test
lock
outsl
gs
sbb
jle
push
sbb
lea
pop
pop
and
jmp
packssdw
je
movsl
jno
cmpb
jae
cmp
mov
sbb
xlat
cli
xor
sahf
xchg
sbb
aas
mov
icebp
test
mov
mov
inc
adc
fisttpll
mov
xorl
pop
mov
mov
lods
sbb
frstor
sahf
and
pop
out
sbb
push
in
mov
outsl
mov
adc
jne
in
pushf
dec
add
addr16
and
or
pop
inc
mov
arpl
mov
enter
sbb
mov
push
cmp
add
jne
xchg
dec
in
fsubp
insl
loop
sub
xchg
push
and
inc
out
mov
repz
mov
lret
add
in
xchg
lret
shr
test
out
mov
push
shrb
fwait
xchg
pusha
scas
xchg
cmp
imul
inc
inc
dec
mov
call
adc
and
jno
mov
sub
mov
int3
imul
hlt
out
das
cmpsb
mov
das
cmp
ja,pt
inc
push
mov
fisubl
jge
ret
out
or
in
shl
fisttpll
pop
std
dec
mov
rcll
ds
mov
cwtl
mov
mov
xor
in
xchg
sub
xchg
add
sbb
sbb
ljmp
ss
inc
test
popa
stos
out
cmp
addr16
inc
and
pop
jo
add
lock
sub
sbb
mov
xchg
xorb
ds
into
dec
sbb
or
sbb
and
and
xor
and
ret
cmpsb
push
xor
adcl
xor
cmp
and
bound
arpl
lods
cli
pop
push
jl
ror
std
orb
lret
repz
pop
sbb
push
cmp
push
test
js
and
cmp
mov
jle
cmp
jge
mov
cwtl
push
dec
mov
push
pop
mov
fists
inc
xor
call
hlt
add
les
push
adc
cmc
popa
arpl
jp
cmp
into
in
dec
pop
adc
add
icebp
xchg
popa
inc
mov
in
fisttpll
imul
mov
es
jp
and
pop
jb
orb
in
into
scas
es
xchg
adc
dec
fisttpll
iret
ja
lcall
mov
outsl
adc
jle
sub
mov
not
mov
and
imul
or
mov
cmp
add
inc
jns
repz
cmp
jns
fdivp
dec
out
mov
sub
sti
enter
lods
xor
or
xorl
rcll
xor
int
dec
jge
mov
mov
push
mov
fstps
mov
inc
xchg
jb
rolb
stos
and
mov
dec
out
jl
jge
pusha
adc
add
movsb
loop
lods
movsb
inc
or
ss
pop
clc
adc
and
push
adc
inc
stc
cmp
movsb
cmc
roll
ja
push
arpl
jno
movsb
adcb
jge
fdivp
mov
sub
call
icebp
outsl
mov
dec
sub
add
jle
stos
inc
mov
add
add
cltd
and
xchg
ret
stos
mov
xchg
rcr
fs
arpl
hlt
fs
imul
xor
sahf
and
in
addr16
fcomps
inc
add
icebp
into
adc
and
add
into
sub
mov
movsl
pop
mov
pop
loope
pop
dec
cmpsl
aam
push
mov
mov
add
inc
xor
ljmp
outsl
jg
loop
xchg
jns
adc
mov
mov
test
loope
pop
sub
push
repnz
sbb
lret
dec
icebp
lods
push
adc
push
scas
sbb
add
push
mov
lret
jbe
and
xchg
mov
xchg
sub
in
pop
dec
add
lret
lret
lds
cmp
adc
lods
lods
xchg
test
sub
orb
ds
add
xchg
movsb
int
jmp
in
jg
add
rcrb
ret
xchg
in
adc
repz
sbb
fdivs
test
aaa
loop
xor
lret
mov
mov
jp
pop
cltd
dec
mov
out
aaa
rcrl
fisubrs
add
pushf
mov
jb
stc
call
mov
scas
cwtl
add
adc
mov
jne
bound
mov
xor
outsb
mov
shlb
lahf
mov
divb
jmp
in
inc
push
iret
lods
xchg
stos
jo
push
xchg
mov
pop
jl
sarb
hlt
pop
add
mov
mov
aad
mov
add
pop
jae
add
jae
sti
mov
and
scas
sub
ds
fldenv
sub
stc
adc
or
out
jno
test
repnz
pop
push
jo
push
arpl
and
xchg
and
icebp
jl
xor
lods
les
cltd
cmc
and
adc
mov
push
movsl
mov
and
gs
pop
jecxz
cmp
out
push
dec
cmpsb
sbbl
fsts
repnz
clc
inc
sbb
in
jno
adc
adc
jb
cld
ret
out
les
cmovbe
insl
loopne
adc
daa
push
mov
pop
orl
mov
fadds
jle
dec
jae
stos
fwait
xchg
outsl
push
bound
xchg
cmpsb
sub
jnp
rclb
mov
loop
and
adc
mov
cmpsb
jbe
mov
ljmp
leave
pop
dec
pop
jno
das
xchg
lea
in
les
into
add
jbe
xor
test
xchg
xchg
mov
scas
xchg
cmp
inc
adc
roll
sub
les
lahf
xor
jae
les
cld
jns
test
push
mov
int3
mov
cmp
int
push
jp
sar
jl
mov
test
jecxz
sbb
pop
pop
push
jae
push
nop
outsl
and
jl
daa
mov
test
stos
cmpsl
mov
lret
sub
popf
daa
pop
sbb
cs
add
push
xchg
frstor
fidivl
inc
sarb
outsb
leave
loop
push
call
and
sti
push
ja
daa
inc
lods
mov
scas
in
and
rclb
cld
xchg
sub
out
mov
and
lods
inc
out
movsb
mov
pop
pushf
int
xor
adc
fnstenv
or
mov
jns
aam
mov
add
xchg
not
sbb
push
out
cmc
aad
cld
outsl
mov
dec
xor
cmc
push
adc
rcrl
mov
inc
cmp
dec
mov
ficomps
cmp
ljmp
push
pushl
push
rcll
icebp
lds
pop
xchg
call
sbb
movsb
iret
pop
push
and
xchg
loop
rcrb
psubq
mov
fisttpll
insb
gs
cmp
in
mov
scas
ret
lods
ss
and
jecxz
testb
mov
mov
jg
shrb
not
imul
rolb
popa
inc
int3
sub
loopne
pop
es
inc
out
push
push
iret
or
sbb
jno
lods
test
and
mov
popa
mov
sahf
lock
fdivrl
mov
xchg
loop
cmpl
or
adc
repnz
inc
iret
mov
mov
in
fidivrs
add
jae
sbb
jmp
pusha
jecxz
mov
and
fildll
popa
sbb
sbb
enter
mov
sbb
sbb
xor
cmc
add
push
cmp
in
lret
jecxz
incl
inc
ret
mov
stos
ss
fbstp
inc
rol
xor
adc
and
call
scas
push
cmc
xor
loop
pop
fs
xchg
mov
xchg
in
nop
mov
sub
in
mov
sti
subb
dec
aad
jno
pop
and
data16
mov
mov
cli
shr
pushf
xor
fs
scas
cmp
or
dec
int
mov
sub
and
xchg
xor
pop
sbb
rolb
push
stos
iret
jge
repz
push
xor
fists
pushf
inc
cmpsb
mov
cmp
mov
push
add
mov
xor
jo
jmp
cld
jmp
pop
jg
push
addr16
imul
mov
sbb
lahf
inc
fildll
dec
or
dec
mov
add
mov
push
shrb
push
jae
mov
add
sbb
out
sub
gs
sbb
fcoms
xor
aam
push
aaa
inc
aam
cs
lahf
sub
xchg
xchg
inc
push
icebp
je
cmc
mov
ja
inc
lret
xchg
fistl
or
sub
sbb
and
mov
dec
repz
inc
xor
subl
xchg
dec
addl
je
loope
ja
push
cli
fadds
lahf
dec
fcmove
jae
jge
or
push
pop
repnz
xchg
sbb
mov
dec
fiaddl
loopne
adc
sbb
fisubrl
ss
xchg
sub
sub
jbe
xchg
mov
add
push
push
lret
push
sub
lock
sbbb
enter
fnstcw
xlat
push
je
jp
dec
add
sahf
cmp
mov
pop
and
in
add
dec
lret
mov
pop
xchg
je
inc
mov
mov
mov
int
dec
push
jnp
or
xchg
mov
sbb
add
mov
xor
inc
repz
mov
xor
jo
sbb
push
jb
ret
jns
inc
fcmovne
inc
incl
xor
stos
shrl
dec
ret
sub
push
push
test
test
shlb
cmpl
enter
inc
cmp
sahf
push
stos
push
add
pop
insl
xor
sub
or
cli
sbb
dec
fildl
xchg
es
test
test
cmpsl
inc
cmp
outsl
add
cmp
pop
xor
test
fadds
divb
dec
inc
mov
push
jecxz
add
int
clc
jmp
inc
hlt
pushl
leave
out
sahf
stos
in
jmp
xorb
out
imul
and
xor
movsb
xor
sub
out
addr16
cld
adc
pop
incl
lods
mov
cmpsl
push
cli
jecxz
push
mov
jecxz
in
mov
iret
test
add
sti
mov
dec
mov
pop
push
cmp
xor
xchg
call
cmpsb
dec
pop
cmp
sub
inc
push
adc
fstp
push
push
aam
sarl
or
pop
pop
cli
mov
in
pusha
push
mov
cs
mov
lock
xor
aad
or
dec
add
mov
fimull
nop
adc
cmp
sbb
pop
mov
data16
cmp
outsb
inc
jle
ret
shl
ficoml
fistpl
mov
cli
sbb
xchg
in
fsts
shlb
push
sbb
arpl
cltd
es
push
cmp
push
xchg
pop
mov
pop
rol
sbb
mov
into
mov
mov
or
jo
lret
cmp
add
xchg
mov
fabs
int3
clc
jge
jmp
dec
adc
xor
dec
sbb
or
shlb
mov
mov
stos
lods
or
inc
in
loope
arpl
cwtl
xchg
loopne
out
dec
loope
push
shll
add
adc
dec
bound
subb
icebp
testl
dec
rolb
sarb
cmp
pop
lods
sti
cmpsl
enter
shrl
xor
dec
mov
xchg
jmp
pop
scas
xchg
jae
sbb
scas
sub
inc
mov
xchg
cwtl
jecxz
or
sarb
out
adc
pop
rcrl
dec
cmpb
pop
lcall
or
or
xchg
pop
cs
loopew
scas
or
icebp
adc
adc
test
mov
pop
push
xchg
mov
mov
fisttpll
dec
sbb
sbb
shl
adc
mov
add
or
movsl
adc
inc
xchg
add
rorb
cwtl
dec
push
jne
mov
cwtl
xor
xlat
dec
clc
stc
dec
int3
xchg
lret
ljmp
lcall
or
add
mov
inc
xor
cmp
aas
outsl
inc
adc
rorl
and
jae
push
pop
push
jg
jecxz
popa
and
lods
out
push
cltd
ja
pop
dec
cmp
add
arpl
inc
jecxz
and
int3
pop
push
loope
mov
mov
movsb
xor
sub
mov
cmpsl
pop
mov
push
cmp
ret
insb
or
sbb
push
iret
jo
addb
dec
xchg
mov
mov
insb
mov
in
je
les
lock
insl
bound
ret
lock
fistpll
cmpsl
stc
outsl
adc
jmp
andb
arpl
adc
aas
jp
dec
pop
xlat
shll
sbb
movsl
xchg
inc
mov
jnp
add
repz
fisubrl
mov
cwtl
addr16
in
fidivrs
scas
adcb
add
jo
jb
popa
mov
mov
mov
in
call
filds
push
arpl
adc
popf
adc
push
sub
sbb
add
fmull
insb
into
xlat
add
rclb
cld
dec
loope
pusha
cs
pop
ljmp
rclb
std
jecxz
roll
cmp
lret
pop
sbb
mull
mov
int
xor
cwtl
ds
jbe
int
bnd
mov
push
sub
push
mov
sub
mov
clc
pop
push
cmp
lds
adc
or
xlat
cwtl
cmc
and
out
dec
mov
pop
sbb
xchg
mov
test
popa
lods
xchg
cmp
xchg
das
insb
addr16
pop
xchg
mov
cmp
add
xchg
fbstp
call
and
sbb
aam
insb
outsl
arpl
test
mov
and
mov
sub
mov
int3
enter
jae
pop
repnz
je
xor
std
aas
cmp
int
dec
xlat
push
and
or
mov
mov
clc
out
push
cmp
aam
dec
lods
jb
repz
push
lcall
data16
stos
push
jl
dec
rcrl
sbb
jmp
inc
xchg
iret
je
xor
inc
sub
adc
test
push
and
sbb
add
jge
movsl
into
dec
paddq
int
or
and
and
shll
inc
imul
push
or
push
xchg
pop
push
jo
mov
divb
ret
int3
cwtl
adc
int
bound
cmp
cmpsb
inc
cld
inc
adc
mov
xchg
mov
sub
inc
loope
jp
hlt
mov
push
out
jmp
mov
xchg
pop
pop
add
cld
pop
push
or
jb
icebp
subb
das
sub
hlt
sbb
aad
xchg
outsb
jmp
gs
jne
lock
push
call
fcoms
pusha
pop
dec
xchg
insb
mov
ss
xchg
aas
shr
inc
sub
xchg
push
jb
jne
hlt
inc
add
xchg
fcomi
loop
and
adc
jmp
push
inc
xor
es
lcall
loop
cmp
push
sahf
fistpl
xor
in
inc
cmp
js
add
test
push
scas
les
dec
insb
pusha
mov
out
icebp
or
adc
jb
xchg
clc
test
jle
dec
int3
addr16
cmp
sbb
sbb
loopne
hlt
aaa
or
or
jmp
xor
lret
push
shr
nop
lret
add
or
inc
scas
jne
mov
mov
popf
inc
cwtl
pop
and
inc
in
mov
pop
call
push
scas
sahf
lea
pop
jnp
test
dec
sahf
hlt
in
je
adc
xor
test
outsl
repz
inc
sub
imul
pop
and
inc
cmp
imul
fcom
lods
pop
adc
or
mov
and
out
mov
stc
xlat
add
cmp
idivl
fbld
pop
xor
push
loop
sar
fsub
xchg
cs
add
sbb
call
mov
mov
cmp
sub
dec
sbb
add
ljmp
cmp
aas
jbe
shrl
fidivs
jne
sti
mov
mov
mov
js
cmpsl
pop
mov
push
mov
xchg
enter
mov
cli
mov
pmaddwd
jo
xchg
jno
jle
sub
mov
add
sti
out
push
out
dec
pop
sub
mov
mov
add
repnz
std
rcrl
sbb
mov
lods
dec
adc
cltd
inc
icebp
test
lock
mov
push
lahf
in
iret
and
test
xor
fistpll
push
cmp
xchg
mov
mov
mov
sub
mov
mov
mov
mov
xor
push
xlat
shll
and
cmp
jl
adc
and
roll
push
jo
mov
aaa
stc
mov
test
imul
pop
mov
mov
xchg
cmc
adc
sub
sub
mov
mov
lods
and
int3
jecxz
xchg
dec
cli
pop
sbb
add
out
sbb
push
iret
push
xor
sub
and
fsubrl
pop
mov
fnstsw
std
sub
sub
ficompl
cs
fdivrl
out
cwtl
inc
push
enter
sbb
mov
sbb
adc
sub
jae
mov
mov
dec
test
sub
lcall
pop
or
push
jae
outsb
dec
and
in
pop
leave
cli
sub
icebp
mov
popa
repnz
mov
dec
cmp
subps
incb
jle
mov
jecxz
xor
mov
loop
dec
stos
mov
inc
mov
aaa
sbbl
dec
bnd
mov
push
shr
fnstsw
pop
pusha
xlat
sti
mov
sete
xchg
cmp
dec
lods
outsb
or
jg
lret
decb
jno
push
adc
cwtl
pushf
idivb
ret
mov
cmpsb
out
outsb
loope
int
pusha
push
outsl
das
insb
incb
dec
rcrl
cmp
mov
jbe
adc
push
xchg
js
push
pop
repnz
int
and
inc
mov
mov
loop
add
mov
rcrl
imul
mov
call
mov
movd
mov
fsts
das
mov
mov
data16
and
mov
fwait
aaa
xor
psrld
mov
mov
pushf
pop
xor
iret
pop
insl
ds
jns
add
xchg
mov
shrl
and
pop
xor
jle
dec
outsb
stc
cmpl
lret
dec
cmc
out
scas
mov
out
mov
add
xchg
sbb
shll
mov
xchg
clc
dec
xorb
jecxz
and
cmpsl
test
test
cs
popa
mov
in
ret
sub
mov
mov
je
mov
ljmp
xor
out
mov
and
cmp
mov
xchg
lcall
and
cli
and
arpl
xor
in
pop
call
fs
in
mov
mov
add
pop
inc
xor
cli
mov
daa
ret
fstl
dec
pop
or
std
xchg
hlt
and
pop
push
jg
cmp
pusha
outsb
stos
cmp
daa
and
cwtl
addr16
sbb
stos
scas
imul
iret
pop
and
cmp
repnz
clc
jmp
cmp
call
adcl
jmp
add
mov
pop
adc
inc
dec
jge
cltd
jns
outsl
je
das
push
mov
jns
xor
inc
aas
in
lock
ret
sahf
movsl
pop
test
aam
add
sbb
cmpsb
pop
jmp
dec
inc
inc
inc
jle
cmp
pop
sbb
fldenv
bound
inc
cmpsl
or
or
imul
pop
call
jo
dec
scas
or
pushl
lds
and
mov
push
xchg
push
sbb
xbegin
xchg
inc
addr16
iret
adc
out
cmpsb
push
test
test
les
icebp
ljmp
xlat
inc
cmpsb
fmuls
movsl
mov
jae
mov
leave
nop
jae
leave
int
add
movsl
dec
inc
int
ret
nop
mov
aas
cmpsl
lds
adc
shl
sbb
pop
push
jge
popf
arpl
cmc
insl
push
jae
jecxz
and
mov
aad
es
pop
pop
out
rcll
mov
jnp
js
dec
xchg
sbb
push
inc
inc
movd
jno
mov
cmpsb
jno
cmp
sbb
cmp
jne
movsb
mov
adc
push
clc
int3
push
pop
mov
pop
cwtl
not
in
std
xor
push
in
scas
and
icebp
stos
mov
push
dec
jecxz
dec
xlat
shl
add
sbb
push
and
mov
xchg
push
aas
jns
clc
in
adc
dec
lahf
and
sub
pusha
mov
adc
out
pushf
stc
mov
xor
jo
pop
sbb
inc
dec
rolb
in
or
imul
rolb
movsl
push
in
cli
movsb
mov
cmp
mov
jp
pop
addb
test
mov
in
xchg
xchg
add
adc
arpl
adc
aas
lods
out
pusha
cmpsb
cmp
fimull
js
sub
inc
mov
bound
testl
movsb
sub
insl
push
es
mov
imul
jge
xlat
sti
mov
icebp
mov
or
js
adcl
mov
xchg
outsb
sbb
dec
out
push
imul
fbstp
or
and
push
dec
push
mov
jne
repnz
test
mov
sub
mov
xchg
adc
pushf
push
adc
rolb
jp
mov
add
jmp
pop
mov
into
cmp
pop
inc
mov
fwait
and
mov
xor
or
ljmp
pop
mov
xor
cltd
loope
push
add
and
pop
lcall
xor
aas
fmulp
jno
cmc
dec
hlt
nop
ja
ret
adc
mov
mov
cmc
neg
aam
mov
dec
fisubrl
mov
loopne
stos
push
sub
sbb
mov
xchg
arpl
lret
insb
aaa
aam
mov
movsb
rcl
lret
repz
testb
push
int3
popa
push
jo
icebp
into
repnz
sti
repnz
cmpsl
cld
adc
xchg
xchg
jl
aaa
ret
das
lcall
pop
cmp
mov
adc
or
sbb
pop
push
mov
les
xchg
fisubrs
addr16
dec
out
cmpsl
cmp
iret
sub
sbb
and
mov
sub
ficomps
pop
or
js
dec
in
mov
pop
lods
daa
inc
mov
loop
inc
scas
gs
add
cs
je
mov
js
loope
addr16
mov
adc
push
inc
or
in
fisubrl
push
mov
fadd
inc
mov
or
arpl
mov
rcrb
out
jno
lahf
mov
imul
xor
les
and
leave
sub
adc
lea
sub
xchg
clc
add
scas
or
in
push
sbb
cld
xor
into
xchg
sbb
lahf
in
cmpl
jne
mov
and
xor
jge
pop
iret
out
stos
jg,pn
lcall
cld
xor
adc
in
call
add
add
add
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
push
add
add
add
scas
cmp
mov
lcall
fidivrs
sbb
ffree
enter
jle
daa
or
inc
sti
andb
and
test
es
or
mov
ss
and
mov
adc
or
sbb
inc
pop
push
aad
mov
inc
bound
inc
int
out
inc
xor
hlt
add
jb
in
loop
in
push
in
loope
pop
out
test
sub
rolb
les
in
ja
iret
lods
xchg
scas
sub
jmp
cmpsl
jecxz
add
xchg
pop
xchg
idivb
cli
test
jne
outsl
out
dec
jl
xor
jo
jnp
xor
shlb
and
xchg
and
stos
mov
orl
addl
cmp
mov
jmp
fnstenv
push
pop
js
or
sub
repnz
dec
imul
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
