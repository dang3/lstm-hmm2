dec
mov
cli
inc
add
gs
mov
add
ss
push
lock
mov
push
mov
jo
repz
inc
jp
jne
test
mov
mov
mov
pop
dec
outsl
dec
add
pop
mov
ss
mov
repz
sar
add
cmp
imul
push
int
dec
jp
sarl
xchg
adc
popf
ljmp
ss
adc
add
idivb
dec
xor
fwait
pop
mov
mov
push
add
cmpl
fists
scas
mov
mov
loop
push
cmpsb
mov
inc
mov
fsubrl
xor
test
xchg
inc
adc
push
fs
xchg
adc
outsl
mov
cmc
mov
pushf
icebp
and
push
cld
mov
lods
jg
mov
or
pop
sbb
out
xor
adc
inc
enter
not
scas
rcll
pop
adc
clc
sub
fwait
pop
das
rolb
in
pop
xor
lds
mov
sbb
adc
mov
mov
enter
rcr
outsb
je
cs
lahf
dec
mov
das
pushf
scas
andb
adc
mov
xlat
ss
xchg
pop
test
iret
push
and
popf
loope
or
add
mov
pop
or
pop
cmpb
and
sbb
sbb
jb
fadd
ficoms
push
ss
clc
xor
and
adc
sbb
dec
sar
dec
inc
xchg
in
es
sbb
je
aaa
pop
jno
push
adc
into
add
mov
xchg
push
pop
xor
js
mov
inc
cmpsl
mov
imul
inc
jge
mov
pop
push
shll
add
adc
in
xor
or
insb
adc
xor
mov
mov
sub
add
xor
cs
dec
cltd
lods
pop
orb
cmp
aas
jle
cli
mov
jge
in
add
xor
repnz
inc
xchg
mov
sub
test
fmuls
jbe
push
aad
or
mov
push
xor
and
notb
adc
shlb
std
sahf
enter
add
jmp
sub
lret
push
outsl
jmp
les
mov
ja
faddl
loopne
cltd
insl
lahf
push
adc
rorl
jbe
cwtl
and
adc
ret
xchg
xlat
je
repnz
jle
pop
xor
test
imul
jae
movsb
xchg
shll
push
dec
sbb
mov
inc
mov
popa
sbb
std
cmpsl
pop
cltd
ja
pop
insb
mov
or
jne
rclb
inc
mov
lods
add
cs
push
jae
jno
xchg
test
testl
mov
xchg
mov
lock
add
jbe
les
xor
and
mov
pop
jno
sub
push
push
push
push
bnd
lcall
inc
aaa
ja
js
inc
or
gs
sbb
ss
mov
mov
and
js
mov
int
ret
inc
mov
mov
push
rorb
fcoml
stos
js
xor
add
fimuls
sti
data16
mov
cmpsb
jg
or
in
test
popf
sahf
mov
add
ds
lret
jle
jecxz
cmp
adc
jg
sub
mov
mov
popa
cmpsb
stc
mov
fcompl
test
sub
push
sbb
mov
orb
add
in
hlt
xchg
push
add
adc
insl
out
cmpsl
movl
aaa
dec
mov
mov
mov
xor
xor
sub
adc
jg
mov
mov
and
jo
out
dec
jg
clc
add
loope
fcoml
mov
cmp
xchg
xchg
fcompl
sbb
ja
jno
mov
mov
mov
cmc
sbb
mov
or
xor
imul
xor
shrb
mov
faddl
xchg
sub
xchg
dec
mov
lods
lret
shll
sar
xor
inc
or
mov
lods
mov
icebp
mov
mov
mov
jge
adcl
jge
fbstp
inc
adc
popf
pop
andb
adcb
gs
jae
aad
movsl
enter
movsb
xchg
faddl
or
aam
leave
xlat
dec
jae
push
ds
push
aam
jne
dec
or
addr16
imul
add
push
xor
dec
xchg
inc
jecxz
data16
imul
add
aas
add
xor
push
mov
sbb
xlat
sub
jbe
xor
mov
mov
sub
inc
xchg
mov
gs
std
stos
cmp
rcrl
aad
out
in
jae
or
fdivs
pop
mov
cwtl
cmp
dec
xchg
scas
add
push
stos
inc
push
xchg
jmp
cmpsb
arpl
dec
imul
push
xchg
xchg
pop
cwtl
imull
mov
mov
sbb
adc
cltd
sub
cmc
push
das
xlat
sub
jl
add
clc
pop
test
int
push
adc
mov
xchg
jecxz
dec
clc
xor
lock
and
jnp
fildll
inc
cmp
pop
cmp
xor
aad
dec
or
push
aad
add
push
fistl
out
and
shlb
out
addr16
test
adc
rcrl
ja
pop
mov
or
mov
stos
mov
aam
mov
cmp
mov
push
arpl
jmp
push
or
test
daa
or
pop
or
inc
jecxz
mov
mov
cmp
xchg
mov
pop
ss
xchg
jle
inc
mov
stc
aaa
mov
aad
add
push
mov
cmp
push
sub
dec
and
xchg
jb
negb
fistpll
pop
aad
repnz
inc
mov
inc
imul
mov
and
or
fdivr
test
stc
std
sti
std
jmp
lea
iret
xor
fildll
or
and
scas
sub
mov
aad
push
stc
sbb
xchg
jnp
lea
scas
je
push
xchg
data16
push
and
cmc
imul
rol
outsl
arpl
and
push
aad
jecxz
mov
rorl
sub
cli
or
add
lods
int3
stc
push
lods
mov
mov
aam
stos
mov
jbe
js
pop
cmp
inc
out
cmp
jl
dec
jg
xor
jge
pop
mov
pop
xchg
incl
xchg
pushf
int3
xchg
ja
int
and
fmuls
pop
mov
push
sub
jg
xchg
adc
mov
idiv
xlat
imul
sub
lcall
add
ljmp
inc
sbb
add
ret
aam
and
fsubrs
mov
jg
cmc
mov
sbbl
cmpsb
cmp
insl
sub
jge
xor
js
sahf
add
or
cli
mov
xchg
dec
xorl
cs
mov
sbb
repz
ja
sub
leave
sub
in
xor
cmp
mov
add
aad
mov
inc
imull
dec
scas
out
adc
scas
jle
mov
mov
cltd
mov
mov
ljmp
xchg
ja
int3
rcl
cmp
ja
cwtl
call
sbb
jl
pop
pop
cld
je
inc
push
cmpl
sarb
out
imul
and
mov
lods
jbe
insb
add
mov
mov
sub
sahf
or
out
fxtract
imulb
sbb
mov
adc
aad
popf
add
stos
out
xchg
xchg
movsl
mov
dec
and
add
push
aas
fsubrl
mov
jg
mov
or
push
mov
scas
jmp
mov
inc
mov
sub
daa
std
mov
mov
lret
dec
mov
mov
sub
xchg
mov
mov
jbe
xchg
test
mov
loope
loop
pop
mov
fiadds
add
jns
or
fwait
lahf
add
push
adcl
jge
aam
sbb
mov
stc
nop
mov
jcxz
cmp
xchg
dec
dec
js
jbe
mov
cltd
push
and
fldcw
rcl
and
pop
sbb
in
daa
divb
dec
cmp
push
mov
or
xchg
xchg
jl
mov
and
and
loope
sahf
bound
and
sbb
adc
cltd
shr
and
je,pn
cmpsb
sub
mov
and
fldz
aad
popa
adc
imull
adc
inc
xchg
stos
mov
ja
loope
dec
iret
enter
cltd
cltd
in
std
jle
negl
in
mov
mov
addb
fimuls
lds
movsb
call
and
pop
push
mov
mov
push
repz
rorb
test
fstps
and
fbld
in
dec
ret
aad
xor
jl
cs
pop
xor
mov
mov
lock
testl
daa
xchg
sbb
jae
fucomp
mov
mov
or
fistpl
mov
jmp
mov
inc
stc
xchg
cmc
sahf
fiaddl
in
das
pop
xchg
jp
mov
aaa
inc
cwtl
int
ljmp
and
out
or
inc
ret
cli
xchg
push
nop
mov
jl
or
push
cmp
imul
test
inc
mov
in
jno
xchg
push
loopne
push
push
idivb
aad
imul
mov
jmp
xchg
mov
ret
inc
out
xor
lds
mov
cmpsl
int3
leave
pop
mov
or
fcoml
add
mov
cwtl
lds
mov
aas
jb
pop
idivb
push
or
cltd
ss
jg
xor
xor
mov
add
adc
outsb
rcll
shrb
adc
sti
jb
adc
outsb
cmp
mov
xchg
add
jp
fsts
jg
xor
in
xchg
mov
insl
xchg
das
int
push
out
fimuls
mov
hlt
stc
xor
or
sub
ljmp
xor
sub
loop
inc
loop
in
imul
insb
pop
mov
xor
add
inc
sub
sub
cmp
xor
lods
je
or
popa
movsb
and
ss
push
lds
mov
inc
ds
pcmpeqb
nop
adcb
jmp
inc
xor
test
pop
pop
pop
js
push
int
subb
mov
int
jae
fcmovu
lret
pop
iret
and
dec
repnz
or
sbb
and
add
and
pushf
nop
jnp
fcoms
aam
inc
mov
xor
cmp
testl
push
or
xchg
subb
bound
das
adcb
leavew
sub
lcall
jle
js
inc
addb
fs
popa
andb
imul
or
lcall
rorl
adc
xchg
dec
dec
in
add
add
daa
mov
jbe
cli
ss
adc
jle
jbe
push
or
xlat
notb
jg
cwtl
roll
cmpsl
sti
push
cmc
cmp
and
jge
or
xchg
jg
nop
jbe
xchg
jno
cmp
mov
icebp
fisubl
ss
mov
push
out
or
jecxz
into
xor
mov
xchg
push
push
sahf
stc
add
addb
pop
mov
and
and
sub
jle
repz
sahf
push
lods
dec
js
das
out
cltd
adc
push
js
or
push
and
or
das
cmpb
enter
aas
jl
outsl
mov
jb
adc
ret
aas
pop
ljmp
jl
cmp
jle
aam
add
cmc
outsb
sbb
cli
mov
popa
out
mov
inc
jp
call
loope
lea
sub
cmpsb
sub
jp
push
call
lods
out
or
mov
fs
jg
in
daa
pop
mov
jp
cwtl
ret
daa
xchg
add
jmp
xchg
jae
test
add
pop
adc
sbb
orl
fwait
cmp
ds
addb
jnp
repz
ret
adc
cld
jo
push
add
in
adc
push
repnz
ret
negl
xlat
ljmp
xor
jbe,pn
jl
push
jecxz
sub
and
add
cmp
imul
rcrb
lret
pusha
mov
in
adcl
shlb
mov
push
xor
add
or
adc
cmp
pop
mov
int
lret
or
lods
inc
jb
xlat
popa
neg
mov
dec
clc
popa
in
mov
pop
cmp
sbbl
mov
loopne
loop
cli
or
dec
cwtl
in
sbb
or
cmp
pop
or
add
adc
xor
jp
mov
out
sbb
adc
mov
gs
inc
pushf
dec
inc
mov
mov
lods
in
sub
mov
lret
pop
in
icebp
sahf
cmp
cmp
addr16
mov
fnstenv
cmp
fcompl
ds
mov
xchg
jno
scas
ss
xor
arpl
jmp
popf
dec
adc
dec
idivl
cmp
inc
mov
pop
mov
add
mul
or
sbb
mov
mov
mov
adc
ret
jbe
fstpt
hlt
push
sbb
lds
jecxz
pop
aaa
mov
cmc
cmp
adc
js
xchg
es
mov
fs
js
add
ss
into
mov
pop
push
mov
cltd
mov
add
int
out
aaa
lcall
push
stos
xor
dec
inc
jae
jns
sub
scas
aaa
mov
out
push
and
mov
xor
popa
or
xchg
mov
mov
mov
adc
sbb
jo
pop
cmp
jae
rcll
and
aad
push
stc
jle
add
icebp
push
outsb
push
jge
jl
rcrl
push
add
das
lock
and
sbb
xchg
sbb
call
xchg
cld
or
inc
repz
add
xor
lods
xor
jle
mov
pop
fmulp
icebp
push
mov
hlt
jne
fs
loopne
pop
ret
and
scas
add
jp,pn
mov
xchg
mov
jae
add
ja
rorb
ss
add
fnsave
jns
or
adc
out
iret
mov
lock
aaa
iret
aaa
fwait
xor
xchg
mov
add
aaa
nop
adc
aaa
mov
mov
add
xor
xchg
push
pusha
cmp
cs
mov
mov
cmpl
sahf
test
in
and
iret
or
fnstsw
test
dec
popf
popf
add
and
push
xchg
das
pushf
shll
inc
sbb
mov
cmpsl
repz
mov
xor
aas
aaa
or
xchg
inc
or
inc
mov
cmc
cmp
aaa
mov
pop
mov
ret
stc
jne
popf
fisubrl
scas
push
sbb
mov
dec
sarl
cmp
jne
jne
xchg
data16
loopne,pn
or
mov
or
dec
xchg
inc
or
shlb
rclb
fiaddl
pop
or
daa
movsb
mov
setg
mov
ss
pop
inc
xchg
push
dec
mov
mov
add
insb
xor
jne
mov
sbb
adcl
ret
stos
adc
cmp
xorl
push
inc
loopne
adc
fldl
fwait
insb
jns
cld
xor
sbb
add
pop
pop
sub
adc
xchg
xor
xor
cmp
mov
or
mov
mov
ret
adc
and
faddl
rol
sub
hlt
xor
jne
inc
mov
iret
adcl
pop
pop
std
addr16
jb
shlb
jmp
jle
cmpsb
imul
pop
jns
push
test
jns
scas
push
sarl
mov
mov
lcall
adc
enter
pop
jns
mov
pushf
cmc
movsb
cmp
ss
adc
ret
add
dec
mov
lds
icebp
cmpsb
das
xchg
jmp
push
push
aam
fstpl
cwtl
xchg
outsb
mov
ret
jne
xchg
sub
mov
mov
data16
lret
mov
cmp
push
js
lret
lods
xlat
adc
xor
frstor
in
scas
ror
or
imulb
and
fisubs
roll
inc
sub
xchg
ds
mov
mov
cmc
lret
jle
js
mov
daa
lret
stc
in
cmc
jge
hlt
cmp
test
sbbl
mov
stos
leave
xor
or
loopne
or
cmove
mov
fdivrp
daa
and
shl
jmp
push
in
lds
mov
fisttpll
lret
jns
xchg
push
cmp
ljmp
ds
sub
push
std
shll
jae
shll
aaa
inc
pop
cld
movsl
cmc
pop
je
adc
inc
pop
push
nop
hlt
mov
mov
and
lahf
mov
push
xlat
mov
mov
cli
shl
imul
adc
repz
push
adc
adc
inc
or
push
cmc
movsl
jg
push
xchg
mov
xor
orb
sub
and
push
pop
sbb
psubq
or
ror
roll
out
inc
and
fldl
cli
jb
sarb
xchg
in
mov
add
std
push
mov
mov
sub
iret
pop
push
inc
loope
frstor
mov
outsl
xchg
loop
fnstsw
and
shll
inc
sbb
push
inc
pop
jns
hlt
pushf
push
lret
notb
ss
dec
sub
jo
and
jns
push
dec
sub
aaa
pushf
pushf
jp
cmp
cmp
pop
jg
mov
ljmp
icebp
pop
scas
sub
push
mov
mov
stc
int
idivb
dec
cmp
pop
mov
movsl
daa
imul
sub
adc
lcall
out
mov
dec
gs
mov
aas
xor
sbb
add
adc
fstpl
shl
mov
fwait
inc
or
inc
and
js
js
int3
pop
rorl
xchg
adc
insl
nop
idivl
sub
sbb
mov
sbb
test
fcmovu
xor
and
xor
outsl
out
pushf
mov
cmp
rcpps
mov
iret
aad
fs
test
jne
cli
jmp
insl
jl
or
xor
lock
pop
shlb
pop
cmp
por
imul
je
adc
push
fsubrs
jns
fdivs
mov
fs
pop
clc
cmp
cmc
jecxz
inc
xchg
icebp
mov
mov
in
into
jbe
jbe
test
das
lods
imulb
das
mov
aam
sub
std
jne
imul
sub
outsl
mov
in
pop
call
push
popa
daa
jmp
int3
and
insb
push
mov
inc
scas
pop
aam
xchg
inc
cltd
push
jae
mov
jb
mov
les
and
jbe
icebp
divb
push
hlt
ljmp
cmp
inc
std
jp
sti
inc
or
enter
dec
push
mov
ljmp
ret
mov
js
xchg
test
jle
icebp
mov
mov
jae
mov
mov
lret
jle
push
fs
jecxz
or
rclb
mov
inc
sbb
lcall
in
adc
ja
jbe
not
in
adc
pop
shr
mov
loope
adc
jle
pop
dec
ljmp
test
into
mov
add
ret
xor
jo
movsb
mov
imul
sub
shrl
jae
inc
iret
test
ja
sbb
inc
sub
in
movsb
jno
jecxz
sub
jl
mov
jbe
aam
and
sub
subl
jbe
adc
and
aam
jecxz
movsl
cs
aad
push
inc
xchg
into
daa
cli
mov
add
cmp
or
xor
outsl
adc
mov
stc
push
out
mov
cld
call
jno
add
sbb
xlat
mov
mov
jns
xor
ljmp
adc
sbb
add
inc
push
mov
ljmp
sbb
jns
std
cwtl
mov
cmp
je
jae
mov
leave
imul
stos
push
loop
fdivrs
lcall
pop
mov
xchg
push
jbe,pt
jp
push
movsb
mov
aad
cmp
fwait
pusha
push
mov
out
imul
imulb
cld
lock
pushf
jbe
push
lcall
fsubrl
jl
lahf
pinsrw
lock
daa
test
pop
lret
push
nop
jg
ficoml
std
adc
cmc
sti
sbb
mov
js
jg,pt
into
cwtl
out
sbb
and
ljmp
clc
popa
ret
hlt
dec
cmp
mov
and
cwtl
scas
push
inc
jnp
rcr
jne
stos
cli
inc
mov
dec
xor
jg
mov
adcb
mov
js
push
aas
and
push
gs
mov
lds
mov
ret
pop
xor
loop
insl
call
adcl
or
jecxz
fistpll
adc
test
xor
lock
push
popa
btr
inc
orl
insb
filds
aad
mov
add
push
es
mov
push
mov
sub
ds
and
sbb
sbb
negb
into
mov
push
insl
iret
inc
jo
push
out
or
sub
lret
aam
mov
aad
push
lcall
adc
in
pop
addr16
adc
or
inc
sub
sub
stc
ds
insl
imul
in
pusha
es
sbb
fnstsw
adc
push
jo
add
sub
pop
xchg
jnp
in
push
ficoms
xor
mov
into
sahf
mov
mov
jle
mov
addr16
pop
dec
mov
div
adc
sub
aad
stos
in
push
mov
add
pop
sbb
inc
stc
sub
ret
test
sbb
push
mov
jmp
fsubrs
gs
leave
and
loop
popf
rol
out
and
ja
add
in
les
loop
bound
stc
nop
pop
addl
jmp
adc
orb
iret
mov
ret
and
push
xor
aam
lahf
pop
jbe
addb
fcompl
or
roll
andl
dec
cmpsb
cltd
xor
and
negb
icebp
iret
das
pop
cmpsb
mov
push
mov
mov
or
push
ss
mov
out
ds
jns
push
cmc
aas
arpl
leave
in
lds
pop
mov
fwait
cmp
mov
adcb
cmpsl
jns
std
fnstsw
dec
movl
andb
jb
fnstsw
das
scas
movsl
imulb
push
in
out
sbb
mov
cmpsb
gs
mov
orl
jns
dec
and
cwtl
mov
lcall
shll
xor
and
jnp
shrb
sti
faddp
mov
fnstsw
push
pop
sti
stos
jns
sub
xchg
in
fwait
mov
push
sub
mov
ret
stos
mov
insb
fisttps
ret
jmp
mov
adc
jbe
std
adc
add
out
fsubs
and
push
hlt
inc
outsb
add
outsb
outsb
push
outsb
mov
and
xor
clc
push
scas
insl
mov
jl
cs
mov
sbb
test
daa
out
jg
jp
aad
aaa
add
cmp
jp
dec
aaa
mov
stos
xorb
push
fisttpll
fsubrl
into
js
pop
lret
add
out
xor
sbb
pusha
stos
std
sahf
jl
dec
fiadds
dec
inc
ror
dec
leave
pop
push
sbb
pop
mov
addr16
inc
mov
test
mov
push
dec
sbb
lcall
arpl
ja
lock
lock
les
rep
das
cwtl
add
xchg
and
jae
and
push
test
clc
sbb
les
push
cmp
jnp
adc
outsl
push
in
push
sti
loop
in
push
fimuls
pop
add
and
jl
aam
sti
test
adc
pop
mov
lcall
in
jge
adc
aam
popf
mov
lea
fsubrl
mov
adc
test
mov
adc
lret
pop
rorl
in
mov
lods
jnp
jae
lret
rolb
push
in
arpl
xor
pop
nop
jp
jl
xchg
push
mov
mov
sti
nop
and
dec
xor
pop
aas
adcl
aam
ret
jl
mov
cmp
fsubl
and
push
adc
pop
mov
fistpll
or
jle
mov
adc
ss
xor
cmc
add
xchg
pop
daa
inc
xchg
mov
mov
cmp
inc
addl
out
pop
fildl
jmp
fildl
mov
jg
mov
stos
aad
xchg
jmp
test
test
lods
mov
xor
add
sub
ficomps
pop
cltd
enter
fdivs
pop
iret
divb
mov
add
in
aad
add
cmpsb
mov
sub
imul
mov
pop
jbe
inc
leave
gs
daa
or
adc
aam
mov
add
adc
xor
ljmp
cmp
adcl
cli
inc
add
xchg
ljmp
sub
lcall
inc
fldt
inc
xchg
xchg
lods
loop
xchg
dec
addr16
jg
lcall
cmp
push
lcall
imul
xor
out
mov
adc
aad
cmp
imul
mov
cli
cmp
jbe
imul
add
movsl
pusha
es
adc
jge
jns
mov
test
mov
adc
scas
fsubp
mov
repnz
fs
test
scas
mov
push
cmp
into
pop
lock
je
leave
sub
and
and
dec
pop
leave
cmc
fiadds
xor
inc
and
lcall
dec
cltd
fdivrp
and
jle
add
and
fdiv
mov
push
mov
std
int3
pop
enter
pop
add
test
pushf
inc
dec
jl
pop
icebp
lahf
sbb
test
adc
push
xchg
cli
xor
repnz
xor
cld
rcll
jae
in
test
loopne
mov
push
fnstsw
dec
adc
test
fs
xchg
loopne
cli
sub
pop
mov
pop
lods
sub
mov
loop
loop
xor
imul
sbb
jb
js
cltd
mov
xchg
clc
dec
repz
push
cmp
dec
out
pop
aam
test
js
fstps
mov
inc
push
out
andb
mov
adc
aad
flds
rcrb
ror
xchg
js
xor
add
sub
sub
jp
es
fsubs
imul
aas
cld
aad
jo
rcrl
inc
push
pushf
dec
mov
jp
cwtl
mov
leave
mov
jp
jbe
mov
cmp
jbe
xlat
inc
subb
sbb
xor
scas
or
lret
pop
jne
fldl
xor
and
add
or
xor
outsl
ljmp
jmp
repnz
xor
push
scas
sbb
mov
adc
scas
push
icebp
mov
fmull
adcl
std
inc
out
xchg
cld
cld
icebp
or
cmp
push
adc
cmpsb
push
mov
cmpsl
aas
add
xchg
inc
push
cli
popa
fstl
push
movsb
in
inc
push
sbb
orl
ljmp
cmpl
lods
lock
sbb
jl
push
sbb
mov
rol
mov
xor
or
test
das
shlb
or
lea
out
xchg
xchg
add
inc
or
jae
leave
push
cmpsb
xlat
pop
sbb
fnsave
cmp
xchg
jge
mov
mov
ss
and
sahf
fldcw
inc
add
xchg
jb
out
pusha
adc
out
xchg
outsb
push
hlt
popf
fmuls
xchg
ss
sahf
shll
int
xor
sbb
test
into
jl
mov
sub
push
das
addb
dec
add
out
imul
pusha
in
jne
push
or
sbb
nop
out
dec
test
xor
inc
or
repnz
arpl
andl
or
scas
or
xchg
ret
jle
push
xchg
jns
imul
mov
push
mov
cmp
push
or
jo
movsl
inc
or
mov
shlb
icebp
jge
cmp
lahf
andl
gs
insb
or
jp
hlt
push
test
pop
dec
adc
xor
push
leave
xchg
shll
ret
push
shl
xchg
call
hlt
adc
xchg
fcmovbe
repnz
push
dec
xchg
push
xor
mov
aaa
fsubr
test
jb
popf
cs
lea
adc
std
xchg
pop
nop
cli
xor
int
js
mov
mov
jae
arpl
sbb
sbb
imul
and
mov
sbb
gs
push
pop
sbb
rorb
push
call
iret
bnd
sbb
fsubrl
push
push
shll
mov
cmc
out
push
and
jnp
sub
sbb
jb
out
sub
mov
xor
push
jo
push
inc
jns
xchg
stc
xchg
dec
ret
add
popf
aaa
pop
shll
inc
fldl
xchg
popa
pop
cmp
das
insb
add
push
sub
fwait
xlat
push
cmpl
adc
inc
mov
daa
mov
pushf
jo
nop
mov
movsl
push
mov
mov
iret
or
in
clc
push
dec
jg
jle
mov
repnz
insl
add
bound
inc
fdivs
es
out
icebp
out
xor
fisubrl
and
fdivl
es
in
cmp
push
mov
jnp
cmp
pop
pop
xor
clc
sbbb
sbbl
or
xchg
mov
js
push
inc
inc
xchg
and
divb
or
xor
fstpl
mov
mov
adc
gs
call
mov
mov
fisttpl
and
mov
xor
das
pop
inc
or
mov
rcrl
nop
ljmp
add
movsb
sahf
je
popa
jno
shl
xor
mov
mov
xor
push
and
mov
movsl
push
rorl
cmp
out
rcl
pop
imul
bound
mov
xor
js
mov
inc
xor
jns
adc
test
ss
mov
lods
or
imul
or
cld
xlat
adc
sti
les
add
mov
enter
push
sub
je
and
inc
inc
mov
imul
arpl
inc
pop
cmp
enter
push
les
scas
flds
pop
sbb
in
mov
jae
push
iret
in
icebp
mov
pop
jge
lcall
aam
sarb
add
inc
cmc
insl
or
and
icebp
js
xchg
idiv
and
ret
cli
mov
roll
outsl
cmp
iret
mov
das
adc
mov
scas
and
ljmp
ss
and
addr16
je
data16
out
inc
out
add
scas
jl
xchg
fimuls
nop
xchg
mul
mov
insb
das
int
cld
outsb
jg
hlt
mov
mov
in
mov
mov
inc
shr
mov
out
add
jg
aad
arpl
sbb
inc
inc
mov
push
add
gs
lock
dec
dec
xlat
mov
jecxz
mov
pop
and
push
sub
fwait
mov
xchg
shll
mov
shll
imul
lods
jmp
enter
push
push
sub
push
and
fsubrl
mov
and
xor
adc
fiadds
mov
adc
fldt
or
cltd
push
popa
sbb
test
or
and
movsl
jb
leave
push
or
daa
xor
ljmp
jge
or
xchg
aaa
std
icebp
lods
push
fdivrl
out
decl
and
scas
roll
lock
mov
popa
and
hlt
xor
sbb
pop
or
dec
leave
rclb
aam
fmull
fldenv
push
fcos
loopne
stos
lahf
lret
std
push
jo
cltd
pop
shlb
jae
cld
lret
das
scas
sbb
sub
cmp
jnp
fcomps
mov
je
or
and
es
sbb
pop
mov
add
clc
call
ja
adc
jmp
scas
cmp
adc
outsl
add
xchg
sahf
popa
repz
cwtl
sti
sbb
filds
sub
ss
xor
adc
adc
push
shlb
xorl
pop
mov
cmp
mov
sbb
test
test
out
cmpsl
shlb
xor
jecxz
push
testb
mov
test
mov
push
lahf
in
and
cld
shl
dec
aas
pusha
and
mov
enter
in
pop
xchg
lock
stc
aas
ror
stc
jl
dec
jae
cli
inc
pop
adc
dec
or
pop
lock
push
sbb
mov
cs
bnd
xchg
mov
push
enter
fwait
push
data16
or
loopne
jle
mov
fnstsw
pop
adc
jge
jbe
lret
dec
jne
jl
lock
shll
movsl
cwtl
xchg
jne
lcall
leave
xor
rcr
inc
and
jmp
xor
test
fistpll
adc
mov
dec
cmc
clc
pop
or
adc
inc
nop
mov
xor
adc
adc
aaa
es
push
pop
and
cmp
nop
add
in
cmp
jmp
sub
cld
push
insb
sarb
aas
and
outsl
or
pushf
jmp
enter
sbb
in
cmp
push
xor
das
mov
sbb
inc
add
dec
cmc
xlat
cmp
mov
adc
loop
push
xor
dec
mov
push
cld
push
xor
jnp
push
and
pop
pop
jns
push
aam
jno
pop
rcrb
xor
jae
adc
or
or
push
and
or
jp
dec
fnsave
pop
loope
push
cmp
cltd
stos
cmp
jle
movsb
sarb
jp
pop
pop
out
pop
repz
lret
sti
push
xchg
test
rorb
shlb
or
repnz
test
cmp
adc
cmp
adc
or
bound
add
mulb
popl
insl
jg
fcmovb
and
loope
aaa
ret
push
movsb
push
jae
jecxz
mov
mov
pop
or
cmpsb
ss
ret
and
sub
jo
xor
jns
movsl
fidivl
icebp
cmp
pop
adc
mov
fsubl
ret
sbb
lds
xchg
aad
adc
sbb
pop
pop
out
sub
imul
and
clc
cmc
jmp
cmp
popf
mov
js
sub
xor
sbb
popa
xchg
fsubr
add
xor
lret
inc
js
inc
arpl
xor
or
das
and
sbb
push
repz
sti
sahf
ljmp
cmp
push
lea
sub
xchg
inc
cmp
into
pop
push
jl
add
mov
jno
or
imul
push
movsb
cmc
mov
inc
shll
lahf
push
sbb
push
mov
inc
push
ret
lods
jge
mov
sub
lock
jno
push
mov
adc
scas
movsl
mov
xor
and
jle
movsl
jg
cwtl
xor
push
stos
push
aad
xor
mov
repnz
ljmp
xchg
rorl
or
insb
xor
jl
push
add
in
pop
cltd
shrl
test
xor
inc
mov
loope
push
dec
test
mov
fnstenv
push
fistpll
cmpsb
ret
inc
mov
je
inc
roll
push
add
pop
mov
ss
mov
adc
jno
loope
lret
jno
xor
aas
lcall
sub
sub
enter
adc
adc
or
out
pop
or
frstor
mov
inc
cmp
mov
push
mov
rorl
and
loopne
enter
out
rcll
sub
stos
loop
sub
mov
add
mov
lret
cmp
jp
pop
jne
ss
ja
repz
jns
lahf
enter
cmp
out
xchg
sub
or
add
lods
or
adc
inc
pop
pop
and
pop
sar
sub
jo
mov
xchg
cmp
push
mov
pop
into
jle
cmp
or
in
push
nop
fnsave
mov
or
outsl
in
xor
lcall
jne
jecxz
xor
iret
push
dec
sbb
popl
js
or
jge
jl
pop
sar
push
jae
jne
inc
inc
push
mov
pop
fwait
cmp
or
cmpsl
cmp
cmp
push
mov
aas
xor
mov
sbb
mov
es
jecxz
sub
mov
out
cmp
add
testl
pop
push
and
push
stos
gs
lsl
jns
pop
stc
in
enter
adc
cltd
xor
sbb
jb
push
lock
lret
lods
lds
xor
lcall
or
mov
lret
gs
les
sbb
add
mov
or
in
xorb
pop
push
sbb
xchg
xor
xchg
int3
pop
js
xchg
mov
sbb
pop
mov
cmpsl
dec
pusha
dec
es
lea
adc
pop
aaa
ljmp
push
inc
movb
cld
in
xor
mov
lds
repz
loop
adc
cmp
jl
jne
ja
and
and
or
dec
xor
in
loop
test
popa
out
sub
push
clc
cmc
mov
fisubs
cmp
jb
jns
push
std
jl
popf
fdivrp
mov
nop
xchg
mov
add
scas
idivl
mov
je
fstpl
testl
mov
add
test
andb
dec
jne
fimuls
sbb
add
pop
lahf
xchg
jno
xor
xchg
movsl
sarl
cmp
push
call
cmc
lahf
push
sti
push
ss
lods
mov
repnz
ss
mov
shll
inc
mov
cmp
adc
jle
icebp
jg
pop
sub
loope
mov
xchg
stc
lret
cli
adc
mov
pushf
dec
inc
lods
es
push
pop
std
mov
cmpsl
lret
push
mov
mov
fstps
rolb
xchg
xor
mov
test
pushf
adc
sub
add
scas
jle
xor
xchg
cmp
cmp
add
mov
out
mov
push
push
sub
push
push
inc
repnz
jmp
imul
test
xchg
dec
or
jge
scas
jb
cld
xor
xor
mov
addr16
sbb
or
add
inc
in
add
aam
add
xchg
test
movsb
sarl
test
push
mov
push
lcall
movsb
jp
mov
bound
mov
mov
fistl
lret
mov
aaa
int
push
and
jae
stos
jnp
shlb
xor
jns
sbb
adc
sbb
sub
adc
dec
pop
sbb
mov
rcrb
rcrb
fildl
stc
mov
add
addb
aaa
mov
stos
scas
pop
rcl
adcb
cmp
jge
mov
neg
dec
add
and
push
je
pushf
and
std
inc
lret
loopne
adc
scas
xorl
pop
imul
ret
das
mov
cli
sahf
mov
xchg
rclb
or
adc
push
mov
sar
and
adc
lcall
push
lock
loope
inc
push
xchg
out
mov
pop
cmp
pop
mov
js
or
jbe
dec
mov
iret
roll
into
inc
push
jae
gs
lcall
xchg
sbbl
sti
push
pop
insl
or
into
inc
jo
fxch
repnz
xchg
mov
mov
jae
push
mov
push
in
jp
mov
repz
push
push
mov
loop
push
fmull
jo
and
add
scas
xchg
and
xchg
mov
or
adc
shrl
jmp
jbe
jg
cli
stos
sbb
push
cmp
jae
or
push
repnz
les
repz
dec
imul
sbb
push
push
stos
add
lods
sahf
cmpl
imul
add
cmp
xor
lods
mov
cli
or
iret
dec
lods
gs
in
mov
jle
mov
fcmovnu
push
jl
test
adc
int
and
jo
mull
sbb
push
pop
mov
mov
add
push
test
cmp
iret
out
fsts
cmp
jge
lock
ljmp
iret
jle
pop
inc
aad
jl
push
xchg
test
sbb
mov
and
aaa
pop
add
lods
adc
adcl
and
add
cmpb
data16
fdivrs
loopne
add
mov
test
adc
xchg
pusha
mov
inc
dec
bound
pop
adc
mov
out
repz
or
push
xchg
mov
das
mov
sbb
mov
out
outsl
pop
jns
adc
sub
int
in
movntps
sahf
cmp
adc
cmp
pop
std
sbb
push
in
sub
adc
sbb
push
jmp
and
jl
mov
out
jae
out
lret
jl
test
xchg
fildll
push
push
jecxz
cltd
adc
cwtl
jmp
xor
je
ss
mov
loopne
sahf
inc
repz
in
jo
mov
jecxz
dec
mov
inc
scas
xor
or
or
sub
xchg
xor
sub
mov
std
jb
lea
pop
int
xchg
sbb
xchg
test
jge
jbe
into
icebp
in
sub
jg
ss
pop
mov
mov
cmpsl
mov
testl
sub
stos
leave
or
mov
xor
inc
imul
and
sbb
push
popw
in
cld
cli
les
subl
xchg
stc
sbb
and
cli
push
roll
pop
dec
cmpl
mov
add
jp
add
xor
lods
test
sub
xor
pop
jmp
pop
daa
ja
pop
enter
inc
inc
sbb
pop
das
nop
or
adcl
push
cltd
popf
dec
xchg
inc
mov
sbb
scas
scas
pop
fisttpll
mov
add
je
push
push
cltd
and
in
jle
pop
repnz
call
jno
sub
and
loop
jge
loope
adc
xor
and
mov
push
das
pushf
cld
cwtl
pop
jne
fsub
jbe
mov
pop
push
adc
mov
adc
dec
cli
int
mov
sub
cli
sahf
or
ret
jle
adcl
stos
jle
divb
fs
mov
xchg
mov
push
sbb
aaa
shll
ss
pop
inc
mov
push
lret
xor
mov
daa
js
inc
movsl
mov
mov
jle
xor
fistl
into
jg
xlat
jecxz
dec
sbb
cmc
out
shlb
jl
into
fistpll
push
sub
das
insl
dec
adcl
adc
sbb
jle
adc
inc
or
cmp
fs
jp
aaa
mov
addr16
jp
and
jl
pusha
jl
or
ret
in
or
repz
or
mov
cld
and
jmp
jns
xor
mov
mov
leave
inc
adc
adc
inc
jae
jnp
jle
push
scas
inc
iret
ds
mov
aas
xchg
xchg
push
iret
rorb
mov
scas
and
aas
aaa
mov
cmp
inc
out
cmpsl
jp
movsb
jbe
cwtl
xor
loope
inc
inc
or
xor
adc
fldcw
adc
sbb
mov
jbe
push
cmp
push
pop
jbe
mov
lods
adc
pop
jne
sbb
pushf
adc
pop
shr
sbb
mov
mov
mov
out
inc
mov
sub
push
sub
adc
enter
xor
testl
fmuls
ds
cld
or
pop
push
xlat
mov
add
pop
and
sbb
mov
push
and
pop
add
mov
jne
mov
movsl
mov
xor
pusha
or
ss
fcoml
sub
imul
lea
cli
fdiv
push
clc
pop
pop
decl
xchg
xor
out
mov
popa
and
xchg
xchg
gs
shrl
push
push
inc
add
repnz
aaa
pushf
cmp
bound
icebp
adc
and
mov
mov
subb
fistpll
add
push
mov
xchg
jp
adc
xchg
movsl
inc
ss
xchg
pop
push
sbb
mov
or
sub
pusha
push
jg
mov
outsb
fnstsw
fcoml
out
add
shll
ret
and
xor
imul
shll
adcl
push
testl
jae
dec
inc
mov
aam
clc
dec
mov
mov
mov
mov
fisubs
rclb
inc
mov
cmpsl
popf
push
clc
jae
xchg
pop
dec
and
dec
pop
and
dec
aad
mov
mov
insl
in
push
xchg
sbb
popf
scas
and
pcmpgtb
jp
xor
rolb
test
push
lret
lcall
push
sub
in
add
lcall
add
jmp
mov
add
and
or
mov
test
xchg
test
std
mov
pop
mov
mov
and
dec
adc
adc
xchg
test
aad
inc
mov
jmp
cmp
ret
jne
icebp
pop
inc
mov
mov
dec
aaa
aam
push
fcomp
rorb
into
cmc
mov
push
shl
sbb
pop
push
fdivp
cmpsl
imul
ljmp
xchg
mov
inc
popf
add
mov
scas
fstpt
pop
nop
jmp
dec
lock
jg
js
inc
lea
mov
repnz
jne
ss
sub
loop
js
pop
enter
cmpsb
int
xor
pop
movsl
and
fisubrl
push
push
and
aaa
and
fisubrs
test
inc
xchg
ja
daa
jno
dec
add
idivb
daa
sbb
fisttpll
xchg
rol
jo
dec
test
je
movsb
mov
int3
lret
out
adc
dec
cltd
popa
jle
loope
lret
jmp
in
fsts
frstpm(287
xor
movsb
fwait
pop
or
int
and
push
cmpsb
push
add
and
cwtl
les
clc
aam
add
mov
jbe
xor
push
fdivl
std
sbb
sarl
popf
add
hlt
rclb
rcll
leave
mov
cltd
dec
into
inc
dec
nop
arpl
cs
xor
inc
cltd
dec
xchg
pop
cli
scas
pop
xor
stos
out
aam
sbb
dec
mov
ror
xor
dec
or
add
lea
jmp
cmpb
lea
xor
mov
xchg
shl
cmp
sarl
mov
add
ljmp
dec
and
jae
xchg
popf
jae
xor
sub
jo
bound
ret
negl
addr16
mov
ret
leave
fcoml
in
pop
sbb
inc
pop
mov
cmp
out
pop
and
rol
jne
push
stc
cltd
sbb
adc
pop
lcall
mov
stc
xchg
pop
ja
add
adc
xor
sub
jge
jp
xor
jge
movsl
data16
dec
pop
jge
lock
testb
lods
dec
cmp
pop
push
mov
push
cwtl
or
dec
pop
cmp
stos
idivb
mov
xchg
xchg
in
jg
js
sahf
pop
fnstsw
xchg
in
fildl
cmp
lds
sbb
cmp
and
pop
das
push
add
test
sti
push
dec
sbb
jnp
jl
cmp
add
cmpsl
mov
jmp
add
jne
imul
jg
xchg
movsl
pop
fdiv
popf
sbb
jno
test
fsubs
cmp
vphadddq
pop
pusha
je
out
pushf
push
ss
mov
pop
das
shll
lcall
xor
lods
fcmove
push
pop
pop
jp
mov
shrl
clc
roll
xorb
nop
jg
das
lcall
jl
xor
adcl
fists
lret
rcll
imull
xchg
mov
sbb
dec
xchg
and
xchg
pop
inc
inc
nop
enter
fcmovbe
lcall
movsl
enter
push
inc
inc
inc
sbb
push
sbb
adc
inc
cwtl
pusha
mov
and
cmc
aaa
aad
mov
ret
and
push
ss
shrb
and
in
or
idivl
sbb
jno
loope
lods
cltd
jno
fwait
mov
push
loope
pop
mov
fsts
dec
test
movsb
cmp
loopne
jae
test
js
cmc
lea
add
inc
mov
push
movhps
in
insl
notb
add
push
leave
push
rcr
dec
mov
and
adc
sbb
push
pop
mov
imul
pop
rorb
xchg
sub
push
push
out
jae
js
adc
push
or
sub
test
cmp
mov
mov
push
dec
test
mov
mov
xchg
xchg
push
mov
xchg
scas
jl
popa
shll
testl
loop
test
sbb
push
xchg
imul
iret
into
xchg
loope
cmp
push
mov
pop
add
xchg
adc
xchg
mov
aam
call
call
call
lods
mov
shrl
mov
mov
js
xchg
inc
xor
sub
inc
push
xor
push
dec
jle
mov
sbb
int
push
fidivs
sarl
shlb
xchg
aas
sub
dec
pop
fisubrl
fsubrl
inc
fimuls
rol
push
sub
clc
std
add
xor
pop
cltd
ret
aaa
imul
sbb
fs
pop
cmp
mov
jle
mov
idivb
je
jmp
ret
push
adc
or
mov
mov
repnz
add
push
call
popf
xor
mov
int3
adc
push
lods
cli
fs
jo
nop
test
mov
insl
shll
adc
jg
and
mov
test
fcom
jbe
cmpb
adc
fsub
mov
pop
mov
sub
and
dec
and
pop
inc
xchg
aad
jne
xchg
jo
shlb
dec
daa
std
mov
adcl
sarb
cltd
xchg
lds
leave
adc
jno
rclb
cmp
add
icebp
outsb
fs
les
movd
push
fsubrs
imul
inc
out
lds
inc
shll
adcb
test
dec
xchg
mov
or
stos
dec
bound
nop
lods
aas
dec
push
push
js
push
xor
and
add
cmp
lods
jns
xchg
dec
mov
fisubrs
into
mov
adcl
mov
jge
test
mov
lret
and
call
xor
cmp
cmp
mov
lods
lods
mov
mov
sbb
andl
hlt
imul
or
jo
sub
adc
lods
push
add
pop
jns
or
xchg
jbe
xor
or
jg
inc
dec
push
add
pushf
cmp
rcrb
or
sub
mov
and
insl
or
jle
lea
lcall
ds
call
mov
mov
stc
loope
stc
subb
notl
jl
not
add
sub
jl
xchg
cld
jnp
jne
shlb
sub
cmp
sub
neg
imul
test
rclb
or
or
mov
in
push
mov
inc
mov
xchg
xchg
in
repz
cmp
gs
dec
clc
xchg
loopne
movsl
int3
loopne
shlb
mov
arpl
xchg
imul
cltd
mov
pop
and
testl
paddusb
xchg
stos
mov
mov
adc
sbb
xchg
cmp
cmp
cli
jb
push
pop
pop
jmp
jge,pt
cmc
fidivl
pop
stos
sbb
xlat
dec
sub
repz
sub
and
jae
stc
jb
add
xchg
adc
lcall
insb
das
inc
push
mov
inc
insl
rcll
subl
iret
xor
scas
jg
nop
cmp
insl
pop
clc
jno
fwait
push
mov
xorl
mov
inc
jnp
das
jo
jl
sub
sub
out
pop
sub
mov
dec
lock
add
movsl
adc
xor
cld
arpl
inc
jo
fstpt
pop
movaps
push
cmpb
popa
push
push
xor
pushf
and
pop
xchg
push
rorl
nop
test
dec
or
stos
or
repnz
cld
cmp
aad
subl
fcoml
ja
sub
inc
stos
iret
sbb
lock
lret
xor
jge
dec
jns
int3
pop
roll
adc
lods
xchg
push
andb
jle
rclb
sbb
xchg
pusha
mov
sbb
shrb
data16
rcll
cmc
sub
mov
add
mov
cmpsb
sub
jg
mov
mov
mov
push
ja
jno
jno
jbe
aad
pop
push
adc
jle
adc
pop
mov
pop
pop
xor
mov
xchg
stos
gs
jmp
in
xchg
jl
xor
jbe
or
stos
in
stos
les
dec
or
dec
mov
sbbb
in
out
notb
sub
and
data16
int
shl
jmp
das
dec
mov
add
cmp
movsl
lahf
jg
in
cld
dec
and
jne
rclb
mov
push
xor
mov
ljmp
cmp
lcall
orb
xor
test
sbb
js
cs
jecxz
cwtl
icebp
ljmp
lock
inc
pop
clc
jns
sub
std
xchg
fcomps
movsl
mov
ss
add
jbe
insb
push
or
inc
mov
cmp
and
aad
movsl
inc
adc
xchg
mov
lea
xchg
scas
nop
dec
sub
mov
idivb
xor
rorl
mov
stos
aaa
bound
jp
sub
push
mov
push
push
adc
cmp
sub
push
lahf
mov
adc
xchg
cmp
loopne
and
in
xor
pop
xchg
xor
lds
inc
je
aad
test
sbb
ja
push
sbb
mov
cmp
sbb
push
fnstenv
cmp
repnz
dec
ss
mov
xor
jno
adcl
sub
sbb
cmp
sar
mov
pop
lea
cmp
mov
pop
mov
loope
mov
fwait
xor
pop
lret
add
pop
lahf
sub
xchg
mov
nop
sbb
mov
ja
xor
xor
push
test
fistpll
jne
fidivl
sbb
xor
jne
in
cmp
test
mov
xchg
ss
popf
test
adc
jne
mov
icebp
xchg
dec
xchg
mov
test
adc
xchg
add
jbe
jbe
scas
sub
add
cwtl
mov
lcall
repnz
mov
ljmp
pop
adc
ficompl
cmp
lahf
fisubs
xor
aas
xchg
cmp
fimuls
cmc
fucomp
add
xchg
in
inc
add
pop
daa
cmp
sbb
mov
rorl
xor
jnp
sbb
clc
mov
pushf
push
cmpsl
mov
lret
add
lahf
jle
test
push
push
aam
dec
mov
sbb
add
ss
sub
ss
and
mov
rol
das
enter
xchg
mov
test
push
mov
and
cmp
jb
jecxz
inc
jg
lret
or
push
adc
push
adc
test
repnz
and
add
add
subl
cmp
cwtl
mov
dec
sarb
pop
cld
arpl
scas
pop
aad
mov
aaa
cmp
cmpsl
jns
jo
arpl
push
fs
dec
aaa
xlat
and
mov
int3
arpl
popf
mov
or
scas
xchg
adcl
pop
and
mov
int
mov
cld
mov
cmp
sbb
mov
lods
rolb
hlt
pop
shlb
push
mov
mov
mov
cmpsl
movsl
aam
xchg
adc
aaa
mov
adc
rolb
cld
in
xchg
xlat
add
xchg
das
mov
sahf
ds
rclb
lahf
mov
stc
jns
bound
mov
insl
ret
cmpsb
rcr
push
loopne
push
xchg
ror
push
push
rol
push
test
mov
pop
movsb
xorb
cmpsl
adc
inc
and
jns
adc
rorb
jb
lods
xor
jl
add
adc
xor
imul
sbb
lret
push
icebp
repz
push
rcrb
es
cmp
icebp
push
add
sub
fs
adc
mov
lods
xor
enter
xor
shll
jle
lea
sbb
or
push
xchg
addr16
xor
aas
xor
and
test
lds
mov
or
negb
rcrb
push
push
dec
mov
pop
xorb
pop
jg
mov
out
push
xchg
fs
add
int3
bound
pop
mov
iret
cmpsb
mov
and
cmp
lahf
outsb
inc
xor
sbb
push
rcl
pop
sarb
pop
cmp
sbb
repnz
push
add
repnz
inc
jb
and
mov
rcrl
jne
cmp
ja
cld
rcrb
fdiv
scas
adc
pop
cmpsl
cltd
imul
ss
and
adc
rolb
fists
insb
sti
push
neg
add
push
rcll
das
insb
adc
mov
jno
mov
sbb
in
dec
mov
popa
fstpt
mov
ror
and
pop
int
hlt
add
fistl
cs
fwait
dec
jns
add
out
push
lods
add
push
ss
inc
insl
jl
jo
pop
test
shll
negb
add
sub
jp
fwait
xor
or
mov
cwtl
xor
add
xchg
sub
mov
xchg
push
mov
vcvttpd2dqx
mov
and
sbb
inc
mov
lret
and
xor
mov
ret
inc
ljmp
mov
repz
push
ret
cmp
fldl
push
inc
dec
push
add
mov
mov
adc
nop
jle
xor
sahf
inc
pop
sahf
xchg
add
icebp
jns
jns
push
sub
rcll
mov
int
push
adc
rcr
sahf
fs
in
xor
jb
fabs
pushf
aaa
sub
ljmp
jmp
into
adc
aas
mov
adc
xchg
jns
jl
mov
push
cmpb
ss
mulb
or
add
sub
ret
push
sbb
adc
pushf
jmp
push
add
int
popf
aaa
popa
divb
push
xchg
js
add
mov
leave
xor
js
and
fidivs
pop
xchg
and
outsl
inc
pusha
aad
xchg
adc
repz
pop
dec
testl
ja
sbb
addr16
jns
sbb
and
jns
imulb
xor
daa
mov
push
add
sti
push
in
push
sahf
inc
sbb
hlt
add
cmc
jno
hlt
js
icebp
mull
dec
mov
push
in
aam
sbb
inc
xchg
leave
sub
stc
lds
sbb
cli
push
lret
push
jl
xor
mov
std
aam
pop
dec
dec
pop
lods
std
inc
xchg
mov
shlb
insb
hlt
jmp
test
call
sbb
xchg
mov
test
data16
xor
mov
lea
xchg
xor
and
loop
ja
mov
fiaddl
icebp
lahf
or
fnstenv
and
ljmp
in
outsl
and
mov
pop
lcall
xor
std
mov
es
int3
enter
xor
rcrb
mov
mov
js,pt
repnz
repnz
stos
add
fsubs
lods
adc
divl
push
imul
iret
adc
jnp
insb
gs
xor
pop
lock
adc
xorl
jecxz
pop
cmp
mov
jb
adc
ljmp
jns
mov
fdivs
adc
push
test
clc
fnstcw
out
mov
xor
fwait
jbe
and
js
out
les
addr16
and
in
mov
push
mov
pop
xlat
adc
lock
jge
push
clc
test
dec
adc
adc
pop
das
mov
cltd
push
aad
mov
mov
arpl
push
test
jmp
and
adc
test
repnz
jbe
jg
in
repnz
sbb
cmpsl
jne
xchg
outsl
sub
or
xor
dec
and
inc
xor
mov
in
cld
xor
pushf
and
jb
fwait
test
int
and
xor
das
jg
popa
mov
push
inc
jns
push
loope
push
and
jnp
repnz
lcall
mov
push
outsl
scas
mov
gs
lahf
add
clc
xchg
xchg
vmovd
iret
xor
enter
mov
xchg
adc
push
or
adc
xorb
xor
inc
mov
pop
pop
add
sahf
adc
mov
inc
adc
call
sbb
mov
xchg
inc
mov
and
mov
lea
int
clc
and
jbe
cmpsl
sbb
jne
mov
icebp
or
daa
xchg
jle
imul
mov
xchg
into
push
mov
jae
lret
pop
xchg
les
jmp
jbe
out
or
dec
ja
adc
lea
and
push
cmp
lcall
testb
pop
xchg
loopne
mov
or
hlt
pop
fcomps
insb
sbb
cmpsl
inc
push
add
clc
pushf
push
loop
das
and
xchg
mov
adc
insb
out
aad
pop
mov
jns
mov
in
jle,pn
popf
inc
fdivs
cmc
push
hlt
addr16
je
jmp
into
xor
sti
mov
mov
sahf
jno
mov
pushf
ja
dec
cmp
in
mov
lret
xchg
dec
pop
cmp
cmpb
leave
outsb
push
jg
xchg
sub
int3
fidivrl
xorl
and
push
shr
roll
push
and
adc
add
addr16
cltd
das
jno
mov
add
je
xlat
lret
add
lods
and
popf
popf
je
cmp
and
adc
ret
xchg
sbb
imul
jae
jno
mov
hlt
and
in
adc
in
mov
int
arpl
and
cld
xlat
outsl
cmc
in
pop
scas
sti
jo
sbb
jb
push
shll
inc
sahf
xor
ljmp
scas
push
insb
sub
popa
ss
inc
stc
ret
lds
dec
out
loope
test
std
mov
int3
out
cltd
or
adc
cmp
sub
fidivl
push
mov
mov
sarb
adc
mov
push
lock
fwait
stos
mov
mov
stos
jbe
xor
xchg
adc
push
repz
jo
je
and
mov
mov
pusha
rcrl
outsl
mov
sahf
mov
loop
adc
fstl
jo
js
inc
cltd
xchg
mov
push
lock
mov
and
or
repnz
jno
lods
cmp
shll
and
das
ss
stos
ss
lcall
and
test
xchg
ljmp
jge
cmc
xchg
mov
xor
xor
fmull
pop
lea
xchg
and
mov
sahf
les
jb
test
test
stc
sub
fdivs
mov
pop
aad
sbb
ret
rcl
and
add
xor
add
fistpl
mov
int
call
mov
adc
inc
leave
adc
jg
mov
jns
push
xor
test
push
arpl
das
decb
xor
jnp
adc
cli
sbb
add
and
movsl
sahf
push
ffreep
or
push
filds
enter
divl
xlat
cmp
sbb
push
mov
sbb
cmp
out
jp
jg
mov
pop
push
cmp
jo
int
dec
ja
or
out
sbb
xor
adc
jp,pn
decb
into
and
xchg
sub
mov
outsb
andl
push
adc
adc
lret
mov
mov
push
dec
adc
in
push
jge
mov
out
xor
or
jno
mov
push
push
jp
sbb
mov
in
pusha
jbe
add
cwtl
shlb
jp
inc
cwtl
jnp
push
mov
pushf
test
add
xor
icebp
adc
cltd
nop
imul
jecxz
insb
ja
xor
je
negl
cs
and
leave
add
jns
bnd
in
push
mov
sub
fisttps
mov
in
push
idivl
rcl
fidivrl
adc
jge
fdiv
inc
insb
data16
sti
stc
xchg
and
aam
cltd
mov
loopne
stos
jmp
pop
xor
mov
mull
in
xlat
dec
mov
adc
ret
int3
aam
lea
testl
fimull
cltd
test
mov
cld
push
jne
cmpsl
inc
adc
dec
jge
data16
cmp
in
adc
cmpsl
xor
jnp
repnz
int3
pop
mov
add
pop
jne
cmpsb
mov
jg
nop
xchg
fdiv
jmp
add
mov
and
pop
clc
adc
add
xor
fidivl
in
lds
adcl
test
xchg
out
fmuls
and
ret
add
fmull
push
sbb
or
out
pushf
sbb
xor
and
ss
call
int
ret
cld
gs
push
aaa
out
ljmp
cmp
hlt
das
mov
fnstcw
test
sub
mov
in
mov
cmp
stos
push
mov
xor
jg
filds
pop
cld
loope
clc
cmp
jge
sbb
fidivs
lret
and
mov
push
dec
lret
xchg
in
stc
mov
push
jg
movsb
dec
jg
fsub
mov
adc
add
inc
ret
test
movsb
push
data16
ja
mov
sub
sbb
dec
ret
mov
ljmp
xorb
ficompl
xor
xorl
pop
or
je
sub
loopne
adc
push
mov
insl
sti
rorb
imul
sahf
rcrb
sub
inc
xchg
sarb
je
mov
lahf
sub
std
and
jp
adc
mov
ret
repnz
sub
pop
and
xor
cmp
push
xor
sbbl
bound
pop
imul
xchg
jl
mov
test
jb
or
in
cmp
push
ficompl
test
xchg
test
mov
cmp
jg
scas
cmp
test
pop
nop
dec
test
std
insb
ret
dec
xchg
cld
les
push
or
xchg
adc
mov
movsl
cmp
rcll
ja
adc
ljmp
add
lret
stc
out
mov
lahf
repnz
gs
inc
jae
mov
mov
adc
adc
sbb
xor
jmp
out
xchg
cli
sbb
gs
leave
cwtl
lock
add
sbb
cld
js
push
xchg
push
mov
in
adc
dec
std
sbb
gs
xchg
leave
lret
stc
or
pop
sub
rol
dec
jnp
xchg
inc
mov
bound
ss
push
int
sbb
stos
sbb
push
lret
adc
mov
data16
mov
sti
mov
ds
push
jo
and
jle
mov
jmp
pop
jns,pt
add
inc
add
ret
mov
sub
push
and
mov
lcall
in
inc
and
cmpb
fs
mov
sub
jbe
loop
cmp
ljmp
jne
pop
and
fisubrs
jbe
xchg
xchg
es
adcb
jne
aaa
ss
inc
xor
int3
jge
in
cmp
add
mov
xor
icebp
dec
inc
int
mov
cmp
adc
fnstcw
xchg
jg
mov
and
jmp
mulb
cmpsb
test
mov
or
nop
es
aas
fmul
adc
inc
xchg
lock
nop
test
jns
ss
pop
data16
xor
scas
xor
or
gs
add
jge
out
xchg
aam
xchg
dec
cmp
das
cmc
lds
mov
repz
loope
jbe,pt
fcompl
cwtl
push
xchg
mov
fucomi
xchg
mov
or
ljmp
lret
fwait
push
int
repnz
les
ret
dec
in
notl
popa
call
jle
int
ja
sbb
and
xor
ds
push
cmp
in
jp
inc
les
jle
cltd
leave
sti
ljmp
aam
aas
mov
not
pop
add
rclb
ja
dec
sub
push
add
jbe
sbb
shl
loop
lahf
insb
or
mov
stc
cmp
lret
jne
cmp
inc
outsl
push
add
pop
jecxz
mov
outsl
xchg
and
mov
es
xchg
cmp
mov
push
icebp
movsb
ss
dec
stos
cmp
repz
inc
call
xor
sub
pop
add
rol
popa
lock
jg
ret
adc
popf
dec
data16
out
mov
insl
mull
mov
sub
push
mov
xor
outsb
scas
or
jnp
dec
insb
sub
push
shrb
cld
mov
pop
dec
movsl
ja
xchg
mov
sub
mov
mov
cli
lea
arpl
iret
clc
pop
popa
aam
ss
stos
and
stos
jge
fwait
sbb
in
sbb
adc
aaa
mov
inc
xchg
and
je
dec
push
sbb
inc
push
scas
fsubp
lret
pusha
cmp
imul
pandn
mov
jno
push
test
add
pop
test
ficoms
dec
cmp
push
dec
jmp
ljmp
sti
loopne
popa
jnp
imul
inc
xor
sub
pop
ja
jecxz
fstl
xchg
jno
pop
cli
std
and
fwait
mov
mov
xchg
es
test
sbb
pop
ret
xor
in
xor
and
xor
shlb
jmp
es
and
inc
xchg
ds
call
subl
xor
push
mov
loopne
lcall
mov
fcompl
in
xor
and
lds
push
rorl
imul
outsl
xor
sbb
dec
pop
and
mov
pop
cmc
in
das
outsb
push
fdivrl
mov
stos
into
icebp
push
insb
pop
or
lcall
xor
mov
push
test
dec
lods
fwait
dec
jmp
mov
test
pop
cmp
sub
jg
repnz
fwait
in
xor
cmp
iret
pop
loop
ds
pop
dec
cld
incb
jge
inc
or
and
pop
jp
inc
dec
hlt
and
dec
lods
scas
inc
mov
mov
jecxz
mov
jb
scas
sahf
jl
adc
jmp
xchg
sbb
addr16
jne
mov
ja
cmc
mov
cmp
adc
sbb
push
jae
imul
add
imul
mov
loop
xchg
loope
pusha
push
inc
repnz
scas
ud2
add
mov
pusha
push
xor
cmp
dec
cmp
xchg
nop
imul
cli
enterw
pop
inc
mov
xchg
in
xchg
sbbl
mov
or
sub
popf
scas
cmp
ret
lods
jge
cs
cmp
mov
pop
adc
xchg
sbb
out
xlat
sub
xchg
xchg
mov
and
pop
outsl
xor
pushf
lea
push
lea
adc
test
add
adc
sbb
pusha
aad
addr16
or
mov
and
jns
mov
jmp
cmp
inc
test
adc
add
mov
mov
pop
jns
mov
daa
cmpsl
dec
adc
cmp
mov
lock
fidivrs
je
mov
mov
ss
ss
loop
mov
dec
jmp
rcrb
ss
mov
inc
fists
mov
les
aam
adc
divb
daa
ja
xor
rcll
xchg
sub
inc
mov
cmp
adc
push
inc
mov
cmpsl
arpl
xchg
cwtl
popf
pop
jne
pop
ds
fidivrl
mov
sbb
mov
insl
sbb
jge
jns
mov
adc
xor
andl
inc
cmp
ljmp
leave
and
dec
out
xchg
pop
xchg
fcoms
cmpsl
sbb
insl
inc
adc
pusha
or
push
dec
repz
loop
sti
pop
xchg
inc
xchg
ficoms
lahf
nop
ficoms
testl
and
gs
cld
and
mov
push
add
mov
sbb
adc
push
insb
lods
dec
adc
xor
ret
pushf
sbb
xchg
lret
lods
iret
sub
jp
adc
xor
cmp
fcompl
icebp
adc
adc
cmp
clc
xor
flds
jb
xor
lcall
jns
inc
mov
aas
or
sti
dec
cld
jp
ja
rcrl
and
mov
add
inc
or
gs
or
adc
pop
ret
sub
mov
push
bound
jae
jbe
cmp
and
fsubl
ja
adc
push
sub
fbld
mov
divl
xor
jle
std
dec
insl
cs
loop
cli
popa
add
cmp
jne
pop
fnstsw
or
mov
sbb
cmc
sub
cmp
xor
in
mov
rcll
and
jo
push
and
nop
aas
cli
stos
adc
or
bound
pop
int
mov
push
and
xlat
outsl
ja
in
sub
lret
mov
adc
sahf
xor
pop
xorl
bnd
jp
dec
add
clc
fcompl
stos
mov
mov
inc
scas
mov
scas
mov
mov
and
js
das
in
cmp
and
pop
and
jle
rorl
dec
add
mov
rorl
es
cltd
or
sbb
pmulhuw
xor
jnp
cmp
sbbl
rcll
les
pop
in
lds
jmp
push
lea
lods
jle
adc
scas
cmp
xchg
jb
hlt
and
pop
movsb
pop
les
loopne
mov
push
pop
inc
nop
push
cmp
pop
xor
inc
xchg
and
add
and
out
cmp
mov
fwait
inc
shrb
xchg
arpl
sub
stos
rcrb
rcll
divb
xlat
cmc
in
and
xchg
add
das
xchg
ret
pop
rcrb
jo
adc
jle
or
movd
pop
icebp
or
cmp
dec
inc
cwtl
js
jnp
adc
xor
push
push
push
pushf
mov
pusha
jl
xchg
push
or
mov
sti
imul
icebp
mov
aaa
xchg
cmpsl
jbe
sbb
cltd
or
gs
test
jge
or
cwtl
mov
inc
and
jecxz
cmp
mov
sbb
mov
and
xchg
xlat
or
iret
rol
xor
sub
incb
sbb
xchg
fmuls
xor
std
in
adc
popa
or
push
inc
or
aad
ljmp
imul
sar
out
add
xlat
or
mov
out
iret
pop
sub
pop
cmp
inc
mov
dec
aaa
pusha
aam
add
jbe
or
rorb
add
adc
js
nop
jno
dec
lcall
or
push
movsb
stos
lahf
addr16
and
shrb
aam
jb
and
pop
mov
pop
es
dec
loop
clc
out
mov
xchg
hlt
cmp
or
sbb
clc
popa
popw
or
pop
pop
punpckldq
in
dec
jmp
pop
dec
sub
mov
cmp
or
pop
add
add
pop
push
xchg
pop
js
sbb
or
leave
std
and
loop
popf
mov
add
lret
cmc
jge
fldt
enter
xchg
lahf
cltd
fsubl
test
dec
inc
pushf
pushl
or
ret
lahf
cmp
cmp
sahf
dec
das
sahf
mov
mov
popf
adc
notb
xchg
and
or
jne
frstor
mov
xlat
mov
sbb
push
por
aas
pop
pop
mov
mov
cltd
fnstenv
adc
sub
jae
adc
mov
or
lods
fimuls
aas
mov
mov
mov
mov
stc
icebp
idiv
loop
cli
xor
cli
lea
repnz
mov
mov
dec
fisttps
xor
and
inc
add
outsl
dec
mov
dec
cmovge
xor
push
sbb
into
mov
inc
push
mov
stc
pop
sub
adc
lods
ds
shlb
orb
call
pop
push
aam
mov
mov
out
imull
sub
push
xor
add
in
pop
fld
jns
leave
icebp
and
imul
repnz
xchg
imulb
or
mov
xor
jecxz
jp,pn
imul
push
cmp
dec
cwtl
mov
clc
push
pop
add
dec
mov
mov
dec
push
push
inc
popf
nop
adc
mov
dec
and
sbb
aad
pop
mov
iret
mov
jb
jp
outsb
mov
fisttpl
pop
push
leave
stc
pop
jp
adc
add
dec
daa
movsb
orl
mov
push
int3
or
movsl
add
push
add
jmp
push
daa
repz
test
lds
push
adc
dec
jl
ja
jno
cwtl
dec
test
mov
adc
lods
hlt
lock
cmpsl
popf
xchg
call
jno
add
xchg
adc
sahf
jbe
or
mov
sbb
movsl
fs
xor
sbb
sbb
pop
sbb
outsb
push
lods
mov
push
sub
push
inc
ss
dec
out
mov
in
xchg
mov
lret
stc
shll
cwtl
stos
adc
xchg
push
mov
mov
cwtl
int3
inc
mov
loopne
pop
sub
jp
and
dec
inc
push
pop
mov
cmp
push
or
xor
adc
or
jecxz
ja
mov
lods
ss
clc
jg
aam
mov
mov
paddsw
fs
add
fwait
test
push
inc
stos
xchg
xorb
jecxz
push
int
mov
ja
push
andl
repz
ds
mov
shl
negb
imul
test
xchg
mov
adc
pop
mov
cltd
rcr
mov
and
mov
adc
xor
scas
addr16
pop
repnz
jae
ret
xor
scas
repnz
mov
push
cmp
outsb
and
out
mov
test
rcrb
sub
mov
xchg
jbe
inc
mov
lahf
pop
aaa
mov
mov
mov
mov
imul
std
inc
shll
push
int
repnz
out
rorl
popa
adc
leave
push
fdivs
push
not
push
push
push
dec
add
xor
cs
cmp
push
lcall
mov
out
jae
sbb
jno
jmp
push
lretw
xchg
ficomps
sub
and
roll
call
mov
push
sbb
outsb
push
dec
inc
es
jle
xor
and
stc
add
sar
fs
jge
cmpsl
cltd
mov
sub
test
push
inc
sub
imul
xor
sub
adc
jg
cwtl
addl
xorb
dec
mov
mov
add
ss
dec
hlt
add
mov
mov
cmc
test
lcall
mov
add
dec
out
sbb
out
push
sbbl
movsl
aas
arpl
inc
mov
cwtl
push
cld
cwtl
repnz
push
push
andl
test
jg
and
xor
adc
insb
int3
pop
dec
cmp
adc
mov
or
sti
adc
mov
cmp
pushf
pop
test
jecxz
cld
push
add
lea
sahf
mov
adc
jecxz
jns
jne
or
arpl
fwait
add
mov
in
cmp
les
sbb
and
sbb
in
sub
stos
xor
jp
sub
inc
lds
std
and
rorl
imul
out
xchg
scas
loope
test
dec
jb
bnd
adc
mov
xchg
cld
jne
inc
jnp
sub
push
or
inc
mov
inc
movsl
jno
inc
mov
ds
pop
imul
push
jge
push
cli
shlb
dec
les
test
or
js
test
das
popl
cmp
mov
cmpsl
rorl
test
cmc
pop
repnz
xchg
pusha
push
pop
dec
ljmp
mov
imul
jge
dec
pushf
test
idivb
jbe
outsl
rol
or
inc
mov
lock
xor
or
nop
testb
jecxz
stc
jmp
aas
test
popf
add
push
js
sub
mov
in
test
mov
mov
ret
fistps
pop
or
enter
int3
pusha
shll
in
push
lret
adc
mov
enter
pop
mov
idivl
inc
ljmp
sub
lock
ja
pop
fdivs
mov
addb
in
jecxz
adc
jb
mov
adc
or
pusha
cld
fnstenv
jbe
push
lret
in
xchg
sbb
leave
mov
and
add
cmp
fstl
lret
xlat
outsl
movsb
mov
jecxz
pop
arpl
cmp
sarb
sbb
cmp
setne
sub
es
xchg
mov
dec
sbb
xchg
push
sti
sbb
sub
aad
in
push
xchg
test
adc
sbb
cmp
je
into
stos
add
icebp
jb
adc
adc
adcb
and
jbe
jno
stos
std
testl
idiv
out
paddsw
or
xor
jo
out
mov
xor
inc
dec
dec
int3
je
push
sbb
icebp
mov
pushf
mov
mov
gs
and
adc
adc
sub
sahf
aaa
mov
fldcw
xchg
daa
rcrl
inc
lcall
jb
popa
or
cmp
adc
mov
xor
outsb
or
or
int
mov
outsl
and
sbb
lock
lods
out
sub
sbb
in
push
push
sub
xchg
ror
call
aad
movsl
insb
leave
or
inc
shl
or
mov
mov
jnp
test
jmp
pop
pop
popf
xor
ds
nop
xchg
cmp
scas
cmp
or
cmpsl
outsl
mov
xor
aas
lret
cmpb
inc
nop
addr16
mov
outsb
adc
push
in
pusha
dec
lock
xchg
pop
lret
daa
add
mov
or
mov
cmc
sbb
xor
ret
shll
bound
iret
test
js
add
cmp
inc
out
sub
loope
imul
push
clc
sub
je
ds
push
xor
je
shlb
mov
mov
adc
mov
cwtl
push
stos
shlb
lods
cld
lods
in
xchg
mov
cmp
data16
mov
and
mov
out
pop
add
mov
js
pop
js
rcl
loopne
notl
xchg
or
les
or
mov
lods
adc
popf
push
push
mov
outsl
xchg
iret
xchg
sub
pusha
and
adc
push
jo
lds
sub
cltd
pushf
xchg
divb
sbb
cmp
mov
mov
lods
aaa
call
jl
bound
mov
sbb
adc
shl
mov
dec
out
inc
mov
test
sbb
lret
insb
nop
push
les
dec
rcrb
test
xorl
mov
pushf
sub
sbb
out
sbb
lods
aad
adc
and
mov
and
push
ja
jnp
aaa
out
mov
jnp
mov
pop
into
out
dec
add
hlt
add
ss
sub
cltd
repz
jp
xchg
rorb
lea
mov
rcll
cmp
sub
cmp
test
mov
dec
cltd
popa
pushf
sbb
lock
inc
ds
or
push
repnz
repz
out
testb
xor
lcall
lret
cld
sub
inc
fsub
scas
and
test
mov
pop
and
sub
ret
notb
enter
es
jae
xchg
xor
sub
shl
dec
les
iret
fdiv
inc
addr16
loopne
push
xchg
push
jle
mov
arpl
repnz
sbb
pop
mov
aam
mov
mov
mov
cs
or
adc
mov
pop
push
lret
push
add
inc
xor
jmp
test
stc
jne
sub
dec
jl
mov
nop
adc
outsl
adc
int
adc
mov
es
jne
xchg
sahf
rcll
mov
out
fldl
xchg
jb
sbb
fs
jl
adc
cltd
cli
lods
fdivp
or
mov
mov
xor
push
leave
lret
mov
and
push
pop
mov
mov
jle
scas
js
pop
je
fldl2e
out
xorl
ret
mov
dec
push
sti
mov
inc
cmpsb
jbe
ficoml
push
mulb
push
scas
dec
fucomi
cmc
mov
push
ljmp
lret
inc
out
loop
enter
pop
ds
xor
ja
cmp
gs
call
lods
mov
bound
mov
pop
adc
daa
ljmp
mov
shlb
sub
leave
sbb
mov
cli
andl
dec
dec
icebp
pop
push
sbb
fwait
mov
xchg
popf
or
push
xchg
daa
push
xor
iret
add
pop
and
mov
push
ja
jo
lods
xchg
mov
stc
bound
add
dec
outsl
loop
orl
sbb
mov
ret
icebp
sbb
jmp
and
rcrb
loope
mov
jbe
cmp
add
add
adc
adc
sub
mov
ret
cld
adc
in
pop
andl
shrl
rcl
mov
repnz
adc
xor
mov
pop
inc
dec
stos
arpl
push
loopne
push
pop
mov
test
imul
ss
sub
int3
aad
push
sub
daa
sbb
and
setns
sbb
popf
in
cmp
mov
ss
xchg
lret
xor
mov
pushf
or
and
cmpsl
fwait
es
push
dec
add
or
in
orl
stos
add
fabs
sti
outsb
mov
jp
pop
ja
fwait
or
notb
imul
in
add
add
or
mov
cmp
dec
loope
push
push
inc
mov
loope
xchg
insb
inc
xchg
add
rol
dec
es
arpl
testb
scas
cmp
add
iret
ljmp
fsubs
mov
pop
push
jecxz
push
pop
mov
imul
mov
xchg
imul
in
leave
pop
adc
cs
daa
mull
sbb
mov
mov
xlat
dec
enter
hlt
adc
cmpsl
push
push
sbb
pop
mov
xchg
mov
adc
push
jbe
push
fists
out
int
mov
stc
add
aaa
lret
push
lods
pop
ja
sbb
mov
negb
repz
pop
pop
and
xor
cmp
inc
add
inc
xrelease
adc
mov
cmp
out
lods
mov
int
mov
xchg
fisubs
push
lock
ret
xchg
mov
lock
lcall
pop
popf
idiv
cld
popf
sti
pop
call
lods
insb
cwtl
jg
rolb
jg
fcoml
or
xor
mov
ss
jno
jno
push
dec
inc
int
mov
or
xor
je
movsb
movsl
pop
call
adc
add
dec
ja
fstpl
movsb
test
and
out
lcall
mov
and
ja
fcmovnb
faddl
jge
std
mov
push
fbstp
aad
and
mov
adc
push
pop
mov
das
push
pushf
inc
sbb
inc
add
cmp
aaa
flds
sarl
cwtl
stos
and
aas
xor
inc
push
pop
mov
sub
adc
fisubrl
and
mov
and
cmp
imul
mov
inc
pop
loope
and
fldln2
in
xchg
insb
das
xor
adc
and
imul
sub
inc
adc
mov
std
flds
mov
pop
adc
mov
and
out
pop
rclb
movl
daa
push
sbb
add
xchg
scas
sub
push
cmp
daa
pop
shrl
cmp
add
outsl
test
dec
ret
cmpl
mov
pop
mov
add
xor
mov
loope
lods
xchg
xlat
push
push
xchg
gs
push
nop
adc
push
xchg
xchg
movsb
insb
pop
aad
cs
adcb
sbb
or
ds
jns
fdivr
addr16
int3
push
or
cmc
jnp
push
js
push
cltd
arpl
nop
dec
add
cmp
adc
add
sub
je
cmp
add
cli
loop
lret
pop
in
leave
fsubr
in
jo
imul
mov
sahf
dec
lds
xor
mov
xor
rcll
icebp
cmp
decl
sbb
test
push
jmp
lret
jbe
into
adc
dec
mov
stos
dec
sbb
cmpsb
xorl
lods
mov
lods
sbb
or
mov
jbe
fsubrl
cs
add
outsl
xor
mov
xchg
out
test
loopne
les
xor
js
movsb
pop
push
sarl
and
lret
loope
push
xchg
push
out
imul
rorl
sub
sbb
es
mov
push
mov
xor
out
movsl
xchg
sbb
data16
fsub
fsubl
xor
in
icebp
ss
sarl
adc
cltd
xchg
negl
leave
pop
sbb
sub
call
xchg
mov
fildll
sub
test
arpl
adc
arpl
xor
or
mov
ljmp
push
fs
add
push
sub
jno
pop
mov
int
sbb
mov
pop
xchg
dec
icebp
lods
test
mov
dec
push
outsb
xchg
sub
fidivrl
pop
imul
jg
ljmp
je
pop
pop
mov
sbb
inc
into
std
sbb
mov
addr16
jne
fmuls
dec
push
jp
imul
out
sbb
jo
lods
lea
fsts
dec
les
xorb
imul
je
jnp
jl
jb
xchg
add
cmp
lods
fistps
push
adc
test
test
stc
cli
jge
aam
ss
pop
shr
aaa
jg
push
jp
in
mov
push
xchg
push
and
cld
and
addl
das
pop
mov
mov
aad
cs
pop
adc
test
rorl
push
xor
mov
push
jg
sbb
test
mov
jns
mov
jb
stc
adc
cli
xchg
sarb
jmp
icebp
mov
fisubrl
push
call
test
aad
jb
push
mov
popa
repnz
sbb
and
add
addr16
fistl
je
xchg
aaa
rorl
fsub
xor
sbb
cmp
ljmp
shlb
sub
rcl
jl
fidivrs
adc
das
in
js
jl
jp
sbb
ja
pop
test
lds
adc
sbb
xor
xchg
fiaddl
out
adc
mov
and
sub
sbb
lods
int3
scas
xorb
enter
mov
rolb
nop
mov
mov
outsl
jb
inc
shlb
mov
rcll
xchg
mov
pushf
sbb
xchg
cmp
mov
stos
cmp
push
sbb
xchg
inc
test
cmc
inc
pop
sub
fldenv
js,pt
cmp
out
push
inc
shlb
push
mov
inc
mov
add
cmp
xchg
inc
jle
mov
xlat
sub
xor
adc
sub
mov
mov
push
mov
mov
outsb
aaa
shr
lahf
push
test
cmpl
jl
jns
push
mov
add
pop
pop
mov
pop
dec
in
lahf
push
dec
cmpsb
lock
int
xor
jecxz
mov
fwait
push
cwtl
mov
and
and
cmpsb
leave
test
or
and
fbstp
or
pop
cmp
call
jg
mov
aaa
jecxz
ss
int3
div
jno
jbe
rolb
mov
pushf
jg
popf
or
mov
dec
jo
push
rol
out
aad
out
cld
js
xchg
out
rol
mov
insl
mov
ret
sub
insb
aam
call
adc
sbb
or
popf
lds
or
insb
into
xchg
pop
xchg
rol
dec
mov
mov
mov
mov
out
xchg
push
ss
out
fisubrs
lret
mov
dec
addr16
xor
outsb
dec
cltd
push
les
cmc
stos
cmp
pusha
pop
add
aaa
ss
xchg
xchg
mov
dec
lahf
aam
outsb
xchg
inc
iret
mov
xchg
movsb
pop
daa
fwait
sbb
bound
dec
jmp
push
imul
out
dec
sti
push
sub
or
dec
shr
sbb
add
and
sbb
xchg
popf
cmp
pop
es
lahf
ljmp
nop
shrl
clc
mov
addb
rcr
sbb
add
jne
imul
outsb
loop
jbe
imul
mov
je
movsl
push
cs
fidivl
inc
mov
ret
jl
sub
imul
or
cmp
pop
xchg
pslld
repz
es
adc
iret
enter
xor
mov
testb
das
test
cmp
cmc
cmp
in
bound
rcrl
jmp
and
mov
xor
xor
jbe
xor
xor
rorl
cmp
dec
cmp
push
gs
push
cmpsb
inc
cmp
xchg
fnstsw
iret
mov
inc
movsl
mov
scas
pop
mov
ss
xchg
mov
add
and
int3
push
lock
cli
sbbb
mov
addr16
and
icebp
push
fisttpll
js
push
lret
jo
xchg
je
stc
fimull
and
xlat
jo
shlb
xor
inc
pop
jmp
and
mov
mov
cmp
gs
xchg
outsl
xchg
jg
andl
jne
dec
mov
std
mov
outsl
loopne
scas
insl
fwait
jns
scas
lret
mov
nop
notl
xor
mov
stos
xchg
pop
sahf
sbb
jnp
sub
sub
sub
sbb
pop
push
stc
pop
push
clc
push
and
pop
sub
jbe
cwtl
mov
test
inc
mov
xor
jae
dec
adc
dec
and
shlb
leave
addr16
cmp
sbb
lock
lret
sbb
iret
sub
pusha
and
scas
bound
sarl
cltd
test
push
push
pop
jno
dec
jmp
fcomip
jnp
scas
and
scas
jp
ss
nop
orb
push
push
ljmp
out
xchg
inc
dec
xor
jb
pusha
mov
inc
lds
loopne
dec
aas
int
andb
sarl
aaa
dec
and
xchg
aam
mov
cmp
cs
mov
insb
inc
in
push
jbe
pop
and
aas
in
jle
daa
jecxz
xor
int3
data16
das
cmp
jge
mov
cmp
xor
cmpsb
andl
add
int3
mov
sub
or
test
aad
lcall
rclb
cs
xor
sub
and
repz
pop
mov
test
aas
mov
lcall
push
inc
and
add
mov
inc
cld
jbe
push
dec
call
loopne
in
inc
hlt
clc
mov
mov
dec
shll
sbb
cmpsl
and
cmpsb
mov
js
cwtl
je
mov
xor
cmc
bound
lret
testb
cmp
xchg
adc
mov
dec
xor
stc
push
imul
push
pushf
jno
or
xchg
push
inc
enter
mov
fdivrp
dec
test
addr16
lock
out
cld
xor
push
mov
sbb
or
xor
pop
pop
mov
pop
loope
ljmp
bnd
xor
fbstp
pop
pop
push
dec
xchg
jecxz
lret
push
mov
xchg
in
data16
loop
xchg
or
or
stos
push
jle
xor
add
and
adc
daa
popa
mov
and
sub
fwait
xchg
pushf
leave
movsl
pusha
mov
lds
dec
sbb
adc
jnp
loope
jge
cmp
push
xchg
into
mov
mov
scas
push
test
stos
add
push
int3
lahf
inc
pop
or
and
sar
imul
xor
jl
data16
shr
dec
icebp
repnz
fnstenv
icebp
cmpsl
cmp
lret
stos
push
jmp
pop
xorl
dec
and
jns
mov
xor
cwtl
mov
xchg
iret
xchg
fimull
clc
add
mov
push
fsubrl
add
test
aam
dec
mov
in
and
jae
lret
jle
icebp
ret
lds
inc
repnz
mov
xor
xor
les
ss
jmp
xchg
dec
call
jne
inc
xor
ret
lods
or
stos
mov
jbe
icebp
add
sub
lret
add
push
sbb
pop
inc
repz
mov
xchg
in
and
mov
cmp
hlt
and
adc
aam
dec
int
dec
mov
mov
jg
aaa
popa
test
call
inc
xorb
mov
stos
push
and
xchg
dec
inc
inc
cmp
mov
aaa
sbb
je
lret
mov
shl
or
mov
cltd
cltd
dec
sarl
sub
pop
test
push
jp
xchg
and
push
je
cld
js
mov
push
test
pop
addb
add
adc
and
adc
sbb
icebp
pop
sub
subb
cld
std
mov
jo
mov
push
fisubrs
add
cmp
adc
adc
fisubrs
rorl
pop
and
in
testb
inc
push
call
adc
fcoms
inc
mov
inc
mov
aas
pop
mov
xor
scas
xor
jo
js
clc
sbb
and
dec
popa
push
lock
rol
xor
pop
call
mov
aad
xor
jmp
rcll
push
push
xor
cltd
sub
pop
mov
stos
aaa
cld
add
leave
scas
inc
pop
sbb
inc
jne
or
pop
sub
lcall
pop
imul
cli
fistps
js
jle
inc
inc
in
shlb
rol
cmp
jl
sub
rclb
pop
popl
cld
negl
push
pop
push
xchg
negl
sub
or
adc
pop
test
ss
sbb
adc
sub
adc
inc
rclb
sbbb
pusha
dec
push
rorl
cmp
jecxz,pt
push
adc
ret
pop
mov
rcll
mov
addr16
sbb
push
inc
or
movsl
pop
dec
rcrb
xor
mov
adc
jle
pushw
pop
mov
or
mov
cmp
stc
or
push
cmp
add
in
jl
lea
fsubp
sbb
clc
pop
adc
divb
or
xor
lds
cmpb
push
xor
ret
ja
cmc
sbb
sbb
and
stos
mov
pop
jo
int3
test
ja
adc
repz
push
or
jae
pushf
push
loopne
shr
add
fimull
lret
inc
stc
jne
addr16
add
xchg
or
popf
adc
push
mov
fisubrs
scas
lcall
mov
leave
addl
leave
lds
add
int
and
mov
fdivr
sbb
jo
daa
dec
xor
jecxz
mov
les
push
enter
mov
in
dec
popa
negl
movnti
mov
push
pop
sbb
stos
dec
push
pop
mov
xor
inc
cmp
shrb
loop
ret
enter
jle
les
fists
sbb
mov
add
cld
sub
xchg
jmp
jge
dec
push
inc
js
ja
sub
cltd
add
sbb
push
pop
and
adc
push
xor
inc
mov
jae
outsb
xor
pop
inc
shlb
and
xor
mov
out
add
repnz
adc
mov
or
in
add
mov
sbb
mov
sarb
or
mov
lea
scas
or
mov
int3
scas
xchg
xchg
dec
aad
push
sbb
pop
lea
mov
addl
mov
nop
fcoml
mov
pusha
lock
daa
lahf
orl
shlb
popa
jp
aaa
fs
inc
sarl
shl
je
mov
lret
mov
inc
jno
rclb
xchg
ja
cs
lods
mov
mov
call
jecxz
mov
push
and
mov
xchg
lret
push
cmpsl
gs
mov
pop
mov
and
cld
jl
jae
sbb
dec
pop
fwait
nop
push
pushf
lahf
sbb
mov
cmp
je
and
movsb
pop
cmp
loope
rorl
mov
add
hlt
dec
lcall
mov
hlt
gs
sbb
push
divb
fs
adc
fucomip
mov
aad
div
mov
sub
xor
data16
fstp
adc
ss
lcall
push
pop
jno
rclb
fistpl
add
testb
adc
add
imul
ss
test
mov
ret
shll
xchg
outsl
shrb
xchg
jp
xchg
or
movsb
pop
push
ficomps
pop
mov
and
xor
sbb
popf
pushf
jl
orl
adc
xor
sub
test
pop
and
jb
fwait
fwait
in
test
jns
mov
push
fcomp
pop
mov
subl
cmp
cmp
adc
ds
fistpll
arpl
mov
adc
ret
mov
xor
adcl
stos
add
repnz
xor
adc
les
test
shl
test
jl
fstpl
fmulp
rorl
sbb
sbb
jge
lcall
out
mov
sbb
jmp
aaa
add
arpl
lock
std
push
mov
adc
xor
in
and
sbb
out
dec
mov
bound
lock
cmpsl
ror
pop
adc
adc
cmp
loopne
adc
sti
or
std
mov
inc
mov
out
jne
lock
dec
pop
jg
stc
dec
mov
ds
inc
mov
mov
cltd
cli
pop
or
push
aas
mov
xchg
mov
jns
arpl
and
push
je
daa
out
out
stos
std
iret
sbb
insb
arpl
push
mov
loop
sub
pop
sbb
sbb
sub
xor
mov
lea
and
dec
aas
xchg
loop
stc
mov
shlb
pop
push
sbb
push
push
sub
mov
fstpt
insl
inc
pusha
pop
fsubl
fwait
shll
cmp
ljmp
push
push
repz
imulb
add
pusha
mov
into
arpl
and
test
dec
sbb
loopne
sbb
sti
sbb
pop
cmc
das
xor
xchg
test
sub
mov
pop
pop
dec
pop
push
dec
mov
add
adc
mov
cmc
cltd
xor
dec
xchg
scas
add
or
sbb
je
mov
adc
insl
sub
rcl
ss
jae
repz
pop
xor
dec
sbb
add
pushf
pop
jns
sub
push
add
in
lret
daa
sahf
out
jbe
cmc
xor
in
cmpsb
sub
sub
adc
mov
imul
mov
lods
sti
orl
es
cmpsl
sbb
and
inc
adc
mov
pop
or
imul
push
dec
push
xchg
inc
adc
idivl
gs
push
dec
cmp
jle
add
push
aam
jo
popf
lds
movsb
inc
dec
arpl
add
stos
jmp
mov
aam
mov
rol
divl
shll
jo
push
mov
xor
outsl
negb
fsubrl
sub
mov
fisttpl
dec
inc
sbb
cli
cmp
sahf
adc
lret
and
push
xor
test
ss
mov
popf
imul
test
les
jbe
push
daa
cmp
aaa
fcoms
adc
loopne
fcomi
and
in
or
shl
sbb
adc
add
xor
jl
cmc
cmp
mov
or
int3
push
shll
sbb
mov
shll
pop
mov
or
popf
xor
or
out
imul
mov
cmp
nop
inc
ljmp
cmpsl
test
pop
xchg
dec
xorb
xor
daa
mov
xchg
jnp,pt
dec
fisubrs
pushf
add
adc
jbe
mov
sub
inc
shll
divb
pop
add
into
scas
sub
call
push
sbb
cltd
mov
push
orb
push
push
inc
ja
xor
inc
pusha
push
pop
or
cli
add
fwait
mov
add
clc
xchg
cmp
je
inc
cmp
lcall
jmp
push
jne
popf
int3
add
cmpsl
jnp
negb
jb
inc
adc
xor
mov
leave
imul
mov
xchg
jne
push
push
aas
xchg
lcall
cmpsb
lds
sbb
in
push
and
sub
fs
push
js
aad
gs
repz
dec
stos
loop
adc
shll
enter
jge
push
inc
test
pop
mov
imull
adc
push
in
mov
movsb
pop
cmp
adcl
and
mov
js
outsl
std
dec
rcrb
cmpsl
lods
ja
out
or
aad
and
inc
inc
xchg
shlb
daa
in
cmp
mov
les
stos
scas
push
stos
je
popf
aam
jne
push
pop
cmc
adc
push
in
adc
shl
and
pop
lods
imul
cmp
xchg
pop
mov
xchg
mov
mulb
push
dec
sarl
movsb
mov
pop
mov
sub
lods
pop
jbe
lea
mov
xchg
std
int3
nop
jl
xchg
sbb
adc
push
pop
leave
mov
sbb
add
inc
or
jmp
push
dec
push
imul
mov
mov
adc
mov
fdivrl
aam
sbb
mov
testl
lcall
js
lahf
add
push
mov
shl
subl
push
das
aas
addl
cmpsb
push
fmulp
dec
lret
mov
mov
or
and
dec
sub
inc
test
fstpt
rcrb
loop
mov
cmc
jae
sbb
or
aad
insb
pushf
inc
fcomip
or
mov
not
pop
cmp
push
test
cmp
pop
repz
xchg
test
loop
dec
and
jo
scas
fbld
fistps
add
cld
test
imul
sbb
mov
or
mov
sub
ficoml
jae
imull
dec
out
xchg
pop
jge
jne
jle
dec
adc
add
inc
addr16
xchg
imul
lahf
test
shrb
loop
push
stc
or
jns
imul
add
call
xor
jl
sti
aaa
mov
inc
dec
shrl
fsubrl
sub
add
push
pop
inc
mov
inc
mov
mov
cmp
mov
push
cmp
ret
fistps
inc
data16
int
sub
add
mov
mov
pusha
call
jmp
inc
mov
fsub
ds
push
cmp
stc
dec
jg
stos
adc
xchg
in
rcrb
stc
out
mov
in
aas
sub
xchg
clc
mov
ds
push
pop
lret
jno
inc
add
ret
push
adc
ret
adc
xchg
scas
pop
jo
and
push
mov
mov
mov
push
pop
or
xor
mov
shl
movsl
xor
and
movsb
xor
stc
jnp
and
add
xchg
ja
daa
or
fwait
in
ljmp
iret
xchg
imul
inc
jge
sbb
xor
inc
jp
mov
xchg
iret
bound
jno
loope
adc
push
cmpsb
xchg
pop
jno
int3
mov
xor
xchg
and
das
inc
loope
xchg
jg
sub
xchg
lret
and
dec
or
fsubp
mov
or
aad
call
xor
and
jl
lds
push
cltd
int3
lods
inc
push
cmpb
aad
repz
cwtl
jno
add
dec
adc
je
xlat
inc
arpl
fs
jecxz
inc
sbb
std
xchg
cli
mov
sbb
pop
xchg
push
xor
punpckhdq
xchg
or
pop
xor
cmpsb
add
or
lds
sbb
xor
dec
dec
xor
enter
pop
jb
idiv
js
addb
push
dec
cmp
add
mov
movsl
fstps
cs
repz
pushf
xchg
mov
clc
dec
sahf
sbb
dec
ljmp
jno
xor
cld
mov
push
jge
jb
sbb
repz
mov
out
fs
dec
dec
push
fisttps
jmp
mov
jb
rolb
in
lock
into
and
push
pop
sbb
stos
jnp
loopne
call
fldt
cmp
inc
loop
lret
inc
cmc
aas
sbb
sarl
lret
cmp
dec
push
fcomip
cmp
je
scas
cmpsb
push
xchg
leave
jns
repz
outsl
in
jae
mov
stos
sub
dec
jne
stc
sbb
cmpsl
and
xor
imul
lods
xchg
push
js
cmc
push
jp
cmpsb
lods
xchg
mov
lret
pop
xchg
pop
rorb
mov
mov
jl
hlt
js
or
in
push
pop
mov
jl
xor
push
mov
call
add
push
or
cmp
in
xchg
mov
lret
xchg
data16
imul
jecxz
and
lods
jecxz
out
sub
das
jecxz
mov
stos
std
cmc
mov
cmp
lret
in
cld
insl
out
es
push
mov
push
sub
mull
popf
or
or
mov
mov
pop
lods
sbb
aas
mov
pusha
jg
notb
stos
ja
lcall
mov
aam
xor
je
std
xor
sbb
add
or
add
lret
sub
sbb
jns
mov
mov
fcom
adc
pop
jg
xchg
shr
mov
mov
cmp
sahf
push
cmp
lcall
mov
mov
xchg
add
adc
popf
mov
nop
pop
loope
push
sbb
lds
sub
testl
push
xchg
idivl
sti
inc
push
gs
stos
xor
sbb
jno
xlat
sbb
stc
cld
test
add
cmp
lock
ss
popa
add
mov
pop
dec
pop
imulw
mov
jae
push
imul
popa
dec
bnd
inc
mov
or
out
iret
stc
xor
sti
test
jb
jp
add
lret
push
dec
das
inc
addr16
dec
rol
rolb
mov
rolb
cmp
jae
ja
ljmp
icebp
dec
pop
aam
jb
adc
xchg
xchg
dec
push
mov
pop
add
mov
and
cmpsb
scas
lahf
mov
sbb
mov
test
lock
xchg
push
add
out
mov
nop
add
mov
and
fisttpl
mov
mov
rcll
imul
test
inc
insl
mov
lods
xchg
mov
faddl
in
std
mov
lret
int3
and
jbe
pop
mov
cli
sbbb
cmp
push
repnz
test
arpl
aas
imul
dec
jne
xchg
int
add
add
das
scas
adc
pop
shr
xorb
movsl
subb
mov
dec
shrb
int
movsl
fdivs
repnz
mov
stc
add
xchg
imul
addl
and
push
xorb
add
and
dec
mov
mov
jle
fmull
pop
gs
xchg
ret
xchg
out
outsl
sbb
lock
xchg
sub
out
xor
sbbl
jle,pn
mov
xchg
push
xorl
cltd
xchg
adc
cltd
push
not
mov
xor
xor
push
mov
xor
ljmp
inc
or
mov
je
jae
fsubrs
scas
out
roll
xchg
test
jns
mov
fcomip
jmp
add
sub
fdivl
pop
mov
popf
cmpsb
xchg
into
jne
mov
popl
mov
adc
scas
outsl
orb
js
inc
shrb
imul
loope
inc
test
scas
fsubl
icebp
cmp
xor
in
xor
mov
sbb
dec
mov
rclb
mov
jecxz
mov
ret
xchg
xor
testb
stos
cmp
leave
mov
ljmp
jmp
arpl
mov
inc
mov
push
sahf
or
push
push
test
mov
adc
xchg
addr16
imul
stc
push
int3
loop
or
test
divb
pop
arpl
les
loopne
or
xchg
cmc
cwtl
imul
mov
cmp
popa
push
aaa
icebp
mov
mov
cmp
shll
adc
or
shrb
das
ds
rolb
mov
into
das
push
push
and
imul
sbbb
int
push
xchg
xor
cmpl
sub
dec
outsl
test
and
sbb
iret
mov
enter
pop
xchg
fbld
adc
sar
cmp
push
inc
sarb
and
pop
push
out
fidivrs
testl
mov
movsl
ret
imul
jae
jae
push
repnz
push
sub
cmpsb
mov
dec
divb
and
mov
pushf
xchg
frstor
inc
inc
shlb
jbe
dec
aaa
mov
dec
pop
jb
sub
jne
and
xchg
push
ss
stc
test
test
mov
push
jnp
inc
inc
stos
mov
sub
outsb
xlat
nop
push
jbe
dec
ja
push
jg
sbb
jbe
inc
xchg
push
mov
lds
push
cmp
jbe
repnz
test
in
or
xchg
pop
popa
add
sbb
xchg
outsb
stc
jle
inc
inc
push
int3
rclb
pop
mov
pop
mov
int
out
mulb
xchg
dec
or
jp
push
das
in
cmp
inc
dec
inc
popf
push
xor
and
vpmuludq
aaa
push
xlat
mov
es
jle
dec
inc
in
nop
adc
or
cmp
xchg
push
mov
adc
daa
xchg
movsb
das
js
lock
ficomps
cmp
dec
jmp
push
mov
daa
mov
adc
mov
mov
out
push
mov
fwait
loop
jnp
scas
push
cmp
mov
fdivr
std
mov
or
pop
jg
sub
cmc
sbbb
std
push
lret
and
imull
sbb
popa
xlat
xchg
dec
sbb
and
cmp
sub
push
xadd
add
jge
shll
jmp
fwait
andl
icebp
sub
jo
sbb
pop
inc
loope
stos
fdivrl
sbb
pop
xchg
add
movsb
sahf
sbbl
xchg
ds
sarl
mov
jecxz
daa
jmp
mov
jecxz
pop
pop
lock
loop
pop
das
hlt
clc
sbb
in
sti
mov
sub
push
call
movsl
xchg
push
ds
ljmp
aam
shrb
and
addl
adc
pop
movsb
cmc
push
mov
add
cld
pop
aas
cmp
sub
jae
ret
or
aad
ret
xchg
std
ret
data16
cmp
lret
shr
jnp
mov
ret
outsb
mov
and
movsb
push
dec
enter
sbb
push
push
pop
sbb
pop
aad
add
xchg
push
imulb
xchg
fwait
js
in
and
jmp
xor
shll
fnsave
mov
push
push
js
lods
or
rcrl
mov
jge
adc
das
jb
push
lds
loope
cmpsb
popf
idivl
push
cmp
pop
popf
sahf
setge
xchg
fisttps
xchg
imulb
ja
push
aaa
inc
push
jl
adc
push
cmp
push
hlt
rclb
fdiv
mov
pushf
jge
push
xor
imul
fildll
mov
dec
xchg
rcll
clc
outsl
loopne
cltd
jmp
std
adc
xchg
icebp
cmp
cmc
pop
push
and
shr
scas
add
mull
out
jbe
dec
pop
lods
mov
push
stos
mov
pop
les
sbb
mov
push
sbb
pop
mov
mov
cmp
jl
jo
leave
mov
xchg
mov
ja
mov
imul
shl
push
xchg
jle
dec
mov
addr16
pop
jge
inc
neg
xchg
jnp
aaa
mov
pop
mov
cmp
out
xchg
cs
xchg
mov
push
mov
and
int3
incl
sbb
aam
xor
rclb
cmp
cmp
cld
sub
mov
jecxz
dec
xchg
inc
lea
xor
dec
daa
adc
imul
cmp
aad
insb
pop
mov
add
push
ljmp
into
mov
mov
mov
arpl
dec
adc
lods
into
add
cmpsb
jbe
aas
mov
adc
cltd
fnsave
mull
lods
jmp
add
jl
je
jl
lds
ret
repz
scas
jo
aaa
pop
mov
or
mov
lods
lods
fcoms
jmp
addb
mov
sbb
adc
dec
sarl
and
div
mov
mov
add
in
jb
mov
or
fisubrs
add
mov
lcall
mov
rolb
sarl
cs
push
push
fimull
sub
icebp
sub
xor
push
rcl
push
mov
icebp
and
and
xchg
cmp
mov
jne
xchg
addl
cmp
shlb
popa
cwtl
dec
cmc
aam
push
cmp
jno
fsubr
push
xlat
jae
sbbb
xchg
lods
sub
add
and
imul
lds
scas
shlb
gs
imul
pop
push
leave
scas
xor
dec
je
sub
mov
lea
movsl
xchg
arpl
pop
jg
adc
inc
adc
add
sbb
ds
test
outsl
xor
inc
aaa
adc
dec
ret
aas
push
mov
jns
mov
fidivl
and
push
jg
ja
inc
sbb
mov
xor
push
inc
das
mov
cmp
js
test
cwtl
jns
sub
or
leave
pop
daa
incl
scas
jg
popa
into
or
push
mov
pop
xchg
stos
xor
stos
cmp
sbbl
stos
lds
xlat
fcmovnbe
add
insl
pop
jp
jle
in
aam
inc
out
adc
adc
loop
pop
inc
cli
shlb
pmullw
insl
in
mov
add
repz
jo
repnz
mov
gs
mov
mov
gs
adc
mov
and
sub
lea
dec
push
adc
test
mov
and
and
andb
fstps
mov
jo
sbb
testb
hlt
cwtl
stc
or
idivl
sub
jae
ret
mov
dec
and
or
push
out
cmp
jnp
xor
int
sti
push
sahf
lahf
dec
xchg
and
ficoms
mov
or
decb
loopne
orb
jecxz
cltd
loopne
or
push
jne
mov
jmp
xchg
dec
pop
aam
adc
andl
inc
ds
jp
cmp
aas
int
aaa
into
xor
in
jbe
test
dec
and
mov
mov
xor
jmp
mov
jb
pop
adc
js
aam
sub
or
and
leave
in
in
imul
inc
push
xor
aaa
repnz
adc
xor
jae
inc
cld
xor
xchg
jnp
add
lea
push
cwtl
mov
mov
jge
pop
xchg
sarl
aas
repnz
in
aaa
iret
outsl
sti
sub
or
in
aam
or
add
push
lock
insl
aaa
loopne
xchg
and
in
out
adc
xchg
xchg
push
pop
jo
int3
add
mov
xor
sbb
pushf
sub
mov
flds
pop
xor
or
and
push
comiss
hlt
movsl
shll
xor
add
push
mov
imul
push
and
or
or
jp
ljmp
inc
cmp
cld
je
xchg
pop
jne
jbe
sub
pushf
inc
cli
xchg
add
fs
xor
cmp
scas
inc
jo,pt
fdivp
jnp
arpl
ret
rorl
xchg
push
xor
xchg
pop
in
mov
and
push
js
sub
sbb
xor
fiaddl
xchg
and
push
rol
jbe
push
imulb
xlat
xor
xor
inc
push
xchg
xchg
dec
mov
cltd
ficompl
test
rcr
fidivs
stos
jnp
jmp
add
pop
add
lods
push
ja
mov
mov
sti
test
mul
adc
loop
mov
das
loopne
and
lock
push
daa
jecxz
inc
mov
mov
pushf
les
fwait
sbb
cmp
js
das
lods
enter
pop
in
push
add
mov
out
pop
jno
leave
push
aaa
popa
pop
call
fidivs
adc
sub
repz
lret
rcl
push
int3
into
mov
in
xchg
cmpsl
cli
adc
sti
lds
dec
decl
and
and
add
daa
sbb
rep
sbb
push
jnp
inc
sbb
mov
sub
dec
mov
dec
xchg
and
test
sbb
mov
in
test
jo
sub
inc
sub
js
sbb
and
mov
fs
mov
cmp
or
clc
cwtl
fdivs
dec
xchg
clc
mov
test
mov
scas
jb
es
push
test
cmp
pop
mov
xchg
fisubs
jg
mov
repnz
push
idivl
dec
jno
xor
xor
jbe
jno
ret
addl
test
jns
mov
call
add
lods
outsl
lds
add
movsb
jb
mov
adc
fnstsw
ret
push
xor
mov
pop
repz
inc
dec
int3
add
outsl
into
jl
iret
fldl
rcl
cld
dec
add
add
and
test
mov
pop
dec
idivl
das
frstor
cs
adc
push
filds
inc
jae
push
or
cmpsb
popf
adcl
nop
idivl
lcall
mov
int
test
out
popa
fdivp
xor
mov
xor
add
aam
xorl
pop
mov
bound
mov
push
jb
cmc
push
gs
gs
ss
push
outsl
std
mov
cmp
mov
sub
cmp
scas
jg
push
jl
jmp
add
sbb
imul
cltd
inc
pop
sub
sarb
push
or
push
div
imul
outsl
pop
xor
sbb
mov
mov
adc
repnz
and
mov
xlat
dec
repnz
popf
xchg
jle
repz
pushf
mov
je
dec
insb
add
into
ljmp
std
in
adc
push
imulb
push
cmp
jp
mov
jns
aaa
jge
sbb
mov
push
mov
test
and
cs
shlb
int3
xchg
pop
rolb
lock
imul
sub
sbb
and
rcll
insl
sub
adcb
pop
push
mov
fiaddl
push
adc
push
dec
test
sbb
or
cld
sbb
test
and
add
rcrl
fcoms
in
comiss
mov
sub
mov
cmp
stos
mov
jno
icebp
push
leave
js
call
orb
cwtl
rcrb
or
dec
adc
push
dec
jmp
inc
push
cmp
les
xchg
adc
shlb
repz
test
add
repnz
xor
loopne
xor
mov
push
mov
out
lods
and
icebp
hlt
pushf
repz
dec
lret
and
cwtl
insb
sub
jp
adc
fistps
dec
xchg
outsl
xor
idivl
adc
les
repz
push
adc
push
fimull
dec
push
adc
jl
mov
push
jno
xor
ja
insb
sub
sub
pop
mov
push
lret
test
lods
mov
addr16
out
mov
and
lcall
mov
xchg
lcall
mov
ja
dec
outsb
mov
sub
inc
mov
mov
fs
and
xadd
and
stc
imul
push
loop
call
pop
sub
into
ror
push
mov
push
cmp
lsl
scas
dec
mov
mov
into
dec
dec
movsl
or
dec
shlb
in
addr16
pop
xlat
push
and
inc
ljmp
xor
xchg
popa
dec
test
bnd
cltd
sbb
push
lock
lock
mov
or
stos
pop
lahf
je
scas
lods
adc
mov
mov
push
sbb
inc
scas
xor
jo
push
dec
mov
xorl
daa
mov
push
cmp
dec
mov
pop
add
je
xor
int
add
xchg
sbb
call
mov
inc
push
je
lcall
pusha
std
adc
fsts
add
add
movsb
imul
int
aas
jnp
rcrl
fistpll
xchg
lds
imulb
add
xchg
cli
jae
add
or
outsb
cmp
mov
int
iret
aas
mov
leave
icebp
jecxz
xchg
cmp
test
or
shll
cmpsb
push
repz
andl
icebp
xchg
mov
adc
rclb
xor
stc
int
adc
ss
xchg
das
les
cmp
pop
jbe
mov
adc
jae
sub
mov
lods
in
insl
cmp
shlb
cmpsl
fists
test
cwtl
idivb
add
cmp
xor
xchg
arpl
or
aaa
insb
fisttpl
inc
mov
cmp
cwtl
inc
mov
mov
push
push
sarl
inc
call
mov
aaa
and
dec
fs
scas
or
jnp
pop
inc
pop
inc
fwait
sbb
push
leave
sbb
push
adcb
stos
xor
xchg
mov
jle
nop
or
mov
mov
fnstsw
and
add
sbb
push
test
std
test
fstpl
test
mov
pushf
test
push
mov
rorb
xchg
das
jmp
sub
rclb
andl
cwtl
sbb
adc
dec
mov
jle
ja
fwait
add
jg
jle
scas
mov
cltd
pop
jp
and
ret
cld
imul
loop
adc
ret
out
cmp
test
pop
mov
jge
fistps
es
adcb
cmp
mov
pop
icebp
rol
jns
enter
andb
sbbb
imul
xor
rcr
fildl
ror
push
sbb
adc
jmp
bound
ja
push
aad
bound
mov
cltd
mov
jne
mov
inc
dec
adc
jnp
jae
mov
fwait
xchg
push
mov
xchg
fsub
pushf
and
jb
pop
cmp
and
mov
lods
sbbl
add
fiaddl
xor
push
add
cmp
xor
sbb
pop
mov
xor
inc
ds
inc
out
push
sbb
mov
lods
inc
loopne
push
mov
gs
sub
shr
mov
xchg
add
addr16
cmp
inc
mov
or
cli
mov
adc
xor
pop
and
xor
enter
adc
xor
inc
adc
mov
sbb
data16
imul
xchg
mov
add
rcrb
mov
mov
push
jnp
jle
or
sub
cmp
ret
xchg
lds
ss
jl
and
push
ret
mov
data16
stc
inc
xchg
movsb
sub
adc
loopne
ficoml
pop
sbb
cltd
popa
pop
cmp
adcl
mov
lret
and
lock
jae
fnstcw
sbb
pusha
sub
mov
es
mov
gs
sbb
cmp
pop
stos
leave
cmpsb
and
das
cmc
xchg
sub
hlt
xlat
sbb
mov
jnp
roll
mov
sub
fidivl
adc
in
imul
sub
cmp
or
or
adc
push
rol
por
add
mov
pop
push
inc
movsb
xchg
mov
testb
sub
add
aaa
in
ss
add
mov
adc
adc
mov
test
mov
mov
pop
imul
mov
pop
or
fwait
jp
xchg
mov
hlt
mov
movsb
dec
ljmp
cld
mov
and
sbb
scas
popf
push
xor
sbb
into
lock
sbb
mov
pop
xor
ficompl
movsl
adc
xchg
pushf
sbb
fidivrs
xor
sahf
fdivp
push
sbb
inc
xchg
in
push
pop
insl
push
movsl
lods
mov
xorl
inc
and
cltd
and
jno
add
sub
fistpl
cli
mov
in
icebp
xchg
mov
jg
bound
adc
cmp
mov
sub
out
sbb
xchg
add
sahf
mov
xlat
insb
lcall
mov
subl
sbb
aam
jbe
jbe
cmp
call
add
xchg
inc
sbb
insl
dec
data16
mov
pop
mov
jns
or
bound
xchg
out
xor
inc
pop
clc
scas
stos
mov
inc
cmp
mov
lods
aaa
adc
jne
cmp
test
xor
aas
and
mov
mov
push
addr16
dec
fsubl
xchg
and
das
cwtl
sub
mov
adc
cwtl
or
stc
xchg
adc
insb
outsl
das
mov
jp
aam
icebp
push
mov
lea
push
les
jp
int3
cmp
sub
xchg
mov
push
xor
lahf
xor
ss
cmp
ljmp
cltd
sti
mov
mov
adc
mov
add
packuswb
xchg
xor
in
cmp
mov
dec
sbb
cmp
xchg
sub
mov
cld
fs
sahf
mov
pop
xlat
dec
jge
xlat
mov
movsl
mov
sbb
mov
ret
popf
loope
js
mov
clc
insl
adc
sbb
and
aad
xlat
mov
shl
call
call
int
mov
flds
divl
pop
add
loope
aam
rolb
into
jae
add
sbb
push
filds
jns
int3
mov
daa
ficomps
sbb
sbb
push
push
or
mov
repnz
mov
loop
testl
xchg
pop
cmp
pop
movsl
cld
fidivs
pop
adc
repnz
sbb
mov
dec
add
mov
leave
push
mov
adc
push
test
xchg
add
popa
data16
notb
mov
aam
mov
mov
mov
xchg
inc
xchg
fistpl
dec
push
push
push
dec
cs
xor
dec
jge
push
icebp
mov
mov
sahf
subl
cmp
rolb
cmc
xchg
scas
cwtl
andb
push
mov
cli
pop
shrb
lds
mov
jns
cmpsb
mov
fdivs
dec
outsl
mov
and
mov
mov
cltd
outsl
xchg
cmpsb
pop
lods
shlb
push
clc
jmp
scas
sbb
out
sub
das
ja
jg
xchg
insb
inc
in
pop
mov
cmp
jge
in
int3
mov
xchg
stc
loope
scas
mov
imul
pop
fsubrs
stc
mov
lret
sub
dec
js
xchg
push
lods
sub
sbb
jne
ss
cmp
ljmp
sbb
fwait
out
cmp
pop
and
xchg
test
or
or
outsb
sub
lock
into
xor
add
jae
add
aas
ss
enter
cmp
pop
dec
mov
and
sbb
mov
mov
fucomp
pusha
mov
inc
and
nop
jg
imul
int
insb
loopne
pop
insl
fistl
jecxz
lahf
out
das
xchg
insl
lock
outsl
xchg
inc
mov
jp
shr
dec
mov
adc
mov
shrl
add
repnz
sbb
mov
jbe
jl
sahf
and
mov
xchg
xchg
leave
cld
mov
xor
dec
scas
mov
ljmp
inc
xchg
xchg
jbe
adc
and
push
jb
adc
mov
cmp
push
mov
sbb
lahf
sti
inc
cmpsl
rol
adc
jge
imul
mov
repz
daa
loopne
xlat
sahf
mov
psllq
shrl
pop
or
add
sar
push
call
push
push
daa
cwtl
test
xor
and
and
xor
es
lea
add
or
sub
push
arpl
sbb
push
dec
test
pop
push
aam
les
cmp
xchg
pop
add
sbb
pop
sub
imul
das
arpl
fdivs
mov
fidivs
mov
jae
arpl
push
test
jp
add
popa
shlb
jbe
in
jle
pop
leave
xchg
movsb
scas
inc
mov
mul
shr
adc
pushf
ss
xchg
xchg
vphaddwd
cmp
divl
fdivrl
inc
cmp
sub
jl,pt
testl
ror
adc
mov
lds
cmpb
fwait
xor
aad
adc
cmp
or
push
test
mov
iret
ja
sub
inc
dec
cmp
lds
add
sub
js
cltd
int3
aam
pushf
gs
imul
cld
test
pop
xor
dec
adc
push
adc
cmp
fstl
add
ret
movsl
pop
icebp
daa
loope
popa
or
dec
adcb
ja
xor
sarl
pop
mov
popf
and
and
pop
cmp
adc
add
push
push
mov
adcb
dec
add
pop
daa
jl
inc
cld
xlat
cmp
push
fbstp
ja
cmc
jns
es
push
insb
push
into
jbe
loop
pop
mov
and
mov
or
xor
push
js
adc
mov
inc
pop
jmp
or
lahf
sbb
xchg
push
inc
mov
loop
out
mov
pushf
and
push
inc
pushf
sub
lock
cltd
and
incb
and
cmp
rorl
push
nop
adc
scas
int
fst
sbb
push
xchg
loop
lods
shrl
mov
cmp
cmp
insb
jl
push
imul
push
insl
add
mov
negb
xor
es
mov
push
lock
push
sbb
and
mov
mov
push
lldt
xor
mov
fnstenv
mov
pop
jb
gs
aam
mov
sbb
jno
mov
add
push
pop
adcb
lea
dec
pop
jl
xchg
sahf
cli
xlat
and
jnp
stos
and
pushf
sahf
add
lret
pop
push
imul
jbe
out
mov
mov
loope
enter
mov
xchg
incl
or
cmp
xor
jecxz
mov
fisubrl
js
mov
rorb
mov
les
lods
sahf
push
dec
add
xchg
sbb
mov
mov
pop
cmp
push
dec
pop
or
jno
lock
xor
push
jp
xor
pop
xlat
nop
mov
jbe
ljmp
arpl
cmp
test
cli
dec
fcoms
adc
lods
mov
filds
and
imul
add
int3
push
xchg
push
push
js
push
lock
add
xor
shrb
xlat
je
in
stc
mov
add
sbb
jbe
aas
arpl
or
inc
in
mov
mov
or
gs
jecxz
pop
sti
cmc
cli
ret
lea
cmpl
out
iret
add
cmp
mov
in
add
movsl
and
xchg
repz
adc
pusha
xor
lcall
pop
mov
out
fs
fwait
push
pop
sbb
rcl
sbb
int
lret
ja
adc
xor
xor
adc
cmpsb
cmp
imul
mov
jmp
repz
icebp
cmp
mov
or
insl
push
rol
cwtl
add
xchg
xchg
inc
xor
in
jge,pt
mov
sti
fcomip
add
cmp
out
mov
scas
sub
pop
pusha
shll
mov
cmp
out
cwtl
sub
insl
and
es
add
stos
ret
push
jp
ss
rolb
or
sbb
repnz
inc
push
imul
add
popf
ljmp
cmp
pop
je
inc
sbb
std
ss
bound
dec
test
jl
cmc
inc
push
cmp
cld
adc
repz
or
push
xor
add
mov
hlt
dec
insb
or
pop
les
scas
aam
das
repnz
and
cmpsl
cmpsb
mov
jl
into
xor
mov
lods
call
pop
sbb
mov
jp
mov
jmp
enter
roll
or
shl
pushf
push
clc
stc
ja
out
test
inc
sub
sahf
pop
and
xchg
into
popa
daa
test
fimuls
fsubs
scas
xchg
cld
es
imul
fs
xor
in
inc
bound
call
fsubrl
cmpsl
ja
jmp
xchg
arpl
loopne
cmp
repnz
mov
dec
popf
pop
dec
pop
aam
in
adc
jnp
or
and
cld
pop
int
add
scas
push
jle
sbb
dec
sbb
cmp
lds
ljmp
pusha
cld
rolb
stos
mov
dec
fucom
xor
mov
pop
cld
and
clc
sti
and
push
dec
inc
fstpt
push
aas
xchg
lea
inc
mov
mov
das
jnp
jae
loop
jns
fistl
fucomip
sbb
dec
shrb
repnz
add
or
adc
les
xlat
sbb
pop
lods
cmp
inc
cmc
mov
cmp
ret
ljmp
push
mov
inc
arpl
lds
jg
inc
xchg
mov
push
cmpsb
das
mov
sti
sub
pop
mov
ret
jo
negb
fidivrl
dec
mov
sub
les
ffreep
in
mov
xchg
cmp
push
xchg
fldl
std
sbb
mov
incl
ret
call
sar
mov
mov
push
fs
mov
imul
mov
sub
jle
ret
sahf
js
in
stc
jbe
cmpsb
mov
push
sbb
ss
mov
les
sbbl
dec
mov
xor
push
pop
sets
xchg
stos
shrl
fwait
pop
les
inc
ret
or
sbb
xor
mov
insl
ljmp
dec
or
xchg
dec
insb
pop
jne
or
lret
ss
les
sbb
std
push
and
sub
imul
adc
jbe
mov
cmpsb
add
testb
fisubl
cmp
pop
push
movsb
ret
aaa
in
mov
mov
into
insb
shrl
test
pop
std
adc
out
pop
xor
sbb
mov
jmp
dec
sbb
ss
fsubrl
lret
cs
dec
aad
mov
cmpsb
data16
fidivrs
mov
jns
adc
shl
sbb
scas
or
mov
jmp
adc
cmpsl
inc
test
cmp
inc
or
clc
mov
jae
loop
imul
insb
mov
imull
cmp
xor
icebp
xor
rorb
push
mov
adc
icebp
pusha
mov
push
or
add
push
repz
clc
push
jo
lock
push
mov
sbbl
xor
inc
add
es
loopne
or
cmp
mov
sub
sbb
sub
pop
or
es
int3
inc
add
shrb
aam
popa
fcoml
test
jl
xor
cmpl
cli
imulb
cmp
testb
cmp
addb
jno
xor
ljmp
dec
jmp
jg
xor
mov
mov
bound
push
or
push
pand
jno
sbb
push
sub
iret
pop
cwtl
out
inc
mov
lock
gs
push
adc
roll
cmpl
pop
mov
inc
cmc
insb
push
push
es
cli
push
mov
arpl
push
cmp
push
js
fcompl
mov
cmp
cmp
pop
daa
int3
push
popf
aad
jnp
std
es
test
sbb
aas
pop
inc
jns
hlt
sbb
cmp
push
ret
pop
aaa
dec
jmp
mov
push
xchg
pushf
fcmovb
loopne
mov
sbb
rolb
cmpsb
push
scas
loope
push
cmp
jno
jno
add
icebp
dec
adc
pop
inc
ds
push
imul
mov
decb
cli
mov
mov
add
lcall
cmovg
xchg
out
dec
cmp
xchg
in
xchg
out
leave
scas
fldl
pop
mov
xor
lcall
pop
sbb
testb
adc
imul
push
push
lret
xchg
insl
inc
push
or
dec
jge
andl
xchg
aas
sub
mov
fbstp
loop
stos
stc
and
in
cmp
mov
sbb
push
es
jle
data16
xorl
fstpt
imull
dec
adc
stos
inc
push
insb
push
sti
xchg
pop
lcall
faddl
les
mov
mov
shl
loop
jnp
or
jmp
push
or
mov
iret
jg
cmp
clc
pop
fadds
sub
inc
adc
std
clc
pop
push
cli
xor
xchg
pop
nop
jle
dec
cmp
into
inc
pushl
xchg
dec
mov
in
enter
adc
test
xchg
and
cli
fdivl
outsb
fnstcw
jl
jl
lods
pop
push
ret
insl
dec
in
popa
adc
stc
pop
mov
xor
mov
pop
andb
add
mov
popf
lcall
hlt
subl
mov
loopne
cld
test
mov
das
in
imul
jp
sbb
xor
sbbl
add
inc
sbb
and
push
mov
or
movsl
dec
andl
mov
mov
negl
aaa
movsl
movsl
mov
imul
add
or
pop
or
jp
test
mov
dec
xor
insb
xchg
sbb
mov
out
sahf
ret
push
stc
ret
lods
mov
imul
aad
sahf
mov
popf
int3
sub
adc
sub
pop
mov
push
pusha
les
loope
sub
outsl
sbbb
jae
jne
push
aaa
pop
dec
in
icebp
stos
add
or
xor
xor
mov
lds
mov
jmp
addr16
in
test
pop
sub
fldenv
xor
cmpb
inc
xchg
xor
mov
adc
cmp
mov
and
cwtl
or
rcll
mov
fdivp
push
scas
mov
pushf
int
ficoml
push
pushf
xor
jo
cmp
mov
in
gs
lds
sbb
gs
xchg
ret
inc
popf
push
push
push
mov
mov
lock
mov
mov
adc
mov
jbe
clc
xchg
add
fwait
jns
outsl
mov
sbb
cmpsl
mov
lea
aad
xor
dec
ret
es
or
rcl
sub
jb
aam
cs
ja
pop
push
push
fimuls
rcr
fs
or
loopne
int
mov
pop
std
aam
insb
sbb
mov
int3
test
xlat
ds
orb
inc
andb
test
mov
dec
mov
adc
stc
aad
jo
push
dec
add
mov
jle
ja
ds
les
fiadds
dec
outsb
add
test
loop
cmpsl
mov
mov
pusha
cmp
frstor
push
test
aam
add
and
out
rcrb
int
lods
fcmovbe
inc
insb
add
aaa
xlat
adc
xlat
cmpl
sbbb
xor
xchg
sti
and
repz
sbb
jo
rcrl
cltd
or
pop
jne
lock
mov
aam
stos
sti
xchg
aaa
fbstp
movsb
jp
push
test
or
adc
mov
insl
sti
sub
negl
out
shrb
out
push
testb
inc
push
das
mov
outsl
loope
mov
cltd
sub
sbb
sarb
and
pop
inc
mov
sbb
dec
ss
xchg
mov
mov
xor
mov
ss
lods
pop
mov
test
jl
adc
cmp
sahf
add
repz
aas
es
les
xor
leave
repz
cmpsb
mov
lds
pslld
ret
repz
pop
push
pop
cli
stc
outsl
rcll
nop
dec
mov
ja
mov
sub
add
jns
jo
mov
or
jnp
push
adc
pop
lock
xchg
add
adc
into
sbb
vsubps
dec
cmp
push
adc
imul
mov
enter
frstor
or
cli
mov
repz
adc
cmp
mov
push
sbb
pop
mov
jo
pop
imul
arpl
jp
sub
add
mov
cli
adc
fwait
stos
mov
ss
pop
fmul
fistl
push
mov
sub
leave
shrl
in
insb
dec
rcr
pop
pop
icebp
mov
mov
pop
int
sbb
xchg
lret
pop
jmp
icebp
cmp
xchg
cmp
das
je
std
fimuls
lret
cmp
jb
or
inc
push
sbb
aas
inc
mov
xor
xchg
popa
je
sbb
push
mov
dec
sbb
leave
mov
aad
ljmp
or
add
ja
dec
mov
inc
jb
jbe
faddl
jnp
idiv
and
sbb
xchg
sbb
xchg
cltd
aaa
xchg
cmpsb
repz
leave
nop
xchg
das
mov
or
gs
or
sbb
pop
es
ss
jmp
add
pop
pop
pop
jo
cmp
ficoms
xchg
cld
idiv
fucom
or
cmp
gs
mov
into
push
cmp
push
mov
scas
in
inc
loope
sub
push
fs
rdseed
push
pop
cld
mov
cmp
es
add
sbb
pop
jns
add
into
jmp
cmc
js
fbld
mov
or
push
inc
hlt
je
cmp
fimuls
jns
ss
test
jbe
sub
movsl
enter
xor
mov
mov
test
cli
arpl
pushf
jns
inc
cmp
pop
dec
ret
dec
lret
popf
xchg
and
notl
add
notl
xor
mov
sahf
ret
push
out
push
scas
es
xor
sub
push
ss
or
stos
ficompl
or
jb
pop
push
cmpsl
adc
dec
fisttps
loope
pop
xchg
lods
xchg
fwait
imul
out
test
test
loopne
lcall
ss
mov
ljmp
stc
arpl
jmp
out
add
loop
jne
pop
adc
adc
inc
pusha
sbb
adc
fcmovb
push
fcomp
stc
je
ret
push
jo
fst
xchg
lods
lahf
xchg
je
dec
sbbb
loop
dec
cmp
pushf
je
dec
aad
pushf
testl
xchg
orb
ljmp
stos
xchg
pop
mov
les
cmc
inc
xchg
inc
mov
adc
stc
outsb
sbb
lods
and
jnp
mov
mov
mov
xchg
pop
fwait
jle
or
sbb
aaa
mov
scas
test
cld
rorl
dec
cltd
mov
jnp
and
clc
xlat
inc
fldcw
dec
jl
movsl
andl
xor
dec
arpl
in
pop
bound
inc
das
push
xchg
dec
out
push
mov
in
pop
shll
add
mov
leave
iret
shrl
loopne
mov
mov
int3
int3
lahf
xchg
dec
xor
popf
jb
sti
fmull
imul
adc
test
mov
jmp
clc
pop
std
xor
xchg
dec
xor
je
cld
inc
imul
pop
ss
mov
pop
sbb
ljmp
adc
pop
cmpsb
push
scas
add
lds
scas
and
aaa
bound
add
repz
pop
mov
addr16
out
and
mov
mul
int
dec
pop
add
add
push
pop
lret
test
xor
jecxz
inc
test
hlt
cmp
rcrl
pop
pop
lahf
ja
pop
adc
js
jmp
mov
bound
cmp
js
or
push
pop
pop
enter
mov
out
jne
jle
mov
pop
jecxz
jmp
mov
sub
mov
cwtl
inc
push
mov
sbb
mov
pushf
sbb
rcrl
mov
adc
mov
sqrtps
ds
sbb
push
enter
cwtl
dec
xchg
inc
mov
dec
or
push
sbb
lds
lods
adc
xchg
hlt
lock
and
enter
cmp
cmp
int
push
and
cld
dec
adcl
mov
xchg
cmp
xor
adc
sbb
cmp
xlat
add
cmp
pop
enter
pop
cmpsl
andb
movsl
xchg
fadds
aad
sbb
int3
push
mov
incb
jg
mov
push
into
or
mov
mov
xor
shll
sbb
leave
and
xor
and
sbb
rcrb
ja
adc
inc
or
xchg
addb
dec
sub
pop
cmpsl
cmp
movsl
xor
in
xchg
cwtl
js
lods
xor
mov
js
or
jne
xchg
shrb
out
scas
filds
pop
dec
mov
jg
daa
cli
mov
out
repnz
and
sbb
xchg
or
inc
jmp
mov
movsl
test
loop
sbb
or
cmp
mov
mov
out
stos
sbb
and
popa
lock
cmp
lods
in
inc
or
jnp
push
pop
ja
xor
cli
aas
std
and
cltd
jmp
and
mov
pushl
fldl
js
push
mov
mov
push
mov
xchg
mov
leave
insb
jns
jo
mov
pop
icebp
xlat
and
xchg
call
xchg
dec
adc
push
pushf
addr16
lret
jae
iret
mov
adc
insb
inc
mov
mov
cmpsl
lods
sbb
add
imul
mov
clc
push
or
ds
lret
sub
cmpsb
orl
dec
repz
ja
jbe
ss
mov
cmp
inc
pop
inc
ds
pop
sar
or
sub
xor
mov
iret
adc
xor
push
imul
in
add
adcl
into
notb
sbb
add
push
mov
test
inc
pop
aad
sbb
adc
bound
mov
ds
jp
xchg
aaa
ret
adc
or
subb
nop
fcmovnbe
dec
mov
jnp
and
xchg
jb
adc
ret
je
adcb
in
dec
shlb
or
pop
mov
mov
inc
cwtl
adc
movl
xchg
push
in
ss
icebp
sub
iret
gs
adc
notl
addr16
negl
dec
cltd
sub
enter
sub
popf
jmp
adc
outsb
in
pushf
adc
mov
cli
adc
pop
xor
mov
mov
inc
subl
aaa
cltd
xor
ja
scas
ds
pop
mov
aad
dec
inc
fists
inc
cwtl
cmp
fwait
das
sbb
inc
jb
popf
hlt
mov
jnp
dec
adc
cs
call
cmp
cmp
pop
xchg
push
or
push
mov
push
iret
push
lods
cmp
xor
lock
and
in
add
sub
xchg
lahf
shll
pusha
cmc
out
dec
lock
cmp
repnz
mov
mov
nop
divb
xchg
mov
testb
cwtl
adc
mov
mov
cmpsb
mov
mov
in
add
cmpsl
addl
push
stos
sbb
imul
cltd
repz
jbe
mov
pop
test
push
xor
ljmp
mov
inc
adc
shlb
ds
adc
add
scas
inc
loope
xor
jbe
rclb
in
lods
int3
push
inc
xchg
addr16
popf
es
mov
out
xchg
ret
les
int3
scas
cld
loopne
push
fdivrl
mov
or
in
scas
clc
cwtl
xchg
adc
stos
aaa
pop
faddl
and
jb
sbbb
and
adc
icebp
jl
push
push
das
jns
mov
in
push
jb
popl
jecxz
sti
inc
xchg
or
mov
dec
and
jnp
subb
cmp
insl
dec
les
loope
or
mov
add
xrelease
mov
and
ds
jns
ljmp
shl
clc
mov
jg
xor
push
repnz
imul
cmp
fsts
leave
mov
imul
dec
sub
jne
sbb
icebp
notb
lods
sbb
jg
cs
das
cmpsb
fcomps
pop
int
in
inc
bound
jb
push
jge
push
pop
jg
pop
pop
data16
test
int3
lret
iret
fimuls
je
inc
sbb
mov
std
lret
dec
lea
push
xor
repnz
pop
jg
xor
mov
shl
sub
jno
sahf
inc
mov
loopne
cwtl
mov
jge
jns
dec
loope
in
mov
cmpsb
push
mov
pop
inc
mov
lea
mov
push
inc
xor
and
cmpsb
push
or
dec
insb
gs
fwait
xchg
mov
pop
add
inc
lea
jle
in
pop
adc
jae
mov
fsts
stc
cli
jbe
jbe
addl
pushf
outsl
das
jo
mov
dec
mov
xor
lret
repnz
push
jg
push
lods
xchg
subb
push
bt
xchg
andl
or
lret
pop
fstps
dec
sub
js
sar
add
sub
xchg
or
sub
sbbl
add
jge
adc
scas
adc
sarl
mov
adc
arpl
aad
dec
xchg
out
xchg
inc
mov
cmp
sbb
mov
jmp
add
cmp
jge
outsb
add
jns
pop
fsubrs
pop
mov
mov
lahf
pop
addr16
cs
mov
cli
les
fcmovu
dec
xor
fadds
add
or
and
xor
sub
cmp
or
scas
mov
and
in
aaa
and
xchg
aad
test
push
std
pop
push
pop
pop
stc
xchg
stc
adc
cs
movsl
mov
negl
xor
pop
mov
add
stos
stos
push
imul
push
cmpb
or
cwtl
into
adc
fnstsw
xchg
icebp
push
and
stc
mov
jb
loope
roll
jbe
pop
enter
repz
xor
ja
aam
stos
pop
js
push
or
lret
cld
cmpsl
sub
subl
lea
lea
mov
jo
pop
pop
push
insb
adc
cmp
cmp
jns
jo
cmp
jb
or
push
cwtl
add
and
lret
xchg
push
scas
cmp
jno
in
mov
sub
push
ja
xchg
push
mov
mov
addr16
and
loop
ret
sub
jmp
push
repz
dec
sub
inc
sbb
scas
or
fs
gs
sahf
jbe
rorl
inc
cmp
mov
out
repnz
sbb
or
xor
ss
flds
mov
sub
xor
sbb
repz
sub
mov
in
jmp
aad
arpl
fst
pop
sub
pop
shll
adc
dec
cmp
icebp
push
add
mov
jecxz
inc
add
cmp
popa
pusha
pop
ret
push
push
push
icebp
xchg
aam
inc
or
xchg
data16
xchg
pop
and
in
xchg
mov
and
mov
mov
enter
jmp
sub
and
adc
add
push
out
xchg
push
mov
icebp
call
in
pop
xchg
scas
icebp
mov
mov
inc
or
test
into
dec
bnd
adc
and
sbb
sar
xor
in
sub
and
and
sub
cmpsl
aam
jle
add
sub
lds
mov
je
mov
xor
push
adc
repz
add
mov
jne
pop
movd
fists
mov
pop
fldt
or
pop
adc
pusha
movsl
adc
mov
sbbb
js
cmp
jmp
add
jae
es
add
or
jp
les
pop
pop
or
pusha
mov
andl
int3
fsubr
xchg
dec
stc
je
mov
filds
in
cs
inc
cmp
xchg
lock
cmp
test
jge
mov
and
xor
data16
inc
cs
xchg
jle
cld
int3
icebp
push
mov
push
mov
jl
mov
mov
jecxz
xchg
mov
cmpsb
push
or
inc
repz
cmp
incl
shl
push
mov
xchg
loopne
or
shrb
orb
loop
iret
pop
add
imull
lods
sbb
ds
push
pop
add
popf
xchg
out
xchg
out
pushf
das
dec
rclb
rol
aas
mov
and
stc
nop
sbb
sarl
out
xor
out
sbb
popf
cmp
repz
mov
push
out
push
hlt
lods
bnd
outsl
dec
dec
xchg
std
inc
subb
nop
sahf
cmp
es
push
adc
adc
cmp
dec
mov
testb
xchg
cltd
or
popa
jmp
imul
push
push
sbb
daa
das
sbb
dec
inc
sub
and
iret
insb
ffreep
dec
lret
movsl
clc
ss
sbb
es
loope
aas
adc
push
and
cmp
push
lahf
cli
in
lea
rcl
lods
xor
inc
mov
cmp
fbld
sub
sbb
or
dec
lock
xor
scas
ljmp
xchg
push
mov
lret
dec
mov
dec
xchg
je
jne
and
aad
mov
mov
in
mov
add
call
push
leave
fmuls
push
add
push
call
mov
mov
push
xchg
sbb
mov
std
push
js
aam
mulb
cs
pop
cmc
dec
jb
push
xchg
addr16
jae
mov
test
inc
push
push
pop
fs
pop
add
inc
jl
mov
fadds
rorb
add
push
add
shrb
push
xor
add
inc
imul
jp
jo
mov
pop
sti
insb
add
add
sbb
je
lret
cmpsl
jae
movsb
xor
adc
jecxz
je
jnp
cmp
mov
dec
push
fbstp
ja,pt
or
push
scas
add
lret
imul
das
mov
popa
out
add
sbbl
cmp
inc
adc
xchg
pop
add
in
inc
stos
ret
lock
divl
in
daa
fsubl
xchg
mov
add
fsubr
pop
imulb
andl
mov
dec
ret
mov
test
int3
push
jbe
outsl
loopne
mov
pushf
cmp
outsl
push
scas
out
mov
mov
push
cmpsb
mov
and
scas
jne
sahf
arpl
or
int3
dec
in
sahf
adc
bsf
xor
pop
repz
and
pop
ja
inc
xor
xor
enter
mov
lods
fs
cmpsl
or
test
test
out
fcomps
pop
lcall
mov
ss
aaa
inc
push
push
movsb
adc
jns
fistps
outsb
insl
cmp
ljmp
fisubrs
or
xor
mov
aaa
shlb
cmp
jg
cwtl
inc
or
enter
cmpl
jns
das
gs
mov
pop
xchg
cmp
or
aad
inc
std
insb
jge
addb
push
pop
jo
jmp
movsl
xor
daa
pop
ret
xor
sbb
dec
test
aas
mov
subb
pushf
nop
fmull
enter
repnz
xchg
xchg
out
jmp
loopne
fwait
adc
push
mov
int3
ficoms
xlat
and
fidivs
cli
faddl
inc
dec
rorl
js
add
xor
sub
mov
rclb
outsb
test
xchg
lock
into
and
lahf
test
mov
sub
icebp
lahf
pop
dec
lret
push
push
fadd
and
lea
movsb
mov
icebp
fs
ljmp
jno
in
and
sbb
mov
roll
sbb
mov
roll
pop
push
add
repnz
in
jbe
test
or
movsb
cld
mov
out
jns
xchg
test
rcrb
adc
add
jge
xor
jecxz
push
or
in
xchg
roll
jbe
test
mov
pop
mulb
mov
lcall
in
pop
push
push
shr
sarl
add
lods
pop
and
xchg
dec
jle
mov
xor
hlt
mov
mov
mov
xchg
rcrb
or
sbb
add
cmp
adc
rcl
fsubr
lret
nop
test
cmp
sbb
add
aam
sahf
push
sbb
cmp
or
scas
add
mov
sub
mov
sbb
sti
push
sub
jnp
loop
hlt
pop
sbb
xchg
jo
xlat
stos
xor
rcl
insb
mov
inc
stos
in
test
sahf
dec
repz
sbb
mov
pop
test
mov
or
jne
and
clc
sbb
mov
pushf
lcall
jno
pop
mov
or
ss
test
fsubl
add
lods
in
movsb
sub
push
or
jnp
fdivr
data16
ret
pushf
xchg
sub
test
or
push
xor
outsb
pop
in
jno
xor
lahf
adc
add
mov
xlat
fnstenv
jbe
mov
jns
pcmpeqw
cmc
cmp
imul
lret
jecxz
or
xchg
orb
jg
sbb
hlt
mov
js
or
mov
push
das
push
addb
cmc
mov
push
push
mov
lret
and
mov
adc
mov
or
sub
shrl
sahf
push
pop
bound
insl
int3
push
dec
mov
repnz
sub
imul
scas
sbb
sbbb
sub
repnz
cli
and
fsts
repnz
das
mov
lea
mov
jge
test
negb
outsl
mov
ja
sbb
xor
out
mov
out
adc
cld
outsl
cmpsb
mov
xchg
pop
jge
stc
jb
ljmp
and
aam
pop
push
push
enter
dec
repnz
mov
xor
les
std
dec
mov
jnp
cmp
jmp
cmpsb
shlb
mov
hlt
movsl
push
adc
daa
daa
jnp
xor
sarb
addl
rcll
negl
mov
test
sti
aad
in
jmp
out
mov
daa
mov
gs
sub
jno
pop
pop
outsb
mov
push
call
in
outsl
push
in
mov
add
jge
push
adcl
movd
mov
ror
xor
mov
popf
sub
mov
rolb
dec
pop
xchg
repz
mov
and
ja
std
ss
stos
sbb
lret
inc
fcmovnbe
sub
mov
jecxz
ffree
mov
cmp
loope
jmp
jns
jge
je
inc
test
dec
inc
icebp
pop
cmp
outsb
xor
push
movsl
and
sbb
mov
js
pop
xchg
outsl
repnz
jge
sahf
rcrl
sbb
pop
daa
insl
out
xchg
ret
sbb
mov
sub
rolb
mov
sub
pushf
mov
mov
insb
mov
rol
jbe
jmp
or
adc
adc
je
adc
cmp
sub
cmp
or
jns
stos
mov
lcallw
cmpsb
subb
push
and
int
and
fidivrs
mov
mov
xchg
gs
inc
jbe
mov
pop
inc
and
mov
add
mov
mov
xchg
jo
pop
inc
aad
xor
or
mov
push
fists
fdivp
inc
and
push
out
jbe
dec
loopne
pop
jecxz
hlt
mov
adcl
mov
and
pop
ret
lds
movsl
mov
xor
push
add
ret
jb
lret
cwtl
pushf
repz
stos
jns
sbb
add
mov
imul
aas
insl
xor
cmp
rcrl
out
fistps
sub
out
sbb
push
std
cwtl
shrl
or
cld
inc
aad
ficompl
incb
stos
insb
jno
scas
inc
sti
mov
pop
pop
stos
sbb
loopne
fidivrs
xorl
lods
test
lret
xchg
push
insl
xlat
mov
mov
hlt
jmp
popf
dec
ja
cmp
jecxz
popf
daa
mov
imulb
out
inc
js
lods
stc
std
xchg
pand
fcoms
neg
jae
xchg
test
add
out
pushf
lahf
xchg
xchg
or
addr16
dec
cmp
gs
dec
fmull
or
xchg
loopne
lret
mov
pop
loope
add
push
cmp
sub
push
lds
jns
mov
stc
mov
xor
xor
hlt
xor
cmp
mov
fimull
leave
imul
int
insb
cwtl
push
mov
push
shlb
loope
or
add
lcall
rorl
sti
xchg
pop
mov
pop
aam
daa
jle
add
ret
and
dec
das
xor
mov
mov
ss
leave
mov
and
test
cmc
dec
scas
push
pop
add
inc
pop
mov
adc
lock
and
push
ss
push
jecxz
mov
jbe
fcmovb
adc
test
pop
or
jl
jno
fcompl
cmc
and
xchg
jl
stos
lret
push
hlt
movsb
loop
shll
scas
cmc
cmp
lock
mov
mov
pop
push
lahf
popa
pushf
sbb
push
lret
mov
test
cld
rolb
mov
jno
push
sub
mov
mov
test
cli
sbb
mov
cwtl
insb
ss
mov
lods
jmp
into
js
js
mov
lret
loop
mov
imul
fdivrs
jmp
bound
jl
sti
or
scas
mov
cwtl
cmpsb
dec
test
or
nop
and
mov
mov
icebp
fbstp
mov
dec
xchg
mov
cmp
or
xchg
movl
sub
stos
or
ret
and
mov
xchg
shr
xchg
sbbl
cmpsb
ja
lods
imulb
movsl
ret
push
and
mov
pusha
in
in
lods
cmp
fs
push
loopne
ljmp
pop
leave
dec
dec
adc
adcl
xor
xchg
inc
xor
gs
push
adc
and
xchg
cwtl
aaa
test
aas
fcomi
and
add
mov
or
lret
mov
insl
in
out
fs
test
je
inc
xchg
push
add
pop
ffreep
mov
pop
add
add
jmp
mov
cmp
stc
push
aaa
fs
pop
stc
jmp
cmp
xor
arpl
adc
das
dec
dec
sbb
sub
jecxz
mov
push
rorb
mov
jnp
mov
dec
insl
sub
clc
imul
push
inc
es
outsl
loopne
je
pop
or
stos
lods
mov
push
mov
jge
xorb
pop
sub
popf
rcll
pop
pop
jo
std
aad
es
push
xchg
or
xchg
jle
or
aam
or
pop
push
ja
addr16
xchg
sbb
sbb
or
sbb
mov
xor
out
test
outsb
xchg
jo
imul
es
adc
sti
inc
dec
jns
fisttps
sub
das
mov
sahf
aad
xchg
outsl
cltd
mov
popf
add
sti
xchg
mov
in
inc
in
xchg
mov
scas
cmp
xor
mov
add
test
sub
mov
es
out
out
cld
movsb
dec
hlt
xor
imulb
not
sbb
into
xchg
xchg
dec
mov
and
xlat
xor
xchg
ljmp
jo
push
jp
jecxz
push
or
sub
jns
call
lods
cld
push
aam
mov
aaa
cmp
pusha
shlb
xchg
fnstsw
and
add
in
pushf
sub
outsb
pusha
lock
push
push
insb
or
cli
mov
xchg
mov
ja
push
into
mov
dec
push
aam
add
sbb
inc
pop
mov
sub
jle
test
aaa
js
and
emms
je
int
adc
pop
push
xchg
pop
out
or
loopne
or
lahf
in
loopne
sbb
andb
jne
pop
aam
ret
sub
mov
jno
rcl
es
and
xor
or
sahf
sub
cmpsb
in
addr16
addr16
popa
enter
loopne
xchg
leave
test
jle
or
std
and
adc
xchg
mov
aas
mov
sbb
push
add
mov
xchg
adc
movl
mov
mov
xchg
scas
fbld
cmp
mov
popa
add
xor
stc
lea
lods
ss
mov
jmp
cmp
negb
push
push
insl
fcmovbe
loope
cmp
repz
sarb
jmp
fistpll
lret
shll
pop
insb
push
mov
cmovne
pusha
mul
pop
cld
sbb
cmpsb
jge
add
push
xor
das
push
daa
sbb
ja
mov
negb
test
mov
cld
lea
loope
push
add
dec
mov
popl
loopne
repnz
imull
inc
in
cmp
or
add
or
adc
mov
push
sbb
or
cltd
adc
out
mov
ret
xchg
and
add
stc
mov
pop
es
push
test
jbe
cmp
stc
sbb
or
or
in
add
sbb
mov
adc
cmc
subb
jns
xor
rolb
jns
rol
rcrl
lock
dec
out
bound
jno
jne
cmpsb
movsb
aaa
sahf
jl
bnd
shll
adc
mov
or
sahf
xchg
adc
mov
jbe
aaa
xchg
jle
les
iret
and
cmc
or
cmpl
cmp
jmp
fs
fwait
ds
or
inc
xchg
imul
imul
pop
shl
adc
orb
test
cmpb
add
mov
testb
es
push
jne
dec
adc
mov
ret
cmp
inc
aaa
sbb
imulb
jb
cs
pop
mov
push
dec
add
das
push
sbb
xor
or
mov
inc
or
dec
add
mov
imul
pop
inc
aas
pop
cmpsb
cmp
jle
test
sbb
inc
dec
add
loopne
mov
pop
inc
mov
fisttps
inc
sahf
scas
and
or
jns
insb
and
movsb
lcall
leave
imul
and
push
push
and
cmp
xor
xchg
mov
pusha
mov
xor
ret
negl
in
push
sti
push
inc
rcrb
repz
repz
cmc
push
loop
sahf
fidivrs
mov
in
and
fdivl
adc
int3
inc
dec
adc
jl
repnz
add
adc
loopne
das
nop
and
in
jb
fnstenv
sub
or
icebp
insl
xlat
dec
mov
imul
xor
aas
jo
jne
sub
push
add
in
cmc
inc
test
cmc
cmp
xlat
mov
mov
lret
add
loopne
push
cmp
int
lds
int3
sbb
inc
mov
lds
xchg
xchg
ret
mov
add
mov
dec
push
xlat
jno
daa
mov
call
jp
cmp
xchg
stc
fs
dec
push
push
ja
dec
ret
nop
arpl
rclb
icebp
xchg
dec
dec
sti
fldenv
daa
or
cmp
mov
push
mov
push
sub
test
not
adc
jno
movsl
andl
movsl
add
loope
icebp
jge
ror
mov
cbtw
popf
outsb
xchg
add
xorl
pop
lock
jns
inc
cmp
aam
mov
les
stc
push
mov
pop
or
add
or
mov
jno
adc
mov
rcll
or
inc
mov
add
push
mov
xchg
jmp
mov
cmp
gs
mov
std
test
dec
add
xor
insb
cmp
lret
xor
pusha
pop
lret
cltd
dec
cmpsl
ljmp
xorb
gs
fwait
xchg
test
loopne
sbb
mov
adc
fmull
cmp
test
add
mov
mov
movsl
and
pop
out
sti
xor
scas
xor
sub
jl
cmp
aaa
cmp
or
pushf
mov
js
movsl
or
adc
out
push
cli
outsb
sti
sbb
mov
push
btc
dec
pusha
fstp
jle
es
orb
add
or
sbb
cmp
pop
in
and
test
pushf
xchg
or
and
xor
in
gs
les
push
mov
testb
push
vpaddusb
leave
push
hlt
adc
aam
fildll
out
mov
pop
xor
adc
repz
xor
pop
adc
dec
add
into
sub
push
bound
add
lret
mov
jb
add
fwait
mov
xorb
dec
mov
and
and
jge
jge
je
outsb
or
out
mov
sub
or
fdiv
test
xor
popf
or
cmp
mov
xchg
and
outsb
add
inc
push
stos
es
stos
es
inc
dec
dec
lds
mov
ret
dec
inc
das
lds
repnz
das
and
sbb
inc
add
movsl
sbb
add
lret
pop
rolb
pop
in
int3
lock
repnz
mov
cmp
lods
loop
out
mov
loope
mov
xchg
mov
enter
clc
cmp
mov
scas
inc
leave
loope
push
push
xchg
pop
mov
jmp
fs
push
dec
pop
cwtl
stos
clc
ds
jbe
pushf
es
mov
or
jbe
leave
adc
dec
lahf
lock
ja
test
mov
dec
fadd
dec
mov
rcrb
insl
orb
outsl
dec
js
adc
add
loop
pop
mov
mov
mov
push
repnz
adc
in
lock
adc
das
push
mov
push
stc
shr
fdivrl
dec
lock
jp
jnp
and
sarb
fwait
cmp
repnz
rorb
scas
test
jns
clc
push
cltd
stos
gs
cmp
dec
in
sbb
movsb
movsb
dec
xlat
sub
push
pop
add
lret
popf
daa
iret
pop
cmpsl
cmpsb
inc
rcll
push
pushf
cmpb
int
cmp
add
add
aaa
aad
and
ret
push
mov
mov
push
ds
cmp
mov
lea
xor
push
jmp
adc
pushf
fisttpl
xchg
test
push
and
gs
xlat
test
and
repnz
cmp
dec
aam
jle
xlat
fidivrs
lret
adc
clc
push
pop
mov
xorl
stos
lret
jmp
fistpll
insl
inc
xor
add
adc
aam
cmp
sub
push
aaa
jno
das
clc
mov
mov
mov
shufps
cmpb
add
aad
loop
xor
pop
inc
inc
xchg
push
popa
lock
repnz
inc
sbb
adc
adc
sub
cmp
or
sbb
jno
xchg
hlt
and
dec
cmp
ret
fwait
test
push
xchg
inc
mov
jnp
add
and
adc
xchg
xchg
testb
mov
inc
fnsave
jnp
rorl
cli
xchg
test
js
fsub
mov
mov
mov
sbb
mov
mov
leave
test
and
mov
popa
push
sub
xor
jae
orb
cs
hlt
imul
add
movsb
mov
push
cmp
daa
dec
sub
mov
inc
jno
cmc
push
data16
xchg
push
pop
in
arpl
add
loope
push
sub
dec
inc
jns
and
push
push
jae
popa
mov
xor
test
sub
stos
fisubrl
pop
push
dec
push
mov
mov
leave
imul
add
sarb
push
push
ja
std
daa
andb
daa
jbe
mov
push
push
fmuls
lock
fmull
cmpsb
int3
inc
jns
sbb
ja
xor
stc
or
aad
adc
fmuls
push
cltd
addr16
outsl
dec
icebp
aas
xor
mov
es
lret
mov
xchg
call
pop
test
add
mov
arpl
push
cltd
repz
or
int
sbb
pushf
orb
or
mov
pop
sub
sub
stc
dec
xchg
or
add
cli
jl
push
sbb
sbb
sub
sbb
outsb
es
pop
push
mov
mull
mov
or
scas
dec
rcr
leave
sahf
ret
inc
mov
xchg
out
dec
mov
xchg
jle
xchg
ljmp
cmpsb
push
jle
loope
or
cmpl
lret
push
or
and
dec
lcall
or
testl
and
pop
arpl
inc
sbb
stc
les
pushf
jnp
call
add
repnz
and
xor
jbe
add
clc
and
adc
mov
cmp
lods
and
mov
lcall
imul
rol
mov
jg
dec
push
and
int
andb
ja
xor
xor
jle
rolb
and
das
adc
or
icebp
js
jnp
push
out
pushf
pop
imul
xlat
pop
ret
cmovp
ret
ja
loop
mov
daa
jle
or
add
xchg
xlat
jae
mov
xchg
jbe
xchg
or
test
rcrl
mov
aad
and
mov
mov
jle
dec
add
sti
xor
sub
pop
mov
dec
outsb
aam
test
push
xlat
push
hlt
cmp
pop
stc
jne
push
mov
jl
add
call
clc
cmp
ja
imul
test
movsb
call
loop
xor
pop
es
jmp
pop
cltd
cmp
xor
cmc
push
out
jp
sub
sbbl
test
cmpsl
inc
insb
aas
cmp
imul
xchg
testb
cltd
das
mov
fistps
popf
add
xchg
faddl
cmp
icebp
lds
sub
cmp
inc
jb
dec
ror
and
out
stc
push
mulb
adc
repnz
cmp
adc
cmp
xchg
xor
test
movsb
insl
xor
sbb
mov
andl
addl
push
lahf
xchg
ss
jb
loope
inc
push
inc
sahf
pop
push
adc
mov
dec
js
xchg
mov
mov
movsl
nop
ret
cmp
imul
insl
test
add
out
sbbl
pop
ret
mov
xchg
enter
cmp
inc
xchg
stc
insb
push
jbe
aam
andl
cmp
dec
jb
out
ss
push
pop
dec
cmp
adc
sbb
or
cmp
adc
dec
xchg
xchg
dec
sub
or
cmc
adc
fs
iret
adc
and
imul
addr16
adc
movsl
fiadds
mov
sbb
test
pushf
fdivrs
in
test
negb
xchg
inc
sbb
mov
aaa
jmp
scas
adc
mov
dec
cli
pusha
into
jns
enter
xor
pushf
cmp
nop
or
and
stos
and
fsubs
clc
outsl
hlt
jnp
imul
shrb
push
jmp
cwtl
imul
into
mov
setae
ljmp
push
dec
inc
out
je
int
pop
fistpll
and
xor
sub
lcall
mov
jbe
cmp
xor
mov
add
ja
imul
sbb
mov
cmpsb
sbbl
pop
cs
fldt
repnz
mov
jle
fdivrl
xchg
pop
sti
stos
mov
push
jns
subl
imul
and
and
and
mov
jno
into
push
pop
mov
cltd
pop
mov
call
stos
rcll
enter
test
jbe
inc
mov
jl
push
cmp
sub
jg
stos
push
ret
xor
lds
cmp
mov
cli
pop
jns
shrb
jecxz
mov
sub
inc
in
and
cs
adc
lods
in
filds
mov
scas
and
in
xlat
mov
idiv
arpl
add
mov
or
xchg
cmp
and
int
out
jo
out
imul
push
mov
lods
sbb
stc
js
adc
xorb
popa
xor
xchg
or
in
jne
dec
shll
and
cltd
ljmp
lods
sub
pushf
ds
sub
push
or
jb
pop
push
test
sbb
data16
sar
jae
call
xor
ljmp
push
mov
jae
push
sub
dec
or
and
cmpsl
adc
enter
ret
lea
ja
jno
push
mov
lcall
jge
negl
pop
or
mov
movsb
xchg
jmp
mov
sbbl
mov
or
stc
popw
js
ds
xor
clc
mov
in
jb
inc
das
test
loop
cld
sub
inc
roll
or
inc
je
add
sub
mov
xor
jle
test
pop
inc
mov
outsl
dec
mov
lods
js
push
rorb
xchg
ds
push
cmp
cmc
push
lods
xchg
aad
lea
xor
test
mov
push
arpl
cmp
and
pop
push
shl
pushf
jg
test
int3
cmpsl
xlat
jmp
jo
jge
or
stc
test
scas
in
gs
test
cmp
cmpsb
ret
fmuls
popa
rolb
hlt
cmpsl
pop
mov
lcall
leave
push
aad
xchg
addr16
jo
je
dec
fwait
lock
xchg
jae
xchg
repnz
ret
or
orl
xor
dec
imul
clc
movsl
adc
mov
push
mov
sub
xchg
xlat
xlat
popa
call
ds
leave
add
mov
outsb
cltd
mov
mov
cmp
jb
pusha
push
repnz
fbstp
adc
outsl
cwtl
xor
out
mov
inc
stos
ljmp
push
mov
push
ret
jecxz
lcall
ds
cmp
mov
xchg
pop
cmp
cld
and
jg
gs
setbe
es
inc
iret
inc
mov
xchg
mov
js
orl
pop
jnp
push
cmp
mov
pop
pop
pop
xchg
repz
out
scas
and
xor
push
stos
push
negl
ss
movsl
out
xor
pop
add
out
fidivs
mov
jle
push
mov
in
mov
in
addr16
in
mov
mov
xchg
aad
xchg
les
and
mov
aam
xorl
xor
imul
sbb
pop
xchg
rol
cmp
cli
xchg
das
testl
je
enter
push
arpl
imul
adc
xchg
jg
cmp
xorl
outsl
dec
int3
sbb
outsl
push
sub
pushl
fdivrl
imull
mov
cmp
inc
sbb
std
sub
orl
cmc
insb
inc
aad
repnz
inc
shr
jno
icebp
inc
pushf
pop
and
or
and
dec
loop
imul
mov
mov
out
out
push
push
push
enter
cli
in
not
nop
fnsave
loopne
ds
push
stc
push
ja
cmp
fidivrl
jnp
or
std
lods
xchg
fdivrs
dec
add
hlt
jno
adc
mov
push
sti
mov
or
adc
inc
gs
aam
in
imul
in
mov
das
insl
mov
int
inc
pop
xchg
rcll
cmpsb
push
fcoms
inc
pop
push
sub
rcll
icebp
not
in
push
aad
mov
stc
jns
and
pop
popa
aam
dec
add
imul
xlat
fwait
dec
mov
mov
ja
or
cmp
lahf
inc
sbb
negl
cmp
imul
lods
orb
cmp
sub
sbb
popa
lods
pop
stc
stc
loop
out
jge
inc
mov
shrb
fisubs
fcmovnbe
add
fdivr
push
mov
xchg
inc
mov
jge
cmova
daa
dec
push
lods
xchg
jl
push
outsl
push
add
out
jo
adc
lahf
jb
orl
add
mov
lret
pop
add
pop
sti
cltd
jb
add
dec
into
cmpb
and
push
dec
test
jp
in
cmp
mov
clc
scas
mov
test
js
push
inc
cmp
cmp
inc
sbb
lcall
pop
cmp
stc
mov
lret
mov
ja
push
pop
mov
nop
cmp
and
xchg
notl
std
jle
jg
mov
scas
cmc
pop
lcall
stc
mov
lods
sub
xorl
in
in
pop
sbb
idivl
sbb
leave
mov
mov
ds
mov
jns
push
ljmp
icebp
hlt
push
or
js
inc
mov
in
std
pop
xor
push
insb
jb
jg
std
cmc
daa
pushf
jns
fisubs
es
je
fs
push
mov
shlb
das
add
sbb
mov
xor
pusha
mov
push
sbb
push
movsb
pop
push
and
mov
inc
inc
ret
pop
sub
std
jle
jg
mov
scas
cmc
jge
cwtl
stc
jns
cmp
daa
pop
mov
jp
std
dec
xchg
mov
lods
rcll
xchg
test
push
jl
adc
in
push
mov
daa
push
mov
repz
lods
sti
jge
mov
addr16
pushf
pushf
lock
fsubrs
cltd
out
int3
xchg
rol
es
addr16
cli
adc
iret
cltd
aam
in
in
sbb
pop
jge
add
cmp
das
sbb
push
add
popf
xor
mov
ficomps
add
pop
lods
rcl
add
aaa
sub
movsb
aas
and
pop
dec
fsubl
mov
cmp
lea
push
nop
dec
lods
imul
arpl
adc
sti
or
push
inc
sub
push
addr16
mov
js
jnp
dec
icebp
mov
and
stc
je
xchg
shll
sub
push
and
iret
xor
push
rorb
or
inc
fcompl
movsb
or
jno
mov
pop
lods
push
inc
lock
fcomi
shl
ljmp
push
mov
cmp
xchg
pop
ret
mov
dec
add
xor
shlb
ljmp
xor
sar
push
pop
or
movsb
cmp
stos
jb
into
jle
notl
xchg
lods
adcl
stc
mov
xor
mov
addr16
xchg
sub
sbb
or
shrb
mov
bnd
lret
jecxz
addl
aad
push
scas
hlt
pop
les
scas
mov
xchg
sub
test
addr16
inc
inc
into
mov
scas
lock
mov
add
jge
or
adc
lods
and
sbb
outsb
push
xor
pop
xchg
ret
andb
cmp
dec
repz
push
popf
push
cmp
cli
out
mov
ret
push
test
inc
mov
mov
cmp
cltd
sub
sti
sub
inc
cld
dec
leave
scas
add
sub
inc
mov
pop
pop
adc
ret
xor
inc
push
fdivrl
mov
int
enter
sbb
push
ds
mov
fstpt
xchg
mov
aam
clc
inc
inc
sub
push
test
jae
jge
ret
add
data16
int3
or
rorl
fadd
or
insl
mov
in
gs
sarb
pop
add
stc
inc
gs
pushf
adcb
inc
jle
add
jmp
aas
out
stc
and
ja
loope
jns
daa
dec
mov
or
insl
dec
aas
sti
xchg
fs
pusha
popf
int3
mov
dec
xor
mov
ljmp
xchg
ljmp
ret
cmpsb
pop
ja
mov
push
cld
cs
arpl
pop
stc
cmp
xchg
aad
adc
and
jmp
push
add
jb
in
push
aas
addr16
jns
subb
and
mov
repnz
dec
js
or
push
inc
mov
xor
je
repz
and
push
in
xor
sbb
jno
mov
mov
daa
cmp
pop
and
fildll
fsqrt
inc
push
mov
cmpsl
cmp
adc
jo
jno
add
aad
sub
jmp
or
mov
std
jle
dec
or
ds
push
jne
out
pop
pop
loopne
aaa
stos
shrb
in
sub
dec
mov
sbb
adcb
clc
mov
sbb
xor
jbe
in
pop
dec
in
lret
ds
jp
loop
fisubl
jl
pop
inc
mov
pop
dec
or
xchg
mov
aaa
daa
pop
jnp
loopne
out
cmpsl
lcall
or
aaa
testl
inc
add
jbe
sbb
mov
test
and
mov
fcomps
aam
jg
mov
in
mov
xchg
test
shr
jnp
mov
fdivs
sbb
jl
push
in
mov
push
pop
pop
ja
cmp
call
push
jge
loop
cmp
mov
mov
rcll
std
enter
inc
out
loopne
mov
nop
mov
add
gs
xchg
sbb
inc
js
stos
int3
inc
mul
fcompl
sti
in
ds
and
pusha
sub
xor
fbld
xor
popf
pushf
pop
test
iret
in
mov
sbb
push
pop
mov
sub
sbb
xchg
push
mov
je
push
mov
out
les
push
pop
leave
push
lret
pop
mov
icebp
cs
adc
rcrb
aam
inc
into
aas
sub
inc
xchg
fwait
jae
stc
bound
mov
jns
testb
mov
ss
nop
and
xchg
push
xchg
or
push
scas
add
add
mov
mov
jg
ret
cs
mov
js
adc
mov
mov
jp
cltd
mov
pop
xchg
test
adc
mov
adc
cltd
mov
loope
mov
aam
rclb
popa
cmp
xorl
insl
inc
add
js
and
mov
sbb
mov
mov
in
xchg
mov
xchg
mov
mov
lea
sub
cmp
scas
add
and
adc
jle
testb
adc
lds
jmp
add
int3
mov
and
or
mov
mov
push
add
xor
fbstp
daa
jge
jg
mov
mov
in
repz
dec
in
sub
adc
mov
je
jne
lock
push
jmp
insb
pop
ljmp
dec
out
mov
aas
mov
iret
or
gs
cmp
lods
pusha
xlat
or
insl
push
jl
pop
push
mov
sbb
mov
dec
roll
rcrb
jl
sub
adc
in
sub
mov
sub
pop
rcll
xor
mov
lock
jns
jne
ret
and
nop
dec
sbb
loopne
pop
outsb
inc
sub
lret
inc
mov
dec
pop
xor
push
dec
jl
mov
add
arpl
push
out
mov
jnp
mov
xchg
popf
fcoms
mov
rorb
fsts
push
pop
nopl
add
adc
xor
add
push
adc
notb
mov
cld
adc
enter
cmovae
out
lock
pop
adc
or
inc
sub
aad
and
and
dec
cmp
dec
jo
or
out
sbb
lds
ljmp
pop
and
mov
jl
push
lret
mov
jle
fildll
lods
repz
loopne
mov
cmc
jns
add
movsb
stc
sbb
cmpl
fbld
test
imul
xchg
jae
test
mov
shrb
jle
arpl
pop
cmpsl
add
stc
inc
pop
fstpl
push
mov
mulb
test
push
pusha
adc
in
push
aad
pop
call
dec
mov
negl
or
jecxz
xchg
clc
xchg
in
test
sub
int3
divb
cltd
adc
movsl
int
sbb
int
ss
adcl
jnp
pop
xor
jecxz
ljmp
mov
mov
add
fimull
fs
int3
xchg
mov
cmpsb
decl
mov
xorb
xchg
daa
adc
sbb
jae
fst
cmc
ret
je
xchg
in
outsb
jl
mov
push
mov
shlb
adc
insb
cli
rorb
les
hlt
cmp
pop
sub
addr16
jl
das
dec
jge
shlb
cmp
lods
call
lods
cmp
cmc
iret
add
jb
cmpb
sub
xchg
cmc
mov
inc
cmc
jae
mov
push
out
adc
mov
push
add
out
in
cwtl
add
jl
inc
notl
and
enter
testb
cmpsb
test
xchg
mov
push
test
ja
aam
xchg
dec
pop
movsb
adc
or
or
inc
roll
sub
es
cmpsl
mov
cmpsb
outsl
pop
scas
xor
or
leave
dec
std
rcll
mov
pop
mov
cli
jmp
js
stc
sbb
aas
mov
sbb
sar
int
subb
setae
jno
testl
mov
in
push
cs
inc
cmp
test
imul
repz
add
xchg
std
sub
mov
je
movb
cmp
outsb
mov
xor
jae
cmp
cmp
vpsrad
dec
inc
or
xchg
dec
sbb
pop
inc
fwait
inc
sub
ds
add
adc
aas
rolb
push
cld
or
bound
frstor
ljmp
xor
jle
xor
or
lds
shrb
cmpsl
lods
adc
xchg
sbb
shrl
inc
pop
sub
shl
push
mov
js
dec
mov
jp
xor
mov
ss
jb
fcomps
pushf
add
xlat
mov
pop
mov
inc
call
popa
mov
xchg
mov
fs
stc
pop
and
pop
out
aaa
ror
mov
adc
dec
mov
jp
stos
iret
icebp
bound
jo
lds
inc
je
inc
inc
insl
outsl
sub
and
push
sbb
add
sub
pop
adc
xor
loope
das
xorl
dec
xor
shrl
mov
fstpl
push
lock
inc
or
ljmp
pop
je
pop
xlat
xor
inc
movsb
or
mov
sbb
out
mov
add
repnz
rcll
add
icebp
dec
push
xor
push
jns
test
negb
inc
aaa
notb
cli
cmp
data16
es
cmp
or
icebp
jb
rcrl
loopew
cmp
mov
mov
cmp
cmc
xlat
loope
js
inc
into
clc
push
js
mov
xchg
stos
roll
repnz
aaa
adc
testb
bound
sar
mov
cmpsb
inc
add
movl
iret
cmpsb
out
mov
int
sub
push
dec
or
lahf
jmp
add
pop
test
or
movsb
adc
loope
mov
lds
lahf
mov
in
stos
ds
jp
sbb
jg
xchg
add
fcmovbe
cli
pop
adc
push
xlat
and
mov
jg
outsl
aam
mov
lret
pop
jb
or
inc
lock
pusha
or
pusha
negl
popf
jle
mov
dec
mov
jle
and
jge
mov
stos
pop
dec
sub
rorb
ret
pop
adc
ret
flds
pop
or
stos
or
mov
leave
sub
jno
sub
daa
es
jmp
xor
sub
je
cmp
cltd
xor
popf
mov
shr
push
mov
adc
dec
and
add
mov
mov
push
ds
add
xor
out
dec
mov
mov
pop
dec
adc
imulb
pop
pop
pop
cld
mov
orl
les
in
into
orl
into
push
imul
mov
sti
fwait
xchg
scas
mov
pop
push
xchg
lea
inc
inc
fdivs
idivb
mov
or
insb
pop
add
ss
jb
emms
lods
push
or
movsb
lcall
int
push
aas
rclw
mov
mov
xchg
mov
or
mov
testb
sbb
imull
mov
jb
mov
xchg
sbb
imul
xor
sbb
mov
cltd
cmp
cmc
sbb
icebp
mov
jbe
lcall
nop
aam
mov
in
sahf
sbb
push
mov
bound
jecxz
and
jb
clc
jbe
fnsaves
out
jbe
gs
cmp
leave
xchg
test
and
jnp
and
je
mov
outsb
dec
push
fsubr
push
repnz
and
cmc
out
xor
sahf
mov
pop
jmp
jl
mov
push
push
lret
add
fadd
jns
jl
push
jnp
lods
push
jp
out
mov
pop
sbb
jno
jl
push
push
pop
jno
dec
pop
fnsave
sub
xchg
leave
sub
jns
fistl
mov
jb
or
sbb
lods
dec
pop
jl
adc
jg
adc
xchg
pop
fmull
ret
je
mov
mov
xchg
and
aaa
into
scas
add
add
gs
inc
faddl
jg
cmp
push
pushf
js
mov
lock
sub
cmp
pop
pop
xchg
push
dec
cmc
aad
mov
mov
jmp
cli
outsb
jb
dec
mov
enter
int3
loop
mov
pop
jg
push
xchg
jnp
jmp
jp
mov
std
scas
jne
cli
sbb
pop
cld
cmp
popa
clc
fstpt
xor
mov
pop
testl
or
shrl
ja
push
insl
test
neg
pop
jp
das
mov
cli
or
mov
stc
xor
cli
cmp
xchg
sub
push
bound
pop
push
add
outsb
dec
push
mov
jb
ds
dec
push
xlat
dec
dec
cmp
ljmp
jge
adcl
addr16
sub
mov
mov
add
lods
cmc
imul
fld
nop
lods
rolb
cmp
dec
stos
lods
jne
xor
mov
addr16
jns
or
add
cld
fadd
les
or
insb
cmp
ret
mov
and
xchg
aas
lds
xor
mov
cltd
lea
xchg
iret
out
mov
inc
jge
jae
push
in
dec
test
mov
cwtl
imul
test
push
and
fmulp
sub
lods
cmp
loop
inc
xor
sub
mov
sbbl
scas
aas
cli
cmp
xchg
lea
xchg
repnz
and
add
xchg
inc
mov
xchg
xor
subl
cmpsl
pop
movsb
iret
push
cwtl
jp
or
add
push
shr
and
mov
int
adc
mov
or
or
adc
and
jne
sbb
pop
insb
daa
loop
push
xor
aam
sahf
sbb
les
ds
int3
xor
and
xorb
test
scas
es
mov
cltd
add
cli
sub
dec
push
divl
mov
xor
in
icebp
rcrb
adc
jle
test
add
push
add
adc
mov
ficoml
mov
out
mulb
imul
fst
popa
adc
lahf
lret
and
cwtl
repnz
adc
lea
mov
pop
add
lds
iret
lds
ret
jmp
mov
nop
imul
les
push
repz
xor
gs
jb
loop
fmull
test
int
xor
push
in
mov
mov
rcll
and
seta
jl
pushl
out
mov
in
cs
push
ja
mov
orl
scas
jns
imul
mov
or
fcomip
add
mov
out
testl
cltd
aas
and
in
imul
xor
mov
pop
sbb
cltd
cmpsb
and
in
loope
inc
cmpsl
dec
cs
or
pop
jmp
ret
pop
cmpsb
or
pop
cmp
sub
stos
scas
dec
lods
sub
xchg
ljmp
stc
cmpb
ret
push
mov
sbb
mov
add
pop
call
das
cmp
adc
loop
xlat
stc
pop
cmpsl
or
insb
mov
mov
mov
cmp
add
js
jno
outsb
jns
ljmp
test
es
add
pop
cs
mov
inc
pop
ja
lods
mov
sahf
jmp
pop
xor
mov
pop
push
and
outsl
ja
insb
xchg
and
outsb
rol
cmp
call
cmpsb
mov
movsl
outsl
cli
pop
or
jbe
add
cmpsb
enter
cli
adc
or
movsb
cmp
inc
pop
jp
shll
aaa
aam
int
je
loop
mov
jge
pop
ret
jne
push
dec
filds
in
sub
pusha
int
mov
add
dec
cli
scas
negb
jno
xchg
rolb
in
jecxz
xchg
aam
loope
ffree
mov
setg
sub
adc
jbe
cli
pop
aam
arpl
test
and
hlt
xchg
std
out
pop
in
inc
lds
lock
pop
xorb
push
movsb
sbb
in
xchg
inc
sub
into
push
cld
xor
jg
scas
lret
sqrtps
add
sbb
jbe
and
jno
pop
popa
jno
mov
enter
mov
xchg
inc
inc
fiadds
loope
dec
push
mov
dec
xlat
push
mov
sbb
pop
xor
negl
outsb
sub
mov
mov
add
movzwl
repz
jo
add
lock
scas
jge
and
mov
mov
push
xor
adc
inc
arpl
dec
push
adc
mov
xor
xor
jns
push
ja
mov
xor
jae
nop
jno
pop
sbb
push
ror
out
pop
sarl
ret
std
pusha
xor
xchg
orl
or
push
push
mov
cmc
cli
add
jge
push
mov
dec
hlt
mov
clc
ja
test
xorb
pop
push
cmp
out
out
sub
mov
adc
pop
es
push
add
mov
ret
scas
push
test
sub
adc
clc
push
aaa
xchg
cmpsl
add
icebp
into
outsl
inc
negb
jno
insb
mov
enter
push
iret
mov
pop
xor
mov
jle
enter
andl
pop
xchg
push
xchg
sbb
pop
xor
pop
lock
test
push
mov
push
insl
add
fldt
arpl
fists
jo
das
movsb
push
sahf
cmp
stc
dec
push
aas
in
xor
cmp
pushf
fsubs
sahf
push
and
loopne
movsl
add
outsb
stos
out
std
xor
loop
ss
rclb
add
jge
jbe
dec
xor
cmpsb
and
cwtl
inc
ret
mov
sahf
cmp
iret
repz
inc
jle
popf
xchg
mov
scas
mov
mov
push
icebp
jg
add
xor
or
jp
push
in
mov
imulb
pop
adc
and
aam
ret
pushf
xchg
mov
shll
stos
stc
notl
inc
subl
dec
mov
lahf
popa
aaa
mov
in
xor
imul
cld
mov
push
scas
inc
push
add
cli
ja
mov
and
daa
arpl
or
testl
fcompl
lcall
jb
or
fsubp
addb
jnp
jg
push
cli
sub
sbb
sub
incb
adc
mov
insl
xor
pop
sub
hlt
xchg
mov
push
mov
sti
mov
inc
lods
lret
gs
mov
push
pop
xor
inc
push
xchg
cmp
add
xchg
xchg
mov
adc
mov
and
lea
je
lcall
inc
scas
sub
mov
pop
fbstp
and
cmp
lds
or
notl
and
mov
sub
jno
mov
test
sub
xchg
js
adc
pop
es
sub
stos
out
push
ffreep
notb
jae
inc
std
sar
and
cmc
jbe
in
cmpsb
test
das
leave
cltd
pop
ffreep
jmp
jo
cvtpi2ps
push
cmp
xor
repnz
nop
fbld
div
cmp
stc
add
scas
vandnps
xchg
cmp
xor
das
test
std
stc
gs
push
jne
jne
enter
rdmsr
add
pushf
dec
std
mov
xchg
clc
mov
mov
xor
and
stc
cmp
inc
jnp
and
sub
mov
add
aaa
hlt
movsb
cs
cmp
mov
cmp
in
cmp
popa
stos
mov
gs
xchg
or
and
xor
xor
mov
inc
mov
cmc
dec
data16
pushf
stos
xchg
f2xm1
sbb
cmp
jno
jb
cmp
dec
xor
mov
aas
xor
sarb
jb
push
cmp
dec
adc
stos
cmc
push
mov
xchg
cmp
dec
lds
add
test
int
lcall
jg
mov
fsqrt
jmp
push
push
ja
or
mov
fistl
ja
add
lahf
xchg
dec
imul
xor
nop
test
imulb
loopne
mov
xlat
pop
lods
dec
sbb
fsubrl
sub
in
jb
push
cld
jbe
lods
cmp
xchg
call
dec
mov
and
add
rolb
aad
mov
and
stc
stos
mov
xor
lea
dec
lcall
cmp
gs
and
call
int
or
xor
mov
pop
mov
jp
mov
movsw
in
loopne
jg
in
in
jl
mov
ljmp
sbb
inc
lret
or
stc
movsl
cltd
data16
adc
idivl
sar
test
xchg
in
repz
andl
lret
or
pop
add
cltd
fcomps
xlat
push
nop
enter
lcall
push
and
mov
xor
inc
ficoml
xor
jbe
and
outsb
js
or
push
ret
and
nop
in
pushf
push
dec
push
jge
stos
movsb
jne
pop
test
std
cld
nop
insb
pop
fcmovbe
in
or
mov
test
adc
gs
inc
jno
cmp
dec
nop
jb
in
scas
hlt
roll
ss
shll
icebp
fs
or
das
ja
mov
cmp
pop
add
cmpsl
inc
dec
ja
mov
xchg
icebp
iret
inc
test
or
xor
xor
dec
in
adc
dec
fbld
xchg
nop
cli
idivl
mov
jne
push
adc
adc
xor
xor
shrl
and
out
pop
xchg
jl
mov
test
mov
and
test
arpl
int
inc
leave
cli
pop
jne
mov
pop
inc
mov
pcmpeqd
cmpsb
cmp
dec
xchg
cmp
pop
addr16
sar
adc
cmp
syscall
adc
outsl
fistps
popf
jle
sub
cmp
mull
out
jns
mov
xorb
xchg
xor
aad
xor
push
fildll
xor
jae
push
movsl
pop
mov
ret
fsubr
cmpsl
and
xor
inc
mov
add
scas
add
sub
addr16
fs
sbb
cmp
mov
xchg
xor
mov
jmp
bound
jp
xchg
and
inc
pop
bndstx
and
in
and
sbb
mov
pop
std
fwait
jns
and
jae
dec
lds
pop
jp
jp
incb
fisttpl
xchg
incb
sbb
dec
cmp
into
cmp
daa
and
mov
jl
outsb
sbb
ja
into
sbbl
icebp
lahf
dec
ss
dec
mov
int3
sbb
movsl
in
sub
notl
stc
add
in
in
push
shll
scas
mull
xor
in
dec
cmp
mov
and
out
adc
mov
push
xchg
dec
loope
test
and
pop
dec
add
mov
add
xchg
mov
mov
mov
mov
cmp
insb
inc
push
jae
and
jg
lock
cwtl
dec
inc
mov
sahf
cld
test
add
cmpsb
jno
gs
nop
and
pop
das
repnz
orb
in
sub
fsqrt
test
aas
test
fs
cmp
jno
je
lock
in
or
pop
xorl
cmp
sub
xor
int3
pop
jle
jg
fcoms
das
stc
jns
int
fsts
mov
icebp
jmp
jecxz
out
cmp
mov
lret
push
mov
pusha
cwtl
cltd
clc
mov
push
dec
cmp
pop
jns
jnp
xchg
add
mov
jl
adc
rcrb
pop
popf
dec
stc
add
or
mov
pop
cmc
daa
fisubl
stc
mov
mov
pusha
in
lret
test
sbb
and
push
pop
cwtl
add
ret
fucomp
jno
in
push
es
and
pop
imul
jge
call
loope
cwtl
scas
jns
mov
push
sar
xchg
rcll
ljmp
icebp
clc
mov
or
je
sub
sub
xor
std
mov
xchg
stos
pop
push
pop
xchg
cmc
out
xor
and
push
js
cli
out
into
and
mov
xchg
xor
sti
mov
and
bound
add
testl
pop
mov
dec
loope
xlat
mov
shrl
sub
xchg
cmp
test
cmp
push
push
jp
or
dec
push
ss
jmp
mov
cmc
xchg
adc
fwait
mov
push
and
mov
imulb
divb
aas
testl
mov
xchg
ljmp
sbb
or
jecxz
into
cld
in
pop
movsl
dec
mov
jle
test
jge
sbb
xor
mov
out
cld
dec
ja
and
outsl
sahf
dec
cmp
cmpsb
inc
enter
rorl
stc
pop
pop
dec
sbb
mov
cmp
shll
push
mov
dec
sub
call
mov
stos
push
sbbl
je
jno
pop
clc
mov
xchg
or
pop
push
adc
out
fdivl
stc
jbe
mov
jns
addr16
jns
notl
loope
out
pushf
push
pushl
sbbb
test
dec
sbb
decl
xor
and
test
jmp
push
dec
inc
enter
jg
adc
pop
imul
mov
xor
aad
aas
idivl
mov
jae
nop
rorb
cmp
pop
repnz
mov
addr16
shll
mov
mov
lea
dec
or
xor
pusha
xchg
mov
push
stc
sub
bound
fldt
arpl
adc
jne
pop
xor
cli
lods
cltd
sub
fsubrs
mov
jo
dec
cmpsb
push
js,pt
jns
jge
pop
sbb
stos
adc
movsl
test
add
mov
fdivrl
data16
dec
or
push
ret
lods
sub
sbb
icebp
pop
popa
jge
xchg
adc
mov
mov
in
in
insb
bound
cmc
pop
lock
or
sbb
jnp
jne
mov
mov
mov
fsubl
movsb
adc
jp
cld
inc
adc
arpl
lock
mov
loop
test
rorl
and
xor
mov
scas
lock
shl
loop
jb
jne
xchg
fnsetpm(287
pop
jbe
add
adc
add
lea
sub
sub
aaa
push
dec
xor
mov
pop
insl
test
mov
adc
jge
inc
sbb
mov
mov
fwait
mov
cltd
xor
and
push
clc
xor
repnz
ljmp
repnz
and
and
push
and
scas
inc
push
jns
pushf
inc
jns
push
pushf
jge
cwtl
cmc
xchg
mov
mov
cltd
lret
movsl
jp
in
sahf
sarb
cmpsl
pop
cld
cmp
pop
mov
mov
pop
cmpsl
push
ficomps
imul
ret
cmp
imul
insb
xor
iret
mull
outsl
xchg
or
shl
aam
xchg
adc
jnp
inc
jb
push
jle
out
in
mov
cli
mov
cld
xchg
jle
add
add
mov
cmp
mov
addb
adc
push
lock
cld
cltd
mov
push
cmp
outsb
mov
repnz
fnstsw
xchg
lcall
lcall
scas
sbb
add
test
jno
outsl
cmp
xor
cmp
push
loope
decb
mov
jle
stc
inc
cs
jnp
ss
cmp
popf
out
outsl
loope
js
inc
rcll
pop
mov
scas
daa
sub
dec
aas
ja
adc
repnz
je
mov
punpckhdq
movsl
sbb
mov
push
jnp
xor
ficomps
ret
xor
add
jg
orl
incl
popf
popf
mov
pop
lret
dec
loopne
inc
mov
sbb
fcomps
xor
sbb
push
sub
es
data16
pop
aam
std
sbb
scas
lock
push
not
xor
dec
loope
pop
sub
imul
outsl
insb
arpl
cmp
mov
or
les
repnz
mov
daa
and
jns
xor
xlat
mov
xchg
lret
loopne
repz
sub
cmpsb
add
pushf
push
gs
out
rcll
sub
stc
out
mov
in
movsl
test
inc
cmc
mov
inc
cmp
jbe
push
push
cmpsl
mov
add
data16
je
inc
outsb
filds
xchg
loop
das
loop
mov
addr16
mov
jb
jl
sbb
push
jnp
push
std
cs
fistl
and
lahf
loope
inc
jg
bound
add
stos
or
sub
lds
push
add
popa
testb
pop
mov
xchg
rorb
aas
cmp
inc
pop
js
icebp
and
jne
dec
mov
cmp
cmp
cmpsl
inc
imul
lret
inc
mov
mov
dec
and
and
pop
jmp
pop
pop
loop
jae
xchg
push
sub
xchg
xor
jge
addr16
ret
xchg
xchg
ljmp
cmp
decl
cwtl
xchg
push
jno
cltd
mov
add
movaps
test
inc
adcb
dec
sbb
mov
cmp
push
outsl
xlat
jae
xor
aaa
jl
js
ss
insb
push
ret
push
scas
ss
mov
scas
cmp
icebp
pushf
shll
inc
lcall
xor
je
jl
jecxz
add
aam
fwait
sahf
cmp
add
mov
fists
jne
das
je
adc
out
cmpsb
lfs
sbb
arpl
test
lcall
outsl
mov
loop
inc
in
pop
sbb
or
xor
push
pop
jns
push
xlat
or
sub
mov
pop
xor
insl
mov
add
pop
cmpsl
out
jns
jae
daa
xorl
int3
outsl
bnd
jmp
pop
dec
add
das
pushf
mov
stos
sbb
pushf
jb
xchg
mov
lock
push
fsubs
inc
std
dec
insb
mov
jg
jns
mov
sbb
cmp
adc
movsb
jae
cmc
sub
loope
add
adc
in
insb
fwait
negb
mov
fdivl
loope
mov
nop
nop
pop
out
ljmp
enter
jbe
mulb
fbld
mov
int3
mov
je
pop
mov
lock
divb
cmpsl
imul
rcll
call
in
aad
clc
imul
arpl
es
pop
mov
ficomps
sarl
pop
sbb
testb
inc
mov
pop
scas
aam
call
or
into
dec
sbb
or
lcall
or
pop
es
inc
pop
and
ja
das
mov
idivb
pushw
pushf
icebp
in
div
cmpsl
lahf
mov
icebp
push
jno
jecxz
xchg
ficoms
ss
xor
cli
inc
mov
imul
mov
fcmovu
inc
jge
jp
out
test
push
les
mov
adc
jmp
movsb
nop
push
mov
shlb
add
out
cmc
scas
mov
insb
mov
jae
imulb
lahf
sbb
mov
ja
or
fwait
adc
xor
pop
mov
pop
lea
pop
insl
mov
mov
arpl
loop
or
pop
loopne
sbb
sub
sub
in
popa
sbb
imul
fisttpll
or
mov
jb
mov
xbegin
add
adcl
dec
icebp
and
push
lods
sbb
in
out
jbe
cwtl
add
into
lret
js
in
lock
cmpsl
es
pop
xchg
mov
or
scas
dec
and
in
push
in
scas
xchg
pop
pop
mov
mov
pop
mov
cwtl
outsl
xchg
inc
cmp
sahf
inc
mov
mov
jg
jp
incl
jno
mulb
js
push
fistpll
mov
js
cmp
insb
int
dec
test
xor
clc
push
push
mov
cmc
iret
cs
clc
pop
push
lods
inc
pop
add
push
cmp
cmc
ds
xor
das
cli
adc
in
xor
or
cmpsb
push
cld
add
push
xor
xchg
test
outsb
mov
loop
les
adc
imul
mov
fcomps
lods
fsts
inc
pop
lds
ja
int
rcr
mov
or
lret
xor
pop
fs
insl
shrl
lret
xor
mov
mov
xor
aam
in
lret
fidivs
mov
mov
int
negb
cmp
testb
sbb
test
jg
mov
insb
test
push
sbb
mov
lds
lods
jecxz
xchg
lahf
mov
pop
and
inc
arpl
inc
cmp
in
movsl
mov
jno
mov
es
hlt
xchg
and
test
xchg
jo
mulb
push
into
icebp
mov
rcrl
xor
rcll
push
jecxz
and
lds
cmp
insb
test
fucompp
int3
jl
cmc
xchg
stc
lahf
inc
int3
xor
cmpsb
and
mov
jl
adc
outsb
adc
add
fwait
dec
jmp
jg
scas
int
mov
data16
repnz
in
ss
mov
repz
int3
cmp
push
mov
stos
jge
pop
in
fnsave
adc
sub
leave
shll
xor
lods
push
incb
or
cmp
sbbl
jle
andl
cwtl
mov
cs
mov
push
adc
daa
cli
xlat
fldln2
scas
adc
sahf
xor
int
cli
mov
cltd
aaa
lea
ja
mov
xor
mov
mov
addb
js
imul
movsb
fists
int3
lds
mov
push
cmp
or
pop
aam
stos
lret
adc
jge
je
add
cltd
mov
addr16
cmp
xchg
jge
nop
pop
test
cmp
ds
hlt
ljmp
addb
rorl
lret
push
adc
cld
rcrb
sbb
insl
fwait
ret
mov
das
pop
jae
lret
jo
mov
rolb
hlt
test
fmul
imul
mov
mov
adc
push
pop
xchg
jae
or
jge
testb
lret
insl
sarb
idivb
repz
cmpsl
jae
mov
je
bound
cmc
imul
xor
xchg
or
jp
jns
cs
sbb
xor
mov
cmp
xor
cmp
sub
pop
pop
and
es
rcr
js
loop
inc
dec
push
std
pop
cwtl
xor
ror
and
xorb
mov
test
xchg
lret
jo
mov
push
dec
pop
cmp
enter
imul
pop
jp
dec
jecxz
inc
xor
xchg
enter
dec
mov
jg
adc
scas
dec
movsb
jo
dec
jge
arpl
testl
sbb
jno
fidivrl
mov
out
dec
pop
mov
out
pop
add
xlat
mov
jae
cli
sbb
and
push
jle
sbb
xchg
pop
xchg
pop
xchg
in
mov
xchg
loop
imulb
push
dec
xlat
xchg
xchg
mov
pushf
mov
mov
cmp
rcrb
rol
lock
jp
cltd
js
sbb
insb
cmp
adc
mov
fbstp
dec
adcb
push
cld
cli
xchg
ret
dec
jge
push
cli
fdivl
and
pop
xor
lcall
mov
call
push
mov
idiv
push
fwait
push
lds
mov
or
movsb
push
aam
popa
aad
movsb
outsl
inc
add
mov
lods
in
je
loope
pushf
out
push
call
adc
addr16
hlt
adc
lods
adcb
cmp
inc
push
push
movl
movsl
or
jns
jo
das
outsl
inc
loope
negb
mul
jnp
xchg
or
adc
je
in
xchg
push
imul
mov
imul
lds
pop
push
nop
pop
mov
mov
dec
leave
and
sahf
mul
jmp
data16
hlt
mov
mov
inc
stc
pop
jb,pn
imul
sub
je
jae
clc
int
movsl
cmc
xchg
lea
mov
xchg
sbbl
jno
sub
icebp
lcall
jecxz
jg
dec
movsl
dec
sbb
jl
insl
lds
pop
movsb
mov
shrb
push
dec
repnz
in
adc
jo
adc
jg
mov
sarl
in
mov
pushf
pop
add
jb
xor
pop
and
lds
ret
jmp
loope
xor
sbb
insb
xchg
dec
cs
fidivs
dec
fnsave
js
test
fsubp
and
cmp
sbb
stos
pusha
or
xchg
cmp
test
fld
cltd
adc
push
cmp
mov
pop
adc
arpl
movsl
lret
mov
das
push
scas
cmp
jne
loope
adc
ss
mov
enter
cmp
add
sbb
jecxz
pop
ficoml
scas
xchg
int
adc
sti
loop
outsl
idivb
inc
mov
out
xchg
cmc
mov
push
add
adc
out
ret
cmp
loop
jp
mov
jle
cltd
ficompl
pop
mov
addb
sahf
push
arpl
std
dec
add
sbb
mov
rorl
xlat
or
inc
shrb
mov
sbb
fstpt
push
inc
es
repz
pop
in
les
das
adc
fdivrp
sub
xor
push
sbb
imul
mul
mov
pop
mov
imul
mov
dec
sbbb
jle
lcall
aaa
imull
xchg
into
push
shr
iret
cltd
jmp
lock
fdivrl
pop
jg
mov
dec
sti
jne
jecxz
mov
cmp
pop
and
aad
test
rorb
and
loope
jp
mov
xor
in
cmp
push
movsb
pop
mov
pop
and
testl
jmp
inc
push
xor
icebp
mov
lahf
std
out
lcall
mov
cmp
rcr
insb
jns
pusha
cmp
adc
push
add
rclb
outsl
or
push
cmp
push
lock
push
clc
and
sub
daa
insl
shll
cmp
das
cli
cld
xor
and
adc
fdivrl
cmp
dec
mov
dec
push
cmpsl
cld
outsb
idivl
loop
test
div
xor
lret
adc
pop
stos
loopne
pop
adc
les
jns
push
add
mov
xor
add
dec
flds
xor
hlt
mov
xchg
mov
stos
pop
loop
loopne
imull
stc
pop
mov
jo
faddl
adc
std
insl
sbb
and
loop
add
call
and
mov
adc
sbbb
idiv
push
mov
cwtl
sbb
filds
mov
inc
lds
scas
xchg
incl
xchg
dec
loopne
aad
mov
inc
or
das
xchg
mov
inc
scas
icebp
adc
jmp
cmp
push
adcl
shl
mov
lret
dec
and
es
into
fsubrs
inc
xor
adc
push
test
fistps
or
pop
xor
es
xchg
sbb
movsb
sahf
fsts
xor
notb
mov
lds
dec
lea
add
push
repz
ljmp
mov
stos
cmp
insb
jns
fldl
jno
pop
pop
divl
inc
jae
adc
int3
cltd
loope
les
into
movsb
xor
cli
push
les
push
ret
mov
push
cmp
das
add
out
push
sahf
xor
xor
pop
clc
xor
lret
push
fbld
aas
in
mov
lcall
jp
lods
sbb
les
jne
cmc
cs
push
xor
iret
int
aas
insl
mov
add
pop
lret
rcrl
xchg
leave
or
lea
repnz
fmul
xchg
jl
outsl
pop
push
cmp
loopne
sub
mov
fimull
aaa
push
add
mov
push
idiv
sbb
dec
out
sar
out
into
mov
das
xchg
sbb
fwait
dec
rcrl
jns
roll
mov
dec
xchg
push
xor
stos
ret
add
mov
scas
push
xchg
pop
les
xchg
int3
pop
jns
cltd
jnp
fdiv
cmp
mov
dec
cmpsl
lock
arpl
pop
fildl
mov
sub
mov
or
loop
loopne
jg
mov
xchg
inc
jmp
fildl
sub
mul
les
inc
outsb
repz
or
das
loop
pop
outsb
mov
push
dec
and
jne
jg
stc
jge
xchg
jl
ds
pop
enter
insl
adc
popa
fdivl
out
addr16
and
dec
es
sub
cmpl
mov
shrb
jge
cli
cwtl
and
jae
adc
pusha
mov
xlat
cs
fstpl
mov
mov
lahf
aas
push
add
pop
jbe
repz
leave
xchg
data16
cmp
and
stos
push
pop
fs
add
addr16
sbb
add
cs
add
adc
nop
xor
inc
outsl
cli
loop
cmp
out
pop
pop
jbe
pop
leave
jno
jecxz
mov
cmp
stos
shll
rcrb
insb
pushf
jb
fdivrs
leave
pop
inc
in
aad
cli
btr
cmpsb
test
mov
sbb
xchg
xchg
xor
pop
sbb
or
sbb
jle
addr16
addb
hlt
pop
pop
inc
jo
std
or
xchg
and
mov
fs
cld
mov
or
data16
adc
sbb
add
cmp
pop
loop
outsb
fists
jl
lock
dec
and
mov
icebp
adc
fstpt
inc
ja
dec
lods
sub
sti
mull
inc
pushf
or
jb
adc
cmp
icebp
arpl
push
scas
mov
pop
mov
sti
cltd
outsl
xchg
cmp
or
rcrl
mov
adc
out
adc
lds
mov
xchg
iret
push
jmp
cs
mov
mov
ret
clc
lock
pop
cmp
ret
mov
cld
fxch
pop
mov
shrl
dec
notb
push
push
mov
icebp
loopne
fnstsw
add
std
jp
add
negb
incb
jb
sarl
push
cs
scas
pop
loop
int3
out
lods
sbb
mov
push
xchg
ds
adc
shll
xchg
clc
dec
add
pop
sbb
cs
cmp
test
sti
out
lods
testb
aam
mov
sbb
mov
das
cmpsl
scas
inc
hlt
mov
xchg
sbb
push
xor
mov
xchg
dec
sti
xchg
fwait
mov
push
out
fsubrp
lret
loopne
cli
mov
adc
in
pop
cmc
jb
daa
aaa
cmp
hlt
out
popf
cmp
jmp
mov
xor
cltd
repnz
aam
adc
cmp
ret
xchg
jnp
adc
mov
enter
sub
sub
xor
and
lret
mov
clc
cmp
mov
arpl
inc
mov
push
or
sbb
mov
les
fidivrs
and
test
shlb
js
jns
pop
sarb
mov
lcall
test
sub
sub
les
daa
jo
push
pop
lret
add
jb
jl
rcl
inc
push
pop
je
pop
mov
aas
xchg
push
cmp
xchg
sub
xchg
out
cmp
xchg
repnz
in
fistpll
jo
xor
fwait
mov
stos
or
push
rcr
push
popa
push
mov
in
fidivs
cmp
xor
mov
dec
fsub
mov
rcrb
dec
stc
cli
adc
arpl
and
ja
sub
mov
addr16
loope
xor
jle
movsb
push
mov
xchg
testl
sub
push
out
pushf
push
xchg
aam
fbld
mov
mov
repnz
int3
icebp
lret
xchg
mov
pushf
ret
cmpsb
push
push
js
outsb
mov
sti
negl
enter
call
leave
std
lods
mov
or
xchg
bnd
scas
push
pop
sub
pop
pop
in
pop
xchg
lds
clc
xchg
push
subb
cmp
loop
stos
inc
dec
idivl
xchg
sbb
imul
jg
mov
jo
in
sub
push
or
hlt
cs
lods
sub
fs
mov
lea
lods
cmp
ljmp
mov
mov
loope
push
lock
dec
push
xor
pop
loope
xchg
clc
jge
dec
aad
sbb
stc
fwait
test
mov
in
insb
mov
jae
rol
cmp
in
int3
mov
mov
jns
inc
pop
lock
movsb
loope
push
jl
and
mov
xor
loopne
pop
insb
push
jno
incl
xor
pop
sub
mov
dec
imul
in
imulb
xchg
or
push
and
add
inc
dec
and
lret
dec
adc
xchg
mov
sub
mov
js
icebp
sahf
cmp
pop
jne
pop
and
sbb
daa
inc
sub
cmp
mov
adc
aas
je
ret
xchg
sbb
xchg
add
outsb
sub
les
cmp
mov
nop
repnz
cmpsl
insb
jmp
mov
xorl
xchg
push
sbb
sbb
sbb
jge
ret
leave
idivb
sahf
dec
imul
and
sarb
outsb
xor
pop
popf
mov
loope
sar
nop
inc
mov
jb
adc
mov
imul
push
sbb
sahf
mov
sbb
int3
xchg
sub
and
cli
and
movb
in
in
inc
mov
shl
xchg
lods
cld
xchg
lock
neg
add
in
lret
mov
pop
xlat
fimull
cmp
lods
iret
xor
jae
rorb
lea
mov
jo
call
jl
lods
fsubrl
mov
clc
lea
xchg
sbb
mov
mov
pop
or
cmp
lds
inc
das
cmc
sbbl
lds
mov
test
sbb
lods
mov
push
in
cmpsb
pop
or
insl
jp
js
jecxz
sahf
call
mov
sbb
stos
mov
movsl
and
dec
or
arpl
push
xor
push
int
popf
sti
out
or
cmc
cwtl
clc
pop
ds
xor
jl
addl
pop
rclb
lods
loop
push
push
adcl
push
mov
mov
lret
or
andb
in
bts
push
xor
fs
adc
add
push
jmp
xor
xchg
jb
rorb
xor
cmp
cmp
push
mov
neg
sub
clc
jb
xor
push
imul
int3
rcll
push
cmc
add
jb
and
fsubs
and
inc
addr16
push
in
xor
dec
paddsw
jl
lahf
push
les
and
jmp
out
mov
push
xchg
test
adc
xchg
aam
cmc
add
ret
repnz
xor
clc
sti
out
jmp
aaa
aaa
and
jg
aaa
mov
mov
mov
subb
lods
dec
xor
mov
inc
popa
addl
ret
testl
mov
add
test
push
out
lods
popf
shll
scas
mov
in
lds
stc
xchg
and
push
das
cmp
sbb
add
push
in
fidivrl
mov
shrl
icebp
es
cmp
sti
mov
mov
xlat
std
pop
push
fwait
inc
jmp
aam
loopne
push
clc
ret
xchg
scas
xchg
or
rol
fadd
out
stos
jb
cmp
repnz
pushf
sbb
in
fbstp
jmp
push
and
dec
push
pusha
test
lcall
push
cmp
mov
int3
cli
loope
or
push
push
mov
push
pop
inc
dec
pop
lcall
mov
xor
cwtl
inc
pushf
fdivrs
jb
mov
out
test
clc
dec
scas
xchg
push
orl
into
aaa
movsl
mov
test
bound
dec
js
xchg
lds
push
out
int3
push
cmpsl
ja
xor
pop
or
sbb
jp
sbb
imul
jle,pn
cmp
jp
cmp
xor
sbbl
push
jmp
xchg
ret
push
push
xor
ret
sbb
push
xor
jecxz
in
xchg
lea
adc
dec
jb
jecxz
pop
fnsave
xor
int
sub
jmp
dec
jo
adc
pop
cwtl
idivb
and
shr
sti
in
jl
inc
je
loop
pop
imul
sbb
dec
out
push
sbb
fucomi
dec
mov
xchg
mov
mov
jo
outsb
sub
addr16
xor
int3
iret
icebp
int
dec
out
cld
pop
rolb
es
movsb
pmullw
dec
push
mov
sbb
adc
leave
xchg
sbb
cltd
xor
fs
andb
dec
xor
lea
rolb
adc
mov
loopne
pop
comiss
mov
or
pop
cld
rcrl
or
push
pop
ret
jno
movsl
cli
jne
mov
jecxz
sbb
push
adc
js
xor
cmpsl
jmp
testb
in
xchg
ds
lds
mov
mov
outsl
lods
jge
sahf
loop
sub
clc
pop
in
arpl
scas
add
stos
push
repz
xor
hlt
xchg
push
mov
cmp
daa
ja
sub
inc
dec
bound
daa
xor
mov
lcall
add
pop
jae
xor
xchg
push
rol
inc
jle
add
xor
jo
dec
fstl
cmp
push
lahf
jbe
mov
xchg
mov
lds
jns
inc
jl
mov
dec
mov
pop
in
and
mov
mov
mov
mov
cmpsl
sbb
inc
or
sbb
mov
adc
add
jo
xor
aad
push
lret
mov
mov
mov
jnp
in
fmul
loopne
mov
jns
outsb
inc
push
aad
pushf
mov
fistpll
in
mov
ds
sub
mov
sbb
jno
xchg
aas
mov
cmc
adc
idivb
push
popf
outsb
imul
jl
pop
mov
adc
sbb
and
inc
or
cmc
jo
mov
ret
aad
jnp
roll
ja
push
mov
lret
aad
repnz
test
xchg
mov
in
adc
sub
fcoml
rcrb
cmc
pop
xor
pusha
arpl
leave
mov
cmp
cltd
fisttps
mov
dec
adcl
fists
mov
orl
loope
fstl
push
push
mov
aas
faddl
xchg
adc
add
gs
testb
cmp
mov
mov
shr
and
cmp
inc
and
mov
xor
lea
cmp
and
ljmp
mov
js
sub
sbb
add
push
popf
pop
aam
mov
addl
fldl
mov
inc
sahf
push
add
inc
push
xchg
jb
es
lds
cmp
andb
rorb
push
pop
aam
adc
push
out
add
push
xor
or
jb
mov
add
in
sub
fwait
cmp
jnp
mov
repnz
pusha
in
fst
jne
cmc
sbb
fcomip
lea
push
add
push
lds
sbb
insb
jnp
test
or
mov
xlat
stos
aam
xchg
rcll
adc
testb
fcmovnbe
movsl
in
fiadds
add
xchg
testl
repz
outsb
nop
cltd
stc
mov
lock
cmp
inc
mov
clc
xchg
in
pop
xorb
and
adc
inc
and
outsl
insb
cmp
and
inc
xorb
jb
xor
sahf
subb
std
sahf
pop
adc
mov
xor
ret
dec
pop
push
ret
iret
pop
and
in
clc
mov
clc
adc
mov
jne
fisttps
inc
or
les
imul
cli
inc
mov
das
pop
inc
adc
fimuls
js
aad
cmp
pop
mov
fdivs
sbb
movsb
push
insb
cmp
sbb
in
mov
clc
pop
mov
xchg
push
pop
xchg
clc
and
cmpsb
clc
rcll
adc
jge
out
subb
outsb
rcrl
mov
sarb
jge
mov
pop
loop
cld
adc
pop
xchg
inc
mov
sub
stos
adc
or
adc
inc
dec
mov
and
mov
push
mov
repnz
jo
sub
push
lods
push
mov
das
jle
movsl
jb
inc
add
fstpl
lods
push
scas
push
popa
adcl
loopne
fwait
addl
pop
adcb
mov
xchg
fcompl
or
sub
jbe
repz
pop
rorl
and
push
lock
mov
shll
cmp
cltd
mov
inc
les
jl
sbb
mov
mov
pop
lret
dec
cmpsl
cmpsb
cmp
or
aaa
popa
mov
std
pop
inc
insb
leave
xchg
dec
mulb
jo
ret
stc
shll
fldl
insl
jge
call
sbb
daa
jne
fidivrl
test
imul
mov
cwtl
add
xor
in
mov
push
cmpsl
xor
mov
std
hlt
outsl
push
mov
aas
xlat
into
popa
add
stc
adc
in
es
lds
decl
out
lret
jp
xor
test
mov
xor
ss
leave
jae
add
xchg
inc
push
inc
adc
or
adc
stos
out
shrb
sbb
mov
jg
movsl
or
sub
jb
sub
outsb
inc
jb
cli
xchg
popa
and
jb
cld
xor
cmpb
hlt
lea
icebp
jl
jge
stc
mov
jg
jp
push
or
xchg
sti
mov
pop
jle
sub
mulb
mov
mov
lods
sti
fbld
icebp
xor
fdivrp
lods
leave
hlt
test
pop
cmp
enter
mov
lcall
cmpsb
jno
inc
rcrl
cltd
scas
add
gs
ret
dec
jg
jns
jmp
cli
lods
loop
js
clc
cltd
sbbb
mov
cmpsl
xor
cmpsb
xchg
aaa
push
lock
mov
dec
push
xlat
shlb
out
mov
sbbb
xor
out
in
les
pushf
pop
out
push
cs
clc
mov
jbe
in
dec
mov
cmpsb
ss
loopne
sbb
mov
cmpsl
xor
mov
das
dec
sar
xor
jb
ss
lcall
xlat
sbb
xor
xor
mov
inc
push
xchg
fwait
scas
mov
mov
addr16
add
jp
loopne
push
ds
pop
sbb
push
shl
jns
sub
stc
inc
sub
push
stc
cmp
inc
clc
mov
mov
negl
imul
jae
mov
lahf
iret
mov
pop
int3
lahf
les
mov
stc
inc
mov
adc
jbe
jecxz
sbb
mov
xlat
sbb
jb
xor
ror
jl
jp
daa
mov
repz
xchg
call
inc
pop
subb
sbb
cwtl
std
xor
int3
pop
cmp
xchg
jnp
xor
imul
ficomps
mov
cmp
dec
cmp
clc
ljmp
ficoml
call
js
jl
outsb
cmp
adc
jge
jle
daa
ja
loopne
xchg
push
inc
outsb
lcall
mov
imul
mov
fnsave
jmp
lds
stc
mov
enter
rcrb
jle
aas
push
in
ficompl
and
or
xor
scas
out
cwtl
stos
lret
mov
ud1
sub
fsubs
roll
jnp
int
xchg
xor
js
or
lods
imul
add
mov
xchg
out
inc
lds
mov
outsl
mov
imul
push
inc
xor
pop
adc
sarl
xor
push
pop
adc
or
push
mov
cs
outsl
sub
in
repnz
dec
or
scas
adc
push
jns
mov
fisttpll
cwtl
loope
sbb
mov
repz
ds
jbe
or
dec
test
lcall
mov
das
nop
add
addr16
call
ljmp
or
mov
sti
xorb
xchg
cmp
ret
data16
adcw
or
push
dec
cltd
arpl
adc
gs
dec
jmp
mov
xor
mov
cltd
lea
mov
ret
cmp
adc
testb
ds
aas
cli
pop
rolb
jg
mov
inc
test
cmp
mov
cwtl
adcb
xor
fbstp
aad
or
fwait
lock
mov
gs
pop
mov
addl
insb
out
or
pop
repnz
and
mov
push
mov
jnp
add
dec
iret
push
push
cmp
outsb
mov
test
aas
aad
int
shlb
adc
pop
test
inc
cmp
gs
fidivl
in
xor
pop
imul
xlat
mov
mov
xchg
stc
xor
xor
and
jle
xor
xchg
add
stos
push
xchg
dec
sub
cli
sbb
xor
xchg
js
jle
xchg
js
jle
insb
cwtl
pop
cmpsb
repnz
jne
insb
jg
stc
test
sti
pop
sbb
jp
cwtl
xchg
add
mov
leave
pop
push
arpl
dec
loope
testb
push
jmp
push
xchg
nop
into
aam
xor
imul
test
mov
loope
aam
pop
adc
mov
cld
xchg
mov
popf
mov
cmp
ret
jecxz
sbb
jecxz
add
jge
fdivrl
fiaddl
mov
fidivrl
mov
lea
stos
and
mov
das
frstor
int3
mov
mov
enter
test
mov
shrl
test
or
sbb
adc
sbb
outsb
lds
inc
or
in
lret
ja
outsl
jp
fdivrl
stos
push
sub
mov
movsl
dec
jecxz
orb
cli
xor
lea
add
adc
loopne
mov
sbb
add
lods
xor
jp
add
push
push
jne
popf
push
dec
mov
mov
or
or
out
scas
lahf
mov
adc
inc
xor
inc
mov
push
inc
adc
jo
clc
or
fistl
inc
add
ss
xor
inc
xchg
jbe
gs
push
mov
dec
movsb
adc
add
push
and
mov
jmp
xor
not
setno
add
jg
push
fldenv
stos
add
aas
fisttpll
pop
stos
push
cli
xor
mov
inc
fsubl
mov
stos
sti
hlt
negl
lock
jbe
xchg
in
mov
or
ficomps
sahf
gs
push
jl
mov
cwtl
mov
rcrb
daa
jge
mov
iret
dec
fcomip
adc
stc
or
call
inc
leave
dec
mov
std
and
and
mov
mov
jg
repz
or
out
xlat
dec
cltd
jne
jb
sbb
and
enter
cmp
sbb
mov
mov
aad
scas
cmp
and
push
xchg
ret
jp
dec
lds
cltd
mov
jno
fs
fistpl
int3
mov
inc
pop
in
jnp
aaa
cmp
cli
or
and
jne
adc
sub
xor
dec
mov
add
icebp
fdivs
jl
xor
mov
testl
pop
or
insl
divl
xchg
mov
stos
sbb
out
rcll
cmp
push
int3
andl
test
test
pop
test
cmp
sti
lea
xchg
fidivs
mov
aaa
sbb
jns
xor
mov
pop
frstor
xorb
imul
push
loopne
loope
dec
mov
insb
cld
das
dec
cmp
mov
in
mov
stc
push
xor
xor
push
cwtl
mov
sub
pop
cmp
jo
add
push
adc
rclb
mov
or
mov
jp
pop
shrl
xor
js
push
repnz
data16
xchg
inc
aam
scas
out
stos
ret
jmp
lcall
fs
cld
insb
leave
mov
imul
ret
loopne
int3
pop
jl
sbb
fdivl
dec
jge
adc
mov
xchg
mov
js
pop
sbb
adc
jp
xchg
leave
clc
fiaddl
push
stos
ja
adc
push
adc
dec
push
stos
pop
adc
loop
push
inc
jmp
repz
enter
mov
popf
fwait
movsb
mov
movb
notb
fbld
cmc
adc
pusha
mov
adc
cmc
lds
adc
mov
xchg
je
scas
push
xor
stc
sbb
mov
push
test
jo
ds
mov
ljmp
out
cs
insl
cmp
fimuls
mov
notb
clc
mov
mov
test
pusha
cmp
sti
inc
xchg
es
xchg
iret
shrl
push
xor
sbb
movb
push
add
xchg
push
mov
enter
jp
inc
xchg
ja
xor
ds
and
mov
sub
hlt
lock
sub
push
xchg
push
mov
cmp
pop
fisttps
pop
mov
loope,pn
sbb
insb
sub
sbb
inc
jo
test
add
add
das
jl
sbb
mov
mov
addr16
push
sar
jnp
andl
ret
arpl
sbb
push
repz
repz
stos
popa
fcoml
cmp
mov
jb
lret
incl
ret
cmc
mov
andl
out
add
sub
in
cli
xchg
sbb
add
test
imul
insl
popl
fldcw
sub
aas
push
inc
cwtl
mov
push
push
adc
add
sbb
jae
cmpsl
xchg
jno
ret
dec
in
or
add
or
cmp
push
mov
pop
out
adc
leave
xor
xchg
scas
dec
push
cmp
addb
push
aaa
outsl
mov
insb
xchg
adc
pop
mov
push
shll
adc
inc
mov
sti
xlat
mov
sbb
push
sbb
dec
ffreep
jle
push
xor
cs
cmp
aam
push
clc
cwtl
int
loop
js
pop
or
mov
jne
outsb
sub
dec
push
xchg
sub
aad
test
icebp
sbb
xor
sub
jmp
pop
shl
gs
in
xchg
dec
shrl
jg
mull
xchg
pop
pushf
stos
jp
add
xchg
adc
loop
insb
rol
fnsave
outsb
inc
add
fprem
and
and
pop
fildl
lahf
mov
into
sub
add
xchg
notl
adc
std
cmpsb
daa
lahf
out
outsl
lods
cmp
cli
sahf
movsl
xor
shlb
adc
pop
push
pushf
jnp
cwtl
data16
sbb
subl
in
cmp
aam
hlt
data16
cltd
rorb
test
add
mov
jl
and
mov
cli
fdivl
out
jge
insl
sbb
insl
hlt
rorb
shrb
add
jge
gs
xchg
sub
mov
pop
add
pop
sub
sahf
mov
add
pop
jne
jge
popf
inc
mov
ret
push
jnp
dec
pop
insb
icebp
xor
mov
mov
adc
shlb
jecxz
fwait
adc
jb
movsl
mov
aam
mov
pop
ja
popf
adc
fmuls
jg
lds
or
cmp
fists
jle
xchg
xor
mov
lock
xor
xchg
adc
push
jo
jg
les
xchg
xor
fs
adc
cmp
das
fdivs
mov
xchg
mov
addr16
push
sbb
adc
call
testl
lret
pop
lret
push
mov
push
mov
cltd
or
mov
cmp
cmc
addr16
insb
jo
daa
andl
jnp
das
xor
dec
in
xchg
adc
fs
mov
sbb
and
xchg
inc
das
sub
popa
out
dec
js
shlb
mov
shl
je
fwait
je
dec
add
inc
mov
sub
popa
mov
pushf
jg
cli
mov
jge
fldenv
sbb
push
pop
pushf
mov
les
inc
dec
imull
cld
sbb
ja
push
add
jns
push
dec
dec
in
jp
adc
inc
test
arpl
xor
pop
dec
stc
fwait
ret
add
inc
stos
mov
testl
push
pop
or
jge
pop
jno
popfw
pop
movsl
xchg
adc
rcll
je
push
push
repz
ret
mov
iret
popf
sahf
adc
lret
pop
cli
xchg
inc
mov
stos
in
adc
dec
jge
mov
std
dec
clc
rcrl
jae
out
pop
jl
cmp
sbbb
mov
lcall
testl
mov
pop
repz
and
fistpl
lret
pop
adc
add
jb
sti
sahf
shrb
lods
test
aad
les
inc
pop
inc
insb
cwtl
sub
pop
pushf
add
push
add
or
jne
xor
cmpsl
or
or
int
jp
fdivr
add
frstor
xlat
pop
xlat
or
pop
dec
repz
dec
scas
jo
mov
popf
mov
pop
mov
sbb
clc
sbb
lret
sbb
stc
xor
les
mov
adc
fs
clc
push
nop
add
mov
cmp
out
mov
pushf
mov
subl
dec
cmpsl
addr16
test
js
aam
iret
ficomps
sbb
iret
addl
test
lds
aad
les
sbb
pop
jg
test
das
mov
aaa
cmp
xor
shr
cmp
add
sbb
pop
lods
ds
mov
mov
aad
call
stos
int
in
xlat
inc
xor
jge
or
cmova
lods
lahf
aas
fistl
pop
dec
jp
pop
xor
loope
mov
pop
test
jbe
inc
popa
sbb
aaa
les
adc
cmp
dec
xor
or
inc
push
incl
aam
ficoms
or
scas
or
loopne
jno
testl
sbb
mov
mov
pop
data16
xchg
clc
dec
mov
dec
xchg
mov
dec
sbb
mov
fwait
pop
jge
cmp
add
mov
lods
xlat
xor
rol
jbe
or
sub
stc
or
je
imul
sub
inc
xor
in
in
aam
cmp
enter
loop
pop
adc
nop
test
or
mov
cmp
xchg
ret
orl
pop
mov
mov
out
mov
xchg
scas
into
and
in
pop
mov
roll
mov
mov
and
fstps
mov
in
cmp
in
xlat
mov
pop
fisttpll
xlat
pop
mov
lcall
movsl
insb
cmc
cli
add
lock
jecxz
inc
push
dec
dec
fisubrs
aaa
pop
shlb
and
rclb
clc
mov
icebp
push
xor
dec
aad
stos
lock
mov
pop
insb
adc
mov
xchg
mov
insl
push
dec
adc
or
bnd
cmp
sbb
add
neg
ljmp
sbb
add
sub
push
je
and
mov
jecxz
add
loopne
hlt
jle
dec
lds
ret
mov
dec
xor
jmp
push
xor
add
cld
xchg
sbbb
and
and
sbbb
jmp
shlb
lret
add
fldl
ds
lcall
movsb
pop
rcl
push
mov
std
mov
imul
cmc
mov
push
loopne
shlb
mov
int
cld
push
into
dec
cmp
and
fwait
movsl
sbb
cld
lock
in
mov
jne
mov
mov
fstl
jae
das
jle
inc
orl
xor
scas
insb
inc
mov
push
sub
ret
aas
cmpsl
rcl
lods
push
cmc
cmp
xchg
jmp
cmp
leave
lcall
add
or
and
jg
push
imul
repz
push
cmp
loop
push
add
sub
das
insl
inc
shl
xchg
jg
mov
es
pop
repnz
iret
rcll
push
and
mov
mov
loope
xor
mov
repnz
sub
jb,pt
daa
jmp
sub
mov
punpckhbw
rcll
add
xor
rorl
mov
stc
adc
dec
movsl
and
adc
test
aas
icebp
rorl
and
in
jecxz
loop
mov
or
push
sti
gs
pop
imul
jl
int3
outsl
cmc
jg
insl
std
and
xchg
ja
sahf
or
int3
cwtl
imul
jg
pop
mov
sub
sub
rolb
or
sbb
lock
xor
shlb
dec
mov
pop
adc
jns
stos
jbe
xchg
fs
out
cwtl
jo
jne
sbbl
scas
adc
arpl
cmp
ret
pop
pushf
adc
xlat
loop
pop
xchg
das
add
jle
mov
mov
mov
xor
ss
int
aas
push
cmp
sbb
loopne
arpl
icebp
fwait
hlt
pop
sub
xchg
pop
jg
ljmp
mov
xchg
cmp
popa
idivb
daa
imul
cmc
push
dec
jb
lahf
das
nop
ljmp
leave
lcall
dec
sub
lcall
or
adc
push
movsb
inc
shll
popf
js
sbb
adc
fs
ret
add
push
data16
bound
mov
add
jae
test
out
outsb
into
lret
jnp
imul
addb
cmpsl
sbb
inc
mov
in
jl
aad
or
or
mov
arpl
inc
stos
fimuls
sub
cmc
sti
mov
cld
mov
cmp
mov
sub
rol
xor
cwtl
xchg
dec
jo
aam
mul
mov
aas
cld
jge
icebp
sbb
push
pop
aad
mov
add
lea
enter
mov
jge
js
in
lds
inc
adc
push
lea
lea
sbb
roll
out
mov
mov
aam
mov
or
sub
jle
mov
ss
add
aad
dec
loope
ret
test
scas
jge
xor
imul
mov
nop
in
add
cmp
add
sbb
cwtl
jecxz
outsb
push
out
aaa
ja
imul
repnz
add
dec
jmp
ret
jbe
adc
ss
mov
lods
mov
mov
sub
xor
rcr
mov
and
mov
ljmp
mov
dec
add
shl
and
mov
and
cmp
adc
pusha
hlt
pop
add
cmp
sbb
iret
or
or
mov
or
scas
jbe
sub
lods
dec
leave
jle
jg
fbstp
pushf
xor
mov
push
popf
mov
hlt
adc
imul
int3
mov
pop
adc
jnp
std
push
and
inc
or
je
repz
repz
xchg
lahf
ret
jb
call
or
loope
mov
call
sbb
mov
ret
nop
cs
movsb
mov
push
dec
mov
addb
fiaddl
lret
pop
pop
inc
mov
out
out
loop
movsb
mov
fnsave
add
mov
jecxz
xor
fisttpll
xchg
aad
jns
call
decl
lock
jne
dec
cmp
xor
cli
rcrl
sbbl
cld
imul
stc
fwait
aad
cmp
xchg
and
mull
mov
js
lds
in
mov
test
pop
push
adc
push
mov
leave
xor
sub
sbb
stos
int3
add
sub
movsl
sub
jne
aam
js
call
lahf
cmc
pop
add
aam
jle
cmpsl
stos
lods
fisubrs
loopne
or
mov
in
insl
enter
jo
jae
and
lret
test
into
fstp
aaa
sarl
push
cltd
and
out
jecxz
add
cmc
arpl
pop
xor
daa
js
outsl
xor
mov
jnp
mov
jp
sub
dec
enter
cmp
mov
in
jo
dec
lds
xchg
and
jb
mov
xchg
sbbl
filds
stos
cltd
sub
push
inc
push
fmuls
addr16
dec
hlt
or
xor
cs
or
xchg
iret
jae
push
lock
mov
lods
cmp
test
int3
inc
cmp
shlb
cltd
push
sbb
add
push
push
lcall
cmp
push
and
pop
inc
mov
push
imul
inc
dec
movsl
cmc
lret
push
jge
bound
jg
bnd
push
clc
rcll
pop
nop
push
cmp
or
or
jle
cltd
mov
jne
std
loope
dec
cmp
jg
push
push
inc
leave
jnp
jl
aas
jne
xlat
cs
pusha
xor
mov
outsb
adc
mov
jo
insl
inc
jae
mov
jecxz
rcrb
incl
push
dec
cmp
xor
pop
push
popa
and
ret
outsl
ss
lahf
dec
icebp
jne
call
add
bound
or
pop
sbb
push
xor
flds
roll
bound
pop
nop
incb
mov
sti
mov
jle
lds
addl
fstpl
dec
rcrl
dec
outsb
aad
xor
cmp
pop
and
add
adc
xor
int
gs
iret
adc
ss
jb
inc
pushf
xorb
or
std
pop
adc
mov
aas
fcmovnb
fisttpll
addr16
mov
lahf
ret
push
imul
lds
mov
lcall
int3
and
lcall
shl
mov
lcall
pop
mov
cmp
test
jnp
lds
call
inc
les
jae
adc
xor
loopne
or
inc
push
xchg
xchg
jno
sbb
xchg
loop
mov
cmp
push
push
ret
push
lahf
fcoms
jns
jb
cli
mov
jno
popa
adc
jge
mov
dec
das
cmpsb
xlat
jne
pop
add
mov
push
cld
pop
mov
add
jmp
addr16
mov
movsb
xor
shll
scas
cmp
mov
ss
xor
add
mov
gs
sahf
pop
pop
in
je
icebp
mov
cmc
adc
gs
jg
test
push
mov
pop
jae
lret
dec
pop
pushf
sbb
pushf
js
mov
jb
sub
decb
jo
je
add
out
dec
ret
xchg
fnsave
jne
loope
mov
out
adc
idiv
lods
mov
jae
cmp
push
addr16
call
xchg
pop
lods
mov
cmpb
push
addr16
push
cltd
das
push
aam
dec
pop
mov
xchg
mov
imul
push
add
pusha
or
icebp
push
lods
ficoml
mov
mov
and
xor
push
imul
pushf
sbb
lret
jno
shll
imul
add
setno
mov
jbe
test
ds
mov
ja
add
jl
adc
pop
push
jg
sbb
jbe
xchg
jmp
aaa
push
xchg
mov
insb
fcomip
out
add
add
and
addr16
and
sbb
rcrl
xor
pusha
out
add
in
rcrb
outsb
je
test
jp
pop
bound
imul
pop
jnp
xchg
or
inc
jecxz
push
lcall
test
adc
pop
fcoms
mov
rcl
sbb
mov
jbe
bnd
shlb
pushf
stc
xchg
xlat
xchg
pop
loop
inc
ss
es
cli
movsl
cmpsb
sub
or
sarl
in
pushf
ss
xchg
push
lahf
inc
cmc
add
and
movsb
insb
inc
add
xchg
sbb
sub
mov
pusha
fildll
and
fldenv
pop
mov
fucomp
aas
fs
mov
scas
cmp
lds
in
lcall
cld
loopne
xchg
cmp
inc
cmp
add
lock
mov
cltd
int
fs
xchg
ficomps
pop
sbb
leave
sbb
test
sbb
out
shl
mov
cli
mov
fisttps
int3
pop
test
aad
test
out
mov
negb
es
add
insb
push
and
aas
xor
cmp
ljmp
and
push
push
fnstenv
mov
in
inc
jns
push
pushf
jnp
or
push
scas
mov
mov
sbb
sbb
push
and
imul
insb
jge
ret
int3
jmp
mov
xor
loop
lock
xorl
fsubrl
xchg
or
loop
mov
push
push
push
jnp
push
cmp
subb
or
arpl
lcall
push
rolb
mov
stc
cwtl
orb
data16
nop
movsb
rclb
fidivs
mov
jbe
fcmovne
cmp
roll
jmp
cmp
mov
jbe
les
mov
push
inc
mov
pop
cld
es
add
mov
mull
jne
sbb
popf
psubsb
rol
pop
repz
mov
stos
das
or
sbb
int3
jns
stos
jns
jge
pop
jns
lret
ror
std
jge
aaa
push
push
repnz
mov
xchg
dec
loope
sti
outsb
sbb
scas
jno
and
jae
or
cmpsb
imul
shl
loope
inc
xor
mov
and
rcrl
pop
xchg
dec
das
jno
mov
mov
scas
cltd
test
inc
fbstp
jo
sti
pushf
imul
in
pop
and
mov
adc
leave
sbb
sbb
jle
lea
test
sbb
call
repnz
jg
add
pop
clc
pop
into
sahf
dec
mov
lods
adc
mov
push
mov
popa
xchg
loop
sub
xor
fxch
pusha
int3
jg
data16
fwait
dec
rolb
and
sub
sbb
cmp
shl
aas
xchg
mov
popf
cs
mov
sbb
or
jmp
cli
adc
cmpsb
andl
js
fcoml
ret
dec
mov
inc
inc
push
nop
pop
mov
or
or
data16
mov
sub
mov
cmpsl
and
lods
mov
dec
shll
mov
cmovle
or
pop
movsb
mov
roll
ror
stc
and
cmp
mov
fucomi
push
stos
mov
adc
adc
mov
inc
imul
adc
inc
mov
add
clc
jg
inc
aam
xor
dec
fwait
and
rcll
mov
iret
adc
fadd
repnz
data16
or
mov
mov
cmp
xchg
cli
sbb
pop
arpl
out
rcr
xchg
or
aad
cmp
mov
ffree
pop
sbb
int
pop
pop
xor
pop
xor
loop
fbstp
push
ja
cwtl
ret
rorl
and
jmp
sub
int3
push
adc
in
mov
in
frstor
inc
xor
nop
mov
sbb
arpl
test
mov
fidivl
js
jae
aad
or
xchg
mov
test
popa
pop
jmp
cltd
dec
dec
xchg
xchg
jb
test
adc
xlat
es
stc
cmpsb
mov
orl
mov
add
call
movsl
adcl
fs
int
call
xorl
data16
xchg
in
xlat
jmp
mov
inc
int3
mov
and
jae
leave
jne
adc
ja
xor
mov
aas
xchg
mov
lret
jae
out
ss
adc
pushf
pusha
arpl
addr16
ret
icebp
insb
xor
lret
and
ja
jb
in
mov
push
add
mov
mov
and
xstore-rng
cmpsl
add
lahf
fs
xchg
jle
mov
repz
or
jne
cmc
xchg
int
gs
push
xor
push
jg
xchg
mov
pop
das
lret
cld
xor
adc
and
push
add
sahf
mov
out
add
mov
xchg
pop
mov
into
repnz
dec
adc
push
and
aad
push
faddl
xor
cmc
pop
sti
jge
jg
out
mov
dec
bound
sbb
and
lcall
mov
mov
pop
xchg
addl
aam
push
or
mov
fnstenv
repnz
pushf
mov
push
shlb
scas
or
sbb
scas
pushf
mov
mov
shrb
cli
and
aad
push
adc
into
sub
xor
sbb
outsl
lds
sbb
jo
pushf
aam
cli
fwait
push
lock
and
sbb
into
dec
rorl
std
adc
jp
inc
arpl
sbb
pop
movsl
cs
insl
ljmp
sbb
test
mov
cmp
mov
mov
mov
mov
orb
cmp
jbe
testl
fidivs
adc
ljmp
aaa
nop
mov
orl
and
mov
dec
shrb
imul
scas
mov
movb
test
nop
cmp
jb
jb
mov
bound
inc
out
popa
adc
mov
mov
and
es
fnsave
das
testl
pop
jg
dec
mov
test
out
testl
push
xchg
mov
mov
sbb
shrb
and
clc
sbb
or
cli
pop
clc
mov
ds
jb
sbb
std
clc
pop
add
push
add
add
cmp
repz
pop
fiadds
cs
mov
fmuls
and
fsub
jg
push
mov
loope
test
aaa
in
push
int3
and
pop
push
repnz
mov
ja
push
xor
fisttps
xchg
test
and
in
push
sbb
mov
cld
add
ret
hlt
lcall
jecxz
inc
cmp
jno
ja
in
mov
pusha
outsl
mov
insb
insb
and
inc
in
data16
mov
jns
jae
js
xchg
jne
pusha
sbb
xchg
xor
mov
xlat
jne
in
mov
into
in
mov
jge,pt
iret
cli
cmp
icebp
xor
leave
shrl
add
in
stc
sti
cmpsb
mov
inc
inc
sbb
or
mov
rolb
push
jmp
mov
icebp
sbb
test
or
icebp
or
jae
sub
cmpsl
ret
add
mov
rorb
mov
cli
iret
mov
sbb
adc
iret
mov
outsb
in
stos
int
or
jno
lods
push
sti
cmp
das
js
test
xor
addl
insb
or
cmc
hlt
cmp
clc
ss
inc
cmp
mov
xor
or
sbb
pop
ret
std
jne
and
sbb
loop
in
in
stc
push
mov
fsts
ret
mov
cli
jl
shll
mov
jno
rcl
out
push
pushf
js
pusha
sbb
pop
dec
test
sbb
scas
loopne
sub
fcom
mov
aad
leave
adc
mov
fstps
push
lea
pop
stos
xor
jae
das
fadd
lock
mov
mov
arpl
mov
subb
xlat
pop
sbb
mov
loopne
fimuls
into
jo
ljmp
aam
push
jle
or
fstl
push
adc
and
hlt
or
or
into
pop
aaa
and
mov
into
sbb
notb
mov
mov
mov
scas
dec
jb
psubw
jbe
jge
imul
inc
leave
sbb
mov
test
rorb
mov
stos
out
jno
cli
inc
adc
adc
bound
xchg
push
test
push
daa
add
lock
lods
add
je
fwait
pop
fmul
inc
sahf
dec
in
xchg
cs
in
lock
mov
jnp
pop
ds
sub
cmp
shlb
loop
repz
inc
popa
jb
xchg
aas
pop
xchg
inc
popf
pushf
xlat
rcrb
mov
clc
dec
pushf
mov
sbb
cmp
scas
xchg
dec
das
push
mov
and
daa
dec
test
xor
sub
popa
add
aaa
jge
mov
mov
push
fwait
and
js
out
or
mov
repnz
testb
sub
movsb
add
lods
stos
mov
jp
mov
aad
jb
pop
inc
dec
add
leave
faddl
pop
outsl
sub
cs
add
sbb
adc
push
test
imul
lds
je
jo
or
cli
pop
or
cld
lahf
popf
and
out
movsl
adc
mov
and
or
xchg
dec
mov
xchg
xchg
dec
push
lods
lods
add
popa
les
lods
sbb
inc
mov
imull
and
in
shrl
stc
lret
shl
adc
sti
inc
and
jns
ret
pop
mov
xor
loope
mulb
in
pop
bound
push
stc
sbb
add
push
mov
xor
add
cltd
xlat
mov
sbb
es
in
mov
xor
loope
mull
jecxz
dec
jecxz
and
test
es
pop
xor
out
aad
adcl
das
movsb
in
push
mov
out
imul
jo
aas
stos
sbb
and
imul
movsb
mov
mov
bswap
mov
jb
data16
push
push
imul
jno
and
add
xchg
mov
sbb
push
jo
ss
in
jg
jae
sub
mov
pusha
mov
shrd
adc
nop
dec
mov
lret
and
jmp
cmpsb
js
inc
mov
daa
sbb
sub
mov
cmp
stos
add
lods
icebp
jl
jp
push
mov
lret
dec
clc
outsb
enter
repz
pop
scas
xor
leave
rcrb
cmp
sub
pop
dec
mov
and
test
iret
cmpb
adc
loopne
xchg
jmp
gs
or
insl
and
js
xchg
mov
push
xchg
mov
push
sub
pop
mov
or
and
push
mov
cmpsl
mov
xor
inc
pop
imul
arpl
test
adc
xchg
push
pop
icebp
repnz
pop
sti
pop
lcall
lahf
cmp
mov
or
push
jae,pt
xor
rcrb
nopl
stos
cltd
fwait
adc
popa
rolb
fmulp
adc
fnstenv
jge
mov
filds
pusha
add
adc
lea
sbb
xchg
jnp
xchg
xchg
adc
cmp
dec
mov
mov
sbb
push
lcall
cmpsb
adc
cmpsb
push
sub
shlb
sub
pop
cmp
cmp
fnstcw
and
sub
stos
stos
addr16
or
fcmovnbe
mov
mov
xchg
or
xlat
mov
inc
ret
sbb
jge
and
stc
sub
lahf
inc
jo
call
in
jbe
and
dec
dec
shll
fsubr
xchg
mov
ljmp
sbb
sarb
sar
add
in
cli
nop
enter
aam
and
jns
fcompl
xor
scas
dec
rolb
mov
xor
cmpsb
cmp
mov
int3
enter
inc
rcrl
mov
out
es
lret
add
cmpsb
cwtl
clc
call
icebp
push
push
lret
out
and
test
clc
cli
jae
push
xor
jp
xchg
repz
fwait
adc
loope
cmp
mov
jo
ljmp
inc
dec
lret
add
ficomps
lret
test
inc
sbbl
add
adc
cmp
addr16
pushf
push
movsl
or
dec
inc
cmp
sbb
pop
push
push
mov
test
leave
or
outsb
testl
test
sbb
cmpsb
in
add
cmp
mov
mov
stc
addr16
loop
sub
xor
jnp,pt
push
xchg
adc
dec
cs
mov
add
or
ss
fneni(8087
imul
cld
adc
and
cmp
insb
daa
sub
mov
dec
mov
mov
fsubr
xchg
ret
or
pop
int3
push
mov
sarl
std
mov
sub
insl
push
xchg
push
fcoms
dec
add
fcoml
lods
dec
in
es
pop
inc
jl
mov
mov
mov
sbbb
cwtl
jne
and
push
adc
fs
shlb
mov
mov
loop
jecxz
sarl
inc
outsl
adc
pop
call
ds
mov
adc
pop
hlt
xchg
mov
clc
mov
lods
jne
sbb
adcb
mov
decb
fdivl
fistpll
test
test
popf
pushf
roll
lock
scas
ret
mov
add
fbstp
js
aam
add
outsl
lret
cmpsb
mov
fdivr
mov
aas
ja
test
jp
std
cmp
mov
mov
sbb
scas
jne
cli
int3
sbb
mov
fcompl
jmp
ret
cld
jo
jae
xchg
mov
int3
scas
std
push
cld
xor
pop
into
pop
pop
sub
and
rcrb
and
movsl
ja
in
pusha
outsb
xchg
push
push
pop
rol
int3
mov
mov
cmp
push
adc
dec
jle
std
mov
sbb
jge
fs
shlb
sub
sub
add
fists
ja
mov
mov
rcrl
aad
sub
popf
int
fwait
inc
enter
ret
aas
mov
vunpcklpd
and
add
cmp
sbb
and
jp
je
adc
cs
sbb
ds
mov
lret
mov
test
mov
sbb
push
int
jmp
adc
xchg
loop
mov
call
jne
js
and
shll
rcll
adc
js
shrl
inc
push
shll
aas
sbb
push
push
sub
aaa
xor
jo
rcll
fcompl
daa
test
jbe
lcall
cmp
outsb
out
pop
sbb
popf
aad
mov
fstps
enter
add
sub
outsl
pop
pushl
mov
jp
daa
lahf
std
xchg
mov
in
adc
and
xchg
adc
push
jmp
and
in
sbb
jnp
cmp
imul
and
imul
sub
scas
cli
cmp
repz
movb
mov
mov
lds
cmp
cmpl
ss
repz
syscall
mov
dec
sar
mov
aas
aas
scas
stc
call
repnz
mov
add
jecxz
xchg
pop
imul
adc
insb
int
mov
xchg
adc
loope
dec
xchg
xchg
lcall
xchg
add
pop
fcoms
arpl
xor
ljmp
gs
pop
ret
stc
xchg
lock
mov
or
ds
stos
insb
lret
sbb
or
dec
and
xor
inc
cwtl
mov
sbb
push
adc
cmp
outsl
sbb
pop
shlb
push
filds
cwtl
push
jge
jmp
and
test
mov
inc
cld
aam
push
movsb
stos
add
movsl
mov
jno
xor
test
xor
es
inc
int3
in
rcrl
nop
jbe
pop
jb
lcall
xchg
inc
test
fwait
sbb
js
outsb
jo
pop
fcomps
adc
mov
dec
push
jno
sbb
sbb
mov
pop
jle
inc
arpl
les
xchg
test
add
jecxz
push
pop
lcall
sarb
cmp
stc
cmp
inc
in
xchg
fistpll
repnz
dec
mov
movsl
mov
cli
dec
std
xchg
mov
sbb
mov
mov
cltd
adc
das
mov
or
leave
jg
cmp
sysenter
rcll
xlat
fisttpll
xlat
out
hlt
lock
cmc
clc
push
pop
stos
leave
in
aaa
jb
shrl
mov
jge
outsw
lds
and
lds
int3
sbb
jp
jmp
xor
or
shll
push
xchg
mov
mov
cmp
and
cmp
ficoml
pop
pop
inc
mov
cltd
push
jne
stc
xchg
outsb
mov
mov
imul
sbb
imul
popa
push
std
add
mov
mov
adc
dec
sbb
adc
inc
loope
fdivrl
mov
cwtl
call
adc
jb
push
outsb
js
and
add
repnz
js
inc
jmp
adc
mov
xchg
xor
push
mov
rorb
loopne
rcrl
or
stos
sbb
cld
cmp
test
add
mov
jecxz
and
mov
jns
dec
cmp
repz
sbb
ret
push
push
cmpsb
cmpsb
mov
in
insb
dec
dec
in
insl
lods
mov
imul
stos
fistps
xlat
cmpsl
adc
add
sahf
lret
jns
push
push
subl
lea
fiadds
mov
scas
adc
cmc
adc
mov
add
idiv
mov
xchg
jo
popf
pop
inc
sbb
lahf
into
into
iret
xor
rorl
stos
inc
scas
ljmp
sub
dec
cwtl
push
leave
rcrb
cs
xchg
sub
notl
in
cli
je
push
sbb
xchg
sub
xor
xor
jbe
pusha
adc
shl
call
adc
sti
mov
dec
out
add
cmc
lret
cs
xor
shl
mov
rcrl
mov
and
imul
lock
mov
push
cli
lcall
cmp
jb
push
arpl
xorb
jecxz
push
dec
pop
or
add
mov
lods
in
sbb
hlt
repz
pop
mov
fildll
insl
push
fxch
jo
push
std
ja
sahf
jp
sbb
in
ficoms
insl
add
xlat
jge
ljmp
add
and
hlt
test
xchg
xchg
iret
faddl
mov
in
push
dec
aaa
call
hlt
pusha
and
cmpsl
iret
popl
xor
sbb
and
test
divl
inc
shrb
jecxz
in
sbb
je
xorl
lock
mov
and
adc
das
mov
mov
pushf
or
repnz
dec
insl
sbb
mov
lods
sti
sub
inc
mov
mov
mov
mov
ja
or
add
je
movsb
jp
cwtl
push
bound
dec
cmp
cmp
outsb
mov
ds
sbb
nop
daa
or
jge
es
jne
push
cltd
adc
add
add
xchg
mov
ror
jmp
lcall
out
dec
insl
adc
cli
lods
push
aas
out
push
into
fdivrl
cmc
cld
mov
mov
adc
sbb
icebp
xor
mov
pop
es
sbb
push
xor
lret
fnsave
hlt
out
ja
inc
in
shlb
and
sbb
xor
xchg
and
clc
sbb
push
pop
insl
out
loop
pinsrw
int
mov
adc
pop
seto
incb
adc
pop
je
mov
mov
sbb
and
pop
mov
outsb
and
push
mov
sub
and
aas
inc
mov
fldcw
jmp
mov
inc
inc
aaa
mov
loopne
outsb
push
cmpsl
mov
jl
mov
nop
dec
xlat
es
arpl
mov
or
enter
fnstsw
mov
dec
cli
push
jge
pushl
std
ja
iret
iret
push
cli
fsubrs
jbe
and
xchg
outsb
sbb
icebp
push
clc
das
ret
into
xor
pop
adc
pop
cmp
fmull
outsb
fbld
pop
jns
shl
pop
dec
int3
call
outsb
rcll
arpl
aas
adc
stos
enter
ret
adc
sbb
jb
les
out
adc
jle
rolb
xchg
cmp
pop
and
lods
sti
into
shl
lret
aad
hlt
inc
cltd
jge
call
push
popf
add
stc
or
std
sti
mov
push
push
ja
cmc
divl
push
lret
fs
dec
add
test
sbb
int
aaa
and
mov
mov
push
pop
jne
and
sbb
pop
mov
adc
adc
cmc
add
pop
xor
nop
pop
jl
sub
sub
cmpsl
daa
add
test
pop
icebp
xor
rorl
mov
ret
add
adcb
lock
adc
pop
cmp
cmp
stos
pop
ss
ljmp
add
lahf
pop
push
pop
dec
popa
pop
stc
stos
and
mov
psrlw
pop
adc
outsl
adc
mov
cs
sub
inc
gs
gs
push
outsl
pop
jl
adc
and
in
imul
jae
add
loop
pusha
mov
aaa
sahf
lock
or
lods
mov
and
and
xchg
jl
add
xor
aad
mov
adc
or
dec
lods
je
add
and
jp
jg
push
push
xlat
int3
cmpps
pushf
xchg
fldl
adc
loopne
or
iret
cmp
in
push
into
cld
xchg
divl
jg
mov
cld
ss
and
sub
pop
icebp
in
lods
into
push
das
outsl
pop
sbb
sub
pop
addr16
xchg
xor
sarb
mov
bound
ja
cmp
mov
vpshaw
mov
cmc
mov
fstl
lcall
pop
pop
pop
jg
cld
cmp
or
imul
scas
cmp
loop
test
into
jne
or
mov
and
daa
mov
mov
dec
sbb
fidivrl
std
fcomp
andl
out
ret
cwtl
ficompl
dec
mov
inc
push
jl
call
clc
jl
push
cmc
mov
pop
push
mov
inc
and
movsl
sub
fimuls
sahf
xor
and
adc
cmp
ss
jmp
jbe
and
sbb
daa
addb
mov
repz
cmpsb
das
sub
cli
jecxz
add
push
xor
adc
xchg
aad
jl
lods
mov
sbb
mov
gs
jecxz
ds
aad
adcb
in
and
jle
rclb
stc
mov
arpl
lahf
pop
inc
dec
mov
pop
or
sub
lds
repnz
mov
jo
leave
jno
sbb
mov
mov
mov
inc
cmp
cmc
and
jl
inc
insb
push
sub
lock
pop
mov
inc
push
dec
ja
inc
mov
mov
adc
fcompl
rcrl
mov
sbb
jnp
popl
fwait
mov
jmp
je
pop
sbb
adc
mov
jl
es
mov
fnstenv
push
enter
testl
cmp
mov
dec
dec
inc
inc
or
jns
repz
jne
mov
ja
mov
mov
jae
aaa
in
pop
mov
sbbb
xchg
mov
and
jo
xchg
scas
jne
mov
je
sbb
ja
pop
and
test
movsb
dec
xchg
inc
add
add
inc
into
shll
cld
les
fildl
clc
and
xchg
outsl
pop
cwtl
mov
insb
jno
aas
pop
add
pop
fnstenv
cmp
mov
cld
shll
scas
cs
out
dec
jge
jne
ret
adc
jmp
push
adc
jbe
sarb
repz
add
shlb
add
sbb
out
push
xchg
fidivs
or
and
cmp
sub
xor
iret
in
cmp
lea
jg
pop
xchg
inc
mov
fstl
lret
add
mov
and
mov
sbb
and
mov
xor
add
xlat
dec
ja
adc
and
mov
imull
inc
loopne
bnd
test
out
dec
add
ljmp
jmp
inc
imul
dec
jnp
or
mov
out
lods
cmp
aaa
adc
mov
sahf
loop
cmp
into
mov
divb
fidivs
and
jns
out
shlb
jae
out
push
sbb
cmp
adc
and
cmc
idivb
inc
dec
nop
gs
cwtl
xor
and
pop
loop
adc
push
int
and
rcrb
std
pushf
xor
jg
mov
jl
cmc
cmpsb
push
jne
ds
shlb
testl
pop
cld
inc
fisubs
je
scas
lret
testl
adc
add
adc
or
or
push
xor
xchg
xchg
or
jmp
test
push
or
sub
clc
nop
ficompl
mov
push
dec
push
sub
pop
lret
cli
push
int
cli
scas
stc
int
pop
mov
test
jg
mov
inc
xlat
cld
pop
std
sub
inc
xchg
jge
loope
hlt
push
stos
out
es
or
sbb
xchg
mov
xor
scas
push
mov
outsl
pop
add
shlb
fldcw
xor
push
add
mov
rol
imul
ret
add
iret
sar
and
jnp
mov
mov
fisubs
xor
inc
or
jp
sti
rorl
xor
sahf
je
fbld
xchg
pop
loopne
push
das
es
in
out
adcl
jmp
xor
aad
subl
lcall
and
adc
pop
decl
faddp
dec
jg
iret
and
push
lret
dec
pop
outsb
mov
mov
data16
rorl
or
and
push
jge
cwtl
sub
or
sahf
addr16
in
dec
andl
fs
stos
sbb
jns
or
dec
fistpll
or
imul
xchg
je
in
fs
rcrl
dec
mov
push
enter
fadds
mov
test
ds
mov
add
jns
cld
and
push
mov
pop
mov
cmp
and
mov
roll
xchg
mov
cli
pop
js
mov
push
pop
into
dec
add
add
push
mov
idivb
push
aad
es
adc
add
in
pop
repz
sbb
jns
into
test
mov
xchg
ret
or
mov
add
js
testl
push
add
mov
xor
testb
xchg
xor
jp
clc
shrb
mov
mov
test
into
cmp
cwtl
movsb
ret
adc
mov
lods
pop
loop
pusha
mov
mov
sub
popf
sarb
test
push
jne
call
loopne
push
push
rorb
xchg
sarb
mov
xchg
cmp
imul
or
imul
sbbl
lds
mov
adc
mov
mov
insb
in
cmp
mov
gs
fs
add
xor
or
xlat
inc
mov
rcl
add
and
lods
adc
inc
jnp
in
ja
adcl
push
mov
outsb
arpl
jg
or
aas
es
push
test
imul
and
sbb
and
cmpsl
add
push
adc
jae
sarl
test
and
mov
and
jbe
add
lret
insb
mov
iret
test
shlb
pop
insl
xchg
and
push
mov
pop
mov
pop
outsb
xchg
dec
push
sbb
loope
fiaddl
jbe
adc
sbb
sbb
xchg
inc
push
xchg
push
dec
icebp
stc
push
mov
stos
add
sub
inc
fstp
add
fisttpll
mov
iret
cmp
adc
pop
int
cmpl
xor
xchg
and
js
sbb
popa
add
es
ss
cmp
dec
cmp
orb
fisubl
mov
pushf
pop
push
lock
idivb
xor
cld
loop
jns
ljmp
popa
divb
ret
or
mov
aad
out
cmpsl
sbb
mov
jns
pop
insb
jp
xchg
popa
inc
inc
fildl
xchg
jmp
add
popa
push
lcall
lahf
cmp
jecxz
sub
mov
and
mov
aad
pusha
push
jecxz
iret
ret
insb
not
ds
sti
mov
pop
fidivl
in
lahf
push
daa
in
dec
andl
call
and
addr16
mov
sbb
add
test
mov
ss
inc
mov
add
test
movsl
es
jno
int
add
adc
loopne
aam
dec
pop
xchg
inc
push
aad
cmp
shlb
mov
mov
xchg
dec
and
mov
mov
xor
je
xchg
stos
cld
inc
loope
stos
in
imul
mov
mov
arpl
or
mov
sarl
fsubl
mov
sbb
movsl
inc
xor
mov
mov
insl
cmp
mov
inc
push
lahf
jnp
xor
popf
call
insl
add
es
shlb
push
mov
in
jbe
lret
and
lret
sti
mulb
ja
out
movsb
cmp
lods
xchg
xchg
popa
push
push
push
icebp
fwait
sub
rclb
testl
jge
add
push
inc
notl
mov
lock
nop
xor
rorl
sahf
xchg
adc
push
push
ja
pop
nop
jnp
pop
pop
push
add
loope
dec
mov
les
aas
inc
or
ds
adc
out
cltd
lea
push
rol
inc
pushf
sub
arpl
mov
mov
jnp
daa
lret
cli
push
jbe
add
inc
xchg
adcb
lcall
mov
aaa
cld
sbbb
add
ljmp
sbb
and
xor
dec
add
cmp
dec
ret
mov
mov
cmpsb
fstpt
xlat
mov
icebp
cwtl
lret
pop
dec
adc
xchg
xor
xchg
dec
mov
mov
ss
aaa
adc
inc
add
test
inc
lret
mov
pop
out
mov
jp
or
enter
sbb
adc
outsl
add
iret
jp
iret
xor
jno
enter
pushw
int3
and
call
jo
add
add
loopne
inc
iret
scas
cs
cmp
cmc
push
es
xchg
pop
adc
inc
loope
push
adc
shll
ret
fwait
and
sub
aaa
pop
pusha
sarb
fwait
adc
mov
aaa
add
xchg
in
lea
cmc
or
insb
ficoms
das
cmp
lret
nop
adc
negl
sub
fistpll
jge
adc
xchg
xor
jnp
pop
pop
xchg
faddp
repz
push
imul
push
pop
scas
sti
addr16
mov
cli
mov
sarl
adc
xlat
sbbl
icebp
cmp
pop
sub
clc
adc
fwait
mov
pop
xorb
or
cmp
xchg
out
lahf
push
mov
xchg
or
js
xchg
sub
imul
mov
cwtl
sbb
je
pop
jg
cmp
lea
mov
cltd
push
test
sbb
fcom
ss
dec
bound
xor
fnstenv
inc
cmp
pop
loop
aam
test
sbb
inc
push
push
rcrb
icebp
pop
pop
and
or
cwtl
push
je
mov
xor
fscale
cwtl
jmp
push
pop
push
sarb
inc
vsqrtps
fdivrs
inc
pop
add
dec
shl
xor
mov
and
outsl
movsl
mov
pop
bound
inc
shlb
mov
rorb
movsb
mov
mov
cwtl
or
scas
scas
rorb
mov
cmp
jne
push
adc
ret
ss
sub
test
xchg
and
jbe
pop
mov
cwtl
fildl
aaa
pop
sub
ds
or
mov
inc
pushf
cs
aam
dec
into
lret
cmc
cmp
lock
jns
mov
stc
enter
or
pusha
out
arpl
ljmp
repz
inc
push
shrb
pushf
rolb
fbld
enter
xchg
add
inc
inc
add
mov
sub
mov
mov
mov
pop
pop
lds
repnz
jbe
add
pop
xor
sahf
ja
xor
pop
inc
pop
jmp
aad
nop
sbb
xor
fs
or
stos
xchg
or
push
addb
shll
inc
cli
mov
stos
cwtl
into
add
pop
decl
shl
xlat
neg
cmpsb
ret
mov
push
xchg
mov
xchg
testb
repnz
stos
push
cltd
cmpsb
mov
mov
sbb
dec
int
sbb
aaa
and
push
cmp
imul
cltd
mov
and
dec
sbb
mov
incb
into
cmp
push
ficoms
push
cli
mov
jl
sbb
aas
jmp
push
test
mov
in
in
shl
xchg
lods
add
sbb
pop
mov
lahf
sub
xchg
sahf
dec
repz
cmpl
ret
fsubs
jl
js
out
fabs
ja
sti
pop
call
push
sbb
mov
inc
pop
add
push
mov
or
mov
add
add
and
arpl
cmpb
pop
sub
fdivs
push
mov
and
loopne
or
xchg
mov
in
sarb
jmp
scas
inc
mov
arpl
leave
mov
mov
sub
pop
mov
stc
insl
mov
xchg
stos
sbb
insl
fs
fadds
sub
adc
dec
jnp
and
push
sub
pop
mov
lods
gs
stos
loopne
sti
adc
loop
fs
cmp
orb
ds
xchg
add
adc
push
mov
or
xlat
jb
push
cmp
mov
daa
inc
and
fcom
xor
jnp
repnz
jnp
cmp
pop
loope
mov
sub
outsb
dec
aaa
add
call
loopne
loopne
dec
arpl
mov
xchg
xchg
sbb
insl
xchg
lret
xor
push
cmp
push
push
xchg
fcoml
add
in
loope
pop
mov
dec
and
mov
ret
add
pop
or
pusha
adc
cmp
xchg
arpl
cli
leave
xorl
dec
jecxz
mov
or
pop
cli
sarb
jns
out
icebp
and
pop
xor
xchg
push
adc
xchg
movsl
mov
jb
cmp
mov
lds
or
xchg
xchg
scas
add
pop
sbb
jp
inc
lahf
adc
jo
or
dec
in
movb
lods
push
inc
insl
pop
movsl
push
adcl
add
mov
cmp
xchg
test
push
push
cmp
mov
fs
jp
aam
fs
imul
stos
mov
lcall
test
fcoml
pop
dec
jp
jns
dec
fs
add
in
xor
negb
mov
mov
mov
mov
mov
jg
push
aaa
mov
jnp
daa
sbb
inc
add
mov
mov
jg
pop
pop
int3
xchg
mov
orb
nop
push
in
scas
sub
sbb
sbb
add
subl
dec
pop
cmp
pushf
jne
shlb
adc
fsts
arpl
cmp
and
lahf
xor
inc
jo
ss
fnstenv
xor
and
popf
sbb
aam
shrl
mov
mov
mov
pop
out
imul
loopne
pop
inc
ja
sub
push
dec
fdivrl
movsl
sbb
inc
xchg
push
adc
lret
fs
movsb
pop
fs
jecxz
xchg
mov
pop
or
es
cld
pushf
sub
rcll
mov
ljmp
jne
roll
cmp
lcall
and
pminsw
jp
and
push
sub
inc
imul
cltd
push
ja
scas
pop
fdivrl
push
mov
add
pop
or
xor
push
pop
inc
cltd
add
out
xchg
mov
jp
fcmovbe
or
ficoml
les
adc
mov
sbb
adcb
scas
adc
mov
xchg
sub
iret
push
pop
in
sbb
bound
repz
aad
adc
jge
inc
adc
xorl
and
sti
mov
jns
popa
divps
push
jp
or
xor
jno
lea
dec
cmp
push
cmp
dec
imul
and
dec
ja
or
push
ret
mov
sbb
xchg
scas
jo
adc
xchg
clc
or
ror
mov
mov
fiaddl
xlat
nop
sub
xorl
leave
mov
push
jp
or
loope
fwait
inc
sahf
jl
int
jno
daa
pop
pusha
into
shll
adc
popa
jmp
imul
pop
pop
add
out
xchg
adc
loop
cmp
xchg
inc
add
cli
ret
hlt
adc
fnstcw
cltd
ds
fs
int3
xchg
stc
loopne
data16
pop
daa
inc
mov
jmp
addl
and
stos
inc
sbb
jl
adc
ret
and
outsl
les
sub
sub
pop
inc
sbb
push
das
ficoml
stos
scas
push
or
push
sub
push
addb
cmc
mov
ss
and
xchg
push
subb
dec
fildl
push
call
lcall
push
mov
inc
mov
pop
daa
push
shrl
clc
xchg
push
adc
in
in
in
mov
mov
aas
addl
divl
lods
adc
or
mov
rcrb
shl
sbb
adc
or
mov
out
pop
sbb
push
jne
ret
sbb
jns
add
pop
jb
addr16
loop
sub
loopne
dec
xchg
xlat
pop
fidivrs
sbb
jb
out
xor
es
pop
cmp
fildl
repnz
enter
xor
fbld
ss
pop
out
shl
jne
je
int3
fstpt
jo
mov
popa
inc
clc
aaa
lds
mov
outsl
je
insb
in
xor
cmp
or
loopne
fdivr
pop
or
daa
lret
cmp
jbe
cld
pop
adc
cpuid
sub
mov
push
mov
cmp
cld
lods
jnp
mov
xor
jo
fs
dec
sbbb
pop
rcrb
inc
mov
mov
cmpl
out
aad
test
mov
adc
imul
or
cmp
inc
aad
mov
push
and
mov
pop
fwait
out
scas
cmp
inc
adc
pop
cmp
jae
and
or
and
jp
pusha
add
lret
mov
test
lods
xchg
arpl
stos
rclb
push
test
push
fyl2xp1
cmpsl
in
inc
jmp
mov
ljmp
push
sbb
ja
inc
pushf
popf
dec
pop
popa
stos
adcb
enter
ja
push
xchg
fiaddl
and
mov
xorb
popa
adc
xchg
and
ljmp
shl
div
pushf
sub
std
push
inc
clc
jb
mov
add
js
lea
les
and
xor
cmp
push
xor
cmpb
xchg
cmp
adc
sahf
pop
inc
jns
into
out
subb
xchg
fdivrl
sbb
inc
push
cs
mov
mov
aaa
fcoms
imul
push
mov
cs
and
stc
mov
in
sub
or
push
inc
daa
js
jbe
inc
je
arpl
xchg
cwtl
fwait
lods
mov
movsl
ja
fs
cld
mov
jmp
mov
adc
int
fwait
push
sbb
mov
sbb
loopne
add
sbb
mov
mov
mov
jbe
ret
push
dec
jb
cmpl
loopne
rorl
adc
push
daa
push
sbb
scas
mov
mov
test
sub
cmpb
push
sarl
imul
call
sub
adcb
mov
jb
out
outsb
and
out
sub
xchg
inc
pandn
sbb
test
mov
cld
sahf
or
sti
push
jns
bound
adc
fcoml
out
in
pusha
aas
lock
and
and
inc
ja
pusha
popf
add
pop
xlat
mov
or
sbb
out
int
sub
enter
mov
lods
pop
mov
pop
inc
mov
ss
and
lret
sub
jg
and
mov
xor
jbe
xchg
leave
inc
cmp
cli
mov
xchg
xchg
cmp
sbb
fiaddl
pop
pop
loop
sbb
add
jb
and
inc
pop
and
imul
mov
inc
popf
call
mov
inc
mov
lods
cmp
call
inc
or
mov
sub
ret
mov
or
bound
mov
jb
test
inc
je
sub
sub
outsl
in
call
mov
and
lods
das
bnd
xor
push
push
mov
scas
sub
sub
xchg
pop
push
fidivrl
out
lds
mov
addr16
mov
call
dec
push
fwait
pop
pop
lods
lahf
xlat
into
push
add
addb
jno
ret
lret
mov
xchg
out
or
jp
cmp
incl
jmp
xchg
int
lods
dec
xor
push
lds
pop
call
xlat
sbb
add
pop
test
shl
dec
mov
and
push
dec
sub
idivb
push
lds
mov
stc
leave
daa
movsl
push
xor
lahf
andl
jmp
lods
repz
push
jg
mov
imul
and
pop
adc
daa
clc
mov
xor
xor
mov
jl
popa
and
pusha
std
mov
shrl
xchg
or
loopne
and
mov
ss
sub
sahf
js
pop
cmp
dec
jecxz
mov
or
cmp
dec
mov
dec
or
cmpb
shrl
loope
pushf
pop
mov
sub
mov
out
jmp
and
jb
idivb
push
lret
mov
push
xlat
inc
mov
ret
cmp
xchg
sbb
add
jbe
sbb
jp
lds
cwtl
sub
xchg
scas
scas
and
aam
mov
loope
or
js
push
ja
pushf
push
xorb
push
cld
jp
in
adc
mov
cmp
aaa
imul
adc
add
add
push
and
shrl
mov
sbb
mov
xchg
mov
pushf
sbb
popa
inc
ficoms
vandps
getsec
aas
scas
ljmp
in
rsm
mov
loop
les
cs
lock
out
mov
push
mov
jge
xorl
push
adc
mov
sub
fisubl
sbb
ret
push
outsl
or
cltd
test
and
in
jnp
pop
inc
repz
sub
sti
sub
mov
clc
jle
jns
sbb
enter
loopne
cmp
pop
xor
push
lock
pusha
or
out
xchg
sub
arpl
or
xchg
ror
pop
cs
and
mov
dec
jle
adc
adc
pop
shll
nop
cs
mov
lret
mov
movsb
sbb
sub
xor
cmp
insb
push
inc
lcall
adc
jl
mov
mov
push
mov
mov
pop
and
aam
adc
mov
adc
push
cmp
mov
and
sub
jmp
lret
in
addl
push
xor
js
cmp
out
jg
push
mov
ds
js
cld
movsl
mov
mov
hlt
imul
outsl
fs
shrl
xchg
fmull
ret
or
xor
sbbb
sub
add
mov
lods
icebp
imul
jns
sub
xor
push
enter
popf
mov
dec
pusha
iret
fdivrs
cld
mov
daa
sub
push
and
idivb
sub
loope
dec
fs
add
mov
rorb
add
clc
call
in
repz
int3
and
cltd
add
mov
xchg
xor
push
or
jecxz
or
inc
in
inc
insl
daa
clc
xchg
sub
mov
pop
cmp
add
mov
mov
mov
jno
ret
test
loope
mov
test
cmp
add
inc
xor
out
jecxz
pop
sub
pop
cs
pop
lods
adc
push
and
rorb
mov
jge
add
gs
loope
xor
fidivs
mov
in
push
adc
push
xchg
das
mov
cmp
lret
mov
ret
sub
jbe
inc
sbb
lea
test
ds
pop
cmc
cmp
cltd
and
insl
xor
xchg
insb
mov
arpl
stos
lock
xchg
inc
xor
xchg
add
aas
push
or
sub
push
jp
mov
test
lds
mov
cmc
rorl
xor
bound
rcrb
xchg
sahf
sbb
frstor
lret
pop
and
jge
mov
or
nop
sbb
xchg
and
jle
std
or
mov
jge
fucomi
push
and
in
sbb
iret
cmp
push
or
push
rolb
mov
aaa
fwait
std
sub
push
mov
xor
ljmp
sbb
mov
sbb
mov
pop
jno
aaa
addr16
orl
fdivl
popf
out
addb
jl
inc
repz
out
pop
xchg
cs
aad
rorb
adc
cmp
xchg
jmp
sub
shll
mov
es
cli
cmp
and
out
cmp
and
call
xchg
add
shl
sub
fstl
in
jne
addr16
call
mov
int3
adcb
and
loope
je
dec
sbb
sub
lret
and
pop
das
inc
test
daa
xor
mov
cmp
loopne
lds
sub
bnd
repnz
mov
mov
in
es
int3
mov
and
fmuls
mov
mov
cmp
pusha
fdiv
mov
test
mov
or
push
fimull
adc
adc
shrl
mov
aad
and
aaa
pop
adc
lahf
mov
ficoml
inc
cmp
mov
sbb
sub
xor
push
adc
pop
mov
fwait
or
stos
lret
lret
jle
adc
ret
xor
pop
aaa
ss
outsb
and
in
stos
fnstsw
ffreep
into
mov
cmp
addr16
test
and
pop
lret
push
sub
ret
fwait
mov
mov
repnz
jns
sbb
in
cmp
mov
je
pusha
mov
mov
push
push
std
scas
xor
jnp
push
dec
out
rcll
xor
push
rcll
daa
push
in
cld
repz
ds
cwtl
mov
xchg
fidivl
dec
mov
cmpsl
push
mov
push
fldenv
js
inc
loope
aad
xlat
in
mov
xchg
mov
mov
mov
insl
xor
hlt
and
or
lea
mov
jg
imul
test
mov
or
xchg
notl
fisttpll
leave
or
xchg
lock
jne
lock
pop
sbbb
notb
pop
loopne
jecxz
adc
cmp
inc
addr16
xchg
adc
fxch
sbb
lcall
push
adc
test
xor
out
add
mov
out
pop
pusha
and
fs
jl
sub
orl
mov
pop
xchg
jo
notb
jnp
inc
adcb
push
push
mov
sarb
repnz
push
xchg
or
andb
mov
test
sub
sub
das
push
sub
and
scas
es
or
ds
dec
les
movsl
mov
xlat
clc
cmp
out
scas
cmp
enter
push
mov
sub
add
mov
jle
js
sub
mov
imul
fwait
mov
inc
test
sar
inc
add
push
mov
in
test
sub
movsl
push
xor
or
in
stos
into
jnp
aad
jp
cld
outsb
pop
es
scas
js
mov
push
lods
cwtl
fcmove
mov
push
inc
inc
inc
xor
sbb
ficoms
mov
hlt
mov
cmp
ja
sbb
flds
std
hlt
gs
pop
popf
div
push
lea
rclb
insl
mov
mov
aad
push
je
out
pusha
cmc
shrl
add
mov
test
xor
int
xchg
add
jno
lock
jno
cmp
ljmp
and
mov
inc
xor
cmpb
jb
or
dec
cmp
cltd
xchg
sbb
mov
or
jne
cmp
dec
and
aad
push
mov
and
mov
cmp
mov
test
mov
xor
mov
lahf
adc
adcl
mov
cmp
mov
rcll
push
mov
testl
push
cmc
mov
sub
sahf
and
jbe
jl
jge
loopne
push
xor
stc
inc
mov
test
divl
cmp
decl
push
cmp
and
mov
sub
sahf
xor
jg
and
mov
add
sbb
jns
into
test
mov
mov
stc
xor
jmp
lahf
push
rol
push
inc
stc
testb
xchg
ds
cs
leave
mov
cld
cmp
push
call
mov
cmp
mov
inc
adc
nop
cmc
std
xchg
jge
cmpb
mov
test
dec
cmp
popf
xchg
sbb
mov
or
jne
cmp
push
and
aad
push
mov
cmc
sbb
sbb
nop
jbe
or
test
lahf
or
adcl
mov
push
aam
inc
xor
cmc
xor
mov
test
sahf
cmp
out
xchg
insb
int
xchg
pop
ret
lds
inc
stc
mov
xor
mov
es
rcll
test
xchg
ljmp
mov
movsb
cmp
and
divb
jo
loope
jge
andb
mov
test
cmp
aad
xchg
add
imul
sbb
nop
sarb
insl
and
mov
std
lahf
js
jmp
pushw
add
inc
push
loope
ss
xchg
add
jne
push
sub
loopne
push
xor
stc
inc
mov
lods
popa
divl
cmp
call
push
cmp
and
push
xor
cmpsb
xor
jg
sbb
pop
mov
int3
jns
into
push
imul
lcall
aad
push
inc
mov
inc
jge
jg
sbb
mov
test
popa
push
loopne
mul
push
adcl
stos
mov
repnz
fstl
inc
lret
cmc
mov
cmp
aad
sub
lods
jae
in
imul
push
test
lret
mov
xchg
cmp
and
out
fs
shrl
add
mov
test
xor
leave
jge
cld
jne
call
mov
cwtl
test
adc
mov
jl
testl
push
icebp
mov
and
xchg
and
aad
push
cld
cmp
popf
pop
pop
mov
xor
sbbb
and
xchg
inc
ret
lods
xor
popf
lahf
sbb
lea
mov
jo
in
push
push
aam
inc
xor
cmc
xor
jge
cmpb
inc
nop
lcall
fnstenv
pop
stc
int
dec
sarl
cmp
rcll
push
call
sub
xor
xorb
pushf
aad
push
mov
xor
xchg
xorb
mov
test
push
cmp
mov
xor
stc
jne
cmp
push
push
rolb
xor
cmc
sub
scas
sbb
lcall
xchg
push
ret
shll
stc
mov
xor
movsl
push
and
imulb
push
leave
xchg
push
cmp
and
or
xchg
jmp
push
xorl
push
test
xor
jb
or
mov
test
ds
mov
add
push
int3
xor
enter
inc
ja
push
imul
push
jl
out
xor
fnstenv
or
dec
test
ds
mov
add
push
int3
xor
enter
je
into
cmp
mov
mov
and
in
fs
xor
rcrl
jg
sbb
mov
test
push
cmp
loop
jg
int
in
jbe
mov
popa
xchg
mov
dec
lcall
pop
cmp
and
push
cmp
scas
xor
jg
sbb
nop
pop
fdiv
dec
fistpll
or
popa
mov
test
sahf
cmp
ljmp
stc
rcrl
jmp
xchg
es
adc
test
nop
pop
or
push
test
adc
sbb
nop
outsb
cmp
test
lahf
adc
adcl
xor
dec
push
les
xor
andb
sub
xchg
dec
ret
mov
xor
movsl
lahf
and
xchg
push
adc
negb
push
mov
or
and
dec
push
enter
push
insl
xchg
ret
pushl
cmpb
and
push
fs
shlb
dec
cmc
mov
inc
sbb
mov
test
es
jne
lock
incb
cltd
xchg
out
cmp
ficoms
jns
into
lods
cmp
and
divb
insb
cmc
fnsave
or
mov
test
xor
leave
jns
clc
shll
pushf
xchg
out
cmp
ficoml
jne
lret
push
and
out
xor
jbe
adc
push
test
popl
xor
hlt
imul
xchg
mov
int3
cmp
and
push
xor
orb
sbb
xchg
sub
popf
xor
lea
cld
jb
push
call
or
push
jge
sarb
mov
cmpb
and
loope
pusha
inc
into
xor
push
jge
jg
sbb
mov
test
and
mov
imul
sarb
inc
and
aad
push
mov
and
mov
cmp
mov
test
ret
ret
test
lahf
adc
test
jae
push
out
pop
push
aam
inc
xor
xorb
cmp
xchg
pop
ret
int
push
stc
rcrl
loope
ss
int
and
pop
xor
cmc
push
jmp
addl
mov
dec
add
insb
stc
fstps
inc
stc
testb
xchg
ds
cs
leave
mov
clc
cmp
jne
xor
lea
sarb
insl
push
cwtl
pushf
ret
or
lahf
js
jmp
pushw
add
inc
push
fnsave
and
add
xorl
xor
shl
push
jo
idivl
adc
call
in
mov
and
xchg
and
jb
in
lahf
nop
cmp
cmp
mov
rcll
lcall
ljmp
or
and
xchg
add
jne
pop
test
nop
pop
aam
inc
fistpll
or
gs
test
cmpsb
cmp
xchg
jo
fnsave
pop
stc
int
dec
sarl
inc
push
fstl
push
push
mov
mov
cmp
push
push
sbb
mov
cmp
mov
lahf
and
lea
mov
pop
fcomp
jbe
rolb
xchg
lret
mov
test
repnz
loope
pusha
inc
shlb
push
cmc
rcrl
jg
sbb
mov
test
push
cmp
loop
jg
jbe
cmp
and
mov
test
testl
push
or
scas
and
mov
or
jge
jl
out
push
movl
aad
jp
jno
jo
inc
cs
fidivl
sbb
fnsave
adc
insb
cld
aam
adc
sbb
leave
sub
push
jg
bound
or
es
and
jp
add
stos
adc
xchg
std
push
mov
movsl
push
jbe
mov
fcompl
push
ror
push
and
push
jl
mull
push
or
out
dec
sahf
lcall
pop
jle
fcoml
jecxz
dec
jns
lock
add
pop
add
xor
movb
pop
cmc
push
xchg
scas
icebp
ja
pop
and
ljmp
jge
sarb
xchg
stos
test
lret
or
add
sub
les
cld
sbb
mov
pop
fs
addl
jge
data16
movsb
dec
addr16
sub
xchg
in
insl
mov
in
sub
test
mov
push
fs
hlt
or
mov
mov
add
mov
insl
ficoml
aad
xchg
pop
dec
lret
rolb
enter
fstpl
and
sbb
dec
imul
shrb
mov
sub
mov
loopne
inc
mov
xchg
xchg
enter
ljmp
decl
sbb
push
mov
mov
les
out
sbb
xchg
fcmovne
sarb
xchg
sbb
push
mov
and
in
inc
pop
lret
daa
or
pop
shll
stc
mov
xor
rorl
mov
fcmove
or
out
out
into
pop
pop
fisubrs
rclb
es
mov
inc
rcr
in
popa
adc
cmp
sarl
mov
and
mov
into
test
pop
repnz
add
push
mov
jae
insb
movsl
push
jp
mov
xor
outsl
mov
shlb
sbb
filds
insl
out
lahf
test
xor
xor
push
ret
push
out
and
adc
or
jo
adc
inc
sub
sbbb
lds
decl
mov
push
adc
fs
mov
aas
and
mov
lret
mov
loop
add
roll
jmp
sub
dec
roll
pop
inc
pop
push
lcall
ret
pop
push
jbe
dec
xchg
xchg
push
sub
sub
pop
xchg
rcrb
icebp
pop
inc
nop
xor
sbb
mov
les
popa
or
mov
push
rorl
ret
clc
sbb
mov
jo
inc
shlb
cmp
sub
or
fstpl
sti
pop
jle
pop
xlat
pop
out
xchg
jo
fidivrl
dec
and
jns
pop
pop
cmp
ss
arpl
ja
dec
data16
adc
xor
lds
or
pop
in
jbe
popa
nop
push
into
ljmp
data16
adc
mov
mov
sub
in
test
repnz
xchg
jbe
sbb
mov
stos
ret
xchg
lods
ffreep
mov
add
bound
mov
or
test
movhps
push
pop
push
jg
sar
arpl
jbe
cmp
push
popa
xchg
xchg
cmp
inc
add
push
fisubrs
cld
hlt
subl
pop
sbb
dec
add
sbb
mov
pop
push
jl
mov
mov
xchg
mov
shlb
adc
xor
or
stc
fstpl
fdivl
popw
sbb
repz
cs
mov
in
pop
cmc
push
loop
pop
iret
push
add
and
pop
aas
mov
jo
and
in
cltd
mov
int3
inc
pop
add
fstps
push
pop
mov
shlb
fwait
cs
inc
es
push
dec
and
sbb
mov
dec
leave
pushf
mov
repnz
inc
add
fidivrs
jg
pop
test
push
pop
inc
push
inc
add
icebp
fsubrs
mov
mov
je
xchg
adc
sbb
xchg
adc
cld
ret
and
dec
scas
add
push
icebp
into
jne
adc
sbb
jbe
pop
das
ljmp
icebp
push
into
xchg
inc
rorl
jp
mov
add
adc
dec
aad
ja
insl
imul
adc
add
sbb
lahf
rol
in
loopne
das
shlb
adc
adc
jb
jle,pn
jge
xor
add
ja
cli
and
in
jp
sbb
subl
push
lret
cld
add
enter
sbb
xchg
imul
inc
sbb
das
aas
xlat
xlat
pop
mov
dec
iret
xchg
ds
sbb
adcb
movsl
sub
and
shl
in
insb
xchg
sub
mov
jns
cltd
dec
loop
add
jbe
stos
lds
js
jne
mov
leave
fldl
push
aas
inc
sti
sbb
scas
and
mov
flds
sub
scas
pop
cld
adc
bound
dec
repz
icebp
pop
add
jbe
shl
test
and
xor
jp
sub
std
and
sbb
add
outsl
add
jnp
xchg
dec
cli
mov
mov
pusha
mov
pavgw
push
incb
arpl
dec
inc
mov
ret
fstpl
and
rol
pop
xchg
mov
fidivrl
pop
hlt
pop
inc
cmpsb
test
xchg
jg
stos
mov
and
stos
pop
test
imul
lret
and
sbb
sbb
xchg
test
pop
leave
add
mov
adc
lods
mov
ret
popa
shrl
mov
pusha
icebp
insl
mov
mov
sbb
scas
jno
sbbb
adc
or
jecxz
cld
sub
or
into
xchg
cld
sub
pop
pusha
mov
ud1
adc
xor
push
add
and
cld
fsub
add
or
movb
add
cld
push
or
add
xchg
jmp
icebp
pop
inc
add
das
ror
pop
push
loop
pop
mov
cwtl
jne
shll
sub
rcll
dec
jp
inc
add
adc
jae
lret
pop
lods
mov
ret
cmp
orb
cld
imul
rolb
loop
lea
mov
addr16
inc
js
leave
cmp
sbb
xor
in
adc
jne
and
or
repnz
dec
mov
jns
jg
mov
cmp
je
cmp
jge
mov
cmp
or
mov
idivb
leave
fidivs
out
jp
lods
sub
jle
cli
mov
and
scas
lods
push
icebp
mov
push
jle
or
jle
mov
push
sbbl
jmp
xchg
hlt
hlt
mov
inc
daa
xor
fdiv
aaa
push
in
xchg
orb
jmp
mov
xor
test
sbb
inc
jle
cmp
cltd
xchg
xor
cli
lods
and
scas
xor
loopne
dec
add
jae
adc
das
pop
cmp
std
sbb
in
jmp
xor
push
ret
leave
testb
imul
test
cltd
mov
and
mov
push
push
dec
bound
rclb
std
jge
cwtl
add
test
pop
sarl
jbe
addb
push
fadds
mov
cs
push
and
lcall
leave
cmp
dec
xlat
fimuls
mov
lret
jp
pop
jg
mov
adc
jns
xlat
and
push
pop
inc
adc
dec
jecxz
out
push
and
dec
aam
add
jg
pop
mov
mov
mov
or
mov
fmul
rcll
and
mov
out
cmpsb
cs
xor
xchg
xorb
push
nop
mov
dec
cmpl
aam
ds
xchg
jp
lret
jne
ljmp
add
dec
mov
inc
jb
mov
sbb
inc
xor
ds
out
ljmp
cmpsl
lods
xor
adcb
sbb
mov
test
adc
aad
cld
cmp
inc
lret
sbb
dec
sbb
or
push
mov
mov
jne
aam
imul
sbb
ljmp
pop
push
bnd
inc
push
push
loope
add
jnp
jge
bound
xor
cmp
sbb
dec
pop
lods
lock
jo
mov
jl
xorb
adc
out
cli
mov
mov
inc
xchg
dec
mov
insl
add
push
stos
stos
xor
add
xchg
test
mov
pop
inc
sbb
rolb
sub
pop
jne
sarl
adc
mov
inc
push
pop
pop
pop
sbb
leave
data16
adc
adc
movsb
rolb
sbb
sbb
int
xor
ret
pop
mov
and
jge
scas
add
push
dec
movsb
lods
dec
inc
ret
or
ret
and
push
mov
push
mov
jbe
xor
nop
shl
add
jne
jbe
std
enter
inc
inc
xor
xor
push
lret
dec
mov
xlat
xor
jbe
pop
jp
inc
inc
insb
js
adcb
insb
jbe
pop
mov
test
sub
iret
shl
outsb
rcr
test
sbb
add
adc
fwait
insb
pop
fnsave
lods
push
fs
or
test
pop
jle
loopne
push
ja
mov
mov
sub
xchg
es
jo
repz
xor
sahf
dec
sbb
clc
arpl
insb
cld
clc
fnstenv
and
push
lds
mov
jne,pn
pop
cld
enter
leave
dec
jo
shll
std
rclb
lods
addl
mov
fistl
jno
cli
mov
cwtl
xchg
ret
jne
inc
sbb
rolb
xchg
shll
sub
test
inc
mov
gs
or
in
xchg
fdivrs
jnp
jg
mov
and
cmpsb
stos
xlat
push
cltd
loop
adc
inc
xor
and
xor
int
popa
jle
mov
add
loop
add
adcl
es
test
mov
jo
rol
leave
adc
sahf
shll
mov
and
les
test
xchg
pop
jg
inc
adc
add
cli
dec
pop
adc
orl
out
pop
dec
cmp
cmpsl
add
je
stos
imul
mov
push
inc
aaa
ja
iret
jbe
jecxz
add
mov
or
jns
loop
cld
inc
pop
jno
dec
sub
pop
cmp
outsb
fdivrp
mov
aas
sub
repz
jl
inc
out
xchg
xlat
mov
daa
and
or
lcall
and
lcall
add
popa
clc
adc
lea
mov
adc
xchg
push
jecxz
xchg
add
stc
lods
movsl
inc
mov
sahf
adc
fsubrs
hlt
stc
mov
loope
ja
popa
fcomps
ljmp
xor
rcll
push
scas
test
out
lock
and
dec
ja
ret
scas
add
and
xchg
push
pop
mov
lahf
out
cld
mov
and
es
sbb
in
mov
lret
pop
xchg
xor
sub
add
pop
xchg
sti
pminsw
push
imul
sarl
mov
dec
les
or
andb
ret
sub
jg
xchg
lock
mov
and
iret
out
sub
xchg
jno
adc
xchg
movsl
push
ds
gs
push
loope
mov
pop
jle
sahf
sub
es
add
imul
shr
les
out
sarb
add
mov
repz
mov
rolb
fldcw
les
aam
cmp
pop
adc
sub
ret
push
gs
sub
fwait
adc
jecxz
imulb
cmp
aad
add
ja
fisubs
cmp
bound
inc
lret
xor
lret
in
sub
lds
stos
push
cld
hlt
pop
fadds
or
popa
rcll
push
push
std
fwait
and
jbe
adc
push
les
insb
sbbl
sbb
xor
sub
mov
lret
ds
or
or
add
pop
dec
fwait
jmp
mov
adcb
pop
not
lahf
push
imul
add
xchg
dec
cmovg
sbb
jmp
mov
pop
pop
lcall
mov
xchg
in
push
rcrb
pop
cltd
fsubs
or
push
xchg
sbb
in
dec
jbe
inc
mov
pop
push
jle
add
std
xchg
and
stos
jmp
cli
repz
jno
sbb
xchg
mov
jno
inc
or
adcl
rorl
in
cmpsl
ret
subl
incl
fcomps
popf
mov
ja
lret
test
sub
arpl
nop
repnz
lahf
pop
xchg
add
add
jge
gs
pop
jne
loop
pop
movsb
and
jge
jbe
pop
cmp
test
pusha
leave
imul
orb
mov
psrld
popf
adc
daa
cld
popf
test
ljmp
mov
jnp
jns
cld
stc
lds
sbb
add
mov
jmp
test
jnp
pop
in
xchg
push
and
or
sbb
dec
adc
mov
jne
dec
insb
jle
scas
mov
adc
push
push
dec
cmp
shl
fwait
lret
xchg
rcl
push
divl
pop
add
in
jo
jle
push
sti
jle
out
xchg
adc
pop
xor
pop
mov
loopne
sarb
or
sub
xor
andl
pop
sub
dec
pop
pop
sbb
push
mov
cmc
xchg
pop
and
aad
xchg
enter
lret
dec
jle
add
pop
pop
push
shl
xor
jns
cld
lret
mov
dec
jg
push
add
jle
sbb
mov
mov
xchg
bound
mov
cmp
jl
jmp
rcrl
mov
jne
sub
leave
sahf
and
test
insb
cmp
in
jl
mov
pushf
adc
lahf
andl
stc
cmp
stc
add
int
sub
jg
rorl
xchg
pop
adc
pop
int
ret
mov
mov
xor
call
repnz
mov
and
frstor
cmp
mov
sbb
cmp
aad
jge
mov
cmp
jbe
lock
cmp
fisubrs
dec
leave
push
sub
nop
mov
jbe
jg
push
mov
pop
mov
lods
push
cmp
pop
popa
pop
xor
xor
addr16
sbb
ror
fnsave
mov
xlat
or
mov
or
ds
bound
dec
pop
jp
sbb
mull
xchg
pop
dec
lcall
fisttpll
inc
cmp
sub
inc
cmc
xchg
xchg
xchg
pop
leave
or
rcl
fsts
dec
ss
inc
and
rcrb
add
push
ss
cli
xor
pushl
xor
cmp
or
orb
loop
addr16
jl
dec
add
neg
mov
cmpb
call
cs
mov
jg
pop
jbe
je
leave
or
sahf
mov
pop
les
fwait
cmp
and
or
and
push
jp
dec
pop
xchg
call
or
sarb
insb
cmp
mov
add
add
add
mov
es
out
or
and
xor
pusha
adc
les
imul
mov
and
push
test
in
int3
rorl
jle
sbbb
push
enter
xor
jo
xor
sbb
jg
dec
adcb
adc
or
enter
cmpsb
dec
aaa
sub
xor
insb
and
pop
fistps
xchg
dec
add
mov
std
mov
sbbb
lret
movsl
in
ljmp
jmp
and
movb
repnz
pop
pop
int
xchg
ss
adc
out
xor
adc
outsb
adc
cmp
cmp
push
cmp
out
push
ds
jns
lds
pop
shrl
bound
lret
sub
orl
ret
les
and
pop
rol
xchg
jb
and
out
leave
rolb
mov
popa
xchg
mov
fdivrs
fidivs
jg
lret
xor
dec
push
or
pop
jae
dec
jp
add
cmp
cmp
jns
or
or
xor
mov
sub
outsb
mov
jbe
lret
pop
in
test
xchg
dec
jg
xlat
mov
outsb
cmp
push
xlat
push
sbb
or
cmp
or
pushf
lock
into
fcmovb
je
xor
lret
ret
push
sbb
jns
xchg
jne
mov
cmc
stos
sar
and
lahf
daa
fs
les
pushf
shl
ja
pushf
movsb
mov
data16
xor
xchg
mov
jl
call
ljmp
aaa
sbb
xor
jecxz
aam
jne
dec
adc
adc
inc
aam
mov
and
add
popf
movsb
daa
cltd
xor
jnp
push
clc
add
mov
es
mov
cli
sbb
jge
xlat
lahf
push
push
mov
dec
mov
inc
jle
stos
add
push
pop
aam
xchg
adc
notl
inc
dec
dec
pop
and
add
daa
in
sbb
pop
sbb
pop
jle
xchg
push
push
push
adcb
repnz
jbe
punpckhdq
adc
cwtl
push
cmpsb
aam
arpl
aad
lret
lea
xchg
test
mov
cmp
mov
paddusw
cld
fidivl
popa
cmp
dec
xchg
add
fsubs
xlat
fcmovnu
push
stos
dec
fidivrl
add
cld
int3
jle
mov
fistl
cld
pop
and
out
pop
loope
sbb
outsl
sbb
xchg
mov
xchg
inc
jle
push
nop
fstps
lea
sbb
int
mov
lcall
lret
push
mov
and
jb
xchg
ss
cmp
pusha
dec
movsl
mov
cmp
and
stos
push
add
test
repz
xchg
testb
jle
jge
jne
add
cmp
nop
lret
cld
aad
jle
mov
pop
rcl
xor
pop
and
or
mov
inc
jle
jl
mov
jge
mov
dec
loope
add
cmpsl
and
push
adc
sbb
push
jp
and
rcll
adc
aas
pop
and
pop
add
lret
xchg
jmp
and
fadds
pop
xchg
pop
add
jp
push
adc
adc
sbb
add
sub
xor
int
stos
add
jmp
shll
pop
pop
into
test
jb
add
push
and
xchg
or
push
xchg
mov
mov
push
fwait
icebp
jne
cmpsl
popa
nop
and
xchg
xor
mov
pop
movsl
sbbb
stos
mov
pop
mov
add
in
out
sub
and
repnz
arpl
lret
mov
jp
push
mov
clc
xchg
add
add
xor
jbe
inc
cmp
shll
cmp
popa
in
aas
fiadds
cld
shlb
std
fdivs
js
mov
into
aas
ret
fildll
mov
push
adc
out
pop
push
fcmovbe
insl
stos
inc
roll
scas
unpckhps
lret
insb
gs
mov
jg
imul
and
cmp
lds
push
inc
jl
adc
mov
repnz
adc
iret
std
inc
xor
add
inc
add
andb
sub
ret
jne
mov
in
inc
and
sbb
fildl
dec
jle
push
jge
cmp
jne
filds
sub
stos
lods
sbb
hlt
mov
xchg
or
aad
cmp
jle
pop
cmp
push
mov
dec
out
pop
push
lret
sub
mov
jmp
mov
repz
std
imulb
push
adc
lcall
ljmp
imul
dec
add
jl
mov
sbb
jg
ja
mov
xchg
inc
das
jo
cmp
aas
pop
adc
xor
and
mov
mov
in
add
sub
mov
into
pop
mov
ds
scas
stc
stc
jp
mov
mov
ljmp
mov
in
xor
or
aad
xlat
jns
jne
js
push
inc
xchg
stos
add
or
clc
add
loop
lds
pusha
sbb
or
lds
lea
pop
xchg
ret
and
js
popl
xchg
imul
jge
js
push
mov
or
push
add
cli
dec
xor
xorl
add
add
pop
sub
mov
inc
xchg
mov
ja
stos
sarb
xor
movsb
cmp
mov
push
lret
loopne
add
lret
aam
in
xor
shl
lds
sub
dec
jns
cld
xchg
dec
dec
dec
push
loop
inc
leave
cltd
test
aam
div
or
sbb
les
jnp
mov
jb
xrelease
cmp
pop
xchg
mov
xchg
sub
pushf
dec
add
outsl
pop
pop
mov
inc
and
ja
inc
lcall
pop
outsb
icebp
adc
lahf
aas
pop
xor
push
and
mov
dec
xor
pusha
push
xor
lea
dec
mov
xchg
xor
jg
imul
popa
nop
icebp
rorb
inc
mov
push
xor
in
inc
decb
lock
pop
daa
shll
or
je
adc
push
outsl
mov
jns
push
call
ficoms
test
leave
pop
lock
inc
adc
jns
mov
leave
fadds
mov
dec
loope
decl
mov
sub
xchg
add
andb
sub
dec
rclb
pop
repz
or
lods
sar
iret
xchg
xorb
lea
sub
loop
rol
movsb
or
divl
cmc
fst
ja
rorb
mov
in
xchg
movsb
neg
mov
out
outsl
cmp
dec
and
mov
sub
xchg
or
jo
nop
unpckhps
pushw
pop
rol
cwtl
cmp
mov
adc
call
jmp
sub
leave
fidivrs
sbb
ss
mov
mov
dec
imul
jg
sbb
push
shrb
push
add
xchg
pop
jb
mov
jg
int3
lods
dec
lock
adc
in
xchg
scas
insb
or
mov
out
mul
pop
stc
lahf
ja
scas
outsb
pop
stos
add
in
pop
xchg
jp
push
add
ljmp
movsb
push
pop
repnz
popf
or
jge
or
push
movsl
and
sbb
push
faddl
rorb
lds
fs
add
aad
or
and
jecxz
cmp
fwait
in
adc
insb
dec
xchg
loopne
lods
nop
fmuls
mov
popa
push
fwait
int
jge
inc
gs
pop
test
and
add
std
iret
into
jb
sub
test
insl
movsl
mov
lret
sub
xor
arpl
cmp
sbb
xor
mov
lret
cwtl
push
xor
arpl
das
mov
mov
rcrb
xor
ds
xorb
repnz
cmp
adc
out
ficompl
push
cltd
inc
aaa
sub
or
and
mov
in
shlb
les
xlat
sbbb
jg
add
ret
pop
jne
insl
and
push
stos
test
or
mov
lahf
or
mov
imul
jge
cmp
adc
push
mov
mov
in
pop
xor
push
push
inc
int3
cmp
out
sti
gs
in
loop
outsb
mov
push
pusha
ljmp
cmp
adc
orb
pusha
fldenv
push
cmp
data16
mov
test
into
insb
popf
insl
inc
inc
stos
or
mov
or
lcall
jbe
in
mov
push
fnstcw
call
sti
adc
adc
cs
test
inc
add
push
xchg
repnz
ds
std
out
lds
xor
movsl
push
pop
xchg
daa
and
into
pop
inc
cmp
mov
or
fidivrl
or
adc
pushl
loop
xor
sbb
mov
cmp
sbb
add
push
testb
add
int3
outsl
test
jmp
add
scas
stc
adc
stc
mov
aas
mov
pop
inc
add
arpl
addr16
mov
jo
adc
jb
pop
sbb
jnp
cmp
test
daa
out
outsb
loope
push
or
cwtl
cmp
pop
fldz
cli
fwait
mov
out
or
lret
outsl
jmp
notb
adc
daa
jb
add
cmp
mov
add
sub
loop
dec
add
pop
push
les
xor
dec
cmp
dec
or
pop
cmc
mov
mov
or
xchg
test
adc
adc
gs
ret
push
in
ds
mov
mov
stc
xor
ss
rclb
lahf
mov
xor
sbbb
xor
adc
nop
xor
imul
mov
insl
shr
pop
inc
dec
addr16
je
int
loopne
cltd
adc
test
mov
out
lahf
xor
or
fwait
call
push
icebp
mov
mov
or
push
bndstx
or
add
fcoml
mov
dec
lock
adc
cs
push
inc
outsl
cli
ljmp
inc
lods
or
jno
sbb
js
sbb
sbb
dec
push
loope
sarl
adc
sub
dec
cltd
imul
xor
iret
sar
iret
add
out
inc
or
dec
in
stos
adc
mov
jecxz
mov
pushf
add
mov
divb
bound
mov
jbe
cmc
enter
mov
jge
lret
or
xchg
sbb
jge
adc
int3
dec
jle
jb
cld
mov
dec
push
loop
outsl
adc
pop
sbb
mov
push
or
repz
push
std
push
mov
or
mov
cmp
mov
adc
mov
sub
mov
push
divl
stc
cli
inc
mov
fnstsw
sbb
in
or
test
lret
jb
push
lods
sub
add
mov
stc
out
sub
inc
cmp
mov
xchg
mov
jle
test
in
mov
daa
jp
sbb
pusha
inc
std
xor
xchg
add
outsb
addl
xor
dec
lock
out
push
push
cmp
adc
jmp
jnp,pt
sbb
dec
aad
shrb
dec
cs
jge
push
or
setle
xor
xchg
jae
jns,pt
mov
addb
push
pop
ficomps
adc
pop
mov
pop
mov
outsb
add
negl
aas
jae
lds
mov
bound
dec
inc
movl
cmp
mov
adc
xchg
icebp
push
pop
and
in
out
add
add
cmpsl
add
mov
add
flds
xor
cmpsl
sbb
incb
mov
cmp
mov
loope
mov
pop
lock
icebp
cli
mov
sbb
push
lds
shll
xchg
subl
cmp
xchg
mov
dec
adc
rclb
push
les
add
push
insl
or
adc
and
or
sbb
mov
push
jne
push
pop
lods
sbb
pop
jp
mov
scas
js
sub
into
cmpsb
sahf
lods
repnz
xor
sahf
push
and
push
mov
sbb
clc
add
inc
cwtl
mov
popf
cli
popf
xchg
repz
xchg
sahf
xlat
or
lcall
xchg
aam
sbb
push
mov
lret
adc
mov
aas
pop
mov
mov
sti
inc
inc
and
cmp
js
cmp
jb
jl
sub
jns
lods
fdivl
int
or
push
es
frstor
mov
xchg
or
pop
push
ja
sbb
xlat
push
popf
jo
and
xlat
rcrb
xor
out
std
xlat
mov
cmp
aas
and
mov
xchg
xchg
push
imulb
add
aam
shl
sarb
outsl
es
paddd
mov
adc
popf
lock
fcompl
push
pop
cmpsb
setne
ret
mov
cmc
test
outsl
or
scas
mov
or
cmc
scas
add
pop
sbb
mov
scas
push
sbb
sbb
out
jno
pop
mov
dec
adc
je
add
movsl
pop
popa
jnp
shld
adc
fs
adc
out
xchg
call
imul
mov
adc
inc
lahf
add
hlt
iret
push
push
push
mov
sti
sti
ss
sahf
mov
shrl
movsb
outsb
fisttpll
clc
xlat
cmovne
add
in
lods
cli
je
mov
leave
in
movsl
mov
movsl
bound
jmp
push
pmovmskb
pop
pop
add
inc
add
test
xor
cs
or
jge
add
dec
mov
fidivrs
out
gs
ret
out
dec
pusha
in
or
aad
mov
mov
sub
sbbb
sbb
fldl
sub
cltd
sidtl
sbb
iret
dec
es
lret
mov
inc
pop
or
sbb
inc
fldl
mov
pushf
push
fcomi
pop
or
pop
sub
mov
out
add
sub
xlat
xor
push
lret
inc
pop
ret
push
dec
or
xor
inc
lds
jno
enter
sbb
push
xchg
fwait
in
cmp
sub
mov
dec
adc
icebp
daa
clc
mov
dec
inc
inc
sub
stos
cli
jo
push
popa
ljmp
icebp
je
fs
hlt
add
adc
out
dec
scas
jae
sub
xor
negl
and
or
fwait
cmp
jg
mov
lcall
pop
nop
cld
and
jp
cmp
fmul
jbe
in
cmp
dec
and
or
gs
popf
ds
shrl
xchg
loopne
xorl
repz
out
jnp
push
and
push
div
mov
xchg
sub
push
sbb
into
sub
pop
push
movsl
insl
popf
pop
ds
mov
mov
lahf
sbb
mov
or
mov
cmp
int3
pop
inc
lods
pop
into
xchg
int
fidivrs
scas
pop
inc
adc
in
jge
xchg
xor
mov
sbb
add
inc
mov
mov
enter
dec
add
xchg
dec
dec
jo
orb
es
push
push
pop
lahf
sarl
daa
mov
jbe
pop
cmp
movsl
inc
sub
cmp
mov
or
incl
out
daa
inc
mov
inc
push
push
andl
cmp
add
jl
aad
jb
lret
mov
mov
jmp
and
mov
adc
pushf
scas
stos
dec
stc
mov
inc
and
sub
push
pop
sbb
dec
lcall
pop
jnp
bound
mov
jl
int
test
dec
push
in
lods
ds
sub
push
fdivrl
test
mov
xchg
and
and
ja
in
cmpl
or
or
sbb
inc
lahf
hlt
imul
pop
dec
mov
inc
pop
cmp
lcall
cmp
xchg
movsb
or
jo
cmp
shrl
lret
xor
bound
mov
jnp
mov
and
sbbl
gs
ds
add
nop
lahf
and
pop
mov
inc
cld
jbe
adc
sub
xchg
dec
cld
hlt
jp
loop
cmp
leave
test
fldcw
insb
scas
popf
lea
xchg
pop
pusha
test
push
cltd
or
sti
cltd
movsl
mull
jmp
test
out
push
dec
cmp
cmp
sub
mov
sub
cltd
lcall
insb
leave
out
in
and
sbb
inc
pop
inc
add
dec
inc
out
cmpsb
xor
mov
ds
fisttpl
sbb
repz
pop
cmp
sbb
icebp
sarb
ret
mov
push
sarl
sbb
push
inc
sbb
pop
inc
mov
jnp
aaa
scas
dec
mov
jb
push
cmp
push
jl
dec
xor
or
js
lret
sbb
clc
xor
pop
repnz
gs
jns
in
in
push
ret
negb
outsb
dec
in
sbb
pop
mov
loop
mov
mov
popa
and
les
es
in
xchg
sub
dec
mov
mov
push
xor
stos
loop
aad
out
jnp
cmp
rcll
sbb
pop
je
aam
ficompl
mov
aas
orb
iret
les
cmp
negb
mov
iret
mov
outsb
bound
cs
dec
js
adc
mov
sbb
jbe
push
adc
cmp
lock
and
fcoml
in
sbb
add
mov
jbe
lock
pop
sbb
pop
scas
in
mov
call
pusha
pop
mov
int3
jl
push
addr16
jbe
xrelease
cmp
mov
cmp
mov
lods
pop
inc
lahf
or
mov
imul
pop
or
imul
pop
nop
data16
pop
inc
push
call
pop
xchg
nop
pop
out
xor
fmull
cmc
addr16
stos
add
jmp
xor
loope
xor
arpl
stos
test
icebp
int
jecxz
sbb
test
sbb
and
jnp
cli
scas
cs
dec
into
sub
fcomp
sub
fs
mov
cli
jnp
ret
jnp
jle
ja
push
pusha
loop
cwtl
sbb
fs
mov
add
data16
pop
xlat
ljmp
ret
aad
lea
mov
xor
ss
aas
movl
push
cmp
cmp
mov
leave
inc
test
cmp
sub
jbe
push
xor
xor
movsl
inc
xchg
push
nop
lods
mov
inc
push
loopne
mov
sbb
mov
mov
dec
sub
sbb
push
pop
pop
loopne
negb
mov
inc
insb
jmp
pop
stos
stos
dec
pop
and
push
ss
add
mov
push
adc
pop
dec
in
dec
cmp
sub
jecxz
xchg
pop
pop
pop
out
dec
out
push
mov
inc
popf
jecxz
mov
scas
divl
lahf
and
ja
sti
mov
aad
cmp
arpl
xchg
dec
jo
xor
int3
mov
mov
arpl
dec
test
loop
jns
sub
sbb
int3
pop
ljmp
ja
mov
rolb
jbe
inc
bound
notb
mov
dec
test
dec
push
jne
mulb
jne
cmp
aaa
push
inc
fldt
add
mov
sbbb
cwtl
adc
ljmp
pop
jnp
into
mov
jnp
sub
inc
mulb
adc
popa
push
mov
sbb
adc
es
mov
ljmp
mov
bound
xchg
popa
jbe
adc
sub
aad
cmpsb
add
jmp
cmp
mov
pushf
inc
jecxz
jne
lock
daa
out
adc
popa
sub
push
inc
sub
roll
insb
cld
xchg
movsl
inc
clc
mov
xor
add
adc
dec
xchg
and
jmp
xchg
push
sbb
fyl2x
xorl
insb
decl
fdivrl
xchg
dec
push
jne
testb
pop
add
xchg
cmp
daa
add
or
mov
push
cmc
add
sbb
mov
sub
ret
repz
loope
mov
jns
inc
mov
pop
arpl
cmp
and
bswap
inc
dec
popa
or
mov
jno
cmp
sub
fcomps
and
outsb
push
std
adc
sbb
mov
push
std
push
xchg
sbb
mov
aaa
std
pop
jns
cmc
dec
mov
pop
sti
js
cmc
cli
aaa
sbb
mov
pusha
pop
mov
jbe
mov
dec
cmp
xor
cmpsl
rorl
xchg
mov
inc
cmpl
push
inc
jns
cmc
push
aad
aaa
mov
cmc
pop
mov
jns
inc
mov
pop
popa
push
jns
cmc
adc
sbb
pop
adc
mov
mov
pushf
ds
sti
push
rorb
mov
dec
mov
bound
lret
pop
pop
loopne
cli
mov
adc
js
mov
add
sbb
mov
cld
and
cld
and
xchg
jmp
mov
cmp
pop
add
dec
mov
mov
xchg
mov
loopne
adc
ret
lret
in
cmp
jp
pop
das
inc
pop
nop
insl
mov
xchg
std
mov
dec
cmpsl
and
rcr
mov
mov
rclb
mov
lock
lds
test
push
pop
dec
rclb
shll
lcall
xchg
mov
ret
outsb
cmpsb
adc
das
jae
outsl
cmp
loope
sbb
cmc
dec
mov
rolb
das
jae
je
insl
xchg
jne
in
das
xchg
pop
and
aaa
pop
cmp
mov
mov
mul
and
shr
cmp
lea
jp,pn
imul
push
jns
lods
ss
xor
xor
sub
xchg
cmp
fs
dec
shl
mov
mov
les
sub
les
xchg
fdiv
lods
das
sbb
in
push
sbb
imul
adc
jns
mov
fcomps
adc
or
push
cmp
cmp
daa
push
mov
xor
std
xor
hlt
repnz
lock
das
mov
out
mov
fdiv
lods
das
sbb
in
push
adc
pushf
ja
xchg
xor
test
imul
adc
jns
mov
xlat
pop
cmp
inc
fwait
or
cmp
xor
leave
pop
xor
xor
add
mov
shl
lock
lret
push
and
pop
fldenv
xor
mov
aaa
leave
push
cmp
mov
mov
in
aaa
rcrb
adc
or
pop
mov
or
sub
jnp
mov
jmp
lods
cmp
aas
into
xchg
ret
outsl
pop
push
jl
xchg
push
leave
jno
inc
idivb
push
or
sub
jns
cmp
sbb
xor
ret
stc
movups
push
mov
jg
int
repnz
and
xchg
adc
leave
mov
push
loope
cmp
sbb
gs
orb
dec
or
outsb
mov
cmp
dec
iret
add
sbbl
mov
ss
push
pop
cld
clc
push
lcall
lods
out
test
dec
mov
loope
clc
jl
dec
shll
xor
sti
mov
sbb
push
sub
adc
sbb
ljmp
sbb
xlat
fiadds
and
scas
negl
cmp
in
daa
mov
push
push
outsb
lahf
cs
insb
and
pusha
sti
or
push
sub
dec
xor
add
pop
xor
icebp
mov
push
xchg
inc
jns
repnz
fnstsw
pop
pop
aad
popa
cmp
dec
adc
inc
notb
jecxz
pop
data16
mov
dec
shrl
je
pushf
ds
push
mov
ljmp
js
dec
mov
inc
mov
xchg
out
cmp
add
mov
addl
sbb
in
jbe
in
mov
in
mov
add
outsl
scas
and
mov
fbld
jo
dec
xor
sti
scas
cmp
pop
daa
mov
xchg
pop
loop
std
cmc
mov
cmp
sub
rclb
inc
or
cs
lods
add
cltd
inc
pusha
fwait
add
adc
cmp
clc
ljmp
xchg
and
xchg
cmp
inc
mov
inc
int
shl
dec
stc
pop
in
mov
sub
and
push
repz
and
out
cmp
cs
sbb
sbb
gs
and
cld
mov
fxch
addr16
aad
addb
mov
inc
push
inc
fimull
xchg
test
dec
loop
sarb
mov
add
pop
mov
in
inc
inc
loope
dec
test
xchg
or
sub
mov
dec
fcompl
ret
and
ror
scas
inc
fistpll
jno
decb
js
in
lea
std
adc
orl
push
lods
pop
leave
test
mov
fdivr
dec
cmc
mov
dec
xor
fs
je
out
inc
add
insl
rolb
ljmp
sbb
xor
daa
clc
push
adc
test
mov
sub
lcall
sub
lods
sahf
aad
cmp
fnsave
fldl
mov
nop
sbb
jg
and
add
out
mov
xchg
and
ss
and
out
sbb
push
mov
add
mov
js
cmp
in
cmpsl
dec
mov
loopne
stos
mov
pop
pop
movsb
jnp
xorl
pop
sbbb
xchg
jmp
xor
sub
mov
outsb
jb
mov
inc
push
mov
cmpl
lret
ds
or
rcl
aam
jecxz
or
cmp
int
stos
fcmovu
xor
xor
xchg
shl
mov
mov
std
inc
lds
or
pop
cmp
fnstenv
lcall
and
push
test
negl
test
out
push
add
fs
leave
xor
adc
popa
popl
test
stos
leave
mov
pop
add
loopne
add
stos
lcall
js
xchg
out
loopne
xor
jge
in
dec
iret
fs
or
pop
in
mov
repnz
arpl
into
dec
cmp
jle
bound
mov
loopne
dec
sbb
pop
xchg
shrb
dec
cmp
nop
ss
movsl
fidivrl
fcoml
adc
pop
adc
jne
jge
fnstcw
pop
dec
mov
mov
in
xor
pop
loop
cs
imul
es
cmp
roll
cmc
push
or
xchg
int
ja
or
adc
mov
cmpsb
inc
and
fstpl
or
out
cltd
in
dec
inc
mov
dec
and
pop
xchg
stc
push
sti
insb
inc
lds
popa
pop
mov
push
aaa
fldenv
jmp
shrb
mov
jmp
mov
sub
mov
imul
test
sub
shlb
jge
mov
rcl
and
push
sarl
fcmovu
fisubs
jp
std
pop
lret
mov
and
mov
movl
popa
jecxz
mov
mov
cld
loop
push
cli
lods
mov
aad
jo
leave
in
push
fistps
pop
xchg
xchg
sub
jo
pop
inc
jle
add
stc
data16
jge
mov
rcll
cmp
pop
mov
fldcw
cwtl
cs
addb
or
aad
popa
push
cltd
xor
jne
xchg
inc
inc
ret
in
jbe
jle
cmp
or
hlt
addr16
xor
scas
shr
mov
clc
enter
in
and
inc
xor
dec
pusha
faddl
notb
icebp
out
xor
dec
outsb
add
fidivs
sub
out
repz
push
cmp
sbb
jecxz
mov
clc
test
js
popf
mov
sub
fdivl
or
aas
xor
add
push
inc
std
mov
sub
jnp
pmaddwd
outsb
push
and
repnz
out
mov
mov
ja
adc
mov
sub
icebp
push
mov
xchg
clc
mov
inc
push
sbb
sub
fsubl
push
mov
icebp
sbb
lret
add
and
push
lret
and
inc
aam
jl
adc
mov
pop
pusha
xchg
pop
prefetch
or
cmp
sub
std
push
fwait
push
fwait
xchg
lret
pop
sbb
insb
andb
dec
mov
repz
in
xchg
xor
int
mov
in
xchg
out
ficompl
and
jae
mov
stc
mov
sti
jle
stos
or
lret
sbb
or
pop
cmp
inc
and
push
sahf
jo
mov
sti
sbb
mov
je
push
pop
inc
popf
js
scas
sbb
ss
adc
popa
je
inc
sub
call
and
mov
ljmp
cmp
add
mov
and
stos
insb
sbb
mov
ss
scas
pusha
push
adc
push
adc
xchg
mov
stos
andl
mov
fsubp
mov
cmp
xchg
das
push
add
sbb
out
pushf
jp
jmp
cs
jns
add
mov
cmp
inc
sub
push
cmp
cmp
push
addr16
sub
test
inc
stos
mov
xor
pusha
bound
test
pop
jle
dec
fcmovu
xor
push
cmp
cwtl
add
xorl
pop
xchg
rcll
and
shr
jo
cmp
push
sub
clc
sub
es
push
push
cmp
or
jnp
dec
lock
push
xor
outsb
test
pusha
xor
es
lods
loop
xchg
ds
pushl
inc
divl
jg
fs
mov
mov
lret
pop
inc
push
mov
ljmp
mov
push
jecxz
push
insl
jge
sbb
jnp
fisubs
addr16
cli
xchg
add
je
pop
sub
test
scas
pusha
dec
mov
cmp
sub
or
push
cmp
xchg
imul
ret
mov
cmpsl
xchg
xor
jle
stc
mov
ss
repz
ffreep
into
cltd
fsubrp
daa
adc
adc
dec
push
pop
data16
cmp
and
pop
rcl
xchg
sti
add
mov
mov
sub
aam
cmp
jnp
and
mov
dec
sbb
add
and
aad
push
cmovg
fcom
xchg
cmp
sbb
mov
cmp
clc
and
leave
int
push
jae
lods
mov
xchg
cwtl
xlat
dec
mov
pushf
lahf
mov
out
push
xor
loopne
cmpsl
insl
clc
push
or
int3
dec
nop
xor
icebp
mov
push
cld
lods
push
push
dec
imul
inc
fsubrs
and
aaa
in
inc
xchg
imul
lcall
push
mov
lods
push
mov
sbb
jb
add
mov
xchg
pop
xor
or
sbb
push
out
add
inc
pop
icebp
mov
add
sbb
sub
test
cltd
dec
sub
sbb
push
mov
cmc
repnz
iret
iret
push
fmul
pop
and
lods
repnz
inc
sub
das
jl
inc
push
jp
inc
psllq
pop
and
mov
cmc
icebp
cltd
and
arpl
sahf
and
jbe
jle
enter
sbb
les
sbb
add
cmpb
imul
fistpl
ffree
push
icebp
idiv
xchg
cmp
in
shlb
ss
mov
xor
inc
out
inc
mov
sarl
mov
out
and
and
inc
fsts
sbb
cmp
clc
test
rolb
mov
fs
mov
adc
insb
fcmovu
dec
jge
mov
sbb
pop
test
jnp
xchg
iret
iret
xor
hlt
mov
sbb
lret
mov
lods
aaa
fsubl
push
rcrb
test
std
or
dec
mov
test
movsb
iret
fwait
xchg
test
dec
icebp
pop
lds
ret
call
lea
mov
mov
test
mov
int
jecxz
mov
mov
es
cmp
push
movl
add
cmp
pop
mov
mov
xor
pop
ud0
sbb
mov
cmc
cmp
add
push
inc
inc
fisttpll
ss
lret
pushf
daa
bound
pop
orl
scas
pop
cmp
jns
scas
nop
cmp
leave
shrb
sbb
daa
jbe
xchg
loop
icebp
mov
sub
ja
insl
push
outsb
js
or
mov
dec
pushf
lea
sub
sub
test
test
je
loop
and
mov
std
clc
cmp
mov
call
sub
ror
xchg
insb
sbb
sbb
cmp
in
test
sbb
mov
addr16
cmc
mov
inc
outsb
aas
pop
shl
int3
push
jae
shll
mov
add
push
sub
pop
xchg
adc
loop
pop
js
jno
add
lods
xlat
daa
dec
cmpsl
cmpsb
push
mov
mov
inc
xchg
lcall
and
pop
lret
xor
lret
insb
ret
loope
fs
fstps
pop
jge
outsb
std
xor
sub
movb
mov
lahf
cmp
lods
push
xor
testb
xchg
cmp
xor
leave
mov
cld
cmp
jne
cmp
xchg
mov
test
sub
cwtl
stc
or
push
jl
testl
push
stc
mov
sub
lcall
inc
jbe
lock
cwtl
int3
ret
xor
mov
nop
inc
negl
cmp
pushl
or
and
mov
or
jne
xor
bound
sar
cmp
push
mov
divl
cmp
decl
pop
cmp
and
mov
sub
sahf
xor
test
jl
hlt
pop
in
dec
push
int3
jge
into
push
gs
mov
push
inc
mov
je
out
pusha
aad
push
dec
inc
mov
inc
jge
jg
sbb
mov
test
repz
call
mov
into
push
imul
push
js
out
fs
aad
jge
adcb
mov
test
jmp
add
jns
cld
and
lock
xchg
idivb
jmp
push
xorl
push
nop
inc
push
xor
cld
cli
sub
lcall
in
jecxz
jge
ret
out
cmp
testl
fidivl
jmp
xor
jb
or
mov
je
test
cmc
mov
xor
push
xor
jb
dec
and
inc
es
adc
cltd
or
sbb
cmpsb
pop
sbb
gs
cmp
dec
xor
stc
cmp
mov
divl
cmp
lcall
sub
mov
call
jne
arpl
incl
inc
pop
xchg
sbb
iret
jbe
push
jle
fisttpl
add
adc
pop
xor
loope
pop
es
sarb
je
inc
or
inc
jns
mov
shll
in
ja
adc
adc
jb
je
dec
pop
cwtl
and
adc
bound
fbld
xchg
fisubs
xor
sub
mov
lods
jbe
sub
aam
xchg
aam
xor
mov
mov
cmc
sub
inc
and
dec
ja
cs
imul
pop
iret
push
dec
loop
mov
pop
cmp
mov
mov
inc
ret
mov
jno
jb
imul
fdivrs
sbb
jne
and
xchg
pop
icebp
dec
loope
bound
data16
pusha
icebp
mov
sub
mov
test
mov
std
hlt
mov
jb
adc
mov
adc
mov
inc
js
pop
notb
les
add
xchg
mov
es
jbe,pt
pop
pop
fnclex
mov
mov
inc
or
out
outsb
test
pusha
fadds
fistps
dec
sarl
inc
mov
arpl
sbb
and
pop
push
push
imul
mov
test
push
loopne
sahf
adc
dec
mov
adc
add
dec
dec
cli
std
adc
test
inc
repnz
sub
int3
repnz
dec
ds
and
jne
jmp
test
ljmp
pusha
sub
jecxz
pop
test
lea
sbb
aad
pop
inc
sbb
xor
adc
adc
mov
push
inc
out
iret
mov
shlb
mov
and
dec
sbb
rcll
sub
adc
jbe
jo
repnz
lcall
into
arpl
imulb
inc
es
mov
or
loope
cmp
mov
daa
and
out
xchg
dec
clc
scas
pusha
sub
xor
mov
mov
xchg
call
loop
push
xor
loop
push
or
cmpsl
cmp
mov
pop
dec
inc
add
cmp
jae
xchg
sbb
cmc
mov
fwait
sbb
in
sbbl
clc
mov
cli
fistpl
bound
scas
cmpsb
mov
lds
jo
sbb
ja
lcall
sbb
cli
insl
loope
frstor
push
repz
adc
push
and
mov
inc
call
rolb
ja
daa
loope
jo
xor
mov
sub
jecxz
pop
dec
orl
jmp
mov
push
inc
jne
mov
popf
push
pop
fsts
ds
or
xor
or
insl
and
jbe
insl
outsl
pushf
mov
in
test
jbe
aad
jle
arpl
test
rcll
loopne
or
mov
and
push
push
xor
in
xchg
sahf
xor
pop
lahf
lods
jecxz
mov
push
mov
aad
push
push
cli
cltd
cmp
sub
mov
cli
push
cltd
xor
ficoms
inc
lret
ret
sbb
les
xchg
xor
loop
popa
dec
hlt
jne
add
ret
push
jnp
sbbl
arpl
lahf
dec
call
dec
sarb
fs
in
inc
pop
add
sbb
adc
call
push
sbb
nop
jmp
notl
mov
pop
int
xchg
and
test
movsl
xchg
cmp
sbb
jl
adc
mov
rol
and
outsb
and
or
data16
xor
stos
lods
lret
into
das
sbbb
out
push
mov
bound
arpl
les
inc
jae
xchg
imul
xchg
cwtl
inc
out
sbb
pop
pop
pop
and
mov
add
popa
add
ja
stc
das
andl
inc
sbb
lahf
mov
std
mov
inc
in
fwait
jp
cmp
or
jp
inc
dec
cmp
test
inc
repz
xchg
data16
lcall
cld
mov
cmp
mov
cmp
mov
inc
inc
mov
adc
pop
dec
stc
gs
lahf
push
shl
push
outsb
sbb
xchg
je
sub
lods
stc
aas
incb
cmp
inc
cmpl
cmc
pop
fisttpll
adc
fmuls
add
es
cmpsl
scas
es
outsb
push
mov
xlat
ds
jo
adc
sub
cmc
out
and
cli
mov
lret
pushf
pusha
clc
mov
jns
int3
call
imul
pop
dec
mov
outsb
push
mov
es
pop
cltd
xchg
push
adc
cmp
dec
cmpl
add
adc
aam
insl
ret
dec
into
movsb
iret
mov
adc
cmp
and
test
pushf
inc
mov
loop
push
stc
outsl
rorw
lock
cmp
ja
cld
cmp
jl
pop
pop
aas
outsb
cltd
out
mov
sub
pop
test
ljmp
and
pop
add
mov
push
mov
in
andl
andl
in
or
cltd
mov
or
adc
cmpl
insl
movsl
loopne
add
pop
pop
fwait
mov
mov
fnstenv
cld
push
ds
idiv
cmp
push
add
cmpsb
dec
push
in
cmp
aad
int
and
mov
push
lock
stc
adc
xor
pop
add
negl
popf
cli
aaa
pop
mov
add
adc
push
and
repz
mov
xor
pop
cltd
pusha
out
mov
fmuls
cmp
cs
jp
xor
test
and
mov
mov
aad
ficomps
and
dec
jge
push
sbb
sub
jno
cli
mov
imul
lahf
mov
shll
inc
xor
daa
das
das
push
dec
jo
xchg
jmp
pop
mov
js
jge
repz
mov
xor
out
inc
xchg
dec
shr
dec
or
cmp
sbb
mov
and
cmpl
aam
mov
jecxz
sub
in
pop
xor
dec
jo
cmpsb
test
out
jle
fnstsw
loope
sub
popl
pop
ss
cmp
je
repz
add
mov
fcmovb
pusha
stc
jo
cli
adc
mov
subb
mov
mov
fidivrl
iret
mov
ss
out
xchg
fistpll
repnz
xchg
add
cmpsb
jmp
shll
mov
add
cmp
jg
lods
test
pop
sub
daa
inc
subb
enter
fs
popa
outsl
cmp
sbb
push
mov
add
mov
inc
push
jge
les
fists
cmp
loop
ret
fnstsw
push
repnz
cmc
cltd
cli
mov
iret
mov
mov
lret
aas
fistpl
xchg
xchg
mov
out
dec
dec
jae
icebp
jnp
mulb
mov
cmp
adc
xor
sbb
clc
repnz
nop
xor
mov
ljmp
sbb
dec
mov
push
cmp
bound
jecxz
stos
sub
sub
enter
out
cld
mov
call
insl
sub
push
or
jp
inc
in
imul
mov
sbb
mov
test
xchg
inc
pop
mov
popa
pop
dec
loop
mov
and
xor
xchg
lcall
lods
enter
pushf
es
sub
sub
es
and
imulb
inc
es
popa
lret
xor
cli
push
dec
jno
cltd
daa
mov
test
sub
adc
xchg
loopne
in
popf
ds
mov
sub
cs
xchg
fwait
inc
push
mov
fists
push
add
cmpsl
insb
add
add
pushf
xchg
fmuls
pop
jmp
pop
div
xchg
xor
into
xchg
imul
mov
repz
sbb
cmp
jge
jmp
xchg
test
inc
hlt
and
pop
push
arpl
and
xchg
ret
jne
out
ret
mov
jnp
std
lret
xor
lds
xchg
push
mov
dec
scas
or
push
les
enter
or
mov
loopne
cmp
pop
inc
dec
push
dec
add
loopne
or
adcl
cwtl
add
cmp
ja
mov
test
daa
lods
loope
scas
or
lret
inc
rclb
ret
ja
sbb
xor
roll
add
jmp
push
mov
mov
adc
les
ljmp
jo
call
cmp
pop
es
sub
inc
lcall
jecxz
shll
sbb
inc
cmc
or
sbb
enter
jge
push
std
call
add
mov
xchg
mov
jb
aaa
pop
sbb
pop
pop
js
xchg
repz
jge
dec
fnstsw
lahf
mov
pusha
mov
notb
mov
xor
mov
push
jl
cli
std
leave
mov
inc
mov
jle
scas
mov
jnp
and
and
mov
jo
sti
xchg
rclb
sbb
ljmp
cmpsb
test
sti
xchg
popf
or
fwait
scas
loop
mov
and
xchg
mov
lahf
addl
xchg
inc
stc
jnp
and
ffree
mov
icebp
pop
sbb
jns
push
sub
repz
adc
roll
pop
in
bound
imul
mov
cmpb
dec
popa
insl
fsts
out
stc
jne
dec
dec
hlt
push
std
hlt
fldcw
add
mov
test
jge
mov
pop
push
fmuls
xchg
ret
jmp
push
aad
push
pop
loop
subb
fcomi
pop
and
js
es
in
add
add
mov
and
inc
in
dec
fidivrs
xchg
sbb
mov
mov
pop
sub
iret
pop
xchg
movsl
ficoml
add
mov
add
add
push
add
dec
std
rclb
ret
push
js
push
daa
shlb
pop
cs
js
or
sub
add
xchg
js
shll
lcall
mov
push
mov
sbb
jmp
mov
fiaddl
mov
mov
xchg
sub
mul
pusha
add
mov
push
aam
pop
icebp
shll
das
and
or
repnz
std
test
rolb
cmpsb
jmp
cld
or
mov
cmp
inc
cld
lods
inc
jnp
push
hlt
sub
cmp
and
repz
cmp
pop
enter
mov
add
into
vorps
popf
pop
icebp
mov
xor
into
dec
incb
scas
repz
test
leave
jge
aaa
jnp
push
pop
aad
cs
int3
mulb
add
cmpsl
push
aad
aas
arpl
ds
xor
imul
adc
loope
mov
pushf
stos
xchg
and
aad
ss
sbb
aas
pop
lret
stos
pop
outsb
loopne
sbb
nop
mov
add
cmp
sub
shll
lea
out
xor
gs
mov
cli
mov
aaa
cmpsl
insb
ljmp
sahf
cmpl
aam
je
sar
andl
sbb
shlb
fs
rorb
loop
sbb
xchg
cmp
fistpl
mov
into
fdiv
sbb
imul
adc
out
xchg
sysexit
xchg
lret
lock
push
test
xorb
scas
or
dec
iret
xor
adc
rcll
into
pop
mov
pop
imul
imul
pushf
enter
mov
pop
sub
cmp
ret
clc
add
leave
loopne
addr16
call
cmp
inc
adc
push
jns
push
pop
adc
andb
sbb
ret
inc
rcll
andb
jg
imul
cmp
and
loope
das
out
dec
insl
adc
scas
sbb
or
xor
dec
xchg
mov
adc
pop
jae
fnstenv
jg
jae
pop
iret
jno
cmp
fimuls
icebp
inc
ja
es
cmp
push
pusha
inc
stos
in
in
out
lret
mov
insl
pop
lds
push
js
rclb
jns
mov
outsl
adc
lods
jecxz
addr16
les
adc
iret
push
jg
loope
popa
add
cmp
jp
fsubs
cmp
and
push
repnz
push
aam
add
movsl
shlb
insb
and
das
mov
adc
fnstenv
push
pop
pop
test
loope
inc
inc
cmpsl
les
sbb
scas
fwait
addl
jns
jmp
xorl
xchg
lret
fimull
sbb
xchg
jae
inc
jbe
sbb
xchg
mov
hlt
mov
cvtpi2ps
loop
cmp
pushf
mov
add
and
sbb
out
in
ja
push
sub
int3
ss
jecxz
aaa
test
mov
push
ss
je
xchg
std
push
repnz
sub
pop
dec
ret
jns
cs
in
push
cld
aaa
stos
and
ja
popa
ret
jle
pop
jl
dec
xchg
push
pop
mov
popl
fsubs
sbb
cmp
pop
mov
push
jl
sub
sahf
hlt
sbb
push
and
fs
sti
xor
push
adc
fucom
jle
push
fnstsw
sti
sbb
push
jbe
add
mov
push
xchg
pop
and
loope
icebp
jp
mov
sbb
mov
in
mov
xchg
inc
xchg
lea
js
jbe
add
rcrl
loopne
into
into
lea
push
adc
push
push
addr16
rorl
dec
adc
movsb
cmpsb
fcomip
xor
push
add
jge
cltd
hlt
adc
popa
repz
sub
pop
sbb
cmc
rorb
adc
jo
sbb
push
xchg
stc
jle
loopne
repz
sub
not
outsb
mov
adcl
mov
decb
push
adc
push
xor
adc
xchg
rclb
cmp
push
adc
jne
dec
or
lods
mov
jo
ljmp
cmp
and
scas
aam
lahf
stos
mov
xchg
adcb
xchg
sahf
xchg
add
stc
ja,pt
push
or
outsb
int
dec
inc
pushl
inc
out
xchg
addr16
and
push
test
mul
jno
lea
jb
add
xor
hlt
je
jge
mov
addb
adc
in
ja
add
rcrl
lds
push
in
push
or
push
inc
shrl
sub
es
adc
push
or
xor
shlb
push
mov
aas
dec
xor
cmp
add
js
mov
sbb
mov
add
jno
fwait
int
mov
pop
mov
es
loopne
cs
rcrl
mov
sbb
add
shll
pinsrw
adc
les
push
cmp
cmpsb
push
lcall
loop
popa
cmp
add
ret
xchg
es
and
mov
jno
or
push
add
lret
add
stc
dec
mov
or
xor
jns
xor
sub
in
test
shl
jecxz
push
pop
cmp
push
add
outsl
xchg
aaa
repz
xchg
cmp
mov
inc
mov
jno
mov
fwait
cmp
stos
sahf
jnp
incl
xchg
mov
mov
ret
sar
xchg
popa
xchg
mov
lods
aam
add
mov
or
xor
sub
test
lahf
out
jl
mov
adc
xchg
push
mov
out
lods
xchg
mov
xchg
sub
fs
and
push
fs
pop
hlt
clc
into
das
je
mov
add
and
dec
int
cmp
fwait
cmc
mov
mov
xchg
es
ja
jne
jmp
int3
jmp
in
jle
inc
xchg
in
mov
cli
inc
or
fisttpll
fisubrs
out
jge
add
jg
sbb
jl
daa
pop
add
loop
cmp
leave
loope
pop
inc
neg
es
add
mov
int
pop
rcrl
add
popf
pop
cmp
fnstcw
ss
xor
stc
fdivrs
ss
lds
repz
sbb
add
or
mov
pop
outsl
xchg
clc
outsl
aaa
sub
sahf
cmp
push
jae
pop
aam
pop
lods
hlt
fidivrs
pushf
pop
xor
scas
xchg
repz
aas
mov
push
gs
inc
movsb
aaa
mov
sbb
je
sub
popl
inc
cmp
dec
leave
push
cmp
xchg
fst
aam
outsb
divl
enter
push
mov
fldenv
ljmp
xor
shrb
in
mov
hlt
es
ficompl
sbb
test
adc
or
fwait
adc
lock
mov
mov
pop
push
sub
push
mov
add
hlt
ds
mov
hlt
or
dec
sub
and
xchg
stos
rcll
or
or
adc
ret
mov
outsl
lds
xchg
imul
addr16
xchg
int
jns
in
je
mov
das
jle
mov
lock
cmp
clc
shrb
mov
dec
incb
gs
dec
adc
cli
movsl
lock
je
mov
xchg
dec
enter
mov
icebp
push
cmovno
aam
sub
and
pusha
pusha
jae
adc
repz
hlt
jecxz
lret
push
push
leave
inc
sub
or
jg
xchg
sti
shl
lahf
xchg
cs
or
adc
sub
mov
rorl
mov
or
mov
mov
fidivs
xchg
in
lret
sahf
outsl
jg
cmp
dec
or
lea
insb
int
lret
lahf
popf
fwait
cmc
mov
mov
mov
jnp
fucomp
int
fidivs
push
cmp
outsb
mov
jo
cmp
jno
mov
xor
add
xchg
repz
out
dec
shrb
xor
loop
mov
vpxor
and
psllw
jbe
mull
bnd
jno
mov
mov
dec
cmp
adc
mov
test
cmpsl
mov
outsl
data16
and
sbb
syscall
pop
shrb
fcoml
inc
inc
rol
ret
popf
dec
mov
iret
hlt
mov
mov
cltd
xor
xchg
mov
xchg
dec
or
dec
mov
outsb
xchg
push
leave
mov
incl
jg,pn
hlt
mov
jmp
rolb
dec
cwtl
xchg
and
xchg
dec
dec
fmull
icebp
dec
pop
or
daa
fisttpll
adc
or
scas
subl
inc
or
mov
pushf
pop
sub
dec
xor
mul
pslld
lret
daa
fstps
aaa
outsl
adc
outsb
add
mov
cs
paddsw
repz
insl
xor
movsl
gs
out
outsb
insl
jae
psrlw
jne
sbb
mov
or
