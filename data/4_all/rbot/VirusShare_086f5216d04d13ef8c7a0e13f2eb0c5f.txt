ret
mov
arpl
cld
pop
dec
pop
cltd
xchg
pop
iret
inc
paddb
fwait
stc
outsb
ljmp
cmpsl
fimuls
aaa
jge
into
test
pusha
dec
les
push
nop
inc
call
mov
out
jns
mov
gs
push
fidivs
fists
daa
stos
lods
jbe
mov
sub
insl
mov
lods
stos
pushf
shlb
or
push
and
add
adc
dec
mov
cmp
mov
xor
xchg
mov
xabort
aas
adc
insl
add
gs
and
adc
daa
xor
inc
and
inc
call
push
clc
inc
adc
mov
and
out
push
sub
mov
cmpsb
cli
sti
bound
lahf
callw
fsubrl
fstps
bound
addr16
fimuls
call
jno
pop
jo
mov
xor
loop
test
jbe
not
test
pop
xlat
test
pushf
jge,pt
push
cltd
mov
pop
mov
mov
add
xor
sub
arpl
iret
mov
cli
les
mov
rclb
sbbl
shrb
xorl
ds
les
mov
inc
push
pop
push
cli
fldt
negl
test
test
and
addr16
sti
dec
dec
mov
add
push
sbb
es
mov
and
jle
fs
sbb
adc
cwtl
mov
jg
pushf
adc
xchg
fstps
stc
push
and
jp
mov
xchg
xor
jo
mov
out
ss
in
sub
xchg
inc
ror
in
mov
sub
loop
push
out
lods
cmpsl
call
pop
fsubl
fxch
ret
aad
out
std
xchg
push
xchg
jge
ret
repnz
xchg
mov
paddb
inc
inc
push
fldl
je
mov
or
pop
out
inc
pop
add
xor
push
inc
add
sub
pop
orl
fildll
xchg
push
add
inc
mov
cmpsl
dec
mov
aad
cmp
xor
insb
xor
int3
lret
movsl
jg
pop
sub
mov
in
jg
stos
daa
popf
sub
ds
movsb
ss
leave
add
andl
test
sbb
fildl
stc
dec
shll
push
mov
mov
das
adc
lret
or
test
in
imul
sbb
inc
pop
cltd
xchg
repz
cs
cwtl
push
sbb
xchg
imul
leave
ja
sub
outsl
sbb
imul
sarl
add
imul
mov
and
mov
jmp
and
push
add
push
sbb
popa
sbb
push
inc
mov
jge
cmp
pushf
or
int
test
psubsb
outsb
pushf
scas
mov
jb
insl
add
sub
sti
jmp
lds
loop
pop
dec
popf
push
and
out
ret
mov
cli
ret
mov
push
repz
sbb
nop
bound
mov
and
popf
mov
dec
cmp
or
outsb
xchg
mov
adc
push
xor
fmuls
push
mov
stos
imul
jno
fdivs
adc
pop
out
clc
push
mov
sbb
shrb
push
and
xor
popf
mov
mov
aad
fs
push
cmp
movsb
adc
int3
xor
scas
popf
jbe
lods
std
mov
decl
lea
mov
adc
xor
mov
fisubrs
and
mov
gs
lret
jmp
loope
adc
mov
pop
pop
stos
mov
mov
aam
fldenv
shr
xor
jp
add
mov
cmpl
fs
sbb
test
mov
xchg
sbb
out
sub
xchg
sub
mov
push
mov
ljmp
out
pop
dec
aaa
adc
fadds
imul
or
addr16
push
inc
or
push
push
or
sbb
inc
xorb
scas
lods
and
push
mov
rol
cli
add
shll
out
call
pop
dec
dec
sbb
movsl
push
xchg
mov
rolb
add
cmp
inc
cld
xchg
aas
rcrl
jg
mov
and
inc
lea
xor
loope
scas
and
outsl
pusha
xchg
movsb
push
cmp
inc
test
mov
pop
or
in
fstpl
adc
push
push
dec
or
cmpsb
mov
test
sbb
pop
fisttpl
push
mov
movsl
or
inc
cli
call
sbb
adc
rorl
mov
sbb
adcl
xor
inc
sub
nop
call
cmp
pop
adc
cmovg
ficoms
xchg
dec
jp
xchg
ljmp
pop
pop
add
fisttpl
jmp
clc
push
jbe
mov
cmpsb
rorl
or
xchg
mov
out
ss
mov
out
adc
and
aad
popa
andb
jne
pandn
inc
ds
daa
xor
adc
rcll
jecxz
jne
test
js
cwtl
test
mov
pop
and
mov
mull
or
push
pop
and
jne
sahf
jno
jmp
dec
outsb
ret
shlb
adc
repz
movsl
aaa
mov
push
jae
test
pop
pop
push
push
push
push
test
pop
pop
pop
pop
cmc
stc
push
push
push
push
lea
push
push
push
push
push
inc
pop
cld
push
pop
or
push
push
and
pop
pop
push
push
and
pop
pop
cmc
push
pop
push
ror
pop
clc
jo
jno
push
xchg
pop
inc
dec
or
push
pop
cmp
inc
dec
push
pop
shl
call
stc
cmc
stc
mov
inc
inc
inc
inc
add
nop
ror
push
rol
pop
jle
ror
push
jp
push
add
pop
pop
jb
cmp
cmp
push
add
push
pop
pop
push
add
push
call
lahf
aam
xor
push
mov
jecxz
mov
int
sbb
pop
push
pop
cmp
jg
test
rol
push
push
push
add
pop
pop
cmc
push
add
push
pop
pop
or
sub
or
test
dec
inc
push
push
add
pop
pop
shl
nop
stc
clc
mov
or
push
jp
neg
neg
pop
stc
cmp
nop
sar
inc
dec
ror
cmc
push
pop
shr
or
jne
jmp
push
sub
pop
jl
rol
cmp
push
sub
pop
lea
push
add
pop
nop
loop
jecxz
dec
popf
xor
fwait
pop
loopne
dec
jg
inc
mov
jl
mov
call
cmp
inc
jl
push
push
add
pop
pop
nop
ja
clc
push
pushl
xor
pop
pop
or
push
xchg
pop
push
pop
xchg
pop
sub
push
push
shl
pop
pop
jmp
adc
loop
ljmp
push
sub
movsb
cli
pop
stc
xor
mov
add
cs
jb
into
xchg
jmp
nop
stc
push
call
rcll
add
jl
pop
jl
and
test
ficoml
add
dec
jne
jge
push
mov
pop
cld
test
jne
and
jle
xor
cmc
loop
jecxz
adc
nop
xchg
rorl
aad
mov
add
adc
int
adc
push
pop
mov
js
cwtl
dec
es
dec
addr16
ja
loopne
cli
pop
fwait
mov
mov
dec
push
jbe
pop
jecxz
cmpsl
je
inc
rolb
jmp
push
cmp
push
jmp
fdivrl
pushf
pop
insl
cmpb
cmpsl
push
dec
jl
outsl
scas
hlt
jo
mov
add
test
and
or
push
jb
or
pop
push
push
rol
pop
pop
and
or
cmc
sub
je
shr
or
test
movl
pop
push
enter
enter
xchg
push
iret
jnp
out
sbb
aaa
sub
cs
sar
push
sbb
into
ret
in
mov
ja,pt
inc
sub
xor
lret
adc
pop
mov
adc
fs
or
mov
lcall
pop
je
xor
add
inc
paddusw
cwtl
adc
inc
jae
imul
sbb
mov
clc
imul
xor
adc
lea
xor
jnp
inc
adcl
jo
mov
stos
sbb
in
imul
fmulp
mov
popa
inc
add
sub
mov
cmc
out
ret
sahf
mov
repnz
fcmovbe
insl
xlat
sub
jp
adc
cmc
mov
jle
mov
sbb
shr
mov
and
and
push
sub
pop
jbe
mov
loop
ljmp
mov
sub
iret
rcl
pusha
xchg
fcoms
cmp
xchg
fstpt
mov
sbb
shlb
int
adc
std
pop
dec
jne
dec
fcmovnu
loopne
and
pop
lock
rcrl
xchg
bound
push
mov
mov
xchg
cltd
xor
cmp
out
adc
sub
pop
jae
pop
mov
sarb
pop
insb
cmpl
mov
fs
mov
loope
or
adc
jnp
out
pop
sbb
xor
mov
pop
sub
or
loope
jmp
dec
and
cmpsb
loopne
pop
inc
mov
pop
xchg
push
arpl
dec
xchg
add
push
test
sbb
xor
call
mov
fidivrs
cwtl
fildl
and
shl
mov
sbb
fwait
add
iret
sar
sub
pusha
sbb
push
decl
nop
push
inc
cmp
das
jg
bound
das
or
mov
cmpsb
adc
lcall
scas
xor
lcall
popf
jecxz
fadds
sbb
lcall
andb
leave
xchg
sub
adc
sub
dec
cmp
mov
or
fucomi
cmp
fisttps
lods
push
popw
push
fnstsw
xchg
xchg
mov
inc
jno
cmpsl
cmc
push
mov
mov
insl
xor
std
add
les
outsb
cli
jle
inc
fwait
add
fimuls
mov
jo
mov
xorl
jp
movsl
xor
sbb
dec
sbb
mov
cmpsl
popf
xchg
or
cmc
sar
lods
enter
inc
rorl
fistps
dec
dec
jns
sbb
aam
xor
ss
popa
popa
mov
xor
jnp
sbb
adc
ficoms
test
fldcw
mov
dec
jns
jns
fcompl
out
clc
pop
dec
xor
add
test
mov
call
out
fsts
dec
cmp
dec
and
adc
bound
loopne
movsb
push
pop
cmp
icebp
dec
jle
pusha
push
pop
in
arpl
loop
cmp
mov
mov
clc
mov
dec
fstpl
lea
das
push
mov
les
mov
mov
jle
pushf
stos
or
mov
test
dec
fbstp
add
sbb
pop
pop
mov
cmpsl
iret
movsl
cmc
pop
mov
mov
mov
xchg
pop
pop
movsl
mov
adc
arpl
pop
mov
mov
push
int
inc
orl
sbb
rcr
ja
lahf
call
mov
lods
xor
mov
fmulp
xor
mov
das
movsb
int
pop
dec
divb
cmpsl
movsl
shl
fwait
lock
mov
cwtl
int3
mov
les
hlt
repnz
subl
fucom
testl
sarl
xor
out
in
insb
idivl
sbb
add
out
insl
dec
ret
pop
and
pop
push
or
aaa
bnd
cmp
pushf
in
loop
lds
adcl
xchg
push
push
xchg
jno
and
push
pop
sti
inc
cmpsb
data16
js
cli
mov
out
mov
xchg
in
cmp
mov
orl
xchg
out
and
imul
mov
fistl
lods
inc
in
adc
mov
mov
stc
pop
xchg
daa
xor
fwait
ja
add
add
sarb
gs
jne
mov
xor
push
js
out
cmc
in
outsl
and
test
cwtl
gs
inc
loop
pushf
or
outsl
and
dec
jmp
push
sti
jnp
and
stos
inc
fidivrs
mov
mov
jle
and
arpl
sbb
jmp
scas
lods
xchg
ret
xchg
lods
pop
ja
int
out
mov
fstpt
push
popf
daa
lods
xchg
jbe
jno
or
sub
push
cld
ja
sub
in
lock
lret
pop
fnstenv
popf
add
gs
sbb
dec
inc
pop
add
movnti
pop
lret
out
popa
jmp
push
test
mov
pop
daa
xchg
sbb
xor
int3
mov
mov
ja
mov
add
arpl
fadds
test
xor
cwtl
outsb
jle
xor
shrl
or
jae
mov
mov
adc
dec
cld
lock
xchg
sbb
icebp
mov
int3
lea
mov
mov
fldenv
pop
mov
cltd
xor
pop
loop
orb
mov
sti
dec
sub
stos
pop
shlb
into
lahf
loopne
orl
inc
cwtl
into
pop
sub
jne
mov
pop
inc
mov
cmp
add
addr16
mov
lods
pop
cmc
or
int
int
add
sub
idiv
and
fcoml
bound
mov
loop
dec
in
pop
ss
xchg
pushl
xchg
mov
ss
add
insl
repz
inc
lock
insl
ret
repz
inc
pop
pop
mov
push
adc
aad
push
add
cmp
test
int
cmpsb
aaa
add
jge
in
stos
jo
lret
jno
pop
insb
je
add
or
or
jo
cmp
mov
loop
adc
popa
pop
test
sbb
mov
push
js
stos
add
gs
inc
mov
pushf
jo
inc
lods
cltd
out
call
stc
mov
daa
inc
pop
imul
cmpsl
cmp
mov
mov
mov
movsl
bound
ss
addl
adc
or
mov
ss
pop
fwait
or
mov
cs
std
pop
sarb
jmp
jns
pop
xor
scas
outsb
in
scas
int3
cmp
pop
sbb
jbe
clc
dec
sbbl
dec
dec
mov
mov
and
lcall
sbb
xchg
mov
inc
rcll
add
push
inc
and
push
clc
popa
adc
push
arpl
xor
jne
in
sar
repnz
cmc
cmovns
sbb
jns
ret
loop
test
push
inc
ja
ljmp
repz
pop
push
ds
push
fildl
pop
jp
pop
xchg
ds
lds
inc
hlt
cmp
outsb
ja
or
in
fmuls
pop
enter
fnstcw
push
std
pushf
negl
mov
push
into
out
xor
pop
mov
andl
incb
inc
add
int3
inc
test
rcrl
push
add
cmp
mov
inc
dec
sarb
add
sub
adc
arpl
add
cltd
lahf
loop
dec
out
cmp
scas
xor
aam
rcr
test
add
and
call
xor
rcrl
mov
mov
into
test
ja,pn
push
sti
ret
add
ja
pop
add
sbb
sub
push
pop
mov
add
or
aad
data16
test
xchg
xchg
jb
xor
xchg
sub
xchg
movl
jle
in
jo
jle
rolb
movsl
mov
dec
pop
addl
cmpsb
jmp
int
int3
cmpsl
es
outsb
in
inc
pop
setg
or
mov
cmp
adc
cltd
jecxz
jp
rcl
jne
dec
inc
into
xor
sub
js
add
fcomps
jnp
sub
xchg
ret
shl
and
push
lret
mov
push
cmp
dec
notl
imulb
fmull
out
cli
ret
jp
xor
loopne
xor
sub
sub
cmpsb
adc
das
mov
or
adc
ret
cmp
pop
out
jnp
imul
in
cli
jle
imul
mov
pop
jmp
insl
xchg
insl
sbb
push
mov
add
int
jg
inc
pop
cli
js
xor
pop
jno
stc
push
dec
dec
cltd
push
push
dec
sbb
ret
rcrb
xchg
test
mov
lock
mov
xor
xor
popf
scas
das
inc
sub
dec
xor
add
add
clc
pop
mov
jp
jno
pop
mov
insl
mov
pusha
lahf
loope
lcall
repz
adc
push
insl
lds
jnp
push
or
mov
sarb
pop
outsl
mov
mov
adcl
imul
sbb
jo
ficoms
mov
jo
lea
xor
test
push
jp
push
push
or
and
mov
dec
iret
outsl
nop
lock
or
ljmp
cwtl
push
les
data16
inc
add
pop
fcomi
jo
sub
mov
or
adc
jno
dec
fs
push
enter
xor
notl
fsubrs
mov
insb
lock
pop
lcall
xchg
jge
roll
fildll
lds
movsb
testb
mov
mov
lods
jle
mov
mov
xchg
pop
hlt
or
test
dec
cmp
cmpsb
sub
data16
and
cmc
int3
jbe
adc
lods
mov
cmp
pop
jne
ss
stc
dec
cltd
xor
hlt
orb
dec
out
xchg
xor
xlat
add
call
and
push
cmpl
pop
outsl
loope
mov
in
ljmp
pop
aam
mov
int
fbld
sarb
in
push
mov
add
cmp
push
mov
jp
popa
ret
adc
mov
sub
sti
pusha
scas
and
dec
adc
jnp
dec
lea
in
lcall
mov
int3
sbb
ss
pop
lock
push
xor
dec
mov
shr
and
jp
and
addb
data16
lods
jl
lcall
mov
push
cld
dec
mov
cltd
sub
rcl
jae
xor
bound
or
sbb
insb
pop
pop
mov
andl
fs
cwtl
mov
and
jno
adc
sub
es
pop
cli
ret
push
or
mov
aam
jne
ret
jns
call
push
jp
test
popa
jmp
pusha
pop
add
dec
mov
xor
adc
and
enter
out
xchg
push
jbe
sub
call
je
push
xchg
jecxz
cmp
dec
cmpsb
cmp
jnp
and
je
orb
imul
sbb
aaa
lahf
push
outsl
nop
push
test
mov
stc
pop
filds
add
xor
in
and
popa
adc
xchg
add
jb
sbb
or
inc
pop
fldt
jae,pn
scas
mov
fisubl
push
cmp
mov
or
loopne
fnstenv
lea
repnz
stos
jo
dec
out
imul
dec
nop
jb
fbld
adc
pop
or
idivb
and
lahf
int
scas
ja
jb
sub
or
test
mov
fcoms
mov
popf
adc
xchg
dec
fildl
pop
cmp
push
mov
adc
add
jge
daa
xchg
or
pop
jge
push
inc
in
fldl
loopne
mov
test
xor
jno
dec
push
ljmp
cli
repz
xchg
xchg
xor
jl,pt
lahf
sbb
pusha
pop
lods
push
loope
aad
inc
aaa
scas
cmp
sbb
mov
jae
test
aaa
adc
pop
or
or
rcrl
push
std
lcall
adc
push
call
and
adc
xchg
cmpsl
cs
lret
mov
jo
push
push
mov
mov
iret
jns
pop
inc
jl
mov
jp
repnz
and
popa
push
js
cs
ficoml
clc
std
movsb
aad
movsl
mov
aad
test
adc
mov
adc
je
les
nop
push
pop
fdiv
xor
into
pop
lods
xchg
sbb
das
cmp
xchg
inc
or
fldenv
cld
adc
inc
inc
or
xor
xchg
lret
pop
sbb
sub
push
push
jl
dec
mov
test
vmread
jno
clc
sti
pop
dec
imul
mulb
pop
mov
xchg
mov
xchg
jbe
lcall
ret
or
rorl
cwtl
dec
jg
xchg
and
cltd
add
xor
daa
addr16
movsl
js
repnz
xor
mov
mov
sub
mov
outsl
inc
cltd
ret
repz
cwtl
outsb
mov
sbb
shll
pop
clc
imul
test
add
sub
sbb
push
loop
push
jecxz
dec
push
xor
enter
aas
ja
push
pop
scas
aas
and
cmc
aad
push
cmc
jo
int
es
push
sbb
cmpsb
cmp
cltd
xor
out
ljmp
xlat
jbe
xchg
repz
ss
mov
lds
mov
das
mov
or
sbb
mov
and
sub
fisubl
push
outsb
scas
and
sub
or
shlb
mov
aad
add
mov
xchg
push
mov
stos
pop
inc
lock
xchg
jg
jmp
or
xchg
cmp
push
fisubl
incw
mov
cmp
mov
shll
cmp
lea
ret
or
sub
sub
push
gs
xchg
dec
mov
pop
or
pusha
daa
lret
jmp
lret
sbb
sarl
jl
ret
mov
cltd
and
xchg
enter
cmp
movsl
and
imul
mov
mov
popa
jg
push
test
lret
fdivr
jne
test
or
popf
dec
mov
mov
jle
mov
sbbb
sub
repnz
std
mov
xchg
mov
mov
or
test
les
pop
sub
imul
pop
mov
xor
adc
mov
out
nop
mov
aam
out
xor
xchg
sub
mov
movsb
mov
lcall
scas
or
dec
cmp
mov
rol
es
cmpsl
dec
or
mov
xor
lret
pop
sbb
jae
jne
sub
pop
add
jp
insb
test
jp
shll
fsubr
ficoms
decl
scas
ficompl
fs
rcrl
fsts
mov
sub
insl
adc
into
jp
stc
cmc
xchg
call
dec
call
roll
lahf
jmp
lret
call
mov
movsl
dec
xchg
sbb
sub
add
cmp
xchg
push
mov
sahf
es
movsl
fnsave
lcall
out
aaa
sahf
pop
lock
jmp
add
in
pop
roll
mov
lea
idivb
mov
stos
jmp
sbb
hlt
cmpsl
inc
lea
push
mov
dec
and
xlat
sub
out
sub
jb
stos
sbb
popf
out
iret
aam
pextrw
mov
stos
sbb
icebp
pop
les
xor
dec
jmp
inc
repnz
addr16
aad
adc
test
ss
cltd
into
add
mov
or
testb
inc
fnsave
mov
scas
pusha
decl
xchg
sarb
mov
add
scas
adc
mov
xchg
hlt
jnp
pop
daa
xor
stos
popf
clc
aas
aas
gs
pop
stos
sbb
adc
in
mov
adc
sub
rorb
in
jb
fiadds
mov
out
and
lret
ljmp
xchg
fmulp
in
es
pop
inc
bound
cli
cmp
in
dec
xchg
enter
cld
pushf
aam
sub
cmp
les
lcall
mov
fiaddl
out
sbb
jg
enter
mov
mov
je
pushf
rcrb
enter
push
inc
xor
adc
mov
clc
ljmp
mov
adc
mov
scas
sub
fbld
ret
jecxz
mov
sbb
xchg
xor
inc
mov
jbe
sub
add
mov
gs
mov
sub
out
mov
aaa
jg
sbb
jge
fldcw
ficompl
inc
int
addr16
mov
push
xchg
ret
cmp
xchg
push
cltd
mov
xlat
xorb
ss
xor
idivl
push
push
mov
jecxz
push
xchg
lock
lcall
ret
cs
jge
mov
dec
or
pop
pop
mov
dec
mov
push
push
and
mov
or
lock
bnd
shrl
dec
mov
fstps
mov
fldenv
xchg
sub
dec
add
imul
jbe
or
shr
or
imul
inc
out
jne
dec
popf
inc
aam
scas
lcall
imul
inc
mov
in
dec
mov
shrb
pop
mov
pop
mov
call
jmp
pop
jg
and
mov
ss
dec
aaa
xor
mov
sbb
testl
and
inc
and
popf
xchg
xor
mov
dec
mov
and
ljmp
cltd
xchg
lret
inc
pop
mov
ret
jmp
xchg
mov
cmp
or
pop
pop
insb
jp
in
or
push
ja
and
test
push
stos
mov
shrb
mov
sbb
adc
inc
or
int3
sbb
jns
ljmp
pop
lret
pop
loopne
add
loop
fisubl
aaa
jmp
aam
sbbb
or
xchg
hlt
mov
stos
shr
in
push
adc
fs
sub
mov
mov
fsubr
mov
xchg
dec
cs
cmp
popf
dec
lock
out
dec
jmp
call
test
dec
dec
dec
adc
imul
cltd
mov
xchg
xor
pop
or
mov
sarl
mov
lret
stc
repz
dec
jno
sbb
mov
hlt
cmc
adc
pop
cmp
pop
pop
pusha
imul
aaa
ret
push
xor
fcmovb
mov
pusha
cmpsl
stc
jns
fildll
inc
push
push
lea
mov
mov
fstp
dec
cmpl
js
fucomp
out
loopne
add
mov
les
or
insl
jmp
aas
jb
jmp
gs
test
mov
inc
adc
fwait
mov
scas
mov
jg
push
push
pushf
cwtl
sbb
sahf
xchg
sbb
cmp
arpl
leave
cmpl
lea
cmpsl
pop
inc
mov
adc
popa
sbb
movsl
sub
dec
push
mov
test
sub
ja
cli
sbb
mov
jb
jp
fistpl
xlat
jecxz
mov
gs
sub
or
lcall
dec
and
xchg
xor
pop
pop
or
adcl
dec
jmp
lea
mov
dec
mov
mov
icebp
sub
adc
int3
ret
cmp
popa
inc
test
mov
add
aaa
mov
dec
lret
cmp
pop
in
and
cmp
push
add
leave
out
or
ffree
and
iret
movsb
xchg
cmp
jnp,pt
cs
xchg
push
cli
adc
test
xchg
cmp
loope
pop
mov
in
aas
add
loope
push
pop
pusha
in
scas
adc
mov
dec
xor
outsl
out
cld
xor
pop
loope
fisubs
cs
cli
aad
inc
bound
mov
not
fcompl
mov
sti
xor
pusha
in
push
pushl
pop
mov
or
inc
jecxz
stc
repnz
mov
adc
add
ds
mov
sbb
xor
rcrl
jp
push
lods
lock
fmulp
sbb
mov
push
mov
cmc
dec
idivb
cmp
mov
mov
dec
mov
jmp
mov
shrb
dec
and
fists
pop
aam
out
sbb
push
sbb
add
stos
addr16
xchg
inc
mov
dec
or
push
jnp
jbe
sub
sti
dec
xor
std
jecxz
call
mov
xlat
punpckldq
or
outsl
mov
push
dec
repz
inc
fisubs
test
add
stos
rcl
xor
scas
xor
decb
js
call
mov
or
mov
push
and
jns
xchg
cmp
fildll
hlt
std
push
icebp
mov
and
jl
pop
les
je
lcall
mov
pop
push
mov
loop
and
shlb
and
xchg
mov
popa
add
mov
or
cli
adc
mov
push
xor
ss
mov
inc
dec
dec
hlt
movsb
or
xor
sbb
je
push
aas
and
sbb
iret
movl
sti
inc
jae
popf
lcall
jp
dec
rcl
mov
adc
shlb
mov
insl
out
xlat
std
mov
cltd
test
loope
adc
pusha
jb
jnp
mov
jl
jo
loope
cmp
ret
cmp
cwtl
jecxz
mov
mov
pop
mov
jp
dec
movsb
out
cmp
jmp
icebp
mov
mov
mov
jp
or
test
insb
incl
and
dec
stc
jns
sbb
adc
mov
pop
sub
lret
das
xor
loop
xor
cmp
jae
aam
iret
xchg
inc
adc
insl
push
ret
scas
jmp
aad
rolb
and
enter
es
jnp
addb
mov
mov
dec
mov
or
push
pop
lock
fwait
push
push
add
clc
and
and
stc
adc
cmc
dec
inc
imul
stos
fistps
or
out
fwait
stos
sub
adc
adc
sub
cmp
pop
movsl
add
fstps
xor
arpl
jne
push
iret
sub
lea
inc
jp
cli
mov
mov
adc
movsl
or
inc
jp
mov
insl
sbb
push
add
sub
filds
ss
push
inc
xchg
es
push
in
fldt
push
push
pop
or
imul
pushl
in
jns
cmp
shlb
or
xchg
xor
repz
xor
dec
inc
cli
popf
mov
sub
mov
or
or
jl
push
and
jnp
adc
jo
xor
mov
in
mov
mov
jecxz
jno
in
in
cmpsb
leave
fwait
iret
jl
jne
xor
ss
jmp
inc
int
dec
mov
push
push
jns
push
jne
pop
std
rcll
int3
pop
outsb
out
mov
mov
sbb
popf
mov
cmp
jnp
rcr
imull
pop
pop
rorb
xchg
sbb
faddl
jge
push
or
xor
lcall
test
nop
mov
pop
mov
add
adc
sbb
outsl
insb
xchg
loopne
cmp
push
nop
fnstenv
xlat
cli
adc
pop
shl
lds
xlat
xchg
fmull
or
in
jg
adc
add
stos
sub
ficoml
repz
dec
and
dec
sub
imul
out
dec
jecxz
sbb
loope
nop
jo
outsb
mov
dec
push
adc
adc
test
outsb
jl
pop
push
fisttps
popa
cmp
into
sub
and
in
hlt
mov
out
lock
cmp
ds
inc
jae
addr16
xor
movsb
mov
gs
inc
lods
cmp
iret
ret
movsb
jb
dec
lcall
test
jo
ret
jo
jno
mov
out
mov
mov
mov
repnz
push
add
rorb
push
adc
lcall
cltd
movsb
pop
push
jae
or
and
mov
imul
and
pop
cmpsl
pop
sub
mov
jnp
mov
mov
popf
daa
xchg
movsb
push
test
test
push
cmp
add
jne
lds
mov
repz
xchg
jge
insb
pop
jg
sar
pop
mov
rolb
sub
pop
push
sbb
dec
and
lods
pusha
dec
dec
mov
pusha
xlat
leave
mov
jnp
hlt
mov
enter
insl
or
dec
test
in
and
sbb
mov
mov
pop
stc
pop
xor
mov
outsl
call
daa
inc
jae
add
mov
sbb
adc
and
mov
sbb
mov
icebp
push
push
std
hlt
jmp
jp
push
mov
js
or
orb
xor
or
movsl
jl
call
jecxz
insl
cli
mov
jge
bnd
mov
scas
lret
jp
jae
hlt
mov
and
mov
sbb
xchg
out
imul
int3
xchg
xchg
cwtl
test
add
jg
push
sbb
adc
aam
dec
push
mov
out
dec
and
cmpsb
in
lods
insb
xor
mov
cwtl
xchg
lds
mov
mov
clc
mov
pop
mov
xor
push
sub
jl
clc
push
xor
inc
and
jb
push
popl
cmp
mov
inc
shlb
arpl
fadds
stos
test
jecxz
xor
xchg
js
inc
movsb
push
fdivl
in
add
ja
out
jae
mov
cs
dec
xor
dec
and
sub
mov
hlt
fldcw
sahf
rorl
cs
pop
jle
in
popf
dec
mov
push
adc
inc
mov
sbb
mov
adcb
jge
fcompl
fldcw
mov
pop
loopne
imul
push
and
inc
rcrl
icebp
lea
faddl
incl
fisubrs
jge
fcomps
sub
pop
sub
push
jecxz
pop
add
jl
pop
cmpsb
ret
ja
xchg
add
test
dec
lods
fadds
enter
mov
mov
popa
mov
cmpsb
adc
addl
stc
or
push
pushf
cmp
lds
neg
mov
mov
xchg
addr16
mov
pop
std
shr
pushl
xchg
lret
stos
aam
pusha
mov
clc
cmp
xor
outsl
std
iret
mov
les
cmc
add
sarl
sarb
aam
xor
cld
add
and
and
push
lret
dec
or
adc
xor
out
into
mov
push
adc
dec
cmp
lahf
scas
shr
stos
sub
push
mov
repz
pop
xor
push
imul
outsl
js
insl
aam
mov
stc
call
adc
cltd
push
or
add
adc
pop
mov
jns
fsubl
mov
add
push
arpl
xor
and
notl
fsub
sub
push
mov
scas
jo
sub
lock
push
es
aas
inc
or
lret
dec
lods
jmp
out
out
cld
lock
mov
ffree
sub
xchg
dec
push
ss
out
lds
dec
or
repnz
dec
popf
sbb
cmp
push
lea
xchg
dec
ret
jmp
stc
lret
movsb
pop
jne
mov
and
adc
mov
out
insl
imul
sub
fistl
fs
inc
pop
inc
xorl
nopw
xchg
lea
in
jl
push
int
jge
andb
call
add
nop
jne
mov
xor
int
shlb
repz
scas
test
imul
adc
sbb
nop
mov
dec
inc
cmp
xchg
movsb
sub
movsl
jo
cwtl
out
xchg
lds
mov
lods
mov
push
ret
out
xlat
jl
dec
cs
jns
sub
pusha
cmpsl
cld
fstpl
fadd
subl
push
fs
inc
aaa
imull
lret
jge
shll
mov
aad
inc
xor
jns
pop
out
das
xchg
lcall
mov
imul
mov
psubsw
out
repnz
push
xor
sub
and
xor
icebp
sub
mov
or
fdiv
pusha
jl
xor
lods
dec
nopl
sub
test
mov
xchg
aas
jae
jno
cmpsb
push
fidivrl
dec
lds
sub
aas
insb
shll
add
notb
adc
sub
inc
sbb
jbe
push
adc
rcrl
or
call
pop
jae
or
add
inc
fsubs
lock
mov
ljmp
jae
mov
cmpb
ficoml
out
in
stos
xor
aaa
cmp
push
push
lds
sbb
stos
adc
jne
jae
je
out
insl
fisubrs
test
popl
cmp
pop
or
enter
cs
dec
or
inc
xchg
in
cltd
xor
mov
shlb
rclb
jmp
cwtl
cmc
inc
cmpsl
inc
lahf
movsl
bound
pop
xchg
adc
adc
test
dec
pop
leave
das
cmp
pusha
sbbb
in
cwtl
daa
pop
dec
cltd
xlat
into
jne
mov
push
push
fistl
fcmovbe
push
jg
mov
pop
xor
sub
rolb
sub
popa
mov
out
jmp
iret
mov
subl
add
data16
adc
test
mov
in
xor
cmp
in
mov
cltd
mov
js
ljmp
movsl
fdivl
jne
dec
lret
adc
sbb
push
sbb
addr16
ret
lods
in
test
push
loopne
loop
dec
xlat
jle
outsl
jg
mov
xor
sbb
popf
out
dec
mov
dec
into
mov
sbb
rcll
sti
push
sti
xor
sub
xlat
popf
and
xchg
popf
cwtl
shll
lods
out
cld
xor
sar
in
decb
jae
mov
cmp
pop
or
std
fwait
adc
popf
mov
cmp
mov
cmp
in
push
shl
movsb
shrl
call
jle
insl
or
cmpsb
cmp
inc
pop
cmc
jle
mov
leave
sahf
jb
cmpsl
fsubs
sti
sbb
mov
push
mov
daa
inc
out
sahf
mov
lods
repnz
test
jmp
adc
lds
jb
test
cmp
popf
adc
sarl
in
cmp
fadd
addr16
mov
pushf
jmp
mov
xchg
mov
cld
and
pop
mov
hlt
mov
xor
in
cs
mov
stos
mov
cmpsb
mov
sbb
pop
stos
sub
jb
lret
fisttpll
mov
aad
sbb
push
mov
repnz
dec
sbb
pop
sub
jo
xchg
movsb
in
sbb
std
aad
sub
outsl
cmp
mov
fs
test
jecxz
int
ds
jns
xchg
jne
iret
mov
adc
lret
push
push
test
xor
xchg
adc
ret
dec
frstor
mov
out
xchg
pop
jno
scas
and
lds
stos
push
push
pop
leave
push
xchg
or
mov
jmp
mov
lods
adc
mov
out
imul
add
in
ljmp
sbb
xchg
xchg
fidivrl
mov
and
lds
push
mov
jb
aad
ljmp
jmp
fs
jl
mov
neg
pop
and
jne
or
movsl
or
jb
pop
fidivl
test
outsb
dec
sahf
outsb
inc
xor
pop
out
or
lea
ds
ret
add
hlt
popa
xchg
in
jmp
pop
push
mov
xchg
jp
jns
je
call
mov
inc
cld
inc
lock
aad
pop
imul
je
data16
xor
sbb
data16
jl
cli
inc
jle
popf
scas
jmp
adc
cmp
lock
lods
mov
cmpsl
jmp
xchg
mov
hlt
int3
in
repz
inc
rcll
pop
cmc
mov
jg
ret
pop
dec
fstps
in
cwtl
sti
in
pushf
sub
insb
hlt
sub
dec
push
lods
rolb
mov
push
and
lret
ds
inc
sbb
lret
xor
sahf
add
push
mov
mov
cmp
sbb
insb
mov
fimull
hlt
mov
out
in
lods
lcall
xchg
stos
mov
push
rol
test
leave
sbb
sahf
out
and
stos
fcom
fcmovbe
fnstsw
pop
or
xor
add
sbb
inc
inc
fwait
fs
ja
or
xor
push
dec
add
push
iret
cwtl
es
ret
movsb
pushf
jnp
pop
cmc
mov
fcmovnb
popa
mov
lods
leave
hlt
xlat
mov
fs
and
dec
jne
int3
daa
daa
dec
cmpl
test
js
in
aaa
push
pop
mov
stc
ss
or
sub
inc
or
mov
jns
cwtl
adc
or
xchg
lds
cmp
sbb
into
jmp
mov
push
mov
std
sbb
insb
sbb
jp
ljmp
js
lock
add
movsl
mov
not
fsubrl
insl
lcall
rolb
inc
adc
add
or
jecxz
xor
xchg
aas
xchg
adc
in
les
push
adc
push
pop
int3
adc
lahf
std
xor
test
sbb
mov
lock
scas
mov
outsl
test
cmp
jae
mov
jb
sub
xchg
pop
jle
mov
jmp
into
push
mov
mov
sbb
fnclex
or
mov
adc
lock
xlat
mov
das
push
ljmp
sbb
adc
fwait
test
pop
pop
shl
mov
jo
cmp
jge
sub
xor
gs
and
out
sub
push
int3
add
cmovs
insl
leave
sarl
and
sbb
mov
int3
addr16
xchg
je
cmp
xchg
mov
or
lea
jmp
loope
cwtl
fstps
fistpl
push
call
int
loop
orl
jae
sbb
lods
sbb
jne
in
mov
out
in
sarb
add
cs
jnp
sti
stos
es
imul
aas
cmp
sbb
loopne
fnstsw
mov
mov
xchg
js
xchg
cmpsl
imul
insl
inc
xor
inc
fwait
pusha
mov
fyl2xp1
pop
mov
ljmp
in
rclb
leave
jae
sub
ja
lret
cltd
mov
les
push
adc
jmp
ficompl
int
lds
mov
sub
cmp
movl
mov
push
pop
push
pop
outsb
inc
into
ret
bound
nop
xchg
mov
ficompl
jns
pop
add
test
int3
cmpsl
in
mov
jmp
je
adc
mov
jle
incb
in
shl
filds
jmp
dec
stos
repz
in
roll
nop
and
repnz
push
mov
mov
pop
ret
idiv
and
nop
sub
hlt
sbb
mov
lea
or
xor
push
insl
pop
jecxz
popa
xchg
mov
dec
add
sbb
xchg
mov
add
or
xorl
jl
xor
push
jle
popf
adc
mov
std
fcoml
or
loope
jo
fildll
aas
xchg
mov
add
gs
cmp
outsl
push
aaa
mov
aaa
aam
pop
fcomip
shr
js
mov
dec
lea
sub
std
aam
cmp
inc
xlat
mov
cmc
xchg
sub
insl
nop
add
inc
xchg
imul
adc
fcoml
lods
in
arpl
pop
fucom
sub
and
mov
push
inc
mov
addr16
loopne
andb
mov
push
jl
lret
lods
and
int3
out
pop
cmp
in
mov
in
pop
leave
repnz
dec
test
subl
sahf
mov
hlt
sahf
mov
ret
out
ljmp
lea
rcl
pushf
push
call
pop
outsl
mov
xchg
pop
mov
pop
or
jecxz
std
mov
lock
jne
adc
cmpsb
repnz
pop
cmp
lret
pop
pop
pop
lock
call
fnstsw
jge
and
sub
jmp
jne
stos
xor
inc
xchg
adc
cmc
sbb
js
pop
or
xchg
andb
jbe
sub
jae
pop
adc
jnp
dec
js
sub
mov
inc
fisubl
pop
jns
sbb
jbe
aas
jo
add
imul
push
or
jl
mov
mov
fcompl
mov
xor
mov
dec
nop
cltd
xor
and
imul
sbb
adc
mov
jns
or
push
jmp
insl
xor
or
sub
mov
sbb
add
mov
pusha
jg
pop
faddl
sub
jl
das
and
cmp
push
inc
sbb
movl
or
mov
aaa
mov
jmp
les
call
pop
and
inc
mov
dec
xchg
xor
popa
xchg
nop
jge
movsl
data16
jge
iret
in
loope
adc
adc
mov
pop
push
inc
movsb
arpl
fnstcw
cwtl
cld
daa
lea
inc
inc
xchg
test
pusha
sbb
mov
push
js
push
jnp
dec
xchg
imul
enter
rcrl
mov
xchg
pop
imul
pop
mov
xor
nop
test
jle
ds
call
dec
gs
out
out
cmp
ret
pop
cmp
ret
ud1
out
shlb
lahf
loope
and
push
cmp
ja
cmp
aam
cs
pop
aad
mov
and
pop
hlt
daa
jb
test
scas
mov
add
addr16
xor
repz
sub
push
and
scas
mov
xchg
dec
pushf
add
mov
pop
mov
pop
mov
xchg
ljmp
cmp
roll
ss
xlat
addr16
icebp
imul
push
imul
sbb
movsb
and
ljmp
enter
lods
outsb
ret
inc
add
lock
movsb
pushf
or
lret
mov
lret
push
lea
mov
test
test
sbb
aam
xchg
cltd
daa
lret
das
pop
sub
jns
into
add
push
push
push
sub
imul
jbe
das
ss
cld
xchg
mov
mov
adc
in
push
push
insl
cld
mov
rcrl
clc
and
out
jae
addl
ja
cmpsl
adc
sar
sub
xchg
xlat
fimuls
mov
aaa
mov
les
bound
adc
xor
pop
std
xor
in
loope
jnp
fcomps
fisubl
pop
adc
int
dec
and
xlat
xor
iret
or
std
ds
sbb
xchg
imul
mov
pusha
cmpsl
pushf
mov
sub
repnz
in
vcvtss2sd
push
mulb
adc
ret
scas
mov
out
xchg
std
nop
cmp
test
lods
repz
jo
xchg
sbb
push
cmc
jne
daa
push
les
dec
and
test
xchg
mov
rcrl
and
pop
mov
mov
jl
fdivr
fcomps
jb,pn
adc
pop
pop
in
inc
andl
dec
cltd
mov
mov
int3
addr16
xor
and
movsb
sub
scas
dec
jl
lods
cmp
pop
jle
fidivs
xor
mov
sbb
sbb
pop
inc
mov
cmp
repz
pop
dec
sub
inc
xor
push
jge
out
sub
jp
push
in
mov
mov
movsl
cmp
aas
loop
cmpsl
mov
es
cmp
xlat
adc
jge
cmp
inc
mov
out
mov
mov
lahf
xor
hlt
mov
jno
sbb
mov
xchg
fadds
adc
data16
dec
push
adc
repnz
aad
scas
ret
ljmp
pop
stos
or
push
pop
inc
push
mov
sub
and
adc
jmp
adc
add
call
aaa
cmp
mov
shll
ljmp
xchg
pop
add
sub
sarb
xchg
ret
xchg
pop
sbb
mov
push
lret
sbb
test
mov
jbe
jg
sahf
jl
aad
cltd
adc
enter
push
sti
xchg
bound
icebp
negl
orb
nop
adc
ss
popa
push
in
pop
fcmove
jecxz
faddl
lods
cmp
push
das
roll
pop
xchg
negb
lock
cmp
mov
pop
sub
mov
orb
sbb
or
or
loope
cmp
cli
xor
lret
int3
sub
xchg
jo
repnz
and
cld
mov
and
adc
inc
mov
xchg
mov
insb
push
push
mov
sbb
add
inc
negl
clc
out
mov
ret
test
mov
push
imul
stc
push
xchg
mov
insl
xorb
mov
inc
or
scas
jmp
loopne
lea
cmpsl
push
jnp
pop
bnd
sti
mov
sbb
into
push
loopne
or
stos
popa
sub
mov
call
push
cmc
mov
pop
mov
mov
rcrb
jp
xor
push
insl
inc
sbb
pusha
jg
xlat
mov
leave
push
addl
push
imul
mov
aaa
cmp
push
xor
jmp
in
cmp
push
xchg
imul
cmp
imul
mul
mov
xchg
stc
std
fldenv
insl
and
push
js
repnz
add
push
mov
out
in
cmc
outsl
fldenv
adc
repz
call
ss
hlt
lea
loopne
cmc
xor
divb
xor
stos
lock
cli
les
iret
pop
adc
jecxz
or
jne
jg
movsb
mov
pop
jle
mov
and
stc
insl
jno
xchg
mov
push
fwait
lea
jne
pop
fs
inc
test
loop
into
rclb
sub
scas
ja
mov
mov
ror
add
loop
notl
xchg
out
xchg
dec
xchg
xchg
adc
mov
cld
subl
adc
fstpt
push
icebp
movsl
mov
cmpsb
xchg
dec
jbe
stc
fs
data16
daa
js
and
lcall
shr
lods
xor
xchg
mov
push
imul
adc
sbb
jge
inc
stc
jl
pop
jnp
mov
leave
imul
jle
mov
lock
push
pop
call
inc
mov
stos
cmpsl
and
movsl
jae
orb
pop
mov
subl
xlat
push
clc
stos
pop
cs
mov
add
jo
add
push
and
and
rolb
cmpsl
or
bound
pop
je
stc
nop
cmp
lahf
cmp
mov
aam
das
ficoml
int
xchg
icebp
test
xchg
rcrl
xchg
dec
push
push
int3
lcall
push
lods
mov
int
cltd
mull
enter
push
cmp
fwait
bound
imul
loope
inc
sbb
lret
cmpsb
mov
push
into
xchg
cmp
jmp
test
xor
outsl
sbb
pusha
dec
call
and
gs
nop
mov
adc
and
xlat
push
jl
sbb
insb
jge
mov
lret
dec
xchg
loopne
fsubl
mov
sbb
insl
pop
jne
data16
in
mov
inc
and
and
sub
jecxz
dec
dec
pop
clc
or
xor
jl
sub
jae
mov
push
adc
test
xchg
xchg
and
scas
fidivrs
or
dec
inc
jae
sti
fistpl
xor
pop
inc
jne
jns
push
dec
mov
adc
hlt
test
dec
jp
loope
in
xchg
flds
mov
jge
cmc
push
popf
in
fstpl
sbb
outsb
lret
pop
rcll
icebp
xor
dec
adc
outsb
jle
xchg
rcr
xchg
int
in
adcb
adc
dec
xor
cmpsl
arpl
cmc
push
push
or
and
ret
or
dec
popf
ss
xchg
adc
pop
inc
and
pop
jae
push
imul
int
xchg
aaa
mov
lret
and
jae
clc
icebp
xchg
mov
or
mov
pop
sub
ljmp
mov
mov
fnstsw
out
mov
sub
inc
lds
dec
jbe
mov
mov
imul
jecxz
push
jg
or
fistpl
jne
loope
cwtl
movsl
out
xchg
test
jne
adc
and
pop
xor
dec
insb
xor
pop
adc
aas
mov
subl
mov
add
jae
jbe
pop
sbb
sbb
loop
or
mov
xchg
fimull
xchg
xchg
dec
jb
inc
decl
cmp
iret
and
mov
insb
movsb
or
les
and
shrl
push
xchg
jae
add
iret
dec
sahf
sbb
loope
stos
jmp
int3
xchg
nop
or
add
sbb
push
push
pop
stos
add
push
jno
movsl
gs
mov
xor
push
mov
scas
iret
sbb
sahf
mov
incb
pop
sub
scas
out
call
out
scas
decl
popf
sub
mov
imulb
icebp
cs
jmp
bound
jp
imul
cmpsl
or
rclb
or
out
pop
mov
adc
orb
dec
dec
mov
rcrb
aad
call
int3
cmp
dec
loopne
push
scas
shrb
sti
test
repnz
rcr
ret
hlt
xchg
jno
ljmp
cmp
cmpl
cwtl
xchg
pop
outsl
aad
dec
inc
cld
cltd
mov
les
dec
pop
sti
jp
jmp
sarb
mov
push
clc
cmc
dec
cmp
or
fldcw
xor
add
add
std
fists
in
fdivrs
pop
fidivl
nop
in
pop
mov
push
sub
push
add
dec
test
mov
jnp
jle
nop
out
sub
sub
fdivs
cmpsb
cltd
into
lock
aaa
test
dec
or
mov
mov
imul
ret
aas
stos
popa
cmp
xor
aam
push
jnp
imull
stos
or
loope
ss
sub
and
pushf
mov
cs
push
fincstp
push
push
mov
adc
cmp
subl
or
loope
xor
sub
push
addr16
cmp
rclb
or
dec
mov
lret
aad
sbbl
dec
ret
inc
adc
sti
enter
inc
cmp
pop
adc
repnz
and
add
data16
je
dec
dec
pop
dec
add
xchg
test
or
clc
adc
sarb
dec
shll
mov
ds
fnstcw
push
sbb
dec
loop
mov
cmp
outsl
and
jns
jmp
hlt
popf
pop
cmpsb
aad
xlat
and
rclb
push
inc
iret
jo
dec
sti
cmp
daa
xor
mov
fwait
and
jmp
mov
and
es
pushf
sar
jb
dec
mov
mov
mov
xor
inc
cmp
pop
pop
mov
adc
pop
inc
clc
lea
and
jnp
jnp
jle
cmp
mov
insl
inc
repz
add
icebp
mov
or
lock
je
setl
cli
stos
sub
cmc
jle
inc
mov
out
xchg
daa
cmp
sbb
int
push
enter
mov
or
stos
int
ss
mov
enter
jmp
mov
das
push
dec
dec
ja
xlat
sub
add
ftst
rolb
in
test
and
jmp
jle
dec
call
jns
push
stos
pop
test
mov
or
pop
lock
xchg
sub
pop
push
add
xchg
pop
popf
repz
in
sbb
inc
jp
loopne
stos
ret
pop
cmp
out
jg
mov
loope
in
mov
dec
clc
xchg
push
xchg
pop
lds
xchg
xchg
xor
mov
push
dec
cmp
xchg
cli
xor
cmp
sbb
xchg
mov
sub
lahf
les
mov
sub
enter
dec
hlt
mov
inc
loopne
pop
cmpl
out
adc
mov
pop
mov
pop
push
imul
pop
ret
scas
imul
enter
mov
cli
push
lods
push
xchg
sbb
push
dec
dec
cmp
push
pop
lret
scas
and
or
std
mov
mov
xchg
or
loope
sub
and
mov
and
imul
in
adc
pop
push
push
xchg
in
or
lods
push
inc
mov
dec
push
hlt
not
jmp
pushf
sbb
and
dec
push
xchg
cmpsb
adc
clc
and
push
divl
lret
js
in
sub
pop
ds
cmp
jb
cmpsl
pop
scas
pop
jae
in
cmpsb
decl
xchg
leave
rol
repnz
cmp
push
xor
scas
push
push
xchg
fiadds
bnd
mov
mov
inc
dec
das
push
sti
popf
fstpl
imul
xor
addb
jg
jp
shll
pusha
scas
xor
pop
fs
push
dec
inc
outsb
sub
sub
pop
and
pop
and
and
push
xchg
aam
out
sbb
jno
in
push
dec
mov
push
fldt
sbb
mov
jl
or
mov
mov
cmp
push
add
cmp
push
sub
inc
xor
sub
call
das
xchg
dec
inc
cmpsl
xorb
nop
mov
jnp
jp
rorl
test
pop
test
mov
mov
jmp
mov
shrl
mov
icebp
and
jecxz
pop
pop
mov
pop
and
outsl
mov
test
mov
xor
aam
push
aaa
ja
dec
dec
lods
or
jl
jle
push
aaa
and
test
loope
dec
sub
add
sbb
cs
push
aaa
and
scas
xchg
dec
mov
in
mov
push
mov
cmp
mov
dec
xchg
lds
inc
mov
adc
outsb
mov
mov
stos
int3
aam
dec
cwtl
or
je
insl
lods
popa
xor
roll
out
test
adc
daa
inc
inc
mov
push
ret
xchg
pushf
mov
mov
pop
xor
shll
les
push
icebp
scas
jno
scas
pop
fwait
hlt
rcrl
aas
adc
cmpsb
loopne
imul
aad
outsb
ss
sub
jecxz
or
pop
out
pusha
cmc
pop
inc
cli
xlat
dec
lods
fcompl
popf
repz
xor
sbb
add
cmp
sbb
xchg
mov
in
fnstcw
or
push
pop
adc
test
repnz
icebp
pop
push
xchg
jecxz
pusha
sahf
idivl
or
xchg
loope
into
insb
fildll
adc
outsb
ficompl
int3
daa
mov
dec
jle
mov
sub
mov
xchg
loope
push
dec
loopne
outsb
push
addr16
sbb
gs
jl
test
lahf
dec
mov
adc
pop
stos
lret
jbe
inc
mov
cmp
mov
incb
jmp
in
aam
scas
mov
mov
sti
jecxz
jg
aaa
into
pop
mov
sbb
inc
add
jno
jnp
inc
inc
aad
xchg
pushf
rolb
mov
jmp
sahf
xor
rorl
lock
ljmp
fiaddl
cmp
mulb
push
ret
push
notl
sub
push
pop
outsl
push
adc
inc
shld
out
add
sti
iret
aad
xchg
mov
sbb
inc
sbb
mov
sub
or
adc
dec
movsl
mov
sub
mov
or
mov
and
jl
adc
ja
jbe
ljmp
movsb
pop
cmpsb
out
out
scas
stos
test
aad
and
lods
cmp
cmp
repnz
cmp
push
or
cmp
aam
incb
test
popa
les
inc
shlb
add
sub
mov
cltd
add
int3
dec
scas
sbb
nop
int3
aam
add
aaa
add
shl
jb
js
je
pop
xor
inc
shrb
sti
into
shrb
xchg
loop
loope
test
jnp
mov
cld
adc
add
lret
push
add
add
nop
sarb
mov
stc
push
sub
ret
jne
lods
xlat
cmpsb
cmp
cld
mov
cmp
add
sub
xor
ja
popa
dec
mov
and
sbb
or
pop
adcl
int
in
lea
xor
int
add
push
push
hlt
cmp
test
xlat
adc
ret
es
repz
sub
mov
jbe
jb
daa
jae
or
aas
pop
cmp
rcrb
pop
fs
jmp
pushf
fsubs
or
xchg
sarb
lds
test
lahf
xchg
push
in
int
cmpsl
xchg
pop
jmp
stc
dec
mov
imul
adc
movsl
scas
push
shr
jg
dec
jge
cwtl
add
cmp
mov
in
push
ret
insb
cmpsl
ja
cli
cmp
push
inc
sbb
jg
xchg
pop
cli
mov
jno
push
movsb
jp
test
repnz
cmp
dec
out
inc
mov
and
addl
sub
fbstp
gs
lea
jmp
fiadds
movsl
dec
gs
or
mov
cmpsb
scas
xchg
mov
mov
xor
dec
dec
shlb
and
aas
out
loope
or
mov
cmp
cmp
xchg
or
mov
xchg
lds
dec
push
push
std
test
divl
leave
cmp
dec
mov
pusha
sbb
pushf
ror
scas
lahf
cmp
jmp
or
test
mov
scas
data16
jg
dec
inc
pop
cltd
out
pusha
stos
ss
lret
inc
jg
stos
dec
or
mov
jo
pop
inc
dec
push
xor
les
pop
arpl
insl
inc
movsb
mov
add
dec
mov
jnp
bound
pop
mov
roll
adc
mov
pop
push
scas
scas
std
sbb
mov
cld
mov
inc
mov
jbe
adc
cld
insb
fs
sahf
insb
pop
ret
mov
fadds
loopw
adc
cld
daa
and
sbb
cmp
add
jecxz
pop
clc
jns
jmp
arpl
sub
enter
loopne
adc
pop
cmpsb
lret
rol
mov
ss
imul
cli
scas
vpperm
cld
pusha
xchg
sub
mov
fcoms
roll
ret
cltd
jno
and
adc
add
gs
xor
push
movq
cmpsl
in
mov
jb
leave
fildll
dec
push
loop
jo
add
dec
jnp
xchg
cli
sar
jecxz
gs
sbb
loop
cmc
nop
push
sbb
xor
or
pop
jmp
push
test
adc
jno
add
repnz
in
jo
adc
punpcklbw
mov
fcoms
inc
mov
xor
push
cli
leave
sahf
adc
icebp
xchg
pusha
xchg
sbb
arpl
sub
rcr
or
shr
and
enter
pop
mov
insl
sub
jns
mov
fcmovnbe
jmp
cmp
enter
fnsave
jae
pop
div
mov
and
pop
push
addr16
adc
mov
mov
adc
addr16
xchg
mov
mov
test
mov
shl
mov
es
pop
scas
add
or
jo
arpl
jb
iret
arpl
mov
sbb
movsb
shll
add
add
stos
in
adc
shrb
xchg
lret
lods
fsincos
jmp
repnz
pop
imul
mov
imul
sub
mov
aaa
scas
dec
push
dec
or
pop
sbb
or
jl
mov
aaa
pushf
sbb
sbb
and
popa
idivb
push
in
dec
push
push
push
fidivrs
sbb
daa
sbb
loop
and
jmp
das
cmp
lods
sahf
inc
adc
jo
incb
sub
push
sub
cmp
aam
jg
inc
adcb
insl
jp
mov
pop
mov
inc
enter
xor
cmpsl
cs
xor
jns
int3
adc
hlt
imull
cmp
in
aas
mov
pop
je
mov
shlb
idivb
adc
dec
dec
jbe
mov
xor
stc
dec
lret
pop
push
or
and
xor
sti
dec
test
mov
hlt
xorl
sub
into
cmp
push
outsl
mov
stos
shlb
enter
ror
movsl
fbld
hlt
pushf
les
fbstp
ret
xor
push
cwtl
testb
pop
scas
or
pushf
inc
jmp
adc
xchg
iret
stos
xor
mov
mov
mov
repnz
cltd
bound
arpl
mov
xchg
outsb
lock
out
pop
mov
cmpsl
fists
bound
loopne
mov
fldt
pusha
mov
jp
shlb
sbb
push
cmp
inc
push
pop
inc
jl
stc
cmp
faddl
xchg
add
xchg
pop
daa
movsl
rorl
out
push
adc
pop
mov
loope
jns
popf
inc
xor
nop
inc
pop
insb
cmpsl
pop
hlt
adc
repz
xor
and
adc
out
aad
push
adc
xor
outsl
mov
stos
jmp
les
lock
inc
subl
inc
add
aas
push
dec
xorl
and
jns
xchg
pop
or
adc
pusha
push
mov
test
inc
mov
hlt
mov
cmpsl
popa
test
adc
mov
sub
ja
push
stc
fwait
loope
gs
push
js
rcll
call
divb
push
inc
jge
inc
movsb
sub
cmpsl
dec
push
xorl
data16
rcrb
mov
call
daa
loopne
sarl
arpl
jge
stc
push
push
lret
mov
adc
lea
aaa
cmp
mov
incl
and
mov
dec
mov
inc
clc
cmp
mov
push
jmp
arpl
mov
in
aad
sub
ds
jg
inc
pop
popa
push
jl
jecxz
mov
sub
gs
push
xor
pop
ret
adc
add
jmp
lret
pop
imul
mov
add
or
aas
int3
aaa
dec
push
mov
in
jl
std
xor
mov
mov
dec
lods
xchg
cmc
mov
add
xchg
ss
add
out
cmp
fs
mov
data16
jnp
mov
lret
xor
xchg
insl
sub
push
popa
aaa
pop
cmp
ja
pop
push
iret
mov
mov
xchg
lret
imul
jmp
xor
mov
je
jo
sbb
sbb
and
sbb
jp
adc
insl
push
add
pop
add
xlat
push
mov
testb
push
sub
cmpsl
in
push
cmpsb
pop
xchg
or
popa
xchg
je
and
cmp
les
movsl
cmpsl
inc
inc
mov
ficoml
jecxz
punpckhwd
js
jl
xchg
clc
xor
divb
mov
mov
mov
std
js
xor
pop
arpl
inc
adc
mov
or
adc
and
test
dec
xor
sbb
pop
xlat
pusha
xor
out
xor
ss
mov
lock
ljmp
and
push
dec
mov
das
mov
roll
jae
sbb
mov
or
loope
es
and
subl
ja
xchg
mov
fistl
ds
pop
stos
xchg
push
outsb
ja
mov
inc
ds
shlb
mov
mov
out
mov
mov
pop
fwait
dec
pop
icebp
dec
ja
mov
mov
push
jp
mov
and
dec
pop
mov
and
xchg
push
cld
int
sbb
stos
dec
dec
jmp
or
xor
pop
imul
or
popa
outsb
sbb
es
add
lahf
lcall
xchg
mov
push
cmpb
inc
jmp
inc
jp
push
pop
push
mov
xor
inc
sarl
adc
sbb
dec
repnz
daa
xchg
dec
mov
dec
pop
out
les
mov
xchg
add
aam
adc
popa
cltd
outsb
sub
pop
das
jmp
mov
pusha
imul
push
popf
xor
xor
and
cmp
dec
sahf
jnp
adc
imul
sbb
xchg
aam
pop
test
in
outsl
cmp
push
int
sarb
xor
dec
lahf
mov
adc
dec
call
stc
mov
push
push
mov
imul
cmp
dec
imul
xchg
out
add
mov
xor
pusha
mov
push
in
inc
in
pop
pop
les
add
push
icebp
xchg
cmp
daa
pop
push
cmc
scas
push
stos
shlb
jno
in
test
movsb
shl
insl
movsl
decl
scas
or
pop
arpl
lret
fiadds
jl
gs
and
shlb
sub
fnstcw
outsb
je
cmpsb
mov
mov
sub
aam
mov
add
lret
jno
lds
sub
cmp
sub
out
jnp,pt
cmpsb
push
rcl
mov
add
js
xchg
cmp
clc
lahf
cltd
call
dec
sbb
dec
mov
shlb
mov
out
out
dec
and
mov
shll
xchg
invd
mov
jp
pushf
and
iret
sarl
lods
push
jmp
cmp
cmpsl
int3
push
scas
xor
mov
mov
ficoms
cmp
stos
imul
stos
jg
fwait
data16
mov
cmpsl
mov
stos
outsl
mov
mov
push
cmp
pop
cmc
and
or
fdivs
adc
mov
xchg
cmp
in
shll
cwtl
shl
into
inc
or
mov
jp
stc
push
pop
repnz
add
fcompl
inc
xor
pop
mov
adc
jp
insb
jns
cld
movsb
xor
push
adc
xor
jne
sub
cmp
xchg
addr16
adc
clc
sub
lods
push
test
cmp
add
ja
dec
or
sub
pop
xchg
shlb
adc
int3
mov
repnz
stc
fiadds
lods
jmp
pop
dec
jbe
add
xor
xchg
jge
xor
fistps
stos
mov
fwait
xchg
ficomps
js
and
loope
mov
lods
dec
mov
bt
jno
pusha
jb
sub
mov
or
cs
dec
arpl
pop
lret
inc
subl
dec
push
shlb
mov
in
jae
lods
jne
jg
dec
add
and
out
pop
out
out
sbb
iret
add
iret
mov
and
cmp
jno
sbb
fwait
push
pop
mov
jnp
movsb
movntq
pop
pcmpeqd
mov
stc
cmp
test
data16
call
mov
enter
or
adc
cmp
mov
pop
in
pop
mov
outsb
add
sbb
jecxz
mov
dec
pop
mov
lahf
jge
nop
mov
shrl
push
sbb
fidivrl
cld
shll
push
sbb
int3
outsb
xchg
add
mov
push
mov
xor
mov
repz
repnz
jno
insl
data16
xor
cmpsl
dec
ss
shl
xchg
fisttps
das
jo
push
add
push
jl
mov
push
leave
clc
and
aad
faddl
and
sbb
jo
pop
iret
nop
dec
in
cli
sbb
add
out
pop
add
or
insl
arpl
push
xchg
fstps
adc
mov
add
jno
mov
mov
mulb
std
xlat
test
and
sbb
jl
mov
xor
sbb
test
mov
mov
jne
jl
lock
jecxz
xor
push
stos
xchg
fildll
adc
push
shl
mov
test
push
jmpw
rcll
xchg
adc
xor
aad
inc
mov
push
cmp
lea
out
xor
and
mov
sbb
fs
cmp
mov
dec
push
jb
stos
push
pop
movsl
inc
test
push
and
and
cmp
subps
push
inc
and
dec
dec
outsl
out
test
push
movups
xchg
adc
pushf
or
pushf
hlt
cmpsb
sub
cmp
fsubrl
adc
fnstsw
movsl
pop
mov
pop
push
and
mov
inc
shll
leave
and
cmp
fcmovbe
and
cmp
fstpt
in
iret
sbb
push
add
test
ficompl
mov
dec
push
into
jge
push
nopl
fnstenv
adc
or
data16
mov
add
nop
popa
fldlg2
jp
imul
arpl
aaa
pop
jno
pop
in
mov
lods
dec
cli
incl
rol
mov
fwait
ret
sbb
cmp
dec
mov
in
ss
inc
or
push
pop
dec
in
adc
mov
push
jae
cmpsl
mov
xchg
aas
pusha
push
add
jmp
int3
mov
in
and
subl
pop
dec
ret
add
je
xchg
inc
cld
pop
outsl
es
out
xor
sahf
lods
jp
lock
nop
adc
xchg
mov
mov
addr16
sbb
aam
and
mov
push
mov
in
out
add
insb
aaa
sbb
sbb
ret
cwtl
xor
mov
xor
add
and
sbb
mov
ret
xor
sbb
stos
push
mov
sbb
and
cmp
cltd
mov
stos
add
out
mov
and
or
xor
push
cld
icebp
daa
lock
rcll
jmp
or
pop
dec
pop
fstpl
pop
stos
shrl
out
dec
in
push
jp
punpckhdq
mov
call
test
push
inc
bound
out
out
int3
mov
dec
jl
pushf
jge
repz
dec
mov
or
push
in
pop
hlt
dec
inc
mov
mov
mov
xchg
sbb
sar
popa
mov
and
and
pop
movsl
mov
mov
fdivr
jecxz
scas
fwait
sbb
lea
and
cmp
mov
lods
mov
mov
jbe
movsb
repz
ljmp
sub
aam
dec
xchg
scas
push
pusha
and
insb
sub
loopne
mov
sub
repz
sbb
repz
pop
fdivs
push
cmp
mov
or
fsubrs
test
scas
add
movsb
divl
xor
push
mov
inc
divl
loopne
pop
jo
push
fnstenv
jo
add
out
push
pop
push
notl
mov
xor
push
jl
lods
add
aad
mull
adc
icebp
xor
add
cmpsb
push
iret
mov
xchg
cmp
lods
or
mov
dec
call
mov
ljmp
dec
test
sbb
sbb
inc
outsb
push
sub
test
add
scas
stos
or
jmp
lcall
aas
inc
rclb
dec
xorb
pop
scas
inc
in
in
ljmp
fsubl
push
inc
sub
mov
outsl
xlat
int
xor
bound
rol
xor
mov
xor
mov
icebp
scas
shlb
xchg
arpl
mov
push
add
push
icebp
mov
mov
out
or
repz
cmp
jb
int3
mov
push
outsb
pop
add
stc
lea
jae
mov
pop
ljmp
dec
aam
pop
fs
sarl
mov
mov
scas
cmp
nop
mov
sbb
sti
pop
xchg
adc
jmp
stos
fs
ss
add
and
jl
xlat
and
andb
mov
mov
push
sbb
popa
xchg
dec
daa
or
cmpsb
mov
jecxz
insl
dec
push
dec
or
mov
xchg
leave
mov
insl
xchg
add
mov
mov
mov
inc
rcll
mov
mov
cmp
ret
or
xor
in
jecxz
xchg
loop
rorl
adc
jl
push
lods
into
iret
pop
add
push
rcr
jp
jae
gs
pushf
and
inc
jbe
cmp
jg
and
jo
loop
cmpsb
jbe
mov
cmpl
loop
and
sub
mov
ljmp
ret
ljmp
repz
add
push
movb
imul
mov
pop
out
lea
push
cmpsb
cmpsb
jae
cltd
mov
add
sbb
dec
rol
sub
unpcklps
add
or
or
sahf
das
adc
or
add
cwtl
mov
mov
add
cmp
ja
jno
mov
gs
jno
loop
jg
fisttpll
imul
fnsave
ret
mov
jg
into
or
repnz
jno
push
xchg
fidivrs
clc
cmp
jb
xchg
lds
pop
icebp
cwtl
or
push
pushf
out
inc
mov
mov
out
lds
jmp
and
xchg
adc
lahf
mov
mov
sti
ret
int
das
fcos
cwtl
mov
add
mov
mov
repnz
daa
jae
xor
mov
rcrl
push
addb
cmp
icebp
mov
test
faddl
rol
add
push
ja
fldt
jecxz
mov
iret
pop
xor
pop
inc
loopne
cmp
or
repz
imul
sbb
and
ja
add
push
pop
and
in
es
mov
sub
stos
cmp
fstpt
xchg
dec
mov
and
cli
int
jnp
sbb
shlb
cmc
test
scas
addb
sub
push
cltd
popf
mul
nop
fnstenv
enter
ds
sbbl
mov
std
mov
data16
adc
xchg
push
add
sub
cld
out
fnstcw
andl
sub
mov
pop
jbe
test
test
xor
adc
repnz
imul
fld
test
xchg
mov
jb
aas
ds
cmp
lods
xchg
repz
sahf
xchg
add
mov
xchg
scas
mov
stos
xchg
xor
loope
mov
xor
dec
gs
lahf
jnp
fbstp
pop
xchg
cmpsw
pop
dec
outsb
imul
jnp
cmp
add
sub
push
xor
lods
dec
xchg
mov
mov
mov
and
mov
test
sub
gs
inc
es
stos
in
dec
adc
outsb
lret
or
xchg
js
insb
or
imulb
hlt
dec
je
outsb
jnp
add
sbb
mov
push
add
xchg
push
mov
loopne
dec
fs
popa
dec
push
mov
pop
mov
mov
inc
fadd
add
dec
sub
pusha
inc
clc
adc
mov
push
add
sti
movsb
divl
xchg
add
mov
push
dec
inc
hlt
or
adc
push
jecxz
mov
dec
push
cmpsl
outsb
inc
hlt
mov
cld
fnsave
push
sti
inc
dec
cwtl
mov
jns
das
jmp
ja
daa
das
adc
iret
mov
pop
mov
jp,pn
xor
fsts
adc
adc
xor
xor
shl
std
das
cmp
rcll
pop
xor
sbb
out
add
les
lods
and
js
ja
mov
repz
lahf
test
cmpsl
test
push
mov
test
mov
loopne
mov
std
andl
adc
jb
test
stos
or
push
sub
xor
out
outsb
inc
push
test
shrl
mov
sahf
push
pop
jo
cmp
aaa
jp
cmp
ja
adc
ffree
mov
lcall
push
cmp
pop
rol
pop
pop
adc
test
test
lret
int3
aad
inc
cmp
or
push
aaa
cmpl
mov
mov
mov
mov
loope
out
jg
lea
ja
sub
stc
xor
dec
test
fnstsw
pop
mov
les
xlat
inc
ss
jmp
stc
out
int
outsl
sub
ret
sub
dec
push
mov
call
fcoms
popf
scas
pop
jmp
in
push
cmp
jnp
and
sub
arpl
lock
loope
shl
jl
iret
ret
sub
push
cli
inc
in
mov
cli
jmp
out
cld
loopne
add
lret
push
faddl
jno
fwait
pop
fisttpll
dec
test
pop
loop
fdivrl
lods
aam
aam
loopne
mov
ret
cmp
pusha
ret
enter
or
fs
mov
pop
xchg
pop
add
xorl
mov
xor
xchg
subl
mov
add
adc
int
jbe
popf
std
push
sbb
or
xlat
push
leave
inc
out
xchg
jg
pop
daa
adc
cmp
add
cmpb
out
mov
jno
cmp
xchg
add
test
mov
inc
sbb
inc
cmpb
and
aas
add
sbb
aam
mov
rclb
mov
xchg
inc
loope
inc
sbb
xchg
dec
incl
adc
incb
mov
fisubs
mov
jp
sub
ror
mov
sarl
push
adc
and
iret
cmpsl
xlat
jo
pop
lret
lock
adc
mov
adc
mov
cmp
push
jo
xor
mov
insb
imul
pop
cvtdq2ps
jp
xor
notl
js
pop
mov
inc
data16
ljmp
mov
inc
xchg
shrb
ljmp
insw
pop
xor
dec
pop
enter
pop
out
movsb
mov
xor
ficoms
add
inc
cmp
insl
rorl
loope
jbe
pop
jmp
pop
add
and
leave
mov
stc
fwait
or
or
repnz
aas
xor
inc
xlat
test
repnz
cwtl
test
popa
shrb
ja
mov
pushf
pop
movsb
and
or
or
out
xor
fucomp
push
dec
lods
leave
mov
das
roll
out
jge
cld
dec
cmp
mov
push
mov
test
gs
ds
and
add
pop
rcrb
repz
sub
mov
push
xor
cmp
lods
xchg
cmp
or
enter
stos
or
out
or
push
xor
push
dec
xchg
hlt
pop
or
int3
push
mov
bound
cmpsb
mov
mov
sbb
repz
lcall
daa
mov
aas
mov
movl
xor
scas
ficompl
sub
pop
and
roll
into
cmpsb
js
or
ror
lcall
popw
dec
ljmp
cmp
adc
cwtl
es
into
pop
cmp
in
jns
pxor
pop
stc
sti
and
setae
test
pop
dec
in
xlat
jae
jle
out
mov
imul
xchg
sbbl
cmpsb
sub
rorl
cld
mov
add
cltd
iret
pusha
push
pop
sbb
push
jg
cmp
mov
mov
insl
dec
sub
aad
jle
andps
lds
std
sarb
cwtl
cmp
cmp
fwait
mov
pop
inc
xchg
fildll
pushf
dec
rorl
pop
shlb
fbstp
fisubrs
jp
inc
lahf
jbe
push
sbb
ret
lret
rorl
cmpsb
dec
test
dec
loopne
decb
xchg
mov
push
push
sub
arpl
jno
jns
test
push
inc
and
add
pushf
std
nop
pusha
in
inc
divb
mov
adc
bound
push
enter
aas
jmp
cmp
push
mov
fdivrs
sbb
repnz
jecxz
mov
jp
push
mov
mov
sub
pop
push
push
xor
int3
add
jecxz
rcrl
cmp
push
mov
sti
lret
test
popa
mov
loop
pop
mov
scas
test
pop
cs
lret
push
or
in
fnstsw
dec
pop
mov
xor
xchg
scas
cld
jle
pop
insl
pop
dec
sbb
mov
jnp
cmp
mov
xchg
push
enter
inc
xor
lods
inc
shll
adc
call
or
pop
outsb
ljmp
mov
aas
inc
rep
popl
mov
push
inc
dec
jmp
pop
into
out
sbbb
pop
mov
dec
pop
fsubr
es
xchg
cmpb
in
sahf
pop
cmp
leave
push
cmpsb
sub
add
cli
push
iret
sbb
fistl
pop
insb
pop
lret
inc
push
lods
fldl
aad
dec
addl
inc
je
lret
andl
adcb
mov
mov
inc
mov
mov
sub
fiadds
push
lods
leave
jb
inc
xchg
cmp
jne
popf
scas
aad
jbe
sahf
dec
cmp
pop
cmp
mov
inc
out
or
dec
cltd
mov
loope
sarl
in
xor
xchg
push
and
mov
jbe
call
fsubr
iret
add
and
or
adc
mov
pop
xor
mov
mov
pop
inc
aaa
add
sub
xchg
dec
idivb
sub
rorl
cmp
filds
xchg
xchg
leave
jo
cmpsl
jp
loop
push
xor
and
mov
pop
mov
test
xor
fldt
sbb
mov
repz
mov
add
add
jecxz
and
add
pushf
mov
xchg
mov
or
js
push
imul
aam
xor
movsb
lods
mov
jge
les
ret
rcrb
jmp
cmp
push
mov
xchg
incb
dec
mov
xlat
gs
jb
fiadds
test
dec
jle
adc
fildll
cmpsl
test
lods
imul
xchg
movsb
ret
into
push
int
loopne
jno
je
sbb
jg
jb
xor
inc
mov
aad
ss
popf
or
jno
dec
pop
dec
fdivrp
pop
rcl
add
in
cmp
sti
or
or
xchg
sub
sti
lcall
cltd
pop
enter
dec
daa
cmpl
imul
repz
addl
push
pop
push
shl
mov
add
das
je
cmpsb
sub
stos
cmpl
rorl
jge
mov
push
movsb
cmpsb
inc
sub
xchg
jle,pn
adc
clc
nop
xchg
out
xchg
mov
or
in
aad
mov
push
movsb
pusha
jns
push
pop
inc
xor
cmp
call
and
or
sbb
lods
or
jmp
sbb
pop
pop
sub
push
add
into
les
mov
pop
fwait
xchg
sbb
adc
repz
sahf
jl
xchg
sub
ja
xchg
aad
push
inc
mov
adc
cmpsl
fcmovbe
xchg
push
int
xor
lds
xor
rorl
or
inc
cmpsb
mov
xor
sbb
les
push
mov
xchg
sub
adcb
mov
aam
shrd
pop
mov
test
push
bound
fbld
imul
stc
mov
xor
adc
mov
fst
jmp
cmpsb
push
out
lea
sbb
xor
pushf
sub
pop
mov
ret
add
cmpb
loopne
push
jno
pop
inc
aad
stos
cltd
jno
mov
cwtl
cmp
orb
or
mov
mov
sahf
data16
jmp
xchg
imul
int3
insb
jge
xor
test
add
push
inc
dec
sbb
adc
js
fistpl
decl
scas
jl
mov
lea
pop
movsl
lret
sbbb
arpl
lock
enter
xor
fcoms
dec
inc
mov
adc
lods
cmp
imul
adc
jecxz
push
aad
jmp
cmp
insl
xchg
push
stos
cmp
lcall
adc
cltd
mov
ret
add
cmc
enter
jge
push
lds
fmull
mov
imul
in
cmp
mov
out
popa
fsubr
sti
fadd
pop
scas
mov
or
popf
daa
dec
out
mov
mov
daa
pop
out
adc
jl
sub
lahf
pop
cmp
ret
in
arpl
mov
mov
push
mov
imul
hlt
addb
fdivl
inc
in
gs
adc
enter
mov
ljmp
add
mov
xorl
ret
sub
pushfw
dec
mov
int3
int3
sbb
xchg
push
or
aam
add
jns
mov
pusha
fstps
adc
shl
dec
popf
movsb
cmpsl
ja
adc
out
jl
outsl
mov
mov
test
sub
add
mov
mov
and
jae
and
cmpsl
push
dec
push
inc
jnp
lahf
sbb
scas
and
mov
and
or
vmread
arpl
mov
push
insb
stc
push
pop
adc
arpl
fidivs
xor
hlt
data16
lock
jbe
xlat
and
roll
in
mov
mov
xchg
xchg
cmp
dec
stos
stos
and
adcl
fildll
shlb
mov
ffreep
scas
int3
pop
arpl
sbb
je
test
bound
pop
push
movsl
xor
scas
add
push
jecxz
nop
outsl
mov
fisubl
xchg
fsubl
dec
enter
fidivrs
dec
jecxz
int
sbb
push
mov
pop
bound
and
gs
and
mov
lock
std
mov
cmp
mov
mov
mov
add
add
xchg
xchg
sbb
and
lds
out
test
mov
dec
scas
fistps
popf
fildl
sub
test
call
in
adc
pop
and
cli
lret
pop
adc
mov
xchg
mov
xchg
mov
idivl
rcll
adc
lahf
sub
loopne
rcr
adc
ret
lods
dec
mov
jecxz
pop
ljmp
push
das
and
stc
inc
mov
in
mov
in
sub
and
andb
inc
push
lea
cmc
pop
cmpsb
into
push
fdivrl
sbb
iret
ret
jl
int
pop
aas
adc
ja
inc
pop
mov
rorb
test
jnp
bound
aad
inc
jge
lods
xor
loope
repz
cltd
pop
jb
sub
jmp
mov
add
sahf
sbb
add
dec
cmc
pop
adc
jne
pop
and
ss
lcall
sbb
push
jb
push
or
loope
push
push
dec
rcr
push
xor
loop
mov
and
lods
pop
imul
mov
rolb
and
call
fucom
xchg
pop
mul
test
stos
cmp
repz
andl
pcmpeqw
je
and
add
daa
push
mov
leave
dec
jae
gs
repnz
add
jl
std
shlb
adc
adc
jecxz
xchg
outsl
pop
insl
outsb
je
aaa
adc
gs
dec
add
cmpsb
pop
cs
out
pop
inc
insb
idivb
or
jbe
loope
xchg
fucom
jg
out
fisubs
addr16
push
inc
cwtl
pusha
fidivs
fsubp
jb
popa
jg
sbb
out
shl
mov
or
aaa
jl
ljmp
cld
popa
loopne
sub
sub
push
sub
mov
js
in
or
clc
leave
imul
pmuludq
in
sbb
out
add
xchg
and
movsb
jbe
push
in
xor
xchg
sbb
lret
push
inc
sti
pop
aam
lcall
js
adc
dec
inc
mov
jmp
std
sub
sbb
mov
pop
jp
jne
or
cmp
mov
mov
sti
adc
and
daa
or
jecxz
loop
sub
push
adc
loop
mov
dec
out
shll
sahf
inc
stc
push
xchg
shr
jmp
xchg
push
fcmovnu
fmull
adc
xchg
mov
adcl
mov
sbb
push
cmpsb
lods
add
stc
pop
cmp
jmp
pop
sub
fstpt
out
adc
insl
cmp
jl
mov
jecxz
inc
pop
xchg
and
das
stos
push
popf
arpl
jnp
and
mov
cmp
jp
jae
mov
jne
mov
ljmp
push
outsb
dec
and
arpl
mov
jne
mov
or
inc
inc
adc
incl
push
mov
negl
mov
lea
mov
das
insl
push
add
cmp
mov
out
clc
mov
sbb
es
loopne
cmpsl
popa
and
in
sub
xor
orl
sub
nop
movsl
cwtl
dec
insb
loop
insb
mov
add
jno
xchg
xchg
in
jnp
mov
mov
fxch
jno
mov
cltd
imul
mov
mov
leave
cmp
fisttpll
sbb
imul
popf
shll
loope
inc
pop
add
lret
jge
incl
adc
ljmp
xchg
cwtl
cltd
subb
pop
repz
mov
add
pop
data16
pop
xchg
xorps
lods
fdivrs
push
mov
iret
inc
fsubs
fdivr
loopne
mov
in
mov
test
dec
stc
dec
or
insb
mov
cmpsb
mov
sbb
rorl
sbb
adc
in
xchg
cld
push
or
outsl
lret
das
in
mov
add
fwait
xchg
add
popf
pop
mov
add
push
xor
lahf
fiaddl
cwtd
dec
imul
subb
add
xchg
pop
cltd
sub
mov
dec
mov
push
aad
dec
nop
jle
out
pop
sbb
and
add
sbb
iret
or
or
das
div
daa
jnp
push
in
lcall
jne
es
ljmp
fcoms
sarl
loop
push
lds
xor
add
shll
xor
int3
fs
dec
pushf
jo
js
push
sahf
jns
jge
jl
lcall
xchg
sbbl
or
rcrb
test
jmp
sbb
mov
pop
les
xor
fsub
push
push
test
fcmovnu
loope
in
jl
add
mov
sar
mov
mov
call
leave
push
cmpsb
loope
enter
lds
outsl
cld
stc
mov
adc
add
in
adc
adc
movsl
mov
popf
test
mov
adc
in
out
inc
dec
mov
loope
mov
adc
push
aam
addr16
sbb
mov
ret
loop
push
ret
push
mov
pop
addr16
sub
mov
pop
dec
js
jnp
or
movsl
jbe
xor
notl
mov
push
sbbl
in
push
dec
lret
mov
or
test
sbb
pop
mov
xchg
mov
rcr
pop
data16
mov
cmp
fbld
out
and
loopne
or
pop
sub
cltd
push
cmp
sbb
in
call
das
push
ffree
jmp
test
repnz
data16
insl
jmp
leave
cmp
je
push
or
lahf
sahf
sbb
in
cmp
rorl
fisttps
data16
xchg
jae
jmp
in
dec
lods
jge
hlt
jnp
in
negb
add
mov
loop
aam
idiv
adc
mov
inc
into
inc
adc
dec
test
rcrb
sub
inc
jl
mov
sahf
pop
sti
pop
outsb
xchg
lcall
xor
xor
out
stos
mov
dec
jecxz
roll
mov
push
xchg
sti
popa
imul
xchg
xchg
mov
loope
xchg
daa
outsl
push
xlat
add
popf
dec
push
inc
bound
cmp
ja
jnp
sarb
or
sub
mov
xor
jno
jmp
in
cwtl
jae
ds
test
sti
adc
loopne
or
scas
movsl
dec
je
popa
sti
leave
push
add
insl
adc
xchg
int
adc
pop
xchg
add
sbb
imul
test
mov
in
jg
je
push
jg
outsl
int
pop
or
mov
push
nop
jle
icebp
add
fldl
xor
inc
xchg
rcll
pop
imul
test
nop
pop
pop
hlt
lds
lock
and
mov
mov
jmp
or
ja
xchg
pop
or
pop
scas
shrb
jge
mov
inc
cmp
mov
add
scas
outsb
dec
enter
aaa
hlt
cmc
into
jl
pop
js
mov
mov
shrl
add
mov
dec
or
mov
xor
xor
aaa
movsl
sub
add
in
pop
iret
addr16
push
popa
xchg
leave
clts
pop
fidivrl
pop
stos
push
jl
lahf
popf
mov
fwait
cmp
sahf
fldenv
push
mov
loopne
imul
push
xchg
cmp
dec
aas
mov
mov
mov
mov
nop
out
outsb
icebp
or
and
cmp
jo
mov
sbb
sbb
jae
mov
push
jle
ret
or
loopne
mov
xchg
mov
outsl
mov
mov
pop
jmp
sub
adc
pop
pop
jmp
in
mov
inc
out
ret
fidivs
inc
xchg
movsb
jl
testl
jl
or
fwait
dec
rorl
push
or
cltd
cld
push
xchg
mov
ss
mov
mov
cmc
sti
pop
leave
lock
mov
fs
jbe
outsl
inc
mov
cmp
mov
ja
push
xor
std
scas
jl
jle
xor
test
jmp
push
and
xchg
cmp
add
inc
faddp
inc
pop
cmc
xor
jne
push
pop
mov
push
dec
cmpsl
paddw
dec
inc
dec
ret
jns
data16
push
mov
add
xor
mov
mov
push
jns
inc
shrl
sbb
mov
inc
sar
xor
fs
xor
adc
mov
mov
mov
in
test
inc
addb
enter
loop
inc
jno
addr16
cld
dec
mov
in
scas
out
sbb
in
sub
insb
out
jecxz
push
push
mov
xchg
test
iret
scas
dec
ljmp
loopne
dec
sub
mov
xchg
jb
adc
jno
mov
std
mov
dec
loopne
adc
fnstcw
lcall
pop
add
mov
jge
das
mov
ljmp
jl
mov
and
dec
ret
es
xlat
bound
xor
ja
and
outsl
popa
in
sbb
nop
outsb
test
ljmp
pop
push
and
xor
lods
ss
sbbl
mov
jnp
into
mov
pop
push
shlb
mov
pop
in
imul
imul
cmp
iret
sub
jp
leave
push
mov
ds
sub
insb
popf
pop
mov
mov
jno
jmp
mov
adc
arpl
jns
cmp
push
and
aad
sub
adc
inc
mov
jecxz
stos
test
jl
mov
pusha
and
insl
push
jmp
jbe
mov
push
sub
popf
sbb
dec
dec
inc
test
js
out
leave
pop
lahf
push
inc
mov
adc
jnp
ficoms
xor
fdivrl
stos
insb
insl
lahf
mov
mov
sti
fcompl
push
repz
jle
dec
mov
sub
cmp
js
in
xchg
pop
or
xor
jae
fldcw
adc
imul
call
add
mov
or
pusha
roll
je
and
fisubrs
mov
cld
xchg
mov
jl
enter
xchg
push
mov
adc
jle
cmc
int
mov
pop
jno
arpl
aad
ss
mov
inc
xchg
cmpsb
jae
or
pop
enter
in
jae
sub
cmp
or
addb
mov
sub
adc
loop
mov
pop
sub
pop
je
sub
dec
push
inc
add
mov
loopne
or
inc
cmp
test
vmovaps
add
nop
sub
xor
mov
jb
jns
adc
mov
in
pop
jo
test
jge
add
pop
mov
jle
jmp
or
scas
xor
cld
js
add
xor
outsl
and
or
ljmp
insb
mov
or
push
mov
loopne
xchg
adc
js
xorl
push
mov
out
inc
dec
pop
lret
mov
push
in
cmpsb
jb
scas
xchg
addr16
sbbb
xchg
idivb
inc
clc
jne
dec
sub
pop
imul
inc
cli
in
out
or
loop
jnp
je
xchg
cwtl
mov
sbb
pop
inc
jmp
mov
popf
mov
push
inc
push
sbb
in
mov
inc
iret
xor
xchg
and
fs
popf
dec
push
insl
imul
jnp
push
cmp
fdivs
dec
mov
push
cld
mov
leave
fildl
xor
jmp
fcomip
lret
outsb
pop
lret
mov
mov
push
ljmp
xlat
test
mov
sub
lods
add
jle
mov
jl
cld
mov
test
lcall
or
loopne
ficoms
or
dec
sub
push
mov
xor
scas
and
or
je
sbb
andb
out
sbb
es
fists
or
xchg
inc
out
inc
call
int3
mov
repz
out
mov
jo
add
pushf
mov
gs
loope
leave
dec
xor
test
push
pop
jge
or
cltd
lahf
out
jno
sbb
and
xor
jbe
int3
inc
jb
sbb
scas
mov
inc
mov
and
scas
inc
xchg
dec
push
repnz
lea
sub
repnz
mov
je
inc
sub
xor
testb
ja
insl
in
inc
movsb
pusha
cmp
mov
or
and
mov
adc
je
pop
in
sti
ljmp
icebp
or
test
lds
push
daa
mov
adc
cmp
xchg
adc
dec
lods
xchg
pop
dec
inc
pop
jl
mov
sbb
and
gs
mov
push
mov
sub
fsts
xor
xor
jecxz
mov
sahf
scas
xchg
xchg
lds
sub
andl
pop
pushf
outsb
call
stc
ret
mov
inc
jge
test
adc
iret
sbb
arpl
movsb
inc
add
nop
cmp
andb
sahf
or
dec
or
cltd
cmp
jle,pt
into
mov
rcrl
pop
ja
daa
mul
xor
add
popf
bound
stos
stos
sar
lea
mov
mov
pop
push
push
dec
mov
xor
sub
in
popa
push
pushf
jge
add
xchg
and
mov
inc
scas
jae
or
cli
cli
ja
and
xchg
xchg
out
mov
mov
dec
lcall
add
int3
js
adc
rorl
subb
sub
ds
stc
pop
arpl
push
ret
rclb
and
mov
aam
jb
add
cmp
ds
popa
sub
fs
test
push
mov
in
inc
jmp
add
mov
fisttps
push
mov
test
das
stc
out
scas
mov
subl
pop
sbb
sahf
mov
add
xchg
adc
mov
fdivrs
sbb
and
xor
stc
stos
pusha
andb
xchg
and
test
add
stc
sub
popa
cwtl
pop
xchg
xor
ds
out
ret
dec
dec
sbb
xlat
adc
pop
fistps
push
jecxz
push
and
dec
pop
rorb
jp
push
sti
roll
mov
and
sub
inc
inc
inc
xor
hlt
inc
add
cmp
stc
sbb
aaa
ja
ss
ss
cmc
pop
pop
xchg
jb
loopne
loopne
mov
pop
mov
leave
mov
add
ja
mov
cmp
cmp
lret
movsb
pop
add
bound
les
ret
pop
cmp
int3
mov
movsl
mov
add
jnp
stc
cli
in
pop
push
in
fsubrl
stos
mov
mov
fmull
pop
out
dec
pop
mov
loop
sbb
cmp
and
popf
xor
iret
xchg
lock
aas
and
sub
push
xchg
test
test
mov
lods
scas
leave
rorb
sbb
in
aaa
push
sbb
sub
int3
es
roll
push
adc
xchg
lea
and
add
and
jbe
push
cwtl
mov
inc
add
mull
xor
push
lcall
fldt
pushf
jae
in
dec
iret
push
int3
push
pop
push
ja
div
mov
scas
div
fistpl
sbb
out
bound
stos
ljmp
sub
leave
jbe
popf
and
test
sbb
pop
movsl
js
cmp
cmc
nop
cmp
and
loopne
packuswb
xchg
dec
dec
imul
lret
xor
cmpsb
fcmovb
pop
xchg
out
push
int
jnp
pop
fbld
and
sub
xchg
jp
and
or
shll
or
in
or
lea
pusha
jne
loop
pusha
mov
sbb
mov
xor
push
dec
sbb
cmpsb
sbb
mov
cli
jmp
test
push
xor
jp,pn
rcll
cmp
cmp
push
rcl
aaa
dec
mov
outsl
je
jo
pop
xor
les
jnp
cwtl
fldcw
xor
mov
mov
lods
loope
ret
and
mov
mov
sub
push
mov
movl
adc
add
pop
ss
xchg
rorb
jle
cmp
cld
cmc
std
insl
pushf
stos
push
jo
dec
or
inc
nop
push
lret
or
movsl
xor
push
pop
mov
subl
rclb
clc
cwtl
aas
sub
sbb
int3
stos
pusha
loopne
add
or
bound
or
shll
mov
enter
dec
and
pop
pusha
pop
int3
push
inc
test
out
mov
jns
movsb
gs
mov
dec
lds
cmpsb
les
xor
lcall
sbb
aad
jmp
sarl
xchg
pushfw
jne
mov
add
ror
xor
push
push
xchg
enter
fmuls
movb
dec
popa
andb
inc
or
insl
dec
out
cmpsl
sbb
aam
push
inc
jno
cs
adc
xor
dec
mov
push
mov
xor
add
mov
push
inc
mov
sub
mov
gs
pusha
outsb
js
jmp
dec
icebp
adc
imulb
jmp
pop
inc
push
push
int3
push
and
add
mov
fdivl
dec
dec
adc
push
fs
add
and
push
sub
dec
movsl
sub
mov
imul
push
sbb
out
xchg
pop
pop
sub
cmc
add
jnp
out
sbb
sub
loopne
pop
lret
add
cwtl
sar
dec
cmp
test
mov
mov
shlb
out
and
into
jne
mov
mov
xor
pop
aas
push
ljmp
or
in
insl
dec
or
cwtl
shrb
and
adc
movsl
sti
clc
shrl
and
add
pop
aaa
push
jae
and
leave
sarl
cwtl
xchg
data16
mov
fwait
test
add
xor
mov
xchg
mov
lods
clc
movsb
mov
pop
xor
adc
aad
lcall
inc
je
ror
xchg
jb
cmp
mov
xchg
push
js
and
stos
popa
fimuls
int3
call
fistpl
pop
xchg
in
cmp
push
sahf
aam
or
stos
adc
sbb
jmp
xor
scas
lret
jb
fsubr
repnz
push
dec
lahf
shlb
cs
mov
iret
dec
lds
rol
or
jne
std
dec
mov
cmp
cld
mov
sti
push
add
lds
popa
or
sbb
ret
fisttps
sbb
sub
xchg
pop
insb
mov
popf
out
add
add
push
xchg
faddl
stc
inc
test
fdivrs
test
mov
push
and
and
xchg
mov
mov
xor
mov
out
jl
push
out
sub
cli
cltd
mov
imul
jecxz
repnz
and
scas
mov
dec
test
sub
iret
in
xchg
fwait
ss
push
mov
mov
cltd
dec
mov
cmpl
loopne
or
cmc
fxtract
xchg
pop
orb
test
int3
xchg
les
pmulhuw
sahf
nop
into
push
rolb
sbb
xor
add
sub
pop
and
icebp
std
xchg
lahf
dec
out
pop
push
pop
pop
in
jae
gs
xchg
roll
out
imul
sti
xor
cmp
xor
subb
lock
mov
pop
mov
in
and
out
movsl
cmpsb
xchg
repnz
int
pop
in
pusha
rcrb
cmpsl
aad
mov
fs
sub
mov
imul
stos
cli
sub
jae
mov
xlat
outsb
test
push
adc
stos
mov
fnsave
inc
sub
mov
sbb
pop
jge
and
ljmp
mov
or
pop
xchg
inc
inc
sbb
into
lret
jo
inc
cmp
in
mov
andb
outsb
or
std
sub
jmp
or
dec
insb
or
xchg
aam
mov
test
pop
jb
and
int
ret
xchg
sbb
xor
adc
adc
cmp
push
xchg
pusha
es
rcr
rcrl
cmp
out
adc
nop
popa
repz
sbb
int
mov
adc
and
dec
mov
sbb
dec
ret
mov
push
cli
xchg
mov
xchg
sub
dec
arpl
inc
sahf
inc
add
mov
orb
es
push
lods
inc
popa
xor
out
testb
pop
cmp
pop
std
pop
inc
cmp
xchg
dec
pushf
out
xchg
ror
pusha
inc
call
mov
xchg
jnp
cwtl
adc
lods
mov
testl
insl
jae
clc
fsubrl
push
xchg
jg
mov
imul
iret
icebp
cmpsl
and
add
ror
inc
dec
int3
loop
cmp
andb
incb
leave
sbb
fnstenv
mov
cltd
mulb
flds
and
or
pop
pop
push
sbb
sub
xor
cmp
pop
into
pop
test
dec
pusha
loop
dec
pop
cmp
pop
push
movsl
xor
inc
pusha
jecxz
xor
fucomp
inc
push
push
mov
fmulp
cwtl
into
cmp
jo
push
subl
sub
jp
sub
sub
fnstenv
popa
repnz
xchg
push
and
jno
pushf
jmp
xor
mov
mov
lret
es
mov
loope
arpl
dec
mov
lods
cmp
mov
xchg
into
lcall
and
cmp
fstpt
cmpsl
sbb
and
sar
mov
pop
push
stos
arpl
jg
lods
ret
loopne
cmp
mov
cmp
push
pop
and
lods
aam
mov
shll
or
je
add
in
mov
and
and
push
xchg
icebp
rcl
cmp
out
orb
jp
andl
lods
fstpt
out
sarb
fwait
add
popf
movsb
or
jmp
dec
add
sub
daa
inc
dec
sahf
ss
in
cwtl
adc
dec
int3
stos
pop
mov
jo
mov
sub
jmp
xor
add
mov
lcall
cld
out
cmp
out
decb
and
jle
pushf
lcall
mov
in
xor
cmp
mov
xlat
or
bound
sub
push
fs
dec
ret
mov
jne
popa
push
add
mov
sbb
ja
leave
lret
mov
mov
inc
iret
ret
lods
bnd
les
lahf
sub
sti
pop
insl
lret
mov
jge
xchg
push
jge
gs
loop
mov
fstpt
jmp
push
mov
push
jns
je
mov
icebp
movsb
inc
jae
cmp
stos
rolb
ror
push
dec
scas
lods
jb
and
jmp
sbb
lret
add
movsl
pop
jmp
xlat
bound
xchg
mov
inc
lock
xorb
mov
xchg
sbb
add
mov
gs
int3
call
loopne
out
cwtl
stos
sbb
push
cmp
and
fidivrl
cmp
mov
inc
sti
insl
repnz
and
movsl
pusha
inc
std
pop
push
mov
pusha
mov
fmull
adc
pushf
push
dec
adcl
xor
fiadds
sbb
lock
test
push
and
roll
shll
push
push
dec
mov
leave
sub
outsb
mov
loope
jecxz
xor
jns
sti
add
inc
lods
fadds
dec
fidivrl
and
insb
int
xchg
outsl
cld
out
test
ret
test
nop
fs
or
mov
pop
idivb
xchg
and
cmp
adcb
or
jns
mov
sub
push
sub
bound
mov
jg
dec
push
jb
pop
aam
mov
aam
test
pop
iret
push
pop
lds
sbb
xor
std
dec
mov
negb
jle
in
mov
xchg
pminsw
insl
stos
ret
push
or
pop
test
and
rorl
fsubrs
and
xor
test
adc
jns
mov
cmp
xchg
xchg
mov
ss
rclb
enter
sub
fldenv
inc
fldenv
scas
cmp
pop
out
inc
cltd
imul
mov
loopne
js
add
xchg
ljmp
ret
jge
mov
xchg
fcoms
push
cmpsl
cmp
hlt
push
mov
cld
pop
test
or
add
sarl
repnz
test
movsb
ds
lods
dec
out
pop
push
sbb
xlat
mov
cltd
xor
xor
test
pop
add
movsb
lcall
sub
mov
cmp
rcl
mov
test
adc
adc
aaa
push
pop
push
sub
and
adc
xlat
cmp
sahf
jp
mov
ljmp
lcall
pop
test
ds
nop
inc
in
jne
das
xor
mov
push
sti
jle
mov
enter
mov
inc
sub
mov
fwait
mov
ror
loop
mov
push
fldcw
and
cmc
negl
mov
jmp
mov
push
push
std
dec
mov
out
cwtl
stc
mov
daa
cmpsl
push
outsl
stos
mov
add
push
mov
add
mov
iret
xchg
sbb
cmp
mov
sub
fildll
into
enter
mov
aas
ss
jb
repz
sbb
mov
outsb
ljmp
jno
pop
testl
mov
sbb
div
test
sbb
push
and
fs
push
jmp
sub
cwtl
movb
fcompl
fwait
sub
movsl
sub
jae
inc
xor
cld
mov
or
rclb
mov
ljmp
mov
sarl
or
ja
arpl
cmp
lret
imul
mov
or
lods
xchg
rcrl
add
movsl
add
pushf
ret
xlat
push
adc
popf
int3
and
in
jns
mov
adcb
mulb
fmuls
std
rclb
imull
fsubs
sub
xchg
fs
push
in
scas
call
adc
mov
cmpl
insl
sbb
push
ja
fimull
xchg
push
lock
pop
iret
adc
hlt
shrl
sti
mov
mov
and
roll
or
pusha
test
sbb
push
aad
dec
pushf
sti
imulb
scas
lret
jo
cmp
pop
or
mov
mov
incb
icebp
inc
fimuls
aaa
xor
xchg
push
into
jno
cli
in
imul
jae
mov
lret
decb
pusha
cmp
fldenv
out
les
mov
cltd
fimuls
xor
dec
cmp
mov
ja
arpl
enter
test
stos
and
in
fildl
sbb
call
mov
je
pushf
ror
cld
aaa
mov
mov
or
out
xchg
pushf
sbb
and
fucomi
icebp
shlb
gs
or
pop
je
pop
xchg
daa
fisttps
cli
adc
xor
imulb
push
repnz
add
jg
shlb
pop
and
sub
movsl
sub
push
and
mov
int
ds
jb
xchg
js
jp
pushf
shrb
jbe
or
xor
pop
ljmp
add
movsl
fsts
jb
ss
lcall
fwait
ljmp
cmp
xchg
outsl
fcomip
and
sbb
fldt
stc
xchg
cld
sub
fstpl
stc
pop
ljmpw
test
movsb
ja
push
adc
cmpsl
fsts
inc
ret
mov
std
testl
aas
add
mov
push
pop
sbbl
in
lahf
push
call
mov
adc
xor
arpl
adc
push
xchg
std
add
movsb
in
cmp
rcll
cmpsb
mov
aaa
and
imul
sub
lea
mov
sub
xor
pushfw
mov
jo
lods
xchg
fadd
xor
pop
mov
iret
orb
mov
dec
jp
dec
lcall
add
mov
dec
mov
ret
mov
movsb
pop
shrb
sbb
ret
inc
and
adc
loopne
inc
push
je
or
xchg
adc
lahf
imul
imul
sub
dec
mov
mov
cmp
out
fistpl
add
mov
jle
inc
jno
inc
fdiv
rcrb
repnz
xchg
iret
sbb
out
xchg
je
sbb
aas
add
and
and
dec
stos
sub
mov
dec
add
push
shll
inc
push
ffree
fnsave
iret
add
in
mov
movsl
xor
dec
rcrl
aam
addr16
cmpsb
fst
adc
cmp
sbb
mov
and
pop
pop
loope
mov
je
push
adc
jnp
cmc
ret
pushf
or
hlt
stos
push
mov
fistpll
cs
bound
adc
loopne
aad
pushf
sbb
adcb
mov
add
xlat
in
jo
pop
sub
sbb
sub
lcall
sbb
mov
push
rorb
dec
adc
les
push
nop
jg
ror
cwtl
imull
push
cli
jg
and
push
out
nop
mov
jl
sar
and
cmp
leave
push
push
inc
jmp
in
aam
fildl
mov
daa
loop
sub
sub
add
stc
inc
or
jns
out
mov
or
push
sti
sti
inc
fmull
xor
add
lds
iret
sbb
ret
out
sub
add
cmp
mov
push
repnz
daa
cld
movsb
xchg
frstor
jl
and
ds
aad
popf
loopne
dec
iret
mov
stos
ja
fucomip
mov
sbb
iret
pop
mov
cmp
stos
xor
jnp
lock
lret
sbb
mov
ret
add
mov
lods
fnstenv
or
pop
xchg
mov
pop
mov
incl
lods
mov
movsl
outsb
shl
push
fstp
lahf
cmpsb
mov
out
orl
dec
xchg
xor
push
ret
aas
notl
mov
jae
pushf
dec
cmp
mov
push
and
fld
jecxz
out
mov
xchg
movsl
dec
popa
dec
je
gs
xor
dec
cmc
cmp
xchg
loopne
dec
je
or
mov
lods
out
pop
cmpsl
sti
adc
cmpsl
push
js
inc
sbb
rolb
xor
push
outsb
inc
ja
pushw
pop
inc
cmovl
or
cwtl
hlt
dec
jp
rcl
pop
push
dec
lds
pusha
loopne
cs
insb
mov
je
cmp
outsb
int3
xor
lods
call
mov
dec
sbb
sti
movsb
lret
cmpsl
andl
dec
xor
mov
aaa
and
orb
out
push
pop
leave
pop
pop
mov
loope
js
dec
jns
push
xchg
out
sbb
xchg
stos
jl
jecxz
ja
lcall
and
jnp
lret
addr16
pop
jnp
arpl
fmull
sub
shrb
loope
arpl
scas
xor
push
pop
adc
xor
push
push
jne
cwtl
bound
cli
in
shrl
add
pusha
mov
mov
js
cmp
pop
stos
and
lahf
jge
sbb
sub
pmullw
and
fcomps
xchg
pusha
fadd
popf
in
stos
mov
dec
adc
inc
incb
xchg
ljmp
out
jle
mov
add
push
les
xchg
int3
out
xor
mov
mov
lret
pop
aad
fstpl
into
pop
inc
aas
push
xchg
sbb
or
mov
sahf
mov
ja
xor
addr16
dec
out
cmpl
sbb
push
xor
into
aam
sbb
push
movl
fdiv
push
xchg
adc
in
cmc
shrl
dec
das
inc
mov
add
inc
into
enter
pop
or
add
fwait
xlat
mov
mov
mov
ffreep
iret
and
jg
gs
fldl
dec
in
add
nopl
xor
add
pop
adc
sbb
movsb
push
inc
mov
mov
jmp
inc
pop
add
mov
pop
pop
adc
fadds
and
pop
push
jae
and
or
mov
cld
jecxz
pop
ss
push
popa
mov
xchg
sub
xchg
mov
cld
ja
filds
sub
int
jle
cmc
dec
dec
push
mov
pop
loope
cmc
cs
ljmp
xlat
sbb
fcomps
stos
sbb
mov
imul
stos
push
sbb
push
pop
or
sub
mov
adcl
cwtl
jo
fmuls
cltd
sub
xchg
sbb
push
push
or
sbb
adc
pop
pop
in
pop
cmpsl
addr16
pop
and
mov
and
jae
mov
mov
xchg
push
push
test
daa
and
mov
or
arpl
or
push
pop
cmp
ja
lret
dec
jbe
pop
jecxz
xchg
nop
test
cmp
xor
cld
in
jecxz
insb
and
cmpsl
jb
pusha
lods
mov
pusha
insl
mov
xchg
mov
xor
mov
ret
cs
imul
sti
mov
lret
or
gs
mov
faddl
ss
lahf
pushf
mov
shll
inc
test
shll
push
int
out
je
xor
ds
xlat
lock
cs
push
and
sarl
xor
cmp
jmp
sub
ret
shl
xchg
push
in
into
repz
loope
push
lret
dec
rorl
jnp
pop
adc
std
lods
inc
ja
scas
rep
call
cmp
add
outsl
xor
or
out
fwait
insb
fiaddl
or
jmp
mov
call
sub
xchg
cmp
push
mov
mov
outsb
jmp
cli
ja
cmp
push
mov
leave
jno
dec
das
mov
cmpsb
or
mov
ja
jecxz
mov
bound
addb
out
jl
jae
mov
rcl
sahf
xchg
push
fnsave
mov
mov
je
xchg
xchg
xchg
mov
or
push
dec
xor
insb
mov
ljmp
out
dec
out
mov
cmp
in
repnz
lahf
sub
lods
xchg
std
sub
or
push
lods
fucomi
adc
fnsetpm(287
mull
dec
cli
xchg
imul
mov
arpl
inc
out
or
add
dec
inc
cmp
jne
std
fisttpl
pop
cli
mov
push
nop
push
inc
pop
xchg
sbb
stos
sbb
mov
jo
fidivs
jns
mov
out
mov
jmp
lcall
push
pushf
sub
lcall
mov
jcxz
or
in
ficoml
pop
cmc
xor
out
jmp
add
or
lea
mov
cs
pop
stc
pop
xchg
aaa
in
repz
xor
rorl
addr16
scas
test
mov
sbb
mov
mov
and
fisubrl
sub
shl
or
out
fs
cs
pop
je
cld
pop
push
dec
je
in
stos
jecxz
mov
or
icebp
adc
push
aas
rol
sub
pop
pop
shll
cmp
pushf
mov
adc
and
push
outsb
dec
inc
dec
xchg
imul
pushf
and
inc
push
mov
iret
adc
dec
enter
andb
or
enter
mov
out
leave
or
mov
mov
je
mov
cld
int
inc
insl
mov
adc
and
sbb
repnz
int
adc
jmp
jne
xchg
dec
lea
adc
dec
xchg
push
stc
in
and
pop
psrlq
stc
shrb
idivb
in
lock
push
push
sub
mov
cmp
xchg
sbb
rolb
pop
dec
fnsetpm(287
sub
sub
dec
xor
cli
push
mov
loop
xchg
insl
mov
inc
push
call
pop
pop
int
lods
cld
stos
pop
xchg
push
xchg
scas
push
cs
sub
or
inc
jb
add
fs
inc
dec
sub
out
sub
arpl
cmp
sub
js
xchg
fistpl
arpl
addr16
insl
mov
lahf
clc
aad
push
xor
shlb
add
mov
gs
push
cli
fs
movq
test
inc
cld
outsl
mov
cmp
add
fs
call
cmpsl
cwtl
cmc
adc
fninit
daa
sub
mov
cmpb
cld
inc
mov
inc
inc
mov
lret
push
adc
out
je
lds
cmp
inc
std
sbb
ficoml
mov
in
jge
rol
xchg
gs
test
test
jle
sbb
sbb
xchg
leave
mov
push
dec
inc
out
xchg
lods
lods
addr16
das
sti
adc
pop
sub
mov
jne
add
popf
into
mov
das
in
ss
cmpsl
or
push
out
mov
xchg
sbb
sub
pop
push
fimull
xor
scas
scas
xchg
mov
loope
pop
sub
inc
push
pop
int3
mov
dec
mov
lods
cmp
add
les
jbe
cmp
mov
inc
imul
sub
enter
dec
jp
mov
dec
movsb
mov
shlb
rclb
inc
loope
aas
pop
fwait
mov
icebp
inc
mov
fsubrl
les
stos
mov
push
xor
pushf
outsb
cmp
daa
mov
outsl
sbb
test
inc
es
push
jmp
mov
icebp
fwait
dec
fisttpl
es
loope
iret
sbb
push
sub
mov
jmp
clc
rcrb
std
xor
mov
xchg
popf
mov
cmp
mov
inc
xor
fdivrs
sbb
push
stos
push
mov
lods
std
pop
pushl
mov
imull
adc
mov
push
sbb
dec
nop
and
push
xor
mov
push
jmp
pop
cli
adc
push
mov
sti
addl
push
cmc
lret
mov
push
inc
shl
dec
adc
xor
pushf
jecxz
lret
loopne
stos
push
int
ljmp
gs
push
movsb
and
data16
jle
and
jecxz
jg
das
push
lock
mov
jl
das
mov
cmp
push
xor
inc
push
cld
nop
mov
and
cmp
xchg
lock
pop
aam
out
out
aad
add
mov
push
orl
jns
fs
dec
test
sahf
and
adc
stos
adc
mov
push
nop
cwtl
adc
mov
inc
inc
sub
dec
cmpsb
adc
pop
and
sub
test
cmp
xchg
mov
inc
sub
mov
mov
gs
xchg
es
sub
fstpt
test
mov
lcall
mov
cmpsl
inc
repz
push
pop
add
sbb
nop
and
dec
lret
jb
addr16
mov
mov
dec
xchg
and
out
mov
cmp
mov
mov
and
sar
pop
movsl
outsb
test
add
fmull
movsl
mov
imul
push
ljmp
outsl
cs
ret
mov
loope
idivl
xchg
in
inc
push
movsl
sub
std
fdivl
mov
sar
jns
imul
jmp
das
std
in
iret
pop
fldenv
in
int3
pushf
xor
push
fisttps
adc
cmc
adc
mov
mov
cmpsb
fsubrl
jns
imul
test
xlat
pushf
and
mov
sbb
mov
pop
adc
sahf
push
dec
lock
xor
lock
jle
xlat
mov
sub
inc
imul
xchg
pop
outsb
mul
xor
and
pop
jmp
dec
aam
loopne
fidivl
orl
mov
sti
mov
jmp
pop
inc
mov
add
or
adc
inc
movsb
sti
out
mov
xor
cmpl
push
xchg
jecxz
or
cmp
xchg
cli
lods
mov
xchg
xlat
or
call
jb
in
push
xchg
in
sub
sbb
sahf
inc
enter
scas
xor
xor
push
sbb
push
jno
cmp
mov
enter
xchg
fcompp
cmp
cli
jmp
fs
movntps
mov
mov
imul
sbb
movsb
push
icebp
insl
push
pop
orb
arpl
cld
aad
sbb
mov
repz
jo
cltd
adc
movsl
mov
push
jg
xchg
out
jmp
pushf
daa
popf
pop
test
loopne
dec
mov
xor
and
push
fs
outsb
or
aam
adc
xchg
xchg
inc
push
out
shrb
mov
xor
push
fwait
pop
fstpl
add
inc
lahf
push
out
lock
jbe
jbe
mov
xchg
mov
cld
data16
mov
push
xchg
lret
in
stc
mov
pop
sub
stc
clc
lret
lds
mov
clc
pop
xor
push
cwtl
pusha
divl
imul
push
xor
divb
sub
movsl
fldt
pop
pop
add
sub
pop
jg
sbbb
add
inc
fcoms
push
mov
cmp
mov
push
jl
xlat
popl
mov
push
in
mov
pop
jge
lret
mov
lock
jl
scas
out
mov
and
jg
fstps
adc
outsb
fcmove
sti
mov
icebp
add
stos
pop
and
push
test
lcall
call
push
xchg
clc
pop
jne
shrb
test
ljmp
mov
pushf
lock
add
shll
xor
sub
dec
inc
mov
in
pop
clc
in
jns
mov
ficompl
cli
outsl
and
lods
cmp
lea
lcall
push
ja
push
psubusb
mov
addb
sbb
adc
add
push
hlt
pop
lcall
ds
cwtl
mov
mov
inc
stc
and
and
mov
and
cmpl
popa
jnp
cltd
mov
mov
mov
pop
push
cmp
push
shl
test
mov
lds
push
cmpsl
outsb
stc
addr16
mov
and
jmp
test
xlat
std
imul
mov
xchg
dec
inc
pop
mov
fiadds
mov
ret
dec
or
jbe
mov
mov
xchg
jle
popf
sub
into
inc
xor
fistpl
cmp
movsb
movsl
xchg
fsubs
fdivrs
push
rclb
pop
daa
rol
add
inc
cld
enter
xor
xchg
out
pop
incl
ja
xchg
insl
cmp
insb
in
mov
js
mov
jae
ljmp
inc
movsb
cld
sub
and
mov
loop
sbb
jle
xchg
push
add
cli
lahf
leave
sbb
push
jbe
mov
filds
cmp
mov
ja
psubd
arpl
pop
or
pop
xchg
popf
fimull
popl
jl
jl
dec
cmp
sbb
addr16
shlb
mov
call
jno
xchg
add
jge
sub
xchg
imul
fmuls
inc
mov
in
das
pop
adc
pop
pop
fstl
cltd
je
dec
out
cmp
xor
sbb
pop
xor
add
push
incl
daa
mov
jge
aas
std
shrd
sbb
jno
pop
mov
std
fnsave
ds
outsl
or
mov
dec
addb
bnd
stos
fstpt
or
fldt
insb
xor
add
clc
add
ja
sub
call
jle
pop
jo
fs
xlat
jge
sar
jl
orb
push
sbb
jmp
hlt
and
dec
pop
gs
xchg
fs
xchg
inc
divb
xlat
pop
cmp
test
in
in
shrb
loope
add
add
push
fidivrs
lods
out
mov
fsubp
pushl
bound
sti
mov
js
mov
jl
jle
out
sub
fmull
cli
and
push
cmp
sub
add
push
cli
bound
test
addl
cmp
int
jecxz
aas
rcr
and
out
enter
jge
test
jne
dec
mov
loop
pop
cmpsl
xchg
pop
fstl
testl
mov
cmp
repz
loop
push
insl
enter
aas
ss
scas
add
popf
mov
sub
push
test
and
dec
fldenv
cltd
loop
xchg
push
sbb
push
out
inc
arpl
cld
ja
cld
or
test
inc
out
cld
outsb
lods
xchg
jle
divb
insl
and
add
test
add
out
pop
jp
ja
push
mov
sub
xchg
mov
mov
ss
clc
stos
mov
aad
mov
or
dec
mov
or
sub
sbb
repnz
mov
mov
cmpsb
loopne
in
sti
fidivrl
sub
and
icebp
xchg
cwtl
out
aas
inc
movsb
sbb
popf
xchg
push
mov
arpl
out
inc
cltd
sub
or
pop
movsl
push
mov
call
mov
dec
popa
add
in
jne
out
add
push
enter
mov
std
inc
jne
mov
cmp
mov
fidivs
popf
jl
loop
pop
and
pop
mov
pop
call
sub
out
mov
insb
cmp
cli
repz
imul
adc
insl
pop
ficoml
mov
ss
sbb
lret
adc
lahf
into
jno
aad
dec
call
or
push
xchg
test
dec
stos
pop
push
addr16
dec
and
jle
sub
push
mov
bound
adc
loop
loope
push
push
jo
hlt
jae
mov
pop
inc
out
cmpsb
lret
clc
in
pop
xchg
icebp
jmp
pop
cmp
fidivl
sub
push
xchg
xor
jno
sarb
lock
popf
aam
pop
xchg
inc
mov
js
inc
push
pop
call
arpl
es
jge
xchg
test
xchg
jnp
hlt
loope
fisttpl
push
jnp
push
push
xchg
add
or
fmul
repz
pop
shll
int3
dec
ficoms
jnp
pushf
mov
sub
cltd
mov
int3
pop
out
cmp
repz
pop
bound
movsl
pop
ljmp
dec
jg
out
arpl
pop
and
fistps
mov
nop
test
mov
loop
jge
cltd
cli
repnz
xlat
test
jecxz
xlat
dec
cltd
imul
cwtl
and
aad
jne
iret
mov
add
aas
arpl
inc
push
in
aad
shlb
or
leave
xchg
sbb
cmc
jnp
or
mov
lea
mov
addr16
dec
push
cmc
pop
jecxz
push
mov
insl
inc
in
ds
adc
mov
xlat
adc
mov
inc
cmp
push
xor
lock
loope
fcmovnbe
lock
ljmp
add
aad
push
aad
pop
ficoml
jl
stc
xchg
xor
mov
aaa
push
and
push
scas
push
out
sub
add
push
das
nop
jae
add
inc
or
jecxz
or
jb
jnp
imul
pusha
jle
in
jmp
jge
mov
and
cltd
mov
push
mov
nop
sub
enter
sub
pop
out
xchg
int
fucomi
or
sbb
stos
fstpt
enter
push
xchg
mov
adc
mov
add
shll
cmp
push
jne
dec
ljmp
lret
je
and
mov
add
sbb
in
mov
or
mov
mov
loopne
scas
push
jne
xor
lods
pop
in
subb
ret
mov
mov
and
in
das
xchg
inc
xchg
mov
inc
inc
dec
insl
xor
setbe
in
add
addl
pop
mov
inc
and
cli
inc
cmp
xor
or
jl
mov
loope
cmp
cmp
inc
lahf
je
les
popf
icebp
fildl
add
xor
popf
push
dec
fwait
sub
into
repz
fwait
xor
adc
sbb
ret
das
call
xchg
aaa
sahf
vandps
cs
inc
cmp
jmp
push
fisttpl
nop
lcall
gs
push
cmpsl
cmp
stos
shlb
xchg
and
add
push
ljmp
repz
xchg
aas
out
leave
lods
arpl
xor
outsb
pushl
outsl
push
test
pop
jecxz
inc
imul
sub
std
mov
xor
in
in
das
insb
xchg
jl
rorb
xchg
and
push
mov
fisttps
gs
lds
repnz
mov
jecxz
xor
addr16
lcall
mov
mov
cwtl
mov
sahf
xlat
push
sub
and
cmp
push
adc
sub
movsl
ja
cld
test
cmp
enter
ja
mov
les
push
add
pop
inc
add
fldcw
jg
cltd
cmp
lret
call
sbb
mov
jge
cld
in
fists
mov
bnd
test
mov
push
pushf
ja
rcrb
jns
sbb
sbb
add
mov
pusha
or
data16
add
mov
mov
or
fcmove
and
xor
mov
adc
nop
xor
aaa
xchg
lcall
sbb
ss
mov
and
pop
xchg
lds
mov
and
xchg
sbb
icebp
pop
adc
mov
cmpsl
mov
test
fdivs
les
jo
and
sbb
sub
int3
int
mov
movsb
in
inc
cmp
aaa
or
jg
pushf
xor
lret
inc
cs
adc
scas
and
test
lods
aam
xor
xlat
pop
dec
and
inc
scas
subl
enter
jge
xchg
fnsave
fnstenv
ss
jnp
xchg
pop
mov
aad
cli
bound
and
mov
mov
lcall
iret
inc
xchg
jmp
out
jmp
cli
rcr
cmp
std
xchg
pushf
and
sbb
jge
dec
outsl
dec
or
addr16
xlat
mov
xchg
mov
mov
ficomps
adcl
dec
fwait
push
roll
sti
xchg
inc
cwtl
push
xchg
popa
aas
mov
push
mov
aas
add
jl
clc
sub
mov
mov
mov
or
mov
lods
daa
and
xchg
mov
enter
outsl
shll
xchg
aad
jo
mov
iret
sti
and
inc
decb
and
sahf
xchg
ljmp
or
pop
cmc
dec
cltd
mov
fildll
mov
jno
pop
xor
ret
pop
adc
mov
rep
cli
pop
les
push
repnz
inc
cmp
lret
mov
imul
jnp
dec
or
shlb
inc
push
out
repnz
pop
repnz
lret
movsb
cpuid
negl
pop
stc
sub
push
shrl
jge
pop
movsb
jo
pop
xor
xchg
push
cltd
fnstcw
fwait
pop
inc
cmc
pop
repz
stos
pop
sub
xchg
adc
jl
mov
jecxz
adc
iret
xor
in
mov
stc
and
jp
push
in
lea
jl
pop
sbb
mov
jae
mov
pop
loope
or
pop
adc
push
or
xor
outsl
or
jle
cltd
cmp
xchg
sbb
roll
cmp
flds
gs
pop
pop
jnp
fildl
add
mov
push
rorl
insl
ja
arpl
and
dec
scas
push
pusha
cmp
push
cmp
fcoms
xor
pop
lahf
jle
jmp
pushf
jns
mulb
xchg
jg
je
cs
fnsave
scas
pop
dec
add
cmp
xchg
sub
pop
sub
push
inc
and
push
push
jle
jmp
ret
push
imull
rcll
call
or
or
notb
and
outsl
gs
mov
fadds
cmp
lds
shll
xor
lret
dec
or
xor
lahf
jo
loope
in
std
cwtl
sbb
insl
es
imul
adc
insl
in
jns
xchg
pop
scas
xchg
pop
popf
shr
jecxz
jbe
movsl
and
fisttpl
xor
icebp
cltd
inc
scas
mov
bound
adc
mov
loop
xor
cmp
adc
sarl
mov
add
jp
test
cmpsb
int3
inc
shr
outsb
int3
adc
ljmp
add
repnz
inc
jmp
or
mov
jne
and
rorl
cmp
xor
inc
outsb
cmp
cmp
inc
daa
dec
mov
dec
inc
stos
std
clc
and
sub
inc
mov
cmpsb
ljmp
lcall
pop
addr16
mov
and
movsl
fsub
das
in
mov
iret
lods
leave
push
ljmp
sub
mov
xor
test
sbb
xchg
mov
xchg
cmp
nop
push
pop
in
push
cmpsb
jge
cld
out
push
mov
sub
ficomps
mov
cmpsl
dec
mov
adc
pushf
dec
adc
add
jle
push
xorl
add
sub
adc
push
ret
mov
pop
f2xm1
adc
xchg
outsb
fmulp
out
add
sbb
ss
sahf
fildl
inc
mov
add
aaa
popf
xlat
rorl
enter
xchg
jb
jg
sti
xchg
pusha
bound
fsubr
or
push
push
pop
dec
mov
stc
sub
cmpb
xor
cmp
cli
sub
enter
jae
fs
sbb
xlat
je
test
or
flds
add
int3
sbb
push
iret
fnsave
call
push
xchg
jmp
cmc
jmp
mov
or
scas
repz
insb
or
xchg
xor
jecxz
imul
xor
shl
mov
test
lds
xor
lret
pop
xchg
out
in
push
movsl
adc
scas
push
mov
sbb
inc
or
jb
leave
xor
xchg
ficomps
test
adc
xchg
inc
stos
sbb
jl
nop
jg
adc
mov
scas
shl
jle
xor
popa
pop
das
imul
push
jae
sub
enter
mov
les
or
jnp
ret
mov
inc
aas
lret
stos
sahf
dec
adc
and
daa
mov
sbb
pop
loop
xlat
adc
inc
clc
xor
rorl
jnp
cmp
xor
mov
lret
mov
lcall
cli
mov
add
jbe
add
sub
mov
out
sub
mov
sub
pop
out
pop
push
add
into
loope
mov
je
or
int
dec
lahf
out
push
mov
dec
aas
ret
or
mov
into
adc
jmp
shlb
or
xchg
cmp
jmp
jae
loop
mov
ds
lods
leave
sbbl
sub
lahf
sbb
outsb
jne
sub
int
xor
adc
pop
and
cmp
dec
fsubl
jg
mov
aam
cltd
pusha
movlps
lea
fnstsw
xchg
daa
adcl
loope
add
testb
adc
aaa
out
iret
orl
push
stc
rorl
testl
cld
shl
sbb
or
mov
jne
stc
mov
pusha
xorb
lret
inc
out
fsubl
fildll
int3
lock
notb
lds
dec
clc
push
jbe
mov
push
add
fildll
push
ss
xchg
jnp
arpl
loop
mov
or
insb
daa
hlt
lea
push
lahf
cltd
fwait
mov
push
stc
cmpsb
mov
nop
leave
shl
sahf
leave
pop
xchg
mov
push
mov
xchg
push
hlt
sub
jmp
or
mov
popa
cmpsb
adc
push
or
xchg
dec
mov
push
xchg
loop
mov
add
imul
jbe
jmp
hlt
fistl
adc
and
push
imull
insl
das
aas
sbb
sub
mov
icebp
sti
rcrb
out
aam
xchg
jno
shlb
aaa
jg
cli
cld
addr16
xor
mov
std
push
in
in
call
xchg
in
push
ja
shll
pop
dec
inc
jo
jns
js
pop
popf
sub
imul
movsb
sbb
sub
sbb
pop
lret
movsb
mov
mov
push
jle
dec
sbb
add
scas
ds
out
jle
sbb
sbb
inc
push
mov
or
ret
shr
mov
fnstsw
and
push
fst
std
repnz
nop
in
scas
or
dec
inc
dec
and
ficoml
or
rorl
sub
sub
mov
jge
cmpsl
mov
test
cmp
mov
aaa
adc
push
cltd
aaa
add
xor
out
imul
icebp
sub
mov
pop
aas
arpl
sub
mov
and
rcr
mov
push
fisubs
push
ljmp
scas
and
jl
cmp
movsl
aaa
mov
andb
sbb
sub
scas
inc
adc
cmp
ffreep
popa
repnz
cmp
mov
inc
adc
xchg
xor
icebp
sbb
mov
dec
testl
stc
dec
lret
push
mov
out
xchg
jb
jo
clc
arpl
jbe
je
lret
pop
sub
in
mov
loopne
dec
lcall
mov
aad
adc
inc
and
fistl
ret
pop
xor
cmp
leave
mulps
xchg
xabort
stos
xchg
mov
inc
push
mov
sub
xchg
push
mov
xchg
mov
mov
fistpll
addb
sbb
mov
adc
dec
pushf
iret
and
lcall
into
add
mov
sub
jecxz
mov
add
jmp
repnz
mov
fdivl
imul
imull
outsl
or
push
lods
pop
stc
cmp
clc
and
jp
lea
lret
sub
fisttps
arpl
mov
or
enter
mov
scas
lods
fstps
scas
xchg
cld
popf
or
pop
test
aas
pop
sbbb
and
ss
cltd
add
sbb
leave
cltd
rcrl
pushl
rclb
xchg
das
insb
adc
lods
add
add
or
mov
fldl
sbb
fistl
mov
push
test
orl
jge
dec
dec
and
mov
sbb
xchg
cmc
je
add
in
inc
fsubp
sub
jno
pop
jl
std
pop
test
lret
ret
imul
mov
mov
add
pop
sbb
insl
dec
bound
inc
push
and
xchg
jmp
ds
inc
sbb
push
xchg
int3
orb
divb
jle
and
out
xlat
test
imul
pop
mov
mov
xor
outsb
add
jne
sbb
jmp
daa
mov
push
push
outsb
cwtl
inc
insb
push
in
movsb
xor
sbb
jne
inc
jae
sti
int3
add
shr
dec
xchg
out
push
jbe
insl
out
inc
jne
adc
lods
cmp
pop
addb
cmp
bound
or
shrl
test
dec
dec
adc
cs
cmp
gs
push
sbb
or
enter
pop
xlat
pop
dec
xchg
cmp
mov
push
std
push
lret
leave
pusha
fidivl
inc
clc
jne
aas
sub
sub
scas
test
loopne
cmp
adc
jge
xor
or
add
inc
push
insl
or
or
mov
out
imul
insb
call
push
rolb
jp
insb
jecxz
outsl
aaa
fisubrl
jp
jg
add
push
pop
ja
xor
sti
adc
insb
daa
or
aad
or
movsl
cmp
jns
ds
std
fiaddl
ja
cld
js
xchg
add
pushf
int3
or
push
jecxz
pop
push
daa
mov
test
aaa
adcb
sarb
xor
fs
mov
pusha
sub
mov
mov
cmp
add
pop
adc
push
fstps
jle
sbb
dec
xorb
or
cmc
lret
inc
adc
addr16
or
cmp
or
jle
push
jl
add
addb
and
daa
dec
mov
xor
fmuls
or
fsin
push
mov
dec
dec
push
add
sbb
mov
sub
and
xchg
dec
jne
loopne
cmc
data16
xor
push
stos
gs
hlt
divl
jp
and
lock
mov
xchg
addr16
ret
xorb
ret
xor
out
push
mov
in
add
pop
and
xor
and
mov
ja
and
push
and
pop
in
loopne
and
jp
repnz
hlt
or
jg
aas
jmp
push
and
jb
or
cmp
cmpsb
inc
lret
fiaddl
push
outsb
jge
popf
addr16
pop
lcall
dec
sub
aaa
mov
arpl
inc
movsl
lods
xchg
mov
xchg
pop
push
xlat
shl
repnz
or
mov
sbb
je
and
cmpsb
fdivl
movsb
mov
mov
inc
or
or
mov
pop
cs
aas
in
and
sbb
or
jl
and
lcall
lret
repnz
pop
dec
cmp
sbb
hlt
imul
std
mov
adc
je
mov
dec
sbb
ss
add
aaa
mov
cld
aad
mov
add
pop
roll
ret
inc
repnz
scas
outsl
jns
int
repnz
in
push
mov
or
sub
aad
dec
cwtl
push
jmp
andl
inc
in
aas
loopne
cli
shlb
xchg
adc
xchg
fwait
or
mov
push
xor
fisubs
jnp
faddl
das
sub
dec
fisubrs
mov
jae
push
cld
iret
fwait
bnd
cwtl
into
add
testl
fwait
stos
lock
ss
push
movsb
outsb
jno
inc
cmp
rol
dec
stc
aas
push
fcompl
out
mov
clc
or
mov
add
jl
xor
jle
adc
jno
orb
dec
or
test
pop
pop
inc
nop
pop
xorl
iret
jb
pop
js
push
adc
sti
movsl
pusha
leave
fs
push
cmp
loope
mov
cmpsb
dec
clc
daa
xorb
add
xchg
mov
mov
enter
mov
jbe
cmp
test
jmp
repnz
cmp
dec
sub
jg
les
scas
cmpsl
sbb
or
or
and
pop
add
dec
xchg
xchg
jmp
push
les
mov
dec
mov
loop
flds
mov
cs
jp
call
add
popa
lret
adc
jecxz
lods
mov
dec
mov
and
fwait
sub
xchg
mov
lret
je
cmc
mov
fisubrs
adc
sbb
push
and
dec
adc
mov
inc
mov
inc
cli
loope
or
sub
loope
inc
push
mov
test
data16
ret
data16
xor
outsb
jge
stos
leave
mov
mov
cmp
loop
int3
or
pusha
jns
inc
in
aad
test
wbinvd
stos
jnp
in
shll
and
cld
rol
gs
pop
inc
push
out
adc
inc
aad
mov
scas
cmp
or
jae
cld
jo
jmp
sbb
inc
xchg
push
push
dec
xchg
ret
out
pop
andb
xchg
xchg
dec
in
xchg
sub
cmp
in
enter
sbb
or
movsb
and
push
hlt
jno
movsl
push
sahf
sbb
pusha
pop
fidivrl
jge
mov
jno
pop
mov
and
lret
je
rclb
cmpsb
mov
and
insl
jp
ficoml
fnstsw
or
sub
pop
mov
and
aad
imulb
imul
mov
push
mov
dec
pusha
pop
and
icebp
divl
cmp
imul
les
repz
loopne
fsts
inc
icebp
int3
cmc
xorl
jecxz
andb
cmp
dec
rclb
or
xchg
or
pop
stos
dec
ja
out
stos
jle
cmp
xchg
mov
pop
mov
mov
cs
pop
push
xchg
dec
lret
mov
push
pop
je
pop
pop
mov
outsl
sub
stos
ja
adcl
pop
jb
lods
sub
mov
jmp
test
xchg
ss
jecxz
repz
int
cld
cwtl
iret
mov
arpl
inc
adc
loop
and
mov
out
mov
insl
iret
push
lods
sub
pop
push
aaa
pop
sbb
jge
sbb
xchg
test
dec
shl
dec
gs
sub
test
repnz
test
ljmp
in
sub
xchg
xchg
out
test
adc
test
les
repz
lods
pop
sbb
loopne
mov
in
cltd
daa
and
mov
sti
sub
fisubs
pusha
cltd
pop
xor
push
std
add
sub
xchg
mov
dec
rclb
pop
mov
mov
mov
outsb
jp
or
inc
loopne
divb
xlat
push
mov
xor
jnp
pop
outsl
mov
xor
and
out
cwtl
or
inc
cli
cmpsl
fsubrl
xchg
xchg
mov
lea
inc
jl
in
mov
sub
testl
inc
add
mov
sbb
xchg
mov
insl
int
cwtl
mov
bound
xor
movsb
daa
call
sbb
mov
loopne
test
ja
xchg
sub
push
mov
div
cmpsb
adc
add
mov
adc
fwait
push
call
pusha
rclb
stos
xchg
iret
mov
cmp
sub
ds
adc
insb
stos
sub
xchg
sub
fiadds
movsb
rcrb
in
out
mov
sarl
insb
fistps
jmp
cmp
fists
sbb
clc
sti
lret
aas
cmp
lods
jb
jne
inc
sbb
sub
sbb
negb
push
cmp
mov
test
mov
add
sub
mov
adc
mov
test
lret
in
cmpsl
xchg
es
mov
jmp
push
shl
adc
pop
jecxz
xchg
stos
push
mov
sub
add
dec
jp
pushf
mov
movl
and
movsb
fisttpll
jle
loopne
pop
aaa
adc
pop
mov
outsl
push
push
pop
in
les
mov
xor
repnz
hlt
pop
lock
xor
jb
stos
test
inc
pusha
out
sub
xchg
mov
jl
jmp
loop
push
and
add
mov
mov
int3
arpl
test
hlt
lahf
dec
xlat
pop
mov
loopne
inc
lds
fdiv
stc
cmp
sbb
repnz
cmpsl
mov
clc
jno
into
stc
add
lods
xor
jnp
mov
imul
fwait
sbb
and
fwait
mov
nop
fcoms
insl
dec
jb
add
add
leave
fwait
daa
adcl
pop
pop
dec
jbe
clc
cmpsb
jecxz
xchg
fwait
test
in
jmp
xor
loopne
inc
add
or
fdivrs
addb
and
lahf
xor
sub
inc
pop
mov
sub
xor
sbb
inc
inc
and
jns
ds
or
push
jl
or
int
cmpsb
jle
shrl
sub
push
adc
and
adc
sub
mov
mov
mov
xchg
sbb
mov
pop
sbb
pop
movsl
ret
xchg
and
pop
jnp
dec
mov
push
dec
mov
jnp
adc
push
inc
lahf
pop
mov
pop
cmp
sub
xor
and
inc
jno
les
fbstp
mov
test
repnz
pop
scas
pop
mov
movsbl
inc
cmp
gs
es
push
out
mov
xchg
mov
dec
loop
mov
loope
or
or
shrb
rcrb
cmp
in
or
lmsw
pop
mov
fdivl
jbe
je
mov
cmp
icebp
pop
add
cmp
gs
outsl
adc
sub
and
sub
call
es
icebp
and
mov
loop
ds
add
mov
adc
dec
dec
sub
mov
pop
push
cmp
dec
adc
jecxz
pop
fwait
or
push
pusha
rcll
ljmp
andb
lahf
inc
jmp
adc
dec
or
sbb
xorb
cmp
mov
flds
sub
test
or
mov
imul
jns
cmpsb
mov
or
in
adc
or
sbb
lret
loop
in
repz
and
inc
out
jo
fistl
lock
aaa
xorb
sti
scas
lret
gs
mov
sbb
jb
xchg
jbe
inc
and
xchg
shlb
movsw
into
pop
mov
outsb
mov
jge
mov
xchg
jns
sub
cmp
insl
add
jno
out
shlb
imulb
xchg
and
pop
shrl
add
iret
sahf
mulb
repnz
push
add
data16
inc
loop
xchg
aaa
enter
out
ret
jecxz
test
loope
pushf
aas
sbb
repnz
rorb
loop
mov
shl
imul
dec
adc
push
or
pop
mov
sub
xor
imul
aaa
out
xchg
xchg
adc
je
into
loop
cmp
nop
mov
sub
xor
sub
adc
pop
mov
xchg
dec
jne
push
int3
mov
push
jl
pusha
add
sub
jle
daa
mov
aam
sub
lret
inc
arpl
stos
dec
addb
sbb
fcmove
fnstenv
adc
xor
cs
int3
bound
or
in
add
lods
lcall
cmpsb
pop
push
xor
or
push
pop
jb
insb
adc
ds
out
mov
pop
or
pushf
mov
fwait
mov
xor
fnstcw
fbld
mov
mov
loopne
inc
test
popa
mov
add
adc
cli
fdivrl
sub
fcmovnbe
movsl
dec
icebp
pop
sbb
call
jo
loopne
enter
ja
mov
nop
adc
push
mov
pop
repnz
mov
das
or
mov
and
jne
inc
inc
and
je
cwtl
fidivrs
push
mov
inc
or
iret
or
pop
sub
push
inc
fs
mov
mov
bound
push
sbb
xchg
aad
inc
iret
loopne
aam
pop
mov
daa
xor
fiadds
jae
mov
mov
add
iret
mov
adc
sbb
repz
aas
cmp
gs
add
push
sbb
push
xor
daa
shlb
or
je
stc
lahf
adc
xlat
outsb
cli
sub
pop
or
jg
adc
outsl
cmp
mov
rcl
add
in
cmpsl
mov
leave
add
rcll
cmp
adc
invd
xchg
cs
nop
lods
ja
mov
mov
popf
jecxz
xor
push
imul
pusha
xchg
mov
mov
pusha
push
jne
jns
clc
adc
push
push
cwtl
pop
add
xlat
shl
add
mov
test
sbb
movsl
cmpb
jl
lcall
jp
pop
xor
and
mov
inc
arpl
mov
jo
sbb
fwait
jbe
pop
push
jmp
fcmove
cmp
mov
and
push
jo
shll
mov
xor
mov
sarl
scas
pop
cmpb
xchg
jb
push
orb
sbb
movsb
mov
cwtl
sub
mov
push
cs
pop
stos
test
mov
dec
and
stc
negl
popa
adc
and
jecxz
fsubrl
pusha
insl
xlat
and
mov
ss
stos
cmpsl
enter
ljmp
dec
inc
jge
movl
sti
mov
sub
xchg
shlb
rcl
test
lds
test
outsl
add
lret
cmpsb
xor
or
xchg
das
xchg
mov
sub
xor
sbb
fcoml
iret
push
mov
shlb
lods
mov
jl
test
push
lods
lds
mov
mov
mov
xchg
dec
sti
sbb
clc
enter
mov
cmpsb
inc
outsl
add
fiadds
subl
jb
mov
pop
insl
dec
push
adc
inc
inc
jbe
fxch
fcmovnb
rclb
pusha
pusha
fmuls
inc
sub
pop
shrb
out
mov
mov
lods
pusha
idivl
or
push
cmp
xchg
loope
fmul
out
ljmp
loope
imul
add
sub
mov
adc
inc
inc
mov
pop
fdivrl
inc
mov
and
popf
or
nop
jp
pop
decb
or
mov
in
xchg
push
and
or
scas
dec
leave
sbbl
loop
sbb
push
pushl
mov
inc
dec
xchg
movsb
add
test
dec
ret
fmuls
aad
cltd
jbe
mov
ljmp
fwait
jecxz
ljmp
push
aaa
add
test
xorl
cltd
push
push
int
nop
add
pop
popf
dec
or
and
xchg
xchg
jecxz
cs
es
fbstp
inc
test
hlt
fimull
arpl
loope
xor
mov
jnp
add
push
sbb
leave
lret
or
push
je
nop
shll
jge
fstl
repz
or
cmp
sti
cmp
sub
scas
adc
std
xor
pop
rcrb
xlat
add
pop
jo
jb
jg
in
popf
popl
shll
mov
jb
mov
aad
imul
aaa
cmp
aaa
fstp
test
dec
adc
jbe
xorl
push
add
dec
pusha
imul
fsts
call
lret
je
xor
inc
dec
ljmp
js
aas
cmp
xorl
fsubs
or
adc
pop
lock
cmp
jnp
inc
sbbb
add
cmpsb
push
push
inc
or
maskmovq
fidivrs
push
adc
sub
sub
jb
rolb
incb
pop
push
pop
lahf
dec
stos
push
out
ds
sbb
add
add
jmp
pusha
sbb
sub
xchg
xor
lods
inc
subl
mov
notb
rorl
inc
xor
xchg
in
adc
fcoms
ret
push
sbb
jmp
in
stc
jmpw
push
out
jmp
mov
aad
sub
sub
and
sbb
shlb
addr16
pop
test
cwtl
test
int3
ja
js
dec
pop
je
jmp
scas
xlat
inc
jae
mov
sti
pop
push
inc
inc
sub
push
insb
and
mov
mov
inc
xchg
scas
jle
ss
sahf
sub
clc
in
neg
sbb
cmc
nop
jo
ret
in
cwtl
out
aaa
mov
jns
mov
cwtl
std
jb
jmp
add
cmpsb
push
add
stos
popf
cmp
add
or
in
adc
cmp
adc
pop
aas
jns
and
mov
or
pop
xor
nop
repnz
loope
fcmovnbe
sbb
push
hlt
fisttps
cs
dec
jo
push
or
js
xor
imul
gs
mov
outsl
lods
cmpsb
nop
les
xlat
cmpsl
sbb
fidivrs
aad
jmp
pop
lods
nop
xlat
pop
adc
cmp
adc
sbb
not
cmp
leave
mov
or
push
jmp
dec
dec
sahf
xor
cmp
js
mov
fmull
stos
lret
inc
fdivp
fwait
xchg
test
test
std
or
aaa
incb
push
insl
push
mov
outsb
stos
arpl
xchg
mov
aam
sub
mov
mov
push
push
inc
fs
lret
adc
fidivrl
mov
dec
push
jle
iret
in
cmp
jl
xchg
sub
pop
mov
mov
mov
notb
pop
xchg
sbb
add
xor
mov
push
mov
add
mov
ret
adc
mov
gs
mov
sbb
dec
pop
aam
js
add
jl
push
dec
cwtl
cmp
inc
ficoms
fstps
data16
cmpsb
movsb
jmp
fs
fs
xchg
fcmovne
adc
pushf
fnsave
xor
xorps
mov
pushf
popf
mov
or
gs
cmp
pop
out
dec
jbe
nop
clc
lds
fsubl
xchg
or
rolb
repnz
xchg
in
pop
mov
stos
jecxz
and
jo
adc
push
jb
xor
lahf
mov
add
aam
fs
push
jne
scas
ja
push
push
roll
gs
sub
outsb
cmp
dec
sbb
pop
dec
call
sbb
mov
gs
cmp
xchg
pop
rorb
mov
enter
sub
data16
aas
or
cwtl
repnz
loope
divb
jbe
cwtl
dec
data16
dec
or
es
jne
je
mov
push
mov
sub
js
lcall
addl
xchg
mov
push
ret
mov
repz
test
test
mov
popa
xor
jge
jle
fsubs
sbbl
cmp
xchg
sub
stos
push
add
incb
adc
test
add
data16
sbb
testb
std
mov
popf
sbb
push
jb
aaa
das
adc
insl
popf
clc
push
outsb
sbb
je
lret
xchg
out
test
xchg
sbb
xor
pop
pushf
test
popf
cmp
push
xchg
test
ljmp
fwait
sub
lds
out
pop
inc
or
and
jle
add
stos
shlb
insl
mov
popf
aas
fcoms
xor
test
fildl
pop
lods
pop
lret
jnp
push
int
adc
dec
jbe
mov
aam
xchg
int3
lret
inc
cltd
pop
sbb
movsl
adcb
incb
xchg
pop
mov
imul
enter
pop
cmp
push
cs
aas
rolb
xor
je
sbb
push
and
addr16
xchg
inc
call
jmp
push
cld
mov
in
cmp
inc
pop
jb
sbb
mov
push
scas
scas
ds
dec
fiadds
xchg
xchg
push
stos
sti
sub
mov
andl
shr
mov
popf
jecxz
sbb
bound
and
insb
mov
inc
les
xor
cmpb
dec
mov
pusha
lcall
stc
rclb
outsb
cmc
sub
or
jecxz
ja
test
nop
rclb
es
pop
or
push
xchg
dec
jb
rcrb
adc
sbbb
add
jmp
lret
mov
adcb
cli
jle
cld
add
daa
dec
daa
sbb
or
mov
rorl
xor
test
jo
fwait
out
pusha
gs
gs
pop
mov
mov
rorl
in
mov
pop
scas
inc
vpunpcklwd
into
popf
mov
sti
enter
inc
imul
mov
mov
pop
movsl
inc
call
push
mov
mov
mov
mov
sub
push
das
cmp
idiv
pop
fwait
jecxz
jne
add
cld
std
or
mov
addl
in
and
mov
js
inc
ja
outsl
loope
daa
or
gs
aaa
jmp
inc
xchg
insl
push
pop
push
ret
les
push
mov
sub
lahf
sub
inc
je
sarl
pop
jp
sbb
mov
fnstsw
addb
cmp
repnz
sub
loop
push
or
sbb
clc
xchg
pop
xor
cld
inc
adc
inc
jns
pop
pop
aas
adc
movsb
in
int
adc
fs
rclb
inc
call
adc
and
popf
pop
mov
enter
in
push
cmp
insl
fistl
cld
xor
mov
les
cmc
cwtl
sbb
inc
mov
call
fwait
in
in
jnp
adc
sti
push
cmp
cli
imulb
lret
je
enter
rcl
jge
aaa
pop
es
add
mov
dec
ret
jp
js
movsl
rclb
jne
cmp
das
repz
xor
mov
add
cmc
jns
pop
je
jg
sbb
mov
ss
inc
imull
cmpsb
add
das
xor
xor
hlt
dec
xor
jbe
movsl
arpl
push
in
push
stc
jno
popa
sahf
sub
cmp
lcall
pop
scas
cmp
orb
pop
mov
and
mov
xchg
arpl
mov
or
mov
sub
mov
cwtl
mov
cli
shrl
ss
nop
xchg
mov
push
iret
pop
aad
in
mov
mov
sub
ror
add
inc
xor
mov
adc
idivl
arpl
popf
lds
mov
xor
adc
mov
int3
leave
jnp
xor
es
outsl
mov
jle
inc
cmp
mov
leave
xchg
cmp
clc
stc
aad
mov
jnp
ror
shll
repz
mov
test
cmc
pushf
sbb
in
sbb
cmp
aad
xchg
repnz
mov
clc
outsb
lahf
or
shl
sub
mov
aad
dec
jb
mov
addr16
test
jge
sub
adc
sahf
ljmp
dec
lret
pop
smsw
push
das
pop
dec
daa
ds
push
dec
mov
repnz
orb
push
mov
cmc
mov
cmpsl
or
inc
lahf
jnp
pop
cmpsb
jo
bound
decl
enter
mov
enter
outsb
pop
push
pop
mov
aas
rcrl
popa
sbb
pop
aad
inc
push
fnclex
push
fdivrl
jecxz
xor
test
inc
fwait
repnz
mov
jle
inc
pop
push
aas
imul
lds
dec
sbb
sbb
sub
xchg
mov
sub
aam
push
pop
sub
popf
out
ljmp
push
add
jns
jns
or
es
mov
push
or
aam
jne
xchg
mov
aam
repz
nop
clc
adc
imul
sbb
es
dec
pushf
and
and
shrb
repnz
mov
push
lret
mov
dec
lods
jecxz
imul
fdivrl
mov
andb
cmpsb
add
rclb
dec
mov
xor
sub
rcrl
sub
popf
pop
inc
xchg
pop
in
xchg
imul
fmuls
lods
data16
loopne
aam
xlat
cltd
jno
mov
xchg
mov
es
cli
push
daa
ret
sub
mov
sbb
js
ficompl
repnz
imul
arpl
inc
mov
cltd
sub
inc
sbb
sbb
jno
mov
push
roll
push
jmp
adcb
sbb
ds
fwait
cmc
loop
jle
fcoms
addr16
adc
ret
mov
test
mov
inc
andb
pop
cld
cmp
rclb
scas
icebp
add
mov
dec
cmp
xor
lahf
sbb
jno
sti
and
push
cltd
leave
mov
and
call
mov
nop
inc
mov
ret
cmpsb
jo
push
aad
cmpsb
dec
test
cmpsl
push
mov
cmpsl
xlat
ret
pop
in
cli
inc
into
int3
xor
dec
sbb
out
rclb
lret
sahf
xchg
add
mov
decb
enter
jne
and
out
push
hlt
cmpsl
pop
cmc
ds
sub
test
jg
and
or
mov
pop
xchg
test
stos
out
adc
push
js
jp
dec
jb
lock
mov
jg
icebp
jle
shlb
rolb
mov
popf
test
addl
dec
pop
stos
test
into
pop
stc
pop
out
lods
xchg
cwtl
mulb
xor
mov
bound
push
fisttps
sub
push
pop
sbb
gs
push
pop
dec
sbb
mov
call
sub
cmpsl
inc
mov
ret
jns
hlt
cmp
xchg
adcb
jecxz
popa
pop
loope
jle
fidivrl
xchg
xchg
imul
xor
sbb
fdivrl
jl
mov
nop
push
mov
repnz
dec
pop
test
or
mov
repz
movsl
and
fisubrl
insl
sarb
jne
push
mov
jl
jmp
cld
ret
int3
cmp
and
in
and
lods
mov
fistps
pop
sbb
les
pop
sub
ljmp
add
adc
repz
xchg
jne
int3
in
push
or
cmp
rclb
sub
movsl
shl
dec
mov
cwtl
clc
mov
push
sbb
addr16
pusha
xor
mov
repz
cmp
sub
add
xchg
into
push
mov
imul
mov
scas
push
shl
cmp
into
adc
fs
outsl
jo
scas
sub
daa
push
pop
xchg
adc
and
mov
daa
mov
xchg
mov
sbb
cwtl
jl
popa
or
mov
fisubrl
and
decl
or
inc
fldt
cmp
test
pop
ds
xor
xor
xor
cmp
cmpsb
jmp
fcoms
stos
inc
mulb
in
jg
cs
xchg
pop
push
xchg
cmc
mov
push
inc
pop
cs
pushf
sub
mov
stos
xchg
ljmp
rol
or
into
scas
inc
fs
subb
xor
pop
cltd
test
push
mov
pop
aaa
sbb
pusha
push
add
and
das
dec
mov
loop
movsl
pushf
in
cmp
adcl
mov
mov
adc
push
sub
repnz
pop
sub
mov
jmp
mov
enter
mov
test
add
push
xchg
push
mov
daa
jp
iret
mov
insl
loope
xchg
add
out
xlat
movb
xlat
dec
stos
std
adc
and
hlt
rcrl
int
xchg
xchg
jae
stos
iret
sub
gs
rcl
xor
mov
pop
and
ss
jecxz
push
aad
pop
xchg
jae
xor
aam
loope
push
pusha
push
mov
stc
dec
mov
cmp
frstor
xchg
pop
enter
pop
rorl
in
in
mov
dec
dec
aaa
mov
lock
insb
push
adc
push
mov
nop
pause
in
sbb
cmp
xorl
pop
jnp
push
lods
add
inc
in
je
mov
shrb
pop
fistpll
imul
cmp
enter
sub
imul
jl
ret
in
out
jmp
insl
xadd
xchg
jge
cld
xchg
stc
dec
lea
mov
cmp
aas
aas
movsl
pop
cmp
mov
mov
lods
repz
push
xchg
fwait
dec
mov
mov
inc
outsl
dec
pop
icebp
push
shr
ss
or
xchg
sbb
enter
mov
out
les
scas
mov
push
inc
notl
push
test
jb
mov
xchg
and
and
idivb
outsb
sbb
out
imul
push
stc
cmc
aam
incl
mov
adc
xchg
xor
push
inc
cld
in
out
imul
cmpsb
jmp
cmpsb
cmpsl
push
xor
outsb
rcrw
mov
jmp
and
cld
repnz
lods
int3
imul
add
or
cs
das
or
mov
sti
dec
outsl
jb
inc
and
mov
ljmp
jno
push
pop
hlt
call
mov
popf
mov
xor
inc
pop
shrb
cmp
repz
andb
clc
bound
jno
ss
in
push
add
xor
je
in
inc
ljmp
mov
mov
push
js
fcmove
popf
push
lods
jne
mov
divps
in
rolb
jo
dec
mov
cs
std
popf
jo
mov
cs
mov
movsb
or
ljmp
int3
call
movsl
in
in
fldl
jle
sub
push
cmpsb
jge
mov
push
cmp
iret
cli
cltd
loopne
hlt
roll
mov
hlt
adc
ds
stos
imul
push
adc
subb
cmp
cmp
push
sbb
scas
jmp
jbe
mov
or
arpl
shlb
sub
jge
xchg
jno
or
and
pop
mov
mov
movsb
sub
fisubrs
out
dec
outsb
push
dec
cld
or
adc
mov
jns
in
inc
in
popf
jae
in
pop
push
jge
addr16
sbbl
inc
or
xchg
xchg
int
out
xchg
cld
pop
or
xchg
sbb
xchg
push
in
popa
jl
cmc
lods
pop
jp
out
lret
mov
and
les
jne
pop
add
mov
xor
sub
jge
push
push
or
sarl
outsb
outsl
scas
pop
data16
push
inc
movsb
jle
xor
fadd
jno
mov
dec
sbb
and
fadds
int3
imul
jmp
loope
xor
rcrl
mov
mov
or
adc
inc
jbe
das
cld
call
and
sbb
inc
push
mov
xchg
fsubrp
push
mov
data16
adc
roll
loopne
arpl
out
repz
into
sub
jo
pop
ljmp
push
insl
mov
out
insl
push
pop
movsl
sahf
orb
cmp
sbb
fmuls
shl
xchg
push
rcrl
mul
sarb
push
inc
pop
popa
aam
jb
mov
andb
into
popf
cmp
push
add
lds
sub
je
jns
cmpsl
mov
pop
mov
ljmp
cmp
adc
loope
inc
fisubl
mov
bound
mov
cli
test
out
clc
scas
divl
or
add
jg
std
mov
cltd
jg
mov
jg
mov
sub
cwtl
cmp
testl
lods
mov
push
shrl
adc
push
int3
sbb
adc
cltd
ret
pop
xchg
imul
sbb
jbe
out
xor
push
popf
pop
mov
mov
test
pop
cltd
mov
addb
repnz
shr
cmpsb
mov
aam
sub
mov
inc
stc
xchg
test
sti
ss
xor
jmp
ret
adc
fdecstp
sub
inc
xchg
mov
aad
push
or
out
xlat
mov
cmpsl
mov
stc
sub
or
xchg
lea
mov
jae
popf
xorl
rcl
insl
out
jne
hlt
mov
adc
js
fidivrs
fsubr
rolb
mov
fistps
cmp
xor
pop
enter
or
stos
cmpb
ljmp
int3
cmpsl
xchg
arpl
xchg
testl
xor
adc
add
pop
xor
mov
insl
fbstp
shlb
ds
cmc
gs
lds
adc
mov
nop
xchg
loope
adc
hlt
data16
rolb
inc
jo
inc
jmp
push
sub
fistl
ljmp
data16
push
int
das
ljmp
loope
cmpsl
dec
fwait
outsb
or
std
inc
add
inc
mov
lea
sahf
ljmp
push
add
dec
movb
jb
or
fildl
scas
inc
outsl
mov
sub
push
out
pop
jo
aaa
popf
pop
and
inc
jns
jge
into
ss
cmpsb
arpl
test
jae
popa
jno
sub
ss
shrb
xchg
mov
push
pop
push
je
lds
aaa
es
bswap
fnstenv
dec
imul
pop
test
jecxz
dec
lea
mov
pop
and
out
pop
int3
loope
test
pop
add
aam
dec
dec
inc
fstpt
jo
mov
aad
pop
std
cmp
xlat
lock
test
inc
push
lods
mov
mov
mov
les
bound
jnp
mov
mov
test
mov
jl
into
jmp
inc
inc
mov
test
pop
loop
sti
out
pop
mul
jecxz
inc
imul
testb
fsincos
loop
filds
add
cmp
cmp
xchg
inc
testl
sub
or
xchg
pop
mov
xor
dec
mov
pop
jbe
cwtl
jmp
mov
pop
lock
and
in
dec
lahf
jb
dec
shll
out
repz
cmc
shl
out
fcoml
fs
adc
push
mov
movb
shr
cmpsb
adc
and
add
mov
mov
scas
jg
je
pop
and
mov
andl
jl
lret
pop
jp
out
jae
lods
outsb
shlb
fucomp
push
xchg
dec
mov
in
mov
xchg
sub
rep
test
and
aaa
sub
fwait
mov
mov
or
sub
push
ret
push
sub
pop
out
mov
push
nop
imul
and
xchg
jle
adc
mov
subl
push
xchg
in
inc
shll
lds
movsl
cmpsl
xor
inc
and
shrb
in
mov
out
aad
or
ficomps
sub
sub
adc
imul
mov
jb
sbb
mov
xchg
negl
in
add
daa
jle
ret
adc
int
dec
push
out
js
and
add
cmpsl
lods
loope
dec
add
pop
or
in
xchg
cwtl
adc
imul
jb
or
xor
mov
idiv
out
xchg
mov
out
out
rcr
cs
idiv
call
cmp
repnz
mov
inc
mov
pop
or
movsb
in
sbb
int3
xchg
xchg
push
rorl
and
in
jno
jns
xor
sbb
adc
into
pop
sub
sub
data16
iret
or
int3
inc
dec
add
aam
out
in
mov
push
and
scas
ret
inc
and
enter
sub
push
out
push
pop
cmp
ret
test
xor
mov
jmpw
or
sbb
xchg
lahf
mov
gs
mov
mov
repz
call
mov
jmp
push
inc
jmp
mov
add
sbb
xorl
push
mov
fldl
popa
sbb
testl
pop
or
xchg
adc
mov
out
std
push
mov
repnz
jecxz
in
cli
xor
xor
loopne
loope
dec
data16
movsb
add
xor
jg
mov
jmp
lret
sub
roll
mov
test
jne
push
and
rcll
mov
ljmp
sbb
sbb
adc
pop
xor
into
pop
fistpl
xchg
ret
push
xor
nop
and
aad
test
lods
pop
add
push
lahf
lds
movsl
js
xchg
jno
js
adc
and
movsl
iret
mov
data16
push
sub
cmpsb
pop
push
inc
mov
sub
test
ljmp
xchg
lahf
pop
lods
mov
mov
dec
data16
mov
xchg
sbb
sbb
xorb
roll
inc
dec
cltd
pop
mov
jp
and
leave
call
shrl
adc
push
add
dec
pop
and
mov
sbb
test
or
or
cli
jmp
out
inc
rdpmc
cwtl
aas
xor
xchg
popf
outsb
inc
unpckhps
or
mov
dec
js
jbe
adc
push
jge
sub
pop
add
lea
addr16
test
xchg
mov
cs
add
push
push
lods
popa
or
gs
mov
lret
dec
loop
jnp
mov
daa
leave
roll
mov
add
and
jg
cmc
or
js
jp
ficomps
ljmp
cmpsb
jbe
xor
ret
fcmovnbe
insl
sbb
in
iret
jmp
sub
sbb
and
mov
inc
mov
dec
mov
ret
jns
mov
adc
pop
adc
mov
or
and
sub
jecxz
xlat
call
andb
mov
fstps
clc
cmp
sbb
lcall
aam
in
xchg
and
push
test
std
xchg
cld
cmp
jbe
inc
sub
and
popa
mov
xlat
and
pusha
lock
daa
rcrl
adcb
cltd
adc
xchg
jmp
imul
aam
mov
adc
scas
in
add
sti
adc
scas
out
out
test
pop
or
stc
test
jecxz
xchg
inc
aam
cs
lret
jbe
test
push
leave
popf
leave
movsb
pop
movsl
or
in
pop
popf
iret
add
into
out
fsts
push
cwtl
sub
cli
mull
mov
fucomip
mov
push
faddp
ret
ret
stc
pusha
inc
fwait
sub
dec
jns
push
inc
fildl
mov
pop
sbb
xchg
inc
inc
js
out
hlt
inc
insl
lock
mov
stos
cli
mov
test
xor
ja
dec
dec
push
push
fisubl
xchg
fstp
cmp
add
mov
lods
imul
outsb
sub
lcall
lret
cli
mov
in
loop
fwait
in
adc
cld
into
dec
in
das
repz
idivl
jo
pop
inc
out
sti
xchg
push
mov
jg
popf
inc
icebp
ret
popa
mov
jmp
dec
xchg
ret
add
stos
ffree
leave
dec
out
fcompl
orl
aad
int
pop
push
aam
xor
dec
xchg
push
pop
inc
cmp
push
xchg
int3
xchg
sbb
loope
and
cmp
popf
add
dec
mov
flds
lret
push
xor
std
std
aam
adc
aas
jae
sbb
repnz
push
add
loopne
cs
sub
push
pop
pop
inc
daa
push
cwtl
inc
movsl
shlb
inc
pop
pushf
dec
out
shl
sbb
pop
or
call
and
ja
inc
nop
rorl
in
mov
mov
mov
fs
cmpsl
push
dec
mov
ss
mov
fiadds
outsl
mov
lcall
aam
dec
test
sbb
fimuls
dec
xchg
sub
fsubs
or
shlb
insb
gs
xlat
fistpll
pop
fdivrs
mov
outsb
into
cmpsb
mov
sti
adc
stc
insl
xchg
sti
and
rcl
pop
or
nop
scas
sbb
push
faddl
pushl
outsl
inc
cwtl
cli
push
cmp
pusha
mov
xchg
loope
mov
lahf
xor
decb
or
in
mov
mov
aad
popl
ljmp
ljmp
jg
aam
lret
popf
sub
sub
sbb
gs
rorl
stos
xchg
push
jo
mov
pop
mov
sub
test
bound
cmp
push
mov
lahf
test
sbb
mov
cmpsl
mov
fdivrl
xor
ja
fcompl
add
mov
mov
jno
pop
push
mov
cmpsl
stos
sbb
push
jecxz
sub
pushf
mov
mov
cmp
sub
pop
xchg
cmpl
pop
push
in
dec
sub
clc
dec
mov
scas
jg
cwtl
test
jg
mov
inc
mov
mov
jo
add
add
mov
outsb
push
stos
jbe
inc
jl
scas
call
mov
mov
cmp
pop
xor
movsl
pop
sbb
jle
fnsave
nop
push
cs
insl
ficoml
movsb
push
mov
out
cli
adc
mov
iret
in
mov
pop
pushf
and
insb
jo
jecxz
rorl
jmp
push
xor
jb
into
mov
sub
out
movsb
dec
jno
cmp
in
cmc
pop
xor
sbb
adc
cmc
cwtl
mov
mov
mov
adc
xchg
push
xchg
fnstsw
pop
rcrl
cmp
mov
adc
jge
sarl
ret
mov
ds
jno
lcall
fwait
orb
push
loopne
pop
mov
adc
jae
or
das
ret
pop
insb
outsl
insl
inc
inc
xor
subl
push
pushf
or
sbb
sub
iret
mov
mov
roll
dec
bound
jae
xchg
std
mov
scas
xor
mov
popf
mov
cltd
in
and
loope
mov
rcrl
mov
mov
int
push
cmp
cmp
ljmp
mov
jbe
mov
fdivrl
cmp
mov
and
adc
mov
fnop
mov
fwait
addl
into
and
fisubrs
pushf
sub
and
out
aam
and
ss
insl
cmpsb
jbe
stos
bound
shrl
lods
cli
dec
sti
xchg
push
xchg
cmpsl
cwtl
fistl
mov
aaa
cmpsl
adc
lock
loope
call
fs
ja
xlat
mov
mov
adc
test
inc
sbb
stc
jp
sub
fucomp
sahf
push
inc
testb
or
push
imul
dec
xor
mov
mov
mov
sub
sub
test
iret
js
ljmp
jbe
add
gs
push
rcr
and
cmp
pop
mov
rcrl
push
sub
jns
xchg
mov
fabs
xchg
inc
into
or
inc
and
out
mov
jecxz
push
insl
cwtl
push
fs
sub
lcall
loopne
mov
add
add
mov
xlat
xor
jp
cs
cltd
pop
movsb
sub
popf
sti
pop
jg
cwtl
sbb
andl
stos
jo
xor
add
dec
jecxz
loop
stos
dec
jg
xor
xchg
pusha
cwtl
popf
jns
lods
movsb
cmp
adc
fcomps
stos
clc
push
mov
sbb
stos
mov
daa
shll
adc
xor
pop
xchg
mov
fisttpl
rorl
std
jl
sbb
js
pushf
jge
sbb
mov
inc
xchg
in
in
jo
mov
push
mov
mov
xorl
in
cld
daa
sub
cmp
nop
inc
iret
fdivl
lret
mov
sbb
pop
mov
loope
cmp
push
lock
and
inc
sarl
outsb
jbe
jg
fcmovb
out
jno
lret
mov
stos
cwtl
sub
je
pop
add
cmp
pushf
loop
nop
add
sbb
aas
jmp
cmp
subb
dec
xor
cld
dec
test
imul
fdivrl
jle
outsl
or
dec
inc
out
clc
aas
jge
sbb
jno
jnp
cmpsl
shlb
mov
inc
loop
jl
mov
push
icebp
mov
lret
cs
bound
xchg
pop
stc
xlat
subl
add
popf
or
sub
ja
sti
xor
jle
add
les
arpl
mov
mov
pop
mov
in
out
inc
shr
shll
mov
fdivl
insl
sbb
pop
push
nop
sti
sbb
jo
xchg
inc
add
fs
jae
mov
xchg
mov
outsb
add
and
jle
push
xlat
cmc
mov
sahf
scas
xchg
cmp
mov
imul
mov
stos
mov
jnp
std
mov
int3
hlt
inc
push
push
lock
lds
sbb
les
or
xchg
mov
adc
mov
aas
sarb
loop
xor
mov
stos
jl
or
sub
jecxz
lods
xchg
test
sub
mov
adc
ja
and
and
jmp
cwtl
mov
sbb
adcb
sbb
push
or
mov
movsl
ret
push
ret
push
jnp
mov
inc
jae
pusha
dec
les
icebp
mov
jnp
negb
jo
sub
imul
mov
mov
call
push
insb
mov
adc
in
xlat
jmp
inc
fisttpl
es
and
mov
mov
fcom
mov
int
out
dec
cli
mov
or
inc
movsl
cli
xor
mov
loop
lods
loopne
dec
mulb
fbstp
xchg
sub
std
jae
mov
mov
cmpsl
dec
pop
popf
mov
mov
lods
jo
jle
ret
xor
and
inc
leave
push
bound
ss
add
scas
or
ret
fldt
and
je
scas
icebp
cmc
enter
sbb
push
lods
jp
icebp
xor
out
je
into
fcmovb
arpl
enter
sub
je
mov
xchg
insb
add
add
dec
fsubs
ljmp
jp
mov
or
ret
pushf
pop
data16
fs
aad
xchg
stc
xor
push
aam
jnp
jb
pushf
lock
stos
push
loopne
xorl
jge
adc
mov
lods
add
adc
outsb
dec
shlb
add
fdivrs
insb
jns
popf
es
cmp
push
gs
xchg
outsl
or
adc
ljmp
pop
nop
sub
lds
inc
cwtl
fwait
daa
pop
mov
fbld
jecxz
mov
jl
iret
xor
add
lahf
call
mov
sbb
inc
mov
rolb
sub
mov
je
sbb
rcr
daa
push
xchg
jne
dec
jnp
stc
xorb
mov
in
insb
dec
dec
ret
and
aad
rcrl
jle
cmp
test
jns
rcll
pop
icebp
test
cmp
and
sub
cmpsb
stc
and
cmpsb
mov
mov
push
nop
cs
sbb
rclb
call
lock
mov
pop
mov
sub
rorb
sbb
mov
mov
jle
sbb
ret
dec
stos
adc
lods
mov
je
inc
ljmp
and
ret
out
popf
inc
lock
sarb
add
cs
cmc
rcl
sub
push
lods
inc
pop
lcall
in
xor
in
out
mov
in
mov
or
test
cs
mov
mov
ss
jnp
dec
fwait
mov
xchg
mov
pop
fst
xchg
xor
enter
test
jge
add
sbb
xchg
mov
adc
pop
adc
xchg
inc
enter
sub
sbb
fdivrs
and
and
sti
mov
cmp
push
outsl
inc
add
xchg
cwtl
fucompp
cmpsl
mov
or
jl
cmpsb
roll
xor
shrb
cmp
les
cmp
adc
and
mov
jnp
or
std
add
rcll
sub
xor
lock
push
mov
aad
leave
and
hlt
dec
sbb
ja
cld
adc
daa
pop
out
test
mov
cld
mov
out
cli
stos
jbe
or
jno
sahf
adc
lds
sub
or
enter
inc
cmp
dec
mov
mov
loopne
xor
sbb
icebp
insl
shlb
ret
jle
jnp
aaa
dec
cmp
pop
pop
push
sbb
arpl
or
in
mov
jnp
mov
mov
jecxz
cmp
in
adc
push
mov
inc
sub
push
in
popa
pop
imul
std
out
in
mov
xchg
fcmovnbe
sahf
and
ljmp
sbbb
setne
xchg
pop
ljmp
xlat
int3
mov
addl
cltd
gs
fsubl
cmp
or
scas
dec
xchg
add
cmp
push
mov
mov
or
aaa
push
jo
pusha
fidivrs
dec
push
mov
xlat
xlat
adc
push
jecxz
loopne
pop
xchg
lods
stc
incl
xchg
jge
cmpsb
aas
xchg
mov
inc
sbb
and
cld
sbb
xchg
push
fisttpl
push
test
mov
rol
das
ret
mov
jp
and
je
imul
or
sbb
cmpsb
lds
sbbl
popa
adcb
imul
test
cmp
dec
xor
jg
jmp
flds
in
dec
xchg
fwait
push
dec
test
jns
mov
syscall
dec
cwtl
push
adc
mov
or
jb
or
push
enter
mov
xor
fistpll
andb
loope
cmp
shrb
fbld
jp
ljmp
mov
or
push
xchg
xchg
mov
push
pop
mov
icebp
movsl
mov
add
and
add
in
mov
rcrb
dec
adc
and
mov
cmpsb
movsb
fsubl
mov
and
lahf
inc
shll
cmpsb
adc
mov
movsb
fcomi
iret
in
push
jecxz
push
mov
movl
data16
ffreep
stos
scas
mov
ret
test
outsl
mov
call
add
push
outsl
mov
xchg
aad
int
pushf
pop
fistps
fistl
lock
jo
mov
clc
jne
jns
push
mov
icebp
bsr
add
pop
or
dec
jno
xlat
data16
cmovae
mov
push
sub
gs
scas
movsl
repnz
and
or
xor
and
sub
mov
cmc
xor
ficomps
pop
fmuls
adc
cmp
or
loop
fs
inc
jb
xor
cmp
mov
ljmp
adcb
or
aaa
mov
imul
xchg
ja
sarl
mov
pop
cmp
jl
xor
loopne
cmovb
pop
mov
push
orb
lods
repz
idivb
repnz
sbb
jbe
imul
adc
push
cmpsb
inc
in
inc
add
xor
and
xorl
repnz
int3
loopne
add
mov
test
add
jo
sub
das
mov
loop
test
ss
mov
loope
aaa
lods
inc
ja
cli
loop
pop
sub
sbb
mov
in
addr16
stos
js
repnz
aaa
mov
push
std
repnz
jnp
gs
int3
pusha
jge
clc
mov
push
gs
in
push
das
je
adc
push
lcall
loop
cmp
daa
jl
mov
ss
xchg
andb
inc
mov
dec
inc
leave
dec
or
push
fmuls
push
icebp
inc
lret
int
addr16
or
xor
adc
mov
xchg
pusha
push
ds
movsb
jb
movsl
in
sbb
inc
pusha
mov
push
lods
psrld
and
jmp
inc
xchg
shll
xchg
sub
inc
push
imul
bound
outsl
lcall
jg
out
ds
xchg
int
mov
fsts
jmp
or
jp
mov
nop
mov
ret
mov
gs
sub
fisubl
mov
sub
and
shrb
or
movsl
shrl
xor
push
add
add
add
lods
mov
stos
mov
sbb
jnp
mov
and
push
imul
pop
xor
inc
mov
fucom
mov
sbb
xor
xchg
andb
push
cmpsb
pushl
push
xchg
loopne
push
sub
in
out
sti
icebp
pop
and
mov
addl
je
lds
and
mov
js
adc
outsb
push
hlt
leave
cmp
cmp
xor
push
or
mov
xlat
sub
pop
pop
pop
mov
jnp
subl
cmp
jb
jge
call
or
inc
push
push
pop
stos
push
pop
lods
popf
sbb
test
push
and
sbb
mov
adc
push
shlb
loope
mov
je
dec
not
fucompp
push
pop
pop
mov
jae
adc
jns
pop
mov
cwtl
gs
fcompl
mov
ret
outsl
es
cltd
adc
daa
out
jb
lcall
cmc
adc
xchg
xchg
mov
pop
jae
xchg
and
inc
mov
in
mov
jbe
nop
inc
jo
adc
adc
push
sub
stos
movsb
pop
andl
pop
in
pop
imul
pop
ss
incl
aaa
mov
mov
insl
xor
leave
pop
pusha
hlt
fmuls
xchg
mov
cmp
pop
xlat
pop
icebp
cmp
repz
adc
push
inc
jg
or
mov
ss
clc
pop
mov
mov
lcall
mov
cli
mov
push
push
xchg
lcall
out
ds
adc
dec
cwtl
pop
mov
fists
mov
cmc
icebp
push
fmull
mov
xlat
pop
aam
ja
divl
fisubl
add
ljmp
lcall
xchg
and
int3
xchg
add
inc
daa
mov
lret
out
inc
dec
push
outsl
or
outsl
pop
outsb
jno
ret
stos
mov
mov
into
mov
jbe
movsb
aas
int
push
jecxz
dec
and
inc
pop
cmp
mov
xlat
pushf
cmp
bound
dec
into
lock
adc
inc
popa
jb
add
or
inc
xchg
out
lock
sbb
adc
sub
mov
cld
add
or
push
insl
icebp
mov
or
or
out
sbb
fbld
mov
jno
int
xchg
cltd
cmp
or
adc
and
icebp
xchg
push
push
jmp
push
xchg
jle
cs
das
push
mov
push
cwtl
jbe
add
aaa
outsb
pop
xor
push
es
mov
xlat
xor
stc
outsb
xchg
lcall
gs
out
push
loope
jl
cwtl
xor
dec
loopne
mov
gs
pop
loope
stos
mov
sub
sub
mov
imul
popa
and
or
rorb
sti
int
mov
mov
and
into
inc
pushf
stc
cmp
pushf
adc
popf
mov
xchg
sahf
jmp
mov
sarl
or
dec
data16
ja
jb
and
sub
imul
ds
add
mov
dec
xchg
bnd
andb
ds
ja
xor
push
jb
mov
and
and
vmovntps
dec
or
xor
jg
add
push
xchg
or
fcoms
imul
pop
and
and
xlat
jmp
inc
out
lcall
in
lcall
push
pop
push
rolb
fwait
stos
sub
fwait
and
mov
xchg
jg
pop
sub
mov
push
mov
and
xor
xor
mov
scas
or
das
jecxz
cmp
xchg
mov
cli
popf
sarb
mov
mov
cmc
cmc
imul
call
pop
add
shlb
xchg
xrelease
nop
push
insb
inc
in
cmpsb
aam
pop
inc
add
adc
lret
mov
test
jg
icebp
shl
jb
mov
lretw
mov
push
xor
xor
cmp
jno
shlb
jg
xchg
pop
push
nop
sbb
bound
popf
lret
xor
cmpsl
sub
xchg
push
ds
cs
sahf
push
sub
repz
push
popf
inc
cmp
enter
shrb
int
lea
add
push
js
stos
mov
fcom
fs
hlt
nop
stos
cli
xchg
xchg
dec
cmpsb
sarb
jb
daa
xchg
scas
mov
mov
push
test
jnp
aam
adc
pop
lret
outsb
cmp
fwait
push
call
adc
subb
xchg
js
es
xor
dec
stos
dec
lea
cmp
lahf
es
xchg
leave
sti
or
mov
arpl
push
mov
mov
std
mov
addr16
mov
mov
movsl
cmp
ficoml
cmp
mov
add
jae
rcll
ret
jmp
in
out
sbb
cmp
jp
mov
jg
faddp
jp
and
hlt
jbe
push
and
xchg
ret
dec
jge
push
sbb
inc
int
jae
ja
jmp
xchg
jmp
sbb
es
add
jnp
addl
xchg
sbb
in
sbb
vmread
fs
jecxz
sub
and
leave
jb
cs
xchg
push
addr16
jae
aam
inc
ds
push
push
test
out
push
arpl
pop
shlb
fnstcw
jo
call
fxch
cmp
nop
or
pop
rcrb
test
cld
fisubrs
push
mov
pop
xchg
and
int3
sub
jp
xor
sbb
pop
cld
pop
daa
fiaddl
mov
test
push
cmp
adc
bswap
dec
pop
sub
outsb
jo
push
jnp
mov
fldenv
inc
mov
inc
insb
inc
adc
sub
test
push
je
scas
ds
lea
adc
shrb
dec
test
mov
pop
add
mov
dec
push
add
dec
mov
jmp
mov
and
cld
popf
pushf
dec
add
xchg
inc
add
cmpsb
adc
mov
mov
sahf
push
xchg
lea
push
mov
pop
jl
jb
push
pushl
aad
ja
inc
push
cld
inc
jge
cmp
xchg
add
cmc
push
fs
jge
into
xchg
stos
int3
iret
mov
out
sbb
fxch
add
hlt
es
movsl
xchg
push
jge
push
cmp
popa
adc
adc
sbb
jno
pop
mov
xchg
int
dec
jmp
fdivp
mov
inc
cmp
mov
std
push
pusha
jns
mov
fldl
xchg
aad
push
jb
popf
pushf
cmp
mov
sub
push
xor
test
push
cmp
mov
jae
adc
jge
movsl
roll
jno
fidivl
mov
mov
pop
dec
pushf
repz
subl
and
pop
and
in
sbb
rorb
in
xor
add
popf
lds
inc
insl
add
stos
mov
jge
mov
stc
stos
inc
add
xorb
mov
jbe
pop
cmp
push
aam
sbb
or
push
orb
sbbl
pushf
push
ret
in
fwait
in
mov
rcr
movsl
jecxz
inc
mov
pop
int
int3
lret
popf
sbb
repz
in
mov
vmovapd
xchg
jmp
xor
mul
cmp
and
xorb
and
das
lret
xchg
insl
or
xor
movsb
clc
inc
adc
movsb
mov
xchg
mov
ss
cmp
stos
push
pop
push
aad
scas
lea
or
inc
or
lods
cmp
decl
subl
xchg
sti
data16
xor
clc
add
inc
popa
jle
push
mov
adc
in
mov
or
adc
lret
enter
push
jbe
inc
cs
cmp
xor
mov
dec
mov
dec
lcall
and
mov
imul
and
inc
and
jecxz
ss
movsl
pop
ljmp
xchg
idivb
subl
pop
dec
dec
sub
lret
pop
mov
imull
mov
nop
pop
aam
in
lea
pop
lods
cld
and
mov
stos
mov
popf
xchg
test
das
and
test
adc
mov
test
inc
jmp
mov
xchg
push
cmpsb
test
into
dec
scas
lods
xchg
sub
xchg
fstpt
lcall
cmpsb
test
sarl
ret
cmc
pop
jg,pt
movsl
fcomps
push
addr16
into
icebp
inc
xlat
stc
jge
mov
mov
in
lods
dec
jb
popa
dec
loopne
jae
pop
jnp
leave
cli
daa
imul
jo
insb
lods
shll
dec
cmpl
mov
dec
jae
push
scas
std
xlat
loop
and
pop
push
jecxz
mov
mov
dec
add
mov
enter
mov
push
fs
sub
imul
addr16
push
cs
fidivrs
insl
in
pop
or
imul
push
xchg
lahf
dec
in
or
push
push
cmc
outsb
inc
sbb
rcrb
iret
mov
xor
fcomps
pusha
mov
pop
or
jns
aam
sbb
cmc
dec
sub
ds
cmp
gs
rcll
push
xchg
mov
jecxz
out
out
gs
cmp
pop
ror
addl
stos
adc
mov
push
hlt
test
mov
test
cmp
xor
mov
and
in
push
cmp
jbe
lcall
add
xor
out
push
inc
imul
and
inc
mov
cltd
mov
mov
ss
fninit
test
adc
aaa
mov
jp
insl
and
fisubrs
push
pusha
cmp
jb
or
pop
sbb
pusha
ss
adc
jno
out
mov
mov
or
xor
lods
push
xor
mov
mov
sbb
jne
pusha
sbb
push
adc
or
add
jae
aas
push
sti
xchg
in
add
out
jbe
mov
or
dec
cmp
cbtw
push
stc
les
gs
fptan
adc
xchg
mov
int
hlt
push
js
mov
fisubrs
outsb
push
in
adc
in
fstps
lods
inc
sbb
hlt
add
push
ds
imul
and
cmp
pushf
sti
mov
xchg
sbb
sub
jbe
cmp
dec
hlt
dec
pop
and
fldcw
mov
fdivl
inc
pop
fstl
shr
xchg
negb
and
rorl
sahf
xchg
movsl
cmpsb
and
pop
imul
inc
sub
xchg
push
push
mov
xchg
or
inc
in
pop
lea
push
dec
inc
mov
sbb
fdivs
inc
jns
loope
pop
ds
aam
pop
sbb
cmc
clc
repz
scas
sbb
rcll
jbe
sarl
xchg
jge
or
jno
mov
or
out
or
mov
dec
out
dec
ljmp
sahf
mov
cmp
xchg
cmc
mov
xchg
shrl
mov
repnz
dec
ficoms
adc
pushf
jbe
sbb
pushl
stc
in
sub
in
push
ret
fldl
mov
inc
aas
pop
rcl
outsl
dec
adc
mov
int3
mov
or
cmp
sarl
stos
jmp
scas
nop
fs
or
mov
repz
mov
adc
loop
push
pop
insb
jns
daa
outsb
push
xor
cli
add
repz
inc
outsb
jnp
mov
int
mov
aad
rcrl
mov
fs
ds
pop
dec
push
imul
fsubs
in
aaa
add
lods
push
popa
repnz
shlb
lock
xor
cltd
push
pop
sbb
sub
outsl
adc
dec
lock
mov
mov
iret
cmp
fcom
les
push
data16
mov
push
fdivrs
mov
je
jecxz
es
rclb
jno
or
inc
call
scas
bound
in
xor
mov
sub
mov
movsl
outsb
std
std
fisttpll
movsl
adc
push
notb
aas
jno
pushf
test
addb
xchg
stos
mov
outsb
mov
xlat
int
adc
mov
popl
shlb
lock
sbb
push
xor
xchg
test
test
gs
inc
fs
dec
lahf
notb
sub
int3
dec
jne
das
push
push
scas
jl
outsb
and
call
mov
and
add
lods
insl
data16
dec
or
pop
or
jb
imul
sbb
adc
add
sahf
stc
mov
and
push
bound
aam
mov
mov
pop
lods
sti
faddl
xchg
cs
lods
lret
cld
cmp
or
cwtl
pushf
jmp
and
les
jp
fs
in
std
inc
fisttpl
shll
sbb
lahf
leave
mov
ss
jmp
shl
xchg
mov
bound
enter
or
mov
pop
std
shll
adc
cmp
dec
fidivrs
cli
in
es
popf
push
inc
or
fwait
fs
lods
cltd
test
inc
push
nop
push
fildl
insb
popf
jne
mov
push
ljmp
daa
movsb
push
lds
adc
pusha
cltd
and
rcr
cld
pop
cmc
pushf
gs
out
pop
or
xchg
jmp
inc
adcl
xor
arpl
adc
jp
push
and
pop
fmul
mov
sub
leave
into
fsts
test
arpl
xor
ds
pop
sub
xchg
scas
and
cmc
adc
mov
scas
fisubrs
pop
cmp
clc
arpl
xor
int3
xchg
mov
mov
pop
jp
dec
leave
imul
cmpsb
inc
cmp
adc
aad
cli
jle
test
dec
loop
pusha
adc
cli
call
fiaddl
dec
ja
fisubrl
xchg
pop
mov
jo
xchg
jl
clc
add
hlt
xchg
stos
cli
dec
push
sbb
outsl
push
mov
dec
ret
adc
or
and
pop
cli
mov
jbe
pop
dec
jns
or
lock
aaa
inc
dec
shrb
sbb
test
push
mov
jge
fmuls
mov
and
cli
arpl
inc
ja
sbb
and
cwtl
fidivrs
mov
inc
js
push
dec
mov
or
push
loope
adc
mov
xchg
add
ficompl
movsl
sub
rcl
add
ljmpw
and
and
xchg
sbb
loopne
mov
inc
je
fcom
jno
xchg
mov
cmp
xchg
dec
cmp
add
stos
out
ret
movsl
cmp
jbe
enter
pushf
les
iret
xor
xchg
and
lret
add
pop
adc
je
inc
sbb
es
mov
out
mov
in
push
sbb
popa
int
cwtl
lods
xchg
inc
daa
mov
mov
aas
inc
stos
ret
and
add
jmp
mov
jp
insb
popa
call
or
cmpsb
sub
dec
std
roll
pop
dec
jl
and
or
scas
cmp
dec
add
lahf
mov
repz
sahf
popa
sub
xor
shll
popa
jl
orl
mov
sub
ljmp
push
imul
cmpsl
lock
and
sub
cmp
pop
push
loop
mov
pop
sti
call
mov
fwait
js
xlat
mov
rorl
adc
cld
pop
mov
in
sbb
dec
push
and
sub
xchg
rcrl
fcomps
pop
insl
xor
sbb
push
pop
and
or
pop
pusha
or
xor
nop
jne
ret
in
mov
shlb
xchg
les
aam
jbe
inc
stos
lods
dec
or
imul
lea
stos
leave
add
jge
aam
gs
inc
push
adc
add
test
mov
pusha
movsl
pop
lret
mov
insl
inc
xor
and
and
push
cmp
mov
mov
cmpsl
dec
jbe
pop
push
fmul
jp
xchg
lret
adc
mov
jns
dec
stos
adc
sbbl
mov
mov
lahf
dec
mov
pop
and
or
test
and
mov
repz
inc
ret
cmp
lods
mov
adc
popf
xchg
mov
sarl
loope
fdiv
hlt
mov
cltd
inc
ret
roll
mov
mov
mov
xchg
stc
cmpb
fcompl
pop
loopne
inc
xor
push
push
and
arpl
xchg
cmpsb
cli
fs
scas
mov
cmp
sub
or
cmpsl
decb
sub
enter
sbb
mov
clc
cld
push
mov
je
push
and
loope
add
repz
pop
mov
data16
mov
aad
pop
mov
and
dec
inc
xchg
dec
insl
sub
jns
mov
test
test
mov
leave
sbb
mov
pop
pop
push
shlb
adc
and
push
insb
scas
and
xchg
lcall
sub
lahf
and
add
in
popa
je
vdivss
loopne
ljmp
out
jge
xor
lods
mov
negb
dec
test
ret
ds
sarl
xchg
sub
mov
into
mov
mov
adc
rcrb
fildll
xor
sub
clc
pop
push
aad
gs
pop
shrl
adc
clc
push
mov
repnz
jecxz
xchg
add
cld
stc
clc
aad
popf
pop
jns
aad
inc
mov
popa
lret
leave
out
movsl
mov
mov
pop
push
and
int3
inc
cmp
mov
or
fstpl
xor
and
pop
add
lds
add
jbe
or
das
xor
adc
popf
loop
xchg
xor
push
shrl
mov
iret
mov
jb
adc
xchg
imul
popf
push
push
pop
sti
mov
inc
or
lahf
mulw
jo
mov
xor
sub
push
fmull
in
into
jg
push
in
inc
mov
loopne
cmp
sbb
shlb
fisttps
rcl
ja
push
or
jg
aad
mov
xchg
lret
mov
inc
outsl
movsl
mov
pop
sbb
out
xor
imul
cmpsl
xor
fisttpll
inc
adc
popf
cmp
xor
sub
scas
movsb
imull
mov
dec
and
dec
sbb
adc
pop
pop
or
enter
cwtl
stc
es
arpl
add
push
jns
and
cld
jo
xorl
test
push
mov
rcr
pushf
insl
jae
cmp
das
cs
repnz
enter
sbb
sub
testb
addb
jno
add
mov
mov
inc
cmp
movsl
les
adc
xchg
jecxz
cli
rcrb
mov
push
stos
pop
cli
or
repz
or
jns
sub
sahf
test
je
add
pop
adc
sub
lods
push
jle
add
adc
pop
sbb
xchg
mov
or
mov
xlat
sahf
xor
sbb
and
mov
cmpsb
mov
jp
inc
sbbl
mov
scas
push
rol
xor
mov
imul
inc
es
insb
cmp
mov
cmp
popa
xor
inc
cmpsl
dec
jb
clc
jmp
scas
mov
mov
mov
xor
pop
shll
pop
and
push
pusha
sarl
or
movsb
sbb
cmp
sub
push
test
hlt
inc
adc
or
or
lods
or
sbb
or
sbb
jg
rclb
in
sub
jne
xchg
jns
add
fsubp
xchg
adc
or
jns
aad
outsl
fs
fildll
outsb
loop
jbe
push
jecxz
sub
dec
sbb
push
pop
push
data16
stc
leave
loop
push
mov
pop
push
orb
sub
cwtl
or
sub
jle
cmp
leave
cmp
jb
fstpt
and
fcoms
sbb
or
ror
mov
xchg
add
fwait
sub
lods
arpl
adc
sub
jp
fldl
into
icebp
xor
lret
ljmp
xor
xchg
inc
mov
in
nop
mov
push
popf
and
mov
mov
sub
dec
loope
sbb
fstpt
ss
mov
inc
mov
daa
cmp
sub
adc
addl
dec
pop
rorb
lods
js
pop
outsb
mov
pop
pop
je
scas
out
add
cmp
enter
cmp
fdivrs
push
inc
pop
mov
cld
popf
repz
xchg
dec
mov
sbb
rcll
arpl
or
fucom
shrl
lea
xor
mov
mov
sub
mov
jbe
aas
add
xor
xchg
xor
les
sets
nop
dec
jne
or
mov
movsl
push
adc
or
adc
inc
xor
cmp
orl
in
jmp
mov
pop
inc
cmp
xlat
int3
dec
sub
lahf
aad
aam
les
es
mov
insl
rclb
xor
push
xor
jmp
cmp
test
call
sub
cwtl
pop
mov
test
sbb
mov
jnp
insl
dec
mov
leave
pop
push
jmp
pop
mov
or
cwtl
jg
hlt
icebp
pop
xor
dec
dec
fnstcw
and
fidivl
dec
add
mov
sub
aas
loop
pushl
stos
mov
pcmpgtb
pop
insb
sub
add
rcr
push
jmp
mov
mov
add
dec
cmp
into
pop
push
lcall
or
sbb
mov
leave
es
leave
loop
fs
inc
push
rcrb
cs
fbld
or
fs
nop
cwtl
outsb
mov
or
clc
rolb
xchg
pop
mov
lcall
cs
push
mov
sbb
aaa
ss
int
icebp
popa
jmp
ret
dec
mov
leave
mov
dec
push
xor
aad
xchg
mov
inc
in
pop
add
and
sub
xor
daa
mov
sub
int
fadds
add
xchg
jg
or
jmp
movsl
push
js
in
popa
pushl
shll
pop
leave
negl
pop
fstl
push
cmpsl
mov
neg
repz
cmp
push
pop
pop
test
jp
les
sti
push
or
out
jns
andb
lcall
scas
loope
push
xchg
xor
xor
pop
cli
adc
fstps
xchg
mov
pop
sub
loopne
je
ss
lcall
fdivrp
inc
sbb
adc
aad
js
nop
mov
pop
mov
cmp
out
and
cmp
cmp
lret
jae
shl
pushf
add
ja
add
jae
push
sbb
aad
cmpsl
lods
ret
push
test
add
jb
lcall
imul
xchg
cs
mov
dec
add
lods
cmp
lea
repnz
subb
inc
stos
in
mov
outsl
mov
sub
mov
out
test
inc
xchg
and
dec
adc
mov
adc
inc
sar
lock
push
outsb
xchg
neg
insl
push
push
mov
jg
xchg
fbld
scas
in
xchg
rolb
in
pop
or
mov
xor
jbe
or
call
in
das
inc
enter
mov
xor
mov
pop
and
or
adc
adc
inc
test
cltd
cmp
or
cwtl
inc
add
lcall
mov
push
cmpsl
and
lock
jg
scas
adc
clc
mov
js
dec
push
or
mov
mov
adc
clc
lock
mov
mov
or
data16
cltd
lret
mov
xchg
sbb
cmp
push
cmc
add
outsl
xchg
out
xor
jecxz
imul
or
lods
adc
lods
les
pop
mov
jb
xlat
pusha
push
lcall
jle
ss
push
rcrl
add
dec
mov
adc
inc
inc
mov
stc
and
and
lock
pop
sub
xchg
jle
adc
call
aaa
fldl
sbb
jg
dec
or
dec
das
mov
cmp
es
mov
cmp
dec
enter
scas
ss
imulb
addr16
xchg
stos
cmpsb
stos
pminsw
mov
movsl
out
sbb
cld
inc
inc
out
cwtl
cmc
fisttpl
xor
xchg
jb
mov
je
das
insb
in
sub
std
movsl
push
repz
and
out
cmpsb
ljmp
and
roll
push
aaa
adc
mov
jge
aam
in
mov
cmp
cli
push
ss
jle
aam
pop
mov
rolb
arpl
shl
mov
dec
jp
push
pop
jno
fldcw
adc
add
sbb
movsb
push
cwtl
or
sbb
push
sub
cli
dec
mov
jb
in
sbb
mov
mov
mov
pusha
xlat
ret
jp
cmp
mov
frstor
shrl
enter
cmp
sub
int3
mov
divb
jns
add
push
repz
icebp
mov
dec
mov
stos
cmp
pop
xchg
sahf
popa
ja
mov
iret
inc
mov
test
jecxz
add
mov
push
add
jb
and
pop
xchg
sbb
jnp
and
pop
lods
inc
in
pop
mov
lcall
ljmp
aaa
orl
xchg
mov
sub
mov
ds
cwtl
in
mov
fs
cmpl
dec
xlat
icebp
inc
adc
int3
and
mov
push
add
hlt
pop
in
les
pop
and
dec
fsubrp
addr16
movsb
testl
mov
mov
add
jb
adc
inc
in
mov
repnz
xor
roll
push
stos
int
sbb
pavgw
mov
out
in
inc
jle
mov
inc
stc
cwtl
jae
mov
lods
xchg
push
cmp
mov
sahf
addr16
xchg
sbb
mov
ret
loop
movsl
or
nop
lds
dec
mov
add
scas
sbb
and
fstpl
fwait
and
sbb
xchg
and
repnz
sub
rclb
mov
stos
sbb
sub
imul
insb
aad
mov
lahf
jl
inc
and
pop
add
addl
rorb
inc
das
pop
jbe
sbb
das
pushf
mov
xchg
lret
add
jmp
mov
sbb
imul
add
push
cmp
in
inc
or
js
jmp
test
mov
push
in
xchg
lea
or
lods
pop
cld
xchg
pop
sbb
lea
push
dec
xor
je
mov
add
sub
jg
dec
imulb
lea
pop
lods
push
inc
xlat
mov
dec
add
fistpl
mov
insb
lds
lret
and
dec
mov
xlat
lcall
adc
mov
fimuls
mov
and
sub
int3
mov
shrb
mov
dec
addl
dec
sbb
sub
loope
pop
push
shll
sub
into
adc
imulb
popa
xchg
mov
mov
pop
sub
testl
mov
xchg
dec
xchg
cmp
lcall
mov
sbb
pop
mov
dec
xchg
icebp
and
jae
sub
mov
and
mov
outsl
dec
sub
sbb
jle
mov
mov
scas
pop
xchg
push
dec
or
inc
xlat
adc
test
repnz
pop
cltd
lds
imul
adc
ficoml
add
ja
mov
data16
jnp
roll
into
or
fwait
mov
out
test
pusha
mov
adc
cmp
xor
inc
int3
mov
loope
les
bswap
push
fisttpl
xlat
movb
sbb
cld
rcl
add
in
repnz
out
leave
mov
mov
sub
push
ja
in
cmpl
lcall
jp
cmpsl
push
es
sub
sbbl
stos
sbbb
stos
mov
call
mov
scas
lret
int
pushf
sahf
adc
das
pop
adc
arpl
inc
and
mov
hlt
adc
mov
pop
imul
adc
add
fisttps
dec
cltd
lods
or
add
push
cmpl
in
jne
mov
and
jp
cs
gs
push
jmp
pop
jns
cmpsl
push
test
pop
dec
mov
mov
hlt
bound
outsl
pop
xor
inc
fisubrs
mov
dec
xor
rcll
jno
xchg
cmp
dec
xchg
imul
pushf
ret
lret
dec
sti
add
push
pusha
cwtl
or
mov
or
dec
int3
mov
xor
add
mov
and
xchg
xor
ljmp
dec
repz
test
stc
mov
ret
in
sub
sbb
cmp
in
cmp
mov
push
aaa
pop
mov
pop
repz
push
dec
jg
inc
xchg
and
mov
mov
mov
loope
popf
dec
jl
add
jp
xor
pop
mov
loope
mov
out
int
ret
scas
xchg
mov
fisubs
add
sub
test
lea
jbe
cmp
std
push
inc
ljmp
pusha
and
mov
sub
cmp
cs
xor
xor
into
leave
popf
mov
inc
xor
fcomi
stos
dec
shrl
sub
cltd
jge
iret
cmp
push
or
mov
push
xlat
and
lds
pop
xor
call
test
es
enter
jbe
and
jno
jb
or
mov
or
sbb
bound
sahf
or
or
and
arpl
popf
sbb
add
andl
imul
inc
adcb
fmull
dec
mov
mov
dec
xchg
adc
xor
cltd
adc
xor
mov
cmc
and
xchg
add
lahf
mov
mov
dec
popa
jg
outsl
xor
sbb
jl
dec
popl
lods
lret
in
outsl
fs
add
mov
jecxz
dec
outsb
mov
xor
test
xlat
push
add
gs
or
inc
das
pop
cmp
lods
jp
into
ret
pop
mov
mov
bound
outsl
jno
jnp
and
addr16
pop
pusha
mov
sub
arpl
fs
cmp
shll
xor
mov
popa
push
inc
pop
sub
mov
or
ja
mov
call
clc
inc
mov
adc
shrb
bound
jmp
insb
xorb
mov
lcall
jecxz
sub
and
pusha
fistl
pop
ficomps
mov
cmp
xlat
mov
insl
xor
add
push
pop
and
insl
test
insb
jp
cltd
ret
shr
enter
hlt
ret
outsb
int
jns
pop
pop
lahf
testb
cmp
out
popa
addr16
inc
test
fdivs
cli
leave
sbb
jp
stc
ffreep
pop
dec
cmc
sbb
adc
scas
je
push
clc
movsl
in
and
xchg
pop
popf
mov
sub
cmpsl
out
test
cmp
inc
sbb
mov
lea
mov
jno
out
sub
mov
jns
xor
jb
or
outsb
sub
or
push
inc
and
scas
sub
mov
loopne
fiaddl
cwtl
sub
dec
add
xchg
scas
inc
inc
xchg
sbb
push
adc
sbb
imul
in
and
pop
jmp
pop
inc
lock
scas
dec
daa
xchg
cwtl
inc
es
out
rcl
push
push
or
jb
out
lret
push
mov
pop
pop
rcrl
or
int3
add
fdivp
loope
jle
aaa
dec
inc
rcrb
arpl
movsb
push
call
xchg
mov
xchg
jno
jg
outsb
std
cltd
rorl
outsl
push
adcl
mov
dec
xchg
push
xchg
insb
insb
dec
push
jp
push
jb
pop
call
or
dec
sarb
cmp
subl
jae
xor
jns
lods
xchg
int3
sbb
addr16
ret
sub
nop
xchg
iret
xchg
test
sbb
enter
push
add
push
push
stc
lds
test
cmp
cld
imul
imul
mov
and
test
out
fldenv
outsb
scas
sbb
lret
lods
repnz
xchg
mov
pop
mov
iret
lods
and
call
cli
lods
pop
data16
aad
inc
xchg
cld
lds
jg
pusha
mov
fcoms
push
mov
shlb
dec
loopne
cmc
pop
std
stos
clc
add
cmp
clc
dec
jle
inc
mov
and
insl
mull
pop
cwtl
lcall
xor
pop
daa
das
mov
ret
lock
mov
lods
mov
out
mov
pushf
pop
jle
pop
lods
push
inc
insl
xchg
popa
mov
adc
addl
out
cwtl
add
gs
jo
enter
popf
notb
mov
shll
stos
inc
adc
push
test
je
ja
and
les
leave
inc
int
rcll
ret
or
sbb
sbb
mov
das
mov
lea
mov
test
aam
push
sub
jne
fisubrl
sti
jnp
stos
jp
adc
jb
ss
int
fwait
out
or
dec
fwait
push
fmull
fwait
out
xchg
cwtl
lret
and
ret
sbb
pop
jns
insl
or
mov
push
loop
les
sub
stc
orb
mov
cmp
ss
add
lods
orb
sub
jmp
inc
enter
insb
mov
cli
jecxz
mov
sahf
imul
pop
mov
sbb
pushf
pop
stos
enter
or
int3
sub
mov
fidivrs
sub
fsts
add
popa
jmp
inc
test
jmp
nop
ds
sbb
popl
dec
push
insl
in
or
sub
add
mov
pop
inc
adc
mov
mov
mov
cmp
shlb
mov
imul
push
lret
idiv
in
sub
jl
push
in
xchg
in
or
inc
adc
aad
push
mov
clc
sub
pop
aaa
lret
out
repz
fldpi
dec
mov
pop
sti
test
fcomps
repz
fldl2e
lcall
into
sbb
or
adc
cmp
jp
ficomps
pop
fisubrl
mov
push
dec
mov
test
dec
mov
dec
rcl
dec
insb
sbb
jne
cmpsl
sub
ss
adc
mov
stos
ss
enter
dec
in
pop
and
sub
shrl
fnstsw
push
xlat
lds
es
xchg
mov
lea
in
pushf
mull
repnz
stos
popa
imul
roll
in
and
xchg
jle
jg
fsubl
xchg
aaa
jnp
and
push
inc
movsb
test
push
add
push
lahf
and
scas
inc
dec
push
jns
pop
sub
lret
xchg
xchg
jbe
scas
pop
rolb
mov
pop
jle
lcall
inc
pop
sub
inc
rol
aam
jmp
lahf
enter
jp
mov
int
sub
jne
add
popf
and
jg
dec
cmpsl
stos
in
fcmovb
sahf
test
mov
out
pop
scas
cs
ljmp
push
or
or
dec
testb
in
push
inc
cs
pusha
cs
push
fyl2xp1
lahf
daa
xor
dec
push
xchg
lods
repz
adc
jmp
dec
das
std
out
ljmp
xchg
js
sub
or
fstps
push
repz
cmp
fstp
mov
or
fs
adc
xchg
vpsubw
push
lcall
mov
inc
sub
jo
arpl
jge
and
jecxz
bswap
push
xor
out
mov
mov
xlat
cli
inc
mov
call
push
je
aaa
ljmp
pop
or
inc
jmp
xchg
rcrb
cmp
jne
loop
out
stos
jno
test
insb
adc
jmp
xor
mov
stos
push
repz
push
stc
aas
ret
jb
push
or
or
jno
adc
sahf
jge
pop
pop
stc
jae
imul
mov
test
pop
pop
call
test
xlat
push
testb
lods
pop
inc
movsb
cmc
mov
cltd
sbb
xor
fwait
test
clc
pop
xchg
fisubrs
or
movsl
divb
sub
mov
ret
push
cwtl
shll
mov
out
sub
faddl
jnp
repz
mov
sti
daa
aam
sub
test
xchg
mov
push
mov
cli
iret
std
pop
xor
test
pop
lds
out
pop
lods
sti
int
cs
and
lret
jo
jns
and
xor
dec
sbb
mov
mov
out
add
repnz
insl
mov
push
rol
mov
adc
enter
daa
aaa
jp
fstl
xor
push
les
mov
push
dec
or
cmc
fsub
and
popa
fmul
loop
push
cs
xor
jle
dec
mov
cmp
arpl
sub
test
ss
adc
cltd
iret
adc
mov
popl
mov
cmpb
cmp
xor
jo
repnz
push
aas
adc
mov
cmpsb
jmp
lret
mov
push
in
and
imul
inc
aas
add
jmp
mov
rorb
dec
xchg
out
jmp
aam
clc
jbe
sub
or
push
adc
fists
data16
adc
call
inc
mov
inc
test
sbbb
sarb
clc
ret
cmpsb
stc
dec
sub
leave
push
pop
pop
jae
or
cmp
cwtl
iret
push
mov
ret
lods
mov
lods
insl
mov
ds
bound
subb
xchg
stos
add
xor
mov
pop
xchg
in
xchg
popf
or
test
mov
adc
std
aaa
aas
out
in
or
jo
cs
cmp
push
andb
sbb
movsb
les
dec
and
cwtl
sub
xchg
jmp
lret
ret
inc
adc
rorb
xor
xchg
sti
enter
dec
cmp
mov
rclb
or
adc
cmp
cli
addb
loope
cmp
pop
xchg
sahf
inc
sub
vcmpordps
or
push
push
lods
sbb
js
xor
out
add
mov
pop
push
stc
iret
daa
int
leave
ljmp
jno
pusha
mov
mov
and
adc
add
in
jnp
movsb
or
sub
sarl
in
stc
lods
xlat
div
test
mov
mov
nop
in
subl
lret
push
mov
clc
pop
adc
pop
imul
push
ja
sub
mov
ret
inc
xor
insb
in
or
mov
insb
lods
jmp
adc
mov
jbe
icebp
or
fld
data16
jl
insl
popf
pop
clc
jns
pushf
pop
inc
jmp
mov
mov
dec
nop
or
lcall
sbb
mov
mov
rcll
iret
xchg
fmulp
xchg
adc
cmc
mov
fs
je
inc
ret
lret
sbb
jg
or
data16
pop
inc
mov
into
mov
jg,pt
lcall
mov
inc
sub
inc
sbb
add
ficompl
dec
sbb
xor
jp
or
sbb
fstpl
int3
out
cld
rcll
out
movsb
ficomps
add
jge
or
xor
repnz
cli
jbe
jecxz
lock
mov
adc
cli
cmp
test
pop
mov
test
psubq
pop
out
movsb
popf
aas
popa
cmc
jbe
jbe
iret
test
ljmp
or
and
dec
jp
mov
clc
dec
notb
outsb
in
push
ljmp
jmp
cmp
shll
scas
ljmp
push
adc
shrl
add
jmp
scas
pop
mov
test
fcomps
out
push
arpl
mov
ja
loopne
pop
push
ja
pusha
cld
popa
pop
fidivrl
inc
jno
jle
mov
jae
outsl
das
sbb
xchg
cli
push
lea
out
xchg
call
add
sbb
cmp
test
push
orl
test
leave
lret
push
shll
and
cmp
dec
inc
out
imull
lds
outsb
daa
jmp
sbb
es
mov
and
js
mov
dec
cmp
sbb
fdivrs
push
mov
stc
lcall
adc
dec
sbb
dec
adc
test
dec
sub
outsl
outsb
mov
sub
pop
call
mov
rclb
mov
inc
sbb
loope
sub
lods
adcb
ret
push
lds
xor
sub
dec
in
xchg
push
push
adcl
aad
iret
adc
ja
push
lahf
pop
stc
stos
gs
lahf
cltd
mov
in
nop
pop
movsb
sub
sub
mov
dec
les
xor
aad
mulb
sub
hlt
mov
push
fwait
aaa
cwtl
xchg
mov
mov
cmp
sbb
adc
jne
stos
cs
inc
sub
push
add
pop
aam
adc
mov
cmpsb
gs
pop
mov
lea
mov
jg
iret
jge
pusha
dec
lods
push
pop
sbb
ret
loope
xchg
push
mov
sbb
add
ljmp
jns
in
arpl
push
ficompl
mov
cltd
std
cmp
in
push
jo
lock
mov
scas
inc
mov
ljmp
sbb
pop
or
imul
add
gs
sbb
sti
syscall
mov
lds
pop
lea
lahf
ret
push
add
movb
jmp
dec
das
add
jmp
iret
sub
mov
repnz
js
jge
add
ret
cmpsb
gs
jns
int
jle
insb
inc
push
jns
jecxz
out
in
into
xor
push
mov
mov
jecxz
mov
mov
sub
aaa
dec
pusha
bound
call
sbb
test
popa
inc
add
and
ret
loopne
dec
jg
insb
xchg
jg
out
test
jb
or
inc
cld
mov
pop
movsb
ja
sub
das
mov
adc
dec
adc
push
ja
pop
mov
arpl
sahf
pop
xchg
mov
add
xor
hlt
jo
orb
vmread
jne
cwtl
in
inc
mov
xchg
repnz
sbb
ficompl
sti
bound
fwait
sub
mov
xchg
jg
sub
sbb
test
scas
xchg
xchg
or
ds
xchg
stc
inc
and
fdivr
and
aad
lock
in
mov
or
add
push
or
lock
mov
decl
mov
mov
es
and
sub
mov
or
and
or
mov
int
test
cld
lahf
loopne
and
out
jp
das
aas
lcall
pop
push
fisttps
cmpb
sbb
add
test
dec
cmp
adc
or
or
dec
mov
inc
mov
xchg
add
add
rorb
addr16
adc
or
add
cmp
das
xor
cmp
mov
cmp
fbld
ljmp
xchg
cmp
es
fwait
inc
shlb
jne
icebp
jae
adc
sbb
pop
gs
int3
movsl
lods
xchg
push
std
inc
aam
cltd
imul
loope
out
fmuls
out
mul
pop
movsb
or
mov
dec
add
aam
pop
jno
bound
push
push
xor
xor
adc
jp
lods
fstpt
push
cmp
icebp
push
movl
mov
mov
or
mov
ficomps
pusha
xor
into
call
outsb
fiadds
xor
sub
test
cmp
js
xchg
adc
sub
movsb
dec
fwait
mov
mov
clc
sbb
gs
dec
subl
mov
cmp
adc
and
lock
subl
xor
adc
jno
adc
push
mov
push
push
adc
aas
pop
lock
repz
mov
mov
aas
fistpl
ljmp
mov
dec
dec
into
daa
push
sub
cs
icebp
adc
sub
inc
jecxz
popw
test
push
jo
in
inc
inc
cmp
std
lods
imull
mov
test
inc
ljmp
dec
andl
sarb
lret
jge
and
pop
rclb
sti
fs
mov
sub
repnz
sahf
inc
js
inc
js
addr16
subl
popf
xchg
decb
add
mov
and
adc
and
inc
pop
push
jne
pop
out
pop
js
cli
cmpsb
sbb
push
dec
push
mov
inc
ret
mov
rcr
data16
mov
jb
inc
out
or
ret
adc
cmp
sbb
out
sub
int3
mov
push
idivl
adc
scas
aad
jno
call
sahf
stc
shll
add
cld
mov
loope
pop
inc
mov
jo
outsb
fsubrs
cmpb
sarl
fimuls
mov
mov
inc
mov
enter
inc
sub
sbb
sbb
mov
es
push
aaa
xchg
ds
into
shll
nop
jl
outsb
sbb
xchg
fsubrp
or
adc
cwtl
js
adc
dec
dec
fs
ss
mov
sbb
imulb
in
clc
or
lret
dec
data16
test
sbb
gs
rorb
fwait
jmp
jp
pop
cmp
or
mov
pushl
mov
cmpsb
in
je
stc
mov
popf
xchg
dec
mov
shrb
or
and
or
adc
aad
xchg
dec
cwtl
sbbb
cwtl
jl
pop
addr16
cltd
jle
fstpt
push
outsl
mov
mov
adc
cmp
aaa
outsl
push
inc
xchg
rcll
push
pop
das
sbb
dec
mov
dec
xor
cld
jno
imul
mov
mov
out
cmpl
sbbb
rcrb
sti
adc
pop
mov
jbe
xchg
jmp
rorl
lret
imulb
gs
dec
ret
jmp
sbbl
jle
xchg
das
into
test
inc
into
sub
mov
aaa
clc
ljmp
lcall
aas
mov
aas
mov
mov
inc
clc
fs
jecxz
dec
cmc
lds
out
sub
add
add
popf
mov
mov
aad
mov
sub
movsl
add
stc
mov
cwtl
rcl
cmp
je
mov
aam
ss
insl
movsb
nop
testl
adc
and
adc
mov
pop
sbb
lret
stos
or
aaa
inc
pop
fnsave
mov
xchg
idivb
sahf
dec
mov
and
out
fcmovu
jl
jp
repnz
pop
xchg
popf
xchg
shrb
bound
and
sbb
lock
std
add
mov
sub
sub
mov
out
mov
test
sbb
lock
sar
mov
mov
inc
data16
lods
es
test
mov
loopne
adc
cwtl
fidivl
insl
xor
aam
sub
xchg
push
fxch
mov
cwtl
and
sub
mov
xor
xchg
jle
mov
xor
cs
lret
adc
inc
jbe
andb
push
inc
mov
ds
inc
cmpb
movsl
cltd
jno
std
jb
imul
sbb
and
pop
cmpsb
shl
fimuls
cmp
and
repz
and
ret
cmp
xchg
jle
jae
push
cli
outsl
bound
movzbl
dec
mov
mov
clc
lods
jp
lret
lret
sahf
push
pop
paddb
lea
testl
ljmp
sbb
in
push
add
aad
addr16
ja
mov
out
add
sbb
inc
pop
daa
stc
mov
sbb
adc
popa
pop
lcall
in
inc
mov
jp
inc
mov
jmp
pusha
daa
jb
fdivrl
and
mov
pop
addl
pop
fcoms
push
outsb
jle
fldenv
stos
jo
pop
das
mov
xor
lds
ret
jno
mov
xchg
push
lea
mov
sub
push
xchg
cld
dec
xor
or
aam
test
cmp
mov
pop
sub
xchg
sub
push
inc
add
mov
mov
pop
mov
or
jmp
dec
subb
sti
mov
shl
push
jo
enter
ss
or
mov
js
push
insb
xchg
push
push
lods
in
insb
mov
xor
sbb
mov
cmp
pop
xchg
jae
loopne
xchg
dec
js
lret
call
cmpl
lods
cmp
cltd
iret
xor
push
scas
jnp
sbb
test
pusha
inc
xchg
out
out
push
xchg
and
sub
push
es
adc
push
out
pop
mov
cs
lock
mov
dec
pusha
inc
cmp
mov
jl
shrl
cwtl
lea
das
pop
icebp
or
jp
aam
jp
ss
es
data16
mov
leave
int
and
cwtl
dec
adc
add
jbe
or
xchg
mov
aaa
insb
out
je
repnz
shl
mov
jge
or
insb
cmp
jnp
in
hlt
cltd
ja
std
add
push
shll
test
pushf
cmp
fwait
in
movsl
fwait
push
cld
testl
out
das
hlt
mov
cmp
xchg
add
cmc
mov
inc
repz
mov
lods
xrelease
cmpsl
rcrb
and
pop
mov
push
jo
mov
inc
jo
fmul
fldl
jecxz
push
out
sub
xor
sbb
adc
mov
mov
inc
lret
fucomp
sbb
data16
xchg
shl
xchg
jo
xor
cmc
roll
xlat
inc
cli
cmp
xor
clc
jns
out
mov
cld
or
aas
add
hlt
jl
push
insb
xlat
dec
shrl
fstp
pop
jnp
lea
jb
test
icebp
add
xchg
out
leave
aad
in
out
icebp
sarb
push
jae
pop
pusha
mov
xor
mov
ja
pop
outsb
cli
jl
stos
movsb
dec
push
mov
shl
sahf
push
sub
leave
aaa
or
and
mov
in
les
mov
adc
sbbl
lret
jb
stos
xchg
mov
cwtl
sbb
insl
loopne
jbe
push
fistl
lods
fs
fiadds
adc
push
pop
pop
lea
cmp
mov
push
sub
lock
push
push
iret
insb
xchg
fimuls
popa
lock
push
scas
push
xor
cli
int
cmpsl
sahf
push
sub
sbb
roll
xchg
jns
jb
subb
mov
ret
nop
std
cmpsb
rcll
sub
xor
aas
frstor
mov
aas
lahf
jne
inc
mov
xor
out
sbb
hlt
sarb
mov
mov
xchg
mov
xor
cli
or
fcoml
sbb
outsb
cli
outsl
push
nop
cmpsl
mov
xchg
push
aad
push
sub
inc
cmc
add
stos
test
xor
push
mov
pop
and
stc
sbb
enter
xor
into
popf
push
xchg
mov
shlb
push
or
sbb
cmp
lret
dec
xchg
pop
ds
mov
pop
sub
adc
jmp
inc
inc
popa
les
mov
push
mov
mov
cmp
pop
cmp
addl
pop
cmpsb
cli
jg
lahf
fmul
call
gs
mov
cmp
fldenv
je
mov
push
and
outsl
and
sbb
adc
lods
gs
cmp
xchg
and
cli
cmp
lods
add
shl
push
pop
mov
mov
sub
push
or
pop
mov
rcr
push
test
inc
add
sbb
add
pusha
xchg
push
shr
cmpsb
mov
lret
mov
sub
and
in
jecxz
and
mov
pop
cmpsl
push
add
cmp
rcrl
insb
jns
mov
in
clc
lahf
test
mov
mov
dec
or
out
mov
and
popf
jbe
es
or
add
fadds
dec
outsl
xlat
in
orl
lea
xchg
stc
in
decl
out
mov
add
enter
mov
rcll
sub
jmp
shll
ret
decl
dec
xor
arpl
push
jge
fcmovb
rol
stc
sub
stc
clc
or
dec
dec
pop
mov
xlat
sbb
push
mov
push
add
addr16
outsb
pushf
mov
jl
test
push
sbb
or
outsb
jnp
xchg
sub
or
jp
incb
cmp
ja
pushl
out
jno
and
fcmovnb
dec
sahf
sub
out
lock
not
xor
loopne
inc
jb
cs
sub
push
mov
jo
mov
dec
in
dec
lahf
shl
push
adc
push
jmp
es
cmc
mov
imul
data16
stos
and
mov
sbb
scas
pop
push
fdivrs
rcl
jnp
mov
add
or
sub
xorb
mov
movsb
lret
insl
sub
jle
arpl
and
mov
mov
jmp
mov
push
ret
push
fiadds
jge
les
loop
add
ss
jp
jo
push
xchg
movsb
sub
or
cmp
inc
adc
sub
les
jmp
sub
add
push
xchg
cwtl
loopne
cwtl
inc
leave
cmp
cld
ret
lahf
inc
flds
xchg
stc
sti
mov
inc
cli
ret
add
stc
mov
inc
mov
sub
stos
pop
fdivrl
test
sbb
push
cs
dec
fcmovb
je
das
xchg
jo
lahf
enter
sbb
pusha
push
jno
jnp
icebp
movsl
jmp
or
mov
xlat
mov
and
xor
xchg
push
insl
out
mov
cld
sbbb
mov
dec
or
xchg
mov
add
pusha
loop
mov
out
lock
mov
ds
inc
loopne
imul
scas
repz
pop
icebp
popa
lret
xor
xchg
sbb
mov
popa
mov
loopne
ret
cmp
cmp
stos
or
ret
lock
fbld
stc
jmp
push
insb
fdiv
lods
lock
shlb
pop
xchg
rorl
mov
cmpsb
insl
das
xor
popf
and
jg
push
push
xor
gs
ja
lds
lret
hlt
push
xor
fucomip
sbb
int
rol
add
pop
and
mov
mov
pop
adc
cld
inc
aam
sub
add
jge
cmp
xchg
xor
jl
mov
mov
clc
fwait
cld
pop
dec
cld
fadds
pop
lds
mov
inc
jnp
pop
js
lcall
hlt
xor
mov
dec
lds
jp
jmp
js
lcall
data16
ret
je
stos
andb
nop
loop
adc
lret
fsubl
out
sbb
xchg
xchg
faddl
ljmp
pop
ljmp
movsb
pop
sub
mov
xchg
fcomi
adc
cmp
xchg
lock
notl
int
cmp
ret
cli
mov
inc
sub
sub
lods
inc
xchg
call
dec
shrb
call
push
jmp
mov
mov
inc
roll
inc
sti
mov
fcmovne
sbb
or
in
das
clc
sbb
add
sbb
add
imul
das
mov
clc
and
jmp
stc
outsb
inc
loope
jno
mov
cwtl
daa
xchg
loope
cli
iret
fnstsw
jmp
jb
fisttpll
pop
jmp
cmp
push
jnp
or
cld
rolb
fwait
leave
jno
inc
mov
sub
xlat
inc
or
xor
aas
jl
mov
loop
aam
xchg
jge
sbb
mov
negb
incb
xor
jae
aas
aad
mov
mov
push
inc
rorl
test
pop
xchg
gs
push
loopne
adc
xchg
jmp
scas
adc
fsubrl
xchg
jl
and
push
bound
mov
sbb
lcall
inc
cmp
jmp
pop
popa
cmp
push
in
pop
push
aas
mov
push
adc
ja
sti
ffree
sbbb
cmc
gs
xchg
inc
adc
push
out
gs
sub
hlt
inc
arpl
xor
in
hlt
or
mov
in
les
mov
sub
xchg
sub
mov
js
xor
jnp
cmp
push
inc
iret
outsl
ret
sub
loop
out
enter
roll
pop
inc
lcall
imull
das
lock
add
das
lahf
insb
int3
mov
mov
ljmp
xchg
loope
jns
or
lahf
out
dec
jae
lea
mov
push
fidivrl
xor
push
arpl
mov
ds
inc
pop
adcb
nop
jge
shlb
enter
js
cli
xchg
mov
scas
movsl
adc
jp
add
cmp
fwait
andb
push
or
stos
nop
scas
jo
sbb
dec
fwait
mov
jge
or
jne
outsb
leave
jmp
adc
test
inc
mov
gs
pop
xchg
pop
mov
test
jmp
lret
dec
push
and
add
and
mov
pop
roll
or
jl
mov
and
ds
cltd
call
fistpl
push
fs
sbb
sub
inc
stc
jbe
adc
test
ljmp
cmp
mov
sar
adc
cwtl
fwait
dec
daa
xorb
pop
out
xor
sub
or
inc
arpl
and
cmpsb
mov
xor
xchg
xchg
mov
mov
sbbl
mov
ret
repz
mov
pusha
push
push
adc
mov
adc
ljmp
aaa
mov
in
int
sarl
dec
fwait
adcl
sub
stc
mov
icebp
aas
mov
cmp
mov
fidivrs
pop
lds
cmp
or
jecxz
stos
mov
push
push
addl
xlat
xor
cmp
push
and
mov
out
or
pushf
dec
mov
cmp
aad
mov
out
inc
das
rcr
mov
jno,pt
clc
cld
push
jmp
mov
cmc
inc
enter
push
cwtl
fnstsw
inc
xor
inc
or
adc
hlt
xor
pushf
subl
jne
nop
into
cmp
mov
xor
scas
int
addr16
rcll
cpuid
cmp
sbb
bound
inc
push
std
jle
loope
lcall
or
inc
mov
mov
jmp
enter
jl
ror
dec
loop
push
dec
stos
jns
int
dec
shl
push
movsl
dec
jb
fldl
sub
xchg
dec
arpl
sub
lret
or
mov
out
insl
or
ja
sahf
dec
mov
ds
mov
add
and
xchg
inc
xlat
pop
inc
int3
or
inc
gs
enter
cmp
and
popl
mov
jnp
arpl
xchg
or
mov
mov
in
cmp
out
jae
cmpsl
jnp
das
jle
nop
sbb
int
sub
outsb
add
popf
inc
push
je
push
addr16
sub
inc
arpl
sbb
add
mov
cmp
xor
mov
sbb
push
jecxz
inc
jmp
imul
es
cmc
adc
jge
xor
fsubp
sbb
mov
xor
fnstenv
outsl
cmp
mov
rol
rcll
cltd
in
std
in
repz
or
stc
dec
cld
cmp
stc
cmc
sub
mov
addr16
pop
xchg
mov
or
cld
sub
push
cmpb
icebp
cmpsb
cmp
jle
cmpsb
js
and
aam
sub
cmp
mov
insl
mov
jb
mov
push
jo
mov
pusha
scas
xchg
cmp
in
cmp
stos
mov
mov
test
scas
dec
mov
xor
js
xchg
inc
pop
ja
pop
push
lahf
and
loope
xor
mov
lds
pop
mov
dec
ds
lcall
inc
sbb
inc
shr
sbbb
cmpsl
out
loope
out
sub
push
xchg
cmpsb
cmp
mov
jne
cmp
pop
bound
icebp
rorb
cltd
nopl
mov
ret
sub
pop
cmp
push
jp
pop
iret
lea
aad
or
enter
lea
pop
data16
jmp
cmp
xchg
fisttps
pop
or
inc
in
in
or
shll
mov
ret
sahf
jmp
lock
setae
dec
push
mov
outsl
jno
jnp
lods
fs
jb
adc
addr16
leave
in
fwait
mov
fcoml
dec
mov
pop
in
fs
dec
pop
stos
leave
shll
push
leave
bound
jg
clc
mov
pop
add
daa
jge
pop
jp
xchg
mov
rolb
insb
mov
sub
lret
loop
in
mov
sbb
push
adc
cmpsb
cmpsl
mov
mov
fs
xorl
shrl
push
mov
out
ljmp
loop
mov
cwtd
xchg
dec
in
std
scas
fwait
inc
push
push
xlat
sbb
jle
dec
push
sarl
mov
daa
paddw
adc
pushf
cmp
popf
repnz
imul
push
add
add
xor
pop
cmp
mov
js
mov
cmp
mov
ret
cmc
jae
aam
adcb
dec
shlb
lods
jle
push
insb
stos
imul
negb
in
mov
push
xor
xlat
jbe
push
and
pop
dec
push
pop
mov
pop
jl
rorl
and
shll
pop
subl
pop
ret
pop
mov
or
adc
cld
jl
mov
das
or
mov
je
shrb
ret
push
inc
fs
mov
jmp
lret
lcall
bound
add
push
ja
push
and
cld
fwait
pop
mov
fcmovnb
clc
add
push
popf
mov
lea
push
push
js
or
inc
add
add
clc
in
popa
push
mov
icebp
adc
movsb
mov
and
push
nop
sub
gs
mov
inc
rorl
out
loop
pop
shll
lds
or
push
mov
cmp
xor
aaa
xchg
xchg
cwtl
jge
sbb
sbb
es
xchg
push
and
and
pop
icebp
inc
add
xor
data16
mov
je
push
insl
ret
dec
in
sub
or
insl
fxch
pop
xchg
inc
xor
mov
jmp
adc
gs
and
inc
jle
dec
mov
lods
mov
ret
and
scas
out
icebp
and
adc
mov
push
iret
mov
aad
arpl
add
pushf
xchg
adc
stos
push
pop
sub
cmpsb
lret
adc
pop
mov
jno
in
mov
fsubs
fcompl
push
lea
push
test
das
inc
movsl
or
push
fwait
jb
xchg
lods
push
mov
je
mov
ss
mov
sti
jp
cmpsl
ret
cli
ja
xorl
movsb
push
scas
jo
cld
aas
pop
jmp
push
mov
mov
dec
xchg
sahf
out
sti
in
nop
aas
jle
pop
add
sbb
xor
ds
cs
add
cmc
sbb
or
inc
and
jmp
movsb
ficomps
pop
xor
iret
or
jg
and
xchg
cmp
es
aad
push
and
jmp
pop
push
fbld
mov
add
mov
mov
lcall
data16
pop
adc
push
sbb
movsb
into
aad
xchg
lret
push
push
stos
pop
inc
sub
rcr
cwtl
imull
xchg
jp
iret
insl
insl
call
stc
test
push
iret
loop
test
mov
pop
icebp
xchg
aas
and
loope
sub
mov
sbb
push
out
lea
filds
sub
pop
clc
sbb
push
sar
xchg
mov
mov
pop
cmp
jecxz
fcompl
sbb
xchg
andb
nop
test
mov
mul
into
loopne
jae
xchg
cmpsl
and
push
test
aas
pusha
imul
lock
push
mov
loop
inc
mov
and
adcb
xlat
rcrb
push
mov
inc
sbb
int
mov
sbb
sti
hlt
outsb
in
sbb
cmp
in
mov
inc
push
sub
mov
dec
dec
pop
dec
sbb
shll
loope
sbb
cli
jo
fwait
icebp
clc
push
lods
xchg
mov
imul
jg
xlat
mov
mov
out
fwait
adc
test
insl
pop
mov
xor
loope
pop
jne
imul
cmp
pusha
mov
sub
loopne
insb
scas
jmp
arpl
cmp
push
lea
xchg
jne
add
dec
adc
test
fs
adc
dec
aaa
cwtl
movsl
ret
sahf
adc
cmp
inc
dec
out
jl
dec
mov
jmp
addr16
inc
lds
mov
outsb
inc
fsubs
inc
cli
shll
cmp
nop
scas
cmp
add
loop
jns
adc
ds
xlat
lds
fdiv
stc
mov
aad
pop
clc
inc
mov
jmp
xor
mov
sahf
push
or
in
adc
push
pop
in
fwait
jle
adcl
fwait
dec
cmp
pop
pop
lods
gs
mov
sarb
xor
xchg
pop
cwtl
cs
mov
add
pop
cltd
push
ja
pop
and
int
data16
pop
rcrb
pop
mov
cmc
pop
loope
push
xor
push
and
clc
xor
insb
sub
mov
fs
push
mov
in
les
cs
pop
push
mov
or
arpl
lock
leave
lods
ja
mov
jbe
inc
mov
ficoml
mov
jmp
int3
fiaddl
and
xchg
add
enter
jge
add
inc
dec
out
sbb
outsb
movsb
mov
adc
fwait
addb
jo
xor
lods
push
pop
mov
push
cmp
sub
xchg
cmpsl
xchg
and
andb
sarl
push
fisubrl
cmp
xchg
imul
daa
out
pusha
jge
andl
sub
cmpl
lds
push
xor
mov
push
aas
xchg
mov
js
pop
in
cli
xor
add
or
push
jmp
sub
mov
mov
sub
xor
push
push
push
mov
pop
xor
sbbl
scas
ror
adc
mov
xor
fwait
icebp
in
mov
insb
mov
test
ret
push
mov
cmp
pop
pop
pop
jnp
loope
pop
push
jns
popa
xchg
and
and
xchg
mov
sahf
je
and
paddq
dec
mov
popa
mov
jecxz
jl
push
or
cmp
mov
fists
fdivrl
jecxz
pop
sub
std
cmp
loop
lock
popf
xchg
popf
pop
xor
sahf
ss
dec
pop
and
daa
clc
pop
jecxz
imul
mov
adcl
mov
stos
lds
pop
sub
cmp
or
jmp
scas
xor
and
cmp
or
fstps
push
cmpsl
in
gs
popf
xchg
out
xor
int3
xchg
hlt
enter
int
outsl
scas
mov
pop
xor
and
out
and
pop
adcl
push
addb
dec
fistps
iret
hlt
notb
dec
and
jo
mov
dec
xor
xchg
fs
test
pop
xchg
ja
jns
addr16
pop
inc
bnd
mov
inc
pop
mov
addb
xchg
jae
test
es
aaa
push
loopne
in
pop
mov
add
add
in
cs
adc
shll
mov
mov
sti
sub
xor
orl
push
push
adc
stos
scas
dec
stos
faddl
js
jecxz
clc
shll
pop
aam
jno
pop
and
sbbl
and
jl
shlb
pop
test
add
icebp
orb
sbb
and
in
loope
lea
aaa
mov
sbb
pop
inc
sbb
ljmp
in
outsl
jg
jge
push
in
fldl
rorl
mov
adc
aas
rcrl
bound
int
loope
into
pop
adc
sahf
loopne
scas
gs
fistpl
jo
inc
jbe
rcrb
cmpsb
push
or
xor
and
in
mov
fsubrs
mov
or
lods
jl
mov
pmulhuw
repz
xchg
dec
bound
xlat
dec
in
daa
fs
add
dec
rol
int
xchg
outsl
sbb
mov
jns
negb
jo
pop
out
cli
jae
sub
adc
aaa
sub
inc
adc
sub
push
push
jp
adc
jne
repnz
lret
pop
xchg
cmpsl
xor
push
xchg
adc
adc
xchg
setle
loop
add
push
dec
test
dec
sbb
xchg
cmp
or
sahf
lds
and
lea
mov
jg
fwait
mov
call
popa
xchg
flds
add
sahf
shr
dec
call
sbb
scas
mov
call
out
xchg
cmc
or
pop
cmp
mov
pop
push
cld
dec
sbb
or
push
aas
push
and
loope
call
stos
xor
repz
cs
pop
dec
out
rcrl
das
daa
mov
repz
dec
lea
add
sub
pushl
pop
int
mov
jns
leave
ficoms
and
mov
lcall
push
add
dec
syscall
add
xchg
int
iret
call
fistpl
pusha
aaa
xchg
push
xlat
pop
nop
notb
xchg
push
bound
adc
cld
fiaddl
add
daa
es
cld
xchg
jmp
pop
push
pushf
mov
sbb
dec
mov
sub
dec
repnz
or
jae
push
loope
out
popa
fdivrl
in
push
xchg
xor
pushf
dec
js
out
leave
sub
adc
mov
lods
pop
lret
pop
ljmp
sbb
mov
js
push
dec
jnp
jmp
sub
xlat
cmp
test
mov
sahf
and
mov
jbe
push
add
cmc
jmp
mov
je
mov
call
or
aaa
cmp
xchg
xchg
xor
xchg
outsb
dec
loope
jle
push
movsl
xlat
pop
mov
test
push
loope
dec
mov
xlat
mov
mov
pop
scas
sbb
shrl
dec
xchg
fisubrl
adc
cmpsb
out
sahf
insl
aaa
jmp
adc
xchg
push
js
pop
pop
lret
jbe
mov
sbb
push
pop
ror
xor
pop
adc
xchg
mov
mov
xlat
hlt
cmpsb
push
hlt
xchg
lcall
fs
inc
in
sbb
jp
hlt
fs
mov
xor
popa
orb
loopne
mov
dec
out
lock
mov
xchg
mov
fimuls
jp
push
push
out
xchg
punpcklbw
xchg
push
hlt
mov
adc
outsb
jge
inc
or
jo
and
inc
data16
sub
mov
and
add
dec
lcall
and
cmpsl
push
sbb
mov
cld
pop
pop
xchg
pop
psrad
adc
out
movb
sbb
out
cmpsl
call
cmpsb
daa
add
out
test
adc
lea
push
cmp
mov
mov
int
or
jnp
lock
jbe
xor
mov
int3
mov
dec
or
push
sti
outsl
js
loop
cli
mov
std
sbb
xor
nop
imul
push
adc
cltd
pop
fadds
xchg
pushf
test
mov
bound
bound
paddb
pushf
push
cmp
cmp
in
jno
sub
adc
pop
adc
clc
popa
insb
in
cmp
cmp
adc
mov
pop
mov
add
and
nop
ret
orb
cmp
out
jl
sub
mov
lahf
pop
cli
mov
jmp
int3
mov
pop
iret
insl
pop
in
in
jle
adcl
out
pushf
or
mov
imul
mov
jmp
shrb
fcoms
mov
xchg
mov
pop
and
les
in
xchg
arpl
push
mov
dec
popf
pop
sbb
jge
jp
sti
data16
or
adc
cmp
xchg
pop
fdivl
jo
bnd
mov
mov
call
insl
scas
loopne
js
fimuls
mov
mov
cmp
dec
ss
mov
add
inc
and
inc
movsb
fcmovu
mov
aaa
or
jmp
xchg
push
scas
push
cwtl
xchg
mov
and
mov
xchg
cltd
pop
in
inc
mov
dec
data16
sub
sbb
xchg
mov
jnp
sahf
je
ret
xchg
mov
lods
sbb
mov
bound
test
xrelease
sub
test
mov
imul
jbe
sahf
adcl
pop
call
sbb
inc
pop
addr16
cmp
mov
test
inc
add
stos
shrl
adc
adc
daa
or
lret
movsl
mov
and
xchg
or
arpl
push
mov
sub
aam
rcrl
mov
xor
ud1
cwtl
pop
push
push
add
rcl
cmp
leave
aaa
sti
lock
hlt
push
lahf
push
dec
jmp
push
mov
mov
stos
imul
pusha
icebp
xchg
dec
push
jmpw
mov
cs
mov
mov
stos
inc
outsl
pop
in
aam
pop
xor
sub
hlt
jp
inc
pop
sub
or
inc
sub
mov
and
cmpsl
xchg
lock
sub
aad
js
jae
hlt
xor
popa
stos
and
jae
sub
in
mov
xchg
add
shll
maxps
out
jo
mov
cwtl
mov
cmpsb
imul
sub
jno
cmp
xlat
push
jae
shl
mov
insl
add
cmc
arpl
mov
test
and
push
stos
pop
inc
add
push
mov
dec
xchg
push
xchg
push
xchg
jnp
xchg
jns
pop
cmpsl
pop
idivl
bound
xchg
xchg
mov
imulb
push
scas
jecxz
xchg
add
jg
aas
push
lods
inc
dec
imul
inc
push
rclb
push
hlt
into
dec
jne
sub
aad
add
add
mov
adc
mov
mov
int
fwait
cmpsl
xor
dec
cmp
jnp
or
jb
nop
jge
hlt
movsb
lcall
in
in
inc
cmp
add
or
pop
jge
jb
pop
sub
dec
loop
bound
mov
ss
pop
mov
nop
je
sub
sub
jle
loop
imul
mov
or
fcomps
mov
sbb
mov
sbb
jb
mov
pushf
mov
inc
and
and
les
adc
xchg
leave
movsb
push
aad
pop
aad
cmp
lods
cmp
cmpsl
stos
push
xlat
call
or
cmp
mov
jle
dec
daa
insl
and
outsb
rorb
dec
test
inc
lods
add
test
mov
xchg
out
sub
pop
cmp
dec
insl
add
addr16
xor
stos
ja
push
inc
shr
jns
lods
into
jne
test
popf
fs
xlat
in
cmp
ret
addr16
cs
mov
cli
test
xor
inc
aaa
lret
mov
push
cmp
jne
cltd
pushf
and
jb
sbb
js
mov
inc
fsts
stc
fimuls
roll
or
popf
cmp
jg
rcr
or
mov
ja
negl
clc
clc
cmp
push
mov
enter
movsb
fstpl
and
cltd
mov
and
jbe
push
stos
cmp
mov
iret
out
mov
add
jno
pop
outsb
add
js
jne
sbb
dec
mov
xor
repz
dec
mov
pop
scas
jns
dec
adc
scas
sub
sbb
mov
imul
push
lds
inc
call
lret
inc
adc
mov
push
call
imul
mov
xchg
cmc
mov
cmc
pop
inc
in
adc
xchg
daa
sbb
sbb
push
cwtl
cmpsb
rol
psrld
outsb
in
push
mov
subl
and
push
ret
inc
pop
into
and
xchg
shrl
mov
dec
jmp
inc
loop
lret
std
inc
mov
es
test
sub
adc
cmp
mov
pop
test
punpcklbw
out
inc
push
sub
pop
or
out
adc
inc
test
ficoml
sbb
outsl
pop
add
in
ret
fstl
mov
pop
es
lret
add
fmulp
aad
insl
inc
mov
enter
dec
out
fisubl
mov
loop
jb
adc
test
push
and
jbe
mov
xlat
push
or
test
lcall
lea
jne
mov
push
add
xlat
dec
ret
push
add
pop
ds
cmc
mov
pop
lret
clc
and
loope
cmp
mov
inc
lea
xchg
mov
sub
mov
andl
out
xchg
cmpsb
cmpsb
orl
dec
nop
adc
sub
mov
cli
jmp
xchg
mov
push
insl
push
cmpsb
in
xchg
dec
jp
cmp
fisttpl
popa
inc
mov
dec
ja
int3
rcrb
stc
pop
jo
cmc
jmp
sub
cmp
mov
mov
adc
jmp
test
and
mov
mov
pop
in
fsubrl
jne
movsb
cmpsl
push
inc
hlt
inc
cwtl
jnp
lods
mov
jb
aad
or
outsl
add
decl
jmp
cwtl
jp
dec
les
dec
push
sub
mov
add
stos
lahf
push
and
push
idiv
lahf
stos
push
add
fstps
pushl
sbb
jmp
out
int
adcb
xlat
inc
mov
add
sbb
and
outsb
xchg
mov
push
sti
inc
fildll
test
int
fcompl
daa
push
pusha
pop
hlt
lods
test
or
loopne
mov
test
cwtl
stos
fmul
xchg
mov
cmp
int
push
sbb
nop
mov
jns
inc
mov
ret
dec
loope
or
mov
aad
test
cmc
dec
in
inc
sub
and
xchg
add
cmp
sub
stos
dec
icebp
ret
mov
fstl
adc
or
lahf
push
orl
ret
mov
mov
jno
lods
adc
adc
das
pop
imul
outsl
jp
imul
cld
loopne
xchg
inc
mov
jbe
add
and
xchg
xor
cmp
ss
test
jo
pop
arpl
push
push
cs
out
divb
push
and
lods
pop
pusha
ljmp
mov
mov
loope
fsts
add
xchg
pop
iret
mov
adc
add
fcoms
push
dec
js
push
or
jne
dec
imul
sbb
pop
cmp
inc
add
cmp
loope
icebp
leave
add
sbb
shrl
xchg
xchg
movsb
mov
pop
les
loopne
sahf
xorl
cmp
ja
cmp
mov
push
in
into
pop
or
outsb
or
aad
out
lret
dec
and
sbb
lret
aaa
xor
roll
scas
rclb
mov
push
iret
and
lea
pop
cltd
mov
fidivrs
popf
repnz
or
and
nop
shr
push
and
xlat
popa
mov
or
pop
or
lea
add
add
and
jne
pushf
inc
call
and
fs
cwtl
out
int
sti
sbb
xchg
sbb
std
xor
rorl
jb
mov
inc
adc
mov
jnp
test
sub
orb
mov
or
pop
mov
push
mov
sbb
lea
jbe
cli
mov
ljmp
push
incb
and
xor
lret
fdiv
mov
pop
xor
pop
dec
jge
lock
sbb
pop
in
call
jecxz
out
outsb
mov
xor
and
mov
cmp
dec
sarb
push
add
ror
cmpsb
in
pop
icebp
push
cmpsl
mov
popf
mov
pop
enter
jo
and
pop
fidivs
sarb
sahf
adc
call
jo
mov
insb
and
sbb
jl
inc
push
rep
xchg
repz
pop
test
cmp
mov
inc
adc
orl
cmp
pop
push
mov
popf
rcrl
sub
clc
mov
jg
xchg
aaa
sub
or
fs
divb
popf
jmp
inc
or
sub
loop
fwait
xor
pop
inc
jg
bnd
aad
jecxz
imul
pusha
int
adc
or
inc
mov
dec
pop
pop
in
jno
fisubrl
repnz
ljmp
out
sti
das
cmp
and
jl
es
in
xrstor
mov
jmp
push
std
xchg
inc
testl
stos
jb
ret
jecxz
jbe
fsub
les
std
xchg
and
pop
insb
lgdtl
scas
or
adc
sbb
cmp
jl
push
inc
ss
js
sbb
subl
push
push
and
dec
shlb
gs
lock
xorl
in
mov
mov
sub
sbb
subb
sub
mov
xor
fs
and
aam
cltd
setne
mov
dec
es
mov
inc
xchg
scas
cmpsl
hlt
jns
shrb
ret
decl
push
test
scas
add
push
neg
insl
inc
or
loopne
and
xor
mov
call
movsl
idivb
mov
mov
flds
scas
jne
mov
adc
cmpb
xchg
sti
lcall
add
adc
or
cmp
mov
lret
lods
sub
std
adc
mov
inc
fcmovb
lock
mov
jne
push
insl
out
repz
xor
mov
xchg
jbe
mov
test
add
into
rcr
cltd
xchg
pop
sbb
or
jnp
bound
jbe
out
mov
fldt
xchg
xor
pop
push
cmp
sbb
out
sarb
out
adc
mov
iret
xchg
cwtl
push
scas
jne
shll
lret
ss
std
push
repnz
aas
iret
mov
mov
insl
sti
sub
mov
or
mov
xor
or
xchg
out
and
fcoms
xchg
or
sub
adc
stc
bsf
mov
daa
scas
ss
repz
push
movsl
sub
in
testb
mov
lea
push
sahf
mov
call
jmp
dec
add
push
mov
xor
push
cmp
mov
mov
jae
aaa
in
int
pop
push
movsb
jo
les
inc
dec
test
movsl
aas
xor
push
adcl
sub
fsubrp
push
outsl
jle
push
aas
lock
or
in
mov
rcrb
test
arpl
ds
push
mov
jns
sub
cmp
out
in
dec
fcomps
insb
pop
std
mov
les
in
sub
into
mov
jnp
out
stos
in
mov
inc
in
ror
jnp
lret
or
ss
or
in
dec
loop
popfw
ret
pop
add
add
data16
pop
je
mov
xchg
adc
dec
jg
jecxz
aad
jno
aad
cmp
ror
push
mov
mov
lea
push
pop
pop
std
and
aas
popf
xchg
or
jbe
inc
rorb
xor
and
fidivs
push
cmp
shlb
mov
cld
mov
xchg
data16
xor
call
mov
cmp
fcmovnu
push
jmp
fiaddl
movsb
push
pop
sub
cmc
ret
adc
xor
cwtl
iret
sub
popf
dec
mov
imul
push
xchg
outsb
inc
lcall
ret
repnz
mov
dec
xchg
loopne
ret
stos
cwtl
decl
jae
push
adc
or
fmuls
sub
repz
in
mov
dec
and
mov
add
adc
mov
imul
pop
lods
jbe
add
inc
mov
rcrl
xor
and
test
sbb
sti
lret
or
das
dec
xchg
mov
adc
lret
cmp
sbb
stc
pop
rorl
ljmp
inc
inc
jmp
mov
insl
sbbb
lods
in
inc
in
pop
add
sbb
adc
and
pop
lret
mov
imul
in
dec
cli
sub
cltd
icebp
movsb
push
cwtl
arpl
add
pushw
and
inc
or
mov
push
adc
arpl
mov
mov
cmp
into
test
aas
pushf
mov
movl
scas
stos
adc
jp
std
adcb
pop
mov
jns
fdiv
push
push
fbstp
stos
inc
dec
ja
xchg
subb
jg
out
imul
movsb
pop
popa
xchg
pop
push
les
popf
rcrl
cld
pop
inc
fsubrs
fdivs
pop
enter
mov
inc
sbb
or
rcrb
xor
fcomps
and
push
aam
inc
or
call
adc
std
add
dec
lea
mov
out
dec
out
lahf
cwtl
adc
cmc
sbb
std
test
or
pusha
sub
mov
push
cmp
lahf
cmpsb
push
jg
dec
or
mov
jp
and
enter
inc
push
dec
adc
lds
out
dec
mov
int
push
xor
jae
int
fisttps
cs
pop
sub
fisttpl
dec
stos
mov
cmc
mov
and
cmpsb
daa
lret
lcall
loopne
lods
mov
shrl
jg
xchg
dec
jl
popa
out
nop
push
or
lahf
sbb
pop
cltd
decb
test
cmp
jbe
mov
mov
xor
sbb
jnp
mov
jg
pop
lahf
mov
adc
clc
rorl
ljmp
mov
pop
in
pop
pop
mov
push
or
inc
jecxz
sub
jno
push
enter
dec
scas
sub
mov
add
sub
mov
ds
daa
lods
inc
scas
or
xor
pop
loopne
push
in
out
sbb
sub
push
mov
inc
int
pop
or
push
test
imul
movsb
ret
scas
testb
nop
cmp
push
or
fld
inc
jmp
ror
cli
popa
lods
sub
mov
adc
ss
push
mov
jmp
or
xchg
pop
xor
push
repz
scas
sbbl
lds
insl
push
testb
fs
fs
cmpsb
daa
cmp
repnz
sub
and
jno
pop
test
ss
hlt
sbb
jns
je
jbe
push
sub
cwtl
pop
add
outsl
cmpsb
sub
pop
jo
insl
loope
pop
fdivl
lcall
push
mov
into
imul
cmpsb
sbb
je
imul
jg
mov
adc
sbb
inc
add
xor
pop
lock
push
adc
pop
mov
push
rsm
sbb
cltd
arpl
aaa
pop
sbb
mov
lret
jb
or
insl
cwtl
out
outsb
mov
jle
inc
mov
test
sub
ja
lret
pushf
jne
hlt
ss
lds
and
ret
shrl
cli
jl
push
outsl
lcall
aad
leave
pop
jge
rorb
mov
addr16
or
pop
jbe
and
sub
sbb
bound
xchg
jmp
xor
in
fcoms
mov
add
cmp
mov
movl
xchg
lret
loop
rcrl
jmp
lea
jo
mov
sub
cmpsl
xor
mov
adc
adc
loop
jnp
call
in
stc
and
ret
loop
daa
jecxz
xor
jg
sub
and
mov
scas
xchg
inc
fldt
outsl
xchg
popl
mov
mov
or
push
inc
out
lret
out
outsb
loope,pn
mov
int
sti
jns
popa
je
xchg
sub
data16
lahf
xor
inc
in
pusha
sbb
stc
pop
mov
pushf
pop
sbb
xchg
das
mov
mov
sub
aas
dec
out
call
test
leave
mov
lods
fildl
mov
xor
sbb
mov
fistpl
dec
mov
lretw
xor
rclb
scas
cmp
pop
jp
pop
sub
pushf
fimuls
mov
pop
jae
add
fists
mov
push
dec
dec
iret
sbb
xchg
repnz
js
mov
xadd
fbstp
mov
pop
clc
fucomip
fucom
mul
pop
push
xchg
dec
dec
sbb
inc
adc
ret
adc
cmp
imul
xor
test
fistl
sbb
popf
mov
aad
mov
pop
jno
js
jecxz
hlt
dec
push
repnz
repz
jns
clc
jp
jmp
sar
mov
push
xorb
bound
and
xor
loop
stos
mov
pop
add
shl
dec
push
push
jle
je
and
nop
push
dec
and
int
sahf
mov
and
js
and
ljmp
sahf
in
mov
dec
sbb
inc
jae
and
jae
pop
shll
fs
mov
pop
xchg
jp
xor
mov
imul
xchg
sub
shlb
aas
pushw
add
lahf
sahf
cltd
mov
outsb
jb
aas
fstl
push
sbb
subl
jnp
clc
imul
in
push
data16
sub
add
out
ss
adc
dec
fnstenv
lea
rorl
or
pushf
or
out
lcall
out
mov
sarl
pop
shll
xor
mov
outsl
sarb
xor
pop
add
sbb
fcoms
mov
stos
enter
or
arpl
cmp
jns
fidivs
mov
and
mov
jbe
xchg
movl
scas
mov
iret
je
push
inc
aad
xor
sub
mov
adc
jge
jge
ljmp
jne
or
dec
mov
fdivs
pushf
sbb
mov
fidivl
mov
stc
mov
insl
rcll
dec
inc
xchg
mov
mov
aad
or
dec
dec
sub
adc
outsl
push
and
test
pusha
stc
fsubp
jp
xchg
push
loope
fdivrl
mov
fisubrl
in
adc
pusha
scas
and
cmc
inc
leave
sbb
add
xchg
jo
rcrb
loope
xchg
aaa
in
sub
divb
lods
lock
fdivrs
mov
xlat
cmc
pop
jecxz
inc
pop
rolb
pop
andb
push
push
out
inc
rclb
clc
divb
test
or
ss
arpl
sub
or
xor
fnstenv
sbb
jns
pop
inc
call
dec
xchg
xor
jb
loope
inc
pop
pop
ficoml
test
roll
movsl
jmp
test
dec
ret
fwait
jns
cmc
dec
cmpsb
jecxz
or
xor
mov
push
xchg
aaa
shl
mov
ret
out
ficoml
sbb
sti
ss
test
add
aaa
flds
cmp
je
pop
jae
mov
xchg
ffreep
pop
mov
pop
nop
ljmp
and
and
stos
movd
xlat
ja
xchg
mov
cmp
push
in
in
pop
cs
dec
jbe
ja
or
mov
out
popa
repnz
sarb
lcallw
inc
xor
in
mov
cmpl
xor
sbb
aaa
lcall
dec
insb
xchg
lock
pop
addb
iret
cmp
outsb
xchg
mov
add
add
or
rcrb
pop
aaa
dec
test
dec
inc
sbbl
je
ds
cmpsb
push
adc
fucom
xor
scas
shlb
sbb
aad
icebp
adc
addr16
jb
push
sarb
je
ficoml
test
jecxz
imul
lods
xchg
lds
fadds
lods
or
adc
stc
xlat
aas
jecxz
scas
int3
lcall
push
pop
sub
cmc
mov
jge
into
dec
mov
add
and
xchg
pusha
inc
sbb
rep
lock
test
lock
int3
scas
or
jae
xchg
and
lods
ds
adc
jle
mov
inc
mov
mov
enter
xor
addb
xchg
std
rorl
inc
outsl
repnz
and
call
xor
movsb
out
jmp
xchg
movsb
in
push
mov
enter
pop
pop
std
bound
push
fsts
pop
xor
xchg
jo
in
pop
cli
cmp
sahf
nop
out
dec
popf
outsl
sbb
stos
mov
scas
icebp
repz
clc
out
dec
movsl
and
and
push
pop
or
jno
sub
shl
adc
arpl
sbb
xor
and
lahf
imul
shl
pop
xchg
xor
mov
mov
jg
out
pop
orps
sahf
fcmovnu
test
xor
ljmp
inc
inc
mov
gs
in
sbb
outsl
xchg
add
movsl
jmp
jnp
addb
lock
dec
push
inc
bnd
aad
test
sarl
mov
lock
xchg
or
stos
dec
sub
inc
jbe
adc
shlb
jns
icebp
mov
fsubs
jb
xchg
pop
cmpsl
mul
pushf
mov
movsl
sub
dec
xchg
shrb
or
cmp
mov
inc
jnp
mulb
push
pop
push
inc
ffree
push
pop
sbbl
add
cmp
jmp
mov
adc
stc
xchg
xchg
push
pop
stc
xor
lahf
icebp
and
push
js
lea
xchg
das
imul
cwtl
fsub
out
xor
fcomps
icebp
mov
fsubs
or
push
sti
sub
jb
loop
fwait
and
push
add
rol
sahf
sbb
dec
xlat
push
pop
and
adc
pop
mov
dec
mov
mov
xchg
movsb
xorl
cld
fistpll
mov
arpl
nop
aas
iret
loopne
sti
out
repz
sahf
pushf
in
aaa
xchg
jecxz
fnstenv
xchg
fldl
in
jno
jae
movsb
cmc
add
dec
test
mov
mov
xchg
sysenter
bound
jne
xor
mov
xchg
stos
popa
jne
adcl
mov
push
mov
adc
fidivs
inc
lahf
pop
push
in
add
mov
out
mov
notb
jbe
jns
out
inc
xor
adc
fistpl
jmp
sbb
mov
and
xchg
mov
dec
ret
nop
les
fmuls
dec
jo
pop
pop
shll
mov
xor
mov
xchg
push
pop
movsl
int3
or
sbb
je
enter
daa
cltd
push
adc
adc
sub
push
test
imul
lds
dec
ss
jnp,pn
xchg
test
inc
cmp
pop
arpl
mov
jp
cmp
cmpsb
iret
sti
mull
das
add
fdivs
push
push
fsubrl
pop
das
xor
sahf
cmp
pop
popf
out
mov
dec
and
shll
out
xor
pushf
adc
and
sahf
scas
mov
xchg
fsubl
leave
pop
jne
mov
cli
sbb
shrb
and
pop
mov
pop
shl
hlt
aas
xchg
mov
sti
lods
adc
sbb
xchg
dec
sub
jge
and
movsl
int3
push
xor
stos
in
push
popl
pop
aad
out
insb
pop
fucomip
pop
in
push
and
push
out
pop
dec
pop
mov
cwtl
incb
out
push
and
jle
push
fs
sub
fstpt
lret
or
mov
or
add
jne
cmp
push
jecxz
call
lcall
hlt
fmul
cmp
sbb
jecxz
arpl
out
js
mov
pop
mov
jb
and
ljmp
in
mov
and
sbb
pop
jns
dec
sahf
outsl
xchg
dec
jne
mov
in
add
jmp
and
jbe
and
aaa
clc
fsubl
or
rclb
cmpsb
aad
int3
pop
and
mov
movl
negb
xchg
popf
adc
xor
mov
push
inc
adc
insb
pusha
dec
pop
test
jno
cmp
inc
push
gs
shrb
mov
dec
cmp
movsl
insb
pop
mov
jb
xchg
testl
call
ds
add
dec
mov
fwait
sbb
sbb
lcall
fcompl
sub
sahf
mov
dec
sbb
div
adc
into
cmp
dec
push
mov
xchg
or
adc
popa
mov
aam
jle
xchg
inc
inc
bound
adc
outsl
ret
in
sub
in
popf
jne
jno
mov
xchg
pop
jle
pop
cmp
cmpsb
shll
inc
xchg
xor
mov
bound
jle
mov
cltd
or
push
push
cli
adc
pop
lret
ja
test
xlat
in
test
in
bound
xchg
jp
mov
in
jbe
arpl
and
repnz
stos
lret
adc
cwtl
jmp
mov
sub
lcall
icebp
adc
and
mov
rcrb
daa
scas
aas
push
mov
movsl
dec
pusha
outsb
lds
aaa
testb
adc
push
mov
inc
outsb
int3
lea
and
sub
xor
cwtl
orl
fimuls
adc
scas
stc
aad
rcrl
sahf
js
rorl
sbb
pop
fistps
shll
add
mov
mov
mov
mov
cmp
adc
fsubr
mov
jns
out
test
pmuludq
cmp
outsl
mov
vmovaps
lock
inc
repnz
and
aad
xchg
pop
and
cld
mov
decl
or
sub
mov
mov
popl
mov
mov
test
push
out
cwtl
in
pop
or
orl
in
pop
je
shrb
add
out
subl
cli
xor
xor
pop
sub
into
repnz
cmp
in
negl
mov
out
xchg
dec
cwtl
repnz
adc
cmp
jg
loope
mov
sbbl
loopne
iret
jmp
xor
add
in
pop
mov
pop
jno
jns
subl
sub
aam
inc
je
push
lock
push
cld
xor
inc
mov
cmp
mov
dec
mov
mov
and
insl
pop
mov
pop
subl
das
xor
xchg
adcb
enter
jae
jecxz
adc
or
xchg
xchg
aad
popa
jno
test
cmpsb
or
and
shlb
adc
in
lret
add
inc
movsb
lock
cli
cmp
fsts
mov
js
loopne
scas
and
adc
mov
sbb
sub
fimuls
push
sbb
test
sbb
push
ljmp
jno
xor
arpl
inc
in
lret
mov
jnp
mov
cmp
sub
dec
adc
aaa
cld
jp
ja
repnz
xor
mov
xchg
les
mov
adc
dec
or
jle
inc
cmpsb
stos
stc
std
mov
popa
push
insl
dec
ss
repz
mov
insb
movsl
out
sahf
out
loop
dec
jo
mov
pop
xor
sti
neg
js
xchg
jl
pop
loop
jns
pop
pop
dec
mov
dec
imul
arpl
mov
dec
adc
sbb
sub
cmp
or
push
addr16
addr16
sub
int3
mov
sub
push
inc
mov
sub
adc
aam
mov
and
mov
xchg
pushf
xchg
aaa
fsts
jg
xor
sub
arpl
nop
push
decb
cltd
sub
pop
cmp
fldl
hlt
arpl
movsb
out
mov
aaa
mov
rclb
dec
cwtl
add
stc
xor
mov
push
stc
dec
movsb
fidivrs
fwait
jb
ret
dec
mov
jmp
dec
sar
mov
popf
dec
push
push
sahf
fsub
vpminsw
int
mov
mov
lea
sub
mov
jl
add
test
cmc
push
stc
jo
sti
dec
mov
cmp
pop
jne
mov
jae
or
jb
addr16
inc
dec
push
outsb
aam
push
mov
addr16
jo
inc
pop
dec
cmpsl
stos
repz
ja
lret
inc
imul
jmp
pusha
gs
push
push
out
or
mov
insl
out
cmp
xor
xor
stos
lods
push
xor
dec
or
pop
repnz
mov
ja
out
repz
xchg
lahf
mov
pop
mov
or
mov
jbe
mov
inc
aaa
sti
mov
ret
mov
inc
enter
fsubs
dec
pop
les
pop
test
adc
xor
iret
mov
cwtl
adc
adcb
pop
xchg
in
bound
and
add
jne
enter
pop
add
pop
loopne
mov
shr
adc
push
add
cwtl
rcrb
popa
addb
icebp
mov
lret
lods
and
jle
mov
dec
xchg
aaa
dec
mov
xor
leave
out
add
lods
mov
fiaddl
repnz
push
lret
pop
add
jbe
sub
jo
add
divb
test
fs
in
push
js,pt
stc
lret
fnstsw
test
movsl
adc
clc
lea
cmpsb
lret
push
and
aad
aad
loopne
sub
mov
call
inc
xor
nop
cmpsl
jno
pop
mov
testb
add
and
xchg
daa
inc
out
jl,pt
mov
ret
ljmp
ja
add
cmc
fidivrs
push
mov
in
lds
xorl
jne
push
add
clc
ret
mov
jo
iret
cmc
jle
xchg
aad
xchg
lock
leave
adc
sbb
sbb
add
or
popa
jo
dec
jle
cmp
xchg
neg
mov
aaa
adc
je
and
add
inc
movsl
into
das
insl
and
jae
orl
jne
mov
mov
dec
bound
jae
imul
jnp
mov
jle
jecxz
pop
nop
shlb
pop
fstpl
fidivl
xor
or
stos
es
push
dec
adc
stos
sti
sbb
rcrb
pushf
iret
dec
shll
cltd
mov
cmpsb
hlt
cwtl
lcall
xchg
into
outsl
dec
push
stos
dec
stc
push
sub
pop
pushl
xor
jmp
sbb
add
xchg
imull
add
inc
xchg
fnstcw
sub
bound
xchg
out
dec
lcall
pop
push
adc
cmpsb
jle
xchg
mov
jge
loop
test
in
jl
cltd
imul
or
repnz
and
in
xchg
pop
das
leave
sub
sti
mov
and
loop
push
lahf
lret
or
cmp
and
dec
pop
xor
iret
gs
mov
insl
loop
or
in
rclb
cmp
mov
xchg
test
iret
and
xchg
shr
test
dec
test
aaa
xchg
aad
jbe
je
loope
jp
in
or
xor
mov
xchg
scas
call
xlat
lds
fdivr
add
inc
out
mov
mov
imull
lods
pushf
in
out
push
xor
lds
shl
inc
in
adc
jb
int
cmpsl
pop
sub
mov
mov
or
fwait
das
data16
and
pop
ds
xor
and
js
push
cmpsl
pop
sub
ss
ret
or
leave
test
aas
inc
lret
mov
or
aas
stos
movsl
ljmp
dec
push
fwait
pop
scas
mov
pop
pushf
gs
xlat
push
mov
inc
push
xlat
les
cmp
xor
stos
imul
lock
test
sbb
cli
mov
roll
ret
jmp
pop
ds
push
icebp
mov
dec
mov
mov
push
mov
mov
or
adc
cmp
xor
mov
xchg
mov
sbb
push
fnsave
sub
cmpsb
ret
xchg
push
pop
jns
stos
andb
mov
sahf
mov
dec
xor
mov
jge
adc
and
mov
jb
int3
int
test
test
pop
cmpsb
adc
in
stos
push
test
push
jbe
mov
scas
loopne
mov
mov
push
out
or
push
pop
jge
aad
stos
inc
mov
ret
mov
scas
int3
push
movsl
insl
and
sub
mov
add
enter
iret
add
out
cltd
int
mov
loopne
imul
insl
imul
outsb
sbb
xchg
inc
pushf
sub
cmpsl
movsb
jb
int
movsb
lods
stc
jo
jecxz
sti
stos
cmpsb
sub
lret
push
adc
test
ret
cmp
xchg
jle
inc
fadds
imul
int3
in
fwait
xchg
xchg
pop
add
lock
jno
or
jp
cmp
or
ror
mov
pop
lods
imul
repnz
push
movsb
int3
xorl
xor
cmc
xor
sub
popf
addb
ja
lods
scas
pop
ret
cmc
sahf
into
imul
xchg
xlat
sub
jl
aad
push
mov
rcll
mov
mov
push
insb
rcl
imul
mov
inc
out
or
mov
mov
mulb
cwtl
mov
inc
lea
pop
inc
adc
movsb
xchg
in
jp
cwtl
jns
mov
pop
out
mov
push
imul
xor
cmp
cmp
mov
iret
orl
gs
jae
inc
clc
mov
out
mov
adc
sub
dec
pop
outsl
jmp
out
dec
loopne
fistl
inc
aaa
add
jle
jo
in
test
dec
in
scas
roll
xchg
aas
jne
xchg
inc
loop
mulb
dec
lods
mov
pop
dec
pushf
leave
out
andl
pop
int
repnz
mov
scas
pop
mov
popf
add
dec
xchg
or
mov
stos
add
jg
push
lock
and
push
data16
push
scas
and
imul
mov
rorl
xor
xor
jge
dec
pusha
dec
push
stos
sub
pop
sub
mov
fidivl
ret
xlat
mov
fisubs
insl
mov
call
jmp
enter
je
push
call
or
imul
sbb
pop
int3
mov
adc
lds
xchg
jb
es
les
jnp
stos
gs
adc
repnz
insb
adc
lods
shlb
js
mov
xor
aam
mov
sub
rorl
aas
in
mov
fs
ds
push
add
push
xchg
leave
push
mov
xchg
adc
lods
insl
mov
cmp
dec
cltd
outsb
cmpl
shrb
or
idiv
jl
daa
xor
lods
adc
cmp
fwait
rorb
movsb
mov
nop
jl
imul
shrl
push
bound
das
pop
mov
adc
popa
loope
cwtl
neg
adc
test
jb
adc
inc
lock
sub
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
