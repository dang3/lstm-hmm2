or
sub
mov
outsb
enter
mov
push
xor
and
and
test
test
cmp
sbb
adc
jge
cwtl
mov
mov
je
pop
sub
lods
clc
scas
xchg
inc
in
ja
adc
xlat
test
aad
enter
jmp
out
xchg
mov
leave
out
repz
push
data16
shll
and
ds
mov
and
test
mov
cmpsb
lock
lret
iret
inc
shll
inc
fldl
in
xchg
jp
mov
mov
loopne
adc
adc
dec
jg
xor
inc
addr16
cmpsb
cmovno
sbb
stos
pop
jns
adc
test
cld
test
ror
andl
jge
fwait
mov
mov
dec
js
mov
pop
push
cwtl
bound
mov
popa
popf
mov
xor
dec
cmp
and
inc
in
mov
jo
cwtl
and
lods
inc
mov
repz
cmpsb
mov
leave
sub
insl
rcrb
jo
pop
adc
test
add
movsb
push
push
mov
imul
das
xchg
pop
nop
adc
lahf
xchg
outsl
fmulp
jne
roll
push
sub
xchg
lcall
xchg
pushf
xchg
js
iret
or
add
loop
gs
and
lcall
mov
push
mov
push
mov
dec
icebp
xchg
push
inc
xchg
jno
out
lret
mov
cmp
sbb
enter
in
lods
idivl
sbb
test
xchg
xor
mov
pop
cltd
lea
arpl
or
imul
scas
je
int3
gs
jo
sti
lcall
add
dec
dec
cld
leave
icebp
stos
lcall
dec
cmpl
inc
movsl
leave
xchg
adc
scas
fldl2t
sar
ret
cmpsl
fdivr
add
imul
cmp
outsl
sbb
and
and
aam
outsb
or
and
and
andl
ffreep
inc
xor
dec
loope
insb
cmc
mov
xor
cmpsl
rclb
mov
fstl
adc
jnp
shrl
mov
lcall
in
xchg
cmp
xor
jp
xchg
push
lds
ds
addr16
cwtl
stos
push
add
pusha
cmpsl
mov
jmp
daa
and
adc
adc
jp
mov
lret
ret
push
es
sarl
xchg
adc
iret
or
or
scas
orb
dec
push
adc
mov
dec
mov
leave
enter
inc
add
call
and
jg
xchg
into
and
inc
stos
lods
test
push
repnz
iret
or
adc
mov
mov
scas
popa
mov
insb
sarl
mov
xchg
add
push
dec
xor
mov
lret
movsb
jl
rorl
loope
fdiv
rcrb
outsl
add
cmpsl
jg
xchg
and
sub
mov
mov
sub
test
or
adc
daa
cwtl
cmpsb
pop
call
repnz
lds
cmovbe
lods
cmp
xchg
stc
shr
cmp
lcall
mov
insl
mov
ljmp
mov
mov
sbb
and
jmp
shr
fwait
call
dec
sub
je
cmpsb
xor
test
pop
int3
fldl
imul
inc
js
xor
mov
lret
aad
and
cli
jno
stc
lahf
outsb
std
xchg
xchg
mov
sbb
icebp
adc
and
and
cwtl
sub
cli
out
inc
pop
pushf
xchg
add
in
xchg
jge
dec
out
testb
rorb
jle
cmpl
xchg
iret
sub
es
test
xchg
sbb
sbb
xchg
addl
cwtl
aaa
icebp
cwtl
shlb
lcall
clc
repnz
sub
sbb
pushf
xchg
and
mov
pushf
push
mov
jae
bound
int
jg
inc
sub
std
in
ja
in
mov
inc
ja
adc
dec
push
pop
sub
jmp
fsubrl
test
add
pop
outsb
mov
in
mov
mov
in
shrl
mov
shl
fsubrp
xchg
andb
push
or
adc
pop
or
jb
lret
mov
and
ret
mov
ljmp
mov
rolb
inc
jmp
push
dec
push
orl
hlt
dec
mov
dec
fdiv
call
cmc
pop
addr16
jne
xor
add
sbbl
js
sub
mov
call
stc
adc
je
or
jl
xchg
xchg
daa
or
mov
cmp
mov
inc
and
stos
push
xchg
jmp
shll
adc
jae
out
popa
xor
pop
push
enter
push
lea
push
dec
xchg
pusha
mov
or
jge
lret
stc
or
push
push
push
push
lea
push
push
push
push
push
jno
jo
or
pop
push
inc
pop
stc
or
clc
lea
push
pop
push
and
pop
test
inc
dec
push
xor
pop
inc
dec
lea
and
push
sub
pop
or
cld
or
cmc
cld
cmp
push
push
jl
test
pop
pop
and
cmp
std
cld
call
push
call
mov
push
test
cmpb
lcall
test
add
pop
mov
inc
inc
inc
inc
push
mov
pop
sub
push
mov
pop
xchg
xchg
jno
push
dec
pop
nop
add
sub
push
add
pop
jge
jne
test
cmc
rol
cmc
push
or
pop
or
lea
cmc
cld
xor
cld
inc
dec
push
add
push
pop
pop
ja
ror
jle
ror
ror
and
or
pushl
pop
mov
shr
test
jne
jmp
jo
test
inc
dec
nop
nop
stc
add
jo
jge
add
loop
jecxz
xor
jge
add
adc
sub
cmp
stos
pusha
jno
sahf
adc
in
inc
pop
cmc
push
pushl
xor
pop
pop
jne
push
mov
pop
jp
ror
test
test
push
xchg
pop
push
pop
xchg
pop
cmp
cmp
jg
js
push
add
clc
push
add
jo
and
cld
inc
test
cmc
push
call
push
mov
js
push
ret
mov
subb
cltd
in
cmp
xlat
mov
mov
pushf
push
cld
jne
push
adc
push
pop
in
jge
nop
jns
xchg
pop
pop
dec
jne
loop
jecxz
mov
push
push
and
pop
pop
push
call
xchg
in
loop
outsb
test
notl
cmp
adc
jmp
inc
out
jl
stos
jp
jmp
out
adc
js
pop
iret
outsb
in
test
push
and
movsl
cmp
test
cwtl
ret
pop
mov
adc
or
ret
inc
pusha
shll
add
leave
jmp
mov
ficoml
cltd
mov
dec
ss
jmp
mull
jne
jmp
pop
add
les
js
fs
mov
leave
cmp
cmp
dec
cmp
movl
les
pop
out
or
sbb
lods
or
mov
xchg
or
pop
cmc
dec
addr16
dec
subl
adc
cmpsl
test
jns
xchg
stos
mov
mov
xor
mov
sbb
test
xchg
or
cmpsl
cmpsb
repnz
pop
pop
dec
jae
das
cmp
lretw
mov
push
sub
lock
push
sub
or
cmpsb
ret
adc
mov
adcl
insb
mov
push
cmp
add
int3
pop
les
sbb
gs
cmp
or
mov
pop
lods
push
pop
push
jp
ja
rclb
push
sbb
movsl
sahf
scas
fimull
pusha
clc
pop
xor
push
inc
ljmp
clc
test
sub
sbb
mov
pop
pop
pop
in
dec
push
sarb
fmuls
mov
leave
mov
lcall
and
add
adc
cmc
xor
inc
daa
mov
scas
shll
push
hlt
mov
out
imul
xlat
push
hlt
scas
ss
jp
daa
daa
and
sbb
or
fs
push
xor
sbb
out
je
cmpsb
jl
sbb
push
hlt
adc
mov
cmp
sbb
and
adc
ret
jne
test
mov
out
lods
mov
fmul
jne
adc
mov
dec
enter
add
pop
and
int3
test
pusha
mov
push
xor
xchg
fdivs
sbb
stos
cmp
cmp
insb
clc
jle
aad
dec
mov
ss
mov
push
in
or
popf
dec
out
pusha
inc
pop
mov
lods
divb
xchg
call
leave
mov
pop
jno
dec
enter
sbb
fs
push
pop
pushf
lods
or
xor
mov
push
sahf
lret
jnp
shll
call
imul
stos
popf
xchg
movsl
loopne
mov
popl
push
or
inc
filds
dec
loopne
jb
movsl
ja
lods
arpl
pop
sub
dec
or
test
mov
in
or
movsb
popf
dec
inc
lret
lea
inc
push
fsts
rolb
lcall
mov
outsl
xor
mov
mov
adc
push
push
das
mov
push
fadd
icebp
ljmp
imul
call
setl
push
xchg
add
popa
es
scas
aad
lods
out
add
arpl
test
xor
stc
and
lcall
cwtl
scas
mov
cmpsb
inc
mov
je
popf
cmc
aaa
xchg
aam
sbb
and
mov
in
jge
pop
inc
pop
cmpsl
out
pop
xlat
mov
mov
sarb
icebp
fsubs
mov
cmp
push
rorb
out
xor
adc
jne
jns
ret
jbe
pop
or
stos
scas
adc
fstp
andl
pop
mov
mov
adcl
inc
ss
add
jmp
mov
mov
in
pop
popa
dec
bswap
and
xchg
jecxz
jle
imulb
scas
lcall
loope
inc
sbb
mov
int
loopne
mov
push
cli
cmp
lods
cmpsl
mov
rcll
mov
pop
or
jp
inc
mov
das
jl
jl
hlt
sbb
js
out
push
add
shlb
jmp
je
adc
iret
iret
pop
dec
pop
lcall
adc
scas
add
sub
jp
xchg
pop
movsb
xor
orl
jmp
inc
pop
insb
loop
jl
sub
xor
add
sub
fsubs
pop
insb
push
loope
add
add
sub
lahf
je
push
lahf
pop
dec
ja
cld
sbb
fldl
push
sbb
pop
sub
sbb
imull
jmp
es
in
sbb
or
xchg
add
push
scas
loopne
mov
imul
xor
cld
je
dec
dec
cvtpi2ps
or
add
mov
adc
loopne
mov
sbb
imul
mov
subl
sahf
add
mov
push
jae
xchg
pop
pop
cmpsb
mov
ds
pushf
or
iret
adc
dec
pop
mov
pop
out
div
sub
and
cli
xor
popa
jg
mov
sbb
xchg
xchg
mov
dec
adcb
cs
dec
add
js
push
xlat
pop
push
dec
add
insb
sbb
mov
push
stos
inc
jne
ss
cmp
call
fildl
sbb
inc
out
hlt
sbb
dec
imul
scas
ret
mov
icebp
xlat
sbbl
jmp
pop
stc
lahf
mov
jg
fs
xor
mov
insb
or
repz
rcl
jns
jle
enter
ret
push
ret
test
les
xchg
cs
pop
ret
lods
sub
or
xchg
call
inc
jmp
dec
adc
rcrb
movl
sub
cmpl
sbb
out
in
lcall
sbbl
push
dec
adc
movsb
mov
mov
negl
adc
gs
pusha
addr16
adc
pop
lahf
bound
scas
pop
enter
das
das
pop
push
mov
scas
pusha
subl
add
dec
test
mov
mov
push
mov
dec
loopne
in
or
insb
mov
cmp
outsl
scas
pop
inc
mov
jmp
negl
ja
and
push
lret
test
add
mov
loop
add
fistl
imulb
ds
sub
jbe
test
shlb
popl
shl
stos
push
rcll
push
xor
adc
in
sbb
pop
add
insb
jns
jb
hlt
mov
xor
push
loopne
adc
xor
adc
xchg
cmp
nop
les
cmp
jmp
sahf
test
dec
loopne
sub
pop
popf
sub
mov
mov
icebp
mov
sbb
jmp
mov
xchg
sbb
and
cmpsl
push
repz
pop
pop
mov
pop
jae
pop
fwait
jno
popa
and
ret
inc
dec
loopne
outsb
mov
pop
movsb
pop
jecxz
cmp
mov
xchg
dec
mov
cmc
hlt
jbe
fisttpl
xor
jge
dec
or
insb
js
outsb
sarl
sbb
push
ficomps
dec
add
inc
pop
pop
inc
sahf
out
roll
aam
lcall
pushf
popf
ja
mov
mov
test
push
push
jnp
dec
push
pop
add
sahf
mov
lock
cmp
xor
mov
inc
or
mov
push
add
fstps
jecxz
pop
add
adc
arpl
dec
ljmp
pop
sti
leave
push
mov
push
bound
mov
jb
push
jae
mov
loop
adc
jbe
inc
sbb
push
les
incb
push
test
clc
test
inc
cld
add
adc
pop
cmc
movsb
jmp
inc
into
pop
ljmp
ficomps
add
aam
jmp
adc
inc
xchg
aas
sbb
inc
ljmp
xchg
jne
xlat
pop
push
fildll
fldl
mov
jle
inc
loope
xchg
adc
push
push
or
jp
mov
mov
vmovsd
dec
test
out
adc
out
sbb
xchg
sub
out
arpl
stos
jno
cmc
pusha
inc
cltd
pusha
data16
push
lret
enter
mov
cmpsb
sti
and
cld
and
adc
pop
adc
out
xchg
lret
jmp
shlb
hlt
pop
in
xrelease
pop
shl
hlt
int
push
dec
xchg
sahf
sar
mov
and
mov
adc
int3
shrb
push
sub
xchg
sbbb
pop
std
lods
lods
xchg
push
push
fstpt
xchg
sahf
sahf
inc
mov
jbe
mov
mov
in
in
adc
jno
pushf
fcmovnu
das
cmp
enter
sbb
push
xor
dec
inc
paddb
ret
jle
ss
xchg
insb
dec
add
dec
out
decb
inc
inc
cmp
xchg
sahf
test
sbb
or
repnz
in
daa
and
or
ds
inc
cmp
lods
orl
sbb
sbb
pop
jno
lds
jecxz
inc
std
and
test
loopne
xor
adc
inc
imul
loop
adc
inc
fcompp
pop
imul
and
sbb
sahf
mov
enter
nop
orl
cmp
pop
popa
fcomp
and
daa
sbb
sar
push
in
mov
xor
mov
aaa
mov
ret
enter
cwtl
xor
lcall
in
fisubrl
lcall
jo
push
sahf
sbb
test
ret
jecxz
decb
inc
int3
push
lds
fnstenv
popa
jmp
lods
sub
loope
mov
int3
mov
ret
fcoms
or
in
sub
lds
fptan
inc
adc
add
test
mov
fwait
dec
dec
jb
adc
mov
insb
xor
and
dec
adc
div
pop
or
mov
stos
in
sub
or
testl
stos
sub
or
adc
mov
aad
mov
pop
xchg
lret
sub
jg
sub
adcb
xor
mov
gs
and
les
cmp
jbe
jg
mov
bnd
outsl
aaa
pop
nop
daa
test
cld
aas
int3
dec
jo
cli
in
fs
sti
lea
insb
ficomps
gs
inc
xor
mov
mov
or
lea
popw
and
imul
cmc
xchg
adc
das
adc
lds
stos
cmp
in
lcall
sahf
and
aad
inc
push
and
ret
and
pop
inc
mov
lcall
xchg
and
pop
neg
lods
ljmp
popa
hlt
hlt
loop
bound
je
xor
daa
pop
loop
gs
ret
ret
add
outsl
jp
push
shrl
push
cmp
cltd
dec
sbb
cmpb
and
add
into
test
and
out
add
push
leave
out
lea
pushf
sub
fsubr
cwtl
dec
leave
jle
and
and
movsb
scas
fldcw
push
sbb
fdiv
pusha
or
sti
cmp
int3
cmp
adc
pop
lret
imul
push
add
sbb
push
sub
outsl
stos
adc
sub
aas
popw
outsl
push
inc
stos
inc
dec
pop
cmpsb
js
jb
ja
dec
push
pop
icebp
mov
push
lcall
xor
mov
pop
inc
mul
pop
and
sub
stos
push
out
push
xchg
fcmovnbe
repz
fcmovu
mov
fmul
add
mov
mov
sahf
or
stos
shlb
mov
aad
dec
cmp
hlt
xor
aad
mov
stos
mov
sarb
aam
mov
aas
mov
insb
and
aad
and
lock
jp
add
sub
mov
xor
push
jae
leave
mov
jb
pusha
aaa
pop
stc
dec
add
and
jecxz
pop
stos
scas
cwtl
lahf
cmp
imul
ss
out
or
lock
mov
sub
mov
inc
in
mov
dec
inc
dec
cltd
call
ljmp
or
addr16
dec
enter
mov
aad
xchg
jne
mov
cmc
int
lods
pop
dec
fbld
pop
mov
adc
push
pop
cmpsl
inc
cmp
js
shr
sub
ds
adc
sub
std
cmp
hlt
imul
aas
jb
dec
fldt
cmp
jne
lds
icebp
insb
add
mov
mov
pop
xchg
dec
flds
arpl
nop
insl
ds
bound
ja
lock
push
xor
dec
outsl
xchg
push
subb
pop
fwait
xor
jno
mov
xchg
dec
push
shlb
cmp
inc
loopne
leave
add
and
or
dec
inc
add
lret
sub
push
test
cmp
les
jge
ljmp
sbb
outsl
repnz
aad
mov
inc
mov
and
in
sti
inc
xor
mov
jmp
lea
dec
loope
lret
mov
add
cmp
xor
pop
cmp
mov
lock
add
divb
je
jecxz
test
call
xor
inc
dec
int
dec
lods
adc
int3
push
and
fadd
push
mov
cmpsb
fadds
lret
test
hlt
push
dec
in
stc
fstp
xor
pause
stc
mov
add
jg
inc
inc
cmc
std
adc
sub
fildl
lcall
dec
sbb
fiaddl
mov
dec
je
mov
adc
out
pop
loop
ret
out
xchg
mov
std
fcomps
negb
lret
loope
jae
sbb
aad
fs
mov
inc
addr16
outsl
mov
sub
leave
or
out
pop
adc
sub
test
arpl
pushl
push
xchg
xchg
mov
bound
dec
sbbb
lods
push
fcomip
adc
inc
lods
dec
outsb
shl
dec
adc
pop
cmp
adcb
ss
repz
cmp
adc
pushf
xlat
mov
xor
mov
pusha
jg
push
dec
cld
repz
xlat
out
mov
mov
out
out
sbb
lret
pop
dec
subl
xchg
pop
out
xchg
cmp
adc
xchg
dec
outsl
ret
jg
pop
sub
dec
and
imul
clc
in
dec
jns
and
dec
cmp
in
sbb
inc
mov
cltd
sbb
pushf
jmp
mov
out
xchg
daa
repz
rol
stos
sub
cmp
out
adc
lods
xchg
sti
lds
js
fisttps
cli
aad
adc
adc
adc
pop
imul
jne
mov
icebp
or
mov
sbb
cltd
je
insl
inc
js
sbb
sub
icebp
inc
xchg
test
les
xchg
push
adc
xor
or
popa
movsl
sbb
jge
mov
mov
mov
outsb
sbb
inc
sub
mov
bound
jbe
aas
sti
mov
inc
push
nop
sub
loop
mov
dec
popf
sub
mov
fsubl
mov
pop
or
sbb
in
gs
cmp
clc
mov
mov
pushf
ds
lcall
xor
xor
cmp
sub
loop
dec
pop
bound
sarl
rcrb
inc
inc
push
or
pop
sub
mov
sub
sub
jns
inc
in
in
and
dec
inc
in
xchg
jbe
jno
dec
daa
sbbl
out
mov
mov
imul
pushf
xor
lret
cmp
cmp
les
repz
xchg
in
inc
adc
jb
or
mov
cmp
pop
or
repz
sub
push
jl
dec
adc
xchg
or
push
inc
sbb
ds
data16
sub
jns
push
sub
push
int
mov
in
out
ljmp
into
adc
shrl
or
out
mov
rcrb
mov
cmp
pop
cwtl
push
lcall
in
stc
and
add
push
in
gs
adc
mov
or
or
xchg
adc
cltd
xlat
sti
mov
xchg
in
jns
loop
xchg
inc
and
xlat
cmp
shrb
cmp
enter
sbb
lret
inc
insb
mov
sbb
jne
cmpsb
fcompl
xchg
iret
addb
decl
xor
cmp
cltd
mov
cmp
sub
jb
mov
jnp
fadds
cmpsb
sub
shll
jo
sbb
test
call
xor
sub
repz
pop
sub
outsb
cli
push
fisttpll
push
add
cmpsb
dec
push
dec
xor
outsb
sbb
xchg
rcrb
insl
cmc
and
ret
xchg
lock
jne
mov
call
pop
data16
mov
or
gs
xchg
loopne
sub
dec
lret
or
mov
sahf
mov
mov
mov
call
dec
aas
cmp
ja
xor
mov
fsubs
imul
aad
fs
out
es
jb
cmp
repz
push
and
mov
jns
mov
mov
sub
mov
xor
or
cmp
ja
jmp
pop
xchg
sbb
in
adc
xchg
add
mov
scas
in
sahf
in
cmp
scas
lret
mov
or
push
movsl
mov
mov
xchg
lock
jle
push
rorb
scas
inc
fisttps
or
push
xchg
jmp
adc
test
rolb
jecxz
mov
mul
test
cmp
and
inc
mov
pushf
xchg
iret
int
inc
sub
and
mov
and
mov
jmp
lret
mov
hlt
fstl
imul
out
adcl
arpl
mov
pop
sbb
sbb
shl
cmp
xchg
jl
cmpsl
or
push
lret
inc
jmp
in
xchg
adc
insb
pop
cs
sti
and
fisttpll
xor
mov
pop
pushf
xor
dec
lea
ss
gs
xchg
stos
lods
test
push
push
sub
stos
in
jp
or
ss
fstpl
xor
push
jle
pop
adc
jno
push
sti
shl
add
stos
clc
data16
dec
and
cltd
cmp
ss
cmpb
dec
loop
lret
std
lea
jno
int
cs
clc
add
scas
jl
dec
shll
jne
mov
cwtl
jnp
pop
scas
cmp
test
push
sbb
mov
pop
cs
insb
rcl
lock
mov
pop
std
ja
cwtl
jmp
icebp
cmp
pop
dec
sub
mov
jge
or
xchg
mov
fidivrs
or
mov
iret
mov
xorb
lea
dec
lcall
jb
lcall
dec
inc
xor
icebp
lret
bnd
fdivl
add
pop
mov
push
pop
ds
dec
fs
les
mov
dec
movsb
cli
dec
mov
movsb
add
jl
loop
add
cmp
xcrypt-ecb
cmpsl
mov
add
sub
lock
adc
mov
xchg
adc
mov
fistps
rorl
dec
inc
ljmp
cwtl
sti
aam
cmp
cmp
xchg
aad
push
adc
mov
and
addb
outsl
subl
cltd
mov
pop
jne
adc
outsb
outsb
ss
arpl
fxam
mov
sbb
jae
pop
inc
dec
into
xchg
cmpsl
popa
ficoms
jp
sub
ss
mov
push
dec
add
pusha
push
stos
mov
in
mov
jl
xchg
js
jnp
stc
es
add
pop
in
sbb
pop
jo
js
test
mov
mov
into
sbb
test
mov
sahf
sbb
stos
xor
filds
sub
iret
hlt
adc
pop
cmp
in
fwait
hlt
scas
jge
ds
dec
int
es
fwait
hlt
test
fwait
bound
hlt
test
insl
push
mov
test
inc
push
rclb
fnstcw
call
jno
sub
cmp
xchg
faddp
std
sarl
mov
lcall
fimuls
sub
addb
push
fs
push
and
ret
clc
jp
pop
add
hlt
push
ja
inc
xor
scas
pusha
sub
jo
fwait
mov
std
jp
sqrtps
adc
stos
leave
mov
imul
sub
xchg
in
repz
sub
lds
daa
mov
insl
fcoml
inc
cmpb
dec
jmp
pusha
inc
cmpsl
scas
mov
dec
sbb
push
push
repnz
xchg
adc
ret
sub
cmpsb
jo
mov
or
jmp
popf
fwait
cmp
add
cmpsl
push
aad
aam
mov
subb
jp
test
sub
mov
shrb
xchg
test
jnp
repz
into
cwtl
psubusb
int
insl
mov
movsl
xchg
lret
rorl
rol
xchg
jbe
fdivs
push
mov
je
negl
hlt
cmp
xchg
not
mov
jnp
les
mov
pop
mov
call
arpl
sub
mov
bound
xchg
sub
dec
sbb
cmc
cld
xchg
jo
ja
hlt
xchg
test
cli
mov
inc
leave
mov
ret
leave
inc
js
loopne
or
sbb
xor
ret
push
insb
sbb
jge
into
xlat
pop
sbb
inc
scas
and
aam
shll
mov
push
lods
xor
push
cmpsl
mov
rol
mov
sbb
je
mov
cmp
scas
mov
jl
mov
cld
hlt
fsubrl
mov
adc
sbb
insl
cmp
xchg
lret
rcrb
lret
sub
push
aad
aaa
aaa
pop
jle
push
xor
aaa
inc
pop
lret
jmp
idiv
push
jae
lret
out
mul
pop
and
cmpb
or
aaa
aad
pop
xchg
jno
cwtl
test
or
jae
mov
and
out
pop
negl
dec
div
add
jo
es
push
mov
xor
push
addr16
mov
jo
add
cwtl
mov
pop
int3
add
into
in
js
mov
aam
jp
xlat
sub
pusha
fs
adc
cltd
insl
sbb
movl
mov
popf
adc
sub
cmp
dec
sahf
mov
movsb
mov
popf
mov
add
mov
inc
je
out
out
push
bound
push
xchg
inc
loop
xor
xor
loope
sbb
or
push
sub
cmp
add
mov
insb
cs
jg
addr16
and
pop
aam
sub
jnp
jge
imull
or
rorb
mov
movsb
pop
ret
xchg
or
pop
shrb
push
stos
ret
jmp
push
cwtl
inc
ffree
dec
sahf
fistpl
loopne
out
xor
enter
xchg
les
sub
gs
mov
jl
pusha
jno
cmp
xchg
jbe
cmp
sbb
orb
std
stos
or
mov
jge
inc
mov
fwait
sub
push
jb
adc
jg
cli
movb
xor
outsl
xchg
fisubl
mov
popf
xor
inc
stos
or
mov
cmp
mov
mov
jmp
mov
les
int3
sbb
cli
xchg
mov
jnp
ljmp
mov
icebp
lahf
xchg
fcomps
dec
es
inc
test
test
xor
push
les
mov
adcl
inc
ror
and
push
mov
xchg
paddusb
shl
xor
push
or
or
dec
and
icebp
stos
stc
iret
mov
cwtl
cmp
lea
adc
lds
stc
popa
cli
lret
mov
loop
sbb
stc
arpl
outsl
mov
mov
test
hlt
xor
enter
scas
mov
mov
dec
mov
mov
addl
sub
mov
dec
aam
and
adc
adc
icebp
loope
inc
cmc
movsl
and
sarl
xor
fiaddl
or
sub
fistl
xor
mov
push
aas
ret
inc
cmp
xchg
pop
ds
lcall
les
mov
loope
jne
dec
adc
pusha
xlat
imul
mov
dec
dec
ss
stos
lret
dec
xor
daa
push
gs
dec
jno
sbb
lahf
mov
mov
sti
jnp
mov
xchg
clc
sbb
fldl
sbb
add
sub
cmpsl
cmp
inc
cmp
or
dec
orb
pop
cmc
jnp
dec
lods
inc
je
xor
xor
mov
cmp
dec
add
into
loopne
lds
jmp
arpl
aaa
push
xor
fbld
loopne
cwtl
add
ljmp
adc
test
mov
and
fisubl
inc
jecxz
dec
call
or
adc
sahf
ja
mov
push
sbb
and
push
cmp
pop
lods
jle
push
fldl
rorb
jno
inc
icebp
cltd
xchg
sbb
imull
xchg
add
mov
movsl
xor
jg
jmp
mov
jg
lock
out
lods
popa
pop
xor
xchg
jo
cmp
shrb
out
fwait
xchg
mov
gs
cmp
mov
jno
jne
push
pop
push
adc
js
jb
icebp
fadds
int
inc
imul
arpl
outsl
pop
jl
and
push
dec
imul
mov
sbb
xor
pop
shll
loope
sbb
lods
popf
movsl
aam
shlb
ret
pop
js
int3
popf
and
xlat
xor
ds
imulb
jecxz
nop
sub
testl
dec
in
mov
jge
fistps
std
insl
addr16
push
inc
pop
xchg
aaa
pop
sbb
cmp
es
rcr
or
test
sahf
mov
daa
dec
xchg
dec
adc
leave
fisttpl
mov
lods
insb
in
je
push
rcrl
xchg
add
inc
enter
aas
stc
lcall
mov
data16
sahf
mov
icebp
roll
ror
loop
outsb
adc
ret
xor
shrb
iret
pop
fdivrp
cmp
testb
xchg
or
xchg
sub
test
mov
jle
out
add
mov
ljmp
test
fcmovnbe
mov
add
lahf
mov
lods
jecxz
xor
sub
sub
sti
push
xlat
dec
data16
xchg
push
data16
scas
pop
push
add
sarb
sarb
push
fsts
add
push
pop
and
adc
roll
mov
push
pop
dec
jnp
xchg
mov
outsb
shr
sbb
jae
pop
or
mov
imul
cld
int
bound
jne
pop
cmp
push
xchg
xor
imul
cmp
sbb
jne
pushl
dec
call
jne
les
lret
in
scas
fbstp
lcall
out
pop
and
ret
mov
dec
pusha
outsl
and
mov
xor
mov
add
mov
mov
mov
lods
dec
sarb
out
adc
mov
mov
icebp
mov
dec
xchg
jmp
mov
notb
imul
and
mov
pop
lock
into
pop
inc
stos
push
pop
push
mov
in
std
xchg
or
repnz
ljmp
and
push
xchg
sbb
loope
shl
and
cmp
push
jmp
fcmovb
lret
adc
and
sub
xorl
cmp
mov
mov
jns
sub
fwait
in
int3
aas
jo
mov
repz
je
pushf
lods
push
xchg
idiv
cli
pop
lahf
repnz
sbb
mov
popa
pop
lret
cmp
fidivrl
ja
inc
dec
addr16
mov
movsb
jmp
jno
out
fs
shlb
lds
test
fcoms
fsub
int3
inc
inc
rclb
and
sti
mov
out
lret
push
and
outsb
dec
lret
jne
in
xchg
lcall
pop
test
repnz
fiadds
ss
outsl
pop
loope
es
sbb
xchg
movsb
mov
cli
mov
mov
add
inc
sub
sbb
out
lret
cmp
stc
cli
push
inc
fdivr
add
or
sub
push
add
push
in
addb
call
push
inc
outsl
and
jmp
popf
cltd
outsb
adcb
sahf
mov
mov
insb
hlt
pushf
mov
mov
pop
bound
lcall
mov
sbbl
cltd
push
dec
cmpsb
stos
or
ret
hlt
lahf
jns
cmp
rcrb
push
mov
sbb
jno
enter
xchg
inc
push
ds
dec
fisubl
out
repnz
xor
inc
std
imul
adc
hlt
mov
pop
dec
xchg
fisttpl
das
clc
ret
dec
dec
jns
cmp
fldenv
adc
adc
loope
adc
jle
mov
push
fstl
fwait
inc
jecxz
ds
in
pop
jne
xchg
loop
rcrb
xchg
or
add
les
rcl
ss
mov
stos
imul
aam
jecxz
sarb
dec
fimull
in
test
aas
mov
leave
insl
enter
sbb
xor
in
int3
enter
je
sbb
int3
mov
jp
insb
jns
lcall
xchg
mov
sbb
imull
out
mov
mov
mov
dec
pop
bound
jmp
or
and
mov
repz
enter
inc
push
mov
inc
sub
or
rep
inc
adc
cli
dec
loopne
xor
mov
fcompl
outsl
sbbb
shlb
mov
mov
lods
cmp
sbb
sbb
negb
sub
or
jb
lods
repnz
xchg
jmp
or
xlat
sbb
int
in
mov
inc
lods
sbb
testl
xor
into
sub
rcll
adc
out
sbbl
dec
test
jge
lret
inc
push
sarl
mov
cli
mov
mov
or
jg
dec
mov
aaa
adc
jb
imul
mov
and
loopne
and
test
cltd
jg
adc
popf
scas
loope
nop
iret
loope
jmp
dec
pop
out
das
sahf
ds
outsb
xor
out
mov
lret
imul
jo
add
test
imul
pop
ret
jp
add
stos
jl
imul
arpl
mov
push
out
cmp
insb
call
and
mov
cmc
inc
xor
andb
mov
push
adc
lds
sysenter
cmpl
push
mov
int3
cmc
jle
lods
mov
out
in
xchg
fidivrl
cli
leave
test
mov
repz
mov
cwtl
sarl
test
push
shll
cmp
repnz
inc
adc
mov
mov
subb
jecxz
or
adc
cmc
add
inc
cmc
and
mov
or
clc
xchg
adc
mov
out
adc
inc
push
and
lcall
sub
push
cmp
loopne
cmpsl
subl
xor
hlt
movsb
in
xchg
rcrl
shll
rcll
imul
pop
push
sbb
cld
sbb
fidivs
or
inc
not
push
mov
cmp
out
icebp
test
cmp
mov
test
popf
dec
sti
cld
fistps
test
pop
cwtl
jbe
test
adc
add
or
mov
dec
stc
testl
dec
pop
aaa
pusha
push
mov
aam
mov
mov
outsb
out
andl
push
inc
mov
xchg
cli
cmp
je
mov
jns
mov
or
jns
das
xchg
sbb
jg
movq
pop
xchg
data16
notl
outsb
sbb
movsb
cltd
sub
int3
popf
es
push
dec
fiadds
or
mov
mov
js
push
dec
cwtl
xchg
sub
jecxz
adc
cmp
mov
pop
popf
frstor
mov
pop
mov
xor
or
mov
addb
jl
arpl
frstor
mov
mov
arpl
mov
dec
lahf
pushf
or
fsubrs
ret
mov
lret
fisubs
pusha
mov
xor
or
shlb
lcall
mov
mov
add
inc
pop
or
jge
shll
push
xchg
adc
test
add
das
cli
lcall
sub
mov
adc
and
mov
cmpb
mov
or
mov
cld
xor
mov
sti
rclb
fsubr
test
xlat
sbb
push
lods
jp
movsl
movsl
push
dec
jl
jp
cs
xchg
movsb
fs
jnp
inc
mov
sub
rcll
inc
aam
jno
sti
and
out
mov
inc
and
push
imul
outsb
pop
fiadds
cmpsb
cli
sti
inc
mov
cmp
jge
jge
add
add
cmp
and
or
and
mov
pop
les
xchg
sbb
mov
aad
xor
mov
sub
adcb
daa
sub
call
ret
lds
das
fildll
ss
pop
fwait
jle
aaa
fldl
xchg
incb
add
pop
pushf
jmp
shl
inc
push
and
mov
sbb
je
call
sbb
lcall
adc
mov
cmc
lret
aas
test
repz
pop
lcall
jp
jl
dec
sub
or
negb
popl
pop
cwtl
push
fdivl
nop
mov
imul
lahf
sbb
sbbb
daa
and
pop
les
ljmp
flds
push
xor
lds
sbb
dec
lods
and
pusha
inc
roll
rol
rcll
mov
jne
push
in
sbb
jno
jns
push
imul
push
or
loop
in
or
pop
sbb
or
fmuls
cmp
push
rcr
cmp
call
loope
mov
dec
or
pop
jbe
int
pop
dec
rorb
mov
xlat
push
dec
sbb
je
in
xchg
inc
xchg
jno
add
push
lock
jne
xchg
and
jnp
xchg
jle
adc
or
cmp
and
fcmovb
adc
icebp
cmp
das
popa
aad
sahf
or
inc
xchg
push
xor
pop
pop
adc
test
mov
jnp
sahf
mov
adc
divb
mov
mov
cltd
in
sub
dec
leave
sub
cld
in
mov
scas
xor
pop
sbb
xchg
pop
fidivl
dec
mov
mov
and
or
es
aad
rcrb
movsb
lock
mov
mov
mov
mov
cmp
sbb
lcall
loope
push
test
push
dec
inc
sahf
adc
jno
sbb
mov
dec
push
xchg
test
mov
pushl
inc
and
frstor
bnd
dec
pop
ds
or
pop
lret
ja
cmp
mov
iret
push
loop
movsb
cmp
adc
in
jg
cmp
xchg
stos
jle
insb
ss
or
sahf
pop
sbb
andl
cmp
call
sbb
aam
cmp
push
xchg
and
addr16
mov
inc
dec
lods
xor
push
xchg
jb
lock
jg
add
push
mov
into
mov
popa
add
and
or
loopne
dec
dec
mov
jae
rorb
int3
cmp
pop
mov
enter
push
pushf
push
and
ret
sbb
sbb
test
mov
push
xor
mov
adc
pop
ret
insb
out
push
push
pushf
cmp
filds
push
addr16
ja
sub
movsb
ja
cmp
loopne
fdiv
dec
test
lods
in
lret
std
xchg
sub
in
inc
ds
pusha
push
shll
sbb
xchg
xchg
xchg
out
leave
in
inc
insb
or
stos
sub
imul
fwait
adc
push
jbe
ret
faddp
cwtl
imul
es
mov
aad
ficompl
inc
aaa
sar
adc
mov
orb
push
popf
nop
mov
test
add
push
cld
xchg
loopne
push
idivb
mov
call
aas
fwait
lcall
mov
dec
cmpsl
and
ffree
lods
jecxz
cmp
pop
jl
push
aam
call
push
xchg
mov
mov
or
shrl
or
inc
and
ss
cltd
mov
mov
push
ret
stc
pop
andb
imul
and
leave
jg
scas
orb
mov
xchg
clc
mov
cltd
push
lds
bound
ds
push
rclb
sbb
xor
idivb
pop
cmp
hlt
sbb
sbb
lods
test
imul
std
mov
mov
mov
pop
jl
xchg
inc
cmp
fisubl
stos
xor
lods
loop
pop
and
shlb
or
out
test
iret
dec
cmp
adc
scas
fnstenv
inc
movsb
outsl
aam
xchg
cmp
test
xor
iret
mov
push
iret
jno
pusha
or
enter
sub
pop
scas
jge
cmc
dec
or
bound
dec
pop
push
push
movsb
adc
mov
loop
leave
das
pop
pop
xchg
pop
lcall
pop
xorb
addb
pop
hlt
push
insl
fwait
and
fwait
jne
data16
outsb
in
add
ds
data16
mov
sbb
shll
enter
inc
push
or
mov
or
push
xor
ljmp
mov
loopne
xchg
pop
prefetch
mov
xchg
fwait
popf
cmpsl
ds
ret
or
sarb
and
into
test
mov
fidivrl
js
pop
std
sub
fs
gs
xchg
sub
xchg
movsb
and
in
pop
mov
repz
pusha
mov
xor
mov
pop
xchg
xor
mov
in
push
test
hlt
call
mov
dec
cli
mov
and
aad
jno
aam
test
repnz
pop
mov
andb
or
add
xlat
cmpsl
sarb
out
mov
into
fildl
mov
fdivl
es
iret
jl
jne
pop
nop
cltd
xor
fldenv
test
inc
mov
adc
rclb
loopne
dec
shl
push
jecxz
jno
xchg
test
mov
mov
enter
outsb
aad
xlat
xor
adc
sbb
hlt
sbb
ljmp
pop
xchg
lea
movsl
mov
andb
pop
in
loopne
mov
push
imul
in
pop
mov
rcr
test
aas
lret
loope
cmp
mov
push
repnz
ja
cmp
jg
dec
or
cmc
hlt
sahf
icebp
scas
xchg
leave
sbb
bound
add
fldlg2
pop
lods
in
adc
into
hlt
subb
lret
mov
nop
stc
or
push
inc
daa
push
sbb
and
in
sbb
push
js
mov
jb
jae
mov
and
xchg
stc
int3
push
fs
pop
fwait
pop
mov
push
js
call
sub
pushf
das
xor
cmp
adc
xchg
mov
sbb
stc
push
les
test
jbe
in
int
mov
mov
mov
sub
push
xchg
xchg
cld
mov
outsb
pop
pop
aam
adc
jmp
aas
inc
ret
int3
shr
and
mov
xor
shll
ror
shrl
mov
ret
jne
xchg
pop
cwtl
fstl
ret
or
mov
mov
shr
xlat
mov
in
push
int
cli
shll
pop
data16
pop
js
test
adc
enter
or
adc
sahf
xorb
stos
lahf
push
fidivl
sti
out
popa
xor
xchg
mov
pop
sbb
cmc
jns
scas
repnz
stos
or
test
cwtl
lds
negl
stos
and
cli
ljmp
sub
shlb
sbb
inc
mov
inc
sahf
into
jnp
lock
cs
ss
stos
dec
je
cld
daa
mov
mov
les
jae
dec
call
in
loope
pop
out
add
repnz
adc
dec
mov
cmp
cmpl
hlt
loop
mov
add
push
int
sbb
mov
lret
mov
mov
cmp
sub
ss
mov
int3
mov
rorb
daa
sarb
arpl
jmp
and
jecxz
add
repz
sbb
jecxz
cmp
dec
adcb
test
into
clc
push
cwtl
xlat
cld
cmp
aam
pop
or
mov
push
inc
xchg
mov
cmpsl
cmp
jb
aaa
shrb
xor
jae
out
cmp
fsubrp
cs
mov
adcl
rcrl
int3
sbb
repnz
and
adc
add
aad
outsl
fisttpll
xchg
pop
lods
inc
jbe
pushf
sub
int3
mov
jb
inc
stos
mov
and
jne
pop
jne
es
push
fcom
sub
call
leave
cli
out
cmpb
loopne
incl
test
add
push
rorb
outsl
fsubrs
sahf
mov
test
mov
mov
xchg
popf
leave
into
pop
and
push
imul
testl
adcl
mov
enter
into
pop
add
lret
adc
enter
cmp
lret
push
push
pushf
fs
fs
jb
into
pop
jne
xor
inc
lds
inc
into
lahf
and
aaa
adc
jle
mov
inc
xor
sbb
and
cmp
es
stos
push
fists
cmp
push
mov
xchg
sbb
sub
leave
mov
hlt
sub
mov
dec
pop
jne
cwtl
jae
mov
cmp
sti
mov
adc
outsb
scas
lea
neg
fsubrp
addr16
mov
fists
and
push
pop
dec
jns
push
pop
stos
xor
push
arpl
in
jecxz
je
fisubrs
movsb
in
pop
inc
loopne
rcrb
cmp
inc
push
cmp
pusha
movsl
mov
iret
push
mov
and
js
bound
addr16
and
adc
jns
cld
jno
adc
aas
and
or
test
sub
sub
push
cmp
sub
rcr
ss
jb
xor
xchg
mov
gs
adc
push
in
dec
cs
fucomp
inc
dec
add
les
xchg
mov
mov
loopne
adc
outsl
jl
push
mov
dec
sbb
aad
dec
jge
and
movsb
cmpsb
adc
in
push
dec
mov
mov
lea
call
or
filds
inc
mov
xchg
adc
push
pop
popf
cmp
mov
cwtl
aad
in
mov
dec
je
xchg
xchg
inc
and
bound
and
lret
fs
and
notb
xlat
clc
jp
push
jge
mov
jb
pop
mov
dec
cmp
sub
hlt
pop
and
in
sub
lods
stos
mov
xor
inc
gs
lea
rclb
addr16
or
mov
stos
fs
push
pop
sub
cmc
and
sbb
jl
shlb
mov
in
and
xor
and
lods
mov
jnp
xchg
into
clc
mov
sti
subl
xor
and
cmp
xor
adc
mov
fbstp
nop
jl
movsl
and
sub
mov
xor
int3
sbb
lea
test
mov
ret
inc
add
sbb
cltd
cltd
push
or
test
or
mov
jle
pop
loopne
cmp
loope
mov
std
cli
test
sbb
mov
xor
xor
lahf
call
hlt
inc
mov
je
jns
push
es
movsb
mov
out
push
pop
aas
lret
out
ja
fldt
lret
mov
mov
popf
mov
mov
jge
je
pop
imul
sub
lret
aas
loope
fdivp
fistps
sti
scas
dec
xchg
xor
mov
repnz
adc
loope
dec
pusha
cmpsl
xor
adc
in
lods
jmp
inc
mulb
jmp
mov
rcll
pop
xchg
in
ds
repz
jecxz
aaa
mov
movsl
xor
push
mov
nop
and
aas
inc
push
lea
pause
test
jns
sub
sub
pop
mov
or
xchg
repz
jle
jo
or
jp
mov
push
xlat
mov
add
fnstcw
js
clc
sub
cli
mov
mov
and
aaa
mov
es
pop
das
iret
mov
fsubr
sub
stc
jb
mov
mov
movsb
dec
push
outsl
test
sub
data16
cwtl
mov
sub
clc
decb
rcrl
xchg
subb
mov
add
and
xchg
or
or
lods
jns
movsl
shl
jge
cmp
mov
mov
pop
inc
out
mov
jae
fbstp
pop
andl
adc
cmpsl
sub
mov
xlat
and
inc
arpl
sub
gs
cli
in
mov
in
rcr
and
or
fisttpl
ja
sub
jmp
dec
aaa
jle
mov
scas
cmc
addb
nop
fldcw
add
inc
mov
andl
pop
cwtl
cld
adc
icebp
xor
xor
sbb
xchg
aam
mov
adc
imul
fwait
pop
pop
push
add
adc
lret
jne
dec
ljmp
sbb
sarb
ljmp
scas
fisubrl
mov
cmc
cmpb
and
int3
nop
or
cmc
insl
xchg
rcl
jns
pop
ret
lock
sub
cs
sti
into
or
sub
cmc
stc
push
loope
and
xlat
xchg
lcall
pop
add
sub
and
push
fmull
insl
mov
addb
jmp
ret
inc
mov
jmp
xor
cwtl
adc
push
sub
adc
int3
ds
dec
mov
xchg
or
push
jae
mov
pop
addr16
rcrl
or
popf
dec
pop
push
dec
mov
lods
fisubs
das
xor
or
sbb
push
sbb
bound
xor
addr16
cmp
xchg
loopne
lods
cmp
sub
mov
jno
test
inc
sbb
lcall
repz
lds
sbb
mov
adc
lahf
sarl
jns
mov
subb
insb
jns
dec
fcmovu
jb
xchg
push
cmp
push
test
sub
and
insl
mov
push
jo
das
pushf
sub
mov
into
aam
je
jmp
dec
adc
ja
or
adc
sub
fistl
fisttps
and
jb
ljmp
es
pusha
fcomi
dec
pop
popa
mov
addr16
jle
ja
pcmpeqb
movsb
xor
sub
inc
jg
sti
aad
roll
xchg
add
punpcklwd
sbb
xchg
adc
mov
adc
add
lahf
jmp
les
stc
test
stc
xchg
popf
lret
sti
lods
in
xchg
mov
or
jbe
jb
mov
cltd
sub
ret
pop
mov
dec
orb
test
out
fcomp
cmp
pushf
stc
mov
out
jmp
fsubrs
inc
pop
lock
inc
xchg
and
dec
sub
jae
xchg
in
mov
testl
mov
fs
test
xchg
dec
ja
jae
add
cmp
adc
and
aam
sub
jbe
sub
inc
jno
aad
pop
pop
xchg
jg
and
clc
pop
pop
push
rclb
notl
jbe
pushf
sub
mov
stos
and
js
cwtl
jp
or
push
add
xor
xchg
sub
push
das
inc
ret
pop
daa
push
repnz
pop
pop
and
ficoml
jmp
mov
adc
cld
xor
sub
stos
loopne
sub
in
lea
loopne
imul
test
xorl
xchg
std
adc
inc
les
sub
cld
cli
xchg
xlat
lcall
cmp
and
and
dec
repnz
in
test
mov
cmp
mov
push
sahf
imul
lea
mov
mov
mov
push
lods
pop
data16
in
adc
inc
and
pop
in
dec
icebp
in
push
pop
test
xor
lahf
or
int
pop
dec
push
mov
shll
inc
sbb
bound
xchg
in
cmp
test
lods
pop
jno
jb
fs
mov
jge
cmp
cltd
outsl
fwait
lods
jecxz
mov
adc
xchg
pop
pusha
aam
and
jno
cmp
stc
cli
xor
js
andb
mov
pop
pop
jg
cmpl
lret
add
popa
cld
adc
and
aaa
aaa
push
iret
es
lret
int3
or
daa
movsb
iret
test
xor
popf
cmp
pusha
lcall
and
dec
imul
push
xor
ljmp
decb
fldenv
aam
jo
outsb
sbb
pop
in
lahf
andl
dec
mov
pusha
mov
ja
push
sub
js
shl
fs
adc
and
insb
inc
popa
fdivr
jb
insb
inc
push
pop
push
cli
cmpsb
repz
in
mov
dec
mov
xor
fcoms
call
cmp
mov
out
push
jge
ficoms
pushl
xchg
mov
pushf
xchg
jmp
xorb
dec
data16
lcall
inc
adc
jno
push
clc
xchg
add
add
jmp
dec
cmp
sub
jno
add
cmp
movsl
mov
xor
cltd
aas
mov
or
lret
push
mov
pop
movsl
pop
lret
mov
repnz
xor
add
xor
inc
inc
rorl
pop
cs
popa
aad
call
aas
fs
hlt
les
sbb
daa
lock
movsb
ret
pop
inc
movsb
pop
jno
rcll
mov
sub
lret
sub
lcall
jno
mov
lret
push
std
loope
inc
and
xor
mov
in
movsl
inc
outsl
jne
scas
cmc
cmpsb
fildll
push
fs
pop
or
push
fadds
into
leave
push
xchg
or
push
nop
fisubrl
mov
cmp
cld
enter
jge
pusha
subb
mov
inc
sub
inc
out
adc
in
movsb
sub
loope
out
shl
pop
mov
mov
inc
pop
or
sub
inc
dec
insb
cwtl
mov
dec
mov
adc
and
aam
jbe
cmp
or
mov
sbb
bound
mov
ret
fs
fbld
adc
enter
mov
xor
push
movsb
mov
xchg
loopne
sub
adc
xchg
and
jno
cltd
xchg
sarb
stc
ret
mov
jb
cs
mov
mov
out
mov
out
ljmp
pop
xor
xlat
jnp
int
les
mov
scas
or
sarl
jo
div
dec
xor
push
adc
jg
push
inc
cmpsb
ret
ret
test
mov
cmp
int
ret
jp
subb
out
mov
cmp
pop
add
clc
sarl
mov
ret
adc
jmp
test
push
adc
icebp
js
lods
mov
mov
fsts
cmp
sub
push
sub
or
test
decl
cltd
push
and
pusha
add
dec
ret
pop
mov
pop
js
mov
test
mov
jbe
test
inc
xchg
pushf
out
scas
js
and
mov
fs
pusha
mov
jns
or
and
pushf
mov
push
movsl
lea
nop
adc
adc
xor
add
mov
call
mov
sti
inc
mov
data16
xchg
int3
movd
jae
inc
jae
insl
in
ret
inc
nop
in
inc
fbld
lahf
std
dec
push
stos
imul
ss
and
pop
cmp
repz
jb
jns
mov
sub
adc
test
cmc
dec
repz
daa
jmp
sub
jb
loopne
cmp
sbb
sbb
imul
add
rcll
out
mov
lds
add
or
test
int
or
popa
inc
stc
pop
mov
jmp
adc
jg
or
push
xchg
aas
adc
adc
and
addr16
cmp
sar
mov
adc
lods
sarb
adc
or
dec
jb
lcall
imul
shrb
xlat
inc
push
jmp
cwtl
pop
iret
cwtl
add
sbb
fs
sub
jl
adc
cmp
dec
mov
ret
aas
mov
mov
into
into
loop
add
push
je
cmpb
dec
push
add
inc
stos
mov
das
pop
or
dec
fmull
js
xchg
inc
mov
shl
cmpb
sbb
js
mov
mov
mov
addr16
es
out
ss
xchg
sahf
cmc
loopnew
or
inc
jle
xlat
pop
outsb
sbbl
sarb
cmp
clc
sbb
popf
cs
stos
into
dec
jnp
hlt
dec
xor
jmp
cltd
and
push
sbb
and
mov
popf
xor
js
xchg
mov
inc
jp
stos
jmp
in
dec
or
int
inc
in
cmp
and
dec
or
ret
mov
mov
mov
dec
sbb
add
dec
in
into
cli
cmpsb
vldmxcsr
sahf
out
push
mov
dec
xchg
inc
cmp
repz
fwait
loope
xchg
mulb
xor
adc
mov
lock
repz
lret
add
push
cld
push
jnp
inc
dec
sub
lods
lock
inc
pop
jnp
sub
pop
push
xchg
jmp
shrb
sub
repnz
cwtl
imul
scas
in
push
push
mov
out
xchg
hlt
jo
lods
jo
or
pop
sbb
out
rcrb
insl
lcall
cltd
xlat
sahf
add
jno
sahf
inc
dec
push
push
mov
sti
adc
mov
jbe
lret
mov
mov
jb
inc
xor
add
cmp
sbb
or
sub
lret
scas
nop
flds
pusha
xchg
test
test
jmp
and
pop
in
push
es
mov
dec
xor
cltd
enter
testl
fidivl
mov
mov
and
inc
mov
in
and
aas
ret
sbbl
ret
out
add
mov
cmpsl
sbb
leave
xorb
es
sbb
xchg
adc
adc
inc
outsl
sub
xor
es
aam
push
mov
jae
xchg
mov
pop
test
addr16
dec
mov
cmpsl
insb
xor
sbb
ret
mov
out
mov
sbb
shrl
dec
andb
ss
mov
aas
rorb
ud1
jo
xor
comiss
mov
lcall
repnz
stos
jae
cmp
es
and
and
int3
ficomps
subl
and
mov
dec
out
aaa
xor
outsl
fistpll
out
test
mulb
stc
mov
mov
les
aad
or
rcll
pop
add
imul
mov
cmp
stos
cmpb
out
push
push
xchg
xchg
ljmp
sub
add
pop
push
add
out
sub
mov
loop
inc
sub
in
cli
shll
push
bound
mov
jmp
int
jle
cmp
jno
sub
xchg
mov
ffree
cli
xchg
jl
push
mov
ret
clc
imul
or
push
push
out
fwait
fwait
popf
xor
push
xorb
pop
jecxz
popf
subb
stc
jb
add
cmp
insb
adc
push
xchg
popf
and
inc
lock
mov
pop
leave
popf
leave
rcll
out
adc
push
sbbb
dec
cmp
shr
test
data16
add
dec
pop
addb
dec
in
adc
daa
pop
jnp
sub
fs
daa
fsubrs
enter
sub
lret
add
lds
inc
lods
push
xchg
imul
mov
xor
mov
nop
push
lods
lret
in
cmpsl
imul
xor
dec
dec
enter
inc
push
push
ficoms
sub
inc
ljmp
imul
push
ja
addps
sbb
or
or
adc
icebp
sbb
add
ret
add
cltd
sarl
test
outsl
jmp
and
es
clc
bound
mov
xchg
lock
pop
aad
jb
and
push
addb
inc
cmp
fucomp
in
nop
leave
sbbl
jne
arpl
bound
lahf
push
mov
push
xchg
xchg
or
cmp
in
movsb
xlat
xchg
add
rcll
into
cmp
inc
mov
jno
decl
sbb
int3
push
and
mov
adc
mov
push
sub
stos
int3
pushf
iret
xchg
inc
lret
dec
movsl
dec
sbb
rclb
jnp
mov
mov
mov
jae
adc
popa
xchg
enter
push
lahf
and
stos
jle
mov
testl
in
in
cmp
out
pusha
and
adc
negl
xlat
mov
sub
cld
xor
cs
int
cmp
add
mov
push
inc
and
push
mov
outsb
inc
enter
cmc
js
in
mov
inc
mov
xchg
mov
mov
pusha
add
popa
sbb
xor
mov
movsb
ss
cmp
call
sbb
ja
mov
loope
lret
ja
sbb
inc
fnsave
out
cmp
or
lods
mov
adcb
mov
jmp
adc
mov
mov
mov
dec
adc
loop
movb
loope
xchg
mov
arpl
jmp
jle
add
ds
mov
lret
icebp
sbb
inc
mov
jge
sbb
sub
add
lret
pop
pop
lods
das
and
mov
cwtl
movsl
shlb
fsubrl
fdiv
fcompl
and
pusha
out
xorl
test
push
mov
mov
lds
out
aam
push
push
out
mov
adc
mov
je
rorb
insl
inc
dec
xchg
jp
sarl
lods
dec
mov
in
les
and
jg
adc
inc
fcomip
inc
or
outsb
repz
inc
add
pop
cs
imul
or
jnp
sbb
movsb
push
popf
test
addr16
xorb
out
fs
adc
hlt
add
jae
shll
js
push
iret
pop
mov
adc
fldcw
mov
lods
repnz
int
test
cmp
pop
ja
lock
xchg
divb
in
push
incb
mov
add
fnstsw
fstl
js
and
push
fistps
dec
mov
cmp
out
testb
shll
jp
mov
push
sub
cltd
sub
mov
mov
or
aaa
mov
ja
lods
cmpl
stos
inc
jb
mov
dec
inc
sub
hlt
mov
dec
subb
push
jl
ret
cwtl
xchg
hlt
sbb
xchg
outsl
mov
loopne
xor
daa
rorl
dec
bound
iret
jl
sub
lcall
xchg
pop
add
shl
mov
pop
push
fsubrs
or
and
pop
pop
loope
movsb
or
aad
mov
outsl
push
xor
push
sti
xor
cli
dec
out
fs
jmp
mov
insl
xor
in
cmc
test
imul
sbb
aad
arpl
pop
dec
jae
testl
jo
popa
dec
leave
rcll
out
add
push
xor
rorl
mov
push
jae
dec
pop
push
in
nop
lea
lods
mov
shrl
mov
mov
mov
push
leave
sub
jg
fiaddl
rorb
jne
sbb
adc
orl
pop
xchg
xchg
fs
xor
out
fimull
bound
pop
imul
loop
mov
add
push
fcomi
out
movsl
xchg
enter
rolb
dec
inc
sbb
push
xor
or
fwait
mov
mov
mov
out
in
out
inc
testb
lret
std
dec
adc
lret
mov
mov
out
mov
push
xor
lea
addr16
sbb
add
gs
mov
cmpsl
sbb
inc
xchg
mov
and
dec
push
lods
je,pt
inc
mov
aas
rolb
ja
pop
pop
nop
sub
push
and
sbb
jnp
cwtl
cli
dec
mov
or
add
mov
pushf
enter
jne
into
add
rol
test
jmp
inc
jno
test
stc
xor
push
sti
sub
outsb
daa
es
js
stc
cmp
inc
mov
xchg
or
add
pop
mov
jno
aas
mov
bound
xchg
sub
out
jg
fildll
loope
shll
xor
test
xor
pushf
aam
mov
dec
and
popa
adc
jecxz
inc
push
mov
mov
out
jae
frstor
loopne
mov
push
xor
sbbb
imul
dec
sbbb
mov
mov
jne
push
pop
inc
test
imul
daa
cld
adc
dec
sub
xor
pop
addl
jmp
add
jb
sbb
add
cmp
sahf
call
int3
push
addr16
and
xchg
jecxz
mov
pop
rorb
out
or
int
shlb
dec
add
xchg
xor
mov
cmp
bound
adc
push
ljmp
push
lahf
fistpl
pop
adc
inc
jg
dec
or
je
test
push
cmp
add
push
inc
pop
push
push
or
sarl
cmp
jnp
lds
fbld
push
jmp
clc
jle
aas
sub
shl
mov
xor
in
fidivrl
dec
pop
stc
add
leave
out
mov
adc
adc
das
dec
mov
pop
addr16
fisubrs
cwtl
pop
lret
aas
call
in
cs
sbb
ljmp
pop
dec
fwait
add
lahf
sbb
stos
xor
xchg
nop
adc
mov
lods
fs
push
push
in
les
lcall
out
push
lcall
lock
loope
sahf
imul
mov
dec
sub
out
test
dec
push
ficomps
push
jnp
lret
ljmp
int3
inc
outsb
je
pop
out
daa
insb
pop
push
xchg
stc
addr16
ss
pop
xchg
push
jne
fcmove
ss
xchg
xor
push
popf
jp
or
mov
test
lret
ljmp
loope
rcrb
outsb
or
push
outsb
imulb
adc
je
jb
cmp
repnz
adc
sub
or
rorb
js
sbb
movl
jle
jle
stos
negl
mov
and
dec
mov
sahf
pop
xor
sub
mov
push
test
and
in
insb
popf
loopne
cmp
mov
sub
cmp
pushf
xorb
mov
cld
cmp
lds
insb
xchg
and
sbb
cmp
lock
icebp
sti
mov
fists
lcall
adc
dec
cmp
mov
out
js
mov
xor
inc
adc
xchg
inc
orb
rolb
rcll
push
jl
xchg
shr
sub
loop
lock
das
leave
push
xor
xchg
push
jno
je
and
sub
mov
stos
test
in
mov
or
orb
int
adc
clc
data16
fdivrs
adc
aaa
lahf
fcmovne
in
push
fcomi
outsl
lcall
push
mov
incl
sarl
daa
jge
shlb
mov
xchg
imul
aas
pop
sbb
movb
gs
push
xchg
lahf
push
jg
xchg
add
call
push
sbb
scas
pushl
sub
call
push
insl
andl
fdiv
or
divl
rorl
xor
xchg
add
push
mov
xchg
xchg
cmpsb
xchg
push
xor
popfw
push
xchg
int
enter
enter
pop
xchg
add
inc
dec
push
lds
lods
movsb
gs
add
out
jl
aam
shl
aad
mov
aam
dec
rcrl
aad
pop
jo
and
into
pop
cmp
cltd
sub
cmp
add
mov
mov
jb
mov
and
sbb
push
movsb
lcall
sub
pop
negb
stc
jle
push
cltd
fwait
xor
xor
jnp
sbb
fs
lret
sbb
fstpt
xor
stos
pop
pop
loop
adc
jno
es
movsl
imul
sub
pushl
xchg
iret
jns
adcl
mov
aam
lods
mov
mov
add
adc
sahf
mov
loope
movsl
dec
pusha
mov
adc
dec
nop
dec
in
push
xor
cld
mov
aas
lcall
inc
je
loop
mov
inc
sti
in
sbb
pop
or
mov
pop
ljmp
aad
add
in
cs
sub
mov
fdivs
mov
pop
or
mov
repnz
fwait
subb
leave
fcmovbe
jg
mov
sub
jecxz
sub
adc
pop
or
ds
outsb
xor
cmp
lock
mov
out
xchg
out
add
movsb
mov
push
xor
flds
adc
mov
sbb
in
xor
xchg
push
mov
int
inc
fcompl
rol
push
or
ret
jecxz
inc
lods
dec
and
and
ss
out
inc
mov
cmc
mov
in
or
loope
inc
sbb
out
in
into
shrl
xchg
xlat
notl
aas
dec
fisttpll
xlat
loope
dec
jne
inc
roll
mov
andl
je
cmpsl
mov
loopne
sahf
pop
xor
add
pusha
mov
stos
sub
pop
pop
das
jbe
lea
mov
test
sahf
dec
inc
cmp
add
popa
mov
jecxz
jb
adcl
inc
jle
je
jno
out
sahf
rcrb
xor
xor
hlt
arpl
dec
je
mov
imul
xor
fdivl
cmpsb
hlt
ret
push
mov
ret
insl
pop
aad
add
pusha
xor
aas
mov
mov
mov
xor
jle
ljmp
mov
push
mov
movsb
mov
inc
add
push
jae
daa
pop
imul
jne
and
sti
add
das
fisubrs
add
jnp
ret
fwait
aam
cmp
in
iret
jg
mov
pushf
inc
xchg
or
into
fsts
enter
xchg
xchg
push
add
mov
out
js
sub
mov
cmp
push
cmp
push
xchg
add
scas
sahf
and
in
push
mov
push
ds
jns
xor
lock
jb
add
movsl
mov
sub
mov
sub
and
lahf
aam
sub
mov
mov
mov
inc
mov
movsl
xchg
pusha
mov
lock
mov
fdivs
loopne
sahf
dec
lahf
lods
xor
pop
das
and
mov
sbb
pop
dec
out
cwtl
nop
mov
sub
popf
js
mov
in
lods
stc
leave
aam
xchg
aad
pop
andl
xor
aas
and
pinsrw
outsb
jg
sub
ret
jbe
jp
mov
icebp
xchg
cmc
subb
inc
in
sub
sub
lods
pusha
fs
adc
mov
test
jne
push
push
imul
push
xor
insb
push
stc
stc
sbb
test
fnstenv
and
aam
xchg
ja
shrl
es
mov
push
pop
lahf
sub
inc
pop
adc
jg
insb
in
bt
call
in
xor
or
in
push
js
in
call
sbb
adc
fld
jl
lods
pop
stos
inc
das
jecxz
hlt
sbb
lods
mov
add
jle
cmp
popa
mov
add
mov
push
fiaddl
out
filds
movsl
ja
cwtl
sbb
loop
jg
stc
je
cmp
fsubl
mov
movl
jle
push
int3
cli
scas
cwtl
out
sbb
xor
mov
filds
jl
loopne
aam
sub
roll
and
jp
cs
cmpl
mov
mov
sub
xor
add
imul
scas
adc
inc
mov
movsl
out
clc
jno
out
scas
daa
sbb
mov
push
xchg
clc
gs
sbb
add
pop
ret
jge
div
jg
in
xchg
mov
or
testl
sub
imul
sti
sti
orb
repnz
xchg
lcall
dec
mov
inc
repnz
xor
lods
data16
addb
je
jg
test
ja
clc
leave
sbb
pop
sbb
push
push
enter
cmpsb
outsb
jmp
sahf
imul
nop
xchg
dec
setg
lcall
sub
inc
add
aad
or
add
std
iret
dec
mov
jns
cli
xchg
scas
rcl
out
int3
lret
insl
xor
je
jo
fldcw
jns
das
adc
inc
mov
mov
rclb
sar
dec
push
dec
lahf
lods
push
jp
mov
hlt
in
inc
stc
mov
fwait
push
and
out
sub
jbe
sbb
pop
xchg
mov
repnz
stc
mov
and
mov
pop
iret
pop
jns
push
aas
jge
pusha
in
pop
jg
gs
inc
nop
call
dec
out
movsl
inc
imul
scas
sbbl
sub
push
into
or
lret
add
pop
and
fwait
jne
insl
mov
clc
xchg
cmp
push
sub
iret
fs
fidivrl
lcall
std
mov
dec
push
dec
or
sub
dec
scas
dec
or
dec
push
aad
popf
fmull
je
xor
xchg
test
lea
fistpll
fwait
movsl
test
dec
cltd
ret
mov
popf
xchg
or
imul
push
pop
push
dec
push
or
test
sub
stc
push
pop
pop
or
and
clc
mov
aaa
cmpsb
adc
jle
and
outsl
setge
pop
mov
pushf
mov
das
test
cltd
stc
mov
and
mov
cmpsb
into
pop
sti
xchg
xchg
out
dec
inc
pop
jne
pop
insb
mov
jp
adc
mov
lret
adc
sti
jae
sbb
paddsw
sub
inc
cmpsb
out
push
aas
pop
icebp
add
inc
outsb
adc
jb
dec
pop
or
mov
cmpsb
fistpll
cmpsb
lahf
mov
mov
rcl
inc
imul
jo
xlat
test
pop
out
repnz
movsl
mov
ret
mov
ret
outsl
sbb
clc
mov
js
loop
xchg
sbb
imul
and
divb
lret
js
loop
pop
addr16
sbb
pop
or
psraw
and
jno
shl
and
mov
mov
add
aad
mov
push
adc
add
sbb
dec
imul
xchg
lock
jae
outsb
xchg
and
cmp
dec
pop
push
sbb
std
les
shlb
and
cmpsb
inc
les
mov
aad
push
lds
dec
outsb
inc
scas
sahf
dec
cld
out
fisubrl
outsb
adc
or
cmp
scas
into
shll
xor
sbb
sub
sbb
jge
imul
daa
jae
in
push
xchg
std
adc
mov
insb
icebp
mov
push
push
sub
mov
mov
lds
aad
outsb
or
mov
sub
cs
gs
addb
dec
and
sub
fs
push
mov
ljmp
pop
sbb
mov
outsb
outsl
pushf
xor
push
or
pop
push
add
push
adc
sbb
in
sbb
popa
push
sahf
jae
sbb
push
mov
int3
sbb
xchg
add
test
mov
lods
outsb
mov
div
fwait
inc
aaa
sub
icebp
jae
fdivrl
fstpt
xor
or
mov
xor
inc
in
or
bound
stc
imul
loop
xchg
loop
pop
xorl
inc
inc
in
jge
es
lock
and
xchg
dec
outsl
push
outsl
std
jp
ror
sub
sub
mov
push
repnz
mov
jo
addb
and
push
cs
jge
pop
hlt
insb
pusha
push
push
inc
loopne
sub
push
fistps
std
frstor
cmc
nop
dec
mov
out
lahf
mov
cmp
outsb
cmc
xor
and
outsb
outsb
cmp
les
cmpsb
rcrl
push
push
xlat
notl
lcall
mov
pop
mov
rcrb
xor
xor
pop
les
sbb
imul
test
test
pop
jle
push
pop
outsb
shll
fld
pop
cs
roll
pop
fwait
popa
inc
xchg
fistpl
inc
fcomps
lods
lahf
dec
repnz
ss
test
loope
call
icebp
jge
jg
pusha
jg
sbb
add
leave
inc
lcall
and
cmp
pop
cmpsb
mov
adc
pop
cmp
inc
loopne
push
repz
dec
xchg
dec
rcrb
add
jbe
xlat
push
negl
loope
mov
das
push
fidivl
imul
xchg
stos
jl
test
arpl
in
or
pushf
ds
or
repz
insb
or
cmpsl
xchg
xor
push
into
mov
and
call
fmull
roll
scas
mov
sub
jb
xchg
lock
ret
fdivrs
push
mov
pop
out
mov
addb
push
push
push
jb
cmp
mov
sub
data16
fsubl
pop
jge
cmp
pop
xchg
rcll
fstps
sbb
ret
enter
xchg
and
pop
lret
jne
repnz
cmp
mov
addr16
or
outsl
mov
decl
loopne
pop
stc
dec
add
sahf
add
out
push
sbb
mov
hlt
movsl
imul
jnp
jo
aaa
lods
inc
imul
scas
jmp
int
pop
sbb
push
lret
clc
or
mov
rorb
addb
cmp
mov
pusha
cli
shrb
push
cli
adc
adc
test
push
outsl
lret
jle
rclb
push
lods
xchg
mov
popa
dec
adc
rcll
xor
inc
sbb
push
cltd
jg
mov
pop
mov
stos
jle
push
insl
stos
jne
adc
pop
fdivl
aad
rep
mov
neg
xchg
xchg
aas
xchg
loop
cmc
fisubs
arpl
hlt
movb
pop
mov
mov
adcl
cwtl
mov
cmpsb
push
jge
pop
cmp
addr16
push
test
jae
jne
xchg
prefetch
dec
shlb
scas
outsl
lret
mov
inc
jecxz
or
les
jecxz
jle
loop
rcll
sbb
mov
cmpsb
lods
sub
pop
das
inc
mov
mov
add
cmp
imulb
xchg
iret
mov
jnp
mov
fiaddl
push
jge
pop
leave
inc
inc
mov
adc
xor
test
cmpsb
add
dec
test
dec
inc
insl
xlat
iret
sbb
mul
in
aam
lds
popf
sarb
sbb
xchg
out
mov
sbb
je
sahf
dec
sub
aam
loope
shr
stos
push
push
xor
pop
push
mov
addr16
pop
push
cmpsb
push
pop
fwait
jbe
sti
cmp
sub
jo
and
jo
test
mov
jo
icebp
xchg
out
xor
sbb
jne
es
lea
scas
sbb
aad
jecxz,pt
outsl
inc
mov
mov
xchg
pop
loopne
or
rol
shl
push
call
cmp
push
cmc
adc
mov
dec
and
pop
shll
xor
and
and
movsb
fmulp
sub
dec
and
negl
aaa
fs
pop
ss
xchg
stos
mov
pop
rolb
pop
shlb
pop
mov
testl
push
into
lods
sub
aas
mov
stos
cmpb
cmp
jae
sub
mov
rep
subl
daa
clc
aad
cwtl
and
cli
xor
call
inc
add
cmp
cmp
call
movsl
arpl
push
cmc
pop
pop
nop
pop
aam
adc
in
xchg
dec
int3
bound
call
push
jl
xchg
xor
std
xor
repz
pushf
add
iret
and
fwait
jb
lea
shlb
cwtl
push
xchg
les
das
jne
mov
mov
cld
sbb
pop
roll
jp
loop
test
mov
out
aad
inc
aas
add
lods
outsb
lret
adc
xchg
mov
and
add
aaa
imul
add
mov
leave
inc
in
pop
cmpsl
sub
fs
adc
and
push
cli
and
mov
dec
push
jno
repz
jb
es
pop
les
imul
aas
mov
fmuls
add
jbe
fisubrs
jle
das
sarl
pop
in
fwait
push
and
ss
mov
movsl
dec
stos
and
or
mov
cmp
test
mov
xor
cmp
cli
outsb
in
mov
add
inc
ret
push
fmuls
add
jp
mov
int
adc
pushf
outsb
fnstsw
xor
mov
mov
gs
test
scas
jecxz
ret
jle
mov
mov
jae
jae
mov
das
out
mov
xor
or
adcb
cld
out
imul
les
jecxz
daa
addb
loop
push
push
test
sahf
jnp
xor
out
iret
loope
fprem
test
int3
push
ljmp
nop
inc
pop
js
int
xor
cld
adc
adc
divl
push
and
insb
shlb
in
pop
jb
adc
cmp
mov
test
push
ja
adc
inc
lods
pop
out
aaa
push
aas
out
xchg
imul
adc
mov
dec
cmpsl
mov
gs
mov
jb
jne
fsubl
sub
xchg
leave
popf
jb
insl
lahf
cmp
enter
push
pop
jbe
icebp
fs
add
cld
addr16
mov
and
vmovhps
in
lahf
push
xchg
mov
repz
pop
fldl2t
nop
dec
push
scas
add
sbb
fcompl
loopne
pop
dec
in
xchg
and
or
psubd
or
sbb
xchg
mov
mov
add
pop
imul
xchg
cmpsb
inc
mov
cmpsl
cmp
das
loope
jl
jne
insl
cmpsl
mov
sahf
fs
cmpsl
cli
fiadds
mov
jne
call
out
pop
aas
mov
ret
lret
pushf
mov
add
mov
stos
xchg
fistpll
mov
lds
gs
adc
in
or
int
or
and
add
cltd
sbb
dec
in
out
out
dec
sahf
lret
ljmp
sub
xor
or
push
lahf
adc
jb
mov
add
cli
cmp
shll
adc
daa
mov
push
aas
enter
js
pusha
mov
in
add
xor
das
push
or
xchg
fs
xor
les
push
andb
pop
fnsave
movb
sahf
xor
pop
pop
inc
out
popl
mov
aad
in
or
push
movsl
fisubl
sub
shll
or
push
fs
pushf
cmp
fs
nopl
xchg
push
iret
imul
push
inc
mov
pop
cmpsl
inc
sub
fisubrs
pop
imul
shrl
xor
xor
scas
jae
jl
or
dec
popa
or
dec
aaa
mov
jno
xor
fcmovnbe
lock
enter
pop
inc
mov
dec
stos
mov
pop
and
out
pop
cmp
mov
test
lea
mov
pop
adc
imulb
ljmp
popa
push
leave
movsl
ds
or
in
mov
iret
inc
sub
fwait
test
subl
lock
cmp
shlb
mov
in
aas
push
pop
mov
sub
fwait
or
cmp
movsb
push
or
and
add
arpl
push
cmp
mov
lods
sbb
subl
shll
jecxz
and
ret
adc
sbb
dec
jle
dec
outsl
xor
xchg
rolb
inc
xchg
fbstp
dec
ss
out
loopne
dec
testb
push
mov
out
sbb
add
loope
outsb
sti
pop
and
cwtl
enter
xor
sbb
rorb
inc
cmp
popa
push
pusha
fiadds
das
rorb
mov
or
lret
hlt
fsub
sahf
jle
aaa
sbb
mov
push
and
dec
xor
push
inc
inc
cmc
lds
push
jecxz
out
push
rolb
xor
push
xchg
je
hlt
and
scas
sub
pushf
movsb
mov
lcall
idiv
xor
xor
mov
pop
mov
andl
jle
push
mov
or
and
cs
inc
jge
mov
mov
adc
int
scas
rcrl
mov
cmpsl
mov
adc
test
popa
fwait
sbb
out
lret
es
je
xchg
imul
sti
pusha
lcall
negl
mov
mov
in
push
inc
add
cltd
and
push
and
inc
push
push
cmc
sub
int
mov
cmc
push
lods
in
sbb
jmp
jb
ljmp
push
cmp
jne
mov
ljmp
test
scas
hlt
test
fsubs
xchg
xchg
in
xor
mov
mov
aam
clc
ja
sbb
shl
gs
cmp
daa
add
mov
testb
mov
or
aaa
or
incb
sub
push
mov
or
push
fimuls
mov
sbb
lods
sbb
or
mov
das
out
pop
movsb
outsb
fistpll
cpuid
repz
lock
pop
jg
movsb
mov
imul
pusha
jg
xor
leave
test
inc
mov
jecxz
es
orl
fildll
jle
or
aad
daa
aad
sub
sbb
or
cld
sbb
loope
adc
xchg
mov
cld
pop
and
shll
fists
les
repz
mov
stc
cmc
sub
push
inc
cld
dec
addr16
cmp
add
sbb
sub
sbbb
and
jge
xlat
aam
push
rorl
sbb
cwtl
popa
push
add
sti
adc
lret
out
or
dec
push
xor
sarl
mov
sub
outsl
clc
scas
pushf
mov
sbb
ret
push
jp
ror
xor
ljmp
inc
push
leave
inc
pop
or
stos
or
mov
and
int
test
sahf
cs
add
cmpb
xlat
shll
adc
dec
or
les
xchg
mov
stos
mov
dec
mov
sbb
ficoms
cmp
mov
call
cltd
mul
sti
add
fisubrs
pop
shr
mov
xchg
adc
add
je
and
jae
mov
mull
sbb
inc
adc
push
out
andl
mov
arpl
push
in
popf
and
push
sbb
sbb
pushf
push
daa
stc
sbb
mov
push
shlb
dec
xor
push
jmp
add
add
add
push
fcomps
fcmove
mov
mov
lods
hlt
jnp
dec
and
and
rolb
out
cmp
sub
fstl
cmc
fldenv
xchg
icebp
sarb
inc
scas
lock
add
push
ss
das
mov
aam
inc
arpl
pushf
pop
shrb
shll
add
dec
es
loope
and
shlb
dec
dec
mov
sbb
fildl
xchg
inc
notb
ss
pop
xchg
mov
xchg
xchg
idivl
out
jnp
inc
jmp
lds
or
loope
pusha
lods
dec
cmp
push
or
mov
dec
dec
ret
outsb
mov
js
adc
fidivl
xchg
ss
jno
test
xor
stos
jl
and
xchg
or
call
add
lret
roll
push
add
push
pop
or
out
mov
imul
lods
jmp
mov
std
xchg
jne
cmp
shll
mov
cltd
int3
add
jmp
jle
xchg
mov
xor
xor
push
int3
cs
cs
push
mov
xor
scas
shr
and
out
sbb
loopne
fcmovnbe
mov
shr
jnp
xor
loopne
xchg
out
loopne
xchg
cltd
cmp
xchg
cmp
sub
jo
fidivrl
insb
push
push
mov
xor
push
nop
leave
cwtl
cltd
aad
mov
push
push
cmp
sub
les
push
jns
mov
pop
int
je
icebp
cmp
jnp
xchg
cmp
jno
idivl
xchg
je
mov
dec
inc
mov
xchg
jmp
scas
leave
inc
xchg
and
xchg
cli
add
out
sti
or
fwait
push
mov
adc
add
inc
neg
pushf
dec
xlat
pop
hlt
popf
es
jl
filds
ljmp
pop
lock
outsl
jbe
adc
out
push
push
xlat
sub
xchg
pop
sahf
inc
xlat
nop
insl
daa
imul
jl
jne
dec
jge
sub
ret
pop
fstps
adc
aam
mov
shll
mov
pop
cmp
mov
iret
pop
lds
js
xchg
test
je
int3
dec
mov
aas
gs
aas
push
push
or
jno
test
in
daa
add
outsb
mov
aam
pop
dec
cmp
push
pop
pop
push
jl
dec
ret
lds
dec
xchg
out
mov
iret
js
fists
cltd
dec
push
lret
js
xor
jno
in
and
mov
clc
stc
cs
test
xchg
fcomp
dec
or
popl
or
lock
mov
jmp
cwtl
dec
or
mov
xor
adc
stc
ret
mov
add
xchg
movsl
dec
js
mov
jg
and
outsl
shl
add
ljmp
aam
cwtl
jle
ret
outsb
jl
mov
add
fwait
add
sbb
gs
adcl
mov
lods
imul
mov
aaa
or
loope
and
and
xchg
sahf
scas
fcmovnbe
mov
mov
dec
cltd
sbb
cmc
rorl
xor
jmp
ret
mov
xlat
movsl
movsl
dec
xor
jbe
insb
lahf
adcb
add
pop
stos
inc
add
inc
and
popf
push
push
xchg
nop
mov
fucomip
hlt
test
icebp
fcmovnbe
scas
mov
or
mov
iret
pop
cs
sub
out
adc
mov
stc
push
and
sub
leave
pop
clc
dec
sti
out
or
jno
cld
popa
xchg
jns
add
sub
popf
cmp
mov
xor
jmp
out
mov
jg
sbb
jbe
lcall
jge
decb
xor
lret
dec
fwait
sbb
push
inc
add
cmpsb
xchg
mov
addb
movsb
dec
outsb
mov
cld
icebp
out
cltd
xor
aam
push
or
aam
jo
push
push
ss
push
imul
repnz
js
fadd
mov
movsl
xor
incl
cmp
les
push
in
inc
mov
fsubs
adc
clc
mov
xchg
sub
dec
in
jae
or
imul
daa
mov
dec
test
cmc
loop
ja
imul
mov
sbbb
int
mov
sub
fldl2e
in
or
push
dec
in
enter
or
insb
cmp
stc
nop
sahf
dec
jl
push
adc
sbb
shll
fcoml
mov
shrb
add
or
stos
enter
pushf
frstor
mov
lcall
imul
cmp
mov
ds
sbb
decb
adc
sub
jbe
cli
bound
dec
sti
xor
adc
adc
inc
loop
cmp
insb
dec
mov
outsb
sub
pop
mov
lea
mov
lret
loope
std
mov
jp
inc
in
lods
jo
inc
adc
scas
push
popa
rol
lcall
mov
inc
mov
insb
ja
cwtl
scas
jno
loopne
test
lock
in
xor
inc
ds
fildl
mov
mov
lods
roll
pusha
push
xor
pop
jmp
inc
mov
shll
lods
ficoml
adc
sub
popf
aad
adc
call
in
fistl
insl
aaa
sbb
pop
movsb
sarw
imul
jp
das
mov
movaps
movsb
dec
xchg
insl
jg
mov
xlat
inc
jae
and
pop
popf
push
inc
jbe
loop
mov
dec
inc
xor
pop
daa
gs
out
and
push
rcrl
lock
push
test
popa
xchg
mov
and
xchg
movsb
adc
pop
filds
addr16
or
bound
aad
in
xor
dec
pop
jp
inc
ret
repz
fcomip
xchg
outsb
jecxz
push
das
xor
dec
mov
cmp
insb
movsb
ficoml
addr16
repz
es
sub
or
adc
xlat
shl
outsl
or
das
gs
mov
xchg
sub
or
sbb
sub
ss
adc
mov
jns
outsb
dec
lds
xchg
hlt
mov
or
mov
sub
add
cld
mov
cld
lea
pop
shr
lea
or
jp
push
pushf
cld
mov
fbstp
lds
dec
dec
sub
push
test
mov
sbb
lods
mov
jl
aad
push
xor
xor
lcall
or
rcl
dec
sarl
inc
outsb
sub
fs
and
cmp
nop
nop
fisttpl
test
xchg
in
jg
or
sbb
jmp
sbb
sti
sbb
scas
pop
popa
loopne
mov
and
ss
adc
or
rclb
jg
xchg
and
sbb
add
mov
pusha
decb
pop
hlt
push
xchg
jmp
outsb
or
shll
frstor
xchg
lret
out
fistps
pop
je
pushf
call
pop
mov
loop
cmp
xchg
adc
roll
icebp
pop
mov
jbe
mov
sub
jns
push
inc
or
mov
mov
sbb
lock
fnstcw
imul
aad
in
lahf
mov
push
push
mov
cli
popa
fs
nop
lret
test
bswap
or
sub
dec
adc
adc
jge
push
mov
mov
pop
movsl
dec
ss
inc
xor
inc
fwait
paddb
mov
cmpsl
das
je
xor
fcompl
push
add
and
xor
cli
lods
xchg
mov
add
inc
icebp
push
adc
in
xor
in
into
adc
xor
iret
push
shr
pop
nop
loopne
aaa
test
rorb
jmp
loop
mov
push
jb
or
sub
aas
scas
int
add
pop
mov
add
mov
mov
add
adc
xor
mov
insl
insl
inc
xlat
pshufd
ficompl
cltd
test
mov
push
imul
into
idivl
xlat
sbb
or
cmpl
jg
fwait
sbb
pop
out
stos
xor
mov
movsb
xchg
mov
lret
test
mov
testl
fstp
roll
cmpsb
or
lods
add
fxch
mov
arpl
pop
mov
sbb
movsb
filds
fsubrs
js
xchg
push
xchg
jo
push
adc
fnstenv
xchg
out
in
mov
and
pop
loope
in
adc
subl
xor
xorl
xchg
std
sub
sbb
outsb
sub
add
cmpsb
movsl
mov
pop
inc
int
mov
sbb
mov
inc
xor
cs
adc
hlt
pushf
mov
mov
andl
stos
ljmp
out
adc
ret
sti
inc
aaa
mov
mov
mov
jb
push
or
and
push
bound
inc
in
lods
rolb
out
test
mov
dec
hlt
iret
aas
pop
jae
ljmp
movsb
int
xor
or
xor
mov
popf
adc
xchg
shrb
cmp
in
adc
pop
mov
jno
cmp
push
sti
sbb
stc
pop
in
ffree
and
push
pop
dec
pop
mov
sub
sub
sti
in
adc
inc
inc
inc
aas
or
mov
filds
xchg
and
pop
cmp
sub
fs
and
repz
mov
pushf
mov
xchg
in
cmp
std
jmp
sub
sbb
mov
into
cmp
fs
shrl
push
test
mov
adc
xor
aaa
fdivr
xor
cmp
mov
test
pop
lods
push
jo
js
lcall
lret
inc
mov
xchg
push
imul
lods
out
out
cmp
push
fscale
adc
push
dec
stos
ja
push
shrl
dec
std
sbb
repz
hlt
sbb
pop
test
adc
mov
and
loope
out
movsb
fwait
scas
cwtl
mov
mov
sub
in
loope
mov
imul
mov
inc
and
cwtl
jnp
ret
bound
sahf
in
pop
popf
roll
stos
inc
push
sbb
int3
mov
jmp
or
imul
mov
cmp
cwtl
ds
pop
push
into
inc
adc
xor
ffree
push
aad
xchg
mov
in
mov
sub
cmp
bound
cli
popa
push
mov
insb
clc
dec
sbb
mov
adc
or
dec
lahf
ljmp
cs
bound
roll
jl
repz
mov
adc
pop
lock
filds
xor
mov
aaa
sbb
or
jb
add
lret
push
nop
std
in
jmp
jg
mov
sbb
jecxz
dec
int
cmp
xor
sub
sbb
xor
adc
sbb
scas
stc
xor
cld
fsubrs
jge
insl
sar
test
daa
mov
insl
add
sub
and
pop
out
jge
xchg
les
stos
mov
sbb
or
and
sub
out
imul
inc
push
dec
addr16
repz
sub
test
or
es
in
xchg
dec
push
or
jp
adc
fdivrs
mov
sub
insb
push
shrl
xchg
in
aas
imul
inc
lods
push
ljmp
jge
out
inc
mov
lahf
or
sub
ret
in
mov
test
js
mov
add
push
pop
mov
cmpb
mov
enterw
sahf
xchg
aas
test
sub
cmp
sbb
jecxz
pop
mov
mov
or
mull
cli
mov
dec
sub
hlt
jmp
dec
mov
int
and
iret
clc
xor
inc
and
xor
mov
fimuls
fisubl
and
jo
push
inc
pop
in
adc
xor
push
add
xchg
jge
and
push
xor
dec
xor
push
push
fnsave
ja
rcll
push
or
iret
and
sarl
decl
jnp
in
push
arpl
adc
stos
insl
pop
mov
xlat
rcrb
jecxz
add
ljmp
adc
cmpsb
out
pop
mov
mov
jmp
add
int
and
loopne
mov
insl
scas
shrb
add
fsts
xchg
dec
inc
inc
pop
lds
jne
sahf
into
jae
roll
popf
mov
je
adc
pop
outsl
cmp
into
nop
adc
xor
jno
std
in
xchg
mov
imul
mov
jl
imul
mov
mov
js
in
outsl
sbb
movsl
in
pop
jmp
jecxz
jmp
adc
xchg
jo
add
bound
xchg
pop
fwait
test
mov
insl
clc
bound
arpl
cmp
movsb
fiadds
cmc
xchg
xchg
aaa
pop
push
and
int
jg
out
xchg
and
lock
bound
nop
jns
cmpsb
std
and
adc
subb
enter
adc
movsl
dec
call
push
mov
gs
mov
mov
rorl
cs
jle
mov
sbb
pusha
mov
lcall
lods
loop
jle
out
dec
or
mov
mov
insl
or
gs
js
or
and
frstor
cmp
rcrl
fisubs
or
cmp
andl
aaa
add
cmpsl
pop
mov
out
and
mov
jge
or
inc
out
cld
cmpsl
jnp
lds
or
add
fs
cmp
out
dec
daa
pushf
addr16
jne
fcmovnbe
lods
in
out
out
popf
icebp
out
jo
lcall
cmp
mov
aad
nop
lahf
mov
push
xor
or
cmp
and
arpl
and
pop
adc
pop
jns
xchg
mov
ja
mov
js
push
fisttpll
sub
sbb
test
add
adc
xchg
mov
dec
xchg
lret
test
arpl
mov
add
push
mov
hlt
cwtl
mulb
cmc
inc
mov
jp
xor
js
mov
inc
inc
sub
lahf
les
sbbl
insb
xor
fsubrs
inc
addr16
popa
cli
or
cli
sbb
mov
and
rcll
lock
mov
jb
shlb
lock
add
push
add
dec
imul
mov
push
mov
pop
ret
push
push
ret
popf
mov
pop
pop
nop
fucomi
jne
into
lcall
xlat
add
icebp
scas
fildl
pop
cld
ja
mov
in
inc
mov
cmp
xchg
sbb
adc
dec
jl
sub
or
lahf
xor
movsl
add
rcrl
cmp
xor
xchg
sub
push
outsb
ljmp
nop
iret
daa
ljmp
xorb
insl
aas
push
in
push
sbb
es
sbb
inc
mov
sbb
push
gs
lahf
jl
mov
and
negl
and
mov
fisttps
insb
xchg
aas
jbe
lcall
je
push
inc
pop
mov
les
jae
lea
fsub
lret
stos
and
insb
push
xchg
sub
int3
dec
sub
icebp
dec
mov
out
das
int
sbb
xlat
cmp
iret
jo
jge
test
dec
xchg
test
dec
mov
push
push
mov
movsb
fmul
inc
ret
adc
sahf
mov
mov
push
aad
mov
lret
fucomi
popf
stos
fsubrl
mov
aas
stos
rcll
int3
inc
sti
or
add
sub
cwtl
mov
bound
mov
stos
lahf
stc
daa
shl
or
cmpsl
ss
jmp
pop
das
adc
mov
int
mov
inc
fs
int3
dec
sub
jbe
mov
sub
inc
jns
test
shll
and
das
aaa
adc
xor
sub
imul
pop
cmp
xchg
add
mov
xchg
cmp
cmp
mov
sub
inc
dec
jo
lods
xor
ds
dec
data16
pushf
dec
sub
or
js
xchg
xchg
imul
lahf
dec
ret
jno
fsubrp
pop
push
mov
sub
sbb
ljmp
push
in
into
fistpll
imul
lcall
jae
stos
mov
movsb
in
sahf
xlat
cmpl
push
fs
movsl
lahf
xchg
add
cld
cmpsb
cmpsb
and
jecxz
xchg
mov
ss
dec
notb
imulb
xchg
inc
popa
inc
pop
add
mov
mov
gs
mov
jnp
xchg
call
mov
sub
data16
cltd
jne
cmp
xor
daa
pop
int
mov
stos
push
pop
lret
mov
mov
fst
ja
xchg
jno
mov
les
mov
imul
and
aad
adc
xlat
jl
jmp
or
pop
cmpsl
loopne
mov
lods
movsl
lock
xchg
xchg
shll
shlb
push
out
mov
jmp
fwait
add
fisttps
decb
cltd
xor
push
movsb
cmp
mov
imul
xorb
pop
stos
shlb
mov
jg
xchg
popa
stos
ja
or
adc
repnz
sbb
imul
xchg
cmpsb
jnp
mov
sub
jmp
cli
fs
pop
xchg
and
cmc
fisttpl
push
cmp
pop
mov
ret
or
sbb
or
dec
mov
sbbl
call
push
adc
xor
iret
dec
and
push
mov
daa
sti
rcrb
jb
adc
cwtl
add
dec
push
sub
ja
or
bound
push
push
outsl
add
fdiv
aaa
outsb
mov
and
xchg
push
mov
xor
cmp
test
sti
mov
jp
and
ret
gs
test
mov
mov
inc
mov
or
test
mov
loop
fs
inc
lret
add
test
loop
xor
in
dec
inc
lods
lahf
scas
xchg
or
adc
inc
and
inc
adc
mov
fldt
pop
jbe
fiaddl
fucom
stc
jne
sbb
mov
and
cwtl
jnp
outsb
add
lds
cmp
push
xchg
sub
mov
and
xlat
ljmp
adc
adc
dec
dec
pop
dec
iret
inc
movsb
cmpsl
pop
and
and
push
repz
inc
test
std
enter
dec
in
push
jmp
stc
je
cmp
sti
std
xor
das
pop
push
xchg
and
ja
mov
ficoml
mov
mov
lods
fsubs
in
pop
test
xchg
shll
sbb
inc
setne
jl
mov
push
push
jmp
jbe
pop
loop
inc
jg
test
pop
cmp
sub
icebp
jne
fldcw
xchg
mov
mov
mov
push
std
ficomps
mov
add
pop
fsubrl
xchg
fimull
push
je
sub
jge
pop
pushf
out
xrstor
push
mov
add
testl
lea
mov
int
cmp
mov
in
xchg
fnstcw
mov
rcl
lcall
jp
mull
ss
arpl
in
or
inc
jle
inc
in
dec
cmp
mov
mov
insb
out
enter
setbe
mov
call
out
std
dec
mov
or
xchg
jle
dec
mov
cmp
call
popa
test
inc
pop
mov
popa
push
outsb
aaa
push
shlb
mov
xlat
dec
add
testl
mov
loopne
insl
jge
push
xchg
push
scas
lahf
xchg
enter
adc
nop
inc
add
cs
adc
and
and
add
dec
jne
call
bound
sbb
inc
adc
into
sub
movsb
stos
mov
pop
or
add
push
cld
xorb
leave
and
xchg
sub
inc
test
scas
cs
test
cmpb
fs
adcb
push
testl
in
int
loopne
adc
adc
data16
add
xchg
cmp
sar
or
push
push
dec
sbb
add
lret
into
arpl
shll
nop
mov
in
aam
mov
scas
adc
add
jmp
sbb
out
arpl
xchg
cs
push
loope
nop
addr16
and
pop
dec
mov
and
fadds
xchg
ret
mov
adc
mov
les
hlt
jno
add
lcall
addl
mov
shlb
inc
and
push
push
leave
jmp
ret
test
jno
add
dec
aas
mov
out
jne
jb
cmp
fdivrp
add
out
push
xchg
icebp
mov
mov
pop
inc
pop
ret
movsl
push
les
sbb
cmp
inc
repz
xorb
dec
daa
rcll
pop
xor
xchg
mov
fisubl
inc
cmp
mov
outsb
push
dec
xor
jg
sub
xor
push
movsb
add
pop
rorl
ror
jb
and
or
sub
stos
pop
cmp
test
call
mov
mov
repz
inc
push
in
dec
fst
and
mov
xor
frstor
jle
fwait
out
lock
fisubs
xchg
jp
cmp
repnz
out
rorl
jmp
add
fiadds
or
mov
mov
mov
andb
ret
cwtl
lahf
outsl
lahf
iret
rcrb
cmp
icebp
xchg
stos
sbb
leave
sbb
pop
call
mov
and
sub
in
shrb
outsl
pusha
das
sub
subb
adc
test
mov
iret
lods
ds
nop
into
mov
jmp
stos
push
andl
push
mov
fstpt
or
lret
ss
adcl
sbb
pop
xchg
inc
xchg
ret
fs
jmp
in
mov
jne
cltd
push
mov
dec
mov
and
inc
mov
sub
mov
inc
dec
mov
testb
cmp
pop
stos
movsl
xor
push
and
test
inc
lahf
inc
pop
mov
adc
pop
push
hlt
pop
ja
adc
mov
std
roll
out
xlat
orl
nop
jp
xchg
mov
fdivrp
inc
and
mov
adc
pop
rolb
negb
fxch
movsl
jns
ss
loop
pop
dec
addb
pop
jl
lods
and
mov
lods
repz
sti
scas
hlt
ficompl
movsl
iret
loopne
and
jl
cmp
fbld
mov
add
push
pushf
aad
jp
xchg
cwtl
xchg
mov
mov
negb
stos
gs
lret
int
add
cmpsl
bound
inc
xlat
xor
cmp
repz
popa
out
lret
test
aad
push
stos
mov
ficoml
vaddsubps
lret
incl
rorb
pushf
mov
add
sarl
jns
aas
adc
sbb
sub
and
data16
ss
pushf
push
jmp
sbb
add
sub
xchg
sbb
mov
aaa
pop
mov
sahf
scas
adc
or
pop
mov
or
jg
and
adc
xchg
dec
sub
or
sahf
fmuls
pop
loope
dec
xlat
pop
jecxz
xor
stos
scas
fstps
adc
mov
data16
imul
jo
push
pop
stc
mov
xchg
xchg
mov
imul
pop
jl
jmp
hlt
dec
adc
xor
gs
adc
imul
push
std
inc
rclb
data16
in
mov
jae
mov
xor
jbe
nop
lcall
mov
out
jge
addr16
or
out
dec
xchg
and
push
mov
cld
inc
mov
movsl
mov
adc
xor
iret
jb
cmc
je
adc
inc
add
push
push
jge
fstps
push
mov
xchg
jnp
pop
fs
repnz
mov
test
jns
scas
jb
push
mov
lar
push
jge
scas
movsb
add
inc
aas
ss
add
fidivrs
jecxz
insl
in
push
jb
mov
rcrb
je
insb
xor
or
mov
or
fs
xchg
mul
jno
ljmp
aaa
fs
pop
fisttpll
sbb
jp
pop
clc
mov
fwait
int3
xor
xchg
add
mov
sub
ljmp
or
and
ss
rcrb
mov
jp
dec
imul
sbb
jmp
loope
loop
or
add
push
xchg
test
jp
mov
rcrb
adc
xor
popf
xchg
cmp
mov
in
adc
imul
jns
gs
add
jecxz
xor
mov
cmp
add
mov
fdivp
ret
sti
mov
loopne
mov
add
daa
int3
leave
sti
pop
mov
repz
aad
fs
jge
sbb
in
mul
cmp
xchg
dec
xor
outsb
and
cltd
ljmp
jns
push
mov
cs
sub
gs
arpl
cmp
add
add
sub
jg
xchg
cli
or
fsubr
and
or
loopne
mov
or
xchg
add
xlat
mov
xchg
sub
fistpll
cmp
and
jae
inc
sbb
and
ret
ret
cmp
cmp
cmp
js
aam
add
mov
or
push
adc
jo
xor
in
sub
jp
cmp
sub
inc
jp
jb
in
cmc
daa
add
push
xchg
mov
int3
xor
push
xor
adc
mov
aad
outsl
jg
mov
sbb
icebp
or
inc
ljmp
xrelease
adc
push
or
inc
push
fsub
mov
sub
cwtl
data16
mov
cmp
mov
fs
inc
dec
xor
inc
xor
adc
call
in
jle
js
adc
dec
sub
aam
loopne
out
cwtl
push
insb
lea
and
pop
leave
or
sbb
cmpsl
cli
cld
sti
gs
and
ds
push
sahf
pop
cli
movsb
mov
cmp
mov
dec
cmp
jg
cs
sbb
pop
mov
pop
xorb
pop
mov
jg
xchg
data16
in
cmp
push
mov
test
stos
stos
mov
and
shll
inc
stc
add
xor
iret
or
add
sarl
lret
les
stc
cwtl
mov
addr16
or
cmc
js
aam
mov
fistpll
pop
xlat
repz
add
lods
inc
jae
dec
aas
push
sub
cmp
test
fistpll
inc
pop
cltd
gs
lcall
dec
push
or
add
movsb
xlat
pop
movsl
or
add
cmp
xchg
jbe
and
xchg
or
pop
cmpsb
outsl
push
dec
jo
or
pop
mov
add
sbb
sbb
mov
sbb
adc
pcmpeqb
in
idivl
in
ret
pop
lret
add
aas
jno
inc
dec
mov
int
xchg
leave
fucomp
mov
in
cltd
or
mov
cld
fidivrl
sbb
xor
mov
sub
inc
sahf
aam
aaa
jp
or
aaa
enter
or
jo
sub
icebp
inc
adc
cs
add
mov
stos
fldenv
out
cld
js
cltd
imul
dec
sti
les
sbb
aas
sarl
mov
out
scas
jmp
shll
push
inc
aad
xor
dec
iret
cmc
rcll
inc
inc
lea
dec
imul
aas
imulb
dec
mov
fwait
or
mov
and
xchg
inc
add
leave
leave
push
testl
xor
push
arpl
aam
stos
sbb
out
jl
out
loope
cmp
xor
push
addr16
push
jb
ret
popl
rorl
fimuls
pop
pop
adc
jb
enter
cmpsl
movsl
aam
lods
in
int3
adc
inc
xor
add
adc
sub
add
xchg
loope
movsl
bnd
xchg
ret
pop
loopne
push
in
icebp
or
scas
leave
int3
push
int
xor
out
xlat
xchg
stos
xor
dec
outsb
or
ds
lahf
cmp
pop
xchg
in
pop
mov
or
jno
aam
adc
lcall
pop
fcmovbe
dec
mov
test
imul
dec
cmp
jne
jne
xor
imul
inc
stos
or
aam
inc
scas
pop
mov
ja
icebp
sub
push
pop
sbb
cmpb
inc
decl
sub
out
test
mov
sbb
sbb
mov
sbb
jo
rorb
enter
push
cmc
out
lods
push
ja
fstps
jb
sahf
fwait
movsb
jecxz
jg
lods
adc
lods
cmp
and
out
cmp
pop
lock
sub
or
arpl
jg
lcall
cs
xchg
adc
pushf
fiadds
sbb
and
xchg
pop
addr16
enter
inc
cmp
rcl
roll
iret
mov
fs
fwait
sub
js
lock
pop
ficomps
fcmovnu
xchg
and
ret
test
iret
sbb
xchg
outsl
jnp
jo
dec
aas
inc
pop
ret
jo
dec
shl
add
ret
adc
int
xchg
daa
movsl
mov
lcall
cwtd
xor
sbb
arpl
jle
inc
out
daa
xchg
stos
cwtl
or
mov
xchg
jecxz
sti
loope
cmp
lock
inc
scas
inc
sbb
jnp
lret
cmp
pop
aad
inc
jmp
cmp
fdivrs
test
dec
movsb
in
or
mov
in
or
insl
fcmovnu
add
xchg
pop
mov
xchg
push
push
ret
pop
sbb
ret
pop
aaa
aad
jg
je
and
pushf
dec
push
aaa
movsl
imul
dec
pop
push
or
cvtps2pd
lahf
pushf
add
andb
imul
push
pop
dec
int3
clc
gs
inc
out
shr
xchg
imul
mov
inc
cmpsb
inc
dec
add
rorb
lret
movsl
jp
lods
mov
mov
int
or
fs
or
mov
push
ja
jo
push
test
hlt
cmp
inc
adc
adc
inc
inc
aad
sub
test
push
dec
xchg
aas
xchg
cmc
inc
pop
sbb
or
sbb
adc
xor
popf
or
pop
push
xlat
rcrb
mov
int3
js
cli
arpl
leave
jno
mov
or
xor
movsb
clc
sub
pop
lods
jno
setl
or
inc
stos
mov
movsl
out
cmp
ja
xchg
test
mov
xchg
frstor
xchg
fdivrs
mov
push
inc
add
ficoms
mov
popa
in
outsb
sbb
popa
pushf
mov
inc
stc
xor
popa
add
xchg
loope
aas
das
test
xchg
jmp
cli
dec
pop
mov
leave
sub
or
lods
int3
cmpsb
xchg
sti
loopne
or
mov
sub
scas
sub
pop
ljmp
pop
adc
xorl
rorb
dec
mov
sbb
shll
nop
jmp
sub
dec
sbb
jg
cmp
mov
fisttpll
mov
push
xchg
sbb
out
dec
scas
mov
aam
push
fcomp
sub
aas
out
fsts
and
insb
fbstp
insb
popa
mov
lcall
mov
int3
mov
scas
gs
fs
mov
js
mov
dec
adc
mov
outsl
in
out
fcomip
int
lock
inc
lds
loope
mov
in
push
adc
rcll
pop
in
outsb
test
pop
fmuls
loopne
or
in
shl
mov
int3
jns
int
inc
xchg
mov
mov
mov
xchg
add
dec
push
adc
bound
lcall
ret
add
ljmp
jl
pop
cli
jno
add
es
dec
movsl
lret
inc
nop
xchg
iret
pop
and
add
test
imul
inc
or
sub
mov
lret
add
xchg
addr16
das
aam
shll
stos
pop
rcrb
jmp
push
jne
sub
adc
xor
in
xchg
cmp
sbb
icebp
and
call
into
jecxz
push
cltd
shll
out
and
mov
imul
sub
aam
mov
and
mov
test
icebp
xor
aas
loope
xchg
mov
push
xchg
mov
cli
mov
mov
mov
mov
adc
sbb
in
rclb
enter
popa
pop
into
scas
cwtl
cmp
pop
jb
mov
clc
xchg
aas
xchg
mov
daa
jns
pop
shll
clc
imul
cmp
addr16
icebp
sbb
repnz
cmpsl
pop
push
cmpb
ds
push
inc
xor
sar
jl
dec
in
adc
out
je
mov
mov
adc
xor
and
bts
mov
mov
fsubr
push
aam
jne
jecxz
mov
lock
ret
pop
ja
mov
push
jg
mov
scas
lahf
bound
mov
scas
jge
jecxz
nopl
add
cli
bound
out
and
addl
enter
loop
and
fs
push
or
push
xchg
std
push
jno
out
adc
xchg
mov
repnz
adc
lahf
sub
nop
addr16
scas
enter
push
mov
or
dec
out
xchg
push
xor
push
arpl
movb
or
mov
cs
mov
lret
xchg
dec
pop
sbb
push
pushf
stos
sbb
xchg
outsl
jge
fisubl
aam
cmc
xchg
mov
imul
addl
mov
mov
mov
dec
jg
cmp
inc
insl
dec
jb
jg
orl
inc
movsb
call
sub
push
in
mov
or
or
fmuls
rorl
fildll
test
inc
mov
cmp
jmp
sbb
and
jge
push
or
scas
loope
and
mov
movsl
xor
hlt
jmp
mov
pop
sub
jp
push
push
mov
dec
xor
cmc
in
scas
repz
mov
loop
adc
cmp
inc
jae
bound
adc
xchg
rcrb
sbb
sub
shrl
pop
in
cmp
mov
pop
in
sub
fnstenv
inc
push
xor
dec
insb
mov
jbe
sahf
mov
jnp
imul
mov
popl
outsb
jl
stos
push
movsl
arpl
in
repnz
call
std
or
fldln2
imul
xchg
adc
outsb
mov
out
cld
dec
je
sub
mov
inc
or
lds
inc
or
mov
cmp
loope
push
and
push
add
lea
inc
std
aam
pop
lds
cmp
imul
imul
popa
ss
stc
dec
and
fwait
aam
shlb
sub
stc
ret
cltd
add
pusha
dec
mov
cltd
hlt
call
mov
push
adc
js
out
and
xor
rclb
loope
movsb
jno
ret
leave
inc
fisubrl
sub
and
jo
sbb
outsb
leave
inc
cmp
fcomps
call
cmp
mov
mov
dec
mov
lea
lret
nop
xchg
mov
sub
jg
jg
sar
jae
test
push
les
je
or
insb
in
pop
xchg
cli
movb
push
adc
jb
repnz
jmp
jmp
push
push
lahf
arpl
icebp
cmc
aas
jecxz
scas
cs
jnp
orb
scas
cmp
xlat
mov
sahf
push
jnp
int
imull
aad
xchg
fmuls
sub
out
dec
dec
insb
aad
sub
mov
aaa
or
pop
out
int3
sbb
inc
fnstenv
movsb
jge
cmpsb
scas
jo
dec
mov
rcl
adc
ds
mov
adc
or
flds
push
xchg
xchg
sub
xchg
mov
gs
jmp
sub
movsl
cmova
les
rcl
and
xor
pop
xchg
xor
fildl
mov
lods
add
ret
clc
mov
test
inc
fldl
mov
push
push
scas
inc
repz
lds
cwtl
or
sub
insl
mov
fs
je
data16
out
rol
pop
pusha
subl
ljmp
mov
loope
daa
inc
pop
lods
dec
repz
gs
rcll
ret
pop
scas
mov
mov
test
fildl
ljmp
popa
adc
leave
pop
mov
dec
dec
cmp
adc
sub
jmp
scas
xlat
int
repz
mov
mov
movsl
ss
or
dec
xchg
lock
loop
or
fildll
mov
mov
sbb
stos
jbe
nop
sub
jp
add
sbb
pop
sbb
and
jnp
push
ret
and
mov
sbb
pop
lea
mov
mov
mov
and
je
repnz
rorl
push
jp
mov
xor
sbb
in
lea
fucomp
dec
loop
rcll
xchg
or
jge
sub
push
shlb
lret
pop
push
dec
jecxz
mov
xchg
and
repnz
in
push
and
mov
and
pusha
push
pop
cmp
add
inc
jecxz
loope
shll
mov
mov
cmc
es
pop
aaa
mov
push
shlb
xchg
add
leave
push
dec
lods
xchg
mov
ja
es
fucomip
mov
mov
cmp
inc
adcl
ret
dec
scas
rcrb
pop
dec
fwait
pushf
jl
fstpt
inc
xchg
and
push
cltd
cld
push
or
testb
fists
popf
push
cld
popl
aam
and
fisttpll
mov
mov
or
pop
xchg
inc
lahf
stc
xchg
adc
add
mov
adc
daa
je
pop
jmp
test
sub
push
adc
mov
ret
seto
sub
sbb
pusha
pop
mov
nop
xchg
sub
fs
cmp
mov
mov
mov
out
jno
push
dec
and
push
inc
insb
adc
xchg
mov
inc
loop
xor
jecxz
jmp
jle
sub
dec
decb
sbbl
jp
cltd
imul
pop
add
jecxz
or
push
pop
test
jg
mov
hlt
js
mov
fcoms
xchg
inc
out
in
xor
jl
or
add
stos
out
stos
xchg
cmp
jns
push
outsb
daa
aaa
and
mov
scas
push
sub
es
addl
mov
lea
sbb
or
mov
mov
sbb
add
fisttps
pop
inc
test
jb
dec
lahf
adc
iret
lock
shlb
ja
aam
lds
push
enter
jl
mov
lahf
test
jbe
lods
ror
clc
mov
mov
dec
in
mov
movsb
xchg
jb
lret
repz
pop
scas
sub
sbb
and
xor
das
cmp
int
repnz
mov
inc
arpl
int
ss
add
mov
daa
into
adc
mov
movsb
fistpl
mov
lret
in
loope
pop
adc
hlt
cmp
dec
xor
sbb
xchg
imul
insl
ljmp
xor
mov
xor
adc
sub
pop
test
jne
lret
rcll
sbb
jge
pop
lods
int3
icebp
bound
sbb
loopne
add
faddp
je
adc
mov
xor
xchg
js
sbb
mov
arpl
xchg
mov
mov
ds
lods
xchg
icebp
jne
dec
jmp
xchg
pop
xchg
lret
filds
push
mov
addl
and
xchg
incl
out
xchg
dec
lods
repz
dec
outsl
mov
mov
sub
cmp
insl
mov
inc
not
mov
adc
and
jg
cwtl
add
xchg
inc
sub
test
mov
jae
mov
and
and
cld
dec
dec
xlat
iret
leave
in
add
ret
dec
ftst
add
dec
gs
lock
mov
in
repnz
cld
mov
sahf
mov
dec
push
mov
lahf
js
arpl
jle
sbb
push
dec
add
addr16
or
xor
push
stos
cmpl
clc
push
xor
push
xchg
adc
push
mov
sub
xchg
dec
hlt
repz
fsts
push
xor
mov
jno
mov
imul
arpl
inc
mov
inc
sbb
ds
outsl
mov
iret
mov
or
outsl
xor
jle
xchg
xchg
or
pop
pop
and
nop
clc
mov
loope
aad
mov
inc
ljmp
cmp
mov
cld
jle
jecxz
nop
mov
es
sbb
and
outsb
mov
mov
and
stos
adc
cwtl
imul
xchg
push
mov
dec
sbb
inc
dec
or
lods
dec
mov
jae
call
xchg
push
or
and
mov
push
xchg
hlt
xchg
jecxz
push
lock
dec
jle
jne
and
adc
inc
add
orb
mov
push
in
lds
add
push
mov
dec
sarb
push
push
jno
fldt
dec
dec
pushf
pop
lea
je
lea
mov
fcomp
lcall
sub
mov
mov
in
in
test
and
pop
test
rol
dec
add
jae
adc
jmp
cmp
mov
scas
sahf
aas
cmp
push
adc
pop
inc
mov
sti
cmp
loopne
adc
cmpsl
mov
and
imul
push
in
shlb
mov
in
out
cmp
mov
imul
xor
mov
out
push
daa
and
hlt
inc
add
and
div
mov
sub
jbe
adc
je
div
int3
pop
adc
jg
mov
jecxz
push
out
dec
mov
sub
lock
mov
add
push
jecxz
shll
mov
mov
lret
sbb
pop
cmp
mov
dec
and
push
mov
push
out
cmp
cli
and
loope
pushf
push
dec
insl
adc
in
leave
push
push
loopne
popa
iret
cmp
mov
fucomip
pop
sub
jge
fsts
cmp
lods
iret
dec
and
sub
and
pop
imul
stos
add
out
icebp
int
fsubs
mov
and
push
mov
das
iret
xor
push
movl
mov
sub
shll
imul
xchg
hlt
mov
sbb
rorb
sbb
jecxz
imul
int3
addr16
outsb
mov
or
cmp
inc
fdivs
mov
loopne
or
inc
ss
pushf
sti
and
pop
fldl
loop
push
lock
pop
insb
mov
popa
out
repnz
add
clc
in
push
shrl
lret
mov
jns
adc
insb
fdivl
in
in
jnp
outsl
sbb
les
push
jne
jmp
nop
and
fisubrl
mov
sub
push
scas
test
jns
in
lock
scas
pop
or
xor
inc
cmp
jg
rcl
enter
pop
ret
dec
inc
sbb
sub
xor
push
xchg
in
jno
in
cmp
cwtl
test
pop
dec
jb
cli
mov
adc
cltd
jo
jle
mov
jno
mov
add
push
lods
addl
lea
cmp
mov
xchg
sbb
inc
xchg
outsb
or
fmull
mov
test
mov
xor
or
mov
and
add
fdiv
push
xor
out
lds
int
or
stos
cmpsl
cmpsb
dec
xchg
add
dec
imul
jecxz
lahf
pop
or
gs
xchg
and
mov
cmp
adc
mov
jmp
pop
or
addr16
fidivs
mov
mov
into
jno
pusha
fcoml
scas
sbb
sarb
pop
xchg
sbb
nop
ret
int
mov
sub
scas
imulb
cld
int
imul
leave
addr16
mov
add
sahf
or
adc
xchg
dec
mov
ret
cmp
ljmp
xchg
and
cmp
sahf
dec
xchg
jnp
lds
xor
sti
insb
mov
roll
cmpsb
cmc
jg
dec
dec
mov
sub
jge
inc
cmpsl
dec
in
into
push
and
ficomps
jg,pn
pop
fadds
jg
cmc
jge
dec
cmp
scas
or
push
cmp
arpl
pop
cmp
leave
daa
jae
cli
fs
fsts
mov
cmp
jo
jbe
das
adc
push
test
enter
xlat
cld
out
push
cmpsl
cmpsl
imul
mov
jmp
in
in
adcl
or
mov
fisubl
push
jno
add
fs
test
pop
xor
test
jnp
divl
sbb
inc
dec
fcmove
jmp
ret
lods
fnstenv
mov
sets
jg
cli
cmp
cmpsl
pop
push
aad
fiadds
and
out
in
popa
fucom
aad
jge
mov
push
fnstsw
test
testl
inc
shl
xor
jns
dec
ret
in
inc
es
push
jecxz
mov
push
xor
imull
popa
iret
sahf
jle
push
add
dec
mov
jle
mov
add
push
bound
xor
mov
cmp
popf
mov
xor
pop
mov
int
leave
adc
cmpsl
hlt
repz
bound
aaa
iret
sub
scas
push
push
adc
jle
jle
mov
push
inc
lret
pop
sub
idivl
xlat
adcl
dec
xlat
mov
sub
sti
pop
jno
mov
shll
in
popf
sti
pop
cwtl
dec
xlat
imul
cmp
movsb
or
std
rclb
fcoms
ret
xor
ljmp
xchg
cli
out
pop
mov
push
imul
pop
in
cmpsb
cmp
ret
daa
push
dec
or
mov
jge
insl
or
jmp
push
sub
add
dec
adcb
mov
lods
pop
sub
add
push
xchg
push
xchg
sub
scas
out
pmaddwd
shlb
cmp
add
scas
cltd
insb
xchg
call
nop
sub
cmp
in
sbb
jae
insb
push
pop
xchg
push
js,pn
int3
pop
pop
mov
jno
push
dec
sti
cmp
inc
lret
lods
mov
imul
in
inc
insl
mov
pusha
xchg
sub
jne
jno
cmp
das
pushf
std
pop
jb
push
mov
insl
leave
mov
aam
fs
cltd
test
xchg
cmpsb
inc
mov
stos
gs
jae
into
push
jbe
movsl
hlt
sahf
in
pop
sbb
cld
xchg
push
lods
dec
insb
xchg
sbb
sbb
xchg
pop
add
xor
cltd
mov
pop
shll
mov
or
jmp
cwtl
sahf
add
fdiv
addr16
insl
insb
mov
es
pop
mov
lods
stc
imul
mov
lcall
je
inc
xor
insl
orl
jecxz
jae
repz
js
mulb
sub
add
inc
or
xchg
xchg
cmp
mov
mov
add
sti
sub
sbb
mov
jo
inc
jae
out
ja
mov
add
pop
add
jmp
mov
aas
cli
loop
rcrb
stos
fistpll
jae
sbb
imul
xchg
es
fstpt
sbb
add
and
sbb
sbb
int3
std
insb
sbb
ficoml
mov
lcall
mov
pushf
mov
ds
mov
cmp
pop
in
pop
inc
enter
loope
stos
fisttpll
mov
mov
mov
xor
lret
jg
mov
rcrl
ljmp
mov
push
jecxz
xchg
xchg
mov
icebp
cmp
fidivl
and
mov
loopne
mov
popf
mov
add
mov
mov
sti
push
adc
sub
cmp
les
inc
cs
and
shrb
inc
push
dec
pop
pushf
sub
fcmovb
mov
push
push
outsb
xchg
mov
xchg
out
cmp
in
loope
mov
lahf
xchg
mov
inc
xor
mov
push
add
mov
push
fidivl
push
adc
pop
subl
xchg
filds
shll
mov
lods
cmp
bound
or
pop
lds
cld
inc
cs
jmp
xchg
popa
ja
insb
add
cmpsl
or
push
out
es
adc
inc
stos
nop
clc
adc
pusha
mov
and
pusha
xor
xor
mov
adc
jo,pt
and
sub
inc
sbb
mov
jae
lds
add
out
mov
mov
imul
lock
xchg
and
jae
fnstenv
add
clc
leave
inc
push
and
mov
push
jne
jnp
or
loope
xor
icebp
dec
ja
cmp
dec
test
xorl
mov
aad
pop
das
fcomps
mov
adc
mov
or
pusha
add
sbb
lock
aas
jecxz
jo
push
movsb
mov
jb
push
jne
xchg
imul
jnp
mov
add
out
ss
dec
repnz
mov
sub
arpl
jp
fildll
dec
sahf
pop
cwtl
or
mov
pop
pop
fsts
xlat
add
sub
inc
add
lods
dec
and
js
and
and
xlat
and
jp
sar
pop
aaa
or
ror
mov
out
fcoml
cmpsb
xorl
jg
sbb
mov
lea
inc
push
aam
jg
lock
sub
mov
popa
ss
fmuls
loopne
test
add
cmpsb
or
sarb
das
lea
into
dec
sbb
out
xchg
pop
sti
out
adc
mov
pop
inc
and
add
popf
xchg
mov
shr
xchg
inc
mul
int3
stc
cmp
dec
or
stc
dec
mov
sbb
ljmp
push
jle
fwait
adc
js
push
loopne
jl
cmp
mov
out
fmuls
sub
sahf
mov
push
cld
fisubs
mov
mov
adc
mov
push
adc
adc
adc
in
push
add
push
daa
jecxz
pop
js
and
fwait
sbb
add
lret
cld
stos
ret
ja
inc
cli
and
cmpsb
ljmp
and
xchg
jnp
lret
or
add
sti
movsl
jns
inc
int3
test
adc
fnstenv
adc
outsl
and
cmp
lods
ljmp
mov
cmpsb
adc
das
mov
or
cmp
or
adc
test
mov
sahf
and
cmpsl
repnz
pop
dec
or
insb
mov
nop
jg
jmp
xor
push
cld
mov
arpl
ror
jno
xor
xor
pop
fdiv
push
push
mov
mov
cmp
lods
mov
cli
inc
mov
fwait
jb
jno
cmpsb
sbbb
jmp
cmc
test
push
fistpll
sbb
mov
adc
sbb
pop
and
in
fimuls
ljmp
lret
jo
xor
lods
mov
jnp
ss
jge
and
bound
push
fsubrl
fwait
mov
lret
adc
lods
je
mov
adc
mov
aad
sbb
sub
mov
addr16
jo
fwait
sub
mov
in
and
fdivl
jle
lods
jg
push
fdivrl
adc
rcrb
in
and
cwtl
loope
pop
cmp
xor
push
jno
mov
push
clc
aam
repnz
pop
fbld
lea
into
addr16
ret
imul
jge
mov
add
hlt
outsl
cmp
cmpsl
and
idivb
shl
push
lret
and
mov
xchg
setno
into
mov
or
jmp
stc
cmp
dec
mull
add
add
jecxz
xchg
lcall
out
inc
or
push
mov
lcall
mov
mov
or
xchg
and
popa
sub
push
lea
bound
rcrl
in
and
out
in
cmp
movb
mov
lds
testb
pop
mov
or
sub
loopne
int
push
jge
and
popa
ds
push
or
push
mov
lods
cmp
dec
sbb
cmc
stos
mov
push
mov
mov
out
fstpt
mov
inc
popf
inc
popf
test
in
lahf
dec
cmpsl
in
ljmp
jnp
cmp
cwtl
or
lcall
imul
out
mov
insl
jne
sub
cmc
inc
repz
ficoml
aam
mov
push
subl
hlt
mov
and
cltd
popa
adc
out
mov
fwait
dec
insl
sub
imull
aaa
mov
inc
sub
and
in
loopne
mov
dec
pop
insb
xchg
xorb
add
or
cmpsb
test
addr16
mov
sbb
cmp
popf
push
adc
jnp
xchg
mov
sbb
push
pop
lods
in
addb
pop
mov
and
add
push
mov
call
jecxz
das
ja
cmpsl
scas
movsb
je
add
or
pushf
gs
addr16
dec
jo
mov
in
mov
fnsave
pushf
cmp
push
pop
repz
mov
rcrl
insb
outsl
out
adc
loope
out
sbb
add
sub
mov
sti
shrb
loop
xchg
push
adc
jl
xchg
mov
gs
cmp
jmp
xchg
ss
aas
pop
negl
fldenv
push
insl
or
sub
scas
mov
cmp
lcall
ret
or
es
cmp
test
add
pop
cld
jg
mov
movsl
jecxz
lea
dec
dec
xor
sti
sub
aam
ljmp
icebp
out
and
dec
and
jb
into
mov
jb
bound
hlt
xchg
mov
pop
roll
insl
or
lods
pop
shll
fsubrl
dec
and
rcl
gs
dec
popa
jecxz
shrb
adc
mov
fs
sub
scas
outsb
movsb
pop
cmp
shl
sarb
js
jge
ds
push
sub
and
mov
add
jns
inc
cmp
and
out
jbe
push
sbb
jo
test
dec
leave
cmp
dec
jo
cmpsb
in
das
scas
mov
jb
pop
sub
xchg
mov
fsubl
sub
xchg
aam
inc
cmp
inc
mov
mov
jle
mov
insb
xchg
out
movsb
lock
mov
and
jge
adc
pop
xor
enter
xchg
mov
or
mov
xlat
sti
or
add
gs
dec
nop
mov
aaa
xchg
mov
and
mov
inc
push
mov
data16
adc
xchg
stos
orl
add
scas
and
hlt
scas
inc
aas
cli
sbb
push
cmp
outsb
popf
mov
int3
into
and
push
inc
pusha
sub
cmc
mov
xchg
mov
sub
or
sub
je
sbb
das
jmp
mov
inc
adc
aam
mov
stos
inc
jne
cmp
scas
jns
out
jecxz
and
mov
nop
and
lcall
cmp
jnp
sub
jns
popf
mov
jp
mov
ss
out
mov
mov
push
pop
adc
aaa
sub
ret
sti
enter
mov
and
xor
sbb
mov
mov
jmp
mov
les
add
popa
dec
iret
mov
iret
shlb
cs
add
jmp
sbb
xchg
adc
jb
push
shrl
xor
lea
inc
inc
pop
aad
lea
dec
push
loope
jb
add
dec
imul
lahf
dec
lcall
mov
mov
mov
das
int3
inc
mov
cmp
test
mov
mov
insl
data16
aas
jmp
jecxz
pushf
jmp
sbb
xor
pop
addl
lock
mov
push
rcrl
sub
dec
sahf
test
mov
sbb
mov
push
into
imul
popf
cmp
or
xor
dec
shrb
mov
adc
sub
mov
int3
in
adc
out
sub
pop
scas
xchg
xor
adc
xor
cmovae
lods
jbe
sub
mov
sub
dec
ss
popa
aam
js
movsl
or
lods
ds
mov
cwtl
arpl
ret
mov
ret
clc
cmp
je
and
dec
dec
mov
push
bound
cmp
shll
out
xchg
gs
scas
mov
mov
fdivrp
int3
in
dec
adc
mov
pop
lods
test
ret
jecxz
xchg
das
cld
rcrl
xchg
push
shlb
fildl
js
mov
je
mov
lods
cmp
push
shr
jp
sbb
clc
adc
push
push
gs
insl
jbe
jle
mov
mov
fildll
sub
movsl
pop
cmpsl
mov
popl
arpl
sbb
cmp
ds
dec
repz
lcall
jnp
test
adc
xchg
fsts
inc
test
jne
mov
ljmp
aam
jg
in
xor
xchg
pop
fwait
enter
add
mov
and
xor
push
mov
inc
pop
loopne
fcomps
xor
scas
aas
mov
andl
insb
fcmovne
je
test
seto
jle
outsl
lcall
inc
pop
scas
sub
rcl
add
sub
mov
mov
flds
std
push
push
jb
or
push
mov
cmp
push
das
and
mov
std
push
shrb
mov
sbb
loop
mov
cmp
jp
cmpsl
cmp
sbb
les
push
ret
push
addr16
dec
mov
cmc
movsb
push
cwtl
mov
in
dec
push
in
cmp
push
pop
shlb
movsl
insb
rol
cmp
xchg
ljmp
or
shrl
mov
mov
je
loopne
mov
fisttps
jno
insl
inc
aaa
pop
stos
push
mov
mov
dec
dec
test
imul
lret
ror
ds
rcll
cmp
mov
mov
repnz
sub
jb
jecxz
mov
mov
jb
sub
les
out
cmp
fcompl
jmp
je
add
mov
mov
sub
add
jno
sub
scas
jb
lahf
test
mov
not
daa
std
ret
add
xor
pop
jmp
cmp
inc
rorw
adc
xor
add
imul
add
inc
cmc
in
aaa
sbb
lret
shll
arpl
scas
mov
ss
push
ja
add
cmp
pop
jecxz
xlat
jp
movsl
pop
ljmp
out
xchg
mov
in
dec
ljmp
lock
mov
pop
pusha
cmp
dec
shl
stos
movsl
push
out
pusha
mov
push
jbe
inc
dec
fstpt
shl
inc
adc
sub
jle
popf
or
push
loope
and
xor
pop
cmp
xor
push
je
and
jecxz
pop
sbb
push
push
pop
sbb
lods
movsl
mov
xchg
fbstp
je
iret
cmpsl
ret
jp
dec
mov
lods
add
push
div
roll
cmp
push
push
add
push
cmpb
dec
imul
mov
or
aad
dec
fistpll
cmp
mov
stos
test
das
cs
fists
jae
or
ret
cli
push
sbb
xlat
mov
push
adc
push
mov
shlb
call
cli
call
mov
sbb
popf
xlat
bound
jg
mov
jmp
fimuls
add
or
repnz
or
xchg
pop
mov
jns
mov
xchg
and
mov
inc
sub
adc
movb
cs
mov
sub
and
divb
sub
in
lret
pop
cmp
xchg
inc
repnz
out
jno
xor
and
and
pop
and
xchg
cmp
sbb
cld
add
add
lods
fcomps
aad
clc
int
jmp
jg
jg
push
mov
xchg
and
jecxz
icebp
and
insl
xchg
sub
sbb
inc
pop
cli
mov
sub
or
int3
pop
repnz
mov
es
pop
jg
mov
pusha
cmovnp
cs
ficompl
mov
push
shrl
inc
jp
cli
ss
cs
jne
xchg
test
xchg
jnp
inc
jecxz
sti
cmp
popa
cltd
cwtl
sbb
pop
mov
insl
xor
mov
adc
mov
jne
aam
sub
or
testb
mov
or
notl
mov
xchg
push
jp
ja
push
outsb
inc
xor
fldl
mov
outsl
insl
inc
stc
adc
ja
or
mov
cmp
add
push
lcall
pop
rcll
xchg
mov
jns
clc
es
jae
stc
mov
adc
or
cs
lret
fwait
jg
and
pop
jp
ficomps
mov
and
jmp
in
fwait
imul
movsb
or
inc
enter
shrb
out
pop
mov
loopne
addb
adc
cmp
shrl
ss
mov
bound
pushf
xchg
mov
sbb
inc
cmc
loope
mov
adc
dec
fisttpl
out
push
and
jno
rcrb
rcrb
das
repz
aas
ds
adc
push
jg
pop
pop
mov
enter
sub
aam
pusha
mov
push
repnz
dec
push
pop
sub
or
scas
cmp
lea
xorl
mov
test
sub
xchg
mov
lahf
mov
dec
orl
shll
xchg
inc
std
imul
pop
push
movb
adc
aam
mov
lock
test
or
push
mov
clc
stos
mov
pop
adc
jno
add
xchg
mov
hlt
or
cmpsb
out
jnp
in
mov
rclb
adc
xor
xchg
pop
mov
sub
inc
jecxz
into
inc
imul
sub
fisttpll
push
jno
xchg
pushf
aam
or
jbe
sti
mov
dec
loopne
out
dec
add
das
scas
xchg
fld
mov
lods
sbb
push
jecxz
push
xchg
iret
xor
xchg
pop
sub
xor
cmp
sub
mov
repz
cmpsl
orb
pushf
lret
rorl
mov
pop
inc
es
sbb
stos
inc
shll
jo
xlat
pop
mov
pop
mov
fwait
imul
jbe
out
or
cmpsl
aaa
sbb
incl
xlat
mov
cmc
mov
xchg
dec
inc
jnp
pop
sahf
and
xchg
outsb
ds
xchg
imul
aad
mul
mov
jbe
xor
dec
iret
lock
and
addr16
cmpsl
gs
ljmp
iret
dec
loope
jl
cmp
rclb
insb
and
and
mov
or
orl
rorb
and
scas
ds
fsubp
out
mov
subb
jno
push
or
dec
xchg
push
jle
and
enter
sub
bound
mov
mov
sub
iret
insb
ljmp
cmc
adc
cld
jnp
daa
xchg
xchg
ret
push
cmp
mov
add
jo
in
push
insl
movsl
xchg
jge
aad
dec
mov
std
fwait
sbb
stos
sbb
xor
or
add
push
pop
inc
jo
add
sbb
fdivl
mov
gs
mov
cld
lret
mov
push
mov
push
mov
xor
cmp
int3
xchg
xchg
jnp
jnp
dec
sbb
fisubrl
jp
push
push
pusha
mov
mov
mov
xor
rcll
ret
mov
or
adc
xor
int3
or
mov
push
lcall
sbb
addr16
sub
jbe
dec
or
jg
inc
fnstenv
dec
xor
aam
pushf
fisubrl
pop
and
repnz
cmp
jnp
jae
sbb
xor
mov
mov
notb
sbb
adc
lods
ret
pop
xor
xor
int3
jne
mov
andb
add
addr16
cli
movsl
dec
xchg
mov
ja
or
push
ret
rcll
mov
in
outsb
popa
andb
push
inc
dec
mov
mov
push
into
popf
dec
and
lds
bound
inc
out
xabort
hlt
push
lea
ret
shll
push
jmp
cmp
jge
aaa
test
int
push
jl
push
xchg
ja
fstpl
ret
or
xor
add
cli
insb
dec
pop
or
jmp
sti
mov
sub
add
jge
rclb
cld
pop
rcr
fsubs
in
pop
fsub
mov
lock
mov
repnz
ret
bnd
fimull
cmp
imul
cmpl
or
cmp
mov
aad
jno
fcmovnbe
xchg
insl
nop
cmp
test
out
mov
das
and
inc
fmul
fwait
fs
popf
gs
adc
jbe
mov
mov
in
sahf
adc
cmp
or
push
and
mov
aad
aad
or
jmp
cmpsl
fmull
stos
xor
lcall
mov
sub
cmp
addr16
or
test
push
mov
adc
xor
dec
mov
mov
mov
and
inc
cmpl
fldt
call
sbb
xor
enter
ja
add
cld
scas
js
pop
add
jbe
loop
or
inc
xchg
iret
add
out
or
xchg
and
int3
mov
scas
xchg
or
fdivp
mov
icebp
ja
mov
sub
out
xchg
sbb
scas
mov
sbb
push
cmp
push
addr16
popf
dec
pop
rol
sub
cmp
pop
sub
sbb
adc
int3
les
dec
test
inc
sbbl
aaa
int
push
sbb
adc
cmp
and
pusha
in
cs
test
pop
lock
stos
sub
jmp
mov
add
jle
push
or
and
dec
into
scas
outsb
out
add
push
dec
cmp
dec
mov
adc
in
jecxz
incb
sbb
add
add
dec
int3
xchg
inc
in
fistpl
mov
imul
cmp
daa
je
sbb
and
pop
rorl
aad
sub
and
mov
ljmp
lret
mov
lret
cmpsl
pop
icebp
jmp
in
scas
rolb
sub
cmp
imul
jmp
stc
fildl
or
push
pop
nop
nop
stos
shll
and
dec
and
sbb
dec
add
jge
leave
adcb
mov
clc
mov
sub
lret
sbb
iret
push
dec
lods
xlat
add
dec
enter
cmp
cmc
sub
in
add
mov
xchg
jmp
push
and
out
bound
xchg
push
jge
sbb
mov
xchg
xor
lods
jecxz
jl
adc
daa
btr
adc
pushf
mov
in
mov
adc
adc
xor
test
lret
fwait
roll
mov
mov
rclb
lods
loope
enter
shr
or
lret
mov
cmpsb
dec
and
inc
cmpsl
ja
imul
push
cmp
sbb
bound
jns
cmp
mov
ret
jle
cmp
nop
dec
mov
popf
mov
pop
addl
pop
and
or
outsl
jmp
push
and
fdivr
pop
fidivl
aad
mov
fadds
sbb
test
fdivr
adc
mov
jp
pop
dec
rolb
rep
dec
push
jl
rol
lahf
jae
mov
xor
aad
pop
sahf
mov
lret
and
push
adc
push
jle
adc
insl
dec
pop
mov
adc
lahf
xchg
push
adc
inc
notb
jb
and
insl
lret
cwtl
mov
add
mov
out
sbb
xchg
loope
sbb
int
cmp
popa
mov
push
scas
or
inc
xchg
jbe
popf
adc
das
xchg
pop
fistpl
repz
les
lods
xor
mov
gs
pop
mov
in
out
jge
js
dec
jp
cmp
sti
mov
push
cli
jle
lods
movsl
or
jae
inc
hlt
cmovge
push
test
popf
std
push
std
fistps
jge
fsubrp
push
faddl
test
xchg
sub
orb
sarb
inc
int3
leave
cmp
insl
add
jge
lret
push
mov
lret
pop
xchg
or
mov
imul
cmp
mov
mov
inc
lock
xlat
add
enter
les
mov
mov
icebp
jae
dec
xchg
and
inc
sahf
fisttpl
sub
test
adc
adc
and
jle
mov
push
lds
mov
fsubl
jecxz
loopne
lret
cmpsb
mov
test
xchg
loope
or
mov
incl
and
shr
ss
mov
push
mov
push
ret
push
repnz
stc
sbbb
cld
ljmp
lods
cli
call
jle
lret
jp
mov
cmp
leave
lock
sub
aam
jno
and
sbb
nop
mov
test
loope
dec
mov
insb
test
leave
cmpsl
int
stc
push
sahf
mov
rcll
in
push
xor
adc
shrl
and
mov
inc
orb
gs
lea
movsl
orl
ss
jge
dec
or
int3
aaa
test
gs
xor
dec
cld
out
lret
out
movsb
pop
stos
xchg
stos
repnz
ljmp
and
inc
test
push
pushf
mov
sbb
rcrb
pop
insl
pop
fs
mov
gs
mov
hlt
sub
mov
test
push
cmpsl
sbb
jo
dec
outsb
jg
mov
lods
nopl
jge
rorb
mov
and
data16
movsl
orb
pop
movsl
test
dec
adc
scas
out
cld
xor
sti
pop
and
mov
pop
pushf
sti
rorl
ret
xchg
push
xchg
sub
scas
dec
cwtl
subb
aam
subl
push
ret
mov
mov
sahf
int
ds
mov
hlt
push
rclb
repnz
dec
scas
icebp
pop
jno
add
mov
sub
cmc
negb
mov
cmp
ja
jp
mov
cmp
mov
in
add
xor
and
out
into
mov
adc
fs
imul
je
add
xchg
pop
add
das
push
iret
aad
leave
push
adc
insb
js
test
icebp
inc
and
push
inc
out
sahf
sub
add
push
pop
inc
push
js
es
or
add
loope
fisttpl
cmc
push
lock
mov
xchg
aas
pusha
ret
shll
js
push
nop
adc
and
out
jecxz
jg
loopne
hlt
arpl
xor
daa
aaa
push
sbb
repnz
cs
dec
xchg
daa
mov
aad
cli
xor
std
adc
pop
push
cli
int
push
testb
jnp
hlt
ffree
push
push
and
sub
into
mov
add
clc
lret
or
ja
enter
pop
mov
jbe
mov
call
pop
enter
in
popa
sbb
flds
pop
pop
lret
and
mov
xchg
sub
daa
pop
movsl
jg
lods
ljmp
jp
outsb
and
jns
mov
jne
xor
sub
addb
rorl
inc
cmp
enter
pop
and
out
and
jae
in
xor
aam
dec
xor
mov
aam
idivl
and
mov
outsl
inc
out
mov
or
daa
test
fwait
xchg
push
roll
xchg
push
dec
addr16
lret
sbb
xor
jecxz
pop
xorb
inc
inc
xor
jmp
xor
cmp
clc
dec
inc
enter
dec
ret
lahf
add
loop
push
xchg
int3
scas
adc
dec
iret
test
std
inc
rcr
pop
repz
pop
cmp
mov
add
test
cmp
das
fcmovnbe
or
imul
je
enter
sbb
roll
or
fwait
mov
mov
mov
div
jnp
fcmovnu
lcall
xchg
jle
mov
subl
js
mov
out
sbb
fwait
ds
test
jne
pop
fidivs
movsl
cli
pop
xor
xchg
cmp
cld
into
or
inc
dec
repz
shll
ret
push
insl
xor
rcll
dec
push
loope
mov
test
sub
xchg
shll
mov
jg
push
adc
cmp
mov
inc
in
pusha
cmp
xor
lods
xlat
adc
or
jnp
popa
pop
lcall
out
jns
stc
jge
add
mov
test
xor
pop
inc
cwtl
inc
inc
adc
mov
xor
jnp
popa
lods
inc
mov
cmp
aas
pop
out
add
mov
xlat
jo
adc
sbb
das
je
in
cmpsb
sub
jecxz
add
outsl
lret
outsl
sub
cld
aas
jno
sbb
cld
aad
adcl
xor
out
popf
mov
sti
jno
loop
mov
pop
pop
mov
and
rclb
push
ret
adc
sbb
xlat
mov
pop
ret
jae
jne
mov
in
xchg
cmpsl
fimuls
sub
mov
test
test
jmp
iret
jg
aad
jb
stos
push
cmp
out
push
lock
in
pusha
daa
sbb
mov
cmpsl
pop
fadd
jmp
cltd
inc
outsb
out
mov
jmp
outsb
lea
and
mov
inc
das
mov
mov
call
lods
pop
nop
cld
push
js
push
mov
js
cmp
and
nop
dec
or
call
and
ror
bound
faddl
clc
cmpsl
js
sbb
inc
in
mov
cmc
push
mov
hlt
cmp
aaa
sbb
mov
fidivl
lahf
ffree
pop
repnz
cli
shrb
aad
repz
jle
xor
push
xchg
sahf
mov
divb
jp
inc
loop
jmp
push
pop
lcall
lds
pusha
cltd
inc
scas
push
inc
sub
lea
xchg
cmpsl
nop
pop
js
scas
sarl
mov
sbb
scas
roll
dec
subb
shlb
mov
aad
add
int3
sub
jmp
out
cmpsb
xor
xchg
enter
dec
push
cwtl
cltd
and
inc
stc
sbb
in
shlb
stos
adc
add
push
jle
pop
push
xor
cltd
adc
into
ret
fsubrp
pop
jae
and
test
pop
sbb
adc
imul
es
arpl
push
adc
call
shll
add
mov
adc
test
out
add
cld
pop
pop
mov
dec
cs
leave
fucomi
fwait
inc
shlb
fs
mov
xor
pop
ja
das
xlat
fs
mov
adc
ret
sahf
mov
sbb
mov
test
es
decl
push
push
cmp
hlt
and
push
sbb
push
mov
pop
shrl
lret
imull
xor
jg
insl
cmpsl
and
rorl
add
jg
lds
xlat
divb
mov
dec
movsl
sub
or
inc
sbb
gs
jle
mov
sbb
aam
sti
cmpsb
and
call
xchg
popa
movsl
pop
int
mov
push
push
xchg
push
sub
xor
pop
push
push
icebp
cmp
add
pop
lret
lock
inc
xchg
mov
mov
pop
aas
xchg
pop
or
jmp
fistpl
jmp
sub
subb
push
repz
outsb
bound
inc
call
inc
cmp
test
pop
or
lahf
push
add
subb
insl
outsl
push
xor
pop
push
jg
mov
icebp
out
adc
es
or
lahf
cs
stc
shrl
cwtd
xchg
loopne
mov
mov
arpl
mov
mov
clc
scas
pop
lods
sbb
xchg
ljmp
shrl
xchg
mov
push
xor
dec
inc
ds
and
jno
ja
loop
sarb
pusha
inc
lahf
outsl
sub
in
frstor
cmp
test
pop
fstl
jge
jmp
mov
xor
ds
jo
imul
andb
aam
stc
ss
dec
popf
lret
cmp
popa
popa
mov
cmc
int
imulb
fnsave
lret
jmp
dec
mov
inc
dec
or
sub
add
sbb
decb
mul
xor
insl
sti
xchg
hlt
stc
cltd
jl
lds
xor
test
icebp
out
mov
ret
jae
outsb
stos
mov
lret
sub
rol
or
adc
xor
mov
jecxz
aaa
popf
mov
es
lock
repz
xchg
adc
jo
add
sbbb
lods
imulb
mov
mov
jmp
mov
sub
inc
and
push
mov
scas
add
cmp
clc
push
dec
adc
shlb
fcoml
cmpsb
lahf
dec
es
icebp
jg
mov
xor
jns
cmp
rolb
clc
adc
xor
push
jns
dec
lea
aad
mov
cmp
dec
pop
xor
fsubrs
test
loope
jecxz
and
nop
iret
jp
lret
fs
in
adc
nop
stos
into
mov
push
stc
loopne
aad
xchg
inc
inc
in
mov
les
push
pusha
push
jae
adc
ljmp
mov
sbb
scas
iret
into
mov
mov
push
jg
jnp
push
pushf
loopne
rorl
or
dec
adc
icebp
enter
push
dec
sub
xchg
stos
mov
push
adc
mov
cmc
inc
xor
xchg
jmp
cmp
pop
fiadds
mov
mov
jmp
mov
lret
or
out
std
or
fwait
pop
lahf
cmp
dec
dec
mov
jns
mov
repnz
gs
test
addr16
in
mov
outsb
dec
mov
adc
mov
std
leave
mov
ret
xor
daa
lahf
xchg
mov
out
push
pop
fcoml
movsb
loopne
dec
loop
mov
lods
mov
dec
incl
xchg
pop
sbb
sub
lret
movsl
ja
jne
push
movsl
push
xchg
cmp
xor
lret
call
test
arpl
faddp
fcomi
jl
mov
in
loope
inc
ljmp
int
mov
sbb
rcrb
and
ud2
xchg
repnz
out
in
addr16
hlt
lea
cmp
inc
test
call
lds
aad
in
add
adc
int3
mov
push
mov
mov
jl
in
std
push
lahf
shrb
pop
lds
push
adc
lret
stos
test
out
mov
aas
lds
mov
std
or
in
or
leave
inc
mov
sub
or
imul
pushf
mov
sbb
fbstp
outsl
xchg
stc
mov
push
mov
xchg
cld
jmp
add
push
out
push
mov
inc
fistpll
add
lcall
js
dec
sbb
jecxz
es
mov
test
jmp
fwait
leave
adc
das
add
call
outsb
push
movsb
adc
and
cli
enter
imul
dec
xor
ficompl
pop
ja
arpl
push
jge
xchg
stos
out
pop
outsb
outsl
adc
xor
iret
out
cmp
inc
call
sti
fldl
and
inc
xchg
cmpsl
and
bnd
leave
cmpsl
inc
push
jge
or
movsb
xchg
push
or
enter
sbb
leave
or
mov
cli
cld
sbb
jno
jl
sub
insb
sbb
xor
rcrl
or
jecxz
in
sbb
jno
repz
stos
fs
ret
pop
adc
sbb
out
ss
out
sbb
sub
inc
inc
out
xchg
jnp
dec
cmp
dec
xchg
push
daa
es
test
jb
sub
icebp
movb
lock
cltd
hlt
test
arpl
xchg
add
push
pop
sub
cmp
cmpsl
inc
fstl
jns
fdiv
lret
mov
dec
stos
sub
ss
inc
xchg
mov
push
mov
xor
push
add
inc
lods
scas
aaa
out
dec
and
mov
aam
or
dec
sbb
xchg
ljmp
xchg
jg
scas
popf
jecxz
test
xchg
addr16
test
push
daa
xor
inc
lods
xor
pop
and
xchg
push
test
inc
stos
jecxz
arpl
imul
cwtl
xchg
xor
in
sub
gs
hlt
and
add
sub
int
pop
shlb
jecxz
in
xor
clc
cmc
std
fsts
into
adc
add
sbb
fstpl
nop
lods
in
cmpsb
fdivl
pop
jns
jmp
out
xlat
inc
pop
add
test
rorb
pushf
lret
jmp
into
sarl
ret
stos
lock
jno
rorb
mov
jl
jg
add
ss
dec
mov
cmpsb
jb
jl
sbbb
add
aam
cli
jne
jle
mov
adc
sub
scas
cmpsb
jge
xchg
rcll
jl
rcrl
addr16
popf
jae
arpl
or
sbb
inc
adc
rorb
mov
call
jbe
imul
mov
je
sub
cwtl
pusha
data16
ljmp
in
popa
divb
xchg
fcomp
out
fs
mov
push
inc
push
hlt
dec
aas
enter
xor
jno
push
insl
pop
inc
cmc
leave
inc
inc
scas
stc
pop
sarl
imul
jns
inc
outsl
and
pop
jbe
outsb
dec
xchg
jp
insl
pop
and
pop
add
shll
push
pop
pop
lret
mov
bound
mov
cmpsb
or
into
sbb
mov
sub
adc
jbe
sub
dec
inc
into
inc
xchg
bound
jns
push
les
add
repz
cwtl
hlt
leave
jne
xchg
cmp
and
hlt
push
sbb
mov
stc
mov
pushl
pop
bound
cmp
mov
fwait
or
imulb
xor
insl
lods
scas
sbb
add
mov
cmp
fs
and
mov
mov
or
pop
mov
ret
cmp
int
sbb
mov
sti
lcall
aad
xor
adc
mov
fs
jmp
cmp
xlat
fbstp
push
popa
adc
lea
je
cltd
mov
push
popa
jns
cmp
xor
and
jecxz
cmpsl
pop
cli
lahf
aad
adc
and
cmc
jns
cmp
xchg
shll
scas
movsl
shr
push
sub
jo
andb
aam
fimull
or
push
mov
xor
dec
shll
cltd
les
clc
shrb
xchg
pusha
mov
cld
dec
sbb
and
dec
test
and
dec
pop
or
mov
cmp
movsb
data16
mov
xor
stos
cmp
jae
pshufw
negb
les
mov
sbb
pop
mov
fidivrs
xor
aas
ret
push
addr16
scas
shrb
jecxz
pop
jg
mov
ficoms
sahf
cmpsb
movsl
jg
fcompl
sub
orb
xchg
shlb
dec
mov
inc
fs
push
mov
xchg
add
mov
cli
dec
xchg
ret
movsb
push
insb
test
hlt
or
pop
push
sahf
insl
je
into
cmp
scas
xlat
mov
daa
xor
cltd
frstpm(287
dec
fs
dec
jp
pop
mov
lods
les
mov
incb
mov
nop
mov
mov
cmp
repz
mov
aad
sbb
int3
mov
mov
sbb
jo
fidivl
mov
pop
xchg
mov
add
fnsave
outsb
mov
movsl
int3
jns
xchg
inc
data16
adc
test
inc
mov
lods
pop
fs
addr16
roll
push
jae
xor
mov
arpl
pop
mov
cmc
inc
mov
push
sahf
push
adc
movsl
pop
mov
jb
mov
lods
ds
mov
or
into
mov
aad
xor
sub
repnz
sbb
vpcmpgtd
test
push
scas
xchg
stos
jb
lock
sahf
in
xlat
pop
cmp
rolb
into
adc
jns
mov
in
cmpsl
or
adc
enter
insb
jae
sbb
negb
nop
std
xchg
call
push
es
push
scas
ljmp
test
in
mov
mov
sub
mov
push
outsb
add
mov
ljmp
call
pop
add
adc
mov
mov
shll
into
pop
mov
mov
cs
add
pop
lock
je,pn
push
cmpsb
push
or
jl
jmp
sub
icebp
pop
add
push
push
stc
add
insl
inc
and
inc
lea
rorl
fs
sti
pushf
or
cmp
cli
iret
aam
cmpsb
ret
bound
and
es
testb
fcoms
ljmp
sub
inc
pusha
cli
jle
rclb
rcrb
pop
ds
adc
shrb
fdiv
sub
movsl
jmp
flds
loop
dec
xchg
xchg
sbb
cmp
mov
push
xchg
cld
subl
mov
mov
js
fisttps
mov
repnz
arpl
ret
push
aad
sbb
jb
movsb
mov
cli
push
mov
and
aad
lods
not
popa
lahf
out
pop
xchg
or
add
icebp
or
addr16
and
sbb
mov
add
cwtl
test
pop
mov
and
sahf
inc
mov
adc
fxsave
push
cmp
std
jg
aaa
pop
clc
jle
aam
sub
add
lock
sub
bound
sbb
jbe
or
push
adcb
mov
ds
pop
ret
cmpsb
dec
scas
hlt
mov
adc
and
stc
mov
lock
push
add
mov
pop
je
lret
lahf
fmuls
nop
xchg
mov
push
lcall
push
jno
out
cmp
movsl
sub
sahf
ja
mov
addr16
lods
imul
inc
in
mov
sub
js
aam
movsl
les
or
dec
dec
clc
xchg
adc
rcrb
rcrb
popf
pop
sub
and
dec
clc
pop
pop
jmp
out
cltd
and
or
mov
lcall
outsb
fstps
or
sbb
es
ljmp
stos
out
ds
mov
sbbl
lcall
jne
sahf
xchg
or
mov
lret
dec
rorl
nop
ds
or
mov
push
shl
xor
ret
rclb
repnz
dec
int
push
in
add
insl
data16
scas
pop
xchg
cmp
sbb
ljmp
inc
cmpsb
cmp
fldt
dec
pushf
ja
fisttpll
or
jge
sbb
sub
mov
jmp
test
push
cmp
dec
push
lret
loope
out
jmp
int3
jp
lcall
cld
cmp
pop
pop
gs
sub
fs
and
out
sub
mov
test
adc
adc
ret
outsb
mov
fiaddl
stos
pop
test
push
and
jmp
ja
inc
loope
fdivrs
cmp
cwtl
push
ret
sbb
cmp
int3
andl
push
jmp
push
fsub
dec
xchg
loopne
pop
scas
shlb
daa
fs
xor
cmp
lock
push
jp
out
xchg
aaa
and
stc
inc
dec
jnp
inc
ret
lcall
out
jns
loop
stc
cmpsb
push
sbb
insb
mov
mov
cmp
sbb
hlt
jmp
or
ljmp
repnz
mov
dec
in
mov
scas
sub
jne
sub
pop
iret
clc
sarb
imul
arpl
fstl
mov
gs
fdivrl
inc
repnz
pop
and
mov
mov
mov
mov
mov
or
pop
cs
jno
pop
mov
mov
rcr
pop
pop
or
mov
loopne
mov
cmc
das
push
add
popf
cmp
push
mov
mov
mov
call
adc
dec
mov
daa
out
outsl
inc
cmp
push
pop
mov
int
lret
sbb
lods
xchg
test
sub
cmp
sbbl
push
aaa
call
cmpsb
test
mov
stc
or
mov
into
sarl
or
icebp
and
push
fsts
mov
ficomps
mov
mov
xchg
fldl
cld
sbb
cmpsl
mov
scas
repz
rcl
sbb
into
mov
mov
adc
xchg
or
jp
xor
sub
imul
jmp
outsl
in
clc
imul
cmp
lret
jno
int
sbb
ljmp
push
add
dec
loope
imul
pop
hlt
mov
cmp
or
jnp
mov
outsb
adc
roll
push
cmpsb
pop
test
mov
loop
jge
test
lret
jp
sbb
icebp
jmp
aad
and
pop
xchg
nop
mov
xor
cld
sub
pushf
mov
shlb
imul
xchg
in
cs
loop
fidivrs
shl
push
jo
orl
icebp
push
rorb
mov
movsl
pop
rcrb
dec
sbb
aam
add
test
ljmp
push
subb
fxch
out
xlat
and
sahf
jge
test
jbe
cs
xor
mov
mov
mov
xor
fldl
test
jnp
jae
loope
addr16
ret
sbb
and
sub
cs
add
mov
adc
test
adc
shl
fstl
pushf
test
cs
subl
je
icebp
xchg
jne
bound
mov
sbb
push
loope
cld
push
or
inc
xchg
lods
clc
aas
cmp
mov
movb
push
scas
xor
mov
das
xor
pushf
es
scas
dec
repz
ja
add
push
test
add
and
insl
popa
cmpsl
movq
les
push
jg
minps
sti
pop
cmpsb
mov
test
dec
mov
iret
xchg
in
mov
cmpsl
mov
loopne
loope
lea
pop
rorl
mov
hlt
mov
sub
int
xchg
and
popa
cmc
pop
iret
icebp
dec
sti
icebp
mov
dec
cmp
frstor
sahf
aam
popf
xor
inc
in
arpl
sub
and
outsl
popf
pusha
mov
xchg
bnd
sbb
mov
lea
mov
cs
jbe
scas
dec
dec
in
lea
pop
push
mov
in
dec
lock
ljmp
loopne
mov
dec
int3
sbb
xlat
outsb
sbb
sub
adc
loope
in
cltd
aad
dec
xor
fs
imul
mov
sbb
cmp
shlb
stos
sbb
aas
xlat
in
dec
xchg
fimull
jp
mov
xchg
in
subb
xor
push
nop
push
xor
jmp
push
add
test
jl
sbb
imul
mov
and
mov
iret
loop
jp
xchg
shr
mov
cmp
sub
lcall
xchg
aad
push
fmull
jp
jbe
push
mov
out
dec
and
fs
les
dec
inc
test
push
pop
dec
and
add
pop
repz
outsb
jnp
lcall
and
incb
cmp
out
test
and
mov
sub
mov
ds
mov
sub
shll
or
imul
cld
sbb
call
sub
mov
stc
test
sbb
shr
loopne
mov
cmp
scas
sbb
leave
or
inc
fnstsw
jno
test
pop
jae
mov
lods
add
and
and
stos
in
mov
into
aas
mov
xchg
push
addb
jbe
jnp
sarb
fistl
push
dec
pop
xlat
cmp
cld
std
push
dec
mov
in
inc
aad
inc
aaa
fisubs
call
mov
std
jno
sarl
es
cmp
push
mov
fstp
sbb
rclb
cmp
adc
add
or
xor
loop
xlat
cwtl
mov
xchg
lahf
pop
push
stc
imul
add
or
fldenv
in
jae
fbld
sub
inc
push
or
inc
loope
mov
sub
and
addb
fidivrs
out
fwait
lcall
jg
cld
cmc
loop
dec
cld
dec
xorb
lock
stos
xchg
jnp
mov
stos
stc
push
push
sbb
aaa
mov
pop
jp
jle
decl
ss
cmp
cmp
arpl
out
loopne
cld
test
out
jae
cli
stos
xchg
mov
inc
sub
sahf
pop
pop
adc
lcall
aas
sub
test
stos
lcall
mov
sar
arpl
mov
pushf
dec
addl
cmpsb
pop
cmpsb
cmpsb
cli
pop
les
and
xchg
xchg
adc
iret
aaa
ja
das
loope
stos
out
pop
adc
cwtl
inc
popa
icebp
push
dec
sbb
or
push
jno
adc
movb
cmp
mov
fnsave
fistl
scas
mov
mov
push
adc
mov
sub
xor
sbb
and
adc
jp
push
rolb
cmpsl
dec
mov
lods
xchg
rol
mov
xchg
mov
mov
fistl
insl
cmp
mov
dec
sub
out
inc
loopne
push
js
and
loope
xchg
push
pushf
mov
es
push
adc
dec
nop
notb
roll
insl
sub
adc
jecxz
out
test
jmp
sub
test
sti
lret
add
aam
mov
add
cmp
sar
xor
adc
enter
sbb
dec
push
ds
add
dec
jmp
shrl
das
or
adc
cmpsb
test
shr
ret
pop
mov
cli
test
pop
jo
imul
loop
push
cmp
subb
cli
gs
scas
jb
mov
mov
add
push
jmp
push
insl
hlt
and
add
cmp
rclb
insb
add
int
popl
rorl
dec
cmpsb
push
je
xor
hlt
cmp
stos
pop
shrl
insl
je
push
sub
sbb
xor
aaa
mov
xor
mov
fisttpl
pop
mov
push
repz
xor
aaa
in
imul
sub
movsl
cs
mov
dec
daa
xor
je
testb
leave
cmc
in
cmp
stos
out
ret
lahf
daa
mov
xchg
jne
adc
cmp
in
les
jne
nop
xorl
sbbl
xchg
dec
cmp
in
call
cmpsl
jbe
stos
xchg
xor
push
lds
in
mov
decl
insb
stos
je
fidivrl
sbb
dec
jecxz
fiaddl
sub
jle
mov
sub
andb
insl
ret
scas
adc
ss
aaa
jge
pop
push
ret
mov
ss
jae
jl
add
push
roll
jmp
mov
sub
sub
mov
add
mov
add
add
sub
ret
lods
sub
divl
das
and
shll
mov
inc
pop
mov
mov
mov
jnp
loopne
lahf
ds
xchg
xchg
sbb
insb
in
sahf
and
in
or
mov
jnp
mov
pushf
rcll
mov
cmp
popa
mov
cmpsl
pop
stc
add
insb
cli
cmp
je
xchg
pop
scas
or
inc
pop
inc
add
movsl
adc
out
mov
rclb
ljmp
call
rcrl
jb
mov
xchg
iret
aam
call
xchg
cli
jecxz
outsb
cmp
cwtl
sbb
dec
cmp
jns
cmc
cli
fcoms
or
jl
mov
call
filds
mov
xchg
repnz
gs
dec
push
xor
push
mov
test
xor
hlt
xorb
test
aas
fbstp
mov
pop
add
in
mov
in
sub
xor
sbb
fnstcw
jb
xchg
popa
push
popa
sti
dec
mov
mov
into
ret
out
inc
adcb
and
popa
in
sub
gs
mov
scas
aaa
mov
push
add
insb
incl
out
xor
jge
fcomps
pop
mov
btr
ljmp
aad
mov
cli
and
and
jg
es
popf
aaa
and
adc
pop
add
push
sti
and
insl
cmp
ret
filds
iret
fsubrl
out
leave
shrl
ja
and
sub
ret
jne
pop
movsb
test
push
mov
xchg
push
sbb
and
push
mov
cli
nop
add
mov
addb
out
push
mov
repz
rcrl
es
dec
mov
sub
or
fsubr
lahf
test
addr16
pop
xchg
xor
nop
sbb
imull
cld
or
push
jecxz
mov
out
sbbl
imul
jle
rol
cmp
test
xchg
xlat
call
push
mov
mov
call
mov
sbb
lret
push
cmp
cli
add
xor
cltd
jne
daa
lahf
dec
adc
shll
hlt
test
in
pop
inc
jp
dec
mov
pop
or
insb
adc
cld
push
out
scas
pop
pop
pop
in
cmpsl
insb
sub
test
cmp
clc
mov
lcall
aam
fisttpll
xchg
iret
lret
push
push
or
jmp
push
insl
xchg
xor
pushf
pop
mov
pushf
in
fistpll
jae
push
std
push
sub
mov
fistpl
fldt
addl
rcr
ljmp
ljmp
cmp
mov
cmp
insb
jno
jne
jge
shll
push
outsb
pushf
cmp
jle
adc
and
into
xor
jnp
and
xor
mov
daa
or
leave
jge
shrb
adc
imul
insl
push
mov
aaa
mov
or
lcall
and
addl
push
insb
xor
xchg
xchg
sub
sahf
movsb
push
sub
rorl
jmp
add
andl
ret
in
dec
push
mov
pop
andb
data16
mov
mov
loope
mov
and
aas
jnp
inc
push
mov
out
mov
dec
xor
in
pop
pop
repz
add
adc
inc
mov
mov
mov
mov
pop
mov
and
ds
into
mov
sub
ja
repnz
insb
cmp
jle
and
mov
stc
movsl
cltd
roll
push
hlt
push
and
sub
loope
or
mov
jae
push
jo
addb
daa
lds
outsl
add
or
mov
push
sbb
cli
push
aaa
mov
push
rorb
mov
push
sub
jne
jp
shll
inc
add
dec
lods
nop
in
fwait
mov
jmp
and
nop
fldt
out
and
or
push
mov
in
xlat
out
jbe
dec
andb
pop
out
movl
mov
fcom
jnp
inc
mov
add
nop
cmp
sub
pop
test
ljmp
rorb
mov
mov
dec
std
lods
bound
adc
test
pop
xchg
and
mov
inc
push
aam
push
je
std
mov
scas
test
add
push
mov
cmc
mov
imul
je
xchg
mov
fldl
dec
mov
nop
and
bnd
mov
loope
bnd
fstpl
pusha
loope
cmp
in
jecxz
lret
pop
sbb
in
xor
sarl
xchg
jge
or
push
cmp
add
cmp
push
movsl
mov
add
loopne
and
pop
divb
stc
sub
cmp
out
sbb
test
ja
insl
adc
inc
in
push
mov
decb
andl
sbb
mov
cmpsl
ficompl
mov
daa
jnp
shl
cmpsb
negl
or
lahf
sbb
add
rcl
imul
pop
out
in
insl
push
or
leave
sbb
rcll
lahf
inc
lock
arpl
or
mov
pop
pop
inc
dec
ljmp
call
mov
or
out
das
aad
xor
inc
ja
rolb
pop
data16
insb
int
add
fidivl
ljmp
ja
dec
loope
add
loop
jmp
pop
sbb
cmp
push
test
mov
incl
inc
push
sbb
cltd
aad
push
or
pusha
cmp
mov
pushf
into
lock
fcmovne
testb
aad
loope
jae
shll
sti
fstpt
mov
rcr
dec
adc
out
mov
or
cmp
pop
imul
adc
and
in
pop
mov
ret
add
cmp
pop
sbb
fs
mov
fnsave
out
imul
std
lea
sbb
or
and
sbb
clc
xlat
pop
mov
call
push
cmp
cmp
lahf
push
in
and
pushf
mov
lret
sub
lret
mov
pop
dec
dec
lret
pop
dec
or
mov
or
and
pop
cmc
inc
jnp
scas
push
sahf
dec
notb
sub
adc
faddl
int
xchg
jbe
sub
and
lahf
imul
xchg
stc
cmp
into
loop
cld
imul
movsl
jmp
adc
push
jmp
loop
push
rclb
sahf
lcall
xchg
out
inc
enter
icebp
fildll
clc
gs
jmp
mov
sbb
cmp
mov
adcb
lods
fmul
mov
inc
cmpsb
or
out
ljmp
movsl
push
inc
outsl
pop
lock
sbb
punpcklbw
jmp
jg
in
sbb
pop
cmp
in
imul
push
xor
xchg
sub
inc
sub
out
repz
dec
stos
cmp
ljmp
movsl
pop
add
iret
add
mull
repz
icebp
nop
je
xor
pop
mov
pushf
mov
and
or
push
xchg
jmp
xchg
inc
imul
xor
ja
mov
mov
pop
lret
or
pop
cmpsb
js
sahf
mov
xchg
cmp
push
dec
mov
js
pop
ror
add
xchg
jmp
sbb
mov
loopne
inc
cmp
stc
loope
xchg
mov
int
mov
cmp
mov
sub
jne
pop
add
inc
xchg
jp
fists
push
add
repnz
sahf
pop
gs
mov
sbb
cli
ret
in
xchg
jne
mov
sbb
sbb
add
je
out
sub
lea
mov
inc
roll
mov
pop
xchg
add
mov
xor
cmpsl
mov
stc
sub
xchg
aaa
cs
insb
push
inc
xchg
sbb
dec
lret
std
loope
stc
add
jne
stc
add
xor
test
pop
mov
pop
jge
add
fildl
das
cmp
adc
gs
fs
xchg
fisubrs
mov
sub
cltd
push
mov
jnp
sub
xchg
lods
arpl
enter
xor
sub
lea
dec
sbb
or
sub
inc
ret
mov
and
stc
mov
mov
bound
nop
xchg
outsl
shrb
cli
notl
fistpll
and
xor
ret
lods
inc
popa
xor
cld
adc
push
stc
mov
cmp
in
je
divl
push
movl
sub
enter
movsb
and
invd
lods
test
movsb
cmp
pop
add
subb
inc
scas
daa
sbb
ss
lds
mov
shlb
or
and
fistpl
fwait
lret
and
cltd
and
fstl
pop
pop
adc
mov
jg
and
stc
test
cmp
jns
mov
mov
mov
cwtl
outsb
sub
in
shrl
test
orb
movsb
icebp
sub
jp
sub
stc
outsl
cli
cmp
lods
adc
gs
fdivrl
adc
data16
fsubrs
lret
loop
xchg
or
call
ds
push
jg
sbb
jge
pop
or
cwtl
dec
mov
sbb
andb
scas
hlt
sub
repnz
insb
fsub
testb
iret
enter
dec
rclb
loope
dec
sbb
sub
pusha
fdivl
cmp
adc
sbb
push
mov
pop
add
out
push
cmp
or
mov
stos
les
jno
xor
inc
pop
inc
xchg
dec
cmp
mov
in
stos
leave
mov
insl
xor
je
push
pusha
lds
pop
or
out
vmwrite
and
fsubl
in
dec
push
ja
and
fnsave
ljmp
loop
mov
jg
frstor
loop
andl
lds
outsl
insl
mov
sbb
push
dec
mov
scas
pusha
mov
aam
cmpsl
sbb
xchg
std
aas
cmp
popa
cmp
imul
es
int
dec
data16
sub
mov
and
in
adc
mov
dec
cmp
mov
mov
inc
jmp
icebp
jno
push
lods
stos
pop
mov
shlb
fstps
sbb
movsl
into
jle
loope
adc
je
test
xor
divl
sub
inc
dec
mov
or
mov
push
or
cmc
aaa
mov
icebp
insb
pusha
ret
fistl
imul
jo
dec
add
inc
in
adc
hlt
out
mov
cmc
test
add
and
inc
loope
stos
jp
jae
data16
into
pop
mov
add
xchg
test
jmp
test
or
or
pushw
repz
sbb
or
mov
loope
out
pop
dec
cmp
xor
pop
adcl
leave
sub
shrb
pop
fcoms
mov
and
adc
add
cli
push
fwait
add
mov
mov
out
sub
jnp
sahf
push
shr
jns
push
dec
in
jmp
mov
and
pusha
aas
push
cwtl
test
sbb
cli
cmpsl
scas
cmpsl
cld
lods
das
jle
cmpsb
jle
andl
mov
bound
gs
xchg
shl
cmp
mov
mov
dec
js
notl
in
push
sub
pushf
stos
test
in
xchg
subl
mov
mov
or
adc
fcmovbe
test
aam
sbb
push
ret
pop
stc
xchg
out
test
dec
push
pop
fsts
in
jle
adc
aas
mov
cmpsb
sub
loop
je
sbb
adc
xchg
push
jne
imul
es
add
loopne
xor
cmpsb
pop
fiadds
jle
inc
sub
cmp
cs
lret
sbb
cmc
jnp
mov
jns
in
insb
testb
push
rolb
mov
sub
xchg
outsl
inc
int
stc
inc
popa
mov
mov
aam
into
jb
lcall
and
imul
mov
jle
ds
bound
ret
dec
icebp
mov
mov
jnp
mov
enter
push
mov
mov
test
add
stos
or
add
add
xchg
hlt
fildl
inc
add
mov
das
dec
jle
dec
mov
adc
pop
add
push
repz
xor
and
shl
popa
out
jne
mov
push
push
stos
mov
gs
jp
inc
jb
iret
daa
add
sub
pop
rclb
jnp
in
pushf
pop
push
mov
sbb
jo
fs
decb
or
rep
addr16
xchg
sub
mov
popf
movsl
mov
xchg
jns
mov
jl
or
int
adc
or
popf
fisttpl
jl
les
fs
mov
cmp
rcrl
inc
and
push
in
or
jle
xor
out
pusha
xor
sti
inc
imul
out
rorl
loope
mov
faddl
adc
icebp
cmp
mov
ret
les
and
pop
and
lea
mov
out
pusha
loopne
mov
testl
and
pop
out
lods
gs
push
mov
xchg
dec
movsl
add
fdivr
or
inc
jg
rcl
lea
roll
ret
jle
out
mov
cmp
jl
xchg
dec
in
dec
movsb
shl
mov
push
pop
xchg
jb
inc
dec
push
xor
pop
ds
xchg
mov
out
outsb
push
sbb
xor
push
orl
stc
imul
sahf
enter
jle
nop
mov
ljmp
divl
mov
mov
push
cmp
adc
lods
add
and
into
pop
testb
sub
mov
icebp
add
cmp
nop
inc
pop
pop
ljmp
pop
push
stc
testb
outsl
ret
add
cld
xor
pop
addr16
push
inc
fwait
popl
sbb
cmpsl
ret
adc
cmp
adc
sub
stc
sbb
imul
adc
fists
lds
push
shlb
inc
repz
out
or
and
lds
mov
sbbl
pop
sti
push
lcall
lds
pop
loope
ss
dec
loope
inc
add
insl
push
adc
fidivrs
sbb
je
sbb
adc
ss
mov
mov
xor
add
xchg
jecxz
jl
outsb
inc
adc
test
cmp
adc
addl
fcoms
in
lea
divl
sbb
enter
dec
or
lahf
or
les
or
call
mov
imul
mov
movsl
xchg
in
mov
popf
movb
fs
movsl
sbb
jle
xlat
mov
xor
icebp
pminub
ret
lods
xor
cmp
iret
mov
repnz
xchg
add
adc
cmpl
or
sbb
es
mov
cmc
mov
mov
pop
sti
popa
dec
nop
hlt
out
xor
inc
sub
pop
mov
iret
std
fs
pushf
cs
jne
movaps
addb
sbb
rorl
ret
cmp
mov
sub
push
xchg
sub
push
cmp
cmp
arpl
loopne
in
out
mov
scas
jg
inc
movsl
pop
jg
into
dec
jns
clc
fwait
int3
rcrl
repz
imul
push
dec
pop
inc
adc
lds
cli
push
cld
mov
push
icebp
cmpl
test
mov
and
jb
lcall
mov
shl
fildl
clc
loopne
jle
push
fidivl
adc
je
daa
and
inc
mov
push
add
mov
sarb
sbb
xorl
negl
xlat
shl
int
sub
out
stc
lods
pop
mov
xchg
sarb
daa
xchg
sbb
scas
js
fistl
jo
fwait
xchg
inc
xlat
lret
sbb
cs
push
lods
pop
lods
shll
sub
int3
xor
pop
or
sub
cmp
dec
cltd
xchg
or
fmull
sub
in
and
rcrl
dec
cli
or
or
dec
lret
inc
sbb
pop
clc
jne
dec
in
jg
pop
add
je
and
sbb
push
mov
pop
mov
inc
pop
mov
cmp
lahf
popa
jmp
test
outsb
jno
aaa
pop
in
js
cmp
inc
push
in
jns
cmpl
cmp
roll
in
test
shlb
call
cmpsl
cmp
out
gs
push
sbb
mov
es
mov
jmp
pop
mov
movsl
xchg
mov
sbb
add
xchg
ljmp
mov
insl
std
xchg
mov
cmc
mov
jg
or
inc
sub
daa
sbb
xchg
movsb
fisttpl
push
xchg
cltd
xchg
pop
or
mov
aas
or
jns
sbb
jge
pop
adc
insl
ds
test
push
sub
pushf
inc
inc
push
insb
fs
clc
add
out
invd
cltd
cmp
xor
jg
sub
cli
repz
pop
or
loopne
cmp
in
mov
mov
lret
lods
loope
popf
sbb
mov
sbb
and
xchg
push
aaa
enter
punpckldq
push
adc
dec
out
mov
incl
mov
cltd
mov
cmp
ja
push
divb
xor
loope
jnp
fisubl
push
push
push
add
dec
fs
ficoml
mov
adc
pop
and
sub
jbe
mov
jl
dec
mov
xchg
dec
test
jb,pn
xchg
scas
sti
aad
xor
cld
loop
lea
or
test
or
mov
mov
mov
iret
arpl
addr16
sbb
adc
xor
inc
or
js
xchg
sbb
sbb
push
xchg
lret
cmp
xchg
mov
cmpl
in
pop
sbb
js
popa
roll
test
mov
adc
lahf
mov
sub
daa
test
push
push
fsubs
cmc
mov
scas
mov
and
dec
arpl
imul
xlat
lcall
ja
fwait
aam
incl
std
loope
leave
cmpsb
jge
clc
inc
and
shlb
push
xchg
dec
cmc
dec
push
inc
adc
jb
cwtl
inc
jmp
or
mov
xor
mov
popf
jb
push
adc
jo
adc
je
in
lahf
enter
rcrl
gs
inc
push
jnp
in
xor
jns
dec
pop
js
repz
cmp
xorl
jno
mov
mov
mov
pop
push
mov
xor
xor
xor
js
enter
sbb
or
cmpsl
int
pop
jns
cmp
add
test
out
adc
mov
and
and
lret
aad
rolb
dec
mov
lods
movsl
sbb
xor
shll
pop
shll
test
jne
sahf
pop
sahf
mov
pop
push
cmp
das
loop
pusha
mov
and
arpl
xor
and
decb
pop
mov
lcall
mov
popa
xor
test
dec
test
icebp
or
push
lret
xchg
mov
daa
mov
jne
fdivs
outsb
jle
sub
data16
test
fisttpll
call
or
and
js,pn
ret
xor
adc
nop
xchg
mov
or
xchg
sbb
popf
test
ds
cmpl
popa
push
mov
xor
dec
mov
dec
xor
push
ss
pop
stos
loopne
jo
cmp
test
fcoml
imul
sarl
lahf
fildll
ja
icebp
notl
xchg
lods
pop
insb
lret
fistps
pop
fisubs
mov
mov
xchg
adc
dec
jle
and
fldt
dec
int
aad
test
pop
insb
jg
mov
or
dec
aaa
xor
test
xor
jbe
sti
sbb
pop
std
add
push
push
push
pop
mov
or
sti
popa
lret
xchg
in
jno
push
xor
push
subb
div
sub
mov
in
mov
and
lods
cltd
dec
adc
imul
xor
mov
mov
inc
pop
xor
cmpsl
inc
sub
nop
rep
xor
loop
mov
cld
shll
mov
push
or
popa
cmp
rcll
rclb
jmp
loop
mov
ror
cmp
mov
call
cmc
push
outsl
rcl
pushl
inc
lahf
insl
xchg
xchg
jne
sub
mov
or
fstpt
xchg
push
cwtl
int3
sbb
cmc
inc
enter
pop
dec
iret
enter
std
jo
aad
or
jle
and
mov
out
xchg
jl
dec
cltd
repz
outsl
inc
repnz
push
xchg
push
insl
movsl
popf
int3
das
mov
jbe
pop
std
loope
in
or
in
inc
int3
aas
sub
push
push
in
imul
cmp
rcll
outsl
insb
sbb
sub
xchg
and
xor
inc
jp
add
es
frstor
leave
rcrb
lock
cmpsb
push
ljmp
push
hlt
adc
pushf
xchg
cmpsl
rcll
pop
das
xorl
lods
ljmp
jne
push
fwait
mov
pop
xor
xchg
mov
sub
repnz
push
mov
ret
xor
in
test
sub
movsb
dec
cmp
xchg
xchg
fs
clc
iret
inc
xchg
xchg
or
es
in
popa
push
mov
popa
sbb
xchg
hlt
les
dec
test
testb
and
negb
dec
dec
inc
subl
push
movsl
jl
pusha
pop
mov
orb
push
adc
cli
sub
testb
daa
shll
sub
mov
shll
mov
imul
loopne
xchg
dec
fbld
movsb
cmp
fwait
lcall
out
jmp
cli
xchg
std
inc
cmpsl
std
insl
mov
cmpsl
rcrb
int
xor
movsb
inc
sahf
imull
mov
xchg
sti
shl
insl
shrb
push
jp
sbb
fsubrs
jbe
add
mov
jg
iret
adc
movsl
leave
cmpsb
les
mov
push
add
shll
in
ss
pop
rcrb
inc
fcomps
mov
andl
scas
xchg
dec
clc
mov
int
add
lcall
in
sub
jge
xor
push
pop
mov
jmp
add
fadd
and
popf
fsubr
inc
cli
mov
sub
mov
jle
sbbl
cli
mov
cmp
leave
into
jg
lcall
dec
or
stc
addl
fsubs
jo
fstl
test
pop
inc
push
adc
push
stc
in
cmp
mov
mov
int3
test
andl
mov
fstp
mov
seto
jnp
xchg
mulb
jl
or
pop
jns
shrl
and
sbb
cmp
adc
lahf
out
mov
mov
mov
movsl
ret
adc
add
in
dec
outsl
mov
in
add
shll
xor
jnp
ret
out
cmpsb
dec
mov
lock
inc
dec
test
sub
sub
cmp
ficompl
cmp
imul
pop
and
pop
sub
fisttps
ss
pusha
fnsave
test
inc
xor
jp
lds
gs
inc
push
sbb
loop,pn
loopne
in
fsubs
test
leave
push
adc
cli
aaa
pop
mov
add
sub
mov
dec
push
int
loope
fs
lret
jmp
add
jecxz
pusha
and
test
push
or
mov
nop
icebp
pop
aas
dec
jl
mov
or
jbe
push
into
mov
stc
in
lods
inc
pop
shrl
das
sub
mov
lds
pop
lea
aaa
enter
iret
xchg
sarb
in
or
pop
loopne
xlat
mov
jns
or
and
orl
sub
imul
sbb
sbb
lea
jp
bound
xor
imul
incb
xor
movsb
push
xor
push
std
ljmp
in
int3
mov
xchg
roll
or
cwtl
gs
mov
mov
xchg
sub
out
cmpb
xchg
jnp
jecxz
adc
mov
stc
fiaddl
add
outsb
mov
leave
fcompl
mov
xor
js
cmp
movsb
dec
pop
mov
push
xlat
sub
je
push
or
gs
clc
insb
jge
mov
pop
cltd
movsb
fcmovnb
adc
rcl
outsl
sub
pusha
fsubrs
jo
cmp
repnz
call
push
mov
insb
adc
mov
enter
or
out
rorb
loop
lret
shr
nop
out
add
out
out
pop
leave
dec
or
orb
fldenv
pop
xlat
mov
sbb
push
and
mulb
mov
add
loop
cmpsb
push
jo
outsl
inc
inc
xchg
ds
jne
adc
adc
xchg
pop
js
fbld
hlt
sbb
inc
das
cmc
in
sub
pop
mov
stos
mov
scas
nop
jg
enter
adc
ret
push
js
idivl
mov
jmp
cmpb
hlt
jbe
mov
fwait
pop
pushf
cmp
hlt
cmpsl
dec
lods
and
fsts
rcr
jbe
pop
imul
dec
daa
fdivl
push
pop
add
adc
mov
das
pop
cmp
stc
mov
mov
cmp
dec
cmc
xchg
mov
mov
sub
pop
test
jne
and
pushf
add
dec
sub
lock
scas
push
scas
mov
fsub
les
int
mov
sbb
fs
mov
xlat
fldcw
inc
int
cmp
jne
dec
int
les
repnz
inc
pop
int
pop
cmp
adc
loope
out
mov
lea
adc
mov
inc
xor
push
mov
inc
in
stc
pop
cmp
arpl
call
ret
add
pop
xchg
cmpsl
pop
xor
das
jb
rol
in
add
xchg
push
ds
cmp
sub
sbb
sbb
outsb
xchg
faddl
dec
sub
fdivl
incb
lods
fwait
mov
mov
push
pusha
jnp
push
pusha
push
repz
movsl
jl
sub
mov
dec
xchg
xchg
add
pop
dec
dec
mov
and
adc
push
in
jne
and
lahf
dec
and
inc
sbb
loopne
or
cld
and
data16
cmp
dec
rolb
call
data16
outsl
mov
mov
in
loopne
out
icebp
push
enter
xor
pop
stos
fwait
cmp
inc
xchg
rcll
adc
fld
adc
cltd
or
sub
cli
cld
scas
loopne
mov
push
fnstsw
test
lods
stos
sbb
xchg
outsl
xor
sbb
addb
leave
jge
insl
fcom
add
jge
es
stc
adc
mulb
sbbb
inc
sub
xchg
sbb
xorb
jp
inc
inc
jno
mov
popf
mov
xlat
pushf
lcall
jnp
jmp
push
pop
fiadds
xchg
xchg
arpl
sub
jp
in
and
lea
or
insl
lock
call
sbb
inc
or
push
xlat
xor
ljmp
aaa
test
push
fstpt
add
out
jle
push
jb
repnz
and
lcall
das
xor
addb
jge
mov
and
inc
or
jle
xchg
xor
xchg
cmpsl
mov
mov
jl
add
pop
push
out
lahf
ret
inc
mov
cltd
sbb
or
sbb
shrl
push
addb
in
in
jmp
add
pop
ret
test
add
add
insl
imul
fmul
pop
lea
cmp
pop
ret
jns
pop
mov
mov
sbb
mov
scas
pop
inc
add
xor
cld
sti
or
sarb
xchg
outsl
xchg
daa
dec
push
and
sbb
xchg
in
jecxz
jle
int
pop
add
popa
jno
inc
pop
sbb
xchg
cmc
ljmp
shll
outsb
in
in
sub
jne
fwait
and
lods
les
das
jns
pop
and
mov
aad
pop
and
mov
stos
xor
sti
scas
mov
and
daa
stos
sub
movsb
adc
js
fdivl
or
push
sub
add
ret
lret
pushf
xor
inc
jae
fcmovnbe
pop
popa
dec
repnz
or
insb
pop
mov
jbe
scas
mov
and
xchg
xlat
fisubl
lock
rcrl
inc
jl
gs
sarl
and
ret
lock
lcall
icebp
mov
shll
pop
ficompl
or
addr16
mov
mov
fstl
mov
out
sti
pop
fwait
pop
xor
icebp
out
lods
cs
cmpsb
cmpsb
sahf
xchg
int
jp
sub
inc
imul
outsl
outsl
ret
cmpsl
cmpsb
mov
loop
mov
cwtl
xchg
fcoml
loope
data16
out
push
gs
fmull
lds
shr
push
push
cwtl
rol
lcall
jmp
mov
ljmp
cld
mov
cmp
loop
mov
ret
adc
dec
lret
outsl
cwtl
mov
out
std
sarb
arpl
sbb
out
xchg
in
negl
repz
mov
sub
pop
add
xchg
das
adc
or
adc
dec
pop
sub
lods
pop
sbb
movsl
js
mov
shr
pushl
dec
mul
pop
insb
pop
jge
inc
push
mov
inc
out
push
xchg
in
or
lret
jae
mov
jo
adc
xor
shlb
sbb
lock
mov
sahf
in
adcb
mov
shlb
or
jg
pop
push
ret
cmp
sub
pusha
leave
push
jns
jge
leave
adc
aaa
vphaddubq
call
xchg
movsl
jmp
jno
sub
jmp
lods
ret
ss
mov
push
mov
mov
mov
cmp
mov
pop
jae
shlb
mov
pop
lahf
inc
jbe
inc
test
push
jns
sub
clc
pop
push
out
fimull
sarb
les
imul
adc
fs
sub
orl
inc
inc
dec
mov
mov
loop
xchg
push
xchg
mov
sub
mov
loopne
xchg
xchg
fs
push
xchg
filds
push
pop
inc
scas
jae
xor
and
roll
insb
dec
xchg
mov
and
push
xchg
stos
fisttpl
in
jp
in
lcall
mov
daa
mov
jge
xor
sbb
sub
dec
lock
lahf
or
jbe
pop
clc
sub
add
xchg
out
popf
fs
clc
push
lods
aam
mov
dec
jnp
xchg
mov
xchg
jmp
xchg
gs
or
fmull
test
xchg
dec
pop
mov
pop
cmp
in
arpl
cmp
stos
decb
movsb
call
xchg
mov
into
int
push
or
ret
jge
stos
jmp
cmp
pop
or
push
pusha
loop
ret
inc
lods
jg
fimuls
add
mov
mov
ja
xchg
roll
cmp
pushf
cmp
nop
cmp
mov
mov
dec
add
ljmp
add
or
cwtl
hlt
or
inc
rclb
or
js
adc
repz
xor
jmp
jb
int
inc
aas
arpl
rcrl
pop
adc
test
popf
in
stos
popf
imul
xchg
inc
push
inc
push
fisubrl
adc
push
mov
stos
and
dec
mov
inc
stos
int
lret
das
xor
in
pop
cli
jns
or
addr16
pop
and
daa
das
mov
mov
ja
dec
and
pop
sbb
dec
push
test
sub
xchg
out
sbb
jno
pop
outsb
mov
or
xor
aam
pop
inc
setb
enter
push
dec
call
lds
icebp
inc
sar
adc
mov
bound
hlt
sbb
mov
scas
shlb
jbe
enter
pop
adc
mov
pop
mov
jg
bound
mov
push
aam
popf
mov
push
pop
andb
add
out
mov
xchg
and
and
adc
sbb
insl
adc
jge
sahf
adc
inc
rolb
pop
push
dec
fldt
bnd
lea
xor
cmpsw
pop
pop
lcall
jnp
mov
dec
jmp
jbe
stc
clc
loope
add
pop
subb
jo
sub
mov
insl
ret
cmpb
and
inc
cltd
lret
pop
dec
or
mov
xchg
rcrb
sub
jg
out
and
adc
add
mov
mov
popf
test
mov
push
insb
mov
push
push
push
out
cmpsl
sub
mov
insl
inc
in
and
push
test
ds
push
cmp
fwait
mov
out
pop
xchg
push
jl
icebp
inc
bound
xchg
fadds
in
and
push
mov
in
int
loope
in
pop
dec
sbb
and
hlt
mov
add
lods
and
push
daa
adc
cltd
gs
aam
aad
mov
push
pop
lock
pop
lahf
iret
clc
movsl
mov
hlt
fisubrl
lcall
dec
xchg
push
lea
sbb
xchg
in
fs
pop
shll
andl
lret
push
mov
stc
fdivp
ss
mov
push
mov
into
xor
enter
push
mov
imul
cltd
mov
fdivl
test
scas
out
sbb
rcrl
jbe
les
jp
push
inc
lods
push
pop
int
pop
arpl
lock
dec
movl
mov
popf
xchg
shl
push
in
pusha
call
xchg
jge
inc
push
leave
adc
lahf
jl
add
lods
xchg
mulb
mov
push
in
dec
in
mov
and
add
sub
ret
sbb
inc
ljmp
mov
xchg
mov
sbb
mov
std
inc
ja
flds
rolb
es
mov
dec
pop
mov
mov
nop
and
fstps
add
jp
fisttps
lahf
pop
je
mov
js
xor
and
jns
jmp
popa
mov
fwait
cmpsb
sub
sub
cmp
xchg
gs
jle
ja
mov
sub
jo
jle
mov
ja
pusha
dec
mov
push
lret
cs
jae
dec
and
xor
popf
push
add
xor
scas
mov
sbb
cmp
shr
adc
xor
and
fisttpl
xchg
fmull
pop
dec
dec
daa
mov
aam
into
dec
imull
cwtl
or
xchg
ds
int3
cld
dec
aaa
adc
mov
or
mov
sbbb
push
cmpsl
and
lcall
fisttpll
repz
inc
imul
mov
stos
mov
push
and
das
push
mov
cmp
ja
dec
mov
push
hlt
mov
jb
pusha
or
inc
push
pop
movsl
mov
loop
dec
clc
and
cmp
xchg
inc
aaa
jo
fisttpll
push
mov
lods
inc
dec
popa
cmp
pop
repz
or
std
jecxz
mov
pop
int3
fildl
popf
sahf
les
ja
inc
pop
enter
in
fisttpl
into
cltd
sbb
cmp
leave
cmp
push
mov
cmc
data16
mov
loope
push
add
inc
cltd
testb
dec
cmp
jae
jp
fiaddl
or
js
fsts
add
xchg
mov
test
mov
push
jge
push
jp
ljmp
cmp
jae
add
xchg
xchg
mov
push
cmpsl
jge,pn
arpl
fistpl
fistpll
push
lods
fdivrs
jb
xlat
dec
ja
mov
sub
cli
je
sub
mov
inc
and
dec
jb
pextrw
lods
jns
sbb
fldl
mov
add
test
push
pop
push
cmp
lds
out
inc
loop
daa
mov
out
ja
repz
xlat
add
or
in
mov
inc
mov
cwtl
test
dec
and
sbb
jp
cmp
mov
or
cmc
add
dec
outsl
ss
dec
aas
faddl
icebp
jp
mov
add
aas
mov
clc
insl
cmpsb
and
movsbl
xchg
cmp
leave
and
add
mov
jns
sahf
cmp
pop
push
cmp
pop
movsb
add
or
call
and
mov
inc
push
into
shlb
mov
cmp
inc
jo
orl
pop
jae
push
inc
lcall
test
dec
out
jmp
xchg
cltd
test
decb
xor
pop
or
dec
insb
ds
push
nop
in
into
mov
mov
scas
pop
adc
cmp
xchg
and
xor
imul
sbb
jg
pushf
mov
sub
dec
pop
mov
mov
add
mov
arpl
push
dec
xlat
add
sbb
push
stos
lahf
lcall
iret
shl
mov
add
pushf
mov
mov
xchg
arpl
jnp
repnz
stos
insl
outsb
and
mov
xchg
or
and
lods
mov
push
sbb
fdivs
mov
sarb
cmpsb
adc
in
xor
push
pushf
jno
inc
insb
scas
pop
cli
adc
out
mov
int3
pop
cmc
xchg
jo
sarl
repnz
or
daa
ja
bound
psubsw
and
test
insb
jb
cmp
cmpsb
je
inc
jae
xchg
pop
sar
cmpsl
cmp
xchg
shrb
xor
and
jecxz
popa
fs
int3
and
scas
sarl
and
xor
pop
test
inc
push
adc
mov
fwait
clc
mov
out
sub
testl
cmp
movsl
ds
jnp
pop
inc
jl
cmc
mov
pop
popaw
dec
xor
xor
xor
jl
pop
or
and
adc
lds
and
fidivl
out
dec
das
mov
and
jbe
mov
lcall
repnz
pop
sti
dec
pusha
cmp
iret
sbb
imul
outsl
addl
imul
loope
cmp
adc
jecxz
aaa
stos
outsb
mov
lods
ret
dec
add
mov
lds
in
cli
mov
hlt
jge
cmp
dec
sub
lock
enter
ja
and
pop
fistpll
pop
xor
ds
mov
push
mov
jb
cmp
insl
lahf
fisttps
movsl
adc
xchg
push
xchg
ss
in
or
xchg
rcl
or
int
jg
jl
dec
out
inc
cmpsb
in
movsl
sbb
sbb
mov
popf
dec
mov
xor
cmp
pslld
or
das
sbb
leave
add
pop
repz
pushf
leave
push
dec
imul
xor
jecxz
mov
jmp
inc
cmp
data16
jge
aaa
inc
negl
dec
jmp
in
and
jbe
mov
ret
xor
add
pop
fnclex
mov
pushf
jmp
push
push
add
dec
arpl
aam
push
int3
rcrl
push
mov
out
adc
adc
stc
mov
int
aaa
adc
add
lcall
movsl
nop
sahf
cmp
adc
data16
loopne
sbb
cltd
stos
jno
dec
std
cmp
adc
xchg
cmp
inc
jbe
xchg
push
ret
jmp
inc
pop
in
mov
test
xor
mov
push
fcompl
shll
mov
mov
outsl
mov
int3
repz
or
psubusb
arpl
sbb
mov
sahf
in
sbb
bound
call
mov
fisttpl
insb
fsubrs
cli
sbb
inc
pop
sbb
jmp
lahf
jge
imul
xchg
dec
add
jbe
mov
pop
sbb
jmp
push
arpl
xchg
mov
jo
in
xor
and
mov
popf
pop
sbb
sub
push
cmp
mov
daa
push
mov
rcrb
test
push
or
ljmp
mov
push
jmp
pop
stos
fnstenv
xor
pushf
push
test
into
bound
adc
dec
or
pop
push
inc
push
fsubl
pop
stc
pusha
adc
ja
scas
fwait
js
shrl
mov
dec
int
lods
lahf
scas
scas
into
iret
add
popa
inc
ret
pusha
push
mov
rcrb
inc
out
lods
xchg
pop
mov
cs
loope
xchg
pop
mov
iret
frstor
sub
push
ljmp
mov
jbe
xchg
outsl
xor
lds
push
in
and
int3
inc
mov
shrd
movsl
pusha
addr16
in
fwait
into
out
xor
in
sub
loope
popf
pop
imul
jmp
xchg
and
adc
sub
testb
pop
or
mov
mov
sbb
andl
call
push
jl
pushf
jecxz
xchg
lods
lret
inc
shlb
sub
movsl
adc
popf
cld
jae
jb
ds
mov
push
jno
es
in
mov
into
push
rclb
or
shrd
cli
loopne
clc
fdivl
iret
pop
sub
jnp
mov
clc
cmp
aaa
pop
lcall
fisubl
jmp
cmpsb
xchg
adc
and
xor
jbe
or
int
pop
pop
ljmp
and
add
pop
test
fisubrs
xchg
xchg
mov
fwait
hlt
stos
lcall
or
jbe
nop
add
iret
imul
inc
aas
in
push
js
leave
ret
outsl
adc
mov
negb
in
jecxz
rorb
jb
adc
pop
cmp
sbb
jmp
inc
loop
ja
fmuls
inc
jns
jns
rcrb
dec
or
mov
adc
hlt
mov
cmp
xchg
scas
bound
mov
lea
out
add
inc
into
sub
imul
icebp
mov
and
pop
mov
ret
scas
andb
pusha
in
inc
arpl
scas
jo
add
loopne
cmp
rolb
lret
cmc
inc
add
jns
or
push
mov
dec
lret
mov
daa
test
sub
mov
jns
int
mov
shrl
popa
xchg
mov
cmp
dec
out
in
push
gs
daa
out
test
pop
adc
adc
dec
mov
scas
pop
cmpsb
pushf
mov
pop
jmp
divb
push
sbb
shlb
icebp
sbb
ljmp
push
sbb
push
scas
notb
mov
jg
cmpsb
inc
or
negb
xchg
push
pop
xorb
push
dec
in
push
addr16
lahf
movsl
dec
or
jle
sbb
mov
shrl
or
in
xchg
jbe
mov
das
sub
inc
pop
out
test
push
shll
outsb
loopne
js
aam
fidivrs
sti
sti
add
std
aas
rcl
in
push
sbb
orl
fisubs
cmp
adc
push
inc
cmpsb
xchg
sub
jmp
roll
xchg
arpl
cmpsl
xor
mov
jns
push
fisttpl
push
sbb
push
jge
fisubs
xor
insb
jbe,pn
leave
sub
sub
jge
movsb
cmp
mov
ja
idivb
shlb
cmpsl
jmp
dec
cld
in
loop
push
mov
rorl
mov
nop
ljmp
shll
jno
xlat
mov
adcb
inc
pop
and
testb
sbb
in
push
push
cmp
mov
or
mov
xchg
test
movsl
mov
in
cmp
std
nop
jns
xchg
xor
mov
mov
adc
mov
repz
mov
addr16
pop
mov
cltd
mov
arpl
xor
push
daa
aas
loop
jle
subl
das
loop
test
das
in
jecxz
xchg
orl
bound
clc
popa
jmp
mov
out
insb
push
cld
dec
and
xor
enter
mov
sbb
xchg
cmpsb
repz
movsl
addr16
xchg
daa
je
int
test
push
lahf
sbb
mov
std
inc
adc
pop
lock
into
inc
imul
mov
push
in
fwait
shrb
or
jb
xchg
aad
mov
xchg
sub
mov
test
pop
add
cwtl
das
jecxz
cvtps2pi
inc
popf
lock
ror
ja
mov
aad
imul
inc
in
dec
subl
dec
dec
inc
pop
mov
or
icebp
fidivrs
decb
jg
repz
and
orl
pop
scas
sbb
clc
jmp
inc
insl
jb
sbb
mov
orb
dec
ja
loope
repz
scas
adc
push
mov
je
fwait
bound
ss
inc
sub
fildl
push
icebp
push
sbb
push
push
sahf
insb
pop
popf
pop
xor
adc
fbld
sub
push
cmp
cld
jb
push
lret
jge
aas
fwait
clc
adc
cmc
pop
xchg
xchg
test
cmpsb
sbbb
aaa
test
xor
movsb
cmp
pop
mov
push
push
mov
lret
insl
lahf
pop
fists
dec
fstl
je
and
xchg
jnp
cld
out
pop
mov
imul
jl
pushf
hlt
retw
lret
shl
mov
sahf
add
push
dec
mov
mov
pop
dec
jmp
add
icebp
xchg
pop
sbb
jnp
or
cmp
inc
data16
xor
and
mov
inc
mov
or
cmp
cld
test
bound
sub
inc
das
xchg
lcall
cmp
ud0
inc
sub
inc
dec
and
les
jge
or
inc
fwait
pop
adc
data16
icebp
arpl
xor
jns
xchg
sbb
and
insb
movsl
rcrl
imul
add
ss
pop
scas
scas
shll
gs
shl
lret
xchg
outsb
fucomi
nop
mov
loope
jecxz
jp
add
call
xor
or
mov
outsl
or
inc
andb
data16
mov
lea
into
sub
adc
inc
mov
and
jnp
leave
mov
mov
sbb
mov
mov
mov
inc
xor
xor
jo
pop
inc
xchg
adc
xchg
out
inc
cmpsb
xchg
insb
fst
outsb
inc
dec
ja
mov
dec
lcall
pop
pop
mov
cmp
mov
lret
daa
push
xchg
in
orl
jg
fisttps
sbb
adc
inc
jmp
add
stos
adc
push
jbe
mov
in
or
cwtl
add
xlat
fcoms
addr16
jmp
and
rorl
adc
movsl
mull
repnz
outsl
lea
es
or
mov
mov
lret
dec
mov
adc
fnstcw
aaa
sbb
arpl
cmp
dec
dec
cmp
mov
sub
inc
xchg
or
test
mov
xchg
push
sub
mov
ficoms
int
push
stos
fucomi
add
dec
movsl
testb
movsl
and
sbb
lret
adc
lock
or
xchg
enter
fbstp
push
jp
push
mov
push
add
pop
jb
imull
or
nop
cltd
jmp
push
xchg
jge
fmuls
movsl
rclb
xor
push
inc
mov
cmovnp
ret
in
pop
mov
sbb
sub
sub
add
cmp
add
daa
inc
ret
add
aas
and
dec
lods
or
in
push
jp
sub
push
mov
mov
xchg
loopne
ficomps
out
loop
jne
out
fwait
pop
inc
and
dec
loopne
and
test
sbb
ljmp
lods
sbb
push
and
iret
or
adc
inc
lods
icebp
pop
pop
mov
cmc
mov
in
imul
scas
rcrl
loopne
pop
cwtl
inc
adc
mov
xchg
pop
fs
inc
dec
lods
cltd
push
cwtl
push
in
dec
pop
aam
sub
sbb
add
fs
pushf
cld
push
iret
xor
jne
cmp
sti
sub
adc
sti
pop
imul
incl
pop
test
ss
gs
mov
rcrb
pusha
jmp
hlt
or
mov
imulb
cmp
repz
out
out
inc
cld
mov
or
insb
inc
pop
push
pop
pusha
inc
pop
cmp
inc
cmp
push
repz
jp
ret
push
icebp
jmp
cmp
lock
and
mov
insl
ficoms
push
jne
push
icebp
ljmp
in
aaa
push
or
shrb
sub
les
inc
mov
mov
fmuls
ljmp
sbb
xchg
iret
fisttpl
add
push
inc
sub
xchg
sub
int3
sbbb
mov
xor
subb
mov
icebp
and
dec
shll
mov
fsubrl
add
fs
sub
in
fwait
andb
xor
xchg
adc
jmp
jecxz
inc
sbb
leave
pushf
insl
cmp
mov
lds
xchg
pop
aaa
jecxz
dec
in
or
inc
or
push
mov
or
add
cwtl
ficomps
pop
push
shll
cmpsl
hlt
and
mov
jg
sub
mov
adc
inc
and
mov
adc
mov
lock
pop
jns
hlt
clc
ficompl
jne
scas
mov
cmp
push
cmp
insb
add
sub
subl
jmp
sbb
jg
mov
sub
fsubrl
or
jl
jl
je
pop
fstps
mov
xchg
orb
outsb
or
sub
gs
mov
and
in
mov
js
jle
sti
push
dec
in
in
lods
ret
les
pop
mov
xchg
les
cwtl
sbb
ror
mov
lods
imul
call
lcall
stc
push
adc
in
cmp
mov
int
int
sbb
xchg
aad
and
jge
int
or
arpl
push
mov
movsb
adc
repnz
dec
push
xchg
mov
repz
cmpsl
dec
test
mov
pop
fwait
sti
sub
inc
sbb
test
int
cmp
add
iret
clc
clc
movsl
pop
aaa
rep
push
call
dec
wrmsr
aas
fisubs
add
ret
daa
fsts
mov
jg
xor
iret
subl
pop
pop
jle
sbb
movsl
and
or
and
jb
fistl
mov
icebp
sbbl
push
dec
add
aam
sbb
stos
fdivl
sbb
out
call
lds
loop
pop
push
or
aad
pushf
jns
jnp
and
or
inc
sub
aam
cmp
jle
jmp
enter
pop
icebp
in
mov
xchg
inc
in
gs
mov
fidivrs
outsl
adc
dec
out
in
jg
jne
push
rol
in
xchg
int
in
frstor
jo
push
outsb
dec
push
xlat
jl
dec
pop
in
xchg
daa
push
adc
in
les
outsb
mov
dec
pop
mov
or
sahf
push
hlt
out
push
jle
cli
ss
dec
add
inc
mov
cwtl
and
sahf
in
dec
mov
leave
rcll
push
std
lret
inc
js
mov
cmp
mov
mov
push
pop
icebp
push
fbld
cmc
mov
sub
int
inc
sbb
pop
cmp
sub
xor
or
inc
sti
or
mov
mov
push
das
std
jb
jne
xchg
loopne
cmp
mov
add
push
sbb
inc
cwtl
cmp
ret
lret
dec
dec
dec
adc
push
iret
hlt
les
divl
or
sbb
sbb
notl
push
mov
sub
and
jg
ficoml
pop
aaa
mov
mov
jo
cs
pop
dec
sbb
data16
stc
and
shrl
or
int
push
and
cmpsb
lds
mov
fs
in
sub
repz
lret
push
cmp
lahf
popa
imul
xor
fnstcw
and
icebp
dec
mov
mov
dec
cwtl
inc
movsl
adc
lret
es
jle
mov
sub
sub
ss
mov
xchg
cmp
rorb
jl
outsl
cmpsl
popa
jle
test
xchg
mov
loope
arpl
dec
imul
mov
jno
daa
inc
jbe
hlt
fninit
aaa
pop
std
jmp
divl
mov
mov
pop
addr16
mov
mov
jecxz
loopne
dec
lea
push
mov
add
out
mov
out
repz
sbb
ljmp
in
mov
daa
xchg
test
push
test
lahf
cli
jmp
loopne
pop
scas
mov
adc
enter
cs
jl
and
mov
push
and
mov
mov
cli
insl
or
stos
mov
xor
sbb
ss
sti
mov
pop
lcall
fs
push
out
or
sbbb
jp
or
xchg
lahf
loope
scas
or
inc
sahf
dec
popf
punpckhdq
and
jmp
xor
stos
dec
cmp
mov
and
mov
in
clc
lds
fisttpll
icebp
adc
shrb
out
lock
cltd
pop
out
pop
stos
adc
movsl
repnz
dec
je
or
pop
in
aas
das
cli
std
sbb
dec
fdivrs
mov
add
ss
jmp
mov
cli
adc
les
xchg
mov
ret
dec
stc
lret
mov
sbb
test
es
xchg
and
in
daa
dec
pop
negl
leave
inc
out
mov
mov
out
aad
aam
xor
scas
jb
xchg
inc
or
mov
stos
fidivl
or
fdivl
cltd
cmp
stos
adc
add
gs
cmp
xchg
movsl
setbe
jmp
into
mov
push
shl
push
mov
mov
and
out
push
xchg
adc
fdivs
ror
sti
cwtl
int
ficompl
xlat
js
xor
jbe
into
push
push
dec
in
lods
cwtl
popf
or
test
sbb
repnz
es
inc
xor
roll
inc
and
andl
pop
enter
pop
cmc
aas
mov
mov
addr16
xor
mov
and
nop
bound
icebp
fsubs
xchg
pop
mov
lock
or
push
ljmp
pop
in
and
ret
outsl
cld
add
imul
aaa
sbb
ljmp
sahf
inc
push
jle
adc
push
and
scas
or
lret
loopne
lea
cmp
pop
cmpsl
jle
dec
insl
add
sbb
and
shlb
jmp
and
pop
pop
out
in
out
push
sub
push
push
sub
fsubrl
popa
adc
sbb
xlat
mov
add
pop
aad
test
cltd
dec
int
inc
nop
jae
sbb
iret
inc
xchg
shr
clc
pusha
mov
jno
jbe
cltd
jge
mov
sbb
xchg
es
lock
xor
arpl
rorb
pop
sbb
mov
jle
push
dec
add
jmp
mov
xchg
les
ja
xchg
subl
xchg
mov
into
mov
sub
pop
push
inc
clc
es
pop
sub
popl
cwtl
icebp
sbb
or
sub
subb
loop
jl
faddl
mov
leave
cmp
test
add
jp
jp
inc
cmp
int3
es
sti
cmpsl
les
inc
jmp
je
push
jle
mov
sub
pop
in
xchg
push
movsl
push
cmpsl
xchg
or
cmp
ret
mov
cmc
bound
popa
inc
pusha
fsts
push
cs
in
out
and
mov
fstl
mov
add
mov
jmp
loopne,pn
fdivl
mov
inc
cvtps2pd
andl
fsub
mov
mov
push
aad
loopne
xor
inc
into
stc
or
sub
lods
sbb
shll
dec
pushf
stos
fwait
jle
orl
inc
xorl
pop
je
dec
aas
stc
and
xchg
ret
fadds
sub
test
lahf
lret
jnp
and
sbb
adc
sub
test
in
pop
insl
pop
imul
and
outsl
cltd
cmpsb
and
push
pop
fsts
add
cmpsb
repnz
mov
xlat
pop
sti
jge
inc
fistpl
loopne
in
rolb
mov
stos
and
jno
lods
xchg
mov
jle
add
gs
push
add
cltd
jle
outsl
arpl
cmpsl
sbb
lods
psrlq
xchg
ret
aad
add
add
sub
dec
add
cs
and
popa
lds
or
push
loopne
pop
mov
xor
pusha
xor
adc
fwait
cmp
fnstcw
repz
mov
jno
inc
pop
sbb
xor
jmp
aam
or
adc
test
push
jecxz
popa
adc
gs
sbb
int3
jecxz
test
sub
test
lahf
test
out
push
fidivs
out
lds
int
mov
jl
sti
loope
xor
movsb
fwait
mov
lcall
push
arpl
xchg
push
pusha
data16
orl
jle
cwtl
mov
jg
xor
mov
mov
scas
adc
add
test
push
mov
lea
sub
xlat
std
leave
leave
jle
sub
mov
mov
cmp
cwtl
adc
push
jecxz
int
push
sti
inc
test
repnz
jo
ljmp
mov
cmp
sbb
pop
out
out
push
arpl
dec
loop
mov
cmc
xor
jb
jae
sub
outsb
cmpl
pop
push
jge
stc
mov
mov
imul
popa
stos
push
lea
cmc
sarb
dec
cltd
inc
enter
pop
mov
mov
dec
fcomps
test
sub
push
mov
mov
xchg
add
fstpt
lock
movsb
popl
cmpsl
icebp
icebp
or
call
adc
sub
dec
les
fbstp
mov
dec
add
push
jo
scas
jmp
je
mov
adc
sbb
or
push
mov
enter
mov
stc
int
int3
mov
pop
xchg
mov
callw
inc
sbb
jb
testb
jae
xchg
jg
das
push
cmc
adc
pop
rcrl
pop
xchg
jb
in
scas
mov
and
pop
es
xchg
mov
mov
mov
xchg
add
mov
dec
sub
cmp
dec
je
in
mov
inc
pop
mov
adc
add
shlb
outsb
data16
or
sub
movl
push
gs
mov
xor
clc
out
out
mov
adc
aaa
xlat
jno
or
xor
js
stos
das
sbb
out
push
lahf
adc
aam
jbe
and
repz
jns
rclb
sub
lods
sbb
cli
push
or
jnp
test
popf
loop
mov
arpl
dec
mov
pop
test
inc
jb
stos
fcomps
xor
in
in
jne
ds
pusha
xor
or
cmp
xchg
inc
and
xchg
call
jg
movsb
sbb
cmp
xorb
mov
xor
sub
fcmovnb
pop
mov
sub
lret
outsb
sub
mov
sahf
jo
movsb
inc
or
mov
push
dec
push
pop
popa
bound
dec
cmp
mov
adc
ss
cs
sub
out
mov
dec
push
sbb
into
lods
pop
lret
cmp
addl
push
pop
gs
stc
dec
and
cmp
cmp
add
mov
sub
addb
adc
mov
jmp
hlt
in
add
cmp
scas
jle
push
add
lods
std
mov
pop
push
dec
dec
jae
int
rcl
mov
xchg
dec
decl
sarl
jnp
and
mov
test
add
out
aaa
scas
xchg
fcoms
fisubl
decb
in
mov
inc
jb
xchg
pushw
movsb
ret
imul
mov
inc
sbb
dec
sub
rcl
loope
movsb
mov
pop
loope
mov
sbb
jp
out
jbe
aaa
out
pop
mov
mov
fidivl
clc
fs
subb
xchg
cmp
push
dec
aam
dec
push
mov
sub
test
xor
fistpll
repnz
lret
lahf
ljmp
push
mov
idivb
iret
cltd
xchg
jbe
mov
or
cmc
nop
inc
in
push
cwtl
ror
sbb
ret
jne
sub
nop
std
icebp
scas
int3
jp
add
in
stc
scas
jmp
loop
dec
ret
shlb
pop
dec
push
mov
xchg
add
dec
out
les
jne
aam
cmp
sub
and
and
and
and
hlt
dec
mov
lret
add
push
jne
imul
sbb
sbb
sub
jo
sub
sub
dec
push
mov
sub
and
out
jle
jae
sbb
ljmp
rorl
js
in
div
sbb
add
icebp
mov
mov
pop
mov
xchg
addb
sbb
repnz
lods
mov
and
sarb
jne
emms
mov
xor
imul
pop
adc
pop
cmp
sbb
push
in
in
test
and
rorb
mov
cmp
cmp
call
push
dec
pushf
je
or
xlat
aam
int3
hlt
inc
loope
and
lds
pop
ds
jp
sbb
mov
iret
xor
das
and
les
sub
sub
stos
jp
xor
ja
mov
insl
in
fsubl
out
dec
fisubl
xchg
xchg
mov
push
pop
loopne
inc
iret
xor
test
pop
ror
push
insl
dec
cltd
jle
jns
pop
and
sbb
adc
es
movsl
jge
jbe
cmp
scas
cmpsb
out
test
int3
push
mov
mov
pop
sub
pop
rcr
xor
in
xchg
aas
jno
jno
ret
sbb
push
loop
js
gs
add
jae
push
fiaddl
dec
or
lods
aam
pop
mov
scas
fstps
dec
fwait
or
jne
adc
pop
jne
or
add
orb
xchg
loop
mov
pop
sub
xchg
xchg
out
cmp
leave
push
push
or
mov
push
orb
jno
je
mov
std
jmp
dec
aam
adc
inc
nop
mov
arpl
push
sahf
cmc
dec
xchg
mov
andb
pop
xchg
push
mov
and
in
and
iret
pushfw
jmp
repz
in
ficoml
and
jmp
arpl
xor
ret
push
cmc
repz
bound
lcall
mov
and
lret
add
push
dec
mov
jb
jmp
xchg
xor
imul
jns
and
lods
notb
pop
adcl
add
inc
cs
or
nop
test
clc
in
adc
jge
repz
mov
or
inc
and
inc
dec
outsl
data16
pop
pop
stc
aas
in
mov
adc
mov
xorl
pushf
addr16
shll
xor
push
xorb
xor
ds
xchg
movsl
inc
xchg
mov
push
xchg
mov
xchg
test
ss
ret
mov
mov
dec
or
in
push
arpl
pop
imul
pop
xor
out
lcall
and
filds
cmpsb
inc
int
repnz
aas
in
and
lea
push
fdivrs
sub
mov
mov
pop
push
dec
push
xor
fbld
ljmp
ret
sbb
fdiv
or
mov
push
mov
push
push
testb
dec
shl
loop
repz
negb
pop
negb
imul
sub
xlat
mov
aad
dec
fnstsw
dec
xor
dec
movsb
sbb
jo
jb
xchg
pushf
imul
pop
int3
pop
aam
int3
dec
mov
push
adc
cwtl
cmpsb
xchg
je,pn
std
jmp
push
xchg
call
fwait
pop
fs
fsubl
ret
jle
cltd
mov
out
cmpb
aaa
and
or
push
outsb
and
fs
addr16
xor
aam
or
adc
mov
lret
or
pop
imul
xor
pop
sbb
orl
adc
and
pop
aam
xchg
je
mov
mov
les
dec
push
xchg
ljmp
fdivr
int
mov
sbb
outsl
xor
xor
popf
ret
scas
sti
push
mov
pop
imul
insb
ja
cmpb
add
rolb
aas
fmuls
push
popa
das
lcall
pop
cli
jo
sub
arpl
es
inc
xchg
dec
push
xchg
scas
fcompl
xor
pushf
scas
push
pop
sbb
pusha
mov
xor
addl
mov
sub
jno
pop
mov
push
aaa
call
call
inc
jg
fs
and
push
jmp
addr16
fbld
ret
adc
fstpt
push
xor
bound
jb
lret
cmp
lock
jg
dec
in
cmp
inc
cld
aam
rolb
pop
push
lahf
arpl
lods
pop
add
sbb
xor
mov
into
gs
movsl
and
sarb
add
and
filds
aas
inc
or
sub
sbbb
sub
cmp
mov
dec
movsl
push
sub
jmp
cmpsb
fistps
shrl
not
sub
sub
push
fbstp
push
enter
iret
arpl
sahf
data16
inc
fnstsw
sbb
imull
lods
cmpl
dec
cs
push
inc
pusha
sarb
stos
add
and
add
sti
pop
mov
out
xchg
in
mov
jmp
out
xor
xchg
jg
or
cmp
js
or
and
push
enter
dec
inc
mov
push
push
iret
sub
into
lock
cmp
hlt
clc
inc
fwait
sub
mov
cmp
je
pop
xchg
push
pop
aaa
cmpb
push
loop
mov
cli
dec
repnz
or
gs
push
jg
orb
imul
mov
lahf
mov
lahf
xlat
out
cwtl
mov
loop
jle
push
xchg
push
mov
pop
incl
xchg
pop
std
out
rcll
sub
inc
in
arpl
or
test
addr16
mov
lahf
sub
jae
dec
mov
push
mov
cmpsl
adc
mov
adcl
mov
ss
ds
and
mov
mov
mov
ds
pushf
lods
xor
xor
imul
int
dec
jge
loopne
dec
scas
or
jnp
arpl
cltd
push
pop
mov
adc
fisubs
adc
jb
ret
inc
mov
inc
adc
mov
push
pusha
movsb
mov
pop
jle
les
out
push
fdivrs
cli
inc
aaa
mov
repz
negb
popf
adc
movsl
out
sahf
pop
imull
and
cmpsl
sub
out
jno
mov
dec
out
pop
subl
xor
movsl
mov
pushf
xor
or
loopne
in
mov
push
subl
out
jo
adc
enter
jecxz
mov
mov
testb
cmc
in
lock
adc
push
jbe
push
shl
aam
mov
cmp
jno
out
loopne
jae
in
jg
cs
xor
adc
loop
push
lods
xchg
mov
insb
mov
jb
cwtl
mov
dec
mov
xchg
in
jbe
je
xchg
push
sbb
or
cld
hlt
and
daa
push
stos
xor
outsl
dec
push
and
jge
sbb
push
std
cld
scas
addl
inc
nop
xchg
xchg
push
xchg
xor
and
adc
nop
cmp
out
pop
cld
jb
loopne
sahf
push
xchg
xor
add
jbe
dec
push
pop
mov
mov
xchg
adc
cmp
push
fstpt
sbb
jmp
ja
inc
mov
cld
add
nop
push
test
push
inc
ret
xor
or
das
push
stos
mov
cmp
jecxz
push
in
jbe
jo
mov
and
imul
mov
mov
pushf
jle
inc
test
inc
lcall
ret
sbb
mov
xor
xor
pop
mov
insl
mov
and
bound
adc
cli
cs
push
mov
or
into
sub
xchg
cmc
pop
fcomps
repnz
pushl
jg
or
jmp
xchg
push
lret
lret
fidivl
scas
jbe
pop
sub
dec
push
push
pop
in
jle
rcrl
subl
imul
nop
inc
jae
repz
jno
testb
test
mull
xor
pop
popf
and
int
out
xor
mov
cmp
test
cmp
lret
jecxz
xor
mov
and
ss
dec
sbb
ss
lcall
sahf
xchg
push
jmp
nop
cmpsb
fs
ds
subl
insb
in
outsb
xchg
dec
mov
pushf
mov
lds
repz
cs
addl
xchg
call
add
sub
enter
pop
mov
repnz
gs
rcrb
sbb
mov
fwait
cmc
jnp
int
dec
push
pop
aad
int3
inc
xor
cmpsb
pop
movsl
jns
jl
push
jns
in
dec
insb
stos
dec
data16
cmp
int
mov
xchg
or
stos
mov
xor
lret
and
divl
repnz
add
ja
push
mov
push
cmp
or
mov
and
es
stos
mov
jle
lcall
mov
out
test
mov
sub
mov
pop
jne
jp
jmp
fidivrl
or
imul
jp
jle
and
mov
mulb
jmp
repnz
push
pusha
jb
je
mov
mov
and
pop
xor
mov
aaa
and
xchg
add
cwtl
repz
negl
mov
icebp
nop
sub
or
cli
daa
rolb
bound
adc
sub
mov
push
popa
push
pop
test
and
push
mov
inc
push
inc
fistpll
mov
xchg
jg
cmpsb
xor
loopne
dec
inc
jns
sub
push
dec
sbb
mov
ss
push
cmp
jg
mov
sbb
fwait
stos
sub
mov
add
out
sbb
stos
inc
pusha
sub
adc
cmp
dec
push
jge
in
push
push
sbb
into
xlat
jae
mov
sub
push
into
push
push
pushf
lret
add
sbb
or
dec
xchg
js
stos
shrl
test
call
or
and
cmp
cli
ret
scas
or
cmpb
inc
jne
jecxz
cmp
lret
repz
pop
xor
pop
xor
scas
pop
shlb
testb
or
movb
and
cld
dec
adc
pop
lcall
test
pop
out
cltd
leave
mov
cmovno
andl
jae
cmp
push
dec
clc
sbb
pop
repz
cmp
ds
es
loope
pusha
je
dec
mov
mov
lods
mov
sbb
pop
sbb
adc
xchg
and
push
push
xchg
mov
mov
mov
pop
inc
pop
fsubrl
popa
scas
les
xchg
jg
rcl
insb
push
or
lcall
add
cmp
int3
ffree
sbb
jl
mov
push
mov
mov
int3
repz
outsl
mov
clc
add
pusha
push
pop
fcompl
loope
mov
jne
jl
inc
lret
add
sub
repz
scas
incl
cmp
out
icebp
sbb
aam
popa
fld
ret
loopne
bound
loopne
push
push
jle
aad
fisubl
pop
mov
scas
push
xchg
ret
das
aaa
push
pushf
push
push
insb
das
or
or
pop
enter
push
xor
js
mov
or
mov
jo
lahf
popa
xlat
mov
cmc
cmp
test
push
mov
shrl
mov
arpl
mov
or
inc
int
movsl
movb
and
mov
mov
cmp
arpl
jno
ja
test
call
inc
es
push
inc
imul
and
lock
push
xor
in
aad
adc
fimull
jno
jge
cmpsb
jecxz
int3
rcrb
cmp
cli
nop
outsl
mov
push
sbb
dec
mov
leave
mov
push
lock
xchg
xor
mov
mov
mov
xchg
xchg
dec
dec
jp
int3
jp
sub
and
int3
jecxz
add
cmp
adc
dec
push
jecxz
pop
iret
es
xchg
or
pop
js
js
jae
jns
addr16
pop
rorb
lahf
lods
xor
lret
lahf
jbe
rcr
aas
mov
movsb
xacquire
hlt
push
jmp
add
hlt
mov
bound
popa
iret
sbb
cmp
sub
movsl
loopne
mov
cmp
fbld
mov
out
mov
insl
sub
mov
pusha
dec
inc
shll
std
push
mov
add
test
mov
imul
mov
cmp
dec
jnp
pop
sub
mov
jae
outsb
dec
gs
out
fldcw
mov
mov
push
mov
cmp
sahf
push
jno
adc
icebp
lods
inc
out
push
stos
rol
movsb
ds
or
dec
mov
sub
subb
inc
xchg
mov
add
das
mov
repz
push
stos
jne
loope
repz
enter
ret
push
loopne
in
add
fs
pop
lods
pop
dec
fsubs
cmpsl
imul
mov
clc
inc
imulb
sbb
push
pop
rorl
and
inc
out
mov
add
aaa
lds
sub
cmpsl
add
mov
std
loopne
lret
sti
mov
adc
jo
mov
fldenv
enter
sbb
outsb
adc
adc
and
mov
sub
imul
mov
jno
mov
sbb
loop
je
enter
xorb
mov
wrmsr
jge
andb
pop
push
mov
icebp
data16
and
cmpxchg
dec
xchg
sub
sbb
cmp
xchg
pop
das
xor
imul
fists
inc
into
xchg
dec
xchg
jae
popa
jns
imul
cmp
notb
inc
aas
mov
dec
adc
jns
lds
in
push
jns
nop
jle
test
stc
and
rorb
adc
rclb
xor
pusha
mov
lods
xchg
out
add
and
jmp
push
inc
out
mov
pop
and
lret
jo
pop
scas
imul
addr16
sub
lret
es
push
push
ljmp
jns
mov
das
aad
inc
mov
cmp
inc
ffree
push
popf
dec
mov
out
xchg
jo
cmp
insl
add
jl
lods
loopne
sub
pop
out
incb
sub
mov
cli
shrl
into
ljmp
ss
pop
mov
jbe
cwtl
jl
push
push
imul
out
add
jge
icebp
inc
lods
xchg
addr16
scas
mov
mov
std
adc
decl
pop
ret
push
sarb
in
add
xor
xchg
sbb
sub
xchg
adc
xchg
loopne
aas
aad
push
mov
add
sbb
push
and
inc
mov
adc
mov
mov
ja
xchg
push
dec
imul
and
jns
call
lahf
addr16
movsl
mov
jl
decb
xor
or
clc
insl
out
add
sbbb
pushf
js
inc
jle
scas
xchg
lret
dec
in
dec
push
decb
lret
or
mov
xchg
clc
sarl
and
sbb
mov
mov
push
divl
inc
mov
lods
lcall
lcall
ret
fidivrs
mov
das
enter
jg
daa
pop
fdivp
hlt
mov
loopne,pt
fdivrl
add
std
and
xor
ror
lods
jge
dec
cmp
fisubrl
mov
adc
out
es
bswap
or
cmc
aaa
sahf
popf
dec
lods
push
sbb
pop
push
nop
cmpsb
dec
push
xlat
insb
xchg
xlat
xchg
cs
dec
pop
sub
jo
pop
int3
add
lods
testl
inc
and
xchg
and
dec
mov
insl
dec
ljmp
frstor
ret
scas
in
outsl
inc
inc
sub
ret
inc
cmpb
mov
enter
imul
or
sahf
xchg
jb
mov
pop
add
in
push
ljmp
test
lods
movsb
imul
cmpsl
rol
pusha
push
add
mov
sahf
mov
and
leave
scas
mov
sarl
or
lcall
das
ja
addb
in
out
jne
jg
or
les
add
cmpsl
xchg
jmp
push
or
add
pop
jecxz
inc
scas
movsb
jl
ss
fcoml
sub
fsubp
popf
jne
dec
addr16
hlt
adc
lcall
ja
inc
jns
jne
test
lods
out
mov
dec
xor
and
or
mov
jno
fadds
mov
sahf
dec
xchg
xchg
ljmp
or
inc
fld1
ret
push
aam
js
in
or
mov
cltd
sti
out
and
jecxz
mov
test
ja
stos
and
js
inc
mov
repz
cmp
clc
daa
xor
adc
or
movsb
dec
push
inc
jae
sub
rorb
xchg
int
pop
pop
out
lock
mov
cmpl
je
ret
pop
shlb
leave
clc
aam
pop
inc
fnstcw
xchg
xor
cmp
push
sbb
in
sbb
pop
shrb
cmpsl
push
sub
popf
stos
add
out
mov
popf
cltd
sbb
mov
gs
jecxz
sti
test
subl
or
lds
adc
or
stc
cld
lahf
xchg
test
out
xor
sbb
fstp
jg
sub
adc
jecxz
mov
jns
popa
movsl
repnz
add
outsl
leave
movl
jnp
test
nop
les
rcrb
sar
inc
xor
ret
xchg
push
inc
lahf
arpl
int
jo
jmp
decl
mov
inc
pop
push
outsl
mov
out
hlt
stc
in
out
sbb
and
jle
hlt
jecxz
fsubr
jle
add
jp
push
pop
or
lods
test
imul
inc
mov
insb
push
bound
sub
fcomps
or
into
cmpb
cmp
roll
scas
push
adc
inc
pop
or
out
lods
not
into
in
outsl
and
adc
ss
into
mov
jns
push
inc
sub
or
cmp
jmp
and
cmp
scas
loopne
and
pop
aad
imul
shrb
xor
jecxz
shr
pop
test
sbb
je
or
aas
idivl
push
jmp
add
or
dec
and
cmpsl
in
enter
movl
dec
idivb
leave
es
add
mov
test
inc
jnp
cmc
xor
add
dec
fwait
jo
ret
out
push
imul
and
dec
xchg
xchg
iret
add
ja
jmp
xchg
mov
call
xchg
ficoml
push
stos
adc
icebp
dec
imul
mov
dec
mov
fwait
aas
and
dec
sub
imul
sub
adc
stos
cmc
or
stos
add
dec
or
in
cvtps2pi
cmp
adc
movd
insl
pop
and
pop
xchg
fldenv
in
push
nop
movsl
xor
push
or
push
and
arpl
push
push
dec
pop
ds
cmp
cld
rorl
add
xor
xchg
push
gs
sub
xchg
add
sbb
test
aam
add
into
inc
fimuls
bound
mov
cmp
fists
test
icebp
rcl
insb
fucomp
fdiv
leave
xor
and
sti
dec
je
sbb
sub
mov
in
push
out
and
mov
test
data16
imul
iret
mov
mov
cmp
mov
ljmp
pop
adcb
add
jcxz
add
fnstsw
add
sbb
negb
jae
jae
lods
xchg
rcll
xchg
int3
insb
stos
xchg
in
fwait
pusha
mov
mov
jnp
inc
or
push
dec
in
fwait
sbb
jb
sbb
fsubrl
or
popa
scas
out
xchg
lret
mov
not
push
cmc
ret
jbe
cmp
outsl
dec
test
xchg
sbb
xchg
cmp
loop
push
imul
cli
cmpsb
popf
push
test
rorb
push
mov
dec
adc
sbb
es
leave
mov
loop,pt
lcall
dec
repz
pushf
clc
enter
add
mov
mov
push
jg
mov
pop
hlt
iret
push
xlat
icebp
mov
sar
inc
mov
cmp
mov
and
outsl
pop
aam
xor
mov
push
repz
sub
xchg
fwait
xchg
dec
push
out
loope
aas
and
in
ficoml
inc
outsb
insb
ret
cld
popa
dec
jne
push
pop
mov
xchg
push
pusha
fnstenv
adc
in
cmp
popl
cmp
add
sub
mov
pop
mov
xchg
mov
and
out
push
sub
mov
xchg
inc
sarl
add
or
pop
lds
pop
ret
cmpsb
sub
int
mov
sub
repz
std
xor
push
mov
cmp
cs
jge
pop
adc
shll
xchg
fwait
adcb
cmp
adc
xchg
aaa
cmp
mov
jnp
in
pusha
dec
jmp
test
mov
int
shlb
dec
fwait
incb
adc
gs
cmp
loopne
cli
popa
adc
in
sub
inc
add
mov
mov
sbb
jl
rol
insl
mov
fisubs
dec
fstps
jge
cmp
cmp
clc
mov
push
push
lret
lret
mov
xchg
xchg
loop
in
sbb
mov
mov
enter
movb
dec
mov
lds
test
xor
push
dec
mov
and
add
imul
insl
sbb
add
add
stos
sbb
cmp
fidivrs
xor
push
rcl
inc
out
outsl
leave
mov
pop
repnz
ljmp
push
dec
les
iret
push
jno
xchg
stos
dec
insl
mov
push
addr16
xchg
cmpsb
std
push
dec
addl
cltd
clc
and
mov
xchg
push
gs
cmp
cmc
test
lea
pop
cmc
rcrl
call
mov
test
stc
fwait
sub
pushl
subl
ror
gs
dec
cmp
dec
push
les
push
jnp
int3
dec
and
aad
lods
mov
fs
inc
mov
lods
mov
dec
enter
xchg
mov
cwtl
enter
mov
cltd
cmp
push
ret
inc
das
ss
repnz
mov
pop
aam
jl
or
fisubs
push
and
cli
loope
add
mov
and
test
mov
out
push
or
pop
into
dec
jmp
sub
les
movsl
sbb
sub
fwait
push
push
popf
sbb
js
push
sti
mov
xchg
sbb
mov
sub
pop
mov
pop
mov
mov
mov
enter
mov
xor
lock
popf
js
inc
cltd
sub
inc
lods
mov
pop
test
xchg
or
jg
or
imul
inc
push
push
out
push
push
rcrb
negl
movsb
faddl
cmc
cmp
pop
fwait
jle
xchg
mov
jp
fisubrs
outsl
cs
xchg
insl
jl
xchg
lea
jmp
js
fnop
icebp
mov
rorb
push
aaa
outsb
jne
popf
insb
test
add
xor
jnp
push
in
fidivs
fstpl
jl
jge
loope
cmc
fistpl
imul
mov
adc
std
fisubl
cmp
mov
ret
rcrl
jb
cmp
cmc
fldcw
cmp
loopne
fsubrl
mov
scas
pop
daa
fcmovnbe
call
das
xchg
mov
lret
fwait
cmp
push
mov
lock
das
xor
add
out
sub
pop
mov
jmp
sub
xlat
jae
nop
dec
xchg
pop
in
aaa
mov
addr16
inc
lahf
pop
in
xchg
or
mov
mov
fistpll
xor
popf
ss
cs
xchg
mov
sub
popa
int
mov
pop
pushf
sub
or
mov
mov
fnstenv
rcrl
or
outsb
repnz
ficoml
js
int3
xchg
hlt
sbb
std
and
and
lcall
jmp
pop
pop
jl
popa
jmp
jmp
int3
and
fcompl
out
mov
int
and
sub
sub
xchg
out
pop
std
adc
inc
xchg
jns
fwait
sub
sbb
jge
scas
les
out
sarl
mov
sub
adc
inc
subb
je
into
xchg
gs
je
movsl
jge
fs
sbb
add
cmp
ret
in
call
xchg
js
fimull
and
into
inc
hlt
pop
cwtl
adcb
mov
mov
popf
out
add
data16
out
inc
pop
sub
fsubrs
lock
push
stos
ss
out
js
ret
xchg
pop
stc
mov
popa
fistl
cmp
out
or
in
cmp
jl
and
inc
jne
enter
cmp
lods
shlb
mov
pop
sub
mov
in
std
addr16
push
mov
pop
jae
pop
test
push
mov
pop
movsl
jbe
rcrb
loopne
xor
mov
popf
int
rcrb
outsl
call
sub
sub
jno
ret
jno
mov
xchg
push
xor
xchg
fiadds
imul
repnz
mov
lods
mov
das
int
bound
pop
mov
inc
push
sbb
inc
pushf
pop
and
mov
xor
imul
sub
rcll
cmp
aas
in
in
jge
mov
loopne
push
ds
roll
and
mov
xchg
into
push
call
fsqrt
sbb
cmp
fiaddl
and
dec
aad
fidivs
ret
sahf
xor
xchg
adc
adc
movsb
mov
fwait
aas
jmp
or
iret
adc
push
cld
cld
clc
leave
scas
xchg
push
xor
sbbb
jb
pop
mov
xchg
fmuls
movq
sub
mov
in
data16
or
bound
fisubrs
nop
inc
imul
sub
and
scas
dec
and
mov
ret
xchg
cmpsb
lods
int
ss
push
jmp
adc
sbb
andb
push
push
test
out
xorb
ret
lock
xchg
movsb
dec
lods
dec
fsubr
ficoml
mov
jae
pop
ljmp
out
jns
jo
jae
add
pop
jo
fld
push
int3
jns
fdiv
movsl
adcl
repz
mov
out
mov
dec
dec
dec
aaa
jb
insl
push
xchg
or
subl
addr16
xchg
push
push
xchg
fucom
inc
sbb
sbb
mov
dec
xchg
sub
imul
mov
pop
push
xor
jp
fbstp
add
pop
dec
scas
mov
lods
test
lock
mov
or
outsb
add
test
lret
int
push
push
loop
or
out
mov
inc
int3
shrb
push
mov
dec
fcom
outsb
inc
test
stos
cli
je
idiv
ret
shlb
jb
xchg
pop
js
aad
pop
loopne
pop
cmc
lds
lcall
std
mov
movsb
iret
pop
xlat
adc
push
or
ficoml
stos
jl
outsb
enter
out
scas
fisttpll
nop
adc
mov
dec
xor
pop
lds
sbb
shr
mov
data16
adc
out
sbb
cld
loope
sbb
xchg
cmp
xchg
sbb
dec
mov
test
push
or
add
bound
scas
jbe
ljmp
in
adc
test
add
jb
insl
adc
lods
jg
xor
mov
dec
nop
es
jne,pn
xor
repnz
sub
clc
cwtl
jg
cmc
jb
les
es
pusha
int3
aaa
nop
cld
jo
nop
mov
bound
in
push
daa
sbb
nop
add
scas
out
push
jg
sub
xor
mov
push
divb
xchg
lcall
xor
mov
lods
lds
cmp
mov
jg
jae
pop
stos
mov
test
xchg
cmp
mov
cs
test
and
sbb
xor
xlat
jg
push
psubsw
andl
loope
loope
mov
pop
jmp
std
and
cmpsb
rol
ljmp
and
int
or
xchg
sub
xor
xor
jbe
sub
sbb
push
sub
xchg
jne
aam
stos
js
sub
icebp
dec
push
ds
mov
inc
lods
sbb
out
les
incb
push
cs
jp
mov
add
je
xor
push
dec
sub
push
pop
sbb
and
and
pushf
loopne
push
or
sbb
inc
cmp
and
mov
pop
and
ja
call
mov
mov
sbb
push
ljmp
fnstsw
scas
xorb
inc
dec
fucompp
fcmovbe
xchg
stos
arpl
into
pop
lods
dec
jb
xchg
or
xchg
adc
cmp
shrl
push
xor
and
xchg
mov
mov
enter
jbe
rcll
je
pusha
mov
dec
add
fsubrs
ss
mov
lods
pushf
stc
stos
cmp
push
xchg
iret
ljmp
lahf
add
ret
ficompl
dec
loop
adc
es
push
dec
jmp
cltd
mov
test
loope
icebp
mov
cld
pop
pusha
repnz
mov
lea
push
jmp
sar
sub
bound
xchg
or
adc
push
dec
mov
out
hlt
rolb
jo
orl
add
push
xchg
push
mov
stc
ss
and
pop
xor
jae
add
imul
nop
popa
sub
aaa
jnp
pop
hlt
push
pop
mov
fistl
mov
jmp
pop
xchg
xor
mull
lods
inc
lcall
mov
arpl
cmp
insl
repz
mov
leave
je
in
jns
dec
lock
or
inc
mov
xchg
pop
arpl
notl
aaa
cwtl
arpl
dec
push
les
imulb
iret
filds
out
mov
xor
pop
or
sub
mov
int
adc
test
imul
rcrl
add
pop
repnz
pusha
or
xor
shrl
dec
push
jp
adc
fidivrs
mov
imul
push
pop
fcomip
dec
rcrl
add
pusha
movsb
sbb
into
ds
test
mov
add
mov
dec
test
lret
sub
sbb
xchg
jns
mov
mov
lret
jb
fisttpl
cs
adc
cmp
lcall
mov
stc
adc
jl
sbb
dec
mov
stos
sub
push
mov
push
das
pop
jb
out
xchg
out
push
xchg
xor
test
and
mov
and
add
fldcw
push
test
add
aas
xor
sub
xchg
dec
lds
call
cmp
movsl
mov
ja
popa
pushf
add
mov
incb
xor
iret
adc
mov
adc
shl
lock
xor
lcall
mov
jnp
inc
and
cmp
add
sti
sub
cs
sahf
jmp
pop
mov
movsl
cwtl
add
outsl
pop
mov
sub
pop
pushf
adc
xchg
ds
cli
push
sub
scas
sub
and
adc
jb
icebp
lods
dec
out
inc
sub
adc
adc
ljmp
bound
push
xor
and
sbbl
icebp
popa
xorb
push
es
or
loopne
lods
ss
subl
pusha
jbe
adc
pop
sub
cld
in
add
mov
adc
pop
cmp
jecxz
fstpt
ja
test
push
cmpsl
lret
sarb
xchg
jnp
sub
mov
jecxz
mov
sbb
pop
das
dec
cld
push
fbld
orb
xor
popa
jo
leave
pop
fld1
sub
mov
mov
xchg
repnz
cmp
mov
popa
and
xchg
inc
adc
lret
dec
shlb
inc
pop
imul
jne
test
hlt
fcmovb
loope
outsb
inc
pop
pop
je
lret
pop
xchg
loope
movsl
jp
into
pusha
dec
in
and
push
roll
mov
or
clc
cli
dec
int3
std
xor
push
out
popf
cmp
cld
scas
xchg
nop
les
repnz
popf
adc
testl
lods
xor
mov
adc
daa
fisttpl
cmp
or
jmp
cs
stos
imul
adc
xchg
cmp
sbb
mov
and
int
aaa
lock
xlat
adcl
pop
mov
popf
push
push
dec
adc
cmp
test
out
pop
or
or
sbb
sub
mov
hlt
addl
arpl
cmp
sub
stos
lods
cmp
sub
dec
jmp
test
or
xchg
sbb
xchg
mov
add
int
outsl
jge
fimull
insb
adc
cmp
push
xlat
mov
test
icebp
fildll
jo
inc
ret
lahf
mov
nop
inc
cld
rcrb
sbb
arpl
dec
jae
pop
mov
cmp
arpl
push
adc
bound
loop
scas
outsl
int3
jle
sub
lret
jecxz
or
mov
lcall
cli
cmc
mov
mov
stc
xor
jle
sarb
push
lods
pop
add
sub
mov
inc
inc
outsl
xor
insb
aas
xchg
xor
or
aas
xor
lret
imul
push
adcl
jg
jne
mov
sbb
movsb
mov
or
inc
std
ljmp
sub
shrb
faddl
push
cmp
and
pop
out
jmp
sub
cwtl
mov
into
mov
jae
dec
xchg
scas
js
add
jne
adc
add
ja
cmp
addr16
add
inc
pop
nop
insl
jns
pop
sbbb
out
or
test
mov
sbb
cmp
mov
jae
sub
mov
fiadds
scas
xchg
loopne
add
gs
jb
dec
dec
xor
fisttpl
out
mov
xor
fildl
shll
call
mov
rcll
xchg
rol
jb
sarb
out
pop
add
out
pop
data16
add
mov
das
sub
scas
jg
cmp
mov
pop
imul
pop
and
or
dec
add
andl
mov
andb
les
orl
iret
adc
cmp
cmp
push
mov
cld
lods
adc
jmp
pop
std
xchg
stos
mov
or
into
call
pop
jl
jb
cs
fmul
sub
std
and
or
int
and
or
cli
lcall
popf
out
mov
bound
mov
push
fcoml
xor
fisubrs
outsl
dec
xchg
or
or
xor
js
xchg
in
ret
lea
mov
mov
mov
adc
iret
xchg
inc
mov
inc
mov
ret
repz
hlt
mov
insb
shll
sbb
mov
inc
lcall
sub
mov
push
flds
lcall
hlt
cmp
mov
stc
mov
cmp
mov
and
sbb
testb
in
mov
cmpsb
adc
icebp
inc
push
or
jge
std
adc
fbld
inc
mov
in
iret
xchg
scas
mov
ss
mov
js
insl
jmp
and
dec
loopne
test
aas
adc
int
xchg
outsl
dec
loopne
sbb
jb
adc
in
mov
pop
outsb
add
jl
jg
cmc
xor
shlb
push
and
jp
mov
dec
daa
xchg
shlb
cmc
sbb
sbb
cmp
mov
in
cmp
ss
dec
jnp
cli
sub
lahf
andl
add
push
jb
and
ja
jne
cwtl
aam
out
xchg
mov
mov
cmp
xchg
bound
inc
test
sub
leave
add
mov
xor
mov
test
mov
dec
jns
mov
rclb
lahf
das
push
and
sbb
fndisi(8087
sbb
or
ret
fidivl
add
aaa
lret
nop
or
mov
push
or
sub
arpl
in
fs
les
lock
cmp
jmp
push
push
adc
jmp
pop
xor
pushf
jg
sbb
sbb
or
into
sbb
push
dec
add
inc
test
adc
mov
xor
xchg
stc
cld
scas
data16
sub
jae
sti
cltd
or
xchg
sub
cmp
dec
ljmp
imul
aad
or
outsl
stc
jo
jae
sbb
mov
sbb
aas
in
scas
push
inc
arpl
pop
jne
leave
push
adc
jle
jp
cmp
mov
inc
add
mov
pusha
pop
sub
xor
jp
dec
aas
add
cmp
out
outsb
aad
push
ljmp
jmp
push
pop
lahf
jo
stc
cmp
hlt
xchg
cmp
pop
pop
adc
xor
inc
jmp
xor
inc
daa
cmp
outsl
jae
sar
dec
sub
mov
add
rcrb
mov
les
sbb
and
fnsave
jge
dec
jle
sub
cmpsb
out
cmp
lcall
jmp
cltd
xor
mov
mov
xchg
dec
lods
push
and
jle
and
scas
mov
adc
fildl
or
ret
mov
mov
cltd
add
pusha
bndstx
mov
out
add
mov
mov
jge
aaa
mov
mov
lds
dec
ds
inc
repnz
lods
iret
fistl
std
call
jle
adc
add
jnp
xorl
pop
out
mov
push
push
cmp
cmp
xchg
negb
in
xchg
jle
mov
mov
lods
clc
dec
aas
cwtl
movsl
inc
push
inc
cwtl
outsl
mov
inc
ret
mov
xor
js
lahf
rep
mov
cmp
dec
fcmovb
bound
mov
sub
jne
das
aad
push
xor
mov
mov
rorb
sbb
inc
in
sbb
add
fldenv
xchg
push
pop
rorb
adc
jg
sbb
pop
lea
push
jmp
loopne
or
push
jle
test
lret
loopne
je
scas
mov
orl
inc
out
inc
pop
enter
sub
push
shl
les
mov
shrb
mov
ficomps
out
push
xchg
adc
js
and
push
jnp
cmpsl
sub
shlb
dec
adc
test
inc
aaa
pop
shr
pop
xchg
sbb
popf
aaa
inc
cld
cltd
cld
jbe
fs
xor
adc
mulb
add
leave
lods
fimuls
push
icebp
iret
call
ja
xor
cli
xor
repnz
sahf
fcmovu
pop
call
movsl
mov
pushf
jle
outsl
in
les
rolb
push
lret
xchg
fstpt
add
push
les
jne
inc
popa
jae
cmp
ja
push
adc
xchg
jne
sbb
xchg
test
fwait
out
aaa
inc
sub
sbb
mov
push
xor
scas
inc
insb
mov
rorb
pop
jg
aas
xor
mov
pop
sbb
dec
sbb
jo
dec
arpl
bound
or
repz
mov
mov
adc
push
aam
aad
mov
int
inc
lock
and
or
rorl
inc
cmp
outsl
adc
inc
rcll
je
lahf
dec
call
test
mov
mov
stos
jle
and
daa
jmp
adc
adc
pop
fucomp
test
pop
fistl
das
xchg
pop
ficoml
sti
mov
call
and
fwait
or
imull
test
andb
push
fs
fstp
cmp
ljmp
outsl
adc
test
dec
out
test
add
popf
cwtl
xor
jb
pop
fidivrl
lds
and
mov
ss
int3
adc
gs
jg
mov
and
cmpsb
adc
ljmp
aam
pop
xchg
sbb
lret
lods
repz
mov
or
mov
xchg
and
jns
xor
hlt
aas
cli
push
mov
shlb
repz
lds
add
pop
jp
cmp
cwtl
repnz
shll
jmp
cmp
lods
sub
cld
shlb
cmc
mov
xchg
push
and
pop
rcr
gs
test
movsl
jle
push
push
xchg
inc
clc
test
sub
lods
test
in
es
add
push
data16
int3
fcomps
cmpsb
xchg
popf
jbe
add
jbe
fcoml
fistps
fidivrl
mov
dec
fadds
push
pop
inc
mov
mov
imul
shlb
cltd
jp
in
mov
or
hlt
push
jge
bound
sbb
fsubl
cmpsb
and
test
in
and
in
push
lret
cmp
sbb
jb
mov
pop
nop
inc
cmp
xor
mull
and
in
cld
or
cmp
negl
cmpsb
xchg
pop
ds
enter
movsb
insl
xor
dec
cmp
arpl
push
or
push
aam
push
dec
inc
mov
sbb
push
dec
outsb
shrb
push
push
insb
imul
fisubs
mov
add
hlt
and
and
or
xchg
mov
xchg
mov
dec
mov
paddb
jge
sbb
sbb
pop
imul
add
jbe
lock
imul
jbe
and
cli
lahf
sbb
push
xchg
or
mov
cs
outsb
or
arpl
int
nop
add
sbb
jne
insb
add
daa
pop
add
repnz
iret
cltd
mov
mov
mov
jle
adc
xchg
inc
rorl
pop
jns
adc
mov
mov
movsb
jbe
add
adc
mov
mov
dec
xchg
shll
int
cmpl
cli
or
mov
repnz
or
cltd
mov
jno
jp
mov
into
jne
mov
cltd
lret
xchg
push
out
xor
xor
ljmp
and
xchg
sbb
cmp
sub
aas
adc
in
or
adc
nop
fnstsw
adc
sti
sub
test
lods
rcr
push
push
adc
dec
rorl
dec
in
sub
popf
dec
add
cmp
das
stos
fldenv
aad
add
mov
pop
cmpsb
or
fisubrl
addl
sub
xlat
rolb
out
clc
sbb
insb
mov
or
adc
aam
mov
ret
xlat
pop
cli
and
enter
rclb
sahf
xchg
out
pop
rolb
mov
inc
addr16
xor
cmp
popa
sub
add
mov
cwtl
mov
shrl
arpl
jg
cmp
shlb
xchg
icebp
sbb
mov
pop
and
dec
pop
push
in
ret
jae
loop
or
lret
inc
or
sub
mov
pusha
ljmp
xorb
sbb
pop
jle
stos
es
xchg
lret
sub
mov
dec
arpl
xchg
repz
lods
sbb
stos
jp
fstl
push
in
pop
adc
push
or
and
aaa
add
out
lret
pushf
push
adc
lret
adc
fwait
pop
fidivrs
inc
in
popf
shlb
xchg
mov
es
xor
adc
inc
inc
push
or
test
fiadds
mov
enter
xchg
mov
dec
dec
mov
enter
hlt
repz
inc
mov
in
adc
in
cmc
dec
popf
pop
insl
push
xchg
inc
insb
in
insb
enter
mov
xor
ss
inc
call
xchg
mov
pusha
imul
fnop
jae
incl
or
loopne
dec
push
sub
jo
mov
sahf
sbb
adc
lret
add
cli
mov
xlat
pop
push
pop
cmp
fadds
in
jbe
hlt
sub
and
fcmove
aam
adc
lcall
scas
lret
jns
and
aam
sbb
and
loope
cmp
or
hlt
pop
jae
mov
push
xor
pop
lret
mov
cli
in
pop
jmp
cmc
in
filds
adc
jno
xchg
test
cmp
mov
vunpckhps
adcb
adc
sbb
repz
inc
dec
lahf
adc
or
sbb
cmpsl
mov
mov
mov
lcall
cmp
dec
xor
mov
lods
pop
mov
rclb
mov
cld
shrb
mov
lcall
cmp
mov
pop
pop
cmp
lds
ret
dec
test
stc
cli
mov
mov
mov
leave
cmp
loopne
fsts
mov
or
loopne
and
xor
sbb
scas
les
insb
pop
lods
dec
in
add
pop
outsl
jbe
xlat
call
inc
stos
mov
xor
mov
adc
xor
push
jp
and
pop
dec
sti
cmp
pop
jg
lret
shlb
inc
push
or
cmpsl
and
mov
jle
jo
pop
xchg
insb
pop
jb
in
or
sub
add
das
test
push
es
xlat
mov
cltd
pop
mov
ljmp
test
jnp
jns
cmp
add
pop
movsb
push
mov
push
push
lea
cmpsb
xorb
test
leave
or
into
add
call
dec
hlt
or
sub
mov
mov
add
mov
pop
lods
adc
sbbb
jae
jae
jge
jge
stc
dec
mov
xchg
stos
mov
mov
sbb
mov
cmp
sbb
sub
inc
popf
js
cmp
hlt
jbe
sbb
das
or
cmc
mov
sub
dec
pop
or
out
mov
fwait
cmp
add
jnp
movsb
mov
jns
pop
adc
lcall
mov
lahf
push
test
cwtl
ja
negb
lods
and
jno
dec
mov
xor
out
mov
xor
jne
push
xlat
pop
mov
xchg
inc
inc
scas
leave
sub
mov
mov
jno
push
pop
mov
stc
cmp
int
lcall
jae
xchg
pop
dec
ret
inc
inc
add
sbb
jae
jl
sub
icebp
xor
jmp
push
mov
sub
or
lods
push
adc
nop
dec
jo
mov
mov
inc
mov
jmp
jne
and
sti
sub
mov
insb
sub
jbe
jl
dec
xor
aad
dec
mov
test
sahf
or
in
or
scas
imul
addr16
fwait
cld
push
imul
in
test
mov
das
cmpl
mov
adc
mov
inc
pop
bound
movsl
dec
jbe
mov
pop
jl
mov
mov
xchg
pushf
or
jns
std
pop
pop
xchg
dec
cltd
fs
lods
rol
fidivl
mov
mov
add
imul
sbb
jp
mov
jb
add
xchg
cwtl
rclb
sbb
mov
cli
sbb
cmp
push
add
inc
cs
and
test
stc
xchg
je
xor
or
fbld
push
ss
das
arpl
aas
js
sbb
in
shlb
xchg
pop
nop
lods
sub
mov
jo
out
pop
sahf
dec
popa
je
dec
in
cmp
jns
out
mov
imul
adc
aad
test
jnp
repnz
cmp
test
xor
pushf
xor
fs
pop
movsl
insb
call
xchg
scas
adc
pushf
add
insb
add
mov
pop
add
mov
push
fadd
out
sub
jecxz
sub
hlt
xor
push
fwait
or
adc
les
mov
mov
add
adc
pop
push
in
ret
ficoml
outsb
xchg
push
ss
fwait
pop
lock
and
xchg
lods
add
mov
mov
push
mov
int3
xlat
je
xchg
shlb
sub
iret
movsb
inc
push
pop
popa
cmp
inc
mov
xchg
dec
push
sub
sub
and
cmp
fs
cld
ss
mov
rorb
sub
aad
ljmp
xor
movsl
jecxz
icebp
jns
icebp
push
jecxz
and
int
push
adc
xchg
cmp
adc
fimuls
add
mov
mov
repz
add
clc
push
xchg
inc
sub
inc
mov
ja
std
int
mov
xor
push
ja
xchg
fistps
sub
subb
mov
push
jecxz
fucom
push
cmc
mov
xor
jp
cld
xchg
or
jg
xor
adc
mov
dec
sti
es
enter
mov
cmpsb
popa
cmp
fnstenv
lds
div
push
shll
cmp
das
fbstp
xor
in
mov
and
and
ss
lock
mov
or
xchg
stc
inc
sar
clc
sbb
jae
testb
jnp
cmp
jns
fcomps
fcmovnb
xor
negl
pusha
pop
push
in
sub
and
enter
inc
jnp
ss
mov
fsubr
inc
xchg
jmp
popa
addr16
fcompl
push
mov
ss
pushf
jno
cmc
rcrb
flds
xor
jns
test
xorl
push
or
dec
adc
mov
xor
fstpt
push
roll
stos
adc
out
sub
scas
daa
or
scas
subb
aam
jmp
lods
mov
adc
dec
sbb
in
pushf
leave
mov
inc
aam
loopne
insl
mov
pop
std
fcoml
aam
sbb
jno
sbb
mov
loop
push
dec
sub
xor
and
inc
jl
movsb
aas
fsubrl
std
ja
pop
rolb
cmp
xor
push
cmpsl
scas
push
sbb
stos
out
stc
aas
xor
fistpl
lret
int
dec
cld
fistpll
fistps
scas
mov
int
out
sbb
lret
cmp
pop
push
sbb
add
pop
pop
pusha
in
int3
sti
cmp
adc
lds
divl
mov
inc
hlt
imul
test
std
loopew
mov
push
ja
aaa
in
pusha
add
sbb
aaa
ret
stos
in
movsb
outsb
enter
pushl
mov
loop
sub
orb
sahf
mov
lods
mov
imul
xchg
push
test
sahf
mov
push
sub
and
dec
sub
ljmp
aas
and
pushf
fcoms
inc
and
out
sub
add
jmp
icebp
xorl
jns
leave
inc
xchg
aad
pushf
mov
mov
iret
loopne
scas
rorb
lock
pop
fs
loop
sub
jbe
adc
or
movb
adc
pop
add
mov
aad
roll
push
lods
mov
inc
jo
jg
mov
cmp
dec
arpl
jp
pop
add
lret
mov
lods
sahf
movsl
data16
sub
std
dec
pushf
in
cmp
or
test
add
jae
pop
jp
inc
cmpsb
icebp
jl
aad
mov
adc
and
pop
or
xlat
ja
bnd
dec
arpl
loop
icebp
dec
and
jb
ficompl
cli
push
fcomps
hlt
insb
sahf
popa
cmp
fwait
add
mov
das
mov
xor
ja
adc
rclb
sub
add
xor
loop
pop
sbb
pushf
cli
hlt
pop
xor
lods
jecxz
shll
xor
or
lock
ret
push
setp
push
mov
outsl
jp
fwait
inc
loop
dec
test
dec
add
sub
inc
fstps
cld
and
lds
xor
int3
sbb
adc
mov
lldt
sub
test
insb
aad
addr16
push
push
das
jne
fldt
cmpb
mov
fildll
fdivrl
sub
sub
push
fdivrp
fcom
into
sti
scas
pop
jbe
push
arpl
in
lcall
testb
add
and
outsl
pop
pop
sahf
pop
mov
fstpl
mov
jmp
jle
in
push
cmp
push
out
call
not
popf
pop
call
mov
dec
std
push
enter
in
shlb
or
dec
push
adc
andb
popf
xchg
jmp
mov
xchg
mov
sbb
idivl
mov
psubd
insl
lds
lret
xor
push
xchg
lahf
jae
or
ret
mov
repz
mov
lock
lods
mov
into
xchg
into
push
test
xchg
sti
out
sbb
pop
xor
sub
call
dec
dec
push
les
add
jne
lret
push
jge
xchg
dec
xor
jns
ret
add
sbb
cmp
sbb
orb
xor
popa
sbb
aaa
adc
lret
or
mov
cmp
pushf
pop
push
ljmp
mov
xlat
sbb
dec
adc
or
push
mov
xor
jmp
add
idiv
cmpsl
jmp
ss
pop
inc
add
out
mov
mov
cmc
sub
add
xchg
xchg
jp
int
jns
ljmp
jbe
shlb
cwtl
shrl
or
mov
pop
dec
mov
cmp
shrl
pop
fidivs
mov
adc
shll
lock
das
stos
orl
aam
lcall
frstor
pop
jo
lods
das
inc
out
mov
shlb
jae
sub
fs
xor
xor
out
inc
jl
shll
call
cmp
jne
nop
arpl
xor
inc
das
movsb
sbb
adc
push
or
shll
push
xorl
xchg
in
sbb
pusha
pop
and
jecxz
lcall
sbb
dec
sub
popa
popf
or
fisubrl
or
jns
mov
test
das
xor
test
xor
add
sub
mov
lret
mov
imul
les
pop
out
dec
and
adc
cmpsl
loope
xor
fstpt
mov
push
dec
cmc
repz
sub
mov
les
pop
enter
push
cli
nop
sub
push
subl
test
aad
jg
popa
andb
lea
adc
imul
jge
mov
mov
inc
pop
jecxz
out
mov
push
fwait
pop
mov
iret
pop
data16
adc
cmp
je
int3
in
push
push
lcall
arpl
ficoms
sahf
jae
ds
addb
xchg
push
orb
jecxz
cmp
rorl
dec
inc
push
sub
loopne
adc
cmp
add
cmpsl
rep
repnz
xchg
dec
mov
push
pop
push
scas
enter
fabs
addr16
pop
mov
in
pop
push
and
loop
and
jge
outsl
xchg
or
fcmovb
adc
add
adc
inc
fstpt
inc
cmovg
cltd
and
and
sub
mov
mov
mov
je
jp
sbb
mov
stc
cmc
or
and
inc
leave
fcoms
ss
jne
mov
inc
popf
adc
rcll
jmp
enter
pop
into
add
out
mov
and
lret
dec
jecxz
pop
rclb
cs
je
push
stos
arpl
pop
pop
cltd
int3
xchg
mov
mov
xchg
sbb
lods
gs
lahf
or
mov
and
push
inc
or
ja
and
mov
rcrb
ss
pop
roll
inc
test
sahf
popa
push
add
test
mov
fcoml
shr
push
divl
adc
outsl
sub
inc
nop
loopne
add
jmp
jmp
fwait
sbb
dec
test
daa
lret
addr16
xchg
ficoms
or
mov
mov
xlat
mov
lods
test
pop
jl
mov
and
fnsave
fisttpl
mov
loope
mov
shll
pop
push
inc
mov
sarl
pop
movsl
test
ljmp
pop
or
fistl
or
ret
jmp
iret
push
mov
insl
and
xor
popf
xor
test
sarl
fst
pop
adc
sbb
xor
mov
add
jecxz
lods
dec
das
out
rolb
xlat
cwtl
and
ds
sbb
loopne
test
js
jecxz
jg
mov
adc
adc
add
out
or
fldenv
cmp
and
jae
jo
jo
ja
movl
xor
jle
cltd
out
fisubs
cmp
pushf
mov
xchg
rclb
xchg
push
nop
push
xchg
push
sbb
push
and
mov
data16
and
jmp
fwait
rol
in
mov
dec
mov
jecxz
dec
add
fisttpl
sbb
inc
add
movsl
adc
pop
mov
or
imul
xor
or
ret
insb
cld
or
pop
push
lods
ss
or
std
cmp
inc
outsl
jo
sbb
mov
out
or
outsl
pop
mov
sarb
jg
mov
xor
mov
fmuls
movsl
stos
movsl
adc
inc
popf
jns
mov
fsts
pop
jne
xchg
jecxz
loopne
ja
mov
fnstenv
fdivl
idiv
mov
ds
or
push
sbb
je
addb
repnz
mov
mov
pop
xlat
add
sbb
out
shrl
loop
ret
fcomps
jnp
and
mov
xor
pusha
js
sub
adc
pop
or
and
bound
popa
or
inc
mov
ja
xchg
mov
popw
hlt
cli
movsl
ja
addr16
adc
xchg
ret
repz
mov
sub
jb
ds
test
pop
bswap
jle
es
xlat
sub
sub
or
mov
xchg
or
pusha
fldl
ss
push
mov
repz
ljmp
pop
stos
or
jo
iret
push
adc
bound
shl
add
adc
scas
je
xchg
js
outsl
push
pop
xor
jno
pop
or
das
push
outsl
jge
dec
clc
je
pop
cltd
or
sahf
leave
fcmovnu
ljmp
pop
sbb
xchg
ret
js
xor
sub
aam
scas
or
movsb
and
gs
ja
ret
das
push
ss
and
out
daa
jmp
pop
jnp
cwtl
call
push
sbb
fisubrl
mov
mov
pop
stc
not
dec
add
out
fldenv
fstp
or
out
test
add
cmpsb
das
aam
mov
xlat
out
orl
jns
inc
and
inc
scas
xlat
mov
aad
in
addr16
dec
dec
xor
shll
push
stc
sub
inc
inc
mov
sbb
insb
jns
ret
fdivrp
lret
out
sub
or
mov
mov
cltd
sub
adc
cltd
cmc
stc
inc
push
sbb
inc
xchg
xchg
jb
xor
fsubs
sbb
dec
and
outsb
daa
imulb
mov
jno
outsb
mov
out
scas
and
sub
orl
pusha
and
pop
sbb
cltd
pop
gs
adc
or
movsb
cmp
outsb
imul
pop
mov
xchg
jmp
sub
dec
mov
insb
outsl
or
jnp
jns
fdivp
inc
outsl
pop
xchg
adc
dec
dec
or
iret
cmpsb
repz
mov
lahf
xchg
add
mov
mov
cmp
lods
pop
leave
rcrl
mov
bound
xor
or
cmp
or
scas
ret
movsb
cmp
inc
xor
jl
lea
inc
hlt
mov
mov
mov
push
movsb
or
in
ret
mov
dec
push
or
jl
adc
pop
sbb
sub
mov
sub
arpl
out
xor
jae
ret
xor
push
lock
inc
mov
xor
xor
adc
or
scas
xor
lahf
lahf
push
cli
or
fwait
inc
push
cmp
lret
popf
push
enter
and
inc
mov
lahf
clc
imul
dec
insl
jp
jg
mov
aaa
popa
subl
imul
xor
mov
cmp
sub
mov
jnp
scas
test
dec
in
mov
add
lret
jae
fidivrl
add
inc
push
cmp
loopne
jmp
push
das
inc
cs
lret
ljmp
add
pop
test
inc
xlat
push
sbb
jo
xchg
jg
inc
lahf
dec
sahf
pop
fidivs
push
mov
into
shll
les
mov
fstpl
ja
sub
add
jne
mov
mov
sbb
adc
mov
shufps
adc
ds
xchg
fnstcw
in
dec
sub
pushf
add
jp
lea
aam
outsl
sbb
lret
sub
adcb
inc
fistpl
mov
out
stos
out
or
xor
jbe
negb
mov
lea
xchg
insl
add
repnz
fisubl
jb
pop
fnsave
rcr
dec
mov
rorb
test
jg
and
add
sub
aaa
pop
xchg
pop
sbb
rcll
sbb
in
dec
stc
xor
loop
or
test
dec
aad
scas
mov
adc
adc
insb
les
iret
mov
dec
scas
popf
sub
mov
or
repz
sbb
mov
adc
push
mov
xorl
fiaddl
jp
and
orl
lcall
mov
or
xor
cmc
xchg
fs
mov
inc
lret
outsl
inc
inc
mov
ja
pavgb
inc
mov
sbb
movsb
push
lahf
push
mov
ret
sub
test
scas
out
sarb
arpl
mov
mov
dec
pop
iret
jg
pop
push
push
and
xchg
clc
in
jmp
jns
adc
lret
shll
outsl
cmpsb
inc
sub
dec
inc
scas
lock
in
pop
mov
insl
mov
adcb
xchg
pop
mov
and
call
int
into
xchg
aas
mov
jnp
mov
call
mov
mov
incb
arpl
pop
clc
and
jne
je
fwait
mov
aaa
pop
pop
aam
push
mov
xchg
daa
ss
adc
fsub
cmc
popa
xor
fsincos
cltd
jo
inc
test
mov
xor
xor
lds
push
sub
inc
ffree
in
or
insl
ss
gs
out
pop
add
and
fdivrl
push
pop
add
sub
xchg
cmp
or
mov
rolb
out
je
std
ss
jmp
mov
adc
add
sbb
repz
cwtl
lret
sbb
pop
iretw
add
and
mov
jp
or
addr16
mov
faddl
decb
jbe
cmp
jno
arpl
shll
jg
pop
xchg
mov
or
xlat
dec
and
xchg
daa
push
xor
and
ret
mov
in
jg
xchg
cmpsb
mov
mov
sub
es
aaa
rcll
in
cmpsb
add
cmp
ret
test
je
push
sarb
repz
bound
or
cs
dec
xchg
outsb
adc
aam
ja
icebp
lahf
dec
xchg
iret
test
sub
hlt
popf
adc
in
xor
jp
out
mov
icebp
xacquire
jmp
add
roll
lret
call
das
shlb
jne
insb
ret
sbbb
aaa
and
xchg
xchg
inc
mulb
sahf
leave
jns
and
nop
popf
rolb
mov
mov
insl
repz
or
mov
in
test
ds
sbb
or
push
mov
ss
xchg
dec
inc
fcmovnbe
mov
mov
inc
scas
adc
sbb
pop
sub
into
pop
jno
xor
fistps
and
or
sbb
and
and
jno
cmp
hlt
sbb
aas
pop
in
add
mov
push
xchg
clc
fisttpll
cmp
and
jbe
xchg
jbe
adc
outsb
dec
sub
inc
fs
mov
std
andb
out
aaa
bound
sub
pop
add
xchg
dec
mov
cmp
pop
jge
subl
mov
psubb
ret
sbb
mov
lds
sub
dec
push
pop
pop
repnz
loopne
xlat
cwtl
mov
push
jecxz
jmp
sbb
shl
stos
fstl
jnp
pushf
xchg
int3
lret
and
push
and
out
std
push
jmp
or
or
sti
sbb
lods
sahf
sti
xor
mov
and
std
rcr
cmp
mov
sbb
fwait
lea
out
andb
in
int
cs
or
cmp
test
sbb
mov
aas
clc
scas
mov
test
test
loope
arpl
inc
stc
push
and
mov
imul
fsub
add
loop
mov
and
aaa
push
mov
sub
int3
jns
int3
or
stos
popa
pop
mov
fcmove
adc
push
mov
inc
nop
imul
push
push
adcb
lods
arpl
popf
xchg
pusha
mov
inc
inc
hlt
sub
pop
imul
shll
movsl
ljmp
cli
mov
cld
adc
das
and
cltd
enter
rcll
push
inc
xchg
ret
sahf
test
dec
div
jle
jecxz
mov
call
out
add
mov
lcall
insb
test
and
movsl
arpl
xor
sbb
clc
in
filds
jnp
mov
je
dec
mov
lods
push
push
add
lcall
mov
sbb
mov
mov
pusha
mov
ljmp
and
sbb
inc
sub
in
add
in
push
sbb
inc
and
daa
pusha
xchg
xor
fildl
jmp
daa
xchg
mov
daa
jl
loope
mov
and
fiaddl
hlt
sti
mov
insl
xchg
mov
ret
sbb
icebp
and
cmp
aaa
inc
xchg
dec
out
xor
je
clc
jmp
jp
push
push
imul
jae
andb
lret
mov
movsl
mov
xchg
xchg
sub
hlt
jnp
fisttpll
pop
sbb
int
lea
pop
pop
clc
jne
pop
in
enter
lea
dec
xor
push
in
stc
xor
pop
testb
add
jnp
lret
pop
je
dec
cmc
xchg
inc
fmull
inc
sub
mov
cmp
insb
and
jecxz
push
outsl
mov
sub
jp
out
stc
cmp
inc
popf
add
push
and
sbb
adc
xor
lods
loopne
mov
xchg
xchg
loopne
xor
insb
push
mov
movsb
push
jmp
mov
inc
repnz
cmp
push
movsl
adc
xor
jb
inc
sub
in
xchg
ds
xchg
mov
add
pop
pop
add
add
sbb
lock
fistl
and
repnz
or
pop
imul
cmc
test
jnp
rolb
mov
adc
insl
pop
loop
inc
sub
push
in
sbbb
cwtl
lret
imul
xchg
in
lret
adc
cmpsb
cmp
mov
aaa
hlt
lock
add
dec
in
jnp
push
int
mov
jbe
mov
xor
add
loope
ljmp
pop
fists
or
arpl
cs
lods
std
add
sub
jb
test
jg
out
fsubrp
and
test
cli
push
daa
mov
movsl
repz
je
adc
jo
lods
xchg
jne
mov
fbld
push
push
das
mov
mov
ret
mov
jmp
mov
lcall
pop
cmp
cmp
cmc
aad
sub
pop
out
lcall
add
mov
mov
fisttps
leave
jae
xchg
xor
mov
xor
or
push
ret
xor
das
push
icebp
std
jl
or
xchg
icebp
cmp
ljmp
sbb
jmp
adc
imul
rcll
add
gs
flds
movsb
cmp
mov
sbb
movsl
cmp
and
lret
shll
enter
arpl
ret
jbe
outsl
jg
nop
adc
lret
int
xchg
fwait
pop
scas
repz
in
stos
mov
in
mov
fstp
mov
icebp
dec
dec
dec
push
mov
outsb
fmull
rcr
push
sbb
rcrl
lds
clc
into
dec
daa
int3
popf
mov
movsl
sub
pop
scas
cmp
sub
jno
or
xchg
cmp
jge
push
cmpb
out
and
jmp
hlt
ret
aaa
leave
rorl
std
push
outsl
xchg
pop
mov
lods
push
jp
je
in
pop
stc
scas
sti
mov
popa
sub
ljmp
adc
lahf
addl
or
xlat
pop
xchg
push
lock
sub
sbb
cmp
add
adc
rcl
add
insb
xchg
mov
aam
ror
sahf
jo,pn
push
push
pop
rcl
jmp
push
xchg
mov
shll
pop
mov
stos
test
inc
frstor
and
dec
and
in
ret
idiv
mov
lea
into
in
mov
add
loope
hlt
fimuls
test
sub
lcall
rclb
and
scas
sbb
in
mov
test
test
lock
sbbl
inc
or
jecxz
movsl
cli
jnp
fwait
and
mov
mov
jmp
out
sbb
push
aas
out
push
or
iret
and
in
jle
ret
cmc
cltd
es
lods
add
sbb
in
adc
fisubl
daa
ficoml
xor
outsl
in
jo
stos
shrb
out
insb
enter
addr16
imul
xchg
cld
out
dec
pushf
aaa
dec
jmp
pusha
sub
dec
mov
adc
pop
mov
jle
cmc
jo
mov
leave
dec
mov
xor
repnz
in
out
loope
add
sub
cwtl
adc
sub
cmp
nop
jp
mov
lcall
mov
jge
and
shl
sti
fs
push
and
add
shrb
inc
pop
std
xor
mov
mov
arpl
arpl
daa
xchg
mov
adc
jle
test
jne
xor
mov
xchg
and
sub
mov
incb
adc
fidivs
and
cmpsl
xchg
daa
dec
inc
sub
mov
cmp
dec
jnp
stos
xchg
popa
sbb
pop
add
mov
pop
inc
repz
sbb
imul
push
mov
xlat
jo
jle
insl
cmp
mov
test
ds
fsts
popf
cmc
sub
mov
jmp
cmp
fdivs
sub
xchg
mov
shrb
in
push
cmp
pushf
sbb
xor
mov
cs
push
cmpsl
ror
imul
mov
push
xchg
xor
push
and
int3
or
jl
sub
jbe
jne
xor
es
clc
rol
sbb
fldcw
or
out
jne
pop
dec
inc
sti
xchg
jg
dec
jge
inc
lods
fstpt
pusha
fiadds
or
and
shll
cmp
pop
dec
xchg
lret
in
imul
sub
dec
sub
out
rcl
and
loopne
cwtl
xchg
mov
mov
jl
out
xor
popf
mov
leave
jmp
or
push
es
jle
cmp
loopne
ljmp
fwait
or
aad
inc
xchg
push
add
lock
mov
xor
adc
mov
or
aaa
push
cs
sbb
hlt
filds
mov
adc
pop
jp
addr16
pop
pop
push
xor
dec
leave
lret
push
loop
rcl
in
lea
mov
and
sbb
mov
into
push
daa
and
movsl
stos
stos
jle
and
mov
sub
mov
fs
outsl
inc
cmp
imul
cmpsl
jo
jno
inc
xor
std
das
adc
int
cmp
mov
fstl
adc
sbb
fidivrs
and
sbb
sub
add
pop
test
fs
iret
add
dec
add
sahf
mov
and
xor
stc
jge
push
jne
or
sub
jno
fcomps
mov
inc
pop
das
cmpsb
int3
or
inc
push
dec
int3
push
sub
push
jge
or
jno
push
lds
pop
ret
out
lahf
mov
mov
xchg
push
stc
dec
ljmp
xchg
sbb
shll
jmp
add
jecxz
xchg
mov
cmpb
rorl
sbb
push
cmp
loope
cld
mov
xchg
jbe
fnstsw
imul
add
pop
sbb
xlat
pop
add
pop
jne
sbb
jmp
inc
int3
xchg
or
mov
adc
popf
lret
lea
ja
jmp
jmp
movsb
mov
mov
adc
dec
fidivrl
insb
sahf
and
cmpsl
jb
sbbl
mov
pop
add
jb
xchg
xchg
gs
add
mov
sbb
adc
notl
sub
mov
imul
mov
lahf
jg
adc
aad
xor
mov
and
int
jge
xchg
fbld
and
out
push
mov
inc
dec
stos
push
mov
ja,pt
jno
xchg
dec
in
jge
xchg
inc
cli
jmp
and
imul
dec
and
arpl
xchg
jge
mov
leave
sahf
pop
int3
jl
lds
das
mov
imul
and
pushf
inc
dec
push
daa
lret
push
xchg
scas
add
dec
push
jmp
mov
cltd
ret
sub
test
in
jg
push
xchg
ficompl
in
test
pop
iret
sub
jns
add
lock
jbe
xor
rcrb
or
je
xchg
mov
jbe
stos
lods
xchg
out
nop
xor
cmpsb
push
jle
mov
imul
hlt
jecxz
push
mov
jns
dec
xchg
cmp
push
enter
sub
xor
or
stc
pop
pop
mov
sub
adc
or
xchg
aaa
sub
mov
je
pop
mov
int3
cld
mov
pushf
mov
bound
aam
push
bound
mov
clc
mov
cli
push
or
pop
cmp
mov
dec
lahf
pop
bound
data16
push
sub
jae
cmp
scas
pop
mov
test
dec
add
shll
mov
inc
add
das
mov
adc
xchg
stos
fadd
loop
fcmovnu
and
gs
cltd
dec
mov
jle
imul
push
into
push
and
mov
call
push
pop
push
mov
fsubrs
daa
cmpb
lcall
sahf
pop
mov
xlat
push
stos
scas
mov
fnstcw
xchg
jns
sbb
sub
mov
sahf
movsl
mov
ds
sahf
cmpb
in
movb
std
popa
mov
sub
loop
and
inc
clc
and
stc
cwtl
mov
fidivrs
cli
and
mov
out
jbe
sub
mov
ficompl
in
lret
popf
leave
mov
cwtl
push
cmp
and
movsl
fldt
int
add
xchg
pop
push
lods
cmpsb
ret
mov
mov
jne
dec
test
insl
inc
jg
jge
ret
xor
filds
jbe
ret
lods
sub
pushf
jp
les
icebp
push
std
ret
jno
and
stc
lods
daa
mov
jnp
adc
cltd
out
out
mov
inc
bsf
call
mov
jno
xor
sbb
mov
bound
add
and
push
adc
sub
push
hlt
cmpb
cmp
sbbb
adc
push
pop
or
loop
rolb
cmp
adc
roll
mov
jmp
outsb
and
push
test
push
hlt
ss
mov
mov
pop
xorb
mov
out
adc
ds
jg
add
jge
or
sbb
iret
add
cmp
adc
out
ret
cwtl
pop
or
out
jne
push
sbb
sahf
cmpsl
xchg
ret
xchg
push
push
imul
jbe
push
adc
pop
flds
or
pop
sub
pop
jae
mov
mov
outsl
stc
sbb
adc
loope
mov
cmp
sub
pop
or
mov
lret
lss
pop
sbb
rcl
shll
jle
imul
sbb
sar
pushf
daa
gs
aaa
sbb
xor
cmp
jmp
fs
pushf
ljmp
addl
cld
push
int
push
rorb
andl
jns
mov
jo
xor
test
xor
cmp
les
pop
mov
leave
out
xchg
pop
jmp
stos
imul
std
sub
mov
les
sbb
push
and
push
lahf
mov
fcompl
xchg
insl
addr16
xchg
mov
out
pushf
jp
or
cmpsl
aad
int3
loopne
mov
loope
lcall
xchg
xchg
add
inc
push
pop
and
fimuls
inc
stos
push
push
sti
mov
and
repz
out
aad
pop
mov
dec
fldt
mov
cltd
or
adc
xchg
jns
xchg
mov
cmpsb
dec
fildl
xor
add
ret
shrl
add
xchg
jmp
or
sbb
cmpl
add
das
imul
cs
cli
cmpsl
in
jo
std
adc
adc
cmc
out
sub
push
mov
mov
mov
lahf
ja
cs
movsb
jnp
loop
jge
xor
mov
bound
xchg
inc
iret
cmp
push
stc
data16
pop
pop
mov
pusha
jle
dec
cmpsl
sahf
xchg
fwait
adc
xor
iret
lods
xor
stos
lea
imul
fbld
sub
sbb
je
popl
gs
sbb
pop
imul
add
mov
bound
push
into
adc
sbb
or
faddl
add
add
scas
mov
cmp
adcb
mov
aam
enter
inc
sbb
xchg
mov
mov
sbb
mov
fnstenv
jae
sub
lods
add
cmpsb
int3
mov
mov
popa
pop
call
loopne
aad
sbb
ja
add
and
rorb
out
lret
insl
cmp
test
stc
jnp
aam
push
repnz
push
mov
ds
mov
xorb
xor
movsl
xchg
lods
sbb
push
int3
inc
ljmp
sub
mov
adc
mov
adc
sti
cmpsl
jg
sti
cwtl
mov
cmpsb
mov
pop
add
or
lea
xor
roll
mulb
jae
in
ret
jle
out
mov
movsl
cwtl
jns
sbb
daa
rclb
out
pop
and
push
add
xlat
sub
cmp
dec
fldt
cmc
scas
adc
jle
xchg
cli
imulb
sti
xor
fstpt
add
pop
sub
pop
sub
push
sub
addl
nop
rcrb
pop
data16
lret
push
clc
mov
out
cmp
mov
jns
aad
or
add
or
jl
popa
xor
in
push
sbb
dec
imul
sti
pop
xor
jno
mov
cmp
mov
adc
pop
lahf
das
loope
and
sbb
into
dec
fucomp
insb
aam
push
call
jo
idivb
and
adc
and
adc
ret
in
test
xchg
popf
sub
cmp
cld
inc
mov
popa
out
cmpsb
mov
push
out
jl
cmpsl
test
jge
adc
int3
and
cmc
xor
mov
stc
jae
outsb
xchg
dec
sub
les
add
lret
addr16
idivb
lea
cs
inc
mov
hlt
insb
xlat
cli
into
popf
scas
push
mov
or
subb
mov
sub
repnz
ja
mov
xchg
mov
lcall
pop
iret
pusha
sub
sbb
add
lock
sub
lret
icebp
cs
mov
adc
cli
adc
mov
cmp
or
movsb
fdecstp
jle
aad
addr16
dec
lretw
imul
add
or
mov
jbe
xor
fistpl
clc
sbb
mov
mov
daa
xor
sbb
inc
adc
test
xlat
iret
lcall
test
clc
xchg
push
dec
inc
nop
sahf
xchg
jecxz
repz
pop
jmp
push
sbb
add
hlt
bnd
cmc
repz
and
pop
push
stc
aad
arpl
mov
cmp
push
jg
pop
jge
sub
adc
call
loopne
mov
movb
push
cmp
xchg
inc
repnz
les
mov
and
mov
mov
push
cmp
or
sbb
add
pop
sbbb
std
sarb
fmulp
lret
inc
shl
xchg
call
in
jo
mov
ljmp
mov
sbb
push
or
jb
adc
push
xor
mov
addr16
fsubr
repz
test
xchg
and
push
std
out
mov
fisubl
sub
jecxz
cmp
notb
xor
adc
and
test
fwait
xlat
mov
pop
mov
movsb
push
popf
pop
sbb
jmp
imul
or
pop
jno
jge
sub
addb
stos
xor
dec
cmp
adcl
mov
test
shll
pop
lds
sbb
cwtl
ljmp
fwait
inc
lods
movsl
lock
jp
dec
pop
mov
in
xchg
dec
jl
lret
sub
adc
arpl
add
mov
adc
es
in
xlat
nop
push
mov
mov
mov
dec
iret
repz
out
movsl
mov
xorb
mov
aaa
cmpsb
or
mov
jnp
and
cltd
jnp
je
and
fstpl
mov
and
lods
cltd
pop
jge
pop
loop
or
mov
mov
dec
mov
xor
shrb
push
nop
loop
dec
or
add
sbb
pop
jl
dec
dec
ret
cmp
iret
pop
or
push
lahf
jmp
mov
mov
jnp
test
or
imul
fidivrs
or
das
orb
mov
xchg
push
es
test
scas
cs
jl
sub
push
sarl
test
jne
aam
loopne
lock
or
testb
pop
xchg
ja
push
adc
cmp
mov
jle
adc
out
cmp
fistl
fucomp
imul
sbb
and
std
cmp
push
or
insb
outsl
icebp
repz
enter
cli
sub
adcl
or
cmp
into
xor
out
xchg
or
ds
outsl
flds
jno
popa
xor
add
dec
cmpsb
jnp
clc
push
ds
daa
xchg
push
xchg
idivb
and
cwtl
mov
repz
adcb
in
mov
pop
or
sar
insb
dec
sub
rorl
mov
aas
fs
add
enter
sbbl
push
andb
xchg
js
cmpsb
fistpl
mov
dec
xchg
push
gs
mov
mov
insb
incb
jge
mov
lods
dec
out
incl
jbe
jmp
xor
fimull
fwait
mov
repnz
cmpsb
stos
pop
cli
inc
sub
or
push
out
cltd
xor
jnp
repnz
mov
jne
sti
fcompl
xchg
push
sub
cmc
inc
faddl
cmp
jp
in
sahf
gs
push
inc
xor
jo
test
fiaddl
insl
ja
mov
push
cmp
xor
jns
adc
dec
insl
gs
out
pushf
fmuls
leave
mov
or
sub
call
push
cwtl
gs
mov
jge
sti
in
dec
adc
pushw
adc
pop
test
pop
arpl
and
loopne
fimull
js
jg
xor
dec
in
sti
and
int3
or
lods
mov
xchg
std
sbb
sahf
inc
inc
push
mov
dec
and
pop
ss
daa
xchg
imul
icebp
js
lods
and
sub
add
iret
push
bound
mov
mov
mov
out
xor
ja
ljmp
loope
dec
jle
decl
scas
sub
xchg
push
fisttpl
decl
fsubr
xchg
ja
out
mov
cmpsl
testb
cltd
leave
cmp
mov
push
rolb
rcrb
loop
push
aaa
cltd
xchg
aaa
inc
sbb
xchg
test
lods
insl
pop
pop
lret
in
repz
in
inc
sbb
pop
inc
mov
xchg
es
push
fldt
scas
cmp
inc
inc
enter
adc
xchg
inc
or
push
iret
jle
or
xor
lret
push
iret
push
ss
aad
jns
cltd
cmp
inc
int
and
jno,pt
dec
pop
xchg
inc
sbb
lea
and
out
jle
mov
mov
xor
sub
nop
loopne
into
push
ss
je
pop
sbb
cmp
sub
add
xor
adc
andb
push
out
xchg
xchg
jmp
push
xor
and
jb
sub
xchg
je
lea
outsl
dec
cmp
xchg
cld
mov
pop
cmp
test
fbstp
into
jno
data16
xlat
sub
jecxz
sub
dec
xchg
test
pop
inc
and
sbb
adc
lods
scas
cwtl
out
and
pop
dec
mov
jo
dec
cld
fstl
aad
ljmp
in
stc
sbb
lea
movsb
pushf
pushl
movsl
push
out
jno
pushf
xchg
stos
and
push
push
insb
push
push
inc
gs
insb
mov
repz
sbb
mov
fimuls
sbb
xorb
stc
out
or
ret
outsl
call
jge
inc
sub
mov
movsb
sub
pusha
add
jecxz
add
in
xor
mov
jno
mov
fldl2t
pushf
insb
sahf
mov
dec
stos
outsb
pusha
push
push
push
jl
cmp
cmpsl
adc
mov
mov
push
cmpsl
cmp
pop
push
jmp
mov
lods
imul
js
xchg
rcll
nop
test
xchg
xlat
push
out
add
outsl
jns
inc
mov
mov
xor
and
dec
cmp
out
mov
cmp
arpl
dec
aas
jle
in
pop
or
negb
mov
jae
xchg
add
rolb
xor
out
loop
sbb
or
cmp
pop
adc
jg
inc
outsl
jnp
lret
insl
xor
or
cld
cmp
jns
iret
jmp
xchg
sbb
sbb
mov
insb
adc
cmc
and
inc
push
pop
xchg
iret
adc
push
out
jbe
addb
movsb
pop
mov
stc
push
mov
cltd
push
pop
mov
cmc
cmp
mov
es
cld
in
inc
or
test
push
xchg
adc
cmpsl
test
inc
and
shr
faddl
add
dec
add
and
rclb
bound
les
sbb
in
sahf
xchg
scas
adc
fimuls
pusha
addr16
std
cmp
sub
sbb
imul
pop
enter
fnstsw
mov
sbb
fdivs
fwait
xor
push
sbb
xchg
mov
push
into
dec
nop
test
adc
int3
sub
js
xchg
bound
or
loope
xchg
push
enter
inc
not
lfs
aad
divl
push
addr16
outsl
pop
sub
fcmovnb
xor
push
dec
mov
leave
push
mov
loope
rol
cmp
jmp
or
xlat
xlat
pop
out
sbb
sti
and
ret
arpl
pop
mov
xchg
aad
cmp
jb
sub
jp
sbb
inc
aaa
rorb
adc
fwait
and
stc
loop
leave
lcall
inc
lods
out
sbb
jle
mov
dec
fmull
pop
js
push
loope
jns
sbb
push
push
data16
add
add
movsb
push
fsubrs
popf
insl
inc
popa
aaa
cwtl
inc
dec
adc
pusha
jb
and
clc
in
ret
push
and
in
addr16
cmc
adc
xchg
popa
mov
xchg
fldl
addr16
xchg
imul
fcomps
xor
jae
loope
pop
cmp
pop
orb
mov
cmc
jns
rcrb
lods
movsb
jmp
out
loope
cwtl
shlb
subl
shlb
xchg
lcall
sub
or
adc
pop
mov
jmp
inc
sub
mov
stc
fwait
sbb
fnstenv
gs
in
push
scas
pop
pop
mov
add
in
xor
sti
and
scas
xchg
cmp
jge
arpl
xor
popa
or
jb
add
ljmp
add
mov
loop
xor
mov
out
dec
in
dec
and
add
dec
push
mov
arpl
orl
pusha
in
inc
xchg
dec
imul
inc
fsubl
sub
negb
mov
sbb
lret
fisubrs
adc
ja
loope
add
lock
ret
inc
adc
or
cmp
sbb
outsb
notl
lods
adc
or
movsb
adc
ficoms
mov
scas
add
cmpsb
pop
cld
xchg
lcall
sub
pop
sub
sarb
enter
pusha
mov
fwait
xor
mov
loopne
mov
js
imul
add
lcall
mov
stos
fistps
sbb
adc
push
je
outsl
or
lret
les
mov
mov
add
mov
bound
or
inc
xchg
pop
lcall
addr16
jbe
mov
orl
mov
jle
dec
xor
fimull
inc
pushf
lods
in
repz
jne
out
into
enter
js
inc
xor
lret
sbb
loop
inc
shlb
adc
pop
cli
sub
fdivrs
outsb
daa
xchg
mov
jmp
jecxz
ror
xchg
mov
sarl
or
mov
pop
aaa
into
out
loope
sbb
in
cmpb
inc
dec
int3
xor
jge
lock
or
mov
adc
mov
test
int3
jl
stc
addr16
iret
jo
mov
mov
in
dec
push
fstl
xor
repnz
lea
push
mov
ret
and
push
sub
shl
popa
xor
adc
add
pop
mov
mov
or
mov
push
push
mov
mov
ss
rcll
xchg
add
leave
leave
aad
imul
cli
stos
push
sbb
pop
jge
cwtl
cwtl
xchg
imul
sbb
popf
and
das
cmpsb
js
or
ror
aaa
dec
daa
and
int
xchg
push
cmp
xor
hlt
jle
imul
loopne
dec
push
dec
outsb
cmp
ret
int
jbe
inc
loope
popf
push
mov
mov
pop
xor
dec
daa
ret
mov
or
das
mov
fnstcw
mov
test
inc
es
shlb
adc
in
push
mov
xchg
test
cmpsl
sbb
mov
dec
lret
jbe
inc
fstps
test
jge
push
pop
addr16
push
mov
add
stc
cli
sbbb
js
fidivs
push
sub
or
cmc
jno
xchg
shl
pop
push
scas
add
lret
sub
daa
xchg
pushf
mov
test
add
cmc
outsb
repz
aas
pop
lret
inc
loopne
mov
mov
adc
push
and
es
xchg
shll
aam
cmpsb
xor
fsubrl
pop
notb
loope
dec
pop
push
loope
js
sub
test
idivl
mov
aad
les
out
push
sahf
push
fdivs
enter
repz
xor
push
mov
stos
xor
shr
or
stc
je
js
jb
fisttpll
mov
in
dec
and
cli
adc
and
xchg
xchg
jp
jae
pcmpgtd
fldcw
ja
gs
lods
xor
insl
jg
push
mov
movsb
push
testl
pop
es
mov
aad
stos
shlb
nop
cmp
mov
hlt
call
mov
jae
mov
push
pop
dec
and
int3
fadd
push
xchg
ja
mov
inc
cwtl
push
push
xchg
xchg
insb
fsubl
xchg
mov
dec
insl
sbb
aam
or
out
lret
add
jno
push
mov
imul
cld
cli
mov
orl
inc
cmp
sahf
sti
and
jnp
std
pop
inc
dec
add
pop
or
sub
push
sbb
out
loopne
and
xlat
pop
call
and
xor
cmpsb
lahf
icebp
push
and
scas
shll
cmp
ss
push
shl
push
mov
arpl
nop
stos
jns
xor
cltd
mov
add
push
and
in
jbe
nop
out
into
xchg
adc
nop
sarl
cmpsl
scas
iret
inc
in
cmp
into
fisubrs
sub
sbb
or
loopne
in
int
pop
int3
push
popf
jge
sar
pop
xchg
out
lds
outsl
es
xlat
fwait
inc
cmp
sbb
inc
xchg
sub
filds
xchg
aad
sbb
mov
xchg
clc
add
xor
sarl
xor
xchg
shl
cli
sarl
jg
push
xchg
sub
add
xor
sub
dec
jnp
fcoms
mov
push
in
push
jge
rorb
mov
inc
add
xchg
ret
pop
or
mov
jl
push
js
int3
leave
or
aam
sub
dec
outsl
scas
imul
mov
cmp
in
mov
int
add
pusha
jnp
in
jecxz
sub
js
push
or
add
inc
mov
gs
gs
subl
pop
and
jmp
add
push
sub
xor
push
insl
sub
shll
sub
stos
pushf
cmp
add
cmp
test
lahf
data16
cmpsb
sbb
xor
sahf
push
or
arpl
aas
mov
mov
xor
lock
xchg
jge
pop
lret
je
bts
and
loopne
roll
jbe
das
push
inc
sub
sub
xor
aad
jns
iret
jbe
add
jnp
aam
js
aaa
mov
iret
sbb
pop
lcall
ljmp
lcall
stos
les
add
ja
xchg
cmp
aad
pop
jmp
push
das
lret
mov
mov
cmc
lret
in
lcall
adc
sub
inc
shll
stos
decl
mov
pop
inc
cmp
push
scas
inc
lahf
mov
imul
mov
test
jmp
cmpsl
sbb
inc
pushf
out
sub
adc
pusha
mov
xor
mov
lods
and
adc
inc
mov
push
mov
and
inc
cmp
js
lcall
xchg
mov
mov
in
and
out
lea
push
or
lods
inc
in
mov
rcpps
jle
mov
mov
and
dec
pop
jns
mull
testb
pop
mov
divb
cmp
mov
fwait
mov
mov
jnp
stc
inc
mov
jg
jb
in
not
int3
cmp
dec
jnp
aad
call
jmp
mov
test
inc
cld
loopne
js
addb
jle
int3
pop
sub
insl
push
push
inc
dec
into
shlb
mov
clc
jge
pop
ret
out
inc
jns
cmpsl
xchg
xchg
jo
mov
iret
in
test
adc
xchg
iret
pop
ja
push
mov
add
cmc
mov
xorl
add
pop
mov
xchg
in
rolb
push
cmp
bound
xchg
decb
xor
dec
xchg
icebp
enter
push
bound
pop
mov
xlat
push
mov
jle
push
adc
and
inc
xchg
push
push
xchg
das
inc
xchg
xor
cmp
adc
pop
dec
xchg
scas
inc
sub
add
mov
loop
out
imul
mov
push
mov
sbb
insl
jb
sub
insl
dec
inc
rcrl
iret
rcl
mov
adc
out
fmulp
test
cmpsb
jle
xor
bound
or
cmp
mov
mov
test
mov
adc
cwtl
not
dec
cwtl
inc
sub
pop
lea
adc
out
jge
fdivl
mov
je
fs
fwait
push
jp
cld
shll
mov
or
lds
ja
mov
push
lcall
push
xchg
xlat
outsl
loop
sub
adc
int3
and
pop
stos
ret
dec
rcrb
frstor
lahf
test
pop
repnz
jne
test
minps
xor
xchg
testb
scas
xchg
and
add
and
pushf
mov
aas
add
pushf
or
dec
popf
outsl
mov
insl
mov
mov
mov
mov
cld
pop
leave
pop
add
and
jl
and
xlat
mov
stos
xlat
leave
sbb
sbb
cmc
mov
das
mov
add
lods
outsl
hlt
sarl
lahf
outsb
inc
lea
mov
repz
jle
fwait
lahf
cmp
sbb
adc
cwtl
movsl
pop
jge
fcomps
push
scas
cli
xchg
int3
jmp
push
xchg
test
xlat
pushf
mov
xchg
sahf
lea
mov
or
inc
mov
or
addb
mov
sbb
jge
jno
adc
jae
add
adc
inc
and
popf
inc
int
adc
loopne
test
jae
pop
mov
imul
cs
fcom
fnstenv
mov
lods
call
lods
jl
and
mov
cmpsl
js
in
jbe
aaa
pop
cmc
ljmp
jne
pop
and
and
mov
mov
clc
stos
push
jns
sbb
shrb
xor
scas
mov
adc
add
mov
ret
xchg
add
out
bound
inc
jbe
xor
sbb
xor
push
les
xchg
cwtl
cltd
mov
insl
in
rcrl
bound
dec
lret
loopne
mov
arpl
cmc
dec
and
xchg
sbb
testl
mov
ljmp
arpl
cmovne
push
mov
out
and
sbb
fwait
jnp
cmp
pop
fsts
dec
ds
in
ljmp
xchg
lds
popf
cmp
cwtl
fs
pop
das
push
cmp
and
stc
das
mov
shl
push
mov
iret
aam
add
js
bound
add
sbb
fldenv
push
sbb
mov
adc
in
sahf
cmpsl
sti
mov
push
das
dec
jno
push
jg
xchg
pop
int3
icebp
clc
jp
dec
mov
bound
cmp
ds
dec
cld
int3
add
out
arpl
pop
xchg
jmp
pop
jl
cmc
stc
xlat
mov
scas
xchg
push
mov
adc
adc
lahf
sub
imul
xchg
mov
jb
cltd
divl
test
testb
out
adc
pop
xchg
jle
add
dec
add
sub
xchg
and
cmp
mov
push
imul
adc
adc
sbb
lret
insl
aas
adc
addr16
adc
xor
dec
push
and
lret
call
out
fildll
filds
fistpll
push
sub
add
cmp
xorb
and
leave
cli
push
jp
adc
cli
xchg
cmpsl
inc
fdivs
dec
mov
in
cmp
pop
mov
or
add
mov
ds
inc
xchg
out
cld
leave
cmpsl
int
dec
ljmp
pop
cmp
xor
inc
roll
mov
sbb
adc
repz
dec
sub
popa
inc
or
jge
mov
pusha
jp
cmpsl
orb
xlat
idivl
sub
push
add
clc
call
mov
addl
sub
sub
pop
push
inc
cld
ja
lea
in
mov
ds
shlb
push
ret
aam
adc
xchg
les
pop
jle
test
stc
lods
xchg
mov
icebp
dec
insl
hlt
xchg
adc
std
imul
popf
fiaddl
lds
rcl
inc
daa
mov
jne
mov
ret
mov
fsubrl
mov
lds
adc
pop
dec
insl
dec
mov
cli
stos
dec
shl
sar
push
add
stos
jno
shll
inc
adc
imul
adc
mov
mov
loope
lret
nop
mov
pusha
fwait
insb
mov
ja
mov
and
add
popf
insb
enter
ficompl
lods
xchg
aas
lods
out
pop
repnz
sbb
daa
jmp
or
enter
iret
cld
fcompp
cmp
jp
dec
and
int
sub
adc
aam
pavgw
enter
sub
push
sbb
pop
pushf
cmp
lret
cltd
jmp
jns
push
push
inc
addr16
sub
cs
cmp
shll
ds
addr16
sub
into
pop
cli
lret
cmpsb
mov
shrb
push
cmp
arpl
jnp
aam
lods
test
push
inc
ds
arpl
sbb
xor
roll
xchg
sbbb
xor
and
fnsave
addr16
pushf
xchg
mov
or
jae
inc
pop
inc
pop
sbb
hlt
push
xchg
xchg
push
out
inc
sbb
lods
dec
fsubrs
movsb
rcll
pop
sahf
or
and
das
adc
aas
and
push
push
jno
dec
dec
jle
inc
jbe
and
ror
sub
inc
mov
mov
xchg
repnz
pop
dec
push
int3
jg
lock
sbb
insb
scas
sbb
xlat
xor
pop
jne
icebp
inc
clc
mov
les
lret
jbe
imul
push
outsl
sub
push
outsl
mov
adc
addr16
xor
test
sbb
sbbb
popa
movsb
das
movsb
rcll
popf
filds
xor
push
and
add
jmp
xchg
dec
in
cmc
dec
or
aad
imul
mov
cld
dec
mov
loope
hlt
fcomps
lret
adc
inc
xchg
in
xor
jle
rol
cmp
sub
pop
sub
jg
xchg
ljmp
testl
xchg
xlat
inc
or
xor
mov
cld
rol
popf
xchg
inc
das
or
sub
cwtl
xor
out
inc
scas
shlb
jnp
jmp
aad
scas
xor
scas
nop
jnp
clc
mov
lcall
or
ret
push
cmp
mov
pop
or
dec
cmp
scas
imull
movl
and
push
inc
rcl
rcrl
aas
dec
mov
int3
xchg
lret
test
aad
sub
adc
lea
adc
push
out
dec
jns
jp
orl
xorb
data16
dec
xor
js
aaa
ss
mov
enter
idivb
loopne
mov
cmp
loopne
in
push
xor
pushf
sub
push
arpl
int
xchg
push
pop
imul
push
mov
dec
aam
pop
dec
insb
jae
mov
adc
rolb
repnz
cmp
nop
in
and
jl
movl
aas
lcall
adc
cmp
mov
loop
je
je
rclb
jle
push
fisubs
fimull
push
fsubl
push
sbb
mov
mov
cmp
inc
pop
fs
pop
mov
gs
lods
mov
mov
sarb
mov
popf
pop
mov
inc
rcl
fwait
pop
adc
movsb
out
aas
xchg
cli
push
lods
xor
xchg
inc
inc
jbe
mov
test
push
jnp
sub
pop
into
daa
jmp
insb
xchg
rcrb
mov
mov
hlt
xor
mov
push
aam
push
call
pop
pop
dec
aad
or
outsl
inc
es
dec
pop
scas
sub
pusha
popf
and
sahf
mov
jbe
hlt
sub
add
clc
inc
xor
xor
popf
push
mov
mov
btc
or
push
xor
ret
out
or
inc
and
les
lret
dec
sarl
es
mov
sbb
xchg
push
push
in
jne
cmpsb
sbb
dec
cwtl
movups
add
inc
jmp
xor
push
std
stc
leave
int
imul
mov
sub
iret
fisubrs
negb
cld
in
and
mov
jne
mov
cmp
lock
enter
adc
in
mov
xor
imul
xor
les
stc
dec
fisttps
push
mov
mov
int3
je
xchg
cs
enter
inc
inc
pop
mov
test
es
iret
adcl
jl
and
cmp
add
adc
inc
mov
jns
hlt
push
lahf
daa
cwtl
push
bound
stc
outsl
bound
and
nop
dec
popa
and
cli
jnp
lret
xchg
mov
add
add
dec
mov
inc
fcmovnb
add
xlat
pusha
xchg
pop
test
pop
cmp
adc
jns
xor
pop
fs
xor
into
ja
adc
andl
test
dec
xchg
dec
loop
mov
std
cmp
stos
sub
sub
lcall
mov
ret
xlat
fs
sahf
daa
mov
push
scas
cmp
dec
add
pop
sbb
pusha
adc
pop
sbb
arpl
dec
dec
mov
int
pop
das
xor
ret
das
in
lcall
cwtl
xchg
or
insb
scas
les
ds
cld
cmp
adc
inc
xor
pop
imul
mov
loopne
movsb
rorb
imul
loopne
push
pushf
push
fisttps
leave
stos
outsb
sub
jo
push
add
inc
or
mov
dec
pop
xor
repnz
push
xchg
pop
dec
jne
mov
and
into
loope
les
jg
cld
or
test
dec
inc
adc
inc
pop
daa
andb
fcomip
sbb
testl
outsl
bound
fmuls
xor
add
scas
cmpsl
or
jp
jo
adc
ret
int
mov
into
sub
aas
les
jae
or
sub
lcall
in
add
mov
cmp
add
ret
mov
jge
pop
add
jb
jo
sahf
push
mov
and
movsb
adc
mov
and
shlb
lds
iret
inc
mov
push
xlat
push
je
into
push
mov
sqrtps
push
or
pop
adc
movb
or
aaa
xor
shlb
sar
dec
lods
insl
js
adc
aaa
xchg
out
scas
cmpsl
movsb
in
test
loope
sbb
addr16
xchg
jmp
mov
jbe
outsl
sub
sub
cli
xchg
push
ja
std
cltd
xor
jno
mov
push
cmp
cld
mov
dec
shll
in
ds
push
push
pop
subb
pop
cltd
test
xchg
lea
push
iret
and
mov
subl
fst
das
outsb
mov
jns
pop
jnp
push
outsl
cltd
mov
imul
mov
sub
call
popa
iret
lock
out
xor
cld
sub
pop
pop
out
sub
lods
cmp
cmc
imull
pop
mov
lds
ds
addr16
xchg
jl
inc
ds
cwtl
scas
pop
and
adc
clc
dec
std
in
inc
into
insb
cmc
cld
leave
addb
lcall
outsb
shrb
push
ds
and
xorb
hlt
cmp
inc
das
push
gs
in
push
arpl
xor
mov
ljmp
insl
pop
hlt
cmp
fcomp
push
aad
mov
and
dec
sbb
into
daa
mov
push
ds
iret
dec
sarl
pop
or
push
hlt
adc
je
mov
fucomip
cmp
xor
push
lea
mov
mov
call
ss
lret
jns
dec
cli
dec
in
mov
xchg
dec
movsb
mov
out
or
sbb
push
adc
aas
gs
pushf
movsb
sub
xor
mov
sbb
cmp
pop
inc
xchg
jl
stos
jnp
mov
into
jge
loopne
add
jnp
inc
mov
in
nop
ds
fs
popf
stc
xchg
mov
or
cmp
mov
jl
insl
pop
rclb
pusha
xor
dec
stos
scas
xchg
inc
jae
inc
cmpsl
rolb
stos
ss
rcll
jge
in
out
cld
sub
sahf
xor
test
sub
xor
icebp
xchg
rclb
ds
mov
mov
dec
jbe
adc
in
add
push
test
mov
xchg
cmpsl
shll
int3
inc
and
out
das
xor
lds
and
lret
add
or
int
jp
imul
push
sahf
dec
mov
cs
bound
sti
sub
enter
fidivs
loop
xor
xchg
add
adc
sub
popf
sbb
mov
fstpl
dec
or
lods
int3
pop
test
cs
mov
cmp
nop
ja
outsb
arpl
je
inc
mov
mov
ret
pop
in
push
stos
xor
jg
movsl
ds
pop
mov
int3
xchg
pop
xor
and
mov
and
pop
fsubrs
imul
mov
or
and
xchg
dec
in
mov
inc
cs
xchg
clc
sbb
sbb
fstl
cmp
addb
cld
test
mov
jae
or
adc
mov
adc
mov
or
mov
inc
int3
xchg
call
stos
sub
icebp
xor
and
adc
sbb
addr16
pop
jmp
xchg
sti
cmpsl
adc
dec
sbb
aas
pop
add
lcall
xchg
dec
cmp
scas
popa
mov
rcrb
push
test
jle
ficoml
mov
add
aas
mov
xchg
je
cmc
mov
popa
repnz
in
and
add
jo
adc
push
mov
push
orb
xor
or
jae
imul
cwtl
aaa
dec
fdiv
add
add
jo
add
sar
xchg
test
mov
rorl
cmp
sub
repz
int
or
inc
fwait
je
xchg
lret
xlat
out
mov
mov
inc
mov
or
ss
xchg
adc
jnp
sahf
fistps
lds
inc
dec
stc
lret
outsl
into
mov
movsb
cli
sub
es
aam
repnz
outsl
ljmp
fwait
in
sarb
mov
adc
scas
adc
movsl
inc
scas
and
insl
or
dec
addr16
adc
psubd
pop
aam
loope
je
pop
mov
fcmovbe
ja
loope
pusha
sub
xchg
outsl
fisttpl
gs
cmpsl
pop
fidivl
das
data16
shrl
in
cmp
sbb
cmp
pop
sub
cmpsb
jge
xchg
test
sbb
hlt
int3
fists
xor
jb
es
out
rclb
adc
arpl
or
xor
dec
adc
pop
lret
daa
aaa
movsb
adc
add
int
jmp
mulb
pop
std
out
adc
in
mov
inc
outsb
add
aad
pop
mov
popf
stos
jle
mov
std
fnstcw
mov
cmp
aaa
out
inc
dec
fs
cmp
adc
insb
sbb
ljmp
into
aam
repz
pop
inc
add
fwait
mov
dec
xchg
pop
fcmovbe
movsb
in
xor
ficoml
pusha
jmp
mov
les
xor
das
aas
push
decb
and
pminub
sub
mov
ss
xorb
add
cmpsl
jl
adc
popa
cld
inc
out
test
jae
push
adc
adc
jp
cmpsl
mov
lods
leave
mov
subb
in
and
dec
cs
push
push
test
sub
outsb
test
out
ror
mov
clc
fistl
mov
mov
pop
subb
out
ret
enter
mov
imul
jne
mov
inc
test
arpl
mov
sbb
cmp
movsl
aas
in
enter
pop
add
arpl
jle,pn
mov
xor
or
push
stos
and
aaa
sti
mov
pop
xchg
mov
xor
xchg
sub
mov
jae
out
jnp
fstpt
adc
js
int3
sub
cmc
push
shlb
dec
add
iret
xor
arpl
mov
cmp
inc
cmp
shrb
push
leave
sub
addr16
sub
xor
jp
sbb
pop
pop
mov
pop
cmpsb
inc
fistl
dec
loop
leave
jl
xchg
mov
mov
cmp
jbe
and
xor
sbb
and
in
repz
cld
fstps
cmpsb
clc
inc
pop
fabs
rcrb
call
cmp
cmp
jmp
xor
lahf
dec
xor
gs
xor
sub
pushf
mov
in
push
in
xchg
sub
mov
adc
rcrl
xchg
cmp
cmp
std
outsl
mov
dec
lds
jb
sbb
push
jl
and
or
add
inc
cmp
lahf
sub
mov
rolb
fcmovne
xlat
aaa
stos
jecxz
and
dec
jo
popf
sbb
mov
mov
daa
add
test
cld
xchg
mov
dec
and
add
jecxz
sub
mov
add
add
aas
jb
xor
adc
jge
and
xchg
or
cmpsb
cmp
stos
je
hlt
in
shrb
cmpsb
mov
mov
inc
push
jge
inc
cltd
mov
fmull
ficoms
jmp
dec
dec
pop
mov
imul
test
ud1
jmp
outsb
outsw
or
jl
je
dec
jo
push
dec
repnz
cmp
imul
std
cwtl
aas
cs
ret
daa
mov
dec
pusha
push
inc
loope
sbbl
cmp
add
dec
sub
or
test
mov
mov
push
mov
mov
xchg
daa
sbb
cmc
leave
sub
push
mov
cltd
adc
cmc
dec
sahf
test
mov
dec
sub
aas
mov
in
cltd
inc
adc
xchg
ret
or
push
push
cltd
sbb
push
xor
fists
mov
adc
dec
mov
mov
sbbl
lret
mov
mov
jne
mov
out
addr16
dec
push
or
push
ds
imul
lret
es
cmpsl
out
pusha
loop
cmc
lods
std
dec
sahf
xchg
insl
lcall
cmpsb
or
add
mov
hlt
mov
repz
cwtl
into
jp
imul
cld
add
add
nop
jns
mov
or
inc
ror
xlat
pop
dec
inc
push
outsb
sbb
cmc
push
nop
ficoms
pop
je
cmpsb
sbb
fldt
jp
bound
jg
and
fs
xchg
in
dec
add
xor
mov
inc
sub
clc
cmpsl
nop
out
mov
mov
int3
jae
jno
out
sbb
mov
sbb
cltd
repnz
addr16
adc
ret
loopne
push
mov
adc
mov
xchg
imul
fwait
and
pop
push
adc
mov
ss
dec
sti
lcall
mov
jbe
push
lods
sbb
xchg
push
imul
push
jmp
and
xchg
dec
rclb
inc
cmc
test
sub
in
fistps
and
inc
add
push
pop
pop
scas
les
dec
mov
push
adc
imul
mov
push
xchg
adc
je
insl
xor
aaa
mov
mov
push
mov
sub
or
scas
pop
sub
xchg
rclb
lret
lahf
sbb
sbb
and
sbb
imul
cmp
mov
shrl
and
bound
repnz
xchg
or
dec
jmp
dec
test
inc
sbb
mov
cmpsb
insb
out
outsb
fs
pop
icebp
in
cmp
add
rcrl
repz
addb
jp
loop
test
add
pop
cltd
jl
mov
shll
jle
je
insb
adc
pop
repz
out
psubusb
movsl
adc
jle
je
mov
adc
fbld
sbb
jp
cli
and
je
stc
addr16
test
push
out
cmp
lahf
jbe
out
push
xchg
sub
loope
repnz
sahf
sbb
scas
aas
sub
aaa
in
jb
cmpsl
hlt
std
movsb
pop
aaa
jnp
mov
jp
pop
clc
or
sbb
stos
jp
adc
inc
fbld
xchg
dec
dec
mov
dec
scas
loopne
jno
dec
leave
jno
cmp
mov
sbb
incl
cmpsl
repnz
aam
lret
adcl
cwtl
push
aam
push
in
xor
mull
jnp
fnstsw
cld
mov
dec
pop
xchg
mov
shlb
xchg
loop
je
lcall
sub
mov
xchg
es
in
pop
cmp
pop
xchg
mov
dec
adc
aad
push
pop
stos
loop
mov
jbe
rcll
stc
mov
and
in
push
xchg
add
cltd
ljmp
std
pop
push
test
add
dec
test
or
loope
jle
cltd
out
shlb
mov
jb
mov
fwait
repz
jmp
cmpsl
ja
insl
inc
jns
int3
xor
sub
dec
mov
in
cld
insb
test
cmc
daa
popf
cmp
test
fldcw
sub
bound
inc
ret
test
cmc
pusha
mov
rorl
int
outsl
push
movb
ja
sub
mov
insl
xor
pop
test
dec
pop
sub
popa
fs
iret
test
or
push
ror
sahf
lods
push
arpl
inc
fcomp
lock
int
pop
add
pop
in
xchg
leave
imul
sub
push
cmp
pop
mov
pop
in
xchg
xchg
fsubl
push
mov
cmpsb
inc
sub
cmc
fldt
lock
mov
sbbl
sarb
in
negb
out
push
or
mov
sahf
or
repnz
xchg
pusha
push
ret
dec
sub
lods
stc
add
pop
xchg
sahf
lock
gs
std
jb
sbb
or
push
aas
pop
mov
negl
mov
shr
push
out
or
push
daa
jle
out
adcl
mov
sub
stc
in
add
popa
mov
xor
sahf
pop
pop
push
sbb
data16
xorb
dec
rorb
adc
dec
jge
inc
out
in
lock
scas
or
das
fisttps
ret
repz
push
jae
popf
sbb
mov
stos
mov
cmp
push
jmp
mov
cmpb
je
mov
inc
adc
mov
xlat
adc
pop
adc
push
aaa
mov
adc
adc
daa
mov
mov
mov
mov
shrl
das
mov
lret
xchg
fnstenv
push
sbb
dec
xchg
sub
mov
xor
jecxz
aas
ja
push
arpl
add
rolb
shlb
sub
adc
mov
out
mov
cmpsb
dec
sti
cmpsb
xchg
lods
fimull
in
mov
in
mov
push
dec
xchg
cmpl
mov
lahf
rcll
mov
lock
cltd
outsb
cmp
xchg
or
ss
jno
xchg
xchg
addr16
mov
int3
icebp
mov
jp
loopne
idiv
outsl
push
mov
test
cmp
sbb
sti
jmp
daa
insb
sbb
ss
inc
cmp
and
mov
es
fdivrp
and
sub
cs
sub
mov
scas
sbb
push
cwtl
jecxz
jl
test
shr
and
mov
mov
test
fidivrl
and
or
and
test
dec
mov
cmp
cmovnp
outsl
jle
cs
pop
push
scas
leave
xlat
jge
inc
mov
nop
add
in
dec
cmc
and
add
test
mov
mov
sub
aam
sub
push
test
fwait
mov
xchg
stos
adc
xchg
jae
add
xor
movaps
mov
fisttpll
adc
add
hlt
push
cltd
scas
enter
dec
int3
push
jmp
test
xor
push
add
inc
jae
idivl
xlat
sarl
outsb
div
imull
pop
dec
bnd
call
loope
mov
hlt
lahf
sti
in
adc
ds
mov
inc
sbb
lods
test
inc
fs
lods
sbb
mov
inc
mov
aaa
lret
lcall
inc
into
add
dec
jno
nop
sub
int
std
daa
cmp
ljmp
aaa
mov
dec
lret
push
mov
shl
out
rclb
cwtl
jecxz
imul
aaa
test
push
mov
iret
icebp
pop
mov
fidivs
ret
aaa
into
into
dec
test
ss
sub
in
jae
dec
sbb
or
pop
xchg
cli
push
repz
mov
mov
push
sbb
inc
push
inc
ffreep
sbb
out
hlt
outsl
jo
mov
jp
inc
cmp
mov
xor
nop
andb
outsb
xor
lds
nop
mov
cmp
mov
xor
ljmp
in
xchg
repnz
cmp
jb
mov
mov
and
adc
cmpsb
xor
lds
pop
aad
popf
jg
xor
adc
cmp
movsl
mov
das
mov
pop
sbb
repz
cmpsl
jb
xor
in
sub
cwtl
ret
jno
mov
cmp
sub
lret
dec
mov
inc
sub
adc
fucomip
xor
mov
enter
dec
mov
fsubrs
stos
outsb
xor
movsl
jns
mov
mov
fists
add
jg
dec
mov
cmp
ljmp
dec
subb
inc
mov
push
mov
lahf
stos
roll
dec
xchg
out
in
mov
pop
pushf
mov
cmc
xor
sahf
cltd
cmc
sahf
icebp
mov
aad
das
push
cmp
sub
add
push
stos
cwtl
rcr
scas
fmull
and
std
push
sahf
test
dec
dec
cmp
mov
push
ret
ja
push
lahf
pop
or
inc
pop
call
add
aaa
or
shr
push
adcl
jne
imul
lea
fidivrl
lds
fnstsw
icebp
outsb
jecxz
movsb
push
cmp
out
js
push
mov
insb
dec
xchg
push
mov
push
pushf
out
mov
lret
cmp
push
pop
addb
rclb
inc
hlt
and
cmc
fstl
mov
sub
and
mov
leave
and
mov
dec
decl
mov
sub
sti
lds
inc
adc
cmc
jge
iret
push
daa
xor
sbb
std
xchg
aam
jecxz
out
push
xor
dec
mov
sub
pushf
in
imul
lea
mov
aam
mov
lcall
fdivp
cwtl
jns
fcmovne
aad
cmp
lods
mov
pop
repnz
addr16
xchg
xor
and
mul
pop
pop
shlb
push
testb
inc
xchg
inc
ret
mov
into
fdivl
pop
clc
add
xor
dec
in
insl
cmp
outsb
or
pop
dec
jmp
sbb
popa
roll
mov
add
cmp
inc
aad
ret
out
pop
lea
mov
test
mov
mov
jbe
mov
push
out
fsts
int
sbb
dec
ud1
pop
jno
inc
mov
xor
dec
xlat
cld
cli
cmpsb
test
js
pop
mov
orl
cltd
inc
push
jbe
cmp
inc
je
test
pop
xchg
mov
decb
fwait
sbb
push
sub
or
pop
repnz
cmp
mov
jno
and
add
mov
cmpb
mov
ss
popf
jp
fistps
xor
outsl
ljmp
inc
in
xchg
ret
pop
pushf
and
add
sbb
sub
cmp
jmp
sub
movsl
inc
outsl
loope
fs
inc
int3
test
xchg
xor
inc
inc
sahf
push
fs
jmp
scas
daa
nop
pop
jge
mov
sahf
push
stos
mov
outsb
jae
inc
daa
cltd
pop
inc
lahf
sbb
inc
push
loopne
push
stos
lea
cmp
andl
add
jo
rol
popf
neg
dec
shl
jmp
mov
fdivrp
enter
add
add
in
sbb
mov
or
adc
sbb
sub
sbb
test
dec
leave
rcll
out
addr16
add
pop
pop
hlt
fwait
xchg
push
rcl
mov
insl
idivb
adc
fistl
clc
and
fs
lea
cli
xor
push
jnp
dec
fs
dec
ss
jmp
loop
cmc
and
adc
movsl
daa
jecxz
scas
push
fmull
out
roll
mov
mov
mov
mov
mov
inc
and
lds
cmp
dec
je
movsb
inc
add
adc
xor
arpl
mov
mov
sbb
inc
iret
xor
add
push
pop
arpl
adc
faddp
sbb
push
xchg
ds
mov
mov
push
icebp
jns
jae
inc
xchg
dec
into
mov
das
loop
cmp
cmc
test
cmpsl
cmpsb
inc
int3
mov
sub
aam
lcall
add
repnz
push
popf
insl
inc
sti
bound
and
divl
das
mov
lcall
cltd
sahf
cmpl
movsl
jp
jmp
sbb
pusha
fistl
fisttpll
push
xchg
popa
test
dec
loop
or
gs
nop
push
ljmp
push
pushf
aam
cmpsb
aaa
mov
data16
into
ja
mov
es
outsb
dec
andl
enter
test
pop
dec
or
decb
and
lret
loop
adc
lea
sbb
pop
sti
stos
xchg
or
in
cvttps2pi
cltd
test
push
stos
jmp
aam
inc
fmull
mulb
fs
test
adc
das
outsb
xchg
stos
movsb
inc
jp
movsl
jp
mov
jns
mov
push
xchg
fildl
push
mov
pop
jne
fidivrs
fdivs
sbb
pop
cltd
sub
arpl
inc
dec
xchg
dec
cmpsb
jno
push
pushw
mov
mov
pop
ret
cmp
push
and
icebp
in
pop
add
cltd
mov
call
xor
or
std
leave
push
fstpl
cmc
mov
dec
jo
aad
lea
outsb
mov
out
outsb
cmp
bnd
js
ret
cwtl
sub
xor
mov
inc
imul
stc
cltd
out
fiadds
ljmp
adc
rol
jno
and
imul
ficompl
jne
add
mov
popa
pop
or
and
rclb
dec
mov
xchg
sub
pop
int
mov
sub
xlat
inc
cmp
xchg
icebp
adcb
and
push
mov
fcmovnb
fdivrs
aam
aad
push
outsl
fcomps
and
insl
fdivrl
sub
xchg
jg
jbe
xor
push
pop
aaa
int
ret
orb
jnp
cmp
jo
in
push
push
repz
pop
sub
je
and
push
add
mov
arpl
sub
or
adc
inc
cmp
rclb
dec
mov
imul
iret
dec
in
or
dec
push
sti
in
lcall
cmpsb
sub
outsb
sahf
ja
xor
xor
adc
fwait
mov
jmp
out
iret
loope
arpl
cmpsl
mov
aas
loopne
jno
or
cli
mov
notb
push
imul
inc
xchg
nop
jecxz
add
sbb
push
push
sbb
ljmp
adc
shll
ret
mov
mov
insb
add
ss
mov
and
push
xchg
or
xor
stos
insb
ret
adc
mov
aaa
push
or
jle
mov
fadds
loopne
test
int
mov
insb
int
or
or
dec
fisubl
in
sahf
add
sub
pushf
or
outsl
enter
call
sbb
jmp
add
fstpt
add
sbb
imul
sub
sub
orl
dec
jp
inc
cmc
sub
movsl
push
fnstcw
dec
jg
push
jg
imul
daa
sub
and
or
inc
pop
add
fldl
or
hlt
push
xor
into
inc
jl
pop
adc
push
dec
repz
in
mov
mov
inc
push
inc
xor
xchg
dec
sbbb
jne
pushf
cli
mov
xlat
fmull
movb
pop
xlat
imulb
sarl
test
mov
xor
leave
and
sub
scas
dec
imul
inc
sub
push
fcomip
shlb
sub
xchg
sarb
mov
and
in
in
jecxz
out
jb
sarl
mov
std
inc
popa
jae
mov
daa
aam
repz
inc
fwait
loopne
ljmp
outsb
mov
ds
cld
or
fistps
mov
divb
cli
jnp
inc
mov
or
aaa
outsl
sahf
add
adc
cs
andb
test
sti
jns
jmp
sbb
test
push
ss
sub
sbb
xchg
je
movsb
pop
popl
gs
mov
sub
cli
pusha
ja
iret
imul
xor
fidivl
fld
fyl2x
addb
daa
mov
pushf
lahf
cmp
clc
pop
arpl
push
or
dec
mov
push
or
mov
out
ss
push
xchg
adc
mov
xchg
inc
jno
push
dec
pop
push
sub
fistpl
movb
arpl
jo
lods
xor
ret
test
les
std
icebp
sbbb
jp
or
lea
cmp
sbb
ljmp
mov
iret
out
jmp
push
nop
pop
aaa
mov
pop
pop
orl
cwtl
pop
testl
and
inc
jb
fwait
cs
hlt
ss
lods
sub
mov
mov
fmull
fidivrl
pop
cmpsb
lods
pushf
fsubrl
mul
add
sub
mov
ds
adc
and
out
cmp
dec
inc
out
fbstp
lods
das
push
inc
loop
jo
push
inc
lock
leave
repnz
lret
inc
insb
fxch
test
andl
fisubrs
fsubrl
pushf
cmc
sbb
cltd
divl
mov
bound
push
test
xchg
and
rclb
cmc
lret
mov
push
mov
andl
push
int
mov
je
hlt
roll
add
xchg
insb
das
mov
and
add
jge
enter
lahf
mov
inc
mov
xlat
and
pushf
out
cmc
sbbb
add
and
mov
loopne
icebp
mov
jg
jne
jno
add
icebp
jo
jae
or
push
popa
add
mov
js
lds
fmull
aam
add
jns
mov
cld
adc
mov
mov
repnz
inc
mov
loope
rol
cli
push
fwait
dec
push
outsl
jmp
cmp
add
jmp
adc
aas
mov
test
jns
test
test
push
lea
lahf
push
pop
and
mov
fstpl
daa
mov
lret
add
xchg
pop
sbb
jae
mov
stos
add
cwtl
lea
js
mov
ss
xor
rcrl
push
loope
and
adc
faddp
pop
into
and
stc
test
jp
and
dec
cmp
mov
xor
imulb
mov
mov
cmp
mov
gs
les
fiadds
mov
sbb
add
xchg
fnstsw
mov
xchg
fstp
xlat
and
fiaddl
mov
push
cli
mov
in
or
xchg
fwait
sbb
pushf
mov
ljmp
ds
xor
ds
imul
pop
push
fadd
fdivrl
dec
hlt
or
cmp
xchg
jge
mov
pop
stos
and
sub
xor
mov
arpl
sbb
sbb
js
mov
xchg
xor
jo
jns
pop
inc
imul
jns
sbb
testl
or
test
sbb
out
cmpsb
push
jnp
jl
pusha
stos
mov
loope
inc
adc
out
cwtl
sbb
and
lds
pop
cmp
mov
aam
arpl
cld
fiaddl
mov
ds
cmp
fwait
xchg
psrlq
inc
inc
stc
and
lret
call
adc
bound
stc
inc
pop
and
add
pusha
adc
cmpsb
daa
xchg
mov
add
div
test
lods
sti
sub
test
lret
mov
into
pop
inc
mov
fs
cltd
mov
pop
test
jb
je
push
mov
and
stos
adc
jno
push
mov
push
mov
ffree
bound
mov
js
adc
fmul
add
push
sub
enter
inc
andl
push
fwait
rorl
lock
clc
outsb
fwait
repz
lret
or
sub
jno
push
sarl
mov
push
test
data16
cltd
xlat
outsb
sub
jnp
push
cmpsl
mov
cld
inc
jl
lret
aad
imul
sbb
repz
or
mov
sti
not
mov
jg
aad
imul
pop
enter
add
inc
or
test
and
orl
mov
xchg
ja
hlt
fldcw
xor
adc
and
mov
test
icebp
inc
pop
enter
push
inc
les
xchg
mov
jne
dec
cmovae
or
and
xor
adcb
movsb
data16
es
test
cld
decl
fstl
xchg
aaa
cmp
insl
je
negl
lret
lods
add
and
fistpl
sahf
push
cwtl
test
ret
push
popf
xchg
xchg
push
mov
pop
sbb
sbb
divl
mov
xlat
mov
fwait
test
movsl
sub
aam
fsubs
mov
lods
pop
loopne
loope
push
das
outsb
inc
mov
inc
imul
jle
orb
shlb
imul
enter
pop
lea
cmp
pop
and
sbb
lods
int3
adc
cmc
mov
into
sbb
pop
mov
lods
xchg
xchg
sbb
in
pop
sahf
test
fdivl
mov
cmp
bound
hlt
xchg
addr16
add
mov
mov
pop
lret
sbb
out
insb
or
cmp
jg
mov
daa
das
inc
jmp
adc
notl
mov
test
je
in
pop
fcoml
fiadds
mov
enter
outsl
fwait
cmp
add
aad
sbb
daa
das
jbe
adc
pushf
jns
or
bound
push
scas
aas
and
push
xchg
call
ljmp
fsubl
jmp
ja
stos
sbb
outsb
cmp
fs
cmp
push
int
fldenv
incl
aad
xchg
incb
xchg
ljmpw
adc
jl
fs
loope
call
loopne
mov
push
lcall
loop
fisttpll
outsb
fdivs
push
movsl
pop
cmpsl
fs
push
push
mov
lods
fwait
dec
movsb
scas
imul
rcr
xchg
stc
sub
dec
pop
jle
push
andb
mov
icebp
push
push
dec
movsl
add
loopne
xchg
sub
negb
aaa
pop
movsb
inc
jb
push
mov
rorb
inc
cmp
outsb
adc
push
mov
into
cmp
outsb
sub
and
jp
mov
cs
or
mov
icebp
mov
add
in
push
sub
push
fisubrs
mov
int3
fcom
inc
lds
test
leave
and
jl
sahf
insl
aam
inc
imul
and
lahf
out
imul
cmp
push
lea
sti
jl
sub
inc
inc
ficoms
repnz
fimuls
repz
mov
pop
mov
test
push
push
in
imul
insl
shlb
mov
ret
les
mov
cmp
adc
jp
or
push
imul
jl
icebp
int
push
xchg
pop
daa
inc
push
add
enter
test
mov
mov
jbe
cmp
mov
dec
loope
sub
fnstenv
inc
loopne
fidivs
sub
sub
inc
xlat
add
mov
adc
in
push
int3
push
add
sti
push
test
fmuls
xor
push
sub
cmp
pop
sub
adc
call
jnp
jmp
xchg
xchg
xor
in
push
or
xor
test
lock
lret
je
pop
fdivrs
int3
sbb
in
adc
sub
les
nop
test
imul
mov
pop
idiv
lret
fisubs
mull
test
arpl
int
call
xor
fwait
pop
lcall
jne
bound
inc
stc
inc
pushf
push
mul
dec
in
dec
aad
movsb
ret
push
stos
push
xchg
push
pop
cmpsb
fdivrs
xor
or
mov
std
xor
mov
test
mov
sbb
lods
or
sahf
scas
sahf
add
mov
inc
push
adc
xchg
push
stos
addr16
pop
lods
pop
sbb
sub
insb
ljmp
lahf
or
clc
data16
call
int3
mov
out
push
mulb
jle
ror
xchg
cmp
cmp
mov
xchg
and
faddl
inc
mov
push
dec
xchg
adc
adc
gs
mov
leave
loope
push
pop
in
ss
or
in
mov
jecxz
dec
xchg
xchg
jbe
mov
cmc
fld
cmc
adc
cli
inc
and
movsl
mov
cmpsb
insl
ds
rcll
fsub
pop
fstpl
inc
sub
push
out
mov
shrl
aad
in
adc
sahf
outsl
test
bound
pop
fists
js
je
cmp
jge
ret
add
mov
push
or
ds
andl
mov
xchg
push
push
out
add
push
add
out
push
les
call
inc
xchg
push
sbb
bound
sub
mov
sub
in
push
int3
shlb
cs
stc
fwait
ja
mov
imul
xchg
lret
outsl
lods
enter
in
jge
ret
sahf
psubusw
insl
sbb
add
pop
pop
dec
pusha
jg
lods
jecxz
add
je
pop
inc
test
int3
sub
es
or
lcall
insb
es
mov
mov
mov
jae
test
push
aam
sub
push
lahf
cmp
les
ljmp
sti
hlt
sub
aaa
xor
sub
pop
mov
xchg
lds
lret
movl
int
mov
nop
bound
or
frstor
mov
mov
sbb
xchg
push
test
lods
aaa
push
pop
adc
sahf
push
mov
mov
pop
repnz
xchg
push
mov
xchg
push
rcl
push
dec
in
sub
adc
or
and
aaa
int
lds
lcall
ja
push
aas
leave
ja
aad
mov
xor
xlat
imul
xchg
and
mov
and
loopne
filds
or
enter
jge
sti
pop
aam
in
inc
and
dec
jbe
xchg
cmp
jb
or
out
iret
rolb
pop
insb
imul
push
cmp
icebp
out
rcrl
addl
pop
lcall
js
aas
mov
xchg
out
mov
and
ret
jge
jge
sub
dec
mov
in
xchg
push
pop
add
sahf
pop
and
push
jb
std
push
mov
sub
dec
addl
cmp
cmp
lock
mov
int3
in
imul
jle
push
pop
dec
mov
push
int
decb
fucomi
enter
and
add
sarl
es
sub
jecxz
sub
daa
push
loopne
repnz
lahf
mov
sbb
pop
pop
test
imul
pop
sarl
sbb
test
cmp
ljmp
or
or
mov
inc
or
mov
fadd
psllq
mov
mulps
xchg
and
outsb
mov
push
ja
mov
and
xlat
sbb
dec
bound
cmp
jns
push
pop
mov
mov
gs
push
sub
in
xchg
xchg
inc
clc
xor
shrl
sbb
incb
into
jg
mov
lds
push
add
jg
and
or
xor
inc
fstpl
cmpsl
xor
jge
fiadds
mov
push
ret
int3
lods
imul
push
out
sahf
mov
xor
xor
sub
push
mov
cli
push
mov
insl
mov
add
cld
lahf
xchg
rol
sub
cmp
movsb
andl
pushf
inc
out
mov
cmpsl
sbb
xchg
add
mov
mov
nop
rcrb
adc
mov
sbb
cmp
aad
in
adc
icebp
jbe
arpl
xor
ret
xchg
sarl
adc
pop
arpl
dec
test
xchg
sarl
cltd
fwait
sbb
xchg
stc
test
scas
iret
lret
and
ficoms
xor
and
rcrb
lret
test
cmp
test
imul
pcmpgtb
dec
push
in
nop
inc
in
jbe
repz
xor
sub
aas
jl
or
jo
mov
mov
jg
aam
jnp
or
les
cmp
ja
xchg
mov
bound
mov
sti
jnp
push
movsb
mov
xor
into
mov
mov
jbe
daa
out
add
push
xchg
mov
mov
ret
pop
jg
and
pop
lahf
inc
cmc
fwait
mov
xlat
loop
les
push
inc
xor
fnsave
pop
repnz
loopne
mov
dec
fsubp
xor
inc
andb
lcall
push
mov
inc
adc
int
add
ret
add
nop
jp
loop
mov
mov
xor
dec
imul
rclb
add
dec
dec
push
pop
int3
das
or
daa
cmpl
lods
inc
js
andl
int
stos
sub
pop
adc
and
popa
fisttpll
sub
adc
xchg
shr
cltd
xchg
jge
fs
inc
adc
push
std
call
mov
leave
shrl
or
ljmp
xchg
pusha
daa
add
sbb
cmp
mov
xor
leave
or
mov
sub
xchg
inc
add
ljmp
iret
xchg
jg
push
test
cmp
jg
mov
shl
mov
inc
mov
jecxz
pushf
add
in
cmp
cld
fsubrl
jae
mov
jmp
mov
mov
cmp
cmpsb
mov
mov
jmp
and
sbb
repnz
es
ret
rorb
imul
jecxz
inc
jbe
mov
imul
test
sbb
inc
test
xchg
inc
cmp
iret
add
pushf
push
add
insl
xchg
mov
mov
inc
inc
cmp
add
aad
divb
icebp
and
cmp
and
enter
lock
test
jge
sbbl
mov
xchg
inc
xor
and
idivl
jbe
imul
add
xor
in
shrb
jp
mov
orl
arpl
imul
xlat
push
xor
loop
mov
jnp
inc
lods
mov
imul
mov
je
or
aas
sahf
arpl
sub
jecxz
adc
sub
pop
lahf
pop
insb
adc
ja
mov
or
cmp
jp
and
xor
lret
ret
aad
clc
and
mov
xchg
and
jno
jmp
enter
inc
xchg
test
fldl
movsb
mov
movsl
mull
les
adc
mov
test
mov
cmp
adc
hlt
adcl
fnstenv
pop
and
sete
xchg
cli
or
mov
cmc
adc
mov
xchg
mov
mov
mov
mov
leave
pop
or
fnsetpm(287
lcall
dec
shll
cmp
xor
lretw
arpl
clc
rol
sahf
sub
sahf
mov
push
and
orl
or
jmp
dec
nop
ja
cmp
xchg
xor
mov
ret
rclb
sti
xchg
mov
popa
sub
addr16
pusha
cmpsb
xlat
or
pop
adc
outsl
loopne
ljmp
dec
xor
xchg
cltd
mov
xchg
rcr
ret
addr16
jmp
shrb
dec
sbb
pop
fwait
push
popa
idivb
pop
pop
and
jmp
jo
psrlw
and
adc
inc
es
mov
xchg
inc
sbb
je
adc
ret
outsb
xor
outsl
loop
xchg
cli
xor
pop
test
lret
lods
sahf
xlat
add
xor
pop
push
daa
test
xor
cmpsb
sub
out
xchg
jge
sbb
dec
sub
jmp
jge
sub
jo
add
std
sub
jnp
sbb
pop
cwtl
in
mov
pop
xor
and
cld
jp
adc
pop
cs
ss
and
imul
add
or
gs
sbb
mov
dec
aam
dec
lock
xor
inc
fsts
xchg
add
jmp
xchg
pushf
mov
paddq
or
lock
outsl
dec
dec
sti
lcall
and
xor
xchg
call
adc
jb
arpl
cli
mov
sarb
out
int
cmp
in
jp
clc
aas
jbe
xlat
mov
sarb
test
push
mov
popa
leave
and
data16
pop
jmp
xchg
jbe
in
in
ljmp
in
fs
enter
cwtl
pop
sub
mov
inc
dec
into
mov
lcall
out
loope
xchg
pop
cmpsl
test
jp
jb
mov
or
in
dec
aas
jl
mov
inc
ret
or
lret
loop
jge
aam
adc
pop
ret
movsb
sbb
imul
push
hlt
das
scas
test
pop
dec
mov
xchg
adc
add
mov
adc
ror
mov
sub
cmp
dec
and
gs
idivb
orb
xchg
mov
scas
lret
sub
fiaddl
sbb
xor
scas
mov
jne
push
mov
jnp
pop
mov
mov
add
lds
mov
inc
pop
jbe
rolb
popf
mov
mov
movsl
rclb
cltd
xchg
jno
pop
je
mov
shl
mov
pop
adc
leave
cmp
lea
mov
wbinvd
pop
sub
pop
mov
lods
sbb
add
push
sub
aaa
std
pop
mov
xchg
stc
lret
jae
inc
std
jl
mov
mov
mov
pop
leave
pop
jnp
pusha
mov
pop
pop
and
cmp
sahf
cwtl
out
mov
lahf
test
cmpsb
mov
call
sti
add
je
push
ret
add
push
in
aaa
stos
xchg
push
xlat
mov
xchg
and
xor
cltd
xor
push
aaa
ds
pop
jg
sub
mov
mov
icebp
push
dec
pop
adc
or
push
mov
outsl
stos
mov
es
lcall
decb
xchg
in
mov
pop
mov
cmp
jl
aam
scas
movsb
popa
lock
add
push
xchg
ret
adc
pop
fcoml
in
dec
clc
mov
dec
iret
push
xor
sub
cmpb
in
add
cwtl
cmpsb
sub
dec
mov
mov
dec
rcll
dec
cs
and
add
lock
sbb
lea
inc
jmp
mulb
out
popa
xlat
out
jge
jle
std
pop
daa
out
cmpsl
xchg
xchg
hlt
ds
push
and
mov
xchg
sbb
iret
stos
push
mov
mov
dec
push
jg
sbb
cmp
aas
jo
lret
sar
mov
and
mov
jo
mov
pushf
mov
ja
sub
xchg
das
and
cli
in
mov
ja
xchg
fisubl
push
dec
bnd
adc
xor
fildll
adc
outsl
sub
push
stos
push
cmpsl
movl
cltd
pop
jbe
int
xchg
push
lock
in
fistpll
pop
sbb
xor
mov
mov
es
mov
test
loop
or
arpl
pushf
adc
mov
les
in
inc
adc
mov
movsl
int
and
pop
dec
push
cli
inc
push
scas
push
mov
jne
out
scas
mov
sub
mov
dec
pop
in
cmp
sub
or
les
jg
add
sub
out
shrb
pushf
xchg
in
xlat
fisubs
cs
xor
bswap
inc
adc
jmp
dec
xor
outsb
inc
dec
inc
inc
sbb
pop
sbb
add
sub
or
fistl
push
cmp
jne
popf
push
in
sbb
arpl
mov
in
xor
add
js
xor
popl
push
pop
cli
push
aad
xchg
shl
nop
adc
jg
sub
jno
or
cmp
sub
pop
xchg
xchg
cmp
or
push
ljmp
sbb
xor
test
out
mov
inc
inc
mov
mov
hlt
popf
imul
add
hlt
rcrb
mov
pop
mov
out
mov
jb
imul
lods
call
rcrb
ret
loopne
jns
dec
jno
inc
jmp
jbe
or
jecxz
mov
insb
into
lock
in
or
pusha
mov
in
les
add
and
xor
mov
jnp
into
enter
cmp
sbbb
movsl
adc
and
mov
sub
mov
cltd
in
ret
icebp
fucomip
je
andl
cmp
mov
sbb
or
adcb
clc
fidivs
jmp
mov
mov
mov
sub
push
mov
and
test
mov
in
or
lds
int3
lock
jp
sbb
push
daa
pop
cmpsl
loop
and
mov
imul
inc
cmp
sub
lock
call
add
pop
in
push
push
call
jle
hlt
mov
fs
loop
jb
test
pop
cmp
rclb
push
insl
mov
ret
rcll
mov
pop
and
cmpb
dec
mov
lcall
mov
pop
and
inc
test
push
or
shl
and
xchg
clc
sbb
ficompl
ljmp
inc
pop
xchg
das
xchg
inc
cld
loope
sbb
rolb
out
imul
ljmp
iret
int3
popa
push
adc
out
mov
push
xchg
fwait
inc
imul
insl
add
dec
cld
shll
into
and
aas
test
sbb
add
cmc
iret
daa
cmp
xchg
mov
push
pop
pop
test
and
lds
scas
popa
pop
in
or
aaa
outsb
sti
lock
and
cmpsb
repnz
jne
fnstcw
insl
stc
sub
pop
fiaddl
jne
loop
adc
xor
jp
out
adc
stc
ja
inc
pop
sub
fsubrs
push
int
sub
ror
in
xchg
push
sub
aad
or
lahf
push
adc
in
int3
ficoms
loop
je
or
push
pop
pcmpgtw
pop
daa
add
jl
shrd
aad
int
out
lods
push
lret
xor
jmp
pusha
inc
cmp
ljmp
inc
pop
sarb
pop
xchg
insb
out
jbe
xchg
lahf
sub
fstpl
sub
lret
bound
xor
loop
jb
out
adc
repnz
gs
mov
jmp
ret
or
xor
xor
push
pop
adc
sahf
in
push
call
push
pop
push
dec
jno
jnp
icebp
or
out
pop
push
or
xor
mov
jns
into
adc
cli
xchg
es
mov
mov
and
xchg
cmp
push
cmp
sbb
push
sub
mov
ffree
xchg
int
ret
gs
arpl
dec
jmp
mov
sbb
mov
pushf
cmovns
test
jno
scas
outsl
push
mov
sub
imul
add
dec
ds
and
lods
fnstsw
and
push
pop
filds
add
mov
mov
in
call
aad
movsb
add
nop
jl
and
mov
sub
shlb
rcll
rorb
jnp
cli
adc
bound
add
ret
ljmp
test
xchg
pop
out
icebp
xchg
jle
cmp
mov
lret
push
fisubrl
testb
in
and
fsubr
ret
mov
pop
sub
fmulp
mov
push
sub
push
mov
dec
cltd
and
arpl
sti
inc
jne
sbb
xor
mov
adc
mov
aam
inc
incl
ret
shlb
mov
push
or
jbe
rcrl
loop
mov
sub
mov
push
dec
or
daa
pop
pusha
lock
push
daa
vpperm
sarb
aas
xchg
xor
inc
hlt
push
push
push
fwait
lcall
dec
aad
addr16
pop
vpmaddwd
jge
nop
adc
insb
ds
mov
test
xchg
rcll
pop
lods
or
and
repz
int
push
xchg
mov
and
fucomip
push
aas
out
repz
push
rorb
jmp
mov
call
out
fiaddl
mov
in
loopne
jmp
movsb
and
push
bound
frstor
test
pop
dec
xchg
pop
in
std
sub
jbe
sbb
imul
adc
and
sub
or
outsb
cmp
add
lods
fiadds
mov
cli
loop
or
xchg
loopne
mov
xchg
mov
push
mov
nop
mov
in
iret
enter
or
sub
je
mov
mov
adc
sub
cs
jb
pop
in
inc
jl
jns
pop
aaa
mov
mov
mov
xor
xlat
scas
add
hlt
mov
and
mov
int3
inc
add
lret
dec
cmp
aaa
mov
cmp
mov
xor
mov
pushf
xchg
clc
mov
dec
imul
xlat
out
fwait
mov
mov
dec
sbb
or
sub
ret
inc
iret
in
pop
out
in
mov
js
rclb
ss
arpl
repnz
xchg
rol
outsl
mov
mov
arpl
lock
imul
sub
pop
mov
sbbl
addr16
popa
repnz
lret
mov
dec
ss
call
mov
dec
xchg
dec
mov
add
inc
cmp
or
sub
mov
call
lcall
movsb
das
rorb
mov
popf
mov
out
inc
add
jmp
push
mov
popa
sub
outsb
mov
cltd
cmpsl
mov
inc
push
jnp
in
movsl
pop
jp
xchg
pop
lea
pop
call
xchg
loope
addl
in
jg
ffreep
push
ds
fs
pop
sbb
mov
es
xor
jo
loop
jnp
and
xor
mov
ficomps
and
fsts
dec
nop
std
loop
mov
cmp
rol
cmp
mov
jb
ret
jne
sbb
cltd
imul
and
sbb
cmp
hlt
into
push
out
and
aam
testl
rcrb
push
cmpl
pop
aaa
pusha
mov
es
cmc
jb
push
mov
fbld
pop
hlt
ss
out
mov
add
std
lods
cmp
int3
push
lcall
mov
jae
loop
iret
js
add
push
clc
add
inc
mov
sub
dec
cmp
sahf
jnp
lods
repz
ret
xchg
cmp
inc
test
mov
call
mov
add
jno
mov
xchg
das
xchg
mov
mov
xor
adc
jmp
mov
adc
or
pop
push
adc
dec
inc
frstor
aad
outsb
and
fsubs
push
repnz
pop
pop
sahf
adc
lea
faddl
xchg
lds
sub
dec
loope
mov
or
push
pushf
rcll
xchg
cmpl
scas
xor
out
cmp
jp
xlat
pop
adc
addl
sarl
adc
mov
sbb
daa
outsb
inc
shrb
repz
xor
js
data16
aad
adc
xchg
pop
jbe
jne
xlat
or
ja
les
clc
cld
jg
jne
addb
sti
lahf
xchg
rorl
or
inc
sub
sbb
lea
xchg
fucomip
jno
mov
js
mov
inc
and
cltd
in
cmpsl
mov
inc
inc
push
fst
push
push
andl
dec
pusha
sub
ss
mov
xchg
pusha
out
scas
mov
sub
lods
aas
loop
stos
mov
sub
mull
ret
mov
pmullw
inc
lret
pop
fwait
jno
shll
add
xchg
ja
in
add
xor
repnz
and
fimuls
aas
les
jp
adc
sub
xchg
adc
push
xlat
and
mov
idivb
addb
dec
sub
add
cmovge
sub
jbe
push
or
mov
push
dec
mov
push
pop
cltd
daa
cmp
push
jge
push
cwtl
repnz
ljmp
dec
lret
or
dec
iret
daa
push
movsb
ret
in
outsb
fistps
adc
add
mov
mov
jae
out
cmp
add
scas
and
mov
jbe
in
stos
fstpl
jo
sbb
add
mov
insl
jge
sbb
adc
pop
lods
inc
push
xor
lods
fwait
cmp
loope
sub
mov
pushf
loopne
in
in
push
adc
mov
xchg
mov
adc
ljmp
sbb
dec
cmc
stos
mov
jle
sub
arpl
dec
out
mov
subb
in
mov
repz
and
pusha
pop
jne
popf
mov
pop
fdivrs
stos
in
sub
or
sub
outsl
xchg
mov
xlat
adc
inc
scas
push
enter
mov
cmp
enter
lods
adc
mov
mov
mov
xor
add
mov
xchg
loop
xor
pop
dec
dec
or
mov
xchg
xor
push
jne
mov
outsl
ja
shlb
int3
movsl
lock
add
inc
xor
test
xchg
push
lret
lock
aaa
dec
je
add
loope
mov
in
cmp
clc
scas
movsl
cmp
push
push
or
dec
lock
cmp
or
pushf
and
call
scas
jo
in
and
xor
insl
mov
cmp
xchg
popf
xchg
mov
xor
and
inc
sub
rol
push
push
aam
add
xchg
cmp
pop
sbb
mov
repz
jae
mov
int3
out
xchg
pop
push
das
or
int3
push
repz
add
testb
aaa
mov
push
insb
jl
and
in
inc
dec
lods
out
lods
in
push
test
mov
fsts
inc
fbld
push
lods
push
adc
gs
out
mov
popa
rcrb
popa
mov
je
sbb
in
cld
mov
pop
sub
mov
mov
mov
xor
xor
jb
das
xchg
mov
clc
pop
mov
xor
push
and
jge
and
add
lahf
test
jbe
insl
adc
jns
lods
adcl
aaa
loop
fadds
mov
or
dec
add
mov
push
push
jg
lods
loopne
push
js
xor
fdivl
inc
nop
adc
scas
add
sbb
mov
les
jnp
inc
mov
into
push
xchg
shll
bound
movsb
xchg
sbb
leave
std
sub
lret
mov
xchg
inc
sbb
mov
mov
ds
lea
int
fadds
cmpsl
mov
ds
mov
inc
outsb
xchg
decl
sar
sahf
aam
jno
cmp
cmp
repnz
sbb
mov
inc
rcrl
rcll
test
mov
xchg
inc
notl
aaa
jmp
dec
test
outsl
repnz
mov
out
shrd
push
js
adc
inc
xor
dec
add
repz
jb
fcmovnu
adc
fmull
scas
mov
pop
lret
es
push
xchg
sub
clc
inc
je
xchg
aam
mov
in
jg
mov
lock
es
xlat
in
cmp
lea
push
inc
loop
cwtl
cmp
add
jecxz
jp
addr16
sub
sbb
movsb
xchg
mov
push
outsl
pop
jne
das
aam
out
xchg
pop
clc
cmpsb
pop
mov
and
in
lods
jl
jno
xor
out
push
xor
sub
aad
ficoml
test
repz
fiadds
xlat
cmp
insb
arpl
cmp
jbe
jg
pop
jae
sub
push
aam
test
outsb
ds
mov
xchg
xchg
inc
dec
cmpsb
mov
lea
dec
jns
xor
mov
jmp
lahf
inc
pop
repnz
add
pop
jg
jecxz
add
gs
in
lds
mov
loopne
jg
pop
pusha
fcmovne
adc
fs
nop
adc
push
inc
cmpsl
or
mov
jb
gs
test
imul
in
mov
cmp
sub
stos
outsl
mov
fsubrl
leave
call
fs
dec
jp
xor
push
loop
adc
cmp
imul
push
mov
nop
mov
mov
xchg
xchg
aad
dec
dec
mov
movb
push
xchg
outsl
aam
ljmp
mov
mov
sbb
fnstsw
iret
sub
pop
aaa
fnstsw
mov
push
ljmp
fidivrl
sub
fcmovne
adc
leave
data16
jg
adc
adc
cmpsl
cmpsl
sub
or
pushw
aad
pop
inc
jne
sbb
inc
movsl
call
push
sahf
lcall
loope
loope
push
xchg
pushf
and
add
xlat
cmp
mov
xchg
mov
dec
sub
mov
cld
and
bound
cs
and
jae
add
cmpsb
adcl
sahf
xchg
inc
pop
xlat
jl
or
cmp
pop
movsb
out
dec
push
dec
xor
push
iret
je
fiaddl
sub
mov
inc
mov
mov
movsb
arpl
into
call
mov
aad
lock
push
sarb
inc
cwtl
pop
push
sti
sub
aas
or
mov
mov
insb
dec
lods
mov
xor
fdivp
cmp
clc
sgdtl
flds
pusha
inc
sbb
or
xchg
mov
xor
cmp
inc
fidivrs
mov
ljmp
xor
leave
push
bound
cmpb
mov
mov
adc
movsl
test
lods
pop
mov
sub
or
jb
sbb
cmpsl
fs
jbe
loop
fdivrs
in
xor
jnp
adc
mov
lods
les
movsb
es
xor
int3
out
imull
movsl
cmpsl
mov
std
mov
sbb
adc
jge
out
fs
inc
mov
imul
jle
out
popf
out
mov
xchg
dec
cwtl
inc
xlat
push
cmp
aad
mov
xchg
pop
mov
divb
stos
mov
leave
inc
inc
movsb
fst
movsb
imul
cld
inc
xor
jnp
fwait
mov
movsl
repz
shll
cli
pop
mov
mov
mov
int3
mov
adc
mov
sub
test
aam
lret
out
in
fwait
and
movsl
xor
push
mov
adc
daa
pusha
enter
xchg
out
xor
and
insl
xor
adcl
out
mov
xchg
xchg
dec
mov
cmpsl
loope
and
cmp
jp
dec
fisttps
mov
fstpl
enter
nop
jbe
jg
dec
xor
lcall
cmc
filds
and
cmp
imul
pop
aad
push
pop
rcrb
shll
sub
cltd
stos
mov
or
xchg
dec
addl
mov
mov
mov
dec
jp
popa
hlt
dec
pop
outsl
and
js
lds
push
xor
imul
pop
fldcw
adc
mov
adc
dec
or
lret
push
xchg
hlt
lock
mov
push
add
out
cmp
pusha
push
test
les
fistpll
imul
mov
pop
xchg
jae
xor
ja
loope
sub
cwtl
xor
mov
sbb
mov
test
pop
mov
test
paddsw
leave
out
sub
add
adc
cmp
mov
mov
cwtl
inc
jno
rorl
clc
pusha
and
xchg
lock
stc
loope
mov
sub
leave
dec
and
and
mov
adc
in
outsl
mov
inc
call
ret
and
or
inc
jb
cld
cmpsl
in
fisubs
push
out
andl
or
jecxz
pop
sub
mov
fs
loope
test
repz
xchg
stc
jg
pushf
mov
sti
push
xor
mov
adc
and
call
mov
scas
mov
add
ja
mov
cmpsb
xchg
jmp
lock
gs
pop
mov
jl
mov
push
stos
mov
jl
mov
cmp
hlt
rol
push
ss
mov
lds
add
cli
push
push
jne
add
xchg
out
in
sbb
cmc
xadd
or
das
pop
ret
into
js
rcll
fs
lea
or
nop
mov
iret
orb
pop
stos
inc
jae
adc
dec
push
jae
popf
pop
insb
mov
nop
aad
sarb
push
add
add
cmp
cmovne
test
popa
daa
div
test
hlt
pop
ljmp
add
mov
push
jb
pop
aam
int
repnz
sbb
push
ljmp
jmp
in
xor
or
and
pop
xchg
cmp
jno
outsl
jne
pop
in
mov
xor
aas
dec
scas
sub
mov
push
pop
mov
mov
ja
test
sub
sub
scas
frstor
outsl
inc
lahf
adc
gs
xchg
cmpsb
push
mov
pop
xor
xchg
sub
mov
loopne
add
and
sbb
in
jo
movsl
cmp
andl
sbb
loopne
loop
movsb
fldcw
pop
clc
jle
fs
aas
jmp
fstpt
mov
xchg
mov
jecxz
cmp
mov
call
in
cmp
cmp
sbb
mov
xor
push
pop
adc
jne
enter
jbe
mov
in
data16
insl
mov
mov
sbb
dec
dec
mov
mov
in
shlb
bound
add
ljmp
inc
lods
add
rcrb
sbb
push
lcall
arpl
pop
sbb
loop
push
imul
outsl
sti
pop
xchg
mov
dec
jno
ja
pop
nop
fcoms
push
xor
mov
fsubl
mov
cld
movsl
mov
sbb
dec
push
bound
xchg
divps
jb
xchg
xorl
push
inc
shll
cli
lcall
pop
mov
in
adc
aam
lret
xchg
mov
adc
dec
out
push
je
rorl
sub
mov
push
pop
fmul
shrl
std
mov
xorl
ja
cmp
xchg
jecxz
add
aas
jne
repz
jns
adc
xchg
inc
das
xor
adc
push
mov
jo
aam
dec
stc
in
push
sub
inc
xor
shll
pop
push
and
idivl
in
dec
enter
insl
iret
fcmovnbe
arpl
mov
jecxz
inc
and
lds
fwait
jns
or
mov
sub
xlat
add
push
mov
lret
mov
xor
dec
sbb
das
stc
movsb
repz
out
jno
push
cmc
jmp
subl
dec
cmp
sbb
push
outsb
popl
stc
push
sbb
add
lds
cbtw
fistpll
enter
popa
insl
gs
mov
in
es
pop
fwait
push
fnsave
mov
push
adc
fs
mov
jge
sbb
xchg
jmp
icebp
mov
xchg
pushl
xorb
lods
dec
jo
lcall
out
or
pop
cld
aas
mov
sub
fsubl
dec
pop
add
std
cmpsl
stos
lock
cmpsl
dec
imull
fnstenv
arpl
sub
repnz
or
xchg
imul
je
repnz
test
std
or
sarb
and
mov
jae
test
mov
cwtl
xchg
push
bound
rol
inc
mov
inc
mov
mov
les
and
adc
sbb
jbe
mov
leave
aad
mov
cli
inc
adcl
xchg
inc
xchg
movsb
sub
cmp
pop
mov
pop
jl
and
push
dec
vmwrite
fwait
cmp
adc
dec
enter
stos
rorl
loope
subb
jecxz
fs
push
outsw
pop
out
mulb
in
inc
cmpb
das
lods
or
pop
ja
mov
jmp
adc
add
dec
rol
stos
movsb
mov
outsl
repnz
loop
jnp
jl
stos
jbe
sub
lods
sub
add
lods
lcall
orl
xchg
subl
orl
inc
sbb
cltd
scas
mov
repz
mov
in
loope
mov
shlb
xchg
adc
add
rolb
out
int3
cs
mov
and
addr16
lods
test
sub
pop
arpl
or
jmp
sbb
stos
inc
sbb
mov
cmp
mov
and
cli
ret
jmp
push
pop
out
jbe
call
dec
push
fisttpl
shlb
push
int3
int3
adc
cwtl
fbstp
addr16
je
jmp
adc
mov
movsl
idivl
mov
xchg
imul
out
jb
mov
mov
movl
into
mov
push
jg
mov
lock
std
inc
test
or
mov
jb
sbb
std
pop
fwait
mov
stos
rorb
push
mov
jo
sti
pop
sbb
sbb
and
hlt
dec
cmp
cmp
mov
shrb
mov
or
negl
pop
fucom
rorl
xchg
xor
jge
out
jnp
lods
in
pop
mov
lret
mov
jnp
xchg
out
jmp
inc
ds
xchg
movsb
jnp
and
xchg
es
adc
mov
in
in
fadds
repz
test
pop
scas
lret
les
jecxz
fidivrs
push
dec
vpsubusw
cmpsb
mov
xor
mov
sahf
mov
lcall
inc
xor
jmp
aas
stos
jbe
jl
and
lcall
gs
adc
adc
inc
dec
jmp
aas
cmp
sub
sti
xchg
stos
es
mov
fists
testb
out
nop
inc
insb
sbb
mov
dec
jo
cmp
adc
jb
pop
xchg
loopne
outsl
out
sub
sub
shlb
lock
cmpl
inc
jmp
push
pop
sub
mov
lock
mov
cli
cld
pop
pop
daa
fcompl
dec
mov
and
xor
stc
jecxz
jae
mov
lock
bswap
add
cli
jecxz
icebp
dec
add
sub
mov
stos
out
push
shrl
dec
add
mov
xor
push
push
repnz
push
pop
out
and
pop
dec
cltd
insl
packuswb
inc
pop
call
add
pop
xchg
adc
adc
xchg
fwait
add
push
rolb
stc
xchg
add
aas
ja
jmp
stos
outsl
dec
lods
jp,pt
les
pop
lods
xor
inc
jne
test
push
pusha
sbb
dec
push
data16
idivb
push
test
pushf
addr16
add
test
mov
sub
fldcw
xor
hlt
clc
insl
push
fs
push
fld
cli
inc
push
cmp
in
cltd
sti
aad
nop
pop
sbb
xor
jle
test
cmc
mov
iret
repnz
aad
sub
mov
andl
rclb
cld
data16
xchg
or
adc
lret
pop
rcr
xor
imul
ret
out
lea
ds
sub
or
mov
out
jae
and
addb
outsl
jecxz
xor
push
jne
or
fcomip
mov
pop
imul
mov
mov
clc
adc
fwait
push
mov
pmaxsw
loopne
clc
lock
add
out
pop
movsl
scas
fmull
test
dec
shlb
and
movsl
je
fisubs
jmp
mov
or
rcrb
dec
test
dec
ljmp
and
adc
push
pop
dec
or
loopne
sub
adc
int
xchg
icebp
clc
or
cmc
jo
jo
mov
shr
btr
addr16
add
or
cltd
aaa
sbb
pop
mov
cmp
dec
mov
cmpsl
shr
stos
fsubr
push
outsb
in
int
aad
and
cwtl
loopne
incl
loopne
or
push
insl
lret
call
les
cld
and
push
in
in
in
add
into
les
enterw
jp
shlb
mov
dec
das
ret
out
gs
mov
outsl
mov
adc
cwtl
dec
outsb
push
cltd
aad
ficoml
jmp
andl
sahf
lret
push
in
stc
dec
push
sarb
xor
cltd
sub
imul
leave
lret
dec
addb
mov
cld
pop
testl
cmp
out
in
push
mov
pop
mov
imul
jg
jb
lcall
in
push
jmp
jge
imul
xchg
xchg
dec
inc
out
call
aas
in
les
incl
dec
sbb
sbb
push
cmpsb
dec
mov
sub
js
int3
cmpb
test
or
jb
cld
in
cmp
clc
lea
mov
lahf
daa
insb
sub
jg
jno
int3
mov
jl
std
inc
dec
add
cmpsb
shlb
cli
adc
mov
sub
or
push
data16
pop
adc
loopne
jb
aad
repz
sub
add
push
mov
cwtl
jg
into
loopne
scas
pushf
sbb
adc
std
pop
test
mov
jp
add
cld
idivb
xor
loopne
fdivl
dec
push
xchg
or
cmp
mov
iret
jae
adc
inc
inc
lods
inc
in
dec
dec
scas
push
or
sbb
push
ss
inc
test
outsl
mov
sbb
mov
mov
sti
repnz
js
sbb
leave
sub
sub
cmc
jae
and
adc
dec
cmp
mov
mov
ret
sti
adc
jb
aas
ss
pop
and
mov
mul
jnp
shlb
cmp
ljmp
cmp
daa
jo
icebp
out
push
xchg
sbb
test
mov
cs
mov
cld
je
cmp
sub
es
adc
dec
xchg
jmp
rolb
lea
aam
mov
lods
jnp
xchg
sti
or
bound
mov
xor
fcompl
mov
sarb
xchg
sar
or
lret
xchg
pop
inc
repnz
cmp
or
dec
pop
sbb
push
pop
aaa
cmpsl
leave
add
add
and
adc
aad
mov
adc
lcall
or
adc
add
call
es
imulb
in
sub
outsb
pop
and
loop
sbb
icebp
sbb
jmp
jmp
or
rorl
fidivrs
aam
outsl
into
mov
scas
pop
js
mov
nop
xlat
cmp
mov
lahf
std
xor
fs
lret
add
ds
fldcw
mov
mov
mov
xchg
mov
dec
dec
sub
addr16
ret
dec
inc
out
push
inc
cli
out
in
popf
mov
pop
lahf
das
mov
push
fistl
xchg
push
fnstcw
jne
aas
les
notl
icebp
ljmp
cli
push
sub
pop
jbe
xchg
lods
aad
add
mov
dec
in
pushf
ja
pop
sub
nop
popa
cmp
and
mulb
mov
daa
stos
dec
add
and
adc
cmp
cltd
xchg
cmp
aad
lret
add
xchg
loope
push
inc
mov
xor
fsub
inc
mov
repnz
jg
inc
cmpsl
aas
push
flds
repnz
in
lret
xor
cmp
sbb
xchg
and
insl
pop
ja
jmp
cs
mov
sub
es
insl
shrb
push
or
sysenter
sti
mov
mov
fidivrl
jle
loope
dec
mov
xchg
sbb
rclb
or
adc
test
test
mov
mov
xor
jnp
arpl
out
cmp
jp
or
leave
add
dec
dec
jmp
leave
daa
iret
fs
add
adc
ret
cltd
into
xorl
push
imul
in
inc
add
push
xor
inc
xchg
divb
pop
std
test
inc
jp
out
sub
jno
or
loopne
subl
push
lock
aam
test
ljmp
sbb
js
push
pop
push
mov
dec
int3
test
jno
or
outsb
mov
popa
pop
ret
cmp
jnp
xlat
dec
cmp
adc
leave
inc
pop
and
cwtl
inc
push
push
inc
or
test
sub
aas
arpl
cmp
shlb
cmp
add
outsl
test
pop
push
in
and
call
and
jge
mov
push
and
inc
mov
gs
aaa
fnsave
cmp
mov
sbb
jmp
nop
cld
mov
movsl
cmp
lret
dec
push
xor
pop
test
aas
fsubl
xor
cld
lahf
xor
cmc
hlt
lret
and
fadds
sub
pop
push
sbb
jnp
adcb
nop
jecxz
push
cmpsl
sub
push
mov
movsb
out
icebp
jnp
adc
sti
fsubl
cmp
pop
pushf
pusha
push
aas
dec
aam
mov
sbb
inc
sbb
sbb
push
and
cmp
mov
adc
adc
and
shl
insl
call
add
and
mov
rclb
pop
mov
negl
enter
clc
rclb
jae
and
out
sbb
aas
sbb
cmp
clc
inc
in
pusha
test
out
cwtl
adc
sub
jmp
push
push
pop
inc
popa
push
xchg
mov
jmp
push
outsb
lcall
add
testb
rorb
push
xor
nop
rcl
and
push
push
mov
pop
das
pop
dec
rcl
jnp
jb
stc
mov
shlb
cmp
pop
dec
mov
xchg
cmpsb
andl
jmp
popa
mov
and
pop
cld
inc
jmp
std
inc
dec
jnp
fwait
add
movsb
mov
jo
cld
mov
pop
outsl
or
push
pop
fidivs
mov
cmpsb
fsts
lret
xchg
in
jae
pusha
jno
ljmp
push
clc
jecxz,pt
lahf
divb
les
cwtl
fldt
push
repnz
in
in
daa
movsb
imul
mov
aam
jae
out
lea
cmp
sub
mov
dec
ss
cli
in
push
xor
xchg
jns
fnsave
push
push
xor
iret
pop
jo
jg
pop
push
cltd
add
mov
sub
mov
loope
sub
adc
pop
lcall
loop
pop
xchg
out
js
xchg
outsl
mov
cmp
mov
adc
lahf
stos
sti
adc
lods
ja
push
sub
nop
mov
mov
jns
pop
gs
inc
je
into
lds
into
pop
pusha
adc
inc
into
and
inc
out
aad
cmpsb
adc
cmpb
xor
movsl
lods
push
adc
sbb
mov
out
or
inc
add
scas
das
lahf
decb
clc
sub
mov
scas
sbb
shl
sarb
lock
dec
fiaddl
sti
inc
sub
xchg
mov
movsb
mov
subb
jl
xor
aas
inc
jbe
xchg
imul
and
test
rclb
fidivrs
aam
mull
mov
sar
xchg
xchg
push
out
imul
clc
lahf
dec
cmpsb
in
push
pushf
cmp
in
jno
push
pushf
add
sbb
push
lret
stos
inc
scas
sbb
mov
sbb
jb
jnp
dec
inc
mov
ja
lds
loop
adc
aas
xchg
lahf
andl
inc
add
mov
mov
xorb
imul
sbb
mov
adc
ret
ficompl
push
out
lcall
popf
push
fsts
in
cmp
sbb
dec
mov
and
movsb
ja
cli
fdivrs
pop
xchg
cwtl
jge
movsl
mov
loopne
jne
pop
shrl
out
clc
in
cmp
or
lret
and
pusha
pop
int3
mov
clc
dec
xorb
push
cwtl
pop
imul
sbb
adc
inc
mov
push
adcb
mov
test
into
js
gs
ret
ja
insb
imul
fcoml
dec
je
cmpsl
mov
sub
dec
repz
inc
test
inc
gs
mov
lcall
rep
iret
into
dec
and
jg
sti
popf
or
dec
dec
push
cmp
test
out
mov
and
or
out
push
cmpsl
mov
or
xlat
in
cmp
sub
cmpb
in
sub
in
shl
outsl
push
cmp
xchg
aam
adc
cmpsb
aas
xchg
mov
or
lods
push
into
push
mov
fsubs
mov
push
push
sub
sub
sub
popa
popa
mov
loope
jne
cld
dec
dec
sub
xlat
popf
push
enter
aam
aas
sbb
je
jp
push
cmp
push
pop
gs
adc
ds
mov
lahf
in
jno
fisubs
push
mov
lock
fldenv
out
push
daa
fs
repz
gs
movq
mov
int3
fistps
test
mov
cmp
jg
push
sarl
or
mov
das
pop
jge
addr16
ds
out
xchg
popa
sub
xchg
fistpll
lret
xor
mov
sbb
xchg
ljmp
shr
sub
jg
adc
shr
out
sbbb
mov
lcall
icebp
mov
mov
mov
jnp
jp
cmp
cwtl
insb
push
cmc
sub
andb
loop
outsl
pop
adc
adc
jl
jne
loopne
cltd
sub
push
cmp
jno
jb
jg
lahf
out
dec
iret
fpatan
mov
fs
rclb
xchg
test
cld
js
mov
ret
mov
loop
mov
jp
sub
icebp
and
lret
mov
inc
shrl
sarb
fwait
mov
fisttps
adc
in
ds
xchg
decl
loop
pop
and
sub
imul
and
xor
repz
sbb
call
ljmp
std
imul
mov
mov
or
dec
sbb
jmp
lret
push
xchg
adc
cmc
in
lahf
bound
je
popf
mov
lret
xor
inc
addb
mov
xor
jae
add
lods
shlb
adc
insl
imul
sub
add
lock
insb
sub
in
push
push
lods
test
das
lret
jmp
xchg
movsb
fnstcw
mov
sbb
cs
xchg
xor
jge
sbb
add
xchg
ljmp
in
fwait
mov
mov
inc
pop
arpl
arpl
aaa
call
imulb
adc
vmovups
fnclex
sub
pushw
push
scas
cmp
xlat
jo
dec
adc
pop
aad
fistpl
lds
frstor
mov
xor
jmp
std
outsb
jo
ds
cmp
sub
dec
cld
ss
incl
out
adc
insl
push
push
jge
add
pop
xor
dec
add
call
push
jmp
xchg
mov
fwait
pop
in
dec
mov
mov
and
std
sbb
scas
add
fs
repnz
out
ja
insb
ret
popf
sti
mov
adc
xchg
mov
stc
addr16
ja
lahf
lret
shlb
das
vmovq
ret
mov
int
pop
pop
jo
push
ss
adc
sub
dec
sahf
xchg
inc
and
push
cmp
and
sbb
mov
mov
jmp
es
xor
jp
outsl
mov
xor
je
and
in
roll
cmpsl
pusha
mov
cmp
push
mov
cltd
movsb
das
inc
pop
lcall
jp
stos
mov
mov
adc
stc
jle
and
pop
push
scas
adc
imull
test
cltd
out
in
pop
cmc
or
cmp
orb
push
push
out
fcomip
xchg
js
lods
jo
sarb
mov
or
pushf
adc
xorl
clc
nop
stos
mov
adc
les
repz
push
ljmp
outsl
sbb
rcrl
cli
jle
nop
shll
nop
mov
jecxz
cli
rorb
jp
daa
adc
sub
and
cli
sub
jmp
xlat
flds
adc
inc
xor
xchg
loope
cs
mov
mov
jle
or
mov
add
xchg
lret
fmull
xor
aas
sti
mov
arpl
enter
xchg
mov
sbb
push
addl
popf
mov
dec
andl
daa
test
dec
jl
adc
int3
jne
jb
test
and
lcall
mov
mov
and
fwait
pop
jne
or
andb
ret
test
xchg
or
fs
mov
sub
dec
or
das
xchg
add
subl
loopne
cmp
shrl
subb
mov
imul
rolb
sarb
add
subl
out
lcall
mov
cld
dec
lods
outsb
data16
das
icebp
cmpb
jg
jl
jne
out
xor
push
sub
cmp
mov
pop
sahf
out
push
inc
xchg
fwait
out
fucom
std
xor
jmp
sub
call
jg
das
xchg
test
fadds
jl
mov
and
dec
sahf
icebp
ret
fs
cld
pop
dec
adc
push
arpl
adc
lds
outsb
inc
ret
rclb
lret
imul
push
in
cs
cmp
jp
adcl
xchg
mov
add
daa
mov
sub
or
jns
jmp
test
push
add
pop
std
in
mov
cld
scas
in
fcomps
xchg
dec
mov
movsl
cmp
inc
cmp
dec
jb
sbb
jle
mov
ficomps
xor
pop
dec
sbb
mov
lods
mov
iret
rolb
add
les
clc
pop
xchg
out
pusha
scas
adc
jne
fdivrs
cli
or
and
rorb
int
mov
repnz
hlt
popa
sub
test
push
cmp
jnp
pop
mov
mov
call
pop
xchg
lds
mov
outsl
dec
jecxz
test
pop
test
mov
jl
mov
enter
jo
xlat
hlt
xchg
mov
xor
cwtl
cld
xchg
add
jne
xchg
cs
fwait
iret
pop
xor
add
jmp
mov
mov
je
xor
cmc
sbb
ss
cmc
mov
or
testl
push
outsb
sbbl
add
pop
and
pop
sub
insb
or
jp
out
jnp
lret
dec
fwait
mov
inc
mov
in
add
in
lret
add
push
lods
mov
xor
daa
out
jo
xchg
fcompl
mov
orb
pop
ss
aam
mov
aam
das
fdivl
loopne
into
mov
jg
dec
imul
sub
daa
in
and
inc
mov
mov
mov
arpl
push
dec
cwtl
add
insb
cmp
dec
aad
lret
adc
lock
jo
daa
pop
xor
bound
and
sub
sbb
jno
daa
fsub
repnz
js
insb
jb
cld
push
mov
aaa
inc
dec
xchg
js
loopne
pop
or
mov
in
xchg
fidivrl
sbb
jl
dec
arpl
sub
mov
mov
and
fcoms
xor
xor
das
into
in
gs
sub
mov
mov
pop
aas
cwtl
pop
fdivp
xor
wbinvd
cmc
add
pop
arpl
sub
popa
cltd
fsubl
pop
shlb
mov
data16
lcall
das
inc
mov
adc
shrb
les
test
out
popa
jmp
xor
outsb
int
das
and
icebp
xchg
mov
test
out
pop
or
lahf
dec
dec
push
jnp
out
pushf
ficoml
jns,pn
insl
jp
mov
icebp
sahf
repnz
or
adc
outsb
push
and
sbb
ja
stos
inc
and
outsl
mov
mov
add
andb
jle
lcall
mov
adc
push
and
pop
int3
and
jo
sahf
in
xchg
sbb
nop
mov
xchg
sbb
sub
leave
fbstp
stc
js
mov
mov
cmc
clc
pop
push
daa
pop
sub
inc
sub
pop
lock
cmpsb
cmp
mov
daa
inc
mov
out
lea
scas
push
data16
xchg
es
mov
pop
fisttpl
lret
lods
jne
mov
jp
fmulp
push
sbb
je
sbb
std
mov
cwtl
fwait
pop
mov
int3
incl
dec
add
pop
fcmovne
mov
xchg
fisubl
xor
test
or
ret
xor
pop
lods
ret
jae
mov
xor
clc
insb
icebp
into
jb
jb
les
mov
out
xchg
sar
dec
fildl
cmp
add
cmp
lret
mov
call
sbb
cmp
repnz
inc
pop
gs
inc
add
insb
push
arpl
push
mov
add
xor
mov
mov
mov
or
ds
jb
mov
pop
and
aaa
in
es
push
xchg
inc
aad
scas
mov
add
push
cmc
push
test
shlb
pop
dec
es
cmp
mov
pop
imul
mov
fucomip
and
sar
xchg
ja
pushf
adc
sbb
and
lods
and
pusha
xchg
adc
xchg
mov
sbbb
fst
cmpsb
cs
push
pop
push
test
push
out
mov
mov
sahf
enter
outsl
pop
jae
add
repnz
shl
jmp
jge
dec
adc
cmp
in
popf
jp
push
movhps
jnp
dec
xchg
arpl
push
jnp
mov
cli
push
cmp
push
push
or
mov
lock
push
fmuls
addl
mov
dec
loope
jl
push
jl
outsb
call
sahf
stos
pop
cltd
dec
add
inc
mov
shll
shll
sbb
and
out
dec
xor
adc
inc
imul
cmp
insl
jae
pop
out
sarb
adc
jp
fildll
pusha
cmovb
insb
mov
push
adc
rcl
cmp
pop
lcall
inc
rclb
mov
cltd
aas
nop
nop
and
xchg
inc
pop
mull
in
mov
clc
jle
adc
out
mov
mov
les
dec
sar
je
es
mov
dec
add
popa
jle
and
test
in
loop
test
ljmp
dec
lods
aaa
jg
aam
not
ret
dec
cmp
pusha
push
jl
outsl
shll
test
mov
xor
sub
adc
xchg
mov
aam
pop
mov
push
inc
xor
repnz
sbb
repz
cmp
rclb
iret
mov
ja
mov
jnp
cmc
roll
push
fcomps
jne
lret
or
mov
push
repz
jl
int
push
cmp
outsb
or
fbstp
mov
inc
imul
lret
outsl
mov
lahf
xchg
es
or
ja
lds
movsl
jle
sbb
fisubs
shl
ja
jae
mov
push
pushf
pop
jmp
jb
sbb
cwtl
hlt
add
repz
sbb
sub
js
mov
insl
xchg
int3
jns
fdivp
pop
scas
mov
aas
xor
push
jl
mov
jmp
clc
mov
ret
stos
inc
xchg
out
stos
mov
arpl
mov
xlat
or
cs
jmp
dec
out
test
and
xchg
insl
je
test
sub
xor
mov
jecxz
jge
sub
jo
dec
fsubrs
sarb
jl
xchg
mov
sbb
ret
sub
pop
pop
lahf
mov
fdivl
jo
out
lret
aam
loopne
sub
mov
mov
movsl
mov
lret
test
lret
aas
or
cwtl
adc
add
push
fdivrs
sbb
cli
mov
pop
add
scas
jbe
cli
jmp
repnz
add
xor
jp
in
fisttpll
or
iret
mov
adc
jne
sub
push
pop
aaa
xchg
pushf
hlt
cmpsb
pop
sar
mov
jl,pt
sbb
lods
sbb
and
push
mov
cmp
or
push
hlt
pop
dec
xor
and
jmp
jnp
cli
sub
cmp
push
or
push
adc
clc
lock
mov
mov
stc
sbb
dec
jle
and
add
sahf
fwait
rorl
inc
iret
imul
mov
cwtl
subl
pop
ljmp
push
jecxz
dec
gs
nop
mov
dec
adc
sub
add
inc
ljmp
data16
aad
in
je
xlat
push
or
mov
insb
pop
jns
pop
sahf
dec
pop
inc
cmp
xor
add
sahf
out
call
push
jmp
sub
jecxz,pt
cld
jnp
inc
and
cmp
jae
out
pop
jge
sbb
xor
out
inc
mov
jno
insb
mov
inc
stc
pop
rcll
push
sahf
mov
pushf
cld
jp
xchg
js
mov
cmpsb
lahf
mov
mov
nop
mov
aad
aaa
sub
inc
and
and
jns
cmp
sbb
aaa
test
lods
xchg
sbb
and
in
xor
cmpb
mov
subb
arpl
insb
in
dec
orb
ljmp
pop
mov
jmp
or
outsb
lret
mov
popf
mov
insl
jb
out
aad
or
daa
xchg
pop
jl
add
loope
enter
shl
cmpsb
cltd
add
xlat
int3
inc
in
das
test
cld
in
dec
pop
dec
pop
addr16
sub
hlt
fwait
xor
fwait
xor
scas
sbb
in
scas
into
loope
mov
adc
add
lret
mov
aaa
iret
fmul
jge
jp
jnp
into
test
xor
sub
cwtl
out
bound
mov
out
add
xor
rolb
xchg
nop
adc
inc
push
pop
lahf
sbb
sti
es
orl
daa
xchg
iret
push
repnz
mov
mov
loope
jmp
xor
cmp
ss
les
mov
push
addr16
sbb
xchg
inc
push
jbe
inc
mov
mov
arpl
mov
arpl
sub
sbb
fidivrs
call
sbb
sbb
lcall
inc
jb
movsb
push
xor
test
es
add
jecxz
mov
shlb
cwtl
add
add
push
scas
fidivl
adc
lea
daa
in
mov
dec
jbe
add
cmp
dec
cmpsb
mov
pushf
inc
push
mov
push
jp
bound
lret
add
xchg
dec
inc
idivl
shl
fwait
push
xchg
mov
out
shrl
jns
mov
je
test
cmp
fldl
sbb
das
xchg
sub
add
sbb
int3
or
jo
dec
sbb
roll
mov
pop
add
lds
lea
jne
xor
or
cmc
jecxz
push
add
push
jmp
pop
sub
movsb
xchg
ljmp
or
sub
outsb
jmp
mov
mov
xchg
inc
lahf
fdivr
push
lea
ret
mov
in
jae
fmuls
fsubs
sbb
dec
dec
test
pushf
push
movsb
fcom
loop
fscale
mov
and
mov
mov
outsb
loope
sub
iret
pop
lds
dec
pop
push
pop
pop
push
leave
mov
in
ss
shrb
test
push
add
cld
adc
into
in
or
xlat
mov
jne
mov
mov
sti
jns
mov
ja
clc
dec
mov
mov
push
or
add
add
push
mov
cmp
ja
adc
icebp
and
jmp
dec
jle
mov
and
cmp
xchg
in
sub
add
xchg
push
lock
fst
in
jmp
dec
aas
or
mov
and
inc
mov
fs
hlt
mov
les
push
mov
gs
repnz
mov
popf
dec
sub
xchg
and
ljmp
add
or
or
aaa
pop
out
mov
push
xorb
loope
sbb
xchg
and
addr16
mov
mov
arpl
std
mov
pushl
jl
nop
mov
pop
frstor
in
frstor
inc
pop
push
imul
push
xor
loop
jecxz
fidivrl
xchg
push
mov
pop
xor
mov
mov
push
sbb
ret
lods
and
mov
add
sbb
pop
iret
mov
fcompl
int3
or
rcll
pop
notb
pop
loopne
in
push
mov
test
xchg
push
insl
jbe
leave
es
test
or
adc
pop
mov
adc
sub
cld
mov
out
ja
xor
mov
dec
push
inc
mov
or
push
and
hlt
lods
or
orl
les
int
das
or
pusha
add
sub
iret
fiadds
jbe
cmpsl
enter
mov
cltd
sbb
cmp
sbbl
and
fidivrl
out
stos
cltd
gs
mov
pop
adc
jle
or
fstpl
repz
stc
mov
arpl
out
and
es
jns
xor
dec
add
arpl
out
je
sbb
pop
imul
movsl
push
pop
mov
fstps
sub
xchg
pop
pop
addr16
negb
pop
inc
mov
or
scas
sub
and
add
shr
sahf
pop
aaa
jbe
pop
cmp
bsr
repz
popl
orl
xor
and
ds
pop
movsb
test
pushf
bound
loopne
lcall
push
aaa
pop
push
push
inc
pusha
mov
js
jmp
pop
xchg
or
dec
fwait
sub
and
inc
in
push
jle
mov
sbb
jp
fbld
mov
push
cli
xor
icebp
imul
movsb
test
stc
and
and
stc
push
mov
mov
pop
push
push
daa
es
shr
loopne
stos
jo
fs
jmp
xlat
fwait
jl
pop
or
int
into
sub
jmp
push
mov
jmp
pop
mov
sub
xchg
test
jge
add
stos
out
pop
adc
add
mov
adc
jl
stc
mov
sbb
dec
mov
pop
pop
xchg
xor
mov
mov
aas
xchg
push
cmp
dec
jnp
ss
cmc
arpl
and
bound
out
test
xchg
jmp
cmpsl
jp
pop
dec
mov
faddl
leave
imul
leave
pushf
std
xchg
fwait
mov
outsl
js
jge
or
pop
cmp
dec
pushf
fimull
jmp
mov
add
dec
nop
sarl
scas
cmp
jno
jge
push
mov
xchg
aas
rol
push
outsl
mov
insb
xchg
cmp
xlat
mov
and
popa
or
mov
out
and
or
fnstcw
notb
inc
dec
adc
out
xor
loop
xor
mov
push
test
ss
xchg
test
jnp
into
push
mov
sub
jb
out
or
bound
xchg
test
mov
push
pop
lock
das
push
loopne
sbb
aas
rol
out
mov
aaa
xor
push
test
stos
lret
fnstsw
test
out
mov
and
push
iret
dec
outsl
mov
lcall
mov
mov
or
inc
add
aam
sbb
push
outsl
push
inc
insl
mov
ret
in
mov
testl
popf
inc
jb
inc
cmp
jecxz
inc
cmp
lcall
shrl
mov
or
mov
aaa
cmpsb
popf
mov
mov
xor
mov
xchg
mov
leave
mov
cli
outsl
push
loopne
or
mov
scas
ds
jle
loopne
cmp
idivb
push
outsb
xlat
fwait
cmp
sahf
add
cmpl
sti
popl
loopne
mov
fadds
or
pop
sub
lods
orl
mov
ja
dec
aas
mov
shlb
je
sbb
loopne
popf
lret
fldcw
jbe
jbe
or
fcomps
xchg
fxch
insb
pusha
fs
fisubs
cmp
inc
imul
lcall
add
push
xlat
xor
jge
fstl
stos
mov
lods
sahf
push
out
inc
or
nopl
and
adc
mov
cmp
stc
cs
push
sbb
mov
push
inc
fcomip
jae
popf
push
out
sub
arpl
imull
dec
pop
add
cmp
mov
cltd
mov
lds
mov
mov
dec
cmc
and
icebp
dec
xchg
arpl
mov
and
je
sub
sub
xor
mov
js
test
loopne
xor
imul
ja
jo
and
data16
test
or
int3
xor
out
add
imul
mov
sub
dec
ljmp
mov
fcompl
xchg
leave
popf
xlat
cs
roll
xchg
loope
mov
inc
jnp
data16
add
push
leave
mov
fadd
out
out
mov
dec
icebp
cmp
jmp
pop
push
mov
xchg
sbb
loope
jb
mov
in
jnp
mov
lcall
lahf
ror
neg
inc
sub
fnstsw
test
pop
aaa
sub
rolb
mov
xchg
push
gs
mov
sub
out
jecxz
mov
leave
sbb
cmp
flds
repnz
sbb
fldcw
rol
int
mov
rcll
jne
aad
and
pop
jle
fmull
ret
and
xchg
jns
int
leave
adc
xchg
clc
push
xchg
sub
aaa
pop
test
lods
sub
adc
push
cmpsl
push
mov
push
sbb
jne
test
xor
jge
push
jbe
xor
into
outsl
add
pop
and
adc
jge
jb
mov
push
call
pusha
and
inc
jo
push
mov
mov
inc
imul
xchg
push
push
jle
loopne
mov
mov
movsl
clc
rcll
jbe
add
mov
mov
mov
loope
dec
fbstp
add
sbb
inc
jae
mov
out
pop
lret
int3
roll
or
int3
and
aas
sahf
repnz
divb
imul
loope
push
daa
cltd
lcall
or
ss
xchg
cwtl
ficompl
xchg
cmp
mov
les
pushf
mov
gs
cli
cmp
ret
xchg
mov
roll
in
inc
xor
out
rcl
jmp
xlat
pop
sub
xor
cwtl
cmc
push
sub
dec
sbb
push
inc
and
pop
jmp
pushf
inc
adc
hlt
sub
movsb
rcl
mov
push
xor
add
jl
mov
imul
inc
push
into
hlt
mov
fisttpll
inc
aaa
arpl
and
sbb
sub
mov
xchg
push
pop
leave
das
into
into
mov
addr16
inc
jbe
mov
mov
cld
mov
outsl
stos
inc
cltd
xlat
jb
mov
adc
nop
or
jge
cmp
and
pop
xor
sahf
mov
xchg
dec
lcall
pop
push
sbb
lds
push
jo
nop
in
scas
jle
sbb
out
mov
bndstx
jle
dec
shr
imul
sub
xor
mov
xor
aam
pop
enter
arpl
lret
jnp
aaa
jns
pushf
out
xchg
mov
repz
dec
xor
mov
and
iret
ret
cmp
sbb
out
add
push
mov
dec
pop
push
dec
mov
mov
add
xor
mov
pop
or
addr16
inc
dec
fidivrs
and
jmp
mov
add
mov
out
mov
data16
cmp
jbe
ss
ret
lahf
lods
pop
xchg
add
mov
push
lds
dec
mov
pop
ss
cmp
dec
and
mov
in
lahf
imul
mov
add
clc
sbb
stos
xor
out
push
sbb
loope
test
mov
and
sub
pop
dec
data16
repz
repnz
stos
arpl
test
insb
andl
ja
rcl
mov
loopne
cltd
push
pop
addb
add
cld
fisubrl
fsubrs
jmp
push
xor
scas
jno
out
aad
idivl
pop
and
mov
out
mov
pop
in
fimuls
sarl
mov
push
dec
xchg
popf
adc
and
icebp
imul
rcrb
inc
mov
sub
into
jg
daa
in
cwtl
test
xchg
pop
xchg
sub
mov
fists
add
pop
jp
scas
imul
jp
mov
and
std
cwtl
les
fwait
rcr
rcl
daa
mov
sar
inc
xchg
sarl
xor
sti
fwait
add
adc
cmpsb
push
testb
lret
dec
in
pop
add
push
lret
mov
ret
mov
in
mov
mov
gs
mov
jge
pop
test
decl
fwait
clc
es
ljmp
and
cmpsb
jle
inc
mov
inc
arpl
repz
stos
sbb
call
jae
cmp
push
mov
loopne
jnp
cmpb
cmp
aas
addr16
mov
jo
jbe
dec
shll
sub
add
pop
push
bound
push
sbb
stc
jns
sub
xchg
mov
idiv
adc
lahf
stos
sahf
xor
arpl
out
out
fbstp
ds
xchg
cs
mov
inc
mov
cmp
jb
and
mov
sahf
adc
pop
gs
stos
hlt
mov
dec
jmp
mov
xchg
and
int3
fidivrs
jbe
xor
xlat
in
adc
mov
inc
repnz
xchg
ss
daa
dec
outsb
loopne
add
je
mov
mov
pop
rcr
mov
xchg
jbe
cwtl
ds
dec
mov
cmp
sbb
lcall
or
cmp
sub
ljmp
sub
ficoms
sbb
jge
stc
mov
int3
lcall
pop
jbe
sbb
loop
mov
cltd
jbe
scas
push
cli
and
fwait
lahf
clc
add
mov
push
dec
mov
pusha
xlat
fdivrl
imul
fcomps
pop
pusha
jno
xchg
hlt
mov
fwait
inc
gs
jb
sub
test
shrl
push
add
and
pop
jl
or
cmp
test
test
mov
mov
jecxz
and
fdiv
mov
mov
mov
mov
and
out
or
js
daa
hlt
js
in
aad
ret
xrelease
or
xchg
mov
std
xchg
call
gs
inc
lret
in
sbb
es
mov
data16
popa
inc
or
dec
push
mov
sti
leave
jmp
clc
xor
pushf
push
fiaddl
stos
sub
add
mov
jge
sub
pop
pop
pop
orl
cmp
push
iret
inc
push
das
dec
add
xor
mov
mov
push
inc
jb
xchg
stc
cmp
cmp
jo
mov
adc
sbb
test
mov
jbe
xor
mov
mov
xchg
lret
pop
inc
les
ljmp
js
and
bound
mov
stc
clc
imul
orb
stc
xor
or
xchg
adc
mov
mov
sbb
dec
cmpsb
jne
shlb
push
xchg
and
popf
scas
dec
xor
aad
outsl
loopne
test
vcvttss2si
adc
pushf
jnp
mov
push
and
orb
testl
dec
pusha
aaa
jecxz
filds
mov
out
cmp
scas
sahf
outsb
sub
jns
push
sub
xchg
outsb
scas
nop
dec
stos
lods
inc
jecxz
or
jne
xor
jb
ljmp
movsb
mov
sbb
xchg
scas
xor
fs
inc
lret
outsl
in
sub
pop
data16
mov
in
in
cmp
push
aam
loop
in
lea
ds
pusha
push
movsb
inc
fs
jnp
pop
jp
adc
sub
push
and
sbb
cmp
cmpsb
int3
pusha
push
ror
xor
xchg
inc
in
test
arpl
ds
dec
cmp
repz
pop
out
frstor
mov
fisttps
pop
lds
jo
and
scas
inc
push
or
mov
scas
mov
push
data16
out
into
orl
or
test
add
and
sahf
jno
fisubrl
out
fmuls
add
pop
mov
in
add
orb
lods
mov
jae
daa
pushf
xchg
sbb
push
les
sbb
lea
pop
xor
clc
iret
shl
cltd
jno
add
and
rcrb
cmp
ficoms
add
popf
xlat
imul
cmp
push
mov
repnz
fimuls
add
cmpsl
mov
adc
adc
mov
cld
bound
int
clc
dec
cmpsb
inc
sar
test
fbld
xchg
negb
loope
fildl
dec
ljmp
aam
pop
xchg
xchg
sub
xchg
jle
lea
push
or
call
cmp
dec
mulb
je
xchg
xchg
aam
push
mov
sub
lret
inc
push
or
mov
cwtl
xchg
inc
movsl
push
cwtl
inc
faddl
xor
fstps
aad
addb
repz
push
xchg
fs
push
lods
sbb
dec
scas
push
xorb
push
jmp
push
dec
cmpl
pop
inc
loope
inc
popf
push
inc
iret
pop
push
es
mov
mov
int
mov
cwtl
jp
out
mov
pusha
add
mov
inc
jo
xor
push
in
shr
jns
pusha
pop
leave
sub
mov
or
pop
jno
cmp
mov
push
mov
in
sbb
sbb
xchg
adc
jbe
mov
mov
mov
data16
mov
sbb
ss
pop
cmp
sar
fwait
mov
mov
fwait
xor
add
fsts
out
movsbl
out
int
in
mov
sbb
xchg
jns
rcrb
js
adc
add
adc
pop
add
push
sub
jne
les
std
into
mov
addr16
mov
inc
pop
pop
mov
lds
pop
leave
jb
mov
shrb
fwait
out
mov
mov
mov
fcompl
sbb
pop
sbb
dec
xor
lock
sahf
out
mov
lret
jno
jecxz
xchg
fsubrl
mov
inc
jno
movsb
mov
lret
sbb
push
xchg
testl
int
pop
jecxz
lret
jle
rorl
push
jno
fisttpl
sub
je
pop
clc
repnz
sarb
lods
dec
gs
fisubl
push
js
ficoms
cmp
sub
mov
add
mov
addb
out
and
push
loop
pushf
jp
test
cld
push
scas
jmp
xchg
mov
shr
jecxz
fcomps
pushf
out
jge
scas
xor
jbe
scas
sub
in
in
out
in
mov
and
movsb
sub
cltd
incb
das
divl
scas
jns
lods
push
cmp
add
mov
pop
lahf
mov
stos
dec
cmc
dec
lock
pop
insl
imul
stos
jp
enter
bound
out
add
outsl
mov
pushl
dec
cld
mov
xor
mov
fs
xchg
dec
das
xchg
daa
sbb
jo
rol
and
xchg
or
push
mov
mov
pop
sbb
inc
adc
dec
iret
frstor
iret
stc
test
ljmp
and
iret
xor
into
into
mov
sbb
mov
xchg
andb
push
lcall
pop
sub
lcall
lds
mov
and
jns
hlt
mov
aaa
push
inc
scas
repz
subl
push
cli
aad
pop
lret
int
lea
sahf
cmpsb
mov
push
cmp
cli
jb
es
xor
sub
movsl
xor
adcb
and
fmuls
xlat
adc
mov
mov
inc
dec
aas
xchg
lret
or
sahf
fwait
aaa
mov
sbb
out
jae
fidivrl
or
jle
sahf
adc
cmpsb
mov
push
or
dec
dec
loop
add
jl
nop
or
xlat
fwait
inc
cmp
sbb
das
imulb
shrb
cltd
test
fwait
ret
push
mov
inc
fcoml
stos
ja
mov
push
and
push
mov
int
mov
cmpsb
shll
cltd
mov
cmp
popf
inc
sar
iret
mov
subb
loope
std
andl
ds
cs
push
mov
or
loop
mov
sbb
js
or
pop
mov
cld
inc
pop
adc
jbe
stc
inc
mov
sar
jne
jl
test
insl
sbb
and
jo
enter
push
lds
clc
adc
aas
mov
and
jg
and
je
daa
fs
cld
xor
jge
jecxz
push
cmpsl
je
xchg
lock
push
cli
push
jmp
pop
xor
rcrb
push
mov
iret
std
in
fsubs
add
adc
or
xor
mov
xchg
xchg
xorb
clc
inc
clc
test
or
out
sub
and
push
or
ret
push
pop
sbb
loope
adc
or
dec
cwtl
rcrl
sbb
test
rorl
mov
cltd
jl
fmull
test
mov
jg
cmp
mov
or
mov
fnstenv
jbe
ret
stc
gs
push
je
mov
xchg
or
bound
pop
or
int
pop
cltd
shlb
dec
and
mov
outsl
mov
popf
push
and
xor
jecxz
push
xlat
aas
add
dec
imul
mov
rcl
sti
test
mov
rolb
in
xchg
add
mov
sbb
outsl
mov
xchg
shlb
or
adc
sbb
in
xchg
shlb
or
push
jl
mov
dec
sbb
cs
stos
fdivrl
sbb
fcoml
dec
push
lea
push
mov
jb
push
mov
gs
insb
adc
lea
cmp
sbb
cmpsb
pop
jno
stos
es
mov
mov
mov
ljmp
jge
xor
xor
stos
orb
dec
enter
mov
push
mov
shrb
cs
xchg
je
call
insl
mov
das
loope
imul
cmc
sbb
adc
sub
jl
imul
fmuls
fstpt
lretw
lret
and
pop
pop
pop
jb
movsb
int3
adc
pop
xchg
mulb
mov
in
inc
and
andb
add
adc
sahf
lahf
and
mov
mov
clc
js
lock
frstor
sbb
call
mov
out
es
xchg
sahf
mov
ret
mov
ss
cwtl
incb
push
loopne
mov
xchg
cmpsb
rcrl
jl
xchg
xchg
jg
imul
xor
dec
push
inc
sub
imul
das
mov
loopw
fadds
leave
pop
mov
in
or
das
test
sbb
movsl
ds
shr
dec
neg
xor
fs
ss
push
pop
sti
test
inc
push
imul
and
inc
pushf
insl
sbb
shrb
scas
shlb
sbb
sub
insl
iret
inc
es
jae
mov
sahf
movlps
ljmp
xor
jmp
xchg
lret
add
dec
hlt
sub
mov
loopne
scas
icebp
ror
xor
sbb
pop
mov
and
fiadds
imul
ficompl
mov
jnp
xchg
scas
cmp
int
dec
pop
rcrl
pop
and
cltd
cmp
inc
call
jae
fldenv
shlb
cmp
mov
mov
rep
movsl
pop
add
xchg
mov
fwait
push
scas
sub
inc
cmp
out
push
aad
int
pop
sub
in
mov
aam
or
sar
inc
mov
push
lret
push
and
fcompl
pop
mov
and
adc
and
ficompl
out
xlat
mov
in
adc
scas
cwtl
sub
ja
in
jns
ss
aad
xchg
data16
cld
push
push
cmp
adcb
into
sahf
pop
ret
adc
fmull
popf
out
and
test
or
adc
sbb
push
or
fimull
scas
dec
lret
push
or
mov
adc
adc
jle
mov
clc
cmp
inc
stc
inc
fimull
test
rcrl
mov
cmp
jecxz
outsb
fldcw
push
in
lods
subl
xchg
inc
idivb
jge
ficoms
sbb
mov
and
xchg
jecxz
push
ud1
fs
push
rclb
rcl
mov
push
outsb
push
out
dec
enter
data16
aam
adc
lods
xor
dec
ja
xchg
insb
jo
aad
sub
in
fwait
ljmp
ffreep
fsts
insb
or
shlb
rcrb
jae
pop
add
test
sub
movb
mov
push
js
adc
mov
sahf
subb
or
rorb
add
and
add
stc
mov
dec
sbb
add
jg
daa
popf
xorl
mov
xor
sub
daa
js
xlat
shrl
test
add
push
ret
ljmp
outsb
push
insl
pushf
insb
adc
mov
adc
inc
mov
add
sti
mov
repz
sub
orb
fstl
lret
push
jb
or
and
jp
lods
enter
sub
dec
rorb
andb
sub
loop
xchg
adc
pushl
pop
xor
lock
imul
push
xchg
push
out
inc
stos
test
ret
xor
jb
std
rclb
lea
xor
pop
ja
iret
call
lret
cwtl
or
and
ljmp
insl
pop
mov
dec
sub
mov
jg
out
dec
dec
sub
lret
cltd
loopne
adc
je
cli
or
xor
lcall
or
sub
es
in
xor
sbb
out
xchg
popf
pop
push
pop
nop
mov
fucomip
xchg
enter
inc
aas
rcr
sbb
jb
sbb
pop
xchg
sbb
ret
xor
pop
call
inc
enter
imul
lods
fwait
cmp
mov
fldt
pop
dec
sbb
xor
imul
jp
sub
dec
mov
jb
mov
mov
jle
mov
enter
xchg
dec
add
test
idivb
fwait
mov
xchg
data16
and
test
xchg
das
fbstp
sbb
mov
call
sub
adc
fwait
fs
dec
and
stos
leave
jge
pushf
pushl
push
pop
les
idivl
pop
mov
add
xchg
fwait
mov
mov
pop
adc
mov
cltd
mov
sbb
xor
rol
mov
sarb
xor
addb
cmp
out
cld
cmp
lret
sub
ret
lcall
lock
leave
lret
int
pop
or
add
imul
or
pop
xchg
sub
dec
adc
clc
jb
jns
and
mov
or
jecxz
mov
xchg
jecxz
xor
mov
sbb
std
or
mov
mov
dec
adc
mov
and
xchg
outsl
and
aaa
xchg
pop
popf
push
shll
fisubl
les
add
jge
lea
in
push
mov
jg,pn
xor
pop
adc
gs
pop
shrl
pop
aas
into
xor
mov
pusha
and
cli
mov
addl
int3
xchg
dec
jg
clc
xor
adc
push
cmp
sub
out
jmp
mov
out
test
sub
popa
jg
test
or
dec
mulb
pop
sub
shrl
and
lods
mov
dec
mov
shlb
ficoml
rorb
adc
ss
lods
push
xchg
xchg
ret
in
push
pop
mov
jmp
and
repnz
inc
push
iret
or
test
xlat
es
jmp
jmp
xchg
jmp
or
fwait
das
scas
xor
aad
mov
sub
test
test
fldt
lea
dec
iret
mov
loop
add
mov
jno
lcall
cmp
mov
pop
mov
or
imul
adc
insl
sbb
xchg
mov
mov
pop
lods
mov
pop
pushf
data16
xor
mov
xor
cmp
sti
push
xor
jg
inc
jno
aad
push
dec
lret
dec
addr16
and
pop
xor
call
movsl
lcall
mov
sahf
pop
add
jge
into
out
imul
shrb
lods
mov
sub
cmpsl
jg
mov
jp
sbb
sahf
or
mov
inc
loop
test
les
xchg
pop
inc
lock
aaa
mov
leave
cmpsb
pop
add
and
insl
lock
rolb
mov
enter
jnp
jmp
sub
or
dec
cld
and
outsb
mov
sbb
jne
orl
and
popa
mov
and
mov
add
jo
pop
in
dec
repz
or
and
popa
stos
clc
sbb
and
loop
aas
mov
add
lds
repnz
sti
dec
push
xor
pop
jecxz
and
test
clc
out
loopne
ljmp
fcmovb
push
mov
pusha
adc
jnp
pop
xchg
sti
xor
jno
lods
or
fstpt
repz
jbe
bound
clc
pop
test
and
or
or
xorb
outsb
xlat
filds
push
push
sub
sbb
push
jmp
cmpsb
pop
xchg
xor
inc
xchg
jb
or
dec
mov
daa
xchg
ss
sub
in
add
add
inc
and
dec
jp
xchg
push
mov
lods
cmp
jp
mov
cmp
test
xchg
mov
test
pop
and
push
cmp
add
lods
ret
cmc
adc
insb
fs
nop
aas
sub
mov
pop
addr16
sbb
add
push
jge
mov
cmp
sub
fld
movb
add
cmpb
insb
sbb
xor
stc
clc
pop
pop
mov
rcrl
faddl
test
sbb
adc
xchg
je
mov
sub
and
shrb
insl
cmp
jne
mov
jmp
sub
jg
pop
mov
les
out
je
rorb
insb
leave
loop
xor
arpl
and
sub
lds
jg
adc
mov
ja
movsb
repz
add
xor
scas
inc
xchg
mov
jb
sahf
pop
js
rcrb
icebp
push
sbb
mov
out
xchg
pop
dec
outsb
mov
mov
movsl
pop
shrb
ret
and
jmp
mov
jne
out
sarb
xor
mov
imul
sub
mov
and
or
movsl
and
les
add
fisttpl
xor
dec
xor
aas
jbe
add
jecxz
xchg
outsl
pop
testb
pop
adc
adc
cmp
or
call
or
xchg
jg
imull
lods
sub
and
cmp
sti
push
mov
mov
add
loop
push
and
dec
fcom
inc
cmc
je
jle
ljmp
repnz
add
aas
leave
and
movsl
pop
mov
sbb
sbb
hlt
dec
push
sub
stos
cli
cli
mov
or
shrb
repnz
mov
and
dec
cld
lods
ja
sub
push
mov
bound
hlt
ss
mov
mov
mov
mov
loop
test
insb
cmp
fmull
xor
subb
inc
sub
loop
es
xchg
cmc
inc
pushf
add
outsb
xchg
fdivl
stos
stos
add
sbb
mov
jne
dec
imul
dec
out
cld
or
notl
add
out
xor
xchg
xchg
dec
and
rclb
mov
or
cmpsb
adc
sbb
inc
leave
mov
push
adc
sub
jg
sub
test
jp
mov
cmp
dec
xchg
and
xchg
dec
fistpl
dec
out
arpl
jmp
xchg
out
out
fwait
sbb
shlb
push
push
movsl
jg
addl
add
inc
outsb
outsb
xor
in
push
outsb
out
xchg
mov
jecxz
pop
fnstsw
or
sbb
mov
idiv
pop
push
lret
and
adc
test
cmp
fs
and
push
dec
pop
xor
push
mov
add
aaa
jnp
mov
sub
or
push
mov
mov
inc
mov
fcoml
add
test
inc
movsl
or
in
insl
loope
push
dec
cmp
mov
or
cwtl
lahf
in
or
mov
scas
sbb
rorl
xchg
scas
push
adc
or
out
enter
sbb
enter
dec
cli
jno
cltd
mov
lret
mov
loopne
jae
pushf
sbb
xor
push
inc
pushf
lock
scas
rorl
dec
cmp
inc
ret
testl
shlb
imul
jecxz
adcb
sbb
and
scas
addr16
push
lret
pop
pop
mov
shrb
loope
aam
cmp
in
mov
arpl
addl
inc
xor
mov
add
adcl
sub
iret
clc
xor
or
sub
inc
push
jecxz
pop
push
in
push
pcmpeqb
adc
xor
push
or
fs
stos
push
rol
pushf
je
pop
add
mov
lcall
jbe
in
add
pusha
xchg
mov
cmp
mov
sbb
insl
rcrb
fldt
lods
mov
xor
mov
xlat
mov
clc
popa
ss
dec
sbb
or
jecxz
lock
push
scas
push
jnp
adc
les
pop
adc
cld
iret
add
jb
sub
cmp
lret
xchg
idivb
fwait
inc
cmp
and
divb
add
das
pop
mov
lahf
mov
in
js
test
call
bound
xchg
mov
movsb
pop
iretw
int3
dec
cmc
jno
adc
or
push
inc
gs
repz
sbb
xor
jb
les
mov
jb
adc
sbb
xchg
cmp
fnstcw
xchg
call
xchg
aas
idiv
arpl
add
jae
bound
jmp
jo
inc
movb
or
cli
xor
or
pop
or
arpl
push
leave
cmp
sub
xchg
or
jl
in
cwtl
insb
mov
sbb
test
push
inc
pushf
adc
fidivs
jle
nop
or
xor
aad
cmp
or
flds
dec
pusha
mov
mov
xor
jmp
jae
push
pusha
cmp
loopne
imul
xor
bound
addr16
out
mov
das
pop
mov
cs
in
repz
lret
pop
mov
cmp
sbb
or
popf
adc
mull
fidivs
pop
jmp
mov
insb
das
stc
jg
adcb
adc
pop
xchg
nop
pop
mov
lcall
cmp
pop
iret
shl
insb
jp
ss
jnp,pn
push
int3
fistl
in
es
cli
test
xorl
mov
or
es
push
dec
xchg
cmp
mov
jle
xchg
ljmp
cmc
arpl
std
cmp
sbb
xchg
inc
mov
lods
out
or
ds
ret
out
int3
ret
and
mov
dec
sub
mov
xor
fildl
cmpsl
pop
or
ja
call
loopne
mov
xchg
xchg
xchg
mov
jge
outsb
out
xor
repnz
mov
das
out
shrb
test
gs
sub
pop
outsl
pop
sahf
mov
pop
fs
dec
stc
jno
mov
movb
addr16
shll
mov
add
lahf
pop
mov
cwtl
lsl
in
pop
popl
fsubrs
icebp
fimull
dec
adc
sbb
or
insb
add
xor
sbb
add
ret
jl
cmpsb
adc
and
inc
adc
les
pusha
outsl
sub
jp
pop
nop
out
inc
sarl
cmovno
loopne
cld
sub
outsb
clc
push
xchg
cmpsl
sub
xchg
sub
cmpb
popf
inc
push
dec
test
pop
mov
and
mul
scas
xlat
dec
movsl
test
int
xchg
xlat
leave
rcll
jno
ret
out
fld
pop
rcr
xchg
les
fs
mov
xchg
pop
mov
jnp
repz
jp
in
mov
in
push
or
ret
mov
and
into
mov
push
fwait
jns
out
fnstsw
cltd
mov
inc
push
sbb
aam
pop
data16
add
loope
mov
xchg
xchg
inc
fwait
and
mov
repz
test
lahf
adc
aad
imul
cs
mov
sahf
xorl
js
gs
pop
decl
cld
xchg
push
nop
sbb
inc
popf
test
fildll
aas
dec
fcmove
dec
js
inc
cmc
ret
fbld
int3
jae
cmpsl
xor
mov
inc
orb
pop
ret
sbb
clc
and
xchg
cmp
push
xchg
cmp
test
mov
mov
fstpl
lret
sbb
loop
or
testl
and
xchg
cmc
mov
je
movsl
pop
pop
mul
mov
dec
movsb
adc
lcall
mov
jl
cwtl
cmpl
adc
mov
add
je
xchg
imul
xchg
out
mov
ret
xlat
jo
pop
dec
loop
cmpsb
out
xor
pop
cwtl
push
push
or
bound
scas
mov
and
add
insb
fbstp
xchg
and
or
add
mov
fists
push
xchg
mov
lds
in
notb
cmc
jg
lods
or
pop
sub
into
xor
les
setg
inc
push
sub
xor
out
ja
fsubp
mov
into
xchg
inc
xor
cs
ret
sbb
lcall
xchg
cmc
jnp
mov
outsb
adc
fs
mov
cmp
and
ljmp
and
std
in
push
adc
pop
inc
xor
dec
xchg
sahf
mov
cmc
dec
fnstsw
shll
lret
adc
call
stc
adc
dec
je
ss
fdivrl
xchg
cs
xor
call
pcmpeqb
xor
or
in
lock
mov
push
xor
movsl
enter
aam
or
mov
xchg
mov
ds
daa
mov
jns
sbb
add
add
push
aas
cmp
mull
in
lods
imul
add
push
and
in
test
sbb
dec
rcrl
out
jmp
xchg
es
add
sub
jle
or
xchg
negl
inc
jae
fnstenv
inc
xchg
aas
les
add
cmp
xlat
mov
jge
mov
outsb
fildll
push
and
inc
nop
adc
je
andl
dec
sub
insb
push
test
inc
movsl
or
and
pusha
out
xor
adc
push
aad
pushf
xor
pop
daa
in
push
sbb
sbb
push
test
add
fbstp
faddl
fidivrs
enter
sub
jbe
loope
push
je
hlt
js,pt
add
ret
inc
std
jne
mov
popa
sbb
jmp
lret
jno
pop
add
cwtl
cmp
mov
addb
mov
add
add
nop
push
stos
test
sbb
add
push
cmp
mov
out
movsb
int
cmp
rorl
xchg
sti
mov
insl
push
leave
loopne
test
leave
pop
mov
lods
ret
mov
xor
sbb
sub
and
ds
imul
insl
cmp
cli
ret
jb
push
inc
jae
pop
movntps
lea
pushf
cwtl
xchg
aaa
arpl
aam
and
mov
pop
push
mov
in
inc
push
cwtl
mov
fnstsw
ljmp
cli
push
jle
xchg
ja
insb
mov
in
test
inc
push
pop
jbe
fadds
xor
or
imul
stos
test
mov
jge
xchg
loope
or
clc
mov
adc
loop
outsl
das
mov
mov
and
sbb
or
inc
xor
cmpsb
mov
icebp
cmp
or
fimuls
mov
xor
cmc
out
mov
sub
xchg
xchg
sbb
lds
movzwl
out
cli
addr16
cwtl
mull
sarb
pop
stos
stos
shrl
out
or
ds
fwait
jg
and
and
in
pop
mov
xor
fisttpll
lea
shrb
jge
cmpsb
adc
sub
ss
bound
sub
xchg
enter
aam
xchg
jecxz
xorb
add
xchg
mov
sbbl
mov
jle
rol
push
dec
lret
push
inc
out
out
xor
dec
loope
movsb
add
pop
add
mov
push
inc
push
lock
leave
adc
test
fdivrl
in
sbb
cmpsb
inc
pop
cmpsb
xchg
pusha
add
jb
jmp
insl
ret
cwtl
fsubrs
bnd
push
std
shlb
jo
inc
pop
mov
sub
jne
fwait
stos
sbb
mov
cmp
popf
xor
imul
cmp
mov
jo
sti
mov
lcall
jle
and
inc
std
inc
mov
stos
add
test
pop
lds
and
mov
insb
into
push
inc
imulb
mov
aaa
and
loop
adc
or
mov
pop
shr
ljmp
inc
mov
repz
shll
stc
mov
push
sbb
aaa
lods
int3
inc
xchg
push
scas
daa
cmpsl
pop
cld
stc
or
dec
mov
add
lds
je
ret
push
push
xchg
adc
pop
sub
das
jnp
out
mov
adc
pop
sub
push
shlb
add
repnz
pop
xor
repnz
xor
inc
inc
sbb
add
pop
pusha
cltd
mov
jecxz
mov
cmpsl
push
mov
daa
cld
repnz
fldcw
gs
add
outsb
in
dec
addr16
movsb
jns
iret
pop
mov
or
aad
jmp
mov
xchg
jo
fcomi
fnsave
popf
xor
in
pushf
inc
dec
adc
pusha
in
fs
mov
or
sbb
jmp
mov
sub
cmp
fisubs
in
sbb
hlt
cmp
sahf
push
push
inc
rcll
and
dec
pop
inc
dec
add
arpl
cmp
int3
sahf
adc
mov
inc
mov
icebp
andl
fisttpll
sbb
adc
push
inc
jnp
inc
ret
add
xchg
jae
fiadds
xchg
xchg
mov
xchg
xor
cmpsl
stos
inc
outsb
adc
hlt
out
mov
rorb
cmp
rcl
ret
adc
cmpsb
cmp
jp
in
xor
xchg
push
sbb
inc
and
push
sub
in
in
cmp
dec
push
xor
mov
sub
outsb
out
mov
pop
push
mov
and
movsl
cmpl
xchg
fadds
jae
fdivl
xchg
add
into
pusha
mov
in
insl
pusha
add
into
cmp
dec
lods
inc
cmc
pop
pop
mov
test
aaa
leave
mov
test
sbb
arpl
mov
and
inc
xchg
push
cmp
pop
xchg
sub
inc
or
scas
cmp
push
xor
xor
mov
fstps
lcall
call
inc
jecxz
dec
jecxz
insb
dec
adc
sbb
pusha
repnz
and
mov
adc
decb
xor
cltd
ret
clc
sub
ss
xchg
pop
std
dec
ds
dec
jo
imul
cmp
mov
aaa
xchg
push
inc
aad
mov
sbb
out
insl
push
aad
xor
outsb
mov
into
setge
sbb
imul
cmpsl
sub
mov
loopne
ja
jp
fwait
decb
mov
scas
jmp
mulps
xor
lods
sbb
xlat
adc
or
lahf
loop
push
test
mov
mov
repz
arpl
sti
sub
mov
outsb
pop
push
lds
imul
or
aad
adc
fs
inc
mov
add
push
xor
in
lahf
pop
lret
ss
pop
movsb
shlb
mov
dec
test
push
repz
loopne
sub
aad
out
jecxz
mov
push
dec
sbb
mov
cmp
cmp
arpl
jmp
xlat
pusha
call
cmc
push
and
repnz
jmp
push
or
movsl
cmpsl
xlat
mov
xchg
icebp
out
icebp
pop
stc
pop
dec
repz
sub
in
arpl
pop
ljmp
stc
push
push
ja
adc
out
jge
sbb
or
aad
mov
push
sti
mov
dec
pushf
pop
push
mov
loopne
add
xchg
lret
push
push
mov
adc
push
ss
dec
add
stos
fisubrs
nop
out
lock
cmpsb
adc
xchg
loop
dec
push
xchg
ljmp
out
rorb
dec
dec
sbb
mov
sbb
jmp
push
xchg
cmp
mov
outsl
test
xlat
cmp
pop
pushf
cmp
push
or
cltd
push
mov
ss
aas
jmp
pop
xchg
fsubl
mov
gs
xchg
popf
cmp
stos
fwait
pop
jg
dec
jno
lods
lods
stos
sub
jne
cld
sar
loop
movsl
push
mov
out
sbb
jg
add
jmp
repnz
pop
popf
inc
cmc
int3
icebp
aad
adc
popa
shrl
jne
adc
sarl
mov
movsb
test
aaa
inc
test
out
pop
sbb
mov
outsl
lods
in
add
fldcw
mov
or
and
dec
push
push
pop
sbbl
and
loope
xor
fldenv
imul
test
push
cmpsb
sbb
ljmp
mov
out
mov
mov
in
dec
rcll
movsb
das
sub
dec
nop
xchg
pop
aaa
test
andl
cmp
rorb
outsb
in
cmp
jns
lahf
cld
popf
push
dec
leave
pop
into
aad
out
in
mov
sub
fldt
scas
or
pop
das
push
inc
sub
mov
jno
lods
test
les
fwait
pop
push
inc
adc
test
jae
pop
push
lock
pop
popf
scas
cmp
fisubs
test
mov
sbb
lods
xchg
mov
jmp
pop
pop
and
push
nop
adc
adc
pop
mov
or
mov
fs
dec
push
scas
sbbl
sahf
and
mov
or
xchg
jp
into
rcll
push
push
mov
inc
jmp
push
aam
je
outsl
insl
mov
das
rclb
fs
call
adc
inc
rorl
jg
icebp
in
and
xor
outsb
repz
mov
test
and
insl
xor
mov
test
cmp
popa
sub
sbb
dec
adc
jmp
bound
jae
mov
push
out
decb
adc
out
xchg
sub
scas
stc
dec
pop
aam
cli
dec
jp
js
mov
mov
scas
fisubrl
cwtl
in
xchg
sahf
sarl
hlt
es
inc
shrl
in
sti
mov
icebp
pop
cmp
dec
pop
ud2
xchg
mov
cmpsl
repnz
and
into
aad
add
jmp
or
lahf
cmp
insl
sub
cmpsb
xchg
adc
jbe
aad
inc
fwait
cmp
sbb
pop
in
and
psubb
add
sbb
in
test
sbb
jbe
lcall
xlat
sbb
jp
fidivs
fs
push
jp
cmc
je
inc
bound
mov
aas
incl
call
aam
fisttps
sub
lods
cmp
xchg
adc
push
stos
imull
es
xor
or
xor
data16
repnz
das
add
mov
and
pop
cmpsb
scas
insl
inc
sahf
in
push
and
mov
out
or
pop
pop
out
cmp
jl
stos
int3
dec
mov
icebp
inc
lods
aas
call
pop
sbb
adc
pop
fs
or
inc
push
sti
inc
loope
int3
mov
sbb
jno
jns
or
gs
ja
xor
push
dec
clc
adc
addr16
pop
push
sbb
mov
lcall
push
or
lds
ror
fnstcw
jo
popa
fdivp
daa
mov
dec
push
hlt
jns
push
mov
lods
sahf
or
lds
scas
sarl
sbb
inc
cltd
fucomp
loopne
xchg
out
adc
pop
sbb
test
sbb
xchg
std
aam
fildll
mov
and
xchg
nop
jns
ret
cmp
jle
fdivrl
cmp
push
cmc
bound
notb
sub
push
push
cmp
fwait
cmp
or
sub
fwait
xor
lods
jno
sub
jne
in
rcrl
clc
add
mov
xchg
mov
pop
je
rorl
lahf
push
fistl
int3
sbb
test
push
movsb
jno
pop
cwtl
xchg
daa
stc
sub
jb
push
mov
xlat
jmp
ja
arpl
xor
out
xchg
dec
insl
rolb
add
cmc
call
rorl
pop
push
xlat
clc
arpl
push
cmp
lret
sub
es
fcmovu
sar
in
ljmp
xchg
aad
fs
or
xchg
ret
sub
cli
out
mov
cmp
test
movsl
push
out
or
push
mov
aad
mov
mov
call
insl
out
xchg
imul
cltd
pop
and
outsb
adc
add
sbb
add
xchg
lods
jecxz
iretw
shll
push
test
xchg
add
push
jns
stos
cmpsb
fistps
xchg
push
enter
jnp
inc
ret
cmp
dec
les
addl
sub
lcall
pop
test
outsb
mov
add
cmp
dec
rcr
or
fs
stc
mov
cli
jae
lret
jecxz
jge
cs
aaa
out
jmp
mov
lock
inc
aam
daa
pop
outsl
scas
fldenv
cmp
mov
out
add
fsubrl
sub
push
add
fmuls
cmp
dec
pop
add
adc
push
mov
out
negb
in
and
xor
mov
adc
fwait
jmp
cmpsb
stc
out
add
lcall
pop
iret
mov
pop
mov
dec
out
test
sub
add
push
ljmp
out
mov
dec
xlat
lcall
lret
mov
lock
fisubs
leave
xorb
pop
xchg
lock
and
sub
adc
xorl
xchg
orl
inc
lods
stos
ret
mov
lcall
das
cmp
gs
push
mov
xor
enter
lods
adc
test
sahf
lcall
in
sub
add
dec
movsb
jge
mov
mov
in
stos
leave
add
xorb
and
inc
lock
push
mov
pop
dec
mov
dec
sub
notb
adc
fldcw
or
mov
je
cmc
cmc
cmpsl
shlb
mov
mov
aad
and
cmp
add
into
orl
lods
mov
inc
push
push
outsb
xor
shll
clc
cmp
xchg
and
jb
push
inc
pop
and
pusha
cmpsl
sbb
call
sbb
mov
dec
cmp
popf
pushf
movsl
stc
mov
push
cs
loop
movlps
push
ficomps
xchg
je
sti
or
xchg
push
imul
lret
stc
xor
xchg
andb
rorb
adc
cmp
mov
push
cltd
or
test
gs
pop
std
dec
clc
lods
or
sub
jno
cld
xchg
icebp
lahf
daa
xchg
fildl
dec
out
sub
cltd
and
mov
sbb
push
fdivl
mov
pop
fwait
mov
test
out
inc
mov
adc
stos
adc
sub
cmpsl
xor
pop
jnp
shl
pop
inc
ljmp
ret
shll
les
test
ucomiss
dec
movsb
dec
push
rcrb
out
stos
inc
mov
lcall
das
mov
shl
stc
push
popf
adc
pop
jecxz
mov
sbb
jmp
xor
mov
ja
xchg
xchg
inc
push
or
adc
sub
inc
mov
mov
lret
divl
nop
cli
inc
rcl
jp
inc
rcrl
or
adc
loope
sbb
daa
fimull
jmp
outsl
dec
add
cmp
cmpsb
lods
push
ljmp
jno
sbb
adc
mov
test
adc
sbb
cmp
mov
std
sub
xchg
shlb
adc
dec
or
dec
dec
mov
roll
sbb
cmp
adcb
fistpll
lods
out
adc
fdivrl
cmc
inc
jecxz
pop
in
or
ret
add
shl
push
or
cld
push
push
ds
pop
jecxz
mov
leave
adc
cltd
jl
sub
out
fistpl
fxrstor
and
mov
or
daa
ss
add
add
es
add
sbb
dec
jae
mov
pop
shrl
push
aam
insb
and
adc
push
inc
das
and
lods
mov
xchg
inc
rorb
arpl
dec
out
push
inc
ret
push
sbb
aad
imul
sub
mov
daa
jns
dec
in
cwtl
sbb
cmp
mov
cwtl
mov
call
test
test
enter
shll
in
xor
jbe
sub
cli
xchg
mov
aam
xor
adc
aas
aad
pop
es
arpl
cli
cld
jno
sbb
push
push
popf
mov
rorb
or
aas
dec
mov
mov
hlt
mov
ret
push
cmp
inc
and
sub
daa
adc
and
outsl
xchg
sbb
ficoms
lahf
loop
mov
pop
dec
mov
push
mov
in
out
gs
sbb
xlat
adc
repnz
call
inc
sbb
dec
mov
int
repz
mov
cwtl
dec
cmp
push
rol
pop
mov
movsl
inc
aas
cmp
mov
shll
icebp
sbb
ja
ja
sub
push
imul
lret
roll
notb
test
stc
js
imul
data16
or
outsb
in
imul
movsb
and
data16
ret
push
mov
push
jecxz
xchg
mov
int
mov
out
xor
inc
je
lods
lds
ja
jg
pop
inc
sub
mov
mov
jae
jg
cltd
xchg
call
pop
mov
or
sbb
jno
ss
or
fs
dec
sbb
jb
mov
in
es
jge
mov
inc
fbstp
iret
dec
mov
xor
jg
mov
ret
cmp
or
js
adc
jl
scas
scas
popa
inc
push
add
mov
insl
xor
xor
insl
incl
loopne
mov
mov
hlt
dec
rol
mov
test
dec
push
fsubrl
xor
sbb
cs
cmp
jno
sbb
pushf
xor
sub
jmp
adc
les
mov
fldenv
mov
dec
fstl
push
clc
repz
lods
out
mov
adc
and
xor
iret
push
das
fstpt
call
jmp
mov
mov
pop
jge
mov
out
dec
jmp
add
add
pop
aas
cmp
stc
ljmp
and
ss
sbb
in
xor
sbb
pop
adc
mov
adc
shl
and
mov
xchg
repnz
and
pop
pusha
sahf
push
sbb
mov
movsb
jge
and
dec
out
mov
sarb
pop
pop
in
aad
mov
sar
dec
out
repnz
or
nop
jmp
or
addr16
cli
movsl
jl
sbb
lea
cwtl
mov
mov
lods
jns
cmp
or
mov
mov
sbb
shlb
adc
xchg
int3
jge
add
call
cmp
push
mov
lahf
insl
lahf
push
cmpsl
fwait
pop
jo
in
sbb
addr16
pop
pop
lock
int3
adc
insb
lret
cmp
dec
cs
les
and
aad
icebp
dec
popa
mov
mov
jno
mov
pop
sub
adc
mov
jge
sbb
fdivs
push
aaa
add
xor
ljmp
fdivr
insl
xor
rcll
repnz
pop
out
pop
ss
cmp
and
fsubl
adc
jae
mov
or
in
sbb
outsl
push
jno
or
xor
inc
aaa
shrl
cmp
pop
sti
in
xchg
add
cwtl
sub
dec
shrb
gs
mov
outsl
adc
cmp
cs
sub
dec
and
cmpsb
dec
mov
mov
outsl
test
sbb
insl
xor
aaa
xor
fs
hlt
aam
sub
sub
stos
popa
ljmp
xor
sub
lock
daa
outsl
xchg
and
pop
pop
push
aam
xchg
add
ss
mov
into
popa
xchg
scas
scas
cmp
mov
dec
pusha
lret
sahf
fldt
push
sub
add
lods
pop
jmp
sub
push
loop
clc
lock
jnp
sti
cmp
dec
mov
inc
cmp
inc
xlat
cmp
mov
notb
or
sbb
insl
xchg
in
xchg
sub
decl
out
scas
mov
mov
pop
cltd
mov
xor
cld
fildll
add
fsubp
int
cmp
inc
inc
sub
pusha
add
push
jmp
or
stos
hlt
add
test
and
imulb
ret
or
popf
sub
repz
movl
mov
sbb
insl
pop
sub
gs
daa
repz
add
mov
xorb
mov
sbbb
cltd
mov
push
enter
jno
leave
adc
int
out
out
out
mov
push
push
clc
mov
adc
mov
mov
xchg
push
cmp
inc
pop
xchg
cmc
mov
cmp
in
xchg
push
out
imul
jp
adc
push
call
pop
jo
mov
addb
sub
and
push
cmpb
cmp
pop
adc
sahf
hlt
bnd
jp
scas
xor
add
ljmp
jae,pt
or
iret
sarl
es
adcl
and
std
xor
mov
dec
fwait
sub
sbb
jnp
add
sub
and
mov
iret
data16
out
pop
inc
rcrl
mov
out
mov
cmp
jl
ja
push
jbe
jne
jbe
mov
push
rorl
lea
in
mov
cmc
int3
shrb
stc
aaa
lea
icebp
cmpl
adc
out
rorl
jmp
pop
loopne
das
aaa
xor
push
inc
or
addr16
lods
addl
xor
enter
lret
jmp
mov
inc
sbb
push
mov
lock
loopne
popa
push
je
pop
in
xor
jmp
xchg
sbb
filds
fdivrs
jp
jmp
pop
in
sbb
leave
jge
mov
cmpsb
imul
stc
lahf
mov
dec
xorl
xchg
out
lret
xchg
adc
adc
pop
imulb
or
jno
cmp
lock
jge
in
jne
outsl
dec
fs
lds
rclb
sub
cltd
ret
sub
fdivl
or
das
lods
sub
and
dec
fldcw
fldenv
jmp
in
neg
lock
test
test
xor
je
xlat
add
addr16
out
dec
stc
aaa
mov
mov
xor
ret
xorl
mov
mov
cmc
and
shlb
js
dec
cmp
rcrl
lods
clc
test
pop
imul
nop
sub
movsb
repz
repz
and
fstpl
push
insl
push
idiv
leave
add
aas
push
add
push
mov
cwtl
movsb
std
mov
inc
push
inc
push
sbb
mov
fadds
rcll
fnsave
push
sbb
es
in
lock
pushf
mov
xor
sbb
xlat
jmp
imul
inc
and
cmp
pushf
shll
mov
rcrl
mov
push
sbb
pop
lea
xchg
sbb
mov
push
lcall
clc
fucomi
ss
pop
mov
pushf
inc
fstpt
icebp
hlt
push
adc
ror
inc
mov
mov
fwait
adc
inc
ja
mov
je,pt
movsl
imul
mov
lcall
testb
cmpsl
shl
scas
xchg
mov
test
xchg
rclb
std
out
out
jno
dec
subl
xor
in
jae
imul
rcll
mov
addr16
cmp
dec
loop
xchg
enter
inc
inc
mov
cmp
div
adc
sbb
adc
cmpsl
mov
testl
or
sub
cmpsl
js
leave
scas
dec
jns
pushf
in
or
or
add
pushf
xor
pop
inc
in
fwait
cmp
in
cmp
mov
mov
mov
ret
inc
sbb
lret
cmp
aas
pushf
shr
dec
or
inc
repnz
sbb
pop
mov
mov
test
movb
inc
push
hlt
pop
imul
push
lret
addr16
mov
hlt
sbb
mov
shr
and
decl
jl
inc
sti
xor
cmp
and
imul
xor
pop
cli
inc
jmp
jmp
pop
das
popl
jecxz
popa
mov
sbb
int3
fistpl
cmpsb
jp
lds
mov
in
pop
clc
or
adc
xchg
or
and
push
pop
pop
push
or
pop
imul
lea
fiadds
mov
in
out
and
mov
and
lea
dec
rcll
repz
adc
or
push
std
inc
pop
cmp
mov
cmp
fiadds
add
js
xor
push
mov
xlat
jmp
mov
push
test
nop
lods
leave
push
ret
mov
sub
cmc
add
inc
out
pop
and
add
leave
notb
xchg
add
push
jmp
dec
into
pop
icebp
mov
sbb
adc
push
or
mov
daa
nopl
or
dec
cmpb
call
mov
fwait
adc
lods
mov
cmp
add
pop
mov
shll
sub
call
mov
outsl
cmp
push
dec
pop
sub
push
mov
std
fwait
mov
mov
stc
sbb
cmp
adc
repz
out
mov
inc
add
sbb
or
mov
lods
mov
cwtl
mov
or
sarl
or
enter
cmp
sub
jp
lahf
add
push
ja
inc
loope
or
mov
cmpsl
pop
xor
jo
mov
inc
mov
xor
stc
jo
jnp
and
mov
icebp
sbb
test
mov
cld
subl
mov
mov
cmp
lcall
cmp
imul
sarl
jno
call
sbbb
sbb
sbb
dec
lahf
inc
fadds
pop
xchg
fadd
mov
repz
mov
repz
jno
jl
lahf
and
inc
adcl
xchg
addr16
dec
pop
scas
xlat
icebp
nop
in
test
cmp
movsl
xor
adc
jo
fsubrs
pop
insb
jle
stos
divb
push
sbb
xchg
cmp
push
sbb
adc
pop
pop
pushl
xchg
es
vunpcklpd
jl
mov
and
int3
mov
cmp
dec
inc
loopne
and
or
shrb
push
in
orb
sub
js
jge
insl
das
or
xchg
jle
xchg
fisubrl
pop
dec
mov
pop
cltd
es
push
or
add
xor
push
adcl
mov
shl
out
jge
cmpsl
dec
in
out
pop
shr
mov
repz
mov
in
notl
fsubrl
rcr
and
adc
push
imul
dec
orl
adc
dec
jl
testb
add
pop
pop
pop
sub
cmp
mov
in
mov
jp
inc
in
out
mov
dec
and
in
pop
mov
and
jle
mov
push
ret
in
jp
lds
xchg
xchg
mov
js
add
mov
add
mov
repz
mov
stc
mov
pop
push
je
mov
sub
or
pop
loope
iret
sti
add
mov
or
mov
xlat
and
andb
sbb
bound
hlt
mov
lods
gs
outsl
rcrl
jb
jae
repnz
daa
adc
sahf
scas
fs
adc
jle
insl
mov
daa
aad
mov
js
mov
mov
popa
mov
dec
movsl
lods
jge
push
test
outsb
cld
dec
js
pusha
lock
div
push
mov
xchg
lods
sahf
cmpl
push
icebp
rolb
cmpsb
xor
std
outsl
mov
leave
arpl
or
xchg
mov
into
pop
and
sahf
xchg
cmp
mov
mov
jge
shrl
lcall
movl
popa
loop
in
cmp
sbb
mov
icebp
xchg
adc
pop
les
into
mov
dec
pop
fsts
insb
nop
push
and
pop
stos
mov
mov
add
iret
cmc
aaa
mov
scas
and
shlb
xchg
jno
jge
or
jns
dec
xor
sbbl
push
jns
fldcw
jb
js
cli
mov
ret
inc
aam
out
insl
shrb
pop
popa
roll
xchg
imul
mov
pop
pop
imul
pop
push
pop
xchg
cmpsl
in
sub
into
fidivrs
movsb
mov
cmp
xor
imul
mov
jl
adc
test
pop
flds
lret
insl
sahf
gs
test
sub
jbe
and
sbb
bound
push
mov
lcall
das
add
test
mov
mov
xchg
add
popa
lret
mov
stos
addb
push
add
int3
xchg
pop
out
fstpt
out
ror
inc
loop,pn
cmp
inc
mov
sahf
push
int
sbb
pop
shll
cmp
fsubr
int
iret
leave
mov
outsb
mov
cwtl
add
lea
lock
shl
stos
xchg
stc
mov
mov
dec
xchg
outsb
decb
scas
std
sub
cltd
jmp
out
pop
mov
fs
inc
stos
jp
xchg
jae
ljmp
popa
sbb
cmp
inc
or
sbb
arpl
cwtl
lock
ret
sahf
jmp
mov
ja
leave
aam
and
scas
jmp
xchg
and
popf
fwait
inc
push
and
mov
pop
aaa
test
inc
jl
imul
xchg
mov
adc
loopne
fwait
xor
shl
push
decb
jae
outsl
adc
imul
enter
xchg
sub
outsb
inc
mov
xchg
imul
sub
xchg
jne
movaps
cmp
repz
out
pop
or
pop
jg
inc
pop
jmp
lahf
dec
in
adc
movaps
jge
jbe
lea
mov
dec
xchg
xchg
into
jb
sarl
sti
cmovne
popa
fcomps
add
or
xor
imul
fcompl
ret
pop
shrb
lea
xchg
push
in
test
shlw
mov
dec
nop
mov
addr16
iret
cltd
cmp
push
fisubs
xor
mov
mov
sub
jl
xchg
out
aam
push
rcrb
cmp
jbe
sbb
jp
andl
repnz
ficoml
cli
loop
mov
add
lahf
xor
dec
dec
vcvtsi2ssl
adc
inc
mov
jmp
movsl
mov
lret
call
pop
loope
ficomps
lock
pusha
dec
jne
mov
and
incl
cld
mov
sbb
jecxz
xor
int3
mov
mov
jge
ret
xor
xlat
pusha
lahf
sbb
dec
push
sub
push
dec
lods
inc
scas
mov
fwait
pusha
pop
mov
jns
outsb
in
pushf
sub
mov
mov
mov
mov
jle
les
jb
pop
pop
lods
or
ss
jp
aam
mov
jecxz
ljmp
xchg
lret
js
inc
adc
test
test
hlt
push
xchg
ret
cmc
and
jmp
nop
push
lea
cs
ret
into
xchg
adc
fnstenv
add
mov
cmpsb
cli
shlb
fnstcw
cmp
ds
lret
push
push
iret
test
sub
mov
shr
ret
and
sahf
jb
dec
enter
push
lods
cmp
adc
loop
jg
push
ljmp
je
jmp
mov
divl
or
imul
fists
fnstcw
daa
mov
mov
xchg
mov
ljmp
mov
imul
outsb
push
jbe
jbe
mov
stos
cmp
mov
and
mov
dec
ja
cwtl
aam
sub
cmpsb
jle
cmp
fs
xchg
or
mov
pop
cwtl
push
shr
stos
popf
cmp
pop
mov
test
pop
stos
subb
iret
rcrb
scas
xchg
mov
arpl
flds
imulb
sahf
or
repnz
nop
and
jo
dec
add
ret
hlt
fwait
jmp
jg
add
mov
rolb
aad
mov
orl
mov
lock
dec
jae
rorl
aaa
or
sbb
mov
mov
int3
inc
enter
imul
or
sbbl
inc
adc
bound
pusha
cli
popf
xchg
mov
jg
and
mov
xchg
push
movsl
mov
jb
push
test
pop
jg
xchg
and
pop
mov
mov
daa
inc
dec
out
lods
xor
stos
bound
mov
adc
jl
femms
ret
xor
mov
test
bound
flds
pop
movsb
cmpsl
mov
ret
popf
adc
andl
enter
and
out
out
pushf
xlat
dec
mov
xchg
cld
hlt
jl
bound
add
insl
sbb
loop
adc
cmp
or
pop
pop
add
jns
sbb
sub
fidivrl
addl
int3
in
ficompl
dec
cltd
out
mov
or
in
dec
inc
test
mov
add
jae
push
jecxz
imul
lea
adc
movsl
pop
out
dec
fstl
leave
and
or
loope
jge
ss
xor
out
pop
in
or
das
test
repz
xorb
fidivs
push
sub
sub
insb
and
mov
and
fnsave
pop
dec
inc
lods
jno
sub
push
ret
push
mov
or
xlat
lcall
add
sbb
cld
push
jle
inc
xor
jecxz
roll
cwtl
and
in
stos
shr
minps
call
lods
push
arpl
inc
popf
xor
jg,pn
dec
push
pminsw
and
ret
mov
or
incb
mov
xor
jp
mov
je
icebp
inc
mov
sbb
jb
out
call
push
sub
or
das
out
out
les
dec
cmc
lods
jmp
mov
int
call
fsincos
das
imul
jb
xchg
jae
dec
xchg
fbstp
mov
push
mov
ja
sub
mov
iret
pop
loop
enter
fidivrs
pop
mov
dec
mov
cltd
cmc
sahf
mov
in
aaa
psrlq
adc
or
jp
fisubs
and
or
pop
andl
and
lea
mov
jbe
inc
mull
and
or
sbb
mov
xor
sbb
lcall
push
add
lcall
sub
lea
imul
rclb
adcb
xor
inc
dec
push
xor
mov
loopne
or
fldl
lret
in
or
in
nop
cmpsl
jo
adc
dec
iret
outsb
adcl
mov
dec
loope
movsb
add
dec
xchg
mov
mov
bnd
mov
lahf
mov
mov
inc
sub
dec
das
cmp
xor
pop
out
lods
fcomps
or
jns
inc
test
loope
or
xchg
mov
adc
mov
mov
stos
mov
ficompl
mov
xor
orl
lods
fisttpl
push
or
cs
test
les
xor
mov
dec
sti
cmp
imul
stos
movsl
jle
and
xor
addr16
pop
cltd
jl
pop
cmp
add
ljmp
mov
ret
lods
jl
mov
lret
mov
pop
xor
push
andb
aam
std
push
xor
and
mov
cmp
pop
gs
mov
adc
gs
xchg
loop
aas
outsb
mov
out
mov
xor
cmp
cmp
and
clc
jb
fisubrl
out
int
sbb
pop
adc
lret
mov
jo
push
aaa
cmp
jl
xor
int3
inc
add
cmp
jo
cmp
cld
jne
and
fbld
inc
out
inc
stos
insb
sarb
sub
mov
jg
cwtl
mov
nop
mov
cmp
popa
and
adc
cmpsl
cmpsl
loop
add
and
jns
shlb
pop
scas
pop
imul
loope
mov
push
or
mov
sbb
rcl
mov
jnp
adcb
add
add
pop
mov
or
add
int3
sti
lret
repnz
call
movsb
push
jg
movsb
cmp
push
sub
add
incb
add
cmc
int
jmp
test
adc
lret
adc
dec
xchg
out
jo
or
pushf
push
xchg
jno
mov
icebp
enter
lcall
gs
lods
scas
dec
dec
hlt
les
pop
cmp
lahf
int3
sub
loopne
jns
mov
inc
repz
out
add
jle
inc
inc
xor
jo
jbe
cltd
fisubs
dec
lahf
xor
cmp
imul
xor
cs
sub
jle
lea
xchg
xchg
xor
dec
xchg
inc
mov
pop
sahf
mov
inc
movsb
js
lods
fs
mov
lcall
sbb
pop
frstor
cmp
rcrb
pop
cmp
push
sahf
movsl
pop
in
xor
push
mov
stc
inc
je
xchg
arpl
lds
addr16
gs
jbe
test
lahf
lea
inc
jo
mov
mov
push
popa
testb
mov
xchg
in
test
dec
icebp
push
scas
mov
jns
jp
jae
outsl
xchg
not
add
and
clc
dec
sbb
inc
inc
dec
jecxz
lea
test
mov
bound
adc
mov
rcrb
aaa
cmpsb
stos
xor
fldt
push
mov
les
pop
mov
mov
outsl
movsb
je
loope
es
std
ss
adc
fidivl
out
inc
sahf
call
shl
xchg
iret
pop
cmp
inc
pop
push
adc
mov
fwait
dec
movsb
popf
int3
mov
mov
divb
inc
dec
jbe
pop
mov
adc
jp
push
fistpll
sbb
inc
fwait
in
and
jge
push
xlat
int
inc
mov
mov
fwait
fwait
push
push
mov
push
jp
sbb
sub
inc
sub
push
sahf
jge
dec
mov
sbb
pop
enter
fwait
xchg
push
push
xor
decl
rcrl
frstor
das
push
into
outsl
mov
xchg
inc
dec
mov
sahf
sbb
jae
pop
xlat
cld
jge
mov
mov
fs
jmp
xor
jae
push
pop
and
mov
aaa
xorl
and
lret
lret
sub
jle
xlat
add
dec
pop
repnz
je
in
int
int
push
cmp
mov
cmp
push
and
adc
adc
stos
lahf
gs
pop
sbb
testb
dec
lods
adc
and
adc
arpl
sub
aaa
push
xlat
mov
push
into
pushf
je
sub
adc
jnp
fnstsw
mov
pop
ret
shll
cmpsb
ds
in
sahf
add
gs
fisttpll
shlb
adc
imul
movsl
or
mov
call
mov
outsb
movsl
movsb
nop
addr16
cmp
sarb
stos
mov
jno
inc
cmpsb
cltd
mov
loopne
popa
repnz
cmp
mov
lea
shll
mov
mov
sub
or
sbb
inc
lea
add
clc
sarb
popa
xor
loop
mov
push
mov
fdivl
ret
pop
mov
movsb
inc
daa
push
push
out
and
hlt
adc
in
cli
imul
dec
sbb
xchg
mov
sub
roll
and
test
aas
insb
cmp
cmp
pusha
jnp
dec
dec
mov
stc
shlb
dec
fdivrs
cmp
mov
cmp
push
adc
mov
cmp
push
dec
fstps
enter
imul
push
push
ljmp
iret
popf
aas
or
xchg
das
pop
pop
dec
mov
inc
fcoml
mov
cmpl
test
jmp
lahf
fwait
pop
fsubrl
sub
mov
ja
cmpsb
xchg
xor
aas
or
mov
jnp
cwtd
pop
loope
inc
xlat
jecxz
pop
xchg
jo
dec
repz
mov
fwait
subl
ja
into
lcall
jge
rcl
outsl
imul
jo
addr16
scas
lds
addb
movsb
push
mov
stos
inc
xchg
jl
or
add
mov
jno
loop
loopne
lock
rol
testl
dec
orb
mov
push
loopne
repnz
scas
mov
icebp
dec
mov
sub
xor
ret
mov
xorl
xchg
out
push
ficompl
repz
inc
jp
mov
adc
xchg
mov
mov
out
daa
out
xlat
lods
pop
pop
or
push
lods
mov
aas
daa
test
js
fstpl
jne
imul
mov
cli
mov
xchg
je
stos
repz
fidivrs
and
xor
imul
jge
push
pushf
lods
das
js
aas
incl
jmp
inc
test
jae
sti
jge
inc
dec
and
sbb
ljmp
push
add
xchg
test
and
push
mov
lea
mov
imul
mov
cmp
xchg
pop
mov
stc
test
js
mov
add
test
leave
fldt
stc
les
dec
cwtl
mov
in
mov
inc
xchg
test
stc
lret
insl
add
into
add
lahf
aam
loope
adc
push
mov
push
mov
pop
xchg
mov
sbb
mov
cmp
or
aad
cltd
xchg
out
lds
mov
dec
out
ljmp
inc
test
mov
imul
outsl
outsb
iret
jo
inc
dec
std
fcoms
jge
mov
cltd
pop
sbb
sbb
gs
aaa
xchg
mov
data16
ret
sub
xchg
push
inc
call
add
adc
fisttpll
and
out
cmp
pop
xor
shr
insl
sti
jo
shll
gs
or
push
aad
jp
daa
and
xor
lds
dec
push
inc
cli
adc
aas
repz
or
add
daa
test
inc
les
movsb
lahf
lret
inc
xchg
push
cwtl
or
adcl
lods
movsb
and
inc
xchg
pop
js
pop
insl
or
mov
dec
sbb
and
sbb
bound
lret
mov
add
sub
pushf
in
pop
push
and
inc
mov
add
mov
push
push
dec
loope
jg
xor
cmp
xor
mov
cltd
sti
cmpb
das
push
mov
jnp
cwtd
jp
dec
lahf
jecxz
add
dec
fnsave
cmp
mov
ror
jo
sub
out
into
test
fsubp
repz
pushf
in
mov
in
mov
jp
aas
loope
pushf
hlt
adc
leave
add
lods
cmp
push
xlat
hlt
clc
ss
jp
pop
lea
jmp
aas
pop
and
pop
pushf
lods
data16
mov
test
fnsave
inc
mov
adc
pusha
loop
test
mull
inc
mov
sub
arpl
in
mov
sbb
jmp
shll
clc
jmp
and
adc
out
stc
scas
cmp
push
sbb
popw
push
mov
push
rorl
test
mov
inc
xor
popf
aaa
test
jle,pt
xor
mov
dec
hlt
icebp
xor
jbe
icebp
loope
bound
inc
ret
shll
add
out
cmp
stos
imul
pop
mov
jecxz
ljmp
insb
outsb
mov
and
das
inc
hlt
mov
ljmp
mov
cmp
mov
cltd
add
repz
hlt
or
mov
inc
mov
not
or
add
and
imul
imul
mov
clc
sbb
loope
and
ror
loope
jg
and
rorb
std
inc
adc
inc
int3
jbe
scas
inc
dec
nop
push
dec
add
pop
je
cmp
sbb
push
push
sbb
mov
ja
in
cld
out
in
sub
adcb
xor
mov
add
daa
or
add
mov
sub
mov
cmovo
movsb
mov
aaa
lea
xchg
cmpsb
cmpsb
cmc
dec
andb
mov
xor
pop
pop
aam
xchg
les
cwtl
stos
push
xchg
push
inc
ljmp
or
popa
cs
das
push
jmp
repnz
mov
or
add
mov
ret
popa
in
popl
mov
adc
push
std
mov
pushf
mov
push
push
and
out
mov
daa
mov
inc
jo
and
aaa
pop
in
cmp
shlb
dec
lods
int
aaa
inc
mov
mov
imul
sti
dec
sahf
cmp
xor
mov
sub
repz
mov
cmp
fcoml
jle
adc
lods
icebp
push
mov
fmull
jp
mov
ret
mov
push
ficomps
stos
cli
test
mov
xor
xor
and
mulb
js
leave
mov
hlt
cmpsb
jp
pop
out
int3
and
mov
daa
or
leave
in
xchg
xchg
mov
cmc
xor
xchg
mov
mov
loopne
mov
cmp
inc
unpckhps
xor
xchg
cld
dec
adc
fcoml
out
adc
pop
inc
mov
xchg
jge
mov
xchg
aad
cmpsb
test
cwtl
cwtl
call
sub
adc
sub
loop
cmp
jle
sub
and
sbb
jno
dec
xor
mov
add
imul
int
mov
out
inc
cmp
inc
lcall
cmp
aam
mov
push
adc
subb
outsl
pop
dec
xchg
pop
sub
loopne
xchg
xchg
loopne
ja
cmpl
pop
cmp
pop
pop
pop
mov
jle
inc
dec
icebp
jb
sub
xor
and
std
ljmp
orb
hlt
in
fisubs
stos
stos
push
clc
mov
lret
jmp
ror
inc
push
mov
adcb
mov
xchg
pop
movsb
mov
in
adc
jp
jb
push
adc
jbe
pop
mov
stos
in
jmp
jns
lahf
mov
test
fsub
mov
mov
imulw
scas
sbb
lcall
dec
lock
roll
mov
mov
or
sub
ret
rolb
mov
loopne,pn
pop
je
pusha
lods
int
push
ds
sbb
mov
mov
ja
adc
mov
imul
sub
in
gs
das
loope
mov
jmp
push
fistps
iret
and
fmull
adc
add
xchg
jo
iret
xchg
pusha
push
push
add
mov
out
mov
adc
out
xchg
push
mov
std
xchg
xor
pop
sar
loope
mov
and
cld
sbb
or
xchg
sahf
add
and
repz
mov
outsl
add
push
pop
or
xor
out
fiadds
loopne
xor
sbb
and
test
jp
cltd
filds
add
push
mov
test
and
test
es
jge
mov
jg
mov
shlb
pop
lea
ret
sub
orl
test
xchg
ja
pop
or
cld
lret
aam
and
xchg
jle
sbb
insl
fcomip
jecxz
repz
in
rorb
iret
leave
xchg
out
xlat
adc
fdiv
pop
sbb
adc
sub
sub
jge
enter
lock
jbe
pop
mov
mov
call
out
push
iret
pop
mov
lea
push
dec
push
insl
scas
int3
jg
inc
sub
stc
mov
xor
push
sub
outsl
mov
dec
or
lods
push
cmpsb
mov
dec
dec
mov
pusha
inc
push
inc
int3
mov
pushf
or
clc
lods
aad
pushf
flds
mov
mov
and
aaa
xor
mov
add
xlat
sbb
sub
enter
arpl
push
daa
pusha
jmp
es
popf
push
out
inc
mov
mov
add
adc
inc
lret
xlat
jae
dec
mov
xchg
push
pop
mov
das
mov
repnz
xchg
popa
jge
aam
lds
mov
pop
stos
and
pop
jbe
xchg
sbb
jne
or
cmpsl
stos
cmpsl
xchg
imul
push
pinsrw
and
dec
cmpsb
jmp
push
pusha
les
nop
xor
fsubrs
sbb
cmp
test
pusha
add
mov
add
cld
lock
sahf
push
jns
pop
dec
inc
or
or
ss
sbbb
sub
dec
inc
pop
stos
pushf
cld
dec
jecxz
sub
or
out
aaa
pop
shrb
lahf
pop
xor
mov
dec
jge
dec
addr16
out
mov
xor
roll
pop
dec
add
and
mov
shrb
pop
into
jle
stc
jo
add
pop
out
gs
loope
pop
mov
and
fcoms
pop
pop
mov
or
adc
sahf
filds
fistl
dec
pop
sbb
cmp
add
jno
shrb
shll
push
xchg
xchg
in
popa
mov
xlat
nop
outsl
out
shll
push
stos
mov
jnp
mov
cmp
inc
rcrl
cmp
cli
fildl
sbb
ret
lret
outsb
sahf
cmp
mov
pop
mov
pop
call
adc
mov
sub
fadds
movsb
inc
cld
mov
add
mov
inc
or
iret
xor
sub
cli
icebp
adc
jb
in
jle
jge
xchg
test
sti
test
sbb
xchg
lds
pushf
jl
iret
inc
xlat
gs
hlt
adc
out
push
mov
push
insl
jle
dec
in
jne
push
adc
mov
and
pop
scas
ds
iret
fwait
lret
bound
sub
cmp
mov
xor
not
push
movsl
out
out
mov
add
aaa
stos
pop
xor
sbb
lcall
sub
das
aaa
out
and
pop
insl
lds
shl
sub
insb
aaa
xor
push
in
add
jp
lret
jecxz
clc
shlb
inc
fldenv
scas
pop
fisubs
mov
mov
xor
nop
push
punpckldq
aas
xor
aaa
jo
lret
mov
out
mov
sub
lods
shl
cld
loope
es
adc
stos
mov
lock
incb
lods
sub
sub
push
xor
or
insb
popf
push
fldcw
sbb
pop
mov
lods
dec
push
push
jb
data16
push
test
cmpsl
mov
mov
mov
cmc
fwait
push
cmp
adc
cwtl
les
bound
cmc
xorl
scas
iret
cltd
push
or
lods
adc
loop
test
in
addr16
cltd
push
mov
cmp
dec
jne
cmp
test
fistpl
add
test
xchg
fistl
pop
movsb
push
mov
clc
addb
leave
lods
aad
addb
cld
arpl
jb
test
pop
add
mov
cmovns
fsubrs
jecxz
mov
sbb
shlb
fnstcw
dec
mov
outsl
jne
or
test
xchg
dec
mov
sub
repnz
or
mov
pop
sub
fsts
mov
push
xchg
daa
jecxz
imul
hlt
adc
and
scas
das
test
add
inc
negb
fcmovnb
cmp
mov
mov
or
adc
or
or
out
lods
fdivrl
fchs
in
pop
fadd
sbb
out
push
orb
lret
pusha
push
mov
in
stos
mov
jno
add
test
in
adc
inc
orl
ret
xor
repnz
jb
mov
rorl
inc
subl
xchg
mov
or
xchg
js
icebp
filds
mov
jmp
cmp
mov
or
sbb
sub
scas
not
dec
xchg
je
adc
and
fistps
add
imul
push
push
fwait
jb
mov
push
cli
add
inc
sbb
adc
in
sub
js
lods
mov
popw
cwtl
addb
push
rorb
jp
lods
pop
pop
push
push
out
mov
loopne
out
movsl
addr16
cmp
inc
ror
add
ja
sti
inc
add
xor
inc
mov
adc
out
xor
daa
rorl
sbb
or
jp
jne
inc
popf
clc
or
shll
movsb
das
shl
shll
and
push
std
test
test
ljmp
cmp
lcall
or
ret
mov
xchg
jne
mov
jns
pop
popf
sbb
inc
push
push
insb
daa
or
add
lahf
popa
ret
add
movsb
cli
shll
and
out
xchg
xchg
idiv
sahf
stos
ja
push
fs
enter
outsl
ljmp
stos
jmp
addr16
xor
shl
and
fwait
out
movsl
push
pusha
cmp
cmp
push
mov
sbb
in
movsl
testl
nop
pop
nop
inc
sub
stc
addl
sbb
sub
dec
cmp
mov
and
or
jb
mov
es
cmp
jbe
popa
bound
add
shrb
xchg
fisttps
jle
pop
xor
push
mov
loopne
popa
jne
pop
pop
into
stos
aam
cmc
arpl
push
je
std
mov
mov
and
arpl
rol
lret
test
and
jae
adc
xor
pop
jo
sub
xlat
jge
jge
jmp
jle
mov
testl
pop
aam
push
sbb
mov
xor
int3
xlat
pop
push
sbb
fsubrs
xchg
stos
sbb
pop
xor
pop
push
movsl
mov
mov
xor
inc
in
jp
and
inc
std
mov
mov
xchg
sbb
xor
clc
in
or
lds
sbb
add
adc
ds
loopne
pop
jne
sbb
je
iret
lods
or
lcall
cmpsb
movsl
xor
lds
jae
test
mov
fists
cmp
and
xchg
dec
js
iret
mov
sar
jl
cmp
addl
iret
jno
or
repnz
jecxz
inc
xchg
fists
sbb
scas
into
out
adc
pop
jne
lods
push
out
ljmp
xor
mull
roll
fisubrl
sbb
cli
push
jae
jg
mov
pop
xchg
mov
xor
push
repnz
leave
jno
pop
and
fucomi
add
std
dec
std
scas
lock
ret
mov
clc
add
in
outsb
mov
rolb
or
add
fs
mov
fcomp
inc
inc
xchg
xchg
sbb
jecxz
out
ret
sbb
gs
or
not
sbb
inc
filds
in
adc
aaa
mov
jbe
iret
mov
shrb
cmp
jecxz
jge
fs
mov
push
pusha
add
nop
mov
rcl
pop
adc
fabs
cmp
cmpl
call
adc
cmpsl
lcall
out
dec
mov
pop
push
mov
push
stos
mov
xchg
lea
inc
stc
and
push
idiv
js
lods
arpl
inc
test
data16
pop
push
sub
jbe
cld
bts
int3
mov
pop
jns
add
jno
mov
int3
or
imul
xor
mov
icebp
test
clc
xchg
ret
mov
cmp
outsl
scas
mov
dec
loope
hlt
mov
inc
and
xchg
mov
jecxz
pop
lock
imul
push
sahf
das
mov
xchg
jge
cmp
inc
mov
sarl
cmp
cmp
mov
cmpsl
push
stc
stos
mov
jnp
and
pop
pop
pop
loope
add
test
cmp
mov
mov
in
sub
adc
sbb
cmp
pop
push
pop
jbe
mov
out
test
and
addr16
andl
adcb
pop
data16
and
inc
jo
pop
add
rorl
inc
mov
outsl
mov
xor
cmp
imul
lods
sub
jo
lret
ss
and
ss
inc
int3
int
ds
nop
call
insl
shrb
add
ror
xchg
fildll
ret
js
mov
movsl
pop
mov
ljmp
xchg
outsl
icebp
popf
das
cwtl
jecxz
testl
mov
shrl
and
sahf
xor
scas
scas
cwtl
sub
pop
popf
push
jno
scas
call
imulb
inc
mov
lds
scas
shll
aam
mov
sbb
das
jo
movsb
sbb
cmpsl
adcb
and
adc
test
fldt
mov
lcall
adc
je
mov
arpl
lahf
shl
out
sti
push
and
jmp
imul
cmpsl
jae
aaa
jns
repz
into
push
cmc
pop
pop
dec
loopne
cmp
cld
jne
push
pop
inc
xchg
nop
dec
inc
sahf
scas
inc
sub
lahf
movsl
fistl
sbb
pop
insb
cmpsl
and
mov
xchg
mov
mov
stos
ds
or
stos
adc
sbb
cmova
xor
shlb
inc
sub
mov
lods
push
repnz
mov
subl
sbb
inc
dec
add
data16
les
push
adc
testl
imul
mov
inc
lock
sub
xor
mov
pushf
pushf
in
and
mov
gs
imul
mov
shlb
shll
ficomps
popa
mov
std
addr16
and
adc
gs
jmp
push
into
sbb
inc
int
sub
clc
xchg
pop
imul
sbb
jmp
movhps
sbb
and
nop
dec
in
cmp
mov
addb
daa
and
push
mov
cmpl
arpl
pop
xor
popa
movsb
push
push
sbb
ss
inc
sbb
fildl
fcomi
loope
mov
and
lods
aam
lock
loopne
push
dec
sbb
or
gs
xor
fstl
mov
jle
scas
add
and
lods
sbb
jae
inc
cld
xlat
jno
clc
and
lds
add
mov
mov
mov
lret
xor
in
mov
inc
mov
inc
pop
leave
outsb
scas
adc
and
mov
mov
mov
cmp
popa
pop
and
dec
mov
sub
addr16
dec
inc
rcrl
int
imul
cmp
dec
cmpsb
jmp
xlat
mov
lahf
lcall
and
sbb
ss
cmp
out
insl
inc
cmp
inc
leave
adc
push
lret
or
mov
rcrl
xchg
jb
insb
add
dec
push
in
dec
push
and
arpl
jnp
xchg
xlat
dec
mov
cmp
mov
sbb
ror
outsl
jecxz
mov
dec
add
mov
xor
cmp
jbe
popa
addr16
sub
mov
xchg
jecxz
sahf
in
in
leave
iret
xor
ja
cld
jo
pop
insl
gs
cmp
sub
mov
and
xchg
shrb
push
sub
cli
ljmp
mov
imul
loopne
jb
sub
or
lods
shrl
push
pushf
pop
sbb
xor
fwait
inc
and
clc
mov
outsb
and
repnz
push
bound
in
xchg
icebp
jmp
stos
sbb
lret
mov
mov
jns
cmpsb
aam
add
call
test
int3
pop
dec
push
mov
outsb
cmpsl
and
mov
enter
xchg
push
mov
bound
mov
lods
roll
xchg
mov
push
rcrb
addr16
sub
pop
mov
loopne
out
fsubrs
lock
outsb
rolb
subl
fistpl
loop
adc
dec
jp
mul
lret
pop
rolb
nop
ljmp
lods
jg
mov
imul
ss
xchg
sbb
test
and
sbb
pop
fcmovnbe
and
dec
sub
out
lcall
movsl
and
pop
push
sahf
push
das
int3
rcrb
and
mov
dec
or
subl
fsubrl
inc
aas
pop
in
xchg
xor
nop
jnp
jo
sti
outsb
out
dec
movsl
jecxz
or
filds
sub
jecxz
sub
mov
movsl
or
movsb
push
or
cmp
repnz
sub
pop
daa
mov
mov
testl
ds
or
test
psubw
fldcw
jo
adc
push
pop
and
lret
in
dec
sbb
mov
out
inc
cmpsl
mov
pop
or
imul
pusha
jae
push
in
test
mov
dec
in
les
inc
outsb
adc
mov
push
stc
lods
daa
dec
adc
mov
mov
orb
and
adc
test
test
fidivs
int
addb
es
sarl
sahf
mov
add
push
or
fldt
xor
int3
jae
jno
scas
jb
gs
outsl
aaa
aad
in
xchg
cs
xor
mov
mov
les
in
imul
dec
mov
or
xchg
mov
xor
xor
fsts
sub
mov
mov
ds
inc
into
popa
push
inc
inc
mov
push
mov
in
sbb
mov
hlt
jp
mov
repz
aam
ficomps
jge
dec
mov
inc
adc
mov
jl
xorb
icebp
movsl
add
xor
mov
xchg
xchg
fsub
lcall
pop
cwtl
outsl
insl
sub
lgs
add
mov
scas
or
bound
xor
ret
jmp
into
ret
xchg
pop
cld
mov
pop
pop
push
cmp
and
dec
shrb
push
mov
dec
pop
pusha
outsl
aad
or
lock
out
inc
xchg
add
cmp
lods
scas
adc
or
test
sbb
in
cmp
cmpsb
lret
out
cmp
push
mov
test
xlat
cmp
add
jl
sbb
mov
inc
jp
dec
outsb
rcrl
push
outsb
je
jns
imul
loop
movsb
cld
dec
mov
sbb
fcomps
inc
nop
into
popa
push
imul
mov
inc
mov
jl
je
rol
pop
or
lea
cmp
sbb
mov
pop
push
adc
mov
dec
jno
clc
mov
imul
xlat
ror
dec
pop
arpl
rcl
dec
in
jbe
popf
js
jae
clc
es
mov
inc
je
dec
jmp
jns
out
fbstp
in
fwait
xchg
and
mov
mov
push
or
fcmovb
cmp
addb
adc
lret
and
pop
dec
inc
inc
sbb
cmpsl
outsb
jp
jno
adc
imul
or
cld
popf
xlat
inc
and
hlt
xchg
scas
xor
adc
push
dec
cwtl
aam
cmc
addl
and
fstpt
mov
mov
aaa
int
aad
pop
mov
cmp
jbe
js
cmp
ret
sahf
popa
jg
or
mov
icebp
add
decl
fwait
stos
das
sbb
aam
inc
leave
mov
sub
clc
add
pop
inc
push
dec
inc
lock
mov
fstp
je
adc
clc
scas
sahf
jbe
mov
push
sbbl
out
data16
iret
mov
negl
arpl
fildl
movsb
into
fists
movsl
cwtl
push
mov
loop
xor
jo
and
dec
scas
ret
xor
into
push
jmp
mov
adc
inc
adc
jmp
mov
subb
test
inc
stos
ljmp
push
inc
pop
into
mov
fisubrl
adc
sbb
test
mov
cmp
cmp
fdiv
xchg
scas
cmp
and
aaa
repnz
xor
jae
lahf
decb
xchg
push
bound
push
cwtl
push
jno
js
push
sarb
imul
sbb
jmp
dec
js
rorb
xor
mov
ja
push
xchg
ja
nop
int
shll
fwait
enter
xchg
adc
adc
xchg
mov
fsubs
dec
or
push
cmp
sbb
ja
or
inc
pop
and
pop
in
movsl
xchg
addr16
lea
out
ljmp
stos
test
jp
pushf
push
test
lahf
fs
fldenv
not
cmp
popl
or
and
in
pop
nop
hlt
addb
scas
jno
aam
lar
movsb
aam
pop
jmp
orl
daa
dec
lods
xchg
cmp
inc
test
ljmp
scas
mov
adcb
mov
mov
aas
das
inc
outsl
leave
gs
ja
xchg
lea
ja
ljmp
cmc
test
in
mov
in
pop
out
xchg
xorb
inc
repz
inc
nop
lahf
rcll
push
xchg
loopne
pop
mov
cmp
push
inc
jb
les
mov
mov
ss
xor
mov
xchg
scas
or
fiaddl
pop
lret
push
xchg
jb
jno
xchg
test
add
mov
cmp
repnz
scas
bswap
push
in
scas
or
and
stos
hlt
jge
stos
dec
push
scas
fwait
or
mov
xchg
adc
loop
xor
push
sub
std
cmc
dec
pusha
inc
xchg
xor
sbb
push
mov
cmp
cmp
and
push
pop
inc
inc
mov
and
mov
out
xchg
imul
lock
cwtl
xor
fadds
aas
and
jecxz
out
sbb
pop
ret
xor
jb
and
fsubs
pop
loopne
icebp
add
int3
iret
test
mov
jecxz
cmc
popa
add
ss
idivl
jle
out
pop
mov
test
cli
xor
mov
lods
in
cmp
cmp
or
and
or
mov
andb
mov
inc
decl
sbb
jne
xchg
mov
dec
arpl
mov
std
jg
xor
lahf
scas
pop
insb
test
hlt
shr
mov
sub
mov
insl
cwtl
mov
or
sti
and
mov
aad
or
adc
sbb
push
adc
fsub
int3
dec
in
push
push
push
xlat
adc
add
clc
mov
insl
repnz
rcr
sti
sbb
pop
or
xor
pushf
push
fmull
fistpl
icebp
or
mov
outsb
add
loopne,pt
loopne
data16
lret
dec
mov
hlt
int3
loope
xor
jp
adc
movsl
mov
cmpsb
mov
loop
sti
cmp
and
cmpsl
iret
adc
inc
lock
xlat
pushf
insb
push
pop
mov
inc
sbbb
loop
insl
lock
sbb
cli
sbb
test
cld
shl
sarb
scas
sub
je
lret
sbb
add
xchg
mov
mov
aas
sub
leave
mov
or
dec
imul
inc
xor
adc
fs
mov
or
jne
arpl
push
cwtl
mov
test
sbb
pop
or
insl
jno
mov
icebp
popf
in
fbstp
shlb
xchg
mov
pop
adc
push
pop
fdivs
mov
in
xor
int3
and
lahf
sbb
pop
xor
imull
setne
leave
popa
mov
mov
lcall
cmp
adc
push
cs
xchg
cmp
xchg
xchg
inc
cli
stos
aaa
mov
jmp
sub
jp
mov
pop
and
and
popa
fs
mov
andl
push
mov
inc
repnz
and
and
inc
jl
sbb
mov
pop
adc
aad
mov
incb
arpl
push
sub
mov
fnstsw
mov
cmp
add
inc
in
lret
test
sbb
mov
aas
mov
or
ja
jmp
xlat
outsl
test
lret
bound
mov
std
icebp
cmp
aaa
lret
shll
inc
xor
sbb
adc
out
add
adc
scas
pop
dec
mov
mov
lods
cld
pushl
jbe
cmp
les
cmp
adc
lahf
adc
lret
and
cmpsb
scas
cmpsb
mov
daa
mov
lret
xor
mov
fistpl
mov
push
int
repnz
inc
sub
push
cmp
xor
rcll
or
in
fldl
push
adc
repnz
mov
xchg
lods
dec
dec
aas
ffreep
divb
in
push
push
push
daa
fidivrl
add
or
inc
fstpl
sbb
enter
adc
int3
scas
push
popa
imul
pop
mov
add
fbld
ds
dec
pushf
lret
pop
adc
lret
push
jns
cmp
xchg
push
and
mov
jae
lret
lds
xchg
cmp
or
cld
fwait
jbe
mov
negb
sbb
insb
test
int3
jne
add
inc
pop
jp
dec
fstp
shlb
lret
addr16
inc
aad
cs
push
sub
mov
pop
xor
pop
pop
fcomp
rcrb
mov
notl
or
test
push
sbb
xchg
sti
jle
push
out
xchg
fs
insb
jecxz
mov
cmp
test
rcrb
imul
pop
cmp
xchg
lret
test
gs
sub
jo
shrl
mov
test
pop
push
or
sbb
test
inc
jmp
adc
shrb
cmc
inc
adc
add
jecxz
dec
nop
add
aad
xor
mov
sub
add
das
push
jnp
data16
mov
mov
push
or
out
adc
sub
sahf
push
jnp
jns
jle
dec
xlat
aaa
jbe
int3
jecxz
leave
mov
cmp
insl
push
mov
lock
mov
mov
xchg
push
test
int3
and
rolb
jl
xlat
lds
push
xor
add
shr
popa
push
iret
jge
ret
sbb
aad
pop
sub
jae
mov
movsl
rol
insl
lock
mov
sub
pop
ror
mov
rorb
adc
int
mov
jb
mov
dec
sub
inc
and
adc
xor
cmpsb
out
in
mov
inc
imul
xchg
pop
in
jmp
fisttpl
push
loop
pop
inc
sahf
pop
sahf
jge
mov
and
fadd
sbb
jecxz
stos
mov
imul
lods
mov
inc
jae
fdivs
inc
sbb
cmp
dec
pop
insb
scas
sbb
rcl
mov
pop
pop
dec
jne
mov
lret
cmp
xor
cmc
bound
pusha
fwait
imul
loopne
xchg
popf
push
cmp
repz
xchg
lret
test
rorl
jmp
enter
lods
sbb
sub
push
pop
pusha
mov
dec
sub
xor
pusha
outsb
sub
xor
incb
xchg
jns
sub
sti
lods
call
into
sbb
dec
std
xchg
aad
or
and
fdivrl
das
adcl
dec
into
das
out
rorl
insb
cs
bound
sub
mov
pop
and
mov
lret
ds
loop
pop
mov
mov
test
and
xchg
bound
lds
jge
lahf
cltd
sbb
fs
test
sub
stos
and
mov
lahf
lock
movl
fsubrl
jmp
in
mov
stc
add
mov
data16
or
and
inc
jl
xchg
mov
xor
xchg
add
pop
std
or
rolb
and
les
or
vmovshdup
add
push
xor
xchg
lret
or
test
sub
pushf
lods
jmp
cmpsl
dec
ljmp
sub
xchg
jle
push
pusha
lcall
outsb
sbb
jne
fmull
in
xor
icebp
push
inc
insl
inc
test
mov
stos
inc
sub
jno
out
test
imul
test
sbb
adc
fmull
fldcw
mov
sbb
and
push
pop
push
jge
sbb
repz
xchg
fs
mov
cld
push
daa
pop
scas
into
ljmp
dec
push
in
mov
aas
inc
cmpb
xor
fs
inc
cld
jb
or
loope
das
fstpt
and
sbb
leave
out
mov
mov
jb
jno
xchg
cvtdq2ps
mov
sub
fsubrs
push
adc
pop
scas
push
idivb
mov
jb
sbb
jne
adc
pushf
fisttpll
bound
cmpl
jecxz
lds
fadd
aam
pop
adc
aaa
fsubrs
insb
test
test
es
add
mov
or
mov
jp
aad
push
scas
cwtl
and
fistpll
das
jmp
lahf
inc
adc
loope
shrb
lret
jmp
push
mov
fdivrs
cmp
inc
push
push
inc
xlat
add
jg
inc
xchg
adc
test
sbb
push
or
ss
out
shrb
ficomps
inc
mov
mov
pop
fs
lds
rcll
or
lea
and
ljmp
data16
jo
xorps
aas
aam
fsubrs
flds
xchg
push
jns
je
out
xor
adc
adc
sbb
icebp
cmp
fidivs
xchg
push
sbb
mov
cmc
jo
mov
test
cli
insl
push
mov
mov
sbb
sbb
cmp
stos
lret
inc
push
sti
out
xor
ficoml
jb
loop
loope
lds
out
push
imul
subb
push
out
test
xchg
add
push
xchg
push
mov
into
jns
ljmp
cmpsl
fwait
lcall
cmpsb
cmpsl
lock
test
inc
sahf
mov
sbb
popf
xchg
insb
and
lahf
xchg
sbb
push
xchg
cmp
xchg
inc
mov
pop
cmp
sbb
in
aaa
lret
loop
jmp
cmp
and
pslld
xchg
cmpsb
cli
and
mov
jmp
arpl
movsb
xchg
inc
outsl
sbb
popa
shll
pusha
jmp
repz
push
rorb
push
mov
cmpsl
jbe
pop
fcoms
int3
adc
mov
iret
mov
jb
int3
je
xor
lods
mov
in
je
and
fucomi
int
xlat
dec
out
and
sbb
sbb
xchg
and
xchg
jno
andb
mov
sub
cmc
mov
mov
adc
xchg
mov
fnstcw
cld
push
test
sub
jnp
mov
sbb
test
dec
pop
mov
cmpsb
int
sub
bound
mov
jbe
sub
sub
push
cmp
ds
pop
push
or
inc
mov
and
loope
dec
lret
mov
and
push
jno
sti
sub
inc
xor
bound
cs
ret
mov
outsb
in
add
xchg
and
addr16
xor
dec
enter
cmp
pop
in
jne
push
scas
mov
inc
addr16
int3
fisttps
subl
xor
cwtl
ret
add
mov
test
popf
xor
xchg
jnp
ficompl
mov
fs
jo
lods
push
pop
psllw
mov
mov
xchg
mov
ret
test
std
xor
push
addb
lods
out
lods
cmp
sbb
dec
dec
xchg
push
dec
stos
mov
adc
in
mov
mov
cmc
mov
mov
jns
stos
mov
stc
bound
jmp
cmp
ljmp
inc
mov
adc
cmp
das
pop
shlb
mov
push
icebp
stos
mov
rolb
stos
call
pop
cld
stc
and
je
testb
mov
bound
sbb
sbb
mov
fs
mov
push
inc
cwtl
sahf
cltd
jg
les
jp
sub
stos
inc
adc
imul
aaa
sub
shlb
push
sbb
xchg
sbb
test
popf
pusha
fdivrs
pop
adc
gs
mov
inc
xlat
fwait
adc
popf
adc
icebp
stos
mov
les
xor
mov
stc
shl
iret
xor
hlt
ljmp
lods
pop
mov
mov
mov
mov
and
pop
xor
lods
adc
je
or
icebp
mov
in
mov
rolb
popl
jle
icebp
inc
cld
fisubrl
lods
sti
pop
xchg
rolb
mov
test
xor
push
ja
outsb
addr16
xor
pop
or
hlt
push
mov
mov
cmp
dec
jl
mov
sbb
clc
adc
mov
adc
or
insb
aam
push
jns
xchg
pusha
xor
xor
std
pop
pop
lock
repz
sbb
mov
add
scas
adc
scas
out
outsb
cmpsb
ljmp
test
inc
loope
mov
shl
pushf
push
jbe
in
js
movsb
sub
imul
sbb
or
push
xchg
inc
scas
adc
sub
sbb
xchg
cmp
pusha
imul
push
out
into
icebp
jecxz
lret
mov
xchg
mov
lcall
dec
je
daa
push
sarl
adc
das
cmpl
repz
rcl
std
je
les
mov
add
cli
test
sarb
cmp
divl
das
notl
sub
ret
mov
ds
or
dec
incb
and
nop
icebp
ror
call
adc
mov
out
sbb
addr16
mov
push
iret
pop
jge
add
cld
lds
lret
push
xchg
adc
jl
in
push
lret
jmp
imull
pushf
dec
shrl
scas
mov
jecxz
mov
arpl
mov
dec
jmp
add
mov
sub
lock
gs
addr16
mov
stc
xchg
sub
xchg
add
int
popl
jne
das
dec
sbb
lods
cmp
fs
iret
inc
add
inc
adc
add
or
pop
xor
enter
xchg
mov
mov
les
cli
sub
mov
ret
cmpsl
scas
jmp
mov
xor
mov
adc
pushf
mov
push
or
cmovnp
lods
call
mov
stos
faddl
mov
cli
repnz
rorb
icebp
sub
out
cmp
cld
call
push
xor
mov
pop
xchg
outsl
sub
and
lock
inc
inc
das
int3
sbb
dec
jns
adc
dec
xlat
es
aas
lret
imulb
jp
loope
adc
jmp
cmp
pop
pop
xor
sub
cli
popf
aam
sub
shlb
mov
fs
mov
push
pop
addb
cmpsl
rcrl
pop
mov
xor
mov
repz
mov
setbe
jp
fstpl
popf
rorl
movsb
mov
popa
lret
fs
xor
stos
lea
or
pop
scas
lock
push
jp
pop
or
push
mov
aaa
dec
jmp
dec
adc
add
or
sub
and
sahf
ret
in
sub
mov
inc
add
adc
jb
out
push
das
test
xlat
stc
mov
stc
sarl
movsl
push
out
mov
movsb
flds
data16
jnp
add
movsb
mov
adc
jns
push
and
add
sbb
test
jo
xor
clc
dec
pop
test
adc
adc
push
outsl
popf
icebp
add
mov
rcr
lock
dec
inc
ds
mov
lret
lds
jne
mov
xor
aas
movsl
cltd
fnstsw
pusha
dec
dec
xor
lods
imul
jo
ret
inc
and
gs
and
insb
pop
dec
adc
leave
into
pop
mov
pop
inc
ret
imull
test
das
and
mov
cld
lahf
dec
fsubp
je
xchg
and
xor
stos
leave
in
mov
xlat
dec
xchg
shlb
xchg
insb
lods
enter
addr16
lods
or
call
fs
shll
or
jmp
or
ja
mov
popa
dec
sbb
bound
add
repz
movsl
sub
negl
stos
cwtl
sahf
outsb
mov
mov
sti
push
aad
lret
popf
xor
popf
inc
mov
pop
mov
sub
adc
pop
jbe
sbb
mov
das
adc
cmp
push
push
incb
out
rcr
std
xor
mov
add
jge
jg
addr16
imul
fldcw
mov
mov
xor
add
and
mov
xor
push
xchg
mov
sbb
inc
xor
and
aad
aaa
sub
scas
pop
push
jbe
stos
imul
cmpsl
lock
ficomps
xor
mov
mov
mov
insl
negb
scas
dec
mov
ret
xchg
mov
pop
in
xor
out
fdivrp
dec
and
leave
popa
insb
inc
sbb
and
scas
and
fstl
test
or
cmp
sbb
push
cmc
lcall
loop
lcall
push
jle
data16
mov
dec
push
inc
mov
out
inc
das
movsb
push
loopne
sbb
sahf
icebp
fnstcw
inc
push
lock
stos
and
mov
dec
mov
out
add
jmp
cmp
fisttps
and
rclb
insl
pop
xor
lret
push
test
inc
dec
or
rcrl
or
sbb
mov
into
pop
test
dec
hlt
jbe
pop
or
shrb
cmp
and
and
dec
ret
insl
sbb
leave
es
inc
mov
lea
pop
stc
lahf
jl
fs
push
push
adcl
movd
inc
xor
mov
pop
add
push
mov
cli
adc
push
jge
dec
push
jp
repz
add
pop
dec
mov
mov
in
popa
pop
cmpsl
aas
xchg
lods
xor
and
adc
sbb
xor
aaa
jae
mov
out
dec
inc
cmp
jbe
iret
stos
aad
dec
mov
lods
xchg
std
ljmp
push
jp
ljmp
out
das
out
xchg
pop
lods
mov
stc
xchg
test
cmc
jge
push
push
inc
inc
aas
lahf
adc
cmp
ja
pop
pop
test
js
aad
sub
rorb
fucomip
sub
xor
pushf
jne
sub
int
xor
lock
adc
jmp
iret
jl
jo
stos
adc
dec
jp
mov
stos
adc
repnz
aaa
pop
push
sub
imulb
mov
xor
jbe
dec
repz
sbb
es
mov
ret
vdivss
xchg
or
ret
xor
and
dec
xchg
adc
mov
xchg
test
arpl
scas
push
hlt
fwait
loopne
cmp
push
in
sub
orl
out
dec
sbb
lods
jge
mov
cltd
rcll
pop
stos
outsb
subl
jno
sub
inc
shll
test
outsl
cmp
sbb
jae
movsb
mov
sub
clc
inc
jnp
sub
mov
or
sub
dec
popf
fsubs
stc
jmp
nop
dec
mul
pusha
inc
aam
rcll
inc
in
sbb
dec
dec
outsb
adc
mov
je
rcrl
bound
ret
mov
add
js
xor
fwait
cmpsb
lods
mov
lods
cmpsb
inc
mov
mov
xchg
lock
mov
xchg
inc
pop
addr16
or
mov
jne
addl
aad
cmpsb
faddl
and
xchg
mov
mov
push
dec
jp
shlb
jmp
fs
inc
adc
push
push
cmpl
out
sub
mov
dec
nop
movsb
or
ret
leave
subb
cmpsl
std
push
data16
scas
sub
dec
inc
scas
dec
mov
mov
loopne
mov
popa
gs
testl
jne
ret
xlat
out
imul
mov
test
test
lret
sbb
fidivrs
sbb
pushf
stc
mov
nop
xor
imul
sub
cmp
in
lds
arpl
aas
inc
sub
loope
add
mov
push
loopne
adc
aam
inc
mov
shrl
notl
sbb
popf
sub
or
and
push
jbe
cmpsl
dec
stc
jo
pop
outsb
inc
adc
rolb
push
adc
pop
inc
push
xor
out
push
les
and
jecxz
ljmp
shll
inc
stc
cmp
pop
ret
pop
mov
int3
dec
mov
imul
fistps
jb
inc
dec
pop
push
adc
sbb
sub
push
icebp
adc
inc
adc
data16
pop
mov
or
cmp
movsb
xchg
lea
mov
arpl
fimuls
js
mov
cli
cmpsb
mov
and
mov
push
mov
scas
aaa
and
mov
xor
imul
mov
mov
mov
add
push
pop
fs
add
stc
adc
pop
jp
mov
je
mov
ss
into
or
inc
dec
iret
out
femms
ljmp
out
sbb
pop
sbb
in
js
das
scas
lahf
jge
or
ja
leave
pop
push
incl
sarl
pop
sahf
loop
cli
xor
orl
mov
repz
cmp
scas
dec
je
popa
pop
loopne
jp
mov
mov
js
dec
fbld
mov
mov
jno,pt
add
fwait
push
push
mov
push
xchg
in
mov
popa
cltd
ss
sbb
xchg
mov
pop
lods
inc
pop
icebp
sbb
sti
outsb
add
in
pop
fucomip
movsl
sub
stos
sbb
jne
jbe
lods
xchg
dec
test
adc
std
movb
inc
adc
and
pop
jge
shlb
scas
sahf
mov
sbb
lods
cli
mov
dec
inc
push
mov
add
push
jg
ds
shl
insl
push
sub
inc
in
mov
neg
push
sbb
idivl
cmp
lret
out
ss
mov
pop
jno
inc
push
adc
cwtl
sti
pop
jb
mov
test
aaa
xor
xchg
ss
inc
cmp
or
sub
mov
aas
mov
push
sti
test
push
dec
dec
sahf
sbbl
push
imul
adc
push
cmpsl
fcoms
mov
fld
inc
push
xchg
xorb
sub
enter
repnz
mov
adc
fucomp
mov
in
scas
jbe
lods
mov
lods
in
sbb
addr16
ficoms
add
insl
sub
rorb
pusha
push
frstor
jne
ds
jle
mov
xor
mull
inc
fs
pop
loope
fs
ud1
pop
jo
arpl
sahf
pop
inc
cltd
ret
fmuls
mov
sub
test
fmuls
cmp
xlat
sbbw
ret
pushf
mov
sarl
int3
outsl
movsb
das
adc
mov
jbe
cmc
outsl
pop
mov
push
aaa
lahf
cli
dec
aas
test
out
stos
arpl
jo
pop
cld
push
inc
leave
jp
test
out
sub
cwtl
adcl
xchg
repz
int
movsb
gs
daa
pop
sbb
jge
mov
icebp
xor
mov
push
cmp
cmc
jge
push
xor
aaa
inc
arpl
lret
daa
shl
rol
and
sub
lcall
add
cmpsl
outsl
mov
int
repnz
jp
test
incb
push
fildl
pusha
xchg
scas
rclb
fisubrs
shrl
pop
mov
roll
jp
dec
push
mov
sti
or
fs
ds
leave
ss
mov
mov
cli
imul
test
std
cwtl
dec
xchg
adc
and
fst
int
in
add
xchg
ret
nop
pop
fwait
mov
or
cmp
mov
cmp
sbb
or
and
hlt
mov
jno
push
sahf
push
frstor
push
inc
sar
xchg
ja
or
lock
jne
sahf
mov
xor
pop
or
test
scas
scas
cmp
addr16
sub
pop
cli
sub
out
sbb
jmp
lock
add
pop
pushf
mov
fnstsw
push
mov
sub
dec
ficompl
fwait
cmp
fidivrl
adc
mov
cs
js
repnz
xchg
adc
pop
push
xor
xor
cmpsb
push
not
aad
insl
mov
ret
cmp
shr
lret
or
test
leavew
xchg
and
or
fs
aam
and
cmp
lret
push
scas
sub
xchg
loope
push
inc
imul
sub
add
mov
sub
shlb
sbb
sbb
mov
rdpmc
cmp
testl
les
sti
jbe
pop
decl
sub
add
cwtl
rcrb
ret
dec
cmp
fdivrs
popa
or
sahf
shll
xor
or
jp
cmpsb
adc
dec
lea
data16
aad
inc
inc
decb
inc
mov
sbb
into
mov
jl
sbb
push
push
sarb
and
loope
xor
subb
inc
xor
and
int3
repz
andl
mov
mov
mov
aaa
sub
sbb
mov
mov
lds
xchg
rol
and
push
jecxz
push
pop
in
mov
jecxz
lahf
sub
cltd
pop
fistpl
pop
adc
movsb
inc
in
cmp
stc
repnz
les
sub
inc
fidivrs
jb
xor
mov
push
movsb
imul
clc
inc
ret
cs
mov
sbb
imul
popf
ljmp
add
dec
nop
and
and
cld
xchg
shl
push
lods
xchg
loopne
gs
in
cmp
jge
jg
sbb
fdivrs
shl
sub
into
ret
aam
jne
shlb
incb
add
pop
popf
js
fs
pop
outsb
push
mov
sbb
sbb
inc
push
lret
in
enter
ljmp
xchg
mov
sub
and
xlat
icebp
sbb
aad
pop
jb
call
lahf
psubq
mov
sti
cmp
out
mov
jo
cmp
push
adc
mov
rolb
movsl
and
or
int3
sbb
mov
arpl
aas
dec
dec
cli
xor
insb
jne
mov
xchg
mov
movsb
pop
xchg
in
rcl
pop
push
mov
sbb
pop
jmp
mov
arpl
xchg
mov
adc
sahf
movsb
into
out
ret
movsb
bound
sbb
imul
jge
outsb
iret
and
fldenv
xor
sarl
adc
pop
cmp
cld
adc
cmp
in
lret
test
jg
add
pushf
out
xor
gs
or
clc
adc
movd
cmp
mov
scas
cmpl
ret
xchg
mov
jmp
jno
insb
shll
insl
sbb
sbb
nop
cli
out
pop
fstpl
adc
call
out
ret
aas
ret
jnp
sub
push
aaa
pusha
mov
cmpsl
mov
jbe
sub
cmp
cmp
mov
mov
pmuludq
cmp
and
push
test
mov
pop
cltd
pop
daa
mov
aas
dec
adc
mov
pop
call
testl
pop
xchg
fdivrs
insb
cmp
dec
outsb
std
mov
das
call
or
out
clc
jmp
adc
sbb
hlt
movsl
test
mov
cmp
adc
dec
mov
jns
mov
pop
shrb
sti
call
mov
xor
rcrb
push
pusha
jnp
xor
cs
es
iret
fidivrs
addr16
std
xchg
or
das
gs
in
shrl
stos
mov
or
pop
mov
sub
sub
out
mov
add
ds
sbb
or
outsl
pop
add
or
mov
push
pop
pop
push
ficomps
pop
xchg
call
aas
inc
stc
ljmp
dec
push
pushl
aad
push
int
clc
xchg
enter
in
pop
dec
mov
lds
xlat
icebp
xchg
movsb
cltd
bound
xorl
lret
lock
fistps
roll
sub
push
mov
lds
pop
and
stc
mov
out
jmp
push
jne
jns
cli
add
mov
inc
imul
cli
fcmovne
int
idivb
mov
aam
leave
pop
xlat
sub
jno
mov
push
and
xchg
fnstcw
daa
mov
sub
cmp
mov
rcll
ljmp
test
outsb
test
popf
iret
sbb
mov
pop
and
cmpsl
lods
addr16
push
pusha
fidivrl
rcrb
mov
mov
inc
sbb
movsb
mov
sbb
bound
xlat
nop
or
fstpl
rcl
mov
adc
in
lock
push
loopne
aad
sbb
popa
cmp
sar
xchg
xor
mov
push
rcll
mov
jne
shr
shrl
jb
cmc
mov
sub
loope
mov
aaa
xchg
mov
pop
aad
out
push
das
push
andl
cmc
lea
and
aam
push
call
imul
jmp
pop
mov
hlt
add
mov
in
cltd
mov
and
divb
push
sbb
cwtl
cmpsl
xchg
pushf
xor
dec
mov
aad
add
ds
nop
hlt
in
adc
sbb
out
mov
js
cmpsb
outsl
mov
aas
pop
outsb
mov
cli
lcall
push
mov
lahf
mov
addl
xor
inc
call
mov
and
pop
rorb
cwtl
jmp
or
lahf
stos
inc
imul
popf
push
jp
sbb
mov
inc
xchg
sbb
mov
aaa
fidivrs
push
dec
mov
jecxz
in
test
popf
movsl
cld
stc
das
lods
loop
sbb
test
das
out
adc
xchg
jmp
jnp
push
mov
rcrb
jecxz
xlat
sub
mov
mov
mov
cmp
mov
adc
ror
and
popf
xor
cmp
mov
aas
in
jae
xor
sbb
daa
inc
sub
push
push
push
adc
lds
dec
sub
in
or
mov
xor
out
push
mov
mov
push
jg
pop
cwtl
add
push
cwtl
xor
test
inc
xchg
fsubrs
push
mov
ljmp
xor
arpl
pmaddwd
subb
xor
sub
cwtl
push
jg
push
paddq
mov
addr16
rol
int3
mov
jecxz
imul
ds
sub
push
mov
pop
out
in
cmc
mov
lahf
fcmovbe
pusha
cmp
icebp
mov
cmp
shrl
and
inc
cmp
das
out
icebp
jno
test
jmp
dec
or
dec
inc
adc
jns
adc
loop
pop
pop
mov
sub
inc
inc
or
pop
mov
es
cmpb
pop
xor
mov
aam
insb
adc
popa
fwait
mov
or
popf
xor
fcoml
dec
or
mov
xlat
mov
pop
scas
jg
and
xor
div
xor
or
sub
bound
test
push
insl
lods
sbb
xchg
movsl
mov
and
add
and
lds
insb
cld
adc
pop
in
jb
sahf
pushl
orl
jns
scas
xor
leave
scas
sbb
fwait
adc
add
ds
push
jl
out
bound
mov
xor
add
loope
jmp
xor
mov
mov
push
fnsave
mov
mov
push
cli
daa
xor
std
adc
push
pop
and
push
arpl
mov
push
dec
hlt
push
mov
mov
jns
pop
jbe
movsb
or
cli
dec
mov
and
sub
pop
enter
jae
ss
pop
inc
dec
fmull
adc
movsl
cmp
jmp
out
add
sub
test
or
imul
repz
test
mov
inc
sbb
ja
lods
fnsave
jns
inc
inc
dec
sbb
paddw
inc
loopne
and
popa
sub
mov
and
loope
je
out
pop
inc
xor
cmp
mov
mov
lret
mov
les
imul
rclb
sahf
into
sub
inc
fsubrs
inc
pop
inc
push
in
push
push
inc
adc
mov
dec
xchg
xor
xchg
ss
lahf
aad
push
imul
shr
cltd
push
mov
cmp
out
cmp
pop
out
ljmp
stc
mov
ret
lret
xor
push
xor
inc
jmp
cwtl
jg
cmpb
rcrl
pop
sbb
push
nop
mov
sbb
out
mov
sahf
sub
stc
ret
sbb
jmp
pop
xchg
aaa
and
adc
lds
test
jg
mov
sarl
add
shrl
lret
inc
dec
pop
in
in
add
jns
les
jne
jbe
jmp
jge
divl
call
shll
mov
jnp
fdivr
ret
ljmp
push
push
ficompl
test
clc
das
jle
sub
jbe
and
pushf
add
push
pop
sbb
pop
movsb
lret
outsl
cmp
pop
lea
sti
pop
movsl
add
push
mov
mov
xchg
rcrw
sbb
push
jmp
test
dec
cwtl
pop
push
fisubl
xchg
xor
add
lods
orb
lret
pop
jl
rolb
enter
mov
cmpsb
fsts
lods
mov
movsb
xchg
sub
xchg
cli
pusha
loop
pop
pop
and
mov
paddusb
xlat
int3
fsubr
out
mov
ret
gs
dec
popf
js
pusha
das
mov
es
add
das
nop
inc
aaa
fisubrs
xchg
xchg
jne
sbb
out
pop
sub
cmp
and
xchg
pop
xchg
fwait
aas
arpl
xchg
xchg
sahf
jp
in
mov
sub
cmpsl
push
jae
test
stc
pop
imul
jne
movsb
sbb
in
mov
out
inc
lods
mov
xchg
int3
js
dec
mov
pop
xchg
int
sbb
push
sbb
ss
mov
popa
es
movsl
inc
jge
ret
sbb
mov
xchg
push
aas
outsb
ljmp
movsb
mov
mov
adc
push
jmp
dec
pop
push
or
jmp
mov
mov
cmp
pop
lret
xor
std
std
lea
push
pop
in
enter
hlt
mov
movsb
sahf
mov
dec
mov
add
cs
iret
push
add
cmp
xchg
call
int
inc
mov
cli
push
out
sbb
jnp
xchg
and
dec
mov
rolb
mov
or
mov
fwait
iret
daa
jl
aad
stos
sub
scas
movups
movsl
pushf
pop
xor
sbb
sbb
repz
ret
out
jle
outsl
sbb
adc
cwtl
push
dec
lock
sub
loope,pt
jg
dec
popa
loopne
pop
push
pop
sahf
dec
adc
or
push
scas
loop
sahf
dec
jne
aad
jns
in
lcall
popf
clc
fimull
enter
lock
sti
pop
inc
mov
pop
ror
mov
mov
xlat
aad
sub
sub
out
fcom
insl
lcall
in
lcall
inc
add
mov
jno
jmp
adc
pop
arpl
fs
out
icebp
xchg
push
adc
daa
jo
sti
pop
xchg
insl
xor
pop
repnz
push
jb
mov
xor
jp
iret
cmpps
pushw
mov
cli
and
out
mov
bswap
lods
sub
xor
clc
in
jecxz
push
lds
push
dec
jl
and
sahf
or
in
adc
inc
adc
sub
push
sbbb
sub
dec
aas
and
push
and
popf
decl
aam
xor
mov
jecxz
cmc
imul
and
xor
mov
nop
hlt
sub
pusha
jp
mov
pushf
movsl
xchg
lods
inc
icebp
insl
and
into
dec
mov
sbb
int
aad
icebp
pop
popf
jae
in
movsl
push
cltd
push
sbb
xor
inc
hlt
fwait
test
mov
loopne
cmp
pop
test
das
mov
and
mov
dec
mov
enter
cmp
mov
jo
jmp
and
and
add
insl
xor
std
fneni(8087
sti
cmc
push
lods
mov
mov
mov
std
in
jb
in
pop
das
cli
inc
jge
xor
pop
cmpb
mov
push
mov
pop
jp
add
sub
mov
mov
popf
mov
xchg
je
in
mov
scas
je
inc
mov
sub
lahf
into
dec
and
popf
sub
nop
bound
or
lods
and
dec
hlt
lods
mov
loop
outsb
pop
inc
dec
sub
ds
fsubrs
addr16
xor
gs
cmp
sbb
mov
adcl
or
inc
movl
push
xor
cltd
rorl
stos
icebp
test
jbe
push
test
sbb
push
mov
sbb
push
dec
cs
arpl
lahf
jb
mov
out
add
mov
adc
jae
add
adc
mov
xor
sub
push
cli
adc
sbb
pop
cwtl
inc
inc
pop
xlat
cli
idivb
pusha
push
aas
pop
fwait
xor
pop
pop
test
aam
stos
sahf
lret
fistps
out
pop
sub
cli
jmp
mov
popf
aaa
mov
fwait
je
in
int
and
imul
je
add
mov
aad
lcall
push
inc
or
repnz
sub
pop
inc
lcall
jns
mov
mov
jo
ja
fwait
or
mov
add
xor
xor
and
dec
inc
bound
jo
jb
movsl
lret
outsb
sub
adc
sub
sub
orl
mov
and
lret
and
mov
neg
xor
iret
dec
add
aaa
cmp
and
addr16
push
repz
jnp
pop
push
xchg
inc
test
test
es
jno
sti
and
enter
cmp
mov
lods
aas
jne
dec
scas
xchg
fstpl
out
cwtl
jnp
mov
push
adc
sbb
adc
xor
jle
push
add
pop
pop
in
mov
dec
fcmovnb
outsb
neg
arpl
push
andb
mov
sti
ret
enter
out
pop
mov
in
jnp
sub
push
adc
sbb
cmp
mov
lret
stos
lods
xchg
mov
mov
cmpsb
sub
mov
fs
or
jbe
cmpb
push
lret
sbb
jp
mov
cmc
jle
xchg
fnsave
aad
lods
or
mov
pop
js
das
andl
sub
arpl
lahf
adc
int
push
or
inc
jo
mov
rcrb
or
jecxz
fcomi
inc
adc
add
mov
out
add
lods
push
in
clc
jo
inc
bound
mov
sar
add
jo
inc
mov
dec
movq
or
movsb
xlat
jno
sub
sub
push
orl
mull
adc
xchg
push
outsb
loopne
sub
sub
push
loopne
mov
push
and
sbb
and
and
arpl
add
into
inc
cmp
sbb
addl
ret
clc
shlb
mov
inc
push
imul
cmpsl
fs
jbe
xor
cld
mov
mov
cltd
dec
loope
xchg
in
push
xor
mov
or
pushf
popa
andl
mov
bound
loope
mov
sti
jg
mov
push
dec
pop
cwtl
fadds
adc
pop
dec
cmpl
in
xor
add
enter
addb
cmp
loop
inc
mov
push
rcr
arpl
lahf
xchg
mov
rcrl
test
jp
pop
gs
out
leave
rolb
pop
xor
cmp
pusha
inc
je
xchg
je
aas
call
push
and
lds
movsb
jbe
rolb
sbb
inc
inc
push
mov
mov
mov
cmpsb
loope
ss
ljmp
sbb
push
arpl
sarb
mov
scas
xor
jbe
data16
in
mov
xchg
xor
and
movsb
and
xor
dec
arpl
mov
dec
add
test
ret
sub
xor
sbb
xlat
mov
fdivrs
or
jg
inc
out
call
xor
sbb
je
mov
orl
sub
cld
or
out
ljmp
mov
fstl
mov
xor
movsl
loope
cwtl
ret
cli
mov
test
dec
aaa
mov
sub
mov
add
lods
cmc
push
mov
push
and
jnp
scas
xor
adc
push
roll
xor
test
mov
dec
sbb
jp
xor
ja
scas
xor
jbe
fimull
sahf
divl
cmp
jle
mov
xor
insb
lcall
pop
rcrl
int
bound
in
subb
daa
xchg
dec
aad
cmp
inc
icebp
jne
sahf
sbb
inc
xor
aad
mov
cmpsb
sbb
jns
mov
xchg
aas
loopne
dec
imul
aaa
loop
scas
cmp
repnz
shrb
dec
leave
or
mov
add
jp
mov
ljmp
imul
imulb
inc
repnz
xchg
sbb
fistpl
jae
jo
popl
ss
rolb
mov
scas
arpl
shlb
jp
mov
lret
sbb
mov
jle
mov
fisttpl
sub
adc
arpl
addr16
pop
gs
imul
aad
pop
outsb
or
sbb
jb
mov
jl
int
pop
cmp
in
aam
pop
sub
add
mov
mov
mov
aaa
cld
icebp
push
fiaddl
je
cli
and
jp
adc
dec
mov
das
xchg
dec
push
push
push
cmp
sub
pop
stos
fildl
jnp
sahf
cmpsl
xlat
or
mov
adc
jne
cmpl
out
cmpsb
xchg
jmp
add
adc
cld
cmp
movsl
add
xor
clc
in
iret
lret
int
in
jnp
mov
lods
mov
sub
or
decl
or
pop
pop
add
movsb
adc
pop
cmpb
test
test
rol
add
addr16
inc
or
lods
sbb
xchg
xchg
push
int
xor
mov
push
stos
sbbb
mov
int
jae
pusha
nop
sbb
jecxz
scas
out
inc
movsb
ja
dec
loop
pop
lahf
jnp
jb
pop
pop
movb
mov
jl
roll
push
mov
testl
or
mov
scas
movl
into
rep
fistpl
jmp
lods
stos
push
pop
andb
pop
cltd
cmpsb
sahf
insl
icebp
jle
dec
jns
repnz
test
aas
lret
fsubs
cmp
inc
cs
mov
cmp
pop
mov
mov
fstpl
jl
xchg
test
jne
inc
xchg
cmp
icebp
icebp
push
dec
sahf
inc
dec
movsl
or
push
inc
popa
push
sbb
pop
mov
flds
imul
outsb
rcrl
imul
imul
cmp
mov
jge
jno
lahf
gs
xchg
mov
or
dec
dec
xor
cmp
add
xor
outsb
sub
sbb
add
inc
divl
jbe
jge
testb
xor
lods
testb
lahf
mulb
js
xchg
cs
mov
movsb
cmpsb
pop
rolb
add
pop
jnp
and
sub
inc
sbb
fildl
xchg
pop
out
and
sub
mov
jnp
pavgb
shll
adc
cmp
and
mov
fidivs
pop
cmp
inc
adc
inc
xchg
xor
ss
sbb
sbbl
sub
cmpsb
jp
adc
mov
inc
xor
xchg
push
add
loope
cmp
adc
les
insl
roll
or
and
mov
pop
cli
pop
cmp
sub
call
adc
mov
push
sbb
mov
stos
shlb
subb
pop
xchg
mov
xchg
mov
cwtl
push
push
in
popa
sahf
icebp
mov
mov
pop
rcrb
add
cld
loope
out
js
push
std
xor
push
mov
mov
ja
aam
aam
xor
in
or
in
and
es
pop
mov
mov
dec
pop
mov
ss
jp
add
jl
mov
out
and
pop
pop
ja
add
shll
ds
push
inc
out
cmp
inc
fsubs
xchg
lock
mov
lret
mov
mov
jno
mov
mov
data16
push
mov
or
jg
ret
aam
out
mov
data16
xor
sbb
mov
or
fdiv
cmp
popf
mov
xor
cli
popa
stos
add
pushf
pop
inc
and
add
sub
xchg
test
ds
mov
sbb
add
mov
hlt
mov
sbb
int3
repnz
es
fistpl
mov
sbb
lds
xchg
cmpsl
sub
pop
pop
cmp
lret
icebp
ljmp
lods
dec
xchg
and
mov
cmc
fmuls
int
push
mov
stos
sub
pop
dec
mov
stos
lock
jecxz
jg
out
mov
mov
insl
jno
push
mov
jge
pop
stos
xchg
hlt
imul
jae
stos
xchg
xchg
mov
je
jne
mov
add
dec
stos
and
jmp
enter
imul
pop
xlat
pop
aad
lahf
mov
test
test
xor
out
xchg
roll
mov
mov
into
push
addr16
sbb
xor
jbe
mov
push
out
add
insb
sahf
pop
add
repnz
push
repnz
fsubs
jns
in
loope
or
add
mov
stos
mov
or
lret
mov
out
or
ljmp
sbb
xor
xchg
je
jae
xchg
sbb
pop
xchg
mov
adc
into
push
scas
imul
cmp
or
inc
jne
jp
adc
aas
and
push
mov
jecxz
lea
fisubrl
insb
insl
sti
adc
xor
sbb
ret
sbb
jae
or
and
mov
xchg
sub
push
inc
popl
xchg
mov
pop
cmp
dec
pop
pop
sahf
jp
pop
adc
cmp
outsb
in
arpl
sub
or
scas
dec
int3
xchg
jl
out
leave
sub
jbe
lcall
iret
pop
cmp
sub
xchg
stos
push
xchg
test
and
push
xor
xchg
or
dec
cmp
popf
push
jmp
nop
sbb
cmp
pop
xor
adc
jle
jge
test
mov
cmp
mov
out
movsl
fcompl
mov
inc
push
dec
sbb
adc
shlb
cmp
adc
push
dec
aam
in
stos
or
imul
xchg
addr16
lods
std
dec
sbb
out
ret
add
aas
pop
ljmp
add
sbb
and
lret
xchg
or
mov
sbb
testb
push
mov
mov
les
mov
jno
call
mov
xor
loop
rclb
sub
inc
jecxz
loopne
test
scas
test
sub
mov
adc
or
push
cmp
inc
rclb
repz
fwait
dec
cli
mov
sbb
lahf
mov
xor
idivl
push
dec
sbb
mov
test
outsb
inc
push
pop
fptan
aam
pop
mov
mov
jno
mov
mov
lods
jbe
push
cmp
cs
or
repz
sbb
mov
dec
mov
push
and
dec
or
lret
jg
loop
into
push
pop
pop
mov
sbb
xorb
enter
xor
mov
repnz
rclb
testl
xor
insb
outsl
push
jmp
dec
xor
push
pushf
loopne
cwtl
repz
addr16
scas
fistps
aad
mov
jmp
pop
mov
xchg
xchg
push
jmp
xor
clc
mov
leave
bound
mov
pop
mov
inc
lahf
sbb
test
push
push
shll
psllq
mov
dec
dec
push
std
xlat
sub
dec
into
jae
outsl
inc
aad
mov
inc
mov
jno
cmpsl
jle
dec
stos
popf
mov
mov
adc
cmp
sub
ret
jno
loope
push
xor
jmp
bound
xor
mov
rcll
ret
mov
sub
in
in
jbe
rcll
ret
jmp
jge
jge
jp
out
dec
pop
mov
or
jecxz
mov
cli
pusha
or
fidivl
add
pop
jae
pop
inc
cmpsl
lea
jbe
fnstenv
mov
repz
fildl
xchg
mov
mov
dec
divb
imul
sub
out
mov
xor
add
pusha
clc
aas
mov
push
ja
dec
xor
movsl
sub
mov
inc
mov
fcmovne
cmp
xor
cmp
lds
enter
les
mov
outsb
shll
icebp
bound
mov
dec
xchg
outsb
mov
orb
loope
xchg
bound
cmc
xor
adc
cmpl
or
inc
inc
xchg
cmp
sub
cmpsl
adc
lods
push
aam
inc
and
stos
or
bound
test
ds
enter
push
mov
loope
dec
push
mov
xor
xor
ljmp
inc
int3
out
js
inc
in
inc
cmpsl
xchg
sbb
pop
repnz
inc
inc
push
fistpl
lock
push
in
mov
divl
push
in
andb
addb
movsl
push
inc
addb
xchg
pop
xor
ds
rolb
xchg
sub
adc
add
mov
mov
and
fldenv
xor
mov
rcrl
cmpsl
scas
mov
shlb
mov
adc
xchg
cmp
je
scas
pop
ret
pushf
push
mov
push
test
int
mov
pop
pop
lods
jbe
jp
cmc
sbb
hlt
stos
push
lret
fimull
rorl
cmp
pop
jo
xchg
scas
stc
mov
and
cmp
shll
inc
cli
gs
cmpsb
mov
ja
sbb
les
xchg
adc
test
xlat
mov
aaa
mov
push
shl
sub
leave
and
scas
sbb
inc
pop
add
cmp
cli
stc
movsl
ret
cmp
lcall
gs
fimull
xchg
fcmovbe
outsl
stos
push
imul
pushf
jge
test
icebp
cmpsl
in
lret
mov
and
jmp
sarl
iret
dec
mov
pop
xchg
mov
ret
popf
in
movb
fldenv
div
push
cmp
mov
icebp
addr16
mov
into
xchg
push
pop
fwait
jns
add
sub
aad
sub
cli
jmp
sti
rcrb
addr16
test
dec
inc
outsb
jbe
mov
xor
mov
lret
jecxz
ficoml
xchg
mov
enter
cmp
lds
cmpsb
jle
xchg
out
jl
aam
ljmp
or
outsl
mov
jp
cmp
dec
inc
and
mov
push
adcl
in
sub
mov
icebp
push
and
mov
movsl
in
jno
sbb
sarl
in
add
sbb
scas
bnd
scas
aas
fildl
xchg
add
orb
out
sub
push
xor
cmpsb
mov
jge
int
lods
imul
pop
rcrb
fsubl
js
mov
stos
into
outsb
call
movsb
xor
rcll
fdiv
fcoml
ja
cmp
mov
adc
inc
mov
pop
xchg
es
in
sar
lods
rcrb
fmull
repnz
lcall
sbb
mov
cmp
xchg
xchg
lret
sub
xor
leave
xchg
mov
mov
out
add
dec
and
mov
les
test
sbb
ljmp
and
outsl
test
mov
out
mov
sarl
loopne
sahf
jbe
add
adc
push
loop
xor
xor
cmp
adc
divl
mov
pop
push
jbe
dec
hlt
dec
pusha
inc
adc
fxch
pop
aaa
mov
xchg
xor
stc
inc
dec
and
jecxz
imul
call
mov
jge
pop
testl
insl
push
nop
mov
adc
push
ja
scas
outsl
cmp
pop
cwtl
test
and
add
mov
mov
cmp
mov
mov
shll
cmp
int3
pop
imul
or
call
nop
mov
mov
jmp
push
cmp
fsubr
rcll
mov
push
add
insb
jg
add
pop
stos
dec
dec
hlt
adc
leave
shrb
jnp
jmp
outsb
inc
fisubl
sbb
pop
inc
stos
mov
inc
mov
adc
scas
imul
mov
aas
lcall
stc
icebp
cmpsl
into
xor
ljmp
shll
inc
icebp
mov
sbb
mov
or
scas
fcomp
dec
mov
mov
mov
jmp
push
mov
popa
mov
xchg
aam
iret
lock
jg
jno
push
push
push
test
xor
rorb
mov
icebp
pop
sti
popf
lock
lea
sbb
lret
in
jmp
sbb
xchg
aam
xchg
and
cmpsl
pushf
push
xor
push
lcall
call
fnstcw
into
rcll
mov
inc
repnz
orb
scas
ja
pop
subb
clc
ja
decb
inc
in
iret
and
push
sub
fsubs
sti
dec
pop
dec
fdivr
xchg
fdiv
nop
pop
popl
insl
mov
cmp
fucomi
adc
inc
shll
das
mov
mov
cmpsb
test
push
cmpsl
adc
sub
jp
pop
jno
cwtl
sbb
adc
dec
xor
nop
xchg
fnstsw
test
pop
xchg
inc
fmull
jnp
xchg
cmpsb
lahf
popa
mov
and
xor
xchg
scas
daa
dec
sub
icebp
rcrb
mov
or
clc
xchg
out
pusha
mov
jb
mov
mov
fwait
sbb
push
sbb
fistps
and
fwait
and
scas
mov
nop
aaa
pop
mov
mov
cli
pop
cld
cmc
imul
pop
test
jo
sahf
das
lock
jo
inc
fstps
pop
jl
popa
dec
mov
pop
imul
aas
aad
add
out
fcom
inc
sub
rcl
and
fistpl
fwait
inc
push
inc
jne
cs
cmp
add
or
push
jns
jb
mov
lahf
aas
dec
mov
outsb
emms
xor
mov
dec
aaa
shlb
inc
int
enter
adc
cmp
dec
adc
cmp
push
into
adc
mov
sbb
xchg
scas
pop
ret
sbb
flds
pop
xchg
in
xchg
js
xlat
pusha
fwait
mov
repz
mov
pop
fldl
lahf
aas
cwtl
outsb
jno
xchg
mov
sbb
xor
mov
inc
enter
xor
sahf
pop
cmp
jns
sub
cmpsb
scas
bound
stos
mov
add
fadd
mov
jecxz
loop,pn
test
popa
imul
inc
push
cmp
xor
cmp
fsubl
dec
addl
int
jb
std
sub
insb
in
lcall
jbe
ficomps
adc
xlat
mov
or
jg
divl
cmp
push
dec
lods
popf
je
pop
lods
push
adc
ficoms
and
shll
mov
sbb
mov
cwtl
leave
push
mov
cmp
mov
lret
jne
sahf
push
jle
lock
into
mov
scas
rorl
xchg
loop
pop
lret
mov
mov
jle
push
mov
xchg
push
idivb
fstps
push
add
and
repz
dec
lcall
pop
add
mov
jbe
in
xchg
mov
int
ja
and
add
repz
cmp
fs
outsb
mov
inc
std
cwtl
lret
mov
cmpsl
cli
push
loop
dec
bnd
dec
jge
pop
jnp
lds
mov
jo
in
insl
dec
cmp
out
in
outsb
pop
jmp
mov
jecxz
pop
shrl
sahf
les
adc
pop
or
dec
loopne
arpl
sub
imul
jl
outsb
lret
cmpsl
xchg
push
out
lods
push
outsl
loop
add
jl
jb
pop
jne
push
es
ficomps
imul
pusha
lret
xor
negl
fsubr
xchg
fucom
mov
aad
leave
mov
fmul
push
ss
pop
movsl
das
push
outsb
fs
out
pop
and
ret
add
out
push
ds
fidivrl
pusha
pop
icebp
hlt
cltd
push
inc
aas
stc
adc
cmp
adc
leave
out
mov
out
jo
or
adc
mov
lods
es
stos
add
sub
mov
outsl
ret
push
cld
inc
pop
das
sahf
les
repnz
sbb
sbb
xor
fildll
outsl
pop
es
pop
adc
add
xchg
mov
lahf
and
stos
icebp
lret
fbstp
jno
push
inc
jmp
movsb
mov
sub
push
jne
fcmovbe
and
mov
imul
mov
or
imul
dec
in
dec
sub
clc
clc
test
sbb
add
sub
adc
stos
lea
xor
js
les
subl
cmpl
sub
data16
repz
fs
ds
xor
rorl
pop
insb
cwtl
jnp
fiaddl
xor
mov
mov
ret
xchg
fisubrs
outsb
int3
mov
sbb
mov
out
repz
and
jmp
ljmp
adc
sub
data16
je
dec
nop
jno
ret
mov
lcall
jb
in
jne
js
sub
jl
mov
push
out
test
xchg
mov
add
pop
and
loope
push
arpl
sti
data16
jo
push
in
stos
in
jno
xlat
sbb
add
icebp
movsl
xor
add
incl
call
xor
fisubrs
fsubp
popf
lds
scas
pop
and
popf
and
hlt
ds
fdivl
dec
enter
push
out
lock
imul
mov
cmp
insl
inc
mov
inc
mov
xor
xchg
sbb
push
neg
in
mov
nop
inc
movb
jmp
or
sub
mov
mov
in
mov
dec
and
sub
sbb
adc
scas
dec
xchg
gs
push
mov
xor
push
add
scas
out
xor
pop
cmp
sub
lods
aam
cmp
mov
jo
adc
cmp
fwait
lea
jbe
adc
movsb
xorb
and
std
mov
enter
iret
outsb
push
outsl
mov
sahf
inc
adc
cli
jmp
scas
jno
adc
push
lods
insb
mov
mov
or
mov
mov
nop
or
jmp
scas
ss
fisubrl
fists
mov
dec
mov
dec
fwait
inc
mov
sbb
pop
inc
ljmp
push
std
aad
movsb
add
or
aad
les
fisubrl
filds
xchg
xor
xor
loopne
fsubrl
sbb
fiaddl
in
insb
fwait
push
mov
cwtl
mov
cmp
mov
ret
ss
adc
adc
cltd
fisubs
shll
mov
cmp
mov
xor
pusha
stos
pop
cmpb
mov
mov
call
js
push
in
mov
shll
xor
sbb
or
vdivps
int3
mov
xor
push
sub
mov
add
and
shll
add
lret
add
jb
or
jne
push
lahf
shl
shll
dec
pop
pop
sub
sub
lahf
and
xor
cmp
dec
cmpsb
test
sahf
push
imul
mov
xor
loopne
jg
adc
loope
cli
push
icebp
cmpsb
in
pop
lods
dec
sti
dec
dec
lret
sbb
daa
sahf
outsb
push
mov
jl
fsts
pop
jp
sbb
push
and
jno
je
or
push
jle
inc
test
push
xchg
jnp
in
mov
xchg
xchg
scas
mov
xchg
push
push
adc
aaa
clc
mov
das
cmp
add
mov
push
movsb
sub
mov
into
dec
in
add
and
sub
cmpsl
pop
inc
addr16
xchg
imul
mov
xchg
les
test
insb
mov
lahf
lods
mov
rcrb
jae
ljmp
andb
out
fsubs
fisubs
or
lret
cmp
jb
adc
and
nop
jne
sub
mov
cmp
xor
lods
ret
fcomp
push
jo
stos
arpl
or
lods
cltd
xchg
add
cwtl
aaa
jns
mov
xchg
jl
imul
js
sbb
fmuls
out
test
shl
lahf
div
sbb
loopne
rolb
mov
popf
pusha
dec
mul
jae
push
sbb
out
scas
inc
mov
mov
pop
and
subb
scas
daa
lret
jg
adc
cmpsb
adc
icebp
cmpsl
testb
les
xlat
fistl
cwtl
adc
jae
mov
aaa
dec
add
xor
std
imul
dec
mov
cmp
cmp
std
jp
aad
pop
and
jle
sub
cmpsl
mov
xchg
jno
and
js
push
dec
sahf
out
and
jle
push
fisttpl
out
jecxz
or
and
inc
int
int
insl
test
mov
sbb
dec
mov
push
insl
or
aaa
jo
testb
mov
enter
enter
lcall
pop
frstor
test
shl
xchg
addb
popa
repz
mov
cld
and
pop
fdiv
in
pcmpgtd
inc
mov
lock
adc
out
mov
sub
push
push
jb
out
mov
push
bound
div
adc
adc
popa
and
scas
mov
or
jl
add
test
out
ret
leave
das
xchg
inc
pop
mov
movsb
mov
lods
aas
jo
sbb
movsl
mov
mov
sbb
les
insl
jge
cs
or
cmpsl
jle
leave
psubw
hlt
jge
mov
cmp
xchg
in
or
movsb
daa
xor
jg
and
mov
jl
fsubrs
fwait
call
test
pop
jp
lret
rcl
leave
mov
bnd
aas
shrd
int
cmc
jns
or
nop
mov
adc
or
pop
fcoms
fcoml
stos
adc
shll
bound
and
adc
outsb
sub
sub
jne
dec
fwait
dec
hlt
xchg
push
sbb
shlb
mov
jmp
cmp
into
stc
fdivrs
push
pop
mov
push
lds
dec
dec
mov
cs
push
xchg
xchg
bound
aad
inc
enter
sti
std
or
imul
xor
push
addr16
cmp
repnz
sub
add
aam
scas
ja
int3
sbb
xor
mov
stos
or
pop
lock
jg
sub
push
outsl
inc
arpl
push
dec
xor
out
out
xchg
sbb
xchg
jle
xchg
inc
pop
popa
xchg
push
jbe
dec
xor
test
dec
mov
cld
push
jns
dec
fwait
mov
sbb
out
adc
or
push
jg
sbbb
dec
sahf
jp,pn
sbb
sarl
sbb
out
jae
add
les
mov
sub
or
and
and
fsubs
insb
call
pop
iret
mov
pop
sbb
nop
ret
in
or
xchg
fbld
add
imul
xor
jl
cmp
jl
mov
sbbl
in
stos
and
pushf
inc
in
fcmovnb
ljmp
aaa
cld
shrl
add
shll
mov
dec
cmp
dec
rolb
inc
sub
push
fs
jecxz
movsb
pop
jnp
js
test
in
cmc
adc
stos
js
pop
rcll
pop
mov
or
jo
gs
jo
std
ss
out
aas
push
xchg
push
daa
xor
dec
std
sub
mov
adc
fstps
sti
test
les
cmpsb
pop
cmp
xchg
scas
aam
sar
fwait
inc
aas
mov
mov
push
add
push
mov
pop
subb
adc
or
lcall
inc
mov
stos
cld
lret
arpl
push
lock
adc
hlt
jp
stos
pop
jne
or
cmp
lret
push
mov
push
jp
push
adc
out
push
mov
test
xchg
fldl2t
enter
fistpl
jl
sarl
adc
ret
push
xor
mov
insb
test
and
jge
insl
lcall
insl
jns
dec
push
xor
fld
cld
jo
pop
aam
cwtl
add
dec
loopne
dec
pop
push
ss
cmpsb
je
adc
sbbl
aaa
dec
xor
mov
fdivrl
mov
sbb
jno
call
out
dec
fimull
mov
push
cmp
jae
or
outsb
xchg
dec
mov
cmp
adc
mov
ss
cltd
jns,pn
ljmp
pop
jo
jb
aam
xor
fdivp
pop
les
or
pushf
maskmovq
push
inc
ret
push
or
mov
jo
rcl
sub
fs
in
jno
mov
xchg
push
std
bound
inc
xchg
push
in
push
ss
mov
loop
dec
xchg
xchg
add
jno
aam
sbb
stos
imul
pop
mov
cmp
filds
insb
ret
test
push
je
lret
sti
daa
sub
add
test
and
pushf
test
jno
and
sbb
das
repz
sti
sti
push
push
cmp
adc
pop
jno
cmpsb
fst
xor
mov
add
ret
bound
movsl
mov
pop
or
rcr
mulb
ljmp
fiaddl
mov
sahf
mov
enter
les
data16
hlt
jl
jno
stos
push
fistps
cmp
lahf
js
shlb
jmp
push
xor
jge
mov
xorl
dec
mov
orb
lds
dec
mov
push
test
ja
mov
add
inc
pusha
dec
jl
sahf
inc
xor
push
mov
in
mov
sub
push
stos
mov
sub
pop
pop
mov
cltd
test
repnz
aas
mov
std
mov
fwait
repz
cmp
test
lret
inc
sub
mov
push
in
loope
int
dec
fistl
fwait
enter
inc
pop
dec
enter
in
fisttpl
into
xor
or
or
dec
mov
push
aad
flds
cmp
push
xor
cmp
mov
mov
cmp
mov
dec
sbb
sbb
cmp
hlt
jmp
xlat
popf
cld
lea
push
scas
push
sahf
lret
cmp
adc
lds
or
jle
pop
pop
mov
imul
jbe
fsubrl
addr16
jnp
fldcw
jno
sub
mov
out
jg
popa
xchg
adc
pop
push
jnp
rcrb
mov
sub
dec
and
cwtl
cld
rcrl
jno
orb
leave
push
pop
ret
jb
fwait
sub
mov
pop
int3
push
inc
mov
mov
enter
or
inc
jmp
and
add
mov
cltd
fs
shll
sub
dec
pop
sbb
hlt
jae
out
rolb
aam
jns
xor
mov
add
cmpsl
cmp
mov
xchg
adc
jecxz
aad
pop
sbb
stos
mov
and
pop
or
or
std
pop
mov
sub
sahf
xlat
sbb
fcoml
sbb
les
or
adc
sahf
fwait
push
sbb
pop
loopne
mov
cmp
sti
mov
push
scas
push
mov
or
mov
xlat
in
lret
cld
and
hlt
subb
mov
push
sub
fwait
or
in
shrl
aas
pandn
sub
stc
mov
loopne
mov
in
popa
setns
and
or
fsubr
insl
scas
push
call
cltd
mov
sub
hlt
sub
addl
mov
xchg
daa
inc
push
mov
inc
dec
push
lret
jo
dec
pop
std
shlb
jbe
jle
adc
jbe
test
imul
test
insb
cli
jo
inc
push
lcall
jne
bswap
cmc
jmp
jno
pushf
mov
aad
mov
andb
cmp
xchg
add
insb
rcrb
sbbl
call
out
aaa
lahf
outsb
and
sbb
mov
sbb
cltd
daa
mov
in
cwtl
jb
or
nop
movsl
jo
adc
mov
fnstenv
aam
daa
fisttpl
adc
push
popa
mov
jo
mov
jo
lods
mov
fstl
nop
or
insl
imul
rcr
call
xchg
jb
je
fsubrp
das
stos
movsb
js
fstps
lahf
jmp
movsl
adc
add
pop
dec
movsb
and
insb
xor
xor
cwtl
ljmp
inc
repnz
fwait
inc
push
loopne
jb
adcb
mov
xor
outsl
movsl
pop
dec
xlat
push
test
pop
lret
sbb
imul
movsl
into
je
dec
add
push
out
fdivrp
loop
jl
daa
inc
mov
sbb
idivl
xchg
lock
and
cltd
data16
rorb
jne
and
cld
in
movsb
pop
icebp
aaa
xchg
imul
push
das
leave
push
cltd
aad
outsb
push
inc
outsl
lret
xchg
add
lahf
mov
xor
push
enter
jecxz
test
addl
inc
xlat
dec
inc
daa
sub
mov
mov
xor
cs
fisubs
scas
aam
pop
jb
push
or
cmp
xor
loopne
shll
adc
jno
xor
sahf
enter
xor
xlat
or
cmp
scas
add
sub
repnz
mov
push
mov
cwtl
xor
repz
push
cmp
or
jne
mov
or
and
push
pop
and
adc
cli
lret
cli
sbb
fmull
sub
and
add
sbb
push
in
aas
pop
mov
cmp
cmp
xchg
mov
lahf
enter
xchg
xchg
mov
popf
out
je
add
pop
cmp
stos
in
rorb
push
movsl
bound
xor
add
xlat
mov
lret
jmp
xchg
mov
rcrb
jne
add
int3
fldt
xor
dec
mov
les
idiv
stos
jp
int3
sar
jle
mov
in
sbb
xor
mov
cmp
mov
pop
or
cmp
mov
mov
mov
adc
cld
int
cmpsb
inc
test
push
mov
fwait
mov
jecxz
out
imul
pop
pushf
jae
xor
add
push
xlat
mov
cmp
daa
push
sbb
movl
lock
xchg
popa
fdivl
movsb
and
push
mov
xchg
add
xlat
mov
addl
leave
pop
aaa
std
adc
mov
cmp
lds
push
das
out
mov
inc
subl
outsl
test
test
mov
or
lcall
testl
dec
faddp
xor
mov
jns
test
or
js
icebp
xor
push
xor
movsb
push
test
aaa
in
push
fdivrp
outsl
xchg
pop
fbstp
jno,pn
xchg
mov
fisttps
out
addl
ja
notl
mov
lret
mov
mov
subb
sahf
test
push
inc
pushf
mov
outsb
arpl
push
lret
lods
loope
mov
ret
movsl
decb
mov
pop
out
mov
xor
jmp
xchg
in
out
jnp
cwtl
cmp
int
or
add
lods
insb
sahf
xor
jns
stc
mov
test
in
aas
pop
mov
jge
cli
movsb
xchg
incb
out
push
xor
xchg
addr16
sbb
xchg
test
mov
inc
movsl
scas
dec
sahf
int3
pop
and
into
mov
xchg
in
sub
orl
icebp
fsts
aas
test
push
dec
xlat
mov
xchg
dec
mov
leave
loope
cmc
mov
pop
enter
xor
cmp
xchg
mov
repz
jae
es
xchg
ss
push
dec
mov
jg
or
push
xchg
sub
in
mov
mov
and
loop
mov
js
push
iret
subb
xchg
lods
xchg
push
push
add
fcoml
xorl
dec
xchg
rorl
sbb
std
cmp
add
cmpsl
jmp
mov
lret
cmp
popa
adc
pop
pop
out
mov
push
or
and
jp
test
cmp
mov
mov
mov
out
or
or
fldt
cmp
mov
adc
stos
bound
das
in
dec
ljmp
xchg
push
clc
mov
aad
das
addr16
in
aad
scas
cltd
inc
add
daa
jb
mov
sub
enter
sbb
subl
mov
cs
ret
jge
cmc
iret
fisttps
mov
adc
shlb
xlat
movsb
jae
mov
sbb
rolb
mov
lods
enter
jp
es
ficompl
adc
xchg
cmp
in
orl
lret
xor
iret
jle
lods
negb
cmp
pusha
stos
adc
rolb
nop
aaa
xor
dec
pop
cmp
mov
mov
cmc
cld
sub
mov
sub
mov
add
add
movsb
lea
call
cmp
and
sub
xchg
fistpll
das
inc
sub
jae
fmull
push
lock
test
push
inc
xor
adc
xchg
sub
push
into
xor
fldenv
jo
rclb
aam
cmp
icebp
cli
xchg
mov
push
das
inc
pop
add
test
pop
xchg
loope
pop
mov
xchg
outsl
jns
mov
call
jnp
iret
jle
or
lcall
jmp
xchg
cmp
push
mov
js
jae
jb
jne
jae
inc
hlt
sti
in
xor
std
inc
call
mov
ret
popa
adc
rol
dec
mov
push
pop
addr16
cwtl
mov
je
xchg
jae
lcall
cld
arpl
xor
aam
sbb
dec
fidivrs
enter
mov
into
sbbl
or
mov
cmc
subb
adc
pop
xor
push
sbb
in
in
mov
mov
pop
ret
jmp
jo
mov
inc
aas
push
inc
ja
outsl
sahf
repnz
mov
in
mov
or
sbb
and
dec
fsubr
aas
push
fnsave
push
mov
sbb
xor
mov
dec
ja
test
jp
push
ficoms
jl
outsl
mov
shll
addr16
aam
test
cmp
mov
lods
sub
loope
clc
shrl
push
mov
es
mov
ja
rclb
adc
xor
jle
out
out
inc
nop
push
push
out
int3
cmpsl
or
inc
adc
mov
inc
pop
push
scas
rcrb
in
mov
addl
lret
dec
ja
and
or
in
data16
ret
mov
das
xchg
mov
pop
inc
fmull
std
sub
mov
or
jne
movsl
out
inc
push
ss
std
shl
subb
push
lcall
inc
and
cmc
and
pop
sub
sarl
pop
push
or
jp
fiaddl
imul
jnp
aad
cs
jge
movsl
adcl
and
outsb
idiv
inc
imulb
xchg
and
insl
dec
into
scas
jb
dec
jae
add
fwait
ja
sahf
fists
xchg
and
inc
mov
lods
aas
je
fmul
pop
hlt
and
int3
inc
or
aas
and
testl
imul
mov
fs
shll
lret
popa
xor
daa
sbb
sub
scas
mov
fdivs
or
or
cmp
out
xchg
lcall
roll
pop
mov
fidivl
fnstenv
mov
sbb
lcall
add
pusha
sbb
pusha
xchg
dec
test
or
pop
pop
mov
or
ja
xchg
inc
bound
lea
dec
xchg
mov
fistpl
and
testb
mov
movsb
nop
and
add
and
lods
sbb
sbb
jae
cmc
dec
lds
push
shll
mov
sbb
pop
lea
push
addl
jmp
cmc
lods
std
mov
repnz
push
jp
fnsave
je
mov
xlat
movsb
inc
lods
ret
cs
xchg
les
mull
sub
daa
mov
icebp
jge
add
out
pop
pop
das
push
mov
jnp
push
ds
add
out
jne
sti
push
push
aaa
adc
jmp
lods
loope
sub
je
insl
inc
hlt
int
lcall
insl
add
outsb
xor
jo
out
dec
inc
mov
xor
and
fmuls
dec
mov
mov
sub
xor
fidivrs
sahf
roll
mov
fildll
push
int3
cmp
cmp
repnz
dec
xchg
or
movsl
and
pop
push
dec
das
int
inc
test
pop
int3
lret
xchg
icebp
mov
xchg
xchg
push
and
fwait
aam
mov
popa
imul
pop
inc
jns
sbb
push
mov
ds
cmpsb
scas
shll
shl
js
push
inc
push
dec
nop
and
lretw
sbb
mov
out
ret
xchg
push
cmp
decl
es
add
mov
out
sti
cmp
pop
and
sub
jg
fdivrp
das
aam
mov
or
pop
cld
js
push
xor
loop
add
mov
mov
add
inc
int3
push
jo
or
inc
xchg
xor
jge
jl
mov
ret
imul
cwtl
mov
lahf
cli
dec
int
cmc
pop
pop
jecxz
push
ret
imulb
gs
pop
cmp
mov
cwtl
lock
ret
sub
imul
push
inc
or
fldenv
xor
pop
sbb
in
movsl
fcoml
pop
or
test
icebp
les
dec
mov
test
lcall
int3
push
insl
stos
cs
add
sti
das
push
jg
add
mov
fdivs
jge
adc
jl
in
ss
jmp
add
jmp
fld
xchg
sub
jle
mov
out
sarb
mov
xchg
shrb
outsb
sub
mov
xchg
cmpsb
mov
cmp
mov
sub
in
and
into
stos
scas
mov
pop
cmp
cvtpi2ps
push
pop
push
jns
adc
leave
imul
in
cmp
or
dec
mov
pop
sti
mov
sub
dec
or
push
in
pop
sub
fnstcw
dec
stos
fistpl
arpl
cli
push
and
mov
pop
frstor
sbb
add
scas
cmpb
jns
mov
stos
cmp
ja
jle
arpl
jg
adcl
mov
inc
push
loopne
icebp
or
xorl
dec
mov
sbb
int3
xor
xchg
ds
scas
sbb
jmp
fs
repz
inc
or
int3
sahf
and
inc
mov
pop
xchg
ficompl
sub
jecxz
cmp
add
rcrl
xlat
clc
adc
pushf
cli
fcomp
shr
sahf
popf
ja
and
jae
js
sbb
dec
aam
fiaddl
xchg
outsl
or
repz
fwait
push
inc
inc
imul
les
dec
daa
sbb
jmp
dec
xchg
pushf
xchg
inc
out
shrb
imul
sbb
loope
push
lock
push
jle
xor
ds
pusha
aas
cld
pop
push
lret
andl
les
fiadds
push
jecxz
and
jo
push
inc
fcoml
aad
pop
and
jo
xchg
jg
imul
movsb
rolb
xor
lret
lahf
mov
sub
pop
mov
pop
add
leave
loope
adc
popf
ret
add
inc
insl
or
inc
dec
xor
jp
mov
cltd
pop
or
push
inc
loopne
dec
ret
mov
push
jmp
mov
jno
addb
or
je
add
movsl
insl
jg
pop
dec
cmp
data16
jno
mov
pop
mov
stos
loop
mov
aam
dec
mov
cmp
js
sbb
loopne
inc
sahf
lcall
pop
xchg
pop
in
pop
mov
lret
aam
repnz
cmp
in
and
in
fsubl
mov
mov
pop
icebp
pop
imul
iret
in
adc
jle
ret
lcall
adc
rcll
outsl
jae
cmp
xor
nop
nopl
fsubrl
test
or
push
cmp
pop
out
lods
cmp
inc
addl
gs
ja
nop
add
cmp
push
sbb
clc
xchg
idivl
pushf
ret
adc
cli
movsb
lock
adcb
mov
jge
cmp
add
or
cltd
sub
hlt
and
mov
fcoms
test
jl
testl
xchg
push
adc
xor
jecxz
push
and
xchg
outsl
pop
mov
rorb
adc
jmp
pusha
pop
jae
or
adc
dec
aam
lahf
rclb
shrl
xor
push
cli
ds
fdivl
push
sbb
out
call
shll
push
sub
gs
jo
inc
xchg
rcl
xchg
jnp
sbb
movsl
push
loopne
fcmove
insl
mov
sahf
rcrl
push
addr16
aad
push
inc
adc
loope
jp
mov
jl
inc
or
pop
push
dec
lods
cmpsb
push
fisubrs
cs
dec
dec
dec
jle
movsl
out
aam
out
mov
popa
aam
pop
in
in
mov
mov
push
mov
lret
dec
cltd
idivb
adc
jl
in
cmpsl
or
call
sub
jg
imul
jnp
xor
inc
xor
stc
imul
add
pop
loope
xchg
scas
in
cmp
xor
loope
lret
push
and
fwait
test
add
mov
fcom
repz
mov
ja
js
dec
out
xchg
mov
jmp
push
inc
adc
outsb
insb
arpl
mov
inc
fs
out
movsl
push
ja
sti
into
testb
ret
cmp
fistpl
cltd
das
push
fldl2e
mov
negb
adc
jecxz
ficomps
push
ds
mov
test
push
xchg
mov
mov
test
out
xchg
insl
in
subl
rorl
dec
adc
loopne
shrl
xor
push
sub
cltd
xor
fnstcw
out
pop
lock
push
sub
mov
outsb
clc
mov
stos
in
aam
icebp
add
push
xor
cmp
incb
jo
xchg
adc
icebp
and
sbb
fsubrl
mov
rclb
dec
lret
sbb
inc
lods
rcr
cmp
xlat
dec
aad
loopne
sahf
fdivp
dec
je
push
adc
flds
mov
mov
cmp
add
loopne
out
out
mov
lock
fnsave
pop
rorl
testl
xchg
sbb
mov
push
cwtl
jmp
incb
jae
push
ja
xlat
or
pop
cmp
lds
push
push
sub
xchg
ljmp
lcall
inc
xor
mov
stos
js
xchg
fnstsw
mov
mov
xchg
hlt
sbb
dec
out
neg
sbb
mov
push
stc
fwait
in
mov
mov
sbb
cmp
mov
push
and
rol
es
mov
adc
icebp
jmp
filds
testb
add
stos
jg
mov
insl
or
je
andb
enter
pop
mov
je
cld
fimuls
push
das
push
lcall
jl
adc
shlb
adc
xor
ljmp
mov
js
cli
idiv
test
ja
incb
or
jb
lret
neg
mov
es
loop
jmp
das
sub
xchg
popa
mov
push
dec
jl
dec
add
jbe
aam
idivl
pop
lods
in
jne
test
clc
mov
imul
out
cli
mov
cmp
roll
add
scas
bound
call
add
cwtl
or
dec
mov
xchg
outsb
mov
outsb
mov
jg
outsb
hlt
xchg
push
pusha
and
or
shlb
jmp
insb
cli
gs
imul
push
mov
adc
in
xlat
fwait
lret
lret
cltd
push
test
and
gs
xchg
xor
aas
xchg
add
adc
rcrl
sbb
or
sub
mov
adc
and
sbb
negb
dec
mov
sub
jne
push
std
out
int3
fdivrs
js
pop
enter
ja
inc
into
push
popa
adc
loop
mov
add
das
fwait
xor
or
int3
in
out
lock
ret
inc
out
inc
xchg
lcall
push
lea
out
inc
sbb
xor
xchg
adc
adc
sahf
addr16
push
data16
mov
and
shrb
push
push
xor
fwait
repz
mov
adc
cmp
cmpsl
in
mov
or
or
cli
call
add
adc
inc
push
fidivrs
insb
xor
mov
dec
outsb
mov
clc
dec
mov
jmp
rcl
dec
scas
mov
push
jmp
push
xor
xchg
sbb
adc
cmp
mov
mov
sub
ljmp
cld
push
sub
dec
pop
jb
xor
call
outsb
cmpsb
mov
pop
or
add
jae
pop
mov
js
out
xor
jnp
pop
int
jecxz
add
call
cmpl
xchg
jge
fwait
loopne
ja
inc
fcomip
sti
aam
imul
imul
xchg
mov
stc
sbb
jbe
cmp
lret
das
int3
inc
mov
or
lock
xor
push
ja
hlt
mov
adc
pop
ret
scas
and
cltd
daa
and
or
fwait
xchg
fwait
pusha
cmp
pop
mov
mov
icebp
dec
push
out
mov
sahf
inc
jb
int
dec
and
scas
inc
addb
push
das
nop
cwtl
decb
mov
fcompp
or
push
xchg
mov
fistl
mov
inc
mov
sbb
out
pop
mov
paddsw
outsb
in
push
and
das
pop
xorl
pop
jns
addl
push
fidivrl
pop
in
icebp
je
dec
xchg
inc
loop
test
fidivl
push
mov
inc
sahf
std
add
cwtl
outsb
pop
mov
cmp
xlat
rol
fdivrs
ljmp
mov
stos
sub
jg
xor
adc
xor
outsl
sbb
out
fistps
lock
out
enter
jb
or
ljmp
sub
cld
popa
mov
imull
adc
or
testl
ret
push
inc
cmp
scas
push
inc
sbb
cmp
dec
int
xchg
in
popf
outsl
sbb
inc
outsl
lahf
shrl
adc
cli
jle
in
pop
inc
push
aas
lahf
sub
pop
insl
popa
sub
out
push
hlt
xor
ds
out
inc
nop
ret
push
shlb
dec
das
out
xchg
scas
fdivs
cli
ret
lds
mov
iret
pop
jmp
xchg
flds
adc
int
movsb
es
ljmp
negb
or
sub
jae
pop
add
mov
psubw
push
cmc
mov
push
outsl
xor
push
movsl
inc
xor
ret
les
push
mov
sbb
shrl
mov
mov
gs
pop
and
mov
cmpsl
or
mov
cmp
test
ja
sbbb
jae
pop
out
ficoms
inc
ja
arpl
xlat
xchg
rol
das
fiadds
lahf
add
test
inc
rcr
sub
add
in
sub
add
mov
movsb
inc
push
add
or
inc
enter
cli
xchg
mov
mov
cmp
je
dec
or
sub
mov
pop
push
scas
arpl
outsl
mov
outsl
and
lcall
pop
xchg
mov
outsb
scas
enter
sti
mov
cld
pop
leave
push
push
lods
and
adc
and
jl
out
xchg
int
icebp
sub
gs
scas
inc
jecxz
jb
pop
push
xor
outsb
arpl
xchg
pop
in
enter
or
in
sbb
adc
cbtw
pop
xor
add
mov
sub
dec
notl
cmpsb
stos
repz
mov
jmp
push
xchg
sbb
addr16
addl
push
inc
adc
sbb
test
lahf
aas
sbb
mov
and
pop
sti
std
inc
das
mov
cmpsb
xchg
inc
shrb
mov
adc
hlt
lock
push
push
jmp
add
push
test
mov
cs
setne
pop
or
popf
enter
neg
mov
pop
jne
and
cmpsb
lret
pop
add
rcl
fwait
das
sub
mov
cmpsb
js
add
mov
add
pop
cld
ss
outsl
nop
push
shlb
xor
into
sbb
mov
imul
push
subl
adc
mov
push
popa
test
aas
or
xor
gs
push
mov
pop
pop
lods
push
scas
cmp
jl
jp
mov
inc
and
or
ret
mov
decl
or
sti
insb
imul
imul
daa
das
movsl
rorl
jp
sbb
sbb
push
sbb
mov
or
lret
dec
jae
dec
push
add
dec
mov
popf
cmp
in
test
jg
les
pop
cld
insl
jb
clc
or
inc
outsb
das
mov
dec
or
cmp
in
cmp
ja
mov
dec
inc
push
pop
dec
test
nop
pop
and
xchg
pop
insb
scas
dec
mov
gs
test
clc
imul
mov
idivb
mov
shlb
xor
stos
sub
sbb
lds
loope
jg
jbe
xor
repz
es
scas
adc
loopne
xchg
in
mov
cmp
adc
fsubl
scas
fisttpll
jmp
pop
fwait
or
fwait
jecxz
lea
pop
lock
test
mov
or
dec
fs
xchg
ret
pop
add
sub
stos
jl
dec
stos
mov
pushf
xor
and
in
and
ret
pusha
cmpsb
icebp
jnp
pop
push
imul
stos
mov
and
mov
std
in
mov
outsl
xor
aaa
adc
outsl
pushl
mov
inc
in
std
and
shr
lret
sahf
out
ret
mov
loop
xchg
sub
in
aas
push
fisttpll
ret
xchg
jg
je
shrb
sbb
hlt
pop
adc
mov
mov
and
mov
mov
daa
lret
filds
jecxz
jnp
adc
xor
add
xlat
cmpsl
jae
sub
inc
push
xor
push
add
sbb
pop
sub
pushf
xor
xlat
test
icebp
inc
xor
or
mov
nop
jge
xor
xor
popa
imul
ja
cld
or
imul
mov
inc
push
pop
outsl
in
fisttps
add
pop
stos
ficoml
in
negl
mov
leave
cmpsb
fimull
jae
xchg
mov
shll
repz
pop
sbb
mov
fildll
or
jecxz
shlb
sbb
push
mov
inc
mov
test
in
xor
iret
mov
sub
inc
in
dec
or
mov
add
adc
loop
in
enter
cmp
lea
jmp
mov
pop
mov
fisubs
push
je
fistl
movsb
or
mov
jl
pop
mov
mov
pop
add
ret
stc
dec
lds
or
inc
cwtl
add
cmp
rcrb
push
out
xorb
mov
sarl
jne
add
mov
mov
sub
mov
out
push
push
add
shlb
xchg
mov
mov
fsubl
add
cmp
neg
lret
mov
adc
cmp
cmp
test
fld
mov
mov
je
daa
sub
test
dec
stos
cmp
adc
mov
xor
in
xor
repz
aam
xchg
cli
std
leave
jmp
imul
push
jmp
loopne
sbb
addr16
cmp
push
inc
add
inc
mov
sub
cmovp
jae
or
push
stos
fs
mov
and
adc
lcall
out
movsb
ja
inc
enter
pop
xor
in
pop
in
jb
or
test
or
mov
push
jns
xchg
mov
xchg
hlt
ljmp
add
dec
xor
fisttps
and
fnstenv
push
mov
out
pop
fimuls
dec
js
js
sub
push
aaa
pop
out
fnstsw
adc
mov
xor
mov
dec
fildl
pop
lock
fsubl
mov
jle
mov
mov
jmp
sti
dec
stc
dec
jle
lahf
test
andl
test
xor
int3
iret
jle
xor
dec
rcrl
push
lahf
push
pop
das
xchg
xchg
mov
pop
xchg
xchg
bound
lret
xchg
cs
roll
pop
inc
shrb
or
dec
out
jg
push
jle
dec
push
loopne
push
neg
inc
dec
lret
or
mov
shr
lds
ss
and
pushf
cmp
ljmp
xor
mov
and
mov
pop
cs
jecxz
xor
movsb
mov
or
lds
je
stos
fstl
jle
mov
lahf
sub
xor
inc
test
sbb
mov
and
jne
fcoml
mov
pop
jmp
lods
push
shlb
stos
sub
test
inc
lret
test
in
fisubl
pop
xchg
movsb
xchg
imul
loope
xor
sub
mov
mov
scas
outsb
mov
ficoms
or
and
stos
push
xchg
popa
mov
enter
ljmp
es
popf
lret
movsb
push
push
dec
xchg
cltd
lds
xor
mov
roll
mov
mov
xchg
push
insb
loop
push
push
push
jle
mov
jae
rcrl
loop
push
sbb
push
or
pop
decb
cmp
addr16
das
out
and
sbb
push
and
and
ljmp
fcmovb
sti
fucomip
xor
cld
ss
mov
jo
mov
test
pop
ss
popa
mov
int
pop
mov
mov
movsl
lock
aam
cmp
pop
aad
shrl
mov
test
and
inc
ret
test
ja
aaa
push
dec
mov
xor
repnz
inc
sbb
mov
nop
loope
xchg
mov
dec
jne
lcall
dec
inc
aam
sti
cmpsl
sbb
mov
out
sbb
jns
and
movsl
test
out
das
cmp
sbb
xor
inc
sbb
mov
aas
push
data16
out
test
mov
jp
dec
leave
leave
mov
xor
sarb
and
ds
cmp
xor
adc
pop
mov
inc
jl
cmpsb
xor
out
jge
mov
or
push
mov
decl
in
dec
cmp
push
mov
xchg
cmp
inc
shll
jl
ret
in
outsl
dec
scas
repnz
idiv
jg
jecxz
outsl
push
leave
aaa
aaa
rolb
mov
push
js
add
jecxz
lret
fiadds
pop
pop
outsb
push
hlt
sub
adc
movb
mov
dec
xor
pusha
test
add
jg
je
outsb
push
xchg
cmc
shlb
and
inc
sub
stos
sbb
lds
cs
inc
nop
and
push
pop
or
pusha
jbe
and
fsts
sub
int3
inc
mov
mov
ds
inc
dec
into
lret
adc
xor
sub
fcmovb
test
inc
sub
dec
test
cltd
mov
pop
xchg
mov
fs
pop
or
mov
adc
jle
in
mov
sbb
mov
inc
ljmp
and
fimull
sub
mov
lods
cli
scas
xor
inc
mov
loopne
add
jns
push
test
lock
mov
pop
adc
into
inc
les
fdivrl
clc
mov
aam
adc
mov
mov
mov
incl
pop
movsl
xor
sbb
push
scas
daa
fimull
stos
push
sub
mov
leave
int
aad
sub
mov
test
ljmp
xchg
jecxz
adc
sub
movl
xor
xchg
jae
adc
iret
sbb
dec
jp
push
pushf
cmpsb
test
and
sub
in
push
push
jns
push
push
inc
mov
test
insl
clc
mov
aad
or
iret
push
stos
popf
stos
pop
clc
icebp
push
in
aam
mov
add
aam
jmp
xchg
mov
nop
mov
leave
adc
jp
adc
adc
repnz
xchg
out
insl
or
fildll
push
popf
mov
cltd
daa
and
add
jns
push
mov
mov
and
sahf
push
mov
adc
outsl
inc
jnp
sahf
mov
cwtl
fsubs
movsb
add
das
pop
xor
cmpsl
dec
cmpsl
add
ljmp
insl
rcrl
jmp
jnp
add
jno
dec
in
pop
loope
pop
jle
jne
pop
mov
ds
test
adc
mov
insl
loope
xor
ljmp
xor
les
addr16
inc
stos
lret
fistl
or
shll
repnz
scas
pushf
and
push
jmp
dec
pop
pop
mov
dec
mov
and
xchg
int3
add
stos
mov
jae
mov
hlt
adc
call
iret
fs
push
out
lock
mov
dec
push
mov
ljmp
lret
rcrl
mov
cld
adc
sbb
mov
mov
hlt
jne
mov
sar
add
xchg
jo
xchg
in
pop
xchg
add
add
ljmp
sub
xchg
or
fwait
xchg
mov
lahf
decb
lock
bound
fnstsw
and
in
mov
push
xor
aas
xchg
xor
mov
pop
mov
adc
sub
mulb
xor
xchg
push
test
adc
jp
lret
outsl
lret
mov
mov
dec
lahf
mov
into
mov
out
adc
fwait
std
gs
gs
adc
stos
lock
inc
push
lcall
mov
mov
aam
pop
enter
add
rorl
das
ss
data16
add
adcb
negl
pop
lds
shl
xchg
stos
mov
dec
xchg
pop
inc
add
mov
fcoms
dec
insl
je
sub
push
lcall
jbe
aam
arpl
pop
popl
cmp
add
js
push
sbb
add
movsb
test
mov
pop
cmpsl
lret
or
cmp
xchg
mov
das
push
into
add
pop
lcall
xchg
adc
mov
xor
iret
dec
clc
mov
push
fcompl
pop
pop
sub
imul
pop
push
leave
pop
or
lds
call
jp
or
addb
jb
lods
pop
lods
in
ljmp
out
mov
cs
lods
push
rol
pop
or
je
or
jecxz
adc
test
mov
or
aas
and
sbb
aas
cmp
jae
int3
shrb
sbb
cmp
adc
inc
leave
mov
outsb
inc
ss
pop
cmp
and
repz
lock
push
pop
pop
pop
sbb
popl
fimull
lea
add
and
stos
test
cwtl
push
xlat
jg
into
mov
mov
lock
mov
rcrb
lds
jmp
xor
mov
pop
inc
aam
loopne
xorl
push
xor
sbb
loopne
scas
mov
fs
inc
mov
sub
loope
ljmp
rclb
into
pop
pop
push
sub
test
arpl
imul
scas
pop
test
cwtl
or
mov
inc
mov
movsl
lret
ret
loope
clc
mov
outsl
adc
xor
xlat
mov
dec
cmp
je
push
orb
mov
push
mov
popf
fwait
and
cmpsl
mov
decl
adc
call
iret
pop
outsb
cwtl
lods
sbb
fldenv
pop
xchg
inc
bound
sbb
push
mov
scas
sub
std
jns
pop
push
fs
mul
popa
data16
pop
mov
push
in
imul
xchg
ffreep
sub
pushf
es
jno
movsb
mov
dec
dec
lea
pop
sub
loop
lods
cs
sbb
test
test
std
rcr
test
dec
hlt
flds
mov
pop
mov
jmp
out
adc
pushf
faddl
sti
js
pop
fldcw
outsb
data16
mov
fidivl
or
ret
mov
mov
divl
mov
packssdw
inc
lret
int3
mov
jecxz
xchg
xchg
adc
aam
pushf
xchg
ljmp
pop
shrb
rorb
shrb
int
sbb
dec
into
inc
fs
enter
cmpl
imul
mov
jp
push
mov
inc
sub
mov
adc
lock
movsl
dec
jo
add
mov
jle
cmpsb
in
push
pusha
sbb
cltd
pop
ja
cmc
sub
or
ja,pn
xor
adc
repnz
sbb
inc
je
pop
outsl
pop
imul
in
inc
mov
pop
sub
cmp
ror
sahf
out
jl
add
push
cwtl
dec
pop
pop
pop
adc
test
jle
or
jle
leave
and
stos
arpl
jne
out
dec
jb
loopne
xor
or
or
jl
dec
xchg
sub
pushf
test
mov
mov
mov
pop
mov
out
fists
and
sbbw
popf
call
xchg
or
fsubr
xchg
ss
xchg
and
repz
fisubs
or
and
fstps
cmpsl
mov
andb
lock
movsl
jg
loope
pusha
add
lcall
pcmpeqw
daa
scas
push
sarb
lods
lods
mov
jp
loope
outsb
adc
insb
popa
stos
xchg
aaa
adc
lock
ljmp
push
test
shl
adc
outsb
cmc
stc
or
inc
pop
cwtl
jmp
mov
movsl
dec
lods
push
les
push
push
inc
testl
sbb
stos
mov
jnp
fsubs
sti
mov
cltd
loope
xor
bound
incb
adc
mov
dec
inc
pop
pushf
cmp
loope
aaa
in
jno
sarb
and
jns
push
mov
inc
push
pop
js
xchg
pop
int3
adcb
mov
and
js
lds
xchg
movsb
adc
pop
jle
int3
imul
insl
mov
adc
addr16
xchg
push
xor
and
mov
inc
push
adc
add
mov
dec
in
pop
mov
ret
dec
fnsave
iret
leave
inc
xor
fnstenv
dec
inc
inc
xor
inc
mov
scas
pop
outsb
inc
jno
int
leave
out
movsb
sub
adc
jmp
dec
inc
in
inc
mov
stos
aam
jne
xor
or
imul
xlat
xchg
sti
dec
sub
xchg
inc
lds
push
sbb
fists
adc
fimuls
sahf
int
fisubrl
in
addb
rol
cmpsl
mov
lods
addb
lock
call
jbe
pop
std
adcb
xchg
sbb
popa
imul
scas
movsl
inc
pop
stos
dec
pop
das
jl
cmc
add
mov
xchg
push
bound
sbb
fdiv
cltd
add
xchg
or
jl
xchg
pop
jl
mulb
aaa
into
mov
pushf
inc
sti
shll
ljmp
mov
push
push
sarl
div
fdivl
enter
mov
icebp
adc
loope
insl
into
into
mov
add
jo
push
pop
mov
aaa
fidivrl
repnz
fisttpll
mov
mov
push
mov
lahf
mov
dec
push
popf
out
add
push
roll
and
aam
inc
xchg
jp
xchg
ljmp
pop
dec
sbb
inc
pop
dec
adcb
add
add
push
cmpsb
fnsave
divb
adc
xchg
iret
xorb
xor
and
ljmp
shufps
pop
adc
ds
lods
mov
add
push
mov
lahf
imul
jle
xor
leave
lret
inc
cmp
divb
call
shl
test
jbe
push
jp
outsb
push
pushf
inc
std
in
dec
in
cs
pop
sti
aam
jne
sub
ds
rcrb
jg
out
inc
add
push
test
cmc
jo
lock
inc
rcr
fbstp
and
inc
lret
stos
push
clc
or
in
mov
mull
pop
pop
sub
scas
jns
sub
or
test
add
jecxz
stos
popa
lea
xchg
stc
mov
fdivrl
jmp
popf
push
in
inc
inc
cmc
daa
in
scas
lock
out
cmpb
cmp
mov
push
jle
xchg
notl
mov
lret
push
mov
je
pop
iret
or
cld
or
mov
fsubr
inc
inc
or
fdivl
jo
mov
mov
mov
jmp
mov
ficoml
cltd
fimull
sbb
jmp
je
imul
divb
pop
ret
mov
mov
and
dec
inc
stos
test
rolb
popl
add
pop
cmp
fwait
cld
adc
jecxz
jmp
xchg
mov
pop
cmp
rolb
hlt
std
xchg
arpl
lahf
jge
jb
shlb
push
mov
push
test
stos
adc
outsb
xor
lcall
jge
mov
lods
inc
mov
xor
into
scas
nop
bound
pop
repnz
inc
js
xlat
add
cmp
and
roll
jb
xchg
add
mov
mov
ja
push
push
gs
test
test
jmp
sbb
leave
xchg
fwait
call
fs
shrl
je
lret
iret
and
test
jb
icebp
inc
int
inc
movsb
cltd
pop
lcall
cli
fsub
aad
sbb
bound
inc
pop
ret
xchg
sub
xchg
jle
test
push
and
jl
inc
es
shll
push
dec
adc
add
aad
and
fimuls
arpl
sub
out
arpl
sbb
pop
add
shrl
push
cmp
jb
fsubrs
xchg
fs
mov
mov
add
mov
call
add
cmc
stc
call
aam
mov
add
test
sbb
ret
or
fwait
add
cmp
mov
int
imul
xchg
fists
rcrb
lods
das
daa
mov
rol
push
imul
insb
jge
adc
in
mov
lcall
xchg
or
pop
jmp
inc
push
out
sbb
test
sub
ret
push
cmp
add
icebp
lods
dec
push
aas
lahf
lcall
mov
push
test
adcl
scas
rol
pop
aas
dec
mov
ret
xor
xchg
cmpb
stc
loopne
mov
icebp
sahf
cmp
push
scas
xchg
push
mov
mov
iret
push
loope,pt
add
data16
shll
inc
mov
pop
mov
pushf
in
sahf
push
fs
cli
es
popa
xchg
sti
xor
mov
push
and
xchg
mov
incl
sub
dec
inc
pop
lahf
push
pop
cmpsw
test
pop
mov
push
pop
fsubrs
add
mov
mov
pop
imul
or
call
cwtl
rorl
xor
sahf
sbb
fsubl
fisttps
pop
bound
cmp
adc
inc
inc
enter
loopne
cmp
stc
lret
sub
lods
jl
bound
inc
dec
lret
out
movsb
stos
push
mov
into
ljmp
xor
popa
or
mov
xchg
fstp
out
and
dec
dec
or
cmp
cmp
add
jo
push
sbb
push
fsubl
push
mov
imul
xor
rep
fnsave
shrb
jmp
jecxz
subl
pushf
ret
jle
es
push
data16
dec
sbb
jecxz
mov
mov
icebp
cmp
repnz
cmp
dec
dec
jae
fists
gs
mov
sub
or
fcomip
mov
inc
orl
jp
jb
js
xor
mov
fdivrs
jmp
loopne
out
adc
jge
or
add
cld
test
push
arpl
mov
jp
sbb
shr
rcll
cmp
out
dec
push
sub
loop
or
or
add
push
xchg
out
pop
xor
cmp
add
imul
loopne
mov
mov
movsb
fcos
leave
jle
fdivl
pop
adc
out
pushf
ds
add
mov
lahf
ret
insl
push
shr
pop
shlb
lea
push
jg
testb
cmpsl
inc
clc
cmp
mov
jg
push
mov
lret
or
dec
int3
lea
mov
adc
cwtl
or
pop
stc
add
adc
pop
sub
sub
lret
into
das
jle
sbb
cs
push
cltd
roll
ljmp
cwtl
pop
nop
mov
stos
mov
push
inc
xchg
scas
sub
or
pusha
dec
pop
dec
lahf
std
mov
mov
jle
dec
jns
adc
jbe
mov
push
cwtl
sub
popa
jb
push
cwtl
stc
sarl
xor
sti
push
out
adc
sub
xchg
and
dec
push
in
repz
iret
jbe
scas
enter
movsl
add
das
movsl
inc
loope
dec
push
or
xchg
cmpb
pop
dec
out
pop
cmp
mov
sub
in
mov
sub
mov
push
sbb
jp
and
pop
add
inc
xchg
ds
xchg
xchg
add
sbbl
notb
inc
mov
ljmp
xchg
mov
dec
xchg
dec
iret
enter
mov
mov
stos
dec
mov
mov
or
pop
iret
or
xor
jg
dec
adc
and
push
xlat
cmp
pop
or
cmp
fiaddl
je
sbb
sub
lock
cmc
bound
jl
push
shll
sub
or
push
and
loopne
pop
xchg
aas
sbb
fstpl
and
fcmovnb
mov
inc
sbb
mov
fistl
fwait
push
cmp
pop
jmp
xlat
fisttps
and
push
mov
std
xchg
in
push
xor
inc
pop
pop
ret
fwait
mov
or
mov
or
popf
cli
jmp
test
fs
jo
cmp
shll
adc
jbe
cmp
xor
shl
xchg
repnz
xchg
add
jne
inc
mov
insl
inc
ret
pop
pusha
fcompl
push
push
or
sub
insb
fidivrs
sbb
cmp
stos
cmp
out
fildl
and
cmp
test
adc
push
adc
jmp
jae
sti
adc
adc
fstpl
push
movsb
pop
xor
arpl
push
pop
lods
cmp
sarl
or
cmpsl
xor
leave
outsl
jo
xor
push
push
pop
les
std
inc
xchg
ror
sub
ret
mov
test
xor
loopne
jge
rcrl
add
and
mov
pushf
xorl
gs
gs
adc
sarb
test
add
jp
data16
cmp
rorl
fstl
cmp
pop
cli
repnz
pop
les
xchg
mov
shl
es
test
cmp
mov
push
cmp
add
popf
mov
aad
mov
fisubl
or
or
insl
sub
cltd
in
stos
stos
cmp
lahf
jmp
push
arpl
cmp
in
bnd
add
stos
mov
add
add
adc
xor
add
les
loop
insl
push
dec
and
sahf
shl
jp
test
cmp
mov
cmp
xor
stc
pop
mov
cmpsl
jp
clc
push
xchg
dec
test
sbb
sbb
lcall
imul
movsb
je
loop
shrb
cmp
push
cld
xchg
and
fildl
push
adc
xor
pop
mov
mov
test
lods
add
push
jb
dec
xchg
inc
mov
or
adc
or
sub
mov
stos
js
je
fldenv
sub
mov
cmp
and
mov
leave
jnp
sub
xor
in
jne
or
lods
aam
adc
cwtl
sbb
cwtl
sti
pmaddwd
in
nop
mov
lods
repz
dec
inc
loopne
cltd
sub
jmp
pop
add
cmp
lds
xchg
dec
loop
in
ja
xchg
nop
fldl2e
mov
lods
rcl
add
stos
lcall
push
stos
into
mov
mov
adc
fimuls
pop
lds
mov
out
rclb
dec
ljmp
sub
dec
jo
mov
sub
lret
lret
arpl
pop
in
daa
xchg
out
or
jnp
jge
mov
out
test
rep
jbe
nop
push
rclb
rolb
push
push
push
cli
mov
push
xchg
jns
mov
loopne
arpl
cmpsb
inc
lea
cli
and
dec
dec
movsb
ljmp
movsb
popa
push
or
stc
xlat
cmp
lret
mov
push
mov
mov
cmp
call
mov
popa
movsb
mov
mov
test
decb
scas
and
scas
into
loop
cmp
xchg
orps
push
xor
in
nop
sbb
call
les
mov
xor
pop
push
add
sbb
fcoms
dec
push
icebp
jp
cmp
insl
lret
jnp
or
imul
jae
sub
mov
sub
mov
sbb
mov
xor
iret
imul
ds
out
test
mov
jnp
insb
mov
or
pop
mov
pushl
into
out
out
aas
out
cmp
loope
rcrb
push
test
push
dec
push
fmul
or
sti
mov
jmp
addr16
mov
popf
sbb
xorl
mov
stos
jnp
mov
cmp
xchg
sub
bound
inc
adc
jecxz
mov
insb
dec
or
or
inc
mov
ljmp
fwait
mov
inc
inc
pop
flds
pop
loop
xor
movsb
fimull
lret
mov
imul
xchg
xchg
add
pushf
imul
mov
add
cmp
cmp
ret
pushf
xchg
clc
and
push
repnz
movsl
insl
dec
mov
xchg
pop
add
and
or
push
jmp
pop
cmpsl
mov
and
mov
pop
mov
and
pop
stc
push
mov
ljmp
sarl
daa
incb
push
push
xchg
push
cs
fwait
adc
xlat
pop
inc
jnp
xchg
cmp
inc
and
jp
out
mov
jmp
push
push
add
cmpsl
jns
xchg
pop
adc
popa
cli
pop
and
inc
fcmovb
clc
jns
jno
mov
sbb
pusha
repnz
pop
jae
mov
movsb
rcr
cmp
movsl
cmp
or
loop
push
xchg
je
jbe
scas
cmp
pop
popa
lods
fwait
cmpl
lock
fdivrl
in
cs
sub
push
mov
movsb
pop
sbb
xchg
insl
jmp
inc
test
jae
and
sbb
push
or
xor
or
fldl
lods
add
inc
int
inc
imul
push
sub
or
xor
inc
out
push
mov
fldt
int
pop
cwtl
cmpl
into
jb
jb
jmp
mov
adc
fld
nop
dec
ss
movsl
dec
add
adc
mov
repnz
andb
inc
ljmp
xlat
scas
je
jb
or
mov
mov
movsl
mov
aam
or
pusha
ss
into
dec
je
stos
arpl
cmp
bound
xor
xlat
test
stc
mov
mov
into
out
pushf
popa
and
decl
xor
mov
out
or
add
in
sarl
inc
push
ret
push
inc
mov
inc
sbb
jbe
rorb
outsl
cmpsl
pop
push
div
insl
fwait
push
push
les
push
cmp
pusha
lods
dec
aaa
iret
movsl
sub
iret
jns
mov
nop
insb
test
and
out
pusha
jp
popf
fildl
lret
xchg
xchg
test
cmp
mov
imul
decb
aam
dec
je
scas
aaa
xorl
xchg
leave
inc
addr16
cld
push
mov
pop
out
cs
ror
or
into
fdivl
mov
daa
ret
or
or
mov
mov
pop
in
jno
data16
shr
hlt
inc
sub
imul
mov
cwtl
mov
mov
cwtl
add
lods
lret
pop
sbb
lods
rol
jmp
rorl
mov
add
pop
push
sbb
fldl
adc
or
push
imul
pop
outsl
lods
mov
movsl
or
insl
sahf
mov
ljmp
es
shlb
mov
and
pop
push
nop
xor
in
dec
mov
mov
pusha
das
add
lahf
pop
fcmove
ljmp
out
sbb
mov
cmpsl
ret
cmpsb
shld
out
gs
xor
jge
in
mov
sub
les
sub
cmp
adc
push
shr
xchg
in
xchg
mov
in
dec
mulb
arpl
and
pusha
mov
and
push
fistpl
movsl
icebp
jmp
nop
cmp
outsb
or
mov
shll
inc
cmpsb
xor
stos
sub
inc
mov
lods
xchg
and
out
or
test
push
pop
mov
mov
inc
js
jmp
adc
jns
sbb
push
sbb
ret
xchg
gs
addr16
push
pop
push
or
mov
loopne
or
mov
xlat
rcll
xlat
jmp
mov
jae
outsb
test
fldlg2
dec
add
pop
insl
out
inc
adc
lret
pop
and
inc
xchg
outsb
out
inc
push
cmpsb
bound
adc
loopne
adc
arpl
inc
ds
mov
hlt
sarl
jl
xchg
mov
out
nop
out
mov
imul
out
or
repz
mov
jnp
cmc
push
shr
add
inc
xlat
lahf
test
fbstp
stos
popf
ficompl
jmp
ljmp
cmpsl
inc
scas
ss
testl
add
repnz
or
test
mov
or
fdivr
lock
leave
lret
fadds
push
mov
or
mov
sub
repnz
xchg
xchg
icebp
dec
in
mov
cmp
insb
pusha
xor
test
push
pop
cld
jg
fcmovne
cmp
xchg
or
or
rorb
rcrb
mov
sar
inc
lds
sbb
sub
inc
add
fbstp
int
movsl
lea
ret
ss
outsb
lods
ss
cltd
es
jo
push
pop
or
in
inc
inc
cs
xchg
cltd
xchg
out
sti
call
das
inc
cmp
les
int3
fildll
inc
push
jmp
jnp
test
aad
out
xor
test
rcrl
mov
xchg
movsb
sub
add
jmp
icebp
std
jne,pn
or
ds
js
sahf
mov
nop
dec
stc
fildl
clc
mov
xchg
sub
inc
jae
into
lret
xlat
or
jbe
repnz
shlb
loopne
xor
inc
inc
pop
lea
push
dec
xor
mov
inc
xchg
ss
sub
or
inc
dec
or
jo
mov
sub
push
xor
loop
mov
sbb
cmp
lahf
add
inc
je
lahf
bound
sub
sahf
mov
lock
repz
xorb
jg
xchg
sub
inc
or
mov
sub
pop
aas
sbb
push
popl
popf
mov
stos
push
push
add
mov
mov
std
xlat
jmp
das
jae
outsl
gs
out
jnp
xor
push
mov
or
mov
test
aas
test
cmp
adc
aas
add
fsubl
adc
mov
es
mov
pop
and
cltd
aas
cwtl
jg
mov
mov
pushf
fadd
push
dec
sub
mov
lret
ja
sahf
adc
lock
cld
xchg
add
cmp
adc
push
add
jne
rcll
adc
or
es
cmp
fistpl
popf
imul
mov
xchg
mov
stc
push
jmp
popf
xchg
pop
xchg
dec
loop
pop
dec
cmpsb
sub
sbb
fldcw
rclb
sahf
jg
in
xchg
add
mov
iret
popa
adc
insb
add
out
mov
sahf
sub
int
add
cld
in
jno
sbb
movsb
and
add
adc
xor
mov
sbb
cmp
cmp
and
outsb
insb
filds
push
scas
mov
push
lcall
sub
pop
dec
inc
ret
popa
inc
xchg
cmpsb
aaa
sbb
fbstp
mov
lret
sub
loope
inc
lods
cmpsl
cltd
push
rolb
and
inc
pop
add
push
lods
in
sbb
and
aaa
xor
jle
imul
sbb
xchg
out
into
shlb
xor
repz
ret
sbb
loopne
xor
and
inc
js
or
js
mov
and
xchg
js
jmp
pop
xor
jmp
insl
jae
mov
mov
adc
add
adc
and
lods
ja
dec
jb
dec
rcrb
mov
mov
and
jno
pop
push
adc
and
push
mov
cltd
mov
sar
insb
pop
mov
sbb
xor
arpl
test
and
mov
lea
and
push
xchg
imul
pop
cmp
push
mov
pop
jns
and
loop
pop
lret
out
or
jmp
and
out
js
imull
test
xchg
jnp
out
sbb
stos
push
rcrb
or
cmp
mov
bound
out
or
popa
push
sub
bound
cmpb
in
out
inc
jno
cmp
xorb
orb
popl
fwait
pop
lret
push
pop
or
mov
sub
orl
push
adc
sbb
mov
popf
int
xor
fidivs
jp
mov
aad
push
mov
popa
xchg
lahf
sub
xor
ret
adc
imul
pop
sbb
push
leave
push
roll
jmp
divb
rol
mov
enter
mov
xor
cmpb
rclb
cmpsb
push
rclb
sbb
jg
pop
dec
or
ds
stos
js
cmpb
xor
adc
mov
xchg
imul
sub
mov
gs
mov
xchg
into
into
sbb
and
jl
jb
xor
lret
inc
push
rcll
dec
lods
je
cmp
scas
push
inc
jmp
test
add
out
negl
inc
fwait
mov
into
stos
lcall
push
xor
jl
test
or
ret
loopne
jne
std
daa
bound
pop
mov
push
lea
dec
cmpl
jo
leave
jecxz
fs
or
iret
in
mov
pop
xchg
gs
add
push
mov
xor
inc
mov
xor
sub
addr16
pop
push
out
in
push
mov
mov
cmpsl
mov
es
sub
fstl
stc
lret
iret
lea
jae
mov
shll
push
aad
es
mov
adc
and
dec
fbld
outsb
jl
idivl
daa
mov
pop
push
pop
stc
push
xchg
mov
sub
test
mov
aas
mov
in
sub
mov
jns
outsl
inc
push
ficomps
pop
sahf
pop
out
dec
cmp
mov
mov
loop
mov
cs
sbbl
push
push
js
adc
pusha
xor
dec
movsb
jecxz
xor
jle
aaa
xor
xor
inc
pop
cmp
mov
mov
sub
shlb
clc
dec
push
dec
jno
rorl
shlb
fwait
dec
andb
test
rcll
add
mov
cmp
sahf
and
aam
and
fisubrl
fidivrs
xchg
stos
dec
add
jmp
and
pop
mov
add
gs
movsl
nop
daa
nop
sub
sub
rol
dec
faddl
frstor
push
stos
mov
mov
mov
cmpsl
cmp
adc
dec
cmp
repz
or
subb
adc
mov
out
pop
ss
add
dec
mov
lret
adc
fists
push
test
test
pushf
xrelease
xchg
mov
ret
out
addb
push
fdivrs
jecxz
ja
mov
and
aad
imul
stos
cwtl
js
inc
jns
pusha
and
jmp
inc
push
sbb
mov
adc
sub
push
lcall
xor
pop
jecxz
enter
std
fdivrp
or
adc
leave
mov
lea
hlt
xchg
lret
das
add
addb
cld
sti
insl
rcll
jmp
scas
pop
mov
mov
std
add
jae
and
mov
sbb
sub
pop
movsl
and
xchg
mov
mov
push
mov
sbb
push
or
dec
shl
add
sti
and
sahf
shl
push
push
cmp
mov
sub
xor
mov
push
push
fwait
or
addl
push
pop
out
adc
std
lret
jmpw
cmc
clc
je
cltd
dec
mov
pop
es
inc
jb
fistpll
je
enter
sbb
xchg
jb
idivb
mov
aad
inc
fadds
iret
test
cmpsl
daa
mov
das
and
cmp
fdivs
into
aaa
xor
mov
jb
push
mov
shlb
fistl
mov
and
cwtl
leave
cmp
icebp
xor
fidivs
and
xor
sbb
mov
mov
ljmp
push
jae
xor
test
jmp
call
lcall
jae
xchg
push
cmp
fisubrl
mov
push
xor
sub
ret
xor
add
adc
shrb
xchg
xchg
frstor
mov
insl
pop
mov
fbld
cli
icebp
sub
mov
mov
and
mov
mov
aam
lds
dec
sbb
lock
mov
gs
add
out
rorl
fwait
out
adc
out
sbb
aaa
sub
and
scas
insb
cmp
cmp
icebp
dec
mov
ror
iret
out
es
and
sub
dec
adc
cld
adc
jge
cli
jmp
inc
push
pop
fcomi
in
movsl
or
in
js
test
sbb
aad
lcall
push
negl
leave
nop
mov
jns
mov
cltd
lret
mov
xchg
imul
insl
pop
mov
sbb
mov
push
mov
out
ret
jmp
iret
ja
sahf
pop
fs
dec
xchg
mov
sub
mov
and
mov
jmp
js
fcoms
and
out
cmc
das
push
mov
lcall
cmp
lahf
in
cltd
jmp
push
jne
notl
pushf
cmc
icebp
cltd
xchg
mov
outsb
js
xchg
sbb
xchg
mov
lds
cmp
clc
je
psrld
rcll
push
sub
jmp
cmp
es
test
outsl
inc
push
sbb
adc
adc
push
jl
enter
pop
outsl
xor
xchg
xchg
mov
into
fimull
mov
fsubr
popf
add
xchg
lahf
xor
setl
ror
fisttps
and
loop
les
and
nop
ret
mov
mov
add
movsl
popa
inc
lea
nop
xor
ja
out
lahf
push
js
sbb
adc
clc
cmp
andb
ljmp
mov
ret
xchg
jae
sub
inc
push
push
popa
gs
pop
leave
dec
push
test
mov
js
or
mov
mov
xchg
loop
cmpsb
xchg
mov
aas
scas
outsb
stos
fsts
inc
mov
jne
mov
sub
shlb
push
xchg
ljmp
ret
jae
pop
dec
fwait
and
sub
ds
pop
mov
adc
sbb
or
xor
stos
adc
loop
mov
gs
mov
out
cmp
mov
inc
dec
sbb
out
mov
aas
scas
push
inc
adc
fs
push
fistl
int
add
mov
jl
xor
sarl
pop
sar
xlat
lock
cmp
mov
cmp
inc
mov
sub
insl
insb
jno
cmpsb
lods
pop
mov
xor
jbe
adc
clc
nop
repz
xor
jp
mov
push
lods
jb
iret
movsb
mov
outsl
outsl
pop
adc
jp
dec
loop
fs
int3
push
fwait
add
jo
popf
sbb
xor
fldl
fbstp
bnd
ret
dec
lds
sahf
sbbl
sbb
pop
daa
jl
out
aas
mov
pop
jecxz
dec
pop
movsl
lret
fsubrp
mov
ja
add
imul
jno
mov
subb
and
lahf
sti
sub
shrb
scas
into
stc
pop
or
or
iret
int3
or
pop
or
push
mov
sarl
inc
pop
outsl
jp
inc
test
add
xlat
jp
pop
enter
push
dec
ficomps
sbb
clc
shll
mov
scas
pop
xchg
mov
cld
or
and
je
xor
push
pushl
stos
cmp
std
lds
call
sub
repz
icebp
and
jne
sub
mov
jl
cmp
push
cwtl
jbe
adc
nop
sbb
iret
sbb
dec
lods
add
dec
fnstenv
bound
push
inc
mov
mov
mov
out
adc
push
call
out
dec
xor
pushf
mov
outsl
cmp
cmpsl
imul
mov
test
mov
ljmp
scas
xor
adc
adc
sub
adc
mov
adc
lcall
es
jle
sbb
cmp
js
mov
iret
adc
aam
fs
cmpps
stos
sbb
add
adc
pop
mov
mov
stos
jle
mov
repz
test
decb
data16
cwtl
cmp
mov
push
push
sub
push
imul
xor
aad
shr
pushf
xchg
push
pop
nop
add
cmc
sub
ret
fnsave
fimuls
test
pop
pop
les
xchg
test
mov
cld
sbb
mov
in
mov
xorb
arpl
pop
add
and
out
xorb
add
lret
out
sbb
lret
dec
sahf
inc
stos
daa
jne
jno
aaa
imul
hlt
jae
adc
add
push
icebp
jne
lcall
gs
push
ds
arpl
outsb
iret
jns
xchg
or
jo
pushf
push
push
pop
or
push
or
dec
sti
mov
loope
or
inc
movsl
out
aam
mov
jo
faddp
mov
cmpsb
es
sahf
ret
or
shrl
push
hlt
repnz
xor
xor
jo
mov
sub
or
sbb
fldenv
xchg
sub
xor
aaa
ljmp
lcall
cmp
out
xchg
pop
cltd
leave
lock
xor
addr16
mov
sti
sti
fbstp
sbb
add
mov
scas
add
or
lods
mov
push
xchg
mov
sbb
aaa
stc
aad
imul
pop
iret
jecxz
mov
adc
push
and
lcall
mov
or
les
loope
out
cltd
mov
mov
movsb
mov
scas
fcomip
push
xchg
lock
and
sbb
cmp
popf
xlat
push
jns
or
jle
push
dec
orb
and
fwait
or
in
mov
roll
ljmp
fidivs
mov
adc
mov
push
xchg
xor
mov
xorl
stos
cwtl
subl
sbb
mov
sub
fnstcw
or
lret
fistl
stc
adc
dec
inc
mov
jb
pop
mov
dec
pop
inc
test
pop
dec
dec
or
fbstp
pop
out
push
mov
ds
xchg
xor
mov
jne
fmuls
push
mov
and
xorl
mov
icebp
mov
je
mov
push
inc
sarb
adc
mov
popf
push
and
outsl
ss
jmp
aam
mov
inc
cmp
jle
dec
inc
push
jle
into
adc
mov
mov
inc
out
mov
pop
rolb
fsubrl
mov
jg
test
ret
repnz
inc
aam
ret
sahf
rcrl
mov
shrl
inc
fimuls
fcmovbe
push
lock
pop
dec
clc
push
mov
push
xor
adc
leave
repnz
dec
push
ds
dec
cmp
adc
call
fdivs
addr16
jmp
cmp
jl
mov
aas
lahf
adc
in
repnz
mov
je
stos
sar
call
aas
rcrb
insb
loop
add
push
movb
dec
stc
mov
pop
mov
adc
xchg
xchg
and
mov
mov
enter
cmp
daa
roll
lcall
push
outsb
sub
movsl
subl
jne
sbb
add
sbb
fldl
pop
test
inc
ja
add
cmp
pop
xor
inc
dec
or
in
mov
setns
lret
xchg
mov
hlt
sub
popf
fs
sub
jnp
xor
fimull
subl
jno
add
pop
pushf
mov
outsb
ficoml
movsb
popf
syscall
fcmovnu
shrb
cmpsb
in
fstpt
sub
add
push
imul
or
adc
lea
ljmp
lea
jnp
jo
lds
mov
test
add
scas
aas
mov
lea
bsr
or
cmp
loope
aaa
sbb
cmp
adc
inc
or
cmp
dec
subb
or
cmpb
shl
sar
jae
jbe
add
xor
jge
ja
mov
enter
mov
mov
sarb
lea
mov
jae
inc
leave
and
jg
loop
mov
insb
subl
ljmp
mov
push
or
iret
lret
jno
aad
inc
out
or
sti
fstps
pop
and
shll
sub
imul
sarl
xor
or
hlt
sbb
push
inc
es
xor
pop
lret
xor
enter
mov
fdivl
repnz
inc
insl
cmpsl
insb
mov
loopne
aad
xchg
fidivl
dec
outsb
pop
popf
fwait
mov
xchg
mov
adc
loopne
dec
and
ret
push
mov
sar
pushf
mov
shlb
jle
dec
mov
ret
sub
out
mov
fnstsw
pop
or
inc
and
arpl
sub
sti
test
fcompl
and
push
dec
mov
lods
ret
sahf
sub
aaa
sub
add
out
js
ljmp
or
add
xor
adc
lods
fwait
aam
rcll
jmp
cmp
lcall
orb
out
pop
and
jmp
and
add
jl
sub
jecxz
and
aad
cmp
pop
fucomip
mov
sub
rolb
test
xchg
adc
jle
aas
push
sbb
and
shrl
xchg
imul
mov
xorl
jecxz
push
dec
fwait
repz
dec
jbe
xchg
jmp
lret
mov
fimuls
aam
mov
fs
in
push
xchg
push
sbb
cmp
enter
fsubl
aaa
jae
mov
push
jae
fidivrs
notl
arpl
add
mov
cmpsb
xchg
jmp
jp
out
scas
and
sub
push
seto
mov
mov
pop
and
cli
dec
mull
jo
lds
movsl
pop
mov
insl
aas
out
cli
call
cwtl
std
push
mov
fbld
lret
cwtl
sub
test
movl
bound
add
aam
sub
add
cmpsl
mov
mov
lea
divb
push
push
inc
fisttpll
mov
sbb
aaa
lret
jbe
and
rorl
pop
xor
negb
xlat
andl
mov
daa
negl
ret
sti
and
in
inc
xchg
mov
testb
pop
inc
fcom
adc
or
mov
and
in
mov
cmpsl
enter
dec
rcrb
dec
and
test
cmp
test
push
adc
add
jo
xor
outsb
xchg
lcall
xor
inc
add
popa
inc
fiaddl
sub
adc
add
mov
jmp
mov
mov
xor
mov
xor
dec
lret
andl
iret
das
aas
test
lret
mov
mov
jg
pop
fcomip
xorl
add
fcmovnu
mov
subb
sti
mov
xor
add
lea
ret
shlb
insb
aam
mov
mov
out
mov
loope
orl
push
pop
scas
lcall
xor
cs
mov
xor
jo
mov
inc
add
inc
push
pop
test
cmp
mov
clc
les
ret
lret
cmp
jne
js
mov
jnp
sbb
out
mov
je
orb
lret
jmp
xlat
or
sahf
mov
jmp
pop
and
pushf
sub
add
arpl
jne
add
ja
or
out
pop
push
pop
movsl
out
push
add
pop
int3
push
lock
fisubrl
std
fwait
xchg
pop
pusha
outsl
xchg
cmp
pusha
sub
lds
jle
divb
xchg
dec
xchg
insb
pop
out
xchg
mov
test
jo
lods
jle
shll
fiaddl
out
stos
jnp
std
sahf
xor
pop
aam
xchg
inc
stc
leave
inc
ret
pusha
andl
pushf
mov
mov
mov
xchg
jecxz
and
cli
lds
and
cld
shrb
xchg
push
inc
jno
sarl
sarl
jle
fwait
jle
sbb
pop
lea
in
cmp
shl
cwtl
filds
mov
jae
cmc
cmc
or
inc
cmp
jl
adc
jle
cli
insl
xchg
lea
push
mov
ss
fisttps
or
mov
xchg
mov
dec
stos
popf
popl
xor
subl
testb
shll
je
mov
cmpsl
xchg
jno,pt
shlb
into
inc
push
sti
stos
and
inc
pop
cmp
or
jp
adc
push
rcr
scas
push
aas
jl
push
cmp
pop
test
fidivrs
sub
insb
ljmp
dec
jle
pop
lahf
jle
stos
adc
pusha
test
fisubl
sbb
imul
jmp
mov
mov
xchg
mov
loop
in
push
inc
push
aad
lea
daa
addr16
sbb
or
shl
inc
sub
inc
data16
sbb
or
iret
mov
in
cld
sbb
and
xchg
or
push
xchg
sahf
adc
mov
outsb
ds
repnz
ja
mov
shll
cld
or
cmp
mov
orl
add
into
dec
jae
popf
and
nop
adc
dec
adc
push
or
ja
stc
test
cltd
push
lock
inc
sub
decb
or
jmp
stos
repz
and
cmp
push
repz
insb
lret
iret
jecxz
push
roll
cltd
adc
lock
push
imul
sbb
ja
adc
nop
adc
aad
jae
mov
out
repz
scas
enter
xlat
pop
stos
stc
leave
dec
mov
cmp
mov
fdivrp
mov
jae
enter
pop
imull
cmpb
ljmp
lock
icebp
mov
jl
mov
fnstsw
sti
in
sbb
mov
pop
scas
xor
dec
cmp
fwait
in
ja
mov
movsb
inc
fs
push
push
pusha
or
mov
cmp
xor
insl
dec
push
ret
ret
movsl
je
ret
or
sub
movl
inc
sub
mov
cmp
lea
jg
pusha
sbb
fistl
inc
cmp
bnd
and
inc
mov
or
push
leave
sahf
cld
cwtl
les
cmpsl
fs
or
lret
loopne
push
jmp
mull
mov
sbb
ret
push
out
dec
fcompl
sbb
testl
jg
loop
ret
outsl
jmp
xchg
cltd
xchg
test
lods
xchg
fidivrs
fidivs
inc
out
and
push
std
dec
icebp
in
sbb
sar
repz
adcl
add
fsubrs
mov
imul
add
xor
sbb
aad
or
test
inc
sahf
testb
outsb
mov
nop
add
nop
jge
jl
sbb
dec
mov
and
or
dec
fdivp
mov
out
mov
or
daa
icebp
mov
cmp
sub
cmp
and
mov
gs
aam
sbb
xor
inc
xchg
inc
mov
insb
inc
std
test
cmp
add
dec
mov
pop
mov
test
pop
pop
scas
dec
xlat
in
call
pop
ret
ss
imul
fs
sub
add
xchg
outsl
fldenv
call
cmp
jb
andl
inc
std
xchg
add
mov
mov
sbb
xchg
mov
or
push
and
aam
sbb
inc
mov
sbb
sarl
or
push
or
test
popa
inc
inc
xor
lds
icebp
cmp
jnp
sahf
xchg
aad
enter
aas
push
test
sti
xchg
sbb
pop
lds
inc
push
jecxz
mov
jne
jge
or
cmp
xor
fcoms
clc
es
out
repnz
pop
sub
inc
mov
dec
pop
enter
imul
and
jae
xor
test
decl
push
cwtl
jb
cld
std
pop
push
lds
push
dec
xor
pop
push
jmp
and
pushl
inc
mov
lea
xor
inc
in
cmpsl
int
mov
cmp
cs
jl
sbb
pop
movsl
les
cmp
xchg
repz
mov
mov
cld
mov
pop
cmp
int
and
bsf
ffreep
out
ffreep
adc
xor
mov
cli
mov
pop
xor
push
pop
push
loop
mov
ds
mov
icebp
xchg
sahf
pop
adc
add
out
sub
xor
cmp
insb
aad
sbb
mov
roll
insb
sti
push
addr16
paddsb
add
loope
pop
dec
test
jne
nop
jl
out
jbe
push
or
pop
xchg
dec
lcall
das
xchg
jmp
mov
aas
cmp
cmc
movsl
mov
inc
xchg
movsb
add
in
add
nop
scas
ret
xchg
xor
shlb
jge
das
sbb
outsb
xor
or
or
inc
lods
xchg
pop
dec
pop
xchg
xor
aad
stos
negl
dec
mov
sub
mov
jne
jb
fcompl
sub
sub
je
or
sub
daa
imulb
jae
lret
xchg
lock
jbe
lahf
xchg
jge
push
cmpsb
sbb
pop
insl
inc
inc
sub
jg
pop
call
int3
mov
xchg
mov
dec
xlat
aad
and
inc
aad
lahf
inc
out
std
pop
inc
cmp
dec
pop
jno
loop
xchg
pop
dec
cmpsl
ret
mov
inc
cld
in
mov
cli
out
inc
leave
in
dec
pop
xor
js
sub
stc
jge
push
mov
mov
pushf
xchg
test
in
popa
xchg
cltd
out
push
sbb
mov
sbb
add
push
cmpsl
loope
or
xchg
movsl
and
stos
bound
out
rorb
insl
in
inc
in
xor
cmp
cmp
add
or
mov
mov
gs
popa
adcl
dec
cld
test
insb
fmuls
sub
sub
push
sbb
or
add
imul
insb
inc
int3
cmc
ss
leave
je
adc
sub
js
pop
push
push
iret
js
cmp
je
into
mov
mov
pop
imul
push
and
jecxz
or
pop
inc
inc
and
fisubl
aad
in
lret
repnz
mov
and
fs
dec
add
leavew
out
inc
fldcw
jmp
pop
inc
push
adc
lahf
xor
mov
jecxz
cli
fistps
push
xchg
mov
aad
aas
enter
or
aam
jbe
out
inc
fistps
adc
call
loop
shlb
test
jge
outsl
cmpl
sub
pop
addr16
ss
xor
insb
icebp
scas
nop
xchg
mov
pusha
cmp
xlat
or
es
fdivr
popa
lods
out
cmpsb
push
or
fmuls
jp
sbb
loope
ds
enter
data16
shrb
cmp
push
xor
cs
adc
push
pop
adc
xor
je
inc
inc
pop
iret
add
stos
pop
aam
push
jge
mov
int
dec
popf
addl
xor
push
out
dec
push
call
jmp
xchg
lcall
push
mov
xlat
jnp
cmp
and
cli
insl
or
and
lahf
xor
lock
mov
lds
into
ffreep
xor
testl
imul
int
xchg
mov
jnp
or
pop
gs
or
gs
mov
dec
xchg
test
mov
sti
pop
aas
iret
sbb
dec
xchg
cmpsl
and
mov
mov
rorb
leave
mov
mov
cli
ret
mov
fidivrs
dec
loop
dec
adc
jns
sbb
and
adc
pushf
dec
xlat
ljmp
fs
mov
and
inc
mov
outsb
sarl
xor
sti
mov
orb
lahf
outsl
mov
and
rcrb
xor
mov
and
int
push
jl
cmp
mov
addb
pop
ret
fdivrs
add
fstpl
push
imull
cli
adc
cmp
adc
int
enter
mov
adc
test
jmp
je
mov
jnp
mov
mov
jo
out
roll
das
adc
rclb
ljmp
xor
mov
and
notl
sub
or
int
iret
jae,pn
jnp
push
andb
pmaddwd
mov
shll
sbb
mov
jge
jns
mov
dec
mov
mov
stos
fdivrl
sub
aaa
mov
sub
lods
dec
pushf
lret
inc
xchg
test
int3
lods
and
inc
lock
cwtl
jnp
inc
jge
aas
inc
aad
pop
pop
push
cmp
push
popa
hlt
loopne
sbb
sub
push
pop
movsl
xchg
mov
test
xlat
dec
sbb
inc
add
xchg
repnz
jl
repz
sub
sbb
xchg
jecxz
adc
dec
rol
jge
popa
push
jg
inc
add
dec
icebp
sub
xchg
mov
push
mov
imull
addl
xchg
stc
jmp
dec
sbb
push
sti
push
mov
push
mov
mov
jle
ftst
xchg
or
je
ror
into
repz
or
mov
jo
aam
bound
popf
push
add
inc
add
testb
and
inc
inc
fmuls
lods
lahf
nop
mov
mov
jle
add
inc
movb
pop
mov
ret
movsb
xor
hlt
xchg
inc
cmpsl
movsl
sub
shll
jb
or
push
jp
jns
sti
or
scas
xchg
fbld
fs
neg
out
ret
fmul
xor
outsl
xchg
shr
xchg
filds
jle
aas
sbb
add
jecxz
in
gs
sub
or
mov
adc
dec
aad
jle
jne
dec
sub
cmp
sbb
sti
mov
ds
int
ret
push
data16
mov
in
jecxz
fwait
or
ds
out
filds
nop
inc
sbb
cmp
jp
mov
jbe
mov
sti
cmp
in
out
sub
lret
and
icebp
xor
jnp
outsb
pop
mov
push
dec
shlb
inc
pushf
lret
mov
fimull
dec
aaa
popf
addr16
push
mov
adc
sub
jae
cmp
popa
icebp
or
xor
insb
test
int3
mov
jg
pop
or
fs
or
and
jge
and
jns
andb
xorb
andl
and
hlt
sub
and
orb
jne
pop
jnp
xchg
inc
dec
aas
sub
push
cmp
scas
sub
das
adc
cmp
ficoms
rcrb
lds
inc
mov
test
cli
xchg
fstpl
lret
cmp
cmpsl
mov
call
xor
mov
ss
int3
push
imul
aas
pop
xchg
fsubrs
inc
adc
loope
aaa
mov
xchg
lods
loopne
ljmp
nop
clc
lock
inc
cmp
imul
mov
lods
mov
or
jle
xor
push
xchg
dec
repz
aaa
push
mov
xlat
push
adc
xchg
and
sbb
push
add
fs
jmp
sbb
xor
gs
push
leave
cmp
mov
rcrl
ja
mov
xchg
pushf
mov
or
and
pop
cli
aas
and
push
mov
or
dec
fmull
mov
iret
mov
push
das
sbb
sarb
int
repz
outsb
cmc
pop
sbb
lcall
in
jmp
mov
pop
mov
dec
mov
add
fisubs
repz
test
test
sbb
lret
ret
push
sub
outsl
push
out
sub
pop
imul
mov
lcall
ret
jp
pop
adc
and
imul
rcl
push
push
dec
sbb
aas
mov
lea
out
test
repnz
lods
sbb
pop
cmp
into
sbb
data16
push
aaa
mov
std
and
aad
pop
add
stos
jg
sbbb
in
pop
mov
jo
rorb
xchg
int3
ret
mov
rcrl
pop
push
les
aas
mov
nop
in
or
and
test
mov
loop
shll
cmp
xor
dec
fwait
push
es
dec
lret
push
outsb
ret
sbb
xor
pop
mov
jns
xchg
test
and
daa
xchg
jae
or
mov
sbb
cmpsb
rclb
hlt
outsb
jg
push
mov
add
push
xchg
mov
scas
jo
adc
out
xchg
or
int3
pop
cwtl
in
inc
xchg
inc
or
mov
dec
mov
int
shll
inc
xor
in
pop
jp
xor
out
xorl
mov
test
sub
aad
or
xlat
std
jp
jo
dec
leave
sbb
popa
lcall
shr
lds
aaa
xor
or
scas
cltd
adc
adc
fxch
in
mov
outsb
roll
xlat
ret
cmp
pusha
out
jp
aam
push
and
add
dec
sub
jg
jecxz
rclb
jo
xchg
cmp
nop
dec
sbb
out
mov
imul
inc
lock
cmp
scas
cmp
sbb
bts
mov
mov
pusha
insl
push
and
xor
sub
push
scas
and
mov
daa
cmpsl
sbb
inc
mov
mov
aas
lds
or
jne
xchg
movsl
mov
add
mov
xchg
adc
fsubrs
cmp
add
and
aam
sahf
movsl
repz
popf
addr16
push
aas
cmp
stc
push
in
mov
sahf
pop
pop
sub
sbb
imul
scas
mov
pushf
clc
lahf
lods
jno
aaa
push
fnstcw
pop
inc
and
data16
inc
ds
push
roll
idivb
in
push
stos
xor
repz
and
mov
xchg
sub
pop
add
sub
stos
xor
xchg
into
shlb
push
sbb
shr
or
jmp
xor
inc
xor
push
cmp
imul
rcll
cltd
xchg
nop
leave
in
mov
sarl
stos
fstpl
int
and
aad
repz
xor
jecxz
fst
int3
ss
es
fmul
ljmp
sub
pop
cmp
movsl
inc
imul
sub
add
cmpsl
or
xchg
sbb
mov
les
das
pusha
ja
xor
insl
pop
je
push
sub
mov
push
fcomi
fsts
xorl
stc
sbb
pop
jns
jne
sub
fwait
sbb
pop
stc
and
lock
idivl
xchg
out
adc
jmp
int3
rorb
add
dec
stc
add
adc
and
push
sub
and
fildll
push
add
jno
and
xor
lahf
int3
jne
and
test
mov
shlb
xor
mov
lcall
adc
mov
add
ret
pop
fxch
jl
adc
rcrl
cmp
std
xor
popa
pop
xchg
xor
and
mov
push
cmp
fistps
and
popa
es
add
out
in
outsl
sbb
es
in
test
or
sub
jecxz
mov
jl
push
out
and
aaa
push
popa
mov
pop
xchg
inc
sbb
jl
shll
aam
aad
cmp
insb
int3
sbb
out
mov
out
in
fcomip
adc
dec
mov
lahf
jle
jle
push
xor
into
pusha
in
cltd
enter
rcl
into
adc
inc
pop
out
mov
lahf
rorl
fwait
sub
cmp
jmp
inc
xor
incl
aaa
dec
pop
xchg
xor
out
cmp
int3
cli
lods
dec
add
push
mov
out
xor
cmp
mov
pop
leave
xor
mov
jl
add
cld
push
aam
mov
jecxz
scas
lock
enter
mov
sbb
xor
rcrl
cld
add
push
int3
sahf
leave
ret
inc
test
xchg
leave
and
mov
aad
and
sbb
adc
pop
xchg
mov
scas
in
pop
xchg
test
mov
xchg
repz
dec
sbb
push
rcrb
push
mov
rcr
mov
sbb
frstor
mov
lods
call
jl
sub
repnz
rcrb
jns
push
adc
adc
push
fld
outsl
fistps
xor
cmpxchg
scas
mov
ret
cmp
in
sti
ss
ss
test
rcrl
cld
fs
cmp
rcr
jbe
adc
imul
cmp
cli
dec
lock
push
loopne
jno
dec
fdiv
lea
push
fs
lret
aas
pop
data16
call
fistpl
notb
shrl
cmpsb
aas
dec
arpl
lods
sub
dec
cli
pop
mov
fidivs
dec
mov
aaa
push
fsubr
fidivs
dec
scas
ret
adc
popa
push
test
fs
andl
xor
and
pop
jo
out
or
xor
jae
cmc
xchg
or
or
dec
push
jp
adc
push
scas
test
mov
cmpsb
mov
arpl
inc
ret
scas
inc
sahf
mov
xlat
hlt
xchg
mov
inc
mov
aad
scas
dec
lahf
push
sub
mov
test
push
pop
jg
mov
enter
push
dec
pop
adc
sub
adc
cmpsb
and
jmp
jbe
xchg
cli
cmp
ficoms
and
pusha
pop
enter
cld
call
or
push
jo
cmp
mov
outsl
and
mov
mov
into
aas
jecxz
push
pushf
dec
mov
test
jge
cmp
rclb
je
mov
bound
outsb
mull
mov
jnp
jns
aam
mov
das
push
test
sbbl
pop
aaa
pusha
sub
lcall
mov
outsb
adc
xor
stc
mov
ja
sbb
and
stos
adc
sbb
jge
inc
hlt
xchg
icebp
test
push
fisttpll
loop
ffreep
mov
fdivrs
pop
mov
inc
in
ss
pop
push
mov
jmp
xor
adc
or
iret
mov
xor
in
in
flds
out
mov
add
es
or
rcll
test
pop
shr
repnz
sbb
jg
mov
xor
xor
popf
fs
cmp
push
inc
sbb
mov
adc
jl
outsb
sti
shlb
mov
mov
not
pop
and
sub
rcrb
daa
xorb
or
ret
cmp
or
adc
leave
jo
inc
pushf
iret
mov
push
inc
lods
ds
in
pushf
sbb
pop
sbb
mov
pop
les
imul
push
shl
xchg
mov
mov
subl
mov
push
xchg
jge
iret
push
jae
or
lahf
arpl
lret
ss
test
rcll
dec
insb
icebp
andb
or
sub
fwait
lock
fwait
stos
xor
xchg
jge
repz
shl
xchg
inc
cli
jecxz
mov
pop
ret
add
aaa
jg
enter
aam
pop
loop
push
inc
mov
add
mov
insb
jmp
popa
xor
scas
cli
add
in
fmulp
int
xor
rep
xchg
call
ss
clc
mov
mov
dec
cmp
push
rcl
pop
adc
push
xor
mov
shr
xor
and
mov
add
pop
cmc
lock
repz
pop
cmp
cmp
stc
sub
addr16
jecxz
inc
arpl
cmp
lods
pop
enter
mov
cs
mov
and
push
jle
in
or
cwtl
ret
mov
or
frstor
dec
les
int3
fstps
jl
xor
ds
xor
push
mov
and
pop
test
xor
push
dec
jno
inc
les
lds
sbb
fsts
bound
xor
xchg
movsl
xchg
dec
adc
aad
int
mov
dec
lods
jmp
adc
dec
loop
mov
pop
mov
jl
scas
rcrb
add
or
outsb
scas
into
fnstcw
cli
sub
aad
mov
sbb
cmp
lods
ljmp
adc
cmp
or
or
mov
aam
test
and
loop
sub
jecxz
scas
ja
sarb
mov
orl
inc
hlt
jl
sahf
mov
xchg
jb
or
pushf
jl
xchg
pop
pop
xchg
aad
daa
out
mov
mov
pop
xchg
int
movsl
mov
push
sub
testb
fwait
and
outsb
test
dec
shll
fwait
cmp
rcll
scas
push
mov
lods
orl
jne
gs
xchg
mov
in
dec
jo
sbbl
test
mov
jle
test
shll
imul
inc
xor
push
and
les
fwait
mov
add
or
outsl
lea
in
inc
and
xchg
dec
vunpcklps
out
adcl
jnp
inc
cmp
sub
fld
sub
mov
add
lods
and
xchg
jb
in
test
pop
incl
mov
sub
jp
data16
inc
pop
mov
jne
cmc
sbb
rolb
arpl
mov
ja
mov
mov
adc
mov
andb
pop
popa
dec
sbb
mov
mov
lahf
dec
and
xchg
arpl
mov
imul
fwait
pop
je
jns
sar
mov
cmp
sub
test
stc
stos
inc
add
pop
xor
je
mov
out
stc
sahf
mov
stc
cmp
rorl
mov
outsb
in
pop
cmpsb
cmp
cmp
dec
adc
out
xor
movsl
jl
cld
fs
fldcw
das
dec
mov
scas
test
mov
rcr
pop
scas
mov
jp
dec
xor
adc
inc
cmp
nop
or
sbb
inc
pop
les
push
add
cmp
push
xchg
mov
sub
jnp
mov
popf
inc
and
leave
add
pop
lds
sub
mov
jg
das
mov
lcall
sahf
cmp
push
fldl
sub
jb
pop
pop
dec
call
lods
adc
aaa
adc
imul
or
cmp
or
jecxz
and
test
inc
and
fldz
fbstp
sub
xchg
jle
fidivrl
inc
dec
lret
out
xchg
popa
adc
iret
push
adc
arpl
ficompl
dec
out
inc
rolb
mov
push
sub
fdivrs
pop
arpl
inc
ret
fsts
adc
mov
cmp
jge
out
and
sbb
fwait
push
cmc
ljmp
mov
cmp
out
jb
sub
xchg
cmc
add
popf
mov
sbb
sbb
and
adc
jae
mov
std
mov
xchg
arpl
call
movsb
cmp
cmp
inc
push
sub
rol
or
sbb
or
in
add
sub
pop
sbb
xchg
push
lret
mov
adc
das
lcall
cs
or
cli
pop
push
dec
shrb
inc
cmc
xor
adc
mov
or
or
xchg
popf
dec
dec
pop
pop
shrl
push
mov
adc
sbb
fcmovbe
xchg
dec
in
mov
jp
ret
jmp
mov
iret
or
lret
ret
stos
fbstp
xor
ljmp
pop
insl
mov
pop
ljmp
ret
jl
aam
enter
das
xor
pop
and
mov
mov
in
xor
sbb
push
jecxz
insl
scas
xchg
mov
push
sar
push
sbb
roll
or
xlat
test
or
xchg
inc
sbb
mov
xchg
rcrl
call
stos
lret
movsb
xor
loop
push
enter
mov
cmp
and
loope
adc
add
inc
scas
int3
inc
mov
pop
pusha
dec
xor
mull
sub
hlt
sub
mov
inc
clc
stos
dec
bound
sahf
lea
pop
sbb
mov
jmp
sub
jmp
popf
mov
popa
mov
add
pusha
stos
add
mov
andl
mov
pop
jnp
cld
fdivrl
test
fs
push
jne
bound
dec
dec
shlb
out
xchg
and
in
xchg
mov
addr16
cmp
ffreep
adc
js
add
pop
jecxz
adc
pop
cmc
stos
push
cmp
scas
lahf
sub
lock
fstpl
push
stos
xor
fcmovnu
stos
repnz
lcall
mov
xchg
mov
fwait
push
sbb
mov
mov
mov
cmc
gs
inc
sbb
mov
add
pop
jo
push
mov
fsubr
add
pop
cmp
rorl
enter
add
xchg
cmp
test
pop
xchg
add
popa
dec
cwtl
fstps
loop
xchg
and
push
mov
xor
cmp
scas
sub
mov
jbe
int3
outsl
fnstsw
add
xchg
sahf
fs
pop
or
sahf
lcall
dec
add
mov
idivb
in
mov
lds
loop
xor
lods
pop
add
sub
sahf
lock
mov
ljmp
add
orl
push
adc
xor
inc
inc
lds
scas
mov
mov
ja
sbb
mov
mov
or
lret
push
push
push
fldt
xor
pusha
ffreep
cmp
push
xchg
mov
push
sbb
jecxz
scas
lahf
lret
jae
ret
lds
cmp
rcrb
push
xchg
rclb
inc
xchg
gs
sbb
dec
out
clc
xor
add
cli
enter
call
cmp
and
js
jo
cli
clc
js
movsl
mov
insb
shrl
cmc
aas
xlat
dec
sub
aas
xchg
adc
mov
cld
pop
jae
inc
jo
or
idivl
pop
sub
test
hlt
out
movsl
push
repnz
jnp
lret
and
jge
jmp
and
xor
std
push
mov
loopne
cmp
ds
insb
pop
adc
lea
mov
dec
sub
lock
loop,pt
mov
repz
sub
mov
pop
sub
test
fwait
mov
arpl
es
popa
sahf
lret
cmp
xchg
xor
sub
dec
cmovg
cmpsl
idivb
and
scas
mov
mov
jg
fldcw
cli
mov
jle
mov
push
fstpl
jae
fcmovnu
mov
lret
mov
std
jne
xchg
jne
mov
test
dec
cmp
adc
mov
jmp
xor
mov
pop
daa
xor
fiadds
jnp
mov
mov
lcall
push
lods
push
mov
adc
cmp
mov
xchg
inc
xchg
dec
fists
ficompl
inc
and
add
mov
pop
pmulhw
mov
xchg
imul
xchg
jg
rol
dec
mov
sti
sub
or
push
mov
loope
xchg
test
xchg
cltd
lds
cwtl
lods
xorb
outsl
out
rolb
mov
sbb
add
pop
lock
sahf
leave
push
adc
data16
imul
inc
add
jp
in
adc
test
test
mov
push
dec
enter
mov
cwtl
jg
into
testl
inc
rcr
es
mov
mov
loop
fisubl
push
nop
repz
int3
sbb
pop
mov
faddp
pop
xchg
sbb
xchg
insl
cltd
sub
in
inc
scas
adc
push
insl
fwait
mov
pop
add
or
insl
mov
dec
es
add
stc
leave
gs
inc
xchg
test
push
push
inc
lret
jmp
cmp
lret
and
pusha
jae
sbb
pop
outsb
sarl
aas
mov
ja
cmpsl
push
imulb
pusha
inc
mov
jne
cmp
daa
mov
xchg
push
addl
sub
popf
dec
xchg
xchg
jmp
or
jp
outsb
push
fsubrs
or
jg
mov
jmp
mov
clc
adcb
leave
lahf
roll
jp
or
jle
jns
stos
or
xchg
inc
cmp
fyl2xp1
xchg
ficoms
add
ficoml
sbb
movsb
cld
cld
pop
sbb
sub
fnsave
sub
out
or
ljmp
ja
out
cwtl
scas
add
testl
js
outsl
fdivrl
cmpsl
test
or
or
jne
es
hlt
rorb
pop
xor
add
pop
or
sub
orl
fdivrs
out
dec
fnstsw
test
fists
mov
jl
pop
cmp
or
inc
adc
jnp
cltd
stos
hlt
sbb
sub
fcoml
push
mov
pop
fstp
mov
aad
add
mov
add
xchg
inc
das
jge
loope
push
ljmp
push
inc
dec
xchg
in
mov
pushf
xor
dec
mov
fsub
rcl
sub
adc
jecxz
arpl
dec
test
loop
pop
lcall
fcoms
ret
bswap
mov
push
cwtl
xor
inc
shll
add
adc
pusha
add
lock
test
pusha
stos
stos
hlt
jp
pop
sar
mov
test
cmp
cmpl
cmpsl
xor
mov
pop
mov
pop
dec
mov
in
ja
mov
mov
test
insb
scas
icebp
jecxz
lret
cmp
push
repnz
jne
jg
leave
sbb
int3
or
push
or
call
in
inc
fcoms
int
call
outsb
xor
iret
mov
push
cli
sub
or
ret
loopne
adc
inc
xorb
shll
stc
add
faddl
or
adc
fcoml
sar
xor
lcall
pop
lock
inc
fimuls
lahf
jne
mov
fists
adc
pop
lcall
stos
sub
pop
xor
push
les
roll
lcall
in
subl
outsb
and
psraw
pop
cltd
jb
pushf
lret
mov
add
movsl
dec
rolb
sbb
cmp
and
lcall
aaa
mov
add
int3
xchg
int3
sub
inc
sbb
shll
les
fstp
pusha
daa
imul
dec
imul
add
es
mov
aaa
xchg
fbld
testb
sub
rcr
mov
sub
jge
cs
jb
or
jle
mov
and
inc
out
and
fisubrs
push
movsb
sti
or
popa
les
mov
loop
xor
sbbb
dec
xor
out
shlb
dec
loope
hlt
or
mov
push
shl
add
cmp
insb
sbb
ret
roll
pushf
jp
ljmp
lret
cmp
outsb
incb
mov
or
bound
test
mov
push
or
testl
xchg
in
test
lods
or
jno
ret
inc
es
adc
dec
sahf
lods
sub
or
mov
push
jo
pop
cmc
cwtl
cmp
push
or
sbb
mov
sub
ss
and
outsl
insb
lods
mov
xchg
push
aam
cmp
jno
push
int3
lret
push
sbb
sbb
jns
sbb
xor
mov
mov
enter
arpl
or
adc
test
inc
fxch
and
or
pop
sub
fnstenv
add
jge
sbb
insl
ret
insb
xchg
push
add
ljmp
in
adc
xor
loop
es
pop
push
pop
inc
mov
shrb
xor
orl
enter
pop
repz
pop
inc
out
xchg
pop
mov
push
ss
xchg
dec
aas
pop
sub
or
lahf
adc
in
cli
js
jnp
add
mov
adc
push
or
adc
mov
iret
mov
dec
push
dec
jmp
dec
mov
xchg
mov
and
xchg
mov
mov
jae
mov
lods
inc
and
cmp
and
out
es
push
push
shll
addb
mov
push
ja
hlt
mov
mov
mov
cmpsb
dec
ds
adc
ret
jle
xor
push
in
or
les
outsb
in
add
jae
xor
sub
repnz
stos
mov
flds
out
gs
in
jnp
cs
insb
mov
test
push
jnp
fcmovnbe
ficoml
stc
icebp
inc
dec
xor
repz
scas
mov
add
xchg
push
lods
pusha
pop
clc
xor
jno
cli
lcall
or
mov
jle
xor
or
push
cmp
cwtl
ret
outsl
add
int
stos
fisubs
add
test
stos
sti
icebp
arpl
xchg
xor
adc
adc
push
inc
and
lock
cmp
xor
lret
pop
xchg
jg
push
mov
outsl
mov
and
stc
xor
out
orb
imul
xor
repnz
xlat
sbb
push
xchg
and
jb
mov
scas
dec
aam
mov
sti
inc
frstor
mov
adc
pusha
gs
fldenv
outsl
daa
repz
sbb
scas
lds
inc
js
int3
addl
popa
mov
fisubl
lcall
sub
outsb
pop
out
hlt
cmpb
or
push
add
mov
mov
mov
in
xorb
popf
xchg
mov
out
hlt
pop
rorl
hlt
je
dec
and
ljmp
pop
pop
outsb
fldl
inc
arpl
inc
and
push
and
scas
lahf
cmpl
sub
add
pusha
jmp
pop
inc
clc
inc
or
inc
jp
mov
and
sub
cltd
push
clc
iret
dec
lock
pop
dec
mov
out
loopne
ret
fcmovbe
js
mov
cwtl
or
fisttps
repnz
dec
or
push
dec
mov
sarb
inc
push
es
push
pop
pushf
shl
adcl
repnz
dec
popf
repz
iret
scas
dec
mov
mov
mov
pop
pushf
cmpsl
imul
fwait
and
mov
jmp
xchg
js
mov
xlat
push
test
and
xor
push
stos
push
mov
dec
inc
cmp
std
sbb
jbe
jne
test
frstor
pushf
xor
mov
sub
dec
push
jg
cmpsl
xor
and
aaa
fmull
xchg
lcall
jp
cs
mov
ja
dec
sub
jno
pusha
push
jno
mov
xchg
fsubrl
add
in
iret
add
xchg
mov
fcmovu
inc
pop
mov
mov
push
addr16
mov
mov
mov
mov
inc
fld
mov
aaa
shll
mov
scas
push
and
pop
push
jl
out
fldenv
push
add
dec
jmp
icebp
xor
cmp
pusha
push
sub
mov
inc
mov
js
mov
adc
jbe
jmp
xchg
adc
inc
cmc
mov
add
sbb
and
pop
shrb
mov
cwtl
stos
mov
pop
mov
pusha
sub
mov
mov
xchg
xchg
cmp
insb
sbb
or
pusha
leave
je
rclb
dec
gs
cmp
sub
sbb
dec
mov
fcmovnu
mov
fdivrl
das
mov
add
sub
pop
jmp
jl
jnp
sbb
rol
jae
cld
stos
scas
xchg
mov
fbld
sub
pop
adc
cmp
lea
cmpsb
push
pop
xchg
sub
pop
mov
sub
enter
out
push
push
dec
xchg
sbb
test
xchg
or
idivb
sti
pop
mov
cld
cmpsb
out
dec
xor
xchg
xor
mov
scas
fidivrl
mov
mov
xchg
nop
push
orb
add
shr
sub
ds
test
xchg
xor
adc
xor
cmp
push
pop
push
and
scas
insb
xchg
or
shlb
xchg
shr
push
push
mov
or
aad
adc
xchg
pop
xchg
daa
dec
inc
imul
dec
sbb
insl
jae
sub
sbb
jb
sarb
xor
inc
rcrb
pop
xchg
outsb
push
fsub
and
sub
in
mov
cmp
je
pushf
fimull
in
stos
push
mov
mov
sbb
jle
fcoms
lahf
mov
or
jecxz
test
xor
jns
mov
out
jnp
lock
jno
inc
jl
scas
mov
imull
mov
mov
cwtl
cwtl
je
push
jp
stos
std
rcrl
nop
notl
jmp
lea
xchg
xchg
mov
or
or
int3
loope
mov
cltd
lret
testb
cmpsb
lret
mov
cmp
jmp
jecxz
jl
repnz
popa
aam
push
xlat
repz
mov
fidivrl
cmc
xor
lods
scas
mov
add
sbb
rcrl
mov
add
add
add
pop
insb
outsl
add
inc
sbb
jle
rorl
fs
cwtl
mov
dec
and
arpl
mov
jns
dec
sbb
xchg
shl
notb
icebp
outsl
popa
insl
sti
or
pusha
jmp
sbb
push
jbe
sahf
xor
sti
imul
and
sub
inc
cmp
scas
push
loop
setns
sahf
test
movsb
push
clc
dec
jbe
push
aam
setno
jl
mov
sbb
mov
dec
mov
shlb
cmpsb
orb
ror
push
imul
adc
inc
int3
jg
stc
movsl
out
sbb
ret
lret
push
or
shlb
and
jbe
mov
xorl
lods
or
movsb
jne
push
sub
mov
or
lds
xchg
pusha
mov
mov
movd
dec
sbb
mov
jne
pop
adc
mov
lock
arpl
inc
lods
mov
inc
push
cmc
pop
dec
bound
ljmp
fnstsw
ja
add
push
mov
shrb
fucomp
es
lds
add
jge
pop
cli
or
and
mov
lock
push
ret
fwait
xchg
lea
cmp
stos
mov
addb
push
adc
rcr
add
jg
fs
movntq
push
clc
jge
adc
mov
adc
mov
or
jg
adc
jg
test
nop
divb
pop
fld1
cmp
clc
mov
bound
imul
into
lahf
push
adc
push
or
and
ror
rclb
fmul
lods
fdivrl
int
jb
mov
push
imul
xchg
dec
in
sbb
sub
sub
pop
lea
fldenv
es
push
arpl
mov
cmpsb
xchg
outsb
lds
icebp
rcrl
add
mov
add
daa
cmp
shrl
sub
out
mov
and
push
cwtl
or
lods
scas
dec
fnstcw
mov
in
sbb
mov
leave
mov
dec
lods
ja
fwait
mov
xchg
xor
xchg
push
shll
and
dec
adcl
cmpsb
aaa
pop
test
addb
push
and
push
lret
xor
cmc
adc
jne
jmp
stos
mov
inc
and
loope
out
loopne
insl
push
jge
cmp
mov
cmp
xor
mov
cmp
xchg
sub
push
lret
in
xor
sub
jecxz
bound
jge
inc
or
mov
push
loope
jae
cmp
mov
or
jecxz
sbb
push
add
add
jne
test
adc
push
cwtl
or
xchg
lcall
push
ret
leave
dec
pop
sbb
cltd
mov
mov
jecxz
pop
into
daa
push
pushf
or
xchg
mov
popf
xchg
adc
dec
pop
sbbb
and
hlt
outsb
add
insb
flds
loopne
and
and
dec
mov
imulb
add
mov
add
or
xchg
out
xchg
inc
clc
mov
push
adc
or
fldt
fcoms
in
dec
imul
insb
ss
les
cmp
jae
mov
repz
mov
push
mov
push
enter
push
add
sub
scas
ss
push
in
js
jmp
test
js
xchg
jge
sub
mov
out
addr16
inc
movsb
fiaddl
test
xchg
jae
mov
int3
aam
insl
push
dec
enter
xor
fcomps
pop
jnp
rolb
shrb
mov
cmpsl
xchg
dec
push
mov
jecxz
jg
xchg
clc
xor
loop
add
xor
xchg
mov
push
imul
inc
pop
pop
dec
pushf
mov
insl
int
ds
mov
out
adc
xor
mov
test
xor
and
out
rorb
call
mov
sbb
pop
add
daa
xchg
push
adc
push
lahf
ds
popf
enter
lds
mov
lock
push
fdivrl
arpl
xor
iret
inc
mov
sub
xchg
cmp
pop
pop
jecxz
loop
lahf
nop
mov
hlt
into
popa
fisubrs
cmp
pop
or
push
mov
aad
leave
fisubl
fisttpll
inc
xor
imul
mov
scas
int
pop
repnz
cld
sub
scas
sbb
jne
or
outsb
test
scas
jae
fcoml
and
mov
les
ret
test
or
mov
ja
cmc
push
inc
mov
adcb
jmp
jle
out
out
rclb
in
inc
dec
popf
shr
jle
mov
push
in
fxch
jno
jecxz
sar
ret
sbb
out
stc
xchg
gs
lret
cmp
mov
sbb
pop
cltd
imul
sub
cwtl
adc
jl
xchg
add
xchg
inc
clc
int3
xchg
jp
cmp
fwait
dec
inc
mov
test
jne
lret
mov
rclb
or
shlb
push
ss
add
loop
jnp
outsl
cli
test
cld
jno
push
jg
add
lds
pusha
in
dec
cmp
neg
dec
imul
cmpsb
and
cltd
mov
arpl
std
cmp
or
das
lock
cmp
mov
xor
lcall
dec
push
pop
xor
cmp
jl
dec
pushw
ss
icebp
pop
sbb
mov
mov
gs
sbb
push
cmc
imul
movsb
jle
outsl
sbb
mov
repnz
mov
jle
mov
xor
mov
scas
jmp
adc
add
jmp
mov
push
les
clc
imul
shrl
lcall
inc
mov
jle
sub
fcoml
pop
add
shrb
insb
ret
jecxz
ds
add
shlb
push
adc
daa
in
xor
pop
jno
lods
in
jg
mov
push
adc
mov
jecxz
in
add
cli
mov
jbe
mov
mov
pop
hlt
xor
or
push
leave
adc
pop
insb
imul
pop
andb
rorl
les
push
mov
call
pop
nop
inc
bound
test
insb
mov
imul
and
mov
xchg
lock
mov
pop
adc
test
pop
xchg
pop
cmp
je
xor
jns
cmp
cs
cs
leave
push
cmp
xchg
sub
push
adc
std
pop
fcomip
bound
cli
adc
test
or
sub
sub
dec
mov
mov
mov
push
mov
xor
into
rcll
es
adc
jg
mov
mov
cwtl
cmpb
xor
push
pop
mov
pop
shll
sbb
add
mov
pop
adc
sbb
test
sti
xlat
scas
icebp
dec
rcll
sub
jl
arpl
lods
jns
aas
cmc
call
pop
push
mov
mov
roll
mov
js
xchg
xor
xchg
adc
lcall
xchg
dec
fucom
xchg
cwtl
pop
mov
push
fisttpl
std
call
and
sbb
sahf
xor
ljmp
notl
lcall
icebp
mov
int
mov
add
push
insl
hlt
xor
adc
mov
add
ss
sub
icebp
rorl
cmpsb
xchg
js
test
push
outsl
mov
dec
mov
and
or
push
rcr
lds
imul
push
jl
push
or
rcrb
jo
push
je
ljmp
pop
fisttpll
sbb
sub
sbb
iret
testl
mov
inc
mov
add
aam
push
adc
loopne
cwtl
sbbb
mov
mov
shld
lahf
cmp
fnstenv
sahf
push
inc
in
and
lock
rclw
sub
push
cmpsb
sbb
lret
or
mov
inc
adc
xchg
dec
or
mov
mov
aas
add
in
dec
test
xchg
je
out
repnz
sbb
push
in
sbb
cmc
loopne
and
mov
mov
dec
sub
jbe
mov
mov
fwait
movsl
cmp
sahf
int
xor
mov
sbb
push
sub
sarl
mov
mov
mov
mov
pop
jnp
pop
dec
xchg
aas
or
mov
iret
push
cs
test
rep
mov
frstor
push
andb
arpl
jl
mov
jecxz
sbb
add
pushf
jle
inc
leave
je
xlat
loop
lret
movsb
cmp
js
add
xchg
pop
int
adc
mov
fiadds
xor
pop
fwait
lods
rcrl
cmp
jecxz
or
mov
scas
xor
mov
shl
lcall
outsb
push
leave
repz
inc
xor
sbb
add
jo
loopne
adc
push
mov
das
mov
addr16
in
add
push
or
das
cmp
in
fisubl
sbb
sub
lods
dec
fimull
insl
jb
pop
subb
repz
in
es
xchg
and
mov
jbe
and
js
or
xchg
ss
mov
stos
std
outsl
hlt
adc
jno
je
popa
cli
ja
rcrl
scas
clc
ljmp
inc
fcoml
jnp
xchg
push
mov
push
mov
rcl
cltd
dec
aam
fidivrs
sub
mov
mov
fdivl
jl
jne
outsl
iret
pusha
xor
dec
sub
inc
inc
in
arpl
gs
xor
fwait
pop
in
cld
mov
or
mov
add
xor
dec
xor
aad
mov
adc
lret
jg
sbb
adc
stos
xchg
js
dec
imul
push
stos
popf
mov
lahf
mov
add
lods
mov
scas
ss
imul
addr16
movsl
and
cmc
dec
inc
push
xchg
repnz
inc
xlat
movsw
aas
jne
cmpsl
clc
mov
je
adc
fcmovu
pushf
mov
cmp
cwtl
les
aam
inc
shll
sub
sub
shll
xchg
jmp
dec
fcomps
cs
sbb
ret
mov
pop
adc
sub
outsl
and
pop
add
add
fs
into
or
xor
cltd
testb
insb
add
push
cli
lds
or
jnp
mov
mov
out
mov
pop
push
out
xlat
outsl
pop
push
or
xor
scas
sbb
sub
fdivs
mov
jl
test
pop
test
adc
jl
adc
mov
fxam
inc
add
xchg
loopne
pop
xchg
add
pop
dec
xor
pop
and
jp
and
xchg
dec
loope
add
sar
pop
or
aas
jb
pop
add
into
and
mov
sub
in
je
lahf
xor
push
mov
scas
mov
push
jne
fidivrs
test
fldcw
jmp
adc
xor
adc
push
adc
mov
lea
jmp
pop
icebp
and
xor
cs
test
adc
mov
xor
mov
js
scas
hlt
push
jb
and
int
mov
dec
cmpsb
stos
xlat
pop
cmp
js
or
pop
out
sti
mov
jmp
clc
fsubrl
sub
inc
pop
orb
mov
div
push
test
fstps
adc
jnp
loop
movb
fdivrs
lahf
pop
mov
addr16
push
and
cmp
imul
rcrl
add
xchg
das
lods
jg
pop
roll
mov
push
out
dec
xchg
inc
cmp
jno
xchg
mov
lcall
cmp
js
cmp
add
pop
aam
sub
add
sbb
cmpl
mov
in
gs
adc
xchg
inc
int3
xchg
out
pop
mov
js
imul
mov
sbbl
mov
and
scas
aaa
and
repnz
fnstenv
mov
xor
dec
cld
scas
mov
in
rorl
in
xchg
cmp
sbb
push
notl
aam
jae
test
cld
xchg
out
into
push
push
mov
inc
int
sub
clc
xor
aam
xchg
inc
sahf
stos
stos
outsl
popf
add
mov
pop
dec
and
movsl
cs
pushf
mov
mov
push
ljmp
cmp
shll
jg
out
insb
sarb
xlat
xchg
inc
iret
jne
fbstp
jnp
or
dec
scas
lds
lods
fbld
dec
shl
mov
pop
in
jbe
push
add
jl
sbb
pusha
jno
lds
fisttpll
idivb
jns
scas
mov
scas
cli
adc
xchg
shrb
cmp
dec
mov
rorb
movsl
fwait
stc
jmp
icebp
test
xor
fldt
pop
lret
xchg
dec
dec
fcmovnbe
lcall
test
es
lods
repnz
loopne
inc
pop
inc
leave
out
mov
testb
insl
repz
inc
nop
cmp
adc
lods
fldt
movl
xchg
and
bound
push
pop
rcll
and
outsl
popa
cltd
ds
adc
pop
loope
xchg
loop
out
test
adc
jmp
inc
out
inc
in
cwtl
in
push
inc
or
outsb
out
data16
and
inc
jp
fldt
xor
jmp
adc
mov
sbb
add
sti
ds
sub
testl
lods
daa
icebp
std
cmp
sbb
sahf
cmpsl
in
mov
cmpb
adcl
scas
pop
ss
sbb
mov
mov
ds
popa
and
or
lock
jo
and
push
push
mul
scas
fcompl
mov
lahf
or
or
leave
xor
inc
stc
test
xlat
out
and
mov
adc
inc
jp
add
imul
sub
pop
mov
inc
fcomip
or
fldlg2
adc
cli
mov
mov
xlat
clc
sub
mov
shrl
gs
sbbl
xor
je
rclb
negl
fdivs
call
xlat
outsb
cmpsl
sub
cmp
mov
mov
jmp
mov
cmp
mov
or
jecxz
mov
xchg
lcall
loop
adc
and
cmpsl
dec
add
cmp
xorps
inc
pinsrw
fildll
mov
lret
sbb
inc
jno
aas
or
mov
mov
cmpl
cmc
test
loope
xchg
adc
arpl
push
pop
adc
sbb
mov
xchg
or
rcrl
push
inc
jbe
arpl
fcompl
or
stc
inc
cwtl
xor
push
movsl
in
push
push
push
roll
jbe
ret
and
leave
lock
mov
cmpsb
push
add
dec
xor
repnz
shrb
jge
inc
js
xchg
mov
add
andl
sti
pop
out
repz
jae
and
lcall
shll
movsb
es
inc
xor
mov
sub
sbb
out
cmpb
leave
add
scas
mov
cmp
and
fwait
arpl
xchg
xchg
xor
mov
sahf
jl
dec
inc
scas
push
mov
mov
out
xchg
bound
and
add
subl
mov
cmpsb
int
mov
icebp
insl
mov
inc
adc
clc
xor
and
idivb
xchg
add
cmp
adc
cs
add
out
mov
aas
jl
mov
cltd
mov
data16
xchg
int3
and
lea
add
mov
in
inc
popf
push
out
adc
fwait
test
mov
mov
sbbl
sbb
cld
jp
inc
ljmp
push
iret
out
push
scas
xor
push
rol
movl
pushf
and
outsl
dec
aas
inc
cmpb
mov
enter
fsubp
daa
add
adc
mov
shlb
pop
jl
mov
sbb
sub
push
jns
fdivp
out
xor
dec
aaa
into
mov
xor
dec
mov
and
mov
jp
dec
dec
out
jmp
sub
clc
pop
fidivrs
sbb
jo
mov
add
test
add
mov
lock
ret
les
pop
pop
and
dec
pusha
dec
sub
ret
push
or
adc
jle
xchg
leave
adc
subb
mov
popf
cmp
std
dec
pop
inc
and
pop
push
xchg
jbe
jge
jne
push
mov
pop
sahf
popf
push
and
sahf
inc
pop
xor
add
rcl
and
push
jg
popf
lahf
loopne
pop
adc
mov
adc
cmpl
jecxz
push
test
mov
leave
imul
inc
pop
jl
shll
jmp
push
jmp
rcr
es
push
icebp
out
aas
fcoms
mov
xchg
ss
or
add
fildl
notl
pop
bound
xor
dec
sbb
andb
imul
pop
xor
movl
lret
sub
sbb
imul
xchg
mov
repz
cmp
stos
stc
mov
push
sbb
in
xor
or
xchg
push
adc
dec
mov
sbb
add
pop
pop
out
cmp
fwait
stos
orl
in
sub
push
jl
mov
outsl
dec
push
mov
icebp
mov
mov
arpl
sbb
gs
xchg
dec
inc
dec
push
lahf
out
or
pop
xchg
das
imul
add
daa
cmc
cmp
cmpsb
lods
jne
repz
cmp
jne
push
clc
mov
adc
sub
arpl
inc
lret
addr16
add
fnsave
popa
pushf
mov
ljmp
cmp
and
popf
lea
sarl
movsb
add
shl
insb
jb
fisubs
push
xchg
pop
xchg
jl
add
cmpsb
adc
inc
outsb
or
cmc
loopne
not
fstpl
outsb
lods
mov
add
inc
lods
pop
in
cmp
or
je
mov
leave
pop
jmp
jns
push
or
mov
jns
mov
rcrb
or
xlat
mov
dec
xor
pop
stos
pop
and
push
lahf
cwtl
icebp
popf
in
aad
fiaddl
scas
inc
sarl
sbb
or
jge
xor
push
push
int
mov
mov
cmp
sub
ret
sub
or
arpl
in
inc
addr16
jne
test
or
jg
sbb
push
scas
xchg
enter
stc
hlt
arpl
loop
sub
ja
lret
fwait
push
push
push
lahf
rorl
sbb
or
xor
std
add
jle
cmpsl
mov
push
mov
test
mov
fwait
test
lcall
mov
sbb
xchg
rolb
popa
sub
xchg
stos
xchg
cltd
imul
dec
and
push
insb
pop
and
sub
mov
push
mov
mov
lds
jo
int
and
cmp
enter
cwtl
mov
in
adc
pop
mov
add
lock
cmpsb
push
pop
dec
loop
jns
scas
mov
out
pop
out
and
lds
adc
scas
shrb
fsubp
mov
fisttpl
movsl
ror
lds
inc
xchg
fbstp
cli
inc
push
add
mov
lds
dec
mov
dec
rcll
in
test
jecxz
test
push
popf
out
and
imulb
jecxz
into
cmp
adc
bound
inc
mov
xor
add
jne
ret
lea
mov
lea
xchg
sbb
lahf
out
sub
orl
mov
sti
dec
test
dec
inc
popf
push
jbe
pop
jns
or
dec
cmp
daa
stos
scas
mov
mov
adc
test
je
push
jno
stc
adc
pop
or
jne
and
push
add
jb
or
fnstcw
add
or
jp
push
inc
shl
or
psllw
push
pop
fwait
xchg
jmp
imull
mov
rcrb
addr16
ficomps
enter
push
xor
mov
iret
pop
push
add
cmp
out
pop
je
pusha
ljmp
enter
cltd
ss
out
and
imul
out
xor
xor
xchg
lods
mov
mov
sub
in
xchg
in
sbb
mov
lret
movsb
popf
mov
notl
push
pushf
movsb
push
or
pop
xor
sbb
push
jl
dec
jmp
or
jge
shll
mov
jne
jl
rorl
cli
adc
fcomp
xor
jmp
sti
add
sub
enter
test
sub
fildl
je
adc
cmp
scas
push
add
cmp
pop
das
push
sbb
xlat
xorl
lcall
imul
mov
lods
adc
sahf
bound
sub
or
daa
sbb
cltd
cmp
mov
jo
lods
stos
imul
iret
cwtl
xchg
xor
cs
lock
and
fwait
sub
mov
mov
ja
cmovg
dec
xchg
pop
xor
cmc
bound
testb
xchg
push
adc
mov
fwait
js
jb
and
aaa
adc
adc
mov
or
cli
imul
roll
dec
test
rorb
lret
adc
dec
pop
xchg
add
add
pop
fisttps
add
dec
and
fisubs
add
or
insb
fs
sub
insl
imul
dec
cwtl
sbb
aam
cmp
adc
repz
fcmovb
popf
scas
add
pop
lret
cmp
push
rcr
sub
loop
jns
pop
or
mov
arpl
push
sbb
pop
cmp
add
test
mov
mov
and
aad
cwtl
xchg
lret
aam
ficoms
andnps
mov
push
data16
push
xchg
repz
sbb
mov
loopne
xlat
sti
sbb
insb
cli
lret
mov
lods
fidivrs
or
std
inc
jl
nop
sbb
aad
cmp
push
aas
shrb
jp
lret
pop
cmp
cmpsb
leave
ss
fs
push
jecxz
mov
inc
orl
stos
shll
cmpsb
lcall
push
jae
das
aas
xchg
or
xchg
or
push
mov
cmpsb
test
out
shrl
mov
aaa
rcrb
and
jbe
repnz
int3
fildll
mov
or
sub
ds
and
xchg
je
lret
jecxz
add
adc
scas
push
ficoml
addr16
loop
cltd
push
mov
ret
fdivrl
push
or
frstor
xchg
dec
insl
mov
into
ds
jb
scas
sbb
mov
mov
sbb
jo
adc
fstps
into
into
loope
add
mov
push
push
outsb
xor
jae
pop
decb
push
and
sub
xor
pop
dec
clc
std
pushl
gs
mov
sbb
mov
inc
dec
icebp
out
jg
pushf
lods
rcrl
xchg
sahf
jmp
add
mov
sub
lret
cmp
push
adc
mov
sbb
adc
insb
xor
and
mov
jmp
push
ret
ficoms
mov
mov
jno
or
add
insb
ja
and
inc
sub
test
mov
leave
push
mov
xchg
mov
scas
jae
adc
into
pushf
push
int3
sbb
ss
in
adc
aas
in
out
mov
push
aaa
push
push
insb
stos
mov
sub
pop
sbb
and
xor
mov
ds
mull
mov
push
pop
lds
jle
xchg
sub
xor
clc
fbld
mov
mov
dec
icebp
jg
push
push
insl
fisubs
adc
add
xlat
aas
push
sub
cmp
xchg
sbb
cmp
int
jl
pushf
or
negl
and
pop
fsubl
test
or
and
xlat
push
sub
push
or
pop
inc
adc
call
push
les
rcrb
sbb
and
imul
jle
fidivrl
xor
mov
les
shlb
xor
pop
pop
in
loope
fidivrs
xor
int
clc
lret
inc
out
aad
enter
mov
pop
add
xchg
lods
mov
jno
data16
ds
call
dec
mov
shl
jne
and
jecxz
or
ret
lahf
jg
mov
into
mov
int3
ds
fisubs
xchg
int
lcall
and
dec
xchg
mov
jp
pop
push
decb
sarl
cmp
cmp
or
add
std
push
aad
fcmovbe
lret
xchg
cld
xchg
cli
dec
out
mov
shrl
jbe
lret
dec
enter
xor
in
inc
xchg
sub
ds
jge
adcl
mov
pop
dec
xchg
out
ljmp
inc
cmp
arpl
gs
cmp
mov
jg
pop
je
pop
jbe
sbb
inc
inc
aam
mov
and
mov
push
fnstsw
aad
mov
insl
arpl
fisubrl
sub
adc
popf
int3
scas
stc
inc
fcoms
hlt
mov
scas
movb
or
bound
inc
pop
jno
sbb
jp
xchg
lds
mov
add
cmp
dec
fwait
sbb
enter
aaa
inc
and
mov
and
xchg
mov
lahf
cmp
imul
jmp
or
pushf
cmpsl
ret
fldl
pop
push
int3
cld
scas
sub
stos
xchg
dec
sbb
inc
sbb
pop
movsb
dec
outsb
mov
jecxz
mov
fbstp
sahf
pop
loop
mov
mov
xor
in
xor
mov
xor
clc
inc
xchg
dec
pop
pop
ja
subl
lods
mov
outsb
jbe
movsb
mov
std
or
fisttpll
pop
mov
or
lds
mov
les
jg
jae
cwtl
sub
loope
sbb
fdivs
rcl
jnp
xchg
jle
push
into
jnp
cmp
add
fcmovne
fwait
cs
loopne
cmp
lds
clc
or
fstpt
xchg
loop
ja
push
mov
sub
mov
cltd
jb
jg
and
jno
fsubl
loope
xor
fcoml
fdivl
or
stos
int
lret
int
leave
mov
cmpsb
shr
xchg
ss
into
aas
icebp
xlat
outsl
mov
or
roll
call
xor
push
lahf
mov
add
rcll
add
fistpl
je
out
movsl
dec
ret
xchg
jbe
xor
xchg
aas
fildl
xor
mov
push
lods
add
mov
movsl
iret
insb
or
and
jle
leave
pushf
lock
sub
jl
jecxz
jmp
xchg
loop
xchg
in
out
into
das
mov
xchg
sahf
test
mulb
mov
call
loope
mov
jmp
pop
das
xchg
into
cmpl
xor
mov
push
lods
mov
xor
dec
out
or
loop
js
in
mov
cs
xchg
cmp
cmpsl
add
stos
setg
mov
or
imul
jp
add
test
andl
pop
lahf
stc
divb
lret
enter
sub
sti
loope
jns
js
and
xor
mov
push
pop
sbb
ficompl
add
sbbl
gs
sarb
push
icebp
test
and
test
pop
in
sub
dec
sbb
popf
or
mov
push
nop
cli
bound
in
iret
cmp
or
xor
mov
cld
cwtl
mov
adc
dec
add
mov
aam
out
outsb
dec
adc
push
rolb
ja
aaa
jbe
jne
cli
adc
xchg
mov
xlat
lcall
xchg
cmpsb
fmull
mov
lea
add
in
push
rol
xor
sub
fistpl
sub
push
dec
cmp
jb
scas
outsb
jo
mov
push
cwtl
jmp
sub
idivb
hlt
pop
sbb
dec
adc
mov
fdiv
sub
inc
add
mov
pop
and
dec
mov
inc
hlt
outsb
jecxz
jb
fisttps
into
imul
ret
test
fidivl
sbb
push
daa
popf
out
push
or
add
xlat
mov
adc
outsl
mov
mov
push
movsb
lret
jecxz
sub
push
and
ret
mov
es
mov
fldt
and
outsb
cmp
push
jp
out
lea
cmp
scas
outsb
test
mov
push
lock
stos
fsubrs
mov
mov
aad
cmp
test
cmpsb
inc
pop
xor
inc
imulb
push
lret
inc
adc
and
mov
rorl
mov
sbb
icebp
push
dec
cli
pushf
and
mov
lahf
jg
shr
lret
or
pop
inc
mov
loopne
sub
lret
inc
sbb
test
test
aad
in
repnz
negb
in
stos
xchg
cmp
lret
call
xor
sub
test
xchg
into
xchg
and
into
pushf
addr16
pop
ljmp
stos
mov
xchg
mov
pusha
or
mov
lcall
cmc
jno
stos
imul
mov
je
cld
in
xor
inc
adc
or
jmp
loopne
lods
inc
outsb
add
mov
out
pushl
lret
mov
in
arpl
aam
sbb
icebp
cld
sahf
popf
popa
fsubrl
pop
movsb
jno
pop
test
xchg
ret
xor
xchg
cmp
inc
adc
outsl
and
jmp
add
pop
pop
test
add
cs
dec
push
fsubrs
addr16
ds
mov
stos
stos
sti
insl
pop
out
mov
sbb
jno
andb
push
dec
adc
out
ficompl
pop
inc
orb
sub
aam
or
adc
sbb
test
nop
hlt
scas
fidivl
int
fsubrs
push
xchg
mov
sbb
pop
xor
xchg
xor
jmp
cmc
pop
daa
cmp
mov
cmpsb
ret
dec
jl
and
pop
fistpll
jge
and
ljmp
sbb
mov
enter
lock
das
sbb
add
sbb
cmp
data16
addr16
jns
mov
cld
mov
shlb
dec
sub
add
ret
loopne
mov
loop
dec
ja,pn
lret
cmp
mov
lret
push
cs
inc
mov
icebp
sbb
ds
inc
sbb
fistl
push
cmp
push
sar
sbb
mov
mov
mov
shl
stc
cmp
mov
mov
into
dec
jmp
cmpb
scas
xor
push
push
sub
mov
insb
add
clc
sub
push
fs
sub
sub
stos
std
shlb
popf
push
cli
inc
and
inc
int3
fldenv
notl
add
mull
cmc
jo
jns
jmp
out
rcll
popf
xchg
sbb
out
lock
btcl
orb
and
mov
fwait
push
arpl
mov
pop
xchg
into
fadds
cmp
sub
aad
addr16
pop
xchg
sub
mov
test
or
lods
mov
das
sub
lds
repnz
call
inc
pop
call
adc
out
pop
sahf
pusha
xchg
mov
jne
mov
add
nop
mov
idiv
loope
cmpb
out
imul
cmp
movsl
sbb
test
mov
push
loopne
sbb
loop
insl
push
hlt
add
adc
push
pop
rcll
push
leave
insl
mov
xchg
or
xor
xchg
jle
fwait
or
in
adc
jnp
adc
sub
xor
fwait
lret
mov
or
sub
jecxz
mov
clc
sub
ret
movsb
push
leave
mov
frndint
cmpsl
pusha
mov
stos
ficoml
cmp
test
xor
cwtl
mov
inc
loope
scas
imul
fstp
lcall
shll
cli
fmuls
push
dec
data16
sbb
movsb
xchg
sarl
push
xchg
and
hlt
sbb
jge
and
lret
and
push
ss
es
filds
jb
ret
stos
icebp
mov
xchg
push
or
adc
mov
stc
sbb
out
pop
sub
imul
and
xor
mov
pusha
cld
mov
mov
adc
jecxz
jge
jge
sub
outsl
out
stos
mov
mov
dec
jb
test
mov
ja
dec
test
xchg
or
sbb
inc
inc
sahf
into
notl
ljmp
dec
inc
sub
icebp
loope
pushf
jmp
adc
sbb
jecxz
pop
mov
add
insb
stc
pop
mov
lahf
and
das
pusha
mov
xchg
popf
repz
add
test
mov
int3
test
inc
scas
aad
lea
lret
rcll
fildll
push
xchg
add
xor
divl
repnz
arpl
aam
push
xchg
or
push
or
lret
rep
sub
cwtl
xchg
movsl
cli
and
push
cmp
cmp
mov
fs
mov
leave
out
loopne
push
xor
add
mov
rclb
and
inc
mov
stos
push
lahf
jbe
dec
xchg
inc
scas
ficoms
lods
jae
jmp
push
outsl
and
or
add
pop
stos
out
jns
jo
push
out
movsb
adc
mov
loop
cmpsb
mov
mov
xchg
add
xchg
sbb
sbbb
stos
cld
loopne
arpl
jle
lods
shlb
cld
les
aas
stos
adc
inc
movhps
dec
cmp
dec
pushf
and
or
scas
loopne
cld
outsl
clc
pop
push
jno
aam
test
cwtl
jecxz
iret
jns
out
adc
adc
popf
mov
sub
cmp
bt
aas
pop
add
jmp
pop
icebp
pop
mov
ja
mov
addb
push
aam
jb
rorl
and
ror
mov
scas
xor
loop
popf
ret
sarb
xor
insl
clc
lea
addr16
mov
scas
jne
mov
rorb
sbb
cli
xchg
paddusb
xor
adc
rcrl
repz
imul
push
push
test
push
pop
jl
movl
fst
cwtl
sub
push
fstpl
pop
jl
repnz
fnstsw
ljmp
mov
jmp
negl
lret
stos
mov
aam
in
push
mov
xchg
mov
mov
or
scas
call
push
cmp
mov
adc
jge
mov
adc
lret
icebp
shlb
sbb
scas
filds
loop
adc
rcrb
sub
cld
mov
push
push
popf
cwtl
adc
outsl
into
lcall
icebp
adc
jae
lock
mov
mov
and
pop
arpl
cltd
xor
jg
cmp
push
test
mov
std
out
xchg
jecxz
test
mov
push
pushf
lret
stos
mov
sbbl
mov
mov
rcrl
clc
leave
cld
ljmp
jo
mov
je
lret
fsubrl
jnp
fbstp
add
fstl
stos
mov
dec
pmulhuw
xor
fidivrs
lods
mov
in
pop
mov
push
or
ret
dec
jne
pop
lret
js
xchg
sbb
out
mov
mov
scas
cli
sbb
cmp
or
pusha
movsb
add
xor
insb
filds
lock
imul
sbb
imul
sbb
gs
cmp
xchg
scas
sub
in
mov
mov
dec
test
mov
xchg
jae
xchg
clc
and
mov
out
inc
das
dec
outsl
test
lcall
cmp
fdivl
lcall
pop
test
scas
dec
mov
sub
cltd
cmp
stos
sbb
adc
fucom
pop
lds
or
fnstsw
fldl
jge
mov
fsubrl
pop
sbb
push
je
ror
scas
and
dec
leave
push
pusha
lds
pop
sub
scas
inc
ljmp
xor
loop
pushf
into
or
imul
sub
pop
mov
cwtl
add
sti
insb
les
sub
mov
ficoms
cmp
sbb
std
xchg
fisubs
ja
or
mov
ljmp
mov
fwait
cltd
add
xlat
stos
mov
push
stc
push
orl
xor
dec
mov
sbb
call
or
mov
and
push
mov
mov
mov
cmpsb
mov
hlt
and
push
add
xchg
mov
sub
xchg
jl
pushf
lret
push
xor
repnz
jb
pop
xchg
stos
jmp
or
sub
add
mov
test
inc
pop
pop
call
mov
pop
cmp
pop
int
xor
repnz
data16
adc
sbb
jmp
inc
adc
pop
sahf
mov
stc
inc
subl
mov
adc
push
testl
inc
mov
iret
pop
mov
mov
jg
and
dec
pop
hlt
shr
sub
test
adc
jnp,pt
push
mov
pop
mov
bound
pop
inc
lret
mov
aaa
pop
std
cmc
xor
addr16
mov
negb
loopne
add
int
pmovmskb
mov
gs
sarl
out
sub
xor
into
xor
sbb
pop
mulb
hlt
mov
imul
mov
or
imul
aad
pusha
movsl
fmul
xchg
idiv
popa
dec
pop
divb
mov
sbb
aas
and
fbld
adc
inc
pop
pop
movsb
jl
scas
pop
loope
inc
stc
fnstenv
in
sub
clc
add
jp
jae
mov
xchg
jb
adc
xchg
loope
rol
inc
in
push
push
xlat
ljmp
cmp
mov
fwait
shr
pop
sbb
andb
sti
push
mov
jmp
test
sub
insb
pop
pop
or
les
gs
push
lret
aad
insl
mov
leave
jo
pop
pop
pop
fwait
pop
lea
addb
cs
in
xor
add
pop
sub
or
cmp
rolb
sarb
jb
mov
xchg
stc
dec
repnz
and
push
push
dec
cwtl
in
adc
popf
call
xor
push
sbb
mov
scas
push
fdivrs
jmp
cld
jae
addb
mov
leave
aaa
outsl
cmp
popf
jmp
jb
les
mov
or
and
push
pusha
addr16
sub
ljmp
mov
fsubl
aaa
push
pop
jo
mov
xchg
addr16
call
popa
ljmp
xchg
popa
sar
outsb
in
ret
pop
sti
mov
sbb
pop
xor
push
xchg
mov
das
ljmp
pop
stos
andb
pop
into
jl
stos
inc
mov
inc
xor
push
loop
test
fsts
inc
xlat
test
or
lcall
fisubrl
mov
call
scas
fstpt
jb
mov
sbb
jns
arpl
or
inc
dec
out
mov
neg
aad
xrelease
into
icebp
data16
leave
adc
and
int
dec
fwait
add
int3
push
xchg
xchg
call
dec
push
add
cmp
stos
jle
or
mov
jno
mov
and
aaa
mov
or
mov
and
fstpl
test
sub
mov
repnz
mov
int3
shll
mov
cmpsl
cmpsl
dec
mov
repnz
add
repnz
mov
repnz
icebp
push
xor
das
mov
xor
adc
xchg
push
dec
roll
cli
add
cmpb
fiadds
enter
pop
cmp
in
je
push
repz
rorb
repz
push
inc
arpl
and
loope
xor
clc
pop
mov
pop
dec
sbb
push
push
or
mov
jl
mov
sub
fisubrl
cld
adc
sub
or
sub
pop
std
xorb
enter
and
out
adc
mov
mov
clc
rolb
sub
sbb
lock
mov
bound
repz
inc
pop
xchg
xchg
rcrl
mov
mov
shrl
mul
mov
nop
xor
xchg
push
xor
imul
or
mov
xlat
jp
daa
and
jmp
cmc
cld
sbb
lds
cmc
test
or
fwait
sbb
test
or
fstl
orb
xchg
xor
stc
mulb
xlat
fisubs
dec
add
jl
dec
xlat
xlat
mov
into
mov
in
inc
xchg
int
insb
mov
jecxz
cmpsl
leave
fwait
cs
add
xchg
push
pusha
add
data16
stc
insb
movd
popa
mov
aaa
test
pop
pop
adc
repnz
shll
mov
cmc
fisubrl
sub
in
cli
fwait
movsb
mov
pop
pushf
lret
imul
iret
mov
xchg
loop
ret
insl
repz
out
notl
fisubrs
clc
repz
add
push
mov
les
insb
or
jg
dec
ret
rcrl
xchg
aad
stc
mov
sbb
stos
sub
je
stos
lahf
hlt
flds
pop
push
sbb
mov
scas
je
inc
or
mov
in
push
xchg
arpl
adc
js
ljmp
fcoms
jp
lods
or
dec
lcall
xchg
xlat
adc
jle
sub
in
ds
adc
pusha
sub
shl
and
add
lock
adc
jecxz
dec
mov
imul
fs
outsl
roll
push
and
dec
sbb
push
adc
loopne
mov
fcmovbe
jns
inc
aad
pop
jecxz
inc
and
or
repz
in
push
sbb
test
xor
es
pushf
push
or
dec
adc
outsb
dec
mov
xchg
cmp
shl
xor
mov
repz
stos
filds
negl
mov
out
and
or
pop
or
xor
pop
jne
inc
cmp
inc
add
pushf
outsb
fwait
gs
cmpsl
jae
int
mov
pushf
pop
repnz
sub
bnd
in
rdmsr
jle
lea
popl
sbb
pusha
push
lcall
jecxz
lods
xchg
sbb
addr16
inc
inc
xlat
fmul
insl
adc
ret
push
cmc
add
rolb
pop
add
xor
aad
push
pop
cmp
sub
jmp
dec
leave
and
jns
mov
dec
out
dec
sub
adc
dec
or
inc
xchg
das
push
clc
sub
sar
fwait
xor
shrl
notb
popf
shrl
std
lcall
mov
call
inc
inc
or
lods
jo
mov
loope
loopne
and
jp
stos
xor
mov
and
cmp
addb
xchg
nop
idivb
fdivrs
lcall
xchg
sub
xchg
out
push
jmp
cld
and
imul
repz
pop
mov
mov
push
bound
cli
xchg
cmc
out
or
movsb
xchg
mov
ret
xchg
inc
gs
mov
test
fbstp
push
mov
js
fwait
xchg
pop
lahf
mov
pop
inc
hlt
sub
imul
xchg
lds
notl
inc
jle
inc
daa
inc
mov
testb
jnp
mov
xor
cwtl
pop
sarl
add
pop
ficoms
stos
add
pop
iret
dec
lret
ja
push
pop
repnz
mov
inc
shlb
or
add
sub
push
dec
out
sub
fcomps
pop
shll
mov
les
and
sub
or
cld
xor
iret
roll
out
mov
jmp
inc
mov
cmp
aad
push
dec
or
std
mov
jo
arpl
mov
push
pop
lds
fcmovnu
in
int
and
jno
pop
cwtl
jge
fnstenv
lahf
sub
fists
jbe
mov
ds
and
mov
dec
ficompl
or
cmp
addr16
push
dec
add
dec
or
mov
repz
lods
inc
xchg
adc
cmpsb
sub
addr16
shl
dec
inc
es
and
inc
sbb
aas
xchg
jae
inc
push
cmpsl
mov
ss
pusha
bound
imulb
and
mov
or
imul
ret
xor
decb
mov
mov
lahf
adc
and
mov
push
dec
pop
sbb
cmpsl
gs
adcl
cld
xor
pop
stos
and
stos
loop
cmp
pushf
pushl
jp
flds
rolb
pop
pop
in
loopne
and
push
test
lock
daa
push
push
add
pushf
call
jbe
cwtl
out
or
fiadds
xchg
push
xor
in
aad
dec
dec
mov
les
jp
aam
lods
mov
jnp
cwtl
sbb
mov
dec
outsb
or
jbe
popf
outsl
mov
clc
cli
movsl
or
dec
sbb
lods
cmp
mov
arpl
stc
adc
jbe
aad
ret
pop
dec
push
int
xchg
leave
and
subl
add
xchg
out
inc
sbb
jns
je
lahf
jge
call
add
insb
xchg
push
push
outsb
js
icebp
popf
addb
scas
ljmp
cltd
mov
jg
xchg
add
pusha
jne
adc
xchg
jae
popa
or
sub
xchg
cmpsb
lea
imul
lods
lea
fistpll
pop
jb
adc
jl
test
imul
cwtl
inc
sub
fwait
add
cmp
dec
jb
inc
sahf
roll
xor
mov
hlt
add
fistps
lret
ss
pusha
pop
xor
decb
inc
jae
xlat
xlat
test
xchg
lock
and
insl
dec
or
ffree
mov
jg
je
push
stos
fsub
pusha
hlt
xor
jmp
stc
out
cmp
inc
xlat
sub
outsl
jne
adc
in
mov
sarb
xchg
sbb
iret
and
addr16
cmp
int3
pop
or
xchg
aas
jecxz
sbbl
imul
call
enter
mov
imul
outsl
dec
mov
stc
cld
xor
inc
xor
fsubrs
inc
or
sub
ret
xchg
andl
dec
orl
into
nop
lret
js
mov
outsl
jbe
lods
and
arpl
xor
mov
cmpsb
inc
and
push
fdivrs
mov
adc
jle
dec
push
adc
cmpsb
cwtl
cltd
inc
hlt
add
mov
sub
and
jbe
push
je
sbb
or
mov
cmp
leave
or
aaa
jbe
push
clc
hlt
sbb
inc
test
sbb
mov
ret
clc
cmpsl
mov
pushf
imul
xchg
sbb
sub
push
addr16
or
dec
inc
pop
mov
test
fldcw
xchg
fcoml
cmpsw
sub
push
std
push
push
outsb
xor
push
mov
push
and
inc
inc
mov
int3
pop
ljmp
repz
movsb
int
dec
xchg
scas
xchg
jl
xchg
decl
pop
mov
dec
out
loopne
add
addl
cli
sbb
stos
mull
fistpll
dec
mov
out
fwait
or
out
adc
and
hlt
xchg
jo
sbb
sub
and
test
cmpsb
sub
jmp
push
inc
insb
cwtl
xchg
fcomps
xor
cmc
pop
imul
out
sbb
mov
inc
aam
mov
xor
jns
adc
lahf
aas
or
repnz
pop
mov
mov
daa
xor
xchg
push
jge
ret
xor
push
jae
jmp
cmpsl
dec
xor
or
into
ja
pop
jns
js
and
sbb
add
add
xchg
das
xor
dec
int
inc
add
fcmovnb
popa
adc
sub
sub
lret
push
mov
ret
add
dec
mov
dec
jnp
cmpsb
dec
sub
jae
imul
nop
lds
das
fcompl
fildl
inc
cmp
xor
cmp
aaa
or
jge
dec
push
fwait
iret
and
fsubr
xor
mov
insb
push
ja
cmp
jo
cli
leave
pushf
mov
jmp
aad
fisubrl
fdivs
fwait
xor
es
dec
dec
outsb
dec
in
fdivl
fdivrp
xor
idivb
outsl
int3
cld
loope
cmpsl
sbb
mov
xor
pop
repz
push
pop
lock
pinsrw
outsb
xchg
outsl
cwtl
adc
stos
fmull
orb
movsb
mov
and
loop
in
mov
mov
fcomps
mov
push
fs
inc
pop
aam
cmp
loopne
xchg
inc
or
xlat
ret
and
sbb
in
push
and
repz
or
addr16
ror
xor
jo
jb
stc
push
mov
adcb
mov
pop
push
inc
xchg
pusha
imul
aaa
xchg
sub
push
pop
cmpsb
inc
loopne
imull
ret
pop
and
push
sub
ret
test
fists
cmc
dec
nop
cmp
fwait
movsb
in
jns
lock
and
and
push
aaa
outsl
call
shrl
pop
xchg
int
ret
push
scas
dec
mov
repnz
lret
cli
je
pop
in
xchg
out
mov
jl
in
cmp
mov
movsl
insl
xorl
sub
js
or
or
push
inc
push
mov
icebp
outsl
inc
decl
mov
pop
jp
leave
ret
jb
and
push
mov
push
add
test
nop
popa
fabs
test
cmc
and
insb
xchg
cmpsl
jmp
ret
mov
or
stc
mov
sahf
lods
or
fwait
inc
ja
mov
dec
int
scas
dec
ds
and
ss
repnz
and
loopne
sahf
dec
or
mov
std
movsb
stos
in
out
push
into
sbb
test
push
and
adc
sbb
sti
test
mov
xchg
dec
and
pop
jg
cltd
jg
sbbl
or
stos
pop
leave
into
loop
sbb
lock
or
cmp
orb
testb
sub
dec
out
xchg
xchg
cltd
add
mov
push
lods
cmpb
mov
es
dec
xchg
les
aaa
pop
add
cwtl
dec
inc
adc
lea
insl
rorb
mov
in
push
mov
dec
cmpsb
add
jo
jo
fcmovu
into
arpl
jmp
adc
into
jl
test
rcll
push
sbb
push
ljmp
lahf
jb
mov
mov
leave
loopne
arpl
mov
xchg
test
mov
add
xor
cmp
or
rorl
outsb
ds
aaa
jge
pop
jmp
cmpsl
loop
testl
das
es
mov
insb
rcrb
and
mov
add
fcoml
mov
inc
pop
and
mov
xchg
inc
and
jno
in
jbe
inc
xorb
popf
add
pop
decb
and
dec
sbb
outsl
dec
sbbl
mov
sbb
pop
xchg
xor
mov
xchg
dec
jg
icebp
pop
pop
enter
push
mov
push
cmc
or
push
jge
outsb
xchg
psllq
popa
stos
xor
xor
dec
ds
jp
mov
pop
sbb
pop
or
push
xor
andl
aad
inc
cwtl
bnd
pop
lcall
lds
inc
mov
xor
mov
inc
imul
dec
arpl
aam
cmp
cmp
hlt
ret
adc
jne
or
jne
cmp
xchg
leave
loopne
push
test
jbe
loopne
imul
in
fimuls
or
adc
add
pop
fistps
aam
in
test
call
cs
cmp
xor
add
cmp
mov
cmp
mov
push
or
mov
dec
push
mov
pop
add
xor
add
pop
dec
jae
push
jl
fnstsw
addr16
xchg
xor
lock
xor
jecxz
dec
call
fcomps
add
sub
imulb
outsb
lahf
lret
clc
sub
filds
mov
ror
out
repz
xchg
sbb
jge
es
test
ret
pop
in
cmp
or
test
aad
ja
or
dec
scas
sahf
push
fwait
adc
push
dec
fimuls
iret
xor
adc
iret
pop
sub
push
xorl
mov
xor
mov
cli
add
sti
jl
dec
pop
cmc
aas
imul
and
pop
pop
lds
iret
mov
and
in
jecxz
iret
enter
lahf
stos
dec
nop
sbb
jge
or
pop
shll
mov
mov
adc
mov
sbb
sarl
sbb
addr16
repnz
xchg
hlt
inc
xchg
pop
test
dec
xchg
daa
popa
push
or
jg
aaa
inc
dec
outsb
mov
rcll
mov
pop
sbb
aad
jp
iret
mov
pushf
mov
and
adc
xchg
mov
mov
mov
dec
xchg
add
stos
out
sbb
daa
sbb
out
mov
mov
fcomi
adc
cltd
xchg
aas
mov
pop
add
or
ja
popa
inc
shlb
cwtl
lods
pop
pop
push
cmp
sub
push
xchg
pop
shr
sbb
fsubrs
loope
sub
pop
stos
push
jbe
into
jne
push
fstl
inc
aas
ja
rclb
and
add
mov
lret
push
or
sarb
fdivp
xor
js
lcall
xchg
inc
jns
pop
cmpsl
or
xchg
push
jo
out
ret
test
sub
jno
test
icebp
xor
xor
push
js
scas
or
xchg
inc
pop
add
add
movsb
inc
lods
mov
ljmp
lret
xchg
sbb
add
lret
xor
add
adc
jnp
aam
cwtl
adc
jae
lahf
mov
sbb
cmc
shll
jmp
dec
fwait
scas
xchg
or
pushf
das
xor
mov
das
push
incl
enter
aaa
sbb
mov
stos
cld
das
sbb
dec
xlat
cmc
sub
xor
fisttpl
pop
jge
icebp
or
sahf
sbb
cmpsl
fs
and
mov
rcr
xlat
arpl
sbb
fldcw
sti
das
jecxz
pop
aaa
mov
js
stos
cmp
cmpsb
xor
insb
insl
aas
add
sub
aam
outsl
adc
push
jb
lods
add
ljmp
faddp
in
bound
pop
movsb
adc
sbb
int3
push
push
mov
add
inc
dec
add
and
das
mov
mov
add
mov
out
sbb
push
nopl
addr16
test
adc
mov
movsb
dec
cld
movsl
les
xor
jae
dec
inc
mov
int3
fistps
imul
adc
test
ds
testl
enter
jae
push
mov
mov
jecxz
mov
daa
cli
je
mov
push
cltd
in
sub
or
jno
out
jp
xor
stos
orl
sbb
and
push
inc
ret
std
xor
dec
push
dec
mov
repnz
sbb
cmp
in
shll
addr16
sbb
repz
xchg
lcall
lret
pop
stc
push
shr
inc
push
inc
shll
rcr
cmp
clc
fs
fldenv
xor
leave
mov
inc
fcomp
cmp
and
mov
or
icebp
inc
arpl
in
jge
dec
mov
sti
iret
sub
xchg
call
pop
cmp
aas
push
bnd
int3
test
lods
mov
mov
addl
pop
into
addr16
mov
xor
mov
pop
adc
adc
roll
cmp
sub
insl
xchg
in
ret
dec
push
jle
arpl
lods
sbb
aad
xchg
lds
push
cwtl
daa
insb
or
shr
test
mov
fisttpll
fistpll
and
mov
xchg
xchg
or
out
notb
mov
inc
movsl
push
imul
div
jg
pop
sbb
loopne
lea
dec
imulb
mov
arpl
js
sahf
lret
mov
aam
popf
jns
push
cmp
or
sub
jp
add
in
mov
das
add
xorl
stc
out
les
inc
gs
xchg
lods
xchg
cwtl
test
add
loop
push
or
adc
rorl
xor
pop
dec
push
jo
into
ja
cmpb
push
out
mov
lods
ljmp
add
dec
scas
sbb
jb
dec
sbb
pop
mov
xor
sub
pop
adc
xor
jo
ficomps
ljmp
loopne
mov
or
xor
out
dec
hlt
mov
push
mov
stc
mov
movsl
scas
adc
imul
mov
data16
inc
imul
lret
jp
sub
pop
repz
jl
adc
or
lcall
pusha
xlat
fisubrs
sarb
push
and
fidivrs
cmpsl
nop
fbstp
insl
ds
sbb
pop
popa
adc
mov
stc
rcrl
shll
jbe
dec
push
decb
insl
pop
shrl
or
icebp
pop
test
imul
xor
push
cmc
pop
push
sbb
test
in
mov
pop
aam
outsb
add
testl
insl
xchg
inc
jg
notl
jb
add
fwait
idivl
int
dec
ret
and
mov
mov
pop
sahf
xchg
jp
mov
pop
aam
imul
imul
add
dec
and
je
add
pop
and
daa
jae
pusha
ds
xor
jg
clc
stc
xchg
push
pop
cmpsb
loop
or
pop
push
or
out
mov
sar
jg
pop
sub
dec
xchg
lods
bound
push
push
repnz
lock
or
xchg
stc
or
je
xchg
mov
dec
testb
jg
test
sbb
sbb
fwait
sbb
add
outsb
loopne
adc
sbb
sahf
stos
jmp
sub
ret
dec
das
xchg
xor
loope
je
shll
cmp
in
adc
imul
cld
lahf
cltd
jno
push
arpl
aas
ficoms
pop
movsb
and
dec
out
push
stos
or
stc
cmp
mov
mov
dec
pop
cmp
xor
jne
insb
sub
dec
cmp
test
fwait
dec
fistl
ds
negl
decl
aas
addb
xchg
loope
cmpsl
and
mov
pop
mov
loop
ficoms
ror
aad
std
jp
int3
adc
arpl
mov
repz
add
incl
pop
sub
pop
testb
xor
gs
dec
jmp
into
xchg
push
pop
test
mov
ds
mov
pop
mov
pop
jns
test
adc
push
dec
out
and
dec
aad
in
pop
or
fldenv
ret
out
add
fldl
jmp
out
sbb
push
sti
mov
out
int3
and
and
cltd
xchg
xchg
clc
jo
or
sub
es
pop
lcall
push
int3
sbb
push
sbb
xlat
xor
pop
mov
leave
dec
imul
inc
add
pop
ljmp
popa
jmp
ret
mov
movsl
xlat
mov
dec
dec
push
or
call
jae
test
into
inc
jle
mov
js
mov
adc
sub
sbb
add
pop
mov
std
test
int
pop
rclb
or
les
lods
adc
jb
popa
xchg
cli
xor
pop
dec
fnstsw
lret
sbb
sbb
repnz
dec
fistpll
pop
mov
push
scas
into
pop
movsl
pop
dec
sub
in
ror
xchg
and
add
cmpsl
rorl
mov
inc
dec
pushf
push
cmpsl
insb
xorb
inc
aaa
lods
xor
stos
mov
jbe
pop
add
out
fprem
imulb
jno
leave
outsl
inc
popf
mov
divl
mov
dec
sbb
mov
xor
insb
jo
mov
stos
jg
jnp
ss
or
mov
cmp
pop
and
addl
imul
jo
add
inc
add
inc
mov
mov
stos
pop
sbb
mov
push
cmp
sub
add
fwait
xor
lret
out
dec
fisubrs
or
jae
es
int3
mov
adc
icebp
sahf
pop
mov
faddp
pushf
ss
xchg
inc
mov
rorl
mov
les
outsb
outsb
pop
cld
xchg
lcall
dec
in
inc
data16
xor
out
outsl
ficoms
lret
out
dec
cli
rorl
into
push
pop
xchg
or
add
pop
cltd
arpl
dec
pop
xchg
hlt
xor
lcall
dec
sbb
mov
push
icebp
adc
testl
add
add
mov
stc
jne
mov
adc
rorb
xchg
jae
adc
adc
fisubs
int
inc
pop
aad
imul
cmp
sti
pop
pop
cmpsl
in
cmpsl
inc
test
jbe
jne
dec
stc
lret
mov
lods
add
js
js
mov
or
ds
adc
adc
aad
lock
pop
sbb
inc
leave
xor
pop
mov
lahf
test
inc
mov
and
dec
leave
shrb
add
push
adc
fwait
ss
test
pop
xchg
les
push
inc
mov
add
jge
fadds
jmp
icebp
inc
arpl
dec
adc
repz
aas
push
push
test
fstpl
sbb
push
inc
sub
sub
or
mov
cmp
sbb
xor
or
cmp
mov
ret
lds
cmpl
es
outsl
mov
jmp
and
xchg
lahf
dec
ss
jle
mov
push
rdmsr
scas
cmp
mov
push
gs
jmp
jns
test
or
mov
and
mov
xor
scas
jno
cmp
mov
mov
mov
and
clc
ret
test
dec
push
rcr
in
or
movsl
jae
daa
jl
ret
sbb
adc
xlat
jle
mov
repz
into
cmpsb
mov
test
loop
or
jns
arpl
sub
std
pop
inc
xchg
imul
and
add
dec
mov
mov
nop
inc
cmpsl
pusha
repnz
sbb
in
int
and
pop
mov
stos
dec
rcl
testb
repnz
xor
xchg
sub
addb
jecxz
xlat
cmp
stos
jge
pop
les
mov
rclb
pop
insl
push
cltd
inc
inc
add
ja
mov
mov
gs
jb
scas
into
sub
imul
xchg
enter
jle
mov
iret
sbb
dec
lock
call
ret
mov
in
rcll
push
leave
sarl
mov
cmp
sub
stc
icebp
pop
push
mov
leave
dec
stos
out
sbb
jb
adc
cmp
ret
push
inc
or
cli
push
mov
pop
mov
dec
dec
mov
sbb
xchg
mov
pop
cld
jge
fdivrl
push
shrl
mov
mov
adc
call
cli
push
aaa
mov
mov
mov
xlat
fdivr
sub
clc
imul
pmaxub
stos
neg
test
cmc
pop
jp
sub
rorb
cld
inc
xchg
lds
js
lock
call
mov
cltd
adc
imul
xchg
testl
mov
pop
xchg
mov
loop
fs
orb
fwait
pusha
arpl
outsl
sbb
decb
ja
sub
out
jns
adcb
in
mov
lea
pop
sub
xor
insb
inc
mov
pop
xchg
sar
push
mov
mov
cltd
xorl
aam
cld
jp
mov
push
add
pop
ret
push
popf
imul
insl
or
rorl
mov
jb
lock
adc
mov
into
inc
inc
mov
fnsave
jmp
cmp
mov
stos
dec
daa
sub
shll
in
in
fldenv
jl
rorl
test
gs
les
jne
xor
or
dec
into
movsb
cmp
pop
push
sub
ss
cmp
call
jnp
jae
ret
mov
mov
arpl
push
inc
scas
jno
inc
arpl
push
bound
int
push
lock
wrmsr
cmp
in
leave
vmread
stos
pop
push
cs
jge
adc
cmp
mov
xchg
xchg
call
cmp
push
es
les
test
out
popa
stc
add
adc
stos
addr16
enter
mov
adc
adcb
push
sub
xor
add
es
inc
push
cmc
sub
int3
stos
cmp
and
add
xchg
cmc
sbb
mov
add
adc
movsl
lret
jne
fwait
ja
mov
pop
dec
negl
jo
daa
cltd
adc
xor
mov
inc
out
jp
dec
jo
adc
inc
jb
push
cmp
insl
mov
test
add
jmp
xchg
dec
movsb
or
repz
mov
inc
dec
cmp
imul
loop,pt
inc
push
or
dec
push
dec
fwait
push
adc
dec
and
andb
mov
xor
and
lods
or
adc
push
mov
dec
cmp
insb
scas
repz
testb
outsb
enter
insl
fcmovne
and
hlt
and
inc
loope
iret
ja
jle
mov
pop
jbe
pop
and
test
inc
or
mov
pop
insb
adc
xorl
pop
pushf
sub
pop
dec
sbb
mov
leave
inc
shrl
pop
push
xchg
mov
sbb
das
in
rol
jp
jne
pop
sahf
scas
xchg
and
cli
xchg
jno,pt
shrb
xor
inc
imul
call
xor
jl,pt
dec
xchg
rsm
dec
pop
movsl
pop
jecxz
out
sub
incl
mov
adc
and
and
cld
mov
outsl
gs
cmp
int3
sub
xor
ds
pop
lods
mov
pop
mov
xchg
shl
push
ret
cs
or
push
in
outsl
fdivrs
stos
iret
sarb
mov
xchg
test
inc
xchg
xchg
orl
or
pop
fmul
adc
jb
add
xor
xchg
inc
mov
adc
lock
add
lret
adc
jmp
pop
pushf
dec
mov
pop
outsl
enter
pop
aam
sti
aam
or
push
xchg
push
mov
dec
push
jbe
pop
jns
lods
inc
aam
and
subl
stos
test
sbb
xor
daa
hlt
sbb
clc
arpl
xor
fucomp
cmp
rcrl
in
mov
jg
in
mov
insb
pop
ja
lods
testl
mov
and
push
cmp
or
cvttps2pi
xlat
xchg
jle
mov
mov
es
mov
jns
inc
pop
cmp
cmc
inc
sub
pusha
cmpsb
adc
movsb
sub
mov
lock
pusha
cvtpi2ps
mov
in
dec
push
sub
arpl
fwait
mov
mov
jg
cmp
out
mov
addb
xlat
or
adc
pop
jl
pop
sub
mov
mov
fbstp
mov
xor
aam
xlat
roll
stos
pusha
mov
pop
test
es
loopne
xchg
fmul
add
lea
cmp
jbe
jg
mov
xchg
sub
sub
mov
cmp
int
cs
movsl
movsl
in
cs
dec
insl
adcl
mov
xor
mov
fildll
sti
loop
lret
scas
cwtl
mov
inc
mov
sub
jb
push
jno
cmp
ljmp
outsl
sbb
aad
and
cltd
inc
mov
lahf
iret
cmp
lcall
push
sbb
inc
popa
adc
dec
fsubrs
xlat
aad
push
sbb
push
insl
fldl
sbb
mov
enter
cmp
dec
cmp
hlt
inc
pop
mov
mov
pop
sbb
cmp
push
jbe
xchg
int
pop
mov
jmp
inc
and
mov
xchg
inc
xchg
out
cmp
mov
cli
adc
adc
adcb
in
sub
dec
rorl
shl
xor
call
xchg
push
call
dec
xchg
cmp
cs
neg
cmp
add
addr16
shll
je
out
xchg
pop
adc
pop
xor
mov
test
lods
pop
out
rolb
mov
mov
subb
add
outsl
dec
inc
add
je
arpl
adc
sbb
call
mov
xchg
lret
jl
lret
repnz
xchg
dec
cld
and
or
fisubrs
or
mov
das
or
stos
pop
xchg
or
pusha
pop
outsl
scas
sub
inc
mov
les
sbb
pop
lods
dec
dec
dec
mov
pop
insl
push
xchg
repnz
pop
scas
popa
aam
repz
adc
jns
loope
sub
add
test
pop
adc
int3
inc
jmp
adc
arpl
mov
fcom
sahf
dec
pop
loop
pop
push
lahf
mov
andl
into
xor
lods
mov
push
sbb
mov
inc
cltd
mov
sbb
cltd
out
lock
mov
repnz
icebp
out
and
cmp
shr
test
jns
mov
pop
mov
sbb
and
imul
inc
xor
inc
ret
in
xchg
subl
fldcw
xchg
jno
in
or
and
aaa
lret
arpl
xlat
enter
mov
clc
jg
dec
and
pushf
scas
shrl
sub
icebp
mov
push
dec
fs
orb
aaa
add
std
mov
xchg
jnp
push
inc
and
cmp
mov
pop
inc
inc
ret
movsb
rol
outsl
push
test
sub
cltd
lahf
inc
cwtl
pop
loopne
adc
cmc
lret
lods
fstl
jno
xchg
repz
push
aad
sti
xchg
aad
mov
shl
push
in
xchg
xor
sbb
adc
lods
fists
mov
mov
icebp
fwait
add
and
push
lds
mov
call
mov
push
out
push
popa
pop
into
push
mov
jle
jl
aad
into
daa
out
sti
jns
mov
add
cmp
mov
lret
jo
jns
lock
and
xorl
mov
cmp
sub
inc
push
ret
inc
sti
pusha
pop
mov
adc
sar
push
sahf
cmp
shr
jne
lock
insb
inc
cmp
std
ret
cmpsb
dec
stos
daa
es
lahf
cmpsl
ss
dec
jne
or
je
and
stos
xchg
fnstsw
imul
xor
outsb
or
and
sub
sub
shrl
xchg
je
lods
lcall
dec
aam
sub
movsl
pop
cmc
pop
and
push
ljmp
xor
sbb
aaa
lcall
jge
mov
addr16
mov
leave
popa
cld
shlb
in
ds
int3
inc
popa
pop
in
andl
mov
cmpsl
lock
xor
cmp
mov
out
sbb
je
mov
adc
add
jp
xchg
enter
jno
adc
mov
mov
dec
loope
push
and
mov
jbe
mov
and
xlat
lods
int3
xor
pop
cmp
cmpsb
cmp
fadds
sub
mov
or
push
xor
jbe
jns
aaa
cmc
mov
jo
ss
pop
out
in
add
pop
mov
cmpsb
mov
scas
pusha
mov
inc
lock
pop
mov
jle
or
je
mov
insb
xor
mov
movsl
test
lret
cltd
inc
rcll
sub
pop
aas
xchg
sub
cmp
mov
cmp
mov
dec
add
int3
sub
add
push
jnp
mov
mov
mov
test
repnz
lcall
ret
sbb
aam
mov
jg
push
stc
add
inc
mov
add
inc
inc
mov
or
movd
outsb
and
clc
xor
or
out
jne
adc
mov
jecxz
into
pop
dec
pusha
outsb
ss
mov
and
push
loope
rcll
fiadds
inc
pushf
adcl
insb
outsb
outsl
sbbb
imulb
jnp
push
jg
mov
xchg
in
jne
add
sub
inc
push
push
mov
in
in
jb
sbb
push
out
xchg
push
into
mov
orl
loop
cmp
in
inc
js
je
adc
pop
sbb
fisubrs
adc
test
add
mov
pop
jl
sarb
je
js
dec
rolb
mov
in
ljmp
dec
sbb
movsb
xchg
pop
sub
jmp
pop
or
xlat
cmp
xchg
pop
sub
notb
lea
cmp
mov
out
popa
sbb
lret
push
stos
inc
jmp
mov
xchg
and
xchg
lea
mov
aam
mov
xor
loopne
or
les
pop
xchg
dec
jg
jbe
sbb
aad
jl
mov
mov
dec
in
pop
in
adc
js
inc
test
pop
cmp
imul
mov
adc
xor
loop
sbb
push
push
aam
add
inc
dec
imul
cmp
jp
aaa
push
test
fldenv
fcmovnb
or
xchg
mov
dec
adc
je
stc
inc
mov
int
sub
sbb
sbb
pop
repz
pop
rolb
xchg
pushf
into
xor
push
add
mov
dec
and
pusha
push
adcb
or
pop
cmp
and
mov
push
and
test
and
pop
lock
mov
insl
enter
ds
lods
push
jecxz
sub
sbb
jno
adc
lcall
fbstp
fstp
ficoms
stos
popa
dec
inc
testl
fwait
sbb
and
inc
fiaddl
cmp
sbb
out
mov
sbbb
jb
push
out
xor
mov
push
outsb
or
push
pop
xchg
aam
dec
popa
scas
xchg
cs
jge
dec
xor
cmp
fbstp
mov
mov
dec
or
fisubs
cli
push
loopne
sub
sahf
push
lret
js
xchg
out
cli
rcl
fcmove
mov
or
lret
mov
jb
out
ret
insb
inc
jo
mov
inc
in
adc
adc
pop
mov
push
outsb
add
enter
mov
push
rclb
mov
lret
cmpsl
cmc
iret
imul
mov
fstpl
lret
sub
inc
les
nop
loope
jnp
cld
or
rcll
enter
in
cmp
shll
adc
push
push
mov
xor
dec
pop
int
in
mov
xchg
popf
sbb
ss
insl
cmp
mov
pop
add
aad
mov
fbstp
cli
es
cs
push
outsb
sub
jbe
sbb
mov
jns
je
sub
and
or
push
adc
dec
or
push
adc
jno
sbb
sub
jle
jle
push
sbb
test
mov
dec
cmp
dec
add
jae
and
jle
sbb
ret
inc
aas
push
xor
xchg
xchg
sbb
mov
xchg
or
ds
leave
sbb
pop
cmp
pop
and
mov
jnp
sbb
dec
pop
add
fstpt
jae
mov
cld
jge
test
iret
cli
inc
in
notl
xor
push
cmp
jnp
andl
mov
hlt
mov
fcmovb
stc
cld
dec
fildl
jns
push
dec
mov
sbb
push
xchg
fcompl
fcompl
lea
mov
mov
mov
mov
pop
ret
ljmp
subb
pop
push
movzbl
cmc
std
lods
test
dec
test
cwtl
adc
nop
xor
mov
xchg
das
or
xor
and
sub
stc
loop
mulps
loopne
cltd
outsb
pop
pop
add
insb
scas
shlb
pop
push
fstps
add
inc
adc
test
in
fdiv
fists
jmp
xor
push
cmp
shrb
sub
popa
jo
jnp
cmp
inc
xchg
aam
arpl
sar
fsubrs
or
negb
sub
das
push
xor
add
pop
inc
rol
sub
dec
cmp
pop
ljmp
sbb
pop
insl
mov
xchg
lret
lret
mov
add
ret
fwait
insb
cmp
jae
fidivrl
loope
sbb
xchg
inc
push
out
mov
mov
add
xchg
jge
loope
jl
dec
pop
xor
subb
lret
jbe
mul
repz
adc
inc
iret
push
lods
shll
sbb
repnz
sbb
mov
mov
sbbl
pusha
push
rorb
add
pushf
loopne
fwait
in
fwait
cmp
inc
push
jl
push
add
mov
stos
out
inc
ljmp
sbb
mov
aaa
adc
out
stos
xorb
jp
mov
pop
xchg
leave
test
shrl
arpl
inc
data16
jb
adcb
cld
nop
loope
js
lcall
fdivr
ret
mov
outsl
mov
sbb
push
fsubrs
test
mov
aas
je
jnp
sbb
setae
push
mov
cltd
cwtl
lock
cmp
or
int3
lret
fs
adc
jl
jmp
mov
data16
mov
repnz
rol
sub
mov
ret
mov
imul
shll
adc
add
pop
sub
push
mov
xchg
jnp
mov
lret
jle
jmp
sub
adc
les
sti
push
mov
test
push
and
gs
add
cs
inc
mov
test
js
enter
and
xchg
and
idivb
movsb
sbb
pop
sbb
and
in
dec
je
repz
add
test
push
test
pop
jle
or
and
mov
movsl
or
push
mov
sbb
pop
pushf
fdivrs
mov
faddl
ljmp
mov
sbb
push
ljmp
lea
add
sub
and
loop
js
mov
imul
mov
pop
xchg
loop
sbb
push
in
sub
cmp
aaa
rcr
cmpb
mov
aas
lods
mov
jne
mov
mov
mov
dec
repz
loopew
scas
rcll
add
mov
jno
sbb
or
add
testl
adc
pop
pop
lods
mov
cli
xor
punpcklbw
jnp
mov
lea
pop
data16
lock
adc
cmp
loope
ljmp
inc
ret
fisttpl
jno
jmp
sub
push
push
aas
movb
pop
loope
add
movsl
and
pop
aad
inc
and
sbb
mov
sub
adc
je
mov
js
je
mov
jl
popf
inc
push
rcr
testb
jne
mov
dec
in
or
pop
mov
mov
movb
xor
push
sti
sbbl
inc
sti
popf
jne
arpl
pop
inc
xchg
jo
xchg
and
mov
test
scas
inc
jle
pop
cltd
pushf
in
mov
ret
sbb
pusha
pop
sbb
mov
sbb
sti
fidivs
adcl
sbb
sbb
sbb
mov
xchg
sub
cmc
bound
jae
mov
or
popa
jg
out
xorl
imul
sbb
mov
je
xchg
or
das
jl
dec
add
subb
push
lock
mov
dec
inc
cwtl
cmp
je
popa
cltd
mov
test
add
mov
call
test
mull
aaa
inc
push
clc
shrl
aam
cs
adc
cmp
xor
mov
push
add
xorb
faddp
pop
add
inc
dec
sub
sbb
pop
sbb
and
mov
push
jno
jb
imul
xor
pop
mov
or
fidivs
mov
adc
loop
leave
stc
bound
leave
inc
push
test
jg
pop
sbb
sub
outsb
mov
push
mov
xchg
xchg
pop
subl
mov
push
scas
cmp
gs
aam
mov
inc
mov
fst
or
movsl
pop
push
test
iret
sub
add
adc
data16
sti
sti
fldcw
stos
fcoml
nop
inc
insb
push
jnp
push
jno
out
daa
push
cmp
out
cwtl
and
cmp
arpl
xchg
into
cmc
mov
or
sbb
sarl
mov
dec
orl
pop
sahf
sahf
cli
jmp
xchg
idivb
fs
jbe
add
dec
out
mov
add
adc
in
and
sub
sbb
not
rorl
test
gs
fcoml
stc
xchg
pusha
loop
push
fldenv
rcrl
in
cmpsl
or
mov
xchg
sbb
test
xor
sub
cmpsl
sbb
add
pop
stos
jl
mov
xchg
in
mov
sahf
test
outsl
mov
sbb
or
es
adc
push
cmp
out
pop
ds
mov
aas
js
mov
lahf
dec
jne
ja
xchg
jnp
sub
inc
cld
jp
cltd
ja
lret
lahf
sar
mov
outsl
push
lahf
sbb
scas
scas
dec
pop
or
cmpsl
imul
out
cmpb
sbb
xor
dec
sub
dec
sbb
jbe
add
call
jnp
scas
lods
nop
ret
out
xor
out
aas
out
jno
push
adc
adc
pop
js
outsb
rolb
data16
xchg
cmp
mov
jns
dec
push
mov
cld
inc
notb
cmpsl
std
clc
sbb
dec
scas
mov
and
xchg
int
lds
mov
inc
sbb
fucomp
xor
shlb
lock
adc
push
ret
xchg
xchg
or
dec
add
xorb
adc
hlt
pop
add
and
lock
outsb
arpl
fwait
sbb
cs
out
dec
int
fs
push
fs
inc
mov
mov
pop
iret
movsb
addr16
jp
in
pop
lret
cmpsb
sub
imul
jno
inc
and
out
mov
cmp
out
out
push
mov
cmp
cmpsb
repz
imul
repnz
scas
iret
les
mov
pop
insl
mov
mov
int3
pop
loopne
stos
daa
sub
imul
sbb
daa
fsubrl
or
sub
mov
add
inc
sbb
push
sub
roll
in
fidivrs
sub
ror
xor
std
lahf
mov
movq
aaa
imul
test
mov
sahf
scas
out
cwtl
mov
fidivl
lds
js
call
loopne
mov
jl
test
xchg
outsb
dec
xlat
xor
cmpb
cmpsb
xor
and
xchg
iret
adc
jg
jge
cwtl
sub
sub
popa
lcall
xchg
cmp
and
xlat
int
adc
imul
je
pop
mov
xchg
fldt
mov
pop
xchg
cwtl
add
lock
sarb
loop
sbb
mov
shl
jp
cmp
test
xchg
sbb
jnp
arpl
jp
cmp
xor
mov
adcb
or
and
xchg
add
push
jno
sub
inc
mov
cwtl
popf
test
xchg
addb
xchg
cmpsb
cmp
pop
sbb
inc
sub
call
push
popl
mov
add
xor
movsl
daa
movsb
lahf
mov
fstps
xor
addr16
cli
jnp
jbe
out
sbb
in
insl
mov
xor
shll
fdivrs
repz
dec
cmc
adc
sbb
cmp
lods
xchg
cmp
cmp
popa
sti
arpl
imul
ljmp
shll
or
mov
std
int3
cmp
ficomps
lds
lea
fiadds
push
xchg
ja
pop
add
daa
cmp
int
inc
mov
out
cmpsl
and
mov
mov
xor
orl
sub
enter
inc
jge
pop
cmp
and
jp
pop
jo
stc
leave
lahf
pop
pop
pushf
inc
rol
inc
or
dec
fchs
test
fimuls
mov
loopne
ss
ja
sub
jg
lds
sub
jo
adc
xor
sbbb
shll
xor
fwait
mov
adc
fadds
adc
jb
dec
sbb
mov
leave
push
and
popa
cmp
inc
andw
nop
stos
ret
xlat
pop
add
sbb
cld
movsl
lea
insl
lret
fisubrs
dec
sbb
loope
daa
loop
clc
in
cmp
or
cltd
xchg
xchg
loop
jmp
xchg
das
push
test
mov
xchg
add
adc
cmc
sbb
leave
push
rcr
jecxz
sahf
data16
pushf
sub
movb
jne
bnd
pop
push
into
add
jb
push
cmp
mov
cmp
cwtl
add
jo
mov
mov
mov
aaa
pop
dec
lods
and
fpatan
xchg
lods
lds
enter
pushf
out
xor
cmc
pusha
sti
shll
loop
mov
int
sub
cltd
into
shl
cli
jnp
je
jnp
aaa
add
add
ds
lods
mov
adc
js
dec
lea
enter
lcall
addr16
inc
push
inc
jns
xchg
pusha
clc
in
movsl
out
pop
cmpb
js
adc
push
scas
jbe
inc
push
cld
fsubs
xchg
mov
fists
jl
jae
push
dec
pop
and
out
xor
sbb
ljmp
xchg
xor
dec
cmp
loope
inc
shll
and
orb
ret
jo
movsb
mov
das
cld
mov
inc
or
sbb
cmp
dec
or
jae
jno
inc
fildll
aam
ficompl
inc
in
popa
test
arpl
cmp
cmp
loope
js
lahf
xchg
js
mov
and
push
xor
test
cltd
nop
js
lods
xchg
jo
es
mov
div
dec
dec
xchg
and
outsl
pop
mov
imul
xchg
or
cs
cli
ljmp
and
fstpt
scas
call
or
loopne
push
xor
popf
pop
fstpt
xor
aas
into
or
ficompl
dec
add
hlt
loope,pt
xchg
insb
ret
jge
pop
inc
adc
ret
sub
mov
ja
inc
mov
fstl
ds
push
mov
xchg
xchg
xor
jle
stos
mov
pop
mov
das
cmp
mov
and
inc
add
lock
insb
sub
outsl
and
and
add
clc
adc
dec
jecxz
push
inc
into
and
sbb
push
dec
push
push
cs
sub
aaa
fsubs
xchg
inc
mov
outsb
cmp
sub
add
test
scas
cmp
test
jg
adcb
fwait
outsl
mov
dec
mov
leave
cld
adc
dec
popa
and
jl
out
jb
jle
cmp
lcall
sti
pop
pop
iret
leave
pop
or
js
cli
stos
dec
push
jp
fsubrl
jl
or
and
add
cmpsl
jbe
sti
icebp
inc
rol
or
cmc
jne
jnp
dec
adc
jae
xor
rclb
dec
inc
sarb
stc
aad
addr16
xchg
test
imul
or
pop
jae
lods
mov
cltd
cmpsl
mov
pop
xor
and
shr
sbb
rcll
mov
into
rorl
dec
icebp
mov
add
lahf
sbb
lods
bound
mov
pop
sbb
into
pushf
fimuls
or
mov
or
movsl
repz
cmpsb
adc
add
adc
mov
mov
xor
mov
in
clts
or
or
or
lcall
xor
cld
bound
sbb
xchg
test
pop
lcall
adc
mov
pop
xchg
leave
icebp
subb
fisubrl
std
fsubrl
mov
into
imul
fidivrs
push
jno
idivl
add
cmp
fisubrs
into
jg
pop
sbb
and
push
cltd
fwait
sbb
popa
ret
cmpsb
outsb
cmp
in
adc
xor
std
mov
cwtl
mov
and
nop
mov
pop
adc
pop
mov
sub
sbb
int
sub
and
mov
rcl
out
ljmp
icebp
pop
sbb
jp
or
lods
cmpsb
imul
mov
jg
xor
push
pop
mov
xchg
test
daa
lods
xchg
js
mov
shll
cmp
dec
jl
aam
jg
lea
inc
dec
pop
add
adc
icebp
jo,pn
fnstenv
inc
jns
psubw
js
lcall
js
push
cs
mov
pop
fsub
sub
xor
push
push
sub
cmp
and
test
sti
jle
adc
add
dec
xor
fidivrl
pop
mov
imull
mov
je
call
int
mov
jle
or
mull
or
cmpsl
es
decb
or
mov
shll
and
xchg
xor
out
inc
push
and
dec
xchg
cmp
dec
pop
lock
rorl
adc
xchg
adcl
or
add
dec
bound
mov
pop
and
mov
in
orl
xlat
pop
mov
xchg
xor
jbe
out
dec
fwait
and
jne
pop
movsb
addr16
jle
mov
mov
ficomps
mov
mov
push
repz
in
lret
mov
mov
pusha
inc
inc
lods
xchg
hlt
mov
mov
sub
js
daa
or
jnp
outsb
sti
insl
addr16
mov
or
pop
xor
into
or
dec
and
sbb
xchg
into
and
fildll
out
xchg
jne
std
and
sbb
mov
loop
movsb
stos
inc
test
call
xchg
movsb
fdivs
mov
xchg
pushl
xchg
jmp
sub
lea
push
stc
das
repnz
ret
or
dec
or
sbb
out
sti
push
or
jge
xor
xchg
xchg
or
imul
mov
and
inc
xchg
ret
jl
inc
lret
add
stos
outsb
sti
leave
adc
and
icebp
mov
insb
insl
dec
xchg
or
inc
pop
adc
jecxz
ja
dec
and
cltd
xor
lcall
mov
ja
xor
cmpsl
ljmp
movsl
dec
cli
aaa
hlt
push
add
adc
xor
or
push
shrb
cmpsb
inc
mov
pop
mov
sahf
cwtl
cmc
js
popf
inc
or
dec
insb
sahf
xor
mov
ds
xchg
std
into
and
push
mov
push
test
cmp
lahf
mov
test
dec
push
mov
ds
mov
outsb
scas
and
shll
pop
sahf
sahf
xor
notb
cs
xor
dec
test
jae
sub
jno
jbe
mov
inc
cld
inc
or
jb
mov
lods
mov
ret
rcll
loopne
fcompl
roll
xor
mov
xchg
test
lret
out
adc
cs
pop
mov
xor
inc
test
cmp
aam
test
test
sar
adc
popf
cltd
xchg
sti
stos
jmp
sub
push
or
push
sub
push
aad
out
sahf
add
jp
jno
xchg
xchg
cmp
sbb
imul
sub
mov
idivl
mov
idiv
pushf
call
outsb
inc
rorl
mov
push
add
lds
pop
in
in
cs
jp
inc
out
int
adc
mov
scas
fwait
pop
das
adc
aaa
aas
and
lock
ljmp
outsb
push
dec
test
rcll
jo
int3
add
or
push
pop
aad
dec
fwait
or
mov
xchg
mov
push
jb
cmp
fisttpl
xchg
dec
daa
jmp
nop
inc
data16
mov
popf
push
mov
popf
add
or
cmp
scas
aaa
pop
out
sub
push
add
lret
aad
in
mov
gs
mov
in
mov
jnp
int3
enter
inc
add
jns
scas
mov
push
push
add
sbb
inc
mov
inc
outsb
int
aad
cmp
fucomp
loope
nop
jnp
sbb
lea
loop
scas
push
stos
pushf
xchg
inc
dec
cs
test
arpl
mov
or
loop
cmp
or
in
pusha
call
mov
pop
scas
cltd
pop
pusha
cmc
popa
int
pushf
cmp
xor
or
stc
sti
loope
stc
mov
mov
xchg
lock
add
inc
xchg
mov
ret
lret
rol
sub
outsb
cltd
mov
adc
cmpsl
fwait
or
lret
enter
or
aaa
push
dec
hlt
pusha
mov
mov
mov
inc
pop
insl
xchg
rorl
inc
pop
xor
stos
push
xchg
shll
and
inc
xchg
in
and
push
hlt
jg
movsb
lcall
out
xchg
ljmp
sub
pushf
movl
xlat
pop
stos
sbb
movsb
push
pop
xorl
in
int3
jl
cmp
xchg
sbb
add
cmpsl
push
pop
mov
and
das
rcll
pusha
inc
xor
fs
into
addr16
imul
lods
adc
pop
in
into
jmp
xchg
stc
xchg
inc
into
sarb
push
std
jne
call
repz
ds
pushf
popf
push
adc
nop
test
pop
xorl
fiadds
jge
xchg
fdivs
movsl
pop
xchg
sti
cmp
xor
inc
xor
mov
mov
adc
in
rorl
cs
ja
test
pop
dec
mov
mov
or
and
bound
inc
cmp
ficompl
fs
shlb
sarb
push
cwtl
push
jl
outsl
es
or
fidivl
or
mov
jl
jl
ror
fsubl
inc
out
dec
push
pop
imul
and
stos
lods
js
jle
fldenv
lret
imulb
dec
add
sub
mov
push
repz
cli
pop
ja
mov
sarl
jno
mov
and
push
ljmp
cmp
mov
icebp
aaa
sbb
dec
cmpsb
mov
cli
and
aas
test
cmpsl
movsl
xlat
scas
imull
das
dec
shrl
dec
jnp
loop
xlat
call
int3
and
in
push
jbe
mov
sbb
dec
push
lcall
pushf
mov
cli
xor
pop
jle
inc
and
xor
sbb
aam
sbb
aaa
inc
pop
push
push
add
stos
int3
mov
dec
mov
ret
pop
mov
std
xchg
hlt
dec
insl
fldpi
cmp
in
xor
frstor
iret
mov
add
lahf
fldl
add
subb
aaa
in
mov
out
jo
das
push
mov
enter
xchg
mov
div
arpl
inc
jl
sub
mov
stos
pop
sahf
xchg
lods
test
push
mov
aam
cwtl
or
xor
pusha
sahf
adc
lds
aaa
lds
fidivl
cmp
fsub
pop
pushf
dec
rorb
ds
mov
xchg
lcall
and
jecxz
inc
hlt
mov
mov
push
rorb
shrb
xor
dec
mov
xor
mov
adc
sbb
int3
fiaddl
enter
and
addr16
stc
inc
ja
adc
push
xor
xor
sbb
jne
popa
int
mov
stc
fwait
jno
ficompl
shll
test
shrl
repz
inc
add
pop
pop
xor
xchg
sub
ja
or
out
mov
pusha
pushl
daa
jns
ja
lds
mov
and
icebp
and
and
pop
jmp
imul
pop
outsl
sahf
in
and
pop
cmpsb
out
mov
adc
decl
shr
xor
pushaw
mov
rcll
sub
mov
xor
inc
icebp
imul
dec
and
and
cmp
movsb
mov
stos
dec
inc
adc
iret
rcrb
mov
mov
lret
mov
cmp
fnsave
lods
mov
dec
test
jl
xchg
inc
mov
xchg
fidivl
mov
sbb
push
pop
jns
loop
or
imulb
hlt
rcl
stos
add
mov
or
push
sbb
push
enter
mov
pop
out
cmp
ds
fs
push
pushf
sbb
repnz
stc
sbb
add
bound
out
xchg
jmp
jns
push
mov
mov
mov
and
adc
jge
lds
fsts
sub
jbe
je
pop
stos
nop
push
mov
push
insb
repz
enter
shrl
sar
lret
jmp
stos
lret
lods
repnz
inc
add
pop
cmp
sub
add
pop
inc
or
xchg
mov
jno
iret
mov
push
dec
in
cs
pop
cmp
sub
mov
sbb
test
pop
sbb
in
enter
loop
inc
mov
xor
scas
xchg
or
jecxz
rclb
in
pop
xchg
inc
sahf
xlat
pusha
cmp
js
insl
mov
pcmpeqb
jae
push
fabs
push
sbb
inc
movsl
mov
dec
arpl
ret
pop
scas
sbb
xchg
cld
fcoms
repz
out
inc
push
dec
mov
mov
pop
insb
aad
mov
cli
sub
adc
jecxz
sti
je
call
fisubl
jge
dec
addr16
adc
push
arpl
jnp
sub
cmp
inc
aas
add
lods
xor
ds
push
mov
add
push
jge
ljmp
imul
add
imul
call
mov
and
adc
cmp
and
stos
fiaddl
popa
inc
mov
jp
into
xor
and
xorb
test
push
jp
adc
daa
jno
dec
js
jle
adc
adc
pop
or
cltd
adc
mov
inc
outsl
shlb
cmp
jbe
xchg
mov
lcall
nop
ffree
scas
cmp
xor
cltd
adc
rcl
ljmp
xor
sar
mov
push
jle
adc
adc
xchg
add
add
mov
adc
fisubs
fwait
lahf
cmpb
sbb
push
dec
int3
sbb
inc
movsb
cli
push
xchg
pop
fiadds
inc
or
jge
cltd
inc
jp
ljmp
pop
dec
push
dec
mov
stos
xchg
movsl
cmp
adc
pop
scas
cmpsb
movsl
fmul
jmp
pop
insb
stos
pop
clc
xor
cli
sbb
repz
insb
jne
mov
adc
orb
xchg
mov
addr16
loopne
out
repz
mov
mov
pop
push
in
nop
loopne
movsl
inc
xchg
pushl
add
jno
pushf
in
repz
sbb
or
and
loop
adc
mov
aam
gs
fadds
push
sub
or
jl
add
dec
xchg
test
out
idivl
mov
frstor
shll
psrad
fs
fld
and
cmp
sbb
cmc
rcrb
jmp
lods
push
ret
cmp
pusha
out
add
push
xchg
mov
hlt
lods
pop
lcall
in
mov
push
or
popa
xor
inc
shrb
sub
vcvtsi2ssl
out
xorb
jg
pop
dec
scas
in
scas
push
add
imul
inc
lahf
xchg
lret
repz
jns
ss
sub
std
test
sbb
les
repz
ja
dec
push
iret
mov
ret
ja
sbb
negl
std
push
add
mov
pop
jmp
lret
mov
call
dec
cmp
mov
push
pop
ffree
adc
ljmp
js
or
sub
mov
cmp
xlat
outsb
repnz
push
inc
inc
dec
aas
stc
stc
fmull
mov
inc
cwtl
cmp
mov
push
xchg
scas
inc
into
mov
pop
mov
rcl
ret
cli
mov
sub
push
out
xchg
dec
xchg
jecxz
in
pop
add
and
pop
lock
testb
out
je
sbb
je
sub
loope
push
xor
mov
xor
mov
rorb
dec
bound
fdivs
addr16
mov
sbb
xor
inc
test
fisubl
stos
mov
rorl
call
je
add
ds
dec
addb
ret
leave
stos
mov
frstor
dec
insl
hlt
subb
jb
mov
daa
sbb
nop
mov
lds
jg
push
and
and
out
jle
rcrb
or
insl
inc
insl
aad
or
lea
test
cmpsl
scas
imul
mov
sbb
ficomps
dec
mov
push
xchg
mov
inc
jl
mov
push
mov
fdivl
push
cli
icebp
mov
flds
mov
dec
jl
mov
in
inc
lret
clc
jo
inc
mov
pop
std
bound
or
push
jle
je
les
or
cmp
xchg
mov
mov
sti
jmp
pop
sbb
sbbl
mov
jmp
cmp
nop
notb
dec
add
xor
mov
xor
cmc
fldl
mov
pop
orb
sbb
lahf
js
lods
dec
popf
cli
idivl
xor
or
cmp
rorl
in
pop
mov
sarb
dec
or
out
mov
mov
add
cmpb
add
mov
or
mov
mov
fldenv
fnsave
and
pusha
mov
add
shrb
lea
pop
ljmp
test
lcall
jne
mov
gs
push
jae
fisttpll
or
pop
in
mov
add
fists
clc
xor
mov
add
cltd
pop
mov
sub
enter
sbb
mov
ja
sbb
icebp
gs
repnz
inc
outsb
push
xor
sub
repnz
jbe
fcmovu
sub
adc
ret
sub
sub
arpl
xchg
ror
repnz
push
jae
lock
mov
sub
sub
fidivl
jno
cmp
insb
scas
pop
outsl
aad
mov
push
test
int3
add
inc
xor
sub
aam
mov
mov
ret
in
push
les
and
add
mov
pushf
jb
fistpll
imul
jle
mov
mov
mov
xchg
cli
mov
mov
frstor
repz
and
xor
inc
lahf
xor
repnz
push
dec
movsl
loope
in
fildl
xchg
inc
inc
or
pop
cmc
mov
lods
jp
loope
shlb
dec
adc
jns
cli
sbb
imul
inc
pushf
inc
idivl
clc
sbb
or
inc
jmp
fidivrl
adc
mov
loopne
sbbb
outsl
fimull
cmp
fstps
inc
stc
adc
pop
fcompl
mov
and
push
scas
lret
mov
fdivrl
inc
xor
hlt
add
sub
push
jae
jp
fildl
pop
popa
movsl
mov
aaa
in
xor
subb
arpl
mov
in
or
outsl
orl
cltd
and
sti
rorl
mov
jns
lret
je
pop
jge
mov
pop
jbe
pop
imul
out
or
stc
rclb
loop
inc
cmp
sub
iret
roll
test
mov
mov
sbb
loopne
push
mov
insb
adc
pop
sahf
adc
or
and
cmp
nop
mov
sti
iret
mov
dec
int3
pop
sub
rclb
insb
mov
es
popf
lea
cld
pusha
dec
fisttps
pop
test
pop
push
inc
das
and
popf
divl
xchg
shr
jno
mov
xor
jp
inc
sbb
es
inc
imulb
or
sbb
fst
cmp
mov
push
mov
in
cmc
add
sub
push
les
add
dec
stc
push
mov
lock
je
mov
dec
sti
aas
clc
add
movsb
fcom
dec
daa
cltd
inc
cmp
adc
inc
sbbb
add
push
out
int
sbb
mov
outsl
dec
sbb
insl
jne
xchg
pop
lcall
dec
push
jae
push
push
xor
sar
insb
cmpsl
sub
dec
push
add
mov
aad
out
fs
or
cltd
mov
mov
aad
loopne
test
pop
lds
dec
add
sub
in
in
call
pop
and
daa
incb
mov
test
in
sar
mov
mov
push
jg
adc
std
cmp
int
adc
cmp
andb
ss
push
sbb
stc
jb
mov
mov
jg
nop
test
jnp
imul
add
icebp
fistpll
xor
sbb
mov
push
hlt
xchg
mov
fcmovnu
cwtl
push
pushf
adc
sbb
dec
xchg
jmp
arpl
pop
jmp
adc
cmpsl
ret
scas
add
xchg
aas
dec
pop
out
xor
xlat
cltd
jle
push
jg
ficoml
xor
inc
cmp
xchg
mov
and
mov
cmp
cmpsl
inc
notl
sti
es
fldcw
in
leave
pop
scas
jge
out
cmpsb
lret
ljmp
adc
pop
and
frstor
dec
jne
test
int3
adc
pop
sbbl
xchg
aad
jb
push
sub
in
pushf
xchg
xchg
scas
jg
inc
out
mov
es
jo
in
fstp
hlt
js
cmpsb
out
xlat
inc
clc
sub
sbb
push
lds
lock
rcr
cmp
stos
lahf
pop
cmpsl
adc
aad
or
cmpsl
rorl
pop
pop
repnz
xlat
loopne
jmp
ret
fidivs
mov
cmp
jo
sarb
push
dec
mov
scas
inc
jns
push
xchg
xor
adc
mov
pusha
aad
adc
cli
jnp
jmp
sahf
enter
mul
lahf
inc
and
xchg
scas
fbld
leave
stos
push
push
aad
push
dec
pop
add
mov
ret
push
pushf
movsl
jb
std
fwait
push
inc
int
xchg
lods
out
insl
xchg
test
scas
push
pushf
xor
icebp
dec
fsubl
shl
test
push
push
jg
ljmp
shlb
pusha
jp
mov
inc
nop
test
xchg
aaa
and
scas
mov
gs
mov
scas
add
out
test
movsl
out
push
inc
jae
or
mov
xchg
pop
aaa
pop
push
and
js
jmp
rcrl
pushf
fldcw
dec
push
mov
xchg
inc
int3
sbb
repnz
xor
insb
jecxz
inc
jnp
sub
test
jnp
pushf
sbb
cwtl
add
and
xchg
rorb
jnp
pop
mov
jno
push
lods
xchg
pop
push
mov
pushf
push
pop
sub
adc
cmp
scas
popf
jns
mov
loop
jl
jecxz
pop
xchg
in
mov
idivb
cmc
lods
jl
jecxz
mov
push
jmp
lret
xchg
out
adc
xchg
adc
addr16
xchg
pop
push
jp
cmc
jg
addl
nop
adc
xor
ret
sub
jecxz
test
out
dec
hlt
cltd
insb
out
mov
mov
cs
movsb
into
daa
es
neg
adc
jmp
xor
sub
pusha
repz
js
clc
enter
stc
cs
jge
sbb
add
mov
add
pushf
cmp
and
lods
pop
pop
pop
sub
cltd
filds
jge
jl
jae
add
xchg
cmp
push
pop
lock
and
push
iret
push
movsl
jbe
push
aad
fistpll
add
scas
daa
cwtl
filds
scas
inc
out
fwait
das
lret
adc
inc
in
sbb
ret
cmp
mov
test
cmp
loope
shrb
pushf
xchg
outsl
xchg
dec
out
enter
push
push
sub
sahf
jnp
push
mov
lahf
ss
dec
sub
repz
stos
les
xchg
mov
inc
mov
insb
add
dec
out
ljmp
inc
call
and
movb
pop
sub
jns
outsb
sub
or
and
insl
jne
mov
jnp
adc
mov
insb
and
xchg
pushf
fdivl
jne
jl
push
jecxz
or
xchg
aad
pop
ljmp
push
scas
pop
mov
mull
lods
lods
fldenv
ficoml
xor
out
gs
dec
push
stos
jno
xor
es
push
ds
test
push
lea
xchg
add
xor
dec
push
mov
out
sbb
stc
cs
insb
aam
and
jg
add
sub
ds
mov
fs
pushf
lods
clc
jbe
and
arpl
cld
sbb
jmp
dec
test
in
test
xor
insb
xor
gs
std
inc
das
inc
mov
xor
or
push
mov
inc
test
pop
ficomps
arpl
mov
cmpsb
inc
mov
sbb
mov
push
mov
mov
jbe
xchg
jno
cmpsl
fwait
aas
mov
imul
jbe
popa
mov
call
xor
cmp
ret
jmp
nop
mulb
push
mov
xchg
xchg
call
or
ja
loopne
mov
dec
xchg
lods
adc
imul
inc
aam
cmp
adc
rcrl
rcrb
fs
repz
or
pop
jle
outsb
pop
insl
aam
ret
pop
inc
push
dec
out
push
sub
arpl
cmp
push
cmc
and
adc
movsb
jecxz
mov
cmp
shl
dec
adc
call
test
mov
push
mov
cld
dec
adc
bnd
cmpsl
xchg
adc
ja
jecxz
leave
pop
inc
pop
sbb
je
scas
cmp
icebp
pop
mov
pop
inc
jae
pushf
mov
insb
ljmp
iret
cmc
movsb
add
mov
xchg
pop
stc
cmp
pushf
clc
push
push
mov
pop
pushf
nop
out
push
idivb
aas
js
outsb
cmpsb
daa
aam
lds
fs
adc
cmc
pop
das
xchg
and
je
out
test
fs
lods
into
jge
pusha
lret
retw
fstps
inc
sbb
cwtl
insl
loope
or
in
je
dec
push
fisttpl
adc
mov
mov
sbb
cltd
out
insl
outsl
addr16
or
lret
jmp
push
sub
xchg
dec
ljmp
shl
mov
and
jmp
popf
push
or
jp
sbb
sbb
ds
cli
fwait
inc
leave
fisubl
mov
in
xchg
add
xabort
cs
adc
notl
test
shlb
dec
adc
or
pusha
cmpsl
and
out
mov
popf
cs
mov
cmp
stos
xor
sti
fistps
adc
mov
push
xchg
add
mov
jle
mov
aad
sahf
aas
cmp
outsb
shlb
pop
into
std
cmc
dec
ds
dec
mov
or
or
jl
in
mov
fs
out
fcompl
xchg
xlat
cmp
stos
sbb
cmp
out
or
std
inc
mov
jae
push
sbb
sub
mov
push
rolb
mov
loope
cwtl
adc
ss
das
fs
and
xor
inc
adc
push
mov
push
mov
outsl
cmp
sahf
cwtl
mov
in
inc
int3
shlb
sbb
enter
push
test
jecxz
pop
out
sub
cli
or
xchg
lahf
jl
xchg
or
mov
popf
sub
test
sbb
lods
cmp
bound
ret
imull
sti
cmpsl
cmp
bnd
daa
cmp
pop
neg
inc
icebp
dec
xor
cmpsl
xchg
mov
mov
and
or
pop
mov
xor
pop
add
pop
pop
jmp
inc
mov
ret
sub
jge
sub
repz
mov
jmp
loop
push
add
dec
aaa
add
fs
pop
cmp
inc
dec
cwtl
pop
icebp
popf
and
sbb
shlb
ret
sub
lea
and
fsts
pop
sub
popf
loope
dec
mov
cltd
cmpsl
outsl
jns
xchg
xor
imul
cmp
and
sahf
xor
mov
mov
add
and
cmc
dec
into
sub
lds
push
repz
mov
dec
les
daa
popf
xchg
jl
aas
pop
inc
test
or
daa
or
mov
lds
loop
dec
in
jno
mov
repz
pop
icebp
and
mov
into
cltd
inc
stos
insl
inc
push
mov
fisttpl
shl
cltd
dec
cmpsb
or
jge
mov
mov
mov
rorl
insl
int
std
jo
mov
pop
xchg
repnz
pusha
xchg
jbe
inc
cmpsl
dec
xchg
fbstp
ss
out
das
and
lcall
lahf
icebp
cmp
or
stos
push
repz
push
andl
cwtl
data16
nop
addr16
ja
jne
fs
sbb
sbb
ss
pushfw
jae
cmc
sbb
mov
jl
pop
pushf
hlt
rcrb
adc
lock
in
mov
rorl
addr16
and
hlt
and
mov
clc
jnp
addr16
fdivrs
xor
js
int3
lret
in
pop
push
xchg
aad
dec
into
inc
in
dec
push
xor
adc
aas
cmp
lret
clc
int
int3
cwtl
xchg
or
pusha
or
mov
ja
in
gs
repz
pop
adc
xlat
dec
mov
int3
popf
jle
push
in
inc
stos
xchg
add
daa
sti
ljmp
xor
dec
cmp
scas
jns
cmp
shll
mov
or
out
xchg
push
pop
jmp
inc
sbb
hlt
add
dec
xchg
mov
sub
pusha
mov
std
jmp
testl
dec
xor
insl
dec
xor
lds
in
pop
jp
sub
push
push
mov
aas
mov
dec
xchg
scas
dec
jmp
jecxz
dec
push
out
gs
xchg
std
xor
sarb
mov
push
xor
repnz
jge
jmp
add
fiaddl
cmpsb
cld
cmp
shll
popf
outsl
or
lcall
call
sub
cmpsb
scas
sbb
push
roll
adc
in
pop
jmp
cmp
mov
inc
imul
fwait
ret
rcrb
dec
adc
rol
fs
enter
or
add
or
scas
shll
lahf
jbe
sbb
xor
negb
jp
xor
fidivrs
mov
xor
pop
les
cmp
repz
call
and
mov
cmp
mov
xchg
adc
xchg
fwait
push
mov
lock
enter
push
lea
and
sub
jg
sbb
jge
minps
jecxz
jecxz
mov
sub
jns
pop
imul
pop
fwait
mov
pop
push
or
push
pop
mov
pop
cmp
mov
arpl
in
and
or
or
cmpsl
fnstenv
push
sub
pop
xor
ja
es
pop
out
leave
lock
mov
pushf
in
mov
push
mov
inc
loope
orb
outsb
mov
fs
and
push
in
imul
adc
fwait
dec
call
mov
pop
or
sbb
lret
cmc
int3
shlb
jno
pop
bound
sub
lock
rcrb
sbb
xchg
pusha
frstor
mov
testl
xor
out
or
push
cmp
push
mov
or
popa
jnp
xlat
sbb
inc
adc
mov
test
lods
xor
fisubrs
in
mov
sbb
xchg
ljmp
xchg
icebp
adc
push
int3
cmp
out
movsb
sub
popa
dec
sbb
lock
push
mov
lret
insl
push
bound
mov
rorl
out
push
popf
push
sbb
xchg
inc
push
dec
je
push
sti
jns
test
add
xor
addr16
jmp
or
dec
test
test
je
js
lret
sbb
insl
mov
jge
sub
jle
je
or
dec
icebp
les
mov
inc
notl
adcb
dec
cwtl
cmp
dec
stos
xchg
mov
repz
jle
or
jle
xchg
xor
imul
mov
mov
loope
sbb
push
sti
pushf
nop
cltd
push
push
cwtl
je
jae
push
int
sbb
sti
scas
pop
out
aas
das
cld
outsl
sbb
and
in
sub
fdivs
rcll
pop
push
mov
xchg
or
xor
gs
sbb
in
pop
adc
fisubl
pop
movsb
pop
add
rcrl
bound
test
cltd
fistl
mov
fistps
ret
popf
std
in
adc
aaa
xor
call
xor
mov
adc
bnd
nop
ret
mov
inc
adc
jo
jmp
je
arpl
aas
dec
clc
int
in
jp
lret
adc
cltd
es
cs
jmp
stc
add
mov
add
add
xchg
pop
adc
popf
dec
adc
insl
js
mov
fsubrs
bound
inc
push
mov
pop
cli
call
push
xchg
out
push
rorb
xchg
dec
inc
jnp
popa
test
or
and
test
push
push
cld
adc
test
pop
fcmove
push
fistpll
or
ss
popa
lcall
mov
push
sti
test
dec
aas
movsl
mov
or
lcall
sbb
mov
loope
mov
movl
mov
dec
jo
insb
xchg
test
mov
fwait
dec
std
inc
in
daa
arpl
cs
add
jmp
jp
sbb
popa
mov
sub
nop
das
movsl
andl
ja
divl
pusha
iret
xchg
inc
or
inc
push
adc
jns
loopne
or
cld
jmp
mov
jne
jne
leave
cmpsl
frstor
lahf
sti
dec
cmp
pushl
adc
jnp
popf
pop
fdivr
lock
xchg
ja
add
clc
add
loop
sahf
cmpsl
stos
sbb
aad
dec
jle
test
inc
adc
shll
sbb
or
cld
pushf
jne
sub
mov
data16
ret
xchg
or
xorb
jns
adc
or
adcb
mov
dec
fcoms
movsl
stc
mov
lock
out
pop
test
xor
cli
in
incb
clc
cs
dec
rcll
movsl
call
aas
inc
xor
xchg
cld
xchg
insb
jl
or
sub
pop
xor
push
xor
lahf
inc
lods
cmp
movb
xchg
lcall
stc
cmp
mov
xchg
repnz
mov
das
mov
daa
cltd
out
aaa
sbb
jmp
dec
pop
dec
test
jecxz
ret
mov
outsb
cwtl
mov
inc
stos
xor
test
push
fwait
int
fs
popf
or
sub
add
test
xor
ret
mov
push
scas
adc
mov
and
or
mov
movsb
jmp
mov
out
mov
mov
cmpsb
stos
fnstcw
xchg
adc
pop
sbb
nop
mov
xchg
nop
adc
aad
sub
in
mov
mov
lock
jl
inc
outsb
scas
sub
xchg
mov
test
mov
insb
subl
xor
and
mov
push
lds
clc
movsl
test
xchg
push
inc
testb
scas
popa
and
ss
bound
roll
in
and
xchg
arpl
sbb
mov
sbb
sbb
repnz
push
call
mov
clc
call
or
push
sub
rcrb
gs
push
test
cmc
dec
aas
mov
mov
or
mov
shrb
adc
mov
andl
or
imul
xchg
xchg
push
fcos
adc
mov
jmp
insb
movsb
les
nop
mov
jge,pt
xchg
xchg
cltd
push
jae
cmp
andl
mov
stos
cld
pop
xchg
adc
push
mov
pop
sahf
fnstsw
hlt
cli
dec
inc
int3
jb
jmp
loop
and
loop
cmc
lret
clc
push
insb
adc
xchg
lds
repnz
lahf
ret
test
adc
out
orl
xchg
fwait
or
dec
pop
mov
inc
push
jge
icebp
pushl
mov
scas
arpl
mov
add
push
cmpsb
xchg
jle
mov
test
call
adc
mov
sarb
mov
insl
inc
jnp
adc
js
push
mov
cwtl
mov
dec
jmp
sbb
jo
add
jmp
int3
push
shrb
push
cmp
pushf
inc
movsb
xor
clc
sub
jg
dec
sbb
add
outsb
stos
xchg
mov
push
cmp
into
jg
test
pushf
sarl
xchg
or
in
stos
pusha
adc
cmp
dec
ret
mov
jg
retw
pop
xor
jle
xor
mov
and
fists
hlt
lods
xlat
or
pop
xor
lods
rcll
dec
int
push
fbld
cmp
cmp
mov
sub
fs
inc
hlt
mov
xor
sti
imulb
ja
push
xchg
xchg
dec
in
mov
mov
xorl
push
lret
xor
loopne
scas
mov
ret
mov
pop
in
pop
call
inc
adc
fwait
mov
rcrl
add
arpl
xchg
and
imul
adc
mov
ljmp
sub
in
and
test
loopne
pop
bt
jne
repz
cmp
xchg
adc
mov
hlt
repnz
jae
push
imul
add
cmp
das
xor
sti
pop
mull
shll
mov
iret
push
push
inc
add
jmp
je
movsl
lret
popa
je
push
and
int
shlb
push
jno
push
jnp
cmp
mov
xchg
push
jle
popf
adc
pop
mov
ja
test
dec
xor
inc
ret
push
jge
xor
mov
mov
hlt
xchg
push
xchg
sub
out
dec
or
nop
push
lcall
jmp
outsb
frstor
lahf
xchg
sub
xchg
mov
dec
push
imul
and
shrb
push
jecxz
adc
jo
mov
or
xchg
push
lods
mov
mov
fistps
sbb
sbb
xchg
and
or
cli
add
jb
mov
jno
jl
sub
insb
mov
push
stos
int
inc
push
es
pop
outsl
or
arpl
and
fisubl
mov
fmul
addr16
mov
mov
lret
sbb
pusha
gs
fsubrs
aaa
jmp
sbb
movsl
popa
or
int
lock
mov
cld
cltd
in
inc
cmp
add
imul
pusha
jg
in
xchg
stos
call
dec
push
dec
loope
xchg
push
mov
and
in
cltd
inc
and
mov
outsb
mov
sahf
adc
aas
push
fisubrl
mov
les
sbb
into
and
and
rorl
add
pop
ds
pop
in
sti
xchg
ret
sub
fbld
push
adc
adc
push
and
xchg
push
and
aaa
sahf
aaa
in
xor
mov
jno
lea
int
cmp
mov
cmp
ret
xor
and
or
sub
jne
call
cwtl
sbb
cli
negl
jl
packssdw
xchg
popf
ret
or
xorb
mov
xchg
sub
ss
jmp
xchg
arpl
stc
loope
icebp
nop
leave
bound
insl
cmp
negb
fs
sub
xor
jmp
add
inc
sub
push
dec
xchg
outsb
xchg
stos
dec
das
jnp
sbb
sub
xchg
rorl
xor
xor
push
les
jb
out
in
xor
xlat
into
fwait
jns
out
imul
lds
and
and
and
scas
int3
out
clc
test
add
jno
pushf
cltd
stos
sbb
xor
enter
jge
enter
inc
inc
xlat
dec
jnp
push
orb
repz
xchg
in
add
xlat
movsb
pop
cli
rcr
sub
pop
aas
sub
and
mov
cltd
adc
and
push
push
stos
cmc
sub
push
adc
imul
repz
mov
push
mov
push
mov
add
into
lds
call
ss
xchg
fnsave
or
cmp
loop
or
popl
pushl
add
insl
add
lods
sbb
aas
ja
fldl
cmp
in
jnp
cltd
es
stos
ret
scas
and
sarb
add
mov
push
inc
pop
push
dec
in
mov
and
dec
xchg
std
and
sbb
pop
jno
shrl
push
dec
out
loop
pop
loop
and
mov
ljmp
mov
or
pushf
mov
mov
inc
xchg
sub
sbb
jne
jno
ss
xor
xchg
aaa
mov
mov
fs
test
lock
aaa
leave
sub
and
add
bound
mov
xchg
xchg
adc
cmpsb
mov
push
mov
rcl
xlat
cmp
test
cmp
and
xor
cmp
jns
jne
aad
jge
popf
mov
mov
xchg
jge
sbb
add
push
adc
pop
xorb
or
inc
xor
imul
cli
aaa
jle
ljmp
pop
enter
push
movsb
mov
pop
sub
shrl
in
stos
das
ds
mov
xchg
dec
push
and
sbb
lahf
movsl
xchg
out
xchg
jle
call
pop
imul
outsb
and
fbld
mov
pop
loope
sti
cmpsl
insl
test
add
addl
xchg
sahf
and
fistl
xlat
or
push
mov
mov
in
mov
rclb
pop
shll
rolb
pop
add
dec
call
dec
stos
mov
loopne
insl
fimuls
or
cs
jge
dec
leave
push
mov
sti
js
les
int
andb
insl
movsl
lods
nop
popf
jmp
enter
test
outsb
cmp
adc
jmp
adc
xchg
fwait
jecxz
dec
jo
movsb
cli
cmp
mov
or
sub
out
dec
sarb
adc
mov
sub
push
imul
shrb
popf
loop
cltd
mov
and
enter
push
dec
into
sbb
push
mov
push
pop
pop
in
in
xor
push
leave
cltd
mov
push
and
jae,pt
lock
cmp
lods
loopne
shrl
pop
ret
in
in
enter
jmp
adc
fmuls
shl
add
and
or
mov
sbb
shr
mov
fucomp
adc
mov
pusha
sub
dec
sub
pop
stos
call
repnz
shll
repz
daa
inc
aam
sub
xchg
inc
mov
pop
and
mov
popa
aas
xorb
jge
pop
movsl
popf
je
lods
xorps
out
lea
sahf
mov
inc
mov
fldcw
addb
icebp
in
ds
add
adcl
xchg
mov
imul
mov
push
out
cs
lods
dec
in
and
fsubr
scas
jmp
and
stos
jmp
cld
loop
mov
aaa
jl
stc
rcl
hlt
xor
mov
mov
push
scas
mov
push
sub
add
mov
out
out
test
pop
mov
fcmove
movsl
scas
mov
lock
sub
int
add
mov
cmp
add
cmp
inc
xchg
mov
ljmp
into
jo
pop
cmpsb
mov
add
add
ss
fcompl
pop
cmp
leave
fbstp
mov
fisubrl
cmp
cmp
xor
pop
je
roll
adc
jnp
mov
xor
inc
push
in
ja
outsl
mov
hlt
inc
push
dec
xor
and
lods
sbb
out
mov
movsb
cmp
dec
pop
mov
test
addl
jmp
push
add
call
repnz
sbb
ja
or
dec
sub
push
sub
xor
nop
mov
aam
rorl
es
imul
mov
in
ds
dec
add
sub
adc
rcrl
mov
inc
outsb
sti
out
fmull
orb
in
and
mov
mov
inc
out
out
dec
jb
fisttpll
nop
cmp
lret
xchg
xchg
mov
pop
adc
movsb
jl
xor
insb
movsb
jns
cmp
iret
add
xor
mov
or
ret
sbb
xor
das
and
pop
pop
sub
adc
imul
mov
sarl
sbb
xchg
and
push
cmp
dec
mov
testb
icebp
mov
mov
je
mov
pop
aad
pop
dec
push
pop
movsl
movsl
fcomip
lahf
and
mov
sub
fadds
fnsave
dec
outsl
adc
movsl
jno
mov
jge
daa
mov
mov
xchg
xor
out
addr16
mov
in
mov
inc
or
notb
std
or
shrb
pop
mov
addl
adc
adc
in
shl
and
sub
rcrl
lret
sti
push
mov
cmp
or
jb
ss
insl
into
push
jnp
jns
pop
cmpsl
lods
inc
sbb
stc
cmp
sbb
cmp
xlat
pusha
lock
mov
mov
pop
stc
call
xchg
add
inc
dec
jecxz
out
in
mov
data16
imul
jae
test
lahf
sbbl
dec
pop
add
sbb
jp
aaa
jle
dec
dec
xor
sbb
daa
jp
push
pusha
in
inc
icebp
jne
mov
in
dec
ret
lods
or
iret
pop
repz
pop
jns
pop
adc
test
lods
popa
gs
add
aam
push
xor
xchg
in
mov
jle
lds
inc
into
xchg
sub
popf
out
xchg
xchg
lock
mov
xor
mov
std
or
int3
imul
mov
jecxz
loop
push
icebp
or
mov
mov
fmuls
syscall
jne
aas
scas
xor
int3
sub
cmpsb
lret
sbb
xor
cltd
cwtl
mov
cmp
cmpsl
add
or
in
sub
and
mov
cmpsb
and
sub
mov
cli
outsl
mov
sti
mov
and
scas
push
and
ds
enter
and
or
orb
pop
cmpl
das
push
lcall
pop
cs
aam
sbb
cmpsb
dec
cmc
xchg
arpl
inc
inc
push
xor
imul
sbb
subl
iret
call
js
int3
out
push
sti
out
and
cmp
mov
add
or
int3
test
lods
sbb
sub
or
test
dec
pop
sbb
outsb
pop
mov
mov
push
mov
inc
inc
or
fadds
push
cmp
mov
mov
xchg
push
test
loope
rol
dec
cmp
xchg
lock
mov
out
inc
je
sar
sub
jge
mov
enter
or
cmp
stos
push
jnp
mov
les
fwait
out
shl
mov
jmp
scas
ret
pushf
scas
lahf
ret
push
test
aaa
aam
addb
mov
xor
sbb
insl
clc
add
fisubrs
cld
scas
lcall
in
lds
push
xchg
add
sub
jbe
nop
enter
lods
fcomps
dec
sar
cmpsl
dec
out
adc
mov
repnz
ficoml
adc
cld
cld
adc
fcomps
dec
xor
push
xchg
sub
nop
pusha
fs
sub
push
add
cmp
mov
dec
shrb
ret
push
jb
sub
xchg
jne
and
jb
jg
loop
or
ror
test
pop
xor
adcl
clc
into
push
lret
fimull
lods
in
pop
mov
xor
clc
cmp
repnz
mov
cmp
mov
gs
mov
icebp
push
dec
call
mov
jno
std
pop
xor
xchg
ljmp
mov
in
repz
inc
subb
loop
jecxz
fsts
mov
cmpsl
mov
mov
shl
mov
mov
add
cmp
mov
cmc
lahf
sub
push
jle
lcall
std
mov
adc
mov
scas
push
or
das
jmp
cmp
js
jge
ljmp
movsl
mov
jle
xorb
mov
add
test
xchg
dec
mov
jp
xor
sub
jo
sub
ss
dec
push
jbe
dec
and
mov
fstps
es
mov
cmpsb
xorb
call
out
ja
lds
cmp
call
lods
xor
xor
and
push
push
xchg
andb
bound
loope
hlt
les
and
mov
mov
xchg
into
lret
dec
stos
pusha
cld
scas
pop
dec
cwtl
ret
js
push
push
scas
lea
out
movsl
dec
push
sub
out
fdivrs
test
mov
jnp
xor
pop
xchg
pop
push
cltd
cmp
ret
push
pop
and
mov
int
aaa
stos
mov
lcall
iret
insl
xchg
test
lods
out
or
mov
xchg
lahf
daa
sbb
sbb
sub
dec
mov
into
sbb
xchg
lds
push
decl
aad
push
add
dec
dec
out
push
cmpsb
dec
imul
xor
movsb
inc
aaa
aaa
mov
push
iret
jo
mov
pusha
ret
mov
push
xchg
ret
cmc
push
push
cmp
mov
jne
push
pop
dec
inc
xchg
stos
cmp
test
fdivl
dec
pmuludq
jno
arpl
push
inc
pop
lds
popf
sub
inc
mov
push
xor
test
je
xor
pop
push
in
inc
mov
rcr
push
jl
jne
pushf
aas
incl
in
sub
fimull
cmp
fistpll
mov
sub
dec
outsb
enter
lahf
xor
rcrl
sarb
lods
push
mov
imul
inc
fs
pop
daa
dec
mov
fwait
idivb
mov
sub
mov
cmpsb
mov
pop
lock
jo
jg
xor
aaa
rcrb
loope
sub
xchg
ja
out
mov
mov
pusha
mov
dec
std
xor
sbb
mov
jle
rolb
adcl
jbe
cltd
data16
jbe
xchg
mov
mov
adc
xlat
lods
and
fsts
pop
jno
pop
gs
mov
enter
adc
dec
call
jne
jb
incb
inc
xor
scas
mov
bound
mov
fidivrs
push
and
inc
or
div
les
xchg
mov
pop
fidivrl
lcall
push
mov
popf
xor
jmp
pop
lds
sar
icebp
arpl
lods
imul
mov
inc
outsb
push
pop
ficomps
arpl
out
lock
sbb
lods
and
sbb
andl
xchg
into
mov
jbe
cmpsb
idiv
mov
mov
or
dec
mov
pop
movsb
xchg
ret
adc
int
shrl
dec
and
and
gs
dec
cmpsb
fwait
insb
loopne
jo
gs
pop
jle
in
rolb
loop
jmp
movsl
mov
subb
mov
and
xor
mov
in
sub
lret
and
push
or
mov
fwait
dec
push
out
push
mov
stc
adc
outsl
pop
or
pop
adc
or
or
mov
sbb
lret
cmc
subb
ror
sahf
xlat
sub
xor
mov
sbb
mov
and
aas
pop
test
jmp
outsl
or
mov
fisubrl
sbb
xor
push
ret
inc
adc
into
jno
push
data16
adc
adc
stos
cli
mov
shrl
sbb
enter
sahf
into
dec
pop
test
add
aas
cmpsb
insl
jae
iret
pop
into
shlb
in
adc
push
add
xor
push
out
xor
push
and
push
cli
mov
orl
mov
dec
cmp
mov
inc
push
jg
add
cli
mov
dec
sbb
adc
daa
mov
xchg
aas
in
shl
sbb
les
vcvtss2sd
jne
test
dec
mov
dec
test
mul
outsl
mov
mov
mov
mov
lea
ljmp
into
cmpl
pop
pop
add
xchg
je
mov
movsl
int3
xchg
inc
out
adc
aam
out
dec
and
ljmp
lock
mov
mov
sbbl
or
push
pop
mov
mov
jp
pop
out
pop
mov
or
xchg
jmp
fildl
or
mov
dec
and
movnti
aas
adc
add
int3
adc
outsb
pushf
sbb
fwait
sub
sub
loope
hlt
fucomip
movsl
fildl
and
test
xor
dec
cmpsb
xlat
hlt
pop
jb
xor
lret
push
push
xlat
cmpsl
cmpsl
or
into
call
stos
insl
mov
scas
outsb
sub
pusha
shll
iret
les
paddb
popf
adc
shll
push
add
out
mov
call
roll
xor
sbb
je
nop
xchg
ja
dec
mov
mov
dec
mov
in
ret
mov
jl
pushl
pop
pop
aam
testb
mov
daa
fs
pop
iret
je
xchg
sbb
jmp
add
ljmp
push
adc
mov
stc
ss
stos
fnstenv
jns
push
fisttpl
ret
stos
adc
push
and
subl
sbb
in
lds
mov
push
or
mov
xchg
fs
je
ja
mov
xchg
cmc
adc
add
imul
push
test
mov
fisubrl
and
lret
leave
inc
fisttpll
and
mov
add
pop
mov
jbe
loopne
mov
bswap
xor
stos
fsubs
lods
js
leave
stc
cmpb
cli
mov
jmp
js
filds
jnp
stos
mov
mov
xchg
cld
rcll
js
mov
test
push
push
xor
test
enter
sbb
push
dec
mov
jl
cmp
pop
inc
movsl
out
scas
cld
inc
in
add
pop
scas
pop
adc
mov
dec
jle
xchg
xchg
fs
pop
adc
dec
imul
fs
xlat
or
add
push
pushf
daa
sub
dec
aad
ret
xorb
push
jle
nop
imul
xchg
cs
mov
out
inc
sbb
dec
ljmp
sbb
sub
mov
and
or
fistpll
mov
test
daa
pop
aaa
fwait
add
pushf
sarb
fisttpl
pop
test
loopne
loopne
push
adc
mov
adc
stos
dec
icebp
push
or
xorl
cmp
lods
adc
or
xor
and
cmp
lahf
pop
cmp
clc
pop
cmp
or
inc
shll
pop
subb
lods
ret
addb
inc
and
and
adc
cmp
jmp
sbb
outsb
sbb
repnz
inc
cmp
jecxz
lcall
xchg
popf
test
bound
jg
adc
aaa
push
jo
xlat
fadd
gs
sbb
add
jl
fldenv
and
xor
stc
cltd
fcomps
dec
xchg
js
pop
xchg
pop
add
shrb
xor
aas
xorb
int
push
jbe
fdivl
sub
pop
jb
in
lods
mov
jle
pop
bnd
jecxz
movsl
xchg
push
movaps
decb
jns
mov
in
ja
mov
jmp
cld
cmp
xor
inc
sub
ret
push
jg
jge
rolb
jecxz
pop
imul
xchg
add
dec
push
cmp
sbb
lds
push
nop
ds
dec
mov
loopne
leave
sub
lret
pop
dec
xor
inc
jg
cmp
lods
out
push
outsl
jp
loopne
cld
sbb
call
or
push
inc
sub
xlat
les
lods
jne
xor
jmp
cmp
push
in
ljmp
or
pop
and
mov
xchg
repnz
xchg
push
leave
mov
imul
pop
repnz
sub
mov
sbb
mov
sbbl
rcrl
test
adc
mov
nop
into
lahf
xor
pusha
fdivl
cs
scas
imulb
int
xor
mov
pusha
aad
inc
loopne
aas
and
sub
cmp
mov
sub
cmpsl
stos
stc
lods
dec
nop
cmpsl
cld
loope
das
push
xchg
xchg
jg
adc
aaa
adc
xchg
pop
scas
ud0
xchg
cmpxchg
cmp
out
or
inc
mov
xlat
adc
mov
scas
mov
mov
imul
add
cs
cmp
ss
lahf
leave
xchg
push
xchg
add
mov
bound
scas
dec
movsl
add
mov
imul
fcomps
xorl
stc
ret
test
hlt
je
dec
ja
pop
into
cmp
shrl
mov
push
cld
mov
sub
test
je
dec
repnz
push
orb
pop
sub
push
push
sbb
into
inc
cmp
sub
das
out
shr
and
ja
mov
imul
pop
lds
dec
or
jp
pop
shrd
pusha
mov
sbb
add
and
pop
sbb
movswl
xlat
pop
test
push
inc
scas
push
and
incb
mov
loopne
or
arpl
mov
sbb
mov
lds
adc
add
pop
jecxz
idiv
pop
jge
add
jp
jmp
fstpl
cmp
add
mov
jp
mov
ret
sti
bnd
add
add
xor
repnz
inc
jp
call
adc
jne
lahf
adc
js
mov
loopne
xchg
and
dec
adc
int3
out
sbb
cmp
cmpsb
shlb
stos
arpl
xorl
jg
adc
daa
xlat
sub
push
mov
mov
sahf
shrb
mov
nop
fistps
inc
les
testb
push
fistl
pop
scas
gs
fdivrl
mov
pop
movsb
insb
sbb
cld
sbb
lods
sbb
push
in
int3
ret
test
outsl
popf
mov
cwtl
sub
scas
stos
xor
mov
cmp
pmulhw
dec
insl
call
or
cmpsb
shll
test
sarb
lods
leave
scas
and
push
pop
enter
xor
dec
or
push
ficomps
add
push
jecxz
dec
mov
dec
rorb
pusha
jmp
mov
sbb
rclb
push
mov
add
mov
insl
fst
pop
mov
xlat
xchg
xchg
sub
lret
cli
mov
ficompl
outsb
ficoml
outsb
inc
pop
mov
adc
sub
dec
loope
sub
jecxz
adc
mov
loopne
push
mov
sub
xchg
lods
dec
mov
in
sub
pop
in
adc
cmpsb
les
cli
lods
stc
sti
dec
xor
mov
aam
sub
das
adc
cmp
mov
mov
push
inc
hlt
sbb
sub
ret
dec
push
fbstp
adc
pop
cmp
sarl
lock
inc
push
xor
lock
mov
adc
mov
push
movsb
rorb
add
out
js
punpckhwd
mov
push
notb
aaa
aad
mov
jmp
sub
push
mov
cmpsl
jae
xlat
pop
pop
sti
imul
add
cmpsb
sbb
xchg
push
in
mov
popf
je
mov
scas
cld
imul
insb
sbb
pop
imul
lret
xor
gs
movsl
jns
fcoms
xor
sbb
sbb
and
fmulp
stc
and
pop
fistpl
test
mov
fst
mov
pop
andb
push
adc
fisubs
call
lret
mov
jmp
loopne
dec
mov
in
jbe
std
mov
pop
inc
xchg
mov
inc
push
xor
mov
cmpsl
inc
btcl
aas
das
jmp
push
repz
daa
filds
int
sub
rclb
cwtl
popa
repz
repnz
sbb
pop
scas
arpl
scas
cmpsb
ret
lods
add
ret
sub
in
inc
mov
clc
push
adc
fs
arpl
adc
roll
xchg
mov
enter
in
lea
sbb
xchg
mov
aad
pop
push
enter
sbb
mov
cmp
xor
inc
mov
mov
xchg
cld
push
jmp
mov
lcall
xchg
out
icebp
jmp
decb
jge
add
inc
cmp
fcomps
das
leave
js
fiaddl
add
fbld
and
mov
push
lock
or
push
dec
jg
out
xchg
mov
lahf
pushf
push
sub
loop
xor
xor
repz
lret
dec
ret
iret
shr
inc
pop
xchg
jecxz
mov
pop
pushf
pop
loopne
cld
inc
jb
xchg
dec
add
mov
arpl
in
in
sub
jle
test
gs
jae
loope
sbb
gs
out
dec
pop
push
mov
movsl
shll
mov
clc
sbb
or
mov
jmp
mov
inc
aad
fldl
std
push
sub
push
rclb
call
call
popf
pop
ja
movsl
xor
in
mov
mov
mov
rcr
int
pop
fisttpl
lds
cmc
jle
push
push
das
imul
imul
mov
arpl
mov
fldt
xor
mov
dec
cmp
fldenv
xlat
les
pusha
pop
pop
cwtl
int3
add
xchg
lock
sub
xchg
cmp
in
pop
int3
inc
push
cmp
push
jno
push
daa
mov
push
and
mov
inc
adc
cmp
loope
fstps
ret
loope
push
imul
xchg
push
cmp
lret
imul
xchg
mov
dec
mov
mov
in
int
sub
shrb
add
jg
cmp
imul
jmp
and
push
rcll
xchg
ja
pop
cmp
sbb
cmp
sub
sahf
dec
sahf
mov
xor
sub
test
loop
cmp
and
push
dec
xor
mov
dec
jae
daa
fisubs
bound
mov
aam
nop
xchg
into
adc
scas
push
popf
fs
sub
insb
insb
sbb
fildl
or
push
or
fwait
push
ja
and
mov
xchg
enter
mov
iret
mov
ds
cwtl
out
cs
inc
add
jne
inc
divb
dec
cmpsb
mov
lcall
out
xchg
shlb
mov
jecxz
dec
jns
mov
cmp
js
sub
test
sub
adc
ss
mov
mulb
mov
jno
jo
xor
imul
pop
gs
add
mov
ret
jnp
insb
pusha
cmp
or
xchg
popf
xor
lcall
jp
or
fistpll
test
daa
push
loop
jo
and
test
pop
push
cltd
aad
jns
nop
or
mov
cmp
mov
outsb
outsb
xchg
cwtl
jb
cmp
lods
aad
int
rcll
aam
push
ljmp
xchg
enter
lret
in
popf
push
fisubl
lahf
or
pusha
stos
pop
pop
loope
stos
sbb
subl
fcompl
sbb
push
adc
and
lods
shll
dec
inc
mov
mov
js
mov
jo
mov
mov
fidivs
iret
dec
pop
out
jecxz
ss
jb
ds
push
sbb
sbb
call
jne
xchg
repnz
mov
push
xor
ret
out
lods
aas
pop
out
add
jmp
test
cmp
mov
pushf
gs
insb
jo
lds
popf
adc
inc
lret
or
push
lcall
cmpsl
std
std
ss
jmp
push
xchg
xor
pop
jb
out
mov
sbb
scas
add
push
shll
cmp
inc
subl
inc
rcrl
add
nop
loope
sti
and
dec
xchg
mov
movsl
subl
sti
mov
and
mov
and
inc
fiaddl
adc
loopne
push
pusha
je
lret
adc
mov
or
inc
aaa
pop
fcmovbe
lahf
cltd
mov
xchg
add
test
pop
mov
jg
shll
loope
insb
pop
jns
sbb
sbb
add
fdivs
dec
sbbl
and
jns
fldcw
sbb
scas
lret
sub
jge
in
je
fs
push
jg
xor
jbe
ds
add
shlb
enter
insb
ja
subb
mov
sub
testl
clc
subl
pushf
mov
sbb
out
add
cmpsb
add
icebp
movsb
outsb
into
inc
xor
cmp
jnp
jno,pt
or
cmpsb
aaa
test
cmp
adc
in
xchg
mov
mov
insl
pop
addr16
and
int
mov
xor
pop
popf
fldt
loopne
push
std
pop
inc
lea
bound
hlt
loope
sbb
in
and
stc
fwait
in
or
dec
push
sahf
lcall
inc
ljmp
jle
xor
sub
int
mov
jp
aam
lods
mov
pop
push
jns,pt
push
ljmp
subb
mov
xchg
outsl
pop
push
leave
xor
dec
lret
mov
mov
jno
cmc
add
mov
xchg
mov
pop
and
push
ljmp
pop
adc
mov
fistps
sbb
pop
mov
sbb
pushf
enter
leave
cmpsl
ljmp
repnz
push
flds
shlb
adc
xor
sub
push
mov
sub
sub
jp
enter
mov
repnz
lahf
mov
dec
jne
dec
push
adc
push
pop
add
subb
int
repz
mov
sub
je
movsb
jno
push
push
lods
int3
test
test
mov
jmp
sbbb
xorl
sbb
lret
dec
mov
insb
push
filds
and
xchg
outsl
inc
dec
aam
pop
clc
pop
test
lock
scas
push
and
jmp
cltd
es
pop
leave
mov
ja
popa
push
daa
ficomps
jmp
sub
movsb
arpl
ja
inc
stos
scas
lods
test
pop
in
sbb
incl
cli
lahf
cmp
call
xor
inc
in
popf
xchg
mov
cmc
aas
pop
mov
fwait
push
push
or
xchg
mov
rorl
push
mov
dec
jle
push
int
pop
sub
jbe
cld
or
mov
lcall
xchg
div
mov
dec
int
je
incl
sub
sbb
scas
cmp
ret
and
adc
adcl
mov
mov
xchg
fisttpll
dec
mov
mov
arpl
sbb
sub
xchg
mov
adc
call
push
pop
clc
inc
movsl
bound
mov
sub
nop
push
sahf
sub
pop
adc
movsb
inc
mov
es
icebp
mov
mov
leave
mov
leave
cwtl
stc
es
and
mov
add
mov
scas
mov
mov
insl
ret
mov
gs
push
enter
sbb
aam
sub
mov
pop
in
sbb
hlt
sbb
xlat
add
dec
pop
mov
test
jnp
push
add
sar
cltd
sub
aaa
std
stos
inc
cmpsl
aaa
and
push
inc
jge
lret
push
push
test
out
fcompl
mov
sub
mov
jl
shrb
lds
xor
mov
adc
dec
pusha
ret
in
sbb
addr16
mov
cmpb
cwtl
pop
xchg
jne
sub
cmp
hlt
popa
in
movsl
in
lock
mov
lods
pop
sbb
movsl
arpl
push
jne
inc
pop
dec
dec
lahf
fstpl
push
fcoml
jne,pn
popf
mov
jg
inc
subl
aam
sub
test
push
fs
out
lods
xor
sbb
xchg
in
je
mov
cmpsl
cmp
leave
cs
dec
pop
mov
ret
fdivl
or
out
imul
das
adc
add
mov
fwait
pusha
nop
push
jnp
cld
add
pop
cli
jmp
or
fisttpl
xor
inc
out
lods
cmp
push
jp
pushl
push
decb
or
jl
fldt
loopne
lods
out
mov
out
jbe
sub
xchg
xorb
xchg
mov
push
push
div
xchg
add
cmp
cltd
inc
fnstenv
outsb
or
sub
pop
leave
or
sbb
aam
push
and
adc
xor
cmp
lods
out
jnp
jecxz
lds
sub
mov
xor
jge
call
hlt
negl
adc
xor
hlt
jle
push
mov
in
xchg
cmpl
cmp
push
xorb
shll
cmp
in
adc
and
xchg
sarl
sub
enter
lock
cmpsl
outsl
loop
out
daa
subl
push
jns
xchg
mov
rclb
xor
sub
push
adc
adc
dec
gs
mov
xchg
call
xchg
xor
das
push
inc
insl
jae
ds
pop
xor
shl
or
mov
or
popf
xor
mov
pushf
push
out
cmp
xor
xchg
xchg
add
je
es
lods
jmp
ds
add
cmp
aam
out
xchg
jae
and
xchg
jno
imul
pop
cs
mul
xor
sub
into
imul
pushf
push
sbb
ret
fdivr
insl
jo
xchg
xor
data16
and
subb
lock
add
xor
fiadds
push
iret
aaa
das
aam
fadds
adc
jge
rorb
push
dec
dec
mov
loope
stos
lds
test
neg
sub
mov
and
xor
aad
jns
or
adcl
adc
stc
ja
mov
mov
sbb
pusha
add
in
ret
cwtl
aas
cld
mov
cmp
les
pop
add
andb
pop
ret
cltd
push
xchg
xor
mov
jp
outsl
lods
fiaddl
scas
loop
or
jmp
jo
loopne
xor
xchg
mov
xchg
or
sub
xchg
bound
mov
jle
pop
cmp
cwtl
lock
cmp
cmpsl
cmp
movsb
rclb
or
pop
andl
sub
pusha
pop
sub
add
addr16
movb
out
movsb
mov
add
pop
dec
push
inc
sub
jne
xchg
and
or
mov
jge
pop
movsl
mov
jno
xchg
jp
xchg
je
push
xchg
pop
inc
lcall
or
xchg
pop
sbb
popf
inc
scas
divl
jg
push
and
repz
xchg
jge
ds
iret
es
andl
or
dec
das
pop
mov
mov
dec
pop
xor
outsl
mov
nop
or
mov
pop
add
das
xor
mov
js
push
push
add
iret
jae
stos
ret
cmp
iret
add
xor
cmp
xorl
roll
repz
xchg
mov
jp
subl
pop
test
adc
mov
call
xchg
into
cld
sub
pop
cld
in
stc
xor
je
pusha
push
jmp
test
lcall
push
fcompl
mull
sbb
das
inc
pop
mov
out
sub
aad
sarl
ret
scas
loop
imul
stc
jno
gs
cmpsl
sub
jecxz
xor
test
mov
daa
out
push
insb
xchg
xchg
xchg
movsl
mov
bndstx
or
inc
pop
pop
pop
xor
ret
jo
ja
fbld
add
pop
xchg
icebp
imul
xchg
jg
push
ljmp
push
sub
cmpl
mov
inc
mov
xchg
pushf
jnp
or
mov
pop
xor
lds
dec
cmc
pop
call
add
adc
jnp
adc
jg
mov
jbe
xchg
push
fcompl
jge
or
gs
adc
imul
das
mov
push
ficoms
dec
arpl
aad
cmpsb
xchg
xor
aas
notb
mov
in
xlat
and
imul
sbb
cmpsl
dec
add
xchg
popf
ss
cli
pop
jg
in
inc
xorb
dec
shrb
aaa
mulb
inc
pushf
sbbb
stos
inc
mov
jno
sti
addb
push
push
orb
mov
jnp
pop
or
mov
cs
leave
and
mov
dec
fdivp
dec
dec
pop
popa
roll
mov
inc
pop
pop
and
int
out
adc
clc
jl
inc
xor
icebp
jmp
imul
adcb
cld
adc
mov
pop
sbb
sub
daa
lret
sub
leave
sub
fstl
out
pushf
lahf
mov
add
movl
mov
call
mov
xor
fsubl
and
sub
icebp
out
ret
pop
lock
jl
lahf
mov
inc
sahf
rsm
clc
cwtl
ficoms
sahf
push
add
enter
dec
push
call
shlb
shlb
dec
stc
std
fmuls
xor
and
ret
jge
mov
jl
xor
cld
fwait
repz
sbb
push
dec
pop
fisttpl
adc
mov
jp
jne
cmp
cmp
adc
roll
mov
sub
inc
cmpsb
push
mov
out
inc
cmp
push
sti
lds
addr16
jge
mov
jo
inc
dec
push
or
jg
mov
sbb
aad
mov
cmpsl
push
daa
call
shrb
inc
xor
scas
andb
aaa
sub
addr16
mov
outsb
pop
add
lods
lret
mov
lea
mov
pop
add
cs
jb
mov
and
mov
dec
xor
fisubrl
pop
sub
pusha
shll
cmp
lock
dec
insl
adc
sbb
cmp
mov
mov
orl
das
ret
imul
rcrl
inc
mov
fistpll
push
cmpsb
push
xor
and
mov
xchg
fisttps
sahf
mov
loop
int
imul
jnp
or
dec
fwait
nop
sub
xchg
mov
add
xchg
xchg
push
pop
lea
stc
dec
jmp
scas
xor
xor
dec
mov
out
xlat
mov
xlat
xchg
jle
mov
out
or
adc
pop
les
fisubrs
mov
pushf
sti
xchg
mov
js
xchg
int3
decl
push
push
leave
lods
dec
hlt
enter
mov
cmpsb
cmp
sub
nop
inc
add
imul
pop
inc
xchg
data16
lods
ret
hlt
daa
in
push
fmul
in
mov
cld
mov
xchg
insb
push
pop
pushl
and
jne
xor
enter
xchg
pop
add
les
push
sbb
loopne
cli
xchg
js
inc
sahf
cwtl
icebp
mov
test
fwait
rcrb
xchg
loopne
mov
pop
andps
aas
fsubrl
gs
xor
push
divl
jg
aas
add
loope
stos
test
pop
inc
nop
jb
jb
sahf
nop
fildl
cwtl
dec
cli
cmp
into
xchg
cmpsb
cmp
and
leave
dec
dec
notl
cmp
aaa
adc
add
cmp
cmpsb
cli
pushf
jnp
movsl
xor
jmp
in
sbb
mov
cmpsb
imul
and
pop
push
inc
je
fcomip
jge
daa
pop
and
or
mov
xor
inc
and
leave
mov
testl
xor
lock
pushl
mov
jnp
cwtl
or
mov
push
pop
fisubrs
clc
jne
mov
shrb
loopew
repnz
test
aam
sbb
push
testl
xlat
cmc
outsb
scas
jge
movb
ss
adc
int
or
mov
xchg
push
decb
mov
mov
xchg
leave
pop
loopne
inc
cld
xlat
jecxz
movsb
dec
add
arpl
inc
xor
or
xor
fstpt
xor
mov
je
les
mov
mov
sysexit
stos
lret
ss
sub
decl
jmp
push
test
lds
or
push
cwtl
leave
ja
cmp
fwait
repnz
das
test
xor
pop
add
shlb
movsl
ja
inc
in
cmp
cmpsl
out
add
jp
xchg
or
pop
test
push
fists
loopne
xorl
sbb
mov
pop
jmp
xlat
mov
push
dec
enter
push
fwait
mov
jo
mov
push
je
and
in
cmc
adc
int3
loope
xor
and
movsb
cwtl
or
leave
pop
pop
pop
subb
loopne
mov
lret
lcall
mov
pop
push
add
push
cmp
mov
cltd
or
les
icebp
sbb
aam
jns
jne
cltd
sbb
insl
mov
arpl
mov
cld
xor
lret
nop
idiv
das
cmp
data16
movsl
mov
mov
xorb
test
repz
inc
imul
jle
stos
cli
ret
dec
popf
bound
incl
faddp
orb
adc
idivl
cmp
cld
pop
mov
cld
add
xor
insb
pop
rcrb
scas
and
pop
or
push
jl
mov
mov
or
dec
sbb
int
fistpll
push
add
xchg
mov
cmp
test
mov
scas
jg
xchg
inc
push
fcmovu
cmpsb
dec
ljmp
sbb
push
adc
out
adcl
dec
pushf
loope
movsl
push
inc
mov
les
xchg
and
mov
and
mov
mov
rorl
rdmsr
out
ltr
pop
push
popa
push
mov
popf
mov
in
xchg
cmpsb
pop
mov
push
inc
xchg
or
pop
sbb
loope
mov
and
mov
sbb
jnp
jne
data16
js
push
jle
pop
nop
repnz
cld
inc
adc
test
scas
arpl
in
lods
cmc
pop
sub
push
push
pop
and
push
and
arpl
jb
in
and
jno
lret
mov
imulb
bound
or
ficoml
xchg
jns
push
push
xor
cmpsl
push
clc
imul
scas
outsb
adc
cltd
addr16
or
xor
popf
mov
mov
and
gs
xlat
jns
or
inc
cmp
dec
cs
sub
or
mov
incl
ja
xchg
mov
push
or
shrl
push
mov
mov
sbb
in
or
jae
push
sbb
pop
mov
dec
inc
xchg
mov
in
insb
fcomps
sub
push
sbb
gs
jnp
sbb
les
outsl
add
xchg
inc
adc
adc
fstpl
iret
push
cmp
lods
into
subb
sahf
sbb
lods
add
dec
xchg
jmp
dec
mov
push
cmp
in
out
lods
jo
ss
inc
stos
mov
jmp
shrb
ret
loope
fdivrs
jno
or
and
clc
lds
xchg
xchg
cmp
adc
pop
mov
in
push
in
aad
stc
ret
xchg
mov
inc
mov
mov
jg
ret
addr16
mov
ret
xor
or
cli
pop
push
stos
lods
jb
mov
or
in
mov
or
push
and
fistl
dec
lret
jmp
push
push
repnz
std
adc
cmpsl
xor
mov
dec
fmuls
cmp
clc
push
loopne
ss
jns
inc
mov
fsts
jns
loope
and
jl
add
imul
imul
leave
cwtl
xor
loope
shll
scas
xorl
fisubl
mov
mov
sahf
sub
mov
dec
adc
gs
in
mov
lods
sbb
lods
mov
cmp
push
test
xchg
sub
inc
dec
addl
sbb
enter
aaa
and
lock
sbb
and
or
lret
mov
jmp
iret
mov
rorl
test
dec
push
jge
or
adc
sbb
movsl
fmull
ficoml
mov
xor
jbe
leave
std
sub
andl
rolb
push
lea
jmp
dec
sbb
mov
fneni(8087
insb
das
loopne
je
popa
inc
pushf
in
movsl
and
jge
icebp
lahf
aad
push
cmc
cmc
mov
mov
mov
mov
sub
inc
xor
outsb
xchg
pushf
out
out
sub
fadds
sub
in
stos
lret
insl
fldz
or
xchg
arpl
cli
rcll
xchg
xchg
sbb
mov
xor
add
les
sub
ss
mov
pop
mov
rol
hlt
cmp
ja
roll
mov
mov
rorb
loope
mov
ds
mov
int3
sub
repnz
sbbb
hlt
test
mov
mov
sbb
test
mov
and
stc
add
cmpsl
cmp
mov
mov
and
cmp
ds
leave
aam
xchg
pop
mov
imul
data16
bound
inc
dec
ret
push
lret
adc
mov
or
adc
hlt
jnp
lret
xor
mov
in
in
ja
shrb
mov
je
jl
inc
daa
sbb
sti
imul
clc
dec
inc
cmp
add
rolb
dec
in
mov
mov
push
inc
xchg
jo
loop
jo
fcompl
lcall
pop
adc
scas
xchg
add
xchg
imul
nop
lods
jle
rolb
test
jp
push
or
out
nop
xchg
pop
xchg
js
mov
push
jp
push
sub
jb
adc
cltd
add
insl
sarb
jg
cmpsb
movsb
mov
mov
jo
out
aad
out
addb
int3
jmp
clc
sbbl
repz
fnsave
insl
inc
js
xor
mov
xchg
out
into
pushf
es
arpl
mov
lret
or
adc
mov
rclb
dec
fs
add
out
fbstp
sbb
fwait
stos
jp
jmp
repnz
mov
jp
inc
ficoms
nop
dec
sbb
ja
dec
call
das
jge
add
sub
cmp
jg
mov
loope
loope
inc
icebp
add
mov
and
loop
insl
xchg
aad
outsb
sub
scas
test
and
mov
adc
inc
jns
addr16
rcl
xor
cmp
add
lea
inc
les
cld
xor
push
pop
insb
fdivs
in
fstl
adc
ret
gs
loop
inc
mov
mov
and
mov
mov
test
leave
sbb
jle
mov
aaa
loop
mov
es
cmp
dec
pop
add
daa
ret
into
xchg
jmp
nop
mov
and
sbb
add
cmp
shll
jmp
ss
mov
jg
mov
daa
fnsave
xchg
and
std
jbe
and
or
gs
jge
pushf
test
int
mov
pop
dec
pusha
and
ss
mov
loop,pn
inc
cli
stc
es
xchg
outsb
ret
aam
pushf
cmc
jl
imul
fcomps
inc
inc
inc
and
in
stc
pop
insl
add
scas
outsb
push
popf
arpl
pop
dec
test
jae
aaa
cli
mov
and
push
arpl
push
or
loop
enter
leave
xchg
xlat
xchg
dec
jg
mov
outsl
inc
inc
mov
imull
jns
pop
mov
ljmp
jmp
and
out
enter
cwtl
out
shrl
popf
cli
mov
mov
std
jmp
or
stos
xor
test
movsb
cmp
add
lcall
adc
push
xor
into
fbstp
jno
mov
out
stos
out
andl
fwait
int3
xchg
outsl
loop
or
aam
mov
cld
mov
movsl
movsb
outsl
sbb
mov
fs
push
stc
ror
dec
mov
inc
and
fwait
cmp
jp
in
int
imul
loop
loopne
outsl
mov
sqrtps
jl
and
adcl
or
push
js
popa
cmp
shlb
fcoms
push
mov
in
adc
mov
mov
dec
enter
mov
addr16
rolb
dec
push
dec
and
es
icebp
push
jge,pt
cmp
xor
inc
adcl
jnp
pop
aam
sbb
addl
pop
aam
cli
cmp
sub
in
je,pt
push
adc
lods
insl
lret
iret
xor
loop
lods
stos
sbb
dec
sub
pop
adc
cs
jbe
in
push
mov
sub
cmpsb
mov
jno
add
jge
scas
adc
jno
in
cmp
in
push
dec
sbb
ja
jo
xchg
pop
jmp
adc
dec
and
loope
push
and
out
pop
pusha
sarl
cmp
loope
lea
loop
lret
dec
jl
and
cld
cli
jecxz
pop
idivb
orl
lcall
dec
or
dec
sub
mov
sbb
add
pop
imul
cmc
adc
jmp
jno
jg
jmp
push
pop
je
aaa
mov
cmpsl
cld
pop
and
add
jnp
sbbl
ljmp
dec
jge
ret
in
mov
fldt
bound
sub
sarl
jg
add
mov
or
xorb
pop
dec
insl
dec
xlat
cs
jbe
insb
movsl
int3
xor
popf
mov
jno
add
test
test
inc
xor
ficompl
clc
xchg
clc
jns
add
out
out
stos
jae
jmp
imull
negl
add
mov
and
pop
ljmp
pop
jb
mov
stos
mov
lret
movsl
mov
sbb
dec
sub
add
sbb
repnz
xor
push
push
je
imul
iret
adc
jne
pop
push
out
mov
dec
movsb
xchg
jle
sbb
pusha
nop
adc
mov
jae
pop
ret
mov
inc
into
je
test
sub
enter
lret
sti
or
lock
dec
mov
test
push
pop
jecxz
pop
xchg
sub
loop
push
outsl
sbb
xor
mov
mov
rclb
test
push
ret
sbb
mov
pop
cli
push
fildl
and
push
subl
mov
mov
sub
leave
cmpsl
in
imul
mov
adc
es
push
cmpsl
pop
cmp
in
mov
out
fistl
mov
dec
lahf
inc
xchg
sub
cmp
push
pop
cmp
sbb
sub
and
inc
sub
cli
cmc
push
push
dec
mov
les
dec
jbe
mov
test
add
stos
sub
cmp
notl
cmovge
add
sub
rcr
sbb
xchg
and
pusha
orl
xchg
cmpsl
jnp
pop
pop
adc
scas
push
and
xlat
push
lock
sbb
pop
xchg
cmp
repnz
out
inc
in
out
pop
daa
jle
sahf
xchg
into
arpl
testb
push
jmp
sub
cmc
adc
sbb
sbb
mov
and
ret
xor
call
push
bound
mov
ret
cmpb
insl
popa
pop
out
push
ret
mov
call
mov
aam
mov
and
enter
aad
jle
repz
into
sbb
and
shrb
pop
mov
cli
cltd
or
clts
sub
pop
fwait
mov
xor
fs
rcl
add
sub
mov
scas
sbbl
sbb
pop
push
mov
adc
inc
shlb
mov
testl
cs
jae
mov
out
in
push
lret
inc
push
out
push
movsl
cmp
push
add
inc
pusha
int
adc
dec
shll
push
sub
adc
cmp
add
add
pop
daa
xchg
pop
jns
out
xchg
ja
lcall
ret
mov
pop
outsl
jns
jmp
in
aas
mov
cld
sbb
xor
lds
movsb
push
inc
outsb
jns
jg
add
inc
nop
inc
dec
xorl
cmpsb
cmp
icebp
mov
mov
pop
mov
mov
loopne
sbb
sbb
faddp
sti
or
lahf
push
xor
push
jo
sub
push
cli
fnstenv
mov
popf
pop
subl
pop
dec
push
mov
add
cmp
push
sub
dec
xchg
dec
pop
repz
mov
xchg
push
lods
mov
lea
cld
fisttpl
adc
and
fsubrl
pop
push
aam
mov
xchg
xchg
icebp
dec
xchg
mov
cltd
cmp
int3
out
push
lret
mov
mov
sti
repz
mov
insb
and
test
test
out
inc
cli
test
xor
or
bound
test
xchg
divl
mov
xlat
mov
addr16
shl
dec
adcl
inc
outsb
aas
jge
aaa
pop
mov
imul
imul
dec
jbe
xchg
xorb
cmpl
inc
stos
daa
push
and
shll
jae
sub
loope
repz
add
or
xlat
jns
ret
adc
lds
cld
or
insl
cld
movsb
das
outsb
xchg
push
loopne
mov
dec
mov
rcrl
push
mov
push
popa
push
aas
sub
jg
xor
imul
pop
mov
lahf
jecxz
rclb
scas
mov
cld
cmc
int3
shlb
clc
or
jmp
call
rolb
push
xor
test
shll
push
ja
push
mov
les
mov
stc
pop
push
push
incl
inc
in
test
adc
inc
addr16
repnz
sbb
ss
in
mov
push
sahf
adc
pop
insl
in
sub
test
jle
push
jmp
dec
dec
shlb
push
aas
adc
in
add
xlat
ret
cmp
cmp
and
sbb
sub
inc
test
push
pushf
sbb
pop
dec
adc
mov
cmp
jns
pushf
out
movsb
add
sbb
pop
ss
or
mov
pop
jg
or
jl
mov
or
scas
iret
rorb
sbb
mov
sub
xchg
iret
adc
bound
inc
iret
lods
push
je
inc
test
sub
mov
int
aaa
loop
movsb
sar
xor
cli
aaa
jae
sub
and
sub
cmc
mov
mov
mov
ss
jbe
mov
xchg
mov
jnp
int3
mov
les
push
mov
fcompl
call
lret
popf
lods
jb
in
xor
push
pushf
aad
pop
xchg
fsubl
pop
shrb
scas
mov
lods
or
fimuls
pop
in
jae
sub
cmp
iret
int
std
js
cltd
jle
push
mov
lret
aas
cmp
sub
mov
xchg
mov
aam
and
xchg
ret
dec
or
in
xchg
fildll
add
ja
mov
int
test
mov
mov
mov
shl
lcall
add
loopne
sbb
arpl
inc
mov
xchg
dec
insb
lret
and
and
pop
push
sbb
xchg
inc
mov
xchg
xchg
add
movsb
rolb
mov
test
sbb
push
fidivrl
fsubrl
push
aas
out
xlat
push
out
pop
cs
mov
sub
sbb
stos
icebp
pop
adc
outsb
jmp
xchg
arpl
shrl
in
bound
pop
pop
in
xor
lock
movsl
inc
mov
lods
add
ljmp
pusha
shrb
mov
cltd
call
adc
scas
ds
ljmp
cmp
sbbb
sub
and
ljmp
xchg
add
out
sarb
lock
cld
fwait
lock
xchg
es
inc
dec
lods
mov
repz
pop
dec
xor
jmp
xchg
xlat
pop
xor
sahf
mov
adcb
pop
into
push
in
jne
test
out
ficoms
push
orl
inc
mov
push
insb
ret
pushf
pop
lock
fstps
rcl
lods
sub
cmp
inc
sbb
leave
pushf
dec
push
jp
loope
lods
lret
in
add
fwait
dec
xor
movl
mov
sarl
jo
ja
lods
bound
daa
ret
aas
dec
jl
cs
jno
fsubs
cmp
sbb
mov
enter
or
ds
mov
loopne
mov
adc
push
jnp
or
xor
mov
push
mov
pop
pop
addr16
push
enter
mov
sahf
call
mov
cmpsl
pop
mov
pushf
jne
loopne
and
pop
int3
rol
mov
jge
jne
sbb
rorl
push
popa
sbb
pop
pop
xchg
lods
insl
ss
jne
xchg
pop
mov
push
pop
jo
xor
lahf
sub
jecxz
icebp
jno
jb
mov
adc
lar
cli
and
mov
mov
repnz
sbb
xlat
xor
sbb
iret
fs
aad
sbb
daa
sahf
or
sarl
hlt
jle
adc
ficompl
fsubrl
xorl
mov
add
testl
sub
pusha
je
push
mov
sub
stos
and
out
adc
inc
hlt
pop
cmp
ret
mov
pop
mov
in
push
sahf
or
mov
jmp
fstl
into
push
bound
sbb
adc
mov
test
push
cmpsl
fisubs
lret
jb
fwait
scas
lcall
adc
lret
or
stos
je
popf
sub
lds
xchg
adc
pop
popl
test
out
insb
iret
scas
pop
add
int
stos
stc
push
aaa
scas
cmp
mov
sub
pop
rorl
adc
dec
push
jo
dec
mov
movb
or
flds
mov
cmp
cs
sarb
push
loopne
addr16
cltd
jl
testl
mov
das
push
cmpsl
xchg
pushf
lret
repnz
rclb
xor
push
fcmovbe
push
daa
jo
repz
mov
fucom
mov
or
inc
xorb
ja
cmp
xor
push
cmp
call
cmp
cmpsb
xor
ja
mov
mov
divl
jl
arpl
sub
mov
inc
subl
sbb
test
pop
or
je
loop
movsl
xchg
int3
xchg
lcall
daa
icebp
push
xor
jbe
aad
stc
push
out
add
pop
pop
mov
dec
xchg
dec
aam
cmc
jecxz
and
lret
lahf
insb
lods
xchg
imul
pushf
push
and
push
fadds
sbb
sbb
test
rolb
jbe
jo
add
add
loopne
adc
cld
test
pop
arpl
out
stos
std
imul
dec
fadd
test
in
outsb
dec
bound
loop
sahf
mulps
xorl
movsl
push
dec
scas
jg
and
fcoml
add
pusha
push
xchg
aad
dec
mov
popf
out
movl
mov
add
push
lret
cmc
fmuls
stos
pop
int
dec
out
movaps
cmpsb
ret
mov
stos
int
mov
cwtl
ret
or
sbb
push
and
pusha
imull
stos
enter
aad
rolb
daa
sahf
cmpsb
push
gs
cmp
ss
mov
sti
cs
and
mov
inc
push
inc
inc
mov
push
mov
stc
add
lds
outsb
pop
pop
mov
sti
mov
stc
push
xchg
data16
xor
dec
aaa
xor
or
insb
movsl
testb
sub
arpl
dec
stos
xchg
jne
nop
lahf
cmp
mov
sbb
inc
cli
inc
and
inc
and
jne
cmpsl
adc
pop
xchg
sbb
inc
sti
shrl
in
in
ds
mov
cmp
fwait
pop
sbb
jae
lods
clc
stos
fiaddl
lock
or
out
push
xchg
lds
test
jnp
pop
dec
rcrl
lods
ret
sahf
out
xchg
or
add
fmuls
sbb
mov
push
xor
je
ljmp
mov
into
xchg
repz
pop
adcb
outsb
xchg
fdivrl
shl
mov
stc
fxch
or
inc
pop
mov
push
ds
test
mov
adc
push
adc
repnz
adc
xchg
cld
dec
mov
outsl
movsb
ret
test
test
pop
cmpsb
push
js
push
and
js
or
lods
pop
icebp
in
fimuls
data16
pop
in
jecxz
call
xlat
mov
loop
cvtps2pd
dec
and
std
mov
ja
cld
mov
lret
mov
dec
outsl
inc
pop
ljmp
out
adc
orl
jl
jb
mov
repz
ret
sub
movsl
int
popf
and
fildl
outsb
xchg
loop
ret
mov
std
xchg
push
lods
insl
adc
repz
insl
outsb
cmp
scas
xor
jmp
leave
stc
lock
push
sub
jae
sbb
test
push
and
pop
int3
fdivrl
test
and
mov
dec
lods
rorl
popf
mov
jae
push
rclb
xchg
pop
inc
push
test
jle
sub
mov
sub
jo
sbb
cli
sub
push
cltd
jmp
int3
sbbl
out
mov
fstpl
ret
out
and
popa
adc
mov
lods
inc
jge
inc
call
sub
lret
std
lock
pop
adc
mov
jno
mov
das
push
aam
lret
enter
or
divb
imul
gs
nop
xor
lret
daa
cmp
add
idivb
cs
out
lods
dec
push
mov
cli
cmpsl
hlt
fstp
call
and
sub
and
and
add
shufps
insb
add
push
inc
inc
decl
pcmpeqb
fisttpll
movsl
xchg
cli
fcomp
adc
pop
jmp
in
pop
and
mov
push
js
xchg
xchg
outsl
insb
fisubrs
adc
or
hlt
push
icebp
push
jbe
adc
nop
repz
iret
ret
sbb
test
out
and
sahf
mov
ret
pop
fwait
jnp
mov
dec
xor
subl
clc
aas
stos
aaa
mov
add
sub
pop
out
les
mov
xor
fs
sub
stos
xchg
mov
outsl
xor
mov
pop
xor
out
int
subb
jl
repz
fistl
cltd
sbb
sub
cmp
repnz
test
leave
stos
imul
icebp
out
jg
je
or
xchg
pop
stos
lret
inc
dec
push
in
jle
mov
and
and
test
xlat
je
inc
mov
fwait
push
sbb
les
lret
mov
push
cmp
fldcw
nop
jl
popaw
mov
sbb
and
mov
cmc
mov
lret
lods
mov
xor
aad
cli
mov
scas
pop
shr
xchg
dec
mov
adc
ljmp
mov
mov
mul
sbb
lock
or
lea
jge
xchg
lea
loope
jo
cli
cmpsl
orl
rcl
stos
push
sub
out
dec
cmpsl
mov
fucom
mov
fs
insl
add
dec
dec
mov
fcmovb
sbb
push
lock
xor
jl
int
mov
jne
or
outsl
fsubrs
test
das
int3
cs
mov
mov
add
int3
out
jo
inc
push
daa
adc
loopne
adc
adc
popa
sbb
mov
in
jge
sbb
cmp
test
mov
sub
and
mov
leave
cld
out
pop
jge,pt
jecxz
scas
jp
jp
inc
pushf
lret
cmc
push
int3
dec
push
bound
adc
mov
push
insb
in
push
or
sub
adc
dec
shrl
add
cmp
fwait
sub
data16
ljmp
xchg
mov
scas
mov
nop
mov
dec
mov
jnp
fbstp
add
dec
jb
cli
xor
mov
cli
aas
adc
mov
addr16
jge
inc
je
cs
das
xlat
pop
inc
jb
jae
and
jne
shl
add
cmc
movsb
xor
ret
xchg
xor
popf
xchg
jmp
pop
cmc
fadds
mov
xchg
loopne
xchg
sbb
mov
fwait
cmpsl
fisubrl
bound
jb
xchg
sbb
push
sub
lods
sub
pop
decl
out
xlat
lret
jne
ljmp
and
mov
adc
test
adc
roll
jl
rclb
arpl
dec
gs
pusha
adc
std
ror
aas
mov
fwait
lea
xor
mov
popa
jns
dec
dec
popa
sub
push
and
mov
clc
in
push
into
icebp
cmp
xchg
cmpsl
mov
aaa
fwait
scas
mov
sub
adc
xchg
xor
divl
sbb
push
jo
inc
jbe
xor
shll
sbb
cwtl
mov
cld
cmp
dec
rcll
inc
fisubs
cmpsl
imul
xor
push
dec
insb
daa
jl
mov
jecxz
mov
push
dec
jbe
and
in
fstpt
es
lea
fwait
mov
pop
mov
dec
push
rorl
nop
js
xchg
sub
adc
xchg
iret
arpl
add
jle
mov
adc
sub
mov
cmp
outsl
jecxz
push
stc
lret
sub
pop
and
mov
or
rorl
rorb
rcll
mov
dec
sub
xorb
sub
insl
add
outsb
push
rorl
fsts
xor
or
sub
leave
push
call
xchg
xor
cmp
pop
mov
jnp
outsb
sbb
pop
mov
loopne
imul
push
xor
jne
cmp
jmp
dec
mov
xlat
mov
or
jne
mov
cli
dec
adc
lcall
inc
push
inc
mov
stos
cmp
pushl
test
icebp
dec
out
popf
dec
dec
decb
push
in
insb
add
and
popl
in
inc
lahf
adcb
push
scas
fwait
add
mov
jb
scas
in
fldenv
out
mov
loop,pn
cmpb
mov
fidivrl
or
sti
out
mov
or
lds
xlat
xchg
pop
add
adc
cmp
xchg
int3
add
adc
cmp
jg
rcrl
push
mov
mov
adc
mov
movsl
incb
add
adc
dec
cmp
cli
xchg
xchg
inc
cs
les
pop
addl
dec
dec
fisttpll
or
fidivs
push
dec
in
cmp
mov
imul
mov
in
push
incb
pop
and
sar
jg
xor
xlat
stc
stos
add
pop
sub
jae
pushf
xchg
js
test
cld
xor
mov
sbb
imul
jmp
pop
rcll
cmp
or
js
aaa
imul
inc
iret
cmpsb
add
inc
out
cmp
cmp
lock
imul
icebp
test
cmc
lahf
xor
mov
sbb
test
cmpsl
fstpt
xchg
sarl
test
lahf
mov
lcall
dec
mov
push
out
mov
sbbb
call
in
jecxz
mov
int3
jns
loop
xchg
rcr
jle
jp
arpl
sti
mov
cld
mov
inc
push
insl
ds
jge
sub
mov
xor
xlat
jle
push
mov
cmp
addl
bound
jae
adc
adc
jge
lods
loope
test
gs
sub
outsb
lds
jns
sub
xchg
stc
xchg
in
mov
xor
lret
mov
inc
pop
enter
push
adc
data16
xchg
sub
shl
loope
adc
in
les
test
adc
xchg
xor
shr
stc
lcall
rclb
shrl
adc
mov
insb
push
pop
xchg
sub
lret
out
adc
mov
fstpl
xchg
jns
test
shrb
out
inc
and
cmp
xor
ret
out
cmpsb
roll
or
push
aam
push
loope
mov
jne
js
arpl
fsubs
movsb
xor
dec
test
cmc
inc
jo
js
loop
cli
cwtl
aaa
xchg
inc
ss
out
repz
jnp
push
sbb
mov
xchg
loope
faddl
mov
mov
je
push
or
xchg
movsb
fwait
pop
jecxz
cmc
push
orl
push
dec
int
xchg
push
lea
invd
cmpl
leave
mov
sahf
add
push
xchg
xchg
or
leave
js
mov
cld
mov
jecxz
rcrb
movl
ljmp
jecxz
push
arpl
xchg
jb
loop
mov
in
in
test
push
cwtl
mov
ljmp
mov
jecxz
cmc
pop
ja
adc
mov
repz
andl
sub
mov
cmpsl
arpl
jne
adc
mov
xor
fistpll
iret
or
push
add
pop
movsl
sbbl
popa
and
jns
xchg
or
mov
sub
mov
stc
mov
repnz
aaa
push
je
dec
lods
jae
dec
icebp
shrb
je
pop
shrb
and
xorb
cmp
decb
mov
test
loopne
mov
ds
ret
repnz
xor
repnz
mov
stos
jl
lods
mov
mov
les
movsl
or
add
sub
out
pop
shll
outsb
xchg
push
jg
xor
adc
lcall
jg
jo
shrl
mov
push
int3
push
cmpsl
stc
xchg
sti
pop
xchg
mov
inc
enter
mov
sbb
aad
mov
push
and
div
push
sub
ss
out
ljmp
inc
dec
lea
mov
jno
out
pop
cmp
rolb
inc
xchg
sub
inc
pop
jmp
cmp
int
sbb
or
out
mov
lods
mov
mov
popf
lahf
cmc
jo
mov
sub
or
mov
sub
testb
mov
and
or
or
rorb
ja
cmpsl
mov
mov
sbb
cmp
test
mov
leave
into
push
jmp
cmp
sub
in
rcll
pop
into
rclb
xchg
jno
adc
cmp
sub
xchg
sub
movsl
cmpsb
mov
xchg
ljmp
mov
roll
les
bound
test
imul
inc
jmp
xchg
mov
aad
mov
xchg
movsb
sub
cmovs
in
and
mov
mov
cmpb
js
pop
pop
movsb
cmp
out
mov
adc
mov
xchg
movsb
fsubs
mov
jbe
loope
test
fcomp
jne
andb
lahf
loopne
push
lods
sahf
mov
and
movsb
dec
push
lahf
sub
dec
into
xor
xchg
mov
push
cmp
rorl
loop
aaa
in
lcallw
pop
call
or
inc
int
jle
xor
mov
dec
dec
loope
or
mov
mov
mov
mov
mov
pop
push
das
jmp
imul
cmp
and
movsb
frstor
stc
and
pop
inc
or
mov
mov
sbb
adc
xchg
popa
jae
movsl
cmp
xchg
cmp
xchg
push
xchg
inc
add
sbb
push
lahf
repnz
mov
inc
in
mov
les
outsb
test
in
push
add
sub
cmpsl
cmp
arpl
mov
cltd
mov
or
sbb
ret
xchg
mov
repnz
pop
xchg
jo
push
cmpsb
xlat
sbb
xchg
push
and
push
inc
jno
push
sub
inc
cltd
mov
jmp
imul
movsl
push
fwait
scas
leave
inc
nop
inc
adc
pushf
inc
jp
cmc
sbb
dec
push
jae
insb
fisubs
jmp
sbb
icebp
addr16
repnz
lods
repnz
jl
movsb
mov
jae
aaa
sbb
lock
push
xor
dec
adc
dec
dec
add
ja
scas
pushf
test
fsubs
stos
das
cmc
pop
outsl
and
in
sub
call
ds
mov
es
jns
xchg
sbb
push
dec
ror
dec
cmp
loopne
pmuludq
pushf
cmp
mov
data16
sbb
and
sub
popa
rorl
imul
hlt
and
xchg
sbb
bound
divl
jp
push
dec
cmp
nop
scas
sti
daa
pop
sar
mov
in
mulb
sub
xchg
imul
jmp
out
sbb
pop
xor
ds
jecxz
or
ficomps
imul
inc
xor
shrb
outsb
jge
sub
notl
dec
bound
incb
mov
dec
es
in
loope
pop
in
roll
ficoml
lret
adc
sub
stc
jno
bound
icebp
lahf
dec
push
jae
out
call
scas
mov
movsl
dec
adcb
bound
cmp
test
int3
add
lock
dec
inc
leave
es
push
mov
dec
movsb
cmp
and
data16
cmp
scas
xlat
dec
lods
xchg
loope
cmp
and
icebp
pop
addr16
mov
lods
and
jge
fsubl
fisubl
mov
outsl
cld
mov
imul
int
and
or
dec
stos
fwait
sbb
or
adc
iret
in
dec
jnp
mov
lds
sub
and
imul
out
push
cmp
pop
repz
push
mov
sub
lods
stos
push
insl
ret
scas
cmp
push
mov
movsb
ficoml
mov
fistl
lods
cmpsb
aas
push
aad
xlat
addl
loopne
xlat
and
pop
cmp
dec
mov
aad
xor
xchg
ljmp
and
adc
mov
out
jns
or
mov
cmp
jecxz
xorb
push
data16
push
jo
jmp
pop
sbb
pop
xor
add
jge
add
lock
or
lret
or
inc
push
in
pushf
mov
xor
mov
and
pop
lahf
setbe
inc
jno
lahf
fisubrl
adc
adc
stos
jae
repnz
adc
popa
movntq
out
mov
xchg
adc
pop
mov
out
insb
movsb
mov
inc
xchg
or
in
and
pop
in
call
sub
mov
dec
mov
cmp
cmpsb
and
push
jno
pop
sahf
imul
call
jg
sub
insl
gs
aam
adc
sbb
adc
push
pop
lods
and
and
cld
cld
pop
aad
jge
cmp
sti
fistpl
push
cmp
cld
push
mov
or
push
sub
jnp
push
inc
xor
jo
push
shll
mov
fs
iret
jmp
dec
xchg
stos
add
rdmsr
popa
fs
or
popa
loope
xchg
test
jmp
scas
mov
mov
popf
mov
out
mov
cli
push
adc
mov
or
arpl
xlat
out
movsb
mov
xchg
inc
mov
cmp
mov
jle
movsb
mov
add
sbb
pushf
mov
pusha
sub
jmp
jno
test
jae
roll
xor
rclb
dec
mov
pop
std
sarl
int
ss
adcl
icebp
dec
sub
outsb
xchg
jge
lahf
jo
sub
push
jecxz
adc
bound
dec
sahf
and
cmpsl
mov
xchg
shr
jno
or
dec
mov
adc
sub
sbb
sbb
je
pusha
or
aam
jno
adc
xor
jo
adc
int3
aad
mov
push
mov
out
sub
lcall
lods
out
push
shll
sahf
and
in
sub
out
mov
das
mov
shll
mov
aad
insb
imul
push
test
cmp
dec
pop
or
sbb
lret
pop
aas
dec
ljmp
sub
stos
xor
cmpsl
xchg
leave
test
lock
jae
fs
mov
jne
fisubl
std
dec
xor
mov
in
push
arpl
shrl
nop
mov
sub
inc
dec
mull
stos
xor
sub
fisubrs
movsl
xor
lcall
jp
mov
sub
fcmovnbe
jno
xor
add
and
fists
sbb
pop
pop
sbb
inc
xchg
add
jns
test
xor
push
cmp
adc
or
and
inc
bound
xchg
in
loope
out
loopne
jl
arpl
inc
ret
in
xchg
dec
pop
jne
mov
testl
lret
dec
rcr
ds
xor
adc
pop
das
pop
aaa
cli
das
lret
cmc
and
mov
cmp
xchg
fnstenv
jge
out
xor
cld
fsubrl
mov
mov
lret
or
mov
pand
jns
jnp
or
nop
jle
lock
dec
enter
inc
not
and
int
pop
fsubrs
push
sub
in
xchg
xor
pop
cmpl
or
adc
add
xchg
clc
dec
addr16
push
jo
xchg
sub
xchg
lea
jge
ret
pop
or
bound
push
pop
enter
insl
push
sahf
xchg
ljmp
movsb
mov
lret
pushf
insb
push
lds
mov
add
or
sub
xor
imul
icebp
pop
fwait
imul
cmpsl
fcmove
add
sub
je
and
mov
mov
loope
shlb
je
fwait
fwait
js
jecxz
loope
daa
fcoml
push
pop
jp
cwtl
fst
movl
out
adc
fildl
les
insl
adc
cld
mov
add
test
jge
push
sub
shl
je
js
pop
hlt
int
xchg
pop
inc
insb
out
cmp
push
les
jo,pt
data16
and
std
xor
movsb
pop
sbb
adc
xor
js
push
fisttpll
inc
mov
pop
push
adc
mov
mov
repz
aad
xchg
fcomip
fs
add
enter
sarl
insl
shl
pop
xor
sub
repnz
mov
popa
push
and
jp
jae
fadd
into
aam
xchg
cld
mov
aam
or
adc
ror
jecxz
pushf
add
lods
mov
add
jb
inc
jecxz
cmp
sbb
jecxz
sub
cmpsb
insb
les
push
add
leave
dec
xlat
repz
mov
call
lods
repnz
movsb
mull
int
jno
adcl
inc
jo
ret
cmp
lret
add
aas
sub
or
test
lods
xchg
dec
lret
dec
jbe
mov
int
pop
cmp
jmp
jle
jo
pop
adc
or
dec
xchg
ret
xchg
cs
cmp
xchg
clc
mov
mov
nop
sub
xor
dec
repz
es
cmp
js
outsb
scas
jo
or
jbe
sarb
in
push
ja
xor
mov
aad
sbbl
push
jecxz
xchg
fsubrl
add
cld
lds
jne
stos
rcrb
stos
ret
pushf
icebp
cmp
ss
or
pop
idiv
dec
pop
pop
dec
xchg
inc
fsubrs
dec
pusha
out
sti
push
jl
jmp
test
mov
cmp
in
shll
jns
imul
sbb
jo
sti
imul
push
xchg
pusha
dec
mov
jmp
js
and
pop
loopne
or
inc
mov
push
aaa
pop
jecxz
or
xor
inc
sbb
in
in
aam
test
popl
adc
xchg
sti
ret
mov
cmc
lahf
mov
lods
push
or
lods
cli
icebp
loope
xlat
aad
mov
enter
cwtl
sahf
jbe
ror
data16
pop
icebp
lahf
mov
in
mov
jnp
stos
movsb
or
sub
push
inc
imul
ret
or
push
dec
pop
sub
mov
std
mov
das
mov
enter
paddusw
cmp
outsb
repz
sbbl
mov
mov
cmp
cwtl
mov
push
daa
pop
mov
roll
lret
mov
mov
mov
addr16
scas
dec
sahf
es
into
mov
in
les
lret
aaa
xchg
imul
inc
fistpll
mov
mov
push
aaa
adc
in
dec
ss
push
scas
int
pop
stc
ss
mov
ljmp
push
pop
sahf
pop
call
stos
mov
jge
sub
or
dec
loopne
jb
pop
sbbb
adc
cmc
ds
and
sbb
add
jnp
xor
jbe
jg
push
cld
jo
aas
fisttpll
push
and
js
shlb
fucomip
inc
pop
roll
inc
inc
cmp
popa
and
out
mov
cmp
loopne
jne
sbb
in
cmpsb
inc
push
loopne
shll
insb
rol
les
aas
xor
cli
push
rorb
ret
mov
push
mov
add
jbe
popf
addb
adc
mov
xchg
xchg
jae
inc
jg
inc
and
adc
ss
repnz
jne
pop
push
xchg
dec
xchg
stos
pop
inc
fldcw
pop
pop
out
fcmovu
xchg
addb
rorl
inc
mov
jl
leave
mov
fiadds
dec
mov
imul
lret
mov
pop
sub
add
sar
or
mov
lahf
pop
push
out
addr16
cmp
cmc
data16
vmread
pop
add
mov
xchg
js
mov
cli
sub
push
pop
sbb
fwait
subl
mov
daa
or
popf
fldt
xor
push
mov
mov
fldt
nop
push
rorb
lret
xchg
aaa
clc
out
in
jl
push
xor
stos
mov
pop
idivb
stos
pop
xor
mov
push
subps
mov
dec
jle
repz
int
and
shrb
mov
jmp
xor
nop
mov
mov
jbe
cmc
lods
shlb
jns
mov
pop
xchg
adc
pop
std
mov
imul
adc
jecxz
out
xor
bound
stc
stc
xor
fistpll
inc
ss
jle
cmp
shrl
lods
mov
add
cmp
out
push
mov
or
insl
inc
test
pop
jmp
dec
jecxz
cwtl
and
push
inc
repz
pop
cld
out
inc
rorb
jb
mov
xchg
lret
imul
out
fistl
jne
mov
push
ss
sub
sbb
ret
cmp
insl
rol
push
lds
loopne
xor
sarl
pop
cmpsl
mov
test
sub
lret
mov
pop
out
scas
movsl
inc
inc
xorb
mov
inc
and
sub
mov
sbb
mov
jmp
addr16
add
test
mov
mov
mov
mov
cli
jo
sbb
or
push
and
adc
movsl
mov
jb
mov
cmpsb
mov
imul
shll
pop
jae
inc
dec
xchg
ja,pt
ret
push
jnp
out
sahf
or
ret
pop
aas
mov
add
xchg
jle,pn
mov
mov
cmp
jbe
dec
test
mov
adcb
out
sub
mov
cltd
xor
mov
inc
inc
ret
cmpsl
mov
push
sub
or
inc
outsb
push
jns
add
or
pop
roll
jmp
fimull
xor
xchg
dec
sbb
inc
xor
aaa
jo
je
xchg
inc
insl
push
js
push
in
shll
cld
aas
jmp
cmp
movsl
cmp
xor
repz
xchg
mov
popa
cmp
lock
scas
je
mov
jno
stos
or
cwtl
es
pop
mov
fsubrs
adc
mov
fwait
mov
sub
aaa
inc
pop
rcl
mov
iret
jl
sarl
xor
jle
mov
das
stos
sub
test
adc
adc
mov
test
popf
test
ja
aad
push
mov
pop
enter
and
adc
rorl
mov
mov
sbb
dec
int3
mov
push
mov
mov
xchg
dec
mov
push
negb
mov
and
mov
or
addb
inc
stos
inc
ljmp
cli
ret
fisubs
mov
test
test
loope
fs
dec
mov
mov
and
add
jmp
sarb
clc
ret
inc
inc
in
lret
out
add
rclb
loop
add
and
in
pop
inc
test
loope
cmp
sbb
shll
enter
and
pop
pop
and
push
mov
imul
and
mov
mov
idivb
xor
loopne
mov
mov
dec
sahf
xchg
mov
push
bswap
push
pop
mov
pusha
gs
jne
adc
outsl
je
andl
int
inc
rolb
scas
lcall
div
adc
inc
cs
lahf
mov
inc
into
sbb
inc
stos
mov
test
lods
popa
mov
movsl
sarl
cli
adc
mov
sub
mov
aam
push
xchg
push
sarb
out
adc
pop
add
dec
rcrb
ds
shl
cs
mov
pop
aaa
sub
pushf
cltd
xor
hlt
and
and
fwait
mov
popa
mov
pop
sbb
dec
pop
mov
loope
shrl
stos
cmpsl
xor
loope
xchg
push
shl
inc
das
mov
cld
icebp
mov
pop
pop
rcrl
cmp
bound
sbb
in
xchg
roll
jo
cli
push
sbb
test
mov
pop
mov
andb
pop
lahf
or
cmpsl
jge
adc
enter
shll
push
and
jae
mov
jg
imul
mov
push
inc
adc
push
sub
sbb
xchg
xchg
pop
leave
adc
mov
loopne
loope
ret
sbb
push
mov
adc
dec
push
mov
push
add
fisttpl
mov
pop
imul
adc
bound
mov
mov
inc
ljmp
sbb
lea
lods
es
aad
cltd
loopne
fdivl
insl
jle
jge
inc
sub
repz
mov
imull
ret
or
jle
lods
pushf
dec
xchg
sbb
loopne
mov
in
xor
mov
pusha
test
rcl
in
push
and
sbb
daa
int3
ror
in
or
repnz
mov
dec
mov
xor
mov
loope
xchg
outsl
arpl
sahf
mov
xchg
outsb
inc
inc
ret
aad
xor
jmp
jo
pop
aad
sbb
dec
enter
adc
mov
fisttps
test
movsb
mov
push
mov
rcr
incl
lods
pusha
adc
pop
inc
jno
out
xchg
jbe
cmp
mov
mov
dec
mov
outsl
addr16
das
mov
cmp
add
add
arpl
loope
daa
inc
dec
adc
mov
sbb
hlt
jle
sbb
push
adc
cmc
jo
nop
and
mov
xor
mov
mov
mov
mov
or
sbb
outsb
adc
fsubrs
xchg
es
imul
ss
or
push
adc
jns
mov
ret
mov
test
jnp
and
push
imul
mov
xchg
or
cmp
movsl
andl
aam
mov
adc
sub
jp
scas
rcrl
cmp
lock
mov
jne
pop
lret
lods
adc
push
push
inc
jp
jnp
and
mov
jle
movaps
ds
jge
cmp
and
into
scas
push
ss
or
jno
xchg
pop
call
mov
inc
lcall
xor
inc
sbb
sahf
jp
lea
mov
cmp
push
sub
rcr
ror
inc
sahf
cmp
out
imul
fldl
cmp
test
push
lret
leave
cmpl
sub
pop
imul
mull
sbb
cmp
out
dec
or
jns
push
icebp
xor
in
cmpb
sbb
std
repnz
sub
loope
mov
pop
addr16
mov
stos
test
or
pop
dec
mov
xchg
mov
jns
push
dec
inc
repz
cmp
add
cmpsl
mulb
inc
jle
xchg
mov
std
dec
imul
mov
jecxz
jecxz
cwtl
jne
xchg
jge
or
out
ja
cmp
outsb
and
or
push
adc
xchg
inc
jns
mov
push
xchg
cli
cli
sbb
inc
jp
lcall
dec
enter
repnz
pushf
and
and
sub
testl
dec
fistps
ja
es
push
aam
mov
in
push
js
ret
xchg
cmp
dec
cmp
mov
rcl
lods
cmc
dec
js
rcr
notl
pop
ret
loopne
rol
push
cmpps
mov
and
sbb
out
subl
scas
xor
jb
js
inc
es
xlat
shlb
and
jne
cli
inc
add
test
xor
cmp
mov
cmp
imul
sbb
in
std
pop
xchg
in
add
jb
mov
inc
lret
sub
cltd
mov
clc
test
fisttps
fidivs
mov
sub
mov
dec
mov
out
sub
jns
lds
hlt
xchg
cmp
fs
insb
xchg
bound
adc
fincstp
test
and
jo
or
mov
js
add
imul
mov
xchg
xchg
out
rclb
and
mov
adc
pop
cld
cmp
lds
push
jmp
ret
add
push
jbe
xor
movsb
xchg
xchg
sbb
cmp
js
in
cwtl
mov
out
loope
inc
push
out
stos
push
loopne
mov
lods
or
lret
jnp
xchg
enter
shl
orl
jns
or
lods
bound
dec
shll
inc
pop
lods
repz
cmp
push
push
cmp
addr16
and
pop
mov
push
xchg
and
pop
lea
dec
iret
leave
cld
or
sub
jge
xorl
or
mov
lret
and
fwait
int
sbb
sub
or
aaa
cwtl
xorl
mov
sbbb
sarl
rorl
xor
movsl
xchg
call
dec
rcrb
into
jg
mov
mov
mov
lret
leave
loope
aaa
jnp,pt
fsubs
pop
mov
xor
fbld
push
push
pusha
adc
bnd
cmpsb
inc
shrl
in
movsl
xor
jp
fwait
sbb
out
mov
shl
sub
shrb
sub
xor
je
xor
call
or
sub
pop
clc
adc
outsl
arpl
mov
lcall
repz
test
pop
push
scas
pop
mov
dec
pop
test
cli
js,pt
inc
push
lods
pextrw
add
lods
imul
sub
push
aaa
cmp
jg
cwtl
shlb
das
clc
pop
sub
nop
out
inc
rol
push
xchg
ljmp
xor
push
xchg
adc
mov
xchg
enter
adc
dec
movsl
sub
loope
shlb
sahf
sub
testl
fiaddl
cmpsl
cmpb
lock
loopne
xor
outsb
sbb
add
add
aad
jnp
ds
movsl
enter
fbld
sub
pop
jl
cld
fs
call
imulb
into
stos
shrl
rorl
test
dec
out
clc
pushf
movlps
mov
gs
fbld
lods
xor
lods
pop
hlt
cmp
jno
sbb
std
cmp
nop
test
repnz
lds
mov
fisubrs
pop
dec
adc
cli
int3
xor
outsl
shrl
fldcw
cmp
aas
cwtl
loopne
or
xchg
gs
fdivrp
mov
ss
cli
dec
or
imull
xchg
push
test
imul
mov
xor
nop
cmpsl
mov
hlt
negl
jl
mov
in
mov
pop
pop
add
out
inc
add
imul
pop
lret
or
fwait
sarl
jp
xor
add
push
sbb
popa
push
out
add
push
xchg
mov
int
es
jecxz
ret
fwait
pop
sbbb
pmaxub
adc
push
out
popf
enter
adc
sub
jge
fcoms
lods
aam
xchg
fs
mov
repnz
cmp
insb
or
loop
xor
test
into
rclb
xor
fwait
aas
jle
cmp
pop
mov
sbb
dec
push
outsb
jae
test
test
les
pop
ds
add
cmp
sbb
in
jle
xchg
insb
dec
dec
leave
add
lds
cli
aad
movsl
fdivrp
mov
jo
arpl
mov
loop
or
in
insl
aam
inc
pop
sti
out
in
inc
dec
mov
add
aam
xor
repz
jg
es
cmpsl
inc
fldt
xchg
and
lea
adc
mov
in
push
or
fwait
pushf
mov
icebp
testb
pop
xchg
repz
into
fidivrl
lods
push
notl
fwait
push
xor
sti
mov
and
outsb
sbb
ja
push
out
into
test
pop
mov
pop
cmc
fstpl
imul
push
add
xlat
mov
mov
jl
jmp
lea
and
inc
ljmp
scas
aas
sbb
and
push
cltd
mov
xchg
in
leave
or
sub
cltd
aam
mov
mov
shlb
or
jge
pop
sub
sbb
scas
aam
xor
xchg
jbe
inc
dec
ljmp
rcr
or
sbb
lods
adc
imul
outsl
int
sub
nop
adc
xchg
mov
sbb
out
stos
roll
stos
pop
cwtl
test
imull
mov
ljmp
jmp
int3
out
dec
data16
dec
pop
movsl
and
movsb
jmp
or
mov
imul
pop
add
pop
sbb
mov
push
xor
data16
decb
push
out
jbe
adc
dec
mov
imul
mov
dec
xor
and
les
or
xor
xchg
adc
xchg
push
mov
outsl
sete
jp
aaa
int3
es
aam
inc
push
xor
or
cmp
fdivr
push
aam
mov
mov
mov
mov
pushf
scas
pop
lahf
loopne
pop
sahf
gs
repz
lcall
push
insl
jle
push
mov
xor
dec
mov
popa
pusha
aam
ror
inc
sbb
jnp
or
sub
and
cmp
dec
xchg
mov
mov
mov
pop
dec
push
xor
ret
lea
cmp
jbe
dec
outsb
pop
cwtl
fists
cmc
push
dec
les
sbb
xchg
dec
sub
int3
leave
cltd
inc
in
ret
and
xchg
pop
popf
aam
dec
add
mov
sarl
xor
lods
loopne
lret
iret
sbb
ja
sub
pop
mov
xor
cmc
jae
lea
pop
add
sbb
ljmp
push
jecxz
in
outsb
fistl
loopne
xor
test
mov
adc
mov
adc
cmp
leave
mov
cmpsb
out
sub
inc
js
out
cmpsb
jb
sti
push
pusha
bswap
mov
cwtl
shrl
test
mov
cmpsb
push
int
mov
or
rcll
and
cmp
cmc
stos
push
out
dec
pop
sbb
bound
aam
flds
xor
sbb
movsb
stc
push
cmc
iret
lods
popf
sub
out
mov
xor
inc
dec
mov
pop
out
or
mov
sub
dec
mov
lahf
pop
inc
mov
jmp
mov
push
cwtl
xlat
sbb
insl
cmpsb
test
movsb
push
lret
scas
adc
and
mov
jns
mov
in
fidivrl
mov
or
jmp
jmp
push
mov
test
jb
xchg
dec
push
adc
or
cmovl
or
jg
sti
mov
insb
inc
movsb
test
xchg
sbb
xor
inc
notl
cmp
or
fsub
xor
pop
xlat
sub
or
arpl
dec
test
and
arpl
ds
xor
ss
fisttpl
arpl
mov
cmpb
xchg
mov
xchg
into
int
sub
shl
push
xor
push
mov
ret
out
fsubs
popa
inc
cmp
pop
xor
scas
data16
mov
and
int
movsl
movsl
adc
stc
sub
pop
aas
xchg
mov
std
add
or
sbbl
inc
lcall
add
test
out
mov
aad
mov
xchg
nop
test
pop
daa
sbb
add
adc
add
sti
rcrl
xchg
aas
xor
pushf
and
adc
data16
and
adc
test
pop
mov
lods
cmc
pop
outsb
jecxz
mov
daa
mov
sbb
outsl
and
cltd
xlat
dec
sti
out
addr16
mov
mov
pop
dec
pusha
fdivrs
jbe
or
or
jge
lods
rcll
adc
pop
fmuls
sbb
sub
pop
lcall
bound
jg
sbb
fs
movsl
pop
push
gs
std
mov
xchg
jno
inc
xor
cli
mov
cmp
mov
xchg
cwtl
fisubrs
test
sbb
insb
or
fnstcw
mov
mov
in
inc
rdtsc
jno
jbe
in
sub
test
test
xor
test
add
sub
cmp
push
pop
shufps
cmp
popa
push
sbb
dec
mov
sub
loop
xchg
pop
out
push
pop
jle
cld
daa
xor
inc
enter
dec
enter
adc
pop
push
arpl
mov
lea
mulb
push
sub
mov
fnsave
pop
cmp
rcrl
add
jg
ja
xlat
sub
lds
jle
outsl
sbb
fdivrl
push
dec
mov
movsb
in
sub
cmp
les
add
ljmp
pop
push
cmpsb
popf
mov
jae
add
xor
mov
dec
ja
inc
in
mov
movl
or
in
inc
jo
inc
outsb
cmpsl
push
cmp
mov
mov
popa
dec
jecxz
mov
jne
and
mov
sahf
pop
dec
jecxz
je
jbe
fistpll
inc
lock
rcll
mov
out
lods
fdivs
mov
cld
inc
sub
adc
std
xchg
stc
ljmp
orb
aas
sbb
and
cmp
add
in
sub
cmpsb
mov
gs
xchg
bound
mov
dec
pop
test
mov
ret
cld
and
inc
fwait
sub
seto
mov
jbe
push
es
sbb
in
mov
mov
in
cmp
xor
ret
push
lret
sti
sub
scas
retw
or
mov
dec
adc
out
scas
sub
inc
jecxz
je
inc
cmp
add
scas
js
lock
xchg
icebp
pop
xchg
xchg
in
mull
mov
les
mov
xor
out
cmp
mov
stos
dec
pop
xor
data16
or
lock
sbb
add
test
mov
push
adc
xchg
mov
xor
lea
sub
jp
aad
flds
cmp
or
mov
jno
fmuls
and
lods
outsb
test
push
mov
jb
test
dec
neg
fdivrs
or
mov
inc
adc
pinsrw
push
sti
loope
hlt
and
das
leave
lds
mov
imul
push
enter
sbb
sbb
test
repnz
aam
sub
mov
ficompl
cmc
pop
mov
push
sahf
adc
xor
testl
xchg
call
bound
imul
daa
xor
xor
leave
test
jl
pop
clc
jge
es
sub
and
push
and
lret
push
mov
pop
push
or
or
push
inc
pop
sbb
sbb
enter
sub
cmpsl
rcll
pop
and
mov
add
jb
dec
nop
mov
out
into
xchg
xchg
insl
js
stc
out
stos
xchg
fstpt
adc
les
inc
ja
pusha
mov
shll
mov
popa
jne
imul
sub
and
cltd
loop
loope
bound
call
xor
daa
cmp
bound
je
pop
popa
aam
insl
sub
xor
push
pop
pusha
sub
in
dec
jno
cmp
mov
push
aas
cmp
adc
and
xor
das
sub
xchg
xchg
add
dec
lea
sub
test
push
ja
mov
pop
inc
sbb
mul
push
ret
outsl
addr16
adc
push
out
dec
push
sti
neg
and
leave
popa
leave
jns
stos
adcb
in
mov
sub
or
xchg
jge
mov
mov
push
int
in
pop
bound
dec
xor
pop
mov
mov
mov
sub
pop
jle
cmp
jae
adc
pop
jno
call
or
mov
and
fmull
push
xor
pop
std
sti
cld
dec
xor
mov
dec
dec
test
daa
mov
mov
lret
and
test
sub
or
dec
outsl
add
dec
scas
or
popa
jmp
testl
pop
sub
test
xor
negl
xchg
sbbb
lods
inc
aad
lret
inc
insb
lret
dec
mov
fs
fs
jg
jge
dec
add
push
jne
out
push
mov
mov
dec
pop
and
push
cmp
pop
lock
cmp
fsub
in
xor
mov
dec
popa
fmull
addr16
push
or
icebp
rcrl
dec
mov
dec
ret
cwtl
fdivrs
sub
and
test
sbb
xorl
mov
push
ss
loop
mov
inc
outsl
nop
pop
aaa
fisubrl
fs
jecxz
fisubs
inc
outsl
sbb
pushf
mov
xchg
imul
ljmp
dec
sti
das
pop
cmp
xchg
and
jmp
cmc
xchg
loopne
xchg
xchg
mov
mov
cmp
pop
negb
dec
xor
dec
jp
and
ficompl
dec
fldcw
outsb
cli
pop
shll
shl
movsl
jae
ja
xchg
cmp
scas
test
adc
and
sub
mov
pop
std
mov
xor
nop
in
jl
dec
lock
iret
pop
xchg
inc
mov
in
out
test
js
outsl
inc
andps
outsb
aam
pop
push
mov
push
in
rolb
test
scas
push
pop
imul
adc
icebp
sti
mov
mov
adc
xchg
testb
cmp
and
loop
fdivrl
push
repnz
daa
xchg
pop
jmp
inc
shll
out
lock
scas
int3
ret
jae
test
jecxz
jne
mov
ret
shl
icebp
das
sub
pop
nop
jl
jae
adc
add
scas
sbbl
pop
pop
sub
inc
mov
mov
jg
insl
sahf
sub
mov
lock
or
xchg
out
push
or
mov
cmp
sahf
jge
ret
orl
invd
loope
cmp
push
inc
in
or
movsb
xchg
fsubrp
in
ljmp
outsl
cmpsb
dec
cld
aas
shrb
in
mov
scas
dec
das
sbb
xchg
loopne
xlat
cmpb
or
mov
out
adc
lods
fs
repnz
inc
cmpsl
fwait
pop
mov
jno
and
mov
lods
adc
jg
cmpsb
cmp
push
incl
mov
loope
popf
push
loope
hlt
int3
push
lret
js
jno
push
in
jge
repnz
ficoms
mov
or
sti
lret
pop
xchg
and
push
adc
adc
arpl
lods
cmp
mov
stc
mov
test
jbe
lea
jae
inc
rcl
push
inc
inc
xor
push
das
xchg
xchg
out
inc
divb
pop
dec
lock
repz
insb
and
insl
lods
jb
fnstsw
xchg
scas
in
push
and
fisubl
rcr
push
push
in
scas
sbb
push
mov
pop
cmpsb
mov
cld
add
hlt
and
popa
or
adc
push
lods
and
loope
imul
jno
loopne
and
and
push
cli
xchg
pop
fcmovb
imul
out
sbb
ss
inc
lahf
fisubrs
aas
test
negb
dec
imul
pop
repz
aad
xor
popf
pop
push
push
xchg
mov
lret
inc
xor
movsl
push
inc
cmc
and
mov
cmp
jmp
mov
inc
fisubs
orl
sbb
sbb
sub
xor
mov
cmp
out
add
stos
push
jecxz
cmp
mov
aam
mov
sub
xor
mov
mov
in
lea
xchg
inc
jb
sbb
pop
or
fwait
push
pop
pusha
subl
sbb
cltd
addr16
inc
popf
inc
dec
xor
sbb
inc
xrelease
lds
pop
add
ss
aad
fdivrs
add
ret
jae
xchg
out
sbb
inc
inc
out
add
and
orb
push
lock
mov
lods
jbe
pop
and
test
into
out
arpl
mov
leave
mov
cmpsl
jp
faddl
jg
cmp
dec
loop
push
mov
outsl
scas
mov
push
inc
mov
sti
outsl
or
jle
imul
out
sti
ret
loop
add
es
and
mov
repnz
out
push
inc
lds
mov
push
pop
insl
imul
cmp
push
decl
in
clc
sar
or
dec
fnsave
stos
dec
nop
pop
xchg
lods
out
mov
push
mov
out
out
jge
cltd
mov
inc
xor
bound
and
rorb
adc
adc
xor
adc
popa
das
dec
push
loope
xchg
mov
xchg
or
repz
sbb
cli
push
lahf
in
push
mov
mov
adc
mov
push
inc
xchg
push
stos
dec
iret
jno
push
xchg
nop
aam
loopne
push
push
mov
movsl
xchg
ja
xchg
dec
sahf
sar
push
lret
out
into
mov
shlb
das
aad
imul
test
fisttpl
add
insb
sub
jne
adc
dec
jae
ret
pop
popf
adc
insb
push
mov
incb
jno
pop
notb
mov
xchg
jns
jbe
jno
out
lcall
pop
lods
dec
icebp
scas
fdivrl
jle
shl
lock
jb
fs
inc
dec
pop
jo
mov
in
ja
push
pop
fcmovne
push
iret
dec
sbb
sub
cmp
cmpsl
jmp
jbe
mov
dec
and
sbbl
shrb
andl
inc
mov
adcl
sub
jno
aam
mov
ret
pop
insb
pushf
cmc
aam
js
inc
push
mov
inc
inc
test
in
fnstsw
sub
ficomps
inc
inc
xchg
divl
add
jp
faddl
cli
xchg
sahf
mov
jo
mov
lds
jecxz
sbbb
dec
faddp
jmp
mov
xchg
cmp
pop
fcompl
jg
sbb
or
xorl
call
xchg
sub
jae
sbb
push
add
cmp
or
idiv
sbb
xor
scas
or
adc
inc
lds
inc
mov
in
loope
popa
pop
bound
push
lret
lahf
cli
add
lret
jbe
cmpsb
test
es
pushf
in
xchg
in
pop
fdivs
mov
lret
mov
repz
jno
or
push
mov
sub
mov
mov
or
fcoms
dec
cmpsb
cltd
dec
pop
call
or
pusha
inc
pop
cmp
mov
push
test
mov
sub
pop
inc
movsl
mov
pop
incl
test
repz
ror
cmpsb
fisttps
add
sbb
insb
adc
fsubl
js
call
jl
xorl
int
push
jmp
pop
inc
jne
xor
adc
jns
ret
loope
add
stos
shrb
out
mov
pushf
fistps
sub
jo
into
jp
fcoms
xor
mov
lahf
dec
arpl
mov
fcoms
add
mov
push
fisttpll
add
xor
lret
sbb
push
pop
jns
test
subb
jmp
push
notl
push
mov
push
add
adc
outsb
mul
cmpsl
or
push
mov
jb
inc
out
mov
loopne
test
cmpl
jle
mov
das
gs
out
sarb
xlat
scas
xchg
jp
mov
adc
adc
jge
ret
cmc
mov
pop
mov
lret
ja
pop
js
movsb
cmpsb
ret
sbb
jno
ja
mov
sbb
movsl
in
mov
ficomps
lret
mov
pop
cmp
icebp
out
fldcw
aaa
or
mov
push
jo
cmpb
mov
mov
test
inc
cli
sub
dec
outsl
mov
pop
inc
gs
jl
xchg
push
push
ss
xlat
lods
popf
test
inc
push
cltd
pop
xor
xchg
xchg
cmc
xor
es
jg
cmc
js
xlat
popa
jecxz
lds
inc
xor
cli
push
cmp
add
push
loop
cwtl
xor
stos
hlt
aam
xchg
mov
inc
aaa
pop
arpl
dec
mov
sar
std
inc
test
jb
aas
dec
dec
dec
sbb
push
gs
mov
or
and
mov
dec
scas
das
cmp
in
dec
add
jl
or
out
fwait
leave
mov
cmp
fdiv
add
xchg
out
cwtl
xlat
movsl
sub
jl
mov
iret
sbb
xchg
imul
cli
fisubl
adc
mov
test
xchg
jmp
cmc
xchg
sbb
lock
xchg
add
jecxz
and
mov
aam
js
mov
in
push
clc
cli
in
imulb
dec
fbld
or
add
lahf
jecxz
xor
xor
mov
adcl
xchg
mov
insl
pop
and
pop
mov
add
arpl
inc
testl
pop
aad
dec
decl
mov
gs
cmpsl
fisubrs
test
push
jae
cmc
jmp
insl
xchg
lods
icebp
cli
jmp
lock
data16
fadds
xor
mov
push
lret
cmp
push
xor
loope
inc
and
ds
lahf
sub
leave
lret
jmp
inc
inc
movsl
add
test
addr16
subb
cmp
inc
pushf
add
cltd
andb
insb
loop
adc
popf
fnstenv
popa
pop
out
jmp
sahf
mov
lahf
lret
andb
push
fcoms
push
pop
hlt
repnz
xlat
push
jecxz
scas
daa
testl
out
lea
mov
mov
mov
aaa
test
mov
in
cmpsl
mov
test
mov
mov
dec
mov
call
imul
loopne
jmp
stc
add
popf
insb
pop
std
dec
jl
aaa
inc
inc
stos
pusha
ljmp
jb
fistps
dec
icebp
pop
xchg
jmp
jbe
in
xchg
call
mov
sub
popa
addr16
pop
sti
cmp
xchg
jg
imul
test
sub
aad
aas
shlb
cmpb
cmpsl
stos
mov
sbb
ds
lahf
sbb
and
rorb
in
adc
jo
in
stc
lret
mov
faddl
push
xchg
ss
adc
jge
xor
and
pop
push
mov
jns
push
cmp
mov
std
dec
clc
xor
sub
and
ja
cmp
ss
sbb
lods
pop
cmp
inc
inc
jg
mov
iret
das
mov
sahf
lock
fadds
jo
or
test
cmp
adc
lock
pop
imul
lret
dec
cmp
out
mov
bound
cmpl
and
or
xor
nop
in
testb
lahf
mov
mov
inc
mov
orb
repnz
das
mov
popf
jbe
adc
jnp
jmp
adc
push
xchg
subb
push
mov
sbbb
push
xor
icebp
mov
jecxz
and
adc
add
push
in
mov
push
jecxz
sbb
ds
add
rcl
push
jne
shrb
testl
popa
aam
shll
fidivrs
mov
xchg
sbb
cli
inc
stos
or
pop
ret
pop
jle
jo
in
sub
sarl
or
add
push
add
insb
sub
jge
sbb
shll
rcrl
orl
jp
and
aaa
repz
hlt
movsl
shlb
aaa
cmp
cmp
sbb
inc
cmp
cld
cwtl
mov
or
inc
mov
adc
and
lret
dec
test
arpl
mov
test
mov
push
mov
dec
add
xchg
cmp
or
push
call
push
push
aaa
jmp
out
orb
sub
dec
xchg
shl
fisubs
inc
dec
jl
cmp
frstor
xchg
adc
insl
jg
adc
int
fistps
fildl
pop
dec
lea
jno
xlat
xor
jle
push
out
out
sbb
mov
xchg
pop
cmp
jae
flds
add
test
add
xor
loope
push
and
stc
and
hlt
shlb
sub
addr16
adc
adc
lods
stos
cmp
out
or
movsb
ret
xlat
mov
movsl
push
mov
lods
out
jmp
xchg
pop
mov
pop
jb
cmpsb
imul
push
decl
cmp
lods
fs
cltd
and
stos
xchg
pop
or
mov
add
inc
or
or
inc
mov
clc
xchg
push
xor
xchg
dec
dec
call
add
or
repnz
sbb
lea
jns
push
aad
das
icebp
test
icebp
lret
mov
and
dec
sbb
cmpb
in
aaa
adc
inc
addr16
push
icebp
jp
dec
pop
jno
stos
jo
cmpl
out
sub
int3
out
ds
jge
xor
adc
jb
fcmovnu
repnz
sub
add
leave
dec
incl
data16
jl
adc
sub
rcr
adc
mov
or
adc
mov
aas
repnz
fs
mov
or
jecxz
cmp
mov
std
scas
lcall
out
dec
mov
test
add
scas
jge
jecxz
adc
std
pop
push
cmp
adc
icebp
dec
in
ja
cmp
das
ficompl
sub
and
mov
fs
fisubrl
loope
push
lahf
pop
test
jns
sbb
mov
add
repz
push
loopew
dec
lret
push
in
shrl
out
shll
std
push
ret
dec
mov
icebp
fucom
cmp
mov
daa
int
sub
push
aad
push
dec
pop
scas
in
fdivrl
mov
push
push
cmp
xor
divb
loop
push
insb
es
movsl
pop
add
cmpsb
mov
sbb
mov
cwtl
pop
dec
das
mov
imul
sub
lret
pop
adc
jle
cmp
xchg
or
shlb
pop
ret
cltd
shlb
jo
enter
push
and
xor
mov
and
pop
inc
lcall
xchg
push
nop
mov
stc
in
stc
ljmp
inc
inc
xor
inc
fiadds
sub
cmc
cld
dec
adc
xchg
sbb
cmc
jecxz
xor
cmpsb
pusha
repz
arpl
cmp
dec
aad
inc
fsubs
ja
loopne
sub
sbb
or
dec
mov
xchg
push
in
roll
lods
xor
dec
xchg
jmp
nop
jp
int
pop
test
xor
push
rorb
iret
mov
mov
jo
push
outsb
andl
insb
mov
out
jbe
stos
sbb
repz
aas
and
sbb
test
cmp
push
insb
jbe
jne
insl
fbstp
jmp
or
loopne
sub
int3
fwait
inc
xchg
pushf
xor
xchg
fiaddl
into
push
test
loop
scas
lods
adc
xchg
or
xor
mov
push
dec
in
imul
sbb
subb
loope
sbb
insb
inc
push
cli
jnp
xor
test
test
lahf
jns
rcrl
das
inc
pusha
aaa
push
mov
xor
cltd
in
pop
jne
xor
inc
pop
mov
in
push
and
ret
or
sti
xor
mov
xchg
sub
fimull
or
fimull
mov
push
dec
mov
int3
xchg
insl
rorl
sbb
add
mov
push
adc
call
cmp
fs
mov
push
clc
cs
scas
xchg
push
lss
notl
fisttps
jb
cwtl
repnz
push
stos
addps
mov
inc
rclb
push
fildl
mov
xlat
adc
dec
fdivl
test
shr
xchg
mov
pushf
faddl
and
int
repz
jmp
aas
adcb
pusha
out
xlat
xchg
xor
loop
dec
mov
in
inc
or
ljmp
jbe
add
psubb
cmp
std
inc
cld
lea
cmp
scas
push
sbb
movsb
cli
pop
mov
sub
cmp
dec
leave
push
sbb
mov
mov
pop
aam
lret
scas
dec
jle
adc
outsb
lods
or
sbb
adc
mov
jmp
lods
mov
fs
int
aad
jne
out
sub
push
inc
ret
sub
add
test
cmp
pop
aas
sahf
iret
jle
cmp
cs
out
cmp
mov
mov
push
mov
mov
push
aaa
and
dec
jl
je
jbe
xchg
stos
push
jl
jecxz
push
lcall
mov
add
xor
scas
imul
aaa
hlt
loopne
sbb
js
dec
ljmp
or
lcall
cmp
mov
jmp
pop
movsb
sahf
movsl
in
inc
jns
cmpsl
ja
mov
roll
cmpsl
cwtl
xchg
cltd
pusha
shl
jl
das
lcall
lds
push
sahf
pop
xchg
pop
rol
repnz
jae
bnd
aaa
pop
fidivrs
popa
sbb
stos
fdiv
adc
xchg
push
adc
ja
push
fdiv
mov
les
inc
dec
pop
lret
or
lea
imul
cmp
sub
pop
or
mov
mov
push
fnstenv
add
mov
jbe
dec
in
xchg
test
xor
out
enter
das
test
jmp
rolb
lea
roll
mov
push
push
adc
mov
sub
jo
pop
cmp
lods
dec
loop
add
jmp
inc
aad
enter
push
jmp
mov
shll
xchg
xor
adc
dec
stos
clc
push
leave
inc
ljmp
imul
adc
xchg
shlb
dec
popa
iret
inc
rcl
lds
dec
inc
add
aad
enter
sub
adc
mov
lock
push
pusha
cmp
test
out
mov
enter
pop
popa
dec
pop
mov
movsb
sub
xchg
sbb
pop
push
insl
test
out
mov
out
adc
add
scas
fdivrs
dec
lret
sbb
jmp
pop
mov
pusha
mov
jno
cmp
ljmp
inc
test
pop
adc
mov
les
add
push
adc
dec
mov
rol
cwtl
xor
imul
push
fdivrl
jbe
mov
xchg
es
out
cli
scas
mov
arpl
mov
dec
mov
orl
push
stos
dec
inc
pop
mov
test
loop
loope
xchg
sub
inc
pushf
sub
add
rolb
out
jb
xlat
push
out
call
ss
jmp
fistpll
loope
jae
xor
sub
pop
imul
stos
loop
xchg
std
int3
dec
clc
sub
jbe
std
mov
sbb
jb
jae
pop
out
loopne
mov
insb
test
or
js
or
xchg
stos
jne
jmp
sub
mov
sbb
pop
or
or
ret
jne
aas
add
lods
rol
inc
lock
jb
jae
mov
inc
ljmp
mov
sub
std
movsl
call
loope
add
fdiv
icebp
shll
shrl
je
xor
xor
in
loope
jnp
stc
test
add
decl
dec
jbe
adc
clc
dec
mov
call
cmpsb
push
jnp
inc
in
leave
int
mov
mov
dec
pushf
rorb
sub
fsubp
lods
add
or
push
jb
in
push
lahf
int3
sahf
mov
stc
sub
cld
scas
push
add
lods
or
mov
stc
cmp
sbb
sar
ja
out
mov
or
cld
fisttpll
push
repnz
sbb
mov
mov
and
sbb
inc
fcmovne
imul
fs
inc
popf
cmpl
and
mov
imul
inc
data16
push
inc
and
pop
add
mov
cli
les
dec
stc
cmp
cli
add
jge
and
xor
pop
jmp
dec
test
mov
xchg
cmpsl
jno
pusha
outsl
jae
adc
mov
lock
repnz
testb
pusha
clc
ljmp
xchg
push
dec
and
or
into
divb
or
daa
ljmp
test
inc
call
xchg
lahf
jl
jmp
inc
jbe
mov
cmpsb
lock
pop
sbb
movsl
rolb
leave
das
lods
out
and
jl
jno
mov
pop
fwait
lods
stc
test
fwait
push
push
jne
adcl
mov
cmc
jnp
push
in
call
test
push
pop
pop
dec
aam
rclb
repnz
mov
inc
fwait
pop
sti
rcrb
out
mov
bound
inc
or
push
aam
les
jns
mov
test
jb
movsl
mov
insb
or
jne
xchg
subb
mov
test
cmp
lcall
int
dec
ljmp
testl
loope
lcall
and
aam
in
push
fs
dec
mov
ret
push
jae
mov
mov
mov
mov
push
pop
dec
adc
or
fldcw
leave
jnp
push
int3
fldt
je
push
fmull
mov
dec
cs
adc
ljmp
subl
mov
sub
xchg
cs
cmpsl
inc
in
fisttpll
lock
lret
cmc
cmp
imul
call
push
mov
ja
movsb
push
jp
sbb
or
mov
mov
sahf
push
xchg
dec
out
dec
lds
aaa
pop
pop
inc
mov
or
ds
jle
lock
inc
add
mov
es
cmp
adcl
xor
test
loop
int3
repnz
hlt
gs
into
fs
loope
fwait
push
dec
cmp
cwtl
cmp
sub
sub
lock
push
xchg
xor
xchg
lcall
icebp
inc
xchg
cmp
sub
jo
mov
addr16
mov
mov
scas
and
push
push
das
pop
mov
les
nop
out
and
inc
repz
sbb
add
sbbb
push
bswap
inc
popf
js
jno
or
push
cmp
cmc
mov
pop
sub
dec
mov
je
lcall
xchg
cli
mov
sbb
out
pop
loope
orb
inc
dec
cmp
lods
sbb
pop
insb
push
and
test
mov
xchg
das
inc
push
mov
dec
jecxz
movsl
leave
lret
pop
jne
mov
add
arpl
cmp
mov
pop
out
sbb
aas
loop
pop
dec
repnz
addr16
adc
mov
std
test
mov
scas
pop
xor
push
ss
nop
inc
imul
sbb
icebp
ljmp
xchg
mov
add
and
inc
insl
sub
add
pop
scas
sti
mov
inc
cmp
ret
jge
cmp
jmp
in
lods
call
push
jge
xchg
ficoms
push
or
lahf
mov
cld
or
in
add
sti
inc
jp
cmp
and
ja
push
xor
cld
lret
aam
test
fistpll
sub
rcrl
add
rcll
repz
adc
int
mov
pusha
dec
or
scas
shll
cwtl
les
andl
daa
sbb
subb
cmpsb
add
xchg
sbb
bound
fnstsw
or
dec
xlat
negl
and
mov
in
jno
sbb
loop
xchg
pushf
pop
dec
dec
jb
imul
ljmp
mov
int
add
cmp
or
test
cltd
insl
in
jno
stos
out
popa
loop
arpl
push
xor
icebp
mov
lock
mov
jae
or
inc
inc
incb
jge
and
add
hlt
mov
inc
clc
sub
arpl
mov
and
iret
daa
jnp
sbb
in
outsb
push
arpl
movsb
lock
fwait
movsb
pop
push
sbb
aaa
fwait
popa
int3
pop
fisttps
dec
inc
outsl
lret
test
mov
add
xor
push
push
cmp
mov
mov
lds
fadd
mov
lcall
lret
push
ficoms
and
sbb
sbb
pop
mov
insl
aas
popa
and
test
fsubr
pusha
xchg
xchg
aad
ret
xchg
cmp
lea
cmpsl
inc
lods
fiadds
rcll
sub
in
or
fdivrl
sarb
insl
in
sbb
roll
out
sub
sub
mov
xchg
xor
dec
pop
std
ljmp
sub
pop
fistpll
sbbb
loopne
negl
jmp
fdivrs
incl
call
arpl
jmp
lock
movsb
clc
push
jne
sub
mov
clc
jecxz
mov
add
into
lret
mov
daa
cs
push
xor
lcall
jbe
ret
xchg
inc
dec
lcall
inc
add
push
mov
inc
das
push
and
mov
scas
jae
xor
imul
push
jp
mov
inc
aam
fidivrl
pop
fwait
stc
ret
loope
lods
bound
xchg
pop
xchg
out
dec
jns
loop
adc
jnp
adcb
and
and
sub
add
pop
add
pop
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
