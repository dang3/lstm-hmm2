push
inc
add
dec
add
add
inc
ja
outsb
and
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
movsb
adc
add
add
add
nop
add
add
inc
add
adc
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
adc
add
add
cs
jo
arpl
add
lock
add
add
lock
add
add
add
add
out
dec
add
testb
add
loopne
or
add
cmovo
add
add
add
add
add
add
cmc
dec
add
cmc
dec
add
add
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
pop
pop
pushl
mov
push
pop
inc
lods
test
je
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
ret
add
dec
add
cmc
dec
add
lods
push
lods
push
mov
push
mov
pop
rep
or
mov
stos
inc
stos
inc
mov
rep
shl
mov
rep
mov
jmp
inc
gs
jb
arpl
fs
jae
add
adc
add
adc
add
add
adc
add
.byte
sub
stos
daa
fstps
and
loopne
leave
push
xor
insb
std
ljmp
or
sarl
out
je
sbb
sbb
lock
pop
xchg
sarl
xchg
insl
adc
jge,pt
iret
adcb
inc
idivb
popf
aam
mov
mov
sbb
cmp
push
out
pop
out
outsl
in
pop
xchg
xlat
sub
andb
mov
jno
fists
push
leave
xor
iret
arpl
inc
in
pop
mov
enter
adc
pop
js
adc
in
and
xor
dec
jne
lods
fs
pop
jg
sbb
hlt
mov
out
add
adc
sahf
adc
xchg
outsl
je
xchg
cli
outsb
adc
mov
jl
lods
sbb
aas
cmpsl
mov
jle
adc
sahf
fmulp
inc
js
mov
fistpl
mov
dec
or
loope
or
xchg
out
sbb
mov
in
xchg
aaa
sti
stos
movsl
ja
jmp
fsubs
out
sar
mov
out
mov
sbb
xchg
out
fstl
mov
bound
out
movsb
xchg
iret
lret
push
pop
movsb
pop
xchg
push
movsb
movl
das
adc
lea
xchg
add
sarl
and
cld
pop
pop
test
add
fdivr
out
rorl
mov
mulb
jge
lea
mov
rolb
inc
xchg
shr
sub
or
shrb
sub
push
inc
add
out
mov
ret
shrl
or
pop
ds
hlt
jne
test
cltd
test
or
jecxz
inc
dec
fs
bound
dec
sarl
insl
mov
sub
push
cmp
sbb
imul
and
adc
fs
in
sbb
pop
out
rcr
jl
into
lret
mov
jl
rcrl
or
jmp
push
arpl
mov
cmp
pop
negl
repnz
out
fisubrs
mov
jle
inc
mov
test
push
xlat
out
fsubrs
sbb
stos
cmp
ljmp
cmpsl
dec
fdivrl
and
add
inc
fsubrl
adc
rclb
fildl
or
xorl
lods
adc
lea
or
xchg
icebp
pop
sahf
stos
stos
add
ret
push
xchg
out
jmp
jno
sbb
cmp
aad
pop
loopne
sbbb
mov
or
je
dec
push
jnp
xchg
or
sub
mov
adc
incb
sti
mov
mov
cmpsb
adc
repnz
loop
test
lcall
inc
xchg
int3
sbb
sbb
int3
ja
das
or
mov
push
pop
mov
ret
sti
add
add
mov
mov
leave
lcall
rcl
cltd
shr
dec
lea
xchg
jns
into
jl
repnz
ret
icebp
in
push
mov
inc
mov
sub
cltd
mov
out
mov
and
xor
pop
adc
lds
sbb
or
jp
and
out
lret
and
cmpsb
and
xchg
xchg
add
push
fwait
mov
aaa
cld
add
bound
in
rorl
jnp
xor
psraw
filds
sbb
or
mov
xlat
cmp
shll
or
xchg
mov
push
bound
mov
subl
pop
add
xchg
jl
divl
dec
stos
jb
xchg
sbbb
aas
lret
lea
or
jl
test
xchg
push
cmp
sub
pop
shlb
stc
call
sbb
cltd
xlat
cli
pushf
sub
xchg
push
inc
and
lret
jnp
push
sbb
cmp
mov
call
or
xor
inc
mov
test
decb
rcrb
sbb
pop
push
jge
push
mov
jge
push
and
ljmp
cmp
xor
cmp
mov
pop
andl
rcrl
cmp
sbb
mov
inc
mov
mov
mov
sysexit
divl
pop
out
aaa
push
cmp
add
fdivp
ret
mov
cmp
hlt
push
imul
fdivrl
in
pop
sti
outsb
in
roll
push
xor
cmp
xchg
xor
dec
push
popa
or
lret
fldt
stos
repnz
inc
popf
xchg
xor
mov
or
fsubl
lock
xchg
cmp
pusha
jp
pop
push
stos
pop
arpl
mov
mov
je
fwait
mov
dec
mov
test
aaa
mov
cwtl
sub
mov
xchg
mov
cmp
aam
mov
jg
xchg
je
and
lcall
cmp
xor
add
or
inc
jo
sahf
pop
add
or
add
loope
lcall
and
push
fstl
insb
mov
dec
sbb
adc
xor
pushl
or
sub
xor
cmp
inc
scas
dec
scas
push
bound
xchg
xor
adc
pop
lahf
fs
add
fsts
jb
cmp
in
mov
popf
ret
ret
mov
push
jae
sub
rol
xchg
lcall
sahf
inc
cs
adc
sbb
lea
and
xchg
add
cmc
add
das
fs
mov
lods
sbb
das
rcll
mov
test
adc
aad
and
cmp
loope
xchg
mov
iret
pushf
xchg
jge
sub
mov
gs
jbe
fwait
sbb
add
and
ret
cmpsl
mov
xchg
mov
bound
arpl
or
push
cld
sub
fsubl
xchg
and
xchg
jo
mov
aad
dec
inc
sti
negb
mov
mov
test
jmp
cmp
jmp
ljmp
push
and
mov
pop
cld
fcoml
mov
add
sub
mov
dec
aad
mov
fnstenv
outsl
out
push
xor
mov
mov
push
mov
stos
data16
add
daa
fistps
cmc
insb
sti
cmp
mov
mov
mov
divb
in
je
cmp
xlat
cmpsl
lock
or
cmp
popf
jbe
pop
lret
enter
xchg
mov
pop
cmp
lods
jle
mov
push
add
imul
adc
cmpsb
cmp
dec
jnp
adc
add
add
add
xchg
pop
push
int3
xchg
add
pop
imul
lcall
and
jo
and
in
jp
fs
dec
cmp
push
pop
mov
aas
mov
dec
dec
fildl
std
ja
push
jns
sub
dec
mov
pop
ds
movsb
dec
stos
iret
push
stos
imulb
cltd
sbb
inc
push
outsb
or
out
pusha
and
or
jg
test
mov
outsl
ret
repnz
movsl
lods
stos
pop
xor
mul
negl
sub
pop
cmp
inc
add
movsl
push
std
push
in
mov
pop
dec
lods
and
loop
adc
es
sbb
cmp
pop
push
popa
cmp
inc
jl
dec
loope
xor
mov
popf
lret
inc
mov
inc
arpl
std
lods
fbstp
les
or
xchg
and
aas
push
out
loop
scas
inc
bound
push
daa
outsl
repz
add
lods
sbb
inc
sub
jnp
jmp
push
out
out
aaa
adc
fisubs
inc
pop
test
and
repz
aam
daa
xchg
mov
pop
out
jle
sub
ror
ret
gs
jmp
xchg
ret
ljmp
lret
push
push
mov
loope
stos
fnclex
add
dec
int3
fldt
jge
aam
dec
test
sbb
pop
pop
jecxz
sbb
pop
je
decl
movsl
mov
jne
cmp
push
dec
daa
lock
cmp
push
adc
adc
adc
pop
or
out
add
imulb
xor
cwtl
subl
lahf
int
aad
imul
lods
pushf
decl
nop
addr16
add
push
out
and
add
loope
inc
and
clc
fildl
out
out
sub
mov
out
add
lea
mov
adc
popa
in
sub
fdivr
cmp
bound
add
dec
pop
decb
jmp
adc
std
rolb
jno
mov
outsb
push
loopne
mov
test
insl
addb
aam
out
mov
in
sub
push
sub
mov
or
and
dec
sbb
push
inc
jb
addr16
xchg
mov
push
test
sahf
pushf
subb
and
scas
jmp
mov
sbb
xchg
lret
xor
sar
mov
mov
mov
fwait
cmpsb
shll
jmp
pushf
js
and
pop
lret
and
sbb
mov
add
xor
imul
dec
pushf
cmc
add
mov
js
mov
jmp
out
lret
jl
mov
mov
popf
fisubrl
sahf
pop
push
dec
push
inc
popa
jne
cltd
jb
jg
mov
lea
or
movsl
inc
in
pop
or
jge
lds
aam
shlb
xchg
aaa
jne
jb
movsb
jbe
add
jb
mov
push
addl
out
dec
mov
test
pusha
jmp
adcb
xor
gs
push
xchg
lret
mov
es
repz
push
int3
lds
push
mov
ja
faddp
xchg
cmp
out
lods
pushf
aad
test
sbb
fistpll
or
aad
cld
cmp
insl
jb
inc
pop
daa
mov
loopne
and
pminsw
shlb
xor
inc
rolb
sahf
push
cmpsb
push
xor
fldt
rcr
push
jmp
movsl
xor
sti
inc
sub
mov
jge
xchg
je
cltd
jns
mov
dec
cwtl
in
fnstenv
push
inc
cmp
out
mov
outsb
dec
int
rcr
fldenv
sbb
add
sbb
adc
push
sub
xchg
inc
jnp
mov
out
cmp
cmpsl
sbb
jg
sub
adc
call
icebp
dec
dec
sub
dec
dec
mov
mov
mull
xchg
insl
shl
aaa
int3
pop
hlt
add
sbb
mov
out
adc
inc
dec
xchg
lahf
lods
cmpsb
aaa
inc
in
jmp
ss
mov
das
inc
add
jnp
xchg
loop
scas
leave
ret
rolb
push
test
and
shl
sbbl
push
sbb
aad
popf
daa
mov
jp
mov
jnp
mov
mov
or
push
adc
test
push
ljmp
inc
gs
push
out
in
mov
dec
mov
cmc
xchg
jle
ficomps
cmp
pusha
pop
mov
mov
jg
scas
roll
or
mov
pop
jle
xor
dec
push
jnp
imulb
rolb
int
jmp
and
cmp
xor
push
xchg
pop
int
and
or
pop
data16
cld
clc
push
test
and
mov
xor
cmp
in
and
shrl
sub
xchg
fsubl
push
ss
or
push
mov
mov
int
cmc
xchg
and
adc
add
sti
add
xor
jg
stc
in
into
adc
push
inc
or
and
jae
daa
cmp
rorl
sarb
out
clc
mov
enter
xchg
lret
into
inc
loope
fiadds
pop
jbe
mov
inc
sti
push
xchg
sub
movsl
in
add
in
call
lret
pushl
data16
data16
out
push
push
xor
lret
cmc
imul
jle
orl
push
icebp
dec
into
and
data16
lret
shl
shlb
inc
psubq
repnz
lahf
mov
ss
pop
push
jb
loope
dec
mov
dec
cmp
std
orb
test
mov
or
sbb
lds
inc
mov
adc
outsl
pop
fwait
sbb
out
int3
std
lcall
ljmp
ficoml
adcl
or
cwtl
popf
jns
add
popf
fldenv
or
add
shrl
add
gs
xor
scas
mov
or
cmp
mov
sahf
mov
pop
or
test
std
mov
inc
pop
sbbb
pusha
sbb
shrl
call
mov
insl
and
cs
jb
flds
leave
mov
stc
test
fistps
addr16
out
push
fstpt
jne
clc
shll
jecxz
cli
dec
movsb
xchg
add
js
ficompl
test
xor
aas
mov
pop
mov
mov
mov
xor
or
and
adc
mov
mov
out
inc
xor
lret
shl
jmp
aam
dec
mov
or
pop
jp
in
and
ds
jge
into
mov
fdivp
cmp
mov
outsb
int
ja
and
push
in
inc
push
insl
je
jo
jno
adc
pop
lret
jno
clc
or
pop
pop
fimull
scas
mov
fdiv
jb
fidivrl
mov
adc
in
ljmp
mov
rorb
rcrb
jno
mov
or
pop
outsb
jo
xchg
pushf
sbb
or
iret
lret
jmp
adc
cmp
xchg
or
mov
xchg
es
push
and
push
xor
xor
xchg
mov
ss
sbb
and
out
pop
sbb
fimull
or
lods
jle
jb
fnsave
push
push
popl
rcll
outsl
and
mov
rclb
data16
jnp
pushf
loop
xchg
sti
and
movsb
dec
lea
sbb
sbb
js
xor
out
xchg
stos
xchg
or
add
loope
rorb
shlb
repz
repz
imulb
loop
cmp
sbb
adc
sbb
mov
fxch
and
ret
xchg
dec
push
lods
rolb
or
push
roll
ja
notb
imul
test
cmpsl
pop
loopne
and
cmp
sub
jmp
popa
inc
mov
or
adc
jnp
or
sbbb
aam
lods
aaa
xchg
pop
test
push
arpl
das
inc
mov
jg
lret
mov
addr16
shl
sub
push
jne
pop
or
stos
sub
mov
dec
imulb
lods
jg
dec
sarl
sbb
fwait
adc
out
sub
sub
in
xchg
insb
ret
insl
sub
or
repz
lods
dec
jmp
adc
dec
pop
push
and
and
inc
sbb
fildl
cmp
xor
ljmp
cmp
loopne
push
dec
subl
adc
dec
add
enter
cwtl
push
xor
adc
xor
push
cmp
or
js
ret
mov
mov
das
dec
xlat
ja
fiadds
fadd
xor
scas
lds
jnp
xchg
xorb
jecxz
adc
inc
jl
push
mov
std
outsb
movb
push
or
xchg
mov
push
in
adc
stos
or
fnstcw
jge
xchg
cmp
lret
testb
aam
jg
out
sub
or
inc
mov
push
cmpb
cmp
sbb
cld
das
das
jbe
inc
aas
and
pop
rcl
jb
cwtl
jnp
jmp
or
clc
dec
push
add
xchg
lods
adc
movsb
dec
sub
das
call
fadd
lods
push
call
sub
xchg
xor
push
add
scas
jne
mov
stos
stc
icebp
sub
daa
cltd
test
ret
fadds
mov
mov
das
rolb
xor
cltd
mov
mov
inc
mov
xor
vphaddwd
lcall
push
push
fwait
mov
mov
adc
inc
push
sub
addr16
mov
push
out
inc
push
mov
aad
push
or
xchg
add
cmp
push
in
xor
dec
test
jl
or
lret
imull
inc
adc
xor
ja
fdiv
jge
fistps
xor
mov
and
mov
mov
scas
cli
fcmovu
je
add
aad
add
js
sub
push
xchg
test
bound
imul
xlat
ljmp
rcll
in
fdivrl
lret
add
add
fdivrp
sti
adc
push
sub
and
pop
sub
les
iret
inc
and
dec
or
xchg
jmp
dec
adc
lock
mov
add
jg
mov
hlt
cmp
fs
in
shll
xchg
dec
cmp
jae
adc
xchg
mov
push
sub
adc
mov
mov
in
xlat
aas
push
xchg
sub
les
out
xor
aas
cwtl
insb
sti
jnp
dec
dec
jle
cmp
in
lret
xchg
shr
lock
insb
adc
imul
aaa
fnstcw
adc
js
call
mov
scas
jp
testl
push
or
fcomp
sub
pop
sub
jbe
dec
out
dec
push
xchg
sub
mov
cmpsb
and
mov
and
mov
arpl
addr16
stos
jl
cmp
fstps
sbb
adc
sarb
adc
push
data16
jl
xor
js
jns
movsl
aad
mov
push
jge
clc
cmc
sbb
stc
imul
xchg
cmp
cli
ret
ret
and
and
xor
xor
xchg
sahf
fnstcw
les
loopne
scas
clc
fimuls
movd
int
jnp
sbb
popa
cmp
or
imul
inc
ljmp
cmpb
push
mov
push
lret
xor
out
ss
arpl
pop
jo
inc
data16
pop
and
stos
adc
fsubl
pusha
loop
out
xor
jg
test
int3
mov
sub
std
or
ret
xorl
push
push
mov
int3
sbb
pop
or
pop
pusha
jp
cmp
shrb
inc
inc
push
mov
pusha
pop
sub
cmp
shrl
aaa
imul
jmp
xchg
cmp
add
push
imul
jnp
cmc
adc
pop
loopne
stos
cld
inc
and
call
daa
dec
imul
adc
lahf
xchg
movsl
dec
aaa
and
xbegin
push
xchg
fsubl
pop
insl
jbe
xor
xor
mov
jnp
daa
jge
stos
mov
sub
loopne
mull
cmp
notb
pop
cmpsb
xchg
add
pop
sbb
pushf
adc
inc
fadds
mov
jmp
into
mov
xchg
es
jge
vmovhps
xchg
ret
lret
or
add
mov
add
dec
ret
loopne
or
into
mov
fbld
mov
cmp
add
cld
cmpsb
push
inc
dec
jno
stc
dec
cld
loopne
mov
xorl
mov
sti
cmp
and
push
out
je
and
cmp
mov
out
mov
and
movsl
xchg
sub
cmpsb
mov
daa
fyl2x
subl
pop
adc
add
sbb
push
mov
bound
aas
dec
cmp
mov
bound
and
jbe
enter
push
test
pushf
mov
jb
or
cmp
fdivl
test
sbb
mov
dec
popf
jne
push
cltd
aaa
notb
shrl
xchg
aaa
hlt
ja
pop
adc
leave
fwait
sub
or
inc
out
mov
das
das
or
clc
fs
mov
rcrl
dec
das
jns
pushf
mov
push
dec
das
fisubrl
movsl
xchg
xchg
sbb
cmp
mov
mov
or
or
xor
adc
out
inc
jb
nop
jp
dec
dec
stos
xchg
mov
push
aad
lret
and
stos
mov
pushf
push
sub
sub
fldt
dec
outsb
lock
ljmp
stc
or
inc
je
out
scas
movsl
cmp
and
std
cmp
jmp
std
dec
cltd
or
xor
push
roll
add
inc
cmpsl
stos
cltd
lock
push
push
and
shrd
test
mov
add
stc
mov
mov
cmp
push
stc
push
adc
imul
xlat
jno
sahf
fidivrs
add
push
adc
adc
scas
std
mov
push
fimull
and
xlat
bound
xchg
jge
push
push
imul
mov
ret
sub
xchg
movsl
and
xchg
mov
test
outsb
movsl
int
or
sbb
adc
cmp
sbb
dec
pop
hlt
mov
sti
aaa
dec
sub
mov
shlb
or
out
mov
lods
jle
sub
mov
push
add
movsl
pop
pop
in
inc
sahf
lcall
in
repz
xor
or
sbb
mov
dec
lea
jmp
decl
je,pt
mov
icebp
popa
dec
adc
mov
push
test
push
adc
inc
adc
dec
lcall
xchg
andb
addr16
arpl
fucomp
movsl
pushf
insl
mov
mov
ljmp
enter
sub
mov
cmp
data16
fisubl
pop
or
xor
sbb
fdivrp
jne
mov
in
adc
aas
and
pop
cmp
scas
adc
and
cmpl
xchg
push
fcmovnbe
xchg
jb
jge
insb
stc
mov
loope
ja
insb
inc
test
cs
aam
ja
js
cld
mov
stos
aad
rolb
fsubl
cld
push
sahf
stos
push
test
insl
push
xor
pop
push
ret
ljmp
into
xor
or
and
neg
push
int3
mov
test
imul
cmp
cmp
xchg
or
stc
xchg
lahf
add
dec
jp
pop
and
divl
loop
cmp
loop
jmp
jo
mov
js
push
lods
push
sahf
mov
sbb
fcomi
pop
lahf
pop
xchg
bound
dec
adc
and
adc
dec
xor
push
fildll
jns
sarb
push
mov
mov
jnp
jbe
pop
push
rolb
movsb
push
nop
and
les
push
dec
pop
sub
lahf
fdivrs
ficompl
jnp
mov
pusha
jecxz
and
and
sub
ret
ljmp
cmp
loopne
mov
inc
out
xchg
je
inc
int
rcrb
into
ret
mov
in
jbe
dec
das
inc
loopne
loopne
frstor
inc
sub
add
dec
outsl
jae
xchg
jo
and
and
stc
mov
imul
cltd
add
pop
cmp
or
xchg
pop
cmp
mov
xor
dec
mov
insb
or
movsb
test
sub
fcomip
idivb
dec
push
out
adc
rcll
js
pop
jp
fs
push
fstps
pop
shll
xor
push
int3
lcall
dec
adc
pop
adc
dec
xchg
inc
cmp
fldenv
mov
pop
adc
inc
mov
or
inc
icebp
loopne
cmp
sti
fimull
pushw
cmp
inc
lods
push
jg
subl
out
inc
adc
outsl
xchg
mov
test
dec
mov
leave
pop
aam
lea
dec
fdivl
loop
mov
enter
icebp
jmp
mov
cmpsl
nop
daa
enter
in
push
lret
mov
movsl
cmp
cmp
xor
sub
sbb
imul
add
jae
dec
push
cli
lea
sub
lret
push
mov
xchg
movsl
add
js
aad
std
dec
and
xor
bswap
mov
mov
xor
jge
outsb
in
add
ljmp
mov
add
movsl
jg
jp
into
or
or
arpl
mov
sahf
mulps
cmc
stos
icebp
cmp
mov
xor
sbb
adc
jns
mov
sub
jne
std
daa
push
pop
aaa
push
icebp
dec
rcll
xor
dec
dec
jp
insb
divl
stc
mov
fnsave
and
cmp
sub
xchg
fs
inc
xchg
push
adc
sbb
mov
xchg
outsb
cmp
das
adc
xchg
repz
into
fistpll
je
test
or
loop
adc
test
popa
jecxz
repnz
addb
cld
sbb
or
push
jmp
les
mov
push
mov
jns
cmp
inc
ds
fidivrl
add
pop
ffreep
push
sar
mov
or
nop
mov
sbb
dec
fwait
add
adc
aad
idivl
pushf
das
or
or
xchg
lea
cmp
mov
add
or
test
imul
aad
adc
push
rcrb
lret
sbb
les
pop
data16
loope
and
inc
sbb
mov
xchg
cmp
out
in
in
cmpsl
fsubr
jmp
fbstp
xor
stos
mov
adc
mov
adc
mov
and
fs
jb
mov
out
shrl
int3
jge
repz
repnz
dec
js
pop
mov
aam
notl
ds
ret
addl
test
cmp
negb
cmp
js
xchg
sub
bound
dec
dec
movsb
jnp
sub
adc
inc
mov
adc
sub
jl
aam
aad
out
pop
sub
dec
jnp
call
pop
idiv
pop
sbb
decl
xchg
jae
and
xor
ss
loop
cs
mov
popf
xor
or
xor
jp
mov
pushl
mov
jg
les
and
xchg
clc
mov
mov
inc
xchg
mov
mov
jle
or
sub
leave
iret
rol
clc
jbe
loope
std
cmp
or
in
aas
and
fdivl
std
aas
fldcw
out
movsl
inc
pop
icebp
iret
sbb
arpl
cmp
sbb
arpl
mov
inc
or
mov
mov
xchg
insl
inc
iret
inc
adc
dec
fdivl
movsb
outsl
jecxz
push
jecxz
lret
test
mov
lcall
or
repz
fnstsw
adc
jb
loope
and
jmp
add
int3
mov
xchg
cmp
rorl
mov
push
xor
sub
shlb
dec
mov
popa
and
or
ljmp
das
dec
dec
out
scas
mov
xchg
jl
mov
jp
rcrl
sbb
mov
push
mov
inc
mov
pop
loope
xlat
pop
nop
mov
cwtl
dec
push
sbb
sbb
dec
jp
nop
pop
adc
xor
bound
xchg
test
push
idivb
in
lds
neg
add
es
pop
push
xchg
clc
sub
xchg
mov
and
pop
movsb
loop
in
repnz
sbb
mov
jnp
inc
push
fcmovne
mov
cmp
jg
sub
lcall
push
or
shlb
push
ljmp
sahf
xchg
and
jb
pop
ljmp
xlat
xor
loope
xorps
fistps
test
icebp
push
adc
mov
sbb
push
mov
sahf
test
in
mov
add
in
ret
xor
imul
adc
mov
sbb
fistpl
inc
sub
jecxz
pop
or
adc
fstp
add
adc
lea
loopne
push
push
and
ljmp
sbb
jg
imull
mulb
lahf
pop
xchg
and
ja
scas
das
inc
pusha
push
fdivr
lret
into
cltd
divb
mov
mov
inc
adc
push
repz
push
insl
test
mov
int3
subl
pop
push
or
out
push
jg
push
js
js
jnp
mov
scas
push
mov
jg
inc
fstpt
mov
cltd
bound
xchg
mov
mov
movsl
mov
aam
jmp
mov
sbb
add
hlt
sbb
imul
xor
aad
jp
lea
sub
popf
shll
shrl
leave
jnp
test
sbb
jle
sbb
clc
jl
adc
pop
sbb
test
int
test
mov
test
aas
clc
addb
push
call
aas
mov
rcrl
inc
imul
loopne
xor
push
add
in
and
sub
dec
push
cwtl
cwtl
fstpl
repz
jge
pop
fwait
scas
inc
inc
jae
int3
outsl
stos
movsl
out
push
cli
mov
repz
aam
inc
adc
mov
fsub
ds
lock
out
push
dec
mov
dec
sbb
dec
clc
add
pushf
stc
adc
rorl
push
aam
inc
loopne
push
sub
orl
push
mov
inc
stos
fsubrp
xchg
add
or
mov
mov
adc
pop
popa
sbb
xchg
mov
xlat
fs
out
mov
pop
lret
movsl
inc
data16
mov
jmp
loopne
test
inc
addl
inc
mov
pop
dec
fstp
push
pop
inc
les
add
rcrl
or
outsl
push
in
stos
imul
push
pop
push
call
mov
rolb
jle
inc
adc
push
rcrb
cmp
pop
jae
mov
mov
gs
js
in
dec
sbb
mov
pop
nop
mov
xchg
adc
aad
xor
test
out
mov
fildll
aam
sub
xor
ja
mov
dec
stc
pop
add
lret
xchg
cmp
mov
push
adc
and
or
inc
stc
cmpsl
pusha
es
mov
mov
mov
mov
mov
sbb
ljmp
add
xor
lea
shrb
jmp
sarl
in
daa
xor
lcall
adc
sub
add
das
and
jno
xor
hlt
mov
pushf
mov
mov
movl
ljmp
lds
and
pop
clc
pop
mov
push
mov
pop
lret
inc
dec
sub
es
pop
mov
insb
mov
popa
jne
pop
stos
mov
insl
cmp
mov
add
outsb
jle,pt
lcall
enter
lods
rcll
mov
in
enter
mov
sub
sub
mov
sub
mov
es
jbe,pn
daa
lcall
xor
aaa
shrb
push
xchg
fistl
insl
in
aas
push
mov
xor
lret
dec
cwtl
add
jno
fstpl
jb
fildl
push
jb
movsl
inc
lahf
scas
or
dec
loope
and
and
shr
mov
pop
mov
scas
loopne
mov
fdivr
sub
pop
aam
cmp
sahf
popa
sub
test
repz
insb
dec
addr16
jge
out
mov
in
mov
lret
std
popa
xor
fcoml
adc
cmpsb
push
out
jo
sbb
punpckldq
andl
push
movsl
stos
mul
lds
bound
push
or
inc
sub
ja
sti
xchg
imul
lcall
xchg
adc
xchg
stos
inc
cmpsb
cmp
fstps
fsubr
sbb
mov
xchg
adc
dec
insb
lea
and
daa
sti
cmp
add
scas
shll
nop
mov
mov
pop
jnp
xlat
mov
adc
inc
rcrl
int
int
jmp
xor
push
bound
push
test
ds
jno
jecxz
aaa
fisubl
cmpsb
cmp
sbb
pop
inc
or
jmp
cmpl
and
inc
adc
aaa
fcmovu
pop
insl
test
jo
or
jle
and
adc
mov
leave
jecxz
shll
js
add
aam
nop
mov
outsb
pop
ljmp
lcall
mov
jb
int3
insb
pop
rorb
sbb
pop
jl
cld
jb
rol
mov
loopne
mov
in
shl
fcoms
insb
inc
sub
pop
lock
loope
fucomp
jb
xor
arpl
mov
jo
push
pop
inc
cmpsl
lahf
sub
fwait
jl
pop
pop
jno
int3
imul
and
mov
outsb
cmc
push
sbb
push
sarl
and
pop
cli
repz
sub
push
adc
sbb
pop
xor
pushf
xchg
insl
mov
movsb
movsl
jo
pop
dec
and
lea
stc
mov
push
rorb
cwtl
loope
push
and
mov
pop
jmp
outsb
test
cmp
loope
inc
cltd
xchg
aaa
xlat
es
ret
mov
adc
loopne
stos
lds
pop
jnp
daa
adc
add
hlt
adc
push
addr16
jmp
out
adc
mov
je
mov
adc
xor
push
cld
add
pusha
mov
add
mov
int
in
lret
imul
xor
cltd
js
mov
mov
sbb
mov
adc
adc
sub
mov
insb
cli
mov
jp
pushf
mov
or
mov
leave
or
fsubrs
inc
mov
xchg
inc
pop
sub
test
jp
and
or
ds
mov
dec
das
mov
push
js
xchg
inc
xor
dec
in
fistpl
clc
cld
scas
mov
in
sti
jae
cs
or
dec
es
lods
push
mov
inc
cs
js
out
and
push
or
cmpl
and
lcall
sti
pop
cld
sbb
add
add
ret
mov
pop
mov
pop
mov
shlb
testb
inc
mov
jge
lcall
pop
pop
jae
push
cmp
in
xor
jl
jns
cmp
scas
push
xor
pop
clc
fimuls
sub
popa
sbb
inc
inc
cmp
mov
les
and
lret
push
sbb
cmp
mov
aam
and
adc
mov
rcl
xor
push
mov
jae
fbstp
sbb
lahf
sbb
xor
lahf
add
notl
adc
repz
and
insl
out
repz
inc
lcall
xor
cwtl
fwait
mov
lret
loope
jns
pop
adc
inc
in
lds
sti
clc
lret
les
movsb
xlat
aam
inc
es
jecxz
mov
mov
inc
xchg
insl
arpl
adc
sarl
icebp
loopne
out
or
sub
dec
mov
out
push
int
loop
sbb
insl
or
push
loop
movsb
fbstp
jbe
das
sarl
mov
and
xchg
mov
out
push
or
fs
jmp
scas
xchg
addr16
movsb
push
test
in
fidivs
enter
jg
mov
or
adcb
int3
out
fnstsw
fisttpl
xchg
cmp
and
xor
in
aas
push
out
xchg
ret
aas
and
pop
adc
and
rcrb
adc
ror
ljmp
xchg
bound
mov
sahf
mov
sbb
jne
sti
pusha
mov
inc
mov
push
sahf
fidivrs
je
es
es
dec
imul
mov
int3
lods
nop
ljmp
push
int
ficompl
lret
sahf
xchg
je
mov
or
popa
mov
mov
adc
out
popf
mov
inc
dec
cmp
bound
ss
xor
add
pop
mov
and
sar
sub
add
lods
fisttpll
imul
inc
jmp
mov
pop
push
lods
xchg
fdivl
addr16
stc
sbb
arpl
lret
in
sbb
aaa
data16
stc
shl
mov
xchg
mov
push
idivb
adc
aad
ficomps
jnp
inc
pop
roll
lea
push
jnp
lret
mov
stos
iret
xchg
call
imul
mov
inc
push
pop
leave
add
push
stos
pushf
mov
rcl
cld
pop
sbb
shrb
mov
call
xchg
adc
add
add
lock
jmp
add
adc
rcll
fsubrp
pop
jge
leave
add
shll
popa
adc
xor
push
sub
push
testl
pusha
imul
orl
pusha
repnz
out
insb
lea
decl
cli
xor
pop
sub
jmp
or
mov
pushf
push
inc
loop
cmp
roll
dec
clc
out
sbbl
cmc
leave
pop
inc
int
and
inc
jb
sbb
mov
push
jno
push
test
xor
fnstcw
call
call
jmp
sbb
push
inc
pop
push
cmpb
in
into
sbb
jo
push
aas
mov
push
xchg
or
xchg
add
mov
dec
mov
mov
mov
loop
repz
mov
or
fisttpll
rcll
jns
sbb
cmp
aad
sub
dec
clc
mov
mov
mov
adc
add
xchg
or
pop
mov
xor
inc
mov
sub
lds
xlat
incb
lret
cmp
and
xchg
jno
xchg
or
adc
ss
divl
out
setge
sti
lods
fisubs
pop
sahf
inc
lcall
inc
subb
aaa
jbe
adc
mov
pop
xchg
push
test
stc
inc
sbb
test
sub
setle
movsb
sub
aaa
jnp
jno
cmpl
jae
bound
clc
fdivr
sbb
loop
mov
sti
sub
call
mov
push
add
ret
js
dec
ss
sub
dec
cmc
inc
mov
and
jno
icebp
jae
hlt
pop
ss
inc
movsb
xor
lea
fcom
shll
in
sbb
jge
mov
in
inc
aas
cmp
movsb
test
xchg
stos
mov
aas
out
jle
test
rorl
stos
ret
mov
push
pushf
jb
call
lods
roll
push
push
pop
movd
xchg
xchg
mov
push
cmp
leave
xchg
xchg
or
dec
xchg
xor
into
mov
push
cmc
push
fs
imul
loop
rep
cmpsb
fldenv
stos
mov
jae
add
mov
cli
notb
xchg
fisubrl
sub
push
das
push
or
mov
hlt
sub
shl
fstpt
nop
fs
mov
aad
pushl
or
je
pop
outsb
xchg
jbe
movsb
fldlg2
add
shl
leave
add
push
hlt
clc
push
aaa
push
dec
lock
insl
dec
gs
mov
jae
mov
inc
sti
adc
clc
push
or
in
shlb
mov
cmp
data16
incl
cmp
mov
jo
push
fiaddl
pop
xchg
dec
pop
rcr
enter
mov
or
push
xlat
ret
xchg
pop
jmp
inc
cwtl
icebp
int
roll
ss
outsl
pop
pusha
roll
xor
push
shlb
movsb
pop
les
out
jno
fdivrs
movsl
fwait
jecxz
xchg
add
popa
adc
jns
xchg
mov
xor
int3
into
jno
mov
lahf
push
sbb
test
in
fdivl
sbbl
jae
ljmp
push
xchg
cltd
sbb
jbe
pop
in
ja
dec
in
jge
sahf
loope
or
mov
in
insl
or
into
fisttpl
stos
dec
insb
cmp
movsl
shll
addr16
fildll
iret
add
fisubs
lea
sahf
pop
mov
adc
xor
popa
roll
sbb
mov
pop
add
push
rol
and
es
mov
iret
mov
inc
mov
cmp
lds
das
fwait
jge
xchg
xor
xor
or
in
push
cmp
call
pusha
xchg
rclb
and
cmp
cmp
sbb
int
popa
dec
pop
cli
shlb
shrl
xchg
das
jecxz
fwait
pop
rcr
xchg
dec
jns
ss
sahf
mov
dec
pop
push
cmc
dec
fiaddl
push
sarb
out
dec
mov
cmp
pop
add
push
add
adc
add
add
mov
mov
dec
ffreep
jle
pop
mov
or
test
push
push
popa
nop
mov
addb
aaa
sbb
mov
add
pop
mov
xchg
jle
pop
add
iret
cmc
ja
outsb
xchg
jo
sti
sub
fwait
jb
jne
mov
les
outsl
mov
dec
push
xor
repz
loope
lret
mov
xorb
push
mov
iretw
mov
mov
pop
add
repnz
sub
cltd
cmp
jnp
adc
xor
pop
ja
and
sbb
fisubrs
enter
cmp
outsl
cld
mov
mov
jle
mov
sti
sub
sub
mov
test
pop
pushl
inc
dec
pop
fs
pop
fidivrs
aam
inc
out
lcall
iret
mov
jl
iret
out
sar
fdivs
sub
adc
mov
lret
jmp
popa
insb
cmp
fwait
mull
cmpsb
sbb
dec
pusha
sub
lret
testb
add
adc
cmc
lea
cmc
gs
push
shrl
aaa
orl
xor
inc
mov
lret
inc
jns
loope
and
jno
dec
testb
xchg
icebp
aaa
pop
jge
xchg
mov
jae
cmp
mov
insl
pop
inc
push
stos
push
ljmp
in
imul
das
aaa
inc
push
add
lcall
push
ss
xor
fldl
outsl
jmp
lret
sti
dec
mov
mov
push
pop
inc
jle
fcos
and
mov
cld
pop
mov
out
aad
cs
icebp
in
out
les
mov
push
addb
dec
out
je
adc
pop
loopne
in
repz
mov
cmp
pop
lods
mov
fdivrs
add
shr
add
popf
or
cmovge
or
pop
repnz
test
repnz
lock
mov
sub
push
insl
mul
mov
test
adc
rol
jb
shl
in
negb
js
xchg
mov
mov
mull
add
push
sbb
add
xchg
or
inc
in
add
mov
sub
sbb
lcall
jbe
cmpsl
outsl
aam
push
bound
mov
push
xchg
adc
adc
outsb
and
sbb
aad
test
inc
sub
or
mov
bound
in
in
sub
in
inc
lods
insb
dec
adc
xor
ja
xchg
jns
sbb
ss
es
mov
or
and
jmp
inc
mov
mov
mov
lea
xchg
xchg
popa
decl
pop
adc
push
or
bound
mov
test
add
movsb
adc
xor
mov
add
fmul
rorb
addr16
push
arpl
push
cmp
dec
jne
inc
mov
jno
pop
cmp
push
test
push
or
jno
xchg
cmp
pop
or
push
fisttpl
push
test
xchg
hlt
leave
lock
mov
push
imul
push
sahf
sub
lea
and
movsb
es
push
and
sbb
andl
outsb
ds
add
sub
int
pop
sub
xor
ja
aam
movsl
push
movsl
test
jecxz
jnp
into
jp
je
or
loope
sahf
dec
out
stos
lods
lods
or
inc
jl
jp
jp
and
sarb
mov
sbb
sahf
gs
adc
addr16
or
in
adc
in
inc
aaa
test
jecxz
fcmovne
lret
cli
or
in
insl
dec
xchg
lods
mov
jns
inc
mov
loope
jmp
jns
push
pop
pop
adc
andb
xchg
imul
sarb
cmp
iret
adc
jle
mov
xor
je
add
cmpsb
rcrl
push
mov
mov
xchg
and
sar
ja
int3
dec
icebp
cltd
lea
xor
sbb
es
sbb
mov
mov
aam
sbb
adc
cmp
mov
jp
insb
int
dec
aaa
cmpsl
jne
outsl
int3
into
sbb
test
lahf
clc
decb
enter
int
imul
mov
stc
je
in
ss
in
sahf
add
pop
dec
dec
cmpsl
fs
mov
dec
pop
fnsave
push
test
cmpb
out
and
jo
pop
xor
icebp
les
cmpsl
cltd
jg
add
push
jg
jno
subl
out
pop
mov
jnp
repz
aam
bound
dec
nop
jmp
xor
imul
gs
pop
stos
loope
add
mov
and
les
scas
and
out
mov
icebp
xor
inc
lahf
mov
jne
mov
call
pop
jne
inc
xchg
sub
cmpsb
imul
test
dec
test
jns
scas
add
push
xor
mov
adcb
pop
dec
imul
mov
cld
inc
or
xchg
mov
cmp
aas
cmp
and
mov
lret
mov
mov
movsl
stos
mov
imul
jne
pop
hlt
stos
stos
lahf
push
into
cwtl
xor
andb
icebp
loope
lret
or
xlat
test
sub
push
adc
xor
mov
lds
mov
xor
and
popa
adc
outsl
insl
mov
cmp
pop
shlb
push
in
xchg
inc
push
push
or
out
jbe
cmp
test
adc
lcall
cwtl
inc
movsb
dec
lret
shlb
leave
xor
scas
pop
push
lret
mov
cmp
sub
pop
out
iret
sbb
inc
mov
pop
pop
mov
das
test
jbe
pop
push
push
testb
jge
stos
pop
jae
cld
push
xlat
jno
push
ja
adc
cmc
imul
daa
adc
stos
fbstp
repnz
icebp
das
nop
sub
add
and
or
shrb
inc
jno
jne
mov
imul
fwait
in
mov
mov
pop
mov
push
xchg
jp
pop
sub
mov
nop
sahf
sub
jg
dec
mov
xor
jne
dec
jno
or
dec
hlt
es
sbb
jl
orb
mov
add
repz
mov
mov
sbb
out
mov
push
mov
cmp
and
and
clc
ss
int
lock
mov
fldl
lea
sub
add
imul
mov
incb
stos
push
cmp
jbe
add
sbb
insb
mov
orl
sbb
cmpsb
call
flds
enter
mov
add
pop
xchg
inc
addl
and
and
call
mov
inc
jge
add
lods
out
sbb
mov
iret
dec
sub
int3
jl
out
cmpsl
or
cmpb
cmpsb
pop
and
incb
pop
jle
or
cs
out
fildll
int
xlat
and
test
sti
and
cli
lds
leave
inc
cmpsb
lahf
adc
stos
jecxz
mov
scas
adc
mov
out
xchg
addb
xchg
and
add
pop
stos
icebp
xor
sbb
es
push
add
xor
push
fwait
cmp
iret
outsb
sahf
rcrl
xchg
std
add
xchg
pushl
mov
in
adc
cmp
adc
dec
lods
inc
cmp
in
out
lods
sbb
xor
pop
shl
jns
xchg
cwtl
loope
jae
jnp
push
ss
push
inc
xor
or
sbb
sub
sub
orb
fistpl
jo
add
adc
mov
mov
inc
and
mov
or
movsl
push
imul
and
scas
js
out
es
jecxz
das
mov
sbbb
sub
scas
jnp
and
lcall
fs
mov
enter
ror
sbbl
call
loope
mov
in
sub
inc
xchg
pop
insl
cmpsl
ret
pop
cld
imul
push
stos
cmpsb
push
sbb
cmp
sub
mov
sbb
aad
sbb
arpl
ja
inc
mov
xchg
or
das
mov
out
cmpl
and
xor
mov
test
jae
xlat
add
pop
dec
push
mov
int
adc
and
sub
leave
sub
aad
stc
adc
push
lds
outsb
outsb
lret
insb
iret
dec
jb
imul
mov
sbb
cmp
test
idivl
in
mov
push
scas
test
jp
xchg
ret
out
aam
sbb
imul
insl
inc
repnz
vunpcklps
hlt
std
push
ffree
push
and
into
lcall
and
sbb
pop
or
pop
rorb
or
or
jo
sti
pop
rolb
fwait
push
xchg
je
and
andb
mov
xor
mov
lahf
sbb
mov
sar
shll
movsl
xchg
mov
je
mov
fsub
pop
int3
fsubs
in
mov
and
and
sub
mov
es
adc
xor
sub
mov
jge
xor
pop
nop
insl
test
adc
mov
push
bound
rcr
mov
add
test
in
lods
jbe
cs
jb
pop
dec
lds
into
add
cmp
rolb
add
xchg
loopne
ficoms
sbb
add
inc
js
fldt
and
and
cmp
mov
push
jmp
sarl
sub
mov
je
pop
loope
adc
inc
rep
mov
aad
aam
imul
lods
insl
sti
jmp
cmp
cmp
mov
push
loop
and
aad
mov
xchg
repz
adc
mov
in
mov
lret
in
scas
inc
inc
bound
ret
mov
xor
cmp
lea
sbb
or
lods
pop
insl
repz
test
loop
xchg
dec
adcb
rorl
mov
and
js
fdivrs
mov
jno
notl
sub
xchg
arpl
fs
nop
mov
push
pop
jb
cmp
aas
xlat
lret
dec
push
inc
out
and
cmp
std
jg
dec
test
lds
or
xor
mov
inc
jge
sub
pop
mov
sbb
rcrb
push
ret
test
mov
std
and
in
pop
out
imul
jl
in
xchg
mov
cmp
aaa
adc
sub
cmp
ds
xor
mov
shlb
jg
fcmovu
scas
jnp
jge
jne
push
lods
sahf
incl
jae
adc
push
mov
mov
xor
jno
sbb
mov
jno
lock
cmp
jl
xor
sub
jecxz
jmp
std
push
xchg
jmp
push
mov
imul
sub
aaa
xchg
or
inc
cmp
test
pop
fldcw
cwtl
adc
adc
mov
pushf
nop
pop
cmp
insl
sti
cmp
inc
adc
push
pushf
xchg
pop
test
leave
movsl
push
add
cmp
in
push
out
and
je
mov
mov
cld
inc
lcall
pop
out
ja
fdivrl
adc
fldcw
cmpl
sbb
pop
pop
testb
cmp
jns
xchg
cs
jno
inc
xchg
movsl
scas
int
cmp
das
pop
sub
popa
and
rorb
ficomps
jae
inc
jnp
cmp
mov
pushf
sbb
out
decb
push
clts
and
push
inc
mov
loope
outsb
push
cmpsl
rol
push
sub
cld
stc
mov
jo
ds
mov
sbb
push
pop
push
cmpsb
mov
shrb
cmp
cs
iret
mov
inc
push
stos
test
ds
xlat
ljmp
cmp
inc
ret
or
jnp
sub
in
add
jg
or
mov
ficoml
mov
push
pusha
lods
jmp
cmp
cmp
sbb
insl
inc
imul
adc
push
pop
stos
pop
push
imul
imul
cmpsl
loop
das
pop
dec
cmp
mov
cwtl
scas
int
xchg
sbb
int3
movsb
push
lock
sbb
xchg
adc
sub
push
andl
or
adc
lret
call
pop
xor
shr
repnz
test
push
xchg
imul
sbb
lahf
push
mov
jp
ss
mov
xchg
jle
mov
cmp
xor
push
mov
pop
gs
call
pop
lcall
cmpsl
xchg
ljmp
mov
add
mov
into
out
mov
dec
adc
ret
mov
out
xchg
lods
mov
daa
mov
test
loopne
or
jecxz
sbb
or
jle
popf
lock
xchg
add
xchg
xchg
mov
popf
dec
cmp
aad
xor
adc
inc
jae
pop
and
rcl
jne
sub
stos
cmp
lcall
push
xchg
test
inc
lret
imul
pop
arpl
cld
loopne
bound
imul
or
adc
jnp
outsl
xlat
mov
cmc
fnstenv
or
stc
push
mov
and
faddl
fmuls
test
cli
jbe
xor
jo
in
rclb
lret
or
pop
mov
pop
dec
sarl
movsl
adc
and
mov
cmpsl
es
and
test
mov
adc
stos
fmull
movsl
lahf
data16
test
push
mov
push
pop
fsubrs
push
lahf
mov
mov
lods
pop
imul
dec
outsl
jb
outsl
lret
rorb
xlat
inc
insl
mov
popf
mov
out
jp
jmp
jle
cli
cld
cmpsl
add
out
mov
xor
xor
add
cltd
insl
loope
push
adc
jne
int3
in
je
sarl
jb
pop
ja
jmp
and
lock
loope
les
clc
fmulp
leave
dec
lret
icebp
pop
jnp
sub
push
cld
push
jle
and
adc
inc
scas
mov
cmp
mov
or
call
pop
andb
xchg
sub
stc
in
stos
mov
mov
das
ret
int3
inc
icebp
loopne
cmp
scas
mov
mov
push
push
or
lods
cmp
push
fiadds
mov
ficoml
xchg
pop
movsl
push
scas
hlt
dec
jb
xchg
aaa
sbb
pop
mov
mov
push
dec
aas
lea
insb
pop
subl
outsl
and
dec
aaa
das
dec
add
dec
aad
mov
sub
push
lret
insl
jbe
in
push
xor
dec
pushf
icebp
ljmp
je
lret
inc
sbb
clc
cli
sbb
int3
das
mov
call
cltd
mov
push
jl
stos
sti
xchg
call
repz
leave
push
fs
adc
and
sub
or
or
xchg
xor
inc
pusha
aam
jmp
mov
mov
adc
or
sub
lsl
pusha
push
mov
cmp
sbb
mov
sbb
movsb
jo
xor
js
pushf
leave
mov
sahf
cmp
into
jmp
dec
fiaddl
insl
cmpsb
jp
fwait
jae
int
in
aaa
ds
nop
outsb
hlt
pusha
or
in
jnp
lahf
inc
sti
inc
xchg
xchg
dec
jle
and
pop
push
dec
mov
lret
pop
jae
addl
fnstsw
insl
mov
push
adc
cmp
inc
rcll
mov
lret
aad
add
dec
movq
in
cmp
xchg
cmp
xor
pop
push
in
imul
aaa
cmpsl
xchg
mov
or
xchg
lret
mov
dec
jb
mov
mov
test
or
pop
cmp
popa
dec
or
cmp
xlat
sbb
cmp
dec
mov
sbbb
fsubrs
ss
stc
dec
xor
lods
out
mov
xchg
aam
pushf
fsubr
aam
popf
mov
lock
repz
pop
inc
and
dec
push
jle
cmp
inc
jb
dec
inc
mov
xchg
lret
xchg
aad
ret
jle
or
mov
xchg
and
lods
jge
xchg
sbb
push
loope
rorl
out
outsl
lcall
dec
je
movsb
ds
and
lahf
andb
xor
dec
and
lea
pop
mov
out
js
sub
add
mov
jmp
fldcw
sbb
mov
dec
mov
or
lret
roll
call
add
inc
mov
ja
cmp
ret
js
mov
lret
or
jecxz
or
sbb
pop
xchg
aas
adc
sub
in
fldenv
or
dec
filds
pop
mov
mov
shr
cmpsl
data16
xchg
or
xor
sub
pop
vpaddd
push
call
pusha
jns
stos
lret
cli
pop
cmp
fsts
test
lods
pop
push
jbe
mov
out
fdivs
out
fbstp
das
call
cmpsb
sub
add
inc
out
orb
movsb
ret
dec
addl
orb
adc
jbe
cmc
xchg
fwait
aad
ja
sti
fucomi
gs
aas
daa
sti
popf
push
xor
out
cmp
jmp
pushl
jae
add
sub
and
inc
xchg
movsb
imul
loop
pop
mov
cmp
dec
and
mov
jge
jp
mov
pop
stos
imul
dec
lret
loopne
daa
jmp
je
push
pop
dec
jp
test
cmpsb
loope
inc
add
stos
dec
xchg
mov
rorl
andb
pop
cmpsl
sub
mov
shr
mov
sub
jae
jmp
lahf
jmp
xchg
xor
aad
cld
aas
loopne
mov
scas
gs
sub
push
fildl
scas
and
enter
push
aas
add
imull
or
imul
mov
mov
mov
addl
repz
movl
sbb
loop
fsubrl
push
stos
pop
push
and
int3
xor
add
sbb
icebp
mov
cmc
lahf
out
or
lea
lds
cmpsl
xchg
sbb
int
pusha
add
sub
inc
ret
cmpsl
cmp
clc
ret
cmovge
ret
dec
add
pop
ret
adc
rolb
mov
lret
xchg
int
or
and
xchg
jae
std
push
inc
pop
enter
pop
jbe
call
aaa
pop
ret
fsubl
pusha
into
test
jbe
sbb
push
inc
lods
aas
xchg
ja
les
xor
test
jp
mov
xchg
add
imul
jp
mov
vmovss
ja
mov
insb
pop
push
stos
ds
jge
cli
inc
mov
rorl
loop
or
dec
out
ljmp
test
push
fwait
lret
out
add
jb
mov
mov
and
push
loop
mov
add
icebp
or
sti
std
mov
adc
jnp
ret
fsubrl
clc
imul
or
or
fstl
xchg
mov
xchg
jmp
xor
popa
loopne
push
cmp
std
pusha
push
dec
in
aad
data16
int
ds
mov
push
in
adc
outsb
test
cmc
jbe
pop
int3
cmp
jmp
popa
in
mov
dec
sbb
mov
loope
jbe
cmpsl
imul
jae
in
mov
ja
jne
adc
push
xchg
sbb
and
or
movsl
mov
push
repz
adc
xchg
rorl
add
pop
cmpsb
ljmp
lahf
mov
inc
cli
inc
cwtl
push
das
and
pop
sbb
jge
cmp
dec
mov
sub
mov
xchg
dec
cmpsl
dec
mov
xchg
movsb
in
add
adc
cmp
sbb
add
sub
daa
dec
xorps
pop
or
or
dec
pop
rolb
daa
jno
sub
xchg
jns
aam
jl
push
into
cwtl
or
xchg
or
imul
dec
enter
enter
add
jne
shl
push
fs
cmp
adcl
dec
add
xchg
mov
scas
inc
fsubrl
aaa
test
out
xor
repz
or
cmp
out
out
mov
or
pop
inc
mov
lret
dec
push
fs
aaa
sbb
push
aaa
mov
push
mov
push
inc
cmpsl
stos
jne
int
mov
xor
addl
mov
xchg
mov
les
imul
mov
dec
mov
add
fstl
dec
pop
add
sub
gs
or
adc
xor
xchg
repz
push
fidivs
inc
jo
dec
sti
jecxz
cli
add
daa
and
mov
pop
sub
mov
cmpsl
fistpll
aas
or
pop
mov
popf
xchg
push
pop
sub
add
stos
fwait
xchg
lods
mov
fwait
dec
lcall
cmp
mov
aam
push
pushf
add
icebp
cmp
mov
lock
and
mov
ja
ja
mov
jb
into
and
and
popf
aad
mov
sahf
mov
or
icebp
test
imul
or
rol
ja
out
xchg
push
lcall
jp
sub
ret
or
push
lret
add
xchg
imul
adcl
enter
cltd
or
ror
rolb
adc
or
adc
push
fildll
aam
mov
dec
push
iret
subl
sti
mov
mov
jb
std
jo
jmp
bswap
jmp
push
in
ret
xchg
lock
not
gs
loopne
dec
loope
fildl
inc
shlb
hlt
aad
cld
xchg
cmp
adc
lret
mov
stc
xchg
mov
push
push
stos
lds
dec
jmp
aaa
ret
adc
rorl
insb
mov
mov
out
push
rcl
mov
sub
pusha
fwait
int
cmc
and
cltd
repz
hlt
in
pop
cltd
sbb
dec
adc
ljmp
outsb
pop
mov
movsb
xor
push
mov
push
aad
testb
dec
jbe
mov
mov
mov
adc
imul
mov
xlat
stos
out
cmc
bswap
mov
lods
andl
jl
sub
rcll
inc
jo
imul
add
cwtl
movl
or
jnp
inc
mov
pushf
sub
cmpsb
push
int3
lret
pop
test
mov
cltd
sbb
ljmp
stos
imul
imul
iret
clc
and
arpl
sbb
daa
sub
jb
mov
pop
gs
stos
lret
mov
jle
xor
sub
ja
mov
lret
stc
mov
and
test
inc
pop
push
add
scas
mov
mov
jae
iret
call
popa
mov
int
mov
or
int3
xchg
and
push
ret
mov
dec
cmpsl
test
or
rcll
mov
lcall
test
fadds
aad
test
in
pop
mov
inc
decb
cmc
xchg
idivl
jbe
pop
sbb
insb
lds
lea
push
sbb
dec
ljmp
jmp
in
fisttpll
mov
lock
in
push
sti
mov
sbb
lret
mov
lock
cmp
scas
mov
mov
in
insl
jge
push
ret
mov
divl
hlt
test
inc
mov
adc
cld
xor
push
adc
push
test
mov
mov
lret
std
sub
movsb
lea
pop
cwtl
push
fsubr
or
sbb
mov
mov
ret
xchg
xchg
inc
out
movsb
lret
mov
std
xor
jns
dec
clc
sbb
add
jp
cmp
inc
jnp
push
data16
out
int
clc
sub
into
data16
mov
fldenv
dec
cmp
cmpl
push
inc
insb
rorb
out
push
testb
xor
pop
cmp
jmp
imul
inc
cmp
sahf
sbb
and
jno
and
dec
lahf
loopne
icebp
fsts
stos
sbb
inc
fmulp
imul
popf
inc
pushf
add
aaa
fistpll
sbb
das
in
dec
je
sub
ss
mov
sub
jne
mov
mov
fiaddl
push
fcmovu
fdivl
por
in
jl
push
imul
js
xor
xchg
pop
std
loopne
add
into
sub
data16
aaa
mov
int
gs
lds
pop
mov
xor
ljmp
test
pop
cwtl
adc
filds
mov
cmc
mov
data16
adc
dec
inc
dec
mov
cli
ja
rcr
xchg
cwtl
mov
sarb
cmp
pop
jo
sub
ss
fcomi
aas
int
mov
insb
addr16
pop
hlt
loop
sub
push
ficoms
inc
lock
cmp
jecxz
adc
pop
sbb
push
arpl
mov
or
sbb
idivb
cmp
insl
dec
ficompl
outsb
jp
movl
fidivrl
pop
mov
mov
gs
push
fstps
loopne
inc
jbe
lahf
insl
ret
shrl
jg
inc
push
mov
fdecstp
dec
mov
mov
dec
pop
in
mov
in
stc
sarb
cmp
movsb
jo
mov
pop
pop
add
les
pandn
or
movsl
neg
leave
mov
ucomiss
scas
add
adc
stos
mov
mov
or
dec
jp
movsl
dec
adcl
iret
sbbl
xchg
sar
ljmp
cmp
cmp
jmp
ljmp
cmp
xchg
pop
push
and
sub
xchg
loop
fs
or
xor
imul
add
aad
cli
sbb
push
in
sub
pusha
xchg
rol
not
jle
scas
hlt
pop
jne
push
pop
or
aam
int
stos
and
push
ds
lods
pop
mov
subb
icebp
int3
pop
fcmovbe
popf
loopne
cltd
popf
pop
sbb
out
out
fld
iret
dec
pop
pop
xor
xchg
test
dec
and
outsl
adcl
aam
and
inc
adcb
out
ds
mov
xchg
and
mov
testb
and
xchg
xchg
mulb
dec
jns
pusha
sarb
insb
jb
or
leave
aas
clc
mov
insb
push
push
push
shll
sub
dec
mov
mov
sarb
test
ret
out
and
cs
push
cmp
pop
rcll
pop
loop
cmp
pop
xor
addr16
push
cwtl
sarb
dec
dec
jae
pop
ret
gs
pop
sbb
stos
or
repz
repz
fstpl
add
push
mov
and
rorb
xlat
push
cmpsl
cmpsb
fimull
rorl
pop
xchg
into
fnstenv
imul
mov
pop
sub
xchg
jae
mov
dec
xchg
imul
inc
sbb
outsl
xchg
fs
adc
movsl
pop
sub
data16
mov
pop
xchg
cmp
cli
lahf
fmulp
mov
mov
call
push
push
in
jge
push
mov
andb
dec
iret
test
mov
ljmp
push
test
stos
sbb
pusha
ficoms
inc
shrb
mov
mov
mov
ret
push
cmp
syscall
repnz
mov
cwtl
jmp
ja
and
and
loopne
adc
stc
xchg
cmpsb
testl
cwtl
cmp
or
mov
and
ljmp
cltd
fcoms
xchg
es
pop
aam
dec
or
or
cmp
xor
xor
mov
push
imul
mov
adc
inc
push
fidivs
mov
push
adc
iret
lods
aaa
imul
inc
pop
decb
je
aam
pop
js
sub
sti
clc
mov
leave
mov
dec
mov
pop
bound
flds
and
jge
cmp
mov
pop
dec
jg
mov
mov
movsl
gs
movsl
and
pop
shll
mov
add
pop
in
adc
das
cmp
sub
jl
int3
mov
mov
popf
mov
fsubr
and
mov
xor
or
add
or
pushf
add
or
shlb
and
neg
inc
and
icebp
jl
cmp
sub
jmp
dec
xor
push
testl
sti
lahf
add
jge
jb
adc
sbb
adc
incl
xor
das
pop
mov
mov
lea
outsl
jmp
into
loope,pn
inc
xchg
jmp
jae
lock
xchg
dec
or
bound
out
adc
adc
bound
fwait
sub
mov
add
call
sbb
xchg
adc
cli
fwait
adc
loop
or
cmp
pop
push
push
or
push
mov
xor
jp
int
jmp
fs
mov
frstor
and
dec
xchg
lods
pop
sahf
sub
push
mov
jg
or
and
and
cmc
dec
fiaddl
pop
rorb
jnp
nop
dec
lds
cmp
test
pop
movsb
fnstenv
push
sub
mov
adc
sbb
lret
test
add
or
sub
inc
loope
xor
insl
xor
xor
ljmp
jno
pop
cmp
jge
xchg
icebp
fs
push
out
dec
mov
push
mov
jno
adc
or
shlb
std
bound
jb
mov
push
mov
pushf
sbb
in
xchg
test
mov
cmc
in
cmc
leave
aas
adc
xchg
outsl
lahf
inc
aaa
test
or
pop
stos
cs
cmp
mov
ja
cmpsb
sbb
leave
jecxz
xchg
in
xor
sub
jmp
adc
ljmp
push
and
pop
sbb
aad
mov
fstl
dec
lock
pop
and
mov
mov
out
and
xor
add
xor
add
fdivrl
jne
inc
push
cmp
cmove
mov
frstor
cmp
stos
ljmp
popa
push
pop
and
add
mov
mov
jl
lcall
dec
aam
push
into
cmp
inc
push
lret
imul
mov
test
jge
shll
movsb
sti
pop
movsb
sbb
inc
imul
inc
fcoms
pusha
in
sub
pop
inc
lds
push
ss
shlb
je
testl
jae
nop
pusha
push
cmp
dec
jl
adc
sahf
nop
subl
inc
and
sub
cld
andb
movsb
and
and
sti
xchg
push
xchg
mov
jne
testb
fsubrs
sbb
dec
and
sbb
pop
and
adc
lods
sbb
dec
lods
loope
adc
inc
test
mov
xor
rol
je
out
mov
mov
push
or
aaa
add
aaa
je
sub
xchg
push
lret
iret
fstpt
dec
mov
popa
cmp
fwait
loope
push
adc
ret
sub
mov
xor
jg
fwait
and
es
fistpll
test
mov
jge
push
popa
or
test
movsb
call
ds
mov
adc
pop
sarb
cmp
rcl
adc
or
jb
std
lods
data16
cmp
mov
jecxz
test
cmc
fcoms
lea
cmp
cmp
popl
repnz
icebp
adc
lahf
mov
mov
loope
and
leave
push
mov
lret
mov
in
ljmp
loop
inc
in
mov
mov
mov
inc
bound
insb
dec
mov
outsb
ss
dec
aam
adc
pop
or
scas
out
ret
add
loopne
subl
jp
xchg
repnz
sbb
jnp
jecxz
sbb
repnz
xlat
and
cld
cmp
jp
rcrb
cmp
pop
mov
add
sub
xchg
ret
test
pop
fidivrs
in
push
cmc
movsb
scas
and
sahf
scas
lret
sbb
int
dec
nop
sub
sbb
ret
sub
popf
out
dec
cmpsl
jnp
aam
mov
movsb
xchg
das
adc
in
iret
push
into
cld
mov
int
rcrl
push
in
push
mov
jo
shl
xor
int
test
dec
push
sub
xchg
fiadds
cmpsl
or
xlat
cwtl
cmp
insb
lods
mov
iret
int
cltd
sbb
or
movsb
xchg
mov
pop
aaa
data16
inc
test
test
and
xchg
insb
cmpsb
cmp
rcll
outsb
inc
je,pn
aas
jge
mov
loop
iret
fiaddl
fidivrs
adc
lods
jns
les
pop
dec
adc
sub
loop
pop
or
jp
std
loop
scas
movl
jns
data16
push
stc
subl
mov
adcl
pusha
pushf
push
and
mov
lods
xchg
push
and
jne
sarl
jmp
mov
mov
sbb
xor
xlat
add
nop
int
stos
les
cmp
cltd
push
sbb
mov
pop
mov
stos
sub
shrb
add
mov
pop
or
ret
dec
xor
leave
xchg
mov
cmp
mov
mov
inc
pop
mov
push
jo
dec
enter
dec
mov
push
sbb
subb
jp
test
mov
daa
popf
lret
sub
dec
das
js
mov
or
inc
push
mov
and
ja
mov
xchg
addr16
fdivr
pop
arpl
or
loop
sub
lods
sarl
outsb
xchg
int3
aaa
sub
adc
cli
cmc
xlat
or
aas
or
push
cmpsl
mov
or
mov
lds
adc
data16
fstp
pop
arpl
movsb
mov
bound
lret
mov
cmp
fstpt
rcll
pop
xchg
xchg
or
outsb
push
inc
es
mov
stos
daa
cmove
xor
push
dec
lahf
inc
mov
dec
insb
repnz
push
xlat
jmp
int3
mov
xchg
push
xor
adcb
loopne
jo
cmp
push
stos
xchg
sbb
lret
mov
enter
roll
addr16
ljmp
scas
xor
in
pop
gs
add
xlat
cmpsl
adc
mov
popa
adc
push
mov
imul
andl
js
ret
in
or
ljmp
loope
xchg
jmp
sbbl
jecxz
cmpsb
jg
fbstp
fdivr
in
addr16
hlt
jbe
bound
xchg
mov
cmp
pop
ja
out
lods
cs
test
addr16
mov
icebp
js
dec
add
or
pop
dec
jns
push
movsb
pop
fwait
pop
xchg
lock
mov
lahf
dec
mov
lahf
push
dec
pop
out
cmp
mov
cwtl
xor
sbb
and
push
ror
shr
lock
int
lcall
xor
mov
cmpb
xchg
xchg
test
pop
cs
insb
test
push
sub
inc
cwtl
and
cld
or
hlt
loope
mov
mov
test
out
popf
movb
or
enter
shrl
ds
sub
push
repnz
xor
adc
dec
mov
ficompl
loope
xor
cmp
in
inc
and
or
push
xchg
sub
lcall
pop
or
icebp
and
nop
adc
pusha
push
mov
and
mov
ficoms
ror
jnp
jns
sub
push
dec
fsubrl
cltd
mov
xchg
mov
and
mov
insl
notb
or
jns
cmp
fwait
xchg
in
aaa
mov
jg
sbb
lock
iret
fisubs
dec
shll
mov
add
fldcw
sbb
push
movsl
jle
imul
fiaddl
imul
aad
push
sub
pop
arpl
jg
btc
cmpsb
mov
mov
scas
dec
inc
ljmp
lret
mov
int3
push
mov
in
shl
jle
in
ret
dec
push
push
add
xchg
or
mov
data16
je
pop
jb
mov
adc
lahf
icebp
and
or
lret
cli
dec
movsl
pop
arpl
push
sti
mov
outsl
popfw
xor
rcrl
imul
in
mov
popf
ds
mov
mov
sub
fldt
bound
stc
mov
jbe
mov
jae
imull
jle
pop
sbb
inc
dec
ljmp
in
cld
in
mov
xchg
push
mov
xchg
stos
ljmp
repnz
ret
imul
shll
cmpl
fcomps
push
push
shr
adc
cmpsl
ficompl
jo
mov
or
stc
out
jmp
xchg
xor
pop
xor
xchg
mov
and
pusha
inc
dec
sarl
mov
in
daa
lock
jno
daa
iret
sub
sbb
pop
cmc
int
pop
xor
mov
mov
or
in
cwtl
inc
mov
inc
pop
adcb
roll
fidivrl
push
jle
sbb
cmp
xchg
add
jne
push
movsb
lret
outsb
mov
pop
push
cmp
repz
test
add
lock
fstpl
mov
in
push
adc
std
and
cmpsb
mov
shll
jg
std
pop
loopne
jo
divb
dec
jno
xor
flds
pop
iret
push
pop
rcrb
imul
mov
lret
xchg
adc
loop
and
sbb
or
or
xor
mov
sub
icebp
ds
add
dec
fstpt
popf
dec
aam
push
xor
lock
stos
xor
aas
xor
adc
and
imul
or
inc
dec
scas
aam
clc
iret
mov
sub
push
push
inc
aam
dec
lock
fsub
pushf
es
sub
sub
or
stos
aad
rorl
cmp
stc
dec
xchg
inc
adc
jbe
dec
inc
jne
jne
lock
sbb
rcrb
jmp
sbb
push
add
in
in
ret
call
lods
adc
push
or
movsl
xchg
mov
sub
sti
or
pop
addl
insl
mov
movsb
movb
cmp
aad
sahf
and
aad
jns
pop
aas
test
add
out
pop
je
cld
popa
jmp
xchg
aam
es
subb
stos
inc
and
mov
and
fstl
dec
cs
dec
add
call
aaa
mov
jo
sbb
pop
dec
add
mov
arpl
fists
lahf
in
fbld
inc
ret
mov
or
push
push
scas
dec
decl
add
jmp
ljmp
sub
add
xor
std
xor
testl
aaa
jp
les
js
fisubrs
cmp
rcrb
dec
shrl
test
ljmp
fldenv
loope
dec
pop
sbb
or
mov
xchg
popa
inc
sbb
xchg
mov
add
nop
imul
jmp
ficomps
mov
in
sahf
pop
cmp
adc
pop
js
daa
push
mov
inc
lret
adc
jae
xchg
mov
dec
push
push
out
cmpsb
cmc
stos
daa
stc
xor
stc
cli
xchg
or
push
add
push
adc
pushf
cmpsl
js
leave
pop
cmp
scas
adc
xchg
jne
xlat
cltd
pop
stos
std
pop
add
sub
push
mov
xchg
push
pop
repz
cmp
jns
hlt
scas
xchg
add
daa
in
mov
bnd
sub
je
shll
mov
neg
fsts
or
cs
pop
into
push
scas
cmpsb
add
adc
xor
pop
xchg
out
lcall
ds
iret
dec
adc
pop
fcmovbe
sub
lret
pop
add
xor
emms
rorl
xor
popa
jmp
push
lret
mov
ljmp
dec
test
mov
jge
ljmp
scas
pop
mov
xor
clc
aam
out
arpl
inc
xchg
push
loope
xor
mov
jo
jb
jp
push
sub
mov
add
xor
inc
xor
or
aad
mov
mov
movb
in
into
jp
mov
lcall
add
fistps
adc
out
and
sub
insl
pop
jl
lret
dec
mov
mov
xor
mov
jp
adc
outsb
or
mov
jb
mov
cmp
popf
decb
repnz
pop
cmp
in
sti
leave
gs
repnz
cli
hlt
push
mov
loopne
aaa
in
xchg
push
cmpsb
idiv
push
sub
sub
cli
cmpsb
cmp
gs
inc
fimuls
fnsave
mov
dec
and
adc
aad
leave
or
insl
inc
xor
jne
bound
hlt
lcall
jno
xchg
push
mov
xor
push
xor
stos
int
inc
lret
mov
int3
fadd
fcoml
mov
subl
jl
sub
inc
sti
pop
lret
mov
inc
lea
sahf
sbb
inc
lret
loopne
mov
jecxz
pop
or
test
test
add
mov
cltd
adc
add
aaa
int3
push
inc
xchg
lahf
imul
lods
xchg
fs
jno
insb
mov
fidivs
aam
cli
movsb
pop
or
mov
fsincos
push
xchg
out
lret
inc
out
fwait
cmp
jg
ficomps
mov
cmpsl
jl
addr16
int
add
xchg
pop
mov
das
sti
jecxz
in
push
push
cwtl
or
mov
out
jae
dec
test
cmc
xchg
jl
nop
mov
in
mov
lods
push
xchg
xor
pop
push
arpl
and
sub
jb
cld
fmul
mov
movsb
jmp
jno
mov
cmp
hlt
jbe
ss
push
out
cmp
fisubrl
lods
inc
mov
test
add
mov
aad
fsubrl
mov
sahf
data16
dec
iret
and
lea
bound
in
fs
jg
jecxz
xor
rorb
xchg
or
mov
gs
mov
in
pop
or
xlat
cwtl
pop
pop
movsb
cmp
push
mov
xor
inc
scas
fldl
and
add
xor
nop
push
jmp
clc
ror
and
jae
roll
cmpsb
into
or
dec
insb
rorl
les
add
push
cmpsb
js
popf
rolb
mov
and
loopne
cwtl
inc
bound
mov
mov
test
xchg
dec
aaa
jle
sbb
mov
mov
sbb
add
jmp
fs
ret
lcall
into
fistps
jmp
unpckhps
shl
jae
aam
fs
xor
mov
dec
sbb
jbe
icebp
pop
ret
lahf
and
call
bound
fs
push
mov
fnsave
mov
jo
outsl
jmp
adc
dec
fbstp
xchg
and
pop
outsl
mov
dec
add
sbb
sub
mov
and
data16
jnp
sahf
into
adc
sub
rorb
pushf
xchg
das
aad
into
mov
sbb
xlat
daa
mov
jecxz
inc
test
mov
mov
xor
imul
lock
sub
loope
sbb
ljmp
test
mov
dec
xchg
pop
sub
mov
clc
negl
push
pop
inc
mov
jmp
xchg
cmp
cmpsl
vcvtsd2si
mov
addr16
pop
loopne
clc
mov
outsl
adc
push
cld
rcl
pop
dec
push
push
inc
pop
mov
lcall
movsl
jb
inc
pushf
push
mov
rcll
leave
and
ljmp
in
shrl
lret
mov
jnp
arpl
mov
mov
stc
add
jne
in
adc
mov
adc
xor
inc
jecxz
jg
xchg
mov
jmp
or
enter
movl
push
adc
scas
xchg
sbbl
inc
les
push
loopne
push
nop
mov
rclb
andl
stos
xchg
xor
or
fwait
jae
bound
mov
imul
loop
int3
push
out
sub
nop
inc
adc
int
mov
dec
stos
scas
xor
xchg
sub
loopne
xor
repz
out
call
int3
sub
bound
xor
cmp
pop
shlb
mov
les
push
xchg
push
test
dec
mov
push
fidivl
outsl
filds
in
lea
ja
je
push
jg
xor
mov
sub
stc
lds
int
js
jnp
sbb
xor
insb
mov
xor
adc
test
xlat
jp,pn
lods
filds
adc
mov
jge
test
sahf
cs
dec
lods
test
sub
movsl
and
push
mov
xor
add
insl
push
repnz
mov
xchg
lret
ss
xor
push
push
sub
dec
adc
out
movsl
fld
call
divl
push
push
rolb
push
pop
sub
jecxz
sub
shl
lock
in
stos
fbld
dec
fldt
fsubrl
rcrl
jbe
adc
fbstp
xchg
call
and
bnd
jg
test
push
push
mov
xchg
ja
cmp
mov
jg
addr16
adc
or
popf
fldcw
fdivl
mov
push
cmp
in
inc
cs
dec
and
fs
pop
jbe
test
out
pop
pop
inc
pop
adc
xchg
add
gs
xchg
inc
movsb
movsb
sahf
enter
scas
pop
jle
or
jae
ljmp
pop
pop
lds
push
mov
sti
loopne
and
jno
and
int3
sub
adc
mov
push
mov
xchg
push
into
add
push
aaa
sbb
xchg
pop
in
stos
mov
mov
cli
imul
fbstp
and
xchg
repnz
sub
mov
xlat
cmp
in
push
mov
sbb
pop
dec
hlt
jle
imul
ret
stos
add
inc
rcrl
xchg
sub
call
pop
sub
lahf
imul
sbbl
lock
test
inc
addr16
int3
inc
mov
xchg
fists
pop
sbb
dec
add
popa
push
test
out
lea
ljmp
mov
inc
or
cmp
pop
mov
sub
mov
into
sbb
mov
or
mov
jge
sbb
loope
add
in
xor
xorl
sbb
mov
mov
insl
xor
sbb
cmp
test
push
push
sbbl
repz
jne
mov
lock
int3
int
ss
inc
xor
mov
sub
jbe
xchg
sti
in
rcll
push
int3
iret
insl
pop
lahf
or
mov
mov
mov
outsl
inc
ret
jb
mov
imul
xchg
fidivl
ss
mov
push
es
orb
sub
call
repz
inc
pop
fiadds
lds
mov
rclb
stos
xor
xchg
push
mov
mov
lods
int
and
pushl
shll
add
test
mov
repz
fnstcw
xor
and
jno
sub
lcall
dec
stos
sbb
aaa
pop
jne
xchg
shrb
and
gs
cmc
dec
aas
jle
sub
xor
jmp
iret
inc
aad
adc
pop
inc
or
rclb
jp
lcall
shrl
mov
jb
xchg
rorb
aad
movb
fcomp
lret
pop
xchg
jmp
fiaddl
add
mov
xor
or
orl
adc
dec
and
fcoms
and
sub
push
mov
mov
push
cmp
jg
mov
mov
and
mov
daa
call
mov
or
and
mov
pop
fildll
inc
jmp
add
jns
shl
mov
mov
inc
xchg
lods
fptan
mov
fs
and
adc
or
jp
addr16
mov
push
mov
sub
es
mov
popa
push
es
addr16
lock
nop
push
insl
mov
xchg
and
mov
jns
sbb
movsl
pop
out
xchg
jo
push
dec
popf
test
lcall
clc
ret
dec
sub
xchg
repnz
mul
je
push
pop
pop
dec
mov
cmp
mov
imul
aam
out
xchg
stos
insb
ret
cmp
inc
cld
add
loop
gs
mov
xlat
inc
push
and
dec
sahf
ja
sub
test
lods
cmpsb
xchg
cmpsl
cmp
cmpsb
flds
mov
lcall
hlt
inc
inc
xchg
and
rclb
icebp
mov
push
pop
or
cli
popa
jmp
dec
iret
lahf
popa
mov
andb
dec
dec
arpl
jno
popa
cmc
mov
shll
cs
jb
fmull
roll
and
mov
rorb
lahf
mov
pop
stc
xor
loope
ljmp
sbb
daa
gs
push
jecxz
movsl
mov
mov
imul
loopne
fs
out
and
je
inc
repz
outsl
push
pop
ficomps
sub
or
dec
pop
mov
movsl
cld
outsb
pop
sbb
std
cmc
xor
data16
popa
scas
je
jle
jecxz
pop
outsl
sub
dec
push
fidivrs
out
jb
dec
mov
shld
in
test
cs
jge
mov
lds
adc
push
push
mov
lret
adc
leavew
dec
movsb
data16
inc
or
xor
xchg
pusha
push
lcall
flds
scas
sub
and
aaa
cmpl
cmpsb
xchg
insl
pop
outsl
push
inc
fnstenv
dec
outsb
push
mov
emms
ss
es
inc
push
loopne
mov
push
or
dec
scas
fcoml
test
xchg
out
mov
ret
lcall
insl
lods
push
mov
mov
aad
aaa
mov
add
cmp
ret
mov
mov
orb
push
push
jae
les
into
sub
stos
mov
in
test
push
lods
cmpsb
in
jmp
mov
add
cmpsl
test
insb
mov
jmp
inc
stos
movsb
nop
push
outsb
mov
movsbl
dec
mov
jecxz
in
jns
int3
dec
in
lock
push
aam
mov
stos
mov
shl
lods
xchg
xor
test
and
mov
mov
pusha
in
mov
xorl
out
xor
fdivl
dec
scas
mov
adc
jo
outsb
xchg
ds
and
mov
roll
inc
xor
sbb
push
mov
pop
xchg
push
dec
enter
adc
sub
inc
sub
pushf
jmp
cmp
sbb
sbb
frstor
jnp
popa
cmp
and
xchg
jmp
push
lock
ja
movsl
cmp
enter
outsb
xor
inc
xor
mov
ffreep
dec
jae
ljmp
sbb
es
lret
subb
xor
jle
test
push
ja
aas
push
lret
bound
imul
sahf
cli
pop
cmp
jge
adc
cmp
addr16
test
clc
inc
ja
cs
jbe
bound
int
movsb
lretw
iret
jp
gs
bound
inc
loope
aaa
xor
fcomp
mov
xlat
push
hlt
push
cmc
push
stc
pop
xchg
push
test
sub
lods
adc
cwtl
pop
dec
pop
mov
inc
jnp
sub
test
pop
into
mov
push
out
push
repz
stos
xchg
arpl
mov
mov
insl
incl
add
sahf
xor
mov
adc
repz
inc
mov
int
push
adc
jmp
pop
and
mov
orb
dec
mov
out
mov
jl
xchg
cli
fs
test
cmpsl
lret
hlt
mov
dec
pop
call
les
es
push
or
adc
stos
fbld
sub
shlb
jo
inc
add
cmp
insb
jne
aad
mov
movsl
jl
in
sub
pop
jnp
xchg
mov
ret
cmp
pop
out
add
stos
push
fldenv
insb
inc
mov
in
ret
stc
test
pop
mov
jb
add
sub
mov
adc
and
imul
sahf
push
mov
pop
xchg
sahf
aam
ss
or
sub
lock
dec
or
fistps
pop
stos
mov
add
loope
jae
ljmp
mov
fistl
movl
mov
sti
cli
xorb
mov
push
sub
jle
ja
jno
push
or
dec
mov
mov
stos
xlat
cld
lcall
cmp
sbb
cmpsl
ret
scas
mov
jnp
push
shl
jmp
add
hlt
jno
int
xlat
repnz
pushf
aaa
add
dec
insl
xchg
ficoms
pavgb
test
ficoms
xor
dec
mov
sub
movsb
fcom
in
cmp
cwtl
adc
mov
jne
mov
pop
out
mov
xlat
adc
mov
or
movsl
add
imul
repz
sbb
pop
cmp
mov
and
xor
scas
xchg
rcll
sub
jns
inc
xchg
push
or
mov
mov
repnz
xor
adc
shll
add
jmp
push
call
out
add
push
sarl
pop
scas
push
pusha
ss
sub
popf
mov
and
mov
lcall
inc
and
push
loop
inc
push
les
stc
cmp
inc
mov
arpl
jbe
xchg
ss
aam
mov
cmpb
xchg
dec
jge
jb
int3
inc
xlat
mov
jg
addl
add
gs
jge
or
adc
lahf
enter
testl
out
icebp
ret
pop
repnz
test
out
or
fnsave
and
mov
fdivs
push
das
mov
jp
jmp
jo
inc
rcr
mov
push
cmp
jmp
data16
pop
fwait
pop
ss
cmpsb
cmp
xacquire
adc
bound
xchg
xor
js
sbb
adc
cld
je
inc
cwtl
insl
mov
add
repz
pop
cmp
orb
add
cmp
aaa
xchg
or
or
orl
mov
mov
dec
ds
mov
negl
adc
mov
rorb
loop
jae
in
cwtl
cmp
mov
repnz
push
sbb
lods
dec
pushl
addr16
popf
test
repnz
lret
imul
xchg
in
push
sub
mov
mov
movsb
leave
pop
mov
aaa
pop
inc
fistpll
mov
jo
adc
outsb
in
cmpsl
mov
adcl
fnstsw
cltd
mov
cmp
sub
xor
add
and
adc
popa
jge
addl
cmp
hlt
nop
dec
mov
pop
xchg
push
cmp
mov
int3
inc
repz
das
in
xor
cmp
cld
cmp
cli
push
sub
xchg
cli
mov
inc
pusha
dec
xchg
lods
xchg
push
arpl
inc
ljmp
inc
ret
push
lock
push
sbb
sbb
dec
xchg
and
or
mov
enter
pop
icebp
mov
xchg
mov
ret
mov
jmp
roll
ljmp
pushf
mov
pop
shlb
mov
jp
push
lret
shlb
cmpsl
lock
mov
push
push
xchg
sub
into
sbb
inc
mov
xor
xchg
popf
push
mov
push
xor
jnp
push
xorl
arpl
jp
data16
lods
push
sarb
or
loope
add
gs
mov
das
jns
jo
dec
sub
push
in
data16
fcoms
inc
jp
leave
out
sub
pop
mov
adc
cld
incl
mov
or
pop
loopne
push
int
pushf
mov
stc
pop
mov
xor
pop
dec
jns
std
pop
push
ss
cs
outsb
mov
dec
xchg
rcll
jbe
stc
add
pop
outsl
cltd
add
mov
jbe
inc
pop
dec
sahf
mov
jnp
mov
dec
push
mov
xchg
daa
pop
nop
sub
pop
jmp
jae
mov
cmp
mov
push
or
or
std
push
lds
test
inc
cmp
jne
les
in
sub
inc
add
and
dec
lcall
pop
inc
mov
test
or
lods
je
data16
and
leave
or
rcrb
test
or
jne
arpl
fisttpl
and
sub
add
lds
add
call
ds
pop
ja
pop
mov
push
pop
push
aad
add
lahf
adc
sub
test
inc
ds
xchg
bound
and
push
mov
xchg
es
jns
insl
out
scas
imul
stos
inc
ds
faddl
inc
and
scas
jmp
push
xlat
cli
fbld
adcl
add
mov
and
sbb
jg
mov
push
inc
hlt
sub
sub
jb
daa
out
mov
mov
test
add
sub
daa
cwtl
insb
add
stc
jb
enter
mov
dec
mov
push
jo
sbb
jmp
insl
jb
or
jge
sbb
icebp
xchg
addb
leave
imul
adc
divl
mov
movsb
push
dec
inc
xor
enter
sub
xchg
mov
jb
in
xor
icebp
pop
lods
lods
sahf
sbb
pop
cs
and
jnp
push
adc
inc
cmp
inc
shll
fwait
adc
pop
adc
test
dec
dec
xchg
dec
pop
xor
jnp
in
jp
push
sub
sbb
cld
mov
pop
in
fiadds
imul
fs
mov
adc
add
mov
mov
cmp
ds
imul
shlb
idiv
xor
mov
mov
jge
xor
mov
stc
jne
notb
lret
inc
lea
xchg
cmp
inc
mov
inc
mov
or
dec
ret
imul
cli
pop
sbb
mov
jae
mov
std
imul
sbb
xor
sub
shr
fistl
push
jo
mov
fildll
push
test
stc
cmc
cmp
orb
subl
fstl
int3
stc
fwait
sbb
cmpsl
jg
fsubrs
andl
lret
inc
lret
mov
dec
lock
lahf
test
call
fs
push
mov
mov
jbe
andl
je
flds
subl
push
aaa
cmc
push
negl
xchg
fldenv
movsb
pop
iret
push
daa
pop
jecxz,pt
sbb
sub
push
addr16
pminsw
jp
push
sbb
pop
es
out
dec
cmpsb
inc
cmc
int3
out
mov
fstps
mov
inc
rcrb
ja
shlb
aaa
das
jge
stc
loopne
out
adc
stos
cmp
scas
jae
push
imul
mov
sbb
arpl
inc
or
push
mov
sub
cmpsb
das
shrb
dec
fstpl
ljmp
nop
pop
stc
test
lock
cmp
and
mov
test
cltd
push
popf
xorl
jns
sbb
scas
lods
pop
stos
dec
fsubrs
data16
inc
rcr
sbb
mov
jae
cwtl
fildll
out
push
or
jg
adc
roll
or
and
xchg
or
btrl
out
shl
xor
in
sub
std
fwait
in
dec
mov
inc
sbb
cmpsl
stc
pop
pop
mov
popa
pop
fldenv
cmp
mov
arpl
adc
mov
fs
mov
xchg
out
or
xor
loope
jb
mov
xor
mov
dec
push
xchg
jl
fdivrs
les
jne
inc
rcrb
xor
adcl
das
sete
scas
rorb
pop
inc
xchg
cmp
sbb
cld
aas
and
iret
xor
not
insl
push
and
loop
add
or
mov
jb
arpl
sbb
push
push
push
inc
iret
jns
outsb
xchg
xchg
lock
mov
push
loop
ja
dec
mov
loopne
add
adc
iret
jle
mov
jno
sbb
mov
or
fistl
jne
mov
movsb
stos
jle
fmull
mov
inc
and
and
sub
and
lock
stc
dec
andb
jg
les
dec
gs
adc
sbb
pushf
cmpl
daa
pop
clc
rcl
adc
jno
cmc
inc
fistpl
cmpsl
xor
in
js
mov
push
jp
in
jecxz
lock
out
addr16
jae
das
popf
jle
and
inc
push
sub
lea
fiaddl
repz
xchg
dec
popl
cli
pop
and
pop
jbe
shl
jmp
inc
fidivl
int
ss
insb
stc
push
ret
push
aaa
int
aam
sbb
add
mov
lea
test
sahf
sbb
movsl
loopne
and
or
out
pop
push
insb
or
in
in
jbe
push
lea
aas
mov
jno
push
and
lods
lds
xchg
cmpsb
inc
addb
push
ret
stos
add
fsubrl
sbb
mov
int
fmuls
in
aaa
imul
popa
out
and
cmpsl
pushf
je
out
rcr
les
mov
or
and
pop
dec
dec
mov
mov
add
shll
out
imul
pop
mov
scas
add
cmpsl
out
in
xchg
pop
iret
push
sub
stc
imul
leave
mov
ret
jo
sub
adc
mov
mov
into
pop
xchg
cmp
outsb
lods
add
dec
inc
jge
das
push
insl
push
sbb
xorb
popa
dec
clc
mov
cmc
out
xor
in
sarb
jge
jae
popa
flds
xlat
jae
and
sub
call
lock
in
mov
cwtl
stos
or
bound
cld
adc
out
and
adc
add
xor
jg
lds
dec
pop
ljmp
add
adc
lds
fildl
ficoml
rcll
shll
pop
and
int3
adcb
negl
xchg
leave
ja
push
pop
or
les
push
mov
das
inc
inc
fiaddl
mov
repz
out
ds
icebp
cmp
lds
jae
mov
loop
int3
push
stc
mov
pop
bound
add
push
xor
inc
and
or
xchg
fwait
movsb
aas
movsl
imul
mov
and
out
insl
ljmp
cmp
dec
adc
sub
inc
cmp
add
xchg
shr
cmp
fisubs
and
pop
pop
cmpsb
mov
addl
mov
sbb
test
aas
test
jo
cld
cmpsl
mov
pop
xchg
xchg
fimull
sub
or
pop
push
clc
jmp
fildll
push
mov
push
insl
ds
out
int
ficomps
sbb
xchg
shrb
fcmovnb
rol
movsb
lods
int3
out
in
jp
daa
inc
jnp
lods
pop
push
filds
lret
repz
fmulp
dec
movsb
stos
cmpsb
xor
jb
mov
icebp
jle
orl
les
mov
dec
mov
xor
repnz
mov
xchg
push
xor
subb
lods
scas
sub
ss
mov
jns
stos
or
cmc
mov
mov
mov
mov
jno
fldl2e
and
push
mov
xchg
cli
or
lea
jp
push
push
iret
inc
xchg
bound
popf
cmpsl
pusha
cli
jae
sar
fld
adc
in
fmull
pushf
das
xor
out
add
repnz
pop
ret
dec
push
inc
push
xor
mov
xchg
xchg
sbb
add
lahf
data16
inc
pop
std
mov
inc
jbe
pop
movsb
shlb
ljmp
loope
aaa
mov
push
lret
scas
adc
cltd
cmp
xchg
mov
rcrb
dec
pop
adc
outsl
jne
sbb
es
rcll
xor
shrd
cmp
scas
mov
cmpsl
jb
enter
pop
jl
lods
jo
icebp
add
mov
rolb
lret
mov
push
movl
out
adc
or
fcomip
lret
xadd
loope
xchg
cmpsl
cltd
fcmove
sbb
fwait
dec
sahf
mov
inc
das
xchg
das
icebp
fnsave
das
sub
ror
cs
xchg
cmp
or
cwtl
mov
push
jno
test
sub
aas
nop
in
push
stc
cltd
out
mov
rcrl
ret
sbb
loop
push
mov
ss
jmp
mov
jae
mov
out
lea
roll
test
in
mov
loopne
and
cmp
mov
es
sahf
insl
iret
test
and
test
aam
shl
adc
lahf
fnstcw
fcoms
fdivl
mov
rcrl
pop
add
inc
jo
aaa
sti
mov
test
inc
mov
jp
push
mov
inc
dec
or
push
pop
shlb
cmp
outsl
adc
data16
add
xchg
fidivrs
rclb
jb
and
jecxz
repnz
sbb
test
out
das
push
xchg
fcmovu
add
movl
cmp
xor
das
scas
sbb
cmpsb
cmp
adc
mov
jne
outsl
jle
insb
xor
ret
and
cli
pop
xchg
xor
lds
jne
jp
lds
ret
je
das
shrb
mov
jb
inc
or
dec
in
sub
cmp
loopne
outsb
out
jae
sbb
in
dec
push
cld
movsl
cmp
mov
pop
testl
sub
push
cmp
popf
add
add
push
add
pusha
push
mov
ficoml
fistpll
insl
stos
loop
clc
mov
pop
adcb
les
fcom
inc
push
cmp
movsb
in
es
nop
aad
repnz
cmp
jmp
movsb
xchg
in
xchg
push
lret
adcl
adc
pop
mov
subl
add
rcl
movsl
pop
or
cmpsb
xlat
ror
inc
sbb
add
push
test
mov
clc
sub
jns
roll
ss
dec
mov
imul
mov
mov
or
repnz
das
ret
outsb
cmc
in
inc
push
aam
out
adc
inc
adcl
jnp
push
push
add
data16
stos
adc
mov
movsb
dec
push
mov
jmp
lds
out
inc
je
test
rolb
ret
mov
xchg
test
pushf
int
push
in
sub
fistpll
mov
push
mov
sbb
daa
xor
mov
jmp
popf
jo
lea
xchg
ljmp
insb
scas
sbb
xlat
xchg
test
add
ds
imul
jge
cmp
aas
in
gs
stos
mov
imulb
clc
sbb
add
xor
push
stc
iret
add
sbbb
dec
push
popf
fs
xchg
loope
sub
inc
pop
sub
outsl
ja
loop
sub
call
mov
jbe
loopne
pop
push
idivl
fcomps
out
mov
xchg
leave
and
mov
ss
xchg
rclb
int3
adc
in
enter
sarb
cmp
dec
popf
xor
vandnpd
jg
mov
and
adc
sahf
dec
inc
sarl
xor
adc
and
imul
ss
fs
push
lea
cmp
adc
out
aam
push
insb
sub
xchg
sarb
lret
std
mov
pusha
xor
or
out
adc
jecxz
jp
in
inc
out
loop
add
mov
xchg
in
or
mov
adc
fld
cmpsb
inc
pop
jmp
sbb
scas
sahf
jns
or
adc
stos
sbb
mov
rolb
dec
cmp
lahf
add
xor
pop
pop
imul
insl
pop
inc
aam
cmc
ficoml
daa
mov
dec
mov
jl
push
fs
cltd
repnz
sub
rclb
xor
cli
sub
jg
popf
mov
inc
lds
cli
repz
add
xlat
inc
insl
mov
mov
psubq
cmp
sub
xor
add
push
or
push
and
fidivrs
negb
jmp
mov
dec
cmp
fisubs
cli
in
dec
dec
pop
push
xchg
mov
add
cmpsb
outsl
test
mov
nop
or
lret
ljmp
xchg
lea
enter
dec
sbb
addl
imul
lds
adcb
pop
jp
sarl
push
fcompl
jns
xchg
and
dec
cmp
mov
pop
or
pop
insb
mov
adc
sbbb
sub
pop
fildll
std
xor
xchg
mov
jmp
inc
jge
test
mov
ja
xchg
dec
pop
test
push
scas
add
mov
pop
hlt
push
ja
inc
mov
xor
aas
dec
mov
sub
adc
cmp
nop
jb
into
test
add
xchg
incb
decb
inc
test
clc
jbe
push
pop
jne
mov
dec
add
inc
call
or
mov
cmp
pop
jns
movsb
xor
dec
movsl
mov
in
ss
pop
mov
pop
call
xor
scas
int3
adc
mov
cmp
iret
movsb
testb
test
cmp
idivb
dec
aas
je
arpl
aaa
subb
sub
insl
inc
pop
dec
or
cmpsl
adc
aam
and
or
testb
outsb
leave
inc
outsb
mov
loopne
jle
sbb
data16
pop
xchg
sbb
pushf
pop
stos
mov
xlat
sub
mov
dec
and
aas
mov
and
dec
lret
mov
sbb
add
add
scas
fsubrp
sub
sub
movsl
cmp
lods
mov
inc
addr16
pop
jp
or
cmpsb
and
adc
in
adc
incl
lock
pop
incl
and
jne
inc
jecxz
mov
les
lahf
pop
jo
jecxz
pop
dec
subl
andnps
hlt
lods
inc
daa
jne
int
or
addr16
mov
jp
mov
dec
or
mov
movsl
mov
inc
and
int
lds
sub
and
mov
xchg
scas
mov
daa
cmpsb
pushf
fcmovb
jl
out
jae
sarb
and
cmpsl
mov
jl
out
cmpb
push
lods
add
les
lods
cli
shlb
ret
arpl
sub
add
sub
xor
sub
clc
shr
push
in
sbbb
test
and
pop
incl
cmp
push
mov
xor
pop
and
call
mov
sub
sbb
repnz
mov
repnz
fsts
in
lods
xchg
inc
imul
and
and
nop
popa
adc
add
inc
push
loop
mov
lret
add
cmc
cli
sti
les
dec
jecxz
fs
sub
dec
popf
std
dec
idivb
test
data16
idivb
pop
addr16
mov
mov
xchg
call
xchg
lea
push
pushf
jo
sbb
icebp
popa
movsb
push
sub
fcoms
loopne
lret
mov
push
mov
div
scas
jmp
test
fistl
push
lods
ljmp
clc
lahf
test
jg
in
es
ret
incb
lock
dec
mov
js
in
enterw
fs
jne
inc
add
sub
je
mov
insl
shrb
and
neg
jle
mov
mov
fiadds
mov
das
loop
xchg
andb
cmp
mov
push
and
repnz
test
adc
pushf
add
stc
push
xchg
std
cmp
ds
jno
sahf
sub
lcall
dec
in
sub
mov
xchg
add
repnz
loop
lahf
fs
pop
push
ret
repnz
iret
ret
clc
into
xor
mov
popa
inc
push
pop
adc
ja
and
sub
lods
mov
mov
pop
push
mov
push
jns
fs
jmp
cmpsb
popa
fbstp
sub
dec
inc
scas
test
jl
xchg
inc
call
cmc
arpl
popf
sbb
mov
int
and
xchg
insl
push
jae
xor
jge
pusha
jbe
push
mov
mov
add
mov
sbb
cld
dec
inc
push
jo
call
in
int
inc
cmpsl
mov
idivl
movsb
adc
pop
dec
pop
adc
inc
jg
push
jle
hlt
add
outsb
out
jp
fisttpl
iret
pop
pop
add
pop
add
lea
inc
test
cli
jmp
mov
ficoms
ss
or
lret
repz
loop
inc
shll
out
push
mov
push
movsb
inc
js
iret
inc
roll
or
mov
arpl
xchg
sarb
fildl
jb
dec
lret
xchg
rorl
and
pusha
sti
andnps
mov
xor
stc
clc
shll
in
xor
clc
jp
ret
xchg
loopne
loopne
fsubl
lods
sarb
sbb
orps
push
loop
int
xor
adc
xor
mov
mov
mov
adc
pop
push
or
pop
and
push
mov
and
mov
call
or
daa
daa
adc
daa
add
jo
jmp
les
mov
nop
ficompl
mov
mov
nop
jno
dec
jns
jl
fld
sbb
mov
xor
inc
sbb
fs
idivl
fsubl
add
sub
lret
inc
popa
xchg
mov
push
fstps
mov
xor
negb
jb,pt
jg
xor
jb
mov
mov
out
sbb
scas
fcmove
nop
pop
pop
les
mov
cmp
clc
push
lock
sub
jge
or
cld
fs
inc
pop
aad
cld
dec
mov
scas
inc
dec
or
cmc
or
inc
scas
adc
mov
or
jl
imul
push
in
jae
mov
push
aad
aam
stos
aam
loopne
or
sbb
popf
insl
sti
mov
push
mov
cli
jmp
xchg
sbb
loope
or
dec
mov
jg
sbb
cmc
adc
hlt
test
cmpsb
shlb
and
lcall
jge
jle
pop
cmp
jmp
push
mov
mov
push
mull
cltd
loopne
sarl
cmpsl
les
push
rorb
repnz
push
inc
movsl
jno
sub
add
fwait
scas
repnz
jns
lahf
inc
cld
pop
mov
sbb
test
outsl
inc
in
insb
add
inc
add
mov
xor
sbb
in
mov
movsb
sbb
fmul
sub
stos
push
scas
rcll
mov
sub
int
cmp
and
fcomip
push
out
add
push
std
hlt
outsl
insb
mov
add
lcall
and
jmp
or
push
mov
ljmp
daa
jmp
sahf
imulb
incb
sub
stc
mov
repnz
aad
stos
adc
push
out
mov
sbb
fistpll
sbb
lret
pop
iret
mov
enter
gs
aad
jmp
xor
cmp
loop
adcl
and
and
decb
push
xchg
in
leave
adc
sbb
jl
jle
dec
dec
push
jg
sub
xor
pop
adc
out
add
sarl
in
in
lods
pop
lcall
pusha
and
xchg
mov
push
mov
lcall
sub
or
pushf
ds
xorl
mov
pop
movsb
jmp
mov
imul
push
ja
fs
inc
mov
cltd
add
adc
and
popa
fucomi
int
xchg
pop
xor
mov
cmc
std
mov
sti
shlb
adc
aas
push
ljmp
dec
ds
cmpsl
movsb
movsl
sarb
add
sbb
mov
cmp
mov
jb
outsb
fistps
sub
arpl
adc
repnz
mov
insl
inc
adc
push
push
sbb
pop
xchg
xlat
addr16
mov
aaa
xchg
loopne
sbb
pop
cwtl
mov
add
mov
gs
push
push
xchg
sbb
lea
mov
repz
dec
xor
mov
icebp
int3
mov
xchg
mov
jnp
testb
decb
int
lcall
stc
lret
xchg
in
jbe
or
mov
xor
dec
adc
aaa
stos
rorl
pop
imul
cmp
arpl
insb
sbb
rorl
ss
xor
sub
jb
out
mov
mov
aam
cltd
pop
movsl
and
push
sbb
mov
xor
movsl
fisubrs
mov
inc
push
or
inc
sub
mov
je
pop
pop
add
hlt
xchg
add
fisttpl
inc
or
loope
outsb
add
gs
jge
dec
mov
pop
inc
dec
rclb
pusha
xor
dec
cld
cmp
jnp
mov
jp
fidivrl
xor
xor
test
stos
es
mov
je
adc
jbe
xchg
push
jmp
loopne
leave
test
inc
cld
jl
xchg
sub
aas
sbb
ret
sbb
movsl
pop
mov
sahf
pusha
fisttpl
aam
aas
in
andb
adc
inc
mov
cld
jle
inc
sub
xor
sub
shll
imul
mov
cltd
pusha
or
outsb
daa
imul
and
sbb
push
adc
mov
mov
mov
xor
xlat
jns
dec
imul
fbld
inc
lods
xor
sub
es
inc
pop
sub
cmp
push
in
sub
orb
push
mov
cmp
in
shrl
dec
sbb
in
mov
cmp
pusha
mov
daa
mov
xor
pop
enter
inc
and
loope
fcmovu
sbb
lahf
enter
mov
dec
cli
mov
stos
mov
roll
stc
add
imul
call
push
jo
inc
int3
mov
pushf
pop
add
sbb
pushf
mov
push
mov
fs
insl
leave
outsl
filds
jo
aas
arpl
imul
sub
enter
or
ret
jg
ljmp
mov
sub
nop
jnp
push
mov
or
rorb
push
pushf
das
das
push
xor
sub
dec
lcall
subl
call
notb
std
pop
sti
outsl
repnz
adc
pushf
xchg
imul
jp
inc
or
dec
lahf
inc
or
jae
imul
cld
push
mov
lahf
test
out
push
sbb
loope
pushf
andb
xchg
xor
and
dec
mov
or
push
jae
mov
mov
jg
aam
push
rorl
lea
movsl
mov
hlt
jl
jge
push
jge
jno
mov
dec
fsubs
mov
movsl
hlt
into
mov
inc
enter
int3
push
data16
mov
arpl
mov
iret
shll
das
sbb
adcb
aas
lret
sahf
int
outsb
jle
xchg
sbb
cmp
push
clc
aaa
jmp
dec
xchg
or
mov
mov
test
mov
hlt
or
addr16
xchg
add
xor
data16
xor
pop
dec
add
adc
inc
jno
fcomps
in
xor
add
xchg
dec
clc
pop
andl
adc
mov
jno
dec
cmc
pop
loop
lcall
push
push
add
not
stc
xor
push
and
outsl
je
inc
aad
adc
shlb
cltd
mov
test
jb
inc
or
xor
cltd
shr
push
pop
ja
loope
jnp
insl
outsb
sbb
or
out
sbb
test
sbb
sbb
mov
test
xchg
test
je
mov
mov
add
add
cmp
ret
and
ffreep
and
fs
cmp
and
mov
mov
push
pop
mov
mov
push
iret
outsl
stc
sahf
imul
pop
mov
dec
mov
mov
jne
jg
pushf
mov
divl
out
sbb
cmp
and
xor
add
fnstcw
xor
ds
lds
loope
jge
dec
push
jecxz
xor
nop
push
inc
call
mov
dec
call
push
movsl
loope
lret
mov
popa
aam
sub
rorl
subb
push
orb
in
std
out
add
sub
mov
sub
ds
add
or
add
shl
jl
into
xor
jecxz
adc
pop
lahf
mov
int3
pushf
sub
mov
loope
inc
mov
ljmp
movsb
adc
jg
xor
sub
jnp
jb
call
mov
xchg
jns
cmp
pop
cmpsl
xchg
jmp
fxch
push
call
nop
orl
cmp
stc
aam
ret
ret
dec
into
push
push
and
inc
push
repnz
nop
pop
or
adc
mov
fadd
adc
ret
adc
xor
xchg
shrl
aad
stos
loop
data16
rcll
ljmp
push
gs
fbld
fsubp
shrb
out
fcoms
imul
mov
cmp
push
xor
inc
rolb
dec
fistpl
inc
call
test
in
pop
popf
and
ss
xchg
aas
inc
addr16
mov
fiaddl
sub
cli
in
loope
testb
in
dec
daa
loope
push
inc
push
cmp
pop
mov
cltd
jns
movsb
nop
dec
mov
ss
adc
in
imul
pop
xchg
mov
sbb
pop
xchg
push
stos
and
arpl
arpl
ret
xor
in
push
clc
jnp
jmp
dec
ds
mov
rol
fisubl
sbb
test
cmp
enter
adc
insl
jbe
nop
lods
mov
mov
adc
gs
mov
dec
aaa
dec
push
jo
fsubrs
gs
mov
inc
sub
add
mov
mov
push
push
pop
int3
fnstsw
pop
xor
jns
ret
jp
cmp
js
stos
or
mov
cs
xchg
js
rcr
fsts
dec
out
lock
out
jmp
lds
aad
jb
push
lds
ljmp
call
and
xorl
lahf
or
mov
rcl
loop
jmp
xchg
mov
sbb
daa
inc
insl
test
inc
sbb
je
pop
mov
or
inc
mov
adc
sub
sahf
iret
inc
mov
inc
mov
push
sbb
pop
jno
jo
out
movsb
nop
adc
xor
gs
sbb
inc
or
and
insb
push
int
test
mov
out
push
mov
xchg
push
and
inc
push
push
pop
and
outsb
push
outsl
jnp
ja
xchg
scas
and
fistpll
dec
sbb
stc
cld
push
add
or
add
sbb
test
fcompl
in
test
and
xlat
leave
mov
add
dec
add
xchg
fst
aaa
out
adc
leave
mov
mov
scas
daa
dec
insb
sub
out
sub
mov
mov
dec
and
cltd
lea
test
pop
icebp
sti
or
xchg
inc
adc
arpl
push
cmp
push
imul
aad
jmp
sbb
push
cmp
cli
jmp
inc
outsb
cmp
sbb
xchg
and
decl
shlb
jbe
push
mov
mov
popf
dec
xchg
aad
in
shl
pop
shrb
jo
fs
xor
bound
xorb
cltd
pop
and
outsl
inc
sbb
jl
mov
addb
lret
pop
and
mov
sbb
jae
pop
xchg
pop
mov
add
mov
add
pop
and
mov
ret
sbb
cmp
xlat
fcmovbe
mov
mov
out
xchg
pop
stc
andb
pop
out
jbe
mov
jae,pt
sbb
jb
inc
adc
and
jae
mov
mov
mov
xlat
or
mov
dec
negl
mov
push
inc
cs
bound
dec
jb
sub
frstor
xlat
sbb
loop
add
dec
push
jo
sub
xor
insb
insl
mov
inc
add
hlt
mov
in
mov
gs
mov
arpl
xchg
aas
xor
sbb
mov
in
loopne
fmul
pushf
pop
mov
pop
mov
or
in
xchg
mov
ljmp
and
repz
or
mov
scas
xchg
xor
cli
push
cwtl
and
popl
dec
sbb
push
lcall
and
cmp
sbb
outsb
jbe
ljmp
pushf
jne
jp
xor
pop
xorl
inc
jae
inc
add
sarb
jno
dec
test
jnp
test
cmp
stc
mov
nop
lods
and
inc
ds
mov
les
movsl
test
jnp
stc
adc
push
mov
cs
pop
or
in
mov
dec
cmpxchg
and
sarl
xchg
in
mov
adc
xchg
dec
sbb
push
push
in
mov
daa
pop
push
push
add
jae
fnstenv
in
lret
dec
jne
xor
xchg
ficompl
repnz
and
out
andl
dec
rol
ljmp
nop
pop
je
xlat
adc
mov
jnp
sahf
pop
dec
lods
jmp
cmp
fs
lahf
push
inc
mov
mov
icebp
mov
jp
push
add
adc
and
or
hlt
aaa
in
sub
xor
adc
ljmp
nop
ljmp
fcmovbe
dec
sahf
dec
jbe
ds
lds
sub
flds
add
push
lret
gs
mov
movsb
divb
dec
out
and
popa
nop
jecxz
add
adc
into
notl
xchg
daa
mov
imul
movsb
vmread
roll
inc
push
push
add
and
pop
into
mov
pusha
mov
test
push
ss
sbb
mov
inc
imul
mov
clc
test
jb
xchg
mov
das
lret
inc
int3
add
pop
inc
mov
jns
mov
stos
mov
stc
push
cmpsl
cmpsl
and
mov
gs
pop
cmpsb
adc
nop
loope
movsl
lahf
andb
sub
cmp
or
jl
ss
pop
lock
leave
callw
or
js
dec
fsubl
and
es
test
aaa
or
xor
sarl
das
pop
lds
loope
loope
loop
lret
mov
inc
leave
push
outsb
dec
lock
ss
mov
iret
add
xor
pop
fstpt
and
sub
subl
sub
mov
gs
loopne
fwait
repnz
nop
cmpsb
cmc
pop
push
inc
daa
adc
xlat
inc
or
out
and
leave
dec
or
push
cmp
testl
xchg
cwtl
sbb
test
adc
inc
hlt
dec
inc
stos
lock
daa
xor
into
lock
pop
fimuls
add
or
mov
or
add
adcl
xchg
inc
mov
cmp
int
xorb
fnstsw
and
jns
les
pop
mov
es
pusha
mov
add
sub
jmp
std
popa
pusha
inc
and
ds
sbb
mov
decl
mov
and
and
and
pop
adcb
xor
lahf
cmp
cld
cmp
call
mov
mov
cmp
xchg
lahf
cli
add
push
fldenv
add
mov
mov
popa
notl
mov
mov
in
xchg
push
xor
mov
xchg
arpl
pusha
cmp
adc
adc
cltd
inc
rorb
movsb
pop
mov
cmp
outsl
jle
jbe
adc
jecxz
pop
adc
ret
add
fucomip
frstor
int
je
and
push
gs
fldl
push
sub
or
fisubrs
jecxz
jns
scas
call
scas
insb
inc
add
fcoms
mov
rcl
mov
int
jo
xchg
inc
adc
sti
dec
mov
xor
or
jmp
lcall
jmp
or
outsl
test
test
mov
and
mov
rcll
mov
repnz
out
mov
loop
mov
decb
test
xor
dec
into
sub
out
test
popf
push
and
mov
sarb
inc
andl
cmpl
cmovno
mov
xor
in
dec
addl
ja
enter
test
out
dec
add
scas
rorl
adc
or
or
out
enter
push
dec
lret
adcl
stos
rorl
mov
xchg
fcoml
sbb
icebp
rorb
push
out
sbb
push
xchg
mov
adc
mov
std
mov
pop
sub
push
insl
cli
enter
mov
mov
hlt
adc
mov
mov
mov
adc
cmpsb
xchg
mov
outsb
es
add
cli
pop
movsl
and
jb
sbb
popf
fnstsw
xor
call
orl
out
push
mov
inc
adc
and
and
mov
mov
jns
and
in
sbb
xchg
gs
aaa
xlat
popf
dec
adc
pop
test
in
mov
jle
mov
mov
cmp
push
cli
sub
roll
aas
cwtl
inc
jb
int
inc
repnz
fiaddl
xor
loop
adc
icebp
mov
sbb
and
sbb
lods
sahf
jmp
cli
pop
outsb
fmull
fwait
shlb
outsl
into
sub
addb
js
adc
daa
add
outsl
mov
pop
test
imul
in
cmpsb
movsl
push
push
insl
dec
inc
loop
jle
mov
pop
fucom
mov
mov
fisubl
pop
repz
xor
xchg
mulb
inc
insb
pushf
cmpsb
test
aam
mov
adc
mov
lcall
xchg
int3
movsb
jo
xor
dec
adc
adc
dec
loope
sub
push
xchg
imul
aam
repnz
ret
or
cld
add
stos
jecxz
js
sar
xchg
shr
clc
faddl
aam
sbb
gs
or
jno
out
add
adc
aaa
pop
sarl
push
je
addr16
or
xchg
mov
repz
or
in
xchg
enter
dec
outsl
sub
in
lcall
and
cs
cmc
jno
stos
movl
mov
add
mov
pop
sarl
xchg
jo
out
or
xchg
cwtl
into
movsl
adc
xor
lret
push
adc
and
inc
fs
or
stos
mov
xchg
sbb
jg
lea
add
fidivs
xchg
repnz
jno
insl
lcall
dec
aad
sbb
popf
cwtl
sub
fcmovbe
rorb
inc
cmp
push
leave
ja
dec
mov
adc
inc
out
stos
adc
repz
lret
sbb
and
jp
insb
and
sbb
gs
xacquire
rcrl
cmc
cmpsb
test
inc
sub
into
dec
sub
inc
push
dec
loopne
mov
pop
mov
cmpb
inc
mov
icebp
pop
pop
mov
push
and
sar
jae
jl
or
loopne
fs
pop
roll
jo
ret
fidivl
jg
sub
outsb
jne
push
pop
dec
cmp
sti
fisttpll
hlt
mov
outsl
xchg
jp
cmp
shlb
ljmp
sbb
add
test
call
dec
and
fs
dec
pop
fbld
clc
adc
push
pop
sub
cmp
cld
sub
pop
fsubrl
xchg
dec
lea
fwait
outsb
fdivrl
adcl
jne
push
sub
mov
inc
mov
mov
mov
xchg
fisubl
addr16
stos
cs
ljmp
mov
jg
rcrb
and
repz
shll
or
add
cld
scas
fpatan
mov
scas
out
mov
hlt
adc
mov
dec
pushf
in
mov
roll
outsl
fwait
mov
sub
lret
push
jle
xchg
add
add
mov
cmp
lahf
or
shll
fbstp
sub
jl
in
inc
xchg
pop
mov
lea
sbb
xchg
sub
gs
dec
call
push
scas
sbb
ja
scas
scas
clc
cltd
repnz
jbe
and
scas
and
lods
adc
mov
mov
outsl
or
stos
out
add
dec
ret
in
pop
stos
and
xchg
sub
cmp
mov
adc
movsb
or
lcall
mov
ds
mov
int3
in
out
and
data16
adc
adc
xchg
jl
bound
insb
lcall
cmpl
movl
aad
push
and
cmp
int
push
loop
imul
ucomiss
xor
pop
jb
push
cmpsl
cmc
mov
in
adc
pushf
in
ljmp
fs
sbb
pop
mov
pop
mov
gs
ret
cmp
jecxz
incb
add
rorb
add
out
jo
jge
in
jl
jo
sub
lahf
mov
fsubrl
pop
js
sbb
ds
je
and
push
adc
mov
jp
ret
mov
and
das
adc
shlb
or
mov
fcmove
jbe
lods
sbb
call
xchg
jbe
xchg
mov
jnp
pop
dec
pop
dec
and
movsb
mov
cwtl
add
testb
aas
pop
cmp
aad
mov
add
out
mov
dec
aad
je
push
xor
addr16
push
sub
rcl
rcr
stos
and
mov
lret
xchg
mov
les
mov
and
lods
enter
pushf
pop
push
outsl
inc
jnp
xchg
pusha
mov
mov
cli
jecxz
in
js
mov
out
cltd
push
or
dec
sbb
gs
fisttps
out
and
outsb
pop
dec
js
dec
xor
push
push
pop
and
xor
orb
outsl
fnstcw
sub
pusha
xor
cs
sarb
inc
test
and
scas
xor
arpl
inc
in
insl
test
mov
aad
loopne
cmp
enter
push
repnz
sub
dec
leave
push
pushf
and
jg
push
sub
ret
inc
dec
push
lock
test
cmp
add
xor
mov
cmp
lcall
push
lods
push
fcomi
shll
rcrb
inc
push
mov
loopne
stos
mov
aad
pop
xchg
aam
xlat
mov
sahf
mov
js
adc
incb
add
push
jl
mov
arpl
addr16
pop
xor
jg
xchg
mov
test
xchg
pushf
jne
movsb
fadd
outsl
and
mov
sub
xchg
fisttps
out
mov
sbb
mov
pop
test
mov
jb
cmp
xor
xor
mov
cld
sbb
sarl
fadds
inc
lret
push
mov
mov
push
call
push
push
dec
std
jg
pop
inc
rcr
pop
cmpsl
inc
push
movsl
loop
push
bound
daa
ss
test
and
in
push
stc
outsl
ds
sbb
pop
cwtl
jno
fs
ret
dec
or
cmpsb
int
lahf
push
call
add
push
push
sub
fistpll
pusha
mov
xor
arpl
rcrl
stc
push
nop
or
push
sete
mov
flds
movsl
insl
jae
mov
or
imul
xorb
inc
mov
ret
and
aaa
push
scas
mov
stc
clc
je
xor
icebp
pop
int
insl
das
mov
lret
jne
int3
fldl
mov
rclb
lods
pop
outsb
aaa
sub
jg
mov
mov
imul
sbb
push
jbe
lea
mov
icebp
fwait
lret
pop
jp
dec
sbb
mov
jae
addr16
ss
pop
mov
es
add
jnp
lock
mov
test
jb
xchg
sbbl
xchg
cld
fisttps
decl
adc
fwait
xchg
or
mov
shrb
mov
repz
cld
cld
pop
stos
mov
clc
sbb
sbb
out
outsb
xlat
loop
push
rorl
dec
int3
xchg
je
push
sub
stos
sub
xor
push
sbb
dec
js
out
out
shrb
inc
xor
cmp
cmpl
cwtl
and
mov
sti
xchg
jecxz
daa
jns
out
mov
leave
arpl
xor
ss
mov
add
sbb
sub
cmp
out
xchg
xor
int
cmp
sub
ds
dec
test
dec
mov
jno
imul
pop
ret
dec
stos
pop
jg
sub
lock
mov
adc
sub
decl
fnsave
sbb
scas
adc
mov
push
xchg
imul
fistl
das
cli
lret
add
mov
mov
adc
jmp
jo
pop
repnz
ds
daa
rcrb
dec
cltd
dec
inc
hlt
loope
mov
inc
lods
test
mov
movsb
int
addl
mov
xchg
bnd
dec
pop
enter
out
jge
jnp
mov
ret
jnp
lods
pop
add
xchg
nop
jle
and
aad
arpl
add
pop
xchg
or
lcall
push
add
pop
popl
cmc
xchg
call
push
cld
mov
enter
xchg
mov
mov
loop
pop
dec
cmp
sbb
dec
sbb
loop
lret
mov
aad
lods
push
jle
ror
and
pop
cli
lds
pusha
push
faddl
push
mov
jo
pop
and
aam
pop
dec
push
out
out
xor
adc
imul
add
aaa
sbb
ljmp
mov
dec
ss
pop
mov
xor
mov
inc
and
ficoml
test
scas
lea
sbb
fs
add
adc
jb
sbbb
xlat
sbb
mov
fadd
andl
cmp
inc
cmp
rsm
cwtl
cmp
pushf
repz
pop
xchg
dec
into
inc
inc
inc
xor
and
xchg
cmpsl
ret
jl
out
outsl
lods
sub
repz
stos
mov
leave
fbstp
adc
lock
int3
repz
std
xor
jne
mov
fistps
imul
lock
push
xlat
sbb
scas
jle
loope
call
sub
fs
jbe
repz
xor
jb
sahf
adcb
lea
jle
sub
xlat
das
dec
mov
insb
addr16
push
mov
loop
lahf
sub
sub
mov
mov
dec
sbbb
mov
gs
sbb
out
pop
push
lea
scas
inc
pop
outsl
movl
test
into
insl
cltd
push
mov
mov
cmp
loopne
adc
mov
lea
test
jne
jb
sbb
insb
jle
out
xchg
push
in
stos
xchg
out
mov
test
stos
jecxz
or
pop
fcmovnbe
out
adc
pop
scas
shll
pop
cltd
sti
loopne
and
popa
cs
test
xchg
loop
cmp
aas
lret
jp
addr16
test
mov
xchg
pop
mov
push
pushf
cmp
clc
aas
adc
mov
or
xor
clc
lea
out
in
mov
xor
cmc
incb
xchg
dec
in
jge
adc
add
in
mov
push
popa
sbb
clc
out
add
mov
stos
test
mov
neg
push
je
push
xor
mov
adcl
jns
ljmp
aaa
inc
xchg
lods
sbb
inc
xchg
loop
int
sbb
push
xor
out
and
xor
icebp
fsubp
or
mov
orb
cmpsb
or
test
mov
xlat
sbb
push
mov
mov
hlt
lcall
flds
ret
xchg
lret
rol
mov
inc
add
fcomps
sbb
cmp
fdivs
add
shlb
jne
sbbl
push
pop
out
cmpsl
xchg
fisttpl
dec
lcall
movsl
xor
mov
in
xchg
jb
mov
rcrb
xor
rclb
jle
pop
popa
push
imul
popf
out
push
or
in
test
sub
or
out
jns
cs
and
add
pop
test
fs
aam
push
fidivrl
pusha
aaa
xor
or
repnz
jnp
cltd
lret
cmp
mov
adc
ss
pop
movsl
pop
popf
and
pop
add
adc
xchg
dec
cmp
inc
pop
xchg
adc
test
jecxz
sahf
sbb
cmc
mov
cli
mov
stos
xor
fldcw
test
loopne
add
dec
sbb
and
pop
add
mov
mov
clc
inc
test
pop
out
ja
mov
ljmp
cmp
cmpl
jge
inc
repnz
call
xlat
fstl
dec
sub
adc
mov
sbb
insb
out
jge
pop
jnp
bound
add
sbb
sbb
sti
clc
pusha
out
lahf
mov
mov
jno
ss
cmc
mov
mov
adc
dec
ds
into
call
rcrl
add
rcrb
imul
mov
sbb
push
push
and
lcall
cmp
test
jne
outsl
repnz
push
data16
dec
mov
sbb
out
ror
xor
mov
or
mov
out
pusha
push
jg
xchg
aam
jo
add
push
test
xor
sub
fmul
or
ret
add
push
mov
stos
pop
sbb
jns
dec
ficoms
mov
cmpl
xchg
lds
gs
les
or
pop
jmp
push
cmc
cmp
out
sahf
out
ret
in
imul
rcr
sbb
test
out
fcmovnu
mov
mov
ja
xchg
shlb
dec
mov
fmull
cltd
xchg
mov
data16
test
sbb
fs
mov
mov
cmp
repz
icebp
cmp
inc
cli
dec
test
in
scas
loopne
iret
push
jnp
loopne
pop
jge
fcoms
mov
jmp
lret
les
int3
pop
repz
cmp
xor
mov
and
jbe
arpl
xor
xorb
mov
lcall
sarl
mov
mov
pop
cli
sub
mov
adc
test
in
jns
mov
sub
or
inc
and
mov
bound
inc
aam
std
cmpsb
test
stos
mov
addr16
jg
repz
sub
xchg
mov
in
xor
sub
mov
daa
in
mov
adc
or
in
and
pop
rorb
and
mov
scas
rcrb
in
jle
sbb
add
push
mov
sbb
add
dec
aas
dec
pop
pushf
pushf
out
cmovnp
mov
sahf
subl
push
cli
stos
enter
adc
mov
aaa
addr16
daa
jmp
jg
fcoms
nop
sbb
mov
out
pop
repz
in
fildl
inc
movsl
pop
mov
jmp
gs
xchg
les
dec
ret
popa
mov
sub
insl
mov
xchg
mov
insl
scas
inc
ljmp
shr
push
push
inc
out
and
cld
enter
test
test
cmc
pop
cld
or
xor
lcall
jbe
out
jnp
and
paddd
cmc
mov
pop
addr16
sbb
lods
pop
inc
sbb
push
loope
sti
mov
ficompl
ljmp
lock
filds
or
out
fxch
or
gs
cmpsl
ja
pop
ljmp
cmp
xchg
lods
cltd
add
cmp
sahf
fists
dec
push
jno
and
xchg
adc
or
xor
bswap
add
push
mov
push
cli
jb
jno
test
mov
xchg
test
rcrl
mov
mov
int
pop
mov
outsl
test
leave
lock
in
flds
aam
sub
push
sub
popf
sbb
cmpl
scas
add
ret
xchg
push
ror
cmp
popf
xor
in
pop
adc
or
mov
cs
dec
push
leave
mov
bound
pop
cld
xor
and
dec
into
mov
addl
add
pop
and
inc
xor
outsb
sub
cmp
mov
xchg
pop
aad
mov
mov
pop
mov
cmpsl
xor
lret
mov
aad
xor
cmp
pop
pusha
mov
xchg
dec
pop
orl
cmpsl
jl
sub
add
jns
cld
ret
mov
adc
jecxz
repnz
bound
psraw
push
sbb
pop
pop
mov
adc
popf
pop
mov
dec
adc
xchg
mov
or
shl
pushf
sti
gs
iret
adc
arpl
mov
popa
xorl
push
mov
jns
push
inc
mov
js
sahf
ret
mov
mov
fwait
jmp
push
lret
std
iret
sub
ret
jecxz
mov
outsb
lahf
jmp
sbb
mov
or
lea
clc
mov
mov
sbb
imul
pop
mov
test
push
int3
add
inc
and
inc
adcl
inc
mov
das
cmp
or
sbb
in
mov
xchg
or
data16
push
dec
pusha
mov
jecxz
push
test
in
add
mov
pop
test
inc
or
out
int
xlat
movsb
xchg
sbb
imul
adc
jne
xchg
pop
adc
out
rol
sub
mov
lret
mov
mov
decb
push
xor
ss
dec
jno
cmc
mov
dec
xchg
or
sti
fsubrs
addl
movsb
or
mov
arpl
push
xchg
sbb
in
fldt
sub
cmc
mov
jnp
jecxz
mov
ret
fiadds
cmpsl
add
sub
mov
mov
sarb
lahf
and
inc
icebp
adc
je
fiadds
stos
icebp
or
lret
sbb
add
mov
push
lods
inc
adc
push
mov
fnstcw
cmpsl
cmp
gs
mov
push
jp
aaa
push
sbb
insb
sub
or
cltd
add
outsl
ss
jo
xor
mov
or
shrl
sub
cmp
push
xchg
cld
cmp
sub
movl
dec
push
bound
or
or
mov
jo
popa
fwait
jnp
jns
repnz
inc
out
mov
in
repnz
ja
or
into
je
test
mov
daa
sbb
push
iret
or
out
dec
in
adc
sbb
lock
popa
leave
movhlps
imul
push
callw
pop
aaa
neg
add
and
notl
mov
movsb
and
xor
dec
and
or
cld
fdivs
shll
push
fmul
and
push
mov
test
movsb
sub
sub
xchg
dec
enter
pop
aas
mov
and
rcr
xor
mov
loope
xor
pop
add
sahf
add
mov
insl
mov
jecxz
cmp
xchg
ja
test
les
dec
lcall
enter
mov
jb
seto
and
xlat
pop
xchg
fsub
or
xchg
cmp
mov
push
fstps
sbb
mov
aad
jecxz
les
cld
movsb
test
mov
das
inc
es
out
out
aam
ja
jb
jns
inc
ret
int
or
es
or
pop
xor
xor
in
fcmovb
mov
sub
insl
push
pop
not
les
inc
jmp
sbb
push
lods
idiv
add
mov
scas
lea
jno
add
in
int
sbb
sbb
es
and
sbb
sbb
mov
movsl
jmp
and
popf
or
in
pop
arpl
jle
addr16
adc
sub
pop
subb
mov
mov
sub
dec
xor
jmp
dec
mov
xor
sti
sub
insb
and
cmpsb
xchg
adc
jg
shrb
jae
cli
sub
fdivrs
jge
adc
sti
enter
ljmp
xchg
jo
dec
stos
jmp
aas
mov
jl
rolb
fisttpll
dec
cwtl
pop
jp
repz
nop
inc
add
daa
sub
inc
idiv
push
jp
out
lods
xor
aam
scas
ja
mov
push
pop
incb
scas
int
mov
aad
inc
movsb
fs
js
sbb
rcr
mov
addl
sbb
push
popf
cmp
inc
push
xor
jae
pushf
sbb
inc
leave
xchg
and
clc
mov
add
shrl
movsl
nop
mov
in
pop
hlt
mov
lea
cmpsb
dec
shll
in
lret
xchg
lahf
sarb
imul
xchg
jno
scas
in
sar
mov
mov
push
lods
jae
mov
adc
cli
jae
out
pushf
in
ljmp
sub
xor
data16
add
scas
idivb
hlt
outsl
jae
push
ficomps
cs
lea
jno
test
fisttpl
scas
aaa
adc
sti
and
xchg
push
int3
pop
repnz
fwait
lods
leave
adc
out
stos
mov
inc
pushf
mov
cmpsl
inc
test
imull
add
lock
ja
sbb
jge
rcl
sbb
enter
xchg
movsb
loope
pop
shll
mov
pop
cltd
xchg
or
int3
adc
inc
dec
sub
adc
cltd
and
cmp
cmc
mov
int3
mov
push
jge
bound
rcrb
pop
jbe
inc
aad
cli
mov
sbb
pop
mov
xchg
xor
jnp
ja
pop
cld
dec
adc
pop
pop
inc
and
fsts
orl
inc
mov
rclb
data16
outsl
js
shrl
inc
outsb
or
or
xchg
sub
bound
clc
sbb
aas
cmp
xor
pushf
mov
inc
enter
ds
push
mov
lods
notb
jne
mov
mov
jo
in
mov
iret
adc
pop
mov
inc
data16
mov
ficomps
inc
lahf
fwait
loopne
arpl
push
insl
imul
fs
jl
jo
ret
in
sbb
sub
sub
das
lahf
dec
call
sbb
xor
push
dec
icebp
sbb
add
scas
dec
test
xor
mov
repnz
imul
or
mov
xor
shrb
and
mov
pushf
shll
lock
inc
addb
inc
jo
repz
out
jmp
mov
inc
cwtl
sbbb
pop
leave
xor
cmp
jb
stos
mov
and
or
das
adc
addr16
and
insb
mov
jg
xor
mov
jnp
mov
and
xchg
fwait
push
xchg
xor
fists
mov
inc
mov
repz
sahf
or
sbb
jp
lcall
jl
cmc
imulb
popf
pushf
add
mov
jp
stos
stos
loope
cmp
xor
fwait
movsl
add
movsl
mov
xor
lea
sub
cltd
mov
mov
das
shlb
mov
lock
mov
xchg
cmc
xchg
adc
filds
ret
data16
pusha
icebp
hlt
push
add
dec
scas
negl
mov
fwait
jge
loopne
sub
lret
lcall
lahf
xor
inc
cmp
stos
cli
sbb
jbe
jbe
xor
jg
pop
repz
nop
mov
mov
frstor
adc
and
mov
pop
adc
jne
movsl
es
ret
popa
jmp
test
idivl
add
and
cmp
fdivr
and
rcr
sub
andb
jle
push
int3
push
push
out
ret
scas
sbb
cltd
or
mov
push
outsb
push
data16
enter
and
sbb
es
or
test
add
sbb
mov
sub
cwtl
jo
mov
fnstsw
dec
mov
lcall
pop
push
mov
push
dec
cltd
mov
mov
testl
andl
inc
stos
xchg
das
loop
and
mov
sub
push
xorl
int
pop
in
lea
jmp
rcrw
xor
int3
mov
call
jbe
adc
ds
jns
mov
mov
jb
jmp
jmp
test
jbe
mov
jge
repz
pop
mov
dec
sarl
decl
rol
test
in
mov
lea
inc
push
mov
out
jl
add
out
sub
enter
movsb
test
jp
aad
add
and
inc
pop
out
int3
mov
push
fwait
test
movsl
pop
mov
or
popf
insl
aad
lea
push
jmp
ja
mov
ficoml
add
xchg
cmp
xor
out
or
pop
sbb
iret
cmp
sub
cmp
imul
push
test
mov
ds
adc
lods
dec
scas
inc
pop
or
inc
js
mov
cmpsl
mov
pop
div
mov
add
es
xor
xor
daa
outsb
xor
xor
adc
xchg
imul
jns
imul
push
ds
adc
xlat
js
aad
arpl
into
out
jge
out
repnz
adc
pushf
aas
popa
pop
stos
rolb
xchg
in
mov
xchg
sbb
inc
mov
pop
popa
mov
push
les
pop
sub
mov
cltd
fldcw
orb
stos
movsl
in
aam
xor
or
or
pop
inc
cmp
dec
pop
fmull
mov
in
popf
mov
add
or
repz
pop
lahf
icebp
popf
xchg
and
sahf
pop
or
in
lea
xor
mov
lcall
push
lcall
sbbb
aaa
sbb
push
lret
push
sbb
sub
jns
or
mov
test
and
cmp
fnstenv
adc
xchg
add
lcall
in
cmc
int
add
enter
jbe
insb
push
mov
ds
xor
popa
or
and
pop
inc
insb
mov
loopne
insb
adc
sbb
xchg
sahf
lods
out
repnz
in
in
out
jnp
std
rcl
mov
sbb
fwait
xchg
inc
sahf
add
xchg
ret
scas
movsl
ret
push
mov
xchg
out
or
cmp
adc
push
adc
xchg
andb
daa
xor
out
lds
clc
pop
add
cli
lea
xor
cmp
jae
mov
lret
xchg
std
lock
or
add
adc
dec
shrb
test
jge
rcr
xchg
mov
add
pop
mov
pop
add
sub
or
ret
inc
lcall
sbb
pop
cmpsb
lret
or
cld
out
rcrb
jle
pop
pop
insl
mov
xchg
mov
inc
pop
xchg
aad
cli
mov
xor
mov
ret
xchg
mov
shl
or
sbb
in
and
adc
xor
imul
add
inc
pop
negb
fldenv
add
lcall
je
leave
jo
cltd
inc
sub
push
shll
mov
enter
cmpsb
fldl
xchg
fwait
dec
xor
pop
mov
dec
cltd
ljmp
pop
xchg
xchg
data16
lds
rcr
cs
sbb
and
cli
xchg
pop
clc
sub
push
add
sbb
out
and
loop
cmpsl
repnz
sub
adc
mov
mov
pop
inc
ja,pn
arpl
add
daa
mov
aad
sub
mov
rcrb
clc
adc
cmp
xchg
jno
inc
sti
lds
shl
loop
adc
sbb
sbb
das
enter
movb
test
mov
pop
mov
insb
in
mov
sahf
hlt
and
ds
or
pop
xor
imul
jg
sub
fchs
iret
daa
and
add
xchg
pop
pop
add
mov
outsb
pusha
add
mov
cmp
scas
xchg
in
push
data16
scas
xor
rcrb
out
mov
ret
jns
mov
aam
or
jl
mov
inc
and
pop
shll
clc
mov
jecxz
pop
and
lods
sub
jl
sub
xor
lods
sti
push
mov
pop
inc
add
les
ljmp
adc
pop
and
repz
xor
add
add
mov
mov
sub
and
out
and
js
test
xor
inc
imul
in
lea
push
xchg
ret
dec
mov
cmpsb
mov
fldcw
lea
ret
add
iret
cltd
pop
inc
xchg
pusha
cli
mov
mov
xchg
add
pop
movsl
mov
out
scas
fstp
cwtl
cmp
sti
aad
icebp
add
cmp
inc
stc
jns
mov
insb
adc
data16
pop
bound
movsb
aam
ror
xor
mov
pop
nop
jnp
inc
jb
lret
pop
aad
scas
gs
pop
sbb
ljmp
jge
cmp
cld
jb
stc
mov
into
and
cld
and
cmp
lock
mov
or
xor
dec
jo
loope
xor
mov
imul
loopne
inc
and
out
lock
mov
mov
adc
cmc
je
sub
int
or
test
iret
or
pop
es
jp
std
sub
inc
insl
xchg
or
lcall
pop
or
or
xchg
xchg
les
lods
test
cmp
mov
test
imull
adc
iret
pop
push
fiaddl
or
pop
jae
push
outsl
cmp
ss
stos
push
xchg
pop
pop
mov
mov
push
push
adc
pop
push
call
push
adc
filds
enter
ljmp
ja
and
inc
xchg
je
jo
cmp
cmp
push
inc
lock
jp
lret
push
mov
das
adc
daa
push
fistpll
inc
mov
imul
insb
pusha
cmpsl
mov
lods
sub
arpl
std
ds
or
mov
test
pop
inc
mov
insl
xor
rorb
cmp
mov
inc
dec
in
jge
xchg
cmp
jp
call
shrb
neg
xchg
xor
sahf
rdmsr
pop
jb
jge
sub
jmp
rcr
out
and
inc
gs
jae
lds
je
out
aaa
fcmovu
and
popf
inc
pop
adcb
sbb
pop
out
sbb
add
pop
cwtl
ja
nop
push
repnz
hlt
mov
xchg
cmp
add
mov
mov
jmp
test
adc
out
or
aas
ss
movsb
iret
mov
jo
sbb
inc
negl
cmp
jno
cmp
imul
and
and
test
mov
in
ficomps
dec
sarb
out
dec
push
stc
sti
lock
add
addr16
rcl
lret
jnp
xor
sub
iret
mov
cltd
flds
lds
int
xchg
sub
sub
and
leave
push
sbb
dec
jl
push
es
lcall
mov
jno
mov
xor
inc
mov
mov
inc
in
xor
mov
cmp
push
cmp
out
pop
subb
mov
icebp
in
bound
or
std
inc
ret
std
xchg
mov
pop
dec
in
cmpb
lods
xchg
movb
popa
pop
loop
cmp
push
es
push
sub
fs
fwait
xor
rclb
jnp
push
adc
adc
iret
jecxz
dec
notl
fst
mov
popf
pop
pop
xor
roll
adc
jae
call
mov
pop
fiaddl
aad
or
xor
adc
dec
arpl
xor
pop
scas
verw
testb
std
dec
shr
shrb
into
pop
cmp
or
inc
outsb
mov
sub
ja
sbb
bound
or
fwait
push
and
cmpsb
jnp
add
repz
sahf
js
dec
lret
rcr
fwait
mov
int3
cltd
inc
mov
test
fcmovnb
call
dec
lahf
lea
or
popl
mov
fldcw
fdivrs
xor
xchg
push
mov
mov
lret
sbb
ds
out
xchg
icebp
int3
js
jp
xlat
imul
popa
mov
out
sti
dec
jne
hlt
scas
addr16
in
push
sbb
mov
and
cmpsl
pop
dec
test
and
sub
xchg
dec
xchg
sub
fwait
dec
push
jmp
cmpb
out
push
mov
mov
ja
leave
pop
push
popa
fldz
je
outsb
lahf
rol
ljmp
shl
mov
repz
repnz
fisttpll
scas
jg
aas
pop
adc
push
mov
adc
xor
mov
mov
add
out
loop
mov
jg
sub
mov
outsl
in
jns
and
and
outsb
mov
addr16
std
insl
fs
jo
add
iret
dec
repnz
adc
or
aas
mov
mov
aas
pop
cmp
arpl
fs
and
cwtl
in
and
adc
jnp
shll
push
lds
std
insb
leave
push
adc
pop
rclb
xchg
daa
xor
sbb
call
outsb
lcall
inc
or
lahf
shll
mov
jbe
pop
xor
arpl
ss
loope
pushf
or
mov
insb
in
dec
nop
outsl
cmpsb
in
pushf
pop
mov
je
dec
push
fidivrs
ret
aad
jp
stos
loope
testb
pop
dec
jle
sbb
lcall
test
shrl
lahf
adc
sbb
mov
pop
sub
jno
or
out
repz
sub
dec
xchg
rorb
std
jmp
sti
xchg
mov
aam
aaa
adc
cs
jle
inc
pop
stos
jno
inc
xchg
and
adc
bound
addl
nop
jnp
or
scas
cld
mov
push
jle
cltd
out
loop
sbb
or
fstpt
js
jne
mov
popf
pop
add
mov
mov
push
push
gs
and
mov
jb
ret
inc
dec
inc
out
sbb
fs
mov
jmp
adc
jne
iret
shll
inc
imull
or
lods
add
xchg
aas
outsl
insb
fsubr
test
and
mov
out
popa
jle
outsl
mov
and
int3
stos
jge
hlt
test
insb
jp
iret
test
push
cmp
sbb
add
int3
scas
pop
stc
dec
flds
cmp
jl
cmp
filds
inc
ret
addl
or
jge
mov
jnp
in
inc
int3
loope
bound
xchg
je
add
xchg
nop
and
fs
jmp
adc
mov
psrld
inc
xor
cmp
stos
maskmovq
testl
mov
fucomi
data16
lock
sub
mov
movsl
xchg
mov
jmp
add
pop
or
cwtl
pop
out
mov
stc
jl
push
fsubp
imulb
adc
ficomps
je
pop
in
cwtl
sub
insb
xor
fmuls
fisubs
xchg
pop
push
add
movsl
js
sub
dec
ja
and
imull
in
jb
arpl
dec
pop
mov
and
or
xchg
and
inc
jns
mov
pop
imul
aad
jp
and
xchg
add
xchg
mov
fxch
jmp
imul
xlat
lea
add
cmpsb
push
inc
cmp
in
test
repz
cs
sbb
pop
push
movsl
fwait
rcl
in
aaa
or
lret
push
dec
fistps
cmpsb
fsubrs
xchg
rcr
mov
mov
and
xchg
divb
add
lds
mov
pushl
fs
cmp
jg
loop
loop
push
ud0
lds
fsub
fstpl
daa
shll
cltd
pop
sbb
mov
mov
jnp
jle
inc
std
movsb
pop
out
jmp
add
cld
mov
ret
pop
cld
dec
or
pushf
jle
adc
mov
int
mov
in
push
mov
inc
loop
jne
mov
jle
dec
mov
out
ret
sub
inc
inc
addr16
and
inc
test
iret
test
inc
ljmp
cmc
mov
stos
ss
cmp
popf
mov
stos
popl
loop
xchg
or
sub
mov
ret
adc
in
and
add
outsb
into
xchg
mov
test
pop
stos
mov
or
loope
mov
lcall
inc
pop
hlt
negl
inc
icebp
mov
pop
fnsave
xchg
movsl
into
mov
pop
sahf
out
std
pop
loope
test
pushf
mov
ss
addl
jg
xchg
add
outsb
adc
fldl
inc
in
push
ficomps
xchg
pop
std
jmp
adc
push
int3
mov
xchg
inc
lcall
fmulp
inc
mov
or
cmp
lods
test
out
xchg
loop
xchg
ljmp
pop
sti
push
mov
hlt
int
in
aam
fsubl
sub
sbb
out
in
mov
mov
sub
dec
sbb
bound
mov
mov
nop
ss
and
in
xor
pop
jnp
inc
cmc
push
pop
fisubl
fcmovb
sbb
push
clc
sbb
int
jo
sbb
sbb
push
mov
imul
lods
das
lock
outsb
cmp
sub
xchg
shlb
test
lods
jg
repnz
pushf
repnz
jl
or
into
pop
xchg
sbbb
testb
mov
hlt
sub
push
adc
fisttpl
sub
hlt
jp
and
mov
pop
lret
lret
sbb
in
cmp
inc
mov
pop
pop
stos
xor
stos
jnp
fyl2x
sub
pop
lock
lds
fidivrl
mov
push
cmp
adc
xor
gs
mov
xor
inc
push
decb
out
jbe
mov
jb
or
popf
loop
dec
sbb
je
mov
cli
dec
sub
or
sarb
xchg
mov
mov
sti
shlb
mov
mov
lret
outsl
sbb
ja
lods
mov
xor
in
gs
bound
lret
mov
scas
mov
cs
jb
test
jmp
ss
cmc
bound
nop
lret
add
add
sbb
push
push
ret
mov
lahf
xchg
popa
xchg
nop
add
addr16
je
pusha
mov
mulb
inc
jns
out
adc
icebp
jo
mov
inc
es
gs
mov
jns
ret
cmc
mov
mov
mov
sbb
or
mov
push
ret
cmp
ret
xor
push
mov
xchg
xchg
inc
loop
jne
in
mov
sub
in
mov
xchg
rcrl
imul
dec
cld
mov
js
out
fdiv
and
fs
cmp
popf
mov
pusha
mov
inc
jns
mov
cmp
or
gs
jecxz
inc
cli
push
sub
jle
add
lret
sub
inc
or
pop
andb
test
inc
jle
mov
xchg
hlt
jl
mov
popf
movl
sysexit
gs
inc
je
js
add
fnstenv
in
mov
mov
mov
mov
int3
adc
cs
inc
xor
enter
cmp
mov
scas
mov
aaa
jmp
push
dec
fistpl
xchg
loope
fstps
add
cli
pushl
xchg
enter
ja
mov
jae
imul
data16
daa
push
sahf
fimull
std
lahf
xchg
dec
ret
repnz
in
loop
or
xor
ja
lret
scas
mov
or
sbb
call
inc
in
mov
mov
pop
int3
xchg
divl
dec
imul
push
sub
cmp
cmp
pop
cmp
arpl
mov
cmpl
jle
pop
mov
mov
jo
xchg
pop
cmp
jae
cli
mov
mov
fidivl
sbb
push
push
sti
fisubs
decl
das
pusha
mov
cmovb
xor
test
cli
test
insl
inc
sti
ret
add
mov
mov
mov
push
sbb
sbb
dec
pop
sub
xor
sbb
nop
mov
jg
or
and
push
dec
adc
jle
movsb
dec
mov
add
mov
out
jo
push
sbb
outsb
mov
mov
mov
fsub
cmp
test
pop
jbe
jge
cmpsb
stc
outsb
sub
pop
fstl
push
inc
fdivrs
or
fiadds
sub
push
fs
push
inc
xchg
fdivl
dec
movsb
cmp
loop
adc
xchg
xchg
aas
cmc
dec
int
xchg
add
and
cmp
adc
adc
cmp
out
cli
mov
imul
push
enter
jae
test
jp
sub
push
add
lahf
inc
fsts
fisubl
xchg
sarb
jbe
xor
ds
loopne
mov
dec
sbbb
sub
dec
mov
add
in
in
mov
out
mov
adc
out
lods
repz
xor
push
add
fs
push
jg
add
stos
add
mov
jp
sub
adc
or
and
scas
test
mov
mov
cmp
icebp
sub
dec
scas
cmp
xor
call
sbb
fs
subl
xor
les
movsl
sbb
pusha
dec
scas
push
jle
mov
push
mov
sub
sub
sbb
fildl
data16
iret
ret
and
inc
icebp
dec
mov
out
je
out
aas
cld
cmpsb
sub
cmp
and
mov
pushf
sahf
testb
push
mov
lock
mov
jb
cmpl
xor
xor
fadd
jns
push
and
push
icebp
scas
sub
mov
mov
xor
dec
or
mulb
add
flds
mov
mov
cmp
sbb
test
sub
fcmovnbe
lahf
mov
and
lret
inc
movb
mov
fiadds
xlat
jo
and
jp
cld
idivb
cld
push
xorl
xor
mov
or
std
out
lea
mov
das
dec
jns
aas
xchg
shll
sbb
mov
mov
aas
push
sub
aad
in
movsb
fisubrl
sub
mov
jge
aaa
mov
ja
pop
fnsave
sub
xchg
pop
cmp
mov
push
xchg
cwtl
mov
jge
add
mov
mov
xchg
xor
pop
in
adc
int3
xor
fldcw
jp
fcompl
cmp
mov
js
inc
push
ljmp
in
xor
lods
out
ja
es
sub
rorl
jne
movzwl
add
mov
pop
push
dec
dec
xor
or
lods
lcall
arpl
fcmovnb
jge
enter
cmpsl
enter
push
push
cmp
inc
rcll
int
add
repz
mov
xchg
js
out
ss
scas
sbb
xchg
loop
xchg
xor
cmpb
dec
sub
mov
jmp
jp
ljmp
push
add
iret
fisttpll
mov
mov
imull
mov
mov
jne
xchg
fstpt
ss
sub
or
push
xchg
insb
cmp
outsl
mov
aad
xor
mov
shl
popf
lret
pushf
clc
jmp
sbb
lea
rcrb
cmc
xor
adc
push
out
adc
out
shll
or
xchg
out
sub
and
ljmp
dec
fidivs
push
xchg
loope
ds
js
cmp
mov
aaa
dec
dec
in
insl
xchg
or
push
pop
and
repnz
lea
jle
stos
or
add
jne
loopne
push
sub
push
add
mov
and
or
pop
sbb
jno
or
lds
push
mov
fbstp
pop
mov
push
gs
or
cmpb
push
push
lret
pop
and
adc
out
mov
insl
sahf
xchg
insb
nop
repnz
adc
pop
pushf
popf
cmp
push
pop
or
sbb
ja
enter
clc
cmpl
mov
mov
mov
fldcw
xchg
sbb
inc
inc
aad
pop
test
test
xlat
and
mov
mov
test
push
cmp
leave
jnp
and
xchg
stc
cmp
movsl
std
jne
pop
fidivs
jmp
xchg
xor
mov
inc
je
and
sbb
fsubl
outsb
push
inc
outsl
ljmp
mov
shrb
out
push
push
enter
roll
mov
lea
shl
enter
mov
or
push
mov
pop
js
jo
test
xor
sbb
in
jmp
cwtl
push
inc
pop
cmc
hlt
jp
cmp
js
cmp
xchg
push
iret
jle
add
xchg
or
ljmp
jb
aas
pushaw
div
add
xor
pop
add
pop
test
add
cmp
out
xchg
shll
xor
subl
sbb
jo
sbb
out
pop
popa
dec
xlat
jl
push
xchg
loopne
dec
pop
cmp
stc
cmp
add
mov
sub
leave
adc
repnz
stc
and
mov
addl
or
mov
bound
ljmp
mov
pop
ret
dec
imull
aad
mov
dec
rcl
xor
xchg
push
fildl
lahf
mov
mov
movsb
and
cmp
ja
xchg
leave
out
mov
ds
aas
mov
jae
dec
daa
adc
sti
bound
insb
rolb
jne
jne
pop
fistl
out
call
xchg
add
repnz
xchg
adc
cmpsb
inc
xchg
jne
xor
leave
std
ss
jp,pn
add
mov
cmp
nop
ss
add
icebp
shll
xchg
jnp
sub
xor
xor
ret
mov
mov
stos
mov
fiadds
in
mov
and
and
dec
or
mov
movsl
push
out
es
roll
ss
int
sub
xor
cwtl
lea
push
sbb
adcl
xor
cli
fstps
daa
xlat
jp
cmp
outsl
mov
mov
scas
mov
inc
cmp
cmpsb
enter
sti
popl
test
aam
in
aad
or
lret
add
xchg
fnstenv
adc
sub
sbb
call
test
ret
addl
and
push
test
adc
shlb
call
outsb
dec
lea
push
pop
push
dec
pusha
rclb
mov
xor
inc
add
push
mov
cmp
mov
rcrb
into
std
xchg
mov
or
cmc
aas
add
addb
movsl
jb
stc
cld
nop
lret
push
notl
adc
shr
pop
insl
movsb
lret
jmp
jne
add
pop
les
mov
jg
inc
insb
out
and
addb
mov
nop
jg
pop
adc
adc
fcmovu
test
rcr
jmp
inc
sub
scas
pushf
lahf
lods
imul
addr16
jge
pop
nop
popf
lea
push
jg
or
hlt
push
out
lock
xchg
fiadds
pop
cmpsb
repz
sub
test
in
pusha
add
lock
sub
andb
xor
xchg
or
popw
pop
stc
jne
push
xor
push
imul
xchg
xor
js
cmp
and
jb
fcmovne
push
andb
push
sub
cli
jb
popa
jle
cmp
and
jecxz
or
xor
cltd
std
ret
fldcw
pop
pushf
pop
nop
loop
popf
mov
ret
jns
mov
iret
mov
and
les
dec
jmp
xlat
std
clc
xchg
loope
cmp
add
lret
and
jle
mov
mov
out
aam
aad
clc
pop
int3
add
cwtl
das
es
das
inc
dec
and
dec
mov
push
pushf
je
mov
lods
test
cli
and
xor
fs
xchg
outsb
std
add
cmp
lret
mov
pop
jle
cmc
push
cmp
adcb
stc
mov
xchg
or
imul
jnp
clc
enter
rcr
sarl
and
or
jnp
dec
mov
lods
sbb
pop
sub
jne
xlat
test
add
stos
mov
push
adc
push
int3
adc
add
sub
mul
inc
repnz
and
sub
pop
cmp
jmp
arpl
adc
aad
scas
aam
bound
lret
sti
push
ss
mov
orb
gs
movsb
push
push
movb
imul
lret
inc
fidivrl
lahf
repnz
bound
out
sarb
and
jge
dec
subb
dec
aaa
xor
cmp
js
iret
aad
and
bound
sbb
xor
outsb
pop
stc
dec
sarb
ror
fcomps
adc
cmp
std
pop
mov
mov
je
cmp
mov
scas
adcb
nop
pop
ja
lea
test
outsl
jp
mov
enter
inc
cmpsl
sub
xor
mov
jns
pop
sbbb
or
or
jge
in
les
push
rcll
lock
nop
lret
popa
stos
pusha
int3
js
jg
add
repnz
sbb
popf
fstp
xor
std
fwait
imul
inc
out
and
fsubrs
in
in
and
adcb
xor
add
mov
mov
or
ljmp
call
shll
cmp
mov
out
sbb
or
out
sub
cmp
fwait
jns
imul
ja
addr16
mov
cmp
cmp
xchg
fwait
push
nop
testb
std
push
mov
cltd
fwait
add
mov
xorb
jg
jnp
aas
cld
es
adc
out
ret
xor
sub
adc
rcr
lock
adc
mov
mov
lds
mov
mov
mov
out
fbld
aad
rolb
fldcw
jp
repz
fisttpl
ljmp
fbld
inc
xlat
gs
insl
push
and
push
xchg
cmp
ss
mov
cmp
rcll
sbb
push
push
sub
mov
jmp
or
lea
std
push
xor
inc
mov
cmc
xchg
hlt
popf
and
nop
je
push
xchg
mov
mov
popa
sub
and
xor
lods
sub
xlat
lods
lock
les
add
or
mov
sub
or
mov
pop
in
lock
cmp
xchg
jo
sbb
outsb
aas
loopne
test
pop
xor
adc
dec
dec
icebp
notb
lock
popf
dec
and
daa
call
xchg
rcrl
outsl
xchg
lds
rcrb
pop
inc
fbld
and
in
sbb
aad
sub
ficomps
inc
jb
dec
nop
pop
xor
push
lcall
and
dec
dec
cs
push
xorb
push
sbb
pop
dec
cmpsb
scas
das
test
inc
out
push
jns
sbb
sbb
ret
pusha
pop
in
mov
in
mov
aad
mov
rorb
and
arpl
lret
sbb
push
aaa
mov
mov
jge
js
inc
mov
push
mov
pop
stc
out
scas
jo
cli
cmp
clc
arpl
xor
dec
push
adc
les
xchg
sahf
ja
shll
cltd
xchg
or
mov
xchg
cltd
sti
add
mov
sbb
xchg
pop
hlt
push
rorb
clc
orb
stc
repz
std
pop
rolb
out
jne
pop
and
xor
rcrl
pop
pop
pop
outsb
jmp
mov
pop
js
scas
outsl
push
add
push
int
sub
cmpsb
adc
cmp
fidivs
sbb
fisttpl
pop
jecxz
mov
in
and
sub
adc
loopne
roll
xor
xchg
adc
outsl
lcall
jmp
inc
ljmp
aad
clc
xchg
ljmp
and
fwait
call
xor
dec
inc
es
dec
jo
clc
and
dec
cltd
lret
jle
or
pop
call
les
and
stc
nop
mov
pushf
mov
inc
and
inc
lods
and
jbe
sbbb
sub
sbb
inc
sbb
icebp
outsb
js
cmpb
subb
push
pop
cs
int
aaa
ss
sbb
cmp
sub
xchg
jl
jmp
adc
dec
and
adcb
cmc
repz
cmc
insb
and
jo
lds
inc
shll
xchg
ss
xorb
pop
into
test
mov
cmp
lea
xor
out
or
rolb
xor
mov
cmp
pop
pop
flds
neg
inc
add
int3
jb
daa
xlat
or
add
movsb
cmc
sbb
stos
aad
clc
mov
fistl
filds
or
mov
cltd
push
int3
sahf
and
jb
movsl
cmpl
lcall
sbb
inc
imul
fwait
enter
cmp
push
xlat
push
or
push
push
pop
ret
dec
adc
cmpsl
insl
add
dec
iret
movsb
dec
ss
xchg
ja
adc
jnp
insl
imul
add
je
cmp
sub
insl
cmp
std
in
out
add
mov
std
and
notl
jge
cmp
dec
fdivl
lret
adc
xor
cmp
jg
push
jo
aam
mov
push
rcr
jmp
sub
mov
loop
pop
sbb
mov
jo
cmpsl
scas
pop
cwtl
jb
push
mov
cld
mov
sub
mov
pop
mov
movsl
enter
lods
jo
sahf
aas
mov
andl
nop
jp
adc
xor
mov
sbb
in
in
fidivs
inc
lds
pop
pop
pop
mov
je
outsb
sbb
sub
aam
sub
rcrl
jle
clc
xor
in
loop
lods
test
mov
inc
pop
cmp
lahf
adc
in
mov
lds
cmp
cld
jecxz
std
push
inc
hlt
or
inc
pop
ja
or
ja
push
mov
test
sbb
pop
sbb
mov
cmc
out
mov
jecxz
popf
or
psubq
loope
mov
xchg
cmp
adc
popf
jo
mov
jbe
xor
out
arpl
icebp
cli
push
sub
add
ja
lahf
push
push
rcrl
pop
cli
mov
ret
or
je
div
ret
ja
push
xchg
adc
push
dec
imul
movsb
std
dec
add
jge
shll
loope
int
out
or
cmpsb
xlat
mov
in
or
sbb
adcl
into
cltd
dec
cwtl
rorl
push
ja
and
sbb
cwtl
mov
adc
rorb
test
jo
push
fs
insb
inc
dec
cmpsl
jp
jno
xchg
dec
gs
mov
mov
adc
test
or
ds
sbb
push
jb
lcall
cmp
mov
dec
shlb
sub
jge
pop
inc
dec
loop
xchg
add
in
cmp
inc
mov
mov
inc
nop
rorb
cmp
fisttpll
sbb
cli
pushf
test
insb
sub
mov
mov
loop
inc
jbe
jne
sbb
mov
ja
xchg
xchg
lods
std
fbld
mov
jbe
fs
cmp
lcall
xor
aam
or
subl
cld
add
addl
pop
pusha
iret
jmp
test
fldl
es
xchg
dec
push
xlat
daa
xchg
mov
and
iret
incb
lock
cmc
dec
add
insl
mov
xor
dec
ret
cmpsb
adc
cld
popf
movsl
push
xchg
sub
js
loope
jge
aad
jnp
in
fdivs
xor
sub
popa
mov
xchg
dec
movsb
push
pop
fs
lods
and
stc
sbb
add
mov
popf
lcall
loop
jl
call
jnp
xlat
test
adcb
pop
fnstsw
lods
adc
pop
in
add
addr16
inc
cmpsb
mov
or
sub
fldl
sbb
adcb
cs
movsb
adc
stos
shr
ljmp
adc
shll
inc
outsb
mov
into
cltd
out
popa
pop
adc
icebp
cmp
fcoms
cmc
incl
xchg
mov
cwtl
lret
mov
fsubp
pushw
lods
push
push
mov
enter
jp
add
pop
rcr
shlb
mov
aaa
lods
push
ret
xchg
outsl
mov
mov
inc
mov
or
cmp
or
gs
arpl
cmp
lods
pop
pop
inc
sbb
scas
movsl
xchg
mov
sarb
xor
call
mov
cld
jmp
dec
outsl
adc
bound
jmp
xor
cltd
jb
mov
cli
mov
ret
pop
inc
jecxz
and
jmp
gs
in
ds
popa
imul
jno
pop
jp
xor
cmp
roll
dec
push
xchg
scas
jno
inc
jle
cltd
push
mov
into
movsb
icebp
insb
je
sbb
dec
lret
xor
cltd
cmp
aad
aad
loope
mov
dec
fsubs
fimull
loop
dec
adc
je
cmp
and
push
or
inc
mov
insb
mov
rclb
mov
shll
arpl
cmpsl
pusha
mov
xchg
sbb
cmp
pusha
rcll
jb
mov
popa
orl
adc
pop
repz
mov
bound
ret
add
stos
test
stos
cmp
sbb
rolb
push
test
jp
stos
aas
pushf
inc
lock
shlb
sbb
jle
in
lret
mov
pop
adc
or
jae
add
mov
jb
add
mov
mov
or
lods
adc
shlb
cmp
pop
popa
or
out
jae
push
lret
imul
push
push
pop
inc
jno
mov
push
in
sbb
out
cwtl
sbb
in
lcall
dec
cmc
mov
xchg
aaa
sbb
ret
loop
and
pushf
xor
push
arpl
xchg
xor
xchg
orl
xorl
push
pop
sub
pop
cmp
aas
sub
ja
push
dec
cmp
lret
mov
outsb
dec
or
xchg
movsb
push
xchg
sti
nop
xchg
cmpsl
mov
xchg
rcrl
das
cmpl
mov
inc
xor
adc
rcll
add
out
les
cwtl
mov
mov
inc
dec
mov
adc
ds
jnp
add
push
xor
rclb
jne
loopne
cmp
dec
xchg
cmpsl
lods
sub
sbb
das
insb
stos
fs
dec
adc
pop
loop
cmp
add
jno
cltd
mov
das
mov
cmp
icebp
ljmp
mov
mov
add
and
movsl
clc
mov
lcall
sbb
rcrb
loop
dec
jmp
lea
icebp
cltd
insb
test
sbb
cltd
mov
enter
aam
out
add
cmpb
mov
das
mov
movsb
pop
jae
push
mov
adc
pop
inc
mov
mov
sbb
add
daa
in
rolb
xor
adc
push
fldpi
js
mov
stc
push
xor
loopne
nop
jns
pop
jmp
or
pop
pop
push
pop
mov
mov
sub
xchg
std
inc
cli
cmp
mov
movsl
out
je
lret
xchg
aam
jecxz
inc
add
xchg
mov
mov
jbe
sbb
clc
jnp
jns
pop
mov
dec
lret
lret
mov
loope
and
and
repnz
sti
ljmp
ljmp
mov
adc
mov
xor
add
scas
xor
sub
mov
lock
addl
pop
cmpsb
cmp
lret
mov
jb
daa
int3
out
sti
fadds
iret
lahf
scas
jl
mov
jle
scas
pop
inc
sqrtps
add
mov
es
in
aad
dec
lods
sub
pop
mov
and
mov
movsb
dec
cmc
pusha
xchg
inc
rcll
imul
inc
sbb
aas
aas
and
fnstsw
repz
mov
xor
cs
or
adc
hlt
push
fs
jecxz
out
stos
divl
or
dec
sbbb
call
or
lahf
or
and
mov
loope
pop
stos
and
sarb
dec
sub
ret
mov
jmp
std
cmpsb
or
inc
mov
mov
pop
jno
jg
push
ljmp
bound
sbb
xor
xor
push
mov
push
and
imul
sub
push
mov
add
rcrl
neg
pop
jp
sub
push
lods
and
xchg
inc
and
lock
scas
sub
and
sub
or
addr16
dec
and
push
nop
rorl
fwait
call
mov
in
push
and
insb
lods
jp
sbb
mov
or
mov
fistps
jge
sbbb
jge
and
icebp
push
fs
notl
in
adc
mov
ficomps
lcall
js
mov
mov
push
and
lods
cmp
or
ret
loopne
lcall
fidivrs
loope
push
xchg
adc
and
xorb
xor
adc
pop
xchg
xchg
mov
out
jp
dec
repnz
test
clc
movsl
sub
int
adc
shlb
sbb
test
cmp
icebp
pop
jb
xchg
pop
ljmp
mov
in
lahf
dec
pop
std
sub
in
insb
or
aam
and
lcall
lods
lahf
pop
xchg
and
pop
dec
fisubrs
lcall
and
dec
rolb
lods
cmp
leave
outsl
push
xor
test
addb
pop
rcr
mov
mov
mov
stos
adc
stos
idivb
loope
lea
and
leave
fnstenv
and
aaa
cli
push
into
fcom
mov
mov
mov
pop
inc
dec
popf
in
or
xor
movsl
mov
sbb
shlb
scas
dec
dec
mov
jno
mov
dec
mov
xor
icebp
xchg
mov
adc
hlt
test
adc
inc
or
sahf
lcall
or
pop
sub
cld
and
leave
ss
cs
xlat
shlb
mov
sub
sti
add
jb
jns
dec
cwtl
fucom
inc
mov
mov
push
xchg
push
aaa
mov
arpl
pop
mov
jp
cmp
pop
neg
jmp
xlat
bound
or
xchg
ret
aaa
add
and
mov
mov
xchg
jecxz
fwait
mov
sbb
shl
jmp
xchg
int3
mov
cmp
sbb
mov
loope
fisubs
fs
xchg
and
xlat
cmc
iret
and
jae
inc
xchg
clc
jne
sbb
push
push
inc
mov
sahf
add
pop
add
push
mov
sub
scas
mov
loopne
xor
mov
pop
xchg
cmp
in
and
in
jge
adc
mov
mov
cwtl
nop
out
popa
mov
js
adc
outsb
cltd
jbe
xor
xchg
cmpsl
push
std
cs
inc
add
insb
notl
into
adc
jmp
inc
pushw
ja
inc
fmul
fs
out
jge
rclb
int
jp
inc
ret
push
and
cmp
ja
clc
pop
and
xor
push
outsb
dec
loopne
ljmp
sarb
ljmp
loop
adcb
adc
sub
mov
andl
test
xchg
adc
mov
xchg
hlt
mov
hlt
jae
sbbl
lods
pop
mov
cli
inc
jge
subl
cmpsl
sti
fcmovnbe
mov
insl
sbb
mov
mov
pop
cmp
adc
ret
xchg
loopne
pop
mov
pop
in
sub
push
notb
out
dec
repnz
fdivl
mov
mov
ficomps
dec
int
daa
push
rorb
pop
jecxz
dec
xor
sub
cli
cltd
fcoml
dec
orl
lret
or
fwait
dec
subb
sub
cmp
outsb
xchg
fistpl
jo
inc
inc
sub
les
or
mov
pop
dec
adc
push
test
cld
cld
addr16
mov
jb
int
inc
aaa
dec
sti
or
jae
sub
cmpsl
pop
jb
int
jmp
mov
insb
rorb
mov
mov
mov
mov
push
jne
mov
in
jecxz
movsl
fiaddl
sub
fcomp
mov
jns
andl
es
out
in
ror
stos
neg
pop
push
test
stos
xchg
repz
movsb
sahf
cmp
es
mov
shr
popa
sbb
cli
cmp
xchg
je
addr16
jns
hlt
mov
jno
mov
test
push
loopne
sti
sub
mov
xlat
cmp
jp
pop
jo
dec
inc
out
add
ja
out
mov
aas
in
bnd
enter
fistpll
push
int3
and
mov
xchg
aam
nop
and
les
in
mov
hlt
in
xor
dec
clc
ljmp
dec
mov
scas
int3
inc
pop
cmp
sbb
out
add
jnp
jecxz
mov
in
jmp
push
jecxz
aam
je
xchg
aas
xorl
pop
jle
adc
mov
push
out
mov
rolb
add
stos
sahf
push
pop
sbb
fmull
lret
push
xchg
push
push
fidivrs
loopne
dec
inc
sub
mov
orl
fsts
xchg
add
xor
dec
xor
les
lahf
inc
fsts
mov
nop
sub
dec
rcll
jne
sbb
movb
dec
inc
testb
in
or
pop
push
xor
cmp
adcl
and
mov
mov
jge
aas
imul
jae
fistpll
jo
and
daa
stc
aaa
aas
fisubl
xlat
push
into
push
ja
sbb
call
mov
adc
add
inc
adc
jno
aaa
add
daa
bound
adc
sbb
repz
inc
hlt
andl
popf
icebp
jo
notrack
mov
mov
jg
dec
sub
repz
push
and
inc
imul
jmp
add
out
cmp
ss
ret
mov
es
inc
mov
sbb
es
loopne
test
imul
sub
sub
std
and
insb
add
jns
movsb
cmc
int3
hlt
pop
fwait
imul
xchg
sub
ljmp
into
jmp
icebp
cmc
clc
stos
ret
lea
xchg
dec
test
pop
in
stc
cli
adc
in
ja
scas
ret
push
fdivs
dec
addb
inc
dec
mov
push
ljmp
dec
ja
arpl
add
inc
mulb
jmp
jae
dec
aam
outsb
add
xlat
pop
fmull
or
cmp
movsb
fcompl
ds
imul
fcoms
mov
jge
inc
adc
xchg
mov
aas
sarb
les
bound
sub
es
inc
lahf
mov
push
jmp
divl
cmp
ljmp
mov
inc
xchg
clc
sarb
xor
stos
and
inc
popa
repnz
fdivl
inc
std
ret
loope
int
cltd
push
rcl
mov
arpl
mov
adc
fmul
xor
mov
cld
jno
xlat
out
adc
cmp
outsl
xchg
add
insl
xchg
stos
insb
and
inc
cmc
loop
and
xorl
cmp
mov
out
outsb
adc
or
cmc
sbb
pop
into
push
xchg
add
sbb
enter
push
pop
mov
add
popf
mov
push
in
dec
test
push
and
cmc
loope
sub
or
dec
repnz
ljmp
es
in
jo
inc
shr
ss
lret
sti
out
cmp
ficoml
stos
cld
add
push
jg
sbb
add
outsl
inc
xor
out
mov
scas
daa
xchg
mov
lahf
push
cltd
xchg
add
or
out
in
jns
cli
dec
cmp
lock
sub
jne
mov
sub
fildll
push
lahf
sub
mov
mov
in
repnz
pop
pop
sbb
out
fisubrl
or
xor
pop
fadd
add
inc
sbb
test
mov
popa
mov
adc
cs
mov
jle
push
add
sub
mov
or
aam
lods
dec
outsl
or
jge
jle
sbb
dec
fldenv
dec
pop
ja
mov
mov
add
idivl
xchg
ret
outsl
xor
jle
jnp
jmp
pop
insl
mov
add
call
cmp
loope
push
int
jp
xchg
lds
call
fldenv
popf
repnz
add
test
push
lret
inc
popa
adc
mov
jge
fdivl
int
inc
out
mov
adc
adc
cmp
pop
or
pop
pop
sub
inc
jo
js
enter
into
or
lds
mov
das
inc
lret
sub
call
sahf
iret
jne
insb
push
sbb
pop
and
test
aaa
leave
mov
js
lods
nop
and
shlb
cmp
stos
not
and
xchg
adc
fstp
mov
adc
xchg
or
push
adc
cmpsb
leave
inc
bound
cmpsb
mov
mov
mov
int
push
outsb
inc
out
jnp
pusha
psraw
jge
xchg
sub
shl
repz
sbbb
pop
bound
xchg
mov
sbb
cmpsl
push
rcrb
cmp
test
test
ja
scas
mov
test
inc
push
sbb
cmp
add
fs
aad
pushf
ljmp
dec
imul
push
fistpll
lret
push
scas
fdivrp
add
fisttpll
xchg
xchg
and
add
cltd
pop
sbb
sbb
adc
cmp
or
cmp
sub
mov
pop
cmp
arpl
in
pop
adc
sub
mov
cmp
and
lods
insl
add
orb
mov
mov
fcoml
or
mov
sub
mov
xchg
push
divb
jge
mov
xchg
mov
jg
mov
xor
mov
pop
fwait
mov
sub
sub
fcmovu
xchg
mov
gs
gs
sahf
fistpll
pop
xchg
push
loope
inc
cmp
pop
scas
lahf
adc
es
imul
in
ret
pop
xchg
dec
xchg
and
neg
push
cmovp
inc
fdivp
pop
neg
sub
dec
nop
test
das
leave
sahf
int3
xor
aam
ss
mov
aad
sub
lods
or
arpl
loope
mov
pop
push
mov
xchg
jg
push
rorb
in
dec
push
jae
sbb
jo
mov
cmp
mov
sub
leave
mov
sarl
sahf
decl
mov
insb
std
repz
jne
push
inc
add
cmpsb
ljmp
lods
jb
cmpsl
add
xchg
addr16
xor
scas
popa
add
sbb
sub
jbe
sub
pop
mov
rcr
lret
es
bound
or
jno
jae
mov
adc
and
in
int3
call
in
lret
scas
das
add
pop
std
clc
int3
pop
hlt
mov
fidivs
jns
lods
jne
repnz
sub
insb
mov
out
inc
xchg
adc
lahf
insl
loopne
lock
pop
sub
mov
xchg
dec
sbb
lds
and
mov
iret
sar
or
or
xor
xlat
ljmp
roll
cmp
xchg
dec
mov
test
mov
lods
mov
lret
stc
dec
mov
sub
insb
aas
and
cwtl
sub
lods
pushf
pop
push
sub
sbb
xor
mov
ja
cmpsl
sub
mov
add
mov
or
int3
std
stos
jae
mov
testl
das
gs
aad
fsts
repnz
mov
or
popa
jge
fbstp
clc
sbb
cmpsl
mov
pop
int3
sub
sub
iret
subps
push
ret
mov
arpl
mov
mov
jnp
sub
fistpl
sub
jne
push
add
or
jl
fisttpl
lds
fmuls
mov
mov
xchg
notb
je
ljmp
adc
pop
mov
popa
lret
aaa
push
jo
fcoms
je
mov
orb
scas
lahf
call
fwait
fs
inc
aas
mov
adc
mov
mov
pop
mov
test
jle
inc
xchg
and
xchg
pop
add
mov
jmp
xchg
push
aad
xor
movsl
dec
adc
loop
imul
sti
test
mov
inc
aad
push
or
js
cli
and
inc
cmpsb
mov
lret
add
in
push
lahf
add
sub
or
dec
push
xchg
xchg
lret
jg
mov
je
push
movsl
mov
xor
push
cmpsb
cmpsl
mov
and
imul
mov
test
in
ljmp
xchg
lret
mov
pop
fnclex
insl
sub
orl
mov
push
jmp
andl
mov
ss
sbb
je
cmpsl
int3
divb
pop
pop
imul
sub
adc
dec
pushf
ud1
lcall
add
and
lret
mov
xor
ja
les
dec
pop
dec
cmp
fabs
jp
cmp
leave
arpl
cmpsb
sub
mov
ja
and
cs
sbb
lcall
ja
mov
fisttps
lods
push
or
sub
les
fidivl
call
cs
fisttpll
ret
adc
testb
rcll
pop
inc
lock
jl
mov
mov
sti
out
in
and
inc
add
or
inc
nop
pushf
inc
inc
sub
in
or
jl
shr
xchg
push
mov
leave
repz
or
out
clc
aaa
stc
bound
xchg
dec
xchg
cmc
out
loopne
lea
inc
add
ret
add
rcll
jecxz
mov
xchg
fimull
xor
out
xor
bound
cltd
push
and
xchg
je
inc
stc
and
outsl
or
or
or
mov
cmc
clc
sbb
xchg
into
mov
push
scas
jge
jge
idivb
mov
adc
out
imul
sub
lret
ror
and
sarb
stc
and
call
out
jb
cltd
jae
or
xchg
out
jle
fldenv
lret
push
jno
lods
jge
push
loopne
mov
jne
push
lea
and
into
inc
xchg
lcall
or
xor
mov
cltd
sarb
push
pop
fnstenv
adc
cwtl
jp
push
call
sub
clc
xchg
faddl
jmp
and
sub
push
mov
inc
ljmp
in
mov
push
xor
pop
subl
mov
mov
xlat
add
push
jmp
testb
divb
mov
aas
cmp
lcall
jg
enter
xchg
movsl
xor
cmpl
jno
xchg
sbb
adc
ficompl
pushf
sbb
xchg
out
mov
push
jp
cmp
inc
add
popa
cmovns
nop
pushf
adc
hlt
gs
mov
addr16
xchg
inc
jne
out
icebp
mov
rcrl
dec
jmp
shlb
and
add
xor
mov
or
cwtl
adc
cmp
and
cli
popl
inc
out
xchg
in
mov
lret
stc
loop
aaa
jns
ss
or
sbb
mov
scas
out
push
and
sub
sbb
push
xchg
sbb
push
scas
int3
xchg
shrl
testl
dec
xchg
jnp
add
nop
addr16
jle
xchg
mov
pop
push
sub
push
xchg
inc
aad
xlat
and
es
cli
xor
aas
js
xchg
fldenv
mov
clc
sbb
jmp
cwtl
jno
andb
cmp
adc
jmp
adc
mov
cmc
mov
dec
into
loope
mov
mov
movsb
stos
sub
ljmp
mov
cwtl
pop
jo
pop
sahf
sub
mov
ret
fwait
push
stos
je
int3
out
push
push
and
mov
cmp
and
stos
mov
insb
mov
mov
and
sub
jno,pt
fs
scas
cwtl
in
or
gs
mov
cmpsb
cmp
or
scas
call
jecxz
pop
mov
les
add
push
data16
and
loope
mov
adc
fildl
sub
inc
xlat
nop
jl
fwait
mov
adc
xor
xor
les
jb
clc
shl
cs
dec
mov
shr
xor
icebp
in
ja
xchg
ficoms
aaa
in
and
sbb
dec
out
xor
add
mov
sbb
in
in
cs
mov
pop
jne
pop
popa
movsl
in
in
xchg
imul
dec
pop
nop
inc
pop
sbb
mov
insb
xor
dec
mov
mov
aad
jmp
int
mov
dec
cmpsb
push
in
xor
outsb
add
cwtl
mov
into
jmp
jnp
sbb
pop
stos
shll
xchg
loopne
inc
xlat
clc
xor
mov
addb
shrb
out
fisttpl
iret
add
pop
dec
xor
das
xor
dec
cmc
add
jb
jne
jo
test
cmp
mov
ljmp
and
mov
insl
psrad
sub
sub
cmp
push
pushf
gs
pop
jp
bound
sbb
repnz
and
shl
dec
cltd
aas
pop
leave
dec
cmp
insl
mov
add
sub
fdivs
shrl
nop
inc
xor
pop
lahf
pushf
sbb
mov
cmc
rolb
xchg
xchg
xchg
gs
jmp
or
loope
cmpsl
or
dec
js
mov
push
imul
dec
mov
xchg
rorb
sbb
test
stos
push
sbb
imul
sti
sub
adc
mov
or
shll
dec
fwait
imul
lods
shld
mov
cmpsb
lret
icebp
cmpsl
cmp
inc
daa
mov
dec
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
sbbb
jmp
addr16
lea
dec
in
adc
sub
andl
scas
and
sbb
dec
sub
fwait
xor
popa
data16
jmp
jg
stos
ret
cmc
jp
or
and
or
xor
mov
ja
enter
pop
cld
or
pop
aaa
jo
mov
adc
addb
and
sbb
pop
andl
mov
push
fs
mov
leave
dec
xor
mov
pop
jle
add
into
lds
xorl
add
or
and
jle
jge
dec
insb
leave
out
mov
mov
jb
rcl
fnsave
pop
sbb
mov
xlat
ljmp
lods
aaa
push
out
or
mov
jbe
cmp
xchg
fdivp
xor
imul
movsb
lods
out
xchg
xor
es
sub
xchg
adc
inc
push
test
jno
mov
sub
leave
mov
jno
loope
test
or
push
in
or
or
push
out
test
mov
adc
fildll
icebp
popa
pcmpgtd
out
cmpsb
mov
bound
mov
mov
jg
xchg
sub
mul
rorl
or
daa
aaa
sub
loope
mov
sub
mov
mov
in
inc
mov
xchg
out
fdivrl
pop
fadd
in
idivb
test
mov
pop
push
cli
xor
in
adc
push
out
push
dec
mov
iret
fstpt
in
dec
xchg
loope
call
jae
ror
stc
push
fistpl
sbb
cmpsb
xchg
sbb
xor
shr
ret
fbld
mov
cmp
and
nop
aad
adc
fcoml
aaa
xchg
dec
mov
loop
test
enter
push
dec
je
jecxz
add
inc
jnp
push
in
testl
ss
fidivrl
in
jg
enter
or
pop
leave
in
out
add
sub
inc
arpl
jo
push
inc
in
out
pusha
push
rcrl
xchg
ljmp
div
rolb
inc
and
dec
fdivs
rol
pop
sbb
push
inc
int3
sub
or
adc
cmp
mov
pop
mov
add
repz
out
sbb
out
mov
or
aaa
sbb
shr
jmp
xchg
cmp
pop
in
andb
xchg
lea
add
mov
inc
dec
add
sbb
gs
movsl
pop
pop
fiaddl
outsb
nop
sub
cmp
dec
int3
ljmp
jbe
in
push
fmuls
inc
cmp
jmp
sub
jp
push
jno
pushl
scas
aam
mov
push
aas
stos
inc
inc
xor
xchg
add
add
rolb
test
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
push
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shr
shl
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
lea
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
lea
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jb
pop
mov
pop
jecxz
mov
inc
add
cmp
