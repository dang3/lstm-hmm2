push
call
ret
ret
mov
pushl
lret
rcr
xchg
push
outsb
nop
jo
sbbb
loopne
push
rcll
lret
sbb
jb
sub
lahf
xchg
not
call
inc
adc
fistpll
in
or
cmpsb
adc
in
aas
repnz
dec
pop
inc
sahf
ja
pop
jmp
js
mov
sbb
mov
and
xlat
sub
and
and
push
sbbl
sub
cmp
dec
adc
cld
pop
jp
pusha
dec
dec
push
daa
out
leave
lock
cmpsl
dec
std
les
movsb
sbb
int3
scas
je
jle
adc
lcall
cli
sarl
dec
mov
push
daa
mov
mov
dec
rcrl
pop
xlat
xchg
fdivr
fs
cmp
sbb
xchg
sub
sti
cmp
sti
adc
clc
xor
jb
add
lcall
and
xchg
shrl
inc
fsubrl
pop
or
add
push
shrl
lcall
mov
outsl
pushf
fwait
jo
and
ss
mov
movsb
shlb
mov
pop
inc
mov
mulb
dec
stos
mov
xor
jnp
sub
mov
mov
adc
jb
je
mov
cltd
adc
out
daa
sub
mov
pop
dec
mov
or
pusha
popa
out
xchg
sbb
dec
outsb
jb
fnstenv
pusha
pop
std
fwait
lods
xorb
iret
xor
jne
pop
dec
cmp
ret
adc
lds
sbb
xchg
mulb
rcll
xor
xchg
out
adcb
out
fs
shr
in
ret
and
insb
cmp
adc
mov
ja
leave
andb
lahf
push
sub
jecxz
sbb
insl
pushf
mov
les
clc
cmpsb
in
arpl
iret
xchg
xchg
xchg
or
adc
lods
ret
adc
cmp
loop
cmpsl
sub
cmp
aam
sbb
mov
and
testb
clc
fwait
shll
pushf
enter
or
dec
shll
jmp
xor
cli
mov
and
inc
int3
ss
stc
dec
insb
lcall
fst
sbb
sti
lahf
add
mov
jb
lcall
loopne
mov
repnz
add
dec
mov
jge
xchg
pop
jp
into
mov
sbb
ljmp
jno
xor
pop
xchg
xchg
out
sbb
cmp
iret
sbb
int3
dec
js
jnp
arpl
lret
stos
mov
inc
test
lret
stc
cmp
mov
stos
jne
lods
add
mov
dec
inc
push
jns
adc
xchg
adc
sbb
daa
or
aam
aam
in
mov
inc
stc
or
ret
shlb
xchg
dec
pxor
mov
hlt
mov
shlb
bound
push
sbb
lret
pop
addl
and
cmp
mov
mov
clc
dec
pop
mov
jmp
cltd
pop
push
incl
pushf
jno
nop
fcompl
adc
xchg
pop
jp
mov
jnp
jge
imul
push
out
jnp
pop
xor
push
jns
movsb
or
adcl
or
jnp
fs
add
sub
and
mov
pusha
sub
test
adc
cltd
inc
cmp
loopne
stc
mov
mov
fmull
into
clc
inc
add
jne
jecxz
sbb
fs
inc
cmp
pop
nop
pop
loopew
inc
jp,pn
rorl
lock
stos
pop
ja
loop
ljmp
divl
in
popl
pusha
cmp
pop
les
pop
jo
mov
dec
out
sub
movsb
mov
sub
or
shrl
imul
mov
test
cmp
imul
adc
mov
xchg
push
pop
cmp
jnp
loopne
mov
repz
popf
inc
insl
or
mov
aas
shll
adc
daa
cmp
imul
inc
sbb
pop
out
arpl
push
push
xor
je
inc
add
mov
loopne
lahf
inc
pop
inc
and
mov
xchg
fiaddl
cmpsb
mov
mov
ficompl
scas
repz
inc
inc
pop
adc
out
cmp
push
push
addb
hlt
incl
mov
mov
ret
sub
sbb
pop
repnz
push
sub
jne
push
push
and
xor
es
dec
subb
jg
loopne
stos
hlt
mov
sahf
rolb
dec
clc
dec
and
addr16
sub
arpl
out
push
adc
stos
pop
pop
cmp
les
xor
ret
adc
aam
xchg
stos
jne
xor
or
fs
cwtl
in
js
je
mov
mov
jle
mov
lods
enter
arpl
in
jle
add
sbbb
dec
rcr
mov
dec
into
ja
fdivrl
out
loope
popf
mov
insb
mov
hlt
xor
add
hlt
les
xchg
dec
xor
fcoml
and
aaa
mov
push
mov
and
rcrl
add
les
imul
aaa
pop
jnp
sbb
les
xor
mov
andb
lods
out
jnp
mov
sti
inc
or
jbe
inc
es
push
jae
push
mov
in
cli
inc
fmuls
cmp
mov
xchg
lcall
in
or
pop
lahf
jge
inc
xchg
dec
pop
in
jp
imul
cmpsl
push
fldcw
mov
jp
push
add
jl
cwtl
xchg
dec
scas
and
fs
icebp
mov
xchg
cmc
inc
das
adc
repz
push
jne
jp
sbb
cli
ss
out
xor
andl
or
loop
pop
imul
jns
lcall
jp
cmp
and
ljmp
shll
xchg
jbe
dec
fnsave
cmpsb
mov
or
pop
popa
dec
sub
outsl
lret
pop
shll
nop
je
in
lock
imul
lahf
enter
lret
ficompl
fcomp
in
mov
fs
or
sarb
inc
jo,pt
xor
fstps
in
int
mov
ljmp
and
jb
dec
in
out
movsb
cli
sub
pushl
repz
sbb
dec
mov
mov
out
fcomps
mov
push
xchg
clc
ljmp
mov
scas
arpl
mov
dec
sbb
pop
fidivs
aam
test
popa
sbb
add
xor
scas
xchg
bound
pushf
push
push
addr16
mov
cli
cmp
pop
jb
or
jbe
xchg
data16
adc
xchg
and
or
inc
dec
out
test
jnp
lahf
inc
mov
or
test
mov
push
repz
andb
ret
mov
push
daa
into
lret
pop
mov
dec
aas
insl
xlat
push
test
push
lods
mov
sbb
js
adc
mov
dec
cmp
xor
xchg
mov
cmp
into
into
scas
faddl
jae
decb
mov
jge
sub
jl
ret
dec
pop
pop
mov
push
insl
sub
add
scas
pop
jmp
sbb
pop
lock
mov
ret
lds
lahf
dec
push
arpl
xor
aam
mov
mov
xor
shrb
mov
mov
in
iret
push
shll
cmc
shrb
das
fucom
test
adc
jl
stc
xchg
and
shr
outsb
idiv
pop
dec
add
and
mov
insb
cmp
clc
test
cld
idivl
adc
fimull
insb
sbb
lret
enter
mov
jne
pop
icebp
insb
pushf
stos
mov
push
mov
nop
pusha
ljmp
jnp
ja
jo
cld
mov
inc
aad
push
xor
je
addr16
lret
loopne
mov
lcall
cltd
fists
xchg
in
mov
and
fs
push
xchg
ret
out
lea
roll
call
sarl
add
sbb
push
xchg
cmp
pop
add
das
pusha
mov
mov
out
push
sub
pop
add
lcall
cltd
pop
dec
dec
int
int3
enter
xor
pop
clc
ss
fcmovnu
push
or
cmp
sub
stc
push
cmpsb
mov
inc
lods
mov
push
in
in
mov
gs
lock
addr16
push
cli
cmc
jnp
push
add
mov
and
lds
outsl
inc
lods
add
popf
mov
sub
hlt
into
aad
cmpsl
dec
ret
push
js
sbb
push
into
dec
stos
add
and
testb
repz
test
mov
dec
xor
cmp
cmc
ret
xlat
cwtl
xor
mov
sahf
push
setle
popf
inc
stc
testl
out
lahf
mov
add
add
orl
push
int3
dec
or
pop
loop
pushl
adc
iret
pop
ljmp
lret
cmpsb
js
push
mov
shll
out
pop
filds
imul
sub
inc
mov
popa
jecxz
cld
push
pushf
jno
push
add
pmaxsw
popf
lcall
xorl
lahf
stos
cmpsl
sbb
out
movsl
jmp
icebp
insl
inc
imul
clc
mov
cmc
cmpsl
ret
in
pushf
orb
mov
or
lret
and
jnp
aad
insl
dec
add
call
pusha
ret
rsm
outsb
addr16
and
mov
in
pop
push
mov
jl
adc
test
fsts
dec
inc
inc
push
xchg
ja
insl
sub
arpl
and
and
xchg
or
jno
mov
add
mov
call
jl
data16
cs
jbe
push
push
test
clc
jle
dec
xor
pop
fwait
movsl
inc
sbb
aas
cmp
xchg
aam
std
fiadds
in
inc
push
inc
push
xchg
pop
imul
movsl
insb
mov
insl
push
mov
into
mov
push
pop
andl
outsl
testb
jnp
cmpsb
push
cmp
dec
shrl
and
pop
outsb
jo
cmp
mov
jp
loop
lcall
es
mov
mov
int3
dec
inc
popf
pop
lds
dec
in
add
dec
rcrb
loopne
pop
cmp
mov
mov
fistl
dec
xchg
movsb
jne
mov
loopne
pop
mov
mov
xlat
mov
mov
lods
jae
ret
mov
lret
sbb
sarb
call
ljmp
cs
lock
push
mov
pop
or
mov
jp
mov
pop
xchg
or
dec
lret
and
out
jecxz
sub
in
fstpt
xlat
mov
mov
sub
mov
in
mov
call
mov
xchg
aam
cmp
and
fildll
mov
dec
cmp
mov
ja
and
popf
scas
repz
sbb
rcrl
jb
jge
or
into
andb
jmp
inc
xchg
dec
lock
mov
fadds
lods
inc
lods
mov
aam
js
jnp
lock
in
orb
or
les
sub
xor
or
cld
and
cmp
int3
cmp
sbb
cmpsb
fnstsw
loopne
cmp
jecxz
mov
push
push
adc
test
mov
imul
push
jns
and
add
xchg
adc
jb
mov
push
popa
jg
shrb
adc
add
or
xchg
lods
xor
mov
dec
push
jp
push
rcl
mov
xchg
jae
xchg
in
sbb
and
clc
pop
pop
test
fldl
lcall
cmp
push
out
shlb
test
shll
inc
cmp
mov
inc
punpckhbw
icebp
mov
xchg
jg
fs
rcr
inc
test
pop
lret
jne
out
mov
icebp
add
and
push
fcomp
push
fisubs
mov
mov
pop
addr16
ret
jg
cwtl
insb
sbb
dec
xchg
cs
mov
lds
or
ja
ss
dec
sub
sbb
inc
decl
pop
pop
stc
and
fsts
jmp
xor
mov
bnd
push
xchg
aam
das
xchg
pop
test
mov
leave
movsl
mov
lahf
or
and
xchg
mov
push
lcall
pushf
out
in
fwait
shrb
push
jmp
push
jl
jne
add
clc
xorl
js
xor
jl
xchg
mov
gs
xchg
incb
mov
repz
call
std
cmpsl
or
callw
mov
jne
ljmp
call
add
inc
shrb
jb
cltd
rcrl
ja
mov
jo
lret
jno
sub
movb
loope
mov
mov
sahf
out
outsb
xchg
xchg
fucomp
fwait
divb
sub
or
xor
pop
push
int
mov
pause
pop
clc
inc
lea
dec
or
xchg
xor
cmpb
add
cmp
cmp
or
sub
repnz
std
sar
iret
ss
or
push
bound
int
sub
fdivrl
pop
mov
mov
xlat
dec
pop
into
jnp
shlb
or
subb
inc
popa
sbb
sti
int3
sub
data16
idivl
popa
fistpll
jg
mov
dec
cmp
and
jle
pop
lea
push
mov
adc
lret
test
sbb
xor
shll
les
add
push
in
cmp
imul
and
jge
and
or
fistpl
mov
in
fnstenv
in
int3
mov
mov
xor
imul
scas
jne
dec
sahf
cmp
pop
cltd
mov
adc
pop
dec
push
aas
das
dec
sub
push
lock
mov
ja
orl
int3
fs
stos
fcomps
add
mov
mov
fcompl
sbb
aad
insl
sbb
xchg
mov
pop
cld
cmp
test
jo
arpl
xchg
lret
xchg
jl
pusha
mov
cs
sbb
pop
ss
and
jmp
push
push
xchg
push
jmp
dec
int
outsb
cmp
imul
in
lds
ss
stc
xchg
mov
sbb
dec
or
cmp
and
pop
bnd
movsl
outsl
jecxz
and
cli
dec
insl
xor
scas
aad
and
bound
or
fcmovne
mov
jge
adc
dec
aad
jno
mov
inc
mov
popf
inc
inc
dec
out
xor
push
fdivrl
push
mov
jg
in
cmp
popf
adc
dec
xchg
pop
pop
cld
sbb
into
gs
std
inc
repnz
jns
ljmp
fcomi
int
mov
lock
mov
shl
lods
or
mov
and
mov
in
mov
in
add
push
pop
imul
cli
push
dec
out
rcll
inc
sti
pop
jmp
add
out
das
xorl
dec
cmp
je
ljmp
enter
popa
cs
cli
pop
ljmp
push
imul
or
loopne
xchg
sti
icebp
sub
fsts
and
mov
jb
test
jmp
les
push
lds
into
and
cmp
xchg
ss
mov
int
xor
repz
add
outsb
xor
sbbl
jge
jp
and
sbb
mov
and
xor
and
pop
sbb
icebp
ss
mov
subb
lea
repnz
cmovns
and
xchg
xor
jns
mov
push
or
xchg
mov
sahf
aam
mov
mov
pop
outsl
jb
jle
jle
imulb
inc
mov
xor
mov
and
cmc
mov
invd
imul
testl
cld
notl
xchg
inc
xor
mov
js
push
ljmp
xor
mov
hlt
into
mov
and
xchg
in
jae
lods
ret
pushf
mov
lods
shlb
loope
outsl
pop
push
or
dec
fisttpll
mov
and
pop
xor
test
adc
popa
sbb
aad
push
movsl
rcrb
mov
test
xor
sub
enter
jne
push
into
jae
sbb
mov
mov
mov
fcomps
push
xor
inc
andl
mov
lock
dec
loop
outsl
test
dec
mov
xor
or
push
xor
stc
cmc
out
jnp
idivb
stos
push
aas
fwait
cmp
push
enter
mov
xor
xor
in
mov
add
or
ljmp
dec
jno
mov
sti
lret
and
in
mov
imul
inc
jae,pn
inc
mov
xchg
pop
lock
aaa
das
sbb
out
mov
int3
add
mov
popf
repnz
push
test
inc
adc
cld
push
push
int3
or
jecxz
std
mov
sbbl
or
rolb
xor
fnstsw
fldenv
lret
fnstcw
jg
mov
fwait
daa
insl
push
in
jae
inc
dec
add
sub
sahf
mov
push
mov
test
or
xchg
push
jle
adc
imul
pop
in
rclb
mov
dec
sub
lock
dec
cmpsl
mov
test
subl
cs
stc
pop
scas
and
imul
xlat
rcrl
call
xchg
scas
adc
pop
pop
pop
sub
inc
roll
mov
mov
jae
sarl
pop
sbb
loopne
sbb
call
mov
fwait
movsb
pop
out
pop
cmp
lcall
das
pop
gs
sarb
cmc
or
push
add
xchg
xor
ret
mov
cmp
lods
lods
gs
inc
mov
pop
or
sub
call
add
jmp
pop
adc
rcrl
movsb
hlt
call
mov
in
cmpsl
push
sbb
lret
jb
sub
jl
addl
dec
scas
js
sbb
jl
pop
nop
xchg
sbb
and
or
hlt
loope
outsb
push
pop
scas
sbb
xchg
and
int
or
clc
shl
xchg
mov
test
je
push
push
sub
sub
push
push
push
movsl
test
iret
and
mov
outsb
arpl
movsb
mov
dec
cltd
loopne
es
jle
and
adc
movsl
xchg
xorl
jns
jbe
dec
vmovshdup
lods
mov
cmp
lods
pop
xchg
pop
push
call
or
rorl
xchg
or
dec
mov
int3
push
xor
stc
ret
lods
adc
xor
xchg
or
arpl
push
add
jl
aas
sbb
push
mov
lea
and
and
call
sar
stc
stos
mov
ja
ret
xchg
lock
push
daa
lock
test
pop
dec
add
cmp
lret
xchg
push
fs
inc
adc
js
cli
scas
inc
and
das
jge
inc
jg
cld
pop
pop
cmc
loop
adc
mov
sbb
xor
inc
lods
jns
bound
sbb
mov
xchg
out
sub
inc
or
outsb
in
jmp
sarb
mov
arpl
cmp
mov
inc
xor
clc
and
cmp
aad
inc
pusha
fxch
fstl
test
jp
imul
dec
xor
insl
cli
sbb
repz
fdivl
xor
in
stc
push
xchg
inc
jle
add
adc
sbb
jnp
mov
xchg
jl
or
jae
add
xor
in
dec
push
aas
xchg
mov
icebp
xor
repnz
mov
mov
pop
or
sbb
add
adc
inc
cmp
decl
scas
inc
mov
imul
jne
movsl
lock
fs
xchg
xlat
mov
jle
jnp
mov
lahf
jns
cmpsb
in
add
xlat
fwait
xchg
add
jecxz
lret
hlt
out
popa
sahf
and
jbe
cltd
cwtl
daa
jmp
bndldx
cli
sub
dec
cld
jle
int3
push
shlb
mov
jg
lods
push
and
aaa
je
pop
sbb
pushf
add
mov
fadds
sub
dec
mov
mov
jbe
bound
sti
mov
ss
add
or
repnz
shl
mov
das
jbe
mov
int3
push
shll
scas
ja
push
and
push
pop
push
test
mov
push
inc
mov
lahf
loope
adc
imul
pushf
lahf
mov
dec
iret
pop
adcl
sub
aaa
nop
out
mov
cmp
jnp
out
jb
fdivs
inc
fdivrl
mov
arpl
outsb
jns
and
add
adc
mov
ljmp
jbe
jg
addr16
sarb
mov
xor
inc
sub
stc
cmp
cld
mov
push
rcrl
adc
dec
lock
mov
das
jbe
jae
and
mov
cmp
rclb
sub
xchg
stc
in
sub
sub
rorl
mov
nop
and
push
call
fs
ss
imul
mov
je
mov
cmpsb
daa
out
in
sbb
push
je
push
push
popa
inc
inc
imul
push
lret
mov
push
xor
adc
jo
bound
or
xchg
xchg
xorl
das
mov
xchg
sahf
or
test
arpl
das
insl
inc
sub
lods
stos
scas
and
bound
int3
pop
dec
div
and
pop
pop
iret
test
stos
je
ret
loop
pop
adc
xorb
lret
or
lret
aam
push
dec
repz
bound
lods
bound
or
stos
cmc
shlb
insl
push
jbe
lea
add
out
cmpsl
sbb
loopne
add
jl
pop
cmp
test
cmp
xor
pushf
xlat
shr
or
pusha
xchg
jo
dec
mov
dec
sbb
sbb
shrb
mov
jae
shll
outsb
mov
push
aas
xor
movsl
sub
pop
ret
mov
js
lret
or
push
in
or
mov
in
jle
xchg
xor
scas
cmp
dec
cmc
pop
adc
mov
cltd
out
add
xchg
jle
sbb
inc
dec
push
cmp
mov
cmp
lea
sbb
jb
cmpsb
shll
and
into
xor
adc
inc
cs
add
jle,pn
popa
adc
pusha
add
mov
xchg
lret
jo
pusha
cmp
cmc
cmp
lret
sub
mov
out
and
in
dec
adc
pop
cmp
mov
lds
sbb
int
xchg
dec
in
dec
or
insb
adc
ret
mov
stos
ljmp
or
hlt
pop
dec
lcall
popf
pop
or
mov
shrb
lock
int
mov
rolb
rorl
dec
mov
mov
stos
cli
mov
lahf
pop
mov
mov
ficoms
jmp
jbe
sbbl
add
ljmp
mov
dec
notl
add
adc
insl
sub
test
cld
or
rcrb
adc
es
push
rorb
mov
jnp
lcall
cmc
das
sbb
std
fcmovnbe
cmp
push
aam
je
add
fidivl
pushf
cmpsl
xor
adc
xor
les
jo
shrb
sub
add
xor
adc
fsubs
maskmovq
divl
popf
test
lahf
xchg
lret
inc
jbe
loop
pop
add
out
in
nop
mov
rcr
cld
les
cwtl
sbb
stos
push
pop
daa
pusha
arpl
push
xchg
aas
mov
inc
outsl
adc
arpl
in
pushf
fmuls
outsb
sahf
cmp
cmpsb
pop
cwtl
xor
or
pop
add
adc
xor
into
pop
shl
movsb
add
inc
mov
pop
hlt
jne
xchg
subb
mov
xor
scas
and
cmpb
hlt
xchg
outsb
jl
inc
push
lcall
and
dec
loop
insb
aad
daa
iret
xchg
pop
iret
sarb
mov
mov
sub
pop
ljmp
repnz
pop
inc
out
int3
mov
and
icebp
add
dec
adc
call
cmpl
xlat
lods
jo
pop
jnp
fwait
sbb
add
sub
cmc
mov
popf
and
push
mov
int
and
test
cmpb
repnz
and
mov
dec
sub
mov
sbb
fnstcw
push
pop
or
jo
sarl
xlat
dec
enter
dec
gs
adc
pop
mov
lods
fs
lods
pop
dec
dec
dec
rorl
dec
inc
pop
xchg
out
or
out
jb
and
mov
pop
test
js
jecxz
add
jmp
sub
adc
mull
and
fidivrl
xor
cmp
add
cld
int
add
ljmp
mov
loope
icebp
sbb
repnz
and
lcall
out
or
rcrb
lds
xchg
das
mov
mov
lret
dec
pop
xchg
inc
adc
cli
fildl
mov
shlb
stos
rolb
stos
lcall
int3
dec
dec
push
enter
dec
xchg
int
lcall
jl
sbb
scas
das
fmull
cli
inc
call
es
test
sub
or
inc
and
push
insl
pop
into
mov
test
dec
test
cmpsl
cmp
in
cmp
inc
rolb
jne
xacquire
jle
ret
adc
push
adc
fadds
lea
xchg
pusha
sahf
shlb
jmp
stos
pop
jnp
bnd
push
mov
loop
push
pop
iret
icebp
daa
pushf
adc
int
in
push
push
or
loopne
stos
pop
cwtl
lods
jb,pt
dec
cli
mov
add
mov
fwait
sarb
fwait
mov
aam
xor
dec
push
xor
pop
push
imul
jae
mov
shll
adc
js
stc
hlt
jp
xchg
repz
cwtl
popf
hlt
push
xlat
in
push
and
xor
or
divb
jae
into
mov
and
repnz
xchg
hlt
ds
rcrl
ret
inc
stos
mov
mov
add
xlat
cmp
scas
int
pop
mov
xchg
xchg
sbb
mov
aam
add
dec
inc
out
push
out
into
mov
out
dec
xor
js
ljmp
pop
push
jns
and
fwait
fs
ret
fcmovb
cmp
cwtl
xchg
and
ldmxcsr
lret
mov
les
pop
jbe
popf
mov
inc
ljmp
out
iret
mov
cmp
mov
out
mov
xchg
jns
outsl
jbe
xor
sbb
aad
icebp
xor
jmp
xchg
sahf
pop
mov
mov
fcomp
aad
inc
and
daa
xchg
lock
bound
cld
dec
xchg
out
xchg
cmp
imul
gs
and
mov
pop
insb
pop
les
test
jne
imul
push
and
sbb
aaa
xor
imul
or
ds
sub
popl
dec
mov
pop
in
or
pop
enter
fnsave
ljmp
sub
loopne
insb
pop
cmpsb
je
pop
xor
mov
addr16
bound
mov
insb
xor
cld
xchg
or
add
aad
aas
jo
jl
imul
cmp
inc
andl
mov
out
sub
js
cltd
stos
xchg
mov
icebp
push
mov
mov
test
jmp
cmp
aaa
mov
cmpsl
arpl
pop
cmp
ljmp
sbb
lods
cmp
jmp
and
js
les
das
mov
cwtl
add
faddp
push
xor
pusha
push
add
gs
pop
push
enter
mov
mov
clc
or
nop
shrb
jle
pop
mov
ret
aas
fdivrp
mov
mov
movsl
sahf
fisubl
insl
subb
sub
ss
negl
bsr
mov
imul
gs
mov
xlat
or
xchg
scas
and
sub
sbb
cli
dec
or
jbe
fistps
fwait
inc
push
mov
dec
sti
push
vpor
pop
or
inc
jo
pop
inc
iret
roll
add
out
mov
pop
cltd
shlb
ljmp
pop
out
imul
popa
imul
lds
out
cld
rol
push
mov
lahf
mov
leave
cmp
fnstsw
lret
inc
shl
xor
inc
neg
xor
in
into
mov
xor
push
inc
jge
pop
fstpl
inc
or
dec
lcall
dec
mov
lods
mov
loope
inc
pop
cld
mov
cmp
push
clc
cmp
and
aaa
mov
pop
call
push
jecxz
or
xchg
add
daa
pusha
addl
pop
lods
cmc
inc
subb
pushf
jle
addr16
popf
stos
je
lret
adc
and
loopne
loop
sbb
es
idiv
nop
scas
pop
add
outsb
pop
xchg
sarl
add
xchg
mov
js
lahf
mov
sbb
push
into
icebp
sbb
clc
ds
or
jle
pop
xorb
scas
push
jle
xor
cmpsl
shlb
lea
int
mov
popf
cmp
pop
nop
add
sti
inc
lock
ret
fbstp
out
mov
leave
insl
push
fimuls
js
add
mov
int3
mov
dec
adc
fcmovnb
pop
jge
shrl
imul
jnp
iret
lret
outsl
test
mov
jae
andl
or
cs
or
mov
repz
in
lods
push
mov
mov
addr16
sbbl
sbb
pop
xor
dec
ss
mov
jge
or
jg
jp
rolb
mov
adc
xchg
mov
scas
mov
les
jno
lahf
xchg
out
cld
jmp
lcall
cltd
test
fidivrl
pop
jns
push
cmp
imul
mov
sub
mov
js
mov
or
and
or
mov
in
test
push
fwait
mov
xor
jae
sub
jbe
popf
int
adc
xorl
or
mov
stc
add
jae
pop
mov
data16
jo
dec
ret
mov
fidivrl
loopne
gs
in
lock
ja
mov
aad
outsl
incb
xor
jbe
adc
lods
jg
shrl
jecxz
shr
xor
arpl
ss
jne
jo
je
ds
aas
aaa
jnp
das
xchg
das
shrb
ds
xchg
jp
fwait
mov
jbe
jbe
pop
out
outsb
imul
inc
pop
test
mov
xchg
int3
xchg
xor
or
stos
incb
add
push
adc
xor
ret
sbb
mov
out
mov
icebp
fstl
lret
incb
adc
enter
pop
mov
das
fstl
xor
jg
sub
push
push
mov
aam
mov
sub
dec
add
xor
sub
and
mov
xchg
mov
jge
xchg
gs
mov
fnsave
xchg
shrl
cmp
daa
cmpsl
jl
xor
xlat
imul
mov
outsl
cwtl
jnp
inc
mov
fsubp
cld
fsub
daa
mov
scas
cwtl
xchg
scas
test
adc
movsb
lea
pop
and
sti
stc
frstor
push
mov
hlt
adc
sbb
push
cmp
leave
call
insb
aas
xor
and
mov
cs
inc
pop
mov
add
xchg
xchg
iret
pop
push
add
xchg
fs
add
movsb
push
jo
stos
bextr
jne
or
cli
mov
fists
fmul
lock
sub
pop
push
pusha
aam
pop
jl
or
sub
jb
cmp
int3
aas
jno
push
test
adc
jge
pop
leave
adc
push
dec
mov
sub
subl
mov
or
add
clc
jp
pop
pop
add
jae
pop
js
lret
test
push
sub
lea
repnz
fwait
cmp
sub
pushf
clc
cmp
push
les
ret
mov
sbb
mov
dec
push
jmp
leave
cli
mov
lock
dec
sbb
fistpll
and
ror
out
sbb
int
jae
aas
push
inc
icebp
cmp
mov
in
mov
cwtl
out
ret
out
test
or
jl
or
add
rcr
and
sbb
and
cmp
adc
arpl
rorl
daa
lahf
xor
xchg
insl
hlt
push
mov
gs
dec
aad
in
mov
inc
mov
dec
adc
xor
dec
inc
movsl
test
mov
xchg
dec
mov
loopne
jo
mov
push
jle
sbb
out
push
xor
adc
jmp
dec
lret
mov
outsb
or
decl
lea
pop
rcll
add
fmuls
imul
mov
and
mov
repnz
xchg
loopne
das
xchg
xchg
int3
mov
jb
cmp
lods
add
mov
mov
js
ja
fidivl
into
dec
sub
aas
clc
sbbl
and
jbe
mov
push
xor
and
shl
ja
pop
mov
xchg
inc
not
pop
mov
out
or
ja
dec
mov
decl
dec
push
incb
dec
push
jp
pop
or
push
stc
addr16
icebp
xchg
or
lahf
mov
sbb
pop
sahf
fninit
sub
clc
inc
push
pop
dec
xchg
insl
cwtl
push
dec
dec
mov
adc
jno
aad
addr16
aas
ja
push
fcom
pop
push
add
inc
and
fstpl
clc
mov
mov
sbb
sub
sub
jge
mov
adc
pusha
dec
jle
out
cmpsb
push
icebp
iret
and
fistl
sub
adc
adc
dec
loope
cmp
mov
mov
repz
sub
mov
cmpsb
xchg
js
inc
push
fisttpll
inc
sub
dec
pop
pop
and
test
ljmp
insl
xchg
jle
push
add
push
xchg
fs
sub
ds
repnz
push
fildll
or
into
movsl
bnd
xchg
pushf
lret
inc
test
cmp
fwait
mov
pushf
rcll
fadds
mov
mov
mov
or
sub
and
adc
mov
jns
pop
or
xchg
mov
push
fistpll
jmp
pop
lret
lea
cmp
pop
imul
mov
push
sbbb
jp
insb
test
sahf
xchg
mov
in
mov
lds
mov
mov
xor
cmp
pop
push
pusha
rclb
pop
mov
cltd
aam
gs
xor
or
push
pop
jp
loopne
mov
aam
dec
jge
and
xor
dec
int
cwtl
sub
xchg
mov
cmpsl
jp
hlt
jmp
or
ret
orb
sti
mov
mov
int3
inc
add
push
pop
pop
fstl
jecxz
mov
xchg
sarb
pop
jae
jo
std
mov
addr16
jg
pop
push
jl
add
mov
adc
sub
mov
push
jno
mov
rep
pop
sbb
adc
jne
push
sarb
mov
sub
rol
cmp
jl
pop
ds
adc
adc
psllw
sbb
mov
inc
pop
xchg
dec
mov
shlb
mul
test
stc
fs
mov
jp
mov
into
push
and
sti
dec
dec
mov
fdivrp
js
jg
xor
and
rclb
adc
imul
out
fldcw
xchg
jmp
xor
mov
popf
lcall
sarb
rorl
outsb
push
or
push
push
jnp
stos
and
sub
push
mov
adc
aad
js
push
jmp
cmpsl
out
xor
test
push
or
inc
fildl
and
sti
div
repnz
push
inc
fdivrs
out
fwait
test
inc
lds
mov
jbe
push
mov
pop
xchg
adc
mov
cwtl
mov
cmp
out
data16
xor
stos
lea
push
loopne
lds
or
add
cmp
pop
lahf
add
dec
add
jg
int
sbb
outsl
loope
enter
stos
fdiv
test
push
negl
pop
pop
mov
inc
dec
fidivrs
mov
cld
fldenv
shrb
cmc
push
aad
jl
sti
adc
lret
cmpsb
mov
sbb
test
xchg
scas
in
fs
sbb
outsl
scas
loopne
repnz
out
add
inc
scas
aas
adc
fnstenv
xor
or
inc
pop
inc
adc
or
in
mov
push
in
fnclex
out
inc
inc
scas
das
repz
aad
add
lcall
ret
mov
jl
push
fs
push
das
cmc
mull
mov
test
xlat
pop
je
cmpsl
outsl
aam
mov
mov
call
mov
mov
pop
pushl
aam
shr
out
dec
sahf
ffreep
sub
mov
pop
je
fistl
push
or
cmp
test
sbb
jmp
or
fsubrs
pop
ljmp
outsb
xchg
pop
pushf
out
adc
daa
or
shlb
or
pop
sbb
mov
cld
mov
push
xor
mov
sub
lock
out
cmp
pop
les
xor
sbbb
mov
xchg
out
cmp
iret
and
aad
inc
iret
sbb
push
ret
push
push
add
hlt
inc
xchg
int
int
sub
fwait
mov
jnp
popf
xchg
xchg
xchg
push
lret
aas
fscale
lds
xor
bound
sbb
int
imul
dec
gs
ja
jae
pop
sbb
jl
out
aam
arpl
fidivl
mov
adc
jne
fnsave
mov
and
dec
add
pop
xlat
repnz
mov
daa
dec
mov
xor
pop
out
ret
test
enter
jg
xor
push
or
mov
jg
es
nop
add
inc
pop
sbb
arpl
scas
xor
xchg
stos
mov
imul
lret
test
js
rcll
ror
fs
and
mov
mov
xchg
sbb
outsb
fistpll
mov
jecxz
cmp
das
or
daa
add
rcll
or
pop
arpl
dec
fwait
ds
inc
pop
xchg
loope
mov
lds
jne
fldenv
shrl
sub
dec
ret
repnz
pop
push
insl
cmp
mov
dec
lock
imul
mov
mov
mov
stos
jle
push
jmp
lret
sbb
mov
mov
int
mov
jne
rorl
outsl
scas
jge
daa
mov
decb
sti
or
jl
aad
adc
dec
outsb
mov
mov
aad
xor
rep
jae
lock
add
and
and
test
lods
stos
push
mov
dec
ficoms
xlat
sub
out
push
adc
mov
mov
nop
push
ret
adc
xor
jns
popf
mov
test
das
or
popf
sub
not
adc
xor
dec
add
xchg
insl
pop
xchg
dec
inc
popf
jb
dec
dec
adc
ret
lds
mov
or
adc
mov
xor
pusha
push
adc
jb
and
out
xchg
mov
xchg
xchg
jmp
inc
mov
cld
mov
rcrb
push
fldl
xchg
loopne
imulb
mov
add
jbe
mov
xor
in
jbe
adc
jns
stos
push
jne
outsl
aam
mov
xlat
mov
mov
rcrb
cltd
cmp
lret
aas
iret
pop
loop
stc
mov
dec
and
adc
pop
or
jb
movsl
cmp
sahf
call
loope
into
lret
sub
mov
lcall
xchg
and
push
xor
mov
mov
pop
dec
fptan
adc
mov
pop
cmpsb
push
cmp
xchg
push
sbb
int
xor
je
mov
loop
and
ret
bound
jnp
cmp
into
xchg
mov
mov
pop
cmp
sub
sbb
xlat
popf
pusha
dec
mov
or
out
stos
add
out
repz
mov
fsts
xor
pop
in
add
fildll
push
icebp
or
jl
ja
cmp
and
stos
je
into
cmp
inc
mov
mov
cli
sub
pop
in
and
nop
int
jne
and
pop
fcmovu
mov
mov
xchg
in
mov
int3
gs
in
cld
outsb
lret
xlat
mov
sbb
mov
sti
xor
loopne
shlb
lcall
jmp
cmp
sarb
push
mov
jle
lcall
add
loopne
mov
setne
adc
xchg
rcrl
incl
fistl
repz
loop
mov
gs
fidivs
xor
aas
clc
rcr
rcrl
cmp
pop
lret
sub
push
sarb
mov
or
dec
orl
add
jae
test
outsb
pop
sub
adc
jl
dec
enter
scas
imul
movsb
push
dec
stc
push
sysexit
xchg
sbb
push
pextrw
fnstcw
sbb
mov
and
clc
dec
inc
jb
sbb
dec
dec
lret
int
gs
jl
xor
jle
push
xor
popa
sub
sub
push
cmpsb
out
jmp
hlt
xor
push
mov
mov
jne
stc
and
or
push
pop
mov
cs
out
cmp
fistpl
imul
rolb
sarl
je
xor
int
mov
mov
pop
cwtl
test
fists
mov
lea
cmc
pop
inc
loopne
pop
pop
xor
shr
mov
faddl
push
pop
std
cmp
jle
lahf
dec
fiadds
in
aas
sub
out
sarb
jbe,pt
sub
iret
push
mov
sbb
mov
fwait
or
and
mov
pop
aad
sahf
push
mov
inc
popa
in
jp
mov
xchg
pop
push
mov
daa
enter
xchg
push
aam
iret
and
mov
sti
push
jno
aas
loope
lret
fs
out
into
aas
mov
in
dec
hlt
jbe
lea
cmp
inc
push
xor
mov
insl
jp
mov
cmc
fsubl
adc
push
mov
pushf
lcall
dec
addl
cltd
push
into
jns
fisubrs
mov
loop
lods
jl
mov
inc
mov
fwait
nop
xorb
add
insb
stc
adc
cmpsb
jp
xchg
adc
cmp
push
inc
jmp
pslld
mov
sbb
mov
add
sbb
fucomi
mov
push
test
dec
adc
loopne
sar
mov
in
aas
adc
mov
je
jno
and
mov
pop
bound
xchg
insb
repz
and
sbb
loop
in
stos
or
stos
mov
stc
inc
and
fldl
mov
aaa
adc
inc
out
out
jmp
adc
jnp
loop
addr16
cli
adc
adc
cmp
imul
cwtl
cli
lods
out
stc
mov
jecxz
mov
push
mov
pushf
divl
pop
pop
ljmp
cmp
mov
xor
jp
ljmp
loopne
xor
push
fstl
inc
dec
pusha
bound
int3
inc
out
push
or
xchg
jo
pop
cmc
call
or
pop
or
or
mov
out
adc
and
insl
xchg
es
cmc
adc
lods
repz
adc
mov
icebp
movsl
cmpl
push
push
popf
inc
loope
cmp
hlt
and
mov
jp
fsts
and
or
movsb
sub
jne
bound
jl
gs
addr16
movsb
out
push
in
inc
jp
pushf
addl
rclb
sub
jp
add
xchg
into
jg
cmp
xor
je
adc
mov
out
jmp
shll
rolb
mov
inc
jle
inc
or
mov
jge
or
sub
xchg
cmp
add
gs
adc
push
repz
sbb
data16
icebp
mov
js
push
and
jle
push
in
movsl
sub
popf
mov
cmpsb
arpl
or
jnp
jle
mov
into
xor
shrb
shlb
pop
push
push
jp
in
mov
into
xlat
js
xor
or
mov
pop
movl
cli
inc
test
mov
iret
arpl
fs
arpl
rorl
arpl
or
lcall
cs
push
pop
int3
dec
pop
addr16
xchg
mov
lcall
dec
aam
scas
ret
lods
sbb
sbb
test
mov
push
fwait
je
ljmp
mov
push
cmp
dec
push
inc
data16
roll
jae
fs
les
loope
mov
lret
cwtl
inc
sahf
push
mov
add
lds
dec
outsl
movb
cltd
rolb
mov
movsl
imul
add
jns
nop
jb
fs
cmpsl
mov
mov
pop
dec
inc
mov
aad
mov
mov
adc
ja
and
fcmovnu
mov
movsb
movsb
jo
xor
lahf
test
mov
mov
jecxz
out
in
shll
mov
shlb
or
or
daa
sub
xor
mov
fstpt
adc
mov
mov
pop
sbb
repz
inc
cmp
mov
push
dec
mov
icebp
sbb
fists
testl
sbb
xor
lock
daa
and
movsl
test
pop
pop
adcb
fstl
jnp
and
jg
jo
push
stos
cltd
inc
aaa
xor
sub
je
mov
jecxz
std
fwait
mov
clc
daa
aas
push
xor
iret
sti
ds
fwait
xchg
test
cmp
call
ja
mov
adc
aad
xchg
lds
sub
lcall
imul
bound
and
add
lcall
hlt
outsb
popa
push
icebp
scas
xor
xor
leave
jecxz
cmpsb
and
jmp
out
sub
xchg
pop
lock
ljmp
fisubrs
test
mov
xor
sti
outsl
xor
pop
dec
scas
lods
push
int
repz
sub
jl
lret
fistps
test
or
add
shrb
loopne
xchg
dec
cmp
pop
xor
adc
sbb
pop
cld
mov
idivl
sbb
mov
loop
inc
call
jp
outsb
mov
cmpl
mov
gs
xchg
btc
in
inc
mov
cmp
push
pop
mov
and
push
iret
roll
in
mov
fcom
sbb
lahf
add
cmpsl
loopne
jo
push
bound
sub
inc
pop
sbb
sar
ljmp
and
xlat
cmp
xor
or
dec
js
mov
je
mov
gs
int
push
outsb
aad
dec
push
test
pmaxsw
xchg
pop
enter
xor
sub
pushf
push
adc
adc
adc
mov
dec
add
dec
inc
pop
addl
inc
jl
sti
ret
movsl
mov
pop
lods
into
or
cmp
xlat
shll
stos
sub
fs
pop
mov
shll
ljmp
mov
mov
sbb
cld
add
adc
jmp
push
lods
inc
jg
nop
outsb
mov
pop
adc
scas
dec
or
or
sbb
push
call
imul
and
sub
mov
jp
ja
mov
sbb
xchg
scas
aad
mov
aam
sub
testl
cmp
sub
inc
scas
rcrb
xor
add
xor
and
arpl
mov
dec
nop
std
test
cmp
mov
jmp
mov
push
dec
xchg
adc
pop
repnz
rcrl
mov
adc
in
or
imul
testb
dec
dec
sbb
push
cmp
lret
pop
rorb
push
pop
push
fdiv
movsl
ss
test
add
jns
andl
stos
jge
mov
dec
jle
jp
xchg
push
movsl
xchg
jp
loope
loope
xchg
mov
xchg
mov
popf
jmp
cltd
lret
add
lods
stos
fsubp
mov
xor
inc
gs
les
iret
lds
or
sub
outsb
and
shl
or
pop
outsl
adc
adc
mov
aad
sbb
mov
mov
push
repnz
mov
xlat
fwait
movsb
leave
iret
dec
fcoml
inc
into
ja
inc
xchg
adc
xchg
ljmp
lea
add
dec
in
adc
pop
push
adc
mov
loopne
adc
push
pop
or
idiv
pop
dec
fmuls
test
icebp
xchg
add
inc
sbb
push
enter
pushf
test
in
cltd
jo
hlt
mov
test
icebp
or
lahf
xorl
cltd
cs
ret
add
lcall
adc
inc
lret
jo
push
sbb
pop
mov
and
mov
jnp
dec
inc
orb
in
cmp
or
aaa
xchg
pushf
dec
movsl
clc
jne
xchg
pusha
shll
xchg
leave
cmpsl
or
pop
in
mov
xchg
test
das
or
mov
in
pop
in
sub
in
jb
aad
or
jge
test
int3
jp
cmc
cmp
nop
cmp
xor
jg
sub
push
push
push
hlt
jb
cmpb
adc
adc
mov
xor
xchg
jp
jnp
sbb
stc
mov
sbb
xlat
lock
xor
loopne
hlt
jae
jo
xchg
xchg
inc
mov
fisubl
js
sbb
or
or
shr
jo
aad
into
cs
inc
xchg
inc
adc
inc
es
test
sub
pop
aaa
popf
in
xchg
not
xor
dec
jmp
jbe
imul
popa
cli
mov
cmpsl
mov
enter
add
incl
or
rcll
je
lock
sbb
sbb
dec
mov
ds
pusha
push
sbb
int3
push
pop
jge
adc
lcall
std
or
data16
mov
movsb
jg
addr16
pusha
fistl
not
mov
lahf
gs
movsl
shll
out
or
add
add
testl
lock
or
je
arpl
push
mov
arpl
stos
push
add
pusha
cmc
mov
jge
jl
je
out
enter
inc
sbb
outsb
fcompl
jo
cmp
les
xor
dec
imul
jl
cmp
gs
ret
mov
inc
push
add
into
mov
std
adcb
pop
and
in
add
inc
cmc
sub
jo
jae
sub
jge
test
stos
mov
movsb
push
rcll
jb
adc
rol
adc
mov
mov
lcall
sub
ss
and
cld
stos
pop
loope
dec
daa
or
and
xor
into
xor
into
push
lea
ret
ja
xchg
adc
jle,pt
repz
jecxz
xchg
xor
sti
mov
jbe
nop
scas
sarl
cld
out
and
and
movsl
mov
and
insb
in
je
pop
or
mov
jecxz
cli
imul
test
pop
clc
leave
stc
mov
push
push
nop
mov
movsl
cmpsb
push
ss
xchg
ret
mov
fwait
and
addr16
dec
dec
scas
stos
xchg
or
cld
rolb
jbe
scas
movsb
aad
les
jne
fiaddl
and
jecxz
out
sbb
xor
ret
les
scas
pop
icebp
frstor
jns
dec
push
inc
push
or
cmp
cli
sbb
cmc
adc
rcl
out
jns
pop
jge
ljmp
adc
gs
mov
cmp
push
mov
or
pop
sub
xchg
repz
cmp
insl
call
sub
pop
inc
fwait
mov
dec
loop
lahf
cwtl
inc
ss
lcall
fwait
add
mov
int3
movsl
jnp
or
dec
movsl
xlat
jne
repz
dec
out
or
jmp
inc
int
out
lret
scas
push
clc
add
and
and
dec
pushf
mov
mov
lods
mov
lret
call
inc
cmpsb
mov
sbb
mov
dec
cli
sub
lret
push
jmp
xlat
mov
pop
jecxz
xchg
mov
jbe
cmp
stos
sbb
daa
ljmp
std
mov
mov
popa
ds
hlt
cwtl
sbb
cmp
into
sub
mov
xor
jl
outsl
stc
xchg
clc
xor
and
clc
inc
dec
dec
push
decb
imul
push
mov
outsl
mov
sbb
jno
mov
idivl
aaa
in
and
fidivl
fwait
sbb
xchg
jle
in
and
cld
lods
xorb
pop
mov
push
dec
test
fistl
ds
jle
lea
in
sti
sub
fiaddl
loop
add
fwait
push
add
and
pop
adc
xor
out
test
dec
xchg
add
mov
push
mov
outsb
mov
orl
sarb
push
mov
jp
lods
mov
push
xor
adc
inc
pusha
mov
xor
add
jb
add
movl
es
out
xor
adc
gs
xchg
xchg
or
fnstcw
mov
inc
add
loop
cmpsb
jg
cmp
ds
in
push
sbb
lret
dec
mov
mov
mov
add
cmpsl
ficompl
xchg
cmp
nop
cmp
shrb
aas
mov
les
push
hlt
adc
lcall
insb
jne
jae
cmp
mov
push
dec
leave
push
push
mov
loop
xorl
mov
xchg
mov
sbb
loope
les
cmp
pop
pushf
out
pop
xor
in
push
cli
pop
adc
and
mov
push
imul
rcl
sbb
inc
aas
pop
mov
mov
lret
mov
aas
cs
mov
mov
loopne
sub
fcompl
xchg
insb
int3
mov
adc
daa
jb
les
cltd
jbe
and
popf
ret
jae
cld
out
jae
lahf
mov
fcomp
mov
das
adc
mov
outsb
bound
repnz
cmp
xorl
insb
in
mov
daa
test
fs
xor
je
les
sti
std
jb
enter
fdivl
aad
bswap
into
or
dec
fnstsw
mov
push
jns
call
iret
adc
aaa
xor
pop
adc
adc
faddp
push
mov
jmp
inc
lret
jns
sub
out
fnstsw
cmpsl
adc
mov
jg
sub
cmp
cld
add
pop
rclb
stos
xor
adcl
lea
sti
xchg
add
dec
add
ret
rorb
lahf
daa
lea
mov
outsb
mov
lods
mov
movsb
push
mov
iret
lods
repnz
cmc
loopne
popf
movsl
enter
sbb
push
or
cmpb
data16
or
rolb
mov
arpl
mov
inc
enter
xchg
fcoms
jecxz
adc
int3
jae
popa
add
in
inc
inc
hlt
ret
sahf
scas
jb
pop
popa
addl
and
loopne
pop
add
adcl
mov
fwait
test
xor
lods
outsb
or
fidivrl
sub
adc
mov
fdivl
and
setae
movsl
mov
add
sub
stos
push
scas
inc
dec
sub
leave
clc
test
ljmp
cmp
xchg
xchg
cmc
push
std
test
icebp
dec
ret
out
cmp
add
add
ja
xchg
xchg
dec
mov
jb
sub
cmp
sarl
sub
stos
push
aaa
mov
dec
adc
dec
popf
in
mov
dec
pop
filds
mov
mov
sub
xor
daa
push
sarl
ror
push
mov
dec
into
stc
imul
push
mov
mov
jecxz
push
xor
divb
jne
xchg
push
dec
or
fldenv
gs
aad
xor
fwait
sahf
mulb
xlat
cmp
sahf
xchg
jmp
ret
inc
movb
jb
shlb
inc
sub
js
icebp
fs
pushf
xchg
xchg
hlt
enter
adc
loope
lret
xor
sub
adc
icebp
jno
pop
inc
mov
lret
mov
or
js
sub
lret
test
lods
mov
mov
inc
int3
popf
les
or
adc
js
fldcw
lods
aaa
inc
sbb
lret
adc
int3
mov
push
push
ret
repz
jae
mov
sar
sbb
aam
fs
xchg
js
inc
add
push
cmp
cmp
and
or
fdivl
push
stc
pop
mov
xrelease
negb
movsb
add
shlb
fnstcw
cmp
add
xchg
and
sti
mov
nop
sub
inc
mov
in
insl
push
dec
push
push
popf
jo
push
mov
divb
push
xchg
jle
cmp
rorb
scas
mov
push
xchg
xchg
sbb
xchg
clc
stc
xor
mov
xchg
jecxz
addr16
jl
fidivrl
sbb
xchg
insb
adc
pop
test
push
add
dec
or
push
sbb
push
cmpsl
sub
es
pop
sbb
stos
jne
cli
push
lods
mov
outsl
cmp
jne
rolb
movlps
inc
mov
call
stc
or
cmp
lods
leave
fdivl
call
nop
es
out
cmp
jge
inc
cli
shll
xchg
stos
daa
pop
inc
add
rorb
iret
pop
test
cltd
jbe
sahf
dec
sub
addb
cwtl
jle
ret
lea
sub
and
xchg
js
push
sahf
sub
push
sti
xchg
and
pop
adc
push
repnz
cld
xlat
and
mov
cs
inc
int3
mov
call
mov
jge
movsl
out
push
leave
cmp
mov
test
and
lods
icebp
sbb
jns
mov
dec
dec
jb
xchg
rcll
push
loopne
and
test
loope
out
aad
mov
xchg
gs
out
ficoms
push
jnp
pop
jp
testl
mov
jmp
jns
ds
xchg
popa
inc
dec
cmpsb
rcrl
out
pop
sbb
mov
mov
mov
push
ds
cs
repz
repnz
jle
add
test
jle
es
int
mov
push
pushl
xorb
dec
hlt
dec
mov
push
push
cmp
ficoml
and
mov
rol
insl
loopne
xor
lods
adc
out
sub
xorb
mov
faddl
mov
mov
icebp
ljmp
adc
push
sarl
fcomi
add
cmp
sub
jge
int
jmp
dec
insb
mov
leave
daa
aam
cmp
dec
mov
mov
cmp
out
fs
mov
push
cmpsl
cmp
or
and
dec
jp
int3
mov
mov
mov
xchg
ljmp
int3
test
roll
jmp
sbb
and
or
xchg
pushf
mov
inc
inc
aad
add
roll
inc
mov
jno
xor
mov
movsl
and
cmp
es
sarl
ficoms
jge
rorl
pushl
pop
adc
arpl
push
movzbl
js
fwait
cmp
inc
loopne
xchg
push
aam
mov
and
jns
jecxz
out
adc
mov
sub
and
push
lea
aam
fimuls
movsb
mull
jne
jnp
xchg
jo
into
mov
cmp
jge
add
push
lcall
sub
or
scas
jp
push
repnz
pop
loopne
lahf
and
adc
lods
addr16
ret
push
cmpsl
push
loopne
stos
jle
lcall
jp
in
int3
cltd
add
into
icebp
insl
mov
jg
test
lret
sbb
aaa
xlat
xchg
push
bound
or
idivb
adc
ja
dec
popf
mov
nop
jns
push
inc
cmp
fisubrs
pop
xor
xchg
aas
dec
ds
lcall
negb
jae
leave
cmp
push
and
dec
and
cmpsl
insb
or
scas
cmp
shl
and
mov
inc
inc
adc
dec
daa
or
lahf
pop
mov
xor
cmp
cmp
xchg
cmp
and
xorb
clc
mov
ret
jae
or
out
xor
ss
add
hlt
inc
int
testb
notl
sbbl
sti
xchg
add
jmp
into
fildll
lahf
sti
push
lea
mov
adc
or
mov
sub
daa
lods
and
xor
cltd
mov
insl
dec
add
sub
mov
in
test
xchg
mov
push
sbb
js
clc
lods
imul
mov
mov
xlat
out
jno
mov
mov
xchg
add
add
and
cmpsl
pop
xchg
push
lock
sub
test
fisubs
xor
leave
mov
jnp
movsl
in
push
sbb
adc
test
lret
mov
pop
mov
lock
fildll
loope
test
movsb
pop
repnz
popf
dec
xorb
or
add
sub
fs
std
mov
cmp
out
mov
xor
adc
lret
ret
rcll
in
jno
cmc
xchg
imul
pop
mov
sbbl
mov
movsl
leave
jne
adc
sbb
fbstp
xor
out
add
lods
orb
cld
add
clc
jmp
jp
push
arpl
int
pop
mov
inc
call
push
sbb
inc
cli
pusha
fildll
fldl
and
xor
mov
std
mov
sbb
and
cli
gs
add
out
iret
push
push
adc
cmc
adc
daa
mov
stc
dec
cmp
add
aam
jne
jno
pop
cltd
test
stos
add
xor
or
add
push
into
push
stos
jecxz
clc
loopne
xor
mov
and
leave
xor
cmp
ret
sti
scas
pop
mov
push
push
add
adc
mov
dec
jle
push
sbb
xor
rcl
rcr
cmp
shrb
xchg
push
test
clc
in
or
or
call
push
insl
shr
hlt
mov
cmp
xor
icebp
push
test
dec
repnz
mov
mov
mov
sub
imul
and
aam
dec
insl
sbbb
lods
inc
xor
pop
mov
aad
add
and
fidivl
push
xor
sub
jp
add
aam
shll
mov
ret
push
test
jnp
mov
loop
adc
stos
int
adc
outsb
fidivl
test
cmp
aaa
inc
call
mov
pop
nop
adc
frstor
stos
mov
sbb
imul
int3
push
cltd
xchg
pushf
rorb
incl
cmp
jb
cmpsb
lret
pop
data16
dec
add
rclb
adc
or
pop
int3
inc
adc
push
je
shll
or
mov
outsl
jg
test
push
cmpsb
mov
inc
push
hlt
pop
mov
and
pop
and
popa
mov
rcrb
out
aas
xor
jae
mov
lret
pushl
push
push
cmp
pop
shll
mov
cmpsb
ret
mov
add
inc
adc
push
xor
lock
insb
cld
std
xchg
add
or
jno
mov
jge,pt
mov
sub
xchg
push
pop
ljmp
fisubrl
mov
dec
fdiv
mov
cmpsb
rclb
add
or
jl
insl
scas
gs
jp
daa
mov
inc
dec
and
scas
inc
pop
mov
int
pop
mov
popa
and
sub
sahf
out
shrl
cmp
imul
dec
cld
push
add
loope
sti
outsl
jns
scas
xchg
sbb
in
pop
xlat
or
push
andb
bound
or
ja
pop
sub
les
dec
sub
cmp
pop
in
call
scas
in
ss
xor
xchg
jmp
sub
in
pop
pop
arpl
pop
stc
into
iret
adc
in
or
imul
jbe
jl
push
adc
mov
enter
mov
popf
aaa
pmullw
imul
ret
out
inc
dec
sbb
test
pop
repnz
inc
out
shrl
ds
push
aam
es
mov
aad
xor
push
push
xchg
int
jbe
addr16
push
jnp
cmpsl
daa
ret
sbb
xchg
ss
or
insl
shll
test
and
pop
pusha
or
xlat
or
xchg
in
xchg
pop
dec
mov
ret
pusha
lods
push
shl
nop
cmpsb
cltd
inc
loopne
addr16
mov
ds
pop
pop
leave
cli
js
sbb
sbb
mov
cltd
dec
ds
loop
mov
in
mov
sbb
pop
adc
mov
xor
and
rcr
cld
rolb
inc
out
data16
pushf
cmp
sub
mov
mov
lods
lea
inc
add
and
xchg
or
inc
sub
lahf
lock
out
cmp
sbb
inc
push
or
pop
inc
dec
ret
fcmovbe
in
and
cmc
cmp
fiaddl
lods
out
daa
test
in
sbb
sbb
fwait
outsb
sbb
push
inc
hlt
cmp
rcl
lret
js
scas
cwtl
pop
jo
push
pop
rclb
mov
cmpsb
sbb
jmp
into
mov
stos
loope
hlt
push
sub
xorl
jg
mov
xchg
and
dec
outsb
pop
dec
and
add
sub
jg
mov
dec
popf
test
ds
add
push
push
or
fstl
xchg
faddl
testb
loopne
loope
out
int3
mov
leave
pop
sbb
mov
or
or
sbb
jp
aas
pop
les
push
or
dec
into
lret
mov
mov
fdiv
lods
adc
lods
movl
mov
popa
jne
int
scas
adc
leave
dec
call
pop
adc
repnz
cli
pop
popf
sbb
or
and
fnsave
cmpsl
xor
add
xchg
adc
jp
iret
js
add
mov
std
mov
jbe
loopne
lahf
add
cs
adc
jg
out
xor
lock
and
imul
inc
and
xor
pop
xchg
test
mov
cs
pop
movsl
add
adc
jecxz
push
xorl
mov
mov
dec
inc
push
icebp
fwait
mov
mov
mov
negb
lods
fcmovbe
int3
sub
cwtl
cmp
outsb
add
jle
push
pop
mov
jmp
hlt
daa
cli
hlt
and
inc
and
insb
xchg
xchg
inc
mov
adc
outsl
jecxz
mov
clc
je
push
cli
movsb
ljmp
mov
dec
enter
clc
sub
daa
mov
sub
outsl
dec
cwtl
inc
pop
int
jb
mov
inc
xchg
and
data16
lods
lcall
jne
and
pop
mov
lods
xlat
into
mov
pop
xor
clc
int
pusha
sarb
stos
jle
stos
vmaxsd
mov
push
cmp
es
movsb
dec
les
pop
fwait
push
sbb
or
clc
dec
lock
stc
adc
fistpl
jmp
adc
scas
or
mov
add
add
lret
fimuls
rcrl
mov
jb
mov
pop
loope
sbb
test
lds
push
repnz
add
test
cmp
push
std
cmp
into
fistl
xchg
shll
shrl
in
fcoml
xchg
and
movsl
add
cmp
cwtl
in
mov
sbb
out
pop
xor
hlt
pop
fsub
xor
sub
dec
lock
insl
into
sarb
jae
insb
xchg
add
jne
sub
mov
lret
sbb
clc
or
sahf
adc
movsb
xor
pop
rcll
data16
or
lods
aas
and
xchg
jnp
out
or
mov
int
dec
repnz
sbb
dec
mov
mov
cmpsb
stc
add
jge
lret
sbb
jae
inc
mov
cmp
outsl
sar
dec
fwait
add
mov
or
test
je
xor
out
ljmp
ljmp
cltd
dec
stos
mov
out
dec
mov
push
cli
mov
mov
and
insb
xor
subl
cs
pop
lret
movsb
pop
ret
xchg
cld
cmp
push
xchg
lods
icebp
leave
push
addr16
fcompl
xlat
push
sbb
or
fsincos
add
lret
jne
cmp
xchg
shl
jp
inc
repnz
in
sti
stos
outsl
out
push
nopl
test
aaa
mov
popa
fmul
or
leave
jno
loopne
fsubrs
daa
inc
in
cmp
and
scas
imul
jns
sbb
test
stos
outsl
sbb
cmpsl
jle
adc
cmpsb
shll
lahf
jge
cltd
fwait
sti
sti
mov
scas
sub
mov
mov
ja
jne
mov
dec
sub
xchg
hlt
ljmp
xchg
xor
fwait
sub
sub
jne
stc
dec
sbb
scas
je
pop
pusha
gs
repz
sbb
neg
ds
cmp
into
sahf
mov
pop
fildl
jle
inc
rcrb
test
push
add
faddl
cmpb
stos
inc
dec
dec
int3
cmp
xor
cmpsb
add
mov
lods
cs
ja,pt
in
add
stos
dec
lret
icebp
inc
dec
test
add
and
dec
push
jle
imul
insb
push
fisubrl
fs
dec
cs
imul
shrb
xchg
jmp
js
jae
adc
sub
adc
cmc
mov
cmc
out
ja
aam
mov
mov
sbb
in
fdivrl
rclb
add
decb
mov
adc
cwtl
and
cmp
push
jecxz
in
or
rcrb
and
insb
mov
push
pop
arpl
loope
dec
and
jae
dec
sti
fwait
mov
mov
lods
push
out
mov
add
dec
loop
jo
movsl
sub
pop
cmp
sub
inc
hlt
sbb
add
xchg
fnstenv
ret
jne
ret
cmc
in
pop
xlat
sbb
push
xchg
jno
mov
lods
jmp
xor
mov
out
fisttpll
pop
inc
es
dec
fidivrs
hlt
mov
mov
xor
or
jge
and
pushf
fs
ret
pop
sbbb
adc
cmp
mov
aam
xchg
pushf
mov
enter
adc
mov
jbe
insb
ds
push
rorb
and
cli
dec
stos
and
mov
dec
out
addr16
test
and
pop
out
scas
addr16
xchg
test
xchg
mov
out
lock
push
test
xchg
sahf
mov
pop
dec
aaa
push
cmp
lea
call
mov
mull
or
subl
fiaddl
out
js
dec
nop
rolb
mov
outsl
testb
sub
push
ljmp
in
pushl
pop
lods
mov
loope
cmpsl
mulb
ret
cmp
js
mov
mov
add
add
loope
pop
aas
pop
and
jp
in
inc
mov
stos
push
add
cmp
mov
stc
cwtl
mov
in
xchg
cmpsl
push
inc
or
sbb
inc
shll
pusha
lcall
mov
out
std
cmp
not
ljmp
sbb
xchg
sarb
addr16
mov
lds
fildl
xchg
inc
and
test
jecxz,pn
cmp
fld
mov
xchg
fisubs
push
fisttpl
sub
mov
push
xchg
jbe
out
adc
in
mov
jge
jnp
push
xchg
imul
mov
mov
enter
andb
fmull
jb
movsl
mov
add
xchg
sti
mov
xchg
add
cmp
push
loope
lret
iret
and
mov
push
push
test
mov
aas
and
jp
call
mov
mov
xchg
popa
push
addl
into
dec
mov
lcall
jmp
push
inc
pop
push
cmp
hlt
fisttpl
pop
aad
addr16
ret
xor
lods
xchg
xor
lods
xor
loopne
jecxz
push
jae
dec
jp
mov
cmp
cli
lods
fisttpll
aam
mov
imul
aad
adc
icebp
sbb
das
scas
sub
xchg
add
mull
lret
enter
cmp
cwtl
movsb
mov
clc
cld
repz
jecxz
addr16
aam
jno
sub
insl
cmp
rolb
xchg
sbb
pop
pop
lea
inc
push
pop
xorb
cld
xchg
ret
push
jp
jno
out
jns
loopne
in
xlat
js
loope
inc
mov
jbe
movb
xchg
sbb
lods
xor
fdivrl
mov
das
mov
pop
push
xchg
xor
xchg
cli
leave
mov
int3
mov
ljmp
xchg
test
push
imul
cmp
mov
aaa
dec
mov
cmpsl
pusha
sub
js
popf
push
pop
fnstenv
imul
lods
pop
pop
in
mov
arpl
call
stc
cltd
cmp
lahf
int
sbb
or
mov
arpl
or
jb
loope
mov
mov
push
sub
xor
ds
or
out
push
or
add
loopne
push
lock
jle
call
clc
cmp
fwait
mov
bound
mov
inc
mov
cwtl
or
jle
push
inc
fcmovb
ret
int3
das
cld
fdivs
jmp
loop
ret
sahf
icebp
jle
jecxz
jge
popa
push
dec
pop
sahf
jno
add
pop
cmp
push
lock
mov
aam
inc
adc
adc
shrb
dec
in
scas
xor
sub
test
insl
mov
leave
imul
movsl
rcrl
xor
and
outsl
ss
xor
int
dec
inc
jb
mov
cmp
jae
xchg
lret
scas
or
fwait
dec
mov
out
lds
adc
sahf
mov
mov
js
out
in
dec
mov
xor
fs
adc
imul
pop
lahf
loopne
cmp
sarl
adc
test
push
fiaddl
loop
ret
or
cmp
cmp
inc
out
lock
jo
scas
mov
scas
into
push
and
inc
dec
and
shl
push
pop
sbb
xlat
mov
pop
imul
daa
or
sub
dec
push
jne
popa
pop
cmp
aad
cli
push
lock
fbld
loope
or
mov
inc
mov
mov
mov
jno
push
mov
shlb
push
sti
cmc
or
sub
imul
and
scas
in
xlat
shll
pusha
push
sub
push
xchg
and
loope
jbe
imul
xchg
aam
in
cmp
jns
xor
xlat
clc
mov
cmc
add
cmp
or
mov
scas
sarl
mov
mov
das
sbb
xchg
leave
rol
enter
and
je
rcrb
enter
pusha
pop
xor
sahf
test
repz
in
jg
inc
je
pop
nop
add
jecxz
xor
popa
pop
sub
xchg
xor
cmpsl
mov
jge
sbb
push
lds
pop
pop
filds
xchg
out
pop
aas
mov
push
sub
cmpsl
inc
test
mov
data16
sahf
mov
xor
scas
mov
lods
mov
or
cmpsb
sbb
inc
setl
rclb
sbb
std
mov
and
les
cmp
js
inc
mov
out
sbb
jbe
jne
imul
test
sbb
cmp
stos
out
testb
inc
ljmp
daa
data16
and
bound
mov
loopne
pusha
aas
lret
dec
fldt
fists
or
insl
and
rcrl
jbe
sbb
lret
test
mov
inc
xchg
es
clc
cmpsl
xchg
cmp
mov
lret
jae
movsl
pop
enter
sub
inc
out
popf
packssdw
sub
pop
cmp
mov
xchg
ds
test
addr16
sub
dec
sti
movsb
jo
sbb
pop
xchg
mov
jns
movsl
push
push
mov
pop
dec
push
ljmp
fsubl
ss
xchg
sub
push
lods
lret
out
mov
xor
ljmp
testb
add
ror
loopne
adc
adcb
insl
dec
xlat
push
mov
inc
mov
movsb
mov
xor
ret
in
xor
out
in
mov
push
sti
adc
stos
jbe
jecxz
dec
shlb
xlat
and
sub
cmp
mov
lahf
out
sbb
aas
in
orb
in
mov
push
push
dec
scas
xchg
lret
rcll
int3
xor
test
add
jmp
pop
ficomps
mov
push
mov
pop
push
mov
outsl
inc
or
jne
fisubrl
fcoml
lahf
and
lods
inc
int
jmp
jmp
outsl
mov
inc
bound
pop
inc
ja
pop
push
push
int3
jg
lahf
xchg
add
or
mov
mov
test
xlat
iret
js
scas
stc
stc
push
inc
push
stos
fldl
pop
jp
inc
shrl
in
mov
mov
ss
pop
or
fistps
sub
popa
adc
imul
or
in
rcrb
jne
and
arpl
xorb
fldt
jg
and
sbb
pushl
mov
inc
or
mov
or
xchg
lret
or
jbe
jmp
je
add
cltd
lds
fildl
js
or
mov
aam
mov
out
xchg
daa
scas
push
rcrb
lret
push
out
mov
or
lock
mov
push
and
rcll
pop
xor
popa
sub
sub
pop
jo
ljmp
lcall
dec
dec
and
inc
lock
push
xor
notb
sub
push
mov
lock
bound
xor
pop
push
pop
push
fcompl
in
or
int
clc
dec
data16
cltd
inc
imulb
mov
popf
mov
pusha
insb
fcom
pop
sbb
insb
cltd
daa
pop
lods
rolb
fwait
mov
popa
daa
shll
out
cmp
scas
pushf
sub
adc
cmp
mov
dec
insl
or
out
dec
adc
add
add
out
out
repnz
clc
add
imul
loope
jl
lret
sbb
lret
fisubl
push
sbb
jecxz
cmpsl
lcall
test
cltd
inc
push
lret
inc
mov
dec
add
in
daa
repz
adc
sub
mov
je
and
xor
add
add
cmp
cwtl
imul
inc
filds
or
cs
subb
pop
push
sarl
insb
xchg
ja
sbb
jnp
push
fidivs
outsl
xchg
inc
rorb
stos
push
test
mov
arpl
rcrl
ficomps
pop
pop
fdivl
and
push
dec
jnp
cli
leave
mov
insl
ljmp
loope
mov
notb
aad
out
shlb
insb
adc
ljmp
mov
lds
es
push
cli
xchg
outsl
push
dec
dec
xor
mov
inc
out
sub
mov
mov
fildl
sahf
pop
fiaddl
push
insl
rcrb
xlat
out
add
ret
testb
sub
das
adc
cmp
movsb
fwait
jp
pop
shr
mov
xchg
mov
movsb
in
push
stos
call
shl
dec
pop
sbb
mov
jbe
jb
and
push
pusha
clc
int
loop
adc
push
icebp
fdivr
sbbb
cmp
mov
inc
mov
popf
arpl
sbb
mov
xlat
icebp
push
out
or
mov
test
outsl
dec
mov
std
fcompl
sbb
insl
xchg
cmp
push
mov
ffreep
xchg
inc
cmpsb
cmp
scas
cli
sarb
sbb
jno
xchg
outsl
loopnew
mov
movsl
xchg
daa
cmpsl
fsubrp
outsb
mov
ret
ljmp
cmp
fs
das
and
rcrl
add
ljmp
roll
push
inc
mov
adc
js
jge
mov
outsl
lds
loop
mov
in
out
mov
mov
mov
out
ss
mov
sbb
mov
lock
push
xchg
mov
cmp
jge
aam
ljmp
lods
sarl
rolb
xchg
lea
bound
cmpsb
jb
fcmovnb
in
push
ljmp
mov
mov
cmc
cwtl
pop
and
push
jp
out
imul
ja
out
aas
mov
repz
jl
daa
clc
nop
xor
sbb
int3
sti
xchg
shr
outsb
jge
pop
cmc
adc
cmp
fldenv
sbb
push
fdivrs
push
fdivl
sub
sub
adc
icebp
es
fucomi
shl
insl
mov
cmp
mov
out
pop
and
sub
inc
leave
pop
js
cmp
pop
cmp
xorl
fldenv
or
lahf
and
clc
das
jnp
sub
rorl
int
mov
cmp
scas
imul
aas
cs
sbb
arpl
jmp
sbb
jno
inc
rcl
ficoml
inc
push
inc
ret
and
jmp
jecxz
div
mov
and
inc
das
lret
stos
test
jae
insl
cmpsb
pusha
cwtl
fisubrs
cli
and
push
das
jecxz
test
shlb
outsl
bound
mov
std
lret
jecxz
test
lods
mov
pop
mov
and
sub
and
fs
aad
loope
sbb
dec
dec
popf
hlt
pop
and
cltd
and
cmp
popa
cmc
icebp
enter
stos
aam
jnp
adc
hlt
mov
int3
js
imull
hlt
dec
adc
push
cli
cmp
sti
loope
mov
inc
lods
mov
add
in
movsl
push
mov
xchg
mov
jmp
insl
stos
push
lea
in
jecxz
xor
nop
in
pushf
adc
push
jle
cmpsb
aam
and
push
sahf
mov
sbb
push
ss
sbb
mov
sbb
repnz
or
lret
inc
cmc
and
push
xlat
jo
clc
sbb
les
out
decl
pop
fstpt
lea
daa
jp
mov
xchg
dec
mov
mov
lods
bound
mov
cmpsl
push
cmc
dec
inc
sbb
jge
mov
mov
shll
xor
mov
rcr
fwait
xchg
dec
xlat
push
ret
add
jl
pop
loope
xchg
lahf
mov
fs
and
adc
fwait
push
addr16
cmp
mov
icebp
jle
mov
jns
aad
out
mov
mov
jg
dec
pop
outsl
ror
xchg
adc
dec
fistpl
fsubrl
jmp
xlat
inc
push
ds
movsb
repz
dec
mov
lea
lret
pop
stc
scas
sub
inc
push
dec
push
in
push
adc
enter
xor
push
mov
cmpsl
test
add
mov
fiaddl
mov
sbb
aaa
sbb
mov
push
loopne
jg
xchg
hlt
hlt
pop
iret
jo
test
mov
jo
testl
rorb
ljmp
int
dec
or
lret
out
push
cmpsb
sub
mov
jmp
jecxz
jns
sub
cld
and
push
lods
movsl
test
dec
mov
jmp
or
and
scas
dec
cs
cmp
xor
sbb
insb
icebp
mov
test
jnp
icebp
fsubrp
fstpl
push
jle
push
data16
sbb
pop
xor
test
cmp
stos
sub
jg
mov
and
out
int
cmpsl
xor
sti
xor
outsb
std
mov
jbe
pop
cmp
nop
mov
aam
or
aad
daa
insb
push
cmp
andl
push
fldcw
or
pop
xlat
out
push
je
rorb
jbe
and
and
push
stos
loop
leave
adc
ljmp
mov
mov
fsubs
frstor
cld
sbb
call
sub
jl
mov
in
rolb
dec
xor
stos
jae
andb
int
inc
cmpsb
add
sbb
mov
sbb
aas
fidivl
stc
add
push
mov
fimuls
div
bound
mov
fldcw
in
sbb
loop
lcall
xor
cmp
xorb
fmuls
and
push
aad
fisubl
out
push
xor
push
sbb
or
jg
arpl
cmpb
call
dec
mov
inc
stos
dec
pop
enter
js
inc
mov
jmp
cmp
inc
stos
iret
dec
sarl
jmp
adc
cmpsb
jge
cmpsb
incl
hlt
sti
sbb
enter
mov
pusha
insl
lock
out
and
outsb
xchg
dec
mov
and
adcl
movsl
mov
sbb
ret
add
nop
popa
jge
in
outsb
pop
xchg
call
push
fnstcw
into
xchg
sub
push
xchg
push
adc
sti
outsl
inc
mov
push
hlt
movsl
push
pop
sub
outsb
imul
mov
push
loop
lcall
aam
jo
lds
add
cmpb
sub
xor
xchg
out
cwtl
insb
mov
aam
push
stos
ret
shll
xchg
call
sub
push
rcl
mov
andb
lcall
jo
addb
data16
inc
fistpll
and
cmp
sbb
jecxz,pn
cmp
scas
push
jmp
shlb
push
fisttpll
test
dec
das
add
mov
icebp
leave
adc
cltd
repz
mov
inc
push
xchg
sub
daa
sub
inc
pop
stc
imul
lods
ljmp
and
jl
int3
cmpsl
aas
pop
mov
adcl
ss
pop
adc
sbb
fucomi
jl
mov
dec
popa
ss
shlb
pop
sbb
fucomip
sbb
jle
adc
in
xchg
jp
pop
lcall
into
cmpsb
xchg
in
cs
jp
pop
lahf
out
dec
add
jecxz
mov
xchg
adc
xor
cld
or
jae
insb
push
add
arpl
xor
add
sub
mov
jge
mov
cmp
lahf
ss
add
stos
xlat
and
shlb
and
sub
add
sahf
push
add
sub
mov
in
mov
sbb
jge
lcall
fbstp
fimuls
mov
hlt
bound
jne
ficompl
data16
pop
and
sbb
in
inc
into
mov
test
cmpsb
sbb
bound
jmp
xchg
inc
imul
scas
popa
jns
shlb
sahf
fs
inc
fildl
jg
or
ss
and
outsl
pop
cmc
add
mov
jae
shll
mov
hlt
enter
inc
fcoms
cltd
rorl
ds
xchg
cmp
jb
lahf
int
cmpsl
clc
jno
andl
jnp
push
or
inc
shl
add
mov
out
ss
scas
sub
jb
mov
adc
rolb
sub
imul
dec
and
add
pop
mov
add
and
mov
mov
mov
rcl
jg
out
or
inc
sub
fcmovbe
pop
inc
mov
int
cli
fs
test
add
push
cltd
iret
ret
lret
pop
mov
xchg
shlb
sbb
std
mov
push
arpl
and
or
jl
arpl
mov
dec
sub
push
mov
insb
dec
ret
dec
ljmp
dec
push
inc
cmp
sarb
sbb
movsl
and
int
out
sub
subl
mov
sub
test
mov
adc
movsl
cmpsb
frstor
fucom
fistl
xor
sti
rcrl
int3
or
cmp
jae
jns
push
in
jbe
adc
or
xorb
and
sarl
shrb
push
jge
call
mov
pop
ljmp
inc
pop
xchg
dec
ss
cs
das
push
push
clc
pop
or
ret
cmp
das
out
mov
jge
div
mov
mov
xor
shll
int
test
cmp
int
mov
push
adc
mov
cmp
jp
jae
sbb
fldenv
inc
pop
lds
addr16
add
xchg
cmpb
fisubrl
int
movsb
bound
pop
loop
dec
adc
xchg
mov
mov
mov
out
xchg
dec
inc
jbe
mov
xor
sub
mov
lds
push
es
imul
popf
jmp
sub
icebp
scas
imul
fsub
xor
push
and
sahf
jp
xchg
jb
aaa
push
pop
sub
xchg
js
xor
mov
sub
sbb
rcrl
imul
jo
repz
jne
xor
mov
or
sbb
mov
iret
mov
push
iret
fistl
sbb
ret
sahf
stc
mov
stos
je
sbb
add
je
das
jo
popf
jle
adc
loop
push
ds
pcmpeqd
mov
cmp
daa
mov
fcmove
mov
dec
mov
ret
adc
cmp
xchg
add
popf
adcb
into
cwtl
ret
inc
mov
mov
or
ds
adc
call
sahf
arpl
cmp
inc
outsl
dec
sbb
stos
imul
pop
aas
jns
sar
aas
fimuls
xor
xor
adc
ret
pop
dec
daa
jecxz
add
push
mov
orl
daa
push
in
and
aaa
push
icebp
pushf
jg
jo
popf
xchg
mov
nop
or
pushf
adc
mov
divb
mov
mov
mov
push
insl
add
insl
sub
lret
inc
ljmp
pop
push
xchg
xchg
mov
flds
jp
mov
adc
lock
xchg
stos
dec
cmp
dec
ja
xchg
mov
inc
js
sub
mov
sub
test
cs
sub
mov
jne
stos
mov
fs
rclb
pop
sahf
int3
xor
inc
loopne
dec
mov
testb
cmc
fistl
test
test
in
fildll
inc
mov
add
fwait
nop
test
xchg
sbb
push
cmpsb
leave
cmp
or
insl
divb
mov
push
xchg
inc
sub
add
lods
adc
sub
pop
rcrb
add
inc
das
icebp
lods
and
and
int3
jne
adc
imulb
jbe
adc
imul
cwtl
fnstcw
sbb
jg
add
mov
mov
jae
jb
pop
js
jno
shlb
push
test
ja
push
shll
ficoms
push
jae
fildl
in
jo
rcl
fcmovnbe
in
outsl
dec
fistps
ja
mov
jns
jb
fistl
sbb
mov
xchg
xor
testl
ja
jg
out
and
push
sti
sub
hlt
adcl
mov
mov
stos
jl
sub
addb
loop
repnz
sahf
cs
xor
in
shrl
lret
fists
hlt
or
out
or
or
push
test
mov
lahf
arpl
cwtl
dec
clc
xchg
mov
xorb
je
lock
in
dec
scas
add
sbb
xorl
dec
rcr
cli
shrl
rol
cmp
jle
push
mov
dec
push
mov
movsl
sbb
cli
xor
outsl
pop
pop
fistpll
fistl
push
fldt
xchg
lret
xrelease
or
dec
mov
xchg
and
aam
xchg
jbe
jecxz
rolb
adc
jg
popa
in
ret
ss
jne
pop
mov
push
add
jne
leave
mov
or
push
and
fdivr
shlb
mov
std
lds
pop
push
mov
mov
add
push
mov
popa
cli
jae
add
jmp
test
mov
je
cmpl
cmpsb
pop
add
lahf
fistpll
mov
pushf
dec
cli
push
nop
sahf
shl
ret
or
mov
rcll
push
pop
add
sahf
push
jno
daa
test
mov
fsub
jb
sbb
mov
adc
mov
data16
mov
and
sti
scas
inc
pop
sbb
bound
add
xor
data16
test
jg
ds
cmpl
pop
jmp
notl
loopne
popf
mov
sbb
in
inc
and
pop
dec
xchg
test
in
and
aam
adc
neg
push
add
clc
mov
cmp
adc
sub
mov
notl
jmp
shll
dec
out
cmp
lds
ja
aas
dec
imul
mov
dec
lods
into
mov
out
xlat
icebp
push
adc
imul
aas
aas
mov
data16
mov
loopne
test
dec
lret
int3
adc
dec
lock
jnp
cmpsb
xor
stos
lods
mov
sbb
aad
daa
stc
test
sub
and
jns
test
sbb
leave
repz
bnd
pop
push
shll
sarb
sti
test
fsubl
subl
push
pop
inc
push
gs
and
je
addr16
fcos
rclb
mov
popa
cmp
fstl
sbb
push
mov
and
repz
mov
and
mov
xchg
mov
aam
mov
lret
jbe
in
mov
in
mov
mov
pop
jno
mov
dec
aaa
lahf
and
mov
daa
cmp
push
in
hlt
fadd
pop
mov
imul
adc
push
iret
inc
cmpsb
gs
sbb
fnstsw
push
sbb
push
dec
adc
outsb
fisttpll
aad
jl
in
push
imul
fidivrl
jp
jmp
adc
cld
jmp
jae
aad
imul
shll
jl
addr16
push
sbb
in
mov
cli
mov
test
cld
ficompl
test
aad
fdiv
jp
sbb
xchg
jle
xchg
push
mov
push
cwtl
in
jae
fisttpl
cs
push
pushf
and
mov
movsl
cmp
jl
xchg
sub
in
add
hlt
loop
lret
dec
shr
insl
int3
push
or
xlat
ljmp
out
jnp
or
sahf
popa
stos
sbb
dec
loopne
lods
mov
mov
lods
outsb
lods
xchg
fistl
lods
push
cld
xchg
pop
inc
cmpb
dec
dec
adc
mov
push
pop
inc
cmc
into
movsl
subl
xchg
mov
stos
inc
mov
icebp
cli
fidivl
xchg
push
add
into
mov
es
scas
push
bound
cmc
inc
ds
push
div
xor
mov
pushf
sub
pusha
fmull
in
mov
jle
mov
dec
xor
push
ror
test
jecxz
daa
movsb
loope
cmpsb
pop
mov
push
cwtl
jle
pop
hlt
popa
add
cmp
push
loop
out
cwtl
loop
shrb
pop
mov
cs
sbb
and
jl
rol
imul
scas
pop
bound
stos
popa
cli
xchg
and
cli
sarb
or
sub
test
cs
mov
mov
outsl
jbe
jecxz
jle
mov
rclb
push
in
test
fisttps
into
insl
data16
push
lret
push
add
std
movsl
int
ljmp
and
mov
jmp
and
xor
mov
jb
xor
push
or
test
fwait
sub
incl
test
sbb
dec
xchg
push
scas
mov
adc
xor
mov
pop
negb
add
push
call
cli
inc
mov
sbb
or
xor
int3
add
add
stc
mov
adc
lods
push
shl
out
lret
into
imul
outsl
rclb
add
dec
mov
mov
rclb
xchg
daa
cmp
movsb
cltd
das
daa
pop
and
js
jmp
xor
adc
es
inc
pop
cmpsb
stc
loop
arpl
cs
ja
negb
add
cmp
pop
sub
push
or
or
dec
test
sahf
adc
out
cmpb
xchg
mov
xor
dec
dec
xor
push
jmp
subb
mov
stos
dec
or
not
lcall
inc
mov
jne
sub
bound
test
cwtl
sbb
enter
shll
push
mov
fldenv
pop
ret
bound
jp
lods
bnd
int3
xor
bswap
fcoms
and
scas
jns
fistpll
mov
push
sahf
cmp
cmp
lcall
or
andb
into
shrl
ja
leave
cli
and
adc
sti
aam
imul
lock
dec
inc
ja
inc
mov
fs
and
lock
js
cmp
xor
lds
and
jp
inc
add
jb
sub
outsb
scas
in
pop
mov
fsubrl
imul
loope
mov
fsubrs
loopne
cmp
int3
cli
push
inc
inc
fwait
mov
mov
cltd
xor
and
and
iret
lods
popf
sahf
or
xchg
mov
mov
aas
and
sbb
lods
sbb
sub
adc
mov
loop
out
stos
stc
inc
push
dec
adcl
in
bound
loopne
mov
dec
sbb
and
cmp
jg
mov
rorl
fs
push
jecxz
mov
cmp
xorl
bound
sbb
and
xchg
push
pop
xchg
push
aad
sbb
imul
push
in
fs
xchg
out
sarl
inc
ret
fstpl
das
scas
mov
lret
pop
push
arpl
pushf
mov
pop
adcl
push
std
push
dec
add
sahf
aam
mov
push
sbb
jg
fisubrs
aas
leave
cmp
out
vzeroupper
sti
push
jb
mov
addb
sbb
push
push
inc
test
cmp
or
sbb
call
arpl
jae
and
mov
jne
jo
icebp
xlat
xorl
rorl
adc
mov
inc
sbb
sbb
popa
lea
rcrl
call
mov
shll
mov
cmp
test
aas
pop
int
mov
icebp
mov
js
cltd
jg
push
repnz
xor
in
pop
sbbl
mov
sub
pusha
mov
cmpsl
pusha
lds
fisubs
dec
aam
test
xchg
pop
adc
arpl
pushf
jl
jmp
sub
into
dec
jecxz
jae
loop
cmpsl
pop
lods
inc
pop
xchg
inc
leave
dec
jg
cltd
rol
mov
jmp
out
jbe
push
mov
push
jnp
int3
clc
jns
out
insl
loopne
test
cmp
outsb
jnp
cs
mov
cmp
xor
xchg
lcall
push
imul
mov
js
push
loope
add
popa
lcall
cmpsb
push
scas
imul
js
mov
adc
and
punpckhdq
inc
mov
mov
jbe
add
arpl
add
test
xchg
insb
scas
mov
push
insl
pop
mov
aam
cmp
sarl
xchg
sub
mov
xchg
clc
fidivl
out
xlat
cli
imul
sbb
xor
push
xchg
mov
fildll
mov
outsb
adcb
mov
sbb
cmpsb
cmp
ror
scas
or
int
and
or
cmpb
in
xchg
cmp
sti
enter
mov
call
out
out
cltd
andb
mov
add
or
cmp
xor
gs
xlat
scas
add
int3
pop
pop
xchg
jbe
fsubs
jmp
dec
enter
loopne
cld
lods
push
jnp
adc
dec
clc
fcmovbe
push
movsl
pop
sub
xor
ret
mov
scas
xchg
nop
rolb
loop
ljmp
data16
decb
cli
int3
in
scas
stos
lcall
aad
bound
push
dec
insl
xchg
mov
cmp
pop
hlt
push
push
adc
fiaddl
mov
mov
lods
test
cmp
sbb
outsb
out
stos
sub
dec
movsb
cmp
imul
add
dec
mov
jecxz
enter
jnp
sbb
sub
sahf
and
addr16
aam
loope
decl
jbe
add
ja
int
pop
rclb
pushf
jae
sub
xor
xlat
mov
stc
testb
push
push
push
mov
xlat
aam
dec
out
mov
jle
add
cmpsl
test
mov
jne
push
out
cmpsl
push
xchg
fwait
popa
nop
fsubp
movsb
lret
xchg
push
pusha
push
dec
push
cwtl
mov
lds
decl
hlt
adc
in
or
negb
sub
adc
jb
bound
push
out
mov
xor
stc
sarl
push
xchg
cli
and
sarb
fisubrs
add
call
lcall
sub
cmp
lds
arpl
imul
dec
fisubrs
and
jl
sbb
shrl
insb
aas
hlt
popf
cs
pop
dec
in
std
push
inc
vpcomw
jne
icebp
cmp
jl
popa
lds
lcall
cmp
xor
and
loopne
vpclmulqdq
jno
arpl
and
adc
cmc
mov
shll
jmp
push
fsubl
gs
push
imul
push
stc
nop
mov
pop
popa
dec
cmp
xor
data16
hlt
lahf
repnz
pop
fs
inc
clc
in
jbe
adc
dec
imull
cmpsb
push
into
jne
call
mov
fisttpll
cmp
sub
jecxz
xchg
xor
xor
ja
adc
lods
movsb
shlb
pop
or
repz
insb
and
incl
pop
xor
xor
in
adc
xor
jb
adc
dec
iret
sahf
inc
cmp
popa
sbb
fs
fisttpll
or
cld
cli
push
mov
push
mov
mov
mov
jp
push
or
cmpsb
lret
adc
das
xor
add
subl
faddl
loopne
mov
mov
xor
testb
dec
arpl
movsb
gs
and
pop
cmp
pop
inc
jo
ja
loope
imulb
sbb
mov
fmul
mov
cmc
pop
pop
cmp
mov
ret
cmpsb
cmp
mov
xchg
out
mov
or
sti
push
xchg
sbb
test
mov
adc
jae,pt
fnsave
adc
int
ds
scas
dec
loop
jecxz
std
and
mov
adc
jmp
xor
dec
jp
dec
cmpsb
lret
mov
jp
loope
pop
fisttpl
mov
sti
inc
jno
lcall
inc
fidivrs
ret
sbb
int
push
fadd
out
mov
int3
and
sbb
sub
in
repnz
dec
repnz
enter
call
rclb
mov
inc
cmp
push
movsl
jae
pop
out
cli
or
cmpb
cmc
jg
sarb
sub
pushf
and
pop
imulb
and
das
mov
and
in
mov
jmp
dec
enter
mov
inc
fldenv
pop
les
mov
mov
pop
shrl
in
pop
movsl
jl
xlat
stos
out
addr16
add
stos
rcl
mov
mov
test
adc
adc
cltd
mov
testb
mov
sub
adc
mov
push
fcompl
sbb
stos
cltd
sarb
push
or
mov
idiv
jmp
push
lahf
push
add
mov
mov
fwait
jmp
ret
lcall
scas
mov
push
das
andl
or
and
fwait
mov
sub
sbb
sub
push
add
jl
sub
or
xor
inc
loope
adc
and
xor
in
pushf
push
cli
jecxz
insb
add
mov
insb
add
popa
pop
shll
sbb
rcl
pop
sbb
adc
mov
adc
sbb
and
call
add
cmp
jge
jns
and
or
inc
push
movsl
orb
mov
jle
mov
test
fdivs
jo
std
mov
out
xchg
scas
fstps
test
arpl
cmpl
sub
jno
mov
push
in
idivb
bound
dec
lds
lret
repz
shl
or
mov
add
sub
lahf
add
popa
out
aad
push
add
sti
fisttpll
in
stc
flds
sub
bound
in
sbb
packssdw
inc
pop
int
bound
inc
inc
cmp
movsb
insl
jae
mov
mov
nop
dec
inc
imul
and
daa
pop
add
adc
pop
cmp
jnp
ds
add
push
or
xchg
cmpl
gs
loope
loop
mov
dec
and
or
outsl
test
push
inc
xor
out
pop
add
and
and
inc
pop
pop
push
xchg
aaa
pop
cs
mov
push
int
add
pop
fdivrp
dec
aam
mov
inc
sub
imul
xor
push
sub
addr16
sti
push
rolb
ja
js
pop
cmpsl
add
fnstenv
test
or
add
jl
lret
dec
ret
dec
orl
push
mov
iret
mov
push
and
ss
or
jge
sbb
push
sub
mov
or
aaa
pop
mov
movsb
sub
ret
mov
call
mov
xchg
push
jmp
pop
xor
xor
testb
mov
imull
das
cmp
shll
xchg
ret
pushf
adc
mov
nop
mov
std
jmp
sahf
lahf
add
cmc
cmpsl
jae
mov
addb
xchg
jmp
add
fsubl
add
adc
push
scas
outsb
dec
push
adc
inc
psadbw
lcall
adc
in
push
mov
adc
mov
jbe
or
jbe
aam
cmp
inc
nop
adc
xchg
adc
lds
lret
pusha
out
pop
cmpsb
pushf
mov
sbb
fs
out
ret
fcomi
movsb
mov
int
or
jno
pop
mov
jge
lods
popa
push
test
jg
hlt
sub
xlat
popl
pop
inc
or
and
leave
leave
cld
inc
jle
aad
jae
jo
les
cli
xlat
lods
sub
aaa
lahf
movsl
iret
stc
stos
cmp
ljmp
loop
and
stc
dec
push
lahf
mov
or
out
lea
cld
cmpsl
cmpsl
jbe
push
sub
fisttpll
ja
lock
rclb
push
or
sub
sbbl
sbb
sub
imul
out
xchg
adc
ffree
xchg
or
push
hlt
add
rclb
pop
aas
arpl
sahf
pop
mov
in
xchg
mov
push
sub
and
loop
ret
jb
push
mov
xchg
jbe
push
jno
dec
aaa
ss
ja
pop
out
inc
fdivl
scas
aaa
add
adc
mov
mov
daa
andl
dec
jnp
rclb
mov
lods
push
repz
jg
and
or
sub
mov
arpl
movsb
jle
xlat
rcr
call
pop
jns
pusha
jae
sbb
cmp
notl
or
and
mov
pop
movsb
call
leave
jmp
and
cmpsl
cwtl
and
popf
xchg
pop
or
xor
rorb
jae
xchg
popa
popf
pop
std
and
cmp
jbe
cmpsb
in
imul
jnp
jo
les
jg
pop
mov
push
jne
call
repz
xchg
inc
outsb
mov
lahf
and
cmp
jns
lods
shll
jb
sbb
cwtl
mov
push
into
sbb
sub
mov
shrb
xchg
xchg
push
xchg
xor
add
jbe
fwait
movsl
clc
xchg
add
xor
mov
popa
pop
push
adc
cwtl
push
cld
add
lret
or
js
xchg
xlat
pop
xor
fdivs
out
mov
pop
jo
jp
sbb
sub
mov
push
cmp
mov
repnz
das
mov
mov
shlb
xor
iret
inc
out
mov
lea
insb
sub
push
mov
jbe
fisubs
rol
adc
lock
pop
into
in
jne
scas
fists
add
or
jb
movl
jnp
leave
nop
insl
adc
mov
pop
push
mov
testb
std
loopne
push
gs
sbb
lahf
mov
cs
movsl
std
hlt
mov
and
jecxz
jne
test
lods
push
ds
and
jl
sub
test
mov
test
outsl
mov
rorl
sub
inc
ret
xor
mov
sbb
data16
jb
pop
movsb
push
dec
jne
pop
fcmovnbe
test
stos
push
test
rclb
jle
scas
in
xchg
das
inc
ss
gs
inc
mov
lret
mov
ret
xlat
sbb
or
popf
or
xchg
push
add
lahf
clc
lret
mov
mov
and
sbb
mov
push
stos
ret
pop
sbb
xor
scas
clc
inc
dec
cwtl
fisubl
mov
pop
push
int3
clc
idivl
cwtl
cs
enter
leave
lret
es
pusha
jp
jae
aam
sbb
cmp
negl
gs
add
fwait
push
lret
das
push
jmp
rcll
imull
pop
lods
hlt
sub
mov
mov
sbb
fs
ret
jmp
cmpsl
stos
mov
ficompl
add
lret
clc
rclb
mov
inc
xor
mov
add
int
out
adc
push
and
mov
scas
inc
mov
clc
aam
test
jg
push
in
push
xchg
mov
push
scas
enter
cmp
sbb
insl
lcall
in
cmpsl
loopne
movsl
pop
test
adc
or
adc
jns
adc
sub
adc
sbb
add
arpl
sub
xchg
dec
pop
ret
mov
and
pop
ret
lea
fstpl
pop
mov
mov
dec
in
xchg
or
popa
scas
mov
add
lds
arpl
pop
sbb
addl
xor
mov
mov
cld
cli
dec
or
or
cmp
lods
sbb
push
xlat
adc
mov
or
cmpsb
or
adc
dec
mov
add
test
add
sbb
ror
sbb
sub
popf
pop
lock
pop
jne
test
enter
dec
mov
mov
mov
cltd
stos
fsubrs
cmp
xor
sbb
mov
xor
mov
mov
xchg
add
push
inc
imul
mov
xor
and
stos
imul
test
mov
dec
pusha
mov
mov
jnp
flds
fimull
rcrl
inc
enter
gs
adc
sahf
push
jl
add
add
and
sbb
enter
xor
out
and
inc
inc
loop
mov
call
push
scas
bound
int3
pop
les
mov
dec
cmp
pusha
pop
sbb
mov
das
cmc
test
insl
jns
scas
fs
fnstsw
push
xchg
pop
mov
movlps
pop
jb
in
cwtl
mov
and
pushf
push
out
popa
jo
cmp
sbb
mov
cmp
cld
loopne
pop
out
fwait
int3
sbb
xchg
pushl
in
sub
push
fisttpl
adc
pushf
pop
mov
and
push
cmp
daa
cld
sub
movsl
jmp
xor
xchg
mov
inc
sti
mov
stc
gs
xor
mov
loope
addb
mov
outsl
add
jno
mov
pop
xor
jmp
adc
stos
mov
sbb
pop
jmp
xchg
add
loopne
pop
gs
fnstenv
mov
and
inc
sub
push
fcoml
jl
mov
lock
fadds
sbb
js
insl
pop
jge
cmpsl
inc
arpl
pop
call
ret
push
or
insb
ss
gs
outsb
push
pop
xchg
aam
das
lods
dec
or
and
push
out
push
les
sub
inc
inc
addb
in
and
mov
pop
clc
shrl
stos
and
sbb
daa
cmpsb
adc
adc
add
and
pop
rolb
icebp
mov
jl
call
dec
or
insb
cld
scas
cmc
mov
add
notb
daa
imul
cmp
sti
xor
iret
mov
dec
lret
mov
and
mov
imul
xor
mov
cli
es
imul
xlat
dec
or
stos
fwait
arpl
loopne
lcall
js
nop
xchg
push
rcrb
dec
adc
dec
mov
fmull
mov
sub
movsb
fsts
push
in
repnz
dec
rcl
subb
adc
inc
cmp
pop
xchg
or
mov
jb
shl
inc
pop
push
inc
and
lods
pushf
mov
mov
sub
call
inc
cmc
test
and
enter
xor
test
mov
gs
inc
xchg
inc
out
inc
into
scas
adc
out
imul
jg
xchg
arpl
mov
out
fimull
dec
or
xchg
add
mov
pop
pop
mov
jge
jge
lcall
outsb
mov
adc
rorb
sbb
fdivs
fwait
rcrl
mov
xchg
not
subb
jle
or
in
loop
mov
pop
add
jo
sub
jle
push
and
add
std
xor
and
and
cltd
mov
and
adc
xor
add
ret
test
dec
jb
loopne
inc
fcoms
mov
ss
xor
pop
jno
js
stos
cmpsl
mov
inc
sub
insl
inc
cmpsl
pop
dec
xor
push
dec
test
sbbl
xchg
add
push
clc
fsts
jo
lahf
fcmovb
dec
enter
sbb
cmc
xor
xor
pop
movsl
or
mov
into
jbe
sbb
movsl
push
cltd
lock
stos
test
insb
and
dec
fcom
les
or
das
sub
mov
not
xor
push
sti
add
add
scas
leave
dec
out
jnp
sbb
int3
xchg
xchg
scas
sbb
inc
cld
xor
jb
rclb
cs
sbb
inc
pop
xor
pop
adc
cltd
mov
sbb
in
xchg
das
icebp
xchg
mov
inc
popa
cmpsb
sbb
mov
cmp
aaa
xchg
aas
xchg
aam
jp
gs
shrl
test
push
xor
cmc
loope
cmpsb
xor
fstpt
rcll
pop
mov
mov
jmp
add
cmpsb
fldcw
mov
ljmp
mov
xchg
in
hlt
xchg
push
mov
add
sub
rcrl
or
cmp
mov
bound
stc
mov
push
nop
dec
xchg
repnz
test
jmp
jmp
sub
mov
mov
push
cwtl
in
hlt
nop
push
fidivrl
or
cltd
andl
ret
xor
adc
xchg
jbe
ljmp
xor
mov
mov
gs
and
push
addr16
subb
lret
adc
or
sbb
sbb
ja
and
rcrl
dec
jae
ljmp
xor
cmp
shrl
mov
mov
jle
test
xor
add
icebp
fcomi
packsswb
jmp
jg
xor
jns
mov
mov
and
ljmp
popa
mov
jb
pop
repnz
in
icebp
sub
mov
cwtl
ja
push
ljmp
xchg
push
pop
cmp
dec
pop
fistpll
out
arpl
mov
arpl
xor
outsb
jle
int3
enter
cmc
push
mov
mov
jb,pt
rcrb
stos
pop
sub
pop
jnp
add
mov
push
mov
sub
or
inc
lahf
das
jmp
dec
inc
sti
mov
ret
xchg
dec
xchg
scas
cmp
mov
test
movhps
aad
inc
push
pop
pop
ficomps
pop
xchg
adc
adc
popa
mov
mov
out
jge
pop
fstl
mov
out
in
sbb
cmp
pop
push
dec
inc
test
scas
cwtl
mov
pusha
dec
sub
and
fdivrl
mov
cwtl
stos
xor
sub
cmpsb
mov
or
xchg
pop
sub
push
fs
shrb
dec
xchg
scas
push
add
push
lods
sub
out
cli
xor
xchg
jns
ljmp
jmp
dec
inc
mov
mov
and
jge
out
jne
insb
addr16
aaa
jo
insl
test
fs
rorl
cld
jge
ficomps
aas
mov
ret
stos
lea
shl
mov
into
add
mov
es
xchg
cld
mov
icebp
gs
ds
pop
mov
out
or
popa
adc
mov
lods
out
or
xchg
mov
mov
add
addr16
nop
movsl
sbb
loop
or
dec
jp
cli
loop
or
daa
jl
mov
daa
add
lods
nop
or
andb
sbb
out
push
or
jmp
pusha
fs
push
mov
scas
js
insb
mov
in
mov
out
mov
xchg
sub
nop
loop
xchg
add
ja
data16
sbb
outsl
rcl
daa
mov
inc
mov
scas
adc
cmp
pop
ss
add
cld
sahf
or
ret
pop
dec
pop
mov
xchg
pusha
xor
test
sub
push
out
and
mov
mov
dec
gs
and
push
dec
fdivl
outsl
sbb
imulb
insb
mov
inc
jnp
incb
loop
add
leave
mov
fisubrs
xor
ja
mov
mov
mov
mov
and
jge
pop
fsub
xor
shll
inc
das
loop
and
aam
or
test
and
mov
enter
cwtl
je
and
inc
rorl
cs
xchg
or
dec
out
jns
das
mov
sub
pop
push
lock
dec
xchg
fildll
popa
pop
ljmp
clc
lret
in
rcr
xor
or
inc
cmp
sti
and
leave
xchg
mov
outsb
fs
sub
lahf
inc
sub
xchg
pop
add
jnp
jmp
pop
cmc
in
push
in
mov
fldl
jmp
and
popf
dec
push
push
into
jbe
stos
aas
insb
dec
push
sbb
cs
insl
pop
jns
push
push
js
cmp
push
pop
dec
dec
mov
fisttpl
sub
mov
inc
fcomps
test
mov
mov
pop
mov
rolb
fmul
or
loopne
and
mov
shll
cmpl
pop
pop
xlat
xchg
test
rorl
outsl
lods
adc
sub
pushf
movb
in
sbb
pushf
xchg
inc
mov
inc
cli
in
jmp
movsb
or
pop
xor
add
push
or
mov
push
flds
sub
pop
mov
in
mov
rclb
xchg
cld
xor
or
inc
jge
mov
push
lock
les
pop
add
mov
jg
mov
add
sbb
pop
lcall
xchg
popa
lcall
pusha
xchg
fidivrs
inc
je
scas
loop
adc
repz
popa
mov
out
insl
push
cmp
arpl
pop
rcr
jo
push
sbb
loop
nop
cld
leave
fimuls
sub
jb
adc
push
stos
inc
test
clc
or
mov
sub
jmp
outsl
cli
push
in
outsb
inc
mov
sub
ss
or
fnsave
xchg
lcall
jge
push
out
loope
and
or
fldl
ss
push
push
sti
and
pop
xchg
dec
cmp
inc
test
inc
inc
jg
mov
lret
out
std
lods
sub
xchg
adc
push
jne
rol
xor
out
sti
xlat
push
ffreep
mov
ficoms
insb
out
or
mov
insl
adc
insl
out
nop
sbb
push
or
scas
dec
cmp
cwtl
outsb
scas
pop
loopne
mov
sbb
mov
test
adc
shll
and
movsb
pop
pop
popf
jbe
test
mov
dec
ss
out
fnstsw
mov
jae
add
out
mov
in
pushf
mov
inc
les
mov
sbb
inc
cli
lret
sarb
xchg
test
in
sti
in
aam
sub
hlt
cli
mov
out
ds
hlt
mov
mov
mov
fst
enter
mov
sbb
inc
mov
xchg
and
push
mov
add
pop
adc
adc
pop
xchg
jle
test
push
test
stos
xchg
jo
sahf
cmp
lods
add
data16
xchg
aas
inc
xchg
xchg
mov
aam
pop
jno
xchg
lds
sbb
sbbb
jb
or
pop
inc
fimuls
mov
pop
cli
sbb
jg
and
jbe
call
mov
or
gs
mov
repnz
daa
mov
push
push
fdivs
jp
or
imul
es
push
shll
xchg
lcall
divl
test
or
popf
mov
jge
push
mov
push
faddl
insb
inc
outsb
ds
push
leave
imul
andb
pop
pusha
xor
sahf
add
in
or
adc
pop
js
dec
rol
xor
repz
push
sbbl
push
cmp
call
dec
jl
jl
pop
xchg
sub
sti
push
xchg
and
aaa
or
push
lock
popa
fdivr
jle
jae
dec
jbe
xchg
or
sbb
adc
clc
dec
mov
stos
jle
into
push
repz
adc
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
and
push
add
add
add
and
add
add
add
sub
out
lock
pop
scas
cltd
adc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
push
push
pop
pop
pop
call
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
mov
out
add
jne
mov
mov
push
sub
pop
mov
and
sub
sub
xor
movswl
xor
sbb
push
mov
popl
add
sub
push
mov
pop
dec
jne
call
loope
hlt
sbb
fidivrs
add
add
mov
lea
nop
mov
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
or
ljmp
sbb
adc
mov
pushf
sbbb
add
aaa
cmc
mov
fildll
loope
aam
js
cmp
add
cld
ret
sbbb
popf
add
in
mov
inc
or
clc
arpl
cli
les
cmp
clc
aam
stos
icebp
sbb
add
ret
jl
inc
std
pushf
add
sbb
stos
jbe
ret
ja
jle
xchg
je
jns
adc
stos
add
cli
pushf
subb
push
cmp
aaa
lods
jmp
fdivrl
test
ret
xor
fldenv
stos
testl
xor
std
adc
lea
mov
and
mov
pop
dec
xorl
jne
lret
icebp
aaa
notb
mov
push
xor
xchg
jae
outsb
and
loop
inc
inc
cmp
push
jge
cmp
or
jp
gs
rcrb
mov
pop
cmp
psubw
and
mov
push
shlb
or
cmc
push
rol
or
xor
pusha
push
pop
mov
sarb
xor
ror
xchg
fwait
xor
push
mov
insl
inc
xor
test
and
mov
jo,pt
sbb
fisttpll
orl
aam
ds
fdivrs
jb
or
sbbb
xchg
mov
aam
shr
sbb
lds
sub
push
out
jmp
shl
cli
ds
pusha
lret
mov
loope
lock
mov
mov
or
adc
mov
not
dec
pop
mov
imulb
cmpsl
popa
filds
xor
aaa
jne
aas
adc
cmp
aam
aas
ficompl
mov
ljmp
ficoml
jb
imul
and
xor
add
mov
aam
lret
mov
mov
lock
jns
inc
sbb
dec
es
cmp
mov
jmp
push
in
push
inc
insl
jmp
orl
in
adcb
icebp
pop
lds
loop
popf
mov
stos
fldenv
mov
fisttps
pushf
out
cmpsl
jmp
push
adcb
mov
in
push
add
and
mov
fiaddl
cmp
sub
jmp
in
bound
inc
push
adc
fists
sub
or
or
push
sub
lods
loope
les
adcb
adc
push
and
insb
lock
je
das
cmp
rol
add
mov
sti
insl
idivb
repz
cmc
push
addb
adcb
cs
in
push
cmp
lret
pop
mov
ret
xlat
mov
xchg
sti
xchg
jge
sbb
rclb
imul
and
cltd
pop
sar
jno,pn
xor
cmp
jecxz
enter
test
push
xor
sub
add
pop
or
cwtl
adc
add
jno
data16
test
jp
dec
pop
lds
test
or
cwtl
adc
add
adc
and
add
pop
lds
sbb
lahf
repz
mov
cmc
aad
insb
lds
push
pop
lds
jbe
xor
in
add
sbb
push
cmp
xchg
xchg
fwait
lods
mov
jg,pt
add
outsb
add
add
pop
add
xchg
aad
sbb
xor
gs
outsb
daa
out
lds
lret
mov
pop
vmulsd
lcall
pop
lcall
mov
sub
cmp
in
sbb
jp
jbe
xor
arpl
xor
arpl
outsb
add
movl
pop
out
add
rorl
mov
sub
adc
pop
lds
gs
xchg
adc
mov
xchg
stos
fcompl
sbb
push
fisubrl
sub
xor
lret
repnz
pop
lds
sbb
imul
jl
sbb
mov
sbb
and
fs
test
repz
jp
jbe
xor
arpl
test
add
pop
add
rol
jl
rcr
pushf
sbb
les
or
fistps
sbb
les
sbb
sbb
add
pop
lds
out
outsl
xor
cltd
shrb
adc
add
sti
repnz
inc
lret
out
sub
mov
call
push
sti
repnz
lret
out
sub
mov
enter
jbe
aad
inc
sbb
repz
scas
mov
adc
movsb
jp
push
sti
repnz
add
push
out
mov
pop
lds
in
repz
scas
mov
adc
movsb
jp
push
sti
repnz
out
sbb
xor
mov
pop
lds
in
repz
scas
mov
adc
movsb
jp
push
sti
repnz
mov
dec
mov
test
popf
jp
push
sbb
pop
lds
sbb
mov
jbe
aad
repz
repz
scas
mov
sub
add
push
cwtl
mov
dec
mov
jno
add
pop
pop
int3
arpl
push
lods
push
sbb
cltd
push
imul
mov
push
out
icebp
sbb
jl
mov
push
mov
cltd
push
push
daa
in
adc
shll
pop
lds
gs
leave
adc
test
lds
sbb
add
pop
cli
fldt
mov
xor
insl
add
mov
xchg
and
in
xor
outsb
add
int
dec
sbb
lds
sbb
mov
add
inc
cmpsb
add
pop
inc
sbb
out
pop
sbb
and
add
ljmp
dec
sub
sbb
leave
repz
or
push
xchg
xchg
stos
movl
cmp
and
arpl
and
dec
xor
jmp
add
dec
loopne
mov
test
dec
jo
js
cs
push
push
jge
xchg
lret
push
mov
inc
data16
jne
mov
clc
dec
cs
lds
sbb
add
pop
lds
sbb
add
pop
lds
sbb
add
pop
lds
push
and
sbb
dec
push
lds
ljmp
add
pop
add
add
pop
lds
sbb
add
lds
sbb
add
pop
lds
sbb
add
pop
lds
sbb
push
add
enter
jmp
ret
out
lcall
jmp
push
stc
insb
inc
and
mov
sbb
rcrb
rclb
loop
jge
push
loopne
testb
cmp
pop
cwtl
adc
cmc
push
mov
inc
inc
mov
cs
xor
into
ja
inc
cmp
push
add
sarb
cmp
jge
loop
mov
mov
mov
xor
or
and
call
jne
inc
cmp
jmp
andb
dec
lods
jae
jecxz
lret
lea
cli
xchg
xlat
loopne
pop
inc
xchg
dec
xlat
stos
pop
mov
jnp
and
fwait
js
ret
sahf
nop
dec
idiv
loop
sbb
inc
pop
rolb
imul
shlb
push
scas
jge
sub
sbb
mov
and
add
add
add
ljmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
ljmp
mov
push
add
ljmp
mov
ljmp
int3
ljmp
insl
jae
arpl
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
ljmp
clc
ljmp
push
jmp
add
add
add
add
imul
imul
outsb
addr16
jns
gs
js
add
push
popa
imul
jo
imul
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
sbb
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
outsl
add
outsl
add
je
and
push
add
outsb
add
add
jae
and
dec
add
je
add
outsb
add
je
and
push
add
arpl
jne
jb
imul
and
inc
add
imul
jb
add
add
addb
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
imul
je
jae
add
add
js
add
add
add
add
add
jb
imul
je
add
jne
imul
add
data16
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
outsb
add
add
jae
and
dec
add
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
cmp
add
popa
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
xor
add
add
je
mov
leave
pop
out
int3
gs
scas
fistl
jno
and
mov
sarb
mov
jb
push
cli
ljmp
cs
leave
cmp
sub
rcrb
jle
mov
push
adc
mov
xor
inc
loope
ret
sub
lods
and
mov
or
pusha
pop
bound
or
push
mov
mov
out
ret
jo
push
leave
or
push
les
adc
mov
mov
inc
fwait
jg
test
mov
scas
mov
repz
bound
sub
cmpsl
jl
cltd
fs
clc
mov
ficoml
mov
ret
addr16
sarl
xchg
idivl
stc
mov
mov
and
cmp
fstpt
roll
outsb
inc
or
dec
lds
arpl
loope
jne
lods
out
fst
or
es
aad
or
out
and
hlt
or
in
add
test
jo
jb
pusha
jae
xchg
pop
dec
inc
add
cmpsb
roll
xor
int
loope
icebp
push
mov
push
inc
mov
jbe
jmp
jecxz
cmc
test
and
pop
imul
dec
ss
test
mov
cmc
rorl
iret
rep
mov
lret
jns
xor
out
push
add
push
jns
ja,pt
daa
mov
sub
adc
pop
das
mov
jbe
dec
and
sarb
cmc
cmp
clc
imul
test
insl
cmpsl
jg
popl
sub
out
lea
jl
add
push
inc
mov
pop
outsl
scas
push
stc
cmp
sub
jno
or
lea
xor
cmp
lret
cmp
inc
hlt
push
frstor
push
xchg
cmp
dec
push
jp
jae
xchg
stos
inc
lret
popf
psubusw
or
insl
or
sub
cmc
das
dec
movsl
mov
mov
mov
aaa
stos
jg
cmp
or
or
scas
sar
xor
in
cmp
pop
or
and
push
sahf
cmp
std
sbb
out
push
popa
mov
mov
xchg
clc
and
aad
mov
inc
in
adcl
cmpsb
or
hlt
icebp
movsl
loope
sub
lods
push
pushf
into
fs
add
dec
lock
cld
add
cmp
stos
xor
subb
fsubl
mov
adc
mov
imul
sbb
aam
inc
xchg
sub
mov
sub
mov
dec
stos
pop
dec
lods
out
sub
and
mov
mov
stc
mov
cltd
dec
xor
push
xchg
push
mov
dec
ss
cmp
pop
sub
lods
pop
xor
outsb
out
jae
lret
or
pop
insb
or
inc
gs
pop
das
push
jmp
push
pop
xor
push
in
pop
ret
mov
pop
out
or
sub
cmp
js
shll
sahf
sub
push
xor
int
inc
mov
fidivrl
xor
push
popa
adc
iret
inc
imul
fwait
mov
popa
test
mov
and
jp
jle
sbb
shlb
lcall
cmp
in
aaa
cld
dec
fwait
mov
ja
arpl
loop
loop
cld
shlb
les
mov
les
popf
out
sbb
shll
jmp
scas
sub
subl
dec
cwtl
pop
sub
mov
sub
adc
sub
push
lcall
xor
and
clc
lret
sbb
sahf
dec
arpl
and
mov
lret
mov
add
push
les
add
xchg
mov
hlt
pop
stos
div
fwait
add
mov
xorl
test
jae
mov
or
out
into
push
push
divl
bound
insl
popf
xchg
inc
pop
lods
fucom
sub
mov
cmp
data16
inc
xlat
loop
and
repz
in
movsl
in
push
pminub
xchg
js
xlat
sbb
fstl
push
jb
ror
sbb
outsb
lods
jge
or
inc
fisttps
cmpsb
fnsave
out
je
ret
push
fisttps
cmp
es
popf
clc
xchg
inc
mov
adc
rcr
adc
icebp
out
push
push
mov
stc
cmp
lret
jl
fisubrs
fidivl
loope
push
sbb
sbbl
int3
imul
shrl
clc
push
cmp
xchg
xor
out
or
addr16
jmp
inc
mov
aaa
xchg
das
orl
and
cli
stos
in
mov
andb
sbb
arpl
lret
sbb
into
aaa
int3
xchg
daa
ja
cmc
xlat
jle
or
sub
inc
ret
jl
addr16
test
mov
idiv
loope
insb
das
mov
aad
mov
cmp
and
jl
and
adcb
pop
scas
adc
lret
js
sbb
es
and
subl
mov
sti
sub
push
clc
jae
imul
movsl
sarl
lahf
mov
sub
jo
inc
sub
and
cmpsb
pushf
sbb
or
je
mov
jg
shl
test
shll
pop
stc
popa
inc
test
jge
cmp
xchg
into
mov
pusha
sarb
in
je
mov
jg
aad
cltd
xor
sub
sub
icebp
arpl
pushf
xchg
mov
inc
nop
jg
pop
push
sub
pop
subl
mov
mov
fwait
dec
fldt
jg
out
xor
test
pop
in
cwtl
sub
cmp
xor
outsl
xor
mov
mov
into
add
fdivs
iret
pusha
ljmp
ret
pop
aas
cli
shl
int
imul
pop
test
repnz
jp
js
lea
movsl
pop
pop
ret
test
loopne
shrl
test
or
mov
jg
jmp
mov
and
mov
sbb
out
pop
bound
inc
jl
xlat
xchg
or
outsl
lods
sbb
push
bound
cmpsb
fildl
mov
test
repnz
push
pop
push
adc
lahf
adc
xchg
in
rclb
insl
test
sbb
or
mov
sahf
hlt
mov
push
ror
fadd
sub
lods
mov
cmc
push
cmp
cmpsl
test
jns
mov
fisubrs
fwait
in
dec
ficoml
stc
jbe
gs
xchg
push
out
inc
fidivl
pop
dec
dec
pop
dec
aam
mov
sbb
or
mov
inc
or
das
xchg
clc
push
jg
fwait
loop
adc
and
sub
movsl
push
xor
add
rcl
lods
push
jae
jmp
jmp
pop
sbb
cltd
pop
jbe
adc
lcall
mov
jge
jae
mov
fcmovb
adc
lcall
push
pop
mov
xchg
pop
les
adc
jecxz
cmp
lahf
push
aad
jle
movsb
sarl
lret
lret
mov
jb
mul
sbb
mov
in
mov
jg
or
leave
hlt
movsl
pop
call
test
xchg
ret
imul
mov
sub
lret
fmull
add
test
je
ja
xor
or
movsl
add
inc
aam
loop
adc
in
into
cmp
aam
adc
test
mov
fisubs
das
adc
push
mov
adc
or
jnp
jp
aad
add
pop
cmp
pop
int
mov
inc
jb
cmp
jmp
shl
jecxz
xor
adc
ds
push
ret
idiv
repz
lods
sbb
shlb
xchg
inc
jl
pop
mov
or
add
mov
cltd
push
add
push
jp
out
arpl
pop
iret
aas
aas
in
je
xchg
mov
scas
fldt
xchg
lock
or
sbb
lret
push
jp
sbb
dec
inc
mov
xchg
out
movsl
mov
lret
and
push
mov
out
in
dec
adc
lahf
mov
outsl
inc
xor
push
aad
fists
nop
mov
push
jb
sub
je
out
adc
mov
and
je
ror
add
jl
scas
pop
cmp
les
or
pop
int3
lods
dec
shll
xor
fisubs
pusha
lcall
int3
pop
push
in
mov
call
arpl
and
lcall
jnp
idivb
lahf
outsb
push
les
cmp
rorl
scas
jecxz
enter
data16
iret
inc
into
and
inc
add
mov
xchg
jmp
pop
iret
add
mov
inc
cs
testb
dec
pop
cmp
int3
sbb
jmp
adc
fmulp
mov
js
nopl
aam
push
dec
rorb
daa
xor
cwtl
jl
icebp
fldenv
arpl
stos
pushl
loop
enter
add
aas
lcall
add
and
dec
lahf
lock
sub
icebp
xchg
xor
push
sbbl
inc
sub
add
ss
bound
nop
xchg
loop
sub
movsl
xchg
inc
sub
xor
stc
lods
or
pop
pushf
dec
ret
addr16
fdivrl
sub
add
push
popa
xor
pop
pop
cmpl
or
jns
push
xor
jge
pop
addb
test
add
mov
cmc
add
imul
sahf
clc
and
loope
scas
pop
dec
icebp
das
loop
in
mov
pusha
sbb
xchg
mov
sbb
bound
ss
xchg
fwait
cli
xor
cmp
das
dec
add
sbb
xor
jg
fwait
dec
nop
adc
std
movsl
leave
xor
ret
roll
mov
mov
adc
and
shll
xorl
lret
shrb
aaa
test
lods
test
pslld
fwait
sub
inc
sbbl
les
mov
imul
add
js
fiaddl
xchg
out
jmp
fs
add
in
cmp
out
dec
sbb
adc
mov
je
dec
push
xchg
xor
loope
test
int
add
xchg
ja
cmp
dec
cs
daa
scas
xor
add
jge
pop
sub
jns
sbb
das
inc
dec
push
das
sbb
lret
imul
fs
mov
push
rol
push
aaa
out
call
stc
fldenv
cmp
inc
fcoml
dec
pop
das
lods
add
in
outsl
fwait
js
fisubrl
and
xor
dec
in
pusha
andb
lahf
pop
jmp
add
sub
shll
adc
xchg
stos
aad
ficompl
int3
push
adc
movsb
pushf
mov
jp
or
inc
jne
in
repnz
out
mov
cld
mov
imul
dec
cmp
aaa
adc
fmull
pop
and
dec
jg
arpl
adc
dec
jne
cmp
mov
jb
mov
nop
mov
pop
push
jmp
sub
push
shrb
stos
pop
cmp
clc
stc
mov
rolb
out
or
fildll
call
and
scas
push
rcrb
cmpsl
add
fdiv
jns
adc
jne
pop
mov
mov
shr
add
in
lods
addb
jl
shr
mov
add
outsl
rol
scas
pop
xchg
pushf
xchg
call
aaa
mov
pop
sbb
inc
xchg
les
ret
jno
aaa
push
lock
mov
cmpsl
jle
xchg
fnstsw
jo
stos
push
jle
cmp
pop
jmp
jb
cmpsl
xchg
cmp
loopne
data16
and
push
int3
inc
paddusw
xor
dec
ljmp
xor
insb
mov
icebp
in
insb
insl
loop
pusha
adc
insl
mov
pop
ja
sbb
mov
mov
add
mov
dec
outsl
sbb
inc
cs
jno
daa
loopne
ret
xchg
out
fsubr
jle
add
sub
and
push
mov
outsl
jmp
out
fwait
sbb
mov
mov
or
in
dec
add
xchg
fcomi
push
aaa
sub
test
sub
fcmovne
mov
cmp
int
jle,pt
jns
insl
out
add
sbb
aam
and
fld
movsb
cmp
imul
pusha
int
ud1
les
mov
xchg
mov
andb
cmp
cmp
mov
push
cmp
repnz
mov
pop
pop
mov
test
nop
repz
scas
gs
movsl
iret
xor
test
mov
mov
mov
and
lods
sti
sub
jns
jge
pop
jo
and
mov
inc
shl
lds
cmpl
and
sub
aad
push
pop
lahf
fists
mov
pop
add
xor
jae
lods
mov
sub
dec
test
notb
mov
mov
out
cmpsb
addr16
adc
aas
les
add
and
gs
fstpt
enter
sbb
fisttpll
add
out
mov
mov
les
lcall
xor
test
cli
inc
xchg
insb
or
outsb
dec
in
imul
shlb
and
mov
jno
push
jg
mov
stos
out
sub
gs
leave
mov
jle
adc
fstps
ja
aam
iret
push
xchg
mov
mov
repnz
mov
and
inc
repnz
push
andb
loope
inc
push
test
lret
popf
pusha
add
lcall
into
sub
and
xlat
loop
jg
arpl
cmp
pop
lods
cld
mov
addr16
pop
arpl
xlat
mov
into
repnz
inc
dec
mov
jns
jg
pop
push
in
imul
fs
nop
push
mov
pop
xlat
xor
inc
popa
das
les
fbstp
inc
mov
xorl
movsb
rclb
orl
and
sahf
dec
mov
or
sahf
xor
inc
dec
nop
lds
mov
add
or
mov
mov
jb
xor
cmp
fcompl
and
dec
popl
sub
ret
pop
mov
lahf
jno
in
sbb
mov
leave
mov
dec
lahf
jge
jge
push
mov
out
xchg
scas
mov
scas
pop
xor
fstpl
stos
cmp
jl
pop
fsubrs
inc
adc
rol
push
popa
push
cmp
imul
daa
mov
and
out
and
sti
sub
or
mov
add
push
fldenv
aam
cmp
add
pop
jl
push
mov
sbb
cmp
lret
and
pop
jno
jae
movsl
pusha
sub
add
insl
mov
aam
or
sbbb
push
mov
vhaddps
in
outsl
xchg
xor
add
adcl
cmp
dec
js
mov
loopne
sbb
and
sbb
std
lcall
data16
jg
mov
cmp
orl
dec
push
mov
int
add
fmuls
mov
jno
add
jbe
out
mov
stc
repz
test
mov
push
js
dec
imul
xor
movsl
jns
xor
repnz
xchg
pop
mov
inc
mov
xchg
pop
sbb
dec
lea
lods
aaa
cld
dec
stc
mov
repnz
sub
cmp
pop
mov
inc
int
jne
sbb
ret
int
loop
jns
repnz
or
cmp
mov
movsb
int3
push
nop
mov
sub
std
aas
movsl
subl
push
add
lods
add
pop
in
push
xchg
push
setnp
pop
hlt
idiv
mov
sbb
mov
mov
stos
sub
pop
mov
dec
dec
in
into
into
xlat
xlat
sahf
xor
fdivrp
jg
sbb
xchg
xchg
dec
cmp
xchg
push
mov
test
outsl
das
add
addl
xchg
test
mov
cltd
jns
add
xchg
out
mov
bound
xchg
rorl
in
pushf
jg
and
add
xorl
ss
push
or
jne
mov
jne
int3
sub
and
adc
shr
pop
mov
adc
sub
or
add
inc
adc
sarl
inc
mov
dec
and
lods
ds
add
xchg
clc
sub
shlb
jge
outsb
mov
xchg
cmp
outsb
cld
and
decl
pusha
sub
push
sub
std
or
scas
faddl
pop
pop
add
int
sar
lret
cmp
out
or
mov
push
int
outsb
test
mov
dec
xrelease
lretw
shrl
leave
mov
aaa
mov
jae
and
jnp
push
shl
decb
lods
sbb
test
nop
femms
jno
mov
adc
mov
int
aam
mov
inc
pop
mov
or
sub
psrld
push
rol
popa
mov
addl
sahf
cmp
lahf
repz
xchg
push
test
stos
xchg
pusha
and
test
rcrl
and
out
mov
pop
out
insl
mov
mov
call
scas
mov
inc
in
inc
mov
mov
int
adc
dec
xor
sub
add
dec
and
sub
add
cmpsb
enter
mov
decl
push
xor
mov
dec
rcrl
mov
and
cld
add
push
ds
clc
cmc
sub
stos
or
sub
lret
xchg
fsts
add
sahf
dec
lretw
out
rclb
cmp
or
sbb
sub
in
dec
ds
sub
aaa
std
pop
dec
mov
jmp
pushf
lahf
jge
push
mov
outsl
inc
bound
ret
push
push
mov
adc
fadds
fdivp
je
test
shrl
xor
jl
push
loop
adc
jnp
decl
notb
repz
xorps
addr16
mov
imul
cmp
test
arpl
hlt
ja
les
addb
popf
adc
shll
in
ja
mov
imul
leave
add
pop
aam
jbe
scas
movsb
repz
push
xor
push
pop
cmpsl
xchg
loop
xchg
dec
ja
dec
cmc
mov
lret
xchg
les
orl
cmc
inc
loop
rcll
pushl
arpl
fsub
insl
out
in
addb
xor
lahf
push
icebp
mov
mov
push
inc
pushl
in
mov
lcall
cmc
cmp
fwait
test
test
call
xchg
or
fs
mov
xor
xchg
xchg
push
std
icebp
ja
sbb
or
sub
lods
outsl
rep
xchg
js
andb
insl
push
lock
sahf
mov
jae
mov
scas
test
adc
pop
mov
jno
inc
lea
xlat
mov
scas
call
fs
and
outsl
fistpll
mov
jne
mov
cs
ljmp
cmp
inc
lret
shrb
mov
adc
nop
sub
dec
jne
int
std
icebp
cmp
add
pop
xor
rol
pop
push
loop
pop
lahf
lods
mov
xchg
shr
push
sub
push
jecxz
jg
jg
jno
sahf
mov
pop
fwait
rorb
dec
outsb
mov
fildll
jnp
jle
imul
cld
lea
add
or
dec
addb
push
mov
xchg
cmpb
inc
int3
jae
adc
icebp
pop
enter
arpl
mov
pop
dec
jmp
test
push
cmpsb
aaa
cmpsl
xchg
jno
and
icebp
lds
cmpsb
mov
fistpll
lret
pusha
fxch
clc
push
outsb
dec
out
ljmp
in
test
push
or
xchg
lret
mov
sub
xor
cmp
inc
and
out
xor
fsubp
cld
sub
movsl
push
jo
adc
fst
push
dec
call
inc
test
ss
int
push
fcoml
fdivp
hlt
scas
or
push
adc
dec
sub
fsubrl
dec
xchg
or
dec
pop
les
pop
sbb
push
jmp
adc
repz
in
pop
mov
mov
daa
add
je
divl
das
into
daa
pop
sgdtl
fisubs
jmp
sbb
nop
sti
fcomip
xchg
push
gs
lods
rorl
ror
push
jl
mov
inc
jb
in
adc
inc
xchg
adc
pop
mov
in
fsubrl
clc
push
iret
xchg
pop
jle
aam
adc
sub
stos
pop
mov
in
mov
mov
stos
inc
dec
es
lret
out
std
mov
inc
aas
add
ret
sbb
xchg
push
dec
or
into
pop
jmp
nop
das
es
fs
cmpsb
xchg
nop
mov
inc
jns
and
fs
jbe
adc
pusha
pop
shl
sub
add
and
shll
jns
cmp
dec
das
push
and
mov
popa
shrb
outsl
fildll
movsb
mov
inc
in
out
jmp
leave
shll
adc
aad
xor
mov
iret
fwait
imul
inc
pushl
nop
and
pop
stos
push
mov
sarl
pop
idivb
xor
ja
lods
push
dec
pushf
jns
mov
inc
inc
out
sub
cpuid
ss
jne
rcrl
dec
mov
inc
dec
fstps
fxch
dec
mov
inc
aaa
lods
repnz
stc
jno
arpl
inc
mov
dec
scas
pop
scas
mov
int3
icebp
xchg
jo
jo
sbb
jo
cltd
mov
or
mov
mov
mov
cmpsb
or
mov
or
les
orl
pop
and
dec
das
xor
jge
jmp
push
mov
cmp
repnz
dec
mov
mov
cmc
movsl
jp
mulb
push
push
repz
push
lret
and
xor
aas
inc
push
test
mov
cltd
push
push
jne
sbb
cli
sub
popf
mov
fisubrl
shlb
cmpb
cmpsl
sbb
out
dec
or
addr16
push
ja
mov
ret
inc
mov
jae
int3
mov
sub
jl
and
lds
and
add
pop
jecxz
lds
pushf
fistpl
xchg
add
xor
rcrl
or
inc
adc
shlb
pop
sar
scas
scas
das
int
inc
pop
daa
sub
sbb
cmpl
push
aam
mov
cmp
cmp
sub
ds
add
or
lret
lods
adc
jle
idivb
arpl
pop
or
jns
sbb
jmp
vmread
sub
jg
jns
or
or
pop
and
mov
add
roll
rcl
and
xchg
adc
cmpsl
outsl
cmp
loop
rcl
fsubs
add
push
icebp
inc
cli
fiaddl
sbb
push
seta
rep
adcb
add
pusha
les
shll
jo
xor
scas
mov
sub
push
add
insb
enter
stos
sahf
in
add
add
cmpsb
inc
mov
ret
je
jle
adc
mov
test
mov
mov
push
lahf
ret
fmul
xor
in
lods
mov
fidivl
add
pop
shll
movsb
push
push
mov
stc
xorb
in
daa
push
call
mov
push
mov
aad
sub
movsb
cltd
xchg
lret
repnz
dec
mov
mov
lds
inc
mov
push
push
ja
sub
mov
mov
cmp
xor
ljmp
cltd
pop
mov
cmpsb
sub
jno,pn
cltd
fcomp
sti
test
cmp
pop
mov
stc
jg
jl
dec
mov
dec
enter
dec
jne
or
xchg
fisubl
sbb
test
jmp
data16
xor
xchg
adc
test
pop
je
addr16
sub
iret
add
mov
pusha
xor
and
out
pop
jo,pn
test
ljmp
out
aad
add
push
cld
inc
lods
inc
lds
jb
and
mov
das
or
lret
ljmp
pop
or
pop
mov
outsb
xrelease
push
add
outsl
jp,pn
or
cmp
dec
loopne
scas
sbb
dec
xchg
mov
xchg
fwait
pop
mov
mov
push
in
faddl
leavew
out
in
sahf
xchg
pop
sbb
sbb
mov
loope
rcll
pop
sbb
int3
pop
adc
idivb
xchg
jl
push
data16
imul
add
jmp
xchg
aam
shrb
jne
pushf
mov
and
jbe
popa
mov
in
mov
or
enter
ret
pop
in
test
fadds
std
in
fs
mov
sbb
shrb
and
lea
adc
or
xchg
ja
das
js
xchg
shrb
fisubl
pop
sbb
pop
xchg
sbb
mov
orb
in
inc
pusha
loopne
aas
dec
test
pop
or
sbb
mov
shl
pushf
jbe
dec
xor
fst
sti
mov
xchg
inc
clc
push
mov
lret
pop
add
stos
and
lret
jecxz
mov
jnp
fimuls
ja
int3
arpl
adc
lea
repnz
psllq
mov
fistpll
sahf
rsqrtps
sbb
stc
repnz
stos
pop
inc
hlt
daa
add
mov
xchg
mov
hlt
sbb
pop
aam
push
xorl
xor
inc
shll
loope
sbb
pop
cmp
push
inc
xor
test
call
jns
mov
cmp
xchg
ret
adc
popa
xor
xchg
pop
mov
mov
add
mov
mov
scas
adc
xchg
mov
inc
push
xlat
pop
sbb
jecxz
mov
mov
in
adc
pushw
cld
lcall
imul
clc
arpl
jno
xor
cld
pop
jle
mov
stc
push
push
stc
adc
lcall
cmp
mov
cmpsl
hlt
aas
push
inc
out
in
mov
and
es
pop
add
jbe
mov
aas
ret
xor
add
xlat
mov
out
xor
cmp
es
and
jns
insb
arpl
jnp
and
addl
dec
test
pop
leave
ret
repnz
pop
cmp
jb
in
cwtl
cmp
adc
aad
and
pop
mov
stos
addr16
insb
mov
cmp
mov
jg
push
ret
std
ja
mov
daa
in
lret
cmp
or
jnp
push
insl
add
mov
add
es
mov
cmp
or
ret
dec
stos
xchg
push
pop
adc
pushf
xchg
lret
loopne
and
rcll
lret
fildl
fcmovnb
cwtl
stos
jl
pushf
pop
outsb
aaa
movsl
xor
cli
jns
mov
cmpsl
jo
adc
daa
inc
dec
cwtl
mov
sub
and
mov
shl
jmp
xchg
int3
mov
ret
adc
loop
xor
fld
add
mov
mov
loop
test
leave
inc
mov
inc
add
mov
out
clc
lods
movsl
xchg
jg
sbb
xor
aam
in
pop
pop
repz
daa
add
aaa
cmpsb
sbb
cmpsb
dec
push
rorl
push
jo
mov
pop
or
inc
int3
cmp
xchg
fsubl
adc
iret
adc
in
sbb
add
sarl
icebp
or
out
aam
mov
data16
std
adc
push
pop
flds
inc
or
push
and
cmp
dec
adc
pop
adc
cmp
add
cs
pop
mov
incb
xor
dec
fidivs
push
sub
cld
add
pop
jecxz
dec
aad
mov
pushf
push
and
dec
es
push
xchg
inc
mov
les
jae
push
mov
out
in
shll
and
add
rol
dec
je
mov
movsl
cmpsl
outsl
movsl
xchg
test
aam
pop
lahf
sub
mov
enter
push
sub
dec
or
inc
int
sub
addl
setb
into
lret
dec
in
sub
cmp
aad
cmp
leave
out
push
loope
mov
loopne
xlat
andb
scas
inc
jle
cs
pop
into
ds
cld
xor
push
and
push
push
aas
pusha
or
into
push
cmpb
push
stc
loope
jp
mov
clc
mov
or
out
xor
jnp
xor
inc
push
inc
dec
in
fidivrl
imul
sub
andl
xchg
fucomi
out
imul
fs
jg
jp
lahf
out
sbb
rol
mov
mov
jp
mov
mov
jle
sub
fldl
pushf
stos
cmp
insl
in
subb
mov
adc
movq
mov
dec
add
jnp
nop
jp
sbb
mov
dec
jp
aad
mov
mov
std
lahf
fisubs
mov
fldenv
fimull
inc
bnd
and
out
mov
or
jl
sbb
adc
test
cmp
inc
out
jno
jae
sbb
fcmovbe
mov
je
mov
jmp
add
lds
mov
mov
lcall
repnz
dec
ss
and
sbb
inc
xor
xchg
lods
daa
scas
jno
xor
jne
nop
out
rclb
aad
mov
pop
ficompl
push
aad
sub
roll
mov
and
dec
pop
mov
ret
lret
cld
mov
xchg
mov
pop
not
jbe
dec
rcr
sbb
fidivrs
pmuludq
or
cs
pmulhuw
popf
clc
jae
jno
fs
xchg
repz
je
mov
adcb
pop
mov
sub
loopne
pop
test
cli
mov
or
adc
xchg
iret
imul
lods
xor
xlat
fisubs
mov
and
test
jo
sub
je
nop
push
jge
push
jb
popl
xchg
xchg
gs
add
inc
int
adc
mov
add
pop
fsubrl
inc
ljmp
lds
data16
pop
enter
xchg
cs
mov
add
jb
mov
fs
into
mov
push
dec
cmc
addr16
xor
aas
push
shlb
adc
out
aaa
xchg
test
sahf
xor
sbb
push
psrlq
cmp
xor
push
or
dec
fisubrl
mov
xchg
push
jg
aas
cmp
sub
rorl
mov
sarb
or
xchg
push
enter
adc
mull
xor
nop
and
mov
add
sbb
push
pop
mov
sbb
xchg
or
adc
sarl
cmp
out
xor
add
ret
mov
xchg
leave
jmp
test
and
mov
psubsw
stc
xchg
dec
xchg
pop
inc
xlat
ljmp
ret
loope
pop
push
std
lods
sub
push
cwtl
jecxz
xor
mov
sti
sub
xchg
sub
mov
jb
es
test
sub
ss
test
mov
mov
int3
jbe
jae
mov
sub
add
sub
loop
push
inc
inc
adc
in
push
lcall
and
test
imul
insb
enter
xchg
and
icebp
inc
sbb
sahf
jp
jb
cwtl
popa
inc
jge
mov
or
sbbb
xchg
jg
nop
or
insb
xor
or
test
jbe
inc
into
add
shll
rcrl
shll
jp
adc
in
pusha
adc
xor
mov
jge
and
and
xor
lret
int3
loope
lods
test
and
loop
xor
adc
arpl
jae
scas
and
lds
lret
inc
or
mov
es
test
jle
or
mov
mov
xchg
dec
push
addb
mov
lds
push
pop
popa
lahf
clc
scas
pushf
pusha
dec
arpl
push
fbstp
jecxz
pop
lahf
out
sti
and
je
cmp
pop
jg
es
sub
cwtl
lds
scas
int
jnp
into
divl
adc
cmc
negl
sub
sti
sbb
mov
sub
pop
std
mov
sub
dec
dec
mov
or
aas
dec
sti
xor
dec
cmp
icebp
mov
xchg
es
mulb
xor
cli
jge
xchg
f2xm1
cmp
inc
mov
sti
loope
sub
lods
lret
fdivrs
int
fcoms
mov
fildl
and
xchg
mov
cmp
or
and
enter
jp
dec
loopne
js
adc
or
out
fsub
sub
addr16
js
push
mov
sahf
mov
mov
push
rorl
sbb
cld
mov
mov
ljmp
adc
stc
inc
ljmp
lahf
pop
aam
adc
push
pop
lcall
xchg
sbb
fidivs
ss
test
sti
movsl
movsl
jecxz
sbb
outsb
adcb
pop
iret
lods
arpl
mov
pop
xchg
mov
mull
dec
lock
dec
inc
sub
jmp
mov
jo
sbb
jl
xchg
xor
sbb
cmpsb
xor
sahf
sbb
jmp
test
mov
inc
nop
std
xor
repnz
sbb
icebp
push
mov
sub
aad
mov
xchg
mov
add
dec
inc
cmc
cld
inc
test
mov
outsb
hlt
push
mov
out
jns
mov
fisttps
scas
or
push
out
dec
sub
scas
imul
lcall
aas
mov
jno
in
or
jae
aad
out
nop
add
lcall
inc
push
xchg
testb
adc
mov
nop
pop
mov
pusha
push
inc
es
inc
ret
or
rcr
leave
mov
pop
lods
mov
push
pop
shlb
mov
movsl
lret
mov
aas
das
sar
test
mov
push
cmp
outsl
adc
dec
popa
insl
xor
fnsetpm(287
push
push
out
test
and
sahf
mov
xchg
mov
jle
xchg
rorl
jecxz
frstor
popa
xchg
jmp
nop
xorl
addr16
sub
sahf
stc
mov
jg
push
push
pop
mov
loope
pop
aaa
inc
mov
aad
dec
loop
aas
outsl
stos
iret
out
inc
cmpsb
fstps
and
add
inc
int3
dec
push
or
aad
aas
mov
add
mov
xchg
sub
rcrl
out
shr
std
sbb
xor
inc
dec
or
jbe
mov
out
jno
lret
lds
dec
lods
xchg
jno
cwtl
mov
jbe
push
xchg
in
sarb
icebp
xchg
ret
insb
rorb
jmp
imul
mov
mov
ljmp
cld
add
xlat
rolb
xor
sar
loop
cmpl
leave
lock
sbb
das
ret
inc
or
add
mov
inc
sbb
inc
out
psubusb
ja
cmp
push
cmp
ret
out
xlat
fxch
es
sti
into
inc
push
adc
ja
adc
aam
data16
or
arpl
ja
enter
pop
flds
aaa
hlt
insl
js
pop
pop
push
imul
test
push
xlat
out
sbb
imul
inc
and
lods
imul
inc
shlb
pushf
xchg
incb
hlt
mov
adc
pop
pop
mov
fdivr
aam
dec
xor
xchg
mov
test
test
popa
adc
or
lahf
pop
xchg
aam
mov
scas
xchg
popf
push
cld
scas
jnp
adc
and
and
leave
rclb
sbb
sub
nop
movsl
add
adc
pop
fucomi
sub
pop
xchg
cmp
test
inc
dec
inc
add
inc
rolb
and
mov
cmp
sbb
fdivl
insl
pop
wrmsr
dec
enter
das
dec
dec
xchg
lret
das
fsubrs
sub
mov
dec
or
pop
cltd
sbbl
mov
and
int
jmp
or
or
xchg
mov
jg
fs
fs
int3
dec
es
lea
imul
hlt
jl
mov
js
les
mov
leave
gs
inc
or
cwtl
dec
fcompl
sti
test
pop
movsl
mov
sub
xor
inc
sub
sbb
popf
inc
nop
mov
arpl
mov
aam
mov
movsb
and
cmp
and
sbb
sahf
xor
mov
test
cld
pop
dec
lds
loopne
fists
enter
fldcw
out
je
adc
imulb
lret
shrl
xchg
cli
repnz
push
sbb
scas
xor
xchg
fadd
jne
mov
call
scas
fwait
push
cmp
adc
pop
inc
ja
jmp
lret
ss
aas
inc
arpl
or
das
daa
test
xchg
lock
push
shufps
mov
aaa
pusha
mov
cld
xor
fs
adc
push
rcrl
xor
inc
push
mov
push
xor
jecxz
cmp
leave
cmp
xorb
xchg
pop
stc
and
and
jle
lret
negb
or
mov
mov
push
test
or
fs
push
lea
xor
jle
or
push
daa
jg
cmc
pop
lcall
daa
cmp
sarb
cmp
ret
roll
add
jo
mov
pop
jnp
xchg
adc
lahf
sbb
in
int
outsl
mov
cmpl
or
mov
inc
je
clc
cmc
test
ret
push
xor
in
lods
lds
inc
mov
stc
addr16
test
xor
jno
xchg
test
xchg
daa
jns
ds
jnp
cltd
jecxz
call
push
mov
jle
mov
fsubr
dec
lret
mov
jno
aaa
ret
roll
das
cld
jecxz
xor
push
cmpb
xor
call
mov
dec
mov
mov
movsb
mov
push
leave
enter
lret
and
mov
dec
pop
mov
rolb
and
add
ret
les
mov
pop
mov
jno
ficomps
pop
mov
xchg
adc
mov
pop
in
loop
and
test
stos
jg
lcall
sbb
into
in
bound
mov
ds
inc
hlt
inc
data16
out
mov
sub
int3
xchg
sbb
stos
lods
das
out
addl
adc
mov
fdivrl
stos
je
and
mov
jle
xlat
mov
pop
xor
adc
cmc
das
add
outsl
xor
outsb
mov
sub
outsl
fidivrs
add
sub
lea
cmpsb
mov
sarl
jg
add
sbb
xchg
lds
bound
jne
mov
adc
pushf
jecxz
push
insl
add
aad
data16
adc
jge
jae
cmpsb
popa
xor
sbb
lds
adcl
xor
push
addl
imul
mov
out
add
sub
scas
dec
push
mov
shll
sbb
inc
mov
mov
lea
xchg
stos
push
xchg
in
add
cmp
or
ljmp
fsubrs
fsubrs
movsb
outsb
add
jge
push
out
test
sub
pop
nop
push
leave
mov
add
sbb
stos
xlat
inc
test
inc
mov
std
jg
dec
xor
sbb
icebp
adc
xchg
sub
stos
adc
add
mov
pop
jbe
sbb
pushf
adc
mov
repnz
out
stos
jns
lahf
inc
jb
pop
aaa
imul
imul
mov
cmp
stos
pop
loope
mov
daa
pop
push
mov
push
inc
dec
dec
in
xchg
fadd
aaa
imul
aam
aam
mov
mov
sub
and
in
push
sub
mov
jo
movsl
ret
add
test
sbb
scas
pop
or
aad
aas
outsl
mov
clc
cltd
lds
test
inc
sub
cmp
dec
push
sahf
jns
push
dec
xchg
adc
push
mov
xchg
xor
xor
and
pop
cmpsl
mov
inc
xchg
push
xchg
fwait
pop
lahf
pop
loop
xchg
adc
out
cmp
and
mull
icebp
jb
inc
sbb
pop
cmp
and
mov
mov
mov
mov
push
ss
mov
xchg
mov
das
push
out
and
mov
dec
xor
aam
ds
mov
imul
add
outsb
push
fs
dec
jle
lock
sub
push
mov
adc
es
repnz
lret
testl
mov
int
out
mov
jae
mov
jl
xchg
enter
jo
sub
lret
push
dec
xlat
add
outsl
mov
fdivrl
mov
imul
inc
xchg
movsl
jns
test
cmp
xlat
pop
push
xchg
xchg
push
adc
mov
push
repz
loop
adc
pop
sbb
lds
int
sub
jno
loop
mov
cmp
xlat
mov
nop
cmpsb
cmp
sar
xor
repz
hlt
aaa
cmp
imul
add
ficoms
and
mov
icebp
add
bound
adc
into
popa
push
add
loopne
push
imul
call
add
pop
adc
fstpt
pop
daa
xchg
xchg
xchg
and
dec
push
inc
jmp
aas
test
mov
int
out
mov
imul
dec
scas
pushf
dec
jl
mov
lds
mov
test
pop
sbb
movsb
push
je
jmp
xlat
outsl
push
mov
je,pn
jp
xor
add
mov
