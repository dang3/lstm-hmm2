lds
fisttpll
cmp
mov
movsb
mov
faddl
icebp
sbb
xor
flds
inc
adc
cmp
xchg
adc
lcall
and
mov
xchg
cmp
cmp
fstl
jmp
mov
pop
fsubl
inc
mov
pop
notl
mov
dec
aam
pop
mov
and
push
sub
xchg
mov
imul
js
aam
sti
fstl
rolb
iret
sbb
in
add
mov
es
leave
sbb
sbb
nop
aad
sub
dec
daa
mov
daa
pop
ret
push
jmp
sahf
sbb
bnd
xor
rcl
ljmp
lea
leave
dec
inc
inc
into
enter
int
insl
mov
pop
and
jl
pop
dec
leave
fsubrl
push
dec
into
dec
pushf
dec
xor
iret
push
xchg
outsb
sbb
lock
ficompl
fucomi
repnz
out
or
sub
sbb
or
cmc
fisubrl
rorl
test
sub
dec
mov
push
fdivrl
jno
mov
xchg
frstor
call
or
lds
nop
xchg
pop
push
cwtl
in
inc
mov
fdivs
fwait
aad
dec
fdivrs
gs
lds
xlat
push
lea
out
ss
xchg
fstl
ds
inc
iret
fadd
pusha
icebp
and
movsb
je
pop
xchg
and
adc
pop
dec
xchg
lea
pop
bound
fistps
js
or
adc
test
ja
mov
mov
sub
mov
lret
andb
sbb
rcrl
sbb
lds
dec
dec
sbb
jmp
movsl
int3
xchg
and
mov
pop
repnz
mov
js
jb
mov
mov
aad
cmp
in
ret
jge
push
xlat
pushf
add
push
sbb
ret
stos
cld
xor
xor
jo
mov
sub
add
pop
inc
shl
lret
xchg
xchg
fiadds
cmp
xchg
enter
pop
pop
inc
adc
pop
mov
bound
xchg
sti
xchg
sub
cwtl
add
andl
inc
pop
inc
test
dec
cmc
adcb
adc
pop
and
arpl
pop
movsb
pop
inc
mov
fidivs
dec
movsl
lods
std
pop
push
dec
rorl
add
and
mov
enter
fcomps
push
and
jge
test
sti
dec
sbb
sub
mov
mov
mov
pushf
dec
cmp
cmp
nop
mov
repnz
xor
jmp
into
pop
cmpb
sbb
fs
jne
fs
or
cmpsl
push
jg
or
xor
xor
cmc
and
push
cmp
ret
add
in
dec
adc
inc
mov
adc
arpl
pop
push
pop
push
ljmp
push
gs
push
int3
test
mul
ljmpw
shr
push
push
mov
adc
es
hlt
dec
test
xchg
pop
inc
ss
jmp
rcll
pop
xchg
fildl
les
mov
cmp
lahf
lret
insb
mov
mov
int3
pop
test
inc
push
sub
es
imul
lret
pop
popf
call
test
clc
mov
aaa
imul
mov
xchg
sbb
jmp
cmp
adc
jmp
cld
or
ret
cmpsb
mov
lret
movb
and
mov
popf
adc
es
sahf
mov
das
fists
cmp
repnz
add
or
mov
mov
mov
sub
mov
lcall
lods
js
ljmp
and
xchg
mov
mov
arpl
fidivrs
adc
es
or
mov
decl
or
jb
jmp
std
adc
clc
data16
add
lret
jbe
fwait
shlb
xchg
decb
ds
cmpb
dec
mov
je
or
and
sbb
int
push
cmp
push
add
sbb
jmp
into
in
out
lret
mov
xchg
lcall
popf
cmp
add
loope
jo
sbb
lds
pop
stos
push
lods
xchg
sub
jb
fisttpll
cmp
mov
movsb
mov
faddl
icebp
sbb
xor
mov
insb
test
ljmp
xchg
mov
shrb
jecxz
movsl
ret
fisubl
jb
fisubs
cmp
std
inc
popa
inc
and
add
add
sarb
push
pop
add
addr16
icebp
xchg
xor
mov
mov
sti
std
pop
pop
add
cmp
test
loopne
mov
xlat
lds
movsl
sbb
iret
adcl
sub
hlt
xor
test
outsl
aad
ret
push
fsubrs
mov
and
sahf
mov
sub
leave
mov
lahf
push
sub
pop
mov
clc
mov
aaa
mov
mov
aas
cli
xchg
inc
mov
sbb
cltd
jl
adc
fdivs
pop
dec
shll
jns
dec
pop
decl
xchg
dec
data16
pop
aad
ret
jg
xlat
xchg
faddl
repz
jno
fs
jmp
ja
clc
in
ret
gs
ja
in
mov
cmp
push
popf
testb
xor
jbe
lcall
mov
mov
fidivs
popf
iret
ret
loopne
das
cmpsl
xlat
add
push
push
pop
sti
jmp
test
mov
and
pop
fdivs
adc
pop
adc
xchg
inc
arpl
lds
ds
dec
loopne
xor
cwtl
fiadds
xchg
ret
add
bnd
or
mov
pop
jge
dec
sahf
fisubrl
xchg
repnz
dec
inc
pusha
pop
int
rcrl
xchg
mov
insl
in
inc
and
add
jecxz
in
mov
mov
mov
push
cwtl
lret
pop
test
mov
xor
leave
jns
movl
sti
push
or
and
xchg
cld
or
sbb
add
sti
or
and
mov
push
xor
faddl
shr
hlt
aaa
cmp
jne
je
mov
ret
pop
imul
cmp
jo
fwait
push
mov
mov
mov
mov
add
std
mov
stos
jg
stc
mov
xor
popa
mov
mov
adc
iret
lahf
push
mov
in
lea
mov
shl
sub
add
cmpsb
lcall
add
mov
xor
cmpsl
xor
push
sub
adc
stos
jb
imul
ret
xchg
mov
xchg
jae
mov
movb
js
cmp
lret
add
cmc
aam
or
xor
fld
addr16
sbb
dec
and
movsb
push
shl
fs
mov
jg
xlat
xchg
mov
push
mov
bound
jge
pop
jae
inc
inc
cmp
jnp
dec
das
jge
dec
mov
fldcw
mov
push
mov
in
pop
mov
push
mov
cmp
inc
sbb
sbb
popf
iret
inc
loopne
mov
add
inc
add
or
test
xor
roll
sbb
lea
ss
mov
loop
out
mov
mov
fists
add
out
lcall
xchg
dec
sub
hlt
je
xchg
shrl
or
mov
cmc
push
add
filds
lods
adc
adcl
push
clc
test
aaa
sub
mov
aas
lret
pushf
push
jo
or
orb
lods
cli
dec
inc
adc
mov
mov
pushf
jbe
push
mov
lods
jle
push
test
sti
add
inc
mov
fisttps
bnd
andb
loop
inc
invd
mov
or
xchg
adc
ret
arpl
test
lds
cmovl
push
mov
mov
sub
gs
in
insl
push
aad
mov
js
fwait
add
enter
in
lret
adc
dec
xor
xor
ficoms
mov
adc
push
popf
lahf
ja
pop
out
mov
js
xor
adc
add
jb
add
mov
adc
cwtl
mov
in
aad
cmp
dec
fwait
rcrb
lcall
jbe
movsb
lcall
stos
mov
jae
fidivl
mov
pop
ljmp
cmp
jno
dec
xchg
jo
sbb
sbbb
dec
fwait
lods
ja
cmp
sub
xor
fwait
test
or
cmp
push
jl
sbb
add
inc
not
in
push
mov
cld
jp
add
pop
mov
enter
inc
popa
lcall
faddp
loop
push
fisubs
orl
dec
test
andps
rcl
sarb
adc
push
mov
sbb
in
outsb
adc
repz
loop
scas
icebp
cmp
incb
ret
mov
xchg
in
push
mov
adc
inc
xchg
xchg
outsb
jne
push
hlt
fsubs
mov
sbb
or
mov
dec
sbb
push
xor
mov
xor
push
lcall
inc
add
pusha
pop
adc
xor
insl
popf
aad
mov
pop
cmp
repnz
push
cs
jnp
enter
sub
pop
xchg
pop
jno
and
adc
xor
xlat
test
orl
rcll
cmp
lds
adc
adc
mov
xchg
cwtl
cmpsb
fcomp
jg
cmpsb
jnp
enter
or
fwait
mov
push
push
mov
inc
aam
clc
xor
je
lea
mov
or
mov
in
xor
push
loop
stos
jns
test
rcpps
mov
addr16
aas
decb
adc
js
enter
insb
enter
inc
mov
aad
ret
stos
push
inc
mov
sbb
insl
sub
adc
sub
mov
lds
jge
push
in
stos
dec
dec
out
jae
mov
les
jo
cltd
add
shrl
inc
aas
adc
cmpb
adc
sbb
pop
lcall
mov
fstl
pop
fildll
cmp
fwait
sbb
sti
or
test
inc
retw
pop
das
sbb
ss
dec
cmp
xor
lock
jp
mov
shlb
inc
add
mov
pop
push
out
mov
fwait
lea
mov
pop
and
dec
std
arpl
dec
mov
test
dec
aam
stc
fisubrl
xor
xlat
adc
int
fbld
out
push
mov
in
xchg
xorb
mov
push
mov
add
inc
loope
mov
je
xchg
xchg
jmp
pop
mov
cs
ret
test
pop
das
and
les
call
mov
pop
dec
scas
xor
jge
jp
lods
sbb
cli
int3
mov
lods
adc
ja
pop
rcrl
addb
aam
cwtl
lret
inc
add
arpl
fcompl
jbe
scas
xor
sub
jl
cmp
inc
fwait
leave
cmc
xor
push
cmp
ret
xchg
in
and
stos
sbb
fnstenv
shlb
sahf
jp
push
fdivrl
sub
cmp
jae
gs
outsl
cmpsl
fcmovne
out
rolb
cmp
push
or
jle
clc
xchg
push
and
xchg
pop
jmp
inc
xchg
pop
mov
xor
daa
push
decl
adc
inc
stos
shrb
cmp
jae
divl
sar
push
mov
loop
je
pop
cmc
jmp
imul
popa
gs
enter
xor
fisttps
lret
push
sub
rorb
sbb
jae
daa
and
sarb
dec
lock
cmp
nop
aas
mov
mov
fs
jb
mov
sub
inc
int
xor
xchg
jnp
xor
lods
pushl
icebp
test
testb
pop
jae
lds
xchg
int
mov
nop
pop
inc
mov
std
fsubrs
mov
lret
call
lret
mov
push
fnstsw
stos
cmp
push
mov
outsl
push
pop
std
sbb
cmpsl
xlat
in
andl
std
decl
mov
insl
addr16
inc
pop
inc
adc
sbb
into
pop
stos
les
push
mov
inc
xor
lds
ds
mov
movsl
mov
or
aam
inc
mov
sbb
cmp
scas
jne
fldenv
mov
mov
orl
fldl
rcrb
push
jae
mov
into
xor
rcrl
dec
aaa
mov
hlt
and
xchg
inc
sbb
fwait
inc
sbb
sarb
aas
stc
scas
jle
imul
jecxz
lods
fdiv
mov
pusha
jp
movsb
cmp
in
mov
pop
ret
sbb
adc
pop
js
data16
sub
pop
movsl
adc
jg
scas
push
cmpsb
xlat
sub
mov
xor
insl
scas
add
jmp
jns
js
pop
js
sbb
mov
sub
xchg
sub
mov
sahf
lret
fwait
lea
popf
jae
add
dec
pop
lds
cmp
test
inc
xor
outsb
mov
mov
cmp
sub
or
hlt
sub
push
test
cmp
cld
and
xchg
movsb
dec
clc
and
jae
mov
into
ss
rcr
xchg
cmp
mov
aaa
mov
lock
mov
sbb
bound
fnsave
dec
sub
adc
js
or
adc
cmpsl
rcrb
mov
in
jg
fbstp
jae
test
sbb
mov
ret
pop
imul
imul
fstpt
mov
rclb
scas
mov
xchg
insl
lsl
fidivrs
call
inc
aaa
inc
mov
adc
inc
sarb
pop
dec
aam
jns
in
or
or
les
xchg
xchg
mov
adc
test
lcall
into
out
sarl
mov
in
in
adc
lahf
jg
add
outsb
shr
lret
xchg
dec
daa
cs
fsubrl
and
leave
add
mov
mov
leave
pop
dec
aas
mov
sbb
pusha
cmp
sar
xor
mov
mov
shlb
pop
dec
orb
add
sub
jae
mov
in
push
mov
jge
push
cmp
ljmp
ss
in
insb
push
cmp
and
mov
push
push
dec
cmpsl
outsb
adc
jp
push
push
lods
xlat
push
int
sbb
ja
fistps
movsb
jnp
imul
iret
js
rcrb
lcall
clc
xor
std
pushl
and
xchg
pop
je
rcrl
pop
mov
out
xor
mov
fidivl
jne
inc
inc
xor
fidivs
mov
xor
gs
inc
xor
outsl
inc
lret
test
sub
inc
and
loopne,pn
xchg
mov
dec
sbb
test
push
lds
add
pushf
test
jmp
shl
sub
mov
imul
adc
pop
or
ret
sub
ret
dec
lret
aam
into
lods
decb
movsb
cmp
xor
jmp
mov
push
repz
push
mov
pop
insb
fcoms
shrb
mov
jne
add
xorl
gs
mov
stos
xchg
pop
inc
cmp
rorl
imul
lock
add
outsl
or
idiv
decl
and
dec
and
stc
xor
fucomp
or
push
add
div
jae
cmp
add
clc
cmp
dec
lahf
lret
hlt
mov
push
mov
inc
and
and
mov
xchg
test
or
pop
pop
imulb
jnp
pop
cld
scas
repnz
stc
push
test
cld
sub
std
mov
mov
int
leave
push
dec
add
in
cmp
dec
lock
push
xor
nop
pop
cli
adc
mov
cmpsl
mov
xor
sti
mov
cmp
inc
test
add
repz
dec
cmc
xor
sub
test
or
lret
shll
push
mov
push
fsubs
push
call
push
push
test
push
push
data16
mov
sti
jl
cwtl
pop
adc
lea
sub
lret
cli
out
jp
gs
mov
mov
les
inc
inc
mov
stos
fldt
xchg
push
push
int
inc
ds
cmpsb
notl
in
dec
dec
and
mov
fldenv
mov
sbb
and
lret
xchg
dec
daa
cs
mov
inc
add
into
frstor
push
idiv
fs
mov
sbb
inc
sbb
lock
jbe
adc
and
sbb
rcrb
xchg
sahf
jns
andb
adc
lret
jge
andl
push
mov
loop
test
lret
inc
rcrl
and
push
movsl
adc
sbb
fistl
pop
cmp
push
fdivl
lcall
push
mov
outsl
push
or
std
and
jb
add
clc
mov
std
pushl
jmp
test
xchg
andl
inc
jbe
lret
les
push
sahf
xchg
imul
ficoms
xchg
iret
sarl
adc
push
mov
dec
push
or
andb
dec
mov
or
imul
adc
test
movsb
push
cld
mov
aas
int3
dec
lock
cmp
adc
dec
adc
mov
adc
ret
pavgw
cld
or
ret
in
dec
sbb
xor
dec
icebp
mov
fsubrl
jns
push
pop
jmp
xchg
dec
sbb
scas
dec
call
and
in
mov
ss
adc
cmp
adc
enter
jge
dec
mov
or
outsl
sbb
xchg
pop
cmp
push
in
stos
mov
push
in
bswap
test
mov
push
pop
out
inc
js
pop
sbb
and
inc
lds
dec
inc
add
test
pop
adc
aam
xor
or
ret
mov
popf
idivl
repz
cmpsl
std
mov
jmp
add
inc
hlt
xchg
imul
pop
dec
push
and
enter
adc
mov
scas
dec
sbb
push
lahf
lcall
daa
sti
xor
mov
mov
in
mov
cld
or
sbb
inc
pop
fiaddl
scas
out
popf
mov
inc
add
mov
ret
and
movsb
push
add
push
jno
shll
lret
int
loope
lds
rcrl
sub
push
sbb
sbb
and
in
push
out
push
dec
cmpsl
push
ja
jg
scas
push
xchg
and
and
fs
mov
jecxz
shlb
xchg
insl
sahf
add
std
inc
fstps
jecxz
or
idiv
mov
pop
sbb
mov
fucomp
or
dec
add
lret
gs
fisttpll
call
jne
test
lahf
lret
jecxz
and
add
and
inc
xor
cmc
mov
sub
jno
lods
push
sub
cld
lret
push
sub
inc
mov
mov
mov
pushf
dec
cmp
pusha
push
cs
imul
mov
mov
bound
icebp
mov
fsubrl
push
xchg
outsb
sbb
mov
jp
lahf
ficomps
xchg
jg
add
cwtl
sub
cmp
aas
inc
mov
outsb
fsts
std
daa
cltd
sub
push
pop
lcall
fnsave
mov
pop
inc
pop
test
test
fsubs
jno
in
sub
pop
mov
sti
xor
popa
jmp
test
or
pop
jns
or
pop
aam
rcrl
push
lea
ss
and
shrd
cmp
and
sar
loopne
test
lahf
lret
jecxz
and
es
enter
mov
dec
inc
push
jb
dec
mov
xor
ljmp
rorb
add
lods
push
test
pop
and
xlat
sahf
mov
cld
sub
mov
test
add
jo,pn
mov
sbb
add
orl
cltd
xor
leave
sbb
int
and
bnd
cwtl
out
xor
jmp
mov
pop
xchg
cs
sbb
imul
test
sbb
or
inc
sbb
mov
mov
ret
push
repz
mov
in
sub
test
push
mov
xor
mov
push
push
mov
mov
clc
je
std
pushl
sbb
xchg
mov
cwtl
sbb
aas
dec
pop
stos
shlb
inc
mov
popf
sbb
add
sbb
fsubs
xor
hlt
mov
sar
je
cwtl
jl
sbb
lcall
ja
int3
sbbb
adc
mov
mov
push
dec
jb
mov
add
sub
xchg
mov
cld
mov
cli
je
mov
dec
aaa
bound
cmp
mov
in
jg
inc
sti
enter
enter
pop
pushf
inc
stos
xchg
jae
mov
movsb
push
fs
mov
inc
pusha
sahf
rcrb
dec
bnd
popf
jecxz
neg
adc
out
nop
dec
bound
insl
mov
jo
gs
outsb
les
adc
out
lods
mov
cmp
stos
cmp
enter
mov
mov
inc
sarb
repz
add
or
not
enter
rcr
xor
dec
mov
and
testl
insl
mov
pop
cltd
call
push
repz
add
pop
rolb
mov
cltd
sub
hlt
mov
xchg
inc
xchg
dec
inc
xor
dec
inc
repz
mov
jb
mov
push
es
push
cli
test
mov
mov
pushf
inc
and
sbb
inc
imul
inc
sbb
lds
add
ret
cmc
cld
or
inc
mov
sarl
imull
xchg
std
iret
addr16
mov
sbb
loope
jno
sarl
add
sub
data16
shl
add
fisubrl
pop
adc
inc
fcmovnu
jmp
pop
cmp
xchg
imul
inc
lcall
test
xorl
sub
cltd
lahf
imul
imull
idiv
call
xchg
and
data16
xchg
xorl
adc
popf
movsl
pop
in
push
pop
adc
sbb
test
mov
in
or
loop
je
test
and
cmpsb
cwtl
dec
add
mov
loopne
add
xchg
cmp
nop
lds
repz
sbb
stos
mov
xor
int
arpl
jbe
add
imul
mov
ret
test
xchg
icebp
aaa
cltd
jne
repnz
pushf
add
ja
and
adc
dec
and
popf
scas
leave
loop
xor
pop
ret
or
push
inc
push
test
movsl
out
mov
xor
mov
ret
mov
mov
inc
adc
cmpsl
lods
jae
mov
fdiv
sub
mov
int3
push
sbb
mov
dec
cmp
mov
xor
out
mov
fstpl
mov
mov
aam
xorl
mov
pop
pop
or
repnz
ds
xor
sbb
and
or
xchg
dec
pop
lcall
push
mov
dec
xor
shrl
pop
sbb
push
dec
rcl
adc
pop
adc
cltd
sub
pop
sub
pop
lock
mov
leave
mov
mov
xor
cwtl
jnp
and
je
push
cmp
xor
scas
shr
bnd
into
scas
cmp
xchg
test
inc
inc
xor
add
or
xchg
lcall
mov
xor
push
sub
fstl
fiadds
jb
fwait
outsl
push
ret
cmpsl
lret
xchg
add
inc
cmp
add
popl
mov
inc
nop
dec
and
xor
mov
call
pop
movsl
pop
call
fucomip
icebp
clc
sti
mov
out
in
mov
inc
inc
mov
inc
lahf
sbb
int
pop
mov
dec
sahf
inc
mov
dec
arpl
aam
sbb
scas
mov
fldl
xor
movb
jmp
enter
cmc
inc
inc
sbb
int
dec
and
sbb
fs
adc
lahf
push
xchg
cld
test
add
adc
mov
fucomi
repnz
lret
ss
mov
insl
cmp
inc
sub
adc
mov
mov
ljmp
push
fdivrs
insl
out
fwait
pop
mov
gs
out
push
aad
xchg
mov
js
mov
inc
movsb
addb
add
test
dec
dec
cmp
les
clc
xor
mov
arpl
int3
lea
mov
in
xrelease
fistps
daa
enter
inc
daa
loope
mov
and
mov
push
adc
xchg
test
mov
pop
stos
mov
pop
pop
fs
mov
cmpl
stc
dec
push
cld
scas
aaa
and
sub
fisttpl
mov
mov
movsl
ret
mov
and
in
lcall
jnp
xor
pop
test
mov
xor
in
fsts
imul
rcll
mov
jo
movsl
sub
cli
pop
mov
add
push
pop
xchg
jae
cld
pop
cmpsb
fcomp
add
cmp
outsl
push
int3
sbb
clc
cmp
mov
adc
push
pop
repz
inc
test
dec
mov
and
mov
rclb
mov
sbb
mov
loop
stc
mov
lock
adc
and
adc
add
lret
sbb
imul
out
push
xchg
pop
mov
rorl
push
mov
cmp
aaa
imul
dec
mov
jno
fldcw
loopne
lds
dec
xor
adc
sub
or
cmpsb
orb
cmpsl
nop
movzwl
shlb
adc
mov
not
push
inc
in
shr
pop
cld
repnz
in
shrl
test
test
push
pop
imul
jl
shr
xchg
sub
inc
jno
push
fdivrs
rclb
in
mov
push
gs
mov
mov
std
loopne
xor
das
adc
fisttps
movl
js
push
xor
pop
and
xor
mov
in
repz
add
cmp
mov
cld
sti
mov
es
and
mov
int3
jecxz
mov
jne
dec
cmp
jecxz
cmp
dec
mov
test
push
and
leave
fiaddl
mov
sahf
pop
stc
dec
cmp
je
mov
cmp
mov
int
inc
pop
loop
mov
inc
test
push
xchg
pop
sbbl
push
scas
pop
insb
jbe
lods
sahf
jg
fisubl
test
cmp
mov
sti
ret
xchg
test
dec
mov
pop
arpl
lcall
test
mov
in
jns
fsubs
push
fidivrl
and
xchg
pop
out
mov
pop
fsubl
xor
andl
cld
jle
clc
jb
adc
rol
xor
les
xchg
cmp
lcall
adc
jne
inc
add
pop
adc
in
stc
mov
hlt
mov
ret
movsl
mov
push
addl
mov
xchg
xchg
push
adc
sbbb
inc
mov
pop
jne
les
leave
mov
cmp
xchg
lahf
pop
in
mov
imul
je
mov
cmp
mov
lock
push
sbb
adc
lret
inc
sbb
cmp
mov
movsl
mov
jg
fsubrl
loop
cli
icebp
xchg
jmp
popf
fstl
jnp
add
scas
ds
fidivrl
scas
add
dec
jl
sub
jl
or
inc
sbb
sub
test
sbb
sub
pop
mov
xchg
imul
cli
jae
push
jne
in
xor
cmp
daa
pop
sahf
fdivs
andl
cwtl
cmp
or
sbbb
inc
mov
rclb
stc
xor
mov
dec
inc
pop
repz
icebp
mov
aam
test
jecxz
mov
lret
hlt
mov
adc
and
adc
mov
test
or
or
jno
test
fucomp
pop
test
dec
push
dec
adc
dec
sub
movb
mov
fisttpl
pop
xchg
dec
imul
mov
sbb
inc
aas
sbb
cmpsb
ret
pop
cmp
shrb
iret
jns
xchg
cld
cmp
xchg
fwait
popf
xchg
fsubl
xor
test
pop
negl
test
test
jae
les
orb
jge
dec
mov
sarl
movsb
jp
cwtl
inc
js
imul
or
cmp
pop
cmp
fldl
testl
mov
mov
inc
test
dec
mov
and
add
int
fsubrs
and
fnsetpm(287
sbb
clc
lds
cld
and
mov
enter
pop
push
jb,pt
inc
mov
in
jnp
fsubrs
in
cmc
hlt
imul
mov
lds
pop
movsb
push
test
scas
mov
shl
fs
out
mov
popf
mov
jl
mov
cmp
add
insl
cwtl
mov
cld
inc
test
mov
lods
jle
mov
in
push
test
jmp
pushf
sahf
ret
js
pop
movsl
cs
jmp
cmp
fidivrl
xchg
dec
data16
sbb
jne
aad
jns
pop
outsb
les
pop
fildll
dec
push
and
xor
pop
xor
mov
xlat
pop
imul
andb
inc
sarb
pop
pop
sbb
add
mov
icebp
cmc
pop
pop
dec
popa
mov
mov
imul
sar
imul
mov
mov
je
clc
adc
loope
adc
inc
jb,pt
test
imul
jle
pop
rorl
stc
and
sahf
rep
jp
mov
ffree
stc
test
scas
pushf
repz
ljmp
push
sub
add
mov
or
add
xor
testb
xchg
cs
cld
xchg
cltd
lcall
ret
mov
dec
enter
pop
xorl
popf
scas
leave
mov
sub
and
pop
idivb
or
cltd
cwtl
inc
push
pusha
fstl
scas
push
mov
ret
push
incb
stos
cmp
sbb
mov
adcl
std
out
add
popl
and
mov
or
add
stos
xor
int3
bound
lods
call
ja
or
test
sbb
dec
mov
push
mov
dec
mov
xor
xor
adc
or
inc
push
daa
jne
jnp
xchg
stos
stos
mov
pop
test
push
xor
inc
sbb
stos
aaa
lret
fucomp
insl
cmp
rcrl
pushf
sbb
or
push
aas
repnz
ret
cmpsb
mov
mov
push
mov
xchg
lds
pop
mov
pop
lcall
xchg
cwtl
fists
setbe
jmp
movsl
jae
test
push
or
xchg
lcall
sub
sbb
add
cwtl
fildll
leave
aad
jns
shlb
or
cmp
out
and
xlat
in
andl
test
dec
cmpsb
loop
clc
push
xchg
xchg
jg
and
mul
push
push
xchg
mov
sbb
in
and
cmpl
mov
lds
and
es
pop
adc
test
sbb
mov
movsb
popf
xchg
pop
adc
pop
jge
les
push
cli
sub
mov
push
icebp
fisttpl
add
int
lock
or
in
dec
add
xor
inc
lcall
cwtl
or
inc
test
dec
rcrb
push
xchg
sahf
mov
and
push
leave
aad
sarl
lods
xchg
pushf
fists
jl
sub
push
lcall
and
jnp
scas
xchg
stos
jge
dec
clc
cmpsl
stos
xchg
stos
sbb
xor
aam
fsubl
sub
xchg
ds
mov
push
lds
fmull
cmp
mov
jmp
fsubrs
clc
dec
aam
jns
stos
and
mov
mov
sbb
in
cmp
imul
loop
scas
fcmovnu
lcall
js
mov
cwtl
flds
add
mov
leave
sbb
out
nop
inc
and
sub
adc
ret
pop
imulb
leave
pop
pop
stc
xor
in
dec
decb
add
push
lret
sbb
stos
ret
dec
mov
repnz
movsb
pop
jp
add
adcb
add
cmpb
xchg
popa
fwait
sbbl
test
xchg
pushf
push
xor
cld
cmpsl
or
xchg
xchg
mov
cld
cli
repz
sarl
fwait
shl
add
sub
movsl
adc
and
std
xchg
fsubl
sti
sub
inc
fnsave
pop
push
ret
xor
repnz
rclb
jmp
rcll
sarb
dec
mov
and
jge
fwait
pop
mov
pop
adc
lods
cmp
mov
pop
xchg
clts
loop
mov
pop
shrb
enter
pop
les
call
lret
sub
push
inc
mov
pop
and
cltd
lret
lcall
sbb
test
lods
stos
mov
into
arpl
movsl
mov
cltd
jo
lock
lock
mov
jno
dec
xchg
adc
cwtl
int3
dec
and
jno
lds
jl
sbb
cld
mov
cmp
repnz
nop
fists
add
cmp
bound
mov
lahf
or
sub
and
mov
in
push
xchg
insl
mov
popf
rol
jne
pushf
sub
sbbl
imull
lea
sbb
cmp
sarb
sub
dec
mov
or
test
jl
push
xchg
popa
mov
out
xor
fldl
pop
jmp
clc
sti
inc
lahf
divl
rcll
ret
inc
fidivs
pop
xor
cwtl
cltd
and
movsl
jne
jge
push
test
dec
je
adc
aaa
push
aaa
dec
fsubr
stos
test
push
sub
out
int3
repnz
in
mov
mov
adc
ss
add
dec
lds
adc
jp
dec
movsl
mov
lock
and
inc
movsb
push
sub
xor
fnstenv
push
loope
stc
jg
enter
push
cmpsl
xchg
push
pop
push
jl
lock
out
mov
pop
xchg
jg
cmpsl
push
push
xchg
push
popl
pop
ja
mov
pop
mov
insl
fildll
mov
fdivl
iret
js
shr
arpl
adc
xchg
addl
fs
loop
mov
loope
or
ret
jbe
repz
mov
pop
pop
inc
inc
mov
mov
jne
dec
inc
xor
pusha
loopne
jo
mov
shr
mov
adc
inc
dec
xchg
dec
mov
push
fnsave
push
test
xlat
test
sahf
jne
pop
sbb
test
adc
mov
xor
pushf
dec
cmp
and
lret
push
adc
sbb
inc
dec
ret
test
dec
and
stc
pop
add
push
mov
mov
cmp
bound
aaa
js
pop
jno
andl
movsl
mov
and
imul
push
xchg
dec
popf
icebp
iret
dec
push
leave
imul
inc
loopne
inc
std
pop
fldcw
cmp
pop
out
enter
shll
jnp
push
sbb
idiv
call
xor
jae
pop
inc
cwtl
dec
xor
dec
or
call
xor
jbe
iret
pusha
or
jge
inc
inc
mov
ficoms
imul
hlt
pusha
inc
sub
cltd
sahf
add
mov
divl
adc
mov
jle
push
int3
and
shrb
jae
imul
xor
cmp
mov
mov
mov
and
loopne
pop
dec
cmp
pop
shlb
add
and
lods
mov
rcrl
inc
push
icebp
scas
fnstenv
mov
fimuls
add
pop
xchg
in
sbbl
cmp
stos
mov
subl
add
roll
mov
sub
xchg
dec
sbb
jo
ret
shr
jb
cmp
bound
jl
nop
cwtl
sbb
in
testl
dec
add
pop
int
je
add
jb
into
loopne
shrb
inc
mov
mov
mov
out
repz
fisttps
pusha
xor
jnp
mov
int3
inc
rorl
inc
pop
adc
adc
aaa
jb
dec
daa
adc
or
add
mov
push
sbb
inc
push
movsb
dec
out
pop
fldt
mov
sub
push
cmp
and
inc
insl
ljmp
fildl
pusha
push
adc
addr16
pop
pop
sahf
mov
sub
ret
push
fucomi
loope
repz
dec
xchg
inc
idiv
add
sbb
mov
fsts
fimuls
inc
push
push
cmp
in
or
push
addr16
push
xchg
sub
mov
lahf
cmpsl
ret
out
cmp
fwait
lea
rolb
pop
bnd
jne
add
cmp
popl
xor
mov
arpl
pop
movsl
sub
out
divb
inc
add
pop
adc
mull
fidivrl
lcall
es
pushl
das
int
imul
ret
pop
popf
lret
mov
pop
stos
xor
inc
inc
mov
mov
fucomp
movsb
cmp
popf
lret
gs
mov
pop
sub
sbb
adc
gs
ret
in
dec
cltd
push
ja
cmp
int
sbb
mov
or
ret
pushf
ficoms
jle
xor
aas
iret
loop
cmpsl
xchg
fcoms
les
fdivrl
xchg
jle
jl
pop
stos
xchg
stos
sti
shlb
mov
jae
push
push
jmp
or
lahf
cmpsl
jge
call
fcomi
pop
popa
dec
aad
add
sub
mov
test
sbb
and
xor
adc
movsl
mov
fcmovnbe
imul
rorl
iret
sbb
mov
inc
pop
int3
push
add
add
sub
mov
shrb
out
cmc
xor
mov
adc
stos
lods
arpl
xor
push
fists
mov
clc
test
dec
mov
movl
sahf
add
or
or
sbb
cmpb
push
divb
nop
mov
xor
loope
cmpsl
fstl
cld
scas
push
pop
icebp
sbb
xor
les
and
push
cmp
roll
fsts
push
stos
jge
mov
fimull
pop
push
mov
xchg
mov
mov
cltd
insl
push
or
enter
outsl
push
int3
aad
jne
sub
js
push
cwtl
add
mov
add
dec
aam
fstl
test
fwait
cmc
sbb
fwait
pop
cmpsl
fisubl
mov
or
repz
ds
jecxz
out
enter
push
aaa
jecxz
mov
inc
stos
mov
int
push
xor
mov
xchg
test
or
loopne
test
mov
ds
movb
test
inc
cmp
sbbb
cltd
cwtl
cmovno
js
add
push
mov
adc
iret
fld
jg
adc
pushf
adc
mov
shll
das
ret
or
jle
scas
fdivr
pop
pop
jae
add
jb
lods
or
pop
pop
dec
push
test
dec
outsb
sub
lock
aad
inc
movsb
xlat
jmp
mov
mov
les
cmpsl
fcomi
cmp
stc
dec
or
dec
add
add
or
lret
and
mov
fwait
add
sbb
add
pop
adc
inc
stos
shrb
and
mov
sbb
enter
xchg
and
mov
xchg
push
in
sub
mov
cltd
fisubs
sub
mov
and
lds
cli
lret
push
in
stos
jae
adc
rcrb
pop
in
jmp
push
idiv
add
mov
aas
ljmp
aas
lret
cwtl
ret
sbb
jb
xor
dec
lds
addb
xchg
sbb
push
je
leave
ret
icebp
add
push
cmp
ret
add
pop
mov
in
decb
fwait
int
xor
push
mov
xchg
sbb
dec
mov
int
mov
into
ret
fld1
jb
outsb
add
xchg
fxch
mov
clc
xchg
sub
add
shrb
popl
and
cwtl
inc
xlat
adc
inc
sahf
frstor
call
cmc
test
mov
leave
ret
pop
push
mov
mov
lock
adc
jb
inc
mov
cwtl
pop
and
mov
popf
loope
adc
repnz
cmpsb
ja
lods
outsb
jno
xchg
repnz
sub
mov
shr
xor
push
sbb
leave
dec
inc
inc
jle
pop
sub
lds
repnz
push
cltd
mov
faddl
push
adc
pop
rcrb
dec
fwait
lods
movb
lods
inc
inc
mov
test
xchg
or
popf
scas
inc
inc
mov
cmc
inc
xchg
test
jnp
xor
gs
xchg
stos
lds
sub
movsb
pop
arpl
mov
jmp
inc
fisttpll
inc
test
mov
sti
xor
popa
sarb
mov
sbb
sarb
jmp
pop
outsl
xor
test
lea
pop
scas
shr
repz
xor
mov
xor
xchg
iret
sbb
loopne
mov
xchg
push
loopne
push
pop
push
dec
dec
or
movb
scas
cmc
lret
sbb
inc
rcll
test
ja
add
inc
inc
mov
stc
or
ljmp
shll
or
jnp
cltd
push
and
jo
adc
fcom
or
pop
rcrb
mov
fcoml
sbb
push
imul
dec
bound
pop
dec
ljmp
sbb
sar
lods
fcoms
shlb
sbb
lret
rorl
sbb
mov
rclb
jp
mov
out
or
dec
cwtl
cmp
lea
cmp
aas
add
lret
sub
xor
call
lods
shrb
dec
adcl
adc
icebp
pop
test
aad
fldcw
jg
imul
jne
and
ds
mov
mov
leave
test
lock
mov
cwtl
cmp
int3
leave
idivl
loopne
mov
mov
xor
rorb
lret
lahf
sbb
sbb
push
cmp
repnz
jbe
add
inc
dec
sbb
aad
xor
sbb
lahf
xor
xchg
cmp
push
adc
gs
mov
mov
mov
mov
jl
test
add
xchg
lods
outsb
lods
and
xor
push
adc
dec
mov
cli
pop
lods
inc
insl
jmp
or
stos
xor
into
fadd
pop
fsubl
jae
cwtl
jno
std
xor
xstore-rng
cmpsl
push
mov
sbb
call
stc
lahf
insb
and
or
data16
or
mov
pop
test
or
mov
or
mov
lock
adc
xchg
and
mov
xor
ljmp
mov
adc
adc
stos
repnz
scas
inc
std
stos
dec
sbb
test
dec
lret
fucomp
fwait
lock
clc
test
fwait
loopne
xor
add
js
rcll
aad
sbb
aas
lret
icebp
mov
xor
ret
jnp
pop
pushf
add
roll
and
mov
cmc
mov
les
xor
jo
xchg
adc
adc
xchg
or
xor
aaa
std
xor
bswap
push
cmp
in
or
xor
cmp
lret
pop
fdivrs
jnp
int3
jno
icebp
popa
or
inc
sub
andl
idiv
mov
mov
and
and
mov
stos
shr
repz
adc
push
sahf
jecxz
mov
or
clc
cmp
mov
icebp
out
and
jle
inc
dec
popf
leave
sbb
in
push
mov
movsb
in
xlat
adc
int
jae
out
jns
adc
repz
dec
fwait
mov
add
sbb
ljmp
clc
mov
mov
or
int
inc
pop
ret
adc
pushf
mov
fs
sbb
mov
add
scas
mov
fmull
cmp
int3
cmpsl
sbb
jmp
adc
bound
add
xchg
mov
add
or
xchg
fcmovne
shrb
arpl
mov
stos
jge
pop
mov
in
or
adc
imul
mov
ds
call
aad
xchg
mov
lahf
and
andl
les
push
test
fwait
jmp
xchg
adc
push
and
inc
call
call
mov
pop
stos
fsubp
aas
repz
clc
sti
pop
push
rolb
idiv
dec
push
adc
int3
mov
pop
sub
es
pop
movsb
aad
xchg
dec
xchg
popf
mov
inc
lods
cmpsl
adc
dec
sbb
in
cmp
xchg
pusha
mov
call
fs
rcll
cmp
adc
popa
fwait
rcrl
scas
jno
mov
nop
aaa
mov
xor
mov
xchg
mov
cltd
lods
jle
test
cmc
outsl
push
iret
pop
test
and
xcrypt-cbc
cmpsl
xchg
addr16
fmuls
add
or
mov
inc
lds
pop
mov
pushf
mov
mov
inc
fdivrl
xchg
aas
xabort
mov
xchg
enter
mov
rolb
add
stos
xchg
popl
sbb
mov
adc
xor
add
call
pop
sbb
ljmp
xchg
inc
mov
mov
and
cmp
sbb
sub
and
cltd
test
int
mov
mov
inc
cmpsl
test
push
xchg
cmp
jae
aas
lock
fmul
arpl
dec
add
test
mov
cmpsl
or
mov
cwtl
or
ffree
jns
enter
sub
cltd
fmull
cmp
cmc
popa
mov
dec
imul
cld
mov
aas
lret
or
jl
pop
sbb
lea
lock
cwtl
xor
inc
stos
pop
mov
sub
stos
ja
add
mov
xchg
jp
les
lock
mov
cmp
call
xchg
mov
sti
jnp
sbb
add
repnz
xor
int3
sub
xor
gs
jne
and
pop
stos
imul
pushf
mov
das
add
clc
mov
xor
sbb
cmp
xchg
imul
pop
imul
adc
je
push
cs
jne
dec
rcl
xlat
stos
mov
pop
mov
push
adc
sub
cwtl
pop
mov
popf
jmpw
fistpll
push
sahf
push
bound
test
inc
or
test
loopne
push
outsb
movsl
aam
enter
adc
lds
stos
lds
fisttpll
lods
sbb
imul
aas
paddw
loop
mov
add
lret
ret
adc
jg
xor
test
bound
pop
movsl
shrb
pop
in
mov
lahf
scas
pop
ds
xorl
out
and
inc
ds
mov
in
ja
jns
data16
mov
jmp
ja,pn
int
jg
pop
adc
call
push
loopne
dec
scas
iret
fisttps
jnp
into
add
loopne
push
ss
or
add
sub
mov
fsubrs
in
cmc
hlt
mov
xchg
lret
pop
and
sub
pop
sbb
test
lcall
or
pop
fnstenv
inc
sub
bound
ljmp
and
jl
xchg
xchg
push
negb
mov
sbb
movsb
rcrb
clc
call
cmp
rcrb
std
dec
mov
popf
into
push
fwait
leave
insl
jne
mov
xchg
dec
call
test
sbb
cwtl
cmp
inc
stos
clc
frstor
pop
jp
xor
lcall
or
sbb
xor
enter
mov
dec
sbb
enter
loope
iret
pop
xor
dec
sti
shll
dec
sarb
shrb
sbb
sub
les
jnp
mov
inc
call
mov
mov
cwtl
test
iret
fwait
cmp
inc
hlt
jp
mov
cmp
ret
jmp
int3
push
test
sbb
stc
push
inc
mov
sbb
xchg
mov
and
aam
push
mov
sbb
xor
lret
xor
pop
fnstenv
inc
sub
cmp
ret
pop
dec
out
sbb
mov
dec
xchg
jo
fimull
sbbb
adc
call
lods
jle
cltd
shll
xchg
fcoml
repz
jp
daa
icebp
add
push
jl
rorl
jo
mov
ficoms
imul
int
je
jp
pop
lret
arpl
mov
std
mov
aam
int
inc
xor
out
jne
ret
rclb
inc
sarb
or
mov
dec
mull
push
mov
and
neg
movsl
jae,pt
shr
repz
sbb
mov
sub
cld
aas
in
and
icebp
out
pop
pop
push
mov
sbb
idivl
push
jmp
mov
rcl
stos
sbb
add
stos
fs
les
lods
imul
clc
stc
fs
in
cmp
scas
add
mov
fnsave
mov
inc
push
pop
iret
sbb
push
xor
fxch
loopne
sbb
shrb
jns
push
pushf
add
xor
in
cwtl
and
push
stc
test
mov
ja
aad
cmp
stc
fwait
cmpsb
ret
inc
sbbb
mov
ret
sbb
imul
mov
mov
adc
notl
in
inc
sarb
push
std
and
and
cwtl
inc
mov
add
fistl
adcb
pop
add
lods
and
adc
mov
ret
sti
jns
push
adc
and
inc
inc
lea
sub
jns
int
js
push
dec
mov
add
xchg
add
stos
push
insb
rcll
and
pop
xchg
js
popa
cs
pop
pop
es
pushf
ret
mov
pop
movsb
or
fnstenv
iret
push
sbb
pushf
dec
and
jno
lds
pop
and
jmp
mov
popf
fists
pop
mov
stc
add
sbb
into
imul
iret
imul
les
test
enter
test
rcl
stos
mov
and
fcmove
test
sub
ljmp
bound
add
loope
into
add
popl
fadd
add
or
bound
cwtl
jge
and
pop
sub
int3
inc
pop
add
addr16
sbb
gs
mov
xor
mov
push
add
and
rcll
mov
or
cltd
mov
imulb
sbb
clc
sub
sub
jecxz
imul
sub
lods
cmpsb
imul
xchg
fucom
jmp
push
ss
dec
push
in
test
add
or
inc
mov
jg
sbb
cmpsb
dec
movsb
aad
xor
xor
cltd
idivb
addr16
dec
scas
movsl
fdivl
push
cmpsl
xchg
test
or
adc
xchg
lret
add
inc
daa
rorl
dec
jae
push
fdivrs
ficoms
inc
jmp
mov
ror
insl
bswap
xlat
imul
out
or
mov
mov
mov
clc
xor
call
mov
xor
cmp
sahf
lcall
rcll
pop
jbe
mov
loopne
in
and
int
and
in
and
fstp
lock
pop
sub
dec
push
or
cwtl
pop
inc
cmp
in
cmc
hlt
js
test
dec
sub
aaa
stc
sbb
pushf
popf
fwait
push
negl
mov
test
xchg
cmp
rcrl
popa
xchg
mov
xor
mov
ret
xchg
adc
ret
sbb
ss
xor
aam
fstl
mov
inc
mov
loop
xor
icebp
lcall
jo
orl
sbb
or
ja
mov
mov
adc
push
fdivrl
gs
in
prefetchwt1
negl
jge
dec
or
addl
mov
inc
nop
sbb
shlb
daa
add
inc
lcall
adc
inc
mov
mov
sbb
jb
push
pop
adc
xchg
inc
jmp
dec
daa
sbb
test
cwtl
sbb
lds
es
push
inc
cmp
mov
jnp
cmp
xor
std
lea
push
test
stos
fwait
mov
lea
cmpsl
inc
sbb
ret
sbb
fs
mov
sbb
nop
cs
mov
stos
or
pop
ficompl
adc
jecxz
cmpsb
fmull
scas
dec
pushf
jle
sub
xor
pushf
fwait
stc
or
insl
ret
push
rorb
push
ficoml
scas
rcr
sbb
scas
mov
test
in
xchg
imul
cmpsb
arpl
mov
inc
montmul
cmpsb
inc
cltd
or
ret
cwtl
xchg
js
xchg
jecxz
lods
xorb
gs
test
iret
or
dec
push
out
int3
add
out
les
inc
cmp
lock
mov
xchg
sti
inc
sbb
or
jecxz
mov
aas
push
sub
or
and
aas
adc
and
cmc
stc
inc
jp
pop
test
jle
pop
je
jnp
jns
clc
cmpsl
jmp
dec
stos
sti
pop
dec
mov
pop
mov
mov
jmp
xor
cmp
leave
fsubl
mov
sarb
push
cltd
pushf
adc
mov
shlb
movsb
ret
adc
xchg
pop
fisubl
xor
jg
jne
jle
sarb
imulb
jno
xchg
mov
push
and
inc
stos
fistps
pop
and
push
mov
xor
inc
jne
mov
push
daa
popf
and
lahf
cmpsl
imul
in
sti
mov
ret
add
andl
or
pop
push
mov
pop
shrb
xchg
sub
pop
and
mov
xchg
movsl
mov
adc
mov
icebp
jae
lea
lahf
sbbb
sub
add
and
out
mov
rcll
xor
les
adc
jo
test
dec
sub
push
lahf
adc
ja
xlat
xor
cmc
leave
xchg
outsl
adc
iret
pop
adc
sbb
sbb
divb
fcompl
mov
repz
sub
inc
push
sbb
addr16
fwait
lahf
mov
adc
js
inc
popf
and
lock
dec
push
sbb
lret
or
and
outsb
shlb
jp
dec
pop
test
sub
mov
out
inc
and
sub
fldl
xchg
pop
add
mov
pop
ds
xchg
iret
js
adc
dec
lcall
in
push
and
mov
cmc
imul
pop
xchg
dec
push
mov
jp
pushf
outsl
mov
ds
mov
cwtl
cmp
adc
dec
lcall
or
mov
xchg
stos
leave
sbb
adc
enter
das
sbb
fisubs
je
lods
xchg
pop
adc
popa
mov
sbb
pop
mov
jge
dec
mov
mov
mov
sbb
icebp
push
lods
mov
add
pop
jl
lahf
test
xchg
mov
dec
scas
stc
sbb
sbb
leave
xor
mov
pop
js
scas
mov
jge
stos
adc
lcall
xrelease
dec
movsl
inc
test
mov
mov
bound
filds
mov
jo
clc
adc
or
mov
mov
xor
mov
and
pop
mov
push
mov
mov
ljmp
lock
fwait
push
adc
sub
inc
inc
mov
cwtl
sbb
cmpsb
lret
inc
aaa
cld
jns
mov
movsb
push
dec
sbb
inc
dec
jae
push
leave
xchg
xchg
sub
xlat
out
mov
scas
mov
cmp
fwait
inc
gs
adc
sbb
or
insl
lahf
into
mov
fcompl
jne
fs
adc
xchg
fcoml
mov
lods
jno
xlat
jno
lret
icebp
leave
cmc
mov
jecxz
js
in
mov
arpl
push
inc
sbb
mov
popf
repz
pop
stos
jne
add
pop
icebp
pop
ret
dec
xchg
cmp
pop
das
rcr
sti
push
in
mov
add
sbb
rcll
sti
es
add
mov
or
aas
stc
mov
and
dec
add
mov
or
mov
mov
rcrl
mov
jecxz
or
mov
xlat
jecxz
fisubrs
push
inc
mov
dec
repnz
dec
adcb
stos
filds
incl
cmpsl
fwait
mov
sbb
mov
ss
pop
popa
scas
aad
lret
push
cld
das
enter
addl
scas
js
fsts
lds
sub
jns
movsl
mov
mov
leave
mov
pop
mov
jb
int3
mov
mov
sbb
bnd
lods
das
pushl
or
and
fmuls
fmuls
cmp
sbb
cmp
rorl
xchg
fimull
outsl
sub
fsubs
xchg
daa
test
mov
movsl
ret
xchg
cltd
bound
fld
out
inc
mov
idivl
fdivs
stos
add
jno
pop
and
sub
out
sti
testb
sbb
pushf
mov
aam
sti
pop
add
sarl
and
mov
dec
adc
push
dec
mov
pusha
ds
and
fisubrs
pop
sub
pop
push
daa
push
dec
xor
mov
stos
pop
add
mov
fucomp
je
arpl
dec
aad
mov
shr
xor
or
sbb
hlt
push
cwtl
lret
mov
mov
aad
pushf
xchg
faddl
xor
mov
data16
popf
movsl
jg
cmp
add
mov
sti
or
into
sub
push
inc
push
xor
xchg
outsb
shrb
fnsave
scas
push
mov
aad
inc
push
gs
fwait
pop
jle
mov
jnp
mov
stc
arpl
addps
push
iret
add
add
dec
mov
in
dec
sarb
stc
mov
cmp
negl
add
adc
call
pop
dec
sbb
jnp
into
add
in
clc
data16
push
xor
xchg
mov
mov
sub
xchg
and
cltd
mov
loope
dec
and
pop
add
inc
stos
jns
test
pop
movsb
leave
mov
cld
sub
stc
mov
aam
ja
in
xor
stos
jne
jns
int
inc
movb
lods
lds
jo
es
push
arpl
and
xor
es
jecxz
cmp
test
mov
inc
ljmp
popf
sbb
or
mov
pop
in
push
adc
xlat
insl
pop
js
stos
repz
add
xchg
fnstcw
add
pop
xchg
jae
jno
pop
inc
lret
xchg
icebp
xlat
fadd
cmp
sbb
fildl
ja
lret
xchg
fstpl
push
jge
dec
rcrl
and
mov
xchg
mov
dec
je
ljmp
adcl
iret
fwait
pop
in
jns
shlb
test
pop
dec
push
and
dec
inc
cmc
clc
sub
int
sahf
lods
jecxz
shll
mov
push
aad
test
push
cmc
mov
mov
push
inc
rcr
stos
cmp
rcrb
hlt
sub
cmp
int
sbb
mov
mov
mov
pop
test
add
inc
test
jmp
test
or
loop
scas
in
inc
clc
mov
and
aad
mov
adc
testb
mov
in
xlat
cwtl
or
jno
dec
push
fiadds
ljmp
rcll
inc
push
mov
movsl
or
shlb
fildl
mov
in
sbb
lahf
cmpsl
or
repnz
cmp
andl
jmp
jmp
cltd
push
mov
cmp
jl
xchg
fucomip
repz
bound
xor
xchg
mov
and
imulb
jmp
mov
jle
sub
push
mov
lcall
add
mov
in
and
addb
fcoml
js
sbb
iret
ffree
xlat
inc
sti
xor
iret
int
mov
and
cli
add
out
ds
xchg
or
xchg
jnp
popa
testl
cltd
scas
inc
sbb
scas
cmp
adc
mov
cmp
jo
xlat
push
xchg
cmp
add
mov
or
cs
stos
jge
or
adc
mov
out
mov
stos
icebp
mov
inc
inc
and
push
cwtl
jne
lock
cmp
xchg
repz
pop
sbbl
fadd
sti
xchg
hlt
repnz
pop
cmpsl
xlat
jmp
dec
sbb
lret
xor
addl
and
push
es
enter
lcall
call
add
fwait
dec
test
int
cmp
sbb
cmpsb
ljmp
xchg
fnstsw
xor
inc
in
test
movsb
jmp
sti
iret
mov
push
lcall
sub
dec
lds
pop
add
push
or
into
addl
push
add
shlb
into
cmpl
loop
jle
iret
sbbb
rorl
mov
dec
pop
sarb
mov
push
out
test
cmpsb
test
xchg
rorl
lods
lret
dec
mov
or
add
stos
or
xchg
subb
sti
push
in
test
int3
xchg
std
sbb
mov
jge
inc
jnp
test
fstpt
fsubrp
sbb
mov
pop
cld
dec
and
xor
and
ljmp
repz
pop
testb
push
lahf
cs
test
call
adc
pushf
and
adc
dec
inc
cmp
ret
int3
pop
sahf
dec
movsb
adc
loop
lret
pop
push
push
in
inc
mov
test
rcl
ds
cmp
clc
ljmp
lea
pop
mov
arpl
divb
push
aad
add
jae
pop
or
and
mov
mov
int
arpl
add
lret
test
jnp
sub
inc
fbld
and
mov
dec
sub
mov
jo
xchg
adc
mov
xchg
fistl
cmp
fdivs
out
xor
inc
stos
xor
call
sub
scas
fisttpll
xor
mov
pop
sub
dec
inc
mov
add
sbb
mov
xlat
push
fwait
push
mov
dec
adc
call
or
fsubp
mov
jns
imul
test
adc
pop
sub
cwtl
pop
or
mov
pop
dec
lcall
xor
and
pop
stos
push
inc
inc
dec
push
rclb
mov
out
lcall
popf
lret
std
loope
pushf
mov
pop
push
xor
clc
pop
or
ret
inc
cltd
js
icebp
xor
ss
jns
inc
pop
pushf
mov
xor
jmp
mov
jg
imul
addb
mov
add
dec
mov
cmpsb
hlt
lret
or
dec
cmp
cmp
mov
cmp
inc
popf
jecxz
cmp
lods
mov
jnp
fdivs
mul
add
cs
dec
movsl
ret
pop
outsb
rcl
pinsrw
xchg
sub
mov
push
xor
jae
mov
cmp
cmpb
sti
pop
push
rolb
jmp
and
xor
cmc
mov
cmp
cmp
test
lea
push
jp
jne
rcrb
jne
test
push
pop
mov
ja
fs
test
fbstp
sbb
push
adc
ret
mov
iret
or
sbbb
aad
shl
test
icebp
cmp
mov
sbb
add
pop
inc
bound
jo
or
test
jmp
test
jo
mov
push
push
inc
pop
pop
jne
je
ret
jb
xor
int3
mov
imull
push
lock
lea
fwait
outsl
bswap
stos
out
dec
xor
rclb
jl
mov
sub
daa
xchg
xor
dec
cmp
adc
pop
pop
inc
insb
test
ljmp
rolb
inc
mov
sahf
aas
mov
imul
pop
and
leave
cwtl
clc
or
mov
fsubr
jne
add
sbb
push
dec
lret
stc
inc
pop
test
hlt
popf
movsb
leave
inc
dec
push
dec
lret
repnz
fldenv
scas
cmc
std
insl
cwtl
dec
cmp
stos
aad
cmp
or
add
insb
push
pushf
mov
aaa
pop
xor
dec
mov
nop
jb
sub
jno
shrl
insb
fisubl
mov
in
lds
xchg
test
adc
xchg
cltd
adc
test
adc
xor
inc
sbb
push
js
sub
fidivl
imul
cld
jmp
ds
movb
popf
and
fiaddl
cwtl
in
fwait
mov
inc
or
shr
push
mov
sbb
mov
adc
mov
mov
dec
pop
mov
mov
pop
or
cmp
loop
xchg
test
and
inc
mov
or
inc
mov
cltd
stc
decl
mov
cmc
hlt
test
das
pop
mov
jle
mov
inc
adc
test
movsl
mov
ljmp
mov
rcrb
mov
lcall
fs
mov
int
jle
mov
and
sbb
adcb
fmuls
dec
scas
fbstp
xchg
pop
inc
fs
enter
xchg
or
mov
inc
stos
ret
sbb
xor
jecxz
jecxz
pop
cmpsb
fstpt
mov
mov
inc
test
xchg
push
push
out
les
and
sti
rcrl
jle
clc
jb
add
push
xchg
sub
out
test
movsl
inc
xor
pop
loopne
call
shrb
cmp
sti
fidivl
jns
daa
ret
cmpsb
int3
pop
sub
addl
mov
loopne,pn
jge
lret
mov
scas
dec
sbb
stos
mull
jmp
sti
iret
lcall
popf
lret
xor
rcrb
nop
mov
repnz
adc
mov
sti
dec
inc
xchg
and
mov
sbb
pop
ljmp
xchg
sbb
lret
mov
fsubr
aas
lahf
fisttps
aaa
jg
or
cld
and
or
test
sbb
dec
xchg
sbbl
movsl
mov
std
loopne
cmp
jmp
nop
inc
sbb
add
fld1
jb
stc
mov
into
addr16
fidivrl
lods
popf
leave
inc
push
sbb
rcr
rorb
les
cmp
inc
cltd
pop
adc
popa
push
mov
sahf
pop
inc
push
loopne
in
and
jne
hlt
cmp
adc
fdivr
mov
fists
xchg
or
fldenv
imul
ror
pop
xchg
cltd
adc
mov
fwait
xlat
enter
push
lods
stc
cmpsl
dec
mov
sbb
lret
and
xchg
dec
gs
in
mov
sti
mov
pop
mov
xor
sub
dec
sarb
adc
inc
push
inc
mov
subl
jg
inc
or
loop
sub
in
test
jmp
sbb
fists
push
lcall
sub
xchg
adc
lahf
in
pop
into
cs
lea
enterw
ret
mov
jns
addl
cmovge
add
leave
push
insl
mov
fucomp
fiadds
faddl
arpl
addb
jl
lock
popf
add
fwait
lret
jecxz
pusha
rol
int3
pop
sub
mov
imul
dec
inc
mov
fistpll
mov
fistps
mov
test
and
lret
fucomp
movsb
mov
enter
xor
add
nop
outsl
mov
mov
push
adc
cmp
addr16
mov
outsl
cmp
fldenv
imulb
and
test
es
fsubs
enter
sub
jae
inc
mov
jae
mov
jno
movsl
test
xchg
inc
stos
stos
pop
scas
push
test
out
inc
push
sbb
xchg
sbb
pop
enter
cmp
aas
xor
arpl
jl
mov
sbb
jl
daa
and
or
les
out
or
idivl
pushf
dec
pop
mov
xor
mov
std
sti
mov
jns
daa
lret
inc
int3
pop
sub
pop
push
or
inc
aas
or
jp
xor
xchg
lret
xchg
pop
sbb
mov
sbb
into
mov
rcl
lock
sahf
jecxz
bound
ss
mov
add
pop
les
inc
cmp
aaa
pop
pushf
inc
stos
pushf
aam
mov
scas
jno
sarl
mov
cmp
push
xlat
lahf
mov
inc
insl
mov
dec
mov
push
andl
insl
mov
jae
or
cli
jg
dec
mov
mov
pop
es
fstpt
inc
and
test
sbb
xor
or
xor
xor
mov
adc
mov
xor
imul
shll
cmp
xor
pop
aam
in
fs
or
jecxz
or
hlt
jl
iret
mov
int
push
inc
mov
in
jnp
dec
adc
cmp
les
fcomip
xor
jno
addb
stos
pop
jne
arpl
movsl
mov
adc
xor
jg
lds
dec
or
mov
lock
push
xchg
push
clc
pop
mov
push
sbb
in
xchg
jmp
push
mov
fisubrl
or
inc
dec
xchg
xchg
in
dec
or
push
shrb
aad
mov
pop
inc
adcl
cmp
and
sub
cmp
enter
push
mov
or
and
scas
loope
popl
xor
js
mov
bound
fistpl
push
das
imul
in
sti
sub
clc
sti
aad
push
aad
ror
mov
dec
pop
or
out
aam
subb
dec
mov
inc
sub
adc
das
and
shll
mov
lret
icebp
jmp
mov
into
into
pushf
movsl
movsl
mov
cmp
jnp
mov
xor
jg
cmpsl
mov
addr16
mov
sub
dec
fs
mov
and
pop
fisubrl
sub
push
or
push
ror
cmc
sti
lods
push
cmp
jecxz
pop
outsb
test
xchg
imulb
popf
fdivrl
xchg
mov
leave
mov
cmp
push
ljmp
adc
out
hlt
out
pop
arpl
jge
mov
mov
cwtl
hlt
addl
or
pop
icebp
or
addr16
sti
outsb
pop
pop
add
mov
stos
shl
aam
cmpsl
addl
mov
pop
push
jae
repz
dec
mov
adc
cmp
dec
inc
xor
dec
mov
dec
mov
mov
jbe
xchg
jb
mov
sbb
es
push
adc
add
mov
add
ret
decl
mov
fwait
into
mov
adc
push
std
ds
sbb
movsl
out
stos
cmp
inc
jno
inc
sbb
inc
cld
gs
shll
inc
les
daa
int
cmp
push
jae
ret
ss
imul
sub
lds
or
push
test
sub
daa
addb
or
xchg
in
or
add
in
sbb
lahf
cmpsl
or
repnz
mov
jl
cmc
cmp
addr16
pushf
repz
mov
xchg
mov
pop
push
subb
out
inc
pop
push
sbb
pop
jbe
push
dec
fdiv
mov
inc
pop
sub
xor
xchg
stc
daa
jmp
mov
das
pop
mov
andl
xchg
jno
mov
pop
mov
jae
mov
xor
pop
aad
fdivr
jae
idiv
movb
fsubrl
or
mov
push
fs
and
aad
or
pop
test
jmp
sub
push
fmuls
add
inc
fdivrs
or
cmpsl
mov
insl
mov
test
cmp
in
pop
sbb
mov
mov
stos
inc
xchg
call
push
rclb
mov
fsub
ja
gs
xchg
ror
loopne
sub
pop
and
cmpb
lret
adc
stc
jl
mov
jmp
jno
into
frstor
cmc
cwtl
or
inc
idivb
ret
sahf
mov
inc
shlb
or
fsts
jmp
call
cmp
xor
cmp
mov
out
cmp
inc
fdivp
inc
mov
add
ds
fistpl
add
xor
adc
pop
stos
pop
jp
push
mov
mov
rorb
inc
ss
xor
lahf
pushf
ret
or
les
xor
jno
loop
pop
xchg
mov
std
inc
cltd
xchg
cli
mov
pusha
pop
test
lods
enter
pusha
jle
das
pushl
jp
or
ror
gs
mov
lcall
sub
mov
icebp
lcall
push
add
int
sbb
dec
lahf
adc
out
jae
fstps
mov
sarb
addl
decb
std
jb
jmp
adc
dec
enter
adc
push
stc
test
mov
loopne
lods
adc
insl
push
aaa
pop
mov
add
add
xchg
cmc
mov
dec
push
fisubl
shll
imul
sbb
xlat
cld
int
add
cmc
js
adc
jnp
inc
add
mov
mov
adc
mov
cmp
cmp
lds
add
mov
adc
jne
nop
inc
fidivl
aaa
pushf
dec
pop
jp
cmpsl
sbb
leave
fwait
pop
fcomi
js
mov
leave
sbb
les
cmp
lret
sbb
test
xor
xchg
ficoml
xchg
leave
ret
inc
pop
inc
shrl
mov
test
push
clc
fcoms
sub
cmp
in
pop
out
mov
fdiv
dec
add
dec
mov
add
test
push
lds
mov
mov
or
lea
clc
and
or
sti
jnp
sbbb
inc
mov
popf
sti
sbb
hlt
xor
xchg
and
mov
mov
sti
fisttps
push
mov
dec
fcomps
stc
dec
adc
dec
lcall
sbb
cli
int3
mov
outsb
pop
mov
std
mov
xchg
orb
and
xchg
in
fcmovne
and
aad
push
or
mov
lods
mov
add
ljmp
fs
xor
push
cld
adc
cmp
or
fwait
mov
mov
sub
or
inc
sarl
stos
sub
sub
iret
xchg
ljmp
cltd
enter
ret
mov
mov
stos
jmp
jo
test
out
adc
xchg
xchg
mov
sub
xchg
pop
pop
pop
test
cmp
cmp
mov
fimuls
shrb
mov
pop
and
add
loope
cwtl
dec
xchg
or
enter
mov
add
ljmp
xor
mov
in
sbb
jge
clc
fildl
mov
stc
cli
in
cwtl
roll
add
sub
mov
or
int
sbb
loop
ficompl
mov
and
sbb
xor
adcl
adc
dec
and
repnz
in
bound
or
sub
mov
mov
inc
mov
or
fwait
ja
aam
pop
cmpsl
jnp
cmp
adc
call
cld
repnz
lret
mov
sbbl
dec
or
xchg
jge
cltd
xor
dec
lret
lock
xor
xchg
mov
sub
stos
lcall
add
es
sti
mov
sbb
xchg
out
ror
mov
jg
movsb
xchg
push
pop
sbb
sub
sbbl
aam
stos
test
mov
test
push
lcall
jae
cmp
movsl
dec
sbb
rcrl
mov
je
repnz
mov
add
mov
pop
leave
sbb
mov
lods
pop
xchg
jb
sub
xor
sub
shr
in
lds
xlat
pushf
sbb
add
sub
pop
or
sbb
popa
mov
outsb
les
adc
push
push
push
xchg
imul
add
mov
xchg
jno,pt
cmp
loope
inc
sarb
js
fcmovnu
iret
addb
rorb
lret
jle
lds
xchg
xchg
cmp
rorb
pop
movsl
pop
sbb
iret
call
sbb
lods
test
outsl
hlt
mov
push
mov
cmovno
push
leave
sub
movsb
cmc
shrb
xchg
xchg
push
adc
xchg
jns
fwait
xlat
mov
repz
mov
push
in
dec
push
add
jae
push
lods
sahf
sub
mov
pop
ljmp
adc
sbb
shrb
imul
lods
in
fnstcw
cld
xchg
pusha
jp
xor
fucomp
loope
lds
push
cmp
addr16
mov
lret
ret
adc
daa
or
imul
fstpt
test
mov
or
cmp
pop
fdivrs
jnp
shlb
popa
or
imul
jae
arpl
popl
push
mov
mov
mov
adc
xor
and
pop
pop
das
jae
fdiv
mov
les
fstl
sahf
sbb
sbb
xor
xor
inc
clc
fs
and
sti
push
hlt
cwtl
movsb
xchg
xchg
sub
pop
sahf
dec
mov
test
ljmp
ss
nop
xlat
int
jmp
push
cmp
leave
pop
add
sub
sbb
daa
mov
inc
sub
test
aam
or
sub
push
lods
xchg
sub
jb
popf
or
mov
add
push
or
mov
bnd
popf
scas
push
cltd
icebp
jge
mov
mov
sub
cmp
sbb
dec
stos
inc
lcall
cmp
inc
and
fbstp
insl
or
cmp
out
call
add
add
pop
mov
mov
mov
fmuls
jl
cwtl
dec
scas
adc
push
mov
mov
imul
addl
in
push
mov
or
jo
mov
sub
dec
jb
jle
adc
inc
in
mov
sub
pop
push
mov
lods
push
sub
cmpsb
dec
sbb
jge
adc
adc
dec
push
into
arpl
movsl
mov
pushf
in
cmp
cld
jg
mov
int3
shufps
arpl
push
cmp
push
in
roll
lahf
inc
pop
js
dec
dec
lds
popf
fimuls
mov
imul
push
push
pop
imul
pop
pop
movsl
push
push
scas
adc
and
mov
lods
js
fisubs
sbb
jmp
sbb
jns
sti
cld
pop
aas
rolb
mov
pusha
sbb
add
dec
fwait
clc
ficoms
out
into
ja
fldl
sbb
pop
loopne
mov
dec
and
lahf
iret
fucomip
in
xchg
mov
stc
out
sbb
mov
andl
icebp
mov
mov
aam
inc
xor
pop
sahf
inc
sub
adc
mov
mov
sbb
mov
jae
jb
xchg
dec
sbb
mov
pop
or
ret
ret
ret
repz
cld
sarl
fs
mov
adc
add
cld
pop
push
pusha
jns
mov
and
push
nop
cmp
repnz
into
dec
mov
mov
scas
add
xchg
cmpsb
mov
mov
imul
movsl
cli
jg
pop
call
ds
and
xorb
xchg
mov
mov
rorb
rorb
push
xorl
add
mov
xchg
gs
mov
sub
fiaddl
les
fisubs
sbb
outsl
mov
sbb
test
mov
into
inc
mov
test
mov
mov
sbbl
mov
je
add
mov
fisttpll
mov
popf
inc
arpl
jno
sbb
cmp
mov
jae
in
add
xorb
jno
mov
loopne
movsb
push
jb
jno
adc
fildll
push
push
bound
fdiv
mov
test
jp
xchg
mov
lock
cltd
mov
popf
jno
pop
stos
jne
sbb
fwait
sahf
pop
lods
xlat
mov
mov
fwait
xchg
movsl
ret
stc
call
mov
pop
xchg
lret
add
leave
inc
loop
leave
pop
out
andl
addr16
loopne
xor
add
ret
imul
push
imul
fwait
cmp
imul
sbb
jnp
mov
push
and
leave
sbb
add
and
flds
and
in
aad
test
popf
stos
inc
lahf
sbb
mov
inc
and
out
inc
mov
cmp
push
sub
sbb
test
lcall
jmp
ror
jmp
leave
sbb
in
repz
add
loop
sbb
scas
fucomi
repnz
sahf
pop
scas
loope
push
fcoms
outsb
or
and
xchg
imul
mov
add
stc
pop
push
out
jp
inc
fwait
ja
les
pop
cmpsl
fistpll
sub
jns
js
pop
xchg
pop
inc
mov
clc
pushl
rclb
mov
or
mov
imul
inc
out
cmp
and
dec
lock
mov
mov
iret
sub
bound
sub
aam
pop
pop
enter
mov
add
cmp
in
mov
test
jae
add
and
mov
dec
into
arpl
negb
adc
stos
mov
jbe
aas
pop
dec
leave
fmull
enter
sbbb
xor
shrb
out
mov
jp
xor
mov
addr16
push
and
xchg
pop
insb
test
dec
mov
lcall
xchg
or
lds
push
lcall
jp
cli
inc
insl
ljmp
iret
daa
mov
and
xabort
pop
sbb
jne
fucom
mov
cmp
mov
push
sub
mov
cmp
stos
push
rcll
xor
mov
movsl
xchg
imul
jmp
lds
ds
hlt
mov
push
adc
adc
roll
xchg
sbb
in
aad
xchg
dec
fsubr
push
test
out
jnp
xlat
stos
les
into
mov
ret
cld
cmp
dec
sbb
pmulhuw
dec
out
inc
sbb
sub
xor
add
mov
repnz
jbe
and
mov
sbb
mov
test
orb
lret
mov
pop
sarb
mov
jae
sarb
xor
js
lret
mov
mov
mov
pop
jmp
xchg
mov
call
rcrb
push
mov
movsl
testl
popa
or
and
mov
test
repz
fcompl
push
xor
sub
or
mov
mov
and
pop
test
mov
stos
sbb
push
adc
and
inc
dec
xchg
inc
sbb
or
inc
inc
dec
jg
iret
xor
aas
pop
jge
les
xchg
sti
hlt
ret
dec
sub
lahf
cwtl
jmp
ret
decl
rcrb
mov
aad
inc
sbb
jnp
lahf
lret
inc
sbb
adc
imul
clc
cmpsl
dec
enter
pop
pop
repnz
cld
mov
add
inc
add
shrl
add
xchg
jl
rorl
or
mov
sub
cltd
scas
imul
jb
cmp
bound
xchg
rcr
adc
mov
or
adc
sbbl
divl
test
mov
imul
imul
pop
push
add
popa
mov
enter
dec
mov
in
fadds
lock
dec
mov
mov
imul
push
cli
scas
shlb
push
cmc
fwait
cmp
cmp
filds
xor
fldl
jg
fiaddl
lock
dec
pop
add
pop
outsb
and
gs
sbb
sti
dec
cli
fdivs
fwait
lods
mov
dec
xchg
sbb
mov
cld
fcmovu
mov
cld
ret
shlb
inc
addr16
mov
test
imul
aad
xchg
call
lret
movsb
inc
xor
into
test
sub
adc
xor
shr
divl
mov
and
lcall
adc
mov
outsb
mov
insl
xchg
movsb
mov
stos
pushl
add
adc
mov
daa
sahf
mov
ljmp
push
sub
dec
push
hlt
test
negl
jmp
push
or
xchg
loopne
push
test
enter
jne
mov
fwait
adc
mov
pop
mov
pop
sub
sbb
add
xchg
or
mov
lods
pop
test
mov
sbb
jnp
xchg
jo
lret
adc
js
pop
scas
mov
cmpsl
icebp
sbb
lods
insl
popa
test
addb
sbb
stos
xchg
stos
std
lock
ret
mov
fidivl
jne
jnp
or
mov
popf
mov
cmpsl
push
or
cld
jle
cwtl
mov
pushl
pop
nop
pop
lods
movsb
sbb
les
fwait
push
mov
shrl
movsb
jp
xor
mov
jae
lea
pusha
lds
and
mov
jne
push
inc
mov
jae
xchg
fcoms
sbb
adc
xor
jecxz
arpl
dec
pop
lea
xchg
inc
and
sti
pop
bound
aam
cmp
call
je
pop
dec
jno
cmp
lret
movsl
mov
lcall
push
sahf
push
sub
pop
fdivl
lahf
jnp
mov
js
movsl
push
repz
mov
jo
xchg
fcoms
jae
dec
fs
adc
xor
shrl
jne
gs
adc
and
repnz
cmp
inc
fcomps
cmpsl
ret
fxch
jno
fwait
lea
mov
cmpsl
imul
mull
lcall
test
int3
dec
imul
pop
fdivs
adcb
xchg
dec
sbb
popa
mov
sub
mov
rcr
mov
mov
inc
rorl
mov
out
jns
rcrb
mov
sbb
mov
dec
lahf
mov
std
cld
dec
dec
mov
sbb
ret
ret
pop
adc
dec
jecxz
jge
push
pusha
sub
mov
mov
movsb
lds
fisttpll
cltd
xchg
ja
mov
bound
sbb
jp
popf
scas
mov
movsl
loopne
cmpsl
jae
dec
dec
adc
test
icebp
stos
pushf
xor
testl
sub
and
dec
jno
pop
mov
sub
mov
pop
shlb
aaa
fnstcw
inc
cltd
into
cwtl
cwtl
addb
or
or
lea
stos
mov
dec
xchg
out
stos
mov
cwtl
outsb
test
xor
mov
cwtl
push
mov
fstps
insl
mov
stos
add
mov
mov
inc
adc
sub
inc
inc
or
xlat
fisubrs
and
inc
adc
mov
out
jns
push
ja
inc
std
stos
cmp
aad
jmp
mov
fldl
rcr
dec
push
sbbl
jno
fldl
jle
inc
mov
add
insl
fwait
mov
ror
inc
sbb
cli
mov
add
roll
push
pop
cwtl
movsb
ret
mov
push
xchg
popf
mov
fmull
add
lds
mov
and
fisubl
stos
inc
add
mov
xchg
mov
mov
mov
outsl
cmpsl
ret
lds
idivl
lea
jmp
subl
xorl
and
popl
xchg
push
mov
and
push
mov
xor
cltd
cmpsb
ret
loopne
mov
clc
sti
mov
or
add
es
pop
sub
addl
orl
imul
mov
add
pop
sahf
fwait
jle
xchg
sub
adc
xchg
adc
dec
dec
push
push
dec
xor
loop
imul
into
mov
push
sub
lds
xlat
orl
ds
dec
iret
dec
repz
jb
cmp
inc
mov
push
fdivs
scas
je
data16
sti
or
imul
cld
mov
es
fiaddl
add
cli
movsl
mov
jns
les
mov
movsl
inc
jno
lret
sub
cltd
jecxz
iret
inc
sbb
lret
rorl
fidivrs
inc
mov
sarb
rcr
dec
in
insb
push
mov
add
add
xchg
rcrb
ret
loopne
iret
lret
mulps
repz
sti
cmpsl
loope
lahf
lret
aaa
icebp
and
es
inc
mov
sbb
dec
jl
popf
jmp
int
push
testl
incl
pop
jecxz
mov
xor
sub
jbe
movsb
cwtl
sbb
sahf
or
bound
in
popf
lahf
std
sub
xorl
push
sub
ret
pop
jbe
sub
cmp
pop
sub
pop
mov
pusha
mov
inc
lock
fdiv
and
daa
ret
add
orl
iret
insl
gs
inc
sub
mov
xchg
sahf
loope
sbb
cwtl
push
gs
cmovge
out
jl
scas
popa
or
sub
xchg
lcall
sub
cmp
movb
mov
int
mov
out
and
cwtl
and
sti
pop
es
cmp
add
xchg
add
sbb
fisubrs
test
loopne
adcl
mov
pop
stos
jmp
jb
cli
xchg
mov
sbb
mov
bound
rcrb
roll
movsb
cltd
mov
lahf
xor
mov
xor
mov
or
fldl
add
std
pop
dec
xchg
sbb
mov
adc
faddl
dec
ret
test
arpl
or
push
rorl
xchg
mov
mov
inc
mov
les
sahf
rcll
inc
bswap
pop
call
push
lds
pop
aas
cmpsl
es
sbb
rcr
dec
dec
rorl
or
mov
pop
std
or
fistpl
clc
sub
int
fwait
lods
popa
in
cmp
and
ljmp
rcrl
enter
add
es
hlt
xor
nop
sub
adc
push
enter
mov
add
sub
or
push
cli
mov
inc
fildll
sbb
sub
scas
mov
jae
cli
add
testb
mov
fisubrl
pop
adc
push
icebp
movsl
iret
dec
push
inc
rclb
push
repnz
inc
repz
and
dec
mov
adcb
inc
sbb
add
add
pop
pop
mov
sbb
or
or
mov
adc
ret
push
jg
dec
sbb
subb
aam
cmp
daa
fcomi
cltd
ret
jnp
movsb
lods
jle
arpl
push
jbe
fdivrl
addr16
icebp
jnp
in
push
jg
push
out
xlat
loop
dec
add
add
inc
pop
popa
jmp
adc
or
test
xor
pop
in
aas
clc
mov
ret
xchg
stc
jb
test
or
testl
xchg
cltd
fcoms
xor
rcll
scas
adc
push
sti
repnz
fldcw
test
std
int3
stc
inc
push
test
sti
mov
les
fsub
sbb
enter
dec
push
shrl
mov
aam
ret
insl
loop
pop
gs
cmp
bound
jmp
push
or
fmull
rcll
test
arpl
lea
repnz
xor
insl
test
sub
outsl
or
lds
dec
mov
xchg
out
fstps
cmpsl
cmp
jne
jge
or
dec
ret
enter
xlat
mov
mov
adcb
dec
ret
subb
jle
clc
inc
call
cmpsb
mov
sbb
scas
lock
insl
adc
lds
dec
addl
jecxz
rorb
mov
jb
test
jo
mov
sahf
or
int
js
push
dec
mov
sbb
lds
jb
es
add
neg
aam
pop
jns
pop
inc
dec
xlat
rol
aam
cmp
pop
ret
lret
dec
jne,pt
dec
mov
test
popa
ss
xchg
mov
imul
inc
xlat
sbb
xchg
loope
fisttpl
int
rol
lods
pop
cmpsl
pop
insb
ja
mov
mov
shll
stos
mov
and
or
add
or
nop
cmpsl
and
sbb
xchg
mov
xchg
stos
mov
xor
push
adc
mov
jp
pop
push
call
inc
mov
mov
mov
mov
xchg
in
testl
arpl
inc
sahf
and
mov
pop
cmc
add
push
gs
cmc
fildl
mov
shll
mov
mov
cmpsl
aam
iret
adc
dec
jnp
push
and
push
pop
xor
inc
jp,pt
fwait
sbb
fisubs
fsubrl
lock
dec
mov
stos
dec
sbb
scas
push
test
pop
shlb
fs
mov
into
arpl
movsl
mov
adc
popa
popf
rcrl
mov
cli
jp
call
cli
sbb
mov
push
jae
arpl
mov
mov
dec
push
fwait
imul
clc
lock
dec
leave
aad
call
inc
scas
xchg
sbb
orl
mov
xchg
ljmp
mov
ja
jno
ljmp
adc
imul
jl
push
add
out
cs
xchg
xchg
out
lcall
mov
add
ret
mov
pop
test
lret
fwait
lahf
stos
and
jmp
mov
push
push
add
lahf
inc
inc
mov
push
leave
orl
fdivs
dec
fstpl
rcl
enter
push
lods
clc
out
dec
sbb
aad
sbb
jmp
and
mov
aaa
mov
mov
push
jge
pop
ret
adc
clc
xor
in
sbb
adc
movsb
call
lds
mov
test
leave
push
nop
scas
fmuls
sbb
mov
pop
and
or
dec
movsl
adc
lcall
xrelease
sub
xchg
jo
frstor
cmp
enter
arpl
lret
ret
xorl
cs
dec
aam
aam
xor
mov
add
fisubl
jmp
cmp
cmp
stos
jecxz
iret
ss
clc
sti
loopne
icebp
add
lock
inc
popf
sbb
add
dec
pop
daa
add
notl
sbb
stos
mov
push
push
test
dec
sbb
or
mov
jp
jae
and
mov
cwtl
repnz
ret
loope
jo
cmp
fadd
xor
test
push
lret
call
mov
mov
mov
push
fdivr
add
inc
enter
xchg
xchg
test
dec
mov
or
int
imul
push
mov
insl
les
jo
cmp
mov
cmp
jb
pop
mov
bound
inc
mov
bound
sub
or
inc
std
adc
hlt
imul
dec
aam
inc
addr16
popa
push
mov
sub
scas
in
dec
inc
mov
inc
inc
xor
inc
roll
mov
sub
add
xor
push
adc
sub
mov
cmp
xor
jp
lret
lahf
fmul
add
and
pusha
pop
loopne
movb
push
add
cwtl
roll
and
test
fnstcw
mov
push
push
add
jg
out
decl
mov
test
add
mov
jne
stos
mov
loopne
sub
push
ror
rcrb
mov
mov
ds
das
xchg
stos
lds
adc
add
mov
mov
jecxz
add
cmpsb
fidivl
imul
in
push
or
mov
fcmovb
cltd
dec
repnz
adc
cmp
sbb
orl
mov
xchg
and
sbbb
mov
jns
xchg
cli
pop
movsl
or
sbbl
into
mov
repz
add
cwtl
or
cmc
dec
pop
leave
outsl
mov
push
adc
xchg
cltd
inc
push
addr16
push
mov
inc
test
dec
sub
lahf
pop
sub
pop
cmp
sarl
ljmp
into
aad
cmp
mov
adc
add
pushf
push
adc
dec
and
pushf
dec
mov
cmpl
lret
jmp
rclb
pushf
and
add
or
push
in
or
mov
test
test
mov
rcll
mov
xor
mov
fcoml
cmp
mov
xor
xchg
pushf
ja
jo
sbb
std
rcr
inc
stc
xor
add
fldl
mov
cli
testb
repnz
out
jle
fistps
inc
out
push
test
inc
mov
mov
into
mov
loopne
adc
dec
lahf
lret
call
cltd
fsts
out
lret
mov
sub
test
fisubrl
test
mov
lahf
mov
jns
les
lods
jmp
xchg
mov
aaa
mov
popf
xor
mov
jo
out
ja
inc
pop
jmp
cld
xor
and
add
call
rcrb
fstp
inc
js
xorl
roll
ss
sbb
hlt
add
in
lcall
repz
push
pop
test
xlat
cs
mov
xchg
inc
stos
jnp
call
xlat
adc
test
and
sub
dec
shrb
inc
pop
sbb
xchg
lret
inc
mov
arpl
push
push
lcall
or
cmc
add
inc
shll
ret
fistpl
inc
loope
inc
or
cmp
movl
shlb
nop
adc
lret
test
repnz
in
test
outsb
stos
test
enter
loop
and
cmp
push
add
iret
hlt
add
enter
adc
jge
rcrl
insl
inc
sub
mov
mov
add
pop
cmpsl
mov
fsubrl
sti
adc
mov
pushf
inc
cli
cwtl
jmp
out
pop
or
popa
xor
or
lret
inc
fcoms
dec
stc
add
shlb
sub
push
movl
cmp
mov
push
ljmp
sbb
or
cmp
icebp
mov
movb
xchg
xchg
jl
pop
ljmp
fstpt
sahf
jg
mov
test
jno
add
cmp
or
dec
sti
fs
jl
push
loopne
inc
cmp
xor
or
add
adc
sbb
jbe
and
or
or
mov
psubsb
and
dec
add
dec
pop
inc
into
xchg
pop
sahf
cli
sbb
jge
repz
push
insb
outsb
sbb
mov
mov
les
fsub
sbb
enter
dec
push
shrl
mov
aam
ret
insl
loop
pop
gs
out
add
jnp
sbb
fs
movsl
scas
pop
popf
sbb
mov
fdivl
sub
repnz
push
mov
jnp
mov
sti
mov
jne
lods
jo
insl
into
shl
jle
stc
faddl
xchg
std
out
fdivrl
inc
xlat
subb
xlat
xchg
pop
add
xor
sarb
add
je
int
leave
inc
adc
add
popl
mov
inc
nop
leave
inc
rorb
rcrb
daa
cmp
or
cmp
shlb
mov
mov
add
aam
dec
pop
arpl
mov
jnp
add
mov
popa
lods
hlt
stc
sahf
inc
es
lahf
fmul
pop
data16
rclb
hlt
test
mov
lret
mov
lahf
int3
mov
ret
repnz
test
daa
add
fsubl
mov
arpl
nop
push
mov
inc
push
lea
mov
push
xchg
sbb
rolb
pop
callw
xchg
daa
cmp
ret
dec
pop
sar
dec
scas
push
mov
add
mov
ret
pushf
movsb
pop
add
mov
xlat
insb
jbe
mov
loopne
pop
ret
fld1
jb
add
mov
out
mov
jecxz
mov
std
adc
pop
cmp
jb
loope
clc
sub
popf
into
inc
mov
push
or
sbb
and
clc
mov
dec
inc
push
xor
push
sbb
fiadds
add
jnp
lcall
sbb
or
out
mov
adc
pop
sti
inc
sbb
addr16
ljmp
jp
pushf
sub
cmpsl
push
enter
add
stos
dec
mov
and
jo
pop
dec
push
adc
jge
lret
pop
shll
cli
in
outsl
dec
mov
and
push
lods
inc
movsb
outsb
shl
scas
push
cmp
fisttpll
cmp
cltd
inc
mov
icebp
sbb
gs
mov
aas
loop
push
push
mov
push
push
lods
daa
inc
call
inc
loop
cmp
loopne
jb
loopne
aad
mov
xchg
repz
into
adc
jns
pop
pop
inc
add
pop
fsubr
fstps
pop
mov
mov
cmp
mov
and
sub
cmp
and
dec
lahf
adc
aad
mov
int3
adc
inc
adc
xchg
jl
out
idivl
and
dec
mov
push
xlat
mov
xchg
std
xor
stos
test
jne
sbb
data16
bound
dec
mov
fildll
lds
jg
ret
add
dec
xor
adc
rcrb
ja
fcompl
fwait
ss
inc
and
cmp
cmp
push
mov
pop
insb
dec
jbe,pt
pop
mov
push
lock
repz
stos
xchg
cwtl
mov
dec
les
jno
mov
repnz
push
into
pop
enter
sti
mov
fwait
iret
js
sti
pop
fdivs
mov
jo
stc
pop
pop
hlt
xor
jo
push
mov
xor
mov
sbb
inc
inc
dec
pop
mov
imul
sub
mov
call
je
call
dec
daa
or
loope
dec
pusha
insl
and
push
lods
xor
stos
dec
push
adc
lcall
push
lret
fnsave
push
in
mov
pop
dec
cmp
sbb
outsb
cmp
rcll
xchg
cld
jg
dec
add
jmp
int3
adc
movsb
dec
mov
jbe
adc
inc
mov
dec
inc
sbb
jmp
lds
jnp
push
hlt
fcompl
out
fsubr
inc
sub
pop
mov
insl
mov
repnz
and
stos
push
mov
add
movsl
mov
jmp
ret
xor
or
cmpsl
mov
fwait
lea
iret
fs
scas
cmpsl
xlat
adc
addl
incl
mov
loope
in
das
addr16
xchg
popl
iret
repz
and
add
pop
sub
mov
adc
mov
mov
icebp
mov
sahf
xchg
add
leave
mov
movsb
and
mov
xor
mov
fcoml
xchg
pop
jno
inc
pop
inc
push
add
cmpsb
outsl
jmp
fdivl
shll
cmpsl
iret
cmpsl
rcl
inc
and
cmp
adc
adc
xlat
fcmovne
jmp
test
xchg
fidivs
jge
enter
dec
shl
lods
xor
and
lret
insl
jnp
ljmp
mov
push
mov
std
ss
stc
inc
add
jbe
dec
cltd
cmpsb
pop
adc
mov
aas
fwait
cmp
iret
inc
sarb
fidivrl
das
ljmp
fimull
sbb
jae
les
pop
inc
xor
inc
sti
cmp
jg
loop
outsb
enter
adc
lahf
xor
xchg
mov
and
imulb
jmp
mov
jle
cmp
inc
pop
mov
popa
jmp
test
fwait
adc
int3
sub
jmp
imul
mov
test
js
inc
jb
add
inc
cmp
mov
lahf
in
inc
sbb
pop
ret
push
xchg
test
lock
ficomps
or
and
cli
add
xchg
jp
loop
xchg
push
push
aad
fisttps
cmp
int3
dec
xor
inc
bound
xchg
cltd
inc
dec
pop
xchg
jae
int3
mov
cmpsl
push
xchg
cmp
dec
pushf
add
testl
adc
andl
push
jp
lds
push
pushf
jno
or
adc
and
sbb
dec
inc
and
or
inc
add
aas
test
push
or
cwtl
out
mov
int3
and
hlt
daa
stos
adc
add
mov
sub
fadd
sub
divb
rorb
jne
push
icebp
cmp
test
pushf
mov
mov
adc
ret
ret
sti
cmc
cld
rorb
les
adc
cwtl
sub
adc
fsts
call
sbb
ret
lahf
loop
mov
in
mov
push
mov
lahf
inc
test
mov
pop
repnz
mov
pop
or
lfs
sbb
pop
mov
xlat
insb
out
xchg
inc
and
pop
dec
out
pop
lea
data16
adc
adc
mov
lock
lret
jo
mov
mov
push
mov
sbb
xchg
jmp
call
mov
push
pop
add
add
adc
imull
and
hlt
orl
xor
xchg
mov
hlt
xor
dec
aas
adc
fdiv
dec
daa
push
fsubl
or
rcl
push
imul
sarb
adc
sbb
xlat
or
sbb
arpl
loop
xlat
adc
cmp
rcll
stc
cld
jg
adc
xor
adc
fsubrl
das
lcall
rclb
sbb
push
cmp
jmp
push
fwait
leave
cmc
cmc
fildll
outsl
mov
pop
jmp
push
push
dec
cmpsl
addr16
test
lcall
lods
cmpsb
push
and
aam
or
lahf
jb
pop
cmc
pop
mov
cmpsb
addr16
push
mov
iret
add
inc
jae,pt
jo
inc
cmp
adc
scas
mov
pop
and
stos
mov
scas
add
addr16
inc
dec
daa
push
inc
repz
dec
and
hlt
xor
mov
or
dec
adc
mov
pop
push
jecxz
fsubrs
or
mov
adc
xchg
sub
lods
push
dec
jns
insb
arpl
movsl
push
js
test
dec
js
sub
xchg
mov
adc
sub
cld
inc
or
push
cwtl
lret
inc
add
mov
or
dec
pop
jbe
loope
mov
mov
shll
push
test
xchg
fbstp
pop
das
pop
mov
mov
inc
movsl
out
xchg
push
cmp
pop
push
xchg
repz
inc
mov
jmp
lods
mov
out
sbb
cmp
mov
inc
mov
js
adc
push
loopne
cs
add
push
xor
push
cli
xlat
sahf
or
jnp
std
leave
dec
rorl
or
inc
push
inc
add
jg
in
fildll
add
push
sbb
sbb
and
cmpsl
add
mov
dec
push
aam
iret
cmp
sub
aaa
mov
dec
sahf
xchg
inc
cmc
sub
loop
sub
dec
adc
adc
cmp
test
sbb
fldl
ja
shrb
outsb
mov
arpl
dec
mov
jle
dec
aaa
std
lcall
sti
sbb
sub
cmp
xlat
pop
psrld
popf
push
fcom
lahf
repz
pop
insb
fcomps
mov
mov
jp
int3
sub
mov
cmp
sub
mov
push
mov
cld
jno
jb
pop
lahf
pop
lods
test
mov
inc
or
popf
lahf
jo
icebp
and
mov
add
add
cmc
jp
stc
mov
fucomi
or
push
fbstp
shr
or
pop
mov
mov
pop
add
push
pop
ja
clc
add
sbb
and
add
inc
push
or
xchg
inc
orl
xchg
push
sub
dec
pusha
enter
add
dec
sub
test
sub
sahf
pop
int3
pop
in
push
dec
repz
test
cmp
ror
adc
sbb
or
jne
cli
hlt
sub
ror
imul
sbb
jb
movsb
shl
jns
jae
in
leave
mov
pusha
push
pop
leave
stc
or
inc
ljmp
pop
mov
popa
pop
fsubrs
hlt
sbb
fists
inc
lcall
sbb
stos
push
int
out
cmp
stos
lock
rorb
xchg
cmp
add
adc
loope
jno
jle
inc
shrl
lock
fsubs
ljmp
ret
repnz
mov
imul
cmp
cmp
xor
xchg
outsl
mov
mov
push
lods
xchg
cltd
xchg
lds
dec
push
add
mov
and
mov
pop
sub
jb
orl
push
sahf
aaa
push
icebp
cmp
mov
mov
cmp
stos
jae
push
or
cmpsl
push
sarb
or
sub
inc
fs
cld
js
inc
push
sbb
sbb
iret
stc
adc
bound
idivl
pop
icebp
or
add
ret
sub
inc
xchg
mov
test
mov
fistl
pop
cmp
mov
inc
inc
and
push
cwtl
jne
lock
cmp
xchg
repz
pop
sbbl
fadd
sti
xchg
hlt
repnz
pop
cmpsl
xlat
jmp
dec
sbb
lret
xor
into
sahf
jb
push
mov
mov
loopne
inc
sahf
ja
call
adc
xchg
lcall
xchg
ds
and
adc
pushf
pushf
dec
inc
int
imul
push
xlat
mov
xchg
push
xor
ror
or
push
jno
mov
scas
arpl
push
or
push
enter
or
fnstcw
mov
enter
outsl
aaa
movl
sbb
jno
movsb
xchg
in
and
inc
fists
xchg
dec
cmp
inc
jg
subl
xchg
mov
and
xorb
sub
pop
stos
push
xchg
jbe
scas
mov
fldl
inc
fstps
pop
and
aas
xabort
add
xchg
inc
mov
inc
push
cwtl
mov
xor
add
ja
pop
rcr
and
cmpsb
pop
mov
or
pop
stos
les
es
pop
add
jp
pop
mov
lock
mov
mov
insl
lock
mov
dec
mov
divb
sbb
sbb
mov
pop
stos
mov
and
jne
sub
movsl
push
push
repz
inc
xchg
fidivs
mov
das
or
data16
mov
dec
int3
data16
or
xor
lret
mov
xchg
cmp
out
jns
sub
xchg
add
push
cmp
jnp
ljmp
mov
jl
inc
in
xchg
dec
imul
test
lcall
ret
pop
push
loopne
pop
ds
popl
in
jecxz
xor
loop
scas
cmpsl
xlat
add
inc
and
add
jae
adc
or
scas
add
idivl
mov
sahf
in
hlt
sarl
pop
iret
fbstp
jno
mov
mov
in
mov
dec
inc
cmp
sbb
leave
adc
push
xchg
dec
push
sub
push
lret
adc
inc
mov
push
dec
sbb
cmc
scas
lret
jae
cmp
rcrb
ffreep
in
sub
mov
mov
in
jno
repnz
sbb
pop
mov
rcrb
push
mov
outsl
popf
dec
inc
sbb
inc
inc
lahf
scas
xchg
incl
sahf
inc
bound
lcall
les
cmp
sarl
dec
inc
sbb
jno
insl
pushf
ja
and
sti
test
lcall
lods
cmpsb
push
and
aam
or
lahf
jb
pop
cmc
js
mov
push
mov
iret
add
inc
ds
out
js
cmp
adc
and
mov
insl
jmp
inc
mov
xor
inc
dec
daa
push
inc
repz
dec
and
hlt
xor
mov
or
dec
adc
mov
pop
push
jecxz
fsubrs
or
mov
adc
pushf
les
dec
mov
cmpsl
imul
add
fs
and
mov
jo
fidivs
inc
add
sub
cld
inc
mov
icebp
int3
sub
lock
outsl
dec
jmp
inc
add
and
in
movsb
insl
incl
mov
fucom
or
popf
enter
je
sarb
inc
xchg
or
add
lea
xchg
mov
stos
push
mov
xchg
jno
jl
stos
mov
mov
cwtl
rcrl
xor
and
xchg
pop
sub
or
or
int
cmp
mov
fwait
push
mov
push
mov
mov
cmp
push
mov
pop
repz
stc
cltd
mov
mov
fadds
xchg
psraw
inc
mov
hlt
xchg
test
inc
mov
jmp
dec
je
out
lods
popf
dec
add
sbb
into
mov
stos
in
lods
seto
lods
cltd
fstpt
or
lds
loope
inc
dec
lds
subb
stos
stos
lea
push
or
add
pcmpeqw
ret
loope
fadd
cmp
xchg
cmp
roll
jbe
mov
adc
inc
mov
lea
stos
cs
icebp
dec
rcrl
mov
loope
ret
inc
stos
test
jbe
mov
sub
adcb
sbb
push
pushf
ja
int
lock
sarl
push
adc
repz
ja
dec
sbb
mov
rclb
jle
fnstsw
dec
cmc
add
pop
cmp
jmp
mov
adc
dec
fnstenv
inc
and
or
pusha
jg
xor
adc
scas
fidivl
arpl
lds
imul
or
mov
adc
aam
cltd
and
cmp
ss
int
lret
push
xor
out
or
pushf
xchg
pop
test
adc
push
inc
xor
imul
xchg
repz
and
test
sub
push
fmuls
dec
scas
fbstp
insb
push
cmp
xor
mov
mov
xchg
xor
stos
negb
cmovne
mov
hlt
je
movsb
lret
mov
pusha
loope
ret
fld1
adc
pop
loop
in
data16
test
xor
inc
andl
mov
inc
imul
jg
pop
mov
mov
and
repz
les
inc
inc
xor
ds
mov
mov
jno
dec
inc
hlt
js
fnstenv
jecxz
mov
dec
sub
test
push
dec
inc
lret
mov
into
test
mov
push
push
or
repnz
call
fldt
arpl
add
and
loop
cmp
ljmp
rcl
lret
mov
adc
movsl
fsubrl
fs
fadds
gs
lahf
xchg
or
jmp
mov
mov
les
mov
lret
inc
test
push
aas
sbb
fisubrl
imul
sbb
mov
add
mov
mov
mov
pusha
loope
ret
fld1
adc
pop
loop
int3
data16
test
sbb
dec
mov
mov
jp
dec
xchg
jl
addr16
inc
idivb
cltd
pop
repz
fldt
lods
popa
xor
int
cwtl
xchg
leave
mov
shrb
mov
popf
addl
pop
out
fmul
jge
jmp
lret
popf
fmull
xor
lcall
dec
dec
lcall
and
mov
dec
cmp
test
lea
shrb
fcoml
mov
mov
fsubrl
jns
test
push
mov
jnp
scas
sub
es
fdivrs
push
ror
std
mov
sub
roll
in
in
mov
or
dec
cmpsl
ds
bound
in
icebp
pop
xor
sub
xchg
sub
push
pop
pop
cmp
iret
sub
aad
ljmp
sbbl
rcll
daa
mov
xor
int
into
mov
push
mov
shr
xor
bound
dec
adc
dec
ret
outsl
mov
lock
lret
mov
sbb
and
mov
daa
popa
lahf
mov
sahf
cmp
jg
mov
cmc
mov
jecxz
cmp
inc
and
jae
ljmp
sti
movl
leave
ret
mov
mov
mov
cmp
in
mov
xchg
pop
inc
outsb
aam
sti
arpl
push
and
add
xchg
into
out
pop
les
leave
jp
lret
push
aad
ret
dec
or
lds
in
mov
push
push
test
gs
jmp
inc
movsl
jnp
addr16
jp
jae
cmp
shll
xor
rcrb
test
push
mov
jne
pop
movl
fbstp
popf
adc
cmpsl
jl
aaa
or
out
lds
pop
outsb
rcll
sub
lret
sub
icebp
test
ljmp
push
movsb
mov
mov
mov
mov
mov
into
je
or
ljmp
sbbl
pop
fisubl
sub
ret
shrb
iret
mov
in
imul
dec
enter
dec
fsubrl
jl
loopne
fisubs
scas
inc
lahf
sub
repnz
jb
mov
iret
les
int
jno
gs
pop
pop
mov
pop
mov
add
lret
fldcw
aad
pop
mov
int3
fsubl
or
movsl
and
enter
loop
rcrb
sarb
jecxz
loopne
mov
shlb
in
lcall
arpl
pop
mov
adc
xor
add
ficompl
mov
shll
jmp
clc
cmp
pop
pop
test
stos
les
ljmp
push
movsb
mov
mov
mov
mov
mov
into
je
or
ljmp
sbbl
aaa
mov
popa
mov
mov
mov
les
jnp
fildl
imul
ret
les
iret
dec
aas
cmc
lds
sbb
pop
addl
jne
ds
dec
rcrb
bound
mov
jne,pn
xchg
shrl
dec
and
addb
int
jo
movsl
pop
outsb
xchg
fwait
popf
mov
ljmp
xchg
mov
loopne
mov
sar
in
scas
sub
aaa
pusha
mull
sub
mov
gs
adc
inc
cwtl
cmp
sti
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
adc
test
test
cmp
inc
lds
repnz
jno
dec
fldpi
cmc
stos
dec
pop
dec
dec
shlb
out
enter
arpl
aad
jne
jne
cmpsl
scas
arpl
dec
lcall
inc
testb
xorl
xchg
aad
or
loope
adc
pop
add
dec
stos
das
jae
imul
sbb
popf
and
push
push
aam
mov
cltd
dec
ljmp
into
mov
shll
test
sbb
mov
xchg
stos
jge
cli
pop
cmpsl
push
cmc
test
adc
add
pop
test
sbb
aam
cld
mov
and
and
shlb
aam
aaa
dec
xor
shrl
pop
movsl
jb
test
lret
cmc
jo
shl
stc
dec
cmp
jno
pop
jns
sub
xchg
movsl
scas
shr
ret
jne
sbb
and
or
adc
fistl
testb
mov
mov
pop
std
call
cmpsb
inc
xchg
mov
fcoml
dec
inc
pop
fnstenv
sub
pop
sub
xchg
dec
adc
push
dec
xor
insb
jecxz
jle
iret
mov
mov
or
dec
pop
movb
inc
imul
test
mov
xchg
cmp
test
sarl
lds
shlb
ficomps
fsubs
dec
ror
lcall
insl
lret
jge
mov
jbe
stos
lds
push
adc
adc
xchg
ret
inc
movsl
int
pop
mov
cmp
imul
xor
dec
adc
iret
xlat
in
jl
cmpsb
lods
incb
loop
jp
lds
push
pushf
jno
or
adc
and
sbb
dec
inc
and
or
inc
add
aas
test
push
or
and
add
mov
jl
sub
mov
or
ss
pushf
pop
insb
dec
shlb
scas
mov
shlb
xor
pop
pushf
shll
test
jae
pop
imul
int3
in
scas
sub
pop
xchg
push
push
scas
cli
mov
mov
lahf
cld
test
mov
mov
mov
jmp
jg
mov
std
shl
push
mov
pop
insb
iret
jmp
and
lock
mov
imul
sub
jae
push
ljmp
lret
inc
mov
sbb
mov
sti
shl
std
xor
lock
adc
add
xchg
imull
add
lds
vreducesd
xchg
in
inc
int
push
mov
pushf
divb
call
xchg
xchg
sahf
mov
pop
or
xor
ret
xchg
jmp
inc
stc
shlb
sub
inc
test
adc
jle
popa
xorb
cld
xchg
fidivl
lds
fistpl
pop
push
xchg
xchg
push
adc
mov
lret
test
xchg
lcall
inc
inc
mov
cmpsl
add
cmpsl
fmuls
sub
rol
dec
pop
cmpsl
pop
fs
adc
mov
push
xchg
sbb
rolb
pop
callw
xchg
daa
cmp
ret
dec
pop
sar
dec
scas
push
mov
add
mov
ret
pushf
jg
movsl
push
inc
dec
jl
pop
movsb
xchg
loop
inc
stos
push
mov
repz
aad
negl
jl
repz
add
push
push
mov
jb
xchg
xorb
mov
int3
aaa
mov
and
sbb
jmp
mov
gs
ret
ret
call
mov
jnp
inc
fs
imul
inc
mov
sbb
shrb
hlt
xor
test
int3
sub
lret
adc
push
fwait
xchg
iret
sbb
outsl
test
dec
sub
stc
or
xor
push
mov
orl
sti
addr16
out
jmp
mov
sbb
shl
or
mov
movsb
push
shlb
leave
in
inc
sbb
push
je
mov
pop
mov
leave
loop
insl
xorl
mov
xor
stos
arpl
inc
flds
lods
pop
mov
sti
negb
jo
push
sub
xlat
add
add
std
testb
in
pop
call
popa
rolb
mov
mov
mov
pop
popa
aam
mov
push
test
xorb
inc
lock
sub
add
dec
sbb
test
inc
mov
xlat
dec
push
cmp
nop
fisubs
je
dec
js
sbb
lea
or
lock
dec
lret
sbb
or
iret
add
les
incb
push
sahf
ss
and
jae
sbb
arpl
mov
xchg
jp
aam
jne
aad
pop
and
in
xchg
fisttpl
imul
and
pusha
cmp
pop
daa
lahf
inc
lahf
scas
roll
jp
fcom
je
sbb
or
mov
pop
in
push
adc
xlat
insl
pop
js
stos
repz
sbb
xor
cltd
mov
jns
push
pop
mov
pop
out
mov
pop
outsb
inc
cld
inc
jmp
sahf
mov
stc
add
adc
add
ffreep
iret
cmc
int
mov
jbe
inc
fmulp
pop
mov
movswl
fucomip
loopne
xchg
rolb
pop
bound
sub
fidivs
push
mov
jmp
inc
rcl
mov
xor
dec
repz
lret
dec
sub
lahf
movsb
pop
pop
cmpsb
push
dec
fiadds
lods
imul
dec
sub
jno
nop
pop
sti
inc
add
or
jg
cmpsl
mov
adc
cwtl
lret
mov
sbb
jmp
push
push
cwtl
jae
mov
hlt
jl
lret
icebp
xchg
jne
sub
xchg
xor
retw
out
leave
sbb
cwtl
icebp
push
xchg
es
inc
pop
sarb
into
gs
inc
out
mov
addr16
in
adc
cmpsl
jnp
jnp
fs
mov
add
mov
pop
sub
push
push
lcall
or
cmc
add
inc
shll
ret
fistpl
inc
loope
inc
or
cmp
movl
mov
mov
jbe
sbb
or
hlt
jl
jbe
ljmp
add
das
inc
mov
or
xchg
mov
and
add
mov
mov
fldt
push
inc
mov
clc
ja
inc
clc
or
lret
pop
ret
mov
cmp
mov
dec
int3
push
sub
xchg
popf
movsb
ret
pop
aas
push
shr
repnz
lods
add
popf
xor
arpl
call
out
ror
jge
scas
leave
mov
xchg
test
test
cli
push
lods
pop
call
inc
mov
shr
scas
int3
mov
xlat
sbb
add
dec
pop
repnz
inc
mov
inc
mov
scas
out
push
pop
mov
inc
push
aam
jnp
mov
imul
pop
mov
clc
sti
mov
inc
push
or
repnz
sbb
xor
and
mov
push
sub
jb
call
push
insb
aad
mov
scas
sub
rcll
ljmp
mov
and
out
into
push
cmc
inc
mov
or
cmp
in
adc
js
fs
push
lods
movsb
gs
lods
lds
je
popa
jp
mov
and
xchg
mov
ror
std
shrl
push
cmp
bound
inc
inc
idivb
jb
push
xchg
fistpl
push
stc
hlt
dec
inc
jb
sub
test
stos
pop
mov
cmp
out
cmp
and
leave
inc
xor
cs
mov
orl
mov
xchg
test
xor
mov
out
or
or
add
movsl
and
ret
daa
jb
mull
aas
dec
out
fs
sbb
xor
mov
lods
cmpsb
repnz
mov
enter
mov
test
enter
push
and
dec
gs
cli
lret
cmpl
and
mov
adc
add
bnd
loop
fbstp
scas
data16
lods
into
nop
mov
test
mov
scas
jg
pushl
or
popf
enter
push
cmp
insl
insl
and
adc
lret
test
mov
jbe
jg
and
mov
lcall
daa
inc
sbb
fnstsw
pusha
outsl
add
pop
in
mov
xor
div
jl
mov
sub
pop
fsubrs
popf
jmp
outsb
inc
add
adc
inc
std
pop
jle
xchg
cmc
movsl
jge
ja
daa
out
inc
ret
inc
sahf
fisttps
loope
addl
dec
or
ret
insb
lret
mov
adc
xor
sbb
dec
pop
fcomps
mov
jne
inc
dec
inc
and
xorb
fldt
in
dec
sub
jne
and
cs
lret
pop
dec
pop
pop
dec
inc
add
mov
pop
and
or
pop
dec
flds
fmuls
subb
sahf
fsubl
xchg
xor
dec
mov
loope
pusha
scas
popa
ja
scas
scas
inc
fwait
mov
cmpsl
and
pop
hlt
sbbl
mov
xchg
pop
xchg
sub
dec
cmc
push
les
push
pop
jmp
jb
ret
xor
insl
adc
mov
mov
iret
inc
loopne
lahf
cmpsl
xlat
add
dec
idiv
mov
sbb
fwait
mov
mov
popf
cltd
pop
inc
xor
std
push
or
mov
mov
loopne
or
psraw
inc
sbb
cli
add
mov
mov
mov
adc
sarb
or
xchg
dec
mov
shlb
mov
xor
les
adc
push
sahf
xor
mov
jnp
pushf
dec
outsl
cmp
ret
ret
fstpt
mov
subl
lret
movsl
mov
nop
mov
sbb
js
cltd
lods
pop
filds
pusha
fidivs
loopne
jmp
movl
insb
fcoms
loopne
dec
cmp
xor
or
dec
testl
mov
jle
xor
push
into
sub
add
int
push
fiadds
into
pusha
jo
dec
dec
lds
sbb
push
pop
je
iret
idivl
dec
mov
in
jne
movsb
sub
ljmp
int3
xchg
fstpt
repnz
pop
inc
jmp
push
jae
cs
add
lods
push
cmpsl
das
ror
aas
stos
mov
sbb
lods
and
xchg
movsb
aad
sub
dec
pop
jg
mov
jle
lds
inc
mov
test
xor
mov
rcrb
sbb
cmc
mov
out
out
push
sub
popf
cmp
jb
xor
orb
stos
dec
mov
sub
dec
lods
cmc
jae
and
jbe
jmp
mov
call
je
lret
push
cmp
insl
ret
sub
test
xchg
inc
stos
divb
push
adc
mov
icebp
xlat
pop
int3
ret
inc
pop
ss
adc
out
mov
xor
add
stos
inc
and
test
inc
loop
scas
out
adc
roll
push
test
adc
xorl
fwait
add
adc
pop
push
dec
repz
jns
lock
lahf
pop
jmp
push
jb
dec
aaa
sbb
and
out
cmpb
lods
faddl
inc
je
and
popf
popf
inc
dec
fcom
push
adc
push
and
mov
xchg
cmp
inc
cwtl
push
mov
jl
sub
dec
inc
pop
or
pop
ret
outsb
mov
and
sub
faddl
in
add
pop
cltd
lods
jle
cltd
shl
lea
cmp
bound
jo
mov
jbe
call
xchg
add
cmpsb
mov
sbbb
loope
xchg
and
add
fidivrs
test
data16
cli
add
inc
lret
mulb
imul
jb
inc
cltd
enter
cmp
fiaddl
or
jle
clc
xchg
cmp
rcrl
sbb
jp
stc
adc
mov
aam
add
mov
pop
or
sahf
andb
mull
aas
dec
out
fs
sbb
xor
mov
lods
cmpsb
repnz
mov
jnp
daa
adc
repnz
add
fcmovbe
stos
mov
shlb
sbb
jge
xlat
lret
push
mov
mov
sbb
dec
aaa
mov
pop
dec
jb
dec
xchg
orb
cmp
jo
adc
sbb
push
cmp
push
fidivs
mull
lret
push
nop
mov
scas
inc
xchg
ljmp
pop
mov
push
outsb
push
fdivl
and
scas
jne
sbbb
ficoml
mov
pop
jne
popf
xlat
insb
imul
ja
adcl
movsl
adc
xchg
addr16
jno
icebp
inc
xchg
pop
inc
out
adc
lret
jnp
fildl
ljmp
movsb
test
fistps
aas
or
inc
fnsave
dec
adc
cli
mov
inc
mov
insl
mov
inc
xor
std
loop
add
mov
jmp
test
mov
rorl
les
jl
sub
xchg
mov
xlat
dec
add
sub
and
push
xchg
pop
cmpsl
jmp
arpl
dec
dec
jae
mov
pop
ret
ljmp
enter
add
add
test
les
fsts
xor
fcompl
negb
jecxz
inc
pusha
fucomip
ror
fld1
int3
bound
cli
mov
repnz
vcvtsi2sdl
dec
dec
xchg
push
push
mov
cwtl
sub
sbb
pop
fistl
cmpsb
jmp
pop
fs
inc
stos
pop
movsb
cli
mov
lahf
fbld
loope
push
jns
in
jb
jo
cs
xor
cli
cmp
mov
jo
and
subb
ret
adc
mov
xchg
pop
mov
sub
pop
jge
mov
or
sahf
andb
mull
aas
dec
out
fs
sbb
xor
mov
lods
cmpsb
repnz
mov
stos
adc
mov
mov
addb
test
adcl
inc
adc
mov
repnz
mov
jo
rcl
cmp
inc
adc
cli
mov
aad
fbld
adc
add
cwtl
mov
sbb
xor
mov
adc
and
ficoms
push
cmp
xchg
imul
cltd
xor
ss
lds
push
and
lds
mov
mov
repz
in
push
daa
or
xchg
movsl
ljmp
mov
js
mov
mov
and
adc
cmp
pop
or
fs
fists
add
cmp
clc
mov
lahf
pop
sbb
addb
jb
test
cmova
sub
jae
loope
scas
test
test
mov
inc
mov
inc
xor
pop
jmp
lret
push
test
and
pop
scas
push
and
loop
push
xor
dec
adc
mov
sahf
gs
sbb
or
jo
push
jmp
cmp
test
mov
icebp
hlt
add
popa
xchg
js
ljmp
or
jmp
test
cmp
stc
enter
cmp
xchg
test
cmp
inc
test
jbe
pop
mov
test
ja
gs
js
cmpsb
add
test
pop
fildl
loope
pop
in
xor
pop
je
pop
out
mov
data16
jne
sarl
aas
push
dec
mov
andl
inc
idiv
cmp
ds
je
shrb
outsb
or
test
inc
push
inc
inc
xor
insb
leave
inc
call
ret
jl
push
rorl
mov
pop
int
sbb
xchg
dec
dec
jo
test
jmp
push
or
pop
lods
scas
jle
test
dec
enter
jne
and
fisubs
repnz
push
adc
add
mov
add
ret
decl
mov
fwait
into
mov
adc
push
std
and
out
loopne
popa
push
cmc
adc
out
pop
add
mov
push
adc
ret
je
data16
cltd
push
jmp
sbb
pop
and
iret
adc
int
insl
push
cmp
cwtl
jl
inc
stos
jne
sti
jne
push
test
sub
ja
and
cli
jb
fwait
xchg
rorb
mov
jb
mov
js
jnp
into
mov
lock
jo
mov
repz
jae
dec
popf
test
fwait
xor
addr16
sti
mov
aam
test
sub
iret
setae
ljmp
sbb
fadd
push
cmp
mov
fdivrs
faddl
sub
out
sub
sbb
arpl
sub
dec
scas
stos
push
sub
insb
pop
push
mov
popf
mov
mov
inc
stc
mov
loopne
cmc
or
adc
adc
cmp
in
dec
and
nop
js
push
imul
jno
or
jnp
mov
mov
cmpsb
jno
add
repz
lahf
insl
into
call
xor
and
lds
push
shrl
sub
push
mov
pop
jne
inc
jbe
push
jns
insl
xchg
inc
mov
jne
and
loop
fistl
mov
clc
or
fnsave
fnsave
jp
fwait
bound
lret
push
aaa
stc
pop
adc
inc
dec
jae
push
push
add
cmp
scas
and
adc
pop
jno
mov
lahf
dec
test
pop
xor
popf
add
adc
outsb
movsb
cltd
sub
xor
shlb
aas
mov
outsl
test
repz
addr16
mov
sub
pop
sbb
push
shl
pop
shlb
ret
xor
arpl
roll
pusha
arpl
mov
aaa
pop
push
push
into
addr16
and
inc
hlt
inc
jmp
push
jle
cmp
xchg
dec
jnp
xchg
mov
incb
xchg
and
fs
ljmp
cltd
pop
cwtl
lahf
mov
xchg
stos
leave
jns
mov
sub
mov
bound
xchg
inc
adc
cmpsl
jnp
jnp
fs
andl
dec
sti
sub
mov
icebp
push
lcall
mov
int3
out
mov
and
inc
loopne
add
xor
pop
and
pop
dec
fmul
sahf
pop
xor
cmp
btc
push
or
mov
hlt
mov
push
dec
pop
enter
mov
add
push
test
sub
scas
push
inc
mov
mov
pop
std
aas
inc
popf
sbb
sahf
mov
cmpsl
mov
cmp
packsswb
test
int
xchg
iret
stc
xchg
mov
cmp
negb
or
mov
decb
lds
lahf
or
fwait
lods
and
popf
scas
jg
fldcw
xlat
out
push
cmp
nop
dec
push
dec
sub
test
std
or
insl
fwait
pop
mov
mov
mov
mov
mov
fists
sub
dec
add
mov
pop
aas
dec
sub
or
and
es
jne
pop
stc
sbb
popf
sbb
mov
cmp
addr16
pushf
repz
mov
xchg
mov
pop
push
subb
out
inc
pop
push
sbb
pop
jbe
push
dec
fdiv
mov
inc
pop
sub
daa
xchg
and
insb
rcrb
les
adc
out
fisttps
mov
push
xchg
call
dec
add
movsl
jbe
aad
call
insb
movsl
cmp
pop
lea
dec
mov
hlt
orb
gs
pop
arpl
fadds
mov
ret
inc
push
rorb
jecxz
lahf
fistpl
dec
pusha
test
repz
daa
cltd
movsb
push
push
push
stc
mov
add
pop
xchg
imul
bound
out
fcompl
dec
mov
js
pop
xchg
jg
xor
dec
sub
daa
cmp
fistpll
add
inc
jbe
mov
or
mov
arpl
cmp
pop
cli
mov
div
out
or
repz
sbb
mov
shr
or
divl
adc
dec
ftst
sbb
fistl
or
movsb
lods
xchg
jae
push
sahf
clc
lcall
jno
in
push
or
enter
cmc
push
add
loop
clc
in
dec
and
mov
push
sub
inc
in
bound
sbb
fs
jo
inc
fwait
sbb
mov
inc
adc
or
in
mov
pop
push
mov
dec
hlt
mov
gs
push
pop
mov
adc
jmp
sub
and
out
and
stos
lock
rorb
xchg
cmp
add
adc
loope
jno
jle
inc
shrl
lock
fsubs
ljmp
addr16
adc
mov
leave
in
repz
xchg
clc
inc
sbb
xchg
cmp
adc
ret
into
push
xchg
ret
ffree
int
xchg
jne
lcall
sub
iret
adc
add
push
loopne
xchg
cmp
mov
pop
add
les
lods
leave
pusha
sbb
cmp
pop
pop
inc
in
jl
mov
in
ja
loope
dec
inc
pop
mov
leave
fdivl
outsb
mov
fs
mov
test
sub
insl
nop
push
mov
fbstp
mov
mov
inc
movsl
out
xchg
aad
cs
cmp
push
mov
push
push
lods
daa
inc
in
and
out
push
movsl
cltd
ss
cmp
push
jns
call
add
mov
repz
xor
or
push
xor
jae
cli
jns
dec
inc
ret
adcl
stc
inc
pop
divl
iret
pusha
sub
push
cmp
inc
dec
out
jp
int3
loope
fnstenv
jecxz
mov
aas
adc
inc
icebp
xchg
dec
fsubrs
mov
imul
dec
inc
sub
inc
lahf
cli
cmp
stos
push
lret
fnsave
or
jecxz
push
fdivl
adcl
xchg
in
xor
or
mov
mov
push
insb
or
fs
jle
dec
sbb
pushf
push
cmp
cltd
and
in
xlat
jno
adc
push
insb
push
xor
aas
dec
lods
pop
outsb
enter
call
xchg
stos
mov
lret
xchg
dec
inc
lcall
fdiv
mov
aam
adc
lahf
negl
xchg
data16
popa
insl
cmc
outsl
push
mov
adcl
adc
mov
idiv
pop
mov
sbb
mov
sbb
rcr
out
adc
daa
nop
mov
mov
mov
insb
mov
clc
sbb
inc
inc
divl
jp
int3
loope
sbbb
inc
mov
aas
aas
pop
outsl
rorl
pop
xlat
or
mov
pop
push
xchg
dec
jae
shrl
cli
inc
and
adc
jge
inc
pop
inc
pop
xchg
fwait
or
sbb
inc
sbb
xor
xor
or
addr16
ljmp
fwait
push
test
mov
mov
repz
fidivrl
push
add
or
data16
mov
mov
fisubl
push
jbe
scas
xorb
pop
fnsave
push
sub
ja
out
mov
jo
fwait
outsl
push
mov
inc
pop
xchg
mov
jl
rcll
outsb
jno
sbb
mov
enter
lret
popf
adc
aad
mov
aaa
fsubs
loopne
mov
rorb
push
adc
adc
sbb
shll
xor
mov
push
mov
inc
xor
dec
inc
cmc
mov
push
xchg
jnp
lods
push
push
sbb
addr16
push
imul
lods
mov
xchg
push
or
fisttpl
cwtl
jecxz
add
add
add
out
nop
aas
mov
imul
xchg
ss
lret
leave
mov
bound
js
cld
sub
fs
in
sub
push
mov
je
in
inc
push
push
test
mov
int3
gs
icebp
xor
add
adc
mov
push
jo
imul
inc
and
dec
push
push
sti
pushl
pusha
in
jle
mov
pusha
lock
sbb
int3
xchg
and
or
mov
or
lock
xor
stc
cmp
dec
ret
std
sub
outsb
pop
cwtl
and
mov
ret
fdivrs
jnp
imul
inc
fisubrs
dec
fwait
pop
dec
inc
fsubrl
dec
add
mov
sub
mov
mov
add
pop
into
repnz
movsb
push
and
jl
jb
pop
test
dec
and
or
sub
in
inc
mov
cmp
fxtract
iret
bound
jbe
xor
out
sub
in
jbe
fwait
test
push
arpl
fmuls
xor
push
or
arpl
ja
and
scas
mov
fld1
gs
lock
mov
das
mov
in
and
decl
addl
jmp
jge
int
or
adc
push
fists
cmove
into
xchg
cmp
push
pop
jmp
lret
dec
iret
jmp
jne
cltd
mov
jge
mov
aam
mov
hlt
push
dec
jl
mov
pop
xchg
xor
mov
jecxz
jnp
pop
pushf
js
and
outsl
pop
repz
mov
cmp
xchg
mov
ja
jne
lock
pop
mov
inc
in
adc
roll
jmp
jbe
in
push
mov
cmp
int
int
adc
xchg
cmp
push
jmp
push
dec
movsb
ss
cmp
aad
imul
pop
mov
push
fimuls
mov
xlat
jb
cmp
push
test
pop
movsb
insb
jo
sti
xlat
loopne
mov
je
mov
leave
fdivl
jmp
cltd
pop
sbb
ret
xchg
mov
add
jo
or
or
into
loop
shll
mov
and
jnp
mov
nop/reserved
enter
insb
aaa
lret
push
sbb
cwtl
orl
inc
pushf
sbb
mov
cmp
sbb
lcall
insl
outsl
mov
pop
jle
movsb
aas
xor
push
add
cmp
xchg
lret
rorb
and
fs
sub
dec
sbbb
dec
fwait
lods
ja
int3
in
negb
inc
and
pusha
scas
xlat
fucomi
in
aad
cltd
inc
mov
icebp
sbb
insl
ret
add
addb
lcall
popa
mov
add
movsl
mov
popa
jbe
leave
jno
std
and
movsl
mov
call
xor
sar
pop
aas
and
pop
clc
mov
leave
pushl
push
cwtl
std
dec
out
in
pop
addr16
mov
mov
push
mov
push
cmp
xchg
ret
pop
ja
clc
jp
fsubs
lret
and
dec
and
dec
adc
mov
pop
aad
add
fstpt
and
add
fwait
mov
mov
js
sub
aaa
mov
test
cmp
cltd
push
bswap
mov
sbb
in
jns
and
movsl
ret
test
dec
and
stc
pop
dec
je
sub
push
xlat
outsl
loop
mov
jmp
inc
bound
jmp
pop
mulb
imul
push
xor
push
push
sbb
ficomps
adc
lret
jbe
lods
mov
out
sbb
cmp
jecxz
ljmp
mov
popa
sub
or
cli
fistpl
sti
shr
les
sub
jmp
pop
aaa
pop
int
xor
es
fdivs
dec
pop
push
and
sub
scas
xchg
and
dec
lahf
adc
aad
mov
int3
adc
inc
adc
pushf
jl
out
idivl
inc
aaa
mov
dec
sahf
xchg
push
pop
adc
test
je
mov
sbb
lret
and
xchg
rclb
sub
push
jo
fdivs
adc
outsb
mov
arpl
dec
mov
jl
jne
fs
cmp
pop
sbb
xor
cmp
cltd
and
in
stc
in
mov
push
insb
push
hlt
dec
in
imulb
rclb
mov
imul
outsl
imul
cli
dec
mov
test
aas
and
adcl
sahf
sbb
mov
dec
mov
decl
mov
out
je
inc
mov
fstl
ja
mov
push
sti
jo
dec
mov
movb
decb
daa
mov
adc
scas
add
xchg
or
mov
sahf
xchg
add
leave
mov
mov
jno
xchg
sub
mov
xchg
mov
and
bnd
mov
insb
inc
adc
enter
xor
or
clc
xor
mov
xor
in
and
pop
movsl
mov
sub
xlat
lahf
dec
pop
movsl
push
pop
lods
pop
mov
sub
lret
shll
adc
and
icebp
and
ret
pop
xor
ffree
lahf
out
push
cmp
rorl
stos
cmp
mov
push
in
mov
out
rol
insl
pop
or
pop
stc
jmp
xlat
fwait
sbb
popf
iret
addr16
mov
add
sbb
out
sbb
mov
push
mov
or
and
jno
repz
addr16
or
mov
movsb
xchg
insl
mov
jge
rolb
lret
loope
and
movsl
xchg
mov
mov
mov
and
or
lret
mov
or
xlat
push
push
dec
dec
stos
push
test
lret
loop
push
icebp
fstpt
xchg
cli
cmp
ss
bound
mov
adc
dec
popa
sahf
dec
mov
cmc
aam
or
mov
and
mov
pop
mov
dec
or
sub
inc
sub
pusha
mov
inc
bound
shlb
add
jns
mov
xchg
test
call
add
imul
inc
mov
or
adc
mov
jp
test
jge
cmp
incb
cmpsl
mov
jae
popf
jle
jecxz
shll
lea
pusha
push
mov
loope
cmp
sub
fsubs
sti
jno
repz
insb
sub
repz
or
subl
ds
mov
in
push
in
jb
lea
mov
jmp
stos
jp
cmpsl
and
mov
push
add
mov
jmp
inc
hlt
dec
stos
aad
aad
popf
xchg
movsb
ss
cmc
or
mov
lcall
push
add
add
dec
stos
das
jae
imul
sbb
popf
and
push
push
aam
mov
cltd
dec
ljmp
into
mov
adc
orl
pop
xchg
xchg
movsl
and
lods
lret
xchg
mov
lods
mov
mov
or
pop
push
fimuls
push
push
pop
lds
cmp
popf
xchg
mov
ret
nop
xchg
lahf
push
cwtl
hlt
inc
mov
fdivs
sti
adc
inc
pop
inc
xor
or
push
push
repz
jo
add
mov
adc
fists
lahf
loop
push
jge
lock
push
or
in
in
cwtl
mov
test
adc
je
mov
imul
pop
or
lret
xchg
fwait
mov
hlt
hlt
mov
and
or
movsb
mov
xor
adc
aas
movl
mov
pop
inc
pop
repnz
mov
sub
mov
and
push
lcall
jb
sub
mov
sbb
push
inc
into
sbb
cltd
xchg
jg
lds
loopne
rcrb
cmp
sub
push
stos
pop
insl
xchg
jnp
mov
xlat
push
sbb
xchg
and
aaa
inc
inc
and
push
cwtl
jne
lock
cmp
xchg
repz
pop
sbbl
fadd
sti
xchg
hlt
repnz
pop
cmpsl
xlat
jmp
dec
sbb
lret
sbb
jno
leave
das
add
fistl
movsb
mov
adc
lods
jno
or
shl
or
in
add
repnz
movsb
es
shrb
fsubr
jns
in
cli
add
gs
inc
and
ret
push
adc
mov
ret
ret
aaa
hlt
sub
cmp
jecxz
and
mov
jae
pop
aam
aaa
sub
pushf
sbb
push
sbb
into
adc
push
inc
shrb
aam
pop
imul
stc
mov
hlt
dec
nop/reserved
mov
sahf
stos
and
sbb
xchg
mov
push
out
jmp
ret
xor
dec
das
xchg
shrl
add
inc
je
repnz
mov
mov
addl
jmp
jge
int
or
adc
push
fists
cmove
into
xchg
cmp
push
pop
jmp
mov
ret
sub
adc
xchg
lahf
fs
or
iret
push
mov
mov
loopne
fiaddl
jnp
jae
int3
cmp
ret
inc
in
cmp
lahf
mov
out
mov
sub
std
rcrl
scas
pushf
mov
mov
jbe
popa
xrelease
out
aam
or
nop
xor
stc
jg
in
pop
pop
mov
jecxz
bound
add
addl
imul
sub
mov
push
fcoms
xchg
and
aam
adc
and
sub
dec
shrb
inc
pop
sbb
xchg
lret
inc
mov
outsl
cld
xor
sbb
mov
add
xchg
xor
mov
mov
stc
popa
jnp
into
mov
movsl
jge
testl
push
ret
sub
mov
mov
pop
pop
or
and
xchg
lret
lds
jl
faddl
dec
mov
fstpt
sbb
fwait
sbb
lcall
insl
outsl
mov
pop
jle
movsb
aas
xor
call
pop
cs
shrb
movsl
push
push
mull
sbb
fistpl
adc
add
lcall
and
adc
jns
and
mov
pop
dec
fsincos
and
mov
mov
or
adc
stos
jne
add
xchg
mov
mov
sub
sub
fsts
inc
inc
ret
push
xchg
adc
les
push
mov
bound
sahf
mov
clc
rorl
clc
mov
mov
inc
xchg
pusha
repnz
fsub
pushl
out
rorb
repnz
fcoml
jge
nop
je
loopne
std
xor
xor
addb
ret
jno
dec
mov
and
clc
dec
push
jns
sub
mov
sbbl
dec
push
inc
inc
shr
add
jmp
int
and
jne
inc
enter
lret
jnp
adcl
dec
fiaddl
adc
sbb
push
cmp
cmpsl
mov
ffreep
gs
repz
cwtl
add
lahf
xchg
aam
cmp
inc
fcomps
adc
and
jp
xchg
stc
jne
fisubrl
lahf
lods
test
inc
push
stos
and
mov
xor
add
dec
stos
mov
pop
xchg
xlat
lcall
mov
mov
add
jmp
loopne
adc
mov
mov
pop
das
sbb
out
mov
push
mov
pop
xchg
ret
sub
negl
inc
adc
jne
out
or
dec
pop
repz
stos
movsb
sti
lahf
in
jp
lret
pop
int3
pop
sub
inc
push
add
daa
out
insl
jns
inc
lret
pop
fldt
rorl
mov
mov
lahf
jmp
aas
inc
inc
mov
iret
jmp
fucomp
jb
pop
aas
out
ret
add
mov
add
sbb
cmpsl
jne
jno
sbb
loope
lods
sbb
pop
xorb
pusha
dec
jbe
cmpsl
call
pop
sti
and
cmp
out
sub
inc
test
mov
push
sbb
call
xor
and
lds
push
shrl
sub
push
mov
pop
jne
inc
jbe
push
jns
insl
xchg
inc
mov
jne
and
loop
fistl
js
dec
mov
andl
sahf
and
pop
ds
xchg
or
dec
clc
inc
call
cmpsb
mov
sbb
scas
lock
insl
adc
lds
dec
addl
jecxz
rorb
mov
jb
test
jo
test
hlt
jl
outsl
pusha
jo
cmp
sbb
daa
push
stc
dec
mov
mov
mov
leave
aad
pop
popf
xchg
mov
jg
shll
cmp
fsubrs
push
mov
lock
test
jmp
cli
fidivrl
jae
hlt
jmp
push
xchg
pop
dec
rcrb
pop
sti
enter
push
xlat
outsb
or
fstpt
cld
cmc
and
add
test
xchg
push
ss
ja
test
mov
pop
xchg
add
test
xchg
lea
mov
jb
fdivrl
dec
movsl
fldcw
clc
addb
fucomi
lods
lea
leave
sub
ljmp
call
repnz
arpl
lock
push
dec
movl
mov
repz
dec
adc
cwtl
mov
xchg
fcom
cmp
xor
sbb
cld
std
imul
jbe
loop
fnsave
shlb
dec
add
and
shll
pop
mov
mov
sbb
cmp
lahf
popf
les
mov
mov
cmp
ret
test
arpl
mov
dec
cmc
cmpsl
into
enter
fwait
icebp
or
in
inc
bnd
inc
and
xchg
mov
shl
test
mov
repnz
loop
xchg
pop
mov
dec
xchg
bound
aam
loop
mov
and
jne
jp
mov
insl
out
jmp
and
pop
jo
pop
cmpsb
sti
mov
enter
clc
and
or
or
push
jle
mov
out
jge
xchg
pop
cld
push
mov
and
xchg
jle
fildll
cmp
ret
push
rolb
test
sub
mov
fidivl
xchg
push
loope
cmpl
add
sub
test
mov
add
cmpl
repnz
cmp
sub
lods
jg
les
and
movsl
dec
lret
jge
and
add
adc
fildl
imul
ret
les
iret
dec
aas
cmc
lds
sbb
pop
addl
jne
ds
dec
rcrb
outsl
inc
fwait
mov
cmpsl
and
pop
hlt
sbbl
mov
xchg
pop
xchg
sub
dec
cmc
push
les
push
pop
jmp
jb
ret
xor
insl
cmpps
jb
fwait
in
mov
xor
and
sbb
fsub
sbb
jge
dec
dec
push
shr
shlb
xor
repnz
je
inc
fldenv
mov
std
data16
iret
subb
inc
rcr
sbb
scas
inc
sti
mov
cmpsl
adc
vsqrtss
jo
or
xor
or
shrd
sbb
test
and
test
nop
cmp
cmpsb
sbb
movsl
push
dec
sbb
lock
movsb
sbb
adc
push
dec
pushf
xchg
rcrb
sbb
xchg
lea
arpl
push
aaa
cmpsb
cld
mov
ficoml
lods
sbb
jo
cs
adc
mov
mov
inc
icebp
inc
pop
ljmp
lret
aad
push
adc
push
mov
repnz
mov
fnstenv
xchg
aaa
dec
fdivl
pop
xchg
adc
and
dec
es
mov
sbb
mov
jmp
fsubrp
inc
call
pop
mov
cmp
lods
inc
mov
dec
stc
aaa
sarl
and
sub
push
sub
das
fistpll
cmp
loop
jne
or
sbb
ja
test
adc
and
sbb
addr16
push
imul
lods
mov
xchg
push
or
fisttpl
cwtl
jecxz
add
add
add
out
nop
ds
dec
outsb
movsl
xchg
and
scas
mov
test
add
add
jo
lahf
scas
mov
mov
jmp
les
xchg
jmp
out
mov
pop
xchg
jl
stc
mov
ret
inc
push
scas
xorb
pop
pop
adc
push
pop
push
aad
bound
lahf
pop
pop
xchg
incb
xchg
imul
rcrb
orl
cwtl
test
insb
adc
daa
xchg
int
and
fucomp
or
xchg
adc
inc
jle
inc
pop
divl
iret
pusha
xor
cmp
mov
xor
mov
push
cld
cltd
aas
sbb
je
pmulhw
xor
push
push
popa
mov
ret
add
shl
nop
ljmp
pusha
pushf
stos
pop
and
out
stos
cmp
sbb
arpl
jo
in
ja
mov
arpl
cmpsl
adcb
xor
pushl
mov
pop
iret
mov
cmp
scas
jmp
dec
mov
dec
jns
rep
xor
arpl
and
inc
mov
fst
dec
int3
inc
scas
push
pop
jbe
dec
cmpsl
push
ja
inc
gs
pop
inc
call
inc
mov
popa
imul
sub
sbb
xor
in
lods
push
jle
push
lods
adcl
xchg
mov
daa
xor
std
leave
dec
rorl
or
inc
push
push
fbld
int3
pop
repz
xchg
sarl
pusha
pop
or
mov
fistpll
xor
mov
insb
loopne,pn
push
mov
xchg
mov
test
imul
mov
sbb
jns
aaa
rcll
and
cltd
add
xchg
std
iret
aas
xor
movsl
sbb
and
and
xor
dec
mov
xlat
pusha
out
cmpl
fdivrs
sti
add
movl
enter
je
shlb
shll
bound
ror
pop
jns
gs
push
jne
jne
or
dec
jno
test
cmpsl
ficompl
and
in
cmp
mov
jne
clc
int3
sbb
aas
negl
add
adc
es
cld
dec
rclb
sarb
sti
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
adc
test
test
cmp
inc
lds
repnz
sbbb
dec
mov
or
inc
data16
mov
xor
lret
ss
push
inc
ret
push
adc
mov
ret
ret
aaa
hlt
sub
cmp
jecxz
and
aad
mov
jmp
outsb
movsl
add
xor
ret
mov
xor
adc
shlb
sub
xchg
xor
retw
out
leave
sbb
cwtl
icebp
push
xchg
es
inc
pop
sarb
into
gs
inc
out
mov
rorb
inc
xor
dec
cmpsl
ret
out
or
fs
push
cltd
enter
push
mov
or
sub
pushl
movsl
int3
subb
orl
scas
xor
lcall
dec
es
pop
add
bswap
and
inc
jge
inc
pop
push
sub
inc
push
adc
aaa
sbb
leave
xchg
jl
jl
push
xchg
dec
push
and
cld
inc
cmc
push
dec
xor
sub
push
mov
mov
dec
adc
fldt
mov
iret
push
enter
pop
pop
mov
loopne
scas
inc
stos
flds
inc
cwtl
cmp
adc
adc
fisttps
ljmp
and
pop
lahf
cmp
or
inc
mov
ficoml
pop
sub
mov
push
push
icebp
push
push
or
push
xchg
jbe
pop
jne
lods
xlat
insb
loope
dec
inc
mov
xchg
inc
cmpsl
ret
punpcklwd
pop
cld
fsubrp
pop
in
shll
jg
adc
or
pop
rcll
adc
mov
inc
out
or
sahf
push
sub
je
or
imul
lods
insl
jecxz
inc
mov
fstl
ss
insb
aaa
sbb
loopne
mov
mov
mov
jecxz
mov
add
stos
mov
mov
lods
pop
test
xor
push
int3
pop
mov
mov
mov
pop
xchg
sub
jg
bound
pop
cmc
cld
jg
adc
xor
dec
dec
pushf
dec
xor
gs
lods
push
sbb
scas
pop
push
test
xchg
fbstp
sti
scas
leave
add
mov
inc
movsl
out
xchg
aad
push
push
xchg
repz
inc
mov
jmp
lods
nop
adc
outsb
bound
lahf
pop
pop
xchg
mov
xlat
fwait
mov
push
in
orl
mov
cmpl
out
jp
mov
or
std
leave
push
repz
repz
adc
divl
iret
in
xchg
sub
mov
add
push
mov
enter
xor
gs
fdivs
lea
mov
xchg
std
push
lods
push
dec
sbb
inc
push
daa
out
lret
fucomp
pusha
cmp
mov
pop
mov
pop
sub
stos
jae
rcl
dec
dec
or
mov
pop
int3
addr16
mov
dec
adc
mov
dec
sar
push
mov
aas
stc
cwtl
loop
repnz
push
pop
fs
aam
iret
mov
mov
pop
xchg
mov
pop
xchg
dec
cmpsl
sub
sbb
gs
fistpl
pop
cmp
xchg
jbe
mov
pusha
jo
cmp
clc
fs
jo
xor
xchg
ror
dec
mov
rclb
lahf
sahf
lock
xchg
ljmp
adc
sbb
fcomps
enter
or
lsl
pop
lahf
xor
movd
mov
sub
clc
inc
dec
push
or
xor
dec
andb
test
sub
pop
ljmp
adc
out
jnp
mov
sbb
rol
jno
lock
lea
sbb
push
ret
fs
and
dec
push
clc
subl
add
enter
dec
fdivl
xchg
popf
adc
dec
or
test
or
cmp
or
and
dec
das
test
cmp
pop
movsl
pop
jae
inc
gs
jmp
inc
test
aas
add
loopne
mov
pop
jg
jb
and
push
andl
rorb
mov
jp
xor
xchg
xchg
push
cltd
and
inc
int
inc
jp
add
rorl
and
cld
add
push
or
jecxz
push
pop
test
cwtl
orl
cmp
sbbb
popa
lods
mov
pop
out
lods
popf
dec
add
sbb
into
mov
stos
in
lods
seto
lods
cltd
fstpt
or
lds
stos
cld
sbb
xor
push
adc
pop
inc
xor
decl
mov
jne
and
cld
add
aam
popf
adc
sahf
xchg
pop
dec
mov
xchg
sti
out
inc
sub
in
rcrb
or
inc
mov
and
or
jnp
xor
cmp
xchg
inc
call
pop
pop
call
fcomi
cmp
ficompl
test
inc
mov
add
les
jb
cltd
and
inc
int
inc
jp
add
rorl
and
cld
add
push
or
jecxz
push
pop
test
cwtl
orl
mov
push
xor
and
sub
sub
fstps
test
dec
mov
jae
stc
arpl
pop
stos
jne
jns
int
inc
movb
lods
lds
jo
es
push
arpl
and
xor
es
jecxz
cmp
test
or
jnp
jg
mov
call
add
in
cmp
orl
pop
xchg
xchg
movsl
and
lods
lret
xchg
mov
lods
mov
mov
or
aad
jg
sub
lods
cltd
scas
mov
repz
repz
add
cltd
mov
push
jmp
dec
lcall
stc
ret
out
test
les
repnz
jne
lock
sub
add
enter
inc
cmc
adc
jp
dec
mov
cltd
cmp
and
mov
inc
jg
or
mov
int3
adc
fcmovnbe
xchg
sbb
and
in
lds
hlt
adc
lret
mov
or
inc
adc
fiaddl
adc
leave
roll
iret
mov
and
lods
inc
sbb
sbb
xchg
loope
test
adc
lahf
scas
std
stc
in
push
dec
cld
arpl
roll
mov
dec
push
popa
fsts
pop
popl
nop
or
mov
stos
ja
bound
or
mov
inc
and
inc
pop
roll
mov
cmpb
sarb
orl
lret
inc
in
out
mov
data16
imul
mov
shrl
cmpsb
movsl
jnp
int
imul
fs
sbb
pop
dec
lea
jae
push
repnz
imul
aas
gs
pop
jge
fs
push
sub
rol
mov
movsb
fwait
dec
lea
inc
fists
out
fmulp
xchg
ficoml
jmp
shll
repnz
pop
sarl
enter
or
popa
ds
inc
push
jo
mov
pop
inc
push
push
iret
out
in
jnp
daa
jnp,pn
movsl
add
jno
aad
stos
mov
stc
out
cmp
mov
xchg
cwtl
test
in
call
or
push
mov
cmc
xchg
mov
cmp
mov
sahf
loope
sub
lret
aam
mov
push
or
repz
cmpsb
sti
mov
enter
clc
xor
cltd
mov
push
jmp
dec
lcall
stc
ret
out
test
les
repnz
jne
lock
sub
add
enter
inc
cmc
adc
enter
mov
lret
jns
push
hlt
lds
fidivs
jae
enter
leave
inc
sbb
scas
mov
scas
push
inc
ja
imul
les
mov
lret
fs
lods
mov
cmc
mov
out
aaa
hlt
imul
pop
fnstsw
imul
sub
movsl
iret
dec
push
inc
rclb
push
repnz
inc
repz
and
dec
mov
adcb
sbb
aad
inc
lds
xor
stos
test
xchg
push
test
sbb
mov
fadd
inc
mov
cmc
jnp
testb
stos
mov
and
lock
in
jge
pop
and
cmpsl
sbb
mov
mov
daa
cmp
popa
sets
cmpsl
ja
mov
dec
push
call
clc
mov
loopne
pop
pop
dec
notb
clc
sti
fists
add
push
mov
test
sti
adc
mov
xchg
into
imul
cwtl
dec
mov
mov
shr
daa
out
dec
sbb
scas
lret
fucomp
je
pop
xlat
mov
popf
lret
roll
pop
sub
or
ficoml
fsubrl
sbb
test
mov
fcoml
mov
lods
adc
test
int3
lret
flds
push
dec
xchg
leave
loop
push
push
push
nop
xchg
dec
mov
pop
addb
add
stos
xchg
lcall
cmp
fsubs
stos
mov
rcrl
inc
icebp
cmp
lock
hlt
dec
lock
add
inc
and
add
add
out
out
mov
cwtl
dec
xor
ret
shrl
mov
sub
or
lahf
iret
ffreep
imul
lahf
lret
test
mov
inc
adc
lret
mov
push
or
fisubrs
pop
fwait
movsl
inc
rolb
or
sti
xchg
lret
fldenv
mov
push
lods
jp
xor
mov
sar
cmp
xchg
mov
pop
and
mov
xchg
roll
sub
mov
movsl
mov
fwait
dec
sub
fcoml
cmp
lods
pop
or
ret
hlt
jbe
loopne
cmp
fwait
leave
loop
push
xchg
test
pop
mulb
push
inc
ror
mov
or
vshufps
dec
mov
loope
mov
jge
imul
sbb
cmpsl
ret
mov
outsl
jae
xchg
adc
js
ret
insl
or
xchg
cmp
inc
xor
mov
xchg
mov
xor
into
jbe
ret
call
sbb
ja,pt
call
mov
xor
dec
aad
xor
test
mov
dec
aaa
or
jl
push
xchg
loopne,pn
cmc
mov
rcl
dec
test
push
aaa
mov
and
fucomp
jae
xchg
fucom
push
ret
andl
jne
jns
decl
mov
xchg
sbb
ret
push
xchg
ljmp
insb
ss
jnp
xchg
add
icebp
enter
test
mov
mov
out
push
pop
loope
add
jbe
or
xchg
adc
jp
sbb
cmp
xchg
in
sbb
imul
pop
cmpsb
sti
mov
ret
andl
and
clc
add
mov
shlb
ret
adc
pop
mov
add
sub
and
mov
mov
sub
sbb
jns
jp
sbb
loopne
aad
add
cmp
loop
std
pop
dec
sbb
in
cmc
idivb
add
add
aad
ja
inc
popa
pop
int
inc
xor
in
mov
xor
cmc
mov
pop
adc
inc
sbb
inc
pop
cmp
cmpsl
ret
inc
test
cmp
pop
cmp
lods
pop
mov
mov
inc
in
aad
ret
gs
xchg
sbb
sti
add
or
push
rclb
inc
mov
mov
dec
adc
xchg
fnstenv
test
movsb
adc
movsb
inc
inc
mov
rclb
stos
in
and
xlat
adc
hlt
xor
nop
xchg
mov
into
das
dec
inc
or
jne
jbe
push
pop
inc
xor
or
mov
xor
mov
mov
xchg
sub
dec
mov
jns
ds
inc
mov
add
adc
loop
leave
cwtl
aad
adc
dec
enter
mov
add
sub
adc
stos
jb
imul
dec
add
lods
jg
inc
flds
imulb
fistps
jl
sbb
or
inc
sbb
push
add
mov
cli
mov
mov
lods
mov
add
pop
jl
pusha
test
ficoms
jg
fists
cld
out
jl
add
jl
lcall
xor
ficoml
push
xchg
fistl
push
into
stos
iret
add
push
lds
fcomp
xchg
test
aam
pop
xchg
mov
ret
cmp
aas
inc
cmp
andl
or
pop
dec
aam
jns
sbb
jmp
push
test
call
mov
bound
xchg
mov
mov
sbb
jecxz
inc
mov
test
orl
cmp
sbbb
popa
mov
stc
sahf
jge
pop
call
push
insb
aad
or
pop
xchg
sub
out
jo
or
out
add
scas
pusha
xor
std
ret
ret
sbbl
add
and
fsubrl
clc
outsl
call
mov
fisttpl
cltd
xor
jo
shrl
inc
dec
push
addr16
dec
xor
jp
xchg
lock
movsl
mov
or
pop
xor
xor
sub
mov
ret
or
mov
in
or
mov
cmp
mov
push
mov
lea
or
add
sbb
adc
ret
clc
mov
pop
jns
xchg
fidivrs
mov
jge
ret
sbb
out
jmp
inc
mov
dec
inc
cmpsl
es
dec
sbb
nop
mov
lret
lcall
adc
iret
jns
and
lret
lcall
xchg
mov
dec
aaa
adc
xor
mov
add
push
push
cwtl
or
inc
repz
dec
lods
jle
jmp
fstl
jbe
clc
xchg
roll
jp
fcom
je
sbb
or
mov
pop
in
push
adc
xlat
insl
pop
js
stos
repz
add
xor
mulb
xchg
ja
inc
daa
pop
cmpsl
or
inc
and
mov
out
mov
jb
sahf
clc
xlat
and
cwtl
jbe
xchg
cwtl
jae
cmp
jl
pop
in
jg
sahf
pushl
sbb
add
jecxz
cs
orl
shrl
pop
sbbb
stos
inc
jecxz
lods
jns
test
mov
dec
mov
lods
mov
or
outsb
adc
in
cmpsb
ror
push
inc
std
cmpsb
mov
dec
or
scas
inc
in
in
es
push
cltd
mov
pop
and
sarl
fs
dec
pushf
pop
mov
inc
pop
mov
mov
add
fisubl
xor
or
enter
test
dec
xchg
xchg
sbb
jge
xchg
mov
lods
sbb
jne
pop
push
xchg
lret
movsl
sbb
fst
pop
pop
cmpsb
and
jo
or
jb
sti
nop
pop
sti
cmc
jnp
iret
js
or
repz
or
rcrl
repnz
test
stc
sbb
movsb
sbb
fldenv
idivl
cltd
call
cmp
gs
fstl
inc
loope
or
sti
mov
lock
push
adc
add
lret
dec
mov
or
xchg
push
hlt
cmp
sarb
pop
jge
test
lcall
repnz
fldenv
jmp
or
push
negl
pop
dec
aaa
or
test
loope
dec
inc
pop
mov
repnz
mov
xchg
fsubrl
lret
adc
shrb
enter
clc
shrl
xchg
cmp
mov
test
idivl
sbb
xor
enter
lds
pop
sub
and
fstps
je
cmp
inc
mov
mov
and
mov
enter
jns
push
sub
mov
jp
rclb
push
data16
xor
mov
jne
aaa
clc
nop
call
cmp
add
addr16
hlt
and
ds
mov
test
add
mov
sbb
inc
mov
push
push
sub
push
adc
rolb
mov
adc
mov
clc
or
cmp
leave
pop
and
xor
mov
mov
rcrl
gs
mov
jbe
in
ja
pop
loope
cmp
sbb
decl
lret
movsl
mov
outsb
daa
xor
sbb
jle
cmpsl
or
xchg
loope
ja
pop
xor
xor
jnp
pop
int3
aaa
add
leave
loop
add
sub
inc
sbb
sbb
imul
mov
setne
inc
leave
dec
mov
inc
add
push
stos
icebp
mov
dec
inc
and
call
dec
negl
push
mov
jne
subl
dec
or
xchg
sbb
mov
insl
mov
sahf
dec
mov
cmp
adc
lock
aas
pop
xor
aaa
mov
add
orb
push
adc
outsl
addr16
mov
sbb
bound
push
out
inc
std
xlat
cmp
aad
inc
lahf
xchg
aaa
loope
mov
cli
stos
mov
jl
mov
hlt
fwait
icebp
ret
ret
ret
sbb
cmc
mov
add
xor
imul
add
push
pop
leave
ret
outsb
pop
or
jmp
cmp
ror
xor
movsl
insl
mov
ret
in
jae
int
ficompl
int
xor
push
mov
sub
repz
sub
and
out
mov
fwait
lea
mov
andl
addl
adc
hlt
and
je
mov
sbb
and
pop
add
pop
jns
xchg
cli
pop
lret
lret
iret
fucomip
repnz
sti
mov
jecxz
cmpsl
test
inc
enter
lret
adc
jns
lret
jmp
mov
jle
movsb
sub
jnp
dec
mov
mov
lret
pop
dec
sbb
jle
stos
xchg
popf
lret
movsl
mov
add
xor
dec
sbb
nop
cmc
filds
add
xor
clc
or
clts
enter
xor
ret
enter
pop
icebp
xchg
mov
fchs
jo
lock
insl
sbb
enter
sbbb
sbb
scas
sahf
dec
lcall
or
test
xchg
and
cmp
pop
movsl
xor
in
mov
mov
cmp
aas
add
sti
idivb
pop
dec
xchg
add
sub
rcr
mov
jge
data16
test
mov
into
sbb
sub
ficoml
push
popf
cmp
add
pop
cmp
iret
or
dec
inc
leave
sbb
and
dec
mov
push
jmp
inc
mov
loop
cmp
lret
inc
and
dec
pop
inc
cmp
scas
sub
movb
stos
or
pushf
andl
adc
daa
cld
fistpll
and
add
jne
xchg
dec
mov
mov
pushf
dec
lret
shll
sub
or
lods
jae
popa
sub
and
int3
xor
fwait
out
mov
sub
les
test
in
xchg
xor
xchg
ficoml
add
lret
mov
ret
andb
mov
lods
cmp
test
jae
insl
mov
xor
cmp
add
add
clc
jg
or
popl
xor
jg
fucomp
xor
and
mov
mov
add
add
repz
mov
sbb
out
mov
sub
xchg
hlt
mov
daa
sub
xor
js
push
sbb
ret
js
test
nop
les
stc
dec
dec
stos
xchg
scas
ljmp
std
fistpll
arpl
movsl
stos
sbb
testb
mov
dec
sbb
or
or
sbb
fdivrl
push
mov
or
lods
ss
mov
fcoml
jecxz
push
cmp
xchg
jp
popf
ficoms
sti
sub
cmp
xchg
fsts
scas
xchg
stos
lds
popf
stos
adc
sub
fwait
mov
mov
pop
mov
lahf
insl
or
cmp
pop
loop
cmp
mov
inc
fisttpll
idivl
inc
pop
adc
adc
add
popf
sub
sub
xor
push
xor
stc
xor
jle
jmp
pop
lret
sbb
cmp
cmp
jl
in
in
jo
dec
inc
fimuls
fwait
jle
jge
cs
mov
in
jne
pop
mov
das
sub
jne
pop
stos
adcl
test
jmp
into
sbb
movb
in
jmp
enter
je
pop
dec
cli
push
add
testb
mov
xor
aas
jns
dec
pop
pushf
cmp
xchg
lahf
fstl
fsubl
stos
jg
or
call
imul
fdivrs
addb
mov
lcall
in
std
xor
or
sub
add
jecxz
lods
xchg
pushf
in
xchg
out
enter
js
lret
add
pusha
addl
mov
dec
adc
test
xor
ret
arpl
mov
divb
cmp
out
pop
daa
jae
mov
outsl
ret
ficoms
jnp
mov
test
pop
hlt
and
xchg
jne
mov
cmc
mov
mov
cmc
inc
lahf
sbb
dec
sbb
and
int3
testl
mov
mov
shll
sbb
xlat
test
repnz
jno
cmp
cwtl
lret
mov
popf
fsubl
sahf
jns
inc
movsb
call
popf
adc
cmpsl
pop
cwtl
jp
xor
leave
in
jg
push
sub
loop
push
adc
xchg
popf
clts
inc
data16
and
dec
mov
pop
xchg
adc
adc
push
insb
xchg
xchg
test
dec
push
push
xchg
mov
mov
mov
test
fxch
shlb
pop
fsubl
xor
fucomi
idivl
clc
jb
adc
rcll
pop
cmc
out
inc
les
jg
pop
test
ss
cs
pop
mov
inc
and
sti
sbb
rcl
ret
mov
cltd
cltd
add
aaa
hlt
je
xchg
xchg
loope
mov
fisubrs
push
dec
mov
cltd
push
imul
out
sbb
test
dec
sub
inc
sbb
sub
mov
test
jmp
enter
mov
rcrl
pushf
iret
mov
xor
int
sbb
rolb
mov
das
xchg
dec
xchg
adcl
ret
popf
cmp
pop
test
lods
inc
cld
cli
and
test
dec
jmp
test
push
sbb
rcrl
dec
mov
pushf
out
lock
xchg
mov
xchg
mov
or
movsb
enter
rcrb
aaa
push
cltd
enter
popa
or
add
ror
cmp
jmp
xchg
sub
add
sbb
mov
les
push
stos
or
or
sbb
ja
ds
and
adc
xor
sbb
in
hlt
xor
xchg
xchg
iret
push
mov
inc
loopne
popf
xchg
push
mov
pop
dec
mov
push
scas
jb
pop
adc
test
ret
addr16
mov
fucomp
movsb
mov
test
xchg
into
jo
mov
adcl
or
ret
inc
mov
sbb
jb
mov
test
jno
test
cltd
jge
or
mov
push
negl
dec
or
add
inc
cmp
lret
add
inc
cmp
pop
dec
ss
mov
jns
imul
fidivrs
shll
cmp
pop
xchg
ljmp
adc
orl
inc
lahf
mov
aam
popf
and
mov
rcll
mull
aam
jecxz
xor
inc
arpl
mov
cwtl
add
andl
mov
enter
enter
int3
and
xchg
shr
mov
lcall
sub
xor
xor
pop
stos
push
and
lds
lods
jmp
mov
mov
lahf
jp
leave
dec
add
mov
push
push
lds
call
or
dec
in
sbb
xor
shrb
pop
pop
xchg
push
mov
test
push
mov
push
ret
pop
in
bnd
jg
mov
xchg
test
mov
push
sbb
dec
adc
pop
push
sub
imul
inc
sbb
xor
inc
pop
fwait
std
bound
leave
sub
out
pop
sub
andl
test
dec
fsubs
jae,pt
mov
inc
cwtl
inc
fcomps
movsb
push
mov
rcll
jp
arpl
ljmp
add
and
lret
jecxz
inc
enter
add
es
daa
inc
or
or
dec
mov
kmovb
lahf
sbb
mov
in
adc
xchg
inc
lret
fucomp
je
push
test
call
popf
cmp
aad
popa
lahf
rcrl
xor
pop
push
pop
clc
inc
loop
sub
sbb
movsl
pushf
rcrb
sub
aad
iret
xor
movl
out
jl
daa
sub
pop
mov
lret
roll
leave
outsl
mov
sbb
sub
shlb
ret
mov
pop
fisubs
mov
fld1
gs
outsl
sbb
inc
mov
adc
or
add
cmp
mov
rcll
mov
fisubl
inc
jae
push
out
or
lds
mov
mov
pop
pop
dec
ret
or
clc
shll
ffreep
xchg
lock
icebp
enter
addr16
jecxz
cli
hlt
xor
cmpb
mov
cmp
cs
adc
cmpsl
dec
pop
stos
inc
stc
filds
nop
test
scas
mov
test
sbb
sar
cmp
mov
nop
lahf
pop
dec
mov
lods
rolb
cmp
xstore-rng
cmpsl
ret
sbb
cmpsl
mov
lret
xor
cmp
inc
pushf
cmp
sbbl
js
jg
mov
mov
ljmp
test
add
into
mov
push
testl
push
lods
dec
pop
xchg
fisubs
dec
pop
add
cmp
std
fwait
mov
mov
aam
enter
aas
clc
push
test
pop
stc
arpl
jno
xchg
sbb
jge
adc
sub
sarb
aam
test
and
jmp
movsl
cltd
push
testb
mov
enter
rolb
adc
dec
enter
mov
add
gs
adc
lods
test
std
lds
cli
ret
xchg
lods
fisubrs
fs
fistps
xchg
lret
add
cs
jp
cld
xlat
inc
sbb
mov
ret
test
inc
mov
dec
aaa
push
xor
leave
push
les
xchg
mov
mov
mov
jge
inc
movl
fists
sti
and
fsts
cmp
jp
retw
mov
jb
scas
cmc
addl
sbb
dec
mov
jmp
mov
aad
pop
xchg
jnp
enter
pop
cmpsb
fisttpl
jl
pop
ret
sub
or
mov
jne
or
les
rclb
add
sub
mov
frstor
mov
test
ret
ficomps
jnp
lods
aam
ds
and
sub
add
mov
ficompl
into
or
cmp
sub
mov
sub
repnz
jae
lret
shrl
lcall
aad
dec
aaa
sbb
insb
dec
cli
jl
aaa
pop
xor
int3
inc
sbb
mov
fisttpll
mov
lods
loopne
cmpsl
dec
pushf
xchg
movsl
add
fucomi
cmc
mov
sbbl
add
mov
subl
and
and
cmp
xchg
fstpt
jmp
movsb
jp
mov
mov
mov
fld
xchg
and
fistpl
mov
mov
mov
scas
stc
repnz
xor
repz
mov
mov
aam
out
mov
add
xchg
xor
push
adc
repz
sbb
mov
cmp
lea
sbb
push
adc
or
jns
xlat
stos
lds
xor
mov
mov
mov
in
cwtl
rcrb
mov
xchg
sub
cwtl
jp
adc
ret
insl
cmp
mov
pop
push
stc
lds
sbb
fiadds
js
jle
sub
cmp
cmc
cmp
inc
and
inc
mov
lods
cmpl
ja
add
sbb
inc
ret
lret
aad
pop
cmpsb
xor
cmp
xor
jb
sbb
hlt
inc
cltd
enter
xlat
rclb
inc
xchg
mov
mov
xor
sbb
and
repnz
pop
add
mov
int
pop
movsl
popa
cld
cmp
mov
mov
pop
xchg
mov
ret
inc
mov
dec
daa
or
in
aam
pop
xchg
test
push
mov
xchg
push
inc
mov
jmp
adc
add
lret
jnp
ja
sahf
popf
mull
xorb
fwait
or
aas
add
out
shrl
mov
cmc
jbe
ljmp
outsb
xor
mov
mov
ror
push
mov
mov
lods
lret
pushf
lahf
adc
mov
fidivl
sub
pop
mov
add
sub
xchg
stos
inc
jl
fstpt
mov
sbb
movsl
cli
pop
clc
push
jno
sbb
xchg
cltd
loop
xor
ret
subw
adc
adc
fbld
inc
mov
gs
test
dec
dec
shlb
fwait
push
mov
pop
loopne
in
mov
cwtl
jecxz
xor
fsubp
jae
mov
hlt
mov
int3
add
cmp
cmp
xchg
jmp
xchg
or
adc
shll
lret
sbb
gs
adc
mov
add
sahf
repnz
mov
dec
cmp
pushf
repz
ljmp
sbb
mov
add
mov
shll
sbb
pushf
mov
dec
jns
adc
lds
xchg
insb
mov
leave
repnz
jg
xchg
adc
mov
inc
cmp
lret
pop
nop
lcall
push
stos
inc
lcall
dec
jmp
imul
test
cmpsb
cmp
push
push
or
cmp
mov
cmpsl
xlat
in
loope
shll
sub
enter
mov
adc
ror
fwait
clc
test
aaa
cmp
outsb
inc
mov
cmc
ja
lret
in
out
jmp
inc
shlb
cmpb
xor
orb
fcoms
sahf
inc
adc
ret
int
or
push
mov
les
cli
mov
nop
out
lds
mov
dec
push
dec
subl
fs
inc
sbb
roll
inc
add
xchg
iret
cmpsl
mov
leave
fbstp
ret
sbb
jbe
sub
jno
lds
push
int3
shr
sbb
jmp
xor
sub
add
jno
mov
ljmp
pop
jb
scas
lret
mov
adc
xchg
call
push
mov
push
or
out
fwait
pop
push
rorb
mov
push
or
jmp
rol
pop
es
add
aam
clc
or
or
sub
cmp
fisubrl
mov
arpl
int
cmp
in
mov
jae
or
jle
xor
mov
hlt
js
test
pushf
and
mov
push
iret
mov
ret
loopne
mov
jb
dec
inc
in
scas
dec
std
dec
inc
stos
push
sub
out
popf
out
xor
xchg
in
inc
add
and
push
repnz
nop
mov
lds
adc
ret
push
cmp
and
jno
lds
mov
cmc
mov
shr
negl
scas
movl
cld
or
addr16
enter
cmp
or
add
imul
push
push
fidivrs
pop
or
inc
mov
jge
fcmovbe
or
mov
popf
jb
mov
push
orb
clc
or
into
lods
xchg
jl
fadds
adc
sub
ret
sbb
test
fiaddl
les
pop
pop
dec
or
xchg
pop
mov
rclb
popa
mov
cwtl
fists
int3
inc
dec
jnp
xchg
cmp
imul
add
inc
and
mov
inc
jge
rol
sbb
fs
out
popf
lret
mov
addb
outsb
lret
iret
inc
sbb
sub
adc
dec
pop
mov
jns
inc
mov
lods
xor
scas
fcmovnb
push
addr16
leave
loop
or
and
les
inc
inc
scas
xchg
stos
jge
dec
cmp
inc
lcall
or
mov
aam
jbe
inc
inc
popf
push
stos
mov
or
les
out
cmp
mov
add
xchg
aad
mov
pusha
xor
dec
mov
stc
mov
and
push
inc
pop
lret
call
push
and
loopne
pop
push
dec
ret
push
sub
inc
cld
sbbl
jecxz
dec
mov
call
sub
dec
loopne
imul
mov
cmc
hlt
imul
jmp
int
mov
jae
jnp
in
cmpsl
outsb
out
popf
lret
mov
mov
hlt
mov
dec
mov
sbb
dec
sti
adc
ret
dec
fildl
sbb
cmp
push
mov
pop
mov
jmp
fists
js
bound
ss
add
test
pop
stos
xchg
roll
xchg
fistl
fisubl
xor
sbb
jp
mov
mov
ja
in
insl
push
inc
test
xor
lret
mov
pop
andl
xchg
push
inc
dec
stos
mov
outsb
loope
or
cli
fwait
pop
mov
sub
ss
aam
sti
jg
mov
dec
push
inc
lahf
lret
jecxz
shlb
or
movsl
xor
xchg
pop
daa
dec
dec
mov
xor
aas
mov
pop
jge
les
pop
cmp
repnz
push
mov
and
pop
lret
rorl
mov
ret
mov
cld
jg
divb
in
inc
sbb
rorb
sbb
js
inc
pop
push
adc
pusha
mov
fsqrt
ja
in
test
xor
cmc
xor
add
cmp
les
adc
mov
cmp
stos
std
xor
adc
popf
inc
mov
fidivs
mov
cltd
bound
loope
jecxz
cmp
orb
sbb
pop
dec
add
out
mov
stc
mov
movsl
inc
xor
les
push
mov
into
fwait
lahf
lds
outsb
scas
xor
xor
rcll
addl
enter
sbb
jae
out
ljmp
fnsave
pop
pop
jge
mov
push
stos
push
sub
dec
sbb
push
xchg
xchg
push
idivl
mov
repz
je
aad
sbb
xor
xor
pop
dec
lock
jno
std
fs
aam
xor
imul
pop
or
xchg
jbe
stos
push
pop
jo
pusha
mov
mov
lret
adc
js
ret
movsb
jl
or
mov
xchg
leave
jle
ss
les
adc
mov
aad
pop
cmpsb
loopne
pop
fidivrs
sbb
outsl
or
test
mov
lahf
in
outsb
inc
adcl
adc
cmp
addb
push
aam
fnstenv
ljmp
push
xchg
mov
punpckhwd
pop
add
dec
icebp
jno
xchg
cwtl
clc
lret
or
loopne
push
xor
test
inc
ds
dec
in
mov
sub
mov
stos
addr16
lods
add
inc
std
stos
dec
sbb
les
push
les
lret
cmp
mov
filds
popa
cwtl
jl
or
cltd
insb
push
fstl
in
movsl
sbb
rcrb
xchg
sbb
xchg
jbe
cmp
scas
fcmovnb
pop
mov
call
leave
pusha
jns
sbb
andl
daa
add
fcmovne
xchg
fwait
adc
sub
cltd
sub
xor
inc
jge
jmp
test
push
mov
repz
call
sti
mov
jne
mov
mov
inc
xchg
mov
adc
fiaddl
dec
bound
mov
xor
mov
xor
aam
sti
ja
or
lods
iret
adc
pop
test
fstpl
or
add
and
movsb
cmp
stc
push
mov
rorl
mov
lahf
stos
and
rcrl
popf
push
dec
sub
xchg
fcomi
ss
gs
fnstsw
je
lock
sahf
sbb
rolb
sbb
mov
jecxz
mov
xchg
loopne
ret
scas
jg,pn
leave
loope
mov
out
js
xlat
jecxz
jo
xor
push
sbb
aam
cmp
rorl
xchg
fwait
inc
jl
fstpt
mov
xchg
mov
popf
movsl
cli
xor
lds
jg
jnp
out
sbb
jl
int3
cltd
enter
shlb
or
cmp
sbb
daa
mov
shlb
adc
mov
lret
call
push
leave
loopne
pop
pop
dec
ret
or
clc
inc
cld
sub
lret
jecxz
inc
mov
pop
cmp
in
hlt
xor
xchg
xchg
iret
push
mov
inc
loopne
popf
out
push
mov
ret
pop
mull
inc
stos
dec
pop
lds
sbb
mov
pop
jmp
cmc
fisttps
dec
rcr
cmp
lods
xlat
les
sbb
pop
lock
lock
adc
lret
inc
fwait
pop
arpl
insl
cmpsl
ret
pop
pop
shll
dec
xchg
jbe
movsb
jno
aad
mov
pusha
sbb
ljmp
arpl
pop
fcoms
shlb
mov
imul
call
dec
jns
mov
mov
out
xor
sti
bound
pop
out
cmp
stos
lock
out
addl
pop
dec
std
ret
dec
mov
and
rol
ljmp
js
mov
scas
mov
imul
cmp
pop
add
mov
enter
int3
inc
dec
mov
out
mov
sbb
stos
enter
cmc
mov
rcl
dec
lods
fiaddl
lahf
inc
and
jbe
sbb
ss
gs
pusha
in
mov
xor
mov
test
ret
ret
inc
sbb
das
and
or
jle
cwtl
push
imulb
mov
imull
sub
mov
add
icebp
negl
sbb
lret
inc
fwait
iret
pop
jo
xchg
test
mov
sbb
adc
jmp
xchg
jno
dec
sub
cmp
mov
call
inc
mov
jmp
push
dec
test
testl
ret
mov
pop
xchg
xchg
or
add
dec
sbb
mov
mov
outsb
mov
call
xor
pop
adc
rcr
stos
iret
fucomip
popa
pushf
and
mov
or
mov
adc
out
mov
cwtl
sahf
gs
mov
jbe
mov
dec
mov
dec
lahf
movsb
subb
jmp
in
dec
mov
xor
xchg
mov
lock
fisubrs
add
jmp
in
lock
std
inc
sbb
imul
pop
cmp
mov
leave
sarl
xchg
ja
movsb
jno
aad
lahf
jge
inc
xchg
mov
add
pop
adc
push
jl
or
xchg
xchg
lret
pop
cltd
addr16
mov
lods
add
adc
movsb
jp
pop
inc
gs
adc
cmp
push
sub
insl
or
mov
fldz
loopne
inc
mov
pop
inc
fstps
out
mov
dec
xchg
das
stc
insb
and
pop
int
push
repz
mov
add
ret
jmp
scas
int
pop
lods
push
test
in
mov
clc
sti
mov
shlb
mov
add
sub
dec
sbbb
ret
movsl
lret
fstps
pop
jne
les
test
mov
ret
mov
int
mov
xor
lret
rorl
mov
add
add
imul
in
mov
and
iret
inc
mov
sbb
icebp
shrb
push
aad
mov
jmp
pop
xchg
loop
loop
xor
jp
test
stos
or
xchg
lcall
std
lock
mov
ret
inc
dec
push
test
mov
mov
sbb
pop
jno
lea
push
inc
mov
adc
mov
std
cmpl
push
fcoms
daa
mov
cwtl
dec
cmp
xchg
fsts
arpl
int3
loopne
movsl
dec
call
mov
in
leave
pop
out
ret
fdivp
jns
stos
leave
sbb
loop
je
pop
cmpl
rcll
mov
pop
cmp
sub
push
sahf
jp
push
test
xor
fisttpl
lea
sub
fbstp
mov
cmc
enter
cwtl
push
repnz
mov
adc
std
lds
adc
scas
dec
adc
fcoml
setge
negl
add
movl
pop
add
les
or
lock
xchg
movl
and
je
insl
push
int
fdivs
mov
into
popa
cltd
enter
popa
or
sbb
xchg
inc
mov
test
out
mov
stc
xor
adc
movsl
mov
sub
out
push
fldl
ds
jno
lds
cmp
aam
push
mov
xchg
add
leave
addb
jmp
dec
mov
dec
jge
sub
loopne
cmc
mov
popf
mov
mov
lds
lods
leave
dec
sbb
mov
push
enter
iret
sbb
rcr
cmp
stos
adcl
hlt
mov
dec
fwait
out
cltd
or
mov
sahf
cli
xor
in
dec
rcrb
sbb
mov
add
sbb
ss
mov
in
mov
fcoml
add
cmp
leave
xchg
adc
mov
mov
sub
mov
loope
cmovl
mov
xchg
jle
fmul
fcmove
mov
ds
pop
fisubs
mov
lret
or
dec
jmp
sbb
rclb
rcll
xor
and
mov
stos
jmp
adc
push
sahf
and
sbb
cwtl
daa
push
jb
pop
push
xorb
mov
cmp
movsl
jg
and
aas
sub
movsb
lahf
and
fdivs
adc
ret
jecxz
or
popa
xchg
stos
rcll
cli
push
cmc
cmpsl
dec
out
fistl
xchg
rcl
leave
ljmp
dec
cs
stc
loopne
bound
add
imul
jno
dec
xor
iret
jns
or
shl
adc
addr16
lock
sbb
arpl
daa
pop
mov
jbe
nop
dec
mov
push
or
lods
ficoml
stos
ja
dec
xchg
fnstenv
mov
xchg
fisubs
xchg
inc
pushf
mov
cmp
lahf
insl
or
mov
mov
pop
incb
mov
inc
and
subl
les
xor
jnp
sbb
dec
and
cmp
bound
adc
add
into
sbb
jb
jnp
movsb
mov
out
adc
inc
sub
inc
inc
mov
sbb
add
push
adc
ret
push
dec
mov
sbb
xchg
pop
shlb
popf
sahf
test
inc
adc
xchg
shlb
arpl
dec
sbb
je
mov
movb
add
add
insl
pushf
ret
cmpsb
xchg
adc
sbb
dec
and
adc
gs
loop
push
mov
lcall
pop
mov
in
int
mov
mov
js
data16
pop
xor
test
dec
in
xor
add
push
ljmp
addb
cmp
lods
push
sub
mov
call
rcr
call
push
mov
mov
lahf
popa
or
jge
subl
cs
dec
aam
jb
mov
rcll
inc
mov
mov
inc
inc
jne
les
dec
iret
shlb
cmp
mov
bound
cmp
in
xchg
sub
hlt
je
test
outsl
aad
add
sbb
insb
aam
xchg
popa
mov
test
dec
sbb
fists
sbb
inc
xchg
push
in
fisttpl
or
jno
sub
jp
ja
popf
mov
pop
sub
sub
add
pushf
das
loop
mov
dec
jno
pop
xor
mov
loop
imul
xchg
jnp
sub
scas
xchg
sub
sbb
or
les
les
or
iret
and
adc
xchg
xor
popl
mov
mov
aam
sbb
cmc
xchg
and
pop
fsubl
jge
out
lods
inc
mov
sbb
xorb
insb
clc
cmp
inc
repz
cmp
gs
mov
out
mov
mov
mov
aam
fistps
dec
subl
not
pop
das
jns
and
cltd
push
add
mov
dec
lret
jmp
adc
dec
arpl
mov
daa
mov
stos
mov
inc
pop
mov
dec
sbb
dec
push
dec
subl
jae
jecxz
aam
fwait
add
addb
xor
sub
add
sbbb
pop
test
xchg
mov
pop
mov
sarl
jp
scas
pop
rorl
loope
mov
test
add
sub
cld
jo
test
adcl
xchg
rorl
xchg
fndisi(8087
mov
cmc
movsl
ret
pop
test
and
movsl
ds
inc
and
out
dec
sbb
sub
adc
push
push
adc
add
sub
rol
sti
jle
sbb
fsts
addl
movsl
int3
rolb
test
mov
adc
pop
iret
into
pop
xchg
and
cmpsl
je
or
inc
ds
dec
daa
nop
jns
fdivp
movsb
xchg
xchg
sub
lea
cmpsl
stos
pop
stos
inc
in
dec
xchg
lods
mov
jns
cmpsb
or
fnstenv
popf
lret
inc
inc
sbb
sub
sahf
ret
mov
iret
add
test
dec
dec
pushf
dec
inc
pop
repnz
lds
dec
lret
lret
push
pmovmskb
push
inc
fwait
leave
test
add
test
xchg
dec
mov
jne
lret
dec
cmpsl
stos
xchg
lcall
into
aam
fidivrs
fimuls
add
cmp
pop
mov
mov
insl
data16
bound
addr16
pop
test
push
mov
dec
jmp
inc
jmp
cmp
stos
pop
and
xor
mov
popa
mov
lods
ficomps
mov
movsl
sti
pop
scas
xchg
repz
std
iret
sbb
pop
leave
mov
pop
mov
hlt
je
xchg
xchg
xlat
push
out
cmpb
iret
scas
ret
pop
repnz
sahf
sbb
shl
repnz
push
ljmp
mov
push
fucomp
not
add
mov
push
mov
ds
adc
lret
inc
stc
int
dec
xchg
dec
mov
imul
adc
gs
fwait
in
jne
cmpsl
pop
push
icebp
leave
loope
fwait
jg
mov
xchg
fadds
in
cs
sbb
ljmp
xchg
mov
add
imul
or
lea
test
bound
fildll
and
sub
es
or
mov
push
mov
fcoms
je
pop
stc
mov
lods
push
mov
dec
loopne
jmp
ret
imul
jmp
in
stc
ds
mov
lea
jle
dec
fisubs
enter
jne
dec
mov
rcl
add
sub
mov
add
jno
lds
dec
sti
cmp
call
fcmove
push
mov
inc
sub
add
add
ror
sub
aam
repnz
int3
sub
lods
aas
pop
dec
jno
pop
xor
mov
decb
push
mov
mov
ret
test
jo
andl
cmpsl
xchg
fcoms
sbb
xor
shrb
daa
push
cmp
mov
and
dec
mov
xchg
imul
dec
jo
lods
inc
sbb
mov
fld1
gs
outsl
mov
sub
bound
or
mov
inc
in
and
or
inc
xchg
sub
push
mov
loope
idivl
pop
arpl
mov
in
mov
xor
sti
mov
das
jns
adc
int3
pop
sub
scas
or
cwtl
sahf
cmpsl
xor
scas
xchg
js
sahf
ja
adc
cli
sub
mov
push
fdivr
dec
sbb
mov
popf
testl
stos
pop
push
mov
dec
adc
inc
pop
adc
insl
movsl
ret
mov
les
fs
push
pop
test
add
jmp
xchg
jo
ftst
leave
jecxz
sbb
jl
or
push
inc
pop
xchg
leave
mov
and
out
mov
xor
sbb
mov
fwait
mov
xor
cmpsl
jge
fdivs
js
stos
push
cltd
enter
adc
or
mov
inc
mov
pop
iret
xor
sti
out
ljmp
movsl
and
pop
mov
imul
lds
ds
mov
js
mov
cwtl
push
add
mov
inc
mov
je
nop
jmp
lret
cltd
fisubs
inc
fsubrl
inc
and
lahf
mov
push
and
lods
mov
mov
je
ret
shll
gs
adcb
add
cmpb
lret
movsl
mov
mov
and
adc
shrb
int3
lods
and
xlat
in
mov
leave
in
icebp
sbb
sti
or
add
or
push
stos
mov
stos
xchg
fistl
fiaddl
add
xchg
xchg
mov
mov
ret
ljmp
std
fstpt
fwait
lea
cmp
inc
xor
fiaddl
mov
inc
aam
clc
adc
rclb
adc
xchg
xchg
mov
dec
loopne
in
xor
popf
fcmovbe
movsl
sti
pop
mov
pop
add
movnti
mov
pop
decb
mov
aaa
test
lret
push
cmpsl
in
adcl
or
lds
dec
jge
sub
cmc
sbb
mov
cld
mov
pop
mov
outsb
aaa
mov
repnz
push
pop
add
pushf
jne
nop
lret
movsl
mov
rcrb
xchg
popf
lods
pop
test
xchg
rcrl
fdiv
in
mov
shll
test
push
sbb
ret
or
push
pushf
push
xchg
stos
std
cld
pop
aam
add
inc
pop
pop
xchg
xchg
out
jae
push
push
popf
mov
rolb
push
mov
loope
pop
fs
pop
lds
roll
sub
push
inc
shlb
mov
sub
mov
inc
repz
cmc
paddusw
mov
pop
xlat
mov
sbbl
cmp
ret
xchg
rcrl
mov
cmp
mov
pop
es
inc
xchg
jmp
jecxz
scas
inc
pop
lret
mov
inc
mov
push
daa
daa
xchg
dec
sbb
repnz
mov
daa
xchg
dec
popf
in
mov
pop
sub
add
rcr
or
xchg
or
mov
into
ljmp
fcoml
mov
pop
pushf
ret
nop
lods
adc
push
mov
int3
repnz
jmp
fcoms
bound
xchg
add
orb
gs
mov
add
mov
mov
lahf
insl
or
mov
enter
orl
add
or
outsl
jecxz
addb
scas
sbbb
insb
xor
mov
sbb
mov
dec
loopne
subl
loopne
les
adc
xchg
ds
hlt
mov
mov
xchg
enter
mov
mov
dec
ds
adc
adc
fldenv
add
lret
fldenv
sbb
dec
push
dec
subl
rep
push
std
xor
mull
ffree
xor
cld
add
xchg
int3
jae
inc
sbb
push
jmp
fisttpll
push
int3
fisttpll
jp
rorb
or
repz
dec
lret
aad
fcoms
push
stos
std
sbb
mov
scas
ja
lds
movsl
jp
cmpsb
push
addl
xchg
out
mov
mov
pop
fsubs
aas
mov
xchg
iret
js
mov
pop
sub
jecxz
xor
sub
add
cmp
xchg
sub
cmp
arpl
mov
pop
loope
imul
aam
sti
pop
lock
fistpll
jecxz
pop
addl
inc
mov
cwtl
cltd
add
cmp
xchg
test
aad
lea
mov
popa
xchg
gs
adc
inc
mov
pop
cli
and
jmp
repz
fisubl
inc
sbb
outsb
adc
inc
inc
sbb
push
dec
add
lret
mov
and
lds
pushf
dec
and
adc
and
mov
push
movb
cmpsl
lahf
sahf
fucomi
and
cmp
cmc
and
mov
nop
pop
daa
and
test
push
outsb
xchg
cmp
imul
add
pop
movsb
cli
xor
popl
outsl
pop
push
inc
cltd
out
cmp
and
arpl
rolb
xchg
pop
iret
dec
sbb
clc
outsb
mov
xor
mov
add
push
into
push
mov
into
dec
lahf
in
stc
ds
hlt
mov
push
mov
inc
dec
mov
sbb
xchg
inc
maskmovq
cwtl
sahf
dec
cmpsl
push
dec
mov
leave
jle
and
aaa
xchg
mov
ja
xor
dec
sbb
mov
jae
lret
aad
mov
popf
lret
popa
mov
jecxz
ret
inc
sbb
inc
add
inc
out
cmpsb
adc
fsubrl
and
movsl
mov
idivb
xchg
xchg
roll
das
cmp
xchg
ret
in
xchg
jmp
test
cmpsl
xchg
fcoms
mov
ljmp
mov
mov
stos
shl
lret
aam
sbb
movsl
cli
or
push
inc
xchg
in
bound
add
ja
addr16
mov
dec
jecxz
rolb
pop
addr16
roll
or
les
mov
loopne
cmpsl
cmp
mov
aam
add
fucomip
in
std
fists
rol
repz
mov
inc
push
add
cmp
mov
xchg
sub
mov
push
dec
mov
sbb
gs
int3
adc
mov
aad
shlb
mov
or
push
fucom
xor
sbb
or
add
shrl
test
cmpsl
mov
mov
xor
leave
movsl
sbb
rcrb
insl
pop
lods
movb
lret
cmpsl
fstl
pop
cmpsl
push
fs
jg
leave
loope
mov
call
fcoms
data16
stos
jne
testb
ficoml
daa
mov
xlat
mov
fsubs
and
cmpsb
pop
mov
clc
xor
and
xor
rcrl
cmp
mov
popl
mov
stc
adc
cli
ja
adc
arpl
int
pop
test
cmp
mov
mov
pop
xchg
mov
fdivp
jnp
jg
fs
add
leave
sbb
pop
fsubrl
movsl
mov
leave
sub
mov
adc
mov
xlat
fiaddl
dec
std
lret
and
jne
out
cmp
lods
mov
lret
xor
mov
or
add
loop
add
divl
icebp
imulb
sarl
shrb
es
mov
mov
test
xor
data16
bound
in
dec
mov
sbb
ret
adc
sbb
add
mov
inc
add
mov
sahf
cmpsl
sti
xor
jb
cwtl
outsl
push
adc
xchg
mov
mov
cwtl
lock
loopne
sbb
cwtl
or
aam
jns
dec
and
add
mov
pop
pop
dec
add
xchg
shl
ret
loopne
mov
ja
lret
in
cmc
pop
mov
lahf
sbb
jnp
mov
fnstcw
mov
sarb
add
jne
sbb
out
mov
dec
ret
push
ljmp
push
daa
xchg
xchg
dec
sbb
test
mov
fs
rcr
cmp
mov
mov
add
nop
lock
ror
inc
sbb
cs
pop
mov
mov
pop
dec
mov
sub
adc
std
out
jg
leave
in
mov
mov
fwait
leave
loop
or
sub
data16
push
sub
mov
add
xor
xchg
and
movsl
jp
mov
fwait
in
lods
inc
test
bound
jb
out
sbb
xchg
clc
mov
adc
inc
test
xchg
add
push
les
cltd
lcall
dec
add
jmp
repnz
mov
in
xchg
fstpl
lret
hlt
mov
add
inc
ret
ret
sbb
sub
cmp
dec
movsb
lcall
mov
ja
les
push
cli
mov
xchg
inc
shrb
fcmovu
mov
stos
arpl
shr
cmp
rcrb
loope
pushf
pop
sub
or
ret
jne
xchg
lret
movsl
mov
imulb
jmp
pop
mov
lods
inc
inc
jmp
fwait
bound
mov
xor
icebp
cmp
or
adc
push
dec
push
stos
jge
sbb
jbe
arpl
out
add
mov
sub
xlat
fdivs
pop
pop
repnz
mov
inc
orl
push
mov
add
push
rcll
ret
movsl
aam
add
ret
arpl
mov
ret
loopne
inc
fwait
ja
lret
in
cmc
dec
decb
addr16
int3
add
xor
jle
jle
adc
popf
xchg
int
daa
adc
push
cwtl
xorb
xlat
xor
pop
es
loope
or
sbb
aaa
mov
icebp
fldt
fistps
stos
lcall
test
sbb
in
iret
dec
fstpl
aas
and
arpl
dec
rcrb
adc
cltd
lods
cmp
das
inc
mov
jge
push
or
or
mov
mov
cmpsl
xchg
test
ret
or
cmp
fisttpl
lds
push
std
inc
out
mov
test
mov
fwait
insl
scas
add
jb
fwait
outsl
popl
inc
adc
pop
and
inc
lea
addb
adc
stc
insb
and
or
pop
fistpl
adc
div
xor
mov
ja
roll
in
loope
adc
stos
psrad
dec
push
movl
cwtl
sbb
xor
push
adc
pop
jne
lds
stos
mov
mov
sub
pop
popf
shll
in
mov
push
push
adc
inc
add
inc
out
cmpsb
mov
fsubrl
aad
inc
cwtl
or
pop
cli
adc
mov
and
imul
popf
fiadds
fmull
repz
jb
arpl
mov
mov
xchg
cmp
jno
dec
cmp
sub
add
popa
movsl
adc
push
sub
sbb
xchg
fcoms
test
xor
aas
pop
fdivrl
lock
ret
repnz
xchg
mov
bound
xchg
adc
orl
push
sbb
rcr
rorb
in
sarb
jns
dec
xor
inc
test
movsl
lea
divb
jg
ja
lret
loopne
lcall
iret
ret
ficomps
jns
push
adc
dec
inc
dec
mov
sbb
adc
sub
movsl
push
push
jnp
movsl
xchg
mov
cmp
sub
jb
mov
lret
sbb
sub
stos
xchg
jae
mov
xor
sbb
aas
loop
loop
rcrl
xor
dec
and
lds
pushf
dec
and
inc
cld
lds
fst
and
fstpt
ljmp
push
cmpsl
into
dec
dec
lods
insl
mov
adc
adc
sub
popf
ljmp
pop
stos
jne
add
push
mov
pop
in
push
jne
mov
dec
ror
iret
jo
fwait
outsl
push
ret
test
popf
mov
fmuls
or
mov
mov
xor
and
push
ficompl
jp
inc
cwtl
mov
sarl
mov
shrl
mov
jns
ds
aas
jl
loope
jnp
mov
loopne
aam
enter
int3
adc
mov
imul
das
loopne
cmc
mov
movsb
adc
sbb
fwait
mov
stos
and
lret
ffree
jmp
repz
mov
add
popa
mov
mov
inc
adc
imul
add
push
push
ret
clc
daa
cmp
jnp
scas
jg
fprem1
mov
cld
cli
inc
into
xor
mov
outsb
test
sbb
sbb
in
stos
jge
jg
out
push
xchg
int3
pop
sbb
mov
and
fisubl
stos
cmp
pop
jb
fwait
outsl
movnti
loop
mov
inc
aam
clc
xor
add
add
cmp
push
mov
loopne
ret
mov
push
pop
mov
jecxz
pop
mov
imul
enter
inc
mov
pusha
aaa
hlt
add
push
adc
int3
mov
les
add
mov
ja
push
push
inc
mov
xchg
pop
dec
bound
push
pushf
sbb
divb
sti
pop
add
add
les
cld
or
ret
insl
out
push
movsb
add
stc
add
jmp
fstps
jo
and
cmc
add
fdiv
repz
cmp
or
cmp
adc
adc
dec
rcr
pop
inc
mov
inc
add
pop
movsb
xchg
pop
fstl
pop
shlb
jge
inc
push
inc
xor
loope
add
and
rolb
add
addr16
xchg
std
or
xchg
idivl
push
and
mov
mov
test
add
jns
imul
or
loopne
rclb
imul
push
jb,pt
push
mov
lcall
xchg
dec
mov
cmp
push
test
leave
sbb
fiadds
lods
sahf
pop
int3
insb
dec
pop
sbb
dec
mov
inc
sbb
adc
cli
add
aad
mov
clc
sub
cltd
lret
movsl
ret
sbb
xchg
or
shll
fdivrl
jmp
mov
fstp
adc
stc
or
and
mov
jo
in
ljmp
lcall
movsb
sbb
add
sub
jb
mov
push
or
mov
xchg
push
pop
out
cmp
icebp
lock
js
mov
adc
push
cmp
repnz
jmp
mov
push
jne
les
push
mov
fld
mov
pushl
sbb
sar
sbb
fstps
es
jg
and
sub
and
push
dec
sbb
in
jge
mov
sbb
xlat
dec
sbb
add
dec
push
inc
xor
push
std
push
loop
out
rcrb
addb
sahf
rcrl
repnz
jno
pop
push
push
mov
and
jle
dec
aam
int
add
inc
mov
test
cld
or
incl
mov
cld
adc
lods
cwtl
adc
mov
sbb
inc
sbb
xor
pushf
push
pushf
inc
jge
dec
sahf
fidivl
dec
xchg
std
xorl
lea
and
cmp
rclb
and
fiadds
pop
dec
cmp
in
xor
mov
mov
add
into
sbb
and
aas
out
and
sbb
in
daa
int3
std
jmp
popf
in
mov
cmp
test
aam
add
mov
stos
imul
jne
aam
lods
fsts
sub
jbe
fs
movsl
popa
in
rclb
xor
sbbb
adc
add
lds
inc
xchg
jno
addr16
sbb
xchg
leave
add
mov
dec
movsb
aad
xor
xor
fucomi
repnz
loop
add
xchg
dec
les
inc
scas
fwait
test
inc
cmp
mov
inc
lcall
jb
test
jge
js
add
inc
push
repz
lea
mov
inc
mov
iret
ret
inc
sbb
or
ja
test
test
sbb
sub
repz
dec
hlt
mov
repz
mov
jecxz
cmpb
inc
jle
and
inc
adc
jns
or
xchg
mov
int
les
inc
xchg
insl
sub
hlt
sub
push
stos
push
aad
dec
sbb
cmp
out
fucomp
jae
fistl
aaa
mov
arpl
add
ljmp
add
jl
clc
icebp
jno
cltd
and
iret
cmp
add
dec
xor
movsl
mov
xchg
mov
lods
inc
inc
lods
aad
sarl
xchg
cld
or
add
out
mov
test
cmp
inc
sbb
addr16
stos
aad
std
lock
sub
movsl
ds
cmpsl
ret
fld
clc
xor
mov
cltd
enter
adc
sbb
adc
sbb
add
test
xor
mov
mov
pop
adc
ljmp
jl
mov
jmp
jae
mov
imul
sbb
mov
hlt
xor
dec
dec
stos
fwait
jns
fdivp
movsl
adc
loopne
sub
popa
ret
stos
les
push
mov
inc
and
arpl
cli
scas
push
fucom
movsb
andl
ror
mov
pop
adc
ljmp
decb
xchg
mov
pop
inc
pop
mov
frstor
stos
fidivl
into
scas
jg
mov
add
xlat
loopne
sti
add
sub
inc
sbb
subb
imul
xlat
ja
lds
mov
stos
leave
or
inc
inc
mov
mov
test
or
jge
popa
or
addl
dec
movsl
mov
fsubrs
adc
addr16
stos
outsb
aaa
mov
jne
les
cmp
dec
pop
mov
mov
mov
clc
into
std
iret
sbb
mov
mov
push
bound
sti
mov
je
dec
xchg
and
mov
in
jge
dec
mov
lret
stos
and
xchg
push
mov
or
lret
fucomp
cld
std
cmpsl
sub
leave
mov
or
aas
mov
push
lods
lock
iret
or
mov
fdiv
and
das
rorb
inc
xchg
gs
jbe
mov
addb
movl
out
fs
mov
test
test
sbb
leave
xchg
pop
outsb
icebp
mov
stos
xchg
imul
inc
mov
fsubl
cli
sbb
ret
aad
dec
mov
cmpsl
xlat
adc
inc
shlb
add
movsl
xor
loop
mov
push
idivl
pop
clc
mov
fdivs
int
dec
lock
jns
mov
add
mov
enter
outsb
imul
mov
cs
add
jbe
sbb
cli
mov
mov
pop
mov
nop
pusha
loop
mov
adc
inc
pop
adc
fcoml
push
lret
movsl
mov
lcall
pop
jno
lds
inc
scas
stos
jbe
lahf
aad
xchg
loop
jle
mov
jnp
jno
inc
imul
test
xor
in
pushf
jne
into
push
mov
pop
push
inc
lcall
jp
mov
cltd
stos
and
stos
mov
fdivs
pop
pop
and
mov
add
mov
mov
call
adc
pop
xchg
dec
shlb
adc
addr16
les
xchg
pop
sti
int3
fwait
pop
lea
ss
ret
loopne
in
mov
clc
outsb
fldcw
cs
lret
hlt
cmp
enter
orb
mov
dec
scas
lcall
sub
pop
mov
lahf
xchg
pop
add
lds
sbb
lahf
popf
les
shrb
stc
mov
in
sub
out
inc
adc
pushf
pop
xchg
adc
xchg
and
adc
inc
test
pop
push
jnp
push
mov
mov
mov
js
jle
cmp
fwait
leave
in
and
inc
add
sti
pop
mov
xor
stos
mov
stos
xchg
mov
jnp
mov
push
sbb
cwtl
mov
lahf
jle
dec
leave
call
cmpsl
sti
mov
jne
fldl
mov
inc
xchg
rcrl
push
add
mov
dec
xchg
ret
test
mov
jbe
imul
mov
mov
imul
dec
lahf
lds
lods
cmp
aas
iret
hlt
mov
inc
and
dec
mov
add
push
test
in
ret
pop
repz
sarl
stos
push
icebp
aad
out
fildl
test
push
fcmove
cmpsb
dec
cmp
pusha
cwtl
ret
mov
das
or
in
jno
dec
call
add
mov
pop
test
es
pushf
cmpsl
dec
push
fucomi
and
in
mov
loop
sub
and
jecxz
scas
xchg
addr16
inc
sbb
idiv
dec
sub
lock
sub
fidivrl
cli
mov
push
stos
lds
cmpsl
ret
inc
jmp
cltd
into
mov
stos
mov
sbb
xchg
mov
and
rcr
push
fdivrs
dec
xor
pop
adc
add
adc
xchg
jle
pop
les
imul
ja
sub
clc
sti
and
jecxz
sahf
repz
and
scas
lods
pop
sub
inc
sub
out
mov
shll
imul
mov
test
dec
decl
jno
test
mov
mov
sub
mov
mov
lock
adc
lds
and
out
mov
mov
jno
cwtl
xchg
dec
cltd
lods
jno
mov
mov
cmp
js
jg
jp
out
js
icebp
cltd
iret
ljmp
insb
mov
les
sbb
or
mov
pop
push
dec
xor
movsb
cli
xchg
cmpsb
enter
xor
pop
fisubs
xchg
mov
mov
nop
dec
test
add
jge
xor
or
ds
repnz
mov
mov
pop
test
cmp
mov
clc
sti
jl
dec
lahf
in
lods
push
out
add
stos
cmovno
xchg
test
push
mov
ficoms
pop
jmp
mov
add
mov
mov
pop
test
mov
sbb
xlat
dec
popf
je
ret
aaa
lods
scas
inc
sub
or
push
cmp
mov
xchg
jo
gs
sbbb
sbb
cltd
shrb
test
fidivs
jp
and
imul
sti
pop
pop
xchg
flds
test
dec
mov
mov
adc
test
or
test
lods
adc
adc
or
cmpsb
shrl
jae
push
insl
in
or
add
mov
jno
cmp
rclb
aad
adc
mov
int
jmp
dec
and
clc
xchg
fcom
jae
mov
loopne
mov
repz
iret
sbb
das
ret
mov
cmp
or
enter
or
dec
mov
cwtl
sahf
inc
cmp
pop
sub
sahf
dec
add
adc
mov
add
xor
fwait
movsb
leave
test
int
shrb
xor
shlb
in
add
mov
adc
inc
sub
or
ret
dec
sbb
push
sbb
aaa
jns
inc
pop
call
lret
cmpsl
loope
mov
scas
fisttpl
in
mov
fdiv
sti
xchg
or
lds
jl
or
mov
push
inc
lcall
ret
inc
pushf
cwtl
mov
lods
in
xchg
enter
mov
xlat
imul
xor
mov
andl
xchg
dec
mov
enter
data16
dec
aam
stc
fcompl
loope
xor
xchg
jle
pop
adc
and
in
mov
out
sti
mov
out
in
mov
cld
je
test
scas
or
int
leave
lret
push
adc
or
cmp
xchg
test
inc
mov
fucomp
and
lret
push
int3
or
or
adc
or
adc
mov
aas
cli
adc
add
popa
jle
imul
mov
int
inc
push
jnp
mov
cmp
jmp
cmpsw
xchg
cltd
fisubl
les
adc
sahf
pop
xchg
rorl
xchg
fcmovnb
cmp
push
push
fisubs
xchg
inc
popf
and
stos
and
lahf
lahf
pop
cltd
fdivs
pop
sbb
jne
lea
add
adc
test
dec
adc
js
je
mov
add
mov
call
fsubs
pop
outsl
jmp
jae
mov
jecxz
and
movsb
adc
or
inc
mov
inc
mov
clc
lret
gs
in
cmc
ficompl
jmp
and
test
sbb
cld
mov
xchg
in
adc
fucom
data16
mov
add
mov
add
gs
ret
in
and
les
adc
xchg
mov
ljmp
shlb
int3
scas
rcrb
ss
pushf
repnz
mov
les
test
sbb
and
or
mov
push
sub
xor
mov
inc
mov
movsb
add
mov
pop
mov
cltd
outsl
sbb
inc
mov
or
inc
pop
sbb
xchg
pop
fistl
fsubs
sbb
call
sub
or
int
pop
xchg
test
mov
repz
mov
jecxz
jns
mov
enter
repnz
and
fwait
push
mov
movsb
lea
ss
movsl
dec
sbb
fxch
add
mov
int
inc
sbb
xor
popf
out
add
mov
fmuls
cmp
inc
dec
xchg
xchg
iret
cmpsl
ret
inc
test
or
dec
and
sbb
mov
cmp
mov
push
enter
stc
mov
out
js
cmp
xchg
inc
gs
test
sbb
js
scas
enter
lret
sub
add
jl
fnstenv
mov
mov
mov
movsb
cli
mov
push
mov
vpshuflw
cwtl
bound
inc
mov
or
pop
ret
mov
out
jno
push
or
pop
xchg
jg
shr
ss
dec
pusha
xlat
mov
imul
lahf
lret
in
addr16
adc
rcr
jecxz
enter
imul
in
jne
mov
xor
mov
fcoms
iret
and
push
clc
mov
cltd
sbb
pop
xor
adc
sbb
rorl
rol
jp
mov
imul
fldt
fs
ret
fs
psadbw
jno
fldenv
in
mov
xchg
fwait
jnp
xchg
sub
mov
mov
push
je
sub
les
adc
ficoml
lcall
add
dec
mov
ret
enter
lods
add
mov
pop
insl
cmovae
jmp
popa
inc
mov
or
sbb
ret
dec
test
dec
shlb
adc
pop
mov
popa
xor
imul
fucomip
in
lcall
add
cltd
loopne
bound
test
mov
dec
add
gs
in
cmc
fidivrl
rcl
dec
pop
dec
add
ds
sbb
dec
sbb
xor
xrstors
pop
push
jge
std
add
lock
iret
or
add
mov
rcrl
and
icebp
sbb
sbb
ficoms
fwait
in
pushf
and
lcall
cltd
loop
arpl
xor
pop
sbb
shlb
movsl
xchg
stos
pop
mov
movsl
or
pop
mov
xor
clc
push
sub
cmp
mov
mov
sti
ret
cmp
push
jne
stc
sbb
inc
xchg
push
dec
mov
popl
mov
dec
aam
out
mov
pop
pop
dec
int
xor
add
dec
call
fucomip
div
cmp
in
clc
and
xor
arpl
int3
push
dec
sbb
out
mov
sbb
mov
cmc
mov
mov
rorl
dec
add
lea
cli
sbb
cmp
lahf
popf
stos
mov
jae
ljmp
add
adc
push
hlt
lods
insl
inc
pop
loop
mov
fs
pushf
sbbb
jl
mov
pop
js
lret
mov
lahf
sahf
xchg
cmp
js
push
movsl
lahf
adc
js
mov
or
xor
or
adc
xchg
stos
mov
aaa
mov
dec
add
lods
scas
repnz
mov
mov
mov
push
jnp
lods
inc
mov
cmp
sbb
add
jl
or
pop
and
cwtl
dec
xor
test
fwait
repnz
int
pop
movsl
ljmp
jmp
andb
sbb
jle
js
adc
jle
inc
mov
or
jp
adc
jmp
lret
sbb
cmp
adc
push
and
shl
dec
clc
inc
lock
mov
inc
pop
popa
xor
addr16
in
leave
dec
add
jo,pn
sbb
lock
xor
pop
repnz
ret
cmp
mov
sti
lret
in
lds
subb
xchg
sbb
js
jle
mov
sti
add
pop
cli
fdivrs
and
xchg
inc
cmp
inc
or
adc
fistl
pop
cmp
stos
xchg
xchg
test
mov
dec
cli
inc
jo
cmpsl
jo
adc
or
mov
sbb
or
push
cmp
push
or
and
addr16
push
lret
xor
rorl
push
les
inc
sahf
cmp
sbb
dec
mov
xor
mov
test
daa
loop
hlt
mov
xchg
sub
adc
sbbb
inc
mov
insl
rcrb
pop
jno
fistps
clc
sub
ja
push
icebp
fisttpl
dec
xchg
fidivl
jge
pop
fucom
out
add
scas
mov
stc
adc
pop
or
or
xchg
jno
leave
xor
dec
sbb
cmpb
xchg
sbb
pop
pusha
subb
mov
lahf
sarb
xchg
loop
jae
sub
fwait
out
js
mov
addl
lods
cmp
and
inc
xchg
dec
stos
xchg
ficompl
outsl
cmp
pop
cmpsb
xlat
sub
mov
and
in
jb
pop
fdivrl
movsb
inc
xchg
rol
push
mov
clc
jb
sarb
mov
stc
cli
or
xchg
pop
sti
mov
sbb
mov
sbb
out
mov
cmp
pop
add
sahf
inc
jnp
jne
xor
pop
inc
lds
cmc
xchg
mov
sti
jae
inc
cmp
cs
sub
sbb
in
stos
mov
inc
mov
lds
jg
lret
stc
fldt
ret
xchg
cmp
aas
mov
popa
xchg
rcrl
sub
sub
nop
shll
add
push
add
xchg
fwait
out
mov
scas
ja
out
js
xor
xor
inc
sbb
gs
push
adc
add
dec
ficoml
push
fbld
cmp
inc
and
mov
push
pushf
nop
lea
iret
inc
fdivrl
shl
rcll
mov
jmp
test
jns
into
jae
cmp
ss
mov
mov
inc
xorl
in
jmp
push
xchg
sbb
lock
leave
bound
sbb
es
sub
add
push
mov
popf
out
sub
test
mov
xlat
xor
dec
test
inc
push
clc
mov
push
mov
mov
mov
fs
fbstp
add
sbb
cmp
pop
add
jo
hlt
mov
push
sbb
jno
mov
sbb
cmpb
cmp
add
xor
xchg
mov
scas
mov
outsl
loop
cmpsl
jno
dec
push
sbb
jnp
or
or
scas
cmc
add
pushf
adc
mov
inc
lcall
rclb
mov
pop
pop
cmpsb
dec
stos
mov
cmpsl
ret
xchg
std
ret
mov
mov
data16
or
cmp
roll
lcall
repz
fwait
daa
les
adc
out
mov
xor
ljmp
aas
jl
mov
mov
jbe
dec
mov
fs
jae
enter
hlt
je
dec
dec
inc
lea
jl
mov
dec
or
add
jo
xor
sub
jg
xor
cmc
sbb
jg
fwait
mov
mov
mov
cltd
je
xchg
nop
shlb
stc
add
mov
pop
or
pop
dec
dec
pushf
mov
scas
cmc
in
xor
sbb
es
stos
xchg
push
push
jmp
cmp
in
xlat
add
add
mov
xor
pop
sub
or
or
adc
push
adc
fistl
cmp
sub
stc
imul
mov
test
push
xchg
pop
mov
lahf
and
inc
sarb
js
sbb
clc
jp
mov
jns
sub
xchg
lods
sarb
iret
les
and
mov
mull
lea
dec
and
mov
jne
sub
fistpl
enter
push
inc
jecxz
mov
nop
fwait
adc
aam
out
cmc
adc
mov
xlat
aas
les
shrl
loope
fs
mov
sar
xor
xchg
out
mov
inc
sbb
mov
jle
pop
rolb
mov
mov
orl
mov
pop
sarb
adc
movsb
int
pop
xchg
sub
push
pusha
jp
scas
hlt
dec
jo
in
jnp
out
inc
filds
cmpsb
imul
mov
mov
xchg
or
push
mov
mov
mov
push
movsl
ret
stos
mov
inc
cmp
xchg
jle
dec
es
pop
fsubl
jo
push
jne
xchg
or
cmp
mov
add
js
sbb
popf
xlat
push
xchg
into
pop
stos
pop
lods
mov
dec
pop
movsl
imul
loope
sar
add
inc
sbb
dec
cwtl
je
mov
adc
inc
pop
dec
sti
inc
mov
xor
cs
aad
clc
mov
movsl
dec
pop
or
test
je
aaa
imul
fisttps
push
cmp
ja
gs
pushf
fwait
call
arpl
aas
loop
pop
inc
sbb
cmpb
push
xchg
divb
enter
sbb
sub
lahf
pop
pusha
mov
jmp
and
cld
cmp
test
dec
ret
add
push
scas
xchg
addr16
aam
movsl
or
test
or
dec
push
in
xor
sbb
xchg
cltd
jno
test
montmul
cmpsb
inc
sub
stc
add
add
add
in
loopne
or
sub
rclb
xlat
pop
mov
pop
repz
xlat
mov
pop
in
inc
sahf
roll
fucomip
jl
test
jns
and
movsb
hlt
mov
xchg
mov
dec
or
std
fisubrs
xor
push
adc
fistps
test
push
test
clc
stos
jp
mov
fcomps
test
ljmp
popf
lret
sbb
aaa
add
sub
lds
mov
cwtl
lret
movsl
xlat
sbb
sub
cmp
push
cltd
lods
inc
inc
loope
fisttps
mov
scas
pushl
sbb
clc
std
push
test
or
lahf
push
addb
bnd
dec
jle
out
mov
sub
stc
imul
jmp
inc
stos
xor
fdivs
pop
sbb
stc
mov
andl
inc
das
adc
mov
cmc
outsl
jns
stos
push
sbb
sbb
int3
fwait
pop
test
mov
mov
test
pop
xchg
cmpl
sbb
pop
sbb
out
enter
mov
jecxz
fstl
push
add
add
mov
sub
dec
mov
rorl
sub
xchg
add
in
int
subb
push
sti
dec
sbb
xchg
popa
popa
mov
mov
add
mov
cltd
mov
inc
add
push
decb
ret
popf
xor
out
push
lods
movb
ret
mov
inc
sbb
scas
pop
xlat
cmp
js
insb
push
dec
mov
loop
cli
xchg
test
mov
sahf
fldt
pop
fisubrl
rorl
outsl
cmp
sbb
leave
or
inc
xchg
push
insl
fwait
push
ficompl
cmp
call
arpl
pop
push
mov
sbb
add
push
rol
fsubs
sbb
stos
aas
inc
ljmp
xchg
lsl
mov
jg
imul
adc
iret
lock
out
add
addl
leave
sbb
add
stos
mov
jne
dec
movsb
mov
push
loop
ret
pop
ljmp
xchg
push
sub
mov
aaa
stos
xor
cltd
cmp
fistpl
repz
scas
cmp
jae
pop
add
addb
sub
adc
mov
cmp
inc
mov
sub
scas
decb
mov
mov
jge
inc
call
popf
scas
and
ret
mov
jno
dec
les
inc
scas
push
add
xchg
imul
mov
mov
push
sub
popf
push
sbb
mov
outsl
icebp
fwait
lea
flds
jge
andl
shr
mov
mov
and
inc
stos
sbbl
imul
into
xchg
packssdw
xchg
jge
fucomip
ss
sti
mov
hlt
mov
add
mov
cwtl
pop
and
fwait
jne
dec
mov
int
add
pop
xchg
pop
lods
cmpsb
mov
pop
stos
push
in
dec
mov
xor
pop
cmp
repnz
fidivrs
fnsave
or
or
test
fsubrl
mov
mov
pushf
add
popa
pop
xlat
imul
mov
push
movb
jbe
lahf
ficoms
pushf
fistps
ret
jg
xlat
mov
pop
push
jl
lret
nop
fsts
pop
daa
xchg
hlt
movsb
xchg
stos
clc
int
sub
ja
dec
sub
adc
aam
sbb
inc
test
inc
fstl
fisubs
clc
rcrb
cmpsl
fistl
jb
addps
adc
jbe
rcll
dec
sarb
repnz
inc
pop
addl
xlat
push
sbb
pop
stos
mov
cld
jne
aam
sti
icebp
out
test
repz
imul
flds
jg
xchg
xchg
inc
stos
sub
int
dec
cmp
out
cmc
xor
mov
lea
mov
ret
and
xor
ret
inc
mov
ja
mov
dec
popf
in
mov
sbb
aas
mov
rorl
movsl
ret
inc
cltd
nop
push
xor
sar
xor
mov
movsb
xchg
shl
sbb
dec
push
lahf
sub
js
in
xchg
mov
xchg
fcoms
out
stos
cld
xor
xchg
or
cmp
rorl
fstpl
xchg
mov
push
sbb
sub
rolb
pop
cmp
bound
in
mov
cltd
enter
popa
icebp
mov
sub
andl
adc
mov
xor
and
mov
add
cmpl
and
xchg
pop
test
lret
in
mov
inc
hlt
mov
enter
hlt
je
dec
dec
das
fwait
jns
fiadds
shrb
adc
movsl
xchg
cmpsl
dec
sbb
adc
repz
gs
fs
fucomip
daa
dec
popf
lret
popa
mov
adc
mov
add
dec
xor
popf
pushf
jle
xchg
lret
movsl
mov
js
fwait
lods
movb
jecxz
into
aam
inc
cmp
mov
push
or
je
push
cmc
cmp
cmp
dec
mov
fimull
pop
jns
pop
stos
jne
lret
mov
ret
dec
movsb
inc
sbb
cmpsl
ret
xchg
gs
jmp
popf
stos
mov
fcoms
clc
jb
adc
or
outsl
sbb
test
xor
pop
pop
add
shll
xchg
sbb
addr16
adc
cmp
imul
ret
sahf
sbb
dec
pop
adc
das
xchg
enter
hlt
je
in
fcoml
aad
inc
mov
das
loopne
push
dec
mov
jb
mov
sub
mov
mov
mov
fistpll
stc
mov
sbb
add
addb
sub
dec
fsubrs
or
scas
jno
dec
call
add
xor
mov
mov
fstl
jp
mov
lcall
repnz
adcl
pop
out
mov
jo
xchg
adc
jl
roll
test
ss
out
mov
pop
test
rclb
test
jns
pop
cmp
cmpsl
sti
adc
or
imul
outsb
out
add
dec
mov
sbb
cmpsl
xor
cwtl
dec
test
xor
mov
repz
push
hlt
mov
call
sbb
in
ret
mov
jb
add
mov
inc
stos
stos
cli
int
inc
sub
xlat
sub
sahf
dec
add
adc
mov
add
js
pop
movsb
jmp
shrb
xor
mov
inc
lock
jo
or
add
pop
cli
add
fs
fs
data16
imul
movb
push
sbb
push
dec
mov
popf
fists
cld
out
js
loope
jl
imul
xchg
cltd
nop
fsub
mov
nop
sbb
cmp
mov
and
dec
mov
ret
mov
sub
cmpsl
ret
xchg
std
aas
out
test
cwtl
add
or
data16
and
les
and
and
inc
shr
xor
inc
dec
pop
mov
mov
pop
testl
mov
imul
push
das
test
inc
push
xchg
repz
lret
xor
cmc
xor
mov
rorl
dec
add
jnp
aad
lds
pop
movsb
shll
lret
rorl
push
mov
pushf
mov
inc
sbb
push
mov
imul
stos
push
lods
jno
dec
call
or
mov
pop
test
es
pushf
cmpsl
dec
push
fucomi
and
pushl
jmp
cmp
xchg
dec
retw
push
fldt
jge
dec
jle
out
mov
mov
push
fisubs
xchg
mov
push
pop
cmpsb
push
xchg
xchg
cmpsl
repz
gs
lahf
out
testl
and
push
cwtl
hlt
inc
shlb
xchg
aam
mov
mov
rcrl
push
mov
shr
je
cmpsb
dec
pop
mov
mov
jae
test
sti
mov
jns
and
and
mov
hlt
xor
dec
dec
stos
fwait
jns
fdivp
movsl
adc
loopne
sub
popa
ret
stos
les
push
mov
inc
and
arpl
cli
scas
push
fucom
movsb
andl
ror
mov
pop
adc
ljmp
decb
xchg
mov
pop
inc
pop
mov
frstor
stos
fidivl
into
scas
jg
mov
add
xlat
loopne
sti
add
sub
inc
sbb
subb
imul
xlat
ja
lds
mov
stos
leave
or
inc
inc
mov
mov
test
or
jge
dec
sti
cmpsb
add
jnp
addl
mov
xchg
adc
dec
and
or
sbb
xor
imul
xchg
jge
jns
ds
mov
lock
adc
sub
dec
push
cmpsl
sub
sub
mov
fsubr
jbe
rcrl
xchg
lds
leave
insb
push
cld
mov
aaa
cltd
push
sub
imul
xchg
arpl
jbe
filds
mov
cltd
mov
jg
push
test
cwtl
lret
pushf
dec
and
adc
xchg
jbe
cs
mov
jge
xchg
loop
repz
js
ds
gs
jmp
dec
mov
sbb
lret
mov
xor
mov
lock
mov
aas
mov
jnp
enter
lea
xor
or
orl
test
dec
daa
xor
push
out
out
rcrl
test
xor
add
ss
and
xchg
movsl
sti
pop
scas
test
repz
in
inc
in
mov
stos
push
and
fwait
push
add
loop
jne
mov
adc
ret
pop
pop
xchg
pop
or
les
outsl
das
mov
cmpl
arpl
fsubrl
adc
mov
jno
xchg
and
cwtl
lret
movsl
ret
sbb
jb
mov
and
inc
pushf
mov
call
or
jo
or
leave
push
cmp
cs
and
stos
pop
icebp
mov
stos
xchg
lcall
fisubl
xchg
imul
jns
idivl
pop
fsubl
jge
dec
sti
cmpsb
add
jae
addl
or
mov
pop
andl
int
push
test
aaa
lods
divb
inc
mov
inc
repz
mov
out
ret
arpl
push
subl
or
outsb
imul
fimuls
cmpsl
sub
dec
sbb
sub
xor
mov
and
popf
lret
add
mov
add
sahf
ret
mov
cltd
mov
lds
adc
ret
popa
cmp
and
xor
lods
inc
and
lahf
scas
insb
pop
jmp
mov
loopne
push
test
dec
mov
pop
push
inc
imul
jge
dec
movsl
sbb
sub
and
or
push
jno
cwtl
mov
fwait
push
xchg
lret
jb
pop
fisubs
mov
push
mov
rcll
es
or
mov
or
addr16
les
int3
lcall
mov
jno
cmp
jae
mov
imul
das
test
add
orl
inc
sbb
inc
mov
dec
mov
rol
mov
pop
stos
add
dec
andl
xchg
pop
mov
mov
mov
dec
mov
inc
sbb
jnp
js
lock
cwtl
fsubrs
or
adc
jbe
xor
dec
inc
sbb
shrb
mov
xlat
call
jbe
mov
imul
push
inc
call
popf
scas
pushl
jmp
test
ret
add
push
addb
jmp
fiaddl
push
xor
mov
xchg
jmp
push
sub
fstl
fisubl
outsl
negl
call
mov
or
adc
pop
mov
push
mov
push
idivl
pop
loopne
fldt
imul
loop
lock
jecxz
out
adc
addl
leave
dec
mov
in
jne
cmp
rorb
mov
test
jo
fsubrs
push
in
dec
mov
xor
test
or
divl
lock
cs
mov
pop
add
inc
mov
dec
pushf
out
and
fwait
lods
sti
mov
sahf
dec
stos
mov
jmp
popf
fsubrp
jle
bnd
into
mov
sti
add
jno
dec
push
inc
fsts
push
cmp
fisubrl
sbb
sub
and
or
push
push
cwtl
cwtl
mov
fwait
push
xchg
fistpl
cmp
cmpsl
sti
lea
dec
xor
sbb
bound
pop
mov
or
dec
or
les
sub
xchg
into
and
mov
les
jp
push
test
xchg
iret
out
xchg
jecxz
push
mov
sbb
mov
pop
mov
daa
and
mov
push
pop
test
adc
pop
add
pop
xchg
pop
lods
xchg
push
shrl
push
call
sub
lahf
fucom
shll
add
leave
inc
sbb
test
or
mov
fsubrl
nop
push
hlt
mov
fisubrs
aad
jns
xchg
stc
shl
adc
xchg
jp
scas
pop
pop
mov
repnz
add
sub
inc
sbb
lret
or
sahf
pop
stos
ja
lret
inc
xchg
mov
push
sbb
cli
and
imul
lret
lahf
ficoml
test
xlat
pop
jae
mov
mov
mov
nop
dec
test
add
aaa
rclb
roll
mov
fwait
mov
jg
pop
cmpsl
pop
inc
ss
decl
add
jmp
clc
ds
in
fwait
mov
int
jp,pt
jecxz
mov
shr
scas
cmpb
dec
mov
mov
stos
mov
ja
push
test
test
stos
cmpsl
fildll
jnp
fldt
pushf
cmp
cltd
mov
popa
mov
add
enter
lret
cmp
sbb
shll
test
mov
jle
cltd
fstl
pop
cmpsl
xbegin
jno
jecxz
cmp
mov
xchg
push
pop
cmp
xor
cmp
xchg
or
dec
mov
cli
dec
lods
inc
insl
fwait
imul
jb
fwait
outsl
or
xchg
mov
inc
loope
and
or
rcll
push
rcll
int3
fwait
pop
xor
insb
mov
cmp
pop
adc
loope
pop
push
into
inc
mov
xlat
dec
ret
repz
and
xchg
dec
pop
mov
pop
push
or
sub
cmp
fadds
js
addr16
rcll
xor
adc
mov
cmc
mov
fbld
push
mov
push
adc
addl
iret
inc
sbb
pusha
sbb
xchg
fs
ficomps
mov
or
pop
bound
fwait
leave
cmc
xor
ljmp
and
or
or
imul
adc
mov
stos
fisttpl
inc
inc
mov
and
mov
mov
dec
xchg
out
call
shlb
insb
or
es
push
mov
jns
inc
ss
sub
and
push
or
pop
clc
mov
ret
loopne
pop
pop
addb
iret
push
xchg
in
dec
adc
loop
je
mov
mov
test
cs
xor
cmc
xor
outsl
pop
xchg
xchg
pop
test
mov
pop
dec
outsl
mov
fucomp
jae
jno
outsl
fucom
leave
mov
cmp
add
movl
or
subb
mov
icebp
fmuls
xchg
inc
pop
cld
ret
fstl
pop
cmpsl
data16
pushf
lods
jg
leave
in
mov
xchg
push
pushf
repnz
adcb
mov
xchg
fsts
scas
xchg
into
fdivrl
mov
outsb
daa
ror
jl
ss
jmp
mov
xchg
imul
test
mov
xchg
out
mov
sub
popa
or
jecxz
roll
dec
es
or
xor
clc
dec
shlb
push
idivl
jns
rcr
inc
scas
mov
imul
inc
jp
repz
jp
mov
jp
ss
enter
add
inc
ror
xchg
pop
push
push
inc
mov
sbb
xchg
mov
mov
and
jecxz
sbb
xchg
lahf
popf
push
push
or
lods
mov
jmp
inc
sbb
add
mov
dec
sbb
or
sbb
pop
and
popa
xchg
ret
sarl
adc
nop
pop
and
xchg
sbb
sbb
inc
sub
arpl
sub
js
jg
movl
mov
push
mov
xchg
test
mov
xchg
add
and
adc
xor
sti
test
mov
cltd
imul
scas
mov
xorl
mov
jne
andl
sbb
xor
mov
shlb
pop
in
pop
mov
repz
test
cmp
dec
inc
mov
mov
out
sti
mov
out
in
mov
je
test
pushf
out
leave
sbb
mov
jae
inc
sub
loopne,pn
jle
shlb
pop
test
mov
sbb
cli
mov
add
jp
fnsetpm(287
leave
mov
in
sub
add
rol
push
add
jbe
and
xchg
and
sbb
test
add
aas
lahf
scas
jg
sub
cmp
sahf
fidivl
ret
xor
addl
ret
jne
inc
adc
fisttpl
xchg
dec
lods
lods
dec
mov
pop
xor
inc
jge
imul
mov
test
bound
jmp
scas
cmp
popa
or
push
xor
jb
sarb
xor
cwtl
data16
xor
les
inc
mov
iret
jecxz
lds
aas
test
test
aam
mov
out
sub
sbb
adc
sub
mov
int3
imul
ret
push
mov
les
push
cld
cs
or
mov
adc
cmpsl
add
inc
sbb
or
cmp
mov
adc
xchg
and
adc
mov
xor
in
push
lods
movb
and
inc
scas
stos
jbe
lahf
aad
xchg
loop
jle
mov
jnp
jno
inc
imul
test
xor
xchg
enter
vsubss
roll
xchg
fwait
in
aas
adc
cli
push
lods
inc
insl
out
jmp
inc
and
mov
pop
push
and
mov
movsl
sahf
negl
rclb
repz
enter
add
mov
jb
and
or
jge
and
mov
mov
movsl
xchg
pop
push
dec
push
in
lcall
lret
jecxz
and
cmpsl
je
imul
rclb
inc
push
sbb
mov
cltd
mov
mov
jo
gs
in
xchg
in
stos
push
into
push
popf
lds
pop
adc
xchg
mov
sbb
push
sbb
dec
enter
int
inc
mov
or
mov
test
jno
dec
xor
mov
cmpsl
xchg
pushf
ret
add
pop
sahf
rol
pusha
pop
and
xor
enter
rcr
adc
pop
xor
mov
xor
xchg
adc
loop
cmpsl
stos
xchg
fistl
fisubrl
rorb
push
sub
aad
pop
adc
or
mov
mov
clc
loopne
xchg
mov
or
cmpsl
test
pop
movsb
mov
dec
test
stc
repnz
mov
mov
lcall
ja
lret
aas
jno
xchg
jl
lahf
in
clc
and
xchg
test
and
out
mov
cltd
pop
inc
stos
pop
sbbl
sarb
push
imul
inc
inc
lahf
mov
xor
std
cmpsl
dec
pop
test
push
or
mov
addb
mov
add
fsubrl
aad
sbb
adc
icebp
shrb
mov
aad
out
scas
call
lahf
fistps
or
jo
jno
inc
ret
bound
imul
mov
lock
movsl
adc
dec
mov
popf
lret
aam
sbb
test
xor
push
inc
inc
mov
fs
cltd
iret
xchg
cmp
mov
dec
xchg
add
mov
test
aam
data16
dec
aam
fstps
sbb
xor
mov
ret
lret
mov
movsb
push
jae
mov
iret
lock
adc
cli
fsubp
mov
cwtl
pop
cmp
adc
sub
into
jmp
out
ret
pop
jge
les
repnz
test
adc
push
pop
adc
sub
xor
jp
leave
or
movl
sahf
ret
mov
test
test
push
inc
sbb
mov
dec
out
push
sub
jne
adc
loop
sahf
scas
xchg
cld
jae
mov
scas
inc
ret
sti
or
jno
dec
and
push
inc
sbb
xchg
add
xchg
pop
stos
xchg
fwait
xchg
jg
or
fidivl
jp
jp
sub
test
stos
push
mov
fs
aad
add
xchg
mov
inc
in
and
or
loop
xchg
xchg
scas
xchg
adc
mov
popf
jbe
mov
mov
inc
sahf
shrl
mov
push
sahf
fldcw
or
push
adc
addl
leave
dec
mov
in
jne
cmp
rorb
mov
test
test
clc
mov
popf
mov
dec
lea
stos
fucomp
aam
push
mov
rorl
popf
sbb
push
cmp
mov
sbb
lret
fwait
ret
dec
adc
movsl
mov
xchg
cs
popa
jle
test
add
inc
stos
stos
jbe
lahf
aad
xchg
loop
jle
mov
jnp
jno
inc
imul
test
mov
xchg
ret
stos
xor
or
adc
icebp
pop
xor
xchg
mov
pop
movsb
gs
fld
mov
lea
mov
popf
dec
incl
mov
popl
fistpl
xor
mov
jbe
lods
lret
mov
inc
imul
jo
aas
out
and
and
sbb
mov
int3
mov
test
xchg
dec
test
imul
test
xchg
lods
dec
lods
ficoml
mov
sbb
popa
addr16
pop
jp
fnstenv
mov
mov
addb
sahf
rcrl
repnz
pusha
sub
adc
inc
pop
sub
inc
into
aam
inc
cmp
sbb
jmp
mov
cld
sbb
icebp
add
push
jl
cltd
repz
inc
sbb
xchg
fcomip
add
xchg
pop
aad
xchg
cli
inc
pop
pop
xchg
push
fistpll
pop
icebp
rclb
jle
cmpsb
fwait
stos
cmp
mov
cmp
call
xchg
lret
call
jle
inc
sbb
mov
dec
xchg
mov
pop
andl
int
push
test
aaa
lods
divb
movsl
xor
pop
les
repz
in
clc
and
mov
fsubl
adc
inc
dec
stos
inc
mov
lret
dec
adc
cs
sub
stos
mov
add
inc
outsl
xchg
test
sbb
push
mov
add
cmp
cmp
rcr
add
addb
xor
sub
add
jp
adc
ret
pop
cmp
cmpsb
xchg
jb
lods
pop
fyl2xp1
lds
sahf
rol
pusha
mov
repnz
xchg
loop
jg
mov
cmp
ljmp
adc
mov
adc
cmp
mov
les
push
xchg
mov
add
adc
pop
pushf
rolb
pop
aaa
pop
ret
fld1
gs
outsl
scas
ret
mov
push
push
mov
inc
aad
js
or
inc
mov
test
sub
sbb
pop
sbb
add
les
inc
mov
push
lahf
lds
cmp
lock
xor
xchg
jno
xor
dec
push
repnz
inc
mov
jmp
loope,pn
cmc
hlt
imul
sbb
lds
test
mov
xlat
mov
dec
arpl
xchg
arpl
sbb
adc
mov
add
cs
jg
enter
mov
inc
stos
xchg
jb
lods
mov
mov
lods
inc
sbb
aas
int3
fucomi
repnz
loop
sub
pop
sub
les
xchg
lret
xchg
mov
push
outsb
shrl
mov
adc
add
jbe
inc
sbb
cmpsb
jnp
enter
outsl
in
add
clc
inc
mov
clc
es
or
mov
inc
xchg
xchg
daa
xchg
xor
sbb
inc
cwtl
mov
out
mov
mov
inc
imul
iret
ret
xlat
lds
aas
in
cmp
xor
or
pop
sub
xor
push
adc
inc
sub
leave
jle
fldcw
out
cmc
adc
movsb
adc
sbb
and
lds
popf
test
xchg
xchg
cmp
xor
iret
fucom
leave
mov
negb
push
lcall
adc
lds
flds
mov
mov
js
fcoml
aad
xor
xor
pop
jmp
lods
push
jmp
stos
jl
or
cld
jo
test
lret
jo
movsl
sbb
add
imul
xchg
pop
xchg
es
mov
scas
add
imul
xchg
mov
inc
sbb
adc
add
push
mov
adc
mov
pop
loopne
stos
mov
mov
pop
pop
dec
or
jno
mov
sbb
lds
enter
push
adcb
loope
repz
lea
in
loopne
cmc
mov
mov
leave
leave
cld
leave
mov
stc
and
mov
dec
mov
mov
cmp
cmc
mov
incl
add
hlt
sbb
add
lahf
out
leave
iret
inc
mov
cwtl
dec
pop
jge
lds
inc
fdivrl
jecxz
xchg
scas
nop
add
js
xchg
jg
mov
ret
fdivrs
mov
dec
or
rorb
ja
sbb
pop
push
cwtl
inc
jge
jmp
rolb
mov
mov
fldenv
data16
mov
repnz
pop
xchg
popa
cmp
inc
sbb
mov
xchg
sub
stos
sbb
shrb
mov
sbb
stos
cmp
sbb
lods
std
fists
out
mov
inc
inc
mov
hlt
mov
daa
sub
inc
xor
js
push
dec
mov
adc
pop
mov
mov
sbb
sub
scas
xchg
push
stc
mov
aaa
sbb
inc
mov
add
shrl
js
hlt
mov
jbe
inc
leave
sarl
icebp
mov
xor
scas
push
add
inc
push
shl
adc
jmp
xchg
lret
iret
js
jle
cmp
icebp
push
jno
xchg
test
lods
stos
xchg
test
xor
xchg
dec
imul
std
xor
mov
inc
lcall
xchg
jg
push
stos
sub
repnz
and
cmp
cmp
mov
inc
shlb
inc
xchg
arpl
rolb
scas
adc
mov
shll
stc
mov
xor
jbe
fwait
les
jne
shlb
cmp
jno
pop
pop
iret
ret
sahf
adc
mov
test
pop
inc
push
mov
mov
cmc
clc
pop
pusha
loop
mov
cmp
sbb
fwait
mov
cmp
inc
sbb
sub
int3
stc
dec
push
sub
into
jo
mov
and
add
int
cmc
cld
or
ret
in
mov
jno
dec
xor
mov
in
pop
mov
add
pop
jl
arpl
jle
xlat
fucomi
in
jmp
fidivl
aaa
fmuls
jae
mov
stos
test
or
addr16
outsl
mov
xor
clc
pop
repz
insl
in
or
push
popf
fwait
stos
cmp
jb
outsl
xchg
xchg
out
cmp
loopne
ficompl
mov
sub
or
ds
cmpsl
mov
xor
adcl
pop
adc
or
push
ret
lea
sbb
mov
imul
xor
mov
ljmp
inc
hlt
xor
xchg
lea
mov
imul
sub
mov
sbb
cmc
dec
vpcmpgtb
sahf
lret
rcrl
call
imul
sbb
push
inc
cltd
nop
loop
xchg
sti
pushf
dec
and
mov
in
xlat
pop
test
mov
push
pushf
sub
sbb
xchg
jle
scas
cmp
jmp
test
push
sbb
lret
or
mov
shrb
xchg
icebp
push
ret
inc
insl
jmp
popf
stos
stos
cmp
aam
fsubs
xor
sub
jl
push
mov
pushl
rclb
dec
shll
pop
sbb
lret
arpl
lea
movsl
pop
in
cmp
and
lds
ds
mov
cld
and
mov
test
sub
sbbb
loopne,pn
push
mov
movsb
fisubl
sub
sbb
push
cmp
stos
mov
loope
pushf
fsubrl
adc
jbe
adc
mov
cltd
lret
cmpb
insl
sahf
or
mov
mov
push
mov
aad
mov
ret
mov
fdivr
sti
add
ret
add
sbb
jne
add
subl
xchg
xchg
icebp
cld
xor
inc
gs
cltd
push
push
mov
ror
loopne
jne
jns
sti
repz
sarb
js
fistl
popl
sub
xchg
xchg
mov
jp
xchg
aas
xchg
adc
mov
in
and
je
loopne
jno
mov
lock
hlt
mov
sbb
add
xchg
loope
jl
inc
mov
cltd
jns
aaa
clc
cs
cmc
xor
mov
or
lahf
lcall
movsb
leave
pop
dec
das
pop
mov
cltd
pop
std
in
ret
mov
neg
add
jbe
adc
aad
sbb
dec
inc
mov
leave
push
jmp
fisttpll
mov
fstl
mov
lahf
scas
jg
leave
loope
mov
leave
loop
shlb
cli
test
sbb
nop
xchg
imul
fsubrs
dec
mov
stc
aad
popa
mov
mov
movsl
cli
xor
push
and
retw
mov
fwait
ror
sti
repz
mov
add
add
clc
es
dec
aas
pop
lret
push
lea
mov
or
push
icebp
pop
mov
inc
add
cmc
fcomi
into
inc
sahf
fldt
orb
pop
orl
dec
push
adc
add
xchg
into
push
or
fisubrs
movsl
lahf
mov
adc
adc
mov
testl
repnz
stos
push
in
fisttpl
enter
int3
inc
dec
push
lret
shr
cmp
rcrb
xor
mov
repz
jbe
xor
dec
sbb
mov
movsb
add
pushf
and
adc
scas
push
mov
popf
fists
js
arpl
ss
add
and
jp
rorl
xchg
fistl
fisubl
fs
fidivrl
jge
inc
mov
int3
push
gs
insl
scas
rolb
xchg
xchg
pop
addr16
sub
test
clc
jb
adc
or
jge
and
jge
fwait
pop
mov
push
ror
int
pop
movsl
popa
enter
ja
lret
in
xchg
dec
add
hlt
movsl
jecxz
icebp
iret
pop
bound
icebp
mov
mov
mov
fdivrs
loopne
cmc
mov
mov
mov
jg
and
lds
mov
mov
mov
pusha
lock
sbb
rcr
cmp
mov
mov
sbb
and
mov
ret
dec
cmpsl
nop
push
hlt
xor
idivb
lods
jle
dec
shrl
jnp
inc
xchg
cmpsl
push
inc
pop
dec
cmp
popf
fimuls
sti
outsb
aas
jl
xchg
push
nop
fisubrl
xchg
dec
mov
dec
mov
add
test
mov
mov
fidivrs
cs
fdivrs
insl
out
xchg
mov
mov
mov
adc
mov
sarb
clc
mov
push
push
mul
or
sub
mov
push
xor
pop
hlt
push
inc
sahf
and
mov
pop
lock
ds
cmp
xor
je
test
push
add
mov
aam
mov
lcall
mov
inc
pop
lcall
mov
fists
jae
lret
mov
lahf
jae
gs
sub
add
test
hlt
sub
xchg
sbb
test
int
inc
cli
leave
test
fnsave
cld
lret
cmpsb
popf
inc
mov
sahf
sarb
js
xchg
jg
xchg
out
js
test
xchg
mov
or
aad
jl
rorl
or
stc
jp
jnp
ljmp
inc
loope
in
push
or
mov
xchg
push
outsl
ror
js
rclb
adcl
pop
push
js
pop
repz
addr16
adc
push
or
imul
int3
shl
push
sub
mov
repz
ds
aas
xor
mov
cwtl
insb
aaa
sbb
adc
inc
pop
push
inc
mov
sub
cmpsl
cmp
xor
mov
movsl
leave
std
mov
lahf
dec
and
rcrl
lahf
pop
sub
lods
xlat
cmpl
std
in
dec
add
cltd
jo
xor
lock
mov
jno
dec
xchg
jo
in
mov
sbbb
mov
lods
movb
xor
inc
pop
fstl
pushf
mov
gs
dec
pop
ljmp
lahf
adc
ljmp
sbb
nop
jp
and
cmpsb
sub
dec
mov
lds
adc
fstps
xlat
insb
imul
aaa
xchg
xchg
cltd
call
sti
xor
jne
cmc
loope
addb
push
inc
sbb
ret
insl
test
rcll
xor
pop
adc
sub
divb
popa
imul
ja
lret
push
adc
mov
sbb
xor
or
xor
sub
or
movsb
popf
out
inc
mov
sahf
dec
mov
mov
mov
push
lret
dec
popa
stos
sub
jmp
mov
movl
sub
mov
add
dec
push
sbb
fsubrl
cwtl
jae,pt
sbb
fs
jle
mov
cmp
inc
pushf
sbb
pop
je
int3
xor
mov
js
test
faddl
sbb
test
adc
lock
movsl
adc
sbb
add
and
add
and
lret
sub
popa
xchg
fld
fcomp
pop
aaa
xchg
xor
jne
dec
cwtl
push
and
sbb
or
imul
xchg
jg
mov
or
or
inc
divb
pop
push
dec
subl
adc
lret
hlt
movsl
jecxz
repz
cmp
enter
shrl
mov
popf
xchg
lds
pop
jno
lds
leave
inc
daa
xchg
imul
xor
std
fisttps
lret
rcrl
jo
or
lds
push
sbb
add
into
dec
xor
dec
inc
sbb
rorb
jnp
jns
inc
mov
lods
xor
cli
mov
mov
sbb
js
data16
roll
jl
ret
adcb
inc
outsb
cmpsb
sub
stos
mov
rcll
mov
pop
xor
push
push
fwait
testb
inc
fstl
mov
fsubs
sbb
pop
stc
aaa
ret
mov
js
or
inc
inc
pop
adc
flds
adc
aas
fsts
cmp
adcb
mov
imul
ficompl
mov
jns
and
es
add
cmpsl
aam
fistl
mov
loope
dec
dec
mov
pop
sbb
stos
dec
outsb
pop
mov
fisttps
dec
jecxz
jns
fldt
shll
adc
dec
inc
sbb
lods
or
aas
pusha
add
lret
inc
sbb
push
or
lahf
jbe
int
pop
xchg
jbe
scas
fidivs
push
pop
enter
js
popf
ficoms
inc
ret
pop
sub
les
imul
lahf
ficoml
outsl
xchg
std
xor
adc
add
mov
push
inc
popf
pop
stos
mov
mov
xlat
pop
stc
out
int3
inc
adc
lock
adc
clc
jb
mov
jns
dec
xchg
lock
int
inc
test
stc
mov
mov
imul
lea
data16
out
out
sbb
sub
call
adc
inc
and
sbb
add
sub
es
insb
xchg
dec
daa
cs
cmc
xor
in
adc
fldenv
mov
dec
pop
pop
inc
int
lock
iret
pop
inc
rcrl
pushf
fisubl
pop
lret
jge
lock
adc
mov
out
push
jbe
and
mov
pop
cli
sbb
cltd
sbb
sub
fs
push
inc
xchg
adc
out
inc
js
inc
jmp
cwtl
stos
int3
mov
xor
inc
scas
xchg
push
xchg
pop
push
fwait
xchg
push
addr16
push
fidivrs
lcall
mov
inc
call
shl
jnp
mov
andl
mov
or
add
dec
and
inc
les
fwait
pop
orb
ljmp
stc
pop
pop
add
pop
xchg
iret
xchg
mov
add
mov
mov
dec
dec
mov
enter
lea
xchg
enter
insb
aad
cld
sub
dec
ljmp
xchg
rcl
leave
ljmp
dec
add
jl
adc
jl
xlat
xchg
push
mov
and
mov
pop
cli
jns
fs
cmp
mov
enter
jmp
movsb
lret
iret
push
pushl
xchg
cmp
pop
or
daa
sub
dec
sbb
push
adc
add
mov
shlb
fdivrl
insl
stc
outsl
push
dec
test
mov
jo
rcll
inc
mov
add
out
and
xor
adc
dec
and
fdivs
int
pop
stos
shll
mov
aam
stc
pop
mov
push
lds
add
cmp
jmp
mov
inc
mov
inc
inc
mov
pop
fidivrs
jno
out
inc
adc
xor
cmc
mov
mov
dec
sbb
add
mov
jnp
lds
jge
flds
aaa
jae
fisubl
addr16
idiv
je
ret
arpl
fadd
inc
sbb
inc
inc
sbb
pop
ret
test
sbb
add
sbb
add
mov
scas
pushl
stos
rorb
mov
fadds
in
dec
cmp
cmp
xchg
mov
stos
std
adc
adc
adc
mov
call
sti
sahf
in
popa
jge
insl
or
cltd
sbb
rclb
ja
aas
mov
insb
xchg
and
fsubrs
fildll
test
inc
cwtl
dec
lods
push
xchg
cmp
loopne
in
cmp
mov
aam
stc
stos
into
sbb
ficoms
inc
sbb
rclb
ror
sbb
adc
inc
dec
fwait
xchg
sub
movsl
rcrl
push
mov
and
rcll
push
scas
push
test
std
test
and
in
dec
fldt
xor
lahf
push
lahf
pop
add
addb
xor
aas
sbb
lods
stc
jno
pop
int3
enter
leave
sarb
aaa
fldcw
cwtl
ja
scas
xor
cmpsb
lds
cmpsb
lahf
arpl
js
xor
or
inc
sub
inc
ret
adc
sbb
popf
inc
mov
mov
insl
push
add
fdivs
mov
xchg
xchg
cltd
enter
stc
hlt
lock
sub
xchg
popf
dec
adc
xchg
fisubrs
and
dec
mov
mov
sub
lock
inc
into
lcall
mov
movsl
xchg
rcll
inc
inc
mov
int3
sub
and
into
inc
sub
loope,pn
jge
gs
adc
inc
std
lods
lret
xchg
repnz
stos
push
in
mov
mov
aaa
dec
sar
loope
and
lcall
and
mov
mulb
into
jp
aad
inc
cwtl
mov
fs
roll
cld
lret
nop
fmull
pop
cmpsl
dec
push
fucomi
in
mov
mov
adc
les
cld
xor
add
and
test
push
lar
mov
xchg
scas
push
stos
xor
into
testb
movsb
push
lds
mov
or
sbb
addl
or
test
filds
aam
cmc
ret
in
outsb
pop
mov
mov
imul
ret
ret
xchg
jae
int3
pop
and
cmp
xchg
sub
cmp
jnp
xchg
cltd
push
adc
ret
pop
jne
les
sbb
cld
sub
aaa
stos
push
call
cmpl
inc
cmp
rcr
xchg
shlb
divb
aad
sbb
rcrb
sbb
cmpsl
and
les
jno
dec
popa
mov
and
js
jg
movsl
shr
cmpsl
xchg
fcoms
subl
es
or
dec
adc
xchg
fnstenv
xchg
sbb
fdivrs
jne
inc
rolb
jge
outsl
scas
inc
sar
mov
ret
nop
adc
xchg
subl
shll
mov
dec
xor
jp
push
jmp
rol
xor
jp
arpl
int
mov
in
mov
test
ret
sub
mov
cltd
ds
leave
cwtl
jle
and
outsb
or
mov
out
cmc
xor
mov
adc
mov
aaa
dec
inc
loopne
dec
push
dec
movsb
leave
lods
testl
mov
std
insl
aas
mov
mov
pop
add
mov
ss
add
pushf
inc
test
icebp
ss
aad
stc
in
pop
pushf
lret
mov
dec
insb
jp
xor
pop
je
or
js
arpl
test
lock
cld
jo
xchg
adc
xchg
outsb
sub
sbb
add
and
jns
inc
sbb
pop
cmp
std
bound
cwtl
out
cmp
cmp
dec
pop
add
push
push
dec
or
aas
les
xchg
and
mov
ficompl
test
ss
pop
call
push
cmp
mov
decl
movsb
dec
mov
xchg
dec
xorl
inc
jne
dec
movsb
xchg
xchg
xlat
mov
ret
pop
jne
test
mov
cld
sub
xchg
lcall
test
fs
fisttpll
lret
test
je
rol
dec
add
add
subl
cltd
sbb
inc
mov
mov
mov
pop
test
or
imul
lahf
jp
add
cltd
das
pusha
js
jno
inc
sub
jo
jp
add
iret
add
jg
inc
mov
daa
add
bound
pop
mov
inc
xchg
xorl
mov
data16
lea
cmpsb
fwait
dec
lahf
insl
lsl
call
in
data16
gs
andl
pop
inc
shlb
clc
xchg
test
mov
mov
mov
fwait
push
mov
les
add
mov
mov
in
out
sub
sbb
xor
aam
cmpb
es
sbb
jecxz
cwtl
sahf
inc
aaa
lock
popl
adc
dec
sbb
add
add
pop
lods
jecxz
sbb
mov
ja
fs
ror
dec
ja
leave
cmp
or
and
mov
add
lods
xchg
sub
jb
xchg
add
jecxz
lahf
ffree
pop
int3
aad
mov
in
cli
ljmp
leave
or
ret
pop
sub
mov
xchg
enter
xchg
cmp
xchg
adc
add
mov
fcompl
or
jae
stos
mov
repnz
sarb
or
aas
clc
jb
adc
mov
xchg
xchg
aas
data16
xor
ds
jne
les
push
fidivs
imul
sbb
pop
arpl
inc
stc
iret
sbb
in
shlb
hlt
sbb
orb
sub
xchg
adc
orl
push
and
test
inc
sub
sbb
into
insl
aas
lds
cli
dec
aad
and
scas
and
jns
cmpsl
mov
aaa
cmp
xchg
mov
dec
pushf
mov
dec
sub
and
push
int3
cli
jmp
pushf
ficoms
jge
bound
das
pushl
shrb
rorb
xchg
cwtl
data16
cwtl
sub
or
ja
lret
lret
mov
jp
mov
mov
fld
push
gs
scas
adcb
enter
adc
decl
push
cmp
mov
mov
inc
and
clc
data16
adc
ljmp
jecxz
push
add
shrl
mov
pop
lock
hlt
mov
xchg
mov
inc
sub
jmp
mov
push
dec
sub
push
mov
sbb
gs
cld
inc
cli
stos
push
ja
inc
in
lret
sbb
mov
pop
in
mov
addl
pushf
fisttpl
popa
push
arpl
mov
add
rclb
jecxz
ret
popf
sbb
jb
das
pop
push
mov
and
sbb
fsubp
mov
into
xor
repz
cmp
rcll
lcall
jge
dec
movsl
sbb
jl
fstpt
xchg
and
fidivrl
ficompl
push
jne
insl
and
jne
outsl
mov
orl
or
inc
sbb
xchg
inc
jns
cwtl
or
mov
adcl
out
pop
mov
mov
pop
loop
xchg
mov
fcom
lret
jmp
and
loopne
icebp
dec
add
mov
mov
fwait
push
mov
movsb
lea
push
sbb
std
push
dec
xor
jne
rorb
fisttps
les
lahf
xchg
pop
xchg
loopne
push
add
add
lret
pop
ljmp
dec
xor
popa
xchg
xlat
push
rcrb
lcall
mov
and
sbb
adc
bound
scas
pushl
or
movsb
xchg
test
dec
mov
mov
jge
lret
sub
add
pusha
mov
xor
xchg
sub
popf
and
xor
and
nop
data16
dec
loop
arpl
movsl
js
jmp
dec
mul
call
mov
xchg
xchg
mov
sarb
jae
mov
or
fsubs
sbb
pop
iret
fucomip
and
mov
insb
repnz
mov
ret
mov
fildl
test
enter
inc
sub
loopne,pn
aad
lret
mov
rorl
pop
adc
lds
mov
cld
ss
sbb
repz
gs
divb
push
push
or
push
sub
nop
arpl
insl
mov
xchg
adc
stc
shrb
test
fdivrs
ret
int3
mov
push
leave
loope
lret
jg
mov
and
xor
les
push
cmp
dec
addb
jo
pop
mov
push
fwait
sub
fdivrs
pop
sbb
inc
jge
imul
orl
ds
push
mov
mov
fld
idivl
sbb
cwtl
add
sarb
fcomps
test
dec
mov
push
adc
adc
add
dec
ljmp
adcl
xlat
int
sub
call
out
inc
test
ret
jp
xchg
adc
inc
pop
jp
mov
mov
sub
jo
sub
aaa
sub
popa
ss
fnstsw
test
jb
clc
test
iret
fidivl
inc
sbb
ret
int
inc
sbb
imul
ret
popf
sbb
jb
mov
jno
lds
mov
fsubl
cmpsl
mov
js
jle
das
fcomip
dec
cmc
and
and
scas
dec
mov
or
dec
test
mov
ja
dec
fnstenv
xchg
hlt
push
sbb
cli
jae
push
jne
in
lea
cmp
popf
jp
cmpsb
add
andl
es
dec
pop
rclb
dec
shll
mov
sbbb
mov
dec
jge
dec
add
mov
jnp
std
sbb
in
or
pop
call
sbb
add
add
insb
mov
dec
mov
sbb
fcoms
cs
out
push
lods
push
push
clc
test
ja
add
jg
cmp
jo
mov
sbb
lds
push
lret
test
push
repnz
push
mov
jne
jae
ss
sbb
pop
cmpsl
push
lahf
dec
cmp
dec
jecxz
js
arpl
test
lock
push
and
in
imul
mov
pop
jge
mov
pop
scas
loopne
pop
fidivrs
jnp
clc
gs
in
out
es
mov
pusha
sub
subl
pop
pusha
push
or
add
and
test
sbb
adc
add
cmp
mov
sbb
pop
cmp
lods
cmp
jne
in
xchg
fcomip
sti
jnp
mov
fldl
mov
mov
loopne
pop
fwait
dec
lret
cltd
mov
mov
sbb
sub
adc
xor
ljmp
aaa
stos
jecxz
dec
sub
push
mov
dec
sar
cmp
sbbb
lock
mov
iret
inc
sbb
fdivrl
mov
pushf
dec
hlt
lret
jb
lods
jle
jp
cmp
mov
ficoms
jg
cs
stc
cmc
and
jo
test
cmpsl
push
icebp
cld
mov
xchg
or
pop
dec
shrl
pop
push
fnstenv
in
inc
jge
sbb
xchg
mov
cmpsl
sti
fsubs
sti
repz
flds
loope
lea
loopne
jb
movsl
loopne
aam
jno
dec
test
dec
sarb
inc
mov
add
ret
popa
push
mov
imul
lcall
xlat
dec
ret
fiadds
jnp
mov
pusha
add
inc
mov
sbb
lea
add
out
aad
cmp
pop
stos
push
and
lds
sbb
sub
lret
test
xchg
je
ret
inc
sbb
das
dec
mov
cmp
xchg
or
into
xor
aas
rcrb
mulb
nop
mov
add
xchg
xor
aad
ret
push
cmpsb
add
mov
loopne
dec
sbbl
ret
sbbb
dec
push
mov
push
test
stos
std
fmuls
cwtl
rclb
imul
inc
sbbl
xchg
inc
call
jnp
stos
bound
inc
addl
fmuls
fcoms
xchg
mov
xchg
mov
xchg
xchg
mov
dec
loopne
in
cmp
mov
aam
sti
pop
push
inc
push
lret
jae
adc
ret
ret
inc
leave
inc
push
or
leave
cwtl
pop
and
movsb
push
je
movsb
popf
mov
adc
ret
pop
jge
rcr
cmp
fldenv
jno
lds
inc
sti
mov
fs
stc
mov
mov
je
ret
inc
sbb
and
dec
inc
sbb
inc
dec
arpl
aam
cltd
and
cmpsb
ret
sbb
and
mov
xor
cmp
pop
jl
pusha
add
push
pushl
jmp
loope
push
sbb
ret
or
dec
push
xor
lcall
jne
cmp
in
jmp
cli
jae
push
jne
in
lea
pop
fisubs
push
lds
inc
rcrb
add
inc
and
pop
mov
popl
ret
xchg
sub
or
ficoms
mov
int3
push
pop
lods
pop
add
ljmp
xchg
pop
push
iret
ret
sub
ret
mov
addl
mov
cmp
cmp
mov
popf
xchg
xlat
mov
roll
sbb
arpl
mov
add
cltd
mov
icebp
arpl
fisttpl
lret
rcr
mov
test
pushf
add
add
imul
ret
inc
xchg
mov
lock
icebp
mov
xor
lret
push
movsb
lds
inc
pushf
xor
lret
fistps
repz
gs
mov
mov
or
sbb
stos
jge
dec
movsl
or
pop
addb
fsubs
add
and
lret
sub
fisubs
jo
out
bswap
lds
in
in
andl
test
dec
cmp
in
dec
aam
stc
je
mov
adc
add
mov
sbb
pop
sbb
cmp
ds
mov
mov
hlt
or
inc
ds
dec
inc
mov
fcomps
xchg
push
dec
mov
leave
pop
out
sub
rcll
movsb
push
cld
mov
in
int
rolb
pushf
pop
lret
add
mov
jbe
add
roll
enter
or
ret
inc
test
icebp
ss
aad
push
in
jle
cltd
lds
mov
mov
xor
push
pop
xchg
mov
sahf
fcoms
movsl
test
nop
pop
dec
push
mov
xchg
stos
std
cld
pop
popa
sbb
or
xchg
sahf
xchg
fcom
fwait
movsl
lret
call
pop
jae
gs
insl
mov
mov
pop
sub
or
loopne
sbb
clc
fmull
sarb
xor
mov
pop
mov
stc
test
xor
pushf
jne
aam
sti
pop
pop
inc
xchg
loop
jae
mov
inc
jnp
mov
inc
in
xchg
enter
aam
dec
xchg
jmp
xchg
mov
mov
cltd
pop
cmpsl
xor
outsb
out
les
inc
clc
stos
jb
mov
mov
jae
lret
int
sbb
rcrl
sbbb
mov
push
lret
aad
fdivs
dec
and
mov
cwtl
dec
rcrb
adc
fs
fimuls
cltd
aad
mov
lods
in
mov
loop
and
push
cmp
ret
add
pop
xchg
lret
or
inc
sub
ja
test
sub
mov
add
push
in
xchg
repz
push
sbb
xchg
call
xchg
enter
popa
or
and
mov
jns
cmp
push
mov
add
pop
adc
add
ret
jmp
pop
adc
push
lret
pop
mov
shll
mov
jae
and
mov
cwtl
es
pop
pop
xor
or
jmp
adc
pop
das
adc
mov
ja
inc
ljmp
cli
sub
lahf
mov
mov
je
mov
sbb
popa
stos
lock
ror
inc
sbb
cmpb
adc
sbb
sarb
xchg
xchg
fcoml
mov
fstl
cmp
and
test
ss
nop
std
movhps
ret
mov
xchg
adc
pop
sbb
xchg
fistl
cli
sub
aam
cmp
aad
jns
loop
pop
fsubl
jnp
sbb
pop
fsubl
js
popa
or
lret
add
arpl
rclb
rorl
sub
mov
add
xchg
into
fbstp
dec
scas
mov
xchg
iret
cltd
fsubs
xchg
push
xchg
dec
in
mov
lret
nop
int3
mov
dec
push
and
dec
dec
mov
fcomps
dec
mov
sbbb
ss
sub
cmp
sub
cmc
sbb
inc
fldt
mov
add
mov
push
mov
insl
sbb
imulb
in
dec
mov
jecxz
lret
aaa
pushf
and
jbe
arpl
fidivl
jp
lods
rorb
pop
jecxz
pushf
repnz
pop
test
pusha
shlb
icebp
cli
jns
test
push
stos
sti
bound
lods
push
movsb
jp
cwtl
push
adc
call
ja
idiv
les
pop
mov
inc
shlb
andl
pop
inc
cmp
mov
dec
cmp
negl
xchg
fmuls
xor
sub
pop
les
pop
mov
imul
jecxz
int
add
in
and
lahf
lret
jecxz
out
adc
inc
sub
inc
inc
mov
sbb
adc
shr
mov
sbb
xlat
adc
push
stos
mov
pop
test
push
adc
xor
mov
push
in
pop
mov
fucomp
jae
jge
push
mov
imulb
mov
sub
mov
inc
sbb
insl
cwtl
ret
jne
cwtl
lret
movsl
mov
ss
pop
or
mov
lods
inc
sbb
das
pop
mov
in
lds
fwait
leave
loop
add
nop/reserved
or
or
bound
adc
mov
jp
pop
push
jmp
inc
fnstsw
ret
fld
clc
les
jb
rcrb
subl
shrb
test
dec
cmp
fsubrs
sbb
dec
sub
mov
mov
les
std
fstl
add
mov
dec
or
add
push
hlt
fadds
inc
ds
dec
sub
sbb
xor
movsb
adc
pop
add
adc
shlb
mov
dec
jmp
rcrl
adc
aad
ja
cld
jmp
vpsubd
cltd
lret
movsl
mov
rcrb
push
mov
lods
pop
gs
subl
pushf
sub
std
push
and
or
mov
cmpsl
imul
pop
jno
push
push
pop
lcall
xchg
dec
cmpsl
sub
mov
mov
pop
scas
push
test
sub
fnstcw
inc
mov
xchg
sbb
pop
pop
call
adc
cmpl
test
mov
jo
pop
cltd
js
int
or
mov
popf
std
inc
inc
xor
shll
mov
mov
iret
jl
in
icebp
inc
inc
mov
cmp
pop
out
stc
jb
test
and
mov
mov
dec
daa
adc
or
mov
cmpsb
rorl
mov
test
leave
sbbb
mov
and
mov
popf
in
mov
dec
or
nop
cmp
dec
div
and
mov
pop
dec
icebp
fisubrl
sbb
sarb
fs
fcoms
lahf
loop
dec
data16
jnp
cmp
cmp
adc
jle
das
mov
stos
insb
push
cmp
sbb
mov
mov
pushf
cmpsb
loopne
push
mov
xchg
jno
jp
clc
lods
xlat
insb
imul
ja
or
mov
ret
popf
xor
add
loope
shlb
jo
rolb
jp
mov
or
jae
pop
insl
cmc
inc
inc
mov
mov
loopne
fdivrl
xor
adc
jne
inc
inc
mov
sahf
cmpb
or
shlb
dec
in
inc
xor
int3
mov
sub
inc
fadd
sub
decb
std
lods
dec
add
loop
mov
or
adc
dec
mov
in
mov
aam
sbb
cmp
dec
jo
sbb
add
sbbb
sub
sbb
mov
jl
push
inc
sbb
fiadds
fucomip
xchg
push
sti
ss
cld
pop
cmp
add
push
repnz
push
push
adc
addr16
pop
cmp
inc
mov
inc
lcall
fucomip
gs
jb
mov
js
pop
js
js
idivl
push
push
pop
sub
jo
rcrb
push
aam
data16
cmp
inc
inc
jbe
popf
xchg
pop
or
lea
jg
enter
inc
iret
fucomip
repz
mov
call
je
fwait
addb
hlt
jl
adc
jne
imul
loope
xor
pop
das
sub
int
push
lods
test
test
inc
mov
pop
adc
mov
ret
xor
inc
sub
add
mov
sbb
jmp
addr16
inc
or
push
cmp
add
inc
mov
fildll
iret
pop
mov
dec
paddsb
loop
xchg
int
outsb
push
mov
push
push
mov
outsb
imulb
mov
pop
jmp
lods
mov
out
imul
jne
outsl
push
inc
data16
popf
sbb
pop
aas
cmpsl
push
sbb
jl
pop
clc
je
std
pushl
adc
daa
xchg
int
mov
inc
addr16
cltd
cmp
add
arpl
mov
enter
inc
ja
sbb
pop
add
cmovle
sbb
sub
xchg
aam
cmp
cltd
fwait
int
imul
enter
push
dec
xor
xor
xchg
xchg
jle
mov
lret
fucomp
fs
mov
fdivrl
in
cmp
ja
pop
rcll
mov
add
pop
ret
adc
mov
outsl
sub
scas
cmp
sub
mov
and
or
mov
pop
insb
push
repz
cltd
and
outsb
push
pop
sbb
push
dec
cmpsl
push
jne
add
push
push
lods
xlat
push
call
xor
and
fisubl
fs
sbb
aaa
popf
iret
adc
nop
cltd
cmp
in
divl
mov
sbb
add
daa
daa
repz
dec
sbbl
xor
fstl
xor
test
pop
mov
ljmp
mov
sbb
in
jnp
mov
sbb
sarb
mov
hlt
xchg
xchg
xchg
aad
adc
cs
cmc
fiadds
shrb
dec
jb
or
adc
aaa
mov
jne
aam
dec
pop
or
adc
dec
mov
in
jp
xlat
pop
dec
aaa
or
cmp
mov
mov
pop
dec
inc
neg
and
stc
pop
dec
mov
jl
outsl
dec
fcompl
pop
and
lahf
jp
sub
and
in
push
aas
pop
clc
ss
jbe
sbb
pop
repz
pop
mov
lea
dec
cmpsl
push
ja
test
pop
fstpt
xchg
fcoms
mov
gs
insl
push
dec
xchg
enter
jb
sti
xor
dec
adc
sub
rcll
es
sub
adcb
call
xor
jge
jmp
into
ss
and
mov
loopne
jns
jb
mov
cmp
loope
out
je
fcoms
inc
mov
lea
sub
orb
nop
les
jno
lds
sbb
test
js
iret
push
test
cld
imul
aam
jg
in
ja
loope
dec
sbb
or
inc
cmp
fcmovnu
outsl
dec
outsl
mov
ja
sub
ja
cmp
add
or
mov
pop
insb
push
ja
imul
cmp
push
jne
dec
xchg
shll
outsl
or
xor
imul
pop
cmc
fmuls
sti
cmc
clc
popf
iret
js
pushf
pop
xor
in
idivl
add
idiv
and
pop
ds
jle
insb
andl
and
fdivr
or
inc
lock
or
add
femms
pusha
xor
dec
addr16
int3
add
ret
mov
inc
xor
inc
mov
jg
imul
add
mov
lret
loop
stos
cltd
sbb
xor
and
add
bound
dec
aaa
mov
pop
dec
shlb
fwait
cld
jg
or
adc
add
and
aaa
stc
pop
inc
movsb
push
sub
stc
in
adc
mov
push
xchg
and
cmp
cltd
mov
outsb
push
sti
in
jge
stos
sbb
xchg
dec
pop
stos
xchg
stos
std
mov
pop
scas
push
std
inc
les
and
and
push
push
rol
xor
movsb
aas
lret
int3
test
or
add
jmp
xor
xchg
int
scas
lds
inc
xor
mov
mov
inc
mov
addr16
dec
jecxz
pop
mov
jecxz
dec
mov
je
imul
push
or
mov
sbb
dec
dec
mov
sbb
imul
out
jne
dec
dec
xchg
push
hlt
sub
pop
cld
lret
mov
push
sbb
sbb
aaa
lahf
stos
push
cmp
dec
pushf
mov
inc
sbb
xchg
and
test
aaa
mov
sbbb
arpl
insb
inc
jmp
pop
xchg
lcall
inc
pop
jge
inc
dec
js
xchg
xchg
jo
inc
test
inc
or
les
mov
dec
and
scas
fnsave
mov
roll
mov
add
jge
and
cmpsl
movsb
add
mov
shlb
sti
mov
in
jo
lods
shlb
jb
cmp
es
sub
dec
test
fildll
mov
cmc
pop
ss
add
out
les
mov
out
and
and
jae
xorb
daa
enter
xor
and
push
sub
and
push
lret
cmc
hlt
jmp
add
test
push
bnd
leave
test
in
mov
xchg
pusha
mov
clc
aaa
push
mov
and
sbb
xor
mov
mov
mov
inc
imul
lds
fisttpll
fildl
sub
xor
xchg
cld
add
sbb
and
fcoms
addr16
push
daa
sub
pop
cs
lock
movsl
adc
jl
fstpt
inc
cmp
cmpsb
loopne
pop
fidivrl
sti
xor
jb
sbb
sbb
mov
dec
test
inc
inc
cmp
xchg
gs
inc
mov
jno
fwait
xor
popl
mov
mov
adc
pop
adc
lock
cmp
sahf
repz
mov
or
daa
loope
hlt
mov
xchg
test
push
mov
xchg
inc
rcll
mov
cmc
mov
add
xchg
lahf
inc
arpl
xor
cmc
movsl
int
add
incl
pop
pop
in
mov
lcall
inc
pop
adc
jmp
sbbb
hlt
mov
into
lcall
icebp
mov
sub
push
mov
fsubp
jp
js
jg
xor
icebp
stc
cmc
and
jmp
jae
inc
push
cmp
ret
adc
dec
dec
push
enter
or
xchg
cmp
cmp
jae
push
popa
xchg
insl
or
cmp
mov
xchg
stc
out
loopne
inc
mov
jl
arpl
setp
cwtl
clc
daa
or
popa
dec
dec
dec
mov
aam
pop
pop
dec
adc
int
pop
movsl
popa
fdivrl
stos
mov
jae
adcl
jb
int3
inc
cmp
sbb
in
std
mov
mov
ret
pop
imulb
stc
push
pop
std
mov
aaa
lret
jno
cs
mov
sahf
das
xchg
stc
cli
in
cwtl
roll
add
xchg
push
mov
test
push
negb
aad
inc
cwtl
dec
rcrb
ret
popf
faddl
int3
scas
decb
pop
shll
xchg
push
sti
sbbl
dec
addr16
jp
sub
pop
ja,pn
mov
leave
jl
fstpt
enter
jmp
popl
pop
stos
xchg
in
movsb
or
insl
or
cmp
rorl
push
cwtl
les
aas
jae
and
mov
mov
out
test
adc
out
dec
les
xchg
pop
sti
mov
mov
or
sub
out
mov
mov
fidivrs
rcrl
fists
or
inc
push
fimuls
dec
inc
mov
rorl
adc
loopne
test
lea
push
dec
push
movl
inc
sbb
cmpsl
dec
rcr
xor
add
pop
add
nop
shlb
rclb
cmpsl
mov
jbe
push
pop
mov
mov
and
sub
std
ret
push
xchg
sbb
movsl
lods
pop
popf
cmc
jmp
es
test
test
inc
pop
inc
lret
or
or
or
or
push
jmp
mov
xor
popf
mov
pop
fmulp
call
mov
add
gs
cld
rclb
fmull
rorl
mov
call
pop
mov
lret
popf
push
xor
pop
in
push
fidivs
sbb
pop
rol
push
jae
mov
dec
adc
loop
call
add
sbb
movl
inc
cmpb
or
pop
push
xor
mov
cmpl
push
movl
pop
movsl
clc
dec
mov
lcall
jo
dec
fnsave
cmp
dec
lds
add
mov
sub
dec
pop
cwtl
jbe
xor
shrl
loop
icebp
adc
and
add
mov
mov
add
dec
xchg
rorl
sbb
mov
lock
fidivrl
lock
push
insl
cmc
insl
or
mov
mov
pop
pop
out
les
xchg
movsb
xor
or
sbb
movb
cwtl
in
or
xchg
adc
data16
xor
and
or
or
in
mov
movsl
test
pop
roll
jo
ret
sahf
cmp
dec
mov
xor
loop
in
sub
rcl
cmp
cs
jne
dec
mov
lods
dec
pop
les
push
and
les
sbb
mov
lahf
dec
pusha
cmc
mov
fisttps
jo
leave
adc
inc
ret
sbb
inc
pop
ljmp
inc
test
shl
stc
and
rcrl
cmp
dec
test
mov
int
loope
jg
or
scas
fcoms
cmp
ret
mov
xchg
add
mov
mov
xor
mov
mov
adc
mov
xor
push
pop
out
inc
mov
enter
cmove
xchg
adc
mov
sbb
xor
call
pop
mov
arpl
int3
bound
lods
imul
loopne
sbbl
jns
mov
cltd
cltd
add
test
inc
mov
mov
sub
mov
mov
lahf
mov
jns
lds
mov
dec
sbb
xor
pop
cmp
loop
add
das
jo
cltd
adc
inc
ret
sbb
jne
mov
fsubrl
adc
ret
pop
xchg
lods
jns
mov
mov
jecxz
mov
dec
test
mov
jno
mov
jge
aas
repz
out
xchg
popa
nop
mov
xor
mov
or
or
fiaddl
inc
dec
lds
fstpt
add
in
fdivrs
cli
jae
ror
inc
push
or
idiv
sti
jae
popf
jmp
test
push
adc
fwait
andl
test
push
sarb
pop
jb
and
aam
fistpl
inc
test
data16
sbb
movsl
dec
clc
cmp
mov
lods
negl
ret
fstpt
mov
cltd
cmp
cmp
je
aad
sub
cmp
dec
mov
cs
aad
imul
mov
push
lds
sub
and
xor
mov
mov
popf
lret
inc
ret
mov
mov
add
out
mov
push
xor
cmp
mov
enter
fldt
mov
stc
addr16
sbb
cli
das
icebp
add
inc
fcoml
sbb
fsts
cmp
xlat
ficoml
add
xor
mov
aam
lahf
add
mov
fisubs
daa
dec
pop
xabort
pop
mov
jne
in
arpl
lods
shll
gs
loop
xor
cwtl
dec
and
jg
dec
and
ljmp
jle
adc
mov
rcr
bound
in
adc
adc
adc
orl
push
hlt
pop
movsb
xchg
xchg
jg
adc
pop
pop
jge
in
test
jo
sbb
mov
push
push
std
xlat
dec
pop
shr
pop
cmp
rcrb
xor
mov
push
xchg
or
xor
dec
xor
ror
push
aad
jns
or
mov
cmp
push
subb
xchg
mov
js
jg
xchg
inc
test
or
sbb
lret
or
sub
dec
ja
push
fidivs
jl
xchg
les
xor
jae
push
insl
jmp
mov
xlat
pop
jle
call
js
fwait
xchg
jmp
inc
dec
adc
or
pop
rcll
pop
data16
xor
jbe,pt
fcmovnb
mov
inc
sahf
sti
imul
dec
cmpl
push
ret
fstpt
mov
cltd
mov
xor
cwtl
fisubs
cmp
daa
pop
sbb
rcl
stos
add
push
sub
test
fbstp
div
fldenv
sbb
stc
lods
add
xor
sbb
fnsave
test
fnstsw
pop
sbbb
sbbl
mov
pop
shlb
xor
jno
les
xchg
adc
pushf
inc
stos
leave
jl
dec
les
mov
xchg
add
xchg
add
sub
cmp
sbb
or
inc
adcb
insl
lea
stos
gs
out
lods
ret
vcvtpd2psy
add
and
mov
rcr
jnp,pt
cmp
in
mov
adc
cmpsb
cmp
xor
repz
xchg
jb
mov
push
stos
cmpl
jae
mov
pusha
jnp
jae
jg
repnz
jb
lret
push
or
int
mov
lret
inc
push
fsubr
loope
nop
mov
sti
mov
and
mov
std
and
stos
insl
bound
inc
xor
mov
jge
ret
mov
fldt
cmpsl
mov
mov
divl
mov
cmp
arpl
mov
sub
inc
out
repnz
sti
pop
pop
fildl
jnp
jne
sub
dec
gs
test
xchg
and
aad
into
mov
or
fisubrl
mov
push
push
cmc
movsb
in
addr16
sub
arpl
ja
addr16
loope
icebp
rcrl
add
push
jl
cltd
sahf
mov
mov
sti
aad
mov
xlat
mov
mov
mov
fs
mov
imul
shll
jno
pop
mov
jns
push
and
jl
jb
rcll
cmp
push
int
and
push
leave
push
movsl
cmc
mov
dec
sub
jge
push
test
test
mov
pop
ffree
mov
pushl
dec
mov
mov
adc
adc
popa
mov
and
int3
test
testb
das
push
mov
sbb
pop
pusha
pushf
dec
xchg
jp
lods
ret
mov
jecxz
cmp
data16
out
add
es
cltd
fnsave
pushf
stc
in
jnp
dec
push
stos
cli
cltd
pop
adc
push
pop
scas
enter
pop
lods
or
xchg
stc
sbb
and
fadds
cmp
cmpsb
sti
cmpsl
and
adc
js
or
out
or
aad
ds
pop
shl
das
test
mov
adc
fcoms
xchg
lds
ret
or
mov
xor
fisttps
nop
int3
xor
xchg
inc
shlb
pop
push
test
aaa
adcl
cmp
jne
inc
movsb
sub
aaa
and
ret
push
ror
in
mov
cld
outsl
rcl
cltd
divl
clc
sub
out
mov
fyl2x
inc
data16
inc
inc
dec
js
in
adc
and
adc
loope
nop
jno
lods
test
rolb
lods
add
lret
orl
add
in
loop
rol
test
roll
mov
lea
clc
push
lcall
jae
fnstenv
xchg
dec
mov
cmp
cmpsb
jnp
sarb
mov
bound
xchg
in
sub
popf
std
aam
es
cmp
mov
cmp
mov
fwait
push
mov
repnz
sarb
cmp
movsl
dec
call
mov
repz
jge
cmp
stc
je
or
xchg
pop
inc
stos
in
pop
xchg
xchg
jae
lcall
cmp
jl
idivb
cltd
lret
lcall
sbb
xor
pushf
fucom
loopne
das
arpl
stos
repz
adc
add
addr16
fdivrl
ret
inc
rcrb
movsb
cmp
jo
lret
lods
and
lahf
fistps
and
sti
lret
pop
into
lret
fs
jmp
cmp
ret
xchg
mov
stos
or
mov
pop
stos
dec
lds
jg
gs
popa
sbb
xlat
pop
test
sub
dec
jecxz
repz
js
add
ret
push
jl
cltd
cwtl
fwait
orb
shll
mov
ss
sub
shrb
lds
loope
mov
ret
pop
sbb
jo
cli
insb
into
rcr
add
add
cwtl
add
and
cmpl
mov
xor
out
add
outsb
mov
xchg
push
fs
mov
aas
mov
sub
dec
sub
shlb
repz
inc
sub
jle
repnz
inc
scas
lock
or
inc
sub
adc
inc
lods
icebp
mov
js
push
jnp
shrb
cltd
int3
dec
add
inc
jne
xor
or
inc
cld
in
loop
rol
test
ret
add
mov
jge
dec
push
pop
dec
gs
fidivl
fsubs
mov
lods
inc
stos
pushf
lods
inc
imul
arpl
das
outsb
arpl
aad
mov
push
daa
xor
sti
in
sti
imull
rcr
jp
jg
shrb
inc
rcrl
into
clc
add
jb
sub
cmp
cmp
adc
pop
fcompl
cmp
and
lock
leave
push
jle
mov
jno
shl
mov
in
xor
pop
shlb
stc
outsb
mov
lret
xor
rclb
xchg
inc
out
aas
aad
aas
rorl
adc
sub
xor
adc
loopne
aam
pop
pop
add
push
int3
dec
mov
jno
inc
and
mov
cmp
les
sub
push
mov
ljmp
hlt
repnz
sbb
outsb
jno
jmp
xchg
cmpsb
and
je
out
xchg
dec
out
add
sahf
push
std
aad
cs
xor
fldenv
inc
imul
jb
insl
fbld
xchg
jno
mov
andl
mov
xchg
test
jb
cltd
aad
mov
popa
rcrl
idivb
pop
mov
jno
pop
ds
mov
mov
ret
inc
enter
popf
add
add
in
inc
mov
mov
sbb
outsb
mov
aas
adc
movsl
ds
js
divl
insl
cmpsl
aas
test
out
mov
jb
jo
or
loopne
push
adc
dec
add
aaa
adc
in
cmp
cwtl
dec
xchg
cli
cmp
stos
xor
jmp
xchg
cs
fnstsw
jp
xchg
xchg
and
out
sti
cltd
lcall
cltd
sbb
xorb
push
mov
xchg
into
jno
inc
mov
or
cmp
mov
out
outsl
jg
lds
dec
push
insl
jg
jmp
rolb
repz
loopne
test
scas
mov
lods
cld
xchg
repz
adc
jmp
rorl
xchg
lcall
mov
push
fisubs
jae
mov
sbb
or
ret
mov
adc
inc
shr
mov
nop
inc
and
cmp
mov
pop
sub
sbb
push
roll
lret
lea
mov
psubw
xchg
mov
push
orb
xlat
scas
enter
push
or
lret
xchg
dec
jno
jmp
mov
outsl
adc
add
inc
cwtl
mov
outsl
fiadds
jnp
cmp
or
sub
mov
fisubrl
pop
xor
test
repz
add
pop
cmpsl
fistpll
jbe
repz
and
mov
mov
sub
or
test
mov
fwait
jmp
loope
out
int
cmp
imull
cmp
loope
mov
repz
sti
pop
popl
std
push
ret
xchg
mov
pop
hlt
test
enter
test
mov
mov
ljmp
int
mov
loop
jae
mov
or
mov
inc
jo
sbb
pop
jg
inc
outsb
mov
movsl
fcoml
adc
rolb
shr
adc
xchg
inc
stc
and
fldt
cmc
dec
inc
pop
lds
fidivs
lds
push
rcll
fnstcw
lcall
jl
inc
aas
jecxz
insl
cmp
mov
sbb
rolb
mov
or
mov
jne
jbe
daa
xchg
int
mov
dec
and
addb
and
ss
adc
cmp
mov
and
mov
outsb
scas
add
add
sbb
add
andb
js
sbb
mov
mov
jmp
cmp
xchg
dec
stos
adc
mov
push
test
aad
dec
sbb
add
sub
jne
sbb
loopne
adc
ret
sahf
and
or
xchg
fcoml
mov
pushf
mov
xchg
inc
call
dec
dec
mov
xchg
jp
mov
jmp
xchg
das
jne
out
cmp
daa
add
popa
ret
ss
mov
flds
inc
inc
stos
pop
mov
adc
stos
gs
or
mov
cmp
sti
call
xchg
and
fucomi
insl
pop
mov
and
lods
xlat
or
mov
pop
and
enter
mov
lods
mov
ds
pop
cs
mov
rcrl
movsl
imul
inc
jmp
clc
sbb
cmp
fisubrl
dec
popf
in
add
rorl
dec
push
or
int
imul
gs
fcoml
adc
lea
mov
xchg
mov
int
mov
mov
or
jecxz
enter
xorb
stos
xor
pop
lret
mov
movsl
ret
aaa
lahf
lret
push
push
mov
pop
popf
shrb
cltd
pushf
sarl
push
lods
jg
fxam
sub
fstl
clc
shrb
inc
test
dec
inc
and
out
ret
pop
mov
jno
outsl
je
cmp
sbbb
jle
add
and
mov
or
xor
call
mov
inc
and
clc
dec
mov
pop
mul
lret
test
fwait
dec
mov
adc
and
mov
ret
xchg
pop
sub
lods
cmp
adc
sti
xchg
rorb
mov
in
aam
int3
insb
bound
xchg
dec
inc
jne
imul
jg
inc
inc
arpl
mov
lcall
mov
into
aaa
sub
sbb
lea
xchg
lahf
loope
dec
sbb
sub
or
outsl
and
loop
mov
dec
jno
push
sub
fwait
lods
mov
outsb
xor
pop
jp
cmpsl
pop
inc
mov
cltd
push
repz
sbb
adc
test
mov
sbb
push
das
inc
test
test
inc
lcall
mov
scas
push
sub
mov
movsb
call
jb
fwait
rcrb
into
clc
sbb
int
jmp
cmp
popa
cwtl
add
add
dec
lcall
mov
xor
cmp
jno
testl
repz
xor
mov
push
pop
adc
and
cmp
std
adc
mov
xchg
enter
fisttpll
add
aaa
inc
data16
sbb
mov
aad
outsb
lds
lods
lds
leave
inc
push
and
jae
in
mov
xchg
sbb
sub
pop
jg
mov
daa
ja
cmpsl
mov
and
push
icebp
mov
add
rorb
inc
loope
push
jmp
fwait
xchg
jne
xor
add
or
mov
jns
sbb
dec
arpl
xchg
stos
rclb
mov
adc
lcall
push
test
loopne
dec
dec
jge
aam
jns
lds
xor
js
jg
and
js
cli
pop
dec
pop
insb
add
andl
jp
sbb
push
sbb
insl
std
pop
push
or
test
dec
pusha
insb
ret
mov
cmp
jnp
out
stc
mov
push
das
xchg
dec
inc
inc
or
sbb
adc
pop
shlb
lods
addr16
aam
mov
dec
sbb
lahf
jbe
fwait
or
ljmp
cmp
cmp
stos
xor
call
fisttpl
xor
ror
fsubrl
in
mov
daa
in
popa
mov
mov
outsl
adc
and
mov
dec
inc
cs
fucomi
sbb
mov
repz
push
daa
adc
xor
shlb
cmp
mov
xor
pop
add
pop
dec
push
mov
mov
xchg
pop
mov
daa
test
lahf
sarb
pop
out
mov
xor
adc
test
lods
lret
inc
inc
sarb
sub
jl
sub
sbb
gs
push
or
imul
cmp
push
lds
inc
jecxz
jmp
clc
sarl
minps
mov
sbb
mov
into
das
cmove
fisubrs
iret
push
mov
pusha
rclb
movsb
pop
aad
lods
pop
incb
les
cmp
push
xlat
pushf
icebp
sti
pushf
sarl
mov
add
jne
add
dec
imul
sbb
xor
cmp
add
push
xor
cwtl
data16
cmpsl
arpl
jp
test
aad
stc
mov
or
bound
in
cltd
push
xlat
fmuls
xchg
jne
movsl
push
cwtl
pop
jae
test
jbe
lock
cmpsl
inc
orl
push
leave
jno
sub
nopl
inc
insl
pop
call
push
fmuls
js
std
mov
jp
mov
and
xchg
sbb
xor
cmpl
iret
fistpll
aad
sub
ljmp
sub
shll
jge
inc
cmpsl
addr16
gs
ret
daa
dec
pop
aad
inc
dec
push
pop
sub
stos
mov
mov
pushw
pop
aaa
rcl
ljmp
popf
into
popa
xor
push
adc
std
mov
add
lods
xor
inc
imul
lea
or
xor
xchg
enter
adc
mov
dec
or
mov
iret
cs
loope
andb
or
push
inc
icebp
add
push
mov
mov
dec
push
add
rclb
cli
mov
ret
mov
insb
int3
scas
push
inc
mov
out
fwait
pop
xchg
jnp
in
test
push
in
stos
and
lret
mov
dec
negl
adc
dec
xchg
add
repz
and
cmp
jbe
ljmp
push
mov
dec
add
jno
rclb
lea
mov
mov
sarb
xor
cmpsl
xchg
clc
push
add
lret
inc
into
mov
arpl
movsb
lods
mov
scas
jecxz
push
lods
hlt
add
jp
pushf
ficoml
imul
fstl
mov
fmul
scas
imul
mov
dec
sbb
push
pop
fnsave
addl
push
pop
lcall
ror
jne
jle
fimuls
mov
push
cmp
roll
sbb
sbb
ss
imul
mov
inc
mov
aad
fisubrl
mov
jge
cltd
jmp
fiadds
mov
push
or
out
jecxz
sub
xor
mov
cltd
gs
or
xor
cmp
iret
inc
mov
test
cmp
lret
inc
int3
pop
sub
dec
adc
inc
push
inc
mov
lahf
mov
pop
adc
jecxz
ds
in
stos
push
icebp
adc
xchg
adc
scas
mov
xchg
aas
mov
imul
andb
pusha
ds
dec
add
cmpsb
lret
iret
popf
daa
cmp
push
jle
movsl
mov
out
xchg
fsubrl
mov
jno
jb
cmp
sub
mov
xor
cmp
dec
fwait
es
inc
fcom
js
mov
adc
xchg
mov
xchg
mov
inc
add
popf
mov
mov
inc
and
jnp
dec
lea
mov
sub
aaa
gs
push
std
sbb
xchg
add
inc
out
dec
add
adc
fmul
int
mov
mov
pop
in
mov
repz
adc
pop
lahf
out
loopne
inc
xor
sti
mov
jecxz
sbb
and
add
adc
mov
mov
popf
outsl
push
mov
and
mov
adc
push
cmp
cmpsb
and
push
les
popf
push
fmulp
rorl
int
dec
push
lret
inc
ficomps
sub
mov
sbb
cmc
jmp
flds
dec
int
jb
xchg
dec
jnp
add
and
leave
lahf
add
push
cwtl
clc
enter
xor
add
cmpsl
jno
pushf
movsl
cld
fcmove
cmp
or
test
mov
sti
mov
pop
mov
jnp
xlat
push
mov
jge
sbb
or
xor
push
sub
mov
inc
ds
gs
cmp
inc
andl
mov
scas
call
adc
dec
mov
test
xor
adc
shrb
xlat
popf
loopne
adc
popf
mov
mov
jnp
mov
inc
minps
ja
jecxz
enter
popf
xchg
fidivl
and
pop
les
sbb
push
adc
ret
xchg
jmp
mov
jae
iret
repz
pop
pusha
and
mov
mov
stc
sahf
pop
mov
enter
hlt
frstor
int3
sbb
add
and
jmp
jns
jbe
fnsave
pusha
adc
scas
inc
mov
push
add
add
cld
popf
and
data16
or
imul
popa
divb
cmp
sbb
scas
subl
movb
mov
xor
fs
lahf
dec
sbb
xchg
hlt
mov
js
lock
mov
dec
adc
xchg
test
xchg
dec
dec
fsubs
stc
stos
js
dec
call
shr
repz
mov
xor
loopne
xchg
lahf
mov
aas
cld
sti
xchg
mov
lock
jo
jg
add
and
hlt
sub
test
mov
xor
mov
shl
icebp
shrb
mov
push
ljmp
lcall
fidivs
iret
pop
or
mov
xchg
mov
into
lds
adc
lret
inc
je
sbb
mov
lods
pop
outsl
sub
or
cmp
imul
jnp
jns,pn
out
xchg
out
mov
cmp
pushf
cmp
push
inc
repz
mov
loopne
add
mull
pop
cmpsb
sbb
sub
ljmp
cltd
int3
int
push
bound
inc
mov
pop
jb
pusha
jne
push
and
sbb
jp
rclb
mov
xor
pop
movsb
xor
pop
and
stos
loopne
imul
push
jmp
sbbb
cmp
rcll
add
fimuls
dec
push
and
dec
sbbb
push
sbb
fists
test
mov
insl
movsb
cmc
fidivs
scas
sbbb
cmp
in
sbb
loop
cwtl
subb
pop
adc
mov
mov
inc
loopne
fsubrl
mov
pushf
inc
mov
or
cld
arpl
sbb
push
pop
sbb
bnd
xor
jg
dec
or
test
inc
inc
cltd
push
mov
test
push
sbb
imul
push
push
fdivrs
adcb
pop
sub
das
ds
mov
ds
repz
xchg
add
jge
loop
inc
lcall
int
dec
mov
and
mov
adc
icebp
cmp
mov
fnstsw
xchg
inc
adc
or
sbb
addl
pop
out
mov
xlat
sub
inc
cmp
sub
in
lcall
arpl
jno
shll
test
mov
in
enter
stos
mov
or
jl
adc
push
add
xchg
xor
cwtl
lret
inc
sbb
mov
fstl
mov
cltd
lods
dec
loop
sub
popl
into
adc
cmp
cltd
xchg
shrb
ret
and
das
sub
insb
mov
xchg
rcrl
adc
or
xchg
dec
jb
fisttpl
lods
sub
add
shlb
sbb
pop
rol
and
mov
add
sbb
sub
in
pop
add
add
push
inc
cltd
sub
and
test
call
jnp
pop
xchg
jmp
clc
fildll
or
mov
sbb
lret
xchg
mov
xchg
adc
sahf
inc
pop
sub
or
mov
pop
das
sub
fucomp
xorb
mov
mov
stc
movb
xorb
fdiv
lds
adc
cmp
adc
gs
dec
sbb
push
add
push
cmp
test
pop
pushf
dec
out
adc
lods
shrb
mov
cmp
lahf
scas
iret
lds
xor
pop
ds
adc
xchg
test
xor
mov
xchg
xchg
fcomp
imul
shlb
hlt
movsb
movsb
out
stos
cmp
pop
xor
xchg
cmpsl
ret
pop
fidivrs
gs
inc
fidivs
xor
cmp
out
xor
add
lret
xchg
mov
pop
mov
popf
into
pop
or
jmp
mov
ret
mov
and
mov
lahf
std
call
push
je
inc
das
loop
mov
sub
mov
int
push
mov
mov
dec
cld
lods
cli
or
testb
in
pop
pop
push
aad
jae
das
shl
popf
les
inc
and
adc
and
lret
iret
lds
inc
pop
int
cwtl
lret
movsl
sbb
cwtl
movsl
in
in
push
leave
push
test
scas
mov
mov
cmp
repz
mov
bound
es
popa
mov
cltd
add
fbld
xor
mov
mov
push
jmp
or
pusha
jo
cmp
pop
pop
jae
mov
fisubs
je
jmp
adc
cmpsl
adc
aaa
xchg
int
xor
mov
ja
cmp
adc
mov
loopne
adc
mov
in
jl
mov
jmp
int3
pop
or
dec
pop
fisubl
inc
fwait
ja
test
pushf
dec
daa
iret
cmpsl
pop
add
push
xchg
aad
jno
push
test
pop
sbb
and
inc
mov
push
or
adc
pop
jno
inc
mov
jl
or
jo
rol
and
lret
xchg
xor
xlat
loopne
and
pop
test
dec
inc
sbb
push
xchg
jl
bnd
addb
rcrb
pop
dec
mov
cmpsb
push
or
xor
in
pop
push
stos
xchg
stos
add
cmp
jae
repnz
movsb
inc
scas
popf
mov
movsl
test
stos
pop
pop
fistl
mov
push
sub
or
loopne
sbb
cwtl
cld
scas
jbe
mov
aam
dec
cmp
push
ljmp
shll
clc
or
roll
test
mov
jecxz
pusha
pop
mov
je
mov
fldenv
add
xchg
or
add
pop
cmp
ret
test
ret
mov
push
test
test
gs
and
push
into
in
cmp
sbb
mov
mov
lahf
dec
gs
pop
call
or
adc
mov
or
ja
xor
lret
inc
sbb
push
adc
test
xor
inc
xchg
aam
add
jmp
push
enter
popl
scas
sbb
mov
pusha
testl
inc
mov
add
scas
sub
cmpsl
xor
sub
or
lahf
outsl
fcoms
sub
movsb
dec
xchg
aas
out
enter
dec
cwtl
xchg
and
fcomip
mov
hlt
sbb
xchg
jge
insb
pop
addr16
pushf
lods
inc
gs
fisubl
adc
pop
adc
imul
in
jge
mov
sbb
push
mov
xchg
mov
ja
stos
ss
divl
repz
mull
lcall
ja
push
test
test
test
movsb
ret
ficompl
dec
bound
jae
repnz
lods
mov
mov
dec
sbb
mov
mov
xchg
dec
pushf
inc
stos
or
lods
and
sbb
cmp
les
ss
xchg
jo
ret
fsts
std
sub
data16
lock
shrb
sbb
cltd
lds
push
stos
pusha
dec
gs
pop
adc
sti
fwait
mov
mov
jecxz
jecxz
out
jns
sbb
mov
cmp
call
rcr
mov
add
add
push
subl
mov
lock
ds
idiv
and
loop
mov
sbb
add
fcomps
mov
icebp
add
fdivrp
dec
xchg
jmp
add
cltd
xlat
fisttpll
pop
pop
sbb
test
pop
pop
jnp
mov
std
fisttps
push
jo
popa
fwait
aaa
testl
dec
fst
add
jg
divb
addr16
dec
dec
jbe
pop
jb
sub
pop
mov
in
roll
mov
mov
subb
and
mov
mov
data16
andl
pop
popa
mov
add
add
add
mov
stos
addr16
je
imul
cmp
pop
add
and
sti
push
add
sub
mov
pop
std
xor
mov
sbb
std
test
sbb
test
call
add
cmp
pop
adc
mov
mov
fidivs
icebp
out
push
or
pop
repnz
inc
mov
aaa
ds
push
xchg
sub
stos
xchg
jmp
test
out
add
cmc
ds
ret
dec
sub
mov
ja
push
in
xor
mov
test
into
sarl
cvtpi2ps
mov
add
dec
xlat
cmpl
xchg
sbb
rolb
daa
adc
mov
aad
xor
jmp
xchg
scas
jg
jns
jae
jg
add
test
mov
or
fsubl
or
daa
xchg
add
mov
or
movsl
xchg
add
pop
aad
pop
mov
sti
push
icebp
insb
mov
lea
xor
sub
or
es
rol
adc
push
or
test
mov
arpl
fcmovbe
mov
mov
loope
mov
pop
jno
sbb
sarl
adc
inc
mov
sbb
cmp
cmp
mov
gs
jne
inc
or
lahf
push
hlt
mov
adc
idiv
lret
sbb
mov
in
cwtl
and
mov
je
push
sti
mov
stos
fdivs
outsl
adc
lret
stos
mov
sub
ja
icebp
xchg
in
adc
fs
pop
inc
cld
lds
pop
shlb
mov
mov
popf
ffreep
fcmovnu
push
jg
mov
pop
daa
gs
sbb
push
inc
sub
aad
imul
fistl
mov
jbe
mov
and
and
imul
bound
pop
mov
js
inc
push
mov
inc
addl
shll
adc
push
pop
pop
lods
out
lret
inc
test
and
loopne
shll
lods
dec
cli
pop
jg
loopne
adc
loope
pop
ja
mov
xor
jns
mov
punpcklwd
shr
adc
push
imul
cmp
xor
lret
sub
shrl
dec
hlt
sbb
xchg
fucomp
jae
inc
loop
dec
popf
leave
mov
sub
mov
mov
add
hlt
cmp
lret
add
dec
pushf
in
lods
fwait
lods
lret
pop
insl
cltd
jp
inc
dec
mov
pusha
inc
shlb
jo
imul
jp
daa
push
inc
mov
daa
or
xchg
icebp
jno
and
push
adc
mov
adc
pop
movsl
ja
cmpsl
inc
jl
mov
xchg
fwait
mov
and
lret
sub
xor
iret
inc
cmp
ficoms
test
inc
mov
repz
cmp
dec
mov
ret
rorl
lcall
pop
sbb
mov
scas
lock
idiv
cmp
sahf
or
xchg
mov
cmp
sbb
push
in
fsubr
aam
fdivrs
mov
negb
mov
sub
jb
arpl
clc
repnz
fldenv
out
out
es
jne
pop
dec
outsl
mov
shrb
fisubl
xchg
ror
imul
mov
mov
andb
mov
aas
gs
sti
pop
cli
js
popf
movsb
leave
xchg
add
ja
psubb
pop
mov
push
cmp
inc
enter
stos
bound
mov
inc
sarb
mov
lock
push
jne
xchg
stc
cmp
add
popa
pop
or
ret
lret
lret
jl
push
loop
jle
bound
pop
mov
and
inc
and
mov
lds
inc
inc
pop
adc
sarl
push
mov
dec
in
inc
iret
xlat
jmp
clc
push
dec
adc
clc
mov
jle
sahf
sbb
enter
pop
int3
rol
out
sbb
fsubrl
mov
in
jns
sarb
lds
inc
mov
test
push
pop
jp
cltd
sbb
pop
sub
jo
adc
mov
inc
rcrb
test
push
cwtl
ret
int
cmp
sbb
and
pop
mov
nop
xor
sbb
lds
xor
mov
dec
adc
add
rcll
cmpsl
ja
add
adc
ret
jecxz
test
jo
test
mov
fwait
out
pop
test
mov
adc
sub
repnz
pushf
test
mov
dec
paddq
jge
sarb
movsb
sbb
pop
iret
fs
sbb
pop
jae
bound
mov
jecxz
hlt
cs
out
clc
push
sarl
imul
jno
add
insb
leave
and
sbb
dec
xchg
int3
adc
push
cs
add
sahf
pop
dec
fsubrl
jmp
movsl
mov
jl
sbb
aam
mov
mov
sahf
es
repz
ret
ret
jl
fbstp
inc
sbb
sbb
jae
dec
xchg
mov
dec
cltd
or
stos
mov
inc
sbb
sahf
mov
idiv
icebp
add
ss
add
sub
xchg
jecxz
and
cmp
add
push
mov
out
fstps
sub
push
jbe
lods
pop
dec
lods
enter
and
adc
and
inc
test
mov
mov
out
enter
sar
add
mov
test
das
mov
push
pop
roll
movsb
clc
push
lret
or
out
mov
cmp
mov
popf
or
test
call
push
or
xchg
pushf
jne
in
jns
out
xor
aaa
arpl
mov
iret
push
outsb
sbb
pushf
mov
das
push
mov
lods
sub
sub
iret
pop
pop
aad
xor
adc
cmp
xor
aaa
pop
pop
xchg
fldcw
xor
or
fiadds
push
aam
add
push
push
fwait
pop
push
fwait
mov
push
pusha
aas
lahf
scas
movl
xchg
mov
mov
les
sbb
inc
or
addb
stos
inc
pop
sub
lcall
mov
add
test
inc
sbb
jg
test
mov
fcompl
fdivrp
jb
push
push
pop
filds
inc
es
test
pop
cltd
mov
jmp
sti
int
pop
inc
xchg
adc
pop
outsb
dec
xchg
cmp
imul
pop
adc
fsubr
sub
jp
xchg
call
mov
inc
gs
dec
inc
fsts
lret
shrb
mov
cltd
loopne
addr16
push
stos
sub
push
test
movsb
sub
mov
inc
mov
push
cmp
sbb
fs
das
mov
lock
xchg
add
cmc
cld
or
jp
outsb
sbb
cs
fisttpll
lods
inc
xchg
adc
and
test
pop
jge
add
pushf
dec
daa
xchg
xchg
mov
pop
mov
dec
rcrb
outsl
xor
jmp
dec
cmpsl
pop
testl
adc
sub
xchg
ljmp
out
in
ljmp
daa
mov
and
outsb
or
or
andl
nop
sbb
sub
xchg
adc
mov
pop
push
rorb
push
dec
decl
repz
mov
mov
pop
imull
repnz
nop
adc
int
enter
dec
or
lcall
pop
sub
adc
mov
int
ljmp
int
jge
cmpsl
mov
adc
cmp
imul
add
aas
adc
dec
std
pushf
xchg
adc
inc
cmpsl
and
sbb
popa
test
fistpl
fsubrs
mov
adc
mov
and
mov
sbb
sbb
outsl
xchg
sti
xchg
lcall
jns
scas
push
into
inc
fistps
adc
and
mov
dec
cmp
fsubs
add
add
icebp
push
push
xor
js
adcl
xchg
mull
mov
jge
xchg
jp
mov
inc
dec
pop
mov
fidivrs
cmp
cld
fildl
ja
or
cmpsl
and
dec
add
xchg
xchg
xchg
shlb
jnp
adc
scas
mov
imul
rorl
xor
mov
lcall
xlat
xor
popf
repz
out
in
add
div
xor
fistpll
push
aam
or
add
add
fisubrs
bnd
ficoml
cwtl
lret
lahf
xchg
push
arpl
push
cmp
call
push
mov
inc
fisubl
mov
pop
ss
cld
mov
insl
mov
shl
les
xor
mov
sbb
sbb
add
push
js
stos
pop
movsb
sbb
mov
lock
cmpsl
lock
fisubrs
insl
jb
shlb
iret
js
ret
push
xchg
inc
mov
xlat
movsb
push
jae
sub
lret
adc
into
sbb
lahf
call
xor
and
mov
fdivl
mov
addr16
leave
aam
cld
iret
repnz
sub
mov
je
or
jmp
jno
mov
push
mov
inc
and
stos
dec
lods
lret
imul
lods
orl
add
jne
arpl
inc
xor
mov
sbb
popa
rcrb
sbb
inc
pop
aas
test
jg
pop
or
or
jge
ja
test
lret
sbb
fidivl
mov
push
cld
jnp
add
std
fsubl
xchg
dec
pop
mov
lcall
ret
pop
test
mov
and
ror
out
lds
xorb
enter
scas
add
clc
add
sbb
mov
retw
sbb
cmpl
xchg
out
xor
test
push
xchg
cmpsb
ret
rcrl
in
lock
outsl
mov
std
and
inc
inc
mov
sbb
stos
jp
out
mov
dec
fisubrs
jns
inc
rorl
pop
and
stos
push
test
sub
sbb
mov
shrl
mov
bound
adc
icebp
pop
pusha
daa
add
aaa
xor
shl
xor
std
pushf
jbe
mov
fwait
lods
fcompl
loop
push
aas
sub
pusha
mov
out
fdivr
dec
scas
push
jecxz
dec
jo
xchg
cltd
imul
xchg
inc
sbb
cltd
lds
jns
pop
stos
and
and
mov
lods
mov
imul
dec
into
pop
lea
out
push
xchg
popf
scas
loopne
add
and
add
sbb
sbb
out
xchg
mov
fwait
mov
or
imul
adc
repnz
add
es
repz
prefetcht0
add
xchg
cwtl
xchg
adc
mov
cmp
inc
mov
adc
or
jecxz
int3
jle
jmp
fsubl
cmp
int3
pop
int
adc
ljmp
mov
in
ja
stos
leave
cld
sbb
shlb
fimull
leave
lock
sti
pop
adc
mov
mov
mov
fs
bound
adc
loop
inc
arpl
mov
and
mov
fidivrl
sti
xchg
sub
inc
xor
imul
and
jae
cmp
sub
mov
enter
adc
scas
jno
pop
das
and
xchg
inc
out
inc
xor
add
xor
lret
aas
lods
es
daa
test
or
in
cmp
inc
cmpsb
and
cmp
cmp
addl
add
je
xor
mov
test
leave
sbb
add
test
fisubrs
push
add
xchg
lcall
icebp
xchg
mov
divb
pop
out
or
in
cmp
out
out
fisttpl
inc
addr16
xchg
jnp
rcl
push
dec
adc
mov
cltd
and
js
aad
add
mov
cmpsb
cltd
or
xchg
push
clc
rcrl
ret
pushf
stos
xchg
stos
stos
rcrb
push
jns
enter
and
fcompl
cmpsb
jnp
clc
je
loope
in
add
popf
jp
and
add
mov
add
addr16
xor
out
cmpsb
addr16
test
and
sti
stos
shr
data16
div
push
pop
push
je
cmpsb
data16
ret
mov
mov
xor
adc
loope
fbld
lods
add
sbbb
push
mov
pop
ficomps
fisttpl
test
push
test
dec
int
push
out
and
out
int
dec
pop
lret
xchg
push
mov
add
and
or
sbb
adc
cmpsl
mov
mov
inc
sbb
xchg
sub
adc
inc
insb
ja
sub
jno
aad
mov
shl
repz
repnz
daa
inc
loope
test
sbb
sbb
mov
adc
test
push
push
sbb
xchg
inc
insl
ret
push
insb
sahf
mov
insb
fmul
call
xchg
faddl
repz
addl
mov
test
sbb
addr16
jl
jle
test
stc
mov
out
in
xchg
dec
or
add
lock
ds
int
xchg
lock
test
jo
mov
dec
push
dec
xchg
test
stos
dec
push
dec
mov
out
dec
rcl
stos
or
mov
and
sbb
mov
jg
les
lods
arpl
push
xchg
mulb
rorl
pop
sub
mov
mov
scas
or
outsl
jge
in
sarl
movsl
in
pushf
dec
and
fldenv
and
movsb
ret
fisttps
mov
in
sti
xchg
jb
push
xchg
fld
lcall
std
fnstcw
stc
xchg
sub
inc
xchg
iret
fs
push
mov
insb
cmp
inc
movsl
inc
fbld
cmp
fidivrs
lea
mov
sahf
jge
pop
push
cmp
push
mov
loopne
gs
sbb
mov
test
sti
sbbb
mov
pop
or
adc
add
arpl
pop
stc
mov
lds
clc
in
movsb
nop
arpl
std
fisttpl
ror
ret
stos
jle
jmp
jno
rolb
mov
jnp
jecxz
dec
push
int
cmpsl
inc
repz
int3
aaa
ret
fmull
cmp
cld
mov
jbe
js
dec
inc
adc
repnz
aas
mov
stc
mov
adc
hlt
stos
fs
push
ret
or
jnp
cmp
jb
xorb
fidivs
push
or
dec
scas
jg
add
rcl
in
sti
cmp
dec
inc
rolb
mov
shrb
adc
fucomi
inc
sub
jp
mov
mov
push
sbb
jae
loopne
fcmovnb
xchg
jle
inc
mov
andl
ja
mov
insb
add
and
pop
add
push
lds
dec
cmp
imul
sbb
push
xchg
outsl
lahf
lret
push
jnp
mov
faddl
es
decl
cmp
or
out
mov
push
fidivrl
jmp
rorb
movsb
sub
leave
pop
add
fwait
cwtl
mov
sbb
addr16
inc
les
gs
pusha
movl
mov
push
std
mov
cmp
les
ret
mov
mov
pushf
mov
insb
es
mov
push
mov
int
mov
jge
hlt
and
popa
jl
popf
scas
lahf
dec
push
cmpsl
xchg
cwtl
adc
pop
or
sbbl
ror
xchg
stos
lds
inc
sbb
jns
add
xor
jl
mov
loop
mov
push
dec
xlat
adc
pop
xor
andl
mov
sub
or
and
dec
sub
popa
dec
js
push
addl
xor
dec
jg
je
pop
sbb
pop
lcall
je
in
lcall
adcl
sub
cwtl
stc
cmp
sub
imul
imul
jb
mov
loope
or
push
std
fisttpl
dec
addl
mov
push
fidivl
inc
decb
iret
add
sbb
cltd
je
mov
rclb
mulb
xchg
jb
sub
and
sbb
sub
sahf
fildll
fcmove
push
pop
lahf
cmp
jo
subb
add
mov
dec
xor
movsl
xchg
inc
outsb
fistl
mov
inc
sub
xchg
stos
sub
lods
mov
call
leave
add
std
fwait
mov
pop
sub
inc
repz
out
or
adc
push
out
fsqrt
or
sti
jbe
adc
add
jmp
fidivl
push
mov
into
cwtl
js
out
jge
ficoms
ljmp
jns
es
pushl
dec
mov
ljmp
jmp
lret
cltd
jns
mov
imulb
aam
jmp
mov
jge
inc
adc
pop
psrlw
dec
fwait
lahf
mov
mov
push
inc
sub
add
movsb
popf
jge
xchg
stos
and
jno
pop
das
cmp
fcoms
push
pusha
mov
loop
mov
push
je
popa
sahf
cltd
cmp
or
mov
dec
push
lcall
xor
mov
sub
pop
movsl
jno
mov
and
mov
cltd
aad
adc
es
rorb
gs
jl
and
sbb
add
adc
pop
jns
adc
aas
push
les
inc
fsubrl
test
push
or
cld
lahf
pusha
add
inc
ja
inc
lea
lahf
mov
cltd
int3
pop
or
mov
add
and
fmull
dec
pop
jge
jnp
rcr
stos
mov
pop
test
test
push
push
int
cmpsl
inc
and
fwait
adc
mov
and
xorl
sbb
cwtl
add
fimull
cwtl
cltd
sub
xchg
jbe
nop
jae
sbb
mov
mov
pop
sub
pusha
mov
std
repnz
sbb
ja
inc
jno
or
adc
dec
test
dec
or
lcall
xchg
xor
lcall
xchg
mov
add
mov
jbe
rol
rcrl
pop
xor
addr16
ljmp
pop
and
fistl
addr16
les
inc
fsubrl
sbb
test
jl
pop
jg
inc
lock
mov
xor
outsl
lahf
lret
clc
jl
mov
or
bound
fadd
int3
nop
out
xor
pop
dec
loope
xlat
adc
xlat
stos
imul
xchg
pop
out
test
movsb
scas
sbb
xchg
lret
ffree
jmp
filds
popf
jg
mov
mov
jne
ret
push
frstor
mov
add
xor
lret
clc
and
jnp
jne
popf
mov
xchg
jmp
popf
mov
jns
mov
fwait
lret
inc
fwait
shlb
dec
fnstcw
dec
cmp
addb
add
jns
xchg
push
frstor
push
xchg
jmp
ret
bound
clc
iret
push
or
sbb
repz
cltd
enter
popa
or
push
xlat
sbb
xchg
xchg
push
sbb
fistl
sbb
adc
in
cmp
mov
fcmovnbe
push
inc
out
lret
imul
inc
lock
stos
out
mov
xchg
adc
test
mov
pop
sbb
movsl
rclb
int
imul
hlt
imul
mov
dec
hlt
xor
mov
adc
lods
cmpsb
jbe
in
mov
js
lcall
loopne
or
leave
addr16
sub
lock
inc
insb
jae
pushf
add
add
sahf
sub
daa
in
dec
jl
mov
loopne
cmpsl
push
sbb
sub
adc
inc
xor
cmp
fwait
nop
cli
dec
pop
push
mov
int3
or
adc
inc
cmpsl
scas
popf
mov
ret
fld1
gs
in
jns
jmp
lahf
bsf
xor
push
mov
and
add
rcr
xor
cmp
out
repz
jge
iret
popf
out
adc
sarl
mov
js
inc
jnp
ja
stos
sbbb
ss
js
je
rcrl
push
mov
pop
mov
jbe
push
mov
imul
popa
mov
push
lahf
mov
negl
je
aas
mov
in
pop
jae
rcl
sbb
int
cwtl
dec
addb
outsb
cmpsl
sbb
enter
jbe
test
test
orb
daa
es
ja
in
js
and
sbb
mov
cmpsb
enter
stos
xchg
pop
pop
cs
sahf
push
jge
xor
pop
mov
jne
sbbl
inc
pusha
sub
movsb
fildl
sbb
shll
rcrb
mov
je
loopne
push
mov
xor
mov
rorb
push
mov
push
loopne
orl
cmpsl
stc
jmp
sti
mov
jne
shlb
xchg
mov
dec
or
mov
xor
mov
or
xlat
mov
lret
pop
stos
cmc
ljmp
add
gs
sbb
fildll
jae
mov
sub
mov
or
ret
inc
pop
xchg
add
mov
jb
jnp
mov
jae
sub
and
dec
mov
rol
js
popf
lahf
and
ljmp
arpl
sub
orl
xchg
or
sbb
mov
mov
sbb
mov
into
sbb
movsb
test
lds
fisubs
pop
jne
popf
outsl
outsb
inc
add
mov
lahf
sub
or
rclb
lea
mov
jle
scas
sti
mov
pop
call
xchg
cmpsb
ret
popa
addb
scas
into
mov
jne
sbb
xor
add
cmc
or
stc
add
mov
mov
int
imul
popa
pop
mov
popf
push
lds
cmp
scas
xchg
aam
mov
mov
mov
add
rol
or
fiadds
pushw
dec
cwtl
scas
movsl
cwtl
in
ret
or
xchg
pop
sbb
cwtl
jnp
mov
ret
add
js
popf
ficoms
jl
stc
into
scas
fwait
test
ja
icebp
dec
dec
sbb
xorb
push
test
lcall
adc
push
lods
repz
inc
jp
ja
sub
test
push
sti
nop
lock
adc
sbbb
xlat
mov
mov
dec
add
dec
jl
cltd
push
popf
push
fwait
xor
data16
adc
mov
pop
lahf
push
cmp
stc
or
fadds
loop
jmp
call
ds
lahf
cmp
lcall
cltd
xchg
mov
mov
outsb
cmc
cmc
xchg
push
ror
jge
mov
out
mov
mov
mov
das
js
ficoms
test
mov
pop
stos
mov
mov
sub
incb
repz
test
pop
insb
inc
and
jno
mov
or
data16
add
mov
xor
movsl
lahf
fmull
scas
adc
push
xchg
fisubrs
inc
ds
mov
loop
and
stos
je
subb
pop
xchg
sbb
pop
imul
fdivrs
xchg
lcall
fwait
and
pop
sbb
inc
xchg
fnsave
push
mov
imul
mov
inc
int3
mov
mov
cmp
imul
sti
mov
into
add
push
fadds
out
adc
jns
inc
xor
mov
add
fisttpll
mov
rorl
add
xchg
xchg
fdivrs
mov
adc
mov
pop
stos
pop
test
test
leave
pop
out
lret
lahf
arpl
clc
scas
scas
sbb
repnz
jnp
or
je
insl
sarl
add
xor
jno
scas
out
xchg
dec
and
aad
sbb
aaa
mov
add
sbb
ret
outsb
scas
je
or
stos
dec
pop
fists
cmp
clc
mov
mov
or
mov
inc
pop
stos
mov
cli
mov
imul
add
xor
mov
cmp
clc
gs
stc
adc
add
inc
incl
mov
out
inc
dec
rol
int
add
mov
mov
inc
lcall
int
clc
and
and
jmp
test
fists
shlb
addl
loop
jecxz
cmc
dec
loope
jb
fwait
xor
sbb
test
adc
iret
enter
ljmp
dec
sbb
int
add
sub
fcmovne
mov
adc
mov
xor
jecxz
cli
cmc
movsb
lds
pop
inc
xor
pushf
cmpsb
mov
mov
mov
clc
mov
repnz
pop
in
inc
pop
std
inc
pop
xchg
loop
cwtl
lahf
lahf
mov
insl
in
test
mov
mov
xor
fistpl
xor
ja
inc
fisubrs
fnstsw
push
sub
repz
sbb
lea
mov
pop
pop
cltd
int3
bound
jb
int3
mov
aam
mov
shlb
sbb
test
and
divl
push
mov
les
aaa
out
mov
idivl
div
jmp
xlat
lds
hlt
out
xchg
dec
adc
mov
push
or
mov
inc
ds
icebp
mov
jb
inc
mov
xchg
pop
sbb
push
scas
dec
lock
movsb
stc
sbb
push
dec
js
daa
out
cmpl
sbb
packssdw
jmp
or
sbb
stc
jl
push
into
cltd
movsb
mov
fwait
test
xor
inc
lahf
xor
imul
xor
jne
outsb
cmc
xor
aas
lret
jo
es
or
add
in
stos
pop
ds
test
leave
and
test
test
outsl
rcr
imul
sub
push
jns
call
cld
xchg
mov
dec
mov
es
mov
orl
sub
popa
lea
xor
ret
outsl
cmp
xchg
mov
pop
xlat
rolb
or
pop
adc
hlt
sarb
out
and
ljmp
jmp
cmpsl
mov
ds
dec
roll
stos
dec
inc
cmp
jle
stos
insl
xchg
ja
xchg
aad
mov
pop
add
sbb
jno
inc
sub
fldl
dec
jno
ss
inc
roll
lahf
inc
sub
jl
adc
insb
dec
pop
sub
into
inc
sarl
mov
mov
subb
icebp
sti
gs
loope
xchg
insb
adc
mov
pop
mov
in
xchg
aas
jge
pop
fwait
jmp
push
int3
adc
sub
mov
xchg
add
xchg
movsw
sbb
xchg
shl
lret
insl
sbb
xchg
mov
add
in
mov
sub
ficomps
outsl
inc
sub
or
xor
adc
inc
mov
lea
nop
push
pop
push
mov
cmpsb
cmp
fstl
dec
imul
mov
gs
push
cmp
or
iret
mov
in
pop
sub
and
push
pop
inc
cmp
cmpsb
mov
int3
sub
sub
dec
mov
jle
mov
rorl
mov
repz
arpl
sub
mov
dec
pop
lret
pop
es
xor
mov
out
adc
inc
mov
loopne
mov
ret
cmpsl
and
or
xchg
shll
lds
shlb
dec
mov
inc
cmp
adc
or
aam
loopne
cmpsl
mov
xchg
pop
or
test
mov
pop
jmp
cmp
dec
mov
adc
push
movsl
mov
pop
inc
and
pop
lea
stc
and
and
leave
rclb
xlat
cwtl
hlt
mov
fisttps
or
sub
imul
cltd
xor
aad
or
nop
stos
fucomi
repz
and
or
inc
inc
jge
fnstsw
into
mov
adc
sbb
je
aam
clc
sbb
mov
add
addr16
outsl
cmp
jbe
xor
sti
jne
rcrb
sub
sbb
les
mov
adc
arpl
je
push
into
push
fbstp
loope
adc
pop
adc
clc
dec
xchg
cmpb
mov
fcoml
mov
mov
hlt
push
jno
xor
dec
les
jo
dec
scas
lahf
fnstsw
in
sbb
push
xchg
fldlg2
add
shrb
push
gs
push
je
sbb
and
imul
mov
ja
cmpsl
add
call
pushf
negl
mov
sub
andl
rcr
mov
fldl
imul
mov
out
aam
in
mov
jecxz
jge
xchg
popa
call
add
and
sub
mov
push
dec
mov
pop
mov
dec
cmp
or
jnp
insl
add
popf
mov
push
scas
pop
inc
stos
out
cmp
shll
lock
sub
scas
mov
sbb
cwtl
lret
pop
jb
stos
mov
mov
insb
fwait
mov
jo
fwait
sub
imul
inc
or
xlat
sbb
mov
insl
adc
jb
sbb
add
adc
std
adc
fstps
ret
sbb
test
xchg
int
dec
sbb
icebp
ja
sbb
dec
ret
enter
aas
cltd
dec
jo
fists
inc
adcb
das
and
rorl
mov
ret
mov
shl
sub
call
pop
stc
loope
lcall
repz
sar
mov
lret
jecxz
dec
push
and
je
cwtl
or
adc
decl
lcall
mov
popa
dec
dec
jmp
lahf
and
pop
mov
lret
adc
test
cld
aaa
in
xchg
mov
aaa
cmc
jp
ret
ret
pop
adc
xchg
daa
add
aaa
dec
xor
dec
push
adc
adc
mov
sbb
stos
xor
xor
jae
mov
daa
add
scas
pop
repz
sbbl
mov
cmp
lcall
fnstcw
fisttps
out
jecxz
ja
cmp
lods
xchg
xchg
jo
jae
add
lods
mov
xor
xor
ss
aam
mov
jnp
inc
xor
cmp
ss
cmp
lcall
cmp
lock
iret
arpl
xorb
or
pushf
icebp
mov
or
sub
sub
inc
andl
mov
push
xchg
cmp
pop
xlat
jbe
jp
into
fbld
or
imul
lods
lds
fiaddl
andb
leave
jbe
ljmp
dec
repz
lods
adcb
push
xor
xor
mov
icebp
or
loop
dec
pop
rcll
mov
mov
or
push
adc
addr16
mov
fcomi
cmpb
ja
fsubl
aam
negb
test
mov
sub
shlb
repz
fisttpll
mov
daa
mov
pop
push
clc
mov
sbb
inc
pop
add
xchg
add
mov
out
cmp
cmovns
inc
mov
jecxz
inc
mov
stc
mov
mov
sbb
aam
fisttpl
sub
dec
sbb
mov
idiv
daa
inc
cmc
lods
lret
inc
xchg
inc
pusha
pop
cmpsb
sub
icebp
mov
hlt
stos
repz
mov
jnp
loop
in
ja
nop
xor
inc
mov
pop
inc
inc
add
sub
mov
movsb
jl
xchg
or
repnz
xor
add
add
sbb
or
add
mov
xor
xchg
or
fisubrl
pop
add
rcr
inc
fdivrs
repnz
mov
lahf
jg
divb
fmull
insl
insl
fistpll
dec
pop
pop
xor
mov
and
movb
aad
fmul
inc
pop
mov
leave
pop
xor
or
pop
fisttpll
loopne
dec
pop
xchg
repz
sub
stc
jl
popa
mov
icebp
jne
ret
mov
in
jns
dec
cltd
call
gs
mov
inc
test
xchg
cwtl
mov
aad
in
add
jae
cmp
dec
je
jno
jle
ficoml
jae
idivb
inc
xchg
jne
push
mov
push
ror
cmp
sbb
dec
movsb
cmovns
xlat
mov
pop
pop
rcrl
lahf
lds
cmpsb
fs
bound
push
cmp
repnz
ror
dec
insb
stos
int3
leave
pop
js
adc
out
dec
lds
inc
stos
dec
fwait
dec
mov
xchg
or
mov
sub
cmp
jb
sbb
andl
inc
int3
addb
mov
and
aaa
or
cmp
in
mov
mov
xchg
lret
jb
mov
mov
lahf
lret
sbb
xchg
inc
ror
sbb
movsl
dec
sub
jl
fcmovb
and
ja
add
rclb
sub
pop
stos
clc
cmpsl
xor
mulb
loop
lock
mov
push
incl
lock
adc
inc
mov
or
dec
ss
lods
fwait
repnz
dec
shrb
mov
popf
push
ficoml
cltd
std
es
and
and
cwtl
addr16
dec
push
or
test
mov
sbb
insl
and
sahf
cmp
or
or
push
adc
mov
lds
mov
shlb
sub
call
mov
pop
jae
dec
mov
jnp
and
inc
fstps
pop
pop
shlb
je
mov
pop
pop
xchg
pop
mov
test
test
test
into
cld
fildl
jmp
inc
sbb
cmpsb
ret
or
inc
xor
stos
xchg
mov
pop
es
fwait
dec
in
adc
xchg
dec
repz
test
inc
and
and
mov
cmp
jmp
lret
sbb
das
fidivl
lret
jbe
add
dec
in
addr16
mov
test
sbb
sbb
jge
das
jmp
pushf
jbe
popf
fldcw
rcll
lds
mov
insl
shrl
push
cmp
ja
fidivs
ror
and
jle
test
and
or
and
adc
mov
mov
stos
push
and
pop
jg
ret
bnd
mov
push
sbb
fnsave
out
adc
ret
add
outsb
add
add
add
xchg
add
xor
test
outsb
mov
loop
cmp
mov
mov
mov
push
scas
push
mov
fcoml
and
jbe
xor
jecxz
push
mov
dec
mov
enter
push
ret
and
cmpsl
xchg
mov
out
inc
fwait
test
in
lret
pop
insl
cmc
inc
addr16
loopne
fdivrl
fisubl
arpl
add
cmp
test
call
adc
dec
xchg
arpl
pop
sub
lret
lret
aad
adc
sti
add
or
inc
ljmp
not
insl
mov
add
push
lods
dec
mov
ret
cwtl
fists
inc
inc
bound
push
stc
ret
les
adc
pushf
cli
pop
daa
rcll
inc
pop
les
aaa
aad
fstpt
cmp
xor
loopne
inc
sbb
adc
rol
adc
dec
mov
es
mov
lret
jp
add
sub
inc
push
loopne
dec
push
dec
xlat
dec
push
xchg
jnp
mov
xor
aaa
xchg
xor
hlt
jl
and
jne
or
lods
lds
sti
mov
sbb
push
es
inc
and
test
inc
rcrl
mov
sbb
push
aas
repz
sub
mov
or
jae
or
lock
ret
push
in
add
jne
lahf
xor
mov
mov
outsl
jbe
sbb
xchg
adc
int3
sub
repz
mov
inc
cmp
shrl
add
cs
fmul
mov
stos
push
add
enter
jno
jp
cmp
movsl
gs
inc
mov
and
in
lock
jae
js
lock
mov
stos
mov
cmp
add
test
sub
cmp
push
xor
push
mov
aad
push
mov
mov
pushf
and
adc
lock
xchg
enter
mov
aaa
out
test
mov
or
pop
mov
dec
xor
test
cmp
jno
and
test
push
idiv
repnz
pop
sti
pop
pop
mov
sub
jae
ja
mov
add
mov
aam
std
cmp
mov
mov
jne
xchg
fstpt
xor
adc
sbb
cmc
mov
ds
or
lock
jo
pop
orb
mov
fcmovb
xor
ret
pop
inc
xor
mov
pop
lock
arpl
cld
lret
popl
cmpsb
call
jnp
loope
adc
adc
add
mov
inc
xor
aam
pop
xor
inc
fimull
rolb
dec
and
jg
add
test
inc
xor
mov
push
jno
addb
fwait
pop
ror
pop
xchg
inc
push
lods
cmp
adc
pop
cmpsb
push
fisubs
jbe
push
or
push
pop
pop
sahf
xchg
ret
jle
mov
cmp
dec
les
cmpsl
pop
fnstsw
fiaddl
xchg
ja
les
jo
or
adc
add
xchg
pop
lret
movsl
mov
sub
inc
test
and
inc
mov
iret
adc
bnd
push
mov
out
sbbl
sbb
popa
push
sbb
inc
stos
cmp
lret
movsl
ret
pop
mov
sbb
xchg
and
lea
in
inc
cmpb
mov
push
cmpsl
add
jmp
dec
and
dec
mov
test
sti
test
mov
repz
jno
cli
pop
pop
loopne
inc
sbb
pop
repz
ret
mov
mov
int3
pop
sub
lods
rorl
jp
push
imul
dec
mov
mov
sbb
add
dec
aam
dec
stos
sbb
jecxz
pop
popa
scas
ja
fisubrl
push
cmpsb
jmp
lahf
mov
jb
int
mov
retw
mov
push
xchg
inc
dec
xor
arpl
lret
lret
jnp
mov
sub
inc
mov
std
stc
mov
js
ja
mov
pushf
cmc
pushf
addr16
xchg
pop
sub
mov
scas
push
mov
xlat
aad
sbb
push
mov
push
mov
out
ret
adc
imul
mov
cwtl
inc
sbb
dec
sbb
out
mov
rorl
sbb
lock
out
aad
inc
cltd
enter
lret
sub
add
fdivl
addb
inc
das
ret
je
dec
mov
clc
and
sbb
xor
icebp
test
dec
pushf
cmp
inc
test
ret
testl
mov
xor
jbe
jle
jno
lcall
adc
mov
sbb
arpl
cmp
in
ja
in
xor
inc
or
and
repnz
pushf
mov
aam
dec
lods
dec
push
mov
push
sbb
pusha
push
mov
cmp
dec
cmp
lcall
mov
sub
in
sub
inc
fwait
arpl
cmp
mov
int
sbb
jmp
clc
les
xchg
jno
mov
cmp
sbb
enter
dec
pushf
imul
add
test
mov
sbb
dec
dec
test
or
inc
mov
mov
mov
sahf
scas
add
pop
cmp
ljmp
nop
mov
fnstcw
cmc
mov
shrb
mov
lret
mov
mov
dec
pop
lcall
ret
mov
aaa
jle
pop
xchg
mov
jbe
pop
sbb
sub
pop
sti
add
cmp
jne
fldcw
push
sub
dec
fisttpl
outsl
dec
int
js
xchg
fdiv
dec
lods
mov
xchg
fs
jg
inc
imul
sbb
sbb
sbb
into
ss
push
or
or
push
pop
jno
movsl
sbb
jnp
push
xchg
imul
xchg
mov
int
mov
pop
pop
cmpsl
gs
repz
and
mull
sub
cmp
add
mov
lds
pop
dec
xor
mov
fptan
or
jmp
pop
movb
cmp
mov
mov
jg
inc
or
pusha
pop
inc
pop
pop
mov
cld
push
sub
lahf
sti
xor
repnz
and
mov
mov
imul
inc
cmp
insb
pusha
ja
dec
adc
dec
adc
clc
popa
pop
lods
sbb
testb
push
jg
cld
stos
jne
or
movsb
rol
dec
pop
int3
lds
jno
and
jp
mov
mov
loop
add
in
pop
pop
repz
cwtl
adc
nop
mov
jl
sub
gs
pop
ficompl
push
inc
gs
jbe
lea
pop
jg
or
cmc
mov
cmpsl
sbb
out
das
sbb
mov
out
rorl
fs
xlat
pusha
ficoml
dec
fidivrl
addr16
test
enter
mov
lret
iret
into
jmp
clc
sarl
pop
xor
loope
loopne
les
jle
outsb
ret
inc
roll
sub
mov
inc
cmp
xor
dec
fcoms
cli
stos
mov
mov
push
push
clc
stos
hlt
inc
movsb
leave
lods
sbb
or
xlat
cmp
cmp
stos
mov
jae
cltd
push
mov
jmp
mov
xchg
subl
cmp
cmp
sub
xchg
jg
cmp
sbb
pop
in
ret
add
and
or
push
and
and
adc
insl
shlb
cwtl
xchg
xchg
sti
and
and
mov
aas
push
outsb
xor
mov
das
and
pusha
jo
mov
xchg
les
outsl
pop
cmpsb
inc
mov
gs
mov
mov
jb
rcr
inc
std
adc
lods
mov
sbb
jge
xor
mov
sub
adc
pop
dec
mov
sub
cmp
aam
and
dec
cltd
sahf
sbb
call
jecxz
sbb
xchg
jns
mov
inc
fldcw
js
sarb
xchg
pop
and
jnp
test
aam
fistpll
cmpsb
sahf
dec
in
fstpt
add
out
dec
lods
dec
scas
cmc
push
sub
sub
adc
fldt
jg
inc
test
add
fisttpl
dec
lret
xchg
push
fs
popf
push
cmp
and
jbe
inc
mov
push
xchg
pop
cmpsb
fs
or
jnp
lret
bound
addl
mov
or
xor
fisubl
mov
mov
mov
adc
iret
aam
sbb
jp
jmp
stos
sarl
xchg
pop
mov
add
add
insb
mov
subb
mov
adc
push
mov
push
arpl
mov
sub
mov
push
clc
jne
jo
add
mov
jge
shrb
bound
jl
rolb
les
pop
cmc
pop
xchg
pop
ljmp
mov
js
jnp
loope
stos
popf
sbb
sub
jne
out
adc
fimull
cmc
mov
or
aad
dec
movsb
rcrb
dec
xchg
or
adc
inc
xor
fidivl
and
enter
jno
cmpsl
push
jecxz
pop
xchg
pop
repz
ljmp
fsubs
daa
lock
stc
and
or
xchg
and
inc
dec
mov
pop
stos
xchg
fcmove
gs
push
pop
mov
dec
cmp
pop
movsb
movsl
cmp
shl
cmp
repz
or
scas
addl
add
pop
es
das
pushf
xorb
sub
stos
lods
subb
sarl
popa
pop
pushf
imul
dec
sub
inc
cmp
mov
pop
sub
icebp
cmpsb
xchg
xlat
mov
or
mov
dec
push
or
cmc
cwtl
xchg
bndstx
ja
cmpsb
fists
mov
inc
add
jnp,pt
jae
jp
mov
js
das
std
in
xor
arpl
out
pop
mov
inc
lock
iret
mov
sbb
mov
mov
inc
pop
sbb
pop
mov
outsb
lods
loopne
mov
pushf
sahf
stos
jg
ss
mov
setle
popaw
arpl
add
subb
data16
add
jbe
test
or
push
enter
int
inc
cwtl
and
fcomps
jnp
pop
inc
xor
xlat
in
testl
test
andb
pop
push
loop
call
inc
inc
negb
jnp
sub
pop
add
pop
mov
mov
or
shrl
cli
or
xchg
jo
cmp
dec
lds
mov
dec
sahf
sahf
fistpl
and
rcr
shlb
pop
mov
push
inc
in
popl
add
mov
mov
roll
mov
push
cmp
shll
pop
mov
mov
push
mov
fsubrs
inc
dec
mov
nop
mov
das
outsb
dec
mov
test
sbb
pop
scas
fstpt
mov
imul
mov
or
push
dec
sbb
jmp
subl
xchg
shlb
popf
and
jb
mov
into
xchg
movsl
inc
push
xor
jns
and
hlt
xor
das
movsb
add
pop
sbb
mov
jo
mov
inc
ds
jmp
inc
inc
fcomip
dec
out
or
pop
in
test
popf
mov
insl
mov
test
fucomip
hlt
cmp
fsubl
hlt
adc
lods
xor
jecxz
push
xor
inc
in
xor
imul
jecxz
dec
mov
dec
or
mov
stos
mov
pop
jmp
and
mov
sbb
cmp
testb
inc
loop
push
lret
insb
jbe
fadds
jae
mov
in
dec
cwtl
fldt
cmp
sarb
sbb
shl
loope
je
sti
imul
test
add
imul
in
cld
stos
movsb
add
loopne
test
pop
jge
cmpsl
lods
dec
mov
imul
pop
jp
xor
push
mov
xchg
mov
mov
mov
xchg
jo
add
cmp
test
cltd
outsl
fbstp
xchg
sbb
addl
or
cmp
dec
mov
push
cmp
cmp
cmpl
pop
jne
xchg
jnp
lds
push
test
mov
lock
mov
mov
sbb
je
dec
mov
dec
or
jns
je
loop
mov
fwait
sub
sbb
sbb
sub
cltd
fidivs
sbb
jge
cld
fsubs
mov
xor
jb
cld
and
dec
push
fdivl
lods
jle
cmp
lods
pushf
fsubs
mov
cmp
sti
lret
scas
hlt
xor
sub
icebp
dec
xor
sbb
push
ret
mov
inc
lcall
jp
imul
sbb
jnp
jg
xchg
ds
jb
fwait
out
and
mov
add
arpl
fdiv
mov
loopne
insb
sbb
fdivrl
xchg
push
test
hlt
enter
xchg
jbe
loopne
or
inc
mov
mov
clc
mov
xor
xchg
sahf
sbb
fs
repnz
imul
inc
lret
jmp
inc
sbb
jns
jb
inc
mov
mov
movsb
into
dec
jmp
les
push
lret
jge
rcrb
inc
dec
sbb
add
repnz
mov
mov
dec
and
sbb
shrb
xchg
fcoml
aas
add
popa
lret
movsb
and
fbld
rclb
hlt
sar
mov
les
cmp
lret
rcll
sbb
sbb
xchg
pop
pop
and
outsb
gs
lret
iret
cwtl
in
lcall
and
movsb
lret
push
jge
adc
mov
ret
lret
mov
or
or
xchg
adc
dec
rolb
mov
fwait
push
mov
and
mov
movsl
and
dec
cmp
xor
adc
adc
test
xor
push
aaa
mov
jbe
pop
sbb
jo
pop
or
test
leave
mov
icebp
and
xchg
xchg
test
push
stos
push
push
call
mov
mov
je
and
hlt
repz
mov
mov
ja
cmp
dec
and
add
movsb
mov
cs
fldenv
nop
push
aam
dec
pop
ljmp
inc
mov
scas
test
scas
cli
jns
aam
leave
xchg
cs
xchg
mov
mov
bound
or
mov
mov
mov
jbe
mov
xchg
imul
ret
jb
adc
xor
fwait
hlt
xor
mov
jge
jle
rorb
xor
lahf
adc
cmp
stos
inc
inc
xor
pop
jb
imul
add
jle
mov
mov
cmp
dec
movsb
mov
cmpsb
jle
mov
or
mov
mov
std
jns
stc
mov
push
in
lret
int
fstpt
dec
out
and
xor
fidivl
mov
sbb
pop
push
fwait
pop
fld
sbb
lock
mov
sbb
pop
xor
movsl
sahf
lret
ss
push
sbb
xchg
dec
repz
addr16
push
dec
lods
in
mov
push
fdiv
in
cmp
dec
and
mov
adc
and
xchg
in
xchg
dec
lods
xlat
cmpsb
leave
aad
pop
dec
mov
pusha
fld
lahf
adc
dec
outsl
out
movsb
mov
iret
or
ds
jge
jle
inc
xchg
and
jecxz
mov
jecxz
idivl
stc
subb
xchg
xor
mov
loopne
adc
pop
mov
jg
sub
mov
mov
pop
and
adc
add
mov
mov
test
gs
mov
fsubs
xor
aad
lret
jns
out
push
cmpsb
sbb
mov
out
cli
iret
jnp
dec
sub
bound
jl
mov
adc
adc
lret
or
mov
fsubl
bound
pop
shll
fsubrl
imul
push
sub
movsb
or
inc
mov
or
fsubrl
imul
mov
pop
xchg
cmp
push
adc
dec
cmpsb
push
xchg
jp
sar
push
sub
fdivs
mov
test
ret
cmpsb
push
out
mov
mov
xchg
fsubrs
mov
or
test
adc
mov
in
mov
mov
sbb
adc
std
mov
jne
repz
mov
inc
or
mov
aam
dec
sahf
dec
aad
fdecstp
mov
dec
lret
adc
test
mov
or
and
xchg
mov
ret
dec
jge
dec
cltd
sti
jmp
mov
xchg
push
add
pop
jl
rcrb
sbb
lea
jne
cmp
inc
dec
lods
mov
xchg
jb
cmpsl
fwait
add
enter
cmp
sub
shll
push
pushf
xor
repnz
pop
insl
mov
arpl
popa
sete
insb
jbe
inc
sbb
push
out
cmc
call
imul
popf
inc
xchg
jl
rcl
adc
pusha
sbb
adc
fs
jmp
es
xor
or
adc
mov
adc
mov
ja
dec
xchg
and
ljmp
pop
mov
fsubl
lret
or
dec
adc
enter
dec
ret
mov
jno
mov
sbb
ljmp
xor
add
adc
dec
inc
test
gs
jg
scas
jno
dec
leave
inc
or
sub
xchg
fwait
imul
sbb
gs
dec
jns
mov
cmpsl
sub
imul
add
roll
int
mov
mov
lret
jno
dec
sub
adc
xchg
inc
mov
gs
xchg
xchg
sbb
int3
pop
mov
add
adc
xor
bound
mov
sub
mov
fcoms
fcomps
xchg
rcrl
and
aad
jg
push
fwait
cltd
pop
pop
imul
sti
pop
mov
jns
lea
enter
mov
inc
or
sbb
and
fisttpll
jnp
cmp
jmp
lret
sarb
test
xor
fnstenv
shl
pushf
dec
add
or
xlat
in
ja
je
jne
add
jp
pop
xchg
pop
dec
cli
mov
dec
lods
andl
pop
in
mov
push
test
ror
mov
popf
int3
xchg
sbb
call
fdiv
cli
cs
fisubrl
rcl
ret
sbb
push
mov
sub
jne
mov
lcall
pop
push
lds
dec
push
outsl
dec
add
sbb
add
xchg
call
ljmp
mov
jle
rcll
add
or
push
dec
cmp
jae
test
mov
stos
stc
sti
mov
std
je
dec
inc
xor
push
addl
enter
andl
ror
ret
fcom
and
sbb
call
mov
pop
sub
lds
pushf
scas
stc
in
dec
pushf
popf
mov
in
adcl
stos
scas
xor
pushf
fwait
sub
jecxz
lret
stc
ret
mov
je
rcl
lret
xor
leave
cs
nop
enter
jbe,pt
mov
inc
mov
mov
mov
or
movsb
mov
xor
mov
ret
int3
or
sub
mov
fsubs
inc
outsb
add
jge
pop
test
scas
add
int
push
repz
jg
scas
cmp
jmp
mov
addr16
pushf
and
idivl
add
loop
add
cmpl
mov
out
out
or
xor
mov
xchg
push
cmp
cmp
cs
jmp
lahf
shrl
cmovnp
je
cmp
enter
int
out
mov
lods
andb
mov
pop
xor
movsl
stc
and
mov
divb
xor
fisubl
enter
inc
pop
or
stc
xchg
mov
pop
sar
jg
fstpl
sbb
ja
jno
inc
cmp
mov
aad
ret
pop
pop
jnp
mov
lahf
add
push
or
cli
jecxz
aad
cmpsl
xchg
into
xchg
mov
sbb
pop
push
sub
fistpl
adc
and
movsl
add
sub
pop
subb
dec
xchg
mov
cmpps
push
test
shrb
mov
jns
aaa
fadds
add
jbe
std
sub
adc
jae
cmp
xor
push
push
scas
pop
add
fnsave
fists
pop
mov
sbb
ds
mov
lret
test
stc
je
push
lahf
xchg
or
mov
hlt
imul
and
sbb
xor
sub
stos
xchg
mov
xchg
mov
shrl
dec
jge
rcrl
test
pop
das
pop
jg
stos
pop
movsb
jl
addr16
dec
xchg
dec
and
push
loope
pop
test
sbb
adc
inc
aaa
divl
push
jo
sub
jg
or
mull
jo
inc
sbb
cltd
add
cmp
scas
pop
fsubs
mov
push
mov
pop
mov
mov
lahf
push
lods
jnp
out
lods
cmp
pop
pop
adc
aaa
mov
xrelease
aas
cmpsl
es
sbb
adc
jmp
push
mov
xchg
not
adc
jbe
mov
ljmp
insl
or
xlat
inc
xor
sbb
add
and
jl
sbb
cmpb
sbb
inc
sub
jl
scas
push
ror
and
and
mov
dec
xchg
push
push
aad
pop
mov
lds
lahf
jne
test
xchg
adc
adc
dec
sbb
imul
test
mov
sbb
imul
je
rcl
lret
inc
lods
adc
sub
push
mov
jne
mov
dec
push
fs
lahf
xchg
movsl
sub
push
stc
mov
fs
cld
lods
stos
jl
popa
sub
je
or
fldt
scas
rsm
mov
xchg
je
add
test
repz
jp
clc
in
lahf
dec
mov
fs
dec
push
sbb
push
push
daa
mov
cmpl
pop
xchg
mov
add
nop
dec
push
pop
adc
insb
xchg
mov
or
mov
xor
sti
mov
pop
xchg
pop
xchg
flds
imul
or
push
fwait
mov
dec
mov
in
test
pop
rcll
jns
add
mov
popf
lds
jge
push
mov
scas
mov
lock
cmp
or
ljmp
bound
gs
cwtl
mov
dec
mov
das
lahf
push
cs
data16
cmp
stos
xor
lahf
sub
fisubrl
jnp
bound
js
data16
test
or
mov
push
in
cwtl
ficoml
fistpl
mov
outsl
xchg
in
jg
frstor
loop
out
arpl
xchg
add
jl
pop
mov
sarb
fsubrs
sub
pop
loope
cltd
insb
lcall
bound
mov
loopne
mov
cmp
jbe
sti
mov
test
aam
xchg
dec
ret
rolb
mov
inc
inc
sub
outsb
pop
add
adc
mov
mov
dec
lods
lods
pop
fisttpll
imul
jg
filds
push
cwtl
sbb
loop
cmp
push
pusha
scas
das
outsl
sub
mov
dec
sbb
repnz
mov
mov
popf
bound
push
jg
out
stos
in
cli
sub
lods
push
add
mov
inc
scas
jne
std
cld
jns
jns
xchg
stos
jge
pop
adc
test
pushl
push
jns
rcl
ja
fbld
out
pop
icebp
arpl
mov
lea
sub
pop
test
push
xchg
inc
sbb
inc
or
mov
and
negl
int3
adc
shr
repz
pop
into
loop
shl
and
or
lock
pop
sti
int3
movsb
jb
aam
xchg
dec
dec
stc
push
fwait
cmp
call
push
ret
mov
jns
jb
lods
mov
and
in
cmpsl
popf
ljmp
ja
rcrl
sbbl
push
adc
sbb
cltd
jl
addr16
int3
mov
and
pusha
pop
adc
cmp
js
cmpsl
push
cmp
xchg
in
roll
outsl
in
xor
aad
cmp
jl
and
jecxz
and
xchg
test
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
ret
push
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
sub
or
or
add
push
mov
adc
mov
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
out
mov
enter
dec
push
or
int
imul
sahf
dec
mov
lret
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
mov
mov
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
cmpsl
xchg
test
dec
mov
or
mov
stos
xchg
stos
inc
lcall
ret
push
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
sub
or
or
add
push
mov
adc
mov
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
out
mov
enter
dec
push
or
int
imul
sahf
dec
mov
lret
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
mov
mov
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
cmpsl
xchg
test
dec
mov
or
mov
stos
xchg
stos
inc
lcall
ret
push
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
sub
or
or
add
push
mov
adc
mov
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
out
mov
enter
dec
push
or
int
imul
sahf
dec
mov
lret
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
mov
mov
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
cmpsl
xchg
test
dec
mov
or
mov
stos
xchg
stos
inc
lcall
ret
push
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
sub
or
or
add
push
mov
adc
mov
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
out
mov
enter
dec
push
or
int
imul
sahf
dec
mov
lret
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
mov
mov
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
cmpsl
xchg
test
dec
mov
or
mov
stos
xchg
stos
inc
lcall
ret
push
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
sub
or
or
add
push
mov
adc
mov
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
out
mov
enter
dec
push
or
int
imul
sahf
dec
mov
lret
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
mov
mov
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
cmpsl
xchg
test
dec
mov
or
mov
stos
xchg
stos
inc
lcall
ret
push
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
sub
or
or
add
push
mov
adc
mov
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
out
mov
enter
dec
push
or
int
imul
sahf
dec
mov
lret
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
mov
mov
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
cmpsl
xchg
test
dec
mov
or
mov
stos
xchg
stos
inc
lcall
ret
push
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
sub
or
or
add
push
mov
adc
mov
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
out
mov
enter
dec
push
or
int
imul
sahf
dec
mov
lret
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
mov
mov
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
.byte
pusha
call
pop
push
push
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
leave
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
xor
inc
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
mov
add
mov
add
push
call
call
jmp
cmp
jne
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
add
add
lret
imull
lahf
dec
test
arpl
push
leave
iret
cmp
mov
mov
stos
or
xchg
popf
adc
pop
add
bound
sbb
fldl
mov
xor
pop
push
hlt
sti
xor
xchg
push
jp
out
lods
fucomp
add
dec
push
dec
inc
jne
dec
xchg
add
sbb
fcmovnb
jbe
je
neg
lods
into
pop
inc
aad
repz
jnp,pt
jns
lahf
lds
pusha
in
jle
fwait
push
pop
mov
add
adc
stc
jl
mov
jmp
dec
lock
xor
mov
pop
lahf
sub
lock
ja
cltd
dec
add
add
adc
int3
mov
cmpsb
ljmp
xchg
fnstsw
sub
xor
jmpw
add
ret
mov
adc
adc
adc
push
ret
push
daa
mov
mov
add
aam
aas
dec
hlt
popf
fwait
pop
push
push
pusha
or
sbb
xor
mov
pop
fxch
stc
mov
ja
dec
jno
fwait
mov
cmp
arpl
inc
mov
mov
xor
pop
push
hlt
sti
xor
xchg
push
jp
out
lods
fucomp
add
lds
xor
inc
iret
cwtl
and
cld
mov
nop
aad
cmp
test
popa
mov
aam
push
inc
repz
fbstp
push
out
xorb
jle
jecxz
std
jbe
pop
call
jmp
nop
mov
sub
stc
push
divl
mov
repnz
push
lock
sub
in
jmp
mov
dec
push
pop
mov
ret
jp
leave
test
or
or
cmp
repnz
pop
lods
mov
fisubrl
mov
stos
cli
clc
pop
test
es
xor
popf
mov
lahf
aas
movsl
mov
jnp
fxch
mov
and
jmp
xchg
iret
in
add
stos
xchg
lahf
xor
inc
pop
scas
inc
sbbl
js
push
mov
or
adc
push
push
xchg
cwtl
pop
pop
xlat
and
lds
sub
mov
inc
and
add
inc
sahf
xchg
leave
inc
pop
roll
decl
ret
cmpb
enter
dec
mov
sbb
xchg
cmpsl
bound
mov
sti
and
pop
shl
pusha
out
js
lods
repz
std
push
jecxz
jnp
fdivl
cmp
pop
cwtl
and
addl
out
or
add
imul
in
sarl
jbe
jae
sub
dec
pushf
je
sahf
dec
mov
and
lods
stc
rcr
mov
push
push
push
rcl
ss
xchg
mov
sbb
shrl
push
push
dec
scas
stos
push
cmp
outsb
pop
call
iret
mov
xor
jbe
push
shll
fst
jbe
gs
sbb
xchg
rcrb
xor
fs
rol
cmp
jne
pop
repnz
lret
pop
jmp
mov
fildll
jns
ljmp
out
push
dec
ret
jne
pop
xchg
push
rcrl
addr16
in
aaa
fadds
pop
sbb
shr
cld
leave
sbb
pop
fistpl
push
fdivr
mov
xor
stos
add
out
scas
popl
mov
mov
mov
mov
loope
mov
push
add
ret
mov
int3
and
sbb
fisubrl
mov
cmp
jg
mov
mov
jb
xor
in
jmp
and
fwait
dec
xchg
loop
cmp
cltd
adc
push
mov
dec
dec
mov
mov
cmpsl
or
xor
out
jbe
ffree
popa
cmp
xchg
mov
fldenv
pop
adc
pop
out
ret
mov
fdivrp
pop
add
int
jle
pop
pop
inc
adcb
inc
aam
pushf
rcrl
call
jp
mov
test
cmp
arpl
push
pop
leave
fmulp
das
insl
adc
sub
ja
inc
mov
push
adc
test
sbb
iret
mov
mov
mov
aas
dec
cmp
cmpsb
lret
sub
add
mov
cmc
stc
jns
pushl
in
mov
ss
enter
cmc
mov
mov
sbb
ficoms
lock
inc
and
sarl
in
jmp
adc
add
lahf
outsl
pop
push
out
push
outsb
sub
in
mov
repz
or
loop
addl
out
or
fiaddl
rcrl
sub
and
cmp
jae
mov
xor
push
push
fdivrl
and
or
icebp
addb
aas
std
add
subb
sbb
xor
lret
jbe
fsubr
lods
stos
and
adc
add
add
mov
cmc
lea
mov
cmp
xchg
mov
sub
inc
cmp
subb
shlb
cmp
sbb
data16
xorb
outsb
jno
mov
push
aaa
mov
movsl
mulb
adc
mul
push
mov
mov
arpl
push
jae
stos
jge
jl
or
dec
or
push
subb
push
adc
std
jnp
pop
repz
xchg
cs
enter
mov
sub
pop
sbb
mov
adc
cmp
lcall
cmp
pop
in
insb
test
pop
adc
loop
out
jge
in
les
scas
je
and
push
push
xor
repz
rcl
pop
cltd
stos
dec
or
xor
push
lock
xchg
mov
pop
nop
ljmp
into
arpl
lods
xchg
sarb
mov
loope
aas
pop
jl
mov
cmp
xchg
mov
outsl
mov
leave
fs
decb
cld
mov
mov
arpl
neg
dec
sti
inc
test
sbb
jno
fnstcw
ljmp
push
loope
mov
xor
mov
and
mov
pop
aas
mov
lock
neg
das
pop
fiaddl
sbbb
movsl
fldenv
adc
shl
int
pop
cmp
js
les
add
and
or
les
gs
pusha
mov
jb
call
mov
subl
repz
and
dec
and
pop
mov
test
je
pusha
or
push
movsl
and
outsl
jecxz
mov
in
aaa
dec
aas
les
stos
loopne
adc
push
dec
es
adc
and
frstor
pop
adc
xchg
jae
pop
lret
dec
and
or
xor
pop
jo
data16
jmp
in
mov
lcall
sub
into
daa
xchg
lods
push
nop
pop
sahf
ret
aam
xlat
push
lds
stos
int
xlat
shll
pop
loope
or
lahf
and
or
mov
test
fstl
sub
jbe
dec
mov
scas
pop
outsl
insl
out
mov
sbb
inc
pop
xchg
ret
push
div
dec
push
xorb
jg
add
loope
fmuls
xor
add
int
or
mov
lods
fidivrl
pop
jnp
ja
add
pop
or
mov
sti
dec
jp
cmpsl
adc
out
aas
push
incb
shlb
push
gs
fcoml
mov
inc
fcomp
nop
push
sub
shll
addb
and
pop
vpcomb
subb
dec
fs
push
inc
xorb
jae
pop
sahf
prefetch
movsl
dec
inc
xchg
dec
ret
xchg
rcrb
or
les
shrl
and
cli
xchg
sub
mov
mov
pop
es
test
outsl
mov
pop
fcomps
lcall
mov
fbld
xchg
mov
mov
scas
xlat
cmp
int
mov
jbe
adc
inc
lods
jp
push
icebp
mov
xor
mov
subl
push
fsubl
push
sub
sub
fcompl
int3
jns
push
inc
jb
add
enter
pushw
repz
dec
jge
and
rorb
fcmovnu
sti
xor
in
push
dec
xchg
sub
dec
cmpsl
aaa
pop
cmpsl
nop
subb
jb
lret
and
or
sbb
loopne
enter
adc
test
jns
inc
pusha
loope
push
mov
mov
iret
xor
jb
mov
aam
int
and
out
add
push
mov
mov
sbb
dec
dec
pop
jl
cmp
lret
je
pop
dec
movsb
mov
inc
jns
faddl
jno
mov
mov
fyl2x
addb
mov
adc
sub
jno
push
ret
scas
sub
xor
xor
repnz
mov
sbb
cwtl
mov
fisubrs
push
sahf
sbb
pop
aad
out
push
aam
aas
push
jo
sar
push
adc
jnp
sbb
fwait
js
adc
stos
cmp
or
into
test
mov
insb
lahf
arpl
or
pusha
les
fs
ficoml
fwait
inc
add
jbe
push
adc
adc
std
rorb
enter
push
sarl
xor
jne
jmp
push
jecxz
mov
fistl
or
das
cmp
mov
fimull
pop
inc
sbb
mov
sahf
or
in
cmp
lret
lock
pop
stc
lret
inc
pop
sbb
jle
pop
push
jmp
icebp
into
leave
add
push
sar
mov
clc
dec
adc
test
jl
jbe
pop
sub
sbb
cmp
add
xor
loop
xor
sbb
xor
faddl
je
cmpsl
rorb
mov
mov
jns
int3
jnp
and
xor
bnd
out
sub
repnz
mov
es
mov
mov
inc
mov
shlb
insb
push
push
xor
sub
iret
push
xchg
adc
lds
addl
cmp
aaa
test
sbb
adc
stos
mov
and
fimull
xchg
imul
repnz
mov
ret
mov
dec
push
mov
adc
pop
or
jmp
imul
daa
dec
es
mov
repz
add
jnp
xor
adcl
adc
iret
call
pushf
jmp
sahf
or
and
test
fcompl
push
jmp
cmp
pop
sub
into
leave
popf
arpl
sub
sbb
in
rol
adc
inc
test
sahf
ffree
mov
lods
rol
test
mov
inc
jmp
orl
dec
cmpl
out
mov
dec
out
mov
and
loopne
stc
jb
dec
arpl
test
gs
jmp
or
iret
sub
sub
or
fwait
stos
icebp
cmc
cvtdq2ps
add
or
and
sub
cli
dec
stos
jae
jp
sarl
cmp
ljmp
lds
or
xchg
cmp
sbb
dec
imul
pop
ja
mov
repnz
xchg
ss
imul
xor
pop
outsb
xchg
lahf
outsb
test
pop
popf
xchg
jns
cmp
es
mov
dec
pop
test
inc
fsubrl
mov
sbb
push
cmpsl
es
bound
jmp
and
cmc
lods
fisubrl
inc
inc
cmp
dec
ljmp
cmpsl
xor
sbb
call
aad
test
lret
or
insb
push
push
insb
push
cltd
test
inc
insl
mov
adc
movsl
jl
inc
push
push
stc
imul
stc
sbb
or
loop
loopne
fstpt
int
clc
mov
xor
inc
pop
adc
dec
je
adc
or
or
sbb
cmpsb
pop
cmp
and
jb
push
xchg
add
test
sub
xchg
fisttpll
mov
mov
out
out
pause
mov
mov
jno
fldcw
pcmpeqw
les
xor
push
add
sub
lods
sti
mov
stos
push
repz
cmp
push
pop
inc
cmp
cmpb
sbb
mov
mov
mov
mov
insl
cmpsl
test
out
cmp
shlb
xchg
test
jge
pushw
pushf
sbb
push
ja
xor
push
adc
xor
arpl
cli
int3
mov
fcoml
cmp
sub
out
scas
mov
enter
push
dec
js
loopne
push
in
push
stos
arpl
call
pop
jno
sbb
psllw
inc
mov
cmp
icebp
sbb
cmp
or
cmp
add
sbb
scas
inc
cli
jns
sbb
pop
outsl
dec
stos
gs
cwtd
inc
adc
and
out
popf
pop
add
sbbb
xchg
and
dec
gs
sbb
leave
dec
insb
or
loopne
pusha
sti
push
push
and
fsubrl
pushl
inc
aam
pusha
cwtl
pop
ret
fstpt
jbe
scas
xchg
dec
jp
sbb
loopne
jecxz
inc
mov
cli
push
je
inc
push
scas
imul
in
loop
out
mov
aad
fwait
movsb
test
aad
xchg
ss
cmpsb
mov
insb
test
ds
sbb
inc
pusha
test
outsb
or
in
pop
inc
fs
dec
sti
add
push
lret
and
jecxz
lcall
jno
add
pop
dec
outsb
fwait
lret
mov
push
inc
adc
lods
lods
rorl
xchg
movsb
mov
lret
popa
in
and
xor
jecxz
or
cmpsb
dec
adc
dec
jb
cltd
out
push
xchg
ja
aas
sbbb
in
es
fisttpl
or
aaa
xlat
push
stos
sarb
fucompp
add
in
adc
mov
test
xor
mov
push
jg
or
xchg
push
dec
xor
inc
scas
sbb
xor
and
inc
hlt
cmc
dec
test
cmovs
ja
pop
insl
fiadds
aaa
pop
lds
cmp
or
lods
cwtl
pop
jo
call
das
stos
out
sbb
mov
add
push
aad
pop
enter
jge
clc
cmp
lahf
iret
xor
push
movsl
jecxz
push
mov
popf
bound
imul
clc
pop
jnp
movl
xchg
mov
cmp
pop
dec
sub
movsb
lahf
je
mov
mov
enter
sub
sbb
std
mov
pushl
lret
cwtl
bound
pop
sbb
mov
add
pop
jle
movsb
sbb
pop
mov
dec
test
sub
out
pusha
sarb
sbb
fbld
inc
popf
mov
inc
lahf
rclb
mov
cs
insb
jns
lods
push
loope
inc
push
sahf
jge
jne
mov
jne
bound
out
das
xor
jle
mov
xlat
lea
push
inc
es
push
dec
shlb
xor
add
xchg
sub
aam
or
scas
lret
popa
xchg
iret
ret
jge
mov
dec
sbb
nop
es
push
dec
push
mov
cmp
push
pop
out
cmp
out
sbb
negl
push
leave
mov
mov
pusha
cld
or
push
in
mov
div
in
jb
rclb
push
repz
push
push
sbb
and
inc
stos
icebp
outsl
je
mov
add
mov
inc
mov
mov
or
aam
add
dec
repnz
aam
dec
sar
jnp
inc
xchg
in
adc
add
adc
fldcw
mov
xor
enter
pop
pop
pop
es
call
or
mov
mov
push
rcrl
std
nop
mov
mov
ds
test
pop
mov
sti
xor
sub
dec
stos
sub
or
inc
push
push
push
imul
jne
add
mov
sbb
add
cmpsl
or
mov
fcompl
mov
or
in
cmp
ds
inc
mov
inc
dec
fists
popa
addr16
fucomi
mov
addb
lret
push
dec
shll
ljmp
dec
mov
pop
sbb
stos
movsb
xor
pop
pop
popa
movsb
mov
xchg
jp
mov
fwait
xor
push
and
or
jmp
jmp
mov
mov
lods
arpl
cmp
gs
push
jp
lock
insb
fisubl
push
dec
dec
cmp
mov
xchg
js
lahf
mov
dec
fwait
outsb
inc
adc
xchg
cmpsl
adc
mov
scas
jp
mov
imul
lods
popf
xchg
lea
bound
jno
or
out
cmp
hlt
cmp
sub
and
add
sti
cli
pop
mov
roll
lret
pop
scas
cmp
cmp
in
xor
hlt
sub
loope
xor
xor
stc
inc
arpl
push
mov
push
movsb
push
outsl
push
fidivs
fidivs
and
adcl
inc
jb
mov
cld
subl
stc
push
and
addl
xchg
test
jge
cmpsb
xchg
pop
lahf
pop
push
inc
mov
pop
or
adc
and
daa
mov
push
scas
pop
int3
push
ret
mov
loope
adc
inc
shll
sub
mov
andb
cld
jl
mov
mov
inc
cmp
lds
xlat
push
jl
jae
mov
adc
mov
cmp
cld
push
hlt
mov
adc
mov
xchg
jns
mov
push
fiaddl
push
push
sbb
ss
and
jge
sarb
mov
cli
nop
and
inc
shll
cmc
in
lods
pop
cmp
add
push
pop
jb
cmpsb
sub
mul
jge
adc
pop
sub
adc
orl
idivl
pop
or
adc
inc
enter
jnp
aaa
inc
sub
push
jl
sub
mov
and
pop
dec
pushf
sbb
mov
bound
jg
mov
addr16
jb
and
jnp
in
hlt
aad
push
sbb
lock
mov
mov
mov
ret
sub
sahf
cmc
cwtl
cmp
lea
xchg
cwtl
roll
dec
ljmp
out
lds
aad
movl
je
fs
mov
outsl
insb
mov
adc
and
mov
bound
stos
and
out
push
mov
pushf
push
les
fisubrs
movsl
adc
cmp
cmp
mov
inc
insb
push
add
imul
ss
dec
shr
pop
sbb
pop
call
dec
inc
clc
xor
cmp
xlat
mov
pop
and
mov
cmpb
mov
stc
bound
mov
add
adc
pop
lds
fbstp
jg
stos
adc
stc
and
ljmp
xchg
jb
or
inc
sub
sbb
mov
pusha
xor
cmpsl
sub
xor
jge
js
pop
pushf
in
sub
pop
nop
push
sbb
sub
ja
testl
int3
xor
cmpsl
mov
xchg
loope
imul
pop
cmp
popa
cmc
adc
sahf
jmp
movsb
cmp
mov
jae
jge
sar
xor
rol
imul
mov
or
jae
loop,pt
push
inc
aaa
ret
push
lahf
cmc
mov
into
dec
xor
lret
punpckhwd
dec
stos
fimull
stos
dec
jecxz
pop
mov
les
je
xchg
je,pt
jg
js
testb
cmp
insl
xchg
loopne
fstl
sub
gs
xor
out
pop
pop
fcomps
pop
sub
cmp
rol
adc
icebp
enter
add
incb
xchg
jne
adc
lds
sbbb
mov
call
lea
sbb
pop
mov
or
ret
aas
sahf
jle
gs
xchg
popa
test
ret
fsubs
mov
mov
add
dec
fsubl
daa
bound
loope
adc
and
pop
int3
ret
and
lock
sub
js
push
nop
dec
mov
dec
lods
sbb
movsb
xor
xchg
ds
xlat
adc
repz
loop
sti
stc
pop
jg
shrb
xchg
xabort
jl
icebp
push
sbb
mov
aam
sub
fsubrl
ret
sub
pop
adc
sbb
cld
into
xor
or
dec
mov
cmp
icebp
dec
insb
enter
xchg
sbb
jmp
pop
dec
mov
mov
inc
pop
test
ficoml
pushf
cmpsb
lahf
int3
add
dec
lods
push
xlat
ucomiss
jmp
xchg
fistpl
jle
mov
mov
xorl
loope
insl
clc
gs
out
out
out
xor
inc
push
stc
je
clc
mov
mov
mov
cltd
dec
cmc
dec
cmp
push
pop
test
ret
outsb
stos
mov
mov
mov
mov
movsl
fmuls
sbb
sbb
add
daa
aaa
cs
sub
dec
outsb
and
sub
ds
gs
jbe
sbb
mov
sbb
loope
xor
sbb
outsl
fs
ljmp
stos
xor
jmp
aas
nop
inc
and
xchg
cmc
lret
pop
and
jae
mov
out
and
add
mov
dec
fnstcw
add
movsb
scas
out
insb
push
sbb
hlt
call
fsubs
jae
lods
shl
xchg
push
jbe
adc
or
test
adc
nop
xchg
or
cld
mov
cmp
enter
nop
lahf
jmp
fs
lahf
xchg
sbb
mov
cmp
mov
mov
jl
sub
or
int
insb
loopne
sub
arpl
or
mov
push
push
imul
notb
xchg
mov
dec
xor
push
pop
push
add
pop
sub
jae
xchg
push
add
jnp
mov
xor
jbe
sbb
jns
ds
xchg
loope
out
cmp
fiaddl
push
mov
je
out
in
ror
sub
inc
inc
adc
mov
pushf
das
insl
sbb
test
sbb
in
loop
jl
mov
xor
pop
and
pusha
mov
aad
jo
adc
ret
jae
adc
pop
cmc
and
and
xor
and
dec
adc
sub
mov
push
sbb
dec
adc
sbb
jne
dec
jmp
out
bound
cmpsl
pop
out
fidivrs
xchg
lock
sbb
sub
jne
adc
js
testb
rorl
call
xor
lcall
or
and
int3
sbb
cmp
cmpsl
pop
jne
or
adc
and
stos
xchg
sti
in
and
roll
into
sub
es
mov
pop
push
lea
lahf
push
xchg
je
add
popa
cld
push
ret
pop
es
cld
lods
hlt
pushl
push
dec
adc
hlt
js
enter
fcmovu
jmp
mov
mov
gs
scas
push
test
sub
sbb
dec
xor
push
fbstp
add
mov
mov
xchg
adc
popf
sub
test
xchg
pop
fbld
incl
hlt
bound
les
insb
in
adc
rcll
ljmp
mov
jl
mov
mov
data16
loopne
jb
loope
iret
jne
adc
mov
inc
pop
in
jmp
push
jo
clc
jno
jne
lock
pop
fbld
adc
add
gs
sub
xchg
xchg
das
test
xchg
movsl
cmpsl
insl
das
lret
insb
test
or
xor
jbe
xchg
imul
fnstenv
add
cvtdq2ps
decb
mov
jae
hlt
dec
xor
lock
arpl
jne,pt
xchg
movsl
int
ljmp
jmp
mov
cmpsb
out
sub
mov
and
movsl
jbe
sbb
int
jbe
jge
lods
sbb
or
add
jl
arpl
lods
test
js
sub
mov
cmp
push
hlt
clc
scas
sub
sbb
mov
add
xor
sbb
jne
jb
mov
ret
int3
xchg
rorl
dec
call
pop
mov
aaa
jecxz
imul
pop
dec
out
or
adc
jnp
andl
iret
pushf
cmp
cmc
xchg
pop
mov
aaa
nop
dec
mov
pop
fwait
push
lahf
jle
xchg
cld
scas
in
jb
sbb
scas
ds
dec
test
ret
movsl
insb
jmp
mov
xchg
or
lea
negb
sti
pop
mov
loopne
enter
adc
adc
mov
and
popf
lcall
outsb
xchg
pop
adc
xchg
dec
xor
xchg
add
or
sub
mov
inc
cltd
into
in
jp
fnsave
icebp
xor
xor
test
out
mov
ss
push
push
adc
fsubl
mov
iret
ret
xchg
or
rorb
stos
mov
sbb
xchg
sub
divb
inc
xchg
or
push
in
out
jp
ret
stc
ss
cmp
add
inc
push
int3
fs
jns
xchg
mov
fisubl
push
loope
adc
inc
cmp
jne
cmpl
mov
jbe
mov
mov
stc
cmpsb
sub
mov
incb
fwait
push
xchg
mov
and
stos
sub
ss
or
repnz
scas
lret
cmp
dec
std
push
add
arpl
shll
pop
xchg
insb
mov
lock
aas
aaa
out
mov
push
sub
dec
ja
sti
rcll
insl
js
cmc
sbb
push
arpl
mov
xor
mull
jne
fs
or
adc
cmp
stc
push
adc
js,pn
pusha
dec
bound
mov
pop
mov
jne
jecxz
mov
dec
inc
cld
fnsave
call
icebp
stc
mov
aaa
fprem1
pop
lcall
lret
andb
das
jo
and
lret
stc
stos
mov
or
cmp
notl
inc
outsb
lods
mov
or
cmp
pop
push
push
insl
cmp
inc
rorb
dec
jbe
jp
imul
imul
sbb
out
loopne
xchg
aas
pop
jno
push
aas
inc
dec
lods
sti
adc
popa
inc
sahf
adc
pop
pop
into
nop
push
out
mov
pop
cmp
and
jnp
pop
cmp
mov
pop
inc
sbb
fs
and
enter
sbbb
inc
cli
addr16
clc
xor
mov
repz
cmp
xor
rcrl
jo
mov
ljmp
cs
rcll
mov
mov
dec
and
pop
loopne
xchg
xlat
lret
lock
stc
push
pop
cmpsb
lods
mov
mov
insl
sub
and
cmc
jno
iret
push
leave
lods
mov
jle
mov
lods
int3
mov
movsb
xchg
or
xchg
lods
scas
repz
imul
icebp
bnd
or
sti
xchg
repnz
call
add
call
addr16
pusha
fcoms
pop
jl
mov
inc
jp
sarl
adcl
cli
daa
xchg
das
mov
roll
cld
mov
notl
inc
outsl
out
rol
mov
cltd
es
mulb
sbb
xlat
mov
shll
imul
lds
xchg
xchg
mov
int3
fsubs
or
outsl
data16
jb
clc
push
mov
xchg
cwtl
jno
stos
cmp
mov
movsb
sti
cmp
jmp
xor
insl
xor
fsubrs
arpl
push
movsl
in
pop
inc
mov
pop
inc
addr16
gs
fwait
popa
mov
mov
imul
out
addr16
lods
lods
jne
lds
cmp
scas
gs
mov
jno
add
movsl
inc
scas
data16
add
or
ret
xor
adc
add
inc
cmc
jbe
flds
das
and
sarl
jb
sub
or
in
jnp
js
mov
inc
in
mov
lods
test
mov
jbe
mov
stos
les
ds
sti
sub
cli
cmp
mov
add
jmp
mov
sub
and
cwtl
mov
imulb
xchg
pop
dec
loope
sub
aas
in
popa
out
mov
test
mov
aaa
pop
jge
xor
sbbl
sub
xor
sub
imul
push
cltd
xlat
jae
pushf
cmp
clc
xor
js
mov
dec
pop
cld
lea
push
dec
icebp
dec
rcl
mov
dec
gs
mov
stc
lds
pop
mov
bound
test
jl
xchg
inc
jno
clc
aaa
adc
ret
stc
sbb
or
sub
incb
fiaddl
std
xor
lcall
insl
or
or
jae
leave
stc
cmp
sub
movsb
fs
xchg
push
rcrb
outsb
jo
inc
mov
jo
xchg
rol
dec
inc
push
push
push
mov
add
les
jmp
and
inc
lods
push
ss
das
call
ficomps
inc
inc
cmp
jmp
cmpsl
mov
or
call
xchg
sub
cmp
insb
pop
divl
add
add
aad
mov
xor
mov
sub
pusha
pop
cmc
jbe
xchg
or
cmp
popf
mov
fs
test
mov
push
or
dec
out
shll
movl
icebp
adc
xor
pop
ret
mov
add
push
out
stos
fcmovbe
jb
or
rcr
clc
jo
les
push
mov
lcall
pop
aaa
xchg
sub
lcall
icebp
sbb
das
cmp
das
fistl
mov
and
push
aas
pop
rolb
mov
loop
ss
mov
ret
sub
mov
cmp
jmp
movsb
in
mov
adc
outsb
jl
movsb
cmpsb
and
and
mov
mov
lea
dec
std
cmpsb
popa
call
int
fisttpll
push
inc
rclb
cld
pop
jae
fldl
xchg
lds
rclb
cmp
cmp
inc
bound
stos
out
dec
lds
xchg
pop
in
sbb
js
sahf
adc
dec
in
fsubrs
xchg
or
mov
imul
es
int3
jle
sub
push
add
push
sbb
pop
out
cmp
cmp
mov
adc
inc
push
and
iret
pop
sbb
jp
out
inc
in
lea
mov
jmp
push
stos
movsl
mov
cmp
shrb
loopne
fsubrs
add
out
lock
jle
sti
xlat
jmp
fimull
je
mov
and
clc
cwtl
insl
test
xchg
push
repz
hlt
arpl
push
mov
jg
jne
xchg
add
push
lods
lahf
jge
add
dec
popf
das
push
mov
or
fidivs
outsl
sub
lcall
enter
std
sub
mov
inc
pop
fidivrl
out
xchg
push
fmuls
test
cli
sub
ret
sub
outsb
mov
fcoml
add
sub
and
loop
jbe
or
inc
mull
xchg
inc
sti
push
sbb
jne
lods
decl
xor
jl
cld
fidivl
lret
daa
and
addr16
clc
stos
jmp
scas
xchg
sub
push
das
cmp
jae
inc
add
sti
xchg
push
sbb
inc
hlt
call
call
sbb
mov
jnp
stos
xor
push
mov
iret
xchg
sub
popf
sub
cmc
mov
sbb
cmp
jle
xchg
add
mov
je
cmpsl
add
into
push
mov
std
jb
mov
xchg
insl
shrb
jne
in
adc
aam
push
cltd
jo
inc
es
idiv
out
out
lret
cmpsb
add
xor
cmp
sbb
imul
cmc
js
lds
jg
imul
mov
sub
push
and
xchg
stos
out
xchg
scas
sbb
cmp
dec
and
insb
loop
lcall
pop
and
ss
fstl
cwtl
call
mov
gs
stos
pop
movsl
or
rcrl
cmp
add
std
fisubs
jbe
in
adc
loopne
mov
jb
test
add
mov
js
cwtl
mov
loop
inc
dec
sub
cs
movsb
test
xchg
aas
gs
push
jecxz
adc
adc
sbb
jge
stc
or
and
je
stos
inc
popf
ja
mov
mov
arpl
or
cld
loopne
fiadds
adc
aam
fsubl
pop
les
mov
jl
test
loop
rorb
dec
mov
push
mov
cli
mov
push
in
in
pop
in
mov
adc
test
mov
cmp
pushf
pop
add
lock
or
pop
xchg
adc
lods
and
jne
inc
mov
out
outsl
fs
sub
je
incb
add
mov
jo
jae
arpl
sbb
orl
mov
mov
xorl
call
pop
fadds
mov
inc
nop
test
jge
jbe
mov
push
sub
test
and
cmc
inc
lock
jnp
std
pop
xor
hlt
ds
std
push
xchg
ffree
cmp
dec
in
ficoms
pop
xchg
xchg
data16
mov
outsl
pop
pusha
mov
out
jnp
or
mov
jo
jb
imul
enter
dec
movsl
scas
inc
imul
fstps
jge
testb
xchg
dec
cmp
xor
inc
mov
mov
or
dec
sbb
mov
dec
mov
push
addr16
out
in
out
fwait
ja
nop
ret
add
push
push
clc
sbb
in
lock
xchg
mov
and
fildll
lods
push
pop
fldz
push
mov
or
add
int
pop
mov
imul
cld
mov
stc
shlb
rep
dec
js
sbb
jmp
ss
lds
movsb
mov
dec
jne
adc
and
xor
fdivrs
outsb
inc
xor
insb
mov
jbe
mov
fisubrs
insl
ffree
dec
mov
mov
mov
es
lods
notl
arpl
in
push
pop
cs
jbe
lea
dec
int
sub
test
imul
lds
mov
loope
mull
jo
leave
or
sub
xor
adc
mov
out
pushf
xchg
arpl
cmp
cmp
mov
mov
in
cmp
jmp
pop
icebp
ror
pop
lret
lods
out
bound
popf
insb
and
mov
mov
je
pushf
adc
pop
out
loopne
jo
cmp
aaa
inc
add
loope
clc
mov
dec
mov
in
and
mov
lods
jns
jae
into
xor
pop
lock
jge
test
sbb
bound
mov
and
clc
loopne
sahf
push
movsl
or
lds
lahf
cwtl
jno
dec
ss
outsb
leave
movsb
pop
inc
and
dec
add
iret
nop
andl
clc
test
mov
filds
xorb
push
rolb
cmpsl
adcb
lock
mov
pop
dec
ja
and
aad
insb
push
rcrl
shrb
and
lret
in
sub
imul
or
cmp
push
out
shrb
rcll
inc
lahf
je
cltd
and
lcall
stc
les
inc
stos
test
xchg
inc
aam
nop
mov
testb
jge
clc
movsb
mull
push
mov
mov
jecxz
inc
jb
les
popf
sbb
mov
and
dec
lret
inc
stc
lods
imul
inc
loopne
js
out
mov
push
adc
jmp
sbb
sub
jecxz
mov
jns
dec
mov
inc
cmp
jmp
lods
pushl
mov
lahf
jne
adc
imul
fldcw
mov
and
jo
stos
mov
inc
stos
pushf
inc
or
dec
dec
xor
in
and
std
nop
ret
mov
xchg
sub
icebp
sub
jle
bound
clc
add
inc
xor
xor
push
lds
or
outsb
mov
jns
imul
adc
rcrl
jo
adc
das
xor
out
adc
xor
arpl
shlb
scas
cmp
xchg
fadds
das
xchg
or
xchg
mov
push
add
out
mov
adc
or
mov
pop
dec
js
lret
fisubrl
adc
xchg
and
hlt
sbb
ja
and
nop
push
sbb
inc
test
dec
push
nop
sbb
sub
pop
aad
cmp
jae
icebp
sub
cmp
pop
or
loop
sahf
push
pop
xchg
cltd
or
and
ja
xchg
mov
insb
in
fimull
fstpl
aad
sub
aad
imull
movsb
xchg
pop
std
cmp
and
cmp
xchg
or
pop
std
xchg
negb
add
cmp
sub
xchg
jbe
push
repz
xor
jle
xor
ret
sub
inc
adcb
mov
pop
xchg
sub
cli
add
mov
adc
sbb
push
decb
xchg
push
push
and
test
pop
or
in
jmp
and
pop
jbe
push
enter
inc
lock
adc
xor
pushl
enter
ja
or
and
inc
fnstenv
dec
cmpsb
push
sub
fwait
push
sarl
sbb
mov
pop
adc
jae
mov
adc
repnz
and
call
and
popa
aam
push
xlat
dec
cmp
xor
int3
mov
push
and
xor
int3
pop
mov
out
shlb
lds
fistps
test
cmp
aaa
popf
mov
lahf
sbb
insb
inc
jg
xor
imul
pop
lods
cs
jo
adc
ss
movsb
xchg
fsubrl
imul
popf
push
fst
dec
ret
cmpsb
test
jmp
int
pop
imul
aas
jae
in
shlb
fidivrs
jbe
lock
adc
sub
sub
sub
jbe
mov
repz
sbb
orl
xor
cmp
enter
out
in
or
or
mov
daa
ss
sub
es
push
xor
and
test
xlat
cld
cs
push
pop
mov
cmpl
and
xchg
inc
lods
stos
push
xchg
pop
js
xor
sub
fistps
call
std
fcom
arpl
nop
adc
cltd
leave
mov
xchg
xchg
mov
xor
faddp
lahf
cmpsl
sbb
repz
dec
sub
adc
push
lret
push
imul
push
mov
push
xlat
mov
cmp
xchg
insb
scas
fdiv
fwait
mov
mov
fnstsw
jns
fcomps
and
in
popa
and
adc
in
jl
popa
in
test
lahf
and
add
inc
push
das
popf
mov
mov
fmul
fwait
bswap
dec
sbb
cmpsl
gs
jmp
ds
xchg
es
fcompl
popa
sbb
stos
mov
jmp
popa
shll
add
popa
ret
dec
inc
leave
and
gs
cmpl
fs
mov
ret
xor
or
pop
aas
in
loope
loope
nop
jmp
imul
mov
stos
cmc
push
xor
adc
jmp
out
dec
loope
fwait
xor
mov
jge
mov
xchg
sar
jnp
stos
aad
sbb
sbb
pop
stc
jno
rcll
xchg
cmp
push
pop
add
in
shlb
mov
rcll
ds
push
inc
sbb
fcoml
xor
shl
nop
clc
sbb
repz
or
pop
mov
in
jo
mov
cwtl
lds
lahf
test
scas
test
stc
sbb
ret
sti
push
fisubl
and
lods
outsl
mov
loopne
int
cmp
loop
add
enter
das
push
clc
fucomp
iret
rcll
add
adc
movsl
mov
imul
xchg
push
adc
lock
pop
add
dec
je
int
mov
mov
push
fdivl
stos
cli
hlt
stc
inc
cmp
sbbl
jns
mov
insl
fidivl
in
sbb
mov
sub
lds
fcomp
aad
cmc
jecxz
outsb
jmp
test
adc
out
stos
or
in
xchg
adc
in
xchg
ret
call
into
pop
sub
pop
sub
sti
dec
sub
imulb
neg
out
jns
adc
push
jle
ficompl
mov
lret
jae
mov
cmp
jl
movsl
jae
jae
pop
inc
xlat
and
or
sbb
outsb
jnp
xor
jp
sub
mov
add
lea
jp
insb
test
lcall
popa
loope
xor
dec
mov
mov
sub
adc
and
clc
inc
inc
adc
pusha
loopne
lods
cmp
sub
push
mov
aaa
sbb
dec
cld
test
vmovlpd
dec
dec
sti
adc
dec
imul
stos
push
paddd
fcmove
rorb
cmc
lock
popa
addr16
and
scas
cwtl
test
jmp
movsb
pop
push
ficoms
push
loope
iret
sub
inc
les
aas
ret
into
cli
push
jo
jle
cmpsl
hlt
inc
inc
sbb
push
outsb
adc
dec
test
mov
mov
pushf
addr16
test
fldenv
and
test
sahf
adc
push
add
mov
cld
mov
mov
cmp
and
sbb
xchg
mov
pop
dec
test
ror
pusha
mov
cmp
xor
sub
push
sbb
orb
addb
mov
jmp
andb
ffree
gs
mov
or
das
add
sub
fbld
inc
cltd
les
pop
mov
mov
and
sbb
jecxz
sti
cmp
cwtl
iret
xchg
jp
movsb
mov
test
popa
outsb
lods
or
mov
sbb
lock
in
cmp
jb
mov
sub
mov
mov
loope
or
lock
add
div
das
sbb
jnp
cli
test
cmp
push
mov
push
push
jl
out
cmc
stc
sub
les
rcll
xchg
inc
test
lahf
out
stos
ljmp
bound
lock
jl
nop
xchg
jo
clc
xchg
mov
in
les
in
es
mov
lods
fldl2e
ss
or
adc
adc
out
add
add
mov
mov
imul
nop
pop
rcr
nop
lret
stc
leave
mov
and
aam
in
inc
repz
in
xchg
push
test
add
fimuls
scas
cmp
in
push
mov
sbb
inc
insl
fsubrs
push
rep
mov
sbbb
inc
inc
lcall
lea
or
ret
mov
int
stos
pop
mov
fsub
sbb
ret
dec
inc
fcoml
fdivr
sbb
and
aad
mov
lahf
pop
int3
sub
inc
cmp
inc
das
movsl
xchg
add
mov
aas
pop
cmc
xchg
ljmp
pop
cli
movsb
ficoms
xchg
push
cld
lcall
cwtl
dec
mov
clc
adc
test
mov
fdivp
rcrb
adc
mov
jb
cmp
or
mov
fcmovb
orl
mov
addr16
adc
cmpsb
insb
movzbl
add
push
rcrl
jp
ds
js
lret
clc
loopne
sahf
stc
or
in
hlt
mov
sub
add
in
xor
ljmp
stc
mulb
inc
adc
fsubl
ret
loopne
in
sbb
or
xor
mov
push
loope
stos
in
ret
imul
scas
bound
mov
pusha
add
sbb
push
cltd
push
imul
divl
xor
fistps
lahf
jg
fwait
pop
mov
dec
adc
lahf
mov
mov
sub
dec
rcll
loopne
lret
js
xchg
aad
in
sub
push
xor
leave
ret
adc
insl
movsb
outsl
jo
fucompp
xchg
ret
shll
xchg
ja
nop
mov
or
repnz
cmp
sarl
sahf
or
mov
pop
call
jbe
dec
or
popf
or
and
mov
jmp
mov
xchg
mov
movl
cmp
xchg
jno
stos
push
cmc
fs
cmp
lock
cmp
mov
insb
mov
jmp
push
xor
setb
mov
sub
add
or
repnz
cmovs
shrb
into
dec
cli
push
mov
jmp
xchg
cwtl
push
pop
mov
inc
arpl
jg
fucomp
mov
cmp
int
and
mov
xchg
jl
in
imulb
jns
daa
push
daa
rolb
arpl
test
loopne
xor
xchg
aad
push
lret
fisubrs
data16
jl
cwtl
aas
mov
xchg
pop
jae
xor
std
enter
inc
xchg
shlb
adc
insl
mov
jle
ret
pop
fs
inc
add
outsb
pop
ljmp
insb
cmpsl
arpl
jp
xchg
push
pusha
pop
aaa
nop
scas
or
fadds
notl
pop
gs
insl
insb
jmp
mov
push
adc
pop
xchg
mov
mov
mov
push
cmp
sub
aaa
mov
clc
outsw
mov
sub
outsb
jecxz
or
cli
scas
ss
xchg
out
adc
ja
les
sbb
mov
add
faddp
push
aam
stos
hlt
test
decb
lahf
xchg
es
test
xchg
or
cld
fistl
inc
mov
xchg
icebp
push
sub
in
std
imul
loope
adc
sub
mulb
add
outsl
mov
push
fwait
cmp
lods
pop
pusha
arpl
mov
sub
xor
cmp
sbb
mov
lock
sarl
jns
jg
popf
cmc
or
cmp
jl
dec
aad
and
lret
xchg
std
cmc
xor
xchg
sahf
ljmp
test
cmp
xor
jmp
stc
xor
insl
add
movsl
out
and
pop
sahf
test
dec
add
lcall
clc
cmpsb
xchg
mov
jg
out
mov
aas
ljmp
add
dec
jecxz
xchg
jo
mov
add
ja
xor
jg
push
das
out
lcall
add
or
xor
std
lcall
lods
pusha
outsl
imul
call
lahf
push
insb
mov
lds
cmpsb
shlb
mov
notb
dec
dec
dec
pop
xchg
xor
insb
mov
mov
inc
int
or
or
sbb
jl
inc
mov
inc
push
push
addr16
cmp
pop
aam
push
mov
dec
jnp
fistl
scas
xchg
rorl
xchg
mov
pop
fwait
dec
in
lret
push
shrb
xlat
out
cmpsl
mov
push
daa
lock
and
jg
arpl
adc
lods
or
push
ror
gs
nop
sti
dec
loopne
insb
xchg
clc
dec
sbb
rolb
jmp
adc
ret
xchg
mov
mov
mov
ds
or
and
cmp
lock
xor
lahf
cmpsb
aad
int
and
pop
sar
xorl
insl
lods
cmpsl
push
in
out
sti
gs
adc
and
fsubrs
or
dec
cmp
add
rolb
mov
jl
repnz
adc
adc
push
or
negl
int3
mov
jmp
push
les
jns
mov
adc
mov
mov
imul
repz
notb
dec
jg
fisubrl
repnz
or
mov
cs
cmp
xchg
outsl
test
inc
repz
test
jmp
jge
inc
mov
fnsave
adc
pop
cmpsb
xchg
push
push
adc
aas
push
or
notb
lcall
cld
xchg
outsl
or
jno
or
xlat
xor
rcrl
imul
scas
sub
imul
aam
shll
andl
cmc
jns
popf
jg
cmp
paddusw
dec
sbb
push
bound
pop
andb
sbb
insb
iret
movsb
loopne
mov
push
sub
aad
or
sub
les
jl
cmp
movsb
push
es
ja
clc
xchg
pop
push
jns
cmp
aam
adc
stos
repz
icebp
or
mov
mov
std
idivl
cwtl
push
test
mov
or
fdivr
cltd
jae
adc
mov
rcrb
jmp
enter
mov
roll
sub
fbstp
jle
lods
cmp
pop
inc
shlb
mov
icebp
push
add
xchg
addr16
ss
sub
pop
test
xor
pop
ds
or
insb
adc
xchg
mov
or
adc
cs
dec
pusha
pop
stos
js
xchg
imul
test
cmp
mov
push
pusha
or
cmp
jno
xor
inc
addr16
hlt
into
adc
jle
inc
loop
cld
xlat
loopne
push
mov
fcomps
pop
jne
push
in
nop
repz
xchg
jg
sub
mov
mov
xchg
ja
xchg
dec
int
aaa
mov
or
xchg
mov
push
xor
sar
sbb
lods
into
cmp
or
adc
push
push
pop
add
adcb
dec
in
nop
fisubrs
pop
loopne
gs
idivb
iret
movsl
fisttpl
cmp
or
jno
xchg
mov
mov
cld
cmpb
sub
xlat
arpl
mov
in
notl
adc
lret
int
mov
sbb
push
rcrb
cmc
and
sbb
pop
xchg
out
xchg
fisubl
orb
xchg
mov
cwtl
dec
pop
sub
mov
pop
lods
mov
inc
out
inc
push
pop
add
xchg
cs
cwtl
nop
popf
clc
inc
repnz
nop
cmpsb
sbb
aad
cmp
adc
xor
jmp
ss
cmp
test
int3
mov
or
cmp
xor
rorl
das
loop
mov
shr
rcrl
mov
dec
fadd
andb
xchg
sahf
sbb
seta
sub
shrl
test
lahf
roll
ja
adc
loop
or
repz
bound
insl
xor
jp
cld
loope
test
pop
out
mov
gs
jmp
jb
cmc
scas
pop
ss
fdivrl
stc
mov
add
cmc
nop
xchg
idivl
adc
das
inc
dec
pop
or
mov
push
lahf
fcmovne
adc
xlat
and
add
mov
and
gs
loop
pop
pop
jmp
rorb
jb
inc
and
jge
out
jmp
mov
pop
pop
pop
push
inc
fcoms
push
dec
sbb
pushf
stos
add
orb
mov
mov
aaa
push
in
outsl
mov
imul
pushf
pop
inc
or
fcomps
and
stos
into
arpl
pop
sub
mov
jo
mov
jne
pop
outsb
lret
mov
push
pop
cmp
insb
notb
add
sbb
add
sub
xor
orb
idivl
sbb
mov
lods
push
mov
arpl
mov
mov
fiadds
stc
jg
adc
xchg
mov
mov
loop
mov
ret
mov
lahf
cmp
or
subl
aam
jecxz,pt
mov
aaa
out
jge
ret
cs
dec
jno
js
insl
xchg
nop
inc
cld
lahf
push
sbb
roll
ret
mov
repnz
inc
sub
jmp
mov
xor
out
and
lock
loopne
xor
movsb
add
mov
mov
xor
in
adc
cli
cwtl
sub
out
imul
mov
fstl
rcl
dec
popf
pop
rcrb
add
pop
sub
xchg
aad
dec
or
push
and
push
sub
outsl
imul
ss
inc
xlat
or
jmp
mov
add
mov
lock
repz
insb
sub
or
repz
and
xor
test
filds
iret
js
out
pop
pop
cli
in
xchg
mov
lea
mov
int3
xor
and
scas
call
sbb
xchg
xchg
jmp
xchg
pop
wrmsr
push
add
sub
adc
outsl
out
imul
enter
sub
add
test
js
push
push
xor
sbb
movsb
aam
stos
and
imul
sbb
xchg
out
xchg
adc
pop
imul
stos
xchg
sub
push
jnp
inc
xchg
sahf
or
daa
bound
sbb
into
adc
and
loop
scas
cmp
mov
inc
notl
leave
fistps
push
pop
mov
jmp
mov
inc
test
mov
pop
shr
push
lods
mov
pop
notl
cmp
scas
inc
cmpsb
push
popa
inc
cltd
nop
js
push
push
orb
and
insb
into
mov
je
loop
lcall
in
jge
jnp
int3
stos
jecxz
enter
mov
and
das
lea
push
insl
jmp
mov
icebp
push
roll
in
shlb
inc
sbb
inc
dec
fcomps
jle
fbstp
popf
adc
lahf
pusha
jle
mov
push
aas
std
pop
adc
in
adc
dec
jb
sub
pop
lahf
lret
in
outsb
dec
mov
stos
rorl
xor
push
pop
xor
pop
pop
mov
and
sahf
inc
dec
mov
rcll
add
sti
pop
in
mov
sub
stc
sub
sub
xchg
or
gs
imul
mov
fwait
mov
xor
or
data16
movsb
dec
or
xchg
lahf
notb
jecxz
enter
mov
mov
dec
ret
adcb
scas
loop
bnd
lea
jo
push
lods
pop
gs
sbb
subb
and
lods
lret
xchg
mov
popf
scas
aam
test
jae
cmp
mov
subl
pop
roll
decl
ret
cmpb
enter
dec
mov
sbb
xchg
cmpsl
bound
mov
movsl
mov
mov
sub
cmp
orb
cmp
mov
xlat
sahf
and
ja
pop
sub
adc
pop
in
lock
movsl
sub
hlt
or
lahf
sub
adc
ret
add
ficomps
dec
mov
fildll
push
xor
icebp
mov
rcrl
addr16
pop
push
rcll
lret
jmp
leave
lcall
adc
pop
dec
fldt
inc
leave
out
sbb
inc
icebp
cwtl
cmpsl
stc
enter
dec
rep
mov
or
sub
in
add
fsts
jbe
fidivs
cmp
push
out
pop
pop
mov
orb
dec
int
jno
gs
pop
pop
xchg
adc
mov
dec
leave
adc
pop
aam
rcll
arpl
fsubl
or
stos
jo
sbb
ret
pop
repnz
or
xchg
pop
inc
pop
pop
ja
add
adc
jle
pop
lret
js
fld
pop
sub
push
pop
mov
mov
repz
sti
mov
jecxz
idivl
shr
repz
ret
loopne
mov
int
imul
sahf
dec
mov
int3
pop
sub
dec
push
or
lret
fucomp
jae
fldt
arpl
pop
stos
push
test
test
inc
mov
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
sub
mov
mov
add
fucomi
bnd
popf
scas
inc
fwait
leave
loop
mov
lods
pop
test
lods
inc
sbb
stos
mov
stos
xchg
stos
inc
lcall
les
xchg
dec
mov
or
ret
fld1
jb
fwait
lea
xor
test
sub
mov
popl
xor
mov
and
xchg
adc
addl
add
mov
repz
sti
mov
jecxz
idivl
shr
repz
ret
loopne
mov
int
imul
sahf
dec
mov
int3
pop
sub
dec
push
or
lret
fucomp
jae
fldt
arpl
pop
stos
push
test
test
inc
mov
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
sub
mov
mov
add
fucomi
bnd
popf
scas
inc
fwait
leave
loop
mov
lods
pop
test
lods
inc
sbb
stos
mov
stos
xchg
stos
inc
lcall
les
xchg
dec
mov
or
ret
fld1
jb
fwait
lea
xor
test
sub
mov
popl
xor
mov
and
xchg
adc
addl
push
push
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
xor
inc
dec
test
jne
ret
push
push
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
ret
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
inc
add
ret
mov
ret
fadds
add
mov
add
inc
inc
add
push
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
ret
