push
or
add
add
add
rorb
add
add
add
or
add
add
adc
add
add
add
pop
add
add
adc
add
add
add
add
in
loopne
add
loopne
add
loope
add
loope
add
loopne
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
lods
lret
js
push
out
out
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
dec
jp
add
rorb
add
pop
adc
inc
xor
and
lods
and
dec
mov
mov
mov
lods
xchg
mov
sti
int3
mov
xor
nop
mov
mov
cltd
mov
dec
int
jbe
cltd
xchg
cmc
pcmpeqw
mov
jns
mov
push
mov
inc
sti
cmp
mov
iret
adc
lock
pop
pop
rcrl
icebp
dec
icebp
stc
cmp
push
sahf
mov
lret
inc
in
mov
ret
out
mov
adc
jo
xchg
scas
sbb
adc
in
test
cltd
inc
arpl
cmp
arpl
dec
sub
cli
or
in
testl
or
lret
fwait
lcall
jnp
cmp
fidivrs
and
xchg
in
dec
bound
jnp
stos
cmp
pop
add
jge
mov
loop
popa
sub
int3
data16
mov
subl
int
add
pusha
mov
gs
sbb
cmp
inc
push
add
cmpxchg
jb
pop
cli
out
aas
sti
ljmp
loope
mov
scas
mov
mov
loopne
stc
test
mov
push
ret
aas
sub
mov
sbbl
inc
pop
mov
rolb
push
mov
ret
dec
lock
fisttpl
out
enter
adc
mov
adc
aad
sbb
mov
jge
loop
mov
mov
imul
sbb
xchg
adc
das
mov
xor
mov
cli
dec
add
movsl
loopne
pop
sarl
inc
test
xlat
or
push
xor
push
mov
cli
jmp
fldenv
into
inc
dec
push
popa
je
xor
jno
push
xchg
mov
es
in
sbb
and
cltd
jg
jnp
addr16
sahf
movsl
jo
jmp
jg,pn
xchg
mov
mov
rcrb
in
push
mov
test
adc
inc
xor
pop
mov
out
aaa
or
and
pop
sbb
jae
or
cmpsl
lcall
cmp
fcomip
in
xor
cld
aad
clc
cmpsl
cmpsl
mov
movsl
ret
movsb
push
sbb
or
sbb
mov
jge
test
xchg
pop
inc
dec
insb
jbe
lret
dec
push
or
mov
adc
jle
dec
cli
or
jbe
leave
cmp
orb
or
and
stos
scas
dec
mov
xorl
push
pop
pop
sbb
push
or
mov
push
lret
and
les
mov
pop
ficompl
ljmp
sub
mov
mov
lret
mov
scas
es
or
pop
inc
inc
inc
fdivs
jp
mov
fsts
fstl
das
mov
add
in
shll
nop
xor
dec
inc
pop
iret
in
hlt
aas
and
dec
bound
jbe
cli
pop
and
fdivr
jae
sarb
fwait
inc
pop
arpl
ljmp
sbb
lret
movsl
jl
inc
mov
mov
jecxz
pop
sub
sbb
inc
or
adc
sbb
int
lods
cld
std
mov
mov
and
sbb
in
xor
mov
in
call
clc
sahf
cltd
or
in
aaa
or
mov
xchg
sub
pushf
fwait
sti
xchg
cmpsb
xchg
repz
mov
repz
dec
pop
in
ficoms
es
mov
out
rolb
pop
loop
pushf
xchg
mov
mov
sbb
inc
pop
insb
popa
dec
push
or
movsb
jl
jne
test
mov
scas
cmp
push
or
dec
inc
cltd
daa
shrb
jle
cmpsb
daa
into
out
xchg
jecxz
jle
dec
in
in
mov
dec
mov
and
push
cmpsl
cmp
add
bound
mov
pusha
xor
cmpb
out
push
int
fdivs
lods
adc
pop
flds
subl
leave
and
daa
out
and
cli
rclb
fs
cmc
xchg
xor
xlat
iret
xor
or
daa
aad
or
imul
adc
xchg
jbe
js
jbe
filds
or
ljmp
xchg
ja
iret
push
push
repnz
pop
xchg
push
push
cs
cmp
sub
jp
lds
orb
loopne
in
mov
int3
xor
push
ljmp
xchg
xchg
imul
fisttps
inc
int
popl
jecxz
push
jo
repz
push
nop
mov
push
test
daa
jmp
in
add
mov
jl
dec
pop
stos
bound
xor
dec
mov
insl
push
cmpsl
aam
mov
test
popf
jge
hlt
adc
and
dec
dec
xchg
add
jmp
jbe
mov
dec
and
pop
xor
cmp
mov
bound
nop
aas
cmp
rorb
repnz
out
xor
loope
cmp
lret
enter
bound
mov
mov
mov
push
lahf
add
xor
add
rcl
inc
loop
arpl
test
or
push
sub
xor
loop
repz
mov
ret
add
mov
xchg
stc
xchg
xchg
fs
lea
outsl
mov
mov
not
aas
pop
or
sbbl
xor
xor
out
jns
cmpsl
test
add
lret
fidivrl
sub
nop
jo
mov
rcrb
push
dec
mov
mov
cwtl
push
push
pop
cli
mov
es
shlb
in
imul
or
ret
out
dec
dec
xchg
jmp
push
test
add
shll
cmpsb
mov
outsb
neg
dec
mov
pop
sub
insl
gs
xor
adc
adc
sbb
fcoms
push
push
dec
insl
mov
and
loopne
inc
jmp
mov
test
xor
insb
jl
fistpl
mov
andb
cmp
fs
xor
cld
std
inc
in
sub
mov
sub
or
push
pop
and
sub
movsl
popf
outsb
scas
pop
ficompl
cmpsl
add
xor
pop
loopne
jo
cmp
mov
lcall
sub
inc
loopne
loope
popf
fcompl
je
in
jno
pop
add
push
xchg
xor
xchg
sbb
popf
cmp
aaa
nop
mov
pusha
stos
mov
movsb
into
or
lahf
int
mov
negl
psrlq
cmp
addr16
dec
insl
sti
fwait
jno
inc
push
test
out
rorl
cmp
sbb
out
insl
hlt
stc
addr16
scas
jno
mov
idivw
enter
and
cmpsl
lea
pushf
daa
loop
xlat
faddl
sub
pop
xchg
sbb
loopne
inc
jl
inc
aaa
jno
insl
xlat
out
call
adc
xor
test
arpl
dec
or
fwait
lret
ficomps
shrl
dec
hlt
pushf
pushf
les
pop
jno
sti
pop
inc
movsb
pusha
cmp
jno
push
jo
adcb
inc
fidivrl
and
pop
lcall
pop
inc
jmp
jg
clc
mov
push
fwait
outsb
jnp
xor
jb
leave
push
cmp
adc
lahf
jge
movsb
or
or
push
or
mov
mov
xor
mov
mov
pop
jo
adc
and
cwtl
scas
imul
data16
push
pusha
cmpsb
dec
stc
lret
cltd
xlat
fdivrs
imul
jno
daa
sbbl
pop
push
sti
mov
pop
xchg
sub
cli
dec
lret
mov
sbb
add
jbe
xchg
ret
negl
and
add
cld
push
pop
cmpb
das
push
daa
pushf
mov
pop
scas
shlb
test
cs
in
out
out
sub
fucomp
add
sbb
or
jns
outsb
push
sbb
cmp
dec
pop
push
mov
dec
inc
std
outsl
insb
pop
into
push
mov
daa
std
jecxz
mov
pop
arpl
rcll
test
add
clc
pop
sbb
mov
pop
ljmp
test
mov
xchg
push
pusha
sbb
mov
and
mov
cltd
inc
nop
dec
imul
adc
jmp
xor
cmp
jmp
mov
xchg
fstl
cmpsl
inc
insl
push
pop
mov
cld
ss
imul
imul
in
xor
push
ja
push
inc
mov
rclb
cmp
mov
or
rol
inc
cmp
in
or
pop
or
lret
dec
jg
adc
fmull
in
iret
movsl
jg
push
cwtd
mov
push
dec
test
pushf
cmp
or
mov
mov
into
fs
mov
sbb
jecxz
stos
push
jge
lret
out
mov
pop
icebp
fs
inc
push
and
push
adc
scas
pop
xchg
in
xchg
sbb
pop
ljmp
shr
fs
push
in
lahf
mov
adc
inc
push
stos
popf
xchg
mov
js
and
push
xor
jb
pmaxsw
jl
mov
and
mov
int3
add
mov
and
jno
ror
adc
mov
movsl
addb
ljmp
or
push
jl
pusha
cmpb
mov
push
push
pop
cmpsb
sub
mov
fwait
sbb
sub
push
pop
test
mov
mov
xor
xchg
mov
or
in
jmp
cmp
movsl
mov
test
lahf
sbb
aam
js
iret
mov
sub
rcl
dec
fnsave
xchg
test
cmp
jl
mov
pop
repz
push
shlb
mov
lock
aas
and
cltd
mov
and
leave
lahf
xor
into
rcl
addr16
mov
xchg
adc
insb
ret
dec
pusha
xchg
in
sbb
fisttps
in
test
fwait
push
loope
int
mov
popf
dec
dec
jg
jmp
pop
mov
ljmp
jmp
cltd
stos
rorb
out
cmp
mov
dec
jae
mov
jmp
test
fnsave
lea
xchg
xchg
adc
rorl
out
jl
test
cmp
pop
call
and
xor
pop
push
jl
mov
ja
pop
cmp
push
inc
pop
sub
mov
pop
adc
iret
lret
jo
pop
js
es
dec
xchg
bound
loopne
jno
sub
sbb
popa
dec
adc
js
les
mov
xlat
mov
in
xor
jmp
sub
and
xchg
pop
mov
push
faddl
int
lods
jno
loop
dec
push
dec
cmp
lock
mov
imul
pop
insl
fidivrs
test
fdivr
ljmp
xchg
addr16
sbb
or
sbb
adc
popa
fwait
pusha
jne
push
ror
jg
mov
sub
lret
test
push
or
fisubrl
xchg
pop
jmp
jo
xchg
sbb
push
jle
rorl
cmp
stc
out
loop
push
cwtl
mov
in
and
adc
mov
aaa
sti
mov
das
bound
dec
insl
andb
arpl
lret
push
and
in
or
addr16
sub
fadd
sub
xchg
rorb
sbb
and
cmpsb
or
push
mov
cmpsl
inc
sbb
ret
decl
push
or
icebp
dec
addr16
mov
sahf
jmp
push
lret
es
call
sub
xchg
sbb
cmpb
push
sub
mov
hlt
fidivs
sahf
add
xchg
sub
adc
xchg
add
mov
add
cmp
mov
repnz
mov
mov
or
cmp
nop
out
insl
inc
dec
iret
push
xor
fs
lods
shll
dec
cs
imul
mov
inc
loop
jae
lods
dec
jnp
dec
stc
fsubr
xor
and
jae
shll
mov
repnz
cli
jecxz
je
pushf
ljmp
push
xchg
pop
mov
imul
dec
mov
js
sub
fidivrs
ljmp
je
xor
repz
outsb
or
clc
cmp
inc
orl
jg
add
std
mov
mov
dec
sti
inc
xorb
stc
outsb
lret
test
outsl
subb
cwtl
fidivs
jle
mov
mov
lock
dec
scas
jbe
out
inc
xchg
xchg
jae
in
cltd
loopne
lret
mov
out
sbb
push
mov
neg
shrl
jg
daa
mov
adc
cmc
vsqrtpd
idiv
out
out
pusha
jo
sbb
popa
movsb
jne
daa
sub
adc
sti
dec
mov
outsl
xor
fistl
iret
fnstcw
lods
xchg
mov
mov
mov
push
mov
xchg
shlb
dec
loop
popf
arpl
and
imul
jo
nop
mov
mov
js
rcr
jbe
inc
pop
mov
dec
rolb
cmp
dec
and
jmp
fnsave
sti
push
mov
stc
sub
ds
ljmp
xchg
push
mov
dec
jp
dec
mov
mov
out
call
outsl
mov
cwtl
sub
push
jg
lahf
cmp
xor
and
sti
int3
sarl
data16
push
stos
sti
push
sub
xchg
mov
jae
inc
sub
cmp
cmpsb
sub
mov
icebp
nop
loope
sbb
ja
enter
loop
xor
lahf
or
and
clc
fwait
push
stos
inc
ficoms
xor
or
push
and
out
add
lock
fcomps
pop
test
je
jae
jo
repz
pop
xor
or
sti
cmpsb
test
insb
stos
in
inc
xchg
and
int
xchg
icebp
leave
mov
imul
adc
lods
inc
cmpl
orl
lods
sti
pop
sub
out
int3
mov
sahf
call
daa
or
cmpsl
or
pop
jbe
jg
inc
and
cmp
int3
in
xchg
or
andl
lea
leave
iret
movsl
movsl
mov
movsb
push
push
popf
xchg
jnp
and
mov
stos
inc
gs
insl
out
or
lods
movsl
inc
pop
out
je
add
fisttpl
in
mov
lock
divb
aam
dec
jmp
dec
pop
in
push
imul
lds
xlat
sub
sbb
mov
mov
mov
dec
rorb
jle
or
repnz
mov
dec
adc
cli
jns
mov
call
add
push
and
sbb
leave
mov
jle
dec
fisttpll
cmpsl
hlt
mov
xchg
fidivrs
mov
dec
jg
dec
data16
adc
ja
data16
test
cmc
push
repnz
dec
inc
dec
adc
daa
iret
aad
sub
lahf
hlt
xchg
and
pop
cmc
sbb
loopne
sarb
int3
fcompl
jne
lcall
repz
and
dec
xchg
clc
out
aad
jbe
mov
push
insl
pop
test
adc
xlat
mov
lods
jg
stc
mov
mov
push
sarl
push
adc
or
jb
jb
jae
push
rclb
dec
repz
int
int3
add
sub
aaa
push
fidivrs
jb
push
loop
sbb
repz
stc
pop
mov
and
cmp
sbb
test
iret
jb
push
jnp
inc
aad
sarb
cwtl
fbld
icebp
movsl
push
xchg
xor
sub
ds
or
stos
ds
mov
jno
test
popf
cli
das
int3
push
adc
inc
sbb
ret
xchg
jnp
push
outsl
cmp
sti
lods
inc
les
lock
push
scas
mov
sahf
push
cmpsl
pop
pop
nop
sbb
mov
mov
fcmove
dec
xchg
je
insb
adc
add
cli
xor
nop
xor
mov
fcomps
dec
adc
jp
jmp
add
jnp
pop
lods
xor
lcall
adc
ret
iret
or
cmp
inc
sub
and
cmp
push
jmp
movsb
push
xchg
iret
ficompl
popf
xchg
subb
mov
mov
dec
fdivs
sub
rcll
mov
pop
lret
jecxz
shlb
adc
mov
ds
xchg
test
insl
out
fsubrl
shll
out
jge
int
add
pop
adc
aad
xchg
repz
stos
xchg
in
adc
fsubs
jp
cld
cmp
mov
and
push
xor
pushf
negb
push
sub
or
jb
insb
xor
aas
pop
xor
cli
js
aad
adc
add
loope
cmp
xor
bound
jnp
jge
sub
pop
ja
jno
sub
mov
out
rorl
movsb
fists
js
adc
insl
jae
les
xchg
and
xchg
out
xorl
xchg
stc
sub
push
sbb
shrb
mov
sbb
in
repnz
fcmovbe
dec
add
lods
nop
stc
pop
and
roll
pop
stc
aas
mov
jnp
fnstsw
sub
into
or
cs
cmc
xor
cmp
scas
xlat
mov
fcomip
cmc
fisttpl
out
xor
sub
push
jmp
cmp
mov
pop
push
xor
fisubs
or
sub
lds
ret
pinsrw
sub
sub
jbe
js
movsb
data16
aas
insb
dec
scas
mov
jecxz
fcomi
dec
xchg
mov
shll
dec
shll
sub
repnz
push
xor
frstor
dec
bound
mov
roll
jmp
pop
jge
stc
sub
test
and
jl
mov
inc
fldcw
xchg
es
pop
inc
jle
dec
pop
das
inc
mull
jne
push
rclb
cs
leave
shrb
xchg
andl
je
dec
add
and
sti
add
or
mov
out
test
hlt
jle
shll
in
mov
adc
js
push
sbb
mov
leave
lahf
aas
xor
pop
mov
fcompl
xor
cmpsl
mov
xor
xor
loopne
and
sbb
adc
outsl
jmp
push
cwtl
in
mov
in
dec
bound
out
mov
adc
pop
xor
push
decl
pop
cs
inc
fdivs
pop
dec
popa
xor
in
xchg
pop
movsl
ja
in
mov
pusha
sub
fs
rcll
es
cmpsl
adc
cmc
and
stos
popa
insb
leave
rorb
push
std
aaa
decl
push
sbb
cmp
div
clc
clc
mov
fstpl
shll
mulb
mov
jo
pop
sbb
mov
xor
enter
mov
inc
pop
shll
mov
lods
cmp
ret
add
lods
cli
aaa
pop
dec
inc
aam
add
mov
push
mov
lods
icebp
lock
into
test
hlt
cmp
pop
mov
pop
pop
xchg
scas
pop
jae
in
iret
push
push
pop
std
repnz
dec
call
mov
mov
out
idivl
inc
mov
out
inc
adcb
filds
inc
pop
mov
rcll
test
js
or
sbb
or
push
sbb
pop
push
add
fcoml
inc
mov
sbb
andb
imul
mov
ljmp
or
shrl
add
dec
sub
repz
cs
mov
mov
jle
mov
scas
mov
outsl
inc
or
out
cs
pop
test
sub
cmp
jge
iret
int
jns
jae
cli
push
pusha
mov
mov
mov
xchg
lea
divl
push
shl
jbe
sub
aam
push
add
pop
nop
call
das
mov
inc
cmp
ret
dec
push
cmpsl
loop
insb
outsb
and
push
in
mov
mov
fwait
pop
int3
jo
cltd
leave
aaa
sbb
jl
mov
iret
outsl
or
popf
testb
fadds
cmpsl
mov
jae
fnsave
in
or
push
mov
imul
shlb
mov
call
mov
loopne
mov
mov
sbb
test
add
or
adcl
mov
adc
or
ljmp
sub
repz
or
hlt
cmp
jbe
cmp
sbb
xchg
mov
cli
sub
pop
dec
inc
pop
or
fdivl
test
mov
cmpsb
mov
xor
pop
aam
ret
sub
inc
mov
sub
into
lcall
mov
jmp
fcmovnu
daa
mov
sub
mov
xor
out
mov
aas
sub
mov
mov
loope
shll
popf
jno
cmp
dec
xorl
mov
cmp
push
lahf
into
xchg
sub
iret
push
fdivrl
sub
imul
cmp
pop
push
cmp
mov
cmp
push
dec
repnz
dec
or
jp
push
imul
aad
mov
xchg
pop
repnz
pop
mov
sbb
scas
imul
lret
pop
mov
lret
push
test
in
ficomps
cs
mov
pop
out
out
jle
mov
mov
inc
imul
sbb
test
imul
dec
aad
ss
mov
idiv
add
xor
cltd
or
test
inc
pop
sbb
es
dec
ret
add
or
out
adc
gs
push
mov
lds
hlt
mov
psadbw
sbb
stos
pushf
outsl
pop
popa
clc
or
mov
xlat
mov
cmp
push
or
jae
mov
sub
jb
and
out
aas
lea
xchg
and
add
icebp
loop
and
inc
pusha
add
mov
mov
jne
jae
mov
out
xor
pusha
lret
rcrb
nop
push
pushf
sbb
adc
inc
sub
cld
push
and
dec
push
dec
data16
or
and
cmp
dec
lcall
inc
lea
pop
xchg
xchg
lahf
mov
push
mov
add
add
scas
push
lods
or
sub
adc
jle
outsb
or
push
test
das
pop
scas
aas
cmp
push
out
frstor
jmp
cli
pusha
shl
add
xchg
or
xor
inc
fbld
ja
out
pop
je
dec
xchg
sti
inc
andl
adc
mov
add
hlt
outsl
lea
les
bound
jl
mov
jl
xchg
mov
and
mov
jle
pop
popf
fwait
adc
cmc
test
inc
or
sbbb
call
mov
lds
push
cmp
cmp
xor
and
out
jl
filds
fimuls
andb
or
jecxz
cmp
or
pushf
popa
adc
xchg
or
fisubrs
hlt
or
adc
ret
jp
dec
adcb
or
xor
std
xor
pop
loope
push
adc
xchg
or
ret
aam
out
mov
add
fsubrp
jne
mov
hlt
sbb
adc
shlb
lret
jb
add
cmpl
sbb
pop
lcall
dec
iret
das
cli
cmpb
ffree
jb
jmp
lock
mov
ret
pop
mov
test
test
mov
adc
es
sbb
fdivs
sbb
test
in
mov
jne
imulb
je
lock
mov
out
out
sbb
mov
pop
scas
xor
jbe
xchg
inc
mov
adc
jp
and
ja
xchg
mov
sbb
jg
push
das
decb
movsl
and
icebp
jmp
lods
rol
in
cli
adcl
js
mov
mov
inc
sarb
rcr
rorl
shlb
xchg
push
cmp
jno
lahf
jne
stc
fistpl
push
sbb
mov
and
aas
sti
add
inc
xchg
xchg
push
int3
and
inc
fiaddl
rcrb
mov
ss
daa
xor
jns
or
push
sbb
repz
imul
dec
sub
add
sub
lcall
jge
add
inc
push
mov
mov
insl
je
pop
cmpl
lret
fmuls
lea
xchg
jo
loopne
insb
in
lock
jge
or
rcrl
fcmovu
mov
ret
dec
dec
sbb
cmp
pop
out
in
fwait
sub
jl
dec
mov
xor
jg
push
das
jle
and
test
sbbb
es
jp
mov
push
xor
lds
sub
fs
sbb
xor
out
jbe
cmp
adc
lret
sbb
or
pop
sbb
xor
jo
inc
push
sbb
push
or
and
push
add
pop
cmpb
mov
mov
iret
bound
jo
add
jns
and
dec
jl
fcmove
lds
repz
dec
bound
stos
push
adc
mov
dec
out
movsl
aad
push
loopne
aaa
xor
mov
jns
pop
outsl
popf
movl
sti
mov
fs
adc
pushf
push
dec
fwait
out
mov
int3
and
push
mov
int
dec
adcb
dec
sbb
cmp
std
jnp
out
pushf
mov
divb
inc
push
xchg
push
xor
pushf
mov
hlt
pusha
bound
jmp
call
sub
cld
jecxz
je
lcall
insb
lods
add
repnz
pop
jns,pn
and
data16
loop
lods
aas
push
mov
xchg
les
pop
inc
dec
es
mov
loop
js
or
jmp
clc
adc
push
or
push
jmp
insb
push
jns
lcall
or
push
jno
std
cld
xchg
sub
test
pop
add
in
xor
daa
adcl
fisttpll
xor
mov
ss
outsl
or
push
push
incl
int3
movsb
mov
sahf
imul
push
xchg
mov
sbb
mov
andl
cmp
jmp
jae
stos
cmp
jle
sub
shll
movhps
sub
or
hlt
xchg
and
mov
mov
push
mov
leave
pop
ds
pusha
dec
fsubrs
dec
and
test
aam
mov
ret
inc
ret
pop
in
insl
sub
pop
or
mov
leave
ret
adc
cmp
push
or
fwait
pop
jo
insb
jmp
xor
or
xor
in
popa
push
jmp
loop
jnp
int3
jne
pusha
fdivrl
les
sub
arpl
adc
fcoms
cmp
push
xchg
sub
push
lods
sub
fcmovbe
sar
in
loop
mov
aaa
mov
sbb
jno
das
xor
out
lcall
es
jo
cmpsl
push
jp
outsl
and
frstor
lahf
ror
inc
gs
insb
and
inc
clc
cli
lds
dec
dec
fists
pushf
js
mov
dec
shl
sub
lahf
xor
lret
adc
adc
stc
loopne
rorb
mov
jbe
cmp
cmp
repz
mov
test
cs
negb
mov
popa
push
sbb
stos
push
mov
mov
add
scas
push
adc
iret
sub
push
mov
test
int
sub
mov
pushf
jno
jecxz
xor
bound
dec
mov
add
xor
dec
jl
inc
or
sbb
cs
addr16
icebp
in
jl
call
xchg
negb
into
and
pop
scas
cmp
pop
repnz
in
mov
jne
jbe
sub
pop
ret
jl
aaa
in
pop
mov
inc
adc
inc
mov
dec
in
aaa
and
sub
or
dec
pop
shlb
or
jb
out
mov
lcall
xchg
cs
das
out
push
fwait
xor
popf
mov
xchg
out
push
imul
shlb
rcll
inc
push
in
push
scas
arpl
jle
fs
lock
in
daa
insb
jecxz
clc
mov
cmc
sarb
add
idivb
pop
pop
movsl
addr16
jno
dec
inc
add
test
mov
add
mov
inc
mov
push
push
das
or
rcrb
xor
dec
mov
outsl
push
sahf
mov
imull
pop
jnp
and
mov
adc
lret
sti
aad
lods
outsl
pop
clc
jmp
arpl
orb
xor
sub
or
icebp
scas
jns
daa
push
data16
xor
sarl
push
mov
sti
jnp
addr16
jns
shll
sbbl
out
add
jb
xchg
add
xchg
xorb
push
repz
jne
mov
mov
or
test
enter
pop
jle
loope
dec
movl
orb
ss
push
cmp
je
sub
pop
pop
rolb
sbb
int3
stos
inc
pop
je
scas
fadds
mov
xchg
mov
cmp
roll
cmp
stos
das
andl
es
xchg
and
in
mov
testl
push
mov
jge
je
cmp
or
dec
sbb
imul
in
add
push
push
pop
scas
vpmacsswd
and
repz
xchg
out
or
adc
push
out
push
addr16
aaa
dec
lds
mov
or
add
pop
aaa
add
test
call
sti
ds
fcmovnb
aad
cmp
add
sbb
pop
push
or
push
pop
pop
jne
rcl
jecxz
jg
xorl
stc
xchg
xor
incl
pop
xor
or
out
stos
imul
nop
nop
cmp
outsb
and
jno
imul
imul
or
shll
mov
jecxz
xor
fimull
xor
xchg
aam
in
lock
adcb
in
bound
mov
hlt
rcrl
jle
imul
jbe
mov
mov
jecxz
xchg
jbe
mov
pop
insl
jno
dec
push
pop
mov
mov
imul
das
fcoms
mov
xlat
push
rcll
into
int3
lret
in
popf
mov
insb
mov
add
push
sbb
out
mov
dec
lods
lret
popa
cmpsb
ds
fildl
ret
fadds
dec
mov
sub
ret
bound
scas
inc
dec
add
daa
sarb
rol
cmpb
pop
dec
nop
dec
mov
cmp
jns
xor
paddb
cli
stc
inc
pop
clc
dec
cwtl
stc
jne
ds
lcall
mov
jne
aam
aas
pop
sub
or
ret
cmp
sub
cmp
lcall
xchg
pop
cmp
je
sub
mov
push
fs
inc
or
int3
insl
ret
jmp
cmp
dec
or
push
adc
daa
mov
inc
jge
icebp
fnstenv
mov
daa
jb
std
aaa
push
dec
fdivl
dec
jae
fs
and
jmp
clc
and
mov
seta
mov
add
dec
ljmp
cmpsl
or
jl
ds
lret
mov
sub
push
scas
push
dec
push
dec
and
mov
sub
or
cld
and
push
jp
pop
adc
inc
outsb
aad
in
dec
xor
jg
rolb
fmuls
cmpl
icebp
cmp
jp
cmp
fs
xchg
add
cld
addl
jns
xor
into
push
xlat
repnz
inc
inc
lret
mov
sbb
dec
add
or
fcoms
cld
and
movsb
xchg
in
push
and
push
sub
imul
js
ret
push
mov
stc
nop
aam
sbb
push
jnp
mov
sub
imulb
mov
fnstcw
aad
imul
dec
imul
cld
cmpsb
pop
mov
add
jns
imul
push
cltd
shlb
insl
pop
inc
repnz
pop
leave
call
out
jle
dec
mov
scas
mov
cwtl
mov
mov
mov
cltd
jb
sbb
bound
mov
scas
mov
imul
jno
test
mov
push
jo
xor
mov
jecxz
mov
adc
js
sub
add
hlt
inc
incl
pop
xchg
sub
jne
xchg
pop
in
cmp
adc
int
in
or
popa
fwait
sbb
lahf
add
and
out
mov
or
decb
dec
cwtl
add
ss
cmp
mov
push
popf
jne
lods
in
add
clc
adc
mov
loopne
dec
and
or
mov
imul
xor
xchg
pop
cs
push
push
cltd
lcall
mov
insb
je
pop
push
adc
cmp
push
xchg
sbb
sub
jns
repz
rorb
and
cwtl
stos
mov
push
adc
div
mov
push
inc
shlb
dec
mov
pop
and
rorb
xchg
sub
testl
inc
cwtl
pop
cmpsb
xchg
int
jmp
mov
lock
out
daa
repz
jo
jne
jge
jo
ret
push
sub
ja
adc
mov
test
ja
cmp
mov
jbe
xchg
jae
xorl
jp
movsl
jns
push
pop
inc
ret
mov
jbe
and
mov
sbb
popa
decb
inc
ljmp
and
fmuls
iret
out
mov
lgs
xlat
lret
and
jg
das
push
lds
loope
lock
mov
xchg
ret
cmpsl
insb
dec
jg
jns
filds
out
fstl
sub
mov
mov
push
outsb
sub
int3
addl
dec
lahf
inc
lods
outsb
orb
gs
ljmp
dec
dec
xor
pop
jno
ss
mov
popa
xchg
aad
add
roll
push
test
popf
jmp
pop
pushf
test
mov
push
mov
cmp
dec
sbb
fstps
mov
jne
into
pushf
jl
iret
adc
sub
nop
dec
mov
jne
mov
mov
and
xor
xor
xlat
pop
pusha
fwait
iret
sbb
arpl
inc
pop
mov
jl
std
sbb
xchg
jne
arpl
mov
fistl
push
inc
pop
sahf
jp
pop
pop
je
in
jo
pop
or
nop
std
or
sub
adc
out
lock
in
sub
jnp
dec
test
jno
or
scas
mov
in
aam
and
inc
adc
pop
js
cmp
xor
inc
shlb
cs
clc
add
arpl
in
add
sub
inc
mov
loope
xor
sub
or
negb
adc
mov
or
lds
fistps
mov
jmp
jp
es
jmp
inc
insb
xor
pop
inc
test
lock
inc
and
inc
push
push
out
push
push
in
mov
mov
jo
aaa
scas
je
push
je
add
lods
adc
push
adc
jae
push
cmp
mov
mov
sbb
or
cmp
bound
xor
out
ja
cmpsb
mov
fsts
cld
pop
addr16
test
push
mov
xchg
adc
inc
into
out
mov
pop
mov
cmp
push
outsl
loope
out
push
push
aaa
xchg
arpl
js
mov
ror
aad
lods
fwait
clc
sub
pop
inc
dec
and
add
mov
jg
push
xchg
cmp
scas
pop
ret
xlat
sub
push
jns
jo
roll
fldl
mov
fwait
adc
lret
cmpsl
mov
xchg
int3
cmp
jg
out
fisttps
mov
mov
add
jle
pop
pop
adc
sub
adc
dec
mov
adc
call
mov
pop
jp
add
mov
cmp
lds
cmovnp
push
mov
jmp
xor
loope
mull
in
lcall
lea
sub
sub
push
pop
and
pusha
xor
loopne
jmp
aam
or
cltd
out
jnp
mov
or
sub
xlat
sub
inc
movsl
and
cld
aam
das
ss
cli
sbb
push
aaa
or
inc
add
imul
outsl
out
xlat
xor
push
outsl
mov
push
adc
nop
repz
push
lods
mov
jo
mov
and
ss
mov
mov
add
mov
inc
xchg
sub
and
pop
das
mov
clc
sub
andb
or
sub
cmp
or
fiaddl
fdivs
subb
lahf
leave
in
push
push
repz
mov
jl
xchg
fucomi
mov
cmp
mov
push
cmp
inc
sbb
inc
dec
jb
mov
mov
mov
dec
insl
pop
int
aaa
or
push
outsl
push
jmp
push
xor
or
int3
push
or
sbb
adc
stc
mov
push
dec
pop
roll
mov
andb
sub
test
push
pushf
dec
testl
out
mov
sbb
mov
xor
nop
jno
dec
repnz
fcomip
xor
lock
xchg
ret
test
push
scas
mov
or
jg
jns
out
and
js
inc
push
shrb
jmp
mov
cmp
mov
push
jle
lret
fisttps
jno
sbb
mov
xor
pop
push
fldpi
fsubs
outsb
mov
add
adc
jl
cmp
imul
xor
jae
xor
fs
popa
call
daa
std
movsl
es
sarl
out
or
scas
lret
jno
dec
dec
dec
jae
inc
in
pop
movsb
pusha
inc
pop
jo
jno
repz
and
bound
add
ficomps
inc
or
loope
shr
lret
arpl
leave
insl
int3
idivb
dec
pop
std
inc
jb
push
xor
mov
add
test
scas
roll
frstor
sub
roll
lret
mov
mov
add
xor
sti
mov
test
icebp
aad
test
inc
and
mov
add
insb
hlt
dec
mov
or
mov
and
and
xchg
xlat
xchg
rolb
cs
mov
popa
cld
sub
cld
stos
mov
leave
rolb
fsubl
loope
push
loope
push
push
test
gs
aad
ds
add
into
cmp
xchg
sbb
sbb
sarb
ror
sub
loop
test
aam
std
mov
fs
jnp
mov
jp
mov
adc
fstpl
loopne
push
ret
popa
ds
push
xchg
sub
mov
cmp
fisttpll
push
hlt
push
repz
sub
mov
fiaddl
cmp
cmp
mov
sbb
dec
cmp
push
sbb
emms
jp
pop
arpl
lock
ljmp
addr16
es
pop
dec
sub
jae
iret
out
jmp
and
les
fidivl
ror
daa
inc
mov
jg
push
cmpsb
mov
mov
ror
xchg
outsb
divl
dec
xchg
fstpl
sbb
lahf
mov
fnstenv
and
repnz
and
pop
movsb
daa
rcll
dec
gs
nopl
xchg
mov
adc
dec
pop
stc
fdivrl
stos
je
loope
mov
xchg
sbb
mov
pop
mov
cmp
xchg
pop
insb
jo
sti
jnp
cwtl
mov
sbb
mov
das
aam
xchg
flds
pop
sub
sbb
mov
jne
adc
push
andl
inc
lds
pop
inc
outsb
ja
fwait
in
cmp
or
xlat
and
or
mov
add
sub
add
aaa
in
push
rcr
and
and
rcrb
shlb
sub
addr16
and
addr16
mov
pop
add
out
xor
fcmovu
cmp
add
fsubrs
dec
popf
ljmp
push
dec
int
ret
jnp
adc
xor
pop
push
addr16
push
stc
outsl
dec
movsl
in
cmc
xchg
sub
mov
mov
jbe
push
cmpsb
iret
jecxz
repnz
mov
cli
dec
hlt
stc
jb
stos
repnz
push
jnp
cmpsl
js
rorb
ret
push
out
mov
jle
pop
mov
jne
lea
or
bound
icebp
movsb
inc
fistps
cmp
jmp
outsl
mov
test
xor
fists
xchg
ja
int
xchg
lods
cmp
mov
outsl
std
adcl
out
mov
fstl
mov
jmp
mov
loop
push
repz
sti
mov
shlb
popa
or
pop
push
adc
in
aaa
jg
cld
jno
popa
mov
subl
pop
jbe
andnps
add
iret
loop
push
jnp
pop
inc
call
inc
xchg
xor
repnz
popf
pop
mov
inc
mov
adc
fsts
out
pop
sbb
in
cvtdq2ps
push
lods
int
sub
push
iret
loope
out
jmp
arpl
sbb
adc
cmp
jb
cs
xor
push
decb
push
rorb
pushl
sbbl
enter
jecxz
in
setl
sbb
jg
jbe
shll
push
push
movsl
xor
int3
pop
loop
call
pop
sahf
sbb
add
ja
das
shrl
aad
sub
xchg
sub
aad
lret
mov
cmp
call
cld
int3
lret
xchg
xchg
icebp
sbbb
mov
icebp
rcll
ret
adc
out
out
sbb
jae
xor
ljmp
or
pop
clc
pop
stc
mov
sub
mov
lret
outsl
out
inc
out
mov
and
ret
dec
dec
mov
push
xor
loopne
pop
xor
repz
fdiv
decb
and
xchg
cmp
jne
xchg
cld
xor
push
nop
fucomip
add
and
sti
add
push
test
lods
dec
pop
xchg
or
push
fwait
pop
unpcklps
sahf
jg
push
sub
lcall
mov
insb
je
pop
xor
in
stc
cli
xor
lahf
stos
sbb
or
iret
test
or
cs
jnp
sub
jbe
add
aam
int3
sbb
pop
inc
insl
sbb
adc
push
popa
dec
inc
es
xor
jno
adc
push
sbb
sub
mov
xchg
shrb
fmuls
sub
ret
cmc
sbb
sbb
inc
cs
push
cmp
mov
inc
pop
dec
cmc
inc
push
xchg
push
inc
leave
loopne
loope
lds
jmp
test
push
mov
out
inc
fldenv
xchg
ret
gs
out
or
ffree
outsl
mov
push
xor
cld
rcrb
mov
cmpsl
sub
mov
mov
test
inc
mov
jp
mov
std
in
inc
fs
pop
sbb
les
xchg
cld
jmp
shl
adc
mov
daa
fdivr
mov
out
shlb
mov
fstps
adc
lods
es
and
push
push
loop
lods
aas
xchg
and
push
add
scas
imul
stc
movsl
ret
fs
scas
shrl
cld
and
cld
mov
es
pop
addr16
lcall
adc
loop,pt
pop
mov
push
sub
lock
scas
aad
fcoms
xlat
out
mov
rorb
mov
mov
mov
or
insl
dec
shrl
scas
lods
jg
stos
jnp
or
scas
stos
ret
or
jp
jp
test
lret
rcrl
xchg
repnz
jle
fucom
adc
cmp
stc
push
pop
jge
inc
clc
loope
sub
int3
hlt
loop
jp
jns
push
roll
lret
fwait
inc
dec
lret
push
rclb
jle
outsl
ja
int
and
xor
fcmovnb
int
fldcw
stc
jbe
insb
fisttpll
in
addr16
lahf
mov
inc
je
scas
jmp
pop
addb
int
decl
jle
stos
test
mov
sub
mov
dec
push
mov
xor
daa
cltd
into
mov
mov
ljmp
xor
add
add
push
data16
jno
lea
clc
xor
insl
addr16
mov
cmp
filds
aam
mov
wbinvd
leave
arpl
inc
cs
sbb
push
in
pop
repnz
add
aaa
insl
dec
jge
imul
test
in
lods
xchg
mov
pop
rolb
sti
or
xorl
cltd
int3
xchg
das
loop
and
pop
inc
fsubs
pop
cli
fisttps
xchg
lea
push
sbb
and
inc
sub
js
or
imul
in
mov
idivl
jae
lock
xor
xchg
shll
sbb
scas
cli
jns
or
fidivrs
mov
add
xchg
cmp
out
fmuls
sbb
xchg
pop
jle
je
or
jae
rorl
fisubrl
leave
iret
sub
inc
scas
and
movb
pop
xor
push
out
es
popa
popf
icebp
js
add
sbb
sbb
and
cmpl
xchg
sbb
adc
scas
std
fistps
jecxz
push
aad
sub
out
add
dec
cmp
jge
mov
in
loop
pushf
seta
inc
mov
cmp
jecxz
insl
xor
cmp
pusha
aad
loopne
popf
into
xor
fwait
xor
outsl
test
inc
pop
repz
fucomp
fmull
loop
daa
repz
pop
ret
inc
mov
fwait
or
xor
hlt
and
aam
out
and
sbb
sub
mov
xorl
addr16
clc
negb
xor
sarb
inc
pop
scas
cmpb
imul
mov
aam
jbe
in
repnz
xchg
test
jp
pushf
jnp
lock
dec
movsl
sub
fmul
loopne
sahf
add
dec
out
stos
mov
xchg
das
sub
push
call
ljmp
dec
loope
and
jp
in
pop
std
popf
sbb
fbld
idivl
xor
fbstp
ljmp
pop
fwait
movsl
lea
shl
dec
dec
fnstcw
push
cltd
adc
or
fcoml
pop
pop
and
fdivl
sahf
and
pop
or
rorl
cli
xchg
fnstenv
pop
movsb
mov
mov
ret
in
fucomi
xchg
and
xchg
mov
into
frstor
test
scas
cmc
testb
and
mov
cs
mov
jle
sbb
adc
jns
popf
mov
and
mov
or
movsb
or
call
mov
jnp
and
push
add
mov
jg
inc
loope
jo
xchg
or
and
fdivl
cmp
pop
in
or
aam
popa
repnz
out
aas
add
andl
jecxz
dec
dec
jo
lods
xchg
jb
sbb
sti
jg
fs
mov
popa
aaa
movsb
ficoml
cld
push
push
ret
inc
enter
clc
sarl
sti
stc
ret
rclb
lock
call
fwait
and
dec
cmp
jnp
scas
orb
lret
aaa
and
mov
fistpl
ss
shl
jmp
insb
jl
icebp
add
mov
pop
cmc
rcll
and
inc
leave
mov
inc
sarb
je
xchg
mov
and
rcrb
jns
fcmovnbe
outsb
out
aad
adc
mov
jbe
mov
mov
and
and
popa
je
inc
imul
fisubs
sub
test
int3
ret
xchg
lcall
mov
lahf
mov
jmp
ret
xor
mov
jge
push
pusha
mov
or
xor
push
call
mov
push
add
xor
je
jmp
sbb
lret
pop
enter
bound
or
mov
pop
cmp
out
ret
loopne
cs
lret
rcl
shl
inc
aad
xchg
hlt
adc
or
jge
mov
cltd
pop
loop
lahf
xchg
mov
pushf
ja
fadds
sti
lods
out
mov
ljmp
add
mov
or
inc
add
sbb
daa
and
ja
aad
repz
mov
mov
xor
nop
mov
push
in
pop
outsl
cmp
aam
pop
push
in
sbb
and
cmp
js
adc
sarl
lcall
imul
and
scas
mov
jb
inc
arpl
pushf
out
mov
popa
mov
push
mov
mov
call
push
and
jg
xchg
dec
lahf
pop
mov
pushf
hlt
in
jecxz
insl
pushf
arpl
add
je
cmp
dec
in
inc
or
xor
fidivl
leave
jnp
xchg
add
mov
cmc
aaa
arpl
jmp
xchg
enter
mov
outsl
ret
gs
cltd
mov
test
xchg
call
scas
xchg
or
fwait
sub
rcl
popa
mov
jl
ja
mov
push
lea
mov
sar
int3
jne
pop
and
cmc
arpl
sbb
push
mov
bound
mov
ja
push
stos
jmp
icebp
out
add
mov
dec
and
and
popa
mov
icebp
xlat
cmp
bound
or
addr16
jae
adc
mov
xorb
add
dec
daa
sbb
icebp
mov
fistpll
xchg
movsl
shl
iret
pop
push
jl
add
xchg
les
add
inc
das
clc
out
test
fwait
cmp
add
push
mov
in
xchg
sub
or
sub
cmovno
nop
mov
shl
xchg
jmp
ret
dec
outsb
cmp
sub
ja
stos
add
push
aad
dec
adc
pop
jno
testl
fcom
mov
jg
inc
movsb
lcall
sub
cmc
jp
cmp
andl
add
pop
cmp
sub
mov
jb
ja
mov
cwtl
push
in
std
push
sbb
push
push
test
test
icebp
adc
cwtl
jae
icebp
lahf
aaa
adc
jno
xlat
push
scas
testl
add
xchg
push
ret
fnstenv
rorb
push
xorb
push
loope
imul
fiaddl
icebp
inc
ret
sub
addr16
add
cld
mov
call
inc
aaa
call
insb
mov
xchg
mov
jmp
sbb
cmp
pop
or
xchg
clc
out
mov
dec
or
xor
add
shr
or
xchg
dec
pop
aam
dec
pop
sbb
enter
mov
jns
xor
dec
je
pop
cmpsb
popa
jg
xchg
add
clc
and
cltd
push
ret
cmp
fstpl
mov
inc
xor
pop
outsl
dec
mov
aam
cmpsb
mov
test
sub
stc
out
dec
into
loop
cli
sti
mov
xchg
les
lcall
sub
lea
or
add
pop
pop
jg
xor
adc
iret
data16
mov
mov
outsb
jp
add
or
adc
and
aad
int
scas
loope
dec
and
gs
test
outsb
sub
pop
fucomi
push
fmul
sbb
mov
into
push
pop
mov
jg
adc
adc
sbbb
sub
cmp
pop
mov
mov
iret
dec
dec
mov
fisubs
in
dec
xchg
xchg
fwait
outsl
mov
fxch
jb
je
aaa
jb
jl
pop
mov
inc
or
xor
fcomi
and
adc
adcl
push
int3
push
cmp
stos
lods
xor
mov
int3
in
sbb
dec
in
shlb
sbb
repz
xor
mov
hlt
pop
mov
in
or
icebp
sub
rol
rol
fdivr
movsb
xchg
jne
iret
adc
mov
cmp
int
call
push
out
popa
mov
and
lods
sub
mov
test
sub
test
add
push
mov
test
pop
fs
mov
push
cmp
ss
xchg
pop
pop
push
enter
sti
lcall
fdivrp
mov
inc
mov
jmp
stos
int
push
pop
clc
sub
lret
mov
jp
jle
arpl
popa
inc
mov
or
xlat
movsb
add
sahf
dec
inc
movsl
xor
outsl
repz
rcr
loope
daa
ret
xor
out
nop
int
add
add
lret
sub
repz
or
cmp
lahf
xor
leave
mov
sub
push
lods
call
ret
or
mov
sbb
xlat
mov
idiv
xor
inc
fs
sbb
xchg
loope
xchg
or
call
mov
cltd
sbb
xchg
mov
adc
jmp
cmp
cmp
rclb
adc
xor
in
dec
inc
icebp
mov
outsl
enter
popa
fdivrs
cmp
jle
xlat
mov
push
cmp
push
mov
adc
leave
jns
mov
clc
loop
adcl
popa
xchg
jg
je
scas
adc
ljmp
in
cld
adc
xor
test
jge
fisubrl
sbb
pop
pop
fbstp
mov
jns
inc
mov
and
push
shlb
and
add
xor
dec
ja
std
out
clc
mov
push
jnp
add
std
ror
jo
fstpt
cmpsl
mov
jle
lret
imul
lret
sub
lods
enter
adc
insl
scas
xchg
sub
pop
jne
jmp
jl
mov
shrl
jp
clc
in
icebp
cmp
push
fdecstp
and
mov
rcrl
mov
mov
or
push
clc
mov
sub
push
cwtl
push
xchg
ss
push
rcr
adc
cmp
sbb
adc
mov
push
cli
int3
push
pop
daa
or
jae
mov
out
mov
xor
mov
repnz
in
dec
rorl
in
out
jbe
and
xor
xchg
adc
inc
les
aas
cmpsl
or
cmp
fadd
lcall
mov
inc
jo
adc
repnz
sti
repz
mov
add
cmp
pop
or
rcrb
or
movsb
or
dec
mov
cmp
fnsave
mov
outsl
cmpsb
aam
imul
jg
les
cmp
and
push
jecxz
inc
cmp
ljmp
int3
andl
xchg
ja
and
adc
jne
sub
shl
sti
into
push
pop
adc
dec
mov
adc
decl
in
lret
mov
and
mov
les
sti
pop
and
leave
push
cmc
mov
sub
fildll
mov
divb
movb
test
mov
sub
loop
repnz
sbb
lds
js
fdivs
jno
mov
in
jns
mov
test
frstor
repz
cli
cmp
test
mov
push
add
call
jecxz
mov
inc
lods
mov
inc
adc
add
jp
and
jo
and
push
add
divb
gs
mov
jmp
mov
insl
and
loop
mov
adc
xor
gs
iret
shlb
lret
movsb
sub
imul
nop
push
sub
jno
mov
sbbb
sub
jne
lret
insb
cmp
or
mov
sub
add
add
pop
stos
and
or
adc
rorb
aad
loop
sub
ljmp
jno
xor
jne
shl
inc
or
jne
aaa
pop
shll
loope
leave
cmp
out
fistpll
std
enter
lods
and
and
push
loopne
in
sbb
movsw
mov
push
inc
cmp
fnsave
mov
xor
jl
fwait
std
push
cmp
mov
pop
jle
stos
sub
out
push
mov
or
stos
ss
icebp
fiaddl
cmpsb
pop
out
mov
push
fadd
insb
and
arpl
ret
cmp
add
sub
fldl
sub
cmp
cmpsl
fmul
or
sahf
or
loop
in
dec
iret
and
push
push
sahf
movsl
adc
leave
xchg
data16
xchg
push
jnp
gs
repz
dec
dec
popf
notb
rolb
mov
lds
pop
pushf
mov
or
push
ja
jns
add
sub
dec
push
repz
fucomi
pop
mov
pop
cmp
push
mov
fadds
jno
mov
cmpb
xchg
mov
aam
xchg
push
xor
jno
aaa
push
jl
pop
loopne,pn
xchg
std
ret
jp
sub
stos
ret
cltd
sbb
push
mov
repnz
xchg
adc
insl
sub
hlt
outsl
cwtl
mulb
lahf
data16
test
cmp
cmpsl
out
shlb
mov
push
fstpl
out
sahf
mov
cli
add
xchg
lcall
mov
fwait
cmp
aam
xchg
cmc
mov
sub
pop
imul
out
popa
sahf
add
push
lcall
dec
je
dec
jge
das
hlt
aas
into
jnp
leave
ds
sbb
sub
das
xor
cmp
jg
pop
push
xchg
jle
xlat
arpl
sub
mov
push
fmull
insl
fnstsw
inc
lret
mov
push
stc
add
mov
pop
into
push
das
pop
flds
arpl
mov
mov
ds
sub
cs
jl
or
mov
outsb
stc
out
mov
inc
cmpsl
outsb
mov
fstpt
jns
das
cs
cmp
xor
pop
fsubs
jg
dec
dec
loopne
imul
ja
xlat
push
in
dec
jecxz
mov
xor
adc
lods
add
negl
imul
mov
jns
dec
rclb
dec
repnz
jmp
jmp
sub
bound
ds
mov
jae
adcl
add
sbb
fstps
test
mov
or
cld
push
push
mov
pop
loope
pop
cs
loop
push
mov
and
test
mov
add
jae
loopne
push
push
daa
cmp
imul
fstl
outsl
cli
inc
lret
frstor
pop
jb,pn
out
fiadds
or
pop
cmp
adcb
negl
push
ret
xor
incl
fisubs
pop
mov
pop
inc
mov
in
add
popa
push
xchg
ret
je
xor
jge
ja
mov
sbb
lds
sub
xlat
rcrb
scas
mov
outsl
jns
xchg
es
add
adc
pop
and
adc
mov
daa
jl
std
jecxz
leave
mov
out
dec
ret
cmp
in
fdivl
stc
inc
cmc
je
mov
daa
mov
mov
cli
inc
data16
pop
shrb
adc
push
rcll
adc
loopne
push
loopne
test
cmp
mov
mov
mov
dec
loopne
clc
repz
test
out
add
xor
mov
rol
adc
push
into
mov
mov
cmp
jo
pop
xchg
scas
mov
mov
and
lret
push
in
inc
xchg
xchg
add
inc
mov
dec
dec
mov
sub
add
mov
ja
ret
adc
fmull
adc
jbe
mov
and
fldt
push
cwtl
fcomp
sahf
outsb
jo
dec
inc
aam
enter
pop
add
es
mov
in
jbe
iret
scas
dec
cwtl
mov
and
inc
aad
mov
adc
pusha
add
out
popa
cmpl
mov
xlat
or
addr16
movsl
scas
outsl
repnz
imul
cmp
fwait
rolb
in
daa
push
jg
icebp
mov
add
jmp
pop
int3
cli
mov
adc
or
add
and
jbe
out
jnp
bound
jo
test
inc
stos
dec
movsb
push
pop
xor
sub
in
mov
xchg
pop
adc
mov
and
es
xchg
popa
adc
hlt
in
jbe
sub
inc
inc
push
inc
fs
adc
jo
shll
sbb
push
in
popf
pushf
std
dec
jae
fsubrp
dec
js
push
push
rorl
lret
dec
adc
movsl
cmp
push
fisttpl
lock
popa
enter
fidivrs
clc
xchg
lods
pop
pusha
aad
or
or
sub
cs
es
fs
mov
jle
mov
jge
enter
mov
ss
or
aas
xchg
dec
lock
lods
push
loopne
je
xor
and
jno
jns
mov
call
or
mov
sbb
pop
inc
call
and
jg
adc
sbbb
scas
mov
cmpsb
mov
dec
dec
lock
jecxz
lcall
pop
hlt
xorb
pop
iret
loop
adcl
int
js
cmp
ss
sbb
pop
scas
test
scas
mov
insb
or
sbb
hlt
scas
xchg
xor
out
xchg
dec
icebp
addr16
pusha
jl
mov
dec
inc
xor
es
icebp
outsb
pop
test
mov
insb
inc
imul
mov
mov
mov
cmp
push
popa
ret
test
cmc
inc
fldenv
clc
enter
cmpsb
xchg
bound
sbb
and
fmull
fs
xor
fdivrp
lods
inc
pop
insl
arpl
pop
inc
jle
jg
sub
je
lret
xor
pop
lods
dec
xchg
sbb
sbb
popf
mov
jnp
adc
in
inc
jae
ret
mov
cmp
push
lcall
push
dec
cwtl
lods
xchg
sub
fistpll
push
jge
ljmp
and
xchg
or
loopne
idivl
and
xlat
movsb
cmp
dec
jmp
int3
xchg
popf
movsl
mov
cmp
jb
adcb
js
hlt
iret
or
mov
cli
or
testb
test
ficompl
cmpsl
out
out
fnstsw
iret
stos
stos
dec
jecxz
push
dec
lret
out
psubsb
pop
sub
add
ret
xchg
int3
xchg
rclb
sub
loop
int3
pop
pop
daa
inc
cmp
jmp
or
jnp
jecxz
xchg
push
mov
fwait
mov
or
cmp
and
inc
cmpsb
add
invd
test
rclb
cmp
mov
aam
push
in
imul
xchg
cmp
mov
xlat
mov
xor
in
add
insb
mov
xchg
enter
sbb
sbb
out
shll
dec
aaa
popf
stos
inc
push
pop
out
imul
subb
sete
xchg
fcoml
and
stos
or
into
push
std
pop
out
add
out
in
sbb
cwtl
push
dec
rclb
orl
inc
push
aaa
xlat
cld
mov
pop
dec
sti
aad
or
sub
shll
and
pop
add
hlt
movsb
mov
ljmp
xchg
mov
mov
jae
or
jbe
dec
in
inc
cmp
lea
int3
adc
mulb
push
fndisi(8087
add
xlat
dec
repz
mov
xor
dec
shl
mov
loop
cli
je
sahf
mov
inc
sbb
add
shll
imul
jg
xlat
imul
pcmpgtb
inc
xor
xor
xchg
fidivs
clc
jle
aas
xor
repnz
jp
adc
pop
dec
and
sbb
out
cld
nop
push
sub
daa
mov
hlt
data16
xor
xchg
pop
hlt
add
sbb
das
dec
das
das
pop
mov
std
loope
test
leave
pop
stos
sbb
mov
pop
cmp
jns
out
in
jl
mov
int
sub
jmp
or
pop
push
sbb
fiadds
jmp
push
imul
cmpsl
lds
sti
fstpl
inc
inc
loop
xchg
cwtl
and
enter
mov
sbb
mov
fisubs
lret
sbb
fwait
mov
cmc
push
inc
cwtl
inc
out
mov
dec
shl
aas
mov
cld
pop
mov
dec
mov
test
mov
out
adc
jb
jne
stos
out
hlt
pop
sbb
stc
into
into
imul
pusha
add
mov
jne
out
push
adc
aaa
dec
subb
fs
sbb
lret
jge
fs
adc
xchg
xorl
cmp
aam
and
or
cmpl
sub
call
gs
pop
cmc
je
pop
popf
lods
daa
sub
aas
xchg
je
cmp
xor
jmp
ja
mov
and
inc
test
loope
mov
add
mov
or
push
dec
ljmp
les
xchg
mov
arpl
mov
movsb
dec
in
mov
scas
ret
aaa
xchg
mov
outsb
in
mov
mov
mov
insb
adc
mov
mov
jp
pusha
cmpsl
gs
mov
shll
mov
add
sbb
xchg
jmp
pusha
push
fsubrs
pop
cs
xchg
add
cld
inc
fcmovb
fwait
lahf
or
pop
sbb
push
cmp
or
cmp
adc
and
int
mov
mov
and
fiaddl
into
std
mov
mov
in
mov
cmpl
mov
mov
cmpsl
xchg
jmp
jnp
js
xor
xor
cli
cmp
mov
shll
inc
sub
es
in
out
sbb
mov
jne
ret
lahf
stos
pop
cmp
and
add
adc
jmp
and
lods
clc
add
lea
lcall
push
jbe
lret
ret
mov
ret
scas
jge
shlb
mov
in
mov
mov
and
dec
pop
dec
test
xor
out
ffree
orb
mov
adc
icebp
jb
pushf
pop
pusha
jo
sarb
mov
scas
lock
add
movsl
add
xchg
aaa
mov
cmp
sub
cmp
iret
repz
mov
sub
mov
xchg
lcall
sub
add
cmp
xchg
out
pop
xor
out
outsb
sbb
lods
cmpsb
mov
popa
push
sub
add
jne
lret
jne
mov
sub
mov
je
mov
mov
adc
loop
mov
sti
das
jl
mov
or
cmp
jg
cld
imul
and
mov
movsl
adc
jno
rolb
inc
xor
aaa
pop
jnp
dec
cld
push
jae
pop
cwtl
push
mov
ljmp
pop
loopne
fstpt
enter
inc
inc
fwait
scas
in
repz
adc
sti
out
repz
out
xchg
dec
mov
adc
clc
add
enter
scas
mov
add
cmpsb
ret
sub
aas
addr16
sub
cmpsb
or
orl
int
jl
pop
jp
sti
mov
jbe
daa
xchg
xor
ds
xchg
insb
sbb
dec
push
movsl
dec
push
mov
sub
mov
adc
jg
pushf
xor
mov
fsubrs
imul
add
sbb
jae
outsb
loope
mov
rol
mov
pop
dec
outsl
sahf
or
xor
mov
test
movsl
xor
roll
sahf
sub
in
leave
xchg
add
popa
jo
jmp
aam
rcl
andb
pop
jp
jae
cmp
cmp
std
fs
push
sbb
pop
test
es
xchg
std
sbb
mov
scas
frstor
shll
adc
inc
movsl
xor
cltd
int
and
mov
xchg
fs
push
into
or
lcall
cmp
cmp
iret
jmp
pop
sub
inc
mov
das
outsl
inc
push
int3
jo
decl
fsubr
loopne
lds
inc
testb
in
pop
fldt
mov
lret
insl
sbbb
mov
fsubrl
inc
loop
push
inc
mov
xor
cli
fstps
div
pop
inc
add
jge
mov
lahf
fisubrl
jp
rorb
add
and
loop
add
cmp
ret
xor
mov
outsl
or
arpl
or
mov
addr16
xchg
pop
pop
pop
sti
push
daa
rcrl
adc
push
mov
sarl
add
mov
push
cltd
mov
adc
inc
icebp
inc
insl
loopne
xor
inc
inc
fists
or
push
fimuls
mov
ret
int
sbb
aas
pop
xorb
xchg
xlat
iret
dec
ljmp
mov
mov
pusha
cwtl
dec
or
dec
push
int
jmp
ss
jnp
push
mov
shlb
int
cld
mov
inc
xor
cmp
jbe
xor
mov
repnz
clc
sub
clc
mov
movsb
or
xor
lds
addr16
sbb
das
pop
pop
add
dec
cmp
lahf
lods
xor
imul
out
xlat
cwtl
inc
sti
test
jnp
mov
mov
fnstenv
test
push
pop
adc
addr16
jae
cli
pop
test
int3
shr
pop
adc
jle
and
cwtl
cmpsl
pop
xor
testb
int
outsb
add
push
lock
lret
adc
pop
gs
inc
lock
imul
iret
aad
mov
or
fistpl
in
add
cmp
or
inc
push
mov
roll
push
cmp
cli
fidivl
sub
jmp
mov
out
popa
lahf
mov
outsb
xor
cmp
jl
das
hlt
mov
lahf
cwtl
sub
xchg
inc
inc
imul
shl
jecxz
mov
fldenv
in
add
loop
cmpsb
lret
and
push
xor
jl
inc
mov
mov
pushf
pop
and
das
inc
call
sbb
cmp
add
push
pop
jae,pt
adc
dec
and
xor
rorl
imul
lods
ret
push
dec
mov
in
orb
mov
xchg
fisubs
add
scas
int
sub
cmpsl
xchg
cs
and
dec
vmovntps
pop
ss
js
jmp
push
out
jbe
inc
or
testl
scas
loop
popa
xchg
popa
daa
xor
call
mov
mov
push
aad
leave
ret
jge
mov
add
sub
mov
jmp
lock
ror
xor
or
rclb
xor
inc
mov
aaa
mov
mov
push
addr16
imul
xchg
mov
repz
shrl
pop
xor
add
pop
and
ja
movsb
out
adc
test
adc
cli
jge
pop
sti
out
add
cmp
sbb
leave
imul
imul
ret
or
cmp
jae
out
jae
sarl
pop
movsb
or
jp
pop
inc
xchg
shll
loope
mov
addr16
push
or
dec
mov
mov
xor
fiaddl
sbb
cmpsl
adc
out
ja
and
shlb
jmp
dec
dec
test
jl
fadd
orb
out
inc
xlat
inc
or
pop
mov
or
shrl
pushf
push
lock
adc
sahf
imul
xchg
lahf
cmpsl
movsb
xor
adc
xor
adc
jge
cmp
outsl
push
lods
test
out
mov
leave
mov
imul
jmp
notl
mov
ss
fdivrs
and
cmp
xor
add
gs
ss
xlat
dec
lahf
or
jg
imul
mov
imul
adc
dec
and
jno
xchg
test
and
insb
mov
push
loopne
mov
add
sub
test
push
pop
pop
and
mov
jecxz
add
sbb
mov
ja
xchg
leave
pop
aaa
dec
icebp
cmp
fprem1
mov
ret
fadd
jns
and
mov
sbb
mov
jo
mov
push
add
imul
or
jb
push
ja
jbe
in
std
pusha
subb
xchg
ret
dec
jb
out
mov
mov
mov
loopne
or
adc
arpl
pop
jo
xchg
add
sbb
xchg
repz
cmp
jb
dec
out
jnp
das
test
in
test
stos
jl
and
push
pushl
push
outsl
movsl
pop
pushf
andb
lahf
ss
fldt
cmp
inc
mov
or
push
out
gs
iret
paddw
mov
adc
mov
pop
jg
mov
xor
cmc
ss
pop
repnz
sbb
pop
pop
aas
icebp
cld
lods
out
jo
lods
in
popf
ret
jecxz
loope
inc
aaa
decb
cmc
cmp
jle
mov
push
jmp
leave
into
inc
scas
sbb
cmpsl
popf
or
imul
sub
pop
clc
and
dec
inc
pop
mov
xchg
outsb
or
xchg
cltd
or
jnp
mov
imul
jno
roll
repz
imul
pusha
stc
in
lret
xor
adc
repz
jbe
jb
data16
decb
dec
cmp
pop
cmpsb
scas
ror
dec
cmpb
imulb
mov
shrb
cld
adc
stos
pop
mov
mov
cmp
cmpsb
lods
sahf
stos
ret
sbb
cltd
testb
adc
sbb
mov
inc
dec
hlt
dec
and
leave
out
rcrb
mov
sub
outsb
mov
mov
jecxz
fstpl
adc
movsl
and
add
mov
fldcw
lods
push
xchg
push
mov
repnz
jns
jmp
aam
jle
xor
jb
add
sbb
cmpsl
jnp
iret
hlt
arpl
dec
popa
xor
push
in
lret
popf
das
iret
fldt
fiadds
arpl
sahf
or
xor
add
bnd
adc
jp
mov
out
xchg
mov
mov
add
cld
repnz
jnp
fidivl
loope
and
mov
cmp
ja
ficoml
inc
mov
mov
xchg
in
outsl
xor
jl
mov
dec
jmp
sbb
push
lret
imul
fimull
insb
imul
flds
push
fs
sub
inc
arpl
aas
adc
jno
adc
dec
xchg
ret
sub
inc
fmuls
push
out
es
hlt
sahf
es
push
out
pushf
mov
in
das
jae
hlt
push
sahf
lods
dec
in
iret
loop
push
dec
mov
cmp
imul
ljmp
pop
arpl
aaa
inc
icebp
pop
push
pop
mov
imul
int
push
dec
mov
xchg
pusha
mov
cmp
jecxz
dec
jb
rcll
push
inc
xor
ret
lahf
adc
stos
sub
xlat
scas
adc
cmp
shll
mov
fistpl
mov
jmp
loope
adc
mov
fldenv
lea
adcl
add
pop
sbb
cmc
cmp
xchg
shlb
lods
sbb
push
insl
ja
inc
fisubs
push
and
and
push
mov
movsl
mov
pop
lcall
aam
dec
dec
std
popf
mov
cmp
insb
popa
and
scas
test
addr16
notb
and
mov
ss
or
test
mov
in
or
loope
mov
cmp
ljmp
push
dec
aas
rcl
ret
dec
and
cmpsl
subl
movsl
lods
dec
dec
jne
adc
lret
loop
mov
icebp
inc
mov
nop
sahf
addr16
sbb
sbb
xchg
popf
cmpb
pop
popa
cwtl
adc
out
jle
hlt
inc
xchg
cmp
mov
fsts
dec
cmp
cmp
out
xor
mov
movsb
push
int3
popf
lcall
arpl
ds
jae
pop
dec
sub
and
stc
pop
sub
scas
add
adc
movsl
push
insb
neg
jmp
adc
in
ret
shlb
cltd
sbb
mov
inc
mov
sbb
hlt
sub
cmp
les
outsl
fwait
xor
xor
in
lock
rcl
les
cmp
insl
lahf
or
ds
sub
or
xchg
mov
es
std
push
scas
iret
fadd
cmp
enter
push
jmp
fs
lock
mov
sub
dec
mov
pop
imul
pushf
adc
lds
mov
lret
jno
cltd
sti
lret
xchg
jnp
mov
mov
mov
pop
mov
les
loop
ficoms
mov
das
mov
mov
lret
aam
or
fildll
dec
mov
inc
or
outsl
bound
out
and
mov
xor
sbb
movsl
arpl
fimull
pop
sbb
test
loopne
aam
not
mov
fbstp
inc
mov
fcmovne
popa
cmp
dec
mov
adc
mov
sub
cwtl
mov
cmc
fs
sub
dec
pop
ffreep
testl
jb
test
mov
xchg
cmp
jmp
jecxz
inc
sub
mov
cwtl
stos
push
cmp
repnz
fistpl
mov
xchg
movsb
ss
test
xor
ret
sbb
sbb
mov
sti
add
test
sub
mov
cmp
push
rcll
add
into
pop
orl
push
mov
daa
inc
sub
sahf
cmp
std
pop
ret
adc
sbb
push
stos
sbb
jmp
xchg
add
je
bound
push
bound
adc
clc
sbb
cmpl
jno
pop
les
sbb
cli
les
cmp
sbb
sub
lods
sti
push
mov
push
push
xchg
addr16
inc
push
shll
sbb
loop
cwtl
insl
fisubs
mov
lods
fscale
lods
push
mov
xor
jp
xchg
jge
data16
scas
or
lret
mov
loop
aad
push
in
stc
scas
insb
loope
insb
mov
jo
or
sahf
jno
pop
mov
or
add
inc
or
hlt
mov
jns
ret
cmp
mov
lret
xor
out
jbe
push
sbb
test
or
enter
idivl
mov
outsb
dec
mov
add
enter
adc
push
dec
rolb
pop
jmp
pusha
data16
and
jmp
add
js
addr16
push
fcom
ja
ret
lds
dec
xor
mov
mov
lock
rorb
and
adc
sub
ret
sti
pop
fdivl
mov
adc
and
push
test
push
pop
jl
sbb
push
ljmp
dec
in
cmp
sti
xchg
mov
jo
fistl
ret
dec
mov
lret
fimull
cmp
inc
loopne
mov
lods
xor
lahf
cmp
mov
sbb
shl
jns
xchg
inc
pusha
call
or
mov
pop
sbb
cli
lods
rol
cmp
idivb
mov
icebp
imulb
lods
fists
pop
mov
das
xchg
mov
or
int3
js
adc
push
shl
push
mov
lret
insl
imulb
push
rorl
lea
inc
mov
cmp
fwait
ret
inc
int3
xchg
out
dec
roll
sub
pop
add
scas
aas
cmp
cmp
std
inc
jns
les
and
jecxz
ja
mov
jmp
rorl
sbbl
nop
mov
add
sbb
sar
and
movsl
jecxz
and
int
xchg
adc
pop
loop
push
pusha
jb
std
out
adc
fildll
push
aam
sbb
mov
insb
dec
iret
subl
xchg
pusha
xorb
loop
add
sbb
jbe
xlat
js
lcall
push
mov
mov
inc
shlb
or
int
push
fs
lea
stc
movsb
sub
stc
xchg
inc
adc
int3
mov
mov
pusha
jo
mov
mov
repz
push
insl
fldcw
dec
repnz
or
dec
out
pop
adc
or
call
mov
jge
mov
in
xorb
mov
sarb
pop
fldcw
shrl
mov
fistl
js
repnz
pop
rolb
jge
cli
mov
dec
dec
sbb
out
xchg
lret
shrb
in
hlt
xor
scas
cmp
push
or
sarb
div
rorb
int3
mov
adc
js
mov
fbstp
mov
push
lods
mov
xchg
outsb
jnp
inc
inc
pop
clc
outsb
xor
test
xor
cli
adc
andb
add
jb
mov
cmp
shl
inc
mov
pop
mov
mov
in
leave
cmp
out
rcr
imul
push
pushf
pop
sysret
in
imul
out
push
jo
push
je
push
dec
repz
cmp
lcall
xor
scas
push
jo
and
and
inc
mov
inc
fnsave
addr16
xchg
adc
dec
sbb
sub
sub
add
sti
add
push
xor
mov
nopl
xchg
adc
sbb
outsb
push
cwtl
add
sbb
test
xchg
push
cmp
stc
mov
je
loope
add
bound
or
mulb
aaa
scas
aad
dec
xor
lods
sub
jge
dec
or
push
cmp
add
sub
push
mov
bound
or
mov
pop
mov
pusha
push
ds
mov
cli
dec
xchg
in
aaa
sbb
popa
jns
dec
xchg
push
pop
test
add
jle
adc
mov
insb
insl
stc
scas
or
cmp
cmp
jg
sub
xorb
sub
subb
inc
insb
and
test
ret
adc
xor
xor
lcall
cmp
aas
inc
pop
test
in
lret
das
mov
cmpsb
leave
adc
sarb
pop
push
mov
mov
dec
out
ret
mov
ret
outsl
mov
lcall
insl
lea
or
dec
inc
and
xlat
aam
cmpb
jno
iret
gs
mov
idivl
xor
xor
jmp
cmp
cmp
xchg
stc
jbe
ljmp
cld
sub
adc
enter
or
pop
xchg
cli
adc
adcl
inc
xor
mov
lods
sbb
lock
or
mov
cli
repz
out
idivl
xor
mov
mov
jg
xor
sbb
sbb
sbb
lds
xlat
xchg
out
aaa
add
in
push
sub
mov
lahf
and
lret
aas
out
pop
lea
lahf
pop
or
inc
mov
roll
sbb
stos
add
sub
fnstsw
or
add
testb
dec
icebp
mov
lods
cmpsl
insl
and
mov
push
pushf
movsl
jae
lods
stc
test
pop
pop
xorb
aad
xchg
insl
test
mov
push
mov
arpl
pop
and
or
and
jbe
sahf
sarl
les
shlb
mov
inc
or
inc
push
stos
sbb
sub
lahf
daa
jmp
adc
jae
mov
out
mov
js
idiv
idivb
mov
jp
in
pop
add
xor
jle,pn
sbb
sbb
rolb
dec
cmp
lds
mov
mov
das
fxch
cltd
mov
jle
or
cwtl
xchg
adc
bound
arpl
jl
adc
push
push
and
jmp
inc
mov
ljmp
fistpl
adc
mov
cmpsl
cli
add
data16
addl
xor
cmp
clc
pop
or
leave
mov
mov
pop
mov
repz
inc
push
das
gs
int
pop
jl
ss
in
movsl
clc
mov
dec
call
add
enter
mov
dec
mov
jns
mov
sarl
popf
pop
mov
hlt
testb
loopne
xor
movl
xchg
mov
adc
adc
inc
stos
push
jge
outsb
jl
jg
fmull
or
push
jp
xchg
mov
and
inc
in
test
dec
adcb
lahf
xor
stos
inc
popa
popa
out
in
inc
pop
pop
je
insl
in
orl
rcl
xor
cmovl
or
aam
pop
mov
inc
in
add
jae
cmpsl
fisubrl
in
insl
mov
in
in
lods
and
pusha
out
subl
add
lcall
adc
in
push
lret
inc
movsl
pop
outsl
ret
sbb
clc
mov
fmull
xor
mov
jns
jbe
sbb
mov
sub
js
jmp
jae
leave
jne
ret
xlat
or
into
push
sbb
jne
or
dec
mov
cwtl
rcrl
cmp
xor
mov
pop
mov
std
sbbb
adc
dec
dec
dec
repz
imul
ficoml
xorb
ljmp
pop
add
mov
mov
lahf
mov
push
scas
bound
dec
or
stos
mov
adc
rclb
ja
test
add
popf
cmp
xor
lcall
int3
cmp
pop
icebp
adc
push
sahf
add
insl
sbbl
mov
pushl
adc
iret
cli
fadd
mov
add
add
mov
outsb
hlt
add
pop
out
imulb
mov
or
add
push
mov
adc
aas
or
loop
push
sbb
adc
fildll
mov
mov
cmp
and
js
mov
test
cmpsl
cmpsb
sbb
popa
mov
mov
xchg
pushf
xlat
lcall
or
push
rclb
jle
cmp
add
mov
mov
sub
inc
imul
inc
movsl
test
inc
mov
dec
add
add
dec
sub
aad
jle
dec
lahf
jp
mov
jbe
bound
pop
andb
dec
cmpsb
loopne
or
xchg
mov
pop
lcall
push
xchg
test
aam
test
jp
push
test
into
loopne
fadd
popa
adc
jge
pop
je
jo
sub
jmp
daa
sbb
add
push
dec
dec
add
repz
mov
std
mov
test
mov
pop
jno
stos
andb
sub
add
out
pop
icebp
in
add
sub
add
sub
xorb
pop
xlat
pop
push
push
aaa
lahf
cmp
insl
stos
cwtl
int3
push
or
orl
test
mov
shrb
sub
movsb
aam
syscall
mov
sub
fs
and
mov
insb
jae
xchg
pop
xor
adc
xor
push
out
pop
shlb
psrad
test
notb
ja
andb
push
dec
add
hlt
insb
or
mov
jmp
lcall
jns
rorl
in
push
je
dec
xor
inc
push
jle
lea
add
test
cltd
add
push
das
mov
sbb
pop
mov
add
cmpsb
mov
dec
ja
mov
nop
fwait
or
or
inc
and
pushf
add
divb
in
scas
push
add
out
fs
imulb
sbb
mov
aam
push
ds
sbb
or
inc
push
and
xchg
or
das
lcall
xchg
mov
xchg
ret
xor
or
and
pushf
scas
push
sbb
jge
pop
dec
pop
sti
lcall
add
jae
addl
lahf
jnp
fs
sub
sbb
sbb
pusha
out
add
or
cwtl
dec
mov
sub
lock
jnp
mov
mov
fisttps
addl
sbb
xor
xchg
push
xor
cmp
mov
jns
cltd
repz
jb
sbbl
popf
fisttpl
xor
xchg
cli
lcall
cmp
stos
repnz
push
out
mov
push
bound
mov
inc
or
clc
dec
mov
mov
pop
mov
roll
mov
mov
iret
insl
in
test
sub
imul
leave
ret
push
push
daa
fwait
test
cli
sahf
gs
xor
loope
xchg
xor
ss
mov
jg
adc
mov
push
mov
lret
mov
jp
or
and
add
mov
dec
fiaddl
mov
pop
push
xchg
jns
scas
mov
and
mov
jbe
popf
pop
cltd
mov
je
call
mov
cmp
mov
xchg
pop
push
popa
dec
sub
push
addr16
jmp
adc
cmp
shrl
ds
test
mov
jb
lcall
jne
fcomip
scas
or
mov
inc
pop
xchg
enter
lahf
sbb
lret
pop
js
jae
int
lds
inc
or
or
cwtl
jae
repnz
push
xor
or
bnd
dec
and
add
and
cmp
cmp
inc
sub
scas
jge
dec
push
dec
repnz
movsl
adc
inc
cmpsb
into
call
xchg
sbb
mov
mov
out
fcomps
outsb
sub
out
and
cmc
mov
outsb
sbb
pop
or
cmpsb
sbb
push
int3
jl
mov
test
ja
test
sbb
mov
xchg
ret
mov
sub
loopne
xor
ljmp
mov
pop
jno
mov
push
sbb
xchg
adc
pusha
outsb
ds
sub
mov
adc
fstps
xchg
pop
lret
jae
sbb
pop
mov
dec
dec
or
testb
mov
jb
mov
div
leave
jbe
rcl
mov
jge
xchg
dec
cltd
mov
out
and
lea
mov
mov
push
xor
je
dec
pop
xor
incb
pop
call
jnp
test
mov
push
jno
sub
push
xor
cltd
ljmp
or
inc
rorb
push
ret
mov
out
cmp
pop
loopne
push
add
push
xor
ror
add
loop
sub
hlt
in
mov
es
cld
mov
in
add
pop
adc
xor
mov
sub
fstps
adcl
dec
std
xor
cltd
fistl
cld
jmp
lds
adc
out
repz
push
pusha
es
pop
mov
enter
cs
dec
sbb
jmp
ficompl
negb
test
dec
mov
pop
fstps
sbb
jmp
push
push
or
ret
test
addr16
sub
push
lods
jg
cmpsb
fcmovnb
sahf
loopne
xor
mov
mov
xlat
iret
fcoms
out
mov
and
push
push
xchg
mov
push
out
mov
cs
mov
scas
cmpsb
sub
sub
mov
in
pop
pusha
or
movb
aaa
sub
das
or
test
fwait
lds
es
imul
out
xchg
xor
fcoml
push
sbb
fsubrs
push
in
mul
icebp
sti
mov
rorl
add
lcall
insb
out
push
mov
pop
lods
sbb
or
push
mov
xor
push
sar
adc
and
incl
ret
or
pop
jmp
pop
pusha
add
sbb
cli
cmp
pop
vshufps
fwait
push
and
jp
pop
sub
aas
mov
adc
repz
xchg
sub
xor
js
ret
push
ret
rorb
adc
mov
inc
cmp
cs
negb
dec
in
pop
cmpsl
mull
leave
fsubl
and
push
cli
sbb
cs
push
clc
imul
xlat
mov
loopne
cs
cmp
mov
enter
mov
iret
fsubrs
push
jle
dec
jmp
inc
jbe
stos
sub
mov
jbe
mov
push
push
sbb
or
adc
xchg
cmpb
shlb
mov
adc
leave
sub
or
sbb
paddusw
jle
cmc
sarl
in
icebp
dec
xlat
lahf
orb
mov
shll
loopne
xlat
sti
bound
jge
inc
out
xchg
jo
fmuls
mov
incb
rcl
ret
jle
ss
jb
pusha
into
outsb
mov
mov
fbstp
out
int
mov
push
and
adc
mov
or
fcmovnbe
sub
outsb
cmp
lahf
lret
jb
dec
in
addr16
xchg
scas
popa
jle
push
add
ds
insb
sub
loop
je
adcb
push
add
fisubrl
or
ret
adc
dec
jbe
ja
decb
mov
inc
fs
ficoml
pushaw
mov
inc
hlt
mov
push
jl
shlb
cltd
mov
mov
jge
daa
andl
xchg
lret
xor
cmp
outsb
rcll
push
push
mov
test
mov
lret
lret
aas
aam
mov
jne
push
add
dec
xchg
fsubr
aas
es
scas
push
push
adc
outsl
jecxz
addr16
sahf
inc
enter
fs
int3
dec
inc
cli
mov
push
cld
or
jl
hlt
rcrl
into
lret
and
jmp
dec
repnz
popf
nop
mov
dec
movsl
dec
dec
or
jmp
movsb
jp
sbb
fists
shll
push
mov
add
aam
ds
pop
ss
sahf
or
loop
pop
mov
fcmovbe
cmp
inc
mov
add
xor
aaa
inc
out
ljmp
mov
add
mov
inc
lahf
pop
arpl
push
aas
adc
or
call
jbe
or
call
iret
push
sbb
fsubrp
xor
out
inc
mov
xchg
push
jmp
sub
xchg
push
inc
rcr
sbb
sbb
test
push
lret
pop
mov
lods
jnp
daa
fst
movsl
mov
incl
sbb
insb
ror
inc
lcall
inc
outsl
xchg
fs
jns
push
lods
xlat
outsb
out
dec
xchg
icebp
mov
xchg
jle
inc
adc
pop
mov
mov
mov
inc
addr16
add
push
test
inc
mov
adc
out
iret
aad
in
mov
pop
xchg
popf
jns
adc
push
rcrl
ds
scas
stos
out
ljmp
mov
jge
push
rorb
and
rcr
pusha
insl
and
jno
push
mov
mov
lret
jg
push
in
movsb
jnp
sub
insl
cs
daa
pop
imul
mov
movsb
test
mov
imul
push
add
jb
cmpsb
in
cltd
add
outsb
out
cmpl
xor
stos
jo
pop
daa
rep
jp
adc
xor
mov
sub
or
cmp
ret
and
lods
inc
test
arpl
out
xchg
test
inc
cmp
les
gs
inc
xchg
adc
add
push
cmp
in
xchg
int3
shrl
arpl
into
mov
inc
stc
and
push
mov
shll
push
imul
xor
add
jmp
mov
or
pop
cmc
dec
push
imul
xorl
cli
mov
andl
fsubl
loope
mov
das
push
outsl
leave
loope
cmpsl
loope
mov
out
xchg
nop
push
sub
push
sub
mov
add
fisttpll
js
xlat
scas
fstl
int3
inc
loopne
popf
fimull
in
jl
das
jl
icebp
into
jns
mov
imul
xchg
lods
stos
and
imul
iret
loop
into
out
lahf
aam
dec
adc
xchg
out
jo
jecxz
push
or
clc
hlt
xchg
insl
add
ds
in
cmpb
adc
stos
mov
clc
add
or
mov
inc
and
cmc
dec
mov
cwtl
mov
mov
xchg
pop
xchg
pop
shll
xor
inc
or
xor
dec
scas
inc
add
xorl
mov
mov
mov
push
mov
xor
jne
fisttpl
insl
pop
dec
push
jle
shrl
cmp
fnstenv
cmc
adc
inc
stos
jns
lock
cs
mov
fwait
or
loop
push
ret
xchg
mov
cmp
stc
fdiv
push
outsl
outsb
jae
push
push
xchg
lcall
add
push
sahf
in
xchg
inc
mov
fisubrs
imul
cmp
or
imul
lahf
cmpsb
mov
nopl
ljmp
add
sbb
ret
push
inc
test
sub
dec
cmc
repz
mov
dec
push
or
jo
pop
subl
iret
jns
mov
cmp
xor
xor
cwtl
jnp
stos
popf
and
mov
cmp
out
lret
in
adc
clc
lock
repz
aad
mov
clc
sbb
insb
pushf
jne
fucomip
daa
in
add
adc
cli
fildll
inc
mov
sti
mov
cli
mov
push
pop
adc
xor
push
mov
add
aam
dec
test
jb
scas
adc
mov
cmc
fsubrs
mov
cmc
leave
push
je
inc
sub
push
adcl
fstps
inc
pop
jns
mov
daa
test
inc
dec
add
clc
or
or
xchg
push
lret
mov
data16
int3
lea
es
push
out
ja
test
insl
fildll
hlt
lods
jge
mov
es
xor
scas
push
sub
xlat
jle
xor
les
push
xor
bound
mov
insl
in
cmp
cltd
ss
popf
inc
mov
pusha
or
and
ret
or
out
inc
or
and
out
idivb
dec
jl
dec
add
lods
xchg
mov
rclb
pop
cmp
rcrl
inc
push
dec
push
adc
mov
or
lods
rol
lods
std
sub
jg
nop
adc
mov
xchg
lds
add
jp
data16
aad
jge
dec
jnp
sbb
sar
adc
lea
nop
cltd
jnp
xchg
mov
and
daa
iret
xchg
or
dec
cmp
mov
mov
test
mov
mov
xlat
ja
jl
into
jnp
adc
pop
xchg
jl
dec
ljmp
int
das
cmp
and
insl
gs
call
inc
xorb
sbb
popf
gs
adc
adc
shr
outsl
out
lcall
xor
pop
jbe
mov
cmp
enter
cld
mov
test
les
sbb
push
add
pop
pop
mov
fucomi
and
aad
pop
or
dec
adc
xchg
fdivrl
pop
mov
pusha
jg
mov
mov
lea
cmp
jns
pusha
lea
pop
rol
push
dec
shll
insl
cld
pushf
jp
and
das
lea
test
pop
pop
dec
jg
dec
push
sub
sbb
lods
test
stos
mov
adcb
out
xor
sbb
stos
push
or
fs
adc
data16
mov
pop
sbb
mov
adc
sbb
push
push
lret
pop
sbb
adc
push
outsb
lcall
push
leave
test
or
xchg
mov
les
adc
addr16
dec
push
xor
dec
out
cmp
mov
daa
and
jnp
pop
movsl
and
add
xor
in
ret
sub
cmp
xor
and
sar
popf
and
repz
cmp
dec
and
xor
loope
mov
inc
cmpsb
shll
pop
add
arpl
jne
xchg
xchg
adc
adc
cmpb
add
sbbb
in
xchg
insl
sbb
pop
out
inc
out
scas
mov
adc
mov
xor
imulb
mov
lods
xchg
das
or
sbb
sbb
rcrl
out
mov
sub
shlb
xchg
adc
mov
mov
mov
iret
xchg
xchg
mov
outsl
mov
stos
je
mov
xchg
push
mov
ret
push
jg
sbb
add
adcl
dec
popa
adc
in
mov
mov
sbb
or
jle
and
mov
mov
add
bnd
inc
cltd
mov
addr16
fcomip
xchg
sbbl
jmp
adcb
fsubrp
ljmp
jae
or
pop
pushf
sti
pop
pop
je
stos
mov
jne
inc
lret
shll
test
in
adc
mov
mov
fxch
cmp
iret
or
cmp
mov
icebp
pop
mov
or
pop
push
push
jp
aad
popa
jg
aas
dec
in
fidivrs
lods
leave
sti
in
dec
sahf
ja
test
loope
test
jle
mov
out
dec
fbld
rol
cmp
push
cmpsl
and
mov
clc
cmpsl
clc
negb
sarb
test
fldcw
xorl
jae
xchg
nop
mov
rorl
and
jo
sbb
jg
sbb
push
push
adc
xchg
mov
xchg
outsb
lods
test
cmp
and
adc
xchg
push
jp
das
jne
and
leave
xor
call
jp
push
xlat
stos
lret
pop
mov
push
pop
repz
jl
fwait
lret
loop
sub
inc
push
push
clc
gs
cld
pop
adc
and
jge
ret
mov
sub
mov
mov
mov
mov
pushf
cmp
and
or
pop
jge
neg
cwtl
dec
pop
adc
leave
mov
adc
pop
test
shlb
ds
sub
ret
xlat
push
dec
sti
call
mov
cmp
fwait
adc
mov
sbb
test
jno
mov
mov
sahf
inc
jnp
xchg
das
and
inc
jmp
lahf
rcll
pop
push
sbb
mov
xchg
inc
mov
push
das
dec
out
cmpsb
cs
inc
lahf
movl
cmc
jne
and
lods
add
xchg
adc
jbe
jo
cwtl
push
cmp
mov
andb
xchg
mov
ret
les
mov
sbb
mov
xor
xchg
cli
lods
das
test
fwait
in
dec
int
push
movsb
xor
int
mul
pop
mov
pop
mov
call
aas
cmp
dec
mov
leave
sbb
cmc
inc
push
mov
popa
pushf
shr
xor
add
xor
mov
push
xchg
scas
push
adc
sub
aad
xchg
mov
daa
mov
loop
pop
out
and
mov
sbb
divl
in
adc
adc
stc
and
or
outsl
fs
sti
aas
insb
icebp
mov
imul
aaa
addr16
popa
mov
notb
jp
inc
faddp
adc
xor
push
mov
cwtl
iret
mov
sub
dec
test
outsb
dec
out
scas
and
sahf
fistps
pop
dec
add
jno
imul
test
das
sbb
in
cmpsl
jecxz
ds
inc
leave
icebp
lods
loope
push
lods
push
jmp
mov
in
pusha
adc
subb
jns
mov
mov
das
stos
dec
xchg
add
scas
push
push
fldt
rclb
dec
fstpt
daa
dec
push
inc
out
jb
push
rcrl
pusha
xor
add
jl
pop
xor
nop
std
xchg
xchg
les
stc
push
fcomps
cs
push
adc
pop
pop
xor
mov
es
xor
lods
jns
mov
stc
inc
adc
xor
jg
push
inc
cmp
adc
aas
fcomip
loopne
push
xchg
pusha
outsb
xor
mov
iret
jno
jle
dec
push
cmp
adc
push
add
aas
pop
inc
or
push
icebp
sbb
movsb
dec
sub
mov
inc
mov
je
fists
jge
cld
xchg
out
shrb
cmp
std
lcall
addr16
rorb
data16
arpl
mov
jns
or
adcb
jge
std
adc
xchg
adc
xor
adc
cmp
scas
sub
ss
jecxz
mov
idivl
mov
jmp
int
nop
repnz
push
inc
test
std
in
shll
and
and
mov
fldl
push
add
pop
push
mov
jge
repnz
fstl
je
fwait
pusha
lods
cs
out
call
lds
adc
cltd
pminsw
test
in
mov
push
mov
pop
mov
cmp
add
jl
imul
pusha
mov
push
add
lret
xchg
in
sbb
pop
cmp
loopne
movl
mov
push
std
mov
pop
cltd
mov
xor
dec
pop
mov
pop
and
jae
add
cmp
repz
cmp
clc
sbb
dec
mov
fsincos
or
cmp
mov
mov
in
neg
hlt
jecxz
adc
jbe
divb
shrl
add
in
mov
test
xchg
loop
adc
pop
add
sbb
jnp
jb
or
dec
and
cmp
test
pusha
xor
mov
negl
lea
pop
shrb
sbb
fisubrs
fcomps
divl
cmp
mov
rclb
ljmp
lea
psubq
inc
mov
dec
jns
mov
mov
aas
push
shrl
test
mov
push
mov
out
pop
or
aaa
inc
lds
and
or
in
repnz
jno
dec
out
mov
fildll
add
xor
inc
fs
rorb
xchg
and
mov
jecxz
push
pop
mov
les
mov
xchg
fwait
pop
ja
cmp
cmpsl
sbb
xchg
out
sbb
sbb
cmp
inc
pop
test
adc
leave
push
mov
aas
mov
add
pop
adc
mov
and
mov
jnp
out
outsl
xor
sbb
or
jb
test
push
bswap
std
inc
aaa
arpl
add
insb
mov
sub
ficomps
or
popf
xor
dec
lods
movsb
pop
sub
push
push
inc
clc
adc
enter
pop
inc
sub
lods
pop
mov
mov
fnstcw
cltd
in
pop
pop
insl
lcall
mov
sub
loopne
dec
sarl
mov
lods
mov
xor
or
inc
inc
pop
jbe
arpl
out
add
xor
arpl
xchg
push
mov
in
dec
xchg
iret
or
jns
loopne
stos
xor
dec
test
aam
mov
lret
loopne
incl
xor
aaa
test
and
mov
in
cmp
aaa
push
stos
fsubrs
push
push
jmp
pop
jecxz
jl
mov
or
xor
or
movsb
cmp
dec
sahf
xlat
dec
and
rcrl
js
add
fs
dec
xchg
std
out
adc
xor
inc
out
add
imul
mov
jne
mov
or
aad
les
pop
mull
sub
in
or
fstpl
xor
adc
sbb
inc
inc
mov
in
data16
mov
adc
mov
lret
fsubrp
call
fldenv
push
sbb
pop
fldcw
sbb
fwait
pushf
stos
in
loop
nop
ljmp
mov
mov
sub
cmpsl
mov
mov
sub
adc
push
add
inc
insb
mov
in
xor
mov
out
mov
xchg
jnp
fimuls
sub
or
out
call
xchg
add
pop
fs
jns
sub
out
push
add
iret
mov
repnz
inc
cmp
xchg
jp
inc
int
iret
decb
xchg
cmp
jp
xchg
jp
fnstcw
inc
xchg
rcr
jbe
ud0
pop
jb
cltd
and
jns
repnz
stos
sub
cli
xor
add
mov
ljmp
dec
imul
adc
sahf
jmp
jae
pop
movsl
sahf
cmp
lods
xorb
sbb
push
repz
js
out
mov
or
or
mov
lret
or
push
addb
sub
or
or
imul
xchg
sbb
mov
sub
and
mov
outsl
sub
roll
scas
mov
les
add
jmp
fcom
in
fsts
outsb
add
inc
into
xor
mov
aaa
sbb
push
cltd
add
loopne
ja
mov
pop
push
roll
sbb
movsl
loope
ficoml
add
inc
popa
cmp
in
mov
push
inc
push
mov
xor
jb
sahf
sbb
jns
push
je
sbb
jns
fidivl
test
das
fmul
cmp
aas
pop
dec
in
or
mov
push
fs
xchg
adc
sub
push
mov
push
inc
loope
jae
dec
inc
push
xor
andl
pop
lcall
add
enter
scas
roll
cli
dec
and
movsl
mov
fwait
andb
dec
shlb
shrb
mov
hlt
jmp
in
mov
fmulp
push
out
xchg
xchg
cwtl
jns
push
sahf
into
jle
jmp
idivl
xchg
lret
enter
jge
and
cltd
cmp
jae
or
cmc
inc
cmc
push
hlt
nop
in
mov
insb
push
adc
inc
sahf
jo
icebp
pop
xchg
xor
inc
enter
push
cli
pop
gs
ret
lock
mov
movsb
dec
mov
outsb
ss
adcl
ja
sbb
xchg
add
push
jle
rcrb
and
pop
ljmp
and
lods
add
xor
mov
repz
popf
mov
push
or
call
xchg
mov
mov
cltd
imul
adc
out
xchg
xchg
repz
mov
ds
sbb
out
adc
push
sarb
push
es
jp
xorl
cltd
imull
push
ficoml
jle
push
mov
push
pop
push
add
cmp
out
fs
sub
lea
loopne
stc
push
xchg
push
jmp
in
iret
flds
cmc
mov
sub
cmp
stc
mov
mov
pop
aam
fs
std
add
inc
lcall
popa
jl
test
jns
adc
leave
lcall
inc
adc
enter
pop
add
sub
jb
sbb
adc
mov
sahf
js
fcmovu
lods
add
dec
cmp
adc
shll
lcall
rcr
dec
fwait
adc
aad
or
scas
sbbl
pop
sbb
or
bound
fcomps
inc
cmpsl
and
negl
push
jle
inc
into
dec
or
std
cltd
jecxz
xchg
outsb
js
clc
shl
outsl
cltd
in
daa
cmp
shrl
jb
cvtpi2ps
insb
jb
xchg
mov
dec
inc
pop
lret
outsl
ds
int
jg
sarl
pop
stos
xor
sbb
scas
mov
retw
add
mov
cltd
adc
out
mov
enter
push
in
aaa
pop
ds
mov
sub
cltd
sbb
add
lahf
sbb
mov
add
ret
inc
lds
lcall
adc
and
rorb
mov
into
inc
loop
jns
incl
jae
aas
xor
and
loopne
test
gs
and
push
loopne
cwtl
fs
and
or
dec
pop
aam
lods
jmp
fcomp
iret
and
lods
push
mov
je
mov
pop
jae
bnd
mov
cwtl
mov
inc
ret
or
lods
jmp
pop
je
shrl
pop
jmp
ljmp
jo
in
mov
jns
dec
fiaddl
flds
dec
mov
ret
xor
mov
jmp
push
adc
imul
andb
in
subl
jbe
jbe
and
test
or
clc
inc
sub
cmp
js
adc
sbb
addr16
lret
cmpsb
fadd
xor
inc
rolb
jbe
shl
pop
fldl
and
jae
cltd
out
lods
inc
shrb
push
pop
cmp
ja
jle
cmpsb
in
orb
call
out
daa
xchg
fstp
daa
cmp
mov
popf
inc
push
xlat
cld
pop
out
cmc
xchg
xor
pop
jae
outsb
xor
mov
jo
lahf
test
stos
xchg
mov
sbb
aaa
dec
sbb
pop
daa
xor
clc
je
mov
add
add
xor
xor
lea
es
ss
aaa
jno
ss
lock
cld
xor
sub
lcall
pusha
dec
sub
jge
sub
sub
pop
hlt
jl
mov
loopne
hlt
pop
xchg
imul
or
clc
daa
in
test
cmp
or
push
adc
adc
rclb
sbb
fnstenv
arpl
lods
in
push
jge
enter
lret
adc
adc
popf
mov
lea
cmpsb
arpl
fisubs
test
push
adc
repnz
lods
outsl
int3
push
fwait
mov
dec
icebp
or
jnp
into
rorl
mov
adc
je
cli
xchg
mov
mov
lcall
stos
mov
mov
fisttpl
jecxz
inc
loopne
lds
jne
cli
cmc
jno
hlt
add
sub
mov
enter
add
inc
mov
sub
ljmp
dec
repnz
push
pop
lods
fidivrs
sub
scas
insl
or
fstps
sub
nop
mov
data16
jmp
mov
add
push
andl
into
xor
adc
xor
idivl
mov
push
mov
jg
test
sub
cs
mov
xchg
iret
xchg
pop
mov
stos
mov
js
or
pusha
pop
notb
push
add
adc
xchg
scas
add
jb
mov
pop
inc
dec
adc
sub
add
addb
push
cmp
inc
adc
push
rcrl
dec
mov
add
pop
ja
js
aad
push
mov
in
or
pop
mov
lock
jecxz
dec
loope
test
mov
push
mov
push
jmp
cltd
dec
js
hlt
fimuls
into
sbb
lahf
adc
mov
jmp
testb
mov
xchg
pop
out
movsl
popf
jns
xor
or
add
add
push
adc
in
push
shr
dec
repz
push
push
mov
inc
pop
mov
into
pop
mov
rcpps
scas
push
dec
pop
push
cmp
pop
aad
fsubrs
lea
lret
repz
pop
fbstp
stos
out
insb
pushf
out
mov
lock
or
push
fsubs
out
mov
fnsave
lds
sub
lret
add
test
loopne
xchg
fidivrs
mov
icebp
shlb
popa
outsl
add
mov
mov
dec
or
xor
add
fstp
addr16
in
stos
or
pop
sub
addr16
lods
aaa
dec
data16
jmp
xchg
out
xor
aad
lds
mov
jns
mov
sbb
inc
imul
cmp
outsb
xchg
dec
scas
pop
xchg
pusha
and
notb
nop
and
clc
lock
pushf
sub
mov
arpl
cmp
jp
movsb
xor
mov
and
in
mov
push
xor
xchg
cmc
in
inc
xorl
xchg
sub
add
jnp
lods
arpl
stos
in
mov
outsl
mov
js
int
pop
sbb
jmp
inc
mov
dec
in
insl
rclb
roll
sti
std
lcall
xchg
mov
imul
xor
pop
lcall
adc
adc
mov
mov
xchg
sbb
or
popf
mov
test
fiaddl
fadds
out
enter
or
lds
lea
or
pop
and
cmp
sub
jae
cmp
push
aam
sub
mov
sbb
inc
mov
in
jne
fldcw
and
push
jne
fdivrs
cmp
aaa
ficoms
xchg
jae
mov
scas
mov
pop
clc
pop
aaa
xor
cmp
sbb
fmuls
jge
hlt
imul
cmc
jl
add
mov
leave
out
out
and
enter
sbb
add
in
cmp
fnsave
jbe
shrl
inc
rcr
and
xor
pop
pop
mov
inc
pop
insl
push
jb
fisubrl
lret
cmp
mov
cmpl
cmp
out
std
aad
loopne
xchg
in
jle
xchg
mov
xchg
mov
scas
addb
insb
dec
aaa
jge
jb
aas
sbb
dec
gs
mov
jge
lods
and
daa
mov
xor
addl
test
sub
mov
inc
fwait
cli
faddp
in
mov
and
psubsb
push
scas
outsl
and
jp
stc
jne
lcall
into
jnp
or
sub
fcompl
add
fstp
rorb
jne
ret
or
mov
sub
das
sbbl
lods
jmp
fcomp
lcall
loopne
lock
int3
sti
push
add
push
dec
movsb
and
jnp
iret
lahf
mov
cmc
cwtl
fmul
insl
ds
cmpsl
mov
xchg
aad
int3
and
xor
push
dec
adc
add
adc
stos
mov
mov
cmpsb
out
cmp
xchg
int3
inc
pop
jnp
mov
ds
ret
test
sti
pop
sbb
out
add
out
rep
sbb
sbbb
gs
xchg
int
cmp
test
lret
test
mov
in
enter
mov
ret
cwtl
icebp
pop
scas
mov
scas
loop
mov
or
xchg
aad
daa
sbb
stos
in
adc
add
idivb
adc
adc
repz
cltd
leave
push
mov
xchg
and
mov
mov
loop
popa
inc
in
sub
je
cmp
xchg
scas
ljmp
jecxz
fcomps
jmp
mov
xor
pop
or
daa
pushf
cmc
dec
aaa
mov
or
sbb
jge
mov
fldt
std
les
inc
repnz
xor
mov
movsl
adc
clc
or
out
jns
cmp
lea
xlat
pop
push
and
dec
insl
jmp
add
inc
adc
ds
sti
inc
movsl
push
gs
call
or
stc
ss
imul
gs
inc
filds
sub
mov
cld
sarb
nop
and
inc
iret
imul
stos
jge
push
lcall
cmpsl
lret
jle
dec
leave
add
and
repz
stos
in
add
add
pop
icebp
xchg
or
lds
xlat
adc
jb
lret
fnstenv
push
stos
and
cmc
enter
push
dec
adc
cmpsb
outsl
fmuls
xchg
mov
jae
xchg
push
xchg
hlt
nop
test
lcall
sbb
and
xor
mov
mov
daa
fs
inc
push
push
negl
xchg
cmp
inc
jne
iret
ljmp
jns
outsl
cmp
dec
push
xor
push
repz
ds
add
aam
push
push
dec
sahf
push
xchg
fsubr
stos
sbb
mov
pop
or
mov
repnz
lea
cs
in
cmp
rcrl
popf
push
sub
mov
imul
cwtl
dec
mov
ss
fdivrs
mov
sub
imul
shrb
dec
and
mov
mov
mov
fists
pop
mov
pop
mov
outsl
adc
sbb
xor
pop
pop
jne
xchg
pop
pop
aas
lock
gs
mov
cmp
xlat
adc
fidivrl
bound
sub
cmp
or
inc
pop
scas
dec
cwtl
out
ret
inc
and
push
xchg
fbstp
dec
sbb
gs
lret
leave
lret
sub
je
mul
xchg
dec
fidivl
pop
das
ret
or
imull
inc
ficomps
divl
in
iret
adcb
fisubrs
cld
sbb
fs
movsb
enter
sti
push
lret
push
dec
jle
xor
mov
into
loop
loop
lock
rcl
test
jg
mul
mov
mov
mov
add
add
loop
or
mov
adc
mov
xchg
pop
jmp
mov
call
iret
ds
mov
jge
repz
ret
xchg
adc
out
repnz
incl
in
out
aaa
add
cmp
jecxz
add
popa
mov
aad
lods
xchg
dec
fisttpl
cmp
ja
lds
mov
mov
aas
mov
adc
aam
jae
dec
nop
jb
jae
and
add
pushl
arpl
pop
sahf
shr
xchg
pop
jno
fidivs
pop
outsb
push
sub
pop
pusha
jno
shlb
sub
ret
jbe
jl
pop
test
out
test
add
mov
pop
mov
in
loopne
inc
popa
mov
push
andl
rorb
pop
mov
dec
add
pop
movsl
cld
dec
hlt
jne
push
xor
mov
mov
lods
jl
popa
pop
loopne
imul
enter
mov
lods
sbb
sahf
xchg
inc
and
lahf
mov
add
inc
sub
int
mov
jno
aaa
cmpl
rcll
xlat
cmpsb
xor
rclb
ret
push
icebp
idivb
andl
inc
int3
jl
mov
mov
stc
incb
add
pushf
clc
sub
pop
mov
and
test
sbb
fsts
lcall
imul
mov
jo
and
insl
push
inc
sbb
popa
in
sbb
outsl
cltd
xor
ljmp
jno
add
test
movsl
rcrb
push
jle
inc
cmpsb
cmc
mov
and
jbe
cmpsb
mov
stos
push
adc
dec
imul
outsl
xchg
adc
push
loope
pusha
lahf
mov
pop
jg
or
add
xchg
loopne
loop
lcall
dec
in
xchg
mov
pushf
mov
cld
sub
shl
lret
jb
jb
icebp
dec
inc
loop
adc
jno
sub
shrl
inc
data16
insb
sub
mov
sbb
sub
out
frstor
jbe
or
jae
jp
push
pop
notl
push
xor
ret
adc
lahf
mov
mov
lds
lahf
int3
sbb
cmc
pop
dec
jbe
add
push
mov
adc
or
es
adc
mov
adc
arpl
and
ret
push
pop
call
mov
lods
stos
and
or
int
nop
mov
add
jle
rclb
dec
or
loopne
lcall
stos
ja
dec
lcall
iret
out
dec
iret
aam
loopne
mov
gs
testl
push
and
iret
into
je
dec
cmp
imul
inc
into
mov
push
pop
adc
dec
xchg
out
mov
xor
dec
push
out
ret
ja
inc
fwait
inc
jno
jae
mov
or
fwait
insl
jbe
xchg
jmp
mov
ds
pop
cmp
jnp
enter
push
in
out
hlt
sbb
xchg
and
aas
stc
das
pop
loopne
mov
adc
pop
ds
dec
mov
mov
and
mov
mov
mov
mov
lock
ljmp
fcmovnu
aam
mov
xchg
dec
mov
xchg
out
push
push
aas
add
mov
fcoml
jns
cmpsb
ret
arpl
mov
xor
ret
sahf
clc
jb
push
sub
xlat
sbb
das
inc
jae
int3
testb
outsl
cmp
push
loopne
mov
push
mov
loop
pop
xlat
in
jo
adc
shll
faddp
inc
adc
pop
jae
push
fwait
xchg
aad
enter
mov
int
cmp
test
bound
leave
into
fdivrl
or
aas
addb
or
push
ror
cmp
pop
pusha
stos
push
notb
mov
js
dec
dec
fldcw
mov
add
cltd
stc
hlt
jle
sbb
test
mov
push
pushf
and
mov
mov
wbinvd
nop
jns
jno
das
movsb
aad
push
sbb
adc
shl
inc
sbb
sbb
mov
bound
les
repnz
pop
aad
movsl
inc
and
push
mov
and
shlb
jle
pop
jmp
mov
mov
loop
hlt
add
jo
stos
cmp
jne
pop
movsb
jle
and
addr16
rorb
loope
dec
sub
inc
fwait
inc
and
jns
aas
sub
leave
cmp
movsb
add
pop
cmc
repz
adc
cli
outsl
adc
bnd
mov
xor
jmp
jb
pop
aas
xchg
add
test
add
lock
push
xchg
int3
test
stos
xchg
mov
movsl
insl
jg
jge
mov
dec
lahf
int
adc
push
cmp
leave
jl
into
inc
out
lods
hlt
scas
jns
insl
cld
adc
mov
xchg
jecxz
daa
adc
cld
imul
dec
testb
sbb
push
mov
inc
in
jae
insl
popa
shll
shl
lret
andl
lods
cmovne
sub
or
vcvtss2si
push
nop
mov
outsl
jne
sbb
or
test
retw
inc
rcr
sbb
cmp
xor
out
inc
scas
cltd
cmp
cmpsb
fisttpll
sbb
inc
cli
sbb
loopne
and
or
jg
push
in
out
rclb
mov
add
movsb
and
mov
adcb
jb
push
nop
adc
xchg
shrb
push
xor
cmpsb
loopne
jge
pop
sub
mov
jno
out
arpl
and
mov
adc
xchg
int3
cltd
lds
cmovno
dec
arpl
mov
mul
and
xchg
mov
out
mov
addr16
push
rclb
dec
fmuls
dec
add
adc
adc
adc
test
add
nop
out
cmp
ret
mov
add
mov
in
push
rorl
mov
outsb
cmc
jne
pop
mov
sbb
add
xor
jb
mov
mov
scas
xchg
push
mov
xchg
mov
pop
cmp
popa
rcll
sub
and
xchg
dec
push
xor
lods
out
jmp
mov
push
sbb
dec
call
adc
and
push
adc
mov
pusha
cli
icebp
orb
sbb
cmc
and
ss
cmp
mov
and
jmp
add
xor
cmp
gs
icebp
mov
enter
or
pushf
inc
ds
mov
adc
std
mov
push
inc
cmc
inc
lea
sahf
cmpb
aam
cmp
cmc
in
lock
xor
ret
mov
test
imul
jge
adc
sub
test
push
inc
dec
push
fs
call
js
rcrl
sbb
or
pop
fisubrl
in
adc
dec
inc
mov
loope
push
test
sub
add
and
pop
pop
dec
dec
dec
push
sbb
sarb
inc
jecxz
mov
or
pop
pop
and
std
push
stos
sub
xchg
or
lds
xchg
call
xchg
xor
btrl
inc
imul
fcmovu
jge
mov
jo
xchg
daa
lret
aaa
notl
aad
lods
xor
ljmp
loope
mov
scas
loopne
push
out
jmp
push
or
ja
jecxz
adc
cmpsb
pop
mov
jle
scas
xlat
mov
cmc
push
out
aam
dec
into
ficoml
push
mov
scas
cmp
adc
push
xchg
clc
adc
in
into
push
jns
fcompl
jl
mov
lods
daa
xchg
or
pop
or
fildll
lock
ss
aaa
or
stos
xchg
test
dec
outsb
mov
rcll
or
movsl
or
xor
arpl
mov
push
fistps
adc
jns
mov
sub
pop
out
adc
push
sbb
fwait
jb
push
mov
cmpsl
add
xlat
cmp
adc
lods
push
orb
stos
cmp
or
nop
test
ret
jg
shlb
stc
repnz
js
call
sbb
movsl
pop
dec
lods
add
inc
adc
out
mov
iret
fldt
ds
arpl
fldcw
cli
jnp
test
clc
aad
mov
lcall
cmp
inc
mov
int3
fsubrs
or
popa
xchg
arpl
xchg
imul
dec
movsb
lahf
mov
movsb
inc
in
lods
push
mov
pop
rorb
sub
outsl
pop
nop
bound
or
jmp
call
lds
mov
daa
xor
push
loop
mov
inc
pop
dec
xchg
fsub
sub
ret
xor
scas
sbb
sub
xchg
and
pop
outsl
out
push
movsl
and
ja
and
insl
inc
jmp
dec
pop
cld
cmp
inc
push
add
xchg
ret
rcrb
in
mov
jge
push
scas
lods
adc
rorl
lcall
xchg
mov
sbb
or
mov
xchg
jns
dec
push
bound
xor
inc
xor
pop
sbb
aam
ja
mov
out
ret
fwait
mov
dec
leave
movl
xor
jns
cs
sar
jne
clc
xor
xchg
sub
push
mov
inc
xor
pop
out
or
sarl
push
mov
pop
negb
xor
cmp
ficomps
mov
sub
pop
mov
dec
push
pop
sti
rcrb
dec
lret
lea
xchg
push
pop
mov
push
mov
jecxz
xchg
mov
sbb
xor
inc
lods
mov
sub
ja
fildl
lcall
xor
sbb
outsb
movsl
mov
stc
jns
xchg
sbb
jecxz
movsb
int
out
xor
cmpsl
xchg
pushl
inc
hlt
movsb
inc
mov
xlat
hlt
pop
mov
ud0
adc
jb
mov
or
mov
insb
enter
loop
scas
push
lods
aam
push
popf
xchg
push
xchg
fnstsw
incl
dec
popa
add
push
lods
sub
popa
scas
jbe
cmp
shlb
nop
xor
mov
movl
movsl
inc
adc
push
pop
ja
mov
sbb
jns
xchg
data16
adc
cmpsb
bound
mov
ret
sub
push
idiv
jmp
xchg
movb
and
pop
adc
mov
push
stos
sub
int
iret
repnz
cld
shrb
push
ljmp
sub
ror
jecxz
and
jge
lret
pop
insb
mov
cmp
inc
add
jg
lea
push
fs
xchg
cmp
jbe
jmp
sbb
fst
xor
sbb
imul
sbbl
subb
xchg
bound
repz
mov
push
and
dec
out
sbb
ljmp
xlat
inc
sub
leavew
inc
xchg
cmp
ljmp
outsl
pop
ljmp
out
jnp
push
ficompl
mov
arpl
jne
daa
je
sub
das
push
mov
pusha
xchg
cld
cmp
push
mov
aaa
psrld
arpl
adc
lods
loope
pop
jecxz
or
jo
mov
mov
xor
data16
push
movsl
jp
push
add
ljmp
inc
fcomps
cmc
jg
mov
xchg
cli
cmp
inc
and
hlt
into
xor
mov
jns
push
mov
cmp
enter
pop
push
mov
jno
add
and
ret
add
fimuls
popf
jp
push
cmp
lods
mov
cld
cmpl
jl
aaa
xor
fcoms
in
push
adc
jl
jge
lds
outsl
pop
push
fidivrs
push
and
mov
mov
jae
into
rcl
emms
cltd
cmp
loop
call
adc
or
scas
mov
ror
add
xchg
jb
pushf
popf
in
xor
scas
cmc
lret
test
xlat
cmp
incl
call
dec
push
sub
dec
sub
pushf
add
dec
into
orl
lods
dec
repnz
test
cmpsl
mov
filds
mov
jo
mov
in
stos
inc
xchg
xor
int
dec
lds
cmp
loopne
pop
sub
leave
adc
or
daa
sbb
mov
adc
cmp
jle
xchg
push
test
sbb
push
sub
into
ja
push
add
add
and
jp
mov
cmpsl
cld
jns
pop
cmc
xor
pop
add
pop
ret
arpl
add
inc
cmp
pop
add
cmp
clc
iret
ljmp
iret
arpl
xchg
mov
push
fmul
jb
popf
fs
cmp
imul
testl
add
fstpl
push
jle
adc
jle
mov
mov
mov
imulb
mov
cmp
jne
aaa
push
loop
push
mov
popf
mov
xor
sub
pop
subl
out
push
test
pop
mov
push
loope
stc
sbb
mov
mov
dec
mov
rorb
mov
or
sbb
push
mov
leave
inc
fwait
cmpsl
mov
aaa
sbb
cmc
repz
mov
mov
ljmp
or
xor
insb
into
and
mov
or
lret
and
jge
fiaddl
loope
lock
mov
addr16
pop
push
xlat
xchg
pop
inc
sbb
stc
outsl
shrl
sub
mov
jp
decb
cmp
cli
mov
push
call
push
sub
xor
sbb
inc
ret
fsubrl
lock
sbb
or
ljmp
xchg
xchg
dec
inc
mov
cltd
cltd
mov
push
push
mov
push
call
xchg
ss
cmp
mov
ss
dec
rcll
sub
inc
fnstsw
adc
mov
repz
outsb
mov
loope
in
orl
ss
push
iret
in
mov
cmp
mov
je
jecxz
dec
pushf
dec
test
mov
sti
add
imull
mov
push
lcall
gs
int
ja
js
shll
mov
mov
out
out
mov
xchg
in
adc
push
stc
daa
inc
push
push
sbb
dec
pushf
out
push
mov
jp
mov
xor
fs
mov
mov
pop
xchg
sub
lahf
push
adc
xor
cmp
std
mov
dec
inc
sub
pop
jmp
push
mov
cmpsl
sbb
ret
xchg
jecxz
cli
push
sub
iret
js
in
int
push
gs
mov
fdivrl
movsb
mov
loopne
sbb
xor
es
bound
dec
push
das
mov
inc
sahf
mov
and
jmp
adc
fmuls
push
outsl
add
xchg
adcb
data16
rclb
ja
fistl
mov
jnp
push
fdivrs
dec
aaa
dec
adc
jl
hlt
dec
pop
and
add
test
test
subb
pop
stos
adc
jnp
jmp
mov
xor
xor
or
in
cmp
fnsave
shll
in
mov
lods
xor
movsl
lcall
cltd
push
fld
mov
sub
mov
fcompl
iret
setno
mov
push
pop
pop
inc
jb
cmp
jmp
mov
jne
imul
sbb
movsl
stc
dec
push
mov
sub
test
mov
mov
jns
aad
xor
das
addr16
movsb
addr16
inc
push
jns
and
rcl
call
or
jle
mov
mov
nop
adc
dec
inc
in
mov
mov
andb
xchg
arpl
sub
call
jg
jg
call
repnz
stos
dec
jne
int3
addr16
in
fbld
das
enter
xor
inc
es
aaa
jp
aad
jne
or
mov
dec
sarb
or
add
pop
aas
push
push
xchg
aam
adc
pushl
cmpxchg
lret
lret
pusha
outsb
mov
mov
insb
fisttpl
jl
nop
push
cmpsl
xor
pop
jp
pop
mov
cmp
adc
stos
xlat
lock
loop
or
dec
xchg
pop
add
idivb
lahf
sub
or
mov
adc
pusha
sub
jecxz
xchg
cmc
and
cmpl
sub
pop
out
sahf
pop
pop
lea
negb
cmp
xchg
xchg
pop
pushf
out
and
shl
outsb
sbb
mov
int
xor
nop
into
lahf
and
add
sub
fmulp
aad
xchg
fisttps
xor
cmp
test
and
pop
and
pop
pop
mov
ret
stc
pop
cld
sbb
mov
cs
xlat
jmp
or
inc
scas
and
push
stc
test
or
out
push
mov
xlat
xorb
dec
inc
xchg
add
xchg
sbb
call
rcrb
out
in
jo
xchg
scas
add
pushf
repnz
mov
push
cmc
fdivs
jo
mov
test
and
mov
outsb
sub
jo
stos
cli
mov
inc
popf
inc
repz
stc
call
xlat
inc
enter
les
pop
sbb
lcall
pop
mov
aaa
test
mulb
mov
into
cmp
push
in
stos
mov
push
sti
outsb
ljmp
xor
sbb
xor
pop
pop
pop
insl
das
out
inc
insb
aas
jne
out
sti
mov
insb
aas
ret
push
js
lods
stos
sbb
pop
insl
rcrl
lock
sub
push
data16
xchg
pop
pop
arpl
sbb
cltd
mov
das
scas
shll
push
sub
cli
inc
nop
fcom
add
int3
and
sbb
jmp
xor
lods
arpl
xchg
add
aad
aas
pop
hlt
icebp
xchg
shlb
nop
in
test
sbb
mov
jl
mov
jmp
jecxz
jb
scas
xchg
out
inc
pop
push
aad
sbb
push
or
xchg
inc
add
push
jb
inc
cmp
mov
mov
xorb
mov
addl
hlt
mov
or
jns
es
pop
cmpsb
xor
mov
dec
outsl
mov
sbb
cmp
sub
dec
clc
and
push
scas
pop
mov
adc
add
mov
fwait
mov
cltd
add
sahf
cli
jg
jne
sub
int3
jg
pop
inc
cmp
into
jbe
mov
add
cmp
or
add
cmpsl
jmp
ret
jecxz
dec
clc
hlt
push
xchg
ss
inc
push
fucom
mov
std
jmp
mov
jno
in
xor
jecxz
xlat
push
lahf
mov
inc
bound
jl
push
shlb
adc
jnp
in
addr16
or
mov
pop
push
adc
jbe
cmp
movsl
push
sbb
push
out
lock
dec
lock
add
jae
xchg
sbbb
daa
jne
gs
mov
or
jmp
pop
stos
push
ret
mov
and
sar
stc
adc
pop
lcall
aam
add
pmulhuw
push
nop
lock
inc
dec
gs
xchg
dec
pop
cmpsl
fadds
mov
inc
dec
inc
add
cmp
mov
je
mov
movsl
roll
add
ficomps
enter
fiaddl
arpl
push
xchg
popl
mov
and
xchg
cld
mov
jle
add
scas
out
mov
pop
fs
shlb
repnz
js
gs
sbb
aas
or
popf
ss
mov
test
idivb
inc
lods
dec
cmp
lods
aas
dec
sti
dec
lods
fldcw
push
out
in
out
loope
jl
push
jge
or
out
ljmp
xor
or
subb
mov
in
push
subb
sub
fstp
push
inc
popf
mov
mov
cmp
or
cmp
push
mov
jo
mov
cmp
xchg
sub
adc
xor
push
les
fnstenv
stos
test
icebp
es
icebp
xchg
jne
push
sbb
jg
mov
fld1
repnz
loope
ret
lret
int
jecxz
jno
sbb
lds
or
jns
loopne
push
xor
adc
fwait
jno
pop
dec
mov
dec
rcrl
pop
cmpsl
xor
out
clc
sub
cmp
sbb
je
lret
xor
or
push
cmpb
scas
dec
fdivl
inc
adcb
push
fwait
and
fxch
inc
test
push
mov
push
inc
add
jle
sbb
shll
mov
je
cmpsb
jg
int3
mov
outsb
sbb
loopne
ljmp
xchg
popa
aaa
rorb
mov
sti
lds
aad
lret
jae
or
imull
cmp
sbbl
cwtl
push
addb
push
jns
imul
rolb
int3
mov
fbstp
and
adc
xor
mov
mov
leave
sub
loop
mov
xchg
mov
orl
in
push
dec
shll
cs
xorb
xor
push
push
pop
mov
je
add
pop
insl
test
in
jmp
cmpsl
setno
pop
sub
mov
jnp
into
xchg
mov
adc
sbb
movsb
repz
imul
call
aaa
adc
es
call
mov
pop
jmp
dec
and
data16
lods
imul
or
clc
inc
xor
sbb
stos
dec
subb
xchg
popa
ja
mov
dec
fmuls
test
leave
xchg
data16
xchg
xchg
ret
jbe
repnz
popa
imul
sbb
dec
push
push
popa
mov
push
cmpsl
in
jmp
pop
pop
mov
and
push
jbe
dec
scas
push
xchg
test
out
xlat
push
add
mov
in
add
cmp
loope
fimull
das
pop
fisttpll
add
jl
dec
pop
lret
std
sbb
lret
or
cmpsl
add
std
or
and
fldl
leave
jp
popf
lea
xchg
xchg
lret
or
cmp
xlat
not
sbb
lret
jno
push
jl
movsl
shrl
cmp
mov
pop
lcall
nop
jnp
sub
int3
dec
in
add
cltd
aam
inc
jns
push
les
and
adc
insb
pop
out
or
push
pusha
jo
dec
arpl
ja
insb
daa
xchg
jno
mov
or
sbb
sub
insb
ficoml
push
ds
dec
xor
icebp
adc
cli
test
mov
xchg
cs
rorb
mov
sbb
mov
or
mov
sbb
or
aad
mov
fs
jae
loope
mov
insb
pop
xchg
jns
dec
xor
inc
xor
lcall
pop
dec
and
das
subb
rcrl
dec
xchg
fimull
xchg
daa
sub
jns
addr16
xchg
mov
ja
in
inc
imul
jmp
push
stos
addr16
sbb
test
xor
add
pop
insb
or
imul
shrl
sub
jne
xchg
shr
jp
jmp
into
push
outsl
stos
fwait
and
dec
pusha
dec
mov
sbbb
inc
dec
mov
lcall
out
test
and
jne
xor
ret
inc
fildll
push
adc
shl
repz
xchg
imul
mov
and
lret
lret
mov
push
popa
jae
and
inc
or
mov
lock
cmp
scas
jnp,pt
es
mov
dec
pushf
in
add
jo
notb
data16
mov
push
xchg
nop
lock
push
int3
aad
out
fs
fdivs
cmp
imul
dec
fmul
mov
pop
inc
dec
mov
push
in
adc
iret
lahf
add
inc
cmp
ds
jg
sbb
inc
in
daa
into
xor
lcall
xchg
pop
add
inc
mov
cmp
lea
push
cmp
mov
aad
out
mov
mov
inc
fbstp
add
fimull
mov
pop
push
cmp
push
mov
push
pop
pop
pop
sarb
mov
shll
pop
push
mov
out
call
dec
fs
lds
fmulp
add
mov
fmull
icebp
dec
fidivrl
push
xchg
sub
sbb
shll
xchg
pop
and
fadd
add
jne
and
sub
mov
orl
mov
or
mov
adc
inc
in
iret
xor
mov
pop
jecxz
sbb
or
test
adc
mov
iret
cmp
dec
mov
mov
mov
ffree
mov
adcl
sbb
into
nop
cltd
rorb
pop
pop
std
mov
sti
pusha
push
nop
or
test
jno
psrld
ljmp
leave
mov
mov
and
sbbl
pop
rcrb
inc
dec
push
jmp
xlat
mov
mov
cmp
sub
lea
cmpsl
bound
pop
lea
mov
xor
sar
lcall
rorl
mov
mov
leave
mov
cs
loop
push
mov
in
pop
subb
cmpsb
push
cmp
pop
aaa
scas
pop
and
imul
push
inc
icebp
or
ja
mov
imul
xor
out
or
sbb
and
leave
lods
jg
std
imul
mov
push
hlt
xor
cmpsl
imul
arpl
mov
std
push
jg
mov
lock
cld
xor
imul
stos
jns
sbbl
je
dec
in
lods
aad
fldl
or
repnz
push
cmc
push
mov
pusha
adc
fidivl
sti
bound
xchg
add
hlt
cs
inc
lock
mov
repz
rclb
mov
push
ret
cmp
mov
jb
xchg
paddusw
and
cmc
dec
jo
mov
jmp
push
push
jge
cmpsl
inc
movsl
mov
mov
mov
rorl
push
not
scas
arpl
aas
inc
aam
lahf
fs
mov
pop
add
aas
data16
add
dec
adc
jmp
enter
adc
cmpsb
stos
cs
je
stos
sti
jo
cli
les
mov
pop
add
lret
cld
into
fidivrl
sbb
dec
movb
out
jmp
add
adc
movsb
daa
dec
pushl
fcoml
or
out
pushf
cmp
jecxz
loope
xor
mov
jl
dec
adc
cmp
sub
roll
adc
call
aad
pop
call
sbb
inc
lods
test
ficomps
mov
mov
inc
mov
cwtl
push
pop
dec
jbe
mov
inc
mov
std
fistpl
rorl
lods
sub
jns
push
and
fsub
cmpsb
jo
cmpsb
movsl
or
cs
sbbl
aam
xchg
push
mov
nop
incl
lret
mov
xorb
inc
pushf
sub
mov
cmp
xchg
ret
nop
aam
xor
sub
jmp
inc
sbb
jmp
mov
cld
mov
subb
insb
imul
lods
aas
adc
out
stc
lock
lods
pop
sbb
aam
adc
xor
mov
xor
bound
pop
std
or
inc
dec
aad
mov
addr16
inc
pop
pop
pop
idivl
sub
ret
push
and
in
mov
mov
mov
pop
mov
add
mov
cmp
movsb
jno
or
shr
decb
sub
in
cmpsb
mov
cs
pop
call
mov
mov
insb
popf
stos
in
push
lods
out
jmp
jne
int
mov
jno
cwtl
sbb
jnp
pop
ret
fcomp
jmp
cld
lcall
jecxz
sbb
jle
cltd
adc
adc
aaa
dec
push
imull
xchg
cmc
daa
mov
scas
shll
pop
test
xchg
rolb
mov
pushf
ja
fldl
clc
sbb
add
dec
dec
jnp
xchg
clc
jae
xlat
pop
dec
add
lock
mov
leave
lods
nop
add
pop
cmpsl
js
sbb
inc
jne
aas
sub
loope
cld
lcall
mov
ret
scas
mov
fidivl
popf
xchg
clc
xchg
sbb
dec
xchg
inc
lcall
jle
jecxz
jb
bound
jecxz
mov
xchg
dec
incl
inc
cmp
mov
push
sbb
jns
out
add
push
mov
testb
cmp
scas
xchg
xchg
hlt
xor
jne
push
movsb
mov
sub
mov
negb
mov
stos
and
idivl
dec
shlb
add
push
xor
sub
xor
popf
fbld
inc
pop
movsb
ss
lcall
out
cmp
jle
adc
add
out
mov
sub
movsl
xor
dec
pusha
mov
sub
loope
pop
sti
shlb
push
ljmp
mov
push
cmc
insb
sub
jno
mov
sahf
cli
call
addr16
jle
inc
rol
or
mov
mov
mov
dec
mov
and
ja
mov
inc
sbb
lods
mov
loopne
call
mov
mov
punpckhwd
add
ret
inc
xchg
and
ficomps
jmp
add
and
jns
loop
lret
call
xchg
hlt
fildll
mov
push
mul
rcll
pop
cs
pop
push
repnz
daa
clc
xchg
mov
or
and
sbb
imul
jns
fisubl
pushf
mov
rorb
jnp
or
or
jmp
xlat
add
lcall
movsl
xor
dec
and
gs
mul
inc
cmpsl
mov
and
shrl
idivl
push
dec
adc
mov
jecxz
add
pop
loopne
or
sbb
cmp
bound
sbb
in
pop
dec
xchg
sub
aam
inc
sub
ss
in
out
xchg
imul
pushf
movl
fildl
fs
dec
cmp
mov
sub
xor
in
loopne
movsb
lods
repz
pop
pop
mov
dec
outsl
inc
pushf
je
das
popf
inc
push
pushf
pcmpeqw
sbb
cmp
pop
jle
or
sbb
cmp
adc
cmp
imul
inc
cmp
add
xchg
xchg
and
sbb
pop
sti
adc
dec
jmp
xchg
xlat
inc
sbb
cmpsb
push
inc
pusha
testb
mov
cmp
in
inc
into
adc
je
fisttpll
ss
shll
and
scas
enter
test
imul
push
icebp
xor
arpl
test
pop
inc
ds
stc
imul
int3
and
mov
push
cmpsl
mov
adc
scas
push
stc
lods
in
xor
imul
xor
notb
inc
xchg
jecxz
loopne
jo
insb
fnsave
in
sub
push
mov
mov
pop
fidivrl
fsts
subb
mov
sub
pop
outsb
lahf
sti
das
xchg
mov
leave
inc
test
in
sub
ret
cltd
mov
xor
and
popf
loopne
mov
cmp
int
mov
lods
xlat
out
and
push
sub
iret
loop
sbb
pop
adc
pop
push
addr16
mov
out
xor
test
jge
mull
pop
mov
sub
pop
rcll
arpl
dec
ja
insb
mov
std
lahf
incl
scas
out
sub
arpl
jecxz
mov
faddp
loope
dec
mov
add
out
sbb
xchg
add
inc
xchg
mov
jns
pop
addr16
mov
test
cmpl
rolb
jno
mov
das
jmp
sbb
fiadds
das
push
pop
xchg
push
dec
jge,pt
arpl
aaa
dec
xchg
shrb
rorb
mov
out
outsb
out
bound
pop
jnp
pop
xchg
leave
inc
jbe
or
xchg
lock
outsl
lock
pusha
push
inc
mov
les
cmp
inc
add
mov
xchg
pop
cmp
mov
mov
in
and
sbbb
or
clc
jns
sbb
jb
repnz
dec
into
cld
push
insb
and
adc
sbb
mov
scas
hlt
cmpsl
cltd
outsl
add
add
sbb
pop
dec
rclb
pushf
cmc
mov
cltd
int
xorb
gs
sbb
adc
sub
test
test
adc
push
push
idivb
movsl
sbb
aas
xchg
rep
iret
fcmovnbe
insb
xor
ficompl
mov
sub
inc
insl
xor
push
addr16
push
or
mov
ss
jge
mov
push
sti
pop
sub
arpl
mov
inc
jle
cmp
fstpt
repz
push
jns
and
pushl
sub
mov
aaa
xchg
ss
inc
add
repz
shrl
insl
ja
pop
stc
rclb
sub
cld
cmc
xchg
mov
repz
ljmp
ror
push
jle
in
xchg
mov
dec
popa
cmc
jne
fisttpl
push
mov
and
inc
jns
push
cwtl
xor
rep
mov
inc
in
sbb
push
out
aam
cld
jnp
cld
adc
stos
add
jno
xor
and
popa
rclb
es
dec
icebp
jge
cmp
and
inc
fcomp
addb
mov
repz
pop
push
test
out
add
gs
or
xchg
imul
jbe
sub
mov
add
repz
pop
xor
xchg
lahf
test
mov
push
mov
cmpsb
dec
xor
loopne
mov
in
or
add
flds
mov
ret
cmpsb
lds
or
ror
dec
add
dec
or
pop
je
adc
and
sbb
push
icebp
xor
lea
in
cwtl
fdivrs
stos
sub
dec
pushf
jo
push
loopne
or
int3
outsl
mov
mov
mov
push
cmp
std
cltd
pop
jmp
gs
mov
and
dec
xor
inc
aas
scas
inc
or
outsb
push
push
test
push
outsl
lahf
ss
ja
xchg
fnstcw
arpl
xchg
adc
aas
mov
push
add
pushf
sub
test
pop
adc
dec
loope
pop
push
dec
lods
push
scas
fisttpll
sahf
dec
or
test
push
dec
mov
pop
mov
test
mov
push
sbb
mov
fcoml
fwait
dec
mov
jne
pushf
sahf
push
ror
add
loop
scas
xchg
pop
xchg
jae
and
aam
loop
lret
pop
xor
pop
push
cwtl
fldl
lcall
pop
jle
jb
or
inc
shll
daa
xor
add
rol
call
stos
shll
push
stc
mov
sbb
clc
cmp
daa
jb
xchg
jle
adc
sahf
into
rorb
mov
xchg
mov
push
cli
fldcw
or
mov
pop
push
enter
jno
andb
mov
jmp
fsubrl
call
and
inc
insb
in
and
inc
push
fbld
jge
lcall
cmc
lcall
adc
dec
pusha
popa
cmpsb
ljmp
subb
mov
clc
clc
bound
loop
adc
adc
outsl
jle
aam
rolb
adc
jge
ss
fbld
jp
loope
mov
jno
in
loopne
mov
daa
add
push
adc
nop
add
lcall
in
sbb
mov
or
fnstcw
in
cmp
mov
cmp
aad
jge
pop
or
xor
pop
pop
push
outsb
mov
push
pop
jg
and
rorb
cmc
pop
rorb
cmp
add
scas
push
xor
xor
movsb
imul
add
or
je
sbb
cmpsl
jle
and
inc
mov
mov
mov
add
icebp
inc
pop
fmuls
xor
mov
mov
cld
mov
leave
rorb
cmp
in
or
les
mov
cmp
aad
addr16
mov
ja
or
inc
jle
or
sub
cmp
and
xor
sub
xchg
daa
jecxz
adcb
add
cmc
outsl
xchg
mov
popf
push
xchg
pop
cmp
cmp
push
addb
dec
dec
jo
jnp
imul
ss
insb
add
xchg
mov
pop
add
test
sbb
fadds
call
mov
sub
ss
jecxz
mov
push
push
roll
data16
and
insl
addr16
or
cmp
push
and
dec
xor
icebp
push
xor
push
stos
imul
push
stos
dec
dec
ret
pop
mov
subb
xor
ja
rorb
jge
out
out
jp
test
aam
out
cmpsb
gs
xchg
fs
push
roll
pop
mov
jns
cmc
adc
loope
mov
cmpl
xor
cs
scas
xchg
stc
nop
andl
fldcw
xchg
and
inc
xchg
adc
mov
inc
jmp
cmp
int
idivb
push
subl
shll
and
roll
sub
sarb
in
push
inc
jae
arpl
dec
insb
inc
movsb
mov
cmc
test
jns
insb
or
std
out
lcall
aad
js
xor
pushf
and
call
and
adc
pop
jbe
inc
xchg
jge
mov
clc
cltd
inc
or
sbb
add
mov
sbb
jo
loope
iret
pop
into
add
pop
jbe
and
cli
jmp
es
push
out
enter
inc
leave
sbb
add
out
sbb
scas
fisubl
add
sub
xchg
mov
xorl
lcall
mov
ds
dec
clc
xor
repz
in
shl
pop
call
mov
sub
mov
repnz
dec
outsb
inc
or
inc
sarl
push
or
and
les
mov
inc
inc
jo
icebp
or
call
mov
push
pop
sti
enter
jns
mov
imul
mov
xchg
test
mov
cmp
adc
stos
sbbb
xor
sbb
sub
aam
out
into
mov
jl
adc
pop
and
lcall
inc
das
push
jecxz
les
mov
lret
sub
fwait
mov
mov
xor
push
rcrb
push
sub
mov
jno
add
jno
cli
pop
fidivl
pusha
mov
mov
popa
clc
mov
push
das
stos
push
subb
or
xchg
mov
jmp
nop
mov
jg
inc
aad
pop
shlb
xchg
fidivrs
ret
rep
pop
adc
xorl
call
je
jns
les
pop
dec
aam
pop
nop
je
movb
repz
lahf
lds
or
lds
popa
movsb
je
xor
inc
jns
leave
test
pushf
mov
fstps
sbb
lods
popa
and
inc
movsl
aas
fdivl
add
gs
cmp
jb
outsl
test
das
and
stc
mov
mov
jnp
pushl
sahf
or
scas
add
jge
xlat
cmpsb
test
inc
pop
inc
or
push
rolb
mov
jnp
insb
pop
or
movsl
js
aas
pop
popf
movsb
jb
dec
enter
in
pop
push
in
push
cmp
xor
loopne
mov
lods
xor
dec
cld
add
add
sti
shrb
mov
mov
push
xchg
jge
imul
sbb
jbe
test
or
lods
pop
inc
xlat
jp
sarb
adc
stos
mov
mov
jp
test
ret
js
cmovno
jae
insl
ss
aaa
mov
mov
test
popf
cltd
outsl
fs
daa
lds
adc
xchg
inc
push
shll
push
adc
fsubrs
add
loope
adc
push
fstl
loop
cmpps
roll
sub
and
mov
mov
xor
inc
rclb
flds
jb
lods
test
inc
mov
sub
idivb
pop
nop
and
out
cwtl
push
xor
xchg
add
add
cmpsl
es
xor
push
jbe
sub
cld
mov
ds
fldcw
push
push
or
inc
adc
push
and
pop
push
movsbl
inc
xor
fldcw
pop
adc
pushf
xlat
add
gs
dec
cs
sahf
sahf
test
cli
adc
adc
cwtl
push
xchg
cwtl
adc
push
jg
fiadds
std
inc
fiaddl
jecxz
xchg
cli
out
adc
mov
iret
or
icebp
mov
loopne
in
test
sahf
sbb
jle
mov
xlat
or
je
or
xor
mov
popw
jecxz
inc
mov
mov
push
push
pop
jno
daa
cli
lods
pop
xor
movsl
push
add
stc
or
lods
lret
and
and
or
cmc
mov
fildll
adc
fcompl
cmp
fs
mov
mov
lahf
sbb
imul
push
stos
or
imul
stos
lea
xor
dec
ret
cld
push
pop
adc
out
mov
xchg
int3
mov
pop
mov
rcrb
jns
ja
xor
clc
gs
inc
inc
xchg
cmp
sub
fsubs
lods
out
inc
mov
shrb
les
shrb
push
lds
popa
cld
lods
addb
stos
dec
rorb
mov
in
pop
and
hlt
xor
pop
adc
pop
ret
mov
test
push
popa
pop
mov
sbb
stos
sbb
int3
sub
mov
jg
jl
subb
orb
je
mov
call
cs
je
idivb
sub
mov
daa
xor
call
fistps
cld
sbb
bound
push
orl
cwtl
repz
dec
in
add
push
pop
fcomp
xchg
jp
mov
ds
adc
xor
sub
aam
pop
pusha
adc
cmp
inc
pop
jb
out
stos
jge
jge
cmpsl
out
mov
xor
lock
hlt
mov
add
or
mov
inc
mov
inc
push
aas
mov
cmp
xchg
repz
jg
mov
subl
push
push
pusha
cmp
sti
mov
adc
xchg
lcall
xlat
out
cmpb
push
orb
adc
inc
xchg
leave
jne
mov
stos
ljmp
jb
cld
xchg
push
stc
nop
sbb
xchg
scas
xchg
jl
push
xor
fsubs
fsubrl
lea
jbe
dec
jb
pop
inc
lret
scas
push
jbe
test
mov
enter
cmp
ret
mov
pop
cmpsb
ss
enter
sbb
pushf
sarl
mov
aam
jb
pop
cmp
fisubrs
in
mov
inc
rcrb
test
mov
bound
fwait
imull
and
gs
mov
mov
loope
jge
lret
jno
pop
xchg
inc
inc
hlt
fnstenv
xor
jle
mov
fadds
push
sarb
jl
pop
jl
out
lds
into
stos
xchg
out
lds
mov
cmp
cmc
test
ret
vmovss
sub
dec
push
cmp
mov
je
pop
add
add
pop
add
jns
sbb
orb
iret
or
std
mov
inc
cmp
pushf
cs
sub
aam
pop
mov
xor
cmpl
stos
in
dec
jo
dec
test
test
scas
jo
xchg
cmp
lods
outsl
push
adc
dec
mov
sbb
xchg
mov
stos
inc
pusha
sahf
adcb
frstor
scas
shlb
movsb
xchg
xchg
insl
xchg
cmpsb
lea
push
shr
fs
aas
or
ficompl
cwtl
xor
add
data16
fs
mov
jg,pt
adc
mov
mov
inc
loopne
sub
ds
mov
shll
hlt
iret
rcrl
in
movsl
mov
add
xchg
cmc
cmpsb
xor
jp
lret
add
push
push
clc
subl
jae
setl
cmpsl
ret
iret
addl
iret
fnstenv
test
fnsave
call
sub
pop
mov
pusha
fcmovbe
mov
imulb
and
mov
sbb
sahf
test
ljmp
sti
cli
push
xchg
mov
dec
mov
fsub
and
pop
mov
imul
adc
sub
sarl
popf
aam
hlt
add
and
dec
push
push
sub
mov
or
fs
and
fsubl
insb
rcr
test
addl
jbe
and
pop
pop
iret
cmp
ja
bound
fnstenv
push
rclb
int3
mov
cli
adc
imul
shrb
out
push
rcrb
push
sahf
aam
sbb
push
add
pop
mov
fisttpll
popa
xorb
fisttpll
ret
mov
dec
cmpl
xor
aaa
fimuls
push
sbb
mov
rcll
xlat
sbb
clc
lea
out
xor
in
mov
xor
jns
adc
and
imul
mov
dec
cmp
jle
gs
lea
jge
pop
cmp
stos
cmp
dec
jmp
push
lods
movsl
jnp
lret
add
jne
mov
mov
dec
cli
jle
sti
nop
dec
and
test
ss
or
sarb
pop
dec
jnp
cmp
imul
xorl
sbb
inc
jb
frstor
cmp
fisttpl
data16
shlb
out
out
in
popa
adc
mov
dec
inc
mov
jg
mov
dec
inc
mov
arpl
dec
sub
jo
pop
mov
inc
push
adc
fmull
push
push
jg
icebp
xchg
cltd
repnz
insb
movsb
pop
data16
insb
xchg
loop
stos
clc
subb
rclb
out
sbb
cmp
fistpl
clc
popf
mov
jl
cwtl
ss
mulb
scas
lcall
ret
pop
sub
inc
dec
out
jmp
inc
sub
inc
push
cmpsl
cmp
mov
and
cmp
test
sub
jmp
mov
in
outsb
pop
push
repnz
add
push
scas
fmulp
cmp
pop
lret
jns
pusha
pop
dec
adc
scas
or
cmpsl
jo
and
mov
mov
push
mov
cwtl
xorb
sbb
jge
ss
mov
adc
shlb
imul
add
rolb
hlt
sbb
rorl
jae
das
int3
push
push
adc
xor
xlat
in
rcrb
jecxz
mov
mov
fcoms
cmp
clc
in
cmpsl
out
icebp
fistl
pop
xchg
clc
jae
sbb
stc
loope
cltd
sub
out
nop
arpl
fcmovu
push
ficoml
negl
subl
inc
sbb
jecxz
cmp
push
fcmovu
add
xor
push
dec
jne
cmp
pop
sbb
and
fldl
in
outsb
enter
pop
dec
sub
mov
out
aam
xorb
nop
add
shr
cmc
xchg
push
ret
fbld
push
xchg
outsl
fabs
gs
pop
les
mov
jne
sbb
or
push
popa
and
cld
and
xor
in
jl
nop
gs
xor
push
fdivrs
testl
push
enter
mov
insl
loopne
ret
push
jge
shr
xlat
add
cmp
and
or
inc
aaa
popa
and
jmp
ftst
icebp
xor
xchg
aaa
pop
pop
cmpb
pop
jno
push
test
dec
mov
pop
call
lds
jp
mov
inc
sahf
cltd
stc
xchg
sbbb
cltd
int3
mov
jnp
jns
fcmovb
in
push
shrl
xor
mov
push
adc
xor
sbb
test
adc
loop
mov
mov
rclb
or
jp
cmc
xor
inc
ret
mov
hlt
sti
enter
test
push
pop
mov
and
mov
mov
iret
pop
mov
pop
adc
into
lret
outsb
sar
jno
popa
lock
aam
jo
repnz
jle
mov
adc
dec
jge
mov
cli
sbb
xchg
pop
les
hlt
adcl
xor
mov
xchg
xchg
mov
daa
sub
xor
aad
jb
xor
sbb
inc
push
add
lret
ds
and
imul
mov
out
jp
fstps
inc
or
xor
dec
es
xchg
and
xchg
hlt
pop
cmp
mov
push
mov
or
mov
je
cmpsl
movsb
pop
loopne
es
sarl
sbb
sub
nop
fcmovnb
pop
sub
loope
or
sub
xor
pand
inc
movsl
xlat
enter
jecxz
popf
pusha
jle
fcompl
sti
mov
in
mov
int3
and
test
ds
jg
push
inc
scas
rcrl
add
jl
jae
jns
mov
test
fwait
lret
aad
push
pop
in
fidivrs
and
inc
mov
mov
sbbl
cli
jl
mov
iret
inc
sbb
jg
mov
cmp
inc
add
bound
pop
adc
push
adc
jo
in
fsubr
push
pop
and
xchg
pop
loope
popa
dec
cmc
pusha
dec
xor
out
call
add
scas
cmp
cmp
jp
iret
xor
pop
mov
jmp
mov
sbb
repz
adc
cmpsb
sbb
cmpsb
dec
adc
imul
fbstp
decb
xor
lea
imul
in
icebp
or
mov
js
insl
cmc
and
aad
bnd
push
mov
hlt
or
add
and
jnp
or
jmp
xchg
data16
js
mov
dec
jne
lret
popa
or
or
xor
mov
sub
leave
lods
inc
loopne
pusha
sbb
lea
inc
pop
shr
or
mov
jnp
repz
xor
push
adc
jae
into
hlt
cmp
movsl
fistl
enter
test
cltd
push
test
je
lcall
push
push
in
xor
lods
mov
or
push
mov
popf
pop
in
shll
lock
pop
pop
data16
in
cmp
inc
ret
mov
xchg
jnp
shl
int3
fs
in
cmc
into
push
testb
mov
subl
data16
cmp
das
dec
mov
jno
pop
pop
jmp
jmp
shlb
inc
aad
sub
stos
mov
push
ds
mov
add
cmc
les
hlt
mov
repnz
lods
lret
pop
and
adc
fistps
or
cmpsb
adc
lret
sbb
xchg
jge
je
mov
mov
cmp
stc
lods
xor
xchg
and
and
adc
in
in
and
sub
scas
xchg
jl
stc
cmp
sbb
stc
test
fistl
test
and
js
xor
mov
mov
push
addl
push
pop
cs
test
xchg
jns
jae
cmp
mov
cmp
rcrb
xor
es
pop
or
mov
cmp
rol
fiaddl
jmp
xchg
mov
fidivl
sbb
xchg
cmp
ljmp
clc
jns
mov
xchg
xlat
jle
sbb
jle
fbld
and
cmpsl
out
repz
sbb
mov
popa
push
movsl
insb
fiadds
add
jb
lock
inc
jno
rolb
inc
out
std
xchg
jp
daa
lods
ret
cmp
lahf
data16
add
lock
inc
js
les
shr
mov
sub
ja
push
out
xor
jge
fs
outsl
mov
popa
adc
rcll
pop
jno
test
andb
adc
aam
jbe
out
pmuludq
add
cmc
push
jmp
jo
ja
mov
push
and
pusha
daa
in
out
xchg
jl
jp,pt
ljmp
pop
stos
outsb
and
je
in
jbe
and
popf
inc
bound
sbb
or
pop
nop
int3
cld
repnz
in
and
mov
mov
int3
mov
fsubl
mov
push
pop
pop
push
adc
sbb
js
ds
jns
ror
adc
cmp
movsb
iret
lret
icebp
lahf
shlb
loope
mov
jecxz
xchg
pop
xor
fwait
leave
xchg
or
xor
mov
xchg
loopne
ja
loopne
popf
pmaddwd
inc
popa
xor
xor
loopne
pop
popa
jns
jp
push
push
das
fwait
enter
and
or
clc
xchg
xor
icebp
xchg
ret
mov
and
or
add
test
stos
sub
jbe
push
or
mov
lods
inc
adc
mov
adc
lods
out
dec
aad
and
lods
cmp
fistps
jle
lds
or
sbb
mov
mov
dec
cmpl
and
mov
dec
xor
repnz
push
mov
pop
call
into
dec
add
add
shrl
mov
insl
inc
in
push
xor
out
fnsave
ret
out
or
andb
out
xchg
mov
lcall
xchg
decl
cmpsb
pushf
pop
adc
cmpsb
push
pop
aad
adc
sahf
int3
sbb
mov
cld
lret
sarl
ret
pusha
divl
loopne
clc
jecxz
fmull
in
nop
inc
lcall
mov
test
adc
dec
sub
pop
mov
cmpsb
loop
out
xchg
inc
mov
sbb
jp
jl
xchg
push
jg
and
clc
push
je
fld
pop
pusha
inc
enter
lcall
clc
mov
pusha
sub
cld
push
and
fcoml
imul
cmc
or
pop
nop
and
adc
mov
xor
arpl
and
lods
inc
mov
mov
pshufw
add
xchg
stos
into
jb
js
push
test
cwtl
lods
inc
inc
and
xchg
add
dec
fsts
jnp
lods
mov
je
enter
out
popa
xchg
mov
adc
nop
cmp
arpl
xchg
xchg
inc
das
iret
mov
aaa
sub
and
cmp
xor
and
xchg
int3
and
hlt
addr16
lcall
jle
or
and
push
xchg
aas
mov
jp
lea
mov
xlat
ja
mov
push
iret
stos
movsb
mov
cld
popa
in
mov
ja
scas
loopne
mov
push
push
pop
and
rclb
in
mov
inc
mov
arpl
ljmp
rorb
or
pop
jne,pn
pop
push
inc
jmp
mov
mov
adc
test
mov
pop
xchg
add
mov
xchg
rcl
push
ja
repz
mov
sbb
into
pop
adc
rorl
fbstp
or
and
sbb
sbb
arpl
sbb
ret
lret
and
imull
rcrb
lcall
inc
inc
mov
lods
cli
add
popa
pop
inc
jbe
or
adcb
jbe
clc
dec
inc
shrl
mov
loop
push
call
outsb
lcall
and
pop
bound
outsb
inc
push
mov
into
adc
mov
jb
insb
js
repz
ja
cltd
movsb
xchg
nop
xchg
aas
jno
pushf
adc
cwtl
pop
nop
xchg
inc
or
cmp
ljmp
lea
inc
push
xchg
out
jg
fs
cltd
sbb
addr16
imul
aad
fildll
stc
dec
inc
pop
jb
sub
add
mov
ror
jl
pop
cmpsb
sbb
mov
bound
mov
or
dec
repnz
cltd
popa
mov
lock
adc
rcr
mov
mov
cmp
rcll
jl
mov
popa
mov
and
jp
jmp
in
int3
push
mov
inc
rorb
sub
jo
lcall
stos
mov
cmp
or
mov
cltd
lahf
sub
mov
or
loopne
xchg
orl
imul
mov
in
mov
xor
test
add
or
mov
int
mov
xchg
mov
pop
arpl
es
sbb
addr16
out
in
sub
fisubs
dec
fisttpl
cld
mov
pop
inc
imul
lcall
mov
addr16
push
mov
mov
fistps
mov
jmp
mov
out
dec
mov
or
sub
adc
mov
jae
cmpl
lods
push
fsubs
xor
js
push
iret
jbe
je
add
cmp
jns
cmp
and
pop
add
leave
ret
imul
ds
or
cs
xchg
and
lock
lcall
clc
or
ret
imul
xorl
outsl
inc
shr
lcall
cmc
jecxz
fcompl
sub
in
push
push
aaa
jl
jns
pop
cmpsb
ret
adc
outsb
adc
lock
inc
jmp
testb
lcall
add
aam
aam
push
addb
jns
pop
adc
and
add
or
data16
addr16
inc
in
add
inc
xchg
imul
or
jmp
mov
shl
and
hlt
fwait
add
sub
cmp
ficomps
push
pop
pop
or
cltd
cli
inc
fwait
lcall
popa
andl
out
jae
push
sti
fnstcw
or
or
or
mov
cmp
and
popa
jge
adc
lds
and
popa
inc
cmpsl
imul
loopne
lret
shr
sbb
xchg
movsb
sbb
clc
rorb
push
cwtl
jnp
rclb
mov
jb
add
pop
sbb
cmpsb
popa
and
addb
test
or
jo
dec
ficomps
pop
mov
arpl
mov
sub
push
and
dec
mov
rclb
std
les
jmp
push
dec
cmp
out
ficompl
push
xchg
das
out
adc
sbb
inc
dec
pop
ds
mov
and
movsl
cs
dec
in
xor
leave
aam
pop
es
adc
fistpl
cwtl
pop
sub
jle
call
mov
add
test
repz
jnp
sbb
xchg
iret
fsts
fwait
xchg
push
lcall
sub
movsb
jnp
jmp
addl
or
jmp
rcll
ret
clc
je
cmpsl
adcb
dec
mov
pop
stc
sbb
and
inc
jb
mov
mov
mov
push
cmp
into
popf
pop
jnp
bound
mov
add
stos
jne
ljmp
sbb
std
mov
add
jne
ljmp
and
andl
test
cmpsb
inc
fwait
mov
push
enter
fisubl
jo
jns
loopne
fdivs
rolb
movsb
push
addr16
sub
je
sub
add
xchg
int
lea
pushf
ja
jecxz
insb
sbb
pop
negl
mov
call
xchg
stc
jl
cmpsl
inc
emms
leave
out
adc
xchg
mov
dec
sub
add
cmpsl
jbe
dec
pop
aaa
pop
je
sbb
mov
arpl
mov
inc
cmp
sub
pop
gs
adc
lock
out
cmpsb
jge
mov
fidivl
mov
mov
jmp
nop
lock
fistpl
dec
adc
push
push
into
pusha
rcrl
loop
icebp
adc
dec
movsl
enter
ret
lahf
fistps
imul
push
faddl
pushf
data16
int3
jno
leave
popa
and
xchg
jnp
hlt
xchg
and
das
add
mov
fimull
or
push
dec
sub
shl
pushf
sti
push
out
cmp
xchg
in
sbb
dec
push
rclb
in
dec
mov
dec
mov
iret
mov
cld
adc
ret
dec
xlat
daa
mov
xchg
cmp
and
aad
bound
in
xor
pop
xor
adc
mov
xor
xor
jnp
int3
loope
xchg
jbe
movsl
ss
mov
inc
inc
outsl
ljmp
fildl
loop
mov
int
push
sub
movzbl
rcl
adc
mov
repnz
add
mov
mov
mov
xor
sub
adc
mov
arpl
push
mov
cmpl
aas
push
ret
mov
decb
movsb
jo
bound
add
inc
jmp
int3
daa
ja
inc
pop
push
test
adc
stos
add
je
lahf
dec
push
mov
xor
shlb
xchg
push
or
jmp
cli
es
and
xchg
shl
mov
pop
add
sub
inc
xor
xlat
lret
lds
or
into
sub
addb
xor
pop
lcall
cmp
popw
mov
xchg
add
mov
movsl
shll
jl
pop
xchg
testl
das
clc
mov
inc
roll
outsl
ret
pop
inc
xchg
pop
and
push
add
dec
cmp
mov
xchg
cmp
cmp
in
hlt
jae
sbb
out
lcall
js
xchg
pusha
iret
fidivrs
stos
enter
cmp
imull
js
cmp
cmp
adc
push
fidivrl
gs
xor
xchg
pop
test
push
rcrl
pusha
pop
out
fwait
pusha
in
lcall
cmp
mov
mov
faddp
int
sbbl
jno
jp
and
pop
xor
push
or
icebp
fildl
and
pop
pushf
out
iret
mov
push
adc
xchg
insb
insl
fstpl
push
ret
iret
and
mov
mov
movsb
mov
mov
subb
xlat
je
cs
dec
lret
add
pop
cmp
loop
icebp
jbe
xchg
cmpsl
sub
inc
fadd
xchg
test
lea
sahf
loope
push
or
icebp
test
xchg
mov
add
ss
setle
lahf
and
cli
loope
hlt
pushf
lods
jmp
and
aad
mov
mov
movsb
jmp
ds
jae
jns
sbb
and
testb
out
int
pop
loope
cmp
fwait
outsl
ljmp
mov
pop
xor
sbb
mov
mov
lahf
and
dec
hlt
dec
sub
push
ret
lods
pop
sti
add
je
jl
fldt
or
inc
push
scas
shrl
sbb
adc
mov
mov
mov
loope
out
jnp
cmp
or
rorb
mov
add
jmp
push
and
push
mov
xor
cld
inc
pop
int
pushf
sbb
mov
insb
jo
ret
and
dec
xchg
in
sti
lea
aad
mov
and
inc
test
repz
push
adc
mov
mov
out
push
push
push
add
movsb
fwait
cmp
in
int
pusha
cmp
jmp
push
jae
xorl
adc
jmp
jmp
ja
inc
insb
fs
pushf
push
add
push
jle
out
jae
dec
not
mov
lcall
xchg
hlt
sbb
adc
mov
gs
jns
jecxz
pop
cmp
inc
xchg
popf
test
hlt
lods
fisubrs
mov
pop
mov
or
int3
mov
mov
mov
xchg
inc
mov
fwait
inc
fcomip
inc
popa
movsl
sahf
and
pop
sub
fisttps
out
in
sub
lret
ret
jp
or
mov
and
mov
push
sti
dec
add
loop
mov
sbb
pop
shl
popf
mov
jl
in
popa
dec
xchg
lahf
adc
test
dec
addr16
shl
jb
or
mov
sub
loopne
clc
fiaddl
xor
enter
pop
cmp
sbb
cmpsb
xchg
and
pushf
stos
fists
les
add
pop
mov
addb
adc
cltd
mov
or
mov
mov
sbb
imul
mov
dec
and
mov
sbb
lahf
xor
dec
out
push
cmpsb
add
or
addl
jl
scas
imul
push
gs
push
mull
ljmp
cs
bound
dec
stc
add
daa
scas
lock
cs
leave
cmpsl
pop
sub
xchg
adcb
xlat
rolb
imul
dec
sbb
lret
inc
push
jns
push
movsl
ds
pop
jns
std
mov
es
pop
cld
mov
int
adc
sub
lahf
pop
stos
mov
loopne
pop
push
pusha
cmp
andl
and
lret
sbb
loopne
xchg
mov
frstor
setb
and
fcmovne
sub
and
lahf
mov
mov
inc
mov
out
lock
lret
sub
test
aas
mov
int3
in
shlb
cmp
mov
pop
xlat
out
add
insb
shll
negl
lock
jb
add
xchg
mov
lods
out
subb
shr
mov
imul
and
roll
dec
ds
test
dec
lahf
mov
ret
or
add
push
fildll
test
fistps
lods
pop
int3
xor
jbe
or
fldt
ficoms
mov
fistps
inc
push
add
xor
insl
aaa
push
push
xchg
cli
push
xchg
mov
test
ror
mov
movsl
out
or
lahf
xorl
mov
xchg
xchg
les
xor
mov
inc
std
mov
sahf
std
lcall
sbb
mov
dec
rcrl
fwait
fwait
jnp
xor
movsl
and
or
fcoml
leave
mov
add
dec
sub
mov
int
lahf
sub
jle
aam
aaa
fidivrl
adc
dec
cs
cmp
push
icebp
inc
loopne
adc
mov
das
pop
nop
enter
mov
sahf
mov
push
cmp
sahf
adc
adc
and
sbb
pushl
sbb
shl
xor
pop
mov
popf
call
lahf
mov
adc
jno
push
jl
push
shrb
inc
mov
lcall
jno
xor
das
jb
js
ds
bound
test
fs
push
pop
mov
test
pop
dec
cwtl
inc
lret
scas
outsb
fstpt
mov
pop
out
testl
pop
nop
sbb
insb
and
dec
pop
and
out
inc
lea
fidivl
pop
addr16
dec
xor
mov
fs
cltd
clc
aam
std
dec
jb
insl
xchg
in
pop
cli
lods
and
jnp
daa
rclb
dec
mov
adc
les
sbb
les
call
sahf
xorl
mov
cmpsl
dec
adc
fiadds
dec
and
pop
xlat
jbe
jmp
pusha
mov
jnp
pushf
adcl
lods
sahf
inc
lret
mov
addr16
fidivs
dec
aad
iret
sbb
mov
dec
jg
mov
mov
adc
lods
push
repz
add
not
xor
cmpsb
jae
pushf
es
xor
mov
lcall
nop
push
cs
cmpsl
mov
sahf
cmpb
ljmp
lea
dec
xchg
stc
out
fists
insl
add
cli
js
loop
push
insl
xchg
fdivrl
mov
mov
dec
daa
sbb
dec
add
int
cld
loope
rcrl
pop
jmp
cmp
imul
pop
cmp
leave
lret
mov
mov
fwait
push
lret
outsb
xor
cmc
loopne
cmpl
mov
fwait
inc
icebp
rcrb
lock
scas
and
jbe
orb
fdivl
push
dec
sbb
ja
fnstcw
inc
cmp
lock
movsl
orl
out
mov
push
mov
enter
mov
lret
jmp
cmp
inc
adc
clc
cld
and
push
in
loope
addr16
out
arpl
cld
and
test
dec
lahf
cltd
popf
jo
mov
jecxz
js
mov
jmp
sub
shlb
mov
ret
shlb
fs
adc
cmpsb
sar
cltd
in
or
mov
iret
in
pop
add
std
xchg
cmp
fisubs
in
ja
mov
add
mov
push
sub
mov
lret
aam
sbb
adc
loop
cmpsl
dec
and
rolb
push
incl
popa
and
dec
out
mov
loope
rcll
fs
mov
sarb
sbb
mov
adc
icebp
xchg
sub
popa
inc
aas
mov
das
pop
mov
ss
and
xchg
mov
faddl
test
cmp
pop
cmp
sti
pop
enter
inc
dec
adc
push
sbb
out
out
lcall
and
mov
icebp
jle
mov
xor
es
ds
sub
iret
xor
test
lahf
loopne
xor
xchg
mull
shl
stos
pop
and
stc
and
idiv
xchg
dec
and
mov
sub
aas
mov
leave
or
addr16
cmp
das
fnstcw
jg
pop
aas
mov
in
mov
test
leave
icebp
lea
mov
ret
or
pop
jecxz
mov
xor
lods
jbe
mov
push
ud2
cmp
inc
xchg
sub
adc
subl
ja
mov
das
into
leave
divb
inc
mov
xchg
xor
into
inc
adc
cmpsl
sbb
sbb
xor
dec
pop
cltd
ret
and
dec
out
cmp
adc
repnz
jno
out
dec
call
push
jae
xchg
or
dec
stos
jns
iret
dec
or
cmp
lcall
enter
mov
xor
xchg
mov
movsb
dec
fildl
repnz
inc
pop
cld
stc
pop
imul
aaa
sub
and
dec
push
jecxz
lock
in
in
push
jmp
bt
inc
pop
aam
pop
jmp
mov
cmpl
and
outsb
lcall
and
addl
pop
lods
pop
sbb
pop
lea
arpl
push
fdivp
fstpl
pop
mov
fadds
sbb
sub
inc
dec
sub
push
mov
lret
or
ljmp
pop
dec
into
mov
pop
jle
popa
in
xchg
xchg
push
push
addr16
mov
push
out
cmp
stos
xor
leave
mov
xchg
inc
mov
inc
std
adc
jns
lret
js
daa
fs
sub
insb
fiadds
into
inc
add
ficoms
gs
mov
loope
cmpsb
mov
sbbl
insl
dec
adc
inc
add
cmp
inc
ds
mov
mov
jns
popf
jle
sbb
ds
xor
clc
sbb
sub
add
das
insl
mov
enter
or
or
sub
cmc
dec
mov
cmp
in
in
outsl
sub
mov
adc
jp
mov
and
mov
xor
sti
push
std
add
addb
sbb
adc
push
call
push
cli
dec
pop
push
push
fidivrl
lret
cmp
dec
push
pop
movsb
std
sbbl
xchg
push
cltd
cwtl
lock
outsl
cld
sbb
lret
in
aad
sbb
adc
cmp
or
adc
xor
nop
test
jmp
mov
adc
pop
dec
xor
outsb
dec
dec
pop
loop
scas
fs
data16
orb
aam
jo
push
lods
xor
in
jb
or
mov
popa
call
and
fsubs
mov
in
je
jbe
dec
inc
jne
pop
xlat
and
mov
sbb
icebp
in
mov
in
pop
mov
sti
mov
sub
fisubs
out
xchg
mov
push
pop
inc
push
lods
mov
pop
add
inc
push
inc
test
inc
clc
adc
push
fwait
xchg
cmpsl
or
sub
stc
imul
fmuls
cld
push
mov
popa
jge
pop
daa
xor
jmp
addr16
add
fistpll
pop
or
gs
dec
in
adcb
fldcw
mov
cmp
push
jg
adcb
jmp
mov
test
push
add
mov
xchg
movsb
pop
flds
or
imul
ljmp
imul
cmp
hlt
lret
fsubs
xor
and
je
jmp
andl
fcmovnbe
sub
sbb
or
sbb
cmpsl
xor
cld
or
dec
lds
inc
mov
arpl
aad
adc
stc
movzwl
ficompl
inc
sarb
sbb
add
icebp
cmc
movsb
orl
arpl
rcr
and
mov
dec
cmp
out
lock
pop
adc
jae
repz
mov
sub
lcall
jge
xchg
shr
inc
jg
jbe
pop
sbb
outsb
incl
pop
addl
mov
pop
jl
std
push
shl
ficoml
pop
inc
add
clc
imul
cmpb
push
pop
mov
fadds
pushf
mov
clc
cmp
cmpsb
mov
sub
icebp
lahf
sub
in
push
rcr
js
out
adc
and
jns
ffreep
sbb
or
sahf
add
push
xchg
push
aam
nop
mov
fwait
loope
call
fs
lods
xor
push
cld
fs
push
mov
dec
and
sub
in
inc
dec
insl
sub
pop
pop
rcll
xchg
and
cmpsb
lds
aaa
rolb
cmp
aam
mov
sbb
jbe
orl
mov
sub
pop
aam
xchg
cmpsl
sub
jbe
xorb
mov
sbb
fstps
push
xor
inc
dec
mov
adc
inc
dec
xchg
push
xor
pop
iret
sub
pop
cmpsb
cli
sbb
pop
cs
xchg
insl
into
mov
push
cmp
lret
adc
xchg
cmc
add
movsl
jae
or
mov
push
push
pop
insl
inc
fbld
mov
dec
jbe
mov
stos
jno
push
or
addr16
test
lret
and
out
iret
inc
add
sbb
sub
outsb
xchg
js
mov
push
jbe
sti
adc
jle
cmp
xor
and
pop
ficompl
stos
xor
mov
das
test
mov
pushf
cmpsb
and
popa
inc
cld
stos
mov
mov
adc
jge
testl
leave
rcrl
lret
pop
xor
cmp
ret
mov
dec
add
jb
adc
mov
xchg
ljmp
mov
mov
decl
pop
adc
adc
push
cli
cmc
add
and
jl
or
mov
aaa
mov
inc
mov
insl
add
aad
add
lret
negb
mov
cmc
sbb
cmpsb
cmp
mov
mov
mov
bound
in
lock
lea
cmpsl
jge
lret
and
mov
iret
jle
push
testb
popa
popa
jns
sub
int3
shrl
scas
dec
lea
cmp
imul
sarb
enter
push
pop
jl
fdivl
mov
or
sbb
mov
test
xchg
mov
outsl
mov
lret
nop
xchg
adc
jl
dec
xorb
mov
nop
adc
cmc
mov
in
add
aas
ror
fwait
add
popf
repz
adc
push
cwtl
push
mov
lock
xchg
and
jg
mov
cmp
pand
inc
arpl
cmp
dec
test
loopne
mov
lods
imul
mov
inc
je
inc
addl
xlat
xchg
cltd
cmp
test
push
pop
repz
shll
jae
ficomps
out
xchg
andl
and
fs
bound
lahf
and
dec
dec
mov
scas
nop
sub
mov
je
jge
stos
jmp
outsb
inc
call
imul
icebp
sahf
call
push
adc
cmp
in
jno
ss
inc
int
jb
adc
insb
xchg
loopne
aas
or
xor
pop
mov
fwait
jmp
aad
push
xchg
in
pushf
or
imul
movsl
lods
cmc
rorl
ret
xchg
and
inc
ret
jns
dec
loop
lahf
jo
mov
mov
cwtl
xlat
imul
in
xchg
mov
mov
gs
mov
outsb
dec
ds
dec
ljmp
push
fisttpll
push
roll
push
ja
loope
inc
cvtdq2ps
inc
shl
sbb
repz
cmp
sahf
or
lret
sbb
dec
icebp
dec
jnp
repnz
jecxz
bound
shlb
dec
std
mov
loop
leave
arpl
cmp
pop
or
in
andb
add
cmp
lret
popa
cmp
or
xchg
and
stos
out
or
jb
pop
ss
jp
lcall
dec
loope
lock
xchg
add
mov
cmp
fstpl
sbb
cltd
jp
lock
and
pop
fnstcw
dec
cmp
fisubrl
mov
sbb
sbb
bound
add
leave
mov
add
push
mov
shlb
hlt
lcall
in
pop
and
xchg
loop
rolb
sub
add
lea
pop
addr16
inc
mov
cmp
insb
lea
dec
cwtl
pop
sti
fisubl
xchg
scas
inc
imul
push
jge
sahf
idivl
pop
inc
sbb
xor
fucomi
pushf
adc
stos
fldl
leave
shl
adcb
add
daa
cmpsb
inc
adc
fdivs
add
adc
pop
divb
das
cli
scas
and
lds
lea
iret
and
jns
dec
stos
insl
loope
xor
adc
testl
dec
sti
addr16
loopne
or
xor
lods
cmpsl
cs
arpl
sbb
xchg
and
lret
adc
cmp
in
aam
jp
cmp
icebp
jno
test
hlt
xor
sbb
push
lcall
pop
pushf
dec
repz
jns
push
lea
fiaddl
sub
jbe
fs
dec
lods
cmc
or
mov
xchg
jo
test
mov
sbb
push
push
jne
fmull
popf
lahf
mov
and
pop
cltd
cmp
aaa
in
xchg
scas
push
mov
push
mov
in
dec
in
or
push
testl
jb
jmp
xchg
mov
fyl2xp1
jmp
push
neg
cmp
cmc
stos
add
jbe
loopne
push
nop
lret
pop
xor
xor
sbb
daa
in
pop
add
push
inc
pop
repnz
adc
mov
fsubrl
xor
sub
inc
or
les
loopne
cs
adc
jle
pushf
scas
bound
ret
fwait
push
adc
fnsave
sbb
and
and
mov
clc
dec
das
in
imul
lret
rcrb
in
out
or
lds
test
in
sbb
sub
stos
loopw
js
push
mov
inc
mov
sub
rcrl
lcall
adc
dec
pop
out
or
sbb
sahf
dec
iret
lcall
stos
int
xchg
sbbl
test
push
mov
xchg
adc
fisttpl
and
mov
hlt
push
or
out
and
sbb
or
sub
in
or
inc
inc
enter
cmpsb
nop
gs
mov
lcall
lock
sbb
daa
fiaddl
sub
imul
adc
repnz
rclb
pop
ffreep
adc
xchg
dec
push
dec
cmp
nop
movsb
jle
into
call
cmpsb
movsl
lahf
jmp
sbb
jnp
and
imul
sub
imul
push
testl
pop
xor
lds
or
or
inc
dec
dec
cs
insl
sbb
and
adc
push
sbbl
gs
movsl
and
cmpl
adc
and
and
das
cwtl
test
sahf
int
cltd
in
pop
sbb
push
movsl
je
xchg
xchg
sbb
fimull
sbb
dec
jno
fdivrl
jg
adc
pop
cmpsl
jg
push
jns
xchg
out
inc
push
stos
pushf
lret
and
mov
push
je
mov
mov
scas
mov
cmp
add
sub
insb
push
leave
hlt
loope
adc
jne
jnp
and
sahf
mov
xor
and
sahf
pushf
mov
iret
mov
add
pop
mov
sbb
inc
repz
xlat
cmc
jp
adc
loop
inc
test
shl
jno
xor
lods
mov
or
push
bound
adcl
jmp
scas
add
xchg
or
mov
adc
rorb
mov
imul
mov
rcll
cmp
cld
or
inc
sub
popf
mov
sbb
nop
mov
sbb
push
enter
lods
lea
bound
sbb
push
popf
mov
and
rclb
aas
iret
stc
jecxz
rcrl
push
and
out
push
mov
lahf
loopne
cmp
ja
arpl
loopne
aas
leave
inc
lock
push
stos
jno
jmp
shl
xlat
icebp
push
clc
adc
lds
loopne
xchg
std
dec
or
xlat
popa
in
fwait
mov
and
das
jp
xlat
mov
cmp
mov
push
insl
xchg
and
lcall
mov
ffreep
aam
jp
xchg
or
and
adc
mov
or
pop
movsb
add
aaa
loopne
loopne
lret
dec
fdivl
add
fdivrs
inc
pslld
dec
mov
lock
mov
pop
stc
subb
pop
xor
daa
inc
dec
add
dec
fnstsw
or
sbb
dec
shll
and
enter
sub
mov
out
fidivrl
add
mov
arpl
inc
scas
loop
sarb
decb
adc
lret
dec
fdivrs
shrb
hlt
into
iret
aam
xor
jecxz
mov
mov
cltd
je
loopne
rclb
mov
cmpb
das
adc
mov
inc
pop
mov
popa
inc
xor
sbb
sbb
ss
lods
in
push
jge
jbe
loopne
aad
sbb
fwait
xchg
xchg
pop
stos
mov
and
jle
inc
inc
in
jle
mov
movsl
das
dec
push
xchg
test
aaa
cltd
fdivl
icebp
sbb
popf
scas
int
in
jo
xor
scas
jae
and
sbb
xor
and
out
ljmp
and
in
shlb
sti
sbb
cmp
jnp
pop
test
popa
fnsave
repz
jecxz
rorl
sub
scas
cmp
dec
cmovbe
cmp
mov
push
mov
shrb
and
jo
pop
cmpsl
leave
sub
sub
scas
movsb
les
inc
js
xchg
jae
push
loopne
out
or
or
xor
adc
ret
outsl
das
out
push
inc
movsb
mov
hlt
jne
pop
adc
call
mov
mov
pop
ljmp
cmpb
inc
mov
or
xlat
ret
fadds
jmp
in
sub
bound
adc
test
movl
scas
or
cli
sbb
outsb
inc
pushf
sti
leave
sbb
lcall
mov
je
add
scas
mov
xor
mov
adc
mov
pushf
clc
pop
rclb
mov
mov
and
mov
pop
push
repz
icebp
push
clc
popa
nop
ss
bound
and
icebp
divl
sub
sar
sub
movsb
pop
rcll
jmp
adc
fnstenv
pop
dec
cltd
aam
mov
rol
cmpsb
rclb
movsl
repz
sbb
insl
ret
mov
sbb
mov
out
xchg
or
lcall
xor
push
loop
jmp
lods
insb
sbb
mov
mov
iret
adc
jl
lahf
jl
push
syscall
outsb
dec
cmc
sbb
mov
and
sar
xchg
jp
fmuls
lahf
inc
push
xchg
add
test
jne
xchg
pop
stos
inc
and
adcb
in
sub
mov
dec
ss
dec
push
cmp
int3
add
fistps
jns
xorb
sti
pop
cmc
xor
sahf
lahf
mov
icebp
mov
jbe
xchg
dec
mov
mov
test
lea
add
mov
push
test
sub
mov
add
xchg
add
sbb
xchg
ja
xlat
mov
mov
scas
mov
sar
sub
jne
jge
sbb
imul
lcall
jg
and
mov
and
push
test
sbb
testl
fdivrl
dec
xor
jle
mov
add
daa
out
popa
adc
add
jno
pop
out
inc
shll
jne
mov
push
mov
inc
mov
sub
std
cmp
cmp
push
inc
aaa
mov
push
jno
fsts
push
movsl
push
add
or
or
lret
xchg
shrl
sub
jae
jge
pop
pop
fsts
aaa
pushf
movsb
mov
js
loopne
and
in
add
insl
pop
push
cmpsb
and
sahf
push
daa
enter
imul
mov
mov
clc
mov
inc
int
scas
inc
xor
cmc
movsb
pop
fwait
pop
jg
pop
fsubs
inc
cmc
xor
ds
mov
mov
repz
inc
push
ss
xorb
fnstenv
cld
in
clc
inc
ss
push
inc
add
imul
data16
jg
sbb
jmp
inc
xchg
mov
adc
xor
and
add
les
pop
sub
repz
cmp
cli
insb
add
mov
jmp
cwtl
inc
or
ss
rorl
xchg
leave
lea
xor
xchg
jno
ret
adc
jno
add
call
sarl
test
fistl
je
ja
add
push
insl
xchg
aas
enter
pushl
mov
adc
mov
xor
mov
push
lock
or
clc
push
sub
fstp
insl
xor
fabs
ds
out
add
jge,pt
aam
sbb
test
mov
xchg
cld
jmp
or
pusha
sbb
je
adc
xorb
push
pop
aad
rcr
out
or
dec
jmp
jl
loop
xor
pop
stos
adcb
stos
push
test
mov
xchg
test
enter
stc
push
popl
out
int3
mov
icebp
nop
mov
or
ret
popf
jae
and
outsl
shrl
int3
lret
out
ret
xor
pop
mov
jo
sbb
and
fildll
adc
bound
aas
pushf
jb
sarl
lret
sti
jl
lock
xchg
xchg
cmc
fldt
inc
fdivs
scas
fadd
xchg
mov
xchg
add
push
add
jne
add
pop
idiv
ret
xchg
loop
mov
lea
fistps
outsb
xchg
pushf
mov
xchg
sbb
imul
es
pop
lcall
mov
nop
addr16
and
icebp
outsl
decb
lock
xor
add
test
cmp
mov
sti
fistpll
xchg
popf
pop
in
mov
dec
je
jle
or
lret
orb
pop
jp
xchg
add
pop
pop
out
in
stc
and
and
bound
enter
jne
int
push
push
adc
frstor
and
flds
nop
cmp
mov
xor
ret
int
pushf
imul
fmull
add
scas
icebp
push
sti
mov
dec
pop
pop
mov
leave
sub
add
aad
pop
inc
push
pop
mov
cli
sub
sbb
sub
repnz
popl
rorl
pop
inc
adc
or
inc
mov
jno
add
mov
mov
dec
sbb
cmc
mov
or
xchg
mov
lahf
xlat
mov
mov
or
aam
daa
ljmp
push
ret
jge
jno
cld
sti
lret
out
cmpsb
xor
scas
pushf
cmpsb
popf
mov
mov
aas
jg
cmc
xor
mov
pop
push
pop
inc
jge
inc
mov
lret
sbb
mov
cmp
push
cwtl
jp
lcall
xor
inc
fldl
inc
popa
rcr
stos
lret
mov
inc
popf
inc
inc
push
cs
pushf
xor
sub
fnstcw
adc
cmpb
hlt
and
sti
mov
pushl
inc
add
roll
push
imul
mov
cmp
xchg
mov
inc
int
inc
jmp
add
sbb
popa
mov
jl
inc
stc
fdivrs
sub
outsb
or
cwtl
jae
mov
and
sub
inc
push
add
insb
pop
imul
push
xchg
mov
or
sub
jmp
int3
sbb
sti
int
dec
dec
lea
jp
subb
mov
ja
test
imul
pop
adc
test
xor
subb
aad
sbb
mov
in
inc
mov
add
cmp
pop
inc
mov
and
imul
push
xchg
cmp
cmp
ffree
xor
insl
mov
sub
loopne
inc
jle
sbb
and
sub
mov
add
inc
leave
pop
cmp
les
dec
sub
xchg
cmp
jge
mov
push
lcall
mov
xorl
push
repz
jbe
mov
ret
popa
fdivs
push
fstpl
shll
and
jecxz
sbb
nop
das
xor
or
cmp
mov
jo
xor
inc
subl
xchg
jl
push
stc
inc
sub
in
nop
jle
dec
and
das
jl,pt
xor
out
jo
roll
pop
inc
scas
aaa
js
pushf
and
cwtl
fdivrl
in
cvtps2pd
fsubrs
lahf
cmc
push
insl
dec
stos
sub
add
sbbb
ja
cmpsb
fdivp
jno
ss
repz
stc
jg
xor
ret
rolb
cwtl
hlt
xor
aas
loopne
popa
cmp
mov
add
push
sub
xor
jne
or
inc
fimuls
push
and
push
push
divb
mov
cmpsb
pop
ret
mov
insb
adc
jl
push
add
xchg
mov
mov
psrlw
cmp
xor
and
int
add
mov
or
test
imulb
ror
inc
orb
inc
jge
cmp
add
dec
push
or
push
fidivrl
fxam
adc
rcll
and
dec
mov
add
mov
adc
mov
dec
pop
cs
sbb
ds
jo
es
lret
imul
mull
pop
out
cmp
je
imul
mov
mov
cmpsb
sub
lods
xor
xor
pop
ja
xchg
mov
xchg
mov
or
test
ret
add
ss
jae
int3
stos
push
shl
xchg
sub
scas
cmp
and
mov
divl
in
dec
fwait
pop
cld
out
xchg
filds
arpl
xor
mov
mov
sbb
sahf
test
cmpsl
rcr
popa
jl
repnz
pop
push
lock
ds
add
out
js
jns
and
push
pop
push
inc
fcoms
add
push
push
xor
orb
xchg
cmpsl
and
sub
adc
mov
shlb
test
xor
pxor
adc
jmp
test
cs
push
in
in
pusha
addr16
push
mov
xchg
jmp
cmp
lcall
mov
pop
aas
test
sub
and
movsl
mov
fstpl
hlt
dec
push
cld
dec
fs
call
insb
dec
mov
cwtl
bound
xlat
jns
das
inc
test
shll
out
sub
or
addb
cmpsl
pop
jbe
repz
push
mov
dec
out
sbb
enter
mov
dec
mov
adc
xchg
mov
and
mov
xchg
fnclex
loopne
dec
fdiv
dec
xchg
sub
arpl
fdivl
dec
out
aas
jle
mov
adc
mov
outsl
add
fiaddl
icebp
aad
add
imul
inc
pop
jo
mov
and
mov
adc
and
dec
jae
jnp
jp
sbb
movsl
adc
mov
popf
int
addr16
inc
test
addl
mov
int
mov
pop
cmp
les
shll
push
loop
mov
mov
cltd
out
mov
out
sub
stos
xchg
hlt
and
fimuls
out
pop
movsb
sub
loopne
inc
push
mov
pop
mov
lcall
sub
or
add
sbb
scas
push
sbb
xor
dec
or
popa
sbb
rorl
fstp
pop
dec
daa
loop
loope
repz
jo
stos
cmc
ljmp
push
outsl
out
fsubr
xor
loopne
lds
lods
and
iret
xor
stos
mov
cld
jae
xorl
in
es
xchg
and
in
repz
push
sub
sbb
xchg
xchg
rorb
loop
pop
aaa
pop
test
mov
in
cmp
add
sbb
jne
jbe
or
lods
je
dec
and
cmp
in
in
pop
mov
test
fcompl
push
mov
shrl
loope
pop
and
ret
enter
cmc
push
cmpsb
mov
sbb
insl
aam
mov
pushf
out
pusha
or
lret
imul
fldcw
popf
ljmp
push
movsb
cmp
movsl
dec
xchg
shrl
and
addb
dec
sarl
mov
mov
lea
sbb
xchg
pop
outsl
cmpsb
out
int3
cmpsl
xorb
push
adc
jno
outsb
loop
imull
xor
in
jp
clc
jmp
mov
in
adc
sbbb
and
push
and
nop
xor
pop
xor
push
popf
mov
aad
xchg
std
test
aaa
cs
mov
insl
cmp
xchg
mov
inc
popa
jne
idivb
popa
cmpsl
loope
jecxz
pop
xchg
xor
ret
sbb
pop
and
push
das
lods
push
xor
sub
inc
pop
std
lds
test
dec
sarb
imul
fwait
mov
add
aaa
jnp
adc
clc
mov
adc
sahf
mov
adc
push
lret
lret
push
cld
mov
leave
pop
cmpsb
xchg
repz
out
imul
aaa
or
lock
es
outsl
jmp
cmc
enter
inc
jecxz
stos
in
in
je
jnp
xchg
push
test
imull
mov
adc
cltd
fnstenv
cmp
and
fs
cli
mov
pop
jle
xor
jmp
pop
xchg
pop
cld
sbb
in
aad
push
out
subl
push
scas
aad
cmp
jbe
xchg
leave
arpl
mov
popa
push
jbe
pop
inc
ljmp
mov
into
sbb
addr16
mov
fistps
shrb
fcmovu
repnz
ficoms
jp
xchg
cmp
lcall
stos
cli
insl
push
pop
jecxz
arpl
or
cld
push
mov
or
xchg
aas
dec
xchg
aaa
cmp
loopne
lahf
fcompl
xor
jecxz
push
sub
xchg
sub
cmp
loope
mov
fidivs
int
xor
jmp
repnz
sbb
ret
stos
xchg
cld
inc
xchg
mov
loope
and
xor
xchg
in
mov
or
lods
adc
sbb
dec
inc
std
test
fstl
insb
loop
pop
mov
xchg
push
aam
mov
inc
ja
hlt
mov
shlb
andb
push
leave
out
mov
push
daa
and
lret
test
adc
incl
mov
lods
clc
mov
stos
cmp
xchg
subb
xchg
adc
pusha
mov
mov
aaa
push
xor
adc
fists
cs
iret
bound
jnp
push
mov
dec
jle
mov
or
sahf
movsl
rclb
mov
out
and
bswap
mov
inc
in
ds
fnsave
adc
cli
aaa
addr16
push
ss
or
ja
sub
mov
mov
popf
pop
fisttps
jno
in
movsl
sti
rcr
mov
xor
cmp
jnp
jns
xor
mov
sbb
sub
xorb
into
mov
pop
lock
or
test
icebp
mov
xchg
in
mov
xor
push
wrmsr
sbb
xor
sub
movsb
sti
push
lret
xor
or
xchg
fdivr
stos
adc
cltd
mov
jl
mov
sub
pop
pop
add
mov
lods
aam
mov
dec
xor
push
cld
shlb
repnz
xchg
pop
imul
ljmp
scas
loope
pop
cmpsb
sahf
sbb
mov
cmp
jg
inc
stos
add
push
out
lcall
syscall
clc
mov
sbb
mov
xor
ljmp
in
mov
jmp
loopne
add
fwait
sub
dec
sbb
push
pop
pop
pop
scas
adc
js
and
mov
lret
ss
je
popf
bound
fcoml
jl
test
packssdw
arpl
sub
inc
pop
xor
push
dec
fadds
mov
add
rcr
dec
xchg
cmp
push
sbbl
or
loopne
sub
mov
push
outsl
lret
jp
loopne
jg
inc
inc
inc
jp
cmpsl
lds
and
jle
cli
gs
pop
jne
popa
cmp
xchg
inc
push
aad
ret
cs
dec
lods
dec
int3
fldl
pop
sub
cmc
test
pop
xor
popf
or
stc
ds
gs
dec
xchg
lds
jmp
push
ja
loopne
xchg
sbb
movsb
lret
arpl
xchg
jge
test
roll
stos
test
loope
outsb
jp
mov
pop
inc
xchg
jo
lret
and
sti
inc
cmpsb
cmpsl
push
ficompl
inc
xchg
popf
mov
inc
mov
daa
mov
movsb
mov
mov
sbb
fists
les
repnz
mov
cmp
lahf
adc
push
test
mov
repz
adc
jle
jo
rcrl
lds
stc
pop
les
out
pusha
leave
mulb
dec
addb
mov
fisttps
push
popf
popa
xchg
mov
mov
add
ss
aas
cmpsb
das
or
jb
and
add
insl
inc
sarb
add
mov
lret
scas
sbb
pushf
inc
into
sub
insl
inc
incb
movsb
or
dec
and
icebp
repnz
nop
outsl
jbe
jnp
arpl
out
fstps
insl
lahf
xchg
sbb
inc
iret
iret
repz
xor
mov
sbb
loopne
jle
add
and
mov
pop
push
inc
cmc
test
outsl
cmp
push
shl
lret
lods
cs
repnz
mov
test
pop
shrb
clc
add
push
jge
hlt
xor
fidivrs
les
lods
lock
shufps
shr
or
dec
stos
mov
adc
add
and
xor
xor
shlb
mov
pop
je
int
jecxz
lock
in
mov
xchg
lods
insb
leave
mov
inc
sbbl
movups
jp
subb
andb
or
push
sbb
sbbl
cmpsl
push
xlat
push
aad
mov
fnstcw
inc
sbb
imulb
push
xor
fadds
jnp
lods
cltd
nop
push
pop
andb
inc
or
imul
xor
bnd
cmp
push
int3
xchg
jge
xor
ja
lret
and
fldenv
xor
push
adc
sbb
jbe
int
pop
dec
or
push
push
dec
jge
adc
jns
mov
pop
cmpsb
movsb
inc
inc
push
mov
cmpsb
testl
inc
push
jmp
jae
insl
test
ret
fldln2
or
dec
pop
xchg
add
xchg
jl
cli
push
out
xor
fisttpll
and
xor
sub
mov
adc
loopne
mov
jbe
rcr
ss
pushf
fisttps
sbb
rcrl
xchg
xor
fisttpl
outsb
mov
pop
mov
cltd
inc
inc
adc
mov
cld
incl
pop
push
hlt
jle
adc
cmpb
add
push
pushf
ret
dec
or
fcompl
imul
and
push
jb
lcall
mov
rcr
xorb
cmp
push
and
jecxz
mov
clc
mov
mov
ret
mov
mov
std
out
iret
gs
jecxz
pushf
adc
and
and
dec
mov
pop
xchg
popa
fistps
pushf
imul
lock
ja
pop
into
push
nop
rorl
gs
lea
jmp
je
rcrl
outsb
push
sub
mov
dec
xlat
xchg
rcrb
rol
lods
imul
pushf
mov
pop
hlt
pop
dec
push
loopne
cli
fdivs
aas
mov
or
dec
in
movsl
mov
sbb
addb
sbb
mulb
dec
pushf
mov
pushf
imul
sub
fbstp
loop
jp
sbb
stc
sbb
jb
ret
mov
mov
stos
mov
adc
cmpsb
scas
lret
jl
in
rclb
pop
faddl
push
out
jg
iret
scas
insl
daa
sub
dec
pop
rol
mov
ds
insb
xor
lds
mov
mov
loopne
push
push
adc
sbb
call
dec
sbb
dec
call
lcall
jp
popa
fpatan
sub
add
mov
add
push
sub
cmp
inc
mov
daa
jp
subb
sub
fldt
je
pop
pop
mov
incb
jl
jle
mov
push
ffree
sub
mov
mov
das
in
add
ljmp
jp
mov
xor
pop
aad
out
jae
repz
mov
and
movsb
mov
or
sub
pop
or
repnz
or
push
mov
out
mov
out
and
pushl
outsb
push
test
ja
dec
scas
ret
shll
inc
test
sqrtps
pop
xchg
pop
xor
cmp
test
dec
and
sbb
out
sbb
lcall
stos
xor
xchg
addr16
fidivs
and
mov
dec
and
xchg
xor
sub
ljmp
jp
xchg
and
push
lods
aas
pusha
jle
outsl
jp
insl
das
mov
and
nop
call
pop
mov
add
sub
frstpm(287
and
sbb
test
cmpl
arpl
mov
push
mov
sbb
in
fs
in
dec
mov
jmp
mov
orb
jge
inc
and
les
in
ror
inc
loop
scas
jne
inc
and
push
lea
outsb
enter
inc
xor
xchg
xor
lcall
inc
aam
lret
stos
dec
out
xchg
enter
jl
jge
mov
mov
pop
cld
popa
in
add
aam
movsl
bound
cmp
sub
arpl
icebp
scas
outsb
mov
inc
fs
fisubrl
sub
lods
rorb
in
fwait
push
cwtl
xchg
test
push
xchg
mov
and
xchg
inc
and
jno
push
xor
and
lcall
pop
loopne
mov
mulb
out
stc
sbb
add
insl
xchg
mov
add
lods
pushf
dec
cmp
adcb
mov
cmpsb
ljmp
lahf
ret
mov
pop
flds
popf
pop
inc
and
iret
push
pop
pop
mov
test
or
mov
cmpsb
icebp
fistps
mov
sub
nop
nop
push
push
les
cmp
cmpsb
popa
xchg
cmpsl
mov
rcr
rclb
xchg
cmp
mov
xchg
test
pop
dec
cli
adc
push
ret
sbb
out
loope
xor
orl
roll
push
subb
mov
mov
test
int
movsb
mov
and
ljmp
loope
lret
testb
cltd
xlat
add
and
jne
mov
scas
mov
jmp
mov
shlb
mov
mov
mov
scas
fsts
mov
aaa
adc
std
cmp
divps
pop
test
xchg
mov
jnp
xchg
clc
adc
fs
cmp
das
push
cmp
pusha
cmp
jne
mov
add
fisubrl
mov
pop
add
pop
aaa
scas
push
out
fwait
xchg
xchg
inc
cltd
arpl
ret
adc
adc
pushf
push
add
in
cmc
loop
dec
enter
mov
sub
popa
in
adc
sbb
rclb
stc
push
xor
sarb
out
xchg
cmp
sub
fsub
lods
cmc
ret
shll
add
cmp
mov
dec
mov
inc
lock
mov
inc
outsl
cwtl
sub
xor
lds
sar
or
sub
cmp
add
lock
arpl
mov
aad
mov
push
jmp
cmp
fisubrs
mov
xor
push
jo
inc
lret
clc
mov
xchg
cmp
sbb
or
dec
or
leave
cmpsb
in
adc
cltd
add
lock
pop
dec
sbbb
dec
stos
push
out
movsb
imul
dec
test
sbb
outsb
mov
sub
mov
iret
and
xchg
imul
and
mov
int3
popf
inc
mov
scas
adc
aaa
je
lods
or
push
fdivrs
inc
xchg
movsb
fdivrl
test
mov
jmp
inc
mov
out
push
nop
ljmp
and
aas
pop
loope
pop
mov
rcrl
arpl
push
aam
lcall
push
push
sbb
sbb
or
xchg
jecxz
cmp
adc
sub
jl
dec
mov
insb
scas
inc
shll
add
std
push
dec
addr16
sbb
inc
adc
inc
or
and
sub
pop
mov
push
xor
adc
pop
test
cmp
out
inc
jb
ja
sahf
stos
mov
mov
in
loop
jo
test
push
jl
icebp
cmp
imul
shrb
popf
jl
cmpsb
mov
mov
cmc
inc
xor
sub
mov
sbb
lret
ja
leave
xlat
and
jo
push
xchg
rcl
mov
xchg
je
push
addl
aam
xor
pushf
ljmp
jnp
inc
les
mov
xor
adc
scas
xchg
pop
in
and
sub
cwtl
data16
repnz
jne
outsb
imull
ror
push
inc
jle
fsubl
add
pop
xchg
push
aad
fwait
dec
dec
hlt
movsl
push
sub
repnz
imul
and
add
sbb
aaa
xor
xchg
pushf
lods
push
sbb
out
mov
xchg
and
bound
fdivp
inc
inc
xchg
cmp
nop
pop
loopne
mov
xor
adc
out
mov
int3
je
movsb
lahf
test
fs
or
clc
lock
inc
inc
mov
jbe
mov
fstpl
jp
in
sbb
cmp
jp
stos
and
int
mov
mov
jbe
dec
jl
imul
xor
xchg
xor
inc
jp
cltd
mov
fs
dec
adc
test
lcall
lahf
sbb
pop
add
aas
push
dec
sbb
mov
dec
sbb
test
std
pop
addr16
pop
mov
cs
xchg
lock
add
rcll
imul
into
movsb
xor
repnz
push
dec
rclb
jns
inc
jmp
lods
into
loop
mov
push
in
and
sbb
test
outsb
mov
xor
jo
les
aad
int
push
int
pusha
and
or
repnz
test
push
into
mov
push
into
decl
push
mov
fisttpll
xchg
outsb
cmp
add
dec
dec
pop
xor
pop
xlat
lcall
cmp
in
es
or
xor
popf
mov
push
daa
in
push
dec
jo
push
dec
hlt
cwtl
inc
jno
add
movsl
xadd
mov
pop
lods
fndisi(8087
jge
scas
and
ja
fsubs
jge
or
pushl
xor
cmpsl
lahf
and
enter
hlt
lock
cltd
fimuls
decb
scas
sub
retw
sbb
push
and
mov
adc
sahf
push
cmp
adc
jbe
push
add
nop
clc
cmp
cwtl
mov
sar
jmp
push
sub
inc
jmp
add
std
jbe
xchg
int
jno
mov
lahf
shll
cmpsl
sub
mov
push
jge
fidivl
into
xor
test
out
dec
jns
push
push
jo
stc
cltd
add
mov
fistpll
adc
cmp
push
dec
popw
imul
aad
in
adc
and
mov
pop
jg
mov
push
cli
test
inc
mov
sub
mov
flds
push
pusha
pop
popa
scas
mov
pushf
ljmp
xchg
sub
mov
xchg
rcll
mov
mov
xor
and
mov
sub
mov
test
insl
pop
sub
sbbb
sbbl
test
mov
jae,pt
cmpsb
push
aas
mov
jecxz
cld
and
xor
nop
sbb
pop
pop
mov
mov
fs
pop
movsb
clc
dec
jmp
inc
mov
and
xor
cmp
or
fwait
negl
lahf
call
xchg
mov
or
mov
inc
ss
icebp
xlat
add
repz
ljmp
test
test
pop
je
mov
pop
mov
add
xlat
ficoml
inc
jp
js
pop
pop
xor
dec
sub
aas
iret
cmp
int3
mov
test
cmp
dec
add
popf
mov
push
dec
dec
adc
dec
mov
fwait
gs
mov
or
mov
push
mov
pop
mov
sub
addr16
je
movsl
dec
jnp
lcall
inc
add
js
xor
addl
or
cmpsl
mov
cmpsb
sbb
jcxz
jg
in
inc
pop
or
push
xchg
aad
sbb
push
xchg
push
dec
repnz
cli
inc
lods
xor
imul
and
sub
jl
leave
cwtl
dec
push
shl
mov
inc
mov
mov
je
inc
shrb
aam
sbb
int
xchg
imul
pop
cld
test
movsb
adc
stos
sahf
jno
aaa
aaa
mov
jnp
lock
add
lods
mov
rcrb
aaa
pushf
mov
dec
cs
stos
pavgw
cmp
mov
sbb
mov
sub
insb
mov
enter
je
and
or
inc
call
sarl
adc
sub
in
icebp
rcrl
inc
in
xor
push
call
add
mov
dec
subb
fsubs
dec
fiaddl
shlb
mov
test
inc
mov
aam
int
mov
cmp
push
and
fidivrs
aad
xchg
and
mov
leave
sahf
lret
mov
aad
sbb
adc
imul
push
or
fildl
push
adc
xor
hlt
sub
mov
xchg
and
fmul
inc
imull
mov
divb
mov
sub
fucomi
pop
shrl
jnp
mov
adc
add
dec
xor
adc
add
cli
cmp
lret
jno
enter
sbb
push
pop
lcall
imul
mov
pop
insb
dec
pop
out
jno
movsl
cmp
scas
push
xor
pop
lock
mov
mov
lods
fldl
xor
mov
fs
and
add
mov
cwtl
movsl
mov
outsb
cmp
push
out
cmp
clc
fsubrs
test
and
lret
adc
aaa
pop
xlat
pop
ljmp
push
cld
sbb
xchg
rcr
push
ljmp
adc
mov
adc
cmpsl
jl
sar
mov
adc
subl
cld
push
nop
inc
in
pusha
or
jo
nop
add
lret
mov
inc
rcll
jo
sub
inc
orl
ja
ret
out
mov
fisubl
jnp
sub
pop
xor
pop
pop
addr16
dec
jl
jae
mov
hlt
pop
popf
fsubs
out
pop
enter
lret
mov
repz
scas
call
mov
push
sub
push
cld
adc
mov
add
jno
std
mov
jle
dec
ret
adc
fisubs
arpl
or
fdivrs
dec
test
sub
frstor
mov
andb
test
arpl
fmull
cmp
ficoml
call
imul
sub
imul
dec
pop
pushf
or
push
imul
xchg
shrl
mov
ss
scas
cld
mov
jmp
sbb
jae
je
mov
adc
lds
mov
test
or
imul
jnp
mov
jecxz
xor
mov
call
pop
cmp
shll
ljmp
aam
jmp
shll
stos
push
test
mov
lods
pop
xchg
dec
clc
lock
lods
addr16
mov
xchg
dec
movsb
push
jbe
jle
dec
insl
int
jecxz
sbb
push
fistps
std
or
stc
and
js
scas
loop
vfrczss
je
dec
dec
loop
push
jmp
shlb
ja
mull
fildll
pop
mov
push
jno
xor
sub
sub
cmp
mov
ds
leave
inc
loopne
mov
lock
fstl
loope
xchg
xor
push
jge
cmp
fcmovnbe
jp
imul
mov
pusha
loopne
xor
cmp
lahf
jae
call
mov
dec
ret
ja
outsb
cmpsl
pop
insl
dec
inc
je
xchg
add
rol
negb
popa
negl
push
add
loopne
sbb
fs
pushf
or
pop
mov
rcr
inc
mov
jae
mov
daa
lods
sub
repnz
add
mov
jecxz
xchg
adc
pop
jo
xor
test
push
int
jmp
inc
outsl
cmp
mov
inc
mov
hlt
sub
std
dec
pmullw
cmp
adc
das
adc
cmp
hlt
bound
xlat
jg
and
push
leave
jle
shrb
hlt
cmp
xchg
jno
icebp
cmp
mull
ret
pop
and
lea
dec
addb
pusha
xchg
arpl
int3
fwait
cmp
imul
lret
mov
addr16
jae
call
mov
shrl
push
lret
push
push
test
push
jb
mov
cli
orb
xchg
decb
mov
jecxz
cld
fs
sub
movl
mov
mov
scas
cwtl
mov
cld
out
movsl
cld
inc
or
aaa
mov
adcl
clc
jae
adc
mov
mov
insb
test
adc
xchg
push
out
mov
jmp
addr16
addr16
adc
popf
inc
int
push
sub
pop
int3
insb
cmp
sti
xchg
jb
cli
in
or
cmp
push
cld
int3
jo
jb
rorl
push
push
dec
fcoms
pop
pop
lret
xchg
adc
lret
mov
cmp
or
mov
fwait
imul
push
push
rcll
add
mov
subl
inc
cmp
pop
xchg
jno
aas
push
in
jle
sub
lods
pushf
movl
addr16
xchg
movsl
mov
lods
decl
xchg
jno
pop
jp
pop
pop
mov
pop
adc
mov
sti
lcall
pushw
mov
packuswb
mov
cmc
arpl
repz
sbbl
push
and
or
jmp
mov
push
js
add
dec
test
scas
jl
pushf
adc
mov
dec
xorl
fists
sbb
push
notb
addl
lock
sbb
imul
lock
cmpsb
jne
test
xor
jmp
mov
or
js
fsubrs
scas
rorl
xchg
mov
jecxz
idivl
sub
adc
push
insl
fstps
mov
sarb
lahf
sbb
bound
xchg
loop
out
add
aaa
shlb
adc
mov
jo
ret
shrl
jmp
out
mov
js
pop
mov
ret
add
jge
mov
mov
rorl
loope
xchg
jne
jns
fisubl
or
rcrl
dec
and
mov
mov
push
les
and
mov
js
mov
repz
loopne
scas
pop
movsb
dec
daa
shr
push
das
into
adc
xlat
fdivrl
in
or
jbe
lcall
mov
test
and
mov
dec
adc
std
and
dec
jge
test
xchg
cli
repz
cmp
mov
aad
xchg
mov
int3
inc
popf
or
ror
xchg
data16
and
neg
pop
lret
xchg
sub
in
add
ljmp
mov
add
out
fisttpll
xor
pusha
push
stos
push
rcr
outsb
jb
mov
mov
orb
in
sar
mov
push
mov
mov
stos
sub
mull
es
int3
mov
fimuls
pop
fwait
mov
dec
aaa
orb
push
cmp
pop
mov
jb
lds
movsb
add
dec
cs
mov
outsl
mov
out
cmp
jge
or
cld
push
xchg
std
dec
xchg
cmpsl
sub
or
xchg
or
shrb
lret
inc
mov
sbb
sahf
dec
adc
repnz
pop
jno
sarl
sub
mov
cli
mov
or
icebp
xchg
xor
bound
sbb
push
aad
dec
cmp
adc
pop
adc
lock
imul
iret
icebp
xchg
fstps
bound
mov
mov
fidivl
push
sti
push
mov
lds
sahf
fcom
bound
sub
movsb
mov
imul
fistpll
divl
xchg
insb
jl
fimull
fs
cs
das
push
dec
in
inc
pop
push
sbb
push
pop
cmp
push
add
cld
test
inc
pop
fcoml
int
orl
pop
adc
inc
xor
jno
jae,pn
mov
cmp
sbb
ret
push
dec
pop
or
clc
cld
adcb
mov
push
fdivrl
cmp
cmpsb
dec
movsl
jbe
mov
js
and
std
imul
addr16
or
int
jmp
lods
xor
pop
pop
stos
test
adc
or
xor
in
sbb
or
push
in
push
sub
hlt
jo
sub
int
leave
jle
rol
xchg
cmc
daa
cmp
stos
pop
cvtps2pd
push
xrelease
aad
xchg
inc
out
lret
ss
addr16
ljmp
dec
lret
aad
or
jne
add
inc
pusha
ror
in
cmp
mov
inc
push
cs
rcr
dec
lea
addr16
imulb
outsb
xlat
adc
inc
mov
divb
sbb
push
pop
mov
repz
xor
adc
jmp
rcrl
jo
inc
mov
push
bound
movb
inc
inc
fwait
sub
jbe
cmc
or
fistl
mov
in
sub
sbb
sub
stos
icebp
inc
inc
in
xchg
mov
pop
sub
rcrl
jbe
push
xor
mov
cmp
dec
fnsave
sbb
in
or
sbb
mov
pop
arpl
mov
outsl
add
or
ret
pushl
adc
dec
scas
outsl
sub
mov
sub
clc
rcl
dec
rclb
sbb
mov
pop
fnstenv
fildll
adc
xchg
icebp
xor
push
mov
sar
test
outsb
dec
or
test
xor
sar
sarl
mov
stc
inc
in
lahf
lret
test
add
xchg
ficomps
inc
xchg
sub
add
adc
xor
sub
jg
es
ljmp
mov
xchg
stos
jnp
mov
and
dec
call
movsb
add
fnstcw
pop
cmp
shll
cltd
push
inc
push
hlt
dec
push
aas
mov
xchg
fadds
lods
aam
xchg
or
xchg
jb
out
ljmp
sub
sarb
test
push
outsl
sub
pop
imul
subl
pushf
js
dec
push
sbb
out
mov
push
jl
mov
sub
pop
nop
add
push
and
aam
movsb
fisubrs
movsl
push
mov
shll
jo
loop
sti
inc
add
notl
lret
movsl
add
imul
fsts
dec
inc
cmp
sub
and
sub
out
mov
mov
sbbb
in
mov
xor
shll
mov
ret
add
mov
pop
test
sbb
jl
aaa
in
mov
adc
jae
pop
and
fcomps
out
fnstcw
add
mov
and
leave
cmpsl
lock
push
lcall
fxch
cmp
repz
mov
push
pop
sahf
jae
and
push
lds
cmpsl
sub
cmpxchg
dec
jg
mov
inc
xchg
mov
mov
adc
xchg
fstpt
mov
xchg
pop
dec
inc
sbb
iretw
ret
dec
rcll
gs
je
int3
arpl
pop
sbb
cmp
push
dec
imul
ret
mov
int
addr16
cmpb
cmp
iret
aad
sub
mov
push
les
mov
ficoms
pop
sub
sub
xchg
xor
push
sbb
cmp
xlat
pop
dec
inc
pop
sti
pusha
jbe
mov
cs
daa
jns
lret
cmc
lret
in
mov
loop
mov
jge
jb
lcall
icebp
mov
les
lret
inc
gs
icebp
and
xchg
push
fisubrl
inc
jle
ret
lea
jb
sbb
fstl
loope
jne
imul
sbb
mov
dec
les
dec
test
jo
fs
sub
push
mov
loop
xor
dec
xor
into
jp
fldcw
mov
cmp
adc
cwtl
jne
sub
push
out
push
push
imul
andb
int3
aam
cmp
test
add
and
iret
push
pushf
rol
adc
mov
xor
pop
push
test
push
sbb
pop
adcl
fists
cmp
cli
mov
dec
pop
sbb
sub
mov
popa
lret
pop
js
into
ds
push
sbb
pop
jnp
bound
or
jmp
or
inc
addb
adc
loope
outsl
mov
adc
or
cmpsb
mov
or
je
in
jmp
in
xor
mov
push
pop
mov
jp
mov
out
jne
pop
idivl
jne
mov
cs
mov
lea
push
add
outsb
cmp
pop
in
xor
xor
nop
lcall
mov
adc
xchg
push
dec
xchg
or
mov
leave
int
mov
rclb
loope
sbb
push
repnz
cmp
iret
xor
outsl
mov
push
pop
mov
jmp
in
inc
inc
xorl
lods
cli
dec
sub
rorl
cld
mov
inc
push
cmp
into
add
jle
fwait
cmp
push
sbbl
pop
dec
pop
in
adc
pushf
lods
pop
das
xorl
bound
test
inc
pop
mov
fs
cmp
in
arpl
es
mov
stos
and
mov
sbb
jle
loop
and
fnstsw
outsl
scas
sub
out
and
inc
hlt
iret
sub
sbb
outsb
mov
pop
add
mov
enter
lea
mov
fisubs
dec
into
repnz
scas
data16
inc
xlat
adc
add
addr16
rcrb
dec
cwtl
or
lods
nop
ja
xchg
imul
fistps
fnstsw
jo
sbb
cs
lret
test
jo
fidivrl
mov
jl
and
jbe
mov
cmp
lret
dec
and
mov
mov
movsb
stos
lods
cmp
cwtl
repnz
push
cld
xor
rorl
adc
push
or
ss
lods
cs
adc
icebp
pop
fsin
dec
cmpsl
fdivp
jmp
out
cmp
outsl
jp
jp
inc
jge
scas
cmp
inc
xchg
mov
rorb
xchg
subb
mov
icebp
push
xchg
stos
adc
add
fisttpl
inc
pop
repz
mov
stos
inc
dec
and
cmp
or
pushf
cmp
mov
push
or
ja
dec
jns
push
repnz
fdivrl
call
mov
je
inc
add
pusha
in
mov
mov
into
aad
fcoms
mov
jle
dec
leave
cld
and
imul
addr16
or
sahf
push
adc
in
repz
clc
xchg
xlat
dec
dec
insl
xchg
push
mov
test
inc
ret
divb
out
fcompl
dec
mov
in
dec
or
aad
or
fwait
aaa
test
ljmp
lods
imul
dec
subb
adc
cmc
ja
add
sbbl
or
or
xchg
sti
xchg
cs
je
xor
add
mov
imul
addr16
int
mov
fidivrl
xorb
push
enter
sub
mov
outsl
cmp
push
jg
mov
cs
xchg
ja
out
cltd
mov
and
jae
data16
rcr
pop
mull
sub
mov
mov
push
xchg
mov
inc
pop
push
sahf
cli
adc
xlat
push
mov
inc
mov
ficomps
jo
cs
mov
mov
mov
jle
cmp
sub
aaa
jle
pop
push
pop
fadds
cmpsb
jmp
loopne
sbb
rolb
mov
rcrl
or
mov
fdivrs
outsl
sub
mov
js
pop
ret
inc
adc
jb
add
movsl
pop
fcomps
mov
lods
mov
je
bound
push
es
fdivrs
daa
add
jbe
hlt
insl
sbb
xchg
push
lods
dec
xor
mov
aaa
push
pop
mov
sbb
imul
pop
xchg
pusha
jne
sub
ret
adc
inc
adc
movl
out
or
ret
lahf
ja
cmp
push
jns
sbb
popf
movb
repz
loopne
sti
dec
sub
ret
sub
push
sbbl
cmp
mov
cltd
sub
dec
add
lock
aaa
lret
xchg
sbb
imulb
orb
mov
enter
pop
lcall
daa
sarl
inc
cmp
cmp
movsb
leave
mov
xchg
mov
int3
jns
insl
loopne
icebp
aad
cltd
data16
call
repz
stos
data16
mov
decl
lods
jnp
outsl
aas
push
push
call
sub
push
sbb
sub
jl
inc
rorl
jb
gs
and
repnz
cmc
cmpsl
or
fwait
adc
test
icebp
push
lcall
inc
inc
mov
fistl
movb
mov
and
push
push
jmp
pop
mov
ja
pusha
cmp
nop
jp
sub
enter
and
mov
test
mov
out
rolb
inc
and
sbb
xchg
dec
out
ret
fdivl
enter
pop
jge
out
dec
out
jns
sbb
test
jo
pop
mov
or
insb
ret
add
push
dec
push
and
inc
xor
inc
cmp
pop
hlt
sbb
mov
xorb
inc
mov
int3
xor
mov
movsl
jae
xor
leave
std
mov
call
cli
out
sub
jb
mov
aaa
add
mov
mov
xchg
pusha
test
int
fists
cmp
mov
nop
pop
xchg
pop
hlt
fstl
flds
cmp
sti
negl
push
xor
dec
in
leave
dec
js
jbe
roll
pop
jo
mov
jmp
out
cmp
loop
push
hlt
scas
mov
leave
jl
hlt
mov
xchg
mov
cmpsb
lret
sbbl
adcl
push
lock
push
nop
jmp
inc
cld
xchg
push
and
movhps
ja
fs
pop
imul
add
loop
xchg
mov
jl
hlt
push
std
shrl
fsts
push
jmp
sbb
cmp
ja
xor
ret
add
scas
test
stos
add
andb
push
push
insl
jg
cli
lahf
jmp
lea
bnd
in
jbe
push
clc
pop
mov
dec
repnz
lock
sub
divb
movsl
xor
inc
push
daa
shr
push
mov
jno
lret
out
cmpsb
nop
inc
lea
xchg
fsubrp
pop
mov
or
and
movb
push
rol
stos
cmp
dec
pop
lcall
std
testl
jle
and
into
ret
inc
adc
sbb
inc
fldenv
xlat
mov
and
sub
xchg
xchg
loop
add
insl
jecxz
mov
test
mov
mov
aad
xlat
pusha
or
mov
push
int
ds
sub
mov
iret
popf
adc
int
xchg
stos
add
inc
adc
bound
or
fisttps
sbb
mov
movsb
dec
xorb
jo
mov
cmp
leave
mov
mov
push
adc
and
out
xor
les
jl
add
icebp
loopne
nop
sbb
inc
mov
pop
stos
cmpsb
inc
pop
cwtl
mov
loope
cmp
sbb
xor
loopne
bound
test
fnsave
push
xor
ja
stos
mov
lock
lcall
popf
pop
out
push
outsl
in
dec
in
repz
lahf
sbb
or
add
rorb
fisubrs
push
add
mov
loopne
mov
mov
xor
mov
std
sub
jge
mov
push
mov
stos
cs
lods
aam
mov
inc
xlat
loopne
loopne
mov
cmp
mov
push
pop
shrb
cmc
sbb
lret
cmpsb
add
std
sub
std
fdivl
in
hlt
scas
movsl
jmp
idivl
jo
xor
shl
popl
call
fisubrl
cmp
rorl
rorl
cmp
mov
ficoms
iret
push
clc
push
mov
sahf
add
push
xchg
aad
je
jg
outsb
xor
pop
jb
repz
imul
jmp
loopne
sbb
jle
xor
bound
jmp
out
xor
or
inc
pop
out
dec
mov
cmp
cli
fdivl
dec
ffreep
shlb
push
repz
jg
xchg
xchg
or
lds
das
mov
sbbb
mov
pop
pop
xchg
mov
mov
sub
jnp
loop
movsb
cmp
jg
shr
das
cmc
out
adc
andb
mov
xchg
out
inc
jne
push
sub
in
xchg
loopne
push
inc
mov
xor
mov
push
and
cmp
psrad
out
dec
iret
mov
sbb
jb
pusha
cltd
push
push
mov
je
mov
adcb
adc
mov
fwait
inc
cmp
stos
inc
leave
adc
xchg
in
insl
mov
in
jno
repz
jnp
insb
in
ljmp
xchg
ret
stos
or
xor
pop
pop
shll
subl
push
add
xor
mov
cmc
cmp
imul
ffree
fs
jnp
mov
dec
inc
dec
and
mov
fisttps
xchg
dec
nop
dec
jmp
mov
out
fwait
cmp
fidivl
pop
cmc
inc
jl
popf
insb
cwtl
push
and
pop
pop
pusha
mov
in
rclb
into
jp
push
sbb
mov
mov
call
cli
mov
out
inc
mul
test
loope
fisubrs
cmp
aas
mov
cltd
shlb
push
mov
xlat
cld
xchg
insl
push
sub
xchg
stos
popa
sub
sbb
lret
sbb
and
popa
pop
cld
jl
lds
test
jge
out
mov
fcompl
rcll
and
add
lcall
push
jecxz
jne
adc
push
jle
movq
fcoms
jno
scas
aas
jno
xchg
popf
icebp
xor
int
mov
orb
int3
pop
push
pop
shrl
rolb
mov
decl
rorl
push
andb
jo
xor
xchg
mov
dec
cmp
or
les
push
push
mov
sbb
mov
ret
mov
sahf
sahf
or
xor
cmp
dec
mov
xchg
insl
loopew
xchg
cmp
sbb
dec
test
test
xchg
fs
or
pop
xor
jle
lahf
mov
scas
adc
xchg
xchg
mov
outsb
in
sahf
pop
pop
inc
scas
push
xor
ds
hlt
and
fwait
cmp
and
enter
jl
test
inc
jle
mov
inc
jae
jl
fisubs
mov
outsl
sub
mov
pop
stos
xor
and
iret
test
cmc
jmp
push
jno
or
aad
cmpsl
cmc
inc
addr16
xchg
enter
leave
mov
bsf
mov
outsb
std
lcall
cmp
push
or
xor
mov
loop
mov
mov
out
fcompl
or
loop
fdivs
fnstcw
dec
jp
xor
cli
ret
icebp
arpl
movsl
cwtl
push
push
fdivs
in
xchg
rcrb
and
cwtl
jecxz
sbb
jb
mov
pop
jp
adc
mov
test
and
mov
movsl
vpminsw
sbb
in
and
mov
negl
sub
push
fwait
pop
fadds
aam
push
icebp
pop
pop
sbb
icebp
aaa
sbb
mov
or
jnp
out
sub
lret
push
mov
incl
push
popa
loop
es
dec
mov
adc
or
ss
mov
jae
push
nop
mov
hlt
mov
mov
mov
insb
out
jo
loop,pn
mov
inc
jne
outsb
pop
mov
int
imul
mov
call
gs
xor
pop
and
ja
fisttpll
pop
enter
and
xor
arpl
adc
and
icebp
sbb
adc
aas
hlt
sbb
shlb
arpl
cmp
iret
test
fnsave
jp
call
xchg
and
inc
js
lods
js
lcall
ret
sbb
xchg
test
lods
cmp
outsl
sub
jle
popa
or
jne
jno
pop
insb
xchg
cld
gs
pop
pushf
mov
ljmp
pop
lods
sahf
inc
mov
add
psubw
fistps
aam
inc
lock
mov
xor
into
jbe
aas
mov
repz
loopne
imul
les
aad
mov
inc
fwait
dec
mov
arpl
pop
jg
insl
sbb
cmpl
ror
cmp
lcall
mov
scas
ret
int
inc
into
xor
adc
ret
pop
pop
jne
push
xor
sub
decl
mov
push
mov
cmp
jo
xchg
fsubs
xor
pop
fsts
and
ret
arpl
xchg
shrl
push
push
mov
sbb
jb
jae
out
lods
mov
or
xor
xchg
ja
ja
cmp
daa
cmp
or
push
and
lcall
js
mov
pmaxsw
hlt
inc
aaa
xor
dec
cmp
jg
addr16
cld
es
jmp
lret
mov
divl
out
nop
loope
sbb
adc
sub
jl
xchg
mov
xor
jl
addr16
cwtl
in
in
das
inc
stc
xchg
xor
out
jge
cltd
sub
lods
xchg
in
jmp
int3
sti
mov
movsb
and
mov
and
cmp
push
aas
jg
pop
ret
aad
push
test
dec
add
mov
aas
dec
add
and
inc
fxch
add
sbb
rcll
xlat
popf
cld
inc
mov
push
movsb
dec
jno
add
aaa
mov
jbe
push
mov
sbb
aad
sti
adc
test
jbe
dec
jbe
call
add
imul
push
jbe
xchg
pop
mov
jg
fwait
and
xor
arpl
negl
cmpsb
jbe
xor
sub
add
mov
lock
sub
scas
mov
cmp
lods
dec
shrb
jae
pop
fldt
jnp
lahf
xchg
repz
aad
sbb
dec
jnp
insb
xchg
pushf
cltd
or
lea
sarb
push
push
dec
inc
popf
ficompl
xor
jbe
fxch
outsb
decl
dec
in
out
cmp
dec
mov
jno
cmpsl
and
div
adc
in
fdivrl
dec
in
jbe
mov
inc
test
add
inc
ret
movsb
push
cmp
aas
or
cmpsb
iret
lds
and
cmp
inc
push
scas
movsl
stos
shlb
or
push
mov
xor
repz
incb
fldenv
jl
push
bnd
and
and
push
out
lcall
jl
nop
lret
push
mov
flds
ret
sbb
out
leave
out
adc
mov
outsb
pop
lods
fistl
or
bound
lods
pop
pop
ds
js
jns
pop
out
addr16
sahf
js
shrl
inc
loope
mov
inc
clc
cmpsb
xlat
test
adc
cmp
into
test
push
mov
inc
push
je
gs
jmp
movsl
out
mov
or
add
mov
jl
ror
pop
lret
push
bound
stc
icebp
mov
lods
icebp
ljmp
mov
cltd
iret
ljmp
daa
xchg
cmp
rcll
fildll
leave
ret
jae
shrb
nop
xor
pushf
out
xor
lahf
mov
js
sbb
mov
aad
inc
out
push
jo
sub
jl
divb
push
std
sti
xor
jmp
xchg
mov
aas
loope
adcb
add
test
roll
mov
or
xchg
inc
pop
idiv
push
loopne
in
and
sub
repz
fsubs
movsl
fs
cmp
mov
jno
icebp
cmp
adc
arpl
in
xor
insl
mov
inc
push
ja
fwait
jp
fisttpll
iret
movsb
xor
dec
jge
sbb
je
sahf
lods
dec
call
jns
jl
inc
daa
xchg
out
movsl
jmp
mov
loope
dec
fdivrs
andl
ja
popf
mov
lods
lods
fsubr
fistpl
mov
mov
jge
jns
mov
sbb
sub
add
inc
lea
mov
out
pop
sti
rcrb
inc
js
out
cmp
xchg
fidivrs
jns
mov
out
adcb
xor
push
enter
idiv
cmp
jecxz
fimuls
xor
fwait
daa
sub
mov
es
std
gs
stos
pop
jle
ja
inc
jne
dec
test
xchg
pop
xlat
lods
fdivp
fcmovb
pop
xor
xor
fstpt
lods
aad
or
int
nop
dec
dec
mov
iret
mov
mov
xor
or
cmp
ror
sub
sti
into
lods
lods
sub
repnz
ds
adc
xchg
aad
jb
outsb
lret
ret
sbb
repnz
in
dec
inc
repz
pop
or
test
pop
pop
push
cmp
lret
jbe
fmuls
sbb
sbb
push
jl
push
mov
cmp
inc
insb
fnstsw
push
lret
mov
pop
notb
push
push
ret
xor
xchg
scas
mov
dec
xchg
push
gs
stos
mov
sbb
mov
mov
frstpm(287
xchg
lea
push
popf
inc
xor
pop
push
pop
test
sbb
das
ss
cld
cmp
ret
xchg
leave
mov
add
pop
fwait
in
fincstp
outsb
add
inc
xor
xor
dec
mov
jbe
jmp
and
mov
jle
lret
adc
fildl
and
jnp
addr16
fstpt
insb
lods
jo
cmc
jnp
insl
mov
dec
xchg
test
xchg
push
das
dec
cmp
loop
shll
push
ret
pop
inc
daa
fmuls
lcall
sbb
dec
fcomps
stc
jno
push
cmpsl
pop
push
fs
mov
mov
repz
cmp
outsl
dec
mov
push
pop
sub
pop
dec
cmp
or
push
lock
jg
hlt
xor
mov
divb
enter
lea
xor
inc
into
push
and
arpl
loope
loope
push
inc
xchg
and
add
pop
mov
pushf
in
push
xor
fiadds
add
xlat
mov
in
rcl
pop
mov
nop
das
es
sbb
fcoml
pop
test
xchg
and
mov
and
push
sub
js
sub
bound
add
jp
xlat
sub
sbb
testb
cmp
mov
ljmp
xchg
pop
inc
mov
inc
out
lods
mov
push
int
cmc
xor
into
sbb
mov
repnz
add
sub
add
sub
or
jns
cmpsl
cmp
jae
adc
xchg
ljmp
shll
mov
xchg
mov
or
adc
pop
add
imul
mov
pop
inc
icebp
movsb
popa
lret
nop
int3
roll
mov
shl
shll
aam
push
and
fs
mov
movsb
dec
pop
out
lods
sbb
jle
out
cmpsb
mov
cmp
fidivs
push
add
push
xor
sbb
push
push
mov
mov
dec
mov
or
lret
pop
jae
outsb
xor
inc
push
xchg
xchg
movsb
sbb
cmp
stc
fstl
sbb
aam
and
jne
xchg
shl
shl
filds
sbb
jmp
out
pop
jae
pop
imul
push
jmp
lcall
jecxz
and
push
pushf
insl
shrl
mov
adc
jo
dec
jg
fdivl
test
mov
add
clc
ror
mov
pop
cmp
sub
mov
scas
push
shlb
xchg
lcall
es
or
out
adc
inc
clc
movsl
inc
nop
mov
or
pop
add
pop
cmp
addr16
inc
fnsetpm(287
dec
lock
mov
fisubrl
gs
add
les
lods
mov
jo
orl
mov
push
sbb
sub
mov
mov
mul
nop
xor
mov
rcl
in
movsl
adc
leave
jne
lret
inc
pop
loope
dec
cmp
mov
dec
repz
cmp
shr
mov
call
mov
adc
sub
ret
cmpsb
dec
mov
pop
enter
adc
loopne
mov
fdivs
arpl
sub
mov
enter
lret
mov
gs
sbb
lea
mov
add
pop
dec
xor
addr16
cs
xor
sti
in
push
leave
mov
shrl
pop
fld
and
outsb
jns
lahf
or
or
sbbl
dec
int
xchg
test
add
sub
mov
add
push
fiaddl
push
outsl
lcall
sub
mov
push
in
xor
fisubrs
xchg
xchg
mov
mov
cmpsb
jmp
add
je
out
mov
stos
dec
jmp
stos
adc
push
arpl
add
loope
adc
fsubr
stos
add
lret
loop
push
jmp
mov
pop
cs
pop
add
lea
jmp
cltd
bound
mov
dec
ret
xchg
xor
insb
pop
xchg
mov
or
pop
adc
xchg
mov
dec
aad
mov
movsb
es
data16
mov
call
cmp
adc
pop
iret
xchg
ret
shrl
add
adc
int3
loope
sbb
dec
stc
sbbb
in
test
inc
in
or
into
int3
mov
lcall
mov
dec
pop
fwait
dec
out
ret
mov
out
sbb
mov
cmp
inc
and
cld
enter
cmp
pusha
inc
push
lock
sub
xchg
fildll
aas
jns
scas
arpl
inc
mov
dec
or
mov
mov
test
loop
shrb
mov
xchg
iret
int3
cmp
test
sub
mov
inc
repnz
hlt
hlt
popa
jge
push
out
aas
imul
out
pop
or
stos
dec
fidivs
push
or
or
gs
imul
mov
fsubrl
repz
push
popa
lock
js
pop
add
scas
lods
jns
pop
push
in
test
hlt
icebp
fcmovb
mov
in
fisttpll
jae
fnsave
in
incl
outsb
sub
jge
pop
xor
subb
or
orb
movsb
pushf
fmul
pop
mov
ficoms
fidivl
or
inc
sahf
rorb
add
dec
lods
cs
sub
sub
or
stos
jns
or
out
pop
stos
rcrl
pop
mov
mov
repz
adc
mov
cmp
add
lds
in
outsb
movb
xchg
shlb
stc
mov
push
out
inc
mov
call
push
lods
lahf
mov
pop
add
out
aad
sub
push
mov
arpl
sahf
sbbl
cmp
inc
push
int
das
push
sbb
je
ljmpw
push
push
nop
clc
jp
int
imul
mov
and
sti
f2xm1
cwtl
dec
mov
aam
hlt
ss
fstps
roll
call
mov
or
mov
sti
fcmovnu
xor
inc
jo
push
push
add
push
mov
loopne
jne
dec
out
mov
mov
xchg
jl
lock
clc
hlt
push
push
jnp
insb
dec
enter
xchg
je
jns
jmp
inc
mov
xchg
mov
sub
js
imul
dec
mov
int
in
scas
or
mov
push
lea
jbe
adc
pop
sahf
pop
sbb
jbe
cmp
cmp
push
in
inc
inc
cli
mov
popa
xor
inc
lds
aaa
push
sbb
fldl
lods
adc
test
and
ficompl
jmp
test
leave
enter
sbb
mov
loop
and
out
inc
pop
mov
and
clc
es
nop
pop
icebp
or
adc
jae
call
and
stos
xor
test
pushf
cs
idivb
lods
adc
fucom
scas
sbb
adc
add
frstor
xchg
icebp
loope
sbb
ss
das
inc
leave
imul
xor
adc
popa
daa
push
pop
inc
xchg
and
outsb
xchg
enter
int
adc
daa
push
pop
sub
add
aaa
cmp
dec
outsl
add
mov
into
aaa
jne
lahf
push
mov
or
xchg
rolb
pop
or
pop
pop
addb
xchg
adc
jl
aad
jmp
adc
cmpsl
clc
cmp
int3
cmc
enter
and
out
es
cmp
sbb
push
insb
jns
and
mov
add
stos
inc
mov
cmp
sbb
les
in
or
xor
dec
jge
or
es
jne
loop
jae
mov
enter
inc
fs
ret
inc
mov
sub
ljmp
imul
mov
mov
jo
mov
and
pop
jno
jne
mov
jle
sub
jp
imul
add
stos
inc
repz
xchg
add
dec
pusha
adc
sub
iret
add
inc
dec
inc
xor
scas
adc
dec
cmp
gs
fidivl
or
fildl
in
je
in
cmpsb
xchg
xchg
subb
mov
clc
jle
fistps
jl
and
cld
and
xor
cltd
cmc
adc
enter
mov
push
pop
or
or
je
jno
aam
je
jmp
add
stos
test
jg
fadd
push
mov
mov
out
sbb
in
negb
inc
movsb
inc
jle
and
ljmp
push
or
in
inc
cmp
das
pushf
and
add
subl
push
xchg
cmp
inc
int
inc
orb
leave
sub
cmp
lea
sahf
in
push
xchg
xor
in
shrl
add
cmc
es
sub
clc
mov
std
movsb
cmp
push
jb
popa
loop
rcrb
mov
jge
inc
aaa
shr
ret
pop
mov
inc
lret
aam
out
popf
ficompl
out
adcb
leave
add
lock
push
lds
int
in
sarl
insb
push
repnz
daa
rol
mov
pop
dec
ss
cwtd
mov
push
mov
jg
shll
pop
nop
lea
sbb
imul
inc
lds
mov
add
add
movsb
das
mov
daa
sbb
popa
aaa
fwait
cld
pop
pop
aas
adc
cli
iret
stos
sbb
mov
mov
stos
lods
js
cmpsl
cs
clc
pop
pop
into
cmc
mov
cmp
inc
xor
push
xor
stos
fwait
xchg
hlt
sti
jle
lahf
mov
das
stos
pop
jnp
push
jb
iret
sahf
pusha
lods
imul
enter
push
mov
cmp
or
jmp
clc
cmp
insl
fsubrl
adc
sub
mov
icebp
fs
stc
sbb
add
xchg
lods
loop
xor
and
dec
shl
cmp
scas
ja
add
test
dec
inc
cwtl
call
outsl
pop
outsl
mov
sub
lcall
int
add
mov
in
ret
xchg
sub
xor
sub
xchg
push
mov
iret
xor
add
decl
xchg
push
lahf
rcl
jb
loop
mov
add
add
dec
jle
cmpsl
loope
jmp
cmp
adc
cld
pop
sti
sti
imul
leave
jmp
cltd
sbb
mov
add
imul
mov
aas
pop
outsl
movsw
ret
inc
rorb
xchg
out
aad
adc
cmpsb
fistpll
mov
addb
aaa
enter
lcall
mov
adc
pop
or
stos
orl
fistps
dec
loopne
ror
xchg
xor
ss
pusha
js
inc
xchg
dec
pushf
into
bound
mov
fidivs
movsl
icebp
jne
sub
rcrb
xchg
push
cli
out
push
pop
inc
or
cmp
mov
lret
jmp
out
mov
push
jl
or
test
loop
ja
sub
mov
rcl
mov
mov
xor
and
repnz
imul
call
push
push
pop
std
scas
mov
lcall
cmpsb
adc
push
faddl
adc
inc
loope
repnz
sbb
inc
out
mov
inc
mov
and
lret
out
mov
adc
jnp
xchg
sbb
cmpsl
xor
mov
add
cmp
or
mov
out
push
xorb
sub
bswap
sbb
mov
and
adcl
lret
pop
jne
enter
mov
int
xchg
popf
pop
mov
jo
jmp
push
and
loopne
js
mov
mov
flds
xchg
cltd
in
pop
and
sub
shrb
nop
and
cmp
leave
push
inc
lea
inc
ljmp
mov
dec
cmp
sbb
lds
mov
adc
cmp
jg
push
and
xor
in
loope
jecxz
xor
inc
sub
cmp
xchg
movsb
and
subb
adc
push
mov
aaa
popa
jmp
dec
outsb
pop
outsl
xor
jle
cltd
xorl
aaa
sbb
dec
mov
mov
sbb
ljmp
addr16
repz
mov
stos
and
stc
insb
push
jne
pushf
xchg
adc
fnstenv
nop
rorb
xchg
push
in
pop
mov
imul
clc
dec
xchg
cmp
popf
stos
and
movsb
mov
lods
dec
lods
sbb
cmpsl
cmp
sbb
fisttpl
iret
jp
cmp
jno
sub
push
je
push
xor
shll
or
mov
test
or
or
adc
pushf
or
jg
stos
pop
inc
or
xchg
xor
xchg
xchg
mov
ficoml
jmp
mov
mov
lahf
mov
adc
xchg
jmp
xchg
loop
adc
push
sub
iret
std
fistpl
push
adc
test
cld
sbb
pop
jg
ret
xor
lods
test
push
xchg
add
push
outsb
cmpl
mov
jg
xchg
or
cmp
jle
push
lret
mov
mov
data16
xor
je
scas
add
shll
dec
adc
xchg
add
jno
mov
pop
lcall
mov
iret
fiadds
mov
jo
mov
adc
sub
mov
mov
test
cmp
or
addr16
sbb
cmp
adc
mov
test
jecxz
ss
xlat
adc
dec
dec
test
aad
or
ret
or
fistps
push
mov
in
sbb
shrl
lods
test
scas
sbbl
xchg
and
and
xor
pop
dec
cmp
les
or
lock
jo
xorl
and
cmp
stos
mov
jb
jmp
inc
popf
cmpsb
cltd
idiv
movsl
test
pop
xchg
push
xor
hlt
out
sbb
xchg
pop
push
cmp
dec
call
xlat
loope
xor
mov
dec
iret
ds
mov
std
inc
add
sahf
popf
add
stos
and
adc
dec
aam
clc
mov
mov
mov
jbe
in
stos
push
ss
push
inc
pop
or
xlat
fisttpl
sub
stos
test
icebp
sbb
xor
or
js
cmpsl
jle
cmp
outsb
mov
lret
push
sbb
jns
push
add
test
inc
adc
lahf
std
mov
jle
arpl
fisttpll
add
mov
mov
out
sbb
stos
daa
push
mov
call
arpl
adc
icebp
push
push
fisttpll
insb
insl
addr16
inc
push
jne
mov
or
out
sti
jge
sbb
push
push
push
sahf
inc
testl
or
mov
add
lcall
jg
popf
inc
mov
gs
dec
repz
ret
add
xlat
xchg
cmp
ret
pop
into
adc
sarl
add
mov
rolb
mov
xchg
clc
nop
ret
test
and
or
jb
das
in
je
xchg
mov
jno
imul
loop
inc
jp
add
es
fs
sbbb
pushf
movsl
cmp
xchg
addr16
sbb
xchg
sbb
jge
shr
push
imul
sub
stos
adcl
mov
rolb
daa
or
icebp
mov
mov
fnstenv
imul
test
ljmp
sub
xchg
ret
mov
adc
pushf
xlat
cs
out
pop
popa
adc
mov
popf
and
mov
cltd
scas
mov
outsl
subb
repnz
pop
in
xor
mov
or
cmpb
test
int
mov
mov
and
leave
sahf
jle
or
mov
dec
js
loope,pt
bswap
adc
push
add
adc
xor
jno
and
aad
fcomp
cmp
push
cld
xor
movsb
inc
mov
std
leave
or
sub
sub
or
fwait
mov
das
pop
fisubrl
or
mov
ret
popa
int
pop
aaa
icebp
push
fwait
lds
mov
push
in
test
test
xchg
iret
jb
push
loopne
loop
add
daa
cmpsl
xor
in
adc
sbb
cld
scas
bound
adc
mov
cmp
in
push
fiaddl
pop
loopne
repnz
sub
inc
loope
xor
lret
daa
pop
xchg
pop
pop
mov
jg
ss
call
js
sahf
push
lret
scas
jo
sub
pop
fcomps
pop
test
es
out
jle
ss
in
pop
loop,pn
or
imul
scas
mov
cmp
fcompl
jne
scas
sbb
mov
rorl
xchg
adc
test
cmp
inc
ljmp
fwait
aad
bound
stc
mov
int3
roll
ret
xchg
enter
mov
mov
stos
subl
lds
dec
das
outsb
mov
mov
jae
jecxz
dec
dec
orl
adc
in
test
xchg
inc
dec
ss
repnz
fcoms
sub
or
sahf
rorb
pop
dec
jmp
push
xchg
test
lods
stos
daa
pavgw
fdivr
jle
sbb
insb
dec
xchg
call
add
lahf
push
cmpsb
enter
mov
push
sahf
imul
jo
cmc
std
mov
sbb
or
loope
sbb
xor
jbe
outsl
adc
les
outsl
sub
mov
ret
adc
in
mov
jmp
or
or
pop
in
xlat
in
data16
ljmp
inc
inc
out
sbb
idivl
pop
mov
shr
jnp
in
nop
lds
insl
testb
adc
decl
dec
jnp
test
jns
fdivrl
inc
fcompl
scas
ljmp
loop
jno
xor
movsb
in
fisubs
xlat
or
xlat
add
push
add
mov
dec
jb
divb
push
hlt
movsl
in
push
das
dec
and
lea
inc
pop
das
ret
pop
mov
jns
les
je
and
jle
mov
xorl
mov
into
loop
out
pop
out
inc
mov
in
int
divl
ret
aam
fs
inc
into
leave
push
aaa
loop
and
ret
xchg
je
ficompl
into
pop
and
mov
std
data16
and
repz
dec
mov
push
ja
stos
sub
add
lcall
idivl
xchg
sarl
dec
in
add
dec
nop
cmp
adc
leave
pusha
ljmp
dec
sub
adc
cld
add
outsl
mov
mov
cmpsl
jnp
mov
dec
stc
enter
scas
inc
lret
rep
ljmp
sub
addr16
or
scas
push
pop
jno
es
jg
cmpsb
ret
das
gs
add
mov
movsl
into
fisttps
jecxz
outsl
push
cmpsl
fwait
or
mov
or
adc
mov
inc
lods
sub
sub
stos
dec
mov
cmp
mov
cwtl
repnz
lret
ds
cwtl
jne
hlt
mov
xor
push
sub
inc
adc
lcall
in
inc
fisttps
lock
repz
icebp
leave
sahf
inc
imull
lret
in
popa
call
cli
xor
mov
pop
and
mov
add
out
xchg
adc
rorb
test
inc
jp
outsl
call
sbb
mov
dec
iret
push
sub
cmc
lods
jmp
js
in
movsb
enter
xchg
cld
insb
mov
icebp
dec
jmp
mov
lcall
pop
inc
mov
jae
or
xchg
adc
movsb
fsubrp
stos
scas
sbb
out
sbbl
mov
shrl
mov
lods
cmp
jno
loope
mov
js
sahf
stc
in
je
inc
fcmovnu
mov
out
xor
into
mov
cs
jns
inc
std
dec
call
jae
mov
leave
adc
flds
addr16
loopne
sahf
daa
mov
inc
cwtl
insb
rol
popf
fdivs
add
and
sarl
test
xchg
sub
sbb
xchg
mov
popf
mov
stos
test
jns
popa
fisttpll
push
sub
xchg
push
fadd
bound
aas
xchg
mov
jb
jp
fisttpll
mov
test
dec
push
imul
cwtl
push
mov
negl
mov
or
ja
or
pusha
mov
sbb
push
sarb
mov
subl
fwait
jne
data16
sub
fwait
mov
sub
rcpps
loop
movsb
jg
push
xchg
lret
sbb
movsl
das
or
pop
inc
jmp
movsl
iret
push
jl
outsl
cmp
mov
pop
fdivl
shll
jo
lret
push
cmc
test
or
jne
iret
add
xor
xchg
xchg
xchg
test
pop
or
inc
ljmp
femms
adc
in
lods
fs
mov
sub
push
fcmovnb
sbb
add
dec
and
dec
adcb
pushf
mov
daa
lahf
xor
sbb
js
sbb
and
repz
pop
sbb
cmpsl
movsl
cmpl
mov
insl
fstps
test
cmp
sbb
push
sub
mov
xchg
adc
dec
cmp
clc
or
shrl
insb
inc
popf
inc
inc
push
xchg
sub
lret
lods
xchg
xchg
mov
hlt
add
testb
cmpl
adc
sahf
inc
or
cmc
mov
daa
xchg
sub
fadd
mov
lds
or
xorb
ja
arpl
imul
es
sub
loope
mov
jbe
bound
jbe
out
mov
xchg
rclb
jno
mov
push
js
js
lds
not
xchg
and
movsl
pop
adc
jo
mov
jbe
sub
nop
aam
mov
push
pand
push
push
xchg
inc
jecxz
push
inc
stos
mov
inc
lods
cmp
testb
fistl
dec
xchg
stos
addr16
lods
insl
dec
fs
lds
mov
enter
mov
nop
mov
loope
std
sar
mov
cmp
xchg
jge
ficoml
shrb
and
repnz
js
jb
lret
repnz
ss
insl
stos
add
adc
fistpl
push
inc
std
test
sub
jp
or
jmp
jo
pop
inc
push
or
shlb
cmp
jae
fdivs
ret
je
out
repnz
mov
inc
les
pop
jp
xorb
ja
and
into
dec
filds
testb
into
outsl
cmp
lret
iret
jo
dec
ret
sbb
lods
xor
pop
push
pusha
xchg
xor
add
or
and
sub
fimull
cmp
mov
dec
and
fwait
mov
int3
pop
jge
shlb
jb
aas
aaa
add
stc
cmpb
inc
rcrb
sub
mov
rolb
shrl
jnp
cltd
fcmovne
lahf
pop
and
lret
dec
dec
addr16
imull
popf
addr16
xor
addr16
sub
xchg
fcoml
clc
loopne
mov
xchg
insb
pop
mov
jne
lahf
test
push
jae
jge
into
xchg
enter
sub
and
pop
lds
xchg
cmp
test
lea
mov
lret
dec
push
inc
jg
push
loop
imul
cli
out
ss
mov
pusha
xlat
shrb
scas
scas
xchg
xchg
add
das
xchg
je
add
push
repz
lods
js
mov
push
in
sub
xchg
sub
jl
loopne
add
inc
test
cld
inc
mov
xchg
or
sbb
lret
add
in
insb
mov
mov
dec
jb
pop
dec
cmpsb
clc
mov
cmp
xchg
lahf
or
and
mov
cmpsl
pop
test
jmp
scas
lcall
in
loopne
js
push
pop
mov
mov
pusha
jno
xor
jns
les
int3
aad
mov
addb
sub
cmp
xlat
rcr
in
mov
pushf
fwait
jbe
pop
inc
xor
dec
xchg
xchg
xchg
dec
inc
dec
mov
sbb
subb
shrb
xor
insb
lea
push
lahf
incl
decb
in
dec
es
push
add
std
add
and
and
imul
call
sbb
push
pop
mov
nop
push
roll
cli
sub
jns
mov
es
jb
fstl
mov
test
or
fcmovb
pop
test
es
mov
fmul
add
data16
inc
mulb
ret
clc
aaa
jmp
les
cmp
jmp
sbb
or
xchg
push
loopne
scas
or
outsl
loop
das
ret
and
scas
pop
xchg
jmp
mov
xchg
mov
push
mov
or
push
arpl
sub
jno
movl
xchg
push
mov
sahf
sbb
iret
inc
int
ds
out
lock
cmp
jmp
lods
push
icebp
inc
push
mov
test
jbe
sub
mov
loopne
push
adcl
ret
test
daa
or
dec
jb
inc
cltd
rcr
pop
or
mov
cs
aas
fstpl
int
cmp
mov
jae
sub
mov
in
lds
inc
push
push
sbb
imul
dec
or
adc
sub
mov
mov
push
es
pop
mov
push
jmp
nop
cmp
xchg
out
sbbl
cmp
dec
xchg
sub
push
fsubl
add
js
rcrl
or
jle
int
jo
lea
sub
push
js
int
push
fs
rcrb
in
push
jbe
addr16
mov
pop
stc
js
std
mov
sbb
jno
cmp
mov
imul
xor
ror
popa
rol
jge
loop
roll
into
jo
pop
push
push
xor
jmp
jnp
xlat
insb
outsl
mov
subb
sub
cmpsb
xchg
and
or
vpmaddwd
fwait
sahf
or
xchg
xor
out
jge
sub
imul
rcpps
and
in
adc
stos
mov
mov
addr16
in
jae
fstl
sub
push
ss
stc
das
mov
loop
rol
mov
or
jl
inc
test
adc
mov
xchg
pop
or
cld
stos
adc
imul
xchg
fildl
sti
cwtl
sbb
out
dec
in
and
shll
push
clc
popa
divb
push
pop
pop
test
int
xchg
push
shrb
loope
push
insl
test
mov
mov
pushf
pop
mov
bswap
xchg
mov
je
fst
les
lods
jb,pt
jl
int
fcoms
nop
dec
mov
pop
orl
fsubrl
jne
outsb
int
lcall
jmp
rep
subb
pusha
dec
mov
mov
cmp
enter
int3
je
std
and
cmp
xor
adc
or
hlt
push
mov
or
mov
xor
pop
aad
push
rcrb
aaa
leave
ds
setg
xor
in
and
in
in
and
adc
loop
push
call
movsl
sti
cmpsl
mov
lock
cmp
pop
push
pop
pop
mov
add
je
repnz
dec
pop
push
js
cmp
pop
xor
pop
cwtl
or
jp
in
ds
adc
push
fisubrl
pop
fiadds
ljmp
mov
dec
mov
add
sbb
mov
mov
jne
xor
dec
pop
mov
popf
in
hlt
cltd
push
test
lods
mov
push
out
inc
adc
jmp
in
jbe
cld
lahf
mov
lret
fnstenv
pushl
add
je
xor
lret
add
bound
dec
lods
adc
pop
bound
push
in
push
xlat
xor
sbb
fstpl
mov
cmp
fmulp
inc
cmc
out
lock
mov
mov
shl
xor
mov
ret
rorb
into
adc
push
fsubrl
mov
pop
mov
stos
popa
add
les
jmp
or
loope
ret
arpl
es
fldl
mov
lcall
cltd
dec
push
or
sub
jg
div
sti
cmpsl
mov
repnz
jb
pop
jb
lds
xchg
ds
add
popf
aaa
jnp
or
mov
inc
fs
mov
nop
lods
jecxz
mov
scas
mov
xchg
xchg
xchg
pop
jo
and
add
or
popa
jp
arpl
jmp
xor
cmp
test
pop
jbe
and
sbbb
mov
aad
push
sbb
jno
jo
mov
mov
aas
bound
int
in
lret
lods
out
jle
or
xor
test
lret
add
sub
cmpsb
sub
sbb
mov
shl
bound
dec
xchg
pop
lea
inc
jp
aaa
jmp
cltd
inc
xor
adc
pop
mov
mov
mov
xchg
add
cmp
add
sub
mov
repz
add
into
ljmp
push
gs
out
cmp
xchg
cli
inc
xchg
in
gs
mov
cs
sahf
mov
out
scas
mov
mov
outsb
outsl
jbe
dec
in
pop
xchg
and
jmp
inc
mov
jns
xor
sbb
push
mov
adc
add
cli
rolb
outsb
std
push
je
dec
sbb
dec
inc
test
push
or
mov
gs
jecxz
xor
add
push
jp
xlat
movsb
xchg
pop
nop
sbb
adc
lock
cmp
jle
hlt
pop
psubd
lahf
adc
adc
jne
repz
sbb
in
xor
das
add
int3
xor
mov
and
mov
ret
mov
push
fcomps
push
pushf
jae
xor
decb
scas
xor
movsb
mov
aad
pushf
lret
insb
sbb
cmp
lds
lret
cld
addr16
jo
aaa
int3
fcom
in
arpl
pinsrw
ficoml
std
mov
mov
xor
insb
mov
in
xorb
div
dec
adc
jp
popa
fists
pop
jno
clc
or
jecxz
push
gs
inc
dec
jle
sub
in
bound
jae
mov
or
jne
fmull
jae
xchg
cmpsb
aaa
jecxz
xor
sbb
jne
or
leave
nop
xchg
sbb
sbbb
in
shll
xchg
call
test
xchg
jmp
xchg
xor
xchg
call
jg
add
ret
in
xor
test
jmp
movsl
movsl
aam
push
pop
mov
test
xchg
pop
xlat
adc
jns
test
in
and
out
call
add
out
aas
sbb
mov
in
and
dec
les
mov
fwait
int
or
mov
pushf
int3
pop
add
push
rdmsr
fs
mov
stos
sbb
and
sahf
add
mov
gs
jne
sbb
push
pop
add
pushl
push
pop
cmpsb
rorb
xor
inc
xor
push
fsts
dec
xor
cltd
jae
into
jp
aad
and
jns
int
xor
or
stc
in
jb
mov
sub
xchg
mov
and
pop
push
pop
sti
ficoms
inc
jg
out
mov
push
xor
fwait
sbb
mov
adc
adc
leave
jmp
test
loop
dec
cmpsb
lahf
sbb
mov
hlt
pop
pop
add
adc
push
ret
mov
add
dec
add
mov
arpl
inc
mov
dec
out
sti
pop
mov
push
inc
cmpsb
xor
or
inc
test
in
cwtl
cld
push
ds
jmp
and
andl
in
mov
pop
mov
push
mov
or
add
xchg
mov
daa
cmp
repnz
in
nop
inc
ficoml
outsb
movsl
or
jl
cmc
imul
pop
cmp
or
cmp
punpckhwd
pop
pop
bound
shrb
fwait
ss
push
scas
lods
inc
cmpsb
test
fwait
gs
push
mov
pop
xchg
push
int
arpl
bound
add
jno
aaa
cmp
pop
pop
inc
fstps
inc
mov
or
les
testb
jo
sbb
or
pusha
ss
jo
movsb
lret
scas
cmpsl
out
push
sbbl
iret
dec
outsb
out
add
mov
lahf
xor
sbb
fs
in
fldenv
aam
ror
mov
psubusb
pop
iret
lea
adc
les
inc
and
rorb
mov
fsubrs
inc
out
lret
and
mov
imul
lret
sub
cmp
jbe
ret
cmp
mov
adc
mov
xor
js
mov
pop
rol
fwait
sbb
mov
lcall
aad
shll
das
jle
aam
inc
mov
mov
insl
dec
ja
xor
shll
push
dec
test
js
aam
adc
pusha
in
je
loopne
mov
dec
fnstsw
xlat
sbb
movsb
test
push
out
sub
dec
or
adc
stos
sbb
js
jae
dec
jg
jp
add
push
or
sbb
mov
out
pop
in
into
or
data16
inc
cmp
jae
es
push
adc
in
imul
shlb
mov
push
mov
shll
cld
testb
xor
or
int
ss
mov
sub
stos
xor
aad
loopne
test
inc
dec
outsl
incb
inc
test
jmp
jmp
and
push
sbb
jo
or
push
cmpsb
lock
mov
clc
push
setns
enter
xor
std
dec
ds
add
mov
out
js
inc
fadd
mov
aas
call
pusha
and
dec
pop
cli
dec
fnstenv
daa
adc
push
mov
je
aas
lds
mov
mov
orl
fcoms
adc
shr
loop
cmp
mov
sub
xchg
xor
sbb
inc
out
pop
sbb
flds
cltd
sub
fists
mov
add
xchg
repnz
and
mov
jno
push
and
mov
add
cmp
pop
and
sub
and
push
xchg
cmpsb
imul
xorl
jecxz
xor
pop
dec
mov
cmc
lret
test
lea
shll
pop
jae
pop
adc
and
jo
jle
daa
scas
in
and
and
clc
push
jns
cmpsb
cmp
lret
aam
push
jecxz
flds
jg
sub
dec
int3
ljmp
dec
mov
call
push
pop
lds
add
adc
dec
fcoml
lock
aad
and
jo,pt
jecxz
in
adc
mov
jge
jl
cmp
inc
or
sub
mov
cld
push
mov
fstpl
enter
pop
jmp
bound
dec
nop
rorl
vcmpps
inc
jnp
sbb
push
fistpll
inc
xchg
adc
pop
adc
inc
testl
jno
sub
push
mov
cwtl
inc
mov
pop
das
mov
cs
ljmp
out
loopne
mov
xchg
shrl
xor
sbb
out
out
jp
iret
out
cmpsb
xchg
inc
lock
cmp
insb
or
loope
or
sbb
call
gs
std
push
jno
add
dec
rcll
lret
shll
push
jb
outsl
mov
pop
das
daa
push
sub
into
cmpsb
pop
jo
pop
mov
inc
jae
pop
push
aaa
sub
call
sahf
or
aam
sbb
mov
xor
mov
pushf
pop
lds
mov
cmp
inc
sub
xorb
popa
pusha
pop
xor
lds
pop
in
lds
sub
rolb
cwtl
negb
mov
in
xor
daa
sahf
or
adc
push
andb
inc
mov
lret
sarb
enter
and
sbb
mov
adc
inc
xor
lods
iret
cvtps2pi
mov
ds
jns
and
inc
dec
andb
lret
mov
sti
inc
repz
out
imul
icebp
push
int3
fidivrs
lret
lods
adc
int3
mov
int
fisubs
idivb
rolb
mov
out
xchg
fisubrs
sub
jo
ds
jmp
fmulp
pop
xchg
push
mov
fldcw
add
sbb
scas
sahf
push
or
and
lea
push
jmp
call
ret
aaa
sub
sub
adc
les
jge
sbb
scas
lds
cwtl
loop
mov
inc
mov
ret
rcll
test
mov
mov
out
loopne
out
movsb
insb
adc
adc
fildl
popf
sti
scas
cvtpi2ps
push
addr16
ss
cli
test
sub
jo
push
and
push
ret
sbb
divl
add
test
and
mov
lds
dec
pop
sub
jo
add
cwtl
cmp
movsl
ficoms
xchg
clc
pop
and
negl
aam
rorb
dec
ljmp
add
iret
fildll
or
ret
repnz
pop
fs
stc
int3
xchg
dec
dec
add
mov
cmc
lcall
cmp
pop
mov
or
jl
add
nop
les
cli
shlb
jno
xchg
jae
ja
nop
pop
ss
arpl
adc
lods
sarl
imul
add
stos
jp
addr16
xor
jbe
cld
sbb
sarb
dec
dec
incb
sbb
js
push
into
fisubrs
ret
mov
fisubrl
jle
mov
lret
rorb
jle
aad
mov
das
idiv
ffree
jl
inc
les
mov
xchg
addr16
cld
aas
xchg
stos
inc
dec
cmp
in
stos
imul
in
inc
aaa
cmc
adc
pop
fst
ds
pop
stc
push
ss
cmp
pop
mov
mov
xchg
mov
jno
push
and
imul
jns
dec
into
mov
pop
xchg
mov
js
jno
loopne
shlb
pop
sub
insl
sbb
push
xor
mov
mov
sti
jg
push
shll
stos
cmp
gs
fists
insb
xor
mov
jge
inc
call
fimull
pop
xor
mov
ds
mov
mov
fsubl
mov
add
lahf
inc
adc
xchg
popf
cmp
xchg
jno
and
and
mov
pop
or
jb
mov
xor
mov
shll
mov
inc
out
xor
xchg
filds
sub
mov
inc
cmp
int
stc
iret
movsl
jbe
clc
jmp
popa
mov
push
loopne
cli
jo
in
cmp
push
loop
jae
or
aam
mov
lods
inc
repnz
leave
ret
popa
aaa
xchg
ret
pop
lcall
jp
sbb
dec
arpl
ret
mov
gs
push
xchg
dec
cld
jp
xchg
push
lock
fidivrs
test
dec
cli
mov
inc
fsts
mov
loopne
cltd
lods
and
jns,pt
mov
int
lods
push
adc
mov
and
push
imulb
roll
nop
and
sub
inc
mov
mov
adc
inc
xchg
add
test
xor
in
jnp
mov
out
ljmp
stos
jge
inc
in
lret
das
jle
mov
sbb
cmc
sbb
inc
cltd
out
das
xor
outsb
xlat
inc
jae
xchg
adc
ljmp
dec
arpl
les
push
icebp
cmp
daa
call
cli
xor
jg
mov
dec
cmpsb
cmp
loop
dec
jae
push
ljmp
mov
dec
js
mov
aaa
in
movsb
mov
fsubr
push
cmc
into
or
sub
iret
pushl
push
sub
xchg
test
and
sbb
jno
cmp
sub
push
xor
mov
int
hlt
adc
pop
add
subl
mov
push
imul
xor
daa
or
loop
aam
out
jbe
inc
mov
pop
sub
data16
shrl
dec
pop
jo
mov
call
das
daa
add
jb
movsb
cld
xchg
pop
fisttps
sbb
mov
stc
mov
leave
jl
jle
movsb
dec
es
jnp
push
mov
xor
mov
lahf
into
xchg
loop
in
sbb
push
div
in
ljmp
fisubl
xlat
cltd
dec
out
call
mov
test
inc
gs
sub
icebp
decl
mov
mov
dec
push
mov
stc
pushf
push
arpl
adc
xor
push
inc
cmpsb
jge
bound
xchg
dec
jnp
stc
pop
mov
adc
aas
and
mov
push
jg
add
call
movsl
dec
popa
xor
out
xor
mov
mov
inc
popa
adc
scas
aad
leave
or
in
xor
lods
and
jg
into
sub
leave
loop
jle
jae
mov
mov
xor
subb
int
jmp
in
dec
mov
mov
mov
push
and
arpl
pop
mov
jecxz
mov
sti
inc
xchg
add
or
sub
test
out
mov
jo
test
jns
adc
or
fsubrl
pusha
jg
scas
in
inc
addr16
xchg
xchg
jp,pn
out
lret
xchg
test
cmp
or
insl
jl
sub
pop
add
scas
pop
inc
jl
mov
inc
sub
inc
push
push
push
dec
jge
cmp
std
xor
cmpsl
push
jge
mov
xchg
sarb
mov
inc
pop
fsubr
out
mov
inc
push
sub
mull
push
test
mov
dec
pop
jmp
inc
add
jbe
rcr
cmp
std
and
cmp
dec
loope
cmpsb
loopne
dec
leave
in
mov
lret
ds
xor
lcall
push
cmpsb
cmp
rcrb
cmp
jbe
imul
inc
push
pop
lahf
xor
mov
je
fdivrl
cmpsl
add
xor
jo
and
push
into
mov
jno
xchg
das
hlt
inc
cld
pushf
pop
jmp
jge
insb
add
and
and
xchg
jne
mov
fs
enter
cli
mov
cmp
and
fistps
mov
lea
scas
lahf
jp
fdivp
ret
jmp
push
xchg
mov
mov
jne
jae
pop
pop
pop
stc
xchg
add
in
mov
int3
push
cmpb
mov
push
mov
int3
into
dec
mov
stos
mov
dec
or
aam
imul
dec
repnz
sbb
pop
xchg
sbb
adc
xlat
xchg
popf
mov
add
stos
fistps
push
pop
jbe
sahf
adc
mov
dec
aad
les
hlt
repnz
sbb
in
in
fdiv
sub
icebp
push
les
mov
pop
cmpsb
sbbb
dec
and
xor
push
mov
ficompl
jle
mov
adc
enter
cltd
adc
jbe
adc
ss
pushf
dec
ljmp
xor
cs
jmp
cmpsl
sbb
nop
push
push
loope
sbb
xor
jno
ds
sbb
sbb
mov
mov
sbb
cmp
mov
cmp
in
popa
movsl
pop
loop
repnz
loope
sub
mov
push
jge
and
or
push
mov
pop
inc
xor
sbb
or
rcrl
stos
fists
push
pushf
cmp
mov
xchg
je
mov
js
lods
jo
sub
rcl
mov
add
mov
xchg
test
jecxz
mov
adc
add
insb
xchg
mov
addr16
test
mov
aas
shrb
xchg
xchg
pop
fstps
in
mov
cld
sbb
dec
jb
mov
in
xor
cmp
or
add
fldt
clc
cmp
xchg
lea
fmul
mov
popf
imul
cwtl
fdivs
ret
mov
int
mov
inc
push
jb
cmp
and
shr
add
xor
int3
pop
lea
mov
fstpt
dec
sbb
das
xlat
mov
enter
and
aas
pusha
inc
insl
add
loop
mov
pop
or
sbb
js
jg
sub
sbb
les
sbb
adc
lcall
scas
jp
mov
in
mov
pop
jne
ret
sahf
inc
enter
inc
adc
mov
mov
inc
xor
pop
sbb
les
imul
pop
aad
xchg
les
clc
roll
lcall
int
popa
xchg
xor
xchg
jmp
repz
push
pop
cmpb
int
and
std
adc
cli
out
hlt
add
xor
add
es
jb
fidivrs
or
dec
mov
cli
fs
push
xchg
jmp
xor
pushf
ss
mov
arpl
sti
add
mov
push
data16
pop
das
dec
rcr
sahf
stos
sub
pop
push
push
adc
mov
or
or
hlt
jo
sub
sarb
or
mov
dec
sti
xchg
int
and
mov
movsl
xor
pop
ror
mov
inc
add
movsl
jb
jns
mov
and
mov
xchg
jg
adc
add
or
outsl
subb
cmpsl
into
call
mov
push
cmpsb
iret
lahf
jne
int
iret
test
imul
es
cmp
es
lret
push
pop
inc
lret
or
in
dec
fistps
stc
cmp
add
fstl
push
mov
in
jns
mov
dec
jmp
pusha
rcrl
lahf
setp
jbe
lods
sbb
lret
rep
sub
pop
out
and
mov
and
iret
jo
mov
shrl
aad
int
pushf
scas
mov
outsl
pop
pushf
andb
andb
adc
ja
arpl
dec
stc
mov
cwtl
fwait
jb
stc
shr
jge
xchg
mov
xchg
insb
push
ljmp
mov
das
mov
fwait
insb
jle
sub
or
aad
sahf
imul
std
test
call
fstp
xor
in
xchg
add
or
push
pop
daa
sar
cmp
cmp
arpl
stos
pop
aam
push
pusha
or
lret
leave
xlat
jmp
mov
cltd
dec
out
loop
or
add
fwait
lret
sbb
call
pop
cwtl
inc
jl
loop
sahf
cmp
cmp
push
fmulp
mov
jmp
daa
popf
adc
sar
mov
jp
xor
inc
faddl
ds
pop
sub
dec
cmp
push
jecxz
inc
ficomps
jecxz
and
cmp
aaa
fsubr
mov
xlat
jb
jo
fs
in
mov
or
lcall
cmp
push
mov
jl
mov
cmp
mov
jp
push
xlat
adc
and
mov
fsts
repnz
push
sub
ja
add
cmpsl
std
fs
xlat
sub
shll
jmp
pop
mov
xchg
loopne
sub
mov
add
mov
pusha
or
fiadds
and
dec
in
dec
jnp
and
xchg
shrl
bound
xchg
push
or
jecxz
mov
iret
lds
loope
sbb
pop
in
lcall
dec
xor
mov
mov
push
imul
ret
out
mov
jae
lea
comiss
xchg
inc
es
sub
mov
mov
das
dec
sarl
cmc
fisttpl
pusha
int
popa
xchg
dec
fwait
call
pop
and
loope
aaa
fldl
push
mov
call
and
inc
add
jle
adc
lret
and
inc
jnp
mov
cmpb
cmpsl
sbb
xor
xor
push
dec
mov
xchg
mov
test
jmp
mov
cmpsl
notl
jle
lret
imul
dec
push
xor
xchg
cmp
loope
fwait
xchg
leave
xchg
and
jmp
push
add
es
xor
stos
or
popa
stc
lds
js,pt
mov
add
lea
fistps
pop
roll
inc
pusha
mov
pushf
pop
or
xchg
pop
pop
lea
jle
rcrb
fwait
pusha
cmpsl
ret
mov
ret
mov
pusha
daa
xor
daa
cmp
push
bound
inc
pop
leave
outsb
sbb
int3
out
jbe
cs
mov
je
cld
dec
imul
dec
fldt
stos
jno
insl
call
and
mov
mov
iret
imul
es
rorl
and
mov
test
ja
cmpsl
cld
push
mov
sub
pop
xchg
mov
imul
push
inc
mov
ret
sbb
lock
sub
popf
out
sub
imul
pop
cld
rclb
add
push
xchg
nop
jecxz,pt
cmpsl
stos
or
jb
repz
repz
rol
push
jge
out
dec
dec
loope
pusha
inc
xchg
jb
push
daa
call
jbe
mov
adc
xchg
arpl
cltd
mov
mov
je
lds
das
in
pusha
or
cli
inc
or
fldl
cwtl
insb
mov
movsl
or
data16
push
fldl
aam
loopne
sub
jns
sub
cmp
cmp
dec
lret
sahf
addb
push
pop
push
adc
ds
aas
sub
in
push
inc
xor
adc
jge
inc
sbb
mov
cmpb
or
imul
in
jae
inc
hlt
push
pop
dec
mov
mov
fidivrl
js
test
ja
lea
in
imul
pop
and
jo
cli
aam
shll
ror
mov
and
ljmp
repnz
xchg
xchg
sbb
jmp
sub
jne
xchg
ja
cmp
jg
loop
int3
aad
cmpsl
ret
test
in
inc
jne
test
xchg
pop
push
or
jmp
shlb
aam
jb
xor
cmp
jle
jns
in
add
inc
in
mov
and
lea
xor
mov
cmp
dec
jl
inc
sub
ficoml
or
push
cs
mov
fdivrs
adc
cmp
lds
clc
ljmp
xor
test
pop
add
or
test
or
retw
jl
dec
sbb
add
arpl
rorb
mov
pop
rep
or
aas
push
sbb
loop
xchg
ljmp
cmp
fmull
ret
push
pop
je
push
aam
int3
add
mov
jnp
mov
cmpsb
lcall
in
aad
push
mov
cmpsl
in
push
sbb
xlat
popf
and
aad
aam
push
cli
call
pop
cmp
cmc
xor
iret
aam
movsl
stc
mov
inc
arpl
dec
add
sub
loopne
cmpsl
pop
push
data16
mov
push
enter
jne
in
mov
dec
fsubs
loope
pop
xor
or
sub
push
xor
push
sub
dec
jle
push
xor
xor
add
sub
daa
pop
mov
hlt
mov
scas
xchg
adc
xor
pop
rclb
into
popf
push
mov
jg
divl
push
jne,pn
add
inc
push
sub
call
arpl
mov
addb
sbb
dec
xchg
lods
repz
xor
icebp
mov
jg
hlt
iret
pushf
cs
pushf
dec
loopne
mov
push
repz
inc
push
dec
jge
sbbb
movsb
adc
stos
push
sbbl
pop
repz
lds
lds
lds
mov
jbe
icebp
mov
mov
lcall
je
test
js
cmpsl
stc
inc
add
popf
loop
shl
or
les
add
mov
add
dec
lcall
push
mov
loop
aaa
mov
or
test
shlb
mov
adc
sub
mov
pop
fists
push
sub
jns
loop
into
les
and
repnz
rclb
mov
jo
add
aam
inc
sbb
cli
test
push
or
rcrb
fistl
inc
out
arpl
sbb
push
sbb
mov
sbb
lea
shrb
popf
jnp
mov
cs
fdivrs
sub
xor
pop
mov
lods
cmp
pop
cmp
inc
shl
push
pop
and
es
stc
add
arpl
or
out
mov
mov
lea
adc
jp
sub
data16
pushf
sub
and
pusha
icebp
jl
dec
push
jo
dec
mov
shl
addr16
pop
lcall
and
and
sub
adc
into
sub
inc
cmp
mov
stos
mov
adc
lods
fsubs
test
pop
icebp
fldenv
inc
in
jge
std
insb
adc
mov
xchg
add
jnp
pop
sbb
mov
lock
sub
mov
inc
in
and
sub
add
inc
ficoml
xchg
push
or
hlt
and
sbb
and
scas
out
cmp
popf
dec
orb
fcmovne
adc
xchg
fcoms
inc
dec
xchg
mov
lret
inc
mov
push
rcll
jae
jns
outsl
rolb
jge
andb
xor
pop
push
stos
stos
xor
push
cltd
js
mov
mull
loope
nop
subb
mull
cmp
or
fstpt
dec
movsb
loop
fucompp
fstpt
lret
xor
mov
or
pop
adc
jbe
xchg
push
fs
xchg
mov
or
pop
fisttps
inc
xor
pusha
pop
or
imul
mov
or
add
lret
idivl
cmp
dec
ljmp
test
xchg
loope
and
mov
cmp
inc
mov
adc
jmp
jle
loopne
push
inc
scas
or
scas
dec
into
jno
xorl
fnstenv
mov
aad
in
ljmp
aas
mov
stos
stc
jnp
repnz
jg
push
lret
pop
or
daa
sub
jbe
and
adc
js,pn
pop
jg
inc
pop
sbb
mov
cld
bound
scas
jnp
cmp
cli
jecxz
push
in
and
js
dec
aad
jbe
into
icebp
cmp
loope
jnp
imul
leave
shlb
je
mov
fsubl
stos
ret
fidivl
addl
loope,pn
pop
lods
cli
int
mov
jno
sbb
xor
js
jmp
jp
mov
jecxz
inc
fs
cmp
mov
mov
outsb
dec
test
sub
mov
dec
rcll
test
cmp
lds
cltd
loope
cli
xorb
and
jnp
mov
sbb
push
cmp
dec
je
sub
dec
sbb
aaa
test
movsb
xchg
pop
std
add
inc
jp
add
jge
lcall
lods
mov
mov
aas
or
sbb
jnp
push
xchg
mov
data16
add
jecxz
lods
xchg
addr16
loope
pop
sbb
in
cmp
jb
pop
out
mov
inc
mov
sub
jmp
xor
sub
sub
sbb
sub
popf
imul
inc
jno
adc
call
into
dec
xchg
jmp
inc
sub
fcmovnb
push
push
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
fs
adc
stos
in
and
cs
pop
jmp
xor
or
fisttpll
jae
jns
aaa
roll
adc
fdivl
call
jle
adc
nop
dec
inc
ljmp
divb
push
stc
subb
int3
imul
jo
mul
fbld
mov
out
add
shrl
fcmovnbe
sarl
cmp
lcall
mov
repz
adc
cwtl
rolb
mov
lcall
rorb
mov
push
mov
inc
in
fs
cmp
mov
test
pop
ret
cwtl
xchg
mov
and
mov
out
cmp
mov
cmp
adc
mov
subl
xor
xchg
dec
jecxz
jns
xor
or
aas
into
leave
mov
pusha
repz
mov
hlt
sbb
mov
inc
loope
je
push
jecxz
aaa
push
rorl
leave
cltd
rcr
andl
mov
arpl
daa
sbbl
xor
rcrb
cmp
inc
jmp
aad
push
pop
outsb
outsl
and
cli
and
loope
xchg
adc
pop
test
pop
push
pop
add
mov
adc
out
lea
pop
aam
inc
lahf
cwtl
mov
test
sub
outsl
add
dec
aad
dec
stos
test
mov
or
xchg
lcall
repnz
dec
dec
cmc
aas
in
out
popa
in
ss
filds
clc
cld
mov
into
jp
call
jmp
inc
fidivrs
mov
dec
sbb
lods
cltd
push
mov
in
jns
clc
lds
push
jne
xchg
insl
popf
push
rorl
daa
jnp
notl
fistpll
repnz
cltd
pop
cwtl
iret
mov
sub
jo
pop
arpl
loopne
sub
pop
jae
dec
or
data16
cltd
cwtl
sbb
aam
int
cmp
add
push
sbb
xchg
mov
jb
dec
mov
or
fdivl
idiv
outsb
inc
loop
cli
dec
adc
cmp
shlb
adc
jmp
mov
mov
fs
xor
das
in
or
hlt
sbbl
inc
mov
add
jmp
sbb
dec
sbb
fwait
sbb
sarb
sbb
push
push
and
sahf
jmp
sbb
arpl
pushf
fstpl
es
or
xchg
cld
lahf
aaa
or
inc
push
cmp
xchg
push
int
pop
adc
jb
test
cld
test
mov
fwait
jbe
cltd
in
add
iret
addr16
or
pop
mov
or
cmp
dec
icebp
loopne
shlb
jecxz
jne
rorb
cmp
iret
outsl
loopne
jecxz
jmp
xchg
es
mov
movsb
add
out
and
jl
es
scas
jecxz
cmp
loop
popf
and
enter
dec
in
mov
inc
dec
mov
cmp
jae
add
pop
shll
jnp
mov
jmp
cmpsl
cld
mov
xchg
sbb
sbb
call
pop
out
outsb
jns
jmp
dec
cmpb
pop
mov
je
mov
add
inc
jl
mov
je
xor
lds
xor
mov
push
or
js
xchg
out
clc
in
xor
scas
lods
adc
rclb
out
scas
repz
pop
arpl
mov
adc
pushf
sbb
lock
dec
test
daa
inc
mov
cli
add
mov
and
mov
mov
jb
jecxz
mov
dec
pop
pop
cmp
sahf
cmp
xchg
cmp
icebp
xchg
shrl
push
bound
mulb
and
xchg
cs
cmp
xor
and
mov
xor
adc
mov
inc
fstpt
inc
push
sbb
mov
stos
subb
jnp
icebp
mov
and
mov
ja
and
movsl
adc
ja
jmp
rcrl
fistl
inc
imul
flds
jno
fldt
int3
stos
lcall
cld
jmp
mov
and
adc
pop
cmp
es
xchg
or
fadds
loopne
loope
mov
pop
add
arpl
orl
mov
mov
add
or
dec
cs
sbb
lahf
mov
adc
ds
dec
enter
add
arpl
dec
insb
pop
xchg
add
sbb
pop
pop
mov
lock
mov
xor
pop
stc
dec
jp
push
ja
mov
or
sbb
arpl
loopne
jno
daa
ljmp
and
cmpsl
cmp
push
sbb
dec
std
lods
xor
adc
stos
not
test
rclb
mov
xor
dec
and
lods
sbb
xchg
mov
jae
out
cmp
hlt
outsl
lea
add
int3
fwait
cmpsl
and
sub
cmc
mov
es
lcall
fs
push
dec
or
andb
jb
push
test
cmpsb
test
imul
in
xchg
add
call
jl
lret
fcompl
add
sub
dec
lahf
icebp
movsl
sbb
sub
loop
or
jae
xchg
icebp
pushf
mov
jle
cmp
dec
mov
mov
sti
notb
loope
mull
sbbl
in
fucompp
mov
mov
mov
xor
mov
inc
lock
sub
ficompl
add
nop
adc
xor
pop
or
push
daa
orb
out
jbe
mov
pcmpeqw
rcrb
inc
jl
bound
pop
cmp
jg
sbb
xor
jmp
and
or
pop
shl
shll
push
pop
xchg
pop
iret
mov
inc
std
rcl
push
pop
fsubp
inc
push
scas
mov
lret
xchg
imul
dec
stos
jl
jl
fistpl
jle
inc
jb
sbb
lret
loop
inc
jp
add
test
loop
and
xor
inc
scas
sbb
fnstcw
call
jmp
push
dec
xor
pushf
pop
outsb
addr16
shlb
movsl
add
jo
call
imul
test
inc
insl
das
mov
fsubr
mov
xor
daa
jo
cmp
into
mov
jno
inc
pushf
sar
std
fwait
enter
mov
adc
adc
push
sbb
mov
inc
xor
sub
lods
dec
ds
sti
movsb
xor
leave
in
xchg
lcall
das
scas
sbb
cmc
cmpsb
cmc
shlb
inc
xor
inc
cmpb
xchg
hlt
dec
mov
inc
aad
add
mov
scas
mov
cmove
scas
jbe
int
add
push
in
or
xor
inc
fcoml
xor
xchg
jns
xchg
in
mov
insb
lods
mov
dec
cltd
cmpb
mov
sbb
jno
je
addr16
das
xchg
jne
mov
cmpsl
nop
call
adc
testb
jno
cmp
push
insl
test
loop
movsl
lods
bound
mov
lret
cmp
in
ja
mov
push
imul
jo
addl
push
mov
adc
lcall
cwtl
cwtl
add
sbb
popf
or
push
loope
cld
mov
sub
or
enter
pop
mov
xor
cld
jo
out
lods
faddl
mov
outsb
sub
stc
fs
jge
xor
push
sbb
inc
add
or
or
mov
mov
aam
das
cmpsl
arpl
lret
insl
stos
jns
jl
sub
andb
stos
sbb
push
lods
mov
and
xor
pop
arpl
stc
ss
fbld
inc
les
and
xor
js
flds
stc
xlat
in
sahf
into
mov
or
mov
or
xor
inc
adc
andb
push
jo
out
push
loopne
aaa
cmpsb
mov
outsb
dec
stos
xor
or
in
sub
test
repnz
lea
in
cmp
and
adc
mov
cli
insl
mov
add
enter
addl
test
aaa
push
shl
adc
push
fwait
repz
mov
cltd
mov
fists
call
push
xchg
loop
xor
jnp
and
insl
or
push
sub
ret
daa
xor
or
pop
fisubrl
addr16
es
add
cmp
pop
scas
repnz
cs
jg
gs
lods
sbb
and
dec
in
or
pop
mov
adc
xchg
nop
js
or
and
mov
inc
pause
push
arpl
push
in
es
outsl
inc
lods
jbe
fimuls
aam
ss
popl
sarb
pop
and
mov
loope
std
shrl
insl
add
cmpsl
add
mov
cltd
mov
sbbl
bound
xor
ret
popa
lock
fucom
pop
dec
mov
pop
cmp
leave
cmp
push
inc
xor
add
push
inc
xchg
fdivrs
sub
arpl
mov
dec
pop
sti
adc
shl
test
mov
aaa
add
cmp
adc
test
outsb
and
jmp
mov
mov
adc
and
movsb
andl
xchg
jno
repnz
aas
and
jmp
cli
and
mov
mov
xor
cmp
push
int3
imul
xor
dec
pop
dec
jl
mov
dec
popa
int
jmp
mov
into
push
pop
xor
xor
enter
fisubrl
fsubs
xchg
sbb
out
and
shrb
jg
aaa
ss
out
adc
and
scas
sti
cwtl
dec
insb
rolb
notl
lret
test
shll
add
add
mov
or
pop
icebp
add
test
sbb
cmc
push
jg
xlat
sub
imulb
xchg
jmp
sub
and
daa
dec
pushl
sahf
adc
cmc
outsb
pusha
dec
lahf
arpl
cmp
adc
adc
or
cli
pop
mov
add
and
dec
sbb
pop
pop
push
fldt
pop
or
pop
ds
mov
aas
test
sub
push
push
sbb
sub
or
sbb
cmpb
xlat
jge
jle
cmp
shlb
mov
pop
inc
pop
nop
push
jae
cs
xchg
outsl
movl
pop
xchg
xchg
rcll
and
addl
mov
mov
aad
xchg
leave
scas
cmc
repz
cmpsl
fsubrs
outsb
test
and
mov
cli
cmp
imul
hlt
dec
addr16
jo
add
imul
dec
adc
lahf
ljmp
mov
int
sti
popa
add
scas
scas
mov
je
push
push
mov
pop
daa
idivb
enter
sub
leave
and
mov
adc
xor
sti
xlat
push
cmp
loope
rolb
mov
outsb
rcrb
xchg
and
mov
mov
xlat
jno
rol
add
mov
mov
aad
dec
aas
mov
push
and
mov
or
adc
push
add
inc
dec
sub
ds
test
