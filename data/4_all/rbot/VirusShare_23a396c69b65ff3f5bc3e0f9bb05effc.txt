imul
and
movsb
mov
fwait
imul
lret
fmul
mov
dec
out
sbb
rcll
cmpsb
fisttpll
pop
loop
enter
movsl
fnsetpm(287
mov
orb
clc
mov
xchg
aad
adc
pop
dec
jl
sub
cwtl
xor
push
mov
sub
out
pop
sbb
fistl
in
leave
addr16
shlb
cmc
testl
fistps
inc
repnz
scas
inc
mov
jle
dec
mov
sub
insl
and
fidivl
ds
ljmp
push
sbb
aad
xor
out
cmpsl
xorb
xor
movsb
cmp
mov
or
mov
xchg
xor
enter
out
stc
dec
xchg
lret
ret
outsb
cmp
cmp
subb
ljmp
rorl
push
stos
cmpsb
jecxz
add
dec
call
das
mov
mov
jp
and
enter
sub
ds
ds
stos
add
clc
in
fs
imul
in
pusha
ljmp
movsl
hlt
cmp
sub
xchg
jge
arpl
nop
out
inc
cwtl
cmpsl
pop
lds
xchg
sti
les
aaa
mov
cli
mov
les
icebp
aad
sbb
jle
jecxz
inc
mov
data16
cltd
dec
inc
or
popa
or
jo
mov
loop
cs
fcmovbe
xchg
rcrl
jno
xchg
cmpsl
popf
adc
xchg
xchg
xor
dec
ss
mov
mov
pop
iret
stos
aam
or
jmp
xchg
paddusw
fsubrs
mov
ss
cli
repnz
jge
xchg
jae
push
xor
and
pusha
ds
xchg
ret
jmp
lods
sbb
dec
or
stc
aas
stc
faddl
ret
add
andb
sub
sub
sbb
aaa
cmpsl
fisubrl
and
divb
add
mov
xchg
rcrb
or
loop
popl
cld
sbb
mov
lock
xchg
stos
pop
pusha
jmp
cs
pop
push
mov
jmp
pop
ljmp
xchg
ja
ret
xchg
test
mov
pop
ds
sub
les
xchg
xor
rclb
mov
pop
xchg
icebp
movsb
std
mov
test
lret
push
adc
sahf
dec
notl
aam
movsb
leave
lock
shl
pxor
sub
and
sbb
cmp
dec
cmp
dec
push
mov
push
and
jmp
push
and
push
inc
sbb
js
aad
mov
inc
xor
push
roll
cli
into
push
test
push
fadds
cmp
mov
push
call
movsb
jl
cmc
jno
and
adc
dec
xchg
fwait
out
rclb
rcr
aaa
dec
aas
imulb
popa
aas
dec
bound
es
inc
mov
mov
cmp
lods
or
jns
movsl
hlt
lods
cmc
or
shlb
aas
cmp
int3
imull
mov
and
adc
int3
shrb
cld
add
lcall
pop
rorl
pop
lea
arpl
push
or
ret
in
scas
out
sub
and
leave
iret
and
or
ss
iret
sub
jo
shrb
mov
lret
dec
out
iret
rorb
mov
into
mov
jne
add
or
fs
test
dec
push
lock
into
xchg
push
scas
pop
mov
inc
jb
jnp
adc
xor
lahf
xorb
inc
negb
xor
jge
pop
mov
xchg
fs
mov
movsl
and
out
add
mov
int3
subb
out
mov
addr16
loop
inc
push
xor
or
pop
jnp
lret
clc
cmp
jno
xchg
dec
add
dec
in
push
lret
xchg
mov
pushf
and
in
into
xchg
ljmp
push
cmpsl
arpl
xchg
lahf
xchg
cmp
xor
inc
jbe
jg
xchg
lds
pop
dec
add
incl
mov
xor
mov
pusha
adcl
subb
and
lea
adc
push
in
test
test
ja
shld
cltd
mov
pop
push
movsl
cmp
jmp
sub
je
mov
lods
lds
lock
sbb
pop
sbb
xchg
iret
sbb
mov
out
cmc
jle
pusha
das
out
mov
out
icebp
scas
lods
es
sbb
inc
sub
push
push
ljmp
xlat
xchg
push
add
sbb
push
aam
pop
xchg
xchg
lret
xor
loopne
push
pop
bound
jae
insl
stc
pop
das
jl
push
sti
pop
mov
testl
dec
mov
xchg
loopne
sub
jae
mov
inc
pop
xor
xchg
adc
or
fdivrl
fsubl
es
into
cwtl
cmpsl
rorb
fsubrl
lock
jno
shr
cmp
fidivs
loop
jb
out
rcll
fcom
xchg
xorb
cmp
dec
imul
xlat
ficoms
push
dec
daa
sub
push
inc
rcr
insb
mov
out
xchg
std
stc
mov
imul
dec
outsl
xchg
xchg
test
pusha
gs
movsl
cmp
sbb
mov
sahf
dec
arpl
icebp
jo
dec
aad
jge
popl
pop
mov
pop
dec
loope
mov
cmp
adc
iret
inc
add
neg
sbb
repz
inc
push
xchg
jns
pop
jb
iret
push
mov
rcrb
pushf
testb
xlat
lds
es
jge
xor
test
or
clc
add
jg
arpl
or
shlb
adc
test
mov
or
out
mov
scas
fildl
loop
into
or
pop
movsb
jl
test
sbb
jg
sub
dec
jo
inc
addl
push
test
int
imul
in
aaa
std
fcompl
adc
xchg
leave
adc
pop
mov
cltd
jne
sub
or
jnp
lods
fldenvs
cmp
ljmp
xlat
mov
mov
stc
fwait
dec
int3
xchg
dec
lods
sub
add
cld
pusha
push
call
xor
jnp
add
pusha
xchg
jno
call
mov
and
aaa
push
test
xchg
sbb
sbb
pop
pop
lea
push
push
cltd
pop
pop
nop
xchg
clc
lea
loop
jecxz
pop
je
inc
sub
hlt
jae
arpl
sbb
rol
pop
add
push
je
test
pop
jb
test
nop
jne
add
jle
test
and
jl
and
call
cmp
push
rol
pop
push
jbe
add
pop
test
or
push
jne
sub
pop
or
pop
nop
stc
cmc
test
push
add
pop
test
test
mov
push
sub
pop
loop
jecxz
insb
scas
or
lods
jne
jge
add
cmp
js
and
test
dec
inc
add
jmp
pop
mov
mov
xchg
pop
pop
test
pop
push
or
push
in
mov
push
mov
pop
xchg
xchg
xor
sbb
pop
mov
jb
and
push
aaa
inc
xchg
dec
lcall
cwtl
adc
mov
cs
jae
lea
mov
push
push
mov
pop
pop
cmc
push
jns
push
mov
pop
pop
testl
jne
jmp
push
jbe
push
xchg
pop
pop
loop
jecxz
mov
dec
lret
add
push
shl
xchg
test
xor
add
lret
mov
cwtl
cwtl
shrb
mov
xlat
dec
pop
ss
push
mov
adc
add
sahf
js
dec
mov
fists
mov
xchg
inc
sub
cmp
push
add
pop
push
call
cs
cld
sub
xchg
mov
gs
dec
stos
sub
outsl
negb
xor
pop
xor
jmp
xchg
rorb
jnp
inc
dec
jne,pn
cld
rorl
push
pop
loop
mov
push
xchg
stos
inc
dec
jle
push
lea
imul
lcall
mov
out
insl
mov
rcl
cmp
test
gs
popf
xchg
std
daa
pop
data16
or
jbe
sbb
ljmp
shr
push
je
or
hlt
pop
push
pop
xchg
pop
push
push
add
pop
pop
push
push
push
shl
pop
pop
pop
or
push
call
rorl
mov
and
mov
in
jae
sbb
int
test
pop
outsl
jge
cmp
ja
or
mov
iret
and
push
push
add
pop
pop
push
pop
dec
jne
clc
ja
push
jo
jnp
or
pop
jmp
imul
test
jns
cli
push
sbb
sub
sbb
std
jns
xorl
sub
jne
rol
jmp
inc
and
mov
jne
pusha
push
push
dec
sahf
sbb
jp
dec
push
mov
pop
out
pop
mov
fstpt
dec
jecxz
jp
cmp
imul
push
pop
test
pop
mov
adc
add
mov
cmp
mov
std
inc
lods
sahf
fnstsw
lret
ss
mov
ror
cmp
movb
idiv
call
fwait
add
add
mov
int3
xchg
and
inc
test
push
insb
mov
jbe
xchg
cmp
scas
sbb
repz
xchg
mov
arpl
mov
pop
inc
mov
jns
mov
xor
sbb
ret
stos
jp
out
adc
inc
mov
adc
adc
adc
or
inc
dec
pop
loope
xchg
mov
mov
mov
add
rcrl
cmc
imul
add
imul
mov
push
loopne
in
in
add
pop
fdivrs
pop
je
int3
ds
pop
ljmp
out
sub
push
popf
ficomps
imul
cmp
mov
push
not
and
mov
out
arpl
enter
ja
icebp
out
ficompl
into
popf
xor
outsb
lds
lret
jae
insl
cmp
mov
xchg
icebp
les
push
fcmovne
push
sbb
push
mov
sub
sahf
hlt
shll
mov
iret
dec
sbb
aas
and
jbe
bound
dec
call
inc
std
inc
sbb
or
sbb
mov
dec
push
or
cmpsb
movsl
push
cwtl
cltd
sub
cmpsb
sub
push
jmp
in
mov
rcrb
hlt
mov
rolb
sbb
pop
pop
sbb
inc
mov
mov
daa
mov
int3
mov
push
lods
add
dec
mov
dec
bswap
and
mov
jmp
mov
in
test
sub
lret
mov
push
push
xor
cwtl
int
pop
fsubl
cmc
cwtl
inc
test
lods
jge
and
jl
inc
ficoml
mov
daa
or
repnz
daa
in
decw
inc
xchg
push
jle
ss
sahf
scas
mov
fidivl
mov
cmp
cmp
add
push
mov
inc
mov
and
mov
fmull
lret
mov
adc
cli
jb
add
nop
inc
xchg
push
cmpsl
loope
push
stos
inc
lock
mov
xchg
inc
les
lcall
lea
or
lahf
enter
les
push
fistl
iret
leave
std
cld
in
dec
movsl
mov
push
into
push
inc
fists
jl
mov
js
fistpl
jmp
fisttpl
adc
inc
inc
jae
inc
and
add
aam
xchg
push
xor
insb
mov
xchg
inc
outsl
mov
push
pusha
pop
xchg
and
daa
aas
scas
or
cmp
mov
jle
push
fsubrs
mov
pushf
aam
jge
ss
xchg
adc
lock
outsl
xor
stos
or
fwait
leave
push
and
xor
jle
pop
testb
and
inc
rcrl
jecxz
pop
mov
sub
jmp
rcrb
push
jmp
inc
xor
jne
cmp
jo
sub
fmul
cltd
push
mov
loope
movsb
sti
mov
es
adc
or
into
addl
in
outsl
cli
cmp
jno
pop
fdiv
jbe
or
mov
out
jno
fadds
cmp
pop
icebp
testb
imul
mov
loop
mov
fsts
mov
hlt
iret
and
mov
dec
cs
call
push
das
fwait
idivl
push
adc
xchg
and
mov
fnstsw
add
and
or
or
sub
pop
mov
pushf
movsl
cmp
dec
fcoml
push
pop
xchg
and
and
dec
mov
jecxz
dec
sbb
cmp
push
sbb
jmp
mov
push
arpl
das
sub
mov
mov
add
dec
ljmp
sbb
es
add
jne
mov
mov
cli
jmp
fimuls
mov
jmp
sbb
outsl
sub
gs
mov
xor
xchg
fadds
jbe
and
and
mov
jne
mov
pop
data16
sub
aas
in
fdivrp
cld
aaa
out
push
int3
cli
or
jl
pop
call
sbb
and
loop
sti
hlt
xor
repnz
fbld
fcoms
mov
xor
inc
jo
and
ja
or
inc
cmp
adc
adc
pop
repnz
inc
cmp
test
or
xchg
push
int3
or
popf
in
mov
or
lock
rol
ljmp
cmc
jne
sub
fisttpl
sbb
xchg
outsb
push
std
cs
push
shr
cwtl
call
call
call
popa
jns
clc
cmpb
adc
jae
cs
and
xor
inc
imul
adc
cmp
out
fwait
cli
xor
push
adc
jae
lcall
add
imul
int3
xchg
or
clc
sbbb
int3
add
jns
test
jo
leave
arpl
jnp
and
cltd
shrb
dec
pop
cs
jo
mov
push
mov
pop
scas
mov
push
pop
lret
cmpsb
adc
mov
fcomps
sub
cmp
adc
push
fildll
ror
push
gs
sub
or
mull
pop
sub
iret
xor
imul
mov
cwtl
repnz
cmp
pop
cltd
loop
mov
aam
and
jno
fiadds
cmpl
inc
mov
jecxz
sub
outsl
sub
in
jb
inc
jae
push
jge
aas
jno
dec
or
push
pop
mov
lahf
push
xchg
fwait
movsl
gs
pop
notb
cs
add
mov
inc
cli
rorl
aam
insb
fidivs
sbb
mov
and
adc
aas
mov
rorl
aad
imul
jb
fstps
in
add
std
add
stos
decb
lea
jmp
stc
mov
pop
inc
lcall
sub
repz
cltd
scas
test
mov
data16
cmp
inc
pop
inc
push
rcrb
xchg
mov
imull
mov
pop
dec
insb
lret
rcl
add
add
movsl
mov
mov
jae
mov
cli
dec
push
mov
aad
mov
pop
xor
in
dec
push
xchg
lret
cli
xchg
sub
push
inc
int
sbb
ficompl
sub
sub
cmp
ret
jae
sub
fxch
push
rclb
sub
inc
lods
push
sub
not
je
lds
jne
neg
out
inc
outsb
icebp
xor
icebp
stos
popa
inc
and
negl
mov
stc
push
idivb
jge
scas
xor
or
mov
jmp
les
xor
es
sbb
jae
test
cmp
fimull
add
inc
or
and
rcll
xchg
jno
in
pop
adc
fisubl
push
repnz
repnz
leave
clc
or
js
push
mov
pop
pop
mov
dec
adc
loope
int
jp
dec
mov
jmp
add
jo
jg
mov
rcl
je
or
cmp
pop
ss
icebp
movsb
jbe
sub
jl
sbb
frstor
loope,pn
ds
dec
fmull
adc
inc
ljmp
push
in
jp
repnz
add
cwtl
dec
movsl
addr16
in
sbb
and
loope
jb
jno
sub
imull
mov
push
pop
hlt
aam
adc
pop
sbbl
test
repz
movsl
ret
cmpsb
adc
lods
pop
lock
jp
mov
jo
inc
pop
aad
jecxz
jle
dec
xor
stc
sbb
sbb
pop
inc
sbbl
sub
fisubrs
cmp
cmpsl
lock
sti
xorb
or
add
pop
jbe
addr16
lahf
xchg
xorb
pause
ret
and
es
pop
cmp
stc
xor
push
push
sahf
mov
pop
push
imul
lea
movsb
jo
push
scas
pop
cwtl
jp
loopne
push
jb
jnp
repz
in
mov
leave
cmp
mull
push
inc
inc
jno
dec
dec
addr16
je
loope
xchg
outsl
push
ss
push
jle
ds
mov
in
out
outsl
out
leave
xchg
pop
jbe
dec
lock
inc
shl
movb
push
dec
fsts
or
inc
dec
test
popa
andl
add
jmp
sbbb
xlat
sbb
sub
xor
push
sub
sbb
insb
mov
je
scas
add
outsl
sub
into
insl
jge
aam
and
push
enter
pop
aas
dec
mov
lds
mov
lds
cs
jno
xorb
and
xlat
shll
push
fldt
nop
mov
xchg
ss
fstpt
pop
icebp
movl
add
out
or
push
jno
or
test
fldt
xchg
insb
and
pop
push
outsl
arpl
std
jecxz
enter
rol
push
cmpb
into
push
cmpsb
push
dec
jecxz
call
pop
idivl
cmc
mov
mov
sub
xchg
mov
inc
sub
mov
pop
or
je
aad
inc
and
cmp
mov
mov
or
lods
mov
int
dec
inc
mov
lods
loopne
aaa
add
std
jnp
cmp
mov
lcall
sbb
and
sbb
mov
ficomps
add
fistl
insl
ret
sarb
iret
adc
jb
pop
hlt
pusha
je
lret
cld
sarl
ficoml
cmp
mov
jmp
xchg
aaa
ljmp
jne
mov
std
rcll
lock
and
or
pushf
ss
hlt
jns
mov
and
pop
insl
inc
dec
ljmp
arpl
cmc
or
test
xchg
cld
push
mov
and
call
and
lds
add
arpl
leave
repnz
xchg
mov
fidivrl
test
adc
jae
movsl
lock
mov
subb
sub
in
lahf
das
rorl
pop
scas
xchg
and
dec
daa
aas
dec
adc
and
popf
in
or
push
jns,pn
fisttpl
xchg
in
hlt
popf
mov
and
dec
xchg
push
clc
stos
shl
push
push
fsubr
mov
movsb
dec
add
pusha
repz
shrb
add
mov
mov
jnp
es
out
mov
das
repz
xor
scas
ret
push
scas
pop
arpl
and
xlat
sbb
inc
and
icebp
leave
jecxz
popf
daa
out
or
and
lcall
cmp
shlb
adc
aaa
jmp
and
pop
jl
lea
or
idiv
or
or
mov
pop
inc
mov
fsts
sub
cwtl
cmp
pop
mov
mov
dec
or
or
push
pusha
or
pop
xchg
cmp
fbld
mov
dec
arpl
popa
jae
call
ror
jo
push
xor
into
inc
push
and
hlt
and
aad
lret
popf
pop
loop
xchg
out
cltd
push
cld
add
mov
lret
pusha
mov
aas
andb
or
mov
inc
stc
add
cmpb
adc
mov
aad
cmp
shll
add
lret
push
add
sahf
addr16
sub
lock
aad
inc
lret
jg
dec
push
sbb
enter
xlat
ret
ficompl
cmovp
mov
or
adc
fdiv
jp
pop
dec
push
stos
jbe
xchg
fstl
mov
cmp
imul
loope
sub
mov
xor
add
mov
sub
leave
rcll
sarl
jecxz
bswap
std
mov
in
xchg
pop
push
xor
popf
lret
mov
sti
mov
inc
repnz
jbe
adc
mov
jecxz
lea
push
xor
pop
mov
jle
jp
xchg
aad
xor
mov
scas
imul
jg
mov
add
pop
popa
inc
ret
jns
test
and
mov
sbb
aaa
mov
hlt
cli
aas
pop
mov
iret
mov
mov
test
xor
bound
ja
mov
cmpsb
data16
dec
adc
fidivrl
xor
or
cmpsl
cmp
pop
cwtl
jmp
aad
jg
lods
notb
xchg
leave
push
or
cmp
nop
test
sub
dec
gs
das
xchg
and
scas
sbb
mov
add
adc
shll
test
push
clc
test
push
ficomps
pop
fiadds
clc
dec
nop
out
test
mov
cmp
fbstp
xchg
insb
xchg
add
aas
push
lods
inc
pop
ss
mov
inc
fisttpll
cs
inc
push
movsb
ret
js
icebp
adc
mov
jns
sahf
ja
xor
ds
shl
orb
adc
dec
pop
mov
sbb
adc
int3
lods
fcmovnbe
push
test
mov
jno
aas
je
lcall
xchg
push
xchg
lods
std
mov
ret
inc
inc
cmpl
mov
mov
cmpsl
adc
xor
ret
outsb
lock
sub
ret
nop
movsl
cmp
add
ds
inc
mov
pusha
and
out
movsl
inc
push
sbb
push
in
inc
test
add
lods
call
adc
push
cmp
jae
lret
stos
fwait
cmp
adc
in
push
insl
outsl
sbb
mov
mov
push
mov
cwtl
sub
jb
cmp
jb
sub
shrl
imull
popf
push
jmp
jae
and
je
push
sub
jge
testb
add
out
scas
jp
push
pop
jne
push
mov
repz
cmp
sub
ret
push
hlt
bound
xlat
aad
add
pop
jno
mov
rcl
addr16
sbb
dec
pop
fsubl
xchg
ror
out
jmp
cmp
xchg
push
dec
push
pop
push
ja
lret
adc
jno
xorl
movsl
jp
fisubs
and
pop
jnp
or
std
sub
mov
add
dec
cmc
xor
cmp
lock
ljmp
jge
mov
pop
mov
ss
loope
jb
lods
and
cwtl
pop
in
sub
es
lahf
ds
pop
data16
jge
or
out
test
cmp
scas
mov
xchg
out
cmp
jbe
mov
cmp
sbb
pusha
push
pop
dec
or
pop
push
popa
inc
roll
xorl
xor
movsb
sbb
xchg
dec
ror
jecxz
cmp
jb
aas
adc
in
mov
push
inc
push
sti
cmp
sbb
jl
outsb
pop
cltd
mov
push
aas
fdivrl
sbb
out
fsubrs
mov
aas
aaa
dec
jno
mov
jns
inc
push
in
xchg
aaa
or
push
and
sbb
push
push
adc
add
scas
jl
and
fstps
cmp
nop
ljmp
int
push
xor
leave
ret
mov
push
push
scas
fs
push
lcall
mov
fwait
pushf
xor
lcall
hlt
out
mov
mov
xchg
shlb
jg
jmp
gs
inc
sub
ss
in
in
sub
loope
xor
dec
jno
lret
out
out
mov
pop
add
push
std
adcl
jg
stc
cmp
addl
sti
xchg
loop
pop
cld
jge
idivb
fistps
nop
cltd
scas
jg
fs
fidivs
pop
pop
cmp
cmc
sub
cmp
in
mov
out
ret
adc
in
pop
mov
sub
clc
ret
dec
dec
shrl
insb
adc
cmpsb
cmp
inc
shl
test
stos
enter
dec
lea
cld
fucomip
dec
jge
mov
jb
push
ljmp
stc
loopne
sbb
jle
jle
lods
ds
mov
mov
sbb
ret
rcr
out
sbb
jmp
imul
fsubs
loopne
ja
cmp
lods
daa
int3
jne
outsl
xchg
aas
dec
shrl
sti
and
lock
and
inc
pop
jbe
or
and
or
sahf
and
pop
mov
push
shl
xor
scas
insb
mov
sbb
test
inc
add
test
jge
mov
xchg
testb
cmpsl
movsl
sbb
out
push
cmp
dec
fisttps
clc
xorb
dec
dec
push
pop
aaa
inc
cmc
or
and
lds
ror
rorl
push
repnz
inc
pop
sbbb
imul
std
lcall
lods
stos
or
mov
stos
arpl
add
out
pop
icebp
jp
pop
daa
js
fstpl
xor
ret
cmp
xchg
cmp
cmp
inc
gs
aam
lds
aad
push
in
sub
and
dec
icebp
ljmp
push
in
adc
imul
decl
jnp
jns
imul
push
mov
jmp
pop
iret
cmp
adc
and
mov
adc
xor
cmp
sbb
aam
lods
inc
inc
sahf
xchg
daa
xor
jae
push
fimull
aad
scas
inc
insl
mov
es
xor
pop
cmpsl
shlb
fwait
inc
xor
out
xchg
sbb
push
lods
xor
fsubrl
cltd
fidivs
xchg
scas
lods
and
pop
nop
xor
gs
fadds
test
ss
mov
ljmp
jmp
inc
push
incl
ficomps
dec
es
out
out
decl
jae
xchg
xor
adc
cmpl
pop
push
mov
jnp
test
ljmp
negb
mov
cmpsl
adc
ficoml
int
sub
sub
mov
xchg
add
fs
arpl
jg
ffree
dec
out
inc
mov
pop
test
divl
mov
jmp
loope
fsubl
scas
test
fs
lea
in
loopne
mov
aaa
pop
dec
add
popf
adc
out
xor
mov
repnz
lahf
xchg
cwtl
mov
nop
xchg
fdivr
mov
insl
stc
mov
ja
lods
push
hlt
rcl
push
dec
fs
inc
les
xor
cmpsb
inc
arpl
out
xchg
lcall
pop
pop
xchg
adc
inc
dec
psubsw
jecxz
in
mov
clc
sub
dec
sbb
cltd
out
lea
adc
inc
pusha
push
in
adc
and
loop
dec
pop
scas
push
inc
enter
mov
mov
xor
xlat
xchg
jno
mov
movsl
insl
adc
sar
mov
sti
mov
data16
fwait
add
add
movsb
mov
jle
pop
jo
cmpsl
andb
popa
in
jmp
pop
dec
cmp
insb
pop
pop
push
xor
insl
add
lea
mov
adc
push
pop
or
mov
xchg
sar
pop
jns
jle
fbstp
ja
xchg
mov
movsl
pop
mov
jecxz,pt
sbb
shlb
or
fistpl
cmp
bound
inc
nop
add
push
sti
jmp
arpl
cmp
xchg
mov
mov
fnstcw
gs
add
leave
mov
and
mov
mov
imul
add
pop
push
or
addr16
pop
pop
pop
stc
lea
push
adc
nopl
xlat
xor
sub
mov
or
push
pop
push
loop
mov
imul
inc
xor
sti
jbe
cmp
cmpsb
jae
dec
les
mov
xchg
shrl
imul
pop
xor
test
mov
into
xor
ret
mov
add
pop
inc
jle
jecxz
mov
xorl
je
ret
jbe
jno
sbb
sti
subb
enter
cs
cmp
loop
addr16
pop
inc
aas
xchg
xchg
insb
mov
arpl
jecxz
ret
xchg
pushf
sbb
push
je
loopne
inc
pushf
xor
in
adc
xchg
sarl
mov
dec
dec
stos
imul
pop
dec
outsb
mov
aaa
add
mov
lcall
call
cmpsb
loope
jo
pop
jo
insl
daa
mov
dec
ljmp
lods
andb
sbb
lods
mov
mov
or
sarb
imul
mov
out
pop
enter
icebp
daa
iret
cmp
dec
mov
sti
push
pop
cs
mov
scas
dec
bound
jne
jne
std
push
add
les
data16
jmp
mov
lods
hlt
mov
sub
test
mov
dec
shl
pop
and
or
jg
sub
pop
sahf
pushf
daa
sbbl
mov
sub
push
leave
js
scas
outsb
cmp
rcr
xchg
cmp
loop
pop
xchg
daa
adcb
pop
push
in
js
dec
jge
adc
fildll
and
xchg
adc
pop
jl
pop
inc
lods
call
inc
ja
mov
pusha
cs
xchg
test
pop
pop
test
cmp
aad
ret
xchg
mov
push
test
leave
dec
mov
jmp
nop
sub
add
dec
pop
bound
fs
xchg
mov
xlat
jp
stc
inc
jecxz
ret
fwait
push
adc
inc
mov
jno
fdivrl
sub
es
and
push
mov
lock
loop
fxch
in
fcomps
fidivs
scas
aaa
iret
mov
imul
arpl
call
pop
sbb
push
push
dec
cmpsl
mov
arpl
stc
call
sub
dec
sbb
jbe
out
xor
xchg
jp
nop
push
jecxz
cltd
add
push
bound
xor
mov
insb
dec
sub
arpl
cmpsl
fdivs
es
cli
sbb
bound
cwtl
popa
scas
or
jmp
dec
push
inc
jl
je
push
push
cli
or
pop
jmp
mov
xchg
shll
jo
imul
nop
xchg
iret
ret
add
xor
inc
dec
out
mov
jge
mov
ret
fcmovbe
add
sbb
sar
movsb
cwtl
jno
in
mov
cmp
xchg
dec
jno
xlat
inc
and
mov
inc
gs
push
insb
jmp
push
mov
enter
add
xchg
cmp
mov
mov
fcomps
mov
sbb
shlb
movsl
mov
push
inc
sub
xor
push
push
or
insb
fdivl
jb
jmp
cmc
push
or
outsl
jnp
or
shlb
shl
int3
js
mov
push
and
mov
mov
jmp
js
mov
adc
push
mov
les
xchg
pop
imul
ds
push
mov
das
std
inc
iret
add
es
and
mov
fnstcw
sbb
sub
dec
icebp
idivb
sbb
fidivrs
lods
pop
das
mov
pop
adc
jnp
int3
test
std
ss
es
aad
imull
outsl
xor
call
inc
mov
jmp
push
push
xlat
xor
push
das
dec
sub
inc
pop
or
push
mov
adcl
mov
sbb
fwait
mov
data16
insb
sub
adc
pop
mov
push
lret
pop
push
imul
and
test
mov
jge
stos
icebp
add
std
and
mov
lret
dec
inc
add
inc
xchg
xor
sub
stos
repnz
xchg
xor
iret
dec
shlb
scas
adc
sti
jno
lret
pop
stos
mov
cmpsl
ljmp
and
test
and
repz
cmp
push
ret
and
jl
push
cmc
cmpsl
jbe
mov
pop
mov
cmpsl
in
movsl
dec
aad
insl
xlat
aad
mov
outsb
gs
mov
jbe
lods
outsb
test
adc
fldl
sub
xlat
pop
inc
jnp
sahf
push
addr16
popa
jle
js
inc
stos
push
movsl
and
xchg
and
cmc
or
adc
pusha
jp
adc
ficoml
mov
test
push
xchg
inc
dec
add
les
inc
inc
or
lret
cmp
das
iret
test
push
mov
adc
fcompl
sarl
imul
xchg
fimull
mov
insl
push
jo
test
sti
inc
jae
or
flds
pushf
pop
fimull
fadd
das
mov
popa
adc
cwtl
inc
out
int
into
mov
sub
outsb
cmc
pushf
mov
lea
or
je
add
pop
loop
dec
or
cmp
and
daa
fistps
pushf
or
mov
cmp
out
cmp
dec
or
mov
mov
adc
pop
lods
or
sub
push
adc
mov
pop
stc
call
jg
in
adc
mov
in
adc
jmp
inc
icebp
pusha
mov
mov
and
fisubs
dec
sbb
cwtl
hlt
ja
incb
sbbb
fsubrl
fs
inc
imul
test
addb
cltd
test
dec
faddl
mov
stos
orb
mov
and
pushf
xorl
pop
xorb
mov
or
cmp
outsb
aam
inc
mov
in
pop
sarl
repnz
dec
lret
adc
dec
es
sbb
mov
nop
pop
inc
test
into
loop
pushf
push
scas
addr16
pop
daa
std
cs
mov
mov
cmp
add
test
mov
mov
add
popf
push
push
rcl
pop
jl
movl
rolb
test
shlb
inc
sub
mov
adc
sub
jno
inc
mov
jo
movsb
fsubr
andl
fisubrl
into
adc
rolb
icebp
xor
mov
or
aam
xor
add
inc
movsb
xor
arpl
insb
sbb
sub
xchg
addl
cmpsl
sub
aas
jmp
pop
gs
fdivrl
xchg
fiadds
cmp
int3
js
out
sbb
xchg
sbb
and
bnd
iret
std
mov
dec
xchg
or
jmp
dec
or
push
or
push
xor
enter
push
sbb
jg
inc
test
mov
dec
inc
mov
sub
cwtl
sub
pop
sub
pop
inc
or
stos
xor
int3
jns
pop
xor
pop
mov
out
aaa
dec
out
hlt
loope
cmp
dec
je
and
ret
push
adc
lret
scas
mov
rcl
lret
in
cmp
push
sbb
pushf
jbe
dec
daa
stos
sbb
sub
xchg
xorb
jg
movsl
into
nop
xchg
adc
inc
aad
mov
testb
mov
popa
fucomp
xor
rcrb
cmp
hlt
insl
insl
add
jo
jp
pusha
daa
repz
int3
pop
fimuls
pop
inc
push
and
xchg
pop
leave
pop
cmp
in
out
jb
int
or
ficoml
ret
push
imul
hlt
push
pop
mov
sarl
pop
push
aam
ret
inc
pop
mov
int3
push
cmp
rorb
pop
jg
imul
cli
pop
cld
fsubr
test
mov
xlat
pop
push
cmpsb
push
mov
ljmp
inc
xor
cs
sti
int3
dec
pop
sub
sbb
shr
cmpsl
dec
imul
insl
add
dec
repnz
jne
outsb
outsl
les
shlb
pop
and
add
pop
data16
in
pushw
or
xor
inc
test
imul
and
mov
mov
mov
inc
adc
pop
in
mov
popf
mov
pop
icebp
int
negl
push
lds
hlt
adc
mov
cltd
lods
xor
les
mov
xor
in
mov
jmp
aas
ficoml
icebp
push
sbb
add
mov
aas
cmove
mov
shl
xorl
lods
and
rorb
inc
mov
add
aas
mov
mov
fmuls
lods
enter
sub
push
dec
js
and
dec
pop
lods
push
insl
icebp
hlt
frstor
pushf
pushf
int
pop
idivb
cmp
push
jne
repz
dec
adc
popf
add
xchg
out
mov
jno
or
fnstenv
push
mov
add
and
jmp
test
xchg
insl
test
int3
ss
push
jle
out
jno
dec
sbbb
in
push
jecxz
imul
dec
aas
pop
or
jl
rcrb
or
dec
repz
xchg
and
add
mov
jmp
xor
imul
mov
in
sahf
add
mov
jle
ljmp
mov
std
cmc
jecxz
push
sub
shll
je
jp
pop
dec
daa
push
pop
fcmovnb
cs
imul
pop
or
inc
addr16
xor
fld
xor
jo
les
pop
sbb
dec
and
inc
cmp
cmpsl
xor
cmp
pop
adc
es
inc
out
lock
push
push
pop
js
xor
inc
sbb
popa
xchg
sbbl
cmp
loope
data16
icebp
fwait
inc
aas
sub
push
cmp
shll
leave
cltd
popf
xchg
jmp
movsb
fnstsw
ret
in
fisttpll
jne
testl
faddl
fwait
cmp
int
std
es
rcl
xor
mov
dec
inc
cmpsb
sub
es
pop
loop
dec
push
mov
out
xor
pusha
fistpl
inc
mov
mov
pop
into
push
popa
ror
adc
cld
or
mov
addr16
movl
xchg
ljmp
scas
test
in
jno
aas
fcmovbe
fisttps
pop
xlat
cmc
bswap
push
or
jp
sub
sbb
push
lods
clc
rorl
add
rcrl
imul
movsl
dec
dec
xor
cmp
jbe
jle
pop
xchg
mov
sub
jl
movsl
dec
test
ret
or
jl
jbe
xor
clc
push
sbb
add
xor
mov
sbb
in
nop
dec
fcomi
inc
lods
mov
mov
faddl
mov
adc
adc
icebp
sbb
imul
xor
or
add
inc
or
imul
jecxz
xchg
dec
dec
sbb
push
cmp
xor
jnp
mov
mov
loop
add
and
divl
movsb
xchg
inc
inc
stos
pop
lret
adc
scas
pop
scas
xor
pop
enter
scas
in
jns
lahf
cmpsb
ss
jl
xor
sub
jge
mov
add
dec
std
push
jl
cmp
outsb
in
sti
stos
loop
inc
loope
dec
push
jae
dec
add
fisubs
sbb
mov
mov
dec
js
arpl
inc
adc
or
push
or
push
iret
lcall
mov
into
cwtl
subl
and
mov
inc
int
push
jbe
inc
std
mov
adc
jg
arpl
dec
mov
sbb
into
mov
jb
cmc
mov
lods
inc
outsb
mov
xor
aad
xchg
or
adcl
popa
jecxz
dec
cmp
bound
daa
dec
adc
add
out
loopne
je
dec
fimull
cmp
fnstenv
or
xchg
jecxz
jno
cmovne
popf
xor
and
nop
sub
xor
xchg
pop
rcrl
and
xchg
push
and
out
sub
das
or
fs
jl
inc
pop
mov
js
fwait
into
mov
lods
imul
cwtl
dec
aaa
lret
inc
xchg
aas
xchg
adc
ss
mov
lods
jbe
mov
mov
icebp
sbb
xlat
rclb
mov
dec
add
arpl
repnz
out
sahf
daa
cmpps
fwait
sti
cmp
dec
xor
add
lcall
mov
pop
pop
cmp
jb
lret
mov
enter
out
sub
adc
leave
push
or
add
jecxz
pop
cmp
cmpsb
lahf
call
or
inc
and
js
push
pop
xor
inc
xchg
mov
fistl
insb
inc
sbb
mov
aaa
pop
jb
cmc
push
add
mov
dec
xor
cld
jne
xchg
decl
and
popf
and
mov
pushf
lods
pop
pop
adc
or
int3
lret
rcrb
mov
jnp
aas
inc
inc
fidivrs
push
dec
in
push
jp
xchg
aaa
ret
add
out
clc
lret
rol
andb
bsr
call
xlat
adc
mov
sbb
out
sbb
mov
xchg
dec
jae
pop
test
int3
cld
push
fcmovb
jge
lock
mov
sub
xor
lods
mov
pop
mov
inc
inc
pop
mov
mov
aaa
xchg
int
or
mov
enter
lcall
pusha
jle
adc
push
shlb
vcmpss
or
mov
lods
push
lahf
inc
and
daa
cmp
les
sbb
aad
jno
incb
ds
pop
cmp
push
int
into
lock
push
dec
add
mov
in
lahf
xchg
repnz
mov
cld
ds
sub
xchg
cs
xlat
xor
add
idivb
arpl
mov
mov
leave
mov
fiaddl
sub
ficompl
sub
push
ficoms
fdivs
mov
test
adc
xchg
adc
pop
mov
into
add
fadds
mov
or
pop
pop
or
sbb
xchg
stos
nop
hlt
mov
xchg
cli
xor
xor
add
push
push
push
imul
cmc
mov
loopne
cmp
pushf
jae
pusha
jmp
xchg
daa
std
xchg
inc
and
or
jbe
and
cmp
in
addb
or
xchg
mov
cwtl
or
xor
insl
add
lds
outsb
in
dec
and
inc
rcl
push
push
cmp
add
xchg
lret
push
jg
jo
mov
mov
xchg
aam
movsb
lahf
inc
andl
mov
pusha
jb
cltd
xorl
lret
jmp
ljmp
fmull
shr
dec
shll
cs
sbb
mov
cld
js
push
push
aam
push
repz
or
cli
mov
or
xor
jno
pop
lock
pushf
scas
repz
push
mov
orl
push
inc
adcb
xor
iret
sub
sbb
data16
fs
and
hlt
adc
sub
and
outsl
mov
mov
cmp
aam
sub
fucomi
adc
movb
mov
inc
sbb
adc
cmp
mov
rcrl
pop
ss
pop
and
in
mov
rolb
out
xchg
fisubs
out
push
push
xchg
inc
mov
fstps
xchg
push
data16
cmpsb
cltd
add
clc
cmc
mov
add
dec
push
pop
fmulp
mov
ds
mov
adc
pop
cmpsb
mov
inc
test
inc
mov
jb
jb
loopne
stos
std
rcll
pushf
fistpll
out
out
xor
xchg
lods
lret
mov
int3
addr16
mov
sub
sub
xor
and
fwait
and
cmc
or
pop
nop
and
stos
sub
adc
ret
stos
cmp
add
dec
test
and
or
bound
aaa
mov
mov
xlat
test
cmp
test
dec
or
decl
add
mov
xor
mov
in
mov
dec
mov
push
pop
pop
cs
dec
push
scas
inc
add
popf
mov
xor
inc
jnp
xchg
in
adc
test
adc
xchg
ret
outsl
and
inc
xchg
xchg
popf
inc
int3
hlt
insb
push
lea
xor
out
lods
jp
cmp
mov
mov
xchg
push
xor
insb
cmp
and
cmpsb
jns
push
mov
or
sbb
fidivrs
xchg
or
dec
cmp
pop
sbb
sub
pop
ljmp
cmp
sub
insb
jg
jb
jle
loop
pushf
push
add
mov
das
push
or
and
insb
les
mov
popf
dec
pop
mov
mov
aas
aad
pop
add
std
jecxz
in
cli
dec
ss
mov
icebp
test
mov
and
mov
sar
jns
sbb
popa
inc
loopne
cmpsl
xor
xor
cli
je
push
push
cmc
adc
adc
mov
push
pop
sbb
fdivrl
mov
mov
test
cmp
rclb
stos
int3
mov
sbb
mov
and
jle
out
clc
jecxz
mov
mov
add
push
stos
jo
dec
pop
pop
mov
mov
push
and
pop
ret
dec
adc
jns
pop
pop
jnp
lahf
mov
push
lds
cmp
pop
pop
mov
dec
jo
add
frstor
sub
mov
fs
scas
scas
xchg
enter
xchg
cld
int
dec
inc
push
loope
test
roll
and
shlb
xchg
insb
mov
fstpl
aam
test
or
popf
lret
dec
dec
and
cmp
shrl
mov
push
cli
cmp
jmp
jb
lock
pop
xlat
rorb
shlb
movsl
and
aaa
ja
aaa
pop
lret
loop
push
insl
lcall
jl
je
lcall
jecxz
scas
push
pop
test
rcll
scas
jg
cmpsb
scas
push
jp
movsl
pusha
xor
cmc
mov
aaa
sbb
test
lret
into
sahf
out
jne
add
repnz
and
pop
addr16
leave
dec
sbb
sbb
jecxz
mov
in
jg
iret
data16
mov
sub
andb
xchg
stc
jb
jg
pop
pop
pop
faddp
add
sub
ret
cmp
int
stc
or
or
and
mov
sbb
stc
lods
sarb
cmp
out
inc
std
jae
leave
inc
sbb
push
push
pop
mov
pop
sbb
and
testl
cli
jp
or
inc
mov
jae
jecxz
sbb
add
mov
call
dec
jbe
jecxz
xlat
pushf
ds
fwait
test
jne
insb
jae
sub
adc
fidivl
ret
jbe
sbb
and
inc
add
ljmp
and
imul
push
mov
out
leave
push
or
or
aaa
jmp
movsb
orb
mov
imul
mov
fdivl
cmpsl
mov
cld
lock
lea
pop
outsl
xchg
imul
imul
ret
sub
fcom
inc
and
mov
sbb
or
cmpsb
movb
and
lcall
mov
mov
fs
sbb
jmp
andb
inc
add
mov
test
pop
int3
test
mov
push
loopne
inc
jb
pop
push
lods
ss
add
loop
xlat
or
insb
pop
daa
or
jl
daa
jnp
pop
jae
xchg
add
pop
mov
loope
out
adcl
mov
fwait
das
enter
push
pop
stc
sbb
inc
repz
fnstsw
jb
jno
outsb
sbb
cld
add
sbb
cld
mov
sbb
repz
bound
sub
dec
jae
cmp
adc
mov
addb
sbb
adc
xor
sbb
pop
adcl
push
daa
mov
pop
out
push
imul
xchg
adc
or
pop
icebp
fimull
mov
push
push
mov
out
mov
xlat
or
hlt
inc
mov
lock
pop
lds
dec
daa
mov
mov
dec
rolb
sbb
ds
scas
scas
int
jbe
jo
out
xchg
jne
cmp
std
push
xor
dec
lods
orl
testl
dec
xchg
popa
dec
or
cld
xor
jb
lds
or
jne
add
loope
mov
inc
inc
jg
popf
xor
jne
xor
jg
fiadds
add
adc
jmp
push
fdivrs
arpl
fstl
pop
jg
push
and
lahf
push
lcall
sbb
outsl
or
adc
pop
mov
rcr
sahf
mov
inc
ret
in
push
inc
adc
stos
jge
adc
pushf
sub
mov
dec
iret
mov
pop
cmpps
jge
adc
repz
fdivr
movsb
inc
mov
andb
mov
loope
bnd
lahf
xchg
pop
or
out
sbb
xor
inc
inc
fistps
jo
ja
and
jo
aad
push
mov
cmp
xchg
inc
push
mov
mov
pop
fiaddl
xchg
popa
mov
ljmp
jno
shrb
test
mov
enter
pushf
lret
fcompl
test
popf
dec
js
mov
mov
lcall
mov
aas
jnp
inc
pop
aam
cmpl
xor
and
lea
hlt
shll
loope
ds
insb
imul
sub
push
mov
mov
loope
fs
pop
cmp
mov
cmpsb
fldcw
test
sbb
add
cmpsl
sbb
enter
pop
jmp
jmp
mov
cmp
jge
and
mov
cwtl
push
jg
xchg
rol
and
jns
add
mov
call
repnz
sub
int3
and
lcall
mov
add
mov
sub
outsb
add
or
stos
lcall
sbb
sbb
pop
jmp
fimull
repnz
xchg
cltd
mov
jnp
pop
cmc
cmp
cltd
dec
flds
mov
jbe
mov
subb
inc
repnz
dec
call
sbb
lret
cmpsb
pop
sahf
shrb
mov
or
rcl
cmc
mov
popa
mov
pusha
inc
mov
in
lret
lea
out
jp
fsubs
push
fldcw
in
loop
xor
enter
xchg
insb
mov
repnz
mov
repz
mov
and
in
inc
push
scas
inc
jo
movsb
cmpsb
repnz
mov
outsb
outsl
scas
fisttpll
insl
adc
sub
jge
out
and
das
mov
daa
fwait
jle
cld
xchg
pop
lds
sub
repnz
or
jmp
aas
jge
adc
sub
idivl
push
lahf
xrelease
fsubp
leave
cli
or
cltd
into
adc
dec
orl
sub
mov
xlat
push
xchg
push
mov
inc
clc
pop
or
mov
sbb
pop
lret
sbb
jmp
gs
rolb
loope
adc
aad
sbb
cmp
push
and
neg
mov
jg
js
mov
sub
lret
imul
aam
and
push
pop
leave
xlat
push
xor
test
incb
movsb
cmp
fs
stos
pop
test
je
js
or
fwait
dec
aas
fstpl
addl
dec
jmp
lea
or
icebp
or
call
into
ss
insb
sub
jp
xchg
pushf
cmpsl
in
ret
mov
std
adc
clc
loope
rclb
dec
cmp
testb
mov
dec
push
in
bound
ja
sub
es
pusha
loopne
pop
fildl
push
int
roll
ljmp
cmp
xchg
jno
jb
mov
sbb
pop
dec
nop
dec
rcrl
pop
xchg
int
mov
es
cmp
adc
sub
jle
mov
jo
lcall
sbb
fucomip
pusha
stos
test
dec
sbb
push
mov
bound
jb
daa
fcomps
cmpsb
scas
cmc
mov
in
xchg
jnp
and
jge
xchg
imul
and
mov
inc
cmpsb
icebp
pop
mov
ret
push
movsb
cmp
mov
jo
fidivrl
or
lahf
xor
dec
mov
in
aad
cmp
xor
mov
inc
and
cltd
and
subb
test
xchg
out
cmc
pop
jg
push
jmp
add
sbb
in
or
lds
hlt
inc
inc
icebp
and
and
arpl
in
or
fidivs
jp
cltd
pop
movsl
jmp
pop
xorb
sti
test
push
pfrcpit2
dec
xor
jg
inc
or
sub
xchg
sbb
mov
ds
shlb
sub
mov
les
jae
xchg
fnstsw
sub
lahf
adc
push
xchg
pop
cwtl
mov
xor
sti
push
mov
ret
fwait
xchg
cwtl
std
int3
jle
into
fldt
shl
cmp
lods
or
popf
adc
jp
xchg
lods
cld
sarl
nop
testl
jle
test
mov
dec
jnp
push
xchg
xchg
jb
add
jnp
jge
or
xorl
inc
mov
pop
addr16
lods
mull
rorb
out
cli
mov
dec
push
or
decb
pusha
rcll
in
bound
xor
popa
mov
mov
jg
out
in
xchg
fidivl
les
andb
mov
cs
adc
add
je
mov
ljmp
daa
jge
sbb
es
lahf
inc
sarb
out
pop
outsl
xor
pop
out
and
add
movl
push
mov
sub
addl
cmpsl
addr16
scas
cld
pop
std
sbb
insb
popf
mov
or
or
adc
rcr
and
push
ljmp
sbb
push
ss
push
movsb
les
leave
fsubs
scas
pusha
adcl
iret
stos
add
mov
in
push
sbb
rcrb
xchg
xchg
dec
or
les
inc
fsubrs
lods
sete
inc
test
lret
jns
stos
aaa
mov
mov
outsb
lds
fidivrs
dec
cmp
mov
push
hlt
cli
sbb
or
mov
mov
mov
sub
push
jnp
fwait
notl
lea
lods
imul
add
mov
xor
and
sbb
push
repz
roll
test
nop
es
lcall
sub
pop
bound
jmp
sahf
lods
push
add
testl
sbb
xchg
or
xorl
or
mov
lcall
xchg
test
in
xor
dec
fistps
pop
cltd
shlb
inc
sbb
push
push
fninit
lods
lahf
test
jno
adc
push
add
xorps
aaa
push
cwtl
lret
les
lahf
jle
dec
rclb
or
add
aaa
xor
hlt
inc
pusha
enter
pop
push
mov
sub
loop
xchg
in
insl
ljmp
sub
sub
jo
pop
lods
xchg
jne
pop
outsb
dec
cld
out
jae
pop
mov
pop
mov
inc
in
add
shrb
mov
mov
pushf
sbb
test
sub
in
aad
shl
pushf
stc
into
out
pushf
aas
enter
inc
dec
jle
xor
xor
sahf
mov
lods
rorb
out
stos
or
pop
fnsave
loopne
insb
cmp
int
xchg
insb
mov
jge
mov
push
push
sarb
insb
sub
mov
adc
push
xor
xlat
or
stc
fildl
fidivrs
scas
sbb
scas
push
dec
jle
lods
mov
out
xchg
mov
mov
xchg
sti
loopne
or
mov
dec
add
lret
test
in
xchg
mov
sub
les
push
jp
jb
subl
mov
insb
adc
sub
sbb
movsb
in
rolb
inc
mov
pusha
inc
sub
loopne
in
pop
fimuls
das
lcall
pop
push
xor
cmp
repnz
add
pop
roll
pop
aam
rclb
pushf
push
xchg
out
lods
mov
mov
icebp
and
push
mov
lods
dec
push
push
jo
sub
xchg
cmc
pop
call
and
cld
pop
mov
sbb
mov
movsb
xor
pop
push
xchg
int3
pop
leave
out
jle
ljmp
enter
jmp
fld
out
push
and
dec
xor
push
jnp
sub
push
or
mov
push
mov
aam
gs
cmp
lods
mov
popa
jp
xchg
adc
jmp
inc
mov
sbb
test
ror
lea
adc
stos
mov
call
dec
pop
scas
arpl
je
stc
cmp
and
sbb
mov
add
ficomps
cmp
shrl
je
js
in
cmpsb
push
cld
dec
push
jns
sub
adc
out
dec
in
xchg
pop
cmp
jnp
push
jne
dec
negb
insl
stc
mov
pop
add
clc
xor
dec
push
ds
movsb
inc
faddl
fistpl
mov
leave
es
cmpb
sub
dec
gs
cmp
push
and
cmpsb
and
sahf
cmc
pop
mov
outsb
cmp
cmp
movsl
dec
or
hlt
jecxz
ret
sub
je
sub
shrb
or
or
xor
cmpb
data16
xchg
ret
cltd
mov
inc
and
std
mov
push
cmpsb
inc
ret
cwtl
lret
mov
popa
aam
mov
test
fsubs
mov
sti
jne
pop
cmp
sub
or
lds
or
rcll
int3
push
in
lods
push
arpl
rcr
lcall
sub
rolb
push
sub
in
sbb
out
dec
mov
adc
or
icebp
pop
inc
jmp
dec
sub
out
dec
in
in
movsb
das
cwtl
movsl
idivl
xchg
xchg
imul
dec
clc
insb
jmp
sbb
shrl
pop
bound
dec
test
adc
jmp
notl
mov
sbb
lret
popf
enter
out
sbb
jl
jnp
jg
cmp
enter
xchg
and
cwtl
je
inc
dec
data16
mov
pop
xchg
mov
into
test
stos
add
xchg
sbb
fcomps
mov
pop
sbb
daa
mov
mov
cmp
ds
jnp
push
fadd
xor
popf
inc
and
inc
lock
push
aam
push
add
dec
jg
enter
jo
rol
pop
push
fistl
inc
dec
mov
adc
aam
into
cmp
leave
mov
inc
cmp
mov
scas
out
popf
popf
sub
sub
lea
movsl
pop
inc
sbb
repnz
mov
push
jl
out
repz
jge
xchg
adc
cld
dec
jbe
ljmp
xchg
cmp
out
mov
xchg
pop
mov
sti
mov
ds
xor
pushf
mov
das
or
dec
insb
pop
mov
jae
call
aad
xlat
mov
pop
mov
push
scas
jbe
out
es
adc
data16
xchg
pop
dec
mov
xchg
loop
mov
xchg
sbb
jmp
cmpl
or
mov
cmp
pop
or
lahf
inc
ja
jo
test
outsl
sarl
shl
int3
data16
subb
in
sbb
es
notl
adc
cmp
add
inc
sub
mov
subb
inc
add
or
dec
imul
fsub
and
or
in
jle
stos
jno
jmp
push
loopne
bound
scas
adc
cmp
dec
fcom
aas
dec
psllw
sbb
testb
pop
out
ja
jl
add
neg
cmp
adc
sbb
jl
push
jge
adc
pop
push
cs
push
roll
cmp
dec
cbtw
pop
lcall
int
jnp
jbe
sub
andb
push
shll
add
mov
popa
fimull
push
ja
outsl
test
push
add
sti
lock
mov
mov
sbbl
jo
in
loopne
loopne
or
jmp
jl
test
nop
and
pusha
xchg
dec
add
daa
nop
es
in
popf
xlat
or
inc
js
inc
sbb
mov
jns
cmc
and
dec
in
ret
push
and
dec
mov
adc
jbe
ljmp
jae
cmp
out
xchg
arpl
or
push
lret
movb
rcll
pop
cmp
inc
out
sbb
dec
test
push
push
daa
ljmp
sbb
dec
cmp
push
xor
shll
sbb
lea
jo
xchg
push
arpl
lock
cmpb
test
fs
or
cli
out
dec
or
js
inc
lods
ret
and
inc
cwtl
shrl
icebp
push
ror
cs
cmp
push
or
decb
pop
imul
es
lret
imul
shll
lcall
enter
xorb
and
mov
push
sbb
ja
shrb
pop
pop
movsl
mov
push
inc
inc
das
and
adc
inc
jl
sti
adc
pop
pop
jbe
jno
fistpll
pop
inc
inc
and
jg
mov
cltd
push
dec
pop
xor
mov
stos
or
jo
icebp
xchg
clc
jbe
jle
jae
mov
fstps
dec
jnp
addr16
push
test
adcl
ret
adc
pop
js
addl
fsubl
mov
mov
xchg
add
test
js
repnz
aad
jg
xor
fists
lods
mov
inc
rclb
cmp
xor
imul
divb
mov
shr
and
xchg
je
mov
cmc
jge
and
in
mov
scas
mov
cmp
nop
roll
mov
mov
popf
mov
inc
cmp
stos
pop
imulb
gs
pop
rcr
aaa
lret
jg
lock
jmp
shl
sub
xchg
jo
adc
jle
daa
mov
push
fs
inc
ljmp
cmp
fldl2t
adc
lock
push
pop
aam
lods
fistpll
inc
aaa
xor
fdiv
push
cli
pushf
jne
test
or
push
mov
pop
xchg
scas
mov
jo
popf
mov
xchg
xlat
add
jns
loop
push
iret
or
jb
iret
fldt
lahf
loope
aad
insb
dec
sbb
and
cli
sub
and
inc
hlt
fiaddl
test
scas
pop
mov
and
lcall
iret
xlat
inc
ror
call
ja
sbb
repz
push
push
outsl
or
cmpsl
sbbl
int3
push
lea
xor
repz
hlt
jecxz
lea
loopne
cmp
pop
sub
mov
divl
aad
lcall
cwtl
push
xchg
cmp
movsl
xchg
sub
test
stos
xchg
add
cmp
mov
xchg
scas
and
push
mov
repnz
mulb
mov
outsl
mov
faddl
fmull
push
out
mov
mov
jl
out
inc
cmpsb
inc
xor
daa
notl
mov
jecxz
mov
adc
xchg
sub
mov
and
fidivrs
mov
mov
out
ds
xor
inc
hlt
sub
mov
decl
sbb
push
daa
hlt
mov
rorl
sub
inc
loope
xchg
shll
sbb
cmpsb
int
ja
mov
filds
xor
ret
outsl
xchg
call
lret
inc
daa
push
sarb
and
cs
aad
mov
pop
push
jbe
ja
aaa
scas
movsl
push
sbb
shl
mov
jl
sub
dec
sbb
mov
push
mov
lods
hlt
cmp
and
popa
sub
shlb
subl
sub
jno
scas
dec
repnz
addr16
jl
out
adc
sbb
sbb
jle
rorb
push
and
test
mov
je
pusha
lods
in
addr16
mov
rol
out
outsl
xchg
popa
jb
inc
enter
cmc
or
and
mov
js
pop
xchg
cs
lods
pop
in
push
cltd
sub
push
sbb
in
pop
in
mov
out
or
pop
sbb
lret
jns
and
push
iret
sub
stos
push
jbe
xlat
xchg
inc
lret
movl
push
lahf
mov
mov
mov
mov
push
or
icebp
in
pop
dec
das
mov
xchg
sub
or
leave
addr16
mov
or
sti
aas
cmc
rorb
or
sbb
mov
sbb
dec
in
lods
push
arpl
lret
je
testl
call
insl
fmuls
fs
daa
test
test
adc
mov
adc
rorb
iret
js
dec
dec
jo
cmp
lea
arpl
daa
xchg
cmc
jmp
mov
sbb
jne
adc
pop
pop
cmp
jae
outsl
andb
cld
pusha
or
jb
sub
inc
jl
int3
int3
in
rclb
rcrl
push
pusha
dec
inc
jb
fdivr
mov
jp
out
leave
inc
jbe
or
mov
out
and
xor
shl
push
lds
adc
outsl
mov
sahf
daa
lods
xchg
sbb
pop
pushf
outsl
loope
mov
test
mov
popa
js
and
push
mov
int
je
push
adc
pop
mov
push
test
adc
xor
testb
xor
jge
cmp
in
cld
rcr
sbb
lcall
adc
imulb
inc
adc
cmp
xchg
cs
pushf
mov
mov
mov
hlt
mov
sub
add
clc
sbb
adc
sub
add
outsl
sbb
les
imul
aaa
int3
imul
adc
adc
mov
mov
fnstenv
push
lock
inc
sbb
and
jmp
cli
iret
sti
ds
ror
enter
xchg
fs
std
das
stos
fstl
repnz
push
cmp
fnstcw
inc
inc
mov
inc
loope
jge
out
cmp
clc
mov
mov
mov
adc
cwtl
sbb
push
aas
jg
out
hlt
cmpb
mov
add
ret
cmp
dec
sbb
bndstx
or
rcrl
xchg
subl
ljmp
adc
int
fwait
sbb
mov
mov
test
pop
adc
int
push
in
lret
fiaddl
dec
xor
jae
mov
ds
mov
imull
mov
pusha
dec
push
sbb
xchg
or
imul
mov
cmpsl
imul
imul
cmp
push
lret
sbb
xchg
add
aam
jecxz
sub
and
cli
xor
and
adc
fistpll
sub
decl
stos
loop
or
les
xchg
add
jne
cmp
lods
mov
xor
or
push
push
push
dec
add
pop
jg
mov
test
imul
mov
mov
data16
pusha
xchg
in
xchg
push
mov
jge
rorb
sub
mov
or
sub
pop
jb
or
je
inc
fdivrs
sub
repz
in
adc
inc
jno
pop
mov
rorl
in
dec
jo
imul
adc
cmp
test
jmp
jl
mov
aad
mov
cmpsl
ljmpw
cmp
jae
pop
daa
cltd
cmpsb
sbb
and
push
ds
orb
xor
push
xor
aas
rorl
mov
icebp
cmpsb
dec
jnp
lea
ljmp
dec
sarb
mov
mov
int3
cltd
mov
int3
sbbl
in
mov
loopne
push
repnz
cmpsl
fadds
dec
jp
shl
jl
pop
sti
nop
imul
stos
adc
test
ljmp
jp
adc
add
mov
pop
cwtl
cmp
lock
cmpsl
mov
stos
enter
sbb
jne
ljmp
in
cld
add
dec
inc
fistpll
or
push
clc
dec
scas
pop
adcl
cmp
cmp
les
mov
push
jne
push
push
lret
daa
loop
inc
jo
xor
adc
xchg
dec
in
push
pusha
sbb
xchg
fdiv
xchg
inc
xchg
mov
dec
cmc
and
jbe
shlb
rolb
loope
imul
push
fcmovbe
outsl
fwait
mov
sub
je
or
shll
fisubrs
js
aaa
jp
pop
cmpsl
mov
popf
stos
xchg
xor
test
lcall
frstor
orb
xor
lods
or
repnz
mov
jmp
pop
repnz
sub
dec
mov
filds
mov
mov
mov
cmpsb
cli
add
lret
or
fs
sub
adc
cmc
push
mov
push
out
pop
in
adcl
pop
pop
das
cmp
add
add
mov
jmp
sbb
push
dec
bound
sbb
sub
test
adc
mov
sbb
int
cmpsl
jmp
or
ja
addr16
push
daa
push
outsl
xor
mov
popa
push
fdivr
into
out
fdiv
mov
daa
fisttps
lret
pop
stc
stos
je
pusha
xchg
out
mov
inc
mov
mov
add
jmp
jo
mov
and
xchg
repnz
mov
pop
push
sub
and
out
sbb
sub
mov
pusha
pop
shlb
mov
fwait
mov
insl
dec
mov
push
and
cmp
add
lcall
mov
jecxz
scas
inc
pop
in
lock
loopne
sub
je
mov
cmc
adc
out
xchg
nop
add
push
mov
scas
pop
and
add
movsl
ficoml
xor
popa
and
inc
sub
and
and
cmp
or
inc
cli
das
popa
out
push
adcl
mov
cmp
inc
sbb
fwait
or
dec
mov
mov
adc
pop
jo
insl
xchg
push
mov
add
cld
mov
adc
push
aad
mov
xchg
xchg
or
aad
mov
mov
out
ret
add
push
add
into
add
pop
ret
push
lea
test
shrb
les
rcrl
or
xchg
push
hlt
xchg
fimull
sub
cmp
inc
not
adc
lock
ja
lods
xorb
xor
lds
mov
rcrb
aad
cmp
push
mov
inc
add
jmp
push
lret
jb
mov
jno
out
lods
xchg
sbb
insb
xor
cmp
mov
iret
dec
mov
sti
scas
or
nop
jns
mov
in
xchg
pop
aad
test
fiadds
cld
lret
sub
ljmp
into
inc
les
sahf
cmpsl
xchg
dec
mov
mov
inc
in
inc
xor
out
mov
add
sbb
stos
mov
scas
jne
push
std
mov
loope
mov
ficoml
sti
mov
cmp
dec
push
mov
or
fnstcw
mov
mov
xchg
mov
xchg
out
mov
adc
test
xchg
push
push
movsl
lcall
outsb
fmull
and
sbb
cmpsl
subb
mov
adc
pop
das
outsb
int3
aaa
mov
mov
lcall
push
test
and
mov
jno
sbb
xchg
movsb
adc
add
jecxz
mov
insb
jae
scas
xlat
ds
adc
outsb
jecxz
popf
xlat
or
shlb
push
push
icebp
popf
cwtl
setb
ret
inc
sbb
cmpl
cmpsl
pop
fs
cld
std
or
sti
push
xchg
cmc
out
cs
push
xor
scas
testb
inc
dec
and
mov
sub
fnstenv
shll
or
imul
ljmp
xchg
imul
fdivl
lds
jmp
pop
adc
repnz
jb
jno
repnz
xchg
sub
icebp
sti
fcompl
movsb
and
lds
imul
push
aaa
jno
fs
call
mov
nop
add
or
rol
jnp
add
xchg
mov
int
sub
inc
aas
out
adc
sub
mov
pop
jnp
cli
call
push
imul
dec
adc
and
das
add
pop
jmp
enter
fwait
cli
push
cmp
dec
roll
ficompl
cmp
mov
outsl
push
sub
loope
push
cmp
jno
sub
push
in
sbb
mov
push
mov
dec
add
loop
dec
push
fadd
xor
mov
jge
into
rorl
dec
shr
cmp
add
cmp
movsb
cmpsl
inc
inc
sub
lods
movsb
jbe
xchg
xchg
adc
pop
mov
adc
sub
sub
mov
fs
lock
pop
and
push
xchg
mov
lret
outsb
and
xchg
mov
inc
sti
or
push
sti
xlat
pusha
pop
or
xor
adc
cld
mov
jnp
mov
inc
push
bound
mov
jecxz
daa
imul
mov
push
lahf
into
xor
sbb
dec
jp
ss
cmp
mov
or
push
inc
call
mov
fistpl
sub
aaa
inc
aam
mov
stos
add
in
jbe
int
jp
fimuls
loope
xchg
pop
push
rclb
call
mov
mov
lds
xchg
or
negb
sub
movsb
movsb
ljmp
arpl
xor
push
leave
mov
dec
mov
mov
pusha
pop
push
andnps
adc
jbe
xchg
scas
mov
dec
iret
movsb
lods
test
mov
add
mov
pop
test
jge
xlat
or
push
aas
adc
inc
decb
int3
dec
add
mov
lret
xchg
mov
inc
or
hlt
movsb
pop
adc
test
add
push
jnp
cmp
cmp
sub
arpl
hlt
inc
jb
xor
push
adc
add
imul
cli
loope
loopne
sub
test
or
cli
fnstenv
mov
push
mov
adc
mov
jns
push
cltd
lahf
pop
mov
rorb
push
jmp
pop
and
mov
or
rorl
and
movsl
dec
jbe
stc
pop
mov
daa
xchg
in
mov
loope
stos
adcb
orb
push
mov
xor
dec
pop
jnp
loopne
and
mov
push
pop
mov
or
nop
cs
sti
inc
es
leave
std
dec
xchg
sbb
jne
testb
push
push
ror
and
jp
mov
sbb
mov
adc
xchg
or
mov
jno
or
ret
adc
rcll
sbb
push
sub
mov
ret
out
dec
dec
call
andb
popf
add
sbb
xor
jo
repnz
dec
clc
jo
loop
enter
or
pop
enter
scas
dec
dec
mov
aad
mov
cmp
push
pop
or
rorb
test
repz
dec
mov
sbb
or
xchg
or
ja
push
jo
sahf
mov
arpl
enter
jb
jbe
cmc
std
push
push
orb
stc
sarb
mov
iret
sti
fildl
cli
fs
int3
repnz
or
and
cmpsl
enter
pop
ret
jecxz
sub
push
out
lds
sbb
pop
fbld
xchg
sbb
jno
cmp
sbb
ljmp
jecxz
mov
movsl
sbb
mov
adc
add
fsts
outsl
jae
js
in
jl
xlat
loop
or
pop
inc
push
cmp
xchg
sbb
pop
xor
arpl
aas
popa
adc
bound
push
lahf
dec
push
dec
fistpl
gs
mov
or
mov
ja
std
pop
test
insb
jecxz
ret
mov
outsb
mov
pop
test
xchg
cmp
pop
dec
out
outsb
push
sub
mov
mov
cmp
sbb
outsl
push
es
mov
mov
mov
mov
insl
mov
pop
xchg
mov
fists
rclb
xchg
and
add
fsubrp
sarl
out
mov
lret
jb
lods
popa
shl
roll
repnz
push
gs
in
imul
mov
sti
push
mov
repnz
cwtl
aaa
fisubs
mov
and
and
aad
lahf
dec
adc
pushf
test
xchg
movb
out
and
and
mov
roll
cmc
jg
pop
pop
ja
pmulhw
adc
mov
fimull
sbb
rol
cwtl
popf
out
dec
mov
or
push
sbb
xor
pop
xorb
pop
sarb
insl
xchg
int3
sub
leave
nop
cmp
stc
cmp
pop
jb
sbb
mov
dec
jno
mov
dec
and
xor
mov
lea
daa
mov
cmp
add
or
or
pop
cmp
das
jecxz
stos
fdivrl
mov
mov
jge
movsl
cmp
hlt
out
dec
and
out
jae
xor
js
jbe
mov
sbb
outsl
sub
pop
sbb
sbb
sub
push
js
push
push
adc
imul
subb
nop
pop
xchg
mov
xor
mov
jne
pop
aas
jae
mov
fstps
arpl
jge
adc
sbb
xor
jge
jbe
ret
rorb
aad
sahf
in
jbe
mov
sub
mov
jae
addr16
mov
shlb
lods
mov
test
lock
pop
sub
jns
aas
arpl
aaa
fdivl
jecxz
and
xchg
nop
scas
dec
lds
int3
in
lahf
inc
jmp
outsb
pop
ret
sbb
inc
xchg
out
or
gs
sub
pop
sbb
and
out
cli
jne
adc
sbbb
mov
roll
xor
stos
shlb
into
dec
inc
fsubrl
mulb
es
jo
fsubs
cmc
and
mov
xchg
or
nop
imul
sbb
outsb
mov
add
mov
jbe
push
and
leave
cmp
imul
setl
dec
mov
ja
lea
pop
mov
and
ja
xchg
ret
aad
outsb
mov
hlt
cmp
je
mov
mov
inc
es
xchg
and
push
xchg
adc
xorl
pop
add
pop
mov
mov
inc
mov
jnp
pop
into
cmp
inc
mov
and
iret
add
mov
test
push
fldt
mov
mov
sub
add
adc
push
aas
push
addr16
adc
or
adc
jmp
add
jge
sbb
adc
add
sbb
mov
cmpl
mov
push
add
out
xorb
mov
push
and
inc
fisubs
into
clc
pop
mov
repz
call
pusha
and
xor
xchg
insb
rcl
scas
sub
aas
push
test
loop
add
jp
sub
hlt
xchg
push
mov
fwait
movsl
gs
cmp
fldt
sub
mov
sub
push
and
test
jne
xorl
mov
clc
loopne
inc
xor
cmp
inc
gs
mov
mov
push
lahf
repz
in
movsb
iret
cmpsl
mov
inc
stc
xor
divl
mov
push
clc
pop
repz
lods
stos
stos
enter
mov
imul
jmp
loop
pop
or
mov
js
fildll
les
fiaddl
adc
mov
push
jmp
fisttpl
int3
xor
aad
xor
inc
mov
popa
xor
jg
cltd
sub
push
jl
imul
push
xchg
in
cmp
jns
pop
movsb
push
dec
ficomps
mov
rol
push
hlt
into
ja
pop
jmp
leave
outsl
sbbb
lods
and
add
lar
xlat
or
ja
mov
xor
push
subb
inc
into
push
and
shlb
sub
jmp
mov
adc
adc
mov
ficoml
shlb
cmp
ret
int
sbb
out
dec
test
scas
pop
lods
cmpsb
loope
fildll
cwtl
xchg
add
pop
mov
mov
cmp
cmp
jge
lret
xor
jbe
fiadds
inc
xchg
mov
call
or
and
jae
mov
add
cmp
pop
xor
mov
jbe
adc
rorl
movsl
mov
mov
out
shll
jmp
pop
adc
push
or
jmp
cmpsl
test
out
es
lods
xchg
or
mull
cmc
add
cmp
bnd
pop
mov
push
and
dec
ficoms
push
cmp
push
hlt
cltd
adc
pop
mov
sub
mov
xchg
test
xorl
jbe
adc
mov
sbb
xchg
jo
lcall
and
fidivl
sub
aas
jp
mov
pop
add
dec
fcom
insl
push
test
adc
mov
popf
popa
xlat
mov
and
dec
andb
cmp
push
or
xlat
std
popf
cltd
fwait
push
out
add
add
nop
and
aaa
popf
dec
mov
inc
scas
xchg
add
and
fst
lahf
faddp
jnp
xlat
push
stos
mov
sbb
cmc
outsb
sbb
popa
xor
pushf
lret
sahf
in
mov
lock
pop
ret
mov
push
sbb
dec
push
aaa
movsb
aam
loope
in
sub
push
inc
subl
ss
int
mov
cmp
push
shr
out
filds
xor
xchg
iret
sub
cmp
into
dec
loop
addr16
mov
push
loopne
clc
outsl
sub
rorb
in
dec
cltd
adc
xchg
mov
data16
scas
add
sbb
les
cmp
int
sbb
push
outsl
xor
cmp
shll
pop
lock
pop
movsb
fldt
out
sbb
mov
cwtl
cmpsb
mov
loope
lds
sbb
mov
shll
or
mov
lods
cmp
xchg
xor
push
sub
loop
xlat
frstor
rorb
dec
push
out
rclb
and
mov
xor
hlt
aaa
pushf
aas
in
push
cmp
inc
fidivs
scas
stos
cwtl
lods
jge
lods
cmp
aam
mov
outsl
xor
dec
dec
sbb
call
negl
xor
mov
unpckhps
mov
popf
push
adc
icebp
dec
ret
iret
ja
mov
sbb
add
insb
sbb
or
inc
pop
sub
jbe
or
cmp
adc
pop
pop
mov
mov
mov
in
jne
arpl
fldt
int3
push
mov
scas
push
jmp
lret
lcall
cld
in
sarl
pop
jns
fcomip
fbstp
dec
and
je
iret
pop
inc
jmp
repz
fmul
and
xchg
xor
test
mov
xor
mov
and
shll
leave
ret
loop
ja
xchg
push
pop
xchg
cmc
dec
push
fidivl
inc
xchg
std
mov
pop
daa
rol
and
add
lcall
rcrl
outsb
push
mov
cmp
daa
fcoms
and
xchg
leave
fisttpl
adcl
test
jmp
sub
jno
gs
test
cmp
xchg
add
push
xor
test
nop
divl
pop
pusha
pop
cmpsl
dec
imul
imul
stos
mov
mov
repnz
inc
loopne
dec
adc
push
dec
outsb
outsl
js
lds
into
in
cmp
scas
sub
xchg
jmp
outsl
mov
jae
mov
jno
jmp
shll
mov
mulb
sub
jnp
and
mov
mov
mov
dec
inc
iret
adc
and
cs
mov
addl
stos
pop
jns
je
ficoml
xor
or
dec
push
mov
inc
jb
push
xor
xchg
xchg
push
cmp
jo
and
clc
pop
xchg
mov
outsl
dec
pop
jae
inc
mov
xlat
xor
enter
xchg
xlat
pop
out
insb
push
push
push
std
out
xchg
repnz
insb
sbbl
and
push
sub
jmp
mov
imul
cmp
mov
lea
lds
mov
inc
addr16
push
add
cmp
xchg
xor
enter
or
ret
arpl
lahf
xchg
ss
mov
push
add
mov
mov
xor
mov
ss
imul
fiadds
out
int
mov
loope
fcmovnu
jns
sub
and
or
sub
xchg
cmp
mov
sbb
fbstp
sub
pop
shll
push
aad
ret
mov
xor
jo
out
aad
fimull
jno
inc
and
mov
rclb
not
jne
arpl
cmp
jmp
mov
jae
addl
lods
adc
hlt
arpl
push
or
pushf
incl
jle
mov
xchg
push
mov
pop
xchg
or
lcall
shlb
insl
adc
jecxz
enter
cmc
adc
arpl
inc
and
cld
mov
xor
jecxz
mov
sti
jg
mov
sbb
imulb
sbb
shr
sub
push
bound
xchg
sbb
sbb
push
mov
sub
mov
dec
and
dec
jecxz
push
pop
insb
inc
addb
std
jbe
gs
lods
in
es
outsb
fdivrl
inc
pop
in
xor
xchg
adc
jle
inc
pop
loop
jmp
push
fwait
cs
mov
add
cmp
cs
inc
mov
cmp
jae
pop
daa
sbb
mov
xchg
dec
pop
inc
addr16
inc
pop
pop
sbb
loopne
pop
cmp
out
in
pop
push
mov
loop
jno
xor
popf
cmc
adc
insl
push
lock
pop
inc
dec
inc
shlb
mov
xchg
sub
sub
hlt
aas
adc
aas
iret
cwtl
fsubr
ja
in
rclb
push
addr16
scas
in
sub
pop
ret
pop
inc
arpl
push
jl
movsl
imul
shr
mov
mov
sub
fidivrl
aaa
adc
incb
imul
imul
sbb
xor
test
aaa
jbe
clc
enter
ds
rolb
sub
adc
xor
cmp
cmp
push
rcrl
lods
push
lsl
jp
adc
les
aam
cld
cmp
outsl
pop
push
or
mov
jg
mov
test
or
movsl
pop
imul
jae
fdivrp
lods
insl
mov
jge
movsbl
pop
movsl
roll
jmp
jl
pushf
les
or
xchg
push
xor
enter
mov
sub
push
faddl
mov
nop
mov
sbb
pop
xchg
cltd
aam
sub
call
jle
add
in
jle
mov
add
hlt
test
push
in
in
and
xor
lea
add
adc
aam
lret
cltd
imul
sbb
push
push
push
jnp
mov
adc
in
sbb
cs
push
mov
mov
sub
inc
cld
dec
sub
sbb
push
xlat
and
push
in
xchg
mov
into
mov
inc
dec
push
push
imul
aam
inc
sti
dec
int3
pop
mov
push
cltd
andb
je
test
lret
xlat
sub
xchg
inc
add
int
sub
xor
pop
movsl
cmp
add
cmc
and
cwtl
push
push
movsl
cmp
pop
push
out
int
mov
dec
out
aas
mov
fcmovb
vpshaq
add
out
jge
out
or
xchg
shll
dec
pushf
nop
sub
gs
repnz
stos
sbb
fimuls
or
mov
jnp
out
test
xor
sbb
icebp
add
sahf
mov
xlat
sahf
inc
mov
and
loop
fdivrs
gs
dec
mov
loope
mov
xor
das
xchg
outsl
cmc
es
cld
mov
pusha
test
sub
repnz
and
repnz
jg
mov
dec
and
icebp
out
insb
mov
xchg
add
add
or
or
cmpsl
xchg
sbbl
ja
sub
sub
adc
cmc
mov
lret
in
mov
jecxz
int
movsb
mov
sbb
dec
notl
testl
dec
rclb
sub
daa
add
movsb
sub
jnp
inc
out
cmpsb
mov
jecxz
adc
xchg
mov
jae
pushf
pop
mov
lds
add
cmpsl
sub
std
sti
outsl
push
cmc
sbbl
pop
sub
push
imul
mov
imul
adc
cmp
sub
gs
cmp
hlt
cli
pop
dec
push
and
movsb
jne
lods
adc
fstpt
adc
inc
stos
sbb
std
push
adc
sub
and
sets
mov
adc
mov
pop
jmp
pop
lcall
outsb
xor
push
jl
cmpsl
xchg
or
in
js
popf
shrb
jmp
repz
clc
addr16
in
add
push
mov
stos
mov
cmp
out
sbb
push
push
cmp
jnp
das
movsb
jns
insl
mov
inc
les
pop
shlb
xor
sbb
out
sub
mov
outsl
daa
lret
pop
mov
test
bound
pop
popa
out
addl
mov
jmp
ja
mov
loop
push
or
mov
ljmp
pop
adc
push
out
in
and
cmp
jge
fsub
or
xor
xchg
popa
outsl
pop
gs
cs
shlb
and
mov
cmp
jo
sbb
scas
add
pop
aam
hlt
cmp
adc
pop
lret
xchg
call
xchg
rolb
cmp
out
fldt
jg
xor
xchg
mov
xor
cmp
or
es
ds
lret
push
pop
mov
jle
mov
mov
xor
jo
cwtd
ret
sbb
sti
push
cmpsl
add
ret
shlb
sub
mov
mov
cli
lahf
rorl
test
insb
jle
inc
popf
fs
cmpb
jo
das
lods
sbb
rcrb
cmc
mov
shl
in
int
gs
add
pop
and
xor
add
jle
jge
out
xor
or
fistpll
lods
and
lahf
hlt
scas
aaa
dec
not
jne
inc
nop
das
neg
inc
xlat
nop
inc
imul
leave
xor
and
sub
xchg
outsl
out
inc
sbb
inc
push
mov
and
shrb
mov
sbb
inc
bound
inc
push
dec
push
push
mov
stos
cmpsb
push
insb
int
and
dec
int
mov
ss
mov
push
int
pushf
call
xchg
add
in
cmpsb
fbld
jns
jnp
push
ds
dec
push
xchg
clc
jecxz
sub
jg
ret
push
cmc
mov
out
mov
or
and
or
pop
out
repz
fimull
pop
ret
jmp
cmp
cmp
cli
push
outsl
pop
test
cmp
stc
push
adc
add
out
xor
adc
adc
push
inc
sub
outsb
psadbw
dec
pushf
imul
lcall
clc
mov
negb
sahf
jbe
aad
hlt
jae
daa
jle
inc
mov
xchg
leave
push
mov
scas
or
sub
jbe
push
jle
paddb
ljmp
mov
lea
jl
pop
pop
in
ds
idiv
cmpsl
jmp
decb
inc
mov
jno
ret
pop
out
sbb
loop
mov
sub
push
insl
daa
mov
and
sbb
stos
aaa
mov
adc
sub
lock
pop
add
sbb
jl
cmpsb
scas
pusha
dec
adc
lret
scas
inc
fs
and
xor
out
das
jecxz
push
jge
outsl
push
cmp
inc
sti
adc
dec
sbb
es
lds
mov
push
sbb
test
sub
mov
adc
mov
fldl
cld
mov
outsb
sub
push
imul
cmpsb
je
icebp
movsl
jb
jno
shll
ss
out
loopne
jb
repnz
fildll
int
mov
push
or
inc
dec
xchg
fcmovnu
or
jno
dec
cmc
sub
imul
stc
lea
jnp
lods
daa
mov
filds
xor
int3
sbb
push
shl
pop
mov
adc
dec
arpl
les
cmp
mov
add
and
pushf
or
imul
repz
cs
mov
cmp
push
aas
push
icebp
pop
cmpsl
jb
cld
in
sbb
scas
cmp
in
dec
pop
gs
inc
add
aam
pop
cmp
push
mov
bound
mov
push
fldpi
mov
xchg
push
fsubrl
in
sbb
xor
insl
cmp
mov
cmp
sbb
sub
sbb
mov
out
mov
popf
jg
roll
jbe
adc
scas
pushf
dec
fdivl
mov
cmpsb
and
pop
cmp
lods
pop
iret
or
cmc
inc
pop
push
sub
xchg
out
ss
cmp
pop
std
or
dec
sub
xor
inc
out
lods
mov
xor
scas
rcrl
dec
dec
movsb
push
inc
in
adc
mov
pop
adc
jae
imul
xor
lods
call
repz
dec
xchg
mov
inc
pop
movsl
es
inc
dec
push
jnp
sbb
pop
in
lods
int3
ljmp
push
push
xor
loope
test
cmpsl
je
dec
push
sbb
icebp
out
shl
mov
ja
or
push
jecxz
lcall
mov
mov
pusha
adc
mov
cld
mov
or
insl
ret
imul
ficoml
into
das
dec
fstps
sti
push
in
cltd
lcall
lds
enter
aaa
pop
mov
xchg
sub
aam
mov
addr16
jecxz
jbe
mov
inc
lret
test
out
sub
scas
out
adc
ja
cmp
inc
lret
cwtl
ss
or
sbb
lods
sub
mov
lret
jnp
fwait
jl
rcl
xlat
fdivrs
push
hlt
out
data16
fistpll
imul
imul
jp
dec
xchg
jmp
aam
sbb
sti
push
popf
add
aad
pop
sub
iret
adc
call
sbb
loopne
mov
pusha
pop
outsb
jl
adc
into
pushf
mov
mov
xchg
mov
or
sub
stc
mov
cmpsl
cs
lret
test
mov
test
or
loopne
mov
dec
ds
adc
cltd
push
scas
adc
jmp
cltd
dec
jmp
int
shll
jge
rorl
es
sub
subl
pop
cli
ss
sub
rcll
push
imul
pop
xor
sub
xor
mov
ja
ss
shrb
outsw
aad
ror
jl
jge
sub
sub
in
inc
pop
fsubrl
in
mov
mov
stos
rorl
xchg
mov
mov
jae
or
sbb
mov
lret
gs
mov
jle
repz
xor
fnsave
cmpsb
pop
add
push
test
xchg
jge
xor
mov
and
or
call
sub
jge
aad
xlat
into
in
or
mov
ds
xlat
dec
dec
cmpsl
test
repnz
jne
sbb
sbb
loopne
sbb
shll
and
dec
mov
jmp
push
sbb
push
or
or
xor
pop
test
inc
xchg
xchg
dec
mov
pop
jp
adc
pop
imul
push
lea
add
test
adc
int3
cld
in
out
lods
in
jle
cmp
ss
mov
test
mov
mov
aaa
add
mov
adc
jo
jmp
mov
mov
inc
mov
jo
or
adc
into
mov
cmp
insl
or
in
mov
push
idivl
sbb
pop
popa
jp
dec
mov
cmp
dec
mov
stos
mov
into
inc
fisubs
or
leave
and
mov
loop
cli
sub
mulb
mov
mov
inc
inc
rclb
and
mov
xor
mov
mov
cmp
jmp
sar
fs
jecxz
je
sahf
stos
add
sub
lret
fstl
inc
and
shrl
cmp
sub
in
or
loope
adc
jae
hlt
fsubrs
ficompl
ljmp
lods
movsb
aas
mov
les
mov
scas
push
out
xor
mov
stos
inc
std
pop
jo
mov
ret
mov
add
push
adc
test
sub
jb
lret
lods
mov
push
js
adc
inc
dec
addl
leave
ficomps
dec
ljmp
stos
push
lds
pop
js
dec
flds
jp
stos
cmpsb
sub
negl
jb
js
push
mov
lcall
xor
mov
adc
sti
adc
aam
adc
and
xchg
mul
lods
fiadds
sahf
add
sub
movsl
repz
lods
mov
cmp
inc
cld
pop
ffree
jno
dec
rcll
adcl
xor
in
imul
pop
jb
jno
mov
int3
shlb
js
sbbl
mov
popa
sarb
les
and
scas
cmp
xchg
xor
in
scas
push
adc
sti
loop
fstp
pop
cli
loopne
xchg
push
sub
into
js
cmp
xchg
dec
ss
stc
loopne
xlat
push
xchg
push
xchg
dec
xor
cmpsb
fwait
jecxz
cwtl
cmp
adc
mov
xchg
mov
xor
les
popf
cmp
lret
in
xchg
lcall
loopne
fcomps
js
push
inc
xchg
or
out
mov
add
cmp
sub
cli
lock
mov
and
or
cmpsl
dec
mov
pop
jbe
sti
sub
jmp
shrl
lea
nop
mov
das
and
rcr
cmp
sbb
mull
sarb
fisttpll
out
dec
sub
test
sbb
mov
sub
imul
xchg
xchg
cs
jb
mov
ja
xchg
ficoml
jne
es
pop
or
lcall
mov
outsb
sbb
lcall
xchg
in
test
mov
test
cld
imul
loope
xor
pop
jmp
sub
insb
daa
cli
aam
pushf
ficoms
leave
adc
call
mov
js
jne
test
push
scas
push
sub
sbb
out
sbb
inc
adc
cmp
mov
pop
xor
lods
sub
lods
shl
cmc
push
sbb
cmc
cmpsl
xor
jp
cmp
inc
xchg
fs
pop
in
push
mov
cmp
push
mov
lret
ss
dec
pop
or
lods
push
aas
mov
sbb
and
mov
in
movl
shrl
loopne
or
ret
std
divb
adc
lea
fistpl
adc
das
jecxz
adc
mov
divl
add
lcall
inc
and
xor
repnz
mov
movl
inc
nop
mov
push
icebp
test
insb
imul
adc
jb
ret
call
pop
sbb
sub
xchg
lret
mov
stc
in
jns
ss
xchg
mov
dec
lods
imul
cmp
ficoml
test
xchg
cmp
mov
inc
roll
gs
sti
insl
popf
xor
mov
mov
call
dec
jmp
mov
xor
inc
vpshlq
leave
cmp
pop
das
xor
nop
into
push
out
repz
fwait
shlb
call
mov
and
jb,pt
scas
jbe
or
pop
mov
sub
push
lea
push
das
pop
adc
negb
mov
insb
enter
push
popfw
pop
test
mov
sub
outsl
pop
mov
jmp
cld
jne
dec
add
rorl
push
lods
das
cmp
and
jmp
std
adcl
inc
xchg
ror
pop
cmp
popf
mov
stos
dec
jp
adc
notl
sbb
ds
dec
mov
push
dec
cltd
ficoms
and
cs
push
cmp
fists
leave
sbb
cmp
mov
mov
adc
inc
mov
jecxz
lcall
clc
pushf
fimull
mov
aam
xlat
fiadds
pushf
jbe
imul
xchg
dec
mov
pop
add
lret
les
adc
bound
push
mov
adc
xor
and
adc
sarb
cmp
into
insb
stos
je
repz
dec
addr16
fsubr
push
loop
into
xchg
fisttpl
pop
inc
push
add
xchg
outsb
les
xchg
hlt
xchg
icebp
xchg
sbb
jbe
xchg
adc
addb
xchg
push
dec
iret
xor
push
addb
push
lret
xchg
cmpsb
int
push
cmp
ds
cld
lods
mov
inc
stc
sbb
cmp
jmp
mov
lock
jae
mov
sbb
shl
outsb
daa
arpl
adc
test
jo
push
mov
mov
adc
inc
jo
add
mov
out
xor
out
jl
push
divb
outsb
sahf
scas
arpl
mov
ret
mov
loopne
loope
cmp
push
fistpl
ljmp
and
andl
mov
xor
push
je
mov
das
outsl
rcrb
mov
mov
stos
dec
push
cmp
push
or
sbb
call
or
jno
mov
adc
or
inc
test
adc
ret
jmp
pushf
shlb
push
sub
int3
jbe
ror
rorl
inc
jne
jns
mov
wrmsr
mov
sub
pop
stc
add
dec
push
sbb
jl
int3
adc
stos
xchg
aaa
repz
xor
outsl
cld
lret
nop
nop
and
outsb
jnp
xchg
lcall
jl
pop
scas
out
out
jecxz
ret
xchg
lock
xchg
sbb
or
sbbb
outsl
rorl
mov
jmp
imul
mov
cli
mov
notl
xchg
and
mov
add
les
call
pop
jno
mov
adcl
shll
xchg
rorl
loope
mov
pop
xchg
pop
xchg
xor
mov
ficompl
pop
stos
adc
sub
pop
clc
cli
in
add
int
data16
gs
xor
call
inc
shl
mov
xor
out
jns
test
pusha
in
dec
and
dec
das
and
jl
mov
and
rorl
mov
push
mov
mov
int
and
mov
push
push
in
movsl
pop
icebp
cltd
dec
frstor
lock
adc
ss
jg
and
in
pushf
mov
test
shlb
sarl
movsl
sbb
xor
add
bound
pusha
mov
fisubl
or
xchg
sub
push
mov
insl
lea
inc
hlt
mov
imul
push
shlb
sbb
loop
push
shr
flds
rorl
out
push
mov
jae
leave
adc
leave
dec
roll
jo
lods
jmp
mov
lock
jge
aam
clc
sub
addr16
sub
inc
or
jb
repz
and
jnp
sbb
pop
mov
ficoms
rol
mov
mov
mov
pushl
test
adc
loop
lods
stos
ds
adc
aaa
pop
lret
mov
ret
fstl
lcall
decb
cmp
push
aaa
jne
mov
test
pop
cmp
out
insb
mov
dec
cwtl
jne
push
es
xor
stos
cmp
loop
xchg
rolb
and
or
js
adc
and
call
adc
int3
roll
mov
push
nop
mov
idivl
jl
inc
pop
or
inc
xor
rcrl
test
mov
and
cld
shlb
jns
mov
xchg
add
cmp
lods
hlt
int3
lds
cld
sbb
jb
dec
inc
lea
mov
arpl
hlt
je
add
sbbl
cmp
sbb
adc
mov
and
and
or
inc
xor
add
sbb
imul
popf
sub
aaa
pop
out
cld
sub
adc
push
xor
mov
stc
imul
pushf
pop
inc
out
fdivrp
mov
sbb
xchg
sbb
std
jne
outsl
movsb
mov
cli
lock
sbb
inc
aaa
pop
pop
cs
in
xor
adc
in
or
lret
fidivl
jnp
push
cmp
fbstp
dec
xlat
pop
add
xchg
gs
xchg
or
cmp
inc
sbbb
cmpsb
pop
std
cmp
cmp
pop
incl
in
jmp
mov
pop
or
cld
or
std
pop
and
jl
int
push
aam
cld
repnz
xor
mov
sbb
fcomps
sub
push
les
and
pop
and
mov
inc
test
rol
aas
arpl
jge
push
and
in
lods
xchg
fsubrl
lea
pop
pop
cwtl
push
imul
idivb
push
popa
int
mov
movsl
insb
adc
sbb
or
inc
and
loop
pushf
fdivrs
mov
jmp
mov
les
arpl
add
movsl
adc
ret
push
push
mov
xchg
ret
enter
nop
fistps
jae
sub
inc
xor
loope
stc
sbb
addr16
add
ret
xor
dec
ficompl
call
negl
fmul
sahf
dec
mov
jnp
nop
add
out
pop
fsubrs
or
pop
fcomip
ds
popf
mov
rcr
nopl
ss
into
adc
pop
cltd
xchg
mov
das
pushf
mov
test
xor
mov
jmp
mov
call
inc
lret
sub
or
add
in
fisubl
xchg
inc
jl
pop
mov
mov
adc
lods
int3
fcomp
in
mov
les
and
fcompl
scas
cmpsb
jg
aas
lods
xor
lahf
dec
orl
pop
vmovd
and
sbb
pop
mov
pop
adc
mov
out
dec
out
sub
imul
shr
jnp
add
or
push
adc
sbb
int
jns
jl
lret
pop
pop
or
cmpb
adc
stos
mov
sbb
pop
ss
dec
in
mov
mov
pushf
scas
adc
mov
aaa
add
jbe
push
in
push
cmp
je
lret
test
pop
adc
xlat
sub
mov
outsl
loope
xchg
stos
xor
xchg
push
jecxz
xchg
mov
mov
mov
lahf
roll
imul
push
dec
loopne
out
mov
adc
jne
mov
xchg
xor
xor
pop
es
mov
bound
xchg
loopne
mov
insb
xchg
js
aas
mov
adc
cmp
test
stos
cli
cltd
popf
xor
jle
mov
sysret
rorl
jmp
iret
jge
push
fisttps
je
mov
fs
xchg
sub
imul
rcl
pop
lcall
push
ja
inc
lds
scas
sbb
push
jnp
adc
or
scas
adc
daa
cli
ret
gs
or
sbb
xchg
xchg
mov
iret
jl
xor
imul
or
jg
inc
fcomi
sbb
and
repz
movsb
sahf
mov
jno
aas
movsl
in
push
jmp
push
shll
adc
cli
mov
cmp
push
mov
and
filds
sar
pop
xchg
lahf
xor
cmp
add
or
and
in
push
pop
das
je
mov
add
mov
xor
mov
mov
insb
popf
rolb
lods
in
scas
mov
in
and
push
popf
das
test
dec
jbe
xor
imul
int3
xor
adc
jl
cmpsl
mov
jae
test
shlb
enter
in
adc
fmull
pop
adc
adc
pop
push
mov
gs
adc
clc
js
push
lret
and
sbb
int
stc
lods
jp
jae
mov
popf
xor
rcrb
push
sub
dec
mov
fsub
nop
mov
cli
fwait
mov
dec
in
out
add
mov
movsb
jae
int
les
mov
jb
icebp
cmp
dec
cmpb
xchg
je
pop
cmp
jg
mov
mov
test
clc
pop
mov
xchg
push
mov
pop
fnsave
cld
cmpsl
mov
out
xorb
aam
js
sub
sub
adc
jmp
pop
outsl
cwtl
jne
rorl
fwait
jge
arpl
sbbb
adc
jnp
dec
andb
sub
scas
mov
cmpsl
addr16
insl
xor
pop
push
jb
mov
stos
sbb
rcrl
imul
inc
sbb
mov
rorb
lods
ror
test
xor
scas
test
lods
out
ljmp
mov
sbb
fnstcw
mov
dec
dec
test
push
add
or
add
mov
add
ja
sbb
pushf
mov
adc
arpl
ljmp
pop
xchg
cmp
sub
cmpsb
dec
sarb
dec
sub
jg
arpl
out
sahf
hlt
pop
inc
xchg
push
outsb
mov
and
jl
push
in
loopne
loopne
sbb
mov
lahf
call
test
mov
aas
add
or
inc
dec
sbb
sub
add
int
movsb
jne
inc
inc
and
stc
dec
sub
sbb
je
sub
dec
lea
jge
push
in
add
rcll
frstor
cmp
arpl
mov
add
jp
cmp
cmp
shrl
das
dec
or
cltd
cmp
pushl
adc
cmp
add
int
cmpsb
aaa
cs
cmp
add
push
icebp
xlat
xchg
pop
in
mov
dec
add
ljmp
sbb
push
mov
stc
mov
imulb
pop
shl
lock
out
jecxz
and
push
imul
sbb
mov
push
movsl
mov
mov
cmp
xchg
insl
jle
push
fisubl
cmp
sbb
fwait
shll
cmpsl
stos
xchg
addr16
hlt
cmp
out
stos
lods
dec
filds
mov
bound
out
adc
cmp
lcall
addr16
xchg
shl
stos
ljmp
push
cmp
adc
rclb
dec
jecxz
out
or
call
shrb
cmpsb
insb
ret
mulb
movsb
pop
push
xchg
cmp
pop
inc
sbb
adc
addr16
or
fbld
push
pop
or
xlat
xchg
add
cmpsl
ja
xchg
dec
outsb
arpl
or
jle
mov
mov
movsb
jle
mulb
cmpl
movsb
sub
loopne
xor
dec
int
xorb
test
pop
leave
outsb
fsubrs
mov
mov
or
sbb
out
inc
nop
les
jo
mov
inc
jl
jl
cmovl
add
imul
xchg
sti
insl
pop
adc
sub
insl
jne
sub
inc
sbb
xchg
gs
clc
inc
popa
inc
jns
and
push
jne
out
imul
repz
hlt
mov
into
repnz
incl
or
add
daa
into
pop
insb
push
mov
lcall
adc
mov
pop
pop
jb
push
inc
icebp
cmp
je
jns
sub
xchg
xlat
xor
xor
and
loope
daa
ss
mov
add
dec
xor
cmp
popa
dec
aas
mov
jae
fbld
xchg
xor
jge
pop
push
pusha
xor
cld
add
int3
add
jecxz
outsb
jl
push
push
xchg
test
sbb
inc
imul
daa
jnp
pop
dec
pop
jl
out
mov
push
dec
push
ljmp
outsb
adc
and
mov
dec
xor
pop
push
lret
cwtl
adc
shl
hlt
loope
add
jnp
or
ss
jmp
dec
push
xchg
jo
js
addr16
enter
std
adc
cmp
fsts
in
mov
and
pop
fmuls
inc
adc
pushf
rcl
and
mov
shrl
out
and
ja
sbb
dec
push
dec
mov
xchg
and
cltd
jle
icebp
int3
fwait
insb
iret
mov
sub
sti
jo
xchg
add
insl
mov
cmp
sti
rolb
imul
lea
adc
jp
push
pop
or
jge,pn
adc
jl
cmp
adc
or
loop
inc
dec
add
jmp
test
test
andl
fs
icebp
test
lods
dec
arpl
push
xchg
cltd
sti
mov
xchg
int3
mov
dec
dec
decl
cmp
mov
cs
jecxz
sub
jg
loop
dec
daa
repz
ds
dec
pop
xchg
ds
mov
arpl
push
ljmp
fstl
sub
hlt
lock
out
mov
aaa
sbb
mov
lret
inc
adc
pushf
jae
jmp
jne
nop
dec
jae
insl
mov
inc
xchg
jns
mov
in
dec
fidivs
decb
fs
xor
pusha
inc
pop
dec
cmpsl
xor
push
sahf
outsl
jne
fildll
cli
sub
xor
add
mov
test
movsl
lret
cs
dec
pop
je
gs
movsb
dec
dec
and
rorb
jecxz
and
push
xor
sub
xlat
pop
mov
cmp
mov
xor
push
dec
pop
pop
ror
ret
jnp
cltd
adc
lods
jbe
data16
iret
call
pop
mov
xlat
xchg
in
test
xor
stos
jmp
xchg
lret
adc
mov
pop
ret
fisubrs
push
inc
add
sar
roll
push
mov
adc
inc
hlt
int3
js
incb
push
je
jne
repnz
adc
push
out
cli
int3
pusha
pushf
daa
xor
es
xchg
adc
and
fwait
outsb
cmp
add
sub
incl
rcr
ja
int3
jmp
loop
push
push
mov
cmp
xor
lret
jl
lea
popf
shll
mov
into
push
sbb
and
inc
push
popf
cmpsl
mov
xor
xor
xchg
and
outsl
xchg
ror
xchg
lock
adc
jecxz
and
loope
adc
out
jecxz
pop
xor
aaa
jecxz
out
sub
mov
sub
push
pop
daa
sahf
inc
hlt
and
mov
bound
lods
sub
lret
adc
shlb
pop
inc
outsl
js
and
add
insb
subb
mov
push
inc
cmp
mov
sub
fsts
movsb
les
fdivrl
jo
push
jns
mov
dec
in
add
sti
or
ja
push
orl
fisubrs
add
mov
xor
mov
leave
fistpll
hlt
hlt
repnz
cmp
jle
pop
lea
mov
sub
push
xchg
dec
sar
adc
and
adc
jae
cmpsl
adc
mov
mov
sub
adc
hlt
push
mov
push
repnz
adc
popa
mov
add
or
mov
xchg
std
inc
ja
movsb
cmp
add
lcall
stos
dec
and
mov
outsb
jg
test
xlat
lods
jb
xor
test
xlat
jno
or
xchg
adc
pop
cmp
pop
mov
cltd
mov
das
scas
fimull
rcll
enter
dec
or
lahf
dec
push
dec
xchg
les
pop
pusha
pop
in
arpl
push
ljmp
dec
jno
jne
addb
and
in
out
lea
pop
std
sub
arpl
inc
mov
je
jmp
xchg
pusha
scas
fwait
insl
cmp
pusha
movsb
mov
push
repz
or
sub
push
shll
xchg
pushf
push
pop
jl
inc
xor
push
pushf
or
cmpsb
pop
cmovp
mov
inc
lahf
mov
in
push
jae
cmpsb
lea
push
push
mov
dec
sub
mov
aad
insl
dec
es
test
int3
mov
mov
sbb
and
adc
sub
out
sub
cmc
jle
icebp
sbb
scas
dec
push
xor
lods
icebp
in
pop
mov
xchg
std
cmc
xchg
add
dec
jno
pop
mov
sbb
xor
jp
lods
insb
or
pop
cld
imul
dec
push
lds
dec
dec
mov
dec
inc
add
pop
inc
sub
and
call
outsb
lods
jmp
cmp
adc
push
mov
je
jmp
push
cltd
insb
sub
ficoms
addr16
push
jnp
pop
test
mov
jns
fwait
rcrb
sbb
xlat
mov
lcall
and
push
xchg
sti
pop
pop
fsubs
in
loope
bound
cmp
mov
xor
mov
dec
add
cmp
mov
shrl
xchg
fucompp
xor
stc
ds
loopne
movsl
sbb
hlt
cwtl
lret
call
jne
adc
sbb
daa
pop
mov
or
xor
lcall
mov
or
inc
xchg
lcall
mov
and
xor
mov
jmp
cld
call
lcall
test
xchg
stc
push
gs
fstpl
dec
jl
loopne
mov
xor
pop
es
push
fwait
lret
xchg
push
add
add
orb
mov
cmp
roll
inc
sbbb
fwait
mov
clc
lret
inc
cmp
or
push
pushl
add
pop
js
jmp
jbe
outsb
dec
arpl
jo
lcall
in
into
lret
es
inc
ss
mov
nop
add
aas
adc
adc
jp
fstpl
shrb
jnp
movsb
and
dec
push
out
push
sbb
cmpsb
pop
mov
push
stos
cltd
vshufps
negb
sub
iret
cmp
jge
adc
call
ficoml
mov
bnd
mov
lods
outsb
mov
cwtl
cld
pop
mov
jle
add
inc
add
cld
adc
jge
mov
sbb
mov
enter
add
out
push
or
call
fisubl
std
bound
fstps
rorb
dec
ret
add
inc
cltd
jns
test
mov
shrl
cmp
insl
pop
jo
sahf
stos
cli
adc
xchg
mov
sub
imul
aad
ficompl
push
les
cmp
jecxz
sub
clc
push
test
out
inc
das
sub
lcall
xor
popf
mov
jge
cld
ds
movsb
mov
rolb
cltd
cmp
inc
cmc
sbb
ds
or
xchg
mov
or
add
push
adc
sub
push
sbb
mov
jne
out
pop
lcall
push
mov
ds
ds
adc
gs
enter
pop
dec
adc
cmp
lcall
or
aaa
push
sub
push
xchg
sbb
inc
gs
testl
lea
cmpsb
in
sub
icebp
cmp
hlt
cmp
loope
punpckhwd
out
dec
mov
imul
cmpsb
subb
pop
mov
hlt
pusha
aas
mov
imul
add
xor
push
dec
fstp
es
cmp
leave
xor
orb
rol
jecxz
xor
nop
dec
mov
sbb
push
xor
in
ret
cltd
test
push
mov
jno
xor
push
mov
mov
mov
mov
popa
jecxz
and
or
and
sub
outsb
rorl
aam
mov
add
jnp
mov
adc
addb
call
sarb
outsb
movsl
gs
jo
js
ret
insb
pop
sbb
cmp
cmp
dec
mov
cmp
push
mov
ja
xchg
movl
jno
push
or
cltd
push
sub
sbb
loop
pop
adc
push
out
leave
adc
jle
jo
movsl
fucomp
shrl
xchg
push
sbb
mov
cmp
lods
loope
add
cmp
xchg
adc
bound
test
mov
xchg
xchg
xchg
jno
mov
movsb
enter
popf
das
insl
cmpl
mov
jg
lds
ror
jecxz
cmp
sbb
aas
push
adc
mov
ds
bound
pusha
mov
mov
or
push
js
js
xchg
outsb
lods
popa
dec
mov
stc
dec
xor
push
cmc
inc
pop
pop
testb
js
aad
xor
add
sub
push
push
mov
gs
xlat
push
jnp
mov
pusha
arpl
cs
and
jmp
dec
hlt
xor
inc
inc
icebp
out
int
adcl
sbb
jmp
xchg
imul
add
mov
pushf
mov
dec
cmp
pushf
das
cltd
insb
push
mov
xor
or
sarb
or
ss
dec
mov
add
lods
add
movsl
sahf
push
dec
xchg
rcr
inc
and
xchg
pop
adc
adc
mov
dec
pop
rcrl
call
pushf
lret
mov
jl
decb
out
ds
adc
mov
bound
outsb
jnp
mov
inc
mov
fidivrs
js
loope
imul
leave
insl
mov
mov
mov
hlt
push
xor
sahf
xor
lcall
fwait
fs
inc
fs
fbstp
jns
mov
or
test
inc
jmp
jmp
shlb
xchg
movsb
jl
xchg
pop
std
pop
pop
shlb
dec
cmp
ds
push
hlt
inc
push
jp
push
in
dec
sub
pop
push
ja
rolb
inc
pop
push
mov
je
cmp
lods
jno
outsb
and
jae
clc
movsl
cmpsl
xor
mov
aad
xchg
dec
push
push
or
test
scas
les
mov
fildl
in
pop
pop
add
stc
lea
sbb
pop
in
jle
and
add
sbb
addl
cmp
xlat
les
movsb
sbb
jbe
aas
enter
stc
stos
negb
inc
cmpl
mov
insb
dec
aad
popf
pop
lods
stos
lock
clc
fisttpll
pop
and
or
mov
icebp
jae
sbb
jns
xchg
cmc
cli
xorb
and
fldpi
mov
cmc
pop
call
jae
and
or
jbe
cmp
jne
xchg
xor
je
fcom
cmpl
push
aad
pop
insl
out
dec
or
jge
sbb
leave
jle
sub
mov
clc
fbld
leave
xor
mov
or
cwtl
push
push
pop
xchg
dec
and
imul
push
fistpl
stc
cmpsb
mov
jo
imul
push
xor
fistps
xchg
arpl
dec
push
xor
dec
cmpsl
sbb
mov
sub
jle
insb
sti
inc
and
and
hlt
mov
add
orl
ja
sahf
lahf
sbb
adc
inc
xorb
gs
leave
add
nop
in
xor
enter
and
bound
mov
insb
in
div
enter
inc
es
inc
lock
add
out
push
flds
inc
les
orl
mov
pop
repz
aas
mov
imul
je
sbb
adc
imul
push
inc
fstpt
push
inc
inc
outsb
call
sbb
clc
push
push
or
dec
adc
gs
lock
in
nop
aam
cs
pop
lds
testb
lcall
aad
sub
imul
mov
adcl
jle
popa
sub
push
sahf
cwtl
lret
dec
mov
js
divl
clc
outsl
mov
push
sub
lea
fbstp
sti
or
dec
dec
push
xor
and
fbld
insb
push
xrstors
ss
mov
dec
insb
ret
mov
leave
xlat
das
jnp
aaa
xor
out
ja
loopne
dec
jge
fstpl
js
dec
or
leave
xchg
mov
push
data16
fadd
mulb
incl
les
push
xchg
iret
add
inc
push
push
cmc
outsl
outsl
xchg
cmp
das
mov
push
imul
pop
push
mov
test
push
test
cwtl
cld
push
pusha
pusha
mov
popa
ret
xor
adc
ret
mov
lahf
xlat
cltd
movsl
or
push
sub
sub
dec
sahf
xchg
and
adc
repnz
mov
jbe
fiaddl
insb
dec
and
push
pop
xorl
jge
mov
lret
push
sbb
mov
shr
aam
lods
jb
out
fidivs
mov
mov
testb
xchg
cmp
mov
pop
addr16
fcoms
dec
dec
test
push
sbb
cmp
adc
xor
testb
cmp
pop
fs
das
pop
xchg
dec
insb
dec
lds
mov
xor
clc
push
push
pop
sub
push
or
adc
fistps
ror
push
mov
xchg
pop
mov
xchg
je
sub
int3
dec
inc
pop
pop
scas
aam
pop
js
in
mov
xor
mov
or
imul
das
mov
repnz
push
xor
gs
dec
sub
xchg
push
inc
xchg
add
mov
jl
cmpsb
jmp
pop
ss
fisubrs
sbb
icebp
push
sbb
out
imul
ret
and
lret
xchg
fcoms
lods
mov
dec
pop
jne
xchg
lds
ljmp
jne
pop
mov
adc
fmul
mov
push
adcb
aad
in
jecxz
cld
fs
pushf
cli
mov
mov
mov
ss
xlat
mov
inc
xchg
dec
popa
cmpsl
cmpsl
sub
das
pushf
mov
subb
insb
mov
inc
or
mul
pop
adc
incl
dec
shll
rclb
mov
xchg
add
enter
pop
xrelease
insl
flds
push
inc
dec
das
inc
setge
iret
inc
scas
int3
sbb
cmc
mov
or
enter
jns
push
divb
into
nop
sub
ss
faddl
jge
mov
cs
mov
sub
fmull
push
or
mov
int3
cmp
outsb
sbb
cli
popf
lret
gs
aad
and
add
mov
jle
pop
cmpsb
dec
ss
int
xchg
mov
add
ljmp
out
push
mov
sbb
inc
pop
aam
or
rorl
sub
add
nop
or
sub
dec
idivl
mov
out
sub
inc
or
lock
outsl
pop
cwtl
mov
dec
cltd
pop
sbb
dec
pop
cmp
push
scas
or
mov
aad
out
stc
mov
xlat
xor
stos
add
pop
xchg
push
cmp
js
shll
dec
repnz
sub
xor
cmp
sub
and
or
mov
cmp
in
mov
mov
and
xor
movsl
dec
imul
xchg
insb
sbb
shll
test
dec
sahf
fidivs
repz
aas
mov
icebp
cmpsb
xchg
in
push
cli
leave
enter
cmpsb
scas
fcompl
call
xor
add
pop
loop
mov
add
sub
adc
or
psrld
xchg
mov
xor
mov
lock
and
pusha
pop
sti
add
cmp
pop
inc
stos
sub
push
push
mov
xchg
sbb
in
adc
jge
repz
sbb
outsl
or
mov
push
mov
jns
xchg
stc
dec
fmulp
mov
sbb
jne
fcompl
push
mov
mov
testl
dec
lock
ljmp
push
inc
cltd
gs
push
mov
xchg
aad
add
xchg
mov
scas
pop
mov
jbe
mov
mov
push
or
cmpsb
jg
dec
insl
sbbb
fs
imul
ja
fcomip
aad
push
jl
jecxz
sub
mov
lea
adc
and
mov
sub
mov
or
cmpl
sbb
jbe
adc
mov
or
sub
lahf
imul
cli
cmp
cmp
stos
jbe
les
das
sbb
imul
dec
aam
shlb
lahf
xchg
adc
ds
jo
xor
iret
ljmp
lea
push
push
mov
leave
pop
rcrb
subl
dec
int3
pop
add
or
mov
mov
insl
jl
movaps
lods
jmp
bound
movsb
add
or
cmp
bound
or
adc
add
mov
xor
inc
jl
xchg
aas
push
xor
out
dec
xor
orl
fstps
lahf
push
mov
lcall
sub
mov
pop
pop
pop
and
xchg
mov
or
loopne
into
int3
lods
xchg
in
xlat
inc
inc
pop
test
or
outsb
out
mov
xor
testl
xchg
cmpsl
add
pop
fisubrl
mov
push
nop
pop
cmp
xor
int
mov
jg
sahf
dec
and
xchg
or
cmp
pop
mov
ret
ss
test
pop
pop
stos
cmp
push
pop
scas
pusha
mov
dec
sub
mov
incb
cld
jne
sbb
dec
jbe
cmpsl
call
and
int3
out
ss
outsl
std
ss
push
cs
mov
test
inc
je
mov
hlt
mov
jbe
movsl
sti
xchg
mov
aas
and
rol
iret
xchg
push
les
cmp
mov
mov
and
or
sub
rclb
adc
sahf
sub
jo
inc
dec
aas
loopne
sbb
mov
sub
mov
ficoms
mov
sub
sbb
sahf
mov
fwait
cmp
jmp
jmp
jnp
mov
addr16
mov
ljmp
cmp
cwtl
aaa
adc
jecxz
dec
xchg
jg
out
insb
out
pop
pop
setbe
adc
pop
imul
mov
mov
add
jae
ror
push
mov
mov
sbb
sbb
sbb
mov
clc
popf
clc
rclb
xchg
icebp
mov
mov
imul
fisubrl
push
sbb
int3
jbe
sub
mov
or
push
sbb
mov
frstor
and
pop
pop
pop
lahf
push
je
lahf
stos
add
lret
scas
or
sub
jo
dec
nop
dec
mov
je
jge
cld
cmpl
adc
pop
or
push
arpl
insl
sahf
insb
aad
sbb
and
lods
cltd
sbbl
mov
cwtl
push
jo
test
sub
shl
sbb
sbb
dec
adc
add
test
push
push
stos
push
dec
roll
mov
xchg
add
sub
fs
lds
nop
fwait
divl
out
loop
mov
scas
lcall
adc
cmp
mov
lret
clc
jle
or
roll
xlat
lcall
push
je
stos
scas
adc
sbb
ret
ret
xlat
adc
dec
test
rorb
int3
daa
sti
stc
fs
dec
fisttpll
enter
dec
out
mov
mov
jg
inc
scas
mov
sbb
push
fisttpl
jmp
dec
mov
cmp
mov
inc
push
lds
dec
pushf
call
cmp
aaa
dec
inc
jmp
inc
xor
cmp
out
add
xor
inc
test
icebp
inc
or
daa
in
adc
pop
jmp
dec
clc
ss
adc
mov
repz
test
lds
push
xor
movsl
int3
call
cmp
sti
pop
adc
imul
inc
push
ds
cmpsb
fidivl
test
loopne
out
daa
dec
inc
adc
xor
fxam
iret
mov
decl
in
sbb
mov
dec
scas
mov
cmp
sub
mov
shlb
addr16
or
in
daa
jbe
shr
ret
loop
xor
psubsb
fsub
xor
mov
movsl
mov
xchg
popa
je
cmp
fistl
fnstcw
pop
xchg
push
add
sbb
or
dec
imull
not
scas
into
arpl
inc
das
imul
mov
dec
shll
mov
aad
adc
imul
rcl
sahf
dec
mov
pop
mov
outsb
lds
cli
scas
mov
js
xchg
xor
outsl
adc
mov
cmp
cli
imul
or
sbb
jnp
popf
add
cmp
cli
mov
sub
push
test
and
ds
mov
jmp
jae
js
imul
test
das
inc
push
jmp
scas
popa
pop
lods
in
std
insl
out
cwtl
jge
icebp
dec
neg
aas
dec
pop
cmp
mov
push
jmp
cmp
push
test
aaa
xor
fsubr
cmp
adc
sbb
out
mov
pop
out
sub
mov
aas
mov
movsl
mov
inc
lret
mov
fisubrs
fprem
mov
enter
xchg
cmc
fldl
fiaddl
jae
negb
pop
push
xchg
enter
in
loopne
xlat
mov
les
inc
lahf
add
xchg
dec
inc
stos
lods
add
leave
aas
sbb
mov
dec
inc
inc
xchg
jmp
mov
mov
loopne
scas
sahf
pop
mov
xchg
lea
clc
call
ficoml
pop
add
inc
lcall
mov
inc
add
cltd
fimuls
xchg
mov
xchg
xchg
test
loop
scas
mov
stc
mov
into
scas
or
pop
and
sub
loope
icebp
fildl
dec
and
aam
repnz
ud1
pop
inc
and
mov
cmpsb
in
xchg
push
lcall
or
cli
jb
jmp
into
mov
cmovp
adc
xchg
mov
jle
and
xchg
repz
and
mov
xor
dec
dec
add
inc
loope
adc
xchg
sbb
inc
ds
stos
push
mov
cmp
inc
call
fildl
mov
or
add
lret
mov
ret
insl
jmp
pop
push
and
repz
cli
or
xor
cmp
imul
jp
call
imul
jg
mov
aaa
fwait
pusha
push
rclb
sbb
lea
xchg
enter
js
xor
inc
mov
dec
mov
popa
loop
rcrb
mov
mov
adc
insl
add
out
xor
push
fwait
std
and
add
loop
daa
ret
aaa
dec
mov
add
rcrb
pop
outsb
aas
ret
adc
insb
and
mov
leave
testl
xchg
dec
hlt
cmpb
imul
test
lcall
ret
pop
pop
cmp
popf
push
jmp
xor
cltd
jmp
sub
mov
inc
mov
fidivrl
cmp
xchg
jb
push
sub
les
leave
lret
outsl
or
and
push
jns
push
xchg
xlat
mov
xor
jl
lret
icebp
jnp
mov
push
enter
jne
mov
cmp
rcrl
mov
leave
leave
inc
mov
xor
mov
ror
dec
popf
ficompl
sbb
sbb
pop
pop
jo
repz
mov
push
or
sub
bound
ret
push
sbb
push
imul
icebp
xor
ljmp
out
mov
repz
into
cmp
cmpsb
push
push
les
lods
lret
loope
sub
outsl
shld
jns
cmp
rcrb
lods
sarl
xchg
push
xchg
mov
xchg
adc
fistps
notb
inc
xorb
mov
rcr
pop
cs
movsl
add
push
stc
mov
mov
sti
xchg
mov
sbbl
mov
add
dec
mov
inc
scas
loop
lods
jnp
shl
and
cltd
or
xor
in
jle
clc
orb
mov
inc
jmp
push
mov
and
movsb
addb
push
and
mov
mov
cmpsl
and
icebp
mov
mov
jecxz
int
fs
sbb
or
mov
jecxz
mov
ret
or
repz
xchg
sub
mov
frstor
pop
imul
mov
mov
rcll
cmc
fwait
sub
xchg
pop
cmc
mov
sub
mov
xchg
mov
inc
sub
jne
fwait
mov
in
dec
les
inc
call
aam
and
inc
jl
fwait
sbb
ret
mov
insb
popl
daa
mov
sbb
int
push
loopne
cmp
lods
mov
aam
out
xor
sub
xor
fcompl
dec
jle
leave
sbb
cmp
push
fisubl
push
and
repz
inc
xor
icebp
nop
repz
bound
mov
cmc
xchg
stos
in
ret
jae
sub
push
dec
inc
or
add
push
jle
sbb
inc
add
push
adc
std
push
pushf
inc
sbb
enter
nop
sub
sub
shrl
mov
lods
lock
xor
fdivrl
insl
inc
out
push
xor
in
jge
fldl
ljmp
lods
scas
adc
lret
cmp
orb
dec
out
mov
popa
in
testb
sbb
loop
add
bound
xlat
inc
nop
es
out
lods
and
insl
sub
adc
inc
sbb
pop
xlat
push
sbb
fistps
stos
test
shl
loope
mov
ss
mov
in
or
jae
jg
leave
sbb
ja
negl
jae
push
mov
push
es
mov
cmp
ret
sbb
xchg
cmp
pushf
outsb
mov
pop
into
cs
arpl
stos
and
jo
mov
inc
and
fbld
cs
cmp
lods
sbb
fcompl
jle
pop
pop
push
mov
xchg
pop
lahf
add
adc
dec
mov
shr
cmc
fiadds
ss
xchg
loop
in
xor
jb
movsb
cmp
int
mov
loop
and
jb
dec
movsb
daa
das
movsl
adc
mov
mov
jno
push
out
jle
les
or
sti
cltd
cwtl
fmull
mov
sub
lea
clc
popf
add
icebp
and
sbb
arpl
int3
xchg
or
mov
inc
or
xchg
cmpsb
imul
sbb
test
cmc
daa
dec
xor
mov
fcmovbe
loop
movsl
and
jno
movsb
shll
pop
cltd
enter
xchg
ds
mov
dec
data16
sub
popa
mov
inc
popl
xor
mov
fsubs
test
push
xchg
xor
and
lret
arpl
aaa
adc
clc
dec
xchg
mov
mov
and
xchg
inc
hlt
mov
mov
xor
lea
inc
shrb
hlt
lret
in
and
addr16
mov
aad
and
lea
int3
sub
mov
and
sub
aam
pop
lahf
adc
sbb
mov
mov
cmp
mov
fisubs
jnp
mov
dec
sub
mov
std
popa
xor
sahf
loop
mov
cmc
pop
shlb
dec
push
push
inc
or
andb
loopne
dec
pop
in
cltd
nop
imul
mov
movsb
add
movsb
mov
cmp
xor
inc
cmpsl
in
out
jne
jo
fnstsw
jl
pop
sti
fucomi
jno
sub
jae
and
adc
cmp
jbe
testl
dec
sahf
bnd
pop
loopne
jae
call
mov
clc
decb
fwait
popf
jo
imul
mov
mov
mov
add
popf
cwtl
mov
fcoms
sbb
int
fwait
lods
mov
daa
scas
cmp
lret
call
aas
lea
inc
mov
lahf
mov
addl
mov
jge
sahf
test
push
aad
xor
repz
jp
add
mov
xor
adcl
outsl
lret
mov
imul
xor
xchg
shlb
inc
jo
js
dec
pop
dec
dec
fwait
mov
inc
out
inc
fwait
inc
in
enter
xchg
and
or
cmp
cmp
add
mov
xlat
xchg
and
jmp
mov
test
rolb
orl
idivl
sahf
add
or
cwtl
leave
test
fdivrs
fs
int
and
xor
inc
ret
aas
add
jo
clc
shrb
out
and
data16
mov
lea
pop
lret
adc
sti
mov
xchg
lods
push
jg
rcrb
xchg
cmpsb
xchg
cmpsb
sub
push
test
cmpsl
dec
xor
bound
dec
es
mov
enter
mov
jmp
add
xchg
xchg
pop
imull
mov
adc
shrb
enter
bound
add
dec
pusha
mov
insl
das
xchg
rol
fisttps
jae
test
not
mov
dec
loopne
mov
subl
data16
negb
nop
es
cmp
loopne
addr16
andl
cmpsb
cmp
adc
je
pop
cmpsb
mov
dec
lcall
out
add
xchg
popl
bswap
mov
nop
loope
or
xchg
scas
out
pusha
ss
xchg
mov
arpl
add
dec
sub
mov
out
out
cmp
test
mov
jge
sub
imul
add
dec
mov
sbb
or
mov
adc
or
loopne
mov
sub
cmp
subl
inc
or
mov
js
mov
sbb
test
cmp
sub
inc
std
mov
call
and
cmp
adc
xchg
sub
and
push
mov
dec
add
jp
sbb
ja
lods
and
or
cmpsl
call
aaa
mov
int3
and
inc
pop
outsl
mov
pop
arpl
xchg
imul
sti
andl
and
jge
in
mov
mov
mov
shrl
lea
xchg
or
jecxz
dec
push
sahf
stos
in
cmp
les
push
ret
push
cmp
outsl
sets
mov
fildll
lds
lods
mov
inc
xchg
xchg
cwtl
loop
adc
shrl
lcall
and
sbb
icebp
fadds
or
scas
and
or
jns
mov
sub
aas
idivl
test
lods
imul
or
push
xor
in
out
fistpl
jno
ficomps
pop
dec
or
xchg
out
lahf
andb
cmpsl
push
push
fisubl
rcrl
movsb
in
mov
xchg
js
jns
popa
xlat
imul
cltd
mov
xchg
and
fnstsw
sub
sti
adc
push
pop
dec
mov
push
clc
jns
or
inc
je
notw
sbb
and
inc
sub
aas
push
inc
mov
andb
mov
jae
adc
cwtl
xchg
jno
jp
stc
leave
jne
fidivs
popl
add
roll
cltd
popa
cmp
in
mov
das
jbe
jmpw
cli
test
in
adc
sbb
adc
divb
sbb
stc
mov
cltd
inc
or
cmp
negl
jecxz
aas
cmc
pushf
jno
xor
mov
pushf
stos
daa
jle
mov
add
ljmp
imul
imul
call
pop
cmp
je
add
sti
pop
cmp
mov
jl
imul
int
arpl
ds
jecxz
test
push
add
or
xchg
inc
adc
shufps
fcomps
adc
ficoml
cs
jle
shr
shlb
dec
pusha
shrl
add
add
mov
fdivl
in
or
repz
xor
test
cmp
mov
add
jle,pn
sbb
ficoml
leave
lods
pop
fcoms
bsf
dec
inc
fsubr
out
push
adc
mov
insl
mov
inc
sub
xchg
out
test
aam
xor
mov
into
cmp
add
jne
ds
shl
mov
pop
xor
repnz
orl
iret
ret
mov
popf
push
sbb
sbb
jae
dec
imul
add
out
ret
jle
dec
jl
cld
xor
fsts
xor
and
imul
cmc
in
test
cli
mov
and
jmp
into
and
inc
xchg
cmp
cld
cmp
mov
add
fs
mov
call
or
mov
xor
or
dec
je
and
data16
xor
popa
iret
mov
pop
pop
pushf
push
sar
int
movsb
pop
fistpl
push
cmp
push
fstps
dec
xor
out
xchg
mov
jo
mov
jnp
mov
loop
mov
push
push
inc
nop
and
or
cmp
sbb
pop
push
imul
dec
cltd
dec
bound
jp
mov
xlat
lret
jle
into
ret
aaa
fadds
xor
into
cmpsb
jnp
add
sub
inc
cld
sub
sbb
out
xchg
in
adc
fs
inc
adcl
std
hlt
stos
sub
xchg
and
mov
shlb
dec
cmp
push
sbb
ror
add
dec
call
addr16
cli
loope
test
ljmp
clc
stos
sub
scas
insb
jge
cmp
dec
cmpsl
imul
or
inc
fsubl
or
mov
mov
in
lods
mov
imul
mov
sbb
pop
mov
push
repz
add
leave
repnz
sub
repnz
jmp
lahf
jecxz
int3
cld
mov
sbb
mov
or
shl
mov
lock
mov
fimull
out
addb
xchg
dec
imulb
notl
add
xchg
ret
out
mov
and
push
icebp
xor
incl
sub
ja
or
sub
mov
add
popa
testl
imul
imul
mov
mov
movsl
flds
sahf
and
pop
int
arpl
xor
gs
add
mov
dec
xorb
mov
sti
outsb
and
xchg
mov
xor
cld
pop
mov
int
insl
aaa
leave
out
push
test
adc
aaa
daa
lods
insb
sbb
sbb
or
movsl
mov
jno
sub
insb
int3
cmc
js
subb
push
fsub
sti
adc
mov
jg
jp
pop
cmp
out
sbb
or
push
adc
es
mov
mov
or
or
cmp
popf
shrb
fdivrs
lods
clc
push
sarl
ja
mov
inc
lea
mov
sahf
push
jp
mov
js
and
cs
in
js
cmpl
fsubs
mov
cmpb
mov
popa
push
pop
push
divl
pop
inc
push
in
sbb
cld
daa
bound
lret
popa
jge
xchg
xor
cmpsb
sbb
xlat
adc
xchg
xor
popa
xchg
pushf
cltd
iret
sbbl
mov
aam
push
cmp
or
mov
pop
scas
fbld
and
jo
inc
call
hlt
adc
push
xor
fdivrl
imul
mov
pop
outsl
mov
push
lock
or
jb
fisubl
adc
lret
hlt
std
mov
lock
jno
imul
sbb
cmp
xchg
test
incl
xlat
aam
jecxz
push
out
adc
mov
cltd
adc
and
scas
js
jge
jp
or
mov
pop
inc
je
je
xchg
adc
mov
arpl
std
scas
inc
ja
sar
es
inc
mov
add
hlt
scas
mov
out
xor
fistpll
lret
in
adc
std
lock
call
xlat
push
clc
jge
sbb
insl
loop
cmpsb
outsb
mov
in
lea
push
subb
adc
pusha
and
jp
sbb
shl
in
test
mov
or
mov
loope
add
or
xchg
sub
add
loop
and
cmc
movsl
lock
lahf
mov
lock
test
jns
xchg
mov
mov
sti
mov
movsl
and
test
push
inc
cmp
dec
sub
jo
loope
mov
leave
rcl
and
clc
cmc
xchg
mov
mov
mov
mov
adc
adc
and
popa
add
and
test
mov
lcall
push
adc
or
lods
aas
or
push
test
outsb
mov
and
aam
fwait
mov
inc
or
adc
mov
aad
je
dec
xor
repz
das
sbb
mov
insl
sbb
daa
sub
das
xlat
jno
je
cmp
dec
fimuls
xchg
dec
leave
dec
push
test
std
daa
pop
cmp
aaa
adc
sbb
rcr
mov
or
mov
adc
enter
and
imulw
insb
xchg
or
pop
inc
dec
jnp
nop
mov
push
mov
pop
mov
mov
dec
or
leave
ds
inc
bound
inc
clc
xor
or
pop
add
int3
mov
pusha
inc
jno
insl
popf
add
aas
ret
mov
push
aam
cmp
fists
sub
mov
icebp
jnp
and
in
in
cld
pop
inc
ret
xor
xchg
aam
and
decl
subl
mov
mov
leave
pop
loope
mull
or
jns
sub
aas
fistpll
adc
mov
or
jmp
sti
adc
js
data16
dec
sbb
dec
adc
pop
and
mov
dec
cmpsl
lcall
dec
fildl
mov
mov
lds
in
aaa
fs
jns
cmp
pop
pop
adcl
nop
cltd
rcll
shrl
jbe
mov
aam
sub
xabort
mov
cmc
push
sbb
clc
test
pop
inc
stos
xchg
push
sbb
pop
notb
pop
scas
ret
and
les
jae
mov
inc
mov
inc
dec
jg
jg
mov
xor
pop
push
ret
mov
pop
adcl
rcrl
mov
jmp
mov
bound
xchg
or
in
cld
mov
pop
dec
mov
int3
into
into
mov
pop
rol
push
mov
jp
and
pop
mov
xchg
and
movsb
test
icebp
and
out
xlat
xchg
mov
pop
adc
ds
mov
or
lret
scas
mov
dec
and
stos
mov
stos
jns
aad
es
adc
mov
sti
fadds
mov
out
xor
xchg
into
sbbl
mov
aaa
add
cmc
or
out
xchg
popa
jl
xchg
clc
pushf
push
mov
jecxz
fnstsw
push
xor
add
push
lret
push
push
pushf
test
std
inc
sbb
shlb
ds
xor
or
inc
push
sti
movsl
adc
cmpb
sub
cld
mov
fsubs
add
xchg
lods
mov
xchg
mov
mov
fdiv
hlt
stos
push
lcall
in
push
xchg
inc
cwtl
push
jns
push
outsl
push
sbb
sub
pop
sarb
mov
xchg
sbb
nop
cmp
scas
orb
mov
push
fcoms
inc
pop
dec
imul
or
push
xchg
or
addl
ficoms
pop
std
xchg
or
mov
cs
sbb
movsl
adc
movsb
lahf
lret
shll
icebp
cwtl
pusha
adc
gs
movsl
push
lcall
sbb
enter
jne
sbb
jmp
pop
scas
or
or
push
mov
sub
jno
lods
dec
test
and
inc
pop
repnz
add
sub
mov
cmp
test
mov
cmpsb
out
mov
shlb
jmp
and
int3
inc
mov
push
int3
cltd
lea
xor
sub
and
sub
sbb
sahf
add
cmp
shrl
add
mov
add
jl
xor
sub
es
push
fdiv
iret
testl
outsb
imul
mov
divl
dec
adc
push
or
movsl
daa
pop
rorb
cld
xchg
adc
fimull
mov
xor
xchg
jmp
mov
cmpsb
jl
mov
fsubrp
pop
mov
xchg
loopne
es
mov
cmp
jg
fldz
xchg
jne
xor
ja
scas
mov
or
fsubrl
andb
ja
jl
es
ret
pushf
jae
xchg
pop
rcll
pop
pop
rolb
and
xchg
xlat
cmp
sub
and
insb
add
movl
push
lea
stos
icebp
enter
andb
ret
xor
push
xchg
jp
pop
and
cli
dec
loopne
mov
xchg
aam
js
pop
call
jb
inc
push
fldl
enter
xor
std
sub
ret
clc
roll
ficoml
jle
addr16
sub
xchg
es
cmpsl
jno
arpl
and
jecxz
jbe
negb
adc
int
outsl
fs
les
mov
fwait
and
mov
adc
mov
icebp
ror
cmc
stos
outsb
cmp
adc
jno
mov
aam
ds
cmpsb
mov
add
shl
popa
test
ss
imul
ss
lods
push
xchg
xchg
jg
daa
lret
and
mov
test
push
test
aaa
pop
add
pusha
mov
fisubrs
inc
cwtl
movsb
and
test
loopne
sub
popa
adc
or
movsb
jo
in
out
adc
bound
dec
cltd
lea
ljmp
dec
insl
mov
lret
xchg
jl
arpl
dec
fdecstp
inc
daa
lcall
in
mov
outsb
mov
mov
cltd
xchg
and
popf
push
stos
xor
jp
outsl
std
cmp
mov
dec
adc
inc
jge
push
push
das
mov
push
imulb
cmovbe
add
stos
mov
cs
push
ret
bnd
jne
ljmp
addb
dec
mov
xchg
loopne
cmpsl
mov
popa
xor
push
mov
xchg
fbld
jp
push
cwtl
cmpsb
jecxz
or
lods
imulb
ret
or
dec
push
sbb
inc
sub
mov
xchg
inc
pop
dec
loopne
vmovupd
mov
je
outsb
sahf
mov
add
add
faddl
and
dec
inc
std
add
icebp
dec
cmp
pop
fs
std
pop
inc
pusha
push
jecxz
ja
flds
mov
pop
imul
fstpl
frstor
xor
push
jnp
sbb
lret
arpl
mov
pusha
jmp
iret
les
mov
xchg
std
pusha
push
xchg
sahf
pusha
xchg
or
aad
fimuls
scas
sub
cli
jge
popf
sub
add
mov
pop
loop
popf
sbb
fdivr
dec
scas
in
gs
repz
rol
cwtl
jg
dec
insl
mov
sbb
dec
in
loop
jge
mov
xor
mov
jp
mov
mov
add
lea
gs
out
jne
or
mov
or
jmp
sub
sbb
adc
or
fiaddl
or
ret
push
orl
push
cmc
mov
dec
les
ds
shrb
stc
cwtl
mov
in
pushf
stc
lock
mov
push
ficoms
jnp
xor
std
add
mov
gs
xchg
roll
inc
adc
mov
and
lds
dec
iret
and
int
fstl
repz
adc
mov
xchg
iret
xor
repnz
xor
mov
dec
fwait
aas
cwtl
in
in
push
jne
in
xchg
xchg
lock
sysenter
adc
popa
mov
cs
out
das
hlt
cs
sbb
mov
or
imulb
mov
cmp
stc
loopne
lret
test
mov
ljmp
popa
push
out
pop
push
jb
jb
jecxz
scas
cwtl
nop
sbb
inc
aam
mov
lods
stos
mov
xor
clc
pop
jge
jl
rcrb
push
test
fwait
rorb
test
jae
sahf
sub
aas
arpl
push
insl
iret
scas
sbb
aas
adc
sarl
sti
add
dec
pop
imul
test
dec
mov
xor
call
pop
sub
dec
lds
jecxz
out
mov
je
cmp
loope
inc
sbb
cmpsl
cmp
adc
pop
cmp
lcall
xchg
addr16
mov
insl
pop
push
mov
pop
add
mov
push
dec
cwtl
ficompl
lcall
xor
cwtl
cmpsl
int
jno
jg
fstpl
sub
xor
mov
arpl
cmp
popa
lock
xchg
fs
imul
mov
add
jbe
adc
adc
in
cltd
out
mov
inc
scas
mov
mov
xor
dec
adc
adc
xchg
call
xlat
adc
jbe
lcall
xor
inc
inc
jp
sar
mov
lds
pop
sub
inc
xor
jg
movsb
dec
sti
es
xchg
sub
lds
xor
insb
adc
and
out
xchg
pop
lahf
pop
fucom
push
xchg
mov
clc
je
sbb
or
inc
xor
lods
mov
xchg
xor
in
jbe
add
sahf
aas
add
dec
in
mov
jge
push
dec
or
adc
push
push
mov
aaa
repz
int
pop
notb
loop
pop
push
dec
scas
mov
fisubrl
movsl
les
lods
or
es
add
push
and
mov
adc
add
aas
mov
into
mov
fistpl
cmpl
daa
out
and
lods
xchg
arpl
inc
fwait
out
insb
cmp
insl
dec
insb
in
or
add
fisubl
aad
bound
repz
fwait
jle
jnp
mov
fnsave
pop
adc
dec
aad
in
lock
mov
test
mov
fimuls
lds
fisttps
sub
inc
dec
cmp
push
xchg
jnp
imul
nop
movsl
adc
inc
mov
jbe
imul
loop
xchg
cmpsl
dec
inc
mov
out
ss
scas
dec
nop
cmp
pop
lods
andl
pop
movsb
nop
ds
test
pop
xlat
call
cmp
daa
cmpb
sub
in
lds
mov
jno
icebp
jne
bound
mov
bnd
and
or
scas
out
fwait
add
inc
sbb
shll
test
sub
and
imulb
cmpsb
addr16
stc
xor
cmp
mov
push
and
jecxz
inc
jae
repz
idivl
mov
adc
sahf
je
push
adc
cmp
sbb
cwtl
lods
and
cmp
imul
dec
test
and
and
aas
push
pop
dec
in
popl
fwait
lock
out
jmp
les
and
stc
sbb
daa
aam
ss
pop
mov
and
push
jbe
scas
bnd
cmp
hlt
test
insb
dec
sbb
pop
inc
xor
fidivrs
xor
sbb
lock
inc
jecxz
icebp
pop
shlb
pop
pop
leave
es
test
aad
test
adcl
movsl
dec
stc
je
pop
lret
jns
jbe
xor
sbb
xchg
out
push
sub
dec
sbb
data16
test
dec
popa
aaa
into
aad
mov
iret
and
add
and
loop
pop
out
testb
test
lea
in
lret
pop
cmp
pop
pop
lcall
mov
inc
jge
push
das
fstl
push
adc
cmp
out
ret
xlat
jl
or
xchg
jecxz
cmp
loop
lods
pop
fistl
jbe
pop
dec
pushf
sub
jno
xchg
stos
dec
js
push
sbb
jo
pop
or
lret
xchg
iret
ret
mov
mov
in
pushf
fcmovb
arpl
das
inc
scas
je
jbe
addr16
sub
push
xor
pop
or
shll
bound
push
mov
fists
cmp
xchg
push
add
roll
lds
daa
sbb
push
rolb
jmp
inc
or
adcb
and
or
shrl
mov
sub
loopne
cmc
mov
enter
popa
fsubl
arpl
lcall
xor
mov
addr16
inc
push
lea
std
ficomps
cs
push
and
and
xchg
shl
cmpsb
fwait
inc
xor
add
iret
cmpsb
fnsave
sbb
jb
mov
add
mov
and
and
lahf
add
and
ds
lret
push
movsb
lock
xchg
pop
outsl
xchg
inc
mov
js
inc
jp
insl
or
icebp
push
adc
pop
xorb
jl
sbb
jmp
lret
cmp
pop
lret
sub
sahf
aas
repz
xor
jp
mov
cld
mov
icebp
loop
sub
popf
stc
pusha
inc
add
scas
fwait
inc
and
mov
insl
mov
and
cmp
jb
mov
or
fsqrt
mov
gs
mov
stc
aaa
adc
rcr
xor
lahf
imul
push
in
outsl
mov
add
std
test
das
sbb
int3
test
xchg
stc
adc
and
stos
addr16
add
sub
ffreep
notb
hlt
dec
pop
data16
and
dec
or
adc
push
lock
mov
sbb
and
movl
jno
in
mov
hlt
stos
mov
pop
dec
clc
mov
test
adc
adc
insb
mov
inc
sub
sbb
dec
fdivr
add
and
lret
movsl
lret
jecxz
add
aam
xchg
loope
stos
cltd
mov
divb
pop
adc
push
pushf
fsubp
scas
scas
adc
lods
repnz
outsb
and
jg
incb
lret
std
cmp
sub
sbb
sarb
jns
mov
lea
in
sahf
dec
jnp
mov
mov
push
mov
loop
frstor
push
pop
ds
sbb
cmp
ds
sti
loop
stos
sub
sub
lret
dec
lcall
shrb
or
loope
mov
fistpll
movsl
xor
adc
jecxz
stos
cmp
jns
sbb
sub
cs
mov
stc
dec
loope
fisttpl
bound
pusha
fsubs
movb
xor
jmp
mov
in
rolb
add
xchg
mov
pop
data16
rcr
ret
sbb
hlt
fs
xor
call
mov
test
lods
aam
dec
dec
mov
xlat
int3
test
subb
adc
cmp
fcmovnb
das
cmp
or
add
or
fdivrl
imul
cwtl
mov
add
ret
mov
enter
mov
cmp
xor
jecxz
sub
cmp
cmp
add
imul
lock
repz
or
jg
jo
test
sub
shl
mov
insl
sbb
inc
pop
sbb
pop
dec
jno
mul
sbb
bound
xchg
sub
sub
jmp
fstps
sbb
xor
push
pop
nop
outsb
xchg
xchg
push
sub
hlt
stc
scas
out
mov
cmp
jne
in
adc
and
ss
and
insl
pusha
lods
or
add
daa
fiaddl
adc
jo
in
repnz
mov
iret
cli
inc
int
mov
add
ds
cmp
popa
bnd
pop
dec
xor
push
mov
jmp
adc
xor
jbe
cli
push
ficomps
push
mov
add
scas
or
push
cmp
or
andb
aaa
jle
xchg
mov
pop
push
insl
in
ret
push
and
stos
repnz
cmpsl
jo
insl
push
inc
shrl
repz
scas
out
out
mov
js
mov
int
dec
scas
xor
and
pop
fsincos
out
cs
sub
rcr
lods
jno
mov
push
movsl
out
lret
xor
mov
lret
inc
insb
insl
lahf
adc
shll
xor
cld
fsts
add
sbb
nop
lea
mov
sbb
sbb
sbb
movsb
ret
imul
sub
jg
xchg
mov
xchg
mov
sbb
stc
pop
xor
into
xchg
jnp
test
test
dec
mov
pop
inc
loopne
aas
pop
push
inc
and
or
inc
insl
test
push
inc
cli
std
sbb
lods
mov
daa
fbstp
popa
int
xchg
repnz
repz
mov
lcall
dec
gs
xchg
ja
dec
cmpb
lahf
aam
xchg
pop
sub
add
xchg
pop
repnz
sahf
push
jg
jnp
add
dec
leave
mov
sti
mov
jbe
dec
das
in
fwait
push
mov
cmp
sbb
loopne
cld
mov
jge
pop
fiaddl
cmp
sbb
xor
mov
test
jae
add
pusha
sbb
adc
xchg
push
lea
int3
mov
mov
or
adc
jns
fsubrs
popa
lds
das
mov
inc
rclb
test
lret
icebp
sbb
xchg
lcall
mov
test
aas
mulb
clc
loopne
mov
xor
pop
pop
mov
mov
enter
mov
and
in
xchg
jmp
fistps
push
sub
notl
add
xchg
test
pushf
lods
cs
xchg
cmp
xchg
stos
iret
inc
and
jno
mov
stc
subl
insl
push
mov
add
movsb
jle
and
jno
adc
es
add
jne
add
mov
leave
xor
dec
jle
mov
lcall
in
push
adc
mov
jae
xchg
cmc
lret
xchg
xorl
dec
mov
aas
mov
lret
test
insl
pop
movsb
push
jl
or
pop
adc
or
je
cmc
mov
xchg
jns
xor
xlat
xor
mov
jmp
jne
mov
sub
push
loop
arpl
into
sti
push
adc
mov
mov
push
inc
ret
add
into
jl
bound
mov
adc
imul
push
add
jle
rclb
or
hlt
jno
cmc
mov
paddd
rorl
adc
push
and
jnp
pop
in
daa
in
in
repnz
mov
pop
adc
xor
test
mov
pop
mov
imul
mov
mov
hlt
mov
lret
mov
lods
fiaddl
neg
lret
ljmp
enter
in
ret
lahf
pop
fildll
mov
mov
dec
mov
subb
popa
cltd
imul
jl
insl
xchg
cmpsl
test
inc
sub
xor
jbe
or
mov
fcomp
shll
or
cmovle
jns
popf
adc
mov
or
xchg
xchg
sub
les
jno
movsb
fs
adc
mov
inc
mov
cmp
mov
rorb
mov
jge
mov
xchg
cmpb
mov
scas
xor
mov
mov
ret
cmp
das
jmp
mov
icebp
aad
xchg
adc
add
inc
jnp
adc
divl
insb
jp
mov
mov
mov
popf
icebp
inc
cmp
shll
xor
andb
pushf
and
inc
movsb
and
push
cli
mov
sbb
mov
js
mov
in
xchg
jmp
jne
mov
cmp
mov
sbb
and
pop
outsb
pop
int3
cltd
and
jle
adc
push
and
out
sbb
adc
lock
xor
push
pop
loop
push
js
mov
outsl
test
push
jns
sbb
stc
clc
fcoml
iret
fwait
scas
aad
test
inc
fistpl
out
cmpsb
sbb
filds
jnp
fisubrl
inc
and
ret
pop
pop
sbb
outsl
or
cmp
in
std
mov
push
dec
movsl
add
in
adc
adc
inc
xchg
sbb
sub
into
mov
mov
in
bnd
lock
push
pusha
insl
push
mov
cli
std
test
lock
xchg
inc
iret
cmp
and
sbb
sbb
mov
mov
fisttps
mov
subb
inc
and
cwtl
sbb
sub
test
jp
mov
sbb
fisubl
pop
iret
mov
jecxz
pop
das
lret
xchg
mov
mov
push
in
lret
outsb
jb
jle
in
sti
pushf
add
shl
push
jmp
jnp
popf
sub
adc
push
pmulhw
lcall
sub
daa
lahf
popf
repnz
sbb
mov
adc
xor
mov
and
xor
adc
jbe
iret
mov
fcompl
jmp
in
pop
hlt
xor
addl
faddp
jg
cmp
test
add
cltd
push
scas
cmc
aam
test
ret
add
mov
notb
test
jnp
inc
in
xchg
cmpsl
sbb
iret
shll
hlt
setbe
jecxz
pop
div
adc
push
mov
fsubrl
sbb
xchg
rol
inc
sbb
add
jbe
mov
cmp
ret
fistpll
lret
cld
xchg
xor
mov
cli
push
sbb
ss
push
adc
push
jecxz
in
in
and
sti
ja
mov
sbb
dec
dec
mov
add
movsl
fadd
fldcw
clc
push
mov
pushf
sbb
xchg
pop
pop
push
pusha
inc
outsl
nop
clc
mov
inc
jno
sarb
push
or
jmp
int3
dec
gs
adc
das
in
jecxz
mov
out
cmp
out
fs
cmpsl
scas
fcos
sbb
mov
int3
lahf
sbb
mov
cmp
xlat
int
dec
inc
jl
push
lock
fs
xchg
pop
je
xchg
fnstsw
aam
es
jnp
and
adc
xchg
add
std
fcom
lret
jle
pop
stos
add
bnd
es
add
jg
sbb
cld
sahf
pop
rcll
test
add
test
cmpsl
rorl
icebp
push
ret
cmc
mov
arpl
pop
xlat
aad
cmp
stos
js
ret
ret
jle
orb
arpl
add
das
or
cmpb
gs
pop
stos
call
xor
in
mov
mov
cmp
jmp
mov
outsb
add
fs
xchg
lea
ret
pop
repz
sarl
jae
push
jae
or
fbld
aad
jl
pop
mov
mov
and
fsubrl
ret
loope
test
add
lds
inc
gs
int
add
mov
push
aas
pushf
pop
popa
lret
int3
adc
ret
or
rolb
mov
pop
rcr
out
out
sbb
xor
jae
clc
fistps
cwtl
int3
xor
mov
es
cmp
mov
hlt
adc
ljmp
pop
pop
mov
andb
jb
inc
shl
into
xchg
loope
test
mov
pop
stos
pop
inc
lcall
mov
jecxz
mov
or
mov
in
add
dec
subb
pop
inc
js
jne
popa
call
mov
mov
not
jo
lds
jmp
test
or
inc
fsub
lock
sbb
jae
or
out
repz
pusha
lret
mov
adc
testl
bound
jl
in
add
scas
lret
mov
nop
outsb
lock
push
movsb
sub
imul
imul
lret
push
or
pop
lahf
shufps
sbb
inc
sbb
sbb
jge
mov
cmp
cli
sbb
mov
mov
or
das
jno
jle
jle
cmpsb
mov
int
xor
and
js
mov
popf
fwait
and
in
cld
or
inc
adc
nop
fs
xor
mov
or
sarl
gs
mov
inc
mov
es
mov
int
and
xchg
mov
ljmp
mov
add
inc
push
jno
imul
cmpsb
jl
repnz
mov
adc
mov
ljmp
sar
enter
push
sub
add
sbb
aas
pop
adc
fcmovbe
sub
stc
inc
pop
pop
jge
popa
and
fstl
andl
sar
jp
adc
jno
fsts
pop
jmp
daa
mov
pop
jge
push
testl
lret
cmp
icebp
mov
and
cmp
sub
nop
xchg
push
subl
rcll
clc
add
in
mov
pop
push
int
push
fildl
inc
out
cltd
outsl
lods
xor
adc
jecxz
ljmp
repnz
push
aam
cmpsl
or
aad
jbe
jp
cltd
ja
jbe
mov
push
mov
pop
sbb
out
std
imul
mov
or
sbb
mov
jmp
mov
sbb
std
mov
shrb
sbb
pop
inc
aaa
xor
lret
xor
sub
mov
rorl
loop
rcrl
out
in
cmpsl
mov
push
sub
cltd
mov
jbe
hlt
gs
lcall
xor
dec
dec
rol
nop
sbb
pop
repz
or
xchg
xor
or
in
jl
push
les
sub
mov
adc
adc
inc
test
stc
adcl
mov
adcb
push
jne
pushf
cltd
mul
mov
or
jmp
dec
jmp
das
cmp
push
push
enter
nop
or
mov
sbb
mov
andl
inc
loopne
cmp
cmp
xchg
data16
ja
aam
cmp
ljmp
xchg
sub
push
adc
pop
jecxz
pop
mov
pop
mov
test
and
movsl
ljmp
cmp
lahf
loope
dec
or
fiadds
into
mov
jne
outsb
mov
xchg
mov
loop
mov
loopne
pop
jne
xor
jne
sti
test
xchg
lds
imul
cmc
pop
aas
addr16
fcmovne
aad
in
cmp
fcomp
add
or
mov
test
inc
push
jge
mov
jnp
dec
dec
das
sub
int3
xchg
mov
repz
stc
mov
xor
ss
adc
lcall
push
jae
and
stos
mov
cltd
test
cs
cmp
xchg
ljmp
mov
lods
mov
add
or
and
inc
out
iret
or
testl
aas
xor
data16
jno
cmp
fs
repz
pop
call
sbb
cmpsl
lock
insb
xchg
and
mov
movsl
stos
inc
fisubs
stos
xor
jno
imul
dec
xchg
add
mov
rorb
fwait
mov
sub
ret
fistl
lods
sub
ljmp
ret
adc
cli
fucomp
pop
mov
push
xchg
sti
subb
xor
sbb
sbb
push
cmp
adc
call
ret
decl
pop
mov
push
xchg
sub
and
dec
inc
add
andb
repnz
popa
movsb
leave
repz
mov
adc
push
or
adc
enter
das
stos
push
inc
stc
loope
pop
mov
mov
push
ss
xchg
inc
or
pushf
mov
dec
repz
iret
outsl
xchg
popf
jl
pop
mov
mov
mov
ret
loopne
jg
ja
mov
int3
hlt
inc
xlat
sub
jle
testl
mov
iret
fldenv
das
or
cmc
mov
ljmp
imul
pushl
in
adc
push
xchg
inc
pop
dec
jb
loopne
imulb
add
fcmovnb
xchg
cmp
sub
fnstsw
pop
enter
push
push
incl
push
dec
push
out
cmp
test
sbbb
lods
lds
pop
in
push
xor
inc
imul
pop
sbb
fwait
or
jmp
popl
mov
push
outsl
iret
jbe
sub
mov
out
insl
and
dec
cltd
xchg
mov
mov
jnp
repnz
push
ss
sbb
test
rcrb
pusha
and
sbb
arpl
stc
sub
outsb
adc
orb
andb
dec
pop
ljmp
add
jb
in
test
dec
ja
imul
mov
scas
sub
addr16
hlt
outsl
xor
mov
mov
jae
repz
mov
cltd
add
sbb
insb
cmp
sbb
cs
and
insl
mov
ja
pop
loopne
push
sbb
dec
fs
jge
push
outsb
mov
inc
mov
sub
bound
loope
mov
cmp
fistl
shlb
lods
cwtl
es
daa
pushf
scas
nop
or
cmpsb
push
insl
out
mov
ret
out
xchg
or
and
adc
mov
idivb
dec
mov
and
jl
data16
mov
pusha
sbb
fs
insl
pop
out
or
push
jo
daa
mov
call
aas
arpl
mov
and
fcomps
notl
hlt
stos
push
jl
xchg
adc
addr16
insl
push
sub
jne
std
insb
jge
push
fnstcw
xor
lea
shl
sbb
ss
ljmp
mov
xchg
loop
mov
ljmp
mov
add
dec
cmp
movsl
adc
lods
ret
push
add
sbb
pop
fadd
adc
mov
pop
mov
inc
xchg
es
xor
xchg
adc
inc
das
adc
jo
add
sbb
ljmp
pop
adc
and
in
out
ret
insb
mov
xchg
aaa
lods
mov
adc
pop
fstps
mov
or
adc
dec
repnz
jo
sbbl
ss
fdivr
jae
and
mov
sub
push
pop
fisubrs
adc
cmp
jns
data16
jmp
ret
push
fs
inc
sbb
xchg
pop
out
adc
popf
shlb
cwtl
popf
scas
push
dec
pop
sub
arpl
push
dec
out
cwtl
pop
ds
std
xchg
push
cmp
in
xchg
in
ljmp
loopne
data16
scas
les
adc
xchg
and
dec
dec
jb
push
aas
xorl
inc
mov
in
adc
and
movsl
mov
outsl
mov
cmpsb
push
jge
xchg
mov
popa
sbb
push
scas
push
and
cmc
das
lcall
test
mov
sbb
and
xor
je
jge
divl
sarb
dec
enter
out
cmp
push
mov
test
sarb
rclb
ds
mov
xor
add
mov
jle
lds
xor
lret
jle
xchg
mov
ret
push
add
or
mov
cld
or
sub
sub
pop
ljmp
or
cltd
jae
xor
add
subl
cmpb
xchg
jl
ja
pop
scas
xchg
outsb
push
jg
pop
cmp
test
adcl
in
fs
repz
pop
fnstenv
sub
arpl
mov
lods
hlt
jmp
dec
jp
stos
jle
lret
xchg
shl
call
cli
dec
xlat
jmp
bound
rorl
or
dec
jl
ficompl
ja
and
cltd
gs
cmpsl
or
pop
fdivrs
add
out
lea
mov
shlb
mov
int3
inc
into
add
inc
mov
mov
mov
leave
ljmp
mov
cmp
loopne
and
or
aam
ret
sti
lcall
dec
shlb
inc
push
rolb
or
inc
fwait
lahf
inc
aad
push
js
sub
jl
add
fiaddl
sahf
cmp
sbb
xor
sbbb
push
shrl
xor
lret
fucomi
dec
cmp
notb
cmp
or
cmc
scas
push
out
inc
aas
and
lahf
pop
loop
leave
inc
and
add
push
std
pop
inc
pusha
or
scas
add
jno
lds
mov
sub
lea
sbb
inc
les
fnsave
int
add
xchg
cld
out
mov
in
jae
call
jecxz
lret
loop
je
xlat
lret
fadds
add
ds
mov
adc
arpl
inc
push
inc
into
adc
or
ss
sbb
dec
out
sarb
in
jae
or
aad
inc
mulb
les
aaa
mov
xor
pushf
mov
xchg
jl
sub
bound
sub
and
jmp
aaa
out
movsb
xchg
popf
inc
and
repnz
arpl
pop
sbb
stc
sbb
cmp
mov
xor
pop
inc
and
in
adc
mov
lcall
sub
hlt
push
inc
fldenv
xchg
ja
xchg
mov
cmp
out
xlat
clc
int
out
shlb
je
xlat
fldcw
std
push
mov
push
rorl
fldcw
cmpb
insb
pop
push
insw
mov
dec
shlb
push
and
lods
icebp
imul
cmpsl
or
or
pop
sbb
push
std
inc
mov
fidivs
mov
lret
arpl
jmp
xchg
xor
imul
mov
sahf
xlat
in
add
mov
mov
cmpsl
push
mov
sub
inc
or
pop
mov
xchg
cmpsb
lds
movsb
or
insl
jmp
push
and
xor
inc
or
in
pusha
adc
mov
dec
insl
xchg
add
ljmp
mov
ficoms
or
add
mov
adc
lods
out
mov
jmp
adcl
push
out
and
test
sbb
push
xor
orb
pop
and
loop
jge
popf
test
mov
daa
push
add
mov
mov
cltd
ret
jg
stos
test
jns
pop
pop
cmp
aas
scas
xchg
dec
pusha
jl
dec
inc
test
rcrl
insb
in
add
dec
insl
xor
push
nop
add
aam
add
subl
icebp
adc
cmp
add
dec
into
dec
lea
leave
ss
cs
xchg
pop
cmp
push
mov
addr16
pusha
push
inc
cmpl
testb
mov
pop
imul
bound
and
ja
mov
out
jge
outsb
and
addb
insb
jmp
sti
jp
aad
jmp
outsl
lods
xchg
call
cmpsb
lods
test
pop
bound
rcl
call
mov
sub
movsl
and
sbbl
imul
pop
mov
xchg
sub
sub
cwtl
cmp
notb
daa
subb
mov
pop
pusha
int3
jl
adc
mov
call
gs
ret
sub
cs
es
sub
inc
dec
push
ret
repnz
sub
sbb
test
out
subb
xor
dec
lret
sbb
sti
mov
pop
cltd
mov
mov
frstor
scas
cmp
daa
lock
xchg
sub
mov
jp
push
cmp
cli
xchg
dec
stos
xchg
and
pop
add
push
push
and
lahf
loopne
fs
sbb
mov
pop
cmc
out
lret
mov
mov
xor
pop
sub
add
mov
stos
test
and
mov
std
je
lahf
sub
int3
int
xchg
out
out
xorb
sbb
or
pop
icebp
das
leave
pushl
in
les
sbb
or
xchg
fdivs
orb
ds
mov
dec
in
push
adc
mov
pop
mov
cmp
jb
add
fcomps
dec
pop
shl
test
mov
fcmovu
stc
dec
sahf
dec
aam
popf
rorb
xlat
sbb
pop
out
ss
in
xchg
aad
insl
jge
mov
and
in
push
mov
xor
mov
js
in
arpl
xchg
iret
xchg
cmp
fstpt
push
scas
mov
gs
mov
jl
ljmp
sbb
and
jbe
xor
pop
lea
sbb
mov
pusha
push
ljmp
fsubrs
cmpsl
cmp
lahf
ss
xchg
push
jo
inc
pop
or
add
inc
xchg
sar
jne
jp
aaa
fs
inc
movsl
in
mov
mov
loopne
push
dec
cld
mov
shll
in
push
mov
rcrb
mov
ljmp
repz
cmp
pushl
jmp
aad
es
cmc
fwait
in
cs
lcall
sub
scas
in
sbb
lcall
xor
popa
or
mov
sub
mov
in
mov
ds
cwtl
inc
mov
xchg
sbb
mov
ret
inc
ret
cmp
out
fldcw
loopne
add
or
dec
and
in
das
imul
xchg
and
jecxz
les
push
dec
push
hlt
pop
jns
int
sub
out
push
pop
in
lea
nop
xchg
sbb
sbb
scas
les
jbe
xchg
and
or
bound
int3
insl
movsb
loope
cmp
ret
std
ret
lods
dec
pusha
into
pop
out
test
pop
aas
rcl
scas
lahf
pop
mov
push
dec
jno
xor
cli
shrb
loope
mov
movsb
jge
cmp
scas
stos
iret
jo
push
in
into
movsb
les
mov
aaa
cmp
or
mov
xchg
adc
icebp
add
divb
mov
test
mov
mov
mov
dec
add
xorb
xchg
pop
push
push
fs
fwait
dec
mov
in
lods
dec
add
jb
or
outsb
mov
lret
mov
push
sbb
rorl
pushf
push
mov
repnz
xlat
xchg
adc
dec
jns
imul
push
dec
mov
cwtl
lods
imul
repz
lret
jb
fcom
nop
subb
cmc
cltd
xor
push
xchg
popf
movsl
scas
jbe
mov
push
add
shlb
fs
xchg
cmp
rclb
sub
out
cmp
adc
push
in
loope
ljmp
xor
xchg
jb
iret
mov
mov
rcr
mov
shrl
test
xor
add
jbe
jne
adc
outsl
fdivs
mov
mov
pop
addr16
cs
push
push
mov
sub
cltd
pop
das
aad
loop
shll
xor
inc
inc
pop
jl
mov
mov
shl
shrl
inc
sub
pop
in
mov
mov
cmp
popa
inc
in
push
add
psllw
jnp
aas
xor
sub
iret
in
or
insl
mov
scas
inc
jecxz
daa
subl
sub
add
add
xchg
xor
mov
jns
sbb
cmp
mov
pop
fdivs
imul
jmp
es
mov
xor
ss
push
lret
cltd
outsl
adc
jno
das
aaa
dec
pop
and
sub
das
xchg
mov
int3
sbb
loopne
xor
int
push
and
mov
jg
mov
imul
sbbl
shrb
and
hlt
psubw
xor
adc
xchg
enter
ret
sub
outsl
mov
bnd
mov
mull
into
dec
push
add
popf
ret
rcrb
addr16
inc
fildll
dec
mov
xchg
jb
pop
addr16
fs
push
push
dec
vaddss
push
mov
out
cmpb
mov
imul
cmp
and
sbb
mov
in
data16
call
and
xor
jns
inc
and
std
cmp
popf
movsl
add
inc
arpl
jbe
mov
lds
pop
and
out
xor
sbb
mov
clc
lcall
test
dec
in
fdivs
sub
xor
mov
gs
ds
mov
fisttps
int3
mov
std
pop
push
cmpsb
mov
fidivrs
test
mov
add
bound
xchg
aas
sbb
in
fwait
stos
dec
pop
rcrb
or
jle
jno
inc
enter
xchg
stos
popf
mov
lcall
inc
mov
xchg
mov
decl
mov
mov
mov
imul
or
loopne
loop
ret
jne
mov
std
test
enter
and
dec
xchg
push
jb
in
mov
mov
mov
and
test
int
mov
test
sub
out
push
inc
mov
adc
repz
adcb
push
jl
or
add
adc
repnz
inc
nop
mulb
mov
repz
js
xor
inc
testb
pop
sbb
in
call
dec
insl
or
add
or
outsl
in
outsl
gs
or
pusha
movsb
jns
jnp
mov
jb
and
inc
cwtl
push
sbb
jle
rcll
xor
divl
mov
repnz
sub
sub
dec
fbstp
mov
sti
aaa
inc
dec
stc
cmpsb
xor
addr16
and
jl
add
sbb
add
in
add
push
xor
je
sbb
int
or
mov
out
outsb
xor
push
testl
imul
pop
jmp
mov
pavgb
lods
int3
push
adc
orl
dec
insl
mov
xor
lods
mul
scas
xlat
mov
cs
pop
jnp
cwtl
push
ret
cmovp
cmpsl
std
mov
cmpsl
decb
gs
repz
rcl
jp
mov
nop
sbb
loope
xchg
ss
aad
mov
and
or
cltd
and
divb
sub
add
and
in
mov
or
stc
pop
aas
divl
cltd
push
fidivl
out
jg
movsb
xor
push
addb
xchg
repz
aam
pop
mov
out
xor
xor
or
adc
jbe
stc
push
inc
int
nop
and
push
fstpt
sbb
outsl
hlt
cmp
add
xchg
pop
pusha
xchg
clc
jno
or
ljmp
push
movsl
dec
fistps
add
mov
out
adc
loope
movsl
repz
in
jb
incl
add
pop
lea
inc
dec
sub
ret
mov
mov
ret
lds
xchg
add
pop
movsb
call
mov
loop
sub
stos
call
loopne
das
xchg
pop
adc
push
std
daa
sysexit
xchg
or
imul
fwait
insl
lret
stc
pop
mov
iret
aaa
enter
fimuls
sbb
add
dec
jg
mov
xor
sbb
xlat
xchg
hlt
lcall
lods
inc
push
mov
inc
add
je
lahf
hlt
dec
mov
cltd
jg
enter
pop
mov
push
int
push
outsb
push
jnp
es
add
inc
jbe
mov
sbb
ficoml
stos
mov
in
sub
enter
aas
fdivl
mov
xor
insb
aam
adc
outsl
jno
stc
data16
jecxz
aad
js
mov
add
pop
cmp
mov
or
lock
repz
mov
mov
imul
dec
loopne
adc
dec
jge
ljmp
lahf
xlat
int3
sbb
icebp
push
cmp
ja
mov
mov
xchg
jne
mov
incl
xor
andl
in
in
ret
mov
add
sbb
int
add
out
inc
pop
movsl
and
jg
fs
in
xor
imul
cli
mov
loopne
outsl
cltd
adc
lahf
addr16
inc
scas
fwait
lcall
rclb
mov
pusha
ret
test
hlt
mov
xor
jae
aas
sub
cmc
fisubs
rclb
cmc
ds
mov
cmp
jne
and
or
cs
sub
scas
les
ljmp
lock
jns
push
sub
sti
int3
xchg
mov
bound
and
in
push
imul
fucomip
dec
fwait
lret
adc
xchg
push
imul
cli
mov
les
lret
mov
lods
mov
sarl
cli
adc
clc
push
adc
inc
movsb
aaa
int
cmp
pop
pcmpeqb
loope
popf
lods
and
push
imul
gs
shlb
and
xor
subb
pop
shr
jnp
lcall
sub
repnz
adc
test
dec
aad
jns
xchg
mov
pusha
arpl
test
dec
cmp
mov
dec
fisubs
pushf
sbb
xor
rcl
xor
push
and
inc
sub
push
pop
inc
iret
jmp
pop
dec
mov
jg,pn
leave
dec
adc
push
mov
dec
cld
ficomps
jecxz
lea
sub
ror
outsl
in
push
aam
jns
pop
inc
mov
mov
in
jae
bound
mov
or
add
cmp
cmp
out
movsb
lods
push
mov
test
push
in
scas
lahf
sar
lods
repz
jecxz
imull
pushf
xchg
in
idivb
in
sti
mov
mov
fisubrl
jmp
enter
inc
jne
dec
adc
sbb
sbb
fdivrs
mov
int
imul
cmp
or
adc
ret
jg
xchg
call
lret
jno
pop
dec
fwait
mov
xchg
lretw
sub
das
or
insl
xlat
leave
push
jns
dec
mov
fadds
jp
ljmp
mov
ret
push
lret
inc
movsl
jno
push
roll
xor
repnz
xchg
cmpsb
xchg
ret
pop
insb
lcall
outsb
paddb
test
leave
mov
mov
repnz
es
lret
adc
out
inc
enter
stc
ja
arpl
js
mov
dec
sub
stc
mov
out
fidivl
bnd
rcrb
in
mov
in
clc
inc
xor
push
mov
lock
sub
and
add
popa
aas
subb
pop
mov
aam
scas
jno
inc
push
cld
stos
cld
jbe
mov
mov
orl
nop
scas
testb
nop
jp
sub
mov
jg
cmp
and
xor
cwtl
sbb
ret
pop
push
cmp
xchg
enter
ficomps
xor
cmp
xor
push
inc
xor
out
fstpl
push
scas
outsl
pop
popa
syscall
pusha
in
inc
dec
iret
fdivl
stc
dec
jge
cs
dec
addl
rcr
sbb
pop
cli
outsb
into
or
pusha
repnz
fimull
imul
jmp
mov
cmp
pop
sub
jnp
add
ficoms
add
cmpb
les
push
enter
adc
mov
repz
nop
sub
ljmp
pop
dec
adc
test
or
jno
sub
pop
xchg
loop
fistpll
in
push
adc
lahf
inc
shlb
mov
cwtl
fcoml
pusha
xor
push
outsl
cmpsb
fwait
in
mov
ret
jge
lret
jmp
or
xor
inc
cmpsl
fucom
adc
mov
loope
js
or
add
ljmp
js
gs
ljmp
das
push
fs
nop
stos
xor
js
or
xchg
jmp
scas
fstl
mov
mov
or
shll
and
data16
je
sbb
push
cli
push
pop
push
push
fs
js
ret
dec
sub
push
stc
stc
frstor
ljmp
sbb
cmp
mov
and
sbb
push
dec
lret
cmp
leave
mov
push
push
xchg
pop
cmc
push
mov
mov
cmp
adc
jno
imul
mov
call
jnp
xchg
push
repz
hlt
mov
mov
cs
mov
pop
add
mov
jnp
int3
xchg
js
dec
and
ror
sbb
mov
inc
test
mov
je
lret
loopne
nop
jae
jmp
loopne
dec
in
roll
imul
push
in
out
mov
pop
fimuls
loopne
jl
sub
lods
adc
xchg
aaa
push
and
mov
mov
test
inc
js
ret
and
and
je
jae
jns
mov
lods
cmp
xor
outsl
sahf
movsb
mov
jle
cld
jp
sahf
push
icebp
ds
jnp
pop
xor
loope
rorb
aaa
sahf
jns
imul
sahf
adc
cmpsl
jno
inc
sub
adc
inc
test
adc
hlt
add
jo
rorb
dec
outsb
fwait
arpl
sarl
jecxz
cwtl
jl
stc
pop
dec
mov
xor
mov
in
iret
cli
mov
dec
mov
sarl
xchg
loope
addr16
cmp
xchg
mov
jp
pop
ret
and
jb
jmp
xchg
sub
pop
fsubrs
nop
loop
push
jbe
repnz
inc
ss
jbe
xor
inc
ja
sub
mov
xchg
xchg
mov
push
mov
inc
imul
les
push
test
cld
ds
enter
mov
jne
xchg
sbb
mov
jl
dec
repz
or
and
in
scas
xor
mov
push
add
and
bound
test
mov
int3
rorb
sub
pop
cmp
stc
mov
adc
stos
jbe
dec
mov
inc
xchg
dec
cld
mov
inc
sub
add
dec
cmp
push
pop
decb
jge
xchg
mov
clc
std
fmul
lods
push
inc
and
pop
push
sahf
push
pusha
jns
inc
sbb
inc
loope
cmp
sbb
mov
ffree
sub
nopl
in
arpl
push
in
test
mov
iret
and
lea
inc
and
cmp
scas
roll
int3
nop
xchg
mov
sbb
push
xorl
or
mov
cltd
lcall
rcl
lock
mov
push
nop
movsl
xchg
xchg
stos
inc
sti
xchg
lcall
sar
fwait
out
and
xchg
and
xchg
movsl
jle
leave
aaa
int3
insl
jae
mulb
psubusb
or
xor
aad
pusha
push
sti
jne
out
and
mov
outsb
or
pop
dec
sub
mov
ljmp
mov
outsb
or
call
popf
cld
dec
jmp
pushl
js
int3
adc
cmp
fldt
faddl
pop
and
push
cmpsb
lahf
xchg
imul
pop
imul
push
sbbb
inc
cmc
dec
jne
mov
outsl
lods
fstl
or
out
mov
popf
dec
dec
inc
cmc
sbb
and
cmc
xor
push
icebp
adc
mov
or
mov
sbb
mov
and
push
push
pop
cmpsb
push
rcl
jne
and
ret
aaa
mov
fisubs
push
sbb
inc
mov
jg
and
popf
mov
push
xchg
mov
das
push
cmc
and
inc
inc
mov
or
pop
pop
adcb
test
ss
mov
push
jg
loope
nop
iret
lea
arpl
stos
xchg
inc
jmp
sub
and
mov
push
mov
ja
idivb
pop
fcompp
sar
outsl
fisubrs
insl
icebp
fisubrl
push
in
test
xor
cs
out
mov
mov
push
test
mov
cltd
ror
mov
out
pusha
ss
mov
bound
iret
movsb
cmp
sub
adc
mov
jb
xor
sub
testl
in
lcall
lret
aam
repnz
mov
fisttpl
int
inc
lret
mov
cmp
movsb
shrl
jb
cmpsl
movl
jl
sbb
in
mov
dec
jge
mov
mov
or
push
cmp
push
add
cwtl
test
push
int3
add
jb
cmc
arpl
push
cmp
loope
push
mov
shl
loop
incb
pusha
sub
mov
enter
cs
sarl
cmp
mov
out
loop
cmpsw
data16
test
ffree
shll
adc
add
adc
and
cmpsb
sub
mov
mov
push
push
cli
hlt
jge
mov
mov
mov
daa
xchg
imul
out
ret
fcmove
je
adc
mov
sub
xor
xor
inc
lret
xchg
lret
cmc
mov
jae
cmp
jge
inc
out
arpl
outsb
das
in
cmpsb
push
cmc
fdivrl
sbb
dec
sahf
testl
or
shrl
mov
insl
dec
pusha
enter
and
out
movsb
scas
add
gs
subb
pop
lahf
xor
orl
cwtl
cmc
sub
in
ja
sarl
inc
xor
in
por
pop
sub
pop
in
rcll
add
push
pop
push
loope
test
dec
fistl
xchg
sar
inc
mov
lock
cmp
fs
les
dec
adc
cltd
popf
sbb
cmp
or
out
cmp
adc
cmp
aam
in
int3
mov
cltd
push
dec
mov
and
mov
rorl
xor
aaa
push
movsl
xor
nop
scas
in
jo
sub
adc
cmpsb
add
jp
dec
add
mov
ljmp
outsl
xchg
pop
mov
jg
xor
dec
xchg
inc
mov
outsb
pop
imulb
dec
mov
lret
getsec
cmp
ljmp
sub
test
mov
jp
xchg
call
dec
push
clc
arpl
push
sub
xor
notl
jns
adc
std
leave
int
imul
repz
mov
or
push
jl
pop
inc
and
pop
popa
jge
and
cld
xorl
lcall
out
mov
cmp
mov
mov
pop
test
int3
pop
jecxz
fildl
xlat
popa
loopne
pop
pop
loopne
pop
js
cmp
xlat
cli
out
lahf
loope
xchg
add
imull
and
adc
test
inc
aad
jnp
cmp
adc
mov
mov
insl
scas
fs
jl
loop
mov
call
push
dec
fnstenv
xor
stos
inc
jnp
test
xor
fadds
ret
gs
movsl
or
fs
mov
or
inc
scas
xchg
mov
jge
jp
dec
jecxz
out
mov
xor
movsb
or
adc
lret
push
push
cld
mov
int
add
aad
mov
ss
cld
mov
cs
push
mov
push
mov
push
jle
dec
cwtl
test
jmp
jmp
sahf
lret
scas
sbb
daa
jp
mov
adc
jns
test
aaa
xor
jns
fs
lahf
adc
ljmp
fldenv
push
jmp
dec
out
movsbl
icebp
mov
jmp
push
push
push
pop
imul
pop
imul
sub
fstps
pushf
addl
jns
xchg
popa
fcomip
jmp
adc
xor
mov
and
jecxz
out
xor
out
adc
stc
cltd
cmpsb
fisttpl
xchg
adc
jno
adc
cld
sub
cmp
dec
mov
rorb
mov
ret
jno
jno
filds
test
cmp
jae
xorl
pop
pop
pop
js
sbb
std
jecxz
mov
dec
pop
aad
mov
hlt
mov
enter
dec
fsub
loope
addr16
cltd
shrl
popa
xchg
add
push
dec
mov
and
sti
add
mov
adc
inc
repnz
insl
pushf
leave
ja
insb
clc
mov
xor
lds
aam
das
jbe
out
sbb
or
sbb
call
mov
cli
cmc
xor
adc
shl
push
movsl
lahf
push
fstpt
or
test
cltd
nop
sbb
jmp
mov
sbb
dec
sbb
movsb
fmull
push
roll
and
nop
fistps
pop
push
test
push
ror
test
shll
stos
xchg
cmp
aad
aam
sub
mov
fnstenv
mov
fs
xor
jbe
sub
ds
pop
jp
mov
rcll
adc
dec
stc
into
fcoms
mov
mov
pushf
and
addb
mov
rorl
cs
cmc
sub
ljmp
stos
sbb
hlt
sti
enter
shrb
ret
jp
shrb
gs
mov
fucomi
add
push
hlt
inc
nop
mov
je
ret
cli
sahf
mov
sbb
out
enter
or
cmp
push
push
cmpsb
xchg
or
movaps
aas
and
iret
mov
in
cmp
insl
jp
pop
fmuls
mov
xor
arpl
push
aas
icebp
cmp
jmp
inc
fs
inc
icebp
xchg
push
popl
mov
dec
jnp
xchg
ds
out
push
insl
pop
rolb
xor
mov
cmp
in
stos
shll
xchg
pushf
fwait
in
es
push
addr16
roll
and
mov
add
adc
nop
mov
xor
jmp
cmp
sti
push
rclb
dec
orb
jns
or
push
lods
or
cmpps
imulb
daa
cmp
jp
mov
push
jns
push
in
test
mov
std
add
rorb
xchg
lret
push
arpl
clc
sub
xorl
jmp
mov
ds
test
jle
sti
xor
lret
mov
jne
xchg
and
lods
sub
mov
es
fs
mov
cmp
inc
in
inc
cltd
or
cli
cmp
es
add
test
rol
adc
movq
mov
pop
dec
hlt
repnz
movsl
sahf
jae
mov
and
outsb
ja
inc
jle
addr16
fs
cmp
sub
mov
jmp
cmp
pop
shll
nop
push
dec
mov
inc
sbb
dec
outsl
call
sarl
cmc
add
outsl
push
fstp
call
dec
or
mov
xlat
fldenv
xor
cmp
jl
mov
dec
xor
ftst
adc
add
xchg
sbb
adc
in
ds
insb
cmp
jmp
sarl
mov
mov
push
in
add
and
shr
xchg
leave
jb
loopne
ret
push
ret
sbb
fbld
aaa
mov
xchg
pop
orb
mov
or
mov
jne
add
push
je
fcmovbe
mov
sub
out
sbb
arpl
aas
jge
imul
mov
jo
in
sti
sbb
sub
or
sti
add
and
subl
ds
arpl
pushf
in
rorb
fcmovb
inc
les
js
xor
jne
mov
or
inc
addr16
xor
dec
cs
mov
movsb
pop
xorl
popf
ret
inc
xchg
push
loop
daa
dec
cmp
lret
adc
lret
repz
pop
fwait
jne
jl
dec
ret
jno
pop
loopne
xor
movsl
insb
shrb
es
or
push
adc
mov
inc
inc
dec
repnz
push
or
repnz
xchg
jecxz
imul
xor
repz
hlt
jae
fnstsw
sub
shll
inc
clc
insb
pop
pushl
fsubs
and
scas
gs
das
xchg
pop
and
mov
mov
outsb
jge
cmp
loopne
int3
mov
dec
sbb
adc
pop
push
sub
loop
add
iret
xchg
jns
jecxz
adc
mov
sahf
lcall
loop
gs
fwait
arpl
outsb
xchg
jbe
jbe
cwtl
dec
xor
dec
xchg
xor
pop
aaa
xchg
push
imul
insb
dec
pop
jmp
ficoms
out
sub
and
out
jbe
daa
imul
outsl
or
or
shll
inc
jno
dec
jl
fisubs
inc
push
dec
scas
pop
aas
scas
fwait
jl
enter
aaa
cmp
imul
aad
les
dec
push
add
push
xchg
xor
scas
inc
cs
aam
jle
lahf
in
dec
mov
cmpsb
lahf
loop
in
cmpsl
enter
sub
jle
in
pop
lea
and
fwait
loope
xor
fwait
loop
jo
add
push
movsb
cmp
jmp
mov
sbb
aad
push
imul
mov
push
sbbb
or
jb
repnz
and
cltd
pop
in
mov
stos
aaa
add
cld
pop
push
pop
les
dec
xchg
addr16
out
popa
mov
cmp
cli
ds
jns
and
push
out
int3
adc
sub
ret
dec
lods
jnp
ss
xchg
lods
mov
int
in
cmp
or
and
rcrl
or
and
cmp
push
subl
inc
cmp
fdivrs
repz
dec
in
mov
shl
xchg
xchg
fsubrp
stos
into
in
sbb
ljmp
bound
push
push
shll
mov
shlb
insb
and
mov
pop
pop
xlat
pushf
incl
lahf
inc
pop
cbtw
mov
out
scas
mov
adc
sbb
test
jno
xor
dec
mov
rorl
pop
and
ret
jo
das
and
jae
subb
inc
fwait
or
push
mov
popa
mov
jo
mov
pushf
cmp
es
or
pop
stos
shrl
jo
fsubl
cmp
push
sub
sub
lods
mov
mov
out
adc
inc
cmpl
test
and
adc
xor
popa
rcl
shr
and
cmp
sahf
les
int3
insb
mov
xchg
xchg
mov
jne
sub
add
ss
push
stc
fstl
cwtl
movsb
xor
and
or
mov
lods
scas
push
movb
mov
lods
scas
insl
jmp
loopne
pop
shlb
add
mov
mov
pop
mov
lds
mov
cld
xor
ja
lcall
xchg
push
inc
scas
jns
add
sbb
mov
or
leave
or
mov
int
jns
xchg
hlt
pop
jecxz
adc
and
popa
andl
sbb
pushf
lods
jge
cmc
std
inc
mov
pop
pop
jnp
sub
ljmp
sti
mov
xchg
icebp
loopne
mov
pop
jl
or
jmp
push
mov
test
mov
cmp
idivl
clc
popa
add
xor
movsl
and
jle
mov
enter
enter
dec
iret
push
jbe
ss
subb
in
or
ljmp
sbb
or
int
sbb
fiaddl
mov
sbb
mov
sbb
jnp
and
push
movsl
test
ret
xchg
in
ror
sbbb
xchg
mov
push
dec
imul
movsl
and
pop
xor
fbstp
add
rcr
lds
nop
ss
ja
xchg
repnz
xchg
test
into
ds
sbb
xor
sbb
nop
or
adc
rcrl
inc
mov
in
mov
cmp
cld
mov
pop
mov
xor
xchg
cli
ret
dec
or
jbe
ss
pop
push
mov
or
out
pop
clc
jmp
xchg
jno
repnz
notl
pop
stc
lahf
xor
xchg
andb
xchg
mov
xchg
faddl
xor
or
sbb
cli
add
cld
scas
inc
in
mov
call
inc
cmp
movsb
push
aaa
lahf
cmpsl
push
into
or
push
adc
loop
ret
mov
xorl
add
and
xchg
mov
arpl
cs
push
sahf
pop
sub
sahf
pop
inc
ror
sarl
cld
xchg
add
push
and
push
push
test
mov
fisubl
out
xor
xor
push
push
inc
pop
and
inc
mov
sub
jecxz
push
inc
and
psubsb
jo
enter
push
xchg
jo
jge
rolb
pop
test
cmp
xor
mov
xchg
jno
mov
mov
jge
jnp
sub
mov
cs
mov
imul
roll
xchg
cmp
ljmp
and
stos
sub
aam
jb
xor
mov
inc
xor
out
mov
mov
mov
push
ds
ficoml
loope
adc
dec
in
jb
test
sub
inc
dec
push
push
mov
push
mov
movsb
lcall
nop
pushf
xchg
xor
fs
int3
cmp
xchg
fcmovnbe
es
fistpll
rorb
push
inc
adc
ljmp
sbb
sbb
test
xchg
mov
xor
lret
out
orps
mov
cmpsl
mov
mov
inc
outsl
push
movsb
je
rcl
cs
inc
cmp
jno
imul
sub
pop
adc
push
and
filds
aad
or
xchg
jo
fildll
and
shll
and
sbb
roll
into
cmpsl
sbb
pop
ss
sub
cmp
fbstp
inc
ds
cs
inc
push
xchg
dec
cs
inc
or
ficoms
pop
xchg
or
jge
jecxz
out
pop
mov
or
loop
test
jge
add
lea
in
in
sbb
add
imul
xchg
and
call
cli
and
outsb
xchg
cmp
clc
fcmovbe
xor
cmc
mov
int
cmpl
adc
inc
jne
and
leave
icebp
lahf
push
in
cmp
stc
or
test
jge
push
fisttpl
jno
cli
mov
cmp
int3
cmc
or
clc
sti
into
cmc
mov
cld
jmp
jo
jecxz
mov
fs
xchg
in
sub
mov
call
enter
and
or
mov
mov
lahf
roll
rorb
call
inc
ss
jb
add
mov
xchg
mov
sbb
outsl
sarb
or
shlb
mov
xchg
cmpsl
pop
jmp
cmp
rorl
loop
or
or
sti
mov
mov
outsl
and
jecxz
push
cmp
leave
lahf
popf
xchg
fs
icebp
pop
or
xor
aad
sbb
shrb
mov
sub
sub
cmpsl
inc
xchg
jmp
and
bts
sahf
pop
fwait
leave
cmp
mov
out
cmp
ret
pushf
sub
jb
dec
jbe
xchg
pop
roll
mov
imul
movsb
or
cs
insb
aam
jae
jl
mov
xlat
mov
repnz
arpl
jle
stos
xchg
fsubl
add
pop
dec
inc
inc
pop
inc
fisttps
sub
jge
xchg
cmp
test
popl
and
imul
inc
mov
mov
ljmp
jg
jb
jp
sub
test
sbb
mov
and
mov
mov
push
mov
fisubrl
jb
in
jle
sub
pop
movsb
mov
xor
jbe
jmp
pop
sbbb
call
sbb
icebp
stos
add
fdivrs
add
clc
jmp
jae
push
add
data16
les
scas
icebp
int3
dec
or
mov
cmpsl
mov
xorl
mov
add
in
and
pop
lds
scas
adc
test
inc
push
jae
xor
push
imul
xchg
imul
icebp
ds
in
jns
adc
and
mov
js
bound
lods
mov
dec
out
jge
xchg
in
loopne
mov
push
pop
jns
leave
repnz
mov
in
mov
popf
push
inc
jb
insb
mov
test
xor
mov
jg
xchg
mov
lea
adc
cwtl
push
mov
dec
imulb
out
insl
push
icebp
dec
adc
les
add
mov
xlat
inc
in
cmp
push
nop
jmp
push
push
inc
push
jecxz
fimuls
aas
fcomi
jo
mov
std
movsb
add
data16
mov
adc
mov
cs
and
dec
ja
flds
ljmp
xchg
lods
xor
fiadds
clc
push
fimuls
xor
lret
mov
pop
xchg
int
test
mov
sbb
inc
imul
inc
fsubl
gs
push
mov
fdivrl
test
add
aad
mov
ljmp
lods
pusha
mov
testb
jbe
icebp
xchg
xchg
inc
ror
pop
ljmp
js
in
jge
adc
ljmp
sbb
mov
aaa
pushf
xlat
mov
insb
xchg
inc
xchg
mov
pop
loop
add
and
and
clc
leave
dec
int
push
jmp
mov
inc
mov
sub
loopne
and
add
aaa
mov
out
ja
stc
stos
pop
jno
ljmp
xor
test
fstpt
or
enter
push
add
mov
dec
popa
std
jecxz
int3
add
icebp
or
dec
lcall
dec
lahf
lock
in
mov
pop
out
push
mov
popf
xor
nop
add
sub
or
adc
hlt
xlat
repz
and
aam
cmp
mov
xchg
mov
mov
add
inc
push
fisttps
in
repz
dec
ja
insb
bound
lcall
inc
aaa
inc
ret
stos
gs
push
leave
pop
fs
and
push
push
xlat
adc
cmpsb
push
mov
int3
in
pop
sbb
stos
lea
lret
sub
add
xchg
xchg
push
push
lret
loope
addb
orl
or
lret
es
sbb
and
push
push
fwait
addl
jae
gs
pop
fists
cmp
pop
bound
or
fwait
sbb
leave
inc
and
arpl
hlt
ds
out
mov
dec
leave
mov
dec
das
inc
xchg
inc
lahf
sub
outsl
dec
movsb
jl
dec
xor
mov
sub
jp
repz
or
inc
jmp
test
clc
test
test
or
sbb
mov
iret
jmp
inc
movsb
jns
fadds
push
mov
out
xchg
int3
loope
sub
ret
jge
and
dec
pop
lock
jmp
flds
inc
cmp
jne
loop
jg
pop
pop
cs
sbb
inc
clc
fcmovnu
stos
xor
lods
aas
mov
mov
bnd
dec
js
pop
movsl
push
push
mov
pop
out
jns
adc
cmp
pop
cmc
stc
js
out
sbb
mov
push
popa
adc
mov
int
push
in
das
xor
gs
sbb
js
scas
mov
or
movsb
dec
scas
sbb
stos
jbe
xor
lahf
jae
cld
sahf
mov
aaa
push
enter
dec
jp
aaa
addr16
sub
sbbl
aas
aad
xchg
push
mov
stc
add
int3
and
mov
push
fiaddl
cmc
fsubs
xchg
movsb
shll
xor
adc
mov
sub
sub
push
xchg
pop
lcall
inc
and
sub
in
cltd
or
or
inc
int3
mov
sub
pushf
call
outsl
scas
or
dec
and
les
jge
push
iret
dec
dec
xor
xchg
push
into
add
fsubrs
or
jbe
out
mov
sti
repz
mov
leave
jmp
lods
xor
lcall
ficoml
jp
xchg
orb
daa
mulb
mul
push
mov
mov
push
cmp
imul
sbb
mov
sarl
push
mov
flds
stos
mov
or
cmp
sbb
sti
mov
cmc
cld
inc
sarb
imul
pop
xor
mov
xchg
add
lea
push
sti
jae
ljmp
bound
inc
dec
lret
stos
pushf
test
movsl
pop
pop
mov
push
or
push
xor
and
xlat
cld
inc
xor
test
stos
sbb
mov
movups
lds
ja
inc
cmp
lahf
mov
inc
dec
and
mov
push
ret
pop
sub
lahf
sbb
shrl
xchg
pop
in
aas
push
xchg
mov
cmp
add
jge
clc
outsl
push
lahf
add
stc
insb
sub
movsl
incb
cwtl
scas
in
and
loop
cmp
iret
sub
jbe
dec
pop
test
sarl
ja
inc
jecxz
xor
test
and
movsl
fidivrs
pusha
dec
pop
pusha
enter
test
mov
test
jle
out
inc
in
pop
sbb
outsb
dec
pusha
inc
jecxz
inc
jmp
add
cmp
iret
lret
xchg
cld
loope
in
hlt
mov
and
mov
lret
rcrl
push
push
inc
adc
push
addr16
cmpsb
call
sbb
pop
mov
fnstcw
movsl
add
add
int3
scas
int
push
in
push
mov
mov
xchg
je
out
pop
dec
roll
stos
lods
sbb
mov
scas
sbb
loop
cmpsl
add
sbb
in
adc
repnz
or
mov
icebp
bound
inc
or
cli
or
lahf
pop
adc
ret
shr
pop
cmp
int3
xchg
cli
out
aam
rcl
hlt
leave
in
fcoms
adc
sar
jecxz
and
arpl
cmc
push
jbe
rclb
shrb
sbbl
popf
sub
imul
mov
rclb
fs
pop
inc
or
mov
sarb
filds
movsl
adc
mov
mov
mov
aam
inc
loope
insb
pop
pop
lods
popf
mov
adc
scas
call
lret
jns
inc
aas
inc
aad
dec
sub
mov
cmp
inc
loope
cmp
adcb
aad
hlt
enter
mov
fcmovnbe
mov
add
lock
mov
jle
fs
cmp
out
mov
dec
sub
in
in
mov
out
xor
leave
cmp
addr16
rcrb
cs
jl
jmp
or
pushw
aam
incb
push
sbb
jnp
imul
loop
xor
jg
jp
je
adc
dec
mov
cld
sbb
xor
movsb
das
cmp
or
jmp
lock
out
cltd
popa
cmp
in
pusha
rorl
stc
xor
int
mov
jmp
test
adc
push
out
test
stos
add
adc
add
loop
rclb
adc
ret
mov
cmp
mov
mov
jb
inc
cmp
shlb
push
enter
out
fwait
jo
fadd
mov
adc
in
cmp
mov
or
stos
jnp
les
and
aaa
cmp
xor
cmp
push
imul
shlb
fildll
xchg
push
mov
cltd
insl
cmp
lods
mov
shrb
pop
or
inc
xchg
or
and
and
fstl
add
lds
mov
ret
outsl
inc
pop
pop
jno
adc
and
cmpsb
push
jg
mov
xchg
mov
xchg
sbb
je
testb
dec
pop
jge
aam
adc
mov
add
pop
ficoms
and
pop
adc
cmp
movsb
shrb
xchg
movsb
int3
das
repz
addl
pop
lock
test
adc
cmp
loopne
rolb
scas
sti
inc
xchg
in
lahf
push
int3
mov
js
ret
iret
stc
mov
xchg
out
xchg
xchg
lods
inc
inc
out
lret
add
dec
mov
clc
mov
clc
fstpt
ja
pop
lock
sbb
jg
and
into
insb
or
repnz
push
cmc
mov
sub
bound
arpl
add
jo
push
lahf
inc
nop
int
in
fmuls
sbb
mov
pop
and
jns
movsl
push
add
push
mov
pop
mov
and
mov
and
push
jno
mov
mov
pop
incl
push
lret
out
lods
xor
ja
loope
mov
dec
cmc
mov
push
imul
jp
push
xor
cmp
jne
fs
in
fsubl
lock
mov
into
popa
iret
mov
sbb
dec
dec
mov
ja
pop
push
sub
inc
and
sbb
daa
aas
mov
sub
movsb
js
add
pop
push
push
call
cwtl
fwait
ljmp
insb
inc
sbb
cltd
pop
or
sub
and
fwait
mov
int3
or
repz
add
or
sbb
or
fwait
xchg
dec
adc
out
jb
cmp
dec
mov
add
call
cld
inc
daa
xorb
icebp
cmpsb
dec
fucomi
pop
inc
stos
push
mov
dec
fadd
sbb
and
xchg
rcr
fdivrl
pop
gs
xlat
jg
jg
lcall
insl
in
mov
add
sbb
mov
scas
fistps
mov
fildl
imul
out
in
mov
les
lahf
mov
jg
icebp
jns
lretw
sub
mov
dec
sub
imul
push
cwtl
mov
sbb
mov
sub
pop
and
adc
ret
popf
inc
mov
sbb
add
pop
inc
inc
ret
int
mov
outsl
sub
jl
jo
pusha
sub
sub
movsl
ss
xchg
aas
mov
popf
in
lea
stos
xor
xor
pop
in
dec
sbb
xor
repnz
jns
mov
mov
scas
add
xor
or
xorl
add
add
pop
pusha
inc
xchg
cmc
out
mov
dec
cmp
out
dec
mov
add
jns
fisubrs
daa
fiaddl
movsb
imul
inc
pop
cli
rcr
and
jns
sbb
imul
iret
add
add
aaa
xor
in
jge
add
mov
sti
pop
out
jo
dec
fsubs
aam
bound
call
inc
or
movsb
push
sbb
cs
or
pusha
fstps
mov
loop
xor
jecxz
in
test
negl
pop
repz
lahf
dec
lret
and
mov
lea
frstor
ljmp
adc
stos
xor
jecxz
std
xchg
in
int3
jo
cltd
xor
mov
xchg
jp
inc
push
test
das
inc
xor
lock
negb
daa
pop
insl
cld
sub
out
inc
jmp
inc
sbb
cmc
sub
pop
cwtl
adc
lcall
cmp
pushf
stos
cmp
xchg
push
mov
xchg
loop
les
push
cmp
pushf
and
jo
lods
out
xor
bound
hlt
xchg
or
mov
add
or
rol
das
dec
mov
mov
mov
negl
add
fsubp
test
adc
cld
add
ror
or
adc
mov
aaa
push
lret
jno
lea
call
jns
testb
and
mov
pop
lahf
push
dec
mov
aad
lret
nop
decb
pop
lcall
adc
punpckhbw
stc
subb
leave
xor
cltd
rorb
xor
movsb
sub
dec
outsl
cltd
call
sub
mov
gs
addr16
sub
out
dec
inc
jne
lods
arpl
adc
push
lock
xchg
div
push
cli
push
jae
std
out
mov
jo
ja
fdiv
out
scas
imul
fs
mov
in
lret
in
insl
cld
fsubrl
add
in
inc
sbb
test
icebp
or
mov
sub
je
lds
add
ljmp
jl
and
inc
sub
imul
pop
inc
or
popa
lcall
std
lret
dec
xchg
inc
inc
scas
and
and
repz
js
rol
outsb
jg
jge
or
sub
ret
push
in
jle
cmp
insb
enter
aad
jnp
or
push
sbb
call
sbb
adc
push
sbb
pusha
or
add
and
ret
sub
mov
mov
int3
lret
inc
push
add
ret
lret
cltd
jno
xchg
pop
scas
int
mov
xchg
fldlg2
or
btc
lods
xchg
push
popf
jns
pop
addl
sbb
lret
cmc
ss
jno
out
sahf
loop
lcall
fiaddl
leave
dec
xor
sub
lret
orl
sbb
mov
loopne
inc
sbb
cmc
clc
cmp
les
jmp
xor
sbb
mov
mov
mov
fisubl
xchg
pop
push
movsl
mov
adc
jno
inc
jg
lds
mov
test
ret
leave
add
lods
idivb
ret
pop
je
xor
sub
xlat
test
popf
dec
fsubrp
out
push
mov
xchg
add
xor
push
mov
sub
scas
addr16
cmp
cmp
sbb
jns
add
inc
test
pop
push
lret
pop
push
shrl
xchg
push
repz
push
pushf
push
loope
cmp
arpl
dec
mov
lret
mov
mov
call
sub
sub
lods
sbb
int3
and
negb
enter
pop
jnp
or
xchg
sbb
loope
push
xchg
sbb
shlb
sbb
mov
lods
aaa
fwait
fs
mov
mov
pop
test
sub
ret
inc
jl
mov
stos
popf
mov
aam
sbb
inc
and
das
dec
inc
push
add
mov
xor
dec
pop
and
pop
gs
daa
fisttps
mov
mov
stos
out
ljmp
jle
cli
in
std
and
scas
lea
pushf
mov
mov
int3
rorl
pop
neg
sub
inc
and
repnz
add
jmp
and
sti
cli
roll
push
fcoms
cwtl
inc
xchg
into
cwtl
pop
mov
and
mul
jae
inc
outsb
inc
mov
jmp
loope
xor
jmp
xchg
das
dec
mov
add
test
imul
stc
xor
fiaddl
out
shll
sub
push
stos
inc
jmp
lahf
int
mov
test
frstor
xchg
mov
push
fdivrs
sbb
js
xlat
pop
and
xlat
mov
push
dec
xchg
movsb
lcall
sti
in
stos
les
into
pop
out
inc
dec
rclb
jbe
fwait
cwtl
test
sub
leave
insl
bound
jmp
movsl
inc
mov
or
add
lock
jecxz
add
lret
xchg
xor
nop
rolb
adc
lods
repz
and
xchg
insl
fwait
cli
cmp
lahf
cli
pop
scas
out
xchg
mov
cli
xor
sub
cwtl
xchg
push
dec
outsb
cmp
cmp
pop
push
inc
cmp
inc
inc
das
dec
mov
add
movd
mov
pop
mov
hlt
push
mov
mov
mov
mov
push
sbbb
mov
fldt
outsb
dec
push
xchg
xlat
fstps
xchg
inc
pop
pop
lock
pop
repz
fstps
das
and
shr
sbb
mov
insl
or
add
sbb
xchg
inc
fs
cltd
inc
call
int3
pop
decb
or
dec
xor
lods
call
adc
stos
push
mov
mov
xlat
test
mov
pop
into
jns
mov
ljmp
cltd
inc
fsts
xchg
push
cmpsb
clc
ljmp
cmp
loopne
aas
addr16
mov
ss
fdivs
push
repnz
mov
adc
sub
jb
adc
sbb
pop
cmp
mov
ja
xchg
xor
sub
push
fldenv
pusha
add
and
out
lods
loop
cltd
fdivl
jmp
adc
add
movb
xor
test
popa
stos
dec
add
push
jmp
xlat
addr16
les
je
lods
xor
pop
repz
test
mov
pop
cmc
cmp
out
xchg
lea
data16
test
inc
out
das
pop
shrb
fsubl
push
cmp
or
inc
sahf
stos
dec
xor
insb
cmp
xchg
jae
repnz
in
xor
cmpsb
adc
cld
xor
jecxz
fs
imul
out
clc
rcrl
ret
or
mov
lret
jb
ret
cmp
mov
xchg
dec
test
mov
mov
stc
sahf
push
mov
xor
dec
stc
arpl
test
mov
inc
sbb
sub
enter
sub
mov
pusha
lds
jns
adc
shlb
mov
ljmp
and
adc
cltd
test
or
fldpi
sub
inc
or
ret
xlat
insb
push
and
stos
lret
and
repnz
cmp
push
or
nop
xor
mov
je
sub
or
xchg
pop
pop
cmp
xchg
xchg
icebp
cmp
loop
bswap
mov
push
repz
mov
mov
stc
sbb
popa
ja
adc
sti
clc
jg
dec
mov
dec
push
xor
ljmp
ja,pn
mov
mov
or
lret
arpl
add
mov
sbb
mov
out
in
xor
or
push
xchg
movsl
enter
lock
repnz
mov
orl
mov
dec
mov
ja
adc
shlb
cli
cmpb
sbb
stc
cvttps2pi
imul
roll
jbe
dec
mov
repz
bound
js
cmp
cmp
pop
fldcw
add
pop
repnz
out
mov
ret
mov
pop
xchg
dec
mov
mov
xchg
popa
push
and
js
push
ss
push
std
aas
sahf
into
aad
mov
jg
dec
idivb
mov
mov
jno
adc
lods
int
pop
lahf
or
xor
jo
jbe
aam
out
cwtl
pushf
mov
sti
ss
loop
nop
mov
xchg
jecxz
insb
add
fdivs
inc
add
xor
fidivrs
xchg
or
add
jle
pop
lods
in
xor
stos
xlat
jmp
add
xchg
or
dec
xchg
std
add
jecxz
push
out
sarb
xchg
xor
out
test
jl
imul
popf
faddl
pop
ja
jp
insl
mov
dec
sbb
jno
call
and
dec
mov
mov
pop
icebp
call
ror
sahf
adc
popf
cmc
lock
movsb
cltd
addr16
jmp
add
cmp
push
leave
push
pop
push
xchg
inc
out
mov
adc
mov
mov
pop
frstor
cmc
jge
lret
into
aam
lcall
pop
mov
pop
push
jae
out
mov
loopne
sti
gs
mov
mov
je
hlt
xor
or
sti
mov
jle
aam
or
div
iret
mov
push
in
jns
jns
ss
push
leave
sbb
mov
nop
std
shrl
ret
sub
andl
out
mov
push
mov
push
lods
adc
add
sub
xchg
mov
mov
push
pop
and
pop
cmc
jbe
jnp
pop
lahf
lcall
cmp
fwait
push
or
adc
in
hlt
and
stos
mov
and
cmp
adc
jae
out
mov
or
loopne
dec
push
xchg
cmp
ljmp
movsb
jg
push
test
dec
fs
out
push
out
mov
pop
in
scas
inc
push
popl
mov
sub
push
adc
sbb
leave
add
out
mov
sbb
cmp
inc
jne
jge
mov
mov
sahf
test
mov
xchg
dec
jg
mov
int
ret
push
mov
push
incb
jmp
sub
ret
xor
bound
inc
adc
inc
incl
mov
mov
adc
push
mov
cs
add
addr16
repz
adc
xchg
dec
js
out
fisubl
jo
pop
divb
dec
or
fmull
sahf
jecxz
stc
push
jbe
xor
cltd
mov
mov
in
mov
pop
test
pop
pop
add
inc
adc
mov
pop
mov
or
scas
scas
movsl
add
push
pop
mov
repnz
xor
xchg
dec
bound
pminub
cs
xchg
divl
mov
pop
inc
scas
jb
scas
xchg
out
mov
and
adc
sysenter
pop
call
cli
inc
jmp
test
popa
popa
imul
lods
outsb
push
adc
sahf
int3
je
push
sahf
movsl
outsl
idivl
xor
push
outsl
mov
push
xchg
mov
sub
cmpsl
dec
sub
test
stc
lret
and
sub
sti
and
rclb
xor
popa
notb
clc
pop
mov
cli
xor
and
jg
pushf
jbe
out
jnp
mov
sarb
stc
dec
and
and
jge,pn
cs
pop
push
testl
std
testl
jne
aam
sub
mov
pop
ret
imul
sub
add
jo
mov
and
int3
sub
aam
mov
pusha
push
xlat
mov
xor
dec
scas
out
xlat
push
ja
clc
loopne
mov
fwait
enter
jl
jb
iret
or
cmp
or
fimuls
xchg
aad
mov
or
push
mov
data16
mov
sbb
bound
ret
xchg
addr16
or
pop
fs
outsb
dec
adc
dec
mov
xchg
inc
sub
mov
pop
into
or
mov
fidivrs
mov
inc
mov
loopne
mov
je
and
pop
fstl
push
in
inc
cld
sbb
inc
xchg
push
loop
sub
xrelease
sbb
mov
enter
cs
adc
xchg
jmp
ljmp
fxam
mov
lods
cld
les
ja
or
pushf
pop
fs
test
sub
daa
inc
jmp
lods
pop
and
fistps
xchg
add
mov
mov
pop
jle
sbb
js
sub
pop
outsl
cmp
pop
shlb
mov
pop
cmpsl
xchg
jbe
jno
sub
shrl
pop
cltd
mov
xchg
add
dec
sbb
lret
subb
pop
mov
stos
lret
xchg
jno
mov
cmpsb
imul
inc
adc
mov
pusha
xchg
cmp
cmpsb
sub
inc
push
fs
mov
je
push
test
scas
dec
filds
jecxz
cmp
dec
adc
rcll
push
frstor
adc
stos
inc
arpl
fstps
add
xchg
push
lret
xchg
sub
or
or
pop
xchg
dec
xor
in
push
cmpsb
push
shrb
xchg
adcb
pop
icebp
xchg
sbb
sub
daa
in
xor
or
xor
or
lret
inc
mov
repnz
loopne
xor
jmp
inc
inc
sbb
cmpsl
out
jae
adc
push
mov
jns
in
dec
push
pop
movsb
fidivl
sbb
arpl
popa
bnd
and
ficompl
adc
sub
cs
jg
pop
je
dec
mov
sbb
lods
xchg
xor
mov
jne
insl
cmp
into
aas
sbb
loop
adc
scas
sbb
nop
inc
ljmp
pop
call
pop
shrb
add
jo
and
jbe
xor
jecxz
hlt
cmp
mov
and
push
add
mov
mov
dec
insl
cmp
fdivr
push
scas
lret
xor
xor
aas
cwtl
cmp
ja
pushf
fcomip
cmp
and
jae
or
and
bound
sahf
xchg
xchg
mov
sub
loop
out
add
in
outsl
sbb
and
mov
xchg
pusha
inc
or
mov
dec
sub
imul
dec
sbbl
jmp
in
ja
movsl
push
mov
cmp
jl
mul
out
add
mov
imul
sub
jl
bound
mov
movsl
test
sti
popa
pop
call
sbb
dec
xchg
stos
loop
mov
out
test
arpl
pop
lds
lahf
clc
cltd
movsb
adc
mov
sti
out
jp
cmp
int3
insb
mov
jns
cld
mov
aad
push
scas
fwait
clc
ror
gs
pop
push
lock
es
inc
shlb
cmc
roll
cmc
sbb
and
mov
push
insl
in
fnsave
sub
sub
rcrb
std
xor
cwtl
xor
cwtl
sub
aam
adcl
fcmovne
cmp
in
call
add
jno
jp
outsb
mov
imul
shr
jnp
adc
xor
mov
cld
xchg
mov
js
push
cld
pop
sbb
add
clc
mov
hlt
sbb
dec
insl
inc
push
roll
inc
xor
imul
fmull
mov
or
adc
mov
mov
jne
dec
mov
jns
lods
into
adc
mulb
mov
int
jecxz
xchg
jl
sbb
push
test
scas
mov
sarl
fisttpll
ret
fstpt
test
mov
ds
leave
lret
shrl
mov
ror
adc
fcoml
pop
clc
fdivrp
or
fbld
xchg
loop
ss
fidivrs
in
out
lods
mov
aas
iret
fdivr
dec
sub
xchg
jbe,pt
hlt
add
je
out
ja
cmp
jns
ljmp
imul
push
push
in
sbbl
mov
std
pusha
arpl
rcr
jmp
dec
js
or
std
add
ljmp
insb
rorb
add
sbb
dec
lock
jo
or
mov
push
fsubl
pushf
movsl
push
out
jnp
daa
scas
xchg
add
loope
leave
int
mov
ja
or
mov
push
stos
in
aad
lret
dec
xchg
mov
xor
incb
and
inc
pop
xlat
repnz
popa
nop
addl
into
cmp
lcall
stos
xchg
cmc
imul
aaa
not
sub
xchg
push
jmp
adc
adc
mov
jno
xor
lret
das
fcmovnu
and
cmp
dec
push
dec
mov
mov
callw
sub
jno
movsb
fmull
imul
mov
dec
mov
sbb
jl
loopne
and
jp
push
into
mov
pop
cmp
sub
inc
movsl
ljmp
xchg
lahf
jbe
out
jae
add
sub
imul
jno
movsb
sbb
mov
pushf
jo
stos
inc
loopne
sub
imul
mov
aam
fldenv
inc
mov
xchg
test
dec
mov
jno
cmp
int3
xor
jae
push
repz
mov
loope
out
pushf
bound
cli
mov
stc
xor
or
inc
in
mul
data16
lods
sbb
scas
cmp
pop
fucomi
jb
jo
movsb
and
popf
outsl
push
ja
jecxz
inc
dec
repnz
cmpsb
sbb
push
stos
or
sub
addr16
popw
clc
stc
jbe
mov
cwtl
pop
div
cwtl
int
pop
adc
inc
inc
or
test
mov
and
lds
xchg
sbb
fiadds
scas
mov
mov
inc
or
sbb
jo
mov
add
je
js
sti
test
inc
in
lock
mov
fiaddl
or
push
aas
aad
dec
pop
je
scas
lock
sub
cmp
add
and
dec
fsubrs
lcall
scas
sub
cmp
nop
test
shlb
cmp
repnz
sbb
pop
mov
dec
outsl
sub
stc
xor
jecxz
test
xorb
mov
lret
stos
sbb
in
xor
loope
hlt
push
insb
add
inc
sbbb
lret
pop
movsb
popf
jns
push
sbb
mov
cmc
xchg
push
addr16
xor
xor
in
xchg
ja
daa
inc
jne
push
inc
inc
jp
jl
jl
add
cmp
jmp
mov
ret
mov
push
dec
jbe
push
xchg
popa
jnp
lea
inc
loop
icebp
mov
outsl
inc
mov
push
mov
lahf
mov
pop
lock
xor
ret
pop
jecxz
in
nop
fisubrs
fsubrl
outsl
or
jp
and
mov
xor
fbstp
rcll
je
movsl
insb
mov
mov
repz
mov
pop
bound
data16
jl
or
pop
dec
nopl
push
dec
rclb
mov
and
mov
subb
es
jp
sub
repz
xchg
mov
arpl
insl
out
mov
cmp
into
mov
jmp
popf
xchg
or
lret
jb
loop
sti
and
xor
shlb
sub
add
test
xchg
das
iret
mov
xor
ds
inc
scas
popf
push
inc
lret
sahf
data16
in
xchg
sbb
xor
sbb
push
sbb
stc
fsub
enter
jb
btc
jo
out
divl
sbb
es
inc
imul
xchg
xchg
jmp
pop
jae
jl
ret
inc
or
insb
inc
push
inc
pop
mov
arpl
adc
xor
addl
incb
push
mov
jns
dec
add
stos
sbb
pop
repnz
xchg
xchg
mov
lahf
xchg
jmp
sbb
aam
inc
mov
pop
mov
sub
cmpl
cmpsl
inc
jl
faddp
rolb
pop
add
mov
mov
shll
adc
pop
dec
das
inc
icebp
mov
dec
add
ja
xorl
fs
bound
test
cmp
and
or
mov
xacquire
cmp
push
shll
mov
int
jl
xchg
clc
jnp
ret
fsub
test
add
mov
imul
mov
cmpsb
lds
or
dec
std
repz
jle
mov
add
cld
mov
xchg
lret
sbb
and
mov
jle
mov
mov
cmp
mov
pop
inc
rcrb
in
fs
jecxz
add
pushf
adc
stc
sbb
cwtl
xlat
mov
cmp
jnp
pop
into
ds
push
ds
hlt
insl
addr16
test
xchg
popa
repz
pop
jo
ljmp
pop
addr16
cmpsb
ss
adc
sarb
cmp
sbb
mov
daa
das
cmp
icebp
sbb
jne
xor
mov
fs
jmp
adc
mov
loope
and
adc
mov
jne
add
jmp
pop
ret
mov
jle
dec
lea
mov
aas
adc
pop
jbe
out
mov
jbe
or
inc
mov
aas
loopne
adcl
sbb
mov
stc
lods
lcall
xor
jb
mov
int
push
pusha
mov
sub
test
clc
pushf
sub
scas
adc
cwtl
jnp
inc
mov
jne
and
in
cs
ds
aad
ja
dec
mov
inc
mov
xor
mov
add
imulb
lods
imul
lods
xchg
adc
lods
add
sbb
in
leave
scas
loope
dec
roll
testb
inc
jb
popf
push
mov
mov
jo
sbb
mov
leave
xchg
jl
jge
lcall
test
sbb
jp
test
sbb
sahf
fs
fdivs
lods
push
in
aas
xchg
or
push
lock
stos
sbb
pop
faddp
mov
jg
sub
push
dec
cs
and
cwtl
shl
push
xor
mov
pusha
movsb
mov
sbb
ds
inc
push
adc
repz
jp
mov
pop
in
dec
nop
mov
stc
and
call
mov
insb
out
and
clc
sbb
pop
ss
mov
push
call
mov
orb
insl
outsb
pop
jecxz
test
mov
jg
pushf
adc
pop
fadd
xchg
ja
jns
or
js
adc
repz
pop
jo
and
xor
cmc
out
idivl
push
mov
lea
loope
adc
or
jno
xchg
cmp
std
sub
call
xchg
xor
movsl
cmp
loopne
call
fisttpl
mov
pop
or
ficoml
xor
cmpsl
jmp
jmp
mov
inc
xchg
or
jbe
test
jne
aas
adc
lods
push
mov
inc
pop
mov
push
or
inc
cltd
adc
cld
in
mov
and
xor
sub
pop
loope
stos
insl
ja
outsl
lret
test
call
rolb
fs
add
aam
push
jb
jle
std
ret
scas
push
xchg
dec
nop
push
pop
add
inc
mov
xchg
sub
mov
mov
fsubrs
das
mov
jg
jno
std
pop
cmp
repnz
lret
test
ret
dec
jl
enter
xor
repnz
fcomps
sub
movsb
scas
mov
mov
dec
adc
insb
and
icebp
and
fwait
movsl
cs
xchg
cmp
add
inc
pop
or
push
ss
popa
mov
stc
xor
push
in
xor
inc
push
or
mov
in
or
sahf
das
test
add
out
repz
testb
mov
mov
xor
movsb
mov
fbld
lods
and
xchg
mov
sbb
outsl
in
shlb
sbb
insl
mov
fcomi
imul
test
xchg
clc
cmp
mov
int3
cmp
cmp
fiadds
pop
pusha
push
arpl
and
mov
add
fcos
je
ds
xchg
ret
push
cld
dec
fisttpl
lret
sub
adc
test
ja
jns
dec
pop
dec
jecxz
imul
mov
inc
push
inc
cmpsb
pop
mov
cmp
pop
shrl
dec
cmp
adc
dec
cli
push
pop
xor
ss
aaa
mov
xchg
fsubr
cs
into
not
or
jl
lahf
mov
popa
sbb
mov
fwait
lock
scas
jbe
rol
pop
mov
and
inc
push
lea
xor
inc
xchg
adc
dec
push
jae
pop
cmpsb
mov
repnz
aaa
add
or
loop
xchg
sbb
pop
xor
jns
ljmp
xor
mov
insb
pop
idivl
push
cmp
push
push
mov
js
xlat
imul
xchg
lea
mov
pop
test
or
movsb
fcomps
or
inc
mov
cld
lea
test
push
pop
push
call
push
jae
fs
mov
nop
jo
ret
insl
dec
sbb
lcall
xchg
xchg
call
aad
ja
mov
and
add
sbb
addr16
xor
test
loopne
push
xchg
mov
xchg
add
flds
and
das
xor
fbstp
inc
loope
xchg
dec
mov
in
ret
rcrb
cmp
rorl
stos
and
dec
aam
xchg
jbe
mov
ret
adcl
bswap
sub
out
pop
xchg
cld
pushfw
mov
lea
mov
cmc
or
pop
and
sbb
fdivrl
into
std
iret
enter
mov
sahf
pusha
adc
ret
mov
scas
les
pop
jae
mov
test
jae
xchg
addl
fstpl
push
dec
fsubl
and
jb
int3
shll
push
jns
xor
push
sbb
mov
cmp
cmc
out
stc
loopne
loop
jecxz
mov
xchg
pop
adc
dec
fisubl
adc
repz
imul
call
movsl
ret
dec
fcoms
xchg
out
fimuls
push
sub
push
inc
in
imul
cmc
inc
mov
mov
ret
sub
pop
lods
lret
push
jae
xlat
test
sub
popa
arpl
mov
inc
icebp
push
add
lock
xchg
pop
and
mov
ret
cmp
inc
ss
addr16
imul
mov
xchg
hlt
call
pop
xchg
in
ljmp
clc
in
add
loop
in
ja
cmp
daa
insl
sar
mov
es
add
mov
loope
mov
sub
sbbb
xchg
stos
jno
push
sub
mov
es
mov
repnz
divb
mov
mov
jns
dec
mov
xchg
jae
fcmovbe
in
inc
fs
das
out
mov
mov
xlat
mov
push
test
cmpsl
enter
jg
mov
sbb
cltd
pushf
xor
int
repnz
mov
or
sub
into
xchg
adc
jo
sbb
cmp
mov
popf
mov
imul
repnz
and
mov
cmp
movaps
sti
dec
ret
cmpxchg
mov
cs
stc
fwait
jne
jne
or
icebp
sub
lock
cmpl
push
bound
stc
xlat
pop
sbb
movsb
int3
xchg
cmp
lods
mov
sarl
mov
mov
mov
cmpsl
out
leave
xor
mov
mov
ret
cli
fs
out
sub
popf
jecxz
pop
jle
arpl
jmp
icebp
adc
sahf
add
cmpsl
adc
mov
xchg
cmpsb
cmpsb
inc
mov
insb
mov
dec
cs
xchg
jo
or
ss
lea
cmp
test
adc
into
jnp
xchg
lret
aad
sti
insl
cmp
in
lcall
cld
xchg
xlat
xchg
adc
add
movsl
mov
add
out
push
adc
sbb
aad
iret
clc
jp
jg
mov
sub
adc
inc
jg
scas
jg
push
pop
dec
mov
cli
lahf
mov
pop
lret
loope
xchg
in
out
dec
pop
lret
xlat
push
and
dec
insl
dec
pop
cwtl
cli
jbe
pop
mov
dec
adc
cmp
jnp
cmp
cld
cwtl
xchg
shll
daa
icebp
cmpsl
xchg
inc
jl
lods
jg
and
and
mov
jo
insl
dec
int
addl
jp
pop
stc
dec
bswap
mov
imul
xchg
mov
cmp
fdivrl
jp
adc
jo
inc
inc
jb
xor
add
ret
fmul
out
cmp
arpl
jle
arpl
in
add
adc
mov
add
cwtl
xchg
sub
into
fwait
sbb
inc
mov
push
lret
xchg
mov
pop
lds
rcrl
xor
outsl
les
scas
aas
mov
jne
fisubrl
dec
jle
lret
sbbl
iret
pop
repz
pop
cli
mov
xchg
aam
jns
mov
jge
jo
ret
test
xor
lahf
add
push
lcall
outsl
pop
pop
iret
push
das
add
pop
fsubrl
push
xchg
pop
cltd
mov
and
mov
lret
imul
popa
hlt
mov
ja
push
jae
xchg
push
gs
mov
lahf
xlat
sbb
cmc
lods
add
cmp
and
aam
sarb
jle
cmpsl
jmp
or
mov
and
rorl
cmp
test
lahf
loope
arpl
gs
enter
fiadds
sbb
or
nop
lret
mov
cmp
fmuls
insb
std
outsb
in
ror
inc
push
in
dec
sub
rcll
lahf
hlt
call
adc
cmpb
dec
gs
ljmp
cmp
cmc
fstpl
mov
push
adc
repnz
pusha
lahf
mov
dec
fwait
jo
mov
mov
imul
sahf
pop
lea
daa
test
leave
lret
fs
outsl
shl
jae
fsubs
imul
mov
mov
xor
or
adc
mov
mov
mov
mov
aaa
pop
or
jp
jb
fildll
out
in
mov
xor
js
push
ret
inc
clc
popa
inc
jno
fadd
iret
mov
cltd
fldt
lock
fcoms
adc
dec
lods
push
or
fsubrs
xor
cmpsl
out
push
mov
aas
pop
cmc
nop
sbb
inc
test
lcall
cmp
hlt
inc
lret
pop
icebp
in
xor
sub
fs
out
out
adc
iret
popf
xchg
and
rorl
lods
pop
jbe
jmp
imul
xor
push
lret
pop
sub
lcall
cmp
ret
loop
inc
std
dec
jle
mov
test
enter
es
push
es
scas
xchg
mov
cmpsb
popf
lods
sub
stos
mov
push
mov
jne
rcrl
add
xchg
dec
xchg
movsl
test
push
mov
push
push
dec
add
add
or
es
sub
test
jle
jp
jae
push
popf
enter
sub
push
rcr
push
mov
push
and
sti
lahf
nop
stc
movsb
mov
movsl
ja
inc
aam
arpl
push
fimull
cmp
in
icebp
cmp
jae
mov
int
dec
inc
pop
fsubs
add
sub
cltd
fs
in
push
xchg
rorl
in
xchg
mov
jecxz
in
inc
addr16
add
gs
lods
adc
xchg
jmp
mov
push
and
or
and
mov
fwait
nop
mov
lods
adc
out
and
xor
cli
pop
sar
enter
mov
lods
test
jmp
out
std
pop
push
mov
aam
in
mov
cli
inc
sbb
rcrb
jb
repz
xchg
adc
loop
mov
adc
sub
add
sti
mov
xor
and
sub
cmpsl
mov
push
mov
outsl
cld
mov
inc
push
add
add
sub
lods
mov
repnz
xor
lock
stc
shll
ja
xor
jge
xor
jb
dec
in
pop
xor
mov
std
and
mov
ret
inc
stos
mov
loopne
mov
xchg
sub
gs
dec
cwtl
lret
aad
dec
test
pusha
xor
rclb
jbe
aam
dec
pop
sbb
fistpl
and
adc
cli
aam
loop
push
mov
dec
lahf
push
inc
cld
aaa
in
or
into
xchg
stos
lods
lock
lock
push
out
jno
test
repz
mov
and
mov
and
jle
orb
push
push
ret
sbb
add
bound
jl
mov
stos
xchg
inc
dec
aam
fisubs
fcompl
int
stc
repz
loopne
inc
out
loop
sub
sarb
cmp
pushf
clc
hlt
lea
outsb
push
jg
mov
sub
xlat
imul
fbstp
insl
jmp
push
stos
and
out
xchg
xlat
ja
inc
xchg
cld
daa
dec
push
inc
testl
rcrl
jno
push
test
push
pop
pop
pop
and
mov
or
mov
jne
orl
jbe
mov
push
cmp
leave
leave
pop
aaa
lahf
lds
push
mov
adc
dec
fs
out
inc
stc
mov
push
xchg
jns
pop
xchg
cs
inc
and
movsb
or
xor
call
cwtl
fwait
mov
stos
je
mov
aaa
and
pop
jle
inc
aad
in
jne
add
jnp
gs
mov
ret
dec
fwait
push
xor
xchg
leave
clc
adc
flds
jmp
fistpl
test
pop
push
lds
jp
sbb
sbb
jge
sti
jo
xchg
xchg
mov
add
lods
std
adc
mov
sub
mov
dec
loope
aaa
fnsave
xchg
rolb
in
scas
in
sbb
lret
stos
push
mov
mov
test
cmp
rcrb
and
push
mov
jmp
inc
loope
outsb
push
pop
insl
mov
push
in
and
or
aaa
popa
inc
or
mov
aad
sub
rclb
bound
xor
shlb
dec
into
in
add
fistpll
cmp
aad
mov
inc
xchg
into
aad
adc
dec
ljmp
xchg
rol
dec
adc
popf
int3
pop
ret
adc
inc
ljmp
aam
pop
xor
inc
jg
jl
dec
mov
aaa
pop
inc
lock
fs
ss
mov
or
mull
or
int3
inc
out
mov
pop
fst
scas
xchg
sub
movsb
adc
rol
or
dec
mov
daa
dec
dec
adc
lcall
ss
gs
sbb
insb
outsb
bound
xchg
mov
add
inc
subl
push
lcall
push
mulps
insl
xor
outsb
movsl
inc
push
adc
imul
push
repz
xchg
and
lds
sbb
shlb
cmpsb
mov
cli
mov
pop
cmpsb
push
dec
test
outsl
ret
push
gs
jae
mov
test
cmp
and
ret
or
loopne
xor
outsl
pushf
dec
scas
xchg
mov
out
mov
test
test
add
xchg
roll
loopne
jmp
mov
push
cmpsb
cmc
je
adcb
dec
cmp
aaa
pop
mov
out
mov
sub
add
aam
cwtl
pop
scas
mov
fidivrs
jno
iret
mov
xchg
mov
pop
scas
cli
xchg
shll
sti
pop
lds
mov
adc
test
int
repnz
push
sarb
mov
repz
pop
mov
sub
outsl
sti
rclb
inc
ret
arpl
pop
push
xchg
xchg
icebp
fcompl
lret
jns
ret
enter
js
mov
xchg
sub
out
subb
inc
ret
mov
bound
and
clc
in
mov
cli
movsb
dec
or
mov
pop
push
bound
out
push
sbb
jg
int3
dec
cmp
insb
popf
or
daa
enter
clc
or
daa
jmp
jae
shrb
stos
inc
xor
shlb
cli
fcmovnbe
lcall
xor
adc
lret
and
sbb
dec
jb
fldl
mov
sbb
adc
dec
shll
and
stc
int
mov
imull
negb
mov
inc
mov
xor
mov
sti
dec
lcall
dec
or
push
add
mov
adcb
cmp
sub
lods
sahf
inc
sbb
or
shll
out
call
xor
inc
adc
xchg
nop
bound
mov
cmp
mov
lods
popa
test
aad
sbb
repnz
mov
lret
mov
repnz
bound
mov
out
or
outsb
inc
adc
dec
adc
xor
mov
je
test
insb
lock
enter
fmul
lcall
pop
js
jl
repnz
aad
leave
sub
repnz
xor
push
xchg
mov
mov
jno
ds
sub
stc
shlb
cli
out
mov
pop
add
pop
test
jle
adc
hlt
cmp
mov
inc
dec
and
or
push
fisubs
aad
jle
ljmp
outsl
out
out
sub
mov
push
nop
test
sbb
dec
adc
sbb
scas
mov
pop
orl
dec
std
mov
mov
imul
sbb
sbb
push
mov
xchg
sub
mov
je
rol
pop
xchg
out
nop
push
icebp
call
enter
mov
leave
mov
push
dec
and
rolb
jno
pop
push
test
jne
and
jae
test
jne
pop
mov
fs
mov
outsb
xor
jg
jbe
xor
lock
push
insl
push
push
inc
insb
and
ja
jp
xchg
push
fistpl
cmpsl
push
jle
popa
frstor
push
sbb
bound
es
mov
xor
test
ljmp
in
or
icebp
loop
adc
cmp
inc
dec
ds
pushf
pop
sbb
int
arpl
ret
outsb
and
add
push
add
clc
dec
cmp
sti
jp
stos
mov
xor
xchg
insl
imul
inc
inc
or
jne
xor
add
lock
std
cmp
es
jb
mov
adc
sahf
inc
popa
jb
daa
xchg
clc
mov
sarl
push
dec
xor
dec
popf
jl
and
je
test
dec
aaa
inc
fcomps
jb
sbb
test
rol
push
add
out
push
mov
push
inc
ret
jp
adc
sbb
sub
jge
mov
mov
lret
dec
das
adc
int
and
fmuls
mov
inc
push
push
or
mov
mov
divl
pop
mov
mov
xchg
xchg
or
test
jno
dec
jb
push
jl
mov
and
push
not
in
jns
mov
mov
sub
adc
je
jbe
idivb
das
push
mov
push
arpl
push
cld
xchg
aas
jl
mov
adc
dec
xor
gs
repz
aas
xchg
je
pop
jg
enter
outsl
rorb
pushf
cmpl
cmp
sbb
icebp
in
pop
pop
ret
inc
hlt
ret
scas
mov
test
mov
mov
mov
enter
jg
mov
bswap
cwtl
js
movsb
call
scas
rcl
data16
inc
stos
outsl
xchg
xor
mov
adc
into
adc
jnp
push
adcb
mov
cld
movsb
fdiv
xchg
mov
fsubrl
jmp
xchg
lret
call
fists
add
outsb
add
cmp
in
nop
add
loopne
pop
push
lock
jno
repz
xchg
or
mov
mov
pop
push
or
enter
movsl
push
out
push
fwait
sbb
pop
int
arpl
mov
dec
hlt
dec
xor
jmp
pop
cli
aam
sti
cmp
push
push
lock
in
shr
aad
mov
ja
sub
mov
pop
push
jb
stos
mov
test
jae
rol
shrb
mov
mov
cmp
ds
ror
xchg
jnp
imulb
loope
ret
in
lods
xor
push
les
push
aam
jae
ljmp
sub
xchg
push
je
aas
and
lret
inc
sbb
jae
sti
push
jnp
mov
cmc
add
push
out
gs
popa
lret
cli
fwait
push
outsl
push
fisubrl
jns
sbb
push
xrelease
xor
cli
les
inc
jg
insb
call
pop
mov
cs
cmp
pop
pop
sbb
mov
aas
dec
dec
push
cmpsl
sbbb
pop
jle
fs
xlat
cmpb
mov
pop
and
add
mov
xlat
je
cs
jl
loopne
sar
xchg
fistpl
cmpsl
xor
fwait
mov
push
stc
jae
mov
addr16
inc
fdivr
mov
mov
jle
imul
sbb
nop
je
pushf
add
add
mov
mov
in
fdivp
jp
rcr
push
fldl
dec
mov
leave
push
sub
movsb
xchg
ret
adc
cmp
push
cmp
jl
or
xor
ljmp
out
sub
int
test
incl
stos
pop
or
stos
ds
xchg
xor
sub
icebp
mov
rcrb
cmp
and
xor
add
push
gs
push
loope
sbb
inc
ljmp
xor
push
sub
cmp
pop
add
popf
jne
sti
xor
bound
jmp
enter
cmp
and
xor
sbb
test
js
cmc
xchg
pop
jecxz
push
mov
outsl
or
and
push
leave
outsl
sbb
dec
jae
lds
mov
add
out
pusha
leave
loope
outsb
add
pushf
cs
icebp
rorb
mov
xchg
jnp
in
test
out
xor
jmp
dec
mov
scas
lods
sahf
and
inc
lcall
jg
rolb
in
gs
lahf
gs
mov
mov
iret
imul
jg
pop
stos
add
pop
pop
dec
jno
pop
dec
lcall
and
push
adc
imul
xchg
movl
pop
rcll
test
or
push
loopne
ja
mov
inc
mov
push
sbb
mov
add
imul
pop
orl
push
clc
rclb
lret
sub
dec
xorb
xchg
inc
leave
jae
add
das
mov
jle
xchg
pop
xchg
add
sub
lahf
jle
mov
test
enter
or
mov
popa
loope
aad
roll
jne
stos
clc
outsl
cmp
mov
jbe
jge
sbb
jbe
jbe
cmc
dec
in
xor
jne
movsb
jp
stos
mov
test
lahf
jle
ret
in
je
push
dec
rorl
aas
data16
pop
and
adc
aas
lret
js
mov
jmp
or
mov
push
out
jae
sahf
dec
add
mov
inc
add
push
fcompl
sbb
push
mov
add
jbe
rcll
aaa
push
xchg
and
ficomps
mov
fwait
cmp
sbb
push
pop
pushf
stos
push
popa
adc
das
mov
lea
repnz
gs
shrb
dec
pusha
out
jbe
push
cs
push
dec
scas
aad
leave
rorl
ss
add
mov
rolb
aas
mov
adc
loop
mov
out
pop
sub
movsb
add
push
jb
adc
pop
ds
data16
movsl
adc
mov
test
push
jb
out
gs
inc
cmc
sub
jnp
sub
mov
xchg
push
mov
int
cmp
inc
or
test
cmpsb
pop
mov
mov
inc
cli
push
std
testb
out
mov
xchg
sbb
inc
call
sbb
leave
stos
push
cmp
push
insb
xlat
dec
aad
hlt
push
dec
stos
pusha
loope
xchg
jns
add
test
movsb
gs
aad
push
add
sub
cmpsb
jle
xchg
cmp
push
mov
cld
dec
insl
dec
data16
and
inc
mov
push
and
mov
daa
xchg
mov
cmpsb
cmp
sbb
xchg
cmpsb
in
bound
inc
notl
jge
pushf
hlt
movsl
push
mov
movsl
loope
pop
lds
inc
rolb
jae
enter
mov
int3
enter
push
ja
sbb
stos
data16
jne
jle
mov
sbb
in
test
fstpl
mov
xchg
pushf
xchg
push
push
pusha
push
ficompl
fiadds
lods
sahf
pop
jnp
outsb
xor
adc
push
mov
lret
xor
lods
pop
inc
dec
jo
and
adc
rcrb
push
dec
ljmp
xchg
adcl
ret
add
notl
push
mov
sbb
inc
xor
jmp
test
cmp
cltd
xchg
jle
popf
test
ret
testl
adc
cmp
jmp
mov
add
repz
fmul
xchg
dec
subb
int
cmp
repnz
ljmp
scas
adc
mov
xor
popa
test
repnz
lock
push
push
inc
push
popa
pop
divb
cmp
jg
dec
xor
out
int3
xor
aaa
adc
cmp
sahf
daa
mov
enter
loope
test
xchg
scas
and
push
adc
jmp
sub
push
repnz
jnp
cmp
push
rorb
sbb
test
mov
xorb
loope
addb
or
dec
iret
or
xor
push
scas
vcvtpd2psx
push
cmpsl
and
xchg
pop
cmp
or
data16
dec
cmpsb
xor
mov
mov
add
add
pusha
dec
sub
lds
mov
inc
push
rcll
mov
xchg
sub
aam
xor
xchg
mov
lret
jl
stos
inc
pop
les
mull
lcall
pusha
cmp
insl
cltd
jle
out
scas
add
inc
rcl
cmpsl
xor
mov
sub
test
push
ja
dec
hlt
int
in
pop
jno
pop
test
popa
in
xchg
icebp
inc
loop
inc
je
mov
daa
je
imul
popa
scas
mov
push
ret
sbb
out
iret
xor
test
xchg
in
or
mov
pop
xor
aaa
rcll
ja
outsb
lods
mov
xchg
sub
sarl
dec
fs
enter
cmp
pop
arpl
stos
cmp
and
aaa
repz
in
sbb
xchg
pop
gs
movsb
mov
lods
arpl
in
shlb
cld
mov
mov
ucomiss
cld
pushf
sarb
xor
and
cs
jne
aad
cmp
sub
push
repz
insl
inc
insl
imul
lret
jp
mov
ja
ficomps
jecxz
or
adc
fs
cmp
imul
inc
dec
or
jmp
es
lock
bound
and
ja
mov
push
cmovnp
daa
add
pop
mov
cs
dec
jp
ret
adc
ret
push
insb
aad
int
sahf
hlt
mov
ret
fistps
mov
pop
daa
mov
outsb
stos
shl
test
fs
mov
stos
imul
cmp
int
mov
push
lock
clc
outsb
es
andl
loope
imul
pop
test
mov
dec
data16
inc
dec
jle
lcall
mov
and
fsts
in
add
into
or
or
add
icebp
adc
ds
je
dec
aam
sub
dec
je
fwait
inc
repz
or
mov
incl
and
add
in
and
enter
mov
and
andw
js
add
mov
loop
push
xor
adc
mov
mov
rcrb
or
xchg
mov
aam
xchg
add
mov
call
call
jnp
jl
lods
sub
inc
inc
pop
pop
xor
jmp
cmp
loopne
push
rol
push
fs
push
es
mov
lock
testb
fs
adc
je
shll
cmp
xor
loop
int
imul
sbb
sub
lcall
add
or
mov
mov
dec
xchg
hlt
mov
in
sbb
aaa
xor
imul
mov
push
movsb
cmp
in
fstl
insb
xchg
jae
lds
sbb
cmp
mov
or
shll
mov
mov
pop
inc
call
xchg
imul
mov
push
in
cmc
dec
jecxz
mov
ss
and
or
imul
add
sbb
inc
and
lea
mov
lds
xorl
mov
cmp
arpl
push
pop
jo
or
mov
movsb
xchg
inc
mov
add
testb
mov
or
clc
sbbb
jp
mov
aad
fistpll
push
cmp
movsb
mov
mov
cmp
lock
cli
sub
mov
cmc
inc
sub
add
push
jmp
inc
insb
aam
ficoml
and
push
fs
pop
dec
sbbl
outsl
out
or
scas
mov
add
jp
stos
sahf
inc
inc
mov
in
mov
sti
fnsave
mov
jp
lods
jnp
push
cs
cmp
fsubr
mov
ret
pop
stc
aad
test
loop
pop
push
cwtl
enter
scas
xchg
cmp
out
out
xchg
mov
sub
movsl
ret
adc
sbb
sbb
xchg
lock
divb
imul
xchg
dec
sbb
dec
jge
jecxz
insb
lods
int
add
mov
dec
mov
test
in
xorl
dec
sbb
mov
jae
mov
out
push
enter
or
jnp
test
push
xchg
loop
test
shlb
test
enter
push
jp
inc
pop
dec
add
jnp
push
cmpsb
cwtl
hlt
and
loop
gs
lds
jmp
sub
leave
and
jge
clc
jae
sub
cmp
lock
pop
arpl
mov
icebp
mov
out
mov
arpl
mov
push
sbb
leave
xor
loop
test
sub
pop
sub
fsts
jecxz
ja
iret
push
xlat
outsl
fsubs
jnp
shrl
out
ficoms
push
mov
icebp
xchg
ja
dec
fisubrl
fcomip
sub
pop
cmp
sbb
dec
adc
ret
loope
mov
int
popa
in
add
add
out
int
sub
lods
stos
aas
push
sbb
xchg
jno
aam
lds
scas
lret
mov
push
jl
jo
pop
inc
bound
stc
ficoml
lahf
xchg
push
out
mov
sbb
jbe
dec
adc
lds
sbb
loopne
test
aas
cmp
mov
rclb
sbb
shrl
jb
enter
std
leave
push
and
pusha
shl
outsl
cmp
stos
dec
iret
xor
dec
loopne
cmc
mov
jno
xor
int
dec
mov
lret
push
sub
stc
sbb
xchg
sahf
clc
cmpsb
std
xor
mov
in
cmp
popa
sub
call
shl
cmp
mov
stos
lds
lods
lods
mov
cmp
outsb
imul
stos
push
fmul
pop
das
mov
and
sub
or
test
and
xchg
and
pop
mov
mov
in
fsubrs
fsubp
push
push
push
ficomps
andl
push
mulb
and
stos
xchg
adc
les
clc
mov
repnz
jle
out
into
add
mov
jns
xor
fisubrs
jns
in
mov
lahf
cmp
and
lret
jbe
jl
adc
push
cwtl
cmp
mov
dec
lock
xchg
adc
cmp
xor
ret
jmp
fld
cmp
sbb
out
add
sbb
inc
shl
mov
shr
or
dec
es
das
mov
popf
in
nop
aad
out
out
scas
and
push
mov
or
call
nop
mov
ret
sub
stc
xchg
lods
js
stos
add
lods
aaa
pop
xorb
cmp
cli
hlt
xor
stos
je
xor
loop
bound
pop
pop
repz
int3
mov
aaa
jo
lea
cmpsb
push
bound
cmc
test
imul
dec
sub
push
jno
arpl
stos
testb
dec
sti
adc
insl
ficoml
hlt
add
cmp
sahf
sbb
mov
jmp
icebp
inc
xchg
push
cs
xor
jno
jbe
and
sub
push
popa
fdiv
add
sbb
push
cmp
bound
and
pop
movsl
jae
ss
cld
cwtl
pop
lret
addr16
das
lret
loopew
out
adc
fsubrl
and
stos
std
cmp
hlt
cwtl
jns
sti
jno
mov
mov
rclb
sbb
cmpsl
dec
pop
rcrb
pop
jbe
fwait
sets
cmp
jo
cmp
enter
mov
pushl
incb
jae
aas
lret
iret
hlt
sarb
pop
and
out
stos
or
in
mov
xchg
adc
cmpsl
or
sbb
repz
sub
sub
ret
pop
pop
fwait
lods
fnstcw
add
inc
xor
pushf
loopne
sarl
imul
ret
out
inc
mov
ret
pushf
bound
jmp
sbb
xlat
xor
fldl
push
cltd
cli
add
ret
ja
lock
cmpxchg8b
and
sbb
loop
mov
pop
inc
out
or
lcall
cmc
stos
js
jle
lock
mov
dec
pop
lods
faddl
push
jo
cltd
fisttpl
dec
xchg
add
xchg
mov
rorb
lret
xchg
lds
out
pop
rol
cmp
movb
stc
scas
sub
sbb
xchg
mov
fiadds
mov
dec
pop
ss
jl
inc
sbb
mov
stos
test
outsl
and
stos
pop
cmc
or
mov
cs
mov
and
test
fdivrl
sti
push
cmp
adc
test
test
xlat
repnz
pop
sbb
dec
jo
dec
inc
ss
add
inc
sub
add
xchg
inc
das
imul
push
inc
mov
movsl
pop
icebp
cltd
xchg
dec
inc
push
pushf
pushf
aaa
out
mov
mov
pop
mov
mov
popa
gs
dec
andb
out
pop
sub
pop
test
xchg
adcl
mov
dec
push
pop
lret
inc
fsubrs
mov
pop
xchg
mov
pop
lds
ljmp
mov
cmpsl
stc
fs
scas
lock
jle
jbe
insb
push
push
xchg
dec
repnz
xlat
xor
pop
mov
out
imul
push
xor
aam
js
aam
and
repz
fistpll
mov
std
orl
lahf
jne
hlt
jecxz
mov
cmpsl
loop
push
or
std
sbb
xchg
xor
or
sub
jmp
push
cltd
dec
xor
dec
push
cmp
iret
sub
bound
lcall
pop
mov
push
jbe
lcall
andb
push
add
subb
jnp
xchg
orl
scas
sub
loope
faddl
hlt
jbe
hlt
ret
dec
into
loope
jecxz
lea
add
pop
testl
fmull
ret
dec
sub
push
xchg
inc
bound
adc
js
andb
popf
or
pop
dec
mov
cmp
mov
ss
pop
and
mov
cmpsl
adc
call
lds
pop
cld
test
cmp
dec
lock
pop
movsl
cltd
or
pop
mov
xor
cs
lahf
sbb
out
pushw
mov
lcall
cmpsl
mov
or
add
bound
push
insb
dec
mul
imul
sar
out
repnz
popf
add
cmp
adc
dec
int
add
ret
fwait
enter
decl
aas
stc
mov
imul
rcll
push
out
mov
test
inc
push
fnstcw
call
push
cld
je
or
jmp
outsl
in
das
mov
sbb
loopne
cmc
and
jmp
jae
mov
popa
nop
loopne
sub
dec
xchg
repz
loopne
outsl
sar
sub
jae
cmpsl
sbb
jmp
sbbb
or
cmp
fisubl
testl
fdivp
daa
inc
lock
mov
add
ljmp
xchg
cmp
xor
push
out
dec
lcall
mov
or
jle
test
sub
mov
cmpl
fwait
xor
mov
or
int
mov
jecxz
jle
dec
fadds
in
out
xchg
das
mov
lds
add
inc
mov
xor
push
out
mov
cmc
arpl
shll
testl
push
push
adc
and
inc
bound
aam
lock
and
in
push
pop
ss
mov
or
pop
ss
in
dec
add
pop
xchg
lock
popa
cld
add
lock
cmc
popf
jge
cwtl
push
lods
mov
lret
int
cmp
jo
xchg
sbb
sub
icebp
lds
ret
stc
pop
dec
cwtl
stos
push
push
cld
mov
mov
cmp
ret
mov
clc
cmp
push
out
mov
leave
push
arpl
mov
pop
or
nop
add
adc
iret
cmp
sahf
add
lods
js
mov
add
cmpsl
push
mov
pusha
or
std
mov
aas
cli
cwtl
sbb
cmp
jbe
arpl
sarl
mov
xchg
aas
pop
xchg
xor
repnz
jne
test
xchg
mov
es
fsubrl
pop
mov
rorl
pushf
fisttps
out
inc
jmp
cs
inc
push
pop
js
xor
pop
mov
jns
jp
rorb
cwtl
pop
sti
pop
or
leave
xchg
ret
call
cmp
addr16
cmp
sbb
push
aas
xchg
mov
xor
jns
ljmp
jp,pt
sbb
enter
cltd
push
jge
mov
pop
push
in
and
sarl
cwtl
mov
int
add
dec
fs
mov
mov
push
out
sti
sbb
fcompl
std
xlat
test
mov
lahf
inc
bound
sbb
inc
sbb
xor
lea
xchg
leave
mov
mov
inc
dec
pop
and
adcb
adc
je
stos
push
scas
inc
push
leave
xchg
jne
sbb
lock
fwait
sub
lea
dec
es
pop
cmp
sub
and
fnstsw
mov
shl
mov
mov
mov
jmp
pop
jae
imul
lods
mov
pusha
fsts
mov
aaa
loope
fisubrs
and
and
rolb
sti
and
jne
fbld
inc
inc
into
out
jmp
dec
loop
mov
sbb
mov
in
pushf
xor
je
js
stos
or
jmp
jmp
outsb
pop
sbb
dec
mov
dec
lahf
std
adc
push
adc
mov
cmp
jl
leave
dec
mov
ds
out
aam
test
negl
push
pop
imul
dec
sub
aam
jbe
xor
sbb
mov
xchg
mov
mov
imul
aaa
or
inc
aas
xor
or
call
push
pop
pop
jp
jmp
mov
ds
jl
fs
dec
shlb
cli
and
das
scas
inc
push
out
cmp
imul
divb
sti
and
push
pop
popa
and
dec
popf
and
clc
int
sahf
shlb
adc
es
call
sub
mov
inc
fs
mov
lea
icebp
jp
aas
mov
outsl
enter
push
addr16
sub
pop
sub
jnp
or
jge
dec
loop
ja
mov
cmp
lods
push
pop
push
test
or
push
lods
imul
lods
push
push
sahf
sub
sbb
fsubrl
out
std
inc
mov
xorb
ret
or
arpl
test
shr
pop
test
dec
fwait
dec
jecxz
lods
cmp
getsec
in
lds
and
ror
mov
add
fstpl
mov
fsubs
nop
nop
jbe
shl
xor
add
xchg
xor
add
mov
mov
out
sbbl
fiaddl
jb
addb
sar
push
test
dec
mov
and
mov
imul
lret
sub
popf
cs
mov
fiadds
in
dec
mov
scas
iret
mov
mov
bnd
add
lods
fnstenv
in
ljmp
cmp
dec
stc
aad
sub
sbb
xor
push
ja
push
pop
lret
addl
stos
jb
outsl
xchg
mov
insl
je
mov
gs
call
inc
aaa
aam
fidivrs
cmp
lock
out
movsb
push
fstps
push
lea
mov
dec
popf
pop
lods
jmp
xchg
subl
inc
cmp
sbb
jl
cwtl
je
xchg
shlb
cmp
ret
insl
push
arpl
sub
fwait
pop
add
jg
clc
cmpsl
mov
test
and
or
cmp
lods
gs
jle
cli
int3
into
lds
icebp
push
mov
clc
js
fsubp
jg
xchg
dec
repnz
int3
fs
addb
out
adc
mov
push
and
xchg
das
pop
test
das
mov
divl
mov
inc
sbb
iret
push
aas
inc
pop
ja
or
imul
imul
push
xchg
aam
dec
or
cli
mov
es
mov
xor
adc
mov
cwtl
aaa
int
xchg
pop
or
push
mov
and
test
dec
pop
push
in
inc
cmp
out
push
push
sbb
into
sar
adc
cmp
sahf
push
out
sahf
jne
mov
insb
icebp
mov
or
lahf
sub
mov
mov
lock
pop
or
jne
xor
stos
cld
or
xchg
insl
fs
nop
xchg
lods
ljmp
pop
ret
out
push
fdivl
mov
ret
and
daa
in
or
jo
lret
cmpsb
sqrtps
pop
mov
lods
ja
adc
inc
clc
test
and
je
mov
sub
sbbl
mov
outsb
jg
int
sub
faddl
and
add
cmc
in
insl
ret
subb
cmc
pop
mov
popf
adc
add
or
cwtl
fsubrl
lods
push
divl
sub
fninit
flds
cmp
adc
mov
xchg
movsl
jne
imul
mov
mov
xor
dec
pop
push
add
mov
xor
lds
dec
jno
push
and
aad
and
nop
jbe
or
test
adc
and
repz
mov
sub
ja
push
sarb
ret
daa
push
mov
aam
ljmp
dec
cli
ljmp
jge
adc
movsl
loopne
ljmp
xchg
mov
push
cmp
jne
test
cli
push
sahf
inc
ds
and
jae
xchg
enter
add
int3
mov
add
daa
pop
push
mov
add
stos
jge
jl
mov
sub
xor
out
gs
movsb
lret
call
lods
inc
adc
add
lahf
dec
clc
adc
aam
imul
jns
inc
mov
jns
pop
pop
imul
adc
jbe
cs
fwait
push
mov
leave
in
sub
int
mov
cmc
fsubp
stos
in
fwait
stc
int
mov
outsb
cmpsl
cmc
cmc
or
testb
pop
push
popa
insb
inc
call
daa
adc
pop
cld
in
movsl
call
mov
fpatan
mov
or
scas
test
pop
add
sbb
addr16
inc
fdivrs
add
jge
rclb
cli
add
pop
mov
test
sbb
cmp
enter
sbb
xor
or
in
cli
stos
adc
repz
xchg
jo
xor
ret
insl
lea
xchg
xchg
xchg
add
cmovb
into
lods
xchg
pop
mov
mov
in
ja
bound
jecxz
fcoml
sub
fmuls
pop
xor
shlb
xor
jl
sub
add
or
push
xor
sub
add
stc
cmc
sahf
inc
xor
jne
in
inc
adc
bound
pop
outsb
pop
out
sbb
mov
mov
pop
sahf
dec
test
imul
sub
pop
pop
lds
xchg
sahf
xor
dec
or
cmp
data16
xor
lcall
adc
xlat
lret
negl
push
cmp
dec
mov
dec
cmpsl
push
sub
int3
dec
add
sbb
cwtl
dec
sbb
fisttps
or
in
enter
out
daa
test
add
pop
push
addr16
clc
ret
es
mov
js
out
lods
jno
in
sbb
pop
cmc
shll
pop
inc
sub
cmp
ss
js
aam
mov
subl
out
adcb
rorl
ds
pop
movsl
inc
call
mov
movsl
fcompl
int3
jb
mov
jne
sbb
daa
and
cwtl
in
mov
fstp
mov
sbb
pop
stos
mov
lahf
pop
adc
fwait
xlat
or
pop
mov
js
lcall
mov
dec
mov
dec
loope
sbb
inc
into
pop
and
adc
jl
jb
js
ja
daa
cltd
mov
push
push
mov
leave
cmp
dec
pop
adc
mov
push
clc
cmpsb
fwait
jle
repz
sti
cmpsl
pop
jecxz
cmpsl
cmp
fldl
ficomps
or
pusha
ror
mov
sbb
repz
into
sbb
mov
adc
mov
and
dec
mov
test
pop
or
insl
pop
cmp
rcll
sarl
xor
sarl
xchg
jno,pn
and
jns
cmp
out
outsb
lahf
jge
icebp
in
xchg
inc
pop
jp
insl
lods
push
rolb
lret
gs
clc
lea
je
int3
jno
cmc
add
outsb
sbb
pop
mov
lods
push
jge
xor
jne
faddl
mov
stc
in
fsubs
mov
pop
gs
imul
ret
sbb
in
in
push
pop
adc
lahf
into
pusha
idiv
insl
shrb
leave
dec
and
fdivl
or
or
mov
test
pop
adc
fcom
xchg
jecxz
aam
add
aas
and
out
add
aad
adc
cmp
xchg
in
loopne
sar
push
pop
negb
push
mov
fisubrs
cmpsb
inc
lock
mov
movsb
add
jbe
enter
stos
jae
icebp
ljmp
cmpsb
mov
push
imul
jnp
jo
lock
adc
cmp
jmp
jge
fs
adcb
mov
mov
testl
jecxz
imul
cmp
pop
shlb
loope
ljmp
jno
xchg
lret
cmp
add
inc
pop
aam
sub
pusha
push
push
mov
or
and
inc
mov
into
mov
shll
icebp
enter
jmp
jb
gs
sbb
xchg
mov
or
repnz
je
mov
jnp
mov
flds
mov
jno
jmp
fwait
push
xchg
stos
push
push
push
lret
adc
pop
xchg
cwtl
xor
int3
shl
and
ficoml
or
daa
cmp
loope
popa
xor
or
jo
dec
sbb
sbb
das
pop
mov
adc
add
int
xor
xor
cwtl
pushf
in
pop
dec
and
scas
mov
aas
pop
out
pop
imul
jp
fwait
xchg
mov
adc
push
inc
add
mov
ja
shl
or
dec
sub
inc
push
ret
adc
push
adc
pop
mov
jae
or
aas
xorb
sub
repnz
js
repz
xchg
cmpsl
mov
shll
hlt
cmp
int
mov
aas
enter
mov
lock
push
pushf
and
ljmp
sub
outsl
add
mov
push
jecxz
push
xchg
push
out
sbb
push
xorb
popf
push
ror
out
cwtl
or
scas
lods
rorb
pop
fimuls
cmpsl
lds
fnstsw
ficoms
jecxz
xor
xchg
pop
dec
xor
xor
jmp
cmpl
mov
adc
pop
dec
addr16
scas
fdivs
clc
decb
add
neg
and
push
pop
ds
sbb
jp
loopne
cmc
test
dec
vorps
jmp
outsb
aaa
mov
sub
xor
sub
push
rcll
mov
jecxz
stos
jb
mov
xchg
jo
mov
jmp
mov
inc
cmc
sbb
daa
scas
push
jbe
mov
push
cli
mov
pop
rcrl
push
mov
hlt
lret
jg,pt
xchg
lret
ficoms
jbe
test
cmpsb
inc
insl
mov
jae
gs
adc
aam
in
mov
push
sbb
cmpl
or
jae
pop
cmp
mov
cmp
cmp
or
inc
adc
mov
shlb
mov
movsb
mov
xchg
or
and
repnz
and
xchg
negl
in
xchg
sti
mov
jae
xchg
aas
mov
test
andb
add
lods
mov
xchg
dec
add
mov
fwait
cmp
dec
or
insb
mov
sub
xchg
mov
scas
jg
enter
and
pop
xor
xor
lods
mov
xor
push
cs
mov
pop
or
pop
cmpl
rcrl
test
or
mov
repz
mov
lock
in
push
mov
scas
int
mov
push
or
into
mov
test
push
mov
xor
dec
add
out
or
push
mov
cmp
sbbl
push
jbe
fmuls
jl
and
and
pop
or
jg
mov
leave
out
aaa
push
inc
out
pop
pusha
cmp
cmp
add
cmp
ret
insb
xor
inc
sbb
adc
xchg
inc
or
push
jne
out
pop
stos
mov
rep
add
sti
out
adc
scas
push
les
sbb
inc
inc
iret
sub
or
sub
push
test
push
fcmovbe
or
outsl
mov
mov
jno
dec
leave
ret
sbb
push
call
test
pusha
lahf
int
cwtl
sbb
pop
xor
in
sbb
lret
fsubrs
sbb
aas
push
mov
pop
xor
mov
outsl
jecxz
mov
jge
mov
inc
ljmp
scas
in
sbb
xchg
sub
insl
mov
xchg
repz
insb
push
call
push
xor
outsl
mov
in
dec
xchg
cwtl
mov
or
jnp
sysexit
cmpb
imul
arpl
mov
cld
sub
cmp
cmp
mov
mov
mov
popa
mov
xchg
xor
push
xchg
mov
ret
jmp
mov
and
mov
enter
popa
mov
jecxz
sti
jnp
sar
inc
clc
jo
jecxz
pop
scas
dec
jbe
dec
add
or
jmp
sub
aad
pop
mov
iret
mov
std
inc
add
call
fdivr
movsb
arpl
inc
cmpsl
xlat
imulb
adc
movl
xchg
xchg
jns
xor
cwtl
push
inc
jle
scas
not
sub
cmc
adc
lods
sbb
ficoml
and
xchg
in
lret
loopne
clc
shlb
pop
sti
or
jbe
loopne
mov
xchg
xrelease
lcall
loopnew
les
or
leavew
mov
jecxz
bound
scas
mov
fwait
mov
insl
mov
cmpb
push
vpmaxud
js
out
adc
popa
dec
lea
jl
or
and
jno
mov
push
mov
addr16
dec
push
adc
fnstenv
ds
inc
mov
push
pop
xchg
mov
push
test
mov
or
imul
lock
mov
xor
popa
pusha
mov
pop
dec
stos
lret
mov
xlat
or
adc
popa
adc
lcall
add
arpl
stos
sbb
inc
sub
mov
push
orl
and
push
jg
ret
jno
or
pop
pop
adc
dec
xchg
inc
lods
lret
ljmp
mov
in
arpl
lods
andb
and
mov
data16
xchg
push
mov
add
cmp
jge
nop
jbe
sub
mov
lret
std
pop
push
fcomp
mov
jo
loopne
sahf
sub
jecxz
cmpsb
sbb
xchg
mov
xchg
sbb
mov
mov
or
jo
cli
xchg
ss
mov
loop,pn
xchg
jne
sbb
mov
mov
les
je
push
dec
or
sub
sarl
jno
fucomp
dec
lea
pop
sahf
push
outsb
or
inc
inc
leave
arpl
xor
popl
addl
mov
std
dec
stos
int3
add
adc
dec
xchg
fwait
js
lahf
sti
sub
inc
xlat
std
xchg
cmc
popf
jno
fs
roll
pop
mov
fisttpll
imul
test
mov
and
fnstcw
xchg
or
lock
sbb
dec
test
in
dec
repnz
ds
add
repz
out
push
repz
sbb
std
js
stos
cmp
cwtl
mov
xchg
int
enter
inc
inc
pop
sbb
test
sub
adc
mov
push
sbb
mov
pop
push
std
jle
aad
and
incl
xlat
xchg
pop
and
or
push
insl
mov
adc
and
and
dec
mov
and
in
fs
or
xchg
xchg
sbb
stc
clc
cmp
ret
in
xchg
les
and
sahf
sub
mov
jmp
jecxz
lret
jg
sbb
xchg
inc
add
cmc
dec
mov
pop
jge
and
add
call
dec
scas
fld
dec
aas
lea
popa
xchg
xor
ljmp
sbb
or
push
cmp
mov
out
mov
push
push
sub
adc
shrl
add
xor
sbb
pop
sbbl
lods
out
stos
pop
adc
out
inc
add
iret
inc
cmpsl
or
or
pop
ret
inc
mov
adc
stc
xor
testb
scas
popf
std
and
sbb
addl
imul
cmp
es
scas
sub
lret
mov
ds
push
jns
aad
clc
shrb
jmp
cmp
push
sbb
adc
lock
scas
push
dec
pushl
sub
dec
lcall
mov
in
sbb
ja
adc
jo
andl
cwtl
push
xchg
mov
pop
arpl
sbb
cmpsl
cmp
mov
orb
inc
jnp
push
outsl
cs
leave
aad
sahf
lods
mov
nop
arpl
subb
inc
out
inc
jle
cmp
sahf
call
cmp
sub
push
xor
arpl
adcb
sub
and
pushw
jmp
mov
adc
mov
xchg
out
mov
jle
and
jl
fidivrs
mov
xorl
cmpsb
dec
and
fimull
xchg
push
lret
xchg
and
mov
pop
test
loope
gs
ret
cmp
cmp
out
or
sub
shrb
adc
int3
aas
mov
cs
icebp
jne
sub
mov
sub
out
stos
test
je
add
pop
outsl
je
out
sbb
ret
shr
imul
imul
mov
sbb
jno
add
cmpsl
gs
pop
or
push
add
lods
scas
mov
and
sub
push
sub
mov
cmp
cltd
fsubl
scas
sub
xor
jae
mov
fwait
cmc
cmpsl
xchg
add
jno
test
int3
ja
add
xchg
mov
xchg
jecxz
jb
dec
adc
les
mov
xchg
cld
jnp
jno
ja
in
mov
push
addl
adc
xchg
arpl
sahf
cmp
outsl
jp
fcoms
jmp
mov
addl
jl
push
ljmp
adc
out
or
int
push
mov
pop
mov
imul
mov
ret
push
imul
push
dec
ja
pop
jnp
dec
add
xchg
in
mov
adc
adcb
sarl
xchg
ja
push
fcoml
fiaddl
pop
loopne
xchg
mov
in
or
adc
imul
icebp
enter
dec
dec
inc
in
incl
loop
outsb
out
lds
push
adcb
dec
pop
fdivr
xchg
inc
roll
cld
push
insl
pop
or
mov
in
jle
dec
decl
xchg
xchg
shrl
arpl
inc
jmp
in
and
jge
dec
lret
dec
divl
je
fdivrl
addr16
in
xchg
cs
stos
xlat
lods
or
aad
xor
mov
enter
sbb
in
fdivl
adc
sahf
sub
jb
inc
insl
adc
xor
repnz
divb
in
cmpsl
pop
fcmovne
call
push
lds
xlat
sbb
ljmp
adc
and
outsl
xor
inc
pop
cmp
jne
ljmp
jbe
jg
sub
lret
sub
jle
insb
jmp
xchg
dec
and
icebp
test
insl
mov
pop
test
rcll
mov
sub
cmp
or
scas
fs
cmc
daa
xor
xchg
mov
mov
rcll
jmp
add
dec
xlat
les
fcmovnbe
jbe
sub
dec
imul
repz
or
sub
fcomp
pop
movsl
aam
xor
in
insb
rorl
sub
jmp
das
pusha
push
and
andl
mov
pop
outsl
xchg
shlb
adc
insb
sub
ljmp
mov
adc
repnz
bound
sbb
dec
cltd
xchg
outsb
mov
iret
cmp
mov
jge
adc
out
inc
adc
mov
lds
cmp
jp
rep
jne
movsb
jns
insb
bound
mov
xchg
and
cli
adc
jmp
imul
mov
add
pop
jo
sbbl
sub
mov
jle
push
add
inc
iret
incb
adc
push
and
xor
and
jns
inc
test
pusha
mov
mov
sti
lcall
xor
lock
pop
jns
jecxz
and
and
out
dec
fisttpll
mov
or
push
outsl
in
out
sarb
dec
push
addl
inc
xor
shrl
sbb
pusha
std
fisubl
add
jnp
nop
mov
loope
xor
rol
mov
movsl
fiadds
stos
ss
pop
sbb
out
mov
mov
jge
mov
push
xor
out
add
or
out
es
mov
xlat
xchg
push
and
out
push
scas
jge
aad
push
pop
jo
cmc
mov
sub
jo
andl
jle
xchg
and
cmp
enter
xor
or
xor
and
neg
push
in
in
roll
or
mov
pop
cmp
fmull
aaa
sub
addr16
test
mov
xor
push
int3
sub
xchg
adc
inc
cmpsb
sub
out
and
scas
xchg
mov
popf
inc
jbe
fdivs
aaa
cmpsl
xor
sub
ljmp
pop
push
dec
dec
test
xor
adc
fcmovnbe
mov
inc
leave
in
dec
xor
push
push
out
push
iretw
mov
jno
or
aas
lods
cli
cs
sbb
test
pop
push
daa
aam
cmpsl
testb
xor
dec
lcall
cmc
cld
fcoms
rolb
call
test
mov
sub
or
add
aam
sub
pop
jo
jl
cmpsl
int3
and
jg
rorl
rorb
call
arpl
ret
sbb
mov
ret
loop
rolb
xorb
inc
repnz
das
mov
lds
shll
sbb
sbb
jmp
mov
rclb
fisttpll
inc
les
mov
xchg
sbb
pop
mov
gs
xor
add
in
sub
scas
flds
push
xor
xor
xlat
jg
fsubl
sti
dec
nop
shrb
dec
cmp
out
mov
push
xchg
mov
icebp
imul
out
or
das
xchg
mov
jp
mov
aam
in
jecxz
mov
dec
movsl
lcall
stos
cld
shlb
in
and
push
and
test
fnstenv
pop
jl
mov
adc
xlat
aaa
or
je
stc
out
xchg
sub
push
mov
xor
call
xchg
das
lret
mov
or
inc
pop
pop
xchg
and
add
mov
inc
xor
fwait
jo
xor
ljmpw
dec
call
sbb
mov
cmp
lret
imul
mov
mov
or
mov
cltd
fbld
insl
shll
xchg
call
sub
xlat
push
push
inc
pop
ja
jns
jle
arpl
shll
adc
cmp
mov
xchg
fldcw
dec
and
dec
aaa
push
mov
rol
sbb
mov
sub
pop
xor
fists
js
inc
and
push
repnz
jne
push
dec
sub
hlt
and
inc
inc
das
pushf
jp
fisttpll
aas
push
mov
cmp
add
mov
jle
jge
jae
jne
xor
cmovno
jp
mov
mov
mov
imul
andl
mov
xorl
filds
xchg
sbb
mov
adc
scas
or
incb
outsb
dec
cmp
cwtl
nop
xor
inc
repz
les
push
mov
mov
sub
int
lods
rol
add
adc
movb
sub
jle
push
enter
and
cmpsl
popa
and
inc
lds
sbb
out
pushf
mov
ja
fidivs
mov
or
mov
push
xchg
jns
inc
pop
pushf
sub
push
aad
jo
pop
mov
hlt
mov
aam
cmpb
or
in
or
add
push
and
push
call
int3
xlat
das
cmp
fcomps
inc
xchg
mov
lret
mov
out
arpl
imul
imul
stc
sarl
sub
sub
stc
mov
in
lcall
rorl
xchg
inc
inc
insl
mov
or
lahf
mov
ss
dec
lret
mov
std
mov
ljmp
out
or
cmpsl
adc
lods
aas
je
shll
scas
bnd
adc
and
jae
mov
repz
mov
movsl
xchg
or
ret
sbb
sub
mov
adc
mov
cmp
pop
hlt
cld
addr16
pop
mov
mov
cmp
imul
ror
jge
inc
lret
cwtl
inc
iret
repz
movsl
mov
or
shlb
adcb
adc
imul
pop
movsb
mov
mov
dec
push
lods
lock
mov
adc
movsl
cmp
mov
jne
jno
xor
jl
std
cmp
test
aad
cmp
mov
cmp
cmc
jle
adc
fs
add
pop
pop
jne
jecxz
inc
add
xor
lret
mov
pop
fs
test
sub
adc
push
jo
pop
movsl
mov
leave
xchg
xchg
stos
popf
inc
jb
mov
dec
inc
xor
mov
popf
shrl
mov
fdiv
inc
call
add
repnz
push
sbb
repnz
mov
movntq
out
clc
push
mov
aad
and
daa
dec
cmpsl
dec
or
jno
xchg
push
cmpsb
fnstsw
mov
les
jno
aam
cltd
pop
jbe
and
fidivrs
icebp
xor
dec
dec
add
insb
rcr
push
dec
mov
aaa
sti
loope
mov
or
mov
pop
pop
popa
cwtl
xchg
pop
push
insl
inc
mov
sub
mov
mov
sti
inc
lret
push
test
mov
std
pop
jmp
add
les
jbe
inc
or
lcall
push
test
add
mov
lret
jne
mov
testl
lock
mov
scas
aaa
cmp
out
or
or
dec
mov
mov
dec
test
pop
xor
negb
cli
sti
sub
in
mov
add
add
pop
mov
rcrb
hlt
jmp
mov
loop
in
cmp
enter
in
sub
in
or
lea
or
push
xchg
out
and
xchg
inc
pop
fidivl
mov
lret
aaa
cld
pushf
pop
pop
inc
repnz
push
inc
cmp
adc
stos
stos
or
or
pop
jns
push
and
iret
and
push
ss
cmc
and
ljmp
adc
push
cmp
test
jo
rcl
jbe
sbb
pop
cmpsl
push
imulb
std
fcompl
push
enter
add
jbe
lods
mov
in
cld
popl
enter
enter
mov
in
pop
loope
mov
cmp
or
repz
popa
insb
mov
xchg
pusha
mov
test
pop
jp
insb
shll
out
xor
mov
daa
jo
leave
fsubrl
inc
inc
xor
movsl
dec
pop
xchg
sbbl
xchg
test
aaa
aam
xchg
mov
ret
pop
jno
sti
push
xchg
and
or
lahf
ss
or
jl
rcr
jl
out
arpl
mov
push
fstps
inc
imul
mov
mov
xor
into
cmp
inc
fbld
push
lea
pop
ret
je
sbb
adc
jg
xchg
xor
add
adc
xchg
inc
sub
out
cld
pop
pop
cmc
pop
das
jnp
jnp
cmp
xlat
iret
sub
or
adc
inc
adc
cmp
insb
xlat
sub
aad
jne
or
mov
cmp
inc
aaa
cmpsb
shll
in
ficoml
in
sub
sub
mov
cmp
popf
and
mov
pop
jmp
cmpsb
xlat
add
cmp
mov
je
fstpl
xchg
pusha
sub
stc
xor
xor
in
sbbl
cli
add
das
mov
jne
or
lock
fistl
movlps
orb
add
packuswb
mov
nop
push
xor
sti
lods
in
loopne
ja
ret
jbe
add
jecxz
pop
dec
xlat
mov
insl
mov
jmp
sbb
mov
and
pop
mov
xor
push
es
aas
imul
jne
xchg
imul
mov
imul
sub
hlt
cld
pop
cmp
movsb
cmp
sbb
imul
mov
cmp
icebp
add
loop
mov
or
aas
scas
or
stc
mov
or
cltd
and
sbb
sahf
std
inc
inc
push
sbb
nop
adc
or
orl
adc
pusha
add
push
inc
jno
sbb
adc
les
lcall
and
dec
fidivl
addr16
dec
test
sub
pop
mov
dec
ret
in
xor
fwait
loope
popl
pop
cld
notb
sbb
aam
cmp
cmpsb
or
lods
mov
adc
dec
and
repz
adc
jae
pop
mov
loop
cltd
cmp
xchg
xchg
push
mov
mov
cmp
push
mov
es
call
out
pop
mov
lret
imul
ljmp
and
jbe
push
jnp
lods
mov
test
mov
mov
add
or
popa
push
push
lods
or
imul
jne
lahf
lcall
pop
or
iret
outsl
xor
adc
pop
sti
adc
out
add
xor
movsb
xor
in
xlat
cmp
dec
js
pop
cmpsb
aad
hlt
outsl
enter
mov
xchg
sbb
test
aam
and
loop
xchg
xchg
add
dec
mov
inc
add
xchg
notb
adc
push
push
pop
icebp
pushf
mov
in
mov
rorb
pop
cmc
testl
int3
out
pop
out
cwtl
je
pop
push
cmp
xor
fnsave
mov
lahf
jl
or
sbb
sub
mov
xchg
pop
lret
out
jle
movsl
repz
repz
xor
popa
popl
xchg
mov
mov
cmp
subl
fldt
imul
jo
ja
mov
or
push
icebp
aas
pusha
shl
xchg
adc
push
mov
cmp
jbe
or
int3
das
repnz
and
mov
push
cld
adc
sahf
lock
cwtl
clc
xchg
testb
jmp
out
dec
mov
fbstp
and
or
xchg
xor
mov
fnstsw
mov
nop
fmuls
repnz
lods
mov
or
jne
gs
aad
popa
inc
mov
inc
testb
out
imul
jne
pop
stos
fsubrs
rorb
stos
jno
xchg
mov
pop
mov
mov
ja
je
push
cwtl
es
into
jne
outsb
or
xor
cmpsb
jb
inc
pop
imul
xor
stos
xchg
lret
dec
add
dec
mov
dec
scas
out
adc
adc
mov
cmp
in
fwait
loop
xchg
addr16
int3
push
orb
sub
dec
les
inc
stc
mov
clc
daa
jp
push
imul
jbe
dec
jno
in
push
or
imul
in
mov
stc
push
jmp
test
shl
lods
xchg
hlt
add
inc
pop
filds
push
mov
out
jmp
int3
cmp
jne
cltd
fwait
notb
decb
js
cmp
testl
xlat
sbb
fdivrp
fidivl
hlt
inc
decl
xchg
adc
push
movsb
daa
shll
imul
lods
pushf
bound
stos
data16
addr16
fmull
mov
sbb
pop
std
pop
xchg
cltd
scas
inc
mov
push
imul
stc
bound
mov
test
jmp
js
scas
sbb
cmp
enter
imul
pop
mov
mov
scas
mov
adc
js
or
pop
lds
push
sub
fstps
add
sub
and
pop
arpl
test
jl
sbb
cld
xchg
out
or
jnp
and
jle
xchg
lret
cmp
mov
out
arpl
in
testl
out
cli
loopne
and
rol
out
sbb
test
insl
lahf
out
lahf
sub
inc
sahf
and
js
push
jle
jmp
xchg
push
dec
mov
stc
xchg
and
or
js
xchg
fcoml
je
nop
jl
inc
or
jbe
jle
xchg
movsl
dec
and
scas
add
xchg
ja
mov
adc
fwait
cmpsl
push
movsb
cwtl
mov
add
add
cmp
mov
mov
inc
mov
and
je
ljmp
std
cmc
pushf
pop
or
xchg
daa
or
dec
test
stc
push
mov
pop
in
add
mov
jmp
orl
cmp
mov
arpl
mov
in
mov
inc
divl
arpl
and
insl
mov
loopne
dec
xor
hlt
xor
fwait
lods
inc
and
mov
fidivrs
int3
imulb
push
inc
push
ja
xor
mov
and
arpl
adc
xchg
insl
xchg
add
rclb
sbb
mov
push
sti
scas
adc
dec
push
jl
pop
xor
mov
mov
mov
mov
rclb
jns
addl
mov
inc
mov
lods
sub
jae
add
lds
jg
es
ljmp
bound
loope
or
sarl
daa
push
pop
in
insl
mov
pop
jp
add
mov
movb
mov
or
or
inc
aas
cmp
lret
jge
pop
iret
shl
out
out
adc
xchg
lcall
cs
inc
mov
and
xor
scas
stos
insl
pop
cs
jne
jmp
xor
sar
cmp
xchg
sub
mov
or
sbb
imul
pop
sbb
cmp
pop
sub
push
dec
or
outsl
repz
push
inc
dec
mov
repnz
xchg
cmovns
or
and
hlt
lods
aaa
les
mov
adc
outsl
lods
sbbl
push
mov
in
sub
add
mov
xor
inc
gs
dec
mov
fsubr
sub
jg
dec
in
ficoms
out
shrl
or
jecxz
sub
mov
test
nop
dec
xor
inc
adc
loopne
mov
stos
mov
xchg
cld
add
lods
cmp
enter
subl
daa
enter
movsb
jl
stc
ja
fwait
aam
movsb
adc
out
out
jmp
push
mov
sbb
fwait
cli
addr16
es
int3
mov
ret
insb
ljmp
xor
call
in
xchg
lea
cmp
push
pop
sub
repz
ss
test
or
jmp
mov
imul
or
xlat
loop
sbb
jbe
cmp
xchg
mov
stos
xchg
push
imull
sub
xor
sbb
stos
repnz
lcall
fldcw
stos
push
popf
std
fmuls
jnp
pop
notl
jns
inc
mov
mov
mov
pop
and
sub
cmp
outsl
dec
mov
pop
mov
cmpsb
jmp
mov
push
flds
mov
cmp
sbb
repz
xchg
loope
sub
adc
dec
or
in
and
scas
sbb
jb
jo
dec
cli
sub
push
nop
cmpsb
mov
sub
leave
cmp
push
loope
pop
imul
testb
and
sub
pop
jle
adc
xlat
fsubr
mov
imul
roll
insb
xor
pop
mov
pop
push
xor
jg
adc
and
stc
mov
dec
push
les
mov
add
std
fisttpll
std
addb
jp
push
cmp
test
pop
popf
sarb
mov
clc
jmp
lret
data16
pop
and
xor
test
dec
inc
adc
and
or
stos
icebp
or
rorb
dec
sub
jnp
mov
jp
xchg
mov
or
or
fbstp
loop
mov
imul
data16
cmp
fstl
mov
sbb
mov
cltd
popf
popa
push
aas
int
movsb
jae
push
or
jnp
inc
adc
add
cli
je
loope
inc
orb
xchg
stc
fwait
icebp
xchg
pop
add
int
stos
sti
repnz
mov
scas
addr16
push
rclb
and
nop
dec
jle
arpl
push
data16
fnclex
jg
loope
push
xchg
sub
pop
and
xlat
xchg
in
mov
jb
jg
aam
lds
iret
dec
mov
xor
sub
cmp
xchg
and
add
cmp
jnp
fcmovu
cmpb
inc
call
sahf
stos
popa
or
xchg
int
aad
pop
or
push
mov
inc
and
imul
fiaddl
inc
pusha
in
jbe
mov
push
cmp
test
inc
adcb
push
out
jns
inc
pop
add
and
into
fbld
sahf
sub
cwtl
dec
nop
insb
into
sub
ret
lea
cmp
pusha
arpl
add
lcall
jae
mov
add
mov
out
xor
xchg
sbb
mov
clc
iret
sti
in
icebp
dec
inc
add
les
arpl
adc
cmc
sahf
jg
jo
xchg
or
mov
andl
jno
sub
and
fbld
cmpsl
or
jbe
int
out
fst
jno
mov
push
jl
scas
adc
mov
mov
rcrb
stos
or
inc
faddl
xchg
cli
in
jno
aaa
cmc
les
inc
dec
enter
sbb
adc
push
fs
ljmp
mov
push
jp
push
mov
jne
mov
loop
insb
fisubl
pop
xchg
sahf
dec
jbe
inc
and
divb
jg
mov
and
rep
enter
jl
xchg
imul
jnp,pt
and
mov
sbb
inc
shll
sti
js
aaa
add
push
call
mov
mov
push
in
in
add
scas
mov
ds
dec
les
out
lock
loopne
pushf
fidivl
adc
sbb
imul
jne
jl
dec
xchg
xor
adc
push
aaa
inc
or
scas
lods
sahf
sub
shlb
sub
cmp
adc
lret
inc
xchg
leave
or
sbb
lret
and
fadds
movl
and
fsts
pop
fs
sarb
pop
jb
xchg
cmc
pop
mov
sbb
popa
push
decb
leave
adc
sbb
test
pop
fisubs
dec
popf
lahf
adc
vmovq
sub
adc
xor
inc
out
xchg
jnp
es
mov
test
cltd
mov
mov
add
and
fdivr
inc
js
add
std
shlb
jnp
lret
xor
movsb
or
and
popf
sarl
or
fidivs
mov
loop
or
adc
xor
scas
cmp
shll
rclb
cmpsb
sbb
and
sub
sub
mov
jae
loop
jecxz
rol
and
xorl
xorl
jne
jne
cmpsb
adc
into
cmp
aam
rclb
jnp
lds
mov
in
mov
xchg
cs
sub
mov
stos
inc
int3
movsl
test
mov
nop
mov
mov
mov
jmp
and
mov
in
add
mov
mov
sbb
mov
or
inc
pop
pop
mov
push
xorl
and
or
cmpsl
pop
movl
lcall
adc
push
cmp
cmpsl
out
jge
lret
jb
xor
mov
jl
xor
xchg
shl
decb
cmpsb
popf
addr16
jo
mov
pop
xchg
bound
adc
daa
movsl
xor
xor
lods
cld
sti
sbbl
cmp
sbb
jge
push
sarl
ljmp
jne
mov
cli
xchg
out
jo
push
out
xor
dec
xor
cmpsl
or
enter
mov
mov
mov
in
or
ljmp
inc
ljmp
xlat
ret
inc
xchg
movnti
xchg
cmpsb
mov
mov
cli
iret
lods
cmp
in
sti
sub
xchg
inc
aas
jge
mov
push
icebp
push
push
xchg
pop
adc
fcomip
dec
loopne
test
pop
cmpsb
push
mov
adc
mov
sub
lahf
roll
dec
fdivl
inc
shll
mov
mov
inc
jmp
gs
cld
sub
fwait
jge
cmpsb
js
sub
sub
pop
lar
xor
adc
push
cmp
jnp
pop
dec
lds
out
daa
in
add
fdivl
jb
or
add
mov
rcll
testl
out
lock
daa
in
in
in
mov
dec
nop
push
sub
out
or
pop
push
cmpb
cli
or
push
dec
shl
jg
arpl
pop
mov
xor
insb
je
xchg
lret
dec
cmp
mov
xchg
mov
jmp
dec
test
mov
rorb
xchg
in
sbb
pop
jge
jl
sbb
pushf
push
dec
es
popa
into
fbld
push
in
and
aaa
cmp
js
sub
dec
push
fisubrs
inc
inc
add
ss
lcall
lea
adc
fcmovnbe
xchg
cmp
xorb
fs
loop
xchg
xchg
in
sbb
pop
xor
cmp
cmpsb
inc
or
jmp
stos
in
and
sbb
mov
leave
pop
sbb
aaa
mov
xchg
and
push
sarl
int3
mov
ds
fs
sahf
out
or
js
movsb
outsl
cmp
lcall
iret
inc
pop
cmp
and
xor
jmp
pop
mov
aam
jmp
ja
fwait
out
dec
jmp
adc
push
daa
jp
mov
das
push
mov
jp
inc
mov
outsb
lods
xchg
xchg
xor
xorl
fdivrs
dec
xor
mov
scas
arpl
mov
lret
pop
ja
xor
push
and
jmp
ds
cwtl
ljmp
mov
bts
je
jbe
xchg
imul
pusha
imul
pop
dec
imul
sub
addr16
pop
nop
jb
arpl
rcrb
fcomi
sub
and
pushf
lds
mov
mov
fsub
adc
movsl
loope
test
or
cld
shlb
jne
shll
jmp
xchg
daa
mov
jmp
sub
pop
add
sub
dec
movsl
fidivl
js
dec
mov
inc
mov
stc
jecxz
fwait
mov
test
jae
lods
mov
fwait
cmp
xchg
xchg
cld
out
ud1
mov
test
or
cmpb
mov
sahf
adc
adc
mov
mov
out
clc
mov
outsb
lea
iret
out
cmp
mov
pop
testb
jge
mov
or
jnp
jno
bnd
das
dec
mov
jecxz
push
outsl
push
fnstenv
stc
mov
dec
ret
sub
inc
jnp
mov
rcr
jns
dec
ret
push
adc
xor
pop
inc
cmp
xchg
adc
enter
aaa
xor
js
sub
repnz
andl
scas
out
mov
imul
imul
popa
mov
or
add
inc
mov
inc
mov
imul
adc
jb
lret
icebp
stos
aam
add
aaa
mov
dec
sbb
xchg
mov
scas
push
mov
repnz
jno
idiv
out
cli
fs
xor
push
push
dec
flds
pop
insl
mov
add
scas
jbe
ljmp
loope
mov
fsubrs
sub
es
xchg
shl
push
outsl
shlb
add
shr
insb
cmp
les
nop
mov
cmpsl
inc
sub
push
xchg
adc
enter
incb
stc
dec
je
mov
jb
inc
andb
and
in
pusha
test
mov
jnp
cld
test
jmp
inc
and
enter
lock
or
ret
out
or
pusha
fildl
adc
mov
jo
aad
cmp
nop
push
fimull
mov
jle
ret
cmp
mov
js
shlb
xor
subb
pop
mov
jne
sar
in
inc
jne
pusha
lods
add
fidivrl
and
mov
jb
xchg
nop
and
mov
mov
or
nop
subl
hlt
lods
loopne
or
ret
movsb
dec
andb
adc
sbb
dec
xchg
js
dec
frstor
cmpsb
push
je
out
push
imul
out
xor
cwtl
shll
and
and
jno
clc
ret
or
mov
fsts
push
pop
jns
int3
sub
fs
xor
push
leave
addl
aaa
stc
or
cmp
mov
stc
cli
lret
outsb
mov
sub
add
adc
inc
addr16
dec
shlb
dec
push
mov
lods
inc
push
mov
les
imul
or
mov
into
xchg
pop
cmp
and
sti
jne
add
mov
add
cs
cmc
ljmp
dec
cmp
mov
inc
pop
adc
and
test
inc
dec
cmp
jne
add
pop
les
aas
jbe
dec
loopne
mov
xor
out
jbe
sub
fwait
mov
and
or
shrb
test
ja
fisubrl
xor
sub
cmpsb
push
imul
cmpsl
sub
cmpsl
inc
adc
jmp
jecxz
test
ror
mov
add
ret
int
stc
in
ffreep
insb
add
aam
push
push
les
out
fidivl
jg
jg
mov
jmp
push
sub
pop
push
popf
sbb
xor
push
add
push
mov
jl
pop
int3
inc
sahf
das
cmp
cmp
icebp
push
cmc
je
sub
mov
fs
and
pusha
mov
cmp
inc
aas
mov
inc
mov
int3
repz
inc
jns
out
stos
inc
insb
cmc
shll
and
cmp
in
xchg
and
jmp
mov
mov
push
sbb
cmp
xchg
pop
mov
aaa
stc
push
sub
xchg
loop
rcrb
icebp
cmp
mov
std
pushf
jbe
and
jge
lret
and
mov
aad
xchg
mull
sub
cmp
shrl
std
push
pop
mov
stos
jnp
adc
fsubs
std
mov
cmp
mov
cmc
jp
lahf
sbb
aam
mov
scas
call
and
sahf
rolb
xor
iret
repnz
jns
push
inc
mov
stos
stos
adc
xchg
scas
ss
inc
fs
data16
arpl
fcomi
and
repnz
inc
jne
mov
inc
xchg
jb
fadd
sbb
aam
xchg
mov
repz
fmull
in
mov
lods
mov
mov
cmpsl
push
mov
sbb
push
bound
push
jo
jno
lahf
add
mov
or
dec
icebp
push
orl
test
jecxz
xor
cmp
arpl
aaa
lods
or
dec
dec
jmp
jl
loopne
repz
std
ljmp
mov
ss
lock
sub
push
mov
dec
fistps
repnz
pop
sub
push
pop
outsl
push
in
pop
out
sbb
jle
mov
aas
hlt
lcallw
iret
inc
inc
mov
leave
cmc
iret
int3
xor
push
mov
add
outsb
bound
dec
sbb
jb
mov
leave
mov
or
mov
lret
call
xchg
xchg
push
gs
sub
lods
add
aas
jmp
shrl
jmp
cmp
sub
mov
addb
lret
xchg
gs
rolb
xor
cmpsb
mov
aam
imul
test
and
stos
jp
rep
or
rclb
xor
adc
and
cmp
push
xchg
mov
ror
nop
stc
loope
xlat
imul
fistpll
mov
addb
push
xchg
push
xchg
repz
test
jecxz
sahf
mov
or
jg
and
inc
push
sbb
pusha
xor
enter
divb
mov
sbb
jno
pop
sub
cmp
fsubrs
xor
mov
pop
ja
or
imul
jp
mov
inc
adc
jmp
fwait
xchg
jne
sbb
ds
hlt
retw
or
fmull
out
and
cmpsb
repnz
sub
int
fildll
inc
jnp
xor
add
jg
push
ss
and
into
mov
push
xor
leave
jne
loop
lahf
movnti
insl
mov
pop
bound
hlt
out
jle
inc
add
mov
divl
arpl
sahf
idivl
mov
xor
popa
xchg
and
lods
clc
xchg
aam
sbb
ljmp
dec
scas
dec
xchg
test
push
or
lahf
xchg
aas
cmc
xchg
shrb
and
inc
jns
sub
in
out
cmp
or
mov
mov
pmaxub
bound
pusha
iret
sbb
pop
or
aaa
call
pop
leave
lcall
and
ret
dec
in
mov
mov
pop
mov
pop
mov
sbb
jne
sbb
fwait
xlat
dec
mov
inc
mov
jo
dec
inc
mov
out
shlb
sbb
add
test
jae
push
xchg
clc
repz
cmp
pop
loop
push
sbb
out
jmp
xor
nop
push
movsl
xchg
mov
cmp
fcmovnbe
xchg
cmc
out
or
pop
push
pop
lods
inc
cmpsl
jns
mov
adc
mov
add
gs
push
lods
scas
iret
push
jmp
push
lea
sbb
xlat
push
aam
and
lret
inc
cmp
bound
jo
mov
shrl
cwtl
pop
sub
or
inc
add
add
or
dec
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
