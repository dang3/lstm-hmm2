add
sub
dec
mov
xorl
lds
inc
dec
loop
push
mov
test
jp
lahf
push
inc
jmp
rolb
push
xor
inc
fwait
ljmp
jae
mov
fstpt
mov
xor
xor
js,pn
shl
xchg
cmpsl
pop
mov
lahf
inc
ds
cmp
cmp
dec
rcl
fcoms
adcb
dec
test
jecxz
mov
aas
pop
mov
jb
jo
shlb
and
jmp
iret
jl
pushl
or
pushf
sub
pop
add
push
shll
emms
fimull
test
mov
xor
cwtl
mov
pop
enter
mov
pop
sub
xchg
loop
push
mov
dec
add
fdivs
adc
cmp
cmp
push
lahf
outsl
sub
loope
xor
cmp
and
std
das
jle
xchg
pop
xchg
mov
out
jo
mov
divb
mov
cmp
lock
das
lock
scas
cmp
add
xlat
popa
cmpsb
incl
pop
cwtl
clc
loop
insl
mov
dec
push
roll
data16
lahf
adc
pop
mov
ja
mov
pop
repnz
dec
fdivrl
dec
mov
data16
push
push
dec
mov
fwait
adc
mov
imull
push
mov
mov
pop
inc
mov
jg
stos
dec
arpl
popf
repz
ret
sub
fidivrs
push
int
cwtl
xor
or
xchg
jns
add
loope
sbbb
subl
inc
jne
sbb
cmp
or
jae
and
int3
xor
sbb
sahf
pop
push
inc
loopne
xchg
mov
add
lods
mov
add
jecxz
enter
pop
popf
ss
inc
fstpt
les
mov
dec
cld
pusha
adc
incl
mov
movsb
pop
divl
mov
pop
pop
or
sar
push
outsl
lcall
mov
gs
mov
jns
mov
pop
sub
test
jmp
cltd
add
test
or
jl
pushf
pop
rcll
iret
xor
loope
out
fadds
xlat
jmp
pop
pop
rcrl
mov
ja
ss
call
aaa
mov
dec
add
mov
sub
mov
or
fs
push
popf
sub
xchg
xor
out
xor
sub
stos
fsubs
push
inc
or
sub
sbb
inc
dec
sbb
add
repz
jge
mov
cs
xchg
das
jb
mov
mov
push
flds
adc
and
mov
je
das
sbb
mov
stos
mul
mov
mov
daa
jb
push
adc
fs
mov
xlat
insl
push
lahf
jmp
pop
cmp
sub
int3
xchg
inc
movl
mov
in
popa
dec
sahf
dec
sub
fmull
ss
sbb
inc
pop
popf
pop
icebp
adc
shrb
cltd
mov
cmp
pop
cmpsl
push
push
xor
push
mov
mov
mov
loope
rol
lock
pop
fidivl
mov
add
jge
mov
mov
fcoms
sti
les
int3
test
push
pop
sub
rcrl
add
mov
mov
xor
push
xor
adc
inc
push
cld
movsb
lret
and
sbb
mov
stos
into
mov
outsb
jae
push
mov
sub
aaa
cmp
mov
and
lahf
mov
ret
jge
mov
lods
je
rorb
imul
inc
xchg
js
pop
pushf
mov
cmp
xor
or
insb
xor
jbe
pop
sti
dec
orl
pop
testb
mov
pusha
andl
adc
mov
pop
and
arpl
js
in
push
xor
fisubl
mov
pop
pop
jo
int3
and
dec
subb
jge
loop
ja
pusha
xor
sbb
mov
pusha
das
mov
aas
lea
cmc
adc
insb
daa
sub
es
xchg
push
repnz
mov
mov
pop
pop
add
mov
aas
pop
mov
mov
mov
das
push
fcomps
int3
push
dec
and
cwtl
mov
in
xchg
test
fcompl
fadd
and
mov
lea
loopne
xchg
jne
dec
fbstp
or
clc
mov
sub
dec
or
sahf
iret
out
push
jecxz
inc
shlb
adcb
ds
inc
mov
or
in
push
xchg
fsubrl
or
clc
bound
test
adc
stc
jo
push
lods
sub
mov
nop
pop
mov
iret
in
and
cmp
lahf
les
sbb
and
cmpsl
shll
adc
jge
pop
imul
xor
mov
flds
int
mov
or
jnp
cmp
mov
mov
sbb
push
lret
mov
ficoms
mov
jl
jae
test
dec
nop
ret
arpl
xchg
push
pop
adc
fnop
mov
insb
xchg
jae
insl
pop
xchg
aad
es
lahf
insb
arpl
in
scas
add
insb
mov
popf
xchg
pushf
mov
call
xor
repz
pop
inc
push
enter
shl
cs
sub
rorl
mov
or
push
jno
test
frstor
jno
das
scas
rorl
jl
insl
xor
xchg
jns
mov
xchg
mov
ret
xor
outsl
loope
cs
pop
mov
fwait
test
rcll
xlat
lods
push
mov
fmuls
mov
add
in
sbb
lods
mov
push
xchg
push
mov
fcompl
loope
or
ja
hlt
push
pop
pop
mov
bound
loope
push
cmp
into
pushf
pop
dec
sbb
movsb
dec
cmp
jecxz
add
das
mov
fs
adc
imull
add
mov
pop
bound
xchg
ss
cmp
push
jp
popa
mov
pop
lcall
rolb
stos
sbb
adc
out
in
xchg
mov
xor
add
xor
mov
mov
push
sahf
sahf
out
adc
and
fcoml
fidivl
dec
repnz
test
lcall
dec
dec
inc
sahf
xor
rcrb
and
adc
xchg
dec
pop
sub
lock
add
pop
dec
js
mov
or
mov
sub
jmp
xchg
mov
les
and
mov
push
ds
sbb
pushf
addb
inc
add
inc
adc
sub
gs
pop
les
lods
xor
inc
int3
and
fs
mov
add
clc
mov
sub
jl
test
lds
jp
push
jmp
daa
jbe
mov
jae
cmpsl
addr16
mov
sbb
push
push
inc
mull
data16
shll
mov
adc
add
dec
push
inc
cwtl
jo
pop
pop
mov
loopne
push
sarl
inc
jge
sbb
enter
adcl
inc
bound
push
mov
ja
enter
lock
mov
cmpsl
roll
push
lcall
xor
lcall
sbb
sbb
push
lods
sub
mov
sbb
pop
cmpsl
leave
rcrl
or
xchg
imul
lea
sti
std
sub
pop
in
je
subb
rorl
aas
dec
jae
jmp
push
and
cltd
xor
into
adc
jge
inc
rcll
das
adc
and
loop
sbb
stos
dec
divl
xor
out
je
jno
or
adc
cld
or
loope
std
mov
xlat
sub
pop
lea
sbb
add
test
mov
into
in
shl
jmp
stos
pop
inc
cmp
in
push
xor
pop
lds
xor
insb
pop
or
imul
and
mov
sub
jno
jno
lret
nop
jns
out
push
aas
sahf
ds
and
inc
sub
mov
xor
jno
dec
jnp
xlat
xchg
or
inc
test
xchg
or
add
out
mov
cmpsl
outsb
rcl
fcomps
sub
mov
add
adc
dec
lods
adc
mov
push
push
xchg
mov
push
push
jl
dec
lret
or
push
in
jns
aas
aam
repz
dec
mov
in
ja
or
or
sbb
lret
jbe
inc
mov
mov
xor
inc
mov
or
mov
data16
mov
jl
xor
dec
cmp
cwtl
lret
dec
out
jmp
sbb
sbb
inc
dec
sbb
mov
pop
rol
test
xor
cli
js
stos
jo
add
and
add
negl
mov
adc
dec
jle
push
push
mov
sbb
push
pop
inc
and
add
sub
lret
cmp
lret
cmpsb
out
jle
popa
push
mov
cmp
outsl
sbbb
mov
stc
xorb
add
popf
or
push
repz
ret
lock
scas
jns
scas
push
dec
or
pop
sub
push
sub
repnz
xlat
add
lock
pop
inc
inc
or
mov
pushf
sub
mov
sbb
popw
iret
dec
mov
mov
fisttpl
mov
mov
inc
add
push
push
dec
adc
sub
int3
jmp
xacquire
aad
xchg
inc
push
adc
rclb
rcrb
adc
mov
sbb
data16
pop
jl
sbb
mov
jno
cmc
sub
je
aaa
xor
dec
inc
aaa
out
cltd
lcall
cmp
cmp
lods
lods
mov
or
inc
or
xchg
into
jae
push
adc
mov
xchg
lahf
sahf
fisubs
clc
adc
dec
movsb
data16
dec
push
shll
push
cwtl
sbb
addr16
dec
jae
js
ss
js
pop
mov
adc
stos
or
xchg
push
out
out
pusha
mov
jl
dec
outsl
xor
mov
xchg
push
inc
push
ja
dec
movsl
jmp
pop
test
in
pop
clc
out
xor
jl
xor
xchg
aaa
jnp
or
mov
loopne
cmp
sbb
sub
stos
inc
imul
lcall
inc
test
jmp
mov
pop
lods
mov
mov
dec
movsl
push
sbb
scas
pop
mov
cmp
inc
mov
pop
loop
loopne
imul
and
inc
imul
adc
cwtl
mov
out
xchg
adc
xor
xor
cld
cmpsl
or
lods
dec
je
jmp
cmpl
inc
mov
mov
xor
and
sub
loop
dec
test
pushf
ret
cwtl
ja
inc
jle
sbb
jle
dec
dec
inc
movsl
pop
les
test
sbbb
pushf
imul
dec
dec
fs
mov
add
xchg
inc
mov
sbb
xchg
sbb
movsb
xor
fnsave
push
ss
xchg
xor
sahf
pop
inc
jns
rorb
xchg
mov
mov
je
or
mov
mov
jno
mov
je
test
mov
cmp
lds
enter
or
fwait
add
repz
movsb
scas
cld
ja
mov
arpl
push
aad
nop
or
icebp
xchg
mov
cli
and
sub
jecxz
add
pop
sub
lods
fs
jns
gs
and
dec
cmp
push
sub
lret
push
xchg
lock
pop
dec
lock
or
cmp
enter
lock
cli
or
mov
jae
fwait
sub
inc
sbb
addr16
repz
cwtl
loopne
pop
inc
in
lea
pop
dec
das
jae
xchg
pop
mov
loope
cmpsl
sbb
mov
subb
pop
sbb
xor
test
or
fdivs
xchg
enter
cmp
xchg
mov
add
jp
jb
dec
test
imull
mov
add
mov
xchg
psrlw
pusha
mov
out
and
stos
add
mov
adcl
jne
sbb
sub
test
push
ja
movsl
xchg
ja
inc
mov
push
jl
add
loopne
jg
sub
cmp
std
add
lods
mov
fnstcw
mov
leave
cwtl
lahf
adc
fs
push
mov
add
test
pop
js
paddw
sbb
sbb
mov
stos
ljmp
dec
out
out
push
mov
pop
shrb
mov
nop
clc
adc
pop
and
jae
popf
out
rol
rcrl
out
pusha
inc
inc
incb
fs
js
dec
sub
push
out
jbe
je
mov
mov
mov
push
jg
jo
sar
andb
cmpsl
inc
jne
js
aad
imul
xor
mov
jl
mov
and
imul
and
gs
jns
sub
or
or
fildl
xor
insb
and
push
js
int3
lock
adc
fbstp
aam
xchg
xchg
out
ret
mov
mov
outsb
subb
jnp
xchg
lods
fs
je
sbb
ja
data16
nop
into
stc
and
dec
dec
mov
push
jo
sub
lcall
les
and
rorb
jne
lds
cmp
pop
cmp
push
idivl
push
push
addr16
fwait
add
ljmp
sbb
or
mov
mov
sub
dec
sub
inc
jge
xor
push
cs
ja
jl
dec
mov
push
jae
int
lahf
dec
es
cld
adcb
dec
mov
and
pop
mov
cld
xor
es
repz
out
ja
xchg
push
cmpsb
mov
mov
nop
and
inc
dec
test
push
cmpl
add
jge
lcall
push
outsb
hlt
inc
iret
fdivs
pushf
fildll
mov
mov
mov
mov
xor
sbb
xchg
cld
out
adc
pop
out
cmp
stos
pop
rolb
jl
dec
cmpsl
jmp
adc
sbb
xchg
and
bound
aad
in
cmp
enter
rcll
mov
ret
mov
add
addr16
push
dec
pop
mov
jns
jmp
or
xor
mov
mov
mov
sbb
jne
mov
int3
addr16
xchg
mov
or
mov
es
out
fdivrs
into
cwtl
cmp
in
mov
and
in
sbb
mov
aam
pop
sub
xchg
enter
lret
cmpsb
aas
xchg
xchg
xor
mov
jge
pop
aas
xchg
add
stos
mov
mov
add
lcall
pop
aaa
mov
sahf
cmpsl
mov
js
js
sti
fstl
inc
cmpsb
mov
mov
daa
in
xchg
and
movsb
xchg
aaa
cmp
xlat
mov
pop
mov
sbb
inc
lock
xor
mov
mov
aam
fdivrs
repz
and
xchg
or
sti
mov
sti
lret
jle
and
leave
mov
repnz
cmp
mov
subl
iret
mov
test
sbb
insl
mov
cli
add
push
add
xor
arpl
movsb
ficoms
sub
jo
fs
push
mov
jne
jg
pusha
jmp
shld
cwtl
add
and
cmp
mov
stc
lock
mov
sbb
btr
shl
sbb
out
insb
add
loopne
and
cmc
mov
rolb
mov
push
fs
xor
pop
lods
adc
xchg
xor
and
xchg
std
inc
lods
mov
lret
call
jo
or
pop
inc
xor
xchg
add
adc
cmp
or
inc
test
out
pushf
adc
xchg
sahf
push
mov
movsb
xchg
into
adc
jl
fdivs
scas
push
mov
inc
jne
mov
and
gs
jg
mov
idivl
push
std
jb
jno
imul
adc
mov
dec
push
pop
insb
push
push
gs
dec
cmp
or
mov
dec
add
fstpl
jnp
movsb
cmp
mov
and
push
xchg
lds
inc
out
ss
adc
add
std
fs
aas
fmuls
xchg
xchg
mov
std
jbe
mov
jae
in
mov
out
jge
fnsave
mov
rcrb
mov
xor
dec
mov
xor
je
mov
pop
xor
sbb
pop
fisubs
push
mov
hlt
aam
sbb
fmuls
inc
test
add
mov
pusha
mov
rclb
mov
xchg
ret
popf
push
sbb
int3
jns
popa
es
repz
mov
inc
mov
fisttpll
les
shrb
test
pop
xchg
js
lahf
fnstcw
lock
xchg
and
xchg
inc
mov
mov
bound
js
dec
je
pop
and
sti
dec
sbb
xchg
pop
scas
mov
les
ret
lcall
pop
mov
jnp
xor
loope
inc
mov
push
outsl
sub
add
or
mov
mov
mov
xor
repz
addr16
cmpsl
add
jge
nop
sbb
js
out
daa
sbb
add
pop
aad
pop
inc
pop
aas
sub
pop
lods
xorl
sub
mov
sbb
or
jecxz
mov
inc
sub
sub
cs
je
pop
test
sub
xchg
xchg
inc
ljmp
rclb
or
sarl
push
nop
cmp
lds
loopne
arpl
aaa
dec
push
dec
ror
push
enter
jl
rcrb
cmpb
ds
jne
jne
testb
and
mov
cmp
mov
jno
push
xor
pop
test
aaa
cmp
jns
jg
mov
and
mov
mov
js
mov
andl
mov
jnp
or
sub
push
lods
xor
pop
mov
arpl
test
rcll
ret
popf
push
mov
test
jb
mov
and
sub
push
pop
dec
mov
daa
aaa
adc
in
and
xor
dec
shlb
add
int3
iret
lock
add
inc
mov
mov
adc
and
rcrb
push
or
out
mov
mov
pop
es
mov
cmp
xor
sbb
or
jl
push
inc
cmpsb
pop
dec
pop
or
mov
lahf
sub
or
mov
xchg
mov
adc
dec
mov
cltd
push
mov
mov
cmp
mov
dec
push
sub
pusha
push
pushl
jecxz
cmp
jbe
jmp
xorl
and
dec
sub
shl
xchg
push
mov
stc
testb
mov
mov
sti
jg
jp
out
mov
mov
xor
jp
xchg
mov
mov
in
xchg
adc
xor
aas
mov
sbb
adc
movsl
push
mov
push
push
inc
push
sub
sub
jno
fnstsw
aaa
adc
mov
shll
mov
fsubl
repz
cld
jp
loope
notl
inc
aad
lea
movsb
les
cmp
in
inc
mov
pop
jge
roll
data16
sub
xor
test
mov
sbb
outsb
cmp
clc
fistpl
mov
std
sbb
add
jbe
sub
out
bndstx
outsb
jno
adc
ljmp
sbb
sti
aaa
dec
jbe
lahf
inc
mov
pop
ds
mov
in
js
fmul
add
jbe
lret
xchg
mov
std
xchg
push
out
push
fwait
loopne
ja
sub
xchg
pop
inc
mov
jb
call
je
mov
jmp
test
jmp
jp
mov
subb
xchg
popa
shl
mov
mov
mov
cmp
dec
lods
dec
scas
xchg
xchg
jbe
decb
inc
mov
mov
sti
lods
jecxz
in
adc
data16
out
xlat
dec
push
repz
sub
lea
mov
test
insl
add
lahf
pop
cmc
ljmp
shlb
mov
push
push
loope
or
gs
push
push
test
cmp
push
inc
cmp
pop
popa
and
insb
add
xor
jp
cmp
lock
sub
add
sbb
fnstsw
jno,pn
xlat
push
sbb
f2xm1
push
add
mov
xchg
push
test
lods
enter
pop
xchg
jecxz
or
push
roll
shll
adc
cmp
push
pop
pop
mov
outsb
mov
cmp
sub
mov
inc
les
add
mov
es
js
cmp
adc
fwait
jle
fistpl
xchg
dec
jmp
dec
enter
das
pop
loop
popa
fisttpll
jns
xlat
xorb
mov
jns
xlat
jecxz
clc
dec
insl
int
xchg
jl
jne
push
mov
and
xchg
xor
pushf
data16
mov
insb
popf
jno
loop
adc
and
scas
mov
imul
jb
mov
xor
xor
dec
xor
xor
mov
scas
xlat
mov
jle
mov
scas
xor
push
xor
dec
add
pop
adc
cmp
adc
stos
mov
inc
in
inc
imul
mov
inc
dec
adc
mov
adcl
sbb
sbb
inc
pop
sub
outsl
pop
cmp
xchg
out
mov
imul
shrl
dec
or
adc
or
jae
fsubrl
leave
cmp
xor
aad
stos
and
mov
and
insb
adc
push
push
pop
setp
cmp
pop
pop
xchg
arpl
add
and
add
jmp
inc
ja
mov
or
jecxz
dec
mov
xor
cli
je
add
test
sbb
movsl
mov
adc
sub
dec
inc
das
xor
push
or
popa
aad
js
pop
in
insb
outsl
out
jle
adc
adc
movsb
aaa
rcrb
and
test
data16
repz
mov
data16
nop
imul
jl
inc
pushl
pop
xchg
cs
jne
out
or
nop
adc
mov
inc
arpl
pop
xor
das
and
aam
nop
cmp
insb
add
enter
jg
div
lock
adc
idivb
mov
aaa
jns
cmc
and
popf
pop
fwait
xchg
cmpsb
adcl
mov
sbb
mov
mov
ljmp
push
fnstcw
mov
xchg
fdivs
xchg
add
mov
sbbl
jge
lret
lods
lods
dec
xchg
xchg
aam
out
cwtl
pop
movsl
imul
repz
mov
jae
scas
fidivl
lahf
jge
xlat
sbb
xor
popa
stos
push
rorl
out
mov
xchg
jle
outsl
cmpsl
hlt
mov
cmp
divb
sbb
and
fdivs
es
jo
insl
add
inc
pusha
das
rclb
dec
scas
xorl
ss
test
lret
ds
dec
ja
jae
sti
inc
inc
lock
int3
xchg
shrl
movsb
repz
xlat
push
inc
ret
std
in
mov
jecxz
pop
leave
ds
lret
js
hlt
test
outsl
push
test
cld
fsts
inc
jns
loope
cli
and
int
xchg
push
jnp
push
xchg
test
lret
pop
pushf
inc
icebp
mov
pop
frstor
pop
mov
or
adc
movsb
aaa
push
sbb
testl
enter
sbbb
mov
aaa
add
xor
mov
or
insl
fdivl
popf
push
jno
mov
dec
adc
xor
fdivrl
sbb
insl
sbb
int
inc
jne
sub
push
push
inc
jg
dec
iret
xor
jp
pop
push
cld
rol
xor
dec
ja
test
cmp
mov
add
inc
sbb
add
pop
les
pushw
push
jbe
cmpsb
add
push
sub
loope
mov
mov
lods
out
inc
nop
mov
push
out
inc
fildll
movsl
test
xchg
pop
insb
js
jmp
rol
fwait
jp
dec
push
adc
or
adc
mov
stos
aaa
cmp
jns
inc
pop
stc
lea
adc
bound
shll
cld
add
xchg
pop
mov
inc
cmpsb
dec
les
inc
xor
call
and
jle
push
pop
outsl
int
mov
sbb
inc
xor
cmc
add
filds
sar
dec
push
mov
adc
add
jno
xchg
add
repnz
mov
or
lret
aam
sbb
xchg
fildl
adc
and
push
xchg
push
arpl
push
jb
xorb
shrb
gs
pop
dec
pop
ja
ja
jne
or
lods
jno
data16
jge
cwtl
fists
dec
fwait
lods
and
inc
lods
mov
mov
xor
rcrb
popf
dec
xchg
lods
add
sub
inc
test
or
or
lahf
inc
mov
outsl
inc
mov
std
jge
jecxz
shrl
ret
or
xorl
mov
mov
mov
dec
ss
rclb
in
mov
lret
and
push
xor
pusha
mov
std
repnz
gs
cld
mov
jnp
loop
insl
and
daa
jg
test
imul
in
les
jbe
mov
je
or
sbb
xor
out
ja
xchg
mov
mov
out
gs
loopne
jb
push
dec
lds
or
fs
call
adc
cltd
jb
jae
xor
outsb
xchg
xor
jae
lcall
pop
addr16
pushf
jne
jecxz
loope
xor
cli
aad
inc
push
xlat
inc
dec
pushf
fsubrs
inc
repnz
mov
fcomps
pop
adc
adc
push
sub
and
jg
rcll
scas
les
mov
out
pusha
xchg
movsl
mov
std
mov
lds
dec
stos
jg
sbb
sub
lods
mov
jg
xor
xchg
jp
fxch
nop
mov
sub
fs
popf
loop
inc
divl
xor
mov
pop
out
mov
and
fldt
xor
and
hlt
jnp
mov
scas
popa
xor
cmpsl
lods
mov
or
jno
mov
in
ljmp
mov
sbb
das
mov
lcall
cmp
inc
mov
into
out
or
mov
into
push
test
shlb
inc
jge
aad
and
sbb
push
fists
add
mov
mov
mov
jo
pop
jb
rcll
pop
aad
arpl
cmp
hlt
push
outsb
sub
mov
shr
cmpsl
sbb
mov
push
mov
inc
mov
mov
xor
ret
dec
mov
hlt
sub
sub
push
lcall
push
mov
rol
inc
inc
imul
dec
jbe
or
jle
xchg
loop
sub
aam
andb
pop
daa
mov
ffree
push
lods
push
rclb
les
push
movsl
dec
inc
fdivrl
sub
jl
push
push
iret
int
fxch
aas
jo
jno
jne
std
jno
addr16
lahf
add
les
inc
xor
clc
mov
mov
iret
mov
add
lods
add
out
aas
scas
dec
sub
cwtl
xchg
sub
das
aas
imul
and
xchg
pop
cmpsb
movsb
test
mov
in
push
xor
mov
xchg
pop
jno
loopne
add
jge
rcr
pop
sbb
jmp
outsb
adc
mov
push
and
and
shlb
les
xchg
iret
pop
xor
sub
push
fcoms
sahf
hlt
shrl
and
call
sarl
lahf
lcall
pop
cmc
cmp
gs
mov
mov
push
insl
mov
cs
pop
aas
cmp
scas
mov
mov
in
fstl
add
ret
adc
push
test
xlat
fcoms
adc
lea
jp
ds
fbld
jge
repz
mov
rcll
pusha
ljmp
xchg
or
imul
mov
inc
mov
mov
xor
xchg
aam
push
mov
cmp
lcall
movsl
xor
xor
xchg
in
inc
add
mov
inc
outsl
popf
push
xchg
stos
sub
dec
roll
and
sbb
and
pop
or
in
inc
sarb
cmpsl
in
aaa
testb
jno
jl
mov
test
movsb
testb
inc
pusha
dec
iret
xor
jbe
mov
daa
pushl
mov
push
xor
repz
jbe
and
dec
test
jno
push
jo
arpl
gs
pop
or
popf
push
pusha
out
mov
xor
cmp
and
icebp
lds
dec
insl
scas
pop
mov
sbb
push
ret
cs
aas
loope
shll
adc
mull
test
inc
gs
mov
fwait
sahf
repnz
adc
xor
push
insl
mov
faddl
loope
mov
mov
mov
cmpsb
pop
xchg
mov
cmp
lods
test
inc
and
pop
xor
mov
fbld
insb
lods
jbe
mov
inc
xchg
aaa
mov
rclb
add
rorl
xchg
dec
sbb
jl
inc
mov
int3
inc
adc
mov
jmp
fstpl
jle
xchg
mov
imul
int3
jns
adc
fs
jb
iret
sti
push
inc
negb
mov
mov
mov
inc
add
jmp
subl
mov
in
in
dec
dec
xchg
lods
std
pop
sub
mov
popa
dec
dec
mov
das
sub
out
and
das
add
bound
pop
jb
pushf
inc
cmpsl
cmpsb
gs
and
insb
jno
mov
xchg
sbb
push
or
pop
rclb
test
sti
subl
cmp
sbbb
and
mov
shll
push
shll
aas
lods
mov
lods
nop
cmc
pusha
cmp
ficoml
mov
data16
pushf
rolb
and
jge
arpl
jns
mov
mov
xor
fld
cmp
test
cmpsl
out
or
cli
mov
rorb
push
imulb
movsb
mov
pusha
inc
sbb
subl
pusha
push
xchg
ds
mov
mov
je
je
or
mov
stos
jne
xbegin
xor
push
addr16
leave
movsb
divb
xlat
mov
xchg
lahf
fisubrl
out
loopne
fistpll
cld
add
cmp
cmp
je
mov
inc
pusha
enter
mov
ljmp
adc
out
enter
xchg
int3
rep
or
in
or
pop
rorb
lcall
add
xchg
stos
ja
xchg
sub
rclb
pop
or
cmp
adc
fwait
addr16
fstl
or
ror
lcall
fwait
push
outsb
jp
jo
pop
mov
sub
fcomps
into
nopl
push
sbb
outsl
jnp
jle
inc
das
cmpsl
pop
div
push
dec
fsubr
loopne
ret
pop
mov
pop
push
mov
pushf
out
inc
add
out
mov
in
xchg
jle
call
dec
inc
stos
push
in
mov
js
dec
pushf
jne
scas
pop
arpl
and
xor
clc
xchg
jecxz
repnz
pop
fdivrs
sbb
sbb
repnz
sub
xor
xor
out
xlat
mov
pop
or
or
scas
mov
xor
push
out
and
push
jp
and
rolb
xor
cmc
pop
mov
negb
xchg
and
add
ljmp
push
popa
daa
xor
imull
mov
push
pop
imul
mov
lods
mov
dec
sti
fmulp
push
xchg
cli
bnd
mov
inc
push
cmp
ror
xchg
into
ja
popa
sbb
push
jo
shrl
sub
xor
test
jno
push
iret
in
out
xchg
inc
sub
mov
jo
sub
jne
cld
loopne
push
test
sahf
andb
aas
cmp
adcl
mov
mov
pop
mov
imul
leave
xor
push
inc
shll
das
pop
addb
insl
stc
lods
das
ret
xchg
call
xchg
sbb
pop
test
imul
int
xor
mov
shll
inc
cwtl
mov
push
nop
lods
inc
xchg
stc
loopne
lcall
sub
adc
push
int
mov
pop
xor
repnz
mov
cwtl
xchg
popa
pop
les
push
test
popf
popf
adc
and
les
popf
hlt
fcompl
push
insb
dec
push
jb
mov
mov
xchg
dec
rolb
fisubrl
and
sub
iret
int
mov
lods
xchg
js
jne
xlat
fcomip
pop
mov
sahf
scas
fisttpll
xor
nop
mov
fildl
cs
xor
and
dec
loop
mov
mov
mov
repnz
adc
fmull
cmp
popl
pop
aaa
jns
popa
sub
sub
addr16
jp
cmpb
xchg
jle
addl
cmpsl
cmp
dec
sti
outsl
push
dec
aas
dec
stos
das
xchg
outsb
popa
sbb
test
pop
inc
and
popf
pop
mov
test
out
add
test
dec
push
arpl
ret
out
add
aam
rclb
jnp
mov
fcmove
movsb
mov
or
mov
imul
dec
mov
xchg
mov
js
daa
xchg
iret
int3
ret
xchg
add
fwait
lock
lahf
mov
cwtl
mov
fstps
add
xchg
loop
push
cmp
jns
push
rcrl
jmp
pop
daa
xchg
movsl
xor
bound
orl
xchg
pop
decl
hlt
xchg
sbb
mov
shrl
xchg
in
and
jge
adc
leave
int3
xor
stc
xor
fstpt
and
out
xchg
and
mov
insb
loopne
in
add
cmp
nop
sbb
in
add
push
mov
pop
jne
shrl
inc
adc
cmp
push
sub
sbb
xor
sti
jne
sbb
dec
icebp
inc
or
movsl
fiadds
pop
xchg
test
jae
dec
dec
nop
data16
adc
sbb
je
pop
inc
mov
out
adc
dec
movsl
dec
dec
test
pusha
push
scas
ss
lret
idiv
jmp
ss
cmp
mov
mov
insb
mov
sbb
andb
add
mov
lock
jp
push
ss
jae
cmp
in
dec
dec
repz
add
leave
enter
inc
xchg
dec
and
pop
addr16
cmp
push
call
scas
add
lods
fwait
xchg
loopne
data16
iret
popw
mov
fs
mov
movsl
mov
xchg
mov
popf
insl
mov
cmp
inc
jne
jbe
or
orl
xchg
int3
mov
xchg
mov
mov
mov
cmp
sahf
xchg
notl
inc
aam
je
pop
jo
sar
out
or
lock
es
lock
pop
ss
hlt
imul
hlt
loope
ret
data16
mov
mov
mov
fistpll
inc
lds
in
loopne
lahf
or
jl
mov
cmp
mov
sbbb
jecxz
lock
pushf
ret
xchg
mov
inc
cmp
xchg
cmpl
push
out
xchg
ss
dec
mov
je
js
sbb
sbb
jns
cmp
push
adcl
pop
fstpt
lock
sahf
lods
fldcw
dec
cmp
inc
jns
xchg
and
push
ret
in
xchg
loop
mov
in
mov
add
add
add
mov
push
add
pop
into
or
call
jno
lods
push
das
cmp
add
mov
flds
adc
or
bound
daa
and
andb
lods
jmp
jns
fucom
lret
adc
icebp
push
add
inc
in
call
mov
mov
into
inc
jae
ret
or
sbb
ret
mov
cs
addr16
dec
pop
pop
dec
mov
insb
std
stos
jb
les
cmc
lret
enter
jne
and
push
ljmp
fnsave
add
inc
ret
ljmp
or
mov
imul
xor
iret
das
cmpsb
daa
add
mov
js
and
inc
push
adc
mov
pop
fstl
adc
mov
mov
or
aaa
nop
inc
repnz
or
mov
sub
add
leave
je
pop
mov
lret
lcall
dec
loopne
cwtl
dec
stos
out
pop
dec
jle
sbb
cld
add
cli
dec
addr16
inc
mov
dec
lds
jbe
lock
or
movsb
xor
and
out
inc
lods
test
jg
adc
inc
ljmp
dec
mov
or
inc
dec
jae
adc
mov
cmp
or
mov
nop
jecxz
mov
call
mov
enter
pop
inc
gs
sbbl
pop
repnz
nop
notb
and
or
das
push
xor
iret
sbb
scas
push
push
std
jbe
mov
add
cmp
pusha
insl
loopne
pop
and
movsb
lret
xchg
movsl
sbb
sti
or
adc
je
lods
movsb
xchg
gs
inc
int
icebp
cmp
pop
mov
mov
shl
insl
je
xchg
inc
out
mov
int3
rorl
int3
add
sti
or
ficomps
add
mov
loopne
cmp
inc
in
push
xchg
mov
add
pop
inc
cmp
pop
mov
inc
out
movsb
push
ror
insb
mov
test
inc
jnp
das
scas
fs
or
iret
fnstenv
xlat
test
shlb
arpl
mov
mov
push
arpl
add
ds
inc
pop
and
cmp
insb
mov
nop
and
outsl
std
aas
jo
dec
mov
stos
rclb
mov
insb
rorl
xchg
cmp
and
jne
lods
or
lods
or
dec
mov
bound
push
jne
xchg
inc
inc
insl
repz
inc
pop
lock
test
insl
out
add
jmp
clc
xchg
imul
nop
mov
push
cwtl
xchg
or
js
inc
testb
popa
adc
hlt
push
sbb
negb
jp
cmp
dec
daa
pop
pop
les
push
push
out
fadd
mov
addr16
mov
mov
xchg
or
xlat
inc
mov
in
fwait
push
mov
outsb
add
in
mov
call
adc
mov
dec
jl
pop
mov
add
leave
dec
and
fistpl
cmpsl
imul
in
jb
cmp
test
add
jnp
xorb
push
daa
inc
ret
daa
inc
jp
mov
icebp
out
inc
add
mov
mov
pusha
sbb
or
nop
mov
icebp
repz
aaa
jmp
pop
adc
fisubl
xchg
and
in
sti
jp
inc
dec
test
xlat
xchg
push
mov
push
rcrb
cs
pusha
pop
inc
cmp
fidivrs
mov
mov
mov
cmp
mov
sbb
inc
mov
sub
push
jmp
fisubl
xchg
push
dec
rcrb
or
and
push
xor
add
xor
cmp
mov
add
push
out
int
lcall
aas
cmp
push
insl
int3
les
stos
inc
add
xchg
daa
cld
lods
je
stos
cmc
inc
xor
test
lds
loope
jo
addb
jae
xorl
out
mov
pop
outsb
pop
sbb
inc
sbb
and
xchg
shrl
jns
adc
mov
les
bound
mull
rolb
push
fsub
cwtl
dec
out
dec
pusha
mov
lods
lock
scas
mov
inc
inc
jmp
jecxz
loop
cmp
cli
xchg
push
xchg
scas
xchg
add
push
aam
dec
call
cmpsl
inc
mov
push
je
or
cmp
xchg
hlt
scas
popf
sub
jp
icebp
popa
mov
jl
jnp
sti
dec
aam
jno
push
xor
push
pop
jmp
inc
pushf
xchg
mov
in
mov
testb
pop
jae
enter
add
data16
mov
movsl
popf
aas
add
cs
loopne
adc
mov
mov
out
xchg
mov
xchg
movsl
sbb
lods
mov
jns
cwtl
or
or
lods
mov
sbb
out
ja
les
mov
into
hlt
inc
mul
les
ret
std
xor
add
dec
cltd
dec
push
cmp
notb
pusha
mov
dec
repz
jb
fs
fisttpll
js
inc
int3
aas
add
cld
inc
nop
icebp
sbb
mov
orb
notl
in
cmp
out
inc
adcl
lock
dec
mov
inc
xchg
pop
xor
pop
enter
inc
sub
stc
inc
stos
jmp
lea
push
and
xor
inc
mov
fstps
js
jmp
incb
mov
jb
inc
loopne
imul
out
mov
or
dec
or
rol
sahf
sbb
push
bound
mov
xor
mov
loopne
mov
or
lds
dec
jo
sub
xor
movnti
xchg
mov
nopl
pop
dec
cs
cmpsl
popf
inc
popf
mov
mov
aaa
call
pop
rorb
mov
jl
ret
addr16
lock
mov
pop
sub
dec
xor
stc
add
loope
lods
sub
and
orl
pop
cmp
lods
or
out
lret
ljmp
in
shlb
push
mov
push
push
mov
pop
mov
out
stc
dec
pusha
mov
add
add
sbb
pop
jl
outsl
fistps
mov
shr
push
dec
xor
and
out
pop
push
shrb
mov
sub
add
nop
mov
inc
push
test
cmp
push
inc
jg
sbb
jle
dec
lahf
inc
scas
mov
dec
inc
cmp
xor
test
insl
lret
xor
jns
sarl
movsl
xchg
cmp
je
xor
cmpsl
test
xor
aad
shrb
push
repnz
aad
fwait
das
out
push
jno
dec
xor
jno
lds
ficoml
adc
mov
add
mov
mov
call
out
push
je
ds
gs
jns
push
mov
or
push
cmp
std
push
addl
icebp
xchg
cmpl
das
inc
dec
jle
mov
inc
jae
repz
push
xchg
and
xorb
cli
clc
pop
iret
mov
lret
jg
jge
xor
shl
sti
out
aad
jbe
roll
das
pop
push
lds
cmc
jno
and
aaa
idivb
push
sbb
push
lods
and
pop
dec
dec
adc
and
mov
cmp
lods
or
out
stos
icebp
loop
addr16
push
push
cltd
xor
dec
lock
das
fdivp
mov
mov
repz
sbb
xchg
cmp
fsub
dec
jecxz
mov
stos
xor
cmpsb
call
ud2
outsl
cmc
aaa
lock
jnp
rorb
xor
xchg
std
in
mov
repnz
mov
shll
jb
nop
subb
cwtl
icebp
lods
inc
add
push
or
dec
xchg
and
cli
inc
test
movsl
inc
addr16
sub
subl
je
pop
adc
mov
mov
mov
add
jl
xor
aam
repz
push
xor
pop
pop
jbe
cltd
push
and
ljmp
cmp
in
pop
inc
jbe
mov
stc
push
mov
lds
test
loopne
jbe
mov
or
sbb
sub
jne
dec
ret
jo
mov
push
sti
cmp
int
push
sti
loope,pt
ret
lgdtl
mov
mov
loop
sahf
daa
mov
mov
das
mov
scas
push
sbb
mov
mov
repz
xor
out
jbe
mov
pop
jns
add
cmp
rcrl
insb
mov
lret
sbb
jmp
popf
cmp
dec
ja
fstp
pusha
mov
mov
js
clc
loop
push
adcb
dec
jmp
nop
jge
xorl
lock
adc
int3
adc
mov
aaa
cs
xchg
add
jle
fdivs
xor
pop
jno
and
in
add
out
stc
inc
fs
mov
addl
add
pop
sbb
por
pop
xor
push
cmpsl
inc
mov
sbbl
push
int3
inc
mov
pop
xor
xchg
fs
cmp
sub
scas
mov
insb
testl
aaa
pop
add
xor
ret
and
fdivrl
pop
fstps
xchg
mov
repnz
mov
dec
hlt
sbb
loop
inc
sahf
movsb
aam
xchg
icebp
mov
push
mov
js
xchg
jg
dec
fisubs
jle
repnz
pop
scas
cs
pop
mov
push
rcrl
lcall
mov
push
push
dec
pushf
cld
stos
rorl
movsb
es
add
cmpsb
iret
xor
xlat
les
cmp
dec
jnp
sub
imul
les
ljmp
scas
mov
ficompl
push
pop
mov
xchg
xor
into
jo
mov
lods
in
cmpsb
dec
and
dec
mov
fs
dec
shrb
cmpsl
sub
lods
sbb
xor
incl
insl
stos
fbstp
test
rcrl
inc
jb
push
inc
push
inc
sub
shl
push
popf
jae
idivb
pop
xchg
mov
or
xchg
daa
push
push
dec
xchg
sbb
jo
push
fwait
push
push
fyl2x
push
jo
bound
fnclex
sbb
mov
push
inc
inc
mov
add
lret
hlt
cs
in
jnp
mov
stos
pop
aas
hlt
xchg
andb
xorl
mov
cmp
into
xchg
ss
adc
cmpsb
nop
xchg
sbb
sbb
inc
pusha
aad
outsl
loopne
push
sub
sbb
je
xchg
mul
pop
in
bound
pushf
and
jae,pn
mov
std
mov
mov
adc
sahf
cs
imull
and
test
aas
ljmp
jne
aaa
pusha
movsl
or
es
into
dec
in
js
cmp
sbb
sarl
lock
pop
ljmp
cmp
and
push
jne
jg
push
pop
pop
xchg
pushl
xchg
xor
clc
enter
jns
enter
add
aad
mov
mov
adc
dec
mov
fisttps
pop
imulb
repz
push
dec
jne
sub
xchg
repnz
sbb
pop
xor
and
outsl
into
add
push
sbb
jl
fadds
das
mov
pushl
imul
in
daa
inc
cmp
rclb
pop
mov
lea
add
leave
xchg
imul
jb
add
shr
xor
dec
push
das
insl
pop
fcoml
iret
mov
xor
sbb
xor
add
pop
mov
rcrl
je
xchg
sarb
repz
movsb
push
fwait
cmp
icebp
add
fsubs
inc
inc
adc
ds
mov
xor
jne
xor
mov
jl
mov
push
negb
lock
pop
int3
xor
lods
fisubrl
push
ds
xor
lcall
sub
repz
and
cmpsl
adc
push
xchg
push
jl
cwtl
dec
fnstcw
int
pop
mov
sub
inc
imul
push
int3
fnstenv
mov
call
cmpsb
shrl
xor
iret
sbb
inc
in
hlt
add
in
gs
push
testb
out
iret
insb
pop
gs
aas
movsb
sub
inc
sbb
push
mov
push
sbb
cmp
sbb
into
push
mov
cld
sbb
fwait
push
push
rclb
pop
lahf
mov
stos
pop
xlat
jl
fisubrs
gs
fmul
aad
jle
xlat
loop
into
add
in
push
xor
jmp
jne
lea
mov
inc
test
popf
sub
and
pop
ljmp
jg
cmpsl
xchg
in
jmp
sub
fs
stos
data16
inc
rcrl
fbld
js
out
out
sahf
stc
xor
repnz
pusha
outsl
sbb
stos
pop
cmp
shlb
push
clc
push
jle
pusha
mov
or
negb
inc
int3
xchg
xor
cmp
mov
jge
jg
pop
xchg
pop
adcb
out
lahf
lds
in
aam
shl
mov
add
loopne
or
movsb
fbld
shlb
inc
test
push
outsb
push
fwait
cs
adc
gs
stos
fadds
ss
jbe
in
xor
scas
ja
mov
mov
sbb
and
fwait
inc
test
pop
adc
xchg
sbb
push
pop
scas
inc
mov
xchg
les
mov
inc
push
fs
filds
ss
fwait
push
lock
inc
lcall
pop
push
jg
adc
mov
or
movsb
cmc
bound
mov
lcall
ds
xor
mov
dec
fdiv
push
push
adc
sti
xchg
fs
cmpsl
jno
lock
loop
xor
push
sti
fisttpll
push
repz
addb
sub
mov
mov
adc
dec
je
lahf
pop
mov
aam
addb
sbbl
mov
outsl
popa
scas
pop
add
mov
push
faddl
push
out
insb
or
icebp
xchg
cld
aaa
mov
pop
and
scas
inc
push
mov
push
xor
insb
ret
fbstp
sbb
lahf
inc
mov
mov
sbb
out
inc
pop
sbb
popf
es
test
aaa
rcr
sbb
add
mov
lret
push
xchg
adc
jb
push
dec
aas
mov
repnz
add
inc
cmpsl
les
nop
ja
test
cmpsl
test
out
jmp
gs
xchg
fmulp
jo
add
lret
das
jo
add
jnp
adc
xchg
xor
cmp
aaa
fdivrp
adc
xorb
jge
cmp
mov
and
cmp
dec
sbb
push
lcall
andl
jns
mov
loopne
mov
jg
imul
sbb
pop
add
inc
js
addr16
adc
loope
adc
xchg
cmc
cmp
mov
jecxz
iret
and
test
jp
loopne
scas
jae
pop
xchg
cmp
push
mov
cltd
jbe
xchg
xchg
add
ljmp
sbb
out
sub
call
and
hlt
adc
mov
push
cmp
insl
pop
xchg
push
adc
icebp
push
loope
pop
push
cmp
int
xorb
mov
mov
ljmp
hlt
and
mov
sub
sub
imul
xor
imul
call
cwtl
outsl
movsb
adc
lds
mov
loopne
pushf
sub
das
dec
adc
xchg
dec
add
push
fmull
push
sub
int
pop
mov
lds
push
push
daa
clc
cmp
incl
inc
pop
cmpsl
and
lahf
lahf
pop
adc
ficoms
xor
loop
jmp
pop
test
mov
ficompl
push
mov
push
mov
xor
shr
iret
push
inc
inc
sub
nop
out
mov
je
and
aad
inc
cwtl
aaa
xchg
idivl
repnz
imul
scas
pop
jno
gs
stos
xor
pushf
dec
mov
xor
jbe
xchg
outsb
xlat
lcall
sbb
les
sbb
pop
in
ret
daa
jb
push
stos
adc
into
xchg
test
or
lods
testb
pusha
nop
dec
dec
push
int3
negb
jo
pop
andb
cli
sub
addr16
mov
dec
and
sbb
call
push
leave
jmp
repz
movsb
jne
pop
jb
subb
push
rcr
in
xorb
sub
jg
mov
lret
mov
push
sahf
das
imul
les
sahf
rorl
sub
outsl
inc
fdivs
pop
mov
sub
xor
jmp
pop
out
xchg
xchg
in
adc
outsl
inc
xchg
movsb
mov
cmpsl
mov
andb
movl
mov
fwait
fadds
insb
xor
xchg
mov
push
insb
in
shlb
cmp
xchg
lcall
mov
loope
dec
jmp
aam
sub
inc
ljmp
stos
push
andl
outsb
xchg
std
jp
or
and
jl
xor
lods
xor
fldl
dec
aaa
push
out
int3
xor
leave
sub
leave
js,pt
cmp
fiadds
add
inc
test
pop
inc
sti
and
jle
sbb
out
push
or
adc
and
or
add
mov
push
test
mov
push
sahf
dec
test
movsl
mov
in
mov
cli
out
dec
in
jnp
xor
mov
pop
xorb
cmp
mov
in
mov
xchg
gs
cmpsb
cmpb
movsb
cmpsb
jp
push
aaa
cmp
int
add
testl
scas
fcoms
popa
push
sub
out
mov
call
sahf
xchg
adc
cmp
les
mov
xor
dec
mov
cwtl
push
lcall
sub
popf
into
in
sbb
rcrb
fldenv
sub
push
test
or
pop
sbb
imul
jnp
fisttps
and
bound
xchg
iret
lahf
adc
pop
cli
jmp
add
push
mov
mov
movsl
jns
das
shrb
pop
addr16
in
jbe
dec
jle
stos
pop
fdivl
and
cwtl
cmc
insb
mov
dec
adc
push
add
cld
addr16
lcall
addr16
imul
push
push
mov
and
incb
xchg
xor
xlat
aaa
inc
cwtl
xchg
insb
sbb
aaa
jae
and
push
jl
adc
out
mov
xor
mov
dec
mov
jbe
push
movsl
sar
pop
add
xor
xor
mov
shrl
xchg
mov
inc
mov
mov
jmp
and
mov
jae
movsb
push
sti
pop
aaa
xchg
mov
add
adc
xor
push
ret
xor
mull
in
divl
inc
jns
ret
and
pop
aam
imul
push
faddl
jmp
mov
in
divl
test
test
xor
popa
cmp
arpl
xor
jle
adc
insl
fdiv
cmp
nop
cld
enter
and
mov
xor
loope
pop
xchg
or
mov
insb
dec
and
sbb
dec
push
fs
sarb
inc
sbb
repz
mov
mov
out
mov
dec
into
pop
xchg
in
xchg
sub
stos
pusha
jge
mov
mov
jg
call
mov
cmp
mov
out
xorb
dec
out
lds
sbb
adc
xchg
and
mov
ss
fidivs
xchg
pop
mov
pop
push
inc
inc
in
inc
mov
pop
mov
push
movsb
adc
dec
arpl
pushf
popf
pop
adc
dec
addb
jae
les
sub
lea
jg
in
aas
and
scas
xchg
push
cmc
inc
xor
push
mov
xor
cmpsl
xor
addr16
es
mov
daa
data16
add
call
or
pop
fisubs
test
mov
sbb
dec
insl
ret
or
adc
bound
nop
or
fcmovbe
sti
mov
loop
inc
and
jns
sub
lods
add
sbb
cmp
mov
add
pop
in
sbb
adc
xlat
dec
jne
lcall
ficoml
daa
pop
add
xor
icebp
push
inc
fldcw
inc
xchg
icebp
xlat
jns
jp
stc
iret
gs
inc
xor
clc
sub
adc
push
ljmp
popf
push
push
xchg
ds
push
inc
mov
insb
ds
sti
gs
lahf
sub
inc
shlb
jp
pushf
adc
pop
lea
pop
pop
jae
lods
pop
sti
mov
add
pushf
or
inc
add
jo
push
bound
stos
mov
je
inc
loopne
push
cmpsb
shrb
lcall
dec
inc
push
fadd
fs
aaa
dec
xchg
mov
add
mov
test
fistpll
gs
jp
es
push
int
loop
jge,pt
divl
mov
imull
lcall
inc
arpl
roll
inc
xchg
xor
mov
sub
cmp
inc
add
add
mov
mov
into
mov
dec
pushl
lods
lock
ss
xor
sahf
xchg
lock
xchg
inc
loopne
sbbb
bound
mov
push
out
adc
lahf
sbb
mov
lds
sub
jae
call
mov
out
mov
mov
sbbl
push
pop
pop
clc
out
jp
mov
cmpsl
nop
cli
loopne
sti
mov
hlt
push
into
pusha
mov
mov
in
dec
xchg
inc
or
repz
cwtl
pop
in
sbb
cli
inc
and
addb
insb
nop
pop
mov
ret
cmp
cmp
iret
xlat
cli
ja
imul
in
es
dec
cmpl
out
nop
mov
cmp
xchg
sbb
enter
jns
inc
dec
test
in
or
fwait
mov
pop
lds
xchg
dec
aaa
inc
cmpsl
inc
push
cmp
xchg
xor
add
and
pop
dec
aas
add
lahf
add
sbb
xor
in
mov
add
es
mov
jbe
ja
push
xlat
pop
outsb
movsb
push
xchg
pop
les
pop
sub
nop
dec
aaa
add
push
dec
mov
xchg
add
and
insl
cmp
mov
add
cltd
lds
adc
icebp
arpl
xor
call
xor
std
enter
push
pop
push
mov
lret
icebp
mov
inc
outsl
push
pushf
fimuls
mov
movsb
lods
push
adc
pop
xor
push
jg
push
mov
movsb
and
push
iret
xor
or
loopne
xor
idivb
enter
jmp
outsb
inc
xor
mov
cmc
pop
aad
push
arpl
or
aas
push
add
lock
xchg
sbb
mov
cmp
inc
mov
fistl
clc
stos
cmp
and
bnd
jns
lods
push
addb
xchg
cmp
pop
or
cmpsl
fcoms
call
sub
test
loopne
movsb
ljmp
xor
test
dec
movsb
divb
xchg
mov
sub
out
pop
aaa
jg
hlt
icebp
dec
les
mov
and
imul
data16
push
repz
je
loope
fnstcw
inc
std
cmp
enter
lds
mov
mov
lock
xchg
sub
aam
sbb
ret
or
and
cmp
jae
sub
shlb
shlb
push
ror
inc
pop
aas
or
and
mov
das
pop
cmp
and
popf
dec
xor
aam
push
lcall
aaa
call
pop
fmuls
and
cltd
mov
lret
or
pusha
jge
enter
loopne
mov
adc
ja
jg
jnp
jg
mov
inc
subb
push
movsb
lret
or
dec
push
adc
adc
sti
aam
dec
subb
dec
stc
inc
or
mov
adc
dec
int
push
mov
and
mov
popf
xchg
popf
dec
in
push
lea
std
adc
int
pop
sbb
mov
movsl
mov
dec
cmp
cmpsl
mov
adcl
lahf
rclb
pushf
out
pop
and
lods
imul
je
outsl
stc
push
sti
sarl
sbb
dec
fists
inc
das
div
lahf
xchg
mov
ss
lahf
dec
fcomps
sub
mov
pop
data16
mov
int
insb
push
jno
inc
dec
outsb
mov
or
and
outsl
call
into
pop
gs
xor
cmp
xchg
les
sbb
cltd
leave
test
enter
mov
in
dec
fs
repz
ficoml
outsb
popa
lods
ja
xchg
js
sahf
push
bound
orb
int
cmp
cli
and
or
insb
jno
ret
mov
int
jno
dec
out
ljmp
popa
insl
enter
out
sub
cmc
sub
mov
outsb
mov
notl
xchg
lods
test
xchg
hlt
jnp
push
cs
or
in
pop
mov
pop
cmp
mov
aam
push
xchg
lahf
shll
inc
dec
aam
pop
sub
ja
lods
outsb
daa
xchg
mov
aas
sahf
lret
in
inc
or
xlat
out
xchg
jns
sub
push
mov
lock
test
xchg
mov
or
leave
fisubrl
push
xchg
push
arpl
aam
enter
shl
fsts
test
ljmp
daa
jo
mov
mov
sbb
xor
sub
inc
aad
movl
sub
inc
xor
mov
lahf
lret
data16
pop
cs
outsl
xchg
xchg
push
rcrb
inc
inc
test
pop
xchg
mov
xchg
inc
mov
sbb
clc
into
pop
ss
mull
lods
gs
popa
push
push
mov
jae
lods
test
inc
aam
mov
dec
xor
inc
cmp
sub
aas
mov
lods
cwtl
xor
xchg
pop
xchg
or
mov
xor
shrb
in
je
dec
adc
cmp
movsl
aaa
idivb
sub
mov
xchg
mov
sub
loopne
inc
andl
add
outsb
sub
outsb
lock
inc
pushl
inc
inc
addr16
aam
xchg
popa
inc
pop
aam
xchg
inc
inc
mov
sbb
testb
cmp
and
push
in
push
mov
adc
xor
scas
lods
sbbl
push
sbb
mov
push
int3
and
add
fisttpl
xor
addr16
leave
jle
and
inc
icebp
ret
ror
mov
ret
pop
insb
mov
clc
dec
jno
inc
popf
aad
xchg
addl
add
mov
and
inc
addr16
cmp
imul
fs
fdivs
mov
imul
mov
xchg
shrb
or
das
pushf
insb
mov
dec
xchg
adc
fmuls
or
pop
outsb
test
mov
push
xchg
repnz
fildll
dec
jmp
pop
in
insb
jne
mov
pop
push
add
jl
or
sbb
and
sti
mov
insl
mov
fwait
popa
in
lds
mov
mov
mov
dec
adc
mov
or
mov
xchg
add
mov
dec
pushf
fildl
jbe
mov
mov
dec
fdivr
rcrb
in
xorb
movsl
adc
inc
les
fnstenv
adc
aad
jae
dec
movsl
push
mov
jp
add
dec
ret
outsl
mov
adc
xchg
inc
or
sub
das
mov
sbb
jo
fsubl
rorb
movsb
imul
roll
mov
popa
adc
imulb
sbb
loope
ficomps
insl
sbb
pushf
sub
jae
jae
jo
lods
mov
cmpsl
adc
fcmovnbe
lret
pusha
xlat
ss
pop
mov
xbegin
jbe
and
icebp
pop
mov
inc
out
dec
cmp
add
xor
lret
add
jmp
fidivrs
jne
call
ljmp
daa
sub
inc
insl
das
jo
dec
jp
push
push
push
aaa
addr16
rcrl
scas
push
outsl
jmp
push
dec
aaa
sub
js
aam
sbb
mov
xchg
rcrb
jno
push
enter
xchg
loop
mov
xchg
fwait
pop
iret
ljmp
sub
push
xchg
leave
xor
ret
das
aas
pop
add
sub
lods
outsl
bswap
jl
and
mul
or
imull
lea
fistpll
in
test
fs
cmp
xorb
mov
xchg
ja
orl
xor
add
icebp
test
add
repnz
gs
movsb
adc
loope
mov
sbb
cltd
scas
jl
mov
or
pusha
sbb
shll
leave
stos
aas
bound
pop
pop
loopne
xchg
dec
dec
mov
jg
adc
sub
enter
sub
shll
jo
pop
cwtl
push
jmp
in
stos
fistpl
jecxz
push
jo
movsb
das
adc
imul
add
mov
push
sub
or
sbb
mov
and
mov
insl
mov
jo
je
dec
inc
test
addr16
in
mov
inc
inc
pusha
cmp
pop
in
cmpsl
rcrl
shlb
mov
jl
pop
jno
jmp
scas
push
movsl
sbb
movsb
xor
or
dec
mov
mov
lcall
push
or
dec
lret
xor
mov
jne
xchg
sub
mov
adc
fisttpl
shlb
mov
ss
dec
insl
mov
fisubrl
cmc
enter
outsb
jg
inc
pop
sub
mov
sub
xchg
mov
fsts
call
sahf
mov
xor
and
out
mov
xchg
lock
mov
xlat
insl
mov
xchg
push
jo
mov
dec
int3
sub
push
xchg
cmp
in
mov
cmpsb
adc
pushf
pop
jl
and
dec
xor
aas
dec
adc
xchg
xchg
out
lea
jg
movsb
xor
rcll
cwtl
call
sub
out
xor
cmp
push
add
lods
xchg
ret
mov
rorl
rolb
or
ret
push
mov
jmp
push
pop
xchg
into
xlat
loope
mov
pop
cld
insb
int
mov
in
sbb
scas
aad
outsb
push
mov
clc
or
fiaddl
sub
mov
xchg
adc
push
out
loopne
enter
std
push
pop
mov
pop
xchg
inc
outsl
ds
std
jge
hlt
or
add
xor
inc
xor
inc
mov
pushf
dec
stos
push
mov
imul
pop
mov
sub
rcrl
repnz
xchg
cmc
test
bound
add
loop
inc
mov
popf
push
jnp
cmpsl
sbb
xchg
stos
push
lret
dec
sub
stos
mov
std
sub
ret
xor
outsl
mov
jmp
data16
xor
aad
and
and
jmp
outsl
xchg
and
hlt
lcall
xor
stos
xchg
mov
ror
insl
dec
into
std
jg
ficoml
pop
xchg
push
cmp
pop
mov
cmp
test
pusha
pop
push
mov
jne
rorl
stc
sub
sbb
pop
adc
cmc
pop
sbb
xchg
jg
add
clc
cltd
jno
xchg
push
xlat
xlat
and
jae
scas
faddp
fcomps
sub
cmpsl
rcrb
jecxz
sbb
sti
js
pop
push
mov
jge
lock
adc
pop
leave
push
mov
adc
push
jns
mov
push
xor
adc
push
dec
addr16
or
sbb
roll
insl
push
pop
lds
psllq
push
add
mov
sub
test
nop
jb
and
pop
mov
pop
lods
daa
aam
subb
call
push
aad
pop
xor
mov
popa
out
push
push
mov
inc
xor
pop
popf
or
lret
xchg
cwtl
sub
cs
mov
stc
shlb
sub
sub
and
scas
inc
jle
frstor
cwtl
sub
jl,pt
movsb
lcall
pop
cmp
fyl2x
jle
pop
js
ficomps
adc
jo
cs
scas
fstpl
lods
iret
lods
xchg
dec
xchg
cmp
data16
sbbl
ja
mov
cs
cmpsb
ljmp
xor
jne
insb
dec
xor
sub
push
jne
ljmp
adc
int
dec
bnd
and
popf
xor
cmp
loopne
mov
jns
jnp
mov
sahf
rcr
and
xlat
adc
lods
mov
aas
js
scas
enter
movsb
mov
xchg
or
xchg
dec
jae
cltd
mov
int3
lcall
adc
push
lahf
fsub
lret
jg
add
pop
pop
fs
int
xlat
shll
in
or
pop
pop
sub
filds
xor
sub
fcompl
add
xchg
out
aaa
mov
sti
mov
jle
fdivrs
jnp
sub
dec
xor
lds
jle
cld
pusha
sub
inc
mov
add
xchg
push
push
adc
ja
jg
xchg
push
mov
call
jmp
out
dec
jp
lahf
add
shrb
insb
pushf
jg
xor
cmp
aam
inc
les
cmp
push
cltd
loopne
dec
dec
sbb
push
into
mov
adc
in
jno
repnz
cld
ja
stc
xchg
pop
addr16
add
ret
stc
pop
sbb
insl
mov
mov
in
xchg
jno
mov
repnz
mov
pop
clc
andb
gs
inc
aas
pusha
xor
dec
std
in
adc
mov
sahf
mov
iret
lahf
sti
les
xchg
xchg
cld
mov
addb
int3
sbb
mov
or
push
inc
mov
faddp
mov
mov
stos
add
mov
push
push
push
ret
xchg
dec
or
mov
and
xchg
push
pop
aad
lds
dec
fistl
mov
movsb
sbb
cwtl
pop
pop
jo
sub
jg
fstl
mov
push
adc
pop
mov
nop
jo
popf
jns
cmp
xchg
repnz
and
xchg
lea
ljmp
mov
fldt
std
xor
adc
add
sti
fisttpll
pop
fldenv
and
mov
ret
lds
leave
loopne
push
arpl
push
xchg
scas
xchg
and
and
aad
outsb
jmp
ret
ljmp
rorl
insb
sub
aas
nop
pop
cmc
pushf
or
cmc
mov
into
lea
sub
divb
orb
lahf
cmp
ret
ret
movsb
cmp
lods
mov
inc
xor
inc
inc
gs
daa
push
icebp
rclb
pop
xchg
mov
mov
hlt
mov
jg
rorl
xchg
push
insb
xchg
in
fs
not
movl
stos
inc
dec
pop
push
xor
xor
fiadds
div
sub
mov
or
push
inc
pop
mov
cwtl
lcall
sub
push
add
xchg
shlb
or
jno
fisubrs
pop
notb
inc
mov
imull
in
ljmp
test
into
lock
pusha
test
lock
and
inc
ja
dec
xor
fs
cmpsl
in
pusha
icebp
push
mov
add
fdiv
cmc
adc
push
inc
add
xlat
mov
in
inc
loope
gs
dec
dec
les
sti
inc
fsubrp
mov
fistpl
jbe
pop
fsubr
mov
mov
xor
mov
in
xor
pop
jb
mov
mov
aaa
addr16
xchg
dec
aaa
mov
cs
fs
lea
fdivrs
xor
mov
fiadds
ja
sbb
repz
pop
lds
insl
das
movsb
fstp
mov
fwait
mov
xlat
rcrl
je
jne
mov
fistps
sbb
or
sub
xor
xchg
lret
in
adc
in
cwtl
jmp
es
popf
out
mov
jbe
jge
sub
sar
in
or
cmp
push
lea
ret
mov
pusha
enter
xchg
mov
cmp
sub
das
ja
test
cli
lret
push
mov
sub
jl
cmpsl
aaa
mov
inc
and
repz
jg
dec
xchg
push
push
inc
jno
outsb
push
orps
dec
adc
cwtl
ljmp
cmp
sub
jg
insl
in
mov
add
push
mov
xchg
movsb
mov
add
pop
mov
dec
lahf
aam
push
mov
insb
jle
test
lret
jl
and
fisubrs
fs
gs
dec
add
rcrb
test
xchg
mov
popf
xor
mov
out
push
ret
add
jno
mov
loop
nop
adc
les
push
inc
push
xchg
lahf
fwait
lret
sbb
loop
add
push
dec
fists
mov
xor
mov
fs
mov
rorl
ja
les
sbb
addr16
xchg
pushf
pop
aam
test
add
sub
push
subb
mov
sbbb
add
sbb
cmc
pusha
add
inc
enter
sub
dec
sbb
xor
inc
aaa
push
jno
push
and
adc
inc
aaa
add
test
pop
pop
btc
enter
xchg
dec
dec
fwait
jno
sbb
ljmp
pusha
mov
add
sub
xor
aam
sbb
stos
adc
test
les
xor
aad
sbb
adc
adc
push
rcrb
push
cmp
mul
gs
fldt
faddl
and
out
mov
jno
and
xchg
push
leave
sbb
pushf
cmpsb
adc
xchg
aaa
mov
inc
cmp
lods
xchg
dec
lods
inc
push
mov
mull
and
rclb
sbb
fcompl
jle
repz
dec
ja
fs
cmpsl
add
push
adc
enter
cmp
je
xor
cmp
or
add
or
adc
test
sbb
gs
mov
jne
dec
xchg
adc
inc
loope
jae
lock
adc
pop
push
mov
xchg
and
mov
adc
addr16
inc
addr16
in
lcall
lea
and
mov
test
xchg
pop
dec
mov
aas
es
xor
and
rorb
jmp
scas
loop
xlat
test
jp
xchg
std
dec
push
into
test
dec
cmpsb
js
notl
mov
cwtl
leave
lods
push
push
dec
adc
mov
push
mov
test
dec
sbb
cmp
add
push
imul
aaa
cmp
xor
and
push
dec
lret
xchg
mov
xchg
loope
mov
push
or
pop
test
shll
cmp
sti
add
jbe
push
shlb
xlat
fimuls
jae
addr16
jns
mov
jecxz
jbe
mov
push
mov
pop
and
cmp
xlat
xchg
mov
outsb
aam
pop
mov
mov
lret
mov
xlat
push
push
jge
xor
out
aaa
add
dec
and
lods
mov
lods
pop
mov
jnp
bnd
test
cmp
les
xchg
dec
sbb
movsb
mov
dec
cmp
add
jno
icebp
and
pusha
adc
out
out
out
mov
mov
out
xchg
push
and
insb
mov
sbb
or
and
adc
movsl
and
fbstp
fwait
inc
cwtl
aad
iret
push
popa
in
jne
mov
insb
ret
cmp
sub
mov
cwtl
cmp
addr16
adc
mov
cmp
loopne
jmp
lahf
mov
ja
fldt
scas
mov
stc
call
daa
fwait
out
lods
cmpsb
mov
mov
testl
push
inc
jg
mov
subb
lcall
mov
pop
inc
dec
loopne
adc
sbb
lret
mov
hlt
daa
push
fisttps
cmpsb
fstp
insb
and
cmp
sahf
lahf
or
scas
movsb
pop
pop
mov
sbb
adc
sbb
out
adc
and
push
subb
pop
sub
shl
dec
or
cmp
mov
shlb
adc
xchg
xor
popa
jb
xchg
mov
fstpl
mov
xchg
add
sub
pop
xor
pop
lods
das
jl
sub
mov
dec
jmp
xchg
adc
movsb
out
push
adcb
int
xor
pop
das
out
pushf
jl
repnz
mov
sbb
test
xlat
bound
stos
mov
sub
cmp
call
inc
out
xor
mov
mov
push
pop
sti
xor
fistps
int3
add
mov
je
xchg
sub
scas
repnz
sub
inc
rcr
xchg
push
testb
sub
mov
xor
mov
push
sbb
mov
dec
cli
int
adc
pusha
test
jno
xor
xchg
or
jmp
in
int
lds
insl
adc
aam
hlt
loopne
repz
les
jl
push
roll
std
cmp
fnstsw
ss
cltd
dec
stos
cmp
sub
or
jb
mov
jne
xor
lcall
and
das
call
pop
jns
mov
xchg
mov
pusha
fs
mov
pop
jmp
add
jns
add
fildl
es
push
imul
push
adc
pop
mov
push
out
mov
test
incl
inc
xchg
fstpt
pop
mov
mov
xchg
sbb
pop
pop
mov
or
je
sub
shl
and
push
sbb
push
repz
mov
pop
dec
sub
sbbb
xchg
fs
jno
scas
pusha
xchg
mov
xchg
fdivrl
sub
jp
das
and
lods
stos
dec
rcll
es
mov
pop
cmp
jle
adc
mov
or
and
inc
jo
pop
mov
sbb
cmpb
hlt
je
mov
xchg
bound
xchg
inc
test
test
mov
mov
ja
lret
in
jns
out
sbb
mov
imulb
sub
neg
push
and
push
js
mov
loope
cmp
adc
mov
cltd
cltd
jns
fstpl
cwtl
stos
xchg
xor
mov
sbb
mov
jecxz
push
out
aad
call
test
jns
xchg
mov
test
icebp
pusha
cmpsl
jne
or
pop
stos
rcll
inc
ds
mov
mov
inc
int
mov
mov
mov
scas
jae
ljmp
subb
movsb
push
test
cwtl
std
call
gs
push
in
icebp
xor
inc
push
shll
jg
bound
adc
sbb
jo
push
rcr
adc
inc
inc
movsb
aam
pop
lcall
fwait
dec
aad
or
pusha
inc
mov
xchg
mov
scas
out
or
aas
mov
jb
subl
pushf
cmp
outsb
or
repz
insb
aaa
pushf
xchg
xlat
xchg
sbb
or
push
jne
mov
pop
inc
dec
jae
push
loop
divb
icebp
sub
js
and
ss
in
sub
in
orl
movsb
pop
shlb
pop
xor
adc
xor
lods
outsb
cmc
mov
mov
cmpsb
lock
pop
lcall
int3
xchg
and
mov
into
movsb
repnz
divb
pop
jmp
idivb
push
mov
sub
inc
or
fdivl
and
and
aaa
inc
sahf
test
lret
sub
mov
sub
add
sub
cmpl
xor
movb
jecxz
jecxz
push
test
push
and
dec
ret
cmpsb
or
inc
aam
and
movsb
popf
and
or
sub
dec
hlt
pop
mov
or
sbb
jle
movsb
movb
inc
mov
test
test
jb
xor
fidivrl
sub
cs
leave
in
pop
andl
sbb
hlt
mov
imul
pop
leave
mov
mov
dec
inc
repz
cmp
cltd
xchg
pop
sub
jo
sbb
sbb
pop
push
xchg
adc
jmp
scas
inc
adc
repz
std
sbb
sbb
xor
sbb
aas
subl
aam
cmp
pop
out
mov
fidivl
mov
inc
jno
shlb
pop
mov
out
xchg
nop
loopne
sti
imul
jg
lret
ds
lahf
dec
rcrl
cs
push
xchg
mov
sub
and
mov
jns
pop
push
mov
adc
fcoms
cmpsl
mov
mov
and
mov
test
mov
push
sub
adc
mov
icebp
xor
pop
in
movsb
push
sbb
pop
xchg
sub
xor
bound
jl
dec
popa
mov
and
bound
popa
lods
sub
push
push
push
mov
xor
sub
and
push
aad
add
aaa
test
dec
sbb
add
mov
mov
xchg
cmp
xchg
xor
ja
fistps
loope
pop
xchg
push
push
pop
sbb
jns
shlb
data16
cs
and
push
addl
fwait
add
iret
xor
push
out
movsl
mov
mov
aaa
out
or
lret
push
sbb
mov
jle
mov
rol
addl
js
pushf
cs
push
rol
lds
imul
stc
clc
mov
mov
and
repz
mov
pop
iret
or
addr16
sbb
xchg
or
sbbl
stc
sbb
xchg
jns
mov
outsl
imul
fs
clc
fs
jecxz
push
push
in
inc
and
out
lret
mov
rclb
cmpsl
test
imul
mov
mov
mov
mov
dec
dec
pop
fstps
xlat
inc
lret
mov
std
inc
insl
add
push
cwtl
or
sub
xchg
int
out
xor
adc
jo
xchg
cld
es
and
or
pop
inc
mov
enter
test
in
adc
inc
mov
subb
dec
mov
and
jae
adc
loope
mov
movsl
hlt
push
lock
mov
ja
lods
inc
dec
movsl
cmp
lahf
fsub
int
into
loope
pusha
ss
xor
loope
and
adc
mov
es
mov
inc
jecxz
mov
pop
cmpsb
or
push
dec
lcall
nop
daa
fsubs
push
mov
pop
test
ret
pop
inc
mov
out
or
xchg
push
bound
and
into
cmpsb
inc
xchg
call
jnp
inc
jmp
sarb
fnstcw
mov
push
stc
notl
insb
mov
pusha
ljmp
jno
xor
push
in
das
lret
and
pop
xchg
cltd
movsl
mov
popf
jnp
stos
dec
lcall
xor
fsubl
scas
dec
adc
push
loope
loop
gs
int
faddl
adc
mov
push
mov
lret
inc
push
jno
in
sarl
pop
dec
outsl
es
and
pop
xchg
lea
add
cmpsb
cmpsl
sub
loopne
bound
xor
mov
mov
sub
rorb
xor
xchg
mov
pushf
ja
mov
xchg
out
fdiv
xchg
notl
xchg
addl
add
push
out
icebp
loop
or
das
fwait
jno
push
mov
jmp
call
das
mov
lea
cltd
xchg
leave
xchg
pop
negl
push
scas
pusha
inc
loope
rcl
sahf
dec
cld
xchg
out
int
or
and
shl
clc
lock
xchg
push
fs
cmpsl
xor
out
sbb
sub
mov
sub
jns
xchg
hlt
xor
cltd
sti
enter
in
add
in
pop
pop
test
dec
push
mov
sbb
gs
or
push
repnz
das
pop
pop
and
fdivs
leave
jmp
xorb
repnz
data16
dec
jge
cmp
in
and
test
mov
shrl
pop
cmc
jle
and
inc
xor
pop
inc
cmp
push
bswap
dec
iret
and
mov
test
add
jmp
dec
cmpsl
std
jnp
pop
and
and
pusha
cmp
dec
adcb
lahf
cmpsb
mov
mov
push
fstps
inc
xchg
sbb
jge
in
in
inc
in
add
daa
push
mov
jns
sbb
jecxz
xor
push
push
mov
cltd
push
daa
mov
pushf
inc
cmp
stc
popf
sub
xchg
inc
mov
mov
stos
loope
sbb
xor
pop
adc
mov
ret
cltd
into
pop
rcrl
clc
fwait
cmp
ljmp
fidivrs
mov
dec
dec
jno
mov
and
mov
fcompl
and
xchg
mov
push
icebp
pop
inc
mov
dec
rcrl
push
sbb
pop
jno
insl
inc
cmp
insb
pop
xorb
mov
jmp
push
leave
jmp
cmc
push
movsl
repnz
push
and
mov
mov
movsb
inc
sub
daa
jl
xor
cmp
mov
mov
fsubl
jge
pop
pop
mov
pop
scas
negl
push
fbstp
popa
and
dec
cmpsl
imul
pop
out
cwtl
mov
mov
icebp
cwtl
dec
sbb
jmp
das
cs
cmp
push
pop
imul
stc
push
adc
cmp
add
insl
sub
std
or
addb
sbb
mov
jns
out
sarl
jno
mov
mov
xchg
mov
inc
sub
aaa
fildll
or
leave
and
out
stos
mov
add
repnz
push
cs
ss
pusha
in
xchg
ljmp
mov
pop
mov
inc
stos
les
inc
test
xor
xlat
les
jo
andl
xor
mov
jg
mov
stos
mov
fbld
repnz
addr16
sub
jecxz
subl
cmp
loopne
arpl
out
or
jg
push
call
xchg
cmp
pop
addr16
and
mov
sub
fs
adc
or
out
lret
cld
xor
cmpsl
fcompl
into
or
out
mov
sub
pop
mov
pop
arpl
add
xor
xchg
lret
fmull
cmpb
cmp
bound
pop
pop
fwait
mov
or
inc
push
pop
jae
inc
test
adc
out
hlt
and
not
or
clc
inc
xor
gs
pop
stc
push
outsl
or
fildl
loopne
insb
scas
jp
mov
dec
push
into
mov
inc
xchg
adc
mull
sbb
sbb
xchg
dec
dec
addr16
adc
cmp
rorb
repz
sbb
push
test
xor
leave
int3
push
iret
inc
movsl
mov
shlb
mov
dec
pop
ljmp
xor
inc
jp
mov
xor
xor
dec
pop
inc
and
pop
leave
cmp
inc
test
sbb
adc
mov
xchg
dec
sub
out
inc
cmp
clc
call
pop
pop
ret
js
stos
jb
or
outsb
add
ror
sub
dec
loopne
or
xchg
cmp
mov
pop
add
in
jnp
loope
and
jmp
sbb
adc
cmp
xchg
push
lcall
sbb
xor
xchg
jle
mov
push
pop
pushf
mov
xchg
dec
mov
adc
add
hlt
pusha
pop
xchg
pushf
push
pushf
inc
mov
pop
fsubrs
mov
and
pop
pop
sarb
popa
push
adc
stc
std
test
sar
push
and
rclb
lock
pop
popf
fs
fldcw
mov
add
push
adc
ja
fmuls
pop
scas
into
xor
les
inc
leave
imul
test
and
push
dec
xor
testb
push
jb
adc
pushf
adcb
ja
dec
aam
aam
xchg
push
and
jne
out
xor
jl
repz
ret
pop
xchg
mov
xchg
sbb
xor
jbe
repnz
imul
cmc
jl
push
shll
cwtl
jo
mov
cmpsb
xor
inc
pusha
ljmp
fisttpl
movsb
pop
add
dec
repnz
inc
pushl
orb
push
push
imul
sub
cmp
int3
mov
mov
popa
aad
xchg
mov
sbb
jecxz
subl
sbb
pop
xor
jg,pt
mov
mov
jno
mov
in
jne
sub
cmpsb
test
je
mov
in
jb
xchg
mov
xchg
and
mul
inc
pop
in
ds
insl
dec
push
xchg
mov
leave
scas
and
push
and
outsb
jle
inc
jecxz
lret
adc
inc
jmp
fldenv
lret
mov
pushf
inc
push
iret
adc
mov
cmpsb
insl
xchg
push
sbb
fisubrs
push
stos
sub
inc
lcall
lock
xchg
push
jecxz
dec
dec
shr
pusha
js
test
in
and
movsb
gs
pop
daa
pop
addr16
mov
xor
imul
cmp
stos
sbb
push
call
jno
sbb
pusha
bound
jns
mov
inc
sbb
dec
xchg
jmp
dec
xor
mov
hlt
ja
jo
jne
adc
xlat
aaa
jne
imul
push
jg
les
sbb
imul
cmp
inc
enter
lock
pop
fildll
cmp
lret
lret
push
leave
iret
in
mov
fs
flds
in
inc
mov
enter
xchg
and
xor
xlat
and
movb
jg
aad
push
dec
jle
lods
jae
add
pop
aad
jl
mov
pushf
insl
ja
inc
ja
mov
dec
outsb
enter
xchg
lods
push
cmp
sub
jae
mov
sub
mov
insb
lock
movsb
push
js
jle
lock
aas
fnsave
andb
jb
int
das
data16
and
or
lods
ljmp
dec
int
xor
sti
push
dec
mov
aaa
add
add
insb
loope
jbe
lcall
lds
adc
xchg
mov
xchg
adc
or
lds
dec
stc
add
adc
inc
push
mov
or
cmc
neg
pop
xor
sub
clc
cs
or
mov
xor
movsl
ret
mov
fnstsw
clc
inc
es
mov
sub
fdivl
out
mov
mov
jge
std
cmpsl
mov
xor
push
cwtl
pop
lds
insl
in
push
imul
pushf
je
sub
int3
cmp
adc
imul
lret
jl
std
cmpsb
inc
in
xor
push
or
aas
mov
xor
jmp
cmp
out
sub
adc
imul
dec
xor
in
dec
or
fdivl
repnz
xchg
mov
dec
repnz
sub
jae
xchg
js
int
jno
mov
mov
sbb
lcall
and
jbe
jecxz
fsubrs
inc
xchg
or
pop
adc
lods
push
popf
out
cld
dec
je
jno
dec
jge
mov
insb
fisttpl
stos
das
leave
cmp
push
arpl
aad
andb
fwait
idivb
mov
incb
movsb
decl
icebp
sar
mov
fdiv
pop
add
shl
push
fwait
dec
inc
jne
ss
out
adc
lret
adc
adc
jo
mov
jo
mov
mov
xchg
xorl
push
repnz
jmp
xor
mov
ret
lahf
out
jnp
cmpl
aad
mov
shll
mov
push
cmpsb
in
mov
xor
lret
xor
and
insb
iret
pop
dec
pop
jmp
pop
and
mov
fwait
xchg
pop
inc
pop
jbe
popf
ficoml
out
out
std
mov
lock
jle
iret
out
mov
jmp
je
xor
sub
jp
or
pop
cwtl
sub
push
inc
rcr
je
and
ret
cli
push
andl
xorl
subl
xor
inc
and
add
rolb
cs
pop
into
add
mov
push
inc
lret
insl
add
sbb
in
pop
addr16
imul
test
or
lret
ja
cmpsl
mov
arpl
js
and
pop
inc
cli
subb
insb
jbe
sub
mov
stos
cmp
xlat
mov
fbstp
rclb
dec
dec
mov
hlt
outsl
in
jmp
push
mov
addr16
mov
and
stos
cmpsl
movsl
ror
arpl
jo
pop
mov
push
imul
sub
or
je
je
mov
and
jns
mov
push
xor
into
movsb
xor
or
adc
xchg
sahf
mov
push
cmpsl
das
inc
push
cmpsl
sar
or
fnsave
push
xor
xor
add
insb
outsl
pop
push
add
shrl
sub
hlt
add
shll
jle
dec
xchg
cmp
sub
js
xchg
cmp
lods
and
jle
sub
jae
insb
adc
sub
inc
xchg
inc
mov
xchg
lcall
aas
insl
dec
lds
mov
test
movsl
adc
sbb
cmc
jmp
sbb
add
pop
movsl
xchg
lret
mov
xchg
pop
sub
inc
das
mulb
insl
insb
ss
mov
insl
sub
jge
adc
repz
sti
adc
imul
push
xchg
mov
sahf
cmpsb
scas
push
fwait
jl
adc
call
lods
bound
inc
adc
out
fistps
adc
pop
mov
mov
xor
xlat
or
mov
mov
int3
mov
pop
in
icebp
jnp
aas
testl
sub
ja
inc
xor
rol
sbb
mov
out
add
es
and
pop
sub
or
int
mov
xor
jb
dec
cmp
xor
sub
dec
fs
hlt
stc
lods
sbb
add
mov
mov
leave
or
lcall
out
pushf
psraw
ret
mov
sbb
jns
movsb
leave
jo
push
add
ss
cltd
cmp
pushf
jne
mov
stos
cs
pop
xor
xor
inc
mov
pop
cmpsb
fs
sub
test
test
mov
inc
cld
cwtl
pop
mov
aas
cmp
mov
adc
arpl
push
negb
dec
daa
add
ds
push
jecxz
adc
or
aad
ss
lods
and
out
ss
xor
repz
popa
mov
add
mov
fsts
repnz
dec
shrb
inc
mov
mov
pop
push
sub
or
sub
outsl
fsubs
fadd
arpl
or
xor
xor
test
je
out
pop
mov
outsb
cmp
pop
inc
sub
cmp
inc
aam
rolb
push
movsl
aas
fdivr
mov
nop
mov
push
idiv
lods
cmp
je
push
pop
cmp
scas
mov
adc
pushf
xor
push
jns
pop
cltd
mov
ret
mov
pop
pushf
push
and
imul
popa
dec
xchg
add
push
jg
les
out
and
mov
jbe
xchg
test
mov
jge
mov
fcompl
cmp
loop
mov
iret
lcall
aad
sub
mov
pop
xor
and
push
inc
mov
inc
arpl
xchg
adc
jge
push
xchg
xchg
rorb
adc
mov
test
jecxz
jbe
lods
cmpl
push
or
test
aad
xchg
add
push
sbb
inc
clc
movsl
mov
push
mov
dec
jle
push
aad
lcall
movsb
fsubrs
cmp
rorl
and
sub
or
cmp
in
negb
mov
es
push
mov
imul
cmpsl
jg
enter
adc
add
pop
repz
ret
lea
jb
and
pop
mov
pusha
or
xor
xor
fcoml
add
xchg
clc
cmp
sub
inc
xchg
ret
lahf
push
xor
dec
ds
insl
inc
mov
lahf
lahf
add
cmp
dec
sub
push
lret
sarb
jmp
xchg
add
repnz
push
pop
xchg
fmull
jns
ja
test
mov
jae
dec
sub
mov
xchg
push
push
push
in
arpl
mov
in
cmc
shlb
and
push
inc
aad
rcll
enter
adc
cmc
loopne
xor
add
jl,pn
mov
xchg
jge
dec
or
cltd
pop
repz
arpl
inc
add
movsl
ret
jne
mov
inc
pop
inc
sbb
mov
ret
rorb
je
adc
adc
add
mov
std
stos
mov
stos
shrb
ret
mov
dec
mov
sbb
xor
push
cmp
fbld
push
lret
xorb
movsl
inc
loop
pop
aad
in
pop
pop
or
mov
jae
jg
mov
rcr
in
nop
xor
jbe
sub
pop
and
push
xor
push
dec
mov
mov
out
xchg
add
lods
outsl
lock
lods
inc
enter
sub
pop
sti
xchg
movsl
sbb
in
sub
xchg
inc
xchg
shll
jbe
mov
nop
adcb
jb
inc
insl
incb
pushf
cmp
adc
sbbb
mov
xlat
dec
adc
mov
in
mov
pop
orl
dec
cmp
mov
sub
xor
xchg
int3
insl
sub
dec
hlt
sub
cmpsb
mov
push
jne,pn
arpl
sub
mov
mov
addps
jne
mov
faddl
lcall
mov
push
xchg
pop
stc
pop
lods
imul
jmp
dec
fidivrs
repnz
sub
cmp
hlt
into
lea
lret
mov
data16
aas
lods
ja
fsubrs
or
cmovs
sub
adc
push
mov
data16
jg
dec
mov
cwtl
jp
jle
push
push
push
mov
mov
pushfw
pop
jbe
das
push
fsubl
das
sbb
mov
sbb
addr16
push
test
xlat
add
pusha
jmp
inc
or
dec
or
test
stc
inc
pop
inc
outsb
mov
leave
dec
xchg
pop
inc
rorb
adc
dec
sbb
inc
movsl
aam
jnp
mov
dec
lods
aad
jp
jg
sub
leave
pop
xchg
cmp
cmpsl
xor
sub
outsl
sbb
add
out
pop
dec
cltd
push
addr16
pop
and
xchg
sub
jl
xlat
xor
lods
cmp
in
cmp
dec
in
cmp
mov
sbb
negb
fbld
es
and
test
cmp
data16
pop
and
mov
pop
dec
fnsave
int3
out
leave
push
bound
mov
scas
mov
jp
test
call
sub
iret
mov
fmuls
mov
dec
xor
mov
mov
xchg
xlat
rcll
push
jmp
push
scas
hlt
out
push
int
mov
test
rcrb
dec
lods
std
push
xchg
adc
inc
mov
mov
in
dec
xorb
gs
dec
adc
jbe
pop
lock
imul
and
adc
loopne
daa
push
popf
and
jne
or
mov
mov
flds
pop
or
mov
mov
stc
outsl
or
dec
mov
mull
xchg
aaa
in
mov
into
data16
xor
lods
mov
out
mov
call
and
add
bound
addr16
imul
ja
gs
ss
js
xchg
mov
imul
inc
aad
fdivs
les
jb
adc
fs
jg
mov
cltd
pusha
pusha
cmc
push
mov
shll
ffreep
shll
lcall
test
insb
cmp
xchg
jmp
rclb
pusha
or
mov
jae
mov
lret
inc
mov
addr16
and
mov
jne
bound
pop
repz
sbb
cmc
xchg
pop
flds
hlt
shrb
mov
lret
clc
out
pop
movsb
xlat
fwait
or
mov
ret
mov
sbb
negl
fldcw
iret
mov
sbb
cmp
jns
adc
pop
in
aas
outsb
filds
xbegin
and
les
mov
daa
pop
dec
icebp
cmc
call
mov
mov
fildl
xor
cld
enter
aam
mov
int
testb
call
aam
shlb
fidivl
inc
push
hlt
inc
outsb
std
dec
pop
std
loope
jl
fildl
gs
pop
aaa
cmpb
xchg
call
test
push
repnz
mov
push
push
adc
fs
pop
cmp
insl
and
xor
and
loopne
hlt
fs
mov
outsl
scas
gs
mov
les
lcall
xchg
icebp
repnz
pop
sbb
pop
imul
js
mov
mov
inc
test
sahf
dec
mov
dec
add
das
cmc
sbb
iret
xchg
clc
xchg
dec
test
mov
pushf
xor
adc
inc
enter
xchg
xor
cmpsl
je
popl
xor
ss
jb
mov
jg
push
fs
inc
lea
mov
lret
cwtl
adc
sub
mov
mov
xchg
inc
jp
and
xor
movsb
inc
lahf
inc
lods
inc
addr16
push
lret
andb
cwtl
dec
xor
lret
iret
into
loope
sarb
lcall
mov
mov
popa
ja
cmp
jp
sub
pop
dec
outsl
mov
cmp
xchg
xor
push
lods
mov
mov
repnz
fdivrs
lods
sbb
push
fwait
lea
xchg
mov
xchg
int3
ljmp
je
lcall
sbb
xchg
sub
loop
dec
iret
cmp
daa
adc
sub
mov
int
pushf
push
ret
mov
addb
jnp
mov
sahf
inc
push
daa
cltd
pop
xchg
and
sbb
mov
testb
repnz
push
mov
xchg
cs
gs
push
stc
inc
mov
pushf
mov
into
cmp
jb
pop
pop
test
xor
fs
in
rcll
mov
xchg
rcl
nop
xor
dec
ss
fwait
dec
and
mov
icebp
xlat
dec
push
pop
adc
jae
cmp
mov
inc
sub
arpl
jecxz
repz
jnp
dec
repz
enter
insb
sbb
rol
mov
adc
lods
in
stos
lea
xchg
movsl
repnz
lea
inc
repz
add
jge
pop
les
idivb
rclb
in
mov
ret
dec
shll
xor
xchg
xchg
cmp
je
int3
cmp
xlat
cmpsl
inc
jns
xor
or
jge
mov
push
add
stc
icebp
adc
stos
xor
push
loop
mov
das
jmp
cmp
mov
mov
pop
mov
mov
test
push
or
push
push
cmpsl
negb
pop
aaa
aam
sti
xor
xchg
inc
sbbb
dec
dec
arpl
test
cmpb
lea
add
fs
mov
push
push
inc
jbe
sti
addr16
mov
loop
fdivl
in
jmp
clc
test
push
arpl
sbb
mov
dec
or
aam
ret
femms
pop
sahf
pop
movsl
pop
jp
or
mov
lods
inc
and
ss
xor
jne
push
out
inc
mov
fistpll
push
mov
ret
or
ret
mov
imul
icebp
pop
or
dec
xor
xchg
dec
notb
popf
dec
sti
fistl
xlat
push
and
loope
int3
or
cmpsl
out
cmc
insb
subl
into
testl
add
neg
int
lcall
cli
decl
lods
insb
aaa
pop
pop
xor
pusha
dec
scas
scas
adcl
jp
shrb
jbe
push
dec
pop
outsb
int3
adc
in
inc
xchg
popf
add
out
jmp
adc
movsl
inc
push
jo
lcall
and
xor
fisttpll
mov
push
mov
iret
popa
adc
call
push
fstps
adc
aad
incb
shll
shlb
sbb
add
inc
gs
push
out
inc
inc
xchg
shrb
aas
inc
test
daa
dec
mov
test
cmp
mov
ss
mov
mov
adc
popf
mov
cmc
dec
jne
jg
lods
lcall
pop
scas
pop
sub
ljmp
jno
scas
scas
dec
orl
stos
dec
pop
sbb
loope
add
test
inc
mov
clc
shll
push
cs
fistl
pushf
and
inc
mov
pop
xchg
mov
push
popa
subl
int3
pop
aad
add
sti
je
popa
movsb
mov
int3
dec
mov
into
in
mov
das
dec
jle
inc
cli
mov
pop
dec
jl
xchg
dec
mov
xchg
js
push
subb
scas
int3
in
inc
test
inc
filds
scas
xchg
insl
mov
bound
jae
jae
in
push
add
pop
jecxz
call
dec
pushf
lahf
xchg
adcl
xchg
ljmp
std
xchg
xchg
in
imul
test
push
sub
scas
jp
out
arpl
pop
sub
das
push
push
dec
or
mov
push
fcmove
add
stc
test
mov
and
and
xchg
add
mov
cmp
out
or
mov
int3
and
int3
inc
cmp
push
mov
cmc
fiaddl
push
mov
mov
sarl
aad
mov
fadd
cmpsl
xor
insb
movsb
shr
andb
mov
test
cli
xchg
out
mov
dec
scas
sub
dec
cld
sub
or
leave
cmp
inc
and
ja
popf
jge
iret
adc
lret
sti
stos
rcll
sub
add
jo
lock
pop
adc
ljmp
nop
and
add
lahf
repnz
cmp
test
push
inc
fldenv
and
divl
mov
hlt
and
test
xchg
shll
jmp
xor
sbb
std
dec
icebp
je
inc
loopne
mov
roll
iret
mov
pop
test
push
ret
add
or
ja
mov
rorl
inc
inc
je
dec
pop
jl
ljmp
inc
aas
int3
push
je
add
jmp
jbe
dec
jmp
fstpt
out
sbb
loop
cmpsl
dec
cmp
mov
aas
and
cmp
cmp
inc
repz
stos
pop
subl
in
jno
xchg
jge
add
pop
pushf
and
data16
sbb
push
jmp
in
data16
xlat
mov
iret
sbb
push
lret
and
xor
dec
xchg
arpl
and
ficompl
jl
inc
cmp
pop
xor
pop
fldcw
aad
subb
aas
rdpmc
jl
inc
xor
mov
int
out
dec
andl
adc
out
push
into
loop
mov
fisubs
pop
scas
cmp
es
xor
je
out
dec
push
loope
stos
fnstcw
cltd
push
jae
pavgb
pop
mov
sub
sti
pop
fldt
loop
aas
arpl
xor
mov
fldt
arpl
movsb
pushf
dec
or
das
xor
sub
xchg
jle
lret
cmp
dec
loop
enter
and
inc
cmp
pop
inc
sbb
stc
rorb
fmul
orl
js
mov
push
fnstsw
add
sti
sahf
jno
inc
jl
mov
push
mov
jl
imul
adc
scas
call
xchg
push
ucomiss
sarb
jle
hlt
inc
mov
cmp
sbb
mov
imul
ljmp
cmp
in
mov
repnz
pop
mov
std
or
lea
mov
mov
addr16
inc
push
movsb
gs
push
xor
daa
negb
inc
add
or
call
jns
mov
movsb
mov
cwtl
mov
repz
scas
push
out
lahf
loopne
xchg
and
mov
lahf
lea
aad
iret
sbb
cmp
pop
pop
out
loopne
xchg
pop
cmpb
loope
lcall
shll
popa
int
inc
mov
xchg
sahf
sub
cli
xchg
pushf
jl
add
pop
cmc
inc
inc
mov
adc
push
dec
cli
aaa
pop
dec
mov
lret
dec
stc
adc
add
xor
push
sub
jmp
daa
or
bsr
js
subl
jbe
adc
jmp
jnp
pushf
pusha
sub
imul
subb
dec
adc
xchg
aas
push
lods
mov
cmp
shll
nop
loopne
push
cmc
sbb
movsl
stos
icebp
inc
inc
insl
xor
mov
jbe
loop
mov
cwtl
into
int
sub
mov
add
enter
jnp
dec
imul
ds
sbb
js
cmp
sti
xor
jl
pop
test
aas
test
push
in
mov
ljmp
push
dec
fs
lret
jae
dec
popa
jnp
scas
les
mov
add
jne
mov
jae
jg
inc
stos
pop
mov
sbb
aam
cmp
fistpll
sub
fcompl
push
sbb
add
fs
jnp
cwtl
dec
or
cmp
test
or
or
or
add
dec
out
cmpsb
xchg
push
jo
xor
dec
cmp
add
adc
sub
sbb
cmp
dec
or
repz
jns
test
insl
lret
pusha
rclb
mov
insl
xor
pop
mov
inc
sub
js
push
adc
sub
push
add
jecxz
or
addr16
arpl
add
xor
cmp
xor
push
je
rclb
mov
cltd
jb
push
or
hlt
add
adc
ficompl
into
push
je
push
lds
sbb
and
lods
xchg
lahf
add
sbb
and
cltd
push
or
xor
js
and
loop
xchg
xchg
mov
pop
pop
rclb
jp
or
xlat
loopne
mov
ficoml
repz
pop
shlb
test
pop
push
xchg
dec
scas
lock
aaa
sub
cmp
jmp
or
adc
fsubr
xlat
nop
adc
mul
pop
lcall
movsb
inc
dec
cli
les
xchg
cmp
pop
mov
filds
test
mov
inc
mov
insl
mov
fldcw
push
mov
cmp
xchg
and
xor
mov
jae
nop
jno
inc
or
inc
icebp
or
add
fimuls
inc
int
dec
dec
inc
scas
movsl
iret
loope
lock
and
jno
mov
jae
xchg
xlat
xor
sub
inc
test
mov
cmp
shrd
dec
inc
aaa
pop
or
inc
int3
movsb
ret
fs
jge
mov
sub
iret
cmp
jg
inc
sbb
aaa
pushf
or
mov
and
pushf
mov
cmpsb
lahf
je
lcall
xor
xor
sbbb
cmp
pop
aas
and
hlt
xchg
out
les
dec
sbb
sahf
fldt
adc
rolb
adcl
or
mov
cmpb
scas
xor
mov
xor
mov
mov
mov
loopne
mov
shlb
dec
mov
test
sub
pop
mov
jmp
xchg
xor
cltd
cli
shll
mov
test
adc
aas
xchg
adc
jge
lods
adc
enter
aaa
lahf
leave
mov
jbe
xchg
scas
push
xor
inc
push
or
lods
pusha
lock
mov
lea
popf
and
push
mov
jne
fstl
push
stc
lods
lods
ljmp
int
lahf
or
popa
sub
inc
fisttps
adc
dec
ds
arpl
cmpsb
sub
movsb
int
cmp
xchg
inc
mov
mov
leave
bound
xchg
outsl
emms
lea
aaa
cltd
loop
mov
sub
sub
pop
les
cmp
inc
push
pop
xchg
push
sbb
jle
inc
aaa
push
mov
add
imul
mov
xchg
pusha
xchg
into
stc
xchg
sbb
scas
insl
mov
arpl
mov
jl
jge
pop
dec
push
mov
jne
pop
pop
shrw
mov
xor
fwait
int3
xor
cmp
or
mov
mov
adc
jns
stc
notl
mov
mov
jbe
or
inc
adc
cmpsl
loop
int
xchg
fdivrs
inc
push
shll
pop
inc
pop
push
add
push
ret
push
cmpsl
inc
jne
mov
clc
in
jg
pop
cmc
jbe
mov
popa
fsubs
cmpsl
movsb
mov
aad
dec
sbb
mov
mov
push
push
cmp
fisubrs
push
lret
pushf
in
inc
lods
and
daa
and
iret
mov
hlt
leave
xchg
iret
mov
test
add
movsb
xchg
test
dec
jmp
lret
mov
push
mov
aas
xorb
xchg
dec
test
push
push
shlb
cmpl
inc
cltd
mov
inc
inc
and
pop
adc
sti
ret
xchg
gs
xor
push
push
xor
pop
adc
xchg
xchg
pop
push
mov
outsl
inc
repnz
sbb
push
lea
mulb
inc
jno
adc
test
int
outsl
insb
mov
sbb
sbb
stos
and
sub
sbb
push
push
xchg
mov
dec
cmpsl
xlat
sub
sub
dec
push
addr16
out
leave
push
hlt
cmp
xchg
outsb
adc
jae
iret
mov
xchg
jge
les
or
inc
cli
mov
xor
jmp
sarl
out
pop
mov
call
iret
lret
mov
inc
dec
ficompl
jl
shl
pop
mov
jnp,pn
dec
sbb
rolb
sbb
push
lret
pushf
std
or
hlt
dec
repz
shlb
popfw
aam
cld
cmpl
adc
xrelease
inc
ds
xor
sbb
mov
cmp
add
cs
out
xor
xchg
and
scas
ror
dec
scas
scas
lock
movsb
mov
mov
xchg
das
cmpsl
lcall
imulb
call
inc
ret
cmp
mov
mov
jecxz
xchg
rsqrtps
dec
xchg
inc
sub
cmpsb
push
les
push
and
pop
or
mov
mov
xor
sub
push
and
adcb
dec
stc
aaa
ss
testb
jle
jg
scas
sbb
push
repnz
xor
push
das
jns
jecxz
push
cmpsb
ss
imul
add
inc
sahf
cmp
sub
sub
and
mov
scas
cmpsb
adc
add
push
nop
andl
dec
mov
stos
add
shlb
and
inc
push
cmp
js
cld
jl
add
push
insb
mov
movsb
pop
mov
les
or
or
sub
shl
adc
mov
fistpl
arpl
imul
loopne
fs
js
xchg
add
jnp
push
test
arpl
out
or
dec
sti
test
lock
mov
push
jl
jmp
fwait
out
pop
xchg
and
jno
test
mov
out
jno
mov
in
mov
add
int
cmp
out
lret
jbe
rorl
push
push
jne
add
fs
in
xor
repz
out
das
hlt
adc
push
push
jl
inc
xor
mov
xor
sti
sub
clc
out
xchg
adc
inc
mull
pushw
and
xchg
mov
data16
inc
cwtl
in
jp
pop
je
leave
aam
jecxz
in
cmc
jnp
jl
cmp
push
or
xchg
cmp
stc
sbb
outsl
lcall
mov
add
js
into
pop
push
mov
mov
test
fs
mov
aaa
cmp
cwtl
das
push
cmp
out
add
jecxz
imul
loopne
mov
lret
mov
lahf
mov
loop
lahf
mov
test
sahf
popf
cmp
push
and
cli
push
cmc
inc
in
lcall
gs
out
repz
out
mov
int
into
mov
lods
inc
insb
sti
adc
faddp
fcomp
call
outsl
ficompl
es
mov
shll
push
xlat
outsl
repz
lods
lods
or
rorb
out
mov
aad
insb
ffreep
cltd
movsb
adc
aad
dec
fs
push
sub
mov
stos
lea
jae
adcb
xchg
jle
mov
jg
add
pop
mov
or
xchg
inc
sahf
not
dec
and
clc
pushaw
or
les
push
vpsllq
sahf
fucomp
loope
dec
stc
jns
cwtl
rcrl
jbe
subb
and
incl
mov
iret
lahf
mov
pop
xor
jg
stos
sub
sbb
rorl
dec
cmp
inc
jne
push
mov
movsb
aas
xor
and
leave
sbb
stos
jo
rolb
mov
fwait
adc
push
in
push
lahf
xor
into
jp
out
jne
imul
js
mov
xor
xchg
dec
fiadds
test
mov
dec
mov
mov
shrl
jno
ja
sbb
dec
cmp
mov
sub
test
cld
out
repnz
sub
outsb
scas
dec
lods
push
hlt
repnz
mov
pop
lcall
mov
hlt
and
sbb
sbb
inc
cmp
mov
inc
jge
pmulhw
xchg
sub
inc
mov
jg
xor
daa
mov
cmpsb
addb
in
adc
push
mov
lret
jo
mov
jg
pop
jmp
insb
xor
dec
and
fwait
out
inc
xor
add
pop
push
dec
aaa
stos
xor
and
push
dec
xchg
sti
hlt
inc
mov
imul
push
mov
popl
jecxz
or
test
pop
jae
xor
jns,pn
dec
fcomps
rcrb
outsl
inc
fxch
loop
gs
enter
mov
jns
bound
and
clc
pop
adc
mov
jns
xor
rcrl
inc
mov
shrl
sub
pop
orl
or
adc
jmp
mov
out
mov
xor
ss
fiadds
fdivrs
shl
mov
mov
test
xchg
test
mov
mov
repz
mov
addr16
in
iret
out
adc
mov
orb
test
ljmp
dec
xor
outsb
fisubl
stos
mov
xchg
pop
ds
cmp
push
lahf
jecxz
xor
addb
or
or
in
adc
inc
ja
mov
pushf
adcl
sub
jns
pop
inc
test
adc
subl
subb
mov
and
fisubrl
pop
leave
sbb
inc
int
jb
insb
fcoml
inc
pop
fists
push
fnstcw
lcall
cmpsl
dec
jp
push
cs
je
jbe
cwtl
lret
xor
mov
jnp
sbb
add
iret
push
leave
mov
in
movsb
mov
xor
mov
xorb
jo
in
popf
negl
arpl
jns
and
mov
das
adc
xor
enter
jge
mov
sbb
xchg
xor
cld
dec
or
stos
jmp
stos
enter
dec
adc
jp
sbb
sti
aaa
pusha
popf
mov
dec
jbe
or
jns
lods
or
mov
add
and
sub
lods
mov
mov
mov
shll
dec
dec
repz
addl
jl
cli
xchg
push
into
test
xchg
lods
or
push
mov
jg
loop
bound
mov
cmp
stc
and
xor
ss
jle
imul
stc
out
mov
loope
mov
xchg
data16
lahf
mov
cmpsl
sub
mov
int3
jns
je
mov
lods
sbb
das
int
divl
sub
rcll
mov
gs
pop
lahf
adc
cli
sti
jns
pop
add
cli
outsl
add
mov
cli
xchg
sahf
sub
int3
dec
fwait
movsl
cli
pop
ret
mov
int
push
adc
or
cmp
push
cmc
xchg
push
loop
lods
sbb
push
push
adc
sub
incl
cmp
jg
inc
je
subb
add
mov
outsl
cmp
out
test
jnp
add
xchg
nop
loop
inc
sbb
pop
xor
sub
xor
xor
out
mov
sti
or
sub
outsl
inc
mov
pop
mov
inc
cwtl
sbb
test
sbb
cmp
cmpsb
dec
cmp
enter
leave
imul
inc
or
pop
fisubl
mov
cmp
fdivrl
cmpsl
test
das
scas
out
cmpsb
add
lea
sub
idivl
mov
movsl
adc
bound
repnz
mov
sub
mov
jl
sti
sbb
sti
sbb
push
cmp
test
jnp
int
xchg
and
fisubs
cmpsl
mov
idivb
push
pop
incb
repz
push
mov
cmpsb
rol
sahf
xor
mov
and
aam
les
js
push
pushf
lea
sub
cmp
inc
stos
repnz
push
insb
inc
inc
fldl
push
cmpsl
cld
mov
jecxz
and
sub
adc
push
xchg
or
xchg
mov
cmpsb
stos
push
xchg
adcb
jmp
jle
adc
cs
out
fcoml
inc
push
in
and
mov
es
lcall
popa
mov
mov
iret
xchg
jo
mov
and
dec
jg
scas
mov
fbstp
cmp
pop
pushf
mov
sar
xchg
jne
jecxz
push
enter
xor
inc
test
imul
movsb
sbb
push
adc
add
jno
js
inc
das
aas
js
adc
jg
fstp
jl
xchg
and
push
ret
push
test
and
aad
add
mov
fnstcw
notb
and
repz
sti
dec
jmp
ljmp
mov
and
cwtl
call
adc
sub
nop
nop
cmpb
xor
pop
xchg
jge
lods
mov
push
add
dec
jns
cmpsl
add
jbe
pop
and
sbbl
pop
cmpb
adc
sub
je
cmp
xor
pop
mov
das
xchg
adc
pop
sbb
nop
lods
jbe
xor
iret
sbb
rclb
xchg
or
push
shrl
rorl
cmpsb
push
xor
repnz
decl
daa
cmpsl
xchg
push
mov
rclb
aam
mov
xchg
xchg
sarl
jge
pop
or
imul
sub
and
popa
sar
gs
sub
add
inc
push
pop
cmp
mov
and
inc
in
xchg
scas
cmp
mov
pop
lods
scas
js
adc
mov
jp
fdivrs
pop
ret
xchg
sbb
lods
test
cmp
mov
movsl
or
and
fcoml
xor
push
inc
inc
dec
fnsetpm(287
pop
dec
add
xor
out
mov
xchg
cmp
and
lods
fnstsw
mov
scas
ret
jge
and
jo
push
jnp
adc
test
dec
mov
xchg
test
mov
test
and
mov
and
jbe
pushf
adc
cmpsl
mov
popf
cmp
fiaddl
xlat
fdivl
xlat
fs
das
xor
pop
mov
in
jmp
lock
or
mov
add
jmp
xlat
push
aad
daa
andb
fs
or
test
iret
sub
mov
pop
gs
push
dec
xchg
add
and
dec
es
test
lahf
fdivrl
xor
dec
and
aad
dec
subl
xor
mov
aaa
xchg
add
pushf
dec
fsts
adc
lcall
push
mov
aaa
adc
jb
test
sbb
jg
mov
sub
out
sub
xlat
mov
addb
mov
push
mov
xchg
ret
mov
icebp
dec
jp
lods
sub
test
mov
sub
fs
jae
mov
lahf
inc
out
sbbl
mov
insb
int
adc
lcall
and
xlat
push
or
stos
adc
sbb
movsl
inc
inc
xchg
mov
sub
and
pop
mov
jno
cmp
imul
xchg
ret
jp
adc
cmp
mov
sbb
mov
inc
test
pop
dec
imul
inc
stc
xor
test
enter
sub
add
test
je
test
mov
dec
xchg
subb
call
fnstenv
xchg
test
cmp
ror
test
cld
push
dec
out
lret
aaa
push
jae
dec
jbe,pt
add
lock
ss
shl
mov
jno
jne
ss
xor
inc
inc
iret
mov
cmp
xchg
mov
lock
cmpsb
ret
out
iret
sub
es
dec
inc
xor
shll
cmp
push
xchg
mov
and
cmp
add
mov
mov
ljmp
ljmp
xchg
cmp
lock
stos
lods
jno
mov
gs
adc
xlat
sbb
stos
test
jp
push
mov
je
sarb
dec
stos
out
lret
cmp
inc
jp
mov
cmpsb
inc
ret
and
push
xchg
jle
mov
jle
negb
and
imul
inc
jmp
into
pop
jo
gs
scas
pop
push
enter
jle
mov
in
in
and
adc
repnz
xchg
mov
adc
imul
in
idivl
cmp
jmp
inc
push
scas
lcall
and
and
or
in
dec
and
and
js
shrl
add
xchg
leave
jne
jae
imul
or
or
ds
xchg
push
inc
or
jp
pop
aaa
ficomps
cmp
sbb
cmp
xor
pop
das
fidivl
mov
xchg
mov
xchg
jno
xor
cmp
dec
test
fdivrp
stos
cmp
inc
mov
sub
cs
add
jbe
dec
scas
lods
adc
or
hlt
lcall
push
dec
fsub
and
lcall
xchg
popf
mov
outsb
inc
or
in
inc
lods
leave
mov
jno
or
mov
add
cltd
mov
loop
xor
sbb
mov
scas
sub
dec
insb
inc
inc
insb
xor
test
adc
xchg
or
add
lahf
adc
dec
mov
add
jge
mov
popf
sbb
mov
aas
xchg
xor
int3
rorb
or
int3
push
pop
cmp
push
repnz
fisubrs
inc
lods
push
ret
lcall
hlt
fwait
mov
inc
scas
push
pop
ret
jb
and
xchg
sub
adc
jae
dec
out
jno
je
or
xorb
inc
aaa
in
decb
popf
je
dec
lret
push
xchg
mov
xchg
push
out
fdiv
dec
jbe
pop
test
fs
mov
pop
jp
lds
jno
mov
mov
fmuls
mov
dec
loop
out
mov
xor
andb
je
jg
pushf
imul
jne
mov
iret
push
mov
je
pop
mov
ds
mov
jg
lock
mov
fs
ret
sub
mov
xchg
cmpxchg
dec
mov
repnz
outsl
pop
xor
cwtl
or
pushf
dec
adc
pop
lock
mov
xor
pushf
mov
fstpl
pop
cmp
mov
jle
fadds
add
mov
inc
mov
cmp
xor
sub
cltd
pop
arpl
mov
aad
lock
or
enter
testl
or
adc
dec
sub
rcrl
les
pusha
lahf
rolb
or
mov
mov
mov
out
in
shlb
cmp
push
pop
cmp
mov
and
test
sub
jns
inc
mov
cmpsb
xor
addr16
cs
ljmp
push
jle
sarb
mov
push
fwait
sbb
mov
daa
jns
jne
mov
and
xor
inc
mov
jp
push
mov
add
aad
or
mov
xor
cmp
jp
into
loopne
fimuls
pushf
fcompl
fs
test
mov
pop
sbb
lock
aam
das
push
aad
mov
sbb
inc
sub
popf
je
es
sub
ficoml
pop
cmp
sub
sub
mov
push
sub
and
mov
fimull
adc
fisubrs
or
dec
cmp
test
movsb
enter
aam
xlat
and
in
pushf
scas
sub
inc
outsl
fiaddl
fdivrl
icebp
ss
je
mov
sub
outsl
out
int
in
mov
pusha
xadd
push
pop
mulb
sti
mov
adc
mov
cmp
and
scas
dec
sbbl
cmp
data16
dec
cmpb
scas
into
jmp
nop
les
clc
mov
xor
sub
xchg
push
bnd
mov
xchg
mov
jae
dec
mov
test
add
clc
dec
mov
and
popf
mov
dec
mov
push
pop
xchg
mov
inc
jbe
ja
xor
fildll
xlat
xor
fidivl
shrb
mov
add
jne
ljmp
add
cltd
jp
push
jl
push
call
mov
sbb
mov
pushf
mov
out
xchg
outsl
aas
pop
cmpsl
push
pop
rclb
dec
and
in
add
xor
mov
xor
mov
jae
rcrb
pop
pop
sahf
call
inc
pop
clc
push
add
pop
fldl
jae
adc
mov
push
mov
fwait
xor
xor
pop
clc
lock
or
scas
nop
je
push
dec
pop
adcl
xchg
negb
add
jns
in
js
or
cwtl
arpl
addr16
pop
fidivrl
inc
mov
mov
insl
adc
push
xchg
sbbb
or
fmul
rcrb
addr16
lods
dec
push
mov
fcomi
hlt
xchg
lock
mov
sbb
mov
mov
xor
push
outsl
call
in
xchg
push
movsl
int
icebp
push
insb
add
jb
jg
or
adc
inc
loope
mov
lds
pushf
call
je
pop
pop
pushf
pop
mov
ds
xchg
shll
dec
push
insl
pusha
aad
fcompl
jbe
call
in
adc
sti
cmp
int
pop
cwtl
cmp
ss
pop
pop
cmpsl
lahf
xor
sarl
mov
pop
add
push
pop
data16
aaa
xor
shrl
subl
inc
pop
mov
adc
mov
cmc
pop
cwtl
mov
in
push
cmp
jge
das
movsb
ss
cltd
inc
setl
mov
inc
roll
out
iret
ret
inc
mov
dec
inc
out
filds
scas
push
and
movsl
test
and
xchg
ret
lret
cmp
jae
add
in
pop
cmp
and
pop
jp
mov
mov
dec
js
imul
fsts
and
ljmp
lods
shrb
loop
jmp
push
push
mov
in
pop
sbb
add
pop
sub
std
sub
jnp
out
movsb
pop
shrb
inc
jmp
inc
pop
lock
fistpl
imul
xor
jg
jnp
push
cmp
and
aas
test
adc
add
sbb
pop
outsb
xchg
jmp
mov
lods
popa
sub
out
or
or
dec
aaa
lcall
popf
fs
or
mov
jge
mov
dec
aaa
pop
jle
mov
fmuls
in
push
mov
push
bound
ret
dec
es
lcall
lret
dec
cmc
int
test
test
sbb
cmp
jbe
out
and
lock
repz
mov
in
fisttpll
pop
dec
cmpsl
mov
decb
out
addr16
sbb
popf
popa
gs
mov
pop
jne
push
fsub
xor
rorb
inc
jg
sti
mov
add
push
push
mov
movsb
adc
test
cwtl
icebp
jg
aaa
xor
mov
insl
cli
loope
ljmp
push
mov
cmp
in
jbe
sub
lods
je
push
loop
je
jne
jno
mov
daa
jae
rcrl
inc
les
adc
repz
xchg
jmp
subl
addr16
fwait
or
rorb
add
cmp
inc
push
test
movsl
rep
js
je
add
push
jo
sbb
xor
mov
sbb
cmpsb
rolb
xchg
mov
xor
push
cmpsl
push
adc
xchg
gs
pop
lods
lods
push
xchg
push
jbe
inc
xchg
inc
and
or
data16
adc
fcmovbe
ljmp
scas
das
add
loop
xor
pop
jno
aaa
mov
push
xlat
mov
loope
dec
int3
cli
stos
dec
loope
out
sbb
mov
adc
lods
dec
insl
pop
aaa
mov
adc
sbb
pusha
mov
jl
inc
test
negb
daa
mov
sti
mov
mov
or
and
push
sub
scas
adc
into
dec
fldt
mov
sar
daa
ret
test
mov
fldt
add
add
inc
int3
js
into
fistl
xor
or
push
ss
push
inc
xchg
popa
xor
dec
mov
movsl
subb
es
jp
rol
xchg
aam
movsb
nop
cmp
mov
in
pop
inc
loope
add
repnz
sbb
inc
xor
scas
pop
test
dec
sub
sub
sub
or
jmp
pop
test
movsl
daa
jb,pn
sbb
stos
shrb
jne
push
addr16
jbe
int
mov
jle
pop
xor
cld
lret
push
xchg
mov
xchg
cmc
add
dec
mov
pop
addr16
aad
stc
and
push
sbb
scas
inc
test
js
je
and
ds
shll
adc
lock
dec
icebp
jne
jbe
mov
and
in
insb
xor
pushf
add
in
xor
adc
test
js
sbb
xchg
in
push
jns
adc
test
pop
and
mov
cmp
or
std
and
inc
shl
jno
cmp
and
iret
jno
dec
call
and
repnz
pop
jecxz
imul
arpl
aas
jmp
mov
mov
add
adc
cmp
mov
add
and
cs
inc
inc
push
std
pop
scas
or
xlat
and
cmc
sub
mov
fidivl
ljmp
shlb
cs
out
sub
push
dec
sub
adc
pop
push
pop
inc
mov
daa
hlt
mov
sub
test
ret
cmp
mov
pop
fisubrl
enter
cmp
dec
mov
add
nop
mov
loopne
cmp
cmp
jo
aad
stos
rcrb
xchg
sub
sub
jbe
test
xchg
outsl
mov
lds
aad
lret
adc
xchg
xchg
divb
sbb
ljmp
add
cli
mov
jns
out
pop
pusha
fs
mov
stos
inc
into
mov
mov
ret
mov
mov
pop
sub
add
andl
ss
jmp
clc
xor
and
icebp
orl
xor
xor
cmp
or
pop
cmp
and
sub
mov
cs
xor
push
repz
mov
dec
ljmp
inc
mov
sbb
xor
cmc
sbb
clc
in
sub
lret
cmc
cmc
ffreep
jo
dec
pop
mov
fmul
sub
enter
inc
test
test
sub
icebp
jg
sbb
test
jb
outsb
pop
mov
jmp
jnp
and
popf
pop
push
mov
arpl
dec
mov
dec
cltd
and
lcall
call
jmp
jo
pop
xchg
cmpsl
lea
addr16
cmpsl
cmp
jae
into
icebp
imul
mov
inc
jbe
push
mov
out
in
sbb
shl
sub
std
xlat
test
and
test
rolb
xor
in
pop
popf
repnz
mov
inc
imul
sti
cmp
mov
and
out
ds
adc
adc
cs
xor
mov
jb
mov
jne
dec
cmp
xchg
fcompl
imul
mov
or
xchg
mov
mov
fnstsw
or
pop
fiaddl
test
test
pop
cwtl
xor
shlb
hlt
jae
fisttpl
mov
sub
arpl
pop
jbe
cmp
or
sbb
add
pop
fnstenv
sbb
mov
sti
and
fisubrl
jge
lods
xlat
mov
sbb
fwait
add
inc
pop
cmc
leave
jle
lret
sub
cld
xor
ficompl
out
adc
adc
filds
xchg
and
scas
and
sub
mov
cmp
rclb
pop
daa
pop
ja
adc
dec
push
fimuls
bound
stc
sub
in
movsb
aas
daa
clc
cwtl
mov
icebp
inc
or
dec
out
adc
test
jae
push
adc
xor
lods
ljmp
call
and
or
adc
cmpsb
and
pushf
adc
and
cwtl
push
cmpsl
ret
outsl
adc
dec
icebp
cmp
add
rclb
xor
or
and
iret
sub
dec
jne
mov
dec
std
lods
out
ss
inc
int3
in
mov
in
pop
push
adc
das
cmp
push
or
popf
sub
jae
jns
add
dec
ja
xchg
adc
and
mov
and
mov
xor
inc
subb
je
adc
mov
or
or
lds
mov
inc
pop
push
stos
pusha
dec
and
adc
mov
lods
xlat
lods
js
push
or
arpl
xchg
push
sarb
orl
adc
insl
pop
mov
mov
in
mov
pusha
flds
inc
jge
xor
cmc
notb
push
leave
addr16
jbe
mov
and
sbb
stos
pavgb
lods
and
fcoms
mov
xchg
add
and
lods
adc
and
pop
mov
pop
jb
inc
add
xor
adc
push
loope
inc
cltd
cs
xchg
xchg
in
mov
daa
jo
sub
shll
dec
gs
popa
sub
mov
cmp
dec
adc
push
jae
mov
shl
jge
pop
mov
sub
out
inc
test
std
cwtl
adc
out
push
add
or
lods
cmp
push
dec
dec
jg
add
loope
fs
shrl
and
scas
adc
xlat
lret
mov
dec
pop
jns
inc
add
or
in
ret
lds
push
je
cli
or
out
inc
inc
clc
sub
aaa
jno
imul
ja
ds
inc
and
mov
mov
cmp
xchg
je
stos
pusha
jne
adc
xlat
aam
lods
sbbb
lods
lret
lds
cld
lret
cmp
jo
cmp
or
mov
jge
mov
jb
adc
sarl
iret
xor
inc
test
gs
xchg
pop
mov
xor
adc
test
daa
lods
and
inc
rcrb
mov
insb
vpaddsw
or
fmull
mov
mov
movsl
add
cld
xor
rol
cmp
and
sbb
sbb
xchg
shl
mov
inc
pop
test
adc
out
sub
je
ja
add
mov
pop
jns
jb
cmpl
dec
cmp
push
push
add
mov
dec
imul
or
hlt
jbe
iret
lds
xchg
inc
push
push
addr16
sub
fildl
adc
rcll
es
add
add
inc
fstpt
cmp
test
sub
negb
mov
pop
out
jle
jmp
gs
adc
ficomps
xchg
xchg
dec
adc
test
cmp
mov
jne
and
adc
push
mov
lds
push
iret
loopne
insb
pop
xor
ljmp
xor
leave
ret
add
cmp
cmp
cmp
mov
jns
out
pop
mov
push
dec
cmp
xchg
enter
and
hlt
es
xor
test
aas
mov
imul
xor
or
out
sarb
jnp
cmp
push
jmp
ljmp
push
inc
repnz
fdivs
jg
push
dec
adc
test
push
jl
ret
out
lret
out
mov
jge
outsl
pop
out
xchg
sbb
pop
mov
sahf
push
pop
out
jp
mov
dec
ret
jg
aad
push
js
ret
addl
in
insb
in
push
push
leave
mov
mov
xor
shll
adc
mov
and
jg
mov
pop
andb
push
jl
pop
adc
push
sahf
inc
je
out
int
xchg
fwait
jb
pop
leave
xchg
cmp
push
mov
inc
popf
cmc
inc
adc
push
stos
call
sbb
lret
les
lea
ret
push
sahf
int3
mov
mov
pop
imul
cmp
test
inc
sbbl
push
fstpt
clc
gs
push
lds
xchg
or
add
xchg
push
jle
pop
xor
push
shrb
jmp
jo
hlt
ret
dec
enter
mov
xor
daa
jp
outsl
push
pop
call
popa
or
pop
mov
inc
cmp
jne
scas
pop
push
xor
adc
xchg
or
mov
mov
or
cmp
arpl
and
ret
add
or
push
pop
xchg
jnp
shlb
cmp
lea
mov
push
std
jmp
insl
addr16
add
sub
lea
fisubrs
dec
out
push
xchg
jo
and
sahf
into
test
in
fisubrs
inc
aam
cmp
jnp
fsubs
cmp
jo
jno
adc
push
xchg
cmp
inc
inc
mov
repz
movsb
aam
xor
loop
and
push
test
jo
or
push
pushf
es
adc
es
aam
inc
je
dec
test
ret
push
test
pop
mov
lret
push
push
xchg
lret
aas
adc
jp
out
ret
pop
cmove
mov
or
leave
cmpsl
push
andl
out
sub
das
imul
pop
jo
jbe
inc
mov
insl
dec
push
cmpsl
or
and
and
mov
sbb
jp
movsb
adc
aam
into
and
xchg
leave
adc
jmp
and
xchg
jl
in
shlb
jge
fists
dec
pop
and
mov
nop
xor
mov
push
pop
lret
flds
daa
icebp
mov
inc
xor
aad
push
jbe
loope
mov
sbb
or
pop
fmul
outsl
scas
fmull
shrb
lock
and
ss
xchg
iret
enter
pop
call
and
push
cli
lds
jecxz
inc
mov
sbb
push
jecxz
inc
imul
and
es
lods
std
lret
pop
ds
jns
imul
push
ret
lock
push
int3
repnz
xorb
push
jnp
lret
es
or
dec
daa
icebp
test
pop
or
ret
jge
mov
pop
sbb
mov
pop
leave
mov
mov
daa
mov
lock
xchg
xchg
push
imul
jo
mov
sti
lcall
insb
inc
pop
sti
jp
outsb
xchg
cmp
fisttpl
sub
sbb
inc
test
jb
nop
into
je
call
sti
mull
movsb
cli
add
sub
imul
bound
jle
sbb
out
lcall
jb
cmp
jl
cld
mov
mov
xchg
and
leave
mov
call
push
cmpsl
les
jp
mov
bound
out
icebp
dec
pop
ljmp
push
and
or
repnz
mov
push
insl
shlb
mov
outsb
and
lret
aas
xchg
dec
mov
mov
xchg
mov
xchg
pop
adc
jo
or
sbb
jnp
lret
rolb
insb
sahf
xchg
icebp
cltd
insl
and
rcr
sbb
repz
push
ja
cs
sti
jae
iret
cmp
repnz
loop
xchg
jle
lods
and
std
xor
adc
fsts
jae
fwait
shll
jb
rolb
jmp
cmp
inc
push
shll
lods
aad
mov
pop
mov
or
enter
dec
rcr
and
enter
mov
mov
cmpl
xor
push
cmp
cmc
xchg
loope
pushf
pop
and
addr16
in
popa
inc
xorb
adc
pusha
ret
into
and
insb
mov
push
xchg
mov
shll
sbb
movsb
outsb
pop
dec
out
fwait
jle
data16
jecxz
adc
sub
ficompl
sbb
push
jbe
aam
jmp
fs
pop
int
dec
outsl
cmp
jge
jl
inc
pop
jae
subb
ret
xor
pop
pop
and
ds
push
int
les
add
pop
adc
mov
xor
shrb
jb
frstor
out
fs
scas
mov
mov
xorb
cmp
fidivrl
dec
fwait
jp
mov
add
pop
push
xchg
push
inc
repnz
cwtl
dec
and
and
addr16
add
aaa
mov
cmp
mov
mov
and
inc
or
popa
adc
xor
les
sahf
ds
out
mov
and
loop
pop
or
push
adc
and
gs
lret
ljmp
mov
aad
cmp
and
adc
loope
add
ss
dec
out
test
sub
fsubrl
dec
pusha
lret
push
pop
jo
jae
xor
repz
cmp
scas
and
lret
scas
cmp
pop
push
sub
inc
pop
lahf
push
shrb
jns
pop
leave
xchg
test
pop
ret
pop
jae
addr16
xchg
in
jmp
mov
pop
add
fidivl
out
insb
insb
xlat
sbb
je
nop
aas
mov
xor
sbb
adc
mov
mov
std
fwait
insb
gs
ret
cmp
inc
or
data16
sti
jo
adc
arpl
add
insb
cmp
push
bound
popf
or
jo
cmp
sarb
imul
cmp
pop
pop
jl
rcrb
cld
or
sub
lahf
pop
sub
jg
imul
inc
rcr
repnz
push
xchg
pop
xor
rolb
hlt
pop
stos
jg
mov
add
and
je
pop
pusha
sbb
cmp
lcall
push
fsubrl
insl
addr16
in
jg
jns
sub
xchg
cmp
dec
decb
jae
dec
push
mov
iret
les
rol
ja
mov
push
pop
mov
pop
push
subb
push
js
jg
pop
sbb
xlat
frstor
xchg
add
lahf
inc
inc
js
in
mov
add
aam
jno
xor
pop
mov
fwait
enter
popa
sub
pusha
jbe
pop
xchg
jecxz
lods
sbb
jae
cwtl
sub
dec
or
nop
xchg
daa
sbb
add
adcb
or
test
int3
add
lock
js
add
cmc
jno
insb
push
hlt
jmp
test
inc
jae
test
jne
cmp
and
stos
mov
lcall
sub
out
out
shll
xchg
xlat
out
rorb
sbb
sahf
repnz
inc
outsl
bound
test
mov
or
cmp
les
int
or
add
pop
aas
lret
imul
in
mov
mov
pop
sub
jp
sbb
sti
push
lods
xorl
push
cltd
ja
decb
insl
lock
mov
popa
jl
les
mov
adc
jge
movsb
aad
jle
jmp
loope
call
movsb
fnstsw
mov
mov
ss
ljmp
push
mov
leavew
cmpsb
jnp
fcoml
jp
mov
imul
lds
sub
xchg
das
xchg
pop
int
inc
dec
rorl
test
dec
lcall
push
xchg
data16
jb
pop
out
xor
sub
push
iret
sahf
movsb
imul
call
adc
jmp
mov
movsb
es
pop
data16
test
mov
das
pop
test
ljmp
es
adc
ds
sbb
enter
test
inc
divl
or
aas
in
mov
mov
xchg
repz
test
lock
lret
ja
pop
fdivrl
jl
dec
mov
push
icebp
push
je
iret
repz
mov
int3
xchg
hlt
out
sar
fucom
daa
into
add
ret
ret
push
and
pop
jg
imul
sbb
or
dec
movsb
hlt
sbb
xor
pop
pop
outsl
push
inc
add
mov
outsb
jle
repz
pop
xchg
enter
int3
lret
xor
cmp
or
sbb
sti
loope
cmp
adc
stos
scas
daa
push
scas
jbe
adcb
cwtl
test
in
mov
rclb
movsb
out
in
xor
mov
sbb
call
inc
add
add
aam
cmp
aad
fildl
push
pop
sub
add
jnp
cmp
fs
inc
pop
aaa
pop
test
clc
xchg
push
or
adc
call
out
test
ja
inc
mul
aam
pop
adc
pop
mov
loopne
jg
insb
and
arpl
push
mov
inc
scas
aaa
daa
pop
fdiv
xor
or
cmp
rcll
and
fistl
push
push
dec
notl
and
adc
or
xor
stos
rorb
lods
dec
and
jbe
inc
push
outsl
xchg
les
in
jp
scas
inc
aad
mov
and
fildll
and
insl
push
xor
movb
jg
pop
loope
or
cmp
shr
jno
inc
mov
mov
lods
pop
bound
test
and
lcall
sti
fwait
xchg
push
mov
popf
lods
adc
push
addr16
mov
sub
push
sub
ja
scas
push
lret
cmp
cmp
stos
and
jecxz
dec
xchg
gs
xchg
sbb
pop
inc
insb
pop
cltd
lods
xchg
cmp
shl
scas
dec
repz
faddl
push
fmuls
in
mov
add
mov
fisubrs
outsb
out
and
loopne
mov
repnz
mov
subb
sbb
push
mov
lcall
stc
mov
cmp
and
gs
lahf
adc
and
push
js
and
mov
push
push
xchg
aad
mov
aam
test
push
xchg
jae
pop
and
inc
mov
jbe
popa
in
mov
jno
mov
push
outsl
mov
add
pop
movsl
push
fidivs
xchg
jg
fistpll
add
inc
xchg
mov
cmp
mov
cmp
mov
jl
dec
cmc
pop
pop
push
das
pop
pushf
insb
loopne
and
sub
pop
test
mov
mov
call
das
pop
test
inc
sbb
or
sub
cmp
jg
jno
pop
push
jle
int3
inc
int
mov
mov
sbb
pop
punpckldq
les
mov
dec
shlb
mov
fisubl
lods
push
in
out
nop
data16
jae
push
clc
pop
and
jp
leave
ss
shl
push
cld
pop
pop
lahf
out
add
lock
sub
xchg
lea
ds
xchg
inc
movsl
loopne
ret
fistpl
mov
fld
inc
or
dec
pop
and
rclb
ja
jo
out
xchg
pop
fwait
dec
xchg
je
insb
inc
mov
das
cmpsl
xor
loope
xchg
mov
jae
insb
aaa
pop
orb
push
add
mov
adc
push
pop
mov
in
sub
lret
mov
addr16
ja
push
mov
adc
mov
out
jno
inc
xor
or
jp
push
jle
into
rorb
or
xlat
ja
pop
les
pop
jge
test
dec
cmp
pushf
lret
int
insl
xor
add
xchg
cld
je
xchg
scas
pop
pop
jne
dec
mov
arpl
movsl
push
lods
inc
or
test
push
mov
jae
int
loop
ds
jnp
insb
loope
mov
movsl
push
data16
jne
sbb
pop
mov
insl
inc
xor
add
push
push
push
add
nop
cmpsb
push
jbe
shl
nop
das
stos
int
enter
and
inc
jne
insb
fcoms
xchg
in
aam
inc
push
clc
push
insl
sub
inc
jle
push
and
je
stos
neg
sub
push
pusha
push
adc
fwait
dec
shrl
push
xor
fsubrl
inc
cli
xor
push
stos
call
jnp
cmp
inc
inc
testb
xchg
sahf
xor
mov
or
pushf
jle
testb
inc
push
jo
or
insb
pop
inc
push
fadds
test
jbe
mov
imul
push
sbb
addr16
aam
inc
push
cltd
push
mov
cltd
sbb
int
jo
test
sbb
xor
scas
mov
subl
das
pop
push
ja
mov
mov
les
mov
fisubrs
adc
mov
es
pop
cld
and
xchg
sbb
addr16
les
mov
push
sub
cmc
mov
in
test
push
addl
cs
xchg
incl
js
mov
cmp
pop
sub
jns
adc
or
mov
lcall
xor
pop
pop
movsb
xchg
mov
fsts
test
aam
mov
xor
daa
pmuludq
push
mov
dec
ja
and
push
repz
imulb
cmp
push
roll
ror
xchg
test
cmp
xlat
stos
push
inc
xchg
ret
and
aad
xchg
xchg
adc
jb
ret
jp
insb
xor
adc
in
popa
arpl
cs
and
ror
mov
loope
aaa
mov
inc
outsb
and
sub
jge
adc
and
xchg
clc
add
jnp
xchg
out
in
test
pop
add
push
outsb
mov
stos
ds
cmpsb
push
call
idivl
rcl
std
fildl
push
aas
jmp
push
pusha
movsl
dec
inc
add
mov
and
pop
mov
push
mov
push
push
aaa
pop
pop
mov
xchg
xchg
push
mov
xor
and
cmovs
inc
mov
and
push
mov
movsl
inc
jns
leave
add
push
dec
xchg
icebp
pop
or
es
out
rol
int
adc
or
cmp
pop
movsb
or
xor
inc
push
push
cwtl
dec
andl
cmpsl
movsb
addr16
and
sub
push
xor
mov
jmp
pop
inc
xor
insb
dec
adc
cmp
fsubr
push
fs
sbb
jmp
inc
mov
ficomps
xchg
inc
in
ja
cmp
icebp
xor
insb
stos
pushf
lods
lret
imul
into
jns
daa
cwtl
shlb
cmp
jl
mov
pop
dec
adc
sub
int3
adcb
push
test
push
cmp
add
push
pop
addr16
sbb
loop
dec
lock
xchg
fdivrl
data16
mov
insb
in
add
out
in
fsubl
push
movsl
lahf
inc
pop
popa
aaa
lds
testb
and
idivl
in
push
in
sbb
push
mov
push
sbb
inc
test
or
gs
cmp
iret
cmp
cmc
movsl
adc
outsb
cmp
and
lea
jg
xor
cmp
mov
adc
mov
pop
les
or
addr16
xor
push
xor
out
pushf
dec
out
and
in
stos
stc
adc
aad
jecxz
xchg
inc
dec
movsb
fldcw
std
xchg
sub
ljmp
cmp
lods
inc
xchg
cwtl
test
in
out
mov
into
addr16
mov
sbb
test
pop
enter
mov
and
test
push
xor
leave
cmp
mov
cmpsb
mov
push
and
push
xchg
pop
aaa
add
fstps
insb
inc
push
mov
adc
arpl
sbb
inc
mov
mov
mov
arpl
mov
movsb
sti
outsl
bound
das
ja
jmp
mov
mov
movsb
xchg
dec
rcll
xor
xor
jl
loop
ret
data16
or
fidivrl
mov
call
jae
ja
stos
dec
push
pop
inc
pop
aaa
hlt
xor
es
test
add
add
jno
push
icebp
shlb
add
insb
outsl
pop
daa
mov
xchg
jnp
std
inc
pushf
pop
fwait
pusha
xchg
adc
jl
jp
push
lret
dec
in
arpl
jno
mov
into
shl
mov
mov
rol
mov
sbb
adc
add
add
daa
add
adc
int3
pop
push
mov
je
push
inc
arpl
jp
inc
mov
fucomp
ja
push
icebp
test
sbb
jnp
pop
jb
test
dec
add
movsl
push
mov
sbb
pop
pop
std
fldl
fsubrl
in
push
mov
dec
xchg
lahf
lret
xor
cmp
jecxz
xchg
mov
leave
xchg
mov
xor
or
inc
jno
das
jle
and
lods
aas
loopne
loop
adc
out
scas
loop
mov
mull
sub
mov
lahf
and
fwait
inc
rcr
jae
or
mov
push
fldln2
mov
lret
lods
sbb
sbb
lea
movsb
rclb
add
xor
adc
jg
cmpsl
inc
ja
stc
aad
push
imull
in
iret
sub
inc
xchg
into
cmp
jmp
jno
jb
dec
mov
jl
pushf
lock
xchg
or
addr16
adc
outsb
out
js
cld
sub
js
enter
aas
xchg
cmp
inc
inc
lcall
push
dec
and
jg
push
fists
mov
push
pop
jne
arpl
jns
dec
inc
jo
and
ljmp
lea
pop
rcll
sbb
sbb
xor
mov
dec
jge
mov
nop
push
mov
aam
roll
jae
bound
inc
push
cltd
add
jne
test
adc
lret
pop
es
test
daa
and
out
mov
out
in
push
push
test
movsl
inc
int3
fsubs
pusha
or
test
scas
sub
inc
push
lods
outsl
sbbl
clc
dec
mov
aad
adc
jmp
ret
stc
popa
repnz
cmp
popa
cmpsl
pop
aad
test
sbbb
cmp
sub
addr16
lret
push
or
add
call
je
subb
inc
pop
fdivp
sbb
push
js
or
xchg
and
aas
push
dec
orps
arpl
xor
jno
je
lret
jnp
add
mov
push
mov
push
or
daa
gs
adc
aam
jmp
mov
jne
add
test
mov
cld
sahf
jge
lods
jae
or
pop
and
mov
fsubrl
hlt
inc
xor
jge
jb
je
sub
fwait
lods
stos
pop
mov
or
enter
mov
cs
xchg
test
lods
in
insl
inc
lret
adc
jnp
js
lods
inc
or
mov
pusha
xor
push
push
sbb
arpl
enter
repnz
negl
insl
xchg
popa
fwait
mov
sbbb
clc
les
push
int
mov
pop
das
mov
js
xor
inc
adc
adc
mov
dec
mov
rol
orl
outsl
cvtpi2ps
dec
bound
ja
mov
jmp
jecxz
int3
shll
dec
leave
addr16
rclb
jae
das
pop
daa
mov
mov
mul
mov
jno
fdiv
jg
ficoms
dec
adcb
dec
test
out
xchg
sbb
inc
pop
jns
in
insb
cwtl
xchg
ret
sub
pop
jns
adc
addr16
enter
adc
pop
lahf
jb
les
cmp
test
int3
inc
jae
mov
lretw
push
mov
lret
pushf
xchg
and
jmp
call
dec
pop
or
inc
data16
cmp
movsb
jae
scas
inc
add
dec
cmp
sahf
xchg
hlt
loop
mov
pusha
push
inc
ret
bound
icebp
popa
out
in
sbb
cmpsl
and
enter
mov
mov
or
xlat
add
and
pop
cmpl
fnstsw
js
jmp
jae
xchg
dec
mov
out
sbb
push
imul
inc
xchg
out
in
jg
dec
shll
cwtl
mov
inc
out
in
in
stos
dec
mov
and
inc
in
bound
mov
fnstsw
lret
push
imul
inc
push
sbb
sub
in
xor
js
mov
cmc
jne
in
std
and
mov
pop
out
mov
in
xor
jns
pop
xor
inc
or
jge
sbb
out
lahf
push
inc
inc
outsl
mov
inc
inc
push
cld
jo
cmp
push
pop
cmp
push
stos
sbb
sbb
mov
lock
data16
add
sti
cmpsb
mov
mov
lret
testb
and
mov
add
xchg
lods
add
xor
push
dec
jge
cmp
mov
movsb
scas
das
aaa
fldln2
push
mov
gs
cmp
add
lock
inc
out
push
popa
pop
pop
push
cmc
mov
lcall
add
aas
add
fwait
xor
movsb
xor
cwtl
sti
cs
cmpsb
dec
or
inc
cmpsl
add
cmp
test
push
add
addr16
and
cmp
mov
cs
xchg
pop
inc
mov
imul
insb
stos
add
hlt
or
or
xchg
bound
adc
add
mov
dec
mov
fidivl
repnz
dec
mov
pop
test
sub
lea
shrb
lcall
lea
push
mov
cmp
sbb
pushf
js
loopne
and
lea
test
jle
mov
dec
push
test
cs
xchg
mov
cwtl
sub
mov
sahf
mov
xor
inc
sbb
lock
xor
cmp
aaa
push
test
mov
push
ss
out
jns
mulb
cmp
mov
sub
subb
mov
mov
loop
push
push
js
xor
loop
xor
scas
movsb
cltd
push
sti
pop
inc
and
test
shll
lret
mov
xchg
das
dec
shll
iret
inc
jecxz
stos
pop
add
cmp
or
insb
and
mov
push
xor
jnp
jl
xor
loopne
test
pop
cmp
mov
jp
out
loopne
test
jp
aas
cmpsl
stc
mov
lahf
dec
lock
adc
inc
incl
ret
pushf
xchg
sarb
push
fucom
add
aaa
or
or
adc
mov
push
dec
fidivl
sbb
mov
push
stos
jne
fwait
sbbb
push
je
xchg
jns
inc
rorb
inc
repnz
lods
mov
jns
pop
adcb
and
and
push
jno,pt
cmp
call
inc
push
jle
cmp
push
jns
pop
and
mov
push
leave
mov
lods
push
in
xchg
sub
xor
shll
push
xchg
xorb
dec
pusha
int3
push
movsb
mov
adc
inc
mov
mov
mov
adc
aas
les
dec
adc
mov
movsl
repz
aas
nop
loope
xchg
ljmp
and
and
imull
lret
scas
leave
mov
dec
push
mov
loopne
or
es
cwtl
dec
dec
ja
fsubl
mov
clc
in
out
and
jge
das
sub
or
adc
or
hlt
cmp
out
add
or
inc
cld
insl
or
and
nop
and
outsl
sub
icebp
mov
testl
cli
push
hlt
cmpsb
lahf
sar
xor
mov
add
sbbb
paddsb
mov
xchg
xchg
inc
sbb
fsub
push
stos
iret
push
xchg
and
je
sahf
repnz
xchg
inc
sahf
js
inc
iret
dec
lods
sub
xor
enter
mov
jae
mov
push
adc
inc
out
inc
loop
push
mov
jle
cmpb
out
imul
rolb
orb
sarb
adc
push
push
push
stos
in
inc
or
dec
and
xchg
and
repz
pop
mov
imul
inc
cmpl
sbb
stos
out
stos
push
dec
sbb
xor
bound
push
adc
imull
mov
icebp
jne
cmp
out
xor
das
xchg
enter
es
dec
add
dec
push
es
aas
xchg
pop
cmp
iret
mov
sub
icebp
mov
mov
fisttps
ja
push
and
andb
jecxz
insl
fwait
xor
fs
jmp
out
cmp
mov
pop
jl
dec
dec
add
mov
les
arpl
test
jl
addb
push
adc
psrad
push
add
add
les
push
push
mov
xor
add
movsb
add
adc
ss
ret
pop
mov
or
shr
xorb
xlat
and
lods
fldenv
xchg
xchg
dec
cmp
mov
imul
add
or
pop
jns
dec
push
cld
addr16
pop
xor
in
bts
ret
fwait
test
into
shrl
mov
mov
inc
into
clc
insb
wbinvd
divl
lret
in
cmc
pusha
jns
gs
lods
jae
imul
inc
pusha
hlt
add
adc
adc
out
lock
mov
push
jp
lods
into
rol
aam
ljmp
sub
dec
sub
test
addr16
xor
inc
jl
aam
cmp
je
pop
lea
arpl
lods
sbb
mov
dec
lock
xor
mov
shlb
jae
pushf
lods
aaa
inc
mov
add
clc
push
pop
jo
movl
orb
std
xor
dec
icebp
pusha
dec
and
jge
sub
pusha
pop
mov
test
xchg
negb
lods
add
push
ret
gs
pop
push
cmp
in
pop
sbb
cwtl
and
cmp
xchg
insl
lret
int3
into
or
aad
popa
and
cmp
cmp
jno
pop
test
adc
sahf
xor
popf
cmp
xor
in
jle
mov
aas
dec
bound
scas
rcrl
rcr
adc
dec
mov
rcrb
and
adc
test
pop
jnp
imul
and
jge
test
push
shl
lods
outsl
roll
inc
dec
rolb
mov
cmc
aad
fbld
inc
imul
add
insb
and
cmpsl
mov
loope
lret
je
je
xor
push
or
xchg
xchg
push
jge
sti
and
jno
pop
cmp
imul
xor
ficoml
lea
fnstenv
mov
lods
cli
stc
mov
scas
mov
aaa
mov
and
mov
aad
mov
lods
mov
lahf
lods
mov
addr16
movsl
rcll
out
lods
mov
pusha
jns
in
sub
sarb
popf
sub
jne
in
lods
mov
data16
mov
daa
xchg
mov
lods
jmp
addr16
mov
adc
aad
mov
daa
mov
loopne
loope
and
mov
outsb
pop
mov
lods
pop
mov
movsb
or
scas
jecxz
xchg
outsb
lods
mov
dec
mov
adc
enter
aaa
jnp
pop
lods
mov
lods
mov
aas
pop
xchg
in
lods
or
jnp
mov
dec
mov
add
sti
out
lods
pop
pop
dec
fdivl
iret
jmp
xchg
push
das
dec
mov
xor
mov
les
jecxz
shlb
jmp
xchg
push
das
dec
mov
xor
mov
les
jecxz
shlb
jmp
xchg
push
das
dec
mov
xor
mov
les
jecxz
shlb
jmp
rcrl
dec
xchg
pop
fisttpl
jmp
and
sbb
stos
mov
stos
popa
jae
xor
jmp
inc
cmc
xlat
mov
loop
cmpsl
stos
popa
jae
xor
pusha
inc
stos
mov
gs
inc
cmc
xlat
mov
jae
mov
mov
jno
mov
xchg
shlb
popa
shll
xor
movsl
shll
mov
test
lods
mov
dec
rorb
lods
mov
mov
mov
jno
mov
xchg
shlb
popa
jo
push
jbe
lods
mov
rclb
lods
mov
mov
mov
jno
mov
xchg
shlb
popa
jo
add
inc
inc
cmp
clc
cmpsb
inc
mov
fsubl
xor
lods
mov
gs
inc
cmc
xlat
mov
js
mov
mov
jno
mov
in
lods
mov
jge
mov
lods
rcr
push
ds
or
in
lods
aaa
out
out
mov
movsb
stos
in
pop
push
inc
icebp
orl
call
popa
jbe
sahf
cmpsl
xchg
mov
jle
pusha
loopne
xchg
ljmp
push
push
out
lods
mov
mov
and
leave
ljmp
addr16
mov
adc
mov
scas
dec
or
dec
arpl
and
aas
leave
fisttpll
jmp
cmp
mov
ja
jae
fs
xor
ficompl
pop
lock
mov
jb
pop
shrl
sbb
sub
jp
test
xchg
pop
pop
data16
inc
sbb
mov
lcall
adcl
aaa
lods
aaa
lock
jl
test
pushf
push
ds
scas
push
bound
mov
push
xor
or
std
out
wrmsr
out
push
test
les
mov
popa
cwtl
dec
cld
aad
daa
scas
fldl2e
xchg
cmp
push
dec
ret
and
sbb
and
push
aas
iret
ret
fnsave
lods
sbb
mov
xchg
pop
xchg
sbb
dec
or
adc
nop
aaa
cmp
sub
push
lods
mov
adc
data16
mov
gs
mov
pop
xchg
outsw
pop
add
jns
aaa
test
data16
int3
in
arpl
or
hlt
gs
xor
push
cmp
gs
ja
jg
cmp
sub
popa
ud1
push
jecxz
popf
leave
aam
shrb
shrb
inc
es
pop
sub
mov
mov
cli
xchg
mov
and
or
sbb
loop
sub
mov
cmp
clc
pop
imul
lret
dec
mov
jle
inc
mov
inc
int
jl
mov
insb
fildl
mov
jnp
in
adc
xchg
jl
cmp
inc
mov
popa
cmpsl
mov
mov
mov
pop
data16
mov
jbe
mov
loopne
loop
out
pop
sbb
push
test
shrb
ja
pop
pop
fiadds
jo
fsubrs
data16
or
notb
mov
sub
xchg
nop
out
daa
xchg
pop
sbb
jb
ret
xor
mov
jae
jp
shrl
xchg
fdiv
mov
mov
in
pop
imul
push
dec
dec
push
fxch
xlat
sbb
push
cmp
dec
and
sbb
mov
call
jl
scas
ja
cmp
push
cs
hlt
fs
ret
int
cmpsb
pop
mov
das
loopne
mov
sbb
pusha
dec
aaa
rcrb
xchg
add
mov
shll
mov
fucomip
test
imul
lcall
jp
pop
pop
jo
js
out
pop
fnsave
xor
dec
pop
xor
pop
mov
out
lds
rcll
outsb
int3
fnstsw
lods
fisubrl
popf
push
imull
jmp
data16
inc
jle
daa
insl
cltd
adc
call
movsb
out
enter
adc
jb
add
mov
loope
icebp
mov
adc
dec
lcall
popa
stc
mov
mov
mov
mov
imul
fbld
clc
mov
lret
cmp
out
faddl
fisubl
rcrb
pop
ljmp
mov
xor
iret
mov
shlb
sub
lcall
lods
dec
aad
jae
leave
pop
loop
or
in
movntq
insl
loopne
ds
sub
and
pop
andb
ficompl
adc
pop
mov
iret
add
ja
in
daa
xchg
into
pusha
sub
fnstsw
nop
sbb
call
fnstcw
jmp
jbe
push
pop
adc
mov
in
loope
cs
push
sarl
aas
pop
shl
pop
xchg
jae
push
jo
rol
mov
mov
insl
popa
or
and
adc
outsl
mov
dec
lcall
mov
mov
testl
cmp
in
and
stos
push
ficoml
mov
sbb
out
jae
mov
mov
jmp
daa
mov
or
mov
divl
mov
icebp
sbb
mov
jno
or
mov
jbe
dec
jae
dec
mull
jmp
lret
or
aam
cmp
xor
pop
mov
mov
data16
cmpsb
add
inc
es
jo
xor
mov
sbb
imull
int
adc
xor
adc
jecxz
xchg
insl
ss
adc
xor
and
imul
sub
mov
mov
xor
mov
iret
add
shll
push
aas
inc
cmp
hlt
and
cmp
or
mull
add
jge
in
jge
shlb
xor
call
or
xor
ja
mov
mov
loope
fcoms
fwait
loope
stos
dec
fdivp
std
adc
ljmp
cmp
daa
pop
jno
fwait
aad
iret
or
dec
mov
test
mov
out
fs
ss
daa
les
xor
test
call
pop
sarb
push
xchg
out
pusha
xor
mov
jg
enter
push
pop
mov
cmp
daa
fnstenv
mov
adc
in
xchg
rcl
adc
jb
xlat
and
es
and
repnz
cmp
mov
dec
hlt
push
test
aad
outsl
ds
jnp
mov
cmpsl
adc
jle
jb
sub
jo
adc
xor
mov
aas
pusha
mov
mov
mov
hlt
mov
rcr
inc
inc
push
adc
sub
push
jb
dec
and
lea
imul
addr16
jg
lock
rclb
dec
rep
stc
imul
out
pop
data16
cmp
push
mov
fdivrp
add
xchg
xor
addr16
insl
mov
cmp
sub
cmpsl
shlb
out
in
jg
jbe
mov
insb
test
nop
ret
ret
popa
and
jnp
sub
push
mov
ret
push
mov
loope
int
sub
add
outsl
xchg
add
arpl
mov
mov
repnz
dec
cwtl
sub
push
repnz
sbb
pop
or
int3
or
add
dec
mov
xor
mov
mov
mov
iret
xchg
pusha
sub
or
cld
and
xchg
sbb
fcomps
ret
or
mov
stc
insl
pop
aad
jno
pushf
mov
fisubrs
subb
lds
imul
cltd
movsl
xor
fincstp
cmpsb
outsl
pop
xchg
clc
lock
stos
mov
addr16
sub
cmova
neg
pop
jae
and
in
addr16
mov
ret
in
pop
test
add
and
inc
jns
hlt
test
movsb
insl
pop
lods
lods
aad
push
das
xchg
or
mov
push
cmp
addr16
sbb
inc
in
pop
mov
test
ret
mov
pop
fldt
mov
test
or
outsl
mov
call
mov
fdiv
sbb
stc
addr16
xchg
push
scas
aam
mov
fisttpl
push
mov
adc
arpl
xor
sub
jmp
scas
js
push
in
popa
add
xchg
sub
pusha
dec
sti
andb
or
sub
or
sub
push
pop
lods
subb
dec
jp
mov
mov
test
sbb
add
pop
jmp
outsb
jbe
inc
mov
xchg
cmp
mov
xor
out
jae
fstp
stos
cmpsb
enter
jecxz
pop
test
sahf
adc
mov
in
test
arpl
in
dec
out
js
daa
test
ret
stos
lret
jne
sbb
lea
fsubl
pop
or
in
inc
lcall
nop
ret
xchg
es
insl
inc
mov
insb
xchg
popf
imul
aam
jecxz
in
jecxz
xchg
jmp
cmpsb
jmp
dec
mov
inc
xchg
mov
fisubrs
xor
xor
add
or
jmp
js
gs
push
mov
and
daa
xor
jmp
jl
aas
iret
sti
mov
bound
pop
sub
das
inc
jno
push
add
xlat
fildl
pop
jp
mov
dec
repz
imul
gs
insb
or
mov
inc
pop
int3
dec
fucomp
cmp
test
fwait
sub
and
test
mov
sub
notl
int
jmp
out
test
rcrl
cmpsb
jnp
out
cmpsb
cmpsb
lods
pop
dec
add
daa
imul
fldcw
add
icebp
and
mov
mov
lods
mov
add
in
rol
mov
cwtl
fildll
sar
test
jl
xchg
xor
cmp
push
xchg
inc
pop
bound
jb
lods
inc
mov
cmp
daa
mov
mov
arpl
out
and
outsb
lock
aaa
stc
fnstcw
dec
mov
jecxz
rclb
test
test
test
mov
jmp
test
mov
loop
popa
adc
xor
dec
mov
stc
and
push
fldt
push
shll
adc
pop
mov
adc
insb
pop
and
mov
inc
sub
jmp
mov
fmull
loope
push
and
push
shl
mov
out
lahf
arpl
test
cmp
les
mov
push
cltd
add
out
xor
dec
add
push
pop
sbb
inc
pop
and
cmpl
pop
mov
movsb
mov
xor
dec
test
fcomp
mov
test
pop
insb
filds
roll
or
out
aad
arpl
push
sbb
aam
das
ud0
jecxz
test
call
pushf
movb
xchg
leave
push
cmpsb
subl
movl
outsb
faddl
mov
mov
cltd
in
repz
scas
lock
rcr
and
mov
sub
sbb
scas
fdiv
jmp
sbb
mov
sbb
xor
push
jae
cmc
ffreep
insb
mov
aam
arpl
pop
test
fcompl
push
push
scas
repnz
sahf
and
aaa
pushf
inc
int3
imul
icebp
out
dec
sub
inc
adc
mov
xchg
jmp
idivb
fimull
inc
or
nop
add
data16
repnz
sub
call
cmpsb
daa
push
pop
xchg
push
aam
xor
add
jge
sahf
pop
loopne
pop
jne
leave
addr16
imul
inc
fisttps
inc
dec
das
and
icebp
pushf
xchg
bnd
cmp
mov
test
push
mov
gs
mov
push
in
stc
sbb
outsl
out
loope
jge
in
dec
les
jecxz
jecxz
call
add
shl
imul
add
hlt
and
insl
es
add
mov
or
pop
xchg
in
cmp
adc
push
and
aas
sub
mov
cltd
push
aaa
inc
mov
lret
sarb
cmp
cmp
rorl
mov
outsl
and
scas
gs
stos
popa
xchg
sub
inc
in
or
loopne
cmpsb
or
add
xor
xor
adcb
cmc
testb
test
in
fistpll
shrl
loope
pop
inc
push
sbb
pop
stos
cli
movsb
sub
sub
inc
mov
jne
jge
mov
cwtl
addb
mov
clc
adc
aaa
pushf
es
jae
inc
or
stos
int
or
loopne
jae
aas
lcall
push
jg
std
movsl
jp
hlt
mov
inc
mov
mov
fcomip
inc
std
lods
mov
imul
addb
xor
mov
rolb
punpcklwd
mov
out
scas
es
xchg
movsl
in
dec
mov
rorl
inc
sub
mov
and
adc
repz
and
lcall
jbe
and
imul
icebp
xchg
mov
imul
int
call
es
int3
mov
das
push
mov
out
arpl
mov
popf
ljmp
cmp
lods
test
add
hlt
imul
jg
and
jno
add
insb
test
pusha
mov
pop
push
daa
jbe
jae
inc
or
pop
icebp
pop
mov
in
popf
sub
lea
dec
stc
mov
aas
clc
in
add
jne
xor
mov
in
mov
addr16
add
xchg
popa
fcomps
insl
out
adc
loope
add
push
jmp
sub
add
mov
call
sub
orb
lea
shlb
outsb
dec
in
add
push
jbe
pusha
or
in
sbb
in
test
and
or
sbb
add
dec
or
test
sbb
stos
jg
xchg
or
mov
sub
stc
xchg
lret
js
fmul
cmp
loop
sarb
xchg
add
fs
inc
pushf
cltd
and
mov
inc
fwait
mov
test
icebp
push
clc
rol
inc
inc
inc
in
cmpsl
lock
test
jne
jg
and
orl
pop
push
rcl
in
in
mov
cmp
cmc
add
cwtl
scas
sub
adcl
xchg
or
push
add
negl
sub
addb
stos
xor
shll
xorl
inc
dec
sub
xor
pop
jg
outsb
out
add
xchg
inc
and
push
movsb
es
sbb
inc
test
cmp
jnp
jns
push
lret
pushf
aas
xchg
and
mov
xor
cmp
icebp
notb
pop
and
test
xchg
or
inc
mov
sub
aas
pop
sti
imul
shll
xchg
dec
mov
hlt
lret
arpl
jbe
enter
shll
test
sbb
test
lock
cmp
xor
incb
das
sbb
divb
mov
aas
shrl
sub
and
jge
add
outsb
xorb
mov
imul
aam
and
mov
mov
adc
add
hlt
adc
pop
repz
cmp
xchg
xchg
pop
jle
clc
adc
mov
lock
mov
out
adc
hlt
and
stos
add
sti
xlat
test
adc
add
pop
and
shl
mov
scas
clc
push
add
out
inc
xor
xor
fdivs
out
or
and
fbstp
jae
push
sbb
sub
mov
mov
es
addr16
cs
mov
imul
loope
clc
push
je
popf
add
pop
mov
jmp
sub
vorps
sbb
lahf
push
mov
adc
xchg
out
mov
repnz
add
push
mov
pop
divl
mov
or
scas
add
bound
cmpsw
mov
inc
femms
add
push
sbb
mov
cmc
clc
js
fadds
mov
jnp
add
mov
push
popl
cmp
mov
push
cmc
andb
sbb
lods
jnp
or
add
pcmpeqd
xor
cmc
in
into
or
sub
sbb
lods
and
pop
mov
xchg
subb
cwtl
adc
xor
adcb
jp
repz
ljmp
mov
mov
inc
mov
adc
push
stc
adc
fcmovne
enter
lret
adc
mov
push
jo
ja
xor
cld
sbb
in
push
cltd
rcrb
leave
xchg
push
fnstcw
dec
xor
gs
inc
or
lock
dec
ljmp
sub
inc
add
test
cwtl
mov
or
dec
inc
shll
bound
mov
push
add
lcall
int3
push
jo
inc
subl
and
mov
mov
adc
lret
scas
fcoms
lret
sub
push
xchg
dec
ja
jne
add
hlt
add
add
inc
mov
mov
xor
loop
mov
outsl
ret
fldenv
jl
lock
in
sub
enter
adcb
dec
or
and
pop
fsts
cmp
push
or
arpl
sub
clc
nop
mov
in
sub
push
hlt
jb
push
adc
fcoms
addb
mov
in
dec
mov
xchg
cmp
fxch
addb
cmovge
pop
jmp
xor
mov
sbb
es
xchg
mov
sbb
and
pop
dec
lods
out
xor
mov
gs
sbb
jg
adc
inc
xchg
dec
rcrl
adc
in
mov
jns
xor
pushf
and
rclb
push
cmpsl
roll
dec
add
mov
fildll
jne
inc
call
xchg
mov
and
arpl
test
or
notb
mov
add
aas
stos
jg
sbb
addr16
and
sbb
rcrb
dec
fdivrs
cmc
iret
pop
les
js
jmp
xchg
inc
inc
ret
jecxz
pop
hlt
mov
add
jb
imul
mul
jns
js
sbb
rorl
add
xorl
in
inc
xchg
pop
lock
ret
jmp
dec
mov
aad
jae
das
add
arpl
xchg
dec
shlb
mov
xchg
testl
jae
mov
mov
add
call
jg
pop
adc
int3
loopne
xor
mov
mov
popa
sub
stos
and
cmovae
pusha
sbbb
inc
and
in
inc
add
adc
ljmp
test
xor
inc
mov
out
cld
lret
xchg
mov
add
xor
testl
lods
mov
fcompl
adc
lret
mov
cli
sbbb
sbb
clc
mov
loop
popa
pop
lahf
outsl
add
pusha
fcoml
mov
fwait
add
inc
adc
xor
inc
jns
mov
xchg
ficoms
test
out
dec
psubsb
pop
mov
not
mov
mov
add
adc
push
call
and
add
push
mov
call
and
mov
test
je
mov
jne
pop
ret
dec
out
in
jg
loopne
and
push
sbb
int3
enter
adc
shlb
and
rolb
out
cwtl
and
pop
repz
push
or
and
add
loopne
popa
mov
std
leave
and
inc
sbb
lcall
xlat
mov
sub
pusha
call
mov
jp
add
push
popf
mov
adc
in
pop
cli
faddl
lret
xor
pop
rol
mov
or
int3
sub
xor
mov
adc
jbe
mov
cwtl
shrb
sub
lods
jns
sbb
push
andb
int3
mov
add
xor
scas
mov
inc
sub
jo
and
inc
lcall
add
or
loopne
incb
cmp
fistps
jno
mov
and
ds
add
icebp
ljmp
adc
in
inc
jno
clc
lahf
fwait
dec
adc
nop
or
imul
mov
mov
mov
dec
add
push
and
cmpsl
xor
jge
push
dec
push
movsb
addb
cli
shl
bound
stos
jl
add
fwait
push
adc
xor
add
mov
rcrb
shrb
pusha
xor
or
mov
cmp
fdivs
or
inc
push
xchg
add
mov
mov
dec
leave
shll
cmp
mov
cwtl
scas
pop
call
push
add
mov
or
lea
pushf
movb
adcb
out
xor
mov
fdivl
cwtl
adc
outsl
adc
mov
or
js
fwait
cwtl
or
cmpsl
cmp
add
imul
add
xor
repnz
in
popa
shl
jg
dec
pop
scas
mov
sbb
push
adc
or
pop
inc
movsb
mov
add
ret
jl
repz
jns
add
inc
pop
incb
pop
inc
pop
push
push
push
sbb
in
mov
or
xor
jl
lcall
rolb
pushf
xchg
sbbb
mov
adc
and
out
pop
or
inc
nop
jmp
mov
adc
add
fistl
in
sub
dec
xlat
cs
cmpsl
add
lea
repnz
and
fnsave
dec
loopne
sti
mov
test
add
cmp
shr
adc
outsb
stos
in
test
mov
mov
jbe
mov
std
mov
enter
inc
mov
mov
jecxz
mov
popf
xchg
movsl
push
cmp
add
sti
leave
sbb
dec
mov
sub
cld
jl
or
aam
add
rcrl
out
out
dec
fcoms
cmp
add
dec
arpl
or
cli
mov
scas
add
cmc
insb
es
jo
mov
xchg
add
sub
outsb
pop
ror
pusha
cmp
test
lret
sub
icebp
les
std
or
cmp
js
test
or
divb
enter
jmp
mov
loopne
push
sbb
push
push
mov
cmp
pop
mov
ljmp
insl
add
and
add
xor
pop
mov
xchg
and
dec
les
dec
sub
xorb
and
popa
inc
sar
ja
add
clc
mov
mov
fistpl
je
push
pop
stos
outsb
and
out
inc
dec
sti
jl
pusha
dec
mov
xor
push
fistpl
inc
add
jmp
and
mov
ja
popa
pop
dec
or
fstl
fs
push
cli
push
int
add
adc
pusha
jl
jae
mov
or
xchg
xor
daa
cmp
inc
add
xchg
inc
movsb
ljmp
xchg
mov
sbb
mov
mov
je
call
pop
or
imul
jg
sbb
or
loopne
sbb
outsb
adc
add
outsb
add
in
icebp
test
mov
mov
icebp
fwait
ds
lods
or
out
mov
and
mov
cmpsb
inc
call
add
adc
push
fwait
add
ret
scas
fcoms
pop
mov
or
xchg
xlat
fdivrs
sbb
dec
dec
imul
test
or
daa
adc
dec
incb
sahf
lock
movsb
cmpsb
add
cltd
mov
push
repnz
xor
in
xchg
jns
cmp
cld
aaa
push
jnp
rclb
imulb
xor
int3
and
or
scas
daa
rorl
adc
jle
les
shlb
enter
jmp
jmp
in
sub
std
ret
add
pinsrw
sub
hlt
xchg
nop
push
ja
fnstsw
stc
inc
dec
add
xor
or
mov
sub
pop
push
aam
inc
cmpsl
push
pushf
jo
iret
jns
daa
add
cwtl
mov
sub
pop
push
or
adc
std
and
inc
mov
add
ret
push
mov
gs
add
jo
lret
mov
cmp
push
mov
lods
adcl
data16
cld
dec
popa
adc
add
mov
push
xorb
fnstsw
aad
out
scas
adc
cmpsb
or
sbb
std
cwtl
xor
je
nop
or
stc
lahf
nop
movsb
insb
dec
test
rclb
loop
jp
or
mov
jmp
add
jno
in
adc
das
push
or
jecxz,pn
sub
mov
jne
mov
mov
jmp
xor
loopnew
loop
orb
dec
push
cwtl
lahf
rolb
and
xor
sbb
test
pushw
or
jae
sbb
cvtps2pd
nop
add
fwait
out
lcall
ret
push
enter
cmp
mov
push
andb
mov
jns
pop
leave
and
mov
fists
inc
and
insl
shrb
add
mov
jbe
int3
test
leave
push
dec
mov
add
mov
daa
sub
jae
pusha
cwtl
xchg
mov
sub
mov
cmc
rcll
jp
jg
add
mov
lahf
mov
sbb
adc
sub
mov
mov
push
inc
xor
push
icebp
lock
shl
mov
push
das
imul
cwtl
add
pop
aad
push
pusha
ret
std
or
rclb
inc
imul
cmc
repz
out
inc
ret
jnp
or
in
ds
cmpsb
lea
incl
and
js
icebp
fcoms
test
pop
ljmp
bound
sbb
cmc
addr16
movsb
push
loope
call
push
mov
xor
or
xchg
pop
mov
pop
jne
fidivl
out
cmp
in
mov
xchg
cmp
xor
adc
or
sahf
inc
xchg
nop
lret
mov
dec
mov
ljmp
dec
adc
adcb
std
jecxz
jl
shrl
sbb
jmp
jbe
xchg
or
push
lahf
orb
arpl
xor
inc
and
rclb
out
cwtl
leave
cmp
mov
sub
mov
in
jge
add
cmp
dec
ror
inc
cmc
adc
jnp
and
rcl
mov
into
push
xchg
lret
ret
insl
mov
and
pop
loope
lret
inc
pop
jnp
fidivl
fs
mov
inc
ret
aam
int3
sbb
mov
mov
mov
inc
mov
add
xchg
leave
lret
popa
add
aam
lea
pop
fwait
stos
js
push
iret
push
xchg
ficoml
movsb
enter
nop
or
and
popf
or
mov
ret
sub
sub
outsl
sub
or
push
inc
or
and
insb
inc
testb
sbb
fwait
je
dec
xor
bound
fs
insb
push
rorl
xchg
cmp
adc
js
mov
dec
movsb
enter
sbb
jne
lock
rclb
xor
inc
inc
dec
ss
xchg
ja
adc
sbb
mov
and
add
dec
mov
cmp
sub
in
les
push
push
fnstcw
mov
je
lret
test
movsl
or
stos
xchg
testb
outsb
repz
sarb
roll
cwtl
sbb
cmp
xchg
xor
or
xor
jnp
xor
dec
sbbl
jbe
enter
popf
test
cld
addb
adc
and
aam
pop
mov
inc
movsl
pop
pushf
inc
shrl
lods
pop
pop
add
lea
push
aam
pop
jne
movb
sbb
push
sarb
testb
inc
outsl
inc
cld
add
mov
mov
xchg
adc
fwait
dec
jne
inc
sbbb
fstl
add
andl
and
push
or
pop
nop
js
iret
inc
lcall
adc
das
xchg
sbb
jns
jno
adc
sub
cmc
mov
mov
fdivs
push
xchg
mull
shl
mov
movsb
in
inc
cmpsb
add
cmpsl
cmp
sbb
dec
add
ja,pt
xor
int
les
sbb
jb
sbb
push
orb
mov
hlt
jnp
pusha
jae
aas
bound
scas
pushl
adc
push
sub
add
mov
repnz
lahf
imul
add
mov
dec
add
test
repnz
stos
mov
cs
cmpl
shrb
add
clc
adc
testl
push
or
cltd
pushf
stc
cmpsb
sbb
loopne
pop
inc
inc
dec
mov
xchg
or
sub
movsb
andl
or
jae
scas
repz
ds
mov
sub
nop
jo
jmp
inc
repnz
or
scas
outsl
lcall
out
into
lret
ret
jnp
pop
scas
ds
xchg
inc
ror
mov
pop
xchg
jo
addb
jb
inc
ficoms
jne
sbb
icebp
and
das
pop
pusha
and
push
adc
loopne
cmp
insb
add
adc
mov
sbbb
out
movsb
shlb
jo
add
loop
scas
or
sub
dec
jo
xor
lock
addb
inc
repnz
dec
inc
and
xor
pop
and
fnstenv
popl
dec
arpl
and
xchg
adc
cmp
mov
or
push
inc
add
mov
imul
cmp
jnp
cwtl
xor
scas
in
inc
push
cmp
test
fadds
sub
jb
cmp
and
enter
xchg
and
les
je
roll
andb
or
and
loopne
insl
orl
jecxz
sub
mov
icebp
and
push
or
flds
xorl
sub
pusha
and
roll
adc
insl
out
pop
jle
inc
mov
inc
inc
ja
divb
mov
cld
pop
mov
pop
jp
add
and
push
mov
adc
call
or
cmovns
lods
and
mov
pop
in
adc
in
pushf
adcb
movsb
outsb
mov
sub
bound
sub
xor
xchg
add
mov
and
hlt
les
pop
mov
out
cmpsl
add
or
data16
in
dec
cmp
test
dec
sbb
lret
cmp
or
cwtl
pop
sub
call
jle
add
push
add
movsb
ror
rclb
data16
dec
cmp
movsb
shlb
outsb
inc
adc
cmc
mov
cmp
aas
dec
jo
mov
ja
lock
add
push
jne
lcall
into
sbb
adc
cld
rol
les
xchg
pop
inc
fisttps
test
mov
and
rcrl
mov
jmp
lea
xor
add
fisttpll
ret
mov
cmpsb
insb
in
iret
mov
xchg
shr
push
inc
mov
mov
ret
pop
xor
inc
inc
imulb
std
push
in
les
lods
ja
cwtl
movsb
or
push
jb
adc
std
das
add
sub
pop
push
push
movsb
and
dec
mov
push
sub
fsubl
sbb
fcomp
dec
mov
pop
es
jmp
and
clc
dec
rolb
push
int3
add
insb
or
loope
jae
daa
iret
fwait
nop
cld
pop
mov
and
cwtl
out
xchg
in
adc
imul
and
mov
loop
pop
ret
sbb
xchg
mov
in
add
inc
sub
pop
aad
cmpb
das
call
mov
fsubrs
lock
mov
mov
push
pop
test
adc
flds
jecxz
movsb
and
xchg
pushf
lret
sahf
test
dec
add
dec
shrb
inc
mov
mov
jecxz
data16
add
adc
cmp
xchg
dec
jno,pt
paddb
mov
push
int
into
and
psrlq
out
adc
ja
cmp
xchg
mov
mov
mov
cld
inc
je
or
insl
mov
lods
pop
jne
or
loope
data16
inc
mov
rorb
jle
popf
or
cmp
xor
lods
daa
pop
xchg
and
ret
movsb
js
add
inc
cmpsl
add
ret
in
add
out
jb
mov
mov
es
cld
daa
mov
and
ficomps
inc
add
fiadds
mov
jo
enter
cmove
sbb
test
sbb
jae
xor
jo
stos
insl
inc
mov
mov
in
popa
lret
adc
mov
push
xchg
dec
fmull
xor
fdivs
jl
xor
enter
into
clc
test
je
int3
rorb
pop
xchg
push
sub
cmp
add
lea
cs
and
nop
js
xor
pop
adc
inc
loop
mov
test
and
dec
rorb
dec
pop
jg
xor
mov
sbb
imul
cmp
pop
jecxz
push
outsb
mov
fists
fwait
xchg
orl
mov
cld
pop
call
addb
fwait
add
mov
jl
addb
scas
sub
aam
push
repnz
movsl
jp
add
cmp
ja
pop
stos
jae
fs
jge
adc
dec
inc
xchg
jle
test
pop
adc
fmull
pop
loope
add
and
adc
repz
sbbb
sub
xchg
lcall
cmp
mov
orb
add
mov
mov
leave
outsl
xor
jecxz
repnz
inc
mov
nop
pusha
ret
je
pop
inc
push
sbb
sahf
mov
div
cmp
push
lret
push
mov
jb
jp
clc
cmp
lcall
sahf
sub
xchg
xor
scas
adc
push
inc
in
in
mov
out
or
sbb
fwait
adc
rorb
mov
cld
add
add
hlt
in
mov
movsb
push
clc
add
shrb
aam
dec
repnz
outsl
mov
xor
test
mov
insl
push
inc
or
call
cld
nop
sti
jmp
hlt
and
add
jge
push
push
push
lcall
enter
add
pop
mov
or
call
loop
pop
fildll
ror
test
adc
sbb
inc
ja
cmc
fists
inc
ror
cwtl
rclb
cmp
repnz
fcompl
je
lahf
mov
sbbl
movzbl
push
jge
dec
fs
add
pusha
sbb
shrl
jmp
jle
popa
add
push
push
inc
add
lock
xchg
pop
xorb
push
repz
enter
cmp
dec
hlt
mov
out
into
add
jbe
insb
mov
rol
pop
cmp
call
jne
lahf
test
sbb
sub
mov
imul
test
add
in
pushf
rcl
mov
sahf
ret
xor
pop
pop
and
inc
or
roll
inc
in
pushf
popa
insb
push
insl
mov
dec
inc
or
ret
ret
jo
sub
adc
sbb
cld
pop
inc
add
jnp
sub
inc
pop
add
movsl
ja
and
sub
imul
subl
adc
jo
mov
sub
insl
mov
mov
je
ljmp
sbb
inc
vsubps
addb
mov
fdivrp
sub
jbe
int
adc
pop
outsl
pop
mov
or
pop
and
in
lods
icebp
add
add
nop
mov
dec
xchg
insl
je
das
aam
xor
and
mov
daa
jb
cld
inc
dec
popa
dec
lret
sbb
mov
add
pop
sub
mov
pushf
andb
mov
fcoms
adc
dec
and
fidivs
sbb
mov
shlb
outsb
mov
rclb
dec
insb
add
jo
add
add
push
popa
mov
imul
xchg
xlat
add
js
les
clc
cmpsb
mov
jl
lret
lock
and
dec
pop
push
and
cwtl
fidivs
adc
and
cmp
int
sahf
loopne
mov
jmp
jmp
add
addr16
xchg
cwtl
pop
jl
adc
rcll
scas
push
je
add
addr16
push
xchg
pop
add
dec
aam
mov
mov
mov
or
test
sub
mov
test
sub
loopne
repz
sub
or
mov
leave
jne
adc
cmp
jns
lods
call
or
jmp
add
faddl
jno
and
xchg
rcl
icebp
mov
inc
adc
hlt
sub
shll
add
test
jle
mov
or
out
xchg
push
fidivl
cmpsb
push
jno
jl
xchg
shrl
xor
adc
aam
mov
fbld
inc
cmp
mov
scas
das
pop
dec
add
ljmp
lock
inc
adc
loopne
repz
add
out
and
adc
fnstcw
or
jo
pop
cs
loop
out
xor
jle
jl
mov
in
movsb
inc
mov
sarl
push
js
mov
add
in
cmp
cmc
add
shrl
dec
dec
xor
arpl
jns
adc
and
ret
and
les
cmp
xor
jbe
cmp
das
mov
or
push
aam
stc
push
mov
mov
or
pop
aas
mov
repnz
add
mov
cmp
and
in
mov
popa
mov
and
inc
jle
push
jg
xchg
clc
sbb
incb
shll
int
adc
arpl
mov
jl
jge
add
scas
add
dec
add
imul
mov
add
push
in
loopne
and
clc
dec
add
arpl
xor
pop
or
inc
fcomi
jns,pt
das
icebp
push
cmc
cmp
sub
inc
or
ljmp
pop
int3
adcb
dec
xchg
stc
test
mov
or
lock
add
jge
add
and
js
mov
inc
pop
mov
mov
pop
sub
lock
mov
and
dec
adc
lcall
cmp
rsqrtps
mov
jne
clc
test
mov
adc
xchg
shrl
xchg
lock
mov
cmpsb
popa
clc
sbb
jl
pusha
stos
inc
cmp
cbtw
add
es
push
mov
daa
sbb
mov
add
mov
xchg
dec
sbbb
leave
or
mov
lret
inc
xchg
orb
and
out
mov
push
mov
lock
jnp
sub
sub
or
xchg
addb
aad
push
dec
test
shlb
pop
xchg
adc
ficoml
pop
lcall
sbb
push
jecxz
add
and
cwtl
mov
sub
movsb
sbb
xchg
ss
inc
push
cli
or
lods
mov
and
pop
shr
push
dec
dec
rolb
sti
roll
jno
test
mov
jns
das
or
out
insl
add
ret
sub
xor
int3
je
push
scas
pop
mov
pop
add
pushf
adc
xchg
push
leave
fwait
adc
pop
xchg
sub
and
in
xchg
or
call
cwtl
adc
out
push
into
jns
movsb
mov
sbb
int
enter
sbb
push
mov
mov
dec
rcrb
into
lock
xor
fcos
fsub
std
or
gs
push
xlat
push
push
and
push
test
push
mov
je
push
aas
mov
std
mov
divl
test
mov
push
shrb
inc
inc
adcb
mov
cld
ret
in
jbe
mov
jl
cld
je
test
pop
shrb
xchg
lret
daa
add
cmp
add
pop
push
sbb
decl
outsb
add
pop
in
sbbb
movsb
pop
add
orl
inc
sub
pusha
sub
add
xor
sbb
popf
and
inc
sub
cwtl
stos
cwtl
and
clc
lods
add
inc
pop
jb
out
iret
icebp
addl
cld
mov
cmpsl
orb
testl
inc
pcmpgtw
cmp
sub
or
pop
inc
pusha
fiaddl
dec
enter
movsb
inc
cmc
or
popa
daa
cwtl
push
enter
out
int3
ror
add
shlb
push
enter
mov
add
in
and
add
push
or
jo
les
fs
sbb
shl
icebp
and
sbb
xor
repnz
adc
aas
mov
rolb
test
les
dec
sbb
cmp
mov
stc
push
xchg
add
mov
or
push
sbb
cld
inc
pop
js
inc
mov
xchg
xor
flds
out
or
je
sub
sub
fstpl
ret
or
test
into
fs
inc
sbb
add
mov
add
adc
mov
add
cs
insb
iret
or
les
cmpb
in
and
fcomps
xchg
mov
inc
and
ret
jl
popl
and
sbbl
dec
fucomip
das
sbb
out
pop
dec
or
sarb
inc
xor
or
je
test
add
or
mov
or
sahf
pop
adc
xchg
or
int3
inc
cmp
mov
cld
jae
pop
push
fs
or
add
shrl
clc
xchg
data16
jns
add
loop
mov
loope
or
sub
fdivrs
add
movsl
pop
outsb
jp
push
leave
add
sbb
aad
lret
sbb
pop
pop
pop
andb
inc
shll
fnstcw
pop
sbb
inc
sbbb
and
pop
ret
xor
adc
jbe
cmp
bnd
inc
mov
outsb
inc
and
mov
les
jp
sub
inc
jnp
jns
fcoms
lea
clc
dec
adc
add
pusha
inc
push
dec
repnz
inc
mov
fsub
out
shrb
js
cli
fs
add
push
push
mov
dec
mov
pop
insl
out
cmp
lods
xchg
and
xchg
inc
cli
lds
dec
movsl
bnd
inc
push
mov
dec
mov
cmp
pusha
sti
and
clc
jae
shl
inc
xchg
es
sub
push
mov
das
adc
lock
xorb
xchg
fcomip
add
or
in
stc
xchg
xchg
and
add
xchg
bound
cli
or
jge
mov
sbb
rcrb
pop
ret
add
lret
pop
inc
and
loopnew
or
sbb
popa
add
push
add
xchg
cwtl
xchg
mov
ljmp
into
orl
in
daa
mov
icebp
xchg
test
leave
clc
psubw
int3
pusha
push
mov
jecxz
lret
and
fidivs
adc
inc
lcall
ret
insb
push
in
add
mov
insb
and
sbb
sbb
orb
test
jmp
cmp
xchg
dec
rcrb
push
or
hlt
cmp
ss
push
push
pop
shll
sub
add
ret
xor
cwtl
scas
mov
lock
xor
scas
mov
rcrl
int3
sub
jbe
insb
xor
xor
pushl
add
enter
xchg
sub
pop
cmp
jnp
push
xor
cmc
xchg
les
cs
sbb
cltd
lock
pop
scas
xchg
sbb
ret
jns
outsl
jnp
add
out
imul
pop
push
pop
or
dec
das
mov
bound
subb
imul
cmp
lds
lret
mov
scas
inc
stos
adc
mov
decl
mov
add
clc
cmp
insb
jp
jb
dec
into
pop
xchg
sbbl
scas
add
ss
dec
mov
mov
daa
jnp
jo
inc
or
xor
and
lock
inc
add
inc
das
repz
dec
in
into
jns
sub
jo
inc
lret
jbe
icebp
notb
cwtl
push
int3
sub
mov
test
sti
jo
outsb
popa
lret
adc
and
push
std
das
cmpsb
inc
repz
sub
and
jo
inc
jne
sub
fsubr
add
roll
xchg
test
inc
pusha
jb
pop
aam
fiadds
pop
mov
jp
push
ljmp
lock
inc
add
pop
call
out
dec
xor
aaa
in
adc
shl
repz
mov
mov
xor
stc
jbe
test
enter
cld
or
ja
cwtl
sub
imul
xchg
xor
add
sbb
aad
and
xor
andl
sub
test
enter
test
add
xor
sbb
repz
js
xchg
call
mov
adc
movsb
cmp
fs
cmp
pop
and
inc
or
xor
mov
add
xor
mov
mov
sub
dec
mov
filds
pop
lcall
inc
bound
es
stc
dec
test
sahf
leave
xchg
in
clc
sub
inc
xor
sbb
cmp
jne
cli
test
sub
mov
aas
add
das
lahf
mov
add
add
dec
ljmp
gs
ret
fidivs
repz
ja
nop
int3
in
scas
rcrl
fld
mov
cmp
mov
add
fisttps
divb
push
in
push
jnp
loope
jg
xor
or
inc
pop
ret
pop
in
jno
inc
and
pop
aas
inc
test
inc
xor
add
jns
cmc
lods
sbb
out
jo
add
in
sbb
cmp
cwtl
rclb
ja
mulb
push
dec
mov
push
cwtl
add
stos
adc
lea
mov
rcll
cltd
insl
mov
push
ja
sbb
les
andb
sub
loope
or
jno
inc
lahf
jbe
sahf
or
outsl
add
add
cmp
or
int3
add
imul
jo
add
add
xchg
add
adc
and
adc
xor
dec
imul
testb
les
and
add
iret
push
int
sub
xchg
xor
adc
or
mov
jmp
test
inc
lahf
push
mov
adc
sub
rcrb
mov
lea
xchg
inc
jl
arpl
sub
negb
or
les
cmp
sbb
fisttps
pop
test
aam
or
or
sbb
or
test
or
add
add
or
cmpsl
imul
scas
outsl
or
loope
jp
add
sbbb
mov
mov
inc
push
int3
cmp
cltd
cmpsb
test
imul
push
outsl
rcll
and
orb
adc
rcrl
adc
sbb
or
int3
push
fdivrl
add
sbb
cld
xor
jno
int3
sbb
mov
negw
adc
pmaddwd
call
or
add
or
jae
insb
pusha
xor
mov
jecxz
push
sar
mov
mov
mov
or
lret
cmp
mov
xchg
ja
in
adc
jb
or
jl
and
dec
dec
xor
xlat
adc
mov
subb
jns
dec
pop
fmull
fisttpll
pusha
and
jle
cmp
mov
lret
and
sbb
or
cmp
mov
aam
add
cltd
mov
imul
cld
cmp
invd
stc
cli
or
adc
ja
outsb
sar
lods
test
dec
inc
push
adc
mov
roll
pusha
inc
and
mov
imul
cld
push
arpl
mov
xor
add
loop
loope
push
test
or
ds
add
or
lods
out
xor
loope
lea
inc
cmp
cmpl
movsl
add
scas
pusha
xsha256
cmpsb
xchg
fisttps
push
sahf
call
std
push
mov
mov
pop
pop
loopne
and
jae
ror
and
pop
mov
push
ret
clc
lea
rol
pop
lret
addr16
mov
xor
adc
mov
scas
dec
mov
inc
insl
pop
pop
pop
xor
xor
and
stos
jp
mov
inc
lea
mov
js
roll
leave
push
out
or
insb
push
fcompl
jno
lock
pop
sar
loopne
dec
movb
mov
stos
jns
push
push
outsl
pop
add
mov
fiadds
ret
add
cmovg
jl
mov
adc
les
push
jmp
sti
mov
in
mov
mov
jo
inc
jae
pop
add
xchg
and
sti
test
push
cmp
clc
add
out
mov
mov
jnp
pop
and
add
cmpb
sbb
adcl
movsb
dec
out
mov
cmp
inc
mov
adc
pop
sti
cmp
cmp
cmp
sbbb
xor
roll
pop
jbe
add
jb
fbld
and
enter
cmp
push
cmp
add
dec
mov
fadds
in
pop
flds
jbe
add
sbb
into
inc
push
jo
roll
bound
xor
test
and
imul
lea
lret
fdiv
stos
nop
push
dec
mov
sbb
adc
outsb
fistps
lock
add
jo
aad
in
out
pop
cmp
add
js
push
or
and
hlt
jb
jp
daa
lea
add
cmp
add
mov
je
mov
push
pop
movsl
mov
add
jge
mov
inc
jle,pn
test
mov
add
push
sbb
jge
loope
sbb
dec
mov
sti
xchg
idivl
cld
ret
cmp
add
mov
adc
int3
cmpsb
cwtl
and
xchg
add
mov
pop
or
add
mov
pop
add
sahf
ljmp
add
pop
inc
cs
inc
jb
jae
push
or
adc
shrb
add
aam
lods
lea
js
mov
dec
and
mov
jmp
mov
nop
int3
add
jnp
pop
add
insl
dec
and
jae
xchg
ret
nop
mov
jl
add
mov
loopne
adc
mov
fdiv
add
lea
shlb
pushf
jbe
xchg
or
sbb
jne
sub
scas
add
shrb
cs
rorb
ljmp
cwtl
xchg
call
sbb
or
addr16
in
cmp
daa
inc
pop
jo
jl
or
and
js
and
sub
cmp
add
ret
dec
es
lret
sti
js
inc
fs
cld
xchg
inc
adc
dec
mov
adc
lock
jae
push
stc
xchg
adc
loopne
xor
in
sbb
mov
sbb
clc
add
xor
sbb
arpl
imul
inc
pushf
inc
inc
or
lods
stos
in
sbb
fbld
insb
test
add
and
xor
in
pop
xor
das
sub
inc
dec
fimull
jns
orl
add
cmp
lret
pop
aas
jo
push
rorb
mov
or
mov
mov
inc
inc
adc
or
pop
in
cmc
add
sub
inc
nop
les
imul
add
mov
dec
ss
insl
cmp
dec
mov
mov
dec
mov
pop
imul
or
cli
lea
ret
scas
add
push
pop
mov
addb
jge
add
sub
xchg
int3
push
jnp
mov
and
lret
lea
pop
add
pop
call
dec
fwait
xchg
mov
push
xor
cmp
ljmp
adc
and
ret
repz
mov
lahf
sbb
add
mov
mov
add
imul
pop
into
inc
mov
pushf
out
loopne
js,pt
jbe
movq
inc
lcall
sbb
mov
push
lock
cmp
fstpt
or
add
xor
ljmp
mul
mov
mov
mov
inc
outsl
mov
pusha
cmp
cmpb
mov
add
and
je
mov
mov
xchg
sbb
push
xchg
push
push
or
cmp
insb
or
dec
add
in
mov
inc
and
sbb
ficomps
mov
test
jge
pop
arpl
push
test
shlb
mov
cmp
cmc
lds
mov
mov
fcomip
fadds
insb
pop
rcl
xor
ds
push
cmp
inc
cmp
or
pop
jmp
rorl
xor
or
jbe
add
push
psubw
mov
and
push
or
mov
and
adc
add
adc
test
and
fmuls
les
push
mov
enter
mov
insb
int
adc
insb
aad
or
test
add
shll
mov
push
pop
movsb
lods
cmp
dec
stc
lea
xor
andb
xchg
inc
lods
fwait
push
ds
xor
stc
jno
dec
ds
cmp
pop
add
fsts
pop
inc
or
jl
cwtl
add
out
lcall
arpl
mov
xor
adc
jnp
addr16
push
lret
mov
nop
adc
add
in
xor
cmp
cltd
fnclex
adc
arpl
or
add
push
dec
xor
je
jp
mov
sub
dec
sarb
add
pop
inc
pop
lahf
push
push
adc
inc
pusha
add
or
add
mov
xchg
loope
cwtl
sub
cmp
cmc
push
arpl
sub
ret
adc
add
in
scas
push
fadds
movsb
call
mov
xor
inc
dec
les
add
cltd
rcll
add
les
stos
cmp
shlb
adc
push
push
gs
adcb
xchg
ret
jmp
aas
sahf
or
mov
sub
cli
add
xchg
cwtl
ss
inc
fldl
or
inc
jbe
retw
loope
fmull
inc
por
into
inc
cs
jne
and
add
pusha
pop
push
clc
push
sub
dec
mov
in
rolb
movsb
adc
sbb
pop
aam
add
mov
cmc
xchg
or
dec
push
sub
add
xchg
push
jb
rcl
mov
pop
add
sub
inc
dec
mov
repz
fiadds
in
xor
sbb
and
pop
lods
dec
mov
push
or
addr16
inc
icebp
jo
xchg
or
cmpsl
inc
add
arpl
pusha
push
inc
test
cmp
ss
incb
xchg
pop
add
loopne
fs
adc
xchg
sbb
and
jnp
push
xor
jle
out
xorb
lock
and
adc
jg
mov
pop
adc
pushf
add
jl
mov
adcb
mov
and
pusha
pusha
je,pn
in
adc
sub
pop
dec
inc
cmpsb
add
ret
lea
mov
and
or
lods
in
adc
or
cmp
inc
sub
call
andb
push
cmp
push
sbb
pop
push
ret
jb
pusha
add
nop
mov
out
leave
dec
lock
lea
adc
add
shll
inc
ljmp
dec
or
fcos
test
loop
xorl
cli
aas
lods
dec
jle
push
xor
add
outsb
addb
test
or
xorb
jmp
inc
in
mov
push
int3
inc
and
mov
dec
inc
loopne
inc
stos
push
mov
lods
xor
adc
adc
pop
cmp
mov
mov
cs
xchg
mov
pusha
mov
cli
lea
inc
hlt
jge
adc
sbb
add
fdivrp
inc
hlt
pusha
pop
xor
mov
or
jg
jnp
lfs
loop
dec
pusha
xor
fdivrp
lcall
das
outsb
test
repnz
sbb
push
popa
jnp
movsb
addr16
es
xor
inc
mov
pop
stos
jp
pop
insb
cli
incb
or
mov
sbb
addr16
inc
sbb
xor
data16
scas
ds
push
pop
and
inc
loope
movsb
aad
rcl
mov
sub
add
xchg
jmp
push
fsubr
dec
xor
jg
imul
test
test
inc
xchg
aas
inc
push
adc
add
xchg
push
fs
xor
adc
jle
push
or
out
cld
cmc
jb
test
hlt
pminub
test
push
inc
insb
out
xchg
jl
adc
iret
and
mov
pusha
adc
mov
xchg
jecxz
das
pop
cmp
dec
xor
bound
repz
add
mov
jns
push
shl
fwait
inc
les
mov
cmp
adc
je
enter
inc
jecxz,pt
pusha
loop
xchg
mov
xchg
add
mov
xor
cmp
inc
sub
cltd
and
js
sbb
loopne
mov
add
jl
cmp
xlat
xchg
test
mov
outsl
clc
rcr
pop
xchg
mov
sarl
sbb
dec
mov
fdivr
lret
add
adc
arpl
or
add
mov
mov
add
cmp
and
insb
cmpsb
push
aam
ret
mov
movsb
test
jle
addb
ljmp
pop
xorb
adc
lea
std
cmp
cwtl
leave
jo
jno
addb
movsb
dec
mov
jbe
cld
int3
bnd
mov
xchg
je
nop
and
cltd
sub
test
push
mov
insb
ret
int
adc
shl
enter
lods
imul
loope
mov
dec
pop
inc
xor
sbb
jns
fcoms
sbb
cmp
xchg
ret
mov
push
insb
in
mov
out
int3
or
add
add
inc
fistpll
jb
sub
rorb
sub
add
insb
shlb
repnz
out
mov
cwtl
adcl
pusha
dec
or
jo
ds
bound
inc
js
nop
pop
imul
pop
or
cmp
lock
pusha
pop
push
mov
xchg
mov
cmpsl
dec
or
imul
add
sbb
adc
cwtl
sti
ljmp
pop
jbe
sub
les
insl
ret
cmp
or
cmc
adc
mov
hlt
sub
loopne
loope
pop
xor
cmc
sbbb
dec
pop
sub
cli
pop
and
xchg
pop
sbb
or
test
add
dec
add
xor
add
add
stc
and
loopne
orb
add
inc
push
mov
loope
lea
das
shlb
sbb
pop
or
in
adc
jno
out
push
add
sub
inc
ret
inc
or
add
cmc
pop
aam
sbb
daa
cld
adc
and
jmp
stc
test
adc
or
mov
pop
adc
or
flds
pop
cmpsl
cwtl
add
dec
xor
hlt
add
jnp
and
mov
sbb
sarb
roll
jp
sahf
daa
adc
adc
pushf
mov
lods
andb
sar
shll
dec
adc
inc
dec
and
test
insl
imul
jle
push
cmc
popa
ret
adc
cwtl
je
popa
push
cmp
mov
mov
addr16
lahf
and
loopne
fbstp
sarb
jae
adc
dec
pop
clc
dec
cwtl
inc
and
jb
cltd
push
pop
fstl
daa
xor
rorb
lahf
add
cmp
rorl
add
mov
dec
push
pusha
add
outsb
dec
add
stos
fcoml
insb
add
pop
cmp
sbb
mov
xlat
dec
mov
or
push
enter
mov
mov
xchg
push
in
imul
pusha
mov
jno
mov
subb
shlb
add
jmp
sti
add
int3
jns
mov
inc
mov
adc
leave
xor
adc
je
mov
sbb
push
and
sub
cmp
les
and
fsubrl
inc
popf
mov
leave
push
inc
mov
mov
shll
clc
add
shrb
xchg
sbb
or
in
roll
clc
out
test
dec
pop
daa
test
dec
mov
xor
add
les
inc
cmp
andb
inc
mov
imul
es
and
fnsave
jo
adc
sub
mov
mov
sbb
add
ja
sti
mov
add
ret
pop
insb
nop
imul
pusha
fadd
sti
jb
add
mov
sub
dec
push
cwtl
pop
pusha
aas
xchg
into
cld
jp
mov
and
pop
aam
lret
sarl
arpl
and
fadds
inc
cmp
test
shll
jo
adc
mov
les
add
xchg
ds
mov
sub
xor
jnp
clc
lcall
dec
sti
lea
rcll
pop
push
cs
call
les
outsl
adc
xlat
out
sti
pop
push
push
or
clc
add
mov
jmp
xor
in
int3
jecxz
xor
pusha
fwait
inc
popf
cmp
mov
rcl
lock
dec
push
push
dec
les
cmp
add
pusha
and
lret
add
insb
and
xchg
and
add
mov
xchg
sub
sub
mov
adc
call
mov
add
sub
add
push
dec
jb
inc
mov
stos
lods
jmp
jl
sbb
nop
mov
testb
add
dec
inc
add
jb
fnstsw
add
pop
jo
stos
inc
loopne
xor
lret
pusha
sub
mov
cld
adcb
mov
cmp
or
subb
pop
sbb
pushf
enter
xchg
int3
jecxz
nop
mov
sub
daa
insb
mov
mov
les
xchg
sbb
and
inc
shrl
pop
shl
jecxz
push
fwait
insl
clc
xor
rcll
popa
dec
mov
xor
add
mov
addb
movsb
insb
jno
lret
cmc
jle
jo
xchg
insb
icebp
fs
adc
cli
add
mov
pop
xor
leave
mov
sub
sbb
cwtl
mov
mov
push
in
push
xchg
and
jmp
mov
int3
dec
jnp
fwait
xchg
mov
mov
add
mov
out
push
cmp
adcb
sbb
sub
imul
shrb
icebp
repz
cwtl
loop
add
addr16
or
in
add
add
jns
add
test
orl
decb
ror
add
gs
les
mov
push
data16
in
pop
xchg
pextrw
out
or
or
test
dec
push
push
das
test
and
adc
sub
xchg
movsl
daa
pop
fldenv
and
test
les
xchg
clc
call
enter
lods
xchg
adc
out
mov
and
and
cs
cmp
movsb
call
sub
outsl
pop
jno
loopne
cltd
add
in
cmc
push
sub
lcall
adcb
shll
repnz
or
lods
mov
out
or
sub
ret
rolb
shrl
adc
push
add
push
subl
xor
push
push
loop
iret
mov
xchg
xor
push
push
adc
jbe
xor
shrl
enter
sub
rorb
sub
add
lahf
jne
je
ljmp
imul
std
ljmp
stos
int3
cwtl
add
mov
movsb
jmp
roll
sti
add
xchg
mov
mov
mov
inc
add
adc
cmpsl
xor
xchg
inc
pusha
les
pop
add
add
add
jle
inc
mov
repz
add
sub
sbb
test
pop
insl
pushf
add
pop
adc
lods
adc
mov
fwait
add
pusha
push
cmpsl
push
push
or
cltd
pushf
and
add
push
sub
or
cmp
adc
mov
dec
call
xor
xchg
scas
jl,pn
test
outsb
sub
dec
sbb
pop
xorl
aam
dec
test
cmc
addr16
pop
or
in
mov
mov
popa
pop
jo
add
jecxz
loop
in
sbb
pop
sub
cmp
jle
call
ret
wbinvd
icebp
addb
pop
popa
cmp
in
jae
cs
movsb
movsb
rol
cmp
inc
call
jl
lcall
push
ja
mov
aam
nop
in
js
or
sbb
cwtl
clc
push
adcb
xor
inc
mov
scas
out
scas
in
les
adc
xor
cli
dec
les
popf
arpl
scas
and
call
mov
jg
fcom
dec
inc
adc
push
pop
mov
dec
data16
ret
sub
fs
inc
mov
and
or
lahf
mov
xor
lea
cmp
or
adc
push
jno
adc
cld
dec
les
call
pop
inc
add
dec
dec
add
in
sarb
sub
jl
out
add
lock
sub
loopne
and
daa
jmp
pop
jle
das
and
jne
cmpsl
push
mov
sbb
loope
inc
sub
and
lock
pushf
cmp
mov
hlt
dec
mov
xchg
mov
inc
jl
mov
inc
cmp
out
fs
adc
in
jae
stos
inc
adc
ret
ret
sti
gs
mull
push
xor
pop
or
inc
cwtl
mov
imul
or
mov
inc
cmp
sub
mov
or
dec
and
adc
pop
fisubrl
add
enter
mov
pop
adc
bound
shl
fucomp
xchg
pop
nop
lock
cmp
add
outsb
aam
or
sub
and
push
jmp
cmp
ljmp
pop
adc
jle
add
insb
cmp
xor
cmp
jnp
jno
mov
mov
add
imul
pop
fsts
orb
jnp
inc
add
sub
xchg
add
xchg
pop
add
xchg
mov
rcrb
add
inc
bound
or
push
in
lods
out
out
xchg
call
mov
sbb
adc
addr16
push
test
insb
stos
add
adc
add
cli
or
lock
stos
daa
enter
nop
js
push
imul
add
mov
mov
mov
fsubl
add
bound
cmp
call
sbb
pop
ret
movsl
lock
push
std
in
push
mov
cmpsb
cmpsb
fmuls
insl
ret
cmp
gs
sbb
psubusb
gs
addr16
jb
inc
push
inc
mov
mov
mov
pop
push
nop
test
sub
popf
add
jo
je
outsb
pop
ljmp
xor
scas
fadds
add
pop
jge
and
add
or
daa
aaa
je
pop
sub
cld
pop
xor
mov
outsl
pop
and
sub
inc
pushf
pop
dec
flds
in
mov
inc
rorb
or
pop
xchg
int3
js
testb
inc
add
pop
xor
popa
pushf
rcrl
cmp
js
adc
mov
cmp
les
loopne
cld
pop
dec
loop
sub
lods
xchg
aam
je
pop
jmp
adc
repz
mov
jle
xchg
inc
pushf
call
cld
or
sahf
xchg
mov
ret
inc
adc
xor
ljmp
testl
stc
mov
mov
or
cmp
mov
adc
rorb
movsb
jge
adc
addb
cld
xor
add
jp
std
pop
push
scas
popf
add
dec
outsb
fdivl
xchg
adc
push
seta
rcll
adc
bound
push
scas
fidivrl
inc
in
and
xchg
lcall
daa
mov
pop
cmp
mov
pop
add
imul
je
mov
mov
js
sub
cmc
je
xor
cltd
fisubrs
add
sbb
xchg
push
insb
lods
push
pop
sarb
adc
insl
rorb
xchg
adc
sub
lods
mov
cmp
xchg
jns
rcll
dec
xor
lods
inc
inc
dec
shlb
popl
xor
in
aas
cmp
orb
testl
cmp
les
add
nop
sbb
cmp
mov
inc
cs
xchg
fwait
aam
loopne
imul
mov
add
sbb
inc
and
lea
inc
shr
push
pusha
lods
push
inc
lret
push
ror
push
pop
pop
in
mov
shr
and
sbb
mov
stc
add
iret
add
cwtl
add
jg
and
dec
push
les
push
cmp
addb
ret
or
es
hlt
pop
call
rcrb
rcll
movsb
sub
shl
sub
cmp
cmp
mov
testl
jno
rcl
xrelease
int3
popa
out
push
add
shlb
or
cld
push
jne
xchg
add
sbb
adc
add
sbb
mov
mov
xchg
out
mov
jno
pop
cmpsb
or
clc
lock
mov
nop
fmuls
or
sub
pusha
int
out
aam
add
xchg
cltd
ljmp
lock
out
test
cmp
cwtl
mov
xchg
lret
clc
hlt
cmp
enter
repz
call
out
or
insb
inc
or
sub
push
enter
mov
add
jo
dec
in
sub
hlt
sub
cmc
sbb
jno
fwait
lock
pop
dec
push
in
test
mov
rolb
test
sub
test
out
outsl
inc
push
inc
xlat
in
sti
inc
ret
jp
dec
incb
repnz
popa
jmp
hlt
cwtl
aam
inc
xchg
stos
in
xor
mov
movsl
push
fwait
in
xor
push
xchg
call
pop
mov
add
and
xchg
or
xlat
gs
add
push
sub
pop
testl
enter
adc
and
push
out
sbb
test
test
adc
fdivl
add
push
mov
pop
xlat
shlb
or
lea
cmp
xor
cwtl
test
xchg
jns
jecxz
xchg
push
outsb
jp
add
dec
movb
or
push
rorb
jne
lcall
or
or
sbb
mov
test
push
outsl
jo
sbb
sbb
push
push
mov
insb
add
pop
jle
mov
push
and
adc
mov
ret
add
aam
hlt
mov
stos
xor
mov
mov
inc
loope
xchg
dec
add
mov
push
ficompl
sbb
incb
in
js
add
data16
cmpsb
cmp
xor
in
push
jae
pop
add
push
mov
sbb
jg
add
imul
lahf
add
add
test
sbb
fs
or
ds
mov
or
push
inc
adc
lcall
mov
test
add
dec
mov
js
jl
nop
inc
dec
rcr
mov
bound
mov
pop
nop
fadds
out
into
ret
pop
and
pop
add
leave
psubb
mov
cltd
add
int3
add
xchg
jb
jne
adc
es
rolb
test
sbbb
pop
je
movsl
fstl
or
or
mov
stc
add
cmp
pop
mov
mov
es
push
pusha
cmp
mov
rolb
add
divl
sbb
jle
adc
stc
out
sub
fmul
cmp
aas
add
pop
jb
jmp
and
cwtl
nop
add
dec
jl
adc
popf
aaa
scas
pop
cmp
pop
xchg
rorl
popa
jle
subb
mov
dec
icebp
cld
add
mov
jmp
dec
or
pop
jecxz
inc
mov
cld
or
and
xor
lock
adc
add
xchg
sub
jmp
mov
add
dec
cmpsb
in
adc
and
mov
or
repnz
jo
adc
jge
out
fidivrs
mov
in
add
out
push
mov
xchg
into
push
cmp
dec
pop
sub
mov
imul
lahf
jle
pop
int3
push
pop
pop
sub
fimull
cmpsl
xlat
hlt
adc
inc
outsl
push
or
cwtl
jno
popf
ljmp
scas
pop
hlt
xchg
xor
and
mov
test
dec
pop
inc
sbb
mov
out
push
add
xchg
push
dec
nopl
xchg
negb
in
cmpsb
cwtl
xchg
add
into
fldt
push
lods
test
add
and
push
rorl
or
repz
loopne
push
pop
pop
sbb
test
push
xor
pop
dec
pusha
add
xchg
push
aas
sahf
or
mov
aam
mov
or
mov
push
lock
aam
add
xchg
mov
icebp
pop
push
ud2
add
dec
jle
mov
in
dec
cmc
test
mov
mov
mov
sbb
jecxz
dec
mov
and
pop
sub
mov
fadds
subb
cmp
pusha
cwtl
shl
and
test
mov
lahf
pop
add
push
sub
aam
adc
add
or
cmp
test
mov
cmp
and
enter
push
push
test
mov
popa
fadds
in
mov
popf
lcall
es
sub
daa
sbb
dec
push
in
repnz
push
mov
pop
mov
jl
pop
mov
enter
cmp
push
xorb
ret
add
push
outsl
mov
jb
pop
or
or
mov
testl
pop
lcall
and
enter
mov
adc
stos
mov
sub
test
push
sub
subb
and
outsb
inc
sbb
sbb
enter
and
lret
dec
cmp
push
add
in
lock
addr16
adc
adc
sbb
mov
and
mov
dec
rcrb
sahf
ret
jle
into
mov
mov
subb
rolb
dec
aad
sbb
sbb
push
dec
scas
xor
je
aaa
cwtl
pop
jne
lret
enter
mov
dec
aas
lock
lahf
xchg
je
mov
adc
jl
adc
in
nop
add
imul
mov
addr16
add
lods
dec
inc
adcl
int3
add
xchg
sbb
jno,pn
and
sbb
pop
cmp
adc
int3
mov
ljmp
mov
loopne
bound
and
mov
xchg
xchg
cmpb
dec
and
xchg
xor
xchg
xchg
test
jle
scas
add
fwait
xchg
into
mov
pop
xchg
int3
es
xchg
mov
pop
imul
nop
inc
jecxz
les
rorb
add
addl
loope
add
negb
insl
sbb
push
outsb
fcomp
dec
inc
xor
and
inc
ret
add
sbb
nop
pop
add
repnz
mov
push
push
outsw
outsb
jbe
orb
call
pop
xor
pop
adc
adc
mov
lea
cmp
pusha
pushf
loopne
sub
out
pop
cs
ss
ljmp
add
xchg
or
lcall
fdivl
jb
in
out
jle
cmp
jp
cwtl
add
sub
in
mov
sub
xchg
call
les
lock
test
add
mov
xor
popa
int3
mov
mov
or
lods
pop
frstor
fcoms
push
push
dec
mov
inc
dec
mov
jg
into
pop
rolb
pop
push
or
cld
mov
out
jb
adc
or
push
push
inc
nop
adc
dec
sbb
dec
fsubp
add
idivl
sbb
pusha
repz
xor
out
repnz
mov
insb
add
pop
or
xor
xor
shrb
ljmp
add
or
xor
fcomp
jne
ljmp
ret
cmp
in
xor
jg
std
int3
mov
pop
push
mov
mov
xor
sbb
mov
je
xor
sub
adc
pusha
or
inc
movsb
sub
stos
les
pop
jnp
add
pop
add
imul
and
and
xchg
add
pop
addb
adc
or
ljmp
imul
rcrb
add
cmp
ljmp
adcb
cwtl
lret
add
adc
jl
movsb
adc
hlt
dec
cmp
cmp
out
rcll
fwait
cmp
cmp
addr16
xchg
clc
xlat
ljmp
pop
bndldx
jo
and
addr16
mov
hlt
call
call
or
paddsb
adc
subl
jmp
js
add
jbe
lcall
daa
add
or
mov
add
jnp
xor
sub
pop
pop
cmp
repnz
sbb
push
fs
mov
mov
pop
jmp
lds
pop
clc
sub
or
je
xchg
shlb
fldcw
icebp
dec
pop
mov
xchg
cltd
je
inc
pushl
pop
je
out
mov
xor
xor
dec
fadds
cmpb
or
push
cmp
push
mov
xor
daa
or
adc
cmpb
add
jmp
xor
ret
sub
pop
outsl
shll
or
scas
dec
sub
pop
xchg
add
fs
or
std
add
push
add
pop
cli
mov
dec
sub
or
add
push
lcall
mov
mov
mov
cmp
dec
mov
mov
mov
mov
cli
push
cmpsb
or
push
cmp
data16
push
or
push
pushf
jmp
dec
shl
add
repz
sub
sbb
pusha
pushf
xchg
push
adc
dec
sbb
xor
pop
sub
push
mov
cmp
into
mov
sub
out
lea
adc
mov
pop
pop
jnp
push
ret
dec
push
ljmp
sub
dec
adc
pusha
or
sub
into
out
ret
shrl
xchg
push
lea
negb
push
jmp
xchg
push
rolb
hlt
into
push
inc
xchg
add
add
xor
sbb
pop
aad
into
or
jmp
jp
push
arpl
arpl
inc
pop
push
testl
adc
cmp
iret
and
cmp
xor
jmp
loop
add
call
in
add
mov
repnz
sub
sbb
add
pop
pop
add
and
aam
cmp
je
jge
and
and
add
mov
pause
pop
pop
ret
jb
cmp
mov
mov
lock
sbb
pop
and
xor
adc
mov
push
mov
pop
cmp
pop
cmp
sub
pop
jmp
out
cmp
xor
jae
ret
or
pop
sar
adc
or
dec
and
xor
push
jmp
outsb
dec
cld
dec
pop
mov
add
cmpsl
adc
xor
jmp
mov
or
jp
sbb
sbb
enter
lea
pop
shrb
clc
sbb
inc
movb
add
dec
adc
inc
popl
setbe
rcrl
out
loop
mov
mov
inc
aaa
push
popa
xor
pop
push
add
addb
mov
imul
lahf
jb
sbb
cmp
adc
dec
fistpl
ds
lret
clc
push
bound
sbb
andl
add
jmp
cmp
int3
dec
aaa
insb
pop
shl
not
fimuls
or
sub
jmp
add
xor
dec
cwtl
lock
daa
sarl
outsb
add
int
mov
adc
xlat
mov
jo
push
mov
jge
inc
sub
mov
iret
pop
mov
rcrl
mov
push
addl
dec
in
pop
sub
jmp
push
push
xchg
mov
push
cwtl
movl
rcll
sarb
push
inc
shl
orb
fld
xor
sub
js
in
or
adc
int
sub
das
neg
xor
mov
les
pusha
add
mov
xor
rcr
mov
insb
or
lret
data16
mov
dec
add
sub
cld
add
js
jp
scas
loop
xchg
inc
add
jmp
js
addl
addb
addl
bound
xchg
pop
xor
rorl
lahf
inc
cmp
push
cld
outsb
incb
pop
add
sub
jg
stos
adc
je
shll
dec
in
pop
loopne
out
push
cli
jnp
aaa
inc
pop
pop
mov
ret
mov
pop
es
or
cwtl
jmp
cmc
or
jnp
sbb
adc
lods
add
lds
sbb
mov
xchg
mov
shr
xor
dec
es
add
sub
popa
inc
fiaddl
out
jecxz
and
shlb
mov
neg
cwtl
xchg
add
rcrb
mov
adc
aas
mov
jno
adc
and
rclb
add
repnz
mov
pop
sbb
addl
sub
dec
or
pop
aam
xchg
jmp
xchg
and
jae
pop
outsl
push
mov
in
inc
sub
pop
shll
push
push
push
mov
or
jne
ljmp
add
pop
push
mov
dec
push
lahf
adc
scas
xchg
iret
push
cmp
cmpb
jmp
pop
add
dec
inc
and
pop
aas
loopne
or
adc
mov
pop
xor
adc
rcll
pop
and
push
jl
pop
fs
mov
test
or
pop
mov
sub
inc
cmpsb
push
in
xchg
adc
and
addb
add
adc
or
jno
es
dec
neg
pusha
add
and
pop
or
add
jmp
push
inc
add
ficoms
pop
pop
sbb
push
inc
sbbl
pop
push
pop
iret
insl
xor
adc
xchg
or
or
inc
mov
movb
insb
add
jbe
fcmovb
shl
sub
sbb
xor
shr
dec
daa
mov
out
inc
jge
cmp
push
adc
orb
xor
mov
dec
pusha
mov
push
cld
ja
jmp
add
add
lea
andl
mov
add
rorl
popf
push
or
dec
jmp
out
inc
or
push
mov
xor
out
adc
push
cmp
sub
out
pop
mov
push
pop
push
mov
or
xlat
mov
cmpl
gs
add
fisttpll
pop
sbb
xor
hlt
mov
pop
mov
cmpsb
push
cmp
inc
xchg
cmp
fidivrl
push
imul
test
ret
inc
imul
push
shll
ss
inc
add
jmp
push
test
pop
lret
sbbl
pop
push
mov
adc
jbe
loopne
aad
addb
iret
pop
jecxz
cmp
xor
in
cmc
loopne
fists
xchg
sahf
adc
push
test
or
dec
repz
imul
mov
fwait
xorb
sub
pop
inc
fsubrs
push
pop
push
out
push
or
cli
push
lea
xchg
jecxz
or
cs
mov
out
add
add
pop
pop
adc
push
push
rorl
jp
xor
adc
prefetcht0
mov
add
jnp
push
push
negb
pop
ret
xchg
js
jg
shlb
dec
sub
jmp
and
cmp
aas
or
push
or
sub
icebp
mov
pop
not
pop
cmp
xor
and
mov
add
mov
xchg
fadds
mov
jmp
lea
nop
push
outsl
icebp
dec
cmp
dec
inc
jmp
leave
mov
add
inc
ja
xchg
mov
push
xchg
mov
add
lock
xor
pop
inc
push
dec
sahf
subb
jno
mov
inc
push
nop
xor
insb
push
add
dec
add
xor
push
pop
add
pop
imul
cmp
add
test
std
xchg
xchg
push
ljmp
sbb
fcmovnb
std
loope
push
pop
jnp
sarb
and
mov
fimuls
dec
cwtl
mov
push
jmp
and
shr
ja
adc
cwtl
lret
fimull
adc
sub
or
pop
inc
add
repnz
pop
jbe
sub
pop
sbbl
push
sub
ret
xor
or
pusha
popf
or
jmp
pop
mov
dec
push
hlt
push
add
fcompl
mov
mov
pop
sub
jb
ret
sbb
pop
aas
movlps
repnz
popa
clc
push
push
data16
jmp
in
jg
jg
in
adc
in
inc
adc
es
addb
push
and
pop
push
jno
icebp
inc
add
sbb
fwait
pop
mov
shll
stos
ljmp
cmp
pop
lret
dec
jg
repz
sub
sub
loope
fidivl
and
shrb
sub
in
inc
loope
add
neg
enter
push
movsb
test
mov
jmp
adc
addb
push
add
out
sbb
or
adc
jnp
xor
xor
pop
int3
shr
imul
not
andb
pop
xchg
repz
push
loop
cmc
clc
cmc
or
data16
mov
in
pop
push
mov
clc
repnz
adc
out
push
pop
shll
inc
jo
test
or
sarl
addr16
sbb
cmp
jnp
add
push
lea
jbe
dec
dec
push
ret
out
les
movb
push
je
mov
push
cmpsl
pop
add
mov
xchg
adc
jno
add
add
sub
xor
sbb
sbb
les
mov
sbbb
out
mov
jmp
or
push
jb
push
gs
inc
push
add
lret
pop
dec
sub
les
pop
xor
jmp
dec
prefetchnta
sbb
inc
or
fisttpll
shr
dec
adc
out
push
sub
and
out
lea
idiv
jge
aas
add
lock
xchg
testl
add
pusha
or
inc
xor
imul
rcrl
int3
iret
jg
gs
jecxz
ja
add
adc
add
clc
mov
call
adc
clc
push
cld
mov
and
pop
pop
cmp
dec
fimuls
cltd
sub
xchg
sti
push
std
loope
stc
pop
xchg
jmp
sub
mov
dec
cmpsb
fstpl
es
cmp
cmp
outsl
aad
cmpsb
push
int
or
mov
nop
sbb
sahf
pop
mov
add
pop
xor
pop
push
dec
rclb
cmp
add
mov
stos
add
sti
add
or
das
fstps
inc
lret
in
sub
mov
ds
push
cmp
xor
mov
aaa
sbb
lds
lea
push
mov
loope
shl
addr16
mov
or
iret
jnp
or
cs
test
fisttpl
adc
out
pop
adc
jbe
scas
imul
mov
arpl
dec
rcr
call
pusha
inc
jnp
add
xchg
cmpsb
mov
in
inc
cmp
sti
inc
mov
and
add
lcall
or
shl
jmp
not
sub
jl
repnz
rcrb
cmc
push
push
push
add
fsubr
rcll
push
fmull
pop
call
test
lcall
pop
stos
jne
movaps
xchg
sub
push
mov
inc
xchg
int
sub
inc
push
push
pop
push
mov
xor
scas
jg
push
mov
shl
push
lock
mov
sbb
and
sub
jmp
out
mov
or
rcrl
sbb
and
pop
aad
or
test
push
mov
lea
les
sbb
out
cmp
inc
filds
jl
pop
pusha
or
add
pop
fists
inc
add
add
sub
repnz
xchg
adc
xchg
cwtl
xor
jle
mov
pushf
dec
push
pop
xor
sbb
or
inc
push
cmpb
subb
icebp
dec
mov
sub
mov
push
jecxz
addl
mov
push
xchg
addl
add
pop
sub
push
xchg
sbb
inc
add
mov
lret
adc
and
push
or
sbb
pop
cs
scas
and
mov
xchg
sbb
push
jmp
dec
fcomps
push
xchg
jg
orb
out
add
cmc
or
sti
mov
sub
push
pop
push
xor
inc
mov
jmp
sahf
rcl
icebp
cmp
nop
pop
lock
mov
lret
cs
cli
lds
jmp
repnz
subb
or
jno
addb
lahf
push
xchg
imul
pop
push
xor
shll
add
repz
lret
mov
and
bound
sti
or
xchg
inc
addb
aam
push
xor
insb
xchg
pop
xchg
add
or
mov
les
xor
xchg
xor
push
sbb
adc
jb
or
loope
es
fs
aaa
sub
bswap
pop
push
addl
les
mov
jne
sub
pop
fs
ret
cmc
or
xor
ret
testl
dec
cmpsb
adc
rorl
push
xor
aam
sarb
push
repnz
mov
aaa
loop
jge
pop
stos
add
mov
pop
pop
shl
jmp
mov
jmp
les
sbb
pop
movsl
lods
aas
add
jne
sbb
sbbl
rcll
nop
jecxz
mov
js
mov
test
jecxz
daa
adc
pop
pop
pop
addl
mov
hlt
sub
fs
or
cmp
or
pushl
adc
adc
dec
loopne
iret
or
aad
jnp
push
xor
mov
imul
shlb
mov
pop
sub
mov
sbbb
add
cmp
jo
cli
lods
sub
sub
xchg
push
lahf
sub
adc
add
push
xchg
lcall
cwtl
sub
pop
add
dec
push
fnstenv
ret
test
stc
mov
pop
mov
cltd
dec
xor
mov
sub
cli
je
inc
mov
enter
or
cmp
shll
fsubr
inc
dec
pusha
cs
pop
xor
jle
cld
dec
std
jns
test
add
lods
mov
push
or
ret
push
adc
subl
jmp
test
pop
or
dec
not
jmp
xchg
mov
add
xlat
pop
sub
mov
aad
dec
ss
scas
dec
and
cmpsl
bound
lret
dec
test
sub
push
push
dec
das
pop
xchg
sub
mov
fs
push
out
pop
ret
fdivs
sub
pop
idivb
aaa
sbb
or
sub
xchg
movsb
adc
inc
dec
sub
and
scas
or
test
and
pop
xor
lock
pop
adc
xor
and
jmp
mov
dec
sbb
inc
popf
and
out
dec
pusha
xchg
mov
out
fildl
fstps
inc
loope
sbb
mov
push
push
bound
cltd
add
mov
pop
js
add
neg
xchg
ret
and
add
scas
dec
sub
jo
sti
xchg
push
or
arpl
pop
push
xor
repz
js
lods
jecxz
or
sbb
aaa
mov
scas
inc
or
sub
mov
and
fldcw
movsb
sbb
fcomps
jmp
mov
ret
pusha
inc
fimuls
jmp
fisubl
sbb
sti
pusha
dec
pop
loope
ja
ds
sub
push
push
mov
pop
pop
add
cwtl
xchg
inc
or
cmp
dec
ljmp
mov
mov
push
out
stos
cmc
mov
inc
xchg
cs
into
pop
adc
inc
mov
arpl
add
or
pusha
add
add
js
bound
ja
in
sub
xchg
push
rolb
and
jp
sbb
cmp
dec
cmpb
fsubrs
mov
cmp
sbb
xchg
decl
ret
and
push
in
add
imul
pop
es
push
in
jp
test
sbb
dec
add
rcl
and
adc
rorl
mov
jnp
addb
jb
inc
sub
adc
or
addr16
mov
call
lret
or
jmp
insb
jns
outsl
pop
cmp
pop
inc
jno
loopne,pn
test
adc
sub
lods
mov
test
in
nop
pop
jle
push
jmp
mov
add
xor
cmp
xor
dec
xor
nop
andb
inc
pop
sub
sbb
dec
dec
scas
adc
jns
and
add
rcll
mov
shrb
lret
push
xchg
inc
dec
or
aad
ss
sbb
fldt
lcall
pop
mov
push
push
jmp
mov
xorb
xor
xor
or
xlat
xchg
xchg
or
int3
and
fsts
insb
flds
xchg
rorl
inc
adc
mov
mov
jmp
sbbb
or
daa
rcr
cmp
lretw
add
cmpsb
xor
push
mov
jmp
in
or
add
cmp
dec
jo
clc
sahf
add
mov
enter
iret
pop
sbb
adc
icebp
cmpsl
add
dec
jp
push
psubsw
xor
sahf
cmp
xchg
jmp
jmp
loopne
xchg
xor
mov
add
daa
pop
sbb
sbb
outsl
ljmp
push
or
pop
repz
mov
pop
push
das
aam
std
add
sbb
or
cmp
aaa
std
sub
pop
sub
jo
add
roll
mov
pop
xor
dec
or
fdivrl
mov
mov
out
fwait
sub
lahf
inc
add
inc
sub
mov
cs
xchg
jno
mov
dec
lods
lcall
shlb
xchg
ror
icebp
xchg
ljmp
push
clc
in
jnp
mov
mov
lret
and
add
sub
and
lock
aas
dec
ss
xor
push
adc
aaa
jbe
adc
push
dec
push
loop
jno
and
or
jl
mov
sub
mov
add
mov
xor
fldl2t
data16
xor
push
mov
jmp
xchg
cmp
mov
cmp
pop
mov
dec
jecxz
add
into
dec
mov
jbe
pop
out
jp
xor
pop
outsb
xor
add
cmp
xchg
adc
pop
sahf
js
jo
inc
addb
mov
mov
repnz
cmc
and
push
xchg
icebp
push
pop
ret
ds
and
push
add
push
fwait
icebp
jl
pop
loop
or
push
loopne
jbe
pop
aas
jmp
fisubs
inc
or
adc
dec
cmp
shlb
inc
nop
enter
cmpsb
push
jmp
pop
jmp
inc
push
jmp
mov
inc
mov
addr16
push
push
mov
sbb
int3
fcmovnb
in
mov
out
clc
int
or
push
dec
cmc
mov
inc
cmc
adc
jmp
sub
gs
jmp
mov
ss
push
and
push
mov
inc
add
xor
loope
dec
dec
es
call
repz
jmp
dec
mov
and
call
iret
inc
lahf
or
shr
icebp
test
jp
sub
pop
ss
jle
sub
jp
lea
add
data16
push
jmp
mov
xor
pop
wrmsr
jmp
orb
ss
jmp
mov
fldcw
cld
pop
push
shr
testl
mov
and
dec
es
or
cmc
clc
mov
out
push
inc
push
push
sbb
fadds
mov
push
inc
push
mov
enter
in
pop
or
cmp
cmp
in
xor
push
sbb
mov
lods
jmp
fildll
pop
mov
sbb
and
cmpsl
loopne
outsb
push
lret
cmp
repnz
jnp
sti
inc
sub
jno
test
mov
loopne
adc
adc
xchg
jbe
mov
jno
inc
sub
pushf
repnz
inc
mov
jp
dec
shl
xchg
js
loope
insb
add
inc
pop
cmp
int
add
in
xor
insb
cmp
jnp
vmread
sub
sbb
or
pop
jmp
insl
cmp
enter
sbb
inc
adc
mov
lods
inc
dec
dec
imul
loopne
jmp
sbb
ror
add
leave
pop
push
orb
inc
push
mov
or
add
inc
gs
imul
movl
xchg
icebp
sub
or
adc
inc
out
xchg
addb
ud2
pop
push
lret
inc
pop
cwtl
jmp
arpl
sub
insb
loopne
and
pushf
push
add
cmp
jmp
sub
push
iret
push
daa
push
jns
adc
or
xchg
jnp
pop
sub
andb
pusha
lahf
pop
xchg
popa
push
push
add
pop
lds
lods
dec
pusha
pop
icebp
jmp
sub
sub
dec
mov
pop
pop
push
pop
pop
adc
xchg
icebp
neg
adc
add
jge
sub
ret
mov
adc
and
orl
mov
ret
pop
inc
subb
mov
gs
int3
jne
lock
pop
cmp
in
and
jge
ficompl
sub
sbb
fcmovu
mov
in
or
mov
pop
pop
cwtl
or
or
dec
or
aaa
fldenv
call
pop
clc
pop
pop
sub
insl
shrb
add
jmp
fadds
add
les
xchg
mov
dec
jnp
repnz
xor
movsb
cmc
nop
jl
xchg
add
add
jg
lret
mov
andb
add
dec
xorb
xchg
shl
movsl
bound
aad
add
cmc
push
adc
inc
in
jb
xor
sub
cmpb
sbb
pop
fbld
push
rep
adc
pop
xor
int3
add
pop
and
enter
aaa
test
pop
jle
mov
lcall
movb
fmuls
ret
inc
add
sub
sub
jmp
mov
jl
movsl
push
jge
inc
popa
jmp
push
lds
popa
inc
jno
sti
jmp
jecxz
add
sub
hlt
push
iret
in
test
push
or
aas
xchg
xor
das
pop
jae
fdivl
jb
pop
shr
dec
and
mov
mov
pop
jmp
adc
mov
and
and
nop
adc
inc
out
das
inc
sub
aaa
sub
adc
pop
ss
or
and
jb
or
mov
xchg
or
aad
adc
inc
mov
rol
jmp
in
mov
mov
add
out
push
in
jne
sub
outsb
dec
test
add
xor
inc
in
dec
adc
loopne
out
and
cwtl
pop
or
sub
jae
aaa
cwtl
dec
lcall
mov
mov
xor
pop
sub
or
cmc
enter
dec
add
pop
sarb
in
pop
sub
mov
add
arpl
push
fs
add
inc
xor
pop
sbbb
pusha
sub
add
jmp
xor
test
orl
dec
and
pop
xchg
add
or
pop
outsl
insl
rcll
lods
sub
xor
lods
jmp
leave
popa
inc
xor
loope
inc
les
fadds
or
insb
pusha
clc
fstpl
int3
adcb
inc
or
lock
mov
mov
add
jg
mov
dec
scas
adc
add
inc
leave
cmp
jle
dec
or
xchg
xchg
pop
xchg
mov
and
andl
jg
push
popf
and
xchg
insb
pop
or
aas
mov
leave
and
out
adc
dec
int3
loope
inc
ss
loop
aam
leave
fdiv
xchg
xchg
dec
sahf
dec
movsl
lods
inc
and
movsb
mov
push
bound
push
jbe
mov
mov
test
sub
daa
sbb
loope
out
add
rorb
sbb
daa
inc
lcall
fmuls
mov
ss
push
jbe
cmp
notb
sbbb
cmpsb
loopne
mov
sbb
rcll
mov
push
jo
popf
sbb
add
addl
int
das
aam
push
dec
xchg
fs
mov
movsl
rcrl
fcmovbe
mov
mov
es
fs
movsb
hlt
pop
movsb
xor
add
sbb
cld
add
mov
push
adc
sarb
adc
data16
jmp
rcl
pop
and
inc
add
gs
push
dec
adc
in
add
mov
mov
pop
pop
inc
jne
jge
push
add
push
push
pop
ds
dec
jge
out
repz
into
add
repnz
fldenv
roll
xor
jmp
int3
fs
in
mov
push
push
pop
js
push
mov
mov
sub
adc
rorl
mov
mov
fimuls
out
icebp
test
incb
mulb
inc
pop
push
dec
dec
push
xchg
add
xchg
and
or
js
add
cmovp
jmp
inc
add
insb
sbb
xor
sbb
mov
lret
loopne
out
push
pushf
arpl
sub
or
mov
push
or
imul
rcll
out
add
sti
jl
push
mov
jmp
mov
pop
push
pop
jo
adc
inc
mov
ret
mov
push
push
je
dec
add
adc
push
add
out
push
jmp
xchg
dec
subl
fildll
mov
pop
xchg
pop
lods
add
jo
push
test
add
add
add
adc
ds
jmp
xchg
movsb
jecxz
rcr
sbb
adc
or
jbe
xor
add
imul
mov
xchg
call
mov
cltd
xchg
mov
mov
fimull
push
and
add
inc
jne
cmp
repnz
xchg
xor
sbb
inc
call
sarl
push
pop
and
sub
mov
ja
xchg
rcrb
push
mov
push
push
or
push
pmulhw
sub
dec
int3
loope
push
jne
repnz
sub
sub
or
loop
outsl
jge
insb
dec
not
shll
add
mov
adc
push
add
xchg
adc
add
shlb
pop
pop
call
xor
or
fnstenv
div
stos
lahf
sbb
repz
mov
int3
or
push
add
push
fisttpll
pop
add
cmc
mov
mov
sbb
mov
or
pop
pop
inc
jmp
dec
mov
and
push
mov
es
dec
sub
fidivrl
loopne
outsl
add
inc
pop
inc
jl
jp
orl
adc
pop
xor
mov
jge
imul
cld
jns
pop
data16
mov
pop
cmp
sbb
lds
das
add
comiss
cmpsb
aaa
push
lret
mov
pop
mov
movsl
icebp
ret
adc
repnz
cld
xor
add
loope
sub
jmp
push
mov
and
xor
push
leave
sub
add
lods
add
or
imul
xchg
inc
sub
je
rclb
sbb
popf
sub
enter
out
clc
popa
or
mov
pop
sbbb
dec
inc
adc
pop
fsubs
mov
inc
push
jae
inc
jg
sbb
mov
dec
shlb
adc
loopne
lock
pop
daa
jmp
pop
dec
pop
movsb
sbb
and
dec
sub
bound
pop
xchg
jl
sbb
je,pt
xchg
sub
cmp
mov
adc
cmp
jmp
jo
flds
fildl
mov
add
or
push
adc
stos
sub
inc
ret
add
adc
pop
add
and
or
aaa
xchg
es
jp
xchg
adc
sub
dec
or
mov
mov
adc
dec
rclb
mov
jns
pop
add
add
fnsave
data16
pop
inc
dec
add
cmp
je
sti
ret
mov
roll
lahf
xor
pop
test
rolb
idivl
mov
jbe
push
and
push
add
and
stc
shrl
loopne
push
xchg
out
nop
push
push
xchg
fadds
lods
not
cld
dec
dec
je
inc
loopne
jmp
mov
sbb
popa
adc
js
in
jmp
fmulp
rcll
adc
mov
or
cmp
push
inc
pop
outsb
orl
or
cmp
xlat
int
div
and
cmp
testl
jns
mov
ds
gs
mov
add
loope
sub
and
inc
loope
pop
or
mov
inc
ficoml
pop
into
lods
dec
lret
jmp
in
push
mov
sub
lahf
sub
and
add
mov
stos
mov
js
out
dec
arpl
outsb
pop
push
adc
mov
inc
inc
shll
and
pop
sahf
add
mov
pop
dec
or
clc
fmuls
push
push
jno
or
lret
push
mov
stc
xor
dec
mul
inc
pop
xchg
add
xor
or
push
notl
or
or
ret
out
ss
mov
cs
inc
jnp
inc
push
xchg
not
jbe
lret
push
mov
adc
jecxz
push
lahf
ret
jg
adc
pop
addl
shr
xchg
das
test
test
mov
jge
jns
jmp
adc
imul
push
mov
push
cwtl
loope
add
js
and
lock
sub
xchg
push
xor
inc
xchg
inc
icebp
mov
mov
ret
mov
test
or
xchg
pop
lret
in
push
push
mov
adc
fsts
dec
pop
mov
lahf
je
and
xor
pop
push
and
inc
mov
call
testl
lcall
push
push
jmp
mov
jo
es
or
cmp
sub
push
in
stc
xchg
popa
dec
pop
cmp
shrb
incb
in
jmp
out
nop
dec
jl
addb
rorb
pop
xchg
dec
inc
ljmp
clc
jbe
sahf
xchg
push
jmp
pop
push
or
pop
xor
xor
cmpb
jmp
shlb
mov
mov
dec
pop
pop
xchg
lret
dec
or
nop
imul
mov
pop
aas
add
mov
xchg
pusha
aam
inc
dec
or
mov
pop
pop
push
std
repz
int
add
mov
lods
in
push
pusha
cmp
push
mov
and
mov
jmp
push
in
dec
mov
int
push
mov
xor
mov
and
pop
push
jnp
and
gs
sub
or
adc
mov
pusha
mov
dec
sub
cvttps2pi
pop
jno
inc
pop
out
sub
fcomps
jle
sub
dec
popa
fadd
in
outsl
sarb
sarl
jno
test
out
add
rcll
mov
cmp
xchg
pop
inc
das
mov
xchg
adc
add
fidivrs
arpl
sub
inc
jp
psubsw
mov
push
mov
mov
or
push
jp
xor
push
and
js
add
mov
rcll
stc
inc
enter
pop
jg
pop
mov
dec
mov
xchg
shrl
inc
adc
ret
cli
mov
pop
pop
lods
popf
adc
fadds
ror
loop
fmuls
addl
repz
sbb
fsubl
mov
adc
xchg
pusha
mov
pop
or
sub
adc
jl
mov
or
adc
mov
sbb
sahf
pushf
push
daa
mov
cltd
into
push
scas
xchg
push
pop
mov
lds
push
test
cmp
daa
adc
and
push
sti
jnp
mov
sbb
pop
das
subl
dec
addl
mov
add
aam
add
popf
jmp
pop
ret
mov
aam
sub
dec
cli
push
inc
or
push
shlb
lahf
lock
sub
jmp
pop
loopne
and
cmp
movsl
add
and
dec
rol
orb
push
xchg
inc
sub
pop
outsb
movsl
jg
add
jno
lea
push
mov
cmp
mov
daa
nop
cmpl
push
add
addl
adc
and
pop
les
shlb
outsl
adc
or
adc
and
dec
xor
jne
test
in
or
push
push
dec
sti
rcll
push
mov
nop
insb
adc
push
and
pop
out
ret
orl
scas
jb
pop
dec
sbb
dec
jl
inc
stos
jle
xorb
mov
enter
push
sub
or
and
push
mov
inc
imul
aam
push
cmp
sti
xor
fistpl
movl
repnz
repz
push
fldcw
mov
add
pop
xor
and
ljmp
cwtl
inc
outsl
iret
sbb
test
add
into
xchg
add
add
sahf
and
mov
jns
pop
pop
jmp
jb
or
sub
lret
sbb
sbb
xor
jne
dec
nop
fiaddl
mov
das
mov
dec
cwtl
or
and
fldenv
test
cmp
punpckhbw
push
sbb
mov
sub
movsb
cld
cmp
xchg
add
daa
int3
andb
enter
out
faddl
add
fisubrl
in
mov
aam
movsb
mov
rcll
add
add
stos
jmp
in
mov
inc
xor
sub
jo
inc
fmuls
push
adc
jp
jl
push
repz
add
shll
das
fs
lret
loopne
mov
std
add
jmp
fdiv
push
outsl
out
icebp
pop
test
add
cmp
push
dec
popa
add
lret
or
sub
loopne
imul
pop
nop
mov
jb
push
loopne
mov
sahf
daa
out
pop
pop
mov
mov
or
push
adc
imul
xor
stos
adc
cmp
or
cwtl
xlat
push
sub
movsb
and
mov
pop
push
rclb
repnz
pop
fnstenv
push
push
dec
in
out
cmp
call
fs
fcoml
cmpsb
sub
push
pop
test
adc
adc
dec
or
adc
arpl
inc
pop
and
pop
dec
xchg
test
adc
ret
xchg
add
mov
cmp
cmpsl
in
clc
out
repnz
dec
adc
sub
repz
inc
enter
push
add
sub
das
pusha
sub
shr
lock
and
push
mov
mov
sub
scas
lea
addr16
push
movsb
dec
mov
xchg
not
or
sub
add
test
pop
test
sbb
xor
add
lods
ljmp
pusha
jecxz
jmp
sbb
push
sub
sbb
pop
sbb
sbb
andb
testb
sub
dec
adc
push
in
add
xchg
popa
repz
dec
out
sub
pop
repnz
push
fists
stos
les
test
dec
lds
dec
mov
pop
iret
repz
es
jle
mov
out
adc
sbb
dec
fs
movsl
iret
movl
adc
call
lret
jmp
rolb
inc
and
mov
pusha
sbb
add
push
andb
fs
pop
pusha
add
movsb
dec
mov
add
pusha
scas
les
and
adc
sbb
xchg
pop
fwait
mov
pusha
lock
les
bound
movb
pusha
add
add
jae
cs
jns
mov
mov
sub
cli
or
and
out
gs
inc
dec
mov
adc
adc
inc
int3
xor
jl
out
xchg
sbb
xor
push
addr16
das
cmp
rorb
ret
cld
cwtl
loope
push
add
adc
lahf
add
lods
mov
cmp
mov
mov
lock
add
or
cld
xchg
testl
scas
jbe
and
lods
jmp
jle
ret
inc
add
pop
scas
adcl
arpl
push
lods
or
rcrb
lret
and
add
test
cmova
pop
rorb
or
nop
jge
lcall
fdiv
aad
scas
daa
mov
push
mov
cmp
aaa
xor
inc
or
xor
jo
pop
add
bound
xor
cld
repnz
dec
or
pop
xor
mov
cmpsl
in
adc
add
jmp
mov
pop
subb
jp
push
pop
mov
cmp
cwtl
dec
rorb
js
mov
jb
push
push
add
mov
mov
bswap
jmp
lahf
pop
or
enter
scas
inc
pop
cli
mov
sub
mov
mov
push
loopne
push
leave
push
pop
lahf
insb
dec
inc
ljmp
or
lds
movsb
and
or
scas
add
pop
jmp
enter
fstpl
sub
ss
add
lds
jl
push
cmpb
ret
mov
filds
sbb
cs
cmpsb
lret
add
mov
hlt
test
testb
jmp
mov
sub
loope
pop
subl
pop
and
dec
fildl
fstl
jmp
insb
in
add
shlb
dec
fstl
sub
not
inc
adc
je
inc
push
icebp
ljmp
or
subl
add
pop
or
subb
test
rclb
inc
insl
push
mov
ficoml
mov
pop
add
shrl
jmp
jae
sbb
mov
add
jno
mov
fists
je
and
mov
inc
xchg
out
gs
mov
iret
insl
mov
dec
popf
out
fdiv
std
add
ret
xchg
clc
fnsave
inc
xor
aad
mov
xor
add
xchg
mov
push
mov
add
add
xor
xor
jbe
shl
enter
mov
add
ds
push
jo
xchg
xchg
xorl
sub
inc
testb
add
subb
ret
or
stos
insb
and
out
push
mov
jnp
xor
sub
push
mov
loop
or
sbb
and
cmp
dec
mov
pop
push
mov
loopne
or
cli
pop
adc
sub
dec
lods
push
mov
insb
sbb
std
lret
mov
mov
mov
add
dec
mov
enter
push
mov
adc
inc
add
xchg
or
jmp
js
jno
mov
popf
pop
pop
mov
jmp
dec
cmpsl
sub
mov
and
jb
adc
push
or
enter
add
add
add
lods
and
jbe
in
or
or
push
pop
jb
shr
jmp
sub
cmp
jge
pop
lods
sar
test
and
adc
pop
dec
inc
jmp
cmp
push
aam
test
jg
adc
xor
push
fmuls
loop
je
imul
mov
mov
jmp
call
jno
cmpl
mov
ss
mov
sub
pop
and
test
movsb
insb
jmp
sub
sarb
sbb
jle
xlat
pop
ljmp
add
out
jo
sub
mov
and
mov
add
xor
push
cs
roll
sub
jae
mov
out
xchg
push
cmp
xor
pop
rol
jmp
xchg
mov
jae
cltd
add
dec
nop
adc
pop
loop
sub
push
pop
push
push
notb
and
sahf
add
pop
addb
fistpl
add
mov
adc
push
fs
stos
jmp
data16
add
push
clc
push
shrb
pop
mov
movsb
mov
test
mov
and
rcll
xchg
push
push
xlat
stos
loopne
loope
sub
xor
addl
movsb
iret
in
filds
pop
dec
cltd
push
jge
clc
invd
xchg
rep
into
notl
or
push
test
data16
mov
push
sub
pop
pop
xor
push
pop
aas
cmc
movsl
xor
in
and
dec
inc
jnp
add
inc
or
stos
xor
ss
and
and
and
in
popf
in
lahf
adc
popf
inc
jmp
inc
push
cmpl
push
xor
ds
add
cmp
imul
cltd
aas
add
leave
lcall
lods
xor
rcrb
push
cmp
inc
pop
jmp
test
and
or
jle
adc
add
xor
lock
data16
and
cmp
jb
subb
xlat
mov
xlat
push
in
les
pop
sub
push
push
push
adc
mov
mov
stos
jp
push
jmp
push
icebp
lahf
add
pop
icebp
bound
call
aas
jbe
test
jge
ljmp
adc
sub
in
mov
fcomps
add
out
dec
ret
ja
cs
cs
push
pop
or
xchg
aam
jnp
xor
inc
sbb
or
sub
mov
out
mov
test
push
mov
dec
not
rclb
push
mov
pop
or
shl
inc
sbb
dec
cmp
pop
jbe
or
inc
rcrb
jo
fildl
add
shr
jmp
jnp
jle
les
or
pop
nop
pushf
mov
jmp
jmp
in
int3
dec
jne
mov
lock
xor
pop
and
push
xlat
clc
flds
mov
inc
aaa
mov
stos
push
push
das
gs
into
mov
adc
cltd
mov
popf
sahf
or
lds
jb
mov
jg
neg
cmpsl
push
pop
addr16
xchg
inc
ret
fists
dec
cmp
das
inc
call
roll
push
mov
sub
push
sbb
adc
xchg
mov
test
mov
inc
dec
and
das
jmp
test
test
sbb
add
rcr
mov
add
test
subb
inc
jns,pt
add
data16
pop
not
mov
cmp
add
icebp
addr16
dec
add
push
pop
inc
fiaddl
andl
cmp
mov
add
mov
xchg
xchg
xchg
adcl
and
scas
pop
dec
xchg
test
add
push
int
aam
pop
bound
mov
stc
mov
adc
divb
repz
les
mov
dec
mov
addr16
pop
lock
adc
int
mov
cmp
adc
jge
inc
pusha
mov
dec
dec
pusha
adc
cmp
popa
inc
cmp
ss
rolb
mov
add
or
xchg
cmp
out
sbb
add
mov
mov
adc
inc
lods
jae
ss
jg
jnp
int
and
cmp
roll
jg
arpl
repnz
sub
dec
or
or
xchg
xchg
mov
es
or
movsb
adc
inc
pop
in
adc
ja
pop
lcall
push
dec
xor
lock
sbb
xchg
ljmp
adc
adc
loope
rolb
xor
int3
xor
shlb
push
inc
jbe
and
mov
subb
int
ljmp
ret
or
flds
jecxz
jo
add
adcl
jmp
pop
sub
hlt
xor
rorl
add
sub
repz
insb
add
add
dec
lods
add
daa
jmp
or
addl
adc
adc
push
add
shll
or
mov
mov
mov
cmp
adc
pop
mov
pop
popf
lock
rcll
scas
inc
cwtl
sub
xor
add
hlt
add
mov
dec
fimuls
mov
jno
cmpb
daa
sub
sub
jle
dec
shr
and
mov
cwtl
mov
pop
fcmovbe
mov
shr
pop
add
dec
jg
xor
in
dec
add
cmp
rorb
out
add
or
inc
insb
lcall
xor
btr
jle
loopne
pop
neg
add
push
lods
xchg
lahf
xor
xlat
jae
add
jl
not
mov
sti
or
insb
jmp
lret
mov
call
inc
not
cld
pop
xchg
jne
andb
mov
mov
mov
push
in
mov
rorl
mov
push
into
adc
loope
or
and
cmp
test
cwtl
outsb
add
es
cmp
add
enter
roll
nop
sbb
and
rclb
sahf
xchg
or
xorl
fwait
add
sbbl
cmp
mov
addb
rclb
orb
leave
ret
add
leave
daa
jb
rclb
in
dec
out
insb
dec
push
not
or
data16
popa
ja
cmp
pop
add
xlat
gs
lock
cmp
pop
push
push
add
jmp
loope
in
flds
jmp
mov
add
sbb
test
push
inc
dec
out
add
out
pop
push
mov
dec
add
mov
sub
dec
cmpsl
lea
add
popa
ret
lret
aad
lock
inc
dec
xchg
lock
mov
shll
xor
out
or
or
cmp
mov
mov
lods
outsl
imul
xor
xor
pop
and
xlat
sahf
mov
fwait
stos
xor
sub
push
cmp
arpl
and
aaa
or
shl
lods
imul
cmpsb
enter
jmp
push
inc
pop
mov
cld
cld
lds
arpl
adc
push
stos
data16
pop
mov
ds
popa
in
push
ret
orb
call
popa
sbb
lcall
ja
loopne
sub
lods
flds
add
leave
setb
cwtl
or
and
notb
sbb
daa
sbb
stc
pop
mov
lds
sub
cmp
movsb
add
cmc
pop
lds
aas
push
dec
js
mov
sbb
ja
adcl
or
jl
xor
gs
mov
jmp
mov
sbbb
mov
push
or
add
lds
dec
or
fwait
ss
sahf
sbb
repnz
pushf
and
or
lods
lods
sbb
cmpb
sbb
ret
call
pop
mov
mov
loope
bound
add
mov
add
aas
sub
inc
mov
insb
sub
loop
push
add
rcll
test
mov
and
push
dec
pop
sub
add
gs
push
jmp
loop
out
loopne
es
sub
mov
xchg
out
jae
mov
mov
mov
out
cwtl
aas
das
adc
shll
mov
mov
inc
push
out
add
pop
pop
fs
loopne
jmp
push
or
ja
pmaxub
out
jp
lcall
and
sti
add
rcrb
push
mov
push
jmp
out
sbb
andb
jge
pop
lahf
fldl
xor
insl
push
push
xlat
inc
loope
and
sbb
dec
ja
leave
or
adc
pop
imul
sub
or
mov
mov
jae
xchg
lcall
jno
decl
dec
cmpsb
push
or
pop
push
push
insl
mov
mov
and
inc
test
or
adc
inc
mov
rclb
push
push
pop
mov
xor
inc
in
inc
pop
pop
sub
or
add
cmc
or
pop
hlt
and
mov
jbe
add
filds
xor
in
loope
add
sbb
pop
push
ret
adc
imul
jmp
aad
loopne
andb
add
fcmovnbe
jecxz
push
add
cmpl
minps
xor
push
xchg
adc
mov
xor
xorb
mov
sub
sti
pushf
loop
pop
in
cmp
sub
inc
ss
sbb
adc
mov
sbb
sahf
push
lahf
sub
mov
inc
xchg
popf
cmp
jmp
pop
push
test
cltd
jns
mov
sub
into
or
mov
and
jno
xor
inc
mov
adc
xor
xor
pop
sarb
out
dec
stos
cld
bound
mov
mov
cld
ja
das
mov
or
dec
push
pop
push
xor
sbbl
and
push
or
xor
leave
repz
testb
push
in
ret
adc
mov
das
mov
prefetch
repz
add
jmp
xchg
sbb
or
jne
mov
pop
sub
pop
mov
jno
lods
sub
inc
dec
xor
in
fwait
outsb
pusha
cwtl
dec
xor
sub
inc
or
jmp
inc
or
shll
movaps
sub
sub
and
pop
iret
dec
add
shl
decb
pop
mov
sub
ja
hlt
cs
add
push
bound
or
jmp
ljmp
test
add
xchg
sub
sbb
or
ja
pop
xchg
rol
mov
sub
mov
addb
cwtl
or
ret
shlb
dec
pop
je
pop
pop
sub
xor
stc
push
iret
mov
fistpll
out
jle
push
xchg
xor
fstpl
outsb
fwait
data16
jp
out
adc
or
adcl
xchg
mov
inc
cmpsb
mov
cs
inc
sub
push
push
add
int3
rcll
xchg
xor
lret
shrl
mov
sub
addb
mov
lods
xor
js
cmpsl
adcb
adc
jl
out
add
sub
and
es
pop
lret
loope
mov
cmp
and
jmp
dec
pop
add
and
mov
dec
test
repz
dec
jno
das
mov
scas
mov
popa
mov
or
adc
jp
xchg
test
add
xor
mov
mov
stos
int3
mov
lods
fucomip
and
scas
pop
call
cmc
xchg
inc
sub
mov
popf
call
fsubl
ret
inc
sub
push
pop
push
cmp
xor
loopne
scas
lods
orb
call
test
cmpsb
lcall
ss
ret
lcall
mov
jo,pt
xor
adc
cld
rorl
xchg
lods
push
movsl
mov
add
push
sub
push
push
push
mov
inc
clc
pop
xchg
imul
inc
xor
xchg
jle
cld
sbb
add
pushf
add
test
neg
orb
arpl
jge
inc
cld
or
inc
or
xchg
sub
leave
popf
fmull
pop
sbb
mov
sbb
jmp
ds
data16
add
shr
add
add
cltd
repz
lahf
jp
nop
jp
imul
xor
lods
sbbb
push
pop
push
loop
add
adc
jns
dec
dec
push
pusha
push
push
adc
push
mov
pop
pop
in
andb
not
push
push
push
and
mov
dec
inc
pop
or
sbb
pop
push
cwtl
movb
sub
or
stos
inc
iret
or
sub
gs
mov
ret
das
cltd
nop
js
mov
add
lcall
pop
or
sub
or
push
mov
call
shll
daa
dec
dec
aaa
or
es
sub
adc
icebp
xchg
and
imul
xlat
cmp
shll
lret
add
insb
jp
fstpl
std
jne
or
xchg
add
lds
mov
mov
inc
and
scas
cmpb
xor
aas
ja
ljmp
and
adc
pop
mov
adcb
cltd
roll
aaa
inc
jmp
mov
outsb
or
loop
jl
pop
push
rclb
fbld
sub
and
fstps
or
dec
inc
mov
pop
test
adc
jae
and
jmp
pop
sub
mov
ret
clc
and
scas
and
lock
xchg
add
fldcw
xor
in
scas
mov
aas
or
movsb
lods
push
cmpsl
mov
push
pop
adc
fimull
sbb
xchg
in
xchg
inc
push
ja
and
push
outsb
jne
jl
and
fbstp
in
pop
not
pop
movl
push
inc
mov
pop
andb
ja
adc
ror
jb
loopne
loopne
sbb
es
out
pusha
inc
lcall
daa
adc
push
sub
and
sbb
add
mov
fstpl
pop
pinsrw
mov
jge
mov
push
adc
add
mov
xchg
pop
stos
inc
mov
adc
sti
pop
mov
ljmp
push
jmp
xchg
or
push
pop
mov
ret
fucomi
mov
push
repnz
sahf
loop
outsb
dec
pop
jmp
pop
popf
dec
push
enter
les
enter
sub
cmpsb
push
sarb
xchg
data16
sub
in
out
cmpsb
cmp
les
insl
dec
repz
pop
xor
jge
out
das
fsubrs
add
js
insl
inc
test
pop
movsl
xor
icebp
shlb
or
add
iret
cmp
rcll
fidivrs
outsl
jo
fsts
mov
sub
sub
mov
add
lods
dec
lcall
es
mov
or
pop
pop
and
pop
pop
and
xchg
stos
push
push
xchg
loop
xor
or
mov
mov
lods
into
adc
xor
mov
std
xorl
fistps
and
mov
call
inc
cmp
pop
pop
jl
xor
mov
and
cli
adc
and
pusha
mov
inc
addr16
jo
or
add
icebp
xor
push
pusha
loopne
loope
adc
addr16
add
cwtl
test
sub
pusha
fistpll
inc
xor
jmp
aad
ljmp
movb
mov
xor
xchg
jmp
pop
jmp
push
push
push
push
push
and
mov
pop
or
or
popf
scas
inc
xchg
cwtl
pusha
cwtl
push
int
dec
mov
cmc
popa
mov
stc
mov
add
xor
cmp
enter
dec
ss
test
or
pop
and
jg
inc
ror
pushf
mov
push
ljmp
scas
pop
jo
pop
pop
arpl
sub
cmp
pop
adc
or
ret
call
xlat
inc
add
aas
push
imul
repnz
add
ljmp
pusha
and
lcall
cs
pop
xor
jmp
push
push
jne
push
inc
mov
mov
cmpl
mov
jmp
out
decb
test
and
jb
xchg
out
lock
pop
push
push
mov
dec
sahf
es
mov
mov
hlt
add
push
mov
shl
xor
loopne
pop
sub
push
push
stos
mov
jge
aaa
rcrb
shl
jp
add
add
jb
test
mov
repz
dec
aam
in
call
icebp
jecxz
dec
shr
test
daa
shll
add
pusha
mov
xchg
cmp
shr
nop
test
mov
add
stc
and
and
or
push
xor
movsl
shl
add
shrl
xor
mov
adc
loopne
wbinvd
daa
insb
add
push
adc
lods
xor
test
cmc
ljmp
push
mov
jmp
xchg
pushf
das
dec
out
cmp
lahf
ds
mov
dec
pop
cld
push
mov
adc
insb
jmp
mov
outsl
pop
xor
sub
jne
fidivs
or
scas
sub
ret
or
jmp
shr
shrb
out
pop
aam
les
xor
rorb
negb
popa
inc
inc
jp
inc
sub
or
das
pop
lock
inc
jle
lds
sub
fsts
xlat
mov
dec
push
mov
push
mov
sbb
movsl
cmp
fldlg2
sahf
adcb
xchg
push
movsl
cmp
daa
xchg
jno
addr16
sti
pop
in
xorl
add
pop
sub
mov
stos
ret
jb
mov
add
loop
xor
lahf
lock
jmp
mov
pop
dec
or
stos
push
pop
cld
or
sbb
fst
mov
mov
jns
inc
pusha
add
mov
add
pop
jmp
inc
sub
test
or
lfs
test
shll
test
jo
inc
roll
or
dec
insb
hlt
xchg
xor
cmpsl
call
adc
daa
push
push
test
mov
mov
mov
movsl
push
mov
imul
ja
and
push
sub
loope
add
pop
dec
sub
mov
add
and
bswap
dec
push
adc
inc
sbb
push
rclb
mov
mov
push
or
stos
push
jp
mov
loop
and
mov
xor
pop
mov
cli
mov
jo
arpl
test
in
mov
add
bound
bound
mov
adc
pop
add
leave
add
repz
xor
push
cmc
xchg
mov
sub
push
imul
mov
cmp
sbb
daa
pop
sub
push
int
cmpsb
xchg
add
push
jmp
subb
push
pop
mov
lds
mov
les
mov
jp
fsubr
push
fmuls
das
iret
sub
mov
pop
push
je
lret
int
cmpsb
sbb
jmp
pop
dec
mov
ficoms
inc
sar
outsl
xor
popf
orb
loopnew
jnp
or
cli
dec
and
jg
in
or
das
mov
shlb
testl
xchg
or
xlat
inc
stos
and
lret
fisttps
mov
adc
add
fildll
jnp
mov
inc
inc
pop
out
add
jmp
in
pop
pop
mov
ret
or
outsb
fsqrt
add
or
dec
loop
les
in
sbb
jmp
adc
ficompl
jno
jno
cmp
mov
or
jp
pop
pop
pushf
xor
push
fisttpll
in
scas
mov
addb
leave
lds
subl
cmp
or
aam
pop
in
sub
test
shrl
mov
sub
rolb
xor
add
in
je
sbbl
insl
in
cmp
xbegin
dec
insl
loope,pn
add
adc
pop
cmp
cmc
add
rolb
xor
add
add
xchg
mov
push
lea
int3
push
jge
mov
and
mov
add
and
mov
sub
pop
and
outsl
jmp
mov
mov
pop
sub
enter
fcomps
jb
lds
lock
mov
inc
in
dec
mov
clc
mov
popf
rcll
jmp
test
mov
add
xchg
and
imul
mov
popf
pop
sbb
inc
dec
jae
lods
push
daa
sti
sub
pusha
jg
sbb
test
pop
jl
add
adc
fs
add
ja
fs
roll
jb
jl
push
decb
in
imul
adc
xchg
roll
push
arpl
dec
sahf
rcr
loopne
cmpsl
sub
xchg
add
xchg
bound
add
mov
jbe
cmp
popf
inc
fs
mov
pop
rol
inc
push
mov
lret
push
loop
das
iret
and
inc
dec
daa
pop
jg
mov
mov
xor
orl
push
shrd
sbb
add
int3
leave
bound
cmp
sub
jl
lock
xlat
adcb
sbb
mov
cmpl
xchg
pop
push
into
push
inc
lahf
scas
cmc
jae
adc
mov
sti
adc
jb
je
js
insl
rorl
adc
fs
xchg
jne
mov
push
jp
pop
mov
push
pusha
and
repnz
xor
inc
aam
int
cli
push
popa
inc
js
in
and
imul
leave
shr
shrl
pop
aad
inc
arpl
sbb
and
push
dec
inc
mov
hlt
flds
inc
int3
inc
inc
add
in
pop
cmp
pop
sbbb
or
mov
fbstp
push
sti
pop
add
arpl
or
sub
or
adc
mov
repz
scas
enter
nop
orl
xchg
pop
shrb
into
popf
imul
and
das
jp
dec
rcll
test
jge
mov
mov
in
imul
pop
add
dec
ds
mov
xor
jmp
hlt
push
mov
sbb
enter
inc
xchg
push
cmp
scas
cltd
inc
imul
das
adc
and
adc
jmp
dec
inc
lods
add
mov
cwtl
and
push
push
push
or
scas
dec
xor
sbb
loopne
loopne
push
rolb
mov
ja
sbb
add
fists
fs
shll
mov
jbe
roll
dec
cmp
dec
iret
loope
sub
roll
push
std
mov
mov
and
pop
js
sbb
fucomip
push
rclb
mov
xor
repz
out
dec
or
jne
aas
or
shlb
sahf
mov
add
and
jmp
sub
enter
jne
push
or
lock
in
jno
ds
adc
stc
nop
jmp
sbb
pop
addb
xor
jmp
jle
fisubs
out
mov
out
pop
and
xchg
jmp
mov
rorb
or
mov
xor
loop
mov
jle
adc
push
cmpsb
sub
pop
es
loope
push
sbb
mov
jno
pop
scas
inc
push
data16
mov
sub
xor
lahf
push
sub
sub
and
mov
adc
push
mov
dec
stc
sub
or
arpl
dec
and
dec
les
mov
dec
aaa
pop
lds
sub
jmp
std
insl
sar
sub
test
icebp
orb
mov
jnp
ficoml
dec
cwtl
inc
or
adc
ss
shl
push
mov
and
or
fdivrl
inc
jmp
jge
sbb
mov
mov
cmp
cltd
lahf
fprem1
inc
ljmp
popf
push
stos
pusha
mov
pop
xor
repz
mov
pop
and
push
cmp
push
jnp
inc
ja
push
ds
or
push
cs
mov
in
jne
dec
sub
inc
and
ljmp
inc
mov
mov
jecxz
nop
arpl
outsb
inc
pop
add
int3
dec
sbb
mov
int
add
ja
or
add
mov
pop
mov
or
and
aam
add
xor
jns
lea
jne
fs
pop
dec
push
dec
enter
sub
add
ret
cmp
dec
mulb
pop
cwtl
outsb
lret
popl
xor
stos
push
adcb
jmp
lea
sahf
outsb
mov
push
cld
inc
out
pop
popa
mov
fmul
loop
cmc
mov
jmp
push
push
das
add
cmp
or
cmc
aad
sub
pop
adc
jns
or
dec
pop
int
daa
movsb
or
pop
ficomps
shrb
notl
jle
push
and
shr
cmp
in
xor
push
mov
add
or
insl
rcrl
sub
mov
adc
jmp
popf
adc
ss
or
adcb
test
das
inc
jnp
pop
adc
or
inc
or
cmpsl
or
add
pop
add
clc
add
and
ficomps
lahf
test
inc
enter
push
pushf
xchg
jmp
adc
adc
bound
pop
sub
movsb
cltd
push
add
cmc
xchg
mov
or
loopne
lock
iret
inc
push
insl
enter
xchg
rdtsc
pusha
and
roll
arpl
shrb
jmp
sbb
pop
jmp
fs
inc
adc
pop
sbb
jmp
addl
add
sahf
into
and
add
dec
shlb
mov
jmp
fs
rolb
pop
sub
jl
or
mov
data16
popf
inc
push
lret
or
cltd
js
incl
add
jmp
out
pop
xor
bound
arpl
sahf
xchg
and
pushw
push
or
das
inc
jle
jne
shr
push
mov
or
jmp
dec
arpl
inc
cmp
lds
dec
pop
dec
sbb
mov
mov
adc
jb
push
push
pop
mov
pop
jle
loopne
and
inc
outsl
sub
mov
pushf
jmp
pop
mov
lock
xor
cld
or
pop
push
int
jno
sub
cs
dec
ret
push
pusha
dec
inc
fldl
sti
and
jmp
sbb
pop
lock
add
stos
fmuls
lahf
sbb
and
pushf
jl
or
sub
sarl
sub
std
or
out
imul
push
push
and
pop
mov
sub
xchg
push
int
iret
mov
adc
and
ficoml
inc
testl
dec
inc
adcb
mov
mov
push
xor
push
sti
jmp
dec
sbb
mov
or
lds
jge
mov
data16
bound
adc
lret
xchg
add
push
clc
lret
out
sbb
inc
scas
and
push
loope
sub
aam
popa
sbb
push
cmp
adc
xor
push
mov
jnp
or
push
sub
mov
xchg
inc
lea
insl
cmp
and
mov
cmpsb
call
and
xchg
sbb
mov
jmp
ret
push
add
adc
or
andb
ficomps
mov
xor
out
das
push
dec
cmpl
xchg
or
push
jmp
lds
das
xchg
mov
sahf
fwait
js
cltd
xchg
jp
dec
push
mov
lods
push
mov
pop
jne
adc
mov
pusha
stos
add
rcrb
pop
pop
inc
sbb
and
outsl
nop
sbb
or
jecxz
mov
mov
cmc
sbb
stc
or
lock
inc
push
in
jle
repz
sbb
iret
inc
das
xor
mov
and
sub
xchg
or
push
mov
fs
ss
add
cwtl
inc
cwtl
js
xchg
bound
inc
psllw
dec
mov
popf
xchg
daa
adc
or
repnz
test
pop
repnz
lds
push
xchg
popf
sbb
xor
or
das
add
mov
mov
cmp
sub
and
xor
inc
sub
jmp
sbb
mov
sbb
jb
jle
loopne
repnz
movsl
pop
adc
cli
rol
or
or
ljmp
sbb
out
mov
push
jo
sbb
lods
mov
and
jnp
pop
fs
mov
hlt
call
bnd
add
jo
pop
mov
movsb
push
aaa
adc
mov
xchg
arpl
pop
adc
add
les
repz
mov
nop
or
push
mov
test
ja
loope
jo
or
xor
mov
mov
popf
popa
xchg
push
add
cli
cmpl
cld
incl
push
in
xchg
add
scas
stos
xor
inc
pop
out
ret
or
cmp
adc
add
shl
adc
gs
adc
sbb
pmuludq
add
or
lds
insb
or
pop
out
testb
cld
and
xor
cmp
shll
push
pushf
clc
and
jp
orl
movsl
orb
dec
mov
gs
jo
add
add
add
push
fstl
daa
or
lret
filds
sub
roll
std
xorl
push
sbb
cmp
popa
mov
push
dec
shl
add
jne
and
push
sbb
xor
cmp
fbld
ret
jae
dec
inc
jmp
xchg
sub
mov
add
or
xor
mov
addr16
add
loopne,pn
fstps
mov
or
and
cmpsl
pop
ss
ror
push
stos
aas
lock
jmp
das
mov
fimuls
pop
into
daa
cltd
rolb
cld
sbb
mov
stos
and
rorl
data16
cs
cmpsl
mov
pop
fadds
dec
sarb
cmpsl
pop
je
leave
add
arpl
inc
enter
es
jb
stc
xor
out
pop
incl
push
testb
pop
std
pop
xor
add
aas
nop
inc
cmp
inc
test
add
scas
pop
mov
cmc
push
call
jp
cmp
hlt
gs
add
jmp
push
push
repnz
sub
pop
mov
mov
movsl
add
jmp
mov
xor
jge
cwtl
xor
popf
adc
andb
add
jecxz
ljmp
pop
psadbw
iret
sub
aaa
sbb
adc
sbb
fcomps
xor
aam
notl
jp
dec
cld
and
call
addr16
arpl
stos
fs
pop
testb
xor
inc
lds
lods
inc
rolb
jecxz
pop
pop
inc
mov
shrb
lock
xchg
xchg
lock
daa
mov
push
loope
pop
push
iret
xchg
sahf
loope
push
je
fs
push
add
or
les
mov
pop
adc
outsl
rcrb
pop
in
inc
push
xor
repz
jge
xor
mov
ja
xor
sub
std
mov
push
fimull
cvtdq2ps
push
sbb
xor
mov
push
cmp
test
frstor
xchg
mov
enter
mov
inc
lret
xor
or
sbb
push
fucomip
and
outsb
add
mov
and
xchg
adc
add
dec
nop
outsb
rcll
out
or
xor
mov
lret
or
fsubp
dec
and
pop
icebp
pop
in
mov
xlat
test
pop
icebp
push
outsb
pushf
mov
xor
insl
xor
cmp
rclb
xor
mov
cmp
inc
cmp
fucomp
and
dec
repnz
push
xchg
cmpsl
jne
sub
lret
inc
insl
push
pusha
mov
arpl
adc
shlb
ficomps
or
mull
add
pop
daa
cmp
push
hlt
popf
lcall
inc
out
imul
outsb
ljmp
cli
add
ss
add
es
daa
nop
sub
sarb
rcl
loop
negb
fcmovbe
ljmp
cmp
or
xchg
inc
mov
jl
pop
das
push
push
pop
fbld
js
lcall
cmc
ds
orl
lcall
pop
shrb
out
push
mov
jns
aam
dec
orl
test
movsl
lret
push
mul
sub
std
sub
aaa
lods
pop
iret
flds
inc
mov
mov
inc
inc
popa
pop
jmp
push
pop
in
js
mov
and
jg
xchg
stos
mov
rcrl
cmp
xchg
push
pop
push
test
push
jmp
adc
cwtl
call
imul
jecxz
sub
orl
test
shlb
enter
add
hlt
fldcw
xchg
mov
xchg
jne
shl
mov
push
and
ja
and
or
shrb
jecxz
add
popa
push
not
lods
add
mov
jae
in
daa
sti
aam
adc
mov
lods
ret
nop
popa
mov
jno
mov
js
mov
mov
insb
jge
mov
out
cs
sub
jo
sub
iret
call
pop
out
jbe
dec
shl
push
xor
sbb
stos
mov
icebp
inc
lret
push
addr16
scas
mov
push
jg
subb
arpl
mov
das
loop
lret
ret
les
popa
outsb
mov
fsubs
xor
add
adc
adc
aas
lea
mov
dec
adc
sub
shl
inc
cmp
lret
inc
stos
jb
inc
jo
push
xor
mov
dec
dec
xchg
lock
out
mov
stos
xchg
fwait
pop
xor
mov
leave
inc
pop
dec
pop
test
clc
mov
mov
jmp
mov
mov
scas
sbb
push
in
loopne
cmpb
nop
jno
push
add
cs
mov
mov
mov
mov
dec
inc
sbb
add
push
jbe
pop
mov
push
orb
imul
adc
jmp
cli
sub
popa
push
mov
xor
les
add
sub
mov
iret
pop
pop
sub
add
pop
xor
pop
and
lds
pop
mov
rcr
push
mov
or
movsl
xchg
rclb
lock
sbb
fdivl
adc
imul
sti
icebp
push
jb
cld
pusha
jo
mov
pop
fimuls
or
imul
inc
xor
adc
mov
in
dec
push
mov
push
not
lret
scas
lret
iret
adc
and
jne
and
pop
xchg
out
pop
je
stos
enter
aas
cmp
add
imul
outsl
or
mov
or
adc
add
je
or
push
push
and
or
test
imul
xchg
xor
les
dec
cmp
rorb
adc
les
and
inc
or
inc
push
shrb
jno
ss
dec
add
add
jb
pushf
xchg
sahf
jg
sub
add
pop
push
inc
add
inc
imul
fcomi
add
leave
mov
mov
lahf
loop
je
jb
push
push
push
inc
fs
pop
stos
fcom
xlat
dec
mov
nop
cmp
mov
inc
jmp
add
scas
xchg
daa
sbb
sbb
xor
lock
rcrb
and
jno
sbb
push
nop
cmp
mov
mov
xchg
fnstsw
rcr
aam
iret
adc
movb
adc
cmp
pop
dec
clc
xchg
adc
jmp
xor
inc
dec
lds
jo
pop
jmp
xor
cld
fists
fadds
enter
mov
fisubrl
nop
jmp
out
pop
dec
add
ret
pop
das
push
pop
dec
aas
jl
cmp
pop
cmp
jmp
add
outsb
lret
jb
cltd
xor
add
ret
jmp
es
scas
mov
push
icebp
mov
dec
add
or
lds
clc
xchg
adc
lods
push
enter
or
push
lcall
pop
in
push
or
adc
out
jge
cltd
in
pop
add
lret
in
xor
xor
pop
push
lock
pop
cs
repz
push
mov
bound
xor
enter
pop
cld
out
std
gs
xor
test
sub
lret
inc
fisubs
sbb
push
mov
sub
fucomp
dec
ljmp
adc
push
aaa
xchg
xor
xor
add
mov
jmp
lock
push
push
push
dec
test
add
repnz
cs
int
pop
imul
icebp
mov
pop
inc
in
test
or
mov
or
addr16
insb
push
jp
push
add
lret
dec
ret
mov
insl
dec
pop
sbb
cmpsb
lcall
iret
fbstp
push
jl
lock
xchg
or
add
lret
mulb
push
cli
or
add
and
aas
mov
add
loopne
test
out
popf
xchg
insl
pop
test
xor
sub
push
lahf
lahf
int3
or
cmp
aaa
xchg
dec
scas
mov
mov
cmp
and
dec
mov
jp
sub
js
das
lock
pop
add
add
pop
in
xor
rolb
nop
mov
jmp
ljmp
sbb
mov
push
inc
sbb
adcb
pusha
pop
add
add
cmpb
sbb
or
scas
cmp
testb
dec
pushf
add
cmc
sbb
pop
sub
adcl
push
aaa
mov
popf
jmp
pop
dec
push
or
movsb
jbe
jp
cmp
jns
mov
jl
shl
jl
dec
add
cmp
sub
mov
cmp
not
mov
sub
add
pusha
xor
enter
daa
aam
push
daa
mov
int
or
jge
lds
jb
ret
mov
loop
jnp
outsb
dec
lods
cltd
mov
jp
cwtl
arpl
inc
xor
dec
mov
stc
repnz
sub
dec
pop
adc
or
int3
or
negb
jp
adc
xchg
sbb
jb
mov
out
cmp
out
sub
push
test
pop
mov
jmp
inc
movb
mov
nop
cld
mov
lret
es
bound
push
shr
and
pop
or
insl
pop
dec
daa
shlb
ficoms
push
sub
call
add
or
mov
sbb
cmp
fs
xor
pop
sub
xor
daa
mov
std
xor
and
pop
ficomps
inc
jmp
dec
push
divl
cmp
adc
fmuls
bound
push
xor
or
stos
adc
adc
pop
xor
push
mov
inc
nop
stos
jecxz
dec
jmp
push
loop
addr16
stc
pusha
out
jmp
sub
cmp
mov
test
out
clc
mov
sbb
add
xchg
sub
loope
push
push
pop
inc
pop
and
or
les
in
icebp
mov
lret
mov
or
out
repz
cmp
pushw
dec
mov
in
pusha
es
fwait
sbb
or
pop
pop
push
push
or
stos
inc
mov
dec
mov
add
xor
inc
jge
jns
add
cmp
mov
rol
call
fisttpl
sub
sbb
and
push
jp
ss
mov
pop
adc
push
xchg
lods
sub
enter
in
xchg
and
daa
xchg
incl
icebp
andl
or
pop
mov
sbb
push
loop
outsb
jbe
loop
out
jg
lahf
nop
ret
mov
push
lahf
dec
call
xchg
pop
push
push
enter
dec
push
or
pushf
outsl
int3
enter
and
pop
rolb
loopne
or
cmpsl
punpcklbw
jge
sub
inc
inc
push
and
add
daa
jmp
nop
stos
movsb
and
bound
fcomps
lods
xchg
mov
sbb
mov
std
push
aad
sub
adc
pop
lret
sbb
sbb
and
mov
das
dec
or
das
inc
cmp
mov
sbb
dec
popa
xor
shl
imul
test
and
jmp
es
rorb
dec
push
loop
rclb
push
loop
enter
mov
fidivl
fidivrs
cmp
xor
popa
add
das
dec
jmp
mov
mov
cltd
les
xchg
call
xor
mov
movsl
jge
shr
popa
imul
hlt
aaa
mov
movl
lds
pop
out
fidivl
aam
les
pop
test
jmp
stc
lea
pop
and
jo
mov
or
pop
xor
adc
lds
mov
neg
adc
in
add
or
int
pop
mov
lods
imul
push
push
pop
jmp
scas
mov
pop
push
xchg
mov
in
mov
xchg
icebp
push
dec
rdpmc
inc
cmp
mov
stos
xlat
in
mov
xchg
cwtl
loopne
mov
mov
sbb
pop
cmp
fcoml
pop
orb
incb
mov
bound
or
mov
cmpsb
imul
add
mov
push
push
cmpl
les
fsubl
mov
jb
dec
push
and
inc
popa
repnz
xchg
add
bnd
aam
enter
rclb
fstps
out
mov
push
stos
adc
mov
sub
pop
push
sarl
cmpsb
cmp
lret
add
or
add
and
fucom
fwait
std
jns
mov
jo
mov
shl
hlt
mov
mov
leave
bound
cli
ret
xlat
dec
enter
lahf
in
rorb
rcrl
roll
outsb
popa
or
or
add
and
orb
lds
jo
mov
push
pop
pop
push
ss
jo
push
es
sub
sub
push
add
sub
dec
xchg
ficompl
jb
mov
add
outsb
jmp
cmc
add
jle
mov
in
mov
xor
daa
inc
mov
insb
xchg
add
pop
test
dec
xor
mov
data16
cld
inc
sub
dec
sbb
jno
aaa
mov
out
mov
scas
fcoms
scas
loop
stos
test
popf
iret
xchg
mov
add
jmp
neg
adc
cmp
mov
dec
add
xchg
js
roll
repz
sub
jae
xchg
loopne
and
or
xlat
push
pop
test
mov
pop
sub
and
add
hlt
mov
add
xor
gs
cmp
pop
pop
push
mov
pop
mov
xchg
fstpt
shll
cs
in
je
icebp
adc
sbb
out
inc
fucomp
mov
push
add
stos
lahf
ss
dec
xchg
xchg
sub
pop
pop
push
mov
les
push
rcll
jecxz
and
lar
xchg
repnz
add
or
mov
insb
pop
dec
orb
repnz
icebp
movd
sar
pop
out
enter
add
sahf
andl
aas
xchg
jmp
sbb
xor
jmp
les
add
jle
das
cmp
or
xchg
outsl
sti
loop
or
mov
push
push
ret
jne
gs
lret
nop
xchg
mov
mov
mov
roll
pop
mov
pop
js
mov
loope
mov
divb
and
fwait
shlb
icebp
pop
das
hlt
rorb
adc
rorl
stc
fbld
popf
scas
subb
push
sbb
decb
cmpsl
mov
xlat
data16
sub
aaa
push
push
pop
inc
cmp
xchg
add
cmp
sbb
bound
imul
or
push
dec
add
xor
test
push
push
sub
popf
sti
xchg
xchg
mov
jb
xchg
ljmp
mov
add
out
ds
dec
nop
xchg
std
adc
inc
cltd
add
ret
ljmp
aad
lea
xchg
and
in
jg
pusha
push
sub
fidivrl
or
sub
xor
rcrl
or
ds
andl
stos
pop
call
cli
andl
lret
inc
jo
pushf
jmp
movsl
xchg
adc
push
sahf
push
xor
fstl
and
lret
dec
fwait
sub
jmp
pop
pop
pop
sub
lcall
sbb
test
out
or
fsts
or
jmp
pop
mov
stos
adc
testb
inc
add
inc
out
or
mov
inc
fisubrl
or
and
leave
subl
es
pop
add
mov
add
push
inc
daa
jg
call
aaa
fbstp
insl
addb
in
sub
out
aaa
jmp
xor
or
mov
pop
add
in
mov
jmp
inc
sti
jge
pop
pop
idivl
cltd
jbe
xchg
sub
fldcw
lods
rcr
adc
inc
loope
sub
cld
inc
sbb
movsl
out
icebp
mov
mov
lods
addr16
add
mov
bound
pop
mov
xor
xchg
int3
jne
jmp
jl
and
popw
and
adc
or
sarb
sbb
in
push
ljmp
xlat
les
sub
mov
cmpsl
jle
pop
arpl
dec
int3
sbb
insl
das
hlt
xchg
jmp
movsl
inc
adcb
addr16
xor
and
jbe
or
lds
fsubr
mov
pop
nop
rcll
sbb
bound
cli
sti
jg
jnp
rclb
cwtl
jno
dec
mov
insb
ljmp
scas
adc
outsb
xchg
pop
add
ret
std
and
je
add
sub
pop
sub
push
push
jmp
sub
mov
je
clc
pop
pushf
jle
push
mov
cmp
sub
pop
pop
hlt
out
or
mov
or
sbbl
test
push
lds
add
mov
jno
and
add
arpl
movsl
mov
les
jg
push
pop
pop
inc
dec
daa
in
jae
lods
inc
adc
inc
add
mul
xchg
enter
mov
mov
fisttpll
pop
sub
scas
je
sti
shlb
pusha
mov
mov
pop
jmp
mov
mov
repz
push
xchg
pusha
jo
mov
test
dec
sub
imul
xchg
stc
lahf
add
pop
push
push
xor
sbb
out
jbe
incl
dec
int3
dec
inc
testl
pop
mov
add
xchg
sub
or
jmp
leave
das
adc
shlb
xor
cld
insl
xor
dec
and
cmp
jecxz
loopne
pop
cwtl
iret
or
xor
pop
nop
mov
ds
pusha
or
repnz
dec
push
xchg
and
or
dec
scas
dec
push
loopne
push
add
cmc
inc
mov
aad
mov
sub
ror
inc
pop
rorb
insl
push
mov
ficoms
hlt
mov
push
cmp
adcl
push
das
pop
adc
mov
call
bound
stos
clc
rcrb
push
lds
xor
push
sub
sti
mov
push
pop
jmp
jp
mov
inc
and
push
lods
fldcw
lret
ret
pop
addr16
in
dec
push
mov
js
imul
gs
jle
pop
add
sbb
or
jl
cmpl
xchg
in
pop
cld
sub
lock
inc
icebp
filds
aaa
dec
mov
int
sub
or
inc
pop
inc
loopne
lds
mov
je
mov
lods
push
inc
push
mov
sub
add
push
mov
push
or
rclb
jmp
ficoms
lds
lahf
push
adc
mov
arpl
in
aam
ss
xlat
inc
out
arpl
pop
push
adc
or
ja
add
mov
mov
stos
lods
push
push
jmp
xor
into
sbb
pop
mov
xor
inc
or
jb
das
xchg
or
lret
insb
sbb
popf
imul
mov
data16
push
mov
jmp
ret
movsl
adc
jno
sbb
inc
mov
cli
or
subb
aas
fcoms
mov
jg
mov
or
rolb
jmp
mov
cmp
clc
and
jmp
sbb
sbbb
adc
rorl
addr16
scas
xchg
push
fmuls
ret
adc
sub
adc
push
mov
jb
dec
out
add
cmpsb
popa
adc
ret
xchg
sbb
popa
sub
mov
and
into
mov
cmc
mov
mov
cmpsb
or
aam
or
in
es
adc
add
jmp
ret
inc
xchg
loopne
adc
test
xchg
pop
mov
sti
daa
mov
mov
mov
dec
mov
aaa
popa
cltd
pop
scas
in
cld
std
ret
dec
fidivrs
adc
addb
sub
mov
mov
test
xchg
cltd
mov
sbb
adc
mov
push
sbb
loopne
add
jno
and
adc
pop
scas
pop
lds
dec
push
or
outsb
rcr
sub
add
lret
add
loop,pt
int
jmp
mov
xor
inc
jmp
pusha
inc
mov
call
nop
inc
sub
stos
and
push
movsl
je
movsl
js
stos
push
fsubrs
sub
push
mov
movsb
pop
inc
pop
xor
das
or
test
jno
bound
fld1
scas
int3
mov
pop
dec
sbb
push
movsbl
xchg
fwait
adc
cld
push
daa
pop
push
mov
add
aam
nop
addl
imul
mov
shl
push
es
push
repnz
jbe
cli
lds
call
pop
xchg
into
mov
popa
mov
notb
jmp
jae
xor
push
push
pop
dec
sbbl
or
jmp
push
add
or
adc
pop
add
add
dec
mov
pop
in
adc
cmp
stc
mov
push
mov
xchg
mov
rclb
addr16
aad
jns
test
mov
xor
xchg
jb
vpunpckhqdq
lahf
jne
test
sub
mov
mov
mov
and
jle
lods
pusha
push
lahf
repz
clc
and
ret
push
ret
fbld
in
in
scas
pop
push
pop
add
mov
nop
in
pop
and
sub
pop
cmp
adc
push
divb
pushf
xchg
jnp
dec
push
sub
dec
ret
sub
add
out
xor
cs
jle
pop
add
jmp
mov
jle
adc
mov
push
and
mov
loopne
mul
sbbb
or
mov
pop
or
inc
xor
xchg
test
loopne
fimuls
adcb
xchg
inc
push
cmpl
or
adcb
add
push
sbb
mov
pop
sbb
add
test
push
lods
sbbb
xor
stos
rclb
jg
sub
push
mov
outsb
out
adc
sbb
xchg
mov
les
pop
shrl
ja
mov
ret
cld
in
leave
pop
js
adcl
sbb
or
push
setbe
or
stos
cmp
jmp
and
sub
xor
or
push
adc
gs
pop
in
mov
or
mov
aam
fistpll
in
das
adc
repz
pop
shll
dec
jge
fidivl
and
or
std
or
aad
pop
clc
xchg
xchg
pop
bound
pop
movsl
dec
hlt
call
into
insl
jp
mov
test
inc
les
or
mov
in
lods
and
dec
das
pushf
pop
jno
lret
popa
cmp
sbb
pop
popf
push
sbb
pop
xchg
lock
add
sub
dec
add
aam
add
jns
mov
mov
das
push
inc
xor
cld
call
push
xor
xchg
mov
daa
das
pusha
inc
out
add
dec
lea
lret
dec
test
loopne
repz
dec
test
repnz
jne
push
shlb
fldenv
lods
das
aad
dec
shll
mov
mov
adc
ljmp
scas
arpl
push
dec
cmp
test
jecxz
les
repnz
pop
test
jnp
andb
mov
mov
gs
inc
mov
jae
xchg
dec
not
lahf
add
fdivr
jle
xchg
jge
sarb
popa
cmp
cmp
mov
mov
xor
mov
cmp
jbe
and
xchg
jecxz
cmpsl
and
shr
or
push
xor
xor
sub
pop
and
daa
xor
sub
dec
or
xchg
mov
jmp
pusha
inc
lock
xchg
popf
pop
icebp
lret
dec
cmp
cltd
mov
mov
insl
xor
ljmp
jns
mov
jmp
push
nop
rcrl
pop
or
xor
jb
sub
je
dec
fildl
push
lcall
pop
or
out
add
push
jmp
addb
jb
dec
mov
adc
pop
sbb
push
cwtl
out
push
popf
out
movsl
sbb
pop
pushf
inc
imul
and
lret
or
pop
outsb
lret
pop
add
nop
call
outsl
or
ret
or
enter
push
rcrl
pop
and
add
ljmp
arpl
sbb
mov
std
xchg
dec
xchg
pop
xorb
inc
mov
ret
in
dec
jmp
push
out
dec
rclb
jnp
pop
int3
or
pop
mov
push
add
jp
inc
pop
add
pop
outsl
repz
jl
add
popf
and
jp
cli
dec
ds
sub
and
sub
lods
hlt
lcall
jle
js
imul
push
rorb
push
lods
nop
and
orb
mov
dec
enter
pop
fstp
sub
dec
xchg
ret
inc
xchg
push
int
dec
add
adc
movsl
andb
loopne
sub
xor
mov
cmp
jmp
shll
sub
mov
mov
mov
into
adc
aas
jo
dec
push
mov
clc
bound
les
pop
sti
jno
lea
xchg
or
stc
mov
jmp
lcall
nop
xor
sub
dec
adc
mov
nop
add
fldl
fucomip
fs
mov
xchg
mov
movsb
lret
cmp
call
loop
push
roll
jl
out
ss
mov
cld
out
sub
sbbb
dec
mov
cmp
inc
adc
and
pop
jmp
int3
pushf
inc
fmull
aas
rcll
scas
insl
in
in
xchg
mov
cmp
sahf
jp
mov
fwait
das
cld
push
jp
jb
mov
pop
aas
xchg
pop
cmp
jmp
push
dec
add
jmp
mulb
mov
push
xlat
pusha
mov
inc
inc
cmc
xchg
mov
cmp
fisubs
out
dec
sub
lds
mov
jo
out
xor
sub
lret
and
fsubp
sahf
jp
sub
push
lock
xor
pusha
negb
pop
mov
popf
jge
adc
mov
je
mov
adc
loopne
out
push
xchg
ja
mov
push
jb
sbb
xor
rcl
inc
scas
pop
xor
add
mov
test
andl
pop
mov
cmp
mov
add
inc
sbb
sbb
jp
rcrb
xchg
popa
pop
loopne
cmpsb
mov
xor
or
push
mov
test
divl
roll
mov
and
mov
out
sti
push
cld
xchg
mov
dec
mov
xchg
xor
or
and
dec
pop
mov
pop
loope
aas
push
mov
movsl
jno
das
add
leave
push
imul
push
or
test
add
aaa
in
je
divl
repz
inc
cmp
sbb
dec
mov
xor
cmp
outsl
xchg
repnz
or
cmp
scas
xlat
lock
loop
inc
add
inc
adc
pop
inc
push
shrl
sahf
sub
out
xchg
and
lea
in
or
loope
repz
sbb
mov
pop
rclb
shlb
pop
ss
ret
jmp
je
andb
inc
adc
push
mov
hlt
inc
insl
out
push
lds
and
or
mov
loopne
add
mov
xorb
jge
lods
push
jno
sub
out
addr16
repz
xor
sti
cmc
sub
add
test
call
mov
enter
aam
out
dec
aad
scas
inc
pusha
xchg
js
sub
das
add
mov
ret
aas
subl
lds
dec
pop
adc
push
xor
mov
subb
mov
push
ljmp
neg
sub
sub
ds
enter
cvtpi2ps
or
add
or
stc
nop
mov
pop
jmp
inc
push
and
cmp
shlb
inc
ljmp
aam
push
xlat
or
outsb
mov
sub
sub
jno
push
gs
lds
or
and
clc
or
add
pusha
push
or
xor
cmp
jbe
or
movsl
pop
aad
or
cmp
dec
mov
sub
repz
dec
push
std
rol
bound
int3
aaa
push
push
mov
sbb
mov
cmc
jns
or
fs
movsb
jae
mov
sub
out
stos
dec
push
sahf
cli
sub
ret
mov
cmc
addb
or
sub
mov
pop
mov
xor
pop
and
fwait
cwtl
out
dec
push
outsb
adc
mov
push
sti
pushl
lock
or
aad
pop
ret
pop
jle
outsl
decb
mov
pusha
and
mov
mov
pop
mov
call
imul
test
inc
cmp
test
mov
or
mov
dec
nop
lds
cmpb
push
fstpl
test
push
mov
mov
rol
or
or
cmp
lods
insl
test
repnz
push
pop
je
xchg
lods
mov
jg
jo
jmp
pop
loopne
xor
bound
jg
shl
rcll
stos
lea
mov
jmp
push
mov
nop
pop
push
ret
or
daa
lret
das
sti
faddp
in
cmp
jl
lret
jle
pop
mov
xor
inc
cmc
dec
and
mov
stos
pop
and
push
leave
or
clc
test
lds
jae
inc
repz
pop
outsb
add
dec
stos
inc
jmp
mov
rcl
mov
movsb
lahf
push
inc
mov
cmp
pop
xor
filds
pop
dec
ds
cwtl
es
mov
js
es
push
pop
shr
add
pop
and
dec
jno
jo
adc
dec
inc
shl
int
or
insl
mov
sbb
in
xor
fcom
loopne
sbb
leave
movsl
add
xor
pop
sub
jmp
sti
fcoms
cmp
mov
jb
push
jnp
jmp
jae
stos
cmp
cltd
stos
cli
add
mov
imul
or
pop
sub
and
dec
inc
daa
sbb
mov
stos
or
mov
adc
jg
je
pusha
adc
add
scas
cwtl
arpl
repnz
adc
xchg
cltd
popa
push
imul
clc
or
int
xchg
gs
jge
out
adc
rolb
or
clc
push
mov
scas
sbb
push
sub
sub
add
insb
jb
les
lds
shll
mov
mov
add
mov
jle
jmp
push
mov
cli
sbb
pop
sub
push
std
push
xor
daa
mov
loop
ja
xchg
jp
xor
fcomi
mov
xor
and
imul
pop
dec
add
adc
lret
or
sub
inc
push
xor
add
sahf
adc
jo
je
shr
mov
pop
xor
inc
cmp
cmp
cwtl
mov
mov
mov
aas
sub
inc
jle
dec
mov
mov
or
pop
ret
xor
mov
pushf
shrb
mov
neg
shr
nop
loope
leave
jae
cmp
gs
int
iret
xor
pop
mov
push
aaa
rcll
inc
mov
hlt
jbe
sbb
rorl
out
shlb
or
out
popf
int3
mov
sbb
ja
sbb
imull
ret
jmp
in
mov
pop
and
push
mov
sub
popf
loop
pop
pop
pop
pusha
sti
aas
xor
mov
xchg
xchg
loopne
dec
adc
mov
pop
cmp
sub
incl
xchg
repz
push
adc
cs
mov
nop
std
push
dec
sahf
in
add
std
inc
push
or
mov
dec
mov
imul
add
shr
ret
and
mov
out
int
fldt
adc
push
test
test
and
dec
push
dec
clc
mov
in
add
pop
jne
cmp
inc
adc
cmp
sbb
ja
xor
flds
test
push
push
push
stos
and
or
add
sbb
dec
adc
jl
push
mov
imul
xchg
adc
mov
push
xchg
inc
es
pop
adc
sbb
sbb
dec
pop
pop
push
push
rcll
xor
sbb
clc
in
ror
mov
fcomps
mov
das
inc
insl
cs
loopne
pop
xchg
cmpb
dec
movsb
mov
add
test
rorb
ficoms
repz
jmp
dec
pop
pop
das
xchg
jmp
movsl
sub
cmpsl
lcall
mov
xor
ret
aad
call
push
gs
sub
xchg
dec
or
inc
dec
xchg
daa
adc
test
xor
scas
sub
icebp
out
xor
test
sbb
mov
aas
ja
stos
jmp
sbb
cmp
mov
jmp
lea
insl
inc
and
push
adc
dec
cmp
popa
sub
sub
mov
mov
mov
mov
cld
pop
jne
jp
in
xchg
stos
repz
das
mov
jae
mov
rcll
mov
outsl
hlt
push
add
mov
shrl
daa
cltd
rcrb
add
jb
out
add
xchg
push
xchg
int
in
ljmp
xlat
add
jns
jb
pop
pop
push
or
insl
inc
mov
mov
mov
notb
and
sub
xor
pop
add
mov
pop
mov
jo
jb
aas
pop
add
add
inc
mov
pop
pusha
add
and
add
adc
pop
dec
sub
or
push
push
pop
shr
inc
movhps
mov
jbe
daa
dec
hlt
test
test
mov
andb
mov
ja
mov
mov
es
or
sbb
and
or
lea
sub
push
mov
xchg
iret
xor
int3
or
test
orl
inc
fisubrl
daa
test
jecxz
dec
std
lods
das
in
faddl
mov
xchg
incb
test
test
imul
mov
cwtl
pop
jecxz
loop
adc
std
xor
xchg
repnz
std
or
pop
jb
add
dec
daa
je
lret
stos
mov
out
out
ds
aas
nop
jecxz
push
shll
fdivp
and
jae
lret
lea
stc
sbb
or
xor
std
jl
dec
pop
ret
dec
ds
dec
addl
push
pop
repz
push
pop
aaa
push
rorb
idivb
inc
jmp
nop
mov
pop
add
arpl
cmp
jb
test
jl
addr16
jle
add
stc
insb
clc
push
js
daa
sbb
or
test
jl
sub
sub
add
pop
cli
push
cmp
outsb
mov
push
dec
in
mov
cmp
in
pop
jmp
mov
xor
popa
ja
notb
ss
arpl
xchg
lret
or
rcll
sbb
sub
inc
cli
sbb
es
or
sub
clc
clc
in
fidivl
out
sub
loopne
jmp
test
push
mov
add
repz
mov
clc
add
ljmp
jmp
jno
adc
ljmp
pop
pop
cwtl
nop
test
xchg
fwait
dec
mov
das
xor
push
xlat
data16
mov
aaa
push
push
push
push
adc
into
shrb
add
lods
inc
je
sub
push
push
test
add
pop
clc
mov
or
inc
outsl
add
je
jmp
es
inc
jb
push
mov
jp
adcl
jg
dec
add
adcb
and
xor
outsl
or
daa
mov
shll
sbb
bound
adc
pop
call
push
fisubs
pop
pop
cmp
mov
test
and
push
pop
or
jp
inc
xor
dec
push
adc
iret
movsb
mov
adc
test
aad
inc
pop
push
jg
xor
aaa
push
push
cmp
push
fs
bnd
jl
adc
into
sub
icebp
mov
pop
in
mov
push
pop
ret
sub
std
daa
xchg
jge
aam
push
push
adc
or
add
decl
mov
ss
clc
xor
testb
sub
in
cmp
lock
cmc
les
mov
xor
je
mov
iret
pop
pop
xor
push
jmp
pop
repnz
cwtl
xchg
jmp
sbb
jmp
clc
jo
iret
push
push
dec
out
mov
std
loop
fists
fstpt
cmp
clc
pop
pop
and
or
mov
adc
mov
lret
mov
mov
arpl
aam
clc
inc
push
mov
jno
pop
xchg
ret
jmp
aas
mov
imul
negb
fadds
in
int3
fs
sub
push
gs
out
jmp
testl
adc
cmp
das
jmp
jl
rcll
fs
cld
jle
adc
stos
add
adcb
lods
add
mov
in
ss
pop
ret
pop
xor
inc
mov
rcrb
jae
jle
mov
or
ljmp
xchg
add
rol
or
fiaddl
loop
int
outsb
mov
jnp
mov
ja
loope
pop
dec
adc
xor
sub
push
cmp
mov
jle
cmp
jbe
dec
mov
cmp
jae
dec
insl
add
sub
jmp
into
and
pop
xor
xor
addl
ret
enter
rcrl
adc
ja
mov
cmp
mov
xor
xchg
inc
and
mov
in
mov
clc
add
movb
and
xor
je
mov
lods
mov
shlb
dec
notl
leave
mov
sbb
pushf
lahf
lcall
add
sub
add
pop
fs
fstpl
cli
sub
jg
das
sarb
out
adc
out
pop
xlat
dec
movsb
out
add
addl
dec
aas
jle
push
sbb
xor
scas
mov
jmp
sbb
test
sub
adc
jg
pop
and
shrb
cmp
rorl
dec
and
jp
xor
popa
pop
mov
push
inc
push
adc
and
aas
adc
outsb
jo
xchg
push
push
inc
icebp
dec
scas
pop
jle
cli
pusha
sbb
jne
inc
in
enter
popf
push
scas
orl
repz
lods
jecxz
xchg
inc
jl
jmp
test
mov
cmp
jle
mov
pop
jnp
jecxz
push
notl
push
jmp
aaa
jbe
sbb
push
lahf
out
xor
sub
adc
or
movsb
insb
push
or
sbb
shrb
dec
dec
or
adc
add
push
mov
and
jmp
add
mov
movsl
mov
in
bound
jnp
repnz
addr16
pop
sub
or
stc
inc
out
xchg
lods
inc
xor
dec
adc
push
es
rolb
xor
cltd
push
mov
pop
pop
sub
inc
inc
not
xchg
and
push
and
icebp
es
cltd
stos
sub
movsb
fmull
jmp
mov
ljmp
popa
pop
add
pop
push
dec
and
dec
stos
and
cmp
lahf
inc
test
aam
xchg
mov
in
mov
popa
xor
in
cmp
push
xor
sub
add
test
inc
or
pop
sub
xchg
mov
in
lret
movsb
mov
inc
repz
mov
mov
ljmp
call
push
xchg
push
popa
add
stos
inc
inc
jno
jnp
fisttps
out
and
gs
adc
jg
sub
pop
add
mov
push
inc
add
pop
ds
mov
mov
inc
or
addr16
mov
aad
jne
out
mov
add
add
inc
or
lcall
scas
add
aas
mov
pop
roll
scas
ret
out
sub
sub
aad
xor
and
push
push
mov
jmp
fsubrl
mov
rcl
inc
adc
jle
add
xchg
sbb
fimull
lret
xor
into
mov
into
lock
scas
cwtl
jnp
mov
cld
rorl
clc
mov
add
push
sarl
in
addr16
dec
das
cs
xchg
test
stos
cmp
std
cltd
fistpl
lods
mov
jmp
bound
loopne
movb
pushf
sub
mov
rorl
add
mov
cli
sbbl
and
pop
leave
mov
add
pusha
jp
jmp
or
in
shr
or
pop
sarl
mov
sbb
push
and
mov
jno
fnstsw
mov
aas
cltd
leave
mov
int
addb
inc
pusha
divl
adc
push
cltd
and
and
pop
or
push
and
inc
sbb
mov
bound
sub
shl
cmp
lret
std
test
adc
mov
idivl
int3
add
mov
push
pop
sbb
inc
dec
lahf
loop
pop
jae
dec
cltd
aas
test
pop
adc
int
and
loope
jg
mov
jns
nop
cli
adc
cli
push
xchg
sbb
xor
sbb
fldenv
pop
bound
mov
shr
lret
dec
sub
jl
ja
fs
cmp
mov
in
jmp
xchg
ficoms
mov
adc
inc
sub
retw
and
jno
mov
shl
test
lcall
in
add
sbb
mov
repz
jle
pusha
leave
test
and
mov
shl
inc
cmp
mov
add
pop
mov
mov
add
push
mov
je
add
pop
mov
mov
sub
pop
divl
jp
mov
cwtl
dec
sbb
lods
adc
and
mov
or
cmp
sahf
fcoml
aas
cwtl
mul
sti
add
jnp
xchg
lret
pop
mov
xchg
std
ds
mov
inc
sub
push
push
mov
pop
push
xor
lret
orl
sbbl
addl
shr
sub
stc
mov
mov
mov
adc
xor
jne
ljmp
cld
xchg
jns
add
push
jmp
out
sub
push
cmpsl
sub
mov
pop
xor
subl
sti
mov
jmp
push
lds
clc
hlt
rcrl
insl
add
inc
in
div
inc
push
out
or
call
sbb
add
or
sarl
scas
loopne
push
push
add
bound
sahf
push
lods
dec
mov
leave
jno
mov
shlw
jmp
xchg
push
sbb
push
pusha
adc
inc
pushf
inc
jmp
sbb
mov
jb
das
push
das
jmp
fdivr
stc
subl
lods
lods
dec
adc
sarb
pop
cmp
enter
pop
mov
inc
scas
jno
je
or
iret
dec
jecxz,pn
fcmovu
pop
lock
and
aaa
jno
mov
shlb
test
ds
mov
ss
mov
xor
pop
push
aam
sub
adc
jno
es
xor
mov
adcb
cs
xchg
or
pop
push
ret
sbb
sbb
sbb
jg
add
mov
inc
sysexit
loop
mov
mov
or
in
pop
or
aas
lods
and
out
mov
not
test
xchg
mov
hlt
cltd
mov
scas
pop
push
xchg
sti
test
out
mov
stc
add
lahf
clc
push
addl
push
aam
jmp
das
mov
lret
cmp
or
add
clc
pop
xorb
add
mov
sbb
shll
fcoml
btc
and
scas
notb
sub
pop
hlt
push
jmp
pusha
xor
popa
mov
out
das
cmp
pop
xor
sbb
dec
ss
in
flds
xchg
mov
mov
test
pop
scas
inc
int3
fistpl
jae
xchg
adc
jns
rcrb
insb
jmp
stc
and
mov
loop
and
stc
cmp
sub
push
pop
mov
lods
or
inc
sub
fdivs
pop
pop
cmp
out
in
adc
add
ret
insb
sahf
pop
data16
test
cmpsb
add
add
out
fdivl
imul
loope
inc
mov
inc
inc
lcall
jmp
fldpi
jne
sub
add
adc
jmp
jge
xor
pop
mov
xchg
or
mov
inc
adc
ret
mov
loopne
pop
movsb
sbbb
mov
mov
jno
sbb
xchg
cwtl
add
mov
loopne,pn
fidivrl
push
push
cwtl
and
pop
je
dec
sbb
push
test
xor
xchg
mov
loope
call
push
mov
push
repz
mov
scas
ret
push
push
or
or
push
jnp
js
scas
jnp
js
lret
xor
jmp
int
and
aas
pop
mov
aad
push
jp
add
loopne
lret
in
sub
pop
pop
cs
fmull
fdivs
loope
aad
cs
mov
cmp
push
pusha
and
push
add
pop
pop
sub
jp
mov
pusha
rclb
pop
pop
lods
cs
xor
mov
out
fisubrs
leave
and
outsb
ret
int3
ja
mov
mov
mov
pop
jg
pop
shll
lods
sbb
pushf
pop
mov
js
fs
dec
and
jnp
mov
outsb
imul
mov
mov
test
mov
cwtl
hlt
mov
pop
mov
stos
aam
jb
aas
add
xor
and
jne
ds
dec
addb
bound
shl
pop
jmp
sbb
dec
pop
push
call
add
mov
sub
mov
repz
mov
lods
pop
fs
mov
ja
in
test
or
adc
lock
xor
xor
inc
xor
movsb
xchg
lods
jb
dec
test
dec
mov
fs
add
xor
push
push
stos
notb
dec
lods
mov
inc
arpl
and
pop
xor
pushf
or
call
or
dec
inc
shlb
add
sahf
jo
dec
aad
loope
cmc
inc
pop
bnd
test
pop
xchg
push
inc
jmp
and
ss
movb
jmp
out
sub
sbb
sub
push
jmp
sub
xchg
and
ss
inc
cmp
inc
mov
mov
xchg
xor
jo
subb
pop
jge
out
cmp
jmp
outsl
add
and
xor
sub
cmp
insl
add
cmpsl
xor
push
sub
inc
add
push
push
sbb
jmp
dec
mov
std
sbb
push
pop
jl
call
scas
fnsave
call
or
push
pop
leave
jae
andb
negb
jmp
int3
push
loope
cmp
xchg
or
pushf
lds
mov
or
repnz
push
fimull
sbb
pop
jbe
sub
adc
lea
fs
pushf
xchg
inc
cli
cmp
mov
sti
adc
dec
mov
push
push
stc
push
sub
add
push
mov
dec
in
push
div
mov
cmp
stc
imul
adc
adc
out
sub
lahf
jmp
cmp
loop
sti
test
jmp
push
addb
in
add
adc
mov
stos
pop
movlps
or
fisttps
stc
pop
jge
inc
ret
fldcw
inc
cmp
imul
xlat
hlt
inc
push
dec
pop
mov
jp
dec
lock
cltd
pop
push
mov
test
lock
dec
dec
lods
shrl
jp
sahf
outsl
mov
loope
cwtl
cmp
repnz
inc
or
add
sub
push
sub
xor
mov
xchg
or
subl
out
mov
pop
and
push
cmc
aas
lret
loopne
hlt
movsl
test
fcompl
dec
jns
push
add
sub
or
cs
lock
push
jmp
mov
mov
mov
push
lcall
popf
or
not
nop
lock
add
mov
out
push
adc
and
roll
adc
dec
cmp
pop
xchg
sbb
mov
arpl
jmp
cld
push
inc
scas
andb
filds
cvtps2pi
stc
imul
cmp
enter
add
push
mov
sbb
into
in
aas
je
mov
test
mov
cmpb
add
add
xor
psubw
xchg
lock
imull
sbb
js
stos
dec
xor
and
or
inc
adc
pop
sarl
test
pop
inc
dec
and
repnz
sbb
xchg
les
gs
mov
dec
push
dec
fimuls
dec
mov
cmp
push
leave
clc
inc
fadds
mov
mov
cmp
push
ljmp
and
cli
std
fildl
mov
xor
jno
jbe
mov
mov
pop
mov
mov
sbb
adc
sub
sub
jmp
and
adcb
jb
add
xor
jmp
jbe
imul
fs
push
vminpd
mov
sub
add
jg
dec
adc
add
fadd
loop
pusha
loopne
xchg
sub
daa
mov
xchg
pop
addb
enter
lods
or
lcall
dec
pop
fstl
test
rol
hlt
jbe
fcoml
adc
push
loope
ret
lds
shlb
mov
shrb
scas
adc
jl
mov
ficomps
gs
inc
or
xchg
jae
push
out
sbb
test
push
es
xchg
pop
movsb
movsl
ja
push
and
xor
jmp
ret
leave
insl
inc
push
bound
and
repz
adc
and
push
clc
fisttpll
and
std
dec
xor
repz
or
add
lret
pop
or
and
mov
scas
lods
xchg
mov
jne
push
pop
ret
push
jecxz
cmp
imul
std
push
dec
pop
aaa
lds
add
and
cli
xorb
popf
out
cmp
xchg
jmp
shlb
aam
add
cmp
int
movsl
ss
dec
jecxz
es
dec
pop
mov
and
dec
fadds
mov
es
jae
mov
pop
movsb
adc
or
fidivl
sub
and
sub
data16
xchg
or
cmp
lods
add
shrl
pop
xchg
cwtl
fimull
outsl
jno
addr16
add
je
push
shrl
mov
sub
cmpsb
mov
add
sbb
repnz
jg
aad
cs
add
rclb
sub
xchg
push
sub
lahf
inc
cli
mov
push
shlb
mov
pushf
mov
xor
xor
cmp
stc
dec
inc
test
adc
pop
das
mov
sahf
in
and
movsb
fldl
scas
sti
inc
pop
movsb
adc
add
jmp
into
lods
pop
popa
or
push
mov
adc
jl
xchg
jl
fsts
mov
pop
ret
outsl
xor
cmp
gs
out
mov
incb
mov
add
cmp
lock
mov
adc
icebp
insb
sub
jmp
adc
ret
sar
gs
mov
pop
jmp
inc
push
inc
lods
mov
mov
or
xchg
in
das
in
cmpsl
hlt
out
adc
mov
test
nop
inc
jne
adc
pop
fadd
mov
push
mov
rcrb
sbb
inc
or
adc
adc
add
or
mov
jecxz
imul
js
test
adc
cwtl
jae
add
leave
jge
js
sub
loope
cmp
or
jp
push
or
push
jge
adc
xchg
push
shrb
sahf
adc
jmp
pop
mov
xor
ret
cmc
out
xor
push
pop
xor
or
test
loopne
adc
and
xor
add
ljmp
outsl
jmp
lret
and
enter
subb
jp
lods
pop
jb
jno
popa
cmp
arpl
pop
ja
test
lret
jbe
add
add
icebp
or
jmp
lock
xchg
std
les
mov
inc
pop
mov
mov
xor
sti
add
pop
inc
pop
and
add
push
pop
push
jmp
push
add
jge
xchg
push
adc
mov
pop
mov
fbld
outsb
and
ds
cmp
das
lret
outsb
jae
push
pop
repnz
cmp
lcall
pop
mov
mov
mov
sub
or
mov
popf
push
and
ret
lret
adc
repnz
inc
or
std
imul
xor
jne
pop
add
push
sub
out
cmp
or
cmpsb
or
and
dec
outsl
movsb
and
in
stc
repnz
push
and
mov
push
pop
mov
and
lcall
push
add
xor
shl
adc
icebp
outsb
loope
xchg
dec
and
and
aad
mov
std
cli
jb
xchg
jo
or
cli
loop
mul
mov
pop
xchg
dec
sbbb
fwait
add
js
xor
mov
dec
push
lret
clc
sbb
push
xchg
je
outsb
and
mov
les
xchg
pop
xchg
inc
xor
in
dec
negb
dec
jmp
cmpsl
and
lods
stos
vpsraw
fmull
mov
mov
xchg
xchg
mov
jo
cmp
sbb
cmp
ljmp
loopne
pop
lahf
fisubrs
in
cmp
and
mov
push
sbb
mov
push
push
shll
insb
dec
push
ljmp
outsb
xor
jle
cld
and
jne
jg
or
leave
lret
ljmp
bound
or
cmp
or
add
push
nop
iret
fstpl
or
xchg
lret
jle
jno
mov
mov
movsb
add
fs
xchg
push
add
gs
add
fisubrl
dec
das
imul
repnz
push
sahf
inc
scas
sbb
add
imul
jbe
push
stc
or
neg
add
addr16
adc
lds
mov
pop
shl
not
adcl
and
inc
jg
xor
cld
mov
imul
add
push
clc
mov
in
or
stc
fadds
pop
cltd
sub
out
sbb
push
inc
push
sub
cwtl
or
jg
mov
stos
sub
push
mov
push
in
xchg
addl
fnsave
int3
popa
leave
jp
loopne
push
into
pop
add
cmp
daa
xchg
jmp
or
mov
stos
mov
mov
call
mov
or
and
pop
ret
ljmp
rcl
sub
inc
bound
outsl
orl
movsb
stos
mov
add
or
es
add
sti
lea
fists
scas
pop
lret
mov
inc
mov
pop
cli
cmp
pop
push
adc
cmp
xchg
push
inc
jmp
dec
int
lahf
or
dec
jns
add
sub
xor
adc
mov
sub
arpl
mov
dec
lods
adc
cmp
pusha
add
adc
adc
dec
mov
or
jle
lret
popa
sbb
das
or
rol
shr
or
les
sti
fstl
xor
enter
xor
loope
daa
add
notb
and
push
push
jmp
aas
push
jnp
sbb
cmp
aas
imul
mov
dec
loope
shlb
fisubrs
jg
ja
xlat
or
jmp
inc
bound
test
inc
pop
adc
adc
popa
cmpsl
test
adc
xor
xchg
mov
inc
cltd
pop
or
test
add
and
inc
neg
xchg
xor
adc
inc
mov
es
fcomps
mov
cmp
fists
push
inc
pop
mov
pop
push
fstl
movsb
inc
rolb
inc
dec
dec
dec
jmp
addr16
mov
pop
sub
xchg
sbb
pop
mov
shl
xor
push
mov
cmp
dec
jg
xor
add
push
cmp
mov
pop
adcb
pop
shl
xor
pop
mov
and
aaa
aam
pop
sub
popf
mov
jne
jmp
test
push
int
dec
dec
inc
fucomi
mov
and
jle
sahf
push
add
neg
lods
lret
sbb
aas
insb
addr16
fs
inc
std
jl
loopne
sbb
sub
mov
test
push
push
in
and
sti
loopne
push
jmp
loope
push
fsts
andl
sbb
cmp
xor
add
sti
cmp
adc
add
or
mov
xlat
into
mov
pop
sub
jecxz
sub
push
imull
adc
les
test
push
sbb
adc
jmp
ja
push
sahf
xor
mov
ljmp
pop
cmp
cs
ljmp
or
add
or
mov
jno
cmp
inc
das
pop
aas
hlt
pop
icebp
or
xor
add
test
sub
out
or
and
push
sub
mov
ja
test
or
sub
and
jbe
sbb
dec
pop
in
faddl
out
pop
jo
stos
cmp
out
jmp
dec
mov
xchg
adc
nopl
pop
and
xchg
inc
xchg
daa
jo
jge
jge
mov
inc
xchg
push
pop
pop
push
scas
popf
inc
andb
pop
cmp
jmp
sub
xchg
push
in
cs
fdivrs
daa
scas
pop
push
push
mov
cli
gs
loop
movsb
mov
lret
cld
stos
pusha
mov
daa
cmp
fnstcw
or
dec
add
jbe
xchg
pop
notl
sbb
cld
arpl
pop
xor
sbb
inc
xchg
ss
nop
add
pop
popa
sub
add
sbb
in
adc
pop
test
fsubrl
ja
aad
pop
iret
sub
andl
xchg
add
mov
push
not
jge
das
fimuls
sti
sub
mov
pop
push
mov
pop
push
jmp
jle
mov
push
mov
mov
adc
push
mov
adc
bound
sub
add
push
lock
sti
ja
mov
mov
fnstsw
lcall
in
add
in
aaa
cmp
push
push
ret
pop
out
outsl
mov
dec
xor
adc
sub
dec
xor
xor
ret
jnp
xlat
popa
cmp
loop
shll
stc
mov
pop
stos
js
jmp
lcall
push
push
loop
add
jmp
push
pop
push
icebp
jo
cld
daa
sahf
adc
sub
cmpsl
je
inc
into
addb
push
and
and
add
std
clc
lock
mov
add
icebp
ja
mov
jecxz
cmp
or
add
pop
add
dec
jmp
idivl
dec
cwtl
ljmp
jne
mov
mov
icebp
or
out
pusha
aas
nop
das
movl
add
je
mov
int3
je
mov
pop
std
or
inc
pop
inc
add
idiv
xchg
fadd
and
xorl
ret
and
repz
fisttps
loop
rclb
add
and
pop
or
ss
std
pop
outsl
pop
xor
addr16
or
roll
stos
inc
push
dec
mov
pop
aam
out
fisttpl
sub
stos
add
mov
mov
mov
cmc
mov
mov
mov
addr16
pop
inc
inc
push
pop
jne
cmp
int
inc
subb
nop
push
scas
add
or
jle
dec
das
ret
pop
fstpt
sub
scas
aaa
shll
dec
adc
inc
insb
std
add
sahf
addr16
repnz
iret
les
jmp
mov
mov
add
push
add
ss
pop
les
test
out
xor
sub
pop
cwtl
sbb
daa
add
aam
movsl
sub
mov
jne
roll
sti
push
and
xorb
stos
xchg
leave
lock
push
gs
rorl
das
jns
and
jae
loope
das
pop
adc
jb
scas
pop
and
dec
addr16
imul
iret
mov
mov
mov
push
lahf
dec
jae
ret
pop
nop
xchg
je
mov
inc
fisubs
call
mov
sub
out
subb
imul
or
push
cld
add
mov
orl
jne
push
jecxz
leave
test
ret
filds
mov
lock
jle
xor
fdivrs
and
cmpsl
add
push
mov
fldenv
lret
cmpsb
push
es
push
mov
jmp
orl
jp
mov
add
jl
hlt
or
scas
or
mov
ret
push
mov
or
js
adc
jo
idiv
ljmp
xor
js
mov
mov
shlb
shll
cmp
dec
cmp
pop
push
pop
sub
scas
lahf
loop
or
les
and
or
add
mov
and
loopne
pushf
fnstsw
sub
adc
xchg
cmp
or
test
hlt
adc
adc
aaa
xor
les
int
sub
mov
loop
and
aad
or
test
movsl
mov
or
shll
dec
movsl
push
stos
shlb
adc
xor
mov
les
adc
fsubr
xor
out
pusha
inc
cli
mov
ret
jo
xchg
es
dec
addr16
or
dec
nop
pop
jecxz
sub
add
or
add
fucomp
sub
sbbl
push
pop
and
xchg
arpl
outsl
pop
cmp
adc
mov
jp
jne
pop
fisubs
loop
leave
cli
leave
or
mov
daa
loopne
jge
fwait
xor
addr16
adc
inc
lret
repz
ret
add
stos
lret
stos
push
loop
and
dec
or
in
adc
in
dec
pop
mov
xchg
adc
sbbl
std
mov
negl
sub
ret
lahf
push
and
pop
sar
sub
and
bound
pop
imul
mov
inc
jle
psrlw
les
stc
cmp
dec
xor
andb
fidivl
adc
or
xor
ret
mov
aad
xchg
adc
lods
lret
xchg
test
push
mov
jmp
mov
jp
outsb
sarb
movsb
mov
push
add
pusha
lock
js
bound
andb
fld
xchg
arpl
repz
fists
pop
adc
dec
insl
aam
rol
xlat
popf
in
mov
or
ret
les
or
enter
adc
or
das
add
out
mov
mov
jo
les
cmp
rorl
repnz
fsubrs
cmpsb
dec
and
shrb
ffreep
jl
or
add
sti
xor
cmp
or
xchg
sbb
inc
mov
sub
lret
inc
adc
add
and
data16
icebp
jl
neg
cwtl
push
pop
adcl
push
fdivrl
xlat
jg
pop
mov
repz
inc
out
xchg
jbe
test
ds
mov
mov
sub
in
or
dec
in
dec
decb
cld
pop
push
mov
in
mov
sbb
inc
push
mov
dec
push
int
xor
mov
sbb
shlb
cmp
xor
jmp
mov
pop
stos
cltd
cmp
std
dec
scas
cmp
jno
cmp
cmp
jne,pt
add
das
xor
fldcw
mov
xor
cmp
std
ja
xorl
jmp
cmp
out
cmp
push
pop
push
sub
pop
add
test
or
icebp
and
pop
sti
rclb
mov
adc
out
int3
add
rorl
daa
jbe
and
xorb
ds
xchg
mov
or
or
inc
mov
outsl
fcomi
sub
je
lods
cmp
lret
mov
and
cmp
cmp
xor
fisubrs
push
mov
or
scas
sub
mov
sbb
cmp
orb
mov
pop
jo
fcoms
jmp
out
add
add
or
cmp
push
sub
movsl
shlb
cmp
jmp
das
add
pop
xchg
xor
xchg
inc
inc
pop
push
dec
jl
cmp
add
pop
adc
or
rorb
dec
xchg
pop
dec
pop
popa
bound
mov
test
insb
adc
or
cmp
xor
popa
mov
sub
xor
dec
jg
stc
pop
mov
ss
mov
xor
notl
arpl
mov
insl
jge
jg
pushf
hlt
push
call
xchg
sub
mov
mov
insb
bnd
and
lods
cwtl
jge
push
xor
lahf
sub
sti
lds
lret
dec
int
xor
xchg
xchg
fcompl
je
inc
lods
sbb
sbb
and
jmp
int3
sub
push
insb
cltd
insb
sub
lock
or
movsl
icebp
je
add
push
xchg
roll
push
mov
cmp
inc
inc
leave
or
jno
xor
movsb
add
lahf
fs
jge
mov
sub
cmp
push
dec
dec
sub
sub
repz
subb
mov
popa
sub
xor
cmp
fcmovnbe
mov
or
add
inc
push
mov
jmp
loope
sub
jmp
or
dec
stc
cmp
insb
mov
jne
jbe
pop
imul
jmp
push
cmp
aas
jns
or
xor
mov
loope
xchg
nop
xlat
pop
push
ret
pop
dec
shll
hlt
or
sbb
bound
fstl
je
pop
add
push
jb
insl
sub
outsl
xchg
fmull
ds
xchg
gs
fisttps
aas
addr16
sbb
inc
mov
mov
adc
icebp
or
xlat
xchg
in
and
xorb
sbb
add
setae
push
cs
icebp
jle
arpl
inc
jp
dec
add
jno
xor
push
adc
fdivp
cmp
pushf
adc
jae
js
pop
cli
add
pop
sub
popa
add
sahf
aas
stc
dec
jge
push
xor
dec
out
push
hlt
or
adc
cli
sub
inc
sahf
imul
test
and
pusha
pop
in
or
adc
dec
insl
adc
data16
stc
adc
ja
push
xlat
dec
xor
jle
jb
push
nop
add
adc
loopne
iret
cwtl
dec
pop
xor
xchg
int
push
cmp
mov
dec
xor
jmp
in
sub
push
mov
repz
inc
add
adc
mov
jle
mov
imul
pop
add
das
add
xlat
enter
mov
mov
fstl
cs
nop
in
fs
pop
or
pop
add
cmp
test
xchg
shl
inc
push
pop
movsl
call
xchg
pop
pop
push
jmp
dec
test
sti
pop
or
sbb
mov
add
mov
sub
and
push
cmp
repz
insl
je
xor
pop
add
repz
pop
xor
mov
mov
cmp
push
sub
and
adc
xorb
mov
sub
pusha
and
jl
cld
push
inc
int
rcll
add
sub
mov
cmp
xchg
les
mov
push
mov
inc
pop
lea
test
adc
cmp
push
test
movsb
call
mov
or
push
cmp
gs
jmp
inc
add
or
in
xor
push
in
fmulp
add
or
pop
jae
inc
mov
call
ret
or
add
jg
mov
or
and
and
in
mov
push
pop
clc
cmp
mov
adc
fs
repnz
insl
hlt
add
cmp
ficompl
or
rorb
dec
sub
inc
adc
pop
stos
int
outsb
lods
lock
adc
and
clc
scas
insb
cs
push
and
popa
repz
push
adc
sub
add
cmp
push
ds
sub
jmp
aad
mov
push
pop
and
xlat
add
call
faddl
xchg
and
stos
cltd
sub
in
jnp
in
jmp
stc
sub
pop
imul
xchg
xchg
ja
jmp
cld
sub
pushf
adc
fidivrs
jmp
es
or
jg
popf
mov
imul
cmp
add
call
stos
lret
std
sub
lret
dec
add
push
shr
movsl
dec
repnz
stc
jnp
adc
mov
in
cmp
sbb
jmp
scas
mov
mov
shll
dec
mov
push
push
jbe
daa
clc
shlb
pusha
shll
dec
jbe
dec
mov
stos
pushf
xchg
dec
out
sbb
adc
add
out
jmp
inc
nop
out
inc
sub
add
mov
mov
and
adc
push
mov
rorb
pop
push
js
addb
xor
mulb
loop
jne
cmp
adc
into
aas
push
rolb
negl
imul
jg
add
scas
mov
mov
cmp
dec
mov
jecxz
in
mov
ljmp
inc
sahf
pop
mov
insl
sub
mov
sub
add
ret
cmpl
and
gs
sbb
data16
testl
pusha
ds
mov
and
jle
fnstcw
push
mov
mov
jo
in
pop
pop
xor
bound
outsl
dec
push
adc
insl
fiadds
fistl
xchg
ss
push
xor
call
push
jmp
mov
out
inc
test
adcb
inc
adc
sub
sub
rcrl
jl
and
inc
dec
push
test
in
mov
pop
xchg
and
movswl
push
in
mov
push
pop
ret
and
int
shr
rcrb
int
mov
mov
and
adc
pusha
pop
inc
stc
add
pop
call
in
and
data16
mov
mov
add
push
jne
fwait
pop
int3
pop
pop
mov
pop
loop
shll
ret
decb
or
pop
sbb
xor
fmul
add
outsl
test
lahf
add
and
cs
and
jne
sahf
enter
and
enter
scas
aam
adc
lret
stos
push
mov
add
sub
xchg
pop
mov
push
adc
push
xor
repnz
rcrb
cld
pop
jecxz
and
insl
scas
dec
test
pop
sub
nop
add
or
bound
mov
mov
pop
mov
xchg
and
push
lret
popf
test
dec
rolb
cmp
shll
add
sti
dec
jmp
mov
pop
mov
js
push
data16
xor
ret
or
mov
dec
nop
shlb
adc
aam
push
cli
lret
fistps
mov
jecxz
pop
pushf
sbb
jno
push
push
or
insl
pop
cmp
mov
cld
lea
out
and
stos
cmp
jnp
decb
out
adc
or
pop
or
jge
fs
cmp
aas
or
fsubl
add
mov
cmp
mov
imulb
enter
int3
lahf
ret
xchg
mov
out
sub
inc
sbbb
addr16
pop
decl
push
cmp
push
pop
sbb
test
test
cmp
adc
lods
enter
loopne
arpl
push
sbb
cld
clc
add
ficomps
repnz
and
push
mov
dec
adcb
pop
shr
jmp
daa
notl
sbb
in
push
add
xor
fadds
push
mov
cmpb
or
icebp
dec
add
dec
pop
das
add
insl
and
enter
xchg
in
add
sbb
dec
popf
push
inc
aaa
xchg
test
mov
popf
dec
ja
test
sbb
daa
lock
push
jb
jp
or
inc
mov
jbe
add
mov
or
dec
pop
lds
push
push
inc
xor
jle
lahf
fimuls
pop
mov
subps
andb
test
adc
dec
dec
das
jmp
add
or
inc
push
inc
cmp
js
pop
add
pop
sub
xchg
xchg
daa
gs
shl
lret
adc
or
sub
or
sub
pop
mov
aaa
jae
loopne
cvtpi2ps
test
das
stc
inc
div
jmp
mov
inc
es
repnz
aam
adc
sub
sbbb
sub
mov
push
mov
inc
xor
push
nop
mov
jmp
and
mov
inc
cmp
sub
ret
or
cmc
jb
sub
xor
jle
jae
pusha
adc
repnz
cmpsb
add
ljmp
jecxz
inc
sahf
loop
rorl
xorb
insl
sub
dec
mov
mov
in
ret
pop
pop
jp
aaa
xor
cs
add
jno
adc
xchg
pop
jmp
xorb
cmc
js
das
ficompl
adc
cs
sbbl
fiaddl
in
mov
out
icebp
push
push
jg
popa
lcall
push
pop
ja
ja
or
push
and
loope
mov
mov
out
mov
cmp
push
jb
stc
add
bound
sbb
xor
sub
jge
jg
jo
arpl
or
jmp
xchg
or
mov
mov
and
daa
xchg
push
fldl
fwait
and
sub
inc
mov
pop
jg
pop
mov
mov
adc
test
pop
mov
jmp
out
call
das
mov
push
pop
jo
cmc
mov
pop
stos
jmp
add
jno
into
fldt
mov
cmpsb
adc
xchg
or
scas
dec
sbbb
loope
fsubr
icebp
inc
xchg
incb
fs
cmp
das
clc
inc
leave
or
dec
and
push
jmp
out
shlb
mov
repnz
cmp
pusha
dec
div
out
mov
jecxz
sub
xchg
pop
xor
adc
xchg
sub
mov
inc
jnp
rclb
jge
adc
dec
push
jmp
jae
pop
sub
push
adc
jae
xor
jecxz
cmp
lds
sbb
mov
jmp
pop
push
sahf
add
ret
nop
cmc
cmp
sub
and
hlt
dec
xchg
mov
add
mov
jmp
mov
or
pop
xor
pop
jl
cmp
sub
sub
xlat
gs
scas
mov
jle
jb
jmp
mov
push
push
sbb
scas
rorb
dec
mov
or
mov
cmc
xor
repnz
jne
cmc
and
pop
mov
push
test
dec
pop
mov
xchg
cmp
push
add
mov
cwtl
stos
jne
or
sbb
sub
cmp
xor
js
or
pusha
shll
hlt
lods
pop
mov
xlat
shlw
add
mov
sub
test
push
jb
loop
dec
aas
loopne
pop
out
nop
pop
orl
push
mov
mov
pop
push
lds
xor
das
and
stc
cmp
mov
rorb
mov
pop
cli
sbb
xchg
or
iret
add
test
mov
add
out
gs
pushf
sbb
daa
inc
push
shlb
add
fidivl
into
int
aas
lret
jmp
push
test
movsb
inc
mov
xor
push
push
mov
rcr
sbb
xor
in
sbb
in
add
xor
sbb
sahf
pop
test
stos
sarl
repz
mov
pop
mul
push
pushf
add
and
fidivrs
sahf
add
sahf
adc
rcl
jecxz
jno
cmc
test
add
fnstenv
mov
negl
rcrl
jno
les
jl
pop
xchg
out
xor
sahf
sbb
sbb
jmp
cmp
mov
fs
nop
les
daa
sub
mov
dec
pop
test
mov
xor
mov
or
pop
push
or
add
jg
jne
mov
and
rorl
push
fisubl
pop
cmp
std
push
mov
pop
add
pusha
popl
jne
add
add
cld
insl
inc
stos
pop
aad
shlb
bound
jnp
jmp
test
mov
or
out
or
push
add
push
push
push
arpl
and
dec
mov
push
fs
repnz
es
addr16
xor
mov
fcmovnu
enter
incb
jo
loop
and
xchg
fisubrl
mov
xchg
scas
cmp
xorb
push
push
sbb
enter
icebp
jecxz
xchg
das
rcrb
sub
lcall
gs
jmp
insl
sub
sub
add
sahf
pop
jnp
add
pop
es
jmp
arpl
mov
ss
aaa
add
in
sbb
or
pop
mov
and
daa
jmp
pop
sub
ret
aam
ret
xor
lds
stc
jo
in
into
mov
pop
xor
or
jp
shlb
adcb
idivl
add
ja
fbld
icebp
push
add
push
add
inc
rclb
cs
add
std
inc
push
inc
sbb
test
add
dec
inc
enter
nop
das
dec
sub
aaa
adc
push
sbb
cwtl
pop
dec
jbe
ds
subl
sti
mov
popa
sbb
pop
sub
lds
push
fwait
pop
push
cmpsl
aad
inc
xchg
dec
add
cld
adc
daa
call
push
push
pop
pop
inc
dec
imul
xor
jnp
add
daa
stos
dec
sub
inc
out
xchg
push
frstor
push
or
jo
loope
fptan
push
jae
inc
ret
sub
je
sub
push
jnp
pop
xorb
adc
mov
xchg
int
sbb
test
adc
mov
jmp
movsb
jle
dec
sub
jnp
and
movsl
or
pop
and
add
xor
fsubrl
push
imul
cs
cmp
fists
in
push
idiv
add
mov
push
push
inc
push
cmc
pop
push
out
and
jmp
mov
push
or
push
sub
lret
rorl
sub
jne
int3
das
jmp
mov
cmp
sbb
push
push
pop
pop
shr
jnp
iret
pop
lds
pushf
out
iret
xchg
mov
dec
dec
add
dec
sub
add
data16
push
cvttps2pi
xchg
negl
in
loop
ja
mov
or
fldl
adc
stos
dec
mov
or
filds
nop
inc
fsubrs
add
syscall
in
test
idivb
add
adc
pop
xor
xor
push
inc
add
pop
int3
dec
xor
loopne
popa
push
subb
jne
jmp
std
jne
jp
pop
ds
xchg
cld
mov
jmp
dec
pop
xor
push
push
jp
arpl
sub
pop
dec
stc
xor
psubsw
inc
test
fsubr
pop
pop
loop
das
push
clc
xor
das
jns
dec
in
repnz
fisttps
pop
test
jecxz
in
cmp
and
aad
rcl
ds
inc
lahf
sbb
in
xor
rcrb
ds
mov
aad
ljmp
dec
adc
and
jl
adc
sub
js
jle
adc
cmc
insb
fcomps
inc
mov
inc
and
adc
in
std
mov
int3
mov
pop
or
ja
lcall
imul
or
sbb
test
mov
add
sub
ds
dec
imul
ljmp
imul
stos
jp
add
mov
xor
rclb
scas
popf
jnp
mov
ret
and
adc
push
shlb
xor
addl
pop
addb
orb
in
sub
xchg
out
add
add
js
push
push
jmp
ljmp
sub
mov
sub
hlt
dec
pop
call
push
jbe
call
and
cmp
cli
lret
andb
xchg
imul
fst
call
ljmp
xchg
icebp
not
or
xor
jmp
stos
cmpsl
jb
jo
outsb
ljmp
lock
mov
sub
jmp
mov
push
add
inc
stos
jno
or
push
js
pop
shlb
iret
pop
push
clc
sub
adcb
adc
or
inc
xchg
inc
shrl
add
int
cmp
popa
cwtl
aam
or
repnz
sub
mov
addb
cmp
push
xor
repnz
fwait
sbb
jae
fs
popa
dec
jmp
jb
mov
repz
movsl
xchg
mov
inc
sbbl
mov
jmp
js
push
daa
pop
inc
mov
je
or
push
pusha
mov
jno
or
icebp
xor
rorl
popf
push
or
jo
out
repz
sbb
rclb
ja
cld
lahf
ret
add
push
sbb
dec
movsb
subl
out
ja
mov
pop
enter
push
adc
sub
ja
insl
add
push
ds
adc
pushf
adc
xor
push
sub
xchg
push
add
and
or
cmp
adc
loopne
add
jmp
pop
sub
ljmp
adc
pop
sub
popa
push
dec
ret
push
sub
sub
bound
and
mov
push
push
add
pop
shl
add
mov
jge
cmp
daa
fstpt
pop
and
mov
adc
push
movsl
mov
stos
adc
or
add
lock
xchg
iret
xchg
push
ds
fisubs
lea
lea
and
push
mov
test
neg
out
and
or
mov
push
xor
jg
fsubrs
pop
dec
int3
or
jle
push
ret
add
jmp
push
mov
shr
sub
or
adc
push
ret
mov
and
adc
pmaxub
stos
xor
mov
nop
repnz
call
rcl
xchg
or
out
lcall
inc
fldl
mov
lret
lea
mov
test
js
and
into
ret
xchg
outsw
jecxz
adc
mov
out
lods
movsl
repnz
cmp
ffree
shrb
in
mov
fsubs
lcall
cmp
mov
neg
push
and
jo
jns
sub
push
in
shll
sbb
out
int
pop
mov
pop
std
jnp
xor
test
and
sub
xchg
pop
ret
xchg
and
inc
outsl
adc
lret
mov
pusha
inc
fucomi
test
aam
jge
push
adc
aad
dec
sub
xlat
inc
dec
daa
rcl
es
gs
mov
shl
jae
daa
pop
out
je
hlt
add
xchg
or
pushf
mov
enter
add
iret
lcall
and
add
inc
mov
jmp
push
jmp
and
cmp
mov
sub
lock
call
push
jmp
out
mov
mov
jg
and
test
inc
cmp
gs
xchg
nop
les
pop
sahf
adc
sti
jno
push
jmp
mov
pop
xchg
sbb
pop
pop
or
stos
dec
stos
pop
xor
or
adc
test
mov
cmp
mov
adc
add
inc
sub
inc
dec
dec
cvtps2pi
in
sti
mov
or
popf
cmc
add
pop
mov
pop
xor
stos
inc
dec
pop
pop
scas
repz
and
push
jmp
std
dec
lret
repz
push
cmpsl
cwtl
jne
mov
arpl
out
push
shlb
rorb
pop
rclb
mov
in
neg
dec
xorb
les
push
cmp
add
cltd
frstpm(287
outsl
dec
push
fdivrs
and
dec
out
imul
dec
push
add
dec
cld
mov
pop
stc
jbe
pop
jge
and
dec
jle
add
sub
inc
jmp
imul
push
push
add
mov
aaa
and
push
das
inc
sbb
and
ja
pop
add
push
adc
scas
push
mov
scas
or
inc
jae
notb
loop
sbb
cmpb
in
lock
push
clc
add
inc
adc
pop
test
xchg
in
xor
out
dec
sub
in
pop
xor
dec
or
jmp
lods
cmpl
xor
sub
scas
dec
es
adc
push
sub
jecxz
dec
mov
rcll
sbb
sub
adc
jmp
adc
cs
ja
cmpsb
lret
jnp
mov
jp
outsb
mov
ljmp
xchg
scas
rolb
addr16
fisttps
sbb
pop
and
lahf
ret
xchg
shll
jbe
in
adc
pop
or
leave
pop
push
ja
xchg
push
dec
mov
fisttpl
add
dec
jle
fmuls
repz
adc
js
mov
sbb
mov
add
stc
push
jmp
aam
lods
sub
pop
lahf
push
std
jnp
xchg
push
jge
jg
mov
les
xchg
int3
jmp
push
or
out
ret
call
not
xchg
sbb
fs
fyl2xp1
jp
or
xor
dec
or
repnz
leave
cmp
rcrl
jne
outsl
jnp
push
fisttpl
inc
mov
std
xor
in
js
sbb
xor
sarl
cmp
push
mov
cmp
and
testl
in
aam
clc
push
pop
scas
insl
les
mov
adc
cmp
jmp
or
inc
push
imul
fists
add
inc
arpl
lea
icebp
push
mov
add
pop
jg
jae
out
or
adc
fists
mov
xchg
push
xchg
and
aad
or
xchg
sub
mov
add
test
leave
loop
push
add
fcoml
and
or
xchg
in
mov
inc
push
in
mov
fadds
addb
or
rclb
mov
fcoml
push
mov
adc
jecxz
xor
ret
jge
mov
pop
and
test
pop
push
dec
xchg
add
or
add
sbbl
dec
or
and
sarl
and
ljmp
mov
addl
shr
or
add
pop
sub
cmp
sub
add
not
dec
scas
jmp
test
pop
pop
test
clc
das
xchg
in
ja
test
pop
xor
shr
loope
mov
cmc
mov
out
inc
or
out
clc
pop
ja
cs
lcall
aam
out
repnz
ljmp
fldt
lds
cwtl
or
lret
mov
test
sub
push
mov
adc
out
add
sub
xchg
mov
scas
dec
push
or
adc
pop
add
mov
xor
nop
adc
sarl
fisttps
sub
mov
lret
add
into
cmp
adc
push
sti
inc
sbb
add
add
daa
pop
adc
jmp
out
inc
push
or
sbb
xchg
cmp
subb
mov
push
mov
jg
gs
pop
xchg
add
lea
push
jb
daa
inc
cmp
arpl
mov
jp
orb
add
inc
aad
push
xlat
mov
mov
mov
outsl
sub
imul
fsubl
pop
adc
enter
andl
or
lcall
stos
nop
or
and
mov
faddp
or
mov
cmp
sub
faddp
add
daa
inc
jmp
es
mov
sahf
movsb
mov
adc
lods
out
hlt
or
repz
das
dec
jle
ret
test
loopne
gs
popf
adc
ret
nop
inc
mov
mov
sub
incl
jo
jmp
adc
jns
mov
inc
xlat
cmp
sub
and
pop
jns
loop
int3
or
fiaddl
dec
lods
mov
xor
mov
adc
aam
mov
add
pop
js
xchg
push
cmp
sub
ds
hlt
lock
xor
leave
outsb
inc
jns
push
xchg
pop
aam
loopne
mov
adc
xchg
out
cmp
jae
loope
imul
fmul
loopne
gs
xor
or
sub
sbb
xchg
stos
xchg
lcall
hlt
xor
add
cmp
shl
ss
add
push
jmp
add
push
mov
sar
jbe
or
mov
insl
cmp
adc
xor
mov
add
ja
xchg
sub
dec
daa
mov
mov
out
mov
in
fwait
dec
pop
inc
xchg
ret
mov
dec
or
adc
iret
sbb
jge
xchg
das
cld
xor
cmc
add
xchg
mov
das
std
movsb
rolb
ffreep
sbb
pop
xchg
inc
popa
push
push
mov
pop
push
xor
sbb
dec
imul
ret
ds
xor
jbe
dec
pop
shrb
inc
pop
jle
les
stc
popf
bound
sbb
add
dec
adc
pop
mov
push
xchg
and
or
sub
sahf
inc
jmp
fstl
inc
mov
xorl
roll
inc
in
ret
call
loopne
out
enter
lret
ffree
inc
imul
push
mov
push
jg
lret
jns
mov
adc
insb
addl
dec
rcrb
popa
cmp
iret
movsl
or
lret
cmpsb
inc
outsl
lcall
sahf
cmp
adc
loope
xlat
pushf
adc
or
push
mov
dec
adc
cmc
mov
mov
mov
xchg
sti
in
or
sbb
add
in
xchg
ret
jmp
inc
movsl
stc
jbe
flds
pop
dec
or
mov
or
inc
in
or
pop
mov
movsb
xor
or
sub
test
jno
cs
add
cmc
icebp
push
cmpsl
ja
xor
daa
ja
inc
and
jb
les
ja
divb
mov
mov
pop
loopne
jmp
pop
pushf
xor
mov
mov
and
jge
rcrb
or
pop
dec
popf
inc
adc
xor
test
mov
popa
xchg
imul
pop
test
or
mov
xor
loopne
int
pop
decl
push
mov
xor
packsswb
nop
cmc
das
pop
sub
add
leave
cmovbe
sbb
sbb
das
aam
add
out
mov
ret
adc
dec
out
psubq
bound
testl
or
inc
aad
pop
inc
mov
add
filds
jo
xchg
icebp
xchg
push
outsl
jp
sub
dec
pop
ret
jle
add
pop
pusha
sti
sbb
sub
insl
cmc
sarl
fsubl
jmp
push
mov
shl
imul
das
loope
xchg
pop
dec
repnz
mov
xchg
stc
lahf
gs
inc
loopne
xchg
pop
lcall
push
mov
fcmovnu
ret
ficompl
jg
pop
pop
addr16
lds
shl
loopne
jae
lods
lock
jmp
repnz
idiv
pop
addr16
push
cld
and
das
mov
scas
pop
iret
or
enter
dec
or
fcomip
pop
lds
nop
addr16
lahf
sbb
add
sbb
iret
cld
iret
les
dec
data16
inc
pop
push
push
mov
aaa
push
push
enter
cli
push
pop
mov
ret
lahf
xchg
mov
imul
pushw
pop
mov
add
pop
orb
lret
rol
dec
add
mov
sub
mov
jo
lret
pop
or
jmp
xchg
pop
jo
jmp
test
pop
cmp
push
ja
aam
fwait
imul
sbb
pop
ds
cld
xchg
loopne
dec
popf
inc
stos
popf
adc
lds
js
adc
add
roll
pop
add
outsl
mov
les
cvtps2pd
sub
jnp
notl
push
mov
dec
add
clc
pop
movsl
and
adc
push
lret
outsb
jecxz
dec
in
test
or
lret
fimuls
push
nop
fsubrp
cld
fmuls
push
add
or
incl
daa
sub
lahf
test
cmpsl
add
lea
inc
xlat
add
sub
ja
xbegin
mov
or
movsl
xorb
rorb
pop
xor
movsl
adc
shl
xor
sbb
and
je
xor
inc
test
mov
pop
mov
xchg
add
jb
iret
push
or
push
mov
push
push
jmp
inc
fdivl
add
pop
xchg
sbb
or
test
out
je
sbb
jmp
fnsave
test
outsl
mov
mov
es
adc
cwtl
loopne
cltd
sub
jne
xchg
jnp
cmp
add
out
imul
xor
dec
pop
add
dec
ficoml
sub
pop
pop
pusha
call
dec
sub
scas
sbb
dec
in
jecxz
outsl
add
bound
adc
fisubrl
fcmovne
sbb
jns
int3
add
dec
or
lret
cmpb
inc
rol
sbb
lea
or
aam
dec
cwtl
mov
cwtl
das
xchg
andb
sub
bnd
mov
lods
xor
add
add
pop
sbb
jl
push
add
push
or
xlat
arpl
lods
push
rorb
ret
subl
jns
jo
dec
dec
test
add
stc
into
mov
push
and
adc
push
xlat
inc
popf
pop
test
stos
push
sub
xor
js
repnz
fsts
sahf
pop
adc
mov
jg
lea
xchg
or
or
push
xchg
or
and
sbb
mov
push
pop
test
jecxz
mov
cwtl
add
in
push
stos
add
or
pop
push
and
pop
daa
mov
testl
es
and
stos
or
push
sub
jo
add
loop
jmp
adc
dec
scas
iret
or
jmp
sub
ja
nop
out
loopne
ret
mov
shr
sub
lcall
fildl
push
jp
out
cmpb
cmp
dec
cs
gs
out
mov
pop
sub
aad
cmp
push
enter
rcl
xor
sbb
js
cli
sbb
mov
pop
jmp
pop
inc
adc
repz
cmp
popf
pop
jge
and
mov
mov
pop
or
in
jo
xchg
sbb
imul
inc
mulb
push
mull
das
jo
mov
xlat
fisubs
xor
leave
ja
mov
xchg
gs
mov
lock
dec
pop
inc
and
mov
mov
sub
rorl
adc
mov
rcr
mov
cmp
mov
jl
in
cmpsb
jmp
repz
inc
stos
add
dec
imul
decl
insb
and
sub
or
jns
mov
pop
js
fs
leave
popa
rolb
dec
xchg
push
das
popa
inc
add
test
add
jmp
movsl
cmp
pusha
imul
push
push
lods
jmp
mov
in
inc
push
rcl
push
and
jge
lret
in
lods
rcrl
mov
pushf
ds
popa
in
adc
pushf
cmp
add
add
adc
adc
lock
pop
hlt
push
test
lret
call
out
push
pop
mov
push
jmp
out
jle
ficomps
jmp
push
ror
and
mov
and
inc
imul
sub
in
scas
adc
sbb
push
inc
or
pop
dec
ja
in
cmc
stos
mov
lahf
jb
cli
mov
loop
cmpsb
sbb
jb
test
call
sbb
dec
outsl
in
icebp
dec
rolb
bound
jae
or
movsb
clc
xor
cmp
dec
ret
scas
cld
pop
addr16
lret
imul
push
xchg
and
loop
pusha
lret
mov
xchg
mov
div
fistl
insb
adc
shll
pop
xor
std
scas
mov
inc
std
rorb
mov
repz
cmp
cli
testb
add
rclb
mov
mov
call
mov
dec
mov
das
sub
clc
dec
divl
cmp
rolb
mov
stc
jge
add
mov
rol
mov
jne
aam
pop
sbb
inc
push
enter
cltd
or
jle
push
les
cmp
ja
sbb
push
mov
mov
pop
xor
incb
mov
lahf
in
push
sub
mov
push
mov
popf
jbe
xor
loopne
lahf
pushf
adc
adc
enter
push
inc
cmp
je
xor
insb
and
push
and
pop
mov
lds
inc
leave
and
jg
icebp
xor
movsb
scas
adc
aam
out
mov
outsb
add
mov
imul
popf
nop
test
sub
jno
les
pushf
sbb
push
pop
mov
jg
jnp
or
dec
in
movsl
mov
jnp
and
add
or
adc
and
loop
daa
mov
shrb
out
daa
jmp
imul
sub
insl
rclb
stos
test
xchg
adc
xor
mov
aad
mov
sbb
js
fldcw
push
mov
pop
xor
mov
dec
xchg
pop
pop
xor
fs
out
test
add
inc
jp
xor
sbb
mov
mov
mov
pop
aaa
adc
test
adc
in
mov
pop
pop
lret
fisttps
push
xchg
nop
mov
xchg
mov
cltd
add
adc
adc
add
xor
mov
enter
cmp
cltd
jl
addb
mov
cmpl
or
or
cmp
adc
lcall
dec
mov
in
xchg
push
out
push
inc
adc
adc
jmp
enter
mov
push
imul
xlat
jb
cmp
push
cmpsb
outsb
pop
pop
lret
scas
adc
add
fcmovb
ljmp
adc
jecxz
es
sahf
add
jl
sqrtps
or
sub
and
ds
jne
inc
mov
cs
daa
xor
pop
pop
xlat
test
fucom
imul
daa
push
dec
std
gs
loop
add
clc
cmp
add
pop
movsl
inc
lcall
cmp
push
inc
mov
outsl
and
add
test
inc
cs
js
add
bound
jmp
jge
jge
mov
imul
cwtl
ffreep
imul
jmp
fwait
and
push
loopne
daa
sbb
pop
loope
cmp
mov
inc
inc
mov
test
add
adcl
pop
mov
and
ror
icebp
dec
cmpxchg
sahf
or
xchg
mov
rcr
jmp
les
lret
push
mov
jg
cmc
push
mov
jne
ds
inc
or
pop
push
jno
cmpl
push
sub
and
cmc
cwtl
cmp
sbb
mov
pop
dec
pop
xchg
mov
mulb
adc
lcall
jmp
push
test
movsb
add
out
add
pop
jno
cmpsl
and
in
inc
jne
mov
jle
jns
cmp
mov
mov
jns
dec
in
sub
notb
jmp
mov
sub
adc
xlat
or
outsb
lock
inc
xchg
bound
adc
outsl
add
sub
push
pusha
es
jo
sbb
xor
xor
lock
mov
push
mov
mov
sub
ret
sub
loope
xchg
xor
fisttps
shlb
xor
shlb
pop
dec
push
sbb
sub
jmp
add
sbb
jle
sbb
push
call
pop
stos
pusha
add
cwtl
je
or
pop
aad
ret
fmulp
aas
or
adc
enter
xor
sbb
inc
adc
fwait
sahf
inc
xchg
add
mov
and
mov
je
clc
dec
daa
pop
pop
push
ficoms
push
sbb
bound
pop
jno
bound
dec
daa
inc
jmp
lods
xchg
mov
lock
in
ret
and
or
jmp
mov
mov
jmp
lods
sbb
out
dec
cli
inc
addr16
scas
lret
push
jmp
mov
or
fimull
sahf
es
outsl
adc
lds
orb
inc
scas
push
push
cli
sub
pop
daa
xchg
aam
or
daa
outsl
jecxz
dec
dec
sub
xchg
testb
shl
push
mov
cld
or
not
loopne
jmp
jnp
push
in
add
fnstsw
cmp
sbb
or
enter
inc
push
push
je
inc
in
push
fstpt
lea
pop
shrb
xchg
imul
movsb
loope
imul
xchg
or
shrb
mov
lar
stc
popf
mov
filds
popa
xor
and
jmp
rorl
jg
in
mov
fmulp
aad
rcll
push
mov
not
push
stos
clc
imul
fwait
dec
addb
fcmove
mov
pushf
cmpb
push
or
xor
add
add
out
adc
pop
adc
cltd
xor
add
pop
mov
sub
popf
mov
enter
hlt
xchg
mov
push
shll
push
xchg
jmp
or
jns
test
stos
sbb
and
ret
and
outsl
add
sbbb
loop
movsb
rcll
jl
rorb
dec
jmp
jecxz
xchg
addl
movsb
filds
pop
mov
fmuls
jns
jbe
add
mov
into
add
or
adc
xor
push
jmp
jo
fdivrp
mov
test
aad
sub
testl
ror
ret
aam
mov
mov
or
jp
add
or
inc
comiss
push
pop
pop
cmp
xorb
dec
pop
xor
pop
push
and
movsl
add
cmp
jp
push
add
subb
mov
push
push
jmp
test
pop
add
orl
movsl
pop
pop
sbb
cmp
pop
ror
lods
and
test
data16
pop
mov
insl
pop
out
mov
pusha
andl
adc
cld
inc
and
and
mov
neg
ror
add
fnsave
in
in
mov
mov
jbe
dec
in
or
push
test
inc
cmp
ret
inc
mov
add
aaa
push
cmp
mov
mov
shr
adc
add
jno
sbb
xor
scas
push
and
push
mov
sub
jne
mov
push
push
mov
add
jmp
sbb
xor
pop
and
rorl
adc
enter
vmovupd
dec
repnz
sti
mov
fimull
lods
jle
jo
rolb
out
clc
mov
jle
aas
add
or
jmp
imul
add
xor
jge
fsubrl
fiadds
scas
push
sub
addr16
ret
sahf
cmp
pop
shl
push
jp
daa
xchg
push
sbb
jae
mov
scas
jbe
testb
outsb
test
js
adc
int3
out
mov
inc
sub
add
cs
add
ret
jmp
add
pop
les
mov
dec
jmp
call
and
sbb
add
and
pop
testb
sub
jns
dec
imull
jge
test
push
adc
mov
in
in
mov
pop
xchg
cli
add
mov
mov
xchg
jbe
mov
stos
scas
in
inc
hlt
jge
mov
mov
sub
push
cmp
popf
push
mov
mov
push
jmp
mov
or
add
jle
xchg
inc
or
push
daa
loopne
das
into
mov
cmp
orb
adc
jp
xor
rcrb
les
shrl
jmp
frstpm(287
test
push
pop
fcmove
and
and
popf
idivb
or
pop
push
pop
les
dec
add
arpl
out
sbbb
inc
movsl
mov
sbb
or
add
aaa
pushf
inc
test
inc
jecxz
int
das
and
xchg
jae
push
daa
insl
loop
jne
pop
lods
je
insw
pop
or
cmp
pop
nop
ss
ret
push
mov
cmove
and
dec
mov
loope
add
pop
inc
pop
in
testl
or
ljmp
pop
jns
push
xchg
sub
jp
hlt
fnsave
push
es
pop
imul
cmp
jne
inc
fisubrl
jle
add
mov
insb
jge
pop
jne
adc
stos
cmp
pop
push
sub
ljmp
dec
notl
sbb
insl
cld
xchg
xor
jne
cmpsl
lret
jg
shlb
fistpll
das
or
andb
das
jg
pusha
dec
xchg
and
neg
pop
push
push
popf
je
cmpsl
pop
pushfw
pop
outsl
lock
rol
gs
cmp
mov
inc
xchg
ret
xchg
ret
cmpsl
test
adc
jl
mov
or
push
xchg
cmc
cli
sub
push
ljmp
invd
mov
adc
daa
push
lcall
cmp
adc
pop
lock
stos
dec
fisttps
push
or
or
lret
push
adc
push
aad
out
mov
mov
sahf
mov
leave
in
adc
cmpsb
aad
push
push
mov
jmp
push
adc
out
xor
mulb
shrl
mov
mov
out
add
add
mov
ja
cmp
ljmp
or
adc
sti
out
lods
imul
pusha
cmp
bound
lret
dec
shll
jmp
mov
pop
jecxz
rolb
fcoms
add
sub
jmp
arpl
add
jne
pop
jg
shl
pextrw
das
mov
ds
jns
xchg
adc
add
adc
push
jns
shrb
pop
bnd
xchg
push
xor
cli
les
mov
jno
dec
mov
fwait
daa
xor
jns
cmpsl
ficomps
push
adc
ja
scas
clc
out
or
pop
sub
insl
push
or
inc
and
jmp
xor
push
add
mov
jle
inc
jnp
ror
sub
cwtl
or
and
repnz
and
gs
jp
aas
call
add
sbb
dec
in
add
int3
push
pop
inc
pop
sti
xor
enter
ret
xor
pop
movsb
push
dec
lods
or
mov
shrb
rolb
loope
jp
test
clc
stos
sarb
jnp
xor
out
or
and
sub
movsl
adc
cltd
push
mov
and
pop
cmp
cs
aas
xchg
test
jo
sub
mov
sbb
xor
jo
add
fdivl
fs
jmp
jo
adc
dec
cmp
ds
xor
adc
inc
mov
or
arpl
icebp
or
mov
loopne
xor
insb
jbe
out
sub
aam
mov
aas
jb
adc
push
xchg
cld
adc
add
push
mov
stc
inc
lahf
jno
scas
xlat
mov
jae
push
sahf
sub
pop
ljmp
cmp
xchg
fldl
jl
sub
in
add
xor
sub
jbe
pop
std
sbb
cld
outsb
fsubrl
mov
mov
adcl
repz
subb
outsb
xor
fadds
pusha
bound
or
mov
inc
sbb
mov
sbb
aam
arpl
xor
push
sub
pop
xchg
cltd
and
jmp
mov
pop
pop
mov
and
sub
into
fsubrs
dec
pop
inc
clc
stc
add
mov
adc
cmp
dec
cmpsl
aaa
ret
inc
cmc
xor
push
push
mov
rcr
push
sbb
dec
pusha
push
mov
add
jmp
clc
xor
xor
enter
fptan
daa
cli
imul
push
hlt
rolb
out
andl
pusha
nop
mov
in
jp
dec
pop
cld
dec
sub
jne
outsl
jmp
sub
jl
or
mov
xchg
mov
subl
adc
sti
lret
jmp
loop
adc
mov
out
push
add
cmc
lret
xchg
push
jbe
rcrb
lods
ret
fimuls
jns
or
jmp
pop
dec
daa
rclb
test
cmp
jno
mov
or
addr16
cmp
jae
or
push
inc
xchg
pop
out
or
mov
fbld
cmp
fildl
out
ds
cltd
xchg
cli
and
pop
pop
rolb
or
dec
push
daa
imul
out
jecxz
stc
das
push
xchg
add
pop
cld
adc
push
scas
ss
pop
orl
pop
orb
sub
inc
nop
jecxz
int3
iret
arpl
jnp
mov
mov
dec
addb
mov
mov
enter
popa
pop
adc
repnz
push
addr16
and
pop
push
sub
sub
test
xor
fstpl
orl
call
xor
pop
ja
pop
movaps
adc
pop
add
sbb
nop
pop
sub
add
ja
jmp
int
adc
mov
aad
xchg
and
add
mov
jl
ret
aam
jmp
mov
or
and
or
orb
arpl
or
mov
xor
dec
cmpsl
sbb
cmpxchg
ds
dec
test
subl
jg
inc
pop
outsb
call
jnp
mov
mov
cmc
rclb
mov
clc
mov
sarb
mov
mov
out
movsb
fucomi
xor
add
add
jno
icebp
mov
mov
mov
adc
pop
loope
mov
mov
inc
xchg
mov
fwait
push
mov
loop
aad
adc
inc
incl
aam
inc
pop
lret
sub
test
pop
pop
mov
inc
int3
pop
add
stos
sub
out
xchg
gs
icebp
ljmp
lods
lods
or
inc
inc
rcrl
push
mov
loope,pn
push
cmpsl
sub
pusha
or
xor
les
loopne
push
rorl
add
jmp
daa
dec
or
push
xchg
rol
xchg
push
insl
fs
xor
add
dec
inc
test
add
insb
jmp
jg
jne
push
decb
inc
inc
movsb
sbbb
insl
shrl
jae
fdiv
dec
nop
and
outsl
divb
add
lock
inc
adc
or
mov
lret
or
push
outsb
dec
dec
sti
xadd
mov
pop
bound
mov
stos
cmpsl
cmp
fistps
mov
and
add
xchg
shr
jo
xor
jno
arpl
lock
subb
or
jmp
shl
or
je
cmp
or
mov
adc
jmp
sub
push
mov
mov
hlt
jmp
push
sbb
mov
ret
push
cmc
scas
nop
ljmp
dec
xor
or
shr
add
jg
pop
or
mov
clc
pop
mov
dec
sbb
or
jmp
pop
sub
xor
and
rclb
mov
add
adc
sub
jg
pusha
sbb
popa
fisubrl
adc
xor
sub
aas
cmp
mov
sub
xchg
sti
pop
loope
shll
es
inc
or
push
pop
imul
push
mov
rol
call
repz
lods
pop
into
or
pop
push
jmp
or
xor
sub
aas
pushf
mov
adc
cmc
pop
sbbl
leave
vhsubpd
jge
sub
and
lcall
enter
push
or
int3
test
cmpsl
or
sub
or
pop
icebp
push
scas
mov
aaa
dec
ds
add
repnz
cmp
stos
mov
xchg
rep
add
pop
push
pusha
sub
aas
cmp
add
or
rcrb
loope
mov
pop
and
adc
ljmp
cwtl
test
mov
mov
jno
mov
dec
sar
push
bound
add
push
mov
shl
shl
test
sub
mov
pop
mov
push
fprem
cmp
add
or
cmp
sbb
loop
adc
pop
add
inc
xor
xor
fmull
add
push
rsm
test
inc
or
bnd
pop
mov
dec
xor
lcall
mov
jns
adc
ficoms
jmp
mull
xor
adc
adc
or
adcl
or
adc
pop
push
mull
pop
adc
les
stos
xor
sbb
jns
dec
add
mov
sbbl
jmp
loope
outsb
add
ret
aaa
push
out
js
xor
pusha
xor
xorb
push
pop
arpl
jp
pop
bound
jo
out
and
std
hlt
sub
pop
clc
pop
iret
mov
ss
lret
push
dec
mov
fs
jbe
or
push
clc
shlb
pop
jmp
out
sbb
mov
push
idivb
push
stc
aam
sbb
mov
and
data16
cmp
push
and
or
mov
dec
mov
inc
jmp
lock
roll
loopne
add
and
cmpsl
sub
cmp
add
push
pop
mov
and
inc
mov
push
mov
cmp
pop
scas
out
xor
xchg
popf
pop
stos
shrl
es
add
rclb
xchg
add
jge
mov
push
cmp
mov
ljmp
sbb
bound
out
sbb
iret
dec
arpl
jp
cwtl
pop
ljmp
test
out
add
xor
mov
adc
inc
mov
mov
push
dec
repz
or
dec
fsubrl
aad
mov
dec
mov
adc
sbb
adc
xor
add
add
inc
rol
pop
push
jmp
loopne
outsb
das
mov
pop
fs
pop
test
sub
lds
jmp
pop
mov
movsl
int3
jnp
sbb
and
push
fwait
push
xchg
dec
or
add
mov
loopne
into
mov
dec
mov
and
push
dec
push
stos
lret
stos
sub
imul
inc
cmp
push
pop
dec
jl
mov
push
push
adc
clc
dec
and
adc
mov
mov
mov
test
dec
icebp
or
or
out
adc
adc
xchg
pop
pusha
add
xchg
outsl
out
mov
xchg
bound
jmp
jae
xor
add
shr
je
jmp
in
andl
jp
jno
lods
mov
push
cmp
inc
in
je
popl
dec
mov
xor
sarl
aad
inc
hlt
push
xchg
lds
and
movlps
ret
rcrl
jmp
xchg
xor
mov
repz
mov
mov
push
xchg
loop
mov
sbb
ret
and
rolb
gs
ret
fdivr
or
cmp
call
sarb
ja
pop
shrb
pusha
pusha
icebp
xchg
lret
add
data16
inc
push
stc
scas
dec
or
push
push
cmp
pop
pusha
push
mov
mov
push
cmpsl
jns
add
mov
xor
data16
dec
lock
mov
out
lcall
lahf
dec
push
xor
loope
jl
push
lcall
dec
and
and
in
xor
jne
rcll
jg
adc
stos
pop
mov
add
inc
in
xor
frstor
loope
adc
push
add
fdivrs
mov
jp
mov
pop
mov
pusha
bswap
cmp
add
cmp
dec
pop
stc
or
subb
or
mov
cmp
roll
mov
std
inc
jle
xchg
not
cmp
repz
dec
repz
cwtl
inc
imul
add
mov
jb,pn
jle
inc
call
adc
push
sub
std
int3
stos
in
cmpsl
les
test
xchg
push
jno
add
jo
sub
inc
aaa
and
or
sti
pop
aad
pop
in
std
sbb
sub
popa
sub
pop
stc
jmp
mov
loopne
adc
mov
bound
pop
lahf
bound
xchg
cs
fstl
daa
dec
xor
add
sbb
inc
and
xor
insb
fucompp
ret
adc
adc
push
cmp
clc
push
sbb
out
push
add
lods
rorl
xor
jg
outsb
lahf
pusha
scas
pop
xor
out
enter
or
into
add
inc
dec
sbb
or
lock
shrb
push
stc
dec
out
and
movsl
mov
popa
push
dec
psrlq
pop
outsl
push
cmpsb
imul
cld
mov
sar
adc
xchg
test
test
mov
push
xchg
iret
lds
push
dec
cmpb
ljmp
in
push
dec
mov
int3
and
int
and
sub
push
pop
push
add
jle
sub
mov
subl
adcb
rclb
sub
pop
mov
in
add
add
fisttps
jmp
cwtl
push
lret
pop
test
lods
push
mov
cmp
imul
adc
dec
sub
pop
loop
add
jge
xor
sub
cmp
pusha
adc
out
cmpb
xor
lods
mov
hlt
cmp
pop
push
mov
pop
sbb
mov
fldenv
or
insb
add
pop
add
push
add
push
les
cmp
or
out
pop
mov
adc
in
imul
sub
sbb
add
adc
cmc
or
mov
sbb
dec
daa
add
stos
mov
or
ret
mull
sbb
cli
xchg
pop
push
xchg
jae
xor
stos
xchg
les
sbb
pushf
arpl
push
cmp
ds
lret
lret
aad
shll
sbb
xorl
mov
sahf
cmp
adc
std
arpl
into
pop
add
out
fdivs
lock
dec
or
push
sbb
fstps
out
xchg
pop
push
pop
cli
and
jmp
jb
repnz
sti
mov
push
inc
push
mov
ror
adc
fnstsw
insl
jp
js
sbb
pop
cmp
jo
add
mov
shr
mov
sub
xor
xor
mov
outsl
loop
add
and
pop
cmp
push
push
jle
pop
sub
and
clc
mov
xchg
mov
inc
icebp
fdiv
cmp
push
loope
add
push
inc
dec
orl
shrl
or
add
in
xor
adc
mov
adc
sbb
sub
or
add
add
and
jno
xor
add
or
jb
and
xor
cmc
enter
jae
mov
sahf
mov
mov
push
or
cmpsl
or
mov
int3
or
bound
cmp
pop
pop
fmuls
addr16
cmp
sbb
roll
mov
cltd
stc
icebp
icebp
xchg
add
call
test
add
jne
push
int
push
push
mov
adc
or
inc
sbb
in
or
inc
test
jecxz
adc
or
or
call
and
jecxz
sbb
sub
and
imul
and
adc
sbb
or
cltd
and
aaa
fimuls
das
add
enter
out
xchg
xor
or
xchg
adc
clc
adc
leave
xor
js
add
popa
add
add
and
and
stos
dec
add
xchg
adc
jmp
adc
or
inc
shl
inc
in
inc
xorb
sub
lea
adc
cmp
fldl
ss
rclb
xorl
add
xchg
cwtl
jns
adc
mov
mov
pop
inc
call
push
add
push
pop
jno
inc
js
out
leave
movsb
clc
push
sbb
repnz
pop
xor
adcb
cltd
mov
sahf
push
adc
or
addl
and
aam
fsub
icebp
out
add
cmp
adc
mov
pop
add
mov
mov
jl
dec
push
lds
orl
call
adc
ror
fmulp
es
testl
inc
sub
add
adc
cmp
inc
leave
jne
mov
or
add
rcl
rdpmc
rolb
mov
xor
or
jae
jb
cwtl
in
sub
xor
inc
js
mov
lahf
mov
dec
jb
shrb
hlt
adc
pushf
dec
mov
popa
jmp
push
scas
fstpt
jmp
loopne
ret
dec
push
test
sub
in
adc
sub
sti
push
push
shl
test
rol
cmp
xlat
xchg
mov
dec
and
pop
pusha
add
adc
push
mov
push
mov
xchg
sub
inc
lea
mov
push
or
in
pop
call
rol
adc
nop
inc
jbe
ljmp
bound
pop
inc
jmp
xor
mov
sbb
push
repz
mov
jmp
cmp
aad
jns
xchg
push
push
icebp
sub
adc
xchg
inc
dec
pop
sti
icebp
xchg
cmp
mov
mov
inc
add
sbb
mov
lock
loopne
adc
mov
popa
outsb
add
sub
add
or
outsb
addb
xchg
or
fnstcw
enter
orl
in
inc
add
push
mov
aaa
mov
pop
addb
les
out
mov
std
sbb
add
es
add
aam
xor
icebp
cli
xor
call
imul
jns
sbb
dec
xchg
add
enter
mov
fsts
enter
dec
dec
addr16
push
addr16
mov
xor
pop
mov
cmp
inc
jl
test
cld
jne
xor
in
adc
shl
decl
xor
sahf
flds
int3
sbb
inc
insb
jnp
test
jle
subb
xchg
inc
pop
push
xchg
xor
sbb
xor
push
sbb
pop
into
test
push
aad
add
in
cmc
dec
sub
xchg
add
jmp
sub
mov
inc
std
push
mov
xor
clc
and
roll
or
js
lods
jo
pop
aad
add
into
cld
jl
in
mov
enter
icebp
cltd
cli
call
mov
xor
push
fsubrl
dec
sub
repnz
pusha
mov
mov
and
insl
ja
sub
add
das
add
or
loope
mov
push
push
add
cwtl
jbe
jmp
notl
cltd
sbb
cmp
fildll
fiadds
out
in
xor
or
or
xor
inc
test
enter
jnp
fwait
inc
xchg
jmp
or
jb
pusha
add
fcmovb
jl
es
jo
jmp
popf
loop
cmc
jns
fdivr
add
subl
adc
xlat
add
je
mov
sbb
loopne
cmc
addl
pop
into
dec
jge
cs
jp
jnp
mov
dec
sub
cmpsl
jno
cmp
popa
jno
int
inc
movsl
adc
fwait
mov
scas
iret
jle
data16
inc
push
add
push
mov
or
stc
scas
xor
cltd
push
mov
mov
insl
dec
prefetcht0
jg
pop
pop
add
js
jae
push
mov
out
adcb
push
negb
std
stos
pusha
push
pusha
addr16
outsb
or
inc
xchg
and
arpl
pusha
inc
or
pop
mov
and
push
jmp
loop
sbb
pop
xchg
sub
ror
cmp
lahf
push
mov
repz
out
ja
sarb
push
ret
adc
roll
stos
imul
mov
sub
or
jmp
cld
mov
xor
popa
push
push
xchg
jne
and
scas
mov
xchg
jnp
ret
pop
add
adc
call
shrb
xchg
sub
xchg
sub
pop
adc
pop
xor
orb
and
test
enter
pop
or
rclb
or
fildl
fstpl
cmc
imul
push
stos
scas
add
jecxz
mov
sub
dec
aad
add
out
push
cwtl
mov
hlt
rcrl
inc
or
jo
dec
inc
in
dec
sub
add
add
cmp
cmp
add
sbb
pusha
inc
push
add
lock
lahf
fdivrs
ret
sbb
add
inc
push
mov
rcrl
add
jnp
sbb
jp
cmp
add
addb
pop
sub
add
loopne
or
es
xor
push
roll
sub
sub
ficompl
sub
mov
cs
insl
sarb
dec
or
or
stos
lods
or
mov
lods
pop
outsb
imul
jmp
xchg
add
les
and
enter
scas
inc
mov
lret
xchg
push
adc
add
insl
movsl
pop
jae
dec
incl
loope
push
bound
int3
pop
ds
lea
dec
inc
pop
out
into
sbbb
lret
js
xchg
fcoms
mov
xor
std
adc
add
mov
push
push
popf
push
popf
adc
and
jge
mov
xchg
dec
stos
sarb
or
dec
adc
bound
repz
push
mov
adc
dec
adc
sbb
push
add
out
mov
mov
and
jge
mov
inc
mov
pusha
add
adc
sbb
insb
xor
aaa
or
xchg
lret
or
not
in
cld
scas
mov
daa
xor
ljmp
cmpsl
fsubs
jp
in
ret
or
leave
push
mov
insb
lcall
loopne
dec
adc
mov
adc
sub
daa
divl
je
xor
outsb
mov
xor
pop
inc
cmp
sbb
push
rclb
and
mov
mov
jmp
inc
out
sbb
and
dec
pop
mov
ja
push
subb
add
push
fidivs
jle
and
dec
fdivrl
mov
jmp
add
shll
cli
js
lea
orl
inc
loop
or
mov
pop
xor
sahf
adc
insb
mov
jne
sbb
push
add
mov
and
xor
pop
pushf
xchg
or
dec
inc
adc
push
adc
push
pop
shl
sub
ja
cwtl
mov
shrl
cmp
pop
icebp
cmp
lock
push
or
or
add
mov
xor
or
lea
jecxz
dec
out
mov
mov
cmp
push
mov
jle
xor
xor
mov
int
iret
add
pop
cltd
imul
pop
sbb
out
lret
into
push
femms
and
aam
xchg
jecxz
js
adc
mov
push
mov
adc
leave
jp
push
insl
lahf
movsl
xlat
and
jg
add
jns
dec
add
jmp
cmp
sahf
inc
sub
and
push
adc
mov
sbb
pop
sub
xchg
inc
pushf
mov
sbb
xchg
orb
or
and
shrb
fnsave
xor
or
or
xor
mov
push
sub
pop
push
inc
adc
push
add
mov
mov
and
movb
cmp
push
xchg
adc
bswap
cmpsl
fldcw
rcrl
pop
sub
loope
popa
adc
int3
ficoms
push
mov
adc
cmp
ret
pop
pop
jle
pop
ljmp
fists
dec
and
iret
aas
loop
aam
and
add
add
sbb
mov
sahf
jmp
pop
mov
aas
pushf
lea
mov
mov
pop
xor
jmp
pop
xlat
jmp
mov
repz
sub
pop
push
push
clc
pop
scas
mov
and
shlb
clc
in
mov
mov
xchg
push
and
dec
pusha
mov
pushw
aas
dec
inc
stos
xor
mov
js
lods
stc
mov
test
pop
mov
mov
inc
pop
fs
push
aas
mov
shrb
aam
lods
idivl
inc
or
sbbl
adc
pop
dec
cmpsl
or
nop
adc
push
dec
and
test
les
inc
jo
popa
sbb
lret
bound
sub
notl
push
dec
pop
jns
mov
push
sub
sbb
push
push
fwait
imul
stc
xor
cmpsb
mov
fcoms
filds
xchg
push
xchg
pop
fildll
add
adc
jp
push
pop
ljmp
adc
loope
dec
stc
and
jno
pop
popf
push
sbb
clc
dec
inc
fisubs
jge
dec
scas
sbb
push
sbb
pop
or
sbb
fisubs
sbb
ret
dec
bound
push
push
add
in
ret
sbb
lret
es
mov
sub
cs
stos
test
jae
inc
dec
lds
or
sub
sub
std
add
dec
mov
mov
xor
add
mov
sub
mov
mov
lock
push
imul
ljmp
mov
lock
or
nop
notb
pop
and
push
xor
inc
add
inc
std
das
jbe
and
mov
mov
aas
js
add
xchg
cs
jae
cmp
push
test
lds
ds
push
pop
cs
arpl
sub
shrb
test
lret
mov
adc
xor
int
pop
sub
int
shrl
or
xor
or
dec
add
cld
dec
sub
hlt
movlps
fildl
push
stos
add
mov
int
cmc
mov
ficoms
stos
enter
pop
mov
add
sub
rorb
mov
dec
stc
mov
test
mov
push
add
pop
pop
in
inc
movsl
xor
test
pop
hlt
xor
rorl
mov
insb
xchg
addr16
popa
aas
pop
or
nop
inc
sbb
pop
lock
mov
scas
dec
pushf
ffreep
and
fistps
adc
stc
add
cmpsl
dec
imul
call
out
pop
cs
cltd
and
idiv
adc
cld
push
cmpl
das
sub
les
sbb
mov
cwtl
sbb
mov
sub
movlps
or
inc
inc
imul
mov
inc
jle
add
sbbl
pusha
cli
mov
xor
dec
shl
sbb
fs
add
jg
into
or
jo
push
addr16
in
dec
sub
cwtl
fidivrs
xor
cmpsl
sub
push
std
mov
pop
loopne
fucom
sub
push
imull
leave
sub
ret
fisttpll
movsl
lret
add
xchg
and
cmp
push
adc
push
dec
xchg
xor
hlt
fildll
stos
adc
push
loop
jne
frstor
fsts
popa
dec
repz
mov
sbbb
clc
sub
inc
or
pop
adc
lea
push
loopne
push
pusha
shrb
sub
pop
in
pop
sub
int
shrb
pop
xor
loop
pop
push
mov
lret
pop
xor
dec
push
jmp
push
loopne
sub
pop
jle
adc
mov
les
es
mov
push
add
fisubrs
mov
mov
mov
mov
add
or
mov
adc
adc
jg
jmp
js
in
mov
mov
sahf
add
sbb
jp
mov
xchg
in
push
or
push
fcoms
xor
fsts
cld
psubw
push
mov
inc
shlb
lcall
inc
dec
add
addr16
inc
shlb
das
movsb
and
pop
clc
pop
outsb
add
inc
lds
mov
pop
idivl
sbb
pop
cmp
inc
test
js
add
mov
hlt
push
mov
xchg
icebp
cwtl
inc
inc
pop
jnp
push
dec
push
mov
mov
sub
es
push
adc
and
xor
cs
call
sub
lret
fs
jp
lods
cmp
jne
jno
dec
adc
mov
popf
jnp
adc
xchg
jmp
xor
and
loop
in
pop
inc
jecxz
push
push
es
or
pop
sub
push
xor
sbb
bound
mov
adcb
das
sub
das
mov
testb
and
data16
das
fs
and
jnp
pop
or
dec
or
add
rorl
or
or
push
addb
repnz
lds
mov
xlat
pop
push
pop
ds
push
xor
int
add
lcall
mov
inc
ja
test
cmp
movsl
loopne
add
add
and
cwtl
push
jne
xor
movsb
or
dec
xor
add
roll
fdiv
jle
mov
sub
pop
pop
xchg
dec
push
sarb
mov
or
mov
sub
adc
pop
mov
je
inc
sbb
sbbb
es
push
clc
mov
adc
add
xchg
add
push
sahf
je
pop
jecxz
cmp
nop
subl
loop
push
add
shlb
rcll
or
sub
jne
cs
sbb
or
pop
stc
int3
mov
inc
jnp
jp
sbb
pushl
call
pop
adcl
jg
sti
lods
testb
and
sbb
or
in
in
push
and
mov
sbb
rolb
xchg
adc
inc
xchg
xor
jae
ret
fs
inc
inc
rorl
adc
jmp
xchg
cltd
mov
movsl
shr
fnstsw
pop
push
das
pusha
and
and
neg
mov
add
add
push
les
add
lret
arpl
xor
adc
xor
test
lods
in
jmp
mov
stc
cmp
sub
xor
not
out
hlt
les
or
test
out
xor
pop
popa
aas
in
jns
add
and
daa
cmp
rol
nop
gs
inc
sbb
dec
sub
imul
je
dec
fs
clc
sub
xchg
hlt
add
push
add
and
adc
inc
or
lea
mov
adc
pop
clc
stos
lret
push
pop
push
mov
lcall
pop
cmp
jl
jmp
loopne
adc
xchg
jb
das
cs
stos
bound
test
jge
dec
addr16
test
mov
and
cs
std
ret
pusha
nop
mov
in
jbe
push
pop
xchg
and
addb
lret
inc
dec
xor
mov
or
mov
jle
jb
ret
adc
xorb
mov
xor
rcr
nop
jne
jno
jb
xor
sub
inc
push
out
mov
mov
sub
or
add
movsb
xchg
or
call
sub
push
cmp
hlt
lock
push
xor
sub
clc
add
repz
jmp
or
sub
fsubrs
lcall
popf
icebp
les
jb
aad
test
mov
sub
dec
clc
push
cld
mov
sub
pop
pop
push
push
in
sti
push
add
jecxz
push
aad
push
sbb
mov
adc
pop
scas
sar
cwtl
cmp
dec
sub
push
push
jnp
add
jge
pop
neg
jmp
xchg
imul
mov
mulb
and
ja
xor
xchg
push
psubw
add
iret
mov
ss
sub
out
es
sti
push
add
pop
jmp
nop
rolb
cltd
sbb
xor
push
stc
loopne
mov
sub
jne
pop
jae
lds
inc
lcall
js
jb
pop
pushl
mov
push
addr16
xor
xchg
pop
mov
imul
subb
pop
test
cmpsl
xor
mov
cmp
adc
pop
shll
jecxz
sbbb
in
add
shrb
pop
js
push
loop
mov
imul
in
xchg
sti
shlb
sbb
loope
add
test
lret
mov
push
push
jmp
nop
sub
or
or
sbbb
pop
or
pop
shl
out
rolb
icebp
push
pop
bound
adc
pop
and
lahf
or
sbb
std
lods
xlat
ret
sub
cltd
ret
xor
cwtl
push
inc
push
jmp
test
movsb
scas
mov
adc
mov
push
dec
cld
add
xchg
pop
test
mov
dec
xchg
mov
insb
je
and
ja
add
xor
in
add
push
popf
jmp
mov
xchg
scas
mov
push
cmp
fstl
ljmp
mov
and
pop
jmp
out
das
test
xchg
out
jp
cld
test
or
loopne
mov
cs
push
mov
xor
jl
mov
and
cmp
lret
xor
cmp
dec
outsl
inc
arpl
add
jecxz
inc
sub
andb
ret
inc
es
cmp
daa
shl
push
repnz
add
sub
icebp
push
jb
icebp
xor
ss
or
pusha
mov
adc
or
iret
ds
sbb
enter
sub
add
sub
pop
mov
and
pop
imul
loopne
fadd
adc
addr16
push
mov
mov
mov
pop
cmp
xor
mov
shr
daa
jge
add
stos
push
mov
rcr
xchg
inc
js
pusha
pop
mov
addl
inc
fadds
push
inc
jns
hlt
jbe
subl
or
push
inc
dec
test
jmp
and
mov
add
movsl
je
or
cmc
pop
mov
scas
fmuls
pop
cmp
imul
arpl
jmp
mov
mov
movsb
add
sub
jmp
inc
pusha
pop
call
movsb
int
pop
pusha
add
loope
or
imul
sbb
cmp
inc
mov
mov
push
popf
push
pop
stos
sub
cld
pop
insb
xchg
and
dec
dec
and
and
dec
not
add
mov
dec
add
xor
inc
popf
pop
out
jo
stos
fdivs
push
orl
mov
adc
lods
add
add
mov
js
stc
lea
pop
rcrl
xchg
push
jo
stos
dec
inc
test
scas
int3
dec
jmp
add
jecxz
sarb
test
pop
lods
sub
dec
sub
mov
xlat
pop
pop
mov
hlt
ljmp
cltd
ret
mov
jmp
sbb
push
push
xor
sbb
sub
add
sbb
mov
adcl
cs
xor
jmp
and
push
adc
pop
test
dec
cmpsb
inc
jnp
bound
dec
jmp
xlat
mov
xor
sbb
inc
pop
inc
inc
call
sbb
mov
inc
mov
je
and
dec
jmp
dec
push
cmp
adc
popa
cmp
in
aaa
daa
lds
pop
add
jg
aas
push
sbb
negl
inc
test
adc
repnz
out
sub
mov
push
xchg
sub
add
pop
pop
out
mov
subl
push
jno
dec
lcall
mov
mov
test
or
jmp
xor
es
and
add
test
ret
xor
pop
sbb
mov
sub
pop
xor
fldl
adc
sub
adc
inc
sarb
sbb
mov
dec
int
bound
cmp
in
or
and
arpl
xchg
mov
push
ret
daa
sub
ffreep
xchg
mov
sub
clc
sub
mov
pop
jo
push
idiv
aas
kxnorb
jns
dec
fisubrl
push
mov
jbe
push
popf
push
inc
rcll
sbb
and
sbb
push
and
pusha
cmp
and
sti
xor
add
push
cwtl
xorb
jmp
xor
enter
push
cmp
shlb
xchg
pusha
inc
sub
dec
inc
xor
mov
scas
push
jo
sbb
out
pop
jl
sbb
add
or
sbb
fists
lds
adc
xchg
sub
shll
dec
addl
inc
insb
mov
and
iret
in
fucomip
shll
das
cmp
mov
pop
lret
or
mov
pop
jb
or
pop
cmpsl
push
or
sbb
or
mov
ret
mov
gs
pop
lods
xchg
into
mov
sbbb
adc
add
xor
pop
push
mov
push
neg
xchg
mov
or
add
int3
pop
and
jl
lds
shr
sar
lcall
ret
xchg
xchg
repnz
rol
xchg
push
sub
add
jne
mov
xor
imul
ss
or
adc
xchg
gs
jmp
add
daa
arpl
xor
jle
into
xorb
jmp
dec
and
push
int
sbb
iret
adc
scas
xor
push
lods
sbb
cld
or
lret
int3
dec
outsb
sbb
sub
adc
inc
cmp
stc
xor
xor
cmpsb
mov
lahf
cmp
sub
rolb
les
icebp
inc
or
jnp
adc
xor
mov
pop
inc
sub
push
lock
jecxz
or
outsb
or
and
bnd
leave
pop
and
mov
push
lcall
cltd
or
fwait
inc
jnp
jl
cmpb
enter
ljmp
mov
push
sbb
popf
out
mov
add
adc
orb
addr16
jmp
push
cmp
addb
dec
aaa
pop
inc
std
pusha
aaa
sbb
add
cmpb
push
popa
out
mov
sub
lcall
loop
or
pop
pop
push
and
mov
or
faddl
push
adc
xor
lcall
sbb
xor
cmp
cmp
cmp
push
scas
divl
fstpl
aas
add
pop
xchg
rcr
push
loope
mov
add
popa
fidivrl
cmp
add
ja
pop
ja
push
inc
or
and
push
sbb
add
sbb
mov
pusha
add
fidivrs
aas
jmp
out
add
dec
xor
pop
dec
and
andl
sub
jae
rorb
push
insl
jmp
adc
sar
das
add
ret
or
mov
xorl
outsl
hlt
cmpsl
mov
xchg
push
push
ret
mov
sub
inc
and
push
aad
push
in
push
mov
jbe
inc
outsb
mov
test
or
stc
push
mov
and
cmp
ret
push
mov
mov
push
jmp
pop
mov
and
xor
jnp
pop
enter
add
xor
int
inc
cli
xor
loope
xchg
push
sbb
jnp
xchg
rcl
testl
push
pop
add
xor
push
jno
sub
sub
jne
xchg
mov
lret
xor
dec
push
xor
mov
push
mov
jae
mov
push
mov
imul
pop
add
sub
mov
mov
add
out
sbb
xor
add
mov
cmc
clc
icebp
imul
ja
mov
out
xchg
sbb
scas
mov
adc
lods
out
sbb
push
or
lret
in
cmpsb
mov
or
sbb
inc
mov
dec
jns
cmp
out
in
clc
xchg
or
cmc
inc
lods
nop
loope
pop
lahf
and
das
lret
mov
movsl
in
jns
or
mov
cmp
in
pop
mov
ljmp
adc
sub
ss
pop
jg
pop
inc
cmpsb
push
pop
insl
iret
inc
jp
sub
and
mov
xor
mov
dec
push
or
data16
mov
daa
aam
pop
je
xorb
lods
ret
dec
inc
cld
cmpb
xor
sub
cmpb
cmp
jbe
xor
lret
and
push
dec
loope
cmp
aam
sbb
push
or
ja
stc
decl
lahf
push
add
dec
filds
fbld
icebp
inc
dec
fnsave
push
js
xor
popf
push
push
dec
lods
cmp
push
outsb
mov
repnz
fnstsw
add
pop
xchg
cmp
sti
cmp
jle
lret
int3
loop
punpckhbw
out
rol
sub
shll
or
lret
and
dec
xor
shlb
cmp
jmp
mov
xchg
mov
push
mov
xor
push
neg
xor
loope
cmpsb
shll
jmp
xchg
add
int3
inc
add
ljmp
test
aad
mov
shlb
pop
cld
jle
addr16
xlat
rol
push
and
add
insl
push
or
rorb
syscall
push
mov
loopne
add
sub
xor
jmp
es
lock
cmp
rorb
sbb
xchg
push
sub
add
repz
stos
lods
push
inc
rcl
addb
nop
das
dec
xchg
xchg
adc
push
xor
sub
cmp
push
mov
inc
or
xor
push
push
cmc
out
or
sub
mov
fistl
sub
les
out
mov
aam
fsts
jp
lret
cs
aad
sub
sti
xor
ret
mov
sub
rorb
xchg
insb
mov
bound
aad
add
inc
dec
lret
xor
xlat
mov
lcall
xor
push
popa
dec
push
xor
and
sub
sub
mov
push
jns
add
push
pop
ret
pop
pop
bound
pop
sbb
fwait
imul
add
add
sub
or
daa
pop
push
aad
mov
stos
xor
jle
add
cmp
sub
lea
cmpl
jns
mov
pop
testl
ja
xchg
shlb
xor
ljmp
dec
dec
flds
jmp
iret
addr16
add
mov
mov
es
mov
or
std
jg
pusha
lahf
dec
mov
push
repz
daa
ljmp
pop
and
ret
pop
iret
stc
mov
sbb
push
pop
push
mov
sarl
jmp
push
or
loope
jo
cld
out
inc
pop
pop
mov
lods
jg
xor
sub
std
jns
jmp
sub
dec
fistpll
dec
inc
sbb
push
notl
mov
xorb
lret
out
mov
lds
sbb
mov
out
cwtl
or
add
imul
loope
shrl
fnsave
add
rcrl
pop
mov
cli
mov
adc
aam
icebp
std
mov
push
lods
loop
jmp
lock
out
mov
lcall
xor
pushl
gs
and
test
mov
sub
movsb
pop
mov
add
and
push
jo
pop
add
xlat
inc
dec
adc
add
adc
push
fildl
mov
icebp
out
repnz
pop
dec
push
loop
or
lods
mov
cli
outsl
or
mov
notl
rcr
fdivs
leave
mov
or
in
jle
pusha
push
cmp
ficoms
jmp
dec
or
inc
cmp
lods
hlt
ljmp
mov
sub
pop
cli
add
jl
jecxz
pop
outsl
popf
scas
inc
mov
push
add
inc
sarb
cmp
cmpsb
pop
dec
inc
cmp
push
push
xor
mov
and
mov
rcrl
push
lock
push
pop
imull
adc
adc
jb
sbb
in
imul
add
cs
and
jle
rclb
aaa
or
insb
push
jg
repz
or
push
pop
push
fnstcw
dec
push
subb
jle
call
mov
add
lods
or
in
mov
jle
in
sbb
and
push
in
xor
or
std
pop
or
int3
adc
cs
and
mov
sbbb
mov
popf
push
and
out
and
push
add
mov
daa
popf
push
daa
sbb
mov
loopne
pop
mull
pop
dec
push
mov
pop
or
popf
jno
cmp
cwtl
inc
mov
pop
scas
mov
pop
mov
add
aas
mov
std
mov
add
push
insb
orb
xlat
jmp
sti
divb
bswap
sub
jle
sahf
push
imull
rcl
mov
enter
cmpsl
mov
xchg
mov
mov
pop
add
fcmovnb
jecxz
add
out
adc
jmp
out
mov
or
xor
push
mov
add
sti
jge
pop
inc
mov
mov
xor
ret
jp
cmp
mov
sub
lods
xchg
pop
add
popa
cmp
and
xor
cmp
ljmp
fcomps
jg
pop
add
sub
push
incl
cmp
push
push
lahf
pop
inc
push
es
push
sub
test
repnz
jmp
cld
xchg
xor
jge
cld
add
pop
out
jle
jp
jns
xchg
mov
or
rcrb
add
xchg
xchg
cmp
sahf
cld
out
push
inc
push
push
mov
mov
ljmp
xchg
cld
inc
int3
mov
es
sub
test
pop
nop
jle
push
xchg
out
sub
push
pop
pop
add
scas
adc
jno
xchg
jns
xchg
nop
mov
add
in
jb
arpl
dec
cltd
inc
add
sbb
iret
add
push
sbb
mov
lahf
bound
notl
rcrb
mov
dec
push
scas
dec
mov
pop
push
dec
and
mov
push
pop
dec
push
mov
sub
push
repnz
mov
ret
and
pop
pop
roll
xchg
aas
pop
outsb
jmp
add
pop
loopne
sub
push
lahf
cmp
cmp
cmp
xor
jmp
shr
lock
sub
and
ja
jmp
aas
hlt
sahf
daa
and
mov
sub
test
and
lret
cmp
push
mov
insb
add
aaa
fistps
add
ja
sub
das
mov
es
sub
insb
push
mov
pop
jp
mov
jg
add
or
andps
rorl
jl
inc
add
dec
in
pop
inc
jnp,pt
xchg
sbb
scas
dec
jg
roll
inc
pusha
push
jmp
lret
sub
jo
add
push
push
int3
or
mov
mov
aas
test
aad
fs
jne
fsubrs
fists
mov
int3
or
or
fidivl
bound
cmpb
fnsave
inc
sbb
cld
ret
ja
mov
scas
adc
pop
dec
in
aas
into
mov
jg
cmp
std
shrl
mov
mov
ja
dec
repnz
adc
orl
or
repnz
add
pop
dec
and
adc
sbb
shlb
cwtl
add
add
sbb
aad
sub
sbb
popf
lds
mov
imul
hlt
cwtl
shr
xor
or
jb
ds
cwtl
js
sbb
orb
lods
cmp
fldl
push
mov
pop
rolb
sub
push
and
push
sub
fs
and
pop
in
sar
pop
test
jmp
cli
pop
jno
push
mov
pop
or
movsb
add
movsb
frstor
lcall
adc
std
nop
push
mov
sbb
lret
loopne
roll
mov
jp
or
nop
scas
mov
movsl
dec
mov
xor
aaa
out
fisubrl
push
mov
mov
decl
push
repnz
mov
inc
xor
adc
cmp
add
mov
call
mov
stos
das
mov
and
push
cld
dec
add
jmp
call
xor
hlt
xor
pusha
add
and
int
mov
xchg
fnstenv
sahf
sbb
xor
and
xlat
stos
xchg
ja
shrb
mov
jmp
sub
add
fadds
push
mov
sbb
add
scas
test
mov
pop
push
pop
push
jno
daa
pusha
scas
sbb
loope
pop
into
push
xchg
jle
icebp
add
and
inc
mov
sarb
cmp
lds
js
add
in
loop
adc
or
fiadds
aaa
and
jmp
mov
inc
mov
cmp
or
lds
jmp
lods
lret
sahf
adc
mov
pop
pop
aas
mov
in
sub
rcl
loop
icebp
inc
and
mov
xor
cmc
xor
xor
push
pop
push
mov
arpl
ljmp
push
outsb
sbb
sbb
into
addr16
mov
jmp
mov
sub
mov
or
das
or
and
addb
cltd
cmp
fsts
cmpsl
push
jmp
push
ret
push
or
shl
int3
pushf
cmp
pop
adc
aas
xchg
xchg
mov
fsubs
sub
stc
outsb
pusha
test
add
xor
or
mov
pop
cmpb
push
imul
js
jo
sub
jge
inc
jmp
dec
fcoms
bound
pop
mov
test
cmp
imul
inc
insb
inc
adc
dec
movsb
lret
or
and
xchg
fucomip
hlt
loop
dec
push
xor
and
dec
xlat
mov
sbb
ss
cmp
out
imul
jbe
mov
pop
mov
xor
jmp
lods
add
testb
pop
imull
inc
jb
shld
jne
jmp
sub
push
push
xlat
jg
ds
bound
pop
pop
adcl
ljmp
dec
imul
jno
sub
jmp
push
push
repnz
std
inc
adc
subb
dec
scas
add
inc
bound
dec
mov
mov
adc
jecxz
pusha
aam
cmp
popf
lock
cltd
adc
xchg
insl
sbb
pop
adc
cli
mov
mov
mov
imul
add
into
jmp
mov
mov
push
dec
xor
inc
add
roll
or
push
js
inc
mov
cmp
in
and
jnp
dec
idivl
inc
call
sub
aaa
pop
xchg
dec
fwait
scas
inc
aad
cwtl
pop
or
mov
sub
xlat
xchg
fistpll
imul
negb
pop
sti
pop
cli
mov
sub
outsl
xor
xor
sub
movsl
sbb
leave
or
hlt
and
stos
loop
adc
or
call
int
push
call
add
jge
loop
negl
fistpll
jns
or
cld
push
sahf
push
pushf
subb
sub
ret
xchg
fldcw
sarb
leave
mov
cmpsl
insb
sub
jmp
push
lcall
mov
adc
pop
shrb
sub
xor
cs
ret
andb
pop
jo
pop
pushf
push
mov
loop
in
pop
andb
add
mov
mov
and
xor
jge
xor
sub
jne
and
out
jo
loope
ds
sbb
dec
sub
dec
jle
sbbb
insb
shr
mov
dec
in
jle
pushl
jo
lds
fisubs
cmp
sub
or
push
xchg
popf
jmp
int3
cmp
pop
or
add
push
pop
outsl
loopne
or
push
bound
orl
jge
pop
loopne
lret
std
xchg
jo
fwait
lret
mov
insb
aas
fnstcw
pop
add
xchg
arpl
and
adcl
jmp
sub
out
dec
mov
sbbb
test
clc
pop
jae
mov
push
mov
adc
inc
rcrb
xor
cmp
lods
mov
mov
push
icebp
and
sub
xor
xchg
scas
daa
repz
sbb
pop
add
int
jg
xor
pop
mov
sub
cs
testl
inc
adcl
ja
cmp
sti
das
and
xor
sahf
hlt
jp
push
mov
mov
mov
enter
mov
mov
mov
insb
popa
jmp
cwtl
adc
loop
daa
xchg
hlt
stos
lret
std
xchg
dec
nop
sbb
adc
add
mov
jge
add
lods
pop
jbe
mov
adc
mov
cmp
dec
inc
popa
cmp
stos
sub
mov
add
jp
mov
test
sti
pop
sbbb
faddl
call
push
push
cmc
push
add
xorb
mov
les
push
mov
cmc
xchg
cmpsl
icebp
loope
pop
mov
lcall
or
sub
sub
popa
push
mov
lret
sub
insb
push
popf
pop
daa
and
pop
hlt
aam
adc
pushf
or
dec
push
popa
pusha
xchg
and
cli
loop
and
lret
push
add
jb
mov
pop
xor
hlt
popf
stos
pop
sbb
xor
push
push
pop
mov
jns
inc
shrb
js
jno
xor
out
dec
repnz
add
mov
add
je
imul
adc
insb
lds
enter
push
mov
icebp
repnz
out
jl
and
popa
iret
push
jb
add
pop
inc
popa
std
fldl
mov
loopne
jecxz
add
inc
rcll
pop
bound
sahf
fldt
sub
inc
shr
add
cld
mov
xor
mov
dec
push
mov
rcl
and
cmc
push
fcoml
repnz
or
pushf
ja
popa
jecxz
push
daa
cwtl
add
cmc
es
sbb
xchg
fists
jl
cmpb
outsb
pop
and
add
xor
inc
xchg
pop
push
jmp
int
test
stc
scas
xor
dec
fimuls
pushf
test
jnp
jb
das
push
inc
and
cmpsb
adc
add
push
push
mov
mov
adc
fstps
sbb
fstp
mov
add
fiaddl
push
imul
mov
or
add
into
mov
xchg
xchg
sbb
testl
push
push
pop
and
push
dec
sbb
test
mov
jmp
mov
pop
adc
insb
and
add
rolb
das
jo
or
icebp
out
jo
outsl
dec
xor
dec
xchg
call
jl
cmp
mov
xor
sbb
ficompl
xor
mov
test
nop
xor
sub
nop
outsl
divb
in
dec
inc
mov
nop
aaa
and
jg
cwtl
dec
shrl
jmp
aaa
add
or
aam
and
cltd
negb
lret
add
sbb
sbb
test
in
pop
push
mov
push
push
inc
loop
xchg
outsb
add
and
mov
cs
lcall
sub
loopne
or
pop
sbb
addr16
inc
jmp
or
push
mov
cmp
into
push
movb
clc
jbe
add
push
ror
jmp
push
push
mov
shlb
mov
ret
daa
in
and
sti
mov
rolb
into
mov
and
dec
mov
pop
lds
jp
push
aam
mov
mov
cmp
pop
sub
sahf
iret
fstps
pop
jge
loopne
out
cwtl
jmp
push
scas
pop
pop
popa
rcll
mov
cmpb
push
fs
mov
pop
outsb
movb
add
sub
xchg
adc
sub
je
cmp
jle
loope
xor
sti
into
movsl
add
push
jne
cmp
xchg
xor
add
mov
rcrb
in
sub
syscall
add
xor
mov
ds
mov
clc
mov
pop
mov
ss
sub
int
cmpsl
dec
add
xorb
push
sub
subb
xor
sub
lret
or
jg
xor
nop
xor
mov
sahf
stc
push
lcall
cld
pop
push
loop
fldt
adc
add
fmuls
pop
fwait
mov
sti
pop
push
fcomip
das
inc
pop
sub
jmp
faddl
sbb
mov
push
mov
push
jmp
push
call
sub
adc
mov
je
gs
sar
mov
jle
outsb
mov
sti
mov
jmp
mov
fsubrl
cmp
mov
das
mov
cmp
cmc
jae
pop
or
sub
mov
lock
inc
pop
pushl
jle
mov
add
pop
mov
xchg
or
mov
or
dec
mov
push
pop
stos
lahf
sti
adc
fxch
ljmp
sbbb
fucomp
sub
mov
push
sbb
xchg
int3
mov
shrl
call
enter
cs
cmp
fsubrl
aas
mov
icebp
or
jne
bound
ja
pop
push
pop
mov
imul
stos
cmp
stc
ja
jo
jmp
jg
mov
aaa
loopne
jns
cmpsb
xchg
addb
pop
jno
xor
subl
and
ds
sbb
mov
aas
call
lret
mov
pop
pop
mov
jl
fadd
xchg
fucom
nop
and
xor
pop
enter
lcall
das
sub
dec
cli
mov
xlat
mov
fildll
add
and
push
daa
pusha
add
lock
mov
jne
andl
pop
push
cmp
xchg
dec
push
pop
pop
jmp
cmp
xor
push
movlps
add
pop
sub
jmp
add
frstor
push
mov
mov
sub
pop
or
rcr
outsb
ret
and
add
sbb
mov
pop
pop
pop
xor
out
mov
ret
xor
into
pop
icebp
cmp
out
mov
dec
push
call
add
add
in
jle
or
das
fldenv
out
ret
roll
or
push
pop
mov
subl
mov
imull
test
pop
cmp
adc
or
lods
ss
xor
ret
xchg
fwait
jmp
test
adc
jne
mov
lahf
int3
xor
cli
lds
inc
fldenv
stc
scas
inc
or
ljmp
in
push
adc
adc
dec
cmp
fwait
in
push
repnz
outsl
les
fldl
in
add
xchg
jae
jne
aam
adc
push
sub
jns
mov
cmpsl
je
pop
push
sbb
jmp
push
inc
sbb
ret
cmp
lds
jmp
inc
add
cmpsb
xor
addr16
cwtl
inc
cmp
sub
ja
sub
add
and
sub
xchg
stos
xchg
push
push
test
push
jno
int3
add
inc
lea
popf
adc
sub
xorb
or
jno
ret
bound
pop
add
jae
add
jmp
sbb
in
mov
add
sbb
pop
aas
leave
xchg
repnz
cltd
xchg
xchg
lret
or
insl
inc
lods
fwait
pop
cltd
int3
xor
inc
adc
pop
subb
jmp
push
dec
pusha
nop
ret
and
mov
cs
jo
jmp
leave
push
inc
loope
cmp
or
push
add
inc
js
pop
mov
jnp
hlt
xchg
sbbl
mov
dec
and
arpl
cmp
or
adc
stos
sub
test
pop
fs
push
ret
or
pop
push
mov
movsl
lcall
cmp
mov
dec
mov
mov
mov
popf
adc
push
and
in
inc
scas
or
mov
call
andb
adcb
loop
pop
sub
mov
out
shll
push
add
push
aaa
pop
clc
mov
mov
or
lods
push
cmc
scas
mov
test
dec
inc
dec
fmull
int
push
add
dec
inc
aaa
or
mov
sub
lcall
push
testl
je
mov
jl
xor
fildl
and
sub
cmp
adc
and
inc
das
sarl
and
outsb
test
inc
lret
sub
sub
andl
das
stos
xor
pop
cmp
lods
mov
xor
repnz
clc
adc
loop
lahf
ror
sbb
dec
mov
test
mov
xchg
cld
fisttpl
lock
cs
or
loop
mov
and
adc
mov
sbb
push
ds
pop
push
jbe
add
xchg
ror
xchg
or
cmc
mov
sub
dec
mov
enter
cmp
xchg
movsl
mov
cmp
sbb
add
xchg
mov
repz
ljmp
dec
repz
mov
inc
outsb
std
aas
movsb
data16
fildl
popl
addl
decb
xchg
xchg
and
push
gs
add
jmp
xchg
pop
mov
mov
mov
pop
pop
cli
push
pop
pop
cmc
and
push
push
inc
fsubs
add
test
leave
mov
push
add
mov
clc
cltd
in
divb
xchg
cld
shlb
mov
or
gs
push
push
inc
pop
test
jmp
sahf
or
adc
negb
sbb
mov
lods
loop
sarb
pop
add
and
enter
loope
es
adc
dec
loop
dec
jmp
test
dec
mov
std
and
push
sub
test
or
inc
lret
jmp
out
testl
decb
sbb
xchg
mov
mov
or
ds
cmp
push
pop
fwait
dec
leave
popf
push
jl
lods
outsl
repz
ret
and
sub
js
orl
pop
or
add
xor
rorb
and
push
or
adc
push
stc
or
pop
add
and
add
outsl
call
add
push
or
push
cli
ja
fisubrl
and
shrb
sub
repnz
xor
mov
pop
jb
icebp
inc
jmp
jle
jo
lret
pop
inc
std
pop
jnp
push
mov
jecxz
aam
leave
cmc
enter
cmpb
ret
enter
outsl
push
mov
mov
dec
push
les
int3
or
mov
add
insb
adc
adc
or
sbb
mov
pop
js
pop
insb
roll
add
negb
add
jp
xchg
js
sbb
sub
xor
fs
adc
mov
out
addr16
dec
lock
push
and
mov
add
loopne
repnz
or
rdtsc
repnz
sbb
push
ljmp
pop
push
lahf
neg
loop
andb
ret
out
insl
daa
adc
or
push
cmp
adc
or
pop
sti
cmc
cmpsb
incl
outsb
cltd
in
cmp
es
ljmp
jnp
call
iret
sbb
lods
pop
rorl
movsb
aad
bound
fimull
or
adc
mov
pop
xor
rcrl
cmpsb
inc
push
jmp
jp
adc
xor
inc
adc
inc
cmp
inc
and
orl
leave
add
push
jo
cmpsb
filds
mov
popa
aaa
pop
xor
cmpsb
push
outsb
or
sub
cltd
data16
add
add
dec
push
xlat
cmp
jecxz
adc
add
leave
bnd
add
test
and
sbb
sub
adcl
leave
push
jne
xor
shl
jns
and
in
inc
pop
sti
push
sub
sub
adc
adc
cwtl
nop
clc
sbb
mov
jp
dec
flds
or
icebp
shll
sbb
repnz
xchg
cli
cmp
push
dec
ret
adc
pop
movsb
jmp
push
dec
mov
add
xor
ret
andb
sub
sub
call
pop
add
add
jne
aas
add
ja
push
jmp
cmp
mov
xor
sbbl
sub
pop
fs
sbb
add
xchg
sbb
add
fcoms
pop
push
stos
lock
nop
and
call
add
cmc
add
jmp
mov
cmp
push
and
sbb
push
xorb
jecxz
out
mov
lea
aam
popf
jns
xchg
cmp
sub
push
jmp
popf
mov
or
pop
fwait
adc
test
scas
out
push
mov
pop
insb
ficoml
test
clc
xchg
jmp
divl
jb
sahf
gs
addb
and
fs
rorl
fsts
test
fsub
aam
dec
add
in
out
push
or
push
mov
cmp
mov
pop
clc
pop
test
jmp
je
enter
adc
mulb
clc
mov
insb
data16
mov
and
lret
mov
cmp
inc
int3
addr16
xchg
pop
jnp
pop
cmp
stos
xorl
lods
push
aas
adc
enter
and
xchg
dec
dec
adc
fmull
lret
jno
out
pop
fwait
adc
push
aaa
mov
xor
dec
mov
mov
addr16
add
jg
sub
mov
and
push
fnstcw
jecxz
push
out
in
push
jmp
adc
jbe
pop
and
mov
rcrl
xorb
pusha
mov
jg
test
or
jmp
jecxz
inc
stos
stos
rcrb
pop
xor
fisttps
or
add
hlt
or
pop
clc
push
mov
or
jo
rcrl
addl
notl
stos
add
xor
or
or
or
pop
dec
test
fisubs
sbb
in
push
gs
jmp
sub
push
add
bound
or
test
adc
sarb
xor
mov
adc
fimuls
lods
pop
push
mov
jle
inc
es
daa
and
je
inc
mov
stc
sub
ja
lods
push
mov
sub
or
dec
jmp
mov
fadds
mov
add
jmp
push
push
mov
movsl
mov
xor
adcb
inc
neg
adc
pushf
sbb
pop
xor
aaa
or
jno
bnd
cmpsb
sub
adc
cmpsb
stos
pop
fisttps
mov
xchg
in
add
pop
pushw
fbstp
and
out
dec
or
ret
cs
xchg
cli
adc
insl
push
and
ret
stos
stos
leave
dec
loope
sub
rolb
and
dec
addb
ret
pop
ljmp
or
dec
pop
adc
mov
push
popf
imul
xor
add
stos
xchg
xor
fnsave
shr
adc
in
xor
mov
pop
icebp
lcall
jmp
hlt
inc
lcall
shrb
add
fninit
add
js
movsb
ljmp
xor
sub
inc
ljmp
movsb
pop
pop
inc
xchg
pop
stos
orl
divb
sbb
push
push
rcrb
push
xor
dec
sub
adc
bndldx
and
iret
repz
pop
add
dec
and
pop
sub
rcll
push
pop
pop
clc
repnz
loope
test
into
xchg
mov
mov
flds
push
inc
mov
add
test
cmc
test
xor
loopne
iret
xchg
shrb
cmpsb
push
idivl
mov
test
cld
test
or
xor
sub
subb
repz
xor
sbbb
fiadds
inc
jo
sbb
shrl
aad
movsb
loope
add
and
xchg
inc
inc
xchg
outsl
adc
push
lods
iret
test
and
not
mov
push
sub
or
mov
mov
add
out
std
sbb
mov
shl
push
jge
flds
push
xor
xor
pop
xchg
jns
xchg
inc
jg
shr
adc
cmp
int3
scas
sbb
pop
add
adc
js
push
in
mov
andb
and
sarl
push
stos
pushf
sbbb
push
mov
ja
add
or
pop
mov
mov
pop
mov
jmp
push
cwtl
xchg
fimuls
mov
bound
rolb
push
mov
xchg
jle
imulb
jae
addb
aad
sar
into
add
push
or
pop
push
xor
push
mov
xchg
rcrb
imul
std
jp
movsl
pop
loopne
pop
push
pusha
push
mov
add
outsl
stos
or
mov
add
imul
lret
mov
push
dec
addb
push
movsb
scas
sbb
ret
jmp
xchg
aaa
pop
xchg
pop
pop
int3
mov
cs
jmp
or
mov
jbe
pusha
xor
andb
push
cmp
lret
popa
das
dec
adc
out
push
sub
inc
xor
cli
xor
call
add
xchg
push
shrl
or
lahf
or
mov
call
into
cmp
sub
or
out
or
jmp
out
fs
push
lock
jp
pusha
fcompp
jle
hlt
xchg
test
je
lahf
sbb
callw
and
movsl
stc
mov
push
out
xchg
jp
or
pop
and
aam
pop
push
ds
shl
pop
dec
dec
add
add
scas
xor
jl
imul
pop
cmpl
adc
xchg
xchg
fs
inc
dec
test
loope
stc
cmp
xchg
js
jne
pop
push
mov
sarb
imul
std
ljmp
or
dec
call
inc
or
add
mov
into
jle
add
scas
pop
mov
xchg
lret
sbb
sbb
pop
add
adc
lcall
xchg
or
add
or
sub
insb
sub
mov
in
fnstsw
dec
mov
out
sub
pop
jg
push
mov
dec
jb
mov
adc
imul
fld
inc
pop
ljmp
cmp
inc
xchg
pop
push
push
xchg
mov
movsl
sub
arpl
divb
add
or
add
push
pop
notl
add
pop
in
es
add
or
sub
fadds
push
rolb
add
addl
and
aad
mov
out
clc
and
add
sub
sbb
mov
cmp
sub
loop
jo
popf
enter
lcall
popa
clc
lahf
adc
mov
inc
pop
pusha
or
push
sub
dec
push
add
pop
push
movsl
adc
sub
stc
or
sbb
test
or
and
and
jns
inc
jmp
inc
or
sbb
mov
mov
ret
mov
dec
int
repz
add
pop
jne
push
xchg
cli
leave
cmp
aad
xchg
push
addb
sbb
or
test
inc
pop
cld
loop
jge
or
punpckhbw
shl
pusha
mov
popf
out
mov
ja
push
sbb
adc
or
nop
iret
xor
shll
imul
sti
mov
mov
xor
adc
or
fdivr
inc
mov
das
mov
xchg
shl
adc
push
mov
dec
ss
je
orb
jne
roll
cmpsl
push
xor
pop
mov
ljmp
je
push
mov
lret
jne
cwtl
test
aas
bound
or
pop
adc
xor
or
cmp
push
stc
jo
and
and
call
sbb
ds
mov
mulps
push
cld
sub
jge
jns
in
hlt
das
cld
xchg
mov
cwtd
adc
jns
xchg
lods
adc
pop
out
icebp
scas
or
addl
pop
scas
mov
push
or
pop
cwtl
adc
cmp
adc
jnp
pusha
fsubs
repz
sub
dec
inc
test
ret
test
xchg
xchg
jo
mov
and
mov
push
pop
sbb
jb
nop
jg
inc
mov
popf
int
jle
push
sub
dec
out
pop
and
cld
push
cmp
push
mov
ss
cmpsl
push
push
ret
jne
cld
dec
loopne
push
mov
pop
and
iret
lock
cmp
pop
aas
sub
je
in
add
movsb
sub
loop
hlt
bnd
jns
push
mov
jecxz
cmp
loopne
nop
jbe
in
adc
mov
push
xlat
pop
loopne
mov
mov
sbb
mov
jne
daa
and
sbb
cmc
stos
mov
mov
mov
cmp
sub
add
inc
mov
xor
add
cmp
js
popa
nop
das
mov
je
sbb
inc
mov
test
js
pusha
xchg
push
mov
cwtl
mov
push
arpl
pop
push
repnz
dec
les
add
xor
test
dec
ja
pop
outsl
or
nop
les
jg
and
je
test
out
xchg
cmpsl
adc
pop
popa
add
loope
jne
outsb
mov
mov
mov
mov
fcmovbe
out
orl
dec
iret
inc
and
pop
xchg
and
jmp
xor
and
test
test
cmp
repz
insb
dec
imull
or
mov
mov
jl
sub
testb
mov
pop
and
adc
inc
rorl
hlt
ljmp
mov
scas
cmp
cmp
add
or
lret
roll
outsl
mov
cld
xchg
add
and
jno
sahf
pop
orl
or
pop
xchg
fnop
mov
pop
or
or
repnz
adc
sub
lods
push
add
mov
push
adc
adc
jnp
lds
jmp
divb
icebp
push
and
enter
vfrczps
fadds
mov
dec
sbb
dec
and
pop
mov
xor
nop
push
sysenter
dec
push
mov
shrb
xchg
sub
jmp
icebp
sbb
pop
mov
jbe
dec
fucomi
or
and
outsl
pop
mov
push
push
dec
xlat
cld
mov
pop
inc
cmpsl
sub
or
lcall
out
movsl
fadds
jmp
push
mov
or
mov
sbb
xor
pop
in
dec
out
dec
xchg
daa
loopne
inc
xchg
loope
mov
mov
rclb
adc
mov
xlat
xchg
mov
pop
and
add
mov
or
or
inc
mov
sahf
pusha
sub
add
xchg
cmpsl
and
mov
cmpsb
test
das
cmpsb
out
daa
push
hlt
jl
repnz
or
cld
pop
push
jnp
dec
lock
jg
adc
rorl
iret
in
lahf
push
testl
add
jnp
pop
jnp
inc
sbb
outsl
and
adcl
push
mov
sbb
xor
inc
and
inc
fadd
cltd
xor
fs
cmpsl
aaa
dec
es
jle
xchg
fisubs
inc
jmp
pop
movsb
mov
adc
jp
inc
mov
jno
push
or
popf
std
xchg
and
imul
movsb
sub
jmp
pop
dec
lock
pop
cmp
icebp
movb
xor
fcmovnu
cld
dec
fcoms
push
xor
mov
pop
sub
mov
fadds
sub
inc
scas
or
cs
jb
mov
push
sbb
inc
pextrw
cmp
sbbb
add
sub
ret
cmp
mov
loop
xchg
clc
sahf
mov
lcall
mov
push
adc
inc
negl
push
pushf
add
pop
sub
hlt
test
add
dec
jno
aam
jl
pushf
leave
out
add
xor
arpl
add
das
add
jbe
and
arpl
inc
cmc
dec
or
cmc
adc
divl
push
mov
cmp
mov
jmp
mov
push
ret
test
stos
test
jg
lahf
sub
jle
lods
sub
rcll
or
sub
das
loope
add
jmp
inc
insb
dec
sbb
mov
jns
inc
loopne
loopne
fisubl
and
or
or
push
push
popa
pop
dec
push
mov
and
lret
fcoms
jmp
mov
jge
pop
cs
dec
add
xor
xlat
or
mov
ds
repnz
ret
stos
mov
and
add
sbb
xchg
add
into
adc
jg
pop
push
loopne
outsb
fistpll
jne
test
outsl
sar
pop
push
pop
add
vaddsd
out
pop
push
add
stos
rorb
test
push
or
push
inc
push
imul
not
jg
sbb
xchg
jnp
fdivrp
flds
jmp
xchg
lahf
push
ds
cmp
pop
and
push
daa
mov
fiadds
add
sub
test
ljmp
jecxz
add
iret
inc
push
mov
mov
repz
push
add
mov
mov
das
test
arpl
ret
cltd
ljmp
jge
shrb
and
arpl
sahf
out
dec
pop
incl
pusha
ret
pop
pop
push
add
push
jns
or
or
mov
out
and
jmp
sub
sub
adc
fsincos
rcr
cmpsl
das
adc
dec
mov
sarl
bound
adc
cs
pop
dec
fcoml
loopne
sub
faddl
sarb
jge
mov
xor
mov
lcall
das
jmp
sub
sub
pop
fwait
mov
cmpsb
xchg
inc
pop
mov
cmp
jmp
jg
stos
pop
clc
inc
pop
stos
sub
jmp
in
mov
jbe
push
loope
ljmp
or
cmc
cmp
add
or
test
shr
inc
xor
aas
mov
les
shrb
out
xor
enter
adc
imulb
lcall
ds
push
mov
daa
mov
lea
add
jno
mov
subl
pop
add
pop
cmp
sub
push
rorl
and
fsubs
daa
in
xchg
negb
adc
sbb
insl
shrl
push
add
push
repnz
dec
pop
sub
inc
fwait
sbb
gs
jo
and
xlat
es
or
add
sbb
xlat
movsl
shll
je
loope
dec
pop
out
sub
jno
test
mov
push
insb
pop
mov
cltd
push
shrl
sbb
or
mov
pop
addr16
and
inc
and
mov
je
jl
add
cmp
jmp
imul
or
sub
dec
mov
add
dec
dec
or
pop
cmpsl
and
push
inc
or
xchg
jbe
add
addr16
lds
dec
inc
xchg
push
or
mov
lcall
add
pusha
gs
push
das
add
jg
cmp
dec
jns
roll
in
xchg
xchg
push
loope
xchg
arpl
cmp
xchg
xor
sbb
dec
imul
dec
jmp
xlat
xchg
mov
sbb
cmp
cmp
pop
mov
dec
dec
lcall
ret
cmp
jg
mov
adc
push
push
or
add
sbb
push
sbb
iret
scas
add
add
inc
cmc
rcll
insb
out
push
mov
jnp
incb
stos
adc
xchg
adc
fisubl
push
aam
inc
inc
mov
mov
xor
rorl
push
add
dec
adc
sbb
bnd
push
fbld
dec
hlt
ret
sbb
test
xchg
sub
rorb
hlt
pop
into
cld
inc
cld
cli
xchg
mov
push
scas
mov
xchg
and
mov
and
push
push
xorb
add
testl
inc
daa
push
je
push
mov
fidivrl
mov
push
mov
mov
fwait
jl
lds
rcll
xor
sbb
xchg
loopne
and
mov
insl
dec
inc
or
xchg
pop
sub
add
jbe
loope
test
sub
sahf
xchg
mov
rolb
jo
das
neg
cmpb
movsb
arpl
ret
jg
pushl
xor
lods
dec
push
pop
or
jle
daa
insl
sahf
daa
and
lods
jbe
or
sbb
push
xchg
and
repz
jl
jb
cmp
mov
add
mov
xchg
test
jnp
cs
add
data16
add
movsl
dec
xor
jp
cmpsb
inc
add
sub
sbb
neg
adc
ss
pop
loop
mov
xchg
ret
xchg
ja
or
lods
push
faddl
movl
xor
xor
enter
pop
sub
pop
fildl
incb
pusha
add
xor
aaa
sbb
cmp
dec
imul
std
shll
es
popf
ja
xlat
cs
inc
inc
outsl
pop
push
dec
int3
inc
sbb
shl
jge
mov
inc
and
inc
cmp
sbbb
and
dec
or
jbe
push
cwtl
or
dec
insl
mov
testb
adc
cmp
fcoms
push
idivb
mov
sub
pop
push
sbb
push
out
push
adc
adc
je
gs
jg
inc
or
es
mov
fwait
loope
mov
xor
cli
or
sbb
or
daa
test
dec
jae
mov
mov
sbb
shl
popa
stc
enter
es
xor
lret
and
sub
inc
mov
pop
push
mov
add
add
les
out
cmp
test
lods
movl
popa
dec
enter
push
push
test
call
lret
pusha
xchg
pop
pop
in
in
scas
aam
pop
or
jecxz
loope
jns
and
cli
mul
or
bound
ja
fisttpll
jp
pcmpeqw
mov
jns
jle
adc
adc
add
ficoms
ja
daa
or
aad
xchg
test
cld
and
js
enter
dec
push
jb
les
iret
insb
dec
stos
xor
jmp
icebp
pop
scas
cli
imul
cltd
jno
out
aas
inc
pop
bound
lcall
pop
add
jge
nopl
scas
adc
out
cli
sti
pop
ret
sub
jl
in
test
pop
scas
sub
cmp
divb
pushl
xor
bswap
rclb
fsubrl
mov
push
or
ficoms
push
or
pop
add
fidivl
xchg
inc
ret
loope
inc
xchg
stc
cld
push
or
jmp
mov
xor
loop
into
testl
daa
xchg
add
dec
sahf
pop
push
mov
jns
mov
in
inc
mov
push
daa
cmp
or
lret
pusha
mov
fsubl
repnz
lahf
imul
pop
mov
adc
fbstp
loop
lods
andb
pushl
sub
icebp
jo
loope
inc
popf
ljmp
xorl
inc
repnz
dec
mov
std
ss
daa
xor
and
sbb
add
jl
std
in
or
test
popf
pop
arpl
in
loopne
and
dec
mov
cld
dec
dec
push
stos
sbb
xchg
jb
mov
xchg
jo
loopne
mov
mov
aas
inc
jmp
mov
adcl
xchg
je
loopne
lahf
movsl
adc
shl
adc
push
out
push
scas
lock
push
popf
jmp
dec
ljmp
pusha
incl
mov
push
pop
push
inc
push
or
dec
push
test
popa
add
mov
ljmp
cli
jecxz
jp
icebp
pop
loop
or
cmc
andl
and
fucom
int
or
jmp
dec
pop
mov
lcall
pushf
or
sub
xchg
shrb
inc
sahf
stos
sahf
rorb
mov
inc
das
xor
jae
adc
pusha
fiadds
xor
add
lret
or
xchg
mov
dec
sti
mov
aaa
mov
in
outsb
push
xchg
push
push
jmp
jmp
push
mov
negb
jne
scas
in
inc
add
add
and
jg
in
jo
push
pop
ss
inc
mov
stos
push
lcall
lock
in
add
mov
loope
add
add
fcomps
filds
sbb
leave
out
push
xchg
adc
push
popf
lahf
and
and
and
push
and
push
pop
mov
adc
mov
lea
in
jnp
cmp
push
loope
stos
sbb
cli
je
adc
js
les
sub
sbb
pop
sbb
imul
sub
add
popa
xor
aaa
ret
pop
pop
imul
bound
cmpb
test
call
dec
jl
roll
cmp
int
xchg
push
adc
mov
xchg
dec
pop
imul
inc
pusha
xchg
pop
push
clc
jae
mov
das
push
pop
push
ljmp
out
test
pop
leave
andb
pop
and
pop
sub
jecxz
mov
aaa
xor
addr16
outsl
sbb
dec
sbb
cmpsb
fiaddl
in
adcb
sti
cmpsl
cld
jae
les
add
in
xchg
and
lea
sti
and
or
ret
sub
push
mov
xor
fnstsw
jno
movsb
icebp
fwait
pop
sub
push
mov
add
mov
bound
xlat
xchg
push
mov
pop
adc
push
push
and
cwtl
stos
and
imul
adc
iret
lret
out
add
add
mov
mov
lahf
inc
lcall
inc
das
fstl
cwtl
pusha
in
daa
imul
ret
repnz
push
and
sub
push
jmp
mov
jo
or
rcrl
mov
sbbb
dec
rorl
rcll
and
shr
jbe
pop
pop
out
or
incl
lods
shlb
jb
or
mov
mov
xor
jmp
add
repnz
insl
push
pop
xor
or
xchg
add
subl
xor
sub
test
bound
repnz
sbb
and
jae
call
daa
xor
jmp
aad
fs
cmpb
add
fidivrs
jmp
pop
das
mov
push
jge
shlb
mov
push
insl
inc
les
lock
mov
test
and
lods
pop
push
ret
in
mov
cmp
mov
jmp
pop
subb
clc
add
sub
sbb
dec
cmpsl
pop
add
lret
js
dec
fs
mov
jge
scas
jbe
mov
mov
pop
mov
cmp
loope
fistpll
add
mov
and
loopne
sub
cltd
push
mov
fs
mov
in
sti
mov
push
push
lret
push
push
sub
fidivl
in
call
dec
sub
jle
pop
add
punpckhwd
jmp
push
mov
cwtl
adc
cmp
leave
ljmp
inc
lret
cltd
mov
and
cmp
mulb
add
popf
adc
iret
jo
inc
mov
je
ds
pop
xor
cwtl
mov
add
xlat
inc
sbb
fcomps
xor
push
mov
sub
daa
push
stos
out
sbb
xor
push
dec
ja
fsubrp
or
push
popf
clc
stc
sub
loop
rclb
pop
ljmp
push
mov
pop
hlt
inc
sahf
and
sub
aam
cmc
fists
sub
jae
and
in
gs
fcom
notl
push
add
ffree
add
jne
ds
add
or
lea
push
sub
xorb
mov
pop
lods
xchg
sti
dec
mov
ret
cmp
in
int3
dec
fwait
cmp
ds
add
ret
ljmp
or
outsb
pop
sub
ljmp
cmp
addb
xchg
ffree
cltd
shl
testb
inc
dec
pop
push
push
sub
inc
scas
pshufw
orl
inc
xor
sbb
dec
and
jle
adc
or
adc
and
push
jmp
mov
pop
cmpsb
mov
daa
push
ds
xadd
int3
aam
push
insl
cmpsb
adcb
or
jns
xorb
dec
mov
jb
adc
test
out
jl
loope
mov
ret
pop
sbb
call
mov
notl
adc
push
cli
rclb
xor
shlb
icebp
push
push
outsb
nop
loopne
movsl
je
aaa
add
push
xchg
jle
and
shll
pop
loop
xor
sbb
in
repz
pop
push
cmc
sub
into
mov
inc
mov
daa
add
call
movsl
jl
enter
shlb
add
adc
xor
ss
inc
mov
loop
xlat
xorb
loopne
das
add
mov
push
sbb
pop
fcmovnbe
sbb
addr16
or
insl
inc
mov
add
xor
jge
dec
repz
mov
add
sub
clc
pop
xor
mov
cmp
pop
mov
lea
lret
mov
push
mov
sub
sbb
pusha
cmp
push
jg
fcom
dec
bound
xchg
loope
lcall
mov
jmp
cmpsl
inc
aam
jne
mov
sub
mov
push
in
notl
pop
pop
test
and
xchg
pop
in
cmp
adc
xchg
add
in
ret
mov
scas
jecxz
push
or
sbb
test
pusha
sub
pop
fiaddl
and
jne
add
test
mov
fisttpl
jne
push
rcl
ror
clc
cmpsl
xchg
hlt
in
shlb
pop
push
xchg
dec
incl
or
iret
arpl
sbb
fdivrp
sbb
lahf
jb
jns
lods
add
pop
inc
push
and
inc
out
jl
sub
pusha
scas
mov
push
mov
nop
loope
imul
adc
repz
out
out
js
dec
pop
mov
dec
cmpsb
rcrb
inc
sub
aad
add
jmp
int
mov
jb
loop
and
loopne
jmp
mov
in
mov
cwtl
push
lock
mov
and
adc
jge
push
aaa
adc
dec
sbb
data16
pop
push
jecxz
and
lahf
shr
out
mov
dec
push
adc
mov
in
fdivrl
jmp
addr16
fmuls
imul
aad
mov
shlb
loope
out
and
cmp
mov
push
mov
fs
or
nop
iret
jp
mov
mov
add
dec
mov
clc
pop
xchg
mov
mov
cmp
pushf
outsl
cmp
jp
rorb
lea
inc
push
dec
scas
push
jmp
dec
ret
cs
pop
xchg
adc
mov
shlb
sub
std
dec
shlb
lahf
dec
in
aad
mov
add
call
pop
popf
rol
add
or
call
or
inc
cli
inc
andb
pop
sar
xchg
xor
jo
dec
pop
add
movsb
dec
aad
aam
imulb
lret
fs
push
leave
repz
push
xor
xor
fisttpll
cmp
sub
and
fildl
icebp
mov
mov
fisubs
pop
imul
mov
pop
ds
stc
add
jnp
xor
push
imull
scas
push
dec
dec
jmp
or
jae
pop
shr
rol
mov
pop
mov
pop
xor
roll
jl
mov
sub
and
pop
pop
xor
mov
gs
jbe
js
add
mov
mov
sti
adc
jge
pop
xchg
std
lea
mov
fnsave
inc
cmp
inc
pop
es
dec
add
bnd
jmp
push
push
pop
push
in
add
add
pop
and
jmp
repnz
sbb
jnp
ljmp
xchg
gs
ds
popa
cltd
adc
insl
movsl
mov
pop
mov
shl
xor
or
aam
and
adc
addr16
and
notb
lahf
daa
bsf
xchg
dec
jae
push
cmp
add
xor
mov
xor
pop
aas
or
inc
add
inc
clc
sub
xor
xchg
mov
push
sbb
and
insl
fwait
sub
or
in
fs
das
lahf
icebp
pushaw
lods
xor
push
jmp
stos
stos
pop
call
mov
push
mov
dec
pop
jle
movsl
dec
addb
xor
int
add
add
clc
lret
push
pop
fimull
sbb
shlb
nop
pop
out
imul
mov
xchg
jp
mov
mov
add
jmp
pop
xchg
adc
shr
hlt
dec
inc
pop
mov
xchg
pop
stc
lods
and
pop
sbb
idiv
inc
and
sbb
jo
sbb
jecxz
ja
add
and
fildll
sub
repz
push
sahf
pop
push
popa
hlt
jmp
dec
or
cltd
loopne
outsb
mov
cwtl
xchg
mov
icebp
popa
jge
loop
jecxz
push
out
push
imul
popf
add
pop
and
mov
bound
pop
fadds
inc
inc
mov
adc
fs
mov
pop
add
pop
popf
inc
xor
rolb
push
add
jl
jl
xchg
and
mov
sub
roll
push
mov
shr
xor
aam
fs
dec
inc
jecxz
dec
add
int
ljmp
in
or
push
xchg
push
not
jmp
jecxz
movsl
loope
sbb
adc
scas
cmp
sub
sub
mov
sahf
dec
mov
sub
sahf
cld
mov
xor
loope
lods
adc
sbb
xchg
out
adc
imull
mov
pop
nop
xchg
sti
ljmp
leave
stc
enter
push
js
ds
jb
loope
jge
xor
add
fiadds
mov
and
add
sbb
ret
ret
and
test
std
dec
pop
add
or
pop
cwtl
clc
or
jle
or
in
cltd
push
stc
int
push
je
ljmp
mov
xchg
xor
icebp
xchg
mov
sbbb
pop
or
add
xor
pop
arpl
adc
fldl
adc
mov
mov
mov
or
pop
jmp
inc
je
or
lcall
sarb
mov
call
add
or
aam
test
test
pop
dec
ljmp
mov
gs
push
pop
jne
inc
add
das
mov
cmp
or
out
pop
rcr
sbb
icebp
jg
dec
ljmp
pop
call
ret
cmp
adc
aam
pushf
xchg
lods
inc
subps
shr
and
jmp
lock
add
mov
pop
add
cmp
sub
pop
pop
dec
sbb
orl
add
nop
outsb
jp
mov
pop
sbb
pushf
mov
push
cli
rcrb
add
movsb
daa
icebp
add
or
pop
addb
mov
popa
add
or
mov
ss
mov
sbb
lds
jmp
imul
adc
mov
lret
pop
adc
jp
mov
xor
inc
adc
imull
ljmp
stos
fsubrl
adcb
xor
shr
push
ds
sbb
jne
test
push
leave
adc
jmp
xchg
dec
stos
add
inc
pusha
cmpsb
into
adc
mov
in
lret
add
outsl
inc
pop
sub
sub
orl
and
fsubs
pop
jmp
add
push
mov
sbb
jb,pn
clc
inc
je
outsb
push
ret
stc
sti
sahf
mov
adc
and
pop
hlt
jp
rorl
or
fwait
add
leave
in
leave
aam
orb
cmp
mov
gs
cmp
mov
sub
loop
loopne
jle
adc
daa
cld
cmc
fwait
in
add
scas
ljmp
jne
and
les
test
mov
xchg
adc
mov
add
inc
xor
insl
les
fwait
ret
lods
fadds
inc
or
in
mov
and
add
dec
xor
add
insb
outsb
or
inc
arpl
clc
pop
cmp
inc
cmp
add
mov
mov
ret
stos
push
into
stos
out
lods
adc
push
sub
mov
hlt
cmp
sub
and
cmpb
in
sarl
cmp
xor
push
rorl
mov
addl
cmp
xor
test
push
mov
push
sbbl
add
sub
adc
pop
sub
or
subb
mov
jmp
dec
ret
pop
and
and
sub
into
or
pusha
xchg
hlt
inc
mov
add
or
push
add
sub
jmp
out
push
popf
jne
jp
pop
mov
and
aas
in
cld
es
dec
or
xor
je
add
jge
test
sub
das
outsl
lea
das
shrl
pmaddwd
dec
dec
clc
sbb
mov
cmp
pop
jns
push
or
dec
daa
pop
out
repz
cmp
pop
xorl
lods
cld
sbb
cmp
xor
push
mov
dec
jge
cmp
jns
ret
mov
or
push
call
or
jge
adc
push
sti
add
cld
inc
mov
pop
decb
das
test
lcall
sub
jbe
push
and
and
mov
sbb
cli
sub
sahf
push
and
in
in
mov
dec
std
test
or
jns
insb
leave
pop
push
sub
aas
pop
subb
jl
addl
dec
add
dec
jmp
movsl
pop
cld
cmp
jmp
xor
gs
or
cltd
push
lock
jmp
cwtl
push
mov
sub
mov
icebp
push
insb
add
pop
fnstsw
imul
push
mov
aaa
in
pusha
fucomip
in
add
xlat
and
flds
pop
xor
and
jo
xor
pop
sub
enter
push
sub
shrb
jecxz
mov
clc
push
popa
adc
clc
add
pop
jle
push
dec
test
ret
pop
lock
sbb
pop
ja
stos
cmp
pushf
xchg
pop
mov
insb
rorl
mov
mov
je
fnstcw
dec
loopne
rcll
sub
jp
mov
leave
push
setb
cmc
adcl
mov
imul
pusha
and
pop
jp
loopne
stc
mov
pop
fwait
int3
mov
mov
jg
aas
mov
mov
xchg
sub
jmp
outsl
aad
loop
jg
mov
dec
cmp
or
inc
das
xchg
mov
ljmp
orb
dec
mov
stos
enter
push
ljmp
sub
sub
push
push
mov
in
xchg
jo
jmp
mov
lods
enter
pop
cwtl
imul
inc
mov
cmpsl
bnd
insl
stc
mov
inc
xchg
jo
out
das
rolb
pop
sub
xor
lods
stos
pop
mov
pop
lods
sub
sub
pop
mov
or
ret
push
xchg
or
add
dec
pusha
sbb
cmp
sbb
testl
jmp
dec
sub
xchg
movsb
mov
ds
insb
test
loop
xchg
mov
ds
popa
add
xor
inc
mov
pop
rorb
mov
mov
pop
divl
and
in
nop
stos
add
popf
push
inc
out
fldcw
aad
inc
ds
test
inc
out
inc
add
push
sub
jmp
xchg
add
mov
mov
pop
mov
das
dec
stos
int
mov
clc
jbe
pusha
pop
out
lcall
pop
inc
inc
or
out
ret
ficomps
popa
mov
and
dec
ret
adc
add
push
inc
loop
push
xchg
mov
mov
mov
jge
sti
mov
fisubrs
add
xchg
bound
ja
cmp
les
cmovo
imul
mov
dec
out
mov
or
pop
add
fsubr
mov
in
rorb
inc
daa
inc
fisubrs
pop
or
mov
xor
aad
in
mov
push
mov
rol
jbe
add
leave
mov
insb
pop
nop
sti
rorb
rorb
mov
or
add
xor
add
mov
xchg
leave
movsl
pusha
imul
add
xor
outsl
and
roll
mov
sub
and
fmuls
mov
cmpsl
pop
je
push
rclb
sub
or
ljmp
xchg
pop
and
inc
add
int
inc
pop
sub
xchg
addb
stos
pop
add
stos
pop
adc
push
negl
xor
dec
lock
rcrl
or
sub
outsb
adc
mov
push
rclb
scas
ret
push
push
mov
aam
or
cmc
leave
jbe
fisttps
pop
cmpsl
aad
jge
jae
adc
inc
lods
adc
adc
ss
inc
xor
mov
orl
mov
daa
int
adc
daa
adc
data16
jmp
jg
aad
subl
test
or
pusha
pushf
push
mov
sub
or
add
xor
adc
test
lods
jnp
std
mov
dec
sarb
loopne
ja
stos
sbb
out
dec
dec
ljmp
lahf
jmp
mov
repnz
xlat
pop
pop
push
les
adc
add
cmp
daa
and
rorb
shr
mov
mov
ja
lret
push
mov
cmc
shr
push
mov
rolb
xor
push
push
or
outsl
or
dec
icebp
pop
pushf
clc
lods
add
mov
xor
shlb
mov
or
out
push
dec
imul
mov
xchg
or
add
pop
mov
and
mov
aad
into
and
inc
mov
lret
cmp
jns
jecxz
push
lahf
or
cmp
das
jmp
cld
cli
push
fsts
cltd
lret
pop
mov
sub
je
add
shl
push
mov
add
imul
int3
imul
sub
shr
push
push
and
in
jle
sub
add
sbb
gs
aam
xor
jl
fnstcw
cmp
bound
int
cmp
xchg
jp
sub
and
scas
sub
pop
push
push
sbb
sub
call
or
or
push
dec
iret
cmp
add
movsb
and
call
out
mov
and
sbb
outsl
nop
pop
std
xchg
cmpsl
dec
ror
pushf
adc
hlt
push
mov
or
outsl
add
bound
dec
das
dec
popa
and
sbb
in
in
xchg
mov
clc
pop
sub
push
mov
sbb
push
inc
mov
sarl
test
mov
mov
pusha
cltd
bound
xor
mov
dec
int3
es
jmp
pop
jae
or
outsl
faddl
cltd
aaa
and
data16
lret
push
sbb
dec
jo
mov
gs
sub
mov
int3
push
jb
push
push
outsb
popf
jle
and
insb
xchg
pop
mov
push
fnstsw
add
add
lds
insb
xor
test
pop
daa
and
lea
inc
mov
mov
xchg
mov
mov
cmc
stos
popa
es
imul
rolb
pop
std
sub
sub
xor
cli
int
icebp
mov
pop
add
sub
movsb
mov
mov
pop
cs
mov
divl
sbb
movsb
cltd
in
jmp
sub
rcrb
rcll
out
pop
cs
jle
jnp
fsts
jl
outsb
les
add
lret
inc
lahf
mov
and
add
mov
out
subb
add
faddp
sbb
xor
shlb
stos
xor
shr
xor
je
pop
repz
pop
inc
test
out
bound
xor
jl
jmp
ljmp
mov
pop
icebp
pop
orb
or
mov
dec
stos
add
imul
mov
push
xlat
cld
xor
fwait
scas
mov
dec
mov
and
pop
test
test
lret
xor
out
push
jmp
xor
jno
inc
imull
cmp
mov
xor
xchg
into
pusha
pop
lret
dec
and
mov
add
sbb
jb
iret
repnz
adc
mov
jo
dec
mov
sarb
sbb
enter
push
mov
rolb
push
push
mov
and
mov
xor
faddp
stc
push
add
add
jmp
cli
xlat
inc
test
and
das
mov
push
mov
aas
out
shlb
adc
xor
add
scas
cmp
lds
mov
outsb
shr
mov
insl
push
lods
mov
push
into
cmp
adcb
push
cmp
div
cmpsb
and
out
xor
cmp
adc
jmp
fstps
mov
sub
sub
cmc
cwtl
push
or
inc
or
decb
pop
ljmp
pop
and
jb
sub
add
push
push
mov
and
xchg
daa
xchg
pop
add
push
jp
lds
mov
mov
and
inc
xchg
scas
xor
insb
leave
adc
repz
pop
ret
jmp
ljmp
add
and
sub
inc
sbb
jmp
inc
inc
cmp
jle
pop
mov
push
and
mov
cmc
leave
fnsave
sub
dec
ds
add
xchg
mov
mov
imul
jns
pop
int3
xchg
xchg
xor
daa
stc
out
or
cli
decl
inc
add
or
movsl
xchg
inc
daa
es
mov
sbb
jge
fnstenv
lahf
and
xchg
or
xor
pop
sub
sbb
icebp
adc
popa
adc
push
cmp
clc
jmp
mov
mull
and
insb
and
shll
pop
cmp
gs
stos
fs
pushf
cld
adc
lods
mov
test
inc
fcoml
daa
fbstp
mov
adc
rcll
adc
inc
int3
outsb
dec
add
jno
lret
mov
loopne
jae
push
push
outsl
leave
mov
pop
out
frstor
dec
dec
shrb
push
sbb
adc
ret
mov
xchg
xchg
jnp
gs
adc
pop
mov
inc
dec
push
lea
sub
test
sbb
mov
dec
and
es
dec
add
push
packsswb
sbb
aaa
jno
jmp
pop
inc
and
push
pushf
jo
lahf
div
ret
add
test
xor
cmpsl
div
push
aad
mov
cltd
shl
cmp
pop
add
push
mov
enter
xor
add
insl
ret
jge
xlat
in
pop
daa
mov
pop
addl
add
mov
or
cmp
addr16
inc
mov
sub
xchg
and
and
cltd
xor
cmp
dec
xchg
aam
bound
out
loopne
pop
xchg
out
add
push
loopne
jecxz
mov
dec
lods
xchg
lret
xor
lcall
jnp
in
test
jle
dec
loop
mov
ds
or
pop
jl
sub
xor
lret
in
add
adc
sub
cmp
push
inc
aas
and
adc
cmpb
add
jmp
into
pop
mov
cmp
lock
and
clc
mov
jp
jle
imul
cmp
jle
xchg
iret
bnd
sub
fstpl
daa
or
cwtl
imul
push
pop
sahf
xchg
out
orl
adcl
inc
cltd
cmp
mov
loop
and
jno
pop
add
push
add
lahf
and
rcrb
sbb
jmp
inc
cmp
pop
pop
jns
jmp
aad
jne
roll
insl
sarb
pushf
es
popf
sbb
add
add
cmp
sub
push
push
push
mov
stc
je
sbb
inc
mov
iret
subb
imul
push
bound
mov
sub
add
xor
insb
fidivrs
roll
push
mov
sub
imul
pop
push
mov
popa
in
sbb
push
jo
mov
inc
into
repz
sbb
movsb
sbb
jo
sbb
dec
shll
push
movsl
fld1
out
mov
jno
add
cmc
push
pop
push
scas
push
fwait
scas
popaw
and
ds
add
xchg
add
jb
out
cmp
and
mov
add
loope
pushf
or
add
pop
add
loope
sub
xchg
dec
lahf
inc
leave
push
xor
shrb
adc
xor
add
sub
inc
insl
lds
sbb
mov
shl
add
adc
roll
sbb
dec
push
add
jmp
mov
push
add
das
int
loop
push
fistps
add
push
inc
leave
sbb
add
xor
sub
adc
push
jle
test
pop
leave
cmp
dec
shr
push
dec
ret
push
mov
and
push
leave
lahf
push
repz
ja
jae
cwtl
cmpsb
les
fimuls
test
and
mov
sub
mov
movsb
sbb
repz
xchg
divl
xchg
aad
cmp
dec
jne
add
xor
dec
pop
and
movsb
xor
out
pop
popf
loopne
mov
or
jmp
mov
push
mov
push
imul
add
sub
sbbl
or
ret
shrb
lods
adc
jmp
or
dec
fstl
movsb
or
aaa
xchg
repz
adc
pusha
cli
push
jnp
adc
or
mov
or
mov
inc
testl
repnz
jle
adc
in
loope
dec
inc
inc
xor
dec
or
adc
shlb
sub
dec
and
insb
in
pop
pop
sub
or
and
outsl
inc
xchg
fisttps
and
fwait
xlat
and
add
cmp
mov
aas
cld
jns
mov
fadds
jecxz
ss
sub
add
adc
jmp
ljmp
jg
data16
cli
jb
mov
incl
add
leave
je
popf
xchg
inc
mov
imul
movsb
mov
xor
and
fadd
mov
jge
push
push
xchg
jne
inc
xchg
fldt
xchg
dec
dec
and
mov
aad
addl
push
dec
sbb
or
jb
leave
mov
cmc
in
das
pop
cmp
pop
jecxz
sub
adc
js
dec
std
jnp
mov
std
push
jg
lock
jno
stos
in
pop
shlb
outsl
popf
sbb
inc
push
ret
pushf
enter
cmpsl
je
pop
dec
mov
fistpll
std
jge
ret
push
fstpl
add
mov
movsb
or
sub
adc
jle
fidivrl
pop
gs
aad
stos
flds
hlt
shlb
mov
push
lea
jg
sub
das
mov
add
push
ret
scas
mov
push
jmp
ret
add
pop
scas
bound
mov
jge
xor
leave
mov
mov
rolb
es
jg
sbb
xor
or
cmp
mov
addr16
das
je
and
aaa
add
xchg
cmp
push
dec
addb
xor
cmp
in
push
dec
bound
sub
sti
punpckhdq
push
jbe
aad
sub
pusha
int
dec
push
or
mov
movsl
cmp
or
cmp
cmpb
popa
addb
push
xchg
add
notb
fildl
or
das
xchg
lock
cwtl
xchg
mov
mov
or
sub
test
dec
in
fisttpll
lahf
out
cmpsl
jle
cmpb
jmp
popf
or
lods
or
nop
and
cwtl
lock
cs
fstps
out
test
out
push
pop
lock
xor
nop
xorb
stc
push
psllw
xlat
inc
testl
and
sarb
mov
pop
ret
dec
sub
stc
faddl
movsb
jle
sti
pusha
lret
push
insb
cwtl
xor
bound
push
outsl
sub
test
pop
or
das
xor
stc
add
or
adc
push
jmp
je
orl
add
push
mov
push
add
pop
sub
sbb
or
adc
adc
insl
push
subl
insb
arpl
lahf
dec
cmc
test
mov
or
jl
jge
aas
jmp
cmp
push
or
dec
mov
pop
pop
and
out
cwtl
sbb
pop
ficoms
xor
in
cld
sub
mov
push
aad
add
bound
test
aad
mov
mov
jp
outsl
mov
adc
vphaddbw
inc
pop
aas
scas
nop
jp
shll
mov
or
fisubrl
pop
std
add
push
popa
repz
imul
pusha
test
rcll
loope
xchg
es
cmp
or
inc
adc
add
push
jle
imul
xchg
divb
jg
xchg
adc
xchg
inc
movsb
sets
pcmpgtb
sbb
ret
out
inc
or
add
xchg
call
mov
pusha
push
daa
adcl
or
mov
jno
add
incl
in
inc
push
mov
es
pop
add
cmp
add
dec
xchg
insl
and
xor
cwtl
aas
or
insl
or
imull
push
insb
movsb
push
or
mov
gs
add
clc
pop
push
rclb
inc
add
fidivs
add
cli
inc
out
jecxz
sub
or
pop
ret
xor
xlat
adc
pop
jmp
xchg
popf
add
enter
xchg
dec
or
jge
xor
icebp
lahf
imul
loope
pop
das
nop
mov
inc
mov
adc
sti
adc
loop
cld
repz
dec
mov
and
jae
pop
icebp
push
sub
cmp
inc
pop
cmp
xchg
sarb
pop
mov
lods
push
cld
jg
jmp
sub
inc
mov
adc
inc
push
mov
add
sub
popa
data16
shlb
jmp
mov
mov
or
push
not
push
mov
pop
add
inc
pop
in
or
scas
adc
xchg
lar
mov
out
repz
add
add
jno
shl
sub
flds
mull
dec
ss
stos
jnp
repnz
add
xchg
insb
in
rclb
and
adc
das
dec
push
mov
inc
xchg
ds
xchg
shl
lss
pop
addb
mov
add
add
pop
push
pop
lcall
push
and
shlb
or
ret
mov
andb
lret
or
pop
out
push
frstor
and
pop
add
dec
push
in
incb
push
shrl
xor
mov
push
add
sbb
jp
out
mov
cmp
fbstp
fsubs
mov
or
jbe
push
jecxz
jge
push
pop
neg
out
and
addl
xchg
insb
test
clc
jmp
pop
inc
repnz
cs
int3
call
xchg
add
jecxz
inc
in
enter
dec
xor
mov
cmpsb
in
push
fwait
adc
mov
adc
lret
push
xchg
popf
cs
imul
sub
scas
ret
addb
dec
shrl
mov
mov
addl
jnp
push
adc
xchg
icebp
inc
cli
cmp
jne
and
js
inc
add
xor
cmp
sbb
outsb
pop
add
inc
adc
dec
pop
push
add
pop
jle
pop
pusha
imul
mov
aaa
sahf
jg
mov
or
pop
xchg
outsl
mov
pusha
dec
inc
lock
shll
fsubr
xchg
out
xchg
leave
inc
jno
andb
inc
enter
add
push
je
or
pop
adc
jmp
popf
adc
sti
xlat
fidivrs
stos
lds
mov
mov
or
in
les
add
imul
shrl
movsl
add
jmp
lock
ret
jb
movsl
and
sub
dec
pop
adcb
jmp
adc
push
and
sub
pop
jae
daa
and
outsl
inc
push
xchg
pop
mov
xchg
jp
push
fcoml
dec
cmp
xor
mov
pop
add
mov
testb
insl
jl
adc
mov
dec
loop
pop
dec
jbe
hlt
dec
jb
mov
gs
push
imul
mov
enter
push
fwait
inc
xchg
pop
dec
js
mov
into
out
mov
test
jl
fnstsw
mov
cmpsl
jbe
add
sbb
shr
adc
mov
add
or
and
mov
outsl
jge
jmp
mov
movsl
push
jmp
repnz
ret
xlat
or
subl
rcl
into
ds
push
in
and
mov
mov
test
push
inc
push
push
jmp
ja
mov
push
xor
xchg
enter
mov
mov
loope
into
pop
cmp
pusha
or
das
sub
xor
and
cmp
insl
adc
inc
jp
pop
jne
add
jmp
jno
cmpsl
inc
sbbb
test
dec
fsubr
lret
aad
movsl
adc
pop
stos
flds
xchg
or
mov
stos
testb
mov
popf
pusha
inc
mov
popf
sbb
ds
inc
add
add
or
je
arpl
ljmp
mov
in
jae
sub
lds
xchg
mov
cmp
mov
sbbl
fisubrl
add
and
or
jge
fisttpl
stos
xchg
fldl
xor
push
inc
dec
dec
scas
and
in
jae
inc
data16
mov
popa
jmp
out
sarl
push
pop
xchg
inc
pop
lret
cltd
out
mov
cmp
cmp
lods
fs
mov
dec
xor
jmp
mov
and
dec
pop
popl
sarl
add
xlat
xor
pop
frstor
ljmp
filds
jmp
sub
inc
test
jecxz
scas
push
pusha
add
push
aaa
sbb
jne
outsl
fdivrs
pop
loop
lcall
inc
ret
aad
add
adc
mov
aas
add
inc
lret
push
sbb
or
fistpll
xchg
sub
sub
push
pop
adc
or
sub
add
repz
jp
cmpsl
call
das
jmp
inc
fimuls
cs
cmove
inc
aaa
jge
js
ficoml
repz
orl
cmp
mov
aad
mov
mov
imul
add
pop
sbb
stos
es
mov
repz
loop
ja
mov
rorb
shl
mov
lea
test
ss
movsb
mov
mov
out
fists
mov
push
xchg
dec
mov
pop
sub
push
or
loopne
mov
out
andb
pusha
xor
push
cmp
lods
dec
dec
stos
xor
and
scas
lret
dec
push
imulb
or
out
andb
icebp
pop
xor
jg
xlat
or
stos
xchg
pop
popf
mov
adcb
sub
data16
sub
test
or
imul
push
jb
ret
add
rolb
je
inc
pop
inc
call
cmp
jge
xchg
cmp
ds
or
xor
push
mov
rclb
shll
cmp
inc
icebp
sub
jae
roll
cmc
pop
cmp
negb
add
inc
or
repnz
sbb
push
adc
adc
add
or
insb
scas
add
mov
int
dec
popf
push
xor
es
int
push
jl
cmp
adc
or
add
pop
xlat
out
or
adc
add
int3
inc
adc
dec
push
out
mov
outsb
mov
push
pushf
and
mov
push
bsr
lock
scas
pop
in
push
scas
pop
enter
idivb
sub
daa
mov
sbb
inc
sbbl
push
stc
push
adc
sbb
in
add
dec
or
das
pop
xchg
dec
mov
das
xlat
xchg
fiaddl
push
mov
add
jl
jb
iret
stos
xchg
lods
aam
or
lret
add
push
pop
pop
sub
fcomps
cmp
dec
movsb
test
push
jne
stos
mov
xchg
inc
mov
pop
in
cltd
mov
in
or
and
dec
int
adc
dec
mull
sub
mov
adc
fwait
jle
add
jns
movl
lret
cmp
idivl
add
xchg
ds
dec
nop
pushf
jmp
popa
les
mov
fmulp
sbb
pop
cmp
push
cld
sub
fisttpll
inc
stos
jo
mov
mov
jae
mov
dec
fsubrs
dec
ret
jno
jmp
push
aaa
sbb
in
sbb
mov
or
pop
movsl
adc
sbb
dec
dec
push
stc
aam
jns
sbb
cmp
pop
and
fldl
add
cmc
clc
inc
dec
insb
mov
mov
fwait
lret
dec
push
mov
adc
add
mov
cmp
mov
insl
mov
mov
xor
loop
mov
lret
loopne
stos
jns
cmp
inc
inc
loope
sub
mov
das
icebp
pop
aas
xchg
pop
out
and
push
pop
inc
and
pushf
fcmovb
or
clc
je
orb
dec
addr16
push
xchg
fisubl
gs
pop
daa
xchg
push
xchg
mov
and
or
mov
and
xchg
cmp
pusha
dec
or
das
fadds
jmp
mov
not
inc
aas
adc
cmc
insb
add
data16
mov
xor
jo
jmp
into
push
push
mov
stos
repnz
inc
and
mov
push
int
pop
pop
aas
mov
rorb
scas
or
xorl
lods
dec
sub
arpl
fcompl
pusha
ss
cld
mov
mov
mov
testl
xchg
leavew
cmp
fadds
std
push
scas
push
or
add
cmpsl
or
jmp
add
adc
gs
bound
or
mov
push
push
cli
xor
lret
pop
out
jae
loope
sub
pop
sti
push
or
aas
push
dec
rcrl
aad
movl
stc
push
rcl
fdivr
pop
dec
pop
sub
add
icebp
push
add
dec
dec
cmp
lret
bound
call
inc
movb
sub
clc
cltd
sbb
inc
sbb
jnp
push
in
or
insb
clc
xor
dec
push
mov
loopne
dec
pop
lret
mov
xor
movsb
adc
loop
mov
xchg
sub
jecxz
pop
xor
pop
mov
mov
lock
dec
outsb
mov
inc
fcomps
adc
mov
test
out
mov
shlb
jns
fsubl
in
into
xchg
push
mov
ljmp
and
fimuls
sub
imul
aas
or
ret
imul
imul
in
mov
push
pusha
cmp
sub
lds
test
ljmp
mov
enter
and
add
xchg
jmp
dec
add
jmp
dec
push
jb
push
popf
aad
jnp
adc
jb
adc
jmp
or
adc
push
pop
std
inc
or
adc
xor
out
inc
sub
pop
xchg
fmuls
cmp
jb
or
or
dec
push
push
arpl
pusha
ljmp
inc
jg
aad
jmp
jo
add
sbb
ret
lods
sub
iret
jmp
faddp
test
jns
lods
or
mov
xor
inc
cmpsb
sbbl
or
mov
cld
pop
or
das
jecxz
inc
mulb
add
imul
pop
pop
cwtl
repnz
fwait
xlat
out
cmpsb
fsubrs
add
dec
jmp
jno
shr
mov
mov
das
sub
pop
ja
sbb
xchg
sti
sarb
sbbb
lea
jl
xor
lea
sub
orb
or
sub
add
fisubl
push
push
cmp
rolb
bound
xorl
in
pusha
cld
add
ret
or
inc
pop
cmp
cli
lock
hlt
nop
gs
jne
enter
lcall
scas
jo
mov
mov
pusha
push
mov
pushf
mov
cmp
popf
add
repz
cmp
pop
fisttpll
adc
add
in
stos
test
jl
jmp
lods
push
push
icebp
clc
test
xor
popa
cmp
subb
or
jmp
js
or
aam
xchg
xchg
ljmp
cs
adc
inc
cmc
out
push
jmp
xor
jge
xor
shll
or
loop
test
es
popf
inc
jb
and
adc
mov
aad
mov
sub
insl
mov
add
cmp
std
mov
mov
add
insl
orl
nop
adc
adc
mov
pop
adcb
shll
mov
popl
stos
pop
mov
aam
pop
ficoms
xchg
push
lret
mov
cwtl
mov
add
push
add
mov
mov
mov
aam
push
pop
popa
add
div
loopne
inc
add
and
aam
add
mov
push
call
div
xchg
pop
adc
jp
shl
inc
push
aas
and
xlat
cmp
pop
or
jnp
push
add
lock
inc
add
loopne
jmp
sub
or
push
sbb
lock
lret
iret
pop
sub
imul
jle
mov
pop
jle
pusha
push
or
jno
pushf
int
in
fadd
pop
xor
sti
dec
push
dec
xchg
dec
dec
jp
fsubl
pop
push
or
sub
orb
lock
sub
gs
jg
in
adc
pusha
pop
cwtl
lret
test
mov
sub
mov
popa
pop
cmp
outsl
mov
repnz
cmp
jmp
int
fdivs
inc
xor
imul
mov
inc
dec
add
cld
call
cmp
push
movsb
in
stc
and
mov
pop
mov
or
xchg
mov
rclb
and
mov
and
sub
cmp
sti
sub
jno
mov
dec
cmc
addr16
push
ja
fwait
in
mov
pop
sti
cmp
mov
jns
sub
xor
pop
lcall
jp
je
add
push
xlat
xchg
cmp
stc
and
scas
addl
or
ret
dec
push
jmp
repnz
add
movsb
pop
push
lods
inc
add
jle
inc
and
xor
cltd
jle
mov
nop
push
lods
xor
cmp
xchg
test
inc
lret
xchg
jmp
movsl
cmp
pop
mov
pop
ds
adc
je
dec
mov
lods
mov
inc
inc
ljmp
jne
lds
inc
scas
sub
pop
div
cmp
lcall
push
enter
daa
xlat
xchg
mov
jg
lcall
mov
jl
mov
pop
daa
shlb
icebp
arpl
lea
ja
add
les
xor
push
inc
dec
inc
jbe
aaa
sub
enter
pop
repnz
lds
cwtl
adc
pusha
push
popa
fildl
pop
cmc
pop
add
lods
jbe
add
mov
jbe
leave
lcall
push
stos
jl
pop
or
inc
xor
cmp
aam
ret
insb
rorb
ret
push
cmp
sub
sub
mov
jno
and
shrl
jp
out
movsl
subl
mov
pop
imulb
pop
fldt
jo
inc
nop
mov
jmp
in
or
sbb
loopne
jmp
sub
mov
jae
dec
push
sub
xchg
cltd
adc
sub
lahf
cmpb
inc
sub
sbb
xor
adc
daa
stc
rcr
add
mov
ret
or
int
jnp
mov
and
sbb
addl
cmp
and
push
add
dec
jmp
or
xor
insb
in
sbb
mov
aaa
add
mov
cld
cltd
add
mov
xor
jae
ds
inc
fwait
jbe
or
out
xchg
stos
cmp
jp
push
addr16
xchg
out
pop
stc
xchg
loope
aaa
pop
mov
sub
push
jnp
ss
xor
mov
fwait
dec
mov
aas
or
flds
mov
insl
shr
aam
push
mov
cmp
aam
out
sub
xchg
adc
sar
dec
mov
enter
xor
test
cwtl
fadds
popf
xor
push
fsub
pop
xor
lcall
cmpsl
in
clc
add
push
and
and
sub
push
pop
xor
mov
add
testl
adc
add
dec
jns
loopne
ret
inc
or
js
test
fcmove
jbe
pop
mov
mov
bound
add
pop
or
adc
pop
jg
sahf
in
out
loop
dec
jmp
mov
rcll
push
pusha
jmp
roll
mov
cli
jmp
scas
jns
jp
add
roll
add
daa
cmp
pop
sub
and
add
cmp
aas
adc
jge
or
jo
ret
and
or
ja
testl
dec
inc
jne
add
xor
jmp
cmpsl
inc
sbb
movsb
cmp
pop
xor
loop
xlat
fs
push
pop
int
push
pop
sub
test
gs
sub
sti
pop
ss
push
jo
into
pop
sub
imul
push
test
sbbb
mov
or
je
jle
jl
stc
aad
lods
outsb
call
jmp
lret
or
push
shrb
push
jp
gs
into
mov
into
mov
daa
xor
inc
xor
fnstsw
mov
xchg
cmp
xor
or
jmp
add
int
popf
dec
xor
stos
popf
loop
loopne
push
sti
rcll
orb
jbe
pop
fs
pop
cld
fbstp
pop
inc
ret
mov
mov
mov
mov
mov
inc
lcall
pop
shrw
jno
push
push
ret
pushf
imull
xorb
add
scas
clc
pushf
orb
jle
cmpsb
ds
mov
loope
movsb
shlb
cmpsb
sahf
push
fcoms
andb
aaa
in
mov
mov
int
mov
or
mov
xchg
mov
jne
addr16
enter
nop
inc
mov
insl
sub
and
cmp
push
push
and
out
jne
insb
ficoms
mov
sbb
or
in
popa
push
loop
sub
test
push
mov
stos
std
sti
dec
call
add
push
jmp
adc
cmpsb
sbb
mov
ficompl
fdivl
sarb
shll
cmp
testb
icebp
jle
jg
jo
or
sub
or
sub
in
inc
das
jl
pop
jne
in
jmp
and
push
lcall
xor
and
fcom
call
jne
nop
xor
pop
or
repz
sahf
xor
add
pop
ss
jp
cwtl
lret
dec
data16
mov
push
addl
mov
sbbl
mov
insl
ss
sbb
adc
push
lahf
rol
push
rorl
jg
fdivrl
inc
outsb
add
jmp
pop
neg
jbe
mov
jns
lods
xor
shl
push
cmp
hlt
aad
or
int
add
xor
je
ljmp
sbb
sub
sti
lret
test
xor
shll
push
clc
mov
adc
out
xor
push
nop
lods
adc
nop
jg
cmp
sub
mov
push
and
jno
pop
shl
daa
in
test
mov
pop
insb
xchg
dec
lret
outsl
int
stc
fwait
jle
data16
loop
test
sti
std
mov
stc
out
repnz
js
sub
cs
out
mov
ljmp
jbe
jae
sub
mov
shll
leave
dec
sbb
cmp
cmp
push
jge
add
repz
xchg
aaa
popf
rorb
push
std
inc
jecxz
sbb
cmp
in
pop
mov
xchg
in
in
adc
dec
add
call
fldl2t
xchg
scas
stos
and
lret
add
outsb
sub
pushf
mov
add
jmp
fmull
add
adc
subb
ja
pop
popa
adc
xor
out
push
inc
dec
jg
into
or
fs
mov
xchg
sbb
movsb
fwait
push
imul
cmc
add
in
sub
push
xorb
sbb
lds
add
inc
jge
std
cmp
xchg
inc
xor
aad
dec
sbb
dec
fs
out
adc
inc
cli
inc
shlb
pop
cmc
inc
pop
cmp
fstpl
aad
pop
decl
add
rorl
adc
sbb
jne
sub
mov
data16
cmpsb
mov
jmp
out
inc
fsubrs
adc
lods
lahf
add
test
leave
push
test
cmp
push
xchg
xchg
testl
iret
mov
cs
popf
popa
mov
rorl
push
push
adc
mov
mov
sbb
and
or
and
scas
hlt
jbe
or
and
mov
mov
and
sbb
mov
shll
ret
add
mov
and
push
sub
insb
xchg
cli
neg
xlat
out
add
jmp
pop
das
rol
sub
jbe
add
call
adc
pop
sbb
cmpsb
or
dec
or
sti
sub
ret
xor
pop
shl
pop
pop
xor
xchg
into
andb
insl
add
cli
stos
add
cmp
loop
inc
jb
negb
xor
sub
pop
sub
test
jp
nop
dec
daa
mov
divl
xchg
bound
cmpsl
xlat
nop
cmp
int3
test
mov
jge
xor
out
and
jl
add
pop
push
cwtl
outsb
fsubr
jnp
mov
loope
imul
xchg
or
push
push
xchg
sub
das
cmp
sbb
ffree
in
xchg
sub
and
jns
adc
push
dec
pop
lds
add
adc
sub
dec
push
loop
add
test
or
out
add
ljmp
test
and
adc
fcmovnb
jmp
in
adc
js
or
punpckldq
mov
jge
or
mov
shlb
sub
jb
push
push
push
mov
or
loope
sbb
xor
aad
or
mov
add
fstpl
vrsqrtss
dec
sbb
ret
add
jmp
and
data16
in
movsb
cmpsl
roll
pusha
pop
push
or
pop
aas
adc
or
sahf
enter
adc
or
add
xchg
sub
inc
mov
mov
negl
pop
fcomps
dec
push
stos
and
and
ljmp
xchg
sub
mov
fnstenv
jmp
pop
or
add
sbb
add
push
inc
rorl
inc
jns
add
mov
and
ret
loope,pn
aas
subl
adc
cmpsl
inc
mov
lock
pop
mov
outsb
shl
test
add
leave
add
int3
fwait
pop
jo
xchg
aam
pop
lcall
xor
es
or
fnstcw
mov
add
push
notb
mov
xor
mov
mov
test
imul
xchg
sub
pop
adc
xor
mov
and
dec
mov
push
push
adc
and
mov
jmp
and
xchg
or
pusha
aas
in
xor
sahf
add
jmp
stc
cmpsl
ja
call
add
push
clc
and
sahf
outsb
in
mov
lds
stc
repnz
jl
or
daa
cld
into
push
idivb
add
add
repz
cli
xchg
loop
divb
repz
adc
into
sub
mov
xchg
test
mov
movb
dec
dec
jge
mov
jnp
xorb
shll
loopne
outsb
jp
sbb
mov
fdivrl
jbe
and
xlat
call
sub
dec
hlt
jo
or
or
or
mov
rep
outsl
inc
jl
mov
sub
mov
iret
pop
lret
sub
add
xor
mov
push
imul
cmc
mov
fcomi
out
jmp
jmp
movsb
sub
rcll
rorb
xor
rclb
sub
add
dec
mov
push
add
jno
cmp
and
loopne
add
lcall
mov
xor
shrb
push
pop
push
push
mov
mov
add
ss
and
push
icebp
ret
cs
cmpsb
mov
js
jmp
movsl
fisttps
mov
dec
sti
inc
lods
divb
jb
fs
adc
test
daa
pushf
pop
or
test
roll
jns
push
pusha
pop
jmp
aam
ret
insb
outsb
dec
or
jmp
aas
fsubrl
bnd
test
lock
inc
push
jge
jg
imul
dec
sbb
ret
popl
in
fnsave
xorl
cmpsl
ret
in
sbbb
pop
fstpl
pop
push
jl
mov
pop
pop
test
sbb
imul
and
push
or
add
jmp
pusha
sub
mov
cld
or
insb
rolb
mov
xor
addr16
mov
inc
pop
dec
scas
mov
pop
mov
mov
dec
mov
add
pop
xchg
and
nop
lcall
in
fbstp
dec
mov
mov
sbb
mov
and
jmp
daa
jns
arpl
js
dec
sbb
mov
mov
pop
add
out
lock
aaa
pop
or
mov
add
std
jmp
push
call
out
mov
leave
out
mov
aaa
sub
mov
pop
jl
adc
mov
mov
sub
inc
and
in
stos
inc
or
push
rcrb
shll
or
jmp
adc
and
mov
pop
xchg
pop
test
push
dec
inc
data16
movsb
arpl
adc
xchg
push
dec
popa
dec
push
dec
adc
sub
icebp
and
ficoml
scas
mov
push
jmp
dec
sti
fistps
lcall
out
jnp
mov
cmpsb
xor
cmc
sub
adc
gs
test
xor
sub
jge
loop
pop
pop
mov
sub
mov
and
bound
stos
adc
jg
adc
xchg
mov
aas
jecxz
test
mov
mov
xchg
pop
scas
movsb
mov
and
fs
or
hlt
push
mov
insb
add
mov
into
imul
dec
push
add
push
mov
enter
push
xchg
and
inc
in
mov
std
out
mov
adc
and
jno
cmpsl
fnsave
and
or
mov
mov
enter
fs
add
jle
inc
cmp
xor
or
in
push
pop
cmpsl
leave
mov
call
inc
pusha
dec
prefetcht1
or
in
movsb
rclb
clc
xchg
dec
lret
mov
push
mov
push
data16
mov
push
sarb
xchg
jmp
or
cli
mov
fsubs
xchg
icebp
cmp
nop
sub
jle
divb
insb
jne
leave
jg
shlb
add
pusha
jae
push
dec
cmp
xchg
adcb
add
testl
repz
pop
pop
xchg
and
mov
out
addb
push
fdivrl
sbb
push
shr
or
jns
xchg
std
loop
aad
and
aam
mov
jne
es
push
mov
pop
add
push
xchg
inc
clc
inc
xchg
jl
pop
jmp
adc
sbb
push
int3
xor
dec
mov
loope
pop
xor
jg
cmp
sub
jno
inc
dec
cmpb
push
mov
adc
push
mov
xor
repnz
cmp
stos
stos
into
int3
dec
test
mov
sbb
jle
push
jmp
movl
arpl
ret
jge
cmp
gs
jno
push
xor
adc
or
decb
ret
or
lcall
outsb
into
cmp
repnz
or
mov
addl
pop
add
rolb
lods
jecxz
mov
or
shl
je
pop
adc
mov
mov
cmc
mov
mov
xchg
add
inc
fisubl
sub
xor
daa
jne
rclb
mov
cmp
cmp
add
out
xor
rcll
sub
mov
pop
push
mov
jne
aad
lcall
dec
in
pop
pusha
outsb
sub
jp
push
adc
jnp
push
and
push
scas
out
pusha
mov
sbb
pop
dec
pushf
pcmpgtb
sub
cwtl
pop
mulb
mov
sete
ljmp
and
int
mov
inc
pop
in
sbb
sbb
inc
ja
outsl
in
pushf
in
xlat
stos
clc
or
mov
mulb
pop
xchg
xor
shrb
xchg
jmp
add
adc
mov
dec
lock
mov
push
mov
std
pop
dec
pop
or
sbb
jnp
inc
sbb
mov
pop
faddl
pop
test
js
lds
std
out
push
cltd
subl
adc
gs
dec
inc
jmp
ja
shl
fsubl
out
das
pop
add
test
imul
add
sub
int
and
jne
mov
dec
xor
pop
hlt
or
mov
adc
add
movsb
lret
cmc
fcompl
rcrb
fmul
xchg
pop
mov
std
fcomip
add
inc
xor
xchg
leave
mov
pop
xchg
pop
pop
inc
xchg
add
rcll
sahf
push
add
gs
mov
mov
mov
sbb
mov
test
mov
pop
xchg
in
mov
fwait
imul
mov
or
inc
sbb
sub
xor
jo
cs
jl
mov
iret
sub
testb
ljmp
jns
out
jge
sub
lds
das
in
adc
xchg
mov
cmc
rcrl
insl
insb
jmp
push
mov
std
shll
cli
push
mov
aam
loop
stc
sub
scas
mov
jg
sub
je
loopne
inc
jecxz
int
sub
xor
aad
loopne
add
loope
adc
inc
and
stos
jecxz
jmp
into
in
mov
add
cmc
pop
inc
or
fisubrs
push
pop
inc
sysexit
mov
lea
stc
dec
arpl
sbb
xchg
jmp
pop
mov
loope
in
sbbl
rolb
test
cmp
outsl
add
je
and
mov
pop
add
imul
rcll
pop
cmovo
and
and
pop
movsb
shrb
fstpl
adc
jl
or
mov
daa
push
repz
push
xor
out
ja
push
and
push
dec
out
dec
in
cltd
jb
jl
dec
inc
add
xchg
jmp
sbb
jle
cmpl
out
pop
addb
push
addb
jge
cmp
int3
mov
xchg
ret
js
int
lds
jmp
or
adc
pop
push
lods
cli
cltd
xor
jl
pop
mov
xor
loop
mov
sub
or
or
pop
scas
cmp
dec
stos
mov
dec
ficoms
dec
repnz
aam
jmp
adc
ss
mov
mov
inc
mov
fldz
imul
ret
hlt
add
mov
mov
jmp
push
outsl
dec
dec
test
testl
lds
add
pushf
pop
jmp
mov
adc
mov
adc
clc
add
mov
pop
push
pusha
pushf
ret
adc
or
gs
pop
jno
push
pop
jg
loopne
mov
jo
xchg
call
sar
mov
add
xorl
push
imul
pop
sub
pop
hlt
sbb
dec
add
sub
jae
inc
clc
or
sbb
js
daa
inc
and
cs
test
sbb
push
outsb
cwtl
mov
out
sbb
bound
test
push
jns
jo
lea
rcr
xor
into
push
enter
mov
add
xchg
lret
add
out
and
or
js
sub
mov
fimull
pop
pushf
xor
xchg
mov
mov
outsb
shlb
mov
or
xor
andl
inc
push
jp
notl
cmc
cmpsb
test
movsl
notl
or
dec
adc
push
adc
loop
mov
or
add
jno
push
clc
das
sub
call
add
xor
popf
sbb
sub
arpl
inc
in
std
add
lds
sub
dec
sti
out
inc
xor
fildl
incb
sarl
in
mov
pop
mov
sbb
mov
or
adcb
pop
imul
pop
sbb
xchg
or
pop
fcoml
clc
jecxz
test
jo
xchg
xor
push
subb
aas
shrl
jbe
xchg
pop
pop
mov
add
mov
cmpsl
mov
imul
jne
fnstsw
cwtl
cli
in
inc
in
lret
mov
add
add
inc
jmp
adc
mov
arpl
jne
pushf
or
push
out
adc
xlat
jns
pop
jle
push
inc
sub
add
daa
or
mov
cld
push
pop
push
push
or
push
arpl
mov
jo
mulb
ds
or
pop
lods
out
clc
mov
test
pusha
addr16
xor
dec
daa
pop
xor
shll
add
mov
and
stc
sub
repnz
or
in
add
pop
das
mov
push
xchg
pop
push
cld
push
mov
ds
dec
sahf
repz
xchg
loopne
negl
sbb
mov
jle
mov
jmp
dec
adc
cmc
push
jg
into
shr
ja
gs
adc
stos
adc
out
add
cltd
cmp
xor
or
push
test
movsb
imul
pop
push
adc
sub
xchg
js
adc
lahf
rolb
je
aad
pop
sub
jmp
insl
pop
mov
pushf
rcrb
lods
flds
add
lds
sbb
push
push
sahf
jo
test
or
cmpsb
adc
sahf
sub
add
gs
fidivrl
call
pop
xor
daa
lret
lahf
jmp
xlat
xor
dec
fistl
cltd
push
leave
shrb
pop
pop
cs
pop
rcrb
push
ds
dec
cmp
or
lock
sarb
xchg
jae
fs
pop
cmp
neg
push
mov
jbe
sbb
test
push
dec
pop
add
shrb
outsl
mov
daa
push
stos
jle
lgs
pop
andb
add
orb
jmp
mov
lret
ljmp
dec
in
pop
xchg
aad
dec
cli
clc
cmpsb
popa
pop
mov
imul
push
jmp
inc
xchg
sbb
pusha
mov
cmp
add
repnz
add
mov
sub
adc
pop
mov
outsb
stc
ljmp
ret
bound
sbbl
jl
scas
aad
scas
sar
pop
add
daa
out
aam
adc
inc
jno
scas
xchg
push
or
mov
data16
loopne
js
push
jp
mov
jge
daa
pusha
data16
xchg
into
mov
cmp
fistps
rclb
adc
mov
sub
bound
or
lea
pop
add
and
pop
jbe
push
jmp
push
push
scas
popa
pop
or
add
dec
cmpsl
stc
add
lret
lods
mov
inc
xlat
xlat
adc
mov
dec
fldl
cmp
fildl
mov
xchg
not
faddl
push
mov
adc
aas
sbb
or
enter
or
push
loop
pop
testl
push
add
ret
pop
popf
push
or
dec
bound
add
inc
fstpt
dec
jo
jmp
sub
ds
repnz
std
or
pop
icebp
adc
or
inc
outsb
pop
cmp
xor
mov
outsb
and
sbb
add
jnp
sbb
in
or
or
pop
dec
aaa
mov
and
xor
pop
cld
pop
mov
fs
jmp
jmp
xor
std
add
mov
fists
push
and
fcomip
cmp
outsb
add
jnp
push
or
out
push
lock
jmp
inc
fisttps
fisttpll
dec
lcall
add
jle
and
fldl
das
sub
fmuls
inc
sub
mov
pop
inc
mov
cmp
iret
pop
inc
ja
test
push
mov
sbb
jnp
push
xchg
sbb
inc
addr16
scas
inc
gs
xchg
repnz
or
jecxz
js
jg
push
pop
mov
dec
mov
adc
pop
jne
dec
and
je
mov
sub
mov
sub
dec
cli
sub
test
in
hlt
sub
dec
shlb
cld
test
sarl
push
mov
xchg
lret
icebp
dec
sbb
or
mov
push
jmp
cmp
std
or
xor
or
jmp
mov
mov
mov
nop
imul
lock
sbb
jne
mov
push
mov
push
jl
shr
lds
mov
mov
call
rorl
jg
jbe
popf
pop
adc
lret
mov
jmp
and
sti
cli
call
push
insb
popf
shlb
and
mov
or
lds
aad
stos
sub
out
add
adc
cmp
xchg
hlt
test
push
mov
pop
push
mov
inc
and
test
mov
sbb
in
push
rolb
push
fldcw
jmp
icebp
xor
or
inc
adcl
jg
xchg
not
xor
fisttpll
repz
adc
jmp
fstpl
insl
lds
mov
mov
mov
scas
add
push
push
hlt
mov
jle
sub
ret
popf
rcr
and
divl
sub
or
cmp
mov
cmpsb
shl
push
add
pop
pushl
lods
push
jmp
cmpb
test
icebp
sahf
jp
out
fmuls
test
dec
aam
pop
fildll
push
sub
les
incb
adc
fdivrs
push
xchg
dec
add
mov
jl
pop
lea
add
fiaddl
mov
and
adc
lds
pop
jmp
mov
inc
divb
add
bound
mov
or
jmp
cli
or
mov
fsubs
mov
addr16
std
cmp
and
mov
add
cmc
arpl
adc
and
cltd
and
aas
push
mov
xor
pop
sub
cmpsb
popf
pusha
nop
aad
inc
cmp
movsl
xor
lods
jo
cmp
add
fbstp
sbb
jmp
and
push
ret
jmp
xchg
and
rclb
jle
jbe
rcl
dec
out
addr16
adc
dec
xchg
sub
push
pop
inc
mov
push
mov
jmp
adc
xchg
call
pop
sarl
xorb
loopne
or
and
data16
push
cld
cld
lret
in
mov
aam
mov
xchg
mov
mov
pop
shlb
jmp
lods
std
adc
das
daa
lret
mov
sarb
ljmp
rcll
add
sub
mov
sbb
push
adc
es
clc
mov
sub
jmp
ret
xchg
addr16
je
inc
cmp
jb
js
sub
mov
outsl
push
and
dec
scas
xchg
movsb
fistpl
mov
adc
dec
xor
cmc
popa
add
push
fistl
shr
xor
mov
orb
shll
cs
xor
mov
leave
out
test
scas
cltd
imul
jl
inc
add
pop
movsb
pusha
jmp
ret
add
in
mov
int
mov
sub
fsubr
out
test
adc
jbe
push
mov
pop
sub
pop
xor
daa
hlt
jno
mov
mov
inc
rolb
gs
add
cltd
dec
imul
pop
cs
mov
mov
push
add
mov
jb
adc
pop
push
lods
stos
rol
ds
js
pop
imull
mov
fsubr
imul
ja
mov
sbb
pop
xchg
adc
mov
pop
jns
lods
mov
xchg
shrb
or
arpl
push
sub
cmpb
insl
add
ficoml
pop
add
jmp
jb
adc
sub
mov
out
push
mov
pop
xchg
add
into
insl
data16
inc
push
scas
mov
lcall
sub
clc
jnp
daa
jp
jl
shr
cmp
bound
jmp
adc
bound
lock
xor
push
xchg
psubusb
lahf
out
rclb
cmpsb
out
pop
pop
cli
jbe
push
cs
pop
stos
loope
jmp
or
xchg
cld
jl
sub
mul
push
xchg
adcl
mov
lcall
xorb
xchg
sbbl
daa
inc
sub
add
pop
dec
push
mov
stos
dec
push
xor
mov
jg
cs
mov
pop
mov
adc
sub
popl
sub
and
scas
mov
push
lds
push
inc
or
inc
arpl
ss
adc
roll
sub
push
push
push
mov
cmp
pop
and
addl
add
push
pop
pop
pop
inc
xor
lods
orl
shll
inc
pusha
out
pop
push
push
rorl
stos
xchg
enter
push
sub
mov
cmp
jmp
jge
dec
mov
add
mov
dec
or
add
lahf
movsb
mov
aam
inc
xor
jg
testb
sub
fimull
push
out
les
or
add
push
mov
push
dec
pop
jmp
pop
xchg
test
leave
xchg
adc
mov
jno
nop
jg
iret
mov
push
jmp
cltd
and
mov
daa
aad
or
jmp
mov
sub
adc
pop
pop
push
mov
addb
ret
jne
mov
adc
inc
pop
mov
xlat
pop
loopne
adc
stc
push
in
fnstenv
rcl
ljmp
and
pop
mov
fdivrl
mov
pushf
pop
cmp
cwtl
sub
lcall
mov
adc
in
faddp
dec
mov
mov
dec
or
mov
and
pop
int
cmpsl
mov
or
jo
cwtl
push
and
cmc
cmp
xor
dec
icebp
mov
fwait
pop
mov
jmp
mov
addl
mov
jmp
add
mov
adc
xlat
push
jb
jl
and
ljmp
pop
fstps
std
or
std
xchg
add
or
add
xor
dec
sub
mov
cmc
test
orl
cmc
movsb
or
enter
in
jge
iret
inc
mov
ret
insl
push
sbb
jo
lods
mov
lods
pop
test
jge
and
mov
cwtl
jle
repz
std
jmp
mov
or
pusha
and
testb
ret
pop
sar
sti
pop
aaa
mov
popa
loopne
jge
ds
cmp
ja
loope
out
loopne
sub
jmp
in
addl
dec
and
ret
int
in
push
or
adc
mov
sbb
xor
push
nop
hlt
mov
adc
xor
lock
push
call
test
inc
xor
out
mov
sbb
inc
dec
mov
inc
dec
xchg
stos
inc
add
lret
adc
shrl
sub
xor
cmp
js
jae
dec
inc
sbb
and
adc
jmp
movsb
lock
push
ja
dec
cmp
aad
xor
shll
into
pusha
xchg
jle
or
push
and
lds
dec
loopne
mov
ret
inc
pop
push
cmp
dec
mov
ss
and
adc
jnp
popl
cmp
orb
sub
stos
mov
jmp
rcr
out
enter
and
out
popf
push
and
out
pop
cmp
clc
aam
mov
cmp
sbb
inc
jge
pop
push
ret
or
out
cmp
jae
mov
loop
xor
jmp
inc
or
or
cmp
in
push
mov
mov
pusha
das
pop
mov
ficompl
mov
add
add
mov
jecxz
in
inc
jg
addb
ret
js
enter
mov
xchg
add
aad
inc
and
xchg
jle
xor
andb
pop
ja
push
inc
or
movsb
icebp
setl
sbb
enter
push
pop
xlat
or
cmpsl
and
adc
mov
mov
mov
dec
pop
mov
fsub
adc
les
sub
or
cli
aad
addb
pop
dec
jae
fidivrl
add
sti
adc
inc
shl
xchg
cmp
cmp
add
dec
and
push
imul
xchg
jnp
xchg
popa
mul
adc
pop
xchg
daa
fstpt
stos
adc
sub
pusha
push
mov
dec
jmp
imul
dec
jns
les
xchg
cmc
lret
daa
cmc
and
sub
in
das
pop
stc
jmp
les
stos
pushf
bound
inc
cmp
xchg
fcoml
pop
push
jl
inc
das
and
aad
push
sub
or
dec
movsb
clc
sbb
adc
and
les
sub
insl
sub
and
or
adc
movb
jmp
jnp
adc
mov
jbe
sub
add
shrb
push
push
mov
jns
cmp
inc
repnz
xchg
xor
xchg
adc
mov
js
scas
addl
clc
pop
inc
adc
inc
xchg
push
nop
out
ja
js
sbb
mov
imul
loopne
or
sbb
push
scas
xchg
loope
adc
test
dec
sti
mov
add
mov
mov
jmp
xchg
and
dec
sarb
add
aas
loope
jae
adc
pop
arpl
loop
adc
outsl
dec
push
mov
std
test
adc
nop
orb
cmc
dec
or
aas
mov
dec
sbb
push
or
idivb
cmpl
pop
push
stc
ljmp
ficompl
push
xor
je
ss
and
or
xor
fs
and
pop
push
dec
mov
sub
ljmp
push
lcall
sub
inc
icebp
add
lods
cmpxchg
sbb
mov
sub
adc
adc
out
xor
imul
outsl
sbb
push
jns
adc
xchg
cmp
add
ret
add
sbb
mov
out
ds
pop
sar
mov
add
mov
adc
ret
dec
inc
sbb
push
addr16
mov
sbb
pop
push
jp
add
pushw
ret
pop
sahf
sbb
and
mov
scas
mov
dec
or
jmp
aad
dec
in
add
notl
jecxz
nop
jne
or
push
xor
and
pop
xchg
aad
addb
push
faddl
xchg
out
cmpsl
mov
mov
or
adc
xchg
and
push
xchg
aad
or
push
xlat
xchg
orb
or
sbb
cmp
xchg
test
push
mov
pusha
add
ja
jbe
dec
pop
rcrl
pop
pop
fdivrs
inc
mov
stos
xor
dec
lds
push
and
and
enter
mov
rorb
xor
xorb
repnz
push
cmp
pop
push
leave
or
data16
adc
and
leave
jae
mov
mov
push
aam
aaa
loope
sub
push
shl
push
mov
or
cmc
mov
les
ljmp
fistpl
xor
xor
punpckhwd
call
dec
and
arpl
jae
adc
sti
cmp
shl
dec
jne
pcmpgtw
mov
daa
in
es
adc
push
jb
cmp
push
fucom
mov
add
pop
sub
popa
ret
movb
ljmp
inc
mov
mov
and
sbb
jb
ret
jmp
dec
in
cmp
lods
pusha
mov
out
pop
and
inc
stos
clc
cld
mov
dec
mov
sbb
push
out
sub
and
dec
add
push
or
mov
stc
lret
xchg
xchg
add
sahf
inc
inc
push
push
add
lock
or
das
and
pop
popl
mov
and
cmp
jmp
repnz
subl
adc
jl
add
arpl
xorb
mov
dec
or
jmp
arpl
jo
sub
ficomps
ficoms
push
test
cld
cmc
add
xlat
push
or
sub
sub
pop
in
mov
xor
iret
mov
shrb
outsb
sub
mov
js
les
in
addb
mov
and
and
xor
push
or
add
add
in
add
pop
aad
add
roll
sbb
pop
inc
pop
sub
jno
push
or
notl
orb
pop
add
je
clc
push
pop
addr16
push
stos
xor
pop
push
add
push
jb
or
dec
out
decb
jnp
xor
xor
adc
xor
mov
xchg
out
flds
jmp
and
repnz
lods
sub
add
adc
jp
lods
lock
jmp
mov
add
out
jecxz
mov
shrl
add
sub
movsb
dec
mov
pop
cmpsb
imul
push
mov
jmp
mov
andl
adc
xchg
inc
lds
sub
push
add
mov
inc
jno
add
mov
inc
call
jbe
and
mov
pop
iret
jb
jnp
rcrb
lahf
popa
and
jmp
outsb
sbb
sub
divb
loop
ljmp
ret
jecxz
and
cmpb
ja
cmpsb
into
dec
xor
xor
pop
xchg
add
cli
or
pop
pop
pop
xchg
sub
xor
jge
clc
xlat
adc
rorb
add
aaa
sahf
xor
in
repnz
or
inc
push
fisttps
jno
loopne
js
jae
cli
shlb
mov
daa
icebp
ss
add
push
sub
add
sub
pop
mov
sbb
int3
add
add
das
add
pop
in
lds
sbb
mov
mov
xchg
loopne
and
mov
shlb
push
scas
fcomip
pushf
push
cmp
scas
xor
repnz
inc
lret
or
pop
ficompl
addr16
out
clc
xchg
sbb
pop
adcl
pusha
repz
push
xor
popa
push
neg
lahf
sub
jp
cld
sti
cmp
aad
daa
xchg
std
sub
push
inc
dec
xor
clc
pop
movsb
ret
push
add
or
xchg
jmp
sar
cmp
in
mov
aam
xor
imul
pop
dec
out
push
sub
xlat
cmp
mov
rsm
and
loop
xchg
cmp
shl
fsubrl
in
ret
lds
enter
inc
js
out
xchg
xchg
and
in
je
push
sahf
scas
mov
xorl
mov
cmpsb
xor
push
xchg
dec
ss
out
imulb
lock
inc
jmp
mov
daa
jecxz
xlat
les
inc
push
sub
xchg
add
lods
stc
jmp
aad
sbb
pusha
pop
xchg
iret
subb
jnp
pop
cmp
inc
push
pop
mov
ret
mov
or
sbb
shll
leave
push
jg
push
pop
std
out
pop
fsubrs
scas
inc
jno
add
call
dec
pop
lods
cs
adc
inc
inc
jno
negl
es
jae
ret
push
pop
cld
clc
jmp
int
insb
scas
pop
shl
or
int
xlat
xor
imul
or
daa
inc
jae
lds
add
pop
hlt
ss
fimuls
cmp
out
and
inc
push
mov
sbb
adc
sbb
or
push
inc
mov
lcall
into
jge
pop
push
dec
in
pop
dec
divl
andb
cmp
ds
mov
ret
mov
leave
and
cmpsl
push
jmp
jmp
mov
inc
xchg
icebp
xchg
testl
mov
pop
fs
push
mov
xchg
popf
cmp
cmpsl
orb
jmp
jge
repz
xchg
jbe
in
mov
loopne
xchg
in
push
inc
jp
imull
mov
call
shr
inc
jp
jp
or
jmp
lahf
test
sub
adc
mov
push
int
and
jecxz
adc
and
scas
lret
cwtl
mov
arpl
add
rcrl
jge
dec
push
inc
aas
int
in
cmp
shrb
mov
dec
xor
cli
mov
adc
pop
icebp
inc
jle
inc
jmp
dec
xor
xor
push
dec
cmp
lret
cltd
inc
mov
mov
pushf
sub
stc
sub
sub
leave
int
mov
xchg
dec
sub
cmp
push
mov
xor
add
add
mov
mov
mov
mov
cmp
mov
aas
or
xor
jge
push
clc
inc
dec
loop
and
jns
ljmp
push
scas
inc
and
and
data16
imull
or
outsb
adc
aam
mov
negb
sbb
popa
add
cmp
fdivrl
xchg
push
scas
cmp
in
dec
mov
mov
fisubs
push
push
dec
pop
or
push
add
rcrb
ds
dec
mov
pop
pushf
insl
shll
rclb
insb
mov
sbb
das
pop
mov
mov
out
int3
lcall
mov
dec
loopne
lods
or
jmp
divl
lcall
cld
lds
mov
fcmovnu
sbb
dec
sub
dec
mov
cmp
xor
xchg
into
repnz
cld
addr16
mov
pavgb
push
mov
mov
jp
orb
ret
sbb
xchg
dec
or
inc
push
int3
inc
push
or
mov
mov
enter
adc
push
xchg
or
scas
push
cmp
pop
clc
cmp
shll
pusha
push
cwtl
pop
mov
add
xchg
and
sar
add
and
push
add
adc
ret
push
cltd
rorl
test
inc
or
sub
call
push
dec
les
mov
mov
imul
xchg
add
mov
mov
adc
sbb
int
pop
pop
or
andb
int3
jns
hlt
dec
dec
mov
xor
adc
add
push
je
pop
rorb
scas
pop
cmp
fiadds
cld
sub
xchg
mov
push
adc
xchg
adcb
insl
inc
add
cmp
lea
push
neg
mov
push
add
daa
add
shl
xor
mov
mov
popa
aam
insb
and
pop
sub
nop
adc
cmp
adc
jo
jmp
sub
mov
add
movsb
mov
cltd
mov
ljmp
xor
pop
sbb
in
push
lods
pop
jge
shl
add
mov
push
mov
adc
stos
xor
and
adc
notl
xchg
popa
or
pop
pop
int3
sbb
mov
push
cmp
ret
push
sub
push
xchg
xor
les
cmp
jb
dec
jle
gs
jge
aad
aad
jmp
pop
xchg
sbb
xor
mov
xchg
sub
push
imul
push
inc
xchg
add
xor
andl
adcb
bound
mov
xchg
cld
xchg
ljmp
cltd
mov
dec
std
pop
lcall
inc
stos
insl
xchg
or
sub
enter
jle
add
cmpsl
add
shl
jne
out
jmp
or
cmp
mov
cmp
add
push
mov
stos
adc
negl
out
mov
jl
gs
lods
scas
fiadds
cmp
jmp
push
pop
repz
add
jnp
push
aad
cwtl
les
cli
lock
testb
shl
sub
scas
mov
push
mov
push
jns
gs
add
pop
jl
scas
cltd
and
aas
cmpsb
inc
loope
mov
lods
xchg
push
or
or
mov
add
mov
jns
add
add
dec
jno
dec
bound
push
mov
test
inc
data16
jecxz
and
add
ljmp
push
in
das
inc
inc
push
adc
cmp
inc
adc
pop
sbb
inc
das
sbb
shrb
jne
je
leave
xchg
imul
xchg
ljmp
jmp
jle
shlb
push
or
scas
fisttpll
fs
sub
outsl
sbb
jae
dec
mov
add
scas
cmc
pop
jmp
add
mov
hlt
push
sub
mov
movsl
xchg
xchg
cmpsl
push
push
dec
out
cwtl
fucomip
xor
jmp
clc
aaa
xchg
jns
mov
sbb
lock
add
cmpsb
fstl
iret
das
nop
xchg
lea
mov
cs
pop
pop
push
jmp
mov
dec
sub
incb
and
repz
xlat
jo
or
fisttpll
xchg
fsubl
add
jl
sbb
or
filds
loopne
xor
add
rcrb
testl
push
add
out
cmp
and
or
add
add
aas
xlat
cmp
mov
jle
mov
jnp
pop
add
loop
ds
xlat
shl
out
jmp
push
clc
das
jno
ljmp
push
dec
jp
dec
add
jmp
mov
mov
jmp
subl
jle
pop
addr16
add
jge
loope
inc
xor
mov
test
mov
lods
mov
adc
xlat
lods
sub
adc
mov
pop
sbb
ja
repnz
pop
pop
dec
lock
xchg
sarb
loope
lods
outsb
mov
mov
jle
and
xchg
insb
dec
dec
insb
mov
or
xchg
fstl
xchg
imul
add
out
lret
add
int3
add
jnp
push
in
sub
lock
dec
push
testb
mov
add
shlb
sarb
dec
jecxz
add
out
inc
jnp
fwait
pop
test
out
or
or
cmp
pop
clc
imul
cmpsl
or
mov
xchg
lods
fiaddl
sub
pop
mov
mov
xor
leave
movsb
lock
jecxz
scas
add
leave
jae
addr16
lods
jle
add
jbe
lock
out
pop
jecxz
inc
or
es
fldcw
pop
jne
clc
or
xor
push
jg
add
pop
xchg
scas
and
out
pop
pop
pop
test
push
repz
and
mov
lods
clc
sub
pop
cwtl
push
add
cmp
shr
jmp
cmp
mov
sub
loopne
es
push
imul
shr
adcb
pusha
jl
inc
out
ds
push
loop
divl
in
sti
fisttpl
sub
jmp
lods
adc
and
dec
dec
mov
pop
imul
mov
mov
xchg
sbb
or
mov
sub
sub
das
push
pop
dec
xchg
adc
jl
fstpt
scas
sub
adc
lock
ja
outsb
imul
stos
push
xchg
push
popf
and
xchg
or
mov
mov
lods
jne
out
lret
loop
xchg
jp
pop
jae
mov
insl
out
adc
mov
rcl
cmpsb
xor
jmp
idivb
pop
xchg
dec
fdivrp
clc
daa
xchg
jl
popf
push
mov
mov
sub
and
jmp
fldt
int3
imul
cmc
pop
ret
insl
cmp
add
dec
add
jo
mov
add
jge
mov
sub
je
add
mov
jmp
js
sub
das
or
xor
pop
sub
jmp
sar
daa
push
xchg
jo
popf
pop
loope
pop
jmp
push
mov
shll
mov
jae
or
clc
push
movsl
add
xor
and
push
ret
imul
push
dec
std
or
fmulp
sub
dec
sbb
add
inc
jmp
push
fisttpl
cmpsl
push
ss
inc
ds
inc
xchg
lcall
cmp
mov
push
stos
cwtl
jns
cmp
dec
dec
fimuls
movsbl
hlt
insb
or
mov
mov
mov
mov
mov
or
outsl
lock
xor
stc
adcb
lds
inc
pop
xlat
mov
test
jmp
mov
ljmp
dec
dec
and
fists
push
icebp
scas
mov
adc
xor
sub
stos
popa
or
dec
adc
or
add
or
sete
subb
ja
jb,pt
and
insb
stos
push
mov
dec
dec
add
ja
fsubrl
and
mov
dec
push
mov
push
out
les
or
jo
int3
adc
jae
orl
and
jmp
adc
push
in
push
subb
pop
xchg
cmp
mov
es
jge
cmc
cmp
push
cwtl
xor
loopne
enter
xor
push
push
stos
fdivr
xor
rorl
push
mov
jae
movsl
je
ret
add
fcomps
xchg
dec
sbb
sub
or
lds
add
jle
fsubr
sbb
shlb
addr16
fs
add
lahf
stos
addl
das
or
or
cmp
fwait
pop
imul
push
pop
sbb
jbe
dec
xchg
pop
cmp
insl
scas
rclb
movsl
or
es
add
mov
push
dec
arpl
push
sub
out
push
je
adc
pop
or
cmp
jg
inc
dec
pop
negb
pop
push
mov
std
lods
xor
cmp
aad
xor
pop
ficoms
xchg
subl
and
ja
out
ds
notb
mov
add
or
sbb
shrb
sub
cmp
in
xor
or
sub
mov
mov
add
sbb
dec
push
bound
stos
pop
jns
push
jmp
mov
jae
mov
test
inc
jns
and
push
dec
pop
pop
jmp
icebp
in
inc
int3
cmc
sub
push
fs
les
icebp
cs
adc
scas
mov
mov
in
push
pop
ret
pop
repnz
pop
jmp
out
inc
sahf
add
inc
ds
sub
decl
mov
stos
mov
jle
and
inc
dec
adc
add
lcall
sbb
out
stos
mov
mov
inc
inc
mov
mov
je
inc
cltd
pusha
fs
movsl
pusha
cmp
mov
push
xchg
add
lret
or
add
add
jo
or
push
jns
xchg
add
dec
sub
xchg
sub
hlt
sbb
pop
or
icebp
push
jne
xor
rclb
jnp
adc
mov
mov
int3
xor
cli
sub
mov
sbb
jmp
mov
or
mov
cmpb
or
or
repz
or
rcr
jnp
inc
sbb
loope
fs
and
iret
out
push
mov
cmp
sub
xor
hlt
push
jge,pn
mov
jmp
cmp
out
test
mov
scas
inc
xchg
fucomp
mov
repz
xchg
push
por
shll
dec
mov
pop
inc
and
test
cmp
rcll
out
fisubrl
adc
hlt
mov
mov
xchg
test
test
ret
sbb
mov
or
xchg
jmp
mov
lret
mov
mov
pop
lods
repnz
vaddsd
popl
pop
adcl
mov
inc
dec
pop
ror
cltd
sahf
jp
push
adc
push
cli
inc
mov
sub
mov
and
aam
pop
adc
pushw
daa
jg
adc
jmp
clc
adc
jmp
mov
mov
sbb
add
xor
jg
shr
cs
inc
jl
pop
sti
mov
enter
or
pop
xchg
sti
popf
jle
sub
pusha
fs
pop
push
inc
sub
or
mov
into
sbb
sub
xor
pop
dec
sub
sahf
xlat
hlt
push
incl
outsb
jno
dec
dec
pop
test
sbbl
jae
and
pop
xchg
lds
mov
jl
sub
mov
jno
push
bound
ljmp
dec
ret
inc
ds
popf
enter
and
add
data16
hlt
lock
pop
cli
outsb
loopne
or
jmp
adc
and
mov
or
je
addb
cmp
loop
jne
int
dec
arpl
cmp
or
jp
push
add
add
or
adc
mov
jb
mov
pop
pop
add
cwtl
mov
dec
ja
addr16
push
lock
pshufw
mov
popl
in
inc
or
push
cli
or
fdivrs
lret
push
idivb
push
aam
or
jecxz
or
push
imul
shll
add
jo
cmovo
and
push
cwtl
bound
mov
aad
aaa
sub
repnz
jne
testl
push
scas
inc
push
mov
bound
lock
imul
mov
ret
fisubl
or
cmp
cmpb
adc
xor
dec
sbb
adc
nop
push
xchg
sbb
mov
and
out
add
sub
std
xchg
test
sbb
lret
sbb
push
ret
loop
rcrb
mov
iret
in
int
arpl
add
sbb
xchg
ficompl
xor
imul
movb
xor
cmp
fs
push
inc
std
aaa
sbb
jle
mov
andps
push
or
push
rolb
pusha
in
mov
gs
jbe
and
xor
bound
repnz
iret
addb
push
dec
testb
iret
loopne
es
inc
adc
pop
pop
jae
subb
pop
xor
sub
push
push
mov
subb
add
mov
add
int
test
pop
cmp
jmp
mov
inc
cmpsl
cmp
push
loope
jno
dec
jns
push
dec
movsb
pop
popf
push
adc
ds
add
inc
adc
or
xor
adc
cmp
outsb
int
cmp
adc
mov
inc
sub
and
or
fnstenv
jmp
sbb
xlat
xchg
mov
cli
mov
mov
push
cs
enter
adc
cmc
cs
shlb
enter
leave
jmp
sub
mov
and
imul
adc
cli
inc
push
rcrl
add
dec
cwtl
jnp
and
mov
inc
jne
gs
pop
jl
mov
jg
in
or
sahf
inc
jbe
fstl
daa
subb
fdivl
pop
incb
call
add
aad
cmp
cmp
aas
mov
hlt
mov
pop
push
push
aad
pop
sbb
pop
cmc
int3
jmp
lahf
test
mov
mov
and
xor
and
ficoml
es
push
into
testb
rorl
cwtl
pop
or
and
push
mov
daa
andb
aad
sub
sti
iret
push
ret
mov
pop
imul
inc
add
jmp
psrld
push
mov
fisubrs
jmp
xor
out
xor
dec
dec
or
icebp
add
push
or
push
cmp
and
pop
testl
dec
jmp
addb
aaa
add
cmp
pop
stos
or
inc
hlt
add
push
push
add
mov
or
mov
js
mov
or
mov
bound
push
test
shrb
pop
pop
ret
cmpsb
dec
add
adc
push
sbb
aas
scas
nop
sbb
adc
nop
fidivl
jmp
adc
jge
pop
out
mov
inc
mov
pop
push
mov
add
fmul
xchg
ret
xchg
inc
in
in
jecxz
adc
and
push
popa
andl
outsb
je
out
mov
push
and
test
pop
orl
jb
jns
lret
cld
in
jno
and
mov
aas
mov
push
pusha
push
adc
xchg
dec
test
and
dec
xchg
sub
push
cmpb
adc
fs
push
xchg
call
scas
xchg
loopne
push
mov
ljmp
jge
insb
jne
imul
or
out
test
push
sbb
cmp
cwtl
sub
int3
test
inc
jge
cmpsb
xchg
shl
pop
sub
or
imul
mov
movsb
push
mov
outsb
add
jmp
push
popw
loop
cmp
inc
shlb
sbb
push
sub
push
sub
outsb
dec
or
clc
push
dec
adc
push
adc
or
pop
jle
mov
lds
xchg
ret
and
jle
push
add
mov
loope
xchg
and
fidivrl
push
push
jmp
icebp
mov
sub
add
adc
test
pop
jmp
or
scas
insl
cmp
push
pop
repnz
data16
or
aaa
sub
cmc
jmp
movsl
jg
call
test
mov
cs
sub
pop
push
and
leave
adc
mov
add
lret
or
add
pop
nop
fiaddl
out
xor
cmp
inc
dec
and
sbb
pop
dec
popa
cli
and
pusha
in
nop
lods
leave
mov
jmp
out
test
dec
notl
push
les
out
inc
cs
sub
sub
add
into
mov
out
add
pop
xor
data16
jmp
daa
sub
jmp
out
push
mov
nop
cli
xor
pop
or
and
mov
idivb
cwtl
mov
push
mov
lods
mov
fsubrs
mov
xlat
lods
cld
fsubp
mov
or
fcom
push
into
divl
or
sub
pop
or
xor
add
pop
es
cmp
bound
dec
xchg
loop
aam
rcr
lods
out
mov
and
shl
in
testl
sub
push
mov
jo
movsb
mov
mov
push
fcoml
orl
push
sub
loopne
and
repnz
adc
xchg
push
inc
or
gs
push
sub
test
inc
cmp
xchg
mov
dec
sbb
bound
in
dec
or
notb
mov
stos
pop
js
xor
add
dec
inc
add
inc
jp
xchg
ret
pop
insb
mov
cmp
sbb
pop
sub
push
lret
out
out
bound
adc
push
mov
mov
lds
iret
and
fisubrs
or
bound
ss
leave
sbb
lret
int
adc
jle
dec
pop
and
pop
mov
and
mov
or
sbb
and
cmp
in
out
daa
mov
push
or
out
dec
push
stos
cs
xchg
xor
leave
xchg
rolb
or
dec
jne
rorb
incb
out
inc
jg
adc
cmp
into
fcomps
addr16
es
xor
push
or
ret
push
jns
lret
neg
pop
call
movsb
sbb
jmp
and
bound
incb
sub
or
jmp
clc
rclb
sti
jge
dec
push
jae
add
and
jge
cs
aaa
pop
adcb
mov
loope
sub
sub
jnp
sub
or
cmc
add
int3
cs
xlat
lods
clc
enter
das
aas
dec
jmp
dec
test
mov
dec
adcb
andb
and
xor
cmp
pxor
neg
xorl
aas
add
adc
push
mov
insl
mov
pop
push
popa
dec
cmove
inc
push
popa
push
and
sub
add
jns
or
and
imul
jle
repnz
add
sub
pop
loope
icebp
push
es
lock
stos
add
jae
js
movsl
mov
add
and
push
mov
in
xor
stc
mov
aaa
lcall
cli
mov
int3
out
add
jne
mov
sub
cld
jno
adc
and
cmpb
call
dec
adc
adc
cwtl
fstps
movsl
add
aad
scas
xor
lock
int3
sub
ret
sti
repnz
adc
les
rdmsr
adc
arpl
add
xor
cld
mov
int
and
adc
sbb
std
cmp
mov
imul
jbe
sbb
stc
in
cli
dec
push
popa
dec
add
call
outsb
add
out
dec
aam
lods
cmpsl
push
push
pop
stc
mov
orb
lds
mov
xchg
adc
pop
sbb
aam
pop
pop
ja
rclb
rclb
mov
adc
stc
in
push
fmulp
sub
adc
hlt
cmp
mov
adc
sbb
mov
jb
aad
or
adc
push
lock
popf
adc
stc
std
xor
add
dec
pop
stos
and
dec
and
jl
jb
mov
rorb
std
incl
add
aad
gs
jmp
xlat
bound
jge
sub
or
jmp
inc
nop
jne
sbbb
clc
push
cmpsb
xchg
das
repz
add
add
push
xor
dec
iret
bound
mov
popf
das
pop
add
cltd
inc
push
pop
out
sub
outsb
cwtl
adcb
cmp
gs
pop
pop
dec
ja
push
pusha
pop
push
scas
pop
pop
stos
push
mov
jmp
cld
jmp
mov
xchg
out
sti
mov
cmc
sbb
xor
loop
or
xor
xorl
mov
ds
add
xor
pop
movsl
add
mov
jmp
jg
mov
mov
nop
mov
aaa
andb
sub
not
xlat
jno
push
pop
decb
mov
add
ljmp
setbe
push
jmp
or
shl
fsubr
cltd
outsb
inc
ss
xchg
jbe
sbb
test
mov
add
mov
mov
push
and
mov
out
imul
inc
pop
pop
cmp
sub
xchg
scas
negl
push
push
pop
push
jmp
pop
ljmp
out
jmp
std
mov
sbb
sbb
pusha
aas
or
aaa
or
and
aas
aam
sbb
out
pop
sub
arpl
lock
popf
cmp
xor
fs
or
adc
lcall
cmp
cwtl
ret
and
and
scas
les
lds
faddl
push
jmp
lret
cs
add
cmp
mov
inc
xchg
pop
loope
lret
jmp
xchg
jbe
aas
dec
rorl
inc
push
inc
sbb
mov
es
add
lock
test
jo
cli
int3
daa
jmp
hlt
outsl
cmpsl
sbb
out
aam
mov
leave
jg
xchg
and
lahf
push
lcall
imul
daa
lahf
push
inc
inc
jmp
jns
imul
es
mov
mov
outsl
mov
add
add
data16
jns
sbb
push
das
sti
out
iret
adc
inc
add
mov
outsl
pop
or
mov
dec
jecxz
add
jl
cmp
shr
rcll
push
mov
repnz
jno
cwtl
push
dec
push
fbld
ss
jle
stc
aad
repz
mov
push
cmp
mov
divl
add
mov
pusha
bound
outsl
and
and
lret
xchg
das
adc
push
mov
add
jo
mov
add
pop
or
daa
adc
std
cli
repz
stos
loopne
pop
add
xor
sub
ljmp
inc
clc
inc
or
dec
clc
testl
ljmp
mov
jmp
jmp
add
pop
jg
sbb
cld
bndldx
pusha
pop
cmp
test
mov
xor
pop
cmpsb
es
add
inc
and
cmp
add
outsl
aam
add
inc
ffree
inc
loop
inc
dec
lods
popf
aaa
daa
dec
mov
lods
sbb
jae
push
add
int
add
clc
mov
sub
mov
sub
inc
push
ret
aas
adc
sub
lods
sbb
rolb
inc
pop
dec
sub
dec
out
add
sub
add
rolb
pop
xchg
daa
push
xlat
lret
jbe
outsb
mov
popf
dec
in
or
jne
xor
aas
and
mov
cs
xchg
dec
cwtl
add
sub
ja
shll
loopne
add
add
std
jl
add
push
or
inc
and
cmp
mov
outsb
add
loope
xchg
je
out
mov
lahf
lods
xchg
xor
insb
aas
rcll
xchg
sub
pop
repnz
mov
xor
or
fmull
pop
push
leave
ss
pop
imul
and
repz
and
push
push
data16
fwait
dec
jmp
shr
or
xchg
push
inc
pushl
cwtl
test
call
subl
lock
dec
lahf
fsub
push
cmp
sbb
out
and
test
ja
xchg
adc
std
xor
rorb
adc
dec
push
push
mov
xchg
subb
fildl
fisttps
mov
rorb
lds
enter
mov
int
push
shl
ret
adc
sub
stos
repz
add
push
cmp
lods
repz
mov
add
cs
xlat
call
imul
mov
sbb
sub
loop
cli
xchg
or
stos
sbb
ljmp
mov
dec
das
dec
cmpsl
shll
pop
sub
ss
jecxz
decb
jl
jecxz
mov
ret
aad
jl
or
pop
fs
test
cmpsb
adcb
or
push
xchg
std
decb
push
add
add
arpl
sbbb
lret
or
in
pop
rcrb
mov
stos
loopne
out
adc
push
or
mov
mov
invd
loop
sub
ja
xor
into
cld
xchg
mov
adc
add
or
out
inc
shl
add
imul
repz
push
push
dec
dec
aam
loop
call
add
push
or
jge
ljmp
in
clc
loopne
test
jmp
sub
sbb
push
sbb
scas
sbb
xchg
add
xor
lods
mov
ret
mov
push
daa
cmpb
pop
jecxz
dec
cwtl
pop
lods
xchg
ret
sub
and
jp
js
repnz
nop
sub
push
mov
push
mov
clc
aaa
push
inc
or
push
sub
repz
or
dec
xor
cmc
roll
jge
add
insl
jae
add
jg
or
popa
and
in
xor
adc
test
es
loope
push
std
jae
movsb
pusha
inc
insb
jns
add
pop
mov
mov
mov
and
mov
out
js
mov
pushf
xchg
or
es
push
jmp
pop
sub
aad
addb
mov
daa
clc
sub
popf
sbb
inc
insb
mov
dec
jle
stos
stos
jne
cmp
loope
cmp
dec
jne
and
pop
ficoms
mov
adc
sbb
jmp
inc
xchg
cmpsl
xor
dec
jmp
mov
adc
add
lret
das
push
xchg
in
shlb
add
mov
popa
hlt
mov
scas
andb
or
or
fsubrl
xor
cmp
sbb
jmp
std
movsb
cmp
xchg
mov
inc
in
jne
add
lds
arpl
jnp
ret
and
das
jmp
nop
int3
stos
stos
add
call
out
jo
pop
xor
call
sub
sbb
mov
rorb
inc
cmpsl
in
aad
jno
jbe
das
leave
adc
es
xchg
and
insb
mov
mov
push
test
cmpsb
test
adcb
push
dec
cmp
adc
xchg
cmc
add
push
test
xor
jno
outsl
push
clc
sub
popa
in
sub
and
mov
fmulp
cmpsb
stos
add
movzwl
push
ret
pop
int3
pop
clc
ljmp
push
mov
les
subb
or
cmp
mov
add
inc
enter
add
aad
xlat
test
pop
ljmp
dec
inc
sbb
test
aam
mov
xor
pusha
pop
or
daa
je
mov
outsb
pop
jne
add
flds
inc
jmp
mov
sti
inc
add
fdivrs
movsb
pop
jecxz
mov
repnz
faddl
imul
mov
sub
push
loop
mov
and
jo
or
and
sbb
mov
fwait
pop
xor
jmp
xor
jg
jmp
out
push
scas
in
pop
ja
adc
pusha
out
jns
dec
pop
fidivrl
and
pop
cld
lods
cmp
adc
pop
jb
or
notb
jg
push
dec
psubusw
xorb
xlat
hlt
mov
outsb
shl
cmp
push
inc
push
std
testb
sbb
mov
or
push
inc
rorl
mov
addl
inc
mov
jmp
aaa
push
popa
iret
and
loopne
xlat
imull
stos
sbb
sbb
push
sub
sbb
inc
push
imul
mov
push
pop
negb
xchg
orb
insb
xchg
or
mov
cmp
or
mov
mov
mov
popa
addl
stos
gs
mov
jmp
dec
push
jl
jmp
inc
add
jg
or
cmpsb
cmpsl
in
popf
dec
mov
mov
jmp
xor
out
call
outsl
push
imul
mov
cli
lret
addb
mov
subb
add
out
loopne
loopne
add
dec
cmp
into
cmpsb
dec
cld
push
das
mov
jne
pop
mov
test
pop
add
mov
mov
inc
inc
cmpsl
pop
cmp
or
pop
jns
cwtl
and
mov
push
pop
inc
testb
pop
sbb
dec
gs
mov
push
lods
inc
mov
or
movsb
rorl
push
sub
jle
push
movb
mov
mov
ret
das
sub
mov
xchg
adc
mov
idivl
aad
in
cmp
adc
out
bound
and
fcomps
lods
clc
add
rcll
lcall
mov
adc
pushf
lcall
stc
or
jns
add
lods
lea
or
pop
jne
add
out
enter
daa
cmp
pop
ljmp
mov
or
sbb
lret
bound
adc
pop
or
mov
push
push
dec
sbb
stos
fnstsw
shl
push
in
rcl
push
push
ret
sbb
aad
sub
dec
jle
out
dec
mov
adc
inc
or
or
fdivrp
aaa
and
sbb
inc
imul
xchg
add
dec
leave
add
lods
push
mov
in
jb
imul
mov
cmpsb
and
push
pushf
sub
sahf
or
loopne
push
jmp
lcall
ret
les
mov
or
sub
pop
lds
jb
sub
adc
add
mov
mov
add
es
es
pusha
push
and
jmp
dec
scas
lret
jno
cmp
out
adc
jno
xor
pcmpeqw
pusha
push
mov
push
imul
add
pop
xor
test
adc
lret
pop
jmp
pop
pop
mov
test
push
push
mov
inc
rclb
jl
hlt
out
jmp
inc
pop
mov
mov
lock
mov
xor
jle
sarl
pop
mov
add
push
lret
jbe
pusha
add
add
jge
out
lock
cmp
add
push
clc
dec
outsl
sub
not
rolb
cmp
lock
cltd
gs
aam
subl
dec
pop
sub
decl
pop
or
out
fisubl
pop
and
mov
imul
clc
cmp
sti
aad
loope
addr16
or
hlt
or
sbb
std
rcrb
xor
orl
jbe
adc
add
inc
inc
mov
out
ret
xor
std
jb
popf
rolb
pop
dec
nop
jg
xor
es
popa
pop
xor
pop
xor
pop
rorb
or
sub
sub
sbb
dec
add
cmp
das
fsts
movsl
clc
lds
adc
pop
mov
es
sbb
nop
aas
jb
add
dec
jmp
pop
add
xor
repz
les
xor
mov
pusha
ss
call
rorb
mov
lods
mov
stc
jns
enter
push
lds
fwait
add
or
das
fbld
jmp
in
mov
out
out
shrb
dec
dec
or
aaa
imul
xor
add
add
pop
mov
pop
ret
push
cmc
mov
shll
ljmp
testl
inc
cmc
cmp
sbb
dec
jmp
stos
fsub
ja
testl
cli
je
cld
aad
jno
and
lods
jmp
test
mov
rorl
push
and
inc
pop
pop
xor
ss
and
fildl
shll
sbb
and
or
loop
jne
push
loope
andb
dec
pop
cli
sub
xchg
add
and
adc
pop
pusha
aad
add
push
sbb
jle
push
sub
xchg
ret
or
pop
mov
pop
push
shrb
in
aad
repnz
adc
sub
data16
leave
or
call
inc
push
je
leave
add
jno
jge
pusha
inc
pop
data16
mov
push
sub
ljmp
mov
sub
push
cmp
add
inc
mov
mov
cmp
cmpsl
nop
jno
test
and
lcall
mov
and
xchg
cwtl
addr16
add
or
mov
mov
cmp
sbb
ret
clc
inc
sbb
iret
test
pop
or
jmp
mov
or
pop
bound
cwtl
fnstsw
es
adc
sub
lods
push
pop
test
aaa
cwtl
in
roll
inc
mov
not
add
je
or
dec
scas
mov
inc
and
cmpsb
jbe
push
nop
inc
or
xor
jno
enter
pushf
sbb
mov
xchg
fldenv
push
inc
stos
mov
in
cld
mov
ja
dec
push
loope
das
idivl
test
push
repnz
pop
data16
xchg
or
bound
jge
ret
std
loopne
jmp
dec
sub
rcl
pop
mov
xchg
jecxz
push
dec
sbb
jle
cwtl
fxch
mov
lods
sbb
std
sub
les
pop
cmp
mov
add
mov
stc
mov
orb
cs
gs
mov
shl
add
xchg
pop
ljmp
rcrb
push
repnz
jg
xchg
mov
dec
int
outsl
jp
add
pop
jne
pop
pop
stc
sub
jmp
jecxz
repz
fidivs
cmpsb
inc
adc
sub
and
jge
adc
fwait
lret
and
pop
jmp
xlat
test
sbb
shll
loop
sub
int3
and
cld
sub
xorl
xchg
lret
add
mov
xrelease
push
xlat
xchg
icebp
pop
sub
dec
push
movl
in
pop
mov
aas
mov
xchg
pusha
mov
mov
mov
stc
mov
add
cltd
orb
mov
xor
add
pusha
or
inc
jno
lds
rolb
mov
sub
sub
aad
cmc
push
hlt
mov
jmp
mov
jle
lcall
cwtl
sub
inc
outsl
cltd
push
cmp
jmp
pop
or
ficoml
lock
dec
mov
fildll
xor
jmp
dec
adc
jmp
jecxz
mov
sub
sub
arpl
cmpb
int3
sbb
dec
lret
or
jns
jmp
fsubr
pop
add
add
lret
dec
xor
cmpsl
fwait
cs
sahf
sbb
mov
xlat
pop
pop
xor
jmp
dec
push
popa
in
jns
ret
inc
jp
ficoml
popf
mov
and
push
adc
jg
clc
pop
shlb
shll
addr16
in
xlat
mov
or
rorl
arpl
in
sub
outsb
pop
jno
add
and
jp
fisttpll
lret
sti
movsl
pop
inc
xor
mov
or
mov
sub
pop
leave
lahf
jmp
movsl
scas
ret
mov
jge
push
repnz
pop
inc
add
and
jb
mov
cmp
adc
pop
pop
sbb
pop
in
mov
push
test
add
test
mov
lahf
js
movsl
and
cmc
mov
jne
cmp
add
imul
lea
sbb
icebp
xchg
movsl
or
sbbb
jge
bound
cmp
push
out
imul
mov
adc
leave
mov
mov
mov
push
int3
out
cmpsb
inc
xchg
and
jl
std
adc
ss
loop
add
pop
mov
push
lcall
xchg
push
mov
jle
sub
dec
or
or
cmp
xchg
fcoml
stos
pop
ljmp
push
sbb
sbbb
sub
idiv
mov
shll
fisubl
in
or
pop
push
iret
insb
lret
dec
mov
loopne
mov
icebp
jl
lcall
add
aas
add
daa
inc
fdivl
outsb
sub
popf
sub
cmp
cmp
and
loope
loope
add
mov
dec
xor
dec
dec
sub
jge
add
jnp
or
or
add
cld
xchg
sbb
js
das
lods
xchg
push
xor
cmc
lock
sub
ss
mov
negl
push
mov
int
or
pop
pusha
dec
jo
jbe
mov
xor
pop
cmp
sub
clc
lret
pop
stos
push
add
add
dec
jmp
dec
adc
leave
and
lret
mov
enter
lods
jno
jnp
add
adc
addr16
push
subl
inc
cmp
fs
es
bound
add
add
movsb
sbb
cld
push
movsb
xor
sub
xchg
mov
cmp
out
inc
ss
test
sub
mov
mov
int
sbb
repz
sub
xchg
jmp
mov
sub
cmp
mov
and
xchg
ja
imul
jne
mov
push
and
outsl
pop
sub
and
scas
mov
dec
clc
repnz
scas
enter
lods
adc
dec
mov
sub
pop
push
adc
orb
mov
pop
clc
test
mov
push
cmp
mov
adcb
pop
js
loope
dec
ficoms
inc
shrl
pop
sbb
icebp
cmp
test
into
call
shrl
js
test
or
dec
ret
pop
jle
xorl
call
sub
aad
cmp
jns
pop
jmp
das
xchg
bound
or
test
out
xchg
mov
rcll
add
out
push
pop
add
fs
adc
mov
push
push
push
mov
xor
scas
lret
sub
inc
push
fstl
or
mov
push
inc
std
movsb
or
cmp
loope
push
nop
fidivl
or
negw
mov
adc
movlps
pop
rcrb
in
jo
loope
adc
leave
into
xor
or
sbb
jg
and
imul
mov
push
mov
or
lods
push
js
sbb
cmc
mov
or
ss
jle
idivl
sub
neg
xlat
lods
jnp
or
rcl
fcmovnbe
cmp
jb
or
clc
pop
cld
jo
out
mov
inc
add
or
loopne
pop
mov
or
and
jmp
in
les
jg
adc
jb
daa
in
push
stos
bound
xchg
daa
sbb
ja
loope
push
pop
push
test
pushf
hlt
add
ret
add
cmp
aas
add
frstor
xor
leave
inc
movhps
imul
dec
jle
test
pop
jmp
or
fcmove
dec
jnp
fildl
in
mov
subl
fisttpl
adc
add
adc
js
pop
fs
add
add
pop
push
push
xchg
cmp
subb
insb
add
into
or
dec
add
pop
or
jne
sbb
jae
push
sbb
ret
cld
and
cmp
in
and
add
subl
clc
xor
das
pop
ljmp
push
pop
lods
dec
xlat
inc
es
aad
mov
pop
push
loope
add
dec
inc
int3
xor
mov
jmp
and
je
dec
sub
push
addl
filds
in
jo
dec
cwtl
outsl
or
push
lcall
or
push
arpl
add
xchg
cld
pop
out
inc
imul
and
push
push
pmulhuw
xor
or
push
fists
and
fdivrl
nop
cmc
jmp
fdivs
xchg
push
inc
jae
cmp
ss
mov
inc
or
cmc
jnp
ljmp
pop
push
and
or
or
mov
inc
or
lods
dec
and
sub
or
test
lock
adc
cmpsl
fisubrl
psrlq
adc
sbb
jg
ret
pop
dec
stos
push
pop
lcall
push
push
mov
xor
test
shll
xchg
rorl
shll
loope
push
sub
pop
pop
lock
sub
mov
mov
mov
add
ja
out
mov
in
inc
cmp
pop
inc
mov
hlt
jg
jo
pop
ss
mov
xchg
mov
and
cmp
and
add
pop
shlb
push
jnp
mov
xor
cld
jmp
push
adc
aaa
mov
jmp
add
outsb
add
push
mov
ja
pop
add
add
repz
lock
inc
ljmp
scas
dec
adc
sub
lret
cli
loopne
sub
mov
push
mov
xchg
pop
in
repz
sbb
xor
xor
mov
add
repz
mov
push
pop
and
inc
loope
add
bound
jge
enter
shl
cmpb
neg
jmp
dec
sub
fs
js
dec
loop
daa
sub
loopne
shl
jge
mov
xor
shll
out
ljmp
pop
xor
jle
add
arpl
jb
push
data16
dec
add
mov
sub
adc
daa
cmpsl
rcrb
add
ljmp
into
xchg
or
sub
sarb
mov
rolb
pop
and
push
sahf
adc
push
mov
add
stos
ret
outsl
sub
and
test
in
mov
or
mov
dec
pop
xor
jmp
leave
out
sbb
pop
add
push
icebp
jbe
fldl
inc
movsb
jmp
dec
jb
adc
pushf
insl
ret
shlb
xchg
es
mov
mov
add
push
fildl
dec
scas
add
popf
in
sahf
and
dec
pop
cli
shlb
aam
jecxz
call
repz
xor
mov
nop
cmpb
cmp
add
push
mov
cmc
add
daa
xor
and
loopne
push
pop
jo
pop
inc
popa
adc
adc
sub
or
arpl
das
shl
sub
adc
stos
lret
aam
sbb
incl
xor
dec
scas
iret
je
call
dec
jno
stc
pushf
mov
decl
xchg
xchg
into
mov
jp
add
pop
mov
xlat
bound
jmp
xlat
movb
add
repnz
rol
or
or
jl
push
inc
or
jge
mov
scas
jmp
mov
int
fistl
int
daa
pop
inc
jg
pop
fcoms
pop
lcall
sub
aaa
add
das
jmp
dec
push
sub
stos
js
sahf
mov
jbe
lock
mov
xlat
mov
dec
lods
and
int
inc
or
mov
ret
stc
xchg
aam
enter
imul
shr
mov
or
lret
mov
push
imul
movsl
rolb
mov
pop
dec
push
out
leave
push
out
push
insb
aas
das
add
lcall
out
pusha
xor
jmp
movsb
or
jmp
push
push
aas
pop
push
mov
xchg
nop
jo
xorb
xor
in
sub
mov
add
mov
rcrl
sti
pop
jmp
enter
and
inc
pop
xor
jo
fucomp
mov
loop
movsb
scas
inc
bnd
mov
jns
dec
dec
decl
cmp
jae
add
xor
aam
push
loope
std
repz
fistl
movsb
sbbl
jmp
rcrb
andl
push
popa
push
fwait
lock
mov
stc
push
je
or
inc
lock
pop
mov
in
mov
inc
jecxz
call
filds
fcom
or
outsl
in
adc
jmp
dec
jno
push
movl
mov
mov
aaa
xorl
push
sbb
adc
jne
and
and
neg
outsl
divl
lods
add
ljmp
add
aam
sub
push
or
inc
pop
sti
stc
daa
sub
pusha
aaa
and
xchg
outsl
bound
shll
adc
in
adc
ds
pop
pop
jmp
lds
cld
dec
pop
cmpsb
adc
pop
mov
cmp
movsl
pop
outsb
pop
pop
inc
in
pop
dec
or
pop
mov
pop
fld
das
rcl
insl
add
sbb
push
mov
xchg
push
sahf
in
ljmp
andl
mov
xor
fs
out
dec
mov
cmpsl
insb
in
push
xchg
int
int3
inc
rolb
inc
lahf
inc
pop
jle
lret
inc
xchg
int
out
cmp
sub
pop
pop
fdiv
lret
xchg
jb
jo
inc
sbb
push
stc
call
inc
jmp
push
push
push
adc
mov
stos
xchg
cmp
data16
jg
in
mov
sbb
call
lock
sub
imul
mov
dec
mov
mov
mov
xorb
fiadds
nop
and
or
cmp
stc
aad
in
push
arpl
sti
cmc
pop
cld
not
mov
testb
cli
dec
ret
cmp
leave
addr16
out
scas
adc
mov
pop
mov
pusha
ljmp
ja
xor
add
jns
insb
shr
lret
int3
cmc
pop
gs
aad
or
jle
jns
dec
inc
outsl
sarb
les
mov
mov
jne
cltd
popf
fildl
les
aad
xor
and
xor
cmp
cwtl
aam
push
mov
cwtl
das
repnz
mov
dec
test
loopne
lret
xor
add
push
add
nop
mov
push
mov
inc
scas
popf
push
add
jne
fabs
sub
and
mov
sub
mov
dec
mov
inc
xchg
inc
or
scas
clc
movsl
xchg
pop
push
bound
mov
pushf
or
fildl
sbb
dec
push
outsl
pop
stos
cld
aaa
xchg
ljmp
cs
push
add
iret
dec
fbstp
pop
xchg
fisttpll
data16
lret
dec
sbb
jo
mov
mov
aaa
pop
mov
or
xchg
and
jge
push
inc
fmull
mov
stc
xchg
outsb
ror
sub
jo
xlat
adc
xor
push
or
filds
pop
jne
add
and
add
and
dec
pop
push
pop
addps
and
jge
insl
sub
nop
adc
mov
loopne
lock
insb
pop
add
dec
and
adc
jnp
and
adc
push
ss
jmp
mov
pop
mov
sub
dec
out
pusha
pop
movsb
sub
repz
loopne
fidivrs
dec
rcrl
and
out
icebp
push
push
or
and
testb
ret
cwtl
fsubrs
push
xchg
jae
xchg
jecxz
mov
xor
es
xchg
add
clc
imul
mov
pop
pusha
adc
xor
loopne
mov
pop
das
sti
dec
add
das
cmp
dec
sub
or
jmp
mov
xor
ja
jp
xchg
addb
xchg
cli
mov
mov
sbb
test
adc
lock
pop
mov
mov
pop
pop
lods
test
or
iret
push
or
mov
push
testb
mov
sub
outsl
mov
fcmove
mov
hlt
dec
jno
fsubr
push
dec
push
ret
push
enter
cwtl
stc
mov
fistps
inc
sbb
pop
mov
das
lock
adc
mov
pusha
bound
push
mov
pop
and
cli
arpl
jmp
and
push
mov
push
mov
jmp
sarl
js
jle
inc
mov
or
dec
dec
not
inc
out
test
decb
xchg
outsb
cmp
add
jae
es
rcl
dec
mov
push
push
jmp
push
ret
sbb
mov
scas
jecxz
xchg
mov
stc
cmp
dec
jne
jmp
push
ljmp
out
mov
mov
enter
ret
ret
repz
or
xlat
arpl
pop
or
add
push
mov
cs
adc
push
xor
push
mov
hlt
dec
xor
xor
and
sbb
add
sbb
or
fstl
into
push
icebp
add
test
add
add
pop
cmp
and
rorb
fists
mov
pusha
pop
or
mov
mov
jbe
push
cli
cmp
out
adc
sub
sbb
sub
adc
add
dec
scas
sbb
pop
jb
mov
js
test
push
pop
ret
cld
push
mov
pop
add
nop
xchg
and
mov
and
jg
mov
insb
sbb
cmpsb
xor
jmp
mov
push
jge
rcll
add
dec
sti
mov
pop
out
leave
into
sub
pop
xor
or
inc
jge
push
jb
fstps
mov
outsb
adc
jb
hlt
push
mov
mov
or
mov
mov
mov
movsl
fmull
roll
vpavgb
out
mov
repnz
add
shl
xlat
and
xor
shlb
sub
pusha
push
jmp
inc
cmpsl
imul
mov
xchg
insb
lahf
sbb
add
sub
cmp
cmp
cmp
xor
or
xor
loop
pop
fists
pop
outsl
jmp
xchg
in
gs
cmp
sub
test
leave
jno
sbb
pop
inc
adc
xor
push
jmp
push
pop
iret
enter
repz
js
or
mov
and
jmp
rcrl
jle
ja
jo
jmp
cmc
pop
push
jmp
mov
mov
cs
mov
cs
fmull
ffreep
mov
out
xchg
mov
jb
cs
cld
mov
dec
je
fs
pop
mov
dec
out
lcall
and
lods
pop
adc
add
leave
adc
xor
adc
xchg
decl
cli
sbb
jge
movsl
daa
pop
dec
push
daa
pop
gs
idivl
loop
mov
or
call
loop
cwtl
lcall
mov
dec
movsl
sub
xlat
rcrl
jns
aas
cmc
adc
push
jmp
adcb
mov
gs
lcall
add
pushf
add
std
push
nop
lahf
sbb
insb
test
jne
cld
push
sbb
sahf
je
addr16
push
arpl
daa
cli
or
push
xchg
push
mov
pop
ret
xlat
sar
sti
xchg
clc
push
dec
imul
ljmp
xchg
sti
cmpsl
add
push
mov
test
push
hlt
mov
out
and
xor
xlat
lods
xchg
sub
jge
xchg
add
fsubs
add
cmpsb
es
or
lcall
cmp
jg
insb
lret
shrb
mov
add
loopne
or
lahf
gs
push
xchg
xchg
bound
es
pusha
pop
sub
dec
out
adc
jmp
mov
mov
popa
inc
fdiv
ffree
or
jmp
cmp
jno
cmp
push
les
inc
aam
sub
loop
xor
sub
sbb
mov
sub
mov
aam
xchg
jmp
icebp
xchg
es
or
stos
or
sbb
adc
mov
ds
push
mov
lods
fcomp
dec
das
push
push
rcrb
aaa
xor
push
mov
cwtl
adc
rol
lock
jp
ljmp
mov
push
jne
fildll
push
cs
sub
push
cmp
sub
movsl
and
iret
inc
push
subb
sti
cs
int3
push
mov
call
dec
cld
call
out
xchg
add
cwtl
sbb
dec
add
lret
mov
pop
cmp
mov
stos
in
cmp
mov
sbb
decb
mov
stos
lock
daa
push
xor
xor
in
test
adc
add
inc
xor
add
hlt
jecxz
leave
mov
add
pop
and
and
gs
imul
jb
test
fcoms
into
jle
mov
push
mov
inc
add
pushl
jle
cmp
or
sub
add
std
ds
pop
lods
or
xchg
es
leave
inc
imul
pop
jmp
and
or
and
pop
xchg
adc
inc
lock
pop
mov
inc
mov
bound
xchg
push
clc
push
adc
sbb
cmp
icebp
movswl
fstpt
dec
and
addb
mov
jle
stos
icebp
sub
dec
push
sbb
push
scas
mov
out
push
movsb
sub
inc
cs
xchg
xorb
cmp
or
jb
ret
je
jecxz
pop
aas
inc
in
pop
cmp
lea
jnp
push
pop
dec
sub
pushf
outsl
adc
push
lret
ret
dec
outsb
ljmp
xchg
and
out
lret
addb
dec
mov
xchg
or
pop
push
push
sub
call
out
sub
cwtl
shrl
dec
adc
pop
xchg
xor
jge
jecxz
cld
dec
aas
roll
pop
ret
xchg
and
rorl
jmp
fsubs
push
xlat
or
push
pop
ret
push
lock
repnz
cld
jno
mov
jl
add
add
bound
insb
mov
or
push
test
push
mov
in
rcll
dec
jmp
jge
inc
pop
jge
cmp
cmp
inc
xchg
lahf
mov
and
jbe
or
push
xchg
rclb
push
fildl
lods
pop
test
sub
pop
faddl
push
mov
dec
les
andb
test
mov
faddl
jne
mov
pop
mov
xor
mov
and
cli
dec
pop
xor
push
addr16
jne
fsubl
subb
lds
popa
pop
push
stos
add
sub
imul
add
lret
jmp
scas
lcall
push
mov
stos
mov
gs
push
pop
xchg
sub
adc
pop
adc
adc
sub
insb
mov
inc
stos
sub
push
push
jg
in
push
jb
scas
xor
and
pop
jl
lret
mov
ds
and
sub
adc
dec
push
icebp
mov
ljmp
fistps
pop
ljmp
lds
inc
or
add
sub
dec
or
sbb
cmp
inc
pop
into
add
mov
mov
jmp
stos
cmp
imul
mov
sbb
mov
and
movsb
orb
popa
add
inc
or
pop
mov
adc
fistpl
div
push
add
cmpsb
pop
ret
pop
push
mov
arpl
stos
gs
push
adc
xlat
add
adcl
jg
inc
add
jmp
cmpb
mov
dec
out
mov
jge
push
ja
clc
divl
or
sub
xchg
or
sbb
xchg
xchg
dec
stc
fidivl
push
xchg
mov
mov
push
scas
pushf
adc
adc
mov
iret
test
fistpll
jg
sti
pusha
outsl
or
iretw
aaa
pop
sub
adcb
and
data16
jnp
out
mov
xchg
pop
stos
inc
push
ss
mov
shrl
push
jge
mov
scas
cmpsl
xor
mov
push
rcrl
push
push
sub
or
nop
xor
shl
shlb
and
and
add
push
add
jbe
mov
mov
sub
mov
ret
push
inc
and
mov
and
addb
xchg
sub
push
sbb
adc
xor
jmp
inc
fistl
fsubp
hlt
cs
sti
cwtl
push
sub
insl
add
fwait
cmp
push
push
push
and
outsl
xchg
std
mov
jo
push
adcb
add
jmp
add
sub
shl
jg
pop
ds
xchg
sti
mov
sub
xor
or
lods
std
movsb
and
push
jmp
adc
xchg
in
pop
sub
dec
stos
mov
dec
cltd
and
lret
push
mov
inc
push
mov
add
loopne
subb
cld
sub
add
in
je
daa
sub
sub
dec
adcl
adc
adc
add
pusha
xor
out
pop
leave
or
pop
jmp
icebp
xchg
push
jb
push
cli
repnz
sub
addl
push
mov
sub
jae
addl
mov
pop
add
xchg
add
out
int
sbb
pop
inc
xchg
dec
loope
mov
loop
pop
aad
or
add
test
loope
add
add
or
pop
add
or
push
rolb
push
xorb
sbbl
repnz
or
or
add
or
subl
add
mov
inc
push
ljmp
or
mov
dec
fs
aad
in
mov
les
out
add
xchg
add
in
lods
imul
push
inc
std
faddl
adc
ss
imul
lods
cmp
mov
dec
iret
les
sub
sti
rorb
cltd
and
cmpsl
add
popl
xchg
es
jno
fs
push
add
repnz
sbb
add
mov
fcoml
or
cld
push
adc
int3
bound
cmp
add
and
imul
rclb
insl
addr16
add
and
and
and
xchg
orb
jl
sbb
xor
pop
jl
mov
pop
test
push
cmpb
call
ja
push
popl
outsb
mov
pop
xor
add
mov
shlb
adc
test
je
sub
nop
arpl
mov
fnstenv
cmp
adc
nop
icebp
les
xchg
pusha
pop
or
mov
dec
mov
lods
jns
add
ds
push
or
cmp
adc
icebp
sbb
push
pop
sub
insb
inc
adc
sub
jno
add
adc
dec
jmp
jnp
hlt
dec
pop
sub
mov
push
mov
cs
dec
dec
or
fstps
out
jge
pop
pusha
mov
imul
xor
imul
clc
push
lds
rcr
and
pop
jmp
or
movsl
jmp
idiv
xchg
sbb
sub
insb
adc
arpl
lock
push
sbb
int
or
push
ret
dec
or
movaps
imul
movsl
jmp
fldt
dec
nop
pop
push
push
sub
mov
stos
cmpl
inc
sbb
pop
or
aas
test
mov
pusha
pmaxsw
jg
xchg
add
pushf
and
sbb
mov
es
xor
rol
pop
push
test
add
lahf
jle
or
cmp
or
mov
pop
mov
mov
not
mov
dec
pop
cmp
out
ja
loop
mov
andl
pusha
jmp
negl
or
mov
or
pop
fst
or
cmp
icebp
mov
add
shll
popa
imul
jl
cmp
repnz
daa
pop
mov
mov
pop
xor
dec
call
add
xor
and
or
jo
mov
mov
sbb
in
inc
ja
jne
pop
or
out
jl
and
jmp
sub
push
dec
inc
jg
stc
adc
inc
xor
xor
and
sub
jmp
cli
xchg
push
fdivs
int
sbb
sbb
cmp
cmp
push
loop
push
imul
push
push
inc
andl
das
test
xor
neg
jne
fiadds
ss
iret
cmp
and
jmp
jecxz
jmp
lahf
jmp
shll
mov
or
outsb
inc
mov
popf
inc
push
popa
and
inc
mov
das
jmp
jnp
leave
inc
jmp
mov
cmpsb
jge
pop
push
and
loop
jmp
xor
push
sbb
and
xchg
pop
ret
and
in
dec
ret
and
jl
imul
stos
sbb
dec
pop
or
adc
mov
test
pop
dec
out
insl
cld
sub
or
in
push
aad
int
movl
inc
xchg
or
test
or
jb
inc
jmp
jmp
dec
daa
outsb
scas
push
cli
adcl
add
inc
jbe
dec
pop
incb
mov
rolb
add
xor
mov
addb
jns
ds
stc
sub
shl
in
mov
inc
xchg
rcrl
sarl
pusha
pop
aam
xor
fimull
daa
sbb
repnz
fnsave
mov
pop
push
js
and
popa
push
cmc
mov
jne
rcl
cwtl
fisttpll
sub
jb
sub
nop
mov
pop
sub
and
sbbb
jbe
lock
sub
adcl
not
sahf
or
sti
lret
inc
jle
pop
pop
or
push
or
pushf
jno
icebp
or
repnz
add
mov
sub
sbb
mov
cmpb
or
cmp
mov
push
add
call
xor
mov
sbb
out
push
outsl
sbbl
mov
mov
iret
cmp
pop
xchg
fstpt
add
shl
or
outsb
adc
sbb
add
or
daa
xchg
xchg
repz
shrl
imul
mov
fadd
icebp
jnp
jne
xorb
add
fadd
xchg
sub
subl
pop
in
les
mov
out
jecxz
add
xor
jmp
mov
cmp
mov
xor
cmp
icebp
test
sub
sbbb
jno
sub
jg
and
arpl
mov
jle
push
mov
or
mov
inc
test
mov
cmpsb
mov
mov
sbb
and
cltd
into
cmp
enter
insb
inc
and
sbb
mov
insb
jno
cld
clc
jo
mov
js,pt
stc
orb
jp
or
push
ja
mov
mov
jae
add
mov
stos
sub
push
push
push
jmp
add
add
add
pop
cli
lods
push
mov
aam
mov
inc
jle
xor
testb
leave
popa
call
add
je
and
jns
push
out
jmp
in
or
jno
ds
push
adc
ss
pop
pshufw
inc
push
bound
pop
jb
adc
sbb
xchg
xchg
mov
in
mov
aaa
xchg
clc
cmpsb
mov
out
repz
imul
into
sub
mov
scas
ret
mov
popf
aaa
jg
clc
mov
and
xchg
test
inc
pop
jmp
repz
and
mov
fs
div
push
fcmove
enter
addb
test
stos
sub
cmc
testb
pop
jle
xor
xchg
push
test
mov
push
popf
inc
pushf
dec
cmpsl
icebp
dec
jle
loopne
fists
or
or
pop
lahf
mov
inc
jmp
jb
add
sub
push
mov
xor
scas
push
mov
or
scas
jl
jmp
pop
inc
out
cmp
arpl
and
movsl
xor
xchg
dec
les
mov
add
sbb
push
xor
sub
movsl
andl
xchg
sbb
push
mov
jmp
out
cmpl
pop
sub
out
mov
or
pop
cmp
xchg
inc
or
jbe
ja
mov
insb
loop
jne
jne
int3
jne
push
sub
adc
push
insl
mov
and
mov
and
pop
xorb
faddl
push
push
cmc
pop
and
pop
pop
mov
mov
add
add
add
and
iret
scas
daa
push
or
push
sti
jle
sub
loopne
jmp
test
xchg
test
xorl
xor
rclb
aam
push
and
sbb
push
insl
jle
imul
cltd
testb
cmp
xor
nop
push
cmpsl
adc
dec
add
xchg
data16
sbb
fwait
xor
notl
and
jmp
cmc
push
fstl
mov
push
add
inc
jae
es
push
cmpb
jmp
iret
outsb
fs
mov
push
enter
or
lods
cs
subb
xchg
jp
mov
ljmp
adc
mov
inc
pop
mov
mov
push
aad
cmp
inc
xchg
bound
xlat
ja
fistpll
pop
and
test
push
push
mov
push
sbb
mov
inc
push
sbb
dec
rcll
lahf
sub
mov
insb
add
dec
jmp
jne
lea
das
loopne
mov
dec
add
add
xor
mov
aaa
jnp
inc
add
dec
and
mov
mov
and
and
int
ss
cs
inc
and
xchg
or
les
pop
stc
mov
dec
mov
sub
pop
dec
cwtl
push
or
jne
fiaddl
adc
and
or
leave
inc
add
fcomps
lods
in
xor
xchg
mov
stos
dec
or
in
cbtw
cmpsl
daa
clc
pop
fadds
pop
push
push
mov
lcall
xchg
push
inc
or
pop
inc
push
add
sar
in
inc
gs
dec
pop
jmp
push
mov
pop
jle
sub
jmp
pop
popf
xchg
mov
pop
shrl
add
repnz
mov
mov
daa
dec
push
add
xchg
sbb
insl
add
xor
sbbb
cmp
pop
add
add
incl
add
jg
insb
or
jbe
mov
mov
icebp
or
pop
push
inc
sbb
call
and
je
ret
sub
pop
arpl
add
nop
add
cwtl
push
and
add
in
adcb
inc
and
cmpsl
xchg
push
ljmp
adc
shr
hlt
or
xchg
rol
pop
aaa
sub
int
push
sbb
loope
icebp
ljmp
call
icebp
mov
stc
movsl
pusha
dec
or
push
nop
in
or
sahf
cltd
icebp
add
pop
cli
int
and
mov
xor
dec
in
and
pop
stc
xor
mov
add
imul
int
out
mov
in
lock
push
mov
xchg
mov
sub
xor
and
mov
out
and
add
mov
push
mov
bound
push
je
fucom
cwtl
sub
sub
scas
add
mov
inc
xchg
pop
inc
or
dec
adc
xor
pop
cld
mov
lods
lahf
movsb
leave
cmp
inc
lods
adc
dec
leave
fwait
icebp
sbb
jne
jg
jae
cmpsl
mov
pop
adc
add
pop
adc
cs
jbe
stc
in
mov
fcoms
bound
mov
sbb
outsl
call
dec
or
lret
adc
outsb
roll
push
aas
push
lret
sbb
xchg
push
adc
outsb
fs
in
mov
out
xor
test
xchg
pop
stos
mov
mov
loopne
sbb
orb
lahf
xchg
add
push
nop
out
sbb
adc
mov
pop
inc
test
jmp
add
jae
aas
add
je
or
pop
add
mov
ret
inc
out
sub
cwtl
sbb
xchg
rol
mov
fcompl
hlt
mov
pop
push
ror
into
sub
repz
mov
inc
aaa
pop
mov
rolb
rcll
mov
mov
inc
add
sbb
push
mov
stos
push
jnp
jp
cmp
inc
xchg
add
shrb
adc
pop
fucompp
imul
fbld
and
push
pop
ret
jmp
out
mul
mov
lock
popf
fucomi
popf
cmp
icebp
jecxz
stos
lods
pushf
mov
sub
push
or
inc
xchg
sub
ffree
in
dec
xor
push
xlat
mov
ret
nop
and
repz
push
jmp
neg
add
mov
add
bound
mov
ljmp
xor
push
add
dec
dec
insb
ret
sbbb
add
or
pop
int
fisubs
inc
pop
rorl
call
ficompl
pop
arpl
or
cmpsl
das
xchg
fnstcw
pop
sub
sub
inc
push
mov
xchg
not
add
cld
mov
and
int3
out
ljmp
test
cmp
mov
xchg
inc
pop
addl
cmpsl
repz
lock
pop
xor
push
sbb
stc
pop
jns
dec
add
jmp
push
push
aam
jo
inc
xchg
or
pop
push
imull
xchg
and
pop
cld
push
clc
cli
pop
push
daa
mov
movsb
in
mov
lahf
cs
stos
aas
bts
lret
jbe
inc
filds
or
inc
out
popf
jns
push
pop
add
dec
stos
sti
insb
sub
and
jle
jne
pop
pop
fnop
sub
sbb
mov
pop
int3
cmp
lcall
iret
xor
jle
cmp
insb
xorl
repz
xlat
jno
mov
cmp
cwtl
clc
jmp
iret
pop
bound
mov
dec
test
push
or
mov
jns
mov
ret
ss
icebp
loope
push
cs
stos
sub
sub
mov
ja
addr16
imul
outsl
lock
fidivl
sub
mov
push
sahf
fcoms
in
cmp
loopne
dec
mov
imul
test
cmp
dec
adc
and
daa
iret
mov
cmpsb
fisubs
js
jns
and
inc
stos
jmp
xchg
mov
xor
cmc
mov
out
leave
fsubrl
xchg
sbb
sub
mov
adc
push
ss
push
aas
xchg
aas
in
scas
sub
js
lahf
out
roll
lret
pop
xlat
rorb
mov
add
xor
add
sbb
push
icebp
mov
popf
in
cmp
mov
adc
in
mov
fdiv
sbb
imul
mov
jg
lods
jno
cmp
in
add
push
orl
and
loope
dec
lods
adc
xor
adcl
xchg
mov
sub
jmp
push
mov
adc
dec
cmp
pop
jl
loop
inc
jmp
stc
imul
xor
cmp
push
push
mov
dec
shll
cli
mov
jne
inc
jmp
test
xchg
pop
xlat
or
shlb
pop
scas
lea
mov
dec
xorl
insl
jo
add
mov
xchg
jmp
mov
jae
cmp
cmp
mov
or
and
ss
ret
add
sbb
cmpl
lods
pop
es
xchg
scas
std
daa
push
push
xor
sbb
inc
cwtl
daa
adc
bswap
mov
jnp
pop
mov
push
idivb
iret
pusha
mov
clc
out
bound
sub
popa
imul
sbb
ffree
stos
jmp
sbb
and
or
xor
pop
cmpsl
es
adc
push
add
test
inc
pop
imul
mov
inc
rorl
cmc
out
mov
dec
rol
aad
mov
jle
or
cld
loopne
pop
add
cmc
inc
test
dec
and
cmp
pushf
dec
cwtl
jnp
dec
and
inc
pop
mov
xchg
jl
fcmovne
and
inc
xchg
imul
or
mov
add
pop
roll
push
pop
or
das
rcrl
lea
cmp
push
jge,pt
add
mov
mov
inc
lea
pop
psubsw
stc
cmp
push
nop
pushf
jnp
rol
add
push
mov
orb
dec
mov
frstor
inc
mov
push
push
cmp
dec
add
or
dec
sahf
loopne
decw
mov
mull
inc
loopne
mov
sbb
ja
in
push
test
xchg
cmp
stos
mov
cld
adc
scas
loopne
jnp
push
loop
lods
add
push
mov
roll
pushf
fstps
add
cld
mov
test
jge
aam
in
movsb
sbb
xlat
push
sub
cmpsl
mov
negl
xchg
push
jle
jnp
or
lea
mov
push
sbb
or
imul
stos
cmpsl
popa
lcall
jle
jg
jb
out
repz
mov
sub
sbb
out
repz
fidivs
xlat
insl
mov
nop
mov
xor
ljmp
aam
push
add
push
fwait
pusha
or
inc
add
int3
sub
xor
mov
add
or
fbstp
pop
repz
xor
out
jmp
sub
rorb
pushw
dec
sub
push
push
add
xchg
sub
dec
mov
inc
andb
add
testl
rcll
pop
add
bound
adc
sti
inc
cltd
js
lds
pop
div
mov
psrlw
inc
jge
ds
cli
mov
jns
mov
sbb
pop
push
mov
and
mov
mov
ds
cmp
hlt
dec
xchg
pop
fistl
jmp
in
mov
xlat
xchg
lods
movsl
sub
lock
xor
lods
xchg
mov
bnd
jno
enter
call
ljmp
pop
mov
movsb
mov
pop
add
addr16
shlb
stos
pop
cmp
cvtps2pi
xchg
and
or
or
or
push
in
xor
test
popa
or
mov
rorl
pop
insl
cltd
push
or
loope
iret
mov
mov
jmp
sub
rolb
jmp
cmpb
sub
pop
inc
scas
popa
lea
loop
mov
mov
mov
ljmp
gs
pop
leave
jmp
in
push
sbb
arpl
mov
mov
popf
xor
daa
out
nop
pushf
inc
cs
imul
or
inc
clc
or
clc
sub
fldl
push
push
xor
mov
pop
int
pop
shl
fwait
repz
sbb
rcr
scas
xchg
stos
pop
testl
nop
cmpsl
jge
pop
xchg
jbe
ljmp
jne
pop
jmp
lods
add
icebp
and
cmp
push
adc
in
mov
les
push
cmpb
dec
push
sahf
lret
addl
hlt
sub
mov
pop
ret
or
jg
fbstp
cmp
mov
push
xchg
or
cmp
outsb
mov
imul
dec
push
or
pop
in
loop
and
inc
or
stos
insb
add
jns
xchg
lock
cltd
add
xchg
jecxz
sub
out
sub
sub
iret
pop
jmp
lds
xor
cs
fmull
pop
ss
push
push
mov
aam
outsb
imull
cmp
sub
mov
cmp
mov
sarb
push
sub
inc
inc
loopne
in
and
daa
lds
add
jb
or
idivb
imul
or
jge
add
pop
addl
loope
test
pushf
jecxz
xchg
xchg
ffreep
fisubl
jnp
add
or
testl
or
rcl
dec
cmc
flds
inc
in
cs
push
mov
ds
mov
aaa
xor
mov
push
in
or
xor
nop
or
jmp
mov
std
bound
loopne
pop
jecxz
cmpb
lcall
lret
fidivs
popa
pop
or
add
jg
ja
add
push
pop
inc
sub
pop
ljmp
push
jb
shlb
fldenv
fiadds
add
ja
dec
sbb
mov
cltd
push
iret
push
sbb
adc
mov
out
add
not
xor
jl
ja
fisttps
mov
jp
nop
mov
std
mov
add
shrl
mov
jmp
aam
es
push
testl
cld
stos
xor
fwait
ja
das
jnp
js
cld
popf
mov
dec
add
sub
or
inc
add
iret
loop
decb
jg
je
dec
dec
mov
or
dec
jge
stos
cwtl
sub
lds
in
push
push
inc
xchg
sub
push
out
cmp
and
test
aas
inc
sub
lods
pop
mov
dec
push
test
jnp
sbb
shlb
sti
xchg
dec
addr16
sub
cmpsl
sti
add
stc
pop
push
dec
lcall
and
push
test
adc
lock
cmp
mov
add
push
jmp
mov
mov
pusha
outsl
insl
in
pop
xchg
aad
ja
fcmovu
mull
adc
fwait
push
pusha
andb
or
dec
cmp
jmp
test
pop
push
pop
add
mov
inc
dec
xor
sarl
loop
xchg
jne
add
inc
btr
inc
insl
lcall
push
fisttpll
sar
mov
push
jle
ret
jge
rcrl
inc
jno
ja
jge
push
and
cmp
and
or
mov
mov
sub
push
sub
add
rcrb
add
dec
add
cmp
mov
push
js
psadbw
dec
out
mov
les
loopne
xor
call
or
sub
mov
jmp
das
mov
test
fs
fs
cmp
sub
adc
pop
sub
mov
cwtl
gs
inc
add
or
stos
movsl
scas
xor
jmp
cltd
xlat
fs
dec
inc
mov
pusha
jmp
cmc
ljmp
icebp
push
into
dec
sbb
cmp
daa
mov
pop
pop
mov
jnp
adc
loopne
xor
pusha
fxch
adc
aam
mov
sub
loopne
pushf
inc
mov
dec
pusha
mov
aaa
sub
jmp
mov
mov
sbb
push
or
lret
pop
stc
leave
jb
sbb
and
push
mov
aam
scas
in
jne
aam
ret
ja
or
movsb
or
mov
lock
jns
scas
inc
or
jmp
inc
pop
or
das
or
push
loope
jmp
xchg
sub
cli
insb
xor
das
fistpl
inc
sbb
mov
scas
shr
push
repnz
push
cmpsl
push
cltd
daa
inc
andl
sbb
fsubs
shrb
and
out
add
sub
and
test
xchg
inc
xchg
sub
xor
loop
push
push
inc
jmp
mov
shlb
ss
dec
mov
lret
dec
push
adc
popa
cmp
sahf
stc
or
rorl
add
sti
push
xchg
outsl
testl
es
imul
mov
imul
into
in
aas
std
jae
push
pop
cmp
sbb
or
dec
add
outsb
push
cmc
inc
pop
inc
mov
aaa
jg
sub
mov
and
inc
push
loop
push
es
mov
mov
pop
inc
sbb
mov
lods
adcb
rcl
out
hlt
xchg
insb
cmpsl
sub
dec
addl
sub
pop
jno
loop
add
jb
cmp
jmp
negl
pop
and
xchg
mov
push
stc
pusha
mov
add
fstps
icebp
not
repz
mov
int3
mov
sbb
push
loopne
and
imul
adc
ljmp
ds
pop
dec
add
xchg
pop
inc
in
dec
int
mov
mov
sbb
inc
mov
das
in
iret
or
lock
add
push
nop
mov
jp
mov
cmp
insb
andb
lahf
daa
testl
jecxz
ljmp
lcall
das
xor
push
pop
in
jmp
test
fiaddl
stos
icebp
or
or
das
adc
imul
loopne
ret
ret
xchg
cld
stc
outsl
jae
cld
pop
mov
add
mov
pop
xchg
mov
sub
fwait
out
imul
jge
mov
ret
dec
xor
addr16
xor
ficompl
adc
daa
jmp
pusha
ret
sbb
fwait
adc
pop
call
sub
mov
dec
sub
xchg
out
enter
jmp
push
lret
call
jp
cmp
jae
add
inc
push
test
pop
mov
int
test
popf
ja
dec
daa
jmp
shll
add
in
xor
jmp
repz
adc
mov
push
aad
adc
xor
cmp
inc
test
mov
sub
xchg
sub
pop
sub
wrmsr
mov
nop
pop
mov
inc
loopne
lock
sub
shrb
add
mov
push
and
xor
in
cli
cmpsb
nop
add
dec
add
test
outsb
inc
and
or
or
aaa
loopne
jmp
xor
push
out
cmp
les
mov
xor
mov
jnp
push
mov
push
inc
xor
iret
call
test
insb
gs
das
xchg
jle
ficoms
xchg
mov
ret
push
or
adc
push
jno
xlat
push
adc
into
jmp
add
dec
dec
mov
in
out
sub
mov
dec
or
and
or
cmp
sarl
mov
and
and
pop
push
sub
push
pop
jg
bound
cltd
aam
push
mov
push
adc
loope
add
pop
jns
push
mov
jmp
fidivrs
xlat
gs
std
xor
adc
jmp
dec
sub
test
lret
xchg
pusha
inc
lcall
cld
adc
loope
dec
push
outsb
adc
jae
testl
adc
lret
int3
out
push
dec
das
mov
pop
push
jmp
imul
sti
and
dec
sbb
rolb
add
je
or
pop
push
cmp
test
jmp
push
push
pop
xor
pop
push
push
or
pop
pop
cli
aad
xchg
mov
cwtl
gs
int
mov
cli
popa
hlt
pushf
push
jnp
push
jmp
mov
arpl
lock
xchg
jmp
xor
testl
dec
scas
pushf
dec
jmp
out
sub
lods
ret
sbb
fsubrs
xchg
outsl
fnsave
or
add
adc
cli
pusha
dec
sbb
imul
mov
mov
jae
es
or
push
rorl
mov
incl
addr16
sub
dec
inc
add
push
push
enter
push
cmpb
adc
lods
or
and
jnp
xor
mov
pop
not
out
cmp
dec
jns
xchg
loop
stc
sub
dec
sub
or
fbld
dec
dec
add
add
fwait
ds
cmp
mov
pusha
jge
sar
mov
aam
mov
jo
insb
xchg
cmpsl
pushf
jno
bound
sti
sti
pop
push
jle
and
imul
jnp
fistps
rolb
xor
mov
loope
jb
add
or
adc
mov
inc
rolb
ljmp
push
cmp
stc
adc
ficompl
arpl
insb
push
adc
sti
add
jo
scas
int3
leave
test
loope
test
dec
test
negb
pop
inc
push
out
out
nop
movsb
mov
leave
idiv
sub
sub
dec
lret
add
or
push
mov
or
filds
cli
add
sub
ficoml
mov
imul
jge
xchg
sbb
das
xor
push
mov
xchg
rcrb
subb
jnp
int3
jno
xchg
repnz
sbb
outsl
lret
sub
int
fidivrs
mov
cmp
mov
jmp
mov
add
xor
ljmp
sbb
aam
push
repz
push
pushf
fcmovnb
push
jo
push
push
pop
jmp
jp
lea
sub
add
ljmp
add
inc
outsb
ljmp
xor
ret
mov
and
mov
ret
sbb
xchg
xor
jp
cmp
jecxz
dec
dec
dec
push
lcall
add
movsb
daa
jmp
push
ficoms
ficompl
subb
inc
orb
in
push
push
push
add
or
cli
cld
dec
inc
ds
add
or
or
repz
das
jecxz
or
ret
pusha
add
adc
or
les
loop
fldt
xchg
sbb
hlt
xchg
inc
cmp
mov
sbb
sbb
andl
and
push
jb
inc
or
pushf
xchg
pop
mov
loop
testl
mov
cmp
inc
pop
pop
daa
push
push
jl
jb
mov
fdivl
mov
call
inc
xchg
mov
test
pop
add
mov
mov
push
test
loopne
or
jmp
jp
sahf
dec
jo
pop
sub
inc
adc
stos
add
jno
in
jbe
ds
jmp
mov
fsubrs
adc
add
int
pop
cmpsl
jmp
ljmp
sub
inc
out
js
mov
and
xor
push
xchg
inc
inc
fucomip
imul
aad
fnstcw
das
cli
loopne
nop
xchg
cs
sbb
iret
cmp
mov
pop
dec
add
inc
inc
adc
in
mov
loop
or
xchg
xor
adc
movsb
dec
cmp
out
mov
adc
pop
mov
frstor
lods
push
add
les
xor
mov
ret
pop
jbe
mov
das
push
pop
nop
jp
dec
jl
sub
pusha
aam
gs
repz
adc
js
movsb
or
add
pop
push
filds
inc
xor
data16
add
lods
push
jb
out
push
and
push
mov
xchg
jmp
mov
and
fcom
mov
in
outsb
data16
inc
fnstenv
dec
push
adc
push
jg
aad
ja
add
insb
mov
xor
lret
jae
mov
push
loop
pop
pushl
add
jmp
leave
jns
insb
jno
cmp
push
push
or
inc
xlat
xor
jae
push
testl
pop
jb
std
mov
adc
bound
push
xchg
add
pusha
sub
pop
pop
pop
mov
mov
aad
cwtl
xchg
dec
rcrl
arpl
notb
adc
jmp
pause
jmp
divl
sti
pop
mov
pop
push
sub
pop
dec
cmpl
xor
push
mov
mov
pop
ja
sub
jg
pop
dec
lds
add
aas
jns
lock
mov
mov
mov
jmp
sub
ja
xchg
in
xchg
test
cmp
out
insb
imul
rcrb
dec
js
cmp
cmpb
shrl
pop
mov
out
cmp
and
inc
push
sbb
push
or
push
push
nop
dec
push
sub
jmp
mov
ja
mov
mov
cmp
loop
leave
fists
in
xorl
xchg
jnp
shlb
out
push
sub
xor
mov
sarb
loope
aam
loope
stos
add
inc
mov
adc
sub
jnp
stos
add
push
mov
imul
icebp
inc
pop
pop
xor
xchg
cli
pop
cltd
push
pushl
sbb
jns
hlt
mov
insl
xor
scas
mov
adc
sub
mov
in
lds
inc
lret
mov
pop
pop
jmp
mov
jnp
lds
das
lret
lods
xchg
jbe
sbb
push
or
push
add
inc
pop
push
test
ficomps
out
mov
xchg
call
push
mov
hlt
rorb
dec
adc
lcall
loopne
ljmp
add
adc
dec
mov
inc
sub
pop
xchg
pop
adc
out
add
xor
loop
sub
adc
jl
mov
add
sub
test
pop
ljmp
xor
arpl
mov
jmp
push
ljmp
dec
xchg
add
shr
fcomps
pop
ds
inc
sbb
push
and
jmp
adc
jbe
adc
and
inc
nop
roll
sub
cs
jp
dec
dec
adc
in
pop
rorl
loop
xchg
addr16
dec
cmp
add
push
inc
arpl
xchg
in
popa
sub
ljmp
xor
pop
daa
xor
pop
and
or
outsl
sub
bound
xor
xchg
addb
bound
mov
fucomip
insb
add
jnp
popa
jg
xchg
mov
dec
mov
xor
psrlw
add
sti
inc
cmp
aas
loop
xchg
push
test
out
aam
fldcw
loopne
xchg
sti
aaa
loope
xor
cmp
cmp
jmp
xlat
js
int
ja
lock
adc
mov
sub
gs
fisttpl
fnsave
inc
push
in
cmpsb
pop
push
add
dec
jge
cmp
in
adc
stc
lret
test
mov
out
and
loop
mov
jne
push
push
adc
mov
pusha
jbe
ljmp
clc
bound
pop
add
xchg
and
jp
pusha
jecxz
shrl
add
and
add
out
pause
dec
icebp
cmp
inc
cld
jo
gs
jns
adc
pop
pop
sbb
lods
xor
xchg
testl
pusha
adc
fiaddl
pop
push
mov
pop
push
xchg
in
leave
xchg
imul
and
ds
pop
ljmp
pop
les
scas
sub
clc
inc
inc
push
dec
pop
stc
outsb
adc
xchg
jmp
xor
mov
or
mov
pop
pop
push
push
sub
sub
add
adc
xor
adc
mov
cmp
in
loop
cmpsb
fcoms
cld
les
sti
fs
cli
add
sub
push
sub
ja
pop
push
push
jmp
push
pop
mov
lahf
push
push
and
and
or
mov
pop
xchg
cmp
cmp
popf
jp
dec
mov
adc
push
pop
mov
mov
jmp
cli
fidivs
add
sub
test
cmpps
ja
jp
or
sahf
cmc
and
fisttpll
cltd
cwtl
adc
cmp
pop
popf
notl
xchg
inc
lods
fldl
or
jmp
inc
and
pop
mov
std
cmp
push
dec
sbbb
or
mov
loope
popf
sub
inc
sti
pop
push
push
jge
adc
adc
add
scas
stos
clc
lds
popf
dec
aad
push
cld
xor
outsb
sbb
int
fiaddl
in
add
or
jbe
jg
rorb
out
cmpsl
add
ret
jbe
pusha
inc
push
cmc
dec
sub
jmp
js
push
jg
in
pop
hlt
repnz
clc
and
mov
test
adc
mov
cltd
add
icebp
shrb
iret
dec
mul
push
mov
fisubrl
neg
inc
and
pop
sub
enter
cmp
std
push
or
mov
movsl
add
orl
mov
jmp
cld
adc
dec
lock
sub
dec
cmc
addb
pop
int3
lret
fnstenv
popf
test
and
push
test
push
ja
jecxz
cld
mov
clc
add
xor
pop
pop
stc
frstor
xor
sub
ficoms
fcomps
add
jbe
push
mov
aaa
adc
lret
lods
aad
out
imul
jmp
add
xor
and
imul
jge
sbb
decb
lret
push
jo
lods
push
sub
push
dec
pop
adc
mov
adc
push
xchg
push
cmc
ja
das
pop
xchg
mov
lock
mov
filds
xor
sbb
push
cmc
fiaddl
pop
dec
jne
xchg
sahf
cmpsl
test
daa
ds
dec
cld
in
stos
jo
mov
push
rclb
xor
push
loopne
aam
clc
ja
adc
sub
inc
icebp
cmp
mov
test
inc
push
mov
ja
rolb
cld
add
sub
xchg
int
dec
jmp
pop
jecxz
jmp
xchg
xchg
enter
loop
sub
icebp
or
adc
lret
dec
xchg
das
xchg
and
pop
push
fcomps
lods
mov
or
out
sub
add
pop
jecxz
sbb
add
or
lods
imul
push
out
push
fildll
clc
rcr
pop
jmp
mov
inc
fldl
aaa
cvtps2pi
les
jge
xor
mov
sub
sbb
mov
repz
and
inc
add
jge
inc
mov
and
in
cld
mov
cmp
arpl
fldl
xor
mov
hlt
push
jl,pt
sti
add
push
jmp
out
scas
jmp
xchg
nop
add
enter
fdivl
mov
out
call
in
push
xchg
sbb
je
xor
jo
pop
inc
add
pop
out
adc
out
adc
pop
mov
inc
and
push
mov
add
push
add
jne
xchg
stc
mov
fsubrs
cmp
adc
xor
pop
or
lock
cwtl
pop
jne
mov
sbb
popf
icebp
fldt
mov
sar
mov
push
push
push
push
pop
test
mov
push
inc
jge
lret
fstp
loopne
pop
jae
adcb
xchg
inc
push
dec
cs
xchg
and
roll
jne
pusha
push
mov
adc
adc
xchg
mov
add
add
jno
inc
push
cmp
or
loopne
nop
add
and
mov
test
bound
ficompl
and
xchg
sub
mov
pop
fwait
xor
add
add
xor
mov
shr
out
movsb
lcall
xor
rclb
or
sub
inc
aas
sub
lock
rcrb
cmp
xchg
xor
add
sbb
in
or
add
dec
sbb
cmp
movsl
jno
lahf
push
pop
mov
lret
loope
pop
imul
inc
jge
mov
cmc
sbb
leave
nop
into
outsl
test
push
add
push
repz
ret
mov
hlt
aaa
pop
mov
les
leave
or
sub
bound
dec
mov
out
outsl
add
sarb
add
ljmp
mov
jge
es
divb
xor
sub
add
into
cmp
shrl
push
sbb
inc
xlat
out
in
mov
jmpw
int3
xor
out
nop
add
and
adc
leave
mov
loop
sub
dec
ficompl
pop
xchg
xchg
sub
add
push
push
dec
push
lea
dec
jbe
xor
gs
pop
pop
sti
sub
shrb
or
aad
fadds
fnstsw
mov
cmpsb
fld
dec
push
fisttps
sub
or
pop
xor
xor
adc
movsl
in
jno
dec
fisttpl
stos
lds
inc
mov
cmp
ss
or
xor
lret
imul
cmp
jmp
out
push
mov
and
xor
add
add
sub
outsb
das
outsb
push
dec
jbe
jl
pop
add
pusha
pop
loope
jno
cs
jns
mov
mov
jge
nop
or
adc
pop
jl
adc
jne
jle
sub
inc
dec
and
ret
inc
adc
and
pop
sbb
pop
sub
fildl
and
fwait
adc
mov
add
outsb
sbb
dec
push
pop
sbb
dec
push
frstor
adcb
orb
divl
hlt
mov
shl
inc
sbb
mov
repnz
bsr
push
xor
ffreep
scas
mov
jl
pop
xchg
bound
scas
mov
cmp
mov
jnp
hlt
add
pop
adc
pop
ret
inc
lock
inc
jo
rorb
dec
adc
mov
stos
add
inc
sub
pop
xlat
in
fs
hlt
or
push
cltd
aam
std
sub
dec
in
cs
outsl
mov
jnp
jle
pop
stc
adc
or
add
lret
roll
lds
test
pop
aam
rclb
mov
subl
mov
test
pop
push
gs
in
add
out
in
jnp
fidivs
je
push
shr
test
or
add
sbbb
add
jle
sub
out
add
sub
or
xor
add
sub
pusha
scas
push
lahf
pop
pop
out
movsl
jnp
adc
jl
sbb
jmp
xor
push
mov
sbb
sub
dec
jp
and
xorb
fs
pop
xchg
jle
adc
xor
jbe
xchg
push
add
or
mov
mov
pop
fs
cmp
or
cmp
imul
push
mov
adc
add
sbb
mov
inc
mov
insb
jmp
adcl
fs
ret
jmp
repnz
and
ds
pop
xor
mov
push
ja
js
test
lods
shrb
add
add
into
push
mov
pop
mov
test
cs
sub
pusha
shlb
das
out
mov
neg
inc
add
jns
outsl
lds
pop
xor
and
jmp
mov
xchg
arpl
orl
push
cmp
neg
mov
jge
aaa
in
frstor
enter
rorl
add
or
loop
add
js
in
xchg
or
dec
adc
push
push
add
push
mov
jae
decb
add
js
sub
int
icebp
les
inc
jno
orb
scas
sbb
pop
pop
scas
xor
mov
enter
ret
push
inc
movsl
ret
scas
inc
loope
mov
pop
cmp
and
dec
mov
dec
jge
xor
aad
xor
arpl
aam
add
cmpsl
pop
cld
int3
icebp
jmp
out
loope
das
xor
sub
cmc
lret
add
scas
je
dec
daa
push
mov
mov
mov
cmp
mov
or
adc
pop
sbb
je
notl
push
push
fcmovbe
orb
jmp
jno
sbbl
cmp
xor
pusha
push
dec
imulb
pop
test
or
pop
decl
mov
push
nop
mov
xor
aaa
or
push
mov
add
jmp
jo
xor
bound
repnz
and
mov
outsl
ja
xchg
sbb
int
stc
push
push
dec
pop
into
aad
ret
add
in
jecxz
cmpb
lods
and
aam
inc
out
decb
movsb
sbb
xchg
or
mov
or
test
pop
fldl
add
call
push
lock
lahf
xchg
push
jnp
notl
in
jmp
jns
test
pop
andb
jg
mov
mov
add
cmp
lds
cmpsb
jnp
outsb
dec
push
pop
shll
push
pop
add
xor
clc
add
jp
dec
cmp
dec
ja
int
ss
jmp
dec
mov
or
add
loope
lock
pop
pop
pop
inc
adc
inc
jnp
dec
add
adc
inc
jno
lahf
inc
dec
sub
test
aas
pop
in
sti
jmp
xchg
shlb
clc
shll
pop
and
shlb
pusha
test
and
loop
inc
pop
daa
data16
std
inc
aas
or
mov
adcb
jns
outsl
cmpsb
sbb
mov
dec
push
sbb
cmp
jne
mov
push
adc
ret
mov
add
ds
pop
loop
add
sti
cmp
push
mull
mov
pop
mov
fldl
push
inc
adc
pop
jg
cmp
and
mov
mov
repz
rorl
sub
or
pop
push
add
adc
nop
or
pop
call
cmp
sbb
fsubp
cs
add
idiv
pop
decb
ljmp
fstps
inc
sub
xchg
repnz
mov
sti
inc
push
mov
mov
jns
pop
mov
pop
pop
pop
imul
lods
fistps
sti
xor
xchg
or
inc
or
xchg
insl
inc
xor
test
cmp
loopne
in
stc
sbb
jmp
loop
sub
fists
dec
inc
inc
push
add
shlb
outsb
repz
xor
jg
add
push
mov
xchg
bound
push
arpl
test
mov
inc
sub
inc
mov
daa
xchg
mov
flds
out
out
cld
in
sarb
lret
jmp
push
inc
into
subl
and
add
add
mov
mov
dec
push
inc
and
dec
cmc
push
add
pop
jne
pop
fcomps
loopne
add
jbe
cld
inc
push
loope
cmp
fiaddl
mov
iret
push
nop
sar
ja
shr
adc
sub
repnz
or
or
mov
lds
cwtl
leave
mov
ds
mov
jle
xchg
add
mov
jno
mov
cmpsl
inc
inc
clc
add
push
mov
push
push
mov
xchg
mov
pop
fsubr
lock
icebp
jmp
push
cmc
adc
repnz
jne
mov
add
mov
nop
add
ss
cmp
xor
push
xlat
into
sub
mov
stos
cmp
shlb
out
rorl
adc
sub
jle
dec
daa
pop
fnsave
leave
jmp
cmc
inc
mov
pushw
int3
imul
std
jg
sub
or
mov
sub
pop
jo
push
lret
push
xchg
push
ret
popf
lods
cmpsb
jmp
mov
xor
jb
adcl
inc
mov
in
ja
dec
lods
js
mov
testl
popf
fstl
es
pop
out
call
pop
das
mov
jle
pusha
movsl
je
pop
dec
pop
adc
icebp
pop
dec
xchg
xor
sbb
or
fucomip
add
or
mov
loop
jmp
into
or
cmc
outsl
orl
mov
adc
outsl
add
lcall
and
jne
adc
lods
les
sbb
mov
and
sub
mov
dec
cmp
iret
or
fsubs
popf
pop
sbb
push
pop
add
add
cld
fcompl
pop
adc
out
mov
jmp
mov
sub
or
push
pop
test
fisubl
jmp
enter
lds
push
push
pusha
or
out
js
dec
invd
and
pop
sub
mov
sbb
stos
xchg
and
popf
fs
loopne
cmp
and
sub
xor
or
lahf
push
movsb
jp
rorb
or
add
loopne
add
pop
push
dec
fnstenv
stos
add
popf
test
hlt
mov
cli
mov
lods
addr16
mov
cld
add
xchg
xchg
jmp
dec
test
mov
ret
ret
cmp
push
xchg
sbb
fistl
daa
and
sbbb
sub
mov
in
push
repnz
push
pop
pop
cmp
jge
daa
popl
fldl
div
sub
mov
subl
push
fs
pop
pop
aad
test
pop
shrb
orl
push
push
std
adc
push
int3
dec
cli
scas
sub
sbb
pop
sbb
cmpsl
js
mov
jno
cmpb
stos
adc
sti
mov
dec
lods
enter
test
cmpsb
push
dec
mov
popa
addr16
mov
push
or
mov
or
repnz
in
or
mov
mov
fimull
cmp
jne
add
insb
jae
jmp
inc
push
cmp
in
ds
sbb
cld
xchg
lahf
cwtl
cmp
rcrb
and
fcmove
jg
or
rcrl
testl
pop
aas
push
push
lahf
push
ret
sub
loop
jg
mov
test
sahf
out
cmp
jp
lret
add
dec
and
inc
pop
inc
stc
insl
loope
add
inc
push
pop
mov
push
push
mov
loope
mov
push
adc
inc
cmp
out
inc
push
xor
ficoms
and
repnz
negl
stos
add
clc
repz
jno
inc
dec
ret
jne
addl
push
mov
xor
lret
or
loopne
fisubrs
mov
pop
jmp
mov
addr16
push
push
in
enter
cmp
jmp
shrb
jecxz
call
pop
push
adc
cmp
sub
jmp
add
jbe
or
loop
dec
mov
loop
or
add
push
xchg
insb
bound
mov
xchg
jle
arpl
jge
mov
call
inc
sbb
and
and
mov
add
outsl
ret
jg
insl
mov
adc
subl
nop
loopne
sub
mov
dec
push
jle
adc
into
or
jl
scas
push
mov
lret
pop
dec
roll
in
dec
pop
jmp
fcompl
aas
lahf
push
rcll
inc
or
push
or
or
stc
or
orb
dec
pop
xchg
adc
mov
xor
neg
out
inc
jbe
ret
jmp
sti
adc
or
mov
pop
xor
jmp
jns
push
jmp
sti
adc
stos
mov
or
stos
mov
movsl
and
orl
inc
fadds
and
mov
movsb
fld
les
push
pop
int3
out
mov
or
pusha
inc
jg
mov
or
imul
rolb
aas
daa
pusha
loop
push
loopne
sarl
sbb
pop
and
xor
mov
nop
adc
pop
lret
and
and
sub
pop
loopne
negl
cmc
add
mov
and
cli
mov
mov
add
mov
jmp
prefetchnta
adc
pop
or
mov
or
jmp
mov
les
mov
pop
mov
pop
cmp
pop
stos
addr16
fstl
in
dec
orb
psubq
shr
jns
int
imul
xchg
in
push
mov
pop
push
daa
push
or
pop
dec
daa
or
loop
fbld
xchg
notl
jl
jno
jmp
or
adc
inc
mov
icebp
push
hlt
pop
mov
push
jmp
dec
ret
subl
cmpsb
ds
mov
and
sbb
sti
mov
xchg
jmp
push
jge
mov
shll
adc
mov
jp
push
rep
in
jecxz
inc
fldcw
loopne
ret
inc
pop
inc
test
and
xor
and
outsl
cmp
andb
fcoms
sub
add
out
dec
ret
adc
dec
cmc
mov
or
das
adcb
in
mov
test
mov
ret
push
mov
sub
add
adc
in
imul
or
add
jg
pop
insb
mov
mov
add
mov
sub
mul
mov
add
neg
cmp
add
pop
aas
xor
xor
add
popa
addl
rcr
aam
pop
push
inc
add
shl
and
dec
mov
cmp
adc
pop
mov
or
mov
test
dec
jmp
xor
call
imul
test
and
pop
add
in
jns
dec
xor
inc
dec
aas
scas
mov
jb
imul
mov
loopne
out
loopne
mov
insb
inc
lret
dec
push
inc
pusha
inc
out
in
lds
jmp
cltd
adc
mov
or
xchg
xor
mov
cmp
push
rclb
ficompl
dec
pusha
cs
mov
lahf
lret
xor
lods
pop
aas
testb
pop
push
mov
push
shld
orl
add
shr
push
ret
add
jae
lea
ds
mov
adc
mov
mov
or
sbbb
push
mov
and
cmc
mov
not
sub
fldt
xchg
pop
sahf
movsl
dec
mov
cmp
int3
cmpb
bnd
lods
stos
sub
add
dec
subl
push
loop
inc
addb
add
or
dec
push
adc
add
mov
dec
or
pop
sub
scas
cmpb
jmp
jmp
push
pop
repnz
dec
xchg
push
add
scas
aam
add
pushl
nop
cmp
pop
push
xor
ljmp
das
loope
jmp
sub
pop
push
neg
ret
test
xchg
orl
outsb
stc
pop
jns
daa
mov
and
jo
mov
outsl
mov
add
and
arpl
mov
inc
add
jne
cmc
ret
mov
jle
aaa
push
rorl
mov
xor
inc
and
push
cmp
cmp
sub
push
jo
out
pop
negb
xchg
inc
scas
or
add
out
jmp
mov
mov
mov
mov
call
and
mov
and
imul
push
cwtl
pop
sbb
mov
ficompl
and
pop
mov
fdivr
arpl
inc
xchg
fiadds
aaa
cmp
adc
cmp
pushf
add
call
lods
fldl
push
xor
sub
pop
adc
dec
mov
adc
and
mov
push
mov
lods
mov
daa
dec
push
sbb
ds
mov
cmpsl
lods
std
push
mov
in
push
sub
adc
inc
dec
jmp
pop
sbb
cs
arpl
scas
leave
add
pushf
ret
push
cli
fs
repnz
xor
out
cmpsb
pop
test
xchg
loope
and
or
sbb
sub
fstl
push
jbe
repz
sbb
push
sbb
mov
pop
shrl
call
cli
mov
pop
ljmp
nop
jmp
pop
insb
push
push
movsb
in
pop
in
mov
push
insb
ss
sub
dec
mov
and
pop
cmp
adc
dec
scas
cmpsl
sti
nop
les
adc
ja
rcrl
inc
xor
idiv
sub
cs
add
or
mov
pop
pop
int
pop
sub
sub
add
rolb
daa
adc
daa
jbe
jb
xor
out
dec
sub
lock
hlt
dec
dec
pop
jmp
std
pop
push
jno
mov
and
xor
imul
les
test
negl
repz
mov
mov
dec
ret
cld
iret
and
mov
dec
rorl
stos
mov
adc
mov
sbbb
mov
stos
dec
inc
or
pop
add
fisubs
aam
cmp
lock
pushf
push
ja
sub
push
adc
dec
adc
inc
sub
nop
fwait
sbb
in
lock
sub
push
sub
xorl
mov
jo
ret
gs
sub
sub
dec
scas
int3
push
push
add
inc
inc
inc
jmp
notb
pop
push
rol
push
xlat
in
add
rorb
rdtsc
pop
jmp
sbb
push
hlt
sub
add
fdivrs
or
fidivrs
jmp
pop
out
cltd
jge
das
sub
rcll
pushw
lcall
adc
scas
icebp
pushf
sub
lds
and
add
mov
adc
nop
iret
repnz
scas
inc
les
jb
mov
xchg
or
popf
repnz
jle
lock
push
mov
jae
lcall
test
jg
or
lcall
lret
mov
or
xorl
push
in
cmpsl
mov
push
mov
adc
stos
pop
sbb
and
add
ret
scas
ret
je
adc
mov
or
stos
jne
lock
in
cs
jnp
ret
sub
sub
sbb
fldl
push
adc
test
push
testb
inc
or
push
jmp
and
lods
adc
cmp
or
iret
jb
fwait
dec
inc
cwtl
mov
xor
ljmp
std
shr
sub
aam
inc
lahf
and
enter
lods
scas
std
loope
jmp
adcb
cmp
es
scas
add
into
sub
push
pop
sarl
push
lcall
xor
pop
mov
add
push
dec
xorl
or
aas
mov
jge
icebp
xchg
std
xor
xor
js
test
xchg
int
adc
adc
lea
lods
xlat
cs
pop
mov
inc
add
pop
and
xor
pop
jnp
mov
mov
jmp
xchg
aam
push
aas
jp
aas
pop
in
ret
mull
and
sub
aas
dec
and
rolb
jp
xor
jmp
cmp
pop
mov
loope
mov
mov
dec
mov
or
inc
dec
push
shlb
inc
mov
dec
test
mov
jb
add
mov
fimull
movsb
cld
pop
mov
jno
jmp
lahf
sub
push
xchg
or
stc
out
lods
pop
cltd
das
push
cmp
mov
pop
push
movsl
inc
pop
add
nop
pop
inc
shr
xor
popw
repz
cli
mov
fprem1
jb
pop
add
addb
adc
aad
movsl
mov
loop
fiaddl
jmp
or
mov
and
pop
insb
out
lahf
repnz
push
and
mov
movsb
pop
mov
pop
fwait
cmpsb
jg
call
fs
inc
add
lock
inc
dec
xlat
outsb
lret
pop
push
jmp
mov
xor
or
sub
add
nop
fcomps
pop
push
nop
push
dec
push
es
jno
stos
and
and
dec
inc
test
adc
cmc
adcl
out
inc
inc
inc
cmp
movsb
popa
sbb
and
jne
inc
push
jne
dec
or
in
mov
pop
sbb
mulb
push
mov
jp
loop
xor
mov
and
mov
nop
aaa
imul
sub
pop
lods
add
pop
ljmp
out
lcall
cmp
aas
and
push
add
or
adcb
xchg
push
scas
test
mov
xor
aam
lret
sahf
sub
inc
mov
or
pop
xlat
or
and
dec
out
test
lret
xchg
fnsave
mov
jecxz
mov
mov
gs
pop
jmp
dec
bound
mov
lret
mov
jae
lods
nop
or
ljmp
or
lods
push
int3
dec
add
push
ja
mov
push
add
or
xor
loopne
mov
cmc
daa
negb
scas
pop
mov
mov
lods
cmp
iret
inc
pushf
into
pop
in
cld
cmpsl
in
into
pop
daa
or
add
xor
push
mov
push
jb
mov
jmp
push
cmp
mov
or
outsb
dec
adc
cmp
dec
inc
scas
fldenv
lock
loop
pop
pushf
xchg
mov
enter
insl
in
pop
pop
sub
clc
out
sub
push
out
pop
lods
aas
ss
pop
jb
ret
shll
add
xor
repz
or
mov
shr
cmc
fldcw
sti
mov
dec
jp
mov
mov
shl
in
hlt
push
push
nop
push
sub
push
push
jmp
xchg
push
xchg
jb
scas
loop
jns
mov
inc
and
scas
pop
and
dec
or
imul
repz
clc
jge
cli
fmuls
ret
jg
in
lds
dec
mov
hlt
pop
sub
xchg
loope
inc
xchg
out
push
sbb
xchg
mov
sahf
stos
in
pop
nop
decl
cwtl
push
outsb
cmpb
sbb
jmp
mov
cwtl
nop
mov
shlb
pop
pop
in
and
jg
add
lds
or
and
cs
in
inc
into
daa
dec
push
in
lock
xor
cmp
stc
push
jmp
jnp
lock
incl
cld
jae
mov
fmull
shlb
add
ds
add
ljmp
pushf
aas
sub
xor
push
shll
leave
mov
and
cwtl
and
mov
dec
pop
stos
sub
sub
dec
pop
and
popa
movl
or
je
in
adc
cmc
test
rclb
mov
jae
outsb
add
or
shl
jmp
call
sub
xor
aas
push
ds
adc
xchg
loope
jg
sbb
push
add
call
fwait
xchg
out
mov
insb
add
lret
push
mov
push
mov
xor
test
mov
hlt
ret
xchg
push
icebp
icebp
inc
pop
push
add
dec
sub
dec
jmp
xor
insl
repz
movsb
push
push
mov
cmp
les
jmp
mov
idivl
sub
mov
insb
cli
dec
lock
inc
xor
jne
popa
xor
jmp
rorb
repz
sub
and
pop
mov
fiadds
or
push
and
subl
add
add
add
loope
mov
jo
stc
andl
icebp
sbb
and
insl
rcrb
and
ret
mov
add
add
cld
cmc
shll
subl
cmp
add
jg
sub
and
loope,pn
ds
pop
adc
xchg
aas
jne
fistpll
mov
adc
shrl
jo
pop
push
dec
lds
das
jmp
je
scas
push
xchg
and
shrl
gs
and
jb
sbb
or
mov
test
int
int
adc
stc
insl
adc
sahf
or
adc
sbb
mov
push
lahf
mov
daa
je
push
das
jmp
mov
push
or
enter
mov
dec
repnz
inc
xor
jae
xchg
inc
adc
iret
add
jmp
movsl
repz
lods
adc
cld
xchg
dec
std
cli
pop
mov
pop
push
popa
das
jecxz
cmp
push
hlt
dec
cmp
pop
mov
aad
into
stos
jo
popf
pop
xchg
mov
lret
pop
call
xchg
jp
jecxz
popa
in
outsl
cwtl
fcomip
aad
jge
jg
push
push
mov
jbe
sub
in
mov
jle
shlb
les
enter
cwtl
push
out
imul
jbe
and
sub
push
pop
add
jmp
or
mov
adc
neg
dec
jmp
out
pop
xchg
cwtl
test
mov
add
jmp
lahf
stc
jle
sub
std
or
mov
es
cs
andb
jmp
rorl
pop
push
add
or
repnz
mov
jns
sbb
cs
push
add
add
arpl
rcr
and
push
fsubr
dec
sub
or
sahf
sbb
fistl
pop
test
adc
imul
sub
mulb
orl
mov
add
roll
aam
mov
outsl
sbbl
out
adc
push
test
leave
dec
inc
adc
cld
bound
xor
cmp
jmp
loope
loopne
repnz
cmp
push
ljmp
cmp
add
xchg
or
add
jb
mov
lock
mov
loop
xchg
std
mov
push
pop
lret
dec
jne
xchg
in
gs
pop
pop
inc
jg
push
rcrl
or
add
shl
jg
push
pushf
dec
push
jecxz
jecxz
mov
xchg
push
fs
int
out
pusha
mov
outsb
imul
pop
xor
pop
pop
mov
add
push
push
sbb
inc
stos
pop
shlb
dec
sub
ret
fiadds
fsubrp
pop
into
push
inc
mov
sbb
cli
jo
pop
xor
popf
lcall
jmp
adc
xchg
mov
sarl
jl
pusha
scas
insl
lahf
adc
or
subb
push
sbb
inc
jmp
inc
mov
arpl
dec
sbb
pop
push
subb
cld
or
mov
pop
xor
out
push
sarl
adc
jmp
inc
clc
cltd
add
inc
inc
nop
out
xchg
jns
or
test
or
sarl
mov
mov
in
xchg
pop
shl
jmp
xchg
xchg
mov
pop
jmp
adcl
inc
and
fsubs
cmpsb
mov
sbb
cltd
orb
jo
aam
pop
pop
pop
enter
jne
sbb
push
or
aam
jp
add
adc
sarl
rcll
push
mov
mov
sbb
out
mov
into
lea
xchg
mov
pop
dec
mov
mov
aaa
or
push
lea
and
mov
push
stc
pop
cmpl
imul
test
mov
repnz
cmp
insl
cld
mov
and
lods
in
daa
dec
fsubp
orb
or
pop
add
test
das
mov
orl
jnp
add
jno
add
push
pop
mov
add
fimull
vmovd
and
mov
xor
es
xor
jmp
pop
fwait
sbb
mov
push
jno
adc
add
jl
not
push
mov
mov
cwtl
jge
xchg
pop
pushf
shrd
mov
jmp
xor
dec
or
mov
repz
ret
int3
sub
hlt
mov
and
out
movsl
cld
jbe
or
repnz
lret
sbb
push
notl
or
pop
push
mov
pop
lds
push
jmp
adc
and
xchg
dec
lods
cmp
cmp
and
xor
repz
test
sbb
dec
inc
subb
jp
js
cmp
push
sub
mov
or
jge
add
dec
aas
clc
xchg
pop
aad
testl
jo
scas
pop
test
aad
push
rcrl
jnp,pt
addr16
cwtl
mov
sub
and
jne
sbb
mov
push
or
jl
out
adc
push
leave
cmp
aaa
push
ficomps
addb
shl
ficoml
add
adc
loopne
lods
push
push
mov
push
lahf
mov
call
jp
push
cmp
inc
lea
les
mov
insb
inc
mov
dec
xchg
call
push
nop
jmp
jg
jge
push
mov
push
notl
xlat
aam
inc
jmp
loop
rorl
test
idiv
pop
ss
pop
mov
jle
and
inc
add
push
or
aas
or
sub
rolb
push
push
push
movl
push
mov
sub
dec
pop
mov
add
daa
sbb
add
and
insl
push
xor
icebp
outsb
jmp
and
sub
loope
std
sub
mov
inc
xor
jp
add
lahf
push
add
pop
pop
mov
mov
add
xor
repnz
inc
or
xor
cmp
iret
loope
sub
dec
pop
add
xor
add
mov
sub
jns
sbb
pushf
mov
enter
add
pop
sbb
mov
push
arpl
jne
sub
cs
mov
cmp
mov
in
es
roll
mov
sarl
data16
mov
popa
test
mov
inc
xchg
pop
leave
jge
adc
jp
inc
out
mov
pop
sbb
test
mov
xor
arpl
mov
mov
and
rolb
xor
sbb
xchg
push
es
mov
lods
pop
sbbb
adc
add
jmp
loopne
mov
pusha
in
adc
push
jmp
dec
inc
fnstsw
or
icebp
daa
inc
pop
in
nop
lcall
adc
rorb
or
mov
std
push
jp
jl
lahf
mov
mov
jmp
push
scas
lret
jmp
shll
or
cmc
mov
add
outsb
fs
pop
lahf
add
cmp
sub
xchg
int3
loopne
roll
es
jl
jae
mov
pop
jns
or
cmp
xor
clc
mov
mov
aaa
fbld
in
add
pusha
stos
adc
shrb
or
pushf
pop
sbb
pop
shlb
ljmp
push
aaa
leave
add
mov
sub
pop
pop
shr
sub
and
xor
movsb
out
adc
sub
lods
popa
or
pop
pop
in
cwtl
sbb
test
pop
cli
jecxz
jmp
sub
or
mov
imul
xor
or
push
jne
mov
mul
push
insb
and
and
cmc
or
cmp
sbb
arpl
jp
dec
clc
adc
lds
jmp
pop
dec
inc
int3
xchg
mov
jecxz
fldt
test
jmp
dec
jge
pop
je
or
xchg
gs
aaa
nop
xchg
add
jp
ss
cmc
sub
mov
roll
lods
or
mov
inc
sarl
push
mov
sub
or
ret
or
sub
test
inc
ret
jmp
fidivrs
dec
mov
ds
imul
or
inc
add
jle
sarl
adc
jnp
push
fcoms
push
mov
sbb
loope
test
add
jl
adc
xor
inc
cli
mov
lods
ret
fdivs
iret
leave
xor
leave
fcoml
pop
mov
daa
push
add
mov
mov
scas
shrl
inc
add
push
xchg
decl
in
or
add
or
sub
cmp
loopne
je
and
push
out
pop
bound
add
sti
adc
push
xchg
lods
stc
outsb
sbb
shl
cmc
icebp
sti
das
xchg
adc
jecxz
inc
sub
lods
or
add
mov
mov
xor
repnz
push
imul
cmp
jecxz
repnz
xor
or
push
mov
les
mov
cmc
pop
jg
sbb
or
push
inc
sarb
pop
jl
adc
in
push
stc
sub
mov
lahf
or
xchg
and
fdiv
cmp
movsb
or
int3
aaa
xchg
popa
mull
pop
stc
inc
adc
mov
mov
loop
mov
nop
mov
test
ss
jl
stc
and
add
lods
push
push
jno
mov
mov
jecxz
jmp
mov
mov
or
xchg
inc
push
mov
add
ss
push
cwtl
cmp
push
sub
and
sub
push
adcl
adc
pushf
and
fisttps
jmp
and
mov
sub
repnz
roll
dec
mov
add
cmpb
fwait
lds
adc
xchg
xlat
les
add
outsb
inc
adcl
pop
mov
in
mov
jmp
test
loopne
lret
or
int
and
cmc
jns
xchg
loop
push
xor
jg
imul
dec
hlt
fistl
sub
out
loop
mov
stc
push
sub
pop
rorl
and
mov
es
jle
mov
cmc
mov
lock
mov
inc
ljmp
cs
lods
and
push
sub
push
adc
sub
jmp
jo
push
orl
sub
pop
jmp
in
jne
add
xchg
test
or
push
lods
jmp
add
fldt
in
push
jmp
orl
incl
stos
mov
pop
xlat
pop
lds
ja
mov
loopne
xor
clc
mov
push
inc
add
cld
or
pop
xchg
adc
sub
out
sub
ljmp
imul
ljmp
pop
repnz
imul
pop
mov
mov
xor
mov
mov
inc
divps
push
sahf
add
pushf
mov
sub
pop
add
sbb
add
jmp
jmp
mov
push
mov
xchg
jmp
add
xor
mov
test
aad
mov
pop
mov
add
jmp
jne
leave
mov
shlb
dec
mov
mov
out
ja
ds
lock
xor
jno
xchg
push
dec
decb
xchg
mov
add
cmpsb
mov
mov
pop
push
add
or
jle
adc
jnp
cmp
aaa
gs
push
push
shrl
lods
or
cmpb
inc
in
test
jo
imul
mov
push
dec
adcl
pop
rcll
add
lds
jne
sub
cmp
repnz
xor
arpl
mov
push
mov
inc
pop
idivb
ret
test
inc
or
jo
je
aaa
mov
push
cmp
fcoms
mov
dec
lcall
inc
mov
mov
sub
adc
mov
aaa
inc
dec
out
xchg
lds
popa
imul
cmpsl
xor
jge
fadds
inc
fidivs
cld
cmp
sub
add
jb
push
jp
fists
lea
jmp
push
enter
repz
movsl
test
pop
mov
push
mov
test
out
mov
inc
lock
out
daa
scas
push
sbb
out
dec
push
and
inc
add
and
testl
mov
lcall
xor
mov
sahf
push
pop
xchg
ret
andnps
pop
out
push
or
jns
pop
pop
mov
jle
sbb
jmp
or
repz
nop
xchg
add
scas
pop
inc
cmp
subb
fsts
mov
mov
or
adc
lcall
xor
push
and
sub
and
dec
cmp
lret
inc
push
ret
push
or
movsl
inc
pop
push
cli
in
insb
loope
or
xor
push
adc
outsb
mov
sahf
in
icebp
lret
dec
pop
notl
adc
mov
or
pop
xchg
mov
and
mov
leave
stos
movsl
xchg
jnp
cld
or
popf
pop
int
inc
jg
fildll
or
pop
ja
xor
adc
out
and
adcl
adc
pop
or
fdivrs
add
and
clc
fsubrp
out
jo
pop
ja
or
push
pop
xchg
add
gs
test
inc
add
mov
ds
adc
and
subb
ja
in
cmp
dec
test
mov
xchg
xchg
jo
jnp
dec
std
pop
adc
in
add
and
push
sub
data16
jno
movsb
push
push
sub
lock
sub
stos
cmpsb
adc
push
push
add
xchg
insl
push
cs
mov
adc
ret
popa
adc
divb
xchg
js
xchg
cmpsb
adcb
aad
je
and
cmpsl
stos
mov
and
ljmp
xchg
cltd
cmpb
jle
sub
es
bound
push
adc
call
xchg
mov
push
ljmp
imul
cmp
and
inc
cmp
and
dec
sbb
mov
jmp
jg
sbbb
xchg
pop
or
cmp
jp
pop
inc
les
jmp
inc
dec
addr16
and
jno
js
push
jmp
call
xchg
and
imul
out
cmp
ja
shrl
das
mov
cld
fstp
xchg
ljmp
push
xchg
mov
xchg
add
das
pop
push
dec
sbb
popw
sbb
fnstcw
js
jne
mov
mov
jge
jb
fildll
jae
nop
push
or
jmp
fnstcw
jno
mov
adc
lods
dec
fdivr
adc
sbb
cmpsl
jnp
dec
cwtl
push
pop
adc
jmp
ljmp
adc
outsb
ljmp
pop
fisubs
mov
loope
lcall
in
jb
dec
sti
stos
gs
add
adc
adcb
or
sbb
arpl
pusha
sbb
ret
cs
xchg
orb
sbb
jge
cmc
or
mov
popf
cmc
xor
test
lret
fstps
lods
sbb
fs
clc
push
sub
jo
add
fwait
add
sub
add
mov
not
movsb
mov
loope
sub
mov
jae
sarl
sbb
jmp
jp
mov
xor
addb
bound
sub
out
add
xor
lds
pop
movsb
or
push
mov
or
jmp
pop
pop
xchg
lahf
imul
and
inc
jl
es
or
mov
ret
cld
out
daa
rorl
add
push
jbe
popf
lret
mov
inc
pop
add
mov
gs
xchg
or
filds
push
mov
nop
addb
or
sub
jne
pop
add
sbb
mov
and
pop
popl
push
mov
and
jne
rclb
mov
inc
loopne
jo
popf
jae
scas
fldl
cmp
lods
jmp
adcl
mov
bound
fstps
inc
add
mov
lock
sub
inc
push
stos
jb
repz
hlt
or
push
add
xlat
dec
mov
outsb
lea
enter
es
inc
add
or
mov
mov
or
jns
shrb
mov
jl
adc
push
mov
ds
xor
add
jmp
lock
inc
dec
xchg
mov
cltd
mov
sub
jg
call
je
xchg
aas
jmp
stos
dec
sub
aas
pop
xchg
push
bound
popa
xorl
or
sub
push
pop
sbb
xor
lock
pop
inc
xor
jmp
jb
sub
mov
seto
push
scas
xchg
nop
in
mull
int
inc
and
sbb
fldenv
push
and
mov
jo
call
imul
imulb
fisubl
or
loope,pn
jmp
int3
mov
push
mov
add
mov
icebp
xchg
pop
dec
jae
mov
ret
fdiv
push
push
mov
adc
je
popf
ret
adc
jnp
out
mov
mov
mov
push
cmc
lcall
mov
pop
push
sub
call
in
daa
test
push
popa
jmp
sub
inc
push
adc
iret
push
and
or
xor
push
test
mov
mov
fcmovu
test
lahf
push
xor
mov
bnd
lret
aas
roll
es
cli
sub
and
or
out
and
and
in
jno
lods
sbb
std
xchg
jp
ret
add
or
push
sahf
mov
and
das
jbe
mov
sub
scas
dec
fidivrl
mov
pop
addr16
push
je
mov
jmp
and
mov
dec
pop
cld
adc
out
cmp
mov
sahf
cwtl
dec
xlat
sbb
push
fiaddl
pop
popa
dec
pop
stc
in
push
lret
sti
imul
mov
pop
and
jmp
inc
xor
pushf
in
lds
imul
pop
and
or
aad
xchg
or
cmp
push
dec
out
std
jmp
xchg
push
jmp
mov
icebp
cmp
das
pop
jbe
cli
jl
jb
dec
adc
mov
dec
lret
add
mov
test
mov
imul
je
adc
pop
push
add
in
cli
add
das
or
mov
repz
dec
dec
ja
shrb
in
pop
mov
ljmp
icebp
mov
sahf
aad
outsb
xchg
nop
ljmp
pushf
cmp
leave
mov
xchg
mov
out
cmpsl
enter
shlb
push
push
mov
mov
xor
test
xchg
cld
mov
jl
bound
or
mov
fwait
loop
pop
push
call
mov
pop
test
xchg
push
adc
int
movsb
neg
push
sub
in
pop
loopne
fwait
rorl
jmp
mov
out
mov
in
lods
jo
sub
movsb
dec
and
lret
mov
push
sti
fmull
pop
jle
pop
mov
cmpsl
pop
lcall
je
pop
mov
sub
and
fcmovu
xchg
or
stos
in
std
inc
sbb
inc
sar
pop
rorb
or
ja
cmp
ja
ds
cwtl
dec
ljmp
lods
mov
cmp
shll
les
or
xor
mov
popa
je
xor
rolb
dec
jno
sahf
sbb
push
and
pop
scas
xor
filds
add
cld
sbb
arpl
xor
xchg
mov
and
jp
inc
leave
jge
ret
pop
shll
adc
inc
insl
stc
hlt
lods
imul
and
inc
cmp
xorl
xor
jae
ds
scas
imul
or
or
cmc
sbb
mov
add
popf
ds
adc
mov
movsl
out
hlt
incb
push
cwtl
xchg
or
adc
and
push
aad
outsb
mov
add
hlt
push
and
xor
addb
outsl
int3
sub
stos
mov
pop
jmp
add
mov
dec
leave
shrb
sbb
call
cmpsl
add
add
loopne
jmp
pop
add
jo
icebp
push
jnp
adc
and
pop
and
adc
stos
xor
sarb
adc
mov
ja
daa
inc
pop
dec
mov
jmp
and
inc
mov
sub
mov
jmp
sub
fcmovnbe
dec
cltd
mov
jmp
mov
ret
cmc
loope
add
and
movsb
cmp
in
testb
enter
ror
or
mov
or
loopne
shll
cmp
rcr
sub
add
fldl
sarl
out
xor
ds
test
ds
nop
cmp
cs
mov
sub
dec
pop
les
or
fs
pop
sub
jge
subl
jnp
pop
jae
test
sbb
nop
pop
ret
adc
push
nop
or
mov
enter
jns
dec
sub
xorb
das
cwtl
jl
jp
and
in
xor
nop
pop
and
sub
xchg
and
pop
xor
sub
jbe
pop
adc
sahf
xchg
sub
sub
aas
lods
or
testl
xor
test
dec
xor
mov
adc
insb
sub
int3
mov
push
loop
adc
sbb
or
pop
in
or
or
in
push
cmp
and
ficoms
push
adc
dec
ja
or
sarb
iret
imulb
push
adc
test
movsl
dec
mov
int
push
popa
push
into
add
push
jle
jle
sub
roll
sbb
shl
jmp
push
mov
push
mov
xchg
add
ret
cmpl
cmp
xchg
sub
jno
pop
adc
push
fwait
sarl
mov
cmp
jmp
pop
sarb
xor
jo
lret
push
cmp
and
mov
add
jmp
xlat
nop
cli
mov
call
addr16
ret
pop
dec
inc
mov
xor
mov
jo
sbb
push
test
xchg
jb
daa
dec
out
cwtl
repz
sbb
shl
pop
mov
jno
fstpt
or
mov
xchg
dec
je
mov
jle
sub
push
nop
pop
cmc
test
push
sub
and
std
jmp
mov
mov
cmp
ror
sahf
or
cmp
sti
add
jp
inc
neg
inc
inc
enter
pop
and
and
cmp
sbb
sub
lods
cld
and
stc
jmp
add
xor
sbb
jb
add
sbb
sub
add
aam
sbb
ja
out
add
in
sub
loopne
in
mov
mov
stos
mov
mov
inc
mov
sbb
ret
je
fsub
cmp
imul
stos
jmp
sub
mov
hlt
dec
xchg
ds
loop
sub
xlat
mov
roll
pop
pushf
push
or
cmp
ja
jb
pop
in
add
add
iret
xchg
faddl
mov
mov
and
lods
cmp
iret
scas
jns
loope
into
push
xor
sbb
stos
int3
mov
dec
rcl
cmc
jp
js
and
leave
insb
cmpsb
movsl
adc
mov
sbb
jmp
push
fisttpl
nop
mov
push
pop
and
sbb
jno
aaa
add
lret
push
push
pop
mov
mov
sub
mov
sahf
adc
fwait
dec
and
daa
xchg
pop
and
xor
push
jl
call
addl
jmp
xor
xchg
jbe
pop
adcb
in
pop
mov
adc
add
cmp
lods
adc
push
adc
in
mov
jmp
ss
dec
xor
dec
cmove
cli
sub
jge
push
in
sub
popa
mov
xor
jno
stos
in
nop
data16
inc
aas
ds
or
std
and
cltd
xchg
cld
lds
pop
pop
lahf
fucomi
jmp
dec
div
dec
mov
inc
cmpb
dec
fisubl
inc
push
push
mov
push
movb
mov
sbb
or
data16
mov
inc
xor
push
iret
push
fistl
jmp
xchg
push
adc
pop
inc
xchg
mov
jmp
es
add
xchg
popa
js
jbe
mov
aad
xchg
shr
es
nop
nop
shrl
bound
roll
scas
xor
sub
mov
dec
sbb
jnp
or
int
outsb
cmpsl
dec
daa
test
add
adc
mov
and
cmpl
jl
dec
push
adc
cmpsb
pusha
mov
sub
popf
jb
out
icebp
pop
push
data16
or
push
cld
jg
inc
jne
call
add
icebp
mov
int3
sub
mov
dec
push
sbb
cltd
push
or
jne
inc
cmp
add
mov
movsl
dec
jge
cltd
push
into
mov
xchg
xor
mov
and
negb
aam
test
sti
xlat
cs
adcl
mov
cli
test
jecxz
jns
mov
imul
and
push
pop
subl
jno
outsl
jle
mov
push
mov
add
pop
ljmp
rol
push
xchg
insl
add
lods
fadds
lods
fstl
pop
and
sub
mov
and
es
cli
mov
roll
cmpsb
in
adc
xorl
add
out
mov
pop
rcrl
sub
je
sub
repz
push
push
test
push
xor
mov
and
adc
int3
je
and
xor
pop
rcrb
mov
jle
mov
stc
inc
mov
addl
je
or
iret
adc
pusha
mov
push
pop
and
in
adc
pop
out
dec
xor
or
call
or
rol
jmp
popa
pushf
inc
hlt
mov
imul
push
sahf
xor
shl
push
jmp
sub
add
fwait
push
lods
push
pop
push
xchg
fimull
into
dec
dec
ljmp
jmp
pop
xchg
fcmovb
mov
or
or
or
hlt
fwait
push
and
jnp
cmc
mov
pop
push
mov
dec
xorl
jmp
mov
int
inc
sub
orl
or
sbb
lods
sub
stc
and
iret
push
shr
sbb
push
aad
ret
js
add
cmp
hlt
pop
incb
or
jmp
dec
pusha
xorb
or
inc
push
inc
js
jb
or
adc
add
inc
mov
test
das
aam
pop
pop
int3
sti
mov
cmp
jb
xchg
mov
jmp
dec
add
sbb
rcrl
xchg
xchg
sbb
mov
stc
and
aam
adc
add
push
cmc
mov
xchg
add
pop
stos
sub
test
repz
test
js
xorb
push
mov
or
sbb
inc
jae
lahf
dec
jmp
rolb
cli
inc
fimuls
hlt
iret
or
adc
adc
adc
jg
jl
mov
popa
adc
add
fiaddl
ror
test
sub
jg
add
push
rolb
sti
loop
js
jmp
jnp
xchg
das
sbb
neg
cld
lods
push
cs
es
pop
insl
lods
negb
pop
dec
mov
movsb
push
mov
xor
adc
filds
lea
add
jbe
jmp
movsl
rclb
inc
xor
aad
dec
sub
pop
mov
sub
call
adc
repnz
ucomiss
push
fisttps
pop
hlt
push
lods
pop
add
jbe
and
mov
test
out
rcr
mov
sbb
push
xor
in
test
and
fucom
inc
lret
insl
adc
fsts
jg
dec
hlt
loopne
gs
icebp
loop
adc
sbb
mov
iret
test
pushf
push
mov
pop
or
or
sub
add
xor
push
sub
push
lahf
daa
lock
insl
add
cmpsb
or
aaa
or
mov
cmp
jmp
inc
sbb
sub
adc
mov
sbb
lea
in
mov
das
inc
lods
rol
ljmp
pop
lods
fistps
outsl
or
inc
sbb
test
pop
scas
imul
adc
cmp
in
xor
ds
call
pusha
daa
lods
or
outsl
push
inc
pop
lods
adc
push
cmp
jb
or
push
jl
dec
lahf
push
cmp
jmp
jl
jne
fbstp
out
add
jmp
test
push
mov
add
sub
adc
jge
cmp
test
or
outsb
lea
push
mov
pop
out
jmp
lock
out
lods
adc
add
mov
mov
add
adc
and
sub
fnsave
in
or
mov
xchg
cmp
and
mov
sub
push
push
pop
lahf
push
pop
mov
inc
and
iret
add
adc
sbb
repnz
xchg
outsb
insl
jne
mov
pop
mov
mov
mov
jnp
mov
fs
xchg
sbb
psubb
push
mov
mov
lret
das
sub
adc
fld
push
adc
cs
mov
sbb
sar
adc
loopne
mov
adc
dec
push
in
jge
nop
insb
xchg
jmp
pop
cld
add
inc
add
pop
mov
adc
iret
dec
sti
xor
shll
das
sub
sbb
and
mov
js
mov
lret
in
aaa
mov
cwtl
in
inc
xor
cmp
in
inc
sahf
mov
adc
aad
add
pop
jecxz
adc
jmp
or
je
test
sahf
clc
sub
loope
daa
sub
rcrb
lock
inc
out
mov
mov
mov
pusha
shrb
test
rorb
inc
mov
inc
sbb
stc
inc
dec
xor
faddl
xor
repz
xorl
jne
pop
jg
int3
shrb
pop
insb
cmp
xor
add
lret
jle
lock
je
popa
les
push
and
sub
fwait
pop
sub
shl
std
mov
xorl
cmp
aad
adc
dec
pop
aad
add
repz
push
and
out
mov
ds
jbe
jmp
xchg
popf
push
cmpsl
mov
std
bound
push
push
pop
addr16
in
lret
push
ja
xchg
jl
and
inc
cwtl
sti
or
or
sub
jmp
aas
add
cld
in
lahf
adc
lea
push
fldl
dec
cltd
ja
movsb
push
xchg
sbb
pusha
dec
sub
stos
inc
cmp
nop
in
fistpl
mov
and
xor
es
mov
shll
jge
add
ss
ror
lret
inc
inc
push
jmp
xchg
and
xrelease
dec
mov
ret
push
mov
mov
pop
scas
fcmove
sub
xor
leave
aad
imul
int3
mov
sarb
xor
adc
rcll
repnz
push
push
clc
repnz
xlat
sub
sub
inc
shrb
pop
add
sub
jp
and
or
pop
pop
mov
jno
or
mov
pop
rolb
add
mov
mov
push
inc
sub
stos
push
adc
push
repnz
pop
imul
push
dec
xchg
not
jns
pop
and
lahf
int3
sub
jno
shlb
pop
pop
pop
cmp
add
repnz
dec
or
fnsave
pop
xchg
push
std
mov
mov
out
lods
jg
ret
sub
test
pop
andb
das
adc
or
cmp
into
or
inc
addr16
push
sub
jmp
and
jl
xchg
fsubrp
cmp
insb
mov
mov
je
xor
shll
nop
cmpsb
cmovae
pop
loopne
xchg
imul
xor
cmp
call
ja
imul
mov
sar
and
imul
mov
icebp
jbe
lcall
and
popa
icebp
out
and
pop
fldenv
inc
std
test
mov
push
and
ljmp
add
dec
dec
add
inc
icebp
pop
shr
pop
or
xor
pop
leave
lock
push
lods
aaa
mov
dec
push
sub
cmp
xchg
add
fchs
in
inc
adc
sbbl
add
jg
xchg
cmp
outsl
jle
sub
pop
ret
repz
arpl
cmp
mov
loope
mov
std
arpl
imulb
sbb
mov
inc
adc
lods
or
in
adc
cmp
test
cmp
mov
sub
rcrl
mov
ja
add
add
pop
push
cmpsb
push
push
mov
jg
fsin
bound
adc
addr16
inc
sbb
add
xor
add
push
dec
shlb
or
add
xor
pushf
xor
add
mov
push
adcb
xor
or
imul
mov
cmp
mov
aad
dec
iret
roll
das
sbb
jmp
push
mov
dec
enter
shr
adc
push
pop
sub
xchg
test
test
cmp
pop
repz
mov
mov
xor
cmc
dec
mov
call
dec
outsb
mov
ds
data16
jmp
ljmp
mov
add
xor
sbb
test
repnz
jmp
adcb
jne
jo
popa
daa
popf
sub
aas
and
mov
or
iret
aas
xchg
sahf
enter
rcrb
repz
jnp
or
cmpb
loopne
dec
pop
mov
loop
cmp
push
mov
out
inc
add
bound
pushf
add
mov
decl
dec
shr
cs
notl
mov
mov
test
sbbb
std
add
add
pop
fstpl
xchg
push
cmp
lahf
pop
ja
lret
adc
into
adc
daa
jle
adc
push
repnz
xor
dec
or
push
fists
cmpsl
lret
outsb
repz
xchg
jmp
sub
les
adc
scas
repnz
aam
xor
fnstenv
add
xchg
mov
or
sub
movsbl
push
mov
scas
shl
add
testb
or
pop
pushw
dec
nop
xchg
sub
subl
pop
push
or
jle
roll
mov
inc
mov
cs
fs
and
pop
lock
mov
jmp
fistpll
add
jmp
clc
maskmovq
push
test
and
std
add
arpl
in
or
fidivrl
pop
push
sub
xor
jo
popf
cmc
adc
sub
xor
push
incl
mov
add
sbb
fisttpll
pop
push
jp
fisttpll
jmp
stos
sbb
or
std
add
push
inc
jmp
imul
or
or
and
or
add
and
aaa
mov
leave
mov
mov
xchg
pushf
sub
mov
pop
and
lock
daa
mov
pop
add
fildll
inc
nopl
xchg
dec
push
out
xchg
cmpb
push
adc
mov
fildll
push
and
mov
les
js
pop
mov
loope
mov
adc
je
repnz
and
and
adcb
out
dec
jbe
leave
dec
adc
mov
ljmp
popf
sbb
adc
arpl
pop
ss
daa
mov
inc
cmpl
pop
in
sets
mov
jae
fdivs
jp
scas
jmp
add
pop
pop
cmpsb
add
lahf
push
ffreep
dec
mov
aad
je
jmp
xor
push
jnp
lock
pop
mov
and
shll
inc
in
sbbl
mov
or
out
leave
xlat
jle
popa
cmpsb
fists
xor
pop
loopne
xor
pop
inc
add
movsl
fdiv
gs
mov
test
mov
sub
add
mov
cmc
dec
pusha
mov
adc
rorl
xor
jnp
mov
push
inc
mov
push
jge
imul
fstps
clc
or
shl
add
cmp
jo
jg
push
scas
jg
dec
in
lods
dec
cli
popa
push
int
add
popf
cmpsl
push
int
adc
xchg
stos
add
jo
or
inc
sbb
std
jmp
mov
adc
fimuls
dec
sub
hlt
and
jae
out
push
xchg
clc
aam
adc
and
push
or
jge
in
sub
add
pop
es
mov
push
lods
add
bound
inc
cwtl
ljmp
rorb
jge
icebp
scas
rol
push
std
mov
jb
mov
into
loope
cs
insb
imul
push
int
mov
add
fldl
bound
out
mov
add
ret
adc
adc
push
add
outsb
mov
mov
jnp
lcall
or
aas
imul
push
pop
addr16
xchg
pop
and
mov
sub
add
dec
or
inc
cmp
pusha
shlb
imul
or
jle
fs
movsl
adc
sub
shl
pusha
aaa
push
pusha
cmpb
and
mov
adc
lret
data16
mov
xor
cmc
pop
movsb
adcl
xor
xor
xor
jnp
jmp
ret
notb
and
add
add
ja
fistl
push
cmp
sub
clc
ljmp
jmp
xchg
mov
fdivl
pushf
icebp
movsb
ds
clc
inc
dec
push
pop
mov
xlat
cmp
push
push
jbe
jp
lea
rorl
data16
add
pusha
xchg
lods
mov
mov
push
and
sub
lret
mov
or
and
fstpt
mov
adc
pop
sbb
mov
and
add
sub
xor
jg
ljmp
adc
pusha
or
imul
jns
cmpsb
mov
mov
loop
fsts
test
shl
pop
pop
orb
push
shr
into
fldl
pop
xor
push
js
push
inc
mov
dec
in
mov
pop
cmp
js
pushf
lods
push
sub
add
cmpsb
out
invd
leave
std
inc
push
push
push
ret
cld
imul
repz
test
aaa
push
or
or
ficoms
or
daa
adc
add
push
aam
lcall
lret
inc
js
rol
xor
and
in
icebp
out
sub
adc
shrb
pop
lock
pop
add
jo
or
push
and
shl
dec
pop
and
les
test
or
mov
jmp
test
xchg
sbbl
das
push
cmp
inc
orb
jle
sub
leave
sub
stos
jae
xor
pop
push
push
jmp
pusha
push
push
dec
pop
negb
sub
js
and
dec
xchg
pop
mov
xor
jecxz
dec
lret
push
pop
push
into
jmp
in
xchg
rcrb
pop
jmp
jge
out
add
stos
das
imull
adc
popa
add
push
sub
call
aam
scas
cld
mov
mov
pop
lret
and
adc
and
mov
xchg
add
pop
push
dec
adc
inc
pop
loopne
sub
fcmovnb
stos
lcall
pop
and
mov
push
mov
sub
neg
inc
mov
jno
push
push
xchg
mov
jmp
loope
push
fdivp
cmp
or
dec
nop
aad
out
std
mov
sbb
xorb
xor
add
xor
pop
adc
pop
mov
aad
adc
add
pop
jne
testb
mov
jo
mov
out
cmpl
mov
jge
int3
inc
mov
aam
xchg
mov
and
dec
jecxz
and
mov
xor
out
push
inc
test
push
add
inc
fwait
aaa
or
mov
pushf
jo
aad
fs
push
adc
andb
xorl
fwait
adc
mov
jmp
push
push
ds
dec
adcb
lahf
arpl
push
sbb
mov
jmp
pop
mov
and
xchg
jp
dec
pop
sub
mov
rolb
add
mov
jno
bound
nop
xor
ds
leave
jno
ja
sub
loop
jl
sub
scas
popa
fists
cwtl
cs
ja
push
pop
push
into
or
adc
mov
test
and
or
daa
ss
rorl
nopl
push
and
and
pop
lret
add
jae
roll
push
sbbb
ret
mov
jne
ja
les
dec
mov
jg
aas
idiv
mov
sub
and
or
in
or
add
bound
int
add
fdivr
sbb
push
mov
lock
mov
je
jmp
cmp
ret
not
push
adc
mov
cmpl
loop
mov
inc
pusha
push
adc
mov
mov
sahf
dec
add
lret
push
and
mov
lods
dec
jge
pop
lods
sbbl
mov
jle
loope
jl
and
jns
stc
lea
into
sub
fwait
je
inc
repnz
fisubrs
push
push
or
mov
and
adc
popf
mov
push
bndldx
adc
jno
into
jle
cmp
push
pop
bound
clc
push
xor
xor
clc
inc
xchg
ja
aaa
lahf
sub
lahf
mov
stos
addb
inc
mov
or
adc
mov
push
dec
mov
aam
add
in
ljmp
mov
mov
sbb
add
push
fiadds
std
xchg
sbb
rorl
out
cltd
fdivrl
sub
nop
jmp
and
adc
into
or
pop
pop
cmp
insb
push
test
mov
ja
out
jl
jmp
pop
shlb
lds
xchg
cltd
jmp
cli
xor
sbb
cmc
add
or
jmp
or
jae
push
data16
adc
inc
sub
out
add
pop
sub
sbb
not
push
sti
es
das
push
push
rolb
jmp
push
push
cwtl
lret
test
and
mov
icebp
add
mov
movsl
dec
je
or
mov
movsb
sbb
jne
dec
icebp
jge
scas
lret
incl
cmp
idivb
bound
fcomi
dec
popf
rolb
and
pop
push
ret
mov
das
adc
and
dec
add
xor
bound
mov
and
cltd
sub
push
jbe
add
adc
add
cmpsb
pop
sub
je
pop
xor
mov
lods
dec
cmp
adc
daa
repz
rcrb
and
sbb
in
lret
popa
jmp
sbb
dec
out
shrb
push
pop
data16
mov
loop
xorb
and
add
mov
mov
and
pop
mov
jo
repnz
cmp
dec
lods
cmp
repz
dec
dec
addb
dec
cwtl
fnstcw
insb
data16
int3
or
clc
testl
xor
es
or
sub
inc
imul
mov
or
lahf
mov
add
add
out
outsl
div
test
pop
fcomp
push
mov
roll
es
loope
jno
pop
cmp
test
push
mov
dec
push
and
ljmp
stos
fmul
daa
mov
adc
pushf
enter
pusha
rolb
and
loop
cmp
into
dec
test
jne
in
push
jle
mov
dec
mov
enter
dec
xor
mov
pop
xchg
and
nop
or
loopne
mov
sub
jb
adc
pop
mov
add
jnp
dec
xlat
ljmp
push
mov
push
out
test
mov
hlt
cmpl
sub
ja
xchg
mov
imull
pop
add
adc
or
push
rcl
xlat
dec
hlt
dec
pop
sub
add
js
cwtl
pop
or
repz
std
cmpsl
inc
lcall
mov
mov
mov
dec
arpl
in
test
loope
push
cmpsl
push
push
and
mov
out
ret
js
xchg
sbb
add
notb
push
sbbl
pusha
sbb
push
push
or
jmp
xor
xor
add
arpl
push
aad
outsl
mov
and
dec
stos
dec
adc
pop
gs
repnz
lret
shr
mov
stos
pop
add
fistpl
fstl
xchg
jmp
pop
iret
inc
or
pop
imul
and
outsl
add
mov
dec
sbb
mov
or
jbe
dec
mov
inc
in
add
adc
or
std
dec
add
push
stos
mov
inc
ret
fadd
mov
sub
sbb
aas
xchg
xchg
pop
pop
cld
jmp
push
mov
add
inc
jmp
scas
sub
xchg
popa
xchg
push
push
push
fstpl
jecxz
pop
or
pop
add
aad
cltd
adcb
and
sbb
jne
mov
jne
pop
pop
pop
push
add
xor
mov
push
js
push
lods
mov
aaa
popl
daa
cmp
imulb
inc
jmp
int3
xor
hlt
movsl
pop
xor
pop
xchg
pop
rcl
sub
pop
out
sub
filds
repz
mov
add
rcl
or
inc
clc
stos
mov
add
jmp
pop
hlt
xchg
cmp
sub
fsubs
sub
dec
fistps
dec
lods
pop
cld
mov
fbld
sarb
push
call
cwtl
ds
int3
enter
push
pop
cld
movsl
imul
loope
pop
or
push
cmp
sahf
mov
add
bound
inc
inc
jmp
movsb
sub
push
jle
or
adc
add
ljmp
das
leave
popa
jno
cmp
xor
mov
les
mov
std
xor
xlat
or
out
nop
mov
sbb
fcmovnbe
repz
leave
add
imul
or
push
or
mov
push
addb
sub
test
ret
sbb
dec
adc
movsb
bound
cmpsl
sahf
push
addr16
cmp
sbbl
hlt
push
xchg
add
and
cwtl
in
jmp
cmp
jns
popf
jb
dec
add
outsb
mov
loop
dec
out
lcall
pop
mov
add
lret
stc
addb
sbb
or
adc
popa
or
xchg
movsl
pop
out
inc
pop
cmpb
lock
cli
das
cld
gs
js
push
leave
jmp
pop
mov
cmp
mov
xchg
dec
mov
push
xchg
dec
mov
mov
bound
jns
adc
push
mov
xor
and
pusha
iret
fldl2t
je
mov
setge
rorb
sbb
inc
fcmove
cmc
push
cld
mov
push
dec
leave
test
mov
cmp
fiadds
call
mov
add
dec
ss
iret
push
cwtl
imul
mov
bound
inc
arpl
in
sub
outsl
xor
or
ljmp
push
push
dec
cwtl
push
pushf
scas
daa
pop
insl
mov
cs
fs
sub
es
sub
fistpl
sub
les
ret
adc
mov
xor
pop
movsl
int3
jp
mov
or
cld
loopne
mov
add
outsl
stos
pusha
cli
loop
xor
sub
fistpl
dec
mov
push
xor
pusha
repnz
adc
les
jmp
add
add
sub
sub
pop
ror
sub
jns
push
mov
mov
ret
xchg
pop
and
lods
mov
pop
mov
push
inc
ja
mov
movsb
test
mov
pop
cmp
nop
roll
test
mov
fcmovnb
addr16
mov
mov
cmpsb
pop
inc
lods
or
jmp
push
icebp
sbb
sub
pop
call
loopne
sub
mov
mov
insl
jbe
sbb
jmp
inc
inc
mov
cs
mov
mov
xchg
sbb
cmp
inc
pop
imul
mov
sub
test
inc
push
lock
adc
xor
jmp
mov
pop
repz
cmpsl
adc
pop
cld
mov
jo
sub
jns
ret
pop
sarl
cwtl
arpl
jecxz
mov
xchg
sub
push
push
push
adc
sbb
and
daa
jbe
repz
outsb
movsb
mov
dec
dec
jo
push
mov
fiadds
sub
cmpsb
add
rcr
fmull
mov
out
and
jg
sub
js
mov
adcb
out
cld
add
fldl
gs
leave
es
inc
and
lods
cli
ret
mov
sub
add
fiadds
xor
test
mov
pop
dec
mov
mov
mov
ret
pop
jmp
xchg
notl
cltd
lds
jnp
xor
in
push
xor
adc
add
ret
dec
ret
pop
cmc
jnp
sub
lcall
dec
fsts
or
sbb
mov
lods
stos
daa
jmp
add
push
or
sub
xor
jp
negl
cltd
aas
xor
cmpsb
inc
adc
rcrl
les
in
clc
or
pop
jmp
iret
fimull
mov
push
mov
stos
movntq
in
xchg
sbb
push
cwtl
mov
je
jl
sub
std
pop
or
sahf
push
mov
pop
in
aam
pop
mov
cld
outsl
les
adc
xchg
push
stc
push
out
adc
and
pop
mov
jmp
add
inc
dec
jp
xchg
sahf
imul
stos
adc
loopne
xor
push
dec
sub
jo
fs
faddl
sti
nop
sbb
ret
dec
pop
es
pop
add
jg
sub
add
jne
std
xchg
mov
add
idivl
sub
adcl
call
scas
mov
push
pop
sbb
push
pop
fucom
add
xchg
inc
mov
push
mov
pop
out
or
mov
mov
clc
lcall
dec
xchg
inc
mov
xor
popa
xor
add
add
inc
and
dec
lods
testl
mov
jb
inc
jecxz
hlt
je
and
movsl
jg
testl
lahf
cwtl
mov
xor
addb
push
mov
fdivrs
pushf
cmp
andb
fwait
dec
das
push
ljmp
fs
mov
push
loope
dec
pop
pop
pop
int
mov
shl
data16
mov
cwtl
mov
das
pop
lret
filds
mov
mov
cmp
jle
lods
mov
mov
sub
rcrl
adc
add
push
mov
rcl
jge
and
add
inc
loope
or
cld
imul
xchg
dec
sub
push
mov
push
mov
popa
sub
movsl
dec
mov
repnz
leave
dec
outsl
movsb
mov
sbb
jle
pop
push
rorb
sbbl
push
pop
mov
or
and
addr16
mov
lds
pop
adc
arpl
ret
or
push
jmp
test
pop
push
sub
rclb
les
fsubrl
and
loopne
and
xchg
repnz
cmpsb
ja
fstl
mov
outsl
mov
test
xchg
adc
shrb
js
scas
outsl
mov
jns
mov
test
mov
movsb
fimuls
jo
cmpsb
ret
add
pop
mov
pop
push
in
aad
adc
mov
bound
mov
or
cmpsb
xchg
idivl
add
mov
loope
add
jl
loopne
push
stos
cmp
xor
clc
xlat
in
mov
fsubrs
dec
pop
je
adc
mov
sbb
or
inc
xchg
pop
push
xor
or
popf
mov
add
subl
xchg
or
push
fdivs
push
test
call
pop
lds
jo
fwait
dec
or
sahf
xor
out
add
jmp
fisttpl
push
lret
sti
lret
jmp
pop
add
das
ret
ljmp
jns
cmpsb
pop
aas
pop
adc
stos
scas
jecxz
pop
sarb
pop
or
cmpsl
sbb
ds
inc
mov
pop
add
popa
ret
pop
jmp
jmp
inc
inc
pusha
sub
pop
mov
subb
and
ret
fisttps
add
and
add
lods
pop
movsl
and
dec
testl
aaa
xchg
fadd
push
aam
jg
shl
pop
stos
or
dec
xor
lret
enter
js
jl
xchg
jb
mov
sub
sub
dec
std
lds
sub
into
jmp
notb
repz
out
add
push
cwtl
int
dec
xchg
and
mov
ret
push
repz
sbb
adc
mov
clc
int3
ja
add
add
mov
test
loopne
sbbb
or
shl
and
lock
aam
mov
push
sub
jo
addr16
xor
fs
and
out
stos
repnz
add
leave
je
fwait
jo
xchg
add
negl
or
rolb
jne
cmp
hlt
sbb
jns
push
repnz
mov
outsb
nop
cmp
mov
pushf
sbb
pushl
andps
in
push
cmp
xor
shr
loopne
push
cmp
scas
repnz
mov
lods
pop
push
push
jmp
and
cli
mov
add
ret
pusha
jge
mov
jg
mov
out
pusha
call
jmp
sarl
lret
in
inc
leave
pop
mov
xchg
add
in
add
jb
push
hlt
repz
outsl
inc
or
mov
sar
adc
or
test
cmp
fisttpl
xor
sbbb
fwait
pop
and
pop
mov
push
adc
sub
leave
pop
loop
subb
sub
imul
xchg
jmp
or
inc
cmpsl
fisttps
addr16
dec
add
repz
ds
pop
leave
dec
imul
xor
mov
ljmp
push
jmp
fnstenv
repz
sbb
add
repz
dec
imul
or
movsl
fadds
mov
adc
xor
push
pop
xchg
mov
inc
xchg
ljmp
orb
cli
mov
sub
xlat
lea
xor
pop
imul
icebp
aas
into
rol
int3
call
cs
pop
in
push
mov
mov
jge
push
push
int
out
push
add
xchg
sbb
or
and
add
push
sub
mov
movsb
stc
imul
adc
leave
sub
repz
test
aas
roll
inc
stos
mov
add
sub
lret
or
cli
pop
jmp
add
cmp
sbb
xchg
dec
movsl
adc
stc
pop
adc
mov
fidivl
mov
aam
or
sti
addl
and
dec
mov
ja
jecxz
lret
mul
sub
inc
inc
repnz
push
cmp
loope
adc
bound
pushf
adc
mov
ret
out
push
push
lcall
mov
pop
push
mov
inc
mov
fs
adc
mov
jmp
jp
inc
cli
lahf
pop
fbld
add
pop
jmp
test
rorb
repz
les
adc
ret
fdivrp
daa
imull
push
push
rolb
and
or
ja
push
inc
adc
call
rcll
dec
lahf
jae
inc
push
sbb
or
aaa
xchg
aas
mov
inc
movsb
add
rclb
cmpsb
enter
mov
mov
leave
aad
popf
mov
pusha
outsb
ja
fmul
adc
jp
mov
add
fmull
adc
inc
mov
sub
test
dec
jmp
and
push
mov
rol
divl
mov
ja
push
adc
push
xchg
or
mov
pop
loop
pop
scas
or
mov
popa
push
xchg
mov
inc
pop
clc
mov
dec
xor
test
sbb
popa
incl
or
rol
sub
sub
adc
scas
and
dec
inc
mov
sub
out
test
or
fisubl
push
jne
das
or
gs
adc
pop
and
stc
adc
lods
aas
and
and
sub
sbb
mov
pop
xor
iret
sbb
mov
imul
pop
dec
sbb
push
xchg
das
nop
packssdw
cmp
mov
insb
mov
pop
pop
pop
pop
mov
push
mov
sub
dec
pop
xor
or
js
loope
not
or
inc
jmp
inc
mov
ficoms
pop
mov
push
xor
push
xchg
stc
icebp
not
dec
and
mov
xor
call
aad
sti
inc
add
push
add
mov
mov
jne
in
ret
aaa
movsl
push
jns
dec
sti
pushf
or
push
ljmp
mov
bnd
xchg
inc
mov
int3
enter
cs
shrw
shlb
jecxz
std
fidivrl
mov
daa
ficoml
daa
loop
std
push
cmp
jne
add
ret
test
mov
pop
sbb
div
inc
add
in
add
jo
dec
ljmp
push
idivb
and
cli
les
mov
sub
out
loop
xchg
incl
xor
out
cltd
mov
rorb
jmp
lahf
mov
mov
sub
pop
repnz
sti
add
mov
cld
or
ja
mov
cmp
rolb
xor
fcomps
ret
or
je
push
dec
cmpl
dec
repz
push
shlb
sub
fs
jno
inc
push
add
dec
aam
out
test
push
inc
pop
ret
outsb
xor
cmp
adc
xchg
les
sarl
xor
stos
enter
dec
push
mov
pop
jp
jmp
stc
pop
movsb
and
adc
out
cmc
sbb
add
jmp
jmp
mov
mov
out
mov
jmp
ficoml
push
pop
jns
in
xchg
or
hlt
jno
adc
fstps
mov
xlat
stos
push
mov
cmp
add
scas
out
push
pop
xchg
enter
imul
jbe
adc
cmp
out
jge
mov
sbb
js
repnz
xchg
stc
sub
lds
out
xchg
sbb
add
dec
not
jp
or
cmp
rcr
imul
jno
sub
mov
pop
loope
push
add
jno
mov
jnp
push
mov
and
addr16
sub
adc
pop
daa
lea
cld
out
or
stos
dec
add
or
cmpsb
mov
cmp
pop
cli
adc
push
enter
out
aaa
mov
mov
mov
inc
cmp
jmp
add
push
leave
pop
adc
fldpi
bound
xchg
mov
cmp
cmp
sub
ja
in
or
fstps
lds
mov
add
sbb
pop
jae
pop
in
inc
imul
ljmp
not
mov
pop
jmp
test
and
add
int3
popf
or
mov
add
sub
inc
add
addr16
sub
fadds
cmp
aad
or
add
sub
pop
aas
mov
mov
sub
jmp
sub
data16
push
mov
mov
add
xchg
xchg
cmp
lds
loopne
jmp
dec
mov
xor
add
rclb
adc
mov
call
pop
pop
mov
call
and
clc
js
jge,pt
pop
xor
sub
decl
dec
adcl
mov
sub
mov
nop
rclb
jmp
add
jg
xor
in
jns
add
jg,pn
stos
inc
push
lret
aaa
or
pmaxsw
mov
push
push
xchg
push
sub
inc
sbb
lods
xor
std
sub
into
add
lret
mov
jmp
jmp
clc
data16
rorb
mov
inc
int
outsl
popf
lods
cltd
ss
pop
pop
jmp
sbb
aas
xchg
pop
push
add
and
cs
sub
outsb
pop
shlb
loopne
xor
jecxz
cmpb
pop
mov
mov
dec
jns
dec
add
imul
lea
nop
jno
orb
divl
mov
mov
jecxz
adc
dec
mov
aaa
daa
mov
lock
pop
mov
xor
movsb
add
pop
aaa
imul
xchg
push
mov
or
test
pop
jl
push
loop
push
or
sbb
xchg
js
je
lock
pop
frstor
inc
or
ret
add
add
push
add
sbb
jmp
ja
out
dec
dec
jns
fstps
mov
push
popf
ficomps
roll
jmp
or
add
outsl
push
test
rolb
fistpl
sub
lret
mov
jns
or
or
jae
movhps
sbb
popf
or
inc
or
push
xchg
and
filds
adc
sarb
or
sbb
sub
add
jb
mov
in
dec
sti
popa
imul
lods
xchg
test
and
pop
ret
inc
nop
in
sub
mov
vmread
mov
mov
into
push
xor
ja
shll
lock
ret
mov
cmpsb
mov
dec
test
or
push
push
push
sub
add
jb
jmp
mov
je
mov
xor
daa
jmp
movsl
dec
fsubs
into
mov
pop
pop
loopne
out
inc
and
jno
pop
push
adc
mov
adc
repz
mov
add
inc
lods
add
fstpl
pop
loopne
mov
xor
fwait
jbe
push
jmp
mov
jmp
jmp
repz
sub
and
sbb
std
mov
movsl
cmp
stc
push
add
add
pop
mov
sub
in
xor
adc
jecxz
xchg
push
jmp
xor
pop
cmp
pop
int3
lea
push
jge
int
or
imul
cmp
pop
cmp
mov
sub
lock
pusha
sbb
jnp
mov
jmp
movlps
outsb
in
xor
dec
pusha
clc
call
call
mov
add
fnstcw
popa
sarb
jmp
mov
bound
add
mov
mov
add
popl
bound
sbb
add
stc
xor
pop
sub
les
jns
cmc
dec
add
lret
dec
rcrl
push
sbb
sarb
roll
pop
stos
xchg
and
test
add
mov
aas
xchg
aas
add
sub
add
sbb
pop
insl
adc
movb
jp
repnz
daa
push
push
jmp
push
adc
mov
test
xor
lret
ret
or
dec
xchg
pusha
add
pusha
and
push
add
aam
rol
dec
fs
jne
add
xchg
cmp
bound
add
jno
pushf
push
clc
add
push
hlt
dec
add
push
cmp
add
scas
push
pop
iret
popf
lret
add
add
cmpsl
push
push
les
adc
xchg
cmpsb
cld
add
jl
lret
mov
call
in
push
mov
push
jecxz
sarb
out
dec
add
cmp
mov
addr16
adc
add
in
push
inc
into
out
mov
add
push
mov
and
jo,pn
outsb
xchg
fidivs
mov
stos
pop
fisttpll
sbb
je
les
sbb
and
or
xor
inc
push
in
gs
rclb
add
fiaddl
pop
jne
lahf
cmp
and
ret
adc
jl
push
lret
shrb
add
xchg
in
daa
pop
jl,pt
add
insl
adc
push
xor
push
lods
and
cmp
aaa
dec
mov
or
addr16
push
add
add
cwtl
dec
mov
and
leave
pop
cmp
enter
scas
push
xlat
lea
fwait
add
jmp
mov
xchg
js
and
add
lds
xor
unpckhps
cmp
inc
inc
ret
inc
inc
jge
es
adc
adc
add
paddw
add
jae
loop
ret
mov
lahf
pop
add
inc
sbb
jno
add
xchg
ficompl
inc
jmp
cmp
lret
icebp
add
daa
pop
mov
sbb
add
loop
mov
or
hlt
rcrl
xor
adc
jmp
pushf
push
pop
fdivr
in
divl
xor
push
subb
cmpsl
adc
int
cmpb
or
sub
test
sbb
jnp
add
xor
clc
or
aad
mov
cmp
mov
out
fnstcw
dec
adcb
addb
pop
mov
mov
adc
mov
ds
inc
add
sti
sbb
and
xor
fadd
mov
cmp
jl
sti
jmp
mov
movsb
inc
dec
pop
iret
bound
xor
imul
push
jo
jecxz
jg
xchg
cmp
adc
movsl
pop
mov
add
notb
jae,pt
sbb
cmp
push
mov
aad
pop
adc
les
add
dec
fldenv
lods
pop
cmpsb
add
push
xor
add
es
add
data16
add
sub
scas
mov
jge
dec
leave
mov
inc
add
mov
lods
popf
cltd
xchg
shll
jg
add
add
sub
sub
pop
jge
jo
daa
scas
add
cwtl
or
xor
mov
mov
mov
xchg
mov
pop
clc
dec
enter
frstor
pop
sarb
bound
push
pop
imul
dec
adcb
cmp
dec
add
mov
lds
sbb
scas
test
int3
dec
inc
int
ss
add
mov
mov
add
bound
add
fs
or
je
int3
int3
add
push
add
pop
push
fsubrs
rcll
add
sti
push
jnp
cmpsl
out
cwtl
push
add
adc
shll
xchg
jecxz
add
add
push
mov
ljmp
repnz
aaa
add
and
add
dec
and
pop
dec
icebp
push
and
pop
mov
fmull
xorb
in
add
jmp
cmp
cmp
adc
add
jne
sub
mov
add
popa
cmp
mov
ret
cmc
and
mov
push
xchg
and
sub
jge
push
leave
push
cmpsl
dec
loopne
repnz
cltd
inc
pop
adc
xchg
orb
add
insl
add
shrl
inc
xor
aam
xor
xor
mov
adc
xor
add
imul
pop
shll
aaa
stos
clc
imull
stc
inc
push
jg
push
cmp
push
mov
repnz
test
pop
outsl
mov
push
filds
stos
lea
and
int
adc
adc
sbb
out
test
cs
adc
rcrb
sahf
and
dec
adc
lret
loope
adc
andb
cltd
sub
mov
fmuls
push
je
add
lahf
push
test
inc
addb
lret
stos
push
out
jge
fwait
dec
pop
lods
xchg
cmp
sub
je
adc
mov
push
lret
pop
or
add
adcb
push
nop
nop
add
dec
inc
mov
add
xchg
clc
leave
dec
stos
js
jp
clc
mov
xor
push
push
pusha
sbb
fs
ds
data16
add
dec
xchg
gs
pusha
push
xor
fnstcw
cli
adc
ret
mov
or
lahf
jo
xchg
ds
mov
jge
push
imul
scas
scas
add
add
pop
pop
add
sub
xchg
add
add
cmp
mov
pusha
and
nop
in
lcall
push
mov
pop
in
jb
pusha
outsl
lds
or
add
pop
bnd
test
outsl
mov
daa
fistpll
in
jg
lcall
or
add
sbb
push
xchg
fnsave
dec
mov
adc
add
and
add
push
jl
jno
mov
rorb
and
sbb
push
push
sbb
outsb
mov
push
pusha
roll
push
mov
mov
xchg
in
je
add
mov
pop
adc
sub
mov
sbb
test
add
int3
loopne
in
cmp
push
add
mov
test
loope
mov
sub
mov
sbb
add
rorb
add
loopne
mov
xchg
lret
sarb
jp
inc
fcomps
add
int
enter
xlat
in
out
movsb
add
cmp
xchg
or
into
sbb
and
add
jnp
inc
xchg
pusha
nop
in
sub
jp
es
or
stos
pop
add
mov
aam
fst
rolb
jno
clc
inc
cmp
jl
sbb
fstpl
in
outsl
add
popa
mov
add
and
mov
adc
inc
or
ja
pop
add
pop
push
inc
nop
repz
hlt
sbb
push
xchg
notl
mov
inc
add
xor
or
mov
call
add
gs
lcall
or
cmp
pop
cwtl
cmp
sbb
sar
mov
xchg
sbb
or
mov
inc
pusha
out
inc
in
pusha
sub
add
test
scas
addr16
lds
arpl
std
rcrb
outsb
add
lock
arpl
add
xchg
cwtl
int3
add
or
adc
cmp
push
cwtl
cld
add
jne
ret
jno
add
mov
cld
das
add
jle
subb
pusha
scas
and
fbstp
shll
push
add
and
xorb
push
jo
push
movsb
cmp
fistps
les
in
bound
mov
inc
xor
sub
or
stos
dec
jge
mov
ror
jns
out
out
insl
pop
pop
add
mov
pop
aas
and
loopne
leave
ret
in
cmp
add
adc
add
xchg
clc
jns
std
pop
xor
sbb
sbb
dec
call
add
into
xor
push
adc
mov
in
testl
xchg
inc
jge
sub
ret
push
add
pop
out
arpl
dec
ds
enter
sti
pop
or
jne
xor
add
pop
stc
sti
cmp
repnz
inc
bound
lock
or
test
lock
jne
jle
add
and
push
je
xor
hlt
ds
sbb
pusha
movsb
mov
mov
mov
push
cwtl
sub
or
in
cmp
cmp
inc
mov
xor
mov
sbb
mov
movntps
or
lret
cmp
pusha
sbb
scas
std
sub
adc
mov
cmp
pop
xchg
out
loopne
out
addb
add
and
lods
dec
pop
jecxz
movsbl
testl
adc
xorb
movsb
cld
dec
add
mov
cltd
dec
pop
daa
sub
test
pop
nopl
pop
fwait
mov
sbb
test
mov
imul
pop
add
loope
dec
add
xor
enter
jb
add
ljmp
sbb
test
scas
ret
in
sbbb
xor
lret
push
mov
aaa
stos
pushf
sbb
jo
addb
add
shll
mov
add
loopne
adc
adc
iret
push
mov
lods
mov
add
push
data16
aas
push
mov
test
sbb
mov
femms
outsl
imul
cmpl
adc
test
addb
jo
dec
add
push
in
enter
mov
stos
test
aad
sbb
add
sbbb
jnp
sarl
push
push
mov
es
cwtl
mov
hlt
push
mov
and
push
inc
loopne
or
add
sub
je
imul
add
mov
cmp
cmc
lcall
and
jno
inc
cwtl
rorl
jle
sub
xchg
dec
loopne
leave
cmp
inc
push
mov
loope
pop
stos
mov
fistl
sbb
pop
push
add
jmp
int3
ds
popa
in
add
sub
mov
add
push
into
pop
fsts
fsubr
mov
dec
mov
mov
sbb
mov
xchg
pop
xor
cld
sub
fcomps
xor
ss
iret
in
add
popa
loopne
jns
cmpsb
xlat
jae
sub
in
jo
shlb
xor
fisubrs
cmc
jge
inc
ja
out
aad
dec
gs
dec
cwtl
mov
jne
cmovo
add
xchg
sarl
mov
fsubrl
inc
add
jbe
movsl
repz
add
out
jmp
hlt
mov
or
or
inc
js
add
inc
mull
test
repnz
xchg
out
out
shlb
mov
mov
rorb
push
push
jae
aam
xor
mov
cmpsb
and
pop
jns
push
xor
jb
cltd
iret
inc
mov
inc
lret
aaa
add
add
pusha
pop
nop
fadd
sbb
dec
jno
lock
jae
adc
inc
pusha
sti
push
clc
inc
hlt
mov
iret
in
add
sub
push
sbb
stc
and
sbb
xchg
push
cmc
jo
add
cmpl
outsl
add
sub
outsb
mov
pop
setne
jb
add
xchg
orb
out
pop
sbbb
mov
lcall
ds
out
insl
in
cmp
jle
push
not
add
add
pop
movsb
or
jb
pop
adc
icebp
lea
daa
iret
lret
pusha
inc
push
mov
add
popa
add
imul
fdivrs
add
jle
adc
lds
insb
push
loopne
add
out
ljmp
mov
cmp
int
jae,pt
add
aaa
cwtl
xchg
addr16
mov
loope
xor
mov
mov
out
push
sbb
fisubl
fstpl
pop
test
jno
sti
add
mov
adc
ds
xorl
scas
daa
enter
xor
mov
jmp
xchg
and
sub
inc
mov
adc
lcall
inc
scas
cli
add
sub
lods
pop
sbb
sub
xorb
pop
add
adc
lock
stc
in
mov
inc
in
outsb
ret
jecxz
jno
aas
push
sahf
andb
sbb
sti
flds
mov
roll
lds
in
mov
test
mov
xchg
pop
inc
xchg
cwtl
xor
jno
sub
mov
or
inc
mov
add
test
mov
jmp
inc
jecxz
mov
jge
mov
dec
and
in
add
xchg
sub
test
dec
rolb
push
inc
mov
mov
pushf
cmp
in
fiaddl
inc
xchg
hlt
adcl
cmc
mov
int
lds
xor
fistl
incl
and
or
mov
syscall
enter
imulb
hlt
sub
daa
sub
sub
imul
ret
in
dec
dec
add
les
add
jno
pusha
nop
aas
jl
in
add
jne
shll
hlt
or
ljmp
cmpsl
pop
or
inc
rcll
pop
pop
xchg
mov
xchg
fucom
pop
jbe
or
sbb
in
sarb
push
push
bound
xchg
rcrb
stos
and
cmp
roll
imul
jns
mov
sub
xchg
mov
insl
xorb
add
cli
push
inc
mov
push
into
push
in
mov
jle
sub
push
lret
mov
add
loop
popa
add
xchg
push
mov
mov
jle
push
cmp
sub
enter
jnp
add
or
xor
mov
adc
stos
adc
sub
sahf
add
pop
pop
xchg
jne
add
lahf
sub
pusha
lods
jno
pminsw
arpl
add
icebp
inc
call
add
adc
jnp
iret
lods
cmp
sub
aad
mov
mov
test
lds
leave
pusha
icebp
mov
in
call
xor
je
adc
sub
cli
push
addl
mov
cld
pop
dec
hlt
mov
xor
loopne
jp
pop
pop
add
clc
sbb
push
sahf
nop
add
movsb
push
subb
loope
shl
pusha
scas
add
add
cmpsb
mov
cmp
fildl
in
pop
in
and
repz
jo
pop
out
add
in
add
mov
ret
lods
adc
ds
mov
leave
cmovns
fucomi
dec
mov
repnz
add
call
je
add
xor
outsb
mov
es
jle
leave
cli
mov
lret
mov
mov
int
adc
add
inc
add
push
xlat
pop
jp
and
mov
push
imul
pushf
and
popa
push
xor
inc
mov
mov
lods
and
in
aas
shr
add
loopne
outsl
pop
aad
pop
add
adc
cmp
int
mov
adc
fs
cmp
push
xor
clc
ficoms
xchg
mov
ljmp
inc
addr16
jne
add
roll
test
lock
andb
stos
fdivr
jne
aam
pop
push
dec
test
adc
insl
add
pop
fwait
sbb
jmp
add
mov
clc
add
sbb
test
loope
add
jno
add
cmp
xchg
add
aam
push
dec
mov
testl
sub
dec
repnz
aas
jecxz
mov
roll
sub
add
cmp
jns
or
imul
test
test
loope
pop
jmp
push
jb
daa
add
push
jbe
and
mov
loope
lods
xor
inc
pop
std
mov
out
add
push
lcall
ret
dec
int3
shrd
sbb
sbb
xchg
mov
stc
xchg
push
imul
subl
lret
or
lock
xchg
cld
push
dec
add
das
and
add
movsl
or
leave
mov
jb
add
mov
dec
nop
icebp
and
sti
int
orb
push
add
push
lea
dec
outsl
sub
ja
push
and
jne
fwait
jp
adc
clc
xchg
inc
outsb
jecxz
sbb
and
sbbb
shrl
rorb
cmp
cmp
and
lahf
cmp
pusha
sub
mov
add
popf
lret
cli
loop
add
inc
mov
sbbl
pusha
inc
inc
ja
sub
cmp
cld
mov
add
cmp
fistl
jecxz
pop
lds
arpl
insb
add
leave
icebp
and
and
push
or
mov
mov
aaa
inc
shrb
lcall
aad
ffreep
fadds
dec
pop
mov
xchg
sbb
dec
jg
or
sbb
stos
add
jmp
xchg
fstp
add
cld
push
out
xor
mov
pop
adc
adc
ret
cmc
test
clc
rcrl
roll
mov
fadd
pop
lea
out
cld
sbb
pushf
add
xlat
add
lods
ja
fisttps
push
add
insl
js
inc
movsl
jle
pop
adc
adc
pop
int
call
push
stc
scas
xadd
rolb
je
mov
jp
lcall
inc
add
clc
loop
pushf
sub
lods
ljmp
cmc
sbb
lahf
lret
add
shll
add
cld
stc
xchg
stos
and
loopne
sbb
lock
pushf
jg
xor
mov
test
sub
daa
aaa
les
and
sar
mov
add
push
call
loopne
and
sub
int3
sub
sub
mov
cwtl
inc
cmp
hlt
mov
adc
push
cmc
push
push
sbb
sbb
jae
adc
lcall
push
aam
inc
cmp
mov
lcall
dec
sbb
rolb
push
dec
xor
enter
xlat
lcall
in
jge
or
inc
inc
nop
pop
jmp
sbb
mov
sbb
popl
ret
test
push
or
inc
pop
sub
mov
icebp
add
inc
xchg
cmpsl
mov
loopne
mov
inc
in
lea
mov
xchg
cmp
mov
out
adc
test
mov
cwtl
lret
add
xorb
mov
mov
xor
sbb
sbbl
std
mov
mov
loopne
xchg
sbb
mov
xchg
les
mov
mov
jnp
mov
mov
stos
or
xchg
mov
lods
subl
add
xchg
test
sub
mov
dec
lret
les
add
stos
je
icebp
and
in
and
xchg
add
fists
dec
jl
push
jp
push
fstpl
and
fildl
dec
or
pop
sub
es
dec
add
sub
adc
inc
or
mov
arpl
or
frstor
loopne
ja
adc
inc
cmpsb
test
sbb
xchg
test
cmp
movsl
sbb
addb
mov
dec
cwtl
lahf
pop
sub
fcompl
inc
mov
inc
dec
in
jae
cwtl
shlb
sub
pop
aas
loope
push
push
aad
clc
dec
in
add
mov
lds
shrb
fs
in
pop
add
sbb
adc
lock
mov
and
push
repnz
sbb
pop
aaa
test
lds
loop
sub
loopne
stos
je
ficompl
popa
dec
inc
push
inc
aaa
adc
rcll
push
in
sti
push
fsubl
enter
nop
mov
pop
push
or
jg
mov
loopne
cmp
fs
xor
adc
rcl
add
xchg
arpl
sub
mov
dec
mov
add
call
loopne
cwtl
hlt
and
dec
inc
inc
enter
movsb
aam
lcall
sbb
jl
push
mov
dec
inc
enter
inc
clc
cltd
mov
cli
out
sub
insl
inc
movsb
les
push
andb
adc
mov
or
data16
push
adc
dec
fdivs
xor
repnz
fcmovb
int
or
rcll
jae
push
push
fcomp
push
xor
dec
pop
sub
jl
stc
or
aas
ret
mov
std
lahf
aam
jg
inc
pop
inc
dec
aad
sub
leave
sbb
ret
sub
in
lods
sub
cwtl
inc
cli
inc
enter
lock
loopne
pusha
jg
mov
ret
push
sub
xchg
nop
mov
js
cmpsb
push
sbb
jg
out
jmp
inc
pushf
clc
mov
cmp
insl
and
xlat
enter
sahf
scas
mov
cmp
push
and
fisttpl
shr
sbb
jb
and
cmp
jbe
xchg
sub
stos
add
adc
cmpsb
add
and
inc
mov
lock
stc
lods
sub
je
or
lea
adc
mov
jp
add
lods
mov
shl
inc
inc
or
jecxz
sbb
sub
pop
addb
cld
jp
das
push
add
in
add
lahf
sub
loop
ds
sbb
sbb
call
or
gs
subb
adc
jg
clc
add
push
ds
pop
push
mov
xchg
mov
paddusb
push
les
gs
mov
insl
test
push
push
ficomps
add
inc
je
jmp
adc
lcall
aad
sub
stc
in
cli
clc
pushf
ret
mov
stos
jl
js
add
xor
inc
mov
jp
adc
jae
in
xchg
sbb
fs
ret
xchg
rorl
and
push
xchg
push
pop
sbb
gs
cmpsl
push
addr16
adc
stos
add
lret
xor
outsb
mov
sbb
xchg
ja
roll
mov
push
fcmovu
adcl
aaa
adc
xchg
add
lock
pushf
add
sub
xchg
mov
hlt
and
and
mov
and
leave
push
orb
pushf
das
cltd
add
and
sti
pop
test
or
lret
movsb
arpl
jmp
mov
push
lock
fiadds
jmp
movsl
ss
add
stos
dec
sbb
xlat
pop
jecxz
sub
cmpb
dec
scas
add
adc
shrb
push
pop
push
xor
pop
stos
movsl
cmp
cmp
pop
sbb
pop
push
xor
gs
push
ss
xor
dec
cs
dec
mov
sbb
imull
hlt
sub
xor
daa
sbb
pop
cmp
sub
sub
sbb
pop
add
sbb
push
pop
xchg
stos
pop
sub
add
data16
mov
xorb
gs
xor
or
xor
jnp
lea
mov
push
ret
jp
and
in
pop
sbb
cmp
xor
pop
jb
push
lods
xchg
sti
fsubrp
sbb
inc
xor
jmp
movsl
mov
or
les
cmp
and
mov
leave
add
jne
mov
or
mov
les
ret
push
test
mov
xorl
jle
sbb
adc
jne
fsubrl
push
int3
push
or
or
sbb
mov
test
inc
cmp
mov
or
lds
pop
mov
addb
push
sbbl
ret
enter
sti
and
cmp
xchg
daa
repz
je
adc
std
push
stc
sarb
jmp
pop
xor
jne
adc
adc
leave
add
mov
sub
or
fsubrl
xor
addr16
sbb
or
mov
sub
cmpsl
test
pop
cmpsb
lds
iret
inc
xlat
loopne
rclb
sarb
xor
dec
push
push
mov
aaa
lea
movsb
or
adc
les
les
and
lds
lods
pop
adc
popa
inc
jmp
add
outsb
std
jb
adc
or
push
int
cld
sub
mov
sub
adc
mov
test
inc
sub
lock
and
adc
mov
clc
and
mov
mov
sbb
mov
aad
icebp
shlb
mov
cmp
adc
add
or
jp
cmpsl
xor
ljmp
cmp
adc
sub
int3
pop
sub
sub
xor
xor
and
and
imul
sar
es
adc
xchg
pushaw
xchg
shlb
mov
out
adc
je
inc
nop
enter
nop
pop
xor
mov
mov
es
mov
sbb
enter
push
int3
pop
add
adc
stos
mov
movsl
in
insb
icebp
inc
pop
nop
inc
pmaddwd
pop
std
rorb
in
cmp
cs
mov
and
jne
xor
mov
mov
rcpps
and
add
out
fwait
cli
fisttpll
dec
add
or
stos
add
push
push
add
mov
jbe
ljmp
push
mov
push
pusha
pop
imul
fnstsw
lock
jmp
in
fcoml
sti
lock
fidivrl
pop
xchg
sahf
sbb
jnp
test
dec
add
mov
lock
cmp
or
add
jb
test
add
or
jae
or
ret
fadd
xchg
leave
in
int3
bound
pop
cltd
add
scas
dec
inc
add
adc
pusha
xchg
add
das
ja
add
call
imul
mov
jmp
add
mov
imul
push
xlat
jp
repnz
sbb
add
push
sub
roll
or
fsubl
add
pop
push
and
sub
data16
movb
aas
in
lcall
jb
ja
sbb
add
sub
jo
pop
movsb
lods
mov
xor
add
pop
imul
add
xchg
mov
test
pusha
jns
mov
das
ljmp
test
ds
fisubl
mov
mov
cmpsb
or
push
inc
enter
mov
xlat
add
out
mov
xor
shlb
add
cld
fs
jmp
xchg
adc
push
or
cmp
add
jg
sub
andl
cmpsl
pop
add
dec
push
or
cwtl
xchg
sub
and
add
push
sub
lret
or
sarl
hlt
addb
xor
dec
inc
popa
push
add
mov
dec
and
xor
es
aad
pop
aas
fisttpl
inc
jns
xchg
cmp
lods
clc
add
js
jecxz
ja
jle
rcrb
adc
push
xor
jl
cli
add
sub
iret
pushf
and
or
scas
xchg
dec
pop
frstor
sbb
fcompp
call
clc
xor
inc
lret
fldt
jo
cmp
and
sub
arpl
cwtl
xor
test
xor
xchg
sbb
lahf
and
leave
xchg
int
adc
xor
icebp
add
nop
shrb
movsl
dec
jge
mov
xacquire
cmp
sub
inc
pusha
xor
sahf
add
cmp
add
scas
sub
add
sti
mov
popa
push
lahf
pop
or
add
enter
mov
jmp
dec
mov
mov
cli
cmp
push
aas
movsl
inc
jl
and
fsin
addb
mov
fldl
dec
dec
aam
mov
fwait
cld
add
fsts
popa
add
out
xor
push
xchg
sbb
lea
pop
fimull
jne
fbstp
ret
pop
fldcw
jb
imul
push
mov
push
add
filds
nop
loopne
add
adc
add
lret
iret
push
mov
jle
shrb
aaa
cltd
jmp
cmp
cmpsb
or
mov
mov
cli
inc
into
xchg
in
movsb
sarb
add
mov
loopne
lds
outsl
lock
fsts
shl
stos
mov
shl
sbb
mov
cmpb
jp
push
lret
shrl
add
inc
imul
lods
mov
pop
out
out
add
jg
movd
xor
jge
fdivs
xorl
cmp
inc
xorb
hlt
cmp
lods
and
loop
data16
xor
enter
adc
popf
add
je
inc
push
and
into
and
hlt
lods
push
mov
les
test
sbb
addb
popf
jecxz
push
js
xchg
lahf
xor
cs
xor
dec
jns
mov
mov
inc
enter
add
lds
stc
jge
dec
jnp
add
jmp
rcrb
pop
rcrl
mov
adc
subl
cld
out
add
sahf
push
leave
push
and
lea
enter
in
jge
ss
cmc
mov
rolb
sub
out
clc
mov
cmp
push
add
push
push
leave
or
dec
mov
fstps
dec
xchg
cmpsl
adc
cmp
fsubl
push
add
leave
test
mov
pop
sub
mov
faddl
cmp
ds
shlb
lcall
cmp
mov
imul
or
push
in
mov
cmp
aad
add
pop
jne
movsl
add
ja
push
jl
pop
jle
in
jmp
and
add
xor
add
adc
pop
inc
int3
mov
rol
xchg
test
sti
cmpsl
roll
mov
ret
adc
sbb
and
push
xchg
sbb
dec
bound
sub
lods
add
ss
cli
clc
xchg
cmc
js
jle
pop
imul
add
jns
enter
lds
pop
cmpsl
pop
jp
push
jl
push
jge
ret
inc
mov
pop
dec
cwtl
gs
and
cli
mov
subb
repz
idiv
mov
js
push
pop
sbb
fwait
loopne
pop
add
cld
mov
fadds
hlt
scas
add
mov
mov
jmp
and
add
push
inc
push
mov
add
or
cmpsb
and
add
test
inc
or
cmp
imul
andb
lods
out
sti
and
cmpl
push
je
xlat
adc
cwtl
or
out
inc
mov
mov
les
add
mov
fsubrs
sub
lahf
add
cs
xor
cltd
cmpb
fimuls
fwait
sbb
lock
adc
test
add
cs
imul
sbb
push
inc
inc
push
rorl
lock
and
scas
pop
mov
aas
out
aaa
lret
dec
dec
mov
add
icebp
repnz
jg
in
pop
adc
xor
xchg
mov
pusha
popf
mov
ljmp
xor
testl
and
orb
enter
adc
and
test
roll
adc
loope
add
dec
insb
add
pop
sub
and
push
add
imul
add
jb
jmp
or
xchg
inc
dec
pop
or
add
pusha
scas
aaa
rcr
pop
cmp
add
sti
imul
fdivrs
add
subl
sbb
int
loopne
aam
call
pop
xor
insb
mov
inc
push
jne,pt
pop
add
inc
fmul
sbb
add
xor
cmc
push
xlat
mulb
out
repz
cmc
adc
dec
subb
push
pop
add
inc
lds
rolb
jb
jo
xchg
inc
inc
add
dec
add
mull
idivb
aas
jl
dec
dec
daa
xchg
xchg
or
sbbl
or
fwait
push
mov
inc
lcall
clc
add
xchg
fdivrs
or
mov
jae
cwtl
nop
out
mov
repz
cwtl
mov
cmpsl
lea
push
out
mov
test
ds
nop
subb
lds
xor
and
push
dec
xor
clc
sub
mov
sub
pop
ret
outsl
imul
mov
jo
add
pop
dec
sub
pop
pop
cs
pop
push
sub
dec
inc
das
adc
cmp
lahf
xchg
sub
pop
xor
push
test
cli
mov
pop
in
mov
mov
push
data16
add
mov
or
decl
add
mov
mov
add
push
movsl
xor
loop
xor
adc
mov
movsl
call
cltd
or
scas
xor
fs
mov
inc
loopne
jmp
inc
jp
inc
sti
inc
or
movsl
jo
xor
adc
insl
pushf
lock
jns
push
test
push
or
and
xchg
stos
push
push
cmp
mov
and
mov
dec
mov
mov
mov
in
add
cmc
js
dec
or
stos
cld
sar
pop
mov
add
xchg
push
or
cmpb
ds
idivb
jmp
xor
sbb
mov
test
sbb
adc
inc
push
xchg
cmpsb
stos
inc
add
sbb
out
cmp
movsl
jbe
or
add
incl
adc
mov
sbb
dec
mov
xor
pop
xor
adc
xchg
js
and
out
cmp
add
pop
pusha
ja
repnz
cmp
adc
aaa
clc
movsl
cmp
gs
test
jmp
sbb
xchg
jp
ret
add
sbb
orb
xchg
jnp
sub
test
jp
orl
mov
push
loopne
cltd
outsl
rolb
addl
cli
imul
idivl
sub
mov
xor
call
pop
pop
dec
sbb
pop
xor
push
mov
sti
incb
dec
or
pop
sub
andl
inc
loope
pop
rorl
movsl
jl
push
xor
mov
add
push
xor
jne
or
ss
adc
pusha
mov
hlt
movsb
inc
push
and
sbbb
sbb
movsl
sub
sbb
call
add
imul
cmp
add
rcll
xor
movsl
adc
inc
addb
push
bound
cs
clc
das
sbb
jo
inc
jns
dec
stc
add
dec
testb
push
sub
sbbb
pusha
xor
or
add
add
pop
divl
push
dec
cwtl
lods
mov
push
sbb
inc
leave
push
je
test
sub
loop
and
sub
in
fs
mov
sbb
xchg
cli
cs
das
outsb
jns
xlat
push
lods
lcall
scas
pop
popf
mov
xchg
lret
aam
add
lock
add
cmp
pop
lock
sub
cs
outsb
lcall
inc
out
push
loope
inc
hlt
sbb
push
fbstp
les
loopne
add
sbb
inc
lock
add
add
mov
add
add
add
getsec
loopne
xor
jmp
push
fs
leave
in
xchg
sbb
decb
xor
lock
add
push
xor
das
cmpsl
shr
sbb
inc
cmp
and
ss
lret
jmp
add
inc
lock
dec
in
and
inc
pusha
in
xor
sub
pop
ss
fcoml
or
inc
mull
inc
jmp
push
sbb
jns
and
inc
hlt
inc
lods
insl
out
lahf
push
dec
fadds
rcrb
or
pusha
lds
sbb
mov
incb
das
add
fcomps
dec
add
push
imul
and
jmp
or
enter
xchg
mov
enter
cltd
lea
sub
dec
cmp
inc
fcomps
imul
popl
sbb
inc
lahf
xchg
repz
push
push
cmp
addb
xor
or
nop
enter
les
cmpb
lahf
dec
or
in
dec
jl
cmc
and
bound
jns
shlb
inc
inc
clc
nop
es
cmp
cwtl
sbb
mov
and
mov
lock
jl
lock
popa
lods
sub
and
pop
adc
sub
stos
sti
and
jge
fisttps
sub
cmp
add
gs
movsb
fidivl
ljmp
xor
imul
add
cli
dec
in
pop
loope
repz
shr
movsb
js
rolb
pop
dec
pop
in
dec
adc
mov
aam
inc
push
push
pop
inc
dec
jge
rorb
das
fbstp
mov
sbb
and
mov
mov
inc
inc
and
inc
add
int
push
add
nop
inc
out
imul
jae
sub
and
leave
xor
sbb
iret
mov
pop
add
loop
or
dec
loopne
jne
je
mov
fdivs
lret
mov
inc
mov
push
ret
sahf
adc
lds
cmp
or
add
sbb
roll
cmp
cmp
cmp
push
dec
inc
stc
xlat
mov
xchg
sub
mov
add
pop
leave
rol
mov
push
jnp
jle
mov
dec
ret
dec
cmc
lret
push
push
loope
mov
sub
adc
dec
ret
jb
add
pusha
xor
dec
mov
les
loope
and
in
les
adc
inc
push
push
sbb
test
lods
in
xor
clc
xor
push
cmc
out
adc
pusha
and
mull
cmp
jns
cmp
push
arpl
xchg
ficomps
sar
add
xchg
mov
inc
out
rcrb
push
mov
loop
or
loope
test
stc
and
bound
pop
and
lea
cld
push
add
dec
shrb
movsl
jnp
es
jmp
push
xor
jb
fsubr
cmp
jge
pop
les
das
cmp
cmp
mov
add
cmp
mov
psubb
sub
inc
scas
jo
mov
xchg
and
push
push
test
jns
jns
into
pop
in
or
inc
int3
or
and
mov
aam
rcrl
push
push
cltd
sbb
mov
data16
jmp
lahf
or
pop
xor
popa
jo
shl
jl
dec
push
or
lret
sub
mov
movsl
adc
add
out
add
fs
stc
popf
or
mov
filds
cmp
outsl
movsl
inc
fdivr
push
push
into
ret
int3
and
push
sbb
push
mov
jo
dec
out
xor
dec
inc
adcb
mov
pop
push
dec
mov
mov
jne
enter
adc
push
stos
cmp
jbe
in
sbb
cmp
std
sbb
xchg
push
ss
popf
fadd
pop
fcomi
add
jne
addr16
push
cwtl
cmpb
sbb
cmp
out
ret
imul
leave
xchg
xchg
daa
cmp
add
popf
push
mov
and
cs
push
inc
cltd
adc
push
push
adc
pop
adc
fcoml
inc
push
in
lret
fisttpl
adc
loopne
jo
lcall
sbb
push
pop
addl
inc
push
pusha
subl
inc
jle
sub
add
add
jne
xor
adc
push
mov
push
fimuls
repz
in
inc
dec
adc
mov
divb
push
mov
lods
add
mov
inc
or
and
fisttpl
cmp
pusha
shlb
cmpsl
cmpb
out
movsb
or
idivb
jns
bound
mov
adc
repz
push
sub
gs
push
ljmp
mov
js
mov
xchg
or
js
stos
cmp
inc
add
lcall
fcmovnbe
ficomps
nop
xor
stos
mov
jl
or
gs
in
adc
test
in
jno
jp
adcb
fiaddl
jne
mov
and
loop
push
das
mov
stos
and
pusha
stc
cmp
je
mov
sbb
aas
xchg
fs
add
sbb
dec
in
push
add
test
jne
mov
int3
nop
add
jae
pop
out
dec
dec
adc
aaa
les
mov
hlt
mov
xor
or
jne
sbb
add
mov
pusha
data16
dec
nop
add
mov
les
sub
rolb
mov
xchg
dec
xchg
cmovbe
lods
loopne
adc
or
jns
mov
mov
xchg
aaa
shrb
mov
xchg
xor
push
push
push
jns
mov
out
or
pop
inc
or
fwait
testl
xchg
dec
gs
mov
icebp
and
xor
sub
mov
fmulp
je
dec
and
out
idivb
mov
and
clc
es
pop
inc
loop
mov
mov
cmpsb
adc
dec
mov
inc
arpl
xlat
xchg
stc
add
jne
jb
pop
mov
sbb
adc
lea
or
shrb
fidivrl
inc
xor
imul
cmp
bound
mov
or
test
cli
test
adc
data16
lock
and
pusha
mov
push
or
mov
nop
repnz
shl
rol
dec
lret
and
ficoms
loopne
push
repz
cld
lods
jno
mov
jbe
cmpsl
loopne
pop
fwait
mov
mov
pop
sbb
sub
cmp
jb
hlt
jno
mov
insb
cwtl
nop
pop
fs
adc
mov
cltd
pushaw
xor
jp
negb
imul
jg
lock
jns
nop
add
call
int3
sbb
push
sbb
orb
xchg
add
cmp
pusha
aas
dec
push
es
xor
xchg
pop
orb
pusha
sub
add
mov
jae
xor
out
adc
hlt
js
cld
add
cmp
cltd
roll
pop
xor
mov
mov
jmp
pop
mov
and
adc
add
add
xor
sub
jae
and
rolb
mov
int
add
je
jge
adc
pop
push
jae
push
in
clc
les
dec
mov
jns
adc
mov
add
in
sbb
testb
lock
dec
xchg
rclb
push
flds
addb
jbe
and
aas
or
xchg
push
ja
or
inc
cli
xor
insb
mov
adc
test
imul
mov
pop
lret
sub
jne
pop
out
fldcw
add
lahf
add
arpl
pinsrw
sbb
les
xchg
pop
cmp
mov
add
rcl
cmp
mov
pop
pusha
je
mov
cmpsb
in
jo
es
test
hlt
cmp
mov
cmp
jae
mov
jge
sbb
cli
jno
lret
mov
call
or
int3
nop
in
pop
test
pop
sub
add
sub
and
imul
fisubrl
inc
test
xor
lahf
enter
xor
sub
in
loop
xor
add
xor
adc
and
mov
and
pop
add
jbe
sbb
jge
sti
xor
sarl
jmp
arpl
push
pop
inc
or
sbb
inc
xchg
fcoml
dec
add
andb
xor
repz
jne
xor
adc
xor
add
sti
decb
cmc
and
jl
mov
ja
adc
or
jne
clc
shrl
cmp
jnp
addb
dec
pop
ret
loop
loopne
sub
pop
lret
lcall
pop
sbb
mov
sub
push
sub
mov
das
les
push
ja
call
or
xchg
and
cmp
das
jl
insb
add
push
push
inc
xor
adc
sub
clc
or
fiadds
rolb
pop
mov
add
adc
push
cltd
dec
jb
cmpsl
rcll
sahf
repnz
adc
ja
or
mov
cwtl
and
xchg
cwtl
orb
out
cmp
jl
cwtl
dec
rclb
pop
xor
test
cmpsb
in
xor
dec
ljmp
pop
push
hlt
xchg
rolb
daa
jne
xchg
insb
add
das
inc
add
xor
popf
jle
out
mov
les
sub
test
push
inc
fldl
mov
xor
adc
enter
sub
add
loop
xchg
rclb
lods
mov
adc
test
popa
mov
lret
xchg
and
sub
mul
sub
lahf
clc
aam
pushf
in
loop
add
push
xchg
fldl
add
inc
jne
cmpsb
in
js
adc
mov
jl
cmpsl
push
in
mov
dec
mov
nop
pop
jle
xor
cmc
push
xor
cld
repnz
nop
mov
sbb
gs
outsl
mov
cmpsl
hlt
inc
jmp
and
xchg
xchg
hlt
inc
fwait
mov
cmp
xorl
movb
adc
es
pusha
adc
andb
sahf
leave
push
mov
add
js
stc
cld
xor
or
dec
dec
lock
and
ss
imul
cmpsb
int3
cwtl
sbb
aas
inc
into
les
mov
pop
adc
jg
dec
xchg
add
in
sbb
test
out
ss
sbb
cwtl
sub
xor
mov
inc
mov
cmp
dec
rorb
enter
xor
sbb
adc
inc
fldenv
mov
pop
dec
shlb
mov
jp
jns
inc
jmp
dec
xor
not
mov
hlt
add
pop
sub
bound
mov
nopl
pop
lea
and
adc
mov
ret
dec
adc
push
xchg
in
pop
add
jge
movsb
dec
or
hlt
js
imul
inc
dec
test
cmp
sub
xlat
or
inc
aas
pop
jmp
adc
cwtl
test
decb
add
and
add
into
xlat
xor
push
movsb
fisttpl
addr16
adc
add
xor
xchg
add
in
xor
cmp
mov
aam
fwait
and
call
xchg
sub
mov
rcll
loop
mul
xchg
daa
jb
push
xchg
lods
bound
mov
scas
out
mov
lahf
inc
daa
sub
sub
sbb
mov
or
add
mov
or
rcr
sub
movsl
push
sahf
test
push
int
pop
or
outsb
into
push
push
cmp
mov
jae
clc
in
pop
leave
jns
lahf
inc
das
lcall
or
inc
xchg
mov
addb
dec
cmp
sahf
testl
and
into
dec
rol
cmp
dec
lock
aam
cmp
fsub
lods
nop
dec
outsl
cli
test
rcrb
lods
xchg
jmp
cld
or
inc
jmp
insb
xor
jae
mov
xor
inc
adc
xor
sahf
stos
mov
add
xchg
into
jmp
mov
jae
add
mov
mov
mov
bound
stos
inc
xchg
add
adc
bound
mov
sub
push
add
or
mov
fisubl
lret
push
mov
xor
leave
xchg
pusha
nop
xor
add
cmc
pop
push
or
and
dec
and
sub
pop
leave
cli
pop
mov
and
adc
mov
std
dec
or
cmp
mov
insb
sub
je
cmp
add
cmp
mov
adc
ljmp
sub
xor
add
push
jae
xchg
and
push
jle
and
jno
xor
push
add
pusha
inc
push
sarb
inc
mov
sub
cmp
jb
add
or
push
imulb
adc
push
inc
outsl
lret
das
pop
icebp
xchg
je
add
xchg
pop
dec
stos
add
out
cmp
adc
ret
add
xchg
in
push
mov
xchg
dec
es
sbb
push
inc
jo
loopne
imul
dec
rcr
inc
call
or
dec
nop
test
xchg
push
inc
popa
xor
fdiv
and
xorb
mov
mov
insb
repz
and
cmp
add
mov
call
mov
xchg
adc
and
xchg
jne
cmp
cmpb
push
push
mov
pop
adc
sub
adc
lret
add
xor
push
xor
popf
and
negl
mov
aam
or
les
movsb
je
xor
push
xor
js
sbb
mov
xchg
pop
xlat
cmc
lods
sub
inc
movb
mov
add
or
pop
mov
jne
bound
call
ret
xchg
mov
jno
cwtl
adc
ret
mov
push
sub
imul
sahf
cltd
add
cli
mov
push
jmp
std
fnstcw
aaa
aas
or
mov
pop
fcompl
add
dec
push
out
inc
push
sbb
ret
mov
inc
push
ret
adc
mov
cmc
popa
test
sbb
sbb
add
rorb
mov
cmc
sbb
dec
cmp
mov
and
rolb
call
sub
sub
cmc
xor
push
xor
out
leave
pop
sahf
stc
test
and
movsl
imul
or
xchg
adc
andb
sbb
xlat
or
push
das
mov
and
and
in
sub
xor
clc
sub
push
out
adc
lock
cmp
popl
lds
jmp
pop
adc
and
stc
loope
in
pusha
enter
push
pop
mov
dec
popa
shll
adc
jns
mov
xchg
test
cld
inc
outsl
lods
jae
repz
sbb
pushf
fnstsw
cmpsl
shl
pusha
sahf
mov
lea
bound
dec
call
daa
cmp
adc
cmpsl
in
stos
sub
addr16
inc
leave
xchg
xor
add
xchg
add
movsb
lcall
push
sbb
push
dec
pusha
pop
jb
and
inc
push
ret
stos
sub
adc
pop
jns
mov
push
pop
push
mov
pop
ret
adc
inc
add
fldl
idivl
icebp
mov
dec
das
aad
mov
mov
inc
xor
jne
lods
in
iret
jnp
adc
jb
xchg
adc
add
mov
jns
icebp
sub
add
xor
add
or
movsb
push
clc
add
mov
jmp
incl
fcomp
dec
xor
add
cwtl
arpl
and
xor
add
sbb
movhps
aaa
movzwl
and
popa
or
or
cmc
add
in
add
pop
minps
add
jae
cmp
cltd
popf
push
jge
pop
aam
pop
mulb
sarb
sub
bound
adc
and
push
leave
ss
movsl
lea
call
pop
pop
lods
and
mov
cld
sbb
adcb
or
xchg
inc
xor
xchg
or
test
or
inc
andb
and
cmp
movb
xor
sub
lds
add
mov
jnp
xchg
arpl
cs
js
adc
mov
adc
xchg
or
jne
enter
push
rorb
xchg
adc
pop
cmp
pop
mov
movsb
push
addr16
test
xchg
int
test
ss
xor
fwait
sbb
mov
pop
push
cs
push
or
xor
test
xchg
sarl
mov
push
movsb
jp
add
or
cmpw
xchg
pushf
ljmp
cmp
add
sbb
pop
ret
inc
mov
add
ret
push
mov
xor
pushf
add
inc
or
push
pop
mov
sub
pop
xor
pop
ret
mov
push
jl
addb
mov
loope
inc
xor
adc
outsb
repz
fstps
inc
jmp
fndisi(8087
sub
or
mov
jo
and
mov
mov
add
pop
add
test
flds
or
add
ss
pop
mov
and
add
pop
pop
popf
push
mov
and
jo
cmp
jecxz
in
repnz
dec
inc
and
inc
cmp
add
pop
add
inc
andl
arpl
adc
pop
popf
inc
cmp
cmc
cmpl
xor
mov
add
orb
cs
and
mov
add
mov
test
pop
inc
mov
call
xor
xorl
add
adc
stc
loopne
stos
clc
out
fldl
scas
push
lahf
bound
cmc
push
or
mov
jns
pushf
add
jno
adc
cmc
or
mov
les
pusha
xchg
mov
push
mov
mov
popf
jno
outsl
aas
ljmp
jg
stos
add
shl
sbb
mov
push
dec
sti
jae
mov
add
aas
add
pusha
xchg
scas
je
push
mov
repnz
insb
fsubl
fmul
sbb
cwtl
xchg
enter
jl
popf
and
inc
add
aad
adc
sub
mov
push
iret
stc
test
adc
jae
lea
cmp
sub
xor
mov
lret
iret
bound
test
inc
dec
or
inc
push
mov
or
mov
cs
add
mov
dec
jno
or
cmc
fwait
and
or
and
adc
inc
sbb
popa
jg
inc
adc
mov
lret
mov
lret
add
nop
ja
repnz
adc
repnz
shrl
cmc
sbb
jmp
xchg
xor
dec
dec
out
inc
xchg
pop
inc
sub
xchg
or
xor
and
push
mov
dec
add
dec
in
mov
iret
lock
ficomps
or
mov
movzwl
dec
inc
push
cmp
popl
sub
pop
inc
sbb
mov
in
iret
loopne
inc
lds
mov
addb
add
cld
push
jecxz
repnz
add
add
cmpsl
sbb
ret
xor
jne
rclb
movsl
sbb
adc
lds
sbb
ja
xchg
std
dec
punpckldq
add
in
pusha
daa
jl
pop
push
cmp
scas
mov
das
add
loope
dec
mov
pop
jnp
jne
test
test
jo
jge
aas
les
ss
adc
addr16
and
inc
push
es
filds
xchg
cmp
pop
aad
cmp
popf
pop
adc
addb
sahf
loop
dec
xorl
cmp
and
es
add
lods
adc
jecxz
and
out
pusha
jle
add
in
xor
add
mov
mov
dec
sbb
mov
mov
mov
test
clc
mov
inc
insl
add
sti
addl
jnp
inc
sub
mov
add
jae
loope
sub
xchg
sbb
inc
adc
fsubrs
inc
jns
call
cmp
cltd
fiadds
push
add
sub
or
mov
in
add
std
mov
mov
lods
sbb
call
and
popa
iret
lods
mov
decl
enter
cli
std
cmpsb
or
push
xor
jp
sbbl
les
fists
out
sub
hlt
shlb
outsb
jg,pt
movntq
out
xor
add
mov
jb
popa
add
xchg
dec
xor
and
pop
insl
dec
pop
jns
dec
stc
add
test
mov
sbb
mov
mov
mov
sub
rcrl
mov
lret
sub
adc
xchg
in
adc
xor
jo
stc
cmp
jmp
adc
scas
loop
add
jno
xchg
add
mov
cmp
pusha
call
lahf
dec
insl
rorl
pop
or
popa
in
xchg
sti
call
mov
pop
nop
mov
stc
xchg
jb
xor
loop
mov
aad
xor
mov
loope
add
in
nop
and
push
xchg
iret
mov
inc
sub
in
push
cmpsl
and
mov
mov
out
add
frstpm(287
shr
pop
dec
xchg
add
pop
addr16
mov
jmp
dec
imul
sbb
loope
add
mov
sbb
mov
incb
hlt
shll
jbe
mov
sub
sti
pop
leave
stc
rol
aas
mov
mov
and
ret
ss
or
cmp
movsl
sbb
jmp
mov
faddl
icebp
add
xor
in
repnz
outsb
loop
test
adc
fs
or
sbb
rcrl
pop
aas
leave
sbb
jnp
adc
adcl
pop
ret
sub
sbb
mov
dec
fwait
inc
dec
add
cwtl
addr16
data16
push
xchg
inc
jg
sbb
fisubs
push
push
mov
mov
mov
ror
leave
pop
repz
or
push
push
jmp
int
dec
and
push
leave
jno
adc
aaa
fiaddl
adc
add
sbb
bnd
push
inc
mov
and
lods
jecxz
test
xchg
dec
or
dec
jbe
dec
mov
dec
aas
push
mov
mov
push
fwait
push
shl
sbb
scas
xchg
icebp
in
stc
popf
cmp
adc
push
sub
xor
and
fnstenv
ss
rorl
pop
pop
and
lret
jns
or
jg
xchg
notb
or
pusha
xor
sar
jo
xchg
add
jnp
movsl
stc
xchg
and
rorb
pusha
mov
or
add
fstl
sub
cmp
mov
sti
sub
shl
and
mov
add
fisttpll
movsl
sti
dec
std
cmc
push
sub
mov
repz
add
cmp
sbb
inc
xlat
arpl
dec
pop
sbb
dec
cmpsl
stos
add
push
lods
loopne
xchg
dec
imul
dec
mov
pusha
das
cmp
jl
cmp
mov
pop
in
mov
imul
push
jmp
loopne
and
dec
xchg
add
inc
add
xor
mov
sub
add
sbb
push
mov
adc
pop
sub
sbb
xchg
out
stos
or
sbb
out
inc
je
movsb
jle
xor
pusha
sbbl
ror
sbb
les
mov
pop
push
mov
das
inc
or
and
iret
loop
add
inc
jle
add
in
mov
inc
cmpsl
jle
push
inc
sbb
pop
add
shll
xchg
adc
sbb
push
mov
add
cwtl
or
mov
and
xor
push
pusha
test
dec
inc
add
xor
mov
mov
sub
push
rolb
mov
dec
test
mov
popf
adc
mov
sti
jmp
xchg
int
incl
sub
sbb
shll
adc
adc
inc
sub
jmp
cwtl
lock
cs
gs
add
add
xchg
mov
into
and
int3
add
and
inc
xchg
mov
dec
inc
dec
push
gs
push
aas
cmp
sub
lea
push
mov
mov
aaa
mov
dec
add
popl
mov
incb
cmc
add
sub
ret
jle
xor
dec
or
and
sbb
stc
push
lods
repnz
mov
inc
xor
test
or
sbbl
js
dec
rcrl
out
add
rol
outsb
cli
cwtl
cmp
mov
mov
outsb
sbb
movsb
aam
shll
loop
les
mov
mov
into
mov
test
sbb
cwtl
lds
push
xor
ja
lods
fisubs
jmp
adc
jbe
xor
add
stos
sbb
push
outsb
shrl
test
in
mov
and
xchg
popa
gs
jbe
dec
fcomi
andb
mov
add
es
mov
inc
jo
repz
jle
mov
fmul
nop
insb
dec
movl
test
or
add
sub
mov
daa
pusha
int
jns
xchg
sub
xchg
inc
xchg
cld
movsb
adc
pusha
clc
mov
mov
iret
add
adc
in
xcrypt-cbc
cmpsl
push
xor
loopne
pop
inc
and
inc
mov
into
sub
mov
adc
fsubrl
mov
sub
cmpsl
cltd
xor
dec
pop
subl
movsl
and
pusha
adc
and
push
xor
sbb
dec
mov
add
xchg
popa
mov
cmp
dec
add
int
adc
fisttpl
jno
xor
out
fcoml
xchg
add
push
and
mov
cmpsl
xlat
dec
pop
cmp
mov
cs
push
cltd
orl
adcw
mov
mov
testl
xchg
gs
bound
adcb
push
xchg
das
neg
mov
mov
popf
ljmp
mov
sbb
and
mov
or
sbb
or
jmp
enter
or
imul
mov
outsb
and
jne
outsb
jb
jmp
add
stc
scas
subb
pushf
or
inc
outsl
push
push
xchg
sbb
or
xchg
les
hlt
popa
add
mov
pop
xor
cld
mov
jo
addr16
jmp
mov
pop
adc
rcrb
insb
push
fnstsw
repnz
movl
cmpsb
add
pop
dec
push
inc
aaa
mov
inc
mov
lret
gs
rolb
mov
mov
nop
jb
dec
dec
adc
pusha
push
cwtl
je
sbb
and
push
or
popa
enter
mov
rolb
cltd
push
aam
jle
sbb
xchg
push
mov
inc
sub
inc
mov
fiaddl
and
sub
adc
pop
jb
xchg
adc
xor
jecxz
add
mov
sub
and
popa
mov
pusha
pusha
mov
dec
cmpsl
push
or
jmp
mov
add
add
jge
pop
push
lods
lds
adc
or
push
fsub
cmc
sub
add
xchg
mov
sbb
xorb
add
scas
add
add
addr16
fwait
xchg
cltd
pop
push
pop
jecxz
and
test
imul
out
mov
out
push
fs
sarl
ss
sbb
mov
add
push
test
ret
into
clc
mov
xor
dec
clc
jne
mov
fsubrs
add
stos
push
mov
js
shl
mov
clc
mov
inc
inc
pop
sbb
call
ja
push
push
pusha
scas
leave
inc
push
and
sbb
and
push
cmp
test
or
lock
add
mov
fcoml
adc
and
adc
xor
mov
mov
jecxz
sbb
pop
fdivl
test
in
dec
push
pop
cmp
add
cmp
add
jmp
inc
out
cmp
movsb
pop
je
adc
test
or
sbb
xchg
pop
or
dec
xor
cmp
and
cmp
lea
cmp
shrl
xor
arpl
cmp
adc
das
lods
movb
or
xchg
fwait
aas
add
insb
adc
or
mov
adc
add
popa
push
inc
lea
add
or
add
enter
sbb
cmp
mov
out
nop
mov
push
adc
cld
pop
mov
jno
lock
jae
xor
enter
sbb
shrb
adc
ficoms
stc
add
pop
clc
fldl
loopne
notl
or
or
das
nop
addl
jg
test
insb
add
adc
stos
jp
add
push
push
mov
in
mov
inc
test
sub
popf
mov
loopne
fwait
ljmp
aad
repnz
insl
adc
push
repz
xor
cs
mov
adc
mov
sbb
incl
test
add
xor
ret
sbb
jg
cmp
arpl
aad
pop
test
cltd
shrl
jns
es
cli
or
add
fcomi
ret
add
lahf
imul
push
push
pop
push
dec
adc
ja
cmpl
adc
lock
push
dec
push
out
int
test
pusha
in
jge
push
push
ret
shlb
pusha
lret
cwtl
fs
xchg
iret
jge
or
iret
add
out
xorb
adc
adcb
test
add
mov
clc
popf
xchg
dec
push
test
push
bound
add
xor
movsb
xchg
in
xchg
movsl
insl
add
xchg
mull
xchg
add
cs
cmp
rolb
mov
insl
xor
jne
push
andb
dec
xchg
adc
cmp
inc
mov
addr16
or
add
lea
xorb
and
jle
xchg
popa
notb
icebp
rclb
cltd
inc
adc
fs
aaa
test
sub
xor
and
pop
inc
mov
sub
push
mov
lret
test
xchg
sti
pop
push
das
aaa
fs
mov
cmc
cmp
icebp
adc
or
int3
nop
in
or
xor
push
loope
sti
lock
jnp
stos
idivl
and
int3
rcrl
xor
stos
add
add
mov
inc
pop
or
nop
mov
repnz
cmp
es
or
jae
cmp
movsl
sub
mov
loope
pop
sbb
iret
jmp
xchg
stc
bound
xor
and
add
scas
js
xchg
push
and
mov
andl
cmpl
cmp
sub
adcl
adc
mov
mov
pop
dec
sbb
add
pusha
out
push
jg
add
jecxz
into
sub
xor
xchg
mov
xchg
popf
xchg
mov
hlt
cmp
ljmp
xchg
wrmsr
add
jmp
rolb
add
push
dec
add
mov
xchg
hlt
ljmp
sti
push
jne
mul
cmp
es
fimuls
rcrl
pop
ds
sbb
jo
xor
aam
xchg
mov
dec
xor
xchg
dec
aas
shlb
sbb
adcb
sub
jo
jg
pop
pop
and
fistpl
call
int3
das
data16
add
mov
adc
nop
mov
in
xchg
or
mov
lcall
fwait
sub
sub
push
adc
pop
lcall
add
mov
pop
mov
inc
test
jnp
add
pop
mov
rcl
push
jo
jecxz
cltd
sahf
insb
int3
lgdtl
xchg
cmc
add
and
sub
mov
sbb
pop
inc
and
cmp
adc
test
adc
stos
add
dec
fcom
push
pop
pusha
sahf
adc
imul
add
xor
cmp
popa
sbb
mov
mov
int3
or
mov
lret
adc
push
fs
add
jp
lcall
out
and
pop
push
in
inc
add
jo
xchg
sub
jo
cli
lahf
test
adc
sub
xchg
adc
pop
sub
push
mov
add
hlt
outsb
sub
push
xchg
call
dec
sbb
and
fcoml
cld
repnz
xor
mov
xchg
dec
loopne
cmp
add
and
leave
rol
mov
rclb
push
movzwl
push
out
push
mov
dec
icebp
mov
fldenv
stos
dec
flds
dec
mov
push
adc
push
or
test
js
inc
addb
cld
sub
sub
and
and
add
mulb
mov
call
jl
sbb
popf
xor
cmp
fstl
fnstcw
adc
cmp
or
sub
mov
int3
add
je
add
decb
ret
ljmp
or
inc
jmp
jmp
xor
add
mov
sub
sbb
mov
js
gs
pop
imul
popa
jb
popa
inc
or
cmpsb
insb
gs
jae
sub
arpl
icebp
aad
mul
jae
data16
jmp
adc
ds
mov
xor
imul
es
addr16
inc
jae
fcoml
popa
jge
jge
jnp
aaa
or
sub
xorb
push
push
cmp
fldpi
js
inc
inc
xchg
fs
sbb
jnp
jns
or
call
sub
inc
inc
push
rcr
cmpsb
lahf
fistpll
inc
add
dec
dec
pcmpgtb
dec
push
push
sbb
aas
jb
rcrl
bswap
repz
sub
mov
mov
adc
push
dec
sbb
je
js
add
jo
mov
and
das
mov
inc
mov
icebp
lea
jnp
jle
pop
cmp
daa
and
mov
sbb
daa
sub
push
popf
mov
xor
testb
pop
loop
xor
xor
sbb
mov
pop
sbb
push
add
enter
sbb
bound
or
adc
mov
out
inc
pop
xchg
fisttps
adc
lods
xor
sbb
adcb
xchg
loop
sbb
sub
sub
cmp
data16
test
popf
adc
ret
dec
loope
dec
mov
adc
inc
pop
enter
cmp
test
enter
push
sub
cmc
or
or
jle
nop
jp
jbe
jb
outsb
sbb
pop
xchg
and
pop
enter
dec
push
cmp
lds
push
lret
sbb
sbb
daa
add
shr
push
pop
jmp
rclb
jecxz
adc
popf
mov
cs
test
notb
ret
xor
clc
and
and
adc
sbbl
push
fsubs
fdiv
and
iret
shrb
mov
and
add
mov
aas
pop
stos
and
mov
sbb
fildl
push
movb
inc
iret
jnp
lock
loope
adc
sbbb
sbb
mov
mov
add
push
sub
dec
mov
and
mov
lret
and
ret
test
dec
jbe
lahf
test
xor
mov
sub
jl
sbb
insb
and
pop
cmpsb
mov
cmpb
xchg
add
mov
mov
imul
lods
mov
sbb
ret
xor
rclb
or
in
js
push
adc
add
aam
cwtl
jp
xor
shr
sbb
cmpb
lea
pop
pop
mov
xor
rcl
addl
aaa
mov
call
call
pop
pop
shll
jnp
enter
ljmp
cmp
or
add
cmp
aam
jp
test
and
or
and
push
mov
jmp
out
mov
add
mov
stos
inc
sub
xchg
xor
and
sub
add
jb
dec
jp
mov
test
push
xor
ror
inc
cmp
testl
ljmp
sub
mov
adc
sub
dec
or
ret
test
or
cwtl
xor
xor
fadd
ret
or
sbb
ljmp
aaa
cwtl
adc
mov
inc
cs
or
xor
push
sbb
sub
int
pushf
add
xor
inc
dec
adc
jb
ret
jecxz
cmp
cmp
rcrl
push
outsb
popa
pop
mov
add
icebp
enter
adc
or
cltd
mov
jg
icebp
pop
mov
or
push
add
mov
add
aaa
mov
pop
mov
push
xor
jl
nop
sbb
int3
jecxz
pop
test
xchg
add
mov
sub
adcl
cmp
js
cld
lret
popa
push
pusha
ret
push
cwtl
mov
orb
out
push
add
jmp
lret
jmp
dec
jecxz
fdivp
testl
sub
jnp
dec
xor
in
pop
xor
and
sbb
fmulp
or
inc
add
jno
adc
aad
or
push
cmpsb
loope
add
jle
mov
mov
add
fldl
loopne
xchg
lret
pusha
xor
incb
fldl
pop
add
pop
xchg
stos
and
or
sbb
mov
fisttpll
mov
dec
mov
inc
insl
sbb
add
dec
pmaxub
jno
inc
movsb
sahf
push
mov
dec
or
pop
xchg
xorb
and
mov
dec
xchg
addl
mov
fimuls
cmp
xchg
jl
icebp
popa
pop
adcl
lea
add
out
adc
or
cmpsb
xor
call
in
sbb
cmpl
adc
add
mov
jmp
mov
mov
add
xor
add
mov
pusha
inc
in
add
insb
js
arpl
iret
les
in
dec
cmp
add
jbe
sbb
stos
xorps
iret
mov
push
add
adc
xchg
add
outsl
dec
hlt
pop
pop
stos
jnp
xor
mov
icebp
div
and
push
call
sub
mov
testb
dec
cmc
fnstenv
sub
repz
loop
add
arpl
add
pop
mov
cld
orb
leave
push
jbe
popl
imul
mov
fmulp
stc
inc
out
out
add
neg
cmpb
jbe
cmp
push
insl
push
outsb
pusha
cwtl
inc
dec
push
or
enter
and
inc
ss
or
in
or
pusha
sub
movsb
je
jae
sub
add
push
jl
mov
adc
mov
cmpsb
pop
cmc
lret
or
xchg
push
cld
mov
add
and
adc
add
mov
lods
js
add
xchg
jne
push
sti
inc
repnz
mov
inc
jle
ljmp
arpl
fcmovbe
adc
jae
stos
sbb
loopne
mov
imul
jne
push
jns
jnp
sub
pop
fisttps
add
out
clc
mov
push
in
sub
mov
ret
push
sahf
add
or
in
stos
mov
clc
addr16
xchg
sbb
ret
insb
stos
in
sub
shl
ljmp
test
pusha
lcall
mov
sub
popa
mov
scas
xchg
pushf
cld
mov
add
mov
jo
lods
add
addr16
mov
movsb
add
ret
jo
enter
mov
loopne
add
clc
mov
sub
inc
xor
or
test
mov
call
sbb
xchg
ret
add
push
ss
rcrb
or
xchg
cmpsl
dec
pusha
call
mov
and
lret
std
pushf
enter
cld
xchg
pop
or
dec
sbb
dec
add
movb
sub
mov
add
push
mov
xor
and
sub
lods
inc
bnd
add
and
push
loope
rcl
scas
dec
or
push
aaa
pop
add
pusha
pop
lret
jne
lock
into
shrb
xor
pop
xor
fimull
add
cltd
inc
roll
nop
push
sbb
inc
pop
mov
adc
sub
inc
xor
or
pop
add
test
mov
sarb
xchg
outsb
jnp
sub
lahf
rcl
pop
mov
and
mov
xor
nop
add
ficoml
jo
or
test
and
std
add
adc
push
es
push
lods
add
adcl
adc
xor
pop
mov
or
jno
cmp
inc
mov
jo
loop
iret
int
scas
out
jns
popa
cmp
std
push
aam
xchg
test
repz
add
into
out
int3
inc
push
add
mov
ds
pop
push
mov
add
stos
xlat
add
lds
jg
int3
inc
push
jae
xchg
mov
xor
add
lock
dec
mov
add
sbbl
or
pop
add
xor
outsb
jle
idivb
add
dec
xor
sub
xor
dec
lahf
insl
jne
push
or
dec
add
fimull
adc
dec
mov
xchg
out
movl
mov
getsec
mov
and
push
lods
push
jecxz
loopne
gs
fdivrs
jb
adc
negl
mov
add
add
mov
ss
out
frstor
lahf
cmp
inc
stos
and
neg
scas
dec
add
xor
cmp
fbstp
lahf
adc
push
sahf
jo
add
xchg
cmc
adc
and
cmp
add
jo
push
jae
add
xor
mov
add
mov
loopnew
in
push
mov
inc
les
frstor
pop
cli
and
pusha
jb
cmp
enter
sbb
jmp
into
loop
push
rcll
adc
mov
adc
adc
bound
jb
mov
xrelease
or
lods
add
data16
in
fdivr
or
js
mov
xor
enter
add
sub
hlt
cmp
loopne
lret
push
fdivl
sub
push
jb
push
sbb
dec
push
lahf
lahf
cmpsb
mov
int
xchg
and
push
or
mov
pop
xchg
sbb
xor
loopne
add
mov
in
movsl
je
sbb
jbe
sbb
add
sahf
sbb
fadds
mov
and
dec
add
in
or
sub
xor
push
sub
bnd
mov
jg
inc
xor
out
rclb
enter
push
bound
sbb
gs
test
bound
mov
xchg
push
cmovne
jbe
inc
fwait
out
imul
cmpsb
rcll
rorb
jl
add
inc
lahf
jle
mov
iret
leave
stc
shll
ret
mov
pop
push
shrb
inc
adc
cmp
push
orb
pop
add
sbb
sub
cmp
js
rol
ss
outsl
sbb
xlat
cli
jp
mov
ljmp
call
std
imul
je
aas
or
js
popf
adc
add
dec
push
sub
test
in
add
cmp
iret
les
xor
xor
xor
inc
add
loopne
add
setae
xchg
das
push
pusha
push
push
popa
xchg
add
push
dec
test
mov
aas
add
rolb
cmp
push
dec
add
loope
xchg
adc
mov
pusha
insl
cli
mov
xor
cmp
insl
out
repz
jge
add
mov
test
or
add
lea
xchg
and
pusha
and
filds
jmp
jle
loope
lods
ret
mov
jecxz
push
call
adc
cmp
out
pop
out
inc
mov
sti
insl
clc
add
movsb
mov
in
js
pop
push
pushf
xor
add
jb
outsl
lret
test
les
jns
add
and
cmp
add
mov
hlt
sbb
push
ja
es
sub
ret
iret
dec
cmc
rolb
inc
jl
in
loop
pop
jle
test
push
jo
dec
push
nop
cmp
orb
cwtl
xchg
and
orb
sbb
clc
mov
xor
inc
dec
gs
sbb
pop
call
sbbb
and
scas
adc
jnp
out
cvttps2pi
sbbb
push
mov
sbb
popf
dec
dec
repnz
cmc
pop
arpl
add
fnstsw
in
push
adc
daa
push
xor
xor
aaa
cmp
cmp
pop
repz
mov
out
mov
add
sub
jg
mov
mov
adc
add
loope
js
shrb
ljmp
cmp
lock
or
test
aas
add
xor
leave
push
loop
sti
xorl
fsubrl
adc
add
cmp
in
jno
call
jle
sbb
push
add
stc
dec
mov
hlt
test
sbb
and
rcrl
rol
or
movb
loop
add
aas
mov
push
fwait
push
outsl
xchg
roll
sbb
sub
add
test
loop
push
arpl
nop
repnz
and
mov
out
and
lahf
adc
ds
aas
xchg
inc
sub
cmp
push
add
gs
xchg
jno
xchg
mov
loopne
add
sbb
and
mov
xor
push
add
dec
loopne
imul
insb
inc
mov
push
adc
test
scas
cmp
pop
ljmp
mov
imul
clc
mov
int3
icebp
mov
pop
loop
cs
lock
insb
out
clc
xor
imul
iret
out
ffree
ret
jno
add
mov
sbb
mov
mov
es
in
add
outsl
or
nop
pop
add
lret
in
xchg
pusha
movsb
adc
dec
cmc
adc
inc
jge
push
call
add
aaa
xlat
lods
or
mov
cmp
cmc
mov
cmp
mov
out
sbb
dec
aas
loopne
sahf
and
add
orl
push
shlb
push
scas
shlb
add
mov
jecxz
lods
cs
shlb
add
cld
push
outsb
jne
movsb
add
inc
imul
mov
mov
push
mov
movsl
pop
repnz
setge
sar
xor
inc
add
and
add
or
mov
outsb
clc
add
fisttpll
cmp
sbb
outsb
add
or
in
mov
and
or
and
mov
cmp
mov
push
arpl
ficomps
aad
sbb
lods
dec
sub
and
rolb
lock
xchg
jmp
hlt
popf
pop
bound
cld
ja
add
ss
add
mov
pop
adc
jo
dec
sub
add
ja
repnz
addl
jp
mov
xchg
inc
jge
js
orb
cmc
add
cmp
push
cld
sti
es
sbb
add
es
mov
pop
ljmp
pop
arpl
dec
jmp
icebp
mov
sub
push
xchg
insl
les
add
popa
pop
push
in
mov
xor
or
adc
subl
enter
or
cmp
outsl
dec
lret
rorb
and
std
adcl
les
leave
or
sbb
clc
mov
movsl
jg
push
gs
ret
adc
jp
add
lahf
cmp
or
sarb
imul
in
inc
ret
dec
inc
js
hlt
push
inc
shll
push
or
js
dec
sbb
aaa
mov
xchg
push
xchg
outsb
mov
inc
and
dec
adc
es
cli
and
lea
pusha
sbb
mov
fnstcw
jae,pt
out
push
shl
xchg
inc
mov
sub
xor
jl
imul
mov
fdivrl
addr16
lahf
mov
sub
nop
add
pop
mov
movsb
xor
repnz
mov
jge
in
in
pop
test
in
mov
sub
add
add
push
cmc
leave
lods
test
sbb
xor
adc
and
mov
xor
movsl
or
mov
sub
inc
or
add
loop
jmp
sub
cwtl
jb
dec
xchg
icebp
aam
cmp
dec
cmpsl
xchg
inc
scas
popl
sbb
or
jecxz
daa
jb
push
add
sub
addr16
hlt
mov
pusha
daa
out
jmp
testb
inc
inc
inc
idivl
mov
add
in
je
ds
lret
pop
dec
mov
add
add
mov
inc
ret
adc
push
pop
adc
in
add
outsb
add
iret
or
sarb
bound
shrb
into
cli
lock
adc
jge
and
and
ds
ja
loop
and
xor
aas
cmp
sbb
xor
sub
iret
stc
cwtl
add
add
daa
testb
shll
adc
sub
lods
add
xchg
mov
inc
add
or
pop
test
cmpsb
lods
adc
cs
lea
sbb
sub
ss
stc
and
adc
pop
loopne
and
pushf
in
in
cmc
jl
pop
je
int3
mov
jb
adc
or
add
call
and
lret
xchg
adc
dec
or
add
pop
xchg
repz
jae
fsub
inc
mov
aaa
cmp
aas
mov
push
add
sbb
jle
pop
rcr
sbb
nop
jne
add
lret
mov
add
pop
cmp
fs
nop
mov
or
leave
jns
add
iret
cmovns
xchg
dec
cmp
inc
stos
mov
pop
xor
sub
push
and
jnp
loopne
clc
pop
and
jmp
sub
mov
loope
nop
push
lret
mov
and
jnp
aam
jb
adc
jbe
push
mov
aad
ud1
push
pusha
mov
repz
cld
sbbb
jns
add
and
or
sub
pop
add
ds
orb
add
push
add
pop
xor
add
fdivl
in
lcall
rolb
and
add
cmp
push
mov
sub
lods
add
repz
cmp
bound
mov
daa
sbb
mov
cmp
repz
loopne
clc
add
int3
shll
jnp
inc
jns
shrb
es
pop
xchg
xchg
xchg
addl
stc
xorl
add
xchg
inc
sbb
jg
xorb
cmp
xor
and
pop
scas
push
push
mov
mov
dec
inc
arpl
add
xchg
pop
std
shr
pop
xchg
add
or
xor
les
add
call
jg
push
or
jno
sbb
dec
mov
gs
mov
pop
push
int3
sahf
mov
mov
lahf
cmovge
test
push
jmp
pusha
test
add
sbb
add
mov
stos
add
jp
lret
mov
loopne
in
inc
mov
sbb
adcb
pushf
dec
xchg
push
lods
filds
mov
mov
sbb
dec
mov
add
jle
sub
sub
jle
add
cmc
adc
jl
add
add
inc
popa
mov
xchg
mov
mov
xchg
mov
inc
or
in
jmp
scas
add
outsb
sahf
push
mov
lcall
les
mov
out
dec
mov
add
das
repz
sub
pop
mov
add
push
jns
pop
testb
pop
cltd
add
out
cmp
mov
mov
push
pop
mov
lods
mov
mov
mov
fwait
jl
add
pop
fildll
out
loope
jbe
inc
push
imul
stc
mov
cmp
mov
dec
push
add
mov
xor
jecxz
adc
stos
pop
shll
inc
cld
add
adc
mov
outsl
push
or
jle,pn
js
add
mov
gs
lret
stos
mov
mov
inc
sbb
or
jne
je
es
add
add
ret
add
pop
lahf
pop
adc
lcall
add
gs
cmpsl
add
pop
add
xchg
sub
gs
inc
adc
mov
mov
outsb
xchg
mov
shlb
fcompl
bound
lcall
inc
mov
inc
std
lret
add
in
icebp
inc
push
adc
cmp
adc
aas
add
pushf
xor
pop
or
push
mov
cmp
xor
cmpsb
pop
cmpsl
ja
cmp
pop
jbe
push
or
lret
jae
add
push
ficoml
lea
mov
lds
adc
lods
add
jb
sub
int
sarl
ret
dec
pusha
outsl
loopne
loop
add
push
pushf
icebp
in
add
push
test
xchg
das
sub
add
push
and
test
mov
gs
out
les
cmpsb
rorb
fmull
pop
es
rolb
adc
add
rcrb
mov
sbb
xchg
stos
loop
push
pusha
adc
pop
adc
and
push
jne
xchg
inc
push
ret
test
add
shr
xor
jb
jo
mov
add
inc
adc
test
bound
stos
cmp
add
pop
imul
pop
mov
sbb
add
ja
mov
sub
roll
and
push
jo
add
nop
mov
imul
loopne
cltd
pop
rorb
add
je
cmp
xchg
nop
xor
pop
sub
roll
dec
cmc
fbstp
ja
sub
cmpsl
rolb
xchg
cs
xor
sbb
andl
outsb
adcb
pop
add
mov
and
mov
nop
hlt
imulb
ds
add
or
jle
dec
push
insb
add
push
out
cmp
js
mov
or
addr16
jo
mov
es
mov
lea
ret
push
mov
in
xor
fidivrs
imul
jp
add
fisubs
rcrl
shrl
xor
shrb
pop
mov
cmc
xchg
leave
mov
or
orb
pusha
int3
adc
test
jl
mov
push
jl
add
adc
and
xchg
insb
fs
popa
inc
adc
push
je
cmp
out
loop
roll
lcall
and
in
add
dec
ja
lret
add
and
xchg
pusha
push
push
cld
push
pop
add
hlt
cwtl
inc
push
fildl
into
ret
scas
insb
loop
hlt
sub
rorb
add
std
add
xchg
xchg
ds
nop
js
test
js
and
mov
xchg
mov
cs
add
in
orl
outsb
or
in
xchg
cmp
leave
lock
out
xchg
insl
fmull
inc
es
arpl
icebp
sbb
lock
add
fwait
clts
adc
popf
cltd
sub
lods
add
mov
adc
out
aam
push
mov
add
sub
clc
jae
pop
lret
xor
cmp
pop
fstpl
adc
jo
xlat
jmp
enter
fdivl
inc
aad
jb
mov
push
sub
jg
inc
int3
pop
lret
xor
jo
cmp
daa
movsl
lahf
add
xchg
push
cmp
xorl
addl
cmp
shlb
cmp
sahf
stos
cmpsb
mov
dec
adc
aam
rolb
mov
imul
lret
test
push
orb
std
add
bound
lahf
cltd
mov
dec
dec
mov
frstor
pop
rorb
sbb
pop
cmp
pop
add
cld
cs
xor
pop
mov
cli
add
in
stos
add
xlat
dec
push
pusha
hlt
cli
shrb
push
cmp
std
subb
cld
mov
add
inc
ja
add
or
lods
add
add
mov
ret
add
add
inc
jg
jmp
cli
in
push
jle
cmpsb
adc
bound
fcomps
push
ja
sbb
inc
aad
mov
clc
and
add
pop
fs
in
pushf
add
mov
ret
fsts
bnd
push
cmp
inc
sbb
mov
mov
pushf
push
stos
fnsave
or
mov
lock
insb
addr16
movsb
xor
test
test
jecxz
xchg
add
pop
mov
ret
add
xchg
lods
push
in
ret
mov
movsb
inc
lods
dec
mov
rclb
test
adc
jmp
lret
mov
sbb
mov
cmp
dec
jns
lds
mov
jbe
fdivrs
mov
add
fwait
cmp
jmp
add
cmpsb
add
xor
adcb
jg
call
cmpsl
in
inc
outsb
sbb
faddl
loop
add
outsl
fs
inc
outsb
pop
aas
add
rcl
nop
pop
test
add
shll
mov
cmp
xchg
dec
aam
mov
or
jmp
fmull
mov
or
cmc
xorl
outsl
xor
xchg
neg
add
push
fcmovbe
dec
ret
sbb
add
cld
xor
pop
inc
dec
loop
lea
add
xor
mov
stos
icebp
xchg
outsl
aaa
or
xchg
in
int3
or
pop
aaa
fsubrp
aad
leave
add
sbb
cltd
or
inc
add
adc
mov
lret
xor
js
lahf
xor
es
in
cwtl
fldl
add
cmp
leave
xchg
push
shrl
xor
repz
insl
data16
adc
rolb
fucomip
iret
sub
sarl
out
int
add
xchg
xor
repz
sbb
mov
mov
add
or
add
movnti
pop
movsb
sarl
fdivr
push
call
lods
jge
cwtl
add
subl
dec
add
xor
dec
xorl
pop
pop
jmp
mov
inc
xchg
test
add
jmp
in
repz
mov
sub
xchg
enter
out
mov
adc
loop
sub
or
and
and
or
or
or
roll
inc
shlb
and
and
cmpsb
cmp
and
cld
adc
popf
cmp
lcall
and
aaa
inc
test
fdiv
and
testb
mov
jno
mov
sbb
rorb
jmp
insl
int3
and
hlt
test
int
loope
outsb
out
nop
loopne
es
dec
rolb
jmp
sbb
add
arpl
mov
adc
addr16
dec
sti
push
add
pop
fnsave
add
xor
xchg
add
xor
int
ficomps
loopne
pusha
jle
loop
xlat
jecxz
test
cmp
movsb
mov
mov
add
fs
add
and
insl
inc
cmp
out
sub
imul
jno
add
sub
mov
push
out
pop
pop
stos
xchg
add
xchg
dec
mov
mov
mov
add
jae
fs
out
fldl
mov
xor
add
lcall
bound
je
rolb
outsb
xchg
mov
mov
movsb
sbb
push
cmp
orl
rclb
rcr
js
jns
fadds
in
sub
outsb
and
andl
jp
mov
cmp
add
mov
insb
lcall
add
filds
mov
add
icebp
cmp
flds
sub
imul
xor
les
insl
pop
sub
rcl
lret
and
jg
popf
shl
mov
scas
jns
hlt
aad
cmc
test
push
gs
ss
mov
addr16
out
pand
mov
jmp
xorl
mov
dec
mov
add
pop
jge
add
mov
jns
jae
sarb
aaa
mov
inc
and
or
pop
lods
adc
sub
add
sbb
add
cli
out
add
data16
push
adc
nop
adc
ja
int3
iret
loopne
inc
add
pop
fstpt
cmp
cmp
pop
ror
cld
and
inc
stc
mov
addb
aas
cmpl
add
cli
dec
add
and
ds
leave
add
out
jbe
ret
xor
jo
inc
adc
mov
cmp
mov
fldlg2
jg
enter
mov
pop
call
out
cmpb
mov
adc
inc
cmp
xor
add
mov
inc
fsubrl
dec
lods
shl
repnz
ljmp
scas
pop
and
mov
scas
lret
push
add
sbb
add
pusha
rcrl
or
lock
add
scas
shrb
adc
pop
mulb
add
stos
sbb
lods
xor
jl
orl
loopne
test
add
movb
pushf
add
insb
ljmp
xchg
push
fldt
das
jb
loopne
pop
femms
jp
sarl
loopne
mov
mov
add
push
add
iret
sahf
out
mov
add
mov
sti
ds
mov
mov
aad
mov
call
xor
loope
mul
mov
rcrb
add
ror
pushf
adc
mov
pop
inc
hlt
bound
add
lcall
popl
mov
lret
pop
loopne
dec
shlb
mov
addl
popf
notb
add
adc
mov
add
stc
and
icebp
add
push
inc
mov
cmp
add
mov
add
jno
jl
inc
adc
fisubs
lock
add
cmpsl
fldenv
iret
dec
add
mov
fisttpll
jae
inc
push
xorb
xchg
add
xor
xchg
jle
aam
add
sbb
pop
in
mov
je
out
or
or
das
add
imul
xor
outsl
fcmovnu
cmp
add
push
aam
inc
stc
js
rorb
or
pop
outsl
int
adcb
xor
cmp
shl
ficomps
cmp
xchg
sub
daa
clc
nop
add
aaa
pop
cmpsl
and
mov
aam
addb
test
cmc
mov
dec
pop
and
addb
stos
mov
add
adc
inc
mov
mov
dec
repz
adc
cs
add
test
cmpsl
push
shlb
in
jo
daa
inc
and
push
ja
pop
rcr
xchg
push
loop
add
popa
jns
out
nop
lods
xor
add
ljmp
test
xchg
out
xor
mov
and
mov
inc
fmuls
jbe
sbb
adc
data16
pop
enter
sub
cmp
popl
add
sub
xchg
and
jb
add
mov
mov
int3
add
cmp
push
push
imul
dec
aam
cmp
cmpb
xchg
nop
cli
add
fnstcw
jp
test
push
xchg
mov
icebp
ret
add
out
stc
ds
mov
mov
push
xor
arpl
add
clc
in
stos
mov
mov
mov
cmc
pop
pop
incb
cmpsb
testl
fs
and
cmp
ret
mov
repz
jns
jbe
push
sub
lods
mov
js
jl
dec
add
adc
dec
push
ffree
cmp
mov
adc
das
mov
jmp
pop
mov
add
addr16
hlt
loop
in
in
jp
xchg
or
xchg
sbb
cs
pop
add
stos
sbb
jb
popf
rclb
lret
or
addb
out
stc
cmp
mov
add
adc
mov
frstor
ss
dec
lret
add
mov
adc
adc
or
ret
lcall
loope
test
mov
add
stc
mov
xor
shlb
xchg
pop
xor
or
jo
xchg
jecxz
and
xor
stos
add
mov
cmp
out
mov
js
test
cmp
jl
scas
sbb
xlat
pushf
rcrb
mov
in
ds
add
mov
or
and
sbb
loopne
xor
es
lods
pushf
mov
pop
mov
inc
pop
subb
push
xor
push
adc
outsl
xchg
flds
mov
lds
mov
adc
pop
add
mov
je
inc
push
andb
and
inc
mov
stos
aad
je
dec
and
cmp
cltd
add
lcall
lods
pop
add
scas
jle
out
inc
add
mov
mov
stos
add
popa
les
dec
fldenv
enter
out
mov
lea
or
dec
js
testb
lock
jle
out
dec
mov
add
daa
push
or
scas
lods
xchg
xor
adc
inc
pop
nopl
addr16
and
and
xchg
movl
xor
aaa
sub
or
cmp
sub
add
nop
lds
sbb
xor
add
pop
adc
scas
fs
adc
add
fadd
lods
aam
xor
rcr
sahf
pop
in
push
pop
mov
fistps
push
loope
pop
lret
jmp
nop
lock
les
xchg
xor
mov
ret
jae
add
pop
sub
sub
aaa
sbb
je
outsb
mov
add
push
push
dec
iret
insl
and
nop
pop
adc
xor
les
add
jl
pushf
shlb
xchg
in
inc
add
fldt
ljmp
fwait
test
mov
jbe
shl
in
xor
outsl
sbb
imul
push
mov
sarl
mov
adc
outsb
add
add
add
das
push
in
dec
xor
fidivs
rolb
shr
js
arpl
mov
das
dec
ret
mov
add
movsb
std
push
xchg
iret
cmp
mov
inc
mov
mov
mov
mov
xchg
std
in
adc
xchg
mov
inc
out
add
mov
xchg
lds
mov
flds
ds
sbb
and
mov
sbb
push
ljmp
xlat
push
imul
cmp
ljmp
push
aaa
mov
cs
faddl
xlat
lret
and
pop
sbbb
movsb
xchg
add
and
test
xchg
lock
lds
pushf
out
cmp
sub
adc
add
sbbb
inc
lret
sbb
inc
xor
sub
lea
lret
mov
add
mov
cmp
in
rolb
dec
or
mov
xchg
sbb
mov
shrb
out
push
pop
inc
add
addl
movsl
xchg
and
xchg
xor
cmp
cmp
dec
sub
mov
add
and
jecxz
js
orb
or
in
cld
mov
mov
movsl
shrb
repz
fldcw
and
dec
xorl
dec
es
adc
pusha
movsb
test
sub
in
pusha
int
sub
mov
test
jne
dec
jle,pn
add
dec
inc
adc
sbb
cmp
dec
mov
add
mov
add
xchg
cwtl
icebp
imul
add
jno
jae
inc
orb
xchg
cs
adc
dec
sbb
push
pop
inc
rcl
xchg
sub
pop
sbb
push
add
stos
push
call
inc
pop
mov
out
shlb
add
push
and
jbe
inc
mov
lds
add
sub
pop
stc
dec
pop
js
xor
shll
in
xor
stos
jl
add
mov
fprem
mov
push
xchg
into
mov
dec
les
cli
aad
lock
addb
arpl
daa
iret
xor
pusha
es
dec
push
imul
lahf
enter
push
mov
call
push
pop
les
icebp
nop
hlt
add
fstl
dec
mov
popf
add
jbe
cld
xor
pop
lock
dec
stos
aad
add
jmp
mov
loope
leave
cmovo
add
lock
xchg
jge
add
push
mov
faddl
mov
das
mov
filds
push
or
sub
lea
adc
iret
add
inc
inc
add
sbb
test
mov
cmp
in
jo
add
andl
cmp
popa
imul
int3
add
inc
out
sub
xchg
add
sub
roll
aaa
loopne
movsb
jo
les
add
mov
sarb
cmp
or
lea
mov
clc
dec
gs
lahf
mov
or
dec
fadds
pop
add
mov
cmc
mov
aas
or
mov
loope
mov
add
loopne
push
unpckhps
ret
dec
lret
enter
xor
and
jb
mov
fs
mov
filds
dec
ss
dec
lods
daa
inc
jg
adc
addl
arpl
push
mov
sub
lods
add
ds
mov
pop
das
lahf
push
jmp
add
mov
popa
rolb
pop
pop
mov
outsb
hlt
xor
dec
adc
mov
out
or
loopne
les
pusha
mov
sub
aad
xadd
mov
cmp
xor
inc
sbb
pop
jmp
add
clc
mov
mov
add
aaa
pop
push
nop
push
pop
enter
or
stc
pop
ja
lods
xlat
arpl
andb
cli
add
xchg
mov
daa
push
mov
mov
jne
jnp
push
dec
sbb
int3
xor
daa
data16
andb
pop
cld
dec
push
dec
jg
sub
dec
push
dec
cs
or
fcompl
add
das
inc
iret
mov
xchg
adc
sub
inc
mov
addl
pop
aad
iret
cmpsb
cmpsl
imul
jmp
leave
mov
rorb
in
daa
push
ja
jnp
les
jno
or
mov
add
sub
cmp
jl
add
mov
lods
stos
loopne
mov
and
js
or
icebp
jo
xchg
je
add
pop
sub
aas
pop
cmp
sbbb
mov
push
add
lods
ret
add
std
add
add
push
addl
movl
mov
push
pop
inc
jo
stc
or
add
in
pop
add
das
setg
ljmp
adc
js
insl
les
sub
inc
leave
lret
xor
js
pop
xor
sarb
sub
lret
mov
lea
xor
fadd
rcl
sub
xor
fwait
xor
mov
dec
flds
pop
movl
inc
test
scas
lds
pop
lret
add
int
rclb
pusha
fdivrs
xor
mov
add
les
sbb
jnp
sbb
loope
outsl
sub
jbe
pop
push
xor
add
cwtl
mov
lea
fsubrp
pop
xchg
fadd
fdivr
xor
fidivl
ret
mov
inc
and
sub
adc
out
add
sub
add
ret
mov
push
ror
cmpsb
add
sub
outsl
loope
lret
jo
imul
outsb
shll
pop
cmp
mov
rorb
test
dec
cmp
loope
adc
and
jne
repz
xchg
and
sbb
adc
jns
test
or
aam
push
mov
mov
jbe
add
xor
aas
or
lea
dec
iret
sbb
movsb
and
sub
shrb
fdivr
and
inc
ret
xor
jae
loope
add
push
jp
add
push
add
mov
or
xor
js
insb
sub
mov
or
xor
sbb
movsl
mulb
push
addb
lret
add
fldenv
xchg
repz
cmp
mov
add
notb
mov
inc
dec
rolb
daa
push
dec
jle
or
mov
jo
pop
mov
sti
mov
js
add
push
mov
lret
dec
repz
scas
out
jne
lret
aad
fsub
iret
add
mov
in
mov
in
jg
add
inc
sub
cwtl
and
fsub
inc
aam
scas
xchg
pop
paddq
push
add
icebp
add
jno
mov
into
insl
and
in
inc
rcrb
out
in
inc
les
add
cltd
add
ja
shlb
dec
in
inc
lods
fstpt
jbe
add
sbb
cmp
hlt
imul
push
jle
repnz
js
cmp
test
add
inc
arpl
loopne
add
nop
in
xchg
and
add
add
push
sbb
mov
inc
xchg
add
adc
bound
add
sbb
xor
subb
add
cmc
pop
sub
rolb
add
div
arpl
cs
sub
add
sub
rcr
mov
fcomi
xorb
mov
decb
and
cmpsb
add
clc
call
pcmpeqb
or
aam
mov
mov
bound
loope
dec
add
sub
test
add
sahf
xchg
cmp
sbb
dec
adc
sub
popa
nop
dec
enter
gs
int3
sbb
int3
mov
pop
shrb
push
cmp
sarb
mov
rcrb
dec
icebp
pop
add
mov
lret
clc
cmp
mov
aaa
add
jo
dec
dec
push
add
repz
mov
or
jb
pusha
pop
outsl
or
hlt
pop
sub
inc
gs
and
fldcw
out
dec
repz
lds
rclb
dec
or
ds
add
adc
add
mov
mov
inc
stos
movzbl
aad
add
call
je
add
jae
sub
pop
sub
inc
fisubl
adc
enter
xor
loop
inc
in
int
add
xchg
mov
pop
dec
and
push
ljmp
lea
push
pop
or
sub
mov
ljmp
pop
mov
cld
cmp
add
xchg
hlt
mov
or
fdiv
cmpl
jecxz
mov
rcl
shl
lcall
sahf
in
sbb
loopne
push
mov
insb
sbb
orb
stc
jno
daa
cmp
pop
or
jg
cmp
push
aad
xor
mov
cmp
adc
push
add
nop
and
fstpl
int3
das
add
insl
cmpb
es
adc
imull
xor
add
test
in
fs
in
icebp
add
push
xor
xor
jb
mov
xchg
popf
or
mov
flds
and
imul
addb
jecxz
jns
lcall
scas
jge
lods
cmp
add
sbb
jg
jae
addr16
jo
add
je
pop
sahf
jbe
add
ret
adc
inc
repz
subb
sbb
sbb
add
inc
clc
negb
push
imul
test
pushf
add
lret
nop
sbb
xorl
pushf
add
pop
rorb
xor
popa
inc
xchg
xor
pop
fldenv
lock
inc
hlt
mov
sahf
pop
ds
pop
call
pop
sbb
ret
ja
loope
inc
add
sbb
std
or
mov
in
jbe
jmp
daa
and
push
outsl
add
push
imul
jg
fcmovnb
stc
push
xlat
or
adc
icebp
mov
leave
cmpb
dec
bound
addl
add
in
sbb
mov
and
pop
scas
add
insl
mov
xchg
dec
das
mov
pusha
mov
jo
inc
add
mov
and
movsl
adc
jne
cs
pop
pop
xor
fwait
push
mov
scas
cmpl
and
pop
add
sub
cmp
pop
bound
add
sub
fmull
pop
and
mov
arpl
jl
pop
mov
ret
sub
sub
stos
dec
and
and
and
xchg
fdivl
pop
nop
add
je
mov
add
loope
movsb
imul
test
dec
jg
sbb
add
into
andb
fildl
pop
icebp
add
mov
ljmp
hlt
sub
outsl
pop
lock
out
xchg
lods
add
daa
pusha
sbb
jge
add
mulb
mov
jp
push
or
fdivs
rcl
jg
pop
xlat
ficoms
add
into
pop
lods
clc
ss
ret
add
ljmp
mov
adc
cwtl
rorl
ljmp
js
mov
out
jmp
fcomps
clc
daa
add
pop
inc
mov
cli
dec
add
outsb
push
test
xor
js
add
aam
sahf
mov
xor
int
sbb
xor
pop
mov
sbb
jge
inc
sbb
dec
popf
xor
xchg
cli
test
sub
inc
xor
or
cwtl
inc
and
fwait
add
rcll
cmp
jb
insb
leave
mov
mov
jecxz
fsubs
jae
scas
sbb
movsl
fsubp
add
stos
cli
push
and
dec
cltd
js
mov
jmp
cwtl
or
cmpsl
addl
mov
xchg
adc
add
aas
pop
push
test
add
and
popa
sub
insl
or
loope
call
inc
dec
data16
insl
push
push
and
movups
pop
adc
cwtl
mov
mov
daa
mov
aas
xor
add
lret
push
add
sbb
fcoms
add
or
mov
in
in
push
mov
scas
push
push
je
cwtl
fimull
or
and
mov
in
and
mov
cmpl
xlat
nop
lock
mov
arpl
add
nop
frstor
push
lcall
add
mov
cwtl
cmp
lds
sub
add
andb
popf
mov
push
push
mov
push
mov
adc
ja
mov
sti
pop
sub
add
sub
mov
mov
add
cmp
pop
rolb
cmpsl
test
les
jae
pushl
and
add
xchg
sar
mov
jmp
outsl
or
xor
mov
lret
add
mov
test
mov
scas
mov
mov
mov
xchg
pop
pop
call
add
mov
sub
in
lret
xchg
cmp
into
repz
mov
jns
insl
adc
fmull
add
xchg
sbb
mov
loope
pop
push
adc
add
ljmp
sti
mov
inc
mov
mov
std
pop
out
xchg
fildll
cwtl
adc
cmp
lock
cmp
mov
aad
push
ret
push
pusha
nop
cmp
cld
sub
xor
aam
cmpsb
sbb
cmp
jo
shlb
stos
and
insb
call
cmp
push
push
xlat
sarl
dec
mov
daa
jp
adc
or
jne
outsl
loope
js
gs
imul
xchg
cmp
pop
lods
or
add
lcall
decb
lahf
faddl
add
out
add
cli
bound
pop
out
inc
add
lret
xlat
mov
enter
shrl
stos
ljmp
and
fdivrs
cmpsl
add
mov
add
mov
arpl
ret
add
je
pusha
aad
repnz
bound
pop
sub
add
test
mov
add
fnsave
push
stos
mov
stos
testl
add
pop
xchg
jle
or
xchg
pop
enter
popf
lahf
adc
mov
incl
dec
lods
mov
in
add
fsts
mov
out
cld
jae,pt
mulb
add
xor
cltd
loopne
cmp
in
fs
add
testl
movsl
nop
outsb
add
xchg
mov
movb
test
push
mov
shll
pushf
stc
pop
push
in
add
sbb
call
lcall
leave
loop
icebp
stc
dec
push
add
sbb
xchg
iret
mov
imul
add
mov
add
lahf
sahf
pop
add
test
lds
pop
out
hlt
subb
add
les
ja
push
pop
call
jnp
fsubp
mov
sarl
pop
push
sub
jl
enter
insb
nop
push
cmp
add
pop
fnsave
stc
jb,pn
test
jl
xchg
dec
shlb
inc
jbe
loop
mov
xchg
add
xlat
mov
addr16
add
jo
cvtps2pi
push
jbe
bound
rorl
loopne
mov
add
out
aas
add
push
lock
in
fcompl
cmp
jp
mov
dec
or
loope
insl
jcxz
push
mov
adc
loopne
sub
movsl
int
cmp
inc
sub
call
sbb
adcb
popa
roll
nop
mov
faddl
adc
call
loope
inc
push
mov
push
mov
mov
add
cmpb
aam
sub
push
or
dec
mov
fsts
pop
jecxz
lds
add
andb
pop
iret
add
mov
js
add
sahf
and
sbb
inc
mov
cmc
inc
sbb
daa
or
clc
cwtl
sarl
adc
adcb
enter
mov
ret
icebp
or
dec
std
ficomps
jns
add
push
ja
add
push
inc
repz
xchg
iret
adc
mov
add
imul
pop
loope
lds
shlb
ss
mov
adc
jb
in
push
test
or
loop
mov
out
lret
add
pop
mov
cmp
mov
sbb
imul
pop
fucomi
cltd
aam
jle
mov
stos
movsl
xlat
jo,pt
repz
add
daa
push
jge
jo
and
shrl
add
inc
add
inc
mov
fcomi
aas
add
lret
sub
sbb
add
xor
cmp
or
subl
inc
sahf
test
cmp
je
mov
or
xchg
fdivrp
rclb
inc
sbb
mov
xchg
push
int3
jp
add
leave
shrb
xlat
adc
std
stos
in
insl
arpl
repnz
insb
adcb
add
sbb
fwait
lahf
cld
adc
xchg
add
popa
add
xor
shr
jecxz
dec
cwtl
pusha
data16
pusha
test
in
jo
inc
shr
das
mov
ljmp
repnz
push
in
push
and
jae
rcl
cmpsb
test
sbb
mov
push
or
fadds
mov
inc
push
test
lcall
add
je
iret
popa
jecxz
fs
add
jo
hlt
cmpb
insb
pop
cmp
stc
jo
test
mov
and
xchg
sti
add
sbb
sbb
xchg
mov
push
adc
push
stc
inc
js
add
sbb
mov
pop
mov
mov
pop
add
adc
mov
add
or
aad
in
test
jnp
mov
pop
and
add
jae
lods
call
and
adc
js
add
push
lret
pop
loope
roll
mov
cmpsl
push
or
sbbb
add
mov
push
or
cmp
jl
aaa
les
sub
rcrb
enter
push
cwtl
ljmp
push
daa
shl
add
leave
cwtl
push
fidivl
xchg
jo
mov
in
xchg
sbbb
aas
inc
movsb
lods
mov
inc
cmp
mov
mov
data16
push
cmpsl
add
aaa
xchg
push
outsl
hlt
in
flds
dec
rcrb
push
sub
inc
jmp
loope
push
dec
mov
pop
ret
es
cmp
lcall
or
nop
out
lods
adc
and
jge
add
push
mov
push
es
in
sti
xchg
jecxz
dec
cs
pop
popf
pop
jl
mov
inc
mov
in
xchg
push
mov
out
jb
ret
and
fisttpll
add
inc
call
add
push
cmp
push
dec
pmullw
mov
pusha
out
xor
insl
pushl
pop
shrl
mov
inc
clc
imul
add
test
jno
mov
xor
sti
dec
add
pop
in
jb
and
pop
dec
inc
lock
mov
add
sarl
fldt
xchg
xor
mov
mov
pop
imul
sub
or
mov
cltd
cmpsl
sbbl
pusha
ss
dec
inc
pop
add
jnp
je
vmovlps
add
int3
jl
add
pusha
ficompl
clc
jo
jnp
add
loopnew
push
outsb
mov
pop
mov
xchg
je
jge
add
cmp
idivl
and
pop
add
sub
xchg
jg
in
and
pop
test
push
xchg
in
js
xchg
cmpsb
jg
pop
sub
das
inc
enter
push
xor
xor
lods
loopne
mov
scas
push
add
pop
xchg
ret
ss
add
imull
testb
inc
xchg
add
sub
in
lods
add
or
test
and
add
push
fisttpll
or
mov
in
insb
dec
pusha
stc
add
dec
movsb
pop
cmp
pavgb
imul
mov
add
mov
testl
mov
imulb
fiaddl
movsb
add
jp
mov
jbe
ja
out
xchg
into
cmp
adc
add
divl
fsubrl
andb
jo
nopl
repz
out
mov
clc
loopne
gs
inc
lock
jg
xchg
cld
jbe
sbb
outsl
mov
xor
jecxz
inc
stc
push
fdiv
dec
leave
mov
enter
in
jne
inc
cld
pop
push
add
push
int
lcall
push
pop
add
shr
push
lods
mov
fisttpll
pop
daa
add
movsb
and
cld
in
int3
add
mov
jae
fdiv
xor
mov
sbb
outsb
fidivrs
mov
fisttpl
ds
jl
iret
rolb
pop
js
lock
sbb
lret
xchg
pop
pop
mov
orb
inc
out
add
and
jbe
push
fmuls
mov
mov
add
inc
aad
push
or
add
jle
out
jo
pop
or
pop
dec
hlt
xor
adc
adc
insl
jl
mov
add
lret
dec
aam
add
and
cmp
stos
icebp
xor
push
push
pop
mov
test
bound
inc
movsb
xlat
jns
xchg
adc
jbe
sbb
inc
call
dec
push
push
adcl
mov
xchg
inc
pop
shrl
hlt
movsb
add
arpl
cmp
xor
fwait
lock
jb
cmp
push
and
addb
ret
push
or
xchg
add
push
sbb
inc
clc
push
add
mov
add
enter
shl
xchg
test
lock
sub
fisttpll
pop
jnp
add
out
inc
mov
icebp
push
mov
orb
push
ffreep
mov
add
ficoms
dec
sub
nop
adcb
push
add
fstps
sbb
jns
ja
pop
in
push
sub
mov
sahf
add
mov
rclb
cmp
cwtl
add
cli
push
mov
inc
jle
cmp
jne
loopne
mov
jecxz
and
pop
mov
add
fildl
add
mov
dec
outsb
mov
in
nop
leave
je
cs
nop
sub
ds
vmread
bound
pop
push
mov
clc
pushf
mov
sub
movsb
int3
enter
repz
sub
adc
xchg
das
sbb
nop
mov
sub
pop
rolb
mov
mov
pusha
mov
add
clc
sbb
std
jge
jg
inc
xor
add
inc
iret
adc
xchg
sub
hlt
jge
sub
sbb
lea
in
pop
sub
scas
lcall
add
mov
xor
daa
sub
jno
test
aas
mov
ds
sub
add
push
pusha
pop
push
fisttpl
jp
pusha
int3
mov
cmp
add
pop
mov
nop
xchg
cwtl
and
inc
add
movsb
clc
gs
out
addr16
push
sub
xchg
hlt
iret
sarb
or
mov
add
cwtl
sbb
mov
pop
setg
scas
pusha
test
nop
adc
jp
add
xchg
je
pop
push
add
lods
int3
in
loop
cmp
dec
aaa
outsb
addb
push
js
xchg
out
sbb
repz
jle
divl
xchg
add
jo
out
xor
inc
add
ret
aaa
mov
test
loopne
add
dec
fisttpl
add
out
or
jbe
mov
add
push
arpl
leave
push
icebp
cmp
mov
mov
aam
insl
iret
add
shld
popf
shrb
push
pop
adc
add
outsb
clc
add
jp
jmp
jnp
cld
xor
or
mov
or
adc
xlat
jl
pop
jae
incl
outsl
out
mov
sbb
sbb
pusha
push
mov
fldl2t
jl
sbbb
dec
inc
hlt
push
add
adc
pop
dec
cmp
lods
jmp
inc
pop
std
push
cld
aad
jo
jle
repnz
aaa
push
cli
inc
mov
packssdw
mov
pop
pop
xor
and
mov
sbb
lret
add
mov
xchg
add
cmp
adc
jb
add
cmp
add
stos
loop
push
dec
fcoms
xchg
pop
out
aaa
add
xchg
jge
lea
fwait
movl
cmp
mov
test
aam
lahf
add
ret
mov
in
add
xor
push
loop
jmp
shrb
fildl
sub
cwtl
jae
cmc
xchg
push
add
loop
fwait
cli
enter
lret
aaa
gs
or
movsb
lock
jl
test
stc
inc
outsb
mov
pop
and
pop
adc
dec
sarl
outsb
add
inc
lret
xchg
iret
mov
data16
mov
punpckhwd
cltd
ljmp
mov
jecxz
add
add
push
mov
xchg
pop
movsb
aam
cmp
lahf
sub
add
das
clc
inc
lds
add
scas
xchg
sbb
sbb
sub
push
adc
shll
add
fcmovnb
mov
mov
adcb
xor
inc
xchg
mov
pop
mov
pusha
xor
xor
dec
cmpsb
movaps
jl
mov
movsl
enter
and
pop
cld
adc
inc
in
insl
mov
inc
push
or
movl
adc
or
cmp
dec
sub
adc
mov
add
xor
stc
add
mov
ss
jge
scas
xor
inc
adc
dec
jo
or
jo
add
ret
mov
push
xor
cmp
push
int3
or
in
scas
add
jg
sbb
jl
mov
add
add
push
mov
add
cs
aas
fs
push
lods
mov
push
cli
jne
mov
push
scas
stc
xchg
and
rol
add
cmp
lods
aam
add
daa
mov
inc
jge
sub
inc
jnp
pusha
dec
mov
mov
imulb
add
jne
cmp
inc
lods
sbb
cmpl
adc
scas
add
loopne
ds
mov
push
and
mov
xchg
mulb
jo
push
mov
xor
aas
pop
cmpb
push
pop
cli
mov
hlt
shr
sub
dec
scas
and
xchg
pop
inc
add
orl
enter
out
pushf
ss
inc
mov
in
pop
addl
cld
dec
mov
aas
jle
add
cmp
movsb
mov
mov
shll
les
add
inc
mov
pop
cmpsl
inc
aaa
cmp
cmovle
adc
push
add
jmp
ret
testl
lret
push
sbb
add
test
rcrl
ljmp
xchg
jno
rcr
scas
into
pop
fildl
inc
add
xchg
pushf
in
lea
enter
xor
movsl
out
enter
rorl
mov
dec
jae
xor
dec
jnp
ljmp
cli
sbb
add
push
jle
cmovp
xchg
adcb
clc
inc
mov
mov
loope
push
adc
jns
jo
xchg
mov
inc
fstpl
icebp
add
lods
test
adc
jno
shrl
push
pop
fdiv
push
lock
add
out
xchg
lret
jne
rcl
add
data16
and
adc
stos
and
inc
or
add
adcb
fistl
addl
pusha
lahf
sarb
and
and
fadds
pusha
jno
add
inc
scas
out
hlt
mov
add
lds
add
imul
das
rclb
inc
dec
push
nop
and
mov
test
jecxz
stos
mov
add
add
or
aaa
jp
in
dec
inc
add
cmp
sub
stos
nop
cltd
loopne
cld
sub
mov
sbb
gs
jg
jo
imul
jo
pop
ss
mov
add
adc
add
mov
dec
std
out
psubsw
mov
in
push
aas
inc
fcoms
mov
dec
lods
sub
aad
ret
xor
jne
dec
cmp
dec
dec
add
push
popa
or
aad
jae
fsubs
int
add
js
adc
in
sub
fsts
and
movsb
pop
lahf
lods
fcompl
inc
mov
loopne
out
or
sbb
ret
push
ret
pop
ffree
or
mov
add
push
jmp
sbb
jns
jo
shll
and
sbb
xor
dec
mov
fistps
ret
mov
movsb
add
jmp
dec
xor
das
sub
cld
adc
fsts
adc
pop
out
sub
js
xchg
jecxz
add
shll
lods
iret
lahf
add
push
cmp
inc
lds
jmp
mov
and
test
xor
xchg
and
loopne
lret
mov
inc
mov
jno
dec
or
sahf
icebp
pop
xchg
clc
dec
pop
add
sti
shrb
mov
add
xorl
xor
add
or
sti
mov
jo
push
cmpsb
add
dec
test
popa
bswap
dec
mov
mov
roll
adc
xchg
shr
pop
mov
jecxz
sarb
jo
add
add
mov
lock
mov
mov
repz
jae
sub
push
xlat
scas
and
orl
out
test
pop
sbb
hlt
cmpb
imul
lods
pushf
add
or
incb
enter
pop
mov
add
leave
cmp
pusha
popf
cli
push
add
push
xchg
stos
sbb
in
add
sbb
cmp
jmp
add
mov
cmp
add
fdivs
xor
xchg
stc
add
in
cltd
jecxz
mov
es
mov
add
pop
sub
enter
dec
xorb
mov
jp
add
nop
or
mov
add
or
xchg
shl
cmpb
or
insl
or
loopne
pushf
repz
lock
adc
aam
bswap
scas
aaa
dec
pusha
cs
push
mov
jmp
add
sub
mov
push
add
syscall
gs
ja
and
adc
xor
adc
xchg
outsb
mov
popf
fcomps
ret
add
jae
fimull
sbb
lret
gs
clc
mov
loope
sbb
rclb
jle
icebp
cmpsl
dec
inc
movaps
pusha
push
adc
xchg
into
adc
xorl
sub
push
sbb
inc
cmp
out
adc
xchg
fdivr
dec
mov
or
or
pop
lods
into
push
xchg
sub
add
push
and
lret
add
sub
mov
mov
xchg
xchg
dec
subb
adc
scas
loope
sbbb
rcll
lods
adc
stc
push
mov
mov
adc
jne
mov
dec
js
rclb
sub
lds
test
and
jne
cmp
mov
aam
insl
shl
add
ja
data16
cmp
mov
das
inc
inc
sbb
xor
push
xchg
fmuls
std
pusha
ret
adc
jb
movl
mov
je
call
pop
xor
pop
jb
inc
fbstp
pop
jne
mov
bound
and
cld
mov
cwtl
mov
xchg
inc
add
bound
sub
bnd
std
sahf
add
fwait
xchg
ret
sbb
add
sub
add
popa
cmp
sar
inc
sbb
fsubrl
cltd
add
mov
push
nop
pop
mov
jo
inc
mov
add
add
test
sbb
pop
xor
jno
mov
jmp
mov
ljmp
out
mov
rolb
rolb
bound
stos
add
mov
xchg
movsb
loope
push
xchg
push
addr16
cmp
shl
push
test
jns
add
dec
subl
and
int3
sbb
cmp
cld
push
imul
dec
push
cmp
fsubs
jge
ljmp
ljmp
pushf
repnz
and
mov
push
sub
movsl
mov
add
inc
sti
movaps
cmp
daa
pop
add
mov
out
test
xchg
xchg
popa
les
cmp
mov
mov
lret
cwtl
mov
push
adc
and
scas
jns
sbb
mov
scas
adc
mov
dec
repnz
pop
cmpsl
jmp
xchg
arpl
loope
cli
and
or
addr16
rclb
mov
movsb
push
repnz
rcll
sti
push
pop
in
xchg
mov
add
loope
addb
sub
inc
mov
mov
incl
ljmp
mov
mov
add
cmpsb
sub
pusha
aas
cmp
das
cmp
int3
ret
or
xor
mov
add
xor
xchg
push
fdivrs
mov
inc
stc
add
xchg
or
shrw
mov
pop
addb
mov
mov
test
mov
push
cs
cld
add
and
bnd
out
repz
pop
jge
jg
add
xchg
in
and
add
xchg
cmpsb
push
push
xlat
mov
cmp
daa
add
mov
mov
xchg
fs
pop
enter
xor
push
add
out
pop
cld
iret
add
ret
xor
jae
adc
pushf
shrl
xchg
xor
inc
mov
icebp
or
xchg
das
je
test
mov
imul
pop
pop
cwtl
addl
andb
add
scas
or
arpl
imul
xor
push
xchg
loopne
dec
divb
pop
ja
and
add
fsubrs
lock
add
or
inc
push
mov
cmp
icebp
jb
add
shr
stos
add
xor
test
ror
cmp
popa
out
mov
mov
fdivs
xchg
ret
adc
and
lods
ficompl
subb
dec
add
add
clc
or
add
out
in
addb
jb
mov
mov
testl
sar
sbb
adc
cmp
test
sahf
cwtl
add
shrl
cmpsl
mov
rcr
rorl
fs
and
dec
ret
lods
cmc
sub
xchg
int3
in
scas
inc
jecxz
dec
lock
add
popa
add
jge
push
into
add
adcl
and
cltd
add
test
incb
lret
jo
pop
inc
dec
jg
add
shlb
inc
int3
stc
mov
push
add
and
jmp
int
lcall
test
add
cmp
dec
xor
mov
add
repz
push
repnz
and
mov
rol
es
add
hlt
mov
in
cmc
cwtl
sub
and
add
loop
cmp
mov
adc
lahf
repnz
call
call
jmp
cmpsb
cmp
mov
lea
xorl
gs
pop
ss
outsb
add
dec
scas
mov
loopne
push
dec
mov
mov
lahf
int3
insb
hlt
pop
inc
xor
pop
mov
cmp
adc
cwtl
sbb
rclb
push
jb
or
divb
sub
add
add
push
sbb
in
je
sahf
mov
les
imull
mov
mov
fiaddl
mov
jl
inc
cmpb
mov
or
mov
add
or
add
jae
cwtl
test
cld
pop
pop
loopne
mov
dec
pop
add
mov
push
jo
sub
jne
inc
push
or
mov
jle
rcrb
add
jb
insb
pusha
or
dec
mov
dec
addb
xchg
imul
pop
test
dec
add
stc
out
xor
pop
xor
inc
inc
dec
pop
cwtl
adc
add
xchg
pop
add
jnp
sub
mov
insl
sbb
xchg
push
or
push
add
mov
sbb
dec
ret
repz
mov
fsubl
cmp
sub
add
idivl
les
movsl
repnz
mov
stos
iret
xor
loopne
adc
xor
jmp
sbb
mov
adc
add
repnz
sbb
out
pop
add
stos
cwtl
js
adc
and
out
mov
nopl
inc
pop
push
mov
and
fadds
out
lret
lret
add
incl
add
das
push
xchg
cs
add
push
ffreep
push
xchg
push
insb
shlb
pop
mov
popf
push
dec
jo
xor
jnp
add
dec
adc
daa
aad
lock
pushf
add
cmp
jne
sarb
mov
cmp
cs
aad
test
add
stos
mov
or
jo
sbb
jo
jo
sti
add
insl
push
pop
add
das
ds
push
xchg
add
aaa
xchg
jecxz
and
jne
in
addb
xchg
mov
test
sahf
adc
imul
push
outsl
add
inc
mov
sub
jnp
loopne
sub
xor
push
jl
icebp
mov
add
inc
orb
scas
pushf
testb
stos
sub
data16
stos
out
popa
rcll
mov
add
mov
into
push
xchg
pusha
cmp
cltd
scas
or
mov
fldl
mov
mov
jae
push
add
push
cmp
dec
ret
add
xchg
les
loopne
xchg
jbe
inc
lret
adcb
les
jle
mov
xchg
sub
dec
add
scas
xor
std
outsl
push
stos
and
nop
inc
ljmp
add
sbb
mov
jb
add
sarl
mov
pop
sub
icebp
rcrb
dec
std
aaa
repz
mov
loopne
imul
xchg
mov
jle
mov
jecxz
scas
iret
sub
add
sbb
inc
arpl
sbb
jl
pop
scas
mov
and
mov
add
lock
stos
lcall
xchg
cmp
add
fidivrl
nop
sbb
add
add
adc
movsl
jno
js
add
aam
fldt
add
jae
and
mov
xchg
xor
pop
clc
hlt
add
push
cmp
mov
xorl
in
pop
mov
cwtl
mov
push
push
add
cmp
loopne
jl
sahf
loopne
add
add
adc
xchg
out
loopne
jno
test
or
mov
push
sub
scas
testb
dec
mov
leave
sbbl
xlat
add
add
dec
xchg
mov
jl
enter
or
adc
jno
mov
gs
jns
cmp
scas
mov
outsb
dec
or
mov
xor
add
ss
lods
jne
lret
jmp
lock
adc
adc
add
and
pop
outsb
rorb
pushf
pop
push
add
push
inc
push
mov
add
leave
jl
int
popa
or
clc
inc
pop
fbstp
xchg
fcmovnbe
loopne
sub
add
stc
pop
insl
adc
xor
ss
jnp
add
add
sahf
aas
add
test
jnp
cmp
hlt
add
mov
push
add
mov
mov
or
inc
out
movsb
pop
mov
inc
ljmp
jp
mov
push
clc
pusha
loope
fsubl
imul
pop
in
mov
and
jbe
mov
xor
add
cmp
add
je
lds
lahf
and
jl
fnstcw
leave
popl
xchg
or
push
out
pop
stos
or
adc
add
inc
inc
mov
in
adc
jo
out
inc
add
aad
fidivs
loopne
cmpsb
mov
sub
and
push
mov
dec
or
int3
daa
aam
cwtl
add
testl
adc
jnp
pop
add
gs
imul
jecxz
push
adc
push
les
sub
add
adc
lock
addr16
jne
push
js
into
rolb
fs
push
fisttps
mov
lret
bound
mov
pop
sub
cmp
add
out
hlt
cmpsb
dec
fsub
shlb
arpl
add
xchg
mov
mov
inc
xor
rorl
add
in
outsl
or
push
mov
jbe
add
push
mov
daa
add
mov
xchg
rolb
xor
xor
mov
nop
mov
xor
add
pop
sahf
mov
inc
test
pop
dec
add
cmpsl
cmpsb
dec
add
jbe
je
add
and
add
inc
mov
roll
pop
cmp
or
jb
sbb
adc
fists
sbb
jns
mov
mov
shll
arpl
imul
adc
enter
add
outsl
or
test
pusha
test
adc
xchg
test
inc
or
mov
aam
sbb
push
mov
mov
mov
mov
dec
cltd
mov
mov
pusha
push
outsb
add
js
les
add
stos
push
in
push
xchg
xchg
insl
adc
fiaddl
and
in
sbb
daa
pop
add
push
js
notl
add
je
lods
js
shlb
adc
fdivrs
pop
insb
add
mov
add
aam
ja
mov
shrb
mov
xacquire
iret
lock
inc
adc
mov
add
cmp
inc
mov
popa
lahf
cmp
dec
add
and
jg
push
clc
jb
es
test
in
subl
cmpsl
nop
pop
je
loope
clc
adc
inc
ret
pop
add
pusha
pop
xor
sub
scas
add
mov
jge
pop
pop
jl
or
xor
sbb
push
in
cmp
fiadds
mov
add
orl
cmp
mov
or
adc
insb
push
roll
push
adc
lea
mov
mov
jge
les
in
inc
dec
sarl
add
sub
sarb
fwait
cmp
sub
in
mov
add
push
sub
sub
icebp
add
fnstsw
inc
mov
sarb
sub
shlb
mov
je
or
in
ss
aad
lock
inc
push
test
rolb
lcall
mov
and
xchg
jecxz
test
mov
push
pop
test
push
push
jecxz
pop
add
dec
dec
shlb
pop
xor
push
push
adc
lea
push
and
dec
mov
adc
push
mov
sbb
arpl
mov
inc
mov
pop
pop
add
sub
fidivs
xchg
mov
adcb
xchg
movsl
test
and
mov
jg,pn
add
mov
pop
push
in
push
push
mov
nop
or
enter
mov
xchg
enter
repz
addr16
and
sbb
xchg
add
pop
mov
inc
jg
lahf
dec
mov
fmuls
test
xorb
hlt
adc
sti
jb
rclb
iret
cmp
insl
cmp
xor
cmpsl
shl
inc
das
cwtl
jecxz
aam
subb
popf
push
add
mov
jno
mov
insb
xchg
pop
cwtl
fsubs
loope
fldcw
jge
fiadds
call
scas
xchg
and
aam
loop
add
push
add
sub
jns
add
jge
cmp
dec
mov
cltd
aas
aad
test
bound
es
fucomip
push
pushf
stos
lods
add
sarb
push
pop
xorb
mov
pop
adc
sbb
lock
xor
xor
add
mov
les
rorl
cld
mov
cmp
dec
xchg
enter
clc
shrb
cmp
movsb
cmc
mov
je
addl
daa
dec
pop
cmpsb
sti
adc
out
ret
push
jno
xchg
inc
add
fwait
jg
aas
stos
sub
or
into
push
dec
leave
add
testl
loop
or
add
mov
cld
pop
in
dec
inc
minps
and
mov
inc
lods
hlt
nop
add
aam
inc
jb
into
ja
fidivs
cld
sub
test
adc
cwtl
xorb
bound
xchg
call
mov
pop
push
add
push
dec
pushf
dec
sub
fsts
pop
aad
aam
rcrb
sub
push
repnz
aaa
jno
xor
imul
mov
in
arpl
fwait
jb
cmp
add
lock
out
add
mov
in
jae
and
jbe
add
pop
pushf
mov
inc
loope
and
lock
call
mov
dec
nop
sahf
inc
into
scas
lods
mov
add
enter
push
cmp
or
xchg
add
pop
mov
pop
and
lret
xorl
imul
cwtl
push
xor
jnp
mov
mov
js
mov
cmp
jo
dec
jnp
add
ds
iret
cmp
lahf
add
jle
add
das
int3
mov
or
in
rorb
push
mov
and
xchg
adc
push
xchg
loopne
loopne
clc
dec
aas
out
mov
mov
sub
inc
add
ljmp
call
fildll
and
rorl
sbb
xchg
out
data16
js
popa
std
jnp
bound
int
ljmp
xchg
mov
dec
xchg
push
jo
mov
rolb
adc
add
insl
fdivrs
jge
pop
add
inc
std
mov
cli
push
adc
xor
imul
jg
nop
push
mov
or
mov
int3
push
ret
add
and
cmpsl
xorb
push
push
mul
inc
inc
add
pop
flds
adcl
jl
cwtl
pop
repnz
and
mov
xchg
push
xor
test
testb
xchg
jge
int
mov
scas
inc
push
xchg
inc
sub
add
jae
scas
cmp
jle
and
movsb
xchg
jae
add
add
sbb
cwtl
and
mov
and
inc
cmc
jl
mov
sbb
sbb
and
repz
icebp
clc
push
add
fcomps
and
xor
insl
int3
xchg
dec
and
push
repnz
xor
mov
push
sub
test
das
mov
push
cmp
in
and
or
test
arpl
fadds
pop
push
add
cmp
jl
in
xor
outsl
mov
sub
nop
ret
mov
push
push
cmpsb
daa
lock
add
xrelease
jno
add
pop
pop
aas
in
add
and
adc
cmp
and
mov
loop
andb
dec
sub
pushf
fs
das
jae
jo
add
in
out
sub
xor
add
icebp
leave
stos
add
mov
dec
fs
pop
pop
je
gs
mov
mov
movsl
jns
add
inc
loope
inc
xor
or
xchg
push
fidivs
add
mulb
js
pop
jne
xchg
cmp
sbb
add
pop
jle
xor
mov
es
incl
mov
xchg
and
add
mov
repnz
and
mov
movsl
add
mov
and
push
rolb
add
sbb
pop
jae
sub
cmp
mov
in
mov
leave
mov
push
mov
cmpsb
add
mov
add
mov
cli
add
ret
pop
cmp
rclb
mov
pop
pop
in
mov
mov
inc
lahf
or
test
dec
cmp
add
mov
subb
mov
mov
sub
sbbl
push
shrd
dec
cmp
cli
sub
jl
orl
fnstenv
pop
je
aaa
nop
inc
imul
hlt
js
push
shlb
aad
push
cmp
incl
cmp
add
mov
sub
js
push
or
movsb
inc
sbb
mov
cmp
or
add
mov
xchg
jnp
cmp
fsubl
jmp
or
mov
jno
push
aas
jmp
mov
les
mov
rcrb
inc
push
fcmovnu
ds
into
pop
and
and
cmp
and
cli
sub
inc
shll
fwait
imull
xor
pop
mov
or
lock
pop
and
loope
outsb
add
mov
push
xchg
inc
add
add
int3
or
popa
out
inc
jl
push
mov
mov
xor
out
xor
sbb
hlt
cmp
call
push
xor
push
cmp
add
loopne
xchg
aaa
mov
or
std
frstor
sub
sub
les
stc
bound
xor
mov
es
pop
mov
jge
xchg
jbe
addr16
lds
or
mov
cmp
lret
add
inc
mov
loop
fs
add
mov
and
stos
aam
add
pop
out
inc
adc
cmp
dec
cwtl
push
shlb
lds
inc
sub
mov
add
loopne
stos
jle
addr16
rorl
daa
pop
inc
rcl
arpl
mov
sahf
cmp
add
xchg
mov
mov
pop
movsb
dec
cmp
add
adc
test
push
ret
pop
icebp
in
loopne
mov
add
ret
sbb
pop
leave
adc
add
mov
outsl
adc
dec
aam
xchg
std
dec
in
cs
test
add
jle
pusha
cmovns
das
fwait
shrb
inc
xor
xchg
and
mov
pop
xchg
addb
push
push
inc
sbbl
outsl
loope
xor
in
lahf
xchg
mov
mov
add
addb
and
xor
push
inc
add
xlat
sbb
pop
loopne
sbb
xor
rcll
mov
or
je
push
cwtl
jne
shrl
pop
mov
aam
push
add
xor
cmp
xchg
dec
out
or
cmpsl
adc
cmp
mov
pop
jg
add
stos
sbb
push
notb
adc
data16
in
das
pop
mov
bound
jne
or
mov
cwtl
sbb
add
fucomp
or
or
or
fs
xorb
lcall
cld
adc
aaa
mov
xchg
in
add
mov
mov
lret
out
das
ds
dec
mov
jnp
dec
fdivl
fsubrs
imul
inc
dec
data16
outsl
add
and
lcall
adc
inc
jmp
mov
fdivs
jge
pop
add
mov
inc
lret
popa
and
inc
jno
adc
push
movsb
rcl
add
in
out
or
clc
pusha
jb
lret
rclb
add
xchg
add
ja
inc
sub
xorl
mov
cmp
lock
lea
dec
xchg
adc
and
jae
fisubrl
lock
sbb
sbb
cmp
rolb
iret
popa
cmp
sbb
aaa
mov
add
sahf
movsb
push
paddb
setnp
dec
xchg
and
outsl
adc
into
dec
sbbb
xchg
hlt
and
ja
rolb
pushf
mov
push
hlt
hlt
push
pop
icebp
test
ss
xchg
xorl
sub
jnp
adc
mov
add
xor
scas
inc
pop
jns
push
inc
divps
add
xor
push
es
ficoms
or
fldl
pop
roll
cmp
dec
hlt
cmpsl
add
xchg
shr
adc
faddl
imul
mov
fistpll
call
adc
pusha
nop
or
sub
or
je
pop
lds
outsl
cmp
std
sahf
xchg
jmp
insb
jo
dec
daa
sarl
scas
dec
and
sbb
ret
fwait
add
lret
push
dec
sub
add
push
jecxz
hlt
cmp
pop
mov
mov
insl
jp
ja
ret
cmp
mov
jle
in
cld
lret
pop
add
xchg
push
std
xlat
ret
mov
movsb
pop
dec
mov
cmp
les
gs
testl
aam
mov
and
stos
enter
outsb
sahf
mov
nop
lret
xor
push
ds
push
add
sbb
inc
adc
inc
loope
testl
pusha
add
push
or
sbb
inc
mov
or
or
ljmp
popa
rcrb
mov
dec
roll
invd
xor
push
mov
mov
imul
in
jb
add
add
push
inc
dec
adc
pop
or
fidivs
xchg
clc
js
sbb
mov
inc
lock
jbe
cmp
jl
sub
xor
loope
add
cwtl
lahf
jbe
movsl
fmulp
xchg
add
cmpsl
and
vmread
fnsave
mov
add
shrl
jge
push
lods
loopne
or
add
imul
sbb
test
fdivs
pop
into
inc
and
dec
jnp
cmp
inc
lock
ja
push
cmp
sahf
sti
push
inc
xchg
push
jecxz
call
movsb
jns
pop
cmpsl
push
hlt
ret
popf
cmp
stos
ret
pop
mov
add
jp
jge
adc
sbb
inc
adc
mov
sub
xlat
scas
repz
je
popl
fldl
in
cwtl
add
fs
lcall
mov
insb
call
xor
cmp
sub
mov
test
inc
push
aam
pushf
ja
stos
add
mov
dec
inc
mov
test
or
push
outsl
add
xor
adc
cmc
inc
mov
pop
je
out
push
pop
inc
mov
shl
or
xor
add
jge
mov
cwtl
push
mov
dec
aas
hlt
popl
dec
imul
outsb
lret
add
push
es
rolb
sbb
dec
add
imull
clc
push
in
pop
sbb
sub
pop
sub
xlat
inc
xchg
push
adc
add
insl
ret
pop
xor
mov
cmp
adc
ret
in
inc
add
mul
push
std
mov
sbb
add
add
cmovs
loopne
inc
cmp
aas
cmp
cmpsb
pop
xchg
hlt
popf
sahf
adc
push
xor
adc
sub
or
sahf
or
out
out
aam
dec
mov
in
loop
filds
imulb
inc
movsb
jno
and
cmp
mov
inc
mov
scas
inc
pop
sbb
lods
lods
nop
inc
mov
jle
add
inc
dec
pushf
xor
mov
aam
sub
sahf
lds
popf
add
iret
cmpsl
fucom
or
into
int
dec
in
stos
inc
cwtl
in
mov
test
sub
and
andb
add
cmp
xor
xchg
fwait
and
sub
push
add
xchg
decb
arpl
andb
in
pop
js
xlat
pop
inc
dec
mov
and
cmp
jbe
push
shlb
and
icebp
out
cmp
add
aas
daa
add
add
add
cmp
push
mov
adc
add
sbb
mov
add
and
lcall
dec
repnz
add
cld
adc
adc
scas
add
leave
shr
sub
lcall
popa
stos
les
jecxz
pop
in
iret
jbe
out
inc
jae
sbb
mov
cltd
int
mov
stc
inc
and
clc
jae
mov
fadds
pop
decl
insb
test
and
adc
sbb
xchg
clc
push
out
popl
icebp
sbb
sahf
fbld
jle
mov
dec
cmc
test
adc
lcall
mov
inc
add
and
enter
movsb
sbb
add
fcompl
or
push
add
sbb
push
pop
xchg
sbb
adc
ljmp
in
jbe
jnp
andb
add
jp
add
pop
xor
add
sbb
dec
lock
inc
subb
add
xor
popa
cmpsb
imul
cmp
hlt
mov
add
xor
sub
rcrl
and
xlat
xchg
adc
xchg
mov
aas
sti
push
adc
add
mov
add
mov
xor
fcomps
out
add
cmp
nop
jl
xor
addb
lret
add
sbb
jl
es
lret
into
cmp
and
popf
and
jge
adc
stos
or
push
cmp
sbb
pushf
stos
and
test
in
adc
pop
lods
cmpsl
js
add
std
and
lcall
sub
shrb
pop
xor
and
cmp
and
cwtl
push
add
adc
jns
add
fnstcw
stc
add
loopne
incl
jnp
or
xchg
testl
into
daa
mov
int3
add
xchg
std
mov
xchg
pop
repnz
into
fcomps
test
mov
add
test
pop
jle
xchg
fdiv
mov
jp
pusha
sti
sbb
mov
sbbl
cmp
pushf
xor
jl
rol
and
add
out
xchg
or
and
add
and
cmp
sahf
call
sbb
mov
or
push
into
imul
inc
addr16
fildl
adc
pop
cmp
add
inc
sbb
dec
mov
lret
or
lock
push
mov
cmp
mov
sbb
sbb
xchg
and
cmp
lahf
andl
or
mov
aam
add
clc
imul
pushf
pop
fldenv
mov
out
mov
mov
xchg
jp
jno
inc
outsb
or
cmp
mov
add
es
scas
movsb
add
inc
mov
xchg
inc
pop
add
inc
cmp
pusha
hlt
stos
jo
loope
sbb
mov
lods
inc
popa
add
rclb
fidivl
add
jb
dec
push
inc
xor
xchg
cmp
xchg
push
loopne
stos
mov
and
lea
sub
add
dec
es
add
test
test
mov
inc
add
adc
cmpsb
fcmovnu
test
push
cmp
add
pop
sub
outsl
test
inc
push
fwait
sbb
push
cmp
pushf
cmpb
pop
push
add
mov
popa
adc
loope
inc
add
cwtl
mov
fwait
inc
cmc
add
xor
mov
movsb
sub
pushf
add
fistpl
mov
shlb
cwtl
popf
fwait
dec
mov
mov
xlat
stos
pusha
pinsrw
mov
pusha
adc
mov
enter
ja
ret
loop
inc
out
fdivs
adc
popf
lock
push
push
mov
add
fsubrl
dec
push
lret
and
add
or
adc
jmp
mov
jecxz
fidivrl
sub
imul
loope
cmc
inc
lea
inc
out
add
jle
repz
rcrb
inc
sub
pop
cli
int3
fs
loopne
shlb
or
int
inc
xor
lret
or
aam
test
cmpsb
xor
pop
repnz
lcall
sub
add
mov
add
cmp
sbbl
sub
out
xchg
dec
repnz
movsl
sar
push
mov
call
and
jle
inc
stc
sub
test
jo
pop
push
or
inc
jmp
and
mov
lea
push
xor
fs
dec
xor
scas
and
mov
xlat
cmp
lahf
aam
in
push
loope
sbb
call
jnp
xor
addl
and
sbb
xor
leave
into
rolb
push
sub
pop
out
pusha
dec
cmp
in
push
sbb
sub
rcl
cwtl
cs
adc
or
loopne
push
iret
pop
jge
fimuls
xchg
sti
xor
gs
jo
loop
mov
add
sub
test
setns
orb
mov
lea
fidivrl
arpl
mov
dec
mov
lahf
jb
add
shll
out
add
sub
out
xchg
mov
add
mov
jae
adc
sub
sub
jecxz
cmp
roll
push
add
rclb
xchg
ret
or
addb
nopl
adcl
dec
dec
adc
add
xor
push
aas
mov
pop
fcmovu
aaa
aaa
pop
mov
add
movsl
push
adc
mov
inc
mov
sbb
inc
cmp
pop
popa
push
adc
jno
lahf
adc
jns
and
cmc
aad
and
add
xchg
in
add
pop
and
mov
and
xchg
jge
orb
pop
pusha
hlt
add
push
das
fs
out
add
push
xor
sarb
arpl
stc
cs
int3
stos
pop
add
fcoml
inc
inc
pop
and
cmp
add
aad
push
add
ja
xchg
sbb
pop
adc
inc
mov
adc
mov
or
jae
rolb
call
je
add
adc
or
mov
ljmp
xchg
sbb
test
push
inc
mov
xor
jl
add
sub
stos
or
add
and
and
mov
in
cltd
dec
add
xlat
add
imul
add
nop
pop
add
ja
stos
sbb
xor
aaa
mov
pop
adc
inc
mov
stc
dec
aad
adc
and
cmp
add
sub
push
cmp
aaa
push
call
mov
in
dec
popa
push
das
ja
das
push
jno
add
dec
add
cwtl
adc
sbb
xchg
push
push
cwtl
out
daa
push
adc
aaa
sbb
mov
add
out
mov
adc
fisubrs
aaa
sbb
sti
jge
pcmpgtd
adc
les
sub
pop
add
mov
int3
cmp
sbb
data16
imul
sub
rol
xor
in
loope
scas
pop
xchg
leave
loopne
push
mov
sub
dec
push
cmp
leave
inc
popa
inc
adc
xor
inc
inc
sbb
rdtsc
xor
mov
jnp
jae
add
clc
sub
jns
into
xor
outsb
push
loopne
daa
pop
mov
dec
data16
add
aam
dec
add
jnp
in
and
add
jg
imul
faddl
mov
in
outsb
aam
ret
pusha
jmp
int3
or
adc
sub
and
or
ret
mov
push
aaa
dec
mov
je
nop
add
push
fwait
jmp
lods
sbb
fdivl
movsl
push
xchg
pop
dec
loopne
xchg
inc
ffreep
add
push
fidivl
aas
jle
add
out
cmp
lret
mov
dec
lret
sti
dec
jns
loope
cmp
push
dec
ret
loop
xchg
fbld
and
mov
jb
popa
mov
call
mov
stos
loopne
lods
sub
cmpsl
dec
or
sbb
lds
jge
test
jno
mov
ja
dec
lret
add
in
xchg
ds
gs
aam
adc
sub
pop
ja
test
jo
scas
inc
bound
leave
pusha
test
loopne
fidivrs
jns
aam
push
and
outsb
jo
out
add
mov
dec
or
pop
call
xchg
pop
add
xlat
push
ret
mov
mov
fs
rcrl
insl
adc
aaa
out
add
sbbb
pop
and
sbb
xor
jnp
fsubrp
cld
lods
dec
xchg
add
mov
rolb
jo
das
mov
in
add
add
sub
mov
fcoms
jbe
add
sbb
pop
cmp
into
add
scas
dec
push
mov
loope
xchg
push
call
ret
mov
decl
pop
and
inc
imul
in
popf
dec
xor
sub
mov
or
xchg
push
sbb
insl
add
pushw
movb
js
movl
add
adc
add
fcomps
adcb
or
jl
cli
ss
shr
stc
or
jg
inc
mov
fadds
add
mov
bound
sahf
rcl
pushf
pop
sbb
cwtl
loop
rep
fbld
add
xchg
inc
ret
mov
sbb
push
movsl
test
enter
shl
and
popa
mov
cmp
sbb
fs
lret
sub
dec
push
out
repz
push
mov
imul
std
sub
or
or
fiadds
or
xor
mov
jecxz
jg
push
xchg
lock
dec
dec
out
es
inc
mov
mov
insl
fdiv
xor
adc
mov
or
jne
and
stos
pop
pop
or
add
xchg
shrb
incb
mov
mov
jb
add
push
xor
jb
pop
in
lret
xor
popf
pop
into
int
push
sahf
outsb
and
aad
push
movsl
fnsave
cmp
cltd
sar
ds
add
cmp
sbb
mov
inc
fdiv
add
ret
inc
out
aaa
sahf
dec
lods
lock
xchg
push
adc
inc
xadd
pop
sub
cmp
mov
dec
add
cmp
mov
adc
aas
push
add
push
push
test
jns
pop
fstps
lods
jle
mov
int
decb
in
lcall
pshufw
or
jbe
or
or
aas
add
cmp
push
sub
fildl
mov
test
inc
cmpsb
mov
out
add
pop
or
pop
mov
add
inc
adc
lock
pop
sub
fmull
les
inc
mov
jnp
in
adc
xchg
out
shll
out
in
sub
add
fists
push
aam
mov
pushl
mov
mov
fisttpl
jbe
leave
and
sub
add
rcrl
pop
or
daa
jl
dec
jmp
add
mov
inc
add
inc
data16
es
clc
xor
stos
out
pop
sbb
xchg
adc
mov
add
or
fisttps
mov
testl
flds
mov
pop
pop
daa
fadds
jg
pop
and
add
test
adc
into
add
jo
inc
sbb
mov
mov
xchg
cmp
xor
popf
iret
xchg
dec
rorb
mov
clc
mov
cmc
test
add
lret
add
stc
fwait
scas
sbb
inc
add
mov
adc
dec
int3
inc
sbb
jp
xchg
add
pop
ljmp
sbb
and
fsts
or
mov
xchg
push
add
mov
mov
lret
inc
sub
int
jmp
ret
push
and
enter
add
mov
test
cmpsb
dec
daa
pop
mov
jmp
clc
mov
pop
add
push
aad
xchg
lret
lret
lea
shll
aam
ja
jns
jmp
jle,pt
std
dec
lods
cli
add
cmpb
sbb
mov
xchg
scas
xchg
int
cmc
xor
mov
pop
sbb
adc
mov
jae
sarb
popa
jo
sub
xor
cli
ja
ss
es
pop
daa
jmp
sub
xor
cmp
lea
mov
or
push
or
mov
push
sub
test
dec
popa
mov
adc
lcall
popa
lock
jecxz
in
loopne
xchg
sbb
nop
add
aaa
jne
mov
pop
push
mov
xchg
xor
cmp
outsb
dec
sub
mov
insb
mov
jbe
cmp
movsb
xchg
jnp
cmpsb
fstpt
sbb
sbb
sbb
adc
add
adcb
adc
mov
jle
fisttpll
add
loopne
xor
inc
imul
inc
enter
or
push
mov
adc
gs
mov
mov
int3
mov
loope
and
add
jo
mov
push
add
loop
into
mov
insb
xchg
in
movsb
push
add
lock
add
or
scas
vmwrite
sti
stos
ffree
pusha
cmpsb
push
pop
adc
xchg
das
cmp
out
shrb
and
aad
inc
sarb
xchg
xor
call
adc
lahf
cmpb
iret
mov
fiaddl
fsubl
orl
movsb
and
clc
mov
xor
xchg
pop
or
int
aad
xor
dec
iret
pop
push
mov
lock
fisttps
rcl
fwait
dec
cli
sbb
stos
ljmp
sbb
jns
cmc
add
sub
aas
xor
mov
and
sbb
or
je
ljmp
mov
jp
inc
js
orb
adc
shrl
jecxz
pop
pavgb
mov
mov
test
movb
es
enter
pop
out
push
adc
mov
shlb
fimull
add
pop
nop
sub
sbb
int
aad
loopne
add
sbb
imul
jbe
push
in
cmp
in
xchg
sbb
add
mov
shll
and
jg
add
or
mov
pop
cmpsl
pusha
sbb
add
fs
xchg
shlb
mov
ficoms
rcrb
addb
xchg
ficompl
mov
inc
cmc
stos
cli
movsb
add
push
data16
cmpsb
aaa
pop
adc
push
push
jne
xchg
fisubs
popf
arpl
adc
cmpsl
fsubl
push
add
in
ret
bound
shl
jl
jno
add
adc
mov
xchg
in
push
test
jno
lahf
nop
cmpsb
repz
gs
xor
xchg
jbe
adc
push
sti
js
es
add
fs
add
mov
jb
loop
pop
jo
jg
mov
xchg
pop
iret
mov
lret
movsb
and
mov
arpl
test
das
roll
call
mov
mov
roll
push
inc
adc
sbb
xor
add
aas
testb
cld
stos
insb
std
fldenv
test
and
adc
addb
and
adc
jl
lret
push
sbb
mov
lret
mov
jecxz
loope
jge
into
xchg
stos
jae
sub
sti
sbb
jge
or
cmpb
mov
jl
inc
fdivr
cltd
into
add
push
mov
nop
mov
mov
shlb
loopne
je
scas
pop
fcmovnu
mov
iret
or
cld
xchg
adc
push
lods
sarb
cmp
setle
dec
andl
hlt
data16
pusha
cmp
adc
and
shrb
add
push
add
pushf
mov
xor
pop
or
xchg
push
mov
roll
leave
insb
add
add
in
arpl
adc
mov
add
add
push
adc
pop
add
or
leave
movsl
add
fsubs
jge
or
cmc
mov
pop
fcmovnu
xchg
pop
mov
mov
cwtl
xlat
or
cmp
in
cmpsb
sub
add
pop
and
jae
sbb
dec
sbb
test
push
push
sub
sbb
pusha
pop
xor
dec
inc
mov
mov
cmp
jne
adc
testl
jp
xor
add
xor
leave
mov
sahf
fcom
xchg
push
adc
mov
fidivrs
xor
or
sbb
movb
ljmp
inc
push
push
fadds
mov
push
push
aad
icebp
out
test
lds
movsl
test
pop
pop
mov
add
fs
mov
loop
add
jns
rcl
dec
add
xor
mov
cmp
cltd
pop
pop
mov
ret
add
movl
or
decb
repnz
loopne
leave
ja
daa
or
inc
inc
add
mov
pop
sub
loope
jge
lea
dec
jns
push
xchg
add
jnp
push
js
add
out
inc
out
lahf
popa
mov
sbb
xchg
pop
outsl
mov
jbe
rcrb
cmc
sbb
sarl
imul
add
mov
push
inc
push
inc
add
inc
mov
xor
daa
pusha
push
call
in
add
xor
push
or
add
lret
jnp
into
gs
jo
ret
add
mov
jne
in
inc
add
mov
decl
gs
dec
adc
pusha
pop
enter
dec
dec
test
outsl
push
pusha
fnstenv
sbb
add
mov
in
push
dec
or
addr16
add
out
and
call
pop
pop
stc
push
mov
and
jo
mov
push
cmp
adc
leave
jns
xchg
and
jge
pop
add
mov
mov
int
xor
inc
mov
inc
jmp
add
fucomip
test
divb
daa
fisttpl
xor
lret
add
je
xor
xchg
int3
xchg
add
pop
push
and
xor
orl
insb
out
add
push
cmpsb
mov
arpl
testl
push
push
inc
les
out
pop
leave
pop
jo
xchg
or
sbb
cltd
push
syscall
enter
jg,pt
icebp
ret
mov
add
adc
jnp
dec
jmp
xor
add
pop
jnp
or
cmp
and
ja
sub
andl
inc
mov
add
fcompl
mov
sub
call
sub
mov
ret
add
rclb
fnstsw
repnz
ss
push
pusha
pop
push
mov
push
ret
pop
addb
mov
sub
arpl
or
dec
pop
aam
js
cwtl
inc
add
jae
or
in
popf
or
adc
or
cltd
add
sahf
dec
push
mov
inc
addr16
cld
jae
test
sub
lods
add
push
push
daa
sbb
inc
pop
in
andl
subl
mov
jns
dec
add
or
mov
cmp
push
push
pop
sarb
add
stos
dec
js
or
mov
clc
push
inc
addr16
inc
incb
sbb
out
add
pop
push
and
add
mov
in
dec
aam
mov
and
xchg
stos
jns
es
jb
and
cmp
mov
daa
add
imull
in
add
clc
mov
sub
fildl
jnp
scas
jmp
pop
cli
xor
cmpsb
fdivrl
loopne
mov
mov
int3
imul
adc
mov
add
pop
jge
mov
sbb
pop
mov
xorl
pop
pop
adc
add
les
inc
movsl
add
imulb
out
jne
jbe
ds
mov
xor
push
popl
dec
push
test
adc
and
mov
lods
add
xchg
pop
mov
inc
add
hlt
mov
or
aas
or
xchg
jmp
adc
cmpsl
inc
cmpsb
addr16
add
dec
pop
jg
std
push
imul
ljmp
fimull
mov
add
xchg
xor
add
lahf
mov
js
pop
and
xor
xchg
cmpsb
fcmovnbe
or
cmpsl
rorb
inc
outsl
shlb
mov
and
shl
pop
inc
sub
incl
call
pop
adc
lds
loop
jo
sub
dec
mov
ror
fdiv
outsl
adc
fnstenv
push
push
inc
ret
xchg
xlat
adc
push
adc
jl
addl
mov
out
push
add
pop
mov
int
xor
fistps
xchg
shlb
pop
sbb
dec
cmp
xor
inc
dec
fwait
xor
aaa
cmp
mov
adc
shl
aas
add
fsubrs
inc
inc
dec
pop
inc
int
int3
mov
push
dec
dec
inc
movsl
and
or
push
dec
sbb
mov
stos
mov
mov
jns
dec
fwait
and
icebp
or
stc
jle
lock
mov
dec
pop
adcb
lcall
rcr
and
sub
pop
push
lods
or
jp
jg
add
out
mov
or
pusha
lret
mov
loope
jg
sbb
in
cmc
ljmp
ljmp
mov
xor
cli
stc
adc
mov
adcb
cmp
mov
jmp
stc
mov
pop
cmpl
sbb
push
mov
mov
or
jecxz
jae
loop
xor
push
pop
call
pop
jmp
pushl
imul
mov
sti
fwait
mov
andl
cwtl
in
ja
jns
sbb
test
cmp
popa
aam
lea
out
clc
sbb
call
add
jbe
in
xchg
das
std
jne
mov
pop
test
xor
insl
cmp
lea
rolb
mov
push
andb
std
out
xor
xchg
push
popa
cmpb
mov
add
shlb
mov
cmpsb
jbe
push
pusha
mov
arpl
mov
lcall
sbb
push
test
cmp
lahf
pop
xchg
jno
push
jne
add
out
xor
pop
cmp
push
mov
mov
cmp
add
jle
mov
xchg
xchg
pop
std
adcb
inc
dec
cmp
mov
xchg
add
mov
jne
add
cmp
jmp
ljmp
mov
mull
idivl
loope
jmp
sahf
add
dec
fwait
mov
rorl
mov
lods
adc
cs
mov
orl
ljmp
dec
lahf
adc
pop
xor
leave
int
fdivrs
pop
dec
movsb
mov
add
add
decl
xchg
or
repz
and
test
push
dec
sub
cmp
jl
testb
iret
mov
sbb
add
int
mov
rclb
sub
test
mov
mov
leave
inc
jecxz
fidivl
or
fmul
push
jns
add
ret
addr16
jnp
mov
pop
test
dec
cmpsb
ret
shrb
rorb
cwtl
jl
sub
pop
cmpb
fstpt
shrl
fmul
push
shlb
iret
xor
or
rsm
dec
sbb
add
add
mov
add
mov
mov
jl
mov
stos
leave
inc
ret
inc
rorl
add
jp
nop
and
outsl
outsl
mov
hlt
rolb
mov
sbb
add
dec
fcomps
push
cmp
pop
pusha
jp
push
mov
lds
pop
push
or
cmp
pop
fadds
repz
stos
cmp
push
out
pop
add
loopne
scas
repz
addr16
add
sub
adc
mov
outsl
push
test
ss
insb
dec
mov
inc
out
dec
aaa
mov
ljmp
sbb
mov
push
cmc
sbb
out
and
test
leave
pusha
cmpl
fcompl
sbb
jg
nop
ljmp
add
push
out
mov
push
cltd
xor
lods
mov
out
add
aam
mov
pop
mov
mov
int3
and
imull
xchg
aam
sbb
mov
lock
int3
adcb
stos
int
in
cld
lock
push
sub
inc
ds
sub
popl
push
adc
rcl
xor
pop
sub
jns
enter
rclb
in
add
inc
test
pop
push
mov
data16
push
inc
add
lods
je
sbb
mov
rolb
add
xor
mov
sbbb
nop
dec
repnz
shll
or
pop
pop
add
mov
dec
or
cmpsl
or
xor
std
cld
lcall
jle
daa
jge
aad
cld
stos
inc
mov
adc
adc
out
aas
add
gs
sbb
add
lods
sub
pop
mov
add
dec
xchg
cmp
mov
adc
jmp
icebp
sbbb
lret
inc
mov
cli
push
jmp
xor
pop
movsl
fs
lock
xor
rcl
in
sub
das
imul
test
enter
lret
or
das
lahf
add
fwait
push
and
pop
in
int
inc
add
and
lock
call
and
lock
push
scas
in
jmp
mov
or
out
sbbl
aam
in
push
push
stc
lea
or
xor
sbb
scas
fisubl
aas
loopne
mov
outsl
sbb
adc
insl
dec
inc
nop
xor
in
sti
pop
cmpsl
enter
loope
push
add
fisubrs
lret
sub
test
dec
pop
and
push
sbbl
call
popa
pop
mov
mov
add
cs
dec
arpl
cs
sbb
subl
push
inc
dec
mov
hlt
pushf
and
test
pushf
sti
pop
jne
outsl
mov
add
mov
add
adc
in
cld
fistps
pop
xchg
sbb
pushl
mov
in
pushf
sub
lock
mov
jae
mov
rol
daa
call
push
adc
orb
orb
or
and
push
in
cmp
pop
int3
add
mov
andb
add
outsl
mov
mov
mov
xor
nop
mov
add
movsb
test
add
lret
in
push
nop
and
cmp
scas
add
lea
cmp
dec
sysexit
int
ss
stc
push
pop
xor
dec
and
inc
aam
cmp
dec
push
add
pop
push
pop
cmpsb
xorl
push
into
mov
mov
int
pop
and
test
andb
adc
xchg
movsb
xor
mov
jo
insb
cmp
add
cmp
pop
xchg
fs
add
cltd
mov
rclb
or
lea
cmc
inc
dec
cmp
or
xchg
dec
jle
mov
sub
push
cmp
add
add
xor
arpl
cli
cld
sub
add
repz
pop
pop
mov
push
add
pop
ja
sub
rcl
mov
rclb
adc
pop
pop
or
push
in
xchg
into
xor
popa
mov
push
pop
dec
sbb
ret
inc
add
xchg
pop
nop
imul
xchg
xchg
pmullw
popf
shll
add
dec
rorb
popa
add
xchg
shlb
fdivs
and
inc
push
mov
pop
add
add
pop
insb
lock
mov
or
inc
imul
push
or
mov
xor
sub
mov
pop
cs
int
lock
xorb
test
mov
mov
pushf
inc
out
push
and
sub
dec
iret
insb
jg
imulb
adc
or
push
cmp
xor
xor
fildll
rcll
loopne
rolb
nop
push
dec
or
pusha
and
addb
pop
sub
js
orb
cs
rcrl
xchg
adc
sbb
fsub
out
mov
sub
pop
push
adc
scas
inc
add
pushf
aaa
and
sbb
ja
push
stos
in
dec
insl
cmp
add
mov
xchg
add
leave
mov
push
pusha
sub
mov
aam
xchg
rcrb
add
and
inc
enter
cltd
cmp
scas
sbb
push
dec
addb
fcomps
gs
out
cld
aam
pop
inc
outsb
test
sahf
xor
cld
and
add
pop
push
sub
test
sub
or
or
add
pop
or
push
or
sub
mov
aam
push
xor
pop
loope
loopne
or
mov
mulb
cld
mov
adc
mov
mov
int
scas
add
stc
and
inc
add
pop
push
std
or
mov
sbb
add
cmp
xchg
jmp
pop
jg
push
inc
lods
aad
xor
dec
shrb
or
and
jae
dec
add
push
or
push
shll
adc
jle
xor
dec
js
add
mov
xor
and
cmpsl
xor
inc
mov
sbb
add
adc
jno
xor
and
sbbb
add
sbb
cltd
fld1
xchg
scas
sub
xor
lahf
fildll
sbb
inc
nop
xchg
lock
hlt
addr16
mov
inc
and
mov
add
jb
movsl
pushf
lea
icebp
xor
int
mov
push
inc
and
add
pop
push
movsb
fildll
mov
pop
or
gs
in
pusha
fistpll
inc
sbb
pop
pop
push
mov
and
rorb
xor
adc
add
loop
xchg
sub
hlt
scas
andl
les
sub
ljmp
loopne
inc
jp
push
dec
scas
sub
sahf
add
loopne
mov
mov
test
inc
int
adc
mov
cwtl
xchg
je
push
aad
inc
je
cmp
mov
cmp
lods
xchg
es
sbb
push
xchg
cld
dec
inc
insb
cmpsb
pop
cld
lock
lahf
add
mov
mov
and
jno
push
pop
cwtl
clc
dec
add
ret
retw
add
js
sub
cmp
inc
cs
cmc
orb
into
dec
add
pushf
cmp
pushf
push
sub
add
cld
inc
out
frstor
pop
movsb
and
xchg
and
push
adc
add
cmp
cs
aam
dec
inc
adc
xor
arpl
into
dec
and
jns
and
mov
push
jbe
jp
clc
sti
add
inc
xchg
and
or
sub
and
add
nop
pop
jo
pop
rcrb
je
push
adc
je
clc
inc
mov
add
and
add
cmp
dec
or
or
sub
or
xor
adc
sub
push
sbb
cmp
dec
call
scas
and
dec
adc
add
pop
scas
mov
mov
pop
aam
dec
pop
or
xchg
add
insb
hlt
push
mov
mov
popa
and
jbe
mov
and
in
mov
add
sbb
movsb
test
pop
and
xorb
add
outsb
clc
push
rolb
add
shrb
out
fstl
adc
fmuls
add
xor
jecxz
or
sahf
xchg
jns
gs
pusha
cwtl
adc
inc
pushf
orb
fimull
mov
add
xchg
or
xchg
mov
and
mov
or
push
mov
push
icebp
test
mov
loop
xor
dec
add
mov
lahf
adc
cmp
mov
in
ja
pop
mov
nop
aas
aaa
in
and
into
push
fimull
mov
aam
addb
inc
jl
and
jno
sub
lods
pushf
mov
pop
and
cmc
sub
shlb
popf
or
add
repz
and
mov
movsl
dec
sarb
imull
imul
pusha
rorb
cmp
mov
adc
scas
push
sbb
mov
and
cmp
mov
inc
bound
adc
test
pusha
bound
dec
outsb
mov
jns
sbb
nop
loope
inc
hlt
add
arpl
lods
sbb
rcr
loopne
lea
mov
cmpsb
mov
cmp
and
fadd
jecxz
mov
ss
movsb
sbb
pop
xor
jo
dec
or
push
jnp
dec
pop
or
cmc
mov
xchg
sahf
mov
inc
in
adc
cmp
imul
mov
ljmp
xchg
adc
in
fisttpll
js
add
xchg
push
mov
xchg
adc
or
cmpsb
jge
sbb
add
es
mov
out
add
loope
fstl
sbb
cmpb
cld
xchg
cwtl
sub
add
adc
add
dec
mov
es
repnz
dec
pop
xchg
add
movb
inc
and
shrl
popa
mov
aaa
mov
sahf
adc
pop
mov
movsl
xor
sbb
test
mov
lods
xor
neg
or
pop
mov
movsb
into
sbb
sbb
scas
adc
mov
dec
lahf
test
decl
xor
das
xor
add
sub
or
adc
pop
cmpsl
enter
ror
sbb
mov
cli
mov
out
mov
add
mov
loope
add
adc
adc
out
add
lcall
dec
dec
dec
sahf
test
cli
inc
add
dec
nop
scas
cmpsl
mov
cmp
xchg
add
mov
add
test
xor
cmp
pusha
nop
jmp
ret
scas
adc
mov
rcrb
or
pop
leave
lods
in
pusha
cmp
mov
push
or
cli
inc
les
nopl
sub
out
mov
lret
ss
xchg
scas
mov
js
in
push
adc
sbbb
inc
xor
xchg
add
xor
fs
push
popa
rorl
outsb
jecxz
sub
movsl
add
mov
imul
lock
clc
sub
adc
jne
sbb
sbb
add
and
cmp
or
jno
sbb
add
push
sub
sub
shll
dec
repz
mov
mov
pusha
inc
fsts
jmp
xchg
pop
insl
movups
and
aam
xor
mov
add
push
push
rolb
ljmp
add
pushf
add
sub
fiadds
dec
jmp
inc
ljmp
call
aas
or
pushf
mov
sarb
jo
jecxz
not
rclb
mov
xor
jge
nop
les
pusha
sub
lock
call
lods
sbb
inc
mov
les
fsubrs
lock
pop
xchg
add
or
movsb
and
mov
add
aad
scas
das
test
add
cmp
dec
xor
ds
cmp
and
fmull
loopne
push
in
adc
imul
fdivrs
cli
xor
arpl
dec
nop
jae
mov
fdivrs
subb
push
aam
outsl
xor
fcoms
loopne
outsl
xor
jl
hlt
mov
lods
dec
mov
ja
dec
ret
lods
xchg
add
pop
faddp
addb
pop
fdivs
add
mov
leave
cmp
add
xchg
outsb
push
inc
adc
je
decb
xchg
add
pop
inc
aam
arpl
add
insl
mov
push
sbb
cs
adc
testb
sbb
add
inc
scas
sub
add
sub
push
orl
add
inc
cmp
xchg
and
daa
mov
std
xor
add
pop
cs
int
or
insb
sub
mov
repnz
xchg
inc
sbb
and
mov
mov
test
inc
xor
stc
outsl
inc
ljmp
insb
dec
std
ret
and
add
dec
mov
inc
outsl
sbb
sahf
adc
dec
cmc
inc
loop
xchg
pop
mov
push
adcl
rclb
dec
mov
inc
push
ret
add
sub
sub
js
cmp
mov
push
jnp
aam
mov
das
pop
or
lds
das
aas
pop
dec
adc
subb
add
mov
test
jno
mov
jl
lds
ret
stc
push
cmp
mov
dec
andb
test
mov
and
jno
mov
inc
shll
jno
sbb
add
fildll
sbb
add
dec
push
or
push
or
icebp
subb
pop
fs
cmpsb
loop
sbb
fs
rorb
pop
jg
lock
lods
mov
pushf
int3
or
scas
xor
int
add
int3
mov
add
fnstenv
lods
int3
adc
arpl
or
in
fldl
adc
sbb
or
push
daa
push
lds
xor
dec
pop
ror
in
pop
add
or
xlat
or
inc
and
sbb
les
add
push
mov
jge
lods
dec
pop
test
mov
ror
imul
sub
pop
mov
pop
cwtl
or
pusha
mov
pop
roll
push
sbb
sbbb
cmp
sbb
add
rcrl
pop
cmp
sbb
or
push
fsubrl
pushf
inc
sub
inc
pusha
insb
mov
xchg
cwtl
xchg
cmp
add
stc
out
lahf
mov
fs
sbb
cmp
pushf
sbb
push
cld
and
jl
and
pop
xor
or
call
cwtl
xor
pop
les
sbb
out
addl
in
daa
and
add
pop
scas
fs
or
fcmovnu
mov
les
mov
pop
das
pop
test
popa
cmp
pop
sub
jmp
fisubrl
mov
push
in
ret
and
into
xchg
shrb
push
mov
insb
rolb
in
cmpsl
and
lods
mov
mov
sub
xor
xchg
adcb
scas
sbb
mov
add
pop
in
movsb
pop
mov
fdivrl
popf
dec
lods
nop
dec
or
insl
inc
shll
mov
pusha
movsb
inc
add
cs
inc
add
fnstsw
scas
push
in
sub
dec
xor
popa
in
dec
mov
repz
xlat
push
divl
add
mov
clc
pop
sub
mov
das
xchg
ret
pop
sub
jb
xlat
sbb
sub
in
pop
inc
add
subb
fistpl
push
sti
xchg
add
xor
hlt
jmp
sub
movsb
xchg
inc
pusha
nop
pusha
je
sbb
cld
and
gs
testb
xchg
scas
fistpl
and
sub
pushf
test
js
hlt
xchg
sub
cmc
nop
and
shll
fcoms
pop
fcoml
push
int3
push
enter
cmp
or
lds
cmp
in
sar
ds
and
pop
inc
cmp
xorl
pop
insl
jge
or
in
rolb
call
mov
js
mull
enter
nop
adc
jno
cld
push
inc
jg
pop
push
adc
jecxz
flds
frstor
iret
adc
fcompl
out
add
add
mov
cld
scas
dec
ljmp
aam
sub
in
xor
shlb
jg
es
popf
cmp
dec
push
std
mov
les
ds
lret
dec
adc
inc
roll
add
and
fwait
jo
negb
sub
mov
adc
pop
rol
add
jecxz
add
test
add
inc
dec
add
push
push
pop
cmc
xor
sub
dec
lea
clc
or
mov
repnz
xchg
xor
loop
and
shl
rclb
pop
push
or
inc
inc
fiaddl
in
lea
add
cwtl
cmpb
cld
add
mov
aaa
jne
or
loopne
and
pushf
movsl
inc
ja
mov
clc
movsb
jle
popf
subb
sub
and
and
jo
loopne
mov
movsb
pop
inc
in
mov
or
fmuls
aad
mov
jno
insb
pop
das
xor
aam
lret
fildl
in
imul
lods
add
orb
dec
and
mov
jns
cmp
mov
movb
mov
fwait
xor
add
push
repz
pop
adc
pop
shlb
in
inc
cwtl
or
and
xor
scas
jmp
xchg
xchg
insb
adc
dec
scas
jl
fcomps
inc
in
movsb
xchg
in
pusha
out
lahf
push
and
js
xchg
xchg
and
xor
je
in
cmpsl
icebp
in
imul
int3
lret
fwait
sbb
or
outsl
or
pop
rcll
in
or
xlat
jl
inc
mov
pop
cs
inc
push
adc
into
mov
in
out
fldl
add
push
push
ss
sub
pop
addb
nop
dec
lock
xadd
scas
mov
das
call
mov
or
in
hlt
xor
nop
or
daa
fstl
pop
clc
inc
cmp
xor
or
pop
pop
jo
pop
add
and
mov
push
prefetcht0
out
daa
sti
rcr
inc
add
inc
aad
pusha
test
jg
xor
add
push
out
iret
cld
adc
stos
push
and
jnp
scas
add
pop
dec
jno
mov
pop
rcl
shlb
push
add
mov
jge
pop
leave
or
and
test
cld
mov
pushf
fprem1
adc
mov
fdiv
add
xor
push
int3
arpl
mov
mov
mov
jne
cli
pop
jbe
pop
repz
movl
xor
adc
and
out
cmp
int
gs
xor
inc
or
adc
ds
and
outsb
movsl
pop
icebp
or
rcrb
loope
imul
push
sahf
rclb
xor
cmpsl
or
inc
dec
add
pusha
subl
or
push
nop
mov
fnsave
leave
loopne
inc
cltd
add
xlat
les
push
in
rorl
insb
push
clc
xchg
jp
and
stc
adc
inc
lods
je
rorb
add
push
sbb
ret
mov
adc
rolb
cwtl
cltd
cmp
out
pop
std
and
pop
orb
xor
mov
xor
mov
insb
testl
lds
mov
mov
mov
and
out
idivb
fisubs
ffreep
mov
and
mov
arpl
out
cwtl
jno
add
or
movsl
imul
nop
dec
add
cmp
and
xorl
or
loope
mov
xor
inc
pushf
mov
mov
and
subb
pop
int3
xlat
sbb
test
cmp
cltd
and
dec
sarb
dec
hlt
xchg
jns
paddusw
sub
add
pushf
xor
lcall
add
in
xor
out
in
insb
and
or
movsb
pop
sti
add
in
push
add
rclb
stos
sbb
adc
adc
add
out
out
xor
test
cmp
inc
lcall
push
sbb
pop
ja
cld
icebp
sbb
dec
xor
pop
scas
out
jl
mov
inc
dec
adc
shll
adc
andl
lods
ss
and
adc
call
or
inc
push
adc
lock
mov
sbb
rcrb
enter
jbe
ds
popa
leave
add
adc
in
in
stos
mov
les
add
loopne
pop
pop
add
mov
lea
xchg
push
rorb
cltd
sub
imul
mov
daa
repnz
jb
xor
and
jbe,pt
arpl
sarl
jg
add
dec
popf
add
negl
sti
push
pop
cs
inc
cmp
mov
xor
push
stos
sub
sbb
mov
jns
rcrb
pop
lahf
rcl
mov
push
pop
test
in
pusha
jp
cmpsl
sahf
cmp
xor
add
std
cwtl
in
fists
pusha
movsb
xchg
sbb
xchg
in
push
cltd
xchg
je
and
arpl
gs
xor
sbb
add
push
pop
insb
pop
xor
push
pop
mov
cmpl
dec
xlat
jno
rcrl
mov
pusha
cmp
and
call
mov
push
inc
loopne
sbb
lods
push
rcl
pop
repz
and
popa
ret
cltd
add
or
daa
rclb
insb
call
das
mov
in
lock
in
cmc
daa
mov
cmp
std
call
dec
jbe
hlt
sbb
adc
pop
pop
les
and
call
aam
sbb
jmp
insl
push
jb
or
pop
xchg
mov
xchg
add
orl
stc
js
scas
sub
mov
push
lods
daa
enter
pusha
dec
pop
arpl
aaa
movsb
mov
xchg
cli
pop
popa
push
mov
xchg
rorl
add
imul
out
insb
or
les
rcll
and
inc
add
gs
sarl
cmp
lds
mov
rolb
lock
hlt
or
add
repz
test
fldt
mov
adcb
mov
movsb
mov
in
decb
and
adc
repnz
popf
arpl
stos
sbbl
add
hlt
aaa
sbb
and
pop
mov
add
xchg
sub
push
sbb
scas
cwtl
packsswb
in
movsl
popf
xchg
rorl
fs
and
cli
or
sub
imul
and
addb
sbb
adc
in
adc
xor
pop
sub
add
or
lods
and
dec
inc
xor
mov
xor
mov
add
xchg
repz
sbbb
mov
js
and
cmc
jp
fldt
pop
addr16
pop
push
mov
pop
out
mov
aaa
popf
orl
sbb
pusha
ret
sbbb
xor
out
add
imul
adc
int3
sti
xchg
xchg
loope
in
xor
add
cmp
in
mov
push
xor
ja
popf
push
int3
mov
add
sub
movsb
sbb
add
mov
scas
lahf
adc
cwtl
outsl
sub
sub
in
hlt
incb
push
xchg
xchg
inc
aad
pushf
mov
fldt
scas
loopne
sbb
mov
adc
outsb
xchg
mov
xor
fsts
in
mov
sbb
xchg
clc
sbb
pop
iret
nop
dec
jno
xor
add
push
fldl
lret
sub
insb
adc
push
add
inc
dec
push
xor
mov
fnstenv
lock
sbb
push
or
in
sbb
xchg
and
fld1
push
add
lds
shr
fs
push
pop
sub
bound
xor
and
or
pop
std
add
fcompl
mov
ss
lock
in
add
xchg
aas
xor
jne
sbb
cmpsl
in
lea
xor
daa
les
dec
je
mov
mov
das
xor
dec
out
jecxz
sbb
arpl
in
jl
xorb
mov
sub
stos
add
clc
dec
dec
fldenv
call
nop
xlat
orb
lret
add
ret
leave
mov
cli
jb
or
pop
pushf
cmp
iret
and
add
pushf
cld
or
pop
imul
roll
aam
je
mov
or
sbb
jle
add
or
mov
das
je
mov
iret
lds
in
push
adc
lret
popa
add
cwtl
mov
cmp
add
cld
or
sbb
lods
pop
and
xlat
movsb
mov
mov
pop
pop
mov
or
cmp
lea
push
cli
pop
rol
jg
or
jnp
das
dec
mov
aaa
sbb
cs
fmul
add
or
or
xor
mov
out
pop
add
enter
sub
jecxz
pop
out
cmp
jecxz
ss
adc
add
sar
mov
cltd
fld
or
add
inc
mov
repz
mov
addb
mov
daa
popf
ret
mov
sbb
loopne
add
cmp
pop
movsb
mov
add
cmp
mov
imul
call
jmp
es
or
shll
in
inc
xor
mov
sbb
and
mov
test
adc
sub
mov
andl
js
add
and
jp
in
ret
jle
cmp
mov
outsl
xchg
and
and
cmpsl
dec
xchg
add
sbb
in
and
inc
imul
clc
lahf
js
push
lea
add
xchg
cwtl
lret
dec
pop
add
mov
jmp
pop
idivl
inc
cltd
mov
push
adc
dec
xor
test
ljmp
adcb
add
push
xchg
loopne
dec
js
or
leave
mov
sub
add
aad
adc
sbb
or
cmc
stos
enter
stos
sub
add
cmp
fs
adc
push
add
add
push
shll
andb
cmp
sub
pop
add
mov
in
add
shll
cmp
dec
push
sub
jo
in
add
rcrb
mov
dec
cmp
add
fimull
mov
sbb
add
lahf
push
mov
push
jp
add
daa
cmp
add
cmpsl
add
pop
clc
sbbb
lods
nop
addb
add
lcall
add
cmpl
push
mov
xor
fadds
mov
dec
mov
dec
or
dec
hlt
sbb
xchg
cmp
dec
mov
mov
pop
pop
cmp
cs
cmp
test
popl
incb
mov
scas
adcb
pop
popa
push
mov
mov
nop
pop
jne
mov
xchg
add
stc
lea
insl
add
iret
je
and
push
jnp
pop
in
imul
fisubs
ja
nop
add
mov
jns
ja
or
xchg
stos
mov
or
push
mov
jno
sub
lds
sub
push
push
jns,pn
call
add
shlb
cmp
sbb
insb
dec
add
sbb
pop
std
js
sarb
add
mov
clc
and
xlat
xchg
aaa
fisubs
into
push
lds
jbe
adc
add
gs
add
rcr
clc
xor
test
pop
inc
lea
stos
or
enter
push
leave
sahf
ret
and
sbb
inc
add
out
cmp
loopne
outsb
or
jbe
ljmp
imul
out
out
adc
add
xchg
mov
loope
es
js
jnp
imul
mov
js
pop
enter
in
fiaddl
out
lock
sbb
addb
jp
outsb
into
out
cmpb
mov
out
insb
and
rcl
xor
jb
test
sbb
xorl
xchg
cmp
call
popa
das
cmp
mov
add
pop
test
nop
loop
xor
dec
jne
pop
xchg
fisubrl
push
cmpsb
mov
scas
rcl
out
repnz
mov
outsb
or
or
sub
pop
aad
xor
lods
pop
pop
arpl
or
mov
adc
and
fmuls
pop
xor
in
xor
add
cmpsb
sub
add
lea
inc
sbb
cmp
pop
push
dec
cwtl
pop
nop
pusha
jge
scas
rcll
cld
mov
shlb
rolb
cmp
mov
pop
sbb
dec
scas
mov
jns
inc
lcall
mov
xchg
pop
aam
cld
ret
add
in
clc
subl
cli
mov
push
pop
nop
jp
jecxz
inc
mov
or
add
cmp
inc
mov
ret
jo
jae
xor
add
scas
cmp
shll
add
sub
les
or
inc
addps
mov
fnsave
add
aaa
loope
cwtl
shll
push
sub
enter
roll
jle
cmp
mov
push
sbb
lret
pop
leave
faddp
bound
xor
or
sub
sub
or
mov
inc
nop
call
cs
movl
out
addb
pop
jecxz
mov
xor
mov
aas
aam
iret
pop
std
es
sbb
add
imul
add
test
lds
mov
es
dec
nop
mov
add
xchg
insl
mov
add
jmp
nop
out
pop
fcompl
addl
ja
mov
mov
pop
mov
jae
add
jo
in
adc
imul
lea
add
xor
add
lds
ss
jnp
push
add
xchg
or
mov
mov
jbe
xor
lods
add
push
cmp
pop
add
stc
cwtl
jnp
push
and
adc
cs
adc
flds
push
es
mov
add
shlb
fwait
jmp
imull
sub
cmpsb
repnz
ret
in
fcompl
add
popa
fisubl
or
adcl
mov
sbb
gs
xchg
pushf
addr16
sub
mov
mov
mov
maskmovq
notl
inc
pusha
sub
or
mov
adc
mov
inc
fildl
cmp
cmp
jge
insb
mov
sub
repz
add
hlt
shll
lock
push
subb
jp
movsl
loope
inc
mov
add
xor
sti
faddp
int
inc
enter
add
minps
jo
add
pop
in
mov
int
pop
push
out
addb
ljmp
push
mov
xchg
scas
bnd
or
out
loope
sbb
mov
push
xchg
add
mov
push
cltd
push
and
jmp
or
sti
push
imul
add
mov
clc
cs
pop
lret
jge
jg
jae
enter
cmp
sbb
jnp
push
dec
and
inc
lods
add
or
cli
mov
jle
into
jae
imul
call
pop
push
cmc
add
insl
push
scas
imul
inc
mov
int3
xchg
sbb
movsl
adc
dec
push
call
jle
jb
jp
insl
pop
adc
mov
fimuls
cmpsb
add
out
jno
enter
subb
imul
mov
mov
lret
mov
pop
movb
jl
sub
adc
pop
imulb
xor
mov
cmp
lods
scas
mov
pop
loop
or
mov
inc
int3
mov
add
sbb
subb
iret
add
mov
fstp
movsb
mov
sbb
inc
and
in
xor
lods
into
mov
xor
lcall
add
sbb
hlt
decl
add
jl
out
dec
xor
lods
add
add
jge
mov
jbe
hlt
mov
mov
pop
push
jmp
mov
jo
aaa
add
pop
andb
dec
mov
adc
dec
or
cmp
movsb
jecxz
pop
add
inc
xchg
ret
hlt
sub
mov
add
push
inc
add
add
pop
mov
xor
rcrl
dec
fisttps
or
push
shrb
cs
ja
test
sbb
and
fsubrs
cmp
subl
jns
add
and
adc
sbb
pusha
loope
lods
xor
clc
sbb
das
xchg
add
out
mov
or
fs
ror
scas
cmp
push
xor
rcl
add
insb
cmp
mov
add
call
and
das
in
rolb
outsl
pusha
out
lds
pop
mov
ds
sbbb
out
in
arpl
cs
fcoms
out
lret
add
shrl
adc
dec
test
mov
imul
jnp
pop
xor
mov
sbb
jnp
and
outsl
nop
mov
arpl
mov
mov
add
jge
pop
les
incb
jle
lock
inc
js
push
stc
pushf
out
jnp
and
mov
int
ss
and
pop
cmp
negb
pop
xor
sbb
jns
cmc
dec
push
in
xchg
imul
rorb
test
shlb
mov
xchg
fistpll
icebp
mov
add
xchg
in
lcall
inc
add
xor
cmp
add
fisubrl
addr16
mul
mov
lret
in
add
pop
les
addb
mov
lds
jnp
sti
movsb
fisubl
mov
dec
pop
scas
xchg
ret
jns
js
inc
loopne
xor
aas
insb
add
xor
push
add
xchg
leave
or
sbbb
aas
mov
aaa
add
xchg
cmp
sbb
mov
js
sti
shll
test
dec
mov
push
ds
subb
push
jbe
add
cmc
push
and
xor
stos
add
mov
add
xchg
test
dec
repz
popf
mov
adc
inc
aam
jae
cmpsb
and
cmpsl
push
mov
or
pop
push
add
mov
jnp
scas
or
in
mov
add
stc
icebp
aam
incl
pop
enter
ds
add
scas
cltd
push
cld
lock
push
cmc
xchg
and
cmp
add
cmp
push
pop
push
test
xchg
leave
loop
popa
sub
inc
mov
loopne
test
adcl
scas
popf
lldt
xor
ja
add
fs
into
repz
and
pop
data16
ret
xor
cmpsb
add
popa
sub
icebp
dec
jb
add
or
add
les
add
add
inc
out
movsl
inc
popf
nop
test
sahf
jle
adc
stos
jmp
jno
adc
adc
inc
stc
call
cmp
test
add
in
mov
fcmovnbe
mov
jl
insl
or
add
add
femms
and
sub
mov
sbb
ss
cmp
dec
pop
adc
in
pop
jne
add
mov
dec
cmpl
push
xchg
xchg
lret
cmp
loopne
or
cmp
movsb
orb
sub
sbb
push
cmp
inc
mov
mov
or
je
jno
adc
ljmp
lret
sub
xchg
dec
add
mov
sbb
lock
clc
js
sub
addr16
pop
jmp
or
jle
xchg
mov
cld
fadds
add
arpl
jo
imul
bound
mov
jne
ss
xchg
imul
roll
push
jb
les
pop
dec
xor
jae
jns
sub
pop
mov
leave
add
rolb
adc
outsb
shl
mov
jne
or
and
imul
mov
jno
xor
sbb
imulb
cmpb
xchg
repnz
pop
mov
cmpsb
xchg
add
mov
push
add
rolb
pop
movsb
ja
adc
or
xor
test
mov
frstor
mov
ficoml
cmp
insb
cmpsl
mov
inc
repz
xchg
xor
std
add
pop
dec
stos
test
push
xchg
mov
insb
or
mov
rorb
add
ret
add
fcoms
adc
xor
add
js
inc
sub
mov
mov
mov
or
add
or
sub
push
loopne
rcrb
in
pop
jmp
pop
out
imul
xor
rcll
pop
loopne
stos
sbb
jbe
add
sbb
or
stc
cs
jmp
inc
jecxz
mov
repz
popf
mov
js
out
xchg
dec
push
mov
dec
inc
add
cwtl
sti
shlb
in
dec
jp
and
pop
xchg
inc
mov
leave
xchg
rolb
add
mov
inc
pop
test
mov
out
ret
xchg
addb
push
jbe
add
lock
push
rclb
jmp
push
addl
add
iret
pop
push
mov
gs
cmc
mov
push
or
dec
cs
in
inc
pop
test
test
movsl
add
cld
lahf
or
clc
cli
add
mov
jb
or
or
add
cltd
imul
jl
add
in
stc
add
aad
in
xor
adc
cwtl
dec
ljmp
ja
dec
inc
mov
stc
jl
add
adc
jno
pop
aaa
loopne
and
je
add
test
inc
dec
inc
lret
mov
jmp
push
add
stos
ds
adc
icebp
in
aam
in
lret
es
jae
out
adc
mov
push
daa
sbb
test
scas
loop
xchg
daa
push
fs
push
pusha
sbb
popa
mov
movsl
add
dec
fcomp
adc
lcall
jnp
cwtl
int
mov
add
adc
pop
mov
pushf
adc
imul
gs
and
add
sub
out
loop
cmp
pop
jnp
add
xchg
cmpl
add
push
movsl
add
aam
mov
push
xchg
jle
push
jo
inc
mov
and
xlat
pushf
adc
test
mov
in
sbb
xchg
and
add
adc
je
inc
rorl
add
dec
fsubrs
xchg
mov
in
int3
addr16
ret
pop
and
pushl
pop
jns
shlb
cmp
ficoms
and
cmp
pop
mov
or
stos
leave
sbb
psllw
inc
or
adc
loope
and
add
ret
test
fwait
idivb
dec
or
icebp
xor
mov
clc
movsb
and
dec
inc
and
lahf
add
mov
cwtl
shll
mov
enter
test
cld
add
int3
cltd
or
icebp
movl
out
test
es
fsubrs
loop
popf
cmp
push
lods
aaa
or
addr16
stc
test
and
xchg
mov
loopne
inc
xchg
jno
setb
push
lods
xchg
adc
in
scas
stc
mov
ds
pop
push
jae
mov
movsl
addb
in
pusha
hlt
test
jecxz
js
mov
add
adc
pop
jnp
mov
add
and
ss
jmp
loopne
jne
or
mov
add
pop
stos
and
push
aam
sub
add
jb
inc
rorb
and
fisttpll
scas
add
inc
jecxz
lahf
daa
add
enter
or
clc
push
aad
pop
sbb
cmpb
andl
jge
imul
push
fsub
dec
clc
loopne
sbb
and
call
and
add
mov
shrl
mov
call
add
mov
xor
pop
sub
push
nop
loop
orb
addr16
mov
call
cli
jbe
add
or
xchg
popl
dec
enter
out
lock
adc
and
je
add
add
adc
dec
enter
jae
mov
inc
cmpsl
xor
mov
lcall
jns
fcmovnbe
enter
or
leave
inc
jl
arpl
adc
sbb
inc
stc
and
shl
sbb
fs
in
push
mov
xor
sub
mov
cmp
les
mov
add
ds
and
mov
pusha
add
fsubrs
movlps
fnsetpm(287
enter
inc
sub
push
lcall
push
ja
or
fsubs
jo
add
rolb
push
cmc
push
pop
mov
mov
jp
dec
pop
mov
enter
js
leave
pop
mov
add
shl
xor
sub
sbb
faddl
ret
and
xor
or
jmp
outsl
add
jo
imul
sarl
xor
push
and
pop
mov
sbb
pop
and
dec
enter
adc
test
stos
or
cmp
push
fiaddl
cmpsl
sbb
jb
rorb
cs
shl
push
cmp
mov
xor
adc
lret
and
xchg
jle
sbb
adc
hlt
xor
test
test
loop
shrl
sub
push
jl
pop
jmp
fldenv
test
add
push
inc
in
sbbb
push
mov
ljmp
pusha
nop
add
mov
mov
jno
fisubl
test
shlb
mov
jmp
mov
adcb
adc
add
je
cltd
das
stos
lock
add
sar
flds
inc
popf
or
inc
out
adc
mov
es
dec
ret
mov
lods
movntps
loopne
insl
ret
sar
test
pop
sbb
push
or
xorb
sbb
or
or
or
arpl
cwtl
sub
and
sub
fs
cwtl
lcall
pop
mov
push
xchg
imul
gs
enter
imul
add
sbb
cltd
xor
adc
jbe
jmp
adc
jno
icebp
mov
sbb
mov
aad
mov
add
or
test
pop
mov
add
stc
insl
shl
fisubs
lcall
insb
push
push
xor
rol
cmp
cwtl
pop
cmc
dec
adc
or
test
adc
fsub
and
stc
xchg
jnp
and
insl
mov
fbstp
adc
test
add
inc
jg
rorb
movsb
mov
mov
pop
mov
adc
cmp
std
dec
add
test
in
and
adc
adc
addl
add
xor
add
stos
pop
fmuls
push
daa
test
adc
fnstenv
cmp
fcoml
sbb
andb
add
test
jb
pushf
lock
movsb
rorb
fsts
mov
inc
movsb
push
jb
dec
xor
add
pop
push
cli
outsb
mov
jno
sbb
xchg
fiaddl
rdmsr
pop
dec
mov
cmp
movsb
mov
sbb
mov
jno
imul
xlat
loop
popa
dec
fs
or
sbb
xchg
addl
nop
in
andb
aam
push
dec
les
add
js
or
push
es
pop
enter
bound
ficompl
mov
shrb
dec
ljmp
cmp
stos
adc
aam
stos
scas
sub
vpmulhrsw
in
add
jnp
in
mov
adc
sub
movsl
sbb
movsb
bnd
imul
fisubl
shll
jmp
rcr
push
pop
inc
and
pop
jno
push
stc
and
mov
xor
aam
sub
shr
jmp
stos
or
test
cmp
add
lock
inc
rcrl
xor
enter
js
cli
rolb
jbe
lahf
jmp
and
popf
pop
or
xchg
lds
add
push
sub
or
sub
idivb
mov
mov
pusha
cmpsb
sbb
xor
mov
add
cmc
adc
and
iret
movsb
jmp
pop
fwait
sub
enter
inc
xor
xchg
dec
pop
in
cltd
cmp
pop
xor
push
sbb
mov
les
ljmp
lret
cmp
and
mov
or
test
fstl
xor
pop
cmp
xchg
nop
flds
loope
add
daa
stos
in
dec
dec
out
lret
mov
leave
hlt
mov
rorb
call
add
cmp
xor
cmp
inc
add
jne
js
push
lret
push
sub
xor
sub
cld
xor
or
xor
add
hlt
add
mov
pop
ret
or
aas
or
call
jae
or
jmp
movsl
mov
xor
and
nop
mov
and
add
int3
adcl
and
adc
or
mov
ss
arpl
or
faddl
test
pusha
lret
pushl
add
sbb
cmovge
inc
add
adc
add
pop
cmp
iret
ss
mov
out
andb
xor
dec
clc
in
cmp
lock
push
std
stos
adc
test
pusha
xor
inc
mov
add
mov
sbb
push
insb
add
mov
jmp
jnp
sub
or
hlt
pushf
or
pop
and
add
mov
mov
lds
pop
fiadds
jo
popa
dec
adc
pop
icebp
mov
add
add
sarb
adc
xlat
add
and
shll
rolb
cltd
test
insl
ret
cmp
add
mov
or
popa
xchg
push
imul
fcoms
sbb
mov
sbb
ret
sbb
das
add
movsl
jle
or
or
cmp
xchg
add
pop
in
add
mov
js
inc
das
out
push
sbb
xor
pop
mov
push
add
test
sub
adc
dec
inc
int3
cltd
mov
ret
loopne
mov
mov
push
adc
divb
rcrl
xchg
mov
sbb
lock
pop
test
ret
and
cmpsb
cmp
test
xorb
test
dec
pop
dec
mov
xor
mov
arpl
xorb
fmuls
cld
mov
push
mov
cmp
aaa
in
js
add
dec
lds
inc
jo
xchg
sbb
sbb
outsb
xlat
add
fstpl
jl
inc
jle
int3
jmp
mov
fnstenv
mov
xor
mov
out
cmpsl
add
or
movsb
fldl
mov
xor
push
enter
sub
inc
mov
mov
xchg
dec
and
daa
jns
push
xorb
cmp
sub
in
repnz
mov
xchg
sub
xor
sbb
insl
aad
stos
ja
inc
dec
pop
out
fptan
or
jecxz
rorb
es
mov
sbb
adc
ja
or
push
in
into
add
sub
sub
movsb
inc
xor
inc
dec
adc
dec
pop
lods
cmpb
inc
jp,pt
cmc
add
enter
aas
aad
cmp
pop
movb
jns
lock
ja
adc
add
test
mov
fcoms
sub
pushf
frstor
inc
and
xchg
jae
push
jg
dec
cltd
imul
dec
sbb
nop
addb
mov
fistl
mov
xor
push
xor
jae
andb
xor
xor
inc
lods
add
pop
push
jp
call
or
adc
xor
es
mov
inc
cwtl
mov
jno
movsl
xor
loopne,pn
mov
arpl
xor
push
or
hlt
mov
ljmp
sbb
pop
arpl
insb
adc
rclb
push
mov
sub
push
lfs
sbb
mov
test
cli
xchg
xor
pop
adc
stos
adc
pusha
sub
mov
mov
adc
xchg
push
sub
pop
bound
inc
pop
add
or
roll
movhps
jb
add
stc
repnz
cmpb
add
or
adc
jns
sbb
fnsave
xchg
scas
fnstcw
add
ret
mov
add
imul
pusha
xor
lahf
jge
fisubs
add
loopne
je
stos
xchg
fcomps
or
nop
test
pop
sbb
rcr
decl
jne
dec
jo
hlt
add
or
rorb
add
lret
jae
cmp
add
ljmp
fmull
jo
dec
lock
leave
enter
adc
xchg
xorb
dec
adc
adc
test
mov
repnz
inc
test
jg
dec
sub
cmp
and
pop
and
dec
mov
vphsubwd
adc
add
cmpsb
pop
xchg
jno
pusha
arpl
fwait
pop
das
sub
mov
xor
mov
inc
adc
xorl
cltd
test
sbb
jge
mov
lock
popf
xchg
outsb
daa
sbb
pop
insb
adc
subb
sti
mov
jne
jmp
mov
or
sbb
or
push
dec
cmpsb
add
shlb
or
fsubrl
sbb
pop
add
fbstp
add
aaa
and
frstpm(287
or
fwait
dec
push
sub
pushl
int3
dec
xchg
inc
lcall
jmp
call
test
add
pop
fs
inc
add
or
jp
and
add
jle
cmp
add
in
insb
add
sbb
mov
cwtl
mov
movsb
sub
pusha
insl
mov
adc
movsl
mov
test
xchg
adc
shll
xor
mov
aam
xchg
lahf
dec
xchg
scas
orl
mov
xchg
lahf
repz
add
test
add
lock
imul
mov
movsb
add
addr16
fsubp
sbb
pop
in
xor
mov
clc
aam
dec
sbb
dec
idivl
jnp
sub
addl
subb
adc
mov
mov
mov
loopne
dec
pop
mov
xor
sahf
nop
mov
jl
cmp
sub
push
cld
in
pop
adc
push
adc
inc
xchg
sbb
jno
xchg
fcoml
add
sbb
test
xor
or
jo
iret
rorb
add
adc
cmp
or
js
in
xchg
and
out
int3
sbb
fmuls
js
add
xor
adc
sub
mov
subl
adc
inc
mov
xor
xchg
sub
lret
sbb
iret
and
shll
mov
sbbb
jne
fists
cmp
xchg
push
lcall
dec
nop
repnz
dec
cs
mov
add
fmul
mov
fistpl
xchg
xor
inc
in
das
imul
xor
and
call
add
xchg
data16
out
stos
jbe
icebp
inc
call
movsb
inc
xchg
and
inc
sub
call
add
movsb
add
out
enter
xchg
mov
mov
addb
fistpl
and
and
cwtl
sbb
push
adcb
dec
mov
iret
js
add
sub
adc
call
sub
shrl
add
aad
add
les
xor
je
cmpsl
aam
adc
add
pop
notl
jl
sub
inc
mov
sub
jno
in
int3
in
in
push
insb
add
xor
inc
push
xor
nop
pop
clc
js
scas
in
adc
push
test
lahf
cmpsl
sub
push
or
leave
or
sbb
pusha
fildl
fstpl
lcall
sarb
sti
inc
orl
xor
dec
and
dec
sub
insb
adc
jns
push
jno
sbb
cmp
jp
addl
push
fistl
mov
and
xor
cmp
add
add
and
mov
cmp
mov
clc
rolb
rcrb
nop
mov
mov
inc
sbb
inc
je
fstpl
xor
pushf
addb
loope
popf
das
movsb
loop
pop
dec
addb
inc
dec
xor
xor
fiaddl
dec
mov
loopne
xor
cmp
dec
mov
aad
adc
int3
icebp
fs
nop
inc
in
sub
or
stos
add
movsl
lock
mov
add
mov
ret
aam
inc
mov
add
out
les
aam
ds
cmp
jmp
sbb
add
xchg
add
xor
push
jo,pn
pop
mov
jnp
xor
xor
test
ss
inc
pop
leave
insb
or
xchg
cmp
jnp
test
mov
xor
dec
adcb
jae
mov
add
std
pop
in
lret
jl
shlb
inc
cwtl
push
adc
sub
in
and
fcompl
and
sub
sahf
sbb
cmp
push
xchg
cltd
in
push
dec
lock
loop
pop
mov
inc
fmuls
and
outsl
mov
ljmp
jne
pop
add
scas
mov
or
iret
xor
sbb
add
sbb
cli
fisttps
nop
dec
inc
outsl
popa
add
jns
add
mov
pop
bound
add
cld
shll
stos
add
mov
loop
fsubs
cwtl
mov
incl
pop
push
cmp
lods
stc
dec
xor
pop
mov
aam
cmp
mov
sti
mov
je
adc
adc
push
and
cmp
adc
mov
add
hlt
movsb
or
sahf
jmp
add
jnp
jnp
sub
shl
add
icebp
loop
mov
or
clc
test
or
adc
jg
mov
lcall
int3
sahf
jne
mov
push
in
mov
push
shl
mov
data16
addr16
fisttps
mov
and
loopne
sub
add
stos
in
sbbb
push
push
imulb
icebp
and
mov
ret
es
add
movsl
popa
xchg
xchg
pop
cmp
out
shlb
add
push
out
jecxz
stos
stos
mulb
push
or
cmp
sub
hlt
and
mov
mov
xchg
pop
xor
add
cmp
mov
cltd
mov
xor
add
jnp
pusha
adc
popa
iret
add
loope
add
ret
mov
shr
jb
add
incl
add
test
sbb
popf
push
push
movsb
cmpsb
add
dec
xor
dec
ret
cld
add
xor
and
addr16
dec
push
enter
jo
icebp
add
pushf
lcall
sub
xor
xchg
dec
jmp
inc
mov
and
cmp
push
adc
test
or
xchg
xchg
andps
mov
scas
popl
sbb
jmp
cmp
xchg
stos
aam
push
pop
push
add
pop
icebp
scas
mov
cmp
sbb
lret
add
push
cli
pop
jecxz
je
mov
test
pusha
push
pop
inc
hlt
out
push
mov
mov
push
rorb
sub
sub
loope
sub
push
add
xor
inc
cmp
and
stos
mov
out
xchg
add
mov
sahf
fmull
addr16
adc
and
push
clc
ret
lea
mov
dec
fistpl
insb
aas
add
cmpsl
imul
add
addl
pop
repnz
add
sti
jnp
inc
inc
fisubl
cwtl
mov
lock
shlb
ljmp
push
mov
test
jnp
adc
movsl
xchg
add
ss
in
cmp
das
fidivs
add
rorl
cli
icebp
nop
mov
and
stos
les
add
sub
adc
add
movsb
ja
or
adc
mov
or
xor
add
push
push
adc
gs
iret
add
add
mov
adc
xlat
es
aam
inc
add
add
lea
pop
cmp
mov
jle
fnstsw
xor
movsb
fsubrl
dec
jne,pt
xor
push
mov
adc
rclb
push
mov
out
aam
popa
inc
add
test
mulb
jnp
sbbb
add
mov
test
inc
xor
fidivrs
xchg
push
inc
call
cmp
addl
and
or
xchg
lret
mov
mov
jmp
outsb
les
lock
subb
js
loopne
fadds
iret
aam
mov
push
adc
mov
mov
add
adc
add
xchg
xlat
lods
jnp
pop
sbb
imul
lock
push
ret
jne
or
mov
cwtl
push
dec
add
test
icebp
ss
pushf
dec
sub
xchg
push
pop
inc
add
hlt
das
lock
pop
nop
lods
clc
cmp
add
xchg
xchg
js
inc
pop
filds
pop
or
mov
or
imul
test
int3
xor
pop
dec
stos
popa
mov
pop
fists
add
popl
add
mov
cwtl
sbbb
add
movb
roll
mov
add
movsl
jmp
rolb
loop
xchg
jmp
xor
lds
addr16
add
outsl
jmp
lcall
jnp
lds
add
and
adc
dec
lods
sbb
xchg
iret
pop
push
out
aas
aam
add
or
jo
das
push
add
jno
push
add
adc
pop
add
inc
pop
or
inc
add
repnz
lea
sbb
aaa
sub
roll
test
popf
or
lret
jp
mov
outsl
mov
xor
add
push
mov
out
and
push
incb
xor
ficoml
imul
push
push
mov
fwait
or
adc
lds
cld
pop
pop
imul
adcb
add
xchg
jl
test
adc
cmp
lahf
dec
dec
data16
shr
mov
jp
push
xchg
arpl
out
add
or
inc
xchg
sbb
mov
clc
nop
xor
out
sbb
cmc
fsubl
inc
or
mov
hlt
adc
cmp
cmpsb
pop
xchg
pop
xchg
lcall
lock
hlt
xlat
incb
in
push
add
cmpsl
dec
mov
cmc
lock
les
jp
adc
adc
movsl
inc
pop
mov
sbbb
nop
mov
sub
jo
das
rolb
and
mov
cmp
mov
add
decb
sub
fstl
add
and
adc
add
inc
dec
addr16
and
and
int3
dec
push
out
inc
lock
clc
test
xor
mov
push
mov
mov
js
es
pand
adc
in
ucomiss
adc
mov
roll
xor
andb
pop
add
push
inc
test
scas
add
mov
and
push
mov
cmp
outsb
roll
add
adc
mov
add
dec
sbb
dec
xchg
push
or
bound
sbb
or
sbb
call
filds
xchg
lcall
cmpl
or
hlt
aas
subb
lock
pop
xlat
add
out
std
shr
jmp
mov
loopne
push
jno
add
mov
jnp
add
notl
cmp
ret
dec
mov
dec
mov
test
add
sahf
in
loopne
scas
add
pop
cli
jo
pop
jge
dec
push
jo
adc
and
nop
mov
sbb
and
jb
sarl
sti
pop
xor
test
sbb
mov
pop
out
and
sub
sahf
xor
mov
stos
add
lods
push
shrb
sbb
mov
inc
iret
push
mov
cltd
xchg
sbb
loope
out
push
xor
pop
inc
cmp
dec
jns
loopne
std
cwtl
hlt
cmp
add
dec
test
js
add
adc
pop
in
shlb
test
add
movsl
jbe
sbb
push
cmp
addr16
push
shlb
or
mov
mov
cmp
imul
inc
cwtl
pop
fstpt
into
fdivs
imul
roll
cld
test
sub
testb
decl
scas
jl
or
add
mov
pop
push
mov
ljmpw
add
inc
mov
adc
pop
mov
mov
and
js
sbb
jge
add
in
pop
dec
push
out
in
add
xor
js
sub
sub
jae
jl
rcr
pop
add
repz
push
xchg
ret
loope
les
dec
in
in
add
mov
pop
ret
adc
push
in
dec
add
pop
enter
add
mov
adc
push
ss
addb
sub
xor
lds
lahf
inc
or
ret
ltr
aam
inc
push
in
xchg
lea
sbb
das
xor
leave
cmp
jmp
std
push
call
hlt
ljmp
dec
mov
mov
loope
xchg
enter
add
mov
dec
inc
xor
push
cli
mov
arpl
cmp
pusha
mov
add
popa
add
mov
mov
lahf
fwait
call
jmp
ljmp
and
mov
add
cmc
jle
out
add
ret
out
adc
rcrb
jge
cmpsl
inc
sbb
dec
out
push
adc
movsb
pop
adc
stc
add
les
cs
dec
sub
mov
push
jnp
add
pop
imul
test
hlt
data16
out
jecxz
xor
add
lcall
cltd
pop
jnp
add
xchg
add
ja
scas
pop
leave
shl
pop
gs
jmp
mov
scas
jb
sbb
add
insb
rorb
in
add
sti
filds
mov
add
jne
rorl
sahf
aad
shl
icebp
into
jl
js
lods
cmpsb
jne
ss
faddl
pop
inc
jnp
dec
cmp
jbe
and
je
insb
or
in
xchg
daa
lcall
mov
test
es
pop
adc
sub
arpl
jmp
jae
mov
dec
mov
add
nop
cmpsb
fstpl
sbbl
int3
lods
pop
adcb
add
add
mov
xchg
jg
imul
iret
stos
or
out
aam
or
inc
inc
add
adcl
mov
adc
xchg
jl
pusha
inc
outsb
sbb
pushf
jae
movsl
add
jnp
out
push
addb
loop
cmp
fiadds
out
hlt
fsts
into
or
addr16
add
rcll
mov
sbb
fldl2e
xchg
or
popl
push
cmp
push
xchg
inc
xor
popa
push
sahf
jne
imul
das
pop
incl
or
leave
xchg
xchg
test
test
sbb
data16
add
dec
lret
dec
mov
stos
addl
gs
ja
mov
fcompl
add
jmp
faddl
fisttps
call
or
adc
mov
cmp
cmp
cmp
sbb
fdivl
or
add
and
and
push
loope
ret
jo
push
inc
adc
and
data16
std
jns
sub
movsb
in
or
test
or
push
imul
fsubrs
ljmp
dec
arpl
mov
xorl
popf
jmp
push
cs
ss
pop
sbb
add
enter
add
jns
sbb
aaa
test
mov
cmp
xchg
lods
dec
jbe
scas
ljmp
adc
and
push
mov
cmpsl
xor
jae
lahf
mov
pop
add
mov
aam
repnz
mov
dec
jl
jnp
jmp
and
sti
pop
test
mov
enter
and
ret
cmp
pop
xor
imul
clc
pop
popa
push
add
pop
and
je
add
jecxz
dec
mov
sub
mov
aad
imul
add
nop
pop
les
movsl
mov
push
nop
dec
push
out
cmp
inc
out
rcr
outsb
bound
mov
pusha
mov
fldl
xchg
mov
pusha
popa
push
popf
mov
adc
pushf
mov
mov
sub
inc
popl
cmp
sbb
cwtl
add
outsb
push
aam
cli
pop
sub
inc
mov
iret
mov
hlt
fsubrs
add
inc
dec
jle
xor
imul
adc
stos
mov
ret
shlb
or
in
xor
dec
push
pop
sbb
cld
pop
add
int3
movsl
cmp
dec
xchg
ret
sbb
rcrl
in
lea
mov
cld
insb
sbb
leave
call
jno
adc
in
adc
jae
pop
cmpsl
movsl
inc
add
dec
scas
push
clc
push
insb
mov
pop
mov
xorb
dec
push
rorl
int3
xchg
mov
cmp
mov
repz
in
sbb
and
push
xchg
sbb
mov
outsl
cmp
int
mov
cmp
push
rorl
in
xor
scas
or
rolb
rorl
cmp
cwtl
aad
mov
xlat
sahf
data16
nop
push
out
sub
xor
popa
in
inc
imul
add
cltd
or
add
loop
daa
add
fs
jle
sub
mov
and
nop
adc
dec
pop
or
inc
ror
fcoml
push
in
sbb
aas
push
fs
das
sub
scas
add
or
scas
imul
sub
jo
add
add
or
add
dec
clc
lods
aad
jb
das
pop
xchg
pusha
xchg
adc
cmp
mov
jns
inc
lret
push
repnz
inc
pusha
xchg
loop
std
int
or
shrb
cmp
shr
mov
xchg
inc
sbb
adc
into
mov
push
js
xchg
xchg
add
nop
mov
loopne
orb
lret
jle
xor
mov
int
and
cli
mov
lods
ss
rcrb
adc
mov
sbb
rorb
add
sbb
sub
sar
jge
add
andl
add
fisubs
jne
lods
pop
leave
sub
sarl
fdivrs
add
sarb
cmpsl
lret
out
incl
lods
xlat
aad
mov
adc
jae
adc
mov
xlat
push
xchg
shlb
imul
cmp
ja
add
idivb
sahf
adc
int3
add
clc
adc
jge
mov
stos
popf
pop
inc
or
sub
sub
inc
sub
adc
pop
std
call
shl
mov
xchg
out
or
sarl
hlt
pop
cmpsb
and
adc
mov
add
rdmsr
dec
cli
mov
shlb
in
icebp
out
add
fcomps
pop
jno
in
fimuls
and
sbb
push
lods
inc
loop
xor
mov
inc
mov
add
mov
mov
addr16
or
mov
adc
shlb
jecxz
sbbb
xchg
push
mov
adc
jne
lahf
mov
adc
mov
mov
xor
xchg
jmp
xor
in
xchg
push
xchg
les
pop
add
sbb
jp
movsb
xchg
add
es
and
addb
mov
mov
stos
inc
sbb
dec
dec
add
std
push
xor
int
cmp
sbb
fs
push
push
or
mov
dec
or
add
lret
add
xor
sbb
cld
test
inc
in
or
pop
aaa
rolb
mov
in
dec
jo
lock
shrb
inc
movsb
fs
pusha
push
test
pop
dec
sub
add
adc
inc
test
mov
fimull
add
shlb
xchg
sub
shl
enter
xchg
lods
test
arpl
cmpsl
daa
sub
or
scas
popf
shlb
pop
hlt
frstor
push
cld
jns
sbb
xchg
dec
mov
das
int3
lock
push
mov
inc
test
push
add
inc
jo
cmp
rcrl
xchg
inc
insb
out
xchg
aam
ret
mov
jecxz
je
inc
insb
cmp
out
lcall
pop
sti
sub
adc
cld
mov
in
xchg
mov
mov
lods
sbb
xchg
pop
and
dec
lock
jo
inc
enter
add
lods
pop
push
xor
imul
test
sbb
decl
test
fisubs
dec
adc
adc
jno
push
mov
out
inc
in
cmp
cmp
mov
pop
cmp
out
clc
aam
mov
xor
sarl
ret
shrb
add
out
pop
or
mov
jge
mov
in
xor
push
dec
add
lahf
push
sbb
loope
adc
fcoms
adc
inc
cwtl
fnstsw
add
push
test
mov
cmp
clc
dec
mov
add
fsubl
sub
fsubs
les
inc
add
je
mov
xchg
add
push
adc
push
add
push
dec
nop
decl
push
cltd
and
and
shlb
es
sbbb
cmp
ret
imul
test
dec
inc
lea
leave
pop
orl
and
pop
js
jnp
mov
add
xchg
jp
pushf
sub
xor
xchg
fcom
data16
mov
xchg
movsl
fiadds
outsb
xor
xlat
xor
daa
xor
shlb
dec
daa
adc
push
in
mulps
xorb
pusha
call
int3
inc
and
les
pusha
scas
sub
adc
push
inc
mov
pop
ret
loop
adcl
int3
or
or
jb
mov
add
sbb
test
and
inc
sbb
int3
and
add
mov
mov
repz
cs
rorb
shrb
fidivs
lret
adc
push
pop
xor
inc
mov
cwtl
xor
push
mov
cmp
fisttpl
pop
sbb
nop
xchg
jnp
ja
pmaddwd
inc
xchg
and
add
cli
pop
mov
add
scas
rorb
add
cli
mov
mov
andb
scas
hlt
inc
movsl
orl
add
cmc
pop
cltd
inc
scas
ljmp
dec
jmp
xchg
push
fadd
add
popl
out
stc
pusha
lods
cmp
imul
pusha
mov
xchg
ret
jns
test
sar
jbe
pop
shlb
scas
pop
or
sbb
pop
lcall
shl
push
push
push
mov
and
movsb
test
mov
xor
cmpsb
add
add
fwait
ja
addr16
enter
mov
push
push
or
flds
mov
and
xor
dec
or
and
stos
xchg
adcb
add
and
xchg
arpl
xor
test
add
jecxz
shr
sbb
cmp
and
inc
inc
mov
mov
xchg
pop
sbb
and
dec
insl
lret
shr
mov
loop
mov
sbb
mov
adcb
add
iret
aaa
out
inc
dec
clc
inc
divb
xchg
sbb
push
adc
fwait
dec
push
rcrl
pop
dec
ret
and
fdivl
dec
push
movsl
or
push
lods
shlb
je
subb
add
or
and
adc
push
sub
dec
sbb
inc
xor
outsb
sbb
inc
xor
xchg
mov
mov
dec
sbb
in
xchg
loopne
add
push
jne
repnz
jno
mov
icebp
push
mov
sbb
jo
mov
je
dec
adc
xchg
dec
sbb
pop
andb
fildll
scas
jns
mov
mov
inc
ss
adc
or
jns
pop
xchg
int3
ret
stc
cmp
mov
add
add
outsb
xor
in
dec
movsl
and
in
mov
sbb
jle
sbb
push
add
je
addr16
or
stc
inc
scas
pop
js
xor
and
aam
push
or
ljmp
sub
dec
cmp
loopne
loope
je
add
jo
fdivl
fsubr
movsl
add
int3
js
add
or
jbe
pusha
mov
cmp
das
mov
je
and
outsb
ret
and
shrl
cltd
push
imul
loopne
sub
jo
or
sbb
sub
scas
add
fcompl
roll
scas
and
push
add
jb
rep
mov
ds
fsubs
and
push
sub
stos
fsubl
and
xor
bound
jp
xchg
adc
pop
inc
fcompl
test
mov
dec
jae
pop
fsubrs
dec
xor
and
sbb
cmpsb
mov
loopne
adc
push
and
mov
ds
cwtl
or
iret
push
insl
lods
add
xor
shlb
nop
out
xlat
lea
or
inc
sbb
add
and
mov
inc
das
test
add
xchg
sbb
sbb
sbb
add
jmp
int
test
lds
bound
xor
out
daa
jle
mov
inc
jo
sbb
shlb
xorl
imul
roll
nop
ret
incl
mov
and
or
fcoml
sbb
loop
lds
push
roll
pop
jno
jnp
out
jno
sbb
xor
or
dec
add
cltd
sbb
imul
mov
and
adc
dec
xor
loop
mov
cmp
adc
add
mov
jnp
sbb
jns
and
jo
adc
push
mov
jnp
add
xchg
inc
nop
and
int3
addr16
xor
sbb
or
sbb
stos
sbbb
and
mov
or
and
xchg
add
dec
xor
add
sbb
movsl
sub
and
mov
jge
insb
icebp
fnsave
ret
scas
add
daa
ret
les
jnp
cmp
loope
xor
pusha
test
es
lea
pusha
sarl
ja
xor
xchg
imul
lret
mov
sbb
jne
mov
lahf
cmp
js
add
cltd
xchg
push
ja
xor
lods
add
lret
add
mov
lods
cmp
xor
push
push
mov
pop
sub
adc
push
dec
pusha
je
sub
add
mov
add
jge
cmc
lods
or
push
pop
mov
inc
subl
cmpsb
test
in
aam
sbbl
sub
xor
in
and
pop
add
imulb
or
mov
orb
fs
sahf
aad
cld
mov
xchg
ja
sub
push
mov
adcb
mov
mov
in
push
adc
xor
mov
jmp
int
bound
or
push
mov
shrb
push
loop
mov
insb
cmpsb
in
nop
pop
rcll
dec
cwtl
cwtl
dec
pusha
mov
sbb
test
fsubl
add
pop
or
call
mov
xchg
xchg
les
lahf
fisttps
lds
dec
jae
sbb
inc
xchg
les
frstor
pop
nop
cmp
les
sub
call
addr16
sbb
lea
adc
mov
xchg
cwtl
repnz
or
stc
add
mov
add
leave
xchg
dec
in
xchg
and
mov
bound
outsl
js
jnp
mov
and
xchg
xor
push
inc
jne
enter
xchg
lahf
mov
add
xorb
inc
popf
sub
pop
icebp
ss
and
inc
push
push
pop
test
std
xor
dec
dec
inc
adc
cmpsb
cmc
nop
sbb
test
pusha
shlb
call
lret
and
mov
in
mov
xchg
pushw
pop
jne
jp
or
jl
inc
js
xchg
sub
push
test
mov
lahf
subb
ficoms
bound
and
dec
pop
mov
or
shrb
mov
js
mov
and
xchg
xor
mov
add
push
add
fbld
jl
rcrb
xor
cld
inc
test
and
dec
in
les
cwtl
sbb
ret
add
jp
jno
add
add
icebp
pushf
jb
cmp
and
xchg
or
inc
jnp
jbe
xchg
int
les
pop
jle
dec
and
inc
pop
loop
xor
pop
push
insb
leave
sbb
push
mov
jmp
int
cltd
lock
pop
cmpb
jmp
cli
push
addb
in
es
mov
push
inc
test
lds
and
mov
subb
mov
dec
pop
pop
addb
sbb
xchg
xchg
out
hlt
sahf
lahf
mov
bnd
in
popa
cbtw
lahf
loope
xchg
add
js
jae
jbe
add
fsubrs
pop
pop
mov
adc
cmc
add
cs
sub
xorl
subb
cwtl
shlb
mov
jns
or
add
cmpsb
inc
iret
call
loop
in
xor
or
and
cli
add
ret
push
cs
mov
and
dec
or
pop
lods
and
adc
add
xor
xchg
jg
adc
out
outsl
pop
hlt
sub
fwait
dec
push
xchg
cmp
orb
fldt
sbb
add
sbbb
dec
and
ret
dec
inc
xor
dec
test
in
cmpb
jmp
int
mov
add
mov
hlt
in
inc
adc
add
in
and
fidivs
pop
mov
cltd
inc
add
loope
sahf
adc
je
sbb
and
loop
mov
andl
mov
sub
inc
imul
adc
mov
and
mov
aam
nop
and
xorb
sub
dec
pop
cmpsb
out
shrb
and
mov
push
inc
mov
hlt
sbb
aaa
adc
adc
inc
push
mov
ja
lds
dec
hlt
add
imul
lret
lock
mov
adc
and
sub
or
push
addb
dec
bound
and
dec
push
lods
xchg
inc
sahf
cmp
addl
shll
std
sbb
out
insl
in
les
sbb
sub
add
add
iret
in
popa
shl
fmuls
in
pop
push
scas
fisttpll
loop
les
fnstenv
adc
pusha
iret
push
cmp
popa
xor
in
shll
sbb
orb
sahf
xor
adc
neg
mov
jl
pop
add
and
mov
mov
add
lds
adc
lods
or
push
inc
stc
int
sti
lahf
dec
fdiv
inc
rcr
imulb
test
xchg
and
inc
adc
mov
pusha
inc
adc
and
lcall
jbe
pop
sbb
enter
cmpsb
xor
mov
push
xor
xor
mov
or
cld
inc
push
mov
adc
mov
cmpsb
push
adc
or
addb
fadd
lds
jp
pop
add
add
pop
and
shlb
adcb
clc
add
repnz
sbb
push
mov
shrl
push
or
inc
mov
add
mov
shrb
loopne
cmpsl
aaa
nop
add
test
dec
xchg
loopne
pop
and
xchg
cmp
pusha
dec
dec
mov
out
lods
dec
nop
lret
xchg
add
andb
jge
shrb
ret
nop
adc
pop
dec
scas
out
inc
lcall
icebp
nop
adc
sbb
lock
movsl
adc
adc
add
adc
adc
push
nop
lahf
cwtl
je
adc
cld
adc
sbb
lock
and
lds
sbb
test
push
inc
jb
add
cmp
pop
mov
fsubl
adc
push
jecxz
mov
test
dec
inc
inc
fwait
inc
mov
adc
das
call
pop
pop
pop
cmpsb
out
rcl
inc
mov
in
pop
lret
or
pop
jp
ret
sub
add
icebp
pop
loop
inc
xor
or
popa
lock
cmp
cmp
iret
out
pmuludq
in
clc
mov
or
fwait
add
add
add
push
jle
pushf
and
dec
popa
cs
pop
inc
inc
push
mov
mov
mov
jae
pop
loop
test
mov
push
pusha
jecxz
push
xor
xor
sub
mov
jno
in
pop
shll
nop
sub
inc
push
sbbb
pop
mov
shll
sbb
enter
sbb
push
mov
adc
insl
addl
add
nop
sbb
pop
cmp
and
repnz
in
leave
push
in
call
adc
movsb
movsb
test
loopne
in
sbb
repz
int
pop
or
dec
shlb
dec
add
iret
sbb
std
dec
push
rcl
inc
pop
jmp
arpl
push
lea
sub
mov
pop
popa
cli
pusha
in
add
pop
jb
mov
sarl
dec
jg
mov
and
cmp
out
xor
push
in
int3
pushf
mov
pop
or
insb
es
or
sbb
test
dec
dec
inc
mov
imul
test
cs
or
add
lcall
cmpsb
adc
pop
jno
cld
enter
cwtl
inc
addl
ret
cmp
fmull
sbb
dec
jg
shrl
or
mov
nop
add
int
test
xor
sbb
pop
cmc
shlb
cmp
mov
adc
pop
cmp
adc
adcb
mov
insl
sub
push
cmp
daa
inc
jge
lock
nop
inc
mov
out
or
mov
std
jecxz
mov
rorl
repnz
inc
pop
hlt
jl
testl
into
inc
mov
cmp
jns
or
mov
and
or
push
dec
inc
loopne
cmp
mov
jb
jnp
dec
jae
fadds
add
xchg
bound
int
adc
add
push
add
loope
pushf
les
mov
lds
test
add
and
in
and
pop
aad
jno
dec
repz
and
pop
cwtl
insb
mov
lahf
xlat
push
add
dec
les
add
mov
insb
cmpsb
pop
test
pop
out
jb
in
rcrb
mov
mov
cmp
cltd
test
mov
cld
mov
stos
in
aam
fs
pop
add
out
xor
fistps
pop
sarl
call
push
mov
fwait
sub
andl
sub
sbb
sub
add
mov
mov
negb
cs
loop
add
bound
and
rorb
sbb
adc
scas
xchg
hlt
test
and
xchg
jb
pop
mov
ss
mov
pusha
dec
mov
cwtl
in
sbb
lock
insb
add
lret
mov
jmp
int
mov
add
jge
xchg
jle
jo
nop
adc
pop
inc
daa
xor
mov
mov
loopne
fdivrl
pusha
cli
mov
aas
add
sbb
jns
add
pop
aaa
xor
xchg
clc
aas
cld
testl
adc
dec
mov
mov
jo
mov
or
pusha
cld
and
outsb
and
inc
enter
nop
fadds
cmpsb
lods
sbb
mov
in
and
pop
mov
jb
add
gs
cli
mov
scas
pop
xor
test
lods
add
leave
in
pusha
fcoms
test
or
and
cmp
lret
add
add
sar
jno
sbb
jae
mov
sub
adc
dec
xchg
loopne
mov
push
les
cwtl
rcrb
xchg
inc
add
rclb
loop
sbb
and
in
add
inc
mov
sub
aas
andb
outsl
std
shl
push
loope
stos
and
mov
mov
push
popa
mov
loop
lock
repz
sub
add
mov
stos
sub
cmp
cmc
andl
add
orl
sub
insb
test
test
in
adc
sub
push
into
mov
aad
adc
pop
jge
add
shl
xchg
jns
mov
and
and
mov
mov
lcall
dec
lahf
jecxz
ret
sbbb
fldl
jo
or
dec
adc
sbb
hlt
inc
imul
push
sbb
es
fsubs
inc
std
pusha
test
xor
cmpb
clc
cmp
adc
adc
subb
lcall
jmp
idivb
add
fcoml
xchg
add
push
mov
pop
adc
insb
sbb
mov
in
xchg
dec
fwait
js
dec
arpl
push
stos
or
loope
jge
mov
sbb
repz
pusha
jo
sbb
inc
in
loope,pn
adc
add
pop
mov
dec
stos
cwtl
mov
jb
ds
fwait
push
add
sbb
cld
xchg
sub
mov
jo
dec
test
add
outsl
jp
adc
int3
out
adc
push
inc
mov
test
pushf
pushf
mov
and
int3
pop
adc
adc
sbb
mov
xor
dec
fcoml
mov
aad
inc
out
loopne
pop
out
jns
pop
add
jge
pusha
js
push
cmp
mov
sub
lret
cmp
arpl
sub
xlat
push
inc
push
mov
fadds
rcl
sti
insl
cmp
inc
inc
mov
lahf
ljmp
xlat
mov
xchg
incl
popa
adc
shl
fsubl
lock
jle
add
lods
iret
lret
dec
gs
aaa
pusha
cmpsl
push
lea
repnz
mov
roll
mov
add
add
pop
sti
dec
repz
jle
and
call
add
testl
aas
ret
outsb
scas
xchg
test
cmp
loopne
sbb
mov
adc
add
add
mov
into
or
push
rolb
add
je
pop
and
repnz
and
dec
lock
jae
add
fidivrl
inc
loope
icebp
cs
cmp
inc
int3
sub
push
int
cmp
leave
adc
mov
movsb
pushf
je
inc
inc
push
fcmovnb
sbb
adc
icebp
lods
sub
adc
dec
sub
js
lcall
inc
or
or
and
mov
icebp
and
push
mull
repz
in
jge
subb
mov
call
into
sbb
push
sarb
sbb
sbb
jg
push
push
push
insb
inc
cltd
lds
add
into
sub
lods
jl
ds
repnz
or
ja
nop
jmp
mov
inc
sbb
clc
nop
or
ret
incb
cmp
imul
fs
movsl
test
iret
incb
cmp
dec
cs
call
adc
sub
or
sub
pop
push
cmp
mov
nop
xor
dec
adc
sbb
andb
xchg
xor
call
icebp
mov
cmp
sahf
fcoml
and
mov
sub
xor
push
lods
mov
imul
mov
inc
xor
mov
push
daa
cwtl
loopne
in
in
fadds
mov
adc
imul
in
in
rolb
or
aas
push
scas
xor
lods
dec
add
in
sub
add
dec
cmpsb
adcb
adc
add
mov
dec
push
enter
mov
mov
dec
and
jmp
and
mov
mov
pop
mov
insb
fs
pusha
mov
lds
sub
inc
out
leave
cmp
add
mov
xor
jo
jno
add
cmpsl
xchg
dec
mov
roll
insl
and
adc
lock
lahf
jecxz
fmuls
mov
sbb
xor
fildll
add
or
cltd
dec
sbb
movsl
push
lahf
in
movsb
mov
xorb
inc
clc
or
mov
inc
push
xor
enter
add
jo
mov
nop
es
js
sbb
or
xor
cmp
and
add
int
cld
inc
xor
les
das
or
pop
sbb
les
jl
push
adc
hlt
movl
lahf
and
rcrl
or
xchg
movsb
mov
or
call
pop
add
pushf
mov
cmpsb
push
pusha
cli
fwait
add
mov
mov
leave
sbb
push
xchg
add
js
sbb
push
lret
data16
icebp
adc
sar
in
mov
in
scas
or
add
mov
adc
or
subl
fimull
cmp
jb
les
sbbb
mov
hlt
aas
data16
push
bound
sbb
push
or
lea
xor
add
les
inc
andb
in
jp
push
sub
sub
sbb
out
addl
mov
lock
rep
iret
in
pop
push
les
mov
mov
inc
mov
push
test
xor
adc
xlat
fldcw
scas
xor
fcmovnbe
xor
and
jl
and
movsl
adcb
mov
add
call
adc
sbb
xor
or
sahf
in
addl
lock
push
xchg
inc
xchg
and
sarl
mov
jle
cld
and
mov
pushf
shll
xor
xor
pop
sub
jo
loop
sbb
push
xchg
pop
hlt
adc
jnp
outsb
jg
add
das
cld
mov
call
add
int
inc
dec
nop
add
outsb
jb
sub
jo
mov
clc
pop
inc
cs
lret
in
dec
adc
add
aad
mov
cmp
out
mov
repz
mov
push
mov
lds
icebp
out
lock
push
test
jecxz
aam
xor
push
xchg
nop
lahf
xor
or
mov
int3
add
sbb
lods
dec
mov
mov
out
cmp
test
aas
or
sbb
push
lock
aad
add
flds
cld
arpl
pop
and
xor
and
call
adc
adc
mov
rcl
mov
enter
jle
pusha
loope
imul
sbb
clc
or
pop
add
iret
mov
sahf
add
lods
ljmp
sub
xor
insb
pop
pop
cmpl
pop
mov
sub
sub
dec
scas
popa
sbbb
dec
xorb
push
fcompl
pop
fwait
mov
and
push
cmc
in
insb
andb
pop
inc
sub
or
pop
push
mov
pusha
sub
int
shlb
cmp
push
mov
hlt
dec
push
and
xorb
or
clc
xchg
mov
in
jg
xorb
lds
pop
outsb
add
dec
loopne
sub
loope
lock
pusha
push
iret
push
lahf
and
dec
lock
les
pushf
mov
sbb
push
xor
inc
subb
mov
inc
xor
loope
loopne
push
cs
or
and
sub
add
sbb
mov
add
add
enter
mov
pushf
push
add
inc
and
popf
icebp
lds
and
sub
add
jmp
orl
dec
call
sub
fwait
add
int
mov
push
and
leave
sub
mov
js
in
mov
add
jnp
and
adc
cmp
mov
jl
pop
adc
mov
mov
adc
lock
inc
push
stc
push
push
fsub
dec
mov
or
dec
push
sbb
xchg
sub
and
stos
push
or
mov
mov
jno
xchg
sub
nop
adc
lea
fisttpll
add
add
sub
inc
loop
add
push
les
xor
ror
rcl
adc
and
lret
sbb
sub
insb
stos
lock
sbb
bswap
or
loope
jp
mov
inc
hlt
adc
jno
aas
mov
add
daa
mov
adc
mov
aam
and
clc
push
ds
xor
faddl
out
rcrl
lahf
adc
and
add
fsubl
cmp
mov
sarl
adc
bound
pop
push
ret
or
add
fsubrs
addr16
or
bound
add
lea
and
push
adc
clc
and
mov
ljmp
mov
and
mov
lock
xor
dec
inc
lcall
addr16
out
negb
and
repz
sub
loope
pop
adcb
cli
mov
and
fadds
add
pop
mov
arpl
repnz
jp
in
inc
nop
mov
sbb
sarl
dec
add
fstpl
sbb
pop
mov
mov
inc
and
add
out
sahf
xor
jecxz
xor
xchg
scas
and
jl
std
push
fldl
loope
subl
mov
cmp
fdivrl
ror
and
cmp
mov
les
sbb
sbb
ret
pusha
lret
pushf
dec
enter
adcb
dec
insb
movsl
xchg
xorb
jae
clc
or
sub
fs
sub
mov
or
dec
nop
je
in
fcomps
in
mov
mov
mov
mov
ljmp
and
pop
dec
push
and
inc
mov
popf
sbb
add
push
sbb
jbe
cmp
cmp
adc
add
jg
add
mov
jl
enter
jo
mov
mov
inc
xchg
inc
cmp
add
mov
lahf
mov
shrb
imul
scas
add
shl
outsl
testl
lahf
fnstenv
cltd
or
mov
movsl
mov
inc
add
hlt
xchg
pop
mov
and
mov
test
or
pop
in
push
je
mov
scas
jmp
cld
mov
inc
xchg
mov
pushf
cld
arpl
sar
or
subb
add
cmp
add
sub
ret
cld
cwtl
add
sbb
push
adc
rcrb
out
imul
and
dec
fsubrl
fcomps
xchg
adcb
xchg
xchg
jbe
cmp
pop
inc
in
mov
mov
nop
shl
inc
cmp
mov
jle
inc
dec
lock
shll
shr
mov
jmp
sbbb
pusha
cmc
mov
sbb
adcl
cmpsl
xor
into
pushf
enter
xor
pop
or
je
movsb
lahf
cmpb
idivb
stos
iret
inc
rcrb
std
pusha
mov
repnz
ljmp
xor
mov
test
lock
add
cmpl
push
icebp
pop
pop
int3
inc
inc
and
or
or
je
mov
sub
imul
sub
sub
and
push
cs
mov
dec
dec
je
mov
and
fidivrl
xchg
or
inc
bound
sub
mov
pop
mov
xchg
insl
addb
xchg
jo
add
inc
fwait
sbbb
cld
mov
jge
jge
loop
fnstenv
push
sub
and
xchg
movb
rolb
sub
leave
fsubrs
ljmp
add
fildll
sub
adc
test
xor
movsb
cmp
clc
pop
pusha
adc
fwait
push
out
adc
sar
sti
mov
cltd
xor
rolb
adc
mov
cmp
sub
test
jmp
out
sahf
xchg
sub
jo
punpckhbw
dec
mov
test
call
subb
scas
adc
pop
popl
mov
daa
andl
mov
inc
in
pop
call
add
adc
and
pusha
icebp
adc
xchg
add
testl
add
push
xchg
movsl
xor
adc
add
add
dec
push
scas
stc
lods
clts
cltd
loop
jmp
in
xchg
adc
and
mov
sub
or
mov
push
adcb
ds
inc
pop
or
fwait
pop
xor
pop
inc
jge
and
push
mov
enter
out
jge
sbb
or
stos
xchg
in
popf
sub
shrb
popa
mov
add
cmp
push
xlat
mov
sbb
push
jno
sbb
xor
sub
add
stos
sahf
mov
mov
mov
sbb
das
or
test
stos
xchg
pop
aaa
lods
or
fwait
loopne
fnstcw
lahf
es
xchg
jmp
cmp
mov
pusha
bound
cltd
mov
push
out
and
into
inc
add
sub
rdtsc
fcomps
or
fldl
push
pop
loope
mov
inc
cli
mov
pop
xlat
movsl
jg
inc
pusha
scas
ja
push
sbb
call
add
testb
test
sub
ljmp
pop
fimuls
rorb
push
mov
adc
rolb
sub
adc
xchg
xchg
sarl
and
jp
pop
push
push
mov
xorb
popa
push
jmp
inc
inc
and
das
subl
stc
dec
push
fisttpl
jp
and
leave
inc
pusha
add
add
mov
popa
cwtl
out
pop
das
push
pusha
or
lea
popf
inc
arpl
roll
mov
sub
xorb
pop
pop
jbe
mov
aam
adc
rcrl
pop
insl
outsl
fdivl
loopne
jmp
mov
add
icebp
inc
and
sub
mov
adc
xchg
dec
out
sbb
or
xchg
mov
sbb
ja
xchg
jl
icebp
mov
xor
nop
jo
das
mov
jb
or
lea
add
bound
cld
mov
clc
add
out
ficompl
loope
js
mov
fildl
into
dec
and
pop
stos
lcall
out
imul
jle
mov
jnp
shrl
mov
adc
jmp
mov
xor
pusha
mov
stos
mov
orb
pop
jmp
lds
add
rorb
je
cmpsb
leave
repz
into
jae
sbb
inc
dec
mov
adc
push
xor
and
dec
pop
dec
lea
and
je
sbb
mov
rclb
xor
adc
scas
push
add
pop
adc
pop
mov
ret
dec
add
and
push
sarb
jl
jne
cmp
or
jo
cmpsb
rcl
es
pusha
mov
cmc
adc
out
or
aad
push
xchg
add
cmpsb
btsl
xchg
add
mov
or
sub
in
add
and
arpl
mov
xor
mov
scas
orb
fidivrs
pop
inc
mov
pop
out
jo
lcall
in
es
lock
loope
add
rorl
push
jmp
cli
cmp
enter
mov
mov
sar
lret
push
mov
jnp
cmc
xchg
add
pop
je
lcall
addl
sbb
call
xor
mul
out
cmpsb
add
lea
fsubr
divb
lret
dec
testl
mov
repnz
push
jl
mov
pop
rorl
mov
sub
gs
arpl
lahf
daa
sbb
loope
push
cmp
shll
xlat
pop
out
pop
mov
pop
jo
lods
add
outsb
pop
into
inc
sub
sub
gs
xor
in
push
adc
push
mov
stc
and
push
adc
sub
inc
jge
sbbb
add
mov
lret
or
imul
jae
xchg
ljmp
push
pop
xor
dec
push
sbb
sbb
jae
push
popa
adc
mov
fs
andl
test
shrb
add
scas
nop
or
popf
insl
xor
pusha
pusha
mov
mov
mov
rol
jmp
xor
out
cmp
mov
in
popf
cmp
pop
rorb
out
mov
lea
add
xchg
arpl
stos
jg
pop
xor
lods
nop
stos
aad
or
jle
test
xlat
fidivrs
or
out
in
jo
ret
cmp
cs
imul
in
enter
lds
in
in
fldenv
sahf
nop
pop
cli
mov
outsb
cmp
sub
mov
jmp
stc
add
cmp
add
jmp
cli
pusha
ljmp
cmp
and
inc
pop
push
jp
sbb
add
and
ja
sbb
pop
sahf
pop
iret
push
add
lret
or
int3
imul
mov
xchg
das
clc
jmp
push
lcall
mov
jle
cltd
mov
adc
adc
push
popf
mov
push
addb
cmp
pop
lods
nop
insl
sub
push
pop
pop
rolb
adc
cwtl
pop
jle
add
in
es
adc
add
shrb
sub
mov
shr
ja
inc
push
pop
mov
arpl
mov
jle
xchg
jns
sub
mov
inc
pop
rolb
pop
cmpsl
pusha
call
mov
iret
jno
push
jge
jl
xor
inc
test
call
mov
jne
shlb
loope
das
cmp
rcrl
dec
and
inc
mov
popa
jmp
adc
adc
pop
int
in
arpl
rolb
pop
pop
mov
imul
xchg
loopne
rorb
adc
add
aaa
mov
adcl
movl
xor
xchg
cmp
xor
mov
jge
mov
dec
incb
mov
push
xchg
bound
out
dec
xchg
rorb
pop
mov
ja
mov
inc
dec
jmp
rcll
sub
dec
sahf
xor
mov
not
loopne
sub
add
shl
mov
repnz
mov
dec
pop
push
ret
add
cmc
mov
test
push
inc
or
shr
dec
icebp
mov
movsl
nop
sub
inc
add
jno
shrl
repnz
jo
pop
push
xor
pop
dec
push
push
cmc
test
push
pop
lods
in
dec
lds
xor
fwait
arpl
mov
test
inc
push
sar
mov
rcrl
je
sahf
mov
adc
xor
add
jmp
mov
or
cwtl
push
aam
pop
out
pop
in
stc
pop
outsb
pop
add
out
divl
jmp
in
add
out
sbb
mov
fxch
imul
out
out
mov
mov
jg
loopne
sbb
jmp
fmull
mov
lcall
push
addl
dec
jmp
sbb
push
add
insb
out
test
orl
test
cmc
fwait
push
ret
pop
jmp
pop
fwait
sub
int3
dec
mov
xchg
and
push
mov
leave
cmp
ret
add
jae
stos
mov
xor
imul
or
sbb
and
mov
pop
pusha
and
fdivs
cmp
or
cwtl
into
mov
push
pop
popa
xor
sub
mov
dec
and
xchg
jbe
jo
sbbb
arpl
out
aaa
or
mov
mov
add
test
cmp
leave
add
mov
inc
popf
test
add
jno
sub
add
jmp
subb
les
or
loop
je
les
lods
dec
cmp
cld
or
pop
add
mov
hlt
clc
dec
std
add
sbb
movl
ja
int
add
cmp
repnz
dec
stc
adc
lods
scas
loop
test
dec
daa
pop
insl
inc
sbb
mov
pop
pop
sub
xchg
mov
push
xor
stos
movb
mov
sbb
mov
push
pop
lock
loopne
add
inc
and
and
int
pusha
dec
sub
bound
sub
add
fldl
mov
outsl
nop
add
hlt
mov
out
cmp
lea
cmc
stos
popa
lock
sub
sbb
jae
mov
sub
nop
in
mov
xchg
mov
outsb
sbb
repz
or
aas
sub
jl
outsb
sub
inc
call
add
call
dec
jmp
int3
mov
xchg
daa
nop
test
mov
stos
rol
scas
mull
cmp
in
icebp
int
ret
push
cmpsl
dec
sub
sub
jge
xor
push
jno
lock
xchg
leave
xchg
aam
popa
push
cmp
dec
and
popa
shr
popf
pop
xchg
sbb
dec
sub
rorb
call
add
push
insl
das
mov
sub
xchg
pop
and
in
xor
sarb
mov
outsb
aas
add
je
test
add
ja
psubw
xlat
loopne
add
sub
jns
popa
loop
and
js
pusha
jo
adc
jno
and
sub
int
rolb
mov
sbb
mov
dec
inc
sub
mov
sbb
mov
push
cli
cmpsl
cmp
dec
jmp
faddl
loop
xor
dec
les
insb
push
lret
xchg
int
ss
iret
and
add
cmpsl
jmp
data16
cli
and
xor
mov
jle
fsubrs
mov
or
repz
or
flds
hlt
add
fs
sti
or
pop
or
pop
mov
ror
xor
pusha
aam
sub
inc
es
pop
ret
sub
jbe
mov
and
scas
mov
adc
mov
adc
stos
jecxz
sub
and
xchg
pop
mov
push
nop
mov
loop
aad
sbb
nop
dec
and
add
mov
in
add
mov
test
and
dec
jg
sahf
pop
push
xchg
maskmovq
testl
cli
jae
dec
inc
adc
adc
pusha
xor
adc
loop
mov
xor
pop
lcall
mov
push
or
in
cmp
add
cmc
test
or
lods
mov
adc
test
mov
push
or
call
xchg
mov
add
in
or
and
sbb
jg
imul
inc
mov
jl
aam
push
adc
pop
sbb
xor
cmp
inc
push
mov
aad
mov
loopne
daa
or
mov
sub
cwtl
ret
xchg
loop
les
loope
mov
in
adc
ja
push
rorb
push
ficomps
cltd
or
lret
ljmp
call
subl
xor
mov
cmp
xor
loope
mov
rol
cmpsb
in
pop
out
push
xor
cli
pop
sar
lret
mov
sbb
add
sub
fwait
loope
out
adc
test
lcall
jo
ljmp
push
cmp
inc
or
mov
icebp
inc
decl
xor
or
imul
add
mov
int3
out
push
lock
jg
or
dec
and
popf
daa
pop
adc
add
es
clc
pusha
mov
xor
xchg
inc
pop
jmp
sbb
iret
out
shrl
xchg
cld
jns
and
inc
mov
setp
insb
lahf
jae
mov
popf
or
mov
push
cmp
dec
rcrb
je
pop
mov
adc
jmp
aas
das
orb
fwait
clc
ja
pop
mov
pop
movl
xor
adc
sbb
add
inc
fildll
sub
xlat
cli
jne
lea
lds
mov
jmp
fdivrs
push
mov
inc
negb
rcl
ja
icebp
es
mov
inc
mov
mov
cwtl
xchg
mov
mov
pop
aaa
add
mov
xor
push
ffreep
add
push
mov
xor
popa
pop
push
push
jg
test
icebp
jmp
mov
mov
mov
inc
lock
clc
pop
push
imul
mov
shll
jge
je
cmpsb
cmc
adc
lods
pop
add
faddl
in
push
mov
add
bound
sub
inc
test
add
cmp
data16
pusha
cmp
and
outsb
sub
nop
jecxz
cmp
mov
push
cld
mov
pushf
aam
movb
mov
jg
add
sti
add
and
leave
sarb
ficomps
pop
mov
daa
insl
push
rorb
pop
push
push
cmpsl
mov
and
push
xchg
stos
lock
sub
sbb
sub
adc
dec
ror
adcb
inc
push
pop
loop
add
cmc
daa
adc
sbbb
dec
std
adc
cs
push
sbb
and
popa
add
sbb
cmp
pusha
mov
xor
mov
xor
sbb
int
dec
lret
iret
out
adc
cmp
add
inc
pop
xchg
je
xchg
test
add
add
inc
in
aam
mov
lcall
arpl
adc
mov
push
mov
dec
fsts
sbb
jae
cwtl
in
inc
sbb
cmp
inc
push
inc
mov
js
mov
add
dec
mov
or
lods
pop
mov
or
dec
addl
mov
pop
pushw
add
sub
mov
dec
loope
outsl
negl
call
or
fiadds
rcrl
add
fildl
nop
out
and
push
inc
mov
jmp
dec
mov
sbb
mov
mov
aaa
icebp
or
es
push
lods
cmp
mov
pop
repz
mov
xchg
push
xor
fisttpl
addb
je
out
mov
jo
imul
insb
sub
jg
jnp
mov
sbb
jmp
push
adc
cmp
adc
lcallw
add
lods
mov
inc
in
popa
imull
inc
and
add
ret
sub
dec
pushf
orb
adc
sub
mov
add
push
mov
shlb
cmp
inc
mov
pop
mov
mov
fdivrl
xor
fnstenv
leave
cli
mov
push
xchg
lods
jp
inc
or
js
rcll
fistpl
andb
mov
loope
xor
icebp
jp
or
negb
imul
pop
iret
cmp
stc
data16
or
outsb
clc
rorb
mov
aam
cmp
movsl
rorl
shlb
cltd
or
pop
fidivl
push
cmpb
add
sub
jp
sub
sbb
cmp
jns
mov
rcr
fst
inc
add
nop
pop
push
inc
shr
adc
jo
arpl
pop
ret
in
pop
cmp
test
cmpsb
or
mov
mov
dec
add
aas
xchg
pop
mov
sarb
sbb
imul
pop
hlt
xor
push
scas
test
sub
int
movsl
notb
push
xchg
loope
push
insb
mov
or
jmp
into
add
iret
outsl
cs
xor
mov
nop
push
mov
push
outsl
out
loope
push
in
insb
mov
cmpsl
xchg
push
test
add
movsb
or
adc
hlt
scas
je
mov
loope
imul
add
or
lea
lcall
jmp
and
aaa
lods
mov
add
into
jb
pop
pop
outsb
xchg
cwtl
add
cmc
dec
adc
jecxz
fdivp
lods
mov
add
jb
mov
sahf
jo
and
call
pop
xor
pop
mov
rol
push
sub
cmp
mov
movb
out
push
add
xor
adc
mov
imul
jbe
lds
jb
imul
pop
inc
push
cwtl
cs
ss
and
inc
push
es
jno
cmp
cltd
bound
js
sub
cmc
add
sub
add
aad
ret
cmp
mov
mov
pop
push
outsl
aad
lods
int3
adc
cmpsb
adc
sub
sub
sbb
lret
addr16
sbb
insb
inc
xchg
jae
mov
popa
pushf
cmpb
lds
test
test
jnp
loope
and
or
imul
mov
inc
inc
aas
or
std
add
pop
add
jo
scas
lock
lods
std
sub
fadds
xor
and
jecxz
loop
pop
add
aad
sbb
or
test
mov
pusha
xor
xor
aas
jnp
popa
in
popa
mov
push
pusha
ss
cmp
outsl
aas
add
popf
imul
xor
mov
int
ss
push
inc
jecxz
sbb
add
leave
sbb
push
icebp
cmp
imulb
mov
lock
loope
sbb
outsb
add
lds
xchg
enter
cmpsb
mov
or
jp
mov
stos
lock
push
loope
inc
outsl
out
and
aaa
mov
mov
sub
push
inc
push
adc
add
sub
inc
ljmp
jbe
int3
mov
and
aaa
clc
add
int3
mov
stos
sub
stc
push
add
stos
mov
icebp
mov
and
push
xchg
lods
dec
gs
adc
cld
stos
aam
mov
jno
inc
enter
sub
inc
sbb
jp
or
in
add
sub
sub
cmp
mov
out
pop
je
inc
insl
adc
call
lea
test
or
inc
pop
rorb
jle
push
add
mov
cli
jp
andb
jne
int
pop
aam
lea
mov
adc
add
sub
icebp
add
mov
inc
or
mov
lds
and
add
mov
jne
mov
inc
mov
dec
dec
mov
cmc
inc
and
pop
outsb
mov
jo
pop
sub
addl
xor
nop
fsubr
out
andb
ret
mov
xor
outsl
xor
bnd
mov
and
dec
test
test
rcll
ds
cmpb
cmpsb
dec
sarl
mov
sub
pop
js
xor
inc
cwtl
push
popf
lahf
ljmp
ja
sub
mov
movsb
adc
iret
jns
lods
sbb
pop
xor
pop
out
adc
sbb
je
cs
jg
xchg
call
jg
mov
add
xchg
push
mov
push
std
icebp
inc
add
int
xchg
inc
pushf
cmp
test
mov
sbb
or
insl
insb
sbb
or
pop
or
mov
push
and
mov
int
les
lods
or
jmp
lret
add
cmc
jge
adc
xchg
nop
aad
push
dec
adc
dec
add
hlt
clc
int3
or
mov
imul
stos
mov
or
in
lock
rcrb
push
jmp
mov
jnp
hlt
or
adc
mov
mov
and
daa
jo
movsb
mov
rcrl
out
mov
sbb
cld
testl
jb
or
lods
fcompl
xchg
or
rorb
pop
shlb
jnp
xchg
rcll
sbb
sbb
dec
pop
repnz
mov
cmc
les
insl
test
sub
hlt
and
nop
gs
mov
pop
sti
dec
jge
mov
xchg
inc
popa
sub
xchg
negb
lods
xorl
adc
enter
shrl
enter
add
rdtsc
sub
sub
lods
mov
sbb
or
inc
xchg
in
add
into
enter
cwtl
pop
add
cmp
mov
outsb
test
mov
dec
dec
out
lret
cmpl
jb
inc
jmp
icebp
lret
add
sbb
xor
inc
dec
stos
popl
test
adc
call
xchg
mov
daa
aad
daa
or
lahf
test
fnstcw
in
xchg
pop
mov
and
push
mov
jo
sbb
push
out
fstps
cmp
jne
test
call
mov
xor
ja
mov
lret
pop
popf
pushl
push
cmc
shlb
cmp
cli
and
cmpl
inc
sbb
mov
movsl
mov
testl
test
mov
push
sub
sti
adc
push
xor
cmp
test
inc
rcr
lods
and
popa
jmp
cmpl
insl
in
add
out
xchg
jle
call
mov
push
scas
aas
inc
xor
dec
cmp
in
xor
or
das
sub
or
popa
mov
xor
addb
mov
out
mov
mov
cli
addb
push
push
pop
popa
pop
xchg
add
jmp
call
test
fwait
call
stos
andl
test
shrb
nop
jb
pop
mov
pop
rclb
dec
add
rcrb
jo
pop
xorl
mov
push
sub
mov
aam
jns
jae
mov
mov
clc
adc
inc
jmp
dec
outsb
incb
cmpsl
push
sbb
lods
imul
pop
jmp
mov
add
xchg
mov
sub
dec
fcomps
bnd
and
into
mov
cmpsl
xchg
mov
andb
inc
dec
add
scas
xchg
xlat
dec
test
aad
sbb
fmuls
mov
sarl
jp
xor
dec
ds
in
sub
inc
mov
xor
add
clc
inc
dec
xchg
sub
xor
sbb
mov
pushw
repz
dec
ret
add
rclb
add
repz
imul
mov
int3
test
cld
ja
pop
lds
inc
pop
movlhps
push
mov
or
xchg
lahf
sub
adc
stos
fdivrs
inc
sub
ret
movsb
cmp
mov
xchg
lock
dec
push
fists
test
push
pop
cmc
shll
dec
push
fldenv
inc
das
repz
aaa
sub
shll
ret
inc
iret
jg
movl
ror
fisttps
lahf
mov
addr16
lea
int
lods
rcr
rcrl
movsb
sub
or
adc
adc
sbb
jmp
sub
lods
out
pop
jb
push
xchg
xor
or
inc
sub
push
movsl
dec
mov
mov
leave
jbe
or
mov
lods
push
mov
out
inc
inc
sbbb
mov
jge
and
and
pop
mov
andb
dec
cld
decb
mov
dec
inc
ds
and
add
movsb
pop
jge
negb
orl
pusha
aam
lret
lcall
mov
jb
xor
mov
test
add
in
ljmp
and
bound
in
scas
sub
pop
jle
loope
and
or
adc
or
add
adc
loope
mov
hlt
add
aad
push
pop
dec
mov
lods
or
add
lcall
popa
pop
daa
nop
sbb
or
mov
fistpl
rol
push
cmp
jo
cmpsl
push
dec
cli
xchg
and
cmp
xor
mov
jns
xlat
int
dec
fistps
cwtl
jae
aam
mov
sub
ret
movsl
vmulps
pop
test
mov
dec
pop
rol
mov
out
add
pop
mov
xor
popa
dec
or
out
loopne
into
popl
cmp
sbb
xor
mov
and
test
xchg
push
sbb
add
and
jnp
mov
xchg
int
in
insl
jo
mov
neg
xchg
mov
testb
lcall
push
cld
push
in
dec
xor
popf
pop
out
mov
jle
dec
cs
push
xor
mov
daa
jo
mov
pop
cltd
mov
outsl
or
or
add
pop
test
xor
cli
sbb
outsl
ret
sub
enter
pop
fstpl
loop
aam
imul
sarb
nop
jnp
pop
xor
vpmacssdql
mov
pop
jmp
fists
movsb
xchg
cmpsb
and
leave
push
mov
push
fcoms
mov
ret
fs
lods
and
shll
dec
add
cmc
mov
sbb
push
sub
addr16
scas
sbb
cmp
add
xor
por
cmp
dec
insb
rcrl
push
ret
adc
pop
push
icebp
push
mov
fwait
cmp
lret
cmp
push
je
shlb
add
fiaddl
js
out
add
push
sub
or
adc
decl
in
dec
test
and
and
clc
push
into
loopne
xchg
mov
xor
push
lcall
push
repnz
hlt
jno
mov
mov
jle
cmpl
push
mov
ficoms
pop
popf
scas
outsb
jb
cmpsl
and
and
inc
mov
mov
xchg
mov
inc
js
jle
addb
repnz
int3
ds
cmc
outsb
lea
jb
mov
lea
push
mov
iret
add
dec
adc
inc
pop
dec
push
movsl
cld
jae
popa
int3
push
imul
inc
sub
jp
add
iret
mov
mov
sub
dec
mov
test
push
push
sbb
nop
movsb
repz
dec
pop
fsubrs
jae
sbbb
mov
dec
aas
and
cld
push
sub
add
pop
jo
jp
sbb
xchg
inc
pop
mov
scas
push
or
sub
mov
scas
insl
lret
or
mov
or
mov
cmp
jmp
jg
xor
adc
xchg
getsec
jge
in
pusha
ret
and
nop
addr16
cld
mov
sbb
pusha
fstpl
push
pop
jo
sbb
push
add
inc
push
stos
xchg
mov
fidivrs
xor
and
repnz
add
xor
jle
xchg
clc
jne
mov
mov
push
sub
xlat
jb
add
or
push
add
xchg
fidivl
out
cwtl
stos
cmp
mov
rcrl
verr
scas
sarb
add
cmp
sti
pop
fmul
and
and
mov
sbb
cs
lahf
dec
adcb
adc
xchg
push
mov
and
xchg
pop
add
and
mov
hlt
push
sub
out
xchg
loope
adc
fistl
sahf
ja
cmp
and
aas
xchg
rclb
scas
adc
add
ret
sub
cmpsl
mov
xchg
push
rorl
out
pop
into
filds
xchg
test
ljmp
in
cli
pop
cwtl
xlat
data16
mov
cmp
jnp
xor
jns
add
dec
pop
sbb
in
jp
pusha
pushf
insb
pop
icebp
or
add
mov
xor
xchg
pop
dec
testb
cmp
lds
shlb
mov
out
rcll
and
pusha
mov
gs
jecxz
mov
sub
push
mov
cwtl
cmp
push
fcoms
xchg
mov
add
mov
jno
add
mov
testb
inc
aad
add
mov
test
mov
sahf
loopne
fwait
aas
and
mov
pop
sub
sbb
add
sbb
or
sub
movq
cmp
inc
loope
lcall
cmp
xor
or
scas
cmpsl
xor
and
sub
stos
add
inc
push
cld
jb
add
inc
ss
xor
loope
pop
shlb
mov
sub
jne
pop
add
lret
cvtpi2ps
mov
ds
addb
jno
or
sub
jo
add
cmp
mov
xchg
dec
mov
cmp
iret
add
popa
pop
fcompl
push
out
sar
test
cmpsl
inc
shll
xchg
add
movsl
xchg
push
push
mov
jmp
out
clc
sahf
and
jecxz
jecxz
enter
ret
loope
add
inc
mov
push
mov
pop
fadds
call
and
ss
inc
stc
rorl
enter
cmpsb
icebp
sub
test
stos
add
testb
dec
xchg
jge
sub
inc
movsl
nop
stos
daa
imul
pop
rorl
js
aaa
cmp
sbb
arpl
inc
aas
pop
mov
cmp
cld
xchg
les
dec
fdivs
mov
fbld
inc
sub
lds
pop
out
pop
gs
addr16
rolb
jo
pop
sbb
dec
insb
mov
jmp
repnz
fldt
fisttps
adc
lods
mov
movsb
push
push
mov
xor
add
out
push
add
push
fisubs
dec
adc
lahf
fiadds
sub
clc
cmp
scas
addl
outsb
rorb
adc
adc
insb
movsl
das
icebp
fucomi
add
mov
xchg
in
or
sbb
sbb
pop
cmp
push
add
or
cld
mov
cmp
aaa
andb
push
push
mov
enter
test
jae
mov
call
add
aad
dec
xlat
in
xchg
stos
inc
sub
insb
sbb
test
shlb
and
clc
popa
jle
dec
inc
add
in
xor
add
push
mov
in
lock
scas
add
xchg
movsb
dec
in
add
xchg
mov
push
popf
ljmp
das
jmp
sahf
enter
jmp
sub
push
repnz
test
outsb
ret
pop
outsl
in
add
test
shrb
in
mov
js
das
out
add
mov
ss
pusha
inc
sbb
movsl
or
cmp
add
and
mov
les
pop
add
dec
lds
imul
inc
dec
adc
dec
insb
add
dec
roll
pop
aam
jl
dec
popf
aas
push
sti
or
push
lcall
stc
test
mov
add
sarb
mov
or
lock
jne
cmp
inc
xchg
addr16
adc
scas
inc
adcb
mov
pop
dec
popa
pop
pop
nop
xorb
push
pusha
jb
hlt
sarl
mov
sahf
icebp
les
pop
mov
ja
pop
cmp
add
sub
jl
push
outsb
inc
sbb
ret
je,pt
jp
dec
adcl
xchg
js
mov
sbb
nop
xchg
mov
in
adc
xchg
and
sti
je
pop
jne
pop
and
mov
mov
lods
xor
push
sub
sub
test
xchg
mov
xchg
or
mov
cmp
add
inc
cmpsl
and
js
xchg
mov
orb
bndldx
icebp
sbb
test
dec
push
push
add
adc
inc
push
mov
push
lcall
adc
adc
dec
fstpt
inc
or
inc
mov
mov
ret
mov
add
cmp
push
or
aaa
xchg
out
push
add
inc
push
sub
pop
jp
fwait
mov
mov
cmp
xor
inc
jne
fldenv
xor
sub
push
cmp
pop
hlt
push
fyl2xp1
adc
insl
add
cmp
lahf
sbb
ret
mov
icebp
out
add
outsl
repz
pop
popf
das
add
jnp
in
xor
and
cmp
cmpxchg
popf
mov
rcll
and
pushf
sahf
hlt
mov
out
fsubr
add
push
xchg
lahf
fwait
sbb
and
adc
std
jp
add
jne
xor
jecxz
int3
fildll
movsb
daa
sbb
xchg
sub
out
pusha
outsb
icebp
and
dec
inc
test
xlat
or
aaa
faddl
addb
movsl
mov
pop
xchg
cli
add
xchg
scas
mov
lcall
cmpb
sbb
add
outsb
lret
movsb
xchg
xchg
jbe
xorb
mov
xor
cmp
add
mov
rcrl
in
cli
and
mov
xorb
sbb
jmp
ja
daa
cmp
lahf
cmp
cld
xor
mov
dec
pop
sub
add
divl
cmc
pop
sub
data16
stc
in
movsb
mov
cmp
sarl
out
rol
sar
or
mov
movsl
mul
sub
and
test
xchg
jae
mov
popa
test
leave
mov
fdivs
outsl
and
mov
jb
inc
test
jo
add
pop
sarl
jmp
jg
mov
xor
fsubs
or
mov
pop
loopne
dec
test
cli
and
icebp
cbtw
test
sub
iret
xor
imul
in
repnz
enter
pand
sub
cmp
xchg
fcmove
sbb
jle
or
xor
pop
xchg
jnp
pushf
cwtl
adc
outsb
add
aam
cmc
pusha
fdivl
jp
sbb
add
adc
repz
xor
push
and
fbstp
jo
xor
push
inc
lea
add
mov
ret
cmp
xor
xchg
cltd
fs
loope
add
pop
push
push
rcrb
inc
std
test
and
gs
es
mov
mov
jp
mov
scas
test
jmp
pusha
les
xchg
mov
mov
and
andb
mov
fistpl
jge
and
sbb
sbbl
frstor
pop
and
scas
mov
mov
xlat
shlb
xor
inc
or
xor
adc
or
push
adc
cmc
xor
mov
inc
cmpsl
mov
push
cmovs
testb
leave
sub
data16
push
sti
dec
adc
iret
and
mov
addl
xchg
xchg
out
call
pusha
sbb
xchg
fnstcw
and
std
loopne
xlat
mov
or
adc
adc
in
shlb
inc
pop
jns
add
cmc
out
mov
pop
pop
cmp
pushf
dec
mov
mov
sbb
mov
and
imul
dec
gs
shlb
sbb
jb
push
movsb
fs
pop
sub
push
loopne
push
xchg
or
in
add
nop
mov
sub
jbe
rorb
enter
add
xchg
xchg
std
lret
and
hlt
repnz
mov
fbstp
adc
pop
sbb
inc
ljmp
aad
cmp
xor
mov
and
loope
rorl
sub
xchg
push
or
nop
in
and
inc
pushf
pop
sub
sbb
push
sbb
add
pop
push
mov
sbb
mov
mov
rcrb
push
les
jmp
test
daa
orb
xor
lods
xchg
std
add
add
scas
cmpsl
inc
lret
pop
icebp
cmpsb
add
adc
push
sbb
jle
mov
popa
sub
add
sbb
test
or
push
adc
in
mov
daa
dec
cmpsb
mov
or
dec
add
xor
xchg
test
pop
enter
ret
dec
std
mov
or
mov
or
jmp
addb
push
pop
cwtl
nop
or
orl
loope
sar
dec
pop
movswl
mov
cmc
sbb
fldcw
cmp
lcall
insb
push
fbstp
dec
aam
in
add
xchg
jae
mov
cld
ljmp
add
std
leave
push
xchg
xchg
daa
add
sbb
gs
push
sub
cli
mov
mov
mov
popa
lods
jmp
ret
ds
dec
out
dec
cmp
pusha
jbe
popa
jp
and
dec
es
lods
lcall
add
xor
mov
pop
dec
popf
add
cwtl
in
xchg
jg
add
pop
dec
lret
push
es
addr16
sbb
out
mov
pusha
jae
dec
cmp
dec
loop
add
insl
hlt
add
and
sub
dec
addl
and
or
jns
dec
iret
dec
pop
adc
or
popa
stc
pop
xchg
ret
or
xchg
xor
mov
dec
rorl
mov
out
movsb
mov
pop
jb
and
cmp
scas
xchg
mov
push
fimuls
pusha
mov
out
xor
xchg
outsl
xchg
fs
int3
test
inc
sub
and
mov
adc
or
sbb
push
std
add
mov
clc
inc
dec
test
sbb
repz
stc
xchg
mov
sub
pop
sbb
jmp
push
pop
les
das
dec
inc
inc
adc
sub
jo
je
mov
xlat
lret
mov
roll
inc
insl
cmp
lds
or
inc
and
cmp
cld
inc
sbb
mov
xor
ret
mov
mov
pop
add
xor
out
xor
xchg
and
or
dec
or
adc
mov
mov
dec
daa
shlb
sarl
adc
call
mov
push
mov
rcrl
pop
sbb
sub
out
cltd
add
movsb
loope
sbb
mov
out
das
leave
sbb
insb
rcl
add
mov
sbb
loopne
orb
aad
add
jbe
in
mov
dec
or
cld
pushf
push
inc
or
jne
lea
dec
and
cmp
push
movsb
cld
or
xor
les
test
push
add
jne
jnp
add
scas
push
xchg
subl
pushf
adc
int
shlb
out
add
dec
call
in
pop
and
cmp
outsb
sarb
jmp
mov
xor
push
fs
cmp
fidivs
cmp
roll
pusha
mov
mov
dec
popa
push
mov
or
and
push
std
add
jne
mov
int3
je
xlat
mov
loope
mov
push
pop
add
out
rolb
push
pop
add
add
ja
sub
insl
andb
xchg
sahf
ret
jns
push
cs
mov
scas
and
rcl
and
stc
sub
jo
lds
call
lock
mov
aam
sbb
cwtl
or
and
aam
hlt
clc
add
es
mov
loopne
pop
call
imul
sub
testb
push
mov
mov
push
loope
addl
int
sub
ds
or
inc
dec
arpl
xor
sahf
lock
dec
movsl
push
int3
orl
popa
out
call
sub
lds
push
inc
call
cmc
adc
mov
es
add
jo
pop
lods
sbb
ljmp
mov
es
nop
and
sbb
cmp
mov
lds
mov
movswl
call
add
mov
push
sub
and
jbe
adc
outsl
xor
mov
and
push
outsl
and
add
sahf
mov
aad
sub
pop
sbb
xor
fisubrl
test
test
cmp
pop
add
xchg
push
aas
pop
sub
pop
push
mov
imul
es
and
out
daa
mov
clc
out
pop
imul
adc
pop
mov
lea
stc
fidivrs
je
adc
push
push
sbb
mov
mov
jge
into
frstor
inc
push
loop
xchg
sarl
bound
adcl
sbb
sub
jbe
push
sub
popf
loope
pop
pop
inc
mov
lock
pusha
dec
dec
or
adc
add
mov
mov
stos
cmp
mov
pop
iret
cmp
rcr
addl
inc
test
xor
movsl
add
xor
test
add
add
add
mov
rolb
sub
add
sub
cld
filds
clc
sub
xchg
mov
neg
add
sub
mov
movsb
xchg
push
push
mov
ficompl
loop
add
mov
cmp
mov
mov
lret
sbb
add
jb
adc
rclb
cmpsb
daa
aaa
and
addb
je
int
das
daa
or
popf
cmp
sbb
sbb
repnz
or
sbb
and
xor
in
and
movsb
cs
sarl
add
int3
push
test
movsb
pop
lcall
jmp
add
mov
push
cs
in
inc
xor
cmp
xchg
cs
and
add
and
sarl
xorb
pusha
mov
mov
cmp
add
test
xor
ljmp
stc
add
pop
sub
add
dec
adc
mov
dec
jo
fdivrs
inc
pop
mov
fisubrs
sbb
arpl
inc
jl
mov
xchg
inc
push
xchg
mov
add
mov
and
dec
int
int3
dec
dec
int3
add
or
jmp
jmp
pop
mov
mov
sub
call
shlb
lahf
arpl
add
pop
cvtps2pd
sbb
adc
mov
adc
jb
cmp
dec
inc
or
xchg
jnp
cmp
push
inc
cmc
add
mov
mov
cmpsl
int3
mov
add
hlt
lcall
pop
xor
mov
dec
or
cltd
push
mov
mov
mov
fiaddl
sbb
mov
mov
ja
popf
fs
add
pop
mov
pop
outsl
mov
shl
in
adc
add
mov
outsl
pusha
push
jae
pop
popa
mov
inc
iret
add
cmp
cltd
pop
loope
cmp
adc
pop
sbbb
fnsave
pop
stc
mov
and
jb
lret
nop
xchg
call
je
inc
imul
sub
mov
mov
lds
jecxz
inc
movsb
in
pop
add
shrl
outsb
rolb
popa
clc
dec
mov
sbb
ficoms
push
push
jp
sub
test
int3
test
xor
ret
rcr
mov
mov
lods
repz
mov
adc
jne
call
in
or
aaa
in
xchg
add
into
and
popf
jae
inc
mov
pop
and
data16
push
mov
pushl
and
movsb
icebp
sbb
nop
das
popf
int
ret
push
addb
add
lds
mov
sbb
add
mov
xorb
mov
inc
adc
js
inc
mov
mov
adcb
add
addl
push
pop
aam
dec
jbe
fcompl
leave
dec
add
insb
mov
fcoms
fs
xor
jp
dec
push
cmp
out
and
or
xor
pop
repz
scas
push
xor
outsl
jbe
das
mov
ds
add
and
test
xchg
je
lock
cmpsb
adc
xor
call
stos
scas
pop
xchg
jo
and
or
or
out
int3
jo
nop
and
pop
sub
lock
nop
mov
sub
stos
cwtl
repnz
xchg
addr16
or
push
add
push
sbb
jo
mov
jno
pop
jp
clc
pop
movsl
jmp
scas
vmptrld
pop
data16
adc
jecxz
inc
mov
add
sub
or
loop
xchg
inc
cltd
jns,pn
shl
cmc
sub
enter
pop
popf
pop
add
fistpll
aaa
in
jp
pushf
add
xchg
jp
mov
cmp
daa
and
pop
or
ret
lock
rclb
xchg
lds
or
lret
sbb
lret
jge
inc
add
outsl
pop
or
les
test
iret
shlb
insb
push
fadd
jge
xor
roll
incl
xchg
movsl
cmp
mov
mov
movsb
or
mov
xchg
mov
xor
aam
mov
enter
mov
fldlg2
mov
pop
cs
ljmp
jle
outsl
cmp
loop
cmpps
dec
mov
mov
sar
add
pop
mov
dec
add
dec
push
mov
mov
xor
ror
rclb
and
pop
sbb
and
mov
push
push
movsb
adc
xor
iret
pop
add
mov
enter
push
pop
mov
or
cwtl
test
adc
mov
in
xchg
xchg
mov
inc
mov
and
jge
jg
sbb
add
or
dec
xchg
mov
pop
ja
int3
push
add
insl
loopne
icebp
lods
in
add
mov
stc
mov
pop
and
fimull
cli
or
icebp
cmpsb
xchg
push
push
iret
scas
inc
inc
mov
sub
jmp
popf
insb
and
xor
in
adc
call
repz
jne
and
loope
adc
scas
jne
addb
mov
cmp
sahf
movsl
rcrb
jle
sub
inc
add
jnp
lahf
push
pop
or
fmul
add
xchg
xchg
in
test
nop
and
xor
shrb
inc
sub
dec
add
dec
sub
jle
or
inc
lea
mov
mov
subl
xor
sbb
sbb
das
in
and
movl
pop
roll
cmpsl
adc
push
add
cmp
dec
test
idivl
add
xor
adc
aas
add
mov
std
cli
dec
fnsave
pusha
popa
add
mov
jp
cmp
dec
leave
mov
dec
xchg
and
xor
and
les
aas
sub
add
aam
sbb
out
adc
or
out
add
popa
addl
cmp
mov
fcompl
loopne
sbbb
mov
sti
mov
xor
movsl
xchg
testb
ja
enter
notb
adc
lds
sbb
es
inc
inc
xor
dec
fwait
xchg
js
test
loopne
or
push
repnz
fsubrs
inc
push
shlb
and
ljmp
inc
fs
iret
mov
mov
mov
adc
add
add
jl
mov
fstpt
sti
push
loope
add
mov
jb
push
imul
adc
push
out
add
arpl
dec
and
mov
orb
add
mov
adc
xchg
jno
mov
add
aad
pusha
push
and
pop
pop
pusha
enter
dec
jp
push
xchg
inc
lret
enter
ror
sub
hlt
lea
xchg
cmp
dec
mov
ss
daa
loope
jns
lods
sbb
out
pop
push
adc
mov
cmpb
daa
inc
add
into
enter
sbb
cmp
push
xchg
add
test
jmp
jge
push
fwait
xchg
dec
popa
outsb
aaa
or
test
push
out
and
mov
gs
jne
aad
cmp
out
inc
ret
lret
inc
sub
pop
mov
mov
mov
cmp
pop
cmpsb
in
test
push
xor
pop
inc
xor
rol
push
mov
pop
xchg
leave
xchg
jmp
ss
add
or
sbb
sub
adc
push
test
loopne
dec
rcr
addb
inc
xor
cmp
and
jg
loopne
jp
mov
push
test
jle
bound
cmp
xchg
sbb
mov
dec
ds
dec
push
add
xchg
out
jo
jnp
adc
outsb
pop
pop
rcll
sub
fcmovbe
jnp
jge
scas
jge
fnstsw
mov
mov
or
mov
or
sub
push
push
sbbb
mov
test
jge
cltd
push
addr16
or
sub
rolb
inc
adcl
aad
in
add
dec
mov
cltd
add
jp
add
out
stos
scas
sub
xor
fdivp
adcl
stos
sbb
jae
cld
cmp
pop
and
inc
cmpsb
stos
mov
fnstenv
cmpsl
int
inc
das
addl
fs
push
or
pop
jo
mov
call
mov
ret
nop
inc
sbb
push
pop
and
cmp
lret
insl
xor
leave
movsb
daa
lods
dec
ljmp
and
sub
adc
adc
mov
sub
popf
dec
pop
push
add
jns
push
xchg
in
cmpsl
or
cltd
mov
xor
adc
jo
sti
mov
das
fimull
fnstcw
adc
push
mov
push
pusha
push
clc
dec
pop
xchg
call
sbb
jnp
add
sub
js
call
ds
fdivr
and
mov
ffreep
mov
mov
xchg
int
hlt
or
gs
mov
or
pop
push
rorb
js
mov
lea
pop
or
pusha
mov
pushf
mov
jae
mov
push
mov
add
rep
adc
add
sbb
cmc
movsl
shlb
push
mov
repnz
add
and
xor
jp
add
jbe
mov
hlt
dec
jo
daa
sub
je
push
ja
out
mov
bound
jle
inc
test
add
rcrl
and
add
cwtl
pop
jle
cmpsl
sti
rclb
inc
xchg
insl
pop
pop
loopne
add
test
jnp
add
jmp
push
mov
and
imul
mov
pop
or
insl
icebp
add
movl
shr
dec
repnz
push
in
scas
loopne
lock
scas
pop
cmpl
mov
js
fistpl
lahf
adc
jp
nop
mov
add
scas
les
push
dec
push
out
int3
pushf
pusha
add
push
pop
popa
nop
lret
jno
mov
jle
movsl
or
test
mov
faddl
jl
ljmp
dec
adc
jne
sub
test
adcb
andb
or
push
es
fisubrs
cmp
stos
ret
pop
inc
hlt
xor
mov
adc
cwtl
repnz
add
mov
stos
push
jmp
je
add
cmp
pop
icebp
xchg
sbb
fs
jb
cmc
cmc
sbb
jp
mov
add
jns
adc
or
dec
gs
ljmp
bound
pop
cltd
or
pop
lds
cwtl
push
addb
enter
cmc
xchg
dec
add
cmp
mov
popf
nop
cmp
popf
jmp
js
mov
sub
bound
add
dec
lds
pop
jmp
mov
inc
add
notb
rorl
ja
jg
jmp
mov
xor
mov
leave
rcll
xor
loop
jo
pop
je
dec
jns
cli
adc
stc
xchg
daa
mov
addl
push
mov
lods
js
daa
aas
pop
inc
ss
jae
inc
sbb
mov
fnsave
movsb
repz
call
test
add
jl
sub
inc
sub
jl
testb
cmp
cs
push
mov
push
inc
dec
lret
sbb
xchg
cmp
movsl
jo
adc
mov
movsb
loope
or
adc
out
cwtl
daa
adc
push
mov
add
mov
add
jo
fnstcw
xor
push
or
jmp
add
popf
clts
xchg
addb
adc
aaa
hlt
shll
mov
outsl
insl
push
inc
push
adc
daa
pop
mov
adc
add
mov
sarl
jmp
rcrl
mov
push
sub
push
add
xor
jmp
cli
xchg
pop
rcrb
in
fnstenv
and
pop
call
aaa
or
push
ret
mov
stc
out
push
push
aad
jo
lcall
flds
jmp
inc
sbb
mov
test
call
jmp
xor
add
mov
adc
lods
mov
or
mov
cmc
stos
mov
xchg
adc
dec
dec
in
and
sbb
or
sub
icebp
into
or
outsl
aam
scas
lcall
outsl
and
rcr
add
mov
loop
xor
test
or
cld
xchg
stc
push
fprem1
je
push
mov
outsb
scas
sbb
or
xchg
jge
mov
cmp
pop
xor
xor
sti
push
fmuls
sub
pop
in
dec
dec
test
das
fwait
cld
mov
rclb
dec
mov
dec
pop
pop
ss
dec
cli
aam
stos
jp
add
mov
ss
out
loopne
inc
sbb
mov
and
into
adc
or
popf
sti
xchg
dec
mov
mov
dec
sub
mov
xor
or
inc
sbb
and
push
adc
adc
loope
lods
mov
cmp
idiv
mov
lret
and
mov
cltd
add
rcrl
popf
adc
imul
jne
pop
xorl
sub
mov
push
mov
add
adc
push
xchg
sub
and
inc
adc
sub
shrl
loopne
jp
in
sub
pop
xchg
adc
adc
fs
daa
mov
dec
dec
and
lods
jb
fiaddl
xchg
push
test
imulb
imul
sub
xchg
pop
aad
test
sub
or
xorl
inc
das
gs
add
mov
mov
push
test
shlb
jge
pop
inc
es
pop
dec
js
popf
mov
cmp
repz
or
sbb
inc
lods
sbb
scas
xchg
outsl
dec
je
adc
mov
insb
push
inc
sub
xor
into
xlat
jg
lcall
xchg
add
pusha
and
mov
pop
repnz
pop
mov
inc
idivb
add
mov
dec
dec
dec
add
imul
pop
add
cmp
xor
test
xor
push
jp
std
ret
repnz
lret
mov
cld
cmpsl
test
inc
pop
cmpsl
pop
jnp
jo
push
push
cs
mov
mov
popf
dec
and
fsts
add
fsubrp
inc
dec
add
push
repnz
and
dec
cmpsb
shl
call
pop
ja
popf
aad
shr
loop
add
cwtl
add
mov
cmp
mov
xchg
mov
add
add
adc
ffree
daa
mov
call
add
stc
fnstcw
jge
cli
add
mov
jne
leave
inc
popa
mov
adc
pop
divb
add
insl
sti
mov
mov
movl
mov
push
xchg
pusha
push
sarl
sbb
sahf
arpl
jns
cli
fsubrl
jle
ds
das
mov
ficomps
sbb
adc
pop
lock
xor
adc
push
subl
pop
repz
push
pusha
lcall
sar
out
shl
cld
jp
outsl
ja
fwait
push
cmpb
push
cmpsl
push
pop
pop
lods
mov
mov
jg
popl
daa
push
pop
push
push
imul
fwait
xor
pop
fcoms
mov
and
std
pop
ret
pop
jno
mov
adc
pusha
bound
std
add
pop
fwait
cmpsl
pop
cmp
jns
divl
mov
xchg
lods
enter
enter
sti
add
inc
mov
jbe
xchg
js
jmp
popf
popf
add
cs
cli
popa
cli
test
outsl
js
pushf
nop
es
cli
mov
xor
in
pop
dec
mov
stc
or
sub
mov
push
mov
xor
sbbl
and
mov
enter
or
out
inc
enter
xchg
add
std
cmp
orb
lahf
fs
mov
add
pop
adc
add
lcall
pop
shl
test
inc
inc
lds
sar
in
outsl
add
je
mov
ss
pop
push
xchg
mov
lods
mov
js
dec
push
adc
fistpl
shr
movsb
in
rol
push
pop
popa
mov
addr16
sahf
inc
pop
adc
decb
rol
iret
cmc
rclb
loopne
jl
aam
mov
inc
jl
dec
and
pop
dec
mov
lock
mov
cmp
dec
sub
mov
jge
add
sti
cmp
or
xchg
mov
mov
xlat
sub
jns
cmpsb
mov
sub
repz
jb
shr
jle
enter
add
and
iret
pop
adc
imul
dec
mov
push
out
subb
lret
mov
cmp
pop
jge
or
lret
mov
dec
pop
ror
out
adc
sub
push
adcl
rcrl
cmp
inc
movsl
popa
bound
cmp
and
mov
mov
pop
out
cmc
inc
jl
test
add
mov
popf
mov
in
addl
test
fucomp
sub
mov
cmp
stos
vmovlps
mov
cwtl
clc
lods
xor
fcmovnu
mov
jns
mov
add
mov
loope
call
in
push
or
lret
andl
mov
inc
add
sbb
or
sub
pop
outsl
jmp
outsb
ret
insl
xor
push
js
add
fbld
pop
movsl
adc
adc
inc
int3
mov
out
loopne
jnp
add
xor
hlt
lcall
jns
rcll
pusha
push
int3
daa
int
test
xchg
sub
mov
jb
inc
jp,pn
sub
and
cmp
xor
rcl
lods
data16
and
andl
pop
or
sub
es
test
inc
dec
sbb
xchg
pusha
stos
fdivr
and
cld
mov
cmp
loop
insb
fsubl
fmul
add
out
mov
adc
jg
sub
push
mov
jns
xchg
fildl
adc
or
popa
fsubrs
in
aaa
rcrb
add
nop
or
insb
mov
aad
sbb
in
je
pushf
jno
add
dec
sbbl
adc
gs
cmp
and
call
es
lock
xor
jns
inc
ja
jnp
push
pop
inc
lods
in
xor
jecxz
push
repnz
loopne
or
jno
orb
fwait
cmp
cmpb
jns
je
insb
loope
sub
in
sbb
and
mov
scas
pop
pushf
adc
inc
inc
in
lods
sub
shlb
or
pop
mov
or
test
mov
lds
add
outsb
adc
cmpsl
or
push
jge
xlat
add
add
sub
addr16
dec
test
pop
adc
insl
push
dec
inc
xor
into
adc
outsb
nop
test
xchg
dec
adc
push
dec
loopne
js
test
jl
testb
adc
sub
sbb
mov
jo
sub
fs
idivb
nop
pop
add
imul
push
loope
or
dec
jmp
push
mov
popa
add
hlt
aaa
shll
add
jo
push
jns
add
in
pusha
sbb
pop
and
sub
mov
sub
xor
xor
cltd
push
and
roll
mov
testl
out
inc
dec
jbe
sub
sbb
mov
xchg
cld
js
lret
jno
ds
inc
call
add
pop
pop
das
adc
rcll
pop
pop
outsl
ficoms
mov
xchg
lds
and
insb
cld
inc
loopne
int3
lds
paddd
lea
test
inc
testb
hlt
out
fiaddl
xchg
lea
mov
daa
cs
push
cmpsl
pusha
xchg
lock
je
mov
test
mov
adc
pushf
subl
sub
stos
inc
push
cwtl
lock
pop
pop
push
sbb
stos
scas
bound
mov
pop
es
or
mov
rolb
cli
and
pop
or
inc
lahf
xchg
mov
cmp
cmp
add
jns
neg
cld
cmp
xchg
std
icebp
cmp
xor
sub
push
mov
cmp
and
xchg
sahf
sbb
pop
cmpsl
jnp
mov
loop
js
xchg
adc
cld
add
pmaxub
cld
xchg
rcl
jnp
push
clc
ficoml
cltd
stos
and
movsl
xor
sti
jp
psubusw
aaa
rol
dec
mov
xchg
stos
cmp
mov
insb
jb
or
mov
dec
test
push
add
movsb
push
or
mov
mov
and
cmp
aas
mov
fs
cmp
mov
and
or
movsl
pop
inc
jo
sti
loopne
push
lds
xor
adc
loope
in
fdivrl
arpl
or
sub
xorb
or
push
pop
adc
scas
fnstenv
push
loope
add
decl
lock
sbb
test
int
or
mov
jp
cmpsl
adc
ret
call
icebp
cmpsl
pusha
cltd
ficoms
jo
stos
add
or
aam
add
sahf
and
sub
cmp
and
scas
pop
mov
int
inc
scas
shlb
lea
int
or
push
rol
add
add
mov
dec
add
gs
loope
scas
sub
mov
push
mov
or
push
pop
adc
out
sub
fldcw
std
add
icebp
add
leave
dec
nop
lock
loop
popf
fstpl
andl
fidivs
push
push
adc
push
dec
sarb
call
inc
inc
jmp
mov
dec
leave
movd
ja
add
fidivl
int
repnz
out
sub
jp
or
cmpsb
popf
xchg
mov
daa
pop
mov
stos
mov
aaa
mov
add
fs
dec
sbb
cwtl
lret
push
mov
cmova
mov
sub
in
in
and
stc
or
shrl
lret
pop
in
sub
add
push
cmp
mov
sub
mov
lods
xchg
fbld
and
dec
pop
or
inc
push
mov
pop
dec
orb
icebp
jo
dec
imul
loope
pop
fs
mov
inc
jp
fnstsw
in
jmp
icebp
jl
jp
push
and
nop
jae
fildl
dec
inc
pop
idivl
ss
rcrl
xor
stos
pop
mov
inc
mov
fsubr
rolb
lcall
sbb
test
daa
test
fsts
push
out
adc
add
mov
pop
aam
js
pop
xchg
sbbb
or
add
push
lret
rcr
mov
adc
inc
sbb
add
cmc
cmp
add
insl
mov
nop
jne
mov
mov
and
mov
add
fs
or
add
push
clc
jo
pop
pop
mov
into
mov
inc
int
push
and
add
add
xchg
push
lahf
cmp
cmp
test
mov
in
jmp
xchg
mov
add
jp
loopne
xlat
and
adc
lods
mov
fildll
sub
aaa
and
andb
lods
mov
push
out
adc
nop
push
call
jmp
cmp
sbb
subb
cwtl
sahf
daa
test
dec
outsl
mov
adcb
scas
mov
dec
sub
xchg
adc
add
nop
xor
sahf
lcall
or
jbe
push
outsb
lds
add
jno
add
xor
mov
mov
pusha
mov
popf
int
xchg
outsb
push
mov
pushf
add
adc
pop
xchg
push
push
pusha
ret
pusha
scas
pop
jo
add
test
in
mov
mov
iret
rcrl
inc
dec
jl
sub
ja
cmpsb
or
push
dec
add
dec
jb
or
enter
lods
sub
add
leave
mov
pop
adc
add
popf
pop
les
call
imul
adc
divl
add
incb
sbb
mov
adc
fwait
mov
mov
jns
add
rolb
imul
imul
in
xchg
lods
sbb
mov
dec
nop
fisubl
insl
and
in
loope
cmp
test
dec
cli
test
inc
push
dec
and
or
fsubrl
std
jb
shrl
cmc
add
mov
nop
loop
xchg
add
mov
or
pop
add
pop
mov
lds
mov
add
int
mov
call
sub
pop
dec
sbb
xchg
dec
stc
test
add
movsb
ss
call
pop
inc
jns
mov
sarb
xchg
jns
push
mov
mov
dec
jmp
mov
pusha
jo
sahf
int
es
add
add
mov
fdivl
pop
enter
or
add
ss
xor
movsl
push
cltd
out
sub
sahf
scas
fcomip
and
stc
popf
sbb
fcoms
popf
aaa
pop
xchg
push
subb
xchg
dec
int
outsl
faddl
dec
pop
and
mov
xchg
dec
cmp
and
pop
cmp
pusha
cli
int
lret
ja
in
and
stos
fwait
xor
pop
lahf
ret
into
mov
outsl
hlt
add
dec
and
fildll
test
subb
xchg
lcall
incb
pop
and
cmp
push
mov
xorb
add
cmp
fdivl
lock
cmp
rolb
loop
stc
aad
cli
sbbl
dec
addb
icebp
dec
neg
loop
inc
dec
fisttps
aas
pop
dec
fsub
sti
add
or
sub
test
bound
pop
arpl
push
mull
ror
iret
xor
lea
sarb
icebp
pop
bnd
jb
nop
mov
or
or
out
test
mov
flds
aam
cmpb
ds
add
outsl
mov
pop
shlb
adc
fcmovne
xor
and
xchg
sub
into
push
notb
shlb
addr16
loop
push
push
mov
push
xchg
pop
pop
sub
loopne
lret
pop
mov
push
gs
xchg
sarl
sbb
jg
jmp
jp
add
cmp
in
xchg
repnz
cmp
inc
or
enter
add
mov
mov
cltd
enter
ljmp
fbld
add
add
cmp
and
mov
or
movsl
or
rolb
inc
mov
pop
push
or
loopne
arpl
aaa
xor
ljmp
jae
jno
xor
inc
repz
inc
sub
in
sub
jmp
pop
inc
push
loop
xor
sar
add
xor
mov
js
xor
mov
cmpb
int
xor
subl
cwtl
fwait
push
test
adc
xor
pop
dec
adc
pop
stc
cmpsb
movsb
mov
imul
push
push
mov
data16
sbb
push
dec
push
add
inc
pop
imul
adc
sub
mov
sub
jno
hlt
aaa
jecxz
imul
jo
xchg
enter
mov
pushl
sbb
cmp
xchg
and
in
xor
fdivrs
das
mov
rclb
adc
add
mov
xor
jno
xchg
verr
repz
leave
subb
push
mov
adc
cli
push
cmp
inc
xlat
jge
cmpl
and
jle
sbb
cmp
cs
popf
adcl
lea
and
pop
lods
movsl
xor
repz
lret
push
sbb
daa
clc
mov
cld
dec
lcall
lret
adc
mov
mov
adc
in
in
out
adc
and
xor
loope
lcall
dec
push
cwtl
add
iret
jmp
sub
sbb
adc
xor
sbbl
sub
dec
dec
adc
loope
imul
test
sbb
xchg
adc
js
insl
ficompl
in
jmp
jl
cmp
pop
mov
cmp
testb
cli
pop
add
fdivrs
loopne
adc
mov
out
lock
rolb
clc
jbe
or
dec
push
nop
and
and
testl
inc
and
clc
sub
lods
daa
mov
inc
sahf
pop
ds
lcall
lret
and
sbb
enter
sbb
addr16
cltd
or
in
inc
mov
popf
jmp
adc
in
jne
jecxz
jl
push
add
lret
inc
ljmp
icebp
adc
fs
out
popa
push
and
mov
adc
loop
jnp
fsubrs
mov
sbb
popf
adc
outsl
or
mov
sbb
pop
mov
jmp
push
mov
add
xor
sub
xor
rclb
dec
adc
in
scas
jnp
dec
mov
push
lret
mov
mov
adcb
out
pusha
fucomi
orb
lea
push
ss
roll
sub
ret
or
push
fdivl
push
or
out
inc
push
and
nop
test
clc
add
pop
adc
aas
cmp
movlps
lcall
sbb
or
jg
fisttpl
pop
push
scas
stc
add
sbb
sub
or
sbb
clc
jnp
sub
push
push
and
cmpsb
add
icebp
and
or
in
mov
add
loopne
stc
sub
mov
pushf
xor
mov
push
jmp
sbb
lock
pop
pushf
dec
sub
pop
call
mov
orl
push
pop
pushf
jg
decl
cmpsb
jl
mov
and
jl
aam
mov
sub
adc
adc
pop
or
movsl
cmpsl
sbb
xor
test
repnz
lahf
test
push
adc
mov
mov
pop
sti
mov
outsl
xchg
add
pop
adc
pop
call
inc
add
in
cmp
jg
add
inc
clc
xor
xchg
pusha
push
pop
out
push
stc
repz
ja
cmc
out
add
jg
push
jnp
lods
push
and
mov
jg
es
cld
or
idiv
test
push
mov
dec
lret
movsb
ret
popa
lret
shll
push
out
sub
outsl
sub
xlat
push
xor
ljmp
loopne
mov
push
daa
sub
lret
popa
dec
repz
in
push
in
push
loopne
mov
sub
add
adc
or
andb
adcb
loopne
sarl
std
pop
popf
push
add
dec
data16
push
xchg
ljmp
xchg
cmpsb
js
add
xchg
add
cmp
and
call
inc
pop
cmp
xor
and
fnsave
outsb
in
repz
adc
cmp
jb
inc
dec
ljmp
lcall
and
out
scas
daa
movsl
pop
inc
dec
scas
and
lods
subl
in
jg
out
pop
push
adc
popa
xor
pop
pop
cwtl
mov
popf
push
add
jns
in
adc
sub
lds
out
popa
popf
cmp
xlat
mov
add
mov
inc
test
add
cmc
enter
imul
jg
les
fs
mov
mov
out
vpunpckhbw
popf
icebp
dec
add
xor
loopne
jg
mov
push
pusha
or
test
icebp
cs
cmpsl
outsl
pusha
add
xchg
pop
data16
adc
imull
push
inc
mov
pop
mov
add
movsb
pop
pop
lret
and
fsubrp
cld
mov
shl
jnp
mov
fmull
add
inc
lods
mov
jl
adc
jo
inc
roll
dec
adc
xor
fistpll
les
stc
mov
inc
notb
popf
cmp
in
sub
add
push
or
imul
pop
and
sbb
aad
mov
je
jnp
mov
xchg
lahf
adc
lcall
jecxz
xor
push
mov
jns
mov
sbb
pop
cmp
popf
sub
cmpsb
inc
xor
jp
into
test
push
es
ljmp
mov
inc
test
sub
std
adc
xchg
xchg
call
xor
pop
icebp
addr16
or
aaa
daa
xorl
das
sub
mov
or
repz
pop
repnz
mov
aaa
pop
mov
xchg
and
dec
insb
int3
outsb
mov
and
sbb
add
stos
ss
das
adc
and
mov
sbb
xchg
pop
mov
dec
push
jmp
ret
and
mov
push
out
add
loope
add
jns
stc
sbb
inc
cmp
add
shlb
cmp
add
addr16
rorl
sbb
dec
lea
jb
addr16
mov
sbb
adc
mov
mov
xchg
sbb
sahf
scas
insl
cli
lods
out
mov
cmp
inc
mov
jnp
inc
adc
into
jle
adc
test
pop
repnz
xor
jo
cli
aam
push
sbb
jno
xor
icebp
pop
fnsave
xchg
xchg
jnp
mov
add
or
sbb
test
push
add
mov
repnz
test
addb
pop
popa
out
xchg
imul
arpl
cmp
negb
je
mov
adc
add
faddl
repnz
pop
bound
xchg
and
mov
loope
in
arpl
call
jl
adc
fstps
push
lcall
add
lret
xor
or
jecxz
nop
je
rolb
push
pop
test
jo
lods
popa
dec
or
cmp
ret
sub
outsb
jno
add
inc
add
ds
les
mov
dec
andb
mov
imul
and
rcrb
and
test
jo
xchg
push
sti
mov
les
sbb
push
pop
lcall
dec
test
cwtl
and
lods
sub
or
push
sub
pop
cmpsb
pop
sub
inc
mov
xor
pop
call
or
pop
jne
and
xor
push
adc
imul
cmp
mov
mov
sub
adc
shll
sbbb
test
dec
sub
mov
inc
add
and
add
insl
filds
lret
mov
pop
xlat
pushf
stc
and
mov
popa
cmc
mov
ds
mov
jne
add
xchg
sub
test
cs
popf
sub
das
add
sub
mov
and
mov
add
cltd
mov
and
mov
sub
mov
jle
inc
iret
mov
in
in
push
stos
in
xchg
test
or
jnp
pop
jmp
ficompl
push
in
aaa
adcb
movsb
daa
mov
inc
add
inc
or
lock
adc
add
xchg
sbb
and
call
lds
sub
adc
loopne
pop
lret
push
mov
inc
xchg
jg
dec
cltd
mov
pop
lahf
dec
hlt
inc
cltd
mov
outsb
pop
sbb
pop
aad
jmp
mov
arpl
push
mov
mov
cli
lods
or
dec
fistps
mov
and
cld
int
shlb
ffreep
xchg
or
out
inc
cld
or
lods
sub
sbb
stc
lock
in
add
fcmove
xchg
pop
stos
jmp
xchg
imul
pop
rorl
adcl
sbb
ja
dec
rcrb
xchg
xorb
jl
ficompl
jg
fiaddl
push
not
adc
pop
repnz
cmp
shrb
fistl
movsl
mov
jp
popf
add
mov
sub
xor
pop
adc
sub
insb
jmp
cmp
add
jae
xor
xchg
xchg
or
adc
imul
add
clc
js
ss
push
andb
daa
dec
inc
or
es
sbb
push
inc
movsb
pop
cmpsl
loopne
packsswb
aam
cmpsb
push
xor
inc
call
xchg
pop
adc
cli
sahf
call
and
hlt
lret
adc
push
ljmp
das
in
push
stos
outsb
sub
out
fsubrl
stc
dec
or
popf
add
loopne
pop
sarl
out
adc
mov
pusha
mov
adcl
pop
aaa
sbb
mov
push
bound
pop
push
and
fimuls
mov
inc
jne
add
ds
je
xchg
adc
sub
std
sbb
or
outsl
test
fldl
leave
nop
jne
jno
fsubs
lds
popa
nop
adc
push
add
fcomi
cmovb
outsb
inc
or
fs
fdivl
enter
add
mov
cmc
or
jo
add
inc
push
popf
pop
adc
push
adc
loopne
inc
dec
xchg
test
push
mov
pop
cmp
int3
nop
lahf
add
mov
je
add
mov
pop
jmp
repnz
add
loope
fbstp
cwtl
xchg
push
and
aam
lea
in
aaa
mov
xlat
xchg
jb
fistpll
jb
adc
or
aas
nop
dec
dec
adc
cmp
andb
mov
xor
or
in
std
jne
scas
push
push
pusha
out
mov
xchg
push
dec
cmp
mov
mov
scas
xchg
sub
fcomp
mov
inc
lods
loop
mov
rorl
pop
xor
push
stos
ss
push
dec
xchg
add
cmp
scas
cmp
inc
cmp
sub
mov
xchg
jne
pop
mov
and
les
cmp
cld
cwtl
adcb
and
mov
add
push
add
mov
pop
jnp
cld
add
and
rcll
std
inc
test
mov
shrl
int
mov
adc
mov
movsl
cli
stos
stos
out
add
push
push
das
repz
pop
mov
pop
int
loopne
mov
jmp
mov
test
mov
stc
daa
lods
sbb
out
or
sbb
mov
pop
popa
sub
cmp
ret
dec
testb
add
cmp
push
pop
ret
popf
push
js
add
fcmovnbe
mov
shll
mov
fisttps
mov
inc
xlat
add
jno
inc
scas
sbb
cmp
mov
fcompp
adcb
ret
daa
cltd
and
adc
push
add
xchg
hlt
dec
inc
or
adc
out
and
rcr
push
mov
sahf
test
out
add
inc
jne
sub
mov
xchg
repz
add
aaa
xchg
int
inc
inc
aam
in
push
jge
xor
dec
pusha
repnz
leave
push
add
js
mov
xchg
pop
push
popf
add
add
or
mov
jl
sub
xchg
dec
test
pop
in
movswl
fisubl
fisttps
inc
ds
shl
movsl
jnp
push
add
jp
xor
or
stc
cmp
or
mov
insl
aad
iret
jnp
mov
push
popf
jo
daa
movsb
pop
push
lret
cmc
mov
add
in
mov
popf
or
mov
or
jbe
faddl
adc
and
pop
inc
push
fcomi
adc
aaa
pop
cmc
push
outsl
add
fcmovne
or
xchg
sbb
xchg
int3
in
add
pusha
add
imul
cmpsl
testl
mov
popa
cs
enter
mov
subb
ljmp
dec
pushf
js
or
sbb
call
ret
dec
enter
addr16
adc
mov
mov
xchg
cmp
mov
rorl
dec
add
es
xor
loopne
xor
add
sbb
dec
aas
out
popa
add
xchg
jb
pop
sub
jnp
fistps
and
mov
test
push
push
decl
popa
test
push
or
mov
cmp
jle
xor
out
dec
mov
call
loopne
cmpsl
cmp
push
jnp
movsb
lods
add
jmp
add
orw
loope
repnz
mov
cs
fwait
div
add
stos
mov
aad
loope
stc
nop
cwtl
pop
push
push
add
fwait
pushl
je
jge
cmc
popa
pop
inc
pop
lods
int
inc
xchg
jae
jg
sbb
cmp
stc
in
mov
stos
lods
dec
dec
inc
std
test
test
xor
out
push
lds
mov
test
movsb
push
pop
in
push
dec
mov
mov
daa
fstl
pop
leave
in
sub
xchg
data16
xchg
adc
nop
out
daa
sbb
push
push
ds
movsl
orb
sub
and
add
add
mov
mov
xor
enter
mov
testl
notb
sahf
and
cmpsl
add
inc
into
mov
adc
sub
rcll
mov
push
hlt
je
mov
int3
jo
xchg
jle
mov
fimuls
rolb
push
xchg
les
jb
add
push
in
sub
js
movsl
dec
mov
jmp
xchg
mov
pop
mov
mov
push
inc
mov
fsubr
mov
push
mov
cwtl
shll
inc
xorl
mov
mov
and
push
shlb
adc
cmp
fwait
push
mov
add
mov
sti
mov
jo
jg
jb
add
inc
rcrb
shl
xor
mov
iret
lods
pop
xor
mov
jg
mov
push
sbbb
jo
jge
stc
lea
jg
roll
cs
pop
push
pop
sti
add
xchg
pop
xor
popa
je
add
pop
push
dec
popf
jbe
jo
jns
mov
cmp
addb
lods
jp
movsb
imul
das
xchg
sub
test
inc
es
cmp
jno
into
bound
fs
xchg
addb
push
sbb
lahf
adc
aad
lea
ficoms
adc
roll
sbbb
in
movsl
add
stos
pusha
mov
or
sbb
add
or
or
rorl
repnz
adc
test
adc
stc
pop
push
aas
inc
lahf
xor
subb
and
insl
pop
leave
jne
push
add
sub
in
ror
sbb
jmp
pop
popa
cmp
hlt
push
popa
mov
mov
or
mov
sub
in
mov
inc
adc
sbb
clc
cmp
add
mov
or
jge
popa
aaa
rcll
push
add
mov
adc
into
xor
xchg
push
in
addr16
mov
imul
mov
popf
dec
dec
mov
jge
adc
or
fisubl
cmp
out
std
pusha
inc
gs
sbb
xchg
pop
xor
mov
adc
add
add
call
das
mov
xor
sbb
icebp
test
add
mov
stc
cld
adc
pop
shr
or
out
shr
xorb
icebp
pop
subl
sub
iret
fcomps
add
cmp
mov
mov
xchg
rcrb
push
adc
jo
inc
arpl
stc
popa
mov
adc
jne
cld
loope
sub
or
or
cltd
lock
and
adc
shl
or
sub
xchg
mov
das
inc
xchg
adc
xchg
rcr
mov
pop
lcall
scas
pop
stos
faddp
rcl
inc
sub
nop
sbb
or
insl
xor
fstps
cltd
push
cmp
cmp
pop
lods
inc
or
push
loop
shll
inc
orl
push
jne
loopne
add
mov
imul
pop
sbb
jno,pn
lar
jne
and
cmc
jmp
es
pop
jge
push
rorb
pop
or
add
xchg
sbb
adc
shl
fimull
add
addr16
xor
pushf
hlt
inc
jns
int
pop
jne
stos
cld
es
pop
lret
ret
ss
dec
mov
loope
mov
ja
and
pop
mov
aas
out
cmp
adc
mov
xor
push
hlt
or
mov
hlt
loope
adcb
mov
cltd
popa
sbb
repnz
ja
imul
jns
add
cmp
stos
shlb
pop
mov
fisttpl
adc
into
andb
test
cli
flds
mov
movlps
add
notb
dec
sbb
test
push
imul
dec
inc
lods
dec
cmp
add
lock
xchg
pop
xor
ja
and
pop
popf
sbb
pop
or
sub
int3
jmp
in
in
sbb
loop
mov
mov
in
pop
mov
pop
mov
fdivs
mov
adc
jmp
push
pusha
call
rorb
test
gs
jl
out
add
or
scas
mov
sub
les
add
gs
setbe
ret
shll
into
push
lahf
pop
popa
and
fiadds
cmp
lret
ss
notb
cmpsl
ror
aas
ficoml
rcll
or
pop
sub
push
xor
inc
dec
adc
push
stos
mov
mov
popa
sbb
or
xchg
push
mov
jge
shrl
ficoml
adcl
ret
push
out
shrl
mov
and
movsb
jb
loopne
add
movl
mov
sub
pop
mov
dec
inc
loop
sbb
lock
push
xor
pusha
fimuls
imul
add
or
lret
jle
add
xor
test
dec
mov
pop
cld
sbb
aas
add
popa
hlt
shll
mov
cmc
jnp
add
mov
scas
pop
mov
push
nop
pushf
les
sahf
clc
pusha
add
add
popl
mov
fdivrs
jp
mov
add
pushl
jp
andb
and
ffreep
mov
mov
and
in
out
out
mov
push
cmp
adc
push
jmp
mov
lret
pop
jae
fsubrs
adc
fisubs
mov
insl
adc
jae
pop
mov
dec
jmp
call
loop
add
jp
xor
jns
push
mov
dec
cld
loop
lock
pop
outsl
push
aaa
in
jg
add
xchg
dec
ret
sub
out
mov
popf
in
lret
in
data16
sbb
stos
shll
push
inc
mov
cltd
cmp
loope
or
sub
int
inc
sbb
stc
fsubrs
cmp
pop
sahf
jp
insb
in
jnp
mov
sbb
subb
cmp
add
or
xchg
mov
test
cmp
inc
repnz
mov
lea
lods
mov
cld
sub
pusha
xchg
mov
add
nop
shrb
test
test
add
lods
cltd
xchg
sbb
pop
repz
bound
sub
test
and
and
inc
sbb
lret
jo
fsubl
or
jb
stc
adc
data16
mov
or
sub
adc
rcrl
andb
mov
or
xor
xchg
lret
aad
jge
les
or
sub
inc
and
mov
out
ja
mov
mov
daa
in
fsubl
cwtl
push
aas
rolb
insb
mov
cmp
xlat
mov
lods
test
lods
jmp
xchg
jbe
mov
sub
icebp
cmp
xchg
js
add
ljmp
test
movsb
add
xor
pusha
xor
jl
sarb
push
pusha
in
lods
adc
mov
xchg
jno
cmp
push
loope
out
mov
xor
stc
popf
dec
mov
in
sbb
clc
aam
loop
sbb
and
and
je
push
aam
out
mov
js
lds
imul
movsl
mov
pop
cli
inc
jbe
sbb
rorb
cltd
adc
xchg
or
xchg
jl
xor
fldcw
imul
dec
sub
xchg
mov
fildll
inc
jge
sub
sub
cmp
dec
popf
jne
xchg
cmp
imul
lock
xor
dec
fildl
in
add
push
fsts
loopne
pusha
add
mov
jmp
inc
push
inc
loop
adc
push
cmpsl
lret
pop
and
sarb
cs
adc
ret
fcompl
xchg
pop
add
sub
stos
xor
mov
fwait
xor
shl
stos
outsb
test
popf
test
cmp
cld
stos
stc
inc
ja
jecxz
out
jnp
subb
fmull
xor
je
mov
mov
ret
pop
int
jo
mov
les
js
lods
jmp
mov
xchg
mov
aam
inc
out
int
jbe
xchg
rcll
loopne
push
mov
dec
fsub
lret
adc
out
xchg
add
loopne
lret
push
testb
add
mov
leave
xchg
adc
or
call
sub
jl
pushf
mov
lods
or
cltd
sbb
sbb
add
test
push
add
pop
mov
cmpb
in
je
or
lods
pop
sub
add
adc
rclb
cld
insl
movsb
ficoml
xlat
cld
push
mov
call
inc
jb
and
push
and
inc
ret
jnp
push
out
adc
pop
jmp
rclb
push
mov
push
out
ror
lods
rorl
lea
imul
mov
pop
mov
and
ficomps
mov
shll
lea
cmp
fdivr
icebp
nop
xor
cmpsb
mov
dec
push
jge
cmc
pop
jb
mov
xchg
cmpps
mov
and
fstpt
mov
lea
cmp
cmp
lods
jns
add
loope
lret
in
add
fstps
push
jmp
aas
mov
and
xor
sub
popf
push
shrl
adc
sbb
jb
lock
mov
adc
dec
sbb
imul
mov
popf
mov
or
fistpl
and
inc
sub
mov
inc
mov
add
cltd
popf
adc
cltd
rolb
mov
cmc
popa
pusha
cmc
and
mov
and
testl
mov
cmp
jge
hlt
or
aad
sti
mov
daa
test
mov
popf
aad
aaa
test
adc
push
add
insb
sbb
add
mov
and
and
and
or
push
pop
dec
cld
loop
or
cli
arpl
jne
mov
movsb
leave
inc
push
les
sub
mov
and
fcoml
sbb
test
add
sbb
loopne
clc
mov
xlat
mov
test
xchg
lods
out
ret
add
pop
push
pop
repnz
mov
push
add
pop
addr16
mov
jo
orl
push
xchg
add
xchg
jp
or
test
mov
lret
addr16
xchg
xchg
xor
es
add
push
outsl
inc
cwtl
sub
sub
sbb
stos
and
pop
enter
out
add
das
lcall
ja
pop
mov
inc
jno
inc
xor
push
hlt
push
and
fisttpl
jge
push
xor
loope
push
xor
inc
inc
or
lds
jbe
cmc
add
or
xor
or
sbb
pusha
ficoms
xor
pop
mov
popa
xchg
or
repnz
mov
in
out
or
imul
push
pop
xchg
mov
sbb
push
gs
cmc
sbb
nop
mov
hlt
pusha
or
or
aaa
loopne
add
lods
fwait
jb
or
scas
dec
icebp
cmp
ret
insb
scas
pop
cmp
or
bnd
pop
cmp
adc
and
push
or
or
mov
fildll
fcmovnb
rcr
bound
mov
pop
sahf
aad
mov
mov
or
xor
pop
adc
rclb
subb
lods
sahf
pop
and
dec
xchg
or
popf
icebp
sbb
test
insb
std
and
jmp
mov
push
jg
adc
sub
outsl
imul
lea
popf
sti
adc
dec
push
repnz
rcll
fwait
pop
aad
rorb
jne
enter
xor
mov
pop
xchg
jle
mov
out
inc
pop
in
sarb
xchg
dec
mov
bound
or
and
inc
daa
add
xor
add
mov
push
add
xor
push
add
mov
sub
lret
dec
frndint
movsl
les
stos
xor
popa
fs
inc
add
fnstenv
stos
enter
xor
lds
aaa
add
cwtl
cmp
jecxz
frstor
pop
fcmovnb
popf
jmp
jne
push
and
sub
out
add
adc
test
fists
shrb
test
adc
or
insb
pop
lods
xchg
or
aam
sbb
inc
dec
jmp
repnz
add
sbb
add
sbb
lahf
sub
push
popa
mov
or
dec
cwtl
nop
jb
add
vmovdqa
iret
enter
mov
or
or
push
push
cld
rolb
repnz
cld
lcall
aas
mov
andl
pusha
cmp
sahf
or
push
out
push
leave
dec
adc
in
jecxz
ljmp
mov
push
add
xor
ljmp
mov
ss
lods
xchg
xchg
and
pop
mov
clc
cs
outsl
push
movsl
out
out
in
xor
and
test
pop
pop
mov
cmc
lea
adc
aaa
ret
daa
shll
jmp
add
popf
shrl
iret
and
les
sub
mov
add
aad
mull
movsl
lret
xchg
loop
push
cmp
leave
jp
out
jl
jns
dec
test
nop
inc
cltd
xor
pop
xor
sub
test
add
in
adc
and
sub
mov
push
jecxz
inc
std
lock
jge
imull
mov
inc
push
fwait
mov
pop
lret
adc
pop
sub
in
scas
fwait
enter
mov
xchg
insb
cld
sbbb
movsb
dec
cmp
sti
or
clc
inc
jae
add
mov
pop
int3
out
xchg
cwtl
leave
cltd
popf
adc
dec
lret
adc
dec
shl
adc
das
dec
repz
xor
outsb
mov
dec
push
add
jae
popf
mov
aaa
pop
xor
add
roll
insb
mov
pop
mov
add
movl
pop
cmp
jmp
lods
xor
daa
push
loope
adc
inc
addr16
sbb
mov
jle
add
arpl
mov
adc
jl
push
insl
jb
pop
mov
out
add
push
mov
mov
mov
dec
cwtl
sbb
mov
sub
arpl
add
in
xchg
xchg
push
dec
add
fcompl
inc
adc
movsl
shlb
repnz
popa
lods
test
and
sub
and
sub
rcrl
xchg
jle
add
inc
and
cld
xchg
out
test
js
jne
xor
cli
or
adc
adc
sbb
push
sbb
cvttps2pi
xor
mov
and
mov
lahf
mov
outsb
and
repz
push
dec
pop
jns
add
adc
mov
clc
or
mov
jge
mov
add
roll
inc
mov
aaa
dec
add
xor
sbb
push
cs
and
sub
xor
lcall
cs
adc
add
mov
inc
movsb
sti
das
lds
jecxz
scas
jle
add
aaa
jb
push
dec
push
add
in
sbb
add
arpl
call
out
das
sbb
and
push
call
cld
jne
imul
push
add
mov
pop
add
jb
mov
add
sub
mov
xor
mov
pop
mov
roll
xchg
and
scas
mov
sub
mov
js
sub
in
shrl
stos
pusha
push
popf
sbb
xchg
repz
sbb
dec
dec
out
push
and
movsl
cld
repz
je
inc
rclb
add
inc
fstl
enter
cli
nop
lahf
jl
pop
xlat
dec
adc
or
jns
test
add
xchg
fisttpl
not
cmc
sti
xchg
or
out
add
dec
cmpsb
pop
lcall
push
repz
cmc
pop
push
loopne
std
movsl
nop
adc
push
mov
xchg
xchg
lahf
jnp
pop
xlat
insl
bound
pop
out
inc
or
dec
clc
mov
add
mov
je
add
stos
mov
mov
dec
xor
sar
cmp
push
pop
add
repnz
add
xchg
xlat
fdivl
sbb
out
adc
jl
adc
or
aaa
stc
add
dec
pop
push
movsb
sti
mov
or
pop
ret
xchg
in
pop
es
sahf
loope
sbb
pop
insl
jne
mov
pop
sti
jmp
push
xor
mov
mov
lcall
outsl
xchg
add
dec
mov
pushl
xchg
mov
xchg
xor
add
jno
cwtl
sub
lret
popa
cmpsl
ret
aaa
add
int
repnz
ret
add
insb
sub
pop
daa
repz
pop
sub
lea
push
mov
pop
scas
or
std
mov
add
out
xchg
fcmovnb
xor
test
mov
and
mov
mov
or
dec
xchg
mov
sub
add
jne
jle
lcall
push
nop
sub
xchg
xor
push
dec
dec
outsb
aaa
mov
test
mov
inc
and
mov
pop
add
and
int
sahf
add
mov
xchg
decl
and
add
xor
xor
gs
outsb
mov
mov
idiv
push
mov
cld
call
adc
mov
cmpsl
arpl
mov
sbb
stos
inc
add
xchg
loope
xlat
jae
adc
sub
pop
popa
sub
mov
jmp
and
fistpl
mov
rcrl
jp
sbb
ds
out
add
adc
cmp
adc
mov
fsubrp
adc
aam
aas
mov
xor
and
inc
sbb
xor
gs
outsb
jnp
sbb
popa
push
push
dec
aam
and
jno
ret
and
rorb
add
pop
mov
xchg
ja
hlt
xchg
outsb
movl
xor
js
jno
jo
lods
add
outsl
cmp
push
dec
test
mov
pop
and
inc
add
rorb
mov
icebp
aad
inc
sub
ja
cs
cmpsb
or
adc
aad
repnz
test
ss
sbb
push
pusha
cmpsb
adc
popf
and
pop
dec
loopne
or
xchg
inc
cld
or
sub
and
xchg
mov
sub
xor
sub
adc
adc
add
pushf
or
pop
mov
add
xchg
xchg
repnz
nop
inc
jge
add
sub
mov
lret
mov
jnp
xor
xchg
pop
movsl
nop
mov
in
or
ja
sub
ret
mov
mov
test
sarb
sahf
dec
mov
cli
pop
test
xchg
xchg
mov
pop
hlt
lret
loopne
daa
sub
aam
mov
and
add
lea
xchg
cmp
adc
fisubrl
push
pop
aam
fisubrs
ret
add
inc
or
imul
sbb
orl
and
stc
or
push
xchg
mov
inc
js
mov
fs
lret
fptan
jg
pop
pop
lret
or
filds
add
out
cmp
dec
mov
lock
jp
clc
mov
shl
jne
jbe
pop
jnp
push
adc
push
repz
add
lea
add
and
sarb
xor
and
fldcw
enter
dec
lds
xchg
jle
mov
pusha
jg
sbb
xchg
push
add
sub
xor
popf
sbb
movzwl
daa
rorl
adc
mov
or
clc
in
and
mov
fnstsw
xor
and
ljmp
shll
sbb
or
add
and
int3
rcll
out
incb
mov
mov
pushf
enter
push
pop
push
loop
stos
push
xchg
fs
lds
repz
sub
sbb
pop
mov
popa
add
icebp
push
scas
insl
mov
jne
loopne
imul
rcll
dec
add
lret
es
pop
pop
in
fcmovu
rcrl
cmp
cmp
jmp
sbb
ret
xchg
jmp
mov
adc
mov
inc
out
xor
lea
loopne
add
sbb
mov
mov
mov
cmc
out
mov
sub
jge
push
shlb
hlt
pop
cld
imul
and
mov
test
pop
loopne
call
aaa
loopne
mov
fisttps
lcall
lea
add
pop
xchg
fistpll
inc
add
int3
pop
pop
mov
add
fdivr
faddp
mov
jo
shlb
cmp
scas
push
ljmp
push
pop
adc
mov
test
mov
dec
inc
pop
xchg
mov
mov
popf
and
mov
shll
add
rcr
jae
dec
mov
inc
jb
scas
hlt
dec
add
inc
adc
mov
outsb
dec
mov
add
out
loop
xchg
or
add
lret
mov
inc
jo
xor
pop
popa
pop
xor
dec
xor
neg
repnz
test
std
cmp
jnp
shll
cmpsl
adc
nop
jb
divb
in
jnp
and
dec
insl
testb
arpl
lret
mov
nop
icebp
fsubrl
add
sbb
rcrb
test
cmp
sub
ja
movsb
gs
sbb
push
sub
popf
inc
cmpsl
adc
xor
adcb
lahf
dec
sbb
loopne
repz
pop
jno
add
into
dec
jge
inc
pop
out
pop
push
sbb
pusha
and
push
mov
or
rcr
add
mov
and
pop
std
cmp
jae
push
xchg
cmpsb
xchg
pop
int
jl
daa
test
dec
push
pop
dec
jp
adc
incb
jo
ret
mov
rol
mov
notl
xor
mov
mov
sub
int
fbstp
and
sbbb
addl
jae
mov
out
les
sbb
into
pop
pop
pop
pop
test
mov
rcll
push
jno
call
pop
cwtl
push
sub
sti
xchg
aam
mov
add
push
mov
sub
jmp
adc
mov
and
adc
imul
ret
mov
push
mov
xchg
sbb
dec
bound
int
jp
add
mov
sub
add
call
lret
inc
jbe
push
cmp
test
sbb
pop
adcb
add
jmp
xor
jecxz
mov
mov
ds
aad
mov
loopne
jns
dec
jne
adc
pop
in
rcrb
pusha
add
jnp
jmp
mov
rcll
and
fucomip
mov
xchg
push
int3
and
aas
je
cmp
mull
outsb
lcall
jno
push
out
sbb
sbb
add
leave
movsl
es
cwtl
mov
shlb
mov
mov
sub
or
imul
xor
popa
pusha
push
push
pop
xchg
inc
inc
pop
in
xchg
or
addr16
enter
sub
xchg
mov
ljmp
clc
icebp
pop
jo
movsb
clc
sub
hlt
mov
jbe
dec
loopne,pt
aam
out
outsl
push
cmp
sbb
shl
mov
ja
sbb
or
sti
mov
mov
fidivrl
fdivp
cmp
iret
scas
jnp
add
pop
orl
pop
std
outsb
or
shll
lods
mov
jmp
lret
data16
out
out
add
dec
push
clc
jbe
pop
pop
mov
xchg
pushf
fidivrl
mov
sbb
pop
or
lahf
adcb
dec
xchg
or
orb
or
mov
sbb
add
mov
outsb
loop
adc
arpl
add
arpl
sub
sbb
and
mov
push
pop
je
fs
out
addr16
mov
jl
adc
cmpsl
outsb
mov
jmp
movsb
jnp
xor
inc
leave
movsb
xchg
fildl
aaa
pop
and
inc
xor
ljmp
outsl
pusha
and
and
inc
testb
pop
lret
pusha
jne
or
mov
push
pop
add
cmp
aam
rcrl
mov
mov
xchg
rolb
or
jo
dec
inc
or
push
add
cwtl
js
xchg
push
or
mov
cmp
dec
aam
pop
insb
cmp
shrb
or
mov
mov
pusha
daa
mov
daa
lret
pop
rcr
mov
push
sub
in
sbb
adc
jbe
xchg
mov
inc
popf
leave
xor
enter
xchg
xor
adc
add
mov
sarb
xor
xchg
dec
lock
adc
mov
or
shr
inc
in
xor
add
fwait
jnp
sub
push
jbe
movsb
and
pop
mov
jmp
mov
out
lcall
pop
sahf
sub
adc
mov
xchg
pop
test
sub
adc
incb
adc
lds
cli
test
fnstsw
mov
movsb
or
mov
fistpll
mov
jp
pop
cwtl
insl
xchg
push
xor
in
enter
dec
mov
lret
mov
test
inc
sbb
and
insl
mov
pop
ret
xchg
xchg
mov
arpl
mov
push
jl
add
dec
adc
xchg
xor
addl
xor
test
scas
testl
inc
pop
cltd
or
stos
pop
fs
je
movsb
mov
adc
sbb
imul
movsb
in
or
popf
xchg
sbb
add
mov
pop
stos
push
mov
imul
xchg
add
and
lret
mov
or
outsb
mov
out
jmp
mov
test
mov
lds
pop
xchg
fldenv
cmp
add
testb
mov
popf
mov
sub
pop
add
outsl
jge
loop
adc
mov
mov
lret
std
movsl
shll
fwait
add
add
and
out
popa
notb
add
lods
data16
add
pop
pop
in
movsl
insl
ljmp
adc
mov
jp
jg
or
aas
fs
inc
movsl
inc
mov
clc
or
cmp
in
jno
scas
out
mov
and
andl
cmp
adcb
fldl
data16
subb
sub
out
inc
in
sti
popf
test
push
mov
cli
push
dec
nop
mov
add
dec
xor
adc
iret
mov
mov
and
mov
mov
and
pop
add
adc
les
add
jp
cmpsb
xchg
rcrl
pusha
sub
fldt
sahf
pop
das
rclb
ja
pop
movsb
ja
repz
mov
pusha
loop
cmpsb
mov
std
pop
jb
clc
add
mov
jecxz
test
loop
sbb
xorb
out
push
xchg
rcr
addl
xor
or
fsub
cmp
insl
mov
clc
or
loopne
pop
inc
xor
add
xor
cmc
jno
cs
and
sub
cmc
sub
jmp
jo
lret
data16
add
loopne
inc
pmaxub
insl
sbbl
insb
add
adc
cmp
sbb
mov
shlb
lcall
fidivl
stos
add
and
mov
dec
pop
mov
jns
mov
decl
inc
sbb
inc
add
adc
push
ret
mov
jg
adc
fsub
push
daa
xor
inc
pop
out
aad
dec
xchg
fistl
xor
cltd
dec
nop
mov
call
adc
or
imul
add
push
fisubrs
pusha
and
push
dec
andl
pusha
and
imul
test
int3
add
out
inc
mul
add
push
push
inc
pop
filds
xchg
dec
les
mov
flds
and
xchg
mov
stc
mov
sub
icebp
imul
fs
add
xchg
and
sub
pop
sahf
lods
pushl
mov
fistpll
daa
mov
fiadds
andb
fcoml
lret
mov
mov
mov
movsl
or
sbb
inc
loope
sahf
mov
mov
sub
cmc
mov
in
fstps
or
push
stos
mov
testb
repz
adc
mov
xor
pop
imul
or
int
mov
clc
test
es
pop
add
cli
cmp
dec
or
addl
dec
sub
dec
push
lret
jb
mov
std
sbb
popa
xchg
sbb
inc
adc
lea
sub
and
xchg
mov
push
add
fwait
lds
xchg
inc
xor
cwtl
setle
add
adc
add
sti
cltd
mov
ret
nop
mov
sub
fbstp
mov
push
neg
jb
mov
movsb
xchg
in
in
fidivrs
lds
sub
jns
inc
cld
scas
fidivrl
or
repnz
out
mov
pop
add
jo
add
push
test
pop
mov
fdivr
sbb
add
scas
ljmp
and
fiadds
add
xor
pop
int3
sbb
adc
lods
icebp
inc
ret
add
dec
lret
dec
fiadds
fsubrl
push
cmc
jp
sarb
mov
add
push
push
mov
test
xlat
test
sbb
hlt
in
add
mov
cwtl
rcr
repz
or
push
movsb
mov
aas
sbb
lahf
andl
out
cmp
jnp
add
adc
sub
xchg
sbb
adcl
add
mov
fbld
repnz
jp
in
adc
xor
mov
push
jnp
cwtl
pop
xchg
xchg
xor
roll
and
sbb
sbb
orb
cld
push
jmp
or
cmc
mov
test
jbe
jno
jnp,pt
add
add
insb
cmp
sub
fmull
pop
jne
sub
in
mov
loop
xlat
push
out
cmpsl
adc
fbstp
jae
das
or
repnz
mov
mov
lods
nop
mov
push
outsl
popf
dec
xor
xor
call
stos
and
sahf
inc
addr16
sbb
jno
add
inc
xor
sub
jo
xchg
ficoms
aas
and
and
jno
or
sub
fstps
sbb
cld
stos
sbbb
outsb
loope
and
outsb
lods
xor
mov
out
or
aad
jge
sub
loope
push
pusha
aas
mov
shlb
push
pop
imul
pop
mov
cli
pushf
add
js
adc
mov
xchg
ljmp
mov
cmpsb
jo
sub
inc
testl
jns
push
pop
pop
insb
jle
and
sbb
je
jecxz
dec
mov
hlt
sub
jno
frstor
ds
dec
in
inc
adc
mov
lock
cmp
les
sub
popa
pop
xor
adc
push
dec
pop
testl
mov
and
pop
jne
popf
sub
aad
lods
pop
add
loopne
xchg
dec
nop
and
fdivr
push
push
push
enter
clc
push
adc
pop
nop
out
loop
insb
mov
test
sub
pushf
loopne
adc
jmp
adc
icebp
add
cmpsb
sub
sub
call
movsl
mov
mov
adc
popf
bound
dec
out
push
push
pop
or
mov
test
and
mov
add
adc
mov
imul
clc
add
mov
pop
and
les
jne
aam
mov
mov
add
jns
or
cmpsb
and
fldl
pop
add
mov
sub
cmpl
add
jns
call
test
dec
bound
lds
push
fsubr
faddl
mov
dec
lods
and
sti
fidivs
mov
mov
push
rorl
xlat
xchg
sub
fchs
dec
cmpsl
mov
cmp
adc
movl
aaa
sbb
addr16
pusha
jo
pop
pop
in
adc
push
int3
lea
or
testb
mov
adc
inc
add
inc
cmp
out
and
outsl
xchg
push
pop
mov
pop
movsl
call
sub
xor
cli
sbb
push
aam
xchg
mov
push
inc
xor
add
adcb
jmp
fimuls
add
mov
pop
js
adcb
cmp
mov
and
add
xchg
push
add
gs
and
out
daa
dec
mov
add
repz
cli
add
sbb
mov
stos
cmpsb
adc
in
fsubs
and
xor
leave
mov
pusha
xchg
rcr
sbb
movsl
add
popa
jmp
inc
pop
mov
clc
test
cld
std
cmp
inc
xor
dec
jl
idiv
lock
push
in
hlt
adc
mov
pushf
in
mov
outsl
dec
add
mov
xchg
or
call
push
dec
das
push
rol
imul
fdivl
in
push
dec
adc
cmpsl
push
in
ja
sbb
mov
xchg
mov
or
pushf
sbb
push
mov
shrl
aas
and
jle
or
int
inc
data16
rcrl
es
popf
sbb
es
rolb
ljmp
arpl
lret
das
popf
xor
push
xchg
mov
lods
xchg
adc
out
pop
mov
cli
lcall
xlat
stc
xchg
inc
in
jmp
sbb
loope
push
test
int
dec
jmp
aam
sub
xchg
pop
arpl
lods
push
jo
fs
sub
movsb
add
add
outsl
mov
sbb
add
loope
push
leave
sub
mov
adc
cld
adc
pop
sbb
test
lods
insl
clc
pop
daa
xor
inc
cmpsb
adc
adc
push
pop
jle
test
mov
test
scas
outsb
lret
in
xchg
cmpsl
or
dec
fsubr
scas
sub
mov
int
sbb
or
test
dec
inc
cmp
outsl
fldl
in
mov
mov
xor
addr16
jmp
mov
xlat
aad
xchg
popa
push
idivb
add
mov
mov
pop
push
push
pop
rorb
jmp
sahf
rdtsc
scas
xor
xchg
and
ficoms
fimull
fstpl
cld
xor
pop
in
dec
mov
cltd
cmp
or
scas
shl
dec
fsubp
and
cmp
sbb
out
jne
hlt
sub
mov
or
mov
jae
loop
jbe
movsl
std
mov
and
loopne
xor
xor
int
mov
frstors
aam
les
cwtl
scas
or
mov
sub
lea
repnz
pop
and
adc
adc
sub
aad
sti
adc
or
mov
gs
dec
push
adc
mov
xchg
adc
orb
jae
mov
sahf
mov
lock
fcomps
out
pop
neg
leave
and
xchg
lock
stc
test
rcrl
imul
pop
imul
push
sub
rcrb
mov
sbb
inc
icebp
push
pop
dec
mov
nop
push
mov
insl
mov
data16
fistps
incl
test
push
sub
mov
and
xorl
sbb
or
movsl
cmp
pop
mov
dec
add
clc
imull
test
pop
nop
push
gs
addr16
push
pusha
test
addr16
inc
add
pop
push
push
test
xchg
repz
add
xchg
jbe
inc
add
pop
shll
out
mov
nop
cmc
fs
mov
repnz
jno
mul
rorl
clc
or
sub
mov
ljmp
call
das
sub
cmp
outsl
jmp
js
add
push
dec
pop
outsl
into
jge
movd
and
add
adc
mov
push
or
mov
call
jmp
xor
mov
and
loopne
std
ret
add
lahf
jae
lods
rcrb
daa
leave
or
pusha
adc
xchg
mov
jle
push
add
xor
dec
jns
dec
into
mov
add
xchg
and
jl
sub
mov
ljmp
pop
xchg
dec
fs
add
or
cmp
mov
lds
pop
adc
int3
push
bound
scas
adc
push
out
mov
xchg
mov
mov
ret
stc
pop
sbbb
mov
jl
mov
lahf
mov
xchg
xchg
adc
cmp
fcomps
xchg
cld
jg
call
mov
xchg
lods
ret
pop
sbb
cmp
frstpm(287
test
pop
iret
dec
fidivs
mov
jmp
mov
ret
push
cwtl
ja
scas
add
dec
sbb
pusha
imul
lods
jbe
mov
test
pop
enter
sbb
lods
xchg
lds
shlb
test
stc
scas
fnstcw
imul
pop
jmp
mov
xchg
fwait
dec
movsl
sti
adc
pop
rcll
xchg
inc
icebp
sti
fsubs
mov
dec
adc
cmp
push
sahf
fldl
jns
xor
mov
and
ja
pop
dec
aad
dec
cli
jg
dec
jmp
xchg
das
jb
mov
add
or
push
add
dec
imul
and
insb
mov
stc
push
pop
push
inc
adc
lea
ret
sub
data16
pop
jecxz
scas
dec
mov
mov
pop
mov
mov
pusha
mov
inc
adc
in
aad
push
pop
or
push
faddl
cmc
scas
inc
test
xor
adc
enter
mov
or
xor
sub
mov
cmp
pop
fbld
popa
stc
cltd
and
aas
mov
add
scas
push
mov
jl
nop
fwait
inc
jp
inc
in
fstp
sub
cmpl
xorb
lahf
push
xchg
rolb
add
fs
push
push
hlt
mov
or
push
add
mov
jp
pop
mov
dec
mov
lods
mov
inc
in
and
int
sub
push
or
or
xchg
rclb
lcall
rorb
faddl
and
movsl
test
lds
leave
scas
mov
cs
and
imul
adc
cmp
data16
and
cld
loope
lcall
call
pop
pop
jmp
jne
push
mov
fwait
je
add
adc
dec
xlat
stc
inc
dec
lret
dec
loop
fists
xor
leave
adc
mov
popf
cmp
mov
mov
mov
out
hlt
out
mov
sbb
je
mov
fdivrs
cmpsb
lret
lea
int
lods
scas
test
aam
movsl
outsb
xchg
xor
mov
cli
imul
sbb
test
pop
mov
nop
pushf
adc
popf
std
adc
daa
in
lret
aaa
mov
jne
adc
das
add
iret
icebp
sbb
mov
and
sub
ss
test
ja
adc
std
sarb
test
pop
sbb
into
add
nop
sub
popa
icebp
sub
adc
loope
cs
test
and
add
push
out
outsb
nop
cmp
cli
fwait
mov
mov
sub
mov
inc
and
jmp
lods
push
cs
or
fnstcw
addb
sbb
adc
jns
add
leave
xor
popa
mov
add
xor
cltd
add
pop
movsl
sbb
add
das
xor
stos
int
pusha
fs
xchg
popf
mulb
and
andb
loope
gs
add
mov
add
inc
mov
lahf
test
nop
dec
jae
or
xor
mov
xchg
sbb
sbb
pop
inc
dec
call
aad
in
test
dec
push
insl
repz
inc
int
jnp
pop
mov
andb
jp
out
sbbb
mov
pop
vminss
addr16
lods
adc
hlt
lahf
dec
adc
stos
jp
sbb
rclb
jo
add
fildl
mov
cs
jne
fwait
pusha
jecxz
loopne
add
sti
adc
jnp
cwtl
mov
bound
jecxz
in
mov
sub
jo
xchg
or
jge
cmpsl
jecxz
addr16
sub
cmp
mov
ret
sbb
fs
and
push
push
int3
insb
popa
orl
and
test
outsl
leave
cmp
fwait
xor
sarl
inc
dec
je
cmc
xor
add
add
jmp
stos
xor
add
mov
add
mov
test
add
push
mov
sub
pop
add
aam
mov
adc
xor
cld
jns
inc
adc
add
stc
mov
les
icebp
xor
xchg
mov
pop
or
out
negl
jmp
cwtl
mov
testb
xchg
push
cwtl
jne
clc
pop
shl
movsl
jae
push
xchg
push
or
ret
cwtl
test
mov
jb
pop
ja
lds
or
push
jl
jno
lea
imul
shlb
push
add
insl
mov
inc
leave
sub
aas
rorb
xchg
mov
push
popf
in
stc
mov
push
mov
popa
ret
dec
and
mov
into
rdtsc
dec
and
add
mov
sub
fsubrs
out
pop
push
sub
rol
stc
mov
mov
xchg
pop
dec
js
xchg
mov
outsl
mov
das
stc
ljmp
push
cwtl
adc
inc
add
xor
push
or
pop
popa
push
mov
insb
leave
and
add
cltd
inc
and
repz
inc
iret
xor
jle
add
and
aas
sub
and
scas
stc
sbb
adc
loopne
add
jp
adc
fstpt
adc
insl
xchg
divb
dec
mov
ret
hlt
mov
xchg
aam
out
test
nop
or
jo
jp
mov
cmpsb
ret
add
xchg
sub
lds
sub
mov
or
pop
mov
das
xor
sbb
mov
xchg
jo
xchg
jmp
add
pop
cmpsl
inc
jmp
shlb
push
push
jne
jnp
sub
into
in
jmp
or
inc
out
pop
test
pop
push
loopne
jl
out
js
mov
aam
mov
pop
or
dec
add
outsl
mov
inc
sbb
shl
push
mov
pop
mov
dec
cmc
or
mov
icebp
push
jne
push
scas
xor
mov
sbb
insl
outsb
mov
xchg
pusha
ret
test
fwait
popa
cs
cmp
jnp
add
hlt
or
mov
mov
addl
xchg
push
mov
das
push
pop
aam
aam
mov
push
ss
jle
and
xchg
push
ljmp
fsts
mov
aam
adc
add
test
std
insb
inc
and
mov
mov
pop
fmuls
xor
mov
pop
add
pop
xor
xchg
out
xchg
or
pushf
filds
adc
imul
scas
adc
inc
shr
rclb
lods
push
xor
sub
pusha
dec
mov
and
shlb
xchg
mov
mov
or
lds
add
in
sub
sub
mov
cmp
add
lcall
test
pop
dec
xchg
mov
ret
icebp
xchg
pop
sbb
xor
add
add
jge
cmp
add
lcall
sbb
mov
mov
pushf
mov
sub
sub
test
mov
lods
mov
sti
and
cmpsl
loope
shll
in
push
out
mov
xor
add
sti
js
push
ss
adc
in
xchg
mov
repz
in
or
mov
sub
pop
jne,pn
out
outsb
mov
into
pop
adc
pop
and
incb
push
jo
add
sbb
mov
pop
pause
shlb
aad
test
call
loopne
or
les
adc
dec
scas
shll
ds
aaa
xchg
fbld
pop
stos
jmp
mov
pop
cwtl
cld
dec
sbb
in
fs
inc
xchg
and
add
incb
sub
cs
xchg
lock
cmp
sub
and
pop
and
test
jae
xor
sbb
add
adc
mov
and
xor
sub
mov
dec
dec
cmc
test
outsb
cltd
push
cmc
roll
xchg
pop
mov
adc
mov
addb
stos
sbb
popf
rorl
pop
nop
mov
loope
add
and
add
int
test
mov
xor
popa
repnz
dec
hlt
clc
xchg
in
xor
add
sub
cli
or
add
cmp
or
mov
or
notl
xchg
sub
mov
adc
pusha
aas
outsb
out
add
cwtl
xchg
mov
adc
add
and
shrb
inc
push
xor
nop
clc
stos
shrb
jae
bound
xor
push
insb
fistpl
in
add
adc
std
jb
mov
jbe
or
mov
jmp
jno
subb
dec
mov
lods
movsl
push
sub
ljmp
movsb
into
pop
mov
clc
dec
sarb
add
scas
int
sub
mov
sub
mov
push
and
add
sti
std
sbb
popl
or
jg
jle
out
mov
mov
cmpsb
xchg
push
or
stc
mov
ljmp
xchg
movsl
mov
in
imulb
pop
rcll
dec
movswl
pop
test
jecxz
frstor
add
lahf
push
and
adc
imul
add
adc
nop
js
mov
mov
push
or
sub
daa
and
adc
dec
push
popl
lods
ljmp
popa
das
add
iret
xlat
inc
lods
ja
gs
jg
cmp
cli
mov
popf
mov
sbbb
stos
int3
gs
leave
push
and
pop
cmp
or
dec
push
dec
pop
shl
cld
jmp
sbb
pusha
cmp
pop
xor
pop
sbb
pop
mov
xchg
lods
data16
js
movsl
adc
out
jno
inc
push
sub
inc
daa
push
mov
jno
test
push
sti
pop
insl
add
cmp
lods
jge
mov
adc
cmc
adc
ja
mov
popa
add
push
add
push
out
imull
push
scas
test
pop
sub
test
add
cs
pop
push
insl
mov
xchg
sbb
enter
push
push
sub
cmc
push
cld
lahf
mov
mov
mov
mov
or
rcl
xchg
adc
pop
dec
cmpsb
mov
push
mov
std
lahf
sub
sub
add
clc
cmpb
add
mov
ret
cld
fidivrs
fwait
xchg
sub
dec
sbb
sbb
in
mov
cli
mov
dec
jl
fwait
pushf
fldt
add
fisttpll
mov
rcr
cmp
es
filds
jne
add
push
mov
cmp
mov
mov
incb
pop
xor
cld
xor
pop
jno
cld
inc
inc
dec
push
xor
pop
repz
dec
pop
mov
das
sub
xchg
jae
fadds
into
imul
lahf
pop
pop
sbb
and
push
add
mov
dec
xor
mov
mov
sahf
loope
push
xor
je
xchg
add
jge
pop
mov
dec
inc
cld
jns
inc
mov
add
mov
jmp
mov
xor
cs
jp
outsl
inc
dec
sbbb
mov
mov
les
shrl
adc
scas
mov
scas
cmc
das
inc
jg
add
push
dec
jl
mov
dec
imul
insl
adc
imul
xchg
mov
jb
insb
pop
jo
mov
xchg
das
jmp
fisubrs
inc
add
dec
sub
mov
cmp
divb
movsl
fwait
les
test
push
shrl
add
add
mov
jno
push
pop
cs
ffree
mov
sti
cld
mov
inc
mov
jo
loopne
lea
xor
subb
mov
popf
or
sbb
or
or
pcmpeqw
lcall
jle
hlt
or
iret
lock
movsb
add
sbb
add
jns
mov
jge
mov
lcall
and
sbb
jg
add
mov
jno
add
cmpl
jecxz
push
adc
sbb
cmp
je
pop
call
push
xchg
ret
sub
aas
movsl
adc
sub
test
sub
leave
in
add
xor
mov
pop
cld
aam
add
in
pusha
fimuls
pop
or
std
nop
and
jns
adc
add
dec
enter
out
jle
pop
add
add
mov
pushf
movsb
inc
mov
imul
add
jne
out
fisubl
leave
add
xor
lret
ljmp
dec
hlt
test
and
gs
daa
rcll
push
pop
rorb
mov
cmp
fisubrl
scas
fs
mov
add
aaa
pop
enter
mov
add
adc
cmp
add
dec
xchg
push
add
mov
in
mov
mov
lock
jmp
ds
adcb
out
push
adc
mov
pop
addr16
pop
clc
xorl
lods
push
xor
inc
jmp
mov
pop
sbb
jnp
add
jg
add
cmp
mov
or
add
out
js
in
lock
jg
push
jo
dec
xor
xor
inc
sbb
popf
adc
inc
imul
mov
mov
jns
add
dec
xchg
pop
lcall
fwait
and
pop
pop
test
stos
pop
mov
jae
aam
rorl
mov
jle
ret
sbbl
mov
mov
dec
roll
push
xchg
adc
shll
cmp
outsb
inc
add
movswl
insb
xchg
add
xor
loopne
fcomp
add
add
popaw
int3
push
out
xchg
cli
out
enter
stc
xchg
jp
sahf
in
in
push
stos
pop
lock
push
or
sbb
and
push
mov
sbbb
mov
fwait
adc
pop
pop
out
sub
mov
leave
test
cmpb
inc
insl
add
and
std
aas
mov
push
jns
mov
fildl
leave
add
les
add
mov
aas
mov
in
fldenv
cwtl
outsb
fdiv
popf
mov
aad
adc
inc
jg
out
cmp
add
mov
add
or
cmp
fdivl
lods
or
aad
sbb
idiv
inc
and
push
hlt
icebp
pusha
pushf
stc
into
add
xor
ret
sbb
push
xor
and
add
xor
out
shlb
lea
cmp
mov
or
fsubrp
outsl
fmuls
and
stc
imul
subb
mul
mov
jne
xchg
mov
add
mov
xor
add
sub
es
or
les
xchg
sahf
xchg
add
xor
repnz
or
mov
mov
sub
je
inc
adc
sbb
ret
jle
call
jns
cli
shlb
pop
jg
int
shlb
push
or
jae
jo
loopne
cmp
ret
jp
lea
or
pop
add
js
inc
sbb
addb
or
pusha
jbe
shll
popf
sbb
cli
dec
cli
xor
push
pop
mov
dec
pop
xchg
sti
inc
aas
insb
cmp
add
xchg
loopne
cmp
sahf
jne
add
lods
xchg
push
pop
rcll
int3
sbb
loopne
popf
jno
add
jle
push
outsb
hlt
add
push
and
test
aam
leave
sbbb
mov
cs
loopne
lods
adc
cmp
push
or
inc
dec
pop
test
inc
xchg
lods
pop
lret
or
scas
or
push
cs
xchg
cmp
mov
mov
in
mov
adc
gs
dec
mov
cmp
dec
adc
mov
test
mov
fucomp
dec
sub
push
mov
mov
lret
push
jp
pop
cltd
hlt
add
adc
xor
arpl
add
inc
rorb
mov
jne
dec
shrl
pop
sbb
data16
clc
je
push
mov
sub
mov
add
cmpsl
cmc
xchg
cmp
jo
lea
cmpsb
outsl
xor
popf
shlb
fsubrs
add
mov
lods
jbe
jecxz
jmp
ja
loope
std
shrl
stos
sub
push
xchg
cld
stos
repnz
std
aaa
clc
orb
adc
mov
clc
pop
jmp
nop
cmc
xor
fsts
mov
in
xor
call
insl
insl
and
test
add
clc
mov
pushf
push
inc
js
in
call
dec
jge
or
jl
pusha
mov
bound
sub
push
jg
fidivrl
scas
push
mov
push
js
mov
jle
loop
test
stos
lahf
lea
mov
aas
pushf
sbb
popf
mov
mov
pop
mov
mov
xor
stc
scas
das
pop
mov
jbe
arpl
or
xor
mov
jbe
add
cld
fidivl
loope
or
sub
jo
out
leave
aad
shlb
rclb
scas
outsl
idivb
out
mov
xor
fidivs
inc
sub
lods
pop
out
aas
add
mov
pop
add
out
in
scas
fnsave
cmpsb
movsb
add
cltd
push
or
push
sub
out
and
pop
pop
mov
outsl
ds
adc
call
rcr
in
scas
dec
out
xor
pop
jne
fildl
sub
imul
lret
mov
mov
jno
xchg
mov
mov
gs
sub
add
sbb
sbb
add
inc
pusha
and
and
daa
clc
popa
insb
xor
add
or
or
push
mov
mov
or
test
add
hlt
cltd
bswap
push
push
jns
xor
fs
dec
dec
add
jge
dec
add
aad
mov
out
add
lods
sbb
sbb
test
cld
mov
daa
fisttps
leave
addl
pop
push
mov
test
xchg
and
pop
decl
and
outsl
arpl
or
popf
or
dec
mov
or
pop
pop
testb
out
pop
adc
imul
add
ljmp
pusha
add
push
cmc
add
cmc
push
jmp
dec
lds
jnp
loop
testb
into
pushf
xor
daa
imul
int
pop
mov
or
jg
fldt
enter
xchg
lods
xchg
xchg
mov
pop
push
shlb
arpl
clc
pop
pushf
xchg
mov
jmp
jns
mov
jae
sub
xor
xor
and
adc
sub
sub
stc
ficoms
sbb
cmc
mov
dec
mov
lret
xor
xchg
sarb
jmp
pop
flds
adc
orb
cmp
cli
add
lea
inc
push
jb
cmp
test
sbb
add
push
or
push
add
mov
sub
imul
jecxz
adc
inc
dec
or
mov
fadds
jmp
aas
nop
outsb
xor
pusha
push
pop
out
xchg
push
out
scas
loope
push
pop
xchg
mov
add
lea
fildll
call
mov
out
xchg
mov
mov
call
scas
sbb
sub
xor
cmp
xor
push
xchg
aaa
dec
add
lret
popa
sub
mov
pop
push
dec
cmp
int
lods
cmp
ljmp
sarb
shl
xor
add
xchg
dec
adc
dec
pop
popf
rolb
or
fisubs
faddp
sub
mov
jbe
or
addb
pushf
mov
push
mov
fldl2t
push
mov
add
mov
jns
or
mov
sbb
mov
sbb
pop
xchg
mov
mov
nop
xchg
sub
cs
jno
or
dec
fwait
adc
out
loopne
cmp
stos
pop
cmp
fbstp
mov
pop
pop
mov
and
push
int
scas
lret
adc
lret
fnstenv
int3
xor
ret
and
imul
mov
mulps
test
insl
mov
int
sbb
add
add
and
lea
mov
test
imul
cli
test
mov
fildll
imul
icebp
mov
mov
sub
or
push
dec
fwait
or
std
mov
out
adc
rolb
mov
sub
adc
sbb
scas
clc
jmp
mov
mov
int
loopne
dec
pop
cmp
divb
idivl
orb
mov
cmp
adc
jp
sbb
xchg
sahf
pop
test
sub
lods
pop
add
cmp
sub
inc
mov
mov
es
lods
and
xchg
sbb
call
jb
inc
sub
xor
xor
and
mov
popf
mov
lcall
fistpl
pop
and
pop
xor
mov
or
cltd
in
nop
sub
aaa
cltd
cmp
jmp
cmp
rcr
ret
mov
popa
pop
sub
imul
shlb
or
insl
mov
fildl
xor
and
add
rorb
dec
xor
xchg
pop
and
push
ret
in
xor
cmp
inc
or
cmp
jecxz
cmp
pop
xor
mov
in
sub
in
mov
loop
xorb
sbb
cmp
or
xchg
and
lods
mov
insl
xor
pusha
push
ret
adc
adc
jo
je
push
cld
xor
or
ret
and
lds
lods
sarl
pop
mov
add
movsl
sub
mov
sub
and
pop
in
inc
rorb
xchg
add
sub
xchg
jno
cmp
add
xchg
scas
cmpsl
mov
loopne
mov
cltd
cmp
cmp
xor
clc
imul
and
in
jno
add
pop
test
mov
jl
imul
xchg
or
aaa
lahf
pop
pop
movsl
xor
pop
cli
jmp
xor
mov
mov
jne
loopne
js
mov
sbb
sti
and
cmp
mov
or
rolb
cs
xchg
jecxz
sub
mov
add
sarb
mov
fwait
and
cmpsl
fiaddl
and
adc
fcoms
nop
mov
jbe
sub
cmpsl
add
lds
popf
and
pop
add
js
dec
add
aaa
xchg
in
arpl
jmp
mov
or
repnz
add
insl
imul
adc
add
or
xchg
adc
mov
push
pop
das
outsb
jbe
xchg
out
push
push
sub
dec
add
insl
aaa
rorb
lcall
adc
mov
dec
or
sub
cmpsb
pop
pusha
test
adc
pop
mov
outsb
inc
add
cmp
mov
pop
ljmp
in
addr16
ljmp
aad
rorl
xchg
push
clc
jecxz
xor
leave
fnsave
mov
inc
mov
das
sub
test
xor
lods
xchg
xor
shll
jmp
add
jne
ljmp
adc
pop
fstl
lahf
jbe
or
xor
lods
push
jae
imul
xchg
popa
in
popf
or
adc
repz
sbb
mov
mov
in
or
rcrb
test
ds
loopne
into
imul
popf
aam
push
popf
jno
test
jg
fs
imul
cmp
aam
mov
lods
xchg
adc
scas
pop
mov
jo
pushf
sahf
mov
pop
or
incl
std
dec
push
leave
or
or
mov
add
pop
mov
inc
aad
inc
fldt
xor
or
xor
or
and
cli
outsb
mov
mov
enter
insl
push
adc
inc
sar
cmpsb
sub
inc
xchg
outsl
enter
pop
stc
lods
and
jg
inc
add
lret
bound
xchg
gs
sub
sub
jl
mov
adc
push
lahf
push
mov
or
nop
sti
mov
xor
jg
xlat
pop
sbb
jns
fbstp
adc
mov
or
push
cli
les
pop
pusha
enter
fdivrl
les
aad
or
cmp
mov
adcb
add
aas
cmpsl
mov
add
or
ja
xchg
mov
int3
hlt
xchg
xchg
mov
xchg
clc
in
rolb
mov
jp
dec
pop
stos
fiaddl
xchg
cwtl
subb
lds
jno
add
popa
mov
daa
subb
push
shrl
in
pop
dec
pusha
jl
sub
cld
cmpsb
daa
loopne
rorl
add
leave
mov
outsl
dec
dec
cld
dec
push
cmp
add
das
sub
aaa
roll
rcll
nop
addb
dec
addb
sub
movsb
pop
inc
or
xchg
sub
mov
push
cmpsb
pop
notb
add
mov
push
and
add
pusha
xchg
scas
cwtl
or
adc
cmpsl
mov
dec
sub
xor
push
je
fistpl
rclb
pop
pop
xor
dec
mov
pop
icebp
mov
pop
mov
mov
add
mov
pop
mov
xchg
and
sub
and
add
pop
lahf
mov
add
or
pop
lods
in
les
sbb
pcmpeqw
cwtl
push
or
xchg
pop
push
bound
call
xor
aas
mov
add
xor
sti
test
fdivrs
push
pop
sbb
pop
jecxz
fidivs
jns
jecxz
sub
negl
movsl
scas
repnz
pop
lods
fadds
in
add
pop
mov
out
adc
lea
sub
pusha
mov
out
cwtl
nop
mov
mov
mov
iret
dec
add
mov
and
inc
into
bound
lret
mov
jns
repz
lods
mov
jmp
or
or
imul
add
adc
mov
jne
stos
and
mov
add
dec
je
lcall
mov
out
mov
ss
movl
inc
clc
icebp
pusha
mov
push
cli
or
xor
aas
xor
dec
cs
imul
mov
imul
and
bound
push
jo
popf
repz
fdivr
mov
or
leave
mov
das
xor
add
xchg
mov
sub
dec
call
adc
add
aas
push
clc
sub
mov
add
cmp
sbb
ljmp
lods
nop
pop
scas
mov
mov
xor
xor
adc
dec
add
mov
dec
cmpsl
jne
mov
push
cli
add
mov
pop
daa
jp
popf
loopne
js
cmp
int
lret
mov
pushl
dec
push
aam
mov
lea
push
push
jmp
and
ss
sbb
cmpsb
lret
sub
enter
or
out
scas
mov
adc
mov
loope
insl
fs
pop
xchg
out
mov
add
popf
sti
and
lret
push
sbb
lret
mov
dec
xor
das
add
jne
inc
xor
sub
dec
jge
lods
ja
bound
sbb
sbb
dec
mov
xor
add
mov
lock
test
pop
adc
imul
mov
jno
mov
int
addr16
adc
fidivs
sahf
pop
bound
lds
mov
adc
mov
test
add
scas
dec
lods
dec
xor
dec
pop
popf
jp
jl
add
pusha
sbb
dec
push
mov
dec
jmp
pop
push
aam
push
dec
push
jbe
dec
pop
callw
xchg
in
mov
jb
jmp
fadds
inc
push
and
inc
ds
sbb
and
pop
pop
movsl
out
in
pop
popa
mov
fwait
lret
roll
jae
pop
adc
jnp
pusha
lods
and
inc
cli
xor
mov
dec
mov
or
out
jne
adc
push
dec
mov
push
test
je
jmp
adc
add
ss
mov
xchg
inc
push
out
fisttpll
pop
xlat
xor
jg
mov
outsb
push
add
lahf
mov
inc
mov
mov
lahf
push
xor
xor
fnstenv
mov
cli
repz
add
scas
fdivrl
dec
push
push
sbb
pop
pop
xchg
mov
stos
sub
xchg
scas
cltd
mov
imul
mov
fistl
and
jnp
pop
xchg
xor
inc
mov
and
mov
lahf
add
ja
icebp
fs
or
addr16
nop
adc
and
jmp
adc
imul
sbb
push
in
adc
push
jp
mov
adc
add
inc
subb
pop
cwtl
pushf
xchg
dec
mov
mov
test
pop
pop
loop
shl
xor
or
and
pop
jmp
into
cli
lea
adc
inc
pop
fsubrl
xor
mov
sub
xchg
jbe
xchg
aad
fdivrs
daa
test
fsub
pop
xor
jo
insl
pop
loop
or
ljmp
push
ret
cmc
add
sub
cmp
subl
cmpsl
jmp
pop
jl
orb
out
filds
jecxz
pop
jmp
divl
roll
xorb
lods
loopne,pn
sarl
repnz
roll
fwait
pop
nop
es
push
push
cltd
sub
call
sbb
fsubl
inc
pop
xlat
movsb
xchg
push
xor
ja
jb
outsl
lods
je
mov
insl
popf
inc
addr16
cli
push
aaa
test
adc
adc
sbb
aad
sub
push
adc
and
je
and
addl
scas
lds
jecxz
nop
nop
xchg
mov
pop
pop
xchg
into
mov
mov
mov
scas
test
push
test
loope
movsl
js
dec
fidivs
subb
mov
xchg
test
pop
pop
lods
int3
lods
pop
xchg
pop
ds
jae
or
mov
sub
and
adc
mov
sbb
jne
repz
fidivl
mov
lods
je
inc
scas
or
imul
mov
and
pop
out
jbe
mov
inc
cwtl
add
add
add
aaa
ljmp
add
mov
cmpb
out
fiadds
cmpl
icebp
cmp
and
sub
daa
les
scas
fsubrl
add
sbb
pop
mov
cs
cmc
push
mov
in
pop
jmp
cmp
push
rcrl
add
mov
pop
xlat
lret
add
cmp
lahf
push
xchg
cmpsb
mov
in
and
lret
push
push
out
lahf
cld
push
sarb
cltd
jbe
gs
iret
into
adc
and
fildl
jns
sbb
pusha
out
pop
fildl
mov
pop
pop
push
and
fldt
stos
mov
sub
pop
adc
adc
dec
jo
addb
mov
shrb
mov
sti
push
jl
xor
dec
movsl
mov
pop
sub
out
cmc
in
and
fldcw
aas
std
xor
sub
in
repnz
pop
sti
xor
mov
jle
stos
add
fwait
xor
mov
mov
shrb
mov
in
add
inc
pop
mov
push
mov
pop
ror
pop
icebp
jno
lods
das
insb
loop
mov
push
lods
and
xlat
add
pop
inc
mov
sub
fsubr
jg
outsb
or
jecxz
pop
cmp
mov
adc
sub
mov
jno
xor
mov
jle
mov
mov
addr16
pop
or
loopne
xlat
test
cmp
xchg
and
jmp
loope
add
jo
dec
out
daa
cli
insb
adc
int3
xchg
push
rorb
mov
adc
pop
in
test
and
jecxz
imul
js
sbb
dec
cwtl
rcrl
outsl
xor
lahf
movsl
test
scas
filds
in
push
xchg
mov
loope
sub
adc
shlb
rcl
push
jns
xchg
dec
out
mov
mov
mov
sub
stos
adc
sbb
add
jo
mov
push
add
adc
xchg
imul
add
ja
cwtl
xor
sbb
xchg
stos
loop
pop
mov
fcmovnb
test
scas
mov
dec
out
sub
fmuls
out
adc
push
add
shrl
lahf
out
pop
adc
mov
mov
icebp
adc
ffree
push
sub
jmp
es
lock
movsl
cmp
lock
xchg
xor
or
pusha
loop
pop
out
xchg
in
xchg
movsb
dec
ljmp
ds
xor
loope
add
jp
pop
mov
repz
in
fs
pop
sbb
sbb
movsl
je
inc
adc
cwtl
arpl
mov
loopne
mov
ror
fdivrs
adc
pop
cmp
xchg
cmpsl
inc
loopne
idivb
pop
or
jbe
xorl
lds
popf
xchg
popf
out
xchg
shll
dec
sub
idivl
xor
mov
outsb
js
sahf
mov
fcmovne
ljmp
ficomps
daa
shlb
fdivl
mov
movsl
aad
push
mov
rclb
sub
incl
xor
pop
and
popf
movsl
jge
sbb
fdivrs
cmp
pop
test
dec
add
outsb
add
cmpsb
jb
sub
lret
test
push
cwtl
cmc
ljmp
cmp
sti
push
xorb
sbb
mov
mov
inc
jae
mov
push
cmpsb
dec
icebp
dec
cmpsl
push
cmp
test
push
testb
in
and
jbe
movsb
inc
add
stc
sbb
aam
aam
cmp
daa
xor
jg
or
fistl
cli
xor
add
sarb
les
popf
mov
mov
jo
mov
scas
imul
add
ffreep
ror
hlt
pop
ljmp
add
es
iret
loopne
jo
loop
add
mov
jbe
dec
jo
sub
push
adc
mov
pop
std
mov
mov
popf
or
push
dec
notb
cmp
cli
pop
adc
mov
jnp
repz
in
cmp
movsb
xchg
bndldx
shrb
cmpl
push
lahf
add
dec
jecxz
dec
push
xchg
daa
cmp
js
add
xor
pop
shll
pop
jecxz
sub
outsb
inc
and
push
mov
out
jnp
add
mov
jmp
mov
pop
mov
mov
add
adc
gs
fsubl
out
pop
test
add
mov
mov
jbe
jnp
add
ss
das
popa
insb
push
sbb
add
mov
test
xor
fsubrs
into
adc
das
mov
fidivrs
test
mov
sub
sbb
pop
inc
test
dec
and
inc
repnz
pop
add
dec
adc
xchg
push
loop,pt
mov
push
push
pop
mov
xchg
sub
cli
jnp
scas
mov
add
stc
stos
mov
mov
lock
pusha
push
mov
pop
je
and
sbb
mov
cs
cmpsl
sub
sbbb
mov
imul
lea
in
outsb
jle
xchg
icebp
cmp
pop
shlb
sahf
xchg
sbb
out
and
mov
mov
pop
push
xchg
sbb
mov
push
dec
add
xor
es
mov
add
jl
sbb
inc
sbb
jns
jo
adc
inc
cli
out
mov
push
mov
cwtl
arpl
pop
push
in
add
mov
jle
shl
push
loopne
pop
jecxz
add
call
push
pop
add
cmpsb
push
loope
mov
add
movups
sti
frndint
ds
pop
std
lds
fs
call
les
pop
cld
or
xor
ljmp
jle
add
ficompl
enter
add
mov
rcll
in
add
lcall
mov
ffree
test
pop
cmpsl
jge
iret
cs
cmp
out
adc
mov
mov
scas
push
push
mov
mov
popf
pop
dec
sti
call
adc
sbb
hlt
pop
sti
xchg
or
gs
sub
pop
add
pop
sub
stos
jmp
sub
mov
aam
nop
rol
xchg
push
jb
push
sbb
adc
xlat
call
stc
loopne
iret
mov
xor
nop
ficomps
push
imul
and
pop
nop
sub
popf
mov
repnz
roll
imul
mov
mov
sti
repnz
dec
lds
std
fwait
mov
ror
fcoms
and
subl
sub
cmp
aaa
and
mov
test
popa
jnp
js
or
test
shlb
stos
cmc
sbb
dec
int3
shl
or
xor
jns
iret
lret
pop
shll
push
fisttps
mov
bound
cwtl
mov
inc
add
mov
imul
mov
cmp
push
push
mov
push
std
nop
sbb
and
out
lahf
xor
imul
adc
mov
jp
into
and
fwait
mov
push
pop
add
mov
cmp
popf
sahf
test
inc
test
sbb
pop
cmp
fmull
push
mov
pop
pop
push
mov
lods
arpl
or
pop
mov
lea
inc
adc
mov
daa
jmp
cmp
mov
test
scas
jp
add
fdivs
div
jno
mov
lods
xor
nop
jne
mov
cmp
nop
clc
clc
stos
movsb
mov
push
enter
and
mov
ljmp
fucomip
loope
xchg
xor
adc
popf
inc
jecxz
jmp
push
in
shrb
push
cmp
push
mov
das
sub
inc
insb
daa
movsl
xor
and
pop
add
out
and
jno
xlat
scas
das
sbb
push
addb
pop
mov
mov
sbb
enter
jnp
and
inc
pusha
mov
xchg
add
cmp
outsl
popf
xor
popf
dec
push
cwtl
push
mov
fsubrs
dec
mov
and
and
adc
bound
mov
xor
sarl
mov
push
or
jmp
popf
sbb
push
inc
dec
mov
xchg
sub
cmc
push
or
xor
adc
pop
stc
scas
xor
fisttps
adc
lods
lret
insl
sub
and
sub
cwtl
inc
and
xchg
add
test
mov
pop
xchg
dec
pop
mov
test
fisubrl
outsl
push
push
mov
sub
mov
dec
sub
in
roll
mov
pusha
mov
xchg
lret
fimull
dec
ret
js
adc
sub
or
xor
cmp
andl
cmpsb
mov
fs
xor
scas
jmp
xor
nop
mov
mov
lea
jecxz
lods
dec
adc
mov
scas
ficoml
mov
inc
inc
cmpl
jne
jmp
mov
sub
mov
xchg
jmp
sti
xor
inc
xchg
jg
imulb
jmp
lret
mov
or
dec
inc
jno
sarl
adc
jp
mov
or
mov
or
cmp
jmp
mov
adc
xchg
or
xchg
sti
sahf
add
stos
add
push
push
push
ret
leave
pop
cmp
adcl
xchg
scas
outsl
or
movsb
loop
fildl
dec
stos
cmp
xchg
enter
sarb
mov
mov
xchg
add
pop
dec
shl
xchg
jno
jge
dec
ror
cmp
leave
adcb
add
out
push
push
movsl
dec
in
push
aad
ds
mov
xchg
insl
das
not
lahf
xor
sub
add
cmp
and
daa
push
push
adc
add
or
push
movsl
cmc
lods
pop
inc
loope
add
or
cmpsl
ja
jge
test
mov
jno
fwait
rol
jmp
pop
xchg
int3
pushf
pop
jecxz
fsubrl
xchg
sbb
add
jmp
add
icebp
and
in
mov
jae
push
push
add
cltd
push
lock
or
adc
mov
testl
rclb
mov
outsl
cmpsb
out
pusha
mov
in
add
jnp
mov
cmp
xchg
add
jge
scas
bound
cld
cmp
movsl
pushf
imul
jns
ljmp
repnz
lret
cmp
ljmp
mov
lret
push
cmc
mov
pop
push
shll
or
je
popa
pop
sub
sbb
cmp
xchg
aas
mov
mov
iret
mov
push
enter
icebp
mov
mov
stc
imul
popf
mov
adc
lcall
test
pop
add
xchg
pop
pop
xchg
sahf
push
pop
cmpsb
add
test
jmp
out
jl
mov
mov
sbb
imul
and
mov
lret
cwtl
adc
xchg
fisubrs
faddl
stos
sbb
repnz
stc
icebp
dec
push
sbb
test
lret
popa
jl
testb
xor
sbb
dec
in
loop
mov
and
mov
adc
lea
daa
and
sub
cmpb
push
adc
je
or
and
or
fwait
push
out
mov
scas
or
sti
adc
repz
mov
cmpl
xor
and
inc
cmpl
adc
das
mov
and
pop
dec
js
or
mov
mov
adc
mov
aaa
or
sub
pop
sbb
mov
and
add
mov
movsb
mulb
cmc
jns
cmp
and
cs
inc
add
mov
pop
popf
dec
pop
push
sub
sbb
sub
test
test
and
cmpsl
jbe
jmp
fwait
daa
and
mov
cmp
fs
test
adc
pop
je
or
dec
or
mov
xchg
or
jge
adc
aaa
mov
nop
sbb
mov
mov
mov
xchg
add
daa
mov
inc
and
mov
imul
das
out
and
popf
xorl
xchg
mov
xchg
xor
add
xchg
stc
dec
push
mov
imul
xor
mov
cmp
loop
ret
or
sbb
xchg
xor
nop
call
or
cs
stc
adc
lds
fbld
dec
and
in
gs
pop
subb
int
xlat
sbb
sub
jno
inc
dec
push
pop
out
outsl
mov
sbb
jecxz
jmp
dec
mov
push
pop
icebp
out
popl
xchg
aad
push
and
adc
std
jge
sbb
shrb
dec
xor
xchg
mov
pop
mov
stos
je
mov
clc
popa
pop
subl
push
xor
mov
pop
loopne
out
sbb
test
ds
or
add
nop
cli
and
add
jb
xor
pushf
or
sbb
or
pop
dec
add
xchg
cli
and
mov
adc
and
add
jns
and
push
repz
andb
or
enter
mov
add
pop
add
pop
les
or
cltd
mov
mov
jge
dec
and
dec
add
mov
add
adc
sbb
push
dec
cmp
sub
fstpt
dec
add
cltd
movsb
das
push
inc
add
sbb
mov
push
jbe,pt
bound
dec
nop
or
ss
addr16
jo
mov
cmp
inc
xor
or
add
and
lahf
xor
sbb
cmpw
paddb
mov
sub
jno
in
push
dec
hlt
pop
bound
inc
xor
cld
aam
call
les
mov
sub
pop
mov
out
push
mov
or
add
shlb
push
incl
cwtl
sbb
add
std
incb
xor
dec
out
or
push
mov
out
add
movzbl
inc
mov
mov
push
xor
leave
sbb
xchg
mov
push
xor
lea
cmp
stos
inc
or
push
roll
push
lcall
mov
jge
mov
movsl
sbb
std
mov
or
mov
inc
gs
cmpl
test
test
xor
lods
arpl
sbb
cltd
leave
cmp
cwtl
lret
sbb
shr
test
add
inc
adc
mov
xor
enter
mov
stc
rolb
shr
test
rcrl
mov
xor
or
or
and
enter
in
shr
loopne
xorb
pop
es
mov
sub
xchg
ret
jmp
push
fs
dec
sti
stos
inc
pop
sub
sub
cwtl
jmp
or
mov
lcall
jmp
sub
mov
jmp
mov
cwtl
fisttps
push
mov
mov
leave
adc
or
lcall
lret
or
adc
jmp
sub
or
xchg
movb
push
xchg
loop
adc
mov
or
push
jne
cmpsb
or
outsl
adc
mov
mov
xor
xchg
jbe
repnz
cmp
cltd
sbb
pop
cmp
in
imul
sbb
push
push
jmp
pop
mov
push
jbe
ret
and
gs
cmp
xor
stc
pushl
push
dec
add
jae
sbbl
sbb
xchg
adc
and
pop
mov
test
pop
pop
cld
ret
leave
ret
or
cltd
cmpsb
or
pop
mov
pop
lock
ret
add
add
loop
sahf
aaa
add
mov
pop
xor
ret
dec
cwtl
addb
dec
pop
jne
push
cmp
sbb
inc
sbb
sbb
mov
add
sub
add
inc
cmp
dec
ljmp
les
inc
sbb
ret
sbb
add
jae
outsl
sbb
or
inc
inc
es
add
push
add
dec
and
subl
add
adc
mov
leave
and
inc
push
aam
mov
xor
mov
shlb
mov
sub
rcr
fiadds
test
pop
js
lahf
mov
pop
push
mov
pop
pop
add
mov
adc
lret
fmul
flds
loop
push
adc
jno
jo
mov
sub
add
mov
mov
clc
mov
fidivs
push
pop
data16
cld
popa
clc
pop
xchg
cmp
fs
pop
cli
mov
dec
and
or
stc
or
pop
mov
and
rolb
jg
sub
adc
repnz
mov
inc
add
hlt
aaa
ja
sub
xor
push
mov
lea
and
test
gs
or
mov
cld
shlb
or
in
cwtl
fs
inc
and
movsb
push
sbb
lods
xor
pusha
and
jo
and
push
fistl
xlat
popa
add
stos
sbb
sbb
dec
gs
sub
dec
in
fbld
cwtl
adc
fiadds
jne
lahf
xor
and
data16
add
jns
push
jae
sbb
imul
or
sub
add
mov
or
mov
scas
mov
xchg
push
cltd
mov
push
inc
xchg
xchg
sub
cmp
les
pusha
mov
jg
push
adc
test
mov
sub
and
adc
mov
jmp
pop
jb
dec
lods
push
lea
jnp
and
ret
sarl
jno
add
mov
pop
imul
jmp
or
push
pop
push
sti
jp
mov
jg
nop
out
ds
test
xchg
adcl
add
stos
cmp
js
add
xchg
pop
ficoms
movsb
jl
dec
xor
pop
add
adc
les
negl
mov
xchg
enter
mov
mov
or
and
repz
ja
add
jge
mov
adc
test
push
xchg
cs
mov
cmp
int3
or
popl
mov
aaa
or
sub
rcrb
mov
cmp
push
ljmp
push
inc
ss
cs
xor
or
jne
jle
out
icebp
xor
ror
mov
fnstcw
test
sti
mov
mov
daa
nop
lods
decb
cmpsb
and
shrb
sbb
cmpsl
add
outsl
sub
jge
loope
mov
mov
es
push
out
shll
fisubs
subb
mov
imul
hlt
stos
mov
cmp
test
inc
xor
mov
mov
push
or
insl
fwait
les
roll
xor
dec
repnz
cmpsb
sub
jg
and
and
mov
sbb
sbb
sbb
fldl
and
iret
xchg
and
cs
sbb
adc
not
mov
repnz
mov
pop
adc
pop
insb
int
jle
das
mov
dec
xchg
arpl
push
imul
mov
or
lods
loop
ret
and
inc
movsb
into
push
fwait
outsl
out
sbb
jge
dec
mov
fiadds
add
jns
loope
and
sbb
mov
or
push
push
pop
in
add
loope
aam
jle
add
test
mov
test
xor
out
bound
add
in
testb
mov
sbb
mov
xlat
rorb
push
push
dec
movsl
push
sbb
adc
cmp
ret
loop
inc
bound
cmp
jecxz
adc
cmp
mov
cmp
repz
rcr
movsb
pop
clc
ds
pop
jmp
sbbb
int
jge
ficomps
ds
add
add
nop
aad
repnz
adc
sub
add
mov
dec
stos
cmp
pop
ror
or
and
sbbb
cli
add
enter
pushf
repnz
das
or
out
xor
inc
pusha
xchg
push
xor
and
inc
aad
call
pop
push
add
inc
fstl
int3
lds
jl
cwtl
dec
fcoml
xchg
sub
js
pusha
stos
aad
adc
stos
mov
add
loopne
inc
int3
xchg
sbb
ret
lds
sub
xor
push
andl
and
add
je
inc
cs
sbbl
arpl
fstl
stc
dec
aam
pop
shrl
sbbl
add
outsl
or
jmp
or
aad
sahf
sbb
jecxz
shr
and
cmp
pop
mov
loope
add
push
clc
dec
xlat
add
inc
xchg
adc
aas
xor
xchg
cmp
jnp,pn
gs
inc
fwait
xor
push
dec
sub
addr16
xchg
add
cmpsl
ret
mov
std
mov
iret
data16
push
rclb
in
test
cmp
lcall
cs
sub
enter
cmp
jbe
cmp
push
fsubr
or
mov
and
subb
add
sarl
push
mov
pop
pop
sbb
jp
das
inc
addb
add
add
mov
fadd
mov
test
out
add
mov
add
push
or
add
daa
xor
jecxz
dec
call
mov
gs
addr16
add
mov
mov
xorl
dec
sbb
movsb
inc
jns
xor
xor
add
movb
mov
out
xor
lds
fwait
into
xchg
movsb
scas
adc
add
push
out
es
add
movsb
test
or
andb
inc
pop
and
in
in
mov
pop
out
roll
aad
repnz
mov
int3
push
out
adc
fisttpl
sbb
mov
pop
jb
add
cmp
add
adc
in
pop
ret
test
adcl
je
shll
lods
ljmp
mov
add
sbb
lock
pusha
push
adc
and
inc
sbb
xorb
fbld
sub
ret
outsl
nop
adc
imul
inc
mov
ret
xor
insb
pop
ds
stos
push
nopl
push
and
sub
jecxz
mov
dec
mov
xor
adc
loope
push
fildl
sbb
inc
and
xchg
aas
xor
nop
test
jbe
sbb
jmp
nop
pushf
daa
add
cmc
xchg
out
or
inc
jecxz
push
adc
in
and
inc
sbb
ss
mov
orb
sbb
push
xor
js
mov
xorb
outsl
imull
in
add
pop
test
inc
mov
add
cmc
add
add
loop
xor
rcr
push
mov
sbbb
test
mov
sbb
sbb
aam
orl
shrb
xchg
mov
ljmp
insl
idiv
or
in
js
or
test
add
cmp
ljmp
lock
cmpsl
sbb
or
adc
out
movsl
add
jge
incb
ud2
and
andb
out
mov
notl
add
mov
sarb
and
adc
scas
test
mov
push
lods
jle
pop
sbb
repz
mov
inc
cmc
cmp
mov
or
or
dec
and
add
cmp
inc
ja
insb
push
add
enter
notl
xor
addb
jb
mov
push
add
test
add
and
insl
jecxz
enter
imul
in
mov
mov
xchg
add
dec
ret
push
imul
shl
lds
mov
loope
std
or
and
and
inc
mov
sbb
cltd
xor
xor
xor
outsb
popl
repnz
push
outsl
cmp
pop
or
and
scas
jb
in
mov
push
cmp
sbb
xor
js
rcrl
add
sbb
sub
testb
xor
fidivrl
loop
iret
pop
cmp
test
movsl
in
ret
ret
dec
mov
jle
or
lods
cmp
andb
sub
xlat
and
test
add
mov
push
or
cwtl
fsubs
xchg
mov
add
cltd
pop
out
ss
mov
inc
repz
mov
cs
rorb
in
sub
add
test
sbb
leave
inc
add
lret
out
cltd
mov
imul
aam
mov
loope
and
dec
xlat
out
add
insl
push
mov
lds
js
mov
xchg
cwtl
fnstenv
mov
xor
xlat
and
and
or
cli
pop
dec
cmc
mov
lds
mov
das
dec
mov
out
sarb
ja
xlat
push
xor
call
pop
cs
imul
push
dec
sbb
pop
mov
mov
adc
pop
out
adc
fistps
stos
andb
jno
mov
ja
subl
sbb
lds
or
push
leave
enter
sbb
ret
fldt
cmp
xchg
xor
repnz
call
adcb
add
push
orb
test
sub
add
jmp
outsb
mov
jl
add
sbb
add
sbb
push
scas
daa
pop
add
xor
ror
add
mov
shl
push
add
loopne
xor
mov
jp
xorl
loopne
mov
add
inc
push
arpl
add
jno
mov
outsb
movsb
xor
mov
call
sbb
cmpsb
in
fistpll
bound
push
lahf
scas
iret
xor
jae
jns
pushf
add
int3
ljmp
or
insb
or
jl
sbb
pop
mov
mov
fwait
xorl
cmp
add
sub
pushf
pminub
pop
sub
testl
push
push
mov
out
in
js
xor
mov
add
mov
lret
and
mov
pop
and
push
es
out
pop
adcb
repnz
add
clc
cld
rclb
add
jne
pop
mov
fadds
cmc
jnp
pop
xor
hlt
jno
add
inc
loopne
cmp
aas
orb
ret
fldl
fistl
movl
mov
jle
jbe
loopne
hlt
jecxz
aaa
addr16
call
cwtl
sahf
inc
jle
scas
flds
xor
lret
xor
mov
push
sbb
cmp
rolb
mov
or
pop
mov
xchg
movsl
pop
outsb
ret
jnp
lds
pop
hlt
inc
es
rorb
mov
xchg
out
movsb
loopne
ror
imul
test
dec
xor
sub
lods
jb
add
push
leave
dec
jp
add
or
mov
pop
cmp
cli
hlt
pushf
push
jecxz,pt
in
subl
call
dec
push
faddl
ret
cmp
scas
adc
inc
xor
jb
cmp
push
movsb
jne
add
dec
bound
add
push
pusha
pop
das
push
mov
add
add
out
sub
cmp
pop
jae
inc
adc
icebp
and
sbb
out
out
jmp
push
repnz
jno
inc
loope
xlat
adc
inc
stos
sub
add
adc
popf
inc
std
test
mov
adc
fwait
adc
inc
clc
sbb
push
repz
popa
add
out
adc
nop
adc
lea
int
fdecstp
push
inc
and
add
mov
mov
sbb
test
sub
jnp
pop
push
pop
hlt
add
int3
lock
movsl
dec
add
xor
add
inc
jp
roll
stos
add
std
imul
mov
cltd
out
mov
iret
jecxz
add
lret
cltd
xchg
sbb
popf
mov
addl
aad
hlt
push
dec
add
mov
cs
pop
sti
cmp
dec
push
stc
dec
std
xchg
push
xchg
sbb
pop
in
and
ljmp
add
orb
jo
sbb
push
add
mov
sbb
pushf
add
pusha
inc
mov
js
outsl
outsb
fcoms
sbb
jge
push
sub
jae
jo
inc
fs
push
test
sbb
insb
dec
daa
test
xchg
das
add
mov
mov
or
add
shl
inc
mov
mov
test
jge
mov
les
mov
add
sub
test
xchg
je
jo
and
and
dec
mov
pop
js
add
push
inc
add
repz
daa
int
cs
and
in
repz
or
je
or
mov
in
jae
add
add
bound
call
dec
popa
hlt
add
mov
mov
xchg
sahf
cmp
outsb
adc
sbb
or
ds
outsl
jb
je
inc
cmc
out
adc
xor
mov
aad
and
add
adc
sbb
mov
push
roll
add
push
daa
mov
sbb
cmp
mov
jb
add
pop
dec
in
ret
addl
xchg
cmc
adc
rorb
xchg
sti
xorl
and
sbb
xor
pop
sub
push
jge
mov
xchg
subb
fcomps
and
icebp
pop
lods
push
adc
sub
popa
call
sbbb
or
or
push
push
mov
add
andl
add
dec
roll
lea
fiadds
pop
pushw
dec
push
js
mov
mov
minps
frstor
xor
add
imul
movsl
popf
or
movsb
inc
jb
das
arpl
jmp
jp
push
cvttps2pi
call
das
cmp
jne
xchg
dec
pop
movsb
ljmp
data16
push
lret
ffree
xor
loope
pushf
xor
jmp
adc
sbb
icebp
addb
in
cmp
or
cmpsl
jo
cld
add
fwait
shll
daa
add
cmp
push
aaa
and
add
sbb
je
enter
add
sti
inc
std
mov
dec
add
sbb
jmp
or
mov
jb
mov
xchg
add
lahf
call
adc
pop
mov
add
data16
add
xor
out
pop
add
loopne
or
cs
push
lock
add
xor
mov
out
pop
adc
rolb
sbb
sbb
addb
xor
add
push
sbbb
les
rcll
pop
jmp
inc
std
jl
and
cmp
ret
jae
es
into
cmp
mov
inc
inc
pop
mov
adc
bound
fcomps
int
adc
xor
popa
xchg
daa
jge
add
adc
jbe
sbb
push
std
scas
dec
and
pop
cwtl
orb
fadds
add
inc
mov
pop
popf
mov
mov
scas
scas
add
rol
sub
lahf
add
addr16
ror
fsub
ja
jnp
pop
enter
sub
mov
sbb
pusha
cmpsb
cmp
or
daa
inc
mov
add
jbe
popa
dec
mov
push
add
add
aad
out
cld
in
xor
xchg
testl
fcoms
fnstenv
jg
mov
test
xchg
mov
outsl
rolb
movsb
mov
cmp
decl
add
sbb
xor
js
pop
pop
add
into
sbb
inc
jns
cmp
pop
xor
jp
ljmp
ss
sbb
jg
repz
call
add
stc
lahf
movb
mov
rolb
jle
cltd
inc
fisubrs
add
mov
repnz
pop
sub
add
cld
imul
lds
or
mov
lret
push
xorb
por
push
add
xor
pop
add
cmp
adc
add
dec
imul
add
pusha
or
add
call
sahf
xchg
pop
push
dec
out
cs
subb
scas
fcoms
inc
push
sti
cmp
xorb
out
add
std
jnp
add
jl
ror
fwait
sbb
inc
sub
in
lock
xchg
and
test
test
xchg
push
enter
cmp
repnz
jl
pop
mov
jmp
cld
test
mov
aaa
inc
lahf
enter
add
fmuls
je
mov
and
xchg
mov
stos
ret
nop
daa
dec
ret
addl
jl
inc
add
jo
sbb
mov
sbb
rolb
bound
imul
xchg
mov
inc
or
and
pop
insb
sub
push
sbb
dec
out
push
adc
pop
out
xor
out
mov
add
das
lods
xorl
repz
mov
push
loop
add
clc
lods
pop
inc
add
mov
add
out
icebp
iret
call
mov
inc
repnz
inc
test
mov
push
into
jle
and
pop
scas
loop
add
leave
inc
mov
pop
shr
add
and
mov
add
outsl
imul
mov
add
aad
dec
fcmovnbe
dec
add
jp
es
pop
add
mov
push
push
push
mov
lods
cmp
subb
push
cmp
nop
sub
xchg
cmp
push
cmpsb
mov
adc
inc
enter
jo
pop
popa
cwtl
icebp
xor
aas
sbb
mov
fists
xor
mov
sti
mov
testb
dec
inc
add
cmp
push
js
sbb
cld
stc
xchg
add
and
push
xchg
jne
add
shlb
push
fldl
jg
imul
icebp
dec
sti
mov
add
push
es
cmp
enter
mov
sub
out
gs
rolb
clc
inc
incb
dec
shlb
push
daa
cli
idivb
and
xchg
add
jp
cltd
cmp
sub
aaa
or
sti
lods
fs
or
in
adcl
adc
mov
clc
push
call
sbb
sub
add
das
cld
or
or
push
dec
lock
mov
aas
and
test
dec
faddl
adc
rolb
add
fwait
dec
ljmp
lods
fidivrs
add
popa
subb
dec
fildl
add
dec
jmp
vandnps
jp,pt
inc
incl
hlt
loop
push
movl
push
add
jo
inc
push
ljmp
cwtl
dec
sub
xor
add
inc
lock
add
in
cs
loopne
dec
pop
add
sbb
mov
pop
inc
pusha
and
add
mov
jecxz
fildll
add
les
or
add
mov
push
cmp
mov
dec
ljmp
repz
insb
mov
repz
mulb
icebp
inc
sti
xchg
rcl
ljmp
sahf
scas
jo
jl
xchg
push
jb
stos
dec
add
loop
cmp
sbbl
and
pop
xor
adc
adc
push
push
rorl
pop
cmp
mov
add
mov
hlt
xchg
cmpsl
dec
cmp
lock
mov
add
xorb
cmp
pop
mov
je
pop
ret
dec
push
xchg
scas
xchg
call
add
inc
ret
pushl
or
add
and
cltd
repnz
add
into
mov
hlt
xchg
sub
and
es
std
add
ficoml
gs
add
leave
cwtl
dec
aas
not
or
imulb
ljmp
add
cli
jle
scas
dec
add
pop
rorl
sub
sub
fiaddl
inc
cmp
mov
add
repz
cmp
mov
push
insb
inc
clc
movl
xchg
xor
dec
lahf
pop
mov
rclb
jl
fcoms
push
popa
loop
das
and
mov
pusha
sbbb
push
xchg
sbb
add
jge
push
add
arpl
and
mov
sbb
adc
cltd
sbbb
lret
pop
push
add
out
fdivrs
popa
jb
add
push
jmp
cmpsb
xorb
cmp
dec
test
aad
movb
addr16
jae
or
js
and
add
lahf
int3
outsb
roll
adc
pop
and
xor
pop
and
je
paddusw
shl
sub
in
add
push
xchg
sub
outsb
mov
add
dec
sbb
les
adcb
xor
push
outsb
cmpb
jge
jo
cmpsl
scas
xchg
std
jo
data16
sub
sbb
pop
dec
test
sub
hlt
pop
lahf
aas
arpl
add
call
fisttpll
out
inc
xchg
fisubs
inc
leave
pop
int3
data16
inc
add
add
add
add
int
dec
out
add
popf
sbb
loopne
add
popa
dec
or
pop
xor
out
rol
push
cwtl
out
inc
add
push
sub
xchg
adc
cmp
sbb
push
sti
xor
mov
and
rcrb
adc
jbe
add
ret
push
inc
loop
pop
insl
add
mov
and
rcll
outsb
cmc
filds
lret
inc
cwtl
repnz
and
popa
sub
pop
mov
mov
mov
clc
add
stc
ficomps
add
xchg
lods
stc
movsb
stc
or
add
fbld
out
push
pop
pop
inc
aas
ljmp
and
jp
popa
popa
mov
lsl
xchg
sbb
insl
add
bound
push
mov
mov
and
arpl
sub
mov
add
hlt
adc
adc
sbb
xlat
mov
and
enter
popa
lret
mov
pop
jg
mov
rcrl
in
mov
dec
nop
jecxz
mov
fildll
push
adcb
inc
popa
mov
loope
pop
xor
fs
cltd
add
lret
mov
mov
sbb
jge
add
jle
mov
les
ja
test
jecxz
sub
dec
roll
mov
shlb
jg
repnz
add
cld
nop
jb
lea
mov
cvtps2pi
outsl
add
sahf
fs
popa
mov
cli
fisttpl
mov
lods
testl
out
and
inc
bound
ss
push
jp
push
out
lods
leave
pop
xchg
sub
divb
movsb
jae
dec
out
enter
loope
test
push
or
jb
adc
xchg
sub
add
std
add
mov
inc
add
dec
iret
ds
inc
add
bound
out
in
jb
cmp
loope
aaa
add
adc
fbstp
inc
xor
mov
mov
cli
jp
xchg
adc
sbb
push
sbbl
in
fstl
pop
sub
cmp
popf
fdivrl
loop
add
enter
pop
call
and
xor
insb
mov
add
call
loopne
sub
mov
jbe
loopne
aaa
loop
mov
mov
add
notb
xor
rolb
mov
out
jnp
adc
popa
les
mov
insb
outsl
mov
aas
adc
sti
sbb
mov
out
dec
and
inc
sbb
es
dec
sub
inc
push
popa
inc
test
pop
or
mov
mov
jp
insb
repnz
test
add
xchg
push
loope
mov
add
xchg
mov
outsl
sbb
cmp
ret
lahf
and
cs
ficompl
mov
dec
pop
stos
enter
nop
inc
movsb
xchg
pavgw
push
out
mov
sbb
fildll
inc
dec
hlt
fs
fdivrl
xchg
repz
cmc
out
inc
movsb
jns
dec
es
mov
xchg
sub
xor
cli
fstl
xchg
clc
jl
add
and
je
dec
pmullw
cmp
das
faddl
jne
rdpmc
test
xchg
mov
push
sbb
cmp
iret
fidivs
cmpsb
aam
pop
in
inc
mov
fnsave
add
popf
lds
mov
add
inc
push
push
inc
mov
or
test
jg
into
mov
push
adc
ja
pusha
lock
jecxz
dec
iret
xchg
mov
call
and
sarl
cld
add
subl
lock
pusha
inc
clc
ret
mov
pop
fdivp
jge
icebp
mov
clc
fldt
or
cwtl
pop
mov
add
push
out
test
push
call
in
js
scas
scas
popa
and
movsb
sti
sarl
faddl
add
fadds
outsb
jns
add
dec
js
jg
or
xor
jbe
xor
sub
leave
mov
mov
dec
cmpl
aaa
inc
sub
xchg
push
lea
mov
or
dec
jle
jo
fstp
cs
mov
add
pop
outsb
in
clc
out
add
jae
cltd
cmpsb
in
push
cmp
repnz
int3
add
sub
sbbb
and
sahf
lret
ss
add
add
dec
icebp
add
or
sbb
dec
test
mov
add
rcrb
cld
cwtl
mov
add
scas
mov
sbb
pushf
fadds
stos
cli
int3
inc
jb
or
add
fisubrs
mov
push
dec
bswap
in
xor
hlt
negw
add
out
nop
add
loopne
int3
push
cld
xor
lret
out
inc
pop
or
loope
jle
outsb
neg
add
inc
fsts
cmp
add
xchg
jnp
daa
adc
xor
add
sub
sub
inc
movsb
hlt
pop
and
pop
fdivrl
add
leave
adc
aas
xchg
adc
xchg
test
or
mov
out
mov
push
lcall
xorl
lods
inc
es
nop
mov
cmp
cmp
stos
add
push
test
mov
je
cmp
push
add
sub
fmulp
leave
push
xchg
jl
adc
nop
test
add
cltd
cwtl
in
xchg
add
inc
repz
or
jo
fdecstp
sahf
repnz
mov
jne
bound
imul
add
movb
iret
ljmp
pusha
sub
pop
adc
jo
push
repz
into
in
dec
jno
jl
cli
add
les
imul
stos
pop
movsb
dec
orl
popa
or
rcrb
sub
push
lret
orl
cmpsb
lods
mov
cld
outsl
add
add
jbe
jle
test
mov
pop
mov
sub
rorb
fwait
adc
adc
mov
add
shlb
dec
push
mov
ffree
push
push
orb
sti
icebp
mov
jne
push
jmp
imul
jge
movsl
lcall
shrb
add
adc
call
repz
mov
cmpb
add
popf
pushf
cld
ror
mov
fdivrp
or
dec
add
fs
jno
jbe
add
aaa
incl
and
push
outsl
xor
lds
leave
mov
and
rcll
add
dec
lds
flds
in
mov
push
inc
iret
cltd
pop
add
rorb
or
dec
orb
jbe
xor
xchg
test
cmp
fidivs
push
lock
repnz
jo
loop
push
int3
mov
and
lock
xor
dec
push
add
or
or
stos
fldcw
inc
subl
outsl
adc
sbb
add
add
mov
and
add
in
rorl
sub
ret
sub
out
inc
add
xor
add
sub
mov
sbb
pop
inc
outsb
fldl
adc
add
lret
insb
mov
jge
add
in
or
movsb
add
and
dec
pop
xchg
inc
fs
cmp
rclb
and
in
in
mov
sbbb
adc
cmpps
mov
fcom
stos
les
add
mov
add
jecxz
mov
mov
test
ljmp
push
xchg
xchg
lgs
push
imul
loope
insl
dec
xchg
cld
inc
fiaddl
cs
test
add
mov
sbb
pop
hlt
jbe
pop
mov
sub
fcompl
test
movb
int
pop
leave
insb
mov
mov
add
mov
into
dec
push
cltd
je
add
stos
jb
lcall
push
sub
fmul
daa
in
leave
mov
jge
adc
jecxz
mov
xor
dec
or
lcall
adc
leave
pop
add
mov
cld
push
dec
shrb
push
sahf
jecxz
shll
push
fdivl
push
xchg
push
pushf
in
rol
call
pop
cmpsl
xacquire
lock
mov
sbb
add
fidivl
dec
add
outsb
and
adc
cmpsb
and
push
ljmp
or
lret
gs
xor
adc
mov
lock
fsub
out
insl
mov
pop
repnz
clc
sbb
jne
add
jnp
mov
movsb
pop
inc
out
xchg
sub
pop
loope
add
je
outsl
lock
arpl
xchg
xchg
sarl
outsl
ret
jbe
mov
cmp
andl
and
incl
rorb
lds
cmpsl
divl
push
cmp
repz
cwtl
rolb
xor
or
ret
dec
push
pop
jnp
adc
clc
xor
sbb
fmull
push
push
sbb
adcb
mov
lock
jno
cmp
lcall
or
xchg
or
dec
out
jecxz
mov
or
dec
repz
adc
arpl
pop
nop
pushf
repnz
pop
sub
inc
mov
pop
nop
sub
jle
add
enter
loope
inc
lods
xchg
sbb
pop
nop
push
mov
pop
add
test
xchg
es
outsb
leave
xor
cmp
mov
jae
mov
ja
popa
ds
adc
sub
bound
add
in
dec
std
iret
insb
cmpsb
jae
add
lods
lds
add
lcall
add
cmp
sbb
mov
cs
int3
in
loope
or
mov
add
inc
fcompl
fildl
mov
pandn
push
stos
cmp
jmp
lcall
push
mov
add
data16
enter
push
jmp
lret
inc
out
xor
add
popa
mov
dec
cli
inc
sbb
lahf
andb
mov
push
jb
sbb
sti
loop
xor
imul
pop
inc
inc
push
test
out
outsb
add
pop
fsubrp
int3
rclb
nop
mov
js,pn
add
mov
push
and
xlat
dec
pop
int
add
push
loop
out
mov
fsubl
sub
mov
mov
cmp
xor
add
outsl
mov
or
ficompl
or
and
mov
inc
jmp
push
mov
and
sbb
andb
aam
xor
stos
inc
movsb
and
cwtl
pop
into
imul
iret
pop
cmp
xchg
push
shr
aam
add
fsubs
popw
lds
add
jecxz
leave
mov
sub
repnz
jge
add
test
stos
inc
insb
add
pushl
rorl
dec
adc
test
sbbb
dec
adc
and
call
insl
fiadds
lret
push
lods
xchg
sti
add
aad
in
push
pop
inc
or
movsb
jb
cmp
not
in
pop
pop
ss
and
dec
test
adcb
mov
add
imul
lret
lock
in
mov
je
xor
into
xor
jo
or
cmp
add
out
cmp
pop
mov
in
fcmovnu
mov
flds
mov
push
mov
inc
xchg
mov
inc
add
or
add
stos
push
cmpsl
aas
mov
push
add
xchg
jbe
sbb
into
xor
push
push
je
repz
dec
add
lret
movsl
jo
loopne
mov
bound
inc
repnz
lock
xor
jbe
pusha
add
xchg
jge
nop
int3
push
xchg
rclb
mov
add
or
xor
mov
lcall
cwtl
jg
lds
pop
mov
test
xor
loopne
mov
mov
and
xchg
or
add
mov
mov
fildl
movsl
mov
int3
insb
je
xchg
dec
incb
push
ljmp
fs
add
into
jo
add
adc
clc
add
jae
sbb
jno
dec
mov
leave
pusha
test
add
inc
idivl
sub
sub
clc
lahf
jl
mov
adcb
fisttps
or
in
iret
pop
mov
insb
scas
jnp
xchg
add
cmp
add
outsl
adc
aad
add
int3
lods
cld
push
sub
ret
pop
dec
imul
add
insb
or
pusha
sbb
aam
jo
add
inc
fdivl
add
cmc
iret
add
fistpll
mov
cmp
jne
int
xor
jcxz
cmp
popa
jns
imul
nop
mov
cmp
test
daa
mov
pop
add
fmull
scas
add
fstpl
mov
in
adc
fimuls
nop
mov
stos
adc
inc
mov
je
inc
clc
xchg
push
add
test
mov
add
enter
cmpsl
pop
test
add
sub
add
roll
addr16
pop
cmp
scas
subb
push
mov
mov
or
dec
scas
or
daa
dec
add
ds
cmp
push
add
adc
push
leave
test
mov
popf
pushf
xorb
sbb
mov
adc
inc
lods
add
cli
jne
out
mov
xor
and
arpl
ss
test
jne
adcl
push
clc
sub
adc
xchg
pop
call
add
adc
jle
add
popa
insb
lret
clc
in
mov
inc
test
ss
sub
push
jg
cmp
jbe
pushf
add
xchg
repz
fmulp
mov
adc
ret
fucomp
js
mov
lds
pushf
pop
outsb
out
jl
daa
dec
and
mov
lods
dec
out
mov
add
mov
bound
mov
or
push
or
xchg
subl
roll
sti
xchg
add
cmp
enter
xlat
mov
jle
pop
push
out
push
testl
xor
sub
daa
fstps
push
add
leave
mov
inc
or
cmp
lret
dec
xchg
xchg
inc
int3
pop
inc
test
cli
push
xchg
xor
sbb
inc
add
lea
dec
cmc
inc
enter
sbbb
push
xchg
aas
jmp
jne
push
cwtl
and
rorl
push
add
lret
outsb
mov
insl
dec
and
pop
inc
cs
jp
add
ljmp
pop
cmp
pop
cmp
sbb
mov
insl
nop
add
and
das
dec
lret
add
and
push
jmp
pop
pusha
cmp
mov
mov
add
adc
roll
push
xor
push
test
xchg
pop
add
pop
cmp
out
cmp
pop
filds
add
xchg
or
adc
sbb
scas
arpl
add
lret
orl
add
pop
mov
add
push
jbe
sub
add
jne
cltd
out
sub
add
fwait
mov
pop
stos
les
test
and
xorl
mov
add
push
mov
pop
sti
ljmp
push
xor
fadds
sbb
lret
or
sub
fstpt
cs
add
outsb
enter
int3
les
and
mov
cmp
mov
cmp
repnz
push
rol
fldl
sti
push
push
repnz
cld
add
sbb
pop
sbb
or
jb
push
pop
insb
je
add
out
hlt
xchg
enter
lock
xchg
add
int3
pop
adc
add
dec
mov
xchg
test
adc
pop
rorb
xor
adc
adc
sbb
popf
fs
xchg
add
cli
mov
cwtl
add
or
fistpll
or
or
lock
adc
mov
bndstx
aam
pushf
js
add
mov
jb
jno
push
jl
jo
add
arpl
xor
push
je
or
push
inc
outsl
movsb
xchg
dec
and
add
add
dec
jb
add
subb
jbe
adcl
notl
cmpl
repz
fs
and
pusha
pop
jg
jnp
pop
loop
add
adc
jno
lret
xchg
cmp
adcb
das
and
negl
or
xor
push
sub
or
ret
pop
insb
add
and
cmp
inc
inc
out
mov
sub
sub
mov
mov
lock
lods
mov
xor
je
outsb
sbb
mov
fs
test
pusha
jb
fisubs
iret
dec
push
or
add
js
lcall
dec
push
inc
xchg
adc
dec
cs
lods
imul
add
xorl
add
insb
add
pop
push
sub
inc
hlt
out
bound
mov
jge
mov
cwtl
or
imul
shlb
push
sbb
push
pushf
and
test
mov
mov
pop
aad
sub
sbb
and
pop
and
sbb
icebp
scas
dec
roll
repz
push
repnz
lods
sbbb
sub
out
inc
out
or
lods
flds
pop
fistl
jae
rcl
dec
xor
mov
add
push
cmc
cs
sbb
add
out
mov
and
xchg
add
pop
sar
mov
add
or
les
imul
mov
jns
mov
xchg
int
pop
mov
push
pop
xor
and
sub
cmc
repz
dec
stos
dec
hlt
mov
and
bound
xchg
cmp
pop
out
dec
sbb
sbb
or
xchg
xchg
jl
cmp
es
mov
div
in
jge
mov
lods
push
test
mov
fnstsw
cmpsb
push
adc
jbe
sahf
scas
add
cmp
xor
add
aas
mov
mov
mov
andb
add
mov
stos
pop
aaa
jecxz
sbb
inc
xor
ljmp
xor
jno
cltd
cmp
push
cmp
cmpsb
lods
xor
push
and
mov
mov
insb
js
add
pusha
dec
out
cmpsl
jno
adc
add
loopne
lds
sub
push
js
aaa
jg
loopne
loope
repz
push
mov
pushf
in
je
add
or
cs
xchg
inc
adc
xor
aas
add
movsb
pushf
scas
cmp
das
dec
jae
cld
mov
and
cmp
clc
push
cmc
xchg
dec
push
push
lock
orb
fsub
xchg
dec
movsb
cmpb
cmp
pop
loope
mov
sahf
in
sbb
arpl
fwait
icebp
movsb
js
inc
movsb
daa
sti
mov
dec
mov
mov
ret
mov
inc
mov
lahf
add
sub
add
or
outsl
mov
packuswb
cmp
insl
mov
pop
add
inc
repz
add
mov
push
scas
and
cld
and
xor
mov
mov
add
sti
or
repz
cmpsl
stc
add
and
mov
add
in
pop
aas
mov
out
pop
push
add
outsl
xchg
add
insl
inc
cmc
sbb
xchg
loop
sbb
xor
mov
push
adc
add
roll
jg
popa
repnz
pop
int
push
xor
mov
adc
jne
mov
xor
test
cli
out
mov
jns
push
cmc
dec
jecxz
mov
xorb
push
xchg
dec
cs
or
mov
imul
mov
paddb
sbb
inc
pop
pop
jp
test
cmp
mov
mov
test
push
xor
sbb
mov
leave
in
ret
xchg
add
jne
inc
inc
cmp
xor
enter
cmpsl
add
ret
sahf
and
jbe
adc
add
popa
ja
xchg
sbb
add
dec
push
sarb
jno
subl
xor
pop
popf
xchg
popl
and
mov
nop
in
pusha
and
roll
push
adc
adc
aam
lcall
leave
vmovaps
in
into
add
inc
std
sbb
inc
xor
sarb
or
mov
jb
sahf
jno
add
sbb
pop
xchg
add
nop
and
mov
push
push
or
andl
cmp
fimuls
xor
add
lods
clc
inc
nop
ljmp
stos
loopne
addr16
add
imul
add
in
pop
push
pusha
mov
add
stc
mov
add
sbb
mov
divps
add
jo
gs
ret
adc
mov
lcall
or
clc
add
inc
jnp
add
xor
loop
sub
jl
sbb
hlt
mov
sbb
xor
loopne
xlat
in
or
xor
or
aam
fidivrs
decl
in
inc
mov
adcl
loopne
pop
add
add
mov
add
out
mov
and
scas
xor
lcall
fimuls
add
xchg
pop
testb
jge
pop
nop
xacquire
xorl
es
lods
imul
js
inc
sbb
pop
jge
fisubrs
add
shr
ss
jl
sbb
flds
sub
enter
lock
jb
lahf
add
lods
jo
and
mov
add
cmp
pop
inc
push
pushf
test
and
mov
add
push
adc
fcmovbe
mov
movsb
push
orb
push
pop
hlt
sbbb
mov
outsb
ljmp
imul
add
scas
add
sbb
and
add
xor
jbe
popa
mov
adc
cmp
enter
sbb
xor
rcl
push
jbe
pop
stos
pusha
add
adc
add
cs
mov
cltd
dec
mov
aas
sub
add
jns
add
test
sar
ja
pop
push
add
push
in
mov
xchg
mov
jbe
add
jl
add
jbe
add
push
add
enter
insl
popl
mov
roll
inc
test
cwtl
gs
add
inc
loopne
or
cmp
jne
adc
aad
imul
out
mov
xor
jo
scas
add
push
or
aaa
ficomps
je
out
add
mov
ret
jl
mov
add
movsb
cmc
rorl
add
insl
lods
pop
push
leave
es
mov
fisubs
test
or
test
push
pusha
add
aas
or
and
lods
clc
adc
add
mov
or
mov
rcll
movl
jecxz
jbe
insl
jmp
cli
sub
outsl
add
xor
test
add
add
cs
xchg
ja
adc
pusha
inc
adc
mov
out
mov
adc
sub
xor
jns
inc
in
cmp
sbb
mov
sub
add
or
movsl
adc
dec
out
gs
popa
push
cwtl
loop
or
mov
cmp
add
fisubrl
cmp
cltd
into
mov
inc
jmp
mov
add
mov
add
data16
cmpsb
xchg
enter
rolb
jecxz
xchg
cmp
mov
xor
add
movsb
cmp
rcrl
aam
or
repz
xchg
sbb
sarl
sbb
call
fisttpll
rcrb
add
fbld
fcoms
adc
mov
inc
lds
cmpsb
mov
jl
ds
add
aad
cmp
add
mov
clc
in
test
lods
jno
add
jecxz
add
dec
add
pushf
add
adc
add
and
test
insb
filds
fldl
stos
add
or
jae
shll
dec
rcrb
cli
dec
mov
sub
push
nop
add
bound
inc
add
sarb
or
mov
add
and
insl
pop
inc
pop
or
ret
call
cwtl
shlb
add
pop
loope
in
xchg
test
mov
repnz
add
push
cmp
add
xor
xor
aas
add
mov
add
test
cmpl
inc
movsl
addl
cmp
mov
cmpsl
lret
es
in
add
enter
test
jne
jns
cli
mov
jae
mov
into
inc
es
mov
imul
push
add
int
jo
and
add
data16
lcall
cmp
std
jmp
add
shrl
ljmp
pusha
je
data16
push
cmp
mov
std
addb
insl
popl
jmp
call
fs
xor
or
jg
fwait
adc
jb
popf
add
inc
cmpsl
jp
sbb
xorl
xchg
jecxz
push
sti
fstl
and
and
insb
lds
mov
push
lods
push
add
movsl
sbb
cmpsl
inc
sub
orl
mov
fcoml
es
mov
mov
lahf
add
aaa
mov
or
out
or
inc
out
and
test
ret
shlb
push
std
scas
inc
out
popf
gs
pop
add
test
hlt
jo
add
das
flds
xor
add
jne
jmp
add
pop
xchg
or
cmp
daa
inc
cltd
jno
jb
insb
clc
mov
std
ja
loope
lea
and
aam
data16
aas
sub
lret
mov
mov
cmp
adcb
mov
leave
jmp
add
or
jne
repnz
les
sub
insl
push
aam
sbb
jp
in
mov
pop
cmpb
push
adc
sbbb
gs
int
cmp
lods
outsb
push
mov
mov
test
push
daa
pop
aam
aad
mov
adc
cmp
jge
and
or
mov
xchg
sub
add
xchg
mov
add
inc
fwait
and
data16
cwtl
pop
daa
fs
popf
jg
add
sbb
les
dec
sarl
mov
test
pop
mov
push
xor
ret
xchg
cmp
call
jnp
inc
jo
lock
ja
sub
sbb
sbb
popa
fwait
out
and
add
mov
test
xlat
push
xchg
inc
jb
pusha
push
rol
cmp
nop
push
mov
loop
scas
popa
xchg
jnp
cmp
xchg
outsl
cwtl
fs
dec
in
add
loop
push
xchg
movl
push
out
les
in
loopne
inc
add
jae
xor
lock
pop
mov
daa
jp
push
movl
mov
test
cmp
add
lret
jno
sub
push
hlt
fwait
pop
or
ja
inc
aas
stos
in
and
aam
or
jns
adc
in
add
sbb
inc
adc
mov
call
xor
jns
adc
sbb
pop
xchg
aaa
dec
sahf
pop
test
xlat
stos
dec
rcrl
mov
mov
or
movsl
in
das
cwtl
jnp
lds
stos
push
and
fistps
mov
pop
movsl
in
adc
cwtl
data16
and
sbb
and
shlb
jo
stc
or
xor
pushf
xchg
add
cwtl
push
mov
pop
mov
mov
cmp
add
lock
jmp
int3
add
js
loopne
pop
mov
fiaddl
pop
dec
add
push
mov
in
shlb
imul
xchg
sub
ja
daa
or
mov
sub
test
cmc
cs
incb
call
popl
or
insb
mov
loopne
add
movsl
lahf
cli
xor
pop
add
jmp
out
lock
add
ds
enter
shrl
lock
push
stc
sub
mov
fistps
mov
mov
aam
outsl
movsb
enter
and
add
ret
hlt
jnp
jb
pop
pusha
cmp
jl
jmp
ljmp
pop
push
xor
or
jecxz
sbb
in
pop
je
sti
sbb
inc
fisubl
sub
inc
testl
scas
adc
sti
icebp
add
out
jae
dec
xchg
repz
xor
cmp
pop
ret
mov
movsb
sub
imull
push
mov
add
dec
je
push
in
ret
repz
pop
int
cmpsb
mov
cmpsl
cmp
and
loope
sar
pop
add
xchg
jo
dec
outsl
out
mov
and
loop
test
mov
dec
mulb
xor
pop
or
xchg
shrb
jnp
cmc
orl
add
xchg
xchg
mov
add
add
fs
in
js
addr16
mov
mov
sbb
out
dec
xorb
lretw
cmp
add
repnz
mov
sbb
mov
jo
xor
add
cmpsl
jae
rorb
js
cmp
cmc
jle
enter
push
call
xor
movlhps
outsl
adc
inc
roll
dec
push
lods
sub
out
cmpb
testb
fsubrs
fnsave
push
in
mov
imul
aad
scas
add
push
inc
add
lret
outsl
add
push
pop
cmpsb
ret
repnz
rorb
test
pop
lret
jg
push
dec
shlb
mov
jecxz
data16
add
lea
mov
jne,pn
inc
push
pop
aaa
xchg
cwtl
sub
jno
scas
inc
cmp
jl
test
addl
inc
lret
add
adc
jecxz
shl
push
xor
jb
add
push
add
das
aas
xor
jg
add
mov
inc
in
into
cld
popl
adc
xchg
lcall
pop
inc
inc
subl
verw
mov
mov
push
mov
mov
jecxz
stc
sbb
add
test
fimuls
xor
mov
cltd
add
rorl
std
jns
xchg
out
add
push
arpl
insb
xor
add
jle
mov
jp
xchg
push
rol
jmp
sbb
lea
decl
sbb
sbb
lcall
add
test
jg
fcomps
lds
add
arpl
int
out
negb
cld
sub
add
orb
testl
gs
rorb
aam
sbbl
xchg
add
jns
pusha
es
fwait
in
in
imul
adc
mov
nop
subb
out
mov
sub
jl
push
test
pop
sbb
test
rorl
ja
jae
push
rorl
sti
pcmpgtb
inc
push
mov
cmp
movb
sbb
jle
push
ret
cltd
inc
mov
xor
pusha
mov
cmpsb
imulb
insb
cmp
add
or
shlb
push
xchg
mov
xchg
adc
faddl
popa
jge
test
in
xor
jae
add
mov
js
cwtl
mov
push
mov
jbe
pop
cmpsl
add
imul
or
add
add
mov
and
setge
add
cmpsb
xor
lret
mov
mov
movlps
cwtl
dec
scas
mov
add
or
xor
pusha
lea
pop
inc
add
icebp
xchg
test
cmpb
push
sbb
sti
aas
addr16
sub
leave
add
or
cs
cmpsl
mov
jg
or
inc
pop
inc
shlb
ret
in
or
and
sub
or
and
mov
dec
aad
mov
xor
fwait
jp
rcll
sbb
add
test
pop
mov
and
push
cld
add
insl
sbb
add
mov
aaa
std
add
sbb
aad
ret
daa
push
lcall
sarl
add
das
mov
sti
out
pop
pop
sbb
adc
adc
lea
mov
cmpsl
jge
out
repnz
fucomi
cmpl
push
fsubl
mov
mov
cmpl
dec
sub
or
into
add
icebp
in
and
nop
fsubs
mov
rclb
push
add
sub
in
lret
repz
fldt
push
add
sub
xchg
clc
popf
jno
sbb
jl
pop
push
mov
mov
ret
shlb
lret
jo
sub
add
fildl
mov
call
loop
sbbb
rcll
dec
mov
repz
cmpsl
rcrl
and
js
xor
add
int
mov
jnp
and
gs
mov
mov
or
add
mov
fwait
mov
test
sub
and
jp
out
pop
jo
pusha
and
arpl
mov
aaa
loop
dec
mov
addb
xor
mov
ljmp
jmp
pop
or
dec
cs
jl
cmp
adcb
mov
lret
rcrl
xor
sarb
push
cmp
jmp
mov
cmp
sti
inc
scas
add
mov
push
pop
mov
add
adc
add
push
in
mov
loopne
loope
repz
jbe
jp
add
jmp
imul
js
iret
nop
sub
test
inc
sti
or
pop
aad
xchg
dec
lock
sub
add
mov
mov
ja
inc
xor
rcr
cmp
add
mov
loop
cmp
enter
pop
inc
mov
ret
jl
add
adc
add
sub
add
push
sbb
loop
cmp
add
push
add
xlat
out
or
jns
in
popa
jbe
add
pop
add
mov
scas
ror
clc
in
stos
lock
inc
adc
push
jecxz
lcall
mov
leave
nop
mov
incl
test
pop
test
iret
add
sarb
sub
xor
cmp
test
pop
add
nop
ret
rcrl
add
add
jb
jg
imul
ficoml
cmp
xchg
add
clc
insl
mov
xor
aas
push
push
push
movsl
inc
repz
xor
or
mov
imul
jle
sub
sub
lcall
aad
test
cld
fistpll
mov
movsl
cwtl
cmp
in
pop
jno
cmpsb
mov
mov
jae
jb
out
js
dec
or
xchg
mov
inc
ret
ljmp
sub
jg
xor
js
pop
xchg
xor
scas
outsl
cmc
xor
ret
push
xchg
and
icebp
mov
or
sbb
clc
dec
pop
imul
dec
cmp
pop
gs
fsubrl
cmp
fwait
adc
sub
in
cld
add
add
mov
jp
mov
inc
leave
and
dec
loopne
gs
lods
cltd
add
loope
sbb
arpl
and
mov
je
mov
dec
add
xor
stos
lods
aam
shl
add
push
clc
mul
pusha
jns
add
inc
sbb
ljmp
or
pop
dec
mov
clc
into
xchg
hlt
mov
test
out
inc
push
orb
cmpsl
pop
add
je
aam
cmp
fs
and
jno
ds
push
lret
test
ret
add
out
movsl
ss
pop
and
lock
pop
push
cmp
loopne
sub
lahf
dec
adc
cmp
shll
jl
dec
push
mov
dec
mov
enter
xorb
xchg
mov
adc
adc
or
data16
mov
inc
xor
cmpsb
hlt
or
clc
dec
add
lcall
test
adc
jnp
sbb
incb
mov
adc
fwait
pop
rorb
sub
and
shrb
pop
add
mov
xor
lret
in
cld
stc
mov
cwtl
push
scas
pusha
das
jecxz
lret
out
loope
pushf
dec
sbb
fldl
jnp
in
repnz
aaa
movl
xchg
clc
and
insl
sub
andb
repnz
cmpl
adc
jns
cvttps2pi
jne
lahf
add
dec
xchg
scas
xchg
insl
sar
negb
sub
popa
in
sbbb
pop
jbe
lock
and
add
cli
popf
loope
out
pop
add
push
xor
push
add
add
xor
mov
lock
pop
std
inc
test
ja
loope
fcoms
add
push
test
push
mov
shrb
mov
mov
dec
xchg
lods
cmp
and
push
jnp
lods
jns
jnp
add
je
dec
mov
and
stc
pusha
jp
add
jmp
jl
jbe
push
add
dec
mov
lahf
adc
negb
enter
add
loop
inc
adc
fiadds
cmp
cli
jecxz
aaa
jbe
push
cmpsb
repz
pop
add
xchg
sarb
jbe
cmp
push
cmp
dec
or
aam
call
test
test
stos
jns
enter
add
ret
mov
add
out
mov
fwait
mov
aad
insb
dec
ja
pop
jl
dec
out
and
lcall
adc
dec
clc
fiadds
cmpsb
nop
in
int
shll
xchg
jle
add
mov
das
shlb
rcll
adc
imul
mov
xchg
cmp
xchg
add
repnz
sbb
and
test
sbb
sarb
add
pop
aas
scas
lods
rcll
adc
dec
repz
cmp
mov
cmova
lret
mov
rolb
mov
fisttpl
sbb
add
mov
mov
sbb
int3
outsb
gs
je
add
addr16
adc
mov
and
mov
xchg
andl
mov
jne
sub
dec
cmpsb
cmp
aaa
inc
add
stos
sbb
and
stos
push
mov
add
xchg
nop
cmp
cmp
lock
mov
jae
mov
add
hlt
and
roll
jns
add
mov
cmp
add
cmp
or
insl
in
pop
loop
xlat
out
arpl
jmp
lea
mov
ljmp
push
add
rorb
xchg
mov
ret
stos
pop
push
orb
add
dec
ret
loopne
mov
cld
faddl
and
jne
push
orb
rcrb
push
hlt
and
in
push
pop
mov
lods
sbb
push
xchg
loopne
add
sub
adc
rcrl
cmpsl
out
mov
xchg
or
adcb
dec
cwtl
shlb
rcr
add
in
xchg
inc
out
jb
pop
add
fisubrl
repnz
fildl
xor
inc
mov
mov
pusha
jnp
inc
bound
xchg
or
sar
add
lods
popf
out
xchg
mov
cmp
ljmp
adc
jecxz
mov
mov
in
add
js
int3
and
repz
add
sub
fstpl
mov
adc
push
adc
xor
pusha
cwtl
inc
popa
push
xor
xchg
rclb
test
out
ds
in
or
fwait
inc
add
outsb
into
mov
or
add
jae
push
add
mov
aaa
es
xor
add
push
jns
jo
jne
cs
ror
movsb
xchg
cmp
stc
lret
add
or
dec
ds
add
leave
mov
push
adc
sbb
inc
cmp
aad
inc
es
sbb
and
mov
cmp
or
xlat
loop
aad
loope
push
add
xor
inc
loopne
jns
mov
xor
hlt
jle
rcll
and
mov
inc
cmc
outsb
add
movsl
sti
sub
push
mov
inc
popa
pusha
cmpsb
fdivrs
xor
add
adcb
lahf
jb
mov
pop
repz
mov
add
movsb
mov
cmp
add
loop
mov
jbe
xchg
mov
and
adc
mov
mov
cld
out
aam
add
sub
ffreep
jb
into
ss
int
iret
psadbw
mov
push
cld
adc
inc
or
sub
out
add
add
mov
rolb
mov
int3
subl
xor
fwait
add
sbb
je
in
xchg
pop
sahf
or
mov
mov
orb
aad
cld
fcmovbe
shll
aas
es
jecxz
mov
fucomi
mov
jmp
xchg
mov
jecxz
ficoml
adc
lcall
mov
cld
lea
aas
enter
iret
or
cltd
test
add
ret
sbb
cwtl
xchg
xchg
mov
add
loope
pusha
xchg
daa
add
inc
cltd
jne
xlat
push
jp
xor
dec
mov
sub
add
in
shlb
repnz
scas
negb
mov
sbb
nop
in
mov
push
int3
push
data16
jg
mov
das
cmc
inc
mov
add
nop
lret
aas
add
hlt
incb
sub
xchg
loop
lcall
inc
fld
nop
mov
jecxz
lods
jp
dec
mov
inc
mov
or
rolb
loope
ljmp
int3
sbb
cmp
test
roll
dec
jns
adc
cwtl
outsb
pop
movsb
shl
insl
cld
nop
mov
add
repnz
jb
mov
sbbb
jp
stos
push
sti
add
test
xor
mov
inc
testb
inc
sbb
ljmp
sbb
out
adc
add
add
inc
lret
xchg
add
mov
dec
add
lea
xchg
iret
gs
xorl
loop
xchg
add
dec
in
adc
nop
xor
mov
aam
jp
adcb
pusha
and
mov
sahf
add
dec
jl
jmp
loop
out
sti
mov
mov
push
ret
or
mov
adc
or
into
loopne
push
in
mov
popa
imull
lahf
add
rcll
push
shlb
push
pop
nop
push
dec
xorl
push
sbb
lcall
loop
stos
pop
sahf
pop
testb
inc
jp
add
mov
clc
or
test
orl
bound
sbbb
in
mov
push
add
add
lock
mov
push
or
inc
ljmp
jle
add
push
and
add
sbb
lea
je
js
fs
js
sar
inc
in
outsl
ret
and
and
sarb
flds
ret
scas
push
add
inc
je
mov
and
inc
jb
mov
test
push
lock
push
cmp
add
or
out
sbb
xchg
fsubp
ret
pop
jmp
aas
mov
push
mov
add
jecxz
xchg
add
stos
jmp
pusha
adc
mov
bound
or
sti
test
inc
or
rorl
lea
ss
pop
nop
jge
xchg
pop
pushf
mov
xchg
ds
int3
add
sbbb
popa
lcall
dec
xor
pop
stos
pop
push
scas
pushf
xor
cmp
xchg
pop
iret
subb
insl
mov
pop
or
dec
xchg
aad
sti
and
adc
es
in
incb
ss
sbb
std
add
inc
mov
mov
pop
es
and
pop
shrb
fsubs
ror
cmp
bound
add
rorb
jno
add
and
dec
pop
jge
xor
cwtl
add
adcb
mov
add
or
clc
add
jg
add
lds
sbb
adc
add
ret
stos
gs
push
cmp
inc
call
movl
out
push
add
sub
xor
inc
aaa
and
xor
push
in
cmpsl
jnp
cmp
add
pop
repz
in
into
add
ljmp
jl
mov
inc
add
out
add
pushf
sbb
sbb
mov
gs
inc
jmp
jmp
push
rclb
cwtl
aas
testl
mov
add
and
or
add
dec
cltd
pop
in
mov
pusha
loopne
add
or
pop
loopne
pop
inc
jnp
and
das
sub
mov
inc
ss
push
add
add
int3
jl
add
das
xor
add
out
and
mov
add
inc
xchg
jo
adc
mov
push
in
jae
xchg
leave
add
in
rolb
ljmp
loopne
fadds
negb
pop
adc
testl
cld
fldl
enter
mov
sti
mov
sub
xor
lea
int3
add
add
cmp
pusha
jb
push
inc
jae
add
test
test
inc
cs
mov
xor
sbb
pop
fs
cmp
and
insl
leave
out
adc
xchg
sbb
movsl
pop
daa
andl
arpl
inc
nop
add
or
jns
xor
adc
leave
sub
and
popl
mov
insb
adcl
fcoms
je
jmp
sub
loopne
add
push
aas
jns
add
pop
xchg
enter
push
xor
ret
ds
movsl
in
cwtl
add
fsts
xchg
test
dec
aas
loope
add
pop
or
lcall
repz
loop
cmp
add
adc
mov
lock
mov
out
jae
adc
mov
aas
jns
es
adc
imul
lret
dec
enter
movb
mov
inc
fbstp
das
rolb
icebp
arpl
pop
dec
data16
sub
pop
lock
stos
shlb
in
sbb
leave
dec
pop
aam
imul
mov
add
je
sbb
call
cmc
add
int
jp
and
add
in
ret
inc
in
int3
cmpsb
cmp
frstor
out
add
pushf
add
fdivrp
loope
fs
arpl
cmp
and
pop
sbb
outsb
int3
dec
pop
dec
rcrb
rcrb
mov
lock
mov
test
imul
xor
add
cmp
add
pop
fs
in
pop
mov
outsb
xlat
addr16
mov
lahf
add
inc
nop
loop
adc
stc
ljmp
xchg
sbb
cmp
int3
inc
cmpsb
add
popf
xchg
andl
mov
loopne
stc
jbe
lahf
daa
popa
ret
sbb
fbstp
add
pop
mov
or
cmp
aas
push
jns
add
js
int3
add
hlt
jp
xor
cmp
push
xorl
arpl
rolb
and
pop
inc
xchg
push
loope
add
mov
mov
leave
mov
outsb
jle
pop
std
clc
add
cmp
dec
sbb
adcl
sub
lahf
adc
mov
sahf
push
push
shlb
mov
sub
in
sub
dec
or
testb
push
jmp
mov
mov
out
loope
divl
jne
testb
cmp
sbb
mull
mov
mov
push
clc
call
mov
dec
ds
fwait
add
int3
dec
out
add
add
mov
addl
js
jg
inc
scas
pop
jo
add
shlb
jge
movsb
js
dec
std
dec
add
xchg
mov
or
or
dec
dec
frstor
mov
push
pop
addl
icebp
and
fwait
ds
sbb
xchg
loopne
clc
sbb
inc
mov
rcrb
mov
fiadds
rcr
bound
lahf
loopne
add
iret
adc
cmp
add
mov
outsl
add
ret
mov
add
cmp
scas
xlat
repnz
pushf
dec
inc
mov
or
mov
sub
sbb
adc
outsb
xchg
push
test
aam
mov
sub
cli
add
inc
shl
loop
fsubs
and
push
jo
repnz
mov
in
movsb
pop
mov
popl
inc
xchg
or
stos
and
add
pusha
sub
and
mov
xchg
xchg
in
lcall
popf
pop
jecxz
mov
mov
les
add
ljmp
shrb
inc
filds
enter
adc
add
mov
in
std
jns
jp
cwtl
and
or
mov
test
js
sub
lret
mov
sub
xchg
enter
add
sbbb
add
pusha
mov
aas
cwtl
inc
mov
mov
cmpps
inc
popa
sbb
cmp
sbb
ja
fs
push
call
jge
mov
inc
cltd
xor
add
cli
aam
je
add
pop
add
push
adc
pop
push
jmp
add
inc
fists
shr
inc
add
dec
push
xlat
out
insl
add
or
daa
mov
add
mov
mov
and
xchg
mov
add
adc
call
and
insb
fcoml
dec
sbb
add
pop
mov
ss
add
movsl
icebp
adc
jle
ja
add
mov
add
imull
lcall
cld
fcmovnbe
or
sbb
jle
and
add
mov
push
xorb
jae
xor
pop
js
fmulp
dec
nop
adc
cmc
mov
jp
sub
xor
pusha
cmp
icebp
dec
in
jl
mov
rorl
fucom
ret
data16
cmp
cmp
js
pop
dec
inc
push
add
lods
adc
dec
inc
add
je
mov
adc
xchg
push
or
add
cmc
imul
pop
pusha
movl
lret
push
push
jl
out
sub
pop
clc
cltd
add
arpl
jbe
xor
xchg
mov
test
test
jno
xchg
sub
int3
add
das
jg
push
ljmp
and
xchg
fadd
push
jne
out
stc
add
xchg
mov
shrb
sgdtl
add
cs
adcb
aas
adc
bound
fidivrs
add
sbb
test
incb
and
push
cli
or
mov
faddl
fbstp
aad
xchg
fstpl
add
adc
pop
jle
xchg
mov
add
aam
lods
add
add
daa
ljmp
or
out
flds
mov
nop
rol
es
sarb
pop
iret
fstpl
test
sahf
dec
cltd
ljmp
xchg
movsl
push
sti
add
inc
inc
dec
jnp
lock
mov
inc
sub
inc
lock
mov
aas
xchg
dec
insb
mov
imul
test
xchg
stos
adc
aam
in
rolb
jns
les
or
es
add
inc
mov
sti
xor
pushf
push
notl
dec
inc
fs
lock
xor
rcrb
add
dec
add
pop
dec
sub
inc
es
xchg
ss
les
add
call
shl
cmp
add
setle
xchg
and
pusha
jle
inc
imull
push
str
daa
in
add
inc
and
cmp
jp
push
insl
add
or
xchg
fnstsw
jo
add
cltd
ds
in
dec
aas
and
mov
mov
add
mov
int3
cmpsl
mov
xor
lods
lahf
mov
add
loope
fucomi
cmp
sub
addr16
leave
pop
xor
cmc
inc
mov
and
out
call
outsb
cmp
stos
add
mov
push
pop
frstor
stos
std
lock
dec
aas
in
fildl
loope
call
add
dec
jmp
es
pop
inc
adc
shlb
pop
cmp
fiadds
lret
add
mov
push
in
mov
dec
jno
add
cmp
cld
pop
fcoms
mov
xchg
push
mov
and
in
leave
add
rclb
lds
add
imull
pusha
nop
aas
add
icebp
mov
push
cli
mov
inc
sbb
popf
std
xor
test
push
int3
enter
add
leave
mov
pop
je
cmp
mov
lcall
in
lods
js
push
and
pop
pop
add
add
lahf
lret
arpl
jo
lock
cld
add
mov
addr16
sbb
and
cmp
arpl
outsl
mov
push
inc
loopne
jcxz
fwait
push
and
mov
jnp
out
loope
add
sub
movsl
in
int3
add
push
add
or
mov
cmp
xchg
pusha
test
add
inc
mov
cmp
pop
cmpsl
jbe
mov
dec
cmp
cmpsb
je
mov
xor
test
add
dec
xchg
outsl
mov
aas
int3
imul
xor
icebp
pop
cld
lock
jl
lret
aam
ja
xor
push
xchg
add
mov
push
adc
test
inc
incb
sbb
lcall
fmull
cbtw
mov
adc
idivl
das
sti
add
cli
xchg
ss
cmp
adc
mov
xchg
add
push
psubusw
sbb
adcb
xchg
fiaddl
dec
arpl
mov
je
cs
mov
sahf
aas
dec
add
xor
lods
imul
add
out
dec
fwait
adc
or
inc
arpl
dec
add
mov
dec
pop
push
mov
orb
fisttps
push
lock
add
mov
add
pmovmskb
push
jl
hlt
outsb
popf
or
adc
je
adc
add
in
setno
fsubl
jmp
push
jl
and
sub
cld
movsb
es
loope
incb
out
jne
shll
sub
js
testl
ljmp
cmp
iret
push
xor
ljmp
add
add
sub
stc
fistpll
jae
adc
xor
and
lahf
adc
pop
rolb
test
orl
pop
sbb
lds
popf
sbb
js
cwtl
movsb
add
lcall
cli
fldl
mov
dec
hlt
stc
push
ja
add
insb
dec
inc
cwtl
sub
repz
pop
testl
icebp
jns
add
xchg
mov
cmc
xchg
add
sub
cltd
push
xor
xlat
ret
push
imul
mov
push
jb
cmp
mov
add
cmc
sub
xchg
add
add
int
mov
push
dec
clc
mov
fdivl
or
mov
add
mov
loope
add
sbb
xchg
stc
inc
out
cmpsb
mov
xor
in
add
test
pop
ds
stos
xor
push
fwait
inc
push
dec
cmp
cmp
or
or
jae
cli
sbbb
pop
int
jb
push
pop
mov
adc
adc
add
pop
xlat
dec
add
je
nop
jae
fldt
jmp
add
in
js
mov
pusha
xor
dec
dec
repnz
xor
in
xor
clc
xchg
add
inc
xor
test
shrb
add
pusha
arpl
andb
iret
cmp
fs
add
mov
addr16
sbb
hlt
orl
add
les
jae
enter
cmp
sub
loop
test
jmp
fidivl
cli
push
or
adcb
jo
movsl
add
mov
xchg
rclb
leave
mov
pop
cwtl
ret
mov
push
inc
mov
pop
dec
mov
mov
insb
sbb
ret
push
inc
dec
push
outsl
mov
add
pop
test
mov
mov
fldl
and
add
mov
add
and
bound
inc
into
xor
aad
rolb
push
cmp
xchg
or
jno
test
shrb
add
shrl
add
scas
orb
or
je
outsl
fidivl
ret
lods
decb
adcb
jl
insb
pop
mov
cmp
pop
xchg
fcmovb
stos
xchg
stc
orl
sbb
xchg
nop
adc
in
or
test
scas
push
repnz
sbb
jb
lock
mov
adc
cltd
sbb
xchg
aam
in
cli
add
pop
cmp
xor
add
fmull
stc
mov
pop
and
cmp
outsb
jle
pop
xchg
aaa
inc
adcb
dec
clc
dec
add
xchg
jp
add
sub
cwtl
je
dec
adc
jns
pop
aad
dec
rolb
sbb
gs
shl
lret
sti
add
aaa
insl
mov
idivl
lock
out
je
add
lret
cli
add
pop
push
sub
push
shlb
lret
add
xor
shlb
enter
movsl
nop
xchg
cltd
popa
push
add
push
fildll
and
mov
pop
hlt
mov
sbb
imulb
stos
push
sbb
add
add
mov
add
xchg
inc
test
mov
adc
xlat
sahf
xacquire
and
push
lahf
add
ljmp
mov
xor
inc
jle
add
test
ljmp
and
dec
dec
gs
add
jno
out
into
add
shr
mov
enter
mov
push
push
lahf
sub
adc
icebp
sbb
negb
test
lahf
mov
push
fdivl
xor
xchg
cmpsb
aaa
cmp
loopne
mov
outsl
loop
xchg
xlat
push
mulb
scas
push
mov
jge
add
orl
cld
sbb
push
jmp
cmp
xchg
imul
or
inc
stos
dec
add
stos
and
fistl
insl
jnp
inc
adc
mov
inc
int3
lods
jge
add
hlt
arpl
xchg
aad
push
mov
sub
dec
sub
jnp
lock
dec
ljmp
jge
shrl
inc
dec
xchg
call
loope
jne
lock
push
add
jge
mov
jbe
add
jbe
lds
clc
jge
fistl
shlb
and
cmp
rcl
stos
popf
shlb
jle
add
or
outsb
mov
mov
push
xor
rorb
push
arpl
repz
ljmp
xor
and
mov
inc
jne
dec
add
out
lock
jae
je
shr
cmp
les
push
lret
xor
adc
push
inc
lret
cwtl
push
pop
inc
mov
in
out
mov
adc
stc
je
repz
push
cwtl
daa
add
out
dec
dec
cmp
fisubrl
mov
mov
outsl
pop
add
fwait
into
mov
mov
mov
mov
dec
mov
pop
in
rol
insb
or
cmp
add
adc
idivb
pop
icebp
pushf
sbb
mov
sbb
add
sub
cltd
sti
les
or
addb
sbb
add
in
mov
das
cmp
jns
xchg
pop
pop
push
insl
xchg
add
push
dec
xchg
add
fwait
ja
into
in
or
std
adc
jge
cmp
lods
je
sbb
imul
and
ljmp
hlt
and
push
add
data16
xchg
or
jnp
filds
lock
js
clc
in
add
lea
push
and
enter
in
adc
insb
and
add
sbb
ficoms
fwait
jl
jne
lds
ja
orb
or
push
fcomip
test
add
stos
test
aam
push
add
pushf
sarb
incb
cld
loope
dec
std
sbb
idivl
fbstp
or
dec
popa
loopne
mov
mov
mov
testb
cmpb
ja
sbb
cltd
rclb
sub
jecxz
add
lds
call
into
arpl
notb
push
cmc
in
subb
push
lea
adc
shlb
aad
cmp
push
cmp
addb
and
push
mov
test
cmp
inc
out
pop
in
jo
push
in
stos
cmp
sbb
mov
or
cmp
sahf
push
hlt
lret
dec
xchg
aas
add
sub
mov
pop
add
sbb
fdiv
fisubs
jb
add
gs
cs
mov
or
lret
add
movl
mov
rclb
mov
jae
pop
mov
loopne
iret
in
sbb
cmp
pop
ret
add
lods
jg,pn
cmp
je,pn
fmuls
xor
dec
add
dec
xchg
into
adc
or
fprem
imul
jns
or
push
shl
aam
in
add
sub
cmp
loop
adc
or
add
sub
mov
add
out
dec
add
or
clc
inc
mov
xlat
and
mov
js
push
out
aam
xchg
add
xor
call
push
jne
pop
testb
mov
testl
xorb
cld
mov
add
inc
je
aas
add
movsbl
pop
mov
rorb
cmp
test
subb
dec
push
pop
add
int3
cmp
push
pop
mov
mov
mov
data16
sbb
push
mov
mov
add
in
jge
inc
mov
and
out
loopne
clc
iret
jae
sub
pop
mov
inc
or
les
sub
pop
pop
or
jne
roll
mov
sub
cld
jno
cmp
mov
jl
xlat
enter
movsl
cmc
jp
pop
adc
loope
lock
or
or
mov
ret
add
bound
shrb
pop
pop
push
ficoml
add
pop
jle
pop
lea
xchg
or
and
scas
jmp
sub
sbb
out
sbb
jbe
into
cmp
inc
jle
fcoms
cmp
cmp
xchg
dec
cwtl
xchg
add
mov
add
push
xor
aaa
and
sub
add
pop
cmp
add
push
sbb
xchg
rorb
add
jl
sbb
pop
bound
ss
pop
jmp
rcrb
stc
sub
add
inc
repz
rolb
cli
imulb
fs
push
add
push
cmp
daa
test
cmp
sbb
clc
ljmp
sahf
addr16
add
scas
xchg
cld
int
sub
lods
sub
sbb
lea
add
sbb
add
or
ds
jmp
psubb
shlb
nop
pop
loopne
jecxz
pop
mov
pop
jo
pop
fwait
sbb
push
jle
rcrb
sar
rcr
add
mov
push
into
jge
cmp
ret
xchg
mov
nop
jmp
cld
sbb
pop
jle
mov
aas
adc
incb
pop
fdivrs
test
and
ret
movsb
xchg
loopne
push
data16
add
les
jp
push
xchg
out
fnstsw
inc
pop
in
push
inc
loopne
nop
sub
fsts
inc
addl
test
mov
fistpll
mov
jmp
pusha
push
sahf
mov
insb
out
fidivrs
mov
out
es
dec
fsts
pop
jne
cwtl
sbb
loopne
push
add
pop
jp
add
and
mov
pop
xor
cmc
int3
ret
test
add
lahf
das
in
nop
add
loope
iret
cli
push
add
xor
fdivrs
sbb
out
roll
push
rcr
imul
xor
lods
sbb
addw
shrl
add
xchg
mov
subb
testb
cmp
sub
mov
pop
cwtl
insb
cmp
add
or
push
fstpl
fldt
call
lret
add
dec
ds
inc
into
insl
nop
push
inc
cmp
push
in
shlb
add
imul
dec
movd
fstl
xlat
or
fsubp
xchg
and
mov
cmpb
jnp
adc
cmp
sub
jmp
jae
sysenter
fistpll
cwtl
and
lock
mov
xor
iret
mov
adc
jno
lock
add
xchg
fnstcw
add
insb
mov
mov
loopne
das
stos
add
js
jno
daa
lcall
add
lods
fisubs
lock
xchg
add
jbe
mov
sbb
fs
inc
and
imul
add
cmp
add
pop
or
lret
pop
roll
sub
pop
and
mov
add
popl
pop
inc
adc
jle
dec
push
add
inc
xchg
jne
call
dec
cmp
jb
testb
xor
outsb
mov
add
ret
push
pushf
adc
add
and
push
cmp
gs
jmp
inc
adc
mov
sbb
lea
xchg
inc
pop
cmpsb
out
add
pop
fidivrl
jg
add
push
xchg
push
out
mov
cmp
fs
jl
cmp
mov
jbe
fcompl
movsl
xor
imul
lods
add
fdivs
cmp
xlat
push
mov
iret
js
dec
rolb
add
lahf
imul
xlat
pop
push
repnz
cmp
mov
sbb
and
rcrb
xorb
rcrb
shr
dec
adc
xchg
jecxz
pusha
xchg
add
mov
cmp
add
dec
mov
ja
aas
lods
imul
sarb
adc
push
sub
add
pop
shl
fcomps
pop
add
sub
jg
fiadds
dec
ljmp
add
mov
lea
mov
mov
mov
adc
loope
xor
imul
add
out
iret
aam
cmc
push
nop
cmp
jp
mov
mov
adc
mov
dec
flds
and
push
stos
arpl
add
dec
int3
mov
add
movsl
inc
jp
mov
incl
xchg
dec
xor
sbb
insb
lock
add
in
pop
je
and
adc
and
lock
popf
xchg
xor
addl
loopne
mov
push
sbb
adc
testb
cwtl
mov
add
stos
mov
scas
fsubl
fcomps
mov
push
push
enter
adc
inc
mov
cmpsl
xchg
jo
into
popf
mov
ret
sub
mov
push
mov
pop
add
adc
adc
push
enter
jno
ja
add
jae
stc
xchg
or
cmp
inc
pushf
lret
shll
push
bound
ds
addb
bswap
adc
inc
sub
nop
cmp
jmp
push
ret
push
or
inc
sbbl
xchg
je
pop
enter
add
ja
add
push
std
push
jno
sbb
pusha
cmp
pop
les
add
rolb
lock
sub
or
test
imul
ja
add
inc
mov
xchg
fmull
sub
xor
or
dec
lret
push
gs
jp
imul
and
xchg
jl
cmp
jbe
dec
add
mov
and
loop
pop
lods
jo
cmp
add
idivl
push
mov
jnp
pop
jmp
sub
xor
lods
mov
add
or
pusha
hlt
push
in
add
dec
cwtl
in
sub
jbe
aad
inc
jle
mov
stos
dec
scas
nop
jo
sahf
add
and
dec
cmp
xor
clc
js
cli
cmp
enter
add
mov
aaa
pop
adc
add
xchg
sub
lock
jnp
loopne
repz
cli
sub
mov
add
jae
cltd
pop
lock
insl
je
nop
mov
lds
add
pop
add
push
out
push
aas
cmpsb
dec
addb
aam
pop
out
add
mov
mov
add
sbb
mov
xchg
loopne
mov
insl
xlat
dec
xor
dec
lods
push
push
dec
jg
movsb
cld
or
cmc
movaps
push
pusha
filds
mov
int
fadds
mov
fcomi
mov
mov
sahf
mov
pop
lock
add
out
push
add
mov
std
and
mov
fisttps
xor
xorb
xchg
scas
xchg
sarl
cld
push
pop
dec
inc
and
sbbb
in
or
lock
mov
pop
pop
inc
push
cvtps2pi
sub
xorb
inc
and
scas
punpcklwd
into
cld
mov
cwtl
add
xor
repnz
je
iret
jns
add
or
shlb
inc
pushf
out
jmp
or
add
loopne
xchg
lds
add
xchg
pop
icebp
addb
or
ror
push
hlt
add
inc
bound
cwtl
sbb
xchg
in
popf
mov
subl
mov
sti
imull
mov
mov
lret
dec
call
loope
sti
inc
sbb
cwtl
or
fs
test
pushf
jno
cmpsb
ret
sub
or
call
dec
out
pop
add
push
loope
fsts
lock
orb
push
push
test
mov
add
mov
ja
hlt
pop
add
push
lock
andb
loop
loope
stc
pusha
lds
push
adc
fildl
push
lret
push
shl
cld
inc
mulb
add
enter
sbb
add
outsb
ret
inc
call
icebp
cmpsb
xchg
js
addr16
lods
imul
testl
loopne
adc
add
cmp
test
outsl
adc
jle
sub
mov
mov
es
sub
test
pusha
lods
mov
push
jo
addb
ljmp
push
loopne
jp
push
jmp
cmp
push
adc
test
data16
out
out
fiaddl
pop
popf
pop
sub
loope
insb
ja
arpl
lea
or
fs
mov
addr16
outsb
mov
jae
add
jge
mov
mov
ljmp
xorb
cmp
mov
add
mov
push
punpckldq
cmp
add
test
xor
shlb
inc
in
dec
es
xor
xchg
add
add
cmpl
hlt
mov
movsb
mov
insb
push
sbb
and
lock
idiv
and
jmp
add
fisttpl
fdivrs
sbb
fsubl
jp
add
hlt
cmp
sub
sbb
ffree
push
call
std
clc
stos
add
xchg
imul
arpl
jle
mov
adc
sbb
pop
add
xor
mov
mov
sub
arpl
inc
lds
push
ss
jl
int
xorb
dec
add
mov
or
add
lahf
pusha
jge
test
sbb
cld
xor
add
jno
fisttps
add
js
imul
add
sub
addl
lods
lret
leave
in
cmp
push
adc
add
and
inc
addb
adc
jmp
jnp
outsl
xorb
loope
lock
in
hlt
faddl
cltd
mov
out
add
fsubrp
sub
add
add
lahf
push
xlat
out
insl
in
cmp
sub
add
fsubrl
jne
pusha
sub
push
dec
rcll
add
test
lea
test
fsts
or
cmpsb
push
inc
xchg
inc
xchg
popa
add
push
stos
shrl
mov
in
ret
mov
or
xchg
pop
sti
enter
cmc
pusha
pop
push
adc
das
xor
jbe
jmp
sub
adc
in
xchg
call
pop
ds
add
movsb
and
dec
pop
es
xor
add
mov
pop
adc
push
xchg
add
inc
stos
add
fs
push
dec
cmpsl
je
leave
lea
addb
cmp
pop
into
ret
mov
adc
push
and
out
pop
test
and
add
insb
sub
stc
out
cmp
add
mov
sub
ds
mov
jg
cmp
pop
loopne
jnp
iret
sub
lret
add
sub
cwtl
subl
push
rcr
jecxz
xchg
add
mov
cltd
outsl
xor
adc
icebp
mov
mov
pop
pop
out
leave
add
pop
and
pop
or
sub
andl
mov
add
in
add
in
pop
dec
dec
hlt
add
add
and
jle
pop
dec
xchg
cmp
mov
test
mov
aas
add
mov
add
push
mov
inc
aaa
sub
std
stc
iret
pop
loop
adc
dec
add
pop
gs
test
nop
jl
jno
hlt
xchg
imul
dec
aas
cltd
and
add
pop
mov
hlt
popl
xlat
or
cli
jbe
or
setl
pop
xorb
pop
lods
mov
xchg
decl
mov
ljmp
jmp
mov
push
mov
ffreep
rcrb
adc
fwait
xchg
setp
add
pushf
mov
loop
jecxz
jno
push
push
add
sahf
mov
add
ret
outsb
pushf
testl
cmpsl
sbb
lock
adc
sbb
push
pop
add
movsb
cmp
push
shl
mov
pop
mov
cmpb
lods
add
sbb
call
pop
aad
sub
sbb
cmp
punpcklwd
pop
push
jbe
sbb
dec
xor
arpl
sbb
std
inc
jo
dec
insl
cmp
jne
dec
cwtl
xchg
addr16
pusha
cmpsb
scas
pop
add
sub
jne
push
js
add
repz
pop
and
push
add
stos
arpl
shl
xor
and
sbb
jo
aaa
inc
add
jg
jl
sub
stos
or
jecxz
testl
ja
mov
pop
stos
andb
add
adc
sub
sbb
out
and
or
xor
pop
xorb
push
sbb
imul
stos
mov
aaa
mov
cld
rol
adc
lcall
stos
cmp
add
gs
scas
out
pop
sbb
iret
add
mov
jo
or
enter
adc
loop
lock
sub
add
xlat
in
fbstp
dec
rcrb
or
xor
mov
xlat
test
clc
in
add
jmp
fxch
test
inc
jnp
xchg
cs
lock
loop
jno
pop
add
insl
sar
outsb
cltd
mov
data16
and
out
loopne
roll
pop
testb
dec
add
ss
lret
mov
sahf
stos
adc
out
mov
dec
pop
xlat
add
fidivl
push
add
push
pusha
scas
iret
mov
ret
xchg
xor
add
mov
pop
paddsb
sub
loopne
outsb
rorl
sub
pop
sbb
insb
mov
loopne
push
add
jo
inc
jae
add
test
cs
cmp
enter
sub
lahf
inc
mov
punpckhwd
cld
xor
xor
nop
sbb
add
dec
mov
ljmp
jecxz
inc
mov
outsb
push
cmp
dec
mov
add
arpl
ss
add
dec
lahf
adc
xor
xor
or
mov
enter
mov
into
xor
add
and
call
mov
inc
xor
mov
pop
fwait
sub
pop
ja
push
sub
push
ljmp
inc
in
sub
clc
int
lret
enter
shrl
fdivl
pusha
sub
je
sub
movsb
mov
arpl
add
flds
push
leave
mov
xchg
js
add
mov
mov
and
inc
loopne
mov
shlb
adc
fstl
lret
add
aas
ret
scas
shlb
addl
push
dec
sbb
adc
stos
cmp
loopne
out
adcb
in
test
jmp
xor
shrb
jg
dec
fucomip
add
xlat
pop
cld
cmpsl
fsubrs
add
mov
adc
and
ss
mov
jno
clc
or
cmp
jns
push
in
add
xor
xchg
add
sbb
mov
adc
add
jne
and
adcb
sbb
mov
cmpsb
xorb
mov
xchg
mov
or
sahf
sbbb
and
fdiv
arpl
sub
adc
call
movb
out
push
jp
lahf
cld
pop
int3
imul
inc
lret
push
pushf
add
pop
adc
rcrb
add
inc
fidivl
dec
adc
mov
lock
nop
call
aaa
add
testb
cmp
mov
add
push
cmp
mov
call
push
loop
fidivrl
notl
loopne
add
push
jmp
xor
addb
push
push
push
ja
sbb
ss
inc
pop
lahf
cmovle
imul
add
or
add
fwait
test
adc
add
xor
pop
lds
and
xor
push
push
loopne
scas
add
lods
pop
enter
mov
xchg
add
ret
sub
mov
mov
inc
les
mov
sub
dec
lock
jecxz
add
mov
imul
xor
mov
xlat
sbb
cmp
jl
xchg
push
loope
das
add
ss
push
inc
xorl
stos
andl
and
add
and
push
aam
mov
rolb
lahf
xor
inc
xor
add
test
mov
push
push
mov
add
clc
jp
sub
lret
jge
mov
cmp
inc
add
pop
jp
stc
pop
add
and
mov
je
ja
test
jle
push
lods
in
nop
mov
jae
pop
or
pop
xlat
cmp
aaa
xchg
lods
test
test
mov
mov
sbb
mov
dec
or
nop
cmp
push
lds
lods
lods
mov
lret
movsl
add
xor
sarb
sbb
xchg
add
fistpl
dec
add
shrb
cmp
data16
andb
sub
lods
pop
repnz
aad
cld
dec
in
add
pop
lock
jg
lea
cmp
add
rorl
sbb
clc
push
mov
pop
dec
scas
or
adc
add
or
test
test
mov
jle
adc
mov
sub
push
jle
push
lds
cwtl
repnz
xor
nop
int3
dec
jo
add
test
faddl
cmp
sahf
int
add
sbb
ja
add
andl
mov
sbb
add
adc
ret
fldl2t
pusha
dec
mov
mov
adc
sub
add
bound
cld
call
repz
xchg
outsb
or
dec
cmc
popa
and
mov
fistpll
dec
fildl
cwtl
mov
popa
enter
ja
pusha
mov
pop
push
in
and
pusha
mov
add
scas
dec
daa
in
pop
add
iret
and
dec
dec
dec
pop
cmpsb
xor
add
fs
push
arpl
fld1
or
fadds
pop
sbb
les
adc
divb
adc
aam
movl
test
subl
push
xor
faddl
jl
cmp
dec
rorl
ds
mov
in
pop
sub
sbb
or
push
push
dec
and
ror
add
sub
adc
in
mov
int3
sbb
pop
stos
data16
loope
shrb
or
mov
inc
dec
sarb
cmp
into
add
add
loope
add
icebp
stos
add
dec
rorb
xchg
xchg
data16
lock
add
call
or
lock
cmp
popa
or
jmp
popa
xchg
xor
pop
ds
jae
add
cmp
loope
xor
rcll
mov
repz
xchg
push
rcrb
add
add
push
sbb
das
stos
shll
add
clc
cmp
mov
fildll
push
aad
stos
dec
popa
lahf
cmpsl
mov
pop
xor
sub
adc
jno
lods
sub
push
mov
xchg
pop
inc
push
mov
bnd
cmp
xchg
push
sub
and
xor
add
dec
inc
push
cli
add
push
pop
cs
adc
test
gs
mov
add
fadd
loope
adcl
gs
loop
notb
push
minps
mov
mov
add
jbe
cli
rclb
add
xchg
repz
pop
test
jmp
sub
jl
push
mov
test
add
fldl
adc
pop
fcoms
roll
xchg
lods
insb
push
les
test
sub
cmp
sbbl
cmp
add
rolb
add
fucomp
stos
leave
xor
or
inc
xchg
add
jo
dec
adc
jg
loopne
into
jl
repnz
outsl
mov
fnstcw
xchg
pop
jae
jg
jno
pop
mov
sub
subb
loopne
mov
or
imul
mov
mov
sbb
pop
sub
and
iret
or
cmp
rcrl
lea
jmp
pop
shll
xchg
jbe
or
shll
gs
sub
xchg
xor
outsb
jne
and
xchg
add
adc
jmp
xor
sbb
adc
jnp
push
or
cmpsl
test
enter
jne
and
xchg
mov
dec
add
and
in
aaa
adc
sub
cmpsl
push
loopne
mov
pushf
in
cmp
jne
pop
inc
enter
push
lea
add
mov
into
jns
pop
popa
stc
insl
sbbb
xlat
popa
pop
jns
bound
xor
pop
push
xchg
sbb
push
out
inc
mov
mov
cmp
int
cwtl
cmp
xor
and
fs
cmp
push
mov
mov
out
fsub
cmp
and
push
and
xchg
add
sub
movl
icebp
jnp
sbb
mov
fldenv
dec
jg
add
repnz
and
movsl
insl
lea
sub
hlt
and
cmc
cmp
into
add
enter
push
insl
mov
lcall
fdivl
lds
and
aaa
mov
or
cmp
jne
pop
pop
sbbb
or
jmp
test
sub
xor
and
sub
cwtl
add
adc
outsl
xchg
clc
lea
cs
mov
sub
insb
mov
inc
shrl
xchg
add
lea
pushf
pop
cmp
sub
mov
cmpsb
mov
ljmp
enter
stc
mov
cmova
cwtl
or
leave
fwait
data16
rcr
imul
aad
out
sti
or
xor
repz
addr16
inc
sbb
mov
cmc
push
mov
push
and
ja
rcrl
jmp
xbegin
pop
or
jp
and
lret
test
xor
dec
push
pop
xchg
repnz
inc
xchg
adc
or
ljmp
cmp
movsb
pop
inc
add
sub
push
add
jo
cmpsl
in
and
std
es
stos
out
mov
jecxz
add
into
dec
sbb
pop
pop
xchg
lret
ljmp
cmc
inc
inc
mov
pop
add
test
sub
lret
shrl
xchg
add
dec
jge
test
clc
out
add
adc
fcomps
or
pop
mov
dec
add
loopne
test
mov
and
enter
int
push
inc
mov
out
repnz
xchg
js
jns
add
inc
arpl
sbb
inc
in
loop
push
dec
adc
mov
imul
xchg
jae
add
shrb
sbb
test
add
adc
pop
add
sbb
pop
fnstsw
adcl
sbb
mov
add
dec
dec
xchg
in
sarb
mov
jp
jg
inc
jmp
jo
test
loope
frstor
mov
outsb
sub
popa
inc
enter
sub
pop
stc
dec
loope
push
xor
ret
lea
inc
not
cli
mov
mov
jle
pop
pop
pusha
movsl
dec
pop
adc
mov
lret
adc
xor
adc
dec
inc
inc
sub
and
lret
sbb
adc
test
add
cmp
mov
pop
add
push
adc
sub
jmp
mov
loopne
cmp
adc
adc
cmpsl
push
fistps
sbb
push
lea
sub
test
lret
loopne
mov
push
ds
add
lahf
mov
xchg
ret
scas
dec
outsb
ret
cmp
add
fldcw
push
test
jl
jbe
negb
sbb
push
mov
add
sub
add
add
clc
inc
mov
cmp
or
and
add
sbb
stos
add
xchg
jmp
movsl
push
xor
add
push
pop
push
bound
xchg
sbb
loope
and
imul
push
push
or
mov
or
dec
cmp
imul
pop
shlb
push
add
push
insl
add
sub
cmp
addl
and
lcall
sbb
repz
add
adc
rcrb
pop
xlat
push
add
jmp
and
stos
inc
loope
adc
shlb
add
inc
out
sub
inc
add
mov
mov
add
je
bnd
icebp
dec
cmp
jp
dec
xchg
sbb
icebp
push
jmp
cmp
jg
fldcw
cwtl
mov
jl
add
cmp
cli
cmpb
push
and
mov
aas
adc
cmpl
insl
cmpsb
std
add
aad
inc
imul
inc
mov
or
jmp
sbb
rolb
inc
lcall
jmp
cmp
lods
mov
add
repnz
add
and
fwait
rolb
jl
sbb
inc
cmp
xchg
cld
push
add
js
xchg
daa
fnsetpm(287
fiaddl
lods
pop
fimuls
ss
pop
sub
shlb
nop
mov
and
inc
pop
mov
sub
pop
sahf
sbb
mov
ret
push
rol
or
fadd
popf
add
cwtl
loope
call
mov
aaa
cmp
push
mov
sub
ljmp
push
cmp
fs
jle
adc
sub
pop
and
sbb
stc
dec
add
xchg
mov
or
inc
adcl
add
out
mov
mov
sbb
rorl
imull
rclb
pandn
es
into
aam
cmp
scas
inc
xor
dec
sbb
push
add
mov
std
push
lcall
cmc
in
pusha
xchg
popf
pop
dec
sub
push
push
in
fstpt
xor
push
mov
dec
mov
nop
add
pop
add
sbb
jb
xor
fmulp
shll
mov
mov
and
jg
add
rorb
add
mov
xchg
cmp
iret
rorb
jl
pusha
stos
xor
fs
shlb
and
add
add
lods
pusha
lret
mov
movsl
cli
cmp
aaa
add
mov
pop
cwtl
fwait
inc
jae
add
mov
pop
add
call
push
pop
pop
out
pop
adc
mov
dec
pop
xchg
pop
sub
sub
push
push
push
and
cmp
push
mov
arpl
dec
les
inc
push
xor
cmp
je
dec
add
add
addr16
and
mov
add
movb
je
les
pop
inc
cmp
jp
and
mov
or
add
inc
lea
inc
outsb
xchg
sbb
adc
rcll
add
rolb
mov
and
add
lods
sub
xlat
sbb
mov
shrl
jge
lret
dec
mov
pop
aad
and
pop
sub
loope
push
lret
xor
sarl
mov
loop
add
push
xor
loopne
out
ret
add
push
pop
mov
adc
push
hlt
add
cwtl
movsl
jg
andb
add
lods
adc
jns
push
adc
call
sbb
es
mov
ret
arpl
outsl
int
sbb
dec
out
dec
sub
push
into
loop
shlb
mov
hlt
ret
outsl
xor
pusha
push
add
or
ret
lret
adc
xchg
inc
mov
shll
ret
inc
imul
jo
lods
push
push
scas
outsb
add
call
dec
add
and
cli
inc
mov
mov
dec
inc
inc
ret
fcmovnb
add
neg
and
fdivrl
nop
ret
rorb
pop
sbb
out
mov
adc
xchg
cmp
leave
push
mov
int3
xor
jne
jle
add
push
int
add
mov
adc
push
dec
jbe
dec
inc
gs
pop
lock
push
pop
push
pop
inc
lret
mov
adc
dec
add
or
sarb
push
aad
cmp
push
add
lods
dec
push
testb
add
fs
sbb
lods
cmp
add
inc
jmp
add
hlt
icebp
mov
pop
xchg
adc
loopne
lods
mov
xchg
shr
mov
cld
gs
add
pop
sahf
lods
loope
lods
punpcklwd
fsubr
pusha
fstpl
cmp
mov
pop
dec
mov
out
add
les
pop
add
inc
shlb
in
out
push
pop
roll
mov
andb
mov
xchg
add
daa
in
sub
xchg
repnz
add
xchg
cld
push
shll
adc
add
call
outsl
push
cwtl
pop
cmp
shrb
mov
xchg
cmpsb
imul
add
ja
cwtl
or
ljmp
fistpll
add
ret
push
orb
mov
adcl
sarb
adc
lock
mov
add
xor
cmp
mov
cltd
add
pop
repz
popa
sahf
add
cmp
mov
sbb
inc
insl
cld
sbb
js,pn
js
xchg
sub
cmpsl
scas
repnz
insl
push
frstor
pop
mov
sub
aaa
cli
movsl
shlb
cmp
jo
sbb
shlb
sub
mov
filds
cmpsl
add
fs
jb
sahf
mov
pushf
movsb
shll
push
in
imul
add
stos
ds
push
and
xchg
jp
sbbb
cld
add
out
iret
sub
imul
fwait
add
mov
inc
add
lods
xor
jge
mov
int
inc
jmp
add
and
add
repnz
iret
sbb
fistl
mov
push
fiaddl
and
icebp
mov
add
ret
negb
les
jp
add
out
push
adc
out
pop
pop
outsb
cmc
and
xchg
mov
jp
or
fstpt
enter
add
insb
pusha
pop
push
lcall
xchg
fs
add
inc
das
sbb
cld
ljmp
xor
les
pop
cmp
arpl
lret
sbb
insl
cs
addb
add
fwait
mov
test
push
pop
hlt
leave
aam
mov
add
std
movsl
repz
lahf
xor
mov
fimull
fnstsw
loopne
jbe
or
add
push
jge
outsb
clc
mov
scas
loop
mov
cmp
sbb
add
xchg
test
push
in
add
stc
outsl
add
xchg
lods
paddq
gs
loopne
and
pop
add
push
inc
lahf
sbb
sahf
fwait
adc
xor
aam
jg
repz
mov
in
aas
and
sbb
cmpsl
add
inc
sbb
cmp
in
test
ss
jge
mov
dec
cmc
add
jl
sar
shr
cmp
pop
iret
sbb
data16
adcl
jb
add
sub
dec
cs
pop
jbe
sbb
inc
dec
leave
push
imul
je
pop
stos
rolb
enter
movl
mov
add
in
xor
sbb
or
movl
incb
cli
loop
cmp
inc
add
mov
jecxz
xchg
out
jg
add
and
imull
movsl
lods
sarb
add
push
mov
jnp
sbb
cmc
scas
shrb
int
add
xchg
xchg
pusha
pop
or
out
fcompl
add
add
sbb
fidivrs
mov
imul
xor
and
xor
jne
mov
stos
inc
pop
add
lock
add
fsubs
bound
jno
lock
outsb
adc
xor
shlb
dec
push
cli
shlb
test
inc
jbe
adc
cmpsl
add
nop
loopne
add
test
cmp
scas
dec
push
add
int
fistl
fcomps
adc
add
xchg
or
mov
mov
loope
xor
dec
mov
push
sbb
push
push
pop
jb
cltd
mov
add
or
cs
ds
sarb
int
imul
shl
mov
jg
add
mov
lret
stc
adc
mov
cwtl
xor
jmp
fistpl
in
add
sbb
push
add
and
add
les
aas
and
and
iret
add
mov
fistl
cmp
sub
push
mov
call
aas
js
push
jbe
cmc
ja
sub
fdivrl
mov
xchg
insb
cmp
adc
arpl
call
inc
ret
mov
popa
repnz
jns
add
xchg
lahf
lcall
imul
xor
loop
subl
cmp
sahf
cmpb
shr
push
add
mov
cmpsb
inc
adc
rorb
lock
mov
rclb
jmp
cmc
and
xchg
mov
mov
mov
repnz
add
pop
add
data16
fldt
xor
pop
add
xor
xchg
adc
push
adc
addr16
adc
cmp
sub
repnz
dec
aas
mov
std
lods
rol
daa
inc
stos
out
add
push
push
add
adc
rclb
out
cmp
out
or
gs
test
or
or
push
aad
js
and
sarb
cmp
cmp
mov
mov
pushf
pop
int3
or
insb
sub
adc
jnp
pop
add
cmpsl
mov
push
or
add
repz
mov
jg
xor
test
dec
push
add
inc
xchg
sub
mov
cld
rcrb
mov
cmp
jl
pop
sbb
imul
and
xor
dec
and
fldl
cld
div
cs
and
loope
push
add
sti
or
push
filds
outsb
shll
mov
mov
aas
xchg
dec
es
rcrl
das
movsl
icebp
add
push
mov
mov
lea
add
out
out
mov
pop
mov
call
and
nopl
addr16
sub
imul
adc
adc
and
cmp
int3
fmulp
cmp
popa
jbe
rcrb
pusha
leave
into
pop
add
pop
fucomip
xorb
sbb
jle
lea
mov
xchg
mov
mov
add
inc
push
pop
mov
fildl
icebp
sub
mov
pop
loope
cmp
ja
repnz
aas
std
loopne
inc
ljmp
test
dec
outsl
in
xor
ret
mov
add
jmp
sub
mov
sahf
xchg
push
test
scas
add
xchg
cmp
jae
sbb
sbb
and
sub
imul
ds
call
testl
lahf
xlat
adc
xorb
add
std
pop
mov
add
in
dec
add
push
dec
mov
add
repz
adc
pusha
push
sbb
movsl
cmp
jecxz
pop
mov
push
test
lds
xor
mov
cmpsb
mov
jp
mov
jle
xchg
and
das
movsl
addb
mov
gs
mov
add
mov
mov
movsb
dec
daa
jbe
mov
add
mov
push
cs
movsb
cmp
addl
insl
dec
add
push
mov
adc
push
pop
hlt
cmp
adc
lea
jnp
addr16
add
jae
add
cli
push
xchg
test
push
adc
mov
popf
js
xchg
aas
pop
loopne
pop
add
hlt
cmpsl
testl
nop
and
or
es
adc
ja
mov
lret
fucom
cmp
outsb
adc
push
neg
mov
dec
and
xor
cmp
lock
notl
add
mov
xchg
outsb
loopne
xor
add
pop
adc
lods
test
sub
jge
jo
jbe
mov
stos
fdivr
xchg
popl
shrb
in
nop
dec
jb
xchg
mov
push
xchg
cmp
out
jmp
lods
test
std
das
sbb
hlt
and
scas
clc
mov
les
xor
lock
mov
call
push
pop
pusha
cld
push
icebp
adc
jno
push
andb
or
push
or
addr16
notb
out
mov
add
cli
pusha
call
add
filds
into
mov
pushf
add
pop
iret
daa
sti
bound
push
je
les
ltr
sbb
mov
cld
add
or
clc
lea
add
cmp
loope
out
mov
inc
cmpsb
jo
pop
mov
cmpsl
sbb
lods
add
add
sbb
mov
test
cld
add
or
sarb
add
mov
nop
mov
idiv
test
rolb
add
pusha
hlt
xchg
sub
negb
inc
mov
sbb
mov
outsl
xchg
mov
aad
sub
adc
xchg
add
sbb
xchg
mov
inc
mov
out
add
into
mov
lcall
shl
inc
jns
add
mov
enter
add
int
imul
xchg
movsl
ss
push
es
ficomps
xchg
in
lea
xor
in
add
jns
arpl
insl
mov
cld
lret
jo
inc
add
loopne
mov
addr16
mov
pop
je
insl
les
aaa
mov
add
ficompl
or
mov
stos
add
mov
dec
sub
xchg
aas
decb
xor
adc
cld
in
imul
add
je
jecxz
std
push
stos
xor
add
jle
inc
mov
leave
ja
and
inc
test
or
cmp
in
test
push
push
cmp
cmp
jge
and
xchg
or
xchg
mov
inc
pop
mov
or
lds
mov
or
sbbl
scas
dec
pop
push
clc
pop
repnz
jl
mov
ljmp
mov
or
cmp
sub
dec
adc
mov
and
lea
call
cld
sbb
add
test
inc
cmp
sahf
add
or
sbb
pop
dec
jno
out
push
in
arpl
adcb
pop
int3
jle
lods
dec
pop
sbb
add
inc
mov
mov
mov
test
imulb
add
xor
sub
cli
jge
add
test
jg
inc
jl
cld
cmp
push
push
jmp
es
push
in
add
inc
jg
add
stos
push
xchg
dec
lods
push
and
cmpl
mov
mov
push
outsb
and
pop
jg
loopne
in
jle
add
jns
mov
add
ret
xrstors
out
shll
ss
stc
or
test
fdivl
xchg
mov
adc
add
into
rcr
mov
pop
inc
or
insb
push
xchg
add
pop
addr16
add
xchg
or
rolb
xor
xchg
pop
call
incb
add
fstps
dec
sbb
shll
xchg
mov
jae
jns
mov
add
xchg
dec
out
push
loop
test
faddl
jne
add
push
nop
inc
pop
and
repnz
mov
dec
mov
out
pop
push
scas
clc
test
lret
pop
mov
mulps
fdivl
add
aad
cli
jge
sub
lods
add
jbe
hlt
pop
loope
mov
js
addr16
add
pop
xor
mov
test
xor
push
push
addl
xchg
and
jno
test
idivb
sub
mov
sbb
fwait
outsl
mov
das
add
xor
and
pop
push
mov
ja
push
imul
in
or
sahf
mov
out
add
es
fs
int3
call
xchg
fnstcw
cld
mov
xchg
gs
or
add
call
scas
movl
cwtl
inc
add
add
mov
in
and
cwtl
add
aad
add
icebp
jne
push
rorb
add
cld
add
mov
and
inc
addb
stc
mov
sbb
pop
arpl
adc
lds
aas
icebp
lret
jle
mov
xchg
xor
push
mov
adc
or
je
add
insl
mov
icebp
add
push
add
xchg
outsb
dec
mov
xor
pop
shr
add
mov
xchg
xlat
in
jl
add
sahf
xchg
adc
imul
add
inc
test
aas
xchg
add
sub
cmp
add
sahf
add
push
mov
loope
sbb
dec
ret
lret
sub
xchg
xchg
imul
inc
shrb
leave
arpl
sub
add
mov
dec
mov
inc
aas
mov
loope
inc
pushf
sub
mov
icebp
lahf
in
pop
adc
imul
loopne
out
sbb
mov
or
out
mov
push
pushf
inc
fisubl
add
stos
gs
jae
cmp
mov
hlt
pop
adc
sbb
outsl
pop
sbb
fwait
cs
sti
add
adc
sahf
pop
pop
adcb
mov
das
lods
mov
sbb
jne
add
inc
mov
in
aaa
inc
add
or
pop
iret
loop
sbb
lea
shll
push
cltd
das
mov
or
std
mov
iret
in
lcall
dec
mov
pop
es
filds
in
outsb
lods
repz
sub
cli
xor
les
add
jge
fdivrp
pop
add
ds
out
cmc
repz
lcall
shl
push
sub
cwtl
sbb
rcll
shll
or
pop
test
std
pop
cmp
push
out
cltd
xor
adc
push
mov
js
add
lret
ss
popa
pop
and
js
jp
add
fisubrl
push
rcll
daa
int3
dec
das
add
lods
sbb
mov
cmc
rol
cld
cli
add
push
sbb
mov
cmp
add
adc
nop
mov
fisttpl
das
xor
daa
push
pop
cmp
jg
mov
dec
fs
test
pop
add
ljmp
add
pop
fldenv
ja
add
xor
lds
fcmove
je
add
push
pop
stos
add
in
hlt
push
jmp
sbb
xchg
mov
jmp
pop
add
insl
xor
and
mov
roll
or
loopne
add
add
jle
xchg
mov
rclb
lret
mov
mov
hlt
sub
xorb
push
stos
orb
sub
and
mov
mov
and
dec
lret
pop
dec
add
lock
outsb
ror
rcrb
aaa
ljmp
cs
cmp
ds
fdivrl
mov
loop
in
inc
xchg
add
je
outsl
les
sub
xor
add
sub
int
fnstsw
shrb
cmovle
lret
dec
pusha
testb
les
ret
adc
test
cmp
add
pop
or
add
jnp
cmp
add
stc
add
les
aas
in
sub
pusha
xchg
test
and
mov
sub
jo
ja,pn
jg
add
and
xor
add
push
mov
popf
sbb
xor
add
push
jecxz
inc
mov
addb
add
mov
fwait
push
bnd
add
cmpl
leave
push
mov
mov
pop
fimuls
icebp
in
push
repnz
popa
add
imul
int3
add
push
and
icebp
faddl
inc
mov
cmpsl
loop
cmp
push
movsl
imul
add
data16
adc
xor
xchg
mov
add
movsb
xchg
fidivrs
push
in
out
rorl
xchg
xabort
lret
loopne
mov
pop
inc
lock
jo
add
dec
sbb
imul
add
jmp
test
or
xchg
pop
inc
cmc
mov
and
cltd
pop
pop
int3
add
pop
adc
sbb
dec
add
dec
sub
cmp
mov
xchg
mov
inc
int
xchg
push
dec
scas
arpl
add
jp
insb
add
push
lret
addl
lods
lds
cld
sbb
nop
add
stc
insb
adc
xor
ljmp
push
adc
andb
cltd
pop
push
lods
pop
sahf
inc
sbb
xorb
jp
roll
fmull
imul
adc
add
mov
idivl
aaa
test
push
jb
push
out
add
inc
stc
iret
inc
xor
verr
fimull
pop
movsl
adc
outsl
rcl
add
mov
aaa
xor
daa
xchg
in
dec
lcall
sbbl
sbb
add
mov
adc
dec
leave
insl
les
mov
sbb
or
xlat
xchg
add
arpl
scas
test
in
push
mov
nop
sarb
pop
add
imulb
dec
rcr
loope
xor
and
sti
cwtl
add
sbb
inc
or
leave
popa
daa
add
add
mov
xor
or
pop
xor
lds
hlt
int3
and
pop
pop
std
mov
fsts
inc
pop
stos
cmc
add
xor
jno
add
inc
test
mov
mov
add
dec
rorb
lods
adcb
xchg
in
inc
iret
js
cmpb
xor
mov
and
insb
int
and
mov
xorb
inc
fst
loopne
mov
push
clc
dec
add
jl
mov
cmc
cmp
dec
pop
inc
mov
arpl
add
add
es
lret
and
cli
mov
loope
aam
jg
add
sbb
stos
int3
jns
in
mov
jecxz
cwtl
mov
mov
je
jns
xchg
mov
xchg
add
cmpl
mov
pop
jmp
test
jecxz
shr
ja
pop
mov
lods
cmp
data16
add
add
adc
xchg
sbb
or
ljmp
nop
and
sbb
add
xor
jno
xchg
add
lcall
push
test
mov
test
pop
std
inc
lcall
sbb
push
sti
iret
movsb
andb
loopne
mov
add
jp
jg
cmpsl
sub
cmp
mov
dec
test
das
pop
add
in
stos
cli
dec
shrl
and
outsb
push
or
enter
add
jl
xor
adc
cld
cli
shlb
xor
inc
jmp
cmp
jbe
xchg
sbb
inc
jnp
pusha
adc
and
test
add
mov
push
add
popa
cmp
mov
ja
jne
push
test
mov
clc
mov
enter
daa
pop
add
mov
jmp
clc
ret
ljmp
cs
movsb
cmp
mov
push
in
mov
addb
mov
push
dec
add
xor
cmp
pop
loopne
add
or
push
and
cmp
rclb
test
mov
lock
cmp
fildl
fnsave
or
add
ret
loopne
sub
jne
mov
push
imul
xor
out
mov
scas
cs
pop
or
pop
dec
iret
jo
or
nop
enter
push
sbb
sbb
adc
mov
xchg
adc
into
cmp
adc
and
ljmp
leave
add
popf
pushf
out
mov
mov
pop
or
jg
or
cmp
inc
add
aaa
jo
jl
pop
add
imull
sbb
pop
mov
fimull
cltd
jg
sti
in
inc
repz
aaa
add
out
test
js
add
xchg
add
mov
jno
rclb
mov
jl
inc
inc
mov
dec
faddl
fsubl
cmp
leave
xor
lock
nop
inc
ret
out
rclb
pop
stos
dec
add
xchg
fsub
add
cmp
mov
in
push
mov
loope
add
push
and
jl
add
pushf
mov
aam
sbb
add
mov
out
cmp
movb
mov
sbb
adc
adc
or
bound
repnz
push
imul
pop
and
lock
cld
test
inc
shrl
sub
jecxz
jmp
push
jae
pop
xorb
arpl
adc
mov
inc
loope
ficoms
or
xchg
sbb
cmp
dec
mov
cmp
add
icebp
andb
sbb
adc
sbb
add
cld
sbb
push
fldcw
and
and
dec
push
jns
sub
sahf
scas
ret
jo
cmp
cwtl
adc
sbb
es
and
or
stos
dec
add
movsb
mov
mov
fidivl
pop
add
icebp
mov
push
bound
inc
lret
or
call
jp
add
test
jge
lock
add
add
cmpsb
cmpb
sub
mov
in
xchg
movsb
mov
test
fiaddl
call
add
inc
pop
dec
dec
aam
stos
jge
add
lcall
add
jo
js
mov
cwtl
adc
push
fiaddl
pushf
adc
cmp
inc
inc
cmp
lods
repz
dec
ds
loopne
mov
aam
add
rorb
fdivrs
sub
add
inc
sbb
lahf
pop
arpl
inc
xor
les
fs
in
jo
jbe
mov
jae
icebp
pushf
mov
mov
in
add
arpl
out
cmp
pop
int3
dec
dec
fstpt
movsb
rorl
or
pop
mov
add
and
std
rorl
mov
sti
and
inc
rcrb
cld
dec
add
xchg
divb
out
dec
cmc
enter
add
xor
mov
dec
jnp
fsubs
int3
mov
adc
dec
sbb
xchg
xor
hlt
ficoml
and
add
add
andb
or
dec
les
lret
ja
adc
xchg
stos
pop
xchg
or
add
stos
cmp
dec
and
dec
dec
add
mov
add
lods
add
loopne
je
add
nop
jecxz
into
loop
outsl
roll
jne
lahf
and
enter
loopne
xchg
cmc
sub
fcoms
lret
mov
add
mov
and
es
push
add
cmpsb
push
loopne
xorl
data16
jg
add
mov
mov
and
test
aad
pop
xchg
adc
pop
insl
repnz
enter
in
add
xchg
ret
lds
pusha
in
cmp
inc
add
test
adc
pop
dec
cmp
mov
inc
inc
pop
push
xor
stos
mov
test
imul
fs
push
push
in
jb
jge
xchg
add
dec
pop
mov
test
aas
mov
sbb
dec
push
ret
mov
cmp
mull
aam
push
lret
sub
cwtl
push
push
add
out
inc
push
or
test
add
jp
test
adc
mov
jne
jg
add
out
nop
mov
cmp
dec
and
push
les
cmp
fbstp
imul
sub
clc
popa
add
mov
xorl
dec
jo
sub
jge
xchg
pop
andl
loopne
mov
add
aad
lds
and
lahf
add
lods
loop
fidivl
push
add
jmp
daa
test
idivb
xor
or
out
movsb
call
cmp
lock
add
mov
leave
add
out
nop
adc
push
push
add
mul
aaa
xchg
lods
mov
push
inc
add
fsubrs
in
jl
add
subb
int3
or
popf
rolb
cmp
mov
stos
ret
xor
adc
push
mov
iret
bound
mov
test
xor
xchg
add
mov
daa
pop
adc
rorl
divb
push
xor
hlt
cmp
dec
add
fs
xchg
stos
adc
jle
sub
sub
pop
int
inc
inc
and
test
cmc
fs
add
mov
ja
inc
stos
add
test
pop
dec
imul
leave
adc
mov
push
push
jl
add
sub
pop
stos
jge
nop
mov
mov
mov
pop
add
inc
lret
jno
cmp
add
xchg
in
leave
push
add
imul
inc
sub
loop
pushf
in
cmp
or
pop
push
jl
das
mov
dec
add
cmp
nop
lahf
stos
mov
pop
pop
dec
xor
daa
sub
add
or
add
xor
mov
rol
xchg
out
enter
push
in
sub
mov
mov
loope
cs
jg
jb
cmpsl
clc
dec
dec
repnz
inc
fsub
arpl
xbegin
fistpl
sub
and
int
sahf
push
jecxz
arpl
clc
out
adc
aaa
scas
das
in
lahf
fcomp
sbb
xor
jmp
sub
sub
dec
lds
sbb
xlat
fwait
cmp
adc
mov
add
adc
mov
clc
jge
nop
xor
lahf
sub
push
sarl
shrb
hlt
adcb
scas
mov
inc
ret
mov
jns
add
push
mov
xor
repnz
and
jnp
ss
arpl
loop
mov
cli
add
pusha
aaa
mov
sub
mov
subl
stc
mov
loopne
fiaddl
and
pushf
pop
push
push
mov
nop
push
and
fmul
mov
sbb
sub
jg
aas
shl
xor
sahf
pop
insb
pop
add
insl
stos
lfs
movsb
cltd
add
push
adc
sbb
cmpsl
cmp
or
lcall
push
add
mov
call
ljmp
fidivrs
mov
loopne
or
rclb
aam
testb
insb
out
rolb
mov
mov
fdivs
mov
js
push
out
cmp
pop
add
adc
jne
sti
adc
add
es
jo
icebp
int
lsl
lea
and
inc
stos
cmp
pop
hlt
pop
add
test
andb
adc
cmp
call
out
imull
add
ds
lret
fstl
cli
xor
mov
lea
xchg
faddl
adc
mov
push
or
cmpsb
insl
out
aam
or
test
mov
xor
xchg
punpckldq
add
loop
sbb
pusha
sub
sbb
pop
pushf
test
or
mov
scas
cs
cmp
pop
add
cmp
add
cmp
mov
inc
cld
add
repz
inc
add
push
fst
roll
shll
adc
mov
xchg
add
mov
jb
mov
add
push
mov
pop
iret
mov
jmp
add
mov
dec
jno
les
cmc
mov
in
outsb
sbb
add
sbb
stc
jmp
add
pop
dec
sbb
mov
adc
mov
mov
loope
and
lods
subl
add
push
jae
mov
or
mov
fnstcw
arpl
or
sbb
mov
lahf
les
add
pop
loope
arpl
xor
fs
jge
pop
xor
out
test
movsb
inc
call
mov
lock
push
pop
in
mov
mov
fldenv
or
jge
shl
mov
and
call
aaa
lods
mov
dec
or
mov
push
fists
std
push
cmpsl
stos
outsb
adc
enter
lods
movsb
fisubs
mov
ret
lahf
pop
movb
pop
jns
pop
es
cmp
pop
add
mov
pop
push
dec
test
sub
fldl
in
jno
mov
les
pop
outsl
lods
sbb
repz
loope
and
cld
arpl
and
xor
mov
les
lock
add
ret
inc
aad
rsqrtps
andb
mov
mov
add
xchg
ljmp
jg
pop
jne
sub
inc
cmp
fcmovnu
insb
into
add
cltd
and
add
or
in
and
inc
out
fmull
movsb
repz
sti
cs
pop
loope
and
fidivl
or
stos
cli
addb
and
loope
sarb
cmpsl
sldt
je
cmp
add
loope
sbb
aas
sbb
mov
rsqrtps
jmp
mov
insb
scas
hlt
jge
cs
call
nopl
xchg
or
arpl
xor
xor
xor
push
push
js
jae
sub
mov
adc
daa
mov
shll
lods
add
repnz
aam
movsl
add
aaa
sub
add
inc
or
addl
stos
pop
add
pop
mov
cmpsl
lods
mov
push
sub
push
add
and
xchg
fstps
push
lock
nop
add
out
jbe
cmp
aam
xor
xor
aad
and
str
cmc
sbb
push
in
add
add
cmp
adc
xor
and
std
fst
out
pmaxsw
add
inc
cmp
cmp
pop
pop
xchg
add
push
fldenv
popf
sbb
xor
add
or
push
pop
or
and
mov
mov
imul
push
inc
inc
push
test
pop
call
add
jne
mov
jl
add
sbb
into
add
cmp
addr16
movsb
call
bound
or
xor
sbbb
add
subl
in
fildll
add
push
mov
mov
add
lret
mul
push
outsb
jns
pop
hlt
xchg
aaa
stos
shl
adc
push
add
mov
roll
cltd
pushf
in
popa
push
mov
imul
adcb
mov
hlt
fcomps
enter
cmp
adc
pop
pop
mov
cwtl
sub
mov
cltd
add
jb
mov
xor
jl
xchg
js
lret
and
add
xor
faddl
jle
into
mov
mov
es
loopne
in
push
lea
add
add
mov
sarl
add
add
push
fiaddl
cs
pusha
arpl
add
sbbl
mov
xor
add
lods
xlat
push
pop
test
xor
sbb
pop
andb
push
and
aaa
xor
inc
mov
enterw
mov
dec
inc
dec
mov
aad
pop
or
movsb
mov
lret
in
or
push
or
js
jl
cmp
imul
add
lret
mov
add
icebp
pop
fimull
aam
xchg
aas
adc
andb
jecxz
inc
ds
sbb
inc
ss
lods
fistpl
pop
pusha
insl
cmpb
movsl
push
push
xchg
and
leave
or
cltd
je
dec
cmpsb
add
icebp
lock
mov
rol
fcompl
test
mov
add
push
and
add
cmp
add
add
dec
and
ror
lahf
scas
add
pop
sti
jns
fwait
push
jge
out
inc
movsl
mov
and
inc
in
add
orb
in
add
lcall
add
in
jbe
je
mov
lea
outsb
ret
std
gs
xchg
jb
loope
pop
aaa
xchg
cvtps2pi
cmp
push
xchg
add
out
inc
lahf
xlat
cmpl
sti
loopne
shll
inc
lcall
xor
inc
loopne
jno
lahf
jmp
fwait
sbb
jl
mov
roll
add
dec
dec
loope
xor
add
cmp
mov
jle
fwait
inc
test
icebp
lret
inc
cwtl
mov
mov
bound
dec
mov
js
test
or
les
aam
inc
xchg
inc
mov
popf
add
jmp
mov
in
stc
pop
sbb
add
jae
inc
adc
add
jo
add
or
sbb
push
add
fnstenv
arpl
dec
sub
int
pusha
and
xchg
or
xchg
mov
xorb
sbb
dec
add
fsts
cmp
ds
add
or
mov
adc
and
mov
add
push
dec
lods
push
rcrb
jecxz
jno
in
adc
or
jne
int3
add
inc
scas
outsl
mov
aad
cmp
fwait
jbe
test
daa
cld
cmp
mov
jne
xor
out
add
fcoms
add
or
pop
jmp
pop
roll
in
daa
mov
inc
movsb
or
out
in
pusha
fadds
in
aas
sahf
add
loopne
negl
loopne
cli
inc
push
dec
aad
xor
mov
pop
insb
in
call
add
and
mov
pop
jp
out
add
mov
rorl
xchg
cld
lods
mov
push
int3
pop
movl
xchg
add
and
add
pop
test
add
les
cmp
mov
add
stos
addr16
xchg
mov
es
out
jb
add
cmpsl
xor
or
sbb
fcoms
adc
mov
add
es
mov
movsb
faddl
mov
pop
mov
mov
stc
sbb
cmp
fldt
pop
pusha
cs
cmpsb
ja
add
jno
xchg
xchg
cld
push
mov
subb
daa
cmp
pop
emms
xor
stc
add
cmp
add
xchg
mov
and
sub
lret
dec
dec
pop
jmp
stc
xchg
pop
outsl
repz
filds
and
add
fsubrs
and
rolb
loope
lret
pop
add
rolb
inc
test
add
lret
call
out
and
scas
dec
das
filds
adc
xlat
cwtl
nop
int3
pop
jb
inc
dec
push
movl
adc
sar
xor
sbb
stos
add
jecxz
mov
and
cmc
add
inc
mov
xor
inc
sbb
stos
sub
add
jmp
in
mov
aad
test
sbb
sbb
repnz
inc
or
inc
pop
nop
lea
add
test
mov
jle
pusha
incb
in
add
xorb
add
rcll
mov
add
rolb
add
jg
cld
pop
mov
add
ret
sub
cmp
add
dec
es
sbb
mov
andb
xlat
test
ja
pop
mov
push
sub
popf
pop
cmp
mov
sbb
mov
enter
sbb
mov
pop
lds
negl
hlt
daa
ja
dec
mov
mov
mov
mov
xor
sub
push
lods
push
ds
hlt
ret
imul
xor
fcoms
add
rcrb
sar
mov
mov
cmp
in
pop
mov
mov
xchg
xor
faddl
dec
sub
cs
mov
inc
xorb
pop
inc
out
test
clc
add
jo
int
ja
shl
pushf
xchg
ss
pusha
jg
add
pop
repnz
dec
ljmp
into
lcall
sub
dec
gs
aam
adc
mov
mov
mov
jns
ljmp
pop
and
jb
es
lahf
ja
sbb
rolb
jbe
push
loope
lock
fidivs
jg
mov
jo
jno
mov
pusha
addr16
cwtl
and
mov
imul
xor
mov
xchg
enter
jns
cld
add
push
rcl
push
add
pop
inc
push
inc
lods
add
loope
xor
sbb
push
xchg
lret
mov
icebp
lret
mov
add
divb
cmp
pop
mov
inc
xchg
add
loop
aaa
mov
ljmp
bound
and
in
cmp
inc
and
shl
add
xchg
ret
xchg
mov
mov
pop
scas
jp
imul
sub
inc
sbb
test
add
rcl
test
popa
add
inc
push
addr16
push
inc
js
add
pusha
lret
fnstsw
add
xlat
fwait
dec
add
mov
pop
fistl
or
or
filds
cli
out
push
dec
imul
incb
gs
xchg
mov
test
addr16
test
ficomps
inc
pop
ret
orb
xchg
aas
add
rcl
out
cmp
pop
fadds
pop
mov
jg
leavew
push
xor
add
insb
adc
in
movsl
lds
shr
add
ljmp
mov
and
pop
mov
sub
cld
dec
adc
dec
stos
addb
mov
cmp
add
ljmp
add
xor
stc
std
inc
mov
movsl
iret
adc
in
cmpsl
jae
mov
mov
sub
loop
pushf
sbb
rdtsc
ss
dec
scas
les
outsb
cld
adcb
mov
pop
and
test
mov
in
adc
pop
mov
push
push
mov
mov
push
pushf
xor
cmp
insl
add
ret
adc
jbe
jl
imull
or
rclb
jbe
cwtl
test
xor
subb
dec
movsl
loopew
add
and
jno
addl
jb
pop
jnp
std
call
xchg
addr16
adc
add
notl
inc
add
cmc
cmpsl
clc
loope
mov
fcmovnbe
cmp
dec
cmp
xor
sbb
es
pop
xchg
in
arpl
mov
add
push
shrl
push
sub
cmp
cs
add
aad
or
pop
jbe
add
rcrb
fnstsw
cli
leave
dec
jno
fnstcw
mov
push
je
js
add
sub
movlps
repnz
add
pop
push
movsb
rcrl
pop
push
and
jae
adc
dec
add
add
cltd
enter
add
in
jg
push
add
and
and
in
nop
pusha
or
xchg
pop
pop
test
and
nop
stos
jnp
inc
add
lea
inc
jb
ret
gs
insl
xor
mov
pop
aas
pop
cmp
pop
incb
mov
int3
cmp
rclb
mov
add
bound
jo
mov
push
cli
pop
shl
nop
push
test
xchg
and
je
mov
ja
add
sti
ds
popf
add
shll
add
mov
pop
aas
mov
test
addb
dec
aad
sbb
loope
sub
mov
mov
clc
or
lods
inc
and
cs
popa
push
sbb
test
out
flds
js
negl
xor
dec
mov
test
xlat
add
xor
inc
add
arpl
xor
aas
out
xorl
test
js
adc
stos
xor
dec
dec
cmp
inc
jmp
adc
sarl
pop
jae
add
or
or
stc
jp
add
arpl
mov
inc
push
jecxz
add
pop
mov
or
loop
pop
mov
add
pop
jl
adc
icebp
pushf
divb
mov
mov
aad
hlt
sbb
pop
dec
dec
inc
mov
push
jl
add
cli
xorl
mov
hlt
test
mov
cmp
xchg
push
mov
test
push
sub
pavgb
jmp
xchg
mov
sub
sub
fisttpl
adc
insl
inc
incl
popf
mov
pusha
fwait
pop
cli
jp
add
mov
aam
in
add
add
push
shrl
xor
xchg
in
add
jno
push
inc
mov
push
test
dec
sahf
push
push
xchg
lods
xor
pop
mov
jnp
test
neg
adc
add
mov
sub
test
push
adc
mov
imulb
push
or
imul
in
add
leave
ljmp
mov
sub
sbb
jae
pop
mov
inc
loope
cmp
lcall
inc
int3
sarb
lock
das
sahf
cmp
rorb
mov
sbb
ja
lret
mov
in
and
cmp
xor
dec
fwait
xchg
imul
fsub
sub
and
inc
stos
cmp
leave
loope
mov
iret
test
andb
lret
rcrl
and
hlt
mov
ss
push
popl
jp
roll
pop
push
xor
sbb
and
add
leave
adc
out
jmp
push
and
push
fwait
sub
daa
fidivs
pop
jl
push
xor
xor
iret
movsb
mov
das
cmpl
and
lea
cld
add
je
xchg
pusha
adcb
sub
das
stos
pop
ds
xchg
faddl
mulb
and
loopne
repnz
and
jne
fldl
int3
stc
pop
loope
mov
jle
lock
jno
nop
xor
push
add
xor
ljmp
jl
dec
and
or
lcall
add
jnp
orl
mov
test
bound
pop
nopl
and
adc
cmp
dec
pop
xor
shr
aaa
add
gs
mov
add
jl
mov
dec
subl
cmp
xor
out
out
adc
and
push
cwtl
add
mov
or
xchg
aas
repz
fcmovne
outsl
call
or
imul
add
shl
scas
or
xor
arpl
ss
ds
sti
add
adcw
cmp
adc
js
call
xchg
bound
pop
add
cmp
call
xchg
or
and
sub
add
inc
fidivs
fmull
psllw
shlb
sub
stos
int
aad
push
mov
mov
fwait
pop
mov
jne
jle
das
add
push
or
adc
mov
fldt
cmp
cs
stos
loopne
jle
pop
bound
aas
bound
push
sti
and
push
and
and
or
inc
push
sub
adc
and
inc
and
or
sub
nop
xchg
fs
aam
or
gs
es
mov
and
and
loop
fcoml
test
scas
add
and
add
xor
lret
push
fstp
enter
mov
dec
ja
repz
insl
dec
xchg
push
and
and
inc
out
test
fdivl
mov
cmpsl
das
scas
int
aaa
add
inc
mov
add
loope
stos
adc
fisttps
pop
sbb
add
fs
jge
or
scas
test
cmp
add
imul
outsb
lock
les
loope
mov
pushf
push
lahf
xchg
mov
or
pusha
dec
xor
mov
sahf
imul
cmp
adc
in
add
imul
rcrb
leave
fdivl
popa
mov
xchg
out
push
pop
jbe
repnz
xchg
jnp
pop
jae
sti
push
scas
rclb
xchg
loope
adc
jl
mov
mov
rorb
push
adcb
dec
jnp
adcl
loopne
adc
fsubl
adc
push
jl
and
jne
mov
cmp
sbb
cltd
divb
maxps
ficompl
add
and
jnp
cld
xorl
pop
xor
aaa
push
pop
pop
adc
fistpll
rol
push
add
pop
outsb
xor
clc
jecxz
sbb
mov
std
aas
sarl
bound
inc
mov
psubsb
push
int3
mov
add
sbb
cld
das
lock
cmp
test
bound
xor
mov
clc
icebp
int
push
pusha
cmp
loope
inc
add
xor
xchg
rcll
xchg
jns
mov
mov
push
pop
ds
xor
add
fimull
cmpsl
dec
add
lds
aad
xor
and
smsw
out
mov
sbb
jo
push
ds
outsl
testb
rcrl
xor
test
jo
arpl
mov
fcomps
jb
inc
test
jg
pop
nop
and
or
popa
lods
push
lea
out
repz
add
add
push
nop
xlat
add
bound
cmc
push
iret
flds
loope
test
mov
inc
xor
add
sub
or
outsb
add
out
pop
sbb
fidivrs
xor
sbb
xchg
cmp
pushf
jp
adc
pop
cmp
les
adc
dec
push
mov
bound
out
adcb
mov
ljmp
sbb
popf
adc
or
sti
inc
adc
mov
sbb
xlat
rorb
add
aas
and
mov
clc
lret
dec
mov
jecxz
pop
add
hlt
pop
mov
add
outsb
add
lret
in
rcll
rcll
subb
movsl
push
jno
add
int
sbb
cld
xor
add
jp
nop
add
fmuls
rolb
les
jl
jmp
jae
or
sar
ds
lret
test
cld
jp
push
lds
and
push
jge
nop
inc
je
outsb
std
mov
xor
push
jecxz
out
scas
sub
add
or
fidivl
out
mov
pop
fnstsw
mov
scas
pop
push
jnp
outsb
pop
fiadds
mov
sarl
fcmovbe
in
mov
movsl
inc
sbb
cmpl
add
add
data16
cmpsb
xchg
add
xchg
push
and
lock
and
add
cwtl
adc
cwtl
lods
shl
rcl
adc
push
push
xchg
cmp
add
sbb
popf
sub
mov
sub
in
push
hlt
mov
setl
fucom
loopne
xchg
xchg
js
jns
daa
and
lret
out
xchg
es
test
adc
add
lds
enter
mov
add
push
dec
ror
lret
or
add
inc
inc
push
add
ljmp
leave
or
and
pop
add
jp
fcmovnbe
mov
and
insb
lcall
adc
dec
stos
cmp
and
scas
add
mov
xor
shrl
loop
xchg
add
push
scas
shrb
call
gs
lods
aam
cmpsl
jb
loop
xchg
repz
loopne
pop
cmpb
aam
add
inc
ljmp
mov
cmp
inc
push
jle
pushf
add
jmp
testl
test
add
rcrl
xchg
add
xor
repz
mov
mov
pusha
sub
loope
add
xor
dec
ds
inc
shr
add
xor
fsubl
jge
jle
mov
aad
add
imull
add
push
add
aad
lahf
jmp
adc
fisttpll
fisttps
outsl
xchg
add
scas
orl
mov
push
call
xor
pusha
les
pop
push
in
add
cld
sarb
and
ficoml
sub
add
pop
enter
inc
dec
xor
data16
fstps
sub
into
add
jecxz
adc
ja
push
pop
and
add
dec
or
mov
cwtl
add
dec
call
add
or
lock
test
add
add
into
add
xor
push
mov
lds
add
and
add
add
fldenv
add
xor
xor
call
mov
mov
divb
lods
add
push
pusha
hlt
mov
es
xchg
add
adc
pop
add
aas
hlt
int3
xchg
add
mov
mov
add
cli
pop
out
cmc
std
jmp
repz
add
nop
dec
cli
pusha
mov
repnz
loop
xor
xchg
bound
cmpsb
or
cmp
add
and
pop
in
xchg
push
add
mov
loopne
inc
iret
dec
add
mov
or
or
mov
dec
add
test
mov
add
loope
lea
stos
push
push
add
popf
stos
xor
pusha
xor
add
mov
das
xchg
pop
cmp
pop
push
sbb
pop
cmp
sub
js,pt
cmpsl
mov
adc
decl
gs
mov
mov
in
or
dec
iret
ds
scas
add
sti
or
dec
xor
sahf
xlat
mov
pop
mov
add
sbb
add
mov
enter
add
addr16
jns
pop
mov
fistps
sti
in
popa
add
clc
or
jecxz
add
xchg
dec
add
xchg
jnp
jne
add
xor
lahf
add
add
les
mov
stc
lock
scas
add
xchg
in
push
sub
xchg
aam
iret
inc
add
and
pop
cltd
imul
into
pop
out
add
push
add
lcall
adc
sub
pop
inc
ljmp
pop
xchg
or
mov
aad
xchg
stos
dec
data16
add
ljmp
xor
push
mov
cld
pusha
adc
dec
pop
in
jo
add
and
inc
inc
hlt
dec
lret
add
xchg
xchg
sub
adc
cmp
mov
add
push
or
and
mov
repnz
mov
pusha
inc
hlt
shrd
inc
mov
or
outsl
add
in
adc
ds
in
bound
mov
aad
insl
add
cld
inc
sahf
fists
faddl
les
and
sub
adc
pinsrw
pop
cmp
xchg
xchg
out
nop
or
in
and
stos
inc
imul
mov
cmpsb
fldl
add
jle
int3
sarb
add
in
loop
mov
cmc
push
push
clc
and
pusha
movsb
out
jecxz
pop
mov
cs
lods
rcrl
mov
inc
add
sar
push
and
fucomip
aaa
jge
add
push
rorb
loop
mov
add
scas
xor
shll
push
das
cmp
rolb
sbbb
add
cmp
sti
xlat
add
popf
jge
iret
pop
adc
mov
ret
gs
mov
nop
cmp
popl
cmpsl
jle
jae
mov
sub
or
inc
jp
mov
outsl
movsl
bound
and
sbb
add
imul
loopne
add
ret
es
hlt
stos
add
outsl
xchg
leave
add
lcall
lods
int3
pop
mov
sbb
pop
mov
mov
and
cmp
mov
add
je
filds
jns
shr
fisubs
add
fcmovne
or
arpl
mov
aad
push
icebp
and
imul
inc
add
cmp
inc
cmpsb
int3
bound
stos
in
xchg
out
mov
daa
jno
sbb
sub
add
xchg
sarb
push
mov
jo
mov
cmp
push
mov
add
inc
das
push
cwtl
ljmp
js
sbb
sub
in
aam
push
data16
adc
or
out
inc
xchg
dec
and
inc
inc
fstl
xor
nop
es
filds
lods
or
bnd
aaa
test
adc
cmp
inc
mov
dec
lret
add
xor
stc
addb
or
int
jo
mov
pop
sahf
or
push
push
push
adcb
push
shr
add
insl
sub
pop
xlat
les
stc
sbb
sub
xchg
cld
sbb
ss
xlat
fisubl
mov
cmp
xor
sbb
jmp
mov
xor
mov
out
cltd
lea
dec
cmp
inc
sub
fcomps
xchg
add
or
jle
jno
or
push
adc
push
mov
mov
and
push
ja
arpl
sub
rcrl
add
add
sbb
jecxz
add
ss
data16
pop
add
andl
je
pop
ja
leave
mov
movlps
dec
scas
pop
mov
mov
xor
sbb
mov
arpl
pop
nop
pop
jle
push
adc
xchg
or
ffree
adc
push
adc
jl
mov
inc
aas
xchg
mov
repz
xchg
or
jl
cli
sbb
push
movl
out
test
aas
addr16
add
dec
xor
jno
adc
pop
rcr
fcomps
psadbw
test
movsb
or
sbb
adc
shlb
ffreep
lds
mov
fiaddl
data16
test
mov
fs
pop
push
jne
lock
push
add
jp
scas
cmpsl
sub
arpl
mov
pop
out
add
outsb
scas
pusha
add
cld
jo
mov
add
push
imul
inc
jns
iret
insb
add
mov
adc
add
call
fdivl
mov
fs
jmp
jo
insl
adc
int
bound
or
or
test
sbb
daa
add
xor
inc
adc
mov
and
and
xor
lds
or
clc
sbb
inc
add
push
mov
inc
jmp
mov
mov
add
imul
adc
mov
xchg
in
or
imul
iret
mov
sbb
xchg
push
inc
in
mov
adc
adc
xlat
or
repnz
fdiv
hlt
pop
rolb
add
les
add
das
pop
cltd
rorb
mov
sarb
std
inc
add
mov
sbb
cmc
stos
mov
adc
rcr
and
fwait
pusha
dec
push
dec
loop
in
in
inc
push
add
jge
jp
jae
push
ss
xchg
adc
into
add
xchg
addr16
dec
inc
call
pop
add
pop
out
pop
testb
ss
adc
testl
dec
notb
out
and
int3
pop
imul
int
clc
mov
aaa
mov
lock
hlt
dec
jb
sbb
outsb
popf
ds
dec
sub
cmp
add
jmp
jecxz
std
shlb
add
aam
xor
mov
ljmp
popf
inc
dec
mov
cmp
jge
add
inc
sub
enter
push
aam
xor
push
ja
pop
add
mov
int3
adc
sbb
lock
jnp
andb
mov
enter
sbbb
add
je
push
lahf
lock
repnz
cmova
roll
or
sub
cmp
xchg
orl
pop
sbbb
jle
mov
gs
outsl
adc
inc
pop
push
xor
loopne
enter
inc
xchg
add
clc
mov
xchg
jbe
repz
out
xor
test
mov
cltd
cmp
add
push
xchg
cmc
shlb
add
out
arpl
testl
adc
and
sbb
das
rolb
and
add
adc
xor
pop
jge
scas
add
add
pop
adc
jecxz
or
aam
movsb
or
dec
and
pop
jno
stos
inc
incl
sbb
cmpsb
loopne
push
mov
or
adc
inc
leave
lret
daa
loop
int
punpcklwd
pop
dec
adcl
sbb
inc
testl
add
xor
lea
and
in
and
cmc
jno
add
cmp
adc
js
pop
jmp
ds
xor
mov
jo
dec
inc
fadd
call
jae
add
icebp
out
shlb
in
clc
cmp
scas
hlt
sbb
xchg
sub
pop
je
jnp
xchg
push
add
xchg
bound
rolb
mov
xchg
dec
ljmp
or
fists
add
repnz
push
nop
push
add
mov
cli
mov
jbe
mov
sub
add
stos
mov
or
or
mov
pop
jns
push
fsubrp
in
fnsave
sti
sahf
sub
add
add
mov
jge
add
dec
clc
shl
out
jle
sbb
add
ja
ljmp
adc
fwait
incl
mov
mov
repz
data16
sub
mull
add
inc
iret
into
and
dec
mov
push
mov
xor
sub
pop
aaa
xor
xchg
xchg
adc
add
idivb
pop
cmc
cmp
shlb
mov
mov
sbb
add
sbb
cmpl
push
hlt
cli
and
mov
addr16
pop
sbb
and
js
fsubs
negl
loop
and
add
je
lock
xchg
add
fists
push
and
call
jl
aaa
rcr
sbb
jge
pusha
addr16
xchg
dec
repnz
mov
inc
add
adc
enter
add
jmp
xor
mov
sub
lret
add
jae
lods
mov
mov
inc
movsb
icebp
enter
int3
nop
push
xchg
mov
xchg
cmp
mov
pop
push
mov
cs
in
add
mov
add
lods
xchg
loopne
std
daa
enter
dec
je
mov
and
test
sti
in
movsb
xchg
jle
or
dec
sbb
add
shll
pop
pop
aas
orb
in
mov
or
lcall
cltd
xor
shlb
xchg
push
adc
test
js
cwtl
in
sbb
mov
ja
leave
push
and
lock
cmpsb
adc
les
xor
call
addb
add
and
mov
add
imul
nop
mov
pop
jb
mov
add
and
adc
add
pop
cltd
aam
pop
leave
add
mov
push
pop
cmp
cmc
in
lea
mov
add
add
push
cs
ret
das
sbb
rorb
add
jp
cmp
loope
pop
orb
push
mov
mov
and
or
loope
mov
adcl
add
jmp
dec
fcoms
cmp
cmc
testl
ja
and
push
fdivr
mov
pushf
sub
pop
outsl
add
loopne
sbb
adc
mov
aad
adc
jne
add
cmpsl
xor
xchg
bound
add
incl
stos
cmpsb
je
sbbb
lret
mov
in
add
push
add
cwtl
fwait
push
rcll
xchg
out
punpckhwd
sbb
sti
and
mulb
jne
and
add
movsl
scas
sbb
inc
stos
add
mov
arpl
mov
cmp
xor
push
dec
in
jns
or
sbb
pusha
or
mov
add
mov
sub
sarb
mov
mov
mov
scas
lret
into
out
push
call
mov
in
bnd
stos
cmp
mov
or
xlat
sub
mov
clc
ds
rorl
str
push
mov
cmpsb
add
jne
shlb
ret
shr
jecxz
push
xchg
xchg
pop
shlb
inc
cmpsb
add
inc
xlat
inc
dec
mov
add
push
notb
mov
push
add
addr16
push
push
add
mulb
out
pusha
sti
jbe
dec
push
std
lcall
jg
xchg
clc
cs
add
int
cwtl
stc
jecxz
inc
pop
cmpsb
cmp
add
or
fst
cwtl
mov
mov
add
scas
add
push
mov
sbb
jno
pop
xchg
sub
lods
daa
mov
shlb
adc
dec
add
and
lea
xlat
fsubs
pop
inc
ja
push
test
aam
add
add
rcrb
add
jl
test
push
add
lea
daa
add
fdivr
dec
mov
sub
adc
xor
mov
dec
jle
add
and
add
hlt
mov
add
in
lds
or
ljmp
mov
mov
mov
mov
jg
lahf
inc
mov
pop
mov
outsb
inc
adc
jl
into
punpcklwd
push
push
xchg
sub
dec
adc
add
pop
outsl
jle
pop
in
incl
in
dec
jns
and
add
cmc
or
jae
add
dec
scas
push
rclb
mov
popa
mov
add
pushf
cli
push
lds
push
add
in
fnsetpm(287
inc
lods
or
mov
cltd
add
add
ret
add
mov
inc
sarb
test
sub
lret
les
inc
dec
xor
ljmp
sbb
or
and
xor
or
dec
in
mov
add
inc
and
aad
fistpl
add
sarb
mov
ret
mov
stc
cmp
mov
xchg
sbb
clc
jl
call
cmp
stos
xchg
pushf
dec
jns
pop
outsb
adc
add
repz
sti
jg
mov
das
mov
add
test
test
mov
insl
or
in
cmp
jp
add
push
imul
aad
lods
cmp
sbb
cld
and
xchg
jnp
outsl
or
push
jne
mov
add
fwait
xor
pop
movsb
ffreep
repz
adc
cmpsb
sbbb
ficoml
sbb
mov
scas
add
dec
hlt
daa
mov
sbb
jb
inc
push
ret
in
jnp
xor
or
adc
inc
jle
sub
pop
push
outsl
or
add
add
sbb
mov
push
in
jl
cwtl
add
in
cs
into
mov
aas
fstl
adc
adc
and
lret
test
fisttpl
xor
add
push
ljmp
cwtl
or
rorb
mov
es
pusha
add
inc
outsl
jbe
inc
pop
jo
xchg
and
aad
pop
dec
add
or
sbb
flds
mov
mov
mov
pop
pop
mov
adc
outsl
pop
push
sub
andl
add
mov
bound
mov
inc
push
loop
add
sbb
jne
jle
dec
in
and
rcrb
add
mov
sub
pop
test
mov
mov
sbb
aam
cs
inc
adc
jnp
call
cmp
or
add
mov
cmp
jne
or
add
imul
rcl
push
iret
mov
mov
push
push
les
and
and
testb
in
mov
imul
add
data16
inc
sbb
cmp
sbb
add
js
jle
shlb
inc
add
pop
mov
or
mov
push
movzwl
test
shrl
mov
add
es
stos
out
out
and
lret
push
pop
pop
cmp
dec
out
pop
lcall
loop
xor
imul
bswap
mov
adc
sbb
setg
arpl
add
xor
push
xchg
push
and
inc
jle
imul
in
mov
lea
push
clc
sbb
jbe
mov
leave
lock
add
xchg
cltd
gs
cmpb
inc
sub
lahf
dec
add
sbb
das
adc
cwtl
jnp
mov
js
mov
addl
les
pop
addr16
sub
push
inc
add
std
push
ret
or
test
cwtl
jbe
adc
inc
lahf
sbb
pop
add
pop
mov
add
in
icebp
lock
add
sahf
mov
ret
in
adc
add
stos
iret
add
daa
push
popl
sar
mov
addr16
lods
aam
cltd
xorb
inc
add
mov
xchg
inc
nop
pop
xor
fisubrl
pop
mov
call
jg
jle
popa
in
pusha
lock
shrb
add
mov
mov
jne
fwait
cmpsl
das
and
cs
notl
push
xor
pushf
mov
push
sbb
sbb
insb
add
addb
mov
cmpsb
add
cld
push
push
inc
cmp
add
xchg
roll
mov
pop
jo
mov
inc
cmpb
mov
add
sbb
popa
push
pop
dec
ret
add
mov
into
test
shrb
mov
idiv
rolb
lahf
mov
sbb
xchg
lcall
andb
dec
out
add
ror
mov
xchg
add
sub
or
cmp
add
cmp
inc
jg
sbb
sub
mulb
cmpsb
test
adc
pusha
loop
push
push
sbb
xchg
mov
imul
jp
mov
cltd
mov
add
in
jo
jg
cli
sub
mov
adc
dec
adc
add
insl
and
mov
pop
xlat
lret
pop
movsl
jo
sbb
xchg
pop
and
fldl
leave
std
pusha
and
jne
je
push
push
pop
sub
jl
xor
mov
ret
fnstsw
mov
add
pop
stos
jo
add
rcrl
mov
mov
cli
outsl
call
inc
negl
xor
add
push
test
mov
sbb
mov
movl
mov
mov
gs
setae
into
nop
insb
adc
fiaddl
push
rolb
pushf
sub
lret
hlt
adc
cwtl
inc
cwtl
inc
xchg
add
icebp
or
sub
xchg
jge
lea
mov
in
rolb
popa
testb
dec
stc
pop
jbe
dec
addl
mov
fistps
loopne
cld
inc
add
lods
pop
and
fwait
add
roll
mov
insl
lods
add
jnp
data16
adc
repz
add
mov
adc
inc
inc
jle
or
cld
das
sbb
cmp
xor
add
jb
aam
shrb
pop
clc
sbb
mov
sti
stc
add
inc
push
adc
fwait
and
imul
add
pop
pusha
jo
dec
mov
or
mov
js
jnp
shlb
sarl
push
subb
cld
add
js
xchg
push
dec
push
and
jne
inc
movsb
out
ret
add
push
xchg
fnstcw
xor
mov
stc
or
jbe
clc
add
cmpsl
mov
notb
mov
push
push
pop
mov
lods
insb
arpl
or
and
add
sti
jl
into
call
cmp
mov
call
adc
and
jmp
xor
addl
jno
pop
mov
add
add
inc
cmp
push
or
idivl
arpl
jl
push
adc
filds
sub
add
mov
mov
xor
out
add
xor
cmpsb
cwtl
fs
aas
add
cmp
dec
lcall
es
hlt
fiaddl
pop
add
pop
dec
adc
mov
inc
add
in
iret
out
fdiv
movsb
xchg
aam
jo
jbe
or
adc
add
mov
scas
iret
adcl
pop
jle
popa
imul
data16
lret
or
cltd
addb
iret
mov
cmp
push
add
or
flds
and
stc
xlat
mov
xchg
jg
dec
loop
add
mov
out
add
push
adc
shlb
outsb
dec
xor
adcb
adc
int3
cmp
add
mov
mov
nop
mov
jns
xorb
sub
or
movsb
ss
mov
dec
add
and
mov
pop
mov
insb
add
stos
shr
enter
loope
dec
sub
add
fsubrl
adc
xchg
rcr
fsubrp
xor
sub
or
orw
sbb
or
pop
push
push
sbb
add
or
ret
jl
js
adc
notl
movb
stc
adc
jo
push
sbb
add
add
daa
mov
and
push
fldl
and
icebp
jns
sbb
mov
sub
pusha
icebp
xor
xor
mov
jge
push
cs
cmp
add
lods
mov
jne
and
add
out
or
mov
int
xchg
pusha
nop
sbb
mov
leave
jmp
mov
lcall
hlt
dec
mov
or
adc
xor
push
negb
pop
fstl
cmp
sub
push
mov
pop
iret
das
jo
ss
je
add
add
cmp
mov
sbb
ja
or
outsb
and
adc
cmpsb
fcoms
nop
jo
cmp
jnp
imul
sub
ss
into
js,pt
or
mov
push
les
mov
fyl2xp1
or
mov
mov
pop
dec
adc
pop
sbbl
loopne
add
mov
pusha
out
mov
dec
js
pop
jb
cmp
and
inc
ljmp
adc
jo
cmp
daa
bound
jecxz
sub
rcr
push
add
outsl
icebp
test
in
mov
adc
fdivrs
lcall
adc
add
movsb
xor
test
xchg
pusha
mov
cmp
lcall
cld
aam
add
ja
jmp
add
shlb
dec
or
stos
push
inc
stc
xchg
add
jg
jns
adcl
sub
mov
mov
shlb
pop
add
inc
push
pushf
pop
idivl
jmp
rclb
fs
out
jno
mov
sub
push
pushf
repnz
icebp
lock
lret
jmp
cs
jne
syscall
adc
dec
sub
jns
mov
sarb
mov
je
and
add
in
pop
mov
or
mov
mov
gs
pop
add
repz
push
rclb
subl
jae
popf
or
cmp
xchg
pushf
out
ljmp
push
jb
sbb
stos
sub
mov
les
mov
or
add
pop
sub
sbbl
sahf
and
mov
xor
mov
fwait
xchg
rcrl
sbb
sub
add
into
add
add
lock
int
insb
sub
dec
lods
mov
and
out
lock
and
in
sub
sbb
xchg
lret
arpl
leave
divb
and
loope
cwtl
aas
nop
jb
lock
xchg
in
sti
pop
add
fucomip
or
dec
test
mov
rorl
sbb
std
mov
pop
cli
fs
lcall
adc
inc
cwtl
outsl
data16
add
je
xchg
call
insb
sub
ja
shll
ds
mov
mov
sbb
ds
add
xacquire
push
shll
scas
adcl
test
jbe
add
iret
pusha
js
lcall
push
add
sti
sarb
sbb
test
jae
aas
add
jecxz
cmp
shrb
xor
fnstsw
add
aaa
cwtl
sbb
add
xchg
dec
cli
push
icebp
loope
outsl
fsubrs
lds
bound
imul
sbbb
add
and
and
add
xchg
inc
add
push
cmpsb
push
jge
out
mov
xchg
rorl
sahf
aas
xor
test
cs
sub
leave
add
fisttps
pop
cmp
ret
cmp
lcall
inc
add
pop
pop
xchg
pop
pop
test
nop
and
cmpsl
pop
repnz
cmp
aaa
xor
in
pop
add
roll
mov
pop
mov
popf
cmc
pop
add
cmp
mov
daa
jbe
push
adc
es
dec
call
movsl
jo
in
iret
inc
hlt
add
push
lret
add
fiaddl
popl
and
mull
add
leave
push
dec
dec
test
mov
lock
mov
popf
lods
push
clc
add
stos
call
sbb
add
shrl
or
jl
add
pop
inc
iret
mov
pop
xchg
inc
mov
rcll
mov
push
adc
setl
outsl
add
pusha
xchg
out
add
popa
fcoms
mov
add
jecxz
pop
inc
jl
movl
loopne
push
mov
mov
ret
xchg
add
sub
dec
clc
addr16
add
loopne
mov
inc
mov
aas
mov
out
mov
mov
inc
data16
enter
jb
pop
sbb
jbe
mov
int3
fucom
add
dec
ret
incl
pusha
pop
xor
movsb
out
mov
pop
fildll
mov
in
imul
das
repnz
and
jb
push
int3
add
icebp
push
add
lods
xchg
dec
pop
adc
mov
inc
lret
das
adc
fistps
in
inc
pop
add
hlt
shr
push
add
popa
push
popf
adc
popl
xor
xchg
outsb
push
cmc
mov
jo
stc
in
loop
pop
dec
repnz
out
jo
rclb
add
xchg
and
cmp
scas
jle
push
add
mov
fwait
int3
cwtl
into
aas
lods
cmp
scas
aam
add
ficoml
and
mov
mov
or
jno
clc
push
sub
jo
adc
add
mov
sbb
inc
jecxz
pop
clc
and
and
test
clc
in
dec
push
ljmp
push
rcl
and
cmp
cli
add
fwait
ds
in
cmp
mov
nop
lret
and
aam
inc
jns
lods
aas
mov
pop
mov
dec
leave
xchg
aaa
adc
push
mov
nop
cmc
push
jns
cmp
subb
mov
and
out
mov
or
loopne
sbb
xchg
outsl
add
cld
popa
fld
mov
add
fs
lock
add
mov
adc
and
sub
pop
pop
adc
cmpsl
pusha
pop
pop
xchg
cmp
mov
aas
dec
pop
add
outsl
sub
or
pop
es
inc
shll
mov
imul
pop
push
out
pushf
jmp
push
hlt
imul
mov
popf
cwtl
sub
sub
add
xchg
push
lods
jg
lfs
sbb
mov
insb
shll
or
add
push
dec
mov
popa
mov
xor
bound
xor
addb
subl
jp
mov
xor
mov
push
ds
into
mov
sbb
add
lock
jo
rcr
pop
jnp
repnz
loopne
lcall
push
testl
jno
fcompl
pusha
or
popf
jo
ret
inc
lods
js
outsl
insl
fcoms
imul
add
mov
mov
inc
or
xor
aas
int3
popl
lcall
in
sahf
fsubrs
in
pusha
loopne
add
push
cmpsl
into
jp
sahf
push
inc
std
fcompl
xchg
shlb
je
je
push
cltd
cwtl
jo
and
fisubl
rorl
leave
or
pop
add
dec
ds
call
ss
xchg
dec
jo
fwait
lret
add
nop
xor
mov
cwtl
jl
lds
rol
sbb
jecxz
sbb
inc
xchg
add
addr16
mov
imul
pop
arpl
clc
mov
popa
cld
cs
mov
out
incl
movsb
push
data16
dec
cmp
adc
lcall
jae
cmp
adcb
fwait
gs
sbb
sti
stc
test
xor
enter
mov
rcr
pmovmskb
stos
xchg
inc
xor
ja
hlt
jmp
add
pusha
sub
icebp
mov
jl
push
xor
adc
hlt
fwait
sbbb
dec
repnz
mov
repnz
pop
sbbb
xor
adc
or
popa
jo
xchg
sbb
xchg
mov
xchg
or
mov
sub
mov
sbb
mov
add
xchg
in
push
fcomi
push
clc
sti
pop
lods
xlat
sub
ljmp
rolb
fmuls
pop
jle
mov
pop
mov
test
sbb
test
out
add
cld
lods
stos
and
cmp
fildl
add
xchg
inc
inc
lock
les
fisttpll
jmp
ja
sub
nop
push
pop
mov
sub
enter
mov
fnstenv
push
sbb
mov
mov
cmpsl
fdivs
in
add
mov
pop
pop
mov
or
cltd
add
aad
add
inc
xor
ja
mov
fbld
lcall
movsl
in
cmp
lods
leave
jae
xchg
mov
mov
lds
inc
je
insl
aas
jge
addb
xchg
roll
clc
lds
add
mov
push
pop
lret
or
dec
mov
lock
jle
cmpsl
cld
inc
movsl
aas
pxor
enter
out
aaa
cmp
add
sbb
jae
pusha
jmp
xchg
xorb
mov
movsb
sahf
mov
clc
xchg
mov
add
mov
sbb
pop
push
pop
sbb
sbb
test
subl
insb
add
mov
out
pop
mov
jae
add
pop
ss
lcall
cwtl
fmuls
out
dec
lret
add
pop
scas
cli
add
and
mov
repnz
in
sbb
add
enter
or
mov
cs
add
sarb
mov
loopne
inc
pusha
loope
mov
movsl
clc
ret
xchg
iret
inc
add
call
cmp
add
scas
stc
movsb
add
pop
mov
mov
push
sub
dec
pop
out
or
andb
out
jecxz
test
loop
push
jmp
sbbb
iret
ret
mov
loopne
aas
pop
stos
sarl
push
scas
shlb
pop
fstpl
xor
loopne
imul
fstpl
sub
xchg
sbb
xlat
cs
add
lods
mov
push
mov
xorb
sbb
dec
inc
pop
repz
cmp
sbb
adc
loopne
cmp
cli
and
or
add
jmp
push
aas
loope
push
or
jno
sub
out
faddl
sbbl
and
add
inc
out
pusha
shll
pop
adc
xchg
jl
push
fcoms
pop
pop
call
push
loopne
add
push
loopne
mov
sbbl
sub
push
mov
test
movsl
push
iret
sbb
or
int3
aad
add
and
mov
push
rclb
cmpb
fmull
mov
shlb
cmp
imul
cmp
iret
push
imul
push
fisubs
fs
add
popa
mov
add
sub
jo
xor
sti
out
add
mov
xor
lcall
xor
add
inc
push
je
fmuls
and
inc
shr
inc
int3
loopne
push
inc
xor
lahf
push
sbb
repnz
inc
add
jecxz
mov
adc
or
push
inc
or
and
xor
les
adc
sahf
popf
faddp
cmc
push
js
loopne
xlat
add
popa
rcrl
pushf
adc
mov
out
lock
repnz
xchg
dec
add
pushf
sti
hlt
cmp
add
dec
sub
mov
jnp
lods
rclb
movd
mov
pop
add
mov
jmp
push
mov
ret
mov
add
aas
pop
jb
or
add
push
cmp
rcrb
das
inc
xor
add
fimuls
mov
ljmp
pop
clc
mov
insb
shr
repnz
push
lock
or
cwtl
add
rol
pop
shrb
jl
mov
lcall
push
sbb
ds
dec
hlt
cld
add
rcrl
and
lds
fwait
jno
pop
shlb
push
orb
out
mov
push
add
ljmp
jmp
jecxz
ss
mov
add
fistps
pusha
dec
cmpsl
mov
add
test
pusha
js
mov
leave
cmp
add
std
pop
add
inc
mov
pusha
loope
rcrb
add
xchg
movsl
mov
test
dec
push
movsb
or
xorl
jbe
push
sub
sbb
xchg
loope
add
js
enter
push
add
jge
mov
add
ljmp
add
xor
inc
push
iret
ret
icebp
mov
and
daa
in
inc
outsb
push
inc
xor
incl
push
adc
dec
adc
adc
test
insb
push
and
xor
out
jns
adcb
and
das
inc
aas
add
incb
sub
imul
dec
inc
das
repnz
stos
inc
repz
push
cwtl
pop
and
and
sub
fwait
sub
rcll
and
mov
pusha
pop
xchg
fists
inc
dec
push
mov
clc
movlps
mov
std
fiaddl
inc
testb
imul
gs
int3
push
icebp
jns
xchg
mov
stc
jg
and
pusha
xchg
inc
or
mov
packuswb
add
out
add
mov
pusha
insl
icebp
test
add
test
test
push
add
pop
mov
mov
and
addl
jae
mov
add
fwait
stos
std
inc
test
or
mov
out
xadd
or
jecxz
cmpsb
adc
and
mov
repz
xchg
xchg
jl
sub
cld
lock
sbb
orb
mov
stc
js
mov
adc
jge
push
mov
push
push
add
dec
pop
jbe
inc
xor
adcl
push
xor
mov
movsl
sti
aas
nop
pop
aaa
add
dec
mov
and
xor
rol
mov
movl
ja
mov
outsl
xchg
fistl
ljmp
aas
mov
popf
add
cmp
int3
jbe
add
pop
pop
and
push
rclb
add
jmp
icebp
add
or
lds
add
pop
les
add
pop
iret
repz
mov
jbe
cmc
out
add
add
sub
add
pop
fld
sbb
dec
dec
pop
mov
cmp
add
das
sbb
scas
sub
mov
push
adc
sarb
xorb
in
and
enter
gs
jns
daa
pop
or
hlt
fsubrs
xchg
aas
or
push
mov
or
xor
lods
scas
test
sbb
mov
sbb
cmpb
cld
ja
add
dec
inc
cmp
mov
loopne
sub
lods
imul
inc
pop
cld
int
cmp
cmp
dec
mov
jbe
in
ds
in
imul
mov
outsl
add
pop
es
jo
xchg
add
sub
inc
int3
aam
push
hlt
xor
mov
call
cmp
call
std
pop
sbb
mov
fsubl
into
pushf
and
adc
sub
xchg
jecxz
add
fisubs
mov
jo
daa
roll
mov
pop
imul
sarl
adc
push
fs
and
push
sarl
jbe
enter
jb
dec
and
add
stc
xchg
popf
lcall
cmp
push
add
jg
notb
test
add
add
sahf
lret
jle
or
adc
jl
mov
cwtl
ss
loopne
push
stc
mov
push
ds
rol
pop
mov
add
pop
and
das
add
stc
test
roll
sbb
clc
leave
jo
shrb
daa
shrb
rcr
sahf
movsl
cmp
cmpb
flds
loop
inc
dec
pop
add
aad
pop
rclb
lock
mov
into
cmp
fxch
nop
dec
xor
mov
sbb
mov
add
cld
add
or
and
cmp
xorb
loope
test
xchg
je
mov
shr
fistps
add
fistpl
push
jb
lcall
mov
dec
jmp
mov
push
imul
inc
std
pop
mov
movb
xchg
add
add
cwtl
mov
inc
xchg
pop
out
movsl
dec
insb
xchg
add
jg
adc
testl
movsl
int3
adc
std
dec
xchg
andl
adc
ret
mov
sbb
push
jle
into
push
js
add
jmp
sbb
cmc
pop
jne
fwait
xchg
sub
jl
andl
or
push
mov
pusha
cmp
loopne
gs
add
mov
outsl
xor
subb
xor
add
xor
setbe
out
adc
in
add
in
push
xchg
sbb
movsb
cmp
add
push
pop
pop
fdivs
in
imul
cmp
ret
push
loope
pop
bound
les
mov
and
into
or
add
adc
push
cmc
sbb
xor
mov
mov
int3
maxps
hlt
mov
mov
scas
inc
iret
lcall
jae
in
cwtl
add
hlt
inc
arpl
sbb
hlt
insl
or
pushf
nop
cltd
sub
xor
enter
aaa
sbb
jne
and
add
ljmp
mov
fildl
sti
mov
jae
enter
sbb
push
jbe
mov
nop
mov
xchg
pushf
mov
xor
sub
aad
pop
add
gs
cs
loop
sarb
int
ss
aad
sub
loope
jb
pop
sti
jecxz
dec
xchg
add
and
pushf
filds
lcall
adc
hlt
or
xor
ja
mov
test
test
popa
ret
pop
mov
xor
icebp
or
out
or
cmc
pop
jb
je
shlb
inc
mov
add
imul
mov
mov
aam
xlat
add
insb
scas
mov
push
mov
fildl
lea
sbb
insl
xor
add
mov
lret
outsb
push
add
scas
bound
push
test
ret
sub
mov
add
mov
hlt
pop
pop
repnz
add
sub
or
or
fdivrs
pop
inc
push
mov
sbb
pop
pop
iret
push
stos
jmp
pop
mov
pop
push
jg
mov
or
and
sbb
shl
stos
pop
inc
es
clc
lret
add
adc
push
fists
add
iret
es
mov
int3
xlat
ret
dec
push
scas
loope
mov
adc
and
xor
in
sbb
jne
std
and
jo
das
pushf
out
loopne
jb
mov
pusha
loopne
xchg
cmpsl
out
loope
out
or
insb
add
push
jnp
pop
mov
gs
notb
and
cmp
pop
cmp
jnp
lea
das
xor
mov
add
dec
and
int3
lods
xor
out
add
mov
xor
mov
adc
leave
mov
aas
pop
aad
insb
mov
pop
mov
sahf
add
call
push
push
xchg
leave
add
push
hlt
or
sbb
xchg
xor
test
pop
pop
jle
inc
lds
rdpmc
sbb
add
scas
cltd
xchg
test
nop
xchg
daa
add
lar
jns
pop
sub
xor
sub
adc
loopne
mov
cmp
hlt
orl
xchg
push
sbb
lcall
inc
pop
inc
pop
clc
adc
ret
dec
sub
xchg
cld
jmp
cli
loopne
jp
lahf
dec
sbb
add
push
aaa
js
daa
jne
jnp
dec
and
adc
sub
je
pop
xor
in
fisttps
mov
or
inc
or
and
into
dec
cmp
daa
call
cwtl
adc
xchg
pop
cmc
add
or
jp
sub
outsl
scas
mov
fstpl
push
mov
push
xchg
push
out
mov
jp
dec
pop
push
adc
test
lock
mov
imulb
add
dec
add
mov
or
pop
pop
hlt
add
dec
stos
cld
xchg
jo
xor
xchg
in
mov
loop
push
rorl
leave
jl
mov
mov
add
mov
flds
je
loope
xchg
or
mov
ret
pop
adc
in
mov
sbb
jne
cmp
or
jg
lods
lea
mov
sub
test
lods
inc
sub
mov
rcrb
dec
std
sbb
lds
pop
ret
xor
cwtl
jg
in
jno
add
ret
jp
and
mov
xchg
add
pop
movsb
mov
lahf
frstor
pop
pusha
ret
adc
mov
jb
ja
repnz
mov
lods
je
jb
or
add
flds
add
fildll
add
inc
jae
or
outsl
pushf
test
push
ficoml
or
movsb
or
cli
dec
scas
movsl
add
push
andb
xor
add
xchg
clc
addr16
into
popf
out
pop
cwtl
std
xor
fldenv
ret
mov
inc
stos
mov
xor
pusha
sub
out
cmp
add
sub
cwtl
fdivr
loopne
mov
fsubs
or
sub
add
jecxz
xchg
sbb
pop
rcll
add
or
aam
cmpb
es
pop
xchg
cmc
pusha
les
push
clc
fmull
movsb
outsb
cwtl
push
js
xchg
int
push
mov
xchg
and
jg
jle
mov
leave
out
adc
xlat
mov
insb
push
mov
movsl
add
sub
cmp
fwait
subb
or
xor
je
dec
adc
aam
roll
scas
int3
inc
bnd
add
fnstsw
inc
das
add
and
add
sub
xor
lock
inc
loope
inc
jg
mov
cli
repz
xchg
push
jle
hlt
add
pusha
xlat
movsb
lods
jnp
and
sahf
sub
cmp
add
imul
mov
neg
in
outsl
add
ja
xchg
push
mov
add
shlb
pop
sbb
mov
xchg
jmp
push
imul
or
push
jle
adc
dec
bswap
pop
mov
fcompl
mov
loop
sub
sbb
xchg
cwtl
scas
cltd
or
dec
adc
sub
dec
dec
lcall
cltd
mov
inc
enter
incl
popf
mov
jns
pause
insb
or
dec
xchg
push
sbb
jle
fmul
in
add
lock
in
in
jmp
sub
add
push
stos
or
into
sarl
fbstp
dec
xor
pop
cs
push
mov
mov
in
fcoms
jb
add
sub
pop
inc
xchg
ret
mov
mov
in
mov
es
test
mov
jg
cmpsl
ss
mov
pop
outsb
roll
rorb
add
out
sbb
or
cmp
ja
add
mov
mov
fs
mov
sarl
xor
aad
lock
arpl
andl
ljmp
loopne
push
ljmp
repz
cltd
aas
mov
or
sub
outsl
call
add
dec
adc
mov
cmpsb
nop
data16
adc
mov
inc
outsl
mov
add
jno
ficompl
lret
and
cmc
push
jecxz
sub
mov
xor
test
jns
fdivs
ljmp
es
add
push
inc
fisubl
xor
add
xor
mov
jne
xchg
mov
pop
sbb
cmc
pop
add
fldcw
pusha
repz
js
xor
mov
pop
cmp
sbb
xchg
adcb
inc
dec
in
into
fistpl
inc
movsl
addl
fnstsw
jae
or
jb
add
push
jecxz
movsb
lock
inc
xor
mov
pusha
or
pop
pop
pop
sbb
inc
setp
jg
subb
push
movl
or
stc
jns
add
sti
mov
je
adc
aad
mov
cmpsb
fld
pop
test
lret
xorb
movsb
scas
mov
add
lds
xor
ds
add
inc
inc
pop
mov
aas
icebp
sarb
adc
add
iret
out
inc
and
or
loopne
jo
fs
nop
sbb
mov
stos
xlat
mov
repnz
mulb
aas
ja
loope
and
popa
dec
lock
lret
mov
scas
int
and
or
jbe
inc
shl
fistps
cli
mov
xlat
push
dec
jmp
xor
and
fnstenv
pop
arpl
lds
jp
pop
mov
cwtl
xorps
in
bound
rorb
add
adc
cmp
orb
and
bound
mov
inc
faddl
pusha
enter
sbb
mov
sub
addl
ret
jnp
rcrb
jbe
mov
enter
add
dec
sub
and
enter
repnz
and
xchg
sub
mov
nop
mov
jl
call
lahf
ljmp
dec
mov
add
imul
pop
or
cs
lcall
adc
inc
lods
adc
outsl
inc
or
add
std
cmp
insb
jle
mov
add
inc
subl
add
mov
jg
add
loope
int
bound
lea
mov
cmc
repz
dec
inc
add
rorb
add
inc
lea
sub
lret
add
addr16
in
pop
or
jne
dec
pushf
add
mov
scas
xchg
hlt
cmp
add
dec
mov
stos
xchg
imul
adc
std
scas
cli
add
cmp
push
insb
inc
out
addb
gs
js
je
add
mov
adc
pop
repnz
clc
imul
mov
or
cmp
test
add
sbb
mov
cltd
ret
mov
js
push
cmc
ljmp
pop
jge
lock
and
pop
jnp
jne
sahf
add
pop
mov
inc
push
and
jne
mov
sub
push
add
ljmp
pop
mov
repz
adc
add
add
in
fwait
je
inc
add
loopne
fisubrl
pop
or
pop
hlt
inc
jnp
sbb
sbb
add
inc
jecxz
imul
jns
add
xchg
push
add
mov
rclb
jle
ljmp
loopne
mov
xchg
pushf
rorb
fimull
sbbb
pop
jne
repz
or
outsl
inc
mov
xor
cli
in
jecxz
icebp
mov
and
sub
testb
dec
add
shll
push
xor
aas
or
psraw
test
inc
pop
add
icebp
fildl
xchg
call
enter
jp
in
jl
hlt
dec
add
mov
fldl
out
xchg
and
mov
iret
add
inc
inc
icebp
xor
jb
add
divb
cmp
fnstenv
mov
hlt
add
inc
pop
xsavec
testb
mov
nop
add
aas
mov
or
cli
push
mov
and
and
mov
add
mov
stc
or
push
sbb
sub
rorb
pop
dec
shrl
mov
lret
outsb
inc
add
push
insb
dec
ret
fsub
ltr
jg
sbb
jge
mov
inc
mov
sldt
push
sbb
cmp
push
stos
add
mov
adc
mov
xchg
fists
jno
cld
lret
add
cmp
testb
add
popa
add
xor
mov
repz
add
mov
inc
ljmp
sub
cltd
add
dec
out
std
rorb
push
subb
mov
and
dec
or
xor
cmp
push
xchg
push
ljmp
jg
dec
add
mov
add
scas
pop
sbb
inc
inc
inc
in
cmp
add
into
add
fildll
lock
loope
xchg
push
ja
push
xchg
les
cwtl
sbb
push
int3
jbe
imul
in
xor
dec
dec
cld
cmp
add
mov
dec
outsl
lock
mov
lds
adc
push
mov
dec
inc
dec
dec
hlt
add
jmp
shrl
out
addb
mov
clc
push
idiv
pop
testb
fwait
mov
jmp
adc
sub
jg
add
pop
mov
dec
add
inc
fsubrp
mov
dec
jmp
push
dec
inc
add
mov
and
iret
in
les
lods
push
add
in
sti
sahf
imul
sbbl
leave
jl
mov
pop
rcrl
icebp
mov
add
and
add
mov
fistps
fldt
mov
sbb
decb
add
adc
add
mov
add
or
dec
sub
imul
pop
sub
es
inc
add
adc
jnp
add
hlt
xor
xor
addr16
sub
add
test
out
add
iret
loope
orb
jl
je
fildll
negb
sub
gs
dec
test
add
push
mov
add
mov
clc
xchg
or
dec
jge
cmp
mov
xor
out
add
jns
cmp
xchg
into
add
jno
rcrl
xchg
jbe
add
or
stos
sbb
add
jbe
aad
out
push
pop
cld
mov
add
jmp
inc
cmc
loopne
or
mov
std
and
in
ja
cmp
adc
inc
repz
cmc
add
mov
ret
push
xor
iret
arpl
cmp
out
ljmp
pop
data16
iret
mov
add
movb
push
cld
aas
pop
mov
push
sub
sub
xchg
pop
add
jno
lods
jae
inc
add
loop
stos
negl
mov
nop
cmp
push
sub
fcoml
mov
mov
mov
push
push
shlb
mull
shl
mov
fistl
inc
add
sub
add
lods
punpckhdq
inc
xor
ret
sti
push
xchg
or
push
addb
pop
sub
xchg
cli
pop
in
inc
add
stc
add
sbb
pop
iret
mov
sbbl
icebp
cmpsb
outsl
dec
mov
sbb
int
push
mov
add
cld
rorl
mov
jle
adc
js
push
sbb
jnp
xor
pop
cmp
and
jl
and
rolb
sbbb
call
add
inc
sub
test
sub
or
dec
and
addl
dec
sub
jae
lods
jg
call
or
into
test
adc
iret
fs
inc
sub
cmp
insl
pop
lds
lods
popl
shufps
jns
out
lds
in
cwtl
pop
add
cli
hlt
cmpsl
mov
movsl
in
xlat
jge
aam
or
adc
stos
jns
dec
fwait
add
cwtl
hlt
pop
adc
sti
inc
fnstsw
xor
push
pop
out
pushf
daa
movsl
adc
pop
inc
mov
mov
jo
pop
sbb
lahf
rclb
sub
movsl
dec
adc
inc
test
fucom
jle
pop
std
pop
push
shrl
xlat
and
jmp
or
mov
or
cmc
pop
lock
fcoms
add
sti
iret
xor
pop
sar
and
jl
imul
add
dec
sub
xor
fsubl
je
mov
decl
mov
loopne
push
cmp
mov
roll
adc
notl
push
jae
je
mov
inc
add
mov
cmp
cs
add
fildl
and
leave
cmpsb
mov
add
lret
int3
test
add
fld
aam
mov
add
dec
sub
iret
add
aaa
xor
pop
pop
xor
jae
out
xchg
sbb
outsl
xchg
dec
mov
or
jg
fwait
add
xchg
ss
add
sbb
aad
xchg
sahf
stos
add
sub
fsts
add
lods
dec
int3
arpl
sbb
lea
push
outsb
jo
push
push
and
es
sub
push
pusha
icebp
daa
out
mov
cmpl
addl
in
pop
inc
ucomiss
pop
cltd
std
and
aaa
dec
shl
mov
mov
icebp
dec
push
adc
into
mov
lock
scas
lods
xor
xchg
jns
pop
out
cli
add
inc
add
dec
mov
inc
add
ja
lret
inc
cmc
push
outsl
xchg
movsl
inc
push
inc
add
xchg
jl
lahf
fs
sbb
repz
adc
arpl
xor
push
and
xchg
orl
jmp
sbb
daa
xor
cmc
and
call
adc
ja
add
dec
scas
and
add
push
fs
cld
cmpsl
imul
rcrb
hlt
mov
sti
es
negb
mov
mov
and
lcall
jno
xor
cmp
cmp
add
fists
add
mov
jmp
cli
or
xor
js
mov
test
addb
imul
lahf
pop
leave
or
jno
pop
iret
sbb
dec
fucomip
fidivl
add
test
jae
mov
dec
inc
data16
jo
adc
push
mov
cmpsb
sbb
js
add
ja
call
lods
pop
push
sbb
jge
jo
pop
lret
add
sub
insl
or
cmp
ljmp
test
lock
movsl
inc
popf
add
filds
fistpl
add
cmp
mov
incl
and
nop
aas
movsl
push
adcb
enter
add
inc
ds
sub
dec
repz
jo
daa
and
stos
icebp
push
mov
or
xlat
sbbb
jb
bsf
insb
js
xchg
das
negb
mov
cmp
cmp
jge
add
lret
jns
add
or
mov
inc
pusha
jnp
pop
mov
xor
mov
test
inc
lock
fnstsw
sbb
dec
jg
bound
shl
jns
shrb
stos
inc
or
cmp
imul
or
faddp
push
jne
aad
jg
pop
push
xor
test
adc
nop
mov
std
dec
jle
shll
nop
and
rcl
ret
dec
das
les
icebp
xor
add
and
or
xchg
sub
cli
push
pusha
inc
out
add
sub
lcall
icebp
add
xchg
sub
cld
dec
cmp
add
inc
fs
add
imul
ret
push
cmpsl
mov
adc
push
add
and
ret
add
inc
addl
add
cmp
push
sub
or
sahf
xchg
js
lea
mov
decl
cmp
addb
mov
jb
sbb
xchg
cwtl
pop
pusha
out
or
mov
lret
test
inc
add
loopne
shlb
xor
cwtl
inc
push
repz
fildl
arpl
xor
sbb
push
insb
pusha
std
sub
pop
stos
xchg
popf
andb
add
inc
or
clc
pusha
xchg
push
push
add
and
mov
or
cmp
add
shll
divl
jb
add
adc
roll
mov
int
and
andl
add
int3
andb
das
fs
lcall
dec
andb
in
inc
or
movsb
inc
pop
xchg
fistl
mov
sub
cmp
ljmp
push
dec
add
iret
push
nop
cltd
lcall
add
jecxz
jle
add
insb
mov
add
fidivs
into
lahf
fdivrs
lcall
sub
sbb
cmpsb
stos
rcrb
inc
xchg
mov
add
popa
pop
inc
dec
loop
pusha
mov
push
mov
jae
xchg
lret
fdiv
pop
add
clc
xchg
xlat
pusha
push
pop
push
mov
cmc
jecxz
pusha
push
mov
add
xchg
hlt
inc
into
cmp
loop
xchg
fstpt
testb
cmpsb
ja
mov
leave
add
nop
jl
add
mov
insb
mov
test
xchg
dec
pop
cwtl
jp
std
sbb
aad
inc
dec
pop
in
pop
or
and
and
xor
add
loope
rclb
add
insl
arpl
xchg
pop
sbb
pop
sti
add
push
xchg
call
push
sbb
pusha
insl
or
push
jb
cmp
adcl
push
xor
call
testb
pop
nop
fisubrl
pop
pop
cmp
rolb
jp
sbb
into
gs
xor
shr
or
sub
sbb
add
lods
fxch
iret
shlb
mov
pop
add
sub
imul
cwtl
fwait
cmp
js
pop
mov
and
movzbl
push
xchg
adc
sbb
adc
jne
mov
int3
pop
add
ljmp
je
sbb
std
jmp
mov
hlt
pop
cmp
out
nop
cwtl
rcrb
in
xchg
cmc
mov
mov
and
add
shll
test
jecxz
cmp
aad
mov
aaa
sbb
or
dec
jp
mov
xor
in
cmpb
add
arpl
lea
mov
mov
fiaddl
fstp
sub
mov
in
jmp
xchg
jmp
and
add
stc
xchg
mov
add
cmp
pmuludq
xor
jge
inc
adc
mov
push
cli
sbb
mov
inc
loopne
pop
xor
insb
into
sub
xchg
add
jl
mov
sub
and
sarl
push
and
imul
adc
cwtl
add
int3
xor
add
into
addb
jp
ja
jo
add
hlt
int
imul
pop
sbb
xchg
pop
jl
jns
add
das
and
pop
push
jecxz
aam
xor
add
lods
pop
inc
mov
xor
rcl
test
jbe
andb
sbb
outsb
or
inc
xor
mov
arpl
cmovae
call
and
xchg
stc
cmp
or
xor
add
and
pushf
fwait
push
icebp
loopne
adc
xchg
xchg
sub
lods
or
and
nop
sbb
xor
cs
sti
out
add
or
or
jmp
arpl
stos
aas
xchg
add
test
pop
and
adc
inc
sbb
inc
add
mov
jnp
fcmovu
bound
shll
mov
pop
xor
sub
cmp
and
in
das
add
and
jmp
mov
or
in
inc
jno
add
jmp
push
mov
mov
mov
cmp
add
dec
call
les
add
fldln2
add
call
loope
add
mov
pusha
and
add
lods
cmp
add
cmp
xor
xlat
stos
popf
test
xor
sbb
pop
outsl
push
mov
pop
push
dec
clc
mov
xchg
mov
rorl
mov
mov
pop
xlat
rorb
add
in
call
sub
je
add
stc
repnz
pop
cmp
scas
add
test
fisttps
push
add
jb
push
cmp
add
aam
into
xchg
lods
mov
rclb
push
out
sbb
bound
lret
adc
add
xlat
or
pop
shl
lods
repnz
add
xchg
cli
sub
lcall
outsb
adc
xchg
adc
stos
push
test
xchg
mov
sbb
cmc
add
repz
xor
cmovb
jge
and
add
sbb
add
mov
aas
pop
ds
out
jno
shlb
leave
popl
mov
jns
clc
inc
cmpsl
repz
enter
aas
adc
jne
pop
pop
scas
insb
jp
lock
dec
cmpsb
inc
jl
gs
or
ja
xchg
arpl
js
sbb
stos
adc
adc
mov
sub
cmc
in
dec
add
outsl
mov
add
dec
xchg
ss
xchg
and
out
dec
int3
movd
imul
ficoms
sbb
popa
outsb
cs
lret
adc
or
push
in
mov
sbb
push
stc
outsb
cmp
incb
jns
sub
pop
dec
jne
sbb
sarb
outsb
andb
fs
and
inc
fdivl
clc
movsl
mov
int
lods
push
insb
xor
das
mov
add
cmp
arpl
push
xchg
jle
add
adc
sti
stc
mov
add
jno
dec
jp
cwtl
lock
mov
or
frstor
adc
fsub
jae
push
and
cmpsl
imul
mov
xor
and
mov
mov
fiaddl
ret
popf
xchg
push
mov
mov
ja
lahf
fmuls
mov
push
mov
or
lods
mov
shrl
inc
sarb
add
mov
sub
into
mov
es
xor
push
adc
test
fidivrl
fistpll
gs
cmp
in
mov
pop
sahf
outsb
mov
fsub
orb
leave
or
push
sbb
xor
or
nop
ja
sbb
orb
pop
clc
ret
js
add
gs
nop
cli
pop
pop
jmp
lock
jp
or
mov
adc
add
pop
mov
add
sub
pop
sub
movsl
xchg
notb
mov
fildl
xlat
push
sbb
push
cmp
faddl
cmp
and
mov
push
stc
jle
sub
loopne
inc
add
or
imul
subb
test
sub
mov
addl
hlt
mov
into
pop
xchg
add
clc
pop
int
bound
jb
lea
out
loopne
enter
movsl
pop
or
insb
flds
rolb
adc
mov
rcll
xchg
cmp
xchg
mov
testl
inc
fdivs
add
adc
adc
add
adc
or
pop
add
add
sub
add
cmp
cltd
cmp
mov
movsl
cld
add
movsb
adcl
movhps
xchg
inc
mov
loopne
add
push
lods
in
adc
sub
addl
jnp
std
pop
add
cmpb
imul
pop
mov
cmp
pop
aaa
aad
jo
xlat
je
jae
add
xor
mov
jns
mov
push
jae
or
mov
pop
add
xchg
cmpsl
roll
adc
lret
and
cmp
imulb
pop
mov
sarb
sbb
filds
cltd
int
lcall
call
bswap
fwait
sub
inc
push
cmpsl
js
in
aaa
mov
loopne
or
testl
out
mov
hlt
add
sub
add
sti
dec
icebp
sub
push
add
rclb
loopne,pt
adc
add
add
mov
pop
adc
xchg
inc
jnp
int3
push
and
or
add
sbb
add
ss
jne
mov
add
adc
pusha
clc
shlb
mov
sbb
out
and
sub
and
sbb
add
and
add
mov
xor
pop
fidivrs
popf
std
mov
inc
mov
mov
cmp
inc
sti
inc
and
in
test
push
shll
push
jg
pop
xchg
add
cwtl
inc
mov
ret
lahf
in
add
jmp
cmp
inc
cmpsb
and
mov
jmp
adcl
cltd
sub
or
and
cwtl
sbb
and
clc
fmull
mov
pop
jns
stc
xchg
sbb
or
scas
and
add
fs
jp
lcall
sti
add
adcb
pop
out
add
jb
xor
pop
mov
cmp
add
sbb
add
push
lcall
jno
xchg
mov
add
outsb
call
fadds
jmp
add
adc
add
adc
pop
add
mov
cmp
dec
rolb
cmp
mov
push
rcl
js
in
or
adc
mov
jns
inc
stos
adc
ja
mov
push
sub
adc
sbb
add
add
sub
mov
jmp
lahf
mov
repnz
int3
loope
adc
mov
in
sub
addr16
ds
add
repz
mov
mov
cmp
lds
lret
dec
orl
mov
mov
pop
leave
cmp
test
mov
add
or
sub
inc
pop
add
ds
mov
shrb
dec
push
add
mov
push
cmpsb
sti
lcall
icebp
fcomp
mov
add
xchg
and
add
inc
repnz
xchg
mov
popf
add
ljmp
lret
mov
and
scas
or
inc
movsl
sub
mov
pop
clc
jecxz
aaa
nop
scas
clc
add
sub
orb
jp
testb
push
sbb
dec
jge
dec
je
jb
add
das
outsl
mov
add
lods
popa
cld
dec
pop
mov
pusha
cwtl
cmp
ss
cmp
cmp
sbb
ret
pop
and
mov
aas
out
rcll
adcl
cmp
mov
sti
mov
imul
shrb
jecxz
xor
nop
inc
add
sbb
xchg
push
ja
fs
mov
pop
cmp
add
in
std
stos
clc
jl
fnstsw
mov
add
mov
or
add
lret
mov
xor
sub
cltd
lahf
sub
cmp
mov
out
push
inc
int3
cltd
sub
jge
mov
faddl
ret
fadds
mov
cld
add
push
rorb
pop
sbb
inc
rorl
add
xor
cmp
xchg
sub
push
push
loope
sbb
xchg
pushf
jno
and
loop
and
fnstenv
in
lret
pop
add
pop
out
adc
add
add
dec
js
in
push
jg
arpl
shrl
aad
inc
nop
xchg
xor
jg
outsb
into
pusha
arpl
leave
add
and
mov
push
cmp
xor
xor
aas
pop
das
call
mov
inc
loop
dec
or
add
sbb
add
lret
add
adc
in
in
call
mov
mov
add
cmova
xlat
cwtl
aas
sub
jae
dec
ljmp
popl
pop
push
lret
pop
mov
das
adc
popf
xor
call
cmp
adc
data16
jb
add
test
pop
fcompl
in
xchg
sbb
xorb
adc
dec
ss
pop
int
inc
push
add
xor
lret
inc
xor
dec
orl
pusha
push
mov
jne
mov
xor
fcoms
sbb
pop
xchg
dec
stos
push
pop
add
mov
fwait
add
shlb
nop
add
cltd
or
or
push
inc
int
pop
arpl
mov
fisttpll
repz
andl
pop
pop
add
inc
stc
xor
lahf
dec
jne
jmp
xorb
xchg
popa
mov
pop
adc
jmp
lock
rcrl
pop
ret
rcrb
add
inc
rcl
push
out
outsb
nop
push
add
in
movsb
int
je
pop
add
into
xlat
addl
loopne
sub
loope
sub
lock
sub
jae
or
cmp
pusha
lcall
in
cld
sti
add
add
mov
icebp
lret
and
add
xchg
sbb
mov
and
pop
mov
les
movsl
jne
or
xor
mov
aas
lods
repnz
test
and
add
mov
pushf
xor
aaa
push
cld
jmp
jo
imul
push
add
inc
add
dec
rcrb
jo
push
jo
cmp
lcall
imul
and
fwait
cwtl
popa
fmul
out
sbb
add
pop
xor
push
je
mov
push
cmpsl
mov
add
enter
push
pop
add
orb
mov
hlt
xor
cld
and
add
popa
rolb
into
daa
pop
cld
push
pop
pusha
ror
xchg
out
push
shlb
insb
stos
add
pop
sbb
idivl
add
cwtl
mov
jp
add
mov
je
ret
sti
add
adc
add
jne
pop
mov
xor
xor
test
cmp
cld
clc
pusha
out
cli
push
repz
xor
xor
or
and
sbb
movsb
scas
jns
adc
jo
cld
loop
add
mov
jl
push
cmp
daa
adc
ljmp
and
add
lret
test
push
add
and
hlt
xchg
xor
out
js
clc
add
roll
loopne
or
test
pop
fldenv
out
xor
js
mov
xchg
stos
mov
negl
add
add
mov
inc
out
push
cmp
mov
mov
mov
pop
pusha
jns
push
and
leave
mov
outsb
and
stos
sahf
andb
dec
add
hlt
outsl
mov
fs
mov
nop
scas
imul
mov
pop
roll
sub
in
movb
in
ja
pop
push
js
mov
sarb
xor
pop
mov
stos
jmp
imul
movsb
loopne
sub
inc
add
lds
nopl
pusha
pop
bound
sub
jge
movsl
pusha
xor
pop
popf
and
aas
sub
mov
std
add
sub
sar
inc
mov
int3
arpl
lahf
fsubrs
mov
pop
add
fstpl
pop
stc
pusha
aam
jge
sbb
xor
jmp
pop
inc
push
add
add
dec
dec
test
or
scas
aam
mov
push
mov
mov
dec
notb
or
jno
jmp
in
push
loopne
adc
jle
jg
mov
inc
sbb
outsl
imul
aam
daa
fwait
das
into
add
or
hlt
add
adc
test
sbb
mov
mov
mov
and
pcmpeqd
fsubl
xchg
push
pop
aas
fcmove
dec
mov
enter
lods
lcall
add
ds
mov
mov
pop
pusha
cltd
mov
stos
cwtl
mov
and
push
ss
and
rclb
mov
add
mov
test
adc
pop
in
ret
add
xor
inc
jo
and
dec
xchg
sub
lcall
mov
call
and
sahf
xor
add
dec
mov
add
sub
lcall
cli
jbe
mov
jl
cs
movb
orl
sbb
mov
pop
pop
adc
inc
sbb
mov
outsl
cwtl
adcb
out
xorb
cmp
xchg
dec
add
adc
stos
push
shl
add
arpl
mov
jno
adcb
mov
outsl
outsb
add
push
rolb
and
cmc
nop
dec
pusha
jl
mov
outsb
jns
adc
sbb
add
push
add
dec
loopne
push
add
lret
repnz
push
inc
cmp
cwtl
cmc
into
pop
and
xchg
jmp
xchg
jno
out
mov
lds
shlb
sub
xchg
push
push
mov
add
aas
addl
add
in
add
cli
inc
sub
xchg
pop
lcall
cmp
mov
pop
xchg
inc
and
lods
jge
cwtl
mov
enter
inc
repnz
fadds
loope
test
mov
push
or
fbstp
xchg
jp
fstl
lret
mov
inc
pop
sub
movsb
rol
add
pop
test
push
jbe
inc
test
inc
add
mov
jecxz
push
das
adc
loopne
xchg
dec
lds
push
cli
scas
sti
jae
sub
lea
ret
mov
fnstenv
loop
add
ljmp
add
test
cmp
dec
flds
jbe
xchg
xor
lock
xor
lods
in
cmp
lret
sub
inc
inc
cmp
arpl
and
add
bound
inc
addr16
add
fdivl
incb
mov
mov
in
and
into
xchg
add
neg
das
mov
cs
mov
add
test
fildl
inc
jl
ss
mov
xchg
pcmpeqb
gs
loopne
jle
xchg
add
xor
sbb
mov
sbb
jae
mov
frstor
testl
pop
inc
fcomps
gs
add
fdivl
mov
xor
mov
push
imul
shlb
cs
sbbl
adc
add
shlb
pop
sbb
gs
mov
fdivrl
adc
or
cli
adc
pop
mov
push
shlb
sbb
pop
popf
push
inc
ja
push
outsb
dec
rolb
fiaddl
ljmp
jl
adc
mov
add
in
dec
aam
xor
add
test
jnp
jb
add
notl
add
pop
fwait
pushl
mov
fists
pop
cmp
hlt
and
loop
mov
icebp
inc
xchg
sub
scas
std
sbb
fwait
inc
lods
daa
add
mov
pop
cmp
shlb
movsl
inc
add
sub
pop
and
fs
mov
or
xor
lods
jnp
dec
or
jle
adc
or
aam
pop
cmp
aaa
imull
in
push
dec
xchg
inc
cwtl
cmp
add
movsb
ja
sbb
lea
add
jae
xchg
imul
addb
and
cmp
std
jo
xchg
mov
sbb
mov
dec
lds
movsl
popa
jp
mov
sbb
cmc
leave
add
gs
push
orl
lahf
mov
mov
jmp
iret
nop
cmp
jge
pop
mov
mov
ret
mov
ds
nop
fdivrl
pop
add
pop
pop
iret
rcrb
mov
popa
add
repz
xor
add
fsubrs
mov
popl
leave
stc
push
add
and
out
jmp
ja
insb
or
insl
loopne
add
sub
data16
add
dec
inc
lahf
push
pusha
es
dec
nop
imul
adc
or
mov
push
sub
out
test
xor
ret
cld
ds
inc
outsb
fdivs
add
mov
lcall
roll
sbb
jne
push
scas
addr16
mov
mov
cmp
dec
xchg
nop
pusha
add
pop
nop
scas
test
pushf
jp
adc
call
aam
push
jge
add
pop
ss
or
push
cmpsl
adc
inc
cmp
lcall
or
cltd
xchg
inc
sbb
mov
mov
add
jge
adc
loop
add
dec
mov
in
pushf
dec
xor
sahf
fsubr
cmp
rolb
ja
add
cli
mov
pop
flds
cs
sub
shll
fistpl
add
fadds
lahf
add
pusha
testl
adc
lds
inc
in
jnp
mov
mov
and
lock
pop
add
out
je
xchg
dec
sub
pop
xor
sbb
sub
ret
jl
icebp
lods
pusha
adc
sub
adc
mov
out
aaa
ret
mov
rolb
inc
sbb
push
cmp
sub
inc
push
jle
loopne
or
aad
pop
ss
cmp
loope
xchg
jns
cltd
xor
cmp
idivb
inc
mov
cmp
dec
mov
test
out
sarb
adc
push
test
mov
subb
add
or
jle
pop
mov
and
insb
cwtl
inc
cld
push
sbb
mov
lret
adc
or
mov
mov
jae
sub
test
test
mov
sbb
sub
rcll
xor
mov
mov
xchg
lret
pop
icebp
jmp
inc
mov
in
cwtl
hlt
xlat
or
jg
enter
in
jecxz
rcrb
jle
pusha
or
aas
clc
ret
or
add
or
push
push
dec
loop
lock
add
fadds
inc
clc
lahf
jo
mov
addb
push
pop
out
faddl
ret
shll
aas
push
fs
insb
mov
sub
push
rol
cmp
stos
adc
xchg
push
addb
add
mov
pop
icebp
orps
sub
ret
pushf
cli
rcr
pusha
mov
out
rcrb
es
repz
clc
hlt
push
add
mov
lods
add
fisubrl
adc
sub
add
fmul
xchg
or
mov
add
jns
add
gs
cmp
add
xor
repnz
divl
xlat
xor
cmc
mov
mov
sub
add
sbb
sti
nop
pop
adc
test
movsb
sub
add
in
jmp
dec
add
mov
scas
call
jbe
sahf
rcrb
repz
fdivrs
mov
movsl
pop
outsl
add
dec
mov
adc
frstor
movsb
in
add
xor
add
shll
inc
inc
ret
add
mov
jno
and
cmp
pop
push
and
sub
push
mov
rcr
mov
enter
add
mov
jg
cmp
jbe
inc
xor
xchg
jne
dec
push
xchg
jo
sub
mov
mov
and
fcoml
ficoms
call
push
shll
cld
inc
xorl
xchg
in
lea
sbbl
push
cmp
fistl
mov
inc
or
jb
add
xor
popa
inc
in
mov
les
cltd
out
into
push
les
movb
pop
aad
jnp
mov
pop
aas
jmp
packsswb
jbe
psrlw
les
add
mov
xor
mov
add
fwait
ja
push
push
add
jns
jle
mov
jp
scas
sub
xchg
mov
cmp
fiaddl
ja
pop
cmp
add
out
xor
jbe
mov
sbb
mov
xor
add
mov
and
test
pop
insb
add
iret
loop
add
movsb
es
stos
movsb
add
bound
ljmp
cs
mov
xchg
jl
movsl
xlat
hlt
loopne
add
cmpl
mov
jbe,pn
test
add
popa
in
loopne
sbb
ret
std
adc
add
jbe
add
into
pop
sbb
mov
in
mov
xor
add
int
mov
adc
jle
add
jno
jbe
jne
inc
add
ffreep
std
mov
repnz
push
mov
mov
psubw
jecxz
xchg
cld
into
seta
adc
fstps
pusha
outsl
add
std
add
movsl
insb
mov
repnz
daa
stos
jo
aam
orl
lret
jmp
in
in
xchg
sub
arpl
xor
clc
mov
and
mov
cmpsb
movl
xchg
les
or
pop
scas
pop
subl
add
lret
lds
pop
cmpb
dec
xchg
add
add
mov
imul
jge
xor
in
add
mov
movsb
jp
add
cmp
cmpb
add
sbb
dec
lock
sub
mov
js
cmpb
mov
cs
mov
cld
outsb
jmp
dec
fcomps
les
lock
andb
adc
mov
pop
add
dec
int3
mov
and
pop
lahf
add
enter
pusha
add
sti
mov
mov
insb
xor
mov
adc
je
push
ret
aaa
leave
add
cs
aas
out
sub
lods
fnstsw
dec
fidivrl
shlb
or
pop
fwait
lock
xchg
xchg
mov
aad
sub
pop
mov
sub
stos
or
cmpsb
mov
add
loop
and
icebp
add
mov
jecxz
js
add
mov
push
add
mov
test
xchg
push
dec
outsb
push
sbb
fisubrl
mov
pop
loop
add
or
push
adc
mov
cmp
je
push
fimull
jo
fldenv
xchg
push
in
sbb
or
inc
adcl
add
add
pop
scas
arpl
fsubrl
mov
pop
sub
movl
pop
pop
add
add
dec
iret
mov
pusha
add
bound
stos
xchg
push
das
aam
test
ss
adcb
add
outsl
std
in
mov
fistl
push
jbe
addb
lds
mov
add
adc
pop
mov
sti
push
lock
pop
shlb
xchg
adc
pop
xchg
rcrb
push
cs
add
ljmp
test
mov
sub
cmpb
loop
xor
pusha
int3
frstor
dec
jle
rcl
cli
jbe
sbb
call
cmpsl
jno
sub
adc
and
cmp
sqrtps
adc
inc
loopne
cltd
add
push
dec
xchg
scas
push
sbbb
cmp
int3
mov
dec
call
movzbl
sub
lods
iret
add
nop
mov
test
sbb
xchg
fsts
and
lahf
cmp
lock
and
mov
icebp
andl
xor
push
mov
mov
pushf
pop
jae
push
inc
call
test
rcll
mov
pusha
push
js
dec
mov
or
in
add
lds
mov
insl
lea
mov
and
lret
sbb
dec
pop
adc
dec
add
pop
testl
add
mov
or
cli
pop
jl
sub
clc
mov
movsl
add
loope
fldcw
dec
xchg
xchg
mov
jp
cmp
rclb
sub
in
mov
xor
outsb
jbe
leave
or
pusha
dec
xor
mov
push
jmp
push
cmp
mov
stc
movb
cmp
or
add
mov
gs
jne
add
push
sbb
jae
mov
xchg
inc
lods
xchg
imul
faddl
mov
cmp
sbb
int
imul
pop
add
sub
inc
xlat
shl
ret
cs
mov
lods
ljmp
in
int
arpl
push
add
cmp
nop
loop
jnp
push
lock
mov
pop
dec
push
push
rorb
cmp
in
pop
mov
push
dec
sbb
add
xchg
inc
mov
add
cltd
sarb
movsl
enter
push
jp
cli
inc
shlb
mov
dec
xor
or
lret
imul
cmp
xchg
insb
loope
jl
das
leave
inc
or
xchg
test
cld
in
int3
jle
xor
add
in
pop
mov
mov
push
outsl
addl
xchg
jo
pushf
addr16
push
lret
call
mov
nop
pop
mov
sar
pop
lret
sbb
loope
in
mov
movsb
hlt
and
add
iret
gs
sbb
add
mov
call
sbb
mov
cmp
out
and
and
xchg
std
add
mov
pop
sbb
add
sar
pop
xor
push
adc
sarb
faddl
mov
sub
mov
imul
mov
mov
push
nop
jno
addb
pushf
jge
or
in
add
pop
cmc
testl
dec
test
mov
imul
push
push
cmp
ficomps
xor
test
ret
js
xor
cli
lds
jmp
jg
sahf
or
mov
ljmp
andb
sarl
repz
test
xchg
jo
cltd
dec
ret
mov
mov
push
mov
inc
jns
add
shlb
mov
movsl
leave
sub
les
xchg
shr
add
lahf
add
mull
adc
xchg
test
rcrl
cld
add
rclb
ds
xorb
cmpsb
mov
int
fisubl
add
frstor
xchg
mov
jnp
insl
add
xchg
mov
push
and
add
pop
stos
inc
pop
sbb
roll
andb
lret
cwtl
shrb
inc
rol
add
cld
xorb
ja
adc
jb
aad
xor
sbb
mov
jbe
add
or
add
ss
jbe
dec
add
repz
or
sbb
mov
xor
rcll
add
adc
mov
clc
sbb
scas
and
cmp
jb
rcr
loopne
leave
aas
push
insl
mov
sub
frstor
and
es
in
xor
mov
jp
inc
and
adc
std
mov
inc
mov
pusha
pop
sbb
subb
or
stos
test
jo
in
xorl
mov
mov
loop
sub
jnp
cmp
push
adc
shll
imul
push
ss
inc
lods
fidivs
pop
and
ljmp
lock
leave
cmp
add
jnp
and
add
adc
add
push
mov
clc
jo
add
dec
dec
daa
rol
add
pop
subb
inc
add
out
insb
push
push
add
inc
pop
adc
lock
cwtl
int3
add
lret
sub
xchg
add
push
inc
int3
push
out
lods
pusha
xlat
jle
fwait
xor
add
xchg
aas
jb
je
rolb
push
mov
outsb
dec
add
sti
cmpsl
data16
add
cmc
hlt
mov
les
cld
adc
orl
and
sbb
imul
add
mov
inc
add
push
pusha
into
cmpsb
xchg
loop
add
and
jl
int3
add
repz
xchg
xor
xor
imul
jns
out
jecxz
push
add
fucomp
xchg
add
lahf
jo
leave
jno
cmp
das
mov
jnp
dec
hlt
mov
push
sub
lods
dec
xor
aaa
mov
inc
mov
addr16
and
icebp
add
sarl
in
pop
pop
jns
add
mov
xor
push
test
hlt
rclb
jmp
and
adc
popa
data16
mov
jae
cmc
test
lock
pop
pop
aad
sti
out
cmpsl
or
jg
dec
popl
xchg
imul
loope
mov
push
add
sti
mov
imul
xchg
add
add
lahf
and
popa
or
xor
adc
mov
clc
sub
push
lcall
in
xchg
or
es
mov
cmpsb
movsl
mov
ja
add
sti
iret
mov
imul
xchg
xor
dec
and
daa
mov
fwait
pop
push
xchg
inc
cmp
dec
push
mov
out
inc
out
jb
mov
add
dec
js
mov
sti
mov
loopne
sub
dec
push
sbb
lods
jge
addl
jmp
es
add
sub
aaa
icebp
xor
add
cmp
arpl
xchg
rolb
test
outsb
ds
sbb
aas
int3
xor
fists
aam
cs
out
inc
inc
test
ds
mov
sbb
mov
insb
pop
sbb
frstor
cmp
arpl
mov
dec
xchg
pop
aam
xchg
pop
ljmp
jo
or
movsl
push
ja
mov
xor
aad
cmc
jp
leave
push
jle
sbbb
rclb
push
aad
add
out
dec
hlt
sbb
outsb
or
or
mov
dec
and
mov
xchg
add
jae
cmpsb
jmp
jbe
adc
mov
pop
es
or
add
andl
add
out
mov
adc
mov
adc
fcomps
sub
mov
fidivrs
mov
insl
cmp
and
add
add
mov
add
jo
mov
hlt
adc
fsubrl
xlat
call
cs
push
lcall
hlt
lret
xor
and
mov
enter
aaa
push
pop
lahf
mov
test
cmp
fadds
xchg
dec
sbb
aas
push
or
sub
pop
faddl
mov
shll
add
addl
lods
jle
push
xchg
shll
rol
inc
xchg
in
ljmp
mov
iret
into
pop
mov
das
add
testl
sahf
jae
jp
das
test
ret
loop
xor
cli
add
mov
mov
pop
sbb
sub
cmp
push
push
cmpb
dec
js
or
adc
xchg
out
jb
lret
jns
mov
push
mov
mov
ljmp
cmp
mov
dec
add
aam
push
add
push
outsl
jp
pop
inc
ja
fnsave
lds
mov
pusha
xchg
sub
add
cmpsl
enter
sub
stos
repnz
popa
lret
xor
daa
movb
imull
jle
jno
fs
leave
xchg
or
pop
pusha
mov
fisubrs
pop
xchg
xor
fidivrl
push
jg
dec
pop
in
jb
sub
jge
cmpsb
xchg
ds
add
fs
mov
mov
pop
dec
pop
je
cwtl
mov
lahf
or
loope
add
and
add
mov
shlb
jns
into
rcrl
js
inc
aas
sbb
in
arpl
cmp
add
cmp
fistl
shlb
add
xchg
bound
pop
and
fadds
push
stc
add
jmp
lds
aas
mov
decb
adc
jno
add
jnp
mov
repnz
add
jno
out
lret
push
inc
pushf
js
adc
cli
insl
add
lahf
iret
pop
cmp
mov
cmp
leave
adc
enter
lahf
push
in
cmp
orl
dec
lods
add
dec
fs
cwtl
and
jae
pop
or
mov
pop
out
mov
xchg
repnz
dec
data16
dec
mov
movsb
push
add
ja
lahf
pop
roll
mov
push
push
inc
add
loop
jne
lcall
stos
shll
mov
in
subb
fldt
xor
stos
mov
scas
mov
pusha
add
mov
push
insb
dec
test
mov
rorb
lahf
sub
fwait
scas
mov
into
mov
in
dec
repnz
lahf
out
add
inc
hlt
push
icebp
dec
scas
and
sti
mov
loop
aaa
push
add
sbb
add
xchg
gs
add
pop
dec
xor
bswap
stos
pusha
mov
add
lock
add
jno
sbb
xchg
mov
cmp
pop
push
jnp
les
jae
jecxz
mov
jmp
rclb
cltd
sti
add
in
and
jb
in
push
cmpsb
mov
stc
dec
add
shlb
aad
fdivrs
mov
jns
mov
cmpsl
xor
repnz
dec
push
xlat
dec
adc
cmp
testb
pop
leave
jl
es
dec
cld
stc
es
cmpsb
in
add
repz
jno
and
call
stos
std
enter
out
inc
mov
dec
and
mov
je
rolb
int
cmp
js
adc
add
push
sub
int
pop
add
inc
xchg
ret
cs
add
mov
test
icebp
pusha
add
test
roll
adc
ljmp
ficoms
inc
shl
aam
jg
and
add
xlat
mov
jl
out
sti
cli
pop
mov
add
xor
mov
lods
lret
enter
insb
add
sub
adcl
inc
lock
mov
add
clc
mov
xchg
add
popa
lret
ret
cld
lds
fstps
xchg
test
cmp
or
mov
lock
lret
add
repz
inc
add
mov
and
loop
ret
shlb
add
pop
inc
fildl
hlt
fildl
shll
inc
mov
popf
rclb
xchg
add
int3
or
sar
xor
jbe
adc
pop
cwtl
add
cmc
xchg
cmpsl
loope
mov
mov
cmp
add
xor
add
mov
inc
add
cmc
shll
xchg
dec
mov
sub
cmp
call
cltd
fwait
call
loop
mov
xchg
push
lea
ret
xor
pop
insb
sbb
aam
pop
or
inc
fs
scas
scas
test
mov
ljmp
add
pop
jp
push
sti
sbb
mov
adc
adc
add
decb
sbb
mov
dec
and
or
icebp
push
in
pop
cmp
jge
jp
push
cld
clc
push
outsl
test
cmpl
or
scas
stc
jb
or
push
in
mov
popf
add
jl
adc
mov
popa
add
or
hlt
mov
pop
cmp
je
lahf
clc
loop
push
jb
inc
and
inc
mov
jbe
lock
stc
sub
aad
or
adc
iret
jns
in
adc
lods
jg
add
adc
and
mov
repz
addb
scas
jne
lret
and
out
stc
xlat
or
lcall
xchg
rclb
xchg
push
cmp
test
addb
dec
sbb
xor
add
xor
xlat
lcall
mov
sub
xchg
add
sub
insb
or
bound
loope
movups
push
shll
push
sbb
rcrb
test
ret
add
lods
mov
aaa
jg
add
pop
jl
lret
gs
mov
jns
into
add
mov
jno
fildll
or
and
add
sub
inc
add
or
or
pop
mov
lods
jns
inc
loop
adc
ja
inc
clc
out
inc
fsubr
int3
pusha
pop
inc
cwtl
pop
sbb
das
es
inc
and
movb
inc
lret
push
rol
mov
lods
leave
mov
push
and
add
es
mov
xor
test
mov
pop
pop
pop
push
clc
rorb
mov
and
push
sbb
cmp
dec
nop
and
jno
mov
clts
mov
scas
loopne
or
shl
add
lds
or
mov
ficomps
sbb
inc
add
cmp
jae
lahf
insb
add
add
add
jp
ss
ja
add
cmp
mov
in
xchg
nop
cwtl
movsl
ljmp
inc
subb
mov
push
or
dec
cmp
nop
add
jg
sub
jae
scas
mov
jnp
dec
int3
add
sub
cs
mov
pop
out
dec
jmp
es
add
add
xlat
mov
inc
adc
pop
cmc
outsl
push
inc
scas
pop
mov
mov
mov
cs
add
jmp
movsl
sbb
push
add
fadd
mov
cmp
add
cmp
add
or
sti
add
mov
dec
daa
movsb
das
into
out
add
pop
cmp
adc
aam
in
popl
std
pushf
add
js
outsb
or
sbb
aad
sbb
add
lahf
xor
lods
rolb
inc
dec
and
je
mov
and
les
push
mov
jmp
fwait
sti
and
pop
add
lret
or
push
testl
sahf
pusha
arpl
sub
or
and
pusha
inc
lea
daa
adc
adcb
xchg
sbbl
rcrb
xchg
rolb
into
cmpsl
inc
jg
mov
ficomps
fwait
push
or
pop
add
ffreep
pop
lret
jg
lret
out
mov
xorb
push
icebp
jo
xchg
push
cmpsb
es
cs
add
lds
pusha
test
push
add
jl
fmuls
call
xchg
test
popa
xchg
imul
in
sub
cmp
mov
out
in
nop
fisubl
push
jecxz
pop
sub
lcall
jo
mov
xchg
sbb
sbb
in
fdiv
push
add
cmpsl
push
pop
or
push
add
clc
imul
xor
bound
in
push
and
xchg
cmpb
xchg
mov
adc
cmp
cli
dec
lcall
scas
xor
lret
popf
add
mov
das
add
fisttpl
aas
add
int3
cli
mov
inc
lods
hlt
add
out
dec
shrb
or
ret
adc
xor
pop
xlat
xchg
jnp
pop
push
dec
sarb
popa
pop
sub
ror
mov
mov
add
xchg
out
std
cmp
test
add
mov
add
cli
jl
insb
shlb
cld
add
call
sub
inc
mov
subb
xchg
sbb
adc
mov
push
shr
add
dec
or
shlb
xchg
ljmp
in
add
lods
stc
cmpl
xchg
mov
nop
jl
cmp
lahf
add
out
mov
and
push
add
in
sub
and
mov
xor
inc
add
ljmp
xchg
fstps
je
popa
in
adc
jno
les
sbb
add
adc
dec
flds
xchg
mov
inc
jns
dec
xchg
jle
add
insl
mov
repz
jne
not
cmp
add
loop
xchg
cmp
sahf
out
call
add
cmpsl
dec
push
movl
add
pop
mov
dec
sub
mov
nop
add
imul
add
cmpsb
shrb
sbb
int3
push
cli
call
cmp
rcrb
gs
into
inc
or
scas
sub
add
jb
xchg
push
mov
aas
sbb
and
movups
enter
movsl
inc
or
fsubrs
popa
loopne
aad
cmp
cs
cmp
lock
std
add
mov
das
cwtl
and
xchg
cmp
xchg
add
push
mov
adc
adc
jecxz
add
add
cwtl
cmpsl
xchg
add
lods
ret
push
notb
or
repnz
rolb
push
vprotb
sti
and
imul
xchg
mov
jo
mov
fwait
mov
jbe
add
mov
test
or
and
mov
clc
dec
clc
inc
sbb
add
test
leave
sbb
loope
cmp
je
add
outsl
add
pop
push
cwtl
jnp
movb
addb
sbb
dec
mov
test
int3
pusha
xchg
dec
sbb
adc
xchg
xor
pushf
xor
xchg
aad
add
hlt
mov
mov
fs
pusha
adcl
into
lods
push
pop
fmull
test
call
shrb
mov
xchg
xchg
rclb
icebp
mov
jb
sar
add
jae
fisttpll
jmp
mov
fs
int
sbb
sbb
jb
mov
jge
push
add
ret
add
pop
into
bnd
jp
pushw
sbb
jb
xchg
in
dec
push
sub
test
mov
mov
pop
add
sbb
or
shr
out
cmp
iret
imul
xchg
rol
movsl
dec
pop
sbb
dec
mov
aas
insb
pop
sarl
aad
int3
inc
xchg
rol
lods
rcrl
push
dec
daa
mov
shlb
add
and
and
sti
add
and
in
push
and
fwait
xor
leave
push
xchg
sbb
mov
shrb
pop
and
sahf
xchg
loop
add
les
add
and
lods
push
leave
inc
fs
or
mov
movsb
adc
sbb
dec
push
add
aam
pop
js
jne
jecxz
xchg
call
jbe
sahf
je
add
or
fistl
and
ja
jl
add
inc
or
mov
cmp
aam
in
add
add
flds
imul
insb
add
imul
xor
pop
push
mov
leave
jae
out
arpl
lea
add
aam
and
test
mov
aad
xor
push
cwtl
adc
lds
cmp
fnstcw
mov
sbb
add
cmpsb
fisubl
addl
scas
mov
jo
call
roll
call
pop
inc
in
imul
sbb
sbb
sub
sub
add
jmp
jae
sbb
sub
xchg
cwtl
int3
and
addr16
in
or
add
mov
add
popa
xor
repnz
xor
jmp
shl
imul
int3
mov
jb
shl
aad
lock
mov
out
jg
inc
sbb
cli
add
sbb
js
jecxz
leave
into
outsb
pop
popf
jl
cmp
pop
in
inc
mov
addr16
out
push
and
pop
xlat
mov
test
cltd
std
mov
jl
pop
add
xlat
lock
add
xor
jge
ret
add
fwait
cmpsl
xchg
imul
js
std
incb
andb
push
out
cmp
sahf
push
pop
orl
pop
in
mov
or
pusha
mov
test
mov
add
xor
pop
js
add
cmc
dec
pop
sbb
fwait
shl
jnp
add
test
add
call
ret
pop
sarb
addl
cmp
jo
xchg
rol
xchg
add
cmpb
lds
push
push
in
mov
sbb
rclb
enter
jae
repnz
mov
xor
or
add
mov
sub
dec
mov
negb
inc
pop
ja
and
dec
rcr
sbb
lods
xchg
and
bound
inc
pop
mov
sbb
cmp
cwtl
icebp
add
daa
ret
sbb
scas
cmp
stc
loopne
cmc
js
or
xchg
add
mov
cs
jo
and
dec
mov
lods
pusha
in
push
or
int3
xor
popf
shll
arpl
push
hlt
dec
imul
lret
and
std
push
mov
pop
add
loopne
dec
xchg
cwtl
aam
loop
or
dec
shlb
inc
fsubrl
add
jl
add
pushf
inc
incl
out
and
push
mov
push
push
imul
call
popf
sahf
jl
stos
ljmp
jmp
imul
pop
lret
inc
into
jns
lock
mov
cld
add
loopne
sub
sub
or
xchg
xlat
inc
jae
daa
or
jo
inc
lods
pop
testl
or
push
daa
ljmp
cli
ja
push
add
sub
lock
rclb
lock
lcall
stc
sub
inc
loopne
out
cs
je
leave
fs
sub
jne
adc
adc
shll
stc
adc
out
mov
std
cld
or
popa
gs
cmp
add
and
or
jns
jo
jl
leave
lods
sub
push
dec
js
repz
in
into
add
aam
pop
cmp
out
decl
inc
lahf
xor
add
movsb
lret
test
inc
clc
sbb
sti
inc
push
pushf
mov
ret
pop
push
add
dec
and
cmp
dec
enter
rolb
adc
mov
sti
add
xor
into
push
mov
add
cmc
pop
and
les
sti
test
jno
cmc
add
ljmp
cmovb
loope
pushf
mov
dec
sub
adc
sbb
mov
mov
dec
sub
loopne
rolb
mov
into
push
cmp
add
sbb
xor
sti
and
jo
inc
and
inc
outsl
pop
or
xacquire
jge
jp
icebp
dec
loopew,pt
in
cmp
pop
ja
repz
or
lret
push
xchg
sub
mov
mov
jb
popf
int
mov
les
sub
dec
rcll
add
cmp
push
aas
and
add
pop
xor
jns
outsb
pop
fcoml
and
adc
jnp
pop
pop
in
inc
jl
orb
movsb
mov
xchg
or
xor
cmpsb
in
jmp
mov
sbb
andb
loope
call
scas
mov
dec
testl
in
adc
and
fwait
outsb
jo
iret
sahf
add
adc
lock
jl
cwtl
nop
pop
aam
mov
das
sbb
clc
fdivr
fiaddl
and
cli
adc
mov
mov
aas
add
cmpsb
pop
mov
add
inc
adc
add
push
das
in
nop
call
xor
xchg
rorl
call
add
push
jmp
mov
sarb
sbb
out
cmp
jecxz
mov
mov
dec
lock
repnz
imul
xchg
xchg
jns
mov
movsl
xchg
sub
add
rolb
add
lret
nop
mov
mov
sbb
mov
pushf
fildll
inc
sbb
mov
add
movsb
and
jae
add
push
inc
xor
out
test
arpl
mul
fnstcw
jo
dec
sbb
sahf
les
sub
cmp
jo
mov
cmpsb
add
jmp
pop
mov
bswap
aad
js
inc
xor
fnstcw
movb
push
insb
arpl
mov
add
jg
sub
ficoml
test
add
add
stc
jae
insb
push
xchg
push
pop
add
sub
lods
rclb
sbb
int
cwtl
xchg
inc
jl
adc
dec
pop
iret
jo
mov
xorb
aam
and
add
pop
rcrl
orl
sub
test
insl
ljmp
das
cmc
pop
xchg
add
call
xchg
pop
sbb
xlat
inc
cmp
stc
jnp
add
push
or
scas
inc
and
mov
fisubl
fadd
add
mov
inc
nop
scas
fcomps
or
inc
fistl
fiaddl
push
add
push
inc
fiadds
adc
mov
inc
out
jns
fwait
rol
or
fistl
or
add
adc
pop
pushf
movsl
cli
jb
and
add
aaa
push
mov
push
xchg
adc
add
cld
flds
push
in
inc
iret
jle
add
notl
inc
xchg
fsubl
pop
add
mov
js
dec
jp
rclb
int3
fdiv
push
ja
fldl
dec
add
pop
lea
add
inc
and
mov
pop
sbb
add
mov
clc
loop
repz
jge
and
pop
sub
adc
sbbl
out
lea
inc
push
loopne
push
loop
or
scas
aaa
inc
and
jp
push
aas
pop
call
enter
add
sbb
add
inc
lret
push
testl
jmp
jecxz
push
or
call
jle
jp
add
and
inc
lret
stos
inc
mov
cwtl
jno
xchg
add
in
popa
push
lock
jmp
inc
sbb
cmp
jg
leave
in
call
sbb
mov
push
popa
jecxz
repnz
cwtl
loop
push
push
add
into
dec
call
scas
mov
mov
xor
mov
rcrb
dec
push
jp,pn
fst
icebp
jge
rorb
loop
fnstcw
lcall
adc
std
clts
sahf
add
test
adc
xor
fiaddl
aaa
push
mull
out
or
pop
lods
add
xchg
xchg
push
adc
pop
add
sbb
mov
enter
add
cltd
nop
leave
cld
in
adc
data16
pusha
sbb
repz
icebp
and
pop
pop
outsb
and
pop
jnp
add
and
andb
or
cmp
aaa
lock
sbb
or
sar
ret
jge
dec
sbb
mulb
movsb
dec
dec
and
xchg
xor
fisttpl
mov
std
shl
daa
add
pop
jge
dec
mov
lret
mov
daa
sqrtps
out
inc
mov
fcom
add
dec
cmp
adcb
adc
xchg
mov
fidivs
adc
xor
mov
sbb
push
and
lock
push
cmovo
adc
std
aam
pop
pop
ret
jmp
pop
push
fwait
arpl
add
push
xchg
inc
sbb
jo
btr
inc
and
mov
push
add
test
cmpsl
ja
push
adc
sub
xlat
mov
mov
pop
dec
cmp
je
jns
jbe
ds
call
or
imul
mov
test
inc
aad
cwtl
or
mov
xchg
mov
out
add
xchg
push
sbb
push
push
cmp
dec
push
movsb
or
aam
mov
cs
sti
imul
mov
push
add
popf
orl
xor
pushf
push
xchg
rolb
add
sub
and
mov
xchg
jae
pop
scas
mov
in
sbb
fadds
mov
into
pmullw
cwtl
jb
mov
je
in
clc
cmpb
adc
mov
lret
mov
popf
lock
int
jp
inc
out
xor
clc
cld
xchg
add
popf
das
cmp
inc
cs
cmp
fdivl
dec
dec
lods
les
pop
andb
inc
in
mov
cld
mov
jmp
jl
add
es
fstpl
sbb
cld
jne
dec
aaa
sar
notb
scas
pop
add
shr
enter
or
test
int
stc
jno
push
dec
inc
dec
add
xchg
decb
cmp
leave
or
cmc
stc
clc
push
cmpsb
add
inc
out
ret
adc
mov
addr16
and
jno
add
jl
add
mov
ja
add
jmp
aad
je
pop
sbb
in
andl
jbe
add
movsb
add
das
repnz
in
or
or
cmp
pop
or
rorl
adc
and
nop
int3
add
ljmp
dec
push
insl
inc
popf
mov
lret
jno
jo
lock
xchg
cmc
add
or
cmp
shrb
or
hlt
jb
adc
scas
inc
mov
xor
aas
rclb
xchg
js
out
negb
add
cld
mov
jge
add
call
xor
add
jmp
cmp
sub
shll
jns
fsubrs
flds
ds
or
mov
aas
add
dec
in
outsb
pop
xor
imul
xlat
xor
pushf
push
loope
mov
mov
dec
fnstcw
frstor
rolb
int
add
les
mov
mov
xorb
fsts
addr16
push
lock
lea
dec
shll
lret
cwtl
pusha
sbb
or
rol
dec
es
insb
add
sbb
ficomps
and
jl
adc
fwait
inc
sbb
pop
or
cs
shl
mov
xchg
mov
pop
sub
or
fiadds
orb
dec
mov
outsl
xor
mov
add
das
adc
add
or
popa
add
lret
mov
add
push
ss
jb
add
rolb
call
vpcmpgtb
add
mov
out
add
pop
mov
loope
mov
xchg
pop
in
dec
mov
test
push
xchg
add
aam
dec
mov
pusha
adc
inc
mov
push
aas
xchg
mov
sub
add
ss
int
adc
mov
lock
in
cwtl
jle
push
dec
adc
xchg
bound
clc
lods
call
mov
es
cmp
add
cmpl
imul
ficoms
icebp
or
or
mov
cmp
ljmp
adcb
inc
pop
adc
add
ret
xchg
sahf
sti
push
pop
mov
mov
and
fdivr
outsl
add
sti
nop
jno
in
out
sbb
or
or
addr16
loopne
add
sub
jne
cmp
sbb
lds
nop
add
cmp
lock
pop
mov
in
cld
aam
insb
and
xchg
test
icebp
in
add
loop
in
lcall
repz
loope
jno
pusha
and
and
pop
push
add
dec
repnz
movsl
push
out
mov
xchg
add
nop
lret
shlb
add
pop
into
jl
or
inc
hlt
ficomps
test
mov
add
fdivrp
and
sahf
ret
aas
mov
jno
push
addr16
cmp
jecxz
repz
mov
ja
push
pop
stc
sub
lods
fcmovb
mov
clc
or
test
push
addl
mov
pusha
fadds
lods
inc
into
sub
pop
dec
fldt
add
add
hlt
cltd
js
mov
into
push
jge
rcrl
mov
ret
dec
cli
jno
stos
inc
inc
xchg
hlt
movsl
jbe
adc
aas
mov
ret
sbb
add
xchg
rcl
bound
push
sahf
inc
push
add
iret
inc
add
mov
inc
nop
mov
add
xlat
mov
inc
push
push
mov
leave
enter
jne
aam
sbb
icebp
pop
enter
jbe
idivb
sub
lahf
cmc
pop
adc
dec
movsl
bound
ss
pushf
jb
add
xchg
jo
add
roll
sub
cmc
jp
mov
sbb
scas
jecxz
fadds
mov
and
adc
daa
push
fadd
addl
or
repz
sbb
in
push
mov
mov
adc
addb
xor
test
jge
jle
sub
jbe
andl
sub
movsl
push
movsb
daa
es
dec
mov
lock
call
and
shrb
push
loopne
sbb
pusha
movb
add
popf
jae
and
test
mov
mov
and
mov
sbb
pop
shrb
leave
add
es
test
mov
int3
xorb
rcrb
shr
and
loope
cmc
push
loopne
sbb
in
mov
inc
jo
xor
add
or
icebp
orl
push
push
in
mov
loopne
mov
xor
sbb
repnz
lret
jp
fsubs
xchg
inc
arpl
adc
out
test
jne
and
mov
sub
lods
jl
add
pop
cli
in
add
test
iret
rcrb
pmuludq
hlt
notl
add
stos
int3
and
add
pop
push
pop
popl
out
lock
call
adc
mov
sub
pop
out
sbb
cmpsl
inc
mov
lds
stc
add
psrad
mov
enter
test
ret
add
fadds
add
mov
sub
adcl
jnp
push
xchg
out
shrb
mov
xchg
test
or
jo
add
call
pop
xorps
xor
fbstp
data16
cs
cmp
ja
test
mov
in
mov
stos
adc
cmp
sub
add
inc
rcrb
xchg
lret
sbb
dec
fwait
or
out
jae
or
out
push
sbb
and
jns
dec
rorl
dec
fiaddl
and
mov
jne
xor
bound
pop
enter
sbb
push
repz
loop
lea
jns
push
out
mov
or
mov
lock
inc
pop
push
int
xchg
push
push
aas
pop
out
insl
adc
mov
mov
mov
xlat
mov
mov
mov
mov
rorl
inc
cli
jg
or
lret
push
adc
pop
in
in
add
mov
call
out
or
mov
mov
nop
test
mov
in
add
jne
add
addb
inc
je
push
dec
pop
dec
aad
mov
jl
mov
sahf
cmp
dec
sbb
adc
sub
xlat
mov
fdiv
jecxz
popf
sub
add
inc
cmp
cmp
bound
sbb
sub
push
or
sub
arpl
inc
mov
fsubs
lods
pushf
jmp
fld
add
jns
pop
dec
lock
out
and
add
push
in
dec
push
mov
ret
pop
outsl
or
jns
xchg
roll
imul
data16
insl
dec
pusha
clc
aas
xchg
lret
sub
and
push
add
leave
xor
and
inc
jnp
je
or
cmp
add
ds
or
jle
add
jno
lds
cmc
jae
pop
fwait
call
icebp
cmp
push
cld
sbb
add
or
dec
sub
pop
mov
add
adcb
dec
incb
inc
add
aas
pop
cmpsb
loopne
pop
imul
lahf
in
add
mov
mov
mov
loope
sub
sbb
inc
and
add
aad
scas
inc
pop
add
xor
test
push
mov
cmp
adc
popa
loop
es
cmp
add
xlat
xor
lock
add
ror
and
cmp
fldt
movsb
fdivl
xchg
jp
icebp
jg
dec
arpl
movsl
mov
sub
pop
in
test
scas
jo
mov
add
test
inc
addr16
push
add
movsl
mov
pushf
cmp
jno
in
movsb
insl
flds
imulb
mov
filds
fidivs
movsl
mov
mov
jp
xchg
daa
lds
fwait
jmp
cmpl
adc
dec
sbb
cmpsb
sti
add
stos
nop
adcl
or
pop
xor
xor
inc
jge
mov
sahf
enter
cmp
or
leave
or
negb
lock
cld
or
addb
mov
add
testl
inc
xlat
in
add
imul
mov
add
rclb
sarl
xor
in
inc
fcoms
fadd
pop
add
lock
push
xlat
repnz
jge
movb
xchg
lret
pop
popf
add
fldt
or
cli
addl
add
movsl
mov
ja
cltd
add
jno
les
idivb
push
andl
cmp
sub
rclb
pop
pop
in
push
lcall
divb
insb
and
xchg
xor
insl
test
popf
loopne
arpl
not
add
cmp
add
xor
pop
sub
repnz
jl
xor
fs
jbe
inc
and
mov
aam
add
lret
pop
in
jo
mov
mov
xor
cmpsb
je
add
cmp
sbb
les
stc
pop
mov
in
mov
sarl
loop
mov
mov
add
stos
mov
int3
add
inc
out
or
sub
adcb
mov
jne
roll
aam
js
inc
sub
aad
ja
lock
mov
lock
outsl
stos
icebp
inc
pop
lret
add
out
lahf
add
clc
das
repz
aad
add
int
cmc
jecxz
cmp
add
test
lods
test
xor
dec
mov
jae
scas
cmp
sub
sub
add
mov
push
push
cltd
cwtl
add
jne
test
cmc
mov
lods
aas
in
aad
inc
test
cmp
je
lds
out
iret
mov
add
xlat
fwait
xor
mov
push
lock
add
sbb
lds
mov
dec
mov
iret
xchg
jb
pop
jg
add
dec
mov
pop
mov
scas
dec
imul
inc
imulb
push
ja
add
popa
stc
cmp
nop
or
push
mov
popa
xchg
push
icebp
lret
cld
push
sub
xor
xorb
push
push
mov
mov
adcl
mov
sahf
adc
das
out
mov
arpl
add
scas
cwtl
inc
cld
stos
inc
mov
movsb
jp
inc
jae
add
filds
pop
ret
mull
mov
and
adc
mov
add
frstor
push
test
ret
add
data16
ljmp
les
mov
cmp
inc
shrb
dec
mov
xor
popf
movsb
loopne
add
aas
repnz
jno
testl
sbb
mov
add
mov
pop
jg
add
adc
jns
int3
fldl
sbb
inc
repnz
pop
je
add
mov
cmpsb
scas
add
cmp
js
loope
mov
sub
lock
aam
sbb
mov
or
pop
sbb
cmp
adc
push
cltd
adc
mov
ljmp
pop
sub
shll
imul
fsub
popa
jo
rolb
xorb
fwait
push
je
inc
rcrb
inc
into
fs
add
lock
adc
in
pop
jnp
dec
pop
pusha
lds
add
mov
add
call
ja
mov
es
lcall
jno
or
insl
pop
addb
xchg
add
xchg
idivl
cld
cmp
mov
or
das
mov
mov
mov
pusha
gs
mov
xor
imul
jl
add
or
fs
icebp
and
xchg
add
pop
xor
pop
sbb
fsubl
jo
pusha
sub
jne
andl
or
js
push
pop
imul
sub
les
xor
in
pop
xchg
inc
ja
imul
jb
and
aaa
add
jbe
mov
cmp
add
jo
and
lea
insb
sbb
loop
lods
hlt
add
cmpsb
fs
xchg
jb
rolb
add
xchg
inc
add
ljmp
popf
sbb
dec
fcmovnu
enter
adc
pop
mov
fildll
mov
sub
add
push
flds
mov
adc
rcrl
inc
rolb
pop
outsl
push
or
sub
mov
enter
fldl
inc
push
add
dec
dec
pop
pop
lock
inc
sbb
and
add
dec
lahf
mov
les
add
fisttpl
sbb
push
lahf
vshufps
sbb
pusha
add
scas
and
pop
jg
movl
inc
decb
and
ret
push
ljmp
add
pop
pop
add
leave
mov
add
js
pop
add
shrb
aam
add
stc
in
jecxz
add
popf
jnp
sbb
aaa
rcrb
add
and
and
ret
sub
cmc
sub
insl
js,pn
jno
add
inc
loopne
mov
push
xchg
je
adc
mov
aam
add
sbb
fs
daa
cmp
dec
xchg
popa
cwtl
pmullw
sub
jo
mov
ljmp
cs
add
or
jmp
addr16
rolb
fdiv
in
cmp
add
pop
mov
jo
add
dec
jl
inc
out
adc
jo
cmp
jg
sbb
cwtl
jno
and
scas
push
add
in
sub
mov
pop
dec
push
filds
in
jnp
cmp
xchg
mov
pop
sbb
mov
push
xor
divl
bswap
lock
pusha
mov
adc
add
jb
sahf
push
mov
mov
jnp
fidivrl
add
out
hlt
xchg
std
test
out
lcall
add
and
add
repz
add
mov
daa
sub
and
add
nop
fmuls
cmp
aam
add
pop
inc
sub
in
stc
sub
jmp
mov
add
xor
cli
add
inc
loop
add
add
or
mov
cli
aam
mov
dec
jp
pop
push
es
insl
shlb
add
clc
and
xor
hlt
jl
dec
cmp
ss
or
and
xchg
xor
adc
pop
jle
mov
scas
inc
pop
mov
repnz
add
outsl
in
test
mov
mov
add
pusha
sub
inc
add
mov
xchg
add
mov
aam
aad
and
add
or
dec
jne
dec
in
xchg
add
subb
inc
xor
jno
add
dec
xor
call
outsl
bound
pop
xchg
pusha
push
cmpsl
push
fldenv
pop
addr16
stos
sub
xor
push
jo
add
cmp
or
cmp
stos
pop
sub
in
xor
adc
or
mov
mov
add
xor
add
dec
mov
leave
or
and
jp
inc
cwtl
nop
add
rorb
cmpsb
jge
iret
sbb
jnp
je
pop
xor
dec
add
xchg
mov
and
add
pop
add
xlat
aas
mov
add
jo
push
add
shrd
pop
mov
push
or
in
dec
in
popf
add
cmp
lds
clc
cmp
rorb
mov
cli
push
and
test
ljmp
sub
add
mov
outsb
pusha
and
add
mov
dec
mov
sub
cmp
add
adc
mov
add
outsl
loope
mov
shll
add
or
cmp
jle
push
mov
cmp
pusha
ret
fiadds
add
cmpl
xor
jg
stc
mov
push
ret
scas
mov
cmp
icebp
mov
adc
mov
les
mov
pop
sbb
ss
mov
lods
leave
sbb
add
adc
or
dec
sahf
test
mov
jecxz
adc
mov
adc
xchg
push
or
mov
add
xor
adc
stos
mov
cmp
and
push
pop
sub
popf
add
cmp
xorb
mov
sbb
add
daa
movsb
incb
pop
fsubrp
push
insl
xchg
outsb
mov
adcl
add
add
mov
rol
leave
add
hlt
pop
jno
in
test
pop
mov
add
inc
enter
jb
add
jno
inc
xchg
inc
nop
lds
sbb
dec
mov
repz
bound
inc
and
cmp
add
outsb
sub
inc
arpl
stos
add
push
aad
enter
or
lock
add
jo
xchg
add
sbb
add
jno
or
out
nop
jb
push
call
dec
in
loope
push
scas
adc
cmpb
cmc
push
xchg
cmp
mov
repz
jae
movsb
inc
add
add
adc
xchg
mov
les
xchg
test
sbb
movsl
or
jo
rcll
xchg
xchg
je
push
fneni(8087
cmp
and
jbe
add
imul
sub
push
xor
jge
xlat
xchg
pop
std
adc
shlb
aaa
ret
cmc
add
ja
addl
or
in
fwait
test
sbb
mov
insl
stc
jb
loop
cmp
add
pusha
shlb
push
mov
pop
sbb
mov
pop
ljmp
test
and
add
ljmp
in
and
mov
lock
push
add
mov
jl
push
jae
adcb
adc
mov
test
jle
add
icebp
dec
mov
inc
sbb
mov
ja
mov
unpckhps
cmp
sub
incl
add
jae,pn
stos
sub
and
and
add
pusha
pop
cmp
xchg
lock
insb
leave
das
add
pop
mov
mov
fwait
out
sub
iret
das
add
incl
or
leave
mov
pop
mov
ret
or
test
divl
add
sub
mov
pop
jmp
mov
lcall
lret
push
add
pop
in
enter
pusha
mov
and
cld
xlat
fnstenv
out
fsubrs
pushl
or
mov
add
add
mov
jle
pop
aam
subb
and
std
repz
xor
adc
sub
adc
or
out
or
call
add
test
adc
fisttps
loope
pop
jnp
fcom
in
push
add
loop
dec
xorl
cld
pop
or
sbb
pop
lahf
out
pop
mov
xlat
repnz
pop
enter
pop
xchg
sbb
inc
aaa
pushf
in
addl
out
mov
add
cwtl
inc
lods
mov
sbb
jne
roll
mov
mov
in
mov
sbb
cmpb
pushf
outsb
insl
xchg
pop
incb
sub
push
dec
test
pop
and
rcrb
inc
pusha
loop
mov
cmp
or
sti
addr16
jb
movsl
aas
pushf
cltd
add
in
shrl
enter
int
fnstsw
es
sub
les
stos
add
fistl
sbb
add
lock
add
add
push
insb
mov
push
repz
test
inc
dec
add
cmpsl
sub
adc
mov
mov
gs
dec
cmp
pop
stos
lcall
jns
xlat
subl
addl
sbb
xchg
cmp
sbb
ds
add
sub
fdivs
insb
sub
mov
aad
lock
xchg
mov
lahf
daa
sbb
pop
push
pusha
sbb
xor
cmp
adc
dec
sbb
sbb
rolb
mov
loopne
inc
push
sahf
popf
in
adc
adc
mov
xchg
add
pop
push
sub
out
shr
sbb
adc
mov
fadds
xor
adc
add
iret
in
pop
ficompl
add
xchg
nop
fnstenv
add
pop
fdivr
dec
pop
movsl
fiadds
pusha
in
add
adc
divl
inc
adc
sub
add
repnz
cmp
xor
imul
pop
in
ret
mov
lds
sbb
push
push
bound
and
jo
inc
sbb
pusha
call
pop
mov
stc
lods
dec
pop
sti
shl
popa
sahf
es
out
and
push
inc
ss
inc
loopne
pop
movsb
pop
xchg
adc
or
dec
sub
sbb
loopne,pn
dec
cmp
xchg
add
pop
stc
push
imul
hlt
push
ja
add
dec
dec
mov
mov
push
addl
in
jb
add
sbb
repnz
and
pop
pop
call
notl
sbb
pop
das
and
stos
je
bound
add
cmp
push
rorb
or
in
mov
aam
add
mov
mov
jl
ja
jmp
xor
stos
pop
lcall
or
or
icebp
add
mov
adc
cmp
dec
mov
mov
inc
inc
cmp
cltd
add
ficoms
rorl
xor
mov
popf
cwtl
dec
adc
inc
arpl
cmp
rcl
mov
adc
test
pop
movsl
pop
add
inc
jl
push
pop
add
add
and
mov
pop
add
arpl
lock
ja
andl
arpl
mov
testl
jne
push
add
xlat
int3
add
mov
add
jae
imul
push
js
movb
xor
or
and
and
push
mov
pop
push
idivb
and
andb
xchg
mov
out
mov
inc
and
or
mov
dec
cli
or
mov
les
inc
inc
mov
add
test
mov
mov
repnz
iret
loopne
rorb
divl
fs
mov
sbb
hlt
and
jne
mov
sahf
and
mov
nop
jne
pop
ljmp
fnsave
fistl
stos
mov
sbb
add
shll
outsb
std
jl
add
xchg
mov
lods
add
cmp
add
mov
insb
push
shll
add
scas
in
add
outsl
in
jae
and
adc
in
mov
pop
push
scas
mov
ret
loop
add
xchg
ljmp
push
jp
scas
mov
ret
xchg
pop
fldl
adc
push
or
cs
add
in
lret
add
sub
xor
outsl
or
jle
rcrb
cmp
je
add
mov
pushf
js
scas
jge
out
push
add
dec
add
inc
and
mov
lds
fwait
mov
cmp
xor
out
arpl
sbb
test
sbbb
fsubl
add
arpl
mov
cmp
jns
mov
push
aam
add
jo
ja
rcll
dec
pop
sbb
rolb
xor
xchg
repnz
popf
sbbb
arpl
add
mov
cmpsb
xor
cmpxchg
pop
adc
pop
rcl
add
jbe
mov
xor
inc
jno
add
js
pop
hlt
sbb
jmp
fisttpl
loopne
fiadds
loope
xchg
fadd
insb
dec
add
mov
xchg
das
fildl
push
lcall
addr16
mov
lock
pop
xchg
sub
sub
and
lahf
xchg
inc
adc
cmp
add
sbb
pushf
lock
lret
nop
dec
sbb
ss
add
icebp
lret
push
mov
push
lds
outsl
mov
inc
faddl
aas
pop
xchg
je
lret
xor
loopne
cmpsl
xor
inc
lret
loop
mov
add
mov
xor
push
and
insb
test
xchg
and
pop
push
push
inc
sub
mov
xor
lods
jg
add
add
cmp
sbb
cmp
mov
or
cmp
pop
jb
call
sbbb
sbb
add
imul
push
sbb
testb
mov
push
add
mov
jg
std
pop
cmp
mov
movsb
mov
add
mov
psadbw
cmp
jg
repnz
lds
out
mov
das
add
and
add
or
lret
mov
xchg
mov
repz
dec
cltd
inc
test
push
pop
fists
inc
sbb
inc
call
mov
hlt
or
sbb
shlb
add
and
add
mov
push
cmc
xchg
stc
lcall
cs
add
add
mov
cmp
fistpl
pusha
mov
lock
dec
out
mov
or
cmpsb
add
fwait
mov
jo
mov
mov
push
lcall
mov
fildl
add
sbb
and
add
mov
cmp
les
add
jnp
popa
sti
leave
add
or
lretw
call
rolb
add
aam
ror
mov
sar
sbb
outsb
sub
add
mov
lock
xchg
xor
adc
mov
inc
sbb
data16
jb
out
popl
xor
adc
sbb
pop
fwait
add
push
cmp
mov
xchg
add
push
clc
pop
in
add
mov
dec
add
scas
std
jns
or
add
xor
cmpb
add
loope
ret
les
or
cmp
add
int3
or
mov
psubsb
test
inc
or
mov
outsl
add
or
jg
aas
stos
movsl
insb
jle
pop
mov
loopne
xchg
sbb
xchg
icebp
add
dec
and
jae
mov
push
mov
call
mov
add
outsl
rcl
cmp
inc
inc
cs
add
pop
lcall
inc
hlt
mov
aam
cmovg
pusha
mov
test
add
ljmp
inc
test
adc
out
pop
or
add
jbe
leave
jns
pushf
push
pusha
int3
inc
adc
js
cmp
xchg
push
add
xor
mov
jo
mov
or
fimull
lahf
rclb
sub
mov
mov
add
cmp
jo
or
cli
mov
lea
sbb
add
repz
adc
and
add
dec
jno
andb
loope
sarb
push
inc
pop
push
loop
dec
out
cmpsb
add
xchg
aas
repnz
sub
add
adcl
jl
testb
icebp
sub
in
popa
add
sbb
jmp
aad
xor
xchg
add
cmpsl
stos
inc
adc
jmp
bound
data16
in
aas
xchg
add
mov
jo
icebp
jns
inc
and
and
jg
mov
dec
jle
aas
lea
incl
xchg
out
cmpsb
dec
inc
mov
imul
fldlg2
sub
or
mov
add
xchg
add
mov
out
cmp
or
cmpsb
push
orb
in
inc
into
cmp
pusha
icebp
mov
xchg
inc
lcall
jl
adc
and
dec
aaa
je
call
sbb
sub
jbe
adc
lahf
push
std
and
loope
pop
sub
rcrl
jl
cmc
andb
sub
sbb
pop
dec
sbb
aad
push
push
leave
xchg
adc
out
add
sbb
mov
cltd
mov
mov
sbb
push
xor
add
aam
ret
add
pushf
out
xchg
sbb
xor
adc
repnz
stos
aas
iret
xor
lahf
add
pushf
les
jno
add
cmp
push
xchg
mov
push
add
pop
jns
scas
and
ror
test
or
ljmp
and
lea
push
jnp
inc
xor
add
fdivr
ret
scas
add
pop
push
pop
fcomi
inc
das
andb
and
mov
lcall
mov
call
push
jo
dec
xor
aam
xor
mov
imul
mov
add
in
xor
lahf
jl
fisttps
ret
into
in
add
imul
add
lock
jbe
mov
mov
insb
add
and
pop
sahf
jae
pop
push
ret
test
loopne
mov
or
and
mov
test
cltd
push
add
fistps
cmp
inc
add
and
cmp
cld
popa
jle
sbb
adc
add
xchg
mov
xor
add
into
push
mov
aad
test
rolb
and
pusha
popf
or
cmp
push
or
xor
nop
scas
jmp
sbb
push
jae
and
movsb
sti
jae
add
or
pop
xor
and
add
repnz
filds
jmp
scas
push
xor
xchg
jne
jo
add
lock
adc
add
imul
pusha
jo
ss
dec
mov
arpl
rcrb
mov
or
insb
call
sub
pushf
jae
add
mov
lret
das
les
push
subps
or
into
in
xchg
jne
lret
xor
jb
pop
xor
hlt
cmp
enter
pop
xchg
popa
adc
mov
jp
add
cld
ljmp
pop
dec
mov
pop
test
mov
jb
popa
icebp
push
mov
push
nop
loope
js
cmpl
xchg
clc
pop
mov
pop
and
inc
jl
enter
push
or
add
repnz
mov
icebp
adc
sbb
aas
movsbl
xor
lret
clc
add
dec
hlt
dec
data16
xor
call
test
mov
leave
add
subb
mov
add
pop
jno
es
fcomps
test
test
loopne
and
sti
push
push
pop
cmpsl
stc
cwtl
lret
iret
data16
cmp
mov
rolb
insl
add
imul
test
fldcw
add
iretw
mov
cmp
popl
or
leave
mov
add
fstl
xor
test
sbb
xor
and
ret
cmpsb
add
enter
jmp
xchg
adcl
loope
shlb
testl
int3
and
or
jo
cs
in
xor
out
ljmp
pop
push
loope
in
jb
cmp
jae
inc
bound
gs
ror
fs
add
adc
jnp
movq
and
jbe
add
outsb
inc
jmp
xor
push
pushf
push
test
push
push
or
frstor
icebp
mov
jns
aam
add
leave
push
scas
add
dec
add
mov
sub
cmp
mov
fadds
add
and
push
dec
sub
push
sbb
and
inc
xor
inc
sbb
adc
ja
cmp
jne
and
dec
mov
inc
aaa
nop
cmp
out
ret
jmp
cmp
jmp
xchg
mov
inc
pop
mov
in
ret
jmp
or
jne
test
add
cltd
inc
cli
dec
add
repnz
call
mov
add
ret
aad
and
sbb
int3
movsl
xchg
popa
xor
in
dec
mov
stc
mov
negl
push
into
imul
sub
xchg
cmp
and
mov
fmuls
dec
pop
add
std
shll
lods
inc
scas
jecxz
pop
popf
adc
sahf
dec
mov
push
mov
mov
sub
cmp
in
js
or
sarb
popf
jbe
dec
or
ljmp
popa
pop
xchg
xchg
xor
xchg
jmp
in
addb
adc
mov
inc
ror
inc
and
and
ljmp
and
arpl
and
cmc
ficompl
mov
sarl
in
add
jl
movsb
nop
and
mov
pop
insl
push
add
lea
lods
lret
rclb
mov
xorb
ljmp
ss
cmpb
shlb
push
xor
mov
data16
lds
push
fsts
sub
add
inc
jmp
out
add
es
pusha
pop
or
push
shrl
in
push
mov
xor
adc
loopne
mov
xchg
shrb
in
inc
xchg
inc
inc
cmp
push
nop
arpl
shlb
int3
pusha
testb
add
pop
sbb
out
pop
add
clc
inc
lods
xchg
mov
pop
sbb
loop
add
sub
mov
or
loopne
fs
cmp
cld
fwait
xor
mov
ret
xchg
push
leave
lods
jmp
and
push
push
mov
pop
dec
pushf
mull
or
sub
and
cmp
insb
add
mov
lret
mov
rolb
icebp
mov
mov
and
in
pop
mov
fdivrs
jmp
sbb
mov
sbb
aas
daa
add
push
push
in
testl
and
cld
inc
imulb
pop
push
cmp
xchg
xchg
and
adc
dec
or
jne
stc
inc
inc
shrb
adc
add
sub
pop
test
leave
fisttpl
add
fistps
cwtl
in
ljmp
mov
shrb
xchg
push
sbb
lcall
imulb
or
sahf
jmp
notl
push
ja
addb
jle
mov
push
movsb
and
sub
push
sarl
and
xor
mov
es
das
push
cmpl
inc
add
ret
insb
xor
int3
xor
xchg
add
insb
decl
adc
xchg
push
mov
call
mov
xchg
cmp
xchg
jne
lds
and
cmp
sbb
mov
or
pop
xor
push
mov
add
shl
cs
sbb
es
mov
xchg
sbb
fsubs
cmp
cmpsb
push
repnz
push
stos
add
inc
sbb
in
xor
mov
jg
scas
mov
jnp
mov
xor
fmuls
mov
mov
and
sarb
xchg
and
dec
imul
pop
pop
mov
sbb
mov
mov
dec
xor
mov
mov
mov
test
pop
mov
insb
mov
arpl
dec
pusha
out
push
mov
das
sarl
in
jbe
and
test
jae
mov
jne
mov
inc
nop
lods
mov
and
ss
dec
adc
add
clc
jl
in
adc
ljmp
and
testl
push
jno
inc
add
dec
and
out
and
scas
or
add
leave
mov
pop
xor
enter
mov
or
inc
sbbb
in
lcall
pop
test
pop
mov
sub
shlb
lcall
add
pop
cmp
push
mov
fisttpl
jp
jno
sbb
inc
adc
gs
jns
cmp
cwtl
clc
mov
out
inc
mov
adc
and
add
cmp
mov
mov
mov
and
adc
ss
dec
or
pop
jne
xchg
pop
xor
add
stos
cmpsl
xor
and
inc
mov
inc
imul
sub
test
das
ret
sbb
and
jns
push
lret
or
dec
and
sbb
adc
repnz
jno
jo
je
jne
test
pop
idivb
add
insb
out
imul
lret
xor
xchg
jge
xor
inc
int3
mov
add
pop
or
or
xchg
in
mov
pop
nop
jg
sbb
adc
add
repnz
push
sub
or
jmp
xchg
and
and
repnz
add
bound
mov
add
enter
mov
dec
mov
xlat
rcl
mov
mov
pop
xchg
out
sbb
in
jmp
lcall
mov
lds
inc
sti
lods
out
sbb
in
inc
lret
cmpsl
int
sub
and
push
add
push
push
movsb
mov
sub
adc
daa
mov
popa
push
pop
lods
mov
sbb
pop
ja
test
mov
inc
fimuls
js
test
adc
xchg
mov
in
sub
es
pop
mov
cmp
push
or
mov
mov
mov
lahf
mov
int
adc
ljmp
mov
add
xor
inc
mov
sbb
ds
cs
or
into
icebp
mov
cmp
pushf
cld
cmpb
mov
jl
push
xorl
sub
jmp
add
andl
add
dec
jp
mulb
push
dec
andb
dec
jmp
dec
cmp
xor
je
add
jmp
add
fcom
in
in
pop
sahf
adc
and
fisubl
sub
call
jge
int3
sub
mov
inc
repz
ljmp
xor
pop
aad
rcrb
jl
sub
popf
sub
jle
mov
adc
jecxz
adc
popa
movsb
inc
call
nop
inc
add
enter
je
push
add
jmp
test
mov
mov
in
imul
into
enter
jg
out
mov
fcoms
aaa
xor
test
out
mov
shl
mov
mov
test
aam
mov
push
cld
xchg
mov
jp,pn
shrl
rorl
ja
and
cld
pop
mov
rclb
fs
cltd
fadds
xchg
push
inc
cmp
popa
out
mov
push
nop
sub
mov
std
lret
sbb
dec
sahf
loopne
mov
add
push
push
das
rolb
push
and
movsb
pusha
gs
rorb
xchg
xchg
cmpsl
and
test
inc
outsb
adc
pop
push
cwtl
pushf
adc
cmp
fs
add
movsb
dec
inc
mov
les
xor
inc
es
adc
push
mov
mov
sub
or
push
leave
dec
sarb
inc
lea
inc
popf
scas
inc
or
into
fmull
pusha
xor
stc
jnp
mov
add
adc
inc
lahf
dec
les
cmp
int
je
testb
mov
push
enter
fstpl
lret
pushf
test
fsubr
push
pop
stos
push
and
lods
mov
add
sub
jae
jo
stc
sub
filds
mov
mov
fdivrp
loope
lods
mov
sub
or
xor
test
pop
mov
mov
repz
outsb
sub
mov
addr16
push
std
push
push
and
mov
pop
sbb
jmp
dec
pop
enter
add
add
dec
mov
xchg
fisubl
daa
fistpl
xor
stos
cmp
testb
xchg
fucom
shrb
aam
pop
jb
dec
jmp
in
and
pushf
bswap
loope
sub
inc
add
jne
sarb
xchg
or
and
cld
jl
gs
or
pusha
lods
jae
or
cwtl
cmpb
sti
add
adc
movsb
cwtl
dec
mov
dec
jge
cmp
fwait
sbb
inc
pushf
mov
test
add
mov
sahf
jne
push
cmp
jmp
dec
xor
xchg
dec
lock
add
jnp,pn
jbe
jecxz
scas
mov
jl
pop
cs
out
popa
incl
sar
xchg
push
sub
mov
sbb
pop
mov
fisttps
pop
sbb
add
cmpsl
or
adc
ret
xchg
loope
dec
sahf
ds
pop
stos
inc
xor
dec
or
jne
pusha
pop
fwait
mov
mov
int3
or
aas
aam
inc
jmp
leave
adc
mov
or
pop
pop
pusha
jo
es
add
inc
inc
int
cmpsl
xchg
xor
mov
jne
mov
jno
xchg
repnz
pop
mov
jle
sbb
dec
ret
pop
ret
aaa
mov
mov
cld
sub
jmp
jno
dec
nop
lods
mov
stc
inc
inc
incl
mov
aaa
mov
sbb
rol
lock
add
xor
mov
out
sbb
and
mov
sti
cwtl
or
fcoml
pop
xchg
jge
pop
fdivs
mov
jnp
pop
pop
shll
xor
loope
cmpl
jae
or
loopne
lds
mov
popl
adc
lret
and
mov
pop
add
movsl
js
inc
rcrb
mov
daa
and
push
pusha
cmp
ja
mov
mov
xchg
pop
rcll
and
mov
test
cmp
pushf
loope
int3
adc
push
rcr
xchg
notl
cwtl
cmp
xchg
sbb
sbb
mov
adc
add
leave
adc
stos
add
ficompl
lods
xorb
daa
mov
sbb
mov
sbb
fwait
hlt
xor
das
sub
addl
mov
mov
clc
adc
enter
lret
lahf
mov
add
xor
repz
bts
push
mov
jo
push
fs
dec
add
mov
les
inc
sub
push
sbb
rcl
mov
jns
into
cmp
aaa
nop
mov
cmpsl
mov
xchg
add
and
idivl
orb
add
mov
push
ja
je
mov
mov
sub
and
jb
test
mov
loopne
fwait
adc
and
imul
mov
test
dec
mov
mov
ds
nop
sub
mov
sbb
add
and
add
lds
add
mov
add
and
or
rol
cmp
ja
aam
mov
mov
inc
sbb
les
lods
jmp
mov
lea
subb
sub
mov
and
rorl
ror
sub
add
outsb
xchg
lods
bound
dec
test
inc
push
sub
jg
sbb
mov
sub
mov
in
loope
add
add
pop
sbb
and
out
in
mov
lods
pop
jl
mov
cmpsb
fstpt
cli
cmp
inc
faddp
call
push
scas
fbstp
scas
shll
adc
pushf
xchg
mov
push
cld
mov
jo
add
enter
add
dec
leave
dec
dec
cmp
xchg
push
inc
stos
stc
sbb
or
imul
and
enter
je
xor
outsl
lock
mov
shlb
push
clc
xorb
xor
sub
add
rep
outsl
test
and
xor
add
cmc
jmp
movsl
popf
cltd
int3
add
lcall
bound
outsl
dec
ja
xor
jne
rolb
jl,pn
xchg
test
add
rcl
repz
sub
insl
push
call
lods
es
outsb
pop
sub
ljmp
pusha
int3
jmp
push
imul
xchg
add
iret
cmpsl
fiadds
cmp
dec
inc
sub
pop
jb
dec
adc
xchg
in
sbb
mov
in
movsl
jno
sarl
and
or
mov
shlb
stc
add
jno
and
mov
negl
add
mov
dec
push
loope
add
or
aaa
pop
sbb
mov
rolb
loopne
xor
cmp
addb
enter
in
roll
add
inc
cmpsb
push
out
add
sub
cmp
add
or
sub
movsl
lcall
inc
mov
insl
jg
shr
add
in
adc
mov
dec
iret
xchg
push
lock
les
jnp
mov
cs
clc
imul
mov
shrl
decl
scas
mov
jbe
jmp
lret
sbb
js
mov
xchg
dec
shrl
fstl
add
cmp
fs
icebp
shll
dec
jmp
cmc
test
ss
pushf
pop
scas
aam
add
push
subb
stos
inc
jmp
popf
sub
imul
jecxz
cmp
rorb
addr16
cld
xor
push
sahf
jne
jno
mov
jnp
inc
mov
add
test
icebp
adc
pop
pop
test
add
sbbl
out
mov
xorb
mov
ds
imul
add
fmul
sbb
xchg
push
dec
outsl
sbb
hlt
aam
mov
inc
jo
push
notl
mov
pop
or
xchg
xchg
stc
xor
imul
clc
and
aaa
jo
mov
ret
jge
pop
xor
dec
mov
push
mov
les
loope
lds
adc
repz
sub
dec
mull
sbbl
loop
dec
mov
inc
cmp
loope
movsb
dec
es
faddl
ret
aad
mov
mov
ret
das
sbb
cmp
xor
lret
and
cmp
outsl
sti
add
stos
mov
lret
mov
pop
sbb
sub
pop
stc
shl
add
out
arpl
daa
dec
shrb
adc
jmp
lock
adc
mov
inc
and
push
xor
and
dec
popf
cmp
pushf
cmp
pop
mov
lret
jl
jl
filds
clc
test
push
or
xchg
mov
inc
xchg
das
sub
push
pusha
mov
cmpsl
pusha
dec
dec
add
xor
add
sub
call
add
ret
aas
test
cmc
hlt
das
gs
sbb
mov
aaa
adc
clc
fcoms
add
pop
fisubs
test
add
push
cltd
dec
int3
js
add
mov
push
fcoms
fistpll
jg
xchg
imul
dec
push
push
mov
popf
push
inc
loopne
fisubl
jno
push
push
lahf
pop
lds
lock
xchg
jb
mov
cmp
out
aas
mov
pusha
add
mov
mov
dec
ss
pushf
add
aad
fwait
jnp
mov
add
out
in
das
jb
mov
enter
jo
jecxz
cld
in
je
xchg
mov
inc
addb
mov
enter
cmp
arpl
cmc
and
les
daa
push
xor
test
and
mov
mov
push
inc
mov
xor
jo
jbe
rolb
negl
test
mov
dec
shrb
push
add
and
pop
lock
clc
add
shlb
jo
jle
add
xchg
mov
outsl
inc
stc
jmp
outsb
dec
adc
clc
call
sub
lret
mov
cmpsb
je
sbb
fidivrl
inc
cmc
loope
mov
mov
pop
lds
and
pushf
pop
pushf
dec
dec
pop
add
xor
jg
add
dec
ds
pushf
andb
jl
pusha
ret
pop
adcl
fisubrl
idiv
addl
push
xor
int
in
ret
inc
leave
and
test
jae
xchg
js
addr16
push
inc
mov
cmp
cmp
adcb
shll
aam
nop
add
lahf
cli
repz
or
lock
dec
xchg
scas
add
and
rcr
pop
add
fsubrl
push
add
push
aad
loope
je
inc
mov
pop
mov
xor
dec
mov
aas
cltd
sbb
mov
pop
data16
aam
sti
cltd
mov
movsl
shll
add
mov
rolb
xor
xor
pusha
xchg
push
loopne
and
push
enter
ja
pop
inc
add
das
mov
xor
scas
add
sub
js
mov
jmp
sbb
out
inc
and
adc
dec
pop
cltd
orb
daa
addl
adcb
xor
cmpsb
dec
fnstsw
mov
dec
push
mov
sbb
xor
add
and
cmp
mov
mov
test
dec
stos
xorb
pop
or
push
jbe
sub
pop
lahf
out
es
repz
cmp
cmp
fadds
sbb
aam
sbb
sbb
xchg
add
pushf
stos
sub
gs
cmp
rol
xchg
add
lret
cmp
inc
nop
lock
and
xor
shll
push
add
movsl
add
mov
add
mov
cs
jge
nop
mov
add
dec
mov
mulb
arpl
addr16
and
jno
or
ds
pop
or
cmpsb
xchg
outsl
xchg
nop
inc
daa
shlb
into
xor
adc
mov
xchg
xchg
dec
and
mov
or
dec
inc
lods
jb
cld
sub
add
push
sub
push
push
dec
fistl
and
js
mov
or
sub
ljmp
add
mov
and
adc
int
imul
adc
xchg
pop
out
mov
cltd
hlt
pop
add
dec
sub
hlt
cmp
loopne
fs
mov
push
int3
lret
and
sbb
cmp
jo
divl
add
adc
or
lea
add
and
dec
xor
cmp
mov
into
test
pusha
clc
in
sbb
out
add
xor
cli
mov
inc
stc
jmp
push
adc
es
pop
stos
mov
and
dec
pop
out
add
int3
mov
test
cs
adc
fdivr
sbb
jno
ljmp
add
push
mov
and
fs
push
outsl
and
lea
sub
cmp
inc
mov
pop
inc
and
test
inc
lods
cmp
inc
dec
je
jmp
add
pop
jne
mov
and
push
cmp
mov
push
pop
jmp
nop
fwait
or
inc
cwtl
and
xchg
rclb
pushf
mov
pop
popa
add
jno
lods
cmp
loop
add
mov
sbb
arpl
add
adc
jae
or
mov
xchg
stc
lods
pop
sub
add
and
orl
icebp
jge
arpl
pusha
push
rorb
clc
xchg
push
cs
mov
mov
jl
pop
xlat
push
faddl
scas
add
jg
mov
add
mov
cmpsl
lock
rorb
cmp
daa
les
ret
lods
dec
xor
mov
mov
pop
imul
and
pusha
sbb
mov
lea
ljmp
jb
je
lret
inc
inc
movsb
cmp
mov
cmp
inc
fists
call
mov
and
sub
sbb
sub
mov
out
dec
dec
mov
shl
js
shl
mov
and
sahf
add
insb
in
pop
bound
jo
data16
loopne
pop
mov
addb
popa
mov
sub
pop
nop
or
pop
cmp
dec
loopne
cli
ss
pop
push
jp
dec
test
or
enter
ret
popa
mov
or
andb
addr16
std
mov
mov
xorb
insl
push
in
mov
push
add
andl
fcoml
mov
insl
xchg
push
jl
imul
sbb
clc
jno
jae
mov
mov
and
outsb
adc
shlb
cli
jge
add
sti
push
xchg
repnz
lahf
add
dec
fistl
cmp
jmp
add
pop
xchg
sti
sbb
addl
in
js
push
adc
or
mov
shll
cs
int3
inc
fcoml
orb
fbstp
divl
xchg
jg
fcomp
adc
cmp
notl
add
outsl
mov
adc
loopne
adc
and
nop
sub
enter
xchg
std
neg
sub
rcll
inc
movsb
pop
mov
add
out
add
xchg
xchg
inc
cmp
push
dec
shrb
or
std
pop
add
and
loopne
push
xor
ljmp
and
test
ret
clc
fiaddl
jg
jmp
or
cmp
lods
pusha
adc
push
stos
test
jmp
sbb
xor
or
fldt
test
dec
xchg
jns
add
xor
movsb
xchg
popa
push
mov
or
push
mov
lcall
bound
and
or
xor
lods
adc
add
mov
add
sub
cltd
shlb
sbb
cmp
stc
and
xor
sbb
inc
jge
mov
add
inc
mov
sahf
cmp
in
call
nop
lock
aaa
call
mov
add
and
sub
in
dec
jnp
fadds
mov
inc
add
cld
nop
jp
mov
xchg
or
sahf
lret
cmp
lock
mov
loopne
cmp
nop
mulb
and
add
xchg
stos
mov
mov
lea
lock
leave
outsl
rcrb
push
mov
add
mov
cwtl
outsl
jle
fs
add
mov
lock
add
sub
mov
mov
pop
sarl
jg
add
mov
dec
pop
daa
jmp
fs
pop
mov
add
into
jns
push
rcrb
jo
pop
push
dec
adc
mov
cwtl
in
jl
mov
nop
pop
leave
cmp
enter
lret
and
jnp
xor
loop
jge
jmp
out
mov
mov
jmp
inc
out
bound
in
adc
pop
add
mov
add
add
out
fstpl
add
pusha
mov
mov
push
imul
test
int
jmp
add
pop
addr16
arpl
int3
cmp
add
vpcmpd
cli
rorb
push
push
or
test
pop
jmp
es
jg
lret
push
imul
lea
cmp
add
je
test
cwtl
hlt
test
xor
sub
mov
xchg
std
stos
xor
repnz
jno
daa
test
jne
pusha
push
and
cmp
bound
dec
inc
fsubs
sarl
sahf
add
ljmp
stos
jno
imul
adc
mov
shll
fldl2e
inc
mov
mov
push
mov
clc
nop
sub
sub
cmp
xor
adc
dec
fmul
je
cld
ror
cmpsl
iret
shlb
or
pushf
push
out
cld
pop
jle
nop
add
in
aas
lods
xchg
pop
and
test
jp
pop
inc
sub
adc
loop
add
jns
fs
push
add
dec
jecxz
sbbl
mov
jl
adc
sar
mov
sbb
add
inc
es
sahf
out
imul
sbb
cli
fildl
stos
add
jae
mov
loope
cld
inc
data16
sub
cmp
je
add
aaa
bound
lahf
xor
pushl
clc
mov
scas
adcb
xor
fmull
jmp
mov
les
and
add
or
pop
and
dec
inc
sub
mov
sub
or
ja
cmp
cmp
add
mov
inc
jl
movsb
cld
enter
lods
and
mov
pop
es
xchg
int
inc
pop
insl
add
ss
aaa
shl
loopne
push
out
jns
mov
lds
sub
fiadds
sarl
mov
dec
cmp
subb
push
cmp
xorb
hlt
in
lock
test
divl
add
adc
and
stos
dec
cld
pop
pop
dec
sub
fs
add
sbb
cmp
pop
and
addr16
ficoml
pop
jl
push
cmpsb
enter
call
int3
cmp
mov
jno
das
and
xor
test
add
in
pop
enter
mov
flds
fsubl
mov
out
rcrl
sbb
mov
pop
jbe
call
sbb
cmp
cmp
xchg
xchg
mov
dec
mov
xorb
dec
xchg
pop
sub
xor
cwtl
arpl
mov
or
fisttpll
xchg
xchg
gs
inc
daa
repnz
push
fiadds
push
add
jp
lods
sbb
jbe
add
xor
lahf
fs
pushf
stos
sub
add
and
mov
push
add
sarb
outsl
adc
add
inc
cmpb
sub
test
je
pushf
orb
lds
test
ja
add
push
mov
dec
aas
mov
add
cmp
jle
jecxz
inc
xchg
out
mov
popf
shll
hlt
cmp
mov
jb
xchg
sbb
mov
fwait
sahf
mov
sub
adc
mov
jle
jbe
inc
test
add
pop
pop
xor
jl
out
xor
fsubs
mov
xchg
je
std
xor
outsl
icebp
imull
aas
mov
fucomip
jmp
outsb
aam
ror
loopne
ds
xorb
push
sbb
push
xchg
jnp
add
fistl
clc
sub
add
jnp
dec
inc
nop
jb
dec
fadd
mov
imul
cmp
mov
mov
adc
ret
push
imul
mov
out
and
or
or
addr16
add
jbe
inc
mov
stc
sbb
aam
dec
mov
movsl
dec
and
add
int
xor
aas
and
cli
cmp
add
lret
scas
jecxz
cmp
cmp
xchg
outsl
mov
es
sbb
add
bound
add
push
adc
gs
and
cmc
lahf
repz
xlat
shlb
sub
sbb
iret
xchg
mov
rcl
mov
pusha
scas
and
je
addl
pop
push
cltd
arpl
loopne
pop
mov
push
ljmp
adc
lea
in
mov
adc
hlt
rorb
imul
add
gs
pusha
or
in
clc
xchg
dec
add
xchg
shrl
add
movsb
call
pop
push
adc
pop
mov
or
adc
inc
pushw
or
push
cmp
sub
cmp
iret
mov
cmp
lret
inc
call
add
add
lahf
pop
out
cmp
pop
dec
mov
xor
sbbl
mov
add
dec
inc
xchg
clc
mov
in
add
lea
lret
xchg
cmp
lcall
test
jge
pusha
fs
add
popa
cmpsb
xchg
pop
cs
cmp
pop
mov
ja
and
outsl
call
lock
enter
xor
aam
jo
inc
jl
aam
adcb
and
rclb
add
cmpb
mov
sbb
push
dec
movsb
add
pop
xchg
push
xchg
add
sub
inc
mov
xor
cmpl
inc
push
add
mov
mov
cmp
fwait
out
sub
mov
jbe
xchg
mov
scas
mov
push
adc
mov
icebp
pop
cmp
push
jne
movsl
mov
or
jp
pop
dec
add
dec
jmp
xchg
jmp
jnp
pop
or
pop
pop
stos
add
femms
out
loopne
inc
call
jnp
mov
adc
fbld
lret
inc
dec
add
mov
sbb
jnp
pop
cmp
mov
lret
xor
in
mov
inc
or
add
cmp
ret
jnp
out
fs
push
jmp
jbe
inc
js
repnz
add
push
cmpsl
cmpb
or
sub
call
sahf
xchg
xchg
mov
or
cmp
lods
add
andb
fiaddl
mov
jo
xorb
xchg
aam
dec
adc
lahf
add
xorb
fisttps
mov
xor
and
and
jg
xchg
mov
roll
lcall
insb
adc
mov
push
cli
xor
cmp
xchg
mov
dec
dec
add
cvtdq2ps
lret
jno
pop
std
ffree
mov
or
nop
add
divb
adc
lcall
push
fadds
push
cmp
movsb
xchg
nop
fs
scas
mov
push
or
or
pusha
cmp
pop
aad
push
add
movsl
and
shl
faddl
sahf
stc
mov
push
xchg
xchg
mov
sub
mov
push
sub
cmp
cmp
pop
mov
popf
mov
sbb
or
add
fucomi
aaa
or
dec
fcoms
or
adc
ret
pop
mov
mov
inc
inc
and
xor
xor
xchg
pop
sbb
jle
movsb
in
mov
inc
or
dec
sub
lock
aaa
add
sti
popf
aam
mov
mov
int
scas
cltd
loopne
add
jp
jge
popf
add
rcrb
jg
dec
test
rolb
mov
das
mov
andl
and
push
ljmp
mov
fstpl
in
enter
jmp
repnz
jmp
ffree
pusha
mov
repnz
add
mov
dec
andb
mov
shrb
sub
jmp
fadds
ret
add
sub
dec
cmp
ljmp
mov
inc
mov
pop
jo
push
dec
jle
mov
push
cmp
add
jmp
sbb
adcl
insb
cmpsl
adc
lods
pop
ljmp
or
xchg
std
movsl
pop
in
rcrb
hlt
xor
add
adc
sub
lock
and
mov
pop
add
xchg
std
inc
and
cltd
add
or
add
ss
dec
add
jnp
sbb
outsb
or
lods
cmpsb
sub
mov
jne
fs
adc
pop
mov
sbb
das
mov
enter
mov
jl
gs
fldcw
dec
arpl
andb
repz
push
sub
pop
ss
cmp
sub
pop
pop
mov
adc
jg
mov
popa
hlt
ja
les
aam
aam
cmovno
cmp
mov
inc
push
lock
in
mov
xchg
popf
mov
test
sub
jo
inc
lcall
mov
popa
add
fmuls
lahf
cmp
and
adc
mov
imul
lds
popa
lea
cmpb
fcmovb
cmp
xor
loopne
cmp
stos
lret
sbb
aam
arpl
and
add
adc
sbb
mov
inc
mov
js
addb
fcom
adc
cld
arpl
mulb
jmp
adc
loop
inc
add
mov
insb
cmpsl
lldt
test
jae
leave
xchg
popf
inc
mov
dec
adc
rcll
jo
jne
add
jl
or
jmp
loopne
add
mov
repz
mov
inc
mov
cmp
pop
inc
jne
add
nop
xchg
pushaw
sarb
sub
lods
cli
or
incl
cld
repnz
add
popf
shlb
cmc
fcoms
cs
lret
mov
loopne
in
add
xchg
andb
push
pushf
mov
aad
cmp
outsb
sbb
and
addl
mull
shll
stc
shlb
mov
add
sub
pop
push
rolb
rcrb
jns
out
aad
mov
pop
in
mov
push
mov
mov
lret
gs
fscale
mov
xchg
les
out
mov
imul
adc
push
xchg
add
lahf
or
dec
and
inc
ljmp
xor
call
hlt
adc
xor
push
les
add
xor
or
es
je
cmp
add
xchg
pusha
aam
jmp
xor
push
lret
adc
mov
mov
cltd
add
lcall
xor
push
data16
mov
inc
xor
nop
sub
mov
mov
pop
cmpsl
cmp
xchg
cmpsb
incb
clc
cwtl
sbb
arpl
ret
or
add
aam
rcl
or
outsl
mov
mov
push
test
xor
mov
jl
push
enter
jmp
mov
pop
or
inc
ret
incl
inc
das
mov
sbb
jb
mov
in
add
add
popf
sbb
scas
xorb
adc
pop
dec
int3
lahf
xchg
add
mov
cwtl
or
inc
fiaddl
outsl
ret
adc
add
leave
cli
enter
scas
outsl
sub
nop
and
cmp
stc
jo
testl
dec
xchg
add
loop,pt
add
stos
fwait
test
sbb
sub
mov
pop
mov
jbe
push
mov
pusha
sbb
pusha
and
add
lds
enter
push
cmp
fdiv
filds
jp
es
push
in
mov
sub
pop
sbb
ror
inc
mov
mov
pop
in
les
add
inc
loopne
dec
add
or
sbb
adc
sbb
add
mov
and
repnz
add
lock
data16
add
jecxz
stos
ljmp
jl
xchg
inc
dec
add
dec
mov
mov
add
imul
or
mov
jmp
scas
push
cmp
pusha
and
mov
sahf
dec
inc
xchg
loop
or
popf
xor
pop
mov
add
loope
imul
out
icebp
add
fistps
repnz
test
cmp
and
jno
cmp
in
sbb
add
dec
mov
cmp
jecxz
mov
lods
fdivs
jl
xor
pushf
inc
fildl
and
mov
int3
mov
pop
jge
je
mov
push
jl
adc
add
je
andb
xchg
shrb
jmp
add
fimull
hlt
addr16
cwtl
test
int3
mov
arpl
ret
stc
or
data16
mov
incb
pop
das
bound
adc
pop
push
jns
add
popa
lahf
lock
xor
xor
sub
stc
jecxz
or
jb
loopne
inc
mov
inc
imul
lods
in
repnz
andb
cmp
mov
stc
pop
addl
push
mov
adc
mov
mov
xor
cmp
dec
shll
pop
and
add
nop
mul
add
inc
pop
jbe
or
cmp
imul
add
inc
inc
jo
dec
jmp
lods
inc
testb
nop
popf
or
lcall
push
negl
cmp
cs
add
inc
inc
mov
inc
add
sub
je
xor
sub
cmp
push
pop
daa
push
std
sbb
ljmp
add
lret
xor
arpl
jns
jecxz
and
inc
out
int3
lods
add
test
adc
es
xchg
xchg
adc
aam
cmp
popa
pop
dec
add
adcl
mov
cmc
pop
ja
adc
fs
and
push
rolb
int
imul
lods
pusha
push
div
out
adc
pop
int3
add
or
dec
pop
loop
test
lods
fistpll
mov
cmp
nop
pop
adc
je
xor
mov
mov
aam
mov
sub
push
loope
mov
loopne
int3
dec
ja
sub
add
inc
clc
add
int3
aad
pop
sbb
ljmpw
repnz
add
inc
aad
aas
adc
bound
push
xchg
push
add
addr16
jmp
push
xor
in
cmp
mov
cmpsl
cmp
pop
jp
mov
and
pop
std
rorb
xchg
adc
push
and
out
out
add
flds
add
jmp
sbb
adc
mov
dec
xchg
or
filds
pushf
fwait
cltd
sub
add
cmp
jmp
cwtl
rclb
mov
rcrl
leave
inc
mov
in
mov
jge
cmp
jl
pop
push
pop
mov
xor
sbb
xchg
int3
mov
xor
pop
fisttpll
add
and
sub
dec
in
pop
mov
and
loop
lret
add
pop
ss
add
pop
movsb
je
or
test
std
push
cld
and
dec
add
fadds
push
add
shl
lock
sbb
cmpb
shr
movl
push
or
out
add
mov
imul
sbb
orl
sbb
cmpl
pop
sub
insb
pop
movsb
popa
inc
or
shr
aaa
fwait
ret
sub
pop
test
lock
and
mov
pop
hlt
roll
add
mov
pusha
xchg
pop
jmp
add
mov
and
cs
xlat
in
movsb
inc
inc
jo
test
pusha
or
pop
dec
leave
loopne
testb
and
mov
shr
test
and
add
or
sahf
adc
je
mov
mov
rcrl
fildl
inc
mov
sarb
test
adc
mov
pop
push
xchg
rorl
sub
and
call
push
xlat
adc
mov
add
dec
adcl
or
sbb
push
movsb
das
mov
adc
rolb
add
mov
inc
inc
mov
pop
enter
xchg
and
jmp
push
std
mov
gs
add
pop
dec
inc
fcomps
mov
std
xchg
fs
insl
shr
or
cli
outsl
shll
mov
pusha
js
inc
clc
cmc
pop
add
aam
xchg
pop
push
jmp
lods
or
test
rcrl
outsb
icebp
out
nop
push
je
movsl
cwtl
xor
dec
sub
and
ret
leave
in
imul
jl
outsl
add
das
ds
and
cli
ret
idiv
pop
or
sbb
and
or
add
aam
test
push
loopne
push
cmp
lods
and
and
incb
jb
iret
and
out
addr16
sbb
pop
jg
hlt
mov
push
mov
fwait
ret
and
lods
cmpb
adcl
push
dec
mov
pop
ljmp
mov
xchg
xorb
mov
ds
cmp
movsb
inc
cmp
push
js
pop
pop
pop
loop
sub
mov
inc
rolb
push
loop
add
adc
sub
mov
pop
test
cwtl
or
and
outsb
and
das
push
add
xchg
xor
imul
lds
rorl
add
xor
add
lret
mov
int3
xor
add
cwtl
lret
cmp
add
mov
mov
mov
jmp
enter
jg
aam
xchg
inc
call
jmp
imul
inc
sti
enter
leave
rcrl
sub
je
in
lods
js
cmp
add
fsubl
lods
shll
divb
mov
test
pop
mov
add
sub
lds
cmp
cmp
dec
or
in
jle
lods
sub
adc
das
and
test
jle
enter
cmp
js
push
add
adc
inc
cld
cmp
jmp
fldenv
xor
push
test
fstpt
scas
pop
mov
cltd
cmpsb
loopne
add
mov
xchg
mov
sub
pop
enter
or
sub
jo
add
bndldx
mov
mov
jo
fwait
add
inc
test
mov
into
pop
lea
jns
cld
and
sub
jecxz
pop
add
pop
lcall
cld
mov
in
inc
lock
and
xchg
fildl
je
mov
add
js
test
mov
movsb
mov
xor
leave
xchg
scas
pop
fcoml
mul
lods
add
sbb
loopne
mov
or
pop
popf
scas
mov
sbb
adc
mov
gs
insl
movsb
in
stc
and
push
shlb
mov
cs
pop
push
push
mov
add
sub
fisttps
pushf
inc
or
mov
into
push
outsl
mov
cmp
push
lock
xlat
pop
or
cmp
mov
imul
pop
adc
mov
cmpsb
mov
icebp
loop
cmp
push
test
clc
mov
loopne,pn
dec
rorb
js
inc
push
add
sbb
inc
dec
jo
test
cmpl
mov
adc
push
or
mov
jp
loope
xor
outsb
and
or
cld
shlb
shl
sub
mov
mov
add
pop
pusha
xor
cmp
cld
mov
push
sub
add
push
jecxz
adc
js
add
cmp
adc
and
pusha
stc
sbb
lahf
xchg
jl
sbb
push
cwtl
xchg
jno
or
stos
add
inc
sbbb
dec
add
outsb
orl
pop
cmp
das
inc
mov
aad
int3
mov
add
leave
cmpsb
and
bound
mov
ss
enter
push
mov
in
mov
cmp
shlb
ljmp
add
add
inc
mov
push
mov
fimull
add
test
cmp
xor
cmp
xor
push
mov
mov
dec
mov
and
movsb
js
enter
add
inc
enter
ljmp
xchg
or
in
lret
dec
jl
push
inc
push
ret
inc
dec
jnp
add
nop
jb
cs
push
test
inc
and
repz
nop
xchg
pop
sbb
pop
cmp
les
and
popf
inc
xor
fs
ljmp
into
cmp
jge,pt
mov
xor
sbb
flds
movsb
test
loope
xchg
add
push
pop
sub
cmp
mov
jne
in
sbb
jo
sbb
push
jb
daa
add
or
cmp
aas
loope
or
fsubs
rolb
cmpl
in
mov
mov
xchg
mov
sub
xor
add
xor
pusha
inc
sbbl
icebp
pop
mov
push
in
cs
mov
outsl
cmpb
fmul
xor
movl
in
add
push
jecxz
add
mov
stc
clc
pusha
or
lods
add
sub
or
cmp
cs
adcb
pop
adc
pop
in
negb
ss
fidivrl
aam
adc
add
ljmp
sub
lea
in
add
cli
leave
stos
fistl
dec
gs
inc
ljmp
aaa
jo
adc
and
mov
cmc
jl
add
mov
insb
mov
mov
adc
daa
and
jp
fcoml
movsb
add
js
mov
scas
ss
lret
fnsave
cwtl
je
dec
xchg
xor
pop
sbb
cld
loop
add
call
out
jno
sub
repnz
cmp
loopne
adc
add
out
adc
add
jmp
xchg
mov
popa
sbb
xor
fnop
pop
inc
xlat
or
xchg
out
fmul
aad
xchg
mov
add
jns
stos
xchg
push
int3
pop
add
dec
inc
adc
or
jno
inc
fidivrl
cmp
add
sub
and
mov
cmp
popf
pop
cltd
push
mov
mov
jns
rcrb
inc
in
dec
add
xchg
dec
xchg
jmp
add
test
stc
add
or
in
cmp
adc
je
pushf
sbbl
or
jp
pop
in
inc
or
mov
out
ret
adc
xchg
mov
mov
cmp
hlt
jb
sahf
add
mov
bound
xor
imul
ja
cmp
lods
rorl
add
pop
add
xchg
cmp
in
add
outsl
push
inc
popa
sbb
bound
dec
sahf
ret
adc
and
mov
js
psubsw
mov
add
loope
mov
filds
scas
clc
mov
jb
mov
mov
enter
test
lahf
inc
jmp
add
jmp
and
cli
adc
dec
and
mov
clc
jnp
add
pop
insb
popa
xchg
bound
pop
sub
hlt
mov
jle
cmp
jae
fs
repnz
inc
mov
insb
repnz
mov
pop
aam
sub
mov
cmpsl
sar
jb
inc
rolb
jp
sbb
pop
mov
inc
adc
push
lret
add
call
dec
outsb
add
out
and
mov
cmp
jo
out
fs
and
jne
mov
fldl
mov
add
loope
shrl
mov
in
fcom
pushf
dec
pop
in
shll
jge
test
scas
pusha
inc
je
pop
mov
adc
or
addl
daa
daa
js
jp
jne
mov
mov
mov
mov
and
cmp
jp
cs
pop
mov
add
add
leave
adc
jge
push
mov
jnp
xor
push
test
scas
jg
sub
mov
arpl
mov
pop
mov
xor
aad
and
push
push
je
or
xchg
pop
cld
xchg
xchg
push
xor
and
in
or
mov
or
adc
cwtl
pop
adc
mov
adc
adc
lock
sarb
movsl
cmp
and
or
xor
mov
push
sbb
xor
popf
cltd
xchg
and
mov
subb
add
xor
test
lret
xchg
mov
add
andl
aad
add
icebp
aaa
pop
pop
fld1
inc
mov
push
add
dec
jb
js
xor
sahf
add
inc
in
push
loope
enter
cs
leave
out
sarl
dec
xor
jmp
shrb
add
das
fs
lds
test
js
mov
inc
sub
in
or
mov
clc
sbb
test
adcb
add
es
aam
add
pop
outsb
jl
xchg
ss
cmc
xorb
lods
outsl
mov
inc
push
jae
jle
and
mov
cli
outsb
das
std
in
jno
xlat
pop
rcrb
xchg
cmpsb
mov
icebp
sbb
andb
out
push
mov
ds
popa
cmp
add
mov
and
mov
jne
xchg
dec
in
cmpb
lods
inc
jno
xor
ljmp
sti
jne
mov
pusha
add
in
mov
add
and
xor
jbe
outsb
mov
lahf
and
inc
lods
xchg
mov
pop
mov
add
push
mov
in
or
in
add
dec
push
jne
add
inc
mov
repnz
shlb
xchg
sbb
add
mov
xor
mov
stos
xor
pop
add
jo
das
hlt
fsts
imul
dec
dec
mov
inc
add
roll
xchg
inc
cmp
pop
popf
push
sub
ljmp
xor
pusha
fisubrs
or
add
lock
or
sub
pop
shrb
jno
cmp
in
test
dec
aam
xchg
add
cmp
pop
inc
outsb
add
sbb
mov
incb
xor
sarl
pop
jg
pop
outsl
test
mov
pusha
fcoms
mov
or
pop
adcl
in
scas
mov
mov
ss
rcll
pop
xor
and
clc
mov
cmp
outsl
shr
in
sbb
pop
aas
cmpsb
push
adcb
or
aam
mov
dec
sahf
je
cltd
or
sbb
movl
and
jne
jl
sub
repnz
addl
and
jle
adc
outsb
loop
add
loopne
gs
and
mov
inc
inc
subb
or
sub
gs
mov
mov
iret
jl
es
sti
pop
fisubrs
adcb
enter
mov
mov
faddl
lret
aam
leave
cli
push
push
and
lret
add
movsb
fs
sti
aam
das
ss
sub
cmpsl
sbb
into
add
add
push
loopne
add
lods
mov
and
pop
pop
dec
and
sub
mov
mov
cli
sbb
sub
inc
inc
lcall
fs
cld
push
push
sub
enter
cmp
pop
aad
loop
lret
add
xor
cld
or
lock
or
jnp
pop
and
movsb
push
or
mov
mov
inc
nop
xor
xor
out
mov
loopne
loopne
inc
add
xor
push
sub
and
inc
data16
add
aas
and
adc
lods
in
add
les
sub
push
or
movnti
add
xchg
pop
mov
add
and
popa
outsb
add
sub
mov
and
xor
xor
mov
cmp
xchg
jmp
or
je
stos
sbb
dec
addr16
add
mov
data16
push
leave
pop
and
mov
scas
mov
pop
cmp
or
jg
inc
dec
add
lcall
and
sub
jl
nop
adc
mov
mov
cmp
sbb
insb
inc
push
lahf
adc
xor
jae
push
sbb
add
mov
adcb
daa
add
mov
sub
jne
inc
nop
pop
pop
repnz
pushf
sub
sub
add
sbb
aas
jo
add
sahf
scas
bound
adc
add
incb
lea
nop
adc
scas
mov
movsb
and
test
mov
aaa
sarl
icebp
insb
clc
add
mov
rolb
inc
or
and
and
jmp
loopne
cli
clc
push
add
rcr
xor
pop
pusha
leave
dec
inc
and
and
mov
cmp
add
jmp
ss
and
add
cltd
mov
popa
pop
jge
push
add
cmp
dec
inc
pusha
lret
xor
xchg
mov
call
js
add
popf
jge
push
cld
mov
pop
push
mov
das
xlat
in
lods
and
addr16
lock
stc
or
data16
jno
movl
dec
dec
aad
call
mov
jl
inc
sub
in
sub
pop
aas
adc
mov
ljmp
cmp
js
dec
mov
mov
dec
ss
repz
dec
and
jl
ljmp
mov
mov
pop
pop
mov
subb
outsl
xor
or
mov
jo
add
lret
icebp
subl
push
add
add
mov
stc
arpl
and
lock
bound
sbb
and
pop
loope
add
push
ljmp
pop
cmp
xchg
aaa
sbb
inc
das
mov
cmp
and
lahf
fdivrs
outsl
add
add
add
jno
popa
divb
mov
fs
loopne
and
add
jae
in
cwtl
xchg
inc
test
or
andb
mov
int3
add
bound
aam
nop
pop
add
or
and
jns
orl
cld
and
or
out
pop
pop
push
inc
inc
or
add
mov
cmpsb
mov
stos
fistl
fsubs
out
addr16
roll
iret
pop
lcall
lock
out
loopne
push
pop
and
dec
jp
in
inc
orb
pop
cmp
mov
or
cvtdq2ps
test
repz
mov
mov
xor
mov
add
adc
cmc
pop
jbe
mov
or
das
and
in
das
bound
pop
daa
sbb
aaa
xor
jnp
pusha
xor
add
pusha
clc
stos
push
movsb
mov
clc
mov
fimull
or
arpl
jne
xor
jmp
xor
int
loopne
cmc
lods
stc
nop
and
or
hlt
xchg
push
push
inc
inc
inc
pop
jne
pop
adc
mov
mov
push
gs
adc
jl
testl
pushf
adc
ror
lods
and
sub
inc
sub
stc
push
je
xlat
mov
dec
mov
bound
inc
cld
push
es
cld
test
nop
and
add
mov
add
adc
pop
inc
repz
out
jmp
fdivs
adc
jl
adc
es
cli
and
mov
add
fldenv
push
addr16
int3
clc
inc
jg
mull
adc
adc
mov
lock
nop
mov
xchg
rcl
insb
sbb
push
adc
shlb
mov
cld
add
lret
add
jp
dec
add
inc
mov
loope
or
push
jo
dec
and
in
loopne
add
jecxz
hlt
adc
jnp
pop
xchg
loopne
add
es
xor
add
pop
jle
shll
xchg
addl
out
inc
dec
lds
daa
cmp
add
push
dec
inc
leave
add
fnsave
xchg
and
adc
fs
fidivrl
adcb
adc
xor
shlb
addb
aad
enter
out
sbbb
push
cwtl
sub
subl
push
pushf
add
popf
scas
inc
in
mov
je
stc
and
mov
add
movups
fld
aad
ljmp
cmp
and
lods
xlat
and
test
add
addb
pop
and
rcrb
add
call
pop
sbb
in
jo
jno
and
push
rolb
mov
mov
in
and
push
loopne
repnz
popa
jle
mov
mov
push
aam
ret
add
mov
int3
les
jo
inc
push
loopne
in
ljmp
jb
adc
xor
sbb
mov
cmp
xchg
inc
aam
cmp
add
mov
mov
in
imul
adc
or
add
and
pop
loopne
add
int3
gs
in
cmp
mov
enter
mov
sub
pushf
in
xchg
pop
mov
shlb
mov
sub
ljmp
ss
sub
mov
jne
adc
clc
push
es
data16
sub
add
add
fisttpll
add
mov
or
xor
xchg
dec
test
testb
pop
int3
pushf
int
and
sub
add
loope
pop
inc
sub
cmp
in
adc
sub
je
mov
inc
loopne
xchg
cli
mov
pusha
test
cmp
mov
shl
sub
or
sub
subb
daa
test
cmpxchg
mov
into
shlb
lea
cmc
les
jae
add
daa
push
test
ss
mov
shl
repnz
pushf
cwtl
jb
mov
jae
jb
add
xor
mov
push
imul
scas
mov
push
sbbl
pop
je
pushf
pop
add
pop
adc
std
xchg
adc
add
jp
push
jmp
dec
push
cmpl
repnz
sbb
inc
adc
mov
jecxz
add
insl
movsb
fnstsw
mov
mov
sbb
ljmp
test
ret
fstpl
shl
int3
dec
add
add
movsl
cltd
mov
in
pop
stos
sub
xchg
arpl
rcrl
cmp
les
xchg
andb
mov
in
sub
mov
mov
mov
push
ljmp
popf
fildll
mov
cmp
dec
and
sub
fdivp
movsb
mov
cwtl
add
leave
pop
std
jmp
mov
pop
inc
dec
movsb
mov
test
xor
jle
lods
mov
add
test
sbb
jg
sbb
shlb
loopne
jmp
and
cli
xor
adc
rcrl
mov
les
stos
pop
xor
rcrb
inc
leave
mov
xorb
add
scas
lret
js
and
cmpl
add
add
inc
jmp
mov
mov
push
imul
clc
and
cld
sub
dec
das
mov
lock
cmc
mov
sbb
rcrb
mov
pop
outsb
mov
lods
pop
mov
leave
mov
aam
inc
int3
in
jl
in
cmpsb
das
sbb
mov
inc
sti
sbb
add
clc
es
addl
cmp
push
ss
dec
movsb
jo
or
mov
testl
outsb
cmp
mov
or
xor
and
lcall
les
fdivp
dec
and
shl
sti
jo
add
shll
add
sar
dec
mov
cld
mov
push
xor
sar
add
sub
inc
xor
and
mov
jno
fistps
in
jno
sub
mov
adc
xor
lock
inc
cmp
xor
jns
and
pop
cmp
lret
arpl
test
adc
add
xchg
pop
sbb
dec
nop
cs
mov
sub
jns
add
mov
jo
mov
movsl
or
and
xchg
push
sbb
lods
out
sub
mov
xlat
pop
lea
daa
cld
mov
shlb
sbb
aaa
push
rclb
adc
int3
inc
and
sub
add
jbe
inc
sub
push
pop
push
mov
ljmp
orb
cmp
mov
lods
shrb
mov
mov
adc
xchg
loopne
call
xchg
rorb
cmp
pop
add
clc
outsb
sbb
mov
or
mov
cmp
in
or
push
stc
cmc
out
pop
push
dec
add
pop
mov
iret
sbb
movsb
cltd
pop
test
in
jb
mov
dec
and
xlat
xor
test
and
aad
mov
js
add
xchg
mov
pop
ret
inc
sbb
inc
mov
lret
lods
mov
int3
pop
add
out
xchg
or
push
sbbb
loope
push
jle
in
lds
add
jp
add
mov
dec
sbb
mov
pop
mov
inc
pop
sub
add
mov
movsb
fs
nop
out
sub
lods
movsb
cmp
test
lea
xor
cmp
sbb
scas
jmp
nop
popa
dec
lds
sbb
je
cmp
mov
dec
cs
movsl
mov
pop
dec
sbb
dec
push
je
inc
or
inc
add
pop
sub
mov
imul
add
movsb
jae
mov
dec
ds
repnz
xchg
jmp
and
leave
sbb
mov
dec
add
mov
inc
scas
inc
pop
orb
jmp
jne
notl
sbb
xor
xchg
fs
adc
shl
jmp
cmp
int3
and
add
pushf
add
cmpsb
scas
mov
adc
xchg
and
push
sub
loopne
gs
sub
or
sbb
add
sbb
ltr
out
sahf
loopne
sub
mov
mov
jp
call
leave
mov
mov
add
or
lret
push
push
pop
dec
loopne
and
pushf
movsb
lea
jns
loop
insb
shrb
pop
pop
adcl
outsb
js
pusha
repnz
jae
xchg
xchg
flds
mov
adc
icebp
add
subl
bound
pop
pop
jp
pop
lahf
inc
mov
in
lods
and
aad
xlat
aam
lret
nop
popf
add
fsubs
add
pop
cmpsb
and
sub
aaa
rol
sbb
mov
and
push
jo
mov
insl
push
jecxz
or
xor
xor
add
call
mov
mov
dec
pop
enter
pop
adc
mov
sbb
movsb
cs
aas
mov
ret
xorb
in
daa
sbb
cmp
test
sub
das
clc
dec
pop
movsb
jl
or
insb
xchg
sarb
add
mov
rcll
add
xchg
fidivrs
sub
pop
jae
fcoms
fs
enter
lret
dec
pop
and
add
inc
push
repnz
adc
pop
mov
pop
xor
subb
add
sbb
sbb
jne
jg
jo
imul
mov
lds
mov
mov
mov
fsubl
cmp
out
inc
fimuls
mov
ret
cmc
xor
lock
cmp
mov
push
jns
xor
or
sbb
cltd
mov
and
add
jo
cmpsb
pusha
sub
adc
aad
push
add
adc
pusha
fsubs
pushf
or
fidivl
push
xchg
fiadds
les
sub
stc
mov
dec
call
xor
cmp
add
xchg
cwtl
mov
pop
mov
bound
sbb
or
and
test
jg
daa
sub
cmp
or
add
clc
mov
adc
leave
stos
dec
add
call
roll
mov
test
cmp
int3
lods
or
xor
data16
xor
sbb
incl
push
cmp
mov
jle
add
push
mov
setb
jb
xchg
cmp
dec
mov
dec
cmpsb
js
sub
xchg
add
cmp
outsl
test
add
ret
cmc
push
icebp
out
add
inc
or
or
pop
lret
ds
add
cmp
xchg
orb
inc
in
ret
shll
xorl
push
dec
xor
ja
call
or
sbb
mov
xor
sub
xchg
xor
cmp
push
sahf
or
xchg
mov
movb
pop
orl
orb
loop
cmpsl
pop
inc
repnz
adc
jbe
pop
mov
sub
pop
jmp
or
mov
cmc
cmpsl
pusha
cmpb
cltd
ss
adc
sub
add
sbb
iret
aam
sub
cmp
shll
sub
dec
jge
orl
std
or
imul
xor
test
clc
mov
pop
cli
sbb
les
js
lods
and
dec
gs
loopne
jo
xchg
mov
add
push
int
inc
repnz
test
rclb
and
lahf
pop
add
out
daa
cmp
jns
adc
rcrl
pop
mov
xchg
or
mov
cmpb
andl
mov
or
jecxz
adc
fwait
andb
jns
hlt
fldl
shll
or
and
filds
pop
push
sbb
dec
add
pop
scas
xchg
dec
xchg
adc
outsl
pop
ja
mov
roll
inc
sub
sbb
mov
mov
aaa
fcomps
xor
data16
fsubrl
cltd
out
bound
les
jl
add
gs
popf
inc
push
jp
inc
ss
fwait
loopne
ljmp
jl
pop
and
aam
roll
rorb
sbb
jae
inc
mov
xchg
cmpsb
fnsave
jecxz
pop
inc
pop
or
rcrl
add
imul
add
mov
call
ss
cmp
xchg
jns
pop
add
sbb
add
push
sbb
ret
add
sti
rclb
notl
dec
jmp
sub
fldcw
mov
jno
aaa
or
in
int3
or
pop
aas
or
mov
and
add
je
mov
mov
psubb
mov
ljmp
pop
push
shl
test
mov
and
add
and
xor
sbbl
fsubrs
daa
filds
add
leave
jle
icebp
int
adc
adc
pushf
or
pop
adc
fiadds
aad
or
mov
loope
jbe
sub
pop
add
jnp
cld
push
aad
push
xchg
fmul
and
les
loopne
or
xorl
dec
inc
lods
cmp
adc
std
dec
out
out
xchg
aam
lea
sub
sti
in
jl
add
xorl
dec
mov
roll
sbb
icebp
xchg
fwait
jl
testl
pusha
mov
arpl
lahf
andb
stos
notb
add
in
mov
sarb
sbb
inc
subb
cmp
orb
mov
mov
call
aas
out
cmp
es
add
push
push
pop
push
cwtl
cs
jmp
sbb
dec
adcb
aas
jp
divb
add
pop
data16
faddl
icebp
jmp
subb
sub
ds
sbb
xor
pop
or
or
pop
or
test
popa
push
add
in
adc
xchg
adc
lahf
jle
in
cmp
retw
arpl
packssdw
add
add
xor
adc
cmp
inc
ret
inc
jle
js
add
xor
cwtl
add
cltd
sbb
js
add
cli
icebp
sbb
adc
leave
insl
mov
std
pop
in
or
push
test
clc
testb
iret
jno
mov
push
out
pushf
add
ljmp
mov
into
icebp
adc
faddl
xchg
loopne
adc
dec
cltd
adc
scas
add
ss
fnstsw
aaa
push
add
sub
add
dec
push
ficoml
daa
imul
fldl
scas
push
mov
jg
cld
xchg
add
nop
out
jecxz
xor
add
roll
mov
rcrb
xor
fsubp
mov
test
jmp
ftst
enter
mov
inc
add
bound
mov
inc
add
adc
adcl
and
sbb
test
cmpsl
add
stc
outsb
xchg
mov
add
in
pop
inc
or
add
ffree
push
push
sub
call
and
mov
mov
insl
jb
fstps
inc
cmp
mov
mov
xor
adc
add
test
ret
dec
add
and
mov
mov
dec
dec
scas
mov
fiaddl
ss
mov
xchg
and
add
xor
push
xchg
lcall
imul
aaa
push
add
fldt
pop
lods
xchg
mov
imul
add
sbb
sub
mov
mov
clc
pusha
lock
pop
pop
jecxz
adc
add
sub
int
xor
fisubl
pop
je
push
add
sub
jno
add
inc
xor
pusha
and
xchg
ds
mov
dec
popa
add
stos
js
shll
test
xchg
cmp
lret
push
push
mov
or
push
or
stos
rcll
lahf
add
into
jp
mov
jnp
mov
in
lret
cld
add
gs
es
push
add
sub
mov
cmp
mov
sbbb
rclb
stc
mov
push
rolb
cmpl
imul
sbb
jp
insb
xchg
dec
loope
stos
icebp
adc
popf
add
mov
add
adc
fisubrs
movsl
xor
or
cmc
xchg
hlt
push
addr16
js
js
add
jae
jo
cmpsl
notb
sahf
push
pop
lods
add
cs
adc
shrb
cmpsb
les
add
add
mov
add
lretw
dec
xchg
push
andb
or
clc
add
inc
ficoms
or
loope
dec
dec
pop
add
mov
xor
fbld
mov
movsb
add
xchg
stos
shll
ret
add
xor
gs
out
push
lret
add
inc
pop
sub
aas
fstpt
adc
pop
or
adc
cltd
pop
or
add
jecxz
cmp
lods
add
fwait
inc
and
add
bnd
loop
incb
xor
imul
std
mov
test
add
mov
push
scas
xor
dec
insb
lret
inc
push
call
mov
popf
jns
fmull
cld
mov
es
or
loope
shll
verr
xchg
mov
push
add
mov
xchg
xchg
push
or
addr16
pop
and
add
ljmp
add
std
jl
add
int
add
mov
mov
sbb
cmp
add
and
xor
cwtl
pop
xor
push
les
cmp
jne
pop
xchg
std
lds
cli
dec
add
sub
test
xchg
jns
incb
sbb
mov
inc
pop
sbb
xchg
test
or
and
add
lahf
or
popf
push
adc
scas
sbb
jns
filds
mov
push
dec
add
pop
jp
or
les
xchg
or
sbbl
dec
inc
arpl
stc
fcoml
lods
xchg
push
sbb
push
sarb
pop
frndint
mov
add
ljmp
imul
lahf
in
shlb
out
push
pop
adc
add
test
sbb
cmpsb
stc
jle
pushf
or
push
addb
ja
xlat
rclb
add
call
inc
jle
sbb
mov
fst
sbb
in
nop
add
push
push
das
dec
pusha
xor
xlat
xor
ficoms
jp
sar
add
movsl
pop
andl
mov
pop
mov
cld
or
add
aas
hlt
repnz
ret
out
jge
add
or
lcall
aad
aam
pushf
lock
xor
or
add
and
faddp
test
dec
loope
xor
loop
sbb
js
push
in
es
xor
mov
lcall
and
sub
pop
jb
fwait
add
mov
pop
ret
cmp
stos
faddl
insb
stos
xchg
or
leave
push
push
mov
xchg
inc
aam
or
or
push
inc
adc
and
dec
icebp
xor
popa
jne
add
pop
cmp
add
shl
hlt
jo
cmc
outsb
cmp
xor
or
xchg
pop
jecxz
xor
add
pop
inc
insl
cmpsl
sbb
pop
lea
add
sbb
push
clc
sbb
add
fbstp
sbbb
popa
add
cld
arpl
mov
nop
lods
add
and
cld
lret
fs
add
dec
add
lret
push
popl
add
mov
add
sbb
aam
sub
jmp
xorl
pusha
or
and
push
cmp
add
mov
pusha
shl
add
xor
pop
and
push
andb
xor
dec
add
test
xor
pushf
or
or
mov
lea
psadbw
mov
ret
add
push
test
jmp
dec
popa
sar
cmp
add
inc
and
movsl
mov
jmp
daa
add
cmp
ds
or
lock
stos
or
les
call
mov
and
sub
shl
rorl
pop
pusha
xor
push
sub
mov
int3
sbb
xchg
cmp
dec
jns
inc
fmull
in
int
pop
add
scas
daa
pushf
fisubs
mov
rcrb
lea
cmpl
adc
dec
pop
adc
jl
std
or
add
dec
push
sbb
dec
mov
hlt
in
xchg
iret
add
lret
adc
cmp
nop
rorb
in
sub
rcr
fs
add
and
mov
ja
sbbl
jbe
movsb
inc
jae
scas
inc
mov
roll
push
shlb
cmpl
sub
mov
sbb
mov
jecxz
and
test
aam
sbb
mov
lea
rorb
sub
or
scas
lret
mov
test
jnp
int3
test
cmp
icebp
lret
push
jns
add
enter
add
pop
addl
out
pushw
jno
dec
mov
addr16
and
nop
out
jo
add
mov
mov
adc
fisubl
add
or
jge
or
pop
pushf
pop
cltd
or
and
and
pop
addr16
xchg
push
push
ficompl
fsubs
inc
xchg
jae
jge
or
scas
pop
popa
outsl
mov
addb
cmp
mov
shlb
mov
nop
clc
sti
mov
adc
or
mov
pop
dec
add
cltd
mov
push
dec
inc
add
dec
push
mov
dec
xchg
sub
and
push
fiaddl
xor
addb
cmpsl
adc
add
movsl
pop
xchg
or
jae
addr16
mov
shlb
lds
ljmp
sbb
shl
inc
inc
push
dec
lcall
jmp
jle
add
jns
rcrl
sbb
mov
out
add
fcoml
sti
push
xchg
add
and
adc
cwtl
xchg
dec
fsubr
push
and
add
fldenv
jne
jo
mov
or
cmpsl
jae
rcr
lcall
mov
fsubr
add
add
test
out
sbbb
jb
cli
rcl
sub
sbb
xchg
cld
pusha
bound
arpl
negb
adc
xchg
jg
add
loope
mov
lods
iret
jge
ja
call
fucomi
push
shll
mov
aam
cmp
jbe
rcrb
frstor
rclb
outsb
inc
add
cmp
lock
mulb
pop
jnp
adc
je
insb
call
mov
popf
mov
daa
sbb
mov
movsb
jmp
enter
scas
dec
lea
add
jbe
bound
test
popa
insl
shlb
daa
es
inc
rolb
jmp
or
out
and
sub
add
mov
dec
lods
fldl
jbe
addl
daa
adc
mov
andb
jo
add
cmpsl
ds
imul
mov
dec
push
imul
or
sub
mov
subb
or
and
stos
pop
cmp
sub
push
mov
sub
inc
cmpb
sub
outsb
loope
and
dec
mov
loop
or
lea
pop
aaa
push
pushf
pop
ljmp
add
enter
bound
fsts
xor
outsb
mov
aaa
cmovp
jo
xchg
xor
sub
push
push
inc
int3
iret
pop
jns
in
frstor
mov
pop
dec
sub
mov
outsl
rcrb
add
dec
mov
xor
push
add
and
xchg
xor
jno
xchg
in
mov
xorb
mov
incl
mov
mov
out
pop
clc
inc
mov
add
loope
lcall
cmp
add
add
repnz
lods
xor
cli
fldenv
jl
add
xchg
loop
out
inc
cmp
xchg
push
mov
fiadds
outsb
test
hlt
mov
imul
out
dec
mov
insl
dec
xor
orl
or
lahf
and
xor
aad
cmc
cwtl
jle
out
stos
subb
shl
jmp
popa
test
lock
fistpl
test
xor
adc
jbe
sbb
dec
or
shlb
out
xor
test
nop
or
mov
arpl
imul
push
nop
sbb
rcrl
lods
in
fists
xor
xlat
jl
stos
add
mov
xchg
jp
adc
add
xchg
shlb
push
icebp
add
jnp
xor
repz
add
add
scas
push
inc
jmp
xor
cmp
xorb
add
int3
and
jbe
or
lcall
mov
dec
sbb
fsubs
stos
popa
js
add
ljmp
sbb
repz
and
inc
decl
adc
adc
and
and
rcll
xchg
adc
adc
mov
and
push
cmp
or
sub
ss
mov
inc
adc
sub
xchg
movsl
ss
add
shl
mov
mov
mov
sub
arpl
aam
xorl
mov
xchg
pop
add
mov
mov
je
push
stos
xchg
inc
dec
push
cmp
sub
cmp
std
lock
dec
aas
push
leave
push
xor
push
rcr
ss
cld
out
cwtl
sub
fldt
sub
jl
loop
and
rclb
in
jo
add
xchg
lods
push
or
pop
rcrb
sub
pop
call
pop
test
aad
add
mov
jle
iret
lret
and
in
shlb
jns
add
pop
xor
in
push
out
mov
mov
std
xor
mov
jmp
xchg
adc
adc
fs
xchg
mov
or
pop
call
rolb
mov
mov
cli
xor
add
xor
or
xchg
mov
daa
inc
test
into
cs
add
int3
mov
adc
sub
ffree
add
fwait
sahf
jbe
push
iret
es
rclb
sub
or
push
call
and
idivb
sbb
jl
fiaddl
inc
sahf
stos
mov
push
jnp
push
inc
push
xor
jl
add
adc
mov
inc
sti
sbb
cli
add
add
push
aas
cmpl
pushf
xchg
sub
xor
lea
or
gs
sbb
rorb
into
stos
add
jl
jb
ss
clc
andb
adc
add
dec
lock
das
add
outsb
out
cs
cmp
fstp
cld
add
add
inc
out
pop
push
add
inc
jo
pop
imul
or
xchg
mov
adc
jo
and
in
faddl
xchg
in
add
je
inc
sbb
sub
lock
xchg
cmp
pop
cmp
xor
sbb
cwtl
push
add
jno
inc
pop
adc
add
mov
add
pop
std
cmp
test
inc
sub
adc
stc
or
test
js
sbb
pop
inc
shrl
add
and
add
fisubs
sbb
and
add
pop
dec
xor
or
out
jp
popf
sub
inc
nop
hlt
add
and
loop
or
or
inc
and
hlt
imulb
add
lcall
dec
bound
int3
outsl
pop
outsb
add
push
xchg
push
mov
push
pusha
xchg
insl
add
stos
cmp
mov
ret
lret
add
movsl
jg
push
or
les
pop
jns
clc
cli
add
and
xchg
add
out
or
sbb
in
mov
and
dec
nop
inc
scas
mov
and
ja
addl
into
pop
push
repz
inc
call
icebp
es
lods
inc
add
ret
loopne
dec
aam
or
in
xor
mov
add
scas
jge
and
je
pop
mov
lock
movsl
pop
aam
jle
mov
pushf
sbb
fldcw
les
xor
push
jg
cmp
cmp
add
cmc
dec
enter
jnp
dec
xorb
add
mov
lret
cmp
in
mov
jg
in
mov
push
insl
adc
push
push
mov
push
mov
ds
pushf
cmp
push
xchg
popf
cmp
into
jae
inc
xchg
add
add
mov
and
add
jecxz
push
loop
cmc
dec
aad
add
or
aam
test
add
addr16
roll
sub
mov
xor
add
and
cli
add
ljmp
mov
flds
xor
add
mov
shl
inc
pop
outsb
in
es
ret
aas
ds
call
push
xchg
sbb
enter
lcall
int
fbld
clc
adc
cld
jne
call
movl
pop
or
jbe
leave
jge
popl
sub
mov
shrb
jmp
mov
mov
jae
loope
mov
dec
out
iret
add
fistpll
add
clc
arpl
ja
repnz
add
loope
or
cmpsl
mov
dec
add
in
aaa
add
scas
popa
cmp
cmp
add
aam
mov
or
push
sbb
rolb
pop
ljmp
ret
arpl
adc
add
mov
mov
cmpsb
insb
cltd
filds
fidivrl
add
mov
sahf
add
and
movsb
ds
nop
sbbb
and
out
push
repz
pusha
in
or
xchg
out
jb
pop
inc
int
add
inc
xchg
xor
in
pop
daa
nop
fisttpl
jmp
lcall
sahf
cmp
sbb
cmpb
repnz
jnp
sarb
mov
adc
clc
cmp
add
pusha
inc
add
xor
orb
push
orb
js
inc
add
inc
adcl
std
test
adc
out
mov
push
lea
or
test
nop
lods
cmp
xor
xor
cli
movsb
hlt
out
pop
dec
ret
out
jns
mov
pop
mov
pslld
mov
call
cmp
xorb
push
sub
add
in
pop
mov
aas
jle
or
mov
add
test
mov
dec
dec
pop
push
mov
enter
es
add
pushf
or
cld
push
mov
cwtl
sarl
push
inc
and
push
pop
test
mull
mov
xchg
push
sub
daa
mov
mov
call
fsubrs
ja
addl
mov
sti
sub
xchg
daa
mov
jno
push
orl
xchg
add
subl
repnz
loopne
and
arpl
add
sar
mov
js
push
fisubl
inc
mov
inc
add
jo
jg
out
mov
call
sbb
pop
inc
xor
les
add
mov
mov
in
xor
fsubrs
xchg
mov
iret
jne
dec
frstpm(287
sti
test
sbb
mov
lods
jg
jge
add
mov
cmp
stos
add
fldl
add
mov
push
dec
cmpsl
mov
jne
ja
add
mov
mov
or
sahf
mov
cmp
add
orl
cld
loopne
test
int
popa
xchg
clc
jno
add
movsb
and
and
add
punpcklbw
xorb
add
adc
cs
xchg
add
sar
lahf
add
xor
jmp
sbb
dec
jg
xchg
push
xor
rorb
jecxz
push
xchg
hlt
mov
xchg
sbb
stos
push
jo
xchg
jae
sysret
pop
lds
and
mov
add
mull
push
cmp
loop
mov
aas
add
jg
add
daa
mov
insl
push
push
add
roll
xchg
test
mov
ret
insb
adcl
shll
leave
enter
in
fdivrs
test
pop
data16
add
pop
movsl
in
imul
sub
nop
pop
jne
adc
push
inc
xor
rolb
das
sub
xchg
std
adc
cmc
inc
pop
ffree
sub
add
pop
mov
es
xchg
sub
in
push
or
das
call
add
mov
adc
movsl
adc
js
add
sbb
and
decl
ficomps
or
mov
sub
add
dec
add
sbb
outsb
add
ja
mov
sarb
dec
mov
loopne
push
add
and
scas
idivl
arpl
pop
or
push
pop
inc
cmpsb
in
add
or
sbbb
and
nop
cmp
popa
add
inc
jmp
add
bound
je
ret
dec
mov
push
push
das
mov
adc
cltd
xchg
push
cmp
rcll
mov
mov
cmp
mov
pop
test
insl
and
mov
cmpsl
dec
add
negb
lea
ret
add
inc
push
and
js
sahf
test
hlt
push
jp
pusha
jge
add
mov
dec
add
lds
sub
xchg
or
push
or
add
dec
push
cmp
xlat
add
sub
leave
add
inc
jp
pushl
add
clc
fstps
push
add
mov
push
mov
std
sbb
repnz
adc
mov
add
icebp
jg
add
mov
dec
filds
fildl
push
roll
cltd
inc
jge
and
pop
add
mov
push
dec
scas
lret
sub
dec
push
jg
dec
mov
add
sub
sbb
xchg
addb
dec
add
mov
sub
xchg
ds
add
xchg
jecxz
out
std
pop
add
ja
push
lcall
mov
int3
vmread
cmpb
add
push
addps
mov
fwait
gs
xor
xchg
inc
xadd
mov
add
movsl
push
sbb
jbe
mov
inc
add
xlat
hlt
push
pop
mov
add
sarb
pop
jle
add
call
pushl
pop
clc
ljmp
out
and
add
pop
sub
push
cwtl
decl
lcall
add
test
pop
pop
add
nop
sbb
stc
jno
insl
push
add
xlat
add
mov
add
stos
sub
cltd
push
outsl
sbbb
or
cmp
push
sub
jmp
out
push
je
mov
inc
lahf
add
xchg
clc
xor
lods
jge
adc
aad
shrb
lcall
mov
test
sbb
aaa
cmc
xor
xor
lahf
jmp
in
and
add
pop
mov
inc
nop
xor
inc
mov
divb
and
push
add
cltd
pop
fwait
jne
add
add
mov
cmp
sahf
imul
insb
les
adc
xchg
or
orl
popa
cs
loop
pop
lea
dec
xor
or
sbb
cld
fdivrs
inc
mov
add
jo
cs
add
sti
adc
stos
mov
pop
addl
or
and
jns
mov
cwtl
add
add
in
adc
lds
imul
cld
add
in
aam
outsb
add
fwait
dec
fstl
pop
pop
add
aaa
loope
mov
add
xchg
inc
filds
insb
inc
stos
jo
cmp
test
ljmp
scas
inc
or
push
and
bound
jle
aam
shll
ljmp
bound
dec
or
test
outsb
cmpsl
jnp
cmp
orl
leave
cwtl
sbb
roll
in
lret
mov
jecxz
add
mov
sbb
or
jo
cs
add
jne
add
fildll
dec
fsubrl
fldl
adc
outsb
xor
aad
in
jle
xchg
scas
sub
xchg
mov
mov
add
adcb
mov
jge
jbe
cwtl
and
in
add
mov
lret
sbbb
cmp
add
lret
sub
add
loopne
cld
or
pop
mov
xchg
test
push
or
dec
pop
push
lock
sbb
hlt
and
mov
xor
sub
movsb
in
adc
pop
lret
mov
ljmp
pusha
and
out
pop
or
push
inc
clc
psrad
add
popa
and
dec
hlt
pop
pop
shll
add
dec
imul
jg
mov
test
loop
scas
idivl
pop
xchg
pop
add
call
aam
stc
inc
lods
cmp
rcrb
lcall
inc
sarl
pop
add
aaa
cmp
ds
xchg
faddl
xchg
call
mov
pusha
ret
mov
xchg
movsl
test
enter
adc
xchg
cmc
test
test
sbb
mov
sbbl
add
pop
imul
test
jae
push
push
and
cmp
js
sbb
fwait
inc
xor
in
jp
mov
bound
sarl
rcll
in
adc
call
out
xor
in
adc
mov
xchg
roll
mov
and
push
cwtl
jo
inc
add
cmpsb
pop
shrb
mov
jle
pushf
push
xchg
dec
mov
gs
add
push
jo
mov
push
mov
sbb
sbb
loopne
mov
aas
push
js
dec
push
and
into
es
push
ja
mov
cmp
pop
loope
push
ljmp
dec
inc
leave
adc
xchg
push
in
das
loopne
cmp
cmp
and
int
jg
pusha
andl
orl
lret
push
push
call
ss
xchg
rolb
mov
pushf
or
add
in
inc
loopne
jno
addl
push
and
sbb
int3
cmc
adc
push
sub
in
out
inc
jp
add
or
cmp
enter
adc
subb
inc
in
and
add
mov
int3
sbb
and
sbb
pop
adcl
push
in
mov
ret
es
insb
and
scas
shr
pop
nopl
mov
pop
pop
cmp
call
mov
and
mov
sbb
sub
add
and
mov
or
mov
movswl
add
clc
icebp
out
inc
nop
add
enter
stos
add
adc
xchg
jnp
add
mov
dec
dec
lods
add
lock
and
sub
mov
cmp
add
hlt
jp
nop
mov
lods
outsb
and
incb
and
add
cld
das
inc
mov
add
dec
aad
lea
sbb
jae
ffreep
sbb
mov
and
jns
sub
pop
add
aaa
jp
psubb
dec
jb
and
neg
add
imul
fsubrl
or
ss
aas
sti
sbb
sbb
add
nop
add
jp
add
aad
add
divb
pop
add
xchg
loopne
rcl
mov
int
incl
lock
stc
fnstcw
and
repnz
add
js
xor
sub
test
add
lock
loop
repnz
inc
add
or
cld
test
inc
or
pushf
cmp
add
mov
add
movsl
sub
es
cmp
enter
inc
xor
out
shlb
sti
loop
rclb
ret
jne
lret
rcl
cmp
nop
aaa
add
pop
mov
sub
mov
cwtl
cmp
fcoms
add
loopne
stc
sub
add
sahf
pop
or
aad
inc
iret
mov
ja
ret
pushf
fldenv
clc
push
mov
ficoms
incl
inc
pop
add
dec
dec
cs
pop
jmp
popf
loop
sbb
add
lock
orb
sbb
and
clc
dec
add
pop
rclb
out
and
jmp
adc
add
lret
test
js
jae
repnz
dec
sub
adc
aam
xor
repz
and
adc
add
adc
dec
cs
fstpt
hlt
movsb
sbbb
sub
jns
test
imull
jmp
ret
mov
rcll
hlt
cld
addr16
test
cld
push
cmp
sbb
shrb
add
andb
sub
xchg
movsl
or
or
and
sahf
setnp
mov
pusha
jb
pop
test
pop
cli
xchg
bound
mov
mov
push
add
cli
mov
pop
inc
dec
add
cltd
and
mov
out
jle
add
dec
xor
fsub
add
shrl
sahf
jno
xchg
or
jecxz
ucomiss
lret
lret
add
movsl
pushf
sbb
add
lds
lret
loopne
jecxz
mov
arpl
mov
stc
std
xchg
lahf
and
or
inc
xor
jno
jmp
jl
push
cmp
adc
mulb
add
push
lods
jg
stos
jns
pop
pop
sub
andb
and
sbb
jno
add
add
xor
orb
ja
sub
jo
mov
mov
das
adcl
loopne
lock
add
sub
imul
decl
bound
add
je
adc
mov
sub
icebp
shll
in
sub
cmpsb
mov
leave
jae
cmp
mov
cmp
mov
dec
loop
or
jo
jo
push
add
lea
dec
inc
fmuls
test
dec
in
ret
shll
scas
lret
fs
inc
push
xor
cmp
mov
cwtl
jnp
xchg
cmp
cmp
add
fld
adc
dec
pop
mov
push
inc
decl
push
in
lods
pushf
mov
jb
add
jb
cld
ss
add
add
lahf
pop
in
jno
xor
mov
jb
iret
mov
les
sub
insb
insl
inc
mov
mov
data16
nop
or
adc
pusha
xacquire
xchg
or
push
shll
add
dec
and
jg
stos
xor
xor
add
test
clc
mov
rcl
popf
je
incl
aam
lds
xor
je
mov
pop
popa
sbb
fcoms
or
jp
add
jns
aam
orb
jne
and
cltd
jae
mov
add
jge
mov
pop
mov
sub
mov
or
repnz
or
and
jl
out
and
fwait
mov
in
push
add
aaa
ret
in
push
loop
mov
mov
adc
dec
mov
test
add
sbb
sahf
add
add
shrl
sub
addb
lret
jns
adc
aam
or
add
test
pusha
jl
or
pushf
jnp
mov
add
inc
dec
or
mov
xorb
mov
pop
add
mov
cltd
cld
xchg
add
push
sub
add
fwait
cmp
in
pusha
adc
sbb
ret
icebp
loop
xchg
out
cs
jae
add
cmp
dec
lahf
rclb
add
outsl
adc
test
flds
imul
xchg
testb
and
or
lea
aas
adc
call
loope
and
mov
int3
add
dec
mov
out
cmp
push
inc
mov
clc
add
mov
outsb
idiv
add
fdivl
jno
mov
add
pop
adc
pop
dec
cmp
sub
ds
or
cmp
lret
imul
frstor
add
add
mov
xchg
add
cli
push
mov
lret
into
cmp
iret
xchg
pop
movsb
or
jl
mov
ficoml
pop
in
pusha
mov
cmp
inc
jmp
jp
add
ja
jle
dec
push
add
ret
push
dec
test
in
shll
mov
fdivl
add
pushf
rcr
mov
in
pop
fisubl
in
xchg
or
sub
fisubrl
add
add
pop
cs
cmpsl
add
dec
or
jno
in
pusha
jle
loopne
sbb
cmp
orb
inc
adc
mov
xchg
jb
mov
add
pop
mov
shlb
mov
pop
sahf
push
cmp
pushl
adc
stos
cli
mov
mov
sub
mov
cmpsb
add
loope
call
cmp
outsb
iret
call
out
popa
leave
lods
aaa
xchg
sbb
mov
sub
loopne
test
stc
lea
ds
rolb
adc
call
pop
push
push
xlat
sbb
int
pop
mov
fisttps
jns
mov
add
or
mov
jns
jbe
pop
mov
add
jmp
xchg
out
jae
inc
xor
cmp
adc
sub
out
loope
inc
aam
jle
xorb
cmpsl
sbb
inc
pop
mov
push
ja
push
popa
and
orb
jecxz
loopne
sbb
adcb
stos
mov
lods
addr16
cmpsl
mov
push
lock
adc
out
scas
fdivrs
jl
mov
faddp
add
gs
pushf
add
mov
ja
imul
insl
add
pushf
fldenv
scas
xchg
cmp
inc
stos
jno
ss
pop
lods
lret
mov
jne
xor
sbb
pusha
mov
popl
stos
inc
inc
es
pop
or
push
add
int3
aaa
cli
mov
jne
scas
pop
xchg
or
out
dec
dec
out
loopne
shl
sbb
hlt
lods
andb
adcb
mov
aas
subl
xlat
inc
push
test
insb
add
clc
inc
mov
loopne
add
outsb
sub
test
add
add
add
xor
add
dec
pop
andl
inc
ret
mov
scas
int3
sbb
inc
in
pop
lods
dec
cmp
mov
cmpsl
shlb
lods
in
outsb
mov
add
dec
test
rcrb
add
mov
mov
mov
test
jae
out
and
cmc
push
js
jb
in
ret
add
cmpsb
xchg
sbb
addl
dec
add
ja
leave
das
nop
test
pop
fdivrs
jl
int3
sti
leave
insb
add
adc
cmpsb
loop
in
add
inc
cmp
jecxz
pop
mov
cli
adc
inc
mov
mov
cmpsb
ss
test
inc
call
pop
loopne
add
fxch
jns
cmp
or
imul
psllw
fst
dec
and
dec
mov
call
nop
cmpsb
js
inc
add
xchg
popa
sbb
cmovl
pusha
and
add
pop
nop
cmp
sbb
push
sti
aad
addb
adc
fadds
cwtl
sti
imul
mov
and
jbe
xor
lea
adc
andb
and
iret
scas
sarb
xor
push
add
mov
or
loope
out
divb
sub
je
rcrb
int3
push
and
and
pop
cmc
adc
lock
fstpl
dec
and
add
sbb
incb
cmpsl
fldenv
pushf
inc
adcl
mov
xor
clc
ljmp
adc
add
dec
add
loopne
dec
fwait
pop
movsb
push
cli
nop
add
adc
cmp
xchg
and
xor
hlt
push
cltd
les
pop
fcmovnb
idivb
pusha
test
xor
in
jge
aam
icebp
sbb
adc
push
xchg
outsl
mov
sbb
add
loope
orl
add
popa
mov
pusha
adc
in
pop
jno
pop
jl
test
outsl
add
lret
arpl
xor
add
les
jae
sbb
add
dec
or
xor
pop
int
int3
enter
ds
dec
aaa
inc
cmp
add
or
push
jo
mov
shl
or
popl
mov
pop
push
ja
popa
call
fstl
mov
pmaddwd
arpl
int3
fdiv
cmp
movsl
cmp
sbbb
pop
add
sbb
mov
sbb
bound
loopne
ret
shll
dec
cmc
bswap
mov
lret
shr
andb
add
xor
out
inc
enter
popa
and
and
pop
sbb
xlat
not
xor
out
fs
cmp
pusha
add
hlt
loopne
clc
int3
sub
push
push
xor
mov
lea
mov
lahf
test
pop
lret
shll
arpl
push
icebp
and
popf
sub
xchg
sbb
dec
cli
fs
add
mov
arpl
xlat
in
jl
or
cmp
mov
cld
mov
lea
dec
add
insl
pop
lods
jno
sbbl
add
sub
xorb
adc
sbb
add
and
arpl
int3
dec
ret
shl
mov
mov
ljmp
or
test
pop
rolb
pusha
js
lock
push
into
mov
xorb
xor
lcall
jle
add
fisubrs
enter
mov
inc
mov
push
pop
pop
inc
cwtl
inc
mov
pop
mov
push
fwait
jmp
sbb
add
test
mov
xor
mov
pop
jbe
lods
and
stc
or
inc
sahf
lea
pusha
and
mov
test
bound
mov
nop
popf
enter
mov
jg
push
ds
pop
lcall
xor
add
lret
sub
mov
add
sahf
fs
pop
or
add
out
test
mov
sub
in
xlat
cmpb
cmpsl
in
enter
rcrb
movb
mov
stos
cwtl
fdivrl
shll
pop
push
jb
mov
inc
js
int
push
add
test
xor
lods
dec
push
arpl
in
sbb
xchg
movsb
or
mov
adc
add
add
hlt
pop
sbb
inc
seta
in
subb
adc
movsl
daa
lods
cltd
adc
sub
add
inc
add
jns
lock
ficompl
lea
pop
sbb
jmp
ror
rcrb
dec
jb
jo
cld
or
fstpl
adc
add
jge
add
enter
aad
sub
and
xor
testb
mov
mov
outsb
cmp
enter
dec
xchg
inc
cmp
or
loopne
mov
rcl
call
xor
into
in
nop
cld
add
push
fs
pop
shll
jl,pn
mov
mov
rorb
push
jge
stc
xchg
shrb
xchg
fistpl
cld
ljmp
adc
nop
lret
enter
fstpl
sbb
fadd
cwtl
adc
add
test
inc
xchg
sub
adc
cmp
mov
xchg
or
in
bound
or
int
push
movl
test
or
ds
xchg
sbb
ret
iret
scas
jmp
pusha
push
cltd
lret
movb
dec
test
add
sub
pop
in
cmp
int3
jge
cli
pop
imul
dec
clc
fstp
inc
hlt
add
addr16
out
adc
subb
insb
sub
jae
cmp
jb
pop
es
or
dec
add
fisttps
add
movsl
stc
aaa
xchg
cmp
test
jl
sbbl
xor
out
sbb
int
sbb
es
into
inc
or
pusha
clc
adc
gs
cmp
jle
cmp
es
mov
lock
and
adc
add
mov
xor
adc
pinsrw
inc
sub
ret
pop
addl
push
int3
push
ret
add
push
outsb
mov
insl
loopne
out
scas
and
daa
adc
push
add
rol
and
insb
xchg
es
and
dec
call
daa
cmpsb
and
pop
lods
pushf
fdivr
fldt
call
js
rclb
or
inc
jns
nop
je
mov
loopne
ds
mov
cmp
jo
mov
test
sub
dec
sub
push
jne
pop
adc
aad
push
inc
les
add
inc
or
lret
in
insl
adc
add
sahf
andb
inc
dec
test
lods
pop
dec
das
mov
int
mov
cwtl
cli
mov
test
data16
lret
sbb
mov
jbe
push
mov
push
lahf
inc
leave
xor
nop
dec
add
sbb
sbbb
nop
sub
lods
std
icebp
shrb
fsubs
roll
sbb
mov
shrb
add
and
and
out
cmp
cld
xorb
mov
in
xchg
cmp
mov
test
mov
insl
lcall
lods
lret
jb
aam
subl
xor
sub
xchg
cmp
add
stc
test
mov
outsb
adc
call
scas
je
ret
inc
repnz
sti
push
mov
out
xor
adc
bound
loopne
dec
loopne
add
das
fsubp
inc
mov
arpl
popa
clc
add
jno
pusha
fwait
xlat
add
mov
dec
add
xchg
dec
add
lds
sub
leave
push
pusha
sbb
add
mov
jae
mov
push
cmpsl
rcrb
mov
add
lds
push
clc
scas
adc
rcrb
or
rolb
pop
out
insl
ja
jg
push
lds
test
jb
mov
sub
mov
dec
adc
jl
cld
lds
push
mov
add
mov
in
add
cmp
int
lods
add
dec
sbb
inc
aam
xlat
dec
inc
mov
bound
out
xchg
add
adc
jecxz
call
cmp
or
pop
aam
std
mov
in
jmp
shr
daa
daa
enter
push
add
fwait
cmp
ds
dec
add
movsl
aaa
out
ret
ds
jns
pop
jp
sarb
push
ja
add
in
mov
leave
fs
and
arpl
jle
in
aas
or
insb
fiaddl
xor
dec
lods
in
sti
jmp
or
pop
aas
mov
outsb
xchg
movsb
inc
dec
jge
push
lods
inc
xchg
mov
lds
jl
jp
daa
push
test
mov
andb
adcl
sbb
loop
adc
aaa
dec
add
mov
sbb
fs
das
incb
xor
js
and
cmp
inc
ss
push
lock
add
outsl
aaa
push
or
inc
add
push
xor
cmp
mov
in
jnp
add
test
je
add
mov
add
xchg
andl
sbb
std
adc
sbb
and
add
std
loope
adc
add
hlt
fsubl
jno
icebp
add
lcall
cmp
push
in
xor
inc
hlt
nop
daa
hlt
hlt
add
pop
testb
add
ficompl
jne
xchg
ret
data16
cmc
mov
dec
rcrb
out
jns
fimull
out
cwtl
inc
add
adc
add
aas
imul
jmp
mov
jns
add
cs
outsl
rcrb
add
out
fabs
mov
ficompl
mov
dec
loopne
cmp
mov
js
and
lods
nop
dec
stc
pushf
cmp
out
xchg
movsl
jo
lret
mov
pop
andb
outsl
add
adc
aas
jecxz
adcb
int3
inc
dec
and
mov
out
adc
pop
cmc
lock
js
sbb
sub
pop
cld
mov
and
pop
sub
out
addr16
adc
in
xor
pcmpgtb
loopne
repz
xor
mov
pop
cmpsb
inc
cmp
adc
xchg
notl
jb
shlb
insb
push
sbb
cmpsb
loop
add
nop
jne
cmpsl
lock
nop
adc
mov
jbe
data16
sbb
inc
test
filds
popl
cmp
into
lret
sbb
and
icebp
sahf
add
adc
lret
push
inc
and
pop
in
sti
aam
lock
ret
pop
dec
mov
add
fstpt
or
jge
sub
xchg
cmpsl
nop
scas
imul
sbb
jle
inc
mov
addr16
mov
out
adc
pop
lds
fcompl
test
add
leave
adc
push
cmp
mov
ficomps
cmpb
je
push
bound
dec
jne
data16
push
add
jecxz
in
adc
addb
inc
std
pop
pop
movsb
roll
push
cmp
cmpb
dec
cmp
add
jo
fnstcw
pop
add
or
sub
mov
lds
add
fimull
xchg
pop
mov
lret
inc
xor
test
dec
cltd
das
mov
fadds
add
adc
lds
dec
fisubrl
rolb
push
jns
xchg
hlt
inc
fsubrs
jmp
xchg
insl
adc
movl
in
adc
frstpm(287
and
mov
pop
daa
mov
shlb
sub
jno
add
and
push
add
pop
jecxz
loopne
les
bound
filds
xchg
cld
ds
mov
out
xor
out
out
dec
push
pop
sub
xor
test
testl
addl
add
loop
ljmp
xchg
mov
jo
xor
or
xchg
sub
lahf
shll
add
adc
sub
mov
add
jl
rol
jns
lret
stos
add
or
add
cwtl
je
shlb
mov
aas
aad
mov
mov
js
cltd
popf
pop
add
push
repnz
adcl
dec
pop
add
pop
adc
enter
mov
xor
les
adc
sub
pop
push
in
or
movsb
cmpsb
mov
testb
popa
adc
out
in
pusha
lds
into
xor
out
push
dec
leave
mov
cmpsb
add
divl
lahf
mul
add
mov
cwtl
shrl
test
or
stc
pop
andb
and
add
add
scas
xchg
test
or
and
sbb
out
fstl
inc
cmp
add
sbb
xchg
cmp
lcall
push
cmp
sbb
or
add
push
push
sahf
push
mov
imul
stc
add
xor
xor
fwait
add
add
scas
xor
jno
movsl
or
push
add
dec
incb
dec
mov
sub
push
les
pop
cld
cs
jp
add
mov
cmp
jmp
lahf
push
add
ljmp
out
movsl
xor
dec
sub
mov
rorb
adc
or
rorl
jmp
ffreep
scas
add
add
or
xchg
lods
xlat
cltd
pop
ljmp
push
and
cwtl
lret
aam
mov
cmp
popf
adc
inc
mov
arpl
ds
fneni(8087
jno
out
xor
sub
stos
inc
push
and
mov
and
sahf
das
mov
add
or
mov
mov
cmp
pop
jecxz
inc
push
cld
dec
and
jne
test
int
xchg
add
rorl
iret
pop
add
outsb
leave
adc
sbb
adc
movsb
add
push
daa
dec
mov
incl
pusha
mov
mov
shr
cmc
ret
shlb
and
out
add
cld
sahf
or
add
push
inc
ss
es
add
scas
or
repnz
loop
std
jb
in
test
sbb
add
pop
jae
dec
pop
loopne
pusha
inc
icebp
and
insb
and
rcrl
xchg
imul
shlb
push
add
bnd
call
sahf
xchg
cli
mov
and
push
lcall
in
sub
mov
cltd
nop
cmpsl
mov
add
sbb
push
stos
popf
pop
into
jle
or
mov
int
mull
xchg
adc
cmp
pop
mov
cmp
ret
inc
xor
pop
push
inc
or
lds
xor
mov
mov
loopne
out
sarl
cmp
scas
scas
faddl
jg
jbe
push
roll
pop
xchg
test
and
inc
and
call
cmpsb
add
xchg
fsts
jo
adc
jo
push
push
add
mov
dec
add
iret
adc
aam
jne
add
fimuls
in
add
pop
test
adc
cmp
jle
add
mov
loop
nop
loopne
add
repz
add
sub
dec
aaa
stc
int
lods
mov
test
clc
pop
iret
add
lret
push
ret
enter
add
mov
insb
shlb
add
jo
imul
xor
aam
bndstx
cltd
mov
rolb
in
je
xchg
scas
aad
add
ret
xchg
and
mov
cmp
out
mov
mov
add
adc
or
cld
fadds
clc
jnp
inc
pop
mov
cmp
mov
pop
es
push
adc
push
inc
cmp
xorb
mov
mov
add
fldl
jb
xchg
in
add
xor
or
imul
sub
cltd
pop
xor
rorb
pusha
jmp
ds
sub
xchg
cmp
jecxz
mov
push
and
fwait
sarb
mov
xchg
cltd
pop
sub
pop
or
dec
mov
add
xor
sbb
xchg
or
popa
mov
fcomps
lods
jno
add
jecxz
sbb
mov
sbb
bound
add
xor
push
and
add
xchg
ljmp
ret
cmp
int3
cmp
push
popa
ljmp
mov
mov
test
push
mov
jno
fldl
jne
pusha
add
dec
cld
and
les
adc
inc
movsb
inc
rcrl
cs
lret
push
outsb
push
nop
mov
adc
jl
addr16
mov
outsl
fxch
xlat
add
js
ljmp
pop
pushf
xchg
mov
mov
add
push
push
push
outsb
xor
add
pop
movsb
dec
xor
arpl
filds
jno
jbe
jmp
loope
daa
scas
jne
cs
mov
jmp
sbb
addb
scas
inc
inc
mov
lods
es
aam
or
push
les
inc
mov
add
cld
in
mov
adc
add
sub
or
mov
add
adc
sbb
rcrb
pop
push
test
push
daa
imul
into
daa
add
fmuls
add
gs
cmp
or
pop
mov
and
cwtl
mov
enter
iret
jae
int
dec
ss
add
or
sub
bound
mov
movsb
in
int
xchg
jl
dec
scas
aaa
dec
imul
and
add
sub
jb
cli
ret
cwtl
mov
mov
movsb
jnp
cmp
cmpsb
add
adc
inc
add
mov
xor
int3
scas
lcall
icebp
push
pop
fndisi(8087
push
inc
data16
hlt
xchg
and
or
adc
add
jbe
testb
add
je
xor
ss
push
xorb
lea
outsl
adc
sub
push
add
mov
test
dec
xor
fcompl
cmp
cwtl
add
inc
pop
add
mov
js
add
hlt
mov
loopne
inc
xor
pop
pop
jae
pop
sbb
in
jbe
testb
or
sbb
imul
xchg
sub
inc
sub
aad
and
pop
ret
mov
fistps
pop
roll
jge
outsb
sbb
xchg
stos
mov
add
enter
jbe
cwtl
jo
repz
clc
movsb
xorb
inc
and
xadd
and
sar
sarb
lock
bound
leave
clc
add
jnp
lahf
jge
jae
mov
stos
mov
mov
add
add
sbb
aaa
add
out
and
cmp
adc
in
mov
ja
xchg
pop
add
scas
test
add
mov
out
paddusb
daa
hlt
xorb
sub
add
cmpsb
jge
ret
sbb
add
cmpl
loop
add
sbb
xchg
jge
sbb
sbb
push
and
push
mov
xchg
mov
testl
out
sub
adc
or
bound
movsb
add
sahf
lret
shrl
movsb
loop
add
fs
aas
lds
jne
add
in
xor
add
jae
xorb
or
aad
mov
xor
push
rclb
mov
fwait
insl
add
imul
cmp
rolb
ret
cmp
ret
pop
lods
add
adc
add
stos
lret
add
ljmp
aas
dec
cmpsb
add
pop
insb
popa
int
data16
jo
lds
jmp
add
cmpsb
pop
mov
mov
add
and
pop
push
dec
scas
and
aaa
inc
inc
imul
test
and
add
or
adc
push
or
xor
aaa
jo
pop
cmc
iret
aam
inc
and
scas
cwtl
sub
stos
not
mov
jns
and
bound
inc
adc
test
pop
loope
dec
inc
dec
add
or
add
sub
jl
or
gs
push
or
pop
in
cld
sbb
sub
pop
paddusb
jo
add
jnp
jns
add
mov
rcl
add
fiaddl
dec
outsl
xchg
and
add
test
addb
xor
mov
jmp
add
sarb
add
cmp
dec
xchg
xor
fisubl
and
test
mov
fcmovnu
add
rcrb
inc
cltd
lock
xchg
jne
mov
and
mov
add
dec
int
adc
ret
mov
cmpsb
jbe
lret
sbb
jp
add
decb
loopne
popf
xor
iret
ret
stos
ja
shrb
add
ja
mov
and
push
cld
lds
xor
or
mov
xchg
and
xchg
outsl
add
cmpsl
fstps
rorb
sbb
cwtl
push
sbb
mov
pop
cld
cmc
pop
inc
rcr
leave
xor
cli
sahf
jns
add
fsts
rolb
jnp
pop
test
add
in
push
xchg
sub
mull
xor
icebp
js
mov
pop
mov
xlat
outsb
sbb
shlb
xchg
out
dec
or
add
push
mov
addb
and
cmp
dec
add
xor
sub
jg
xlat
lret
adc
add
and
in
jo
add
inc
mov
dec
jbe
add
aad
popa
mov
loope
inc
mov
and
xchg
add
outsb
push
add
sbb
shrl
xor
dec
xchg
pop
add
enter
xor
movl
and
cltd
aam
shl
and
adc
add
or
add
in
outsb
test
orb
inc
sbb
fcompl
add
cmp
jmp
inc
popa
inc
mov
add
jo
push
dec
xor
add
testl
scas
adc
cmp
inc
popf
mov
jmp
sub
sbb
outsb
dec
pop
mov
add
loop
sub
popa
pop
or
or
aad
mov
sub
aam
movsl
mov
sbb
mov
stos
sub
push
into
cmpb
jle
mov
lcall
das
or
cli
add
les
push
push
pushf
lds
pop
loopne
sbbl
sbb
inc
add
adcb
dec
jle
xchg
daa
xor
add
add
rcrl
insl
or
cmp
dec
addl
leave
stos
call
mov
fldl
sahf
jl
inc
cmp
dec
add
es
add
cmpsl
je
clc
mov
enter
jne
andl
jl
pop
lea
dec
fwait
outsb
pusha
dec
cmp
ss
and
or
mov
pop
and
add
in
roll
add
insl
popa
pop
sub
loope
addr16
add
dec
mov
int
xchg
add
nop
xchg
xchg
rolb
inc
push
dec
or
and
sub
xadd
sbb
add
std
in
adc
aaa
shll
loope
add
roll
inc
add
cwtl
hlt
out
mov
shr
push
jns
movups
add
test
enter
std
xor
aad
add
ret
sbb
fidivs
subl
orl
adcb
test
add
xor
sbb
jnp
adc
dec
mov
dec
push
mov
lahf
mov
clc
cld
push
shrl
dec
push
inc
xor
test
sbb
mov
shl
fnstsw
xor
in
pop
shrl
ds
mov
leave
lods
out
aaa
dec
scas
add
stos
js
inc
filds
pop
add
and
nop
mov
pop
adc
pop
in
cmpsl
jmp
cmc
add
gs
mov
add
pop
popf
fcoms
jo
pop
lds
fmull
add
roll
push
jge
addr16
scas
aad
je
mov
mov
pop
mov
xchg
push
fadds
idivb
jp
xchg
add
push
xlat
repz
fwait
addl
loopne
lret
faddl
sub
cld
dec
cmp
add
xor
mov
mov
call
das
ja
add
xchg
sub
jo
or
inc
xlat
xchg
mov
lock
jmp
add
add
ja
test
dec
sub
add
aad
and
cmpsl
push
xchg
cmp
cmpb
stos
cltd
arpl
cwtl
xchg
jmp
and
cwtl
adc
test
je
mov
mov
sbb
sti
jae
cmp
out
ss
cld
xchg
and
mov
add
mov
push
add
cmpsb
int
cwtl
mov
add
xchg
fsubrp
stos
cltd
jo
inc
lods
clc
add
iret
call
call
shlb
pop
and
push
cmc
push
pop
push
mov
ja
lcall
xor
test
cmpsb
xchg
aam
out
sbb
pop
jl
and
pop
bound
fs
mov
clc
mov
pop
xchg
and
pop
out
or
mov
cmp
inc
hlt
dec
xor
sub
add
and
flds
mov
mov
mov
loope
cwtl
or
addb
adc
fcmovnb
adc
add
dec
test
bound
clc
paddsb
scas
shlb
movsl
js
cmpsb
ja,pt
adc
inc
push
sti
sub
and
add
add
pcmpgtb
sub
add
into
sub
sbb
xor
sbb
jne
out
xor
popl
push
mov
mov
pop
inc
stos
push
imul
std
hlt
push
cmp
sub
mov
jo
in
add
jb
popf
movsl
mov
add
testb
xor
mov
lock
sub
cmp
add
and
pushf
xchg
repnz
rol
rorl
cmp
add
movsl
inc
popf
inc
into
jb
sbb
les
add
mov
ret
sub
flds
andb
popa
aam
jb
jno
jmp
test
push
sbb
adc
aaa
pop
sub
movsb
sub
fbld
adcl
pop
arpl
in
or
pop
fwait
loopne
add
xchg
sahf
fiaddl
stos
hlt
add
movsb
in
dec
mov
lcall
add
add
add
out
adc
sarb
add
lcall
into
nop
xchg
add
xchg
xchg
imul
pop
jmp
push
sahf
sbb
int3
inc
mov
les
leave
pop
cltd
add
pop
xchg
je
fwait
jp
test
cmp
xchg
les
sub
mov
add
sbb
mov
jge
mov
xchg
out
and
sti
loop
mov
lods
insb
aas
xor
lea
pop
cmp
testl
jge
add
arpl
inc
xor
decb
xor
mov
add
and
push
add
test
xchg
dec
rcll
outsb
pop
push
jo
popf
add
je
mov
add
xchg
and
into
push
jae
or
adc
cmpsb
imul
sbb
ret
jbe
xor
fcomps
aas
add
stos
jmp
cmp
jbe
jo
push
push
push
cmovne
lret
adc
push
pop
xchg
in
add
aaa
daa
cwtl
repnz
call
jge
nop
pop
mov
adcb
sbb
add
ret
mov
cli
add
push
rolb
int
adc
cmpsl
pop
cld
dec
sub
cmp
js
add
daa
add
add
add
shll
mov
pcmpgtd
int3
movsb
xchg
xor
scas
and
addl
and
imul
pop
jp
cmp
and
sbb
pusha
mov
push
mov
in
lret
sub
add
cmp
adc
jl
sbb
into
xchg
mov
inc
int
push
pop
and
sbb
stos
add
insb
dec
add
mov
lods
ss
leave
jnp
pop
and
xchg
xchg
add
nop
ja
lret
popa
sub
lods
mov
out
cmp
add
ud0
push
sub
dec
xlat
cs
mov
mov
add
stos
lock
jnp
insb
shl
add
popf
dec
xor
adc
adc
jns
fs
movsl
std
add
jmp
mov
mov
xchg
jl
add
jmp
out
pop
faddl
add
or
pop
mov
add
mull
add
mov
inc
inc
jnp
orb
xor
mov
notb
js
mov
fs
shlb
push
xchg
mov
es
jnp
push
mov
out
mov
xor
rcll
ds
xor
ljmp
mov
jns
add
jge
sbb
ds
jecxz
add
ret
cmpsl
rorl
dec
clc
dec
in
xchg
mov
iret
add
cli
mov
stc
loopne
mov
mov
js
push
pusha
stos
jecxz
loop
out
jae
cwtl
sub
nop
hlt
into
sbb
add
cmp
add
negl
bound
xchg
xlat
popa
ljmp
insb
jb
das
add
adc
test
and
sub
adc
sub
icebp
cmp
sub
cli
mov
sub
push
or
sbb
sbb
push
add
rcll
fnsave
mov
mov
and
pop
psadbw
or
lret
add
mov
xor
lcall
jnp
ja
add
mov
add
sub
ja
cltd
popa
mov
jbe
lcall
xchg
sbb
dec
push
mov
push
xor
xchg
add
clc
mov
outsb
pop
jnp
push
popa
mov
and
je
mov
scas
mov
jmp
cmc
fldl
stos
mov
push
dec
fs
add
inc
pop
add
ljmp
movsb
dec
push
ror
fs
arpl
mov
jo
add
dec
cwtl
sahf
push
idiv
dec
xchg
xor
loope
inc
sbb
insl
rol
pop
lret
add
jg
mov
add
or
imul
sbb
sti
dec
push
push
add
cmpsb
hlt
sbb
adc
and
daa
mov
pop
mov
mov
loope
push
into
mov
push
rcrb
pop
xchg
push
adc
in
flds
pop
xor
shll
xorb
loopne
or
pop
and
jecxz
js
daa
and
sets
and
dec
ja
es
lret
sbbl
pop
mov
cmp
mov
mov
mov
inc
add
mov
sub
movb
mov
xchg
inc
xor
adc
sahf
add
cltd
mov
rorb
push
and
mov
dec
aam
test
add
mov
sub
fwait
int3
jnp
aaa
jno
push
es
push
add
ret
adc
cmp
lods
add
xor
push
add
adcl
in
cmc
or
xor
mov
nop
push
stos
xchg
clc
add
lret
movsl
idivb
sbb
mov
cwtl
xlat
add
pop
flds
xor
or
xor
rcl
add
push
add
std
mov
mov
cmp
inc
pop
adc
pop
inc
int3
movsl
pop
mov
mov
imul
lret
sbb
jno
pop
mov
sbb
notl
ret
lods
add
jge
out
add
inc
push
fdivp
hlt
ror
test
cmp
repnz
jmp
out
jp
push
sahf
imul
cmpsl
scas
lahf
dec
aam
or
push
mov
clc
adcb
loopne
sbb
mov
ret
nop
aam
js
pusha
ljmp
shrl
loopne
nop
pop
pusha
ret
adcb
add
mov
cmp
mov
loopne
add
mov
mov
negb
nop
mov
push
mov
cmpsb
jns
pop
jmp
iret
inc
movsb
add
fsts
or
xchg
push
jecxz
faddl
dec
cmp
mov
mov
add
jae
in
xchg
stos
clc
cmp
popa
out
inc
adc
lods
std
cli
pop
pop
inc
scas
add
dec
push
add
push
adc
mov
aaa
add
add
push
mov
sbb
bound
xchg
cmc
pop
enter
or
pop
and
addb
sub
jne
adc
jae
mov
add
and
fscale
mov
lods
jae
xor
pusha
push
jecxz
sti
inc
sub
add
xor
cld
lret
xchg
sbb
js
test
dec
fcomps
sbb
repz
push
cs
cmp
xchg
sbb
add
and
inc
add
scas
sub
add
push
inc
enter
sub
add
stos
lods
push
sub
jnp
int3
adc
rol
fneni(8087
pushf
mov
jl
xchg
dec
popf
leave
and
xor
inc
cltd
jmp
scas
sarl
int3
bound
cltd
js
fdivrl
push
fbstp
dec
xor
or
repz
mov
addl
push
ds
sbb
loopne
pop
mov
mov
xchg
or
mov
fadds
sub
aad
adc
mov
add
rorb
add
arpl
test
out
cwtl
inc
adc
loopne
xor
in
testl
test
pop
sbb
in
jae
das
ret
inc
mov
sbb
mov
jbe
pusha
int3
adc
aas
fcompl
outsl
adc
mov
mov
pop
adcl
jnp
mov
cltd
add
rcr
imul
cld
loope
mov
sarb
lods
les
mov
pop
clc
fldl
cli
lret
mov
pop
push
hlt
add
out
adc
add
cmp
adc
into
mov
pop
or
ds
inc
push
mov
add
loop
xor
jp
add
leave
jno
cltd
dec
test
add
cmc
addr16
mov
gs
and
xchg
push
add
fs
jbe
pop
push
mov
stos
mov
dec
into
dec
or
ret
mov
gs
xor
ljmp
insb
loope
sbb
jns
das
addb
and
sbb
add
xchg
in
push
vmovq
mov
daa
cmp
lods
dec
add
sbb
fdivrs
xchg
int
repz
aad
inc
add
int3
into
sti
mov
ljmp
fwait
pop
dec
stos
add
sub
push
adc
adc
xchg
ljmp
add
stos
js
pop
push
shlb
jle
clc
jnp
xchg
and
call
sub
das
mov
dec
bound
cmp
add
daa
mov
add
add
mov
push
repz
andb
cmp
pmulhw
mov
jg
pop
fstl
in
jbe
lret
mov
pop
mov
add
sub
clc
popf
sbb
sub
imul
in
cmp
je
aam
jl
adc
fs
inc
iret
add
pop
or
xor
add
in
and
fs
int3
out
add
sti
and
add
ret
popf
mov
scas
cld
and
sahf
sbb
test
sarb
sub
sub
add
stos
xor
stc
mov
pop
hlt
push
sub
xor
cmc
cmp
mov
insb
add
popl
int
mov
inc
mov
mov
pop
xor
mov
pop
mov
add
idivl
leave
sar
xchg
or
pop
sahf
xchg
mov
pand
int3
add
scas
push
xchg
mov
inc
dec
dec
push
xchg
pop
test
jg
bound
int3
sbb
add
rcrl
push
sbb
jmp
sub
add
inc
mov
and
outsb
add
in
add
adc
jo
mov
movsb
subl
out
lock
scas
cli
adc
add
lcall
add
sbb
lock
idivb
xchg
inc
pop
jbe
sarl
mov
in
imull
sub
pop
into
jge
cld
xchg
cmp
inc
call
mov
mov
sbb
add
rclb
sahf
pop
and
in
mov
mov
cmp
mov
jo
jmp
inc
into
or
pop
dec
rcll
mov
addr16
movsb
pusha
inc
outsb
clc
nop
jo
adc
add
std
cld
imul
fadds
xor
add
pop
pop
nop
xor
nop
cmc
shll
cwtl
hlt
pop
pusha
pop
ds
lea
aam
and
decb
je
pop
sarb
inc
cltd
jne
mov
mov
sbb
std
lds
jge
cmp
ret
pusha
icebp
jle
jmp
lret
mov
mov
roll
repnz
cmc
roll
aaa
add
imul
add
pop
enter
inc
add
ret
jae
dec
repz
cmp
in
add
mov
mov
je
insb
imull
pop
push
pop
lret
ds
data16
in
sub
xchg
icebp
mov
add
ss
es
fldenv
inc
ljmp
jl
icebp
int3
cmp
push
repz
xor
xchg
xchg
add
call
pop
or
test
xor
add
adcl
add
dec
sbb
or
sahf
add
add
xchg
push
sbb
add
clc
inc
pushf
aaa
xchg
cmpsl
and
add
xchg
add
sbb
cmp
cmp
ljmp
inc
mov
int3
cmc
xor
add
add
es
mov
and
add
ljmp
add
xchg
lods
adc
mov
repz
or
push
mov
pop
cmpsb
movsl
incb
dec
in
mov
dec
aam
cwtl
add
inc
shrb
cmp
dec
add
sbb
mov
jle
and
adc
add
aam
clc
test
shr
add
ret
fwait
mov
dec
lar
ljmp
hlt
sub
dec
out
jmp
push
ss
push
lock
leave
push
cltd
mov
adc
imul
xchg
ja
ds
dec
xchg
add
mov
mov
ds
sub
lahf
in
rol
pop
jg
pop
cmpsl
cmp
add
je
push
lods
notb
mov
cli
inc
dec
mov
jmp
cltd
fbld
mov
dec
stc
repz
dec
add
cld
mov
adc
pop
ret
in
xor
fldenv
ds
xor
call
cmpsb
add
sub
ds
into
mov
add
fstpt
push
jne
add
lret
js
cmpsl
jb
dec
outsb
add
mov
aad
xchg
sub
mov
loopne
or
adc
lock
and
inc
loopne
pusha
in
cmp
xlat
add
xchg
sbb
add
std
int
push
fadd
fadds
dec
rcl
fistl
xchg
call
cltd
adc
add
push
imul
push
out
pop
mov
into
fwait
ja
add
fs
push
ror
push
adc
inc
mov
jg
ret
daa
sbb
ficomps
xor
lret
or
mov
loopne
sub
fadds
test
sbb
fistl
cmpsl
lock
push
push
push
mov
shlb
ljmp
and
pop
fistps
test
pop
xchg
idivb
mov
adc
xor
dec
xchg
add
mov
shl
add
lock
adc
jge
sbb
push
mov
add
push
insb
movsb
sbb
xorb
or
dec
push
add
rcl
aad
push
add
enter
xor
into
cmp
leave
loop
rcll
pushf
enter
js
jl
dec
xor
add
mov
adc
ds
fstpl
sub
lret
mov
sub
adc
incb
push
lods
mov
cmpsb
mov
jecxz
adc
and
fmuls
loope
repnz
dec
fmuls
aas
ljmp
addb
push
pushf
mov
fcomi
sub
test
xchg
add
cwtl
cmp
imul
fsubl
inc
add
inc
aam
inc
outsb
mov
jae
add
and
daa
out
xor
rolb
lret
es
jae
xchg
enter
mov
jno
lock
imulb
sahf
add
add
daa
and
add
rolb
hlt
stos
cli
lret
mov
jmp
xchg
sbb
jo
cmc
xor
push
add
outsl
into
lods
xchg
popf
test
dec
mov
add
movsl
mov
or
inc
clc
push
cmp
add
pusha
icebp
pushf
fbld
add
ss
test
jle
sbb
sarb
shl
pop
add
outsl
push
mov
mov
out
imul
inc
fisubrl
ror
out
rcrb
aad
das
and
ret
mov
je
pop
sarb
dec
jp
adc
out
adc
mov
sahf
jbe
mov
push
cmpsb
cwtl
lret
jge
push
mov
int
sbb
pushf
or
mov
shlb
stos
shll
ja
mov
push
and
jns
pop
in
les
push
cmpsl
lods
jnp
loope
leave
mov
push
pop
scas
inc
add
pop
mov
fmuls
insb
add
cmc
fistl
shlb
cmp
add
or
stos
pusha
pusha
cmp
sbbb
xchg
lldt
mov
lret
add
jmp
jle
add
jae
dec
push
clc
or
dec
shlb
xchg
jecxz
icebp
into
pop
jne
adc
addl
adc
inc
adc
loopne
lahf
cltd
or
dec
jg
xor
mov
mov
test
sub
clc
mov
cmp
mov
push
ljmp
xchg
pusha
stos
cwtl
and
add
fwait
push
and
mov
and
pop
cmpsb
xor
inc
enter
lock
mov
sub
pop
sbb
push
test
or
lods
mov
imul
xchg
cs
insb
add
imul
lea
jbe
shlb
pop
jle
out
cmpb
xor
push
int3
push
add
pop
je
sbb
pop
sti
aam
sbb
push
out
testl
shlb
pop
fdivr
ds
sub
sbb
fiadds
es
jns
insl
xor
sbb
arpl
popa
les
adc
mov
scas
daa
and
pushf
sbb
pop
or
aas
add
mov
scas
loope
cmp
iret
dec
cwtl
add
mov
cli
loopne
push
jp
adc
lock
pop
jp
jecxz
or
mov
mov
dec
scas
sbb
test
jae
out
cmpsl
add
fbld
jo
sub
add
test
pushf
mov
cmp
cmpb
sbb
fisubrs
repnz
or
mov
push
mov
mov
int3
xchg
xor
stos
lea
pop
fsubrs
nop
pusha
dec
sub
xor
mov
call
add
lcall
inc
imul
mov
je
into
add
mov
sahf
movzwl
ret
addr16
xchg
ljmp
sbb
out
sbb
cld
sub
ds
sbb
mov
inc
jl
xchg
int3
add
cmc
or
pusha
add
lock
daa
lcall
imulb
add
imul
outsb
sahf
cmp
ljmp
jno
mov
dec
arpl
int3
sbb
sub
jb
mov
inc
sub
test
push
sbb
into
pusha
lret
mov
add
push
cmp
fwait
repnz
xor
fmull
stc
mov
outsl
add
ret
addr16
mov
movsl
and
pop
js
or
pop
jo
add
dec
repnz
jb
es
test
pop
pop
add
add
fcmovnu
jae
add
call
rcrl
out
fiaddl
pop
mov
loopne
loope
add
or
mov
loop
sbb
adc
push
in
add
mov
mov
inc
push
adc
popf
lret
and
xor
mov
add
insb
push
add
in
ret
add
and
dec
add
pop
hlt
leave
movsb
fisubrl
dec
stos
sub
add
cmp
ret
repz
add
jbe
cmp
mov
add
pop
cwtl
loope
imul
inc
mov
mov
hlt
jb
add
shl
xor
cmp
or
loop
mov
inc
add
jmp
cwtl
pop
mov
add
mov
in
push
and
int3
cli
adc
sbb
push
mov
xchg
sub
cmpsb
add
in
push
stos
mov
rorl
arpl
sbbl
and
rcrb
inc
pop
mov
add
iret
or
xchg
xchg
mov
lret
shrb
mov
gs
cmpsb
pop
js
ja,pn
pop
mov
fadd
ljmp
xchg
sub
inc
or
scas
or
fsts
test
cmpsl
jle
add
clc
das
jg
push
hlt
sub
stos
add
dec
add
arpl
xor
push
xchg
cmp
shrb
adc
ret
in
mov
pop
push
aas
sbb
or
iret
inc
and
lock
imul
scas
cmp
cld
adc
pop
mov
mov
jle
shll
stc
cmc
pop
xor
sub
outsl
mov
inc
jae
inc
in
pop
add
pop
ret
push
cmpsb
push
ror
inc
sub
xor
sbb
in
repz
lea
hlt
loop
shl
cmc
add
mov
push
int3
sub
imul
into
sub
dec
cmc
shlb
fsubrl
out
lret
sub
push
push
fstps
dec
mov
pop
dec
mov
and
popf
jae
ret
and
jmp
pop
and
inc
cmp
adc
jae
pop
test
xchg
imul
pcmpgtw
subb
inc
sarb
and
pusha
add
nop
repnz
ja
stos
add
bound
sahf
test
es
in
loopne
pop
add
aaa
jge
mov
ljmp
outsb
or
testl
pop
test
lods
push
push
sbb
in
out
add
std
mov
movsl
shll
shrl
arpl
mov
shl
mov
mov
push
fcoms
mov
push
inc
arpl
jge
lods
aaa
push
loop
mov
xchg
xchg
lock
push
or
cmp
lcall
cmpsl
shlb
add
daa
pop
loope
jge
add
lret
nopl
push
call
cmpsb
cmp
push
add
das
add
cwtl
add
out
in
clc
fisubl
add
pop
test
aam
fisttpll
loope
orb
stc
add
sarb
leave
push
xchg
add
in
rorb
add
jnp
xor
pop
dec
inc
test
inc
dec
lret
push
and
pop
dec
xor
ja
add
dec
and
out
dec
pop
xor
mov
sbb
fs
xchg
cmc
add
inc
dec
jmp
test
add
lea
fbstp
push
ss
fsubs
pop
lahf
or
jnp
scas
cmc
and
jl
and
sarl
mov
or
add
addr16
les
popf
pusha
ss
add
lcall
int
pop
xor
cmpsl
mov
inc
jp
mov
loop
add
icebp
lea
fidivrl
jg
pop
int3
add
imul
push
xchg
push
stc
and
inc
inc
add
push
jl
push
or
mov
lods
loop
add
mov
xor
add
sub
sub
add
push
lahf
rorb
les
add
dec
ljmp
shl
fadd
cmp
sbb
jmp
jge
ds
int
jbe
pusha
clc
add
sbb
pop
cli
scas
pop
jg
sbb
stc
das
ja
pop
cmp
cmp
mov
cmp
in
rcr
add
add
insb
cltd
cmp
add
xchg
pop
add
mov
cmp
leave
add
xchg
add
scas
sub
adc
add
pop
loopne
mov
jp
addb
or
sub
pusha
movsl
mov
ud0
and
in
pop
or
pop
or
jl
insb
sbb
inc
jb
add
dec
rclb
nop
mov
cmp
adc
mov
xchg
scas
imul
push
add
xchg
dec
in
pop
add
outsb
push
sub
or
mov
sbb
mov
xor
mov
ret
lea
insb
cmpsl
call
or
and
add
pop
imul
push
outsl
push
add
push
es
test
mov
ljmp
sbb
fldl
bound
dec
cmp
cld
repz
out
mov
add
hlt
add
cltd
add
xchg
sbb
sbb
clc
mov
mov
imulb
fucomp
shll
add
inc
mov
paddq
icebp
pop
xor
push
rolb
addb
addb
test
adc
pop
jns
insb
mov
imul
insl
fnsave
add
jnp
ret
ss
add
jg
add
inc
repnz
and
add
lcall
add
sub
add
dec
jge
pop
inc
add
test
mov
mov
lds
inc
imul
pop
outsb
mov
popl
cmpsb
test
fbstp
in
add
out
into
dec
sub
lock
ret
inc
cmp
int
data16
xor
sbb
mov
sub
insl
popa
mov
out
add
js
loop
and
push
add
lret
adc
addr16
pop
and
mov
ret
andb
bound
mov
add
jecxz
call
dec
jbe
ljmp
adc
mov
cmp
push
scas
fs
cli
loopne
aam
add
out
mov
outsb
inc
xor
cli
in
add
mov
jg
call
adc
dec
into
test
jl
add
or
jmp
cmp
and
xor
add
nop
leave
pop
mov
pop
addb
jp
inc
sbb
mov
add
inc
dec
inc
pop
adc
lods
rol
jg
lret
cld
imul
mov
loopne
jns
in
push
or
jmp
add
pop
mov
jp
sarb
add
xchg
xor
out
mov
adc
add
add
push
add
sbb
insb
xorl
xchg
mov
xor
in
sbb
loop
repnz
arpl
sbb
in
sbb
testb
mov
push
push
in
add
fdivrp
and
sub
pop
outsb
addb
push
mov
add
sub
aad
sahf
lcall
mov
pushf
add
jb
sub
add
add
jns
dec
inc
ret
nop
adcb
fiadds
cmp
sbb
add
adcb
cmp
jmp
add
ljmp
pop
xor
pop
push
cmp
lock
les
add
mov
add
mov
push
xlat
nop
addr16
icebp
add
aaa
std
mov
push
pop
in
or
mov
cmp
popf
in
add
pmaxsw
add
add
fmull
cwtl
cmpb
xlat
iret
jno
add
loopne
mov
hlt
add
xchg
mov
mov
mov
pop
inc
repz
nop
test
lods
lods
js
sarb
jl
add
leave
sub
int
cld
add
cmc
push
inc
mov
mov
xor
rorb
push
dec
mov
push
inc
fsubrs
push
sbb
pop
stc
rolb
add
mov
movsl
rcl
or
icebp
push
pushl
cwtl
adc
cmp
mov
add
mov
shlb
add
pushf
cmpsb
add
js
lfs
xchg
sti
leave
or
xor
popl
adc
add
jp
inc
jecxz
aam
jo
stos
mov
imull
cwtl
pop
dec
addl
ror
sbb
or
out
imul
mov
cs
mov
jg
lock
sbb
aam
les
sub
pop
xchg
rclb
sub
or
leave
cmp
cli
sti
jge
shufps
add
add
mov
test
out
add
loopne
ss
pop
pop
mov
jo
scas
add
in
pop
nop
add
cmpsl
iret
sub
adc
pop
mov
mov
lret
inc
add
adc
sbb
iret
rorb
rclb
push
loopne
ret
push
in
sbb
adc
add
pop
lea
scas
mov
es
mov
rcll
cs
pop
pop
cmp
sbbl
pop
sub
daa
fs
mov
push
inc
pop
xchg
or
add
orl
lret
stos
pop
pusha
mov
dec
dec
and
clc
mov
repz
xchg
leave
mov
add
push
ret
add
sbb
fisubrs
or
call
pop
xchg
cmp
cs
sarb
xor
and
daa
add
xchg
lahf
pop
ror
mov
dec
jo
pop
fdiv
lret
or
add
cs
in
call
pop
adc
aad
scas
add
insl
cmc
test
mov
pop
out
clc
mov
add
cmp
jge
nop
loope
stos
add
fildl
push
pushl
or
mov
outsb
gs
sbbb
jns
rolb
js
add
pop
xchg
push
adc
ret
hlt
jno
movsl
ds
xchg
sub
daa
and
mov
cmc
add
mov
push
sar
sub
arpl
adc
popf
xchg
mov
icebp
sub
insb
lods
jno
xor
dec
pop
int
inc
fimull
jo
stos
cld
cmpsl
cs
je
push
xor
add
sbb
jle
dec
ja
pop
xchg
aaa
cs
jns
pop
push
mov
xchg
mov
scas
add
xchg
mov
bound
aaa
push
pop
test
lods
sti
adc
sub
dec
scas
mov
insb
mov
mov
sbb
movsb
sub
lea
jle
data16
loopne
test
dec
into
mov
and
add
mov
pop
out
ja
out
push
sbb
add
std
insb
into
add
cmp
jb
test
sub
xchg
inc
aas
scas
cmpb
add
or
cmpb
add
cmp
repnz
es
addb
repz
movsl
sbbl
and
loopne
or
mov
mov
xor
dec
mov
stc
add
and
push
sub
add
pushf
rolb
dec
imul
lahf
nop
push
and
xchg
cld
rolb
jae
and
xchg
int
add
push
clc
adc
xor
add
idivl
mov
add
xchg
test
pop
ss
popa
push
pop
and
lods
xchg
sbb
or
mov
dec
and
add
and
test
sarl
mov
stc
pop
jo
fcompl
rolb
into
mov
add
inc
push
add
daa
loop
dec
dec
clc
add
xlat
aam
push
mov
add
add
mov
je
add
ljmp
in
addl
aas
push
pusha
cmp
mov
fcmovnbe
mov
shrb
mov
repnz
jns
adcl
divl
sbb
jecxz
inc
mov
mov
mov
lret
cli
jle
fstpt
rcl
jb
add
test
insb
adc
push
add
stc
add
negb
aad
mov
dec
cmpsb
pop
fwait
push
push
xor
push
sahf
nop
add
call
add
mov
jno
fisttpl
cmp
fs
jo
roll
shll
xor
jg
dec
scas
bound
cmpsl
and
mov
add
xchg
stos
ret
mov
dec
add
std
mov
pop
pop
xchg
or
mov
add
jg
jne
pop
mov
pop
push
cmp
lock
shrb
xchg
add
pop
mov
adc
jb
push
ss
mov
sub
mov
cli
in
bound
pop
lahf
cmp
fisubs
mov
add
add
fsubp
enter
mov
ljmp
cli
push
shrb
or
add
aad
add
aaa
jb
add
pop
cs
repz
rcll
push
pop
mov
adc
in
daa
sbb
aam
add
cmpsb
outsb
cltd
test
mov
xchg
mov
dec
scas
and
inc
call
add
imul
incl
outsl
push
mov
les
in
enter
add
divl
inc
js
add
repz
lea
pop
cmp
int3
mov
mov
cmp
jg,pt
loopne
imul
leave
xchg
xor
push
or
stc
mov
sbbb
hlt
orb
bt
ds
jg
inc
add
movsl
jle
add
in
jne
add
loopne
addr16
dec
arpl
adc
outsb
orb
loope
xchg
andb
ret
cmc
adc
outsl
add
fcomps
add
icebp
xchg
mov
xchg
enter
in
cmpsl
aam
test
and
adc
xchg
add
cmpb
call
sahf
add
sbb
sbb
stos
fwait
stc
add
pop
jp
lods
out
shrb
cmp
pop
add
and
es
aaa
sub
les
cmpsb
js
or
ss
inc
jmp
push
lcall
nop
ja
or
mov
add
mov
mov
mov
add
out
or
lods
add
jge
cltd
leave
nop
fisubl
pop
pop
cmp
js
ret
mov
mov
adc
std
add
pop
gs
call
cltd
dec
scas
or
push
ja
sub
int3
sub
mov
cmpb
xor
add
jne
cs
add
jmp
int
xlat
pusha
roll
push
shrb
pop
movsb
inc
push
sub
js
dec
leave
insb
add
fmull
jl
js
add
push
popl
mov
adc
xchg
or
pop
xchg
mov
addb
push
mov
fcoms
je
or
sub
sbb
pop
fs
cmc
repnz
faddl
xor
in
cltd
adc
inc
jns
fisttpll
cmp
sbb
fidivrs
ljmp
inc
add
dec
jno
cwtl
fidivrs
xchg
or
rorb
xchg
jp
add
pop
jo
push
outsl
jb
std
scas
test
inc
pop
push
insb
addb
dec
cmp
jmp
fbld
push
dec
lods
in
jmp
or
jo
mov
lods
rorl
aas
xchg
icebp
test
or
loopne
push
push
push
notl
pop
imul
cmp
aas
xlat
test
or
cli
popa
and
cltd
ljmp
sub
dec
add
test
nopl
inc
add
add
les
mov
test
jle
into
sub
outsl
xchg
mov
mov
or
lea
or
cmp
lahf
lret
dec
add
inc
test
add
xchg
sbb
add
and
aas
das
or
pop
add
repnz
and
jno
jnp
push
mov
lods
daa
or
imul
jb
add
lcall
int3
adcl
loope
imul
jl
add
cli
add
movsl
pop
pop
adc
or
bound
add
mov
add
push
mov
cld
lods
add
dec
add
push
cltd
rcrb
jno
push
call
cmp
inc
mov
xchg
and
leave
mov
mov
sub
dec
xchg
cmpsl
add
ret
xchg
ficomps
dec
add
and
cltd
push
cltd
popa
ljmp
in
sbb
dec
mov
jnp
jae
mov
ret
xor
sbb
fisttpll
iret
cmc
add
adc
scas
cmpl
rcrl
fists
add
pop
push
lods
dec
scas
cmc
mov
repnz
sarb
lock
loopne
push
jp
push
add
sub
subb
cld
subb
mov
lds
add
cmp
dec
subb
in
add
adc
fstps
jg
push
testl
fs
pop
add
mov
stc
es
inc
add
int3
and
cld
jle
movsl
pushf
lods
aaa
dec
jnp
pop
jmp
test
imul
mov
shr
sub
push
push
popa
scas
inc
repnz
movsb
jnp
jnp
add
loope
jbe
or
ficompl
push
or
stos
leave
mov
std
sbb
jb
add
cmpsb
inc
out
pop
je
aas
xor
cmpb
cs
cmp
mov
add
fs
adc
dec
nop
add
popf
ljmp
pslld
xchg
mov
bound
out
sub
adc
or
xchg
pop
loope
movl
sti
sub
push
add
dec
adc
add
int
insb
lea
aaa
xchg
or
cld
nop
std
rcrl
add
nop
movsb
cs
inc
loop
sub
or
in
out
lcall
push
andb
call
jnp
mov
lods
out
add
loopne
call
push
cld
push
xchg
fs
xchg
sqrtps
aaa
filds
nop
in
add
fistps
mov
stos
fcompl
add
ret
mov
in
call
lds
adc
add
cmp
movl
add
inc
xchg
mov
add
lcall
add
rolb
jbe
call
cs
cmc
cmp
lret
rcrb
jmp
push
xor
or
lods
mov
in
xor
pop
lret
xchg
flds
push
and
or
jge
fcom
cmp
divb
sub
sub
pop
aas
pop
add
gs
add
xchg
iret
mov
and
push
jns
add
jp
clc
add
xor
cmp
int3
sbb
add
mov
scas
add
gs
jns
je
add
out
sub
push
nop
aad
mov
cli
mov
in
xor
cs
idiv
jne
pop
mov
push
jbe
add
in
sbb
shll
jnp
mov
inc
lret
xchg
lock
add
out
repz
sub
add
jbe
lea
mov
mov
lcall
dec
repnz
ss
aaa
push
mov
insl
dec
cmp
sub
cmp
lret
test
scas
loopne
adc
dec
mov
aad
mov
pop
sbb
outsb
incl
pusha
cmp
dec
add
sub
xor
push
cs
outsb
rorb
push
cmp
add
addl
pop
add
in
insl
push
test
and
movsb
mov
cmc
outsl
mov
loopne
mov
or
or
push
xchg
jo
mov
inc
repnz
out
add
mov
outsb
cs
jae
or
xchg
imul
aad
test
subb
scas
mov
out
inc
xchg
stos
out
lret
push
test
insb
int
loopne
dec
dec
mov
in
inc
mov
sarb
sub
adc
jnp
mov
imul
out
pop
fcmovne
push
add
dec
mov
pop
mov
add
popa
push
mov
mov
int
adc
mov
add
enter
int3
leave
lds
lea
pop
mov
imul
sub
add
scas
mov
cmp
sbb
jge
incb
or
xchg
jl
xchg
fucomp
mulb
data16
mov
add
and
adc
mov
popa
lahf
je
and
cmp
jg
add
inc
enter
add
enter
hlt
popf
xlat
sub
cmp
xchg
mov
lea
xchg
add
fstps
pop
sub
push
add
add
mov
ret
mov
loopne
mov
into
mov
leave
adc
add
mov
out
inc
add
stos
xchg
xchg
dec
mov
loop
loopne
shrb
dec
push
add
push
std
aas
fstp
and
push
sub
pop
jae
int
adc
add
fnstcw
pop
add
pop
dec
loope
rcll
inc
les
xchg
xor
jbe
mov
xchg
mov
out
ret
addb
xchg
add
es
or
jbe
add
add
lret
mov
sbb
add
cltd
roll
jns
sub
pop
repz
mov
insb
gs
push
add
aaa
xor
mov
inc
popf
cwtl
mov
mov
xor
jbe
add
mov
ss
mov
xor
ljmp
add
pop
out
lods
fidivs
std
dec
or
outsl
and
lods
aaa
cmp
or
mov
pop
mov
sub
inc
mov
dec
test
movsbl
hlt
xorb
jae
sbb
lcall
xchg
jmp
outsb
sahf
add
cmp
push
cli
test
push
out
cs
cmp
insl
xchg
pop
jb
or
pop
mov
add
sbb
sbb
add
pop
sar
xchg
fsubr
sarb
jmp
inc
rorl
mov
ss
add
adc
pop
jmp
and
cmpsl
add
adc
mov
mov
aad
loop
pop
xor
aas
lods
icebp
and
dec
mov
xor
inc
adc
sbb
fs
mov
add
orl
jle
insb
test
cld
aad
pop
jne
arpl
adc
jb
pop
in
inc
sti
rcrb
shrb
cmp
mov
mov
loop
lahf
and
divl
dec
imul
inc
repnz
jp
mov
push
cld
test
sar
push
or
add
mov
jae
adc
test
cld
cmp
push
jbe
dec
std
out
add
mov
pop
mov
mov
hlt
popa
xchg
imul
add
push
mov
and
rcl
sub
and
adcb
jo
dec
add
push
aaa
shl
inc
lock
add
mov
cmp
shrl
push
insb
pop
sbb
enter
mov
loopne
mov
stos
add
js
orl
mov
sub
dec
rcll
xor
cwtl
cmpsl
add
loope
imul
mov
push
mov
and
aaa
mov
dec
sbb
cmp
sub
sub
aad
pop
scas
sbb
stc
xlat
sbb
out
cmpsl
addb
fildl
dec
add
dec
sbb
pop
push
scas
add
mov
je
nop
dec
add
fwait
jne
cmp
add
inc
jo
cmp
mov
add
jp
sbb
in
les
and
andb
cli
pop
aad
pop
jbe
mov
add
or
jno
cmp
add
jp
adc
test
xchg
stos
adc
sahf
add
aaa
dec
adc
frstor
ror
or
pop
loop
jno
add
imul
add
push
sbb
push
pop
ja
or
and
es
ss
and
adc
leave
stos
sbb
or
xchg
outsl
sbb
xchg
cmp
je
mov
sub
dec
add
dec
push
aaa
lea
lock
addr16
xor
push
sarb
inc
in
inc
add
dec
cmpsl
or
movsb
loope
sbb
subb
int
stos
add
cmc
or
inc
pop
ljmp
cld
stos
mov
pop
sub
and
add
add
movsb
sbb
inc
daa
add
jmp
add
jg
sub
int
mov
adc
add
xchg
es
out
add
test
in
xchg
lret
xorb
jbe
mov
sbb
mov
xor
lods
add
xchg
add
insl
iret
adc
sbb
nop
testl
pop
adc
cmovnp
mov
es
and
scas
mul
jl
lret
or
ds
pop
mov
gs
push
push
ret
rorb
mov
ja
add
dec
adc
pop
pop
adc
hlt
add
jmp
movsl
andb
inc
add
pop
or
mov
clc
mov
add
ret
insw
pop
push
aam
and
in
lock
das
call
in
xor
mov
insb
add
add
sub
js
xor
out
jp
divb
add
xchg
movb
jl
andb
je
int3
aas
fs
dec
and
cmp
add
lcall
cli
cmpsl
xlat
fsubl
in
ljmpw
sub
cli
sub
pop
xor
sbb
ss
add
mov
jo
lcall
mov
mov
and
push
cmp
test
cwtl
sub
adcb
fisttpl
or
xor
xchg
dec
mov
daa
cmpsl
leave
outsb
fidivrs
add
dec
sbb
test
lea
out
jae
push
add
shlb
sub
mov
insb
pop
nop
or
push
xor
xorl
push
movsl
xor
push
add
mov
mov
ret
jp
cmp
and
enter
dec
repnz
or
sti
test
pop
ss
mov
pop
fwait
add
inc
or
jo
cs
mov
sar
or
ret
sub
sbb
add
ror
mov
lods
pushl
push
pop
mov
popa
push
adc
mov
subb
inc
pop
add
shl
sub
inc
sub
sbb
jp
leave
cwtl
dec
jne
bswap
adc
mov
addl
and
mov
sub
add
movsb
pushf
sar
cmp
leave
arpl
jl
add
pop
pop
orl
insb
or
int3
pusha
fdivs
mov
xchg
sbb
int
repz
js
cmc
add
dec
pusha
cmpsb
mov
mov
adc
or
leave
shlb
stc
push
out
jp
add
mov
add
jo
inc
nop
ss
sbb
xchg
dec
add
enter
popa
inc
push
push
add
rcrb
ss
or
inc
add
jg
ret
ds
or
outsl
xchg
push
mov
xchg
mov
mov
cmp
or
shlb
add
loopne
js
jnp
or
sbb
push
stc
test
rolb
outsl
orl
popa
sbb
add
or
outsb
xchg
push
and
and
mov
loope
lods
add
rcrl
pop
arpl
cmp
scas
iret
hlt
gs
into
retw
ficomps
jg
popf
sbbb
xor
jge
aas
test
ss
rorl
sahf
xor
adc
sbb
xchg
push
mov
aaa
add
add
pop
popa
enter
clc
hlt
lods
hlt
jo
in
pusha
inc
and
out
fdivrl
adc
xchg
test
jbe
cmp
popa
jge
cmp
sbb
xchg
xadd
jl
sbb
scas
add
mov
ja
andl
shrl
mov
add
mov
mov
repz
pop
roll
imul
addl
icebp
jge
jae
daa
mov
hlt
scas
in
mov
imul
jp
pop
push
jne
pusha
jmp
arpl
in
add
add
lcall
sbb
mov
or
popa
jne
or
mov
add
in
rolb
faddl
ret
fcomip
js
dec
bound
cmp
arpl
add
inc
and
mov
or
lret
lahf
loopne
call
data16
cmp
xor
inc
test
enter
and
add
dec
test
push
pop
cmp
subl
stc
add
or
sbb
dec
inc
imul
add
mov
cmc
add
mov
fxch
outsb
fimull
pop
jmp
sub
adc
ljmp
je
xchg
add
ficoml
sbb
frstor
fsubs
jo
scas
js
fstl
jl
and
or
popf
aam
inc
cmpb
mov
je
sbb
mov
xchg
fsub
rolb
testb
ljmp
in
outsb
push
fidivs
leave
add
inc
popf
cmpsl
fwait
outsl
add
add
enter
rcrb
ret
mov
pop
cmpsb
sbb
lret
pop
or
test
divl
add
push
les
xor
addr16
adc
mov
popa
aas
ds
int3
cmp
insb
or
clc
aam
ds
add
mov
repz
add
ret
sbb
add
adc
inc
call
sub
sbb
push
mov
jae
or
xor
outsb
cmpsb
je
lret
fstps
pop
push
pop
push
xchg
loope
mov
and
mov
ds
xchg
pop
push
xor
aas
xchg
push
shufps
out
add
inc
test
or
or
scas
add
jb
loopne
mov
sub
ljmp
outsb
or
pop
dec
push
add
insl
mov
cmpps
pop
add
push
loope
enter
stos
rorb
add
fcmovu
sub
push
ja
mov
inc
jmp
jmp
xor
call
add
mov
insb
xchg
sbb
xor
fidivl
lock
stos
clc
jne
sub
insl
ret
mov
mov
jge
adc
adc
or
and
shrb
mov
mov
out
pop
jl
cmp
pop
loopne
jl
mov
mov
flds
jl
add
and
xchg
push
lods
faddl
push
push
adc
inc
dec
lods
jnp
in
fsubl
xor
jno
iret
add
dec
mov
daa
popl
xchg
sub
jp
add
in
xlat
add
lahf
fbstp
adc
mov
test
jl
push
add
movsl
ja
lahf
push
call
mov
dec
add
mov
jecxz
ltr
leave
js
add
rolb
lea
cwtl
cld
int
nop
mov
jns
popf
mov
add
fdivp
mov
mov
ret
cmp
add
stc
cmp
pop
andl
or
add
xlat
cmp
aam
push
dec
add
iret
repz
jnp
adc
mov
rcrb
pusha
pushl
add
mov
sub
dec
rorl
filds
lcall
stos
push
test
push
pop
push
inc
dec
cmpl
ja
and
cmp
mov
sbb
add
add
aad
cs
mov
add
leave
cmc
and
mov
js
arpl
sbb
add
adc
js
pop
push
lock
inc
or
xlat
mov
cmp
dec
dec
inc
add
daa
mov
adc
mov
shlb
push
jo
mov
xor
push
add
xchg
inc
and
and
aaa
dec
cmpsl
in
or
xchg
iret
cmp
clc
pushf
sub
test
xchg
cmc
inc
add
push
push
rclb
sbbl
hlt
mov
imul
or
pop
loop
scas
pushf
popf
mov
dec
mov
or
inc
add
or
bound
xchg
push
imul
push
int
bnd
push
add
dec
sub
rol
xor
add
repnz
js
loopnew
std
into
rclb
aad
pop
add
add
cmpsl
jns
xchg
outsl
mov
arpl
push
jmp
mov
or
push
cmp
jmp
cmp
icebp
cmp
adc
mov
jnp
filds
push
xor
add
jo
jae
or
repz
cmp
call
lds
adc
sbb
mov
es
add
or
mov
cmp
cmp
jnp
mov
mov
pop
js
xchg
mov
add
sbb
loopne
das
mov
jbe
rol
adc
adc
mov
sbb
enter
jbe
pop
std
push
xchg
test
out
xor
or
scas
rclb
jp
ret
mov
mov
add
js,pt
inc
imul
push
add
push
cmc
dec
mov
leave
add
lods
sbb
lea
js
jge
add
xchg
test
or
add
cmp
mulb
ficompl
add
and
add
insl
in
sti
add
ret
imul
add
xchg
pop
cmp
xchg
hlt
inc
mov
insb
sub
add
mov
sbb
xor
lock
add
fmull
mov
push
cli
dec
add
loop
mov
sbb
cmp
jae
int
or
pushw
add
imul
in
push
add
xor
add
push
ret
xorb
loop
inc
add
xlat
push
adc
jb
xor
std
fs
xchg
add
ljmp
ret
in
add
mov
xchg
stos
xchg
sbb
ret
adc
and
xchg
xor
cmp
rolb
in
loope
and
ljmp
xor
xchg
sub
fneni(8087
add
lods
imul
add
sbb
push
pop
or
mov
cli
add
add
push
lahf
out
jmp
adc
ds
repz
insb
inc
and
inc
dec
add
js
push
xor
mov
cmpsb
inc
cmc
data16
repnz
inc
mov
xchg
out
lods
imul
or
insl
cmp
leave
pop
test
push
roll
lods
jnp
fsub
push
js
ljmp
enter
mov
mov
add
cmp
cld
adc
pusha
dec
adc
adc
add
jae
pop
sbb
lds
sub
iret
rcrl
ret
cli
mov
pushf
jl
xchg
fldl
push
mov
pop
adc
loop
inc
shrb
es
xchg
add
sub
dec
cltd
jns
orl
enter
mov
sahf
sbb
pusha
shl
sub
push
cltd
or
push
movsb
movsl
add
enter
jle
adc
and
in
jmp
mov
iret
fs
push
out
dec
add
fnstenv
xor
test
xor
xchg
sub
mov
mov
cltd
out
and
mov
lret
pop
pop
push
mov
jb
std
scas
sarb
xchg
cmp
loopne
mov
xchg
jmp
add
pushf
push
jo
sub
push
lahf
sti
test
inc
jnp
imul
aad
cltd
xor
sbb
add
mov
aam
jp
cmp
popf
jecxz
es
add
adc
pop
pmaddwd
or
rorl
mov
add
into
in
frstor
es
add
popf
mov
insb
add
jge
lods
test
in
pop
ror
fimull
or
mov
aam
movb
andl
add
inc
int3
in
inc
push
and
or
stc
lahf
add
cwtl
mov
xchg
add
mov
subl
pop
dec
in
pop
add
mov
jbe
scas
xchg
or
gs
pop
call
dec
jb
add
imul
loope
cmp
add
je
jbe
pop
aam
add
ds
fs
jg
adc
lret
pop
xchg
or
fsubrp
insl
inc
cmpb
cli
ret
stos
or
add
test
sbb
jo
lahf
jp
sbbb
xor
mov
bound
cmp
aad
lcall
js
cmc
mov
cwtl
sub
pop
push
mov
mov
adc
ret
imul
push
inc
mov
cmpl
sbb
imul
add
pop
xorb
scas
mov
fwait
dec
mov
push
fs
leave
mov
add
sub
cmp
pop
add
mov
mov
add
stos
lcall
fildl
imul
sbb
cli
pop
fmul
dec
sbb
ds
mov
rorl
imul
pop
and
inc
pop
cwtl
xchg
add
add
and
fimuls
add
shlb
verr
cmpsb
fprem
cmp
cli
hlt
add
insb
push
or
sarl
sub
test
and
test
imul
xor
add
pop
push
mov
mov
jno
inc
ficoms
add
fxch
add
cwtl
rcrl
xchg
push
test
push
popa
sbb
lods
sbb
dec
push
and
mov
add
outsl
pop
das
or
insb
int3
inc
cmp
std
stc
add
sub
jle
or
xchg
fistps
inc
add
inc
and
in
hlt
fidivl
stc
out
adc
mov
clc
ds
cmp
js
es
in
sarl
pop
mov
mov
mov
add
or
insl
mov
xlat
stc
dec
lret
mov
orb
mov
pop
mov
ret
insb
push
pop
cs
sbb
in
mov
clc
cmp
push
add
inc
jns
std
sarb
cmpsb
lea
add
inc
mov
add
lcall
jne
add
xchg
sti
and
test
add
sub
adc
sub
mov
lods
add
adc
add
fdivrp
mov
jecxz
xchg
pop
xchg
pop
loopne
ss
xchg
push
add
push
inc
sub
mov
in
lods
negb
add
pop
jae
pushf
pop
xchg
and
xchg
addb
cmp
sbb
rolb
mov
mov
pop
adc
jbe
inc
mov
nop
and
push
mov
sbb
add
bound
cwtl
add
stc
add
push
shr
rol
hlt
lea
je
cmp
fiadds
out
xor
jmp
xchg
push
sarb
ja
add
dec
adc
fidivrl
lret
add
sub
add
xor
ficomps
pop
xchg
enter
pop
sar
pop
push
cmp
dec
les
push
pop
mov
pop
xchg
and
mov
sub
mov
test
jnp
jecxz
jns
mov
imul
push
sbb
mov
jbe
iret
mov
pop
loope
pop
sbb
sub
cmpsl
movsb
loope
pop
or
test
sub
xchg
fcom
lret
mov
add
xchg
mov
aaa
xor
add
jo
push
jmp
or
ds
in
jns
call
xchg
dec
mov
mov
add
mov
pop
in
out
add
and
aas
mov
mov
add
dec
xor
mov
jl
sbb
mov
xchg
jmp
insb
sbbb
call
xor
repz
add
popa
add
pop
insb
jmp
push
adcb
sarb
add
stos
pop
aad
sti
ret
add
cli
push
push
add
mov
ja
or
add
xlat
mov
add
je
repz
sahf
dec
addl
lret
sbb
add
sub
push
or
adc
mov
sbb
mov
add
outsl
test
je
xor
and
jle
inc
gs
add
jae
movsb
addb
or
pop
or
cmp
xchg
inc
sbb
in
xchg
cmp
add
sbb
cwtl
cld
add
je
or
inc
or
add
and
push
and
xchg
inc
js
sub
fstpl
pusha
mov
fs
jno
and
jae
cltd
or
mov
fiaddl
pushf
mov
add
push
xchg
rorb
inc
xchg
add
mov
or
dec
and
jb
xchg
sub
sub
std
iret
push
leave
mov
jecxz
out
lret
and
push
dec
std
in
adc
clc
add
jnp
add
scas
cwtl
jl
push
js
mov
add
mov
mov
faddl
or
cmc
ds
and
jno
push
lds
test
jo
cmc
mov
xor
lds
mov
cld
xor
loop
jg
add
fstpt
ljmp
add
xor
and
icebp
pop
imul
add
add
pop
adc
dec
mov
test
addl
cltd
shl
mov
xor
sub
push
add
pop
enter
jle
mov
addr16
imul
sub
lods
mov
adc
lahf
xchg
dec
xlat
inc
add
dec
xorb
jmp
ds
clc
mulb
inc
xor
imul
sbb
cmp
icebp
shlb
loop
or
add
xchg
lcall
rclb
aaa
pop
jmp
push
cmpsb
test
xor
test
addr16
lahf
add
sbb
pop
jno
fisubs
lods
add
adc
mov
outsl
or
imul
pop
in
add
stos
add
lods
sbb
add
jbe
inc
sti
and
daa
jo
add
dec
test
or
jmp
into
push
cmp
xchg
add
adc
sbb
test
cld
jnp
les
movl
pop
jne
cmp
outsb
clc
cmp
cmp
pop
enter
xor
sbb
in
out
sbb
mov
xchg
jge
pushf
rcr
scas
add
sub
dec
add
dec
jge
sub
push
add
les
vpand
in
filds
xor
add
icebp
ja
cmp
xor
and
push
mov
cmp
and
movsl
subb
add
lret
sbb
pop
fsubs
or
xor
cs
jb
push
in
data16
push
push
pop
xor
sub
or
nop
jo
add
mov
icebp
push
add
sbb
pop
sahf
xchg
xchg
add
es
ja
les
or
fiaddl
pop
sbbl
mov
add
jecxz
cmp
mov
pop
enter
push
pop
stos
in
add
mov
xchg
pop
mov
add
mov
add
jnp
mov
rcl
add
test
xchg
add
cli
jmp
and
add
cltd
mov
jo
or
lods
add
fimuls
jecxz
cmp
inc
mov
bound
or
cltd
iret
in
and
cmc
shrl
cs
jne
add
rclb
inc
sub
aas
dec
push
xlat
popa
hlt
in
cmpps
cmp
mov
mov
fwait
push
inc
fsqrt
test
sahf
xchg
das
dec
addb
fwait
push
movl
int3
xlat
mov
push
adc
outsb
jg
mov
cmpsb
or
pop
subb
jne
mov
out
sahf
mov
fistpl
sti
add
test
lds
sbb
stos
add
mov
push
add
pop
call
js
mov
push
shr
lods
xchg
nop
adc
test
jl
or
xchg
mov
xchg
clc
fnstcw
aam
xor
dec
mov
sbb
xchg
add
fistl
mov
jo
adc
test
xchg
mov
movsb
add
int3
scas
cvtdq2ps
add
into
add
push
pop
loopne
movsl
adc
enter
mov
add
cmp
pop
cmp
test
addb
imul
mov
aaa
and
mov
cmp
xchg
add
pop
shl
lea
and
scas
dec
lods
and
xchg
mov
hlt
pop
sbb
pop
jae
inc
cwtl
jne
ret
mov
pushf
sub
and
enter
add
push
leave
fistpl
or
fldenv
cmp
cld
ret
mov
subl
inc
das
lret
bound
mov
rol
lods
lret
test
pop
mov
mov
pushf
dec
add
mov
aas
or
inc
sbb
pop
ljmp
jb
lahf
mov
push
jnp
and
add
jmp
sarl
imul
adc
loop
es
xchg
mov
cmpsl
int3
clc
jge
in
mov
pop
in
loope
add
lcall
add
clc
pop
push
fistpl
jo
add
xor
adc
imul
js
xlat
or
ds
add
fs
cmp
adc
imul
je
pop
jl
int
outsb
inc
mov
sbb
add
mov
or
jle
sub
ja
add
int3
push
xchg
fwait
xor
movsb
and
add
adcb
push
or
mov
divl
add
jmp
xchg
pop
add
push
add
bound
mov
aaa
lret
add
in
jmp
enter
incb
or
test
movl
xchg
lock
out
sub
sbb
sbb
mov
add
or
dec
push
andl
out
in
push
pop
or
xor
push
xchg
imul
mov
mov
inc
pop
imul
nop
je
adc
mov
in
int
cli
mov
aad
pop
xor
pop
scas
push
dec
inc
fistps
add
call
xor
add
test
icebp
jmp
int3
pop
outsb
jnp
sti
push
outsl
xor
je
xor
rcrl
andb
fsubrs
cmpsl
add
shlb
out
cwtl
cmp
inc
push
ja
pop
or
dec
fwait
jno
sarb
xchg
lock
or
xor
pop
or
push
call
rorb
out
mov
add
add
jns
push
out
or
popf
mov
pop
push
lods
sarb
mov
movaps
jae
jnp
scas
mov
or
ds
sahf
fnstsw
in
add
ljmp
pusha
mov
jbe
in
and
sub
sbb
or
or
mov
add
inc
arpl
add
xchg
into
fcmove
dec
lods
mov
lock
mov
test
inc
add
mov
dec
add
arpl
shl
xor
sbb
fmulp
cltd
dec
sarb
aad
dec
jae
aaa
out
xor
xor
sub
dec
jne
add
inc
lea
std
mov
lret
out
rorl
mov
xor
negb
stos
jae
add
dec
mov
mov
sarb
xor
sbb
cmpsl
cli
inc
inc
les
push
and
add
pop
push
mov
pusha
in
jp
out
sbb
lds
add
cmp
jecxz
gs
sbb
imul
out
lods
mov
out
shl
xchg
out
inc
neg
clc
lahf
lock
jo
cmp
mov
pop
push
lods
das
imul
stos
dec
lds
scas
add
mov
and
inc
insl
fdivs
ja
pop
jge
fisttpl
add
cmp
push
nop
lds
mov
in
jbe
push
push
pop
cmc
fsubr
ljmp
pop
pusha
mov
pop
adc
int3
pop
jge
testb
inc
add
pop
or
test
cwtl
out
sub
adcl
iret
sbb
add
fldcw
xor
aad
dec
mov
xchg
out
jmp
addr16
inc
aas
les
loopne
fidivrs
roll
mov
pop
xchg
lret
aam
add
add
data16
push
sbb
out
pop
jl
add
push
pop
and
mov
roll
mov
mov
sbb
addl
pop
and
sub
sbb
mov
xor
rcll
inc
cwtl
iret
loopne
mov
pop
pop
out
cltd
loopne
jle
push
push
fwait
adc
lahf
add
insl
lods
inc
int
or
cld
inc
adc
xor
ss
cmp
mov
and
jmp
imul
loopne
mov
lahf
add
icebp
imul
and
jnp
adc
ljmp
data16
add
aaa
or
sub
and
push
in
inc
dec
lock
add
popa
push
add
mov
outsl
dec
jmp
ror
movsb
cmp
add
cs
push
sub
adc
aas
add
push
push
daa
add
mov
std
dec
add
into
loopne
in
test
adc
push
in
mov
andl
and
or
scas
pop
flds
insl
push
fsubrl
fwait
push
jge
pop
cmpsb
add
push
lahf
or
add
mov
add
dec
inc
lock
add
xor
cmpsb
add
push
insb
jge
cmp
sub
clc
icebp
lret
add
scas
in
inc
mov
dec
add
add
insl
into
mov
fucomp
jne
mov
dec
xchg
add
cmc
inc
inc
mov
lock
xchg
pusha
xchg
dec
mov
in
push
outsl
push
push
pushf
mov
leave
inc
fiadds
cwtl
ljmp
inc
or
cltd
mov
cld
mov
jle
add
jns
movb
inc
cmpsl
loop
adc
xorb
rorb
mov
popl
jl
add
and
sbb
stc
cmp
loopne
scas
mov
jle
sarb
ja
pop
les
je
inc
pushf
decl
mov
test
pop
inc
xor
mov
cmp
adc
jmp
push
fdivrs
lock
or
jbe
sub
aad
stc
adc
sub
les
and
sbb
mov
mov
lds
pushf
xor
js
xchg
andb
bound
sbb
fs
sbb
jb
add
std
roll
add
aaa
jmp
mov
add
push
mov
fldl
or
test
lahf
out
add
xor
loop
mov
lods
add
jo
add
cmp
fiadds
or
es
movsb
add
xor
insb
daa
push
loopne
loope
imul
in
jns
add
push
loop
mov
push
add
mov
xchg
mov
and
repnz
and
add
push
dec
ror
add
cmc
adc
stos
fnsave
add
lret
scas
mov
add
pop
insl
je
out
inc
addl
sub
rorl
jmp
dec
or
sub
jmp
push
add
in
lock
cmp
adc
imul
mov
pop
xchg
mov
mov
pop
jg
popf
sub
cmp
int
cmpsb
je
mull
and
ja
cld
sub
mov
cmp
mov
test
inc
fiaddl
sbb
push
mov
add
negb
adc
movsl
add
data16
mov
xor
xchg
enter
test
cwtl
ds
scas
insl
add
aas
pushf
and
insb
sbb
js
inc
popa
movsb
loop
les
cmp
das
add
loopne
cld
test
rclb
ficompl
or
pop
add
int3
cmpsl
call
add
xchg
cwtl
jecxz
jmp
sbbb
inc
lret
addl
ss
lock
push
cmp
mov
dec
int
xchg
adc
add
lds
insb
add
push
or
shll
sub
dec
ret
loopne
imul
shrb
jno
js
cmp
pop
addl
cmpsb
sbbb
pop
add
ja
cmp
mov
enter
push
in
push
out
pop
cmp
shlb
and
push
and
es
jmp
add
or
cmpsb
lret
in
xor
std
push
pop
push
cld
lahf
push
aam
mov
add
add
cmp
cmp
cmp
stc
dec
daa
lret
shlb
testl
pop
lock
push
or
daa
or
xchg
aaa
repz
push
out
cmpsl
ljmp
add
push
loope
out
sub
pop
bswap
movsl
cmpsb
aas
mulb
mov
dec
add
out
test
cmp
push
fbld
push
mov
push
loopne
in
cs
add
orl
pusha
movsb
fwait
std
mov
mov
add
lcall
in
push
nop
push
loop
and
inc
push
or
in
or
mov
not
repz
fs
push
dec
add
inc
mov
nop
add
mov
into
dec
je
add
jbe
aam
xchg
lret
mov
fwait
jne
mov
mov
js
aaa
inc
sar
ss
push
andb
mov
out
add
lret
push
jb
adc
add
jae
jmp
push
jmp
hlt
leave
std
out
nop
cmp
and
out
lds
test
add
inc
jbe
xchg
jns
push
xchg
out
jae
js
je
and
and
adc
mov
fisubs
out
push
sarl
add
sub
lds
subb
out
call
shll
add
sbb
int3
cld
movsb
mov
push
sbb
pop
lret
in
arpl
mov
sti
mov
sbb
xor
movl
das
dec
or
add
shrl
mov
add
aas
add
inc
push
mov
cwtl
in
push
int3
mov
jae
sub
shrb
cmp
mov
cmp
mov
pop
int3
shrl
icebp
jbe
loop
push
in
lea
mov
in
xor
add
adc
add
mov
cwtl
jb
shrl
jecxz
add
pushf
loopne
arpl
in
in
add
or
mov
stos
jne
ret
icebp
lcall
push
fdivs
es
cmp
cli
xor
dec
loop
add
stos
aaa
mov
or
ja
les
mov
xor
rcr
je
add
cmp
inc
pop
movsb
sbb
dec
out
idiv
jnp
push
mov
std
mov
push
jp
sub
push
rorb
add
in
int3
adc
ss
fstpl
lret
pop
push
xchg
imul
outsl
mov
sbb
shl
inc
nop
add
lods
push
ja
lret
or
xchg
cld
roll
jb
mov
lea
clc
push
add
fidivs
int3
jo
pop
lods
imul
out
dec
andb
data16
add
adc
push
ljmp
data16
inc
add
mov
lds
mov
fdiv
in
add
lahf
in
shrl
xor
stos
push
push
push
add
out
push
adc
pop
call
and
sbb
bound
gs
ja
pop
outsb
and
insb
mov
xchg
add
ja
lret
xor
add
arpl
pop
or
leave
mov
push
lret
push
insb
sbb
lods
sub
xchg
aad
movsl
jo
loop
fsubrl
sbb
fwait
pop
cmp
cwtl
hlt
add
imul
data16
sbb
sbb
cmp
insb
or
in
adcb
pusha
es
xor
xchg
iret
stc
adc
addr16
test
pop
sbb
pop
pusha
out
scas
adc
add
cs
cwtl
jge
xlat
add
jo
je
adc
mov
add
pop
loope
dec
inc
fs
cmpsl
dec
xchg
int3
xchg
stc
add
test
ret
pop
enter
cmp
pop
adc
imulb
add
fisubl
out
mov
fs
lods
rcrl
cmpsb
or
outsl
loopne
push
popa
test
cmp
lahf
cmp
pusha
sub
pusha
add
add
sbb
xlat
mov
xchg
add
aam
stos
cmp
inc
ja
dec
adc
pop
mov
inc
jl
and
mov
and
fsubrl
imul
and
jg
xchg
mov
sbb
cmp
popf
rcrl
xorb
mov
cmp
push
sub
insl
dec
cmpsb
xor
pop
sbb
mov
fcmovb
and
data16
add
popf
pop
cmp
jmp
add
push
jne
mov
add
hlt
xorl
jno,pt
das
xor
adc
lahf
pop
sbb
or
pop
sti
rclb
push
pop
out
add
cmp
icebp
dec
mov
cmp
inc
add
push
loope
jecxz
rcrl
add
ljmp
dec
add
push
outsb
insb
and
cwtl
add
inc
pop
pop
dec
mov
and
jo
idivl
and
orl
das
xchg
orb
loope
fimuls
xor
movsb
cltd
add
sarb
jmp
xchg
xchg
js
push
fwait
ret
clc
cli
or
jle
mov
cltd
jmp
mov
jmp
mov
movsl
iret
cmc
rcrl
pop
and
sub
add
mov
mov
xchg
leave
push
add
pop
mov
xchg
push
or
jb
repz
cmp
add
mov
add
cli
ljmp
leave
test
mov
aas
clc
orb
mov
add
lret
sbb
dec
es
sub
add
cmpsb
test
push
hlt
aas
jge
data16
and
mov
pop
sbb
add
inc
cmp
popa
adc
inc
dec
iret
mov
adc
jbe
dec
popl
or
cmp
ljmp
ret
mov
or
jnp
sbb
push
jbe
dec
mov
xchg
jmp
push
fildl
cmp
mov
add
arpl
lods
push
daa
nop
mov
imul
iret
cld
test
pop
or
cmp
mov
cmp
idiv
cmpsl
inc
pop
pop
inc
ljmp
in
movsb
sarl
jns
cmpsb
mov
jae
pop
add
add
push
inc
dec
mov
mov
es
int3
jecxz
add
or
addb
cmp
jo
add
jae
mov
lret
cltd
cmp
mov
add
jge
push
arpl
add
xchg
addr16
or
std
push
shlb
add
push
mov
cli
jge
pop
and
fsubrp
jo
outsl
and
push
ja
mov
stc
in
add
dec
inc
movsb
mov
add
popl
cli
enter
jmp
push
into
mov
imul
orl
lock
mov
jb
call
add
inc
jno
mov
clc
orb
rcl
sarl
xchg
scas
iret
add
jne
andl
cmp
xchg
roll
test
js
popf
int3
lcall
cmp
adc
sub
add
bound
fidivs
pushf
jae
rcrb
xchg
push
imul
mov
out
inc
arpl
xchg
add
es
repz
mov
jge
jle
dec
or
jno
add
icebp
push
pop
push
push
gs
ficomps
inc
shll
jge
add
pop
cmp
ja
add
insl
adc
mov
pop
or
xchg
inc
in
iret
adc
jns
dec
add
es
mov
xchg
sbb
dec
rolb
add
push
test
pop
add
sbb
sub
aaa
bnd
out
jmp
mov
xor
test
inc
test
lock
shrl
inc
xchg
jecxz
add
and
add
jae
shlb
jecxz
enter
mov
subb
pop
add
mov
cmpsl
popa
add
sbb
xchg
sbb
enter
test
add
mov
cld
adc
js
out
ljmp
or
xchg
sub
push
incl
jns
fistps
adc
jp
popa
mov
test
lcall
call
inc
movsl
popa
lock
add
repz
enter
roll
mov
loopne
mov
jp
or
adc
add
sbb
jle
sbb
stos
mov
bound
jo
inc
push
rolb
mov
dec
ljmp
lock
add
add
mov
mov
mov
sbb
sbb
xor
add
push
or
addr16
pop
inc
rolb
add
enter
fimuls
dec
mov
add
mov
cmp
fsubrl
add
mov
packsswb
mov
loope
inc
mov
push
out
add
lret
hlt
jo
or
add
mov
mov
add
inc
imulb
push
fwait
ret
stos
sub
flds
repnz
popa
mov
push
sbb
push
and
jae
add
cmp
int3
or
loopne
add
mov
inc
imul
pop
movb
push
mul
mov
mov
xchg
or
mov
loopne
or
insb
sarb
sbb
add
and
dec
push
sbb
mov
adc
imul
shrb
add
notl
pop
pop
loop
rolb
faddp
fsubrl
add
xor
cld
cmp
dec
adc
add
test
sar
jo
xchg
add
pop
mov
sti
sbb
dec
inc
ret
add
mov
dec
popf
stc
addb
pop
out
or
cmp
addl
inc
pop
push
and
and
sti
repnz
adc
fs
jmp
xchg
xor
adcb
dec
inc
add
dec
movsl
outsb
push
shrl
call
sub
aad
pop
or
imul
das
int3
mov
add
push
or
stos
add
insb
and
jmp
xchg
sbb
add
out
mov
adc
in
xchg
or
and
mov
add
jo
mov
arpl
mov
in
inc
popf
repz
xor
cmp
shrl
daa
fwait
push
pop
sbb
sahf
mov
add
aaa
sub
add
into
addb
xchg
push
sti
push
cmc
adc
enter
insb
ljmp
add
arpl
lret
jne
lods
add
add
sub
sar
inc
js
jbe
popf
jno
pop
pushf
cmc
sub
lds
or
out
scas
jae
in
jmp
pop
aas
push
sbb
pop
mov
adc
push
jmp
fcmovnu
add
mov
sbb
cld
popf
sbb
std
push
xchg
lcall
jae
addr16
and
xor
icebp
popl
jl
fisubs
mov
jmp
lcall
lea
lods
shlb
sub
pushf
hlt
pop
adc
adc
mov
sbb
stos
outsl
add
jp
jne
nop
pop
inc
add
fucomp
dec
bound
cmc
aas
jae
mov
shrl
add
aam
ss
int3
fdivrl
add
xchg
adc
stos
mov
dec
sbb
push
mov
test
pop
cmp
and
mov
cltd
negb
pop
fcmovu
loopne
es
jp
cmp
pop
movsl
sbb
cmpb
pop
add
fmuls
sub
inc
fdiv
add
mov
xchg
pop
in
add
pop
jecxz
and
pop
pop
test
mov
ljmp
sub
jp
shrb
sub
es
and
pop
stc
mov
add
jb
xchg
add
or
popw
fisubrs
lcall
fwait
insb
lods
inc
les
add
leave
push
jbe
lret
mov
adc
jle
add
dec
xor
pop
inc
cwtl
fisttps
movsl
and
test
xchg
or
jbe
mov
cwtl
add
outsl
rorl
lahf
and
jle
add
sarb
dec
sub
inc
pop
pop
int3
sub
xchg
cwtl
dec
in
ja
mov
or
fiadds
lea
jge
mov
lcall
cmp
subb
dec
roll
cmp
xchg
cltd
xchg
mov
stos
and
call
movsl
mov
rcr
xor
push
push
mov
sbb
mov
pop
add
dec
fists
call
psubb
lea
enter
dec
mov
aas
push
push
cmpsl
mov
xor
movzwl
xchg
jmp
mov
mov
cmc
add
in
fldenv
imul
pop
cmpsb
mov
ret
test
lods
sub
push
into
mov
xchg
sbb
sbb
mov
sbb
pusha
xor
jecxz
jne
sahf
pop
add
lods
dec
fnstenv
mov
fldl
inc
aas
pop
in
imul
inc
cmp
add
cld
xor
dec
aam
fcmovbe
xchg
pop
setbe
add
mov
sbb
movsb
stos
push
pop
outsl
mov
sub
std
push
ds
testb
jp
adc
in
add
mov
jb
inc
test
lods
into
adc
stc
iret
add
or
jo
sub
dec
xchg
jb
mov
pop
add
sbb
fs
pushf
cmp
inc
sbbl
add
fwait
add
mov
test
push
stos
or
xchg
sub
cmpsl
pop
and
push
and
leave
cmp
std
or
test
lods
rolb
daa
mov
jb
sbb
cmp
subb
push
aaa
cmp
testb
imul
jg
add
mov
dec
xchg
lahf
ror
mov
xchg
aam
fsubr
stos
shr
and
movsl
fstpl
sbb
xor
int
add
mov
jl
jecxz
xchg
mov
daa
rolb
add
test
ja
movsl
lea
movsb
dec
jns
iret
add
cmp
inc
dec
outsl
push
pop
add
aaa
mov
sub
mov
inc
dec
cmpsb
push
and
pop
xor
clc
or
jge
sbb
xchg
fildll
imul
pop
insl
pusha
mov
addr16
fisubl
adc
adcb
inc
adc
sbb
push
and
fucomip
mov
inc
and
jno
sarl
lea
add
push
out
outsl
ret
push
addr16
cmp
dec
mov
add
das
xor
rcrl
pop
or
repz
push
jge
mov
add
xchg
xchg
push
aas
outsb
mov
repz
test
add
xor
add
add
push
cltd
push
lods
xor
inc
pusha
ret
test
xlat
mov
adc
xchg
push
and
push
fistps
iret
mov
mov
jecxz
sti
cmp
shlb
add
cmpl
add
neg
add
push
data16
std
ret
mov
pop
mov
repnz
movsb
pop
in
mov
std
popf
mov
add
lret
divb
mov
lret
fcmovnb
or
ljmp
loopne
cmpsb
scas
lcall
dec
es
add
cmp
imul
dec
add
scas
jge
xlat
lock
or
jne
add
imul
adc
cltd
scas
inc
push
mov
leave
std
inc
jge
mov
cmp
and
fstps
add
push
ret
lods
mov
nop
lods
scas
insl
into
jns
fs
mov
adc
add
shlb
pusha
push
out
je
sub
add
lahf
imul
cwtl
xor
mov
jb
addb
popa
stc
sbb
enter
mov
sarb
test
cmp
shr
add
xchg
lret
mov
mov
cmc
stos
shl
loope
cmpb
test
adc
lret
leave
jg
mov
lods
inc
add
push
xchg
jge
or
push
inc
mov
pop
sub
in
mov
add
jo
cmp
mov
addb
aas
pop
mov
jae
fnstcw
in
sbb
mov
xor
adc
adc
enter
add
push
mov
sbb
psubsb
ret
gs
aad
mov
push
xchg
cwtl
cmpsb
jg
movsl
dec
add
bound
mov
xchg
add
iret
push
test
out
adc
mov
aaa
or
sbb
xchg
shll
add
mul
or
seta
add
mov
xchg
xor
sub
lock
je
dec
add
mov
or
fisubrs
stos
js
mov
cwtl
xchg
inc
ret
lds
mov
repnz
and
add
jbe
push
mov
insb
xor
or
jge
fistpll
and
sbb
xchg
test
pop
into
cmpsb
xor
sub
jno
lods
or
stc
add
pop
aaa
inc
add
int3
ja
cmpsl
les
add
mov
jae
add
rorb
mov
add
inc
jg
lods
scas
jb
push
imul
fcom
inc
pop
inc
adc
jecxz
xchg
dec
xor
xor
push
add
xor
lds
push
add
ljmp
dec
add
cld
filds
sub
ja
rol
jnp
mov
cmp
mov
aaa
sbbb
and
imul
pusha
pop
xchg
fldt
aad
mov
xor
test
hlt
cmovno
loopne
sar
lods
push
test
popa
xor
or
mov
hlt
mov
nop
imul
push
mov
stos
fbld
cmp
popl
pop
adc
mov
push
repz
int3
jmp
push
sarl
cwtl
or
jbe
pop
loopne
cmc
filds
and
lret
jno
popf
push
int3
add
cmp
pusha
xor
inc
cs
insb
add
fldenv
add
int
adc
xor
xchg
pop
popa
cmp
xor
push
add
mov
lret
or
add
xchg
leave
xor
mov
add
cmp
xchg
add
call
out
add
mov
mov
jns
add
adc
jl
add
mov
add
hlt
push
pop
add
sbbl
fwait
in
sub
fs
cmp
add
hlt
dec
add
jae
enter
sbb
jb
jge
dec
cmc
add
xchg
in
and
in
fwait
and
add
scas
xchg
mov
sub
outsl
fisubrs
sbb
cltd
xchg
aas
xlat
insb
xchg
popa
adc
dec
cwtl
add
sub
setge
ja
add
bound
pop
repz
aas
add
call
jnp
aad
data16
cmpb
add
movsl
subb
ja
rorl
mov
and
ss
out
cmpsl
cmp
push
loope
mov
add
leave
ret
stos
sbbl
and
fnsave
pusha
dec
mov
pop
add
adc
jno
push
mov
cs
scas
dec
bound
push
arpl
jl
xchg
sbbl
ljmp
int
fwait
add
repnz
add
popf
push
add
daa
cmp
jecxz
sub
xor
subb
dec
roll
test
imul
or
xchg
roll
pop
mov
inc
ja
add
leave
and
sub
std
xchg
adcl
out
mov
sbb
jo
or
xor
add
call
cs
jns
addr16
add
pop
dec
add
int3
add
sahf
fwait
cmpsl
inc
pop
lcall
movb
int
cmp
push
add
inc
jle
mov
and
jmp
add
in
dec
mov
repz
dec
pop
pusha
icebp
add
out
cld
std
cwtl
icebp
mov
int3
sbb
sbb
andb
popf
cwtl
jno
add
cmpsl
fs
cltd
mov
and
mov
les
add
in
subb
dec
jle
jg
adc
xchg
rolb
xchg
mov
add
test
stos
pop
std
shl
scas
loope
fdivl
pusha
pusha
xor
fsub
add
push
sbb
and
fadds
cmpsl
lret
adc
push
jns
mov
mov
jae
add
xchg
aam
ljmp
rolb
cmc
loopne
push
xchg
add
out
inc
ja
mov
sbb
inc
or
xchg
sub
js
lcall
int
in
in
or
add
inc
cmc
xor
push
fidivrs
mov
int3
or
ds
pop
nop
pop
add
loopne
in
push
push
push
je
inc
inc
add
add
ja
test
sub
mov
les
cltd
pusha
add
push
leave
push
add
inc
bound
into
lock
jmp
nop
add
fsts
je
jg
add
std
adc
xchg
mov
sub
or
aaa
and
push
sub
sub
loopne
lahf
fisttps
pop
outsl
xchg
test
pusha
xor
add
lods
nop
lock
cwtl
add
call
stc
daa
mov
push
cmp
adc
jl
mov
mov
nop
clc
adc
add
mov
jo
sarb
dec
outsl
pushf
fildl
dec
sarb
into
ja
notb
cmp
fcoms
jl
rclb
push
add
inc
dec
std
mov
jo
test
add
imulb
and
test
ret
ljmp
jl
cmp
jecxz
dec
stos
je
scas
imul
dec
faddp
in
add
mov
fldt
aas
jecxz
scas
xor
or
pop
pushf
repnz
inc
fwait
mov
inc
push
sbb
sub
movsb
out
enter
mov
and
add
shlb
add
jle
xor
add
into
add
dec
pop
mov
mov
and
pop
je
push
inc
push
loope
roll
fists
movsl
fcoml
add
adc
in
loopne
jbe
stc
inc
add
pop
loop
jb
add
idivb
jne
aad
cmovns
xor
call
jno
cli
sub
test
cmp
insl
add
lods
sarb
pop
and
pop
test
mov
ret
into
bound
jb
flds
xchg
mov
jno
cwtl
in
mov
fiadds
jl
jbe
fwait
clc
add
daa
xor
in
xchg
hlt
iret
pop
mov
mov
inc
ja
clc
sbb
inc
mov
push
fisubrl
arpl
add
ret
repz
mov
add
mov
jmp
jae
shlb
bound
cmp
pop
rcl
add
into
xchg
sub
pop
bound
in
mov
jp
incb
sbb
add
pop
mov
out
pop
jo
push
js
and
ret
lock
mov
pusha
ljmp
fnsave
call
add
lea
push
dec
add
insb
add
dec
ds
icebp
sbb
mov
shlb
out
adc
jae
mov
je
add
sbb
jp
or
pusha
repz
jns
les
add
mov
mulb
add
jl
pushf
addl
push
mov
les
xchg
mov
in
imul
fistpl
insb
dec
in
add
into
or
jp
lds
pop
lods
adc
or
imul
xchg
or
xorl
adc
sbb
cmpsb
push
add
rolb
addr16
dec
push
hlt
rolb
bound
roll
mov
stos
inc
add
xor
clc
xor
rolb
dec
add
cmc
jnp
jmp
add
adc
mov
test
inc
aam
jns
cmp
dec
les
add
add
inc
add
popa
mov
imul
test
pop
push
je
xor
cltd
sahf
leave
imul
inc
roll
xchg
or
fadds
lahf
inc
bound
push
sbb
mov
jne
add
inc
push
outsl
ja
add
sti
dec
scas
add
push
insl
adc
adc
mov
mov
lret
mov
add
mov
in
xor
cmp
testb
mov
out
aam
sti
add
fisttpll
pop
dec
mov
mov
inc
mov
inc
inc
cmp
outsb
mov
xor
pop
adc
popa
dec
add
dec
mov
sahf
mov
cmp
add
sti
xlat
je
subb
decb
pusha
mov
pop
outsb
test
adc
out
imul
pop
in
mov
add
mov
fcoms
xor
pop
nop
pop
aad
jl
push
pop
rorb
add
sub
outsb
add
add
fisttpll
sbb
rcl
decb
adc
fadds
mov
push
inc
stos
add
movsl
in
and
cmp
pop
and
or
movb
test
mov
stc
sub
add
loop
fwait
cmp
pop
push
adc
fstl
cmc
or
pop
test
mov
je
jns
dec
mov
sar
mov
mov
arpl
scas
dec
in
xor
xlat
hlt
test
add
cmp
add
fistps
stc
add
inc
sub
pop
jle
shrb
dec
push
in
in
ja
and
testl
cmpsb
pop
popa
fdivrs
add
inc
sbb
aas
int
out
pop
pop
dec
addr16
aad
sbb
clc
repz
xor
cmp
dec
push
dec
cmp
xlat
ljmp
add
cltd
xor
jnp
in
mov
test
insb
add
ret
push
in
mov
add
lods
clc
jae
add
leave
ja
cltd
pop
loop
pusha
hlt
enter
testl
into
pushf
cwtl
cmp
dec
sbb
mov
stos
cmc
jb
pop
addl
jno
add
and
inc
int
adc
or
subb
cs
rolb
pop
pop
int3
fwait
repnz
xchg
xor
loopne
scas
add
sub
ljmp
out
shrl
jmp
sti
les
test
fdivp
add
jg
dec
ds
push
arpl
adc
out
mov
fstpl
sub
and
out
add
add
cmpsl
adc
add
inc
dec
loopne
gs
mov
int3
outsl
clc
xor
dec
pop
movsl
fs
dec
stc
aaa
xor
filds
or
xchg
ljmp
inc
jl
or
ja,pn
add
xchg
and
add
inc
pop
lret
pop
test
jns
push
lcall
xor
add
je
xchg
das
or
dec
add
push
add
dec
push
add
enter
outsb
jge
push
in
jae
les
clc
mov
mov
test
pop
stos
or
xor
call
jmp
inc
mov
mov
fdivr
mov
xorl
add
mov
fwait
hlt
mov
incb
xchg
mov
imul
and
jnp
dec
stc
add
gs
add
scas
js
mov
add
mov
jo
gs
cmp
ret
add
mov
dec
adc
outsb
iret
mov
ja
pop
mov
sub
cmpsl
lcall
jle
push
mov
pop
test
xchg
in
and
add
mov
add
es
add
cmp
jmp
add
mov
jg
adc
mov
mov
add
xorb
add
jno
add
mov
sub
cmp
jle
inc
jmp
mov
pop
imul
sarl
add
pop
xchg
data16
enter
sbb
ret
add
clc
fwait
inc
add
inc
lret
cmp
pusha
xor
inc
mov
mov
add
xorb
jecxz
jecxz
sbb
add
repnz
lock
sahf
add
xchg
and
or
adc
sbb
adc
push
add
or
push
cwtl
cs
jno
and
test
cmc
sbb
mov
or
jnp
pushf
add
push
sbb
mov
je
nop
fwait
mov
lods
or
movsb
adc
mov
clc
lcall
mov
sub
or
imul
lds
jb
mov
lcall
popa
add
xchg
jbe
sbb
rcrb
jae
fwait
orps
incb
repnz
xor
mov
fdivl
or
popf
add
mov
mov
cwtl
das
mov
aas
fcomps
les
mov
dec
mov
mov
mov
xor
and
cmp
dec
pop
pop
js
fisubl
outsl
push
and
xor
mov
add
add
add
and
xor
push
mov
mov
mov
je
add
sbb
addl
dec
movsb
xor
push
lock
loop
mov
ffreep
adc
sub
add
mov
divb
psraw
in
icebp
add
out
mov
inc
or
rcl
add
pop
jp
mov
adcb
mov
mov
rcl
sbb
push
xchg
subb
sub
aas
imul
shr
fucomp
pop
loop
add
push
pop
jle
xchg
inc
cmpsb
cmp
aad
sbb
out
pop
jp
lret
add
fcoms
and
popl
call
pmaxsw
in
mov
mov
aad
pusha
jbe
lahf
test
xlat
add
cmp
enter
inc
je
add
outsb
int3
cmp
stos
add
pop
mulb
push
inc
mov
jae
xchg
call
pop
adc
lcall
in
pop
xchg
add
jns
push
les
add
divb
cmp
sub
js
rcr
jge
add
addl
add
loope
popa
imul
sbb
xchg
adc
shl
cli
pushf
ret
xor
and
insb
fnstcw
pop
cwtl
lods
arpl
cmp
sbb
mov
push
xor
add
ja
push
loopne
stc
stc
bound
fistps
aad
js
clc
aaa
sub
add
xchg
dec
or
test
leave
dec
pusha
xlat
lock
fwait
ljmp
push
push
pop
in
lods
loopne
push
jnp
jns
mulb
sub
clc
lods
stc
and
test
dec
mov
dec
adc
popf
filds
enter
shl
xor
aaa
jle
adc
push
sub
sbb
loope
adc
xor
pop
and
les
push
add
lret
sub
xor
outsl
cmp
shlb
cwtl
lods
add
cmp
add
mov
fstpl
add
shlb
push
iret
pop
int
mov
add
mull
xchg
xlat
aad
pushf
fldcw
popf
pop
insb
jp
rol
add
pop
adc
adc
dec
mov
add
inc
lea
push
and
loopne
cmpsl
pop
jnp
add
sbb
add
loope
adc
jb
add
dec
aas
mov
in
imul
test
add
mov
sbb
inc
sub
add
test
insl
mov
lahf
or
andb
add
rorb
lcallw
xchg
jp
fs
sbb
rolb
add
inc
mov
out
lret
jae
popa
jle
inc
std
add
or
push
and
in
popf
rcrl
push
int3
xchg
add
dec
sub
fcomps
iret
add
fistpl
enter
ret
mov
xchg
dec
inc
or
popf
fsubr
stos
fisubrl
test
int
pusha
cld
adc
filds
in
out
xchg
sarb
xor
add
test
fmuls
lods
sub
mov
andl
rclb
jae
test
pop
or
shrl
lea
cld
cmp
adc
pop
cmp
into
in
jb
or
add
jo
xchg
add
add
add
jle
dec
testl
and
sti
clc
nop
push
mov
pop
in
les
out
into
mov
rcr
aas
pop
cli
xor
add
leave
and
loopne
sbb
adc
test
je
lahf
into
add
jb
dec
in
mov
ljmp
shlb
out
les
add
jg
jg
add
test
push
add
mov
cmpsb
ret
xor
daa
loopne
out
add
int
xchg
ja
imul
lret
pop
mov
sub
and
jle
xchg
pop
div
mov
leave
es
addl
or
mov
imul
pop
sbb
mov
sub
add
lods
add
jae
sub
push
mov
test
mov
mov
cmp
mov
lea
or
mov
push
hlt
pop
push
add
xchg
dec
gs
adc
mov
jno
ljmp
pushf
jb
repz
add
mov
call
add
int
roll
repz
cmovno
sbbb
pop
fstl
sub
inc
mov
jns
es
fstps
xor
push
inc
push
cmpsl
sbb
test
xchg
xor
mov
xchg
subl
xor
add
lea
mov
add
inc
rolb
add
jno
xor
shlb
or
mov
cwtl
aad
add
xchg
repnz
xchg
lds
cmp
ltr
int
push
add
mov
mov
add
stos
pushf
cmpsl
push
push
dec
movb
sub
mov
flds
jb
notb
or
repz
adc
xchg
mov
sbb
aas
jle
adc
insb
jno
jp
add
or
das
push
push
add
lcall
fisttps
scas
xchg
mov
push
push
inc
pop
iret
loop
mov
sub
add
push
jb
jne
add
adcl
mov
xchg
scas
sahf
lods
loop
imul
add
add
jmp
loopne
dec
add
pop
iret
mov
add
xchg
aas
jge
add
jge
sub
mov
daa
punpckhdq
add
pop
cmpsl
jmp
add
or
test
addl
pop
dec
sub
mov
pop
add
adc
adc
pop
dec
push
jbe
jge
dec
inc
fildl
in
iret
mov
add
sbbl
xor
add
push
mov
mov
imul
sti
hlt
sub
inc
add
ja
repnz
mov
movsb
jge
das
xor
cli
inc
testl
inc
xchg
pop
add
mov
cmp
jl
add
inc
push
in
sub
xchg
dec
jge
call
sub
sbbb
pop
jns
push
dec
xor
sub
insb
dec
add
dec
daa
xor
cli
add
dec
lods
xchg
adc
add
faddp
pushf
pop
lock
add
sahf
push
int
icebp
mov
add
pop
adc
fistpll
push
add
push
addr16
cld
mov
movsl
aaa
add
ret
jp
add
int3
add
outsl
adc
cmpsb
or
mov
pusha
add
inc
aas
nop
mov
push
xor
mov
insl
mov
test
push
add
jbe
lahf
xchg
outsb
sub
ss
inc
lock
loope
test
mov
jns
pop
mov
push
add
pop
or
mov
inc
loope
int
push
rolb
lock
mov
nop
dec
sub
ja
pop
pop
mov
rcll
loop
and
cmp
lea
aas
adcb
or
push
in
sub
add
push
sbb
cltd
sahf
popf
cld
add
pop
cmc
out
ret
pop
inc
xor
jg
or
imul
repnz
xchg
in
and
pop
pop
xchg
adc
xchg
push
jns
add
ret
push
xor
movaps
in
add
jbe
sbb
je
adc
sub
test
cmp
xchg
andl
hlt
cmp
add
sti
inc
mov
outsl
or
inc
loopne
sahf
addl
stos
fmuls
mov
ret
js
lods
mov
stos
sbb
mov
shlb
inc
cmp
push
loopne
add
mov
xor
adc
jae
or
and
or
mov
add
out
lea
leave
add
mov
cmp
jns
out
lock
add
dec
mov
mov
sti
add
repz
test
std
into
int3
add
add
sbb
adc
cld
mov
in
inc
pop
ret
std
dec
jl
insb
fmul
mov
mov
cmp
jns
sar
push
mov
cmpsb
add
mov
aaa
clc
add
inc
push
in
sub
push
or
push
fwait
inc
adc
add
dec
xchg
sbb
add
sub
les
dec
xchg
je
mov
sub
push
cmp
add
cs
rcll
add
fistpl
stos
mov
jecxz
jne
cwtl
cltd
push
mov
enter
nop
sarl
dec
test
flds
mov
add
hlt
mov
push
or
cmp
ret
inc
xor
sub
add
and
aam
add
js
or
jg
out
xor
xor
cmp
gs
mov
repz
sbb
jae
shlb
pop
mov
and
mov
ret
xor
mov
push
adc
aam
jns
pop
daa
loopne
js
andb
push
mov
and
jge
mov
test
mov
xchg
in
faddl
scas
sar
jp
and
sbb
dec
push
mov
orl
cmc
or
rol
adc
add
loop
mov
mov
mov
insb
scas
sbb
or
cmpsl
in
dec
emms
mov
inc
and
dec
push
iret
scas
add
sub
in
xchg
sub
cmp
add
repnz
cmp
out
and
inc
sub
clc
mov
jbe
arpl
adc
sbb
enter
add
jmp
dec
add
pushf
cmp
popf
je
add
mov
fwait
inc
cmp
str
dec
add
mov
bound
push
xor
pop
outsl
jp
xchg
push
pusha
dec
pop
icebp
sub
lret
data16
pop
jg
add
pop
push
add
jl
mov
xchg
insb
pop
in
orl
cmp
xchg
cmpsl
mov
or
leave
rcl
and
enter
inc
add
call
std
rol
mov
mov
adcb
cmp
enter
and
sub
cwtl
sub
cmp
xor
aas
pop
arpl
add
popa
mov
or
aad
jns
dec
hlt
jecxz
jae
add
jo
repz
movsb
cmp
and
stc
xor
jae
lock
repnz
mov
gs
sarl
sub
pusha
xchg
push
mov
rclb
mov
add
jb
or
xor
inc
jo
rep
xlat
std
mov
mov
jg
dec
push
adc
add
das
mov
add
mov
ja
stos
cmp
add
jle
sub
sahf
loop
mov
jne
out
sub
xchg
xchg
push
add
dec
cmp
hlt
pop
sbb
add
mov
lcall
jno
sti
cli
shl
adc
jg
in
add
xchg
mov
add
fsubrl
int3
cld
sarb
push
or
xchg
cld
fistpl
xor
push
hlt
mov
bound
xchg
push
xorl
test
nop
xchg
add
adc
loop
add
cmp
pop
mov
xchg
jle
jge
cmp
fcoms
xchg
stc
add
inc
imulb
dec
xlat
fsubrs
push
mov
sub
clc
insl
cli
push
add
aam
dec
mov
fdivrp
mov
adcb
sahf
lods
ret
pop
arpl
in
mov
push
fcomi
mov
repnz
lock
xchg
jmp
add
ret
pop
jne
mov
add
and
jns
or
add
lds
enter
pop
jecxz
pop
sbb
push
mov
and
andb
push
bound
inc
mov
pop
push
shlb
pmullw
loope
sahf
add
mov
icebp
test
movsl
pop
adc
test
jle
pop
dec
js
inc
push
shll
push
lret
mov
loope
outsl
sbb
and
stos
adc
call
adc
add
lods
sbb
scas
mov
and
xor
cmpb
ja
jbe
insl
lret
adc
xor
repnz
or
roll
add
adc
dec
add
enter
mov
outsl
inc
and
stc
mov
loop
pop
sbb
dec
inc
push
pop
sbb
aad
xchg
inc
or
fwait
cmp
add
inc
lock
clc
repnz
add
and
int
repz
jbe
rorl
sbb
sti
add
lret
pop
dec
rcll
mov
push
ds
jo
dec
jnp
cmp
mov
sbb
mov
sti
sbb
and
pop
ret
or
ja
jmp
add
and
mov
xchg
or
xchg
jb
cltd
inc
in
ds
push
adc
mov
inc
adc
pop
shrb
or
fs
and
add
add
add
push
dec
insl
adc
sbb
push
inc
jo
jbe
shlb
xor
inc
add
cmp
xchg
mov
mov
sbb
push
jo
sub
rorl
add
mov
in
loop
sbb
mov
add
popf
rolb
cmp
dec
push
mov
inc
add
sub
jns
push
fldenv
in
dec
les
out
nop
and
add
mov
inc
mulb
aad
shr
push
popf
out
in
jl
sub
test
aaa
mov
lret
add
mov
bound
inc
pop
inc
xor
push
cmp
add
pop
lcall
adc
and
dec
insl
das
adc
inc
sarb
stc
mov
loope
add
pop
pop
push
add
cmc
push
rorb
call
sub
push
mov
cli
push
and
cltd
sahf
fildl
rol
cld
stos
xor
and
test
xchg
out
jge
pusha
dec
xchg
push
int3
dec
pop
pop
xchg
pusha
lods
rolb
pop
pop
in
out
js
test
fdivrs
insb
lock
jecxz
cmp
test
js
jle
loop
enter
and
dec
add
sbb
jle
add
ja
add
pop
data16
mov
out
lret
adc
mov
cmp
and
adc
cmp
mov
bound
dec
fs
test
repnz
fcmovbe
or
pop
xchg
mov
pop
ja
test
stos
icebp
inc
sbb
rclb
sbb
ja
stos
sbb
loopne
push
jecxz
add
jg
pop
scas
stc
add
push
imul
mov
iret
addb
ret
cmp
jno
repnz
jle
sti
rol
push
jge
cli
pusha
or
sbb
outsl
js
jb
fimull
add
or
stos
jne
jo
mov
add
pop
inc
pop
xchg
inc
fldt
popf
or
jmp
out
arpl
jl
or
add
aad
sahf
or
cmp
add
mov
add
ret
adcb
divl
jmp
andl
mov
test
add
shrl
ret
xor
fs
inc
cmp
les
dec
push
inc
jnp
frstor
negb
xchg
dec
faddl
fs
lock
cwtl
jo
and
rcrb
loopne
bound
fadd
pusha
push
cmpsb
add
stc
add
mov
mov
repz
mov
cmp
push
cmpsb
mov
stos
mov
push
or
mulb
pushf
cli
stc
out
adc
shll
clc
out
rcl
mov
mov
cld
jmp
mov
add
lea
xchg
stos
rorb
add
xchg
push
btcl
shrb
inc
push
fxam
and
pop
sbb
pop
pop
push
jecxz
bnd
add
cmp
add
mov
add
and
movsl
add
push
ljmp
or
fsubl
add
or
mov
adc
lret
stos
adc
dec
add
scas
cmp
cmp
mov
sbb
test
push
mov
dec
inc
add
cmc
loopne
or
sbb
xor
inc
testl
scas
lods
add
cmp
movsl
in
add
adc
push
sbb
mov
push
xchg
add
jbe
lods
xor
shll
push
sub
cmp
xchg
pop
or
or
pop
add
mov
and
xor
adc
jecxz
jle
xchg
lods
into
outsb
jmp
push
add
xor
pop
add
orl
add
out
sahf
add
ljmp
lods
in
in
sbb
add
jae
aam
or
push
mov
push
testb
add
mov
cmp
dec
mov
pop
out
add
test
mov
dec
imul
mov
loopne
add
mov
pop
out
js
pushf
add
ja
push
sbb
push
add
or
xchg
outsl
and
lods
ror
adcb
xor
adc
loop
push
fcoms
pop
call
jo
add
cmpsb
popa
add
insl
sbbb
out
jle
jae
mov
mov
sub
rclb
aas
add
es
jo
add
arpl
inc
scas
pop
mov
loop
mov
testb
push
ficomps
insb
out
sbb
sub
mov
xchg
cmp
dec
nop
mov
pop
sub
pop
inc
test
mov
sub
push
adc
movsl
roll
mov
push
test
xchg
fistps
push
push
enter
add
xlat
in
add
fistps
jmp
add
pop
push
add
cmp
pop
mov
sub
add
and
push
sub
adc
dec
shrl
add
or
xchg
call
mov
pusha
mov
xchg
jns
sbb
enter
add
xchg
and
inc
jns
add
pop
imul
cmp
jo
test
xchg
inc
adc
inc
inc
lahf
cmp
add
shlb
add
mov
xchg
addr16
adc
std
add
sub
mov
stos
lret
mov
xchg
mov
lahf
jp
xor
add
or
jne
shlb
xlat
dec
mov
addr16
pusha
add
test
xchg
add
jle
aas
incl
pop
adc
in
xor
add
pop
pop
daa
movhps
js
dec
push
add
pop
inc
je
sub
mov
ljmp
pusha
sar
test
add
pop
pop
or
jb
jg
push
orb
test
ss
cmp
pop
pop
xor
andb
xor
movb
jne
enter
xor
gs
jns
mov
rclb
dec
fistps
hlt
in
clc
cmp
xchg
cmp
bound
mov
xor
jg
dec
cvtps2pi
or
shrb
lds
push
rcrb
xlat
mov
mov
pop
ret
or
inc
test
stos
add
popa
adc
mov
inc
mov
lock
and
push
add
cmp
les
pop
jo
pushf
ja
outsb
out
add
cmc
add
cltd
xchg
cmpsl
loopne
push
inc
lock
or
push
add
lods
rcrb
cmp
jo
add
popa
mov
lret
and
cs
pusha
cmc
fwait
push
mov
jne
inc
popa
test
mov
loope
and
fwait
sti
add
mov
pusha
add
dec
pushf
push
push
enter
add
mov
dec
subb
mov
mov
sub
or
push
addl
test
mov
mov
loop
arpl
mov
jl
cmpb
test
cmc
in
arpl
xchg
push
cmp
mov
notl
jno
xchg
add
jnp
popf
cli
aaa
dec
je
add
lds
or
add
lret
mov
xchg
popf
mov
sub
xor
lret
scas
push
cld
push
pop
add
lcall
add
incl
mov
xchg
xchg
sub
test
mov
mov
in
jmp
inc
or
imul
jmp
in
jno
adc
and
movsb
add
adc
pop
dec
jmp
xchg
mov
add
outsb
std
xchg
sarl
ror
scas
mov
or
mov
outsb
jo
mov
adc
popf
mov
pusha
add
or
pop
mov
xorl
je
stos
cmpsb
sub
sbb
dec
aam
add
fldl
mov
push
push
int
test
clc
addl
pop
lods
aam
sub
add
add
hlt
mov
add
cwtl
sbb
adc
int
test
jno
pop
add
jp
lea
std
add
cmp
mov
fstps
xor
out
xchg
ja
add
arpl
leave
jge
in
sbb
push
add
jecxz
out
sar
push
dec
test
shrl
jb
add
dec
pop
inc
xchg
inc
enter
add
push
mov
jecxz
dec
sub
cmp
mov
inc
outsl
test
push
pop
pop
xchg
mov
adc
sub
sub
push
and
in
repz
pop
cmp
mov
jge
pop
je
or
icebp
fimuls
cmp
add
movsl
into
imul
lea
testl
mov
leave
or
add
ss
dec
daa
rol
popf
mov
xchg
fisttpl
xor
add
xchg
pusha
cld
mov
cltd
andb
sub
mov
stc
sbbb
shrb
add
jl
and
add
rcll
add
xchg
dec
and
stos
pusha
out
notl
mov
push
je
add
push
cmp
add
orb
andb
dec
cmpsl
xchg
push
pop
mov
mov
aam
push
add
push
pop
fisubl
push
mov
mov
push
jp
js
add
add
lcall
add
dec
sbb
divb
into
xorb
test
in
or
push
test
fwait
xchg
sub
xor
nop
adc
add
leave
pop
dec
in
add
loopne
mov
ljmp
nop
push
clc
scas
nopl
pop
inc
mov
lret
xchg
adc
push
jno
add
pop
je
add
lods
xchg
and
sub
sbb
movl
pop
cmpsl
andb
cmp
cli
cs
push
adc
rolb
jne
and
mov
add
out
mov
sub
add
loop
orl
pop
xchg
lret
dec
pop
jns
sbb
pop
inc
mov
pop
add
icebp
jmp
push
add
mov
std
and
les
push
fildll
and
sbb
add
into
xchg
jp
pop
push
negb
mov
xchg
test
mov
arpl
adc
in
xchg
add
xadd
insb
inc
add
dec
int
push
sbb
jne
add
sahf
mov
cld
jno
lahf
mov
test
ficomps
xchg
out
mov
mov
shl
js
shll
incl
pop
pop
repnz
add
sbb
das
into
pusha
mov
push
lds
cltd
add
jge
jbe
icebp
push
xor
pop
loop
ficomps
mull
js
and
dec
aad
outsl
lock
aas
mov
add
std
add
xchg
dec
cmc
mov
push
fiadds
pop
inc
clc
mov
sbbl
mov
daa
add
pop
inc
pop
insl
inc
inc
stos
push
pusha
cmpsl
pop
xlat
cmp
mov
or
int
dec
cmp
shll
in
mov
bound
pop
adc
int
add
into
in
divl
sub
outsb
cltd
icebp
add
lcall
test
add
hlt
stos
or
pop
ss
std
mov
add
popa
movsb
adc
push
bound
add
add
dec
push
lock
mov
lds
lock
je
movq
jo
xor
int3
add
nop
lret
pop
or
jae
xor
scas
or
subb
and
sbb
push
mov
lret
add
cmp
addr16
stos
test
and
daa
push
popf
mov
mov
cld
add
dec
cltd
repnz
add
mov
mov
inc
adc
movsb
lods
add
inc
xlat
xchg
sbb
dec
cld
pop
je
fildl
subl
ret
aas
pushf
and
adc
dec
adc
sub
xor
fwait
adc
jns
nop
push
sub
pushf
mov
push
xor
add
lahf
ja
xor
mov
mov
leave
push
negl
sbb
cwtl
clc
add
xchg
xchg
je
inc
mov
pop
rep
jno
or
push
and
xor
ret
outsl
loopne
and
xchg
ja
loope
rorb
scas
push
add
xor
out
int3
out
pop
sti
mov
into
in
cwtl
pop
jmp
pusha
jnp
cmovge
push
inc
lret
ret
cmp
insb
adc
add
dec
mov
cwtl
xor
push
or
jg
push
pushf
cmp
push
pop
jmp
clc
mov
cmpsb
push
sub
cmpsl
pop
test
sbb
lock
cmp
xor
mov
jmp
pusha
arpl
mov
push
addl
mov
add
enter
jb
jl
popa
shll
rcrb
cmp
leave
push
fwait
pop
pop
push
push
dec
movl
stc
add
adc
jne
mov
lret
and
add
jae
jmp
ret
mov
mov
push
std
scas
xchg
icebp
pop
add
mov
arpl
and
jl
mov
cmp
or
sub
push
cmp
mov
or
adc
fidivs
add
imul
pushf
loop
push
xor
xchg
mov
nop
repz
das
pop
jnp
out
repz
xor
push
mov
movsl
add
call
insb
sub
push
inc
jb
lahf
pop
in
mov
and
sbb
cmc
add
or
out
lea
sub
push
add
aad
in
dec
loop
sahf
add
xchg
insl
jl
daa
addl
push
in
adc
adc
inc
cmp
repnz
jge
orb
pop
cmpsl
arpl
xlat
add
sub
stc
lret
jae
popa
add
movsl
pop
int3
call
mov
out
mov
mov
bound
sahf
stos
sarb
adc
std
fnstcw
add
mov
addr16
pop
mov
mov
xchg
sbb
jl
cmp
push
lock
cmp
mov
xor
enter
adc
decb
add
loope
xor
push
jnp
je
sar
xchg
dec
ficompl
sub
lahf
addr16
loopne
xor
add
adc
enter
movsl
ror
sub
and
lods
inc
jle
mov
push
pop
out
adc
loopne
fidivrs
loopne
mov
and
cmp
icebp
lahf
pop
rorb
movsb
adc
push
test
cmp
cld
lea
mov
sbb
sahf
adc
cld
cli
jb
add
ds
loopne
cmp
rolb
add
imul
mov
out
dec
sbb
mov
add
mov
and
bound
push
cmp
push
arpl
mul
popf
lock
and
add
fsubrs
xchg
cmp
add
outsl
push
or
xchg
mov
les
dec
jl
push
add
mov
sti
test
xchg
outsb
mov
rclb
mov
lcall
jp
movsl
adc
mov
fisttpl
bound
sbb
xchg
js
add
jge
nop
add
repz
mov
fsubrl
pop
jle
pop
pop
mov
jl
shlb
sar
xchg
or
movsl
andb
loopne
enter
add
lods
inc
mov
int
jle
outsl
aas
xchg
movsb
adcl
insb
test
rorb
dec
shrb
mov
push
cli
aas
add
jmp
popa
ja
pusha
dec
mov
xor
pop
fld
add
sarl
or
scas
and
mov
aam
fsubs
adc
or
add
pop
mov
cmpsb
push
add
push
stos
inc
cmp
inc
clc
sub
test
push
mov
add
or
xorl
sub
inc
out
and
lret
enter
aad
pop
shlb
or
shrl
sbb
push
add
pop
into
mov
es
sahf
add
inc
stos
sbb
dec
cmp
notl
mov
add
jne
pusha
clc
enter
cmpsb
insl
add
sar
scas
cmc
add
movsl
add
mov
aaa
add
jo
scas
add
push
push
cmp
adc
inc
rcrb
mov
daa
popf
dec
adcl
fcoms
inc
sub
xchg
xor
mov
loopne
push
jl
and
int3
sbb
aas
incb
and
mov
movsb
nop
outsb
add
inc
mov
sub
mov
dec
add
pop
inc
mov
je
mov
sbb
add
push
cmc
cmp
cmp
mov
jge
insb
int
add
jbe
pusha
ret
fs
rcll
adc
xor
mov
add
movsb
push
jl
insb
add
mov
test
je
add
and
out
insl
movsb
jae
aas
jp
add
js
and
mov
add
leave
iret
mov
sub
popf
sti
dec
sahf
sbb
call
mov
adc
test
add
or
jmp
aas
loopne
add
xorl
call
jbe
push
pop
cmp
and
jmp
dec
dec
xor
test
add
mov
xchg
call
add
and
lahf
mov
pop
xor
jg
dec
cmpsl
lock
and
out
cmp
mov
gs
add
add
mov
lods
fcoml
xchg
inc
mov
xor
sub
mov
rclb
dec
nop
mov
push
inc
xchg
xchg
add
mov
int
in
pop
add
iret
adc
outsb
test
pop
push
inc
leave
add
out
subl
dec
mov
cmp
adc
fdivrl
shlb
out
and
pushf
fcmovbe
add
js
or
mov
add
cltd
add
sbb
push
adc
mov
add
jle
fisubrl
sbbl
cmp
mov
and
hlt
orb
and
mov
scas
cmp
push
xchg
lods
mov
add
push
pop
dec
jmp
out
add
add
adc
leave
add
loopne
lods
cwtl
and
out
add
sbb
sbb
adc
fcompl
cmp
ds
mov
mov
dec
cmp
add
in
push
sbb
dec
rclb
add
mov
repnz
test
ret
add
adc
sbb
arpl
add
daa
bound
dec
cld
push
and
nop
in
sub
xchg
arpl
test
movsb
icebp
push
push
sub
jle
push
inc
jl
daa
mov
cmp
mov
add
call
and
jg
add
icebp
push
add
mov
lcall
mov
pop
scas
out
adc
lock
inc
test
mov
add
movsb
or
cmpsl
sub
daa
inc
roll
cmp
add
mov
add
add
cmp
dec
nop
lret
cltd
nop
or
pusha
add
hlt
inc
sub
pusha
push
sub
mov
add
dec
pusha
int3
sub
loop
addb
dec
mov
rcrl
ret
add
frstor
fdivs
jp
inc
mov
and
stos
add
xchg
and
sub
add
cmp
or
outsb
sub
aad
sub
xor
add
cmpsl
scas
sti
in
cmp
add
rorb
cltd
and
loopne
insl
xchg
add
mulps
lock
add
mov
movsl
lods
mov
enter
je
pop
cmpsb
repnz
jl
mov
das
mov
loop
add
iretw
outsb
mov
inc
mov
pop
push
popf
push
test
jg
mov
std
mov
cld
sub
add
cmp
out
xchg
add
jb
push
add
outsl
cmp
push
test
out
es
mov
jno
pop
sbb
loopne
mov
or
into
or
mov
movl
adc
clc
adc
adc
popf
daa
pop
cmc
lret
loopne
sbb
add
lds
sub
fisubl
jne
out
shlb
pusha
push
imul
pop
jecxz
inc
mov
xchg
andl
fldenv
data16
cmc
out
add
add
aad
jns
push
lds
or
cld
sarl
jae
add
les
cmp
mov
jecxz
je
and
les
push
sbb
xor
sbb
dec
rcr
aam
push
xor
add
xchg
xchg
leave
xor
and
add
nop
xchg
adc
mov
sbb
add
arpl
pushf
xchg
das
loop
push
lret
xor
xor
dec
cmp
sbb
and
add
xchg
shll
cmp
inc
add
sahf
mov
add
pop
shl
insb
ja
add
gs
inc
aad
mov
and
mov
jle
cmp
cmc
paddsb
fildl
scas
add
cmpsb
out
add
xor
cmp
orb
lock
cmp
out
addl
and
sbb
adc
xlat
pop
sbb
or
loope
cld
rorl
movsl
add
outsl
arpl
lods
jnp
pop
mov
pop
and
ret
aas
xor
in
imul
dec
xchg
jg
cmp
mov
fisttpl
pop
push
dec
mov
xor
ret
pop
int
jmp
movsl
lret
movb
cmpsl
jg
shr
jne
add
lods
cli
push
ss
pop
enter
push
fsubr
cs
test
mov
add
std
cmpsl
add
sub
add
das
or
aad
add
xchg
cmp
and
sub
add
test
bound
add
cmp
jecxz
add
mov
roll
lea
xor
add
mov
loope
add
pop
aad
lock
push
jns
daa
xor
mov
ds
sbb
fsubr
flds
pop
xchg
addr16
sarb
xor
mov
popa
repz
cmpsl
in
decb
shll
clc
mov
mov
add
push
pushl
xchg
cmp
int3
jle
lds
out
or
out
add
scas
popw
into
xlat
outsl
sarl
aam
pop
xchg
add
sub
ds
inc
add
daa
cmc
test
jecxz
cmp
mov
mov
lods
dec
mov
jns
inc
rolb
cmp
aad
add
iret
and
mov
mov
aas
jmp
iret
and
in
pop
nop
inc
mov
sub
and
int
out
test
mov
dec
inc
fsubrs
aam
pop
add
sbb
adc
xchg
add
fsqrt
aam
inc
add
xchg
inc
pop
add
dec
cmp
adc
xchg
add
out
sbb
cmp
adc
mov
jne
push
jecxz
out
cli
xchg
add
dec
or
movl
inc
insl
out
icebp
ja
lods
adc
loopne
outsb
jmp
lods
add
adc
aam
lret
jp
cmpsb
add
mov
insb
mov
aas
jge
jno
add
xor
repz
into
out
add
mov
fsubr
mov
mov
das
and
repnz
les
jns
icebp
sub
or
pop
subb
and
jmp
add
mov
xchg
add
mov
xor
mov
add
lret
lods
add
cmp
and
add
or
add
jg
xchg
cmp
jns
dec
add
neg
es
fstp
inc
xchg
mov
add
mov
adc
mov
rolb
pop
add
fimuls
cmp
pop
lock
xor
push
mov
mov
add
xchg
dec
adc
mov
mov
jns
xchg
adc
sub
out
jo
iret
xor
fiaddl
cmpsb
clc
mov
jg
add
sbb
jmp
sub
and
dec
stos
loopne
add
pop
adc
fimull
xchg
pushf
pop
mov
and
faddl
push
jg
daa
orl
cwtd
cmp
sbb
xchg
jb
add
pminub
jg
mov
mov
sub
clc
test
push
add
xor
jns
ret
sbb
and
in
push
lcall
leave
adc
icebp
popa
outsb
cmp
data16
push
jmp
lret
pop
jnp
cmpb
xlat
stc
js
push
pop
hlt
pushf
or
xor
sub
stos
or
and
mov
mov
xor
push
sbb
xor
mov
adc
gs
sub
add
shll
mov
stos
out
pusha
pop
repz
push
bound
mov
cld
outsl
add
push
cmp
add
adc
mov
fidivrl
adc
notb
xchg
dec
stos
cli
ret
loope
outsb
shlb
jg
mov
xchg
push
or
add
jae
shll
stos
filds
xor
xor
pusha
inc
call
dec
bound
push
jp
cmp
xchg
clc
add
jmp
xchg
ficompl
add
rolb
mov
loope
add
pop
call
adc
cmp
add
sub
xor
aad
cmp
jmp
mov
stos
pusha
add
sub
mov
lea
push
adc
inc
out
xchg
fldenv
push
add
inc
push
dec
imul
cmp
lock
stos
sbb
add
xor
xchg
add
push
cmp
leave
filds
outsl
or
and
cmp
arpl
out
jae
or
pop
movsb
loopw
cli
arpl
pop
fsubrp
and
mov
inc
sar
call
lcall
push
xchg
out
aas
lock
add
mov
push
xchg
paddw
in
add
push
mov
adc
lods
aam
jmp
cmc
add
xor
add
lea
mov
add
aas
dec
stos
push
call
in
push
scas
pavgb
xchg
mov
xchg
push
sahf
les
cli
and
and
lret
dec
lods
add
test
lock
es
jle
add
xor
adc
ficoml
jp
ljmp
adc
test
push
pop
jbe
add
jmp
xchg
xchg
jb,pn
shlb
mov
enter
out
fcmovnbe
jnp
mov
aam
mov
mov
mov
jnp
push
add
push
pop
mov
in
sbb
add
iret
imulb
int
repnz
add
sbb
shrb
add
xchg
jne
xchg
add
je
add
fwait
cmpsb
sub
push
in
pop
les
cmp
xchg
test
repz
dec
adc
mov
sbbb
jge
pop
in
and
add
orl
or
add
in
cmp
adc
aaa
lret
jmp
pop
insb
out
add
outsb
pop
sub
inc
mov
add
fnstsw
dec
add
daa
addr16
mov
push
add
mov
daa
in
out
imull
addr16
arpl
pop
les
sarb
out
mov
sub
and
loopne
pmuludq
cmp
filds
jo
adc
js
and
fsts
scas
loopne
lods
add
mov
push
adc
xchg
cmp
mov
mov
aad
nop
add
jg
or
jl
js
fiadds
add
mov
sbb
jnp
in
sbb
add
jbe
lock
add
jns
xlat
add
insl
sub
add
out
loopne
cltd
push
sti
push
add
inc
jns
sub
mov
add
sub
xor
aas
cli
notl
dec
je
mov
stos
mov
xchg
inc
popf
mov
jbe
scas
mov
aaa
cmp
mov
cmc
mov
rolb
cmp
aam
sbb
pop
mov
sbb
add
out
add
add
add
or
les
lret
inc
out
add
sub
in
out
pop
repnz
ret
mov
bound
adcb
jae
sbb
xor
add
jmp
int3
shlb
xor
add
jmp
fstps
mov
mov
fadds
add
dec
jmp
loop
adc
xor
cmovno
insb
push
ds
cltd
xchg
xchg
lds
push
fcomps
stos
xchg
std
sbb
pop
outsb
cmp
add
sti
jle
xchg
add
cmpsl
movsb
lcall
and
push
jo
or
add
in
xchg
adcl
mov
fcoms
dec
clc
mov
add
add
mov
fiaddl
mov
push
mov
xchg
pop
pop
pop
mov
sar
jnp
add
popa
jp
pop
xchg
mov
adc
incl
jnp
pop
movnti
les
push
int3
push
jae
cmp
imul
fadds
loope
dec
and
insb
arpl
inc
inc
xor
out
and
sbb
ljmp
xor
add
push
mov
xor
rolb
test
and
loopne
jns
push
fsubrp
inc
lret
out
les
addr16
loopne
jae
icebp
or
pop
pop
or
ret
mov
jmp
push
push
fcompl
pop
repz
pop
testb
cld
stc
sbb
in
add
clc
aaa
xlat
scas
fcomps
test
repnz
lret
pop
xor
jg
add
call
negl
xchg
cmp
adc
mov
add
mov
xchg
add
mov
add
add
xor
add
outsb
xchg
cli
add
adcl
repz
add
push
add
push
shrb
xchg
sbb
negb
and
sbb
cmc
adcb
movsl
xchg
aas
outsl
jne
fistps
add
or
jbe
mov
pop
add
and
mov
or
push
idivl
add
or
in
fldt
call
pop
movsl
push
jl
les
addl
and
lods
fldl
fidivrl
mov
mov
pushf
inc
adc
xor
push
leave
jnp
imul
dec
nop
push
jl
not
call
sahf
xor
add
add
jecxz
ss
add
and
cmp
in
push
out
fldl
fnstcw
lea
ret
pop
or
clc
add
in
iret
pop
and
fmuls
xchg
add
js
arpl
sub
lahf
xlat
push
hlt
in
cmp
sbb
jle
add
ljmp
iret
cltd
mov
push
add
adc
xor
cmp
test
add
jne
pushf
mov
mov
inc
push
aaa
inc
fiaddl
push
dec
inc
mov
jnp
js
fildl
mov
xchg
sbb
lea
ljmp
std
imul
jp
rolb
stc
mov
testl
xchg
adc
mov
xchg
jmp
add
mov
negb
sbb
adc
or
add
cli
in
sub
inc
fildl
push
jecxz
sbb
jnp
or
mov
inc
test
into
lods
mov
and
add
xchg
push
enter
popf
fldl
int
jb
add
and
mov
and
or
push
xor
and
add
scas
cmp
or
add
mov
pop
sub
lcall
sub
xor
push
cmp
leave
jb
xchg
jg
pop
mov
mov
cmp
data16
add
loop
cmpsl
cwtl
sub
dec
push
and
rcrb
ja
stos
mul
jle
pop
lahf
add
xchg
sbb
sbb
mov
test
out
lock
pop
add
jbe
inc
add
adc
fisttpll
push
pop
or
and
mov
mov
add
add
and
pop
mov
leave
or
pop
xor
or
or
rclb
add
jmp
ror
mov
stc
fcom
fstpl
aam
add
jb
mov
dec
repz
xchg
ficompl
add
jmp
add
out
roll
sub
cmp
mov
pop
sbb
push
clc
fidivrl
rcrb
add
out
mov
pop
sub
aam
xor
cmp
cmp
and
enter
mov
imul
dec
mov
sbb
aam
jno
cld
sub
dec
jbe
add
mov
jl
pop
xlat
rol
jmp
jns
mov
fidivrl
lock
sub
aas
cwtl
aaa
dec
jo
je
dec
movl
fidivl
fldl
int
fs
adc
sti
testb
bound
sbb
nop
retw
or
rcr
add
imul
mov
testl
xor
rcr
adc
xor
sub
cltd
xor
lcall
xchg
ja
jo
jecxz
fldlg2
add
pusha
and
inc
xchg
int3
lods
pusha
insb
subl
jle
inc
fxch
dec
cmp
fsubl
ret
push
jp
and
fnsave
xorb
dec
pusha
add
or
mov
rol
add
fsubrs
shrb
orb
xchg
jle
xchg
cmp
and
or
xor
test
fwait
mov
cmp
add
in
dec
push
add
cmc
ret
sub
mov
cli
aas
sahf
inc
pop
dec
fstpl
add
mov
iret
mov
stos
out
ja
add
sub
sub
mov
mov
dec
add
cmp
div
jp
mov
add
dec
shrl
sub
lea
fldenv
cmp
add
js
inc
push
pusha
cli
in
dec
sahf
push
add
int3
loope
sub
lock
xor
dec
sub
add
outsb
ret
push
pusha
repz
cmpsb
cmp
and
nop
movsl
fisubl
pop
loope
sbb
fs
fnsave
mov
add
and
clc
cmc
add
scas
out
aad
scas
jle
mov
pop
sub
lret
adc
sub
nop
pusha
add
adc
add
cmp
rclb
add
test
xchg
sbb
mov
pop
push
loopne
add
xchg
cld
lods
push
inc
adc
in
jge
push
add
and
repz
lea
mov
aaa
add
push
out
pop
add
fwait
call
and
xor
sub
and
xchg
add
movsb
mov
add
jl
sub
dec
pusha
add
mov
xor
mov
aad
sahf
mov
add
mov
jmp
lcall
movsb
pop
add
inc
lret
arpl
ja
push
test
xchg
jae
lods
xlat
pop
sub
in
lock
sub
pop
mov
push
push
mov
orb
shlb
out
add
in
pop
add
xor
outsl
pop
pop
movsl
fwait
test
andl
add
fs
cs
jo
subb
sub
syscall
enter
add
lods
mov
jp
add
imulb
out
push
lds
or
gs
sarb
ljmp
sbb
fcoms
out
add
mov
orb
xchg
pushf
and
adcb
mov
loopne
fisubrs
decl
icebp
enter
add
mov
add
sub
mov
stos
mov
in
loope
mov
xchg
push
lock
in
add
pusha
fsubr
mov
mov
and
hlt
add
testl
add
or
xor
inc
sahf
je
jl
pop
cmp
adc
aas
inc
xor
test
lea
roll
pop
cmc
jmp
xchg
xorl
movsb
sbb
and
add
pop
sbb
pop
fdivrs
sub
pop
sbb
cltd
jb
lret
fwait
ja
mov
mov
inc
stos
sub
mov
adc
out
data16
mov
mov
in
js
sub
in
jns
inc
or
jae
hlt
orb
add
mov
rolb
mov
dec
dec
inc
and
xchg
lods
cli
adc
push
dec
lods
out
jp
mov
je
add
sub
mov
add
push
mov
jmp
adcl
lret
adc
fbld
mov
xor
enter
leave
mov
lods
add
sub
xchg
dec
rorl
dec
jecxz
add
insb
std
cmp
or
das
jnp
idivb
repnz
adc
lahf
rolb
ja
jo
mov
sbb
call
add
insb
jnp
mov
inc
add
jb
iret
mov
mov
out
pop
and
outsl
mov
or
xchg
adc
ficoml
dec
adc
movsb
add
mov
mov
xchg
inc
mov
dec
fistpl
roll
mov
cmp
push
out
cmc
mov
mov
jae
fldcw
add
popf
adc
add
mov
push
test
mov
icebp
push
jecxz
scas
mov
jnp
stos
loop
repnz
dec
stos
add
sahf
xlat
xchg
popa
call
into
push
xor
mov
sub
jae
add
aas
in
clc
fadd
add
inc
daa
inc
dec
jbe
cmpsb
add
scas
popa
pop
dec
mov
in
lahf
test
mov
add
idivl
fildll
sbb
and
cmpsl
mov
inc
add
pop
stos
out
pop
lods
add
es
mov
shrl
add
pcmpeqd
int
mov
add
gs
push
cmpsb
mov
aaa
bound
add
push
inc
lea
xor
add
hlt
addb
out
repnz
into
inc
sbb
in
fadds
and
mov
cs
call
xorl
out
pusha
push
xchg
dec
or
push
addb
add
jno
xor
push
adc
and
cld
repz
add
aam
push
scas
mov
int3
ja
adc
mov
add
les
shlb
negl
int
cmpsb
ljmp
add
add
push
sub
adc
lods
push
cmp
push
call
sub
es
out
sbb
aad
push
scas
cmp
pop
das
inc
push
pop
add
push
or
add
repnz
xor
popf
sbb
or
dec
ret
add
jle
dec
loope
inc
jno
dec
das
add
dec
sbb
lret
addr16
add
sbb
sub
add
xchg
div
or
jo
and
pop
jne
jl
add
jno
xchg
inc
loopne
add
scas
mov
nop
in
sub
out
cmp
add
ret
add
xlat
mov
push
or
sub
push
pop
inc
jmp
test
cmp
loope
xchg
dec
rcll
add
inc
rcr
aam
es
inc
add
push
sbb
xor
call
in
add
faddl
add
cmp
int3
out
push
sbb
xchg
ficomps
test
add
ja
xlat
int
repz
dec
lock
add
xchg
test
out
lcall
jg
les
pusha
xchg
rclb
lcall
enter
in
rolb
mov
add
jne
push
lds
shlb
imul
push
dec
outsb
xor
cmp
mov
fsincos
add
jnp
repnz
mov
popf
xor
ja
sub
loop
pushf
insb
lret
fstpl
mov
inc
leave
es
mov
cld
sbb
sub
dec
std
dec
rolb
jne
call
enter
add
dec
adc
mov
lret
cmp
jo
adcb
mov
movsb
push
sub
xlat
mov
lahf
loope
aad
pop
add
mov
add
mov
mov
fimuls
add
xchg
adc
outsl
leave
insl
subb
sbb
cltd
cld
pop
pop
cmpsb
sarb
sbb
sub
dec
repz
push
faddl
out
aam
cmp
mov
int
lcall
incl
jns
mov
jge
dec
adc
mov
adc
add
stc
xchg
loop
sbb
dec
test
xchg
rorb
add
xchg
and
xchg
call
cmp
lock
jp
add
sbb
dec
call
add
sbb
inc
sbb
sub
mov
outsl
lahf
pop
add
mov
add
jg
pop
push
fdivr
or
mov
into
pop
das
clc
aam
add
xchg
lahf
icebp
mov
cltd
hlt
in
and
gs
xor
cld
push
mov
jae
adc
push
add
sub
rol
xor
push
dec
adc
or
add
cmp
sbb
push
adc
mov
jecxz
adc
andb
mov
jns
test
lahf
push
cs
loop
orb
icebp
add
mov
inc
pmullw
data16
pmaxub
cmp
mov
inc
enter
add
jno
clc
pop
or
in
mov
faddl
mov
adc
lods
inc
sbb
test
rcrb
pushf
xlat
add
adc
iret
addr16
mov
or
fwait
sbb
roll
fistps
inc
mov
xchg
lds
cwtl
sub
add
testl
add
cltd
ds
das
add
jg
inc
inc
xor
icebp
mov
add
lret
test
xor
test
cli
roll
les
mov
pop
popa
cmp
cwtl
les
test
push
rcl
daa
dec
add
je
pop
push
rolb
sbbb
adc
mov
cmp
push
jle
out
add
xor
xchg
xor
orb
jge
hlt
shr
mov
add
les
addl
sub
add
mov
or
aam
lret
je
push
add
and
add
ret
inc
lock
clc
pop
inc
add
dec
icebp
test
sbb
fstpt
cmp
lea
ror
jnp
js
loopne
scas
cmp
jb
xchg
ret
sahf
fsubs
test
sti
add
out
out
push
cmp
dec
xor
add
icebp
add
and
scas
xchg
and
cmp
fisubrl
pop
stos
sahf
inc
jo
mov
out
mov
cltd
add
dec
imul
mov
adc
push
into
test
and
call
mov
dec
adcb
push
inc
add
aam
in
andb
push
push
pcmpgtw
sbb
movsb
push
pop
dec
xchg
loopne
test
arpl
jae
push
enter
dec
pop
add
lds
stos
cmpb
daa
loopne
adc
fucom
xchg
add
and
into
sub
es
cmp
int3
add
in
cld
pushf
flds
sbb
nop
outsl
or
test
mov
push
add
xchg
fstpl
addl
mov
add
adc
xchg
and
jmp
sbb
and
in
orb
inc
sub
int3
add
push
fcomps
pop
and
xchg
jge
fwait
jle
stc
add
std
inc
mov
pushf
int3
int
test
pop
jne
cmc
xorl
dec
mov
sub
push
cld
fisttpl
rcrb
or
xchg
sbb
in
sbbb
xor
add
xchg
sahf
and
sub
test
stos
jnp
mov
lods
sbb
mov
insb
in
add
inc
repz
outsl
gs
dec
add
dec
loopne
mov
xlat
clc
sub
dec
jg
sbb
adc
mov
sub
je
push
jne
push
in
add
mov
add
loopne
test
mov
out
test
lahf
fmull
fsubrl
jge
outsl
in
dec
xor
xchg
add
orb
lods
add
push
test
test
clc
cltd
ds
repz
mov
cmp
xchg
nop
dec
mov
dec
jnp
xlat
pop
cmpsb
sub
adc
std
pop
pop
add
inc
paddsb
pop
pop
out
mov
and
cmpsl
addb
xchg
gs
add
insl
xlat
imul
cwtl
jl
push
add
cmp
xchg
sbb
in
cmpl
add
push
push
push
xchg
lcall
cli
xor
and
pusha
add
cmpsl
mov
add
jne
jns
and
das
movsl
xor
xchg
cwtl
add
shlb
mov
mov
sub
adc
cmp
add
out
mov
mov
xchg
inc
add
leave
sbbl
fwait
xchg
add
push
call
mov
inc
icebp
shl
jae
add
in
adc
loopne
cmpsb
bound
pop
lds
leave
test
jno
insb
bsr
mov
push
and
fcoms
xor
mov
adc
outsb
test
aam
leave
insl
sarb
repnz
in
test
add
cs
inc
orb
vandnps
lahf
test
lock
clc
xlat
add
sbb
rol
cs
repz
mov
call
inc
adc
aam
mov
popa
adc
sub
add
inc
orb
add
xor
mov
fidivrs
push
shrb
mov
call
aaa
or
scas
loope
push
xchg
imul
add
fbstp
push
idiv
xor
push
mov
mov
popa
lahf
jmp
push
add
cmpl
adc
scas
mov
and
nop
jg
or
loopne
arpl
pop
sar
xchg
xchg
cwtl
inc
xchg
add
cmp
sbb
or
inc
dec
mov
mov
ljmp
subb
dec
and
fiaddl
ljmp
ficoms
push
leave
les
aaa
fst
cmp
std
mov
fs
movsl
enter
fmuls
or
add
cmp
lea
or
ljmp
cmp
jg
mov
sub
es
cmp
outsl
cmp
and
xchg
push
inc
hlt
add
fisubs
sub
inc
adc
call
add
out
sub
adc
ret
cmp
insb
xchg
sbb
cmc
mov
add
inc
jno
aad
add
test
je
repz
or
mov
ret
std
adc
das
ss
lret
or
xchg
sub
cwtl
jl
negl
add
dec
jg
add
lret
add
cld
push
mov
mov
and
and
cmp
adc
addb
and
sbb
adc
mov
into
adc
mov
out
and
and
or
mov
adc
fnsave
xchg
push
repnz
fdivl
or
leave
leave
and
adc
xchg
lds
insl
and
add
pusha
xchg
test
bound
popf
adc
pop
xor
enter
adc
or
add
insb
movsb
testl
sub
dec
addr16
cwtl
mov
xchg
loopne
mov
pop
pop
push
ja
subb
mov
and
sti
push
movsb
pop
cmp
and
hlt
test
imul
mov
pop
cmp
pop
out
test
bound
or
add
push
sbb
dec
jge
sbb
cmp
gs
sbb
arpl
movsb
add
cmpsb
imul
dec
push
loopne
test
cmp
ja
xor
pusha
push
jnp
popf
fs
push
repz
addb
mov
pop
sub
rorl
push
sbb
add
lahf
xor
sub
jb
cmp
or
jg
mov
stc
push
bound
push
inc
cmc
jl
adc
or
cli
ret
jecxz
xchg
mov
in
push
cmp
or
lahf
adc
mov
bound
adc
pop
cmp
das
hlt
push
inc
add
inc
repnz
scas
call
popa
hlt
inc
or
loop
in
rcrl
popf
loope
je
test
sbb
and
leave
inc
mov
or
add
or
mov
icebp
add
les
cmp
cmpsl
jne
cmp
inc
jnp
mov
mov
testl
and
mov
jp
mov
mov
xchg
sub
insl
xchg
faddl
hlt
jnp
orl
jge
xchg
mov
movsl
mov
call
xor
mov
or
add
shl
loop
out
mov
and
cmp
clc
movsl
cmp
add
pop
cli
push
mov
or
cs
dec
pusha
shr
out
and
mov
add
xchg
in
insb
iret
nop
hlt
push
out
movsb
cmp
mov
aad
sbb
ds
and
xchg
add
arpl
mov
add
mov
or
cs
into
fwait
sbbb
repnz
sbb
xor
inc
cmp
mov
dec
outsb
rorb
incb
sub
loope
bound
les
cs
out
pop
cltd
in
mov
pop
cmp
sbb
pop
mov
in
sub
mov
dec
add
dec
add
jmp
sbb
cltd
daa
mov
js
and
pop
test
nop
enter
dec
cmp
out
add
jno
mov
addb
add
mov
or
add
mov
ss
mov
or
lods
pop
dec
int3
sub
andl
adc
and
sahf
aaa
aam
popa
xor
sarb
or
and
pop
cmp
mov
add
adc
xor
arpl
nop
add
and
dec
lret
ljmp
adc
mov
in
add
aas
or
and
xor
loop
xor
mov
out
dec
ds
inc
xor
pusha
test
sbb
xor
into
jns
mov
xchg
sub
out
inc
dec
add
mov
adc
lahf
and
push
and
fs
or
jae
cmp
mov
test
push
add
jne
aam
xor
pop
idiv
movsb
dec
ja
mov
inc
cli
push
push
loop
dec
iret
or
lret
jnp
or
inc
cmp
movsl
je
push
in
cmp
mov
add
pop
push
push
xchg
inc
add
fwait
xor
mov
sbb
insb
adc
fstpl
sbb
add
cmc
es
pop
arpl
iret
pusha
out
inc
dec
cli
lahf
pop
inc
cmp
jl
les
xor
xor
mov
add
jo
pop
sbb
pop
cmp
push
xor
xor
push
mov
sub
inc
sbb
nop
js
into
cltd
ja
gs
mov
or
sti
xchg
sbb
or
lods
push
mov
pusha
dec
scas
pop
or
lret
in
inc
roll
imul
adc
in
jnp
cmp
jge
movsl
dec
mov
jl
jle
adc
sbb
or
inc
pop
mov
clc
mov
xor
inc
nop
sbb
adc
adc
or
nop
push
inc
rolb
sarb
mov
add
cmp
add
sar
dec
mov
lods
adc
aam
filds
stos
outsb
cmp
inc
loopne
mov
sub
xlat
jns
inc
ror
mov
scas
and
add
xor
cmp
push
nop
push
inc
jbe
out
lock
out
dec
dec
pop
fcompl
or
call
mov
push
mov
push
shll
adc
inc
jecxz
jnp
orl
adc
stos
test
or
lods
and
divb
aas
shrl
aam
mov
cld
imul
or
insl
sbb
jge
xor
ja
jnp
dec
call
xor
mov
sub
sbb
sbb
nop
xorb
mov
xlat
call
pop
or
or
pop
sub
popa
push
mov
movsl
mov
sub
jbe
xor
test
dec
mov
stos
xor
dec
enter
mov
inc
or
adc
cmp
cwtl
and
daa
dec
lock
enter
mov
inc
into
fs
arpl
or
inc
pop
jo
xor
int
inc
pop
sarl
shlb
add
jns
or
sub
mov
dec
je
push
outsl
test
mov
push
lahf
leave
push
sbb
loopne
and
adc
js
loop
jmp
add
mov
push
push
fimull
out
es
in
ds
push
mov
xchg
and
std
mov
jle
sub
es
dec
mov
sahf
ds
scas
into
sub
inc
ljmp
fldcw
sbb
jo
or
mov
or
xor
adc
dec
or
lods
and
pop
xor
fsubrs
popa
pop
ret
xor
rorl
and
nop
inc
jl
js
mov
inc
xor
push
or
adc
into
xchg
dec
leave
mov
jl,pt
cltd
mov
mov
sbb
sbb
rcrl
adc
addb
pop
adc
adc
addr16
adc
in
shlb
outsb
inc
sahf
test
sbb
jns
push
inc
inc
xor
fistl
or
aam
cmpb
ja
fdivrs
cmpsb
xchg
dec
mov
dec
gs
loopne
cmp
cmpsl
inc
mov
vphaddbq
dec
sub
push
add
imul
pop
dec
mov
shlb
sbb
adcw
xor
bound
dec
fadds
push
int
je
mov
add
push
inc
clc
mov
xor
cmp
sbbb
aam
pop
jae
outsl
or
jle
shl
jge
cmp
push
shlb
imul
or
xor
shr
out
push
clts
inc
aad
xor
shrl
pop
xor
enter
adc
rcr
shll
cli
dec
pusha
cmp
mov
rcl
sub
add
arpl
pop
add
and
hlt
lock
fcoms
les
pop
jl
lcall
adc
push
sbb
push
movsb
or
or
jmp
cmp
sub
inc
sub
xor
xchg
lods
pop
or
mov
push
test
clc
inc
push
fadd
pop
lcall
aaa
mov
or
adc
inc
xorb
ds
xchg
and
std
in
fildl
pop
xor
nop
xchg
or
jp
out
sub
or
rcr
es
sbb
sub
adc
aas
xor
adc
rclb
adc
xchg
aam
lcall
mov
adc
dec
hlt
and
xorl
aaa
pop
cmp
clc
lret
fcmovu
or
cmpsl
sbb
and
mov
jp
jle
nop
mov
lods
andb
pop
flds
xor
fsubrs
div
int3
sub
ljmp
inc
jnp
cmp
mov
add
pop
xchg
mov
inc
shlb
jecxz
dec
sub
sub
aam
dec
lods
push
push
mov
sub
inc
inc
xor
pop
sbb
outsb
fimull
and
lods
sub
sub
rcrb
push
xchg
pop
icebp
add
adc
out
loopne
rcl
add
jns
in
and
mov
cmp
mov
push
push
inc
out
or
xchg
xor
sbb
sub
mov
mov
adc
xchg
adc
cmp
xor
leave
and
push
inc
lods
sbbl
xchg
lret
or
mov
pushf
and
add
push
jo
std
cmp
lret
sub
mov
mov
movl
xchg
and
hlt
mov
std
adc
or
dec
push
jbe
pusha
repnz
sbb
je
shrl
push
xor
in
sub
xchg
and
cmp
jmp
cmpsb
push
add
push
cmp
ficoms
std
or
cmp
shl
add
adc
or
sarb
in
test
shrb
mov
dec
add
loope
lahf
and
and
out
xchg
sbb
les
daa
jo
xor
int3
inc
jbe
xchg
and
lret
inc
push
mov
xor
popf
fs
je
push
mov
jne
sub
mov
loopne
fcoml
in
jo
pop
adc
push
in
shlb
xorl
mov
or
test
out
xor
dec
jl
js
scas
xchg
test
pusha
sub
and
dec
adcl
shlb
push
or
xor
or
popa
sub
inc
aam
adc
sbb
sbb
jg
enter
mov
lock
and
cmp
or
stc
andnps
add
mov
xchg
push
dec
enter
or
mov
fdivl
adc
cmpsb
test
pop
rcrb
lock
mov
pusha
negl
xchg
stc
mov
out
mov
mov
mov
lcall
popa
fmul
pop
call
rclb
lcall
cli
or
pusha
mov
xchg
lret
js
faddl
popf
inc
mov
loope
leave
xor
js
adc
adc
and
cmp
ret
dec
shlb
push
and
mov
push
movsl
test
cmp
push
xor
mov
fisttpll
lods
inc
xor
inc
ds
inc
pop
sbb
fidivs
call
or
and
lret
add
xchg
xor
inc
jo
pop
mov
xchg
jo
inc
rcrb
popf
sbb
loopne
dec
add
stos
repz
ret
dec
or
pop
shrl
push
cmpb
sbb
jbe
dec
lcall
or
js
popf
aaa
mov
add
xchg
dec
aam
inc
jge
out
or
pushf
adc
push
push
inc
inc
sub
adc
shl
push
jmp
adc
xor
and
cmp
push
and
shll
rorb
addb
enter
and
sub
mov
loopne
add
adc
jo
scas
jae
cwtl
xor
mov
push
lahf
fimuls
adc
rolb
daa
jo
xchg
jmp
frstor
jle
les
cmc
stos
mov
sbb
fwait
movsl
mov
push
in
jge
or
in
lods
push
and
js
in
or
push
outsb
enter
mov
mov
pop
mov
jne
cli
cmp
jo
imul
mov
lods
inc
adc
sbb
push
and
add
lds
lods
adc
mov
cmp
popa
mov
int
adc
mov
cmc
outsl
pop
or
dec
or
es
and
and
and
and
and
rclb
or
cltd
or
enter
pusha
adc
add
outsb
or
mov
insl
and
or
fwait
adc
jno
cmc
loop
enter
int
pop
xchg
push
xor
cmpsl
mov
sbb
mov
xchg
test
or
andb
sub
call
adc
mov
cmpl
hlt
inc
cmpsb
add
cwtl
pop
aas
or
and
test
dec
fmul
fcomps
xorb
fwait
push
sbb
jp
pusha
movsl
popa
pop
call
pop
test
or
add
je
xchg
inc
sbb
mov
pushf
inc
jo
xchg
adc
cmp
sbb
fnstsw
out
or
or
or
and
mov
lods
cmp
xor
stc
hlt
je
mov
sbb
xor
es
sbb
les
mov
add
mov
and
fldl
or
jo
or
sub
in
ret
xchg
push
cmp
adc
ret
and
sbb
adc
icebp
xor
adc
or
xchg
and
sbb
les
in
dec
add
push
add
push
pop
jge
sbb
fsubl
adcb
cmc
insl
mov
jo
xchg
or
lods
cmpb
add
insl
ficoml
or
cmp
push
cmp
in
sub
orb
cwtl
cmp
mov
sbb
stc
push
int
adc
ret
pushf
xor
or
adcl
add
or
rorb
out
inc
push
lods
daa
bound
xchg
aam
xor
pop
adc
pusha
sbb
add
loope
mov
add
rcrb
pusha
outsl
insb
sub
dec
es
add
popa
mov
or
mov
testl
fidivl
xchg
cs
mov
fstpl
adc
and
xchg
xchg
in
xchg
adc
nop
or
std
nop
or
dec
lods
mov
inc
std
dec
xor
lods
inc
lock
les
and
or
aad
add
nop
dec
cmp
sub
dec
or
push
sub
and
call
and
dec
adc
loopne
jecxz
and
pop
mov
and
xor
shrl
aad
rcrb
mov
icebp
inc
mov
cmp
push
sub
push
push
arpl
orl
dec
incb
sbb
xor
loopne
subl
rcrb
cltd
rcr
std
cmp
cmp
dec
push
lock
cmp
leave
lret
sbb
or
add
sbb
push
sbb
cmpsl
add
add
dec
and
add
icebp
mov
sbb
push
out
test
dec
jbe
cltd
stc
jae
bound
fcomi
lea
xor
leave
mov
add
fsub
popf
add
and
cmpsl
cmp
ss
cmc
dec
jle
add
shr
mov
test
mov
sti
popa
ret
scas
cmp
add
inc
dec
ror
jo
add
jae
mov
scas
cmpsb
add
daa
rorl
add
aaa
push
js
adcb
adc
pop
hlt
cmp
stos
sub
sub
loop
nop
or
mov
lock
jbe
add
mov
sbb
or
mov
out
andb
jns
movntps
add
mov
xor
cmp
imul
add
hlt
loopne
je
push
sbb
mov
or
in
lds
int3
in
mov
add
std
pop
jle
idiv
push
or
add
pushf
cmp
add
std
mov
fs
or
inc
jmp
fiaddl
dec
pop
xchg
int3
sub
clc
and
cmc
mov
cmpsl
dec
add
test
popa
xchg
test
mov
fs
mov
test
imul
xchg
hlt
xchg
add
je
int
push
cmpsb
push
pop
fildl
push
in
adcl
add
pusha
pop
jbe
leave
fld
push
jo
aad
loope
clc
xchg
lret
mov
lcall
add
call
loope
cmp
add
sub
sahf
pop
loop
xchg
orl
andb
in
or
fistps
cltd
mov
add
sti
jl
push
jmp
xor
cli
enter
add
push
shl
add
push
imul
rolb
into
xchg
adc
sbb
push
subb
in
outsb
pop
mov
pusha
mov
jne
pop
movsl
lret
adc
mov
or
pop
push
imul
shlb
add
push
out
xchg
out
rorb
sbb
jmp
cmp
movsb
out
xchg
add
aam
shrl
pop
push
in
shl
add
xor
outsb
inc
jnp
js
jno
lcall
paddsb
pop
xchg
push
pop
in
adc
into
mov
sbb
mov
leave
push
add
adc
cwtl
aad
fsub
in
add
pop
inc
movsb
jne
jmp
icebp
xchg
mov
sahf
mov
push
shl
xchg
jnp
add
pop
ficompl
push
aas
cmp
test
fs
adc
out
dec
jnp,pt
or
xor
adc
push
orb
mov
mov
pop
add
addr16
and
add
and
arpl
inc
or
and
jge
loopne
sub
lea
popf
divl
lods
out
dec
stc
mov
out
cmp
scas
addb
xchg
fistpll
rorb
mov
ret
lock
add
pop
daa
mov
xchg
lods
mov
or
xchg
in
push
repnz
inc
add
lcall
pop
mov
rcrl
push
incl
xor
mov
lods
add
lret
jle
add
mov
les
add
mov
mov
out
addr16
loopne
cld
adc
inc
lods
mov
jae
mov
mov
add
aam
das
and
call
shrb
ret
pop
sbb
add
adc
jae
lcall
aaa
fdivl
pop
mov
xchg
addr16
pushf
xor
les
add
push
dec
add
xorl
stos
add
scas
subl
loopne
mov
or
jnp
shlb
push
int
es
rolb
jg
out
stos
sti
dec
movsb
sbb
lgs
insl
inc
std
sub
add
mov
jnp
cli
out
pop
test
rcll
or
xor
sbb
fcmovne
adc
dec
dec
aad
cwtl
pop
add
iret
std
repnz
fsts
xor
loopne
add
cltd
aam
iret
out
fmul
sbb
jne
cwtl
jl
dec
push
mov
mov
pop
sti
cmp
sbb
es
xchg
cmp
sub
mov
mov
adcb
push
shll
out
int3
loop
adc
cmc
idiv
inc
adc
inc
pop
ss
add
mov
mov
pop
inc
imul
movsb
in
loopne
jecxz
xchg
mov
push
lret
ljmp
cmpl
cwtl
insb
and
xchg
jne
mov
cli
pop
add
or
mov
out
addl
aam
or
add
xlat
imul
loope
out
add
insl
rorl
notl
mov
repnz
xchg
lods
pusha
jb
insl
mov
or
clc
ret
icebp
pusha
roll
orl
pop
fildl
in
popf
out
jb
int3
shrb
add
mov
test
das
lret
insb
pop
pop
add
fsubrl
push
ret
cmp
pop
loope
dec
repnz
xor
add
push
mov
add
jmp
inc
ja
mov
scas
out
gs
mov
jae
mov
cwtl
xor
pop
cmp
or
xchg
pop
rclb
sub
jae
cli
and
add
cld
add
das
repnz
adc
test
hlt
adc
daa
aaa
insl
rcrb
inc
out
jle
jge
lret
pushf
repnz
gs
fsub
ljmp
pop
inc
cmc
movsb
js
mull
inc
sahf
es
xlat
mov
mov
cwtl
pop
mov
jnp
add
shrb
ffree
clc
push
and
or
test
fldenv
sub
push
cs
pop
and
mov
mov
movl
xchg
push
push
mov
mov
lcall
ss
std
gs
add
xor
outsl
push
inc
push
xor
mov
popf
stos
inc
add
pop
jle
dec
mov
dec
ja
mov
sub
insl
scas
js
gs
mov
in
add
sbb
aad
addr16
sbb
xor
movsb
adc
rolb
loopne
into
mov
sub
rorb
shrl
mov
mov
test
push
jne
push
inc
movsl
and
inc
adc
xor
sub
ret
push
negb
mov
stos
cli
rclb
and
xor
add
jg
xchg
stos
addr16
pusha
imul
fdivr
add
rcll
cmp
jmp
cmpsb
ja
add
das
adc
mov
cli
add
push
lods
push
es
outsb
jl
or
sbb
add
xor
or
and
cld
add
or
incl
xor
adc
insl
sbb
jb
add
mov
mov
add
jne
add
dec
dec
mov
add
in
pop
dec
or
add
xchg
sbb
mov
ljmp
add
gs
pop
mov
mov
push
xor
mov
loop
outsb
aas
xchg
pop
push
dec
mov
xor
test
mov
in
pop
jnp
or
add
out
cmp
sub
in
xchg
mov
fsts
add
sub
and
dec
sbb
pop
ss
fisubrl
pop
sbb
cmp
aas
push
push
sarl
daa
mov
mov
out
adc
adc
push
and
in
call
cld
sbb
adc
add
lods
sub
rcrb
mov
jmp
xor
mov
les
lahf
push
mov
rcr
jmp
add
sub
or
add
xchg
lea
nop
lret
out
sub
ja
mull
mov
cmp
rorb
xlat
add
jmp
cmc
add
pop
incb
push
xchg
ja
ret
cli
ja
jbe
or
fs
insb
add
pop
push
mov
or
insl
xchg
std
mov
add
jnp
ss
out
add
jbe
or
divl
push
sbb
lds
push
add
dec
ret
mov
adc
mov
push
sub
loopne
in
add
push
shlb
dec
test
cld
cmpsl
dec
pushl
dec
ljmp
pop
add
xchg
iret
dec
or
cwtl
int3
add
cmp
ds
imul
mov
test
cs
ficoms
ret
cmp
mov
aam
pop
pop
std
pusha
pusha
lods
je
fidivl
pop
ficomps
mov
pop
cmc
mov
push
sbb
lea
cli
pushf
negl
add
lock
movl
push
ds
add
lds
mov
std
and
push
pop
leave
test
push
pop
and
cld
add
add
pop
into
sbb
mov
fsubr
hlt
sub
lods
jmp
push
and
pop
xor
pop
mov
xchg
jge
andb
mov
and
decb
jle
jg
push
add
cld
cmpb
addr16
clc
adc
iret
add
sub
int3
addr16
add
das
dec
jmp
int
sbb
jnp
add
mov
outsb
sbb
add
fstps
or
jb
mov
dec
jg
js
negb
cmp
sti
testl
xor
lea
aaa
jns
ja
add
mov
jle
or
add
or
mov
sbb
cmpsb
and
add
mov
stos
add
jbe
cwtl
mov
icebp
stos
lea
inc
ljmp
add
inc
sbb
arpl
add
dec
in
push
xor
cld
adc
push
movsb
jne
pop
ret
xor
dec
push
cltd
push
jp
out
cmp
xchg
push
adc
aaa
add
lcall
insb
lret
mov
jo
lahf
jb
add
add
fs
add
adc
call
dec
mov
sbb
adc
bsf
popf
int3
inc
inc
xor
in
sub
push
xchg
mov
decb
sbb
fnstsw
or
rcr
add
test
mov
sub
rorb
pop
lock
dec
jp
and
mov
add
nop
jnp
inc
sbb
nop
pushf
add
inc
dec
fisubrs
xchg
ret
test
in
dec
sbb
and
divl
sbb
loopne
xor
sarl
jecxz
test
mov
add
pusha
cwtl
xor
jp
add
mov
in
aam
mov
cli
pusha
leave
add
adc
clc
push
int
lcall
in
ss
push
mov
or
sbb
mov
rclb
add
cli
mov
movl
add
ljmp
sbb
loop
inc
fwait
xchg
dec
clc
mov
add
cli
and
adc
mov
cld
add
gs
ds
push
mov
add
aas
xor
jno
pop
cld
fisubrs
xcrypt-cbc
cmpsl
push
cmp
outsl
jp
cmp
loop
pop
inc
pop
xchg
and
movb
stos
inc
adc
pop
jnp
add
pop
stc
mov
add
lahf
xchg
xchg
addb
bnd
loopne
inc
xor
stos
call
iret
cld
jg
stc
mov
cmp
xchg
out
add
aam
inc
push
mov
scas
sbb
sub
push
pop
adc
cmp
add
ret
cltd
out
mov
mov
cmp
pusha
push
mov
dec
and
and
push
ret
lock
pop
xchg
call
inc
call
ret
repnz
mov
jne
add
cmc
rorl
sub
or
xchg
shl
shrl
iret
fbstp
or
cs
gs
scas
and
rclb
xor
orl
add
les
rcrb
add
stos
dec
push
sub
lods
mov
jo
pop
xchg
pop
pop
cmp
into
mov
fmuls
shll
xchg
mov
outsl
mov
leave
in
jo
push
sub
sub
xchg
mov
test
inc
add
push
xchg
iret
aas
stos
pop
pop
or
sbb
cmp
inc
mov
pop
jnp
add
or
add
div
lods
mov
stos
or
mov
xchg
jmp
add
mov
sbb
subb
adc
dec
out
stc
add
fldlg2
rol
shl
or
jmp
iret
orb
movl
push
jecxz
mov
xchg
add
pop
les
cld
push
popa
add
add
mov
addb
ds
lea
jmp
mov
sbb
sbbl
cmc
cmp
mov
jnp
stc
incb
add
xchg
fs
fsub
mov
push
jmp
ds
aas
adc
cmp
pop
xchg
push
mov
arpl
inc
cmpsb
sub
repz
aam
jmp
mov
test
in
fildl
pop
and
test
xor
sbb
ljmp
push
pushf
mov
xchg
sahf
inc
push
adc
insl
dec
js
add
push
adc
push
lahf
rorb
jb
out
xchg
add
pushf
cs
ret
in
popa
nop
adc
sub
add
loope
push
sub
add
out
les
add
xchg
lcall
fmulp
cmc
int3
sub
pop
stc
xchg
enter
loop
or
mov
xchg
sbb
out
and
push
or
push
test
push
cmc
jo
add
mov
mov
dec
faddl
int3
mov
sub
push
xorb
push
std
ljmp
popf
adc
enter
cmp
xchg
daa
cld
sub
cmp
jnp
lock
adc
gs
xchg
cmp
hlt
fisttpll
jno
add
mov
es
int3
xchg
lock
mov
or
fiaddl
stos
dec
fstps
hlt
imulb
and
loopne
pop
add
loopne
jmp
mov
es
aam
add
add
adc
or
add
les
jno
not
push
lcall
cmp
pop
pusha
and
mov
adc
mov
sarl
and
mov
add
xchg
sbb
adc
mov
mov
mov
pusha
cmp
loop
add
jmp
add
adc
sbb
mov
inc
xor
mov
fxtract
jae
push
gs
test
adc
cmp
add
pop
sbb
jns
ljmp
imul
arpl
in
xor
dec
and
adcl
in
loopne
sub
enter
cmpsl
xor
loopne
pop
cltd
add
add
mov
add
fsts
lds
jecxz
fcmovnbe
or
lods
jo
fisubs
fwait
or
add
adc
sub
js
aaa
mov
out
out
add
frstor
xchg
es
add
fstps
jecxz
mov
repz
rcll
jno
sbb
ret
mov
rcrb
in
cltd
push
stos
lock
jno
pop
adc
dec
xorb
pusha
or
jo
andb
mov
xchg
ds
lahf
inc
roll
mov
shll
jo
push
xor
inc
jle
sahf
fildl
and
lods
testb
stc
mov
popf
les
adc
add
jbe
leave
inc
jae
pusha
divb
adc
sbb
aad
cwtl
add
sbb
push
outsl
jl
xor
leave
and
mov
fwait
add
insb
jnp
xchg
mov
rorb
add
mov
sbb
add
mov
ljmp
jnp
sbb
mov
ret
add
lods
rclb
call
mov
add
pop
push
shl
add
stos
add
popf
cmp
xchg
and
je
add
push
xorl
mov
shlb
fsubs
or
xchg
fildl
push
sbb
dec
adc
jecxz
adc
data16
in
mov
mov
rclb
cmp
iret
cmp
and
or
ja
mov
xchg
inc
test
lret
sbb
add
inc
push
shlb
mov
out
sub
lret
cmp
push
loopne
test
loope
mov
jl
jecxz
dec
push
jo
rclb
sbb
pop
aam
add
jmp
or
pop
pop
dec
mov
sub
inc
mov
mov
es
xor
fnstcw
adcb
sub
xchg
loope
jle
mov
lock
adc
ljmp
add
xor
clc
mov
pop
push
xchg
int3
data16
push
sbb
sarl
mov
dec
stos
jno
add
add
loop
pop
or
sub
push
xchg
add
pop
inc
cwtl
clc
shlb
push
dec
loop
mov
rcr
jnp
pop
jne
and
enter
inc
jp
sbb
je
les
push
jbe
push
cwtl
cmp
stos
addl
insl
push
clc
xor
arpl
outsb
xor
subb
mov
jne
sbb
arpl
out
jl
or
xlat
mov
sbb
notl
adc
pop
jmp
push
mov
xchg
push
add
popf
fdivr
xor
push
mov
test
popa
jns
jne
mov
cwtl
xchg
dec
cmpsb
push
xchg
and
in
pushw
push
rolb
pop
int
dec
xchg
lds
fwait
gs
mov
test
inc
xor
imul
cmp
or
pop
lret
js
jno
add
inc
mov
cwtl
sbb
add
or
inc
add
mov
mov
stos
push
xchg
mov
fiaddl
leave
addl
xor
inc
xor
sbb
out
add
pop
cwtl
mov
imul
jne
sar
dec
adc
or
mov
dec
inc
outsl
add
push
cs
jge
sbbb
cmc
and
push
xchg
mov
test
leave
xor
add
fidivrs
test
aad
adc
es
adc
scas
fwait
mov
and
sbb
add
fdiv
xorb
pop
xor
add
inc
fwait
xor
shlb
cmp
mov
ja
dec
xor
mov
mov
pop
test
push
ja
jmp
push
mov
or
insl
mov
pop
xchg
ret
add
mov
sbb
pop
pop
in
add
aaa
sub
popf
stos
pop
push
mov
sti
mov
mov
outsb
clc
rorb
icebp
bound
pop
ds
xor
jle
push
push
pushf
jnp
mov
fwait
lock
add
and
push
repz
in
test
add
dec
add
orl
out
test
add
shlb
mov
and
xor
fidivl
test
divb
arpl
pop
into
adc
popl
add
aaa
bound
cmp
adc
push
adc
push
xor
out
dec
and
mov
popa
sbb
dec
jmp
mov
nop
add
fimull
clc
push
and
int3
lods
sub
sub
mov
daa
gs
pop
aas
subb
cltd
and
push
cmp
mov
int
fwait
psadbw
inc
shl
sti
mov
and
or
dec
dec
jecxz
sub
mov
fucom
inc
or
cmp
daa
cmpsl
lock
enter
xchg
scas
add
xchg
jecxz
inc
cmc
cmp
arpl
ds
or
mov
rolb
sub
iret
jne
int
daa
fimuls
inc
pop
lds
add
or
dec
inc
mov
mov
and
lret
jmp
sub
lods
out
push
dec
cmp
xchg
add
jne
stc
push
push
dec
mov
adc
sub
add
enter
lods
xchg
mov
or
cmp
xchg
jb
pop
faddl
jae
repnz
not
push
ljmp
pop
pop
rclb
mov
jno
and
add
adc
aam
mov
sarb
push
mov
je
add
xchg
sbb
sti
jo
scas
or
ljmp
hlt
mov
sbb
pop
jecxz
pop
mov
shlb
pop
out
test
cmp
fnstcw
jae
cmpsb
add
push
push
sub
pop
dec
adc
pushf
hlt
adc
insb
rcrb
pop
jbe
sbb
movsb
sub
nop
in
adc
xor
and
ret
add
adcl
sbb
inc
cld
imulb
int
aam
leave
adc
dec
push
nop
add
pop
jo
pop
add
jae
jne
add
push
mov
add
lds
pop
add
xor
pushf
lret
mov
in
push
ret
es
jo
pushf
add
mov
outsl
and
sbb
xchg
or
jl
adc
inc
jb
test
call
push
imul
mov
pusha
addb
roll
test
xchg
ficoms
xor
xlat
sahf
inc
add
sub
or
out
test
call
mov
orl
hlt
add
add
in
add
inc
push
movsl
add
lods
mov
mov
shrl
xchg
adc
scas
xor
cmp
xor
xchg
mov
add
shlb
xchg
shrl
fcoms
xor
and
lahf
add
mov
aas
sbb
xchg
outsl
mov
add
ficompl
lcall
and
sti
mov
loop
mov
rclb
jnp
sub
or
xchg
or
daa
push
or
mov
pop
arpl
dec
hlt
add
pop
xor
sub
gs
jp
or
or
sbb
mov
pop
jge
cld
orl
pop
dec
and
mov
lods
push
jle
repnz
in
clc
and
in
jmp
jo
scas
ja
push
fiadds
testb
pop
mov
inc
cmpsb
push
inc
mov
sbb
sbb
ret
testb
inc
shll
xchg
jge
add
repz
pop
in
popa
test
out
cmpb
xchg
add
and
jle
pop
pop
add
xor
insl
or
testl
jp
sub
pop
leave
cmpsl
lds
inc
cld
inc
pop
nop
loopne
sub
adc
je
loope
hlt
outsl
and
pop
inc
fisttpll
test
repz
add
nop
dec
jae
add
add
jno
pushf
push
sub
test
xor
add
cmp
add
xor
lret
add
jle
xlat
cmp
or
bound
movsl
pop
roll
adc
jbe
cmp
jmp
jo
arpl
enter
xchg
scas
ficomps
xchg
fbld
add
ret
inc
cld
add
pop
jno
add
movsl
add
int3
jmp
into
xor
insl
mov
sbb
aas
add
sub
mov
push
fldcw
push
scas
jo
sub
push
add
add
mov
or
incb
scas
cmp
or
iret
lahf
mov
outsb
pusha
dec
js
ja
mov
mov
fildl
js
frstor
nop
dec
mov
dec
mov
xor
mov
or
and
and
or
and
dec
xor
adc
ja
xor
cmpsl
xor
pop
test
inc
and
mov
add
mov
push
js
add
push
outsb
movsb
ret
add
cli
aam
lds
jl
xchg
fadds
rclb
mov
popf
add
push
xchg
add
sbb
scas
fwait
out
add
imul
fsubrl
add
inc
movsb
add
ja,pn
jg
xor
jbe
nopl
sub
out
lds
mov
pop
xor
sbb
insb
sub
out
fstps
push
hlt
hlt
cmpsl
movb
pop
insl
jge
push
add
mov
str
inc
inc
aas
sbbb
xchg
nop
enter
addb
bound
xchg
pop
test
push
outsl
and
sbb
into
aad
and
test
mov
cld
adc
pop
inc
ljmp
out
push
sub
sbb
inc
jo
dec
daa
out
aad
cmpsl
gs
jmp
inc
cmp
push
data16
mov
jnp
and
inc
cwtl
mov
or
add
in
divb
out
add
movsb
rcl
add
nop
insb
inc
add
pop
dec
add
jne
sbb
in
mov
jecxz
ds
mov
push
sub
add
pop
jns
xchg
sub
ljmp
orb
push
faddl
cmp
loope
cld
mov
push
cmp
out
out
dec
scas
push
mov
testl
inc
cmp
or
dec
ficomps
sbb
stos
jo
add
dec
and
inc
call
jo
call
add
in
int
dec
sti
add
xor
sbb
and
add
das
adc
add
insb
jg
add
pop
xchg
add
sub
xor
jno
push
lock
dec
test
inc
add
in
xor
add
pop
gs
lds
sbb
dec
add
loopne
push
cltd
pop
cmc
add
lret
cmp
xchg
je
out
xchg
push
push
enter
jl
add
xchg
ds
int
cltd
mov
sub
adc
bound
loopne
add
out
inc
xchg
pop
jmp
mov
dec
cmpsb
dec
ret
add
mov
pop
test
cmc
mov
sbb
enter
in
add
std
stos
pusha
dec
sub
jecxz
scas
xchg
icebp
inc
xchg
push
jae
add
mov
jno
ss
xchg
cmc
add
iret
pop
adc
insb
lcall
push
dec
sbb
push
cmp
mov
xor
xor
xchg
adc
mov
ret
rcr
pusha
cmpsb
add
repnz
rcrb
cmpb
mov
loope
pop
xchg
shlb
add
insb
add
imul
mov
dec
adc
push
mov
sbb
sub
add
mov
andb
mov
adc
and
lea
fldt
dec
lcall
mov
icebp
mov
xchg
sub
mov
mov
rcr
andb
add
incb
add
clc
aaa
in
add
pusha
mov
stos
insb
or
push
movb
xor
scas
add
mov
sub
push
jecxz
loop
rolb
mov
cld
divb
shll
movsl
add
push
xor
inc
dec
sbb
and
in
insb
adc
xchg
pop
or
sub
pop
loope
pop
inc
stos
sub
js
mov
add
xchg
mov
clc
scas
cmp
lcall
add
dec
jne
dec
xor
daa
dec
aaa
es
test
cmpsl
xor
add
mov
stos
pop
cmp
add
sbb
sbb
sbb
pushf
jo
in
sarb
add
sbb
mov
push
jmp
hlt
cmpb
sub
in
jbe
mov
add
mov
int3
dec
out
mov
popl
xchg
xor
jns
add
dec
frstor
mov
add
aad
mov
test
cmp
data16
repz
loope
les
jmp
pusha
xor
push
xor
pop
pop
loop
inc
or
push
add
dec
pop
inc
sub
int3
cli
sbb
xchg
pushf
jmp
sti
add
fxch
fwait
cmp
ffree
mov
pusha
test
xorl
xchg
sub
int
in
addr16
cld
out
or
int3
add
cmc
and
add
int
fiadds
dec
ds
xor
push
mov
inc
mov
xor
nop
push
ja
add
sbb
or
push
lds
push
push
jne
jle
mov
adc
lea
push
fimuls
pop
add
aad
add
addr16
pop
pushf
inc
dec
mull
stos
js
sbb
add
pop
mov
or
push
mov
add
lods
adc
loop
cmp
xchg
xchg
add
cli
insb
data16
sbb
out
inc
lock
add
shll
xor
jbe
pop
pop
pop
jnp
std
adc
adcl
in
jge
outsl
cmp
sbb
mov
pusha
mov
dec
inc
icebp
add
add
mov
add
dec
sti
mov
ret
mov
ja
mov
push
mov
icebp
cwtl
adc
inc
arpl
add
dec
push
mov
jle
add
scas
add
loopne
es
xor
pop
or
jge
pusha
mov
ret
nop
cmpsb
daa
inc
idivb
add
mov
repnz
out
jae
jecxz
imul
pop
out
jmp
xchg
push
inc
add
and
mulb
add
outsb
das
lods
jb
jle
out
add
xchg
stos
lds
mov
add
movsl
cmp
lret
lods
sarb
aas
out
pop
bound
add
mov
mov
add
pop
add
mov
jne
sub
mov
faddl
pop
in
nop
loop
jbe
mov
sbb
ja
jp
loopne
fcoml
adc
cwtl
cltd
xchg
add
cmp
mov
xchg
add
sbb
sub
push
xchg
and
cmpb
pop
andl
rorb
or
cld
mov
dec
mov
out
add
rcrb
jb
add
leave
int
imul
out
pop
sahf
into
aas
and
js
add
xchg
jne
add
or
and
sti
add
stc
inc
lret
int3
sub
add
sbb
add
adc
push
add
std
sti
pop
out
mov
fcompl
lahf
in
or
fisttpll
push
cmp
add
push
xchg
leave
dec
aam
add
cmc
loopne
lret
add
dec
lds
adc
adc
pop
rcrb
add
or
cmp
sti
shr
add
pop
sub
cs
adc
pusha
addr16
aad
cmp
xchg
incl
mov
xor
popl
mov
lods
fldt
or
mov
lahf
pushf
push
xor
xor
sbb
out
mov
or
ficompl
or
add
icebp
mov
pop
mov
or
fistl
out
mov
testb
js
xor
and
das
mov
pop
pusha
adc
xchg
aam
scas
shrl
in
and
add
push
mov
in
hlt
pop
add
sub
add
mov
mov
push
add
lahf
xchg
lods
stc
push
dec
fiadds
adc
adc
add
in
pop
mov
cmp
ret
filds
add
addr16
pusha
pop
out
push
je
loopne
jle
xor
dec
mov
adc
addr16
test
jns
scas
pop
or
adcl
hlt
jl
add
ss
inc
mov
add
or
les
mov
cs
testb
sbb
mov
cmp
pop
adc
int3
mov
add
scas
test
pop
in
fiaddl
out
push
jg
ss
addl
lret
movsl
shlb
xor
push
jle
mov
add
insb
push
mov
stos
sbb
nop
sub
xchg
dec
push
mov
es
or
lods
sbb
sarl
lret
push
sbb
adc
negb
sbb
xor
xchg
xchg
cwtl
out
add
int3
add
fucomp
add
pop
lret
xor
mov
jnp
push
movsl
sub
insl
cmp
adcb
ss
and
cmp
sbb
add
pop
sbb
or
push
pusha
xchg
cmp
test
inc
add
iret
jmp
adc
push
dec
leave
adc
dec
fs
and
inc
and
lret
sbb
mov
inc
lock
fisttpll
ret
jb
lahf
addr16
mov
addb
mov
lret
aam
adc
cmpsb
int
push
add
mov
loope
cld
in
int3
aam
add
xchg
jns
pop
shrb
ljmp
int
inc
jae
add
and
add
bound
fdivrl
addr16
push
jae
ror
add
rcl
add
push
mov
inc
sarl
xor
add
mov
mov
lret
push
pop
adc
cwtl
movsl
push
add
call
enter
cmp
jne
imul
add
jg
xchg
push
out
enter
test
shll
int3
jp
insl
enter
sub
mov
stc
shll
push
mulb
sub
add
aas
add
in
dec
leave
test
shlb
icebp
cld
push
cld
mov
mov
mov
nop
adc
pop
xchg
in
mov
mov
jle
jo
or
mov
loop
testb
dec
sbb
sbb
adc
xlat
add
push
fidivrs
rcl
xchg
in
and
mov
pop
divl
push
lock
cmp
dec
lcall
push
mov
jge
add
cmp
icebp
cmp
out
sub
call
push
sti
jo
inc
loopne
shlb
push
adc
push
sbb
jae
js
js
lcall
xor
cli
or
lret
scas
iret
inc
pop
add
repnz
orb
add
adc
adc
xor
push
adc
add
inc
fs
sub
pop
dec
movsb
repnz
adc
add
imul
inc
clc
pop
enter
xchg
adc
sbb
fwait
jae
add
shll
out
hlt
int
loop
add
imul
or
les
and
add
sahf
mov
inc
add
inc
enter
add
push
iret
jle
inc
es
daa
dec
in
xlat
data16
lret
pusha
clc
mov
dec
push
fdivs
add
js
push
pop
mov
rolb
xlat
loop
cmc
or
jge
pop
cmp
add
cmp
or
arpl
add
mov
add
mov
adc
add
fisttpll
cmp
jecxz
pusha
gs
jg
fs
jmp
mov
outsb
je
add
int
sub
jge
xchg
cmp
fmull
pushf
add
mov
cs
xchg
inc
les
pop
in
pop
cli
xor
xchg
adc
add
mov
scas
fbstp
push
jno
sbb
inc
cmp
inc
pop
aaa
inc
push
loope
int
pop
and
mov
push
pop
or
insb
dec
push
and
mov
xchg
mov
xor
cmp
jo
cli
add
shll
je
add
dec
jo
add
mov
notl
test
pop
sti
fnstsw
out
sbb
imul
les
xor
pop
xchg
push
repz
or
stos
int3
mov
pop
and
or
clc
add
mov
cmovge
jecxz
add
xchg
mov
cmp
lods
in
or
insb
jae
inc
inc
and
lea
or
pushf
xor
pop
mov
cld
daa
roll
dec
xor
push
es
loope
inc
dec
movb
addb
mov
inc
adc
xor
push
mov
sbb
popl
push
fs
adc
fnstenv
daa
pop
push
cmpsl
ss
and
xchg
outsb
enter
mov
imul
add
fmuls
sahf
movsl
rcr
push
sbb
adc
daa
inc
adc
mov
movsl
mov
jl
jp
xlat
pop
pop
push
push
push
lret
dec
icebp
movsl
add
mov
outsl
add
out
dec
sub
cld
jmp
ja
jp
add
mull
push
xchg
mov
lret
ja
ror
insb
scas
out
outsl
mov
and
notb
bound
cld
pop
sbb
je
add
fsubp
push
xchg
pushf
cmp
xor
add
or
sub
cli
sarl
add
cmp
add
jg
into
sub
pop
or
enter
sbb
sbb
jp
mov
fwait
sub
rol
sub
imul
cmp
lock
aaa
add
and
repz
inc
add
cmp
xchg
cmp
lods
push
pop
sahf
mov
push
outsb
add
movsl
or
repz
inc
aam
loope
pop
xor
rcl
cs
in
cmpsb
push
add
out
sub
ficomps
push
mov
lods
add
flds
cli
sbb
cmp
sti
fstp
pusha
dec
js
cmp
bound
arpl
fildl
fiadds
add
xorw
dec
scas
pop
xchg
cli
or
push
push
mov
add
lret
pop
pop
fsubs
jp
push
pop
mov
call
pop
add
and
lcall
or
fdivl
xchg
add
cmp
jg
or
lret
xor
adc
add
xchg
cmp
frstor
add
mov
xchg
adcb
pop
sbb
push
lret
xor
add
xchg
inc
add
xchg
xor
int
add
add
sbb
add
jo
stos
jg
ljmp
add
pop
mov
pop
xor
xor
add
xchg
rcll
xorb
cltd
mov
es
add
cmpsb
in
inc
stos
adc
lds
dec
add
cmp
dec
movsb
xor
inc
mov
test
inc
sub
in
jecxz
mov
aad
jnp
xchg
das
insl
or
add
and
push
add
aam
add
test
inc
xor
mov
out
test
mov
insl
mov
sub
rol
mov
cwtl
aas
cmc
repz
add
fmull
outsb
push
loope
add
mov
sbb
stos
xor
add
push
sbb
gs
push
add
xlat
jmp
push
out
loopne
cmp
add
and
daa
insl
add
sub
outsl
jp
insb
or
lock
pop
adcb
add
mov
addl
adc
lods
inc
mov
movsl
outsb
sub
andb
and
paddusw
add
daa
inc
add
arpl
fcomps
xor
or
add
mov
push
pop
xchg
add
pop
and
xchg
jo
cli
cmp
mov
xchg
or
sub
into
sbb
lock
jne
jno
daa
or
xchg
xlat
fwait
add
jp
xchg
sub
sub
cwtl
mov
repz
mov
hlt
pop
loope
mov
sbb
dec
mov
mov
xor
jbe
sbb
cmp
cs
add
sbb
xor
jle
cwtl
pop
dec
bound
add
mov
or
es
outsl
add
pop
pop
fadd
pop
popa
cwtl
movsb
rorl
out
stc
scas
mov
sub
push
mov
xchg
push
out
test
sahf
add
leave
cmc
fnstenv
cld
push
sub
lock
and
insb
add
mov
mov
pusha
push
pop
out
cs
cmp
xor
or
cld
aad
fildl
mov
add
xchg
pop
inc
lcall
jmp
scas
in
andb
addb
push
push
popa
sbb
dec
add
and
fadds
jne
sbb
xchg
shll
sub
add
repz
pop
push
add
pop
add
xchg
sarl
add
insl
imul
mov
std
cwtl
sbb
pop
in
mov
inc
in
popf
stc
add
fnsave
add
pop
hlt
cmp
cmc
std
add
je
icebp
xor
sbb
lds
mov
lock
mov
int
jbe
push
add
pop
or
and
add
or
push
xlat
subl
add
xchg
jne
add
test
cmpsb
dec
in
add
call
bound
lcall
fiadds
mov
cwtl
mov
loop
jge
cmpb
mov
xchg
push
popl
mov
out
sub
les
xor
insb
pop
inc
lock
cmp
xlat
pop
das
pushf
sbbb
pop
cmpsb
add
aas
cmp
mov
fidivrl
push
add
xchg
add
test
mov
add
push
ficoml
add
jno
mov
xorb
sbb
sbb
cmp
cmpsb
aaa
cmp
loop
cmp
mov
push
cwtl
push
addr16
jo
data16
mov
add
sbb
clc
dec
rcr
les
adc
adc
sub
stos
xchg
mov
aad
sub
les
mov
or
push
out
inc
mov
cli
daa
into
mov
sarb
sahf
add
jl
flds
scas
push
xchg
imul
arpl
movsb
dec
cld
push
stos
sti
cmp
mov
or
jns
adc
out
in
mov
pusha
in
dec
pop
insl
addl
clc
sub
cmp
addb
dec
xlat
dec
ss
adc
repz
add
out
das
mov
jno
jbe
push
daa
rcr
out
pop
push
add
sub
and
dec
xchg
sbb
cwtl
adc
lock
inc
add
ret
leave
aam
pop
arpl
add
pop
loope
sarb
in
or
js
sbb
xor
sbb
loope
lcall
xor
cltd
pop
subl
repz
mov
out
add
stc
ja
cvtdq2ps
jnp
shlb
andl
and
hlt
mov
xor
dec
stc
mov
shll
pop
add
in
aam
cltd
or
idivl
jbe
add
inc
jnp
add
hlt
enter
jl
outsb
sbb
andb
arpl
push
test
jae
push
repz
mov
call
cli
mov
xor
xchg
std
ficoml
add
jno
cwtl
sbb
jae
mov
in
lea
cmpsb
lret
cld
out
rorb
or
add
and
sbb
lcall
data16
clc
addr16
add
loop
or
lock
add
xchg
xor
stos
jl
test
mov
aaa
sbb
dec
add
movsb
lods
loop
jmp
mov
stos
push
inc
push
pop
dec
mov
adc
add
adc
add
pop
pusha
jle
mov
in
jno
add
sbb
shll
movsb
sbb
out
cli
into
rcr
ja
add
insb
push
jb
cmpsl
roll
js
pusha
pop
add
movsl
cmp
sbb
add
mov
push
sub
scas
stc
popf
pusha
jmp
push
mov
shl
cmp
add
jecxz
js
aam
jecxz
out
mov
add
dec
xchg
ds
in
imul
and
mov
rorb
cld
or
add
push
arpl
in
xlat
and
imul
fidivrl
mov
cmpsl
in
enter
lods
dec
repz
xor
xor
xor
out
cmp
xor
repz
cmpl
loope
fadds
out
jp
add
cmp
call
aas
lds
mov
add
adc
mov
incl
mov
sbb
jl
xorl
in
push
add
rol
adc
xchg
cmp
testb
mov
arpl
shl
clc
jb
add
adc
mov
cld
push
mov
pop
adcb
jl
flds
xchg
enter
jne
jns
and
push
mov
mov
fstpt
nop
add
or
out
aad
fidivs
fbstp
mov
cli
jmp
mov
cli
iret
cmp
xchg
lods
pop
lret
push
sub
jecxz
pop
push
testl
xchg
icebp
subl
test
js
adc
ds
hlt
xchg
or
jge
add
push
hlt
cmp
orl
pushfw
jns
imul
or
pop
and
push
pop
je
lock
push
push
cmpb
xchg
fwait
pusha
notb
out
dec
add
xchg
sbb
cwtl
push
movsb
lods
add
fwait
push
jnp
rclb
sbb
push
add
jg
ret
cld
fadds
sti
mov
lock
mov
adc
or
jbe
sub
call
jg
outsb
sbb
xor
cmp
add
fdiv
roll
or
iret
xor
aas
cmp
icebp
lret
lret
mov
pop
fisttps
cmc
cmpb
insb
pop
sub
push
outsl
pop
clc
sarb
ljmp
pop
sub
or
xchg
rcrb
stos
add
aaa
mov
push
int3
add
jge
jl
jae
mov
cld
adcb
push
add
inc
mov
paddd
in
pop
std
mov
add
mov
add
mov
sbb
lea
push
mov
jmp
and
add
pop
repz
adc
mov
jl
sbb
and
add
or
rcrb
pop
sar
sbb
int3
inc
fucom
clc
or
hlt
mov
cld
or
fadds
cmc
mov
mov
pop
sbb
ret
test
xchg
jb
sub
add
add
mov
sub
rorb
add
testl
insl
inc
push
pop
sub
adc
sbbb
mov
aad
mov
cmp
mov
aas
sbb
cmp
mov
push
jg
lds
push
add
mov
add
sbb
xchg
incl
call
mull
aaa
jle
or
mov
clc
fsub
add
lods
loopne
add
sbb
ss
cmp
out
lea
icebp
add
and
adc
arpl
xchg
add
mov
inc
outsl
jbe
pop
mov
xor
add
add
scas
add
add
pop
popf
push
inc
mov
out
dec
repz
add
xchg
aaa
lds
push
jl
repnz
imul
mov
adcb
les
xchg
jbe
in
push
lods
in
in
push
sbb
cmp
add
in
movsl
das
mov
popf
jb
add
push
sbb
jb
daa
jmp
repnz
rcl
xor
jle
pop
jmp
mov
mov
sbb
rorb
adcb
mov
ds
pop
inc
clc
push
add
add
add
add
fildl
in
lds
js
add
mov
inc
xchg
add
je
add
shl
stc
adc
jae
and
pop
addr16
inc
cmovnp
push
inc
inc
fnsave
ret
adc
int3
js
pop
dec
add
dec
push
add
movsl
clc
bound
add
mov
inc
bswap
mov
cmp
push
insb
pop
aaa
push
jle
mov
add
es
sub
mov
mov
xor
sti
or
mov
test
fwait
add
add
push
or
pop
jb
adc
adc
pop
pop
subl
aad
add
jmp
push
add
inc
dec
push
iret
add
mov
ds
pop
cmc
mov
xchg
or
add
jg
add
jo
mov
cmpsb
ss
cmp
in
nop
frstor
add
out
jne
mov
mov
xor
addr16
andb
and
aad
xor
dec
xor
jecxz
mov
loopne
push
sub
movsl
sbb
pushf
xorb
pop
cmp
jnp
out
lds
ljmp
xchg
loopne
stos
jno
loop
push
push
inc
dec
sahf
pop
xor
jle
in
outsl
ja
add
pop
mov
mov
sbb
mov
cmc
cli
jno
lret
push
pop
nop
dec
in
jg
in
les
sbb
inc
push
scas
in
mov
fsubrp
or
xor
dec
push
push
mov
xchg
sbb
cmpsb
cmp
inc
fcompl
sub
inc
into
fnstcw
add
lcall
sahf
or
mov
cmp
ss
insb
push
xor
movsl
jno
dec
add
fwait
dec
js
fcoml
adc
xchg
lcall
dec
inc
cli
or
test
sbb
pop
inc
scas
cmovg
and
dec
fwait
aam
pop
mov
sub
rorb
push
das
inc
mull
test
pop
jle
adc
push
mov
aas
loopne
lock
sbb
pop
add
mov
push
push
or
inc
adc
jge
adc
and
sbb
loope
lods
push
in
pop
enter
rol
and
rorb
lahf
cli
lods
jg
sbb
push
add
add
adc
iret
pop
add
push
call
sbb
fdivs
mov
or
cmp
shll
add
or
cmp
push
pop
xor
xchg
mov
xchg
mov
mov
pop
fsubr
adc
inc
or
lock
cli
mov
call
lahf
add
icebp
test
add
pop
pop
popa
add
or
pop
pusha
leave
aam
dec
add
push
nop
xlat
rclb
sub
add
sub
add
cmp
cmp
push
add
mov
pop
sbb
andl
push
add
jb
imul
dec
lcall
aam
cmp
cwtl
insl
js
add
fiadds
cld
xchg
mov
adc
mov
add
inc
xchg
add
xor
mov
fiadds
hlt
dec
jmp
adc
addr16
insl
ss
cli
negl
add
add
mov
pop
ljmp
jne
add
sahf
mov
add
ret
into
cli
pop
mov
daa
std
clc
adc
stc
stos
xor
js
mov
add
repz
cld
sub
rcl
lahf
mov
add
dec
adc
repnz
xor
lock
and
pop
in
dec
jbe
sbb
adc
xchg
sbb
cli
std
shl
dec
inc
fs
aas
dec
inc
clc
out
inc
add
mov
loop
gs
add
xor
divb
int
cmp
lret
and
fwait
inc
aas
ljmp
inc
dec
and
and
jae
mov
imul
cmp
lahf
shll
push
shll
mov
and
bound
xor
jmp
in
sbb
imul
fcoml
sub
adc
or
sbb
xor
lock
jge
pushf
push
sti
iret
pusha
xchg
xor
sbb
or
sbb
mov
xor
in
or
xchg
push
dec
loope
ljmp
xchg
dec
inc
int3
ret
outsb
and
clc
add
add
jne
outsl
inc
shll
das
scas
lods
xor
add
push
jno
xchg
daa
bound
cs
scas
and
inc
adc
fadds
add
xor
ljmp
call
sahf
test
jmp
push
mull
daa
jns
dec
mov
rolb
outsb
xchg
into
add
in
cmp
cmpb
push
add
cmpsl
clc
xchg
sets
cmp
xorb
adc
leave
cmpsl
dec
xchg
jo
jbe
aad
adc
enter
adc
inc
sarl
ss
pusha
test
add
push
jecxz
pop
faddp
jae
in
sub
mov
stos
jp
xchg
mov
aam
push
push
out
or
in
sbb
push
add
dec
adc
je
add
xor
sub
push
push
les
cltd
mov
add
movsb
add
cli
and
stos
fisttps
add
add
insl
or
add
push
mov
jb
add
js
or
add
cmpsl
pop
add
inc
xor
push
bnd
lret
pop
adc
jge
fwait
jno
out
mov
push
add
sbb
ja
add
lds
cmp
cmpsl
das
add
ds
cmpsb
xor
lret
fildl
lods
add
fwait
xchg
imul
jnp
in
add
push
aaa
xchg
daa
or
imul
mov
xor
adc
fistpll
sbb
push
adc
mov
jne
dec
jecxz
and
mov
cwtl
hlt
pop
adc
push
fs
arpl
pusha
movsb
enter
sub
mov
andl
aam
and
aas
add
add
jp
xchg
add
clc
or
push
add
out
add
cmp
mov
mov
shlb
pushf
out
sets
push
sbb
shl
mov
movsl
adc
pusha
ljmp
je
pop
jmp
js
mov
add
std
lock
dec
add
lcall
add
fwait
enter
xor
mov
fnstsw
clc
push
add
mov
ljmp
jae
push
sub
dec
sbb
pushl
mov
adc
pop
cld
out
add
fwait
nop
sbb
jbe
mov
int
add
lods
test
lahf
imul
out
add
mov
push
dec
cmp
test
push
outsb
mul
inc
add
ljmp
ret
xorb
mov
jecxz
cmpsb
sub
aad
sbb
mov
fnstcw
or
push
in
add
jae
push
add
or
push
or
xor
bnd
dec
ds
enter
cmp
insb
push
mov
pusha
in
mov
xor
mov
aas
adc
pop
pop
popf
cli
inc
adc
mov
roll
lock
imul
repz
out
add
stc
icebp
mov
inc
fldenv
xchg
adc
and
and
icebp
iret
pusha
call
xchg
push
jmp
xlat
sbb
add
lcall
jno
add
mov
cld
push
cmp
mov
lods
call
sbb
daa
adc
mov
mov
test
jb
add
popf
mov
and
jns
add
aaa
push
jne
fs
add
pop
lea
and
inc
loopne
push
add
lods
xor
dec
push
mov
jns
aas
aad
sub
and
add
lret
cmp
add
mov
les
jecxz
fsts
mov
out
mov
sarb
sbb
inc
fcoms
les
add
pop
or
ret
add
inc
or
mov
mov
add
lds
loopne
inc
pop
aad
pop
scas
es
loop
lret
sub
pop
xchg
test
negl
sbb
or
sub
push
inc
and
lods
movsb
or
jbe
mov
in
das
fdivl
add
loope
jecxz
sarb
addl
xchg
jnp
filds
lock
xchg
inc
and
adc
aad
cmpsl
jle
jnp
pushf
roll
in
das
adc
mov
rclb
outsb
jp
add
ret
test
jns
sahf
addl
sub
outsl
mov
adc
gs
cwtl
dec
inc
outsl
dec
shl
ficomps
pop
ja
sbb
fsubrs
loop
cmove
sbbb
xchg
bound
add
jae
adcl
jb
in
dec
sahf
and
dec
not
xchg
push
sbb
xchg
add
cmp
add
ds
mov
inc
xchg
sbbl
add
pop
jns
sub
add
rclb
fldl
push
jp
pop
repz
cwtl
lret
cmp
and
add
mov
popa
gs
cmpl
scas
dec
js
adcl
mov
addb
adc
add
fmuls
add
in
and
adc
and
in
movsb
mov
xlat
loope
cmp
xorl
or
sub
add
mov
mov
xchg
inc
loop
dec
cmpb
ljmp
mov
rcrb
adc
fldt
in
test
fcoml
add
les
addb
or
inc
xlat
pop
dec
add
int
inc
into
outsb
add
mov
ret
xor
movsl
daa
jno
mov
orb
sub
ja
xor
inc
jae
addr16
add
xchg
cmp
xchg
in
out
xor
sbb
out
test
incb
push
sbb
add
js
sbb
or
add
inc
and
js
add
pop
mov
push
xchg
inc
add
push
je
hlt
iret
inc
rolb
fadd
repz
sbb
fimuls
outsl
sbb
cmpl
xor
stc
xorb
push
pop
adc
hlt
mov
add
pop
xchg
jmp
add
aam
xor
fmuls
pop
sub
add
lea
mulb
pop
stc
xchg
aam
pusha
adc
cmp
xchg
and
mov
out
push
push
add
stos
xchg
rcrb
repz
lods
arpl
cwtl
es
pop
jl
mov
xchg
sub
cmp
dec
sub
xor
add
loope
aad
jnp
dec
insb
stos
cmp
fdivp
jbe
pop
pusha
cmp
faddl
or
mov
adc
arpl
int3
fiaddl
xchg
aam
add
insl
cmpsl
mov
movsb
add
pushw
and
jmp
daa
imul
add
xor
or
lret
cmp
pop
cld
ret
mov
mov
push
xchg
cli
call
pop
loope
ja
add
mov
cmp
in
xor
daa
mov
add
loop
jae
sbb
add
pop
subl
pusha
adc
and
lcall
in
ja
fcomp
aaa
add
decb
or
fldpi
fcomps
sbb
push
pop
push
mov
fdiv
loope
mov
popf
push
inc
sub
fisttps
mov
inc
insb
add
cmp
jbe
ret
enter
xlat
icebp
pop
test
pop
shlb
imul
xchg
and
mov
mov
dec
clc
sbb
nop
jnp
aam
mov
pop
inc
out
jbe
add
ret
bswap
xchg
jne
push
dec
jecxz
aaa
lea
add
outsl
shlb
arpl
inc
movb
xchg
lahf
std
jno
mov
add
xor
fcmovbe
pop
add
xchg
loop
dec
push
adc
mov
lock
and
add
cmp
push
mov
or
push
push
test
imul
adc
lds
pop
mov
push
xor
adc
sti
fistps
mov
add
sahf
scas
mov
fldenv
dec
mov
add
adc
inc
pop
sub
xor
ja
sbb
and
or
pop
test
push
mov
ja
and
add
les
xor
add
repnz
inc
xor
in
mov
inc
stos
cltd
or
mov
pop
scas
lock
daa
mov
mov
xchg
xlat
outsl
xor
add
mov
pop
rcrl
pop
xor
or
sbb
imul
subb
add
insb
add
mov
dec
outsb
dec
int3
enter
testb
cld
xchg
dec
mov
inc
mov
xor
sarb
inc
mov
push
adc
jg
add
cltd
shr
and
jecxz
jae
loope
xchg
les
subl
test
nop
mov
cmp
push
hlt
add
xor
dec
out
lret
adcl
test
dec
fwait
dec
shl
or
mov
in
mov
mov
cmpsl
in
add
sub
cmp
mov
shl
int3
add
adc
add
pop
fs
jl
sbb
xorb
push
pop
inc
push
ret
jg
add
jmp
scas
add
cmp
xchg
cs
cmp
leave
out
sbb
int3
inc
push
jae
add
dec
add
add
and
sub
cld
out
mov
cmp
jle
add
js
push
mov
sub
mov
jl
paddb
and
sub
and
adcl
pop
popf
imul
xor
repnz
cmp
adc
outsl
mov
lods
push
jmp
das
out
mov
daa
jg
jnp
lahf
mov
add
jo
clc
pop
dec
pop
mov
movl
sub
mov
mov
test
add
mov
xchg
mov
add
nop
jmp
loopne
enter
dec
and
or
inc
out
sub
pop
push
in
sahf
mov
subb
loopne
adc
jp
add
and
push
jnp
ljmp
pop
cmp
add
insl
lret
dec
inc
cmp
push
dec
add
and
mov
xchg
mov
xchg
movsb
sub
xchg
inc
add
sub
xor
add
mov
gs
xchg
adc
adc
addl
je
sub
cld
adc
in
or
scas
std
xor
push
addr16
or
rolb
bound
flds
cmc
sti
xchg
adc
push
jp
lret
sub
push
les
cmp
jecxz
add
loopne
push
stc
dec
mov
int
jmp
add
sub
rclb
bound
nop
repz
mov
and
mov
std
outsb
or
jp
inc
adc
lea
push
lods
add
pop
ds
mov
jl
mov
sbb
sbb
adc
cmpsb
jmp
pop
push
or
and
inc
cmp
mov
je
sub
repnz
sbb
xlat
lret
adc
aam
out
add
push
sub
fildl
adc
mov
imul
fmull
cmp
sub
cs
push
sub
popl
push
int3
scas
mov
push
mov
in
xor
sbb
mov
xchg
push
pop
cmp
add
pop
dec
lahf
iret
mov
repnz
pop
scas
pop
ds
mov
sbb
cmp
aad
cmp
xlat
add
in
subb
or
pushw
inc
add
cs
lahf
xchg
jp
add
pop
clc
mov
in
adc
lcall
les
add
sbb
and
fs
stos
inc
out
out
lock
pop
jnp
loopne
and
aas
data16
or
stos
sbb
cmp
mov
and
cld
jmp
cwtl
dec
jmp
mov
jns
add
add
into
lods
jne
nop
fsubrl
repnz
sbb
repz
ret
dec
xlat
add
xor
jge
imul
mov
sahf
cmp
in
je
dec
outsl
pop
pusha
sbb
lods
and
pusha
stos
adc
imul
mov
cli
in
add
xchg
in
ds
add
int
push
cmp
adc
andb
xor
cmp
inc
add
aas
inc
mov
mov
mov
push
adc
nop
sbb
stos
jmp
mov
test
push
inc
jl
push
add
mov
xor
std
repnz
pop
mov
xchg
dec
into
cmpsl
fldcw
push
add
add
adc
add
cli
stos
ds
dec
outsb
mov
ja
pop
imul
sub
gs
jb
add
jge
lcall
cltd
sti
or
fwait
sarl
rolb
mov
nop
xchg
inc
cmc
leave
add
pushf
push
rolb
xchg
jecxz
or
rcll
add
mov
mov
add
lods
mov
jmp
push
mov
nop
arpl
pusha
inc
adc
add
fimull
lahf
out
or
orl
mov
ljmp
clc
jge
and
pop
mov
xchg
dec
mov
movsl
popa
addb
movsb
popf
sarb
cmp
mov
popf
mov
std
cmp
inc
cwtl
mov
mov
rcll
out
fstps
pop
and
pop
testb
and
sbb
inc
fwait
inc
cmp
mov
scas
in
int
xchg
cltd
dec
enter
add
aam
cmpsl
jg
adc
testb
adc
jle
mov
and
repz
push
std
jp
out
mov
lahf
js
mov
aam
arpl
sbb
out
push
pop
lods
cmp
nop
and
into
push
push
sets
jne
add
mov
mov
ja
mov
fldl
mov
and
roll
cld
xchg
sbb
add
add
mov
cmp
lret
pop
mov
jge
add
repnz
cmpsb
jo
je
popa
jbe
fs
mov
dec
push
das
outsl
out
add
sub
cld
cwtl
mov
or
jbe
push
push
test
ret
ljmp
call
hlt
push
push
xchg
ror
jge
add
pop
add
test
jns
mov
jl
inc
and
dec
pop
in
cmp
into
push
add
nop
icebp
dec
pop
and
jo
loope
cmp
imul
add
pop
jmp
je
outsl
inc
ss
lea
addb
adcl
add
lret
inc
out
dec
bound
and
enter
lods
call
and
sbb
popl
push
inc
dec
or
pop
decb
shrb
add
cmpsb
leave
nop
push
stos
faddl
add
push
mov
adc
and
shll
add
sub
subl
add
push
not
call
adc
pop
clc
les
jbe
push
xlat
push
dec
inc
add
push
add
icebp
push
pushf
jmp
jo
arpl
addr16
sub
fcoms
add
pop
cs
cmp
icebp
rcrl
and
ss
and
cld
repnz
xlat
add
push
add
mov
add
add
sub
inc
push
shrb
aad
mov
push
popf
cmp
add
adc
dec
xchg
popa
adc
push
cmpsl
jle
inc
rcrb
fisubrs
lret
jbe
cmp
inc
adc
add
out
add
pop
stos
loope
sahf
rol
add
shll
mov
pop
lret
movsl
or
add
jmp
mov
test
and
sti
cmpsb
and
bound
cmp
cmp
ret
cmpsb
cltd
push
cmc
popf
add
std
push
mov
aas
add
jl
out
shlb
jecxz
aas
pop
dec
adc
cmpsb
mov
lods
inc
js
add
push
adcb
lods
xchg
rol
ret
dec
add
mov
ss
add
repz
xor
fsubrs
pop
mov
add
fiadds
lds
stos
add
aaa
xor
cmp
iret
and
push
mov
xchg
mov
cmpsb
pop
adc
dec
push
adcb
jl
add
out
int
ficoml
loope
sub
cmpsb
testl
add
or
in
rcll
sbb
lods
cmpsb
pop
cmp
imul
sar
sbb
add
test
mov
xchg
call
les
xchg
pop
cmpsb
stc
and
les
add
out
mov
mov
lods
movsb
and
pop
frstor
cwtl
pop
add
mov
lret
movl
xor
dec
pop
mov
xor
adc
jno
inc
sbb
setnp
cli
lds
test
pushf
sarb
cli
clc
add
js
sarl
cwtl
shl
or
stos
pop
or
push
push
adc
pop
rolb
addb
jmp
add
and
fiadds
add
mov
dec
daa
add
mov
push
scas
jbe
insl
add
xchg
ljmp
dec
dec
inc
das
aas
jnp
add
sahf
push
add
lods
add
dec
test
jecxz
test
pop
xchg
pop
cmp
inc
lock
jp
add
jnp
in
outsb
push
in
add
and
jo
mov
fsts
insb
loop
push
or
pop
jg
add
pop
inc
xchg
jle
in
aas
js
push
pop
lret
movl
mov
xor
movsb
sbb
inc
nop
nop
loope
pop
jg
sbb
fcompl
sbb
xchg
pop
mov
cmp
and
mov
sbb
leave
inc
psrlq
out
fimull
inc
xchg
mov
jmp
add
sti
mov
sahf
dec
mov
loopne
fcomps
or
jmp
adc
ret
aaa
dec
ja
add
pop
hlt
push
mov
fisubrs
mov
xchg
popa
rolb
cs
push
jl
xlat
cmp
xor
fsts
out
pop
adc
aaa
jg
add
in
add
add
adc
inc
sbb
jg
aam
lods
cmp
test
imul
call
popf
adc
dec
stc
bound
add
iret
xor
jno
icebp
add
mov
enter
push
test
and
stos
inc
les
sbb
add
xor
dec
add
nop
cmp
adc
mulb
ljmp
add
jp
les
test
xor
in
loop
mov
and
iret
push
in
add
lret
enter
out
sub
inc
loop
enter
push
movsl
jb
mov
loop
dec
aas
cmpsb
add
sbb
adc
jg
shlb
inc
cli
pop
mov
add
mov
xor
dec
pop
xor
sub
sub
xchg
xor
fs
xor
and
add
daa
and
rolb
mov
fiadds
out
aas
pusha
sarb
add
push
mov
jo
rclb
push
cmpsb
andb
push
add
pop
dec
mov
call
orb
add
mov
inc
fcmovnb
jp
add
xor
and
inc
dec
jo
ficoml
out
xchg
or
sahf
je
cwtl
sub
jle
cmp
lods
inc
aaa
push
add
test
push
cli
add
lea
jno
leave
add
sbb
in
jne
mov
int3
add
xchg
sub
jp
rcrb
xor
sub
xchg
outsb
lds
adc
rolb
dec
mov
pusha
aad
push
xor
lret
pushf
push
cmp
add
or
dec
cltd
push
movb
push
push
sub
xor
jne
hlt
movsb
jge
or
add
or
es
iret
pop
loopne
sbb
jle
xor
xor
sbb
in
testb
les
ljmp
jg
and
pusha
in
mov
mov
lods
and
cmc
and
pop
inc
test
add
xchg
lret
lock
out
adc
push
push
mov
es
dec
pop
add
mov
fwait
add
mov
add
adc
mov
pop
dec
sahf
mov
out
dec
scas
cmp
jns
dec
inc
subb
loop
jge
cmovbe
dec
cmpb
aad
sbb
call
out
cwtl
imul
dec
add
mov
aaa
add
push
jg
pusha
adc
icebp
jmp
aas
js
adc
in
jmp
call
add
push
pop
test
add
aad
gs
loop
pop
roll
mov
stos
jo
pusha
loopne
dec
fstpt
push
mov
ror
outsb
or
jp
out
add
and
adc
xchg
push
rolb
push
add
add
add
mov
in
cmp
add
xchg
push
dec
pushfw
bound
fsubs
stos
and
movsl
dec
mov
les
addr16
inc
test
lahf
and
sbb
stos
orb
dec
xchg
dec
mov
idivl
call
sbb
fwait
lahf
sub
push
test
xor
call
jae
aaa
clc
jge
mov
add
repz
cli
leave
or
or
push
es
roll
stos
push
mov
fisubl
cmp
pop
shl
outsb
and
jmp
jbe
test
push
add
sarb
movsl
mov
push
mov
in
and
xchg
pop
mov
push
mov
xchg
addb
imul
jno
add
f2xm1
or
stos
adc
jl
jp
add
jb
adc
neg
add
fidivl
and
mov
nop
in
jl
and
add
out
dec
js
loopne
fmuls
mov
icebp
mov
enter
mov
ds
pop
popf
push
jmp
xchg
addb
pop
sub
scas
js
enter
push
mov
int3
jo
cmp
imul
repz
add
mov
mov
nop
nop
xchg
xchg
pop
scas
aad
stc
cmpl
call
push
xchg
and
popa
inc
mov
repnz
dec
pop
inc
rolb
push
fnstsw
xchg
xor
js
nop
push
xor
pop
hlt
add
rolb
jnp
mov
xchg
add
mov
movsl
sahf
or
push
push
jecxz
aam
xchg
lds
add
or
add
lahf
xchg
in
sub
cltd
add
mov
or
insl
xchg
xor
loopne
test
in
pop
cmp
and
bound
inc
jns
jae
lea
add
cmc
cwtl
mov
adc
daa
push
jle
fs
xchg
sbb
mov
cld
adc
mov
cmp
out
jnp
add
sub
pop
add
sub
movsl
fsubrs
popf
cwtl
mov
int3
dec
lock
loop
fcmovne
dec
aad
imul
jnp
loop
stos
sahf
add
cmp
scas
mov
shrb
mov
int3
fldl
sbb
cmp
ja
and
sub
rclb
sbb
push
xchg
popf
jb
add
adc
stc
ljmp
xchg
or
or
clc
push
andl
cmpsb
pop
mov
xor
mov
mov
int3
dec
orb
add
adc
jae
mov
xchg
insb
rolb
clc
pop
jmp
adc
nop
mov
adc
das
push
icebp
sbb
mov
fnstcw
cmp
andb
hlt
add
mov
cmp
add
pop
and
ret
call
dec
jno
add
cli
cmp
fmuls
movsb
xchg
xchg
adc
or
sbb
lcall
or
ljmp
iret
fstpt
shll
adc
sbb
add
mov
hlt
inc
sbb
sub
sahf
hlt
add
insb
xor
test
je
divb
mov
add
add
xchg
pop
repnz
cmpsb
roll
or
les
mov
mov
pop
add
sbb
cs
pusha
inc
or
sbb
pop
shlb
fmuls
cmp
adc
rclb
adc
cmp
xor
xchg
jbe
mov
mov
xchg
dec
rorl
icebp
push
xchg
push
inc
test
aam
add
mov
sbb
rclb
in
xchg
xchg
or
jae
imul
arpl
sbb
xchg
seto
jp
inc
in
dec
push
inc
dec
adc
xorl
cmp
add
aam
and
mov
add
lret
xor
hlt
lds
or
and
in
ss
outsl
jmp
pusha
rclb
add
and
add
xchg
pop
xor
test
popa
daa
and
movsl
sbb
mov
fcom
leave
mov
sti
jp
add
outsb
out
xchg
add
bound
lods
movsl
sub
aam
roll
inc
scas
jecxz
jge
push
add
aad
addr16
cld
mov
pop
shl
pusha
dec
fwait
mov
pop
mov
pop
lods
mov
adc
icebp
dec
jno
push
in
insb
mov
sub
pop
stos
out
and
add
movsl
mov
ffree
jbe
filds
rorl
xchg
ficoms
jns
adc
sub
rol
insl
add
ret
int3
inc
sbb
mov
cmp
pop
in
or
jne
xor
adc
test
cmp
pop
scas
ret
mov
test
xor
cld
sub
js
xchg
sbb
jo
or
movsb
lock
rolb
pop
add
adc
push
rol
lds
mov
inc
sub
jns
jg
leave
add
shll
cmp
add
cmp
push
cmpsb
add
in
cmp
sarb
sbb
mov
xchg
loope
adc
data16
xchg
or
pop
mov
adc
scas
add
shll
jb
mov
loopne
popl
ret
sub
add
push
aad
mov
in
mov
decb
dec
jne
xorb
ficompl
add
lret
jmp
mov
lea
outsl
add
cmpsl
ja
shrb
add
inc
jl
mov
popa
cld
cwtl
stc
loop
add
dec
or
negb
incb
adc
cmp
in
mov
repnz
or
orl
sbb
out
inc
mov
add
add
insl
cli
dec
push
mov
dec
add
xor
adc
add
mov
loopne
fadd
sbb
ror
xchg
jecxz
pop
xor
in
mov
hlt
sub
shll
jge
sbb
xor
test
or
pushl
fisubs
scas
aaa
shl
cli
adc
cmp
push
outsl
loope
push
mov
inc
add
sbb
push
fistpll
sub
pusha
jnp
cld
movsb
adc
sub
clc
js
mov
xor
lock
popa
inc
cmp
add
js
or
adc
xchg
fwait
inc
and
or
pop
imul
or
nop
rclb
jp
push
adc
jne
into
icebp
in
rorb
ret
add
loopne
filds
mov
cmc
cmp
mov
push
jae
or
cld
ljmp
js
adc
fisttpll
add
cmovge
out
and
xor
push
jb
mov
movsb
adc
cmp
add
out
xchg
iret
mov
jl
mov
pop
mov
dec
add
fnstcw
popa
cmc
jo
movsb
iret
decl
ret
inc
aam
cmp
mov
adc
daa
movsl
inc
lock
pusha
scas
cmp
jnp
add
mov
jmp
lcall
and
add
imul
test
add
add
lods
add
or
scas
movsb
jno
cld
sub
cli
mov
pusha
ret
and
pop
add
call
nop
jno
cmp
jnp
push
inc
lds
xor
mov
push
jecxz
int3
fdivrl
fs
shr
pop
sbb
dec
adc
fs
imul
ja
pop
mov
mov
mov
mov
jbe
hlt
or
push
jmp
add
sub
popa
hlt
adc
repz
lods
les
or
ss
add
movb
lret
shll
inc
add
ljmp
aaa
das
loope
cmp
push
adc
mov
faddl
xchg
xor
call
loop
sub
and
add
xlat
iret
or
jns
or
sbb
or
popf
lock
lds
adc
xor
mov
mov
or
in
je
and
enter
inc
push
ret
push
add
icebp
pop
test
lahf
push
push
inc
dec
or
cmp
loope
gs
in
es
cwtl
imul
movzwl
or
or
incl
bound
sahf
sbb
mov
pop
jge
pushf
push
add
mov
add
add
fldl
push
lock
sbb
fisttpl
xor
add
test
pop
pop
leave
pop
aaa
std
or
cwtl
cmp
sub
mov
test
push
push
in
add
jle
sbb
into
out
and
jmp
sub
inc
or
sbb
sbb
push
pop
loopne
fidivl
arpl
repnz
pop
pop
clc
lea
andb
test
and
push
aam
leave
mov
loope
psubusb
repnz
orb
xchg
mov
add
cmpsb
repz
pop
pusha
mov
mov
scas
lock
inc
pop
mov
xor
add
mov
rcrl
rcrb
int3
add
push
fwait
insb
and
inc
add
lret
clc
sbb
repnz
add
or
adcl
push
add
cltd
sbb
dec
lea
add
or
push
js
add
cmp
jge
dec
xchg
mov
je
mov
add
lds
sbb
add
and
test
test
inc
sarb
lea
insb
sbb
pop
add
cmp
orb
mov
movl
loopne
xchg
xor
push
fimuls
gs
inc
movsb
or
dec
popf
adc
inc
in
in
add
pusha
fsubrl
pop
add
arpl
inc
xchg
call
adc
mov
int
lock
inc
xchg
ficoml
dec
out
scas
dec
lret
mov
inc
xchg
cmp
add
sub
mov
push
add
cmp
stc
lock
data16
pop
add
jp
shll
mov
add
imul
add
add
imull
sti
inc
lock
popf
jmp
adc
sbb
push
push
mov
out
pop
enter
insb
xchg
push
add
inc
push
push
je
add
mov
mov
mov
xorl
sysret
sub
pop
mov
inc
jp
jge
add
jne
jae
js
addl
adc
pop
test
loopne
push
nop
jb
cmp
jns
stc
pop
aad
xlat
xchg
je
daa
loop
pop
stos
outsb
push
cs
pop
hlt
cmpsb
mov
icebp
sub
addr16
out
mov
in
jo
ficomps
xchg
cmpsb
pop
push
sub
incb
xchg
addb
dec
movb
rep
add
pusha
push
add
sbb
dec
add
sbb
andl
lahf
out
jle
in
xor
or
imul
xchg
xor
jecxz
fs
outsl
ljmp
cmp
sbb
cmp
scas
jle
loopne
sbb
out
push
push
je
jbe
js
cmpl
sarb
mov
pusha
sub
cs
out
clc
add
test
xor
std
stc
or
push
mov
pusha
flds
xchg
lret
ret
mov
inc
pop
call
add
xchg
lds
mov
ret
mov
mov
mov
jnp
add
test
mov
aam
cmp
push
xchg
popa
adc
xor
jb
sarb
and
daa
rclb
roll
addl
pop
add
xchg
push
mov
sbb
xchg
nop
cmp
loopne
insb
or
stos
lahf
push
push
mov
out
les
add
mov
sub
push
jmp
xchg
pop
pop
or
add
cmp
add
addr16
shl
mulb
pop
mov
shlb
sbb
xor
popf
add
push
or
sbb
jns
pop
and
jne
outsl
rcr
testb
sbb
push
bound
outsb
in
std
insb
jne
cmpl
sub
pusha
mov
mov
or
dec
add
sbb
das
jb
mov
mov
push
fimull
push
clc
sub
in
mov
jecxz
adc
xor
aas
push
push
push
je
pusha
push
insl
add
lret
stos
test
cmpsl
add
sub
mov
mov
xchg
cs
mov
pushf
add
push
pop
add
std
or
and
pop
jo
add
and
jbe
dec
daa
in
mov
add
xchg
iret
mov
test
pop
fsubl
jl
push
pop
cmpsb
imul
adc
xchg
pop
pop
dec
mov
out
inc
dec
add
imul
pop
add
and
push
lsl
sub
push
mov
pop
mov
inc
sarb
inc
dec
cmpsb
hlt
mov
xor
subl
sub
sub
rcll
sbb
xor
push
push
add
subl
cli
add
test
add
adc
adcb
mov
push
mov
jmp
andb
add
subl
sbb
mov
jp
data16
add
adc
verr
lock
inc
add
repz
dec
lret
bound
filds
aas
push
push
frstor
add
aam
rcr
sub
lea
push
lcall
inc
daa
add
xor
loopne
jge
and
in
test
ret
test
add
adc
scas
rorb
inc
mov
not
daa
dec
fcoms
fmull
mov
movsl
xchg
xlat
and
or
pushf
jbe
add
inc
repz
int3
push
xor
xchg
add
adc
lds
mov
test
xchg
in
hlt
add
sub
rclb
add
insb
ficompl
dec
pop
pushf
fadds
divl
dec
adcb
sbb
cmp
xor
out
xchg
mov
mov
stc
aaa
lahf
xchg
add
shlb
jnp
mov
and
mov
push
fcomip
push
sbb
sub
push
rorl
ret
xor
jl
adc
stc
sub
repnz
add
aaa
fdivp
aam
nop
or
ds
lahf
arpl
mov
fsub
enter
insb
xor
cmc
mov
pop
jge
filds
stos
inc
mov
dec
fstps
push
push
mov
pop
fucomi
add
push
adc
add
cmc
xor
and
enter
int3
add
xchg
lcall
dec
fucom
dec
and
xor
xor
inc
addl
push
mov
insl
stos
jp
xchg
sahf
pop
ja
pop
movsl
in
movsb
inc
mov
shrb
dec
adc
and
lods
cmpl
aam
je
test
pop
mulb
cmp
push
inc
mov
xor
bnd
test
cmp
push
sti
add
and
or
or
inc
bound
pop
fiadds
movsb
incl
adc
jmp
add
sub
dec
movsb
scas
lods
add
icebp
cmp
inc
jg
push
sbb
sbbb
add
dec
xor
add
inc
es
test
xchg
jnp
mov
ja
imul
dec
movl
popa
fdivrl
mov
hlt
adc
lahf
add
jle
int3
push
add
add
add
cmp
aas
sub
sub
movl
pushf
jecxz
lock
movsb
sahf
dec
and
out
push
sti
add
shrb
and
cmpsl
inc
test
inc
bound
inc
add
mov
add
aam
jae
imul
mov
add
cmp
arpl
push
dec
popf
enter
ljmp
scas
loopne
jae
add
cltd
dec
addb
loopne
aas
sbb
cmp
rolb
in
je
add
out
aas
orl
or
repnz
sub
jae
out
testl
movsb
test
jno
ja
add
mov
cmp
cmp
xlat
jo
add
push
mov
mov
and
mov
mov
push
add
lds
ja
add
jp
mov
shll
mov
dec
push
pop
lock
lods
xor
cmc
pushf
xchg
cmp
xsavec
dec
xchg
loop
add
lock
add
xor
inc
add
xlat
outsb
loop
out
mov
aad
mov
add
add
xchg
or
add
pop
loopne
lret
cmpsb
sbb
stos
mov
sub
add
mov
jnp
inc
push
lds
lcall
mov
inc
mov
subb
jbe
add
call
mov
fcoms
movsl
dec
add
in
fidivrl
inc
add
xor
push
jg
sub
dec
scas
or
mov
flds
xchg
sbb
sbb
repnz
call
gs
adc
add
pop
push
push
leave
movsb
in
lret
pusha
xchg
xchg
sar
mov
stc
cmp
out
call
lods
jb
mov
xchg
aas
test
shll
jecxz
and
mov
aad
shll
in
mov
jae
inc
scas
pusha
call
adc
xchg
push
jne
es
sbb
and
stos
mov
lcall
ret
ja
add
int
cwtl
and
mov
push
loopne
fildl
rolb
scas
sub
in
xor
punpcklwd
xor
dec
fld
outsb
rol
ss
pop
mov
xchg
add
jne
arpl
or
jnp
andb
inc
mov
jecxz
add
inc
push
stc
push
hlt
add
push
cmp
pop
movsb
mov
and
ja
xchg
push
sbb
inc
iret
stc
cmpsb
jns
push
lods
ss
movsb
pop
int
lea
sbb
xor
aaa
or
mov
std
cmp
dec
push
push
add
sub
aaa
sbb
mov
in
cld
movsl
adc
xchg
rolb
xchg
rcl
adc
stos
xorb
hlt
insl
dec
xchg
and
sbb
lds
out
data16
out
or
mov
scas
jmp
sbb
sbb
sbb
sbb
sbb
mov
out
in
add
lods
popf
adc
mov
add
push
or
add
mov
mov
aad
push
dec
add
jnp
dec
pop
sub
rcrb
sbb
inc
cmpb
xchg
add
mov
cmp
std
cmp
push
sti
push
negl
add
jae
inc
ret
mov
lea
cmpsl
pusha
imul
cli
push
jae
xor
add
outsb
cmpsl
xchg
xchg
int3
enter
ljmp
mov
xor
aad
add
dec
pop
add
mov
mov
aad
movl
add
and
nop
jne
shrl
daa
xchg
cmp
add
fidivl
in
dec
xlat
mov
test
jp
aas
xchg
xor
xorl
mov
mov
pop
or
jne
call
sub
xorl
ret
loope
sahf
sbb
aam
aas
sbb
push
add
jo
pop
cld
imul
xchg
add
jecxz
dec
stc
mov
mov
add
or
xlat
and
add
outsl
nop
sbb
in
jo
jb
enter
mov
xchg
lret
arpl
cwtl
cmp
es
dec
out
mov
clc
scas
mov
dec
jo
call
add
pop
dec
shlb
add
test
out
call
outsl
repnz
aam
movsb
pop
or
or
sub
cmp
dec
stos
outsb
add
add
sub
or
fistps
cmp
xchg
mov
jp
call
test
pop
enter
fwait
shrl
xchg
add
jae
fs
loopne
out
jg
pop
orl
es
sub
and
add
popf
and
jp
pop
sbb
inc
pop
in
add
outsb
insb
in
jle
add
shlb
dec
and
ds
iret
and
mov
add
add
shlb
dec
lods
push
cmc
inc
xchg
mov
or
sub
aaa
jg
push
mov
ret
lea
push
fisubl
lret
xor
jo
jecxz
insl
enter
push
fstp
inc
inc
ss
xor
inc
xor
adc
out
dec
cld
loop
cld
rorb
iret
pop
fs
mov
add
mov
popf
push
pop
push
push
sbb
add
pop
cmp
xchg
dec
or
into
adc
add
mov
xlat
or
fmul
shll
andb
rclb
pop
xor
addr16
test
das
mov
jno
adc
fwait
xor
lea
fmull
ret
mov
movsl
mov
or
divl
jl
outsl
mov
test
adc
mov
inc
xchg
or
lret
jbe
add
scas
mov
cmp
jle
or
sahf
sbb
ds
add
adc
add
adc
push
scas
fisubl
add
jnp
sbb
test
loop
add
call
jp
mov
fwait
cmpl
or
ljmp
movsb
sbb
pop
ds
push
add
or
mov
pop
cli
sbbb
ror
mov
jo
sti
rorl
fwait
mov
push
add
sbb
jb
inc
inc
add
dec
adcl
sub
cmp
add
mov
ret
mov
pusha
xchg
pushf
mov
pop
popf
cwtl
inc
enter
jb
and
and
mov
adc
test
xchg
fistpll
out
jl
enter
sbb
cmp
xchg
add
pop
arpl
in
in
add
xor
push
mov
lods
out
test
xchg
adc
loop
out
cli
jmp
int3
shll
outsl
pop
scas
ss
data16
jg
test
xchg
xchg
add
je
mov
adcl
dec
adc
xor
cmp
lods
jge
add
arpl
sbb
outsl
adc
leave
lret
fldenv
sub
fsub
mov
push
inc
dec
cwtl
cmp
cmp
vpsubsw
add
jno
shlb
pop
dec
aam
mov
pusha
mov
scas
add
leave
mov
inc
enter
add
aas
cmp
mov
jmp
icebp
xlat
and
gs
adc
ret
pusha
aad
repnz
incl
mov
lret
ja
int
fisubrs
add
or
push
add
popf
xchg
xor
lcall
mov
shlb
ljmp
mov
insb
insl
loope
movsb
xchg
int3
sub
adc
mov
pop
sub
inc
mov
aas
jns
add
mov
in
mov
idiv
pop
or
mov
out
add
movsl
adc
adc
or
push
adc
pop
xor
ret
test
cmpsl
mov
xor
sti
sub
mov
inc
test
jo
xor
nop
jb
pop
test
aas
pusha
mov
add
out
pop
and
xchg
or
push
in
xchg
shrl
cmp
lret
addb
imul
pop
movl
ljmp
fcomp
enter
inc
cmp
add
pop
js
aas
out
lock
je
jg
cwtl
xchg
add
hlt
in
push
jmp
jecxz
mov
leave
push
nop
call
test
sti
out
xor
lret
add
movsb
pop
xor
cmp
push
and
dec
addr16
clc
fwait
pusha
mov
and
jno
lds
fcoml
pop
rcll
test
out
add
xchg
gs
xor
clc
es
dec
dec
sahf
out
roll
ljmp
xchg
jge
sbb
in
add
mov
inc
add
out
jne
outsl
add
loopne
pop
push
rcll
rolb
test
test
lcall
add
mov
lahf
add
sbb
shlb
cmpsl
lock
repnz
add
xchg
add
roll
pop
cs
ja
mov
add
pop
ret
push
mov
xor
push
loopne
add
addb
loope
test
psrld
mov
sbb
dec
add
cmp
cmp
add
aas
ja
cmp
sbbl
pop
les
js
pop
fistpll
movsl
in
cmpb
inc
add
inc
mov
cmp
sub
mov
sub
clc
clc
adc
ss
add
rorb
dec
add
xor
adc
mov
and
add
dec
bts
div
jno
add
jbe
int3
and
movsb
mov
mov
rorl
adc
push
ret
push
in
mov
orl
xor
pushf
mov
lret
pusha
data16
pop
sbb
aad
inc
addb
imul
cli
lahf
insl
scas
add
mov
cmp
cs
dec
inc
add
lods
repz
push
add
push
inc
ja,pt
add
pusha
lahf
ficomps
or
xchg
inc
or
add
pop
mov
orb
fmuls
loopne
fiadds
add
aaa
cmp
lods
int
jno
call
push
add
rol
add
fstps
rolb
pop
xchg
pop
push
sbbb
mov
cli
sub
or
adc
fiaddl
inc
js
outsl
mov
jp
sbb
push
shrb
push
adc
imul
xor
sbb
popa
xchg
sbb
jo
out
or
adc
stos
jnp
inc
xor
or
repnz
and
inc
jp
pusha
and
dec
and
mov
fsubs
mov
cmp
inc
mov
mov
push
pop
jle
sbb
lock
lock
add
add
mov
addb
adc
add
mov
in
mov
outsl
mov
adc
dec
adc
lcall
insb
mov
adc
sbb
add
lcall
nop
and
mov
scas
out
xchg
or
les
push
enter
mov
insb
ret
cmp
nop
js
jmp
jecxz
or
push
add
jbe
adcb
mov
or
mov
and
dec
sub
xchg
fimull
mov
xchg
out
jae
jno
out
adc
addb
sarl
or
pop
add
out
cmp
cmp
lret
mov
inc
fmull
mov
mov
add
je
add
jmp
addb
cs
push
sbbl
aam
mov
push
test
add
in
imul
sbb
cmp
or
inc
shrb
fldt
xor
push
ret
and
adc
in
push
ret
in
mov
sub
pop
lods
cmp
jb
push
adc
or
jae
and
imul
jns
subb
cmc
jge
lret
fs
pop
dec
push
pop
lock
lds
rolb
add
pusha
mov
loopne
pop
or
inc
in
dec
ficomps
add
adc
mov
jge
clc
stos
inc
test
mov
shlb
mov
fsubrs
ds
jge
in
bound
xchg
xlat
stos
mov
and
and
xor
arpl
mov
jecxz
jno
jl
xchg
jae
sub
add
jmp
sar
xchg
int3
add
les
sub
inc
add
xor
test
xchg
pop
in
and
mov
push
into
mov
mov
pop
pop
loop
inc
iret
push
mov
pop
xchg
xchg
pushf
inc
aaa
xchg
rolb
movsl
nop
iret
mov
dec
ljmp
repz
movsb
jb
add
rcr
rorl
popa
inc
inc
add
push
inc
es
mov
or
ret
add
lock
pusha
jmp
mov
mov
and
or
cmp
mov
mov
add
repz
add
push
aam
jae
sbb
mov
data16
or
fisubl
iret
rorl
add
adc
push
xor
daa
add
iret
mov
pop
or
inc
pusha
stc
mov
loope
addr16
stos
test
pop
dec
xlat
shlb
mov
pop
lcall
test
xchg
orb
movb
add
in
sbb
stos
mov
sbb
mov
mov
aaa
add
jmp
jns
adc
arpl
inc
jecxz
dec
hlt
xchg
xchg
pop
loope
lods
adc
imul
bound
push
fiadds
out
test
mov
mov
pop
lret
mov
ljmp
unpcklps
popa
test
xor
and
mov
aas
sub
add
imul
add
sub
mov
add
cmp
cs
aaa
mov
add
icebp
pcmpgtw
pop
add
sub
jecxz
stos
lret
add
add
add
lahf
mov
dec
cmp
add
sarl
andb
repnz
add
xor
or
data16
mov
iret
xor
jno
dec
and
arpl
jae
aas
mov
fwait
cmp
les
mov
add
sub
nop
mov
loopne
add
frstor
xor
ljmp
add
fsubr
adc
aam
and
pop
xchg
popa
xor
mov
std
add
xor
xchg
jmp
jb
sub
cmp
push
jne
add
fldenv
add
shlb
dec
fildl
dec
sbb
icebp
loope
inc
ss
les
push
jge
xchg
arpl
jl
repz
push
push
mov
in
jge
push
js
add
jb
sub
nop
rclb
pop
pop
add
out
xchg
or
scas
pop
cmpsl
movsl
add
jb
fwait
pop
cwtl
add
add
xlat
fldcw
add
js
lock
sub
cmp
lahf
fwait
hlt
jmp
int3
sbb
push
leave
in
icebp
add
test
out
xor
push
sbb
idivl
aas
pusha
in
add
stc
cmpsl
jle
push
leave
lods
xor
push
pop
scas
add
mov
in
xchg
in
imul
inc
add
xchg
xchg
fsub
cmp
pop
and
test
std
aas
test
int3
pop
adc
enter
sbb
mov
add
out
je
andl
cld
repnz
cmp
push
pop
idivl
cli
mov
add
sbb
adc
jno
add
inc
ja
cmpsl
adc
fdivrs
push
fidivs
inc
push
je
xor
sbb
and
ret
les
ds
loope
add
mov
repz
push
les
clc
add
movsb
pop
adc
ror
ficompl
hlt
pusha
sbb
pushf
call
lcall
push
pop
pop
add
sub
cmp
test
fsts
jb
add
push
adcb
gs
adc
xchg
add
mov
push
in
push
and
adc
pusha
insb
add
mov
lret
mov
sbb
stc
dec
push
lea
sub
xchg
icebp
add
repz
ljmp
sbb
mov
add
xchg
mov
pop
fildll
pop
out
paddusw
nop
push
or
xor
cmp
fnstsw
decb
dec
mov
add
pop
cld
cs
imul
sbb
jp
jno
sub
push
mov
in
lea
pop
sti
inc
movsb
sahf
in
loop
pop
add
mov
inc
faddl
add
test
cmc
pop
xlat
rclb
aam
testb
add
cwtl
adc
enter
push
outsl
pusha
xor
lcall
mov
clc
add
push
addr16
xor
add
stos
mov
fildl
jb
ret
jl
and
add
movsl
jmp
ret
mov
mov
add
frstor
imul
aad
add
cmpsl
fnstenv
adc
adc
faddl
fcoms
add
xor
lahf
mov
sbb
fnsetpm(287
jge
add
loope
cmp
out
test
jl
lret
and
shrl
fstps
rolb
dec
pop
pop
out
lods
dec
sbb
into
packssdw
incl
push
sti
sub
aaa
mov
cmp
sbb
adc
lahf
push
jmp
fs
push
addb
outsb
add
out
sub
and
mov
outsb
or
sub
movsb
or
or
out
or
dec
dec
das
and
add
arpl
or
and
inc
or
insl
enter
loopne
mov
jo
xchg
dec
hlt
add
nop
pusha
ljmp
pop
fildll
jg
xchg
ficompl
add
ret
pusha
dec
orl
dec
push
cmpsl
or
jecxz
jo
or
addb
sti
adc
mov
idivl
in
out
mov
sub
jo
ss
outsl
lods
dec
pop
mov
hlt
pcmpgtb
jbe
pop
xlat
cltd
lahf
add
xchg
loopne
push
cli
xchg
mov
inc
add
jne
jle
test
sub
imul
int3
inc
add
outsb
mov
cmp
cvtpi2ps
shlb
or
jb
add
mov
xchg
aaa
inc
sbb
mov
mov
add
cmc
xlat
dec
stos
push
and
push
pusha
rclb
rorl
lahf
and
pop
fidivrl
mov
mov
stc
xchg
inc
add
and
popa
sbbb
ficoml
cmp
outsb
mov
sbbb
ret
push
add
mov
cmc
sahf
mov
in
dec
filds
int3
pop
or
and
jmp
adc
insb
mov
jnp
in
mov
pop
dec
cmpsl
adc
pop
scas
outsb
add
or
mov
pop
add
xchg
mov
dec
movb
pop
es
mov
xchg
fidivrs
inc
dec
xchg
popf
enter
add
ret
into
mov
cwtl
call
sbb
fs
push
gs
add
jbe
add
jne
loopne
push
add
cwtl
or
or
pop
xor
shll
sahf
mov
cmpl
xchg
pop
add
ss
and
pop
dec
add
inc
icebp
mov
subl
inc
and
add
push
fstl
rcrb
test
cmpl
dec
add
in
xchg
inc
fmulp
jne
add
inc
cmpsl
out
jb
add
or
adc
call
and
lret
shlb
in
sbb
add
jmp
mov
mov
data16
xorb
sub
loopne
push
testl
xchg
stos
or
add
fnstcw
add
lock
fwait
add
punpcklbw
xchg
sub
sbb
sar
adc
dec
cs
jmp
add
mov
sbb
inc
pminub
test
shlb
adc
lods
inc
fistl
jns
pmullw
xchg
stos
out
pop
mov
xchg
push
mov
sub
mov
ret
sbb
das
lods
shrl
push
jnp
sbb
dec
imul
xor
add
pop
roll
add
mov
fadd
les
std
in
push
jo
mov
push
popa
clc
jmp
repnz
xchg
imul
lods
inc
ljmp
sbb
xchg
xor
add
xchg
dec
xor
adc
aad
lods
add
test
sub
or
sub
mov
in
pop
out
sbb
mov
or
push
add
mov
insl
nop
add
in
in
cmp
ret
mov
loop
push
lret
jmp
dec
paddsb
rclb
repz
in
fdivr
loop
movsb
clc
lret
xchg
scas
pop
add
std
add
inc
popf
mov
mov
sbb
push
dec
add
add
push
mov
and
adcl
inc
or
pop
xchg
and
cmp
out
pushf
popf
mov
mov
sti
sbbb
add
adc
add
lock
cltd
in
arpl
sarb
daa
in
xchg
mov
pop
sub
test
mov
fs
xchg
addr16
ret
xchg
jbe
pusha
popf
ljmp
dec
shr
mov
fs
sbb
xchg
xorb
loope
add
mov
sbb
push
test
or
lock
pop
add
jg
cs
adc
adc
jle
dec
ret
addb
mov
fmull
mov
add
mov
jae
mov
push
ret
pushf
add
inc
inc
imul
inc
test
adc
add
push
and
roll
bound
add
or
sub
cmpl
adc
jbe
add
jns
cmp
cmp
adc
jne
push
jno
test
test
mov
or
insb
imul
lods
andl
add
das
adc
loope
pop
sub
adc
push
pop
pop
insb
jns
rcr
push
test
mov
movsb
push
jns
jne
cs
test
and
or
fs
shlb
cmp
xor
sbb
inc
pop
or
pop
pop
jb
add
cmp
lea
sbb
push
cmp
leave
add
cwtl
sbb
sbb
rcr
cwtl
xchg
xor
or
adc
pop
push
cmp
in
xchg
in
jo
cmp
imul
aas
rcl
out
adcb
sub
ds
xchg
pop
ss
fwait
add
pop
xchg
pusha
je
int
xchg
leave
mov
xchg
mov
xchg
jmp
inc
mov
add
repz
mov
mov
push
rorl
stc
mov
fmul
nop
adc
or
add
pusha
mov
rcrb
pop
and
jne
add
xor
in
fs
or
nop
mov
stos
mov
mov
add
pop
mov
add
cmc
mov
ds
or
out
inc
into
insl
mov
daa
testb
mov
push
push
fucomp
cmovo
add
sub
add
push
jp
cwtl
adc
pop
pop
stc
jmp
aas
lock
mov
jb
push
xchg
aad
ljmp
cltd
sub
shrl
pusha
pushf
leave
repnz
pushf
out
add
scas
jl
sub
add
out
fcoms
add
std
test
int
lcall
mov
shll
or
dec
inc
pop
or
jge
inc
jmp
jecxz
mov
mov
mov
dec
or
add
add
cmpsb
add
mov
loope
push
sbb
sub
add
test
add
add
adc
outsb
xchg
push
add
pop
movsb
frstor
pop
out
shrl
sbb
sbb
push
add
ljmp
stos
jmp
roll
add
leave
inc
aaa
xor
cwtl
jge
add
cltd
push
popa
leave
std
mov
jg
out
pusha
xlat
push
xor
push
mov
push
xchg
add
lds
add
push
je
jbe
mov
shll
adc
add
filds
call
mov
xchg
xchg
add
mov
add
jns
insl
pop
xchg
jno
xchg
imul
push
mov
aam
call
cmp
push
sbb
outsl
cmp
and
jnp
push
push
fisubl
test
and
pop
or
loope
cltd
jl
jbe
push
and
popf
aaa
ja
cs
insb
outsb
sbb
add
outsl
jb
xchg
bound
loopne
dec
add
seta
and
jo
sub
movsl
add
jnp
push
add
outsb
xor
add
inc
test
imul
cmp
pavgb
cld
xorl
mov
inc
pop
cmc
out
push
sbb
push
in
add
and
xor
das
cs
icebp
add
insb
stos
jne
fldl
dec
xchg
sub
clc
inc
dec
out
or
gs
add
cwtl
xchg
jle
pop
lock
je
sbb
out
cmp
mov
or
mov
push
push
add
jnp
movsb
add
call
cld
sub
mov
mov
je
add
xchg
add
daa
push
or
ror
out
mov
fs
in
sbb
lods
rolb
xor
add
scas
add
jb
jae
or
pop
cmpsb
out
sbb
daa
inc
ja
shlb
push
mov
sub
mov
xor
aad
aas
pop
enter
ljmp
lock
aad
and
push
add
js
xchg
dec
xchg
sub
sbb
cmpb
jae
add
inc
push
cld
inc
adc
sbb
ret
nop
pusha
jae
push
xor
push
add
push
jb
pop
cmp
shlb
cmp
pop
or
fbstp
into
add
outsl
mov
lods
loope
fcmovne
pop
pop
add
lret
add
push
inc
cli
hlt
popa
cmp
or
mov
dec
xchg
sbb
ret
lock
cmp
or
mov
push
test
mov
shll
lds
pop
add
jg
push
add
sub
cmp
cwtl
jmp
lret
call
xor
mov
sbb
test
mov
xchg
ljmp
das
fwait
mov
inc
pop
dec
orl
mov
push
dec
roll
add
inc
adc
pop
es
xlat
and
subb
add
or
test
adc
mov
inc
leave
xor
add
and
in
mov
pop
mov
fs
nop
adc
push
and
jl
ficompl
sub
inc
out
push
push
popf
data16
stos
repnz
mov
leave
outsl
in
das
mov
aad
add
cmp
out
insl
loopne
add
mov
inc
and
pop
cwtl
pop
xchg
xchg
dec
jge
adc
mov
shr
add
inc
jb
stc
gs
pop
push
ret
jno
add
xchg
mov
adc
lea
out
add
movsl
pop
repnz
fmuls
xchg
push
add
repz
in
jecxz
call
add
push
jmp
js
cmp
and
add
push
sti
sbb
pop
loope
inc
or
add
out
nop
mov
add
add
cmpsb
sub
lret
add
jl
insb
mov
pop
add
loop
pop
ljmp
cmpsb
or
popa
push
stc
daa
add
fcoml
dec
mov
fstps
ja
add
mov
int3
jp
add
scas
and
add
dec
pop
loopne
mov
sub
and
cwtl
iret
push
in
scas
int
outsl
add
movsb
mov
fucomip
or
mov
std
ja
gs
addb
test
mov
popf
dec
mov
dec
mov
subl
lods
mov
xchg
mov
ret
xchg
addb
pusha
xchg
inc
insb
std
test
jno
adc
lahf
imul
or
insl
jbe
ds
xchg
subb
popa
xchg
dec
adcb
mov
push
aaa
and
out
add
shlb
push
call
int3
dec
pop
loop
add
pop
andl
dec
rorl
dec
clc
xchg
inc
in
repz
shrl
mov
test
add
push
mov
mov
cmovno
mov
jg
jae
or
adcl
int
inc
shrl
test
fstpt
loope
lods
hlt
mov
lds
mov
cmp
les
sub
cmp
leave
mov
jns
or
insb
pop
fistpll
leave
dec
je
add
fwait
xchg
in
add
push
ljmp
mov
pop
jl
loope
pop
push
sbbb
adc
lret
lahf
cltd
mov
add
cmc
popa
xchg
mov
test
sti
xchg
in
int3
inc
aad
hlt
pop
mov
setns
and
push
xchg
loopne
add
repnz
iret
call
lds
pushf
push
sbb
sbb
sbb
add
sbb
out
mov
cld
add
test
push
or
jle
add
enter
jmpw
in
cmp
pop
ljmp
sti
les
xchg
test
test
add
loope
and
jo
mov
cmp
add
jo
ja
adcb
sbb
call
fnsave
ror
cmp
gs
inc
jmp
imul
in
push
pop
push
add
mov
add
mov
loopne
sbb
pop
push
subl
add
xor
push
add
mov
fwait
out
les
fadds
int
mov
and
aad
pop
js
sbb
rol
mov
bound
in
or
sbb
in
add
sti
mov
js
xor
sub
lahf
add
and
imul
cmpb
dec
cld
sub
test
dec
cmp
inc
sbb
adc
pop
or
mov
test
je
inc
popa
add
xor
test
rolb
or
lods
jo
lea
mov
sbb
or
sar
push
xorl
loop
ja
add
shrb
jmp
inc
hlt
jl
mov
cmpsl
das
cmpb
lea
add
lahf
xlat
inc
lods
mov
mov
es
add
mov
push
sub
fs
in
push
push
fdivp
dec
in
test
pushf
pop
pop
int3
or
lahf
and
jns
inc
fwait
mov
and
nop
call
jb
push
cmpsb
sbb
mov
rorb
lock
faddl
into
fistpll
push
sbb
in
fstpl
addr16
adc
cmc
call
pop
sbb
pop
sar
loopne
jmp
sahf
pop
iret
sbb
lea
in
test
je
add
lcall
comiss
jnp
in
fs
xadd
loopne
mov
fisubl
aad
call
jp
xlat
jns
mov
add
test
xchg
push
in
jecxz
push
scas
clc
add
bound
movsb
loopne
jae
shl
sbb
in
add
jnp
xlat
add
cwtl
pop
pop
adc
dec
aaa
add
out
lret
addl
shll
pop
fidivrs
loope
mov
add
dec
add
pop
sub
out
insb
scas
and
pop
es
xor
add
arpl
pop
sub
xlat
call
addl
mov
test
pop
pop
and
int
notl
sub
sub
aas
lock
adcl
mov
pop
repz
or
or
add
mov
mov
in
xchg
add
lahf
in
addl
into
or
stos
and
cmp
jp
inc
das
mov
pop
add
pop
add
and
in
stc
add
lods
inc
sub
inc
add
stos
loop
inc
xchg
mov
push
subb
xchg
jns
add
jae
cwtl
sub
dec
dec
mov
pop
add
fbld
pop
and
inc
notb
call
sbb
lock
and
popl
add
rorb
divb
and
add
jp
jns
xorl
pop
imul
scas
adc
js
jae
jge
pop
or
jecxz
nop
nop
push
std
and
test
xor
mov
insb
je
sbb
call
adc
rol
insb
bound
mov
add
sub
add
add
mov
das
add
xchg
or
pop
push
add
lods
mov
xchg
mov
pop
add
xor
mov
xchg
shl
or
pop
mov
or
je
or
adc
les
or
xor
add
shrl
adc
pop
add
test
jecxz
fcomps
xchg
pushf
inc
sub
sti
out
ljmp
pushf
jne
and
inc
mov
out
fs
sbb
in
insb
jmp
call
clc
push
mov
hlt
pop
push
xlat
mov
add
test
arpl
push
les
sub
inc
xor
mov
jp
adcl
movsl
sbb
das
inc
loopne
sbb
mov
ret
fcmovne
out
js
mov
jmp
fisttps
inc
cmp
push
pop
mov
subb
mov
add
call
add
or
jl
xchg
push
dec
in
aaa
sub
fsts
fisubl
adc
mov
ljmp
mov
jo
xchg
jne
jnp
negb
add
xchg
add
in
sbb
cmp
stc
lods
xor
inc
icebp
rorb
push
fisttps
inc
test
repz
ja
dec
mov
fldl
mov
sahf
xchg
movsb
jne
lea
sbb
test
roll
pushl
cmpsb
mov
enter
lods
mov
filds
jle
add
cwtl
and
mov
and
mov
into
shll
add
mov
out
outsb
leave
xchg
dec
mov
pop
sbb
lar
add
adcb
add
mov
add
mov
push
add
aas
mov
notl
cmp
mov
mov
popl
sbb
sbb
nop
push
jle
cmp
lcall
dec
call
pop
aas
pop
xorb
popf
lods
push
dec
sbb
cmp
mov
shlb
or
sub
dec
in
cmp
mov
insb
aas
aam
or
pop
repnz
inc
add
mov
leave
xorb
dec
adc
arpl
jns
dec
jb
push
mov
mov
lcall
lods
call
cli
mov
or
aam
push
dec
xlat
xchg
dec
add
ljmp
and
outsb
icebp
cmp
push
scas
or
cmp
int
insl
adc
and
push
nop
adc
mov
idivl
clc
adc
xor
dec
lock
xchg
cltd
and
ret
jb
mov
xor
dec
add
movb
pop
mov
dec
insl
mov
jo
inc
jns
add
shlb
cmp
push
sbb
xor
mov
add
movsb
test
xlat
mov
sub
insb
lock
pop
adc
adc
mov
rcll
dec
outsb
mov
out
fbstp
arpl
jmp
sub
movsb
subb
or
adc
inc
mov
out
mov
sub
push
hlt
int3
add
push
aam
xorb
testl
add
cmp
cmpb
and
leave
push
mov
pop
stos
pushf
loopne
test
loope
push
fildl
ljmp
jae
mov
or
cmp
fsubr
mov
inc
shr
js
xchg
rolb
jo
xchg
sub
pop
out
lret
add
fstps
mov
push
jle
fisubrs
loopne
push
jecxz
hlt
imul
mov
add
xor
add
cmpsb
and
add
dec
dec
pop
mov
popa
push
clc
call
or
pop
mov
cwtl
xlat
movsl
mov
fistl
lock
inc
add
sbb
inc
mov
popa
pop
in
movl
repz
push
jmp
imulb
sub
pop
icebp
inc
or
pusha
mov
xorb
rcrb
sbb
xchg
mov
adc
ss
rcrb
adc
dec
xchg
push
out
add
pop
or
mov
testl
hlt
enter
loopne
sbb
mov
in
and
scas
sub
cmp
add
sbb
sti
jg
fmuls
cmc
pop
nop
inc
rcrl
pop
cmp
cwtl
cmp
lods
loope
dec
dec
push
add
cmp
and
pop
add
or
test
mov
out
xor
mov
xchg
sahf
insl
popa
inc
add
loopne
inc
mov
or
push
push
sahf
test
inc
adc
scas
pop
adcb
add
add
push
pop
ret
pushf
jne
mov
sub
fwait
add
fisttpl
adc
arpl
mov
add
popf
inc
movsl
in
push
xor
push
addps
mov
xlat
andb
mov
lahf
add
cmc
cmp
cmp
aaa
add
jbe
inc
adc
mov
out
hlt
js
add
fists
cld
and
or
push
jl
aam
arpl
push
jecxz
stos
insl
in
add
aaa
pushf
adc
mov
aam
mov
adc
cmc
lea
imul
mov
dec
inc
sbb
in
into
cmp
ret
or
cmpsl
mov
ret
sub
aas
mov
xor
cmp
popf
cmp
jl
cmp
shr
sub
hlt
xor
add
adc
out
sbb
mov
pop
or
xlat
leave
push
adc
push
gs
insb
adc
xor
or
sub
push
aad
jmp
sub
iret
cmpsb
aas
add
js
movl
out
jbe
add
fsubs
sub
mov
push
scas
add
fs
jo
add
mull
jnp
add
or
mov
aaa
lahf
or
cmp
test
push
xlat
les
subl
add
mov
loopne
sbb
add
mov
xchg
add
decl
pop
roll
int
add
mov
mov
dec
loope
inc
arpl
jecxz
xchg
dec
mov
add
bound
clc
sbb
pop
jmp
sub
xchg
ret
adc
push
add
repnz
aad
mov
mov
and
aam
push
leave
sbb
fildll
int
jmp
push
popf
js
add
inc
aas
and
test
fbstp
add
push
gs
mov
xor
jnp
xchg
cmp
icebp
add
outsl
push
mov
add
cmc
inc
mov
jno
xchg
call
xor
ret
mov
pop
movsl
and
push
movsb
jno
shrb
add
push
mov
gs
out
mov
or
fimull
push
adc
fwait
jp
leave
push
outsb
ficompl
icebp
lss
push
arpl
arpl
cmp
rolb
dec
adc
sub
scas
ds
cmovae
inc
pusha
xor
loopne
jle,pn
xchg
add
mov
add
add
jo
rol
loopne
lods
add
xchg
sbb
add
fsubl
add
sub
cmpsl
scas
mov
call
mov
xor
mov
xchg
rclb
mov
sub
ss
mov
xchg
add
push
rcrl
jns
fldl
dec
sahf
popa
xchg
fstps
adc
mov
mov
dec
js
icebp
xor
movsb
or
xor
jmp
and
xchg
aaa
sbb
lds
stc
xchg
push
or
sbb
addr16
js
xor
stc
test
aad
or
dec
test
mov
int3
add
or
rorl
pop
mov
in
or
inc
les
add
sbb
iret
arpl
test
add
out
pop
sahf
cltd
and
inc
add
frstor
rorb
mov
notb
pop
sar
mov
add
popf
ljmp
push
testl
test
mov
or
cmp
test
cmp
aad
jae
add
push
sbb
xor
outsb
in
sub
outsl
pop
add
pop
ret
dec
dec
pop
movsb
add
mov
jbe
dec
les
in
push
std
mov
jmp
fadds
mov
push
out
jnp
popf
jmp
sbb
xor
jmp
cld
aam
movsb
ret
or
in
lock
pop
inc
rcrb
mov
or
dec
mov
add
scas
sub
adc
jle
mov
dec
jae
sbbb
cld
sub
push
pop
hlt
arpl
jns
sbbl
add
inc
sahf
shlb
cmp
call
sbb
dec
xor
push
cmp
decb
xchg
cmpsb
rclb
and
sub
hlt
or
in
mov
ret
mov
sbb
add
lds
xchg
pop
in
mov
sbb
in
call
adc
imul
ja
mov
jnp
fistpl
cld
add
ja
hlt
lahf
xchg
mov
sbb
add
mov
test
cmp
cmpb
adc
in
test
adc
aas
pop
mov
cmp
add
shlb
orb
sub
mov
xlat
and
xor
push
in
loop
xchg
inc
xor
sub
or
mov
in
adc
dec
jnp
or
inc
andb
les
call
jno
and
pop
loopne
xor
in
or
pop
popf
or
xor
add
sbb
push
call
sub
ret
imul
pop
push
dec
xchg
adc
dec
mov
jno
popf
in
loopne
mov
push
mov
push
sub
push
mov
cld
mov
mov
adc
fcoml
adc
or
loopne
scas
jne
mov
cmp
adc
sub
xchg
cmp
mov
in
push
push
add
nop
dec
daa
iret
loop
ds
andb
shrb
or
pushf
add
hlt
cmp
mov
cmp
int
dec
xchg
sub
test
or
lds
hlt
mov
pop
mov
sub
inc
fsubr
mov
ljmp
and
xchg
outsb
leave
xor
or
mov
insb
jno
xor
in
mov
mov
fistpl
adc
cltd
push
pop
ss
sub
fildll
add
aam
movsl
test
adc
and
adc
scas
xor
jno
sub
or
push
mov
dec
test
cwtl
add
mov
lds
add
sahf
inc
mov
add
sub
push
sbb
je
mov
dec
in
sub
or
mov
or
push
sbb
je
push
fnsetpm(287
or
gs
test
pop
je
ljmp
push
xchg
jl
jns
shl
mov
scas
pop
cmp
imul
addr16
sbb
lods
xor
clc
lds
mov
jl
insb
adc
push
jg
jnp
leave
cld
push
add
and
sub
xchg
popf
rcrb
mov
or
jns
cmp
sbb
in
imul
and
xor
add
daa
fsubrl
lds
mov
pusha
nop
cmp
jb
xchg
push
pop
xchg
negb
xchg
ja
adc
js
and
add
jge
sbb
push
inc
mov
pop
std
ret
and
popw
les
js
xchg
adc
push
xchg
loope
hlt
jg
and
push
inc
mov
or
or
es
data16
ret
sbb
add
jns
mov
inc
xchg
in
mov
add
dec
mov
notb
es
adc
adc
out
clc
dec
fldl
xlat
xor
mov
xchg
add
pop
je
shl
push
smsw
lahf
loope
dec
lods
mov
out
sub
add
and
shll
push
add
jbe
movsb
and
add
mov
std
sub
sbb
and
push
pushf
cli
ljmp
push
out
jl
nop
arpl
inc
push
jg
pop
pop
adc
ljmp
adc
arpl
lock
xchg
add
fbld
mov
movsb
cmpsb
movsl
adc
fsubl
push
xchg
push
xchg
addr16
adc
cmp
add
lcall
and
add
cwtl
icebp
fcmove
jge
add
mov
add
push
sbb
xchg
push
enter
out
ja
mov
pop
dec
lret
inc
add
lret
call
pusha
adc
add
scas
inc
fiaddl
jmp
pop
outsl
fnsave
add
or
mov
insb
add
push
pop
fcmovnu
add
mov
or
xchg
sbb
fs
mov
and
add
mov
fucomp
mov
xor
mull
cmpsl
stos
xor
jno
loop
mov
add
push
and
bound
add
nop
inc
pop
xchg
fiadds
mulb
add
push
add
outsl
sbb
adc
ret
or
rorb
fwait
push
mov
cmp
in
push
orb
leave
inc
cltd
incb
and
call
cmp
leave
add
minps
mov
mov
cmp
js
pop
and
mov
xor
fidivs
stos
imul
sub
shlb
add
pop
insb
into
pop
and
and
cmc
lcall
shrb
test
xor
and
and
and
sub
add
push
and
pop
in
cs
sub
arpl
lods
popf
sbb
adc
jb
sbb
mov
mov
dec
in
ret
pop
jnp,pt
je
loopne
js
jo
testb
pop
int3
xchg
pop
inc
fs
aad
xor
icebp
mov
adc
shl
imul
adc
jl
pushf
add
dec
mov
sbb
add
push
outsb
pop
hlt
adcb
fldl
cmpsb
in
loop
add
mov
data16
in
add
mov
pop
hlt
jecxz
and
repz
out
inc
add
sbb
push
loope
or
faddl
pop
cld
or
dec
add
inc
shr
movl
hlt
add
xchg
xor
loope
stos
int
and
mov
add
push
in
pop
dec
inc
ljmp
in
inc
push
adc
nop
dec
pop
jb
outsl
into
add
jmp
dec
loopne
mov
xchg
and
inc
nop
roll
loopne
mov
xchg
jl
int3
jb
add
push
sub
cmp
and
mov
enter
ret
jae
cs
sbbb
mov
add
pop
add
lret
scas
loop
add
sbb
add
inc
xor
or
arpl
cld
in
rcrb
out
mov
enter
add
fcom
bound
xor
inc
fcmovnb
adc
push
test
gs
arpl
xor
inc
les
mov
popf
pop
mov
negl
dec
and
push
add
xor
rolb
iret
and
out
test
insb
pop
inc
std
lcall
loopne
and
fists
sub
pop
pusha
adc
xlat
sbb
push
add
in
cltd
add
add
xchg
jecxz
mov
pop
daa
cld
mov
imul
xor
and
mov
pusha
mov
adc
add
sbb
jle
nop
frstor
rol
adc
mov
sbbl
and
fdiv
mov
iret
xor
imul
fidivrs
insl
jo
lahf
out
add
ficoml
xor
icebp
or
inc
sbb
mov
push
add
mov
pusha
dec
xor
cmp
fs
pusha
mov
arpl
xchg
mov
pushl
das
dec
loop
add
push
clc
sbb
inc
cmp
pop
arpl
jg
add
scas
orb
sarb
adc
into
mov
push
sarl
xchg
or
fcmovb
or
xlat
pop
sbb
sahf
mov
push
pop
ret
mov
pop
sbb
jnp
pop
or
dec
arpl
add
xchg
and
insl
jmp
sbb
mov
add
sbb
cmp
xor
push
push
xor
pop
clc
xor
add
enter
repnz
pop
fldl
add
inc
or
inc
out
xlat
lcall
or
clc
aas
cmp
in
or
cltd
push
das
fsubrl
lock
sbb
int3
pop
sbb
dec
push
push
aad
loope
and
and
xor
cld
add
xor
jp
add
jg
mov
insb
cmp
fcoms
subb
jae
inc
mov
pavgb
mov
mov
sbb
pop
fstpl
adc
lds
mov
jnp
jbe
loope
enter
add
leave
or
sub
add
shlb
jle
in
mov
push
xlat
cwtl
scas
mov
es
sbbb
adc
daa
mov
repz
push
adc
mov
call
int
andb
sbb
mov
push
mov
push
arpl
add
stos
add
lock
out
jecxz
out
jg
add
or
sub
pushf
push
xchg
mov
xorb
shl
sahf
add
lods
push
mov
leave
fcompl
add
dec
inc
mov
mov
lcall
movsl
add
add
aas
and
adc
idivl
in
pop
add
mov
daa
add
push
movsb
or
mov
add
out
jo
enter
pcmpgtw
and
inc
xchg
xchg
stos
in
leave
jns
add
or
mov
orb
adc
pop
mov
loopne
and
clc
add
popa
addr16
xchg
inc
cmpb
adc
sbb
mov
dec
and
push
arpl
loopne
leave
sahf
fsubr
mov
mov
ja
add
dec
aad
lods
lret
and
imul
mov
out
push
repz
add
xchg
cmp
add
mov
pusha
sub
pop
movsl
xor
icebp
testb
jl
jns
inc
and
data16
adc
frstor
add
in
sub
sbb
mov
cmpsl
pop
xor
xchg
int3
xchg
clc
subb
adc
add
add
add
nop
cmc
jecxz
jbe
ret
das
add
addb
lret
sbb
pop
rcl
jl
mov
dec
add
lret
or
aad
mov
aas
shrb
mov
hlt
js
adc
popa
sbb
adc
daa
add
jl
push
clc
insb
add
mov
jb
pop
dec
shll
mov
aas
jne
adc
stc
shl
mov
insb
jae
loope
mov
xorb
push
push
add
sub
xchg
test
hlt
hlt
add
mov
movsl
sub
jne
dec
sti
nop
pop
sbbb
jnp
jb
add
cmpsb
jmp
cmp
add
adc
cmp
clc
cmp
test
mov
lret
lock
add
jge
leave
add
add
shlb
add
lods
add
cmp
test
les
lret
mov
mov
or
popf
int3
stos
pop
mov
cwtl
push
add
jnp
shr
aaa
fnstsw
stos
pusha
add
outsl
out
call
ret
pop
xor
xor
ja
fs
shll
and
sub
or
jecxz
mov
movsb
stos
mov
out
add
mov
fdivl
out
repnz
cmp
mov
enter
xor
inc
jmp
add
sub
or
and
jmp
xchg
repnz
inc
movsb
dec
or
add
inc
sar
push
and
push
shlb
imul
aaa
push
add
jne
roll
aad
arpl
rclb
and
sub
or
sub
adc
jg
add
push
mov
sbb
fistpll
sbbl
pop
pushf
cwtl
test
out
add
jmp
leave
jne
cwtl
or
xchg
mov
jp
rolb
fistps
add
fwait
jge
int3
pop
jmp
cmpsb
mov
jp
setle
sbb
stos
scas
test
xchg
mov
xor
rolb
mov
adc
jno
adc
dec
movb
and
pop
xor
rolb
lahf
std
add
push
cs
jmp
push
pop
sahf
sub
fimull
jmp
xor
call
push
push
mov
hlt
adc
cmpb
add
lcall
bound
sub
add
icebp
std
push
pop
dec
mov
sub
push
aas
int
mov
outsb
ljmp
shrb
lods
add
aam
push
add
jns
xor
out
adc
sub
andb
daa
add
inc
jl
pop
mov
jle
repz
stos
jge
mov
mov
movsl
dec
mov
xor
popf
ret
jecxz
mov
fmuls
jle
cli
sub
add
or
or
pop
into
add
mov
cmpsl
lock
cmp
cld
rorl
push
add
xlat
mov
mov
lret
loopne
pop
lea
add
out
mov
or
stos
jecxz
insl
loop
add
cmp
movl
lea
pusha
adc
or
and
loopne
pop
jecxz
mov
loopne
cmp
sbb
mov
punpcklbw
scas
pop
add
xor
mov
subb
stos
dec
xor
add
mov
sub
lods
fsubs
fldl
push
and
imul
cmp
sahf
test
loopne
jg
jb
cltd
inc
icebp
adc
enter
rcl
dec
fsubp
add
inc
sbb
imul
add
movsb
ljmp
mov
test
hlt
add
lcall
add
mov
jmp
and
je
pop
add
fiaddl
add
add
jne
mov
shll
adc
in
add
popa
or
pop
adc
pop
cli
add
testb
xor
xor
add
add
xchg
pusha
push
mov
lods
mov
adc
sbb
add
test
add
xor
adc
sahf
push
push
in
cld
enter
push
in
aad
and
movsb
xor
mov
mov
flds
arpl
push
inc
add
inc
jp
add
push
pop
add
out
or
push
leave
int
sub
adc
mov
jbe
popf
mov
rcl
push
sbb
cmp
ret
push
mov
cs
leave
pop
mov
out
adc
sbb
adc
das
stc
fstl
ljmp
out
xor
xor
mov
aam
inc
add
sub
lret
push
or
xor
std
mov
and
cmp
mov
or
not
in
dec
mov
push
mov
test
or
ret
loop
sbb
or
and
pop
and
sarb
mov
aam
add
and
fidivrl
mov
or
mov
test
dec
mov
inc
shlb
jno
adc
rolb
push
test
lods
loop
add
inc
mull
pop
sbb
pusha
jne
arpl
push
cmp
lret
shlb
add
push
pop
sbb
mov
lcall
ds
addl
xchg
fdivs
add
lret
leave
jne
test
fs
jb
cmpsl
arpl
outsl
imul
nop
dec
mov
cmp
sub
pusha
out
or
cli
pop
sahf
push
pop
pop
adc
mov
jle
or
sbb
and
cmp
mov
sbb
test
inc
mulb
mov
inc
add
sbb
cmpsb
dec
sub
add
leave
add
xchg
or
pop
loop
inc
xchg
push
and
mov
stos
or
or
nop
psrlq
push
rolb
cmp
int3
sbb
pop
adc
add
in
push
pushf
add
or
mov
or
popa
mov
inc
test
rclb
dec
mov
sub
mov
test
test
sbb
loopne
inc
push
aaa
and
inc
mov
jno
push
cmp
jl
lds
push
je
movsl
sbb
sub
add
loopne
add
inc
sub
sub
je
mov
dec
dec
jns
adc
push
push
std
push
add
sbb
in
testb
leave
daa
sbb
rcrb
dec
pop
mov
cld
sbb
inc
jmp
insl
add
cmpsb
and
push
adc
test
push
adc
mov
loope
in
push
test
mov
loop,pn
aaa
adc
dec
loopne
mov
iret
test
pop
jg
mov
adc
xchg
adc
push
push
mov
adc
inc
mov
stos
or
push
jp
xchg
jle
inc
movsb
dec
subb
sub
into
or
je
push
rorb
adc
push
mov
mov
jno
nop
or
cmp
fdivrs
fs
mov
cmp
xchg
in
mov
mov
sub
paddsw
push
mov
ret
movsl
lock
rcrb
inc
inc
test
add
aas
sub
cs
or
test
push
or
daa
xchg
call
add
sahf
push
push
pop
or
xor
inc
nop
and
popa
shl
and
jmp
mov
jl
push
clc
lods
or
rcrl
test
add
ror
test
add
adc
mov
inc
ffreep
adc
add
shrb
inc
fs
aaa
or
les
mov
shll
adc
or
fadds
add
inc
xor
sbb
ljmp
push
mov
adc
enter
hlt
sbbb
ja
icebp
cmpsl
addb
sub
out
call
push
jg
leave
mov
mov
inc
add
adc
add
maxps
push
adc
jns
cld
dec
test
inc
mov
int
scas
roll
popa
add
push
pop
push
jecxz
fcoms
cmc
dec
dec
pushf
imul
inc
clc
xchg
add
adc
mov
dec
out
loop
add
fsubrl
dec
je
test
inc
lods
enter
fsub
ds
adc
nop
push
testb
nop
jno
sub
ret
dec
out
lods
jmp
jbe
add
fwait
in
test
or
or
ret
cmp
jbe
add
call
fisttps
sbb
add
dec
cmp
inc
sbb
insb
in
cmp
mov
push
shll
push
or
adcl
cli
dec
cmp
nop
icebp
rcrl
dec
mov
push
popa
mov
addb
mov
inc
push
rolb
fwait
dec
xchg
push
inc
pop
bound
mov
mov
ljmp
adc
add
push
push
testl
rolb
rclb
inc
movsb
imul
add
or
call
rcr
mov
xor
mov
lock
call
sar
addr16
and
cmpsb
call
add
addr16
in
imul
jge
imul
lcall
push
cmp
or
and
cld
mov
jle
out
jns
dec
inc
mov
or
test
fisttpl
mov
lods
popf
inc
fbld
add
inc
push
pop
fisubs
sbb
flds
test
or
addl
pusha
mov
add
rolb
test
out
push
push
mov
aam
dec
jl
leave
mov
sbb
je
adc
insb
dec
pop
insb
mov
cmp
add
mov
add
outsb
repz
test
mov
xchg
aam
sarl
cmp
movsb
pop
cmp
jg
loopne
mov
adc
jge
pusha
xchg
adc
pop
mov
aam
add
outsl
dec
pop
das
cmpb
mov
or
pop
add
dec
mov
push
sub
xchg
call
daa
push
lahf
fisubs
sub
mov
cmpb
ja
jp
cmp
or
loopne
mov
std
cld
cmp
dec
cld
testb
sbb
imul
iret
push
sbb
pop
imull
repnz
pusha
cmp
and
adc
and
add
lea
fisubrs
pop
jbe
add
out
dec
mov
fldl
fwait
std
push
in
add
jl
aas
mov
jb
mov
push
in
movsl
adc
add
lret
shll
adc
fs
cmpsl
push
int3
mov
add
rolb
inc
cwtl
xchg
rcll
xchg
outsb
in
add
jge
pop
and
daa
mov
test
sbb
imulb
add
cmp
scas
xor
mov
insb
mov
jg
movsb
xor
nop
cmp
adc
sub
sub
add
repz
xorl
loope
sub
cld
sbb
jle
add
pusha
fs
dec
jno
cmpsl
out
sub
add
loope
gs
popa
mov
stos
jns
xor
and
aas
clc
cld
add
mov
sbb
in
cs
test
adc
push
xchg
mov
or
sub
fs
xchg
out
sbb
and
inc
scas
cmp
mov
add
mov
cmp
jo
notb
nop
add
push
push
mov
mov
push
subl
push
pop
add
cmp
adc
cltd
stc
pop
xchg
add
inc
xchg
in
inc
xor
add
cmp
inc
add
adc
fdiv
lds
xchg
add
cltd
pop
xchg
addr16
xchg
dec
sub
sbb
xchg
gs
add
leave
adc
add
adc
loop
repnz
xor
inc
dec
sub
lahf
sub
add
out
xchg
add
les
aam
mov
add
in
sub
dec
test
cmovle
hlt
mov
pop
push
sahf
repz
int3
call
push
nop
subb
mov
mov
add
cld
data16
ljmp
add
jecxz
xor
mov
movsb
je
cmp
push
or
push
stc
je
les
sbb
arpl
add
loope
xchg
ud2
repz
iret
add
nop
add
xchg
lcall
mov
rcl
jnp
fdivrs
or
clc
and
add
dec
gs
out
das
addl
add
aaa
fcoml
sarb
fstpl
mov
jecxz
add
and
xor
insl
mov
push
daa
jge
clc
sub
ds
dec
orl
xchg
jmp
add
sbb
lods
pop
lea
push
xor
repz
inc
sbb
add
arpl
call
lret
int
std
movsb
lock
jmp
fisttps
aam
sbb
rolb
js
test
sub
cmp
jne
xor
add
lea
xor
xchg
dec
add
sbb
and
inc
sub
shl
dec
add
outsb
aas
add
xor
popa
or
fstp
sti
pop
sbb
or
daa
cltd
add
mov
popa
pop
into
fisubs
imul
mov
pop
sub
pop
xorb
sbb
xor
inc
add
decl
or
test
jecxz
leave
adc
xor
pop
and
add
xchg
fdivs
xor
and
mov
pop
xchg
mov
adc
nopl
mov
jne
add
insb
adcb
add
jnp
rdmsr
jbe
sahf
scas
dec
shrb
or
push
div
pop
jns
shl
add
aas
pop
push
int
or
nop
xor
push
loopne
cli
clc
adc
cld
dec
and
jle
or
mov
add
jo
lds
or
imul
mov
fs
add
lret
nop
xchg
jbe
xor
cmp
sub
clc
pop
add
das
in
int
movsb
xor
push
std
mov
cltd
cwtl
es
pop
add
pop
addb
ret
imul
jbe
add
sbb
stos
push
and
sbb
or
push
jbe
add
xor
addr16
jnp
add
fsubl
cmp
test
mov
in
stc
adc
xor
lcall
movsl
or
subl
cmc
mov
cltd
popw
add
mov
adc
mov
sub
adc
sub
and
add
jmp
xor
in
rolb
lods
xchg
sbbl
sbb
adc
push
pop
ja
jnp
lock
cmp
inc
cli
js
add
pop
push
faddl
ljmp
inc
cmp
push
jl
popa
xchg
or
jne
pop
add
movsl
xchg
sarb
add
in
scas
scas
fcmovnbe
jae
add
nop
adc
das
add
call
pop
cltd
mov
add
outsl
in
or
loop
filds
leave
pop
push
divb
lods
adc
push
xchg
and
inc
cmpsb
inc
add
lods
jle
adc
add
dec
push
mov
loope
xchg
jno
mov
or
mov
add
push
das
xor
jle
leave
mov
loopne
and
add
sbb
or
pop
adcb
out
xor
push
add
cmp
cmp
xor
and
xchg
inc
add
scas
or
cmp
adc
xor
arpl
sub
stos
add
mov
xor
pop
add
std
mov
adc
push
cmp
scas
in
jbe
cli
outsb
aad
jns
psubb
and
rclb
adc
push
sahf
mov
notl
xor
sbbb
add
pusha
inc
dec
jnp
pusha
js
jo
cmp
pop
aas
fadds
push
jg
iret
ret
hlt
lods
or
imul
pop
dec
push
and
hlt
sub
data16
inc
adc
aaa
add
add
sbb
fistps
inc
call
or
test
pop
test
outsb
dec
mov
mov
jne
fnstsw
ret
jg
fidivrl
cmp
mov
lsl
lods
test
testb
sub
lret
dec
imul
cli
inc
cmp
mov
in
dec
xchg
pop
mov
clc
xor
mov
mov
mov
mov
add
shrl
inc
dec
daa
mov
loope
jmp
and
xchg
add
dec
into
nop
push
shlb
movb
test
lret
icebp
cmp
insb
pop
js
pop
cmp
dec
pop
lock
inc
mul
mov
data16
push
pop
jle
sbb
xchg
lock
push
jl
mov
sbb
xor
aaa
icebp
and
sub
es
dec
aas
sbb
addl
mov
xchg
sub
push
sbb
add
sti
shll
cmc
mov
jp
sub
xor
add
clc
inc
loop
mov
mov
jo
mov
sbb
dec
call
dec
dec
pusha
jp
cmp
sbb
cwtl
sbb
stos
fstpt
xchg
in
xlat
loopne
dec
cltd
add
rcl
dec
lods
xchg
addb
jns
popf
jno
xor
icebp
add
adc
lahf
jp
loope
push
scas
ret
xchg
xchg
stos
andb
add
mov
cmc
cmp
mov
loopne
mov
push
pop
imulb
mov
jp
add
mov
sbb
add
adcb
int3
mov
push
push
add
inc
add
loope
xor
je
add
xchg
call
add
dec
into
outsl
jle
mov
lret
popa
and
lock
int
jb
or
dec
inc
jno
add
in
in
add
int3
inc
sub
mov
int
pop
mov
pushf
push
jecxz
push
lods
or
popa
jl
sub
addb
xor
ss
mov
add
cmp
and
ret
andb
add
cltd
mov
add
push
lahf
aas
add
cmp
jl
scas
and
dec
cmp
adc
inc
sub
loop
mov
gs
es
mov
out
jo
cmpsb
dec
pop
imul
xlat
scas
add
test
dec
add
dec
jbe
negb
jg
add
test
mov
sbb
xchg
dec
jae
mov
mov
mov
xchg
inc
sahf
enter
aam
fistps
pop
test
sub
jecxz
cmp
jb
test
cmc
add
inc
rcrl
fs
shr
or
sbb
flds
shl
or
testl
std
les
adc
add
sub
jg
cmp
fnstsw
mov
add
and
add
imul
add
lds
adc
add
mov
stc
inc
jle
sar
mov
cwtl
arpl
and
cwtl
test
push
fnstenv
push
or
pop
out
jnp
add
lods
or
and
dec
and
shrb
dec
out
adc
repnz
cmp
leave
aas
mov
mov
jne
orl
dec
fadds
dec
xor
leave
ss
ja
mov
sbb
sbbl
enter
movl
cmp
pop
push
imul
dec
cwtl
aam
or
add
leave
xorb
add
inc
push
cld
push
jmp
loop
or
mov
out
sbb
and
out
xchg
in
sub
loope
cmp
add
movsl
push
jns
cmp
cmp
inc
or
stc
xor
pop
sub
sbb
mov
std
adc
rol
adc
dec
add
add
lods
imul
into
mov
xchg
shl
xor
add
icebp
scas
mov
sbb
fsubrs
lea
push
and
fnstenv
movsb
test
pop
fisttpll
cmp
pushf
iret
push
imul
mov
sti
aad
or
loope
xor
je
add
jns
popa
nop
pop
xor
pop
mov
xchg
inc
nop
call
push
adc
loop
nop
dec
add
sub
and
mov
jnp
sub
stos
jl
lods
push
dec
repz
add
les
cmp
decl
xchg
xchg
sarb
mov
ret
add
aaa
test
xchg
pop
add
ja
sbb
sarb
and
or
imul
xchg
sahf
mov
in
add
jo
nop
add
fwait
push
xor
data16
or
nop
pop
add
sbbl
push
mov
and
in
inc
into
int3
dec
xchg
jle
or
rcll
pop
in
cli
ret
add
push
in
sbb
pop
int3
imul
fidivs
ljmp
repz
jle
add
fisttpl
and
loopne
out
wrmsr
jp
nop
fwait
sbb
loope
test
mov
call
pop
push
in
inc
les
dec
pop
xchg
imul
adc
lods
add
cli
shrl
inc
das
repnz
mov
test
in
sbb
push
push
add
out
outsl
sub
jo
fidivs
ror
sarl
test
shlb
sbb
pop
pop
sub
jnp
add
ffree
jge
in
mov
mov
mov
das
xlat
jae
mov
pop
std
aam
adc
add
push
xor
call
mov
icebp
xorb
in
les
aaa
fs
inc
cwtl
gs
add
and
rcrb
mov
test
jb
cld
mov
sbb
pop
pushf
leave
shrb
sub
in
in
mov
mov
and
lock
mov
and
push
jp
jge
mov
push
rcrb
nop
or
es
sahf
stc
add
enter
insb
int
lock
jnp
sub
xor
test
rcr
shll
mov
lea
pushf
pop
mov
xchg
and
scas
sub
sub
sub
nop
cmpb
orb
mov
aam
xchg
cmp
loop
cltd
push
psubusw
or
adc
nop
bound
decb
in
faddl
add
pop
mov
fadds
jns
sbb
sub
jbe
jge
test
clc
repz
std
fildl
je
fcompl
cmp
out
xor
test
fnstcw
sbb
sbb
shr
fisubrl
mov
lret
aam
fxch
add
pusha
add
add
ret
shll
das
lds
std
add
mov
jnp
xchg
aam
test
jle
adc
scas
add
daa
add
inc
cmp
cmp
aad
jnp
insb
sahf
outsb
inc
in
pop
lret
or
adc
mov
fisttps
shlb
xchg
add
mov
push
gs
add
das
adc
leave
and
or
lahf
mov
push
mov
cmp
xchg
add
xchg
push
hlt
mov
adc
cmc
aaa
in
sbb
add
mov
add
ror
sbb
push
inc
fisubrl
add
pop
test
call
icebp
sub
daa
repnz
jmp
inc
mov
sub
dec
mov
add
ret
lds
out
adc
les
mov
rorb
xlat
mov
cwtl
cmpsb
pop
lock
dec
jle
sbb
stc
add
mov
out
pop
push
pop
cmpsb
cmp
lea
pushf
es
lock
rol
xchg
hlt
icebp
add
add
or
addr16
push
enter
cmc
add
pop
dec
mov
mov
xchg
js
loopne
and
int
add
inc
insb
stos
mov
xor
fcomps
fsts
jl
add
or
cmp
xchg
cli
aas
iret
xor
outsb
inc
add
xor
pop
xchg
mov
inc
pop
bound
pusha
ror
cmp
loop
repnz
arpl
shlb
orl
add
aaa
xor
stos
add
stos
sar
ja
push
sub
shll
mov
mov
hlt
jmp
add
test
or
jmp
daa
push
push
add
incb
test
fstl
cmpsb
add
dec
scas
cmp
in
sub
inc
xlat
fcomps
sub
add
test
mov
and
dec
fld
dec
mov
add
cmp
sub
xor
test
repnz
fsubrs
popf
and
add
fabs
sbb
into
sbb
add
mov
push
fs
arpl
or
inc
jmp
icebp
push
ret
lcall
lea
out
xor
sbb
sahf
ja
cmpsl
gs
mov
push
xchg
and
dec
adc
xor
addr16
rorl
aad
icebp
cmp
test
push
lret
fcompl
fldt
mov
imul
adc
dec
fists
jo
jno
loopne
xchg
and
sub
jl
mov
out
lds
dec
add
arpl
repnz
sar
rolb
or
jmp
add
pushf
mov
add
rolb
enter
mov
xor
mov
xacquire
test
dec
insb
dec
add
cmpsl
int3
sbb
fs
cmc
cli
loop
or
enter
pop
cmp
mov
jne
add
loope
push
repnz
or
dec
jle
pop
pop
mov
pop
inc
pusha
ss
rcll
repnz
mov
inc
inc
dec
push
add
fwait
in
nop
pop
in
jl,pn
xor
sub
lret
ljmp
outsb
cmp
dec
int3
loop
inc
cmpsb
xchg
test
stc
pop
rcrb
add
dec
fs
ja
jo
fstpt
sub
insb
mov
testl
add
jg
cmp
or
cltd
mov
add
test
stos
xor
adc
rol
jmp
addb
xor
inc
sub
js
add
out
enter
imul
aam
pop
movsb
xchg
push
sarb
addr16
les
jns
xchg
mov
ljmp
mov
xor
add
ficompl
ds
mov
fnop
shrb
add
pop
jp
add
sbb
shrl
mov
jb
or
cmc
sbb
nop
call
mov
nop
popf
mov
aas
jno
dec
xchg
add
stc
cmp
fisttpll
pop
pushf
xchg
out
incb
sub
or
pop
sbb
pop
add
stos
xor
rolb
dec
ja
cmp
sbb
mov
sub
pop
out
fsub
stos
mov
xor
add
mov
enter
jno
push
imul
test
sub
ret
xchg
and
sub
imul
add
mov
mov
sbb
xchg
jmp
repz
xchg
push
loop
ljmp
and
cmp
xor
mov
add
dec
push
fadds
iret
xchg
negl
mov
mov
mov
cmp
out
push
mov
lods
mov
jnp
aas
addb
dec
ret
add
push
and
pop
dec
rorb
xchg
lea
mov
negl
push
cmp
push
sub
cld
sbb
and
xor
cmpsb
stos
xchg
adc
pop
mov
pop
int
push
lock
loopne
jae
flds
inc
adc
ret
fistl
shll
inc
dec
cmp
pushf
push
jl
cmpsb
add
push
cmpsl
test
and
jno
jne
xor
add
dec
bswap
imul
inc
lcall
shl
jmp
sarb
pushl
inc
jnp
add
sbb
fwait
mov
adc
rolb
add
push
adc
xor
scas
dec
sub
and
cwtl
add
xchg
xor
add
cmpsb
popa
xor
pop
add
xor
test
xor
sub
xlat
scas
mov
loopne
jae
pusha
add
or
push
es
insb
jle
add
and
sbb
add
ret
pop
stos
push
sbb
ja
aam
mov
push
cwtl
daa
add
es
xor
cmp
sbb
xacquire
cli
add
lret
stos
orb
jo
mov
push
cli
fsubl
rorb
xchg
jg
or
xchg
cltd
mov
jns
dec
loopne
cmpl
incb
ret
jns
or
xchg
add
imul
xorb
subl
jmp
cmp
mov
dec
scas
outsb
xorb
arpl
mov
pop
outsl
pushf
add
sbb
add
sbb
data16
into
mov
jo
clc
or
mov
es
add
shll
mov
or
cmp
es
lret
call
sbb
pop
mov
jl
aas
push
cmp
add
das
sahf
dec
loop
and
add
leave
cli
mov
inc
adc
jnp
movsb
or
sbb
ljmp
adc
cmpsb
add
inc
inc
call
ds
loope
imul
push
pop
push
jo
add
lods
lds
fiaddl
xchg
pop
add
in
sbb
sub
sbbb
jg
add
add
xor
adc
pop
je
pop
push
dec
sbb
cmc
lret
in
popa
push
out
add
lock
aas
hlt
movhps
cltd
mov
or
sub
std
cmp
dec
xor
xor
pusha
shll
or
xor
add
fiaddl
or
stos
fwait
and
sub
pop
dec
sti
and
adc
xor
rcr
fmull
push
cmpb
jecxz
aad
cwtl
dec
loop
add
jo
xchg
or
lret
pop
popa
inc
lret
dec
pop
js
pop
or
enter
mov
push
test
cli
cmp
gs
pop
mov
lcall
cli
mov
pop
add
cmp
jo
add
into
test
nop
sub
imul
insb
mov
sahf
dec
fwait
out
pushf
in
nop
cs
add
sbb
xor
add
je
jge
mov
cmpsb
and
add
add
flds
leave
mov
pop
push
pop
ljmp
sbb
or
mov
pop
xor
inc
shr
enter
cmp
sub
lods
lock
cmp
in
js
add
repz
movhlps
inc
adc
push
sbb
xchg
adc
outsl
push
inc
pop
fcomp
jp
sbb
xchg
cmp
push
inc
push
mov
mov
imul
rcll
sub
sub
stos
xchg
loope
int
add
in
pop
or
scas
add
shl
imul
mov
sbb
push
sub
add
jne
add
inc
faddl
add
outsb
adc
cmp
xchg
lcall
test
loope
cmp
add
lret
dec
lods
mov
fdivrl
in
loopne
ljmp
clc
aas
in
cs
xchg
shl
or
push
push
orb
and
subb
mov
push
xchg
lock
jg
add
dec
jno
or
int3
sub
test
mov
loopne
bnd
xor
sub
cld
mov
xlat
sbb
pop
cmp
push
xchg
mov
cmp
push
punpcklwd
pause
dec
cmp
or
loope
call
jnp
and
add
icebp
jbe
mov
cmpsl
inc
inc
pop
mov
outsl
xor
das
popa
push
sbb
cs
add
subl
pop
dec
inc
sbb
in
dec
roll
sbb
bound
xchg
pshufw
cli
cmp
pop
push
push
iret
cs
sbb
add
roll
add
call
sbb
in
adc
dec
cmpsl
or
outsl
push
inc
xor
cli
xor
in
sbb
dec
xchg
push
test
push
sbb
mov
aad
xchg
outsl
push
add
mov
in
dec
cmp
in
nop
push
push
sub
outsb
je
stc
mov
xor
aas
pusha
scas
adcb
add
jae
cmp
nop
js
adc
stc
jno
sahf
push
call
lods
data16
cld
push
in
inc
dec
xchg
ret
inc
mov
incl
test
and
fwait
lret
xor
and
loopne
and
nop
cmp
daa
cltd
mov
repz
or
outsb
lcall
test
cmp
cmpsl
fdivs
fmulp
or
out
aam
inc
nop
jne
lods
jno
pop
daa
pop
ret
lock
sbb
shll
test
sbb
test
sbb
mov
test
jle
add
nop
pop
push
aam
add
add
loopne
push
scas
incb
pop
pusha
clc
add
push
ljmp
shr
or
dec
add
cld
insl
enter
xor
sub
jnp
adc
and
pop
mov
push
ds
lret
xor
fadds
test
fwait
or
inc
add
push
in
push
sub
and
mov
pop
leave
mov
rcl
sbb
sub
rcr
ret
add
add
and
cmp
fwait
sub
mov
ds
cwtl
aam
shrb
push
setp
xor
orl
mov
mov
arpl
es
and
fisubrs
mov
hlt
out
aam
adc
loopne
add
mov
xchg
sub
nop
inc
or
or
sbb
pop
xchg
sarb
les
jp
test
push
orb
mov
sub
int3
cmp
add
ja
mov
cltd
adc
enter
lret
inc
xchg
and
shlb
sbb
pop
movsb
mov
jl
mov
mov
xchg
add
add
aad
mov
add
stos
shlb
mov
out
sub
andl
ss
mov
add
add
add
xor
testl
leave
std
aas
outsl
mov
int3
xor
pop
addb
xchg
les
xor
or
lahf
inc
dec
cli
sub
lea
or
movsb
inc
sub
leave
xor
pop
pop
mov
jle
pusha
jb
dec
aaa
pop
sbb
scas
xchg
cmp
inc
mov
test
int
sbb
hlt
scas
or
ds
mov
cmc
int3
inc
adc
pop
and
inc
cmp
inc
movsl
lret
cmpsl
jl
add
repz
mov
inc
lods
jmp
jge
ror
mov
sbb
cmpl
stos
push
addr16
push
lods
pop
push
add
scas
add
dec
stos
outsl
ret
popf
pop
lahf
in
inc
mov
and
sbb
cmp
adc
add
inc
adc
insb
testl
in
cwtl
pusha
fdivrl
pushf
mov
adc
sbb
add
or
pop
add
into
pop
enter
add
lds
sbb
cmp
icebp
pop
inc
mov
adc
add
push
int
das
or
enter
add
arpl
add
aad
add
lret
mov
cmpsb
aaa
or
pop
rcl
pop
sbb
xchg
dec
xor
fstl
sub
xchg
aaa
add
ret
les
and
xchg
shlb
xchg
call
enter
inc
or
sbbl
mov
and
ror
aaa
add
cs
mov
jne
sbb
push
out
test
cmp
ficoml
mov
fcoms
and
ret
bound
outsb
imul
rcrb
cmc
pop
pushf
leave
call
cmpsb
mov
inc
inc
jmp
les
pop
lods
and
sbb
aas
mov
push
dec
xchg
rcrb
mov
cli
and
testb
bound
pushf
jne
and
insb
int3
cmp
xor
out
add
test
ret
add
nop
iret
in
loope
add
inc
dec
sbb
add
push
cmpsb
push
add
loopne
mov
adc
jno
push
ret
xor
pop
dec
test
xor
jg
pop
push
add
jne
xchg
lock
mov
movsl
imul
aad
and
xchg
jb
jle
jbe
rorb
mov
test
xor
inc
roll
data16
push
add
rcl
dec
sbb
jp
push
aas
lds
jle
aam
outsl
negl
dec
cs
add
add
lods
movsl
imul
cmp
jne
xchg
fs
sub
xchg
add
push
mov
pop
push
jge
or
xorl
test
sub
push
sbb
bound
xchg
add
jl
add
xor
sbb
xor
movsb
fwait
mov
mov
adc
gs
cmp
aas
inc
ja
inc
mov
test
cli
add
es
mov
out
add
cli
mov
fldcw
hlt
mov
pop
fistpll
das
adc
mov
sbb
int
sbb
loopne
addr16
mov
test
jnp
pop
adc
mov
adc
xchg
push
sti
addr16
inc
xlat
jmp
adc
bts
shlb
test
sub
fidivrl
out
mov
add
mov
rcrb
adc
add
out
insl
jecxz
mov
lcall
int
adc
ss
pop
push
push
int3
sbb
leave
enter
push
bound
arpl
aam
pop
inc
sbb
aas
stos
cs
sbb
mov
add
rcll
aam
add
call
negl
icebp
pop
push
rcll
and
add
pop
cmp
test
testl
mov
lahf
cmpsl
sub
lock
and
adc
orl
test
loope
xchg
femms
data16
lret
enter
loope
idiv
xchg
sub
lahf
mov
aam
fs
mov
fs
xchg
add
stos
jne
add
xor
push
add
loope
sub
jge
sti
push
call
xor
pop
clc
data16
mov
mov
flds
sub
out
cmp
fnstenv
cwtl
mov
stos
das
mov
cwtl
jns
mov
jns
add
mov
icebp
xlat
add
push
add
jle
sbb
fwait
arpl
lret
ja
jle
add
jmp
bound
scas
scas
mov
push
insl
sub
xor
ja
adc
lock
cmp
lret
shrb
pop
mov
data16
jo
push
popa
aad
enter
jge
add
rorl
lret
push
ret
fstp
rcll
popa
cmp
add
push
adc
fdivrs
cltd
or
icebp
dec
xchg
jb
inc
insb
sarb
xchg
mov
cmp
out
sub
jb
add
push
cmpsb
insb
push
add
add
xor
ret
or
xchg
xchg
jl
add
enter
shrl
sub
inc
clc
inc
nopl
rorb
adc
sub
lcall
je
push
pop
test
shlb
repz
mov
dec
mov
pop
add
sbb
add
shlb
dec
or
add
jne
inc
xchg
imul
lcall
cmp
popa
sahf
inc
stos
mov
or
cmp
jne
bound
add
mov
jle
sub
test
xchg
add
adc
fs
mov
lea
push
and
ja
xchg
dec
mov
pusha
movsl
push
add
imul
pop
std
loopne
jae
add
fs
fdivrs
fimull
popa
mov
jl
jb
or
jmp
subl
clc
movsl
push
dec
add
out
fbstp
pop
dec
cmpsb
addr16
loopne
push
dec
pop
jp
xlat
enter
push
cmc
sub
pushf
and
fidivrs
mov
jge
cltd
adc
dec
and
mov
push
lahf
cli
fistl
out
arpl
pop
cmp
xchg
in
fdivs
div
add
cmc
fcoms
cltd
movsl
adc
lahf
lods
mov
or
shlb
imul
xorps
adc
fs
fistl
add
mov
jb
xchg
loopne
add
ret
cwtl
daa
cli
sub
add
or
in
popf
leave
add
dec
sbb
mov
mov
popa
js
push
jno
aam
add
popf
inc
mov
jecxz
or
xorb
loop
fsubl
inc
or
out
ret
gs
ds
xchg
add
cmp
ja
push
mov
leave
mov
add
fcompl
adc
add
add
mov
cmpsb
mov
test
mov
dec
scas
stc
add
sbb
shlb
shll
add
enter
pop
in
mov
push
leave
pop
lret
add
xor
out
bound
stos
hlt
jbe
xor
dec
cld
jecxz
inc
addb
in
dec
cmp
push
ljmp
popa
add
jo
je
inc
call
js
roll
std
pop
int3
outsl
inc
in
cmp
adc
add
lods
or
cmp
mov
loope
jb
xchg
or
je
sub
and
and
add
gs
inc
pop
or
or
sbb
bnd
lret
cmp
add
cmp
enter
stos
call
add
jae
outsb
add
shrl
and
mov
push
and
hlt
xor
xor
or
js
in
push
inc
fisttpll
cld
sbb
cmpsb
inc
enter
leave
xchg
mov
add
in
or
dec
loop
push
pop
cmpsb
das
inc
enter
es
dec
sbb
fsubrs
add
int3
dec
test
jmp
push
out
and
mov
mov
loopne
lcall
nop
mov
mov
repz
cmp
hlt
dec
push
lods
jo
xchg
xchg
pop
and
addr16
loopne
pop
test
add
push
lret
mov
insb
iret
int
and
hlt
mov
dec
jecxz
rol
ds
scas
xchg
mov
push
nop
push
xchg
cmp
out
call
cwtl
xor
les
rolb
loopne
movsl
inc
inc
adc
jp
pop
test
dec
cmp
addr16
lock
mov
popf
test
adc
cmp
jnp
ret
mov
sub
pop
sub
popa
inc
loop
lock
repnz
outsl
adc
dec
mov
lcall
adc
cmp
data16
fists
sahf
pop
pop
fdivrs
idivb
scas
add
xchg
inc
movsb
mov
add
push
mov
movsb
mov
mov
and
int
mov
mov
xchg
decb
in
sbb
xchg
mov
add
out
inc
movsb
push
adcl
outsl
stc
dec
push
jmp
push
dec
pop
js
adc
mov
imul
sub
or
lret
cmp
sbb
enter
es
and
gs
mov
repz
sti
imul
push
xor
dec
aad
sbb
or
sbb
push
and
mov
inc
rorb
xor
dec
xchg
mov
add
js
fiadds
cwtl
add
stos
mov
cmp
xchg
push
outsl
mov
call
xchg
test
push
xchg
cwtl
cmp
popf
sub
addl
sbb
inc
jno
mov
fcmovne
mov
add
pusha
in
cmp
xchg
pop
dec
in
add
popa
add
mov
mov
jae
jno
out
and
int
pop
adc
mov
cmpl
ror
cwtl
add
mov
test
dec
and
inc
xor
in
adcb
pop
outsl
mov
push
push
pop
xchg
add
adc
leave
push
push
adc
lods
movsl
pop
sbb
sarb
sti
daa
and
stc
xor
jo
cmp
adc
add
xchg
loop
pop
push
mov
cli
jmp
enter
inc
jae
addr16
imul
push
xchg
xchg
lock
je
jge
icebp
inc
adc
out
push
cmp
int3
dec
into
enter
divb
mov
xchg
push
dec
adc
std
xchg
test
inc
fdivr
cmpsb
clc
push
sbb
xor
or
cmp
push
lock
jp
pop
inc
cmp
in
loop
movsl
or
in
test
in
int
shlb
fisttps
mov
mov
dec
sbb
jecxz
dec
ds
add
mov
inc
fdivrl
jns
add
xchg
loopne
mov
cltd
cwtl
or
cmpsl
sub
inc
movsl
add
lods
xchg
fistl
int
add
xchg
ss
inc
into
cmp
out
les
xchg
loop
lahf
test
add
mov
xlat
cwtl
inc
cmp
lock
mov
pusha
mov
mov
mov
sbb
rol
shlb
aas
lret
ds
idivl
cmp
mov
shrb
inc
addr16
stc
add
mov
xchg
mov
sub
jmp
add
ja
or
and
pop
lahf
xor
inc
mov
cwtl
shlb
xorl
adc
dec
loopne
insb
mov
and
repnz
arpl
ss
loope
ret
xlat
mov
jmp
cmp
inc
movsb
sbb
inc
mov
stc
stc
rolb
mov
adc
and
sbb
fdivs
jle
into
in
add
or
dec
jb
aaa
cmp
mov
enter
jmp
in
fisubl
xor
jbe
jo
enter
or
lock
fdivrp
xchg
jb
addr16
add
sub
shlb
mov
adc
sbb
test
sbb
add
jp
add
inc
arpl
mov
xor
mov
xchg
push
nop
push
add
push
jne
cmp
subb
cs
xor
aad
xor
add
imul
sti
cmp
dec
sbb
mov
lea
insl
sti
cmpsb
lock
pop
fldcw
and
mov
add
xchg
mov
push
lods
or
inc
out
outsb
shrb
dec
dec
aam
xor
add
mov
dec
adc
mov
je
in
push
or
add
sub
push
cs
int3
int3
jo
cs
popf
movsb
pusha
cmpsl
sti
cmp
add
xor
cmp
or
sbb
mov
or
cmp
add
mov
std
cmpb
adc
pop
jne
pop
dec
push
jbe
or
jno
adc
mov
jb
pop
jae
cmp
subl
dec
mov
ficoms
inc
sbb
pop
stos
pusha
add
out
lods
cmp
enter
xchg
mov
dec
jecxz
popa
insb
pushf
push
nop
addr16
nop
xorb
lret
xchg
les
and
fcmovnbe
mov
movsb
dec
movb
mov
add
popa
arpl
pop
add
leave
sbb
repnz
fwait
and
inc
or
xchg
add
jo
xchg
dec
loop
dec
cmp
jl
add
sbb
pop
fadd
dec
stc
lcall
hlt
add
xchg
mov
addr16
jne
mov
testb
mov
mov
push
push
sahf
mov
mov
shlb
push
in
add
inc
mov
cmpb
roll
push
xor
push
jo
in
stc
cmp
jo
mov
xchg
jecxz
or
mov
into
cmp
xlat
add
imul
inc
sub
jo
imulb
test
std
adc
or
xchg
add
gs
out
adc
or
push
push
xlat
movsl
bound
jno
loope
das
jecxz
popa
xlat
mov
jle
sbb
and
or
or
cmp
inc
clc
push
mov
add
orl
aaa
push
push
into
fcomps
nop
adc
push
add
sarb
insl
sahf
mov
into
ret
call
add
fs
xchg
pop
and
add
xchg
push
imul
and
arpl
add
and
add
push
out
jl
add
add
icebp
and
jmp
xchg
or
shr
lcall
lret
add
mov
sbb
test
clc
xchg
add
lods
scas
push
in
in
imul
jmp
cwtl
cmp
mov
xchg
xchg
pushf
dec
js
mov
test
ds
jo
repnz
pop
cli
cld
cwtl
mov
mulb
and
adc
add
mov
pop
add
pop
and
pop
nop
inc
mov
add
xchg
das
pop
pusha
cmc
jb
mov
fimull
iret
or
outsl
push
mov
jne
and
psrld
sub
cli
jae
inc
insb
jl
xchg
jno
mov
sbb
add
xor
lahf
shll
adc
idivl
mov
adc
push
pop
ljmp
or
inc
fs
mov
nop
cmp
mov
and
mov
mov
xchg
std
lcall
xchg
repz
and
push
ljmp
movsb
lock
inc
movsb
sbb
into
repnz
scas
dec
jecxz
pop
lock
cmp
ror
faddl
ljmp
divl
adc
xchg
cmp
fists
add
mov
pop
fmull
andb
add
add
out
sub
int
mov
movsl
and
idiv
ds
fdivl
dec
mov
lods
xchg
add
dec
push
test
sbb
add
movsl
adc
add
mov
mov
adc
lea
cmp
push
or
mov
inc
mov
and
hlt
out
sub
cli
iret
lods
sti
dec
ret
pusha
add
lds
cld
sub
sti
adc
lea
xchg
and
cmp
inc
mov
sarb
out
call
mov
rolb
mov
dec
jp
add
fnstenv
dec
add
lret
daa
movl
add
je
xchg
test
xor
iret
cmpsl
push
pusha
or
inc
add
loop
push
and
mov
add
out
loop,pt
jmp
sti
push
xchg
fdivs
jle
aam
sbb
sbb
nop
pop
cmpsl
xor
fwait
jle
mov
loopne
ret
xor
sub
add
add
call
popf
pop
ljmp
xchg
mov
rorl
mov
sub
je
icebp
pop
shrb
push
das
mov
and
js
movsl
xor
jle
out
inc
adc
xor
inc
and
add
aaa
adc
in
icebp
in
push
shrb
add
pop
daa
mov
inc
shlb
adcb
leave
add
cmp
push
xchg
cwtl
dec
mov
push
jnp
add
mov
daa
mov
adc
loop
add
outsb
xor
mov
fwait
lods
lsl
and
nop
lock
nop
jmp
pop
jmp
popa
mov
mov
fistps
or
or
dec
addb
dec
dec
push
pop
sarl
int3
lods
add
inc
add
pop
mov
fwait
mov
xlat
jne
xchg
xchg
enter
add
pop
inc
leave
daa
sbb
mov
rcrl
add
in
ljmp
fxtract
add
sub
mov
sub
jb
mov
cmp
xchg
sbb
imul
mov
aam
pop
xchg
xchg
xor
add
pop
mov
and
gs
and
clc
adc
mov
inc
in
out
xor
mov
cmp
xchg
add
cld
or
dec
jge
cmp
in
mov
mov
and
movsb
sbb
sub
popf
int3
push
mov
sub
out
movsb
mov
jbe
pop
pop
and
daa
xor
mov
cmp
adcb
pop
mov
pop
adc
or
mov
xchg
packuswb
inc
bound
and
and
add
mov
outsb
xchg
fcomps
shlb
pop
dec
adc
jecxz
lds
std
xlat
test
jl
add
rcrl
insb
lret
add
aas
cmpsb
push
pop
inc
les
add
pushf
or
jo
add
xor
or
mov
lcall
rorl
inc
sbb
adcb
and
imul
addr16
sub
les
aaa
enter
lret
dec
out
jmp
and
add
ror
mov
mov
clc
js
pop
pop
push
mov
dec
or
push
shlb
clc
lock
mov
mov
clc
add
sarl
push
lea
dec
and
aad
pop
mov
mov
mov
loopne
ds
repnz
insb
or
xchg
stc
js
xchg
inc
scas
add
jno
xchg
jmp
cmp
mov
add
jne
out
movsl
shrb
xor
jns
sbb
dec
inc
andb
out
or
xchg
jp
mov
pop
xchg
loope
add
xor
ficomps
lret
int3
lock
cwtl
in
xchg
add
adc
imul
orb
test
dec
cmc
jle
js
pop
dec
lcall
jge
andb
mov
fadds
arpl
jle
pop
shlb
cmpb
dec
dec
mov
and
cmpsb
adc
dec
add
clc
jno
aas
es
cmp
add
push
in
push
or
into
xlat
pop
xor
cmc
in
sbb
dec
xor
jo
and
rorl
sbb
or
dec
sahf
insb
inc
adc
shlb
shll
sbb
es
adc
xchg
sbb
push
loopne
push
add
xchg
mov
dec
lock
push
mov
stos
loopne
movsb
cmp
lods
mov
int
jmp
lcall
jnp
stos
in
les
mov
sub
inc
cmp
in
add
pusha
inc
sub
pop
pushf
out
sub
mov
movsl
xlat
dec
ds
xor
or
fsubl
push
fs
imul
repz
fdivr
add
addb
enter
popa
mov
add
loop
int
pop
ret
adc
jb
or
push
sub
test
rorb
movsb
add
arpl
fsubrl
fs
fbld
jb
xchg
xor
pop
xchg
and
dec
orl
gs
push
loopw
in
sub
insw
dec
lds
pop
repnz
mov
jmp
jo
jno
cwtl
mov
fadd
mov
repnz
xchg
nop
or
mov
test
cmc
sub
jno
dec
mov
dec
xchg
mov
adc
xor
push
mov
fnstsw
mov
push
shll
test
mov
and
xorb
dec
adc
loope
lcall
and
sbb
gs
pop
and
ljmp
mov
jg
add
sarb
mov
into
mov
jmp
jecxz
or
mov
leave
in
mov
sub
movsb
mov
leave
push
out
jnp
add
scas
inc
or
fldl
addb
or
xchg
xchg
int3
sbb
movb
jns
std
mov
and
lcall
xchg
nop
xchg
sbb
sbb
sahf
mov
clc
cmpsl
and
cmpsb
mov
jle
mov
nop
pop
out
inc
or
movsl
push
sbb
sbb
jbe
loop
cmpsb
adcl
imul
add
sti
test
movsl
adc
xchg
lcall
push
in
mov
xchg
es
scas
dec
sbb
adc
mov
and
add
nop
sahf
movl
in
xchg
iret
adc
insl
dec
sub
and
mov
rolb
xor
or
mov
nop
movsb
or
es
int3
les
cmp
push
pushf
and
pushf
enter
pop
or
mov
jge
test
pop
add
lret
or
loopne
popf
add
mov
shlb
jp
fnstsw
aas
xor
xchg
mov
sahf
in
orb
and
mov
cs
je
lea
out
push
cmpsl
insl
jo
test
movl
jae
add
sbb
jb
add
inc
sbb
xor
rolb
dec
andl
lods
repnz
bound
xchg
sbb
inc
popf
cmp
push
inc
adc
adc
outsb
and
xor
loop
pop
cmp
call
or
inc
aam
mov
call
test
or
jg
xchg
sbb
mov
dec
mov
xchg
pop
and
mov
pop
cmp
cmp
ss
mov
add
aas
sub
or
daa
cmp
and
in
cmp
mov
sbb
cs
cmc
repnz
test
sbb
cmp
pushf
shrb
and
add
andl
mov
add
adc
cmp
mov
and
add
stc
int
sbb
add
sahf
inc
pop
sub
dec
mov
movsb
cltd
lock
lcall
insb
adcb
jbe
adc
std
fildll
adc
pushf
cmp
lea
in
test
xor
pop
popf
add
mov
fcomps
movsl
mov
mov
xchg
roll
mov
jns
out
dec
fs
or
mov
cmp
sub
js
sbb
leave
xchg
insb
call
jp
add
or
add
rorl
and
pusha
jae
sub
and
addr16
outsb
sbb
xlat
xchg
movsl
dec
push
dec
lock
add
cmp
dec
loope
cwtl
adc
push
xlat
cli
aaa
int3
pop
mov
cwtl
mov
push
jo
lock
inc
adc
mov
cmpsb
jae
push
mov
mov
xchg
xchg
sbb
inc
sbb
cmp
outsl
popa
xchg
or
add
add
std
mov
inc
push
loope
ss
stos
xor
xchg
in
xchg
imul
outsl
and
fs
add
dec
je
add
push
jmp
cmpb
cmp
add
pop
xor
pushf
inc
cmp
and
mov
cmp
aaa
adc
xlat
dec
rclb
lret
test
mov
in
inc
loop
xchg
loopne
inc
dec
push
add
mov
in
cmpsl
xor
mov
out
ja
add
pushf
jmp
add
push
imul
movsb
cmp
jl
add
aam
iret
add
mov
loop
pop
mov
stc
cltd
lods
mov
arpl
in
cltd
mov
mov
adc
sbb
nop
inc
push
jae
sbbb
and
cld
add
mov
sbb
sub
testb
push
into
sub
repnz
adc
mov
sub
js
jo
pop
cmp
adc
int3
inc
or
mov
adcb
fsubr
dec
ja
addr16
and
add
add
test
add
sbbl
sbb
daa
out
inc
dec
and
dec
in
sbb
or
add
xchg
popf
nop
aaa
insl
les
cld
xchg
sarb
subb
add
mov
fimull
xchg
fldl
cld
les
andl
loope
jnp
and
pop
push
call
xor
inc
pop
jae,pn
andb
mov
and
loopne
add
push
mov
push
fs
pop
outsl
mov
inc
push
add
xor
cli
loop
movsl
adc
add
push
test
push
cmp
rolb
pushl
inc
cmp
mov
push
ss
testb
std
push
imul
dec
inc
and
mov
inc
add
jnp
jg
cmp
pop
or
or
pusha
push
test
fs
jle
fdivrs
dec
cmp
and
mov
ss
or
insb
cmp
jno
loopne
jns
xchg
fs
mov
adc
and
cmpsb
hlt
push
cmpsb
cmp
sbb
lret
hlt
adc
dec
daa
xor
dec
mov
les
jo
pop
mov
mov
mov
and
sarb
mov
or
pop
inc
pop
shlb
ret
lahf
rclb
pop
lea
sbb
inc
cwtl
dec
add
lahf
inc
call
dec
or
mov
daa
test
inc
xorl
jno
dec
xor
push
test
shrb
mov
fistpll
cmp
sub
and
cmp
call
inc
cmp
in
push
addb
ss
jecxz
dec
jae
add
fwait
ret
les
daa
adc
add
dec
sub
cwtl
in
ss
add
xchg
push
sub
add
inc
loop
aam
lahf
test
rolb
mov
cmp
decl
mov
mov
mov
sti
inc
cs
cltd
dec
mov
decb
and
rolb
ret
inc
aam
push
adc
dec
adc
and
mov
xlat
aas
add
mov
cmp
shl
aas
push
ljmp
loop
mov
and
sub
popf
data16
adc
fwait
cltd
dec
sub
sub
pop
xchg
add
cmp
movsb
sub
pop
xchg
inc
call
cmpsl
aaa
hlt
pop
cmp
push
sbb
push
lret
imul
jnp
pusha
sub
sub
out
jne
aas
or
in
dec
cmp
pop
call
add
jno
int
cs
sub
add
loopne
adc
mov
adc
jmp
lret
dec
add
ret
xchg
or
mov
dec
lock
sti
shlb
lahf
rorl
dec
faddp
mov
int3
cmp
add
fcomi
movsl
in
adcb
pusha
fwait
push
pop
pop
ds
or
push
in
jmp
jl
out
movsb
pop
imul
bound
lock
or
testl
pusha
cmpsl
pop
xchg
stc
ljmp
or
mov
inc
outsb
imul
cmp
nop
lahf
lock
out
fisubl
popf
scas
imul
ljmp
fnstenv
push
bound
cmp
sarb
inc
outsl
lock
add
pushf
pop
lods
lret
jp
add
cmc
imul
fisttpl
lods
fucom
pop
or
shll
cmp
dec
add
call
jmp
or
xlat
cmp
adc
paddsw
inc
sbb
in
add
in
mov
pop
popa
push
int3
adc
es
or
xchg
fs
js
pushf
add
insb
cmp
sarb
pop
inc
xor
mov
mov
gs
rcll
lret
pushf
cmp
test
rclb
loope
sub
and
xchg
rorb
add
je
sbb
inc
mov
outsl
adc
cld
add
push
movsb
pop
pop
inc
pop
jne
add
or
mov
adc
jb
hlt
sbb
rcrb
push
lahf
mov
add
fsubs
stos
cmc
or
mov
pushf
orb
pop
repnz
push
xchg
addb
add
adc
not
ss
clc
and
jo
xchg
mov
adc
dec
lods
test
jo
pop
or
and
dec
es
inc
shrb
mov
or
int
mov
mov
or
cs
daa
xchg
xchg
in
mov
cmpl
ror
out
pop
dec
jo
xchg
sub
xor
call
jae
pop
dec
clc
cmpb
fs
sti
inc
scas
sarb
ja
sbb
mov
ljmp
sbb
imul
fdivrl
and
pop
loopne
mov
int3
cmpsb
jbe
fpatan
data16
xchg
adc
ja
add
out
mov
jb
xchg
insb
pusha
push
adcb
pushf
add
pop
push
cld
stos
das
sub
lods
addr16
lahf
dec
add
adc
xlat
adc
push
lea
in
add
add
xor
mov
scas
arpl
fsubs
icebp
adc
adc
mov
ljmp
lds
outsb
push
lret
mov
adc
xor
dec
loop
add
fdivs
adc
shlb
and
cwtl
adc
pop
stos
pop
xchg
std
mov
cltd
mov
pop
push
in
fidivrl
sarl
ljmp
lcall
divl
sub
adc
out
arpl
int3
hlt
pop
mov
add
xchg
leave
fadd
xor
loop
pusha
jl
xor
push
dec
jno
mov
sbb
imul
aam
icebp
mov
cmp
jae
addr16
adc
adc
push
fdivs
inc
fwait
xlat
test
xchg
sbb
into
adc
lea
pop
adc
jae
or
push
mov
sahf
call
pop
xchg
or
mov
pusha
in
mov
fs
cmp
mov
jb
mov
sub
mov
pop
jbe
and
js
or
pop
stc
mull
fdivrs
gs
in
mov
or
xchg
mov
stos
aad
lods
mov
call
sbb
adc
or
adc
enter
pop
or
cmpsb
add
inc
and
jne
or
dec
dec
lahf
inc
push
jmp
or
inc
and
add
mov
in
add
sub
jo
mov
pop
add
loop
mov
cmp
mov
xchg
add
or
cmp
mov
jl
test
jg
lcall
out
cmpsb
inc
cwtl
mov
cld
addb
popf
and
xchg
jae
add
lds
gs
push
xchg
and
clc
imul
xchg
mov
add
xchg
sbb
jns
mov
popf
xor
sbb
sar
push
xor
cltd
push
insb
mov
cmp
pop
pop
push
sahf
shlb
insb
int3
out
mov
add
sahf
push
jbe
ret
sti
add
mov
xchg
xor
xor
jl
lods
cwtl
cmp
cmp
cmpb
clc
or
sub
add
or
test
or
dec
int
dec
jne
inc
rolb
add
inc
push
xor
pusha
add
call
movsb
in
test
xor
fistps
add
loopne
push
lock
pushf
xor
xor
iret
add
lcall
add
xor
add
mov
jo
ret
xor
and
lock
sbb
inc
or
xor
clc
test
cmp
inc
mov
and
sub
nop
mov
mov
addl
ja
hlt
mov
jle
push
arpl
faddl
jns
cmp
add
aam
push
push
pop
mov
xchg
fsubrl
sbb
testb
subb
and
xchg
xchg
mov
add
push
mov
sub
dec
add
imul
test
sbb
sbb
or
aas
sahf
push
mov
add
or
clc
mov
xor
adc
and
jle
xor
movsb
xor
xchg
jmp
andb
pop
scas
mov
shlb
mov
loopne
sub
ljmp
aaa
clc
outsb
cmp
sub
shl
out
xchg
xor
push
cmp
jmp
sub
push
clc
sbb
xor
xor
add
es
paddd
pop
inc
dec
or
mov
shl
bound
inc
insb
xor
mov
or
sahf
roll
inc
add
fdivrs
mov
add
lea
xor
movsb
add
push
mov
enter
lahf
cmp
mov
das
dec
orl
add
mov
into
push
xchg
cwtl
cmpb
inc
cmp
les
xchg
clc
aad
fldenv
dec
push
lock
test
adc
cmp
push
sbb
pop
shlb
dec
add
dec
imul
addr16
add
bound
movsb
loope
sbb
or
xor
add
ja
mov
mov
add
lret
inc
mov
cmpb
push
aas
or
xchg
sbb
pushf
cmpl
sbb
fisttpll
dec
add
inc
popl
neg
push
test
add
dec
push
add
pop
gs
mov
sbb
pusha
mov
mov
les
cmp
mov
xchg
inc
sbb
push
cltd
pop
loopne
mov
xor
mov
xlat
std
jle
add
push
xchg
mov
loope
stos
xchg
adc
out
adc
pusha
adc
notb
lahf
push
pop
lock
stos
insb
mov
aad
movb
es
push
arpl
sahf
or
jp
xor
lcall
cmpb
es
mov
cli
outsb
jg
xorb
add
pushf
test
movsl
test
leave
dec
xchg
mov
or
popf
mov
adc
repnz
add
or
sarb
into
jae
jns
sub
push
lret
lds
mov
dec
mov
dec
inc
aas
push
xchg
and
add
jmp
cmp
mov
or
mov
sbb
fidivs
pop
pop
push
mov
push
std
mov
inc
popa
inc
xor
cli
flds
cmp
dec
inc
mov
add
xchg
and
push
inc
out
bound
sbb
imulb
ficoms
and
add
stos
test
add
adc
mov
add
mov
lods
ss
add
xchg
mov
add
and
xchg
orl
push
mov
popa
stc
add
imul
call
pop
ret
or
sub
cltd
mov
add
rcll
adc
mov
sbb
and
dec
aas
lahf
cmc
mov
mov
pop
dec
je
mov
inc
mov
adc
sub
sbb
add
adc
mov
pop
cmc
cwtl
add
inc
xchg
es
and
mov
add
push
jae
pop
mov
rcl
push
and
xchg
shll
and
sbb
add
test
add
mov
sbb
das
ret
mov
pop
int3
pause
add
sbb
hlt
inc
rolb
inc
pop
test
push
imul
push
popl
or
sub
inc
sti
and
or
add
cmp
push
xchg
pop
inc
adc
add
cmp
and
ds
sub
inc
push
xchg
mov
sbb
jl
add
negl
int
or
dec
and
push
mov
add
das
popf
push
inc
sysret
pop
adc
lahf
xchg
add
push
push
js
pop
and
outsl
mov
add
xchg
cltd
sub
pusha
daa
xchg
sbb
or
add
dec
adc
fnstenv
sub
lock
shlb
xchg
add
push
sbb
int
add
adc
add
lcall
pop
clc
inc
or
pop
and
jb
fisttpll
adcl
add
rolb
pop
icebp
pop
add
loop
sub
jge
cmp
xor
pop
ja
cmp
dec
add
enter
pop
scas
add
cmp
rcrb
push
jl
dec
pop
mov
jge
xchg
and
xchg
xlat
inc
or
inc
cmp
add
mov
pop
inc
pusha
dec
call
mov
es
pusha
out
sbb
pop
pop
push
pusha
mov
add
cld
sub
pop
lahf
in
adc
mov
jne
mov
sbb
push
xchg
add
imul
cmp
mov
inc
movsb
push
clc
mov
in
js
jns
add
pop
into
wbinvd
test
dec
es
cs
dec
add
push
insl
mov
clc
add
test
mov
andb
push
inc
shll
scas
xor
inc
mov
ret
cwtl
push
daa
fldl
aas
mov
mov
adc
jmp
or
push
add
dec
add
repnz
test
je
cmp
and
push
adc
and
add
pop
nop
push
push
xchg
inc
int
aam
outsl
mulb
sbb
push
leave
aaa
fsub
loope
and
push
cmp
nop
lcall
pop
mov
sti
add
push
sbbl
in
lods
cmp
adcb
repnz
or
pop
or
syscall
adc
in
pusha
xor
jns
out
inc
mov
sarl
sbb
xor
inc
clc
imul
rolb
test
mov
sti
in
mov
fcoms
xor
pop
mov
pop
add
iret
add
mov
sub
arpl
or
or
push
adc
and
cmp
mov
lods
or
int3
mov
movsl
repnz
xor
mov
xlat
loopne
adc
jo
jb
add
sbb
mov
add
jmp
push
js
movsl
and
sub
fcompl
in
testb
xchg
aas
xchg
pop
xchg
adc
pusha
add
cmp
sub
push
dec
js
subb
insb
shrl
pop
sbb
ret
mov
dec
add
insl
inc
inc
or
dec
mov
nop
adc
cmp
mov
or
nop
push
movsb
inc
das
pop
mov
jmp
ret
jmp
nop
or
push
pusha
es
and
mov
or
aaa
stos
mov
xor
add
js
adc
add
mov
out
or
int
xlat
add
cmp
pop
and
js
mov
lret
stos
add
imul
incl
shl
sub
cltd
add
and
into
jmp
loopne
movsb
mov
cmp
cmp
xchg
pop
popf
js
cmp
lret
lods
jns
mov
stc
dec
imul
mov
dec
scas
nop
sbb
mov
hlt
xor
push
sub
push
xchg
ret
mov
add
dec
cwtl
aam
or
jecxz
cli
jae
stos
movsb
pusha
decl
out
lret
movsb
popa
icebp
inc
mov
lock
inc
add
jnp
mov
mov
pop
rcrl
push
cmp
mov
insb
into
dec
std
inc
js
xchg
out
dec
cltd
iret
add
rorb
add
outsl
adc
enter
hlt
pop
shl
xor
or
and
or
leave
cmp
aam
and
ss
bswap
cmp
mov
insb
sbb
mov
test
sbb
roll
add
js
or
mov
sbb
pop
and
rcll
adc
dec
or
xchg
push
loop
rorb
les
cmpsb
cwtl
push
jp
shl
jns
inc
rcll
lds
xchg
stos
jae
or
jp
add
sub
or
inc
popa
or
enter
sti
stos
jmp
mov
add
out
push
lret
pop
sub
cltd
mov
add
leave
sbb
cmp
ljmp
mov
push
add
dec
add
jo
adcl
or
push
xchg
pop
es
adc
fs
test
pop
sbb
jno
mov
cmp
add
rorb
test
fwait
push
lcall
testl
and
mov
es
sub
aam
push
push
addr16
sub
mov
pusha
or
push
aam
add
pop
or
call
xchg
fadds
iret
sarl
add
fcomip
sbb
xor
dec
inc
xor
mov
aad
mov
xchg
in
arpl
fs
mov
mov
fxch
sub
adc
loopne
jl
add
push
ja
pop
mov
adcb
orl
arpl
adc
or
lcall
lret
pushf
jo
add
mov
adcb
shll
notb
add
pop
dec
xchg
push
fadds
xchg
cmp
rolb
jp
loopne
mov
pushf
adc
into
dec
cld
fwait
cmp
pushf
adc
add
or
lods
inc
ds
andb
jnp
xchg
rorl
or
mov
pop
add
xchg
add
stos
pop
jge
mov
cwtl
or
fs
out
sti
dec
add
cltd
into
ret
jbe
add
mov
push
xor
enter
mov
dec
bound
jg
decl
add
mov
pop
cmp
mov
cld
add
jecxz
inc
xor
into
in
push
dec
mov
mov
mov
dec
jge
mov
dec
inc
inc
std
inc
mov
js
cmp
aam
add
push
insb
fidivs
imul
dec
and
test
cmp
mov
clc
sbb
or
adc
enter
lea
mov
fsubl
or
inc
push
sbb
push
or
cltd
mov
bswap
jae
popl
dec
gs
sbb
sbb
jb
add
mov
add
jo
dec
or
add
test
and
sbb
adc
clc
cmp
push
mov
xchg
add
lret
shll
negb
dec
pop
jl
scas
pop
jnp
adc
in
adc
leave
jbe
mov
fwait
jb
sub
or
and
mov
js
push
int
push
and
out
push
or
cwtl
jns
add
fwait
mov
sbb
fs
or
sub
and
fcoml
inc
adc
ret
add
hlt
in
push
mov
or
nop
mov
sbb
mov
cmp
pop
sti
mov
xchg
loopne
lods
test
pusha
pop
sub
cmpsl
or
inc
mov
add
or
pop
xor
mov
dec
cmp
cmp
repnz
xchg
mov
shlb
fbstp
add
push
mov
movsb
rorb
dec
pop
test
loop
test
fdivrs
ljmp
xor
daa
sub
adc
inc
mov
jle
sub
nop
inc
hlt
adc
pusha
push
fiadds
mov
jns
sub
imul
addr16
es
xchg
or
inc
imul
pop
or
stos
icebp
jae
xor
dec
popa
xor
test
sub
or
in
les
add
adc
cmp
orb
mov
dec
sub
xchg
inc
gs
inc
push
lds
int3
es
and
xor
cltd
fadd
int
fs
in
dec
sub
les
popa
and
call
lcall
add
mov
out
push
add
dec
sub
dec
in
loope
nop
add
pop
fwait
push
inc
test
stc
rolb
mov
ja
cmp
push
call
rcr
push
cmpsb
xor
repnz
aad
stc
pop
jge
lock
xchg
adc
and
xor
dec
jno
jge
cmp
test
arpl
adc
stos
movsl
inc
fs
cmc
cmp
out
sub
aad
call
jb
add
or
arpl
ret
or
mov
leave
and
out
sbb
stos
pusha
movsb
imul
frstor
add
ds
and
xor
les
out
add
lahf
mov
das
add
mov
jp
add
pop
dec
and
ds
loopne
ret
clc
add
shrb
and
pop
mov
inc
sbb
mov
mov
mov
dec
bound
mov
rolb
add
and
sbb
add
scas
add
adc
fists
pop
popa
cmpsb
jle
sub
cs
and
popa
jmp
int3
stc
scas
cltd
pop
ss
iret
push
test
add
or
sub
sub
dec
test
mov
and
xor
mov
adc
push
sub
cmp
enter
push
and
movsb
inc
jns
mov
sbb
test
out
pop
jne
and
mov
subl
adc
mov
lock
cli
sub
push
dec
lock
jo
sub
pop
clc
or
pop
dec
aaa
adc
stos
mov
hlt
add
out
pusha
xor
adc
add
stc
rclb
sub
pop
add
loop
or
or
imul
pop
adc
xor
pop
fsubs
cmpb
test
das
adc
push
xor
push
call
ljmp
dec
jno
xorb
sub
mov
and
rorb
add
adcb
or
sbb
push
int3
mov
adc
and
out
adc
test
pusha
and
jle
and
inc
inc
lret
mov
cwtl
cmpsl
lea
mov
das
arpl
mov
or
call
xor
cmpsb
add
push
mov
pop
mov
cmpsl
xlat
stos
out
mov
push
mov
xchg
cmp
adc
in
je
add
mov
insb
mov
int
jbe
fmul
sub
adc
sub
xchg
test
push
dec
and
mov
and
xor
shl
xor
int3
push
test
sub
add
cmp
dec
pop
mov
add
andb
xchg
jb
enter
or
scas
addb
add
hlt
sbb
inc
or
outsb
and
xor
cmpsl
inc
add
mov
lcall
jnp
test
push
sub
xor
fdivrl
add
cmp
aaa
scas
shl
sbb
mov
jle
mov
xor
pop
adc
shr
jo
movsb
or
mov
addl
xor
mov
aad
cltd
mov
pop
inc
dec
jns
incl
lret
sbb
pop
ret
push
mov
or
mov
dec
adcb
jecxz
add
int
xor
loope
dec
add
test
mov
test
in
jg
lds
push
add
inc
stos
out
icebp
test
mov
jno
sub
mov
adc
pop
dec
inc
mov
pop
aaa
add
pusha
fs
ss
pop
insb
inc
jne
add
ljmp
aad
popa
mov
mov
sub
repz
stos
dec
and
int3
jb
or
js
jne
xchg
and
aaa
nop
pop
pop
adc
faddl
ficoms
js
popf
add
mov
add
dec
mov
lock
mov
stc
mov
je
add
pop
in
pop
cs
loopne
scas
nop
jo
sbb
mov
fcoms
inc
roll
and
test
dec
cmp
pusha
jle
rorb
sbb
lods
push
fsubrs
decb
jb
mov
jmp
add
shlb
push
xor
jmp
inc
add
mull
inc
clc
inc
dec
loopne
nop
ja
add
sbb
call
xor
xchg
jle
add
dec
sub
popa
ret
daa
add
adc
mov
lcall
push
test
mov
push
inc
out
call
movsb
inc
add
add
xchg
ja
gs
insb
cmpsl
inc
mov
or
cmc
inc
ss
xchg
aam
dec
cs
or
or
cmc
nop
sbb
mov
add
popf
fisttpll
inc
add
push
jb
mov
add
and
arpl
and
nop
and
add
pop
and
pop
insl
and
xchg
jecxz
es
push
andb
push
mov
xchg
xchg
rorb
nop
lea
add
cmc
mov
call
mov
mov
push
insb
and
add
jmp
cmpsb
push
and
les
cmp
pusha
out
add
jne
fdiv
scas
pop
mov
inc
out
cmp
call
int
and
inc
pop
addl
sbb
and
mov
mov
push
pop
nop
mov
inc
jle
jae
addb
push
orb
add
rol
cmp
out
sub
xlat
or
pop
xor
and
and
cmp
sbb
shl
mov
imul
add
cmpsl
sbb
fld
mov
add
xchg
dec
xor
hlt
nop
adc
sub
add
les
xchg
leave
ror
in
add
xchg
xor
cmp
add
cmp
xor
inc
sub
out
testl
stos
mov
add
pop
shlb
aaa
mov
mov
adc
cmpsb
and
add
mov
cmp
mov
xor
or
push
lds
ss
insl
add
call
rolb
int
xor
rcll
add
int3
stos
or
sahf
add
imul
pusha
call
dec
lods
add
or
mov
add
adc
cmpb
inc
sub
add
es
jno
lret
push
or
mov
adc
sub
sbb
mov
cmpsb
imul
mov
stos
xor
sbb
sbb
or
mov
cli
sbb
pushf
les
in
and
das
sti
jae
inc
push
xchg
xor
notb
pusha
lret
movb
push
mov
cltd
xor
xor
fs
add
sub
lods
and
sbb
or
mov
cmpb
pop
xor
insb
xchg
or
out
frstor
xchg
xchg
pusha
sbb
retw
mov
clc
lret
sub
decl
or
es
jmp
jl
movsl
shr
shlb
add
std
pop
rcrl
pop
mov
das
loop
cmp
add
out
push
cwtl
jle
add
insb
in
or
pop
mov
subb
movsb
ficoml
or
lret
hlt
int3
dec
and
int3
popf
mov
cmpsl
push
and
pushf
xchg
xchg
pop
dec
enter
nop
clc
inc
sbb
mov
sbb
or
aaa
jg
cmpsl
xchg
sub
lock
les
sti
stos
cmp
dec
push
mov
cmp
mov
mov
mov
stos
add
cmp
mov
xlat
add
ja
adc
jl
sub
int3
lods
inc
jbe
push
or
sub
stc
or
out
xchg
sbb
xchg
mov
add
xchg
add
push
std
inc
xchg
adc
add
inc
popa
leave
add
mov
pop
aas
rolb
orb
fbld
sub
adc
mov
pop
mov
lods
adc
repnz
test
mov
js
or
rorb
js
mov
jo
andb
cwtl
cmp
test
push
aaa
in
lret
and
and
das
sbb
mov
mov
daa
inc
adcb
loop
loop
sbb
test
sub
xor
popa
inc
push
xchg
add
int3
sahf
flds
add
jmp
lahf
daa
inc
cmp
int3
adcb
push
int3
bound
enter
je
xor
jne
addb
aaa
clc
mov
pushf
fcoms
test
mov
mov
out
movaps
cmpl
sbb
mov
movsb
add
push
out
mov
add
sub
je
out
loopne
mov
cmp
add
xlat
hlt
cwtl
xchg
or
pop
cld
sub
popa
sub
add
pop
rolb
mov
icebp
dec
pusha
adc
mov
jns,pt
dec
add
js
add
inc
and
fst
push
dec
add
in
add
fldcw
jmp
mov
dec
out
cs
mov
andb
xor
add
push
xor
push
jmp
xchg
sbb
enter
testb
fs
or
shll
cmp
int3
test
or
pop
add
out
fadds
inc
inc
adc
movb
call
repnz
orl
adc
cmp
repz
mov
inc
subl
xor
jo
add
and
mov
shlb
call
xor
mov
adc
push
sbb
cwtl
inc
add
adc
lcall
pop
mov
in
shr
jae
test
shlb
pop
mov
in
and
add
mov
sbb
and
shll
and
imul
mov
cltd
or
outsb
xchg
cmp
mov
mov
sub
test
mov
and
stos
lods
add
shrl
add
in
xor
adc
adc
fs
pop
inc
and
cli
pop
andb
inc
int
les
xor
repnz
sub
xor
add
inc
cmp
mov
std
leave
lret
in
fisubl
enter
cmp
scas
xchg
and
ret
add
add
sti
jae
out
roll
out
addl
lods
and
movsb
pop
es
push
xchg
add
inc
jns
addr16
adc
inc
movsb
aaa
mov
popf
cmpb
pop
shlb
push
lds
in
or
outsb
xchg
push
lret
scas
pushf
pop
fstl
test
mov
andb
rcr
inc
push
inc
sbbb
pop
cli
daa
loopne
lock
mov
dec
or
iret
adc
sbb
fwait
xchg
push
adcb
addr16
jbe
add
leave
adc
cmpsb
cwtl
inc
sub
mov
leave
in
test
subl
pop
es
or
add
mov
testb
mov
mov
cmpsl
inc
shll
loope
out
icebp
sub
xor
mov
and
or
xor
jo
sub
adcl
jmp
icebp
and
add
bound
inc
dec
or
outsl
pop
jnp
and
fmul
movsl
loop
add
mov
xor
or
rol
cmp
add
cmc
je
test
inc
mov
lcall
add
xor
enter
jg
mov
cwtl
adc
adc
add
mov
mov
pop
xchg
xor
cli
sub
add
pop
jecxz
pop
je
pop
andb
cmpsb
mov
mov
inc
sti
pop
xor
or
fdivr
xor
mov
rolb
push
ja
mov
xor
pop
in
dec
fcomps
cmp
sbb
lods
mov
add
loope
xorb
xor
insb
push
add
mov
pop
lea
sbbl
fildll
rorb
daa
sbb
andl
dec
jge
arpl
jmp
jg
jae
push
adc
pop
ja
lock
ss
out
push
pop
lret
cli
inc
xor
daa
bound
orb
jmp
shlb
push
push
les
dec
fisttpll
cwtl
neg
or
int3
xor
jge
add
inc
xor
out
pop
add
jbe
jge
add
xadd
imul
cmp
pop
pop
xchg
fdivr
jns
lock
add
or
dec
push
push
into
icebp
jp
add
xor
mov
jno
pusha
cmp
mov
inc
insb
pop
mov
lds
xchg
and
inc
adc
sbb
xor
jl
mov
mov
or
and
lret
push
xor
push
jge
enter
pop
mov
jbe
xchg
inc
pushf
or
add
mov
jnp
fists
int
leave
add
xchg
xorb
rolb
push
pop
sbb
add
jno
jb
pop
mov
inc
xchg
das
aas
add
dec
xor
push
call
jecxz
in
dec
pop
jl
cmp
subb
push
xchg
xor
adc
push
dec
mov
jle
lret
dec
aad
pop
ret
loope
add
mov
mov
test
aas
call
sub
fdivl
sub
inc
adc
inc
push
sbb
imul
and
inc
aas
addl
dec
sarl
push
xor
sub
out
test
stos
jns
jmp
xor
orb
and
adc
adc
xorl
fs
cmpsb
int3
add
pop
add
add
push
les
sbb
mov
mov
nop
popf
xchg
inc
inc
jle
shll
xchg
shlb
daa
or
imul
jg
mov
mov
dec
test
and
out
aam
ds
add
adc
dec
hlt
addr16
and
lock
aaa
rcrl
adc
dec
push
inc
lea
or
out
test
orb
add
or
xlat
popa
sbb
xorb
pop
in
scas
cwtl
adc
and
test
loopne
cwtl
js
pop
inc
fdivp
icebp
cmpsb
sub
pop
dec
inc
int
enter
aaa
outsb
add
mov
ljmp
sub
fcmovb
add
dec
ficomps
mov
and
push
dec
test
and
sub
jge
mov
and
cli
xchg
xor
fs
adcl
push
adc
lcall
cli
add
push
sbb
int3
clc
cmp
inc
jg
roll
popf
dec
sahf
sbb
inc
add
int
stos
shl
sbb
add
addr16
movsl
xor
loope
mov
aas
add
mov
xchg
aad
call
das
aam
ss
adc
dec
lcall
les
inc
sub
dec
sub
push
fstps
rolb
pusha
fdivrl
sti
inc
pop
sbb
sub
pop
and
inc
dec
in
mov
idiv
add
adc
sub
pop
call
dec
mov
sbb
and
pop
jmp
adc
cmp
negl
jp
cmp
ja
push
jns
mov
xor
mov
and
sbb
xor
jns
pop
stc
js
and
pop
movsl
nop
or
and
lea
pop
fcomi
xlat
enter
sub
mov
repnz
jno
mov
fld
add
cmpb
sbb
ds
jne
jb
out
std
rclb
out
or
js
dec
mov
ret
push
inc
int3
popf
test
test
mov
cmc
loope
xchg
in
mov
orb
cmp
out
xchg
dec
fsubs
pop
xor
lock
add
push
inc
xchg
dec
fcmovnb
imul
add
hlt
mov
pop
and
fadds
sahf
and
inc
and
cmp
inc
movl
enter
rcr
jnp
xor
ja
inc
popa
xchg
adcb
xor
popa
ret
inc
aam
lock
subb
mov
mov
cmp
pop
add
fdivs
pop
push
nop
pop
push
daa
push
into
add
adc
dec
dec
ds
push
push
je
andb
lret
leave
cld
mov
fadds
ficomps
into
xor
lea
lds
cli
adcl
test
dec
lcall
and
and
adc
inc
jae
and
inc
jno
mov
sahf
add
stc
jb
rclb
sub
xor
sub
xchg
sub
inc
loopne
xlat
dec
push
pushf
out
push
rcrl
xor
hlt
inc
cltd
and
mov
or
je
xchg
orb
mov
cld
inc
xor
cli
mov
jg
mov
pop
push
push
xlat
adc
test
pop
or
or
sub
mov
lock
int3
hlt
mov
es
or
jge
hlt
push
inc
popf
sub
cmpsb
mov
rorl
lret
aas
sbbb
dec
xlat
andl
mov
mov
inc
rorb
je
movsb
and
sbb
or
and
and
push
mov
jl
mov
in
inc
incl
dec
push
cmp
push
jb
test
add
icebp
hlt
ljmp
test
stos
stos
jle
mov
push
sub
mov
add
pop
idiv
stc
lret
mov
xchg
hlt
or
bound
mov
lods
test
pusha
xor
insb
and
jmp
add
mov
or
xor
in
adc
xor
add
sub
mov
insb
adc
push
stos
mov
pop
xor
cmp
in
xor
sub
or
scas
ljmp
cmp
mov
jecxz
pop
add
call
dec
adc
add
ds
push
addl
pop
add
out
dec
xor
pusha
imul
sub
out
cmpsb
xor
lret
mov
mov
enter
movsl
lret
sarb
sbb
int3
xor
and
push
inc
sub
mov
mov
mov
mov
dec
dec
loope
pop
gs
mov
or
in
cmp
and
mov
out
fadd
jecxz
mov
sub
add
movsl
test
rclb
aaa
aam
push
add
fwait
push
add
push
sbb
jl
add
lds
enter
or
dec
xor
mov
add
in
push
cmp
es
andb
pusha
pop
cmpb
iret
adc
add
lret
add
jns
bound
mov
sbb
cmpb
push
pop
enter
fildll
pop
scas
js
test
inc
adc
arpl
sahf
jno
push
dec
adc
pop
xlat
push
or
xor
mov
lods
popf
setp
pop
cmp
mov
pushf
mov
rcll
insb
add
lea
movsb
insb
call
adc
daa
stos
xchg
add
add
and
dec
pushf
lahf
enter
adc
add
les
lret
nop
fwait
xor
jne
fidivrl
push
pop
pop
movsb
push
xchg
subb
push
test
imul
dec
or
pop
packsswb
push
mov
inc
cmp
push
add
lods
or
pop
jmp
leave
push
jmp
inc
mov
and
mov
xchg
add
cltd
inc
js
push
xchg
out
sub
mov
or
inc
mov
lods
lret
mov
cmp
lds
call
jle
xlat
lock
pop
in
popa
and
subl
and
or
push
fcoms
pusha
cmp
pop
sub
inc
push
lret
sbb
dec
cld
sbb
mov
cmp
or
cli
shlb
push
mov
movsl
pop
rcr
mov
into
mov
mov
stos
ljmp
dec
pop
sbb
mov
fxch
dec
ja
add
roll
std
cmc
test
out
repz
enter
dec
mov
add
imul
push
call
push
cld
popa
add
adc
pop
fbld
mov
mov
mov
sbbl
out
add
push
mov
push
cmpb
push
fnsetpm(287
mov
aas
sarb
sbb
inc
add
mov
jle
jns
jle
add
and
inc
push
les
shll
shll
add
or
aam
clc
add
test
add
ficoml
sbb
roll
arpl
mov
lcall
enter
or
stos
push
jmp
cmc
ret
add
mov
sub
xchg
sub
fwait
shlb
ficoms
jmp
xor
add
jnp
cmp
dec
btc
mov
xchg
int3
pop
aad
dec
cmp
xchg
int3
aas
jno
popa
cmc
pop
stos
iret
mov
sbb
push
inc
lods
push
adc
test
add
jbe
cmp
stos
add
push
xchg
xor
jns
adc
cwtl
add
sub
mov
add
pop
dec
fbstp
lock
mov
jo
pop
push
adcl
add
out
sar
jge
or
pop
sub
movsl
and
xor
daa
es
inc
movsb
and
push
cli
add
cltd
sub
int3
mov
shrb
jb
add
push
adc
or
addr16
sarb
add
mov
lds
ljmp
jp
pop
jns
cmp
loope
add
inc
pop
test
lcall
and
shrb
xor
addb
jo
ja
lds
add
icebp
lea
xorb
add
and
arpl
push
sub
push
ljmp
iret
inc
test
cmp
mov
jl
fdivl
pop
iret
pusha
cmc
adc
jne
fcomp
add
inc
cmp
cmpb
and
clc
mov
mov
movsb
add
push
into
shrl
clc
sbb
pop
mov
add
jo
add
xchg
jne
add
aad
cmpsl
imul
pop
and
cmp
int3
xor
jge
pop
rcll
or
add
test
in
imul
stos
mov
js
pop
xchg
adcb
dec
sbb
xlat
jno
dec
mov
adc
pop
dec
add
mov
roll
movsl
outsb
fstps
add
je
movsb
int3
sub
add
fistps
data16
imul
adc
shl
es
add
daa
or
icebp
inc
call
or
fstl
repnz
mov
add
push
jo
pushf
popa
jne
push
mov
mov
rorl
push
popf
jns
pop
cmpb
sbb
xchg
fwait
cmpsl
mov
and
shl
dec
mov
adc
inc
subb
stc
fldl
lods
movsl
dec
jns
mov
outsb
jl
and
xchg
mov
push
xchg
int3
cmpsl
es
and
jge
cmpl
bound
inc
or
aad
ret
dec
sbb
or
mov
add
out
dec
ds
mov
mov
popa
and
decb
cmp
jp
cmp
pop
xlat
lea
bound
movsb
inc
fldl
inc
push
popa
add
push
rclb
add
inc
jp
mov
ficompl
cwtl
aam
adc
add
xchg
push
pop
loop
and
add
out
cs
pop
add
sti
mov
mov
sub
fistps
loopne
add
xchg
sbb
mov
fisttps
leave
cs
pop
int3
aam
and
push
xchg
dec
fisttps
mov
shrl
cmpsb
mov
xchg
pop
mov
add
or
mov
rcrl
add
loop,pn
jg
or
cmp
stos
cmp
rolb
imul
mov
sub
cmc
cmp
fcoms
and
and
test
xlat
je
push
jp
scas
fiadds
out
popa
stos
mov
sub
movsl
mov
mov
lds
push
popa
adc
test
push
dec
add
sarb
pop
int
andb
inc
inc
mov
sub
cs
or
es
and
es
scas
add
sbb
ret
lret
jns
add
jnp
jp
pusha
and
or
stos
or
movsb
in
aas
sbb
xchg
lea
and
pop
les
push
or
push
cmp
nop
dec
nop
and
pop
dec
pusha
push
or
xchg
cmpsb
enter
sbb
and
cmp
je
aaa
cli
push
push
push
dec
mov
push
push
pop
loopne
in
jp
pusha
dec
mov
add
adc
add
xchg
dec
xchg
sub
loope
add
test
xor
push
pop
adc
mov
mov
call
xor
out
and
int3
pop
add
jne
pop
sub
mov
cmc
add
je
push
sub
aam
add
popf
arpl
fnstenv
test
pop
das
mov
xor
hlt
lret
nop
pop
nop
cmp
xlat
xchg
xchg
loop
mov
add
mov
insl
filds
dec
xchg
and
popa
push
bound
ljmp
adc
mov
push
pop
pop
out
fadds
test
pop
mov
lcall
test
das
adc
xchg
xchg
adc
adc
imul
adc
out
mov
rolb
xchg
lds
xor
add
cmpsl
loopne
aad
sahf
add
xchg
test
mov
add
pop
fimuls
pop
sbb
add
js
popf
cmp
popf
adc
push
rorl
mov
inc
add
addr16
test
inc
mov
testl
or
push
lock
ret
sbb
add
aam
dec
mov
sbb
lods
add
movsl
subb
addl
sbb
frstor
in
mov
adc
xchg
cli
cmp
sarb
pop
add
stos
lret
lods
push
fsub
push
add
mov
cmp
push
lods
jbe
inc
mov
add
dec
and
xchg
sbb
inc
shl
ret
pusha
fnstsw
jne
cmp
movsb
or
adc
adcl
pusha
mov
rolb
xorb
jne
filds
inc
lods
xor
aad
mov
jnp
into
je
jo
and
call
or
cmp
pop
aas
add
push
lock
pop
cltd
xor
add
or
aad
lock
mov
fcoms
push
push
add
mov
dec
push
pop
dec
xor
jecxz
repnz
add
push
imul
rolb
adc
push
popa
push
jne
addr16
jb
mov
ljmp
loopne
add
sub
fstps
add
call
pop
fldcw
sub
aam
ret
sbb
lcall
and
dec
loopne
orb
mov
xchg
inc
js
add
sti
aam
xorl
push
fs
pusha
jle
push
add
jae
test
data16
push
cmp
mov
enter
rclb
subb
ret
ret
pushf
pusha
pop
test
add
cmpsl
and
jno
xchg
or
rolb
inc
in
fstl
push
test
add
fiaddl
test
mov
jmp
nop
fadds
jg
pop
popa
pop
jle
popl
or
nop
xor
xor
in
add
jle
push
roll
cmpsl
maxps
pop
dec
stos
lret
add
movsl
or
push
pop
pmuludq
mov
push
outsb
repnz
lods
xchg
or
sub
adc
pop
sbb
push
int
and
and
xchg
add
sti
mov
pand
ja
and
mov
mov
sub
hlt
add
je
es
shr
lret
enter
mov
and
push
jno
add
ret
loopne
jecxz
rcr
push
sbb
add
leave
sbb
xor
out
xchg
inc
adc
mov
das
daa
add
pop
mov
or
add
sbb
adc
mov
out
aam
or
adc
adc
jo
adc
inc
or
pushf
sbb
sbb
sti
or
inc
test
subl
and
and
push
in
push
add
inc
push
rorl
pop
adc
mov
add
scas
jne
lea
icebp
adc
mov
mov
xchg
add
outsl
scas
jae
leave
call
imul
loopne
mov
jmp
xor
pusha
add
cmp
shrl
push
inc
jecxz
sbb
add
jnp
test
add
and
xchg
movb
jno
add
shll
adc
push
adc
sbb
jmp
lock
stos
xchg
mov
mov
sub
adc
xchg
cmp
hlt
cltd
sub
adc
mov
adcb
or
xchg
cmp
jbe
mov
stos
push
loopne
cmpl
xorb
cmp
movsb
xor
test
cmp
test
xchg
loop
sbb
pop
mov
cmp
or
enter
add
ffree
pop
jle
sbbb
dec
lahf
stos
sbb
and
fisubs
mov
adc
call
rorl
push
pushf
mov
dec
adc
xchg
test
mov
add
fs
fwait
xor
jp
test
or
faddl
lcall
mov
xchg
push
jo
xchg
or
into
add
pop
xor
test
test
cwtl
fwait
pop
add
cwtl
push
faddl
lcall
iret
sub
pushf
dec
lock
add
leave
push
negb
repnz
adc
dec
pop
or
popa
add
mov
pop
xchg
jg
mov
movsb
lods
dec
aas
insb
xor
jp
xor
pop
xchg
cmp
jl
clc
imul
jmp
pusha
shl
xchg
add
xorb
popa
imul
xor
add
dec
imulb
mov
or
mov
rcll
xchg
mov
push
sbb
jge
add
fcomps
test
ret
fiadds
push
and
inc
push
and
fidivl
mov
test
adc
adc
xlat
repz
or
sub
mov
jg
pop
xor
dec
enter
adc
add
jge
scas
xlat
lret
nop
xor
test
push
jp
mov
fcoms
add
xchg
sbb
incb
das
cli
sub
out
pop
push
hlt
push
lahf
add
xchg
dec
pushf
aas
pop
je
lock
testl
nop
jns
in
push
pop
insl
pusha
and
fdivrp
xchg
sbb
jle
push
mov
adc
inc
adc
cld
add
mov
pop
roll
push
inc
out
adc
add
ret
loope
mov
cmp
imul
mov
mov
or
popf
push
push
sbb
lods
sub
out
pop
sbb
or
bound
add
or
inc
rolb
sub
xor
mov
jnp
dec
cltd
add
out
pop
loop
popf
jge
add
fmul
fcmovnu
js
out
add
addl
addl
push
mov
enter
mov
int3
mov
xchg
popa
jo
push
ret
add
adc
push
xchg
sbb
lock
inc
mov
es
scas
cmp
xor
push
adc
loope
popf
adcl
adc
push
jp
add
push
xchg
or
or
pushf
push
add
lcall
push
inc
ficoml
out
in
mov
fistps
das
cmp
pop
clc
fcoms
add
in
sbb
mov
sbb
loop
pop
addr16
adc
jbe
mov
outsb
shr
add
rcll
xchg
loopne
push
rorb
sub
dec
fadds
incl
dec
mov
aad
enter
add
loope
push
xor
loopne
mov
sbb
outsl
lods
push
push
dec
or
sbb
pop
adc
add
lods
inc
lods
loopne
popa
add
push
out
and
sbb
in
sbb
hlt
adcb
pop
jge
call
add
iret
scas
sbb
dec
lret
out
add
adc
jp
and
outsl
pusha
push
xchg
aam
add
sbb
dec
mov
pop
adc
sub
mov
cwtl
hlt
and
push
inc
addb
or
in
sbb
add
pop
out
add
dec
pop
xchg
push
std
jae
mov
movsl
popf
test
adc
loopne
pushf
xchg
pushf
pop
xor
aaa
out
adc
push
xlat
popa
add
dec
movsl
push
xchg
out
stos
or
adc
sub
add
adc
out
adc
inc
push
add
push
pop
xchg
sbb
xchg
and
or
sbb
imul
lahf
xchg
adc
mov
pop
dec
fistpll
pop
stos
incb
jne
dec
cwtl
insl
xchg
ljmp
adc
xor
mov
outsb
insl
aaa
mov
loop
mov
xchg
fisubl
out
stos
popa
or
add
movsb
push
adc
xor
and
in
sub
out
adc
add
in
lock
jbe
dec
add
inc
push
inc
bnd
jmp
jmp
out
loop
sub
pop
cmp
mov
dec
sti
add
push
in
xchg
dec
test
adc
cmp
pushf
scas
stc
mov
js
mov
adc
in
pop
sbb
jns
sbb
push
cwtl
nop
nop/reserved
in
pop
jge
mov
or
push
push
aad
add
pop
mov
sbb
movsl
push
adc
pop
repz
mov
fwait
or
add
in
inc
adc
sub
jnp
and
inc
fmull
mov
int
insl
push
add
in
repz
add
push
jmp
add
mov
add
out
js
xor
mov
pop
dec
test
push
mov
fiaddl
pop
lods
xor
add
mov
movsb
scas
hlt
adc
add
and
fcomps
xchg
dec
mov
xlat
mulb
sub
push
xor
dec
add
jno,pt
sbb
jle
jae
rorb
mov
inc
psubusb
pop
cs
mov
adc
inc
and
daa
jbe
add
xchg
mov
je
adc
scas
add
sbb
rol
pop
fsubl
movsb
or
pop
rcl
pop
in
insl
sbb
sbb
add
mov
outsb
add
adc
mov
lret
or
aam
cmpsl
dec
and
mov
insb
in
ds
movsb
xlat
mov
pop
test
addl
lcall
jl
adc
pop
lcall
pop
sub
stos
subb
mov
and
add
imul
add
jecxz
sbb
xor
push
orl
or
stc
aas
das
mov
test
rcrb
pushf
pop
mov
movaps
add
mov
dec
adc
jae
cmc
adc
cld
add
insb
in
xor
dec
ds
xchg
aam
jmp
adc
mov
lret
cmp
loope
inc
loopne
cli
arpl
sub
push
push
test
add
int
in
add
and
notl
cwtl
sbbb
pop
es
jmp
push
mov
adc
cmp
jnp
cwtl
js
ret
in
pop
mov
mov
adcb
mov
add
mov
aam
insl
add
jbe,pn
cld
jno
add
movsl
inc
and
cmp
and
push
pop
mov
into
push
and
mov
fistl
mov
cmpsl
nop
dec
cld
test
in
and
push
xchg
push
adc
dec
cltd
adc
sbb
fistps
in
dec
or
mov
mov
mov
add
jnp
ja
rolb
and
pop
cmp
add
and
cli
scas
sbb
cmp
add
adc
cmpl
push
xor
push
dec
gs
mov
sbb
mov
mov
mov
mov
inc
faddp
dec
xchg
cmp
xchg
aaa
pusha
add
mov
and
fwait
call
test
and
mov
ret
inc
or
mov
inc
rcrb
imul
push
into
jns
mov
mov
dec
mov
addr16
or
jle
add
adc
push
xor
repz
and
out
je
dec
dec
jl
mov
fstpl
add
adc
mov
imul
xorb
out
movsb
adc
mov
les
add
add
je
out
loopne
sub
movsb
andb
ja
xor
push
add
mov
add
jp
jns
lcall
movsl
and
push
es
mov
loop
icebp
push
hlt
js
iret
aad
and
dec
fdiv
mov
or
add
int
xor
mov
cmp
int3
pop
jns
cmpsb
mov
out
pop
outsb
enter
and
mov
dec
pop
adc
and
sbb
repnz
mov
add
add
pop
sbb
test
nop
loope
adc
inc
pusha
jecxz
into
cmpsb
pop
std
add
popa
scas
pop
fsubrs
outsl
add
pop
xchg
push
or
pop
cmc
loopne
push
adc
xchg
xor
pop
and
fcomp
jge
mov
adc
adc
loopne
push
add
addl
push
sub
outsl
aam
pusha
popa
into
lods
loopne
mov
ret
aam
in
mov
js
insb
int
data16
mov
mov
add
mov
fisttpl
rolb
mov
loopne
fsubs
pop
pop
pop
xchg
rolb
sbb
mov
dec
inc
mov
adc
sbb
cwtl
jg
pop
cmp
sarb
mov
outsl
sbb
ret
fdivrs
jae
dec
mov
sub
and
sbb
test
cs
fidivrl
mov
out
xor
cmpb
rcrb
and
sarl
pop
or
mov
mov
loop
mov
cmpsl
sub
in
ljmp
addr16
add
mov
add
outsb
mov
sbb
or
addb
cld
or
push
pusha
ja
xor
pop
mov
pop
shlb
sarl
ffree
push
mov
rolb
fadd
mov
adc
adc
cmp
sub
imul
mov
and
das
xor
pop
xchg
dec
aas
shlb
mov
hlt
adc
and
in
loop
enter
push
adc
aam
mov
test
mov
adc
push
sti
push
mov
jno
add
inc
cmc
or
jnp
add
xor
xor
pop
xchg
mov
sbb
adc
stc
fldt
add
mov
sub
sub
add
xchg
out
scas
nop
xlat
add
test
push
add
push
jge
sarl
hlt
loopne
cli
xchg
push
dec
daa
dec
xchg
sbbb
xor
leave
arpl
insl
aam
addb
jbe
inc
fcomp
cmp
add
jb
loopne
lods
mov
add
push
icebp
mov
popa
cmp
and
adc
test
push
fadds
and
js
outsl
pop
xor
inc
in
inc
adc
mov
sahf
das
out
in
ret
faddl
pop
in
dec
pop
sub
ja
add
into
ljmp
mov
addb
adc
daa
lds
sub
test
lret
xchg
push
dec
add
xor
cmp
push
ja
xlat
mov
or
push
icebp
mov
add
lock
cmp
push
loope
push
push
xchg
enter
cmp
clc
mov
cltd
sub
addb
fdivl
dec
jno
add
push
cmp
add
push
mov
or
sub
and
in
and
rorl
and
loop
mov
push
orb
es
out
daa
dec
leave
sbb
xchg
dec
or
mov
fcomps
rolb
jnp
sbb
rclb
pop
into
push
add
mov
loopne
cli
lock
xor
lret
xor
jnp
mov
js
repnz
inc
add
mov
in
data16
xchg
in
fwait
or
aad
je
pop
mov
pop
and
mov
in
stos
pusha
mov
insl
sub
push
in
sbb
rolb
xchg
adc
sarl
xor
enter
xchg
loopne
lds
push
fsubr
mov
nop
data16
or
ret
add
fcmovnb
lock
cvtpi2ps
fs
sarl
jb
dec
nop
xor
jns
stc
mov
pushf
jl
nop
and
pop
out
loop
stos
cwtl
adc
nop
add
fdivs
fistl
pusha
out
mov
daa
dec
xor
or
fwait
xchg
xorb
sub
movsb
jae
mov
test
leave
enter
cld
lcall
jbe
push
pop
adc
add
and
add
dec
push
lock
mov
sub
inc
cwtl
inc
addr16
xor
add
aad
mov
push
mov
pop
andb
pop
add
scas
inc
outsb
jge
mov
xor
nop
dec
in
push
mov
mov
repnz
js
mov
mov
daa
les
add
add
add
push
test
sub
add
ret
dec
pop
fs
lock
clc
jmp
mov
sbb
dec
das
cltd
out
inc
in
popa
push
xchg
add
arpl
cmpb
push
sub
adc
mov
and
add
cmp
and
rolb
inc
ss
mov
pop
inc
popl
jge
loope
push
xor
cmp
imul
je
das
xchg
add
pop
mov
std
add
iret
jmp
and
jnp
lods
or
aaa
es
xor
push
clc
add
dec
add
sbb
mov
mov
loope
enter
cmpb
cmpsl
popa
ja
mov
fidivs
mov
add
addb
call
jl
xchg
loop
fwait
stc
je
sbb
pop
pop
and
cmp
pop
aam
cmpsb
lret
rorl
or
icebp
dec
push
pusha
out
call
inc
xchg
pop
and
pop
pmullw
pusha
enter
stos
add
call
sub
adc
popf
jns
enter
pop
fwait
cmc
test
inc
repz
cmp
add
pusha
pop
inc
icebp
mov
cs
sti
and
xor
lcall
xor
add
ror
lcall
mov
int
in
add
nop
inc
clc
cs
pop
xor
add
lret
inc
and
adcl
mov
xchg
mov
mov
fistpll
cmc
sub
and
add
pop
jle
cmpsb
mov
jb
cmp
mov
pop
add
jbe
sti
push
mov
cld
loopne
xchg
lods
ja
xchg
cli
loop
in
ljmp
pop
or
sub
pushf
fbstp
sbb
pop
or
je
pushf
sbb
je
sbb
push
dec
insb
loop
add
out
pop
cmp
mov
mov
mov
in
mov
mov
add
fadd
adc
sarl
mov
sbb
add
inc
mov
xlat
orb
push
dec
loope
mov
inc
lcall
adc
cmp
add
inc
fnstsw
add
pop
push
sbbl
js
xor
gs
sub
pusha
shlb
xor
xor
jecxz
fadd
in
cmp
pop
xor
jnp
lfs
pop
cmpb
add
and
lods
sbb
insl
fs
push
and
add
in
adc
push
add
and
sub
dec
mov
mov
cmpsb
mov
push
push
test
pop
nop
out
inc
shlb
insl
sbb
and
pop
imul
fwait
cmp
pop
ror
push
push
ficompl
cld
lret
fsub
dec
xchg
add
adc
pop
cwtl
pop
jno
dec
add
push
fcomp
mov
in
adc
pop
int
adc
push
ss
iret
pavgb
adc
mov
clc
nop
sarl
adc
out
pop
push
push
mov
fidivs
push
mov
loope
loopne
in
repz
xorb
fisubl
adc
mov
pop
push
pusha
cli
or
rol
jbe
xchg
repnz
test
push
loopne
sbb
xchg
in
dec
xor
add
sahf
ret
les
in
cwtl
lret
cwtl
int3
push
nop
insb
pop
scas
subb
loopne
add
ss
insl
jns
add
jmp
imul
xchg
jae
dec
sbb
dec
add
adc
inc
das
pop
lock
loopne
adc
adc
int
xchg
sar
jo
sbb
jl
incl
in
pop
adc
subl
icebp
scas
out
push
jg
add
mov
add
pop
pop
inc
inc
mov
fbld
add
jp
xchg
add
add
jg
cmp
notl
add
xchg
cmp
or
setnp
mov
leave
xchg
daa
clc
push
inc
addb
jl
in
xchg
mov
insb
push
rolb
pop
call
push
mov
imul
push
xchg
inc
call
daa
shll
in
dec
mov
fsubs
insl
pop
jmp
aaa
pop
adc
ret
add
adc
pop
mov
in
pop
fiaddl
idivb
aad
inc
mov
hlt
mov
add
adc
icebp
mov
cwtl
jge
adc
out
enter
popf
jne
iret
xchg
inc
dec
mov
and
dec
inc
cmp
add
adc
fdivrl
mov
dec
or
loop
test
sbb
add
xchg
jle
jecxz
add
inc
mov
test
loope
push
repz
xlat
call
jnp
sbb
mov
adc
add
push
push
inc
xor
out
fcoms
or
sub
add
in
and
dec
xor
inc
ret
in
push
adc
jbe
nop
jo
and
adcb
xor
adc
pusha
push
testb
pop
dec
inc
or
mov
aas
cmpsb
jl
add
pop
pop
inc
mov
test
lods
or
in
push
mov
fldl
pop
rcrl
repz
dec
js
cmc
adc
sbb
jo
js
add
xor
loopne
js
sbb
mov
mov
outsb
loop
add
or
hlt
or
cmp
mov
add
mov
mov
jl
mov
sub
out
add
xor
fnstenv
add
and
ret
xchg
adc
fsubl
loop
mov
addb
sub
adc
in
mov
das
out
popl
adc
mov
mov
mov
mov
cmpsb
pop
mov
aaa
sbb
add
js
xor
sub
mov
sti
scas
nop
test
and
mov
enter
adc
iret
popf
jl
sbb
inc
mov
mov
daa
mov
lret
push
push
fadds
ret
cwtl
std
add
mov
insl
ljmp
sbb
stos
adc
jns
add
xchg
sahf
in
and
pop
push
add
rcrb
push
fldl
lcall
clc
add
mov
ss
inc
dec
imulb
xchg
jmp
fsubl
mov
fdivr
mov
subl
or
loopne
and
pop
popa
mov
add
xchg
mov
in
movsb
sub
into
jo
and
sub
mov
dec
mov
xor
cmp
inc
xor
rolb
cmp
insb
sub
add
test
rorb
out
repnz
inc
fiaddl
hlt
je
dec
push
jbe
lahf
aas
jecxz
sub
mov
outsl
hlt
jne
notb
dec
lret
outsb
inc
xor
mov
insb
adc
add
lds
push
sbb
sub
push
mov
add
xor
daa
adc
outsb
je
and
or
push
adc
inc
push
adc
lret
jl
out
mov
test
jo
xor
aam
gs
dec
push
jno
je
jp
cmp
sbb
sub
mov
mov
mov
adc
fstps
negl
xchg
loopne
add
into
jnp
ret
lods
loopne
dec
or
mov
ficompl
adc
repnz
shlb
div
dec
loop
std
or
adc
pop
jne
push
mov
lock
cmpsb
add
out
adc
sarl
fmulp
pop
sub
dec
loopne
bsr
xchg
add
add
sbb
js
sbbb
push
imul
and
data16
movsb
adc
adc
add
jo
ja
rcl
imul
inc
das
xlat
fwait
add
dec
ficompl
jo
loope
dec
lock
es
scas
lret
jo
cmpsl
nop
dec
jecxz
add
xor
in
dec
pop
push
lahf
imulb
sbbl
scas
mov
jle
inc
aam
xor
sbb
sbbb
push
add
stc
pop
inc
mov
sbb
lea
aaa
bswap
jb
ret
hlt
mov
adc
js
push
sbb
leave
test
fwait
push
pop
cmc
scas
add
cmpsl
dec
mov
push
mov
arpl
pavgw
es
xor
inc
scas
sbb
mov
insb
mov
pop
fdivrs
and
lods
clc
dec
aad
cmpsl
popa
and
push
push
pushf
jbe
add
iret
fisttpll
sbb
sbb
push
out
mov
sahf
push
dec
stos
in
inc
pop
imul
adc
dec
das
cmpsb
sub
cmp
out
add
adc
mov
xchg
pop
push
and
jl
pop
aas
dec
push
fistl
pop
lret
test
add
jno
adcl
push
push
add
insl
dec
add
or
adc
out
test
or
pop
rorl
addr16
add
loop
mov
xor
cmp
fstpl
and
pop
push
push
pop
or
mov
mov
and
or
inc
stos
sub
and
add
xchg
roll
mov
add
mov
mov
cmp
aas
imul
add
sbb
and
mov
pop
adc
or
mov
add
pop
pushf
mov
xlat
mov
shr
pop
add
arpl
icebp
add
dec
mov
add
pop
out
add
nop
fs
push
add
cmp
jo
dec
adc
dec
xlat
sahf
mov
fdivs
out
sbbb
push
aaa
enter
and
out
pop
adc
xor
clc
jl
pop
push
hlt
stos
add
lods
pop
je
sbb
es
fmulp
adc
dec
leave
js
cmp
mov
or
fisubrs
lods
mov
xor
dec
mov
adc
sbb
lret
ret
in
les
imul
sarb
shl
add
xchg
mov
adc
add
push
jge
jo
std
bound
pop
and
mov
lret
adcb
add
mov
rolb
int3
xchg
pop
lret
push
pushf
rorb
push
ficoml
out
push
adc
or
dec
jns
add
sbb
into
push
add
loop
ds
add
push
or
xor
dec
mov
loope
xchg
or
clc
int3
xor
int3
sti
mov
fidivl
icebp
mov
ret
dec
inc
xor
test
fadds
mov
or
xlat
daa
fldenv
lods
push
add
inc
rcrb
and
dec
sub
add
mov
roll
jp
sub
jp
or
testl
lcall
adc
out
jnp
shr
add
mov
push
pop
jecxz
add
rorb
cmc
inc
idivl
hlt
push
xchg
sbb
out
xchg
cmpb
mov
xor
adc
out
shll
mov
scas
push
ja
mov
mov
adc
pop
testb
int
xor
pop
mov
shrb
xchg
adc
add
stc
sbb
mov
fadds
jmp
inc
adc
dec
cld
out
divl
add
aas
push
js
sti
fstpt
pop
sbb
leave
inc
dec
mov
adc
pop
push
mov
add
lea
sbb
dec
lss
test
push
add
mov
sub
sbb
lret
jl
mov
sub
stos
xchg
add
mov
sti
pop
xchg
add
cmp
and
xor
loope
inc
xor
pop
scas
xor
xchg
jl
and
pop
jecxz
mov
or
xchg
adc
pop
inc
push
or
xor
inc
inc
gs
adc
mov
mov
hlt
js
xchg
push
mov
or
cltd
out
in
or
push
pop
and
jne
repz
gs
mov
sub
or
add
ret
xchg
andl
push
add
in
dec
add
insl
pop
nop
mov
nop
push
cs
add
clc
and
pop
mov
dec
enter
xchg
xchg
pop
mov
sarl
cs
sub
adc
clc
push
mov
repz
mov
aam
dec
push
cmp
adc
pop
fadd
and
loopne
cli
mov
lock
lods
jp
cmp
add
mov
push
or
arpl
mov
adcb
add
mov
xor
mov
inc
orl
xchg
mov
or
jecxz
adc
pop
adc
loop
mov
inc
inc
das
dec
mov
dec
stc
aas
mov
add
insl
mov
inc
clc
or
stc
fisubrl
cs
jle
loopne
and
lret
lahf
lock
pop
loope
cwtl
pop
mov
cmp
adc
push
adc
push
push
xor
jb
add
out
dec
iret
xchg
aaa
add
fldt
xor
mov
enter
xchg
lods
push
or
or
add
adcb
cli
xor
sbb
shl
idivb
add
clc
jl
add
in
mov
icebp
lods
adc
xor
idivl
aad
aam
pushf
jnp
add
inc
cmc
pop
dec
mov
pop
and
inc
add
xlat
xchg
pop
sbb
cld
test
rcrl
enter
in
fistpl
fists
mov
mov
sbb
cld
adc
cld
add
ljmp
fs
add
js
lods
add
scas
add
sbb
adc
xchg
mov
cmp
jnp
sub
mov
cmpb
dec
sub
dec
fs
sbb
mov
jns
inc
or
daa
orl
or
jmp
aam
es
mov
lret
push
add
mov
js
push
xchg
or
mov
addb
ret
xor
pop
lods
and
inc
loop
jl
push
push
leave
clc
pop
mov
int3
aam
scas
cmp
adc
aam
rcr
adc
fdiv
aad
pop
push
add
cmpsl
rolb
sbb
cmp
sbb
ja
test
sbb
pop
dec
adc
jbe
loop
mov
cmc
popa
mov
add
ja
mov
sbb
pop
std
repz
xchg
mov
nop
adc
adc
xor
mov
xor
out
sbb
insb
adc
insb
mov
inc
mov
jle
mov
pop
jg
push
add
out
or
insb
mov
jnp,pn
in
pusha
jmp
jg
aas
cld
xor
xchg
subl
or
mov
ret
fsubs
psubw
repz
or
pusha
fs
push
sub
sbb
idivl
daa
rcll
das
in
add
scas
xor
fistps
cld
jns
stc
add
fcompl
push
mov
outsb
inc
sbb
push
in
jmp
jl
shr
test
pop
hlt
or
cli
andl
out
iret
in
add
xlat
lock
fwait
movhps
xchg
and
fldenv
pop
or
andl
mov
sbb
jmp
dec
insl
add
adc
push
push
rcrl
ror
shlb
adcb
shl
fs
add
or
les
das
sub
xchg
add
lock
inc
dec
jp
sbbb
mov
xor
and
js
nop
clc
add
cmc
and
int3
shl
xor
add
mov
movzbl
pop
jg
pop
test
sbb
test
cmp
and
sub
test
daa
aad
movsl
dec
mov
inc
test
lods
sbbb
push
outsb
jp
xorl
pop
stos
mov
pop
and
pop
dec
outsl
and
sub
add
aad
inc
fimull
daa
add
pushf
inc
xchg
jle
or
mov
sbb
test
pop
mov
mov
sub
loope
icebp
cmp
mov
mov
jb
pop
repnz
push
pop
aam
xchg
inc
rolb
loop
adc
xor
inc
mov
movsb
in
mov
inc
jnp
push
mov
mov
sbb
cmp
jo
rorb
jmp
or
xor
pop
adc
mov
mov
adc
insb
add
lret
ret
dec
scas
and
mov
incl
sbb
rol
sbb
and
js
and
call
loopne
call
xchg
pop
pushf
cmp
dec
out
nop
push
je
sub
cmp
adc
outsb
test
orb
mov
in
add
push
xchg
in
js
sbb
ds
mov
xor
call
add
pop
cmc
sar
mov
adc
in
mov
cld
inc
inc
shrl
adcb
or
loopne
stc
cmpsb
insb
daa
and
push
je
sarb
xchg
rolb
pop
test
andl
sub
and
push
loop
xorb
in
add
ud1
sub
stos
jecxz
or
cmpb
psubusb
outsl
mov
cmp
punpcklbw
setg
xchg
lods
loopne
pop
lret
xor
jp
cltd
pop
loop
and
cmpsb
adc
adc
orl
xchg
inc
out
mov
js
test
push
push
loope
pop
test
out
add
fadds
inc
push
or
xor
mov
xchg
mov
mov
add
mov
pop
insl
stos
dec
mov
lock
out
popa
inc
mov
cmp
jbe
mov
js
stc
adc
and
icebp
mov
pushf
adc
mov
fsubs
into
test
adc
pop
lcall
dec
mov
or
hlt
add
iret
rcl
fcomps
mov
cwtl
push
mov
add
jo
fdivrl
and
in
jmp
or
nop
les
push
xchg
inc
enter
ret
test
movsl
inc
in
xchg
rolb
mov
orb
out
loopne
movsb
inc
push
or
jbe
flds
movsl
pushf
loopne
push
cmp
stc
mov
inc
ror
and
add
lret
push
or
mov
pop
push
pop
mov
sarb
js
lretw
xor
pop
pushf
cmp
add
in
xchg
insb
movsb
xchg
notb
sbb
test
xlat
or
icebp
shl
leave
and
add
cmp
mov
pop
pop
pushf
or
or
fdivrs
insb
mov
stos
loopne
or
loope
dec
or
in
lods
das
out
dec
fiaddl
divb
fcom
push
push
and
push
mov
and
pop
sub
in
dec
mov
negb
add
mov
test
dec
fcompl
in
add
jp
ja
mov
mov
mov
pushf
inc
lea
loope
add
ret
pop
int
mov
xchg
ret
sub
sbb
mov
ljmp
outsl
mov
push
rorl
cs
fsubs
mov
jb
dec
push
daa
enter
inc
push
cmpsb
push
das
outsl
es
mov
in
adc
nop
and
xchg
jb
fldenv
jmp
mov
in
sbb
sbb
lods
sbb
adc
mov
and
shrb
inc
xor
popf
clc
mov
fistpll
push
add
or
sbb
cmpsl
clc
cld
jnp
jns
dec
enter
mov
out
push
fldl
loopne
sub
inc
inc
cwtl
add
jo
call
push
outsl
push
in
mov
adc
add
imul
pushf
pop
cwtl
cmp
jae
inc
stos
cmp
in
clc
lods
inc
fwait
jp
das
mov
adc
push
adc
das
and
mov
push
pop
mov
dec
adc
cli
pop
push
inc
sarb
jp
jbe,pn
mov
mov
mov
mov
jecxz
push
fwait
stos
mov
cmpl
push
out
sbb
mov
jl
out
mov
mov
lock
ret
enter
or
aam
cwtl
add
iret
pop
in
out
cmp
loop
imul
dec
push
xchg
sbb
mov
mov
addl
lock
sub
test
mov
add
xor
mov
sbb
add
mov
add
fdivl
cmp
add
movsl
sub
scas
mov
out
out
and
pop
in
add
ss
mov
shll
sti
decb
pop
lods
mov
loop
sbb
inc
repnz
and
addb
mov
cmpl
jp
sbbb
add
mov
or
push
fadds
fisubs
xor
or
hlt
cmp
adc
iret
addb
popf
jp
repz
add
sub
adc
pop
inc
sub
stos
mov
mov
mov
jno
nop
mov
lcall
int
loope
add
adc
fdivrs
jecxz
pusha
adc
or
mov
pusha
mov
fmuls
mov
push
in
mov
pop
sub
fnstcw
lahf
add
ret
push
ds
jle
rorb
or
mov
pop
icebp
sahf
add
test
push
jge
pop
mov
push
loop
cmp
mov
or
xchg
imul
add
xor
and
dec
fldlg2
test
test
sbbb
dec
loopne
cmp
mov
cwtl
in
js
inc
mov
inc
cmp
pop
push
or
sub
add
pcmpeqd
mov
addb
pop
stc
mov
xchg
in
add
pop
jb
cmp
push
mov
adc
push
add
pusha
add
mov
fimull
and
fldl
subl
int3
sbbb
and
lret
sahf
sub
rorb
nop
sahf
in
rorb
sub
testb
and
data16
cwtl
xchg
out
add
sbb
push
dec
cmpsl
pop
add
sbbl
and
adc
lods
loopne
cld
mov
add
aad
adc
and
adc
add
hlt
and
sti
nop
xorb
add
fwait
out
or
push
in
push
loop
adc
mov
push
add
and
push
adc
add
ljmp
jg
pop
test
daa
pop
mov
adc
and
hlt
add
mov
out
pop
adc
jmp
loope
and
sbb
dec
ljmp
dec
sbbb
or
add
cwtl
sar
stos
out
aaa
xorb
pop
fbstp
andb
test
ds
jnp
cmc
loop
mov
rcr
add
xor
dec
popf
in
sbb
adc
sub
push
mov
stos
cltd
int
cmp
mov
cmp
lods
pop
jae
sbb
inc
push
std
jne
mov
xchg
rcrl
shrb
xchg
add
hlt
mov
or
and
xor
enter
ret
popf
mov
xchg
dec
xchg
out
inc
mov
xor
add
mov
xchg
std
je
pop
push
or
dec
ds
cli
loope
pop
aaa
popa
push
scas
rclb
and
in
xlat
adc
cmp
xor
loope
dec
es
outsl
and
lods
test
outsl
iret
faddl
push
xchg
pushf
popf
jnp
aam
xchg
dec
les
add
jp
dec
mov
mov
sub
and
lret
push
lods
lcall
xchg
lods
lock
shrl
insb
dec
aaa
xchg
and
int
sbb
popf
jg
jge
jo
dec
push
or
jo
mov
add
sub
dec
shl
fists
and
ret
hlt
andb
in
jne
mov
jnp
out
push
cmp
lds
dec
lods
aaa
xbegin
sbb
xchg
stos
imul
sbb
xchg
sub
push
or
xor
push
add
xorb
call
xchg
push
in
xlat
push
and
mov
xor
xchg
or
daa
add
rcl
repnz
repz
sub
adc
das
add
icebp
push
repnz
fcom
adcl
int3
mov
dec
mov
pop
imul
scas
ret
cmp
add
js
shl
push
or
sbbl
add
lahf
mov
mov
sbb
mov
fiadds
sub
or
movsl
and
data16
popa
adc
push
xchg
jnp
adc
and
sub
cli
mov
mov
test
xchg
cmp
call
add
inc
dec
divl
icebp
jne
fidivrl
push
gs
movl
xchg
lock
pop
std
and
adc
aas
mov
sbb
das
sub
pop
push
enter
ljmp
mov
arpl
or
mov
out
js
ss
pop
add
adc
push
test
ret
data16
xor
add
out
fdivrl
iret
pop
in
and
add
or
xorl
fcomps
mov
clc
dec
or
cli
movsl
pop
pop
testb
lods
loopne
xchg
pmulhuw
xor
insb
mov
pusha
push
and
xchg
sarl
sbb
lret
add
pop
xchg
push
mov
add
inc
int
in
mov
jg
mov
pop
and
nop
repz
and
mov
sbb
lods
sbb
sahf
adc
mov
inc
nop
imul
test
rolb
add
add
inc
sub
mov
pop
fisttps
mov
inc
jmp
loope
jns
pop
ja
fwait
sbb
rcrb
add
mov
daa
sub
xor
adc
pop
mov
jl
push
mov
mov
pop
and
cmpsl
sub
clc
and
test
push
mov
stos
enter
xchg
sub
and
sti
sub
scas
aas
add
leave
mov
push
pop
test
add
push
shr
dec
mov
mov
ja
fs
andb
push
add
jp
sbb
dec
loope
xorb
mov
imul
jo
mov
mov
pop
out
or
push
push
scas
adc
loopne
adc
ja
rorb
mov
addr16
pop
cmpsl
es
adc
clc
in
push
sbb
add
loopne
cwtl
cmpb
mov
pop
fimuls
cld
pop
add
mov
dec
pop
xor
xor
add
pushf
loop
popa
xchg
ljmp
mov
outsb
pop
loopne
lods
bound
pop
add
xorb
enter
xor
addb
add
adc
inc
repz
jbe
inc
incl
pop
or
pushf
repnz
jno
jmp
jge
mov
cmc
mov
mov
sub
lock
ret
xchg
rorb
movsb
loopne
in
mov
push
stos
and
mov
add
adc
clc
push
js
fnsave
adc
or
rorl
fsubs
xchg
add
xchg
or
enter
cmp
lock
pusha
enter
movsb
add
loopne
adc
jg
pop
das
jns
mov
mov
xor
sub
adc
inc
sub
int
mov
fisttpll
xchg
push
rcrb
mov
sbbb
adc
divb
adc
xchg
jnp
cltd
je
out
idiv
ror
loopne
das
inc
cli
and
xlat
lods
dec
add
dec
test
push
insb
xchg
add
mov
cwtl
out
rorl
rolb
adc
or
enter
mov
inc
add
imul
pop
sub
fisttps
enter
add
hlt
sub
rolb
mov
add
pop
pop
add
fiadds
cmp
iret
cmc
inc
add
pop
jle
jnp
xchg
or
cmp
and
data16
sbb
mov
sbb
js
pop
lock
or
pusha
push
dec
xor
repnz
roll
out
and
cld
fsubl
pushf
mov
pop
scas
add
sbb
mov
clc
ret
or
sbb
lret
loopne
inc
stc
test
aas
adc
pushf
into
call
nop
xchg
addr16
setnp
add
mov
pop
rclb
xchg
jle
add
add
std
in
pushl
filds
mov
push
xchg
cmp
rol
sbbl
out
pop
pop
mov
enter
xchg
inc
mov
popa
jo
push
in
loopne
pop
or
jl
push
mov
xchg
aam
es
mov
adc
mov
push
push
or
pop
inc
add
enter
jo
sbb
addb
fisttpll
cwtl
and
mov
insb
add
cmp
fistpll
cmp
movsb
shlb
loopne
das
xor
loop
pushf
out
sub
add
cmp
sbb
mov
testb
jl
rcll
fiadds
cld
add
push
mov
ret
xchg
mov
mov
aam
in
add
xor
pop
xchg
in
pop
lret
cld
daa
xor
int
add
push
cmp
and
adc
fdivs
mov
stos
mov
push
pusha
sbbl
add
aam
lock
mov
inc
rorb
mov
pop
or
popf
andb
out
jge
lret
movsb
int3
and
scas
mov
push
xchg
mov
cmpsl
or
push
jl
paddsw
arpl
pop
gs
add
cli
pop
shl
pop
xchg
mov
dec
fdivrs
out
les
or
bswap
fidivrs
call
xchg
push
ljmp
repz
outsl
sub
sub
sub
pop
stos
clc
orb
cwtl
and
dec
jle
push
filds
xchg
shll
leave
shlb
lods
lock
xchg
or
mov
add
movsb
and
jl
jl
mov
outsb
add
or
push
sbb
ret
jb
lea
rolb
mov
mov
push
add
pop
ljmp
and
decb
imul
dec
adc
subl
add
jnp
push
add
or
scas
add
jnp
test
mov
pop
sbb
std
fisubl
pop
leave
cmp
addl
sub
pop
adc
pop
push
inc
sbb
xchg
adc
xor
movl
pop
and
cmp
loopne
xor
sub
and
xchg
in
sbb
add
jne
jge
add
icebp
add
test
aam
sbb
dec
loop
test
cmpsl
clc
aas
das
and
mov
btc
adc
inc
add
jecxz
xchg
loopne
faddl
outsb
and
xchg
mov
add
stos
in
mov
and
push
fstps
add
rolb
cltd
out
fwait
cmc
mov
cld
or
add
xor
int
mov
aaa
dec
sbb
test
push
push
cld
mov
sbb
adc
fsubr
ja
aaa
xchg
add
sbb
jne
mov
pop
mov
test
mov
mov
pop
mov
pop
add
out
ss
clc
xorb
xchg
pop
sub
cwtl
xor
fs
cmp
sub
arpl
push
add
lret
lock
add
push
sets
pop
adcl
enter
mov
and
sbb
cmpsb
xor
mov
dec
jne
pop
mov
jp
sub
adc
test
in
les
add
xlat
jnp
jne
fsubs
or
add
je
inc
or
jno
nop
jge
jmp
test
ret
scas
shl
inc
imulb
out
fadd
les
in
shlb
scas
out
flds
data16
sbb
std
dec
inc
xor
out
loop
jno
jg
int
add
ds
xchg
jae
leave
adc
or
inc
dec
mov
inc
movsb
mov
aam
pop
mov
mov
inc
mov
add
xchg
add
mov
sbb
int3
jns
or
adc
mov
mov
mov
xor
dec
daa
clc
testl
in
mov
enter
mov
inc
int3
lock
dec
jge
loop
lock
or
out
mov
int3
test
loope
aas
xchg
jo
movsl
int
rorb
icebp
nop
pop
push
dec
add
aad
xor
adc
xchg
xor
pop
or
add
add
xor
outsl
and
and
mov
or
in
sub
pop
mov
add
int
xchg
repz
add
xlat
mov
pop
pop
pushf
mov
jg
das
inc
popf
push
movsb
sbbb
les
push
add
nop
and
mov
adc
mov
outsb
loopne
mov
sbb
mov
xchg
aam
mov
test
shlb
cld
pop
jnp
call
pop
push
push
cltd
push
fdivrp
shlb
add
xchg
ja
or
rolb
int3
movl
xchg
sbbl
sbb
test
lock
dec
pusha
xchg
mov
dec
mov
xor
pop
add
pop
cld
call
and
mov
mov
nop
sub
mov
xchg
jl
adc
loop
add
mov
insl
pop
jl
or
mov
push
fists
xor
hlt
movsb
xchg
aad
inc
xchg
sarb
add
jecxz
cmp
mov
mov
pop
sbb
push
mov
je
testl
and
stos
mov
sub
divb
andl
pusha
cld
xor
sub
mov
xor
or
jmp
sub
lods
push
scas
stos
add
subl
test
xchg
lcall
or
pop
pop
lret
loopne
sar
popa
cmp
les
push
sbb
fs
loope
cmp
in
rolb
dec
sbb
mov
sub
ret
lock
push
and
inc
loopne
scas
repnz
loopne
xchg
js
or
aaa
add
rcrb
dec
add
enter
xchg
jge
lret
cwtl
pop
notl
fistps
ja
push
push
loopne
ret
in
xor
outsb
and
cmp
bound
andb
and
arpl
add
add
adc
pusha
cmp
jb
adcb
mov
xchg
jp
jecxz
sbbb
aaa
sbb
call
int3
add
cmc
int
in
pop
push
jp
cmp
jp
clc
mov
fidivs
icebp
punpckhbw
push
out
test
mov
fisttpl
shlb
push
es
add
sti
mov
or
add
enter
add
decl
mov
cmp
aaa
cmp
pusha
clc
ret
add
shll
pop
lock
mov
and
adc
and
fst
pop
xor
add
leave
sub
or
push
mov
lret
xor
lcall
jecxz
dec
aaa
and
inc
jle
lock
leave
jg
xchg
icebp
add
repz
add
jae
test
push
mov
mov
lret
mov
sbb
cmp
nop
addr16
mov
cmp
cmp
mov
add
xor
aam
addb
lds
cmpsl
add
inc
leave
lock
sub
mov
push
xor
and
mov
jl
lock
xchg
or
std
dec
mov
pusha
rcrb
push
xor
xchg
sub
fcomps
mov
sub
adc
add
mov
push
cld
push
test
subl
loopne
pusha
jne
xor
mov
mov
xor
in
pusha
out
dec
cs
sbb
bswap
jo
dec
add
pushf
push
int3
scas
das
out
sub
adcb
outsb
fdivr
scas
pop
iret
nop
in
enter
ds
and
xor
mov
ror
ret
cmc
out
rcrl
rol
push
xor
add
sbb
test
pop
lods
cmpsb
icebp
out
mov
jo
mov
pop
cmp
rclb
mov
pop
push
test
int3
push
mov
into
icebp
lods
pop
cmp
fbstp
push
fstpl
pop
shll
aaa
or
iret
dec
xchg
rcrb
int
movsb
insl
cmc
push
addl
dec
sbb
and
test
mov
mov
and
push
in
inc
add
jmp
repnz
jo
out
adc
or
dec
push
inc
fsubr
sub
rcl
insl
aaa
fnsave
int
pop
or
imul
test
cwtl
test
jo
test
arpl
sbb
shlb
lret
add
scas
pop
and
test
cmpsb
dec
mov
ja
push
outsl
rclb
add
dec
pop
frstor
pop
add
sbb
clc
xor
jl
inc
add
addr16
jo
sbb
cmpsl
inc
dec
stos
pop
test
push
mov
mov
xlat
subb
mov
outsb
subb
push
jmp
jne
mov
incl
jecxz
movnti
xchg
cli
xchg
jnp
clc
ljmp
imul
push
add
xor
sahf
push
push
add
mov
cli
or
add
pop
in
jb
das
inc
add
hlt
adc
jns
inc
mov
push
je
cmp
add
lahf
insl
mov
mov
mov
adc
sub
cmp
sub
gs
das
xchg
push
cmc
flds
mov
xor
pop
lret
mov
push
mov
movl
sbb
repz
rclb
pop
popf
add
jno
hlt
push
mov
adc
je
add
stos
cmp
imul
cmp
lea
and
pusha
adc
outsb
movsb
xor
ljmp
inc
adc
pop
insb
lcall
push
cld
sbb
int
fstps
add
mov
inc
push
adc
cmp
sbb
lock
mov
mov
gs
jmp
xchg
stos
push
mov
add
pop
jnp
in
int3
cmpsb
and
mov
and
sbb
mov
aam
add
loopne
push
mov
inc
xchg
add
push
fwait
ss
add
cmc
lods
popf
fcomi
inc
mov
in
mov
add
cli
xor
sbb
xor
push
sbb
sub
pop
sbb
shlb
rcrb
sti
loop
mov
mov
in
popa
scas
pop
call
mov
add
repnz
pop
cmp
sub
cwtl
adc
aas
push
adcb
and
sarb
leave
int3
add
lret
add
cli
imul
add
add
xchg
stc
push
push
in
xlat
fwait
and
lods
add
mov
mov
lock
xor
pop
add
in
mov
push
add
sahf
orb
repz
mov
and
insl
mov
inc
les
pop
stc
adc
add
call
rol
add
js
bound
or
jnp
faddl
shrb
out
ret
outsb
sti
pop
jne
bound
inc
jge
mov
cli
pop
inc
sub
cs
add
cmpsb
outsl
xsavec
rcr
xchg
mov
add
or
nop
or
enter
add
cmp
jmp
inc
cmp
pop
and
xor
iret
out
add
mov
mov
or
int
sahf
enter
add
push
call
add
or
push
sti
mov
add
push
stos
xor
sub
or
inc
mov
add
pop
cmpsl
add
test
cmpsb
out
xchg
out
add
mov
ja
add
adc
jnp
jns
inc
mov
mov
xorb
lock
jbe
fcmove
insl
outsb
roll
adcb
add
push
or
cwtl
jl
pop
adc
in
or
add
ret
sbb
fadd
push
int3
mov
xor
je
jnp
fs
lahf
rolb
add
sub
xor
mov
add
jo
xchg
imul
ljmp
cmp
or
add
arpl
cmp
popa
int3
jno
sub
jmp
pop
cmp
repnz
add
cmp
cmpsb
sar
and
pop
and
pushf
jg
mov
or
aam
jmp
cmpb
push
cmc
daa
sub
xchg
lcall
add
rclb
add
idivl
shrb
or
pop
add
sbb
push
repnz
push
jp
mov
adc
pop
je
jmp
sub
add
pusha
pop
rolb
cli
push
mov
addl
aam
mov
hlt
cs
pop
and
mov
inc
adc
rcr
pop
push
pop
push
icebp
lahf
pop
xor
je
xchg
and
dec
shrl
clc
push
icebp
mov
cmp
js
aas
in
les
inc
test
jmp
leave
and
or
jo
mov
clc
push
cli
add
fld1
xor
jbe
out
add
cmp
sub
jl
pop
fmuls
rcrb
push
mov
cmp
xchg
pusha
fsubr
outsb
rorl
cs
ret
popf
xchg
mov
jp
jl
arpl
mov
sti
lret
and
or
daa
add
cmp
imul
inc
xor
lds
insb
in
add
sbb
add
jo
and
pop
xchg
mov
jae
les
pop
jmp
cmp
mov
ficoml
xor
add
jns
clc
cmp
push
jge
mov
jmp
xchg
lea
pop
mov
add
sarb
push
in
in
inc
mov
add
imul
mov
pop
jl
in
movsb
mov
popa
aas
lcall
pop
add
ss
cmp
jb
jo
das
xor
mov
xor
add
or
outsl
rorl
cltd
stc
sub
sbb
add
aam
pushf
add
push
cbtw
add
lods
pop
sbb
jge
pop
add
fisubrs
and
jno
xlat
notl
sub
data16
add
adc
imull
loopne
nop
loope
and
imul
leave
dec
cmp
pop
clc
cs
xorb
add
jno
ficomps
and
test
xchg
add
cld
lock
push
mov
inc
push
dec
cmpsl
repnz
fisubs
and
mov
lock
jb
call
aaa
cmp
mov
adc
call
jl
dec
arpl
add
pop
xchg
and
xor
xchg
insl
data16
sub
cmpsb
add
jae,pn
shrl
inc
mov
add
adc
sbb
test
lods
roll
rcrl
sub
add
daa
jecxz
call
pop
aaa
ja
jno
pop
jnp
mov
in
cmpsb
aas
mov
xor
add
xor
adc
repz
hlt
adc
xlat
mov
inc
jmp
test
mov
add
aad
unpcklps
movsl
and
jo
push
ja
into
repnz
mov
aad
out
cmp
add
add
fsubrl
insl
mov
sub
sti
cmpsl
dec
cld
hlt
cmpsb
add
lahf
fldl
dec
add
mov
repnz
add
repz
dec
gs
fists
push
rolb
fcomi
xor
and
in
shrl
into
ss
add
cmc
cmpsl
add
cmp
mov
std
sbb
dec
inc
cmpb
or
add
dec
sbbb
jo
faddl
pop
mov
and
sbb
mov
lock
in
or
xchg
jg
nop
mov
sbb
and
add
jg
inc
jle
xorb
add
loope
sbb
movl
mov
xor
les
movl
pop
add
into
shlb
push
mov
pop
sbb
xor
je
mov
repz
push
std
int3
pop
nop
add
xchg
mov
and
push
test
jecxz
xchg
jo
sbb
and
enter
add
xchg
add
clc
cs
jae
lahf
aaa
arpl
cmp
inc
add
js
push
push
push
add
xor
or
ss
lret
pop
add
divb
cmp
movsb
add
adc
add
imul
sbb
int
push
imulb
into
scas
inc
test
xor
or
hlt
in
xchg
pushf
mov
scas
inc
mov
jo
add
and
mov
xchg
jle
mov
sub
into
mov
sub
mov
scas
add
cmp
pop
xchg
or
out
roll
push
nop
jge
dec
sbb
add
clc
cltd
fadds
test
das
jb
out
add
dec
jmp
clc
into
pop
dec
pushf
lock
mov
xor
mov
mov
lret
in
push
dec
scas
cmpsl
dec
mov
loope
sbb
xchg
in
add
andb
add
mov
pop
hlt
xor
mov
add
inc
cmp
sbb
cltd
push
test
orb
addr16
pop
pop
mov
out
and
out
cmp
push
add
mov
ljmp
cmp
add
loopne
mov
mov
pusha
add
aas
orb
fdivl
pusha
adc
movl
out
fistps
and
repz
jb
pop
sub
loope
pusha
loopne
mov
movsl
or
adc
lods
pop
push
xchg
and
pop
outsb
cmp
push
cmp
call
leave
das
insl
bound
lods
fdivrl
push
add
and
sbb
test
in
sbb
fisttpl
jae
jns
cmp
movsl
repz
bound
cltd
pop
lock
push
xor
dec
adc
inc
andl
xor
push
dec
or
loopne
sarb
xchg
adc
pop
int3
or
pop
cld
leave
add
fucomi
and
push
or
sbb
cld
insl
rclb
jae
add
push
sbb
jnp
hlt
mov
and
outsb
dec
mov
and
in
test
scas
ja
xchg
dec
pop
sub
inc
and
or
adc
sbb
dec
mov
in
xchg
jg
lock
addb
add
mov
leave
ds
aas
xchg
xchg
push
jns
add
xchg
ja
mov
fistpll
add
scas
cmpsl
adc
inc
add
shll
jecxz
ja
adc
mov
imul
in
mov
xchg
clc
add
ret
push
mov
lea
loopne
dec
jbe
add
sbb
pop
mov
shrb
add
jbe
xlat
fiadds
mov
add
sahf
push
xor
and
lret
enter
fcomi
xchg
or
mov
add
inc
outsb
daa
add
shll
add
xchg
xor
or
rolb
dec
or
cld
inc
test
sbb
les
push
nop
sub
and
rolb
and
and
and
sub
xor
and
dec
adc
jns
and
and
loope
or
push
push
das
dec
xor
outsb
fst
pop
or
sahf
addl
enter
jge
rolb
add
insl
add
es
or
jae
icebp
xchg
jo
scas
or
imul
les
ja
add
jno
es
push
xor
sbb
cmp
sbb
lods
out
cli
push
xor
pop
call
lock
mov
int3
mov
sbbb
add
ret
daa
lods
das
mov
sub
ljmp
jecxz
xor
xchg
add
std
sbb
repnz
out
add
test
add
inc
cmp
outsl
mov
fucomp
cmp
ret
or
hlt
jecxz
add
pop
dec
gs
imul
in
xchg
push
push
lcall
jl
shl
jg
lods
int3
lds
cltd
out
or
dec
ljmp
or
mov
mov
jne
or
or
push
cwtl
xchg
nop
cmp
jb
mov
adc
ret
or
inc
inc
adcb
lcall
mov
inc
dec
mov
test
jecxz
mov
and
xchg
xchg
ret
and
mov
imul
fcoml
push
push
stos
add
loope
mov
mov
push
popf
xchg
arpl
adc
clc
add
add
adc
sahf
sbbb
fisttpll
fists
push
call
aad
inc
fs
sbb
mov
add
out
inc
ja
add
mov
jecxz
neg
sbb
sub
cmp
loop
cmp
sahf
mov
aaa
add
arpl
stc
mov
cli
aaa
sbb
shlb
mov
aam
xchg
push
mov
sub
jno
add
lahf
mov
fwait
or
int
sub
sub
pop
xor
jno
stc
cmovo
and
mov
xor
inc
pop
mov
hlt
ficomps
in
sti
push
cmpb
or
aad
add
pop
or
dec
int
add
fldl
mov
inc
jo
out
pop
imul
insl
sti
xor
add
test
fcompl
fists
pop
cmp
mov
cmp
cmp
and
cmp
pusha
add
or
add
mov
dec
das
sbb
or
int3
dec
ljmp
inc
stc
mov
dec
add
flds
insb
dec
and
and
int3
add
stos
les
test
mov
xor
dec
scas
mov
insl
sbb
aad
mov
mov
fldcw
scas
sbb
rorl
call
push
push
or
in
lcall
sbb
xor
roll
nop
mov
mov
sbb
shlb
popa
jmp
or
ss
mov
lock
sbb
in
push
flds
or
add
stos
add
or
stos
add
xor
or
inc
out
sbbb
lahf
cmp
pop
add
test
fnstsw
add
or
add
repz
add
cmpsl
lods
loop
leave
sbb
js
lret
xor
inc
loop
push
std
repz
arpl
mov
test
pop
xor
lods
imul
jp
stos
xchg
add
adc
add
movsb
adc
xchg
fsts
cmp
adc
add
xchg
xchg
in
or
add
or
jbe
decb
pop
cld
pusha
xchg
lds
nop
rolb
push
add
cmp
jae
jmpw
xchg
outsl
mov
push
sbb
sub
enter
dec
outsb
push
insb
jmp
out
push
inc
pushl
les
push
ja
mov
pop
adc
xchg
jnp
rcr
scas
or
and
cltd
jns
xchg
stc
nop
sahf
xor
or
mov
in
mov
pop
cmp
movsb
cld
rolb
jg
dec
enter
xor
add
inc
jns
add
push
pop
leave
lret
push
and
mov
cmp
adc
shll
sbb
cwtl
push
popf
js
add
out
mov
xchg
iret
add
and
mov
xor
movsb
mov
inc
pop
cmpsb
ds
push
mov
rcrb
pop
not
adc
xor
cmp
sbb
add
push
out
mov
dec
and
testl
xor
mov
add
sbbl
xor
gs
cli
mov
popa
adc
pop
inc
repz
fs
add
dec
rorb
int3
add
fcoml
dec
xchg
jo
jecxz
or
pop
arpl
push
pop
or
sbb
stos
pusha
add
mov
add
stc
add
or
enter
adc
adc
mov
jp
pop
push
orb
or
daa
jns
mov
xor
push
dec
pop
inc
insl
imul
xchg
scas
out
ss
and
push
jmp
xchg
cwtl
add
pop
jl
sbb
sbb
iret
sarb
pop
icebp
or
add
jle
add
xchg
fsubrs
mov
cs
call
lock
fs
jp
push
push
pop
rcrl
inc
arpl
add
in
and
xchg
pop
cmpsb
lret
daa
inc
fs
clc
xchg
push
aad
ss
icebp
ja
xchg
pop
jge
and
jo
jb
add
fcoms
sbbl
filds
sbb
outsb
sub
push
je
loop
sub
jno
dec
ljmp
jp
push
fcoml
aas
icebp
add
dec
pop
xor
pop
gs
scas
rcll
sub
add
add
mov
add
stc
fistl
fcmovnbe
push
cmp
add
pop
orb
lock
pop
je
imul
in
cld
jecxz
cmp
hlt
mov
or
imull
xor
or
add
and
push
add
pushf
adc
xchg
add
or
add
mov
fnstenv
daa
mov
rcrb
or
or
loopne
jb
add
dec
cwtl
fimuls
lret
roll
push
add
or
pop
daa
xor
mov
sub
mov
xor
adc
les
add
jg
insb
mov
cmp
xchg
push
fidivl
into
pop
add
pop
mov
cmpsl
hlt
and
or
enter
fstpt
xor
add
add
icebp
dec
inc
movsl
roll
or
lods
jb
gs
aas
aaa
cmp
inc
or
jecxz
adc
mov
xor
jmp
adcb
cmpsb
xorl
imul
pop
cmp
add
pop
push
mov
bound
add
xchg
roll
enter
repnz
mov
sbb
popa
xchg
dec
mov
dec
arpl
push
lret
adcb
xchg
sub
adc
ja
inc
or
pop
mov
jp
pop
in
or
mov
and
mov
xchg
pop
xchg
jne
pop
sbb
call
inc
imul
les
inc
mov
fucomp
sub
xor
push
and
popa
in
cmp
mov
repnz
add
push
pop
mov
add
dec
fldl
test
pop
mov
lock
aad
dec
jae
orl
call
ret
add
data16
push
and
cmpsb
xchg
or
in
xchg
nop
jo
push
xorl
xor
push
rolb
mov
nop
push
cli
add
lea
shl
adc
inc
add
sti
adc
or
ret
push
cwtl
add
or
adc
loope
rorb
pop
add
sub
dec
repnz
inc
pop
pop
push
popf
add
dec
pop
xchg
jns
nop
pushf
pusha
mov
adc
add
xchg
push
mov
mov
and
mov
test
mov
lock
xchg
xchg
sub
bswap
push
lds
cmc
fcoml
and
jne
adc
jns
adc
scas
cwtl
add
mov
sbb
rcl
shll
daa
subl
lods
sbb
lock
ja
mov
dec
inc
imul
rcl
cmc
cmp
sbb
nop
pop
xor
and
aas
int
f2xm1
dec
fcoms
push
inc
jne
or
insl
movb
dec
mov
dec
std
pushf
push
jns
mulb
cmc
sub
test
nop
pop
sbb
es
hlt
outsb
push
enter
test
inc
add
mov
ffree
loop
je
xchg
jb
add
iret
repz
pop
jno
aad
jae
xorb
add
mov
cld
int
xorb
addb
jecxz
xorb
fimull
add
mov
insb
add
pop
mov
sbb
pop
iret
jno
adcl
adc
test
push
fwait
scas
cmp
mov
sub
sub
cmp
subl
push
loop
or
xorb
std
or
mov
mov
jo
lods
mov
daa
push
mov
imul
mov
sub
pushl
and
imul
insb
lret
mov
dec
push
push
inc
mov
or
addl
mov
pusha
scas
add
dec
je
lock
imul
sbb
or
fsubrs
and
mov
add
imul
add
jo
aam
or
push
dec
aas
mov
out
in
dec
lock
xor
add
mov
jae
popf
lcall
int3
add
mov
imul
mov
fistl
sti
sub
add
icebp
test
xchg
jmp
les
sbb
mul
pop
fiaddl
add
and
cmc
dec
pop
cwtl
add
xor
add
loope
mov
and
jmp
adc
ret
inc
cmp
xor
pop
call
pusha
and
add
aas
or
inc
adc
pop
out
cmpsb
popa
cld
add
repz
add
mov
leave
enter
stos
adc
cwtl
sbb
adc
in
pop
test
mov
andb
sbb
int
fs
sahf
rcl
es
sbb
pop
sub
out
or
sti
mov
mov
inc
add
call
addl
jb
loop
add
aaa
jbe
lret
adc
mov
jno
cmp
dec
stos
push
add
push
xor
data16
cs
push
ret
push
push
mov
jmp
add
sbb
inc
mov
sti
xor
filds
dec
jp
test
xchg
jnp
push
add
pop
imul
pop
mov
add
fstl
add
inc
loope
out
xor
pop
fsubrs
jecxz
mov
nop
add
fdivp
xlat
add
lock
inc
lods
push
lret
lahf
jnp
cmp
orl
add
scas
mov
leave
divb
xchg
jnp
add
shl
test
add
mov
mov
pop
and
enter
sbb
cmp
andb
add
inc
popf
fnstcw
sahf
cmp
lret
popa
push
jnp
jle
mov
clc
imul
rcrl
add
ljmp
inc
nop
das
jle
stc
pusha
xchg
in
jb
add
mov
or
push
leave
or
xor
jecxz
fwait
pusha
jmp
clc
cli
add
fidivl
dec
mov
xchg
fxch
add
lods
jno
popa
aaa
xor
add
repnz
adc
rorb
xchg
iret
lds
stos
adc
inc
cmpsl
mov
insb
and
insb
sbb
mull
sub
mov
xor
xchg
add
jp
jnp
outsl
rorl
in
xchg
cmpsb
mov
sti
pop
add
inc
cmpb
mov
rcrb
mov
push
inc
inc
in
clc
in
push
push
mulb
sbb
inc
cwtl
outsl
push
pop
add
mov
inc
jbe
les
add
sbb
mov
pop
xchg
scas
outsb
call
pop
insl
sbb
jno
xlat
jo
sbb
mov
scas
sub
add
add
mov
loopne
add
rorb
lock
pop
loopne
ret
je
inc
pmaxsw
push
cmp
add
movsb
cmpb
mov
push
pop
sbb
nopl
jno
addr16
movsb
push
enter
add
iret
mov
arpl
test
cld
adc
jl
int3
pop
push
fwait
addr16
inc
mov
push
mov
mov
xchg
sbb
gs
jmp
test
insb
clc
xor
repnz
mov
out
push
adc
rolb
add
jno
jp
loope
cmp
incl
nop
mov
sub
enter
pop
divl
sub
xchg
mulb
or
dec
inc
ja
jge
adc
pop
lea
sarl
inc
add
push
cli
aam
jle
mov
xchg
jp
ret
or
lods
loope
aad
jbe
and
or
std
add
and
roll
and
outsb
test
push
jnp
and
xchg
push
push
enter
ljmp
mov
jb
rorl
int3
cwtl
les
mov
sbb
dec
dec
or
add
sbb
into
pop
jnp
jmp
adc
dec
cmc
add
loopne
cmp
xlat
or
loope
push
add
inc
std
add
repz
out
inc
add
jnp
add
jmp
movsb
add
add
inc
lods
sub
scas
mov
bound
lock
or
inc
pusha
cwtl
jb
sbb
outsl
cmp
push
add
cmp
dec
lret
cmp
xor
mov
lret
dec
rolb
stos
push
int3
inc
or
loope
shll
add
xchg
pushf
fcomps
mov
out
xchg
movsb
leave
or
loope
loop
mov
add
pop
or
lock
cwtl
insl
mov
incl
mov
pop
mov
and
push
mov
pop
jle
and
outsl
std
xor
mov
insl
adcb
int
out
aam
cmp
sub
hlt
mov
clc
jg
orb
mov
push
xchg
dec
add
xchg
pop
push
jno
lcall
roll
dec
sub
faddp
adc
aam
mov
add
jecxz
sbb
inc
mov
test
add
outsb
sbb
mov
jg
mov
jecxz
outsl
adc
in
pusha
or
out
cmp
movsl
mov
cmp
push
add
jmp
jae
in
ret
and
loop
das
mov
lcall
orb
faddl
enter
in
push
je
cltd
rcrl
rorb
add
das
xlat
xchg
addr16
mov
mov
fidivs
push
aaa
jae
add
mov
es
adc
fsubrl
loopne
add
in
sbb
daa
jae
into
pop
vcmppd
pushf
mov
pop
add
and
jns
stos
loopne
add
add
mov
aam
outsl
out
add
testb
and
dec
inc
sub
lcall
imul
xchg
mov
pushf
test
or
insb
fs
add
int3
js
std
mov
sub
cli
mov
loopne
mov
pop
pop
inc
inc
repz
call
push
lahf
mov
jo
or
lret
ret
jb
dec
push
xor
add
mov
adc
jnp
push
in
cmpsl
xchg
add
jecxz
jb
lock
jb
jge
push
stos
aas
push
add
mov
data16
adcb
jg
shll
push
pop
fcoms
iret
pushf
jne
add
sub
inc
mov
inc
cmp
jge
mov
imul
and
imul
lock
sub
or
push
into
movups
shrl
xchg
movl
dec
test
inc
add
jnp
gs
add
sub
add
add
mov
cltd
lods
ja
xchg
add
mov
add
xchg
stos
verw
cmpsb
jle
pop
xchg
jecxz
in
iret
xlat
xchg
test
fiadds
shlb
xor
dec
dec
mov
and
in
test
outsb
iret
int
addb
icebp
xor
test
call
mov
sub
or
testb
add
push
push
fistl
xchg
mov
gs
bt
xchg
fneni(8087
cmp
xor
hlt
add
popf
popa
inc
cmp
or
andb
arpl
rcl
dec
loopne
xorl
mov
outsb
repnz
and
add
xchg
movsb
pop
rorl
add
pop
or
add
adc
jmp
aaa
cmpb
lret
pop
cs
mov
mov
mov
imul
pop
dec
inc
inc
or
add
jge
jmp
in
aas
xor
fisttps
add
fstl
cmp
icebp
leave
in
dec
add
and
and
dec
cmpsb
add
inc
sbb
pusha
mov
pop
cltd
push
push
xlat
add
cwtl
push
repnz
cmc
or
xchg
orl
or
sbb
js
cmovp
jo
and
and
es
or
addl
xor
ljmp
lea
cltd
cmp
jl
inc
repz
dec
push
or
xor
pop
adcl
mov
fcompl
out
push
pop
cwtl
inc
movsb
out
pusha
into
fwait
test
pop
enter
das
mov
not
imul
mov
inc
cmp
aam
fwait
shrl
scas
pop
mov
ss
or
add
mov
pop
mov
add
les
pushf
cs
sti
lea
loopne
das
add
push
movb
int
loop
pop
cmp
hlt
xorb
mov
add
loopne
pop
cmc
gs
js
adc
sub
pusha
pop
mov
push
frstor
mov
cmp
arpl
sub
psubusb
cmp
add
push
inc
mov
ds
push
add
sub
pop
mov
aad
cmp
adc
sbb
xchg
aaa
in
movsb
mov
clc
cmc
cmp
add
inc
lret
jmp
push
sub
mov
add
into
test
mov
or
lock
sbb
lret
and
scas
mov
gs
sub
lcall
idiv
sbb
add
mul
cs
dec
ficomps
add
jns
arpl
jae
and
sub
popa
dec
mov
adcb
dec
jne
dec
adc
push
leave
data16
or
dec
and
cmc
aad
inc
and
imul
test
addb
mov
pop
jno
xor
sbb
daa
pusha
pop
test
pusha
int
sbb
and
popa
nop
mov
xor
pop
mov
js
shl
int3
xchg
mov
movsl
or
cmpsb
rcll
jmp
out
xor
mov
pop
adc
enter
das
jne
cmc
daa
shl
lahf
lods
jp
jge
add
std
iret
jl
into
pop
pop
cs
cmpsl
push
dec
xor
mov
or
mov
jle
ja
loope
in
flds
jbe
sbb
cmp
mov
mov
inc
mov
mov
adc
adc
mov
adcb
aaa
push
cli
lock
add
popa
mov
inc
shrb
add
dec
add
lods
dec
in
or
jno
sub
call
cmp
sub
pop
sub
ficoml
lcall
jno
shll
call
xchg
fsubl
insl
and
ja
cmp
adc
xchg
in
inc
test
cwtl
mov
jecxz
scas
lods
sbb
add
fsubrl
popf
orl
nop
jne
and
adc
add
addr16
in
dec
add
xadd
lds
fs
addr16
mov
xchg
push
lods
mov
movsl
lds
and
pushf
and
lods
rcll
add
sub
arpl
add
pop
dec
ja
adc
rcrb
mov
sub
pop
sti
adc
fmuls
mov
mov
imul
mov
gs
add
loopne
icebp
bound
orb
dec
lds
sub
inc
jecxz
jae
xchg
xchg
mov
aam
sub
int3
imul
sub
pop
pushf
lods
loop
add
xchg
push
push
cwtl
xchg
cmp
add
xchg
nop
push
call
scas
pop
repz
bound
push
les
xor
in
mov
lea
jg
loope
xor
xor
fildl
loop
add
push
mov
repz
loopne
add
clc
push
add
xor
or
xor
loop
xchg
inc
lds
out
aaa
xor
in
mov
adc
lahf
push
and
jae
sub
cmp
push
popf
xor
mov
rolb
inc
shrl
ret
clc
add
call
insb
popf
jp
add
pop
cmpb
cmc
sbb
test
es
xlat
cmp
movsb
fisubl
movsl
add
xor
jno
add
int
int3
xor
sbbb
jnp
iret
jmp
movsb
das
add
adc
aas
rcrb
mov
dec
mov
add
adc
testb
cmp
mov
cld
test
fs
cmp
push
xchg
popa
sbb
fwait
sub
push
xor
enter
and
lahf
arpl
mov
push
add
pop
or
inc
sub
xchg
enter
xor
add
cmpsb
push
scas
push
pushaw
sub
and
test
inc
xchg
dec
and
inc
add
sbb
pop
or
xor
pop
jmp
mov
and
or
and
movsb
cmp
jecxz
inc
dec
push
daa
add
rcr
call
lods
push
iret
mov
add
out
add
sub
inc
sbb
push
test
or
add
lret
xchg
add
lods
fdiv
or
test
aam
push
cltd
daa
sub
dec
add
sbb
cmp
rol
pop
fldcw
ret
xchg
jp
xor
negb
sbb
movsb
add
add
jne
jmp
sysret
sub
sti
xor
and
icebp
add
push
mov
loope
repz
mov
addb
pushf
lcall
xchg
push
adc
js
into
pop
cs
xor
sbb
cmpsb
jecxz
add
dec
adc
js
adc
das
or
rcrl
or
mov
pop
add
cmpb
inc
pusha
int
inc
lods
in
add
sbb
add
mov
sarb
add
stos
sub
sbb
stos
dec
jg
cmp
insb
mov
add
push
bound
repz
xchg
push
je
pusha
add
aad
imul
inc
push
in
add
cmp
mov
adc
popf
pop
inc
or
and
jo
add
push
push
add
cmp
or
jb
cmpsb
adc
sbb
sbb
inc
sub
and
pushf
addr16
add
mov
sbb
gs
add
lock
js
add
and
dec
bound
mov
cmp
aas
sbb
orl
cmpsl
push
rolb
repz
test
mov
int3
pop
xor
lea
lock
mov
mov
lcall
mov
mov
out
in
add
js
imul
jb
sub
add
inc
adcl
out
imul
add
cmpl
push
push
iret
dec
leave
pop
jl
or
in
add
lret
cmp
dec
jne
add
ret
mov
clc
call
sbb
adc
inc
clc
cmp
call
add
add
rorb
cmp
in
mov
lahf
and
outsb
ljmp
push
mov
gs
cmp
ret
subb
pop
xor
inc
mov
dec
pop
or
fcom
fisttps
and
jo
mov
sti
fsubrp
roll
add
mov
loop
add
inc
dec
cmp
lcall
or
sub
in
and
and
add
xor
jl
inc
out
cmc
pusha
enter
add
lea
mov
shlb
popf
cmp
inc
jnp
insl
mov
sbb
pop
dec
inc
sub
fcompl
pop
test
push
pop
lcall
push
test
cmp
stc
inc
push
pop
movsb
or
pop
xor
sub
shrl
push
inc
add
add
pop
or
out
jns
sub
imul
cmc
leave
pop
dec
mov
je
push
aam
pop
jmp
push
jo
pop
rcrl
addl
mov
push
sub
add
icebp
ret
jae
inc
xor
stc
fdivrl
add
lods
sub
xchg
cli
scas
pop
inc
add
dec
ds
dec
sbb
pop
add
jg
push
xor
jp
fs
cmp
mov
push
loop
add
mov
inc
dec
or
fcoml
add
add
jmp
sahf
cmc
add
dec
loop
mov
xchg
filds
push
adc
jno
xchg
lret
imul
mov
nop
dec
adc
lret
std
add
sbb
sbb
stc
push
pop
push
or
push
mov
aad
xor
repnz
js
mov
add
popf
scas
mov
dec
loope
mov
add
leave
fs
je
xchg
mov
inc
das
loop
pmaddwd
and
lea
andl
lock
bound
inc
inc
es
stos
enter
fldcw
aad
add
out
loopne
adc
add
aam
fiaddl
xchg
add
ret
test
rolb
imul
nop
mov
xor
sbb
loopne
loop
or
xchg
add
pop
ficoms
es
and
xor
loop
add
inc
and
ds
pop
xor
enter
jno
push
adcl
loop
insl
outsb
mov
or
adc
dec
add
jecxz
gs
or
aad
jnp
or
xchg
lods
add
mov
es
lret
das
push
add
or
sti
jae
repnz
push
dec
add
pushf
mov
lea
push
dec
mov
lret
inc
dec
mov
adc
sbb
popa
push
stc
push
and
pop
ljmp
add
xor
les
inc
arpl
scas
insb
jae
lock
in
bound
jl
mov
or
stos
out
inc
push
and
push
jmp
adcb
pop
insb
add
cmp
insl
dec
int
inc
push
push
imul
ds
jge
push
or
popf
int3
sbb
inc
ficomps
xor
cmpsl
ja
aaa
xor
or
insl
dec
or
hlt
fwait
add
inc
js
movl
ljmp
jge
cmp
mov
jb
or
hlt
jle
mov
push
add
dec
xchg
sub
pop
lods
cli
movsl
repz
dec
imul
fdivs
test
fs
jmp
add
push
dec
push
nop
dec
andb
iret
fadds
loop
add
add
sbb
sbb
aad
sub
stc
pop
int3
mov
add
sbb
mov
loop
dec
mov
sbb
jnp
loopne
pop
loopne
mov
jae
xorb
into
jo
add
mov
xor
mov
adcb
and
mov
incb
and
out
inc
gs
iret
pop
cmp
out
add
adc
sti
xchg
add
xchg
and
add
sbb
push
push
inc
cmovnp
cmp
cmc
jns
pop
ret
xor
push
add
mov
stos
jmp
dec
out
jns
fdivl
add
adc
mov
loopne
les
dec
aam
cmp
stos
subb
sarb
adc
aaa
fstpl
add
xchg
sub
mov
sti
inc
out
add
in
in
cmpb
add
shll
mov
push
ds
add
xorb
cmp
or
das
fsubrp
add
xor
sbb
js
mov
cwtl
pop
mov
mov
add
xor
inc
pop
inc
adc
pop
not
imul
mov
pusha
movsl
js
js
mov
roll
push
fistpl
xchg
adc
data16
push
add
mov
cmpsb
gs
mov
inc
add
xor
push
out
or
pushf
fiaddl
cmp
xor
mov
jg
aad
add
sub
xlat
xchg
fiaddl
ljmp
add
cld
mov
add
jge
mov
push
and
dec
shll
pushl
scas
je
enter
xorb
jns
rcrl
sub
stos
add
out
rolb
fdivrl
pop
jne
sbb
int3
pop
xchg
add
popa
in
icebp
xchg
cmp
push
pop
fiaddl
movsb
in
inc
test
mov
divb
mov
shrb
pop
cmp
inc
mov
mov
mov
ljmp
shll
pop
into
inc
jmp
push
or
lods
inc
fisttps
movsl
sbb
or
leave
outsb
inc
std
lds
int3
fistpll
xlat
add
dec
ds
push
lret
pop
add
jns
dec
incl
loopne
add
sub
sub
add
mov
lahf
in
mov
add
repnz
outsl
aaa
add
popa
inc
push
out
cmp
lcall
push
add
sbb
dec
inc
fcomps
ljmp
jp
sub
int3
add
repz
mov
inc
and
rcrb
outsl
scas
add
jne
xor
movsl
add
addl
add
lret
dec
xor
mov
or
jl
add
sub
push
sbb
ljmp
xor
mov
popa
mov
cwtl
sbb
add
mov
mov
adc
pop
addl
dec
das
add
inc
adc
ljmp
add
cmp
lcall
push
add
sub
push
rorb
nop
inc
sti
insb
xor
ret
add
movsl
dec
fsubr
adc
test
rcrb
ss
xchg
sbb
addr16
lock
mov
sbb
rclb
sbbb
leave
add
nop
mov
scas
add
xor
ret
call
or
cwtl
jmp
mov
xchg
testl
jb
cwtl
shlb
xchg
xchg
adc
ret
mov
sbbl
push
mov
mov
jnp
cli
dec
push
inc
dec
xor
addb
adc
andl
jle
adc
and
xor
and
ror
pop
stos
inc
mov
aam
into
stos
iret
adc
add
mov
sbb
imul
mov
inc
mov
push
jns
roll
addb
dec
add
sete
add
mov
or
push
dec
test
loope
lcall
push
mov
and
or
add
sbb
lcall
inc
pop
mov
in
notb
rorl
jo
je
mov
call
push
add
xchg
loope
jb
sbb
lea
mov
jg
je,pn
or
insb
in
push
outsb
cmp
and
xchg
add
sbb
lock
pop
cmp
shlb
mov
and
jo
insb
mov
push
std
decb
and
add
sub
nop
push
add
sbb
sub
lea
pop
pop
pop
ja
mov
xchg
mov
mov
xor
add
lret
dec
mov
stos
pop
pop
shlb
xor
mov
addr16
add
in
das
sbb
xchg
push
out
loope
daa
pop
add
jno
mov
xor
mov
js
mov
imul
push
verr
pop
lock
enter
loopne
jmp
cmp
add
cmpsb
push
ljmp
inc
adc
jmp
loop
pushl
jl
scas
pop
clc
add
int
mov
mov
ja
push
add
and
jne
cmp
fbld
pusha
xchg
in
aam
adc
in
cmpsl
enter
fsts
sub
in
daa
outsl
sahf
sarb
std
ret
xchg
test
mov
stos
or
cmpsb
repz
add
nop
fiadds
pop
add
fwait
pop
push
dec
incb
mov
push
add
loopne
int
push
pop
out
or
and
xlat
test
push
popl
test
xchg
push
pusha
add
jp
jmp
push
mov
sbb
fwait
pop
cmp
xor
nop
and
xor
lret
cmp
aad
mov
int3
pusha
and
add
inc
jae
pop
orl
xor
pop
jno
add
mov
dec
sub
mov
ret
icebp
movsl
daa
cmpsb
or
addb
in
cltd
loopne
fdivs
or
jmp
xchg
add
jnp
ret
add
adcb
enter
add
add
xchg
cld
add
sub
repnz
subb
pop
push
or
push
rolb
jl
pop
mov
les
cmp
fldenv
pop
out
mov
movsb
mov
lock
inc
add
ret
adc
mov
cld
flds
inc
in
popf
dec
sbb
sbb
das
pushf
dec
xchg
outsb
shr
arpl
in
sahf
sub
cmc
mov
mov
popf
adc
dec
sub
xor
addr16
fisttpl
pop
sbb
xor
mov
jg
or
mov
dec
add
xchg
test
nop
add
add
add
sbb
stos
pop
hlt
mov
fidivrs
cmp
mov
ret
fwait
push
movsl
mov
adc
in
mov
mov
cs
dec
stc
cli
sahf
mov
sub
or
dec
xlat
addb
pop
nop
pushf
in
add
lea
xor
mov
rcrb
mov
cmp
mov
mov
push
or
mov
mov
pop
shlb
clc
into
sbb
fsubrs
add
out
mov
sub
inc
outsb
add
cmp
add
sub
xor
adc
fcoml
mov
jns
pop
pop
add
mov
lcall
mov
ds
xor
mov
add
idivb
mov
sahf
fisttpll
add
adc
mov
jg
add
push
mov
mov
add
mov
add
shlb
call
lret
sub
adc
js
mov
mov
int
call
add
imul
idivb
xor
idiv
jmp
dec
lds
cmp
imul
mov
add
ljmp
frstor
pop
dec
cltd
jb
sar
fisubrs
dec
adc
rolb
cmp
dec
test
mov
out
lahf
adc
jae
int
sbb
pop
enter
ret
rcl
lock
fisttps
adc
adc
sbb
pop
cmp
xchg
xlat
les
cmp
lods
inc
inc
idivb
shrl
mov
jl
ljmp
aas
pop
add
int3
jae
loop
add
repnz
adcb
nop
or
adc
mov
xchg
mov
outsb
ljmp
push
sub
je
push
mov
out
add
and
negb
pop
pop
mov
mov
jle
cmp
inc
cld
out
lods
subl
sbbl
add
xlat
pop
xor
add
mov
mov
cli
loop
popa
lcall
mov
xor
cmp
sbb
loope
mov
fadds
dec
dec
dec
or
repz
inc
outsl
icebp
cmp
and
dec
sub
sbb
adc
add
rclb
clc
aam
pop
aad
inc
jg
fldl
dec
or
push
add
xchg
arpl
je
adc
adc
or
es
std
imul
inc
je
mov
ljmp
mov
mulps
jae
push
aas
mov
mov
shlb
pusha
dec
sbb
pop
sbb
or
sub
jae
jns
dec
push
xchg
mov
stc
aaa
shr
js
cmp
inc
adcb
pop
dec
subb
aam
ret
sbb
inc
addr16
xchg
in
testb
cmp
dec
std
or
mov
add
and
in
and
pop
jmp
or
sub
dec
cmpsb
mov
fbstp
in
pop
pop
sbb
inc
mov
les
icebp
enter
cwtl
mov
push
add
push
mov
clc
call
aad
sub
inc
jmp
shll
divb
sbb
daa
and
mov
hlt
js
xchg
add
data16
dec
movsl
orb
stc
in
mov
jbe
int
aam
pop
and
adc
add
dec
daa
popf
clc
pop
sbb
push
xchg
and
jae
and
repnz
cmp
shrb
dec
fwait
jle
testl
cmpb
icebp
sbb
mov
hlt
pop
int3
cmp
rcl
add
mov
add
lea
jb
add
lret
rorb
jg
dec
add
lods
std
add
insl
mov
add
cmp
js
xchg
push
mov
add
repnz
int
inc
stc
push
iret
lret
in
jno
bswap
fdivrp
enter
shll
cs
push
sbb
jo
fiadds
mov
and
jmp
add
sbb
sbb
push
mov
lcall
in
loopne
into
movsb
or
sbb
inc
in
or
and
fdivrl
add
fisubrl
dec
aad
xchg
stos
movsb
in
mov
xor
rolb
leave
pushfw
mov
adc
lds
imul
repz
repnz
mov
leave
rclb
int3
dec
jl
adc
popl
lahf
push
fidivs
add
jns
or
rorl
jnp
add
neg
jb
out
lret
movd
aas
hlt
xchg
sub
add
into
repz
sbbl
jmp
sbb
fistps
aas
fdivl
sbb
push
mov
sub
xor
popa
pop
cs
add
jmp
fiaddl
inc
jno
shl
add
bound
add
cli
dec
xchg
scas
mov
add
aam
jnp
or
imul
shrb
pop
inc
add
cmp
inc
add
cmp
cmp
pop
sub
xchg
mov
mov
jge
push
mov
lods
cmc
loopne
or
add
sbb
shl
xlat
mov
into
test
arpl
adc
pop
jl
and
or
add
aas
xchg
ret
cmp
jnp
gs
pop
leave
insb
cli
dec
pop
mov
arpl
or
mov
fdivrl
dec
out
lods
mov
addr16
movsb
lds
add
inc
push
lcall
cli
call
repnz
sub
cmp
pop
add
cwtl
cmp
test
adc
lret
jae
lods
push
mov
test
inc
mov
xor
aaa
pop
int3
xlat
push
mov
jb
add
dec
call
les
jnp
ds
adc
sub
push
mov
xchg
rolb
insl
movsb
lcall
adc
in
sub
pop
cmc
stc
jecxz
and
cltd
adc
aas
mov
mov
adc
inc
out
add
sub
lods
pop
cs
andl
frstor
rolb
adc
addb
dec
add
out
push
add
cmp
push
or
pop
jns
mov
jle
cwtl
imul
or
sub
dec
loop
add
and
mov
js
outsb
stc
dec
imul
inc
inc
testl
dec
rclb
clc
and
xor
cmp
iret
pop
pop
cmp
inc
in
sbb
out
incb
xchg
out
cld
pushf
incb
roll
cwtl
cmpsb
cmp
pop
sbb
push
iret
push
inc
adc
shlb
enter
cld
lret
add
xorl
add
add
add
push
ror
and
bound
jne
mov
add
ljmp
mov
sub
shrl
nop
mov
loop
movsb
add
add
pop
rclb
sub
dec
cmp
jbe
and
rol
add
or
inc
and
repnz
addr16
pusha
stc
pop
xchg
roll
outsl
or
jns
mov
pop
in
addr16
je
mov
pop
sbb
inc
dec
imul
stos
mov
rclb
mov
lcall
mov
xor
xchg
cwtl
jl
add
jne
loop
cwtl
js
gs
cmpsb
cld
push
mov
sub
pop
push
cmpb
scas
mov
outsb
sub
mov
imul
insb
sahf
mov
scas
in
cmp
dec
add
sbb
arpl
add
cltd
mov
inc
mov
adc
int3
shrl
add
add
jg
mov
sbb
sub
xchg
or
movsb
inc
ret
jge
test
cmp
mov
push
addb
mov
cs
jae
pop
outsb
and
cmpsl
sub
or
cmp
cwtl
mov
or
popa
xlat
mov
or
mov
jle
rcll
push
adc
mov
dec
fmuls
pop
add
mov
or
jl
inc
cmp
add
stos
ja
add
loopne
ljmp
out
rorb
push
xor
je
add
fs
add
cld
jmp
and
mov
inc
inc
sti
adc
sbb
lret
sbb
xor
sbb
add
in
hlt
ret
dec
jmp
push
stc
or
jb
cmp
sahf
lret
lcall
add
or
push
daa
aam
jo
cltd
lods
stc
jge
add
adc
repnz
shlb
add
jge
pushf
cwtl
cli
faddl
shr
fdivp
sbb
lcall
sub
or
push
cmp
lahf
ret
pop
push
fadds
repnz
mov
fldenv
add
mov
repz
xchg
ret
mov
jmp
sbb
sahf
mov
inc
jb
mov
ror
and
xchg
sub
nop
sbbb
in
cmp
fmull
inc
and
add
scas
cmp
outsb
cli
or
adc
add
mov
fldl
call
add
testl
push
outsl
aam
inc
cmp
clc
js
sub
inc
pop
push
out
pusha
test
add
fucomi
mov
test
or
daa
fdiv
jle
adc
mov
push
add
js
orb
add
mov
sbb
das
xchg
jnp
push
adc
adc
add
inc
jo
aas
jnp
add
xor
movsl
lret
dec
rol
sbb
or
lods
test
and
js
pop
loopne
ss
psrlq
adc
jg
daa
lods
sbb
inc
push
or
pop
and
int
cmp
push
lock
fmul
roll
ja
lahf
and
mov
push
outsb
add
test
fsubp
je
add
outsl
loop
hlt
dec
add
sub
mov
out
sbb
or
sub
pusha
pop
push
cmpsl
adc
inc
add
jge
mov
jo
jl
jg
aaa
dec
pop
jno
dec
inc
add
insb
aam
mov
jbe,pn
or
rep
and
xor
and
pop
das
inc
push
dec
jecxz
or
pop
cli
aad
pusha
xchg
push
rolb
outsl
add
mov
mov
cmp
movsb
fldl
pop
bound
fbld
hlt
insb
out
add
in
adc
fnsave
mov
or
lods
mov
xor
dec
movhps
addr16
push
hlt
add
sbb
jg
mov
mov
pop
fbstp
mov
mov
cli
sbb
mov
add
push
fs
arpl
add
sub
jns
xchg
cmp
int3
lret
mov
incb
lcall
dec
inc
inc
mov
sub
sarl
add
push
or
jae
call
sti
outsl
pusha
and
mov
andl
jnp
and
sarl
inc
mov
pusha
sub
push
dec
jle
inc
test
cmp
dec
bound
sub
sbb
dec
push
add
clc
cld
repz
cmp
push
add
mov
jae
aas
mov
loop
icebp
and
popf
cmp
sub
arpl
ret
jp
jge
add
fdivrl
cmp
pop
mov
lea
mov
sub
test
pop
dec
inc
and
aad
xchg
mov
xor
fcompl
pop
sahf
sub
xlat
jb
mov
repnz
push
lcall
adc
push
add
jmp
gs
push
and
push
cmp
sub
mov
inc
fstp
call
jbe
lea
mov
xor
nop
dec
movsb
jle
xlat
bnd
add
pop
or
call
testl
mov
sbb
hlt
iret
call
es
pop
mov
or
and
sbb
or
pop
popa
adc
jb
jno
shrb
jns
les
dec
bound
sbb
lods
test
daa
rorb
add
js
add
inc
jns
aam
fidivrl
adc
and
inc
xor
imul
add
bound
rolb
cmp
cs
mov
lahf
leave
clc
add
add
pop
mov
push
rclb
mov
mov
fmull
mov
ss
add
cmp
movsl
mov
enter
add
pop
shl
adc
pop
into
inc
fdivl
ds
cmpsb
mov
sub
inc
cmp
inc
repz
xchg
std
or
inc
mov
pop
and
leave
pop
add
inc
lods
inc
ss
lret
pushf
push
push
daa
add
push
sub
jg
sub
nop
adc
scas
jmp
or
pop
std
mov
dec
pop
and
push
add
mov
lahf
adc
and
mov
in
in
fs
pop
inc
xor
fucomip
add
mov
ret
es
into
dec
add
push
xchg
mov
adc
xchg
test
lods
dec
inc
es
out
add
jecxz
mov
mov
out
pop
test
add
movsb
push
sub
add
mov
popa
ret
icebp
outsl
hlt
bound
push
add
stos
xor
in
jno
das
mov
leave
data16
xchg
jmp
add
sti
xor
dec
xchg
xor
sub
lret
enter
mov
add
cmp
xor
test
and
inc
mov
jno
stos
imul
pop
leave
mov
fidivl
xor
and
mov
xor
nop
ret
jl
enter
mov
cmp
in
and
add
js
push
test
add
aaa
cmp
fadds
arpl
xchg
pop
mov
xor
inc
movsb
cmpsb
pop
adc
pushf
and
cmp
sti
aam
lods
cld
add
inc
jl
adc
pop
cmp
xor
lret
repnz
nop
movsb
dec
call
push
push
jmp
das
in
sbb
pop
outsl
sbb
cld
adc
pop
or
add
in
loopne
or
enter
jno
xchg
shlb
pop
jo
jmp
rolb
add
jae
add
add
or
add
mov
cld
add
inc
inc
bound
xchg
ret
pop
lahf
fadds
sub
xlat
jg
mov
xor
mov
add
mov
and
push
popf
pusha
or
xchg
add
fbstp
jg
fsubl
nop
iret
push
xor
and
fsubs
lcall
jnp
aam
repnz
add
mov
jge
inc
arpl
leave
mov
ljmp
cmp
aaa
xor
add
orb
scas
int
add
cs
sbbb
cmc
add
mov
push
sbb
pop
xor
int3
add
push
and
xor
subb
dec
loopne
sbb
out
or
arpl
lahf
add
adc
add
inc
sbb
cmp
or
dec
push
adc
addb
rclb
incb
das
data16
les
cmp
outsb
mov
add
cld
dec
push
push
das
ljmp
out
push
pop
mov
fdivrs
add
push
pop
pusha
xchg
mov
add
subl
into
mov
jl
sbb
shl
or
inc
cld
xor
btr
push
insl
xlat
add
divb
pop
lods
ret
pop
not
or
xchg
dec
sbb
sbb
jl
add
mov
adc
lock
es
sbb
dec
loope
add
mov
loop
sarb
or
inc
arpl
loop
cli
mov
add
into
jmp
xorb
add
call
ret
shr
dec
push
popa
xchg
test
or
repz
push
add
stc
loopne,pn
mov
loope
fyl2x
xchg
xor
add
mov
fdivs
xchg
xchg
pop
mov
add
mov
add
pop
scas
es
pop
loop
fldl
bnd
cld
and
add
testb
xorb
mul
add
push
enter
ljmp
rolb
push
stos
adc
jne
ds
sbb
inc
stos
cmp
cmpsb
add
adc
cmp
xchg
ficompl
rclb
std
and
cmp
fmul
add
popa
push
or
push
notl
pop
call
add
scas
cs
leave
add
and
adcl
add
sbb
stc
int3
sub
push
lods
lods
dec
cmpsl
mov
andl
mov
inc
pop
or
mov
push
repnz
adc
out
test
inc
jg
adc
rolb
pop
repnz
cmp
push
shll
add
cmpl
test
lret
popl
dec
and
stos
inc
addl
cld
sarl
out
add
mov
jbe
jo
out
or
in
dec
push
mov
stos
pop
mov
subb
ljmp
mov
test
jnp
ret
mov
repz
mov
xchg
in
cwtl
lcall
scas
jb
in
add
adc
int
lock
es
mov
jns
add
pusha
and
pop
lock
or
dec
add
adcb
js
adc
out
ja
cmp
ret
mov
cmc
imul
add
pop
lret
or
cmp
fcmovnu
pop
cmp
cmp
dec
add
out
mov
jg
mov
pop
pop
or
mov
cmp
mov
adc
mov
cmp
and
lcall
inc
xchg
jle
mov
imul
shl
add
iret
ret
int
or
pusha
xor
add
dec
add
inc
lcall
test
mov
xor
inc
or
aam
mov
and
rcll
inc
icebp
jmp
jge
pusha
xor
sbb
pop
repz
je
jnp
fisubl
sbbb
scas
lcall
add
mov
mov
clc
orl
mov
lods
out
add
and
jmp
jb
sbb
mov
inc
sbb
movsb
xor
xchg
sarb
loop
cmp
dec
mov
cmp
mov
in
mov
or
push
push
pushf
scas
push
inc
and
ja
cmpsl
test
leave
out
popf
pop
loope
dec
jmp
cmp
add
jae
fistpl
push
add
pop
mov
jmp
call
pop
mov
push
pop
aas
sbb
dec
xchg
pop
pop
loop
popl
sub
jno
xchg
lods
add
dec
nop
push
or
neg
sub
add
int
in
lock
repz
inc
xor
push
and
aad
sub
adc
adc
insl
xor
jecxz
add
cld
sbb
sub
js
mov
and
fistps
mov
inc
mov
cmp
add
mulb
es
mov
fmuls
out
jecxz
aaa
scas
outsb
or
sbb
pop
leave
nop
cld
lock
stos
pop
adc
xor
int3
mov
hlt
paddusb
jnp
sbb
pop
arpl
into
add
or
and
mov
arpl
cmp
test
and
mov
sub
arpl
nop
fldenv
in
fdivl
sbb
jge
add
popf
int3
xchg
xor
sbb
daa
cmc
das
add
repz
jnp
dec
add
je
movsl
xor
es
cld
cmp
dec
js
add
call
outsb
rorb
jae
and
nop
pushf
add
pop
std
jmp
mov
add
fstps
nop
clc
or
pop
gs
rorb
rorb
add
and
add
sub
stos
mov
push
rolb
xor
or
add
adc
into
and
mov
push
ret
jae
lock
sub
xlat
pusha
fisttpl
push
adc
push
out
mov
outsb
sub
fnstsw
jbe
xorl
leave
mov
push
xor
add
and
lahf
mov
sbb
jno
cmc
adc
rol
repz
or
add
shll
mov
and
and
or
sub
or
jns
cmpsl
mov
add
clc
imul
add
or
add
xor
add
add
sbb
jbe
fwait
jmp
popf
jo
adc
inc
add
out
mov
inc
cmc
add
movsb
enter
add
sbb
std
addl
insl
stc
subb
out
inc
rolb
or
push
lcall
pop
sub
xchg
pushf
clc
xor
add
mov
cmp
xchg
fldenv
push
adc
cmp
mov
ror
sahf
lea
out
addr16
cmpsl
inc
fbstp
sub
push
xchg
je
or
xchg
cmp
xor
fildl
clc
test
jne
test
inc
cmp
in
les
stc
mov
daa
fsubr
xchg
add
or
push
fidivrs
mov
mov
and
in
aaa
into
movsbl
push
or
add
inc
or
adc
clc
push
xor
xor
shll
les
jo
add
add
xchg
push
loope
cwtl
xorb
and
fildl
lods
adc
outsb
cmpsb
out
add
mov
add
push
pusha
pop
xchg
cmovle
pushf
stc
out
inc
add
aam
dec
or
in
add
mov
addr16
xlat
pusha
cmp
add
es
mov
sub
ja
cwtl
jmp
adc
int
insb
mov
push
sbbb
sbb
fsub
pushf
stos
psllq
xor
pop
add
mov
aaa
pop
fmulp
add
adc
xchg
fadds
adc
rorl
sub
add
mov
jno
test
xchg
stos
outsl
movsb
cwtl
pop
dec
inc
sub
sbb
mov
notb
jge
dec
outsl
add
dec
jo
add
xor
pop
push
fwait
aad
nop
add
mov
and
out
xor
jmp
cltd
enter
cmp
movsl
jge
in
add
pop
sahf
dec
aaa
shrb
add
pop
sub
and
aam
stos
pushf
xor
test
jge
cld
xchg
mov
sbb
xchg
sti
clc
loopne
pop
jbe
xor
rcl
add
inc
or
jo
sub
add
inc
loopne
xor
mov
fincstp
cmp
daa
pop
xor
add
or
ja
push
addl
faddl
mov
test
xchg
mov
inc
inc
add
or
rclb
sub
neg
nop
and
add
loope
fmuls
jecxz
sub
xchg
movsl
subb
ss
add
es
test
push
add
addl
mov
push
xchg
add
outsl
lahf
sub
pushl
movsb
jl
cpuid
mov
mov
sahf
pop
mov
add
pusha
lods
popa
add
loope
movb
mov
ja
jne
cmp
js
pop
mov
inc
xchg
jb
push
add
out
aam
dec
add
mov
fstps
js
aam
jl
je
hlt
add
test
sub
jecxz
shrb
ret
push
xor
sub
ror
clc
mov
loope
lahf
add
xchg
push
pop
pop
popa
sub
xorb
add
fcomps
mov
lods
cs
int3
test
lahf
pusha
loopne
sub
add
and
rolb
cmp
or
mov
test
xchg
in
inc
shrl
loopne
orb
aaa
ljmp
jns
dec
add
popf
cltd
clc
jg
ljmp
add
inc
inc
pop
inc
pop
popa
push
sbb
into
xor
in
push
dec
cmpsb
add
push
mov
or
cmp
sub
push
lret
imul
mov
fildl
ja
addb
and
mov
loopne
pushf
jmp
push
ljmp
cwtl
jle
cmp
cmpsb
loopne
add
pusha
mov
lret
mov
and
push
add
jno
cld
jg,pt
mul
out
test
pop
xchg
pop
inc
push
jmp
fnstsw
in
popf
insl
sbb
xchg
call
movb
lea
sbb
jl
faddl
push
and
fcomps
inc
pop
push
xor
or
fwait
xchg
rcll
lods
repz
sbb
pmaxsw
insl
mov
adc
and
add
notl
or
pop
pop
jbe
ja
imul
fwait
je
add
movl
adc
xor
inc
xor
in
lock
add
adc
sarb
js
add
push
lret
xlat
lahf
orb
les
popa
sbb
ret
pop
or
test
jge
dec
pop
jb
or
push
shll
mov
add
pop
lahf
aas
jle
imul
mov
mov
in
fsubl
bound
jo
sbb
pop
test
jle
pop
inc
cmp
cmp
mov
ret
mov
outsl
jp
sub
sub
xrelease
inc
out
sub
add
add
cli
cmc
add
popa
push
mov
inc
repz
push
mov
cld
add
mov
add
cmp
jne
stos
sbb
adc
mov
push
lcall
repnz
push
mov
jl
iret
mov
jmp
inc
lret
popl
add
cmp
sahf
add
lods
dec
xor
add
mov
in
or
enter
adc
out
cmp
rcll
pushf
mov
push
or
push
filds
pop
mov
gs
add
into
cmp
or
fwait
dec
sbbb
inc
add
repz
js
cmp
mov
outsl
rcrb
popf
sub
mov
pop
mov
add
int3
shl
pop
pushf
jbe
iret
lds
xor
inc
pop
and
jecxz
decb
pop
jae
ss
xor
pop
shrl
imul
add
add
jmp
aam
push
mov
sahf
imul
lret
mov
pop
xor
notb
add
testb
dec
loopew
sbb
out
int3
mov
jecxz
std
out
dec
cli
sub
mov
mov
cmp
mov
gs
pop
push
inc
daa
add
jb
inc
add
test
mov
push
paddsb
adc
add
and
add
xlat
sbbb
fidivl
fucomip
jle
les
mov
inc
add
add
xor
cmp
ljmp
jb
push
data16
dec
mov
sarb
icebp
mov
aas
add
push
cmp
push
enter
popa
xchg
std
sub
pop
cwtl
das
adc
mov
andb
jne
sar
ss
pushf
lret
xor
movsb
add
scas
mov
sbb
and
test
data16
push
xchg
and
scas
loop
pop
xchg
lret
roll
and
xor
xchg
push
adcb
add
in
imul
lods
lret
in
adc
mov
scas
dec
imul
es
jb
cmp
orl
sbb
stc
mov
lock
and
test
push
mov
aam
dec
push
out
xchg
iret
cltd
cmp
add
and
sub
pop
inc
xchg
and
nop
adc
dec
add
add
dec
nop
das
aaa
add
or
cmp
add
inc
dec
jmp
add
daa
stc
add
lfs
andb
add
pop
xchg
add
lock
fildl
adc
enter
insb
ljmp
add
into
fildl
fs
add
fmuls
pushf
or
jae
mov
testb
add
mov
mov
add
cs
mov
pop
jl
shll
mov
cld
and
test
inc
fwait
jo
add
outsb
flds
orl
sbb
fistps
mov
aad
cmp
pop
lcall
push
rcl
rcrl
js
ret
mov
mov
movsb
mov
lods
and
add
push
dec
fldcw
push
dec
sbb
cmp
push
mov
addl
and
scas
cmp
pop
jae
mov
xor
rcrb
testb
xchg
adc
stc
je
xchg
inc
mov
in
push
mov
cli
call
dec
and
lock
repnz
aam
insl
scas
lret
cmp
adcl
jecxz
in
and
repnz
ja
xor
andb
pop
pop
outsb
pop
mov
test
mov
shrl
jp
sbb
loopne
leave
add
inc
jb
cltd
test
sarl
mov
sbb
push
sti
cltd
cmc
lock
into
push
and
add
sbb
loope
ds
into
popa
dec
es
and
in
lock
leave
loopne
inc
ja
imul
jae
xchg
add
imul
fiadds
jp
into
mov
loopne
sarl
sbb
pop
mov
or
and
sbb
jl
jo
jno
int3
sub
test
int
les
or
and
add
leave
or
shl
jae
pop
xchg
adc
inc
sbb
std
or
and
add
mov
fadd
lret
out
pusha
cli
adc
jbe
add
in
pushf
fadd
or
imul
mov
fwait
add
ds
rolb
add
adc
and
push
sub
iret
pop
in
lea
lods
xchg
adc
in
mov
add
xchg
lahf
jnp
daa
fsubrl
pushf
movsl
pop
ror
mov
nop
imul
shr
iret
repz
cmpsb
mov
dec
in
addb
cli
cmp
push
fistpll
dec
bound
pop
pop
cli
push
out
push
notb
add
aaa
mov
test
cmp
xor
loopne
ret
mov
adc
mov
cmp
xchg
cwtl
pop
adcl
push
fists
jle
add
aad
test
cs
inc
mov
cmp
mov
push
sbbl
jns
nop/reserved
mov
inc
daa
loopne
jp
xchg
aaa
lock
popl
arpl
imul
jecxz
add
out
jg
cmp
cwtl
pop
lds
shlb
mov
test
push
insl
add
mov
xor
adc
in
inc
add
jmp
mov
gs
xchg
push
pop
add
xchg
in
sub
sbb
dec
and
loopne
cmp
xchg
push
adc
dec
mov
push
push
add
mov
and
ret
cmp
xor
sbb
and
dec
push
and
dec
sbb
mov
out
leave
add
sub
mov
repnz
adc
xor
aad
jno
and
mov
mov
hlt
int
jno
add
inc
adc
int3
or
jecxz
cmp
inc
mov
daa
inc
lods
push
and
movsb
sarl
mov
sbb
adc
sbb
adc
daa
cld
cwtl
jae
add
inc
cmp
adc
mov
sbb
and
test
add
insl
sbb
mov
cwtl
fdivl
and
mov
mov
mov
in
add
xchg
push
xchg
mov
nop
push
sbb
add
pop
or
inc
xor
dec
ds
rorl
and
call
jae
xchg
dec
loope
push
in
adc
imulb
sbb
jno
ljmp
or
sbb
push
cmp
jecxz
stc
in
lock
cld
test
or
loop
repnz
int
xorb
movsl
mov
ja
cmpsb
fdivr
dec
mov
xorl
mov
add
cmp
sahf
cld
test
and
movsb
popa
add
dec
ljmp
push
pop
mov
add
dec
pop
sarb
adc
or
or
cmp
push
sbb
or
mov
sbb
pusha
mov
cmp
lods
add
xchg
inc
mov
aaa
sub
fs
push
inc
lds
movsb
xor
or
out
add
push
fisubs
mov
ljmp
daa
fdivrs
pop
icebp
aas
jae
cwtl
mov
push
adc
inc
jl
pop
adc
and
or
add
inc
aam
jmp
out
push
cmp
xchg
sbbb
and
je
xchg
inc
cmp
cmp
sub
cmp
movhps
test
adc
dec
cmp
inc
or
add
dec
test
add
fcmovnb
rorl
pop
push
push
inc
and
mov
push
dec
cmp
movsl
aam
add
dec
ds
nop
cmp
xor
sbb
jmp
lods
sub
push
cmp
add
divb
pusha
pusha
nop
cmp
fildll
cld
repz
popf
pop
xor
in
mov
movsl
add
add
xor
je
add
sahf
push
nop
cmp
adcl
push
cwtl
xchg
add
aad
mov
mov
jo
add
fcmovb
call
mov
idivb
xor
loope
pop
int3
fsubrl
adc
add
test
add
mov
pop
dec
pop
sbb
sbb
jle
add
pop
pop
mov
cmpsb
sbb
inc
pushf
inc
aam
mov
mov
lea
and
xchg
sub
es
popa
enter
shrb
js
cld
mov
inc
mulb
aam
pop
mov
pop
adc
or
xchg
rcrb
mov
subb
mov
jno
inc
orl
sub
test
subb
arpl
push
dec
push
mov
sbb
jecxz
sub
aam
mov
rclb
and
pop
xor
lcall
rolb
add
shl
push
mov
and
cmp
push
lods
int3
loope
push
inc
test
add
and
cmp
shll
adc
jbe
sbb
sub
cs
mov
xchg
sub
adc
jmp
sti
jno
and
cmc
xor
leave
cmp
cmp
cmpsl
in
je
les
ret
xor
add
mov
sbb
imul
fwait
lods
pushf
movsb
dec
in
sub
pop
in
addb
cmc
pop
ja
jbe
sbb
daa
pop
jb
or
cmp
inc
add
idivb
adc
add
mov
test
in
ret
jmp
fcoml
insl
je
dec
lods
out
add
rcrb
or
inc
or
js
popf
cld
adc
andb
inc
aas
mov
in
add
xchg
rolb
fstpl
dec
cmp
dec
push
or
mov
adc
dec
jmp
add
inc
icebp
add
addr16
rcrb
add
mov
test
push
mov
adc
imul
jnp
or
push
pushl
ljmp
xchg
add
fistl
cmc
inc
sub
jb
xor
xorb
les
and
call
mov
aam
cs
pop
inc
loop
repnz
lahf
stc
lock
xor
and
mov
call
push
pop
aam
cmp
stc
mov
add
sbb
outsb
mov
in
push
arpl
pop
mov
jge
inc
aas
ret
xor
mov
divps
add
nop
imul
sub
outsb
cmc
ds
in
or
sarb
sub
pop
inc
test
and
push
cltd
add
and
pop
lea
mov
stos
mov
filds
push
es
jb
aaa
jmp
xor
and
mov
test
adc
rolb
mov
jmp
mulb
push
xor
das
inc
pop
rclb
xchg
pusha
push
xor
movb
sub
cmpsl
stc
mov
inc
inc
fimuls
cs
call
dec
jnp
push
dec
and
lock
add
xchg
lods
dec
add
rclb
daa
ja
mov
lock
in
loop
jo
add
lds
das
incb
repz
cmp
adc
push
adc
or
jecxz,pn
or
xchg
cwtl
pop
dec
aaa
add
aad
scas
sbb
mov
push
nop
es
adc
fiadds
xchg
out
adc
movsb
dec
adc
andl
jae
sbb
in
add
pop
fisubl
push
movb
adc
daa
and
loopne
adc
jo
mov
and
repz
int3
cwtl
mov
outsl
ja
and
insb
inc
js
sahf
xchg
mov
xor
jmp
mov
pop
in
test
sbb
int3
and
popf
inc
add
sbb
jmp
cmp
jmp
inc
repz
lret
frstor
adcl
aas
gs
les
or
push
mov
cmp
sub
jnp
lods
inc
push
lret
rorb
sbb
cmc
aas
add
es
mov
pushw
aam
outsb
out
insb
pop
mov
or
fsubrl
xor
sbb
ljmp
xlat
repnz
mov
lock
fdivrs
add
add
daa
orb
add
pop
cltd
sbb
pop
pop
sub
cmp
cmp
mov
cmp
xor
and
stos
addb
or
inc
jne
fs
mov
lret
add
xchg
leave
adc
ret
jae
sbb
inc
pop
je
and
in
xchg
add
loop
jg
inc
es
add
adcl
xor
rorb
push
mov
cmc
or
jge
or
call
ja
loope
push
xor
arpl
hlt
jno
in
or
enter
add
popa
fwait
pop
lds
or
mov
and
sahf
add
add
add
adc
incb
ret
sbb
pop
cwtl
mov
or
adc
sbb
push
mov
xchg
pop
pop
or
pop
pop
adc
push
enter
stos
add
mov
mulb
xchg
in
push
jo
inc
and
push
xchg
lods
inc
cli
xchg
lds
cmp
adc
adc
aam
or
repz
addb
js
pop
jecxz
add
jb
xor
xchg
test
mov
je
sbb
push
popa
lret
scas
les
push
out
sbb
rolb
call
imul
leave
add
mov
adc
inc
xor
add
ds
add
jmp
aaa
lret
inc
add
movsb
lahf
std
lea
arpl
cld
cld
sbb
cmp
jne
xor
call
dec
jnp
add
xlat
and
or
clc
add
mov
xchg
jge
inc
loopne
adc
std
cmpsl
mov
dec
pop
push
sbb
mov
jge
mov
aaa
cmp
push
jle
int3
sti
fmull
add
call
adc
mov
add
cli
cmc
icebp
lret
in
ror
loope
add
out
and
lcall
aas
cmp
outsb
mov
pusha
or
mov
lret
aad
adc
stc
das
pusha
dec
negl
sub
mov
mov
add
inc
and
inc
jle
pmullw
inc
jne
mov
add
cld
add
add
and
lods
xlat
int3
jp
addl
outsl
add
mov
sub
lds
pop
sbb
jl
dec
add
mull
jb
rorb
cmpsl
add
and
sub
pop
int3
mov
rolb
add
adc
lock
mov
lods
cmpl
loop
jb
jle
mov
adc
cld
je
out
cwtl
dec
into
cmp
out
add
lret
test
and
pop
and
push
test
lret
out
jno
cltd
adc
jecxz
xchg
and
sbb
cmp
push
add
sbb
sbb
xchg
and
mov
add
inc
aam
add
mov
imul
xor
ds
jecxz
mulb
jge
jo
fcom
push
inc
jns
xchg
repnz
push
mov
or
push
sbb
test
cmp
mov
add
stc
scas
inc
fsub
add
mov
mov
pop
out
mov
add
aam
pop
and
jmp
sub
add
sti
add
inc
pop
add
call
pop
test
test
cmpsl
add
cwtl
shl
pop
sti
adc
add
sub
stos
mov
test
and
or
xchg
lea
mov
cmp
push
dec
pusha
jecxz
push
sub
sbb
jle
shlb
dec
or
jbe
push
aad
mov
inc
xchg
gs
pop
jno
fwait
mov
nop
adc
pop
scas
mov
mov
xor
mov
dec
test
pop
insb
xor
cmp
lods
andl
mov
add
loope
jl
sarl
push
inc
outsl
mov
sub
scas
daa
shlb
mov
cmpb
mov
pop
add
leave
adc
add
push
sbb
pop
add
test
sub
mov
add
inc
jecxz
cmp
mov
add
nop
shrl
movsl
cld
dec
sub
pop
in
add
sti
imul
outsb
mov
scas
sbb
call
xor
sub
jmp
aad
loop
cmp
fcompl
aaa
lods
out
in
call
sbb
ret
cmp
testl
inc
loopne
dec
sub
jo
inc
jno
repz
xor
fidivl
aad
add
int
xchg
add
xchg
xchg
sarl
push
xor
clc
mov
add
xchg
mov
aad
mov
dec
xor
or
jb
ret
push
dec
cmp
mov
mov
mov
cmp
dec
icebp
pop
cs
fsts
xchg
shll
fwait
cmp
arpl
mov
sub
mov
add
and
fdecstp
mov
neg
mov
lahf
out
sub
cmpsl
mov
sbb
mov
pop
loop
call
and
jmp
sbb
add
mov
test
inc
in
imul
sbb
xchg
fucomi
push
sbb
vprotq
daa
inc
jb
aam
std
xchg
add
mov
popf
in
adc
xchg
insl
roll
test
shr
lods
enter
cmc
xor
shl
data16
mov
dec
push
sbb
or
sbb
imul
xor
add
pop
jl
lcall
out
or
push
stos
hlt
dec
movb
test
push
mov
daa
into
jecxz
lcall
les
fstpl
adc
enter
hlt
dec
xchg
nop
mov
smsw
arpl
xor
and
add
pop
dec
dec
aaa
xchg
shr
add
je
push
add
jl
repz
add
dec
dec
shl
sub
mov
imulb
addr16
out
daa
add
inc
insl
or
out
cmc
mov
xor
andb
rol
add
in
cmp
icebp
shll
push
fsubs
add
and
lock
add
pop
dec
popa
add
and
incb
cmc
mov
fistl
adc
sti
dec
cld
mov
add
xchg
xchg
sbb
mov
cmp
adc
and
add
push
addb
add
xchg
mov
stos
outsb
xchg
test
xchg
scas
add
sbb
sub
mov
xlat
cmc
cmp
mov
clc
addr16
pop
jae
add
addl
imul
add
daa
lea
mov
xor
add
arpl
adc
mov
xchg
cmp
add
push
push
sbb
into
test
pop
lret
mov
cwtl
pop
xor
mov
push
cmc
inc
ret
and
jge
imul
orl
cmp
jp
add
fs
mov
add
sub
xchg
adc
lock
adcb
testb
adc
xchg
add
mov
push
pushl
sub
adc
mov
clc
pop
mov
xchg
push
or
dec
outsb
jno
mov
sub
lods
pop
mov
and
mov
jbe
cmpsb
fnsave
inc
xor
nop
insb
hlt
sub
or
push
aam
push
or
or
pusha
lock
lea
andb
jo
xor
nop
fimull
int3
leave
mov
mov
fisttpl
pop
orb
repnz
or
dec
push
mov
jnp
mov
sbb
cmp
cld
add
add
adc
inc
gs
pop
add
call
repnz
xor
add
psubsw
add
mov
push
cmpsl
add
int3
sub
out
adc
lret
jl
add
mov
xor
sbb
cmp
mov
pop
test
ds
or
mov
in
aaa
mov
push
add
icebp
les
mov
add
sub
ret
mov
dec
sbb
fwait
out
add
or
xor
push
add
shl
nop
loope
nop
test
iret
cmp
pop
dec
pop
les
repz
and
sbb
shll
sahf
sbb
ret
mov
outsb
xor
or
pushf
pop
xchg
and
sub
add
jo
push
cmp
mov
and
imul
adc
xor
lock
push
in
xor
jnp
mov
shll
sbb
jg
pop
and
leave
mov
movl
rcrl
jo
xor
add
jb
push
imul
daa
enter
dec
js
stos
jne
ljmp
or
fdivrl
mov
push
add
push
push
dec
xchg
inc
mov
repnz
inc
les
sub
lret
loopne
lods
add
pop
cmp
jp
mov
xchg
mov
xor
sub
aaa
add
stos
xor
call
leave
jb
and
cmc
stc
add
sahf
mov
sbb
push
dec
das
mov
xor
jmp
add
ret
xchg
add
out
inc
clc
dec
lret
dec
nop
jb
and
xchg
xchg
sub
leave
jo
cmp
and
dec
sub
imul
add
dec
mov
fsubs
dec
mov
popl
bound
and
dec
lock
mov
in
jb
sub
rol
ret
and
jo
add
lock
fldl
mov
cmp
sti
sub
ret
cwtl
xchg
or
mov
in
or
pop
out
aaa
sub
in
adc
dec
test
dec
add
lds
and
pop
push
mov
in
daa
pop
xchg
cmp
mov
pop
std
push
mov
enter
aam
cs
je
add
mov
mov
mov
mov
add
aas
adc
lret
mov
stos
add
mov
adc
es
pop
outsl
push
add
xorl
cmpsb
stc
add
adc
xor
jno
shlb
call
ficoms
jo
add
mov
cmp
pop
and
fwait
add
loopne
dec
or
dec
scas
sti
add
repnz
inc
push
cmpsb
sarb
lcall
lock
lea
insl
mov
loope
fiaddl
cmp
lahf
decl
inc
add
fbld
xchg
mov
push
cmp
rolb
sub
arpl
in
mov
nop
xorb
add
scas
int
jle
fadds
loop
stos
and
cmp
bound
rorb
mov
outsb
call
fsub
cli
add
jecxz
mov
into
add
dec
cmp
cmp
adcb
mov
adc
aam
add
fiadds
cmpsl
scas
xor
mov
or
out
jmp
mov
hlt
loop
enter
into
inc
fwait
xchg
jg
mov
bound
cmpsb
xor
push
add
es
cmp
jnp
mov
cltd
pushaw
xor
scas
mov
add
add
movsl
movsb
adc
push
movb
rcll
icebp
cmc
push
mov
push
dec
rcl
cmp
fadds
add
inc
mov
lahf
mov
mov
imulb
jge
aaa
loopne
stos
hlt
jo
pop
sub
dec
arpl
movsb
out
push
add
fistpl
jnp
loope
mov
jle
add
stc
and
mov
pop
pop
daa
je
mov
add
sbb
add
jo
add
push
ret
fldl
fadds
inc
inc
mov
sbb
loopne
sub
sbb
add
cltd
cwtl
ret
fistpll
cmp
push
bound
mov
push
imul
in
cmp
decb
sub
cwtl
jmp
mov
jne
add
pop
dec
stos
push
jp
add
clc
and
xchg
sbb
adc
pop
add
sahf
mov
inc
sbb
movsl
push
or
loop
push
add
adcb
lcall
inc
mov
int3
dec
add
out
and
sub
jmp
add
xchg
jne
addr16
add
shrb
movl
loopne
insb
sarl
ret
mov
adc
sahf
jecxz
jg
in
mov
js
mov
sub
pop
xchg
add
out
push
mov
cwtl
fildll
cld
add
pop
andl
fidivrs
push
loope
in
gs
mov
std
mov
test
aad
nop
add
rcll
imul
jg
iret
adc
add
pop
shll
cmp
mov
jecxz
pop
es
subb
sbb
sbb
add
nop
in
mov
push
or
and
mov
add
rorb
sbb
lods
add
test
adcb
or
jo
scas
aam
mov
test
xlat
ljmp
testl
sub
mov
sar
shlb
jb
cmp
xchg
outsl
xor
jo
dec
inc
incb
scas
xchg
mov
cwtl
or
and
pop
sbb
dec
sub
jbe
pushf
or
adc
mov
and
aad
arpl
mov
nop
daa
mov
mov
push
or
in
xor
sbb
outsb
insl
or
int3
in
pusha
dec
xchg
and
or
stos
mov
cmpb
test
add
and
ss
gs
jae
popa
test
lods
pushf
xchg
push
enter
sub
popf
adcl
lods
dec
sub
inc
xchg
or
push
xchg
sarb
lock
push
lret
mov
jne
and
incb
sbb
clc
aam
dec
aaa
shlb
test
lds
fiaddl
add
rcr
loope
lret
add
leave
xchg
rcrb
repz
popa
out
cmp
cmp
push
test
push
int
ljmp
xchg
movups
push
push
pop
movsb
test
cmp
jecxz
jnp
cli
bnd
push
js
adc
dec
out
add
mov
mov
mov
pop
pusha
imul
add
fisubl
xchg
test
das
or
or
add
div
std
cmpsb
pop
rorb
sub
insb
outsl
mov
out
xchg
sbb
cmpl
pop
xor
call
push
shll
sub
pusha
mov
dec
idivl
add
shl
pop
aaa
push
clc
jno
mov
cmp
scas
cli
jbe
test
rol
cmp
hlt
test
pop
sbb
or
cwtl
mov
sbbb
lahf
cmp
or
xorl
insb
out
xor
dec
push
or
mov
filds
aad
pusha
out
adc
ret
inc
jmp
xchg
add
fcom
and
leave
pusha
mov
inc
js
pop
pop
test
sbb
or
xor
jo
aad
pop
imul
or
xor
cltd
pop
sbb
add
sub
add
cmpsb
cmp
mov
ja
dec
fcomip
shl
mov
jmp
sbb
int
stos
sub
add
mov
xchg
xor
adc
jle
bound
add
fldl
pusha
rolb
imul
test
sbb
aad
or
addl
xchg
push
jno
cs
xchg
stc
sbb
xchg
icebp
jmp
mov
pop
dec
add
arpl
adc
dec
add
aad
test
cli
or
lods
sub
pop
rcll
mov
loope
pop
xchg
xchg
and
push
jns
rorl
push
les
mov
lahf
inc
and
pop
fidivrl
rcrb
sti
xor
cmp
inc
push
loopne
adc
mov
je
jecxz
aad
int3
cld
pop
jge
add
cwtl
pop
popl
test
add
sub
inc
mov
addb
cmp
sub
add
jp
jae
int3
cmovge
rol
add
mov
sub
add
push
icebp
cli
adc
call
dec
ret
stos
dec
mov
cmpsl
jae
test
add
pushf
iret
repz
mov
dec
sbb
lret
sub
out
call
lock
mov
out
lcall
out
add
add
andl
inc
jle
shrl
loopne
pop
jg
fidivs
shrl
in
or
or
xor
inc
dec
stc
jb
jle
add
pop
ljmp
arpl
mov
jg
je
add
shll
add
inc
jmp
xorb
les
add
mov
ja
xchg
cmp
loopne
xchg
imul
sub
sbb
jecxz
subl
cld
pop
sarl
cmp
mov
dec
jae
add
sbb
pop
adcb
rcl
push
outsb
es
enter
gs
mov
ja
sbbb
jo
inc
icebp
jge
imul
notl
mov
or
xor
push
mov
jo
adc
adc
loope
movsl
lcall
in
jns
add
popa
daa
outsl
mov
add
mov
das
lahf
mov
ret
add
mov
lcall
rol
xchg
or
jo
loopne
push
dec
les
dec
iret
fimull
sbbl
sbb
sbbl
add
fcomip
xchg
xchg
ljmp
mov
inc
dec
add
ds
and
push
test
fsubl
push
add
divb
push
enter
add
out
adc
fdivl
testl
dec
sarl
and
loopne
fmull
psubb
and
add
dec
push
pushf
dec
jbe
mov
cmp
adc
les
loope
sub
addb
cmp
dec
mov
enter
sbb
pop
cwtl
sar
std
mov
in
cs
outsb
jno
aas
scas
aas
inc
or
ss
sub
in
push
xor
aaa
incl
sbb
xor
lahf
push
enter
cmp
subb
dec
jo
push
mov
sub
repz
cmp
jmp
sbb
inc
pop
pushw
test
xchg
call
mov
dec
and
and
sub
mov
movb
sbb
imul
push
push
and
cmp
mov
stos
div
push
lds
mov
dec
lea
out
enter
ror
dec
sub
repz
add
popa
push
mov
xor
out
xchg
mov
in
stos
add
lods
aas
add
pop
outsl
mov
mov
or
in
popl
mov
iret
mov
mov
repnz
add
mov
cmp
mov
ret
std
mov
adc
adc
xchg
push
clc
add
mov
jno
pop
xchg
popf
and
idivl
imul
dec
or
mov
jmp
in
mov
add
andl
push
or
sub
test
cmc
push
mov
gs
shlb
fisubrs
ret
pop
dec
dec
ljmp
mov
imul
jbe
add
xchg
test
das
aaa
dec
cmpb
popa
add
add
and
push
inc
or
mov
add
shlb
jae
ss
add
je
inc
popf
sbb
test
dec
pop
mov
shrl
mov
dec
aas
and
push
or
mov
movsl
clc
xchg
arpl
mov
ja
lds
add
loope
jns
cli
test
std
ljmp
or
lret
int
mov
pop
cs
hlt
hlt
inc
nop
cld
add
sub
sbb
neg
jo
adc
sub
popa
clc
bound
cltd
cmp
leave
pop
repz
mov
pop
pop
addr16
sbb
push
lods
and
orl
inc
push
outsl
ljmp
test
xchg
dec
add
mov
adc
sbb
mov
leave
mov
mov
inc
insb
xchg
add
cs
add
push
nop
xor
lret
push
js
je,pt
xor
or
adc
fwait
add
push
xor
pop
add
pop
push
sbb
xlat
clc
inc
loop
fnstsw
push
add
xchg
mov
cltd
dec
jbe
add
mov
cld
pop
lods
test
mov
and
inc
adc
pop
mov
mov
add
mov
push
pushf
lds
int
mov
add
inc
jp
in
shlb
jne
ja
jge
int
sbb
ds
sbb
and
add
xchg
in
hlt
dec
mov
add
in
push
mov
pop
cmp
dec
stc
or
ret
into
jb
cmp
scas
add
adc
adc
add
jne
push
xchg
push
jmp
cld
xorb
add
cli
mov
mov
add
or
in
fidivrs
jno
es
aaa
add
inc
pop
inc
in
add
test
cld
bound
cmp
stos
pop
push
lahf
negb
cmp
inc
lock
jg
push
xor
mov
inc
mov
bound
cs
decl
push
pusha
cmpsb
nop
enter
pop
and
mov
push
popa
insb
mov
sbb
rorl
jbe
addl
xchg
jge
adc
mov
and
add
test
fdivrl
add
popa
mov
movsb
out
add
hlt
xor
out
inc
sbb
ljmp
cs
mov
mov
incb
add
scas
xor
and
add
stc
push
xchg
mov
jae
add
jne
add
adc
shr
sarb
jns
cmp
arpl
jp
je
mov
mov
mov
and
movsl
inc
rcrb
iret
push
out
mov
repz
adc
add
stos
cs
enter
pusha
pop
and
sbb
xchg
mov
movsl
enter
call
and
add
loopne
movsb
add
out
std
cmpsb
pop
lret
rorb
jno
pop
lds
xchg
nop
add
movsl
mov
orb
ljmp
aas
test
cs
sahf
fildll
cld
fmull
mov
aaa
cwtl
add
add
sub
jmp
mov
jns
sbb
mov
roll
cmc
fisttpll
sub
xchg
xor
jl
in
aaa
xchg
mov
xor
lret
or
ss
add
pop
sbbb
lcall
xchg
movsl
fwait
repz
addb
add
jp
jge
push
xor
add
push
add
stc
addr16
mov
and
inc
jnp
test
and
push
es
rcrb
sub
aam
push
add
mov
push
add
mov
push
adc
je
out
mov
inc
and
shlb
push
add
enter
pop
dec
pusha
or
je
rcrl
push
lret
inc
mov
filds
and
xor
xor
add
mov
mov
push
aam
add
dec
insl
icebp
inc
jge
aad
out
sub
fadd
add
pushf
fistpll
add
jg
cmp
enter
fadds
rorl
repnz
aas
jae
mov
sub
scas
fldcw
push
or
or
testl
and
mov
js
xchg
add
scas
mov
mov
das
out
addr16
mov
faddp
roll
dec
cwtl
xchg
push
fstp
add
dec
js
cmp
outsl
in
inc
nop
mov
fstps
cmp
xchg
xor
inc
mov
mov
imul
add
cmc
popf
adc
sbb
mov
inc
loopne
shlb
mov
sbbb
push
das
stos
fildll
pop
jbe
hlt
bound
jecxz
push
xorl
push
shll
push
je
sbb
cmp
adc
rcr
add
das
mov
xchg
xchg
mov
push
movsl
mov
cmpsl
rcr
in
pop
inc
lds
and
mov
xor
adc
push
cltd
test
loop
cwtl
arpl
sbb
addl
mov
push
shlb
inc
mov
mov
and
inc
ds
jnp
add
add
pinsrw
adc
xorb
and
adc
xchg
leave
mov
push
mov
sbb
popf
fstpt
inc
repz
adc
int
adc
rcrl
mov
jae
cmp
jp
cmp
pop
lea
js
sub
mov
dec
or
call
xor
cmp
shrb
pop
pusha
sahf
out
mov
mov
inc
jecxz
push
outsb
mov
loop
ret
mov
outsl
mov
xchg
cmp
int
movsl
pop
jmp
ret
cltd
mov
add
das
mov
popf
add
testl
add
in
sbb
rolb
dec
or
loop
push
jge
fdivrs
add
or
in
pushf
mov
lcall
es
dec
mov
xor
or
and
inc
repnz
in
add
orl
js
add
sub
cwtl
out
dec
int3
or
mov
adcl
xorb
stc
add
movb
fs
sub
aam
pop
cmpsl
mov
pop
adc
add
sbb
xchg
adc
lret
adc
mov
inc
add
dec
addb
fs
and
jecxz
push
push
ljmp
and
pop
je
js
jge
push
pop
mov
mov
add
dec
test
inc
push
aad
add
mov
lret
nop
mov
ss
test
rclb
adc
popf
andb
xor
mov
shlb
add
sub
and
out
ror
sub
pop
cld
xchg
add
jo
std
cmp
adc
cld
pop
add
adc
pusha
pop
sub
xor
cmpsl
inc
xorb
mov
stc
add
sub
sbb
rorl
sbb
and
out
inc
cwtl
adc
add
xchg
cli
enter
cmp
add
adc
push
sub
faddl
sub
popf
or
lods
cmc
push
cmp
into
cmp
cmp
pop
iret
add
jg
movsb
shll
cmpsb
lcall
lahf
shl
and
add
es
mov
flds
adc
add
adc
cli
mov
add
enter
js
hlt
mov
push
or
dec
jp
sbb
pop
push
mov
int
fildl
jo
jne
insl
cmp
test
add
into
lock
rorb
rorb
test
ficomps
pusha
sbb
sbb
jb
sub
lods
xchg
incl
xor
push
push
mov
or
add
jg
push
push
into
add
nop
add
dec
pop
inc
xcrypt-ofb
cmpsl
in
lods
dec
ret
adc
int
outsl
cmpsb
and
add
xor
lcall
mov
mov
sub
add
in
add
jns
mov
nop
sub
jne
add
pop
les
imul
jns
mov
cmp
mov
lret
mov
xor
or
rolb
dec
xchg
stos
add
push
sbb
mov
xlat
leave
xor
xchg
enter
or
sub
dec
xor
cmp
pusha
inc
push
xchg
faddl
nop
mov
in
xor
rcl
lret
pusha
mov
and
cs
xchg
mov
jecxz
sbb
nop
or
mov
scas
movb
lret
fdivl
adc
adc
fs
inc
xchg
inc
jl
loopne
cs
outsl
cmp
push
pop
hlt
jge
adc
push
pop
adc
mov
pop
and
ficomps
add
pop
in
jmp
and
in
js
xchg
movsb
js
add
addr16
add
sub
push
xor
cmp
dec
leave
ja
arpl
call
in
jle
shlb
popa
es
outsl
cmp
mov
repz
lods
and
push
mov
dec
xchg
xor
add
lret
int3
pusha
or
mov
push
loopnew
lock
push
js
jl
sub
in
movsl
out
xor
mov
mov
adc
orl
adc
mov
lret
sbb
int
aaa
add
mov
dec
pop
push
rorl
jbe
cmpsb
cmp
mov
leave
pushl
cs
pop
nop
out
aad
adc
cltd
add
shl
xor
and
mov
jo
jnp
sub
add
pusha
push
lcall
or
xor
lock
out
lods
xlat
cmp
xchg
add
sub
cmp
cmp
lcall
subb
add
in
test
fmull
ret
sbb
std
jne
mov
sub
xor
mov
or
call
fcmovb
pop
add
bound
sub
aam
cmp
xor
or
rolb
int3
popf
fld
sti
hlt
add
sbb
testb
cli
in
adc
pop
adc
shrb
jmp
outsl
sub
push
mov
xchg
mov
cmc
ds
shl
repz
cs
shll
mov
xchg
call
add
int3
or
sbb
sub
in
lret
sbb
les
mov
mov
push
add
add
out
sub
push
icebp
popf
push
int
xor
mov
pop
cmp
lret
sahf
adc
ja
add
and
test
or
roll
cli
push
xor
sbb
push
pop
cmp
add
and
fmull
mov
sarb
test
adc
xor
nop
inc
jo
add
dec
xor
lods
les
xchg
test
mul
push
je
hlt
inc
setno
cmc
add
jne
out
mov
idivl
out
jmp
mov
insl
out
mov
sti
add
outsb
mov
pop
mov
inc
xchg
xor
xor
mov
insb
push
jmp
das
and
inc
push
xor
adc
in
out
daa
rclb
ficoml
jae
xorb
fsubrl
sub
xorl
xor
inc
repz
in
popa
pop
push
jno
mov
xor
xor
push
jbe
nop
or
insl
int3
mov
push
add
add
lds
movsb
dec
test
std
xchg
add
pusha
mov
xor
leave
imul
gs
sbb
adc
frstor
push
test
inc
ret
cmp
xor
nop
imul
lock
les
and
xor
adc
push
mov
and
add
sbb
in
xchg
add
lock
mov
movsb
pop
cmp
mov
and
jg
add
aas
sub
lret
xchg
addb
adcb
in
jbe
adcb
cmp
sbb
cmp
jb
das
mov
mov
adc
outsb
xchg
push
push
adc
jle
xchg
js
cli
mov
mov
push
and
data16
mov
lods
fisubs
xorb
add
leave
xor
in
dec
mov
es
lods
mov
lret
aaa
sub
pop
scas
rcll
fmulp
and
mov
sbb
loope
ss
add
ret
xchg
xor
pop
sub
fsubs
sub
mov
dec
add
mov
div
call
cmp
js
xchg
push
ja
mov
sub
push
pop
pop
sbb
roll
std
sbb
add
mov
fwait
jp
lret
cmpsb
sahf
cmp
pushf
in
inc
popa
dec
mov
cmp
repz
cmp
ds
add
insb
popa
lds
sbb
adc
aas
push
lds
movsl
xchg
fldenv
clc
xor
shll
jle
add
dec
sahf
mov
sub
or
js
out
jns
sub
adc
insl
and
out
xor
cltd
jecxz
cmc
jae
pop
enter
lds
jbe
push
push
jno
decb
testb
adc
cli
xor
sbb
incb
incl
and
repz
adc
add
push
rcrl
shlb
mov
rcll
int
shlb
loopne
cmp
pop
mov
and
sub
pop
sbbb
les
ret
adc
add
push
lock
mov
xor
and
ljmp
or
shrl
add
jnp
xor
je
add
lock
popa
stos
mov
jge
add
movsl
in
callw
lcall
xor
outsb
adcb
js
and
xor
add
pop
daa
nop
mov
inc
test
test
les
scas
add
scas
aad
dec
arpl
sbb
pop
pop
xchg
pop
add
jmp
add
mov
sarl
fwait
or
jmp
cli
ret
mov
sbb
aad
sub
lods
icebp
pop
aaa
jo
arpl
inc
xor
in
jg
mov
jns
xchg
pop
lahf
pop
addl
push
aam
test
cmpsb
clc
add
pusha
inc
push
stos
les
rcrb
add
cmp
push
clc
fsts
push
push
roll
mov
jmp
mov
and
cmpl
ror
sbb
dec
add
fwait
imul
add
add
jb
cwtl
incb
sub
xchg
xor
insb
and
sub
cmp
ficoml
inc
mov
dec
mov
xor
lods
rcrb
inc
xchg
xchg
add
pop
jecxz
fmull
es
pusha
idivb
mov
imul
fsubrl
lds
outsb
test
cs
inc
mov
push
push
outsb
mov
pop
sbb
xor
pushf
adc
xor
je
in
or
sub
and
roll
xor
imul
inc
cwtl
push
aam
add
out
test
dec
jb
mov
xchg
and
frstor
in
push
popa
push
andb
stc
jbe
sbb
fistl
js
cmp
test
sarl
add
and
iret
xchg
aam
adc
mov
andl
add
xchg
movsb
mov
lcall
clc
out
mov
dec
push
xor
int3
xchg
sub
cs
pop
xchg
mov
mov
int
xor
je
and
cmp
data16
add
insb
clc
in
loopne
xor
push
popa
les
shlb
sbb
in
imul
mov
fistpl
push
push
cmpl
push
push
cld
xchg
pop
jo
andl
fldcw
adc
mov
add
fldcw
in
push
push
stos
fmull
loop
add
hlt
mov
push
pop
pusha
mov
lret
mov
push
mov
fldcw
dec
xor
stc
cmp
shl
icebp
mov
push
jg
add
sbb
sub
pop
add
popa
imul
shlb
mov
js
call
js
adc
and
loopne
cli
jne
dec
pusha
lods
lret
in
push
popa
push
cmc
jb
scas
scas
jmp
add
dec
js
xor
test
shrl
and
mov
mov
xor
in
fistpl
inc
mov
cs
les
push
mov
add
add
fs
push
leave
popf
push
add
add
pop
xchg
int3
insl
arpl
shll
insb
mov
rcrl
add
test
push
scas
add
pop
inc
arpl
push
and
cmp
stos
add
repnz
dec
sub
cmp
mov
in
repnz
aad
stos
pop
or
jno
jle,pt
stos
and
xchg
add
pushl
rol
subb
adc
imul
insb
adc
add
mov
js
pop
in
add
pop
ror
jl
movsb
mov
ret
test
add
stos
roll
in
nop
test
imul
xor
push
push
rcr
shl
mov
dec
push
add
xchg
push
outsl
xor
cwtl
enter
add
adc
cltd
mov
add
and
xlat
or
jb
add
sub
xor
add
cwtl
imul
push
xchg
add
dec
cmp
xchg
mov
inc
std
int3
outsl
xor
xor
push
adc
hlt
mov
arpl
call
fidivs
stc
and
pop
adc
cmp
sub
mov
jae
jl
dec
std
into
in
jge
xchg
fldl
xor
daa
pushf
mov
mov
push
loopne
cmp
das
adc
cmc
test
mov
clc
mov
pop
xchg
push
arpl
pop
or
cmp
and
add
inc
sahf
rclb
test
push
push
rdtsc
lret
xor
movswl
jge
push
xchg
xor
roll
js
and
xchg
pop
jae
or
xor
jb
mov
aam
ret
out
pop
add
insb
xchg
push
jg
cmp
movsb
pop
into
mov
mov
pop
cmc
lret
pop
imul
test
js
fidivs
sar
adc
mov
jbe
shlb
add
mov
add
jnp
cmp
and
inc
add
inc
mov
cmp
in
lods
insl
jecxz
adc
movsb
mov
gs
jbe
std
arpl
inc
add
cs
or
jae
popf
imul
and
xchg
dec
popf
jbe
in
add
add
jl
pop
cld
sbb
popf
and
rcrb
sbb
add
pop
shll
or
cmp
cmp
mov
cmp
gs
and
mov
add
add
je
pop
cmp
in
cmpsb
inc
pop
cwtl
stc
mov
das
les
sti
stos
loopne
gs
add
jbe
jmp
or
lock
cli
sti
add
sahf
pop
pop
mov
mov
push
cltd
and
aam
add
out
pop
add
shrb
mov
inc
lret
push
lea
shrb
and
bound
or
mov
pop
stos
or
insl
int
cmp
outsb
js
adc
imul
enter
cld
and
ljmp
data16
cmpsl
std
mov
mov
xor
nop
aam
pop
or
or
sub
out
add
xor
or
sarl
xchg
adc
lcall
sbb
xor
xchg
insb
repz
mov
int
inc
mov
or
idivb
shrb
jg
cmp
cwtl
sub
xor
inc
mov
and
jl
adc
push
mov
shr
sub
stos
cmp
cmp
pop
add
rorb
add
stos
mov
jge
mov
add
xchg
cs
ficoms
addb
adc
mov
arpl
mov
mov
sbb
add
dec
push
cmp
dec
lds
and
mov
mov
in
cli
jge
call
mov
mov
add
cmp
mov
adc
enter
sbb
int3
pop
dec
cmp
test
push
xor
aas
add
or
sub
test
out
mov
ret
bound
mov
jne
push
mov
add
and
cmpsl
pop
shlb
add
ror
sub
mov
fmul
mov
or
add
pop
std
rclb
loopne
xor
and
xor
push
lds
test
cmp
add
inc
push
xor
lods
xchg
imul
orl
adc
inc
add
lea
imul
xor
pop
mov
movsl
cmp
adc
mov
and
rolb
lret
pop
mov
lods
loopne
jecxz
arpl
push
sahf
and
adc
mov
and
cmp
adc
jecxz
mov
loop
push
enter
out
push
movsl
mov
add
cltd
fstp
adc
or
cmp
adc
sahf
flds
sub
jmp
mov
dec
xchg
push
xchg
ret
loopne
in
rcpps
sar
inc
in
movups
test
sub
enter
inc
subb
adc
movsb
mov
xor
cltd
rorb
cmp
dec
mov
lret
stos
add
sub
cld
mov
inc
psubusb
cwtl
or
push
cmp
xchg
push
scas
in
xorl
sub
add
mov
pop
iret
ss
test
test
push
add
pop
dec
andb
lret
in
inc
dec
mov
sub
and
loope
cmp
les
fsubrl
adc
jecxz
sbb
add
pop
bound
arpl
or
add
loopne
pop
sbb
mov
inc
lret
nop
adc
stos
add
xchg
aam
in
mov
adc
loopne
push
pusha
cwtl
aas
xor
jno,pn
adc
sbb
loop
add
add
fcompl
mov
in
add
or
xchg
add
adc
out
mov
lahf
inc
jae
les
mov
pop
mov
loopne
xor
add
pop
incb
stos
sub
jp
and
jo
lahf
leave
loopne
and
xor
shrb
pop
add
jb
cmp
push
mov
lea
push
push
or
and
sarb
pop
add
xlat
mov
jae
pop
jge
punpckhwd
mov
inc
xchg
mov
rol
movsb
jp
push
xlat
jle
sub
outsl
iret
dec
movsl
pop
loope
test
jle
mov
imul
and
jne
and
xor
cmp
push
je
sbb
adcl
inc
test
dec
test
out
mov
lds
cs
pop
push
inc
mov
roll
das
in
add
fwait
mov
xchg
aas
mov
sahf
and
xor
xchg
pop
lret
add
mov
jl
fdivs
xor
xor
adc
insb
adc
adc
cmp
pop
test
mov
xchg
mov
ret
jb
lret
adc
add
popa
fistpl
daa
pop
push
pop
cmpb
nop
in
sbb
dec
pop
cwtl
addb
jbe
add
std
xor
or
xchg
add
adc
clc
int3
insb
rcl
or
int
outsb
div
add
jg
mov
outsb
xor
daa
cmp
xchg
dec
mov
add
xchg
pop
aam
gs
xor
insb
xor
push
xlat
ja
popf
push
std
rcrb
into
lds
out
sbb
adc
rorb
sti
or
orb
dec
int3
cltd
and
sub
dec
xor
sub
mov
das
in
sbb
pop
pop
inc
cmpb
xchg
pop
mov
cmp
fsubr
pop
and
mov
fstl
rcrb
pop
popa
call
adc
adc
and
inc
stos
lods
pop
adc
leave
add
jg
aam
test
xor
push
pop
add
dec
xor
add
jo
or
pop
stos
mov
add
inc
int3
sub
movsb
in
adc
hlt
sbb
cmpsb
je
mov
fldenv
xchg
inc
jae
adc
cwtl
xor
ss
nop
loopne
daa
pop
sbb
jmp
sahf
pop
inc
inc
es
jb
adc
inc
mov
push
dec
pop
inc
in
push
jae
je
push
pop
fs
arpl
lock
ss
jo
stos
cld
jae
orb
cld
mov
adc
or
lcall
push
stc
pop
repz
jle,pn
dec
adc
and
pushf
mov
sbb
jle
and
pop
pop
add
iret
mov
cltd
adc
or
add
inc
or
shl
fs
and
fs
add
fidivl
mov
movsl
sbb
ret
imul
in
stc
xor
rorb
cltd
or
add
pop
daa
xor
mov
ret
out
mov
sti
addr16
repnz
jb
add
sbb
add
mov
loopne
mov
mov
arpl
shlb
ret
add
xor
stos
sub
sbb
xchg
mov
push
add
ret
out
add
sub
loope
pop
and
inc
enter
addb
mov
or
fildl
shlb
jo
push
pop
add
sarb
adcl
sub
test
mov
or
xor
sub
bound
xor
add
jnp
ja
mov
sub
push
call
mov
add
push
push
pop
movsb
add
js
stc
mov
lods
add
lahf
dec
aad
out
cld
dec
and
adc
add
and
xor
mov
enter
inc
mov
mov
ficompl
mov
or
or
stos
ss
cwtl
add
inc
fmull
jl
cmpsb
and
or
shlb
mov
test
shrb
mov
or
sbb
arpl
dec
das
and
stos
fildll
mov
cmp
rolb
add
push
repnz
push
inc
rcll
cmpsb
push
test
popa
repnz
pushl
sub
lds
jnp
hlt
inc
pop
and
inc
adc
cmp
inc
pushf
mov
add
fcmovu
mov
and
cli
add
pushf
push
dec
clc
pop
pushf
dec
xor
dec
or
mov
add
push
sub
inc
jne
add
sarl
xchg
repnz
or
cli
mov
in
pop
test
and
sub
add
lret
icebp
int3
stc
mov
pop
in
pop
lea
jmp
push
mov
add
mov
icebp
rolb
aam
fistpl
adc
cmp
subl
xor
popa
and
add
sub
sub
add
pusha
add
push
inc
pushf
add
sahf
mov
add
jbe
adc
mov
cmp
dec
lret
add
addl
jns
js
sbb
or
mov
pop
fdivr
push
adc
es
jne
sub
sbb
inc
movl
out
into
andb
cmp
push
and
push
push
jl
test
test
les
int3
mov
add
push
xchg
push
lea
cmp
fiadds
aaa
and
xchg
adc
and
aaa
add
test
push
inc
jmp
inc
mov
xorl
xchg
and
repnz
int
test
xor
adc
addl
or
lods
scas
or
lret
xchg
sub
insl
add
pusha
and
push
xor
sbb
mov
mov
mov
jne
xorb
es
aam
insl
dec
sarl
add
mov
xlat
sbb
ret
in
add
lret
imul
dec
aam
loopne
shlb
adc
or
add
fldcw
in
push
cli
fwait
pushf
adcb
add
stos
pop
add
test
dec
jp
adc
cs
mov
adc
pop
adc
ljmp
xor
aam
cmpb
cmpb
add
inc
xchg
push
sub
dec
cli
or
fnstsw
fsubl
enter
insb
mov
aas
hlt
fs
and
dec
and
mov
dec
les
pusha
mulb
mov
cmp
rcll
or
xor
jl
adcb
mov
pushf
rclb
xchg
mov
push
inc
add
ficompl
lods
add
mov
cmp
rcll
push
mov
sub
jmp
lods
push
fmull
pusha
mov
hlt
nop
loope
clc
mov
popa
pop
pushf
cmp
popl
cs
xor
or
push
adcb
xor
addr16
aaa
add
jbe
mov
ret
add
push
addl
test
fisubrl
data16
mov
into
add
sub
stos
cld
add
aad
xor
les
int3
outsb
and
xchg
add
aaa
aas
xchg
inc
loopne
insb
mov
mov
test
imul
adc
cmp
add
sahf
mov
xchg
mov
in
inc
pop
push
pushf
xchg
jl
pop
pusha
adc
arpl
add
jb
lret
pop
pop
add
adc
call
xchg
push
orb
ret
roll
jae
int3
in
xchg
cmp
add
and
xchg
in
mov
adcl
push
cmp
and
aaa
mov
add
add
out
mov
movsb
cmp
pop
push
enter
xchg
pop
les
aas
push
test
cs
jge
outsl
cmovno
mov
in
aas
popa
push
pop
out
mov
shrl
pop
je
lods
add
test
dec
mov
roll
scas
mov
lds
sbb
aaa
shrl
je
and
dec
test
or
dec
insl
dec
xchg
rolb
enter
clc
add
out
push
inc
addb
je
jle
inc
dec
rolb
stc
pop
outsl
rclb
mov
sbb
popf
cmp
es
cld
pusha
push
cmpb
add
mov
lret
add
pushf
and
out
and
inc
push
outsb
popa
stos
add
and
push
test
mov
orl
cltd
xchg
rolb
leave
dec
stos
xor
mov
sub
mov
cmp
dec
enter
sarb
add
dec
add
enter
cmp
xlat
sarl
push
add
adc
xor
cmp
fldl
jae
stos
imul
js
mov
jle
mov
gs
and
add
test
xor
insl
lock
dec
and
popa
pop
or
pop
nop
les
add
test
rcrb
mov
cwtl
lock
scas
mov
inc
cld
add
pop
cmpsb
leave
scas
out
and
xchg
std
mov
aad
and
nop
inc
pushf
push
shll
leave
and
inc
in
xorb
inc
sub
pop
jae
push
test
in
adc
aam
xor
in
pop
cli
pop
je
cmp
iret
nop
stos
scas
add
into
xlat
repz
in
sub
fsubrl
add
pop
pop
gs
sbb
mov
push
clc
pop
adc
dec
rcrl
mov
insb
adc
pop
int3
inc
pusha
sarl
jg
add
shll
sbb
popl
cld
mov
sbbb
pop
pop
in
mov
push
arpl
jl
inc
dec
aas
bound
mov
sub
js
fwait
xor
jns
nop
mov
je
add
pusha
jno
dec
int3
inc
pusha
notl
mov
stos
cli
in
xchg
mov
test
loop
mov
and
ficomps
fucomi
loope
arpl
push
add
inc
jnp
mov
cmp
mov
adc
ljmp
push
addb
jne
pop
outsb
fcoms
pushf
cmc
hlt
cwtl
add
push
jo
dec
mov
orb
lock
xchg
or
movsb
xchg
or
mov
shlb
or
mov
test
data16
mov
shl
orl
jl
xor
jns
daa
aam
adc
mov
xor
xchg
ds
test
xor
ffree
push
cmp
mov
arpl
cmp
and
mov
add
cs
cmp
stos
outsb
add
mov
push
jo
je
jo
xor
pop
mov
push
test
lds
adc
lock
sahf
cmp
add
cmp
std
dec
out
mov
je
sub
or
lock
add
inc
cmp
mov
sub
aad
mov
pop
insl
jl
and
and
pop
add
sub
mov
addr16
inc
add
xor
outsl
testb
xor
mov
ret
mov
inc
jg
xchg
ljmp
add
add
lds
adc
iret
or
adc
jecxz
jno
xor
das
dec
dec
fdivrs
mov
repz
roll
andb
xor
shll
xchg
jmp
add
scas
hlt
jg
cmpsl
data16
sbb
cmp
addl
push
mov
enter
push
inc
pusha
les
mov
or
adc
dec
cmp
movsb
ljmp
adc
fiaddl
and
add
mov
mov
or
cmpb
pop
je
add
jnp
add
enter
pop
and
add
dec
popa
cmp
push
mov
js
mov
stos
pop
inc
mov
mov
orb
adc
sbb
or
sub
mov
rcrl
outsb
and
loopne
stos
cmp
and
sbb
lock
xchg
xor
mov
aam
or
rcll
push
test
sub
ret
shr
xor
mov
les
ret
add
outsl
lea
lods
mov
add
mov
lret
add
jp
mov
add
push
out
mov
cmp
and
jb
enter
add
in
inc
push
sub
mov
das
mov
popf
cmp
push
push
mov
jae
or
std
jno
aaa
add
sti
movsb
pop
add
sbb
mov
xor
sarb
jno
mov
pop
mov
vmread
cmp
pop
and
sub
mov
dec
mov
scas
in
divb
pop
pop
nop
hlt
xor
push
add
testl
int
iret
inc
fucomip
xchg
pop
jae
and
mov
loop
les
jae
aad
mov
dec
sub
push
ds
test
scas
add
fistps
icebp
push
xor
cmp
je
push
and
xorps
cmp
mov
dec
xor
jge
mov
je
scas
arpl
mov
int3
push
fs
and
mov
adc
cmp
std
pop
sub
loopne
in
adc
pop
mov
sub
subb
xor
adc
daa
dec
xchg
add
adc
or
out
fistpll
fistl
add
push
pop
mov
jb
add
pushf
jns
and
pop
lods
push
xor
mov
cmp
aam
ds
pop
jp
pusha
and
std
push
push
add
xchg
dec
or
in
or
mov
xor
roll
sahf
out
dec
jb
pop
stos
cwtl
fcoml
imul
add
and
dec
sbb
inc
sub
pop
jnp
cwtl
sub
sti
push
ss
lcall
pop
decb
pop
or
pop
and
dec
add
out
adc
orb
mov
jb
add
mov
add
cld
shlb
sbb
push
mov
inc
push
nop
int
in
inc
sbb
sti
out
and
pop
push
pop
aad
xorb
lock
outsl
int
and
filds
pop
aad
xchg
mov
testl
mov
add
fldcw
outsb
mov
ret
pop
movsl
fs
lahf
loop
mov
roll
or
push
cmp
adc
xor
popf
and
xchg
inc
add
push
mov
sbb
fisubs
popa
xor
pop
je
sub
xchg
jo
andb
add
ja
mov
outsb
pop
in
mov
cmp
mov
dec
and
loopne
pop
stc
push
add
cmp
cmp
into
dec
rorl
outsb
mov
adc
pop
addb
fsub
jns
andb
fcmovnb
orb
les
cld
into
and
adcl
inc
into
cmpsb
fistl
add
xchg
cmp
and
xchg
les
add
pop
addb
pop
adc
incb
cmp
pop
stc
or
cmp
rorb
and
or
mov
aam
sti
sbb
lock
les
sub
cld
clc
add
add
add
fcompl
enter
rorb
andl
sysexit
int
cmp
sbbb
add
cmpsb
xchg
adc
out
xor
hlt
pusha
cmpl
scas
add
lods
mov
lock
mov
loop
xchg
das
ljmp
sub
mov
xor
push
in
or
pop
int3
enter
sub
nop
add
mov
sub
cltd
cmpsl
add
outsl
mov
jno
nop
dec
in
dec
mov
enter
fiadds
mov
lods
push
sahf
rorb
push
mov
xor
and
xchg
scas
mov
xchg
inc
pop
add
out
int
xor
add
adc
xor
cmp
fmull
js
sbb
sbb
out
jg
loopne
cmp
or
arpl
or
xchg
add
and
es
test
xor
dec
jo
cwtl
push
mov
dec
test
cmp
cld
add
test
or
mov
fcmovnb
mov
add
xor
add
mov
addb
push
repnz
add
mov
test
insl
aas
movb
push
cmp
sbb
dec
lods
pop
xor
ror
xchg
mov
lods
add
insl
or
sbb
bound
jnp
lods
mov
arpl
mov
xor
nop
pop
pop
test
adc
xor
cmp
in
and
mov
adc
or
cld
pop
fldenv
mov
inc
add
lret
jns
add
add
pop
lea
add
mov
or
xor
mov
pop
hlt
test
xor
fs
cwtl
inc
enter
mov
xchg
add
lods
mov
imul
mov
sub
in
pop
popf
rcll
mov
sbbl
cli
hlt
in
jg
add
in
and
and
js
add
push
cli
shl
jge
nop
mov
xor
pusha
call
nop
adcb
xor
xchg
pusha
inc
adc
daa
hlt
push
shll
add
repz
decl
sub
or
cmp
xorb
add
adc
int3
dec
loopne
into
adc
push
shrl
stos
cmp
in
add
or
lods
mov
xchg
push
popf
push
pop
sub
xor
dec
dec
or
cmpsb
sbbb
nop
ss
cmp
cwtl
mov
enter
mov
mov
mov
jno
pop
jmp
cltd
mov
lock
in
cld
xor
adc
dec
call
push
push
in
into
js
add
imul
repz
and
or
hlt
scas
push
fidivl
loope
xchg
leave
pop
xor
outsb
xor
adc
mov
push
fs
test
addb
repz
clc
pop
rcll
cmp
adc
call
mov
push
scas
add
stc
sahf
inc
adc
xor
cmp
inc
push
pop
sbb
xor
in
add
and
add
fs
and
pop
and
jmp
mov
jp
pop
dec
movsb
add
fistl
dec
dec
sub
int
inc
pop
mov
jb
add
pop
inc
stos
outsb
imul
add
leave
inc
xchg
cmp
pop
adc
je
add
xchg
stos
sbb
subl
push
sahf
leave
sub
xor
add
rclb
daa
cmp
xor
sbb
add
mov
inc
cmp
sti
mov
imul
dec
ret
std
or
xor
xor
xor
inc
imul
out
in
add
bound
cmp
push
dec
push
inc
add
mov
add
fstpt
jnp
cmp
adc
es
aam
sbb
dec
sub
int3
bound
mov
pop
fsubs
test
mov
sub
aam
mov
push
mov
test
lret
or
mov
jg
add
cld
pusha
mov
fstpl
xor
add
rcrb
jnp
add
cs
mov
mov
jae
fisubrl
inc
add
fldl
shll
or
push
sbb
or
mov
inc
jne
xchg
pop
push
push
das
outsb
mov
cld
mov
sub
in
push
cmp
outsl
xor
mov
push
push
and
sti
hlt
cwtl
dec
jae
add
jnp
dec
rcrb
test
imul
lret
loop
and
and
adc
insb
dec
lods
rolb
add
ljmp
aam
insb
bound
enter
dec
mov
pusha
inc
mov
inc
add
adc
dec
inc
add
pop
daa
arpl
inc
mov
ja
dec
in
xor
insl
enter
add
clc
fmulp
cmpb
or
push
outsb
mov
lds
sbb
movsb
add
ja
fistl
insl
add
and
pop
cmp
addl
jecxz
in
adc
mov
mov
pop
in
rorb
aam
sub
sbb
into
sbb
ret
push
movl
rorl
pushf
mov
mov
sbb
pop
xor
dec
lods
push
and
mov
xor
mov
lods
icebp
test
add
xlat
loope
test
ljmp
adc
jmp
xor
movsl
nop
icebp
cmp
pop
rorb
rorb
sub
stos
inc
in
add
push
cltd
mov
xlat
arpl
mov
pslld
sub
push
sbb
je
nop
cld
or
cmp
test
adc
ret
mov
stc
mov
add
lret
and
iret
test
test
lcall
inc
pop
add
pop
jmp
or
fidivs
xor
and
in
lret
pop
mov
add
mov
mov
popf
adc
inc
add
sub
ret
call
or
in
std
and
bound
xor
xor
scas
add
jle
xor
jg
add
mov
daa
lods
in
mov
das
shr
sub
inc
jle
sar
in
push
pop
mov
in
repnz
rclb
aaa
jl
lock
push
orb
cmp
pop
push
mov
add
mov
out
or
or
js
pop
mov
add
mov
mov
adc
dec
mov
sub
pushf
aam
nop
add
jb
std
mov
aas
push
or
adc
cmovs
sti
xor
ja
add
cmpsl
ds
aam
push
adc
mov
sub
lret
sub
stos
in
enter
pop
les
adc
test
sub
inc
push
enter
pavgb
lds
test
adc
sbb
je
jbe
dec
sub
inc
or
rorb
adc
pop
add
mov
sti
filds
daa
idivb
mov
cli
lock
mov
and
nop
and
mov
loop
fdivrs
cli
ror
insb
pop
cmpsl
add
pop
push
push
fistpll
adc
out
fcoml
mov
mov
repz
sahf
mov
es
xor
add
pinsrw
test
and
sahf
in
lcall
inc
add
mov
mov
or
adc
xchg
xchg
filds
push
pusha
pop
gs
and
cwtl
dec
sub
add
test
mov
inc
pop
push
push
fisttpll
loope
outsb
or
adcb
xor
add
insb
daa
pop
push
xchg
repnz
dec
pop
jo
lahf
or
or
sbb
lea
jo
ss
ja
pop
pop
sub
sbb
in
push
cwtl
push
neg
and
and
shrb
push
and
into
daa
cmp
push
jecxz
loope
xor
lret
movsb
int3
add
dec
loop
cs
inc
mov
ljmp
mov
cld
outsb
push
sbb
inc
jg
cmp
mov
jno
adc
mov
dec
add
cld
add
mov
js
cwtl
add
pop
test
inc
adc
es
inc
push
addb
cmp
mov
and
ret
das
rclb
movsb
pop
popa
insb
xor
pop
cmp
pushf
add
or
movsb
out
sub
es
into
hlt
xchg
inc
inc
jle
push
or
rcrb
mov
subb
nop
xor
mov
cmp
lret
popa
fcompl
push
xor
clc
fildll
cmp
scas
or
aaa
pop
xchg
lods
dec
or
add
ret
test
cli
mov
push
cmp
jae
xchg
ror
int3
movsb
hlt
jo
jne
or
inc
dec
and
mov
xor
mov
xor
jmp
xor
dec
mov
cltd
icebp
enter
mov
mov
idivl
cmpsb
movsl
sbb
shll
dec
pop
js
add
das
std
sub
rclb
add
loopne
xchg
pop
imul
lcall
shr
jns
mov
xchg
mov
fnstenv
inc
sub
stos
cld
jo
orb
add
jmp
mov
and
outsl
lret
ret
shlb
adc
test
xlat
pop
sti
out
push
pop
pop
dec
and
test
dec
popa
adc
fildll
pop
and
rclb
add
pop
loopne
push
adc
mov
or
jno
enter
ja
idivb
jo
adc
add
insl
mov
je
mov
cmp
inc
add
pop
inc
test
subl
andb
popa
das
sub
add
jg
push
xchg
testl
cmc
in
xor
shlb
mov
ja
inc
daa
sbb
cmp
les
int
xor
stos
cmp
xchg
add
inc
inc
adc
inc
lock
sbb
popf
pop
gs
cwtl
xor
testl
pop
iret
push
sahf
add
sbbb
fidivrl
and
fsincos
sub
addr16
ret
data16
add
add
add
scas
pop
push
jmp
dec
shll
mov
mov
add
in
test
push
popl
pop
jnp
add
loop
pop
xchg
enter
fs
icebp
mov
and
and
mov
xor
bound
les
add
mov
mov
dec
scas
adc
out
adc
lea
movsb
mov
inc
ret
stc
xchg
jmp
loop
int3
ror
pop
inc
jl
mov
nop
lret
shlb
lret
cpuid
pusha
jmp
add
repz
sub
cmpsl
cmp
sub
es
daa
mov
jle
inc
add
sti
fwait
lods
pop
out
int3
add
mov
fadds
lea
add
daa
fnstsw
mov
add
and
shrl
bnd
ja
adc
out
je
lret
test
es
sub
sub
xchg
sti
adc
fadd
insb
sahf
mov
adc
imul
rorl
sub
dec
mov
stos
and
cmp
adc
sbb
push
and
dec
push
mov
mov
jb
add
fisttpll
pop
adc
in
cli
add
mov
sub
sahf
stos
lret
xchg
mov
or
ret
cwtl
clc
inc
test
or
add
jmp
fidivrs
jl
orb
mov
testb
sti
xchg
push
lahf
push
push
pop
inc
sbb
dec
add
xor
push
into
lds
push
or
sbb
push
inc
mov
mov
jbe
shl
xchg
and
and
cltd
cld
daa
mov
inc
test
cmp
cli
push
cli
pusha
loopne
xor
ds
movsl
sbb
enter
mov
repnz
daa
fs
or
test
adc
add
arpl
scas
push
inc
or
xchg
xor
test
xchg
fwait
test
inc
iret
das
inc
ret
insb
mov
or
testl
lds
lock
pusha
and
imul
push
or
dec
xor
push
mov
sbb
pop
jb
fdiv
or
xchg
cld
rcl
and
jbe
rclb
add
jge,pt
inc
add
lock
out
add
mov
mov
xlat
cmp
imul
ret
fimuls
push
aaa
test
or
push
in
dec
add
push
nop
jne
mov
dec
imul
or
out
cmc
inc
add
lcall
cltd
add
sarb
cmp
mov
lcall
int3
es
cmp
or
lret
fbld
push
xchg
inc
mov
dec
mov
sub
or
in
mov
add
in
ds
fdivs
lods
dec
mov
lret
fadds
mov
mov
shrb
xchg
mov
jo
cmp
js
xlat
fnstenv
jne
cmp
adc
pop
shll
or
mov
mov
mov
fcompl
insb
add
enter
xlat
mov
aas
mov
sbb
stos
or
and
mov
mov
adc
jge
add
cmpsb
aad
jmp
popa
xchg
clc
dec
mov
es
add
cwtl
dec
in
dec
inc
dec
arpl
and
roll
jmp
sbb
push
mov
out
jb
mov
in
xor
mov
adc
icebp
sub
and
call
adc
or
inc
pop
fidivl
hlt
add
movsb
pop
mov
jne
pop
rorl
jns
push
add
shrb
add
leave
insl
lahf
in
movsb
mov
sub
imul
lahf
mov
lds
pop
loopne
cwtl
in
cmpsb
inc
add
aam
test
adc
push
and
jle
push
sbb
xchg
add
dec
sbb
adc
push
fdivrs
mov
sarl
fldl
outsb
leave
mov
mov
add
scas
in
std
dec
add
push
xlat
mulb
or
or
cmp
and
mov
mov
mov
scas
jecxz
mov
dec
xor
sahf
into
test
sbb
fcomps
add
xor
add
mov
jb
add
movsl
aad
inc
mov
test
and
jecxz
ret
mov
adc
add
in
pushf
shrb
inc
add
lret
insl
sbb
rorb
jg
in
into
add
cmpsb
sub
stc
cmp
stos
adc
pop
push
jo
or
push
mov
addr16
fildl
ds
in
xlat
push
mov
mov
xor
jge
icebp
cmpl
push
enter
lock
mov
and
pop
sbb
jns
iret
xchg
add
repz
cli
fadds
cmp
mull
hlt
inc
and
sbbb
imul
adc
jle
mov
sbb
pop
add
mov
mov
add
jmp
lret
adc
in
xchg
dec
lcall
pop
mov
add
add
pop
dec
orb
dec
push
test
test
mov
xor
fcoms
mov
push
std
xlat
jge
lahf
push
jmp
arpl
sub
dec
xor
dec
notb
insl
popa
sar
xchg
movsl
mov
xchg
das
loope
into
pop
sarl
sbb
fimuls
jl
dec
and
and
jns
rol
movsb
loop
jp
call
xor
movsl
pusha
add
iret
inc
cmp
movl
movsb
cld
push
adc
and
adc
sub
mov
or
mov
stc
push
ret
sub
cmp
and
sub
pop
dec
push
es
push
mov
push
popa
lods
or
adc
pushf
pop
add
icebp
ljmp
movl
add
sub
push
mov
pop
dec
shrb
add
sbb
jne
mov
jno
lock
adc
ljmp
add
clc
test
stc
add
mov
and
cmp
pop
push
mov
dec
ja
hlt
cmp
pop
fldl
push
xchg
add
pusha
jmp
fwait
push
inc
pop
push
fs
es
cmp
pop
add
pop
or
stc
das
sbb
and
cmpsb
subb
cmp
fldl
xchg
push
punpcklwd
xor
ds
negl
pop
pop
outsl
sbb
mov
mov
lret
xor
loope
jmp
rolb
jp
dec
add
sub
sti
push
add
dec
mov
roll
popa
lret
into
push
or
push
or
dec
andb
cmp
jmp
lock
lret
sub
sbb
testb
pusha
add
out
adcb
shlb
inc
test
and
icebp
mov
sti
or
jbe
andl
loop
pusha
xor
cmp
js
leave
idivl
sub
and
push
test
xchg
adc
lods
movl
cmpl
pop
lret
sbb
pop
es
push
sub
add
push
mov
into
jo
mov
push
sub
outsl
sahf
add
cmp
jmp
mov
repz
mov
cld
nop
pop
pusha
lahf
stos
xchg
dec
js
in
es
shlb
cmp
nop
mov
mov
or
jb
sub
ffree
dec
ror
jp
les
push
add
pop
dec
inc
lods
sub
pop
cld
cmpl
jmp
sbb
test
push
xchg
in
add
jl
push
sbb
mov
mov
xchg
sub
scas
das
push
lret
add
repnz
lock
push
push
nop
ficoml
add
pop
fadds
je
ss
sub
negb
xor
jp
xor
clc
add
mov
pop
pop
and
lds
xor
inc
add
aam
test
cs
jg
pop
ds
jmp
and
inc
stc
daa
mov
mov
rorl
sbb
dec
test
sub
aaa
lcall
jb
add
mov
enter
push
push
sub
fbld
stos
mov
xchg
add
shr
test
fstps
loope
sahf
jecxz
or
cmp
add
jae
xor
mov
push
mov
pop
mov
pop
mov
in
cs
inc
ds
mov
sti
in
add
add
pop
out
jecxz
pop
add
jb
or
lock
and
mov
cmp
and
add
push
fisubrs
hlt
adc
jecxz
add
clc
cld
orl
push
movsl
add
jne
push
cwtl
pusha
rolb
cmp
subl
add
loopne
in
dec
popf
pop
adc
jae
push
cmpb
push
pushf
shrb
cmc
add
xor
clc
sbb
xchg
bound
mov
cmp
xor
push
shrl
adc
aam
fsubl
mov
pusha
xchg
add
xor
lock
int3
push
add
pop
mov
xchg
testl
and
mov
rcrb
pop
shr
mov
xchg
shrl
js
ret
sbb
cmpsb
insb
not
lahf
fcompl
les
inc
or
pusha
insb
adc
sbb
mov
push
in
call
mov
inc
outsb
sbb
aam
sbb
mov
inc
test
mov
movsb
cs
cli
cmpsl
add
jno
add
or
mov
xchg
addl
add
sbb
mov
rcrl
inc
in
jl
jmp
cmp
sbb
inc
xor
and
hlt
daa
jae
outsb
pop
xor
out
xlat
add
push
test
in
cmpsb
push
cmp
sbbl
jo
rorl
push
inc
jnp
mov
or
push
orl
sbb
mov
inc
mov
add
lock
ds
add
inc
das
cmpsl
roll
mov
mov
and
aam
ljmp
push
inc
and
andb
rclb
pushf
lret
add
push
push
orl
lret
dec
andb
and
xor
mov
mov
pop
dec
or
enter
sahf
pop
sarb
les
adc
fdivrs
mov
mov
mov
adc
jmp
mov
mov
xchg
pusha
cld
cmp
cld
dec
dec
pop
and
xor
mov
jmp
insb
xchg
pop
cs
fcomps
cmp
push
test
ret
and
iret
and
jae
movsl
push
mov
popa
fnstsw
add
dec
or
iret
je
into
or
pop
andl
mov
and
cmp
scas
xor
jb
rolb
add
fst
clc
sarb
mov
mov
loopne
jno
mov
adc
scas
mov
ficoms
inc
ljmp
call
pop
fs
loopne
dec
mov
xorl
mov
fs
push
inc
and
in
pop
sub
mov
push
loop
pop
fdivrl
add
jbe
pop
stos
lds
or
orb
or
mov
inc
mov
fcoml
bound
ljmp
mov
and
mov
mov
sarb
es
inc
pusha
loope
cltd
insb
add
cmp
ds
sbb
cmp
bound
lds
inc
cld
push
pop
sub
add
mov
mov
mov
stc
insb
fdivrl
jl
add
xchg
mov
sahf
cmp
pusha
out
push
js
pusha
es
ret
inc
add
pop
and
loop
and
jns
mov
mov
cmp
daa
cld
rolb
add
out
inc
das
mov
cwtl
push
dec
xor
mov
add
test
lret
aam
jl
dec
lret
xchg
xor
ret
cmp
out
jb
pop
mov
fwait
add
sub
rsqrtps
and
repz
xor
sub
pop
mov
out
rcrb
mov
popa
and
dec
xchg
jmp
adc
mov
mov
in
add
cwtl
popa
mov
xchg
and
pusha
add
mov
or
repnz
adc
add
mov
xor
fisttps
aam
gs
test
jle
or
add
or
daa
mov
mov
jo
xchg
mulb
and
xor
add
and
lret
loop
cmp
int3
cmp
xor
cmp
add
lretw
rolb
add
lock
fsubl
push
cli
fildll
mov
fadd
call
iret
pop
add
push
push
xlat
mov
mov
cld
pop
pusha
in
es
dec
or
xchg
sbb
nopl
ret
cs
push
mov
mov
mov
or
sub
inc
mov
pop
and
xor
cmp
test
inc
mov
xchg
inc
rorb
xchg
out
je
loop
stc
inc
xor
pop
push
mov
adc
push
jecxz
test
inc
dec
xor
push
jg
std
mov
push
mov
add
sub
mov
mov
sub
sub
add
pop
xchg
pop
push
mov
mov
add
sub
xor
xor
xor
pop
mov
push
mov
call
int3
mov
push
mov
push
mov
inc
add
add
pop
add
push
pushl
pop
popl
pop
sub
mov
sub
mov
mov
xor
pop
pop
xor
push
mov
sub
add
push
mov
add
add
sub
add
pop
pop
push
mov
add
sub
xchg
pop
mov
mov
add
sub
sub
pop
sub
add
cmpb
jne
push
mov
movb
add
pushl
mov
add
add
push
mov
mov
push
mov
add
pop
add
push
mov
sub
pop
pop
push
push
push
mov
push
mov
push
pop
add
sub
xchg
pop
mov
call
sub
mov
push
pop
sub
add
add
pop
mov
pushl
mov
add
push
mov
add
add
xchg
pop
pushl
pushl
pop
add
add
ret
push
push
pop
add
push
mov
and
sub
sub
pop
xchg
pop
mov
push
push
popl
push
mov
add
pop
pop
pusha
pushl
mov
push
mov
add
push
mov
add
pop
xchg
pop
pushl
push
mov
addl
sub
subl
pop
pop
push
mov
add
pop
shr
pushl
pushl
pop
add
pushl
mov
sub
mov
mov
add
add
xchg
pop
jmp
push
mov
mov
add
push
push
mov
and
add
mov
pop
add
xor
pop
pop
push
mov
mov
add
add
pushl
pop
add
push
mov
mov
or
shr
push
mov
xor
xor
pop
add
pop
xor
xor
xor
sub
xor
xor
xor
or
jne
popa
leave
ret
