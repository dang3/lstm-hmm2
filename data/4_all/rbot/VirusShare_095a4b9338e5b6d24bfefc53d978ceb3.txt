sbb
add
mov
aaa
lcall
push
aam
cld
sub
ss
out
aam
mov
data16
out
cmp
mov
pop
mov
xchg
ds
adc
int
sbb
jne
fldcw
fsubs
cli
in
push
mov
sub
push
cmp
cwtl
xchg
outsl
adc
roll
add
inc
add
inc
daa
shlb
ficoms
sub
sub
rolb
adc
dec
lcall
add
pop
pop
jl
jmp
insb
out
pushf
push
fdivl
pushf
xor
ljmp
stos
inc
arpl
stos
xchg
and
loop
and
out
pop
iret
push
xchg
mov
mov
sub
mov
adc
fnsave
testl
cs
add
cwtl
cmc
mov
xchg
mov
arpl
in
testb
out
outsl
fs
mov
test
iret
push
push
ja
pushf
jb
sbb
fidivrl
add
mov
sub
pop
int3
adcl
int3
xchg
arpl
js
mov
lea
daa
mov
lahf
dec
into
cmp
cmc
gs
pcmpgtw
cmp
imul
cwtl
jecxz
int
pop
lahf
lahf
xchg
movsb
movsl
cmp
mov
into
sarl
and
ret
outsl
inc
fidivl
ret
mov
cmovg
push
in
xor
enter
gs
mov
adc
fcmovnbe
enter
dec
loopne
xchg
push
cld
xor
insl
mov
outsb
mov
ljmp
lret
in
and
lcall
xchg
insb
cmp
in
mov
in
mov
mov
das
notl
cli
rcrl
cmp
and
mov
pop
icebp
or
push
push
sbb
add
cmp
and
sbb
inc
daa
ret
cmp
mov
mov
stc
aad
outsb
addr16
lcall
je
jmp
enter
and
sbb
mov
inc
and
int3
xchg
cmp
and
shlb
sub
bts
mov
mov
js
adc
jmp
mov
mov
outsb
push
cmpb
dec
or
dec
pusha
out
add
jg
fs
add
sti
xchg
xchg
test
cmp
adc
mov
or
lds
sbb
jl
xchg
ja
aad
adc
xchg
movsb
pop
fnstenv
mov
jae
mov
ja
out
aas
mov
iret
loop
outsb
test
push
popa
jae
add
push
inc
push
call
popf
pop
icebp
inc
fidivrs
mov
insb
aam
mov
jae
xor
xorl
ficompl
mov
sbb
lods
test
bound
mov
push
addr16
or
and
mov
pop
arpl
fistps
mov
iret
dec
sub
int3
icebp
dec
int
cmp
lcall
insl
cmp
and
imul
repnz
xchg
mul
dec
inc
xchg
pop
add
fcmovu
push
add
in
mov
or
jp
rcrl
sbb
xor
aas
cmpsb
xchg
cmp
pop
push
movsb
sub
adc
adc
mov
jne
xchg
ja
out
jge
insl
out
push
jb
out
shlb
dec
ss
xchg
mov
jg
nop
xchg
xchg
jo
aad
fidivs
out
push
xchg
dec
add
sbb
jbe,pn
xchg
addl
lds
push
inc
adc
lods
mov
insb
pop
fwait
push
push
push
push
aaa
call
movsb
fists
xchg
pop
gs
mov
mov
jmp
addl
adc
lock
mov
sbb
imul
aaa
fs
mov
loopne
mov
js
xchg
pop
mov
mov
dec
and
sub
test
cli
pushf
push
adc
sub
pop
lock
std
push
sbb
std
lcall
icebp
jo
or
rorb
mov
adc
lea
and
aas
cmpl
jb
xchg
pop
stos
out
lea
pop
pop
mov
lea
mov
ficomps
xlat
xlat
push
adc
sub
lods
addr16
pop
push
and
and
push
jmp
cmp
cld
jl
mov
mov
inc
add
dec
orb
cmp
or
lds
mov
push
and
push
cli
dec
imull
add
mov
cvtdq2ps
fsubp
add
pop
aas
jge
in
scas
or
push
pop
dec
popl
and
and
push
mov
int
notb
mov
mov
xchg
and
aam
inc
js
call
or
jne
jbe
mov
bound
xchg
bound
decl
aaa
mov
popf
push
dec
jne
mov
jbe
dec
jne
pop
bound
or
jbe
cwtl
sbb
jb
sti
sub
daa
mov
cmc
mov
rorl
es
pop
ja
out
in
orl
sbb
jp
mov
sub
inc
mov
mov
push
mov
jle
es
xchg
mov
les
bound
jge
cmpsb
add
nop
add
or
xchg
mov
clc
push
or
daa
lods
xchg
orl
pop
sbb
daa
mov
fwait
jo
or
jnp
or
lcall
scas
xchg
mov
lods
call
inc
mov
push
mov
inc
xor
mov
adc
inc
xor
test
inc
or
and
aaa
pushf
hlt
out
jecxz
jae
ffreep
push
push
pop
xor
dec
push
adc
fildl
xor
fdivr
inc
mov
xchg
js
imul
cmpsl
shll
sahf
adc
mov
sub
pop
aad
dec
jbe
lea
mov
push
into
push
fdivrl
or
mov
xchg
rcl
fbstp
push
pop
ja
jle
xor
loop
xchg
ds
mov
sub
es
or
add
shll
jb
scas
inc
jmp
ja
jge
jns
push
mov
pop
inc
pusha
inc
aas
jb
xchg
sbb
pop
cld
pop
mov
inc
jns
sbb
mov
add
sub
mov
inc
mov
psubq
adc
leave
les
push
sub
stos
sub
es
lahf
mov
lods
jmp
insl
repz
clc
test
test
scas
das
xchg
dec
sbb
inc
and
andb
mov
or
sub
sbb
rcll
xor
fbstp
xchg
es
adc
icebp
enter
push
jl
sbb
cwtl
aas
outsb
sub
mov
scas
mov
cli
push
into
movsl
mov
aas
mov
mov
and
shr
inc
sub
dec
push
dec
dec
mov
mov
lods
xchg
jmpw
pop
int3
loopne
fsubl
fs
pop
lods
xchg
inc
push
jp
stos
xchg
adc
cli
adc
repz
mov
fstpl
sub
jmp
popa
xchg
mov
mov
or
mov
cmp
sub
insb
sbb
push
mov
cmp
into
lds
xchg
mov
or
icebp
stos
cmp
mov
mov
movsb
jno
es
or
jle
ljmp
adc
out
cmpb
adc
xchg
inc
fcompl
pop
xor
divl
adc
fcoml
sub
loopne
ret
addr16
lahf
dec
push
push
push
pop
jmp
mov
test
push
pop
jle
xor
mov
cs
xor
pxor
or
sbb
and
jmp
jecxz
neg
lret
mov
jmp
lods
mov
aam
and
mov
xor
popf
xchg
data16
cmp
jle
adc
repz
bound
and
nop
mov
in
inc
ljmp
sub
cld
cmp
pop
cmp
mov
es
das
inc
and
pop
pop
mov
into
ds
repnz
and
pop
mov
ds
rcrb
sbb
ss
pop
jl
imul
dec
sbb
movsl
call
cmpsl
repz
lahf
push
imul
ret
out
jbe
xor
loopne
sub
scas
fnstsw
aad
movsb
cli
dec
outsb
mull
movsl
sub
fwait
imul
mov
sub
popf
outsl
clc
dec
icebp
imul
and
sbb
or
ret
sub
sub
or
repz
jb
sbb
stc
mov
dec
in
pop
mov
cmp
mov
cltd
sub
pop
sbb
imul
outsl
push
addr16
adc
enter
test
das
inc
inc
int3
push
mov
rclb
xor
mov
fisttpl
lret
xchg
rorl
dec
sub
inc
testl
rcrb
cmp
fucom
lahf
ja
lock
imul
add
inc
ds
mov
gs
arpl
xchg
sub
sbbb
add
mov
lods
add
out
xor
add
and
and
mov
push
xchg
mov
push
sbb
add
data16
lahf
insb
repz
jp
push
jge
mov
mov
jecxz
add
out
lods
jbe
cmp
jge
or
movsb
fcomps
sub
loop
xchg
sub
pushf
adc
xchg
lret
lret
inc
jl
gs
enter
out
test
jbe
xchg
rclb
cmpsl
clc
add
mov
pushf
popf
push
popa
int
xchg
mov
int3
jmp
mull
nop
xchg
and
mov
mov
jle
xchg
fisttpl
sub
mov
cmp
imul
aas
and
push
inc
and
call
bound
loop
mov
push
xchg
cmpsb
fidivs
mov
hlt
inc
movsl
mov
or
fbld
add
mov
or
jg
mov
pop
mov
mov
inc
jle
and
rorb
or
jnp
xchg
jl
frstor
pop
rcrl
sbb
jl
out
push
call
repz
pusha
cmp
jle
sbb
lcall
xlat
cmp
xor
dec
push
shll
imul
mov
mov
ss
lods
pop
unpckhps
popf
or
and
add
jle
cmpsl
shrl
repnz
mov
lea
nop
adc
mov
int3
sbb
sti
cmc
mov
data16
mov
xor
out
adc
fstpl
rclb
fdivrp
cmp
lods
aam
add
mov
scas
aam
xchg
adc
cmpps
cmp
xor
mov
dec
add
sub
popf
into
loopne
enter
cld
push
cmp
add
jl
out
jbe
pop
push
daa
cwtl
sbb
lea
push
jge
mov
pusha
insb
xchg
xchg
out
jo
shll
mov
mov
xchg
inc
xor
xor
jl
adc
or
fcmovbe
in
int3
pop
test
xchg
and
mov
or
loope
test
dec
dec
lret
and
notb
mov
xlat
inc
and
or
ret
daa
cmp
push
imul
lock
out
outsb
mov
and
and
xchg
mov
mov
aam
cmpsb
out
push
roll
mov
popf
xor
repnz
call
push
and
cli
ret
push
inc
bound
cmp
cmp
push
xchg
xor
mov
xor
shrl
jecxz
inc
into
jb
mov
push
movsb
add
lret
fisubs
imul
mov
jne
jns
lcall
rol
mov
push
mov
lods
nop
repnz
sub
data16
dec
push
mov
jecxz
mov
add
aaa
insl
mov
or
pop
jmp
add
sbb
xchg
push
out
sub
in
ljmp
inc
hlt
sbb
leave
xlat
and
xor
fistps
jnp
call
xchg
inc
fcmovnb
adc
rcr
xchg
sub
fisttps
popf
mov
cmc
mov
add
mov
xchg
pop
pop
jae
pop
mov
sbb
lds
mov
loop
lods
out
loopne
xchg
stos
add
lahf
sbb
shrb
push
je
in
inc
mov
xor
ljmp
jo
mov
adc
std
add
cmp
loope
mov
xor
mov
push
jp
inc
shr
ret
dec
enter
fidivrl
or
xor
inc
lahf
adc
inc
test
in
js
dec
inc
mov
push
cmpsb
test
popf
pusha
test
call
ss
daa
ror
std
addr16
xchg
sbb
mov
jecxz
jns
inc
shrb
les
jge
lret
sahf
ret
fdivrl
sahf
xor
sub
xlat
daa
sub
in
es
shll
fsubl
adcl
add
iret
dec
xchg
cmp
out
inc
pop
mov
out
ja
fmull
sub
jmp
int3
outsb
setns
lock
fs
lea
cli
sbb
addl
les
cmp
shll
call
cltd
roll
mov
cmp
xchg
cmp
out
outsl
mov
dec
mov
movsb
dec
sbb
sub
or
pop
lcall
jp
jp
and
and
test
mov
sub
nop
cmc
cmpsl
jne
inc
jnp
adc
jbe
popf
ret
mov
sahf
adc
das
jo
sbb
outsl
lds
ja
imul
xchg
adc
test
jne
pop
xrelease
lea
and
cwtl
and
pusha
jo
and
je
iret
inc
ror
push
push
dec
mov
dec
push
rcrl
sub
push
ds
leave
int
fidivrs
repz
mov
xor
pop
lds
popf
push
pop
mov
je
xor
shrl
adc
movsl
test
jo
icebp
xchg
aas
fnstsw
fidivrl
test
jl
nop
lret
in
test
mov
cmpsl
clc
push
mov
pushf
jbe
pop
dec
sbb
xor
out
test
dec
dec
sub
inc
and
xor
aas
pop
dec
and
adc
pop
aaa
roll
inc
lcall
iret
lret
push
test
or
jns
sbb
add
in
jnp
pop
jae
mov
lret
sub
enter
fsubrl
pusha
inc
xchg
cwtl
jae
repz
mov
in
cwtl
out
fnstsw
xchg
cs
or
lds
xchg
add
loope
inc
lcall
inc
adc
int3
gs
shll
jecxz
sbb
and
hlt
hlt
mov
xor
inc
mov
stc
popa
xchg
or
sbb
jb
pop
pop
int3
sub
aad
mov
daa
mov
test
pop
sbb
outsb
adc
es
gs
mov
pop
add
cmc
cmp
xchg
sbb
fs
inc
inc
mov
mov
jge
adc
repnz
xlat
test
mov
popf
dec
scas
fidivs
fsubrs
jl
hlt
xchg
ja
push
add
cmp
or
dec
mov
jg
repz
out
mov
sub
pmaddwd
imulb
mov
std
repnz
mov
push
pop
push
scas
jnp
int
pushf
test
rcrl
pusha
xor
or
sbb
push
sub
ret
inc
jmp
push
mov
push
std
movsb
push
adc
unpcklps
and
lea
push
add
mov
mov
sbbb
clc
sub
subl
mov
ja
addr16
add
repz
aaa
jns
mov
sarb
ds
ror
inc
sti
sbb
fmul
jae
cmp
or
shlb
or
fisttpl
das
std
out
in
sub
push
adc
mov
mov
gs
lea
cld
subl
testb
jnp
mov
sbb
lret
inc
imul
scas
mov
xchg
push
adc
sub
xchg
xchg
add
pop
lock
sbb
ret
and
pop
mov
aad
aas
sub
jge
aaa
pop
arpl
in
sbb
inc
fisubs
push
mov
add
jmp
cli
jno
inc
lahf
and
sub
imul
shrb
mov
push
mov
les
fisttpl
es
aaa
adc
inc
push
cmp
ret
arpl
in
and
popa
divb
in
test
mov
insb
xchg
sti
cmpsl
rolb
les
add
xchg
xchg
movsl
push
cs
int
xor
mov
scas
loopne
add
bound
ret
outsb
add
sbb
jg
dec
pop
gs
sub
int
jb
neg
dec
faddp
xor
xchg
bound
mov
fdivrs
shll
enter
and
nop
stos
orps
sbb
das
inc
inc
pop
fwait
mov
lods
aam
or
jb
mov
in
inc
data16
nop
xchg
sahf
dec
inc
adc
jl
sub
repz
mov
sbb
sbb
dec
mov
push
inc
shrb
in
sbb
xchg
js
lret
test
sub
xor
mov
mov
mov
imul
test
mov
mov
shrb
adc
jl
inc
mov
sahf
fchs
das
movsl
lods
loop
xor
xor
jbe
sbb
rcrb
aam
je
jle
cmpsl
popf
cltd
jge
scas
cmp
xchg
mov
nop
sarb
mull
aaa
pop
jecxz
js
inc
insb
xor
dec
pop
sbb
bound
adc
loopne
mov
test
push
and
mov
inc
cld
sub
pop
das
mov
pop
mov
push
inc
xor
loopne
cmp
adc
sbb
mov
push
scas
jo
int
mov
inc
xchg
scas
loop
inc
inc
aas
call
outsl
insb
jae
adc
mov
pop
jb
dec
hlt
pop
jno
iret
das
or
outsl
into
push
mov
sub
imul
pop
cmpsl
sub
jae
loope
lea
lods
sub
imul
xor
pop
push
in
mov
mov
xchg
test
jno
testl
pop
and
mov
inc
lret
ds
bt
push
sbb
mov
jmp
enter
hlt
jo
aad
sub
pop
lods
xor
and
into
lea
test
fisubs
inc
jl
aas
lret
daa
pusha
mov
xor
in
sub
mov
xchg
and
adc
jge
sbbl
xchg
dec
mov
stos
push
jmp
es
pop
dec
mov
pop
pop
arpl
movsb
mov
inc
dec
or
jne
hlt
lods
movsb
mov
ret
push
lock
sarb
popf
scas
jecxz
imull
dec
sub
aad
sbb
iret
mov
jae
dec
mov
push
adc
mov
test
inc
mov
xor
dec
xor
pop
jmp
or
aaa
adc
pop
icebp
sub
addr16
push
ficoms
dec
push
addr16
jo
insl
xchg
call
ret
mov
ffree
add
cmpb
pusha
lret
imul
mov
sbb
push
fcomp
stc
xchg
repz
stos
and
cmp
fdivl
outsl
ficomps
push
lods
aas
push
out
sub
sbb
imul
je
sahf
repnz
mov
mov
dec
mov
dec
in
jo
or
into
hlt
lods
repz
hlt
mov
xchg
test
ret
iret
fs
add
mov
xor
into
sbb
jmp
mov
pop
push
sub
add
pop
out
xor
xor
subl
adc
sub
inc
and
sahf
sub
xor
into
clc
inc
dec
mov
cmp
cld
cmc
cltd
fadds
int3
bound
pop
sbb
pop
fldcw
test
adc
test
xchg
outsl
lods
pop
mov
xchg
xor
sbb
shll
hlt
inc
mov
pop
rcrl
outsl
sub
cwtl
xchg
fstp
and
sbb
dec
hlt
xor
popw
inc
dec
stos
dec
sarb
in
mov
xchg
dec
cmp
loopne
push
push
es
in
or
mov
lods
js
add
div
stos
sub
out
leave
mov
or
ficompl
lock
cmpsb
mov
inc
in
mov
mov
js
insl
pop
or
adc
test
xor
loopne
mov
add
test
sti
shlb
fdivl
jae
popf
mov
dec
sbb
or
inc
insb
cmpsl
mov
and
mov
gs
data16
push
loopne
repnz
outsl
arpl
mov
sahf
movsl
pop
rcl
push
jl
push
rcll
data16
add
orl
cmp
cmp
cmc
int3
jmp
out
jb
icebp
lods
out
das
outsb
jge
fstps
xchg
xor
pop
dec
mov
inc
cvtdq2ps
cmpsb
cmp
loope
add
mov
inc
jo
sub
mov
push
push
push
lret
mov
cltd
xchg
data16
enter
aam
sbb
lret
addb
jnp
ds
xlat
xchg
lahf
sar
add
imul
aam
inc
mov
popf
fdivr
lret
push
daa
loope
lock
pop
cmp
lret
cmp
pop
repz
jae
les
outsb
icebp
pop
push
icebp
fimull
roll
jo
add
std
mov
jge
jp
pop
mov
arpl
cmp
je
jl
outsb
in
cli
jl
movsl
arpl
dec
cmp
dec
loop,pn
leave
mov
inc
gs
ret
mov
or
inc
pop
mov
pop
adc
jno
inc
add
inc
adc
cmp
pop
inc
mov
mov
movb
mov
fcomps
sbb
ds
nop
push
dec
pop
fs
sub
push
std
xchg
sub
jae
cmc
les
sbb
rorl
outsb
jnp
mov
mov
mov
addr16
mov
int
daa
push
and
addr16
xchg
ja
shrb
and
mov
cwtl
ljmp
lods
mov
or
mov
rolb
or
jne
sbb
cmp
cmpsl
dec
jo
outsl
dec
fstpt
xorl
out
mov
int
dec
std
pop
pop
inc
mov
aad
jg
dec
dec
das
xlat
nop
push
cwtl
enter
adc
push
nop
movsb
enter
mov
sbb
int
mov
or
mov
sub
mov
ret
out
loopne
adc
fildll
rolb
xchg
out
jne
pop
loope,pn
das
mov
lods
repnz
ds
bound
adcl
ja
vmread
xor
adc
pop
lock
add
xchg
xor
enter
shrb
dec
sub
ja
lret
jl
xchg
mov
pop
mov
ficoms
call
pop
mov
pop
mov
fwait
push
push
sub
mov
in
jno
cmc
cmp
sub
loop
imul
inc
stc
dec
or
loop
and
push
addr16
inc
fidivs
es
add
dec
in
aam
xorb
nop
pop
xchg
jecxz
outsb
cmpsl
int3
xor
rol
repz
out
pop
sub
imul
cltd
sarb
mov
mov
fucomp
gs
dec
int
pop
pop
stc
sub
addr16
out
adc
add
subl
jecxz
setg
cmpsl
inc
imull
and
mov
mov
push
daa
xchg
aad
xorl
mov
push
mov
out
jecxz
sub
mov
mov
roll
push
add
sahf
add
sti
pop
add
push
mov
mov
mov
pop
insb
adc
mov
lock
jge
lret
pop
jb
rcl
imul
mov
sbb
jle
sarb
les
int
add
mov
mov
dec
std
outsb
or
dec
lahf
xor
enter
adc
movsb
adc
fistl
push
xor
sbb
popl
dec
jne
mov
outsl
pop
xchg
push
pop
repnz
repnz
inc
adc
mov
jo
jae
cli
lret
inc
cmp
push
mov
sbb
jne
cli
dec
dec
dec
clc
std
sub
test
imul
cmpl
sbb
add
movsb
out
adcb
mov
mov
push
sub
loope
das
pop
jl
sbb
push
lea
mov
aad
std
mov
sbb
mov
in
xor
push
mov
fldenv
dec
jle
ja,pn
push
adc
call
jo
push
movsb
inc
or
mov
sbb
mov
xchg
aas
hlt
mov
sub
sub
pop
mov
roll
aaa
and
into
mov
xor
add
and
add
int3
jne
mov
mov
sbb
test
pushf
jge
jbe
in
inc
cwtl
test
inc
xor
pop
push
pop
fdivr
jbe
cmc
cltd
jns
sbb
in
xchg
fxch
xchg
mov
cld
pop
sub
push
loope
adc
push
push
add
xlat
pop
mov
stc
mov
xor
fnstenv
imul
or
xchg
jmp
and
sub
ljmp
push
pop
pop
dec
lret
in
jl
fldenv
and
fwait
jnp
push
mov
pop
mov
mov
in
inc
in
aas
push
ret
adc
imul
fisttps
mov
adcb
xchg
sbb
sbb
iret
cltd
xchg
push
lea
xlat
and
lods
lock
ss
inc
in
stos
cs
in
mov
insl
inc
inc
dec
dec
cmp
cmp
and
xor
mov
and
or
sbb
mov
dec
mov
bound
loop
decb
insl
mov
out
mov
repnz
or
mov
xor
dec
or
pusha
cmp
fs
test
push
cmc
and
incl
mov
jge
outsl
pop
roll
pop
or
mov
inc
pop
jne
clc
push
xlat
nop
je
loopne
hlt
cmp
iret
stos
jl
pop
adc
lock
mov
cmpsl
ret
gs
adc
add
ret
mov
sti
and
out
push
push
into
call
and
push
rep
mov
stc
sti
inc
cmpsl
imul
dec
mov
jge
dec
fs
aaa
fldcw
andb
sbb
aas
pop
cld
test
lock
in
popf
cmp
ret
xchg
jb
sub
sti
lock
jmp
xor
pop
aam
ret
mov
or
or
mov
pushf
jns
jno
fimuls
mov
mov
int
add
pop
adc
pop
cmp
adc
cmp
push
je
mov
arpl
mov
ja
sub
scas
rcrb
mov
test
dec
loop
dec
sbb
pop
sbbl
cmp
std
es
dec
xchg
sbb
push
adc
das
leave
dec
incb
or
cmp
into
loopne
mov
sbb
leave
cmp
mov
fcmovnu
into
repz
out
mov
in
push
dec
lods
sbb
dec
in
or
aad
mov
aad
jo
xor
sbb
mov
mov
sbb
fisubl
xor
sbb
in
adc
filds
cmpsb
fisttps
cmp
sub
out
xchg
lock
cmp
frstor
lods
push
out
xchg
arpl
lds
sbb
xchg
add
jb
dec
push
popa
lods
adc
jbe
adc
jo
fldl
clc
xor
mov
add
jne
mov
call
arpl
sub
sub
dec
or
test
xor
js
sbb
int3
cmp
int
clc
mov
xor
dec
in
lea
loop
iret
pop
sarb
bound
xchg
test
sub
sti
fyl2x
mov
mov
pop
outsb
xchg
fsts
cld
daa
int
ss
xor
adc
jne
lahf
mov
imul
sbb
outsl
jno
fsubrs
mov
arpl
or
xchg
fildll
cmp
xor
inc
vpsubd
pop
xorb
pop
and
xchg
in
sbb
lods
sub
mov
ret
insl
scas
pop
push
in
pop
jg
daa
insl
dec
lret
add
xchg
adc
lcall
gs
rcr
subl
pop
clc
cmp
lock
adc
test
sub
dec
int
les
cld
cmp
add
dec
inc
orb
stc
movsl
ret
sahf
dec
bound
pop
rolb
sub
xchg
jno
push
xchg
stos
aas
int3
and
pop
add
lea
sahf
les
test
ds
idiv
lock
adc
mov
aaa
xchg
jecxz
insb
fstpt
dec
and
dec
daa
xchg
loope
imul
add
shrb
or
xchg
imul
push
out
mov
or
testb
pusha
xor
xchg
or
push
xor
das
std
imul
mov
add
shl
push
pop
in
int
shl
clc
jne
stos
mov
mov
out
mov
leave
leave
xchg
dec
mov
pop
mov
aad
xchg
es
imull
int3
fcomp
gs
negb
pop
popf
scas
xchg
lods
inc
jg
jl
cmp
cmpsl
andb
sti
or
inc
sti
or
ret
mov
call
out
jge
lock
jle
cmpsl
xchg
test
add
jno
orb
or
mov
or
mov
mov
jmp
sbbb
adc
jae
adc
xchg
jnp
fnstcw
imulb
in
ret
cmp
daa
cmp
popf
jle
ret
and
scas
outsl
dec
cmc
inc
dec
sub
push
loop
jae
mov
push
rcl
lcall
fidivl
add
and
aas
jns
cmp
iret
push
leave
mov
bound
cmc
arpl
out
inc
shl
mov
add
in
es
cmc
xor
clc
push
or
mov
mov
push
gs
imul
push
in
out
mov
push
xchg
inc
test
movsl
out
and
arpl
push
call
lds
adc
cmp
dec
sysexit
out
pop
cmpsb
imul
jl
and
and
stc
sbb
jae
pop
decl
aam
stc
sub
xor
lds
sbb
fdivl
pop
inc
or
loope
xchg
mov
outsb
pop
sbb
insb
arpl
jecxz
pop
or
test
nop
xor
mov
dec
jno,pn
lods
mov
clc
push
out
arpl
xchg
fdivrl
inc
push
add
jbe
inc
mov
dec
lods
sti
mov
je
ja
clc
mov
xor
or
and
xchg
outsb
in
test
xor
cmp
fstl
scas
mov
jge
movsl
or
imul
shl
fs
neg
cmp
adc
mov
push
dec
das
mov
sub
inc
out
pop
jge
dec
jbe
cmpsb
jo
pop
in
jl
lcall
mov
mov
inc
out
ljmp
hlt
dec
xor
les
pop
ret
xor
outsl
xchg
mov
call
add
sbb
testb
mov
inc
in
mov
mov
test
addr16
push
into
cmpsb
shll
stos
loopne
fisubl
xchg
xchg
xlat
loop
sarl
aam
daa
mov
mov
inc
xor
push
ret
xchg
out
xor
jge
mov
pop
or
pop
into
ret
jmp
jmp
fstl
mov
inc
hlt
call
jbe
push
int
rcr
into
and
push
sub
fcmovne
fistps
ret
into
xor
or
push
sub
and
hlt
and
mov
icebp
dec
sti
shll
shlb
fisubrs
jnp
rolb
push
leave
inc
jnp
mov
aam
js
inc
push
push
lret
mov
cld
jmp
cs
push
lods
mov
cmpsl
pop
pushf
popa
xchg
fimull
sub
push
sbb
popa
aad
ds
mov
daa
loopne
jo
outsb
dec
out
call
loopne
scas
lea
or
pop
dec
push
out
adc
insl
fisubs
sub
dec
out
mov
push
sub
xlat
push
jb
roll
repnz
roll
test
sbb
rorl
lock
loop
mov
xor
cli
pusha
fmuls
jg
je
add
cmp
inc
dec
out
xchg
push
add
dec
jo
cmc
movsb
and
mov
add
mov
mov
aam
cmp
xchg
jp
daa
and
insb
xor
adc
mov
mov
das
adc
adc
push
pushf
cmp
es
daa
flds
aas
clc
xchg
idivb
pop
jg
sub
rolb
push
movsl
fincstp
adc
pop
loopne
xor
mov
scas
ss
pop
cmp
leave
sub
rolb
push
outsl
push
pop
fs
fcoms
rolb
pop
sub
add
int3
or
clc
popf
mov
jle
mov
xor
mov
push
pop
pop
imul
cmpl
shrl
dec
sub
sub
shll
and
xor
inc
or
xor
into
out
mov
outsb
mov
xchg
mov
add
pop
pusha
cmc
in
fisttpl
sbb
push
inc
jg
ja
push
add
orl
mov
xchg
or
call
imul
sbb
xchg
ljmp
orl
mov
add
shr
and
out
xor
lcall
cs
pop
shlb
dec
les
add
push
lock
sub
pop
cmp
in
popa
add
mov
cmpsb
icebp
lea
cmp
xchg
jne
in
outsb
pop
pop
sarb
ljmp
rcrb
movl
mull
in
xchg
mov
popf
xor
cmp
dec
sub
ficompl
hlt
jne
incl
pop
mov
or
rorb
ss
xchg
sub
xchg
fwait
sub
or
sti
or
adc
in
das
ljmp
push
cld
bound
inc
push
std
ret
pop
mov
inc
out
imul
ret
lock
jge
fadd
xor
xchg
pop
push
aad
jns
add
mov
pop
jae
mov
lret
cmp
jae
lds
jbe
mov
shrl
scas
cmp
out
and
les
cli
mov
push
repnz
mov
cli
divb
sbb
mov
loop
cli
cmp
mov
leave
xorb
hlt
jno
faddl
dec
xchg
inc
mov
xor
addl
mov
fs
mov
mull
jno
jno
sub
push
mov
push
mov
lret
and
jo
mov
outsl
es
stos
or
rcll
out
push
out
fisubs
fsubs
and
call
dec
sbb
and
jl
ret
cmp
mov
xchg
mov
add
cmp
testl
jb
and
dec
pushf
xchg
in
cmp
adc
imul
push
jo
les
aaa
adc
lcall
push
xor
das
scas
pop
fisubrs
mov
stos
out
jecxz
ljmp
mov
mov
xor
iret
out
popf
cmc
or
and
xor
mull
lea
icebp
orl
aad
sub
adcb
and
arpl
divl
jecxz
and
cltd
insb
push
pop
dec
push
lea
cwtl
pop
xlat
mov
sub
testl
add
test
pop
push
inc
add
and
dec
push
inc
inc
xor
cwtl
lds
push
jmp
int3
mov
clc
mov
fiadds
add
sbb
outsb
icebp
in
jne
pop
xchg
fsubrs
jns
push
call
out
test
jae
js
jge
sub
test
loop,pn
std
js
cltd
icebp
sbb
inc
lods
cwtl
lock
push
punpckhdq
addr16
cli
pop
daa
cwtl
aam
mov
push
imul
popa
repz
sub
insb
pop
fucomip
clc
pop
inc
sub
insl
negl
in
setnp
data16
jmp
push
loope
bswap
add
sub
pop
pop
dec
cmp
std
and
push
ss
push
pop
adc
cmp
add
pop
frstor
pop
fstl
inc
lds
add
push
ffree
ficomps
shlb
add
jp
les
loop
lods
mov
jmp
dec
fstps
xor
push
or
and
shll
andl
fstpt
fstl
movsb
aaa
testl
subb
mov
loope
pop
jns
add
data16
mov
out
and
or
xchg
int
mov
cmc
jne
imul
testb
in
or
les
pop
jecxz
xchg
shll
sbb
xchg
sbb
add
jl
push
ljmp
jg
aam
neg
mov
inc
mov
jmp
add
mov
lods
scas
test
insb
pop
cmp
lcall
xchg
pop
idiv
jmp
adc
in
sub
out
nop
pop
push
pop
pop
jle
add
push
out
mov
repnz
iret
cmpsl
or
cwtl
inc
scas
ja
cmp
outsl
orb
xorl
movsl
cmp
mov
mov
push
lret
in
pop
pop
cmp
pusha
in
mov
pop
out
adc
aad
pop
pushf
mov
mov
daa
xchg
fsubrl
dec
ljmp
push
and
roll
jmp
pop
xor
out
loop
adc
add
fcoms
sub
lahf
test
rorb
adc
clc
lret
jg
lcall
dec
xor
add
outsb
div
shr
cmp
inc
sbb
dec
dec
loop
jns
outsb
cwtl
sbbb
inc
add
sbb
mov
cmpsb
push
je
pop
pop
shlb
testb
vpsubusb
sbb
sbb
mov
pop
fptan
mov
xchg
pop
push
inc
or
inc
outsw
push
fsubrl
jl
push
je
sahf
jb
lds
out
inc
aad
js
mov
lods
or
push
fisttps
mull
and
lcall
sub
popa
mov
mov
stos
mov
jmp
idiv
shrb
repnz
cmp
insb
xchg
pop
and
cmp
push
das
pusha
add
lea
daa
bound
xor
sahf
xor
inc
js
insb
or
or
ret
insb
mov
adc
mov
inc
mov
fsts
shl
adc
mov
es
sub
add
jmp
xchg
aas
leave
adc
mov
pop
loopne
es
in
insl
cmp
sbb
shll
xor
adc
les
out
rcrb
mov
mov
pop
xorl
mov
and
loope
push
mov
or
jg
xor
sub
mov
add
adc
imul
xor
cs
data16
sub
sub
push
mov
lahf
jg
int
shll
jae
dec
sbbb
arpl
sbb
pop
rcr
mov
cmp
xchg
pop
ret
imul
xchg
jp
dec
jp
push
les
andl
fbld
das
popa
mov
or
inc
pushf
js
cmp
popl
or
mov
xchg
jns
adc
repnz
leave
add
stos
int
push
cmp
mov
mov
inc
pop
add
push
das
or
scas
fistpll
add
shr
pop
pop
push
push
xor
xlat
bswap
outsl
mov
pop
dec
sbb
add
push
dec
push
mov
insb
dec
adc
leave
lods
and
sti
ljmp
cmp
mov
push
sub
inc
mov
pop
fildl
xor
cmc
iret
les
mov
or
inc
pop
add
or
push
sbb
test
int
cmpsl
std
sub
cmpl
nop
pusha
out
dec
push
aad
jg
or
jp
pop
enter
ss
jge
mov
ss
or
push
xchg
lret
lret
ret
iret
ljmp
mov
cmpsb
or
gs
clc
shlb
sbb
pop
mov
and
comiss
shrb
cmp
test
and
pop
xlat
mov
dec
adc
mov
das
push
popa
dec
les
dec
fs
cwtl
ret
pop
mov
dec
arpl
test
jbe
jg
jp
xchg
ret
bound
or
scas
ret
stc
out
pushf
or
xor
ret
imul
cmpsb
inc
dec
push
mov
dec
jge
sub
aad
into
pop
mov
mov
jnp
mov
push
jle
es
cmpsl
pop
jmp
xorl
cmp
or
xor
pop
roll
call
ficoml
out
imul
pop
fs
cmpsb
sbb
cwtl
call
test
add
dec
cmp
gs
mov
mov
push
xchg
rcrb
mov
adc
inc
out
lret
ss
sbb
notb
mov
sahf
pop
xchg
mov
repz
shrb
mov
enter
mov
pushf
pop
sub
push
hlt
aad
push
stos
inc
ret
lret
ds
les
repnz
jno
imul
push
pop
ds
inc
pop
je
or
lret
movsl
cld
xchg
sub
hlt
cmp
lcall
pusha
sub
in
or
jle
idivb
pusha
fwait
repnz
scas
clc
mov
pop
push
xor
cmp
inc
cli
insb
mov
mov
push
mov
outsb
cld
aas
ficomps
add
xor
or
mov
jmp
xchg
cltd
gs
aam
in
aas
add
jecxz
inc
cmp
mov
mov
mov
xchg
or
lods
cltd
jmp
test
in
test
mov
popf
dec
loop
mov
sahf
jo
add
mov
shlb
dec
xchg
and
fsubrp
jbe
ret
mov
xchg
loope
in
jae
xchg
pop
pop
sbb
std
cmp
jl
mov
mov
cmp
mov
xor
pop
mov
lahf
shll
dec
cmp
outsl
mov
pop
cli
inc
into
sbb
jmp
les
sub
push
adc
gs
pop
push
cs
imul
bound
xor
mov
lods
sbb
aas
jl
scas
jo
movsl
iret
jecxz
push
mulb
call
mov
popa
lret
push
aaa
in
inc
and
xchg
xor
mov
sub
sub
xchg
xchg
lcall
insb
imull
popa
mov
hlt
rcrb
mov
ljmp
mov
pop
iret
mov
or
es
cltd
fucomip
in
hlt
pop
in
rorb
mov
sub
xlat
sbb
ds
jae
jae
hlt
sub
pop
xor
jecxz
nop
mov
and
sahf
jae
pop
mov
cmp
cmp
aam
xchg
inc
jo
in
add
mov
shll
sub
jge
sub
push
mov
jecxz
ret
dec
add
repnz
dec
fwait
inc
pushf
sub
shll
or
pushf
test
lods
pop
push
inc
aas
mov
call
inc
mov
xor
mov
outsb
push
jo
push
sbb
lods
test
pop
push
pusha
sub
std
cmp
mov
pushf
add
mov
xchg
popa
or
divb
mov
push
nop
outsl
movsb
leave
aam
push
aad
inc
popa
cmp
cmpl
pop
leave
nop
jns
jmp
xor
fdivrs
xor
adcb
add
fstpl
fisttps
push
adc
xchg
or
lcall
adcl
mov
gs
adc
jecxz
adc
jne
ret
mov
shl
mov
push
pop
xchg
fsts
add
icebp
cmpsl
fs
and
adc
jno
mov
cmpsl
repnz
xchg
xchg
inc
mov
inc
sub
pushl
mov
adc
out
clc
pop
addb
stos
push
icebp
mov
stc
push
je
mov
mov
mov
lds
addb
dec
pop
push
int
jg
push
pop
gs
mov
test
pusha
and
bound
add
cli
sbb
xor
mov
mov
cmp
shr
negl
enter
std
xchg
mov
xchg
mov
jbe
mov
mov
test
pop
cmp
scas
pop
hlt
sbb
out
pop
iret
push
and
dec
iret
fidivrs
pushf
and
inc
xchg
push
lfs
sbb
jae
popl
leave
xor
jb
and
rcrl
dec
sbb
clc
sti
dec
int
pop
shrl
ljmp
lods
adc
jl
inc
and
inc
dec
mov
and
jns
data16
or
mov
pop
aad
and
mov
adc
fdiv
ret
cld
test
cwtl
push
shr
daa
jle
mov
fisubrl
and
mov
push
sbb
or
inc
push
and
call
jo
push
mov
push
jmp
loopne
pushf
mov
dec
adc
loopne
mov
mov
xchg
loopne
push
pushfw
sbb
int
pop
enter
loope
and
int
cli
imul
or
push
out
stos
sbb
jmp
addr16
pop
pop
scas
adc
xor
push
lods
fld
xchg
mov
sbb
jbe
inc
mov
pop
jno
movsl
push
rclb
adc
outsl
pop
dec
jg
gs
aaa
lea
adc
push
ljmp
add
jno
push
jnp
lcall
aaa
icebp
cwtl
or
sbb
and
push
shr
ja
inc
into
subl
loop
and
push
test
xchg
cmp
lods
sub
scas
cmp
hlt
mov
push
movsl
arpl
stos
insb
push
mov
jnp
dec
outsb
ror
dec
cmp
dec
scas
fwait
dec
notb
mov
push
loop
loope
orl
sub
nop
or
cmp
adc
push
jl
in
in
mov
sub
cmp
xor
dec
jb
pop
loop
pop
mov
notl
test
in
xor
dec
std
stos
ja
jnp
sub
fs
inc
cmpsb
xor
leave
or
mov
leave
sbb
popf
inc
jge
add
cmp
jge
into
jp
add
sub
lock
xchg
daa
imull
lahf
movb
decl
add
xor
movsb
sub
or
ss
insl
mov
mov
movsl
aas
cmp
ljmp
add
pop
push
testl
scas
repz
xchg
xchg
inc
and
push
pop
iret
mov
mov
push
rolb
sti
enter
jbe
sbb
cs
push
aaa
or
scas
out
pop
xor
std
cmp
sar
in
mov
lds
inc
add
fldcw
or
in
mov
bound
mov
jne
add
pop
push
and
push
sarb
int3
or
ljmp
mov
cmp
cmp
xchg
std
cs
dec
push
mov
pop
mov
push
subb
push
add
and
add
int3
xchg
dec
bound
jmp
dec
mov
lea
pop
ss
out
insl
outsb
insb
mov
syscall
fcomi
push
pop
jnp
inc
sarl
or
int3
stc
and
mov
xor
test
mov
xchg
lea
pop
dec
xchg
data16
push
sti
lahf
cwtl
sahf
cmp
loopne
add
adc
out
sbb
inc
lods
sarl
icebp
mov
imul
mov
adc
cltd
mov
cmp
loopne
and
mov
movsl
out
cmp
rcll
jle
fwait
leave
dec
sbb
lret
ds
add
dec
loope
cmp
clc
sub
xor
inc
outsl
out
sub
mov
xchg
outsb
sub
add
fs
and
jge
mov
dec
pop
out
cltd
aad
xchg
shl
push
mov
cltd
xchg
gs
push
insl
stc
stos
pop
mov
adc
sub
subl
mov
lahf
aam
decb
lock
andl
sub
jl
jbe
pop
and
mov
mov
inc
and
xchg
push
sub
push
mov
loope
stc
mov
pop
sbb
ljmp
cmp
inc
jg
outsl
incl
push
jae
push
pop
fldenv
xor
jnp
jb
loopne
iret
push
fiadds
adc
lret
jo
cmp
aad
loop
pop
stc
daa
jne
jae
xchg
ret
sbb
jle
sub
push
push
adc
add
adcb
std
mov
jle
mov
les
xchg
jecxz
ss
adc
nop
add
fildl
jge
sbb
lret
xlat
adc
enter
adcl
sbb
mov
inc
out
ljmp
xor
adc
xor
dec
push
imul
sub
jmp
popf
jbe
cwtl
mov
mov
push
shl
scas
adc
lcall
in
popf
sub
mov
stos
jmp
push
jmp
push
ja
xor
inc
cmp
int
inc
mov
xlat
fisubrs
fidivs
ret
mov
mov
ja
inc
nop
pop
mov
arpl
out
mov
fstl
xchg
xlat
sbb
pop
push
push
scas
mov
mov
in
mov
lcall
rcr
dec
xor
cmp
inc
pushf
jnp
test
inc
xor
pop
popf
mov
arpl
cmc
push
jno
mov
mov
cmp
icebp
cmp
es
cmp
out
ds
jae
add
push
xchg
je
test
xchg
repz
icebp
dec
or
ljmp
cmc
lcall
les
mov
sahf
dec
arpl
iret
add
sti
mov
incl
repnz
mov
pop
cmpsb
movsl
js
and
bound
dec
lods
icebp
js
pop
push
push
push
arpl
ljmp
int3
jmp
or
adc
push
insb
mov
fxch
sbb
push
sub
dec
mov
jg
sbb
mov
xchg
loope
ljmp
ja
xor
jb
je
add
mov
fldt
sbb
xor
dec
inc
push
sub
or
push
int
jp
ret
add
mov
dec
inc
mov
pop
mov
jae
push
stos
xchg
and
aad
and
cld
in
add
and
mov
mov
lcall
daa
inc
out
pop
sub
mov
adc
xchg
cmp
data16
cmp
or
int3
sub
insl
orb
jae
pop
pop
fdivl
dec
push
mov
pop
fsub
hlt
ljmp
add
cvtps2pi
xchg
xor
jp
inc
mov
ss
push
out
les
xchg
jecxz
lods
faddl
mov
aad
mov
push
jae
jb
sbb
test
movsb
push
sbb
aam
xor
mov
push
cmp
inc
and
add
gs
aas
pusha
movsb
enter
pusha
js
mov
add
cmpb
insl
dec
pop
pop
movb
cmpsb
and
mov
add
call
pop
movsl
or
cmp
pusha
mov
shrb
cmc
inc
sti
add
jg
xorb
jge
int
pop
aaa
xchg
stos
sub
cmpl
inc
push
inc
imul
outsb
push
test
clc
and
movl
cmpb
push
fnstcw
pop
mov
mov
out
negl
mov
rolb
loop
jmp
sub
adc
cmpsb
stos
fildl
ret
aam
sbb
lock
add
and
mov
mov
fistps
clc
fs
and
xchg
xchg
mov
mov
and
inc
sub
pop
sbb
por
and
ror
jg
inc
stos
dec
shll
call
dec
repz
mov
mov
adc
in
pop
sbb
pushf
xchg
inc
js
adc
jmp
andl
cs
scas
arpl
xchg
push
adcb
add
and
out
adcl
repnz
imul
push
icebp
mov
and
mov
test
std
cld
fnstenv
adcl
icebp
cmc
push
add
jmp
xor
call
mov
pop
int
push
imul
cmp
icebp
sub
cmp
and
rol
int
push
es
mov
lret
sbb
and
out
xchg
mov
out
aam
imul
arpl
dec
test
shrl
jle
dec
insl
and
test
xchg
ljmp
pop
add
mov
dec
incb
pusha
std
or
push
clc
xor
in
or
jp
mov
pop
or
in
xor
and
in
adc
mov
shr
test
pop
add
push
pop
movb
scas
frstor
sbb
mov
shll
xlat
push
repz
inc
mov
out
repz
cmpsl
cli
js
sub
out
xchg
mov
enter
dec
or
pop
add
push
and
push
or
int
and
xchg
jns
jns
subb
sbb
sbb
pop
pop
and
leave
fadds
jl
loope
xchg
xchg
sbb
popf
insl
ret
lret
sub
shl
daa
or
jb
lahf
movsl
push
lcall
outsl
lock
push
xchg
pop
cmpsb
popa
mov
xchg
fistpll
dec
arpl
ffreep
daa
pop
cltd
mov
test
popf
push
pop
pop
pop
jae
enter
jb
pushf
repnz
push
mov
sbb
pusha
enter
pop
or
int
mov
push
mov
jae
mov
inc
jge
lahf
adc
scas
xchg
sbb
jecxz
cli
adc
pop
outsb
mov
cwtl
test
sahf
mov
push
mov
repnz
roll
push
mov
jp
or
or
dec
and
add
mov
repnz
lea
imul
aad
mov
movsb
lods
or
pop
cmpsl
jae
push
lds
add
sbb
cmp
fdivrl
xor
ret
jle
xor
pusha
stos
and
jle
lea
cmp
cli
test
repnz
or
fidivrl
pop
pop
arpl
ret
sbb
or
sub
ret
rorb
push
sub
xor
movsb
repnz
testb
add
daa
jl
in
pop
jmp
fcoml
pop
xchg
xor
in
xor
push
in
test
xchg
xchg
fwait
xor
ja
pop
negl
loopne
icebp
adcb
lock
fstpt
push
adc
cli
add
mov
mov
addl
fs
iret
inc
punpcklbw
push
cltd
inc
insb
popf
sub
push
out
xchg
imul
sbb
cmp
dec
inc
test
inc
push
or
test
jne
pop
xor
test
jg
sahf
adc
push
bnd
je
icebp
out
aam
fisubs
jno
pop
ret
nop
pop
dec
jl
cwtl
std
cld
addb
js
iret
inc
xor
fstp
in
cmpsl
jmp
mov
dec
lods
imul
shll
pop
fdivs
push
nop
lods
xlat
mov
scas
mov
setns
adc
int
pusha
xor
dec
jno
mov
xchg
jmp
push
push
lret
sbb
mov
xor
pushf
jb
cmp
adc
jns
cmp
fldcw
stos
jmp
sub
adc
arpl
xchg
stos
jo
ljmp
dec
rorb
scas
push
inc
aam
mov
xor
push
pop
add
sbb
xchg
daa
mov
dec
lea
sti
movsb
imul
push
and
das
aas
jnp
scas
cmp
cmp
mov
sub
mov
xchg
or
mov
flds
test
fdivr
cwtl
mov
mov
cmp
xor
repnz
mov
shlb
adc
push
xor
fwait
mov
inc
xor
test
into
ficoms
sub
add
call
push
mov
int
mov
jo
jb
or
xchg
jbe
and
imul
cs
mov
nop
fmull
xchg
hlt
cltd
xor
cmpsb
std
sbb
cmc
movb
inc
in
xlat
push
adc
inc
fucomi
sbbl
sbb
fsub
ljmp
ljmp
shrb
ret
lahf
inc
cmp
in
stc
jle
fsub
jnp
cmpsl
scas
push
xor
emms
push
mov
daa
cmpsl
adcl
dec
xchg
ljmp
jb
jbe
push
popf
adcb
jmp
jb
fwait
cmp
decb
mov
adc
negb
cltd
loope
xchg
scas
icebp
lds
lods
out
cmpsl
jle
sub
and
inc
mov
and
cmp
sub
and
mov
mov
dec
je
mov
negl
push
xor
enter
out
lret
pop
stc
lods
mov
dec
mov
dec
cltd
sbb
inc
rcll
mov
loop
dec
cltd
clc
sbb
test
push
inc
jbe
xor
loopne
mov
add
add
loop
sbb
xchg
clc
dec
pop
inc
and
pop
in
sbb
mov
push
scas
out
push
and
cmp
xlat
inc
xchg
movb
and
cmp
cmp
negl
stc
xchg
push
lahf
pop
clc
xchg
fdivp
fwait
movsl
and
mov
int3
ds
xor
fsubrs
pop
sti
push
cmpsb
frstor
inc
loope
lds
ljmp
jecxz
enter
mov
call
xchg
repz
mov
xor
inc
popf
sbb
ficomps
push
xor
or
mov
movsb
xor
sbbb
jo
inc
nop
in
fwait
repnz
sub
clc
pusha
push
addr16
sti
fistl
iret
push
test
cmp
pop
data16
cld
leave
lods
adc
dec
xchg
lret
test
xchg
cs
pop
mov
push
sub
fidivrs
add
inc
fsubrl
push
fnsave
test
mov
push
cld
cmc
and
in
pop
imul
jo
mov
adc
xchg
int3
lods
jo
mov
lret
stos
cmp
mov
cld
fnstcw
add
jbe
out
sbb
sahf
jns
out
sbb
loop
dec
aaa
push
out
mov
insl
lahf
pop
shlb
pop
mov
imul
sbb
mov
insl
fistl
xlat
or
jno
pop
stos
repz
fdivl
adc
in
les
xchg
loop
insl
outsb
xchg
out
xchg
xor
mov
push
insb
lods
adc
xor
das
pop
adc
orb
lods
or
mov
cmpsl
aad
cmp
mov
out
xor
mov
out
pop
fwait
ret
stc
fcomps
cmp
mov
jno
add
xchg
in
add
les
add
cmp
outsl
xor
nop
rclb
stc
mov
push
mov
xchg
push
jo
sbb
insl
clc
ret
adcb
mov
jae
xchg
test
sbb
jle
lock
in
jle
pop
xchg
repz
call
imul
jl
cmp
pop
and
leave
mov
icebp
les
sbb
out
xchg
int3
and
lcall
out
cmp
repnz
jb
movsl
cltd
pop
lahf
leave
in
ret
js
xor
push
jg
call
lods
mov
ror
or
test
data16
sbb
sbb
xchg
fisubl
shlb
mov
sub
xor
dec
xchg
fsubrl
mov
mov
xor
inc
adc
or
ss
inc
push
repnz
jbe
cmpsl
mov
hlt
sub
fsubl
mov
jp
iret
xchg
out
sbb
mov
jne
add
rorl
jecxz
testl
inc
testl
xchg
add
push
lds
rcrb
in
xchg
fldcw
mov
pusha
lret
mov
cmp
int3
movsl
imul
popa
jns
dec
in
jmp
orb
push
adc
fucom
xor
and
test
fstpt
add
iret
outsl
sub
sahf
pop
lcall
or
pop
filds
add
push
shrl
in
jbe
outsl
sahf
test
cld
jge
orl
loop
push
pop
aam
jp
adc
push
adc
iret
jno
push
add
mov
mov
es
add
aad
popf
js
out
gs
sub
dec
jb
mov
jmp
mov
sahf
lods
sub
sbb
xor
and
sub
xlat
cmpsl
sub
inc
leave
scas
gs
out
xchg
xchg
push
add
push
inc
idiv
cmp
adc
xchg
adc
popa
loop
aaa
into
sbb
jl
sub
scas
sahf
jnp
mov
arpl
repnz
dec
cwtl
sahf
or
int
out
into
sub
xchg
xor
mov
mov
sbb
inc
les
repnz
xor
test
in
and
add
ljmp
mov
sub
mov
mov
inc
adc
test
popa
sbb
leave
dec
ljmp
fnstsw
imul
arpl
outsb
xchg
fiadds
sahf
cmpsl
sahf
push
ss
in
dec
inc
dec
test
adc
pop
xor
bound
sahf
add
outsb
xchg
fwait
insb
sub
or
clc
or
push
adc
repz
aas
jmp
mov
jmp
es
out
sub
loope
gs
push
pop
daa
push
dec
cmp
mov
shl
fdivl
xchg
std
xchg
sub
pushw
or
mov
inc
add
xchg
sub
pop
jmp
dec
inc
or
arpl
adc
xorb
hlt
mov
jg
aad
cmpsb
inc
sub
out
aas
sbb
dec
in
xor
stos
push
sbb
arpl
lods
and
adc
arpl
lret
inc
mov
push
or
jb
pop
pop
lods
leave
les
push
enter
int
mov
pop
mov
iret
std
test
push
fadds
push
orl
mov
inc
mov
or
dec
arpl
add
call
fisubl
ss
loop
test
mov
subb
sbb
hlt
cmpsb
js
out
lret
loope
jmp
bound
add
scas
mov
sbb
cmp
sti
inc
fnstenv
mov
dec
inc
xor
push
test
xchg
xchg
jmp
push
inc
stc
fidivl
pop
cmp
aam
test
xchg
sbb
add
gs
fcoms
scas
cmpsb
jl
push
pop
cmp
mov
std
cs
stos
mov
enter
les
aas
xchg
ret
xrelease
lods
in
xor
loop
push
loope
mov
std
je
mulb
cs
xchg
lods
mov
clc
cmp
loope
outsb
jle
push
inc
xorl
loop
pop
ja
adc
pop
pop
loope
rclb
push
jecxz
mov
or
movsb
sub
and
stc
in
andl
call
and
out
mov
adc
scas
dec
enter
mov
push
adc
xchg
pop
cmp
sbb
test
dec
xor
push
in
or
ljmp
mov
pop
add
dec
fisubrs
jae
mov
mov
lods
xchg
xlat
push
cmp
dec
inc
cwtl
jbe
adc
mov
dec
push
fstpl
in
xchg
xor
shrl
mov
xor
cli
out
jl
jo
call
adc
mov
data16
adc
and
or
and
add
cli
shrb
mov
pop
fwait
hlt
aad
or
mov
jg
imul
dec
arpl
inc
stos
lahf
sbb
fadds
aam
push
add
mov
pop
pop
pop
jg
jnp
mov
push
sub
mov
push
popa
out
pop
ret
idivl
dec
ret
arpl
pusha
add
repnz
mov
xchg
sub
cld
cs
repnz
jne
fnstcw
xorb
sbbb
mov
hlt
push
insl
cli
and
sub
aas
cmp
xor
loope
mov
sbbb
stos
xchg
cltd
pop
push
sbb
dec
sbb
sbb
jle
sub
xchg
movsl
bound
jle
mov
push
cld
or
or
js
sti
cmpl
push
pop
adc
add
lret
mov
push
pop
add
dec
fidivrl
xor
sub
mov
hlt
xchg
cmp
sub
xor
clc
cwtl
fidivrl
jae
push
bound
in
pop
mov
push
insb
or
adc
jbe
push
lahf
or
dec
enter
jg
movsb
jle
sbb
fldcw
into
or
movb
xor
xchg
mov
push
xorl
xchg
mov
adc
jle
loope
les
cmpsl
ret
in
push
stos
jb
cmp
repz
test
mov
dec
and
adc
je
mov
leave
in
or
sbb
cmp
enter
decb
and
jge
into
and
aaa
in
push
jl
mov
mov
rorl
pop
rorb
lcall
jle
fnstsw
call
xor
ret
shrl
sbbl
in
adc
fildl
pop
loop
test
fcmovnu
adc
call
adc
inc
cmpsb
jmp
in
or
call
xlat
rclb
lea
stc
xlat
jge
fstl
dec
outsb
sbb
mov
mov
test
test
sbb
sbb
cmp
dec
or
mov
mov
aam
loope
fdivrp
inc
pop
call
jns
sbb
push
loop
insb
cmp
vpaddsw
sub
xchg
lahf
inc
push
fldt
push
sub
fwait
cltd
sti
in
mov
mov
sbb
cs
sar
xor
in
lds
pop
movsl
jp
es
cmp
add
or
xor
jne
out
push
push
mov
sbbl
lods
lock
add
cmpb
pop
js
mov
xchg
inc
jo
dec
fiadds
mov
mov
mov
push
orl
inc
aad
movb
adc
xor
and
stc
sahf
jl
dec
dec
dec
inc
adc
sbb
test
cmp
cmp
insl
cli
xchg
pop
fnstsw
sbb
adc
popf
lret
sbb
insl
mov
pop
je
sbb
or
mov
aaa
std
cmp
and
loopne
aam
popf
enter
scas
ljmp
inc
push
out
push
xlat
lods
sarb
in
sbb
cmc
cmp
rcll
mov
inc
jnp
sbbl
jle
aad
inc
test
or
push
jle
mov
fsubrl
enter
inc
test
cmp
dec
jne
sub
mov
loop
je
popf
cmp
sub
dec
pusha
ja
jge
hlt
inc
push
pop
add
ret
jmp
push
bound
push
jns
sbb
or
mov
data16
fistpl
popf
das
in
push
jbe
loopne
sub
fistpll
ret
pop
in
std
test
cmpsl
xchg
iret
mov
or
insl
ss
repz
ss
in
nop
les
inc
in
adc
imul
sub
loop
xchg
mov
lret
sub
into
enter
icebp
push
aad
adc
jg
sub
dec
inc
push
cmp
nop
pop
fidivl
add
mov
sbbl
xchg
aad
pusha
pop
xchg
and
ds
in
shrb
cld
subl
outsl
aaa
xchg
out
push
or
cmovge
mov
mov
iret
in
push
and
int
cmpsl
std
or
int
jb
in
inc
repnz
sbb
outsl
js
pop
aas
pop
xchg
stc
bound
sub
sub
cmpsb
xor
mov
and
inc
rcr
aad
xchg
std
mov
xor
scas
jb
rclb
xchg
hlt
ja
jb
jl
test
xlat
fdivrl
xchg
mov
in
or
ja
loop
sub
pop
inc
or
ss
cmp
add
inc
xchg
repz
jo
mov
push
cld
movb
scas
sbb
mov
cmp
lods
add
add
push
bound
jno
cmp
sbbb
ja
sub
mov
push
xchg
cmpsl
xor
fdivrl
loope
dec
jp
adc
jecxz
push
sub
stos
sub
mov
in
repz
nop
xchg
insl
xchg
or
outsb
out
fnstsw
mov
in
xchg
sbb
mov
mov
sub
push
lock
jg
add
into
xchg
fs
push
push
lds
bound
aad
sbb
leave
inc
xchg
xor
lds
mov
pop
mov
xchg
fmull
jecxz
mov
jmp
xchg
xchg
sbb
sti
dec
jl
cmp
jg
aad
and
cmpsb
loop
xor
xchg
lea
int3
mov
inc
arpl
jb
jl
gs
and
and
inc
fwait
andb
out
xchg
pop
fistpl
mov
daa
inc
cmp
loop
mov
lahf
jmp
stc
mov
data16
xor
lea
out
mov
xchg
in
stos
fnstsw
imul
mov
insb
adc
jae
adc
adc
rcll
sub
jo
negl
dec
cmp
insb
fsubr
sbb
fcmovnb
call
jge
dec
fldl
push
aam
loop
adc
mov
mov
push
fdivr
mov
data16
sahf
notl
and
addb
in
dec
roll
xlat
test
jg
idivb
popa
js
cli
pop
xchg
lcall
cmpsl
jl
lods
sbb
adc
jmp
add
pop
inc
inc
addr16
sti
test
jo
pop
ss
push
lcall
lret
jnp
mov
mov
xchg
mov
push
jns
leave
adc
sbb
xor
mov
nop
sbb
ss
inc
cmpsl
mov
push
jg
arpl
fsubrp
fs
pop
imul
rcr
jae
adcl
push
cld
ret
lret
jb
sbb
bound
pop
dec
fildll
dec
insl
cmpsb
jecxz
js
lods
jp
sbb
dec
or
lret
adc
loope
push
jl
jl
push
push
sbb
mov
xor
inc
andl
divb
mov
out
xchg
out
inc
mov
sbb
andl
fldl
pop
xor
or
test
push
dec
push
pop
push
inc
push
test
or
arpl
js
into
mov
repz
push
scas
and
cltd
jp
jae
test
lcall
ror
and
test
mov
jmp
sbb
pop
jecxz
mov
scas
dec
pop
shl
sub
xlat
fwait
dec
dec
jno
sub
dec
test
stos
addr16
mov
mov
fcmovne
popf
lea
xchg
and
pop
add
cmp
outsb
jnp
xchg
mov
and
mov
xchg
lods
xor
outsl
insb
sbb
pop
imull
addl
sti
ds
loope
push
jg
movsb
sub
pop
push
xchg
sub
fs
cs
imul
shll
push
dec
mov
into
sub
push
and
mov
and
sub
push
push
push
lahf
mov
stos
pop
scas
stos
xor
or
dec
dec
add
icebp
mov
pop
ss
scas
or
cwtl
cmp
std
push
jle
push
lret
cld
loopne
jo
scas
in
adc
jg
fwait
dec
loope
cmp
pop
clc
xor
lcall
fwait
or
mov
and
int
dec
ds
cmp
jae
shl
lret
fldt
es
cmpsb
movsb
or
mov
insb
sub
mov
jae
sub
pop
loopne
jae
jae
xor
dec
movsb
jb
dec
adc
fsubrs
cli
sbb
fdivrl
sub
leave
outsb
movl
jge
dec
insl
push
lds
mov
test
xchg
dec
dec
inc
pop
or
outsl
pop
mov
ja
je
sbb
fcmove
adc
fwait
rcrb
ds
xor
pop
jo
push
sti
shlb
roll
sub
xor
mov
inc
daa
shll
lcall
stos
mov
cmp
idivl
pop
mov
push
adc
mov
dec
clc
mov
xchg
jp
jbe
repnz
ja
push
leave
pop
mov
xchg
fidivs
push
sbb
or
xchg
inc
xor
loope
pop
into
mov
jae
mov
push
test
and
mov
pop
fcmovb
sub
int
sbb
fstps
loope
xchg
outsb
mov
int3
adc
add
lret
sar
add
sbb
mov
outsb
arpl
test
jno
ret
xchg
outsl
mov
mov
sbb
adc
add
lods
push
mov
xorb
adc
or
clc
les
xorl
jecxz
icebp
shr
push
pop
dec
inc
decl
pop
mov
stos
cltd
jnp
loop
push
cli
jle
into
out
dec
addb
jne
ljmp
into
aad
cld
std
hlt
sub
lret
sbb
loope
test
jb
test
dec
adc
or
push
inc
adc
jp
mov
leave
jno
lea
add
ret
pop
stos
or
mov
xor
mov
adc
pop
loopne
xchg
in
dec
pop
pusha
adc
push
lret
test
in
xchg
add
lret
rolb
jle
adc
aam
iret
icebp
xor
push
dec
fimuls
daa
xchg
test
lea
or
xlat
ss
lods
or
lds
cmp
incl
xor
xchg
loop
mov
mov
adc
sbb
leave
pop
push
sub
jbe
fs
add
mov
xchg
mov
xor
mov
test
push
xlat
push
ljmp
fdivl
ljmp
inc
aaa
call
rclb
gs
xor
sbb
lods
cmp
dec
pop
js
push
and
ret
stos
inc
test
jg
fwait
inc
cmp
push
aaa
cmp
addr16
jne
pop
sbb
fidivrl
adc
sti
rclb
adc
loopne
aam
pop
cmpsb
aaa
lcall
loopne
add
inc
iret
jae
stos
daa
mov
and
push
gs
dec
inc
cmpb
ss
fdivrs
pop
push
es
pop
sbb
test
mov
xchg
mov
inc
repnz
fisubrs
cs
mov
ret
ljmp
push
mov
and
xor
lret
and
pop
lock
sbb
mov
movsb
lahf
jns
repnz
pop
push
sbb
mov
lea
test
fwait
stc
mov
jbe
xchg
repnz
orl
push
dec
daa
or
dec
std
and
jmp
repz
or
push
test
jp
clc
adc
mov
jmp
mov
out
jbe
out
stos
fld
imul
jl
in
mov
push
xchg
shrl
je
push
adc
cld
iret
outsb
pop
js
inc
mov
movsb
mov
xchg
xlat
jl
icebp
cmc
dec
and
xchg
outsl
pusha
cwtl
fistpl
je
mov
aas
cmpsl
cld
xor
ljmp
xor
dec
fildll
mov
fwait
test
add
sbb
out
sub
test
dec
lock
cmp
xor
cmpsl
xchg
pop
out
ret
leave
xor
fs
fistl
cmp
rcl
or
movsl
inc
sbb
push
xor
xchg
lods
xor
fistpl
pop
push
inc
push
stos
sbb
inc
and
jmp
jmp
loop
mov
mov
xchg
incl
and
outsl
jecxz
hlt
cmpl
inc
dec
ja
or
xchg
movsb
xor
dec
test
scas
lock
scas
inc
icebp
xor
stc
xor
in
das
push
out
pop
or
ret
mov
dec
mov
mul
dec
insb
mov
cmp
in
lret
pushf
sbb
aam
xor
lret
out
pop
pusha
xlat
xor
adc
test
push
ficomps
push
shr
fbstp
cmpsl
aaa
push
cltd
add
das
mov
clc
dec
mov
xor
jbe
inc
cmp
call
mov
mov
fimuls
pop
push
cwtl
pop
and
jno
js
or
ds
jge
push
iret
repz
enter
scas
mov
pop
and
test
jb
push
jle
mov
sub
sbb
xor
push
inc
in
cmpsl
insb
icebp
push
fidivs
pop
fadd
icebp
add
xchg
mov
xchg
xchg
mov
roll
jns
jle
add
pop
cmp
push
cwtl
js
dec
mov
or
jo
mov
push
add
lcall
sbb
outsb
ret
mov
xchg
jno
ds
lcall
iret
adc
pop
mov
sbb
stos
inc
and
clc
jb
pop
dec
cmp
jb
mov
pop
pop
xor
xor
in
mov
std
and
orb
std
sbb
out
repz
fbstp
adc
clc
push
push
dec
sub
test
btc
std
push
and
xchg
fadds
or
push
fildl
arpl
sar
hlt
push
fldl
repz
cli
shrb
mov
lcall
out
arpl
sti
les
gs
imul
lds
xchg
mov
sbb
mov
gs
and
add
mov
das
lods
addr16
jbe
mov
xor
jge
lods
jecxz
jg
push
hlt
push
ja
add
bound
mov
daa
arpl
loope
loope
adc
sub
adc
sarb
push
sarb
mov
mov
sbbb
jl
xor
mov
lret
pop
pop
cmc
inc
nop
mov
adc
cli
push
push
or
loopne
jp
inc
xor
gs
in
ficoms
aad
and
rorl
push
jecxz
mov
lret
xchg
or
aaa
ljmp
and
test
scas
dec
pop
cltd
lret
cmp
jle
lret
adc
ret
sti
lret
xchg
lret
push
mov
clc
adc
jle
push
and
sub
imul
mov
cmp
in
sub
add
data16
jno
mov
negb
jnp
sbb
sahf
mov
insb
fcomps
lahf
xor
push
icebp
mov
push
sbb
mov
subl
aaa
cmpsb
or
test
dec
pop
and
pop
pop
dec
xchg
push
icebp
ja
or
pop
out
dec
and
push
adc
inc
jl
add
aam
out
pushf
sahf
fcompp
shrl
std
gs
fwait
cmp
mov
cmp
mov
mov
test
and
xchg
addr16
repz
adc
sbb
add
mov
cwtl
insb
popa
scas
push
jb
sti
negb
pop
dec
xorb
outsl
xor
clc
cmp
test
cld
sbb
mov
jbe
test
mov
inc
pusha
mov
rcrl
or
xor
mov
scas
sbb
stos
jge
mov
js
popa
ss
aad
fcmovne
xlat
loopne
xchg
inc
pop
insb
fbld
dec
mov
aam
lret
xchg
rcll
xor
xor
fisttpl
out
jge
out
sbb
add
or
pop
fnstenv
test
adc
movsb
loope
xlat
daa
mov
push
xchg
pop
icebp
adc
xor
cmp
adc
mov
popf
sbb
push
push
jnp
mov
mov
jne
pop
xor
cld
dec
dec
cmp
int3
std
pop
jae
sub
dec
xchg
cmp
push
clc
ret
mov
das
imul
jg
inc
in
je
enter
add
lahf
inc
jo
jbe
sahf
push
call
js
cmp
data16
sti
jns
dec
and
lods
mov
mov
or
jp
cs
movsl
mov
adc
mov
stc
cld
loopne
arpl
out
aaa
jno
inc
push
jp
hlt
inc
insl
cmpsb
shrl
mov
mov
mov
sbb
dec
fwait
ret
xchg
je
repnz
scas
arpl
or
and
jns
int3
das
mov
lea
cmc
scas
sbb
arpl
data16
adc
push
es
call
fdivrl
mov
dec
hlt
fidivrs
aaa
add
mov
femms
fistpl
into
iret
pop
loop
cmp
xchg
repz
push
idivl
or
je
data16
cmp
xchg
cltd
pop
inc
out
lret
or
jns
sbb
sub
xchg
inc
loop
dec
push
scas
xor
jg
push
mov
movsl
aas
xor
xchg
les
sub
pop
rorb
rorb
inc
push
cwtl
or
gs
mov
test
cld
subb
jp
in
cmp
lods
fistl
or
loopne
and
mov
adc
out
cmpsb
hlt
push
pop
pop
fsts
jmp
mov
fisubl
push
dec
push
jl
shr
mov
lret
ficompl
jo
jp,pn
movsb
lock
cmp
sub
outsl
mov
orb
call
mov
sub
jne
test
in
lret
or
fisttpl
test
fldl
xor
lret
xor
movsb
xchg
mov
mov
push
test
jno
sbb
sbb
in
pop
pop
xchg
mov
push
sbb
or
cmpsb
xor
xchg
rcr
addb
int3
push
jecxz
in
or
mov
scas
mov
mov
outsl
jnp
dec
aad
xchg
stos
aaa
and
into
xor
mov
push
mov
int
pop
ds
push
cmp
push
fwait
and
push
aam
enter
adc
lret
adc
in
je
nop
push
xor
inc
jp
dec
add
or
push
mov
xor
mov
in
jge
inc
jno
mov
jbe
fs
mov
in
lahf
clc
adc
sbb
inc
bound
inc
push
lret
pop
ret
fsqrt
sahf
lahf
push
out
pusha
repnz
jge
in
test
call
xchg
xor
lock
dec
iret
scas
popl
lret
int3
mov
mov
cmp
inc
mov
push
mov
cmpsl
mov
jnp
iret
test
stos
inc
ret
and
sets
mov
test
ljmp
movsl
insl
out
mov
adc
jp
leave
sbb
mov
stos
ljmp
sub
mov
cmp
jmp
dec
repnz
inc
loope
cwtl
pop
nop
cld
pop
rolb
loop
pushf
dec
in
jb
lret
loopne
scas
mov
loopne
xor
push
sub
lds
lods
mov
scas
jp
rorl
mov
and
lret
and
cwtl
push
popl
mov
negb
jp
or
test
icebp
mov
pop
stos
or
sub
cmp
mov
push
scas
call
and
jbe
in
aad
in
stc
pop
dec
sbb
and
pop
sbb
pusha
adc
fimull
fisttpl
iret
dec
in
ret
cwtl
pop
sub
xchg
incl
xchg
mov
xchg
add
lods
hlt
into
lds
jecxz
lahf
dec
lock
pusha
fwait
iret
and
fidivrl
push
out
pavgw
mov
loopne
jmp
leave
shlb
lock
outsb
dec
cmp
cmp
xor
mov
rcrl
mov
adc
or
lret
pop
jg
push
rcrl
loop
fcmovne
pop
sti
insb
lods
mov
xchg
xchg
mov
inc
add
inc
ret
xor
pop
jo
adc
idiv
fs
push
xchg
aad
sti
and
push
pusha
and
or
add
icebp
and
insl
xchg
cmpsl
imul
add
pop
mov
jecxz
sub
ss
inc
jb
push
stc
adc
inc
mov
sub
mov
cs
hlt
and
mov
and
sbb
fisttpl
pop
int
int
push
xchg
roll
stos
add
shl
sbbb
jo
cmp
test
mov
pop
xlat
and
add
or
movsl
push
xor
xor
mov
shl
adc
pop
cwtl
xlat
mov
mov
xchg
into
int3
xor
sbb
add
outsl
fstps
subl
ret
mov
mov
mov
mov
xor
push
inc
int
dec
add
mov
adc
imul
mov
loop
sub
call
stc
sar
sti
imul
jo
pop
mov
jne
mov
adc
xchg
and
mov
iret
ret
sub
and
ljmp
andl
outsb
adc
aam
cli
or
jbe
dec
pusha
das
orb
ret
scas
add
fimull
cld
and
inc
xor
mov
jnp
add
leave
mov
mov
or
push
sti
push
add
ljmp
lods
pop
xchg
adc
fwait
std
mov
dec
andb
dec
jecxz
or
mov
fimuls
testl
lcall
and
jns
cltd
push
jmp
int
lea
dec
lret
bound
sbb
imulb
popf
or
out
into
mov
call
scas
out
sub
mov
add
repz
movsb
cmp
and
push
jl
ret
sahf
mov
mov
mov
fsubl
dec
fsubr
fstpl
inc
xlat
js
mov
data16
mov
lea
sub
mov
rol
aam
cld
lds
push
push
ret
addr16
jmp
leave
xor
push
xadd
push
jns
orb
sbb
mov
lahf
jge
xlat
mov
jns
xlat
cld
mov
push
bound
and
jp
mov
jne
insl
nop
dec
and
in
cmpsl
testb
fisubs
mov
dec
fsubr
jns
or
push
pop
inc
outsb
fisttpl
mov
arpl
adc
ss
ja
or
enter
or
and
movsl
fwait
mov
mov
mov
movsb
mov
adc
int3
adc
cmpl
test
stos
and
cmp
fs
in
or
hlt
push
pop
ret
mov
mov
ret
xor
outsb
icebp
cmp
jno
cmc
xchg
push
or
fwait
in
es
xlat
jns
cwtl
or
adc
stos
mov
xchg
xor
push
add
test
cmpsb
jge
fucomp
arpl
scas
sbb
mov
or
xlat
xchg
lock
sbb
pushl
stc
mov
xchg
fwait
mov
add
sbb
lahf
xchg
fistpll
fnsave
orb
jo
lret
cmp
add
or
ljmp
in
popf
and
xchg
call
test
pusha
pop
add
or
dec
sahf
cmp
cs
push
das
adc
and
mov
jno
ret
dec
repnz
out
mov
imul
lock
gs
xor
pushf
es
js
and
adc
insb
pop
lock
fnstsw
and
pop
dec
mov
dec
in
jne
xor
jbe
js
leave
std
cwtl
roll
stos
mov
stos
pop
andl
in
pop
ret
push
imul
push
add
ret
in
push
mov
fidivl
jle
jmp
loopne
pop
int
sbb
daa
test
xchg
ss
fimuls
fistps
sbb
jno
dec
adcl
add
mov
cmp
mov
inc
out
adc
fistpl
clc
iret
xor
jle
jae
xor
xlat
cmp
pushw
push
mov
adcb
divb
jge
sub
fidivs
and
jnp
cli
stc
popa
push
inc
push
arpl
movsb
js
mov
dec
scas
out
je
scas
xor
mov
mov
adc
call
mov
sti
sbb
test
clc
mov
push
mov
xor
xchg
xor
push
sti
arpl
lret
or
mov
ds
and
and
cmp
clc
or
popf
mov
mov
xor
add
lods
inc
add
inc
mov
mov
and
push
mov
xchg
push
or
mov
jae
sahf
push
add
sub
and
pushf
pop
pop
xchg
sub
mov
scas
hlt
pop
sbb
clc
push
mov
and
inc
in
mov
ret
pop
sub
movsb
jae
jae
call
push
mov
mov
xchg
mov
ljmp
sub
subl
fldl
das
popf
pop
mov
sbb
mov
xchg
and
rcrl
sub
nop
call
lret
xor
inc
mov
es
xorl
push
mov
rcl
cld
dec
sub
dec
out
jnp
sbb
jecxz
jae
sub
in
add
jnp
cld
mov
gs
pop
inc
sub
fiaddl
or
cmc
cwtl
push
mov
sub
push
ret
loop
or
sub
xor
ja
nop
mov
mov
sub
sarb
insl
push
jbe
add
mov
and
rcr
andl
or
xor
xchg
fstps
fucomip
mov
xchg
stos
inc
mov
std
dec
jae
std
pop
push
mov
movsb
xchg
lock
cmc
leave
insl
std
sti
test
dec
push
dec
xchg
push
xchg
xchg
sarb
lea
jo
push
add
lods
out
xchg
jns
mov
jecxz
sbb
xchg
adc
jns
jmp
jge
lret
pop
or
adc
and
add
bound
sbb
jno
sti
pushf
mov
and
mov
cmpsb
mov
lods
inc
push
dec
add
popf
aas
xor
ret
cmp
mov
xor
test
fcmove
mov
pop
fsub
push
mov
and
repz
push
sbbb
scas
daa
aam
mov
dec
fnstsw
arpl
int
pusha
mov
arpl
mov
jle
xchg
jmp
shrb
es
xchg
call
sbb
nop
inc
lret
sub
or
adc
sahf
mov
mov
insl
mov
into
fsubrp
mov
clc
stos
sbb
cmp
mov
mov
jb
xchg
sub
dec
jp
lcall
divb
and
pop
pop
push
ret
cmp
jbe
inc
fimull
push
sbb
xchg
lahf
add
lahf
js
push
pop
sub
sub
out
ds
insl
lret
xchg
xor
or
pop
xchg
aaa
stos
xchg
dec
sub
out
and
inc
pop
cli
dec
inc
int
mov
out
xchg
mov
push
in
aad
gs
fiadds
jnp
sub
popf
addl
bound
and
mov
dec
inc
out
add
dec
mov
xchg
test
cs
dec
scas
xor
xorl
add
ljmp
iret
xchg
test
cld
mov
out
pop
in
arpl
xchg
mov
in
sti
xor
pop
dec
jmp
bound
ljmp
push
jecxz
popf
dec
inc
or
dec
and
insl
adcb
xchg
jae
int
push
mov
aas
mov
xchg
icebp
das
adc
and
add
subb
jecxz
or
mov
scas
cmpsl
jl
jb
adc
sete
jns
fsts
pop
sbb
roll
js
mov
mov
xor
push
adc
shll
test
xchg
arpl
dec
push
aad
and
xor
pop
cmp
call
ljmp
imul
xchg
xorl
lea
aaa
movsb
pushf
clc
or
push
lcall
push
xor
lods
nop
xlat
imul
clc
orb
push
jnp
data16
push
jle
fiadds
mov
pop
inc
push
rolb
loopne
shll
lea
mov
out
or
xchg
inc
shll
adc
fs
pop
jo
arpl
jbe
sbb
xor
lods
fildl
and
jo
xchg
sbb
loopne
cmp
cmc
notb
lret
mov
add
xor
sbbl
lea
adc
pop
sub
insb
push
popa
loop
cmp
xchg
mov
outsl
mov
daa
rclb
cmp
push
lods
lea
sbb
into
jp
in
mov
sti
aas
mov
stos
test
repz
xor
out
sbb
dec
lret
push
jp
mov
arpl
xchg
push
stos
xor
sbb
popf
in
jno
jo
jae
leave
cltd
jmp
push
insb
iret
push
sub
cmp
orl
sbb
pop
loope
lahf
imul
add
int
ds
sub
aas
xlat
das
sub
sub
and
lods
adc
push
and
outsl
cmp
cmp
stos
loop
sub
mov
inc
xchg
add
dec
xchg
data16
hlt
jg
call
iret
ret
lods
out
or
in
lcall
sub
test
sub
clc
sbb
clc
mov
orb
stc
mov
jbe
xchg
sbb
stos
jg
in
cs
or
sub
add
sub
pushf
pop
jl
lds
jnp
sbb
inc
fsubs
aaa
pop
inc
lds
insl
xlat
jbe
push
mov
add
inc
push
cmpsl
loope
pop
sub
cs
pop
rcr
mov
mov
xor
call
sbb
fcmove
mov
add
cld
pushf
int
xchg
sub
mov
sbb
mov
mov
or
fdivrl
roll
dec
add
scas
in
xor
aas
fisubrl
lahf
jmp
lret
or
mov
xor
adc
shrl
inc
and
xchg
inc
fistpll
fdivrl
xchg
push
outsl
fidivs
call
into
insl
leave
and
jne
out
fucom
mov
mov
and
or
mov
or
test
pop
or
cmpsl
pop
lret
clc
shrl
inc
in
repz
jo
pop
cs
repnz
mov
pop
mov
imul
xchg
push
pop
push
gs
fs
xchg
pushf
fmull
stos
add
divb
pop
adc
lods
sub
data16
clc
pushf
or
das
nop
fs
scas
pop
sbb
lret
popa
xchg
shlb
or
cmp
movl
dec
sbb
jle
cmp
adc
orb
jp
sbb
lahf
icebp
insb
add
bound
and
xchg
les
jne
orb
push
inc
cmp
xor
nop
lcall
or
pusha
lods
add
pop
int3
and
sbb
jns
test
cmpb
lds
xor
enter
push
pop
movsl
test
inc
push
jb
mov
lods
imul
rdpmc
adc
dec
dec
addr16
xchg
pop
sbb
lret
and
sti
push
or
in
rolb
bound
jp
cmpl
test
lods
loopne
xchg
test
mov
dec
in
xchg
xchg
loopne
inc
adc
and
mov
sti
mov
mov
out
adc
pop
mov
sbb
cmp
jns
add
mov
fwait
add
test
sbb
and
cli
add
jle
mov
push
stos
and
adc
adc
imul
imul
add
or
out
fdivl
inc
xchg
push
mov
aad
icebp
insl
xchg
ds
jbe
jle
fucomi
adc
adc
out
mov
cmp
out
loope
pusha
into
inc
inc
int
inc
push
sbb
scas
and
and
pop
and
adc
mov
fsubrl
and
xchg
push
sbb
lock
js
enter
jne
insl
mov
sbb
stos
outsb
and
pushf
sub
leave
jb
cmpsb
mov
mov
adc
je
into
cwtl
ljmp
adc
push
ds
fdivs
xlat
dec
mov
adc
fwait
lods
jle
mov
xchg
inc
jp
dec
stos
rorl
arpl
mov
mov
mov
enter
movsl
xchg
xor
xor
dec
aad
xchg
imul
into
daa
add
iret
push
fldenv
push
jns
movsb
repnz
or
shll
out
pop
add
adc
arpl
or
movsb
and
mov
repz
lahf
jge
jnp
sub
and
daa
xchg
iret
jmp
outsl
xchg
pop
fcomps
inc
jl
pop
adc
movsb
or
push
pop
pop
push
in
rcll
sub
outsl
cltd
pop
test
jne
movsl
and
rcll
out
inc
and
dec
out
dec
jbe
add
pushf
inc
pop
fwait
lock
xchg
repnz
xor
bound
mov
into
pusha
daa
in
daa
test
dec
pop
and
fs
nop
mov
jo
pushl
mov
mov
pop
add
mov
repnz
ret
bnd
int3
jg
in
ds
xor
push
lret
adc
xlat
add
pushf
jmp
cmp
sahf
sbb
stos
mov
lea
lcall
pop
dec
fnsave
jg
inc
cs
ret
call
pop
sbb
cmp
out
push
arpl
mov
mov
addr16
pusha
les
xchg
mov
movsl
jmp
or
pop
mov
xlat
xchg
push
cmp
stos
shll
enter
mov
ljmp
jbe
sub
test
outsb
outsl
pop
je
loope
dec
add
xor
sbb
xchg
out
cmp
rcrb
adc
or
jl
xorl
out
sub
dec
sbb
inc
cmp
xor
add
or
ret
jle
mov
daa
incb
or
inc
out
adc
in
mov
inc
aaa
pop
push
sub
sbb
or
add
sub
hlt
sbb
scas
and
leave
xor
iret
fwait
jnp
cmpsl
mov
mov
xor
mov
aaa
pop
xchg
push
adc
xchg
mov
cmp
xchg
test
test
sbb
mov
mov
movb
pushf
jmp
rolb
jne
scas
rorb
mov
lret
push
adc
xor
fisubrs
jp
repz
add
push
push
mov
xor
clts
jl
mov
out
adc
insl
xchg
icebp
fisttpl
testl
add
jno
scas
mull
sub
fists
add
scas
scas
lods
sti
xor
shl
and
idiv
lret
mov
mov
je
cltd
sbb
sarb
push
push
mov
or
cs
jecxz
xchg
jno
shl
or
int3
mov
leave
push
cmp
lods
testb
fadds
mov
fdivrl
lds
push
push
insb
xchg
test
in
stc
arpl
arpl
jo
mov
dec
push
adc
lret
outsb
push
jge
andb
dec
mov
add
sti
cwtl
lods
je
pop
inc
mov
scas
push
xorb
pop
xchg
xchg
push
test
adc
ja
jp
outsl
jno
dec
pop
push
cmp
push
aaa
bound
lcall
mov
and
jb
sub
xchg
addl
pushf
inc
xchg
add
cmpb
lock
or
mov
flds
dec
adc
popa
jle
xor
fcmove
push
mov
int3
inc
and
ret
dec
push
jecxz
pop
mov
sbb
lret
dec
sbb
cmpsl
aaa
insl
mov
outsb
stc
mov
sbb
scas
rolb
shlb
push
negl
and
mov
mov
add
sbb
jge
mov
xchg
pop
dec
sarb
scas
test
jno
lock
mov
shll
test
push
aad
add
dec
adc
shrl
sub
negl
dec
xchg
push
jns
inc
xor
mov
sub
int
jl
lea
mov
into
pushf
xchg
inc
in
push
xchg
int
lock
pop
jae
pop
mov
clc
xlat
std
test
sub
inc
dec
sbb
rolb
inc
jle
out
pop
mov
cld
pop
and
imul
dec
jne
std
cmp
mov
insl
je
mov
lods
or
mov
pop
pop
stos
sti
outsl
out
es
fucom
stc
dec
leave
push
jmp
sahf
add
dec
jae
or
adc
inc
inc
mov
lds
in
xor
and
sub
pop
push
adc
aas
ljmp
fs
mov
les
and
xor
js
jns
xor
xlat
cmp
cmp
adc
test
pusha
popa
sbb
lret
cwtl
mov
imul
pop
insb
mov
out
lods
gs
iret
sub
bound
stos
out
sbb
mov
arpl
lahf
cmp
in
popf
sbb
xor
test
adc
shlb
cmp
jne
loope
sub
jl
loopne
xor
adc
rcrb
push
xchg
xchg
dec
ret
mov
sbbl
inc
enter
mov
movsl
jnp
dec
sti
stc
sub
je
xchg
addr16
xchg
push
movsl
mov
and
inc
push
dec
outsb
mov
jp
sub
jge
cli
mov
mov
loopne
xchg
lods
lret
scas
jg
sbb
je
gs
and
fwait
int3
sbb
je
cmp
adc
ficoms
test
repz
cmp
mov
push
add
ss
fcomi
ret
dec
mov
jnp
jne,pt
mov
and
sbb
dec
js
jns
and
and
cmp
out
imul
jae
repz
inc
mov
dec
fldenv
movb
mov
lds
mov
jle
jbe
xlat
push
les
mov
aaa
xor
mov
pop
inc
push
dec
icebp
pop
stos
mov
and
push
cmpb
dec
cltd
pop
add
and
into
out
fisttps
xor
xor
ss
sbb
subb
in
pop
jecxz
fs
loop
xchg
mov
aam
mov
cmpsl
jns
dec
in
sub
mov
pop
enter
fstpl
test
xor
dec
mov
mov
pop
outsl
ret
addr16
mov
add
stos
or
add
std
mov
xchg
sbb
or
mov
mov
cmp
fwait
icebp
xchg
enter
jbe
push
xlat
test
and
scas
push
cmp
xchg
popf
fdivl
cmp
fstps
inc
pop
flds
inc
adc
cmpsb
sbb
pop
adc
sbb
stc
outsl
xor
cli
sbb
scas
inc
fldt
mov
fmuls
out
jb
fisttpll
pop
xor
leave
call
mov
fistps
popa
hlt
addb
int3
adc
stos
incl
inc
ja
imul
imul
les
push
insb
dec
test
and
pop
xor
addl
push
xchg
or
mov
mov
inc
je
jnp
mov
and
stos
xchg
mov
lcall
push
loopne
loop
int
cmpsb
insl
inc
mov
pop
push
jg
scas
outsl
add
or
xchg
test
xor
mov
mov
xlat
int3
movsl
nop
mov
push
and
xor
sahf
lods
push
in
and
jne
jmp
pop
js
std
cmpsl
addl
and
out
pop
loope
jp
mov
sub
jno
push
jne
jne
sti
repnz
jge
popf
cmpsl
cli
add
stos
sub
lods
andb
sub
lcall
aam
shll
stc
push
aam
jno
cmpsl
xrelease
sbb
std
loope
call
xor
sub
iret
mov
add
xchg
mov
xchg
fwait
test
jle
cmp
cmc
out
push
xor
ljmp
ss
dec
les
int
jne
dec
je
and
cmp
pop
mov
jp
repz
in
pop
pop
push
cwtl
flds
or
hlt
call
pop
jae
imul
dec
sti
xchg
data16
or
popf
fs
scas
int3
stc
add
imulb
xchg
sahf
mov
push
and
stc
roll
mov
iret
push
repnz
mov
enter
lcall
mov
stos
push
iret
dec
add
xchg
jo
mov
fisttpl
mov
and
sub
add
jle
sub
mov
mov
sub
int3
jl
stc
sti
xchg
pop
push
shlb
scas
inc
adcl
bound
loopne
addl
imul
rcrl
arpl
inc
lret
jecxz
sti
push
nop
pop
stc
arpl
js
clc
jecxz
dec
shlb
dec
ret
dec
jle
mov
mov
aaa
sahf
ret
and
and
jecxz
add
nop
adc
push
add
adc
mov
movsb
mov
cmp
or
add
mov
xor
pop
or
fidivs
mov
dec
loope
cmc
mov
aam
cwtl
jo
and
dec
jae
sarb
imul
ss
inc
sbb
mov
pushf
lret
sbb
int3
orl
push
rclb
mov
adc
hlt
call
adc
fsubrp
mov
nop
dec
dec
aaa
and
ret
popf
out
fadds
jnp
mov
imul
jns
pop
lcall
mov
xchg
std
mov
fwait
pop
adc
sub
fmuls
push
mov
push
add
push
rorl
dec
lods
and
adc
and
lds
mov
ljmp
cmp
negb
lods
lods
push
in
test
jo
mov
jns
cmp
mov
push
lea
push
push
or
out
arpl
in
mov
add
dec
rcrb
loopne
mov
dec
bnd
push
sub
call
ja
cmpsl
dec
jbe
test
cmp
mull
in
out
pop
cmp
and
xor
mov
jmp
xchg
out
popa
fisttpll
inc
or
ret
xchg
cmpsl
mov
push
adc
dec
repz
ror
adc
test
push
mov
dec
or
push
jle
push
mov
lea
xor
into
pop
js
test
xor
sbb
pop
iret
mov
popf
mov
imul
hlt
adc
mov
pop
add
fistl
mov
pop
sti
fs
xchg
outsl
in
xor
mulb
lock
loop
lods
xor
hlt
mov
jnp
lds
mov
fdivr
mov
mov
rolb
xor
mov
jecxz
mov
vmread
fldenv
push
mov
movsb
out
loope
movsb
pop
jmp
and
das
les
mov
jno
aas
mov
fabs
push
push
adc
mov
mov
fs
imul
fidivs
ja
arpl
mov
add
add
jno
adcb
and
fcoms
imul
outsb
inc
lcall
xchg
es
dec
pop
sbb
scas
cltd
stos
sbb
test
jl
xchg
lods
lea
mov
sbb
jmp
sub
mov
outsl
jne
mov
and
add
aaa
sti
mov
stos
mov
add
pop
addr16
mov
xchg
in
rclb
mov
neg
inc
idivl
ficoml
jnp
ja
pop
fwait
mov
cmp
xchg
out
and
pop
fs
xchg
notb
lods
jb
test
nop
inc
aas
jmp
imul
fcompl
jl
int3
lods
repz
int3
imul
xchg
adc
lods
and
data16
dec
or
mov
lret
in
jo
mov
cwtl
pop
jbe
rolb
lcall
jae
jno
push
pop
lahf
xor
fcoml
out
or
ffreep
ret
rolb
or
cmp
and
or
sar
cmovl
dec
cmpsb
outsb
push
sbb
pop
stos
subb
loope
jle
fldpi
mov
and
icebp
jne
fwait
dec
std
mov
pop
adc
mov
sub
daa
xlat
ret
inc
stc
mov
or
shl
or
xchg
rcrb
ja
scas
xchg
push
push
jb
sub
push
push
outsl
xor
xchg
cmp
push
aad
sub
std
arpl
inc
inc
int
mov
pop
push
cmovo
jb
xor
movsl
std
xchg
js
xchg
lds
sti
xor
outsb
pusha
xor
and
jl
insb
aad
mov
call
sub
adc
in
test
push
repz
cmpsw
dec
add
lahf
cmpsl
mov
mov
enter
push
daa
dec
les
outsb
popa
iret
in
sbb
fwait
adcb
repz
outsl
push
jne
js
mov
ror
xor
cmpsl
add
fists
jg
movsl
xor
dec
push
add
or
loopew
or
pushf
mov
mov
lret
pop
adc
xor
jmp
mov
imul
mov
xor
jmp
and
imulb
cwtl
mov
pop
flds
xchg
add
xor
mov
rclb
jp
cmp
pop
push
sti
and
xchg
mov
dec
hlt
xchg
sub
mov
test
mov
and
jnp
movsl
xchg
scas
aaa
data16
daa
cwtl
dec
mov
insl
cmp
cltd
xor
fsub
iret
push
sbb
cld
jg
bound
cmp
xor
jle
int
jl
dec
jge
mov
push
ja
jno
in
movsb
xchg
jns
icebp
xchg
and
jecxz
cmp
jl
inc
adc
lcall
addr16
inc
scas
mov
jge
jb
xlat
sti
into
or
inc
dec
ja
out
inc
icebp
lahf
sub
xchg
adc
cmp
jno
iret
jl
jae
mov
cmp
inc
inc
fsubl
imul
push
in
ja
pop
lfs
sbb
pop
out
jne
shl
jg
dec
dec
dec
push
andl
imul
xor
sub
int
ficoml
mov
shrb
mov
cmpsb
je
xor
out
adc
mov
dec
subb
test
mov
insb
pop
pop
mov
cmp
enter
ss
fwait
adc
add
and
sbb
lcall
orb
pop
and
and
in
arpl
jmp
sub
aad
scas
jno
xchg
fxtract
sbb
movsb
lret
inc
lock
repnz
mov
pop
xlat
mov
cmp
mov
out
mov
xor
push
jb
enter
cmp
mov
in
or
rcll
dec
mov
popa
loopne
mov
or
cs
stos
mov
pusha
xor
xor
bound
dec
shrb
cs
xchg
add
nop
adc
icebp
mov
sbb
push
push
or
mov
mov
and
in
jo
mov
push
cmp
iret
push
jmp
lods
stos
ds
insl
and
dec
out
clc
loopne
addl
hlt
mov
aam
lret
push
lds
inc
fwait
xchg
xchg
jae
sahf
xchg
sbb
lret
or
lahf
mov
int
mov
out
add
push
add
cltd
inc
lahf
sub
mov
mov
pusha
xor
mov
jmp
dec
jo
jno
push
in
call
ret
and
add
int3
mov
xchg
nop
xor
clc
inc
push
into
out
push
cmpb
xchg
cld
stos
rcrb
and
and
and
fnstcw
int
stos
mov
in
push
push
dec
xor
add
mov
ja
xorb
rorb
dec
mov
jmp
fucomi
jae
sub
fs
mov
fbld
xor
cmp
or
fdivrs
push
retw
shlb
std
and
das
push
jb
dec
inc
cmp
adc
ret
mov
scas
pop
jbe
popf
cmp
or
push
hlt
pop
pushf
repnz
xchg
or
dec
mov
xlat
xor
sbb
xchg
adc
push
dec
mov
xchg
sti
jmp
cmp
test
and
roll
div
movsb
jnp
sub
dec
cmp
stos
mov
inc
push
cs
leave
out
adcb
imul
cmc
push
dec
jne
and
rorl
jl
xor
int3
sbb
js
add
fdivrs
xchg
or
sbb
mov
ds
mov
add
push
pop
ret
mov
pop
daa
xchg
daa
push
fistps
dec
xchg
addr16
filds
repnz
inc
jnp
xchg
sub
cmp
fidivl
xor
leave
xchg
dec
and
push
dec
fstpt
pop
pop
push
mov
cli
ss
popa
push
fsubs
aas
fsubrp
add
add
dec
sub
sub
addr16
outsl
and
xor
xchg
popa
popf
mov
cmc
pushf
or
out
jbe
jbe
mov
dec
adc
mov
jnp
lcall
shll
push
or
sbb
movsb
les
call
iret
test
xor
imul
mov
icebp
dec
in
ds
xchg
sbb
mov
fmul
cmp
xor
mov
xor
or
dec
mov
nop
pushf
xchg
dec
and
mov
jl
shll
cmpsb
add
jne
pop
sbb
dec
lea
js
scas
jnp
sbb
rcr
add
rolb
cmpsb
shlb
leave
xor
pop
mov
dec
push
or
push
mov
ljmp
jg
jp
cmc
cwtl
incb
mov
and
pop
cmp
test
cmp
jb
jg
subb
arpl
popf
pop
shl
dec
pop
inc
dec
push
and
mov
push
mov
add
pushf
adc
rorb
or
add
in
movsl
popa
cmp
jl
je
xchg
xchg
xorb
xor
jmp
jg
js
and
es
out
rorl
jl
enter
cmpb
or
addb
mov
fldenv
inc
add
aaa
rorl
add
std
jge
jp
xor
scas
cmpsb
push
sbb
daa
dec
dec
dec
and
ret
mov
sub
pop
adc
dec
out
ds
loope
into
cmp
jp
sub
add
push
jp
jae
mov
lret
adc
jmp
std
mov
data16
and
fldl
inc
or
sbb
jle
push
fstps
in
call
sub
mov
lea
cmp
cmp
and
imul
out
in
dec
pop
mov
rcrb
cmpsb
xchg
xor
fadds
push
daa
mov
shll
cli
ret
sub
pop
adc
mov
in
or
idiv
faddl
mov
dec
and
adc
pop
ret
es
cmpsl
call
dec
or
fidivrl
pop
aad
sarb
outsb
dec
pcmpeqd
rorb
mov
ret
out
jbe
dec
xchg
mov
ret
ds
insl
inc
pop
cmp
mov
jmp
push
cmp
pop
das
mov
inc
jns
or
inc
dec
stos
loop
sbb
pop
add
mov
out
adc
cmpsl
lea
xchg
or
int3
xor
lret
jmp
outsb
fistpl
push
nop
pop
push
sbb
cmc
lods
cmp
xor
mov
insl
call
enter
imul
cmp
dec
add
pop
dec
add
je
decl
push
stos
addr16
outsb
or
aas
cmp
cmp
subl
xchg
stos
rcll
dec
jp
clc
xor
rolb
inc
mov
enter
aam
les
clc
mov
mov
pop
mov
call
jne
and
pushf
sub
movsb
xchg
popa
sbb
hlt
shl
xchg
push
in
pop
mov
mov
mov
jmp
xchg
xor
or
mov
loopnew
mov
pop
xchg
ljmp
lea
add
sub
sub
cmc
mov
sbb
faddl
mov
rcrl
imul
sbb
lea
push
sbb
jno
movsb
das
push
ja
push
mov
sub
in
and
fisubl
in
mov
out
jne
out
into
xchg
or
popf
ret
xchg
lods
mov
fstps
add
cmp
mov
or
xchg
sub
mov
xlat
data16
jmp
les
adc
adcb
pop
fsubl
jae
push
pop
sbb
mov
movb
sbb
bound
clc
shr
lahf
dec
scas
sbb
sbb
arpl
cmc
test
stos
mov
or
add
mov
pop
pop
pop
pushf
jnp,pt
adc
sahf
movsb
push
mov
fcmovnbe
fsubrs
cmpsb
stos
xor
nop
shlb
dec
cmp
push
mov
sbb
push
inc
mov
cmp
enter
aas
test
shl
jecxz
fcoml
inc
cltd
sbb
or
cli
xor
xchg
xor
jg
mov
enter
xchg
mov
cmpl
into
mov
jo
aas
in
scas
out
fs
xchg
xor
test
sbb
in
imul
push
cmp
clc
xchg
outsb
hlt
jge
les
sub
arpl
or
arpl
dec
mov
decb
xchg
insl
fstpt
jge
mov
call
or
arpl
fadd
mov
andb
mov
lahf
decl
dec
xchg
cwtl
jae
aaa
mov
mov
out
dec
test
push
mov
stc
popf
mov
popl
sbb
mov
cmp
jge
std
xchg
sbb
out
mov
cmpsb
outsl
jb
loopne,pn
jne
xor
add
inc
xchg
addr16
xchg
jp
inc
inc
sbb
bound
mov
dec
test
sti
xor
mov
cli
out
test
hlt
fwait
in
rcll
and
rorl
setne
mov
adc
jp
fcoml
pop
mov
mov
lahf
aad
sbb
adc
xchg
out
mov
arpl
je
mov
jg
dec
add
sbb
ret
out
dec
mov
movsl
movsb
push
aas
out
push
hlt
cli
ret
out
mov
repz
sbb
or
out
xchg
push
or
mov
enter
mov
aam
test
cltd
in
cli
mov
insb
push
or
aad
cli
clc
cwtl
jle
jb
out
jmp
mov
test
or
inc
mov
push
jmp
jge
fisubs
jecxz
lods
jg
insl
or
mov
or
dec
xor
xchg
mov
ljmp
mov
aad
subb
inc
dec
dec
push
dec
mov
into
cmpsl
and
add
cmc
mov
clc
jp
cmp
movsl
cmc
inc
stos
add
enter
add
mov
or
and
xchg
xchg
insl
fisubs
jecxz,pn
cmp
lret
sbb
xchg
mov
lods
mov
rcl
lods
and
add
stc
nop
cmp
mov
icebp
mov
adc
lcall
fstpl
cmp
cltd
mov
sub
jbe
stos
jb
rclb
adc
enter
pop
in
mov
jnp
outsl
adc
adc
pop
push
std
dec
xchg
xchg
mov
mov
fwait
in
pop
add
sbb
flds
into
push
sub
inc
pop
out
jno
and
jge
ljmp
stc
cmpsb
orb
sub
xor
mov
jl
lock
adc
cmp
sbb
or
xlat
mov
inc
divb
xchg
loop
fistpl
xor
cmc
inc
stos
jecxz
jno
lret
lods
mov
adc
adc
jmp
sbb
push
shll
xor
xchg
aad
push
cwtl
dec
lods
fbld
das
cwtl
dec
mov
aam
popa
adcl
dec
push
adc
rcll
xor
shrl
and
ss
xor
inc
mov
xchg
outsb
mov
fsubr
xor
les
add
cmp
sub
les
ja
rolb
mov
mov
mov
xor
outsb
jg
movsl
jne
subl
pop
add
push
lods
sahf
ja
adc
jne
jge
jl
scas
bnd
push
jecxz
sahf
xchg
pop
std
pop
icebp
les
cmp
pusha
mov
pop
dec
xor
and
mov
push
adc
pop
inc
loope
and
dec
pusha
lea
loop
je
mov
push
std
insb
push
cmpsb
decl
lret
in
fs
lods
cwtl
nop
decl
rol
movsb
sbb
pop
pusha
les
mov
popa
lods
xlat
dec
dec
mov
inc
push
push
in
jb
pop
mov
cltd
pop
xor
cmp
jmp
or
pop
repz
movl
es
in
outsl
dec
or
jo
addl
das
xchg
xchg
cwtl
cltd
ds
fistpll
repz
stc
xchg
sub
nop
and
imul
imul
aaa
sub
inc
mov
ret
dec
sub
push
push
adc
dec
cmpl
jl
je,pn
mov
and
fsub
lret
xor
push
dec
xlat
dec
arpl
mov
pop
and
int
mov
imul
jo
mov
lret
xchg
jle
jle
mov
leave
dec
mov
in
int
cmp
shlb
xor
movsb
loop
cmpsl
sub
outsb
std
movsb
push
cmpsb
inc
roll
mov
popf
cmp
adc
pop
aam
add
pushf
jb
cmpsb
xchg
and
adc
xchg
test
mov
and
mov
cmp
loope
lret
scas
lods
lret
test
inc
out
jmp
std
xchg
cmp
mov
jge
fwait
imul
adc
loopne
pop
pop
or
ljmp
pop
es
fwait
push
push
mulb
sbb
mov
lock
int
adc
daa
es
xor
lret
test
les
in
lret
jp
aad
and
test
inc
xchg
fsubs
dec
js
not
in
adc
jb
fcoml
jmp
inc
xlat
xchg
fdivl
sub
fwait
ja
xor
mov
or
sub
cmpsl
push
test
sti
inc
fs
outsb
in
mov
xor
daa
subl
divb
xchg
sarl
sbb
xchg
inc
sub
mov
jecxz
lahf
insb
in
pushf
xchg
mov
sub
mov
pop
mov
cld
pop
lret
ret
inc
or
pop
in
xor
or
jne
jne
push
testl
sub
jg
lcall
dec
xchg
jp
mov
add
and
lahf
jbe
xchg
stos
out
adc
fdivl
push
dec
cld
xor
dec
lods
int3
dec
shr
rorl
in
sub
sbb
insb
arpl
push
jp
mov
dec
cmp
jns
inc
mov
push
scas
dec
inc
adc
add
sub
jle
mov
inc
add
dec
xchg
cmp
insl
push
inc
sub
cli
mov
mov
mov
pop
dec
arpl
lock
pop
add
dec
xchg
jmp
cmp
stc
aas
int
mov
xchg
mov
mov
or
call
cmpl
bound
sub
xor
jle
ret
sahf
pop
inc
in
pop
xchg
pop
call
inc
aas
out
xor
xchg
xchg
sub
insb
dec
push
subb
mov
test
bound
adc
lods
adc
scas
jb
movsl
aas
cmp
xchg
xchg
mov
xchg
roll
sti
jp
xor
push
sbb
rcll
lods
mov
sti
arpl
cmpb
rcrl
push
xchg
inc
js
cmp
sahf
in
adc
and
cwtl
in
outsb
movsl
pop
pop
daa
iret
outsb
popf
dec
lds
add
mov
les
loopne
xchg
lea
imul
xchg
push
pop
xor
sbb
xchg
push
loopne
push
add
sti
cmp
push
test
dec
cli
cmpsl
add
pop
cs
inc
popf
push
mov
xchg
sbb
add
fisttps
repz
rcll
cmp
test
jecxz
iretw
or
add
int
push
into
addr16
or
addr16
sub
notb
sub
sbb
cld
and
sbbl
jns
popa
jne
arpl
lock
lock
xchg
jne
jbe
insb
mov
ficoml
xchg
movaps
jp
in
xchg
cmp
cmp
outsb
inc
adcl
cmp
out
jns
xchg
inc
test
incl
addr16
enter
fwait
subl
add
daa
leave
imul
adc
stos
hlt
sub
sbb
sub
ja
in
add
adc
test
mov
aaa
mov
jle
adc
dec
add
mov
inc
int3
xor
mov
mov
movsl
popf
or
jnp
dec
scas
pop
outsl
sub
push
adc
xor
mov
mov
pop
ficoms
sbb
push
lods
and
and
mov
push
xchg
rolb
fsubs
cltd
dec
dec
and
dec
xlat
sub
sbb
push
je
les
push
fcomps
xchg
pop
and
mov
sahf
inc
adc
aad
push
loopne
rol
aas
stos
and
pop
out
inc
xor
rcl
xor
cmpsl
aad
jbe
xchg
sbb
xchg
jp
xor
add
cmp
ljmp
mov
jno
loopne
mov
popf
inc
inc
jns
inc
sbbl
pop
pop
push
cwtl
sbb
leave
fildl
int
pop
mov
mov
mov
inc
jnp
scas
nop
ret
into
jne
mov
pushf
dec
jae
int3
sub
test
daa
imul
mov
scas
inc
cmpl
pop
cltd
adc
xchg
mov
fwait
sbb
xchg
scas
fcompl
icebp
inc
cmc
lods
sbb
and
inc
mov
imul
push
or
cmp
cmp
mov
cmpsl
jne
mov
xchg
test
rcrb
xlat
sti
insl
ds
push
inc
or
aaa
scas
lds
mov
ds
int
dec
pop
xchg
jbe
shll
hlt
movsl
out
icebp
cmp
mov
in
fnstenv
push
cli
push
dec
daa
andl
jb
sbb
adc
cmp
sarb
ja
cmc
imul
fadds
push
dec
lea
push
cmp
xor
sub
add
mov
pop
fsub
push
jo
and
pusha
and
rep
movsb
jne
fidivs
ljmp
lock
shrl
int3
mov
lds
clc
mov
inc
pop
dec
flds
ret
inc
pushf
pop
pop
mov
adc
rorl
mov
in
jbe
inc
mov
inc
cmp
push
ljmp
mov
add
fs
pop
ja
sbb
cs
rcrl
jg
sub
push
jae
push
ss
xchg
cwtl
jns
scas
adc
sbb
sbb
adc
clc
xchg
push
aam
js
mov
in
inc
ljmp
mov
outsl
jle
cmpsb
jae
cltd
fistl
adc
jl
add
mov
mov
les
out
int3
jns
mov
jnp
lahf
je
out
fbld
aad
xchg
inc
xor
push
mov
subl
cmp
mov
xor
adc
imul
out
sarb
pop
adc
popa
outsb
fldcw
xchg
sub
jg
rcrl
je
push
sti
and
popa
outsb
cld
cmp
cltd
hlt
dec
ja
iret
leave
xor
cmp
mul
xor
jnp
cmp
mov
jg
push
adc
test
mov
sbb
and
jge
arpl
mov
into
loopne
mov
adc
fcmovb
into
insl
cld
sbb
and
shrb
sub
icebp
pop
lahf
arpl
push
test
fidivrl
mov
in
mov
xchg
jns
add
in
jnp
sub
int
mov
cmp
xor
xchg
addr16
mov
imul
xor
fcoml
sti
sti
inc
dec
jp,pt
daa
gs
dec
xor
sub
into
lds
stos
xchg
test
shll
or
lahf
inc
pop
cwtl
add
mov
jno
push
lock
pop
and
xchg
out
loope
sbb
mov
adc
push
sbb
xor
dec
loopne
pop
stos
push
adc
sbb
and
sahf
mov
das
roll
xor
je
jg
adc
inc
mov
inc
aas
stc
popa
rclb
lahf
cli
scas
aaa
push
xor
or
fidivl
es
test
icebp
lods
out
aam
aam
imul
mov
cmp
push
push
out
mov
pop
test
testb
jno
cmp
insl
call
sti
jne
rclb
addr16
aad
cmp
outsl
inc
inc
xchg
into
shrb
jo
lods
negb
dec
pop
cli
push
adc
sub
sub
sbbl
movsl
dec
add
mov
pop
push
xor
jbe
xor
in
sbb
aam
out
scas
ds
pop
dec
f2xm1
sbbl
je
lock
xchg
out
add
idivl
jne
cmp
push
cs
in
mov
xor
ds
faddp
in
dec
sbb
outsb
pop
sub
push
lods
inc
mov
adc
pop
repnz
outsl
mov
add
jmp
mov
mov
mov
gs
mov
mov
xor
stos
inc
pop
mov
imul
mov
push
adc
sarb
add
fisttpll
movb
gs
ds
cmpl
dec
sahf
dec
add
insl
sbb
andb
jne
push
add
mov
dec
mov
cmp
pop
or
loopne
imul
pop
sub
adc
jmp
mov
sub
add
gs
add
in
sbb
insl
pusha
imul
lods
sahf
jnp
cmp
mov
sub
repnz
iret
stos
mov
pop
fisttpl
repz
or
repz
lods
rcrb
and
mov
or
xchg
push
push
push
mov
scas
cmovno
sarb
stc
mov
adcl
bound
loop
into
fsubr
vaddpd
pop
in
xchg
test
sub
out
ret
rcrl
fstpt
outsl
pop
sbb
inc
bound
xchg
inc
flds
adc
fbstp
mov
mov
xor
adc
sub
fidivs
inc
sbb
mov
mov
outsl
out
mov
test
addl
popl
in
cmpsl
sub
loope
inc
xor
test
pusha
jnp
hlt
cmp
mov
call
or
mov
push
and
push
pop
in
sub
adcb
and
fisubrl
pop
xchg
loopne
inc
negb
and
fwait
lea
in
or
cmp
jae
iret
pop
jmp
loopne
lcall
add
jmp
outsb
push
jg
leave
dec
lock
cltd
cmp
mov
pusha
add
js
fistps
inc
scas
pushf
cmpsb
add
cli
mov
jecxz
pop
jl
imul
aad
lods
pop
stos
add
in
sub
movsl
js
push
ret
mov
and
mov
andl
sub
les
mov
dec
cmp
push
ja
jg
rcrl
xchg
rcl
cltd
aas
xchg
xlat
pop
xchg
scas
leave
fldl
mov
cmp
cmp
and
cltd
rorb
int
scas
aam
nop
gs
jge
test
fxch
xchg
mov
xchg
in
test
in
fwait
mov
jno
cmp
out
into
or
fdivs
jo
mov
cmp
jae
fcmovu
lods
divl
push
cmc
pop
cmp
aaa
leave
mov
or
fiadds
dec
sbb
js
add
dec
push
pushf
inc
xor
daa
mov
clc
jo
nop
in
sbb
daa
jo
xor
mov
loope
jle
ss
das
cmc
jmp
mov
lods
sar
inc
xor
mov
xchg
in
test
mov
icebp
mov
xchg
lret
cmp
ret
std
mov
bound
inc
lds
faddl
xchg
jge
jmp
int
add
mov
pop
xchg
vprotd
std
addl
ss
pop
or
lret
push
add
sub
lret
test
sbb
nop
sahf
cmp
xor
push
or
fsubr
inc
in
cmc
leave
in
push
gs
jb
adc
jmp
mov
xchg
xorb
mov
dec
jp
sbbl
and
btr
cwtl
fwait
adc
ret
push
fbld
dec
lret
mov
scas
jo
in
add
jns
test
pop
orb
xchg
pop
mov
les
jae
test
pushf
mov
mov
ficomps
nop
shll
add
rolb
daa
std
mov
jbe
inc
sbb
inc
sbb
cmpsb
pop
dec
mov
aas
rclb
dec
xchg
adc
mov
jae
push
dec
lret
push
or
in
and
lret
cmp
les
mov
in
lahf
sahf
mov
sub
ficompl
dec
xchg
movsb
add
jmp
shl
inc
lds
push
sub
or
in
cmpsb
loopne
jb
push
fs
dec
jp
xor
fs
leave
xor
add
push
cltd
in
adc
sub
xchg
inc
cmp
pop
sub
flds
nop
leave
loop
pop
stos
popf
adc
leave
pop
sbbb
jno
sbb
fdivl
int
movsl
notb
inc
imul
mov
aam
enter
outsl
cmp
sub
popa
pop
insl
xor
loop
jle
fiadds
or
jge
ss
mov
mov
and
add
scas
mov
rcll
mov
xor
out
lds
pop
add
into
in
add
mov
cwtl
xor
pop
rcl
sbb
push
sub
dec
or
loopne
mov
nop
js
and
and
movsl
mov
ss
inc
notb
movsb
insl
int
jno
inc
lcall
pop
inc
aam
mov
dec
xchg
mov
mov
cs
mov
mov
push
jge
sub
repz
scas
xchg
dec
dec
pop
sahf
xchg
loopne
cs
fistps
test
push
xlat
mov
sub
dec
or
add
cmp
inc
in
test
inc
jnp
lahf
push
add
lret
imul
ja
mov
loop
insl
and
xor
aas
jmp
hlt
xchg
sub
mov
sbb
cmp
mov
lock
ds
stc
shl
xchg
aas
mov
dec
push
xorl
sahf
daa
lahf
inc
pop
cmp
jbe
push
and
jns
push
jae
lret
lea
dec
das
and
pop
mov
inc
lret
mov
call
faddl
and
mov
divl
sarb
out
loope
fmulp
inc
int
pop
repnz
sbb
stc
int3
dec
int
enter
fistl
cmc
loopew
int3
mov
cli
push
cmp
mov
shr
pusha
sahf
inc
mov
and
lahf
rclb
sahf
dec
inc
jae
stos
or
test
xor
loop
insl
test
jl
popa
adc
ljmp
xor
push
aaa
jl
scas
cmpsb
fs
add
push
xchg
add
jp
lods
xchg
mov
dec
out
stos
cs
in
nop
cmpsl
out
test
in
pop
fldcw
dec
decb
in
icebp
mov
leave
push
scas
add
loope
jl
push
jnp
in
leave
loopne
sbb
stc
mull
pop
adc
pop
lea
and
and
lret
mov
pop
inc
aam
mov
pop
sub
into
in
xchg
lahf
jp
cmp
cmc
jle
addb
cmp
xchg
lods
sbb
and
jbe
pop
fidivl
cmpsl
lds
loope
rcrl
mov
push
mov
mov
int3
xchg
shlb
std
sub
out
icebp
addr16
inc
cmp
dec
int
imul
inc
cltd
mov
mov
sahf
push
dec
or
lahf
fwait
mov
clc
dec
jno
sub
mov
ds
and
sti
mov
sahf
cld
in
ljmp
pop
stc
cltd
mov
dec
inc
pop
icebp
mov
mov
arpl
aaa
sub
push
ret
mov
movsb
cmp
test
jle
mov
jge
xor
cmp
aad
push
xchg
mov
jns
or
cwtl
fdivp
rdtsc
test
pop
mov
or
or
push
push
ja
imul
lods
adc
mov
mov
or
cmp
mov
outsb
dec
in
fdivl
and
sbb
sti
hlt
jecxz
mov
leave
push
mov
das
inc
sbb
in
mov
loope
add
mov
rdpmc
aad
rorb
cmp
sub
ret
outsb
stos
jno
sbbl
sub
and
xchg
lret
ja
aam
int3
dec
shlb
es
adc
and
insb
xor
js
lods
addl
pop
out
push
push
mov
inc
int3
cltd
push
rol
sahf
imul
cwtl
test
ss
leave
mov
js
and
push
movsl
jge
jbe
push
call
es
lcall
adc
popa
cmpsl
repnz
add
mov
inc
add
mov
test
out
div
mov
and
push
mov
popa
loopne
rorb
sbbl
sub
movsb
std
fwait
jle
sbb
mov
es
xor
push
nop
daa
test
jns
imul
jmp
mov
mov
lret
sub
fdivrl
icebp
scas
adcb
dec
aas
ret
testl
mov
jb
cwtl
icebp
xchg
loop
inc
mov
cmp
mov
data16
stos
movsb
or
dec
push
dec
pushf
aad
int3
outsb
and
pop
mov
pop
mov
mov
outsl
sbb
loope
aaa
jns
int
adc
out
out
mov
push
cltd
mov
xchg
stos
sub
sub
lcall
mov
jnp
iret
test
divb
stos
nop
push
lret
and
jp
mov
shll
mov
ds
and
rcll
jle
mov
lods
or
jb
hlt
movsb
mov
aad
pusha
out
pop
cmc
je
call
jae
out
mov
push
push
inc
ret
mov
mov
data16
lock
std
cs
jmp
jnp
pop
aaa
pop
jmp
or
add
jo
add
sbb
lods
inc
jne
mov
pop
ja
aam
or
pop
pusha
adc
arpl
jb
lds
mov
gs
inc
mov
movsl
and
cmpsb
cmp
fwait
hlt
ret
push
jl
rcll
fldenv
pop
mov
sbb
ret
in
or
fmuls
cltd
sahf
mov
dec
fnstenv
xchg
repz
dec
out
les
mov
stos
das
jne
or
add
rorl
ret
sbb
push
lcall
xchg
xchg
add
mov
ds
lock
sahf
mov
pop
ds
add
test
mov
xchg
inc
cmp
jbe
mov
shlb
or
xchg
pop
cs
lds
dec
pop
mov
and
adc
push
mulb
mov
lods
cmc
ss
jb
aaa
addb
and
out
add
ret
jp
dec
jae
sbb
sub
xchg
dec
mov
xchg
pop
addr16
fldl
lcall
jns
inc
xor
adc
loop
fdiv
push
xor
fcmovnb
cmp
hlt
std
cmp
stc
mov
jecxz
stos
xor
mov
rol
cmp
mov
movsb
insb
push
push
xchg
jo
xchg
xor
xchg
popa
scas
mov
mov
in
sub
test
inc
popa
out
jns
lea
lahf
cmp
mov
pusha
adc
data16
pop
rcll
xchg
cmpsb
lea
push
ficompl
and
inc
test
cmp
mov
mov
pop
pop
inc
cmp
jns
mov
rorb
in
repz
xlat
rclb
inc
mov
rcll
popf
popf
andb
mov
lret
sahf
push
test
xchg
iret
outsb
inc
inc
push
test
cmpsl
add
fildl
push
outsl
or
fabs
xchg
lret
xchg
neg
mov
xor
cld
xor
xor
jmp
sub
arpl
leave
or
fsubl
sbb
dec
sysret
gs
in
xor
push
outsl
add
mov
in
push
ds
cmp
push
cld
ds
jnp
ja
jg
sbb
negb
adc
loopne
jmp
inc
nop
jbe
out
out
cmp
sub
loope
and
cld
pop
mov
cld
int
stc
push
iret
sub
xchg
in
push
or
dec
or
add
loop
fdivl
pop
jp
and
stos
push
cmp
lods
mov
xor
dec
add
add
mov
dec
sbb
mov
sbb
ficoms
vpunpckhwd
mov
inc
push
add
int3
stos
dec
enter
shl
xchg
aam
cmp
mov
and
pop
popa
std
outsb
cld
adc
subl
sub
inc
mov
pop
sub
push
or
addl
test
movsb
bound
mov
jmp
das
jmp
sarl
shlb
add
incl
jge
dec
sbb
ds
je
add
push
or
mov
lcall
popf
jne
testb
jae
in
sar
in
jp
out
jp
and
inc
cmp
inc
pop
add
rep
mov
xchg
push
sysenter
daa
pop
es
jge
mov
sub
pop
jbe
mov
andb
insl
scas
xor
push
and
jo
mov
push
and
or
jno
jmp
ret
test
lock
ret
ds
imul
or
and
dec
or
cmc
xchg
orb
out
pop
bound
lcall
inc
xchg
fdiv
icebp
std
sahf
sbb
in
inc
es
xor
inc
mov
lds
mov
scas
xlat
enter
xorl
add
cwtl
lock
mov
and
xor
cld
and
fimull
and
push
imul
pop
xor
inc
push
mul
xor
dec
test
movl
dec
sbb
call
mov
push
mov
mov
rclb
sub
mov
adc
into
cli
cmp
xor
mov
push
aad
push
push
and
xchg
mov
push
sub
and
xor
cmp
xchg
cmovg
xor
or
lods
mov
cmp
inc
sahf
out
sbbl
cmpsl
scas
data16
lret
jnp
in
xlat
scas
adc
and
stc
mov
ret
std
mov
sbb
sti
mov
inc
hlt
inc
jg
add
int
enter
mov
mov
xor
mov
add
fiadds
mov
iret
dec
rolb
sub
lahf
aaa
and
adc
push
aad
in
xor
lahf
es
mov
dec
bound
pop
pusha
out
jno
sbbl
js
push
sbb
xchg
cmpsl
cmp
pop
pop
addb
fdivrl
int
lods
add
in
int3
clc
or
loope
dec
xlat
les
js
pop
push
pop
shlb
movsl
and
sbb
jge
insl
mov
mov
push
xchg
mov
jno
push
rcl
mov
cmp
es
rcrb
lahf
out
jmp
mov
mov
mov
ret
mov
add
cmpsb
add
pop
fcmovnbe
mov
fsubrs
gs
aam
mov
sbb
push
rorl
inc
scas
or
dec
xor
adc
rolb
jnp
nop
push
add
xchg
mov
adc
xchg
sub
mov
push
pop
mov
xor
push
gs
mov
add
jmp
popf
scas
int
in
pop
lods
jp
sub
mov
mov
sbb
loope
in
sub
xor
mov
add
dec
cltd
jmp
mov
loop
pushf
pop
out
test
sbb
mov
xchg
xor
cmpl
test
pop
in
aam
xor
sbb
mov
push
push
push
sti
data16
xchg
jle
rcrb
mov
xchg
arpl
shll
je
aad
and
or
xlat
xchg
pop
loop
les
cld
in
and
ljmp
sti
leave
xchg
mov
push
sahf
cmp
lret
and
dec
push
repz
pop
sub
and
cmp
mov
add
push
sahf
clc
jne
pop
adcb
imul
sbbl
cmp
xor
pop
adc
mov
lret
xchg
ss
inc
iret
mov
xchg
rcrl
imulb
es
sub
push
lds
pop
push
mov
test
xor
mov
insb
xor
cmpsl
enter
inc
lds
enter
lds
cmpsl
xchg
fisubl
sub
mov
jne
ret
or
mov
jb
inc
enter
mov
loope
push
or
or
into
mov
mov
jle
mov
add
or
repnz
xchg
punpckldq
mov
aam
jne
or
hlt
jno
les
dec
outsl
adc
into
cmp
outsl
loope
and
mov
add
mov
xor
out
jo
outsb
pushf
mov
sub
pop
je
cmp
jne
cmp
mov
test
icebp
popf
iret
stc
and
sub
test
mov
xchg
or
pop
jne
push
ss
lods
in
jecxz
add
and
adc
sbb
sarb
or
pop
dec
daa
xchg
mov
xor
jmp
inc
in
inc
aad
xchg
sub
dec
xchg
push
mov
cmpl
fdivrl
and
ret
sbb
jb
dec
in
bnd
push
pop
in
mov
std
inc
repnz
dec
pop
imul
lods
pusha
es
and
cli
jnp
push
xor
cs
mov
ret
mov
push
xchg
outsb
sarl
inc
push
in
or
test
insl
push
xor
test
inc
adc
or
pop
subl
mov
mov
out
push
int
pop
mov
scas
sbb
aas
jo
dec
jge
sub
or
dec
push
cltd
mov
adc
jb
cmp
fidivrl
pop
cmp
stos
sbb
andl
das
inc
and
outsb
pop
mov
out
sub
sbbb
loopne
or
fdivrs
push
pop
jle
or
jns
scas
imul
xor
cmp
sub
into
adc
or
not
or
add
lods
push
stos
xor
ljmp
lea
test
and
jbe
mov
das
stc
mov
mov
xchg
pop
loope
es
sarl
cmp
arpl
mulb
mov
fnstcw
sbb
bound
lea
cmp
jnp
popa
cmp
arpl
data16
fldl
loopne
outsb
fwait
aaa
xor
or
sub
dec
shrb
dec
outsb
bound
mov
hlt
adcb
dec
mov
sbb
xchg
mov
aad
dec
and
out
sub
pop
push
or
cmp
mov
jae
aas
bound
xchg
lcall
jnp
sbb
sar
icebp
shrb
fdivl
loop
loope
jmp
mov
sbb
rorb
jmp
lcall
pop
mov
pop
cwtl
mov
gs
stc
stos
fisttpll
mov
adc
or
stos
xor
daa
cmpb
pop
pop
sub
ds
jp
js
mov
inc
push
push
push
clc
popf
push
in
adc
nop
out
xchg
testb
mov
shrl
test
das
ret
mov
rorb
cmc
add
mov
adc
jno
push
sbb
out
xor
int
sbb
pop
lock
icebp
mov
pop
jns
adc
dec
xchg
in
movsbl
js
dec
sub
aaa
scas
push
dec
call
cmpsl
out
xchg
cmpl
jns
inc
dec
nop
pop
pop
aam
push
div
lods
dec
leave
pop
testb
and
testl
push
ss
or
lods
test
push
or
js
jno
jecxz
in
cmp
or
push
icebp
call
bound
aaa
lods
sbb
mov
test
jae
push
stos
lods
inc
pop
adc
int3
and
pop
std
inc
mov
int
xchg
push
fistpl
sbb
test
cli
sahf
insl
mov
stos
sbb
or
sbb
or
mov
and
cs
pop
jle
scas
sbb
pushf
push
and
and
pop
jae
ficompl
adc
in
mov
out
push
in
out
and
sbb
dec
cwtl
adc
inc
ss
in
jb
pushf
es
pop
jns
jae
cs
cltd
mov
mov
in
in
and
cmp
leave
and
loope
movl
icebp
sub
jmp
add
inc
lods
outsl
fnstsw
pop
mov
ss
mov
out
inc
inc
sbb
aas
aad
movsl
insl
in
sub
lea
les
mov
xchg
mov
addr16
int
adc
cwtl
jne
je
or
repnz
insl
xor
mov
pop
out
pusha
inc
cmc
fstp
into
add
jo
jno
popf
add
sub
lcall
add
movsb
rcl
mov
jle
or
jle
pop
arpl
leave
push
mov
push
fistl
mov
push
sub
addb
pop
adc
mov
bound
aam
jecxz
adc
sarl
pop
pop
xor
sahf
cli
adc
pushf
cwtl
mov
inc
arpl
sub
outsl
pop
js
mov
icebp
mov
or
rcr
push
daa
xor
mov
dec
jp
cmc
and
mov
cmpsb
jmp
push
scas
mov
shlb
cwtl
push
test
int
push
jb
out
xchg
dec
daa
testb
pop
int
cmp
push
cmp
dec
loop
push
lods
dec
rolb
sbb
jge
insb
loopne
jns
inc
jae
insb
push
fs
js
lret
ljmp
lahf
xor
outsb
loope
dec
mov
mov
mov
cwtl
sti
mov
in
in
mov
jg
cmc
and
xor
popa
jae
orb
cmp
imul
and
lahf
and
jge
lcall
lret
mov
stos
push
fs
js
sbbb
test
cmp
sbb
inc
xchg
ret
stos
fcmovne
sbb
rclb
or
imul
push
sahf
push
imul
xchg
pop
and
ss
add
es
je
stos
imul
outsl
icebp
jl
scas
jb
xor
je
stc
mov
pop
add
mov
lods
sbb
loopne
cltd
xor
ljmp
aaa
fldcw
mov
add
xchg
fs
jno
test
dec
sub
xor
mov
and
cmp
lods
mov
andl
xchg
xorb
fsub
fs
mov
leave
adc
push
mov
pusha
sub
sarl
xchg
mov
xor
ja
rolb
push
addr16
cmp
cltd
mov
cld
cs
push
xor
testl
push
jb
clc
sahf
lods
mov
cmp
adc
repnz
loope
outsb
xchg
xchg
mov
lahf
in
push
pop
cmp
mov
push
sbb
cmp
cmp
imul
sub
and
push
and
add
add
push
jne
aaa
std
cld
fwait
das
fistpll
mov
inc
enter
mov
fucomip
clc
ret
sub
lret
xchg
pushf
ljmp
add
or
sub
sbb
dec
cmpl
xchg
in
mov
mov
dec
lret
mov
mov
loopne
clc
xor
shr
push
stc
push
insl
xor
xchg
addb
adc
lods
daa
aaa
xchg
mov
and
fcmovnb
int3
imul
fiaddl
dec
aad
xor
xchg
ja,pn
inc
add
xorl
testb
bound
sarb
mov
enter
fwait
lods
cmp
movsl
push
pop
push
les
sbb
addl
in
inc
cmpl
lret
jl
out
lahf
call
mov
xchg
clc
mov
lret
push
mov
call
call
aas
or
rcrb
nop
mov
mov
add
push
dec
pop
insl
inc
push
and
jmp
movsl
xchg
xor
jbe
popf
cmp
ficompl
sub
sub
out
and
filds
push
mov
ret
pop
push
xlat
push
pop
sub
jnp
or
in
xor
ljmp
roll
outsl
les
loope
test
jl
negb
jo
ret
arpl
xor
lret
js
movsl
cmp
movsb
ret
jmp
stc
js
rorb
sbb
mov
cmpsb
sbb
movzwl
add
fsts
inc
xchg
push
sbb
out
mov
and
cmpl
test
push
pop
mov
dec
shll
add
loope
push
cmpsb
cmp
mov
repnz
in
mov
pop
ret
and
cmp
ss
mov
repz
or
imul
adc
cmp
scas
xchg
dec
push
xlat
jg
push
mov
fcomps
and
inc
cmp
inc
mov
push
pop
sbb
stos
adc
shlb
movsb
pop
mov
cwtl
les
fwait
dec
addr16
inc
je
clc
popa
out
inc
add
ds
icebp
pop
pushf
mov
xchg
cmpsl
pusha
or
mov
mov
fs
jmp
insl
aam
mov
incb
clc
cwtl
stc
mov
scas
stos
les
out
sar
mov
or
sub
fistpll
dec
add
cli
dec
test
mov
lcall
arpl
xor
test
jge
push
pop
mov
pop
push
in
add
sbb
mov
subl
mov
cmp
jle
pop
inc
jg
ds
gs
test
jno
cmp
gs
push
sbb
loopne
mov
lret
inc
stos
leave
mov
mov
dec
shll
divps
fmuls
popl
xchg
imul
xor
sub
jle
enter
lds
int3
pop
loopne
stos
ret
outsb
iret
cli
or
ja
push
movsl
jne
sbb
pop
aas
ja
pop
xor
xchg
xchg
sub
sarb
jno
mov
inc
das
into
int3
push
mov
inc
xchg
xor
push
fdivr
ret
stos
and
add
divb
mov
adcl
fdivs
ja
negw
dec
mov
vmovhpd
mov
mov
xchg
push
xor
lock
std
cmc
mov
lock
cmp
inc
aaa
and
inc
inc
daa
rolb
xchg
jl
notl
insb
push
pop
jg
sbbb
xor
mov
jg
into
push
add
add
lds
add
mov
aad
push
jp
and
sbb
int
out
mov
stos
daa
push
mov
push
sbb
cmpsl
sti
jae
pop
popa
cld
imul
inc
cmpsb
sbb
jbe
sti
dec
push
pop
je
fmull
repz
dec
jo
gs
pop
cmpsb
clc
cmp
inc
ficoms
mov
scas
ret
fs
push
inc
and
jo
mov
xchg
or
js
inc
inc
aaa
push
mov
cmp
rorl
cmpsb
lds
lds
add
and
fists
cmpsl
jecxz
pushl
insb
in
push
cmp
ss
jno
cmp
and
push
sbb
add
mov
jns
fwait
and
pop
std
push
push
dec
pop
cmp
icebp
cmp
ja
xchg
mov
push
pusha
ljmp
sarb
xor
xchg
push
jge
add
shll
jl
clc
loope
and
jecxz
iret
out
sub
pushf
sarb
movb
sbb
lods
mov
aaa
les
sub
add
mov
bound
hlt
in
jmp
mov
iret
add
xchg
iret
int3
mov
mov
jecxz
push
xchg
lds
bound
adc
fmull
testl
loope
rcrl
push
sbb
inc
out
mov
lods
mov
mov
rcl
stos
mov
add
in
dec
in
and
jne
std
test
dec
lods
xor
xor
orb
mov
push
hlt
pop
iret
aam
cmp
fidivl
fsubrl
pusha
aad
sub
xor
xor
push
adc
cmc
xor
pop
jmp
std
inc
scas
cmp
mov
nop
sub
js
dec
icebp
mov
test
in
jns
push
and
fimull
jmp
xor
out
addb
cmpsl
rorl
out
mov
pop
shlb
aas
inc
or
xchg
aam
orl
push
mov
movb
test
das
push
pop
jg
mov
inc
insb
inc
pop
test
stos
push
or
push
mov
push
fimuls
mov
data16
cs
ljmp
or
gs
push
pop
bnd
pushf
imul
mov
and
sbb
mov
repz
lea
sub
xchg
aad
insl
daa
adc
jle
adc
inc
adc
and
add
sub
cmp
in
fwait
mov
dec
out
xchg
ret
dec
lahf
aad
fildll
mov
xchg
and
push
cltd
cmp
out
pusha
cwtl
jnp
sub
push
dec
leave
mov
and
sub
push
mov
and
lret
adc
movsl
movsl
xor
mov
ficoml
mov
loopne
xchg
ss
or
push
jno
dec
shlb
out
jae
pop
cmp
mov
scas
sub
push
jp
mov
sub
dec
or
lods
ficompl
or
lds
mov
addr16
loop
movsl
sbb
and
sbb
ret
loopne
test
push
sub
or
cwtl
lock
aam
xchg
push
and
imul
xor
cmp
pop
pop
std
stos
push
testb
outsl
pop
lds
cmpsl
sti
call
lods
es
mov
jno
ret
insl
out
rorb
or
jge
xchg
push
xor
sbb
push
push
bound
daa
push
scas
mov
fsubs
add
mov
pop
dec
mov
popa
roll
out
jns
fs
fdivrs
inc
inc
roll
cmp
jmp
sub
int
sbb
cwtl
dec
stos
pop
enter
mov
mov
cs
rcrb
pop
push
imul
cld
xlat
mov
rolb
pop
test
sbb
jns
xchg
sti
pop
cmp
adc
xchg
int
repz
jno
jo
xchg
jecxz
dec
aaa
outsl
pop
xchg
add
cmp
pop
repz
push
push
sub
mov
lods
mov
adc
jne
in
pop
mov
xchg
xchg
pop
testl
and
cmc
rol
sub
cmc
cwtl
dec
mov
dec
sbb
aam
or
jge
xchg
addr16
loope
pop
in
cmpsb
mov
test
test
popf
les
arpl
scas
push
insb
push
jecxz
cmp
out
pop
dec
mov
shlb
test
stos
mov
sub
adc
sbb
dec
mov
lahf
pop
dec
push
cld
and
mov
leave
dec
xchg
out
adc
into
shlb
mov
push
sbb
shlb
xchg
arpl
das
pop
xchg
sbb
dec
mov
mov
xchg
rcll
mov
je
inc
or
and
inc
jp
jo
pushf
mov
mov
cld
loope
clc
adc
inc
movsl
push
repnz
dec
inc
cmp
rcrl
add
sbb
mov
mov
push
in
xchg
xor
cmpsl
pushf
sub
cmp
das
sub
ficompl
pop
mov
repz
and
cmp
sub
clc
pop
out
cmpsb
int3
and
sti
pushf
push
test
dec
xchg
inc
subb
jecxz
jbe
xor
push
nop
leave
lds
cmc
ja
jns
leave
dec
xor
push
fucomi
leave
mov
xchg
xorl
push
mov
adc
shrb
ficomps
push
cwtl
mov
fs
in
push
movb
mov
xor
pop
adc
sub
fcoms
mov
xchg
repz
and
popa
nop
jns
in
xorl
aas
cmp
insl
pop
xor
rcrb
or
push
xchg
out
js
mov
stos
out
sbb
fstl
cs
adc
or
cmp
adc
cld
dec
add
pop
sbb
add
pop
bound
in
cld
es
sbb
pop
sub
or
pop
mov
and
fwait
cmp
mov
pop
mov
mov
inc
cs
push
mov
inc
dec
dec
sub
out
and
mov
lea
cmpb
lds
insb
cmp
mov
or
lret
stos
jne
dec
push
arpl
jno
arpl
pop
and
testl
bound
add
sbb
rorb
cmp
pop
cmp
mov
mov
dec
cmp
icebp
inc
or
cs
adc
pop
aas
dec
mov
xchg
mov
mov
mov
aaa
je
out
fstps
sub
mov
fdiv
push
pop
leave
popf
push
stos
pop
lock
dec
cmpb
ljmp
or
adc
adcl
add
loop
inc
outsb
jnp
push
scas
shll
xlat
sbb
sub
pop
push
jp
mov
gs
inc
ss
jmp
mov
mov
push
fisttpll
and
and
sub
jmp
jno
sbb
test
mov
lods
xchg
dec
lds
fstps
scas
pop
out
rorl
dec
in
shrb
jmp
jmp
or
fildl
dec
mov
or
mov
inc
pop
xor
lods
sub
cmp
pop
mov
xor
cvttps2pi
pop
mov
push
sahf
push
sbb
pop
inc
jns
mov
outsl
push
dec
rorb
jae
subb
mov
sbb
xchg
and
or
jno
data16
xchg
out
mov
dec
aad
push
cmp
pushf
adc
aas
pushl
xchg
mov
imul
push
xchg
scas
jno
addr16
lds
std
shlb
iret
jge
jg
lods
ds
cmp
mov
popf
jnp
push
mov
sbb
in
lret
sbb
sub
fcmovb
lock
mov
sub
add
xor
push
mov
leave
call
pop
enter
frstor
inc
adc
insb
adc
adc
add
cltd
add
ret
out
mov
inc
inc
cmp
mov
xchg
fsubl
cmp
xchg
mov
mov
test
inc
push
sub
out
pop
push
rclb
daa
adc
pusha
hlt
sbb
popf
inc
cmpsl
fiadds
je
jae
and
inc
arpl
pop
push
and
pop
cmp
fsubl
sarb
push
jge
sub
pop
aas
adc
jmp
xorb
xor
mov
jb
push
int3
cli
jmp
cld
scas
mov
dec
xchg
mov
cwtl
jo
dec
into
ljmp
and
movsb
pop
popa
jl
sub
loope
jg
cmp
dec
mov
pop
push
push
dec
inc
sub
lods
stos
or
inc
pop
mov
sub
popf
fnstenv
inc
movsb
mov
sbb
out
push
jl
fistps
jnp
mov
stos
fs
cmp
lods
mov
imul
movsb
rcl
jb
jg
scas
hlt
leave
push
repz
in
test
dec
pusha
aaa
pushf
stos
mov
mov
inc
mov
cmpsl
jmp
insb
shrl
pop
sbb
lret
jbe
push
dec
aaa
jecxz
mov
pop
and
cmp
cmc
pop
lcall
xchg
out
xchg
lret
arpl
into
xlat
sbb
xchg
jmp
adc
gs
decb
or
arpl
inc
inc
lds
push
mov
jmp
add
jle
pop
and
pop
cmpsl
push
pushf
dec
add
filds
sub
sarl
xor
in
add
popa
fsts
pop
mov
adc
mov
daa
fsubrs
bound
and
clc
nop
adc
ss
rclb
aam
ljmp
mov
mov
sbb
inc
out
inc
jmp
inc
cmpsb
jle
into
aas
jns
cmp
leave
sub
adc
push
push
mov
sub
cmpsl
stos
jmp
cs
push
push
inc
jmp
stos
dec
mov
sti
inc
fstl
inc
sbb
or
lock
adc
andb
mov
stos
lahf
mov
sbb
xchg
fnsave
xchg
sbb
repnz
mov
or
and
pop
dec
gs
xor
mov
adc
int
cmp
cltd
or
cs
pop
push
arpl
adc
push
popf
in
push
rcrl
mov
push
sbbb
mov
shrb
testb
loope
pop
scas
pop
sub
int
mov
xor
push
dec
pushf
sti
xchg
stc
in
cmp
mov
xor
adc
mov
xor
xor
shr
jl
cltd
lahf
mov
jg
adc
jo
sub
imul
push
adc
cmpsb
pop
icebp
es
in
pop
mov
out
shl
mov
imul
cld
rcrb
sbb
push
sbb
test
lahf
hlt
jmp
adc
fstpl
inc
flds
push
sbb
pop
add
aam
jmp
sbb
xchg
lds
mov
jecxz
int3
pop
pop
cmp
inc
outsl
add
jne
lds
push
in
jnp
es
sti
mov
inc
ficoms
push
cli
negl
fmuls
hlt
inc
cmpsb
cmp
fmulp
pushf
leave
xchg
adc
jns
lret
inc
mov
divb
add
inc
pushf
mov
mov
movb
stos
jne
push
rclb
sbb
inc
int3
fisttpl
xor
mov
cmpsb
orb
xchg
inc
sub
cmpsb
es
sti
dec
add
mov
fs
jmp
ja
push
call
cmc
jae
sbb
and
lds
sbb
cmc
push
sbb
js
sbb
les
or
dec
sub
enter
adc
movsb
aad
or
data16
jle
cmpsb
icebp
sub
ret
pop
xor
jle
pop
scas
mov
cmpsb
dec
outsb
pop
sub
test
mov
aad
ret
add
fmull
add
rorb
pop
and
lds
testb
or
lret
cmp
lret
lea
pop
pcmpeqb
loop
mov
testl
lret
sbb
pop
movsb
xor
push
lcall
cmp
inc
mov
in
aam
js
push
dec
notl
pusha
dec
jns
nop
xchg
jnp
adc
lds
incl
hlt
lcall
lock
sub
dec
mov
in
sub
sub
rol
mov
xchg
fistl
xlat
push
sbb
adc
cmp
std
dec
shll
aas
mov
aad
push
cmpsl
or
mov
xor
fistpl
pop
outsl
pop
push
icebp
xor
clc
cli
and
jp
insb
and
xor
movsl
mov
mov
cmp
cmpsb
push
fwait
insl
mov
jle
insl
cltd
mov
stos
or
iret
cwtl
cmp
stc
push
and
lret
dec
jne
cli
cmpsl
lret
adc
fnstsw
mov
out
cld
out
sub
test
sub
xchg
xor
sbbb
in
xor
fadds
pop
push
push
cmpsl
mov
nop
insb
leave
sub
test
pop
cmp
lea
cli
sbb
paddq
add
push
jmp
inc
jo
push
dec
fisttpll
fiadds
inc
dec
addr16
inc
mov
add
int
mov
pop
dec
pop
out
jnp
xchg
nop
ret
sbbl
mov
sub
push
shl
loopne
pop
jl
pop
dec
jns
ret
sbb
cmp
mov
out
aas
cmp
sbb
jmp
test
in
sahf
js
into
push
test
or
pop
mov
es
lahf
andw
imul
mov
sti
mov
adc
mov
js
lods
scas
lods
adc
xchg
stos
mov
mov
imul
out
mov
inc
scas
jmp
divb
sbbl
mov
sbb
stos
jmp
sti
xchg
arpl
xchg
xor
mov
jb
shrl
std
inc
mov
loope
imul
loopne
lea
fsubrs
int3
xor
mov
pop
jmp
mov
scas
xor
mov
data16
or
daa
cmp
loopne
imul
pop
adc
sub
pop
cmc
push
fcomi
je
aaa
shll
inc
inc
add
or
push
int
fimuls
ret
rcr
xor
adc
mov
test
out
sbb
and
xor
mov
clc
loope
lods
fistl
subb
int3
js
xchg
push
pop
addr16
mov
jbe
mov
jns
shrb
pop
add
add
rorb
insl
cmp
mov
inc
bound
xchg
gs
push
mov
ss
push
loope
cltd
cmpb
adc
movsb
mov
jns
lret
sub
in
jmp
xor
adc
es
mov
call
push
push
dec
stos
xchg
aas
and
push
xchg
mov
test
cld
xchg
mov
cli
cmc
cmpsb
cmp
data16
rcrb
lahf
add
dec
movsb
xor
mov
and
outsb
mov
jns
mov
mov
movsl
sbb
dec
shrl
lret
call
inc
out
fwait
out
and
push
imul
push
subb
pushf
mov
xlat
stc
and
int
js
add
lea
xchg
push
push
xor
testl
stos
adc
repnz
repz
mov
sub
outsl
xlat
fldl
stos
xchg
xlat
sub
clc
or
xor
and
lret
pop
daa
aas
imul
inc
fstpt
adc
pop
cli
adc
jle
out
cmp
pop
fisubrl
aas
mov
sub
pusha
andb
stos
push
pop
clc
mov
cs
push
push
test
xchg
mov
push
shld
jno
gs
pop
jns
cld
jl
addr16
outsb
gs
mov
movsb
lock
cmc
rcrb
mov
or
mov
lea
addb
push
jecxz
dec
mov
xor
cli
or
ja
jp
dec
inc
rorl
adc
dec
pop
and
mov
out
pop
pusha
inc
outsb
mov
pop
fmuls
mov
cmp
pusha
sti
sbb
push
outsl
push
fcmovne
push
mov
cmp
mov
test
sti
mov
cmp
cmp
xor
jge
xchg
mov
push
jg
clc
out
imul
add
insl
lds
adc
push
or
sub
scas
mov
fwait
leave
push
aaa
loopne
pop
adc
iret
cld
test
cmc
rcr
mov
mov
inc
mov
push
fnstenv
jp
fisttps
mov
add
sarb
pushf
ds
rolb
jmp
mov
aaa
inc
mov
in
mov
adc
movl
fyl2x
xchg
dec
sub
sahf
and
cmpsl
push
sbb
dec
clc
sub
out
adc
add
push
add
sub
cmp
ja
adc
cmp
scas
fisubrs
lea
stos
inc
inc
hlt
push
add
pop
mov
mov
inc
fstps
adc
outsl
setl
lcall
lods
sbb
mov
adc
and
jno
pop
cmc
outsb
ror
sub
jnp
loop
dec
mov
outsb
inc
xchg
push
orb
mov
jg
add
xor
push
rolb
xlat
and
dec
es
cmp
sbb
dec
inc
mov
mov
insl
cmp
push
push
and
lcall
fstpt
shlb
push
aad
jbe
xor
out
jne
clc
mov
sub
dec
sbb
das
insb
xchg
addr16
mov
mov
js
ss
xor
adc
inc
sti
test
loop
adcl
push
clc
cmp
xchg
divb
add
xchg
and
add
jmp
mov
mov
out
ret
into
dec
or
cmp
loop
sbbb
insw
loope
pop
icebp
add
adc
dec
add
push
lods
pop
sbb
adcb
push
or
hlt
mov
mov
sbb
mov
jnp
aam
aad
jmp
mov
push
push
mov
adc
lds
push
fistpll
icebp
fcomps
pop
push
inc
mov
bnd
sti
dec
xchg
fxch
adc
test
inc
faddp
repnz
inc
repnz
arpl
mov
mov
push
lods
stc
imul
inc
into
clc
nop
jb
jecxz
out
pop
xchg
call
fldt
clc
xor
xor
push
mov
jg
pushw
push
repz
jg
xor
loope
lds
movsb
icebp
jbe
pop
into
or
call
sti
adc
mov
aad
and
les
push
mov
xchg
inc
jl
or
jo
in
sub
movsl
fdivs
imulb
cli
test
or
xorl
pop
out
lret
out
mov
add
fwait
sbb
loope
stos
adc
sub
fldenv
mov
fwait
mov
pop
out
popa
jg
mov
das
fmuls
aas
repnz
lea
ret
fiadds
and
lahf
adc
insl
pushw
and
and
inc
sahf
adc
sbb
lcall
xor
xor
vmread
add
jmp
adc
jle
jl
fucomp
jmp
add
mov
mov
clc
sbb
jg
push
lock
cmc
sbb
cmp
cli
into
cmpsl
dec
mov
loope
hlt
je
js
or
inc
pop
and
adc
lds
lock
or
pusha
jbe
jecxz
or
ret
lret
orb
dec
and
imul
jnp
mov
pusha
push
pop
push
lock
mov
ret
fiaddl
iret
lahf
mov
push
pop
add
aaa
xor
mov
jge
mov
ss
iret
add
pop
inc
out
je
mov
xchg
pop
addr16
or
and
cmpsl
imul
pop
sub
cmc
bound
inc
les
mov
fnstcw
test
mov
lds
icebp
aaa
inc
jo
xor
mov
sub
aad
xchg
and
daa
imul
xchg
in
mov
shlb
shr
add
jae
mov
add
or
cltd
fstl
mov
push
xor
inc
aaa
test
test
arpl
dec
adc
sub
stos
push
rorb
or
cwtl
js
call
leave
outsl
aad
adc
enter
adc
movsl
mov
rclb
inc
aas
addr16
xchg
jns
fwait
outsl
faddp
lods
lret
push
pop
cmc
and
nop
add
stc
jbe
sub
jo
hlt
push
pushf
sub
imul
xchg
push
popa
mov
cwtl
lea
cli
lds
jns
dec
lahf
mov
jno
jecxz
dec
rorl
or
pop
pop
fldcw
test
lods
pusha
pop
cwtl
and
ds
lret
lret
aaa
or
vunpcklps
push
jae
pop
ret
mov
stos
inc
mov
adc
dec
outsl
iret
cmp
cmp
lods
push
pop
data16
push
mov
sahf
in
call
xlat
das
xor
mov
scas
inc
shl
sbb
sub
test
imul
in
in
daa
xor
push
xchg
in
pop
into
test
fwait
xor
dec
ja
or
jecxz
and
push
hlt
lock
dec
or
je
cmp
mov
gs
lea
into
test
sub
int3
call
inc
jp
clc
addr16
clc
inc
mov
jb
dec
stos
inc
sub
add
mov
jg
movsl
nop
inc
divb
cmp
in
sub
imul
mulb
rcrl
pop
aam
cmp
jle
inc
or
popa
xchg
mov
in
jno
inc
cli
repz
sub
dec
jg
add
imul
mov
insb
sub
push
int3
cmp
mov
jg
xchg
jl
cmp
ds
xor
xchg
mov
sbb
fmull
xor
mov
repz
fcoms
sub
add
je
adc
cs
in
pop
pop
imul
inc
pop
adc
clc
dec
push
jbe
cmp
out
hlt
clc
fsubrs
lods
xchg
jns
mov
dec
incl
lock
in
dec
mov
dec
adc
fs
sbbl
mov
dec
mov
xor
lret
sbb
arpl
call
sbbl
mov
adc
cmpsb
ror
bound
cs
addr16
adc
dec
cmp
call
add
inc
xorb
cmp
enter
mov
pop
out
sahf
rcrb
ja
cmpsl
mov
mov
sub
or
in
ja
and
inc
inc
testb
icebp
pop
stos
fadds
jb
inc
stos
jle
or
inc
mov
into
sub
and
stc
fnstenv
cli
cmpsb
and
pop
xchg
jp
cld
xlat
mov
cmp
xchg
lahf
cmp
ss
cmp
and
arpl
xchg
outsb
sub
ror
data16
or
inc
dec
mov
imul
xorl
enter
adc
sub
cmovge
in
sahf
or
in
add
adc
mov
sub
out
mov
jne
dec
lock
aas
push
sbb
ja
dec
mov
pop
aam
or
and
rorl
adc
insl
mov
adc
stos
jae
xchg
mov
stc
insb
add
mov
xchg
xchg
mov
ljmp
mov
popf
mov
cwtl
fistpl
pop
test
sub
mov
aaa
into
fadds
cwtl
add
cmp
out
test
push
aaa
lock
cli
add
mov
daa
int
pop
mov
push
std
xchg
and
jmp
stos
and
sub
cmp
nop
subl
add
movmskps
test
mov
mov
pop
add
dec
ja
mov
lock
and
loopne
mov
lcall
icebp
ljmp
scas
jb
stos
mov
gs
dec
aaa
bound
cmpsb
fwait
rcl
rcll
and
cmp
iret
stos
repz
xchg
stc
sub
lahf
or
mov
mov
std
sti
iret
cmpsb
outsl
jnp
cmp
mov
bnd
push
or
lret
pushf
pop
push
xchg
dec
cs
in
mov
sarb
jle,pt
leave
or
add
inc
or
mov
jg
mov
pop
out
and
or
sub
jo
cltd
repz
sub
push
mov
push
ja
jnp
inc
xchg
lods
outsb
ja
push
notb
add
jmp
or
lret
adc
mov
cmpsl
jmp
and
ljmp
gs
mov
aas
andl
push
mov
sub
adc
out
pop
ja
add
ds
push
bound
mov
dec
sti
jecxz
repz
xchg
repnz
jge
mov
mov
jne
ljmp
ret
xor
push
push
daa
xchg
inc
dec
or
hlt
inc
js
int
add
inc
fsub
mov
enter
pop
std
loopne
push
rol
movsb
xor
dec
in
fdivp
adc
idivb
jbe
inc
cmp
jmp
inc
in
rcrl
dec
or
jg
jge
cmc
cwtl
add
jne
push
popa
inc
lods
pop
push
mov
mov
fiaddl
jmp
lea
scas
pop
ja
dec
push
inc
and
xor
lcall
mov
mov
xchg
dec
lds
dec
mov
xor
sub
mov
cmp
cmp
fiadds
lret
outsb
jne
pop
fwait
lock
jecxz,pt
jg
xchg
lock
scas
aad
hlt
dec
mov
ss
push
dec
or
push
push
mov
jns
inc
sbb
cmp
bound
loope
sub
push
faddl
pop
lods
dec
jl
xor
mov
pop
jmp
ret
pop
push
jo
daa
out
enter
sahf
mov
mov
cld
sub
fcomps
mov
push
pop
jecxz
sub
loopne
xchg
mov
cmp
mov
dec
cmc
mov
inc
in
add
or
mov
cmp
cmpsb
add
js
cmp
fsubrp
adc
mov
jno
jle,pt
xlat
test
loopne
shrb
cs
sahf
mov
mov
jns
addr16
sbb
jmp
mov
mov
gs
les
pop
adc
in
outsl
cmpsl
add
mov
mov
inc
js
xor
data16
test
push
scas
jno
push
add
adc
pop
push
cwtl
dec
lods
outsl
xchg
fs
jo
xor
sar
lock
cmp
std
out
xchg
sahf
stos
fidivrs
pushf
fistpll
loop
sarl
jo
push
mov
mov
sbb
push
or
adc
int
lahf
scas
cmp
fcoms
and
jnp
xor
mov
sub
arpl
cmpsl
ds
loope
sub
pop
jge
iret
pop
dec
test
inc
test
repz
inc
pop
negb
insl
in
fsubrp
sbb
loop
subb
popf
sti
mov
stos
dec
mov
aas
or
scas
pop
cmp
stos
cmp
mov
loope
sub
fs
sbb
mov
push
or
xor
jo
xchg
pop
jmp
jmp
push
inc
fs
inc
pusha
in
ret
loopne
cmp
movsl
xor
int
scas
cmp
imul
and
mov
mov
push
fadd
into
repnz
mov
mov
out
cmp
jnp
test
push
das
xchg
mov
imul
sbb
jmp
push
mov
cwtl
shlb
mov
aad
jp
xchg
jmp
fisttpl
and
push
das
jne
js
xor
mov
scas
test
jno
lods
aaa
xchg
cmp
or
pushf
into
cmp
scas
sbb
fistl
lds
mov
and
enter
in
lahf
lods
mov
push
xor
adc
push
movsb
std
cmp
pop
jbe
sub
repnz
in
repz
and
and
dec
repnz
das
stos
xor
jg
sar
inc
xchg
inc
and
push
ret
pusha
mov
out
pop
lods
sub
push
xchg
test
test
orb
cltd
insb
adc
test
loop
and
pop
xchg
fwait
adcb
inc
sub
lcall
ficomps
popa
xchg
add
add
loope
inc
out
inc
imul
push
out
nop
adc
mov
dec
out
stos
repz
pushl
int
clc
pop
aad
stos
push
scas
lret
cli
cmpsb
sub
cmc
xchg
jl
pop
lcall
inc
pusha
inc
add
jle
setp
cwtl
test
xchg
and
push
add
mov
cmpsl
imul
mov
shlb
mov
imul
mov
hlt
fsubrs
sahf
sub
dec
xchg
int3
cli
pop
pop
cmpsl
bound
scas
jae
sbb
jbe
adc
pop
pop
xchg
adc
push
push
cmp
jo
dec
stos
int3
cmp
faddl
push
dec
add
loope
imul
js
push
popf
cmc
imul
cmc
out
sbb
pop
rcr
mov
push
or
sarb
push
add
or
insl
cwtl
jmp
mov
clc
push
call
jae
into
xor
sub
xor
or
cmp
xor
cltd
pushf
fldl
popa
mov
hlt
xor
and
in
jl
mov
cmp
add
mov
gs
lcall
sti
push
push
cmp
jecxz
rorl
push
mov
jecxz
dec
cmp
pop
lret
jae
xchg
fmuls
aas
cld
mov
lret
and
pop
aaa
mov
sbb
sub
in
call
mov
lods
lret
jbe
pop
push
dec
inc
jmp
push
cmp
orb
shlb
mov
imul
push
inc
or
sbb
xor
push
and
push
sub
sbb
and
mov
scas
dec
syscall
cli
add
lds
push
lret
mov
loope
fnsave
enter
inc
enter
rcrb
jnp
xchg
jge
test
and
adc
sbb
jbe
subl
mov
loop
outsl
pop
and
mov
cmpsb
inc
dec
mov
sub
mov
jg
scas
lea
fldt
les
std
inc
inc
push
lret
jns
inc
shrl
sub
cmp
push
lret
cmpsl
sub
mov
add
add
push
ljmp
popf
stc
push
data16
mov
mov
xor
aad
sti
jl
jge
pop
cmp
addr16
pop
cmc
add
adc
lcall
cmp
push
dec
es
fstl
icebp
jle
xor
mov
jb
ret
cmc
addr16
pop
out
cmp
inc
fidivs
sahf
movsb
mov
xor
roll
in
lahf
push
out
into
test
mull
icebp
fsub
cs
adc
add
fsubrl
cmp
xor
jbe
enter
aam
or
xchg
pop
into
in
pop
adcb
jbe
mov
xchg
push
inc
xor
insl
pop
movsb
or
insb
daa
les
push
mov
adc
mov
mov
mov
xchg
sar
xchg
sbb
add
test
repz
ret
aas
loope
pop
out
fmuls
in
mov
cmpsl
or
outsb
dec
into
movsl
in
cmpb
push
aad
out
in
stos
test
add
xor
jno
rclb
xor
lods
cwtl
mov
scas
add
fs
mov
bound
xchg
inc
pop
sub
pusha
cld
mov
jmp
push
sbb
addr16
lea
js
cmp
imul
and
movsl
mov
rcll
addl
jae
pusha
test
jnp
sti
pop
and
jg
shlb
cmp
push
clc
int3
add
xlat
jo
pop
sub
jle
hlt
pop
jne
loop
decl
outsb
popa
insl
jmp
xorb
in
lock
xor
inc
inc
push
mov
xchg
push
cltd
das
pop
data16
xchg
mov
dec
sbb
mov
repnz
fisubrl
sarb
loope
pextrw
inc
lahf
mov
mov
jnp
test
pop
pop
pop
mov
push
sar
loopne
out
xchg
or
lret
sub
xor
adc
jmp
sub
sbb
out
mov
movsb
ds
push
sbb
inc
and
cmp
push
lret
jne
pop
sub
out
test
lods
movsb
es
or
mov
add
scas
xchg
push
pop
mov
xchg
xor
sbb
fadds
add
nop
lds
dec
push
sahf
pop
adc
clc
pop
mov
scas
sub
jo
mov
and
popf
xor
movsl
out
in
sub
negl
adcl
sbb
movsl
fistpll
dec
addb
repnz
adc
imul
jne
sub
mov
pusha
outsb
mov
aam
jecxz
data16
pushf
shr
add
testl
outsl
test
cmp
stc
adc
pop
mov
add
lods
mov
rolb
sub
cmp
jl
es
adc
push
bound
mov
jg
test
jp
movsl
dec
lds
xor
mov
pop
es
aas
mov
cltd
sahf
dec
mov
shlb
js
cmp
cmp
shlb
pop
repnz
popf
sbbl
cmp
icebp
not
call
sbb
negb
hlt
jge
mov
pop
pop
jb
test
pop
mov
enter
in
bound
or
arpl
test
cmp
add
add
push
adc
arpl
mov
sub
cmp
cmp
stos
cli
cmpsb
jno
jp
les
push
jl
mov
jnp
repz
outsl
fnstenv
fidivl
enter
nop
and
addb
add
aas
sbb
mov
xlat
push
xor
testb
fidivs
stos
xor
mov
lods
hlt
mov
dec
shll
mov
cmpsl
xor
loopne
xor
ficoml
ljmp
repz
and
mov
into
test
mov
mov
xchg
inc
cmp
stos
sub
inc
test
loope
das
je
pop
pop
pop
iret
sbb
xchg
fstpt
jns
jmp
hlt
mov
pusha
adc
push
fwait
rcrl
jg
xchg
sahf
into
out
shrb
push
pop
bound
pop
dec
or
jb
mov
push
push
xor
sub
fildll
dec
and
into
in
loopne
loope
popa
push
xchg
das
dec
xchg
es
pop
pop
in
hlt
xchg
je
fcomi
popa
pop
lret
lock
or
popa
lods
cld
sarb
cli
add
bound
inc
or
fs
loope
iret
sub
cmc
pop
out
pushf
into
push
and
sahf
sbb
lret
fimuls
adc
xchg
lods
adc
mov
mov
fld
fidivl
fstpt
push
fdivr
shufps
aam
fwait
mov
sbb
mov
xor
mov
std
idiv
lods
or
xor
xlat
repnz
cmpsl
jne
ficompl
push
inc
dec
subl
imul
jno
repnz
or
loop
jmp
jg
mov
xchg
cmp
mov
cmp
mov
sub
ret
pop
adc
outsl
jle
in
call
push
jl
nop
mov
sbb
xor
lock
xor
cld
mov
push
mov
and
wrmsr
pop
mov
pop
adc
stos
jb
jae
rcrb
inc
ss
shl
test
sbb
inc
aaa
jmp
pusha
fmul
pop
into
cmp
stc
addr16
outsb
sub
out
popa
imul
fcmovbe
into
pop
pop
daa
or
or
movsl
dec
mov
jno
outsl
mov
pop
pop
push
mov
cmpsl
in
pop
mov
pop
lods
sub
dec
mov
scas
add
push
std
add
jne
lods
pop
adc
rep
and
sub
cmc
notl
ljmp
pop
mov
inc
adc
xacquire
push
and
pop
mov
sub
dec
sti
jp
xor
test
push
mov
aaa
fstl
pop
sub
jmp
les
xchg
mov
jp
sub
push
loope
repz
subb
xchg
test
gs
aas
aad
lcall
mov
movl
dec
lods
dec
jno
lock
jbe
add
lods
andb
xchg
jne
movsl
xor
cmc
inc
subl
std
xchg
push
sbb
cmp
adc
dec
adc
pop
mov
sti
jle
or
xchg
pop
cmp
push
jo
imul
push
mov
lcall
jnp
popl
ds
mov
add
clc
inc
adc
in
leave
mov
iret
pop
sbb
xor
jae
xor
cmp
je
inc
lahf
dec
mov
inc
or
ficoms
cmp
into
sub
arpl
mov
xor
andl
adc
fcmovbe
jp
add
scas
into
add
pop
mov
xor
sub
out
stc
dec
call
mov
aas
xor
push
inc
mov
bound
xor
mov
fucomp
mov
jge
mov
inc
insl
jbe
push
push
popf
dec
je
push
jmp
add
or
sbb
scas
or
lods
popf
lods
adcb
sti
subb
adcb
dec
push
cs
lret
inc
andb
int3
mov
test
cmp
dec
icebp
imul
xor
rcll
or
pmaxsw
enter
ficoms
mov
xor
fwait
cmc
adc
lock
jne
popf
sub
lcall
in
push
xchg
inc
add
inc
sbb
push
jb
push
das
xor
in
cld
xchg
xor
ret
repz
test
xchg
mov
push
xchg
mov
jmp
add
mov
mov
sub
into
andb
jb
mov
mov
mov
shrl
popa
call
ret
jo
pop
add
sahf
push
inc
movsl
sar
pop
das
jg
xor
aad
push
push
add
imul
idiv
pop
inc
fildl
jne
pop
aaa
ficoml
jae
add
fcoms
pop
xchg
inc
into
and
jae
jno
fiadds
mov
aaa
and
dec
cmp
data16
int3
mov
jl
mov
adc
imul
inc
or
ds
popa
xchg
out
nop
xor
enter
out
lds
aam
fld
mov
call
dec
sahf
push
dec
pop
mov
fbstp
insb
dec
inc
mov
add
in
mov
and
stos
bound
xchg
out
push
jns
xchg
data16
sbb
inc
jecxz
xor
mov
ljmp
jbe
mov
bound
rcrl
jmp
rcll
jg
inc
je
xchg
push
pop
mov
loop
mov
mov
mov
lds
cwtl
inc
sbb
test
mov
shrb
stos
dec
int3
das
xor
fs
imul
sbb
jae
sbbl
or
dec
inc
popf
pop
and
sbb
xchg
testl
inc
cli
data16
mov
dec
std
cmp
mov
sub
fmuls
cmpb
arpl
jbe
inc
xchg
mov
mov
add
mov
ss
xchg
pop
mov
push
pusha
jno
std
pop
stos
mov
rcrl
rclb
pop
shrl
cmp
mov
mulb
scas
lahf
fsub
adc
out
pop
pop
jp
in
pop
pop
add
mov
xor
sub
mov
sbb
adc
adc
insb
cmp
pop
pop
sbb
fcom
stc
xchg
stos
addr16
cmp
loopne
or
pop
jle
test
out
xor
ds
js
dec
out
fisttps
mov
xor
mov
shlb
lret
push
mov
scas
mov
inc
adc
xor
idiv
sbb
icebp
pop
mov
subb
iret
add
clc
cs
in
adc
xchg
out
ja
pop
loopne
add
mov
aam
inc
jp
sub
push
mov
add
inc
ret
push
inc
rcrl
leave
and
push
dec
dec
je
incb
pop
or
insl
dec
loope
push
and
push
xor
cmp
call
pop
mov
dec
jne
or
adc
std
rorb
lea
jecxz
adc
xchg
mov
push
xchg
push
inc
in
cmpsb
mov
xchg
fwait
push
pop
inc
insb
push
inc
sti
mov
cmp
ljmp
dec
inc
xlat
pop
dec
loop
iret
std
adc
mov
test
jl
jmp
jae
stc
inc
xor
cmpsb
push
cltd
pop
or
int3
addl
xor
push
ret
jne
jle
pop
loopne
imul
lods
xchg
push
pop
sahf
add
or
sahf
out
out
sti
in
dec
je
jle
ljmp
fdivl
pop
push
jle
in
push
fwait
add
jp
rorl
add
jb
jo
andb
mov
and
ja
and
xor
xchg
push
mov
stc
loopne
cmp
fdivs
jbe
pop
aaa
insl
bound
stc
cmp
xchg
jne
popa
mov
fs
push
stc
outsb
out
fs
adc
mov
mov
mov
imul
jge
out
add
imul
fistpl
loope
popa
repz
dec
ss
and
jno
pop
lahf
add
push
inc
mov
jl
lcall
add
aad
aas
or
gs
push
xor
lea
xchg
xor
mov
shrb
xchg
xchg
and
mov
ret
jge
int3
rorb
dec
and
mov
mov
push
sbb
push
outsl
inc
loopne
push
test
dec
xchg
call
loope
inc
cwtl
xor
data16
xchg
sbb
xchg
call
out
and
frstor
xchg
cmp
xlat
jnp
add
stos
add
pop
pop
pop
roll
sbb
out
xchg
xchg
push
dec
fwait
cmp
ret
popa
push
call
pusha
je
sbb
mov
sbb
hlt
les
push
xchg
push
sbb
mov
je
cwtl
fsts
popf
test
sarl
pop
jmp
aam
sbb
notl
mov
jmp
fs
loop
mov
sub
adc
ss
movsb
mov
push
mov
adc
sbb
fcomp
inc
out
mov
sbbl
loop
xchg
imul
xor
pop
test
popf
cmpsl
xchg
pop
mov
cld
int3
dec
out
jl
ljmp
pop
sub
and
stos
sub
mov
mov
xor
inc
adc
cmp
jg
repz
adc
loope,pt
aad
es
insl
jno
mov
jae
xchg
orl
mov
loope
rcll
call
sti
pop
filds
push
test
jmp
jae
ds
sub
int3
test
inc
fucom
pop
mov
lcall
sahf
pop
jp
xchg
and
xor
dec
or
and
add
sar
mov
in
dec
ret
mov
add
loop
xchg
imul
aaa
dec
stos
frstor
ret
inc
lock
adc
call
andb
fsts
inc
jae
gs
lea
int3
adc
lahf
add
push
repz
lods
test
sbb
arpl
xor
adc
outsl
add
sbb
mov
xor
iret
and
pop
scas
xor
hlt
pop
rclb
cli
sbb
mov
mov
cmpsl
push
xchg
inc
adc
lret
loopne
mov
jecxz
test
sti
sbb
mov
mov
nop
inc
push
pop
or
pop
dec
push
push
test
data16
enter
jge
jle
es
cmpsb
stos
pushl
lods
cmp
lret
pop
cltd
add
outsl
in
mov
and
jb
inc
stos
test
add
ret
lea
rcll
fildl
adc
test
fcmovb
lea
test
pop
mov
sahf
daa
fucomip
lea
daa
inc
or
dec
cmpsl
int3
and
xchg
mov
inc
icebp
and
xchg
or
fs
outsl
inc
push
pop
mov
movsb
or
jae
lods
fdivr
push
mov
in
lahf
pop
loope
lods
and
lret
xchg
adc
lahf
addr16
xor
aas
pop
inc
sub
divb
adc
arpl
clc
scas
js
enter
insb
pop
arpl
mov
cmp
jne
pop
cmp
sbbl
faddl
test
call
sahf
out
sub
mov
add
sarl
arpl
xchg
outsb
in
pop
lds
push
je
push
jp
mov
loope
es
sbb
push
xchg
push
adc
aad
dec
scas
mov
sub
push
jge
adc
loope
outsl
outsl
cmpsb
insl
push
adc
in
outsl
inc
cmp
add
and
dec
in
roll
mov
sub
and
call
int3
imulb
lcall
xchg
jecxz
jmp
aad
pop
lret
sahf
or
jmp
push
in
cli
push
jecxz
sahf
dec
xlat
mov
imul
sti
int
imull
cmp
jecxz
xchg
std
xchg
cld
xchg
add
gs
dec
inc
cwtl
mov
xlat
sar
fwait
sbb
push
push
pop
add
jae
mov
pop
clc
or
out
mov
pop
ret
decb
fiadds
cmp
sbb
sarb
cmc
push
jne
add
jae
mov
adc
je
ljmp
arpl
jge
mov
pop
lods
cmp
stos
dec
inc
or
les
push
hlt
orb
stos
dec
pop
testl
fwait
sbb
enter
inc
loope
popf
and
shlb
in
aam
xor
cli
pop
pop
pop
mov
push
cmp
sub
daa
pop
add
cmp
out
je
popf
sar
addr16
cmp
sub
push
or
movsb
insl
inc
fs
arpl
sub
mov
loop
cmp
mov
jle
mov
lahf
ljmp
shrl
inc
sub
dec
stos
lea
bound
in
adc
mov
xor
imul
mov
mov
cmp
push
dec
lret
and
loop
int3
ljmp
int
or
mov
test
in
loopne
jecxz
adc
jno
jl
mov
and
jbe
ja
mov
ficomps
xlat
addr16
icebp
xchg
mov
push
out
add
andb
popf
add
sub
mov
mov
jo
inc
sbb
dec
adc
outsl
imull
pop
repnz
push
inc
insl
jecxz
inc
mov
movsl
arpl
jg
scas
lret
push
addr16
add
out
sbb
adc
mov
sbb
negb
out
data16
in
cmpsl
mov
push
adc
in
jnp
in
xchg
push
aad
aam
test
dec
push
sub
inc
test
sbb
jae
push
lods
mov
add
sbb
mov
and
mov
stos
pop
pop
je
stos
out
cmpsl
push
xor
adcl
test
add
jmp
insb
stos
sub
insl
mov
cmp
dec
lock
shl
push
mov
rorb
jecxz
jo
leave
hlt
test
pop
andb
dec
js
push
clc
cwtl
xor
push
dec
jg
push
jge
xorl
int
mov
fisubs
inc
pusha
outsl
stos
sbb
dec
movsb
and
jg
sbb
add
pop
cmpsb
repnz
lahf
sti
sahf
int
fcoms
adc
mov
pushf
jno
mov
cmp
mov
fadds
xor
xchg
push
fisubl
dec
xor
xchg
or
jno
push
push
sbb
sahf
inc
leave
imul
ljmp
jb
mov
data16
out
out
lret
imul
sub
rclb
mov
repnz
and
sub
adc
mov
cmpl
mov
or
ret
in
int
ds
pop
in
xchg
jecxz
dec
mov
cmpsl
mov
adc
arpl
aad
loop
fcoml
pop
mov
jae
repnz
loop
jle
fisubrs
push
cmpsl
cmp
and
mov
xor
js
and
sarl
jmp
inc
cmp
pop
jno
inc
repz
pusha
xor
scas
out
cmc
push
aaa
scas
add
dec
les
xor
cmp
mov
push
sbb
shlb
test
mov
fwait
lea
daa
test
dec
fsts
je
sub
sub
dec
sub
les
jo
mov
mov
mov
pop
sbb
loopne
les
inc
arpl
xchg
adc
in
inc
cmp
icebp
cmp
dec
movsb
sbbb
fildl
mov
enter
negl
push
pop
xor
mov
adc
out
jns
xor
ret
sub
lods
mov
pushf
adc
mov
aas
aaa
mov
and
jno
fisttps
dec
shl
in
mov
jl
jb
daa
stc
dec
jecxz
mull
lcall
lea
xchg
das
mov
sbb
es
sub
arpl
push
les
iret
and
inc
aad
push
test
sbb
int
in
sub
rolb
into
inc
call
xor
mov
mov
std
xor
sub
pop
stos
popa
fwait
lcall
bound
and
sub
movsb
ret
les
pop
lret
cmc
cmc
push
in
add
ficoms
rclb
hlt
inc
mov
cmc
fxch
insb
add
jbe
fsts
mov
dec
repz
lahf
sbb
dec
adcl
repz
sub
jne
mov
decl
rolb
loopne
xchg
pop
jle
pusha
loop
push
stos
sahf
push
mov
scas
push
cwtl
aam
lods
fisubl
or
int
ret
enter
jecxz
std
mov
pop
jnp
sbb
outsl
ret
push
and
xor
sti
pop
mov
roll
xor
cmc
xor
xor
sub
dec
xchg
pop
push
js
ja
inc
mov
add
fildll
out
sbb
adc
cmpsl
shr
lds
lahf
enter
mov
call
xchg
pushf
sbb
add
loop
ds
sub
sub
xlat
dec
mov
scas
in
mov
outsl
cmp
jp
add
cmp
pop
mov
jae
mov
jle
iret
bts
push
dec
add
les
dec
sti
test
lods
mov
rcll
pop
push
inc
stos
fmulp
or
arpl
xchg
movsl
pop
lret
test
outsb
xor
ds
movsb
mov
fiadds
aad
into
mov
xor
mov
stc
add
repz
push
pushf
ljmp
push
adc
xchg
or
test
jecxz
mov
lea
xor
jge
out
call
fstl
ret
push
loopne
pop
hlt
into
lahf
xor
mov
dec
sub
orl
out
fs
test
push
sahf
dec
xor
js
jnp
or
test
cld
xor
sub
pushfw
pop
adc
or
add
xchg
dec
adc
fimull
push
adc
or
gs
lahf
sub
cmc
repz
stos
mov
shlb
repnz
mov
or
test
push
fsubl
pop
mov
call
ja,pn
mov
and
mulb
mov
jne
call
pusha
inc
sub
mov
test
push
insb
lahf
mov
cmpsb
cli
sub
lods
popa
and
mov
push
lock
jo
arpl
pop
test
xchg
pop
lock
pushf
out
jne
or
insb
nop
adc
popa
sbb
dec
xchg
and
pop
addr16
js
roll
mov
jb
xor
fs
out
fcoml
roll
scas
mov
dec
addb
lds
leave
out
jb
stos
popa
mov
xchg
aaa
lock
dec
cwtl
xchg
adc
xor
shll
sar
jbe
cwtl
jo
daa
ret
out
cmp
ja
rolb
xlat
mov
pop
inc
mov
movsl
pop
jb
daa
in
loope
fimull
cmp
mov
sub
or
push
call
lea
lods
roll
sbb
jbe
push
jl
mov
mov
xchg
cmc
mov
subl
cmpsl
mov
inc
dec
or
insl
cmp
cmpsl
ret
and
test
sbb
imulb
mov
aam
je
dec
push
pop
jns
push
fstpl
mov
lret
clc
jae
notb
hlt
add
inc
jecxz
hlt
xchg
push
scas
sbb
xchg
dec
scas
inc
in
and
cmp
stos
aam
adc
mov
pusha
movsb
mov
lods
fs
lret
sbb
out
ret
icebp
ret
mov
test
inc
jp
sti
fimull
outsl
addr16
lock
out
mov
ret
mov
mov
mov
xor
addr16
mov
add
stos
rorl
sub
sahf
inc
sbb
add
in
shlb
movsb
sbb
fldl
clc
in
dec
movsb
pop
push
push
lret
hlt
push
rcl
addr16
add
pop
sahf
push
rclb
and
jno
aam
xchg
sbb
push
and
ja
adc
or
jl
sbb
std
cmp
in
mov
clc
cmp
pop
push
es
sbb
or
mov
adc
push
xchg
incb
adc
in
sub
xchg
jae
in
mov
in
xor
bound
jne
push
call
cmpsb
mov
xchg
and
ror
ficomps
mov
loopne
sub
pop
mov
mov
cltd
test
lretw
xchg
inc
pop
insl
sbb
push
mov
repnz
push
pop
adc
push
popf
xchg
ja
mov
pop
push
cmp
test
sarb
and
dec
in
and
pop
dec
pop
testb
cltd
in
mov
out
inc
lret
xchg
sub
adc
stos
xchg
xchg
jg
push
mov
and
sub
add
and
lcall
mov
pop
adc
ret
pop
dec
loop
dec
dec
int3
mov
sbb
mov
sub
jl
sbb
mov
movsl
clc
loop
dec
push
jl
add
ljmp
popf
cmp
fisubrl
adc
test
inc
dec
mov
fldenv
mov
je
arpl
aad
adc
ds
sbb
jns
xchg
arpl
jp
fldcw
popa
mov
pop
xor
clc
xchg
dec
xchg
sbb
dec
and
ljmp
shrl
add
xchg
fistpll
dec
mov
in
mov
ja
iret
add
aaa
push
inc
cld
aas
mov
jb
push
add
mov
movsb
dec
imul
push
int
arpl
xchg
jo
mov
xchg
scas
dec
add
adc
inc
lahf
push
jg
stos
dec
xor
sbb
sbb
push
xor
test
sti
adc
sarl
pop
dec
pop
shl
pop
add
sbb
jno
jle
lret
mov
enter
inc
cmp
cwtl
xchg
mov
push
inc
fstp
cmp
test
mov
arpl
outsl
cmpsb
repz
sbb
into
add
aad
and
push
nop
jl
sub
fidivrl
sub
jecxz
int3
dec
push
push
jp
stos
arpl
shlb
clc
subb
mov
repz
cmp
adc
in
jno
sti
push
mov
lret
add
push
push
lods
xor
leave
inc
inc
cwtl
xor
mov
pop
cwtl
add
or
dec
inc
test
mov
cs
inc
imul
out
sbb
xor
adc
repnz
fsub
mov
outsl
jne
fidivl
imul
xor
jl
xor
lahf
add
int
xlat
cld
imul
push
lcall
push
flds
clc
fsubs
add
add
insb
mov
js
xchg
cmp
sbb
dec
and
jo
sbb
mov
push
scas
imul
das
and
iret
cli
arpl
dec
daa
sub
cmpb
loopne
adc
popf
jecxz
repz
push
decl
mov
add
lret
inc
lods
cwtl
jno
sub
std
add
in
push
dec
sbb
lods
cmp
push
inc
shll
imul
fnsave
cmp
ljmp
lds
addl
mov
nop
stos
fwait
ljmp
lock
sti
mov
mov
lcall
xchg
mov
inc
lods
lahf
mov
cltd
mov
ss
add
out
jns
andl
out
in
sub
mov
out
addl
stos
push
add
or
jb
xlat
aam
les
ja
lcall
out
arpl
fcoml
sub
das
pop
pop
push
xchg
imul
ljmp
add
pop
insb
jmp
push
xor
mov
es
out
clc
or
scas
arpl
loopne
push
adc
sub
cld
cmp
sti
fcompl
movsb
and
sub
mov
or
mov
sbb
push
into
dec
mov
mov
outsb
push
pop
cmp
pop
int3
jnp
jmp
subl
and
imul
dec
dec
dec
mov
xchg
mov
sahf
inc
cli
sub
aam
pop
pushf
andb
aad
adc
mov
cmpsl
push
popa
cmc
pusha
cs
adcb
pusha
loopne
lods
xor
or
inc
sbb
jmp
mov
or
sub
loopne
mov
iret
and
inc
sahf
inc
cmp
out
cs
ss
dec
dec
lcall
cmp
dec
pop
out
and
loop
popf
push
daa
iret
dec
inc
xchg
xchg
dec
outsb
jge
cmp
and
rclb
and
loope
mov
pop
iret
sarb
xor
mov
jle
inc
in
in
add
fstps
pusha
in
mov
pop
fisubl
cld
and
and
mov
outsb
in
out
xchg
in
lret
and
sub
adc
lret
pop
mov
out
jo
sahf
push
cs
xor
sbb
mov
mov
movsl
jecxz
sbbl
push
jge
sbb
sub
cmpl
iret
xchg
stos
int3
leave
inc
insl
lds
cmp
fdivp
mov
cmp
out
mov
jle
stos
in
xchg
in
add
adc
lcall
bts
lods
adc
mov
xchg
xchg
sbb
xchg
mov
xor
inc
cmp
inc
sbb
stos
fmulp
push
lods
and
pop
jo
test
cli
xchg
sub
push
test
mov
xchg
cmp
add
sub
cwtl
jbe
repz
jo
jge
cmp
mov
push
idiv
dec
enter
test
int
jb
and
dec
xchg
pop
scas
test
nop
lds
sbb
pop
movsl
scas
inc
movsb
jmp
dec
test
loop
data16
in
mov
mov
xor
or
pushf
add
xor
push
cmp
push
mov
pop
cmpsl
add
push
and
lods
adc
insl
push
dec
popa
js
mov
push
shll
dec
lahf
cli
cltd
mov
mov
popa
xchg
pop
mov
mov
mov
scas
subb
repz
inc
xchg
ds
mov
and
push
ds
ljmp
addl
inc
lret
sbb
fldl
test
inc
sahf
cvtdq2ps
ficoms
lahf
aas
mov
out
push
pop
lods
daa
mov
jp
cmp
out
mov
mov
mov
arpl
int
sbb
call
pop
jb
scas
inc
repnz
insb
into
mov
negb
ja
pop
stc
scas
scas
sti
cmp
enter
mov
testl
aad
xchg
in
test
decl
jle
std
sar
jns
mov
sub
push
dec
shr
xchg
pop
xchg
xchg
das
xor
dec
push
enter
ja
and
cmp
or
dec
aaa
je
stos
lea
lret
aas
mov
and
les
test
xchg
movsl
in
xor
mov
xchg
jg
movsb
addl
bound
lock
xor
and
cwtl
mov
or
subl
sbb
enter
and
mov
js
adc
sbbl
pop
pop
fdivl
outsl
push
sbb
jp
cmc
cwtl
fldl
inc
mov
mov
fistpl
push
vpsubsb
or
addr16
add
repz
sub
cmc
jns
mov
xchg
and
mov
cmc
xchg
sarl
mov
cmp
loopne
mov
inc
push
adc
mov
je
arpl
sub
and
stc
inc
cwtl
mov
fdivs
jmp
inc
test
out
test
sub
js
sub
mov
jbe
shlb
and
das
loop
stc
ja
sbb
aaa
addl
inc
add
push
loope
out
lret
mov
adc
mov
in
or
clc
subl
pop
loope
mov
scas
cwtl
push
jmp
jae
enter
mov
and
xchg
add
cmpxchg
ds
jno
mov
popa
push
cwtl
dec
jge
outsb
ljmp
lcall
negl
in
cmp
mov
jecxz
adc
test
scas
xor
imul
lret
pop
sub
inc
popa
sub
lret
insl
adc
pop
icebp
lea
rcl
fs
cmp
pop
cmpsl
rcrb
les
fiadds
lahf
pushf
lcall
imul
mov
sbb
jg
xor
xor
pop
js
add
test
sbb
pop
dec
mov
mov
xor
mov
loope
push
jp
sahf
inc
lods
enter
fcoml
xor
pop
fmulp
push
test
adc
push
inc
lret
aad
push
adc
cmp
or
sub
push
jbe
jo
fistpll
fwait
mov
fwait
stos
cmc
call
add
popf
cltd
xchg
sbb
inc
stc
filds
or
inc
imul
sub
mov
push
sbb
dec
xor
ret
fs
jp
adc
mov
mov
cmp
mov
jns
divb
insb
jne
xor
jge
mov
mov
mov
pop
xchg
inc
pushf
push
ja
pop
arpl
popa
or
sti
or
jl
stos
push
jp
mov
push
dec
push
mov
xchg
sbb
dec
cmc
fldt
pop
sahf
cmp
push
inc
lret
mov
in
ja
mov
xchg
push
test
movsb
enter
test
shrl
test
pop
call
icebp
popa
xchg
push
xor
inc
mulb
xorb
imul
cmpsl
push
pop
or
mov
push
jmp
call
jg
leave
inc
jbe
ret
or
addb
das
insl
insb
aaa
js
stc
or
add
addb
jnp
cmp
popf
xchg
outsl
les
loop
hlt
mov
and
ficompl
inc
push
mov
lret
insb
test
je
and
mov
xor
dec
insb
or
jne
jg
jae
jo
push
insl
xor
ss
subb
roll
mov
pop
pop
fcmovnb
sub
sub
sub
repnz
out
push
adc
push
mov
sti
fisubl
movsb
lods
cld
mov
into
or
imul
push
adc
xchg
aas
jns
cmp
in
adc
adc
adc
mov
ret
daa
sahf
sub
dec
movsb
sti
cmp
jb
sbb
jns
iret
and
std
mov
jb
push
arpl
imul
enter
popa
lahf
fmull
or
inc
test
cmp
out
and
dec
imul
ret
les
imull
insl
fiadds
push
dec
fs
push
repnz
inc
push
lods
mov
pop
dec
ljmp
test
mov
fldenv
jp
imul
push
xor
iret
xlat
movsl
push
test
call
cli
idivb
loopne
xchg
stc
divl
jp
nop
mov
push
inc
mov
add
adc
pop
push
sub
filds
faddl
push
or
dec
or
cld
pop
push
inc
push
scas
fcomps
jp
testb
adc
addl
push
ds
fcomip
loope
out
icebp
push
addb
aam
mov
fs
pop
into
add
icebp
mov
nop
add
out
and
sub
add
adc
data16
xchg
mov
outsb
mov
std
int3
loopne
cmc
xor
jno
test
sbb
lret
fisttpl
dec
pop
js
fwait
ja
or
sub
pop
and
push
dec
insl
arpl
cmp
ret
enter
jge
push
sbb
push
or
mov
fists
sbbl
addr16
or
xlat
icebp
cmpb
stc
cmp
leave
scas
mov
arpl
push
jecxz
bnd
jnp
jno
lods
cmpl
cmp
mov
cmp
arpl
jp
int3
mov
popf
fwait
xchg
clc
pusha
jge
hlt
jne
repnz
mov
in
jbe
ficompl
adc
popf
adc
sti
and
popa
or
inc
and
xchg
imul
fcmovnb
xor
fmuls
std
lock
clc
xchg
mov
mov
stos
pop
outsb
jecxz
sbb
js
xchg
jmp
fcmovnbe
decb
xchg
aas
inc
insl
rcrl
cwtl
xlat
shll
test
xor
jmp
lcall
push
jl
xchg
jne
jb
push
into
ficoml
push
lods
andb
sahf
xorl
xor
dec
xor
dec
mov
fidivs
stc
inc
sti
jo
stos
hlt
repz
lods
jmp
xchg
mov
aaa
xor
cmp
xor
sbb
dec
hlt
sbb
push
fidivrl
nop
rcr
cmp
xor
mov
mov
shll
lahf
push
inc
rol
xchg
pop
stc
cvtps2pd
or
inc
jmp
xchg
scas
or
lock
mov
ss
jbe
mov
dec
daa
inc
rorl
pop
pop
xor
xor
mov
andps
or
scas
incb
sbb
scas
inc
popa
sub
xchg
sbb
addr16
cmpsl
and
pop
xor
iret
mov
xchg
add
or
loopne
dec
push
je
adc
ds
push
jnp
mov
push
imul
and
cmp
inc
mov
adc
mov
mov
jg
adc
arpl
jp
and
aas
movsb
cmpsl
xor
iret
das
sbb
lock
jbe
jg
lds
push
out
rcrb
xor
jecxz
mov
loopne
mov
and
jp
mov
ljmp
mov
aas
in
insl
dec
adc
sub
mov
scas
repnz
test
shl
leave
jns
push
addr16
sub
mov
jns
mov
xchg
mov
adc
sub
in
insl
out
pop
scas
rorl
popa
lcall
lret
pop
mov
fisttps
jmp
mov
inc
push
xlat
stos
xchg
jno
pop
pop
inc
test
adc
or
lods
pop
cltd
sbbl
cmpsl
pop
imul
and
adc
js
in
test
vmovlps
pop
dec
inc
test
std
or
cmp
imul
cwtl
xchg
sub
mov
into
dec
enter
mov
add
xchg
cmp
jmp
pop
ret
test
mov
pop
test
sbb
inc
stos
ljmp
sub
rorl
jp
ret
lock
aas
icebp
outsb
dec
fnstenv
stos
push
das
sbb
sub
add
jle
pusha
mov
ja
sti
ret
add
jae
fldt
icebp
cmpsb
jg
cmp
das
adcl
sub
and
int3
xor
not
arpl
cmpl
sbb
mov
pop
mov
test
cmp
push
dec
push
in
loope
inc
out
call
push
mov
jo
es
cmp
push
jmp
neg
cmp
add
ds
push
loopne
call
sbbl
mov
add
sbb
mov
xor
xor
push
pop
cwtl
jb
add
iret
xchg
sarl
aas
or
add
adc
cwtl
mov
outsb
mov
sbb
add
or
push
divb
imul
fldenv
jge
jnp
push
mov
es
pop
adc
adc
pusha
nop
jbe
repz
test
sub
out
mov
sbb
cmpsl
into
out
xchg
icebp
ret
pop
inc
cmp
adc
iret
cmc
xor
pop
test
push
pop
and
rcr
imull
or
cmp
ret
xchg
xchg
sub
ljmp
iret
lods
je
subb
ficoms
nop
push
fcompl
inc
leave
cmp
insb
out
test
inc
jno
mov
hlt
movsl
fmull
stc
clc
jecxz
cmp
jg
cmp
or
les
sub
mov
push
test
lret
or
or
cmp
adc
xchg
mov
mov
and
and
mov
iret
fidivl
dec
sti
loop
das
leave
subb
jge
and
arpl
push
or
imull
fsubrs
fwait
imul
test
cmp
arpl
add
mov
lret
scas
fcomps
add
xor
push
repz
add
jo
loopne
mov
les
icebp
adc
pop
mov
test
or
add
stc
mov
imul
lea
cmp
movb
jge
xor
mov
cwtl
lret
push
daa
push
imul
fldln2
aas
pop
inc
sbb
xor
mov
lds
sbb
fimull
inc
jnp
jp
lahf
or
ja
mov
or
loop
rcr
pushf
aad
sub
jae
das
cs
add
jo
call
push
mov
stc
xor
or
push
lock
push
or
mov
outsl
dec
out
push
bound
cmp
mov
repnz
cmp
sbb
aad
push
push
rdmsr
push
pop
push
arpl
ds
push
scas
push
or
jne
mov
pushf
cwtl
push
add
xorl
xchg
in
sbb
loope
dec
testl
in
fcmovu
mov
mov
iret
aad
je
in
cmp
imul
dec
int3
mov
sbbl
mov
stc
ss
test
push
aas
in
inc
mov
lret
arpl
sub
push
sbb
hlt
mov
loopne,pn
sbb
pop
jo
dec
pop
loope
shr
sbb
mov
loopne
fsubrl
sbb
cmp
add
sub
out
mov
pop
push
jl
sahf
and
sbb
test
push
sbb
arpl
push
repz
sub
mov
ja
int3
je
int
push
and
jae
clc
loopne
xor
cmp
lret
shlb
in
test
lret
scas
xchg
mov
cmp
push
cmp
xor
ds
and
loopne
pushf
add
mulb
sub
aad
hlt
fsubl
jbe
data16
jp
movsl
stos
and
jecxz
scas
mov
xor
inc
add
cmc
loop
sahf
sti
out
inc
ror
jecxz
xor
inc
hlt
xchg
cmp
sbb
xchg
push
rcrl
hlt
mov
jbe
sub
bound
out
fistpll
mov
adc
arpl
add
sbb
add
mov
pusha
subb
xchg
mov
cwtl
enter
xor
adc
add
sub
fiaddl
shl
xchg
pop
dec
sahf
pushf
int3
cltd
push
and
push
jne
lret
lods
mov
repz
sub
push
dec
pusha
stc
ds
cli
jne
mov
push
dec
loop
jg
das
rclb
fisubl
xor
inc
sub
pushf
leave
mov
pop
and
mov
xchg
ds
cli
enter
imul
pushf
call
push
jecxz
das
dec
scas
daa
pop
sbb
jno
jle
pop
xchg
sub
or
jo
mov
and
loop
lods
hlt
mov
sbb
add
sub
push
out
lods
mov
sbb
push
push
imul
fimuls
scas
jae
sbb
mov
xchg
cltd
cmpsl
ficoms
in
jge
sbb
jbe
mov
jmp
mov
xchg
adc
shll
fcmovne
cmp
jge
arpl
call
sbb
push
add
push
inc
push
stos
inc
mov
js
in
ja
mov
scas
sbb
adc
inc
decl
cs
push
add
sub
test
and
sub
clc
lock
and
pop
or
dec
xchg
pop
mov
xchg
cld
ret
lods
mov
sbbb
test
add
dec
dec
cmp
lock
data16
cltd
mov
adc
fucomi
mov
dec
mov
push
push
test
lock
cmp
mov
int
adc
pushf
jp
aad
inc
and
idiv
xor
sub
movsl
xchg
lcall
xchg
cmp
enter
ds
incb
dec
push
and
enter
leave
xchg
pop
movsb
sub
inc
mov
lcall
cmp
mov
jge
and
xor
iret
push
fidivrl
popw
fistpl
repnz
xchg
push
fldcw
mov
xchg
xchg
in
cmp
fsubrl
fbstp
mov
pop
xchg
aam
je
psadbw
test
rep
addr16
mov
test
lahf
sbb
or
iret
and
arpl
stc
cmp
mov
fwait
addr16
out
or
xchg
mov
sahf
rolb
lahf
cmp
aad
icebp
jb
test
shr
adc
loop
shll
mov
stos
push
pop
dec
xchg
push
push
adc
mov
pusha
cmp
jmp
dec
out
mov
scas
fimull
incb
and
dec
pop
push
dec
inc
mov
xchg
nop
in
sbb
ljmp
add
cli
adc
jo
out
mov
pop
stos
cmp
push
xchg
jbe
scas
pop
gs
scas
xor
pushf
cmp
roll
and
test
stos
outsl
push
fs
cld
fs
push
hlt
fisubl
dec
test
mov
ret
daa
in
mov
out
int3
push
bnd
xchg
adc
loop
ret
int3
mov
leave
ret
sbb
pop
fdivs
popf
je
adc
fisttpll
movsl
mov
inc
pushf
test
xchg
dec
loope
mov
push
jno
dec
addr16
or
lahf
shrb
arpl
pop
mov
mov
and
inc
cmpsl
cmc
cmp
dec
jmp
mov
clc
jp
ds
cmp
lret
jbe
sbb
mov
dec
xchg
rolb
add
mov
es
into
mov
sahf
fs
negb
int3
cld
loop
out
sbb
dec
xchg
pop
mov
outsl
cmp
test
mov
inc
jno
jp
adc
imul
pop
out
inc
xor
sbb
jbe
xchg
loope
cmpsb
mov
cmpsb
loop
stos
inc
cmp
and
cmp
sti
cmp
ret
mov
sbbl
push
outsb
xchg
repnz
pusha
into
push
fwait
pusha
js
ficompl
mov
ds
inc
sbb
mov
shll
xchg
sub
ret
in
cmp
into
pusha
add
xchg
dec
add
aad
aas
xchg
jns
mov
mov
nop
fs
jmp
or
cmp
ds
pop
movl
and
sub
mov
inc
mov
mov
or
loop
cmp
data16
mov
ds
mov
jnp
les
jns
dec
mov
inc
and
sub
jae
mov
loope
and
inc
mov
jnp
cltd
dec
mulb
sub
cmc
push
jnp
movsb
pop
in
in
andb
stos
rolb
cmpsb
scas
jo
mulb
or
mov
or
aaa
das
xchg
pop
inc
lret
in
sub
and
mov
sbb
test
or
fsts
push
cmp
popa
mov
jnp
dec
ljmp
xchg
loop
push
pusha
dec
push
mov
jecxz
sub
pop
inc
out
int
or
lret
outsb
xlat
pop
ror
ret
in
inc
in
pop
sbb
jmp
divl
pop
fsubr
shrl
ds
sub
xlat
push
adc
mov
cmp
inc
test
sub
test
jb
and
and
cmp
jle
mov
add
mov
xor
mov
xchg
test
or
pop
int3
ror
or
dec
in
daa
cmp
inc
inc
imul
sbb
pop
jge
xorl
dec
test
shl
add
pusha
repnz
inc
stc
push
cmp
rcl
add
lods
cmp
pop
push
pop
mov
cwtl
test
xor
push
shrl
sbb
insl
lds
bound
dec
aad
cwtl
mov
lods
daa
mov
push
mov
mov
imul
mov
mov
push
adc
sub
cld
pop
push
mov
arpl
sbb
int
sub
and
or
icebp
sub
imul
lret
cld
pop
mov
fsts
sub
or
adc
jg
mov
mov
icebp
dec
cwtl
push
das
push
daa
iret
enter
add
xlat
lahf
es
jg
cmp
addr16
fwait
mov
sti
insb
mov
adc
add
xchg
ret
mov
scas
std
imul
dec
mov
fiaddl
scas
lea
lods
sbb
xchg
les
stos
outsl
test
mov
inc
xlat
stos
push
jg
arpl
cmp
push
xchg
or
stos
ss
xchg
sbb
adc
mov
int
es
mov
xor
push
cmp
into
or
ds
pop
sbb
add
imul
or
loop
or
pop
cmp
mov
sahf
mov
outsb
xor
pushf
sub
hlt
or
jb
cmpsb
mov
test
xchg
push
add
xchg
inc
xor
inc
int
mov
mov
iret
imul
mov
movsb
push
hlt
cmp
mov
and
stos
imul
inc
fistl
mov
jmp
fistl
mov
enter
cmc
lahf
ds
std
xchg
inc
loopne
sbb
or
getsec
dec
jb
sub
sub
mov
add
xor
leave
pop
add
push
jp
pop
or
xor
mov
cmpsb
mov
mov
dec
jp
pop
insb
mov
cmp
sbb
dec
int
mov
fidivrl
lea
jg
jp
push
pop
pop
pusha
dec
pop
stc
inc
mov
iret
and
push
enter
xor
fdivrl
cmp
inc
adc
sub
fisttpll
je
scas
stc
xchg
and
dec
loop
push
out
xor
cwtl
iret
movsl
xchg
icebp
shll
fimuls
push
cmpb
and
jnp
ret
call
sub
mov
adc
popl
adc
adc
lret
hlt
insb
jmp
pop
mov
push
ret
scas
movsb
aad
loope
int3
fdivrp
cltd
mov
mov
add
pop
add
test
jmp
lods
stos
les
stc
cmpsb
push
xchg
adc
sub
insb
call
loopne
test
int
xchg
repz
loope
and
ja
sbb
aaa
imul
sbb
add
insl
scas
pop
nop
dec
or
adc
repz
pop
test
cld
mov
popf
decb
or
push
push
mov
push
icebp
or
adc
sbb
sbb
mov
or
lahf
movsl
jb
leavew
rcrb
scas
leave
in
lahf
int
cmpsb
cmovbe
shll
xor
icebp
mov
scas
test
imul
jmp
pop
test
aaa
imul
fwait
sub
xchg
je
testl
sub
fisttpl
mov
push
fsts
xchg
sbb
pop
pop
mov
push
mov
in
pop
mov
inc
inc
or
xor
jecxz
push
das
push
mov
test
loopne
test
call
or
sub
out
jl
andb
sbb
scas
mov
es
fdivs
ror
and
adc
out
cmc
mov
push
dec
fmull
pushl
dec
orl
icebp
jbe
adc
cld
jnp
push
stos
mov
push
fidivl
push
pushf
and
jecxz
add
sub
push
movsb
dec
mov
adc
xor
mov
push
fldcw
xchg
mov
lock
ljmp
into
xchg
mov
dec
aaa
xor
mov
push
xchg
imul
mov
lcall
sub
add
or
gs
pop
mov
insl
orb
push
lret
sbb
dec
jno
jp
add
ficoml
and
mov
add
nop
mov
fdivrs
sbb
xchg
in
arpl
jb
addb
lock
into
mov
ret
cwtl
push
jbe
scas
shl
sahf
xchg
es
adc
jae
dec
pop
cmovs
sbb
cmp
or
or
sbb
gs
out
lods
mov
mov
adc
movsb
and
hlt
sti
and
aas
jge
into
jns
inc
das
loope
xor
movsl
or
pop
pushl
and
scas
mov
stos
clc
sub
pop
pop
mov
mov
je
shrl
cmpsb
mov
xor
pop
lret
jg
xchg
xchg
je
adc
push
shlb
add
pushf
xor
mov
push
lea
xor
sbb
cmp
add
pop
pushf
inc
dec
jp
mov
ds
push
shrb
add
cmp
jmp
mov
adc
dec
xchg
inc
sub
fsts
in
shlb
mov
or
jb
dec
sbb
xor
inc
add
fistpll
push
cmp
xorb
jl
lahf
stos
aad
out
push
or
dec
pusha
push
pop
test
pop
lods
sub
insl
loop
jae
jb
jnp
adc
mov
les
cli
imul
cmp
pop
aad
mov
xchg
push
adc
ljmp
xor
fisubrs
aad
stos
xchg
push
int
testb
lret
popa
imul
ljmp
test
cmovns
loop
sub
icebp
cmc
jno
call
ja
sub
push
xchg
imul
dec
inc
stos
mov
pop
add
mov
cwtl
dec
sbb
pushf
int
out
sub
adc
add
jl
lds
push
and
rol
lret
in
mov
int
xchg
stc
sbb
in
cmc
adc
push
mov
test
cld
lret
or
cmpsl
push
mov
into
mov
movsb
movsb
ss
insl
mov
dec
jb
xor
lds
cs
fiadds
cmpsb
add
lods
pop
popa
nop
sbb
shl
adc
and
lds
fadd
or
sbb
pop
rep
mov
mov
negl
mov
lret
mov
lea
xchg
jb
test
pushf
mov
dec
arpl
sbb
scas
push
pop
pop
jne
sbb
cld
jl
xchg
inc
lods
mov
lahf
sar
movsl
outsb
xchg
sbb
pop
jg
push
lcall
sub
jb
sub
sub
test
int
es
sbb
sbb
dec
xchg
adc
cmp
imul
pop
in
ret
push
xchg
jge
test
iret
sbb
xor
inc
mov
pushf
hlt
aas
mov
pop
lds
fsts
fadds
mov
push
mov
add
dec
ror
data16
stc
dec
jae
cmp
xchg
dec
or
sbb
xchg
mov
xchg
repz
sbb
mov
sbb
inc
test
cmpsl
popa
mov
fwait
inc
mov
div
add
ror
and
push
mov
divb
mov
into
sbb
xchg
xor
xor
sti
outsb
xchg
loopne
shlb
and
stos
pop
pop
loope
mov
xor
daa
sarb
xchg
ss
adc
push
mov
adc
cmpsl
sbb
xor
push
sar
loope
jbe
add
adc
js
jae
aad
adc
or
mov
loop
pop
mov
inc
add
pop
inc
mov
mov
push
and
mov
std
xor
adc
fwait
ljmp
cmc
scas
or
xor
out
out
add
pop
inc
aaa
mov
shrl
movsb
jnp
sub
adc
popa
iret
mov
in
outsb
mov
shl
cli
cmpsl
ds
mov
inc
outsl
stos
in
test
fsubr
dec
or
xor
hlt
pop
adc
lds
fldt
dec
xchg
add
stos
push
fcmovnb
mov
pop
daa
xorl
and
dec
hlt
lea
repz
adc
xchg
cmpsb
sbb
dec
mov
stos
into
pop
outsl
inc
and
pop
and
es
and
stos
fimull
sbb
in
add
jns
in
into
outsl
in
ds
mov
ljmp
push
aam
xchg
lcall
mov
idiv
inc
mov
adc
aam
iret
addl
xor
adc
push
xchg
sub
xor
lret
sbb
mov
and
pop
or
mov
dec
jno
mov
lods
fs
in
mov
fisttpll
inc
mov
loop
loop
adc
mov
mov
cmp
xor
rorl
sbb
or
aaa
movsb
jl
loope
push
loope
adc
cmpsb
stos
adc
sar
std
ja
push
mov
aad
pop
adc
cmp
lret
mov
scas
stos
repnz
and
add
iret
data16
dec
xlat
out
hlt
ss
sbb
ds
dec
dec
arpl
pop
orl
jb
dec
pop
std
mov
sbb
cmp
pop
dec
out
stos
movsb
mov
jbe
ja
stc
jne
jae
xchg
mov
mov
jnp
out
sti
fmuls
jp
and
in
jecxz
jb
push
mov
mov
cmp
adc
call
or
pushf
or
cmp
arpl
loop
inc
jns
enter
stc
inc
mov
push
sub
dec
lock
insb
int3
sti
add
rcll
mov
sbb
or
lods
inc
xor
repnz
mov
dec
je
shlb
jl
test
mov
in
xchg
cmovae
fimull
gs
sbb
cmc
dec
repnz
dec
cltd
mov
cmp
int3
jnp
fwait
jg
push
xchg
cs
mov
mov
pop
fs
scas
into
xchg
leave
and
xor
inc
jg
inc
mov
add
fdivrs
aaa
adc
mov
and
imul
popa
orl
push
push
loop
dec
dec
or
je
and
sub
lret
sbb
jne
or
jle
xor
incl
xchg
adc
les
popa
ror
add
movsl
mov
inc
rclb
mov
inc
mov
push
cs
bnd
mov
ficoms
mov
out
test
dec
cmp
div
mov
cs
mov
addr16
cmp
into
sbb
ljmp
jl
inc
xor
pop
xchg
inc
adc
in
mov
cmpsb
mov
or
and
or
movsl
jno
sub
dec
test
imul
in
ljmp
mov
pop
jle
cs
outsl
imulb
sub
stc
mov
ss
push
and
ror
or
cmp
ljmp
lds
jne
add
push
dec
push
or
mov
jp
mov
mov
xchg
dec
pop
dec
stc
pushf
orl
pop
aas
cld
arpl
imul
js
subl
lret
cld
icebp
hlt
fistpll
outsl
aad
jbe
lcall
imul
rcrb
jns
cld
dec
loope
fs
ds
pop
fwait
lahf
lock
xchg
or
mov
jl
dec
loope
add
les
or
jo
nop
jl
xchg
adcb
pop
and
fisubrl
pop
xor
daa
popf
loope
sub
push
test
leave
xor
push
loop
inc
and
orb
mov
push
clc
and
lcall
fld
sbb
mov
out
cmpsl
dec
mov
pop
adc
jbe
jne
cmpsb
loopne
sub
add
outsl
shlb
std
fistpll
add
loope
hlt
mov
adc
and
cmp
stos
dec
mov
jbe
repz
xchg
leave
adc
sbb
cli
aad
mov
subl
push
dec
xchg
mov
mov
sbb
push
gs
xor
clc
mov
cwtl
in
cmp
push
in
xchg
cs
dec
mov
or
mov
pop
jae
mov
push
and
add
insl
cli
cmpb
push
xor
pop
cmp
outsb
cmpsl
lea
push
adc
cmp
rorb
dec
shlb
movsb
adc
jb
movsb
mov
jmp
fdivl
jns
inc
jp
mov
mov
jl
adc
test
cmp
dec
fsub
lock
mov
cld
outsl
fisubrl
adc
nop
or
jle
popa
sub
sub
adc
pop
pop
mov
xchg
add
add
adc
pop
mov
addl
sti
popf
inc
push
loope
mov
xlat
sub
lret
loope
out
jbe
and
or
pop
imul
pop
ja
push
sbb
jge
add
mov
sub
outsl
inc
xor
out
movb
aaa
stc
movsl
mov
xchg
sbb
lock
adc
jg
push
fldt
es
call
mov
test
jecxz
or
hlt
adc
dec
xchg
cmp
int3
inc
cmp
mov
add
out
xchg
mov
bswap
dec
subb
push
mov
adc
imul
nop
int3
dec
xlat
sub
jmp
jp
popa
outsl
shr
mov
or
aad
loop
lret
cmp
ds
test
xchg
insl
stos
mov
dec
cmp
aas
nop
outsl
sbb
pop
notb
fnstcw
pop
in
or
dec
and
sbb
xor
out
in
sub
ret
mov
jnp
cltd
xchg
add
ret
cmp
dec
jb
cwtl
shlb
sub
inc
test
out
xor
mov
xor
jno
test
movsb
cmp
mov
fstl
adc
cld
fs
push
fcomps
adc
es
cmp
lods
inc
ds
and
jns
loope
cmp
dec
adcl
scas
pop
lahf
mov
stos
sbb
mov
xchg
stos
call
push
jnp
aas
mov
dec
and
insb
adc
and
outsl
push
and
xlat
outsb
add
jne
cmp
or
imulb
std
cmp
xchg
sub
dec
insb
stos
push
mov
xchg
jnp
mov
outsb
imul
popa
shr
je
test
lcall
sub
adc
pop
inc
ds
xchg
iret
cmp
lcall
push
jo
out
idivb
xchg
push
pop
es
xlat
mov
out
mov
pop
iret
xor
cmp
adc
pop
pop
and
push
add
jge
or
popf
or
call
stos
mov
push
ss
fwait
syscall
adc
out
fcmovb
sbb
mov
je
sub
mov
test
aas
pop
cli
addr16
nop
scas
cld
aaa
mov
adc
add
pushf
dec
les
lcall
xor
pushf
out
mov
jno
andl
cmp
movsl
adc
scas
fsubp
test
push
add
jbe
sub
mov
je
push
push
mov
out
pop
dec
dec
pop
jecxz
cmp
xorb
push
inc
aas
addb
lods
jne
ret
and
popa
or
out
cmpsb
xchg
push
or
or
jp
inc
rol
fnstenv
int3
jb
sub
cmp
sarb
loope
add
sar
push
inc
push
es
shlb
push
ret
jg
push
adc
inc
sahf
add
xor
mov
cmp
xor
pop
clc
jnp
mov
jl
pop
push
adc
subl
scas
dec
push
lods
push
cs
scas
push
ret
arpl
add
xchg
pop
xor
rolb
sbb
push
cmp
pop
and
mov
rep
mov
mov
out
or
xor
imul
divl
add
cmc
outsl
push
ficompl
lret
into
inc
sub
movsl
push
insl
stos
inc
mov
repz
jg
inc
sub
pop
push
les
xchg
outsb
repz
test
icebp
sti
mov
sbb
push
imul
ret
and
xor
les
jp
add
jbe
mov
push
jmp
clc
mov
jmp
int
pop
bnd
test
mov
popf
rcrl
arpl
jle
lock
sub
mov
ret
add
mov
lock
int
sbb
push
inc
adc
loopnew
sub
mulb
loope
mov
in
int
sbb
sbb
dec
jns
pop
test
mov
loopne
fidivrl
adc
or
cmp
gs
js
and
xor
push
sbb
movsb
aad
insb
pop
push
pop
fstpl
xchg
sub
mov
daa
mov
mov
scas
jbe
inc
fistps
cmp
scas
mov
mov
mov
arpl
pop
xchg
dec
popf
nop
push
inc
outsl
cmp
lcall
inc
adc
jl
aad
in
add
sub
ret
ljmp
dec
add
add
shlb
stos
shl
add
jbe
int
and
lods
dec
cli
gs
inc
xor
push
cwtl
imul
into
mov
shl
mov
pop
adc
mov
xor
and
or
icebp
mov
sub
popa
cmp
xor
mov
and
hlt
mov
jmp
jae
inc
in
lret
rcr
cmp
xchg
movsb
lds
popf
adc
test
sarb
mov
pop
pop
jne
pop
inc
lcall
pop
sub
jl
jecxz
cmp
xor
les
mov
mov
aaa
in
sti
add
xchg
xchg
jp
and
cld
fidivrs
push
pop
mov
sub
ja
stc
stos
mov
out
and
stos
xchg
js
movsb
adc
sub
add
mov
and
sbb
out
insl
add
mov
mov
mov
xor
shll
into
push
add
xor
test
mov
cmpsl
outsb
insb
nop
pop
fdivrl
push
aad
and
movsl
inc
push
jns
jmp
mov
xlat
sbb
jg
arpl
push
cmc
sbb
lahf
jbe
lods
and
adc
and
cmp
xor
pop
mov
mov
aaa
and
stos
xor
outsl
xor
jnp
dec
mov
stos
inc
xchg
sti
and
pop
inc
adc
ljmp
in
aam
les
iret
or
mov
rcrl
jae
jb
js
js
loopne
mov
dec
adc
inc
xchg
push
ret
cmp
sbb
popf
outsb
test
fisubl
mov
inc
addl
lods
push
arpl
add
cwtl
jmp
add
movsb
adc
idivb
add
push
js
mov
lods
mov
mov
and
push
jmp
imul
or
xchg
hlt
or
outsb
pop
ret
cwtl
xor
imul
sbb
int3
sub
pop
inc
fimull
daa
jns
outsb
scas
xor
jo
mov
ret
test
adc
andl
dec
sub
stos
and
jns
mov
push
testl
mov
sub
mov
push
sub
or
sub
out
lahf
bound
gs
js
mov
and
cmp
inc
bound
cmp
fstpl
ret
mov
icebp
xor
in
sbb
test
dec
cmc
or
push
lret
subb
inc
sub
lcall
add
and
fs
shlb
mov
or
ret
rorl
aas
rcll
cmp
loop
int
push
mov
jp
xchg
insb
add
inc
jno
cmp
inc
ds
clc
icebp
popf
pop
sbb
push
jp
dec
mov
inc
stos
enter
mov
jmp
cli
int3
cmpb
in
lcall
stos
notl
mov
mov
fsubrl
jmp
subb
nop
je
jae
mov
sbb
in
pop
push
leave
cmpl
push
ja
push
xor
pusha
arpl
dec
mov
popa
pop
insl
sub
clc
and
sbb
or
insl
cwtl
mov
enter
xchg
addr16
aaa
mov
imul
in
mov
loope
fldl
in
sbb
aaa
shrl
test
std
pop
test
out
cmpsb
sub
imul
rclb
popf
fsts
stos
lods
pmulhuw
ror
stos
lret
dec
or
in
cwtl
or
sub
testl
cmp
cmp
push
mov
pop
aas
dec
push
xor
dec
test
mov
mov
pop
scas
mov
add
push
cmpsb
mov
sahf
call
pusha
sahf
nop
subl
test
sub
fdivrl
xchg
dec
arpl
cmpsl
leave
arpl
lret
ret
mov
mov
icebp
bound
arpl
dec
mov
cmpsb
sbb
cmpsb
sbb
jo
mov
push
rclb
add
lods
mov
inc
add
in
lea
fmuls
outsl
adc
cmp
sbb
mov
movnti
sbb
or
push
rol
jae
mov
push
fisttps
out
cmp
sub
or
mov
testb
lods
cli
push
xor
fisttpll
in
lods
dec
lea
into
leave
and
pop
out
xor
jae
arpl
enter
push
inc
nop
jne
mov
cwtl
pop
inc
add
imull
mov
lret
gs
and
inc
mov
pop
mov
add
dec
mov
mov
popf
dec
aad
mov
vpcomd
xor
jno
jne
cmp
test
mov
jnp
ss
push
adc
rcll
xor
or
lods
pop
das
inc
lods
xchg
xchg
add
mov
push
add
pop
push
ss
jae
or
je
xchg
pusha
fwait
mov
orb
mov
xlat
pop
out
imul
mov
cmp
pop
mov
cwtl
loop
pop
xchg
cmp
mov
lret
push
mov
fldl2t
outsl
fsubs
lahf
ds
into
adc
in
dec
lods
pop
mov
clc
outsl
jb
cmpsl
mov
pop
enter
mov
or
mov
and
push
orl
lock
adc
loope
leave
leave
dec
sbb
dec
fcompl
mov
inc
insb
movsb
add
jno
bnd
inc
int3
cs
push
aas
sbb
add
jbe
fsubrs
dec
inc
add
xchg
cmovb
insb
push
xchg
and
jnp
or
arpl
xchg
repnz
lret
stos
xchg
daa
pop
lock
push
test
mov
lcall
pop
fiadds
jg
out
pop
xchg
es
and
mov
cmpsb
xor
mov
in
pop
stc
mov
push
jecxz
loope
pop
dec
cwtl
out
or
jae
jno
sub
add
and
pop
add
mov
out
cmp
adc
add
lea
out
insl
dec
xor
ja
or
cs
cmpsl
arpl
outsl
adc
ss
mov
and
int
mov
xchg
jp
in
insl
js
xchg
repz
pusha
cmc
cmp
mov
or
and
dec
pop
sahf
or
pcmpgtb
push
adc
es
pop
pop
jg
pop
cli
jne
sbb
idivb
push
insb
nop
inc
dec
das
push
cli
mov
push
int
sub
add
xchg
mov
xor
pop
cld
test
lods
aaa
dec
aaa
jae
mov
jge
jmp
mov
pop
mov
dec
pop
add
int
pop
pop
ljmp
jg
cmpl
fidivl
xchg
je
bound
test
mov
xchg
xor
jbe
mov
inc
sub
in
and
int
shrb
xor
xor
sub
xchg
inc
test
rolb
or
popa
xchg
cli
jmp
cmp
jle
dec
lock
aam
lret
stos
inc
cmp
dec
pop
lret
mov
stos
pop
cltd
xchg
popf
mov
out
mov
shrl
std
movl
jg
loope
xor
enter
imul
mov
sub
lock
cmp
push
aas
jle
xchg
mov
insl
out
sarl
insb
or
insb
or
add
call
idivl
xor
xlat
popf
pop
fucom
push
ret
push
pusha
daa
in
test
lock
cmpsl
das
dec
jne
aam
movsb
lock
into
and
and
mov
sahf
ljmp
push
add
mov
ja
xchg
test
or
popf
sub
pop
or
xor
dec
icebp
add
adc
lock
sbb
sahf
jl
dec
ret
jecxz
pop
mov
add
js
sbb
push
inc
ds
and
xor
mov
pop
pop
jle
mov
fists
xor
sub
imul
inc
cmpsb
insl
add
inc
pop
fs
bnd
mov
lock
jne
add
or
rcl
push
add
jp
pop
mov
pop
and
test
cli
daa
icebp
popa
faddl
ja
inc
ds
cmp
test
pop
sub
xchg
adc
cmp
arpl
aaa
lods
xor
sbb
das
js
xchg
dec
xchg
lret
mov
inc
mov
lods
test
push
mov
xchg
int
adc
or
pusha
ret
inc
pop
sahf
adc
mov
mov
stos
in
lock
mov
dec
xor
jecxz
mov
xchg
addl
inc
movsl
sub
and
testl
xchg
adcl
flds
push
scas
lret
push
fnstsw
jns
mov
and
lcall
sti
jns
lret
fcoml
push
inc
or
in
inc
inc
arpl
inc
push
fpatan
loopne
adc
stc
hlt
or
pop
subb
xor
pop
shlb
push
add
test
scas
cs
xchg
mov
in
lahf
movsb
cmp
xchg
sbb
pshufw
ljmp
xor
dec
mov
jno
insl
pop
and
mov
pusha
lahf
dec
mov
pop
xor
jno
lea
pop
jmp
adc
idiv
pushf
push
inc
addr16
lret
xor
pop
mov
fdivr
das
add
popf
call
xchg
lahf
outsl
mov
mov
pop
or
pop
jecxz
minps
idivb
jecxz
lcall
xor
sub
addl
leave
adc
movsl
cmpb
inc
sbb
es
in
mov
sbb
sub
enter
movl
outsl
je
mov
in
sbb
inc
pop
and
cmp
and
gs
lock
push
ja
ret
fs
mov
and
ds
sbb
cmp
popf
loop
cmp
test
jl
jg
cmp
out
cmp
lret
xchg
aas
pop
jb
cmpsl
ror
dec
mov
sub
imul
popa
and
movb
stc
gs
sub
sbb
aaa
outsl
aaa
mov
cltd
popf
push
cs
mov
icebp
pop
repz
and
lods
and
cmp
push
clc
repnz
add
imul
sub
mov
sbb
and
mov
ds
in
outsb
lret
in
pop
icebp
outsl
nop
stos
jp
cmp
shrb
or
loopne
inc
fsubs
pop
int3
jne
fidivs
out
mov
jle
mov
mov
mov
dec
jne
sbb
scas
cmp
inc
xchg
mov
cmp
bnd
and
loop
lret
rcr
pop
hlt
iret
jecxz
in
insb
mov
push
mov
jno
jb
dec
inc
fidivs
xchg
rcl
xchg
andl
add
push
add
popf
fdivrl
mov
add
popf
call
mov
add
daa
addb
or
adc
roll
test
push
xor
xor
mov
cmp
in
cli
lea
rolb
add
inc
leave
pushf
pop
mov
mov
cmpsl
xchg
pop
fnstsw
mov
aam
mov
stos
sub
dec
mov
es
mov
push
xlat
inc
in
test
adc
testb
inc
popa
cmp
movsl
jmp
mov
cmp
xchg
mov
mov
bound
mov
les
pop
jno
push
ja
movsl
xchg
scas
sub
test
mov
rol
addr16
dec
sbb
test
inc
int
divb
imul
subb
xchg
shll
lods
xlat
fwait
test
sbbb
sbb
imul
add
fistpl
addr16
xlat
mov
cmpsb
inc
dec
cmp
mov
imulb
fwait
adc
mov
cltd
subb
test
cmc
add
and
lea
add
js
cmp
das
mov
add
jecxz
mov
lods
fsubrp
mov
mov
pop
pop
xchg
repnz
mov
sub
loope
stos
cld
lea
adc
iret
pop
jnp
lods
movsl
adc
pop
push
fidivl
loop
jns
jo
movsb
nop
mov
rolb
movsb
sbb
cmp
inc
das
push
je
or
mov
xor
dec
lea
leave
sbb
sarb
mov
xchg
cltd
sbbl
push
pop
sub
enter
ds
fidivrs
xchg
in
out
xchg
add
lcall
ret
les
pop
rcrl
sbb
scas
in
jb
xor
push
mov
addb
mov
sbb
xlat
aas
iret
xchg
jle
das
mov
xchg
int
das
inc
data16
mov
dec
clc
shl
pop
mov
repz
mov
gs
rclb
cs
sar
out
lret
dec
dec
cmpsl
test
int3
xor
xchg
nop
or
dec
rcll
imul
rcl
in
rclb
lods
gs
daa
dec
arpl
enter
inc
pop
mov
push
enter
ret
pop
dec
jnp
sub
cwtl
movsl
in
imul
xchg
sub
cmp
sbb
popf
adc
je
pop
shr
dec
push
in
cmpl
cmp
ret
popf
jb
les
in
mov
rorb
or
jle
dec
ret
mov
stos
inc
mov
pop
and
xorb
dec
mov
and
mov
jno
adc
mov
push
mov
push
lods
add
mov
dec
stos
test
adc
lods
push
addr16
push
jmp
mov
in
lret
iret
adc
pop
mov
gs
mov
into
sub
shlb
iret
cmc
mov
push
fistps
push
jp
jmp
cmpsl
jns
xchg
xchg
dec
sbb
test
push
push
sbb
jle
ret
out
inc
leave
dec
jnp
mov
cmp
adc
out
sub
jp
xchg
xchg
cmp
daa
inc
shll
lahf
mov
xor
xlat
cs
loope
jl
movsb
imul
dec
or
lea
or
repnz
push
add
idivl
pop
into
orb
out
mov
and
movsl
sub
dec
loope
loopne
inc
dec
add
mov
pop
cld
pop
std
call
mov
push
mov
iret
mov
push
mov
cmp
pop
add
mov
jge
idivb
adc
test
fcmove
lock
xchg
and
icebp
enter
orb
dec
mov
mov
out
jmp
aaa
insb
mov
mov
mov
mov
push
xor
fsub
mov
andb
mov
adc
in
cs
xor
mov
mov
push
xchg
and
shrb
gs
mov
in
scas
sub
mov
das
aad
stc
mov
lea
fisubl
lds
and
adc
mov
movsl
jle
cmp
dec
leave
sub
adc
in
loop
out
push
and
jmp
pop
rorl
fiaddl
dec
mov
mov
lret
mov
add
push
add
popa
lds
pop
fs
xchg
sbb
ret
lds
dec
pop
js
imul
mov
jmp
adc
movsb
push
fdivp
xchg
jp
or
jns
pop
imul
and
cmpsb
sub
jae
jge
push
inc
cmp
ret
repnz
test
ljmp
mov
imul
rol
call
xchg
fucom
xor
dec
sti
jmp
bound
movsl
sub
add
arpl
fistpll
pusha
mov
data16
sub
and
sbb
or
xchg
pop
sbb
sahf
push
mov
or
mov
mov
popa
xchg
rcl
mov
repnz
testl
cmpsl
or
into
cmpb
adc
notb
jb
lahf
or
push
ret
shll
mov
mov
dec
cld
xor
clc
jb
mov
pop
outsb
xchg
jg
repz
imul
cmp
imul
scas
dec
sbb
or
into
push
mov
push
insl
rclb
cmc
sbb
cmpsb
repz
dec
pop
mov
fisubs
scas
call
arpl
mov
add
repz
fstpt
imul
je
pop
mov
push
lcall
push
jnp
daa
sub
mov
movsl
test
mov
shrl
push
gs
test
lods
pop
mov
add
push
xorl
or
lods
iret
ret
mov
faddp
push
cmpb
mov
orl
pop
pop
imul
fs
adc
adc
nop
xchg
clc
pop
push
mov
xor
loop
add
jle
insl
repz
dec
daa
mov
push
push
jb
insb
outsb
ljmp
jl
pop
cwtl
push
xchg
or
jae
jne
out
sub
mov
inc
je
loope
fwait
sbb
sbb
lock
jmp
je
inc
das
test
sub
movsl
in
jb
mov
jle
repz
leave
add
shl
fistpll
in
push
pop
mov
outsb
sahf
mov
lcall
xor
or
lock
out
sarl
sbb
fstpt
push
shr
ret
fldenv
mov
aad
and
push
cli
daa
sti
mov
add
fs
ljmp
mov
jg
js
sbb
xchg
pop
pusha
ljmp
mov
aaa
daa
popf
pop
push
adc
test
jle
mov
fmull
pop
movsl
dec
out
es
add
push
out
dec
ds
and
jbe
add
and
xor
mov
lods
xchg
mov
push
lods
xchg
ret
xorl
stos
sub
pop
add
outsb
je
lock
outsb
lcall
subb
test
inc
sbb
popf
adc
cld
inc
ret
adc
arpl
and
cmp
xor
mov
jb
into
mov
add
cmp
xor
pop
rcrb
mov
mov
add
out
aad
pushf
and
jbe
push
stc
inc
fisttpll
shll
lcall
xor
lds
stc
stc
pop
xchg
pop
mov
jmp
jl
add
add
mov
jnp
cmp
fdivs
lods
in
add
scas
or
dec
dec
ja
inc
testb
cli
cmp
daa
sbb
mov
arpl
insl
push
mov
mov
and
inc
cltd
xor
adc
movsl
mov
add
pop
popa
inc
sbb
gs
push
test
ja
mov
mov
icebp
icebp
xor
test
cwtl
push
add
and
sti
orb
fst
xchg
mov
repz
cmp
movd
pop
sbb
xchg
sub
mov
out
fdivl
xchg
lcall
gs
cwtl
divb
aas
mov
sti
pop
mov
jnp
mov
pop
inc
lret
sti
popf
pop
inc
xor
cmpsb
test
xchg
sbb
mov
clc
std
cmpsl
je
aad
out
pop
dec
and
cld
data16
aas
sub
xor
fstpt
dec
enter
mov
lock
lods
sub
jb
lret
ret
dec
int
add
xadd
incl
mov
sub
in
inc
xchg
fcmovb
popf
loope
pop
pop
inc
pop
push
mov
jge
mov
fimuls
sbb
dec
xchg
sbb
ljmp
cmp
or
mov
or
pop
push
sub
xchg
inc
or
into
lcall
andl
inc
pop
dec
mov
fwait
mov
xchg
test
lds
sbb
xchg
jns
std
adc
ds
add
enter
mov
stos
mov
loopne
dec
jmp
test
pop
fcmovb
mov
xor
sahf
jecxz
ds
push
into
rorl
out
inc
mov
neg
push
push
dec
or
outsl
out
mov
mov
icebp
out
test
push
and
sarl
mov
mov
push
sbb
ljmp
scas
sub
stos
push
cld
pop
jnp
mov
je
fldenv
dec
int
fs
adc
pop
mov
ljmp
sarb
jbe
cltd
pop
sub
dec
inc
dec
aad
ret
dec
sub
mov
sar
out
cmpsl
outsb
pop
inc
dec
mov
int3
or
shll
mov
mov
inc
mov
ret
mov
outsl
and
test
inc
jnp
ret
fstl
sub
xchg
in
cltd
inc
pop
decl
movsl
cmp
add
in
push
or
movsb
js
sub
xchg
push
add
cmp
sbb
sahf
adc
mov
sti
cmp
sub
push
jb
push
loopne
cmpsb
loope
push
adc
xor
rorl
call
jge
mov
mov
mov
arpl
pop
jae
jmp
xchg
cli
mov
dec
cmpl
mov
sbb
aad
push
fstp
cltd
mov
sbb
aam
inc
mov
cmp
das
jecxz
mov
mov
sti
xor
fdivr
jae
mov
and
repnz
add
jne
mov
add
scas
jno
out
add
nop
pop
mov
je
dec
cwtl
stos
je
pop
and
add
lcall
addl
adc
push
dec
aad
lea
pusha
mov
cwtl
or
hlt
cs
popf
sbb
lret
aas
test
push
pop
jge,pn
sbb
or
rcrb
stc
bound
cld
push
cs
mov
fwait
and
push
cmp
into
inc
xlat
lock
and
idivb
sub
push
daa
inc
mov
stos
popa
jo
push
out
daa
test
fisubrs
imul
and
push
ret
jle
mov
lret
jne
scas
loop
sarb
rcr
xlat
daa
aas
daa
mov
or
xor
ja
cli
outsl
inc
ret
jnp
push
adc
mov
arpl
inc
stos
pop
pusha
loop
rcrl
ja
mov
and
stc
xor
jne
mov
inc
add
lods
mov
dec
call
and
push
nop
ret
push
movsb
jae
outsl
ljmp
mov
fwait
in
scas
aaa
pop
sbb
inc
dec
cmp
mov
add
orb
pop
repz
adc
ret
mov
push
mov
and
xchg
sub
cld
aam
out
loopne
push
lock
addr16
call
pop
inc
mul
add
repz
pusha
jmp
movsb
subb
std
stos
es
mov
fildl
imul
mov
sbb
outsl
lcall
es
mov
ret
shl
sub
shlb
pushf
and
fdiv
and
fcmovb
jbe
test
int3
stos
mov
lcall
push
dec
icebp
sub
sbb
mov
add
jmp
xchg
orl
xchg
and
negw
popa
inc
iret
repz
lcall
cmpsb
into
enter
sbb
mov
cmpl
push
addr16
clc
xchg
scas
mov
sarb
xor
pop
cmp
mov
rorb
cmp
mov
or
outsl
mov
inc
inc
pop
rclb
addr16
insb
in
sbb
dec
call
cmpsl
shrb
xor
jb
push
mulb
push
mov
mov
in
sbb
cmp
or
cld
mov
xor
and
xor
xor
adc
sbb
cmpsl
dec
jbe
adc
add
lahf
test
add
lock
inc
fisubrl
imul
pusha
sub
ja
mov
pushf
xchg
adc
mov
and
mov
adc
cmpsb
sub
inc
mov
push
gs
rcrl
mov
cs
add
mov
sti
jae
jl
sti
jmp
xor
push
jno
cmp
das
push
fldenv
rolb
jg
movsl
mov
pop
jmp
sub
dec
inc
insl
push
xchg
mov
out
sub
test
daa
push
inc
ficomps
pushf
cmp
lock
inc
jp
xchg
int3
stos
inc
inc
cmpsb
jo
add
cmp
dec
xorl
out
sbb
pop
enter
or
adc
call
and
mov
test
popa
pop
ja
inc
sbb
test
sbb
inc
sub
out
mov
push
cld
rol
imul
cmc
sbb
clc
cmp
and
cmp
lock
pop
xor
or
ja
sbb
mov
mov
data16
cmp
stos
adc
mov
test
arpl
sbb
push
mov
mov
outsb
lods
dec
and
push
arpl
orb
mov
in
lahf
jo
adc
sub
out
pop
dec
xchg
ror
int3
or
add
rcrl
nop
dec
arpl
fmul
add
add
xchg
adc
mov
inc
pop
mov
aam
push
sbb
xor
sub
sbb
outsb
das
jne
sahf
xchg
pop
xchg
pop
push
push
push
fs
add
mov
aad
mov
test
push
ss
negl
cmc
fld1
mov
ljmp
out
testl
sub
out
mov
xor
pop
andb
cs
jo
iret
lahf
jnp
and
or
lods
das
mov
pop
mov
lock
sahf
shlb
lea
and
adc
sbb
stc
sbb
and
inc
lahf
add
sbb
loope
in
sbb
xchg
fcoms
iret
xchg
jge
outsb
negl
test
adc
sbb
fs
sub
bound
out
mov
les
add
push
int
fwait
loop
cmp
pop
pop
xchg
lahf
je
in
inc
std
lods
pop
or
mov
fwait
and
addl
mov
dec
out
enter
addb
aad
test
je
nop
adc
xor
cmp
xlat
fwait
and
pop
in
stos
sub
loop
adc
out
lret
jbe
jno
dec
push
subl
pop
inc
push
pusha
jne
outsl
and
adc
hlt
lahf
out
and
das
inc
or
lods
or
outsl
mov
mulb
test
in
mov
popa
mov
add
test
or
mov
or
jne
ret
iret
inc
dec
xchg
test
pop
xchg
add
loope
test
test
adc
pop
rcll
pop
adc
jo
cltd
xchg
dec
sbb
or
sub
lock
clc
ret
nop
push
aas
lock
into
out
sbb
and
xchg
add
mov
fildll
mov
int3
lcall
stc
jecxz
xor
cmp
fcmovb
and
gs
fstl
or
mov
js
sbb
outsl
addb
adc
pop
jge
int
loope
jb
je
fildll
xchg
jle
or
jge
pop
mov
addr16
popf
push
jmp
xor
and
push
xchg
sahf
je
ret
mov
scas
lods
push
cmovne
jbe
loop
bound
movl
inc
cmp
sub
test
and
mov
push
int
push
fwait
xchg
test
adc
inc
sbb
hlt
ret
sti
movsl
add
cmc
loop
mov
cs
jl
rcrl
stc
leave
xor
push
outsl
shll
ret
jnp
lahf
sbb
movb
inc
mov
idivl
imul
outsl
and
loop
pop
sbb
xchg
in
jp
mov
cmp
or
push
lret
sub
mov
cmpsl
test
arpl
sub
cmp
aaa
cmp
sbb
cmp
mov
cltd
sbb
pop
xor
lret
cmpsl
mov
push
or
lahf
pop
ret
iret
pop
mov
mov
inc
das
inc
jl
cltd
cltd
rorl
or
cld
sbb
cmc
jnp
imul
ss
sub
xchg
aad
push
aaa
imul
sub
inc
call
test
arpl
fistpl
fcmovbe
lea
flds
pushf
test
jne
mov
cmp
rcl
shll
and
dec
or
fdivrl
testb
loope
dec
sbb
mov
jne
add
fisttps
sub
pusha
xor
pushf
lock
movsl
sbb
nop
cmp
lar
xchg
sub
movl
xor
scas
popf
jmp
insl
or
xor
mov
push
dec
out
cmp
push
shll
jmp
lds
add
adc
xor
loopne
loop
int
xor
call
subb
mov
and
lret
mov
iret
stc
mov
dec
xor
xor
pop
push
adc
in
push
xlat
jne
rcr
test
sbb
cwtl
fsts
data16
mov
cmp
and
push
mov
push
push
pushf
fcompl
mov
xchg
dec
lds
push
arpl
inc
inc
jmp
xchg
xchg
aad
enter
cltd
pop
pushf
mov
and
pop
sub
adc
mov
mov
ds
subb
sub
sub
loop
add
rcrb
mov
popf
mov
inc
sub
xchg
adc
sub
push
mov
jns
leave
push
inc
dec
mov
push
test
add
sub
mov
mov
adc
or
mov
and
fdivrs
daa
fstpt
clc
dec
sbb
pop
dec
mov
dec
daa
sbb
addr16
jbe
fwait
into
into
movsl
outsl
arpl
popa
sbb
xchg
pop
adc
pop
push
leave
movsb
sub
xor
mov
sbb
repz
push
arpl
jg
sub
cli
lods
mov
adcb
fsubr
stc
fiadds
repz
jmp
xor
sub
in
pushf
int
hlt
lcall
out
xlat
jmp
jg
fs
xor
dec
mov
jmp
cmpsb
mov
rcrl
mov
sub
mov
inc
ror
sub
out
jno
and
inc
scas
call
inc
rclb
push
cmp
hlt
ja
push
adcb
pop
jmp
scas
jg
scas
lock
pusha
xlat
ja
sbb
jmp
js
subl
push
data16
mov
jle
push
xchg
mov
aaa
outsb
adc
aas
jne
fadds
subl
jne
imul
outsl
mov
jle
jb
loope
dec
sub
testl
push
jmp
ror
dec
pop
imul
test
sbb
into
int
clc
mov
sub
lahf
aad
mov
pop
mov
movsb
daa
imul
mov
fisubs
xchg
lods
fwait
inc
das
sub
ret
lahf
push
xchg
mull
and
inc
lods
and
mov
xor
ja
idivb
es
push
mov
dec
icebp
mov
into
cmp
pop
mov
sbb
idiv
insl
int
jbe
sub
mov
inc
or
cmp
mov
js
in
repz
test
mov
cwtl
sahf
fwait
jp
ljmp
in
push
in
pop
ret
push
outsb
movsb
sahf
cmp
jb
lods
notb
inc
lods
and
inc
outsb
or
in
fs
inc
les
push
std
cmp
push
or
add
movsb
rcrb
mov
xchg
pop
lods
mov
pusha
inc
pop
add
rorb
mov
jns
sarl
and
mov
mov
mov
mov
sub
addb
in
add
xor
loope
test
adc
sub
aas
mov
push
iret
popa
sahf
shr
cwtl
jl
cltd
out
sarl
pop
mov
mov
adc
mov
cmpsl
mov
add
testl
popa
shrb
lea
add
lret
ret
in
enter
es
xchg
imul
push
inc
push
cmp
pop
cmp
cmp
fcmovu
jnp
mov
aad
sub
or
loop
mov
aaa
dec
mov
mov
mov
dec
fwait
lea
movsb
adcb
dec
push
and
sub
pop
xchg
inc
test
jb
adc
mov
cmpsl
dec
ficomps
inc
sub
pop
inc
adc
in
fidivs
incb
mov
sbb
dec
jg
dec
and
sub
les
mov
cmc
and
fmull
mov
repnz
inc
pop
adc
dec
cs
int3
push
xor
test
scas
shlb
les
mov
push
inc
mov
mov
popf
cmpb
xor
cld
push
mov
jae
ja
roll
dec
add
sbb
cmp
pop
dec
in
loop
mov
cmp
into
mov
lods
out
xchg
movsl
mov
jmp
mov
scas
push
jmp
stos
fwait
jp
ret
je
sub
add
sub
sbb
jae
stos
cltd
xchg
or
lahf
divb
test
sub
inc
test
or
sahf
cmpsl
cmp
outsw
and
mov
xchg
rcr
cmp
lretw
push
addl
add
inc
and
inc
cmp
jae
les
mov
mov
popa
mov
aad
push
inc
inc
das
push
xchg
add
mov
inc
fildll
leave
cmc
adc
daa
cli
cwtl
lret
popf
fwait
sbb
adc
in
arpl
shrb
mov
xchg
mov
xor
leave
outsb
imul
xor
cli
mov
dec
and
ja
add
imul
and
sbb
mov
fcoms
inc
mov
mov
push
mov
inc
insb
in
mov
psubd
in
sti
loop
sbb
add
mov
repz
test
xor
mov
scas
fwait
push
pop
jnp
pop
adc
dec
pusha
fcmovnbe
add
sbb
std
hlt
call
in
pop
insl
xor
nop
leave
jns
jge
jle
es
shrl
mov
adc
pop
andb
adc
or
dec
push
adc
bound
pop
jnp
out
je
push
movsb
in
enter
pop
ja
stos
xchg
movsb
fcoms
add
shr
xchg
imul
sarb
stos
divl
test
adc
sbb
stos
inc
aas
lds
out
xchg
bound
leave
scas
push
f2xm1
icebp
inc
add
mov
xchg
mov
inc
sbbl
popf
xchg
fsubrs
pop
addr16
nop
sbb
scas
jo
inc
aas
pusha
mov
rcr
test
mov
in
fsubs
cli
scas
or
pop
lahf
sar
test
mov
mov
into
sub
mov
ja
cmp
cs
ss
cmc
pusha
outsb
call
lods
decb
jecxz
dec
ljmp
hlt
jbe
lret
push
xchg
or
and
cmp
cmp
in
xor
add
ds
jae
cmp
mov
dec
sbb
xchg
lea
sub
dec
push
adc
and
push
inc
insb
aam
stos
mov
inc
adc
dec
or
dec
add
xlat
mov
gs
call
jno
pop
mov
adc
mov
jb
push
jo
ss
popf
lock
pusha
lds
movsl
data16
insb
xchg
std
sti
push
fisubl
arpl
lock
ds
scas
jle
push
outsb
sub
cmp
push
cmp
push
movsl
cmp
push
mov
lret
mov
scas
imul
sub
lods
inc
mov
jbe
sbb
sub
mov
push
imul
dec
mov
ret
push
and
mov
ds
fcmove
fidivs
push
adcl
inc
mov
inc
fistpll
inc
leave
and
push
inc
addb
movsl
sub
in
cli
sub
sti
xchg
iret
iret
mov
add
loop
ret
cmp
push
dec
mov
clc
pop
enter
xchg
hlt
fsubs
add
sub
dec
scas
cmc
out
inc
and
pop
shll
call
dec
ret
or
daa
sub
jecxz
or
fsubl
out
aam
xchg
sbb
adc
and
nop
mov
test
mov
out
lea
jbe
es
ficompl
jno
pop
adc
adc
rcrl
cld
push
or
cmp
outsb
add
cmp
fsubrl
xchg
xor
pop
jns
cld
dec
data16
call
outsb
mov
sti
stc
lds
mov
inc
nop
int3
outsl
and
cmp
je
add
mov
out
out
dec
lret
shr
leave
out
cltd
mov
fildll
mov
ja
int3
mov
cmp
cmpsb
add
mov
sub
cmpsb
ficompl
pop
jle
mov
mov
xor
sahf
inc
stos
sbb
fdivrs
aad
ror
cli
mov
and
adc
inc
aam
adc
es
or
cmpsl
xchg
cmpsb
pop
add
push
repnz
adc
inc
or
orb
mov
pop
xchg
add
test
mov
out
mov
mov
adcl
gs
jo
arpl
jle
mov
addr16
sbb
and
jp
inc
test
pusha
pop
andl
movsl
outsl
stos
aas
into
out
sub
and
lea
and
mov
imul
inc
and
or
inc
call
inc
cwtl
stc
pushf
cmp
mov
lcall
jb
jle
mov
xor
je
mov
mov
dec
daa
repz
xor
cltd
lret
dec
imul
sbb
or
mov
push
pop
xchg
lods
shrl
adc
das
xchg
mov
jmp
sbb
lods
and
icebp
push
popa
xchg
jmp
es
push
xor
cld
arpl
lea
enter
test
jnp
outsb
dec
jge
jge
sub
pop
test
push
imul
pop
lea
jo
jb
jae
pusha
mov
and
dec
push
rorb
push
xor
cld
mov
pop
cmp
inc
sub
pop
in
xor
popf
int3
std
out
mov
and
add
jb
sbb
mov
lods
jecxz
sub
sub
call
add
mov
sbb
sbb
mov
lcall
push
rolb
imul
pop
bound
in
mov
outsl
or
loop
jg
push
int3
jecxz
jmp
gs
xchg
lahf
scas
aas
out
jb
or
add
mov
fldenv
dec
pop
cli
sbbl
popf
cmp
repz
inc
push
scas
adc
mov
xor
cwtl
xorb
pop
jno
aad
loope
sub
lret
daa
adc
mov
je
aad
fiadds
inc
push
sbb
arpl
imul
inc
xchg
jecxz
ret
xchg
cwtl
xor
jmp
sub
inc
out
in
in
into
inc
cmp
stos
data16
mov
pop
add
xchg
cmp
pop
fneni(8087
and
sbb
arpl
pop
insl
adc
in
mov
cmc
jne
cmp
and
testl
xchg
adc
ficoms
mov
dec
lds
push
jecxz
push
mov
mov
cmp
adc
xchg
jle
sub
stc
mov
addr16
std
or
mov
dec
loope
sbb
adc
fistps
popa
jle
test
mov
cmp
cli
movsb
js
movsb
test
pop
jl
pop
loopne
mov
sub
jecxz
imul
int3
jae
sti
loopne
sahf
nop
jbe
adc
and
ficoml
cmc
lds
add
imul
dec
jbe
push
pop
popa
lahf
in
enter
push
out
cmp
sbb
je
fsubrp
popa
push
mov
add
outsb
push
inc
jns
adc
outsl
sahf
repnz
pop
divl
and
fs
dec
lods
inc
mov
and
cmpsb
mov
push
lods
je
in
and
shr
jmp
cmc
mov
or
add
sahf
mov
mov
add
lds
imul
ja
out
test
jne
aaa
cmc
loopne
mov
push
add
test
mov
ficomps
outsl
mov
jns
jo
out
sub
outsb
imul
mov
jge
and
daa
sahf
std
inc
outsb
sub
repnz
lcall
repnz
xchg
adcb
cmc
mov
cld
xchg
or
fxch
inc
pop
push
mov
mov
out
or
loope
test
addr16
xor
add
cmp
push
push
mov
test
out
xchg
jae
ja
mov
jae
and
int3
or
ret
test
movsb
lods
jns
xor
xlat
pop
outsl
adc
pop
popf
test
pop
xchg
xchg
popa
jge
push
into
mov
adc
cld
mov
pop
and
push
push
mov
add
mov
call
loop
push
and
mov
push
es
pushf
inc
push
addb
stos
lret
cmp
push
xchg
push
mov
xchg
pop
xor
jle
arpl
or
push
scas
int
call
add
aas
ror
sub
in
cmp
or
mov
jp
or
loope
push
pop
xor
call
das
cmp
int3
mov
xchg
sbb
sub
mov
scas
add
adc
jb
mov
in
push
popa
push
sub
sub
inc
adc
lods
iret
jg
cmpsl
stos
pop
popa
decl
dec
pop
adc
or
es
sti
mov
inc
je
fisubrs
fstps
pop
daa
mov
inc
push
mov
pop
sub
add
and
push
adc
scas
popf
mov
fnstcw
mov
daa
add
jmp
xor
testl
fcomps
push
sbb
push
mov
mov
mov
push
sub
push
adc
ds
clc
mov
mov
call
sbb
push
mov
addl
int
jo
in
iret
sbb
push
not
mov
sti
xor
sti
cmp
mov
out
out
xchg
cs
nop
shr
xor
mov
popa
sbb
xor
adc
incl
in
xchg
fmull
jecxz
jae
sbb
icebp
xchg
mov
sub
pop
dec
and
mov
mov
adcb
jnp
mov
inc
cmpsb
test
arpl
xor
fmuls
mov
cmp
pop
mov
sub
fistps
into
lcall
out
adcl
add
add
add
add
call
in
dec
push
pop
lea
sub
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
add
mov
movl
movb
mov
lea
mov
mov
movzbl
push
pop
shl
push
pop
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
sub
movl
push
pop
add
mov
sub
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
push
pop
sar
cmpl
lea
mov
je
jmp
sub
sub
push
pop
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
push
pop
sar
lea
mov
jmp
sub
sub
push
pop
lea
shr
sub
mov
jmp
mov
push
pop
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
push
pop
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
push
pop
shr
mov
movzwl
imul
cmp
jae
push
pop
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
sub
cmpl
setg
add
lea
mov
jmp
push
pop
sub
sub
push
pop
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
push
pop
shr
mov
movzwl
imul
cmp
jae
mov
push
pop
sub
movl
push
pop
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
push
pop
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
sub
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
push
pop
shr
sub
mov
jmp
push
pop
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
push
pop
shr
mov
movzwl
imul
cmp
jae
push
pop
mov
sub
mov
sar
lea
mov
mov
jmp
push
pop
sub
sub
push
pop
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
push
pop
shr
mov
movzwl
imul
cmp
jae
push
pop
mov
sub
mov
sar
lea
mov
mov
jmp
push
pop
sub
sub
push
pop
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
push
pop
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
push
pop
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
push
pop
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
push
pop
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
push
pop
mov
jmp
sub
sub
push
pop
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
push
pop
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
push
pop
jmp
sub
sub
push
pop
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
push
pop
push
pop
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
push
pop
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
push
pop
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
sub
mov
mov
mov
mov
mov
sub
pop
pop
pop
pop
add
add
sub
lea
push
pop
push
cmp
jne
push
pop
sub
pop
push
pop
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
test
je
push
pop
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
