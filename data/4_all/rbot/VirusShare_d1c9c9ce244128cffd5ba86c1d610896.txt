push
add
inc
and
in
add
sahf
push
out
cli
inc
jnp
sub
sbb
addl
movsl
dec
xchg
sub
and
fwait
add
sub
movzwl
sti
loopne
adc
dec
addr16
adc
xor
out
ds
clc
sbb
or
xor
or
add
fcmovbe
in
addr16
sbb
add
es
push
push
add
inc
ret
jo
cwtl
inc
inc
xor
nop
fucomp
arpl
adc
add
adc
lret
rcrb
xchg
xor
add
push
pop
data16
dec
lock
in
ret
dec
sarb
cmp
test
nop
or
pop
aaa
jg
xor
pop
cwtl
jecxz
sti
bound
mov
andl
or
sti
out
sub
jecxz
in
call
mov
in
or
sti
xor
add
addr16
pop
push
push
jge
fstps
lahf
xor
and
mov
inc
xor
mov
pushf
xchg
inc
push
sub
inc
cmp
adc
ficomps
fcompl
ret
sbb
ret
rcrl
shlb
sub
xor
lds
adc
dec
adc
cmp
lret
leave
ds
dec
adc
or
into
sbb
int
adc
push
adc
add
icebp
inc
xor
xor
add
sub
hlt
test
push
add
add
ss
jmp
or
and
inc
inc
cld
inc
pop
jecxz
sub
inc
add
inc
push
loopne
or
inc
and
inc
push
in
push
in
inc
jmp
aas
ljmp
dec
fwait
dec
out
sti
xor
inc
in
sahf
or
lcall
xlat
in
or
inc
add
pop
dec
or
roll
and
dec
stos
out
test
xchg
push
add
push
sub
popa
out
sub
addr16
dec
adc
pop
cwtl
inc
add
xchg
jb
inc
cmc
clc
or
bound
push
fisttps
push
sub
popa
ss
lcall
cwtl
adc
sub
cmpsl
rcrl
add
fdivs
fistl
pop
xchg
incl
sahf
lahf
push
test
cltd
or
fisttpll
xchg
sbb
lcall
push
xor
mov
mov
cwtl
loopne
ja
andl
les
aad
in
fisubs
adc
add
sbb
nop
cmp
xor
cmpsb
push
add
mov
push
add
jg
or
sti
outsb
xchg
mov
aas
add
cwtl
push
cwtl
push
cltd
rorb
ja
rorb
jecxz
or
add
test
xor
mov
sbb
cld
lods
pop
movsb
shrb
mov
add
aam
stos
lahf
add
sub
ror
mov
mov
xor
movsb
idivl
sub
cmp
jno
and
and
sub
dec
xorb
es
and
lds
out
or
mov
sarb
mov
sbb
sub
mov
enter
scas
jbe
jnp
adc
or
jns
and
cmp
cmc
daa
shll
push
mov
push
js,pn
pop
mov
inc
lods
arpl
imul
sbb
pop
cmp
add
out
cmpb
dec
out
cmp
int
inc
adc
xchg
or
cmp
inc
aas
pushf
mov
mov
push
or
nop/reserved
adc
je
sbb
ds
adc
inc
in
movb
cmpb
out
adc
mov
xchg
das
js
mov
xchg
sbb
sbb
add
adc
sti
add
out
sbb
and
adc
lret
inc
sub
daa
adc
push
fs
bound
out
xor
push
inc
jge
iret
sbb
addr16
cmpl
and
lret
adc
inc
jae
aas
nop
adc
mov
and
rclb
push
dec
add
and
or
add
sub
sbb
push
imul
bound
pop
test
movnti
lock
clc
push
lcall
or
cmp
push
dec
test
mov
mov
mov
stos
or
lods
out
xlat
sub
adc
into
xchg
adc
mull
and
jmp
xlat
dec
or
cmp
mov
inc
pop
jae
repz
adc
add
les
test
mov
or
pusha
xchg
mov
xchg
add
pop
sbb
movsb
jp
mov
dec
or
andl
or
cwtl
mov
clc
dec
sbb
enter
in
push
adc
inc
jg
js
sbb
sbb
and
je
sub
xchg
adc
enter
orl
push
test
inc
cmp
fwait
or
xor
jmp
or
loope
mov
rclb
inc
push
sbb
mov
pushl
or
das
and
stos
inc
push
fwait
dec
lahf
andl
loop
nop
xor
fisttpl
adc
pop
nop
or
and
xchg
sbb
dec
or
daa
and
fildl
add
mov
and
add
xor
filds
bound
xchg
dec
std
cmpsl
dec
dec
into
and
push
into
mov
enter
movsb
xchg
and
test
pop
movsb
or
iret
aaa
insl
inc
or
or
xchg
pcmpeqb
dec
or
add
push
or
and
xor
decb
pop
cmp
and
push
push
push
cmp
es
invd
ret
adc
loop
ds
aam
movsb
push
xchg
out
mov
dec
imul
test
mov
mov
testl
xchg
fwait
mov
or
inc
aas
and
pushf
inc
and
out
outsl
dec
pop
inc
xchg
and
pop
or
sub
daa
adc
lret
inc
aaa
xor
xor
or
lods
pushf
push
daa
or
xchg
and
pushl
and
xchg
add
dec
sbb
nop
scas
fistpll
pop
inc
or
xchg
sub
imul
mov
dec
ret
or
movsb
sbb
sub
loopne
les
outsl
add
add
sbb
imul
sbb
add
add
dec
jnp
repnz
sbb
or
test
arpl
scas
or
test
xchg
and
nop
mov
fs
xor
movsb
or
xor
and
cmp
aaa
inc
bound
incl
mov
mov
adc
inc
dec
scas
ror
out
adc
imul
sti
les
cmp
xor
xor
mov
adc
lret
ja
fsubs
add
mov
xchg
mov
mov
pop
xchg
mov
bound
lret
dec
inc
xchg
xchg
or
je
add
xor
push
add
xorl
and
mov
lds
repz
inc
stos
arpl
inc
sbb
jnp
in
ret
and
les
lcall
sub
addr16
fistpll
sbb
divl
xor
add
loope
enter
sub
inc
xchg
mov
adc
pop
inc
arpl
icebp
or
inc
add
aas
or
mov
add
pop
xor
fildl
sbb
inc
lahf
and
jg
or
mov
shll
negl
xchg
add
sbb
dec
xorl
orb
adc
daa
push
adc
jno
adc
insb
or
ficoml
punpckldq
push
and
add
fldt
ret
inc
xchg
xchg
out
jge
iret
sbb
out
jecxz
das
push
or
in
or
test
pop
fwait
dec
pop
aaa
divb
daa
loop
inc
ret
or
lret
test
pop
loop
inc
jge
dec
ja
outsl
xchg
imul
push
das
and
pop
ja
dec
in
sub
nop
repz
cmpsl
and
mov
iret
push
and
loop
sbb
or
mov
out
add
pop
inc
lcall
mov
enter
bound
sbb
dec
jle
loope
jae
mov
mov
cmp
inc
and
jno
or
test
push
lcall
push
push
cmp
mov
inc
jmp
dec
and
dec
dec
push
dec
dec
rorb
add
inc
and
sub
repnz
add
in
lret
lret
add
sti
dec
pop
test
je
mov
push
nop
xor
xor
sub
loop
sbb
pop
test
mov
inc
mov
scas
mov
adc
loop
mov
xchg
mov
adc
mov
xor
adc
cmp
test
pop
sub
jae
shll
jno
or
test
fisttpl
xchg
adc
jecxz
ret
in
cmp
inc
jae
xlat
adc
lret
and
les
aas
adc
cmp
push
and
inc
dec
sahf
mov
sbb
or
cmp
jb
sbb
shll
sbbl
mov
and
lret
xor
xchg
rcll
and
dec
mov
andb
xor
fsub
lret
mov
nop
daa
xor
outsb
sbb
sbb
insb
mov
pop
push
push
xor
dec
xchg
shl
xor
lret
mov
jo
pop
mov
sbb
or
stos
mov
pop
sbb
add
sub
call
cmp
sbb
xchg
mov
cmp
jmp
insl
or
xor
enter
pop
cs
ret
pop
adc
dec
icebp
roll
imul
cmovne
stos
jp
nop
fildl
rcrb
jmp
push
adc
repnz
std
fwait
inc
adc
or
inc
push
inc
scas
push
jmp
ret
add
push
lcall
ds
mov
lock
nop
cli
and
xor
jge
add
jnp
or
inc
sub
in
or
push
push
out
pop
clc
pop
lea
mov
sti
in
dec
or
mov
test
add
add
in
or
inc
dec
bound
sbb
addr16
xchg
mov
cmpsb
jne
sub
orl
arpl
inc
adc
cwtl
push
out
cwtl
xchg
jnp
xlat
cmp
add
sub
pop
inc
enter
push
nop
rorb
sub
rcrl
pop
inc
or
cmp
out
dec
out
fwait
test
imul
stc
loopne
lods
fldl
push
or
or
sub
sahf
inc
out
repnz
shl
and
jne
sbbl
and
lock
push
in
inc
ret
push
in
jnp
cmp
enter
sbb
sub
pop
in
dec
clc
pop
and
and
push
ret
xchg
adc
xchg
icebp
mov
cli
add
fisttpl
jg
sti
adc
in
xchg
lea
inc
xchg
pop
push
test
sbb
out
insl
or
pop
jb
adc
movsb
sub
in
push
sbb
sub
fstl
pop
mov
movsl
cli
repnz
sbb
sub
ret
loop
dec
mov
sbb
or
ret
xor
push
repz
push
cmp
or
mov
lods
ja
and
lcall
lahf
push
or
sti
mov
in
cmp
sti
pusha
adc
in
mov
fisubl
pop
pop
dec
lcall
loop
cwtl
pusha
dec
push
shrb
and
stc
push
jnp
xchg
fwait
dec
jno
push
inc
inc
outsl
adc
in
ds
in
push
pop
in
sub
mov
out
xchg
pop
adc
sbb
sub
mov
gs
and
push
aam
repnz
out
xchg
out
adc
out
cltd
in
sbb
test
sbb
lahf
adc
pop
jmp
cmovo
aas
pop
lea
jnp
sti
push
test
call
mov
pusha
jl
xor
es
enter
pop
addl
adcl
and
mov
mov
push
xor
sbb
mov
in
inc
xchg
shll
test
or
sub
popa
into
mov
in
mov
inc
sti
push
test
sbb
pop
sarl
fisttpll
xchg
in
test
inc
pop
inc
pop
sub
clc
dec
xor
ljmp
push
lods
mov
xor
sub
inc
js,pt
leave
sub
or
sbb
test
or
pop
aam
popf
repz
mov
mov
inc
and
test
lcall
adc
aam
aaa
sbb
xor
inc
sub
mov
bswap
cmpsb
ljmp
push
movsb
test
inc
jl
mov
out
jnp
test
jmp
pushf
jp
xor
cmp
es
movsl
push
lods
dec
lcall
nop
mov
xor
enterw
xchg
pop
adcl
xchg
adc
arpl
dec
cwtl
jmp
loop
insb
lcall
add
or
xor
pop
or
rcrl
enter
adc
insb
xor
or
lcall
ljmp
xor
or
dec
enter
mov
xlat
scas
les
jg
sub
xchg
or
dec
pop
icebp
out
imul
push
inc
pop
dec
outsb
jnp
sbb
push
lahf
xor
aaa
lds
addl
je
fwait
pop
adc
xor
dec
dec
and
lret
loop
mov
adc
les
xor
push
pusha
sub
loop
push
fstpt
lds
daa
mov
mov
xchg
mov
mov
inc
dec
push
jecxz
and
cmp
xchg
push
or
cli
cltd
add
jb
inc
xor
pop
and
mov
dec
inc
lods
insl
adc
mov
and
lret
lret
jnp
add
jae
shll
icebp
push
sbb
rcl
pop
add
pop
adc
pop
call
andb
push
xlat
mov
es
inc
jne
mov
sub
lods
arpl
das
jnp
dec
sbb
mov
lods
pop
repnz
or
inc
sti
cmp
mov
mov
inc
stos
iret
push
inc
lcall
insl
cmp
aas
stos
inc
push
and
and
add
addr16
pop
or
jnp
sbb
xor
outsb
mov
adc
and
addr16
push
mov
xchg
mov
scas
and
xchg
test
add
cli
inc
nop
add
push
test
mov
cltd
sbb
pop
sbb
sbb
aam
jecxz
mov
push
or
sbb
dec
ficompl
dec
and
cmpsl
pop
pop
adcb
dec
push
jns
lret
jecxz
lds
loopne
xchg
sub
orl
adc
call
leave
and
adc
push
pop
mov
std
push
bound
push
pop
popa
mov
jecxz
xor
ja
adc
inc
mov
aam
jp
xor
bound
mov
in
outsl
pop
add
orb
stc
lret
jp
sub
dec
push
ret
test
pop
js
inc
out
xchg
or
and
push
mulb
sbb
data16
mov
mov
sbb
jnp
out
jo
sti
mov
mov
pop
ret
sti
cmp
cli
xlat
fcomps
pop
pop
call
dec
sub
add
xchg
mov
out
inc
psubw
ds
sbb
test
adc
shlb
sub
movsb
xlat
xchg
out
or
fmuls
cmpl
sbb
xchg
lcall
jno
aas
or
xchg
dec
dec
jns
cmp
jl
cmp
push
and
cwtl
sahf
inc
pop
jp
addr16
and
sbb
xchg
sub
sub
jecxz
adc
in
xor
das
loop
jg
and
and
sti
push
mov
mov
sbb
aaa
nop
adcb
sbb
test
nop
jg
gs
adc
out
cmp
jbe
push
dec
inc
dec
rorl
pop
cmp
adc
out
dec
stos
pop
or
jne
stos
ficoml
mov
test
icebp
sbb
fwait
or
in
pop
es
adc
pop
cmp
inc
add
dec
ret
pop
imul
shl
push
jmp
push
push
or
hlt
dec
mov
ja
cmp
sbb
das
xchg
cld
push
adc
dec
es
leave
daa
push
or
sbb
jnp
fwait
cltd
dec
dec
scas
sub
in
mov
cwtl
pop
in
sub
adc
inc
dec
jmp
arpl
dec
sub
dec
pop
sbb
jmp
out
out
in
or
add
out
inc
in
push
aaa
adc
repz
lret
mov
pop
add
sti
pop
inc
je
aas
pop
adc
sub
insl
push
addr16
outsb
cmp
fstl
and
mov
cli
xchg
rcl
cwtl
cwtl
or
loopne
mov
les
dec
loope
test
js
mov
in
adc
out
aam
rcrl
out
arpl
xor
inc
shl
mov
sti
adc
cmpsb
xor
test
jnp
jecxz
sub
sbb
xchg
lret
cli
cmp
sub
xor
push
adc
mov
xlat
push
inc
adc
xchg
mov
adc
and
inc
adc
xchg
ss
sub
sub
and
mov
push
xchg
jnp
cmp
inc
sti
xor
adc
dec
dec
pop
cmp
or
cwtl
push
test
orl
jg
and
adc
adc
sub
and
and
xchg
movl
adc
test
sub
push
fwait
xchg
push
or
lods
arpl
adc
xor
sbb
sahf
dec
lock
adc
or
sub
adc
and
sub
out
xchg
sub
bound
out
adc
push
scas
shlb
loopne
dec
sub
std
lahf
mov
mov
cmpsb
mov
jnp
mov
sbbb
add
or
adc
or
shlb
xorb
cld
int3
bound
or
cli
push
aaa
cwtl
stos
inc
and
or
sub
mov
stos
adc
shll
scas
inc
push
cmpsb
orb
adc
enter
push
jnp
loop
push
sub
or
cli
mov
nop
roll
sub
xchg
xor
mov
mov
xlat
mov
adc
jno
dec
add
xor
xchg
inc
xchg
dec
jge
push
les
ret
das
shll
jbe
pop
jmp
xchg
out
ret
adc
fstpl
aam
dec
nop
aas
subl
xchg
lret
leave
add
addr16
adc
mov
popl
pop
jnp
lret
scas
dec
sub
adc
lret
jecxz
int
mov
jl
aaa
test
xor
cmpsb
aas
inc
movsl
lcall
sub
and
push
aam
lcall
xor
enter
sbb
clc
mov
pop
fsubl
dec
loop
jecxz
sbb
das
and
xchg
sub
test
add
lea
pop
addr16
push
pop
insl
adc
adc
imul
inc
pop
xchg
adc
jl
pop
sbb
mov
xor
jmp
jns
xchg
or
hlt
dec
das
push
test
sub
sub
xchg
mov
xchg
aaa
adc
sub
addr16
scas
xchg
mov
push
addr16
add
aad
cmpsb
loope
pop
or
ss
push
sahf
pop
aas
cwtl
jmp
push
adc
cld
insl
nop
add
test
cmp
and
jnp
clc
xchg
mov
jne
add
mov
xor
and
cli
dec
inc
sub
cmp
mov
adc
enter
add
and
xchg
addr16
mov
sub
imulb
sub
imul
mov
aam
xlat
sbb
pop
bound
shrl
cmp
test
movsb
mov
inc
clc
adc
es
fisubrl
jnp
or
jge
cs
das
imul
daa
leave
cwtl
inc
sub
dec
cli
mov
subl
mov
cmp
and
inc
mov
cmp
aam
mov
or
sbb
and
loopne
or
and
enter
into
leave
pop
sub
pop
dec
xor
out
add
sahf
xchg
es
jg
sbb
adc
push
outsl
cmp
push
sbb
inc
jl
pusha
inc
test
pop
inc
fwait
lds
inc
pusha
sub
mov
sub
test
pushf
sbb
test
and
sbb
adc
push
cwtl
mov
leave
pop
popf
stos
inc
adc
inc
cmp
lock
push
or
cmp
shr
push
and
mov
push
add
cli
xchg
pop
imul
sbb
mov
out
subb
arpl
or
sub
and
fs
xorl
pop
sahf
xlat
push
lcall
pop
in
outsb
lea
pushf
fs
or
jae
sub
insb
es
lahf
sbb
in
cmp
shl
and
lcall
das
shl
xchg
pop
adc
xor
iret
dec
push
loopne
xchg
sub
mov
sub
sbb
das
or
sti
push
cli
pop
push
bound
and
sub
mov
jg
rolb
inc
cmp
jp,pn
aaa
mov
bound
and
cwtl
outsb
and
jp
and
pop
adc
pushf
and
aad
inc
mov
sub
sahf
xchg
and
mov
sahf
adc
mov
xchg
inc
int3
iret
les
and
into
xchg
loopne
cmp
or
and
sti
sbb
jb
push
out
pop
inc
lea
in
add
cwtl
adc
push
inc
cmp
pop
clc
outsl
cmp
lret
inc
jns
sbb
sti
enter
or
fwait
dec
stc
xor
or
fdivr
pop
nop
mov
lds
sahf
push
adc
xchg
bnd
lods
adc
cwtl
adc
orl
jno
or
test
incl
or
or
lahf
mov
jb
or
sbb
fldl
in
and
xchg
sub
and
pushl
jl
jnp
adc
jno
scas
out
mov
xchg
sti
cmp
cmpsb
adc
test
cvtpi2ps
adc
push
dec
or
mov
cmp
ficoml
gs
sub
push
jns
shlb
stc
or
sbb
jo
mov
scas
adc
sub
or
sub
jns
dec
sub
das
cwtl
and
iret
and
lods
adc
std
fwait
and
jae
push
adcb
movsb
and
push
adc
inc
cmp
dec
rolb
and
dec
mov
adc
and
and
mov
repnz
cmp
pop
xchg
js
rolb
pop
sub
fiadds
lret
bound
fxch
xchg
xor
into
push
ljmp
and
mov
sbb
sub
and
lea
nop
pop
rclb
lcall
inc
addr16
outsb
jo
js
and
sbb
scas
adc
adc
aaa
or
ficoms
aas
or
inc
fwait
and
or
orl
test
es
out
or
hlt
or
test
enter
and
mov
fs
daa
enter
ljmp
mov
inc
dec
sub
xchg
and
daa
xor
adc
or
or
xrelease
pop
cli
push
test
and
adc
daa
mov
cmp
cmpsl
movsb
adc
jmp
scas
and
cld
out
mov
es
inc
fadds
adc
inc
add
dec
mov
sbb
decb
mov
lods
dec
daa
test
mov
ret
es
and
adc
or
in
cli
jl
xor
sub
or
or
hlt
sub
mov
or
repz
pop
inc
cmpsl
add
in
and
sbb
push
adc
adc
loopne
inc
repz
mov
inc
sub
test
adc
std
and
xor
push
sub
adc
nop
and
test
push
pop
fisttpll
test
enter
and
push
inc
popf
and
push
mov
sbb
jecxz
and
enter
and
aad
ljmp
enter
and
test
enter
and
inc
or
mov
sbb
scas
add
and
inc
mov
push
mov
shlb
stos
mov
stc
push
fst
xchg
cmovae
orb
and
or
in
scas
ret
psubd
fists
adc
mov
inc
movsb
jb
sub
jmp
mov
nop
adc
push
cld
and
pop
and
and
sbb
pop
lret
test
enter
and
push
inc
test
movups
mov
sbb
or
push
inc
and
cmp
jmp
test
or
test
ret
sub
xchg
and
adc
mov
subb
inc
inc
and
xchg
adc
je
nop
insb
enter
sub
xchg
or
test
cmp
xchg
jo
mov
sbb
in
cmp
shll
inc
lcall
xor
pop
and
xor
jae
or
adc
mov
cmp
xchg
mov
dec
and
psubq
adc
into
push
mov
xchg
leave
jl
icebp
or
aaa
xchg
outsl
mov
sbb
cwtl
xchg
es
xchg
aam
lods
adc
mov
inc
inc
sub
loope
les
out
lods
jmp
icebp
addr16
sbb
add
push
mull
inc
shl
addl
addr16
jns
inc
sbb
cld
dec
rcrb
or
add
pop
jb
ret
cwtl
shll
cmp
adc
push
pop
rorl
sub
inc
xor
loopne
cmp
ljmp
cli
pop
rcr
xchg
jecxz
imul
mov
pop
nop
pop
mov
rcrl
inc
or
sub
xor
aaa
or
jns
aas
lahf
popa
fs
xor
adc
test
adc
sub
inc
adc
push
adc
mov
adc
test
andl
push
and
andb
adc
outsl
mov
dec
outsb
loop
jecxz
xor
xchg
xor
cmp
js
addr16
mov
jns
bound
outsl
sbb
xor
pop
sbb
sub
or
mov
in
aas
bound
cli
mov
data16
insb
cmpsl
jecxz
sbb
dec
filds
push
lret
test
sub
addr16
and
or
and
mov
mov
xor
into
pop
nop
cmp
inc
xor
enter
daa
rclb
rorl
loop
add
pop
adc
xchg
dec
lret
cld
adcb
out
icebp
pop
lret
aaa
imul
jnp
loop
das
sub
dec
ss
cmc
inc
sbb
sub
push
mull
cli
and
call
xor
iret
or
ficoms
lods
pop
xchg
mov
xor
sub
mov
test
loop
add
pop
and
xchg
aas
dec
inc
inc
mov
add
add
inc
or
flds
sbb
or
in
sub
and
xor
push
pop
jb
or
stos
andl
mov
outsb
sbb
adc
cs
inc
cmp
xchg
sub
clc
loope
flds
cli
pop
adc
or
rcr
lods
cld
adc
mov
ja
xchg
xchg
adc
and
xchg
adcl
xor
cmpsb
sub
sub
in
jno
lret
int3
and
cmp
in
and
repz
or
mov
js
das
out
push
ss
sahf
fwait
pop
sub
in
clc
dec
lds
dec
jmp
outsb
push
ds
dec
adc
inc
in
add
jne
mov
push
jbe
test
xchg
daa
cld
fs
push
sub
jne
call
mov
add
xchg
sub
mov
inc
fwait
dec
cmp
xor
add
dec
sbb
es
push
cmp
push
sbb
sub
fdiv
nop
mov
mov
push
pop
mov
adcb
pushf
aaa
pusha
das
jnp
in
and
loope
xchg
addr16
into
push
sti
jmp
adc
or
loop
jle
push
out
addb
fwait
dec
sbb
xchg
fwait
and
loop
and
aad
and
add
sbb
movups
mov
sahf
pop
jge,pt
data16
lret
pop
icebp
loope
inc
mov
inc
lods
jno
outsl
jle
mov
add
popa
sbb
cmp
mov
mov
cli
fdivs
stos
mull
es
mov
lret
xor
cwtl
dec
scas
xor
call
divb
lods
negl
pop
nop
clc
push
mov
lcall
adc
stos
cmp
xchg
adc
inc
cmpl
xor
outsl
jmp
mov
jp,pt
inc
sbb
pop
fs
cmp
cmp
push
fnsetpm(287
sbbl
push
mov
and
xchg
mov
xor
les
aaa
loope
lcall
inc
xor
jmp
outsb
out
push
xor
and
test
scas
pop
scas
enter
mov
lret
imul
mov
and
das
xchg
inc
and
mov
shrb
jno
iret
test
jl
xchg
or
cmp
jne
arpl
addr16
les
pop
mov
sbbb
data16
pop
jae
cmpb
test
adc
xrelease
fs
enter
rcrl
repnz
std
push
and
xor
lret
xor
nop
pop
dec
mov
insb
adc
mov
mov
loopne
movsb
or
inc
sbb
inc
push
adc
or
inc
icebp
test
loopne
push
cmp
inc
cmp
sbb
clc
adc
mov
sub
lods
pop
xor
cli
sub
xlat
daa
mov
xor
dec
addr16
ret
and
mov
adc
arpl
cmpsl
xchg
sbb
repz
lcall
sbb
inc
push
test
sub
popf
leave
aam
pop
sub
dec
out
sbb
sbb
sbb
mov
leave
addr16
cli
jge
shlb
inc
ds
ja
les
xchg
nop
sbb
rclb
nop
test
lods
ret
push
outsb
adc
adc
and
mov
ljmp
les
or
pusha
sbb
loopne
inc
sbb
jae
and
and
or
fnstenv
mov
pop
test
sub
dec
push
pop
pop
scas
dec
xor
insb
or
inc
xlat
sbb
sub
inc
mov
jmp
pop
scas
rclb
repz
xchg
sub
or
jnp
vshufps
push
mov
ja
sub
fdivrl
push
lods
push
and
xor
jmp
xchg
xchg
call
cmpsb
bswap
mov
inc
xor
mov
insb
mov
xor
cmp
test
shll
insl
cmp
lods
and
aam
jne
cmp
jp
ret
xchg
repz
stos
clc
cmpsl
sub
pop
jecxz
aam
das
enter
pop
mov
lea
or
cmpsb
sub
les
mov
sbb
jecxz
dec
enter
sub
push
mov
ss
mov
mov
inc
adc
in
push
push
cltd
adc
or
jmp
insl
and
dec
or
jge
pop
loop
ljmp
loope
aad
sbb
and
icebp
xchg
outsl
ljmp
les
sbb
popa
rcl
aad
jns
cli
cltd
and
mov
movsb
inc
or
sbb
jnp
movsl
cwtl
xchg
inc
xor
push
dec
push
sub
psubsw
aam
or
dec
pop
and
or
sbb
inc
cmp
sub
les
jmp
or
push
js
jmp
test
in
or
inc
cmp
xchg
das
psllq
and
nop
pop
enter
jbe
cmp
cltd
lret
outsl
daa
es
inc
ds
fcoml
jae
ds
stc
inc
lods
add
cli
aam
mov
jg
and
icebp
add
jl
mov
adc
dec
cmpsb
push
add
dec
cli
nop
and
pop
push
mov
sarl
sub
mov
imul
cli
jb
adc
enter
and
xor
adc
psllw
jb
sub
push
notl
dec
sub
inc
push
dec
cwtl
push
cmp
inc
inc
stc
adc
stc
adc
jg
bound
shrl
shr
inc
push
dec
pop
psrlw
push
mov
imul
inc
aaa
sahf
and
es
leave
sbb
and
psubq
push
or
fs
pushf
daa
xchg
sbb
and
in
movl
or
andl
and
aaa
or
mov
xor
and
jmp
dec
adc
adc
push
xchg
and
and
cs
imul
or
mov
sbb
push
mov
sahf
add
push
std
inc
xor
inc
sub
cmp
or
and
or
loop
push
cs
cld
out
clc
inc
negl
and
sbb
jno
cmp
adc
aam
push
jo
push
dec
xor
dec
sub
outsl
es
sub
inc
xor
adc
daa
add
adc
cld
and
cmp
jmp
ljmp
xchg
les
pminsw
cwtl
outsb
push
mov
cwtl
minps
dec
push
xchg
dec
aam
push
sub
xchg
out
inc
mov
lret
push
fistpll
into
or
ret
addr16
mov
and
xchg
cwtl
dec
jmp
adc
icebp
clc
mov
push
mov
inc
xchg
call
inc
or
nop
adc
aaa
test
mov
inc
and
ret
adc
or
cmp
push
sbb
ja
out
push
loop
adc
repz
pop
mov
add
sub
addr16
cmpsl
test
mov
lea
push
xchg
test
jle
bsr
je
and
xor
jnp
mov
int3
inc
pop
inc
pop
xor
ret
sbb
xchg
jmp
inc
cwtl
xchg
push
jp
clc
pop
aaa
jnp
aaa
push
or
or
mov
nop
and
xchg
ret
adc
xchg
aas
test
mov
adc
or
inc
movsl
enter
daa
and
cmp
loope
rcrl
pop
xchg
mov
aam
or
xchg
and
mov
ss
jg
lea
sbb
jae
imul
xchg
adc
sub
xor
jb
inc
xor
add
adc
or
cmc
mov
mov
xor
push
inc
and
ret
mov
mov
int3
inc
add
mov
jno
sub
push
lret
or
mov
in
mov
sub
xchg
xchg
add
shll
aas
xchg
and
or
add
cmpb
sbb
mov
mov
or
repnz
pop
push
jnp
stos
and
scas
mov
scas
nop
dec
ljmp
nop
sti
lret
pop
xchg
or
lock
inc
or
xchg
dec
ja
jecxz
nop
xchg
out
fs
cmp
scas
fwait
push
cwtl
pusha
sbb
and
mov
pop
add
mov
jge
setb
lods
and
sti
push
sbb
loop
and
or
pop
mov
mov
mov
dec
xor
adc
or
mov
mov
cmp
out
rorl
fisttps
jno
xchg
jl
pop
test
divl
or
fs
xlat
cs
cmp
inc
les
inc
lret
inc
mov
mov
mov
mov
test
sbb
ja
and
push
or
inc
les
inc
enter
or
notl
lods
jae
aam
dec
ret
pop
lahf
xlat
popa
push
imul
js
mov
pop
pop
xchg
push
and
mov
push
lea
or
jns
or
bound
test
test
ss
fs
mov
sub
dec
leave
mov
call
pop
cmp
add
movsb
cmp
push
add
lock
adc
xchg
cmp
cs
call
add
cwtl
jns
or
jmp
and
loope
mov
lahf
shr
mov
jns
push
fidivrs
sub
push
push
push
out
out
mov
adc
sbb
sbbb
out
out
cli
cmp
inc
aas
and
adc
push
inc
push
push
and
dec
out
adc
add
lret
nop
add
shll
lcall
les
stos
pop
scas
lret
xchg
outsl
cmp
mov
push
iret
adc
repnz
sbb
jmp
inc
out
scas
pop
add
loop
leave
cmp
lods
adc
sbb
cmpsl
sbb
ret
and
push
push
inc
adc
inc
ds
out
adc
pushw
mov
inc
mov
aam
in
outsl
stos
daa
scas
adc
repnz
sbb
aam
popa
stc
push
add
push
arpl
mov
adc
cli
adc
push
and
adc
mov
aaa
or
test
enter
and
adc
or
cmove
xor
js
pop
xor
aas
or
nop
sub
and
gs
xor
sub
aas
mov
sbb
or
pop
and
push
inc
lret
or
sbb
test
enter
and
push
inc
inc
and
mov
or
jg
inc
clc
xor
arpl
jl
and
mov
pop
or
test
enter
mov
pop
loop
test
and
outsb
xor
jnp
xchg
inc
and
adc
mov
aam
adc
or
sub
xchg
and
adc
scas
mov
fs
test
and
jno
fists
pop
or
adc
add
fistl
sbb
mov
scas
sbb
out
call
call
wbinvd
sbb
negb
andl
pop
popa
dec
cmpsl
dec
addl
mov
in
xchg
push
jb
ds
push
jnp
movl
dec
mov
mov
cltd
and
push
jns
nop
fimull
xchg
push
add
call
push
imul
xchg
mov
push
test
push
sti
adc
jg
cli
jle
mov
arpl
sub
add
sti
int3
mov
sbb
test
fisttps
sti
movsb
fs
and
cmp
imul
loopne
inc
bound
cmpsb
adc
notb
imul
push
mov
daa
and
outsb
in
imul
test
enter
mov
and
adc
xchg
jmp
mov
and
enter
loop
movsb
adc
add
mov
mov
adc
sti
test
inc
pop
or
adc
fisttps
test
inc
scas
mov
mov
mov
mulb
mov
test
dec
in
adc
sub
das
jmp
js
and
inc
xor
daa
clc
push
and
ficoms
out
adc
and
rorl
pusha
or
fldl
dec
call
sbb
or
xchg
mov
stc
sbb
adc
sub
mov
and
adc
cmpsl
mov
inc
scas
and
ja
inc
jae
out
add
mov
cmp
or
test
or
mov
and
out
xor
or
inc
sbb
lds
sti
sbb
test
enter
and
inc
out
subb
jmp
imul
jo,pn
xchg
push
enter
sub
loope
pop
test
enter
and
adc
mov
sbbl
and
adc
iret
add
aaa
or
test
shll
test
enter
and
inc
push
and
inc
jb
adc
adc
sbb
sub
mov
dec
aam
inc
pop
push
xchg
sub
xor
pop
inc
inc
daa
clc
pop
mov
dec
test
jmp
inc
daa
pop
xor
repnz
fldcw
inc
sbb
imul
mov
sbb
outsl
test
enter
and
adc
sbb
mov
nop
xor
inc
pop
mov
inc
adc
pop
mov
push
in
daa
mov
stos
or
inc
push
mov
adc
cs
adc
inc
adc
push
inc
fcompl
mov
loop
adc
pop
jnp
mov
jmp
cmpsl
aaa
dec
mov
adc
incl
lods
sub
xor
aas
cld
adc
jmp
imul
xchg
jno
mov
das
mov
jne
jne
push
sets
jge
mov
sub
stos
jge
and
fs
pushf
and
gs
inc
mov
in
mov
sahf
test
jns
xchg
jnp
pushf
lods
stos
xchg
mov
pop
iret
incb
push
jl,pn
dec
cmpsb
dec
sbbl
mov
jnp
pop
adc
adc
mov
mov
cwtl
idivb
lods
xor
xchg
shl
aad
std
or
movsl
or
in
bound
jne
rolb
xor
add
imul
and
and
pushl
mov
and
adc
adc
mov
iret
data16
add
adc
pop
stc
xchg
ja
test
cwtl
std
lret
pop
xchg
xchg
xchg
inc
jl
sub
pop
inc
sti
xchg
ds
sbb
bnd
and
mov
clc
jmp
or
push
cli
jo
cmp
test
or
bound
orl
pop
mov
into
inc
incb
out
andb
loop
push
xorb
fistps
xchg
xchg
xchg
int3
fs
inc
aas
lods
sti
add
in
and
mov
jle
cld
loopne
shrl
out
adc
call
pop
inc
mov
out
aam
fwait
xor
adc
xor
jl
mov
loopne
daa
ret
mov
dec
or
cld
mov
and
sub
pop
subb
outsl
sbb
or
xchg
jp
dec
mov
sbb
sti
and
in
std
mov
xor
int
cmp
aas
stc
push
cli
test
lcall
hlt
dec
movsb
or
das
pop
dec
sub
gs
or
adc
jle
inc
bound
mov
push
ficomps
lods
inc
or
popf
in
nop
pop
popf
in
xchg
and
sub
out
and
push
adc
scas
pusha
jb
lcall
sub
test
pop
add
imul
sbb
aaa
xchg
or
icebp
sbb
pop
add
cmpsb
xor
movsl
adc
add
adc
out
adc
cmp
cld
adc
notl
push
sbb
in
jae
jp
dec
mov
pop
and
inc
ds
fnsave
imul
jmp
sbb
mov
adc
in
sti
push
xor
es
call
lock
jmp
jb
or
sbb
adc
int3
cld
iret
inc
jnp
jge
xor
fucomi
sbb
fists
push
test
out
push
mov
mov
jmp
adc
lods
stc
adc
pop
test
clc
iret
cmpsl
rol
cli
subb
adc
movsb
mov
inc
jmp
pop
push
inc
sbb
xor
cmp
shrl
and
and
cmc
sub
cmpsb
push
imul
push
insl
scas
cmp
pop
sbb
xor
pop
push
pop
xchg
dec
and
call
inc
xchg
fwait
add
aaa
or
jmp
and
adc
sub
xor
lret
sbb
mov
sbb
or
sbbl
dec
ret
sub
pop
lcall
lds
mov
jbe
fdivp
jmp
adc
ss
out
push
sahf
push
and
andl
and
pop
hlt
inc
mov
push
jae
pop
inc
inc
or
das
inc
or
outsb
inc
cs
push
push
sti
sbb
adc
test
dec
cmp
rorb
loopne
jmp
mov
loopne
stos
mov
cmp
or
add
ds
jo
and
inc
das
or
cli
sub
jmp
sbb
cwtl
inc
or
adc
push
test
sbb
dec
cmc
hlt
push
or
pop
xchg
adc
adc
pop
adc
lea
inc
shrl
add
rorb
adc
add
aaa
jmp
and
adc
dec
in
popa
leave
inc
jbe
arpl
in
pushf
and
adc
scas
xor
mov
and
and
and
adc
fbld
scas
nop
ret
enter
mov
les
pop
and
lods
xlat
test
jmp
cs
mov
shr
outsb
sub
or
out
jl
pop
addr16
sub
inc
push
das
mov
mov
and
out
sbb
ljmp
cmc
in
or
pop
add
jne
xor
xchg
xchg
mov
and
out
data16
or
inc
addr16
sti
imul
sbb
shrb
aas
int3
lcall
mov
sbb
xchg
sti
and
fstpt
lds
inc
push
loopne
leave
inc
cmp
add
cmp
mov
inc
mov
mov
pop
sub
pushf
dec
and
lcall
inc
clc
clc
iret
xchg
push
out
rcll
adc
jns
jmp
sbb
push
loop
test
jmp
cmpsl
push
dec
mov
divb
add
aam
adc
int3
incb
pop
imul
push
push
pop
inc
loope
inc
and
and
mov
loope
scas
sbb
or
loope
and
and
inc
psraw
add
jnp
pushf
xchg
xor
mov
jnp
pop
outsl
mov
pop
cli
sbb
mov
test
jle
rcrl
xchg
enter
dec
ljmp
mov
adc
and
jbe
sbb
push
xchg
and
loope
test
sub
data16
mov
pushf
outsl
inc
sti
mov
data16
jae
mov
xchg
jno
mov
call
je
inc
mov
mov
rorl
imul
mov
or
mov
sti
insb
jg
mov
lods
adc
es
mov
xor
pop
in
test
jmp
push
nop
or
xor
aaa
imul
in
and
rcrb
mulb
push
insb
adc
into
shrl
dec
mov
dec
addr16
out
insl
bound
adc
mov
jns
sahf
push
loop
xor
mov
loop
pop
xor
mov
pop
xchg
sbb
sti
jmp
sbb
hlt
cmp
adc
lds
push
fimull
or
push
in
and
in
loop
aam
and
dec
jp
mov
dec
push
inc
mov
test
bound
push
cli
ds
sub
lret
test
les
jo
sbb
jecxz
xor
dec
repz
test
mov
repnz
pop
pop
out
repz
push
push
lds
bound
cmp
popf
int3
push
sbb
and
push
adc
jnp
adc
bound
push
xchg
fldcw
call
and
xchg
orb
cwtl
sbb
xchg
jb
and
lret
cli
pop
les
flds
shrl
nop
nop
enter
jb
push
inc
xor
dec
mov
xorb
cwtl
adc
add
mov
lcall
subl
cmp
leave
sbb
scas
lods
cmp
addr16
ret
inc
arpl
xor
and
lret
sbb
lods
mov
jecxz
pop
pop
loopne
dec
dec
test
addl
popf
imul
cmp
aas
mov
inc
jns
push
cmp
xchg
push
mov
mov
das
inc
arpl
push
aas
cli
pusha
jmp
nop
or
mov
inc
jb
test
loope
inc
and
shlb
inc
or
rclb
mov
adc
test
jl
out
cmpb
cmp
sbb
adc
mov
pop
sbb
ja
std
pop
movsl
dec
mov
pop
repnz
addr16
pop
inc
or
cli
cmp
sub
jno
add
sti
mov
cwtl
cmpxchg
inc
data16
mov
push
lock
sub
push
clc
mov
sbb
and
pop
outsl
test
jle
cli
mov
jb
lea
push
sbb
bound
mov
test
xor
pop
mov
ja
aad
jae
sbb
jo
jg
mov
daa
dec
stc
sbb
pushf
xchg
roll
loop
addb
mov
stos
add
mov
into
adc
add
sahf
push
fsts
jb
repnz
ja
cli
in
ret
push
test
push
cmpsl
sub
in
loop
or
adc
mov
jo
xchg
jo
sti
outsb
lret
cmpsl
scas
sub
cli
pushf
cmpsb
sbb
daa
pop
sbb
aaa
cli
pop
pop
es
hlt
into
in
mov
sub
cs
enter
out
jecxz
stos
cmp
xor
nop
pop
outsb
leave
xor
push
pop
ret
ret
lods
push
cmp
inc
or
clc
fs
inc
pop
dec
adc
insb
ret
int
fs
push
ss
loope
push
jno
sub
pushf
lea
jnp
dec
jg
push
andl
push
lret
push
arpl
cli
sbb
mov
mov
or
sbb
xor
stos
cli
das
call
mov
adc
sti
mov
out
in
cmp
call
adc
mov
push
sub
sub
ror
ret
adc
hlt
mov
mov
cli
loopne
inc
sbb
pop
mov
jmp
sub
jae
mov
or
jne
push
or
jns
fdivrs
lahf
pop
add
cmp
sbb
outsb
ss
pop
ss
jp
inc
mov
push
mov
sbb
sub
ret
push
in
data16
bound
in
jns
cwtl
cmpsb
psubq
xchg
decl
shr
dec
hlt
fldl
push
or
cmp
push
push
push
rorl
jnp
sbb
imul
popa
cmp
cli
fdivrp
xchg
outsl
pop
or
rcrb
sbb
lods
sub
cwtl
jne
cmc
sub
test
adc
je
dec
cli
sub
add
test
dec
sbb
loopne
sbb
es
cltd
xor
pop
dec
jmp
inc
sti
out
pop
fistl
pop
pop
movsl
cmpsb
and
jb
xchg
es
add
std
lahf
push
or
int3
sub
mov
jae
inc
mov
pop
lcall
dec
and
mov
stc
mov
adc
aas
fldcw
pop
insl
dec
adc
sbb
and
cmpsb
adc
cli
les
testb
add
fldcw
and
aad
fcompl
pop
in
pop
jnp
cltd
mov
jle
ret
pop
xor
aas
mov
jle
adc
mov
je
lahf
pop
sahf
add
popa
pushf
cli
jg
fildl
xchg
adc
or
std
sub
pop
inc
adc
dec
pop
test
jge
sub
sbb
mov
das
imul
xchg
and
scas
inc
cli
pop
in
or
mov
hlt
xchg
je
ss
and
sub
push
push
or
pop
lock
iret
inc
jne
div
mov
int3
cmpsb
adc
sar
and
inc
lcall
mov
dec
xor
clc
mov
dec
xlat
lods
inc
and
into
insb
lahf
fnstenv
mov
inc
adc
outsl
fwait
mov
adc
adc
mov
js
or
adc
jno
movsl
call
mov
xor
push
sbb
movsl
sbb
sti
dec
xchg
aaa
sahf
jecxz
fbld
outsl
inc
sbb
push
mov
mov
mov
adc
stos
sub
pop
jnp
pop
xchg
loope
fwait
mov
inc
movsl
push
into
dec
adc
dec
fsubp
sarb
roll
dec
push
dec
xor
rcrb
fwait
aad
and
lds
popa
int3
insb
pop
pop
inc
sbb
and
clc
mov
and
sub
data16
mov
dec
adc
xchg
pop
xchg
std
out
mov
into
adc
div
pop
mov
cmp
movsb
cmp
call
adc
test
sbb
outsb
xlat
mov
ret
mov
adc
lods
pop
ficoms
adc
and
cltd
adc
adc
push
fwait
mov
inc
inc
mov
pop
pop
in
mov
pop
aam
sbb
cltd
jnp
bound
jns
or
icebp
pop
jno
jo
sub
aas
xorl
xor
jns
mov
dec
mov
pop
pop
popa
pop
push
sub
outsl
leave
inc
pusha
rolb
pop
jge
dec
popa
out
cmp
cwtl
dec
xor
or
in
mov
xor
sti
pop
or
jb
add
or
sub
outsl
stc
in
aaa
loopne
dec
das
cwtl
sar
scas
out
fsubs
sub
fwait
adc
sub
or
mov
das
and
add
sbb
adc
pop
dec
adc
test
aas
push
mov
adc
jno
and
sti
adc
daa
test
pop
and
dec
sub
sub
push
das
push
or
cmp
push
das
test
aaa
adc
mov
adc
xor
subl
cmc
fwait
push
or
push
mov
cwtl
cli
mov
inc
mov
dec
xor
inc
dec
and
jae
pop
jno
or
mov
or
test
push
dec
arpl
les
and
xchg
jnp
ja
imul
loope
repz
sbb
std
test
pop
xchg
or
bound
repz
and
jecxz
or
xchg
adc
sub
xor
jmp
xchg
xchg
mov
outsb
push
cmp
xchg
xchg
dec
sti
mov
add
jne
add
ja
push
sahf
pop
sub
mov
adc
sbb
jnp
es
sbb
pop
xchg
xor
in
push
jns
out
cli
push
push
test
cmp
rolb
xchg
fcmovne
fsubrs
sti
mov
fdivs
lods
cmp
pop
call
sub
mov
cmp
xor
dec
in
ja
and
jnp
jg
pop
repz
xchg
test
pushf
enter
idivl
or
ss
xor
adc
push
push
int
icebp
mov
popa
cmpsl
mov
add
dec
gs
test
nop
dec
xchg
pop
mov
fnsave
stos
mov
pop
in
es
mov
push
loope
mov
lret
dec
mov
sbb
lock
add
or
dec
sbb
lret
das
popa
pop
aam
add
sahf
pop
lods
jns
sbb
xchg
out
or
les
inc
adc
or
out
push
or
addr16
aaa
sbb
mov
insb
xlat
rclb
mov
stc
adc
mov
imul
imul
add
gs
cs
fiaddl
insb
xor
jnp
pop
fsubrp
inc
dec
sbb
sahf
push
add
add
push
adc
outsb
push
or
data16
cmp
aam
jmp
xor
cwtl
adc
sti
andl
sbb
leave
les
mov
or
push
xlat
push
pop
adc
adc
cwtl
mov
cmp
xlat
jecxz
add
push
es
and
popa
xchg
dec
inc
sti
aas
xor
push
sbb
sub
bound
lcallw
mov
pop
mov
inc
fs
sub
inc
int3
xor
adc
cmp
mov
push
rcrb
ja
loopne
mov
sub
lods
sub
aaa
lock
and
dec
sbbl
outsb
stos
mov
fsts
push
adc
and
ljmp
sbb
sbb
mov
data16
sub
xor
lds
cwtl
rcl
rcll
dec
pop
ss
adc
xchg
dec
shll
sti
mov
push
mov
cmpsl
js
cli
mov
adc
xchg
add
xchg
shll
pop
sbb
and
xchg
sbb
push
or
sarb
push
or
fldenv
fcomps
or
jnp
mov
fwait
jmp
loop
or
insl
cmp
pushf
rolb
push
pop
jne
aad
and
enter
add
add
push
pop
xor
inc
pop
sbb
sbb
fcomps
test
popa
loope
mov
sbb
add
pop
test
push
imul
clc
pop
and
sub
in
adc
sub
add
repz
or
fstp
mov
pop
lcall
call
inc
mov
mov
mov
jg
or
dec
clc
push
popf
stc
mov
pop
aam
xchg
jl
je
imul
aad
push
sub
push
incl
jns
cmovp
push
lods
mov
inc
subb
xchg
mov
cmpsb
filds
das
mov
sub
adc
xlat
push
pusha
arpl
add
ror
sub
stos
out
dec
and
and
test
xchg
aad
sbb
in
and
xchg
inc
inc
and
xlat
popa
push
pusha
scas
and
js
xor
xchg
and
and
adc
lcall
mov
xchg
sub
and
mov
fwait
ljmp
sbbl
or
and
dec
cwtl
dec
dec
dec
jb
inc
test
call
jb
dec
inc
adc
mov
inc
sub
es
cli
pop
call
sahf
push
sbb
sbb
xchg
in
insl
in
sub
jge
int3
pop
sbb
sahf
adc
xor
dec
adc
pop
sbb
faddl
loop
add
stos
mov
add
inc
addr16
daa
mov
pop
es
aas
xchg
shrl
scas
or
and
and
lret
mov
xorb
push
enter
xor
pushf
pop
arpl
cld
mov
lret
mov
int
sub
and
or
les
sti
or
fistps
insl
mov
dec
sub
and
lods
cmpl
mov
lcall
or
xchg
and
and
add
out
mov
ud0
jno
sbbb
add
addr16
dec
xchg
ljmp
mov
dec
sub
sub
push
pop
cld
clc
cmp
or
pop
sbb
dec
xchg
pop
adc
sub
xchg
adc
repz
lds
sbb
sbb
sbb
mov
inc
push
add
lcall
cmp
repnz
jmp
shl
sbb
outsb
push
jmp
xchg
sub
inc
scas
adc
or
sbb
or
sub
jecxz
sbb
cld
outsb
add
cltd
pop
out
xor
comiss
or
mov
jle
or
outsl
pop
add
insb
add
out
cli
or
data16
push
nop
adc
jle
xchg
lcall
xchg
mov
mov
ficompl
xchg
icebp
ret
pusha
xchg
clc
add
jmp
lea
data16
mov
xor
dec
pop
daa
push
movsl
psllw
out
push
ljmp
xor
add
shlb
or
sub
sbb
clc
lds
sbb
in
aaa
xchg
test
push
arpl
push
xorb
sbb
andl
sti
push
dec
pop
jb
push
lret
pop
dec
mov
aaa
movsl
push
cmc
imul
xchg
cli
movsl
pop
mov
test
pop
push
ret
xchg
daa
push
dec
test
dec
lods
andb
lods
pop
ficompl
nop
add
nop
cmp
dec
mov
or
adc
mov
pmovmskb
add
insl
jmp
adc
mov
adc
aas
dec
or
test
bound
repz
inc
and
inc
bound
dec
into
dec
and
xchg
sub
enter
or
sahf
daa
adc
lcall
jl
and
cmpsb
subb
insb
js
imul
ja
or
mov
jmp
stos
dec
xchg
pop
adc
cmp
das
shlb
xor
pop
inc
jecxz
xchg
or
add
es
sub
aad
adc
test
xorb
adc
mov
sbb
testl
sub
and
and
in
fs
and
dec
xor
push
pop
or
mov
mov
aam
cmp
outsb
into
adcl
and
xchg
insl
sub
push
lahf
loope
push
xchg
dec
lods
adc
test
or
filds
mov
adc
data16
shrb
push
sbb
jnp
enter
inc
adc
lret
jo
negl
sti
fs
adc
adc
testl
icebp
push
rcll
mov
sbb
pusha
loopne
xchg
scas
dec
xlat
les
aaa
nop
lcall
mov
and
call
shll
jecxz
daa
xlat
adc
sbb
push
sbb
jns
enter
sbb
testl
or
aas
xchg
xlat
cs
rolb
sahf
pusha
adc
sub
gs
sub
inc
push
adc
shrl
inc
scas
ja
lock
mov
push
jecxz
pusha
push
push
ljmp
fwait
pop
mov
jne
mov
sub
sub
loope
push
xchg
and
imul
bound
or
fldl
inc
test
stos
sbb
adc
sub
sub
push
lcall
lcall
cmp
dec
push
inc
mov
sub
sbb
clc
sub
jnp
xor
adcl
jmp
or
and
hlt
jo
insb
roll
insb
cli
dec
mov
daa
or
inc
jnp
lea
sti
push
shrb
scas
clc
add
mov
dec
mov
sbb
ljmp
xchg
lcall
mov
jl
mov
inc
sub
inc
jnp
jl
cmp
pop
inc
jno
inc
sbb
inc
and
inc
lret
adc
sub
push
xor
dec
mov
or
jae
movsl
shlb
push
push
andb
into
sti
sbb
pop
clc
push
test
add
push
inc
lcall
adc
xor
xchg
cmp
add
fstp
popf
jae
fs
jmp
out
daa
push
add
cltd
movsl
sbb
repnz
and
out
xchg
or
daa
out
sub
int3
or
sub
sbb
lret
aaa
shrb
ljmp
push
cmp
pop
shl
sbb
and
jmp
push
mov
pop
lcall
inc
in
leave
inc
sub
mov
push
jp
dec
xchg
inc
ljmp
movsb
popf
dec
jl
dec
mov
das
and
lret
lret
xchg
das
dec
cmc
enter
pop
dec
xchg
sbbl
stos
sub
stc
jae
scas
and
out
aaa
cmpsb
notl
push
scas
adc
fcmovu
aam
sbb
stos
add
leave
dec
mov
jge
dec
jnp
pop
xchg
std
lret
mov
xchg
and
mov
mov
repz
testl
push
dec
cld
sti
les
and
std
inc
jecxz
movsb
inc
xchg
jecxz
sub
aaa
sub
and
cli
mov
adc
xor
cmpsl
orb
testl
cld
xchg
mov
cli
daa
pop
adc
lea
jmp
or
and
or
fxch
mov
ss
mov
subl
movsl
fmul
insl
xchg
inc
das
and
adc
xor
js
mov
mov
aaa
out
outsl
leave
ljmp
sbb
mov
sub
adc
xchg
repz
fdivrs
xor
inc
add
add
jne
sub
imul
jne
nop
scas
add
aaa
jnp
cmc
pop
pop
push
pop
sbb
jnp
mov
sub
fdivrs
push
arpl
test
dec
mov
adc
xchg
push
jle
adc
xchg
pop
xchg
inc
lret
and
add
push
dec
jp
and
cli
mov
dec
nop
outsb
jecxz
adc
sahf
leave
adc
es
hlt
adc
or
dec
popf
mov
xlat
inc
test
mov
add
inc
daa
and
fisttps
addr16
mov
insb
cmp
pop
jno
sub
popf
stos
outsb
pusha
repz
ja
xchg
and
stos
sbb
fdivrs
ds
cld
xchg
jns
pop
push
sti
insl
ja
push
bound
shll
mov
in
sub
and
sbbb
hlt
inc
imul
cmp
mov
sub
es
shll
adc
sub
jb
les
fwait
in
and
sbbb
outsb
lret
and
roll
pop
out
sub
in
xor
and
xchg
adc
cmpsb
mov
sahf
push
cmp
cmp
daa
out
add
push
fiaddl
pop
add
nop
xchg
test
mov
imull
push
ja
adc
out
dec
adc
into
cmp
adc
ret
ret
push
push
mov
cmp
sarl
test
int
mov
pop
ret
xor
inc
push
popl
dec
shrb
ja
jbe
push
fwait
das
jecxz
or
stos
xchg
cmpsl
sbb
pop
xchg
mov
xor
dec
mov
sub
inc
sbb
sbb
xlat
sbb
rcl
daa
scas
adc
in
test
pop
or
xor
lcall
psadbw
sub
icebp
inc
pop
enter
lcall
jl
inc
add
mov
jge
fisubrs
dec
lea
adc
mov
or
xchg
dec
push
mov
mulb
gs
or
xor
xchg
sub
or
sub
sahf
sti
or
addr16
cmp
lock
or
add
and
out
addr16
dec
fcompl
adc
addr16
xor
and
xchg
pop
mov
inc
cltd
stos
push
int
push
pop
push
adc
jl
cltd
pop
xor
sub
or
mov
inc
fcomi
cld
push
cwtl
cltd
mov
and
loopne
dec
divl
push
leave
scas
fsts
inc
cmp
push
das
imul
pusha
jle
lcall
sti
aas
fistpll
adc
shl
icebp
addr16
movsl
outsl
sbb
mov
movsb
jo
mov
xor
dec
or
lods
fwait
mov
add
aam
or
pop
in
inc
repz
jbe
adc
xor
inc
outsl
xchg
mov
loope
and
fimull
fnsave
into
jb
dec
add
push
int3
dec
outsl
adc
mov
out
and
pop
fisttps
sti
xchg
push
aam
scas
pop
sbb
adc
mov
aam
js
mov
sbbb
ja
sbb
dec
aam
pop
addr16
pop
push
outsb
out
pop
mov
mov
test
push
cmp
test
jns
pop
arpl
into
shrl
push
fstps
pop
sbb
pop
cs
shl
and
push
inc
sbb
dec
jle
icebp
pop
ret
or
inc
or
inc
aad
ret
jns
sbb
out
mov
inc
jmp
sbb
dec
stos
sub
sub
cmp
push
insb
lds
aad
pop
xlat
dec
add
inc
test
jnp
es
adc
adc
repnz
xor
push
sar
jae
or
xor
outsl
jne
pop
loop
adc
mov
and
add
push
cwtl
out
sbb
push
lahf
movsb
aad
ss
mov
out
popa
pusha
sti
insl
mov
mov
test
rolb
xor
ror
rep
xor
sub
sbb
insb
clc
mov
jb
cwtl
fisubl
sbbb
inc
jecxz
in
jge
addb
js
fcomps
or
adc
push
addr16
repnz
sub
scas
fs
mov
mov
addr16
inc
mov
dec
aad
aaa
cmc
mov
adc
outsb
or
mov
sahf
jnp
cmp
adc
rorl
or
push
mov
dec
xchg
int3
call
mov
adc
stos
sbb
xchg
inc
shr
xor
fwait
sbb
push
cwtl
adc
adc
jns
out
les
out
shr
mov
cmp
hlt
mov
in
sub
sub
subl
stos
loop
in
fisubrs
push
inc
mov
mov
nop
gs
push
adc
sbb
adc
insb
hlt
or
lret
outsl
xchg
cwtl
push
stos
in
xor
cld
scas
or
push
aam
pop
int
jg
sti
push
cmp
ret
lcall
fisubl
std
les
sbb
jmp
and
dec
imull
and
popa
daa
sti
and
xchg
addl
popa
repz
sbb
mov
imul
jg
sub
imul
dec
adc
jbe
sahf
adc
lods
movsl
loop
pusha
sub
sbb
pushf
xor
ret
dec
or
sahf
push
sbb
inc
mov
ret
sti
cmp
xor
or
sbb
inc
mov
fisttpl
adc
out
or
and
lret
aas
fsubp
push
adc
outsl
cmpsb
cmovs
sbb
incl
lods
je
cmpsb
pop
or
push
stos
or
cld
sbb
lret
jae
dec
sub
and
stos
sbb
and
test
cmp
in
test
icebp
or
or
lods
sub
sub
or
push
pop
pushf
cmpsb
bound
jle
pop
adc
push
fstps
mov
in
movsb
push
sub
out
inc
inc
push
or
jnp
scas
imul
or
xchg
push
movb
cld
add
sbbb
inc
sahf
and
cmpsl
dec
in
dec
sub
adc
fs
xor
pushf
fs
cmpsb
sub
jp
iret
push
jb
mov
ja
addb
xor
push
test
push
mov
je
cmp
xor
arpl
lds
pop
add
aad
push
gs
lods
sbb
sbb
fsubl
xchg
add
repz
push
loop
fists
or
daa
and
scas
call
pop
jmp
cs
daa
or
lret
das
fdivrs
call
adc
lods
pop
push
fildll
addr16
enter
xchg
xor
test
in
sbb
sub
lods
push
inc
mov
call
les
dec
push
lea
push
and
test
addr16
mov
stc
movsl
ret
sbb
imul
pop
pop
xchg
xor
add
mov
dec
jecxz
std
mov
out
add
test
push
adc
mov
cs
pop
push
das
adc
leave
jo
pop
pop
or
ss
cmp
adc
dec
rcl
add
in
and
xchg
shrb
fsubl
or
xchg
push
mov
addr16
imul
pop
mov
bound
lock
push
fstpl
test
sti
or
in
insb
inc
xor
cmp
testl
push
push
cmp
or
and
cmp
and
jnp
and
lcall
andl
sub
push
push
and
jnp
inc
movsl
and
sbb
and
cmp
xor
xchg
test
and
and
daa
cwtl
ja
in
orb
or
push
lar
mov
inc
arpl
add
fnstenv
push
icebp
push
insl
push
enter
inc
or
lock
push
sbb
or
xor
lock
xchg
outsb
repz
xor
xchg
aaa
sub
and
sub
in
shl
adc
push
int3
jle
iret
push
ret
inc
cmp
adc
adc
enter
test
aaa
sti
inc
mov
dec
hlt
fistpll
sbb
push
test
insl
jns
mov
and
daa
and
subb
lcall
mov
rorb
mov
aad
and
or
negl
inc
lds
jns
dec
clc
add
adc
dec
out
cmpsl
movsb
loopne
fsub
fstps
add
push
jo
repnz
out
mov
mov
setbe
inc
scas
repz
add
sahf
outsb
call
cli
adc
pop
fsts
lcall
pop
faddl
shr
adc
adc
and
pop
nopl
dec
pop
das
icebp
es
inc
fs
cs
or
sbb
xchg
sub
adc
enter
xor
sub
push
clc
gs
lods
push
es
sti
int3
cltd
es
mov
dec
jle
and
cs
sub
or
mov
lods
add
pop
jmp
das
das
add
sub
or
or
cs
mov
repnz
in
add
in
dec
fwait
dec
popa
xchg
xor
xlat
mov
push
outsb
iret
xchg
xchg
xchg
ss
mov
nopl
push
jne
dec
ja
inc
loopne
adc
xor
jnp
sbbl
jb
adc
cmc
sti
inc
imul
push
or
es
in
movsb
mov
bswap
cmp
out
add
jnp
xchg
outsb
mov
mov
imul
aad
ss
add
mov
xchg
lahf
jl
and
and
lcall
pop
or
xchg
mov
daa
sbb
pushf
ret
sbb
mov
and
and
xchg
pop
sub
pop
xor
pop
dec
shll
pinsrw
push
xor
xlat
test
or
sbb
push
pop
lret
cmp
mov
push
mov
or
and
dec
data16
in
sbb
aas
mov
and
out
cmc
sub
test
mov
pop
outsb
icebp
mov
fisubrs
adc
loop
pop
ds
sbb
mov
mov
jne
push
scas
cmp
xor
xor
iret
cli
xorb
jg
push
out
nop
lcall
es
push
das
cwtl
adc
mov
int
clc
or
dec
test
nop
add
or
int3
xchg
add
js
out
ret
adc
or
mov
ds
dec
add
fwait
xchg
cmpb
cld
in
in
in
jle
sti
scas
push
cs
lods
aaa
out
pop
or
push
mov
dec
stos
and
icebp
mov
setns
fwait
sbb
aad
adc
sbb
adc
sub
pop
inc
iret
sub
test
or
sbb
dec
add
insb
nop
mov
adc
fstpt
add
out
sbb
pushf
mov
mov
stos
subb
push
dec
sbb
jmp
sti
scas
xor
sbb
mov
cmp
mov
xlat
mov
imul
xchg
cmp
bound
dec
jecxz
inc
and
orl
aad
or
add
sub
test
push
stos
leave
dec
xchg
sbb
xor
rcrl
mov
pushf
mov
xchg
nop
xor
mov
bound
mov
insl
mov
adc
xor
xor
sub
mov
sbb
shlb
aam
cmpl
fstl
and
pusha
adc
shrl
loop
or
call
das
dec
adc
or
test
gs
adc
test
sub
dec
or
sub
inc
adc
sub
pusha
push
test
mov
sub
popf
popf
cmp
aam
mov
imul
int
inc
mov
push
sbb
push
iret
jne
out
cmp
insl
cmpsb
repz
xor
xor
fistps
push
inc
mov
lret
loope
pop
out
dec
gs
or
mov
adc
jle
dec
cli
sub
and
sbb
sahf
popa
inc
stos
fildl
and
pushf
je
mov
adc
hlt
sub
dec
sti
repnz
dec
scas
or
sub
and
lcall
jo
push
and
sub
xchg
popa
push
cmp
stc
pop
test
or
ljmp
inc
scas
lahf
mov
in
sbb
sub
or
pop
cmp
or
dec
aaa
pop
addr16
inc
jmp
cli
pop
adc
sbb
lock
xor
or
pusha
push
jns
push
sub
aas
xchg
movsb
xchg
or
mov
stos
dec
repz
inc
xchg
cmpsb
jbe
bound
test
lahf
xchg
sub
popf
push
xor
jl
add
sbb
sbb
orb
sbb
imul
daa
pop
enter
ret
leave
sbb
rcr
test
push
roll
cltd
xchg
jl
mov
fs
cmp
mov
fdivrp
cwtl
mov
in
aad
jge
pop
lret
push
sbb
pop
decl
fisttpll
or
sbb
mov
jns
ficoms
sti
or
sub
imul
fs
rcpps
cmp
add
stos
xchg
mov
jmp
cwtl
fs
adc
lds
ljmp
ficoms
sahf
push
adc
lds
lock
clc
pop
xor
add
xor
sti
mov
sbb
gs
mov
jb
inc
xor
mov
sub
mov
imul
nop
imul
xor
movsl
addr16
mov
mov
int3
nop
shlb
call
mov
mov
inc
xchg
lods
aas
fsubrs
orl
insl
pop
sub
ret
movsl
enter
push
gs
and
inc
insl
loope
adc
pop
mov
adc
mov
dec
sarb
pop
mov
mov
xchg
push
and
shl
push
pop
cmpsl
xor
fwait
adc
ror
aaa
iret
imulb
mov
mov
cs
push
jecxz
daa
in
scas
std
xor
or
mov
sub
cmp
xor
inc
jb
lahf
sub
repz
call
fwait
sti
adc
fs
push
sarl
inc
out
xchg
pop
aad
inc
addr16
fisubs
mov
adc
arpl
dec
jecxz
les
adc
mulb
in
adc
mov
in
inc
mov
fldenv
mov
dec
inc
and
fwait
push
shl
sbbb
mov
fidivs
cmpsb
mov
lds
cmpsl
lcall
neg
inc
and
jecxz
call
cs
and
pop
in
or
xlat
jnp
and
xor
mov
scas
pop
cltd
pop
push
nop
fwait
push
out
fstpl
lock
jae
popa
shrl
addl
mov
adc
pop
int
popf
movq
mulb
or
jnp
xor
push
push
les
pop
or
sti
in
inc
and
pop
xchg
and
notb
sbb
sbbl
cltd
aas
daa
sti
sbb
mov
test
cmp
or
fisubs
mov
loopne
int3
ret
or
mov
push
cmpsl
nop
fwait
sti
lods
dec
mov
jns
cmp
test
mov
xor
mov
mov
dec
mov
xchg
mov
inc
and
xchg
xchg
sub
inc
std
add
jmp
push
bound
push
notb
addb
ja
xchg
pop
pop
and
ja
lahf
push
lea
inc
movsb
addr16
clc
add
lods
inc
cmovs
jns
inc
fwait
sbb
inc
or
mov
aaa
sub
mov
inc
repnz
xor
jecxz
fsubp
repz
xchg
mov
ficoms
lds
pop
adc
lahf
sbb
dec
mov
jnp
cmp
outsl
adc
mov
scas
xlat
jns
lods
int3
or
inc
jae
cmp
add
mov
mov
mov
sbb
jnp
repz
and
mov
sbb
ret
scas
cmc
xor
mov
mov
out
add
mov
and
or
movsb
mov
jmp
cmp
xor
mov
xor
mov
movsl
xor
loopne
sub
sub
xchg
and
data16
push
jmp
fwait
mov
adc
rorb
jo
sbb
ficoml
outsl
xchg
push
xor
xchg
mov
and
rclb
mov
imul
sbb
cwtl
mov
repz
mov
cmp
jnp
lret
jl
mov
xor
sti
pushf
mov
xchg
shll
ret
push
subl
or
les
dec
xchg
mov
xchg
call
mov
pop
add
or
xchg
xchg
rorl
outsb
call
or
mov
inc
inc
cmpb
pop
mov
push
daa
mov
lea
xchg
pusha
jecxz
nop
sti
and
sbb
or
aaa
mov
and
xor
xor
cmp
dec
addr16
pop
test
mov
lock
loopne
and
or
and
mov
data16
aaa
dec
inc
cmp
pop
jg
test
xchg
cmpsl
ss
inc
data16
sub
fisubl
push
push
sbb
sub
in
out
mov
ja
adcl
out
jno
add
into
mov
xchg
jns
adc
mov
and
sbb
dec
mov
push
sti
int
push
cld
inc
loop
aad
add
out
pushf
inc
jecxz
ficoms
in
cld
sarl
xchg
jmp
inc
push
in
mov
rcrl
cwtl
xchg
xor
mov
push
add
mov
out
dec
lock
in
sub
xor
pop
mov
lret
jnp
iret
xor
gs
add
inc
test
xchg
sub
jle
cmp
xor
jno
xchg
je
inc
jmp
and
cs
inc
nop
out
adc
or
pop
mov
dec
or
push
xor
xchg
in
repnz
xchg
les
aad
dec
sbb
cmp
adc
sbb
jb
jnp
lret
pop
mov
sbb
adc
ds
dec
test
ret
cmp
mov
and
fsubr
das
mov
or
pop
adc
insb
push
adc
es
sub
push
arpl
test
loop
arpl
dec
push
inc
sub
sub
xchg
js
push
das
sbb
aad
sbb
icebp
shrl
jno
xor
jae
shlb
es
cmpsl
lea
les
call
cwtl
int
repz
ja
xchg
lods
jl
cmpl
dec
sbb
ds
push
xchg
and
and
push
mov
outsl
sub
test
push
and
clc
fnsave
inc
and
dec
dec
or
cmpsl
push
pushf
out
decl
sarl
sub
fldcw
dec
loope
push
adc
push
add
filds
push
loope
or
je
and
mov
sbb
cmp
js
std
jno
push
inc
in
xchg
fildl
in
xchg
cwtl
in
jg
sbb
stos
mov
aaa
ljmp
or
pusha
dec
lcall
scas
fucomi
add
and
dec
filds
dec
aas
xchg
inc
mov
inc
loope
xchg
stos
xor
test
call
and
ret
push
fbld
repz
jge
outsb
adc
sar
pop
push
sub
mov
push
inc
daa
clc
cmpsb
push
fistps
push
sahf
fisttpll
pop
dec
hlt
cmpsb
ror
sub
sbb
sub
loop
adc
rorb
outsl
aam
fidivl
out
repz
or
jbe
cmova
sbb
adc
imul
xorb
outsb
out
jg
or
cmp
adc
adc
sti
aaa
cmpsb
imul
and
mov
xchg
sahf
and
cmp
add
push
lcall
mov
cmpsl
insb
inc
add
jnp
lock
daa
sar
mov
cmpsb
push
lahf
xchg
jbe
jno
add
sahf
scas
pop
inc
sub
and
and
enter
xor
and
sbb
cmp
cli
movsb
or
fcoms
adcl
cs
cmp
push
push
mov
sti
xor
stos
and
jnp
push
adc
push
out
lcall
jnp
adc
enter
push
call
jnp
and
pushl
mov
out
loop
mov
inc
or
push
or
jnp
inc
nop
fsubp
xor
jp
or
cmp
sbb
sub
jmp
jnp
pop
xchg
cmp
pop
adc
and
sbb
mov
jno
or
lods
and
and
sbb
iret
in
test
mov
xlat
push
sbb
lock
test
adcb
inc
mov
jns
lods
inc
stos
adc
in
mov
cmp
mov
dec
add
clc
mov
inc
push
cmp
movsl
xchg
in
ds
cmp
mov
sub
sbb
sti
adc
gs
lret
cmp
popa
aaa
sub
dec
mov
xchg
sbb
ds
pop
mov
dec
and
leave
inc
mov
adc
pop
jmp
sub
pop
xor
inc
sahf
test
push
and
lock
jnp
sbb
jecxz
mov
aaa
pusha
pop
push
jnp
pop
lahf
shl
daa
inc
and
rorl
jnp
movsb
fstps
shr
popl
fsubs
adc
arpl
pop
pushf
fs
mov
sub
sub
push
ja
sub
shl
test
inc
daa
sbb
xor
das
lea
sbb
ss
daa
xlat
push
jnp
aas
and
or
cli
jae
dec
clc
aas
xor
sub
pop
mov
xchg
test
or
sbb
sub
test
js
lea
jno
popf
dec
push
movsl
or
stos
jne
mov
adc
call
jg
inc
test
je
mov
adc
mov
nop
in
push
sub
xchg
mov
mov
sbb
or
lret
pop
cld
jnp
cmp
jp
mov
test
jns
push
and
std
mov
dec
icebp
mov
sub
xchg
addr16
add
cmp
jbe
loope
pop
dec
jb
or
sub
pop
dec
jnp
and
std
mov
stos
test
gs
or
push
sub
push
pop
add
data16
aam
push
mov
add
mov
andl
pop
push
cmpsb
aam
jecxz
adc
mov
jmp
pop
jmp
mov
add
mov
jno
add
out
jge
ror
adc
aaa
mov
mov
sub
mov
jmp
aam
ret
jbe
sbb
dec
xor
mov
mov
adc
mov
jnp
insb
mov
out
add
or
jge
ds
xor
enter
faddp
push
in
mov
push
outsb
pushf
or
loopne
ret
push
inc
add
ljmp
push
jns
push
inc
pop
adc
sub
jecxz
pushf
adc
data16
out
jno
fcmovnb
jmp
jnp
push
jne
inc
ficoml
iret
in
xor
pop
inc
data16
or
cwtl
mov
mov
aas
jne
call
lods
cltd
cld
aad
add
and
add
mov
addr16
stc
int3
mov
in
lsl
jmp
test
adc
bound
sbb
shlb
daa
mov
repz
in
inc
mov
loopne
imul
pop
xchg
cli
in
test
icebp
xchg
leave
cmpsl
lock
mov
pop
popf
jae
mov
xchg
sbb
das
sbb
adc
test
mov
jnp
sti
bound
pop
pop
xor
addb
sbb
jnp
inc
stos
sti
inc
or
and
nop
outsl
pushf
jb
cmp
jne
cli
mov
adc
fdivrl
xor
out
jp
cmpsb
pop
es
aam
in
xor
mov
pop
xor
push
inc
dec
push
shlb
add
jmp
sbb
decb
cli
bound
dec
cwtl
sbb
sub
jp
mov
xor
scas
bound
mov
mov
mov
adc
xchg
dec
in
dec
popf
ret
pusha
cs
jbe
cld
call
cltd
lds
cmp
and
sub
inc
sti
sub
xchg
sbb
pop
adc
add
lret
sub
or
sub
and
mov
out
and
loope
jb
sub
dec
and
sti
mov
mov
add
inc
push
dec
fwait
push
mov
shrl
je
stos
inc
add
xchg
std
sbb
adc
mov
push
mov
das
inc
out
adc
and
popf
je
dec
pop
adcb
cmovp
mov
xlat
push
mov
lods
cmp
push
jns
and
xlat
xor
aas
xchg
and
nop
sub
lahf
xor
icebp
fcmovbe
jb
loopne
or
mov
mov
jnp
push
or
or
and
mov
jb
cmp
mov
mov
sti
popf
lcall
testb
mov
push
pop
stc
inc
movsb
pop
movsl
sbb
shlb
add
and
and
scas
lcall
xchg
jb
jecxz
stc
sub
sbb
cmp
inc
mov
aad
dec
xor
adc
pusha
mov
inc
or
mov
or
es
jge
inc
gs
aam
push
mov
int3
fdivs
sub
es
cmp
adc
data16
enter
and
and
push
and
cmp
adc
add
cmp
push
jns
dec
add
adc
adc
out
dec
inc
push
sti
jg
pop
sub
dec
daa
pushl
add
jnp
dec
inc
jne
push
shll
adc
push
push
adc
vpshad
ja
mov
jmp
sbb
mov
insb
sub
adc
dec
std
adc
repnz
xor
ja
jne
and
push
inc
pop
enter
mov
ror
lahf
jg
test
sbb
jle
imul
sahf
ret
inc
out
jp
jle
sub
cmp
test
in
adc
and
mov
mov
and
inc
test
mov
lret
in
xchg
push
pop
lods
pop
test
in
inc
jnp
cltd
mov
xchg
gs
adc
test
jle
push
lea
insl
fs
das
push
loopne
addr16
shl
ret
xlat
inc
fistl
jmp
jmp
das
in
xchg
push
jb
mov
or
mov
int3
test
das
jns
shr
sub
jecxz
hlt
int3
scas
xchg
and
mov
adc
dec
out
push
jmp
pop
mov
jnp
xchg
mov
jbe
movl
iret
lods
test
xlat
pop
inc
dec
pusha
test
mov
out
fildll
vshufps
or
adc
jnp
mov
mov
add
js
mov
imul
dec
cld
hlt
sub
fs
xor
push
inc
shl
sbb
xor
outsl
jnp
mov
in
movsb
adc
dec
les
xor
push
inc
push
jnp
dec
xor
out
mov
or
ret
push
sub
xchg
sbb
push
mov
dec
aas
loope
xor
jne
push
out
jns
mov
frstor
xlat
add
lock
data16
push
inc
xchg
inc
les
dec
sub
cmp
jae
cmp
mov
sub
mov
push
clc
and
clc
and
adc
mov
jo
ss
in
daa
xchg
sub
xchg
xchg
enter
ror
lahf
mov
mov
repz
xor
sbb
push
mov
xchg
jno
cmp
xchg
lock
roll
pop
loope
xchg
or
bound
mov
sub
out
or
in
add
loop
add
jmp
fwait
addr16
inc
xchg
push
pop
mov
notb
xor
adc
inc
cmpsl
dec
dec
mov
cmp
xchg
inc
adc
insl
addr16
and
and
xchg
aas
or
dec
push
inc
add
andb
test
jp
jbe
xchg
inc
jno
pop
jnp
sub
mov
out
jnp
sti
imul
dec
sahf
dec
or
fwait
sub
adc
dec
xchg
in
cmp
xor
inc
sbb
and
adc
jl
adc
ret
dec
addr16
cmc
addl
out
test
sbb
insl
movq
xchg
push
outsb
xor
push
and
lret
dec
push
and
pop
jmp
sbb
hlt
and
adc
cmp
ret
sub
xchg
in
cmp
cwtl
xchg
mov
xor
sub
dec
fnclex
stos
adcb
clc
dec
xor
sbb
inc
dec
push
sti
jno
pushf
dec
enter
jne
dec
lds
scas
repz
shll
mov
fisubl
and
xor
mov
add
push
test
sbb
inc
pop
fs
adc
sbb
je
push
addr16
mov
push
in
and
sub
xchg
mov
xor
or
cmp
inc
jne
jns
push
adc
xor
test
mov
pop
mov
xchg
mov
jno
mov
aad
mov
mov
call
and
sub
gs
cwtl
or
ffree
jns
in
push
adc
cmpsl
jae
xor
sbb
sub
dec
inc
adc
jns
sbb
mov
mov
xchg
faddl
fnsave
test
sub
test
push
jbe
sahf
add
xchg
das
sub
xchg
pusha
cmp
push
sti
call
stc
jmp
dec
out
and
enter
xlat
sbb
lahf
pop
fs
imul
mov
mov
or
push
jns
popf
pop
loopne
lahf
sub
jle
clc
arpl
imul
push
stos
bnd
pop
cmpsl
aad
xor
adc
push
xor
pop
dec
repz
pushf
mov
inc
sbb
scas
sub
jbe
inc
jno
mov
lcall
dec
pop
scas
insl
push
push
cmp
push
fcmovnb
cmp
dec
sub
data16
pop
pushf
jecxz
xor
xchg
ficomps
xor
jmp
add
push
adc
aas
out
in
push
add
jmp
mov
dec
xor
jge
push
mov
or
xlat
popa
fcomps
movsl
jle
data16
xor
jmp
scas
test
scas
add
or
or
pop
push
xlat
xor
jbe
mov
and
cmpsl
adc
scas
shll
inc
adc
sub
sub
xor
jne
dec
addl
add
xchg
jae
cpuid
inc
ja
cmc
cmpsl
cli
adc
jns
cli
dec
lods
sti
jno
push
mov
dec
into
jle
inc
insb
lahf
add
sbb
dec
mov
popf
movsl
inc
and
lea
push
fcmove
mov
mov
adc
adc
and
pop
sbb
dec
xorb
mov
and
enter
lret
movsb
shll
sbb
pop
adc
scas
popf
mov
sbb
loope
inc
sub
aas
daa
inc
pop
adc
mov
push
jae
cwtl
sbb
adc
mov
popf
cltd
les
fwait
adc
dec
imul
jnp
add
aad
or
and
pop
std
mov
orb
sti
loop
pop
js
or
jno
jnp
inc
sub
stc
xor
test
imul
or
iret
sbb
dec
jmp
hlt
or
push
and
mov
test
add
mov
jnp
notb
stos
xchg
jno
xchg
cmp
and
test
scas
jno
and
and
mov
cld
repz
inc
and
lahf
mov
sub
push
icebp
in
mov
mov
test
adc
lds
sbb
and
and
jl
les
or
inc
aas
jae
xchg
and
sub
test
call
xlat
fisttps
dec
jnp
lods
jne
not
dec
scas
lock
mov
cmpsl
faddl
fstp
fs
fistl
mov
call
or
mov
subl
inc
or
mov
stos
rcrl
iret
inc
dec
and
push
mov
jecxz
push
cmp
stos
sbb
mov
dec
and
jecxz
mov
leave
or
sbbb
gs
dec
lret
mov
data16
xor
movsb
sbb
mov
ljmp
cmp
leave
aam
cmp
ljmp
dec
ret
jg
and
or
cld
inc
in
stc
xchg
and
inc
xchg
mov
fs
test
push
adc
icebp
mov
jnp
outsb
jnp
sti
adc
out
add
sub
xchg
cmp
clc
loope
jb
mov
pop
mov
in
repz
loopne
cmp
push
dec
aaa
add
gs
cmp
dec
cwtl
jns
lahf
data16
adc
or
lcall
and
jns
push
rcll
cmp
cmp
aas
push
ljmp
test
inc
push
enter
clc
or
cmp
pop
imul
push
sbb
or
or
and
rolb
js
movsl
xor
mov
mov
jns
jg
and
js
mov
out
inc
mov
xlat
jns
or
inc
das
lock
sbb
inc
aam
cwtl
imul
jne
adc
push
sarb
and
xor
push
in
push
addr16
jg
lea
inc
pop
mov
cmp
fcmove
and
daa
jns
test
fbld
test
adcl
nop
insl
mulb
sub
jne
xor
lds
push
pop
and
jmp
fistpll
inc
adc
adc
or
or
jns
stc
adc
aad
loop
and
dec
cmp
inc
fwait
mov
stc
int
jg
or
hlt
pop
icebp
mov
push
test
mov
scas
and
mov
push
xlat
add
add
push
stos
jne
lretw
push
iret
cmovs
sbb
lods
mov
les
or
fistpl
jno
fmuls
in
cmpsl
scas
xor
or
xor
push
out
popf
flds
cmpsl
cwtl
pop
clc
add
and
sbb
inc
dec
out
xor
mov
nop
mov
clc
push
pop
jmp
push
shr
mov
cltd
lahf
incb
xchg
ljmp
aad
push
inc
loope
call
or
push
cltd
and
sub
loop
and
out
mov
enter
or
sbb
mov
mov
and
fcoms
mov
add
jle
sbb
push
mov
add
cmp
lea
jg
daa
inc
or
adc
sbb
mov
lods
fistl
stos
sbb
sbb
addr16
je
jnp
sbb
aaa
cwtl
fprem
jg
jecxz
or
sbb
or
dec
sub
push
add
sbb
or
and
push
aaa
lods
push
push
push
das
push
lock
data16
adc
mov
mov
gs
inc
xor
loope
ret
out
inc
pop
cli
sub
les
aad
inc
inc
inc
and
dec
ret
mov
clc
or
add
pop
stc
sbb
out
dec
sbb
inc
push
pop
mov
sbb
pushf
adc
cmp
xchg
roll
add
dec
sbb
aas
fistps
into
dec
in
mov
pop
lcall
iret
sub
add
jae
es
xlat
dec
lds
mov
loopne
xor
sbb
in
or
addl
mov
jo
inc
add
repnz
sub
inc
cmc
adc
das
pusha
add
cmp
cmp
aas
and
or
push
movsl
hlt
pop
imul
xchg
and
cwtl
lret
add
mov
pushf
mov
mov
adc
or
test
pop
testb
xlat
adc
mov
sbb
incl
inc
fcmovne
cmp
push
dec
dec
pop
cli
aam
clc
or
sub
test
xchg
sub
lock
cmp
rcl
adc
and
cmp
test
sub
mov
pop
jmp
in
push
and
movsl
dec
int
jp
xchg
call
adc
scas
and
push
lret
push
aas
cmp
dec
or
lcall
mov
and
or
sub
insb
ss
inc
lds
test
pop
sbb
pop
cwtl
adc
add
dec
scas
mov
daa
mov
ja
xchg
bound
push
and
incl
sti
fildll
mov
fwait
mov
aad
push
dec
adc
pop
insb
out
sub
sbb
das
adc
mov
sti
in
add
sbb
daa
nop
xor
push
arpl
aam
dec
test
in
ret
sti
xchg
adc
mov
cwtl
shll
divps
add
and
arpl
call
dec
cld
dec
adc
jmp
mov
inc
dec
movsl
cli
lds
lock
pop
enter
sbb
shl
scas
and
xchg
aaa
daa
and
jno
lcall
fcoml
mov
or
xchg
jle
lcall
pop
lds
aam
or
adc
outsl
jno
rcll
out
test
sub
test
adc
inc
sub
mull
aas
inc
xor
gs
cmpsb
dec
pusha
test
xchg
xor
sub
ds
stos
sub
inc
stos
cmpb
stc
pop
int3
pop
or
dec
in
and
inc
mov
add
lods
or
les
lods
stos
jmp
xor
dec
xchg
dec
sbb
std
or
in
in
ja
outsw
int3
clc
push
pushf
mov
sub
lea
inc
sti
dec
outsl
outsl
push
int
jae
push
pop
nop
daa
fbld
movsl
cmp
sub
jmp
rorl
mov
lds
and
xor
pop
shll
push
jnp
dec
imul
sahf
push
adc
xchg
je
mov
sub
mov
push
adc
pop
lea
mov
mov
add
xchg
sub
pop
add
lcall
int3
sub
int
lock
pop
ret
xchg
mov
and
adc
or
mov
inc
iret
andl
sub
sbb
lahf
bound
adc
cmpsb
rep
cwtl
jecxz
test
mov
xchg
and
addl
inc
jbe
test
ss
cmp
outsb
and
stos
mov
sbb
or
push
push
pop
int
outsb
loope
sbbb
sub
data16
leave
xor
inc
mov
mov
test
cmpb
pop
stos
cmp
push
cmp
jl
sbb
sub
pop
aaa
add
inc
pop
mov
dec
adc
mov
dec
aaa
jnp
sub
xchg
incb
inc
cwtl
bound
imul
mov
xor
rorb
lods
into
test
adc
sbb
mov
mov
inc
jecxz
fsubr
out
xor
or
adc
or
sub
aas
test
xchg
pop
push
dec
sbbl
dec
or
lock
dec
outsb
mov
dec
cmp
pop
aas
sbb
cmp
mov
das
ss
or
cmp
ret
pusha
or
jbe
inc
jb
push
aas
push
scas
push
enter
movsb
popf
cmp
imul
data16
xor
inc
xchg
sbb
push
orb
fnstenv
pushf
xchg
iret
enter
loop
ja
popa
dec
mov
xchg
dec
das
add
in
daa
subb
xchg
adc
mov
dec
push
out
je
es
add
aam
inc
sti
rcll
inc
and
push
and
push
test
dec
repz
dec
xchg
sbb
cltd
jmp
mov
jecxz
jmp
out
popf
daa
loop
adc
mov
jmp
stos
sarl
pop
sbb
test
ret
adc
lret
pop
xchg
inc
andb
gs
icebp
pusha
sub
sbb
xor
in
imul
inc
insl
push
scas
adc
xor
iret
inc
js
mov
pop
repz
pusha
xor
cwtl
sarb
aam
sahf
aam
and
push
div
aam
sub
insl
xchg
pop
repnz
popl
outsl
push
sbb
stos
cmp
adc
adc
jbe
push
mov
pushf
imul
and
xchg
mov
sub
jne
xor
in
and
out
sti
xor
mov
or
sahf
cmp
cmp
nop
ss
aam
push
sbb
fstl
ror
stos
pusha
mull
sti
xor
dec
cmp
xor
push
out
xchg
or
pushl
movsl
push
or
jne
inc
ret
fs
nop
cmp
test
adc
push
or
inc
fs
and
mov
int3
jle
or
or
iret
push
sti
jne
jp
and
and
xchg
inc
aaa
out
stc
mov
fstps
dec
mov
rcll
shlb
push
jmp
popa
je
mov
lds
ja
outsl
notb
and
loope
ljmp
loopne
and
mov
psubusw
lods
jmp
addr16
dec
inc
and
sub
scas
adc
xchg
dec
fnstsw
push
jecxz
dec
push
sbb
das
les
jne
cmpsb
imul
inc
mov
in
or
sub
jnp
mov
add
add
sbb
push
mov
mov
or
jmp
dec
mov
sbb
mov
xlat
inc
js
jb
sbb
cltd
push
jnp
dec
and
adc
and
jecxz
dec
mov
mov
out
push
enter
jb
pushf
cmc
fs
out
jns
or
lods
cmpsl
call
mov
and
and
aaa
and
sbb
cmc
jno
out
or
sahf
aaa
and
mov
rcrl
rclb
pop
jns
jne
dec
mov
ljmp
aas
push
clc
shll
xor
cltd
add
fwait
sbb
mov
pusha
dec
loopne
lods
imul
ljmp
lahf
iret
cvtdq2ps
cmp
xor
adc
ror
push
push
mov
inc
enter
and
push
frstpm(287
cmpsl
mov
out
in
inc
lea
insb
cld
jecxz
inc
or
push
adc
rcl
ret
jno
xchg
adc
push
jmp
mov
jl
mov
lcall
imull
imul
in
pop
dec
mov
out
and
mov
rcll
mov
aam
out
fs
push
mov
push
push
xchg
lcall
cld
jge
xchg
and
lods
pop
mulb
jnp
adc
adc
xor
add
sti
imul
pop
sub
jae
out
add
sti
pop
sbb
xchg
ja
or
mov
and
xor
dec
dec
jnp
lahf
adc
xchg
adc
push
and
sub
adc
dec
cmp
adc
outsb
in
cld
int
dec
movsl
dec
inc
ljmp
orl
and
jnp
mov
push
cmp
inc
jecxz
out
and
imul
ret
or
push
mov
sub
xchg
jl
out
inc
push
std
out
and
adc
test
xchg
jns
push
xchg
mov
adc
dec
sbb
mov
jmp
pop
nop
ret
mov
clc
jo
add
dec
adc
movsb
cmpsb
das
mov
push
xor
pop
dec
adc
jmp
test
and
and
in
mov
je
imul
sbb
cmp
pop
dec
call
sub
dec
inc
rcrl
and
push
ret
ror
nop
les
repnz
daa
in
enter
sti
adcb
daa
test
mov
es
dec
insb
inc
pop
sti
and
cwtl
sub
inc
ja
test
xlat
mov
arpl
inc
mov
sti
inc
or
mov
mov
xchg
jmp
nop
test
decl
sti
xor
or
jmp
test
insb
pop
inc
movsl
out
repz
dec
lods
jmp
pop
lret
lods
pop
push
adc
enter
jbe
popa
sbb
mov
dec
xor
nop
cs
inc
dec
aam
pop
cmc
ret
std
in
or
inc
or
lret
adc
test
pop
xor
pop
shlb
pop
and
xlat
rorb
inc
cwtl
insb
and
mov
jo
jnp
sub
and
iret
mov
jnp
jns
push
sbb
jl
cwtl
push
xchg
mov
repz
call
dec
add
loope
jo
adc
ja
pop
pop
or
jg
flds
mov
cmp
or
cs
lods
push
dec
loop
pop
imul
add
pop
das
xor
negl
push
xor
inc
sub
and
and
imul
sti
pop
add
into
push
sub
testl
jne
push
inc
test
lods
push
loope
sub
jp
push
cmpb
jnp
xchg
or
sahf
dec
xchg
mov
leave
push
fs
inc
mov
scas
adc
inc
arpl
nop
shrb
push
mov
or
and
mov
inc
fimuls
xchg
lods
shrb
outsl
mov
pop
cwtl
movl
repnz
jns
sbb
sbb
or
pop
sbb
xor
adc
cwtl
push
out
in
or
mov
or
xor
popf
shll
lahf
jno
sub
repz
aad
cltd
jns
popf
icebp
mov
push
leave
jg
subl
aam
ret
loope
push
enter
mov
jmp
mov
inc
ret
push
jecxz
sbb
mov
stos
pop
or
mov
cmp
or
lds
or
mov
bound
and
xor
sub
sbb
xchg
enter
dec
adc
fcomip
movsl
mov
es
mov
out
dec
xchg
rolb
cwtl
pop
cltd
jno
or
add
xor
or
pop
arpl
xor
jae
add
jmp
fprem
jl
das
js
and
scas
lds
cld
jno
xor
mov
and
inc
sarb
nop
repz
daa
movsl
xchg
enter
dec
or
fiadds
pushf
xchg
sub
adc
xchg
aam
cmp
jecxz
lcall
pop
aas
daa
jecxz
push
push
dec
hlt
aad
xchg
mov
cmp
adc
nop
lcall
cwtl
scas
pushf
sbb
sub
inc
leave
sbb
xchg
sub
lret
xchg
je
cld
loopne
outsl
inc
imul
and
imull
lcall
dec
jns
sbb
inc
or
ror
adc
pop
cmc
xor
nop
jbe
cli
add
inc
and
adc
xor
test
lret
xchg
xchg
out
lcall
addr16
and
mov
adc
adc
sub
inc
movsb
xchg
jno
xchg
daa
in
pop
push
fsubp
xchg
sub
xchg
adc
mov
push
xchg
xor
mov
xor
xchg
push
inc
pop
adc
push
push
jecxz
in
jmp
add
or
mov
sbb
xchg
fsubrl
jmp
test
inc
flds
ficompl
mov
inc
sub
es
xchg
lods
pop
xchg
mov
sbb
push
cwtl
lods
jmp
adc
mov
dec
jns
test
inc
ret
icebp
cmp
fcomip
push
les
or
xchg
stc
and
xchg
push
scas
xchg
xchg
aam
sub
inc
data16
xchg
stos
bound
inc
adc
test
push
xchg
stos
cmc
jle
roll
xor
fnstcw
test
adc
gs
inc
add
xchg
rcrl
xchg
push
data16
jmp
fdivrs
outsb
in
insl
or
sub
popa
fstl
push
inc
iret
repnz
idivb
mov
in
test
clc
or
mov
or
xchg
xchg
test
push
fldenv
xor
mov
sbb
mov
movsl
icebp
clc
add
sub
addr16
jl
xchg
jmp
std
cmpsl
cwtl
push
sbb
jg
fsubs
cmp
repz
xchg
push
inc
inc
gs
sbb
clc
adc
xor
jnp
fs
sti
xor
test
dec
lods
pop
xchg
bound
insl
out
pusha
or
in
sub
stc
sbb
pop
xchg
pushf
inc
xchg
dec
aad
dec
mov
jb
xor
jnp
cmp
stos
lea
cs
mov
addr16
repz
sub
in
sbb
out
sar
inc
fsubrs
in
fldl
mov
jnp
and
and
jge
inc
jp
pop
repz
dec
push
xchg
dec
aam
and
sub
inc
adc
jge
dec
dec
fdivr
repz
pop
in
bnd
or
mov
pop
pop
sbb
or
movsb
adc
imul
cmp
mov
or
sbb
sti
pop
sub
dec
stos
xor
in
sbb
movsl
ja
xchg
dec
lahf
pop
lods
xor
add
ljmp
nop
adc
xchg
push
mov
cwtl
adc
int3
loope
xor
jne
push
mov
stos
adc
mov
xchg
pop
mov
or
je
aas
dec
adc
mov
cs
mov
movsl
addb
inc
and
adc
inc
mov
aaa
xchg
ljmp
insl
push
ret
ja
add
push
pop
and
push
orb
sbb
mov
pop
ficoms
iret
fwait
xchg
push
push
mov
and
sub
dec
add
push
out
mov
pop
or
adc
xchg
sbbl
push
sub
add
cli
dec
xlat
movsb
int
mov
stos
dec
loope
adc
jne
scas
fstl
xchg
je
push
stos
xor
or
addr16
push
adc
ret
nop
in
and
pop
cwtl
pop
jecxz
shrb
aaa
cli
movsb
push
add
dec
into
cmp
or
aam
inc
sub
inc
inc
orb
enter
mov
jg
mov
mov
adc
out
or
adc
jbe
xchg
out
pop
jge
push
xor
push
iret
push
and
mov
mov
icebp
aaa
std
into
mov
jns
jmp
outsb
in
daa
xchg
xor
or
mov
sbb
mov
dec
pop
push
adc
sbb
sub
inc
inc
dec
cmp
aad
and
out
cmp
adc
pusha
pop
sbb
push
pop
lea
test
clc
xchg
or
adc
adc
sub
or
cld
xchg
inc
stos
inc
sti
cs
or
xchg
andl
add
fs
es
sbb
dec
push
mov
cmpsl
aam
jns
inc
lret
and
dec
iret
jmp
jecxz
test
mov
push
int
scas
mov
push
push
shlb
xor
mov
jecxz
jae
es
into
insl
aaa
call
cli
cltd
xor
adc
push
add
xor
scas
push
sub
sbb
xor
mov
arpl
adc
adc
sti
sbb
sbb
pop
outsl
cmpsb
push
adc
in
adc
insb
test
scas
and
dec
adc
and
inc
cmp
call
jg
inc
and
insb
rolb
lds
inc
inc
mov
fwait
pop
inc
push
push
mov
mov
mov
jmp
rcr
inc
mov
les
xchg
rorl
or
stc
insl
jl
test
insl
push
mov
push
jp
rcrb
cmpl
xor
xchg
adc
dec
popa
jp
inc
je
and
push
adc
xor
fidivrs
adcb
outsb
push
mov
daa
mov
adc
rcrb
inc
inc
jge
jns
jmp
inc
imulb
cmp
sub
cmc
and
pop
movsl
pop
nop
jecxz
aad
cmp
pop
std
adc
xchg
je
xor
call
sahf
cmp
push
scas
mov
sbb
pop
subb
outsl
lock
push
cmp
jno
pop
xor
shl
add
sbb
mov
push
xchg
xor
xor
sbb
test
mov
test
sbb
inc
les
nop
sub
repnz
cld
cmp
jp
pushf
dec
js
sti
sub
sub
mov
adc
aam
shlb
inc
repz
imul
shll
aam
inc
sbb
xchg
xor
popf
popa
clc
lret
push
pop
mov
cmp
fsubs
jnp
adc
xor
sub
cmp
jnp
jl
xchg
add
into
clc
mov
pop
add
arpl
mov
jle
xor
xor
popa
sti
subl
sub
cmp
jo
shlb
pop
gs
dec
or
pushf
adc
sbb
adc
test
pusha
pop
andl
popa
shlb
addb
mov
sub
cmp
and
push
push
adc
mov
inc
out
xchg
and
push
push
fwait
decb
and
adc
pop
adc
xchg
adc
mov
loop
dec
and
mov
mov
mov
jg
or
call
xchg
and
inc
xchg
and
xchg
mov
je
add
dec
cli
fucomi
dec
push
xchg
cmc
mov
push
cli
mov
daa
pop
adc
or
mov
dec
and
jl
mov
mov
cltd
xor
adc
push
adc
ret
pop
rcrl
dec
and
cmp
nop
mulb
fisttps
dec
shrl
cmpsl
pop
mov
cs
and
inc
lcall
les
dec
mov
adc
negl
or
mov
and
sbb
pop
mov
mov
or
in
push
cltd
clc
xor
or
dec
and
add
cwtl
jmp
inc
or
mov
into
push
sub
adc
test
fcmovu
mov
insb
jae
ret
sub
ds
bound
test
cmpsb
cmp
xchg
lods
cmp
bswap
scas
loop
fs
mov
test
scas
std
test
inc
and
inc
ss
adc
add
btl
xchg
pop
and
add
xor
mov
pop
xchg
in
adc
mov
clc
dec
xor
call
mov
imul
fsubs
sbb
ljmp
mov
bound
cmp
jg
and
adc
adc
fwait
and
jne
stos
mov
aam
xor
and
jno
dec
xlat
hlt
test
or
and
int
add
addr16
and
push
jl
test
and
ljmp
lret
mov
ret
adc
or
jmp
sti
mov
notl
push
mov
push
and
pop
push
rcrl
std
fidivrl
sub
cltd
pop
and
data16
fwait
jo
clc
and
ret
inc
insl
xor
repnz
pop
sbb
adc
dec
in
hlt
aas
outsb
or
lcall
sub
outsl
int
sub
addr16
jae
jle
cmp
popa
data16
lods
mov
inc
sub
loopne
sahf
imul
nop
outsl
or
xor
pop
push
adc
dec
jg
jg
add
lcall
testb
shl
fbstp
pop
les
out
addb
jb
outsl
sbb
imul
cmp
adc
pop
add
jle
mov
sbb
scas
divb
pop
scas
inc
inc
out
stos
mov
sti
jge
xor
clc
popa
shll
mov
inc
sbb
sahf
adc
dec
dec
sbb
insl
cmovbe
ljmp
cmp
adc
push
ret
pop
rclb
jmp
push
orb
sub
dec
adc
pop
or
push
pop
jmp
push
dec
pushaw
pop
dec
add
mov
insb
cltd
xchg
iret
adc
ret
clc
in
test
movsl
stc
cmp
mov
push
jnp
push
inc
jne
xor
xor
add
ja
out
inc
pop
pusha
cltd
sbb
push
or
and
pusha
mov
jecxz
sbb
sub
sbb
or
outsl
cmc
das
dec
add
lods
push
hlt
call
je
sbb
dec
ljmp
pop
mov
cld
cmp
adc
xlat
pop
xorl
pop
aaa
inc
out
int
or
mov
adc
pop
lds
inc
aas
sbb
les
push
mulb
std
addr16
insl
sub
imul
pop
scas
push
ret
imul
inc
cmp
or
sbb
ja
pop
aaa
data16
dec
mov
cmc
mov
orl
push
sbb
jnp
repnz
dec
stos
mov
das
adc
and
and
in
das
fdivl
outsb
fists
xor
pusha
mov
inc
dec
cmpl
xchg
enter
xor
mov
daa
pop
inc
stos
std
dec
fistpll
enter
lock
cmpb
pop
fidivrs
or
adc
stos
int3
jle
cmpsl
ss
pop
xchg
repz
pusha
cld
pushf
in
shr
mov
inc
movsl
jg
rol
mov
dec
scas
xchg
mov
mov
es
mov
push
fisttpl
insl
dec
or
out
push
fadds
sbb
sti
lock
ljmp
lock
adc
push
dec
cwtl
out
jge
pop
dec
or
push
push
mov
jns
push
mov
or
sub
mov
addr16
loop
adc
mov
ljmp
pushf
nop
mov
divl
push
mov
or
imul
xor
imul
dec
sbb
push
xchg
test
dec
cmp
and
mov
cmpb
mov
ret
xor
or
lods
and
mov
xchg
les
jle
test
bound
ljmp
dec
inc
loopne
push
or
pop
and
fwait
jns
mov
lds
shlb
mov
inc
mov
stos
xor
xor
pop
imul
insl
inc
daa
inc
lods
push
outsl
jle
lcall
loop
sti
adc
xchg
push
mov
xchg
scas
outsl
and
inc
xchg
push
pushf
cltd
pop
sub
faddl
ja
fdivrs
xor
movsb
and
nop
repz
inc
ror
or
push
out
in
fiaddl
sub
dec
addr16
fmuls
popa
inc
or
mov
lds
dec
jb
rorl
xor
pop
movlpd
and
mov
cmp
rol
jg
xchg
fwait
mov
jle
cli
out
out
movsl
push
add
les
mov
push
lret
es
xchg
mov
addr16
mov
mov
dec
std
cld
xchg
rsqrtps
rorl
xchg
cli
or
das
fucomp
xchg
iret
imul
sbb
or
scas
outsl
cld
xchg
dec
jmp
sti
pushf
cld
rolb
xor
fcom
or
fistps
popf
or
push
dec
lock
jnp
adc
push
sub
cmp
cwtl
dec
aad
nop
mov
dec
out
stos
lahf
sarb
or
push
add
jae
lock
and
mov
cltd
push
lock
xor
cmp
imul
pop
inc
push
stos
mov
mov
mov
pop
mov
stos
inc
fcoms
or
mov
inc
repz
outsb
cmpsb
adc
xchg
sti
cmp
cltd
popf
outsl
adc
cmpb
cmc
adc
scas
xchg
lods
jnp
test
xorl
sbb
movsl
out
push
ficoml
js
jnp
xchg
mov
sub
mov
pushf
sbb
sbb
mov
sbb
or
jecxz
jnp
lahf
pop
cmp
int
out
xchg
cmovo
pop
stos
xor
or
or
sbb
push
xchg
clc
mov
cs
mov
xchg
xor
dec
and
adc
cmp
adc
push
adc
adc
aaa
hlt
xor
bound
stos
add
fidivrl
sub
dec
xor
fildll
cmp
dec
out
adc
add
pop
stos
shrb
rcrb
adc
fs
cmp
cmp
cs
mov
xor
xor
inc
out
or
popf
sbb
ljmp
adc
test
inc
stos
and
mov
pop
mov
loope
mov
ss
or
push
add
cmpsb
and
cmp
outsb
cltd
xor
jle
inc
ret
jge
stos
dec
mov
fs
dec
sahf
fwait
pop
int
inc
ljmp
adc
aaa
sahf
orb
xor
xchg
and
stc
xlat
or
cld
testl
jo
dec
addl
sub
sti
mov
pop
sti
dec
inc
lods
bound
enter
push
stos
or
push
or
mov
adc
xchg
cmp
imul
adc
mov
push
push
adc
sbb
pop
lahf
adc
icebp
mov
mov
ja
sub
and
in
and
sbb
arpl
xchg
ret
hlt
mov
add
xchg
movsb
and
scas
ret
jnp
fstps
imul
lods
push
pop
xor
and
cmp
or
repz
adc
shl
and
and
and
jle
inc
mov
xor
std
or
std
or
std
or
mov
cmp
movsl
mov
movsb
popf
bound
cmp
mov
dec
addr16
in
mov
push
call
mov
cmp
push
mov
dec
mov
ret
cmp
dec
jp
popf
push
push
pop
xchg
test
adc
out
jp
pop
dec
or
pop
pop
std
mov
sub
inc
sti
outsl
dec
jo
push
cmpsl
aad
add
dec
sbb
lahf
push
pop
gs
add
inc
jmp
inc
jb
adc
clc
push
inc
cmpsb
add
cld
out
out
sub
xor
out
aaa
mov
cmp
mov
pop
xor
sbb
and
xor
rclb
test
push
popw
shrl
test
cwtl
xor
xchg
mov
clc
les
in
mov
sti
add
push
or
movsb
inc
mov
out
rorb
jb
in
or
bound
orl
xchg
xor
mov
hlt
inc
aam
adc
dec
pop
mov
mov
imul
inc
das
je
sub
sub
or
movsb
out
fistps
adc
push
fistl
pop
sub
or
mov
js
jle
mov
push
add
jmp
sahf
push
sub
movsb
and
add
sbb
out
mov
mov
mov
in
mov
lret
dec
fstl
xlat
mov
fwait
test
dec
lcall
push
rclb
mov
and
lea
out
dec
not
es
movsb
pop
bound
add
nop
or
int
jmp
call
xchg
jecxz
in
outsb
dec
mov
mov
call
adc
jle
pop
push
sub
cltd
popa
xor
mov
mov
adc
stos
xlat
sarb
or
push
xor
xor
push
jnp
test
loopne
mov
and
inc
xor
ret
sbb
mov
xlat
sbb
xor
fs
cmp
jno
and
pop
mov
fnsave
dec
sub
lret
adcb
cmp
addr16
call
xor
cmp
adc
hlt
out
das
and
cwtl
inc
xchg
lods
stc
imul
dec
xor
pop
inc
lods
or
dec
pop
testl
leave
dec
adc
daa
test
pop
vpmacsswd
lcall
lcall
and
cltd
outsb
and
arpl
sbbb
add
out
mov
mov
or
adc
roll
inc
inc
xchg
sbb
mov
cmp
adc
mov
fsubl
popl
inc
jle
test
fs
push
ss
inc
jns
xor
aas
daa
push
push
lods
cmp
inc
adc
cs
cmp
sub
inc
mov
xor
loopne
mov
ret
inc
mov
sbb
popf
and
and
arpl
xor
dec
enter
sub
push
and
repz
push
sbb
imul
push
push
adc
enter
sub
jecxz
outsb
dec
add
or
sub
ret
push
adc
mov
popa
clc
ja
mov
pop
cld
mov
cli
sbb
shll
and
adc
movl
in
aaa
fs
jl
lods
push
inc
xor
jmp
scas
sub
xor
sbb
in
xchg
aas
lret
nop
jp
fisttpll
xchg
mov
and
add
cmp
dec
clc
pop
ds
jg
shrb
icebp
cmp
and
nop
xchg
enter
std
mov
and
std
push
and
mov
mov
xor
adc
cmp
or
inc
push
fsub
rclb
dec
clc
aas
cltd
outsl
inc
testl
dec
enter
cltd
push
xor
pop
cld
add
sbb
sub
movsl
dec
mov
or
lcall
mov
leave
and
lea
jg
xchg
cmp
cmp
jo
sub
and
das
cs
cmp
int
out
aas
lea
test
bound
sub
mov
or
sub
inc
inc
mov
push
xor
ss
inc
and
aam
pop
cld
stos
add
dec
pop
popa
sar
adc
and
xor
nop
jno
inc
xchg
and
out
clc
imul
adc
lret
lret
in
xor
pop
mov
roll
out
mov
mov
and
dec
addr16
into
push
push
lods
push
or
hlt
and
decl
add
aad
dec
std
fsqrt
into
stc
addr16
xchg
fisttpl
and
adc
mov
and
adc
cmp
fisttpl
mov
push
xor
inc
test
pushf
pop
mov
notl
clc
insl
fstpl
fadds
pop
arpl
and
xor
mov
xchg
test
mov
test
pop
jae
mov
orps
inc
pop
sub
flds
add
or
ss
lret
addb
sbb
jo
pop
pop
mov
bsf
push
inc
paddusw
sbb
in
inc
xor
push
or
push
adc
jmp
sti
jbe
inc
subb
outsb
lods
lret
inc
add
in
in
push
shl
cmp
add
adc
lea
sbb
xchg
les
adc
and
pop
negl
inc
jp
mov
jae
in
jo
cmp
xchg
sahf
sbb
sbb
int3
xchg
cmp
dec
stos
sub
jnp
push
sub
sub
pop
daa
cwtl
aad
push
aas
into
lahf
pop
adcb
xor
push
mov
xchg
adc
push
jns
xor
push
pop
xor
idivl
push
sub
push
jle
jecxz
xor
cmp
repz
mov
jns
push
sti
xor
daa
shll
fistl
das
xor
sub
inc
xchg
mov
mov
jnp
inc
in
daa
jle
adcl
lea
mov
mov
les
mov
pop
inc
inc
mov
push
movl
scas
push
sysret
xchg
push
lds
fwait
inc
leave
adc
or
xchg
xor
xor
fcomip
push
adc
shl
or
inc
cmc
adc
sti
pop
stc
sub
fisttpll
pop
repnz
and
data16
inc
sti
les
mov
inc
cmp
inc
ljmp
lock
repz
fwait
dec
cmp
imul
lods
mov
cmp
inc
lods
cmp
out
cs
dec
cmpsb
mov
or
mov
lret
loopne
scas
mov
inc
cmpsb
inc
test
add
repnz
pop
divb
adc
xchg
cmp
inc
adc
pop
pop
ds
ret
inc
xchg
jle
adc
xor
pop
fsubs
addr16
jb
adc
lea
push
mov
roll
cmp
add
inc
loop
add
pop
outsl
mov
inc
cld
sbb
mov
lods
loop
push
dec
inc
dec
fstpt
in
xor
xlat
sysexit
or
cli
adc
xchg
xor
mov
inc
mov
sbb
add
jg
stc
inc
push
mov
mov
repz
movlps
pop
and
mov
jecxz
cmp
and
loop
sub
xchg
or
inc
inc
mov
sbb
add
adc
mov
lods
jns
sti
pushf
cmp
mov
loopne
xor
sbb
cli
sbb
cli
ss
js
or
adc
cmp
aas
mov
xchg
add
and
xchg
int
adc
mul
xchg
icebp
data16
and
pop
sub
or
pop
mov
mov
movsb
pop
enter
js
popf
je
ds
js
sti
push
testb
mov
xor
lcall
jne
pusha
rcrb
mov
sub
mov
inc
stos
sub
sar
repz
leave
out
leave
xor
xchg
andl
pop
jle
adc
jmp
clc
incb
out
inc
sbb
cmp
and
adc
push
pusha
mov
mov
jns
pop
mov
push
out
adc
scas
popf
xchg
mov
mov
dec
xchg
rcr
std
adc
and
aam
sti
add
mov
and
in
or
lods
pop
outsb
jnp
adc
pushf
adc
and
or
es
sbb
xchg
jnp
sbb
cwtl
arpl
test
repz
inc
mov
or
outsb
and
add
lds
push
cmp
add
ret
jbe
add
push
data16
lret
pop
jns
add
push
add
rclb
jle
aad
idiv
or
cltd
lret
lea
or
mov
fsubl
sahf
psubsw
mov
das
mov
dec
jecxz
or
or
push
inc
fbld
and
xchg
and
clc
xor
push
add
inc
adc
daa
les
mov
das
testb
jo
icebp
test
pop
cli
pop
loop
js
cmp
cwtl
fwait
and
inc
outsb
insl
and
lds
sbb
and
xchg
int3
push
cmpsl
and
test
push
push
vshufps
sbb
adc
orb
stos
loopne
mov
cmp
lods
sub
jnp
test
repz
call
sbb
jecxz
sbb
addr16
xchg
mov
outsb
mov
or
data16
imul
pinsrw
and
mov
or
lods
and
jo
lods
shlb
hlt
pop
daa
inc
and
imul
sub
inc
xchg
adc
mov
cmpsl
insb
lret
mov
add
mov
stos
fisttpll
sub
clc
lock
xor
jo
loopne
mov
mov
or
out
cmp
mov
jnp
ret
or
push
and
mov
push
cltd
lods
das
xchg
xor
mov
mov
and
push
test
pop
inc
aas
jne
sub
cmpsb
in
jle
xor
push
adc
sbb
pop
pop
movsl
aaa
pop
into
push
pop
cld
inc
shrl
fcoml
test
sub
xor
stos
mov
daa
xchg
adc
popa
outsb
data16
jmp
and
repz
in
aaa
je
adc
and
cmpb
cltd
push
xor
outsl
loop
xor
out
sub
enter
jo
ret
stos
pop
scas
jl
mov
int3
sbb
int
push
arpl
mov
sub
dec
inc
aad
jmp
cmpsl
test
cmp
stos
rclb
cltd
andb
adc
sti
mov
push
inc
mov
addr16
mov
xchg
mov
lea
sbb
xchg
dec
cli
jge
push
imul
and
clc
mov
nop
outsl
push
in
aaa
sarl
push
sbb
stc
sarl
stc
loop
jge
and
sti
loope
sub
mov
and
ret
or
add
out
gs
push
inc
dec
fldenv
sub
aam
ja
stos
adc
ret
nop
and
dec
cltd
push
gs
dec
push
jle
pop
inc
or
and
into
and
icebp
mov
es
jg
js
push
lea
arpl
stc
repz
ret
mov
test
adc
scas
push
nop
mov
xlat
mov
cmp
out
nop
repz
es
and
jmp
jg
pushf
fists
ror
lock
popa
and
pop
cmpsl
mov
jbe
es
mov
pop
stos
and
dec
sub
in
notl
repnz
fs
mov
js
push
idivl
pop
shrb
dec
and
lret
enter
roll
sahf
push
add
in
jnp
lods
add
nop
repz
lret
mov
sbb
pop
lock
loopne
jnp
aas
jmp
mov
sbb
or
stos
std
sub
imul
data16
mov
decl
inc
lret
into
bound
rcrb
push
push
cmpsl
es
pop
iret
and
ret
add
rol
push
cld
mov
rclb
xor
rorb
inc
daa
and
int
xor
sbb
sbb
mov
mov
add
mov
mov
rolb
sahf
aam
and
add
pop
cwtl
shll
cwtl
cmp
lods
out
add
aad
xchg
test
lret
mov
out
mov
cs
inc
in
pop
test
hlt
loope
mov
mov
sti
adc
cmp
xor
sahf
pop
test
into
xor
inc
sub
mov
adc
pop
aas
hlt
sahf
call
xchg
or
adc
loope
out
loope
fsubrs
jno
aas
inc
cld
insb
lods
sbb
bound
and
push
loopne
pop
inc
inc
cmp
jnp
shr
sub
mov
push
lds
pop
adc
lret
fsubrs
je
and
lahf
or
sbb
gs
and
adc
repz
idivb
fcmovnu
aad
fdivs
pusha
push
xchg
out
adc
outsb
mov
sbb
fs
push
sub
mov
ficoms
mov
sar
push
lret
dec
push
pop
adc
add
in
push
imul
push
dec
jg
add
loopne
out
jg
rorb
dec
andl
push
daa
sti
in
jns
mov
inc
fisttpll
int
sbb
sti
add
out
adc
test
xor
mov
and
das
sbb
pop
sbb
dec
xchg
iret
jg
rep
bound
sbb
scas
mov
sbb
out
test
scas
inc
aas
adc
push
testl
inc
outsl
adc
lahf
out
xor
mov
and
xlat
in
mov
and
adc
sub
lahf
in
sbb
mov
ret
xchg
fdivrs
sti
sub
out
sub
inc
add
pop
adc
repz
cmp
cmp
sub
ret
in
lock
xchg
sub
in
push
and
jne
adc
xlat
insb
cmp
cmp
leave
inc
lods
es
add
adc
pop
cmp
push
pop
pop
ficoml
rclb
and
in
inc
dec
inc
out
sbbb
hlt
loope
daa
cmc
and
cmc
and
inc
xor
inc
jo
aad
adc
stc
clc
xchg
das
dec
cmp
pop
inc
sub
in
inc
or
xor
xchg
fisubrs
dec
cs
and
add
push
mov
ret
jns
call
mov
adc
or
ja
out
push
jne
adcl
xor
daa
or
mov
std
mov
mov
sti
test
sbb
dec
leave
mulb
lods
push
push
push
sbb
sub
pop
push
jnp
push
mov
leave
jbe
jle
or
cmp
inc
cmp
shlb
jmp
fs
pop
sub
fdivs
ja
jne
add
fsts
add
or
dec
popa
push
nop
sub
inc
int3
or
cmp
rclb
push
mov
sub
cmp
xor
adc
test
pusha
scas
sbb
cmp
push
or
adc
or
jge
sbb
mov
inc
pop
inc
mov
pop
push
pop
pop
adc
enter
pop
pusha
inc
sub
push
xchg
aas
xchg
mov
adc
popa
jb
arpl
sbb
and
clc
arpl
sbb
and
mov
sub
adc
pop
shrb
test
sub
adc
and
adc
hlt
dec
addr16
pop
loopne
cmp
xor
sub
or
dec
inc
sbbl
and
jne
dec
xor
sub
xchg
imul
mov
adc
lahf
mov
pop
in
xchg
jmp
aaa
jnp
arpl
pop
fs
jmp
daa
jle
ret
je
xchg
jecxz
mov
sub
lods
cmp
or
out
mov
dec
cmpsb
sub
xchg
xlat
mov
dec
call
addr16
dec
pushl
lcall
popa
out
jns
cmp
sbb
lahf
jno
and
push
inc
popf
fxch
and
sbb
hlt
mov
inc
adc
test
jmp
jmp
xor
nop
sub
bnd
incl
dec
xlat
stc
mov
sti
in
xchg
cli
cmp
sbb
inc
arpl
cmpsb
jl
mov
test
inc
cwtl
push
pop
loop
and
enter
iret
addr16
mov
jnp
jmp
cmp
pop
or
inc
movsb
mov
inc
lods
jmp
rcrb
cmp
out
dec
stos
nop
jnp
pop
sub
sbb
jne
add
sbb
sub
add
jg
enter
cmp
inc
adc
dec
jmp
test
movsb
cmpb
xchg
pop
jbe
aaa
hlt
fwait
test
inc
lahf
sbb
pop
jg
or
sti
or
enter
je
sbb
and
add
mov
inc
mov
or
ss
adc
sti
popf
pop
in
jbe
nop
cmp
inc
mov
lahf
dec
fnstcw
jecxz
cmp
adc
inc
dec
out
sarb
adc
data16
pushf
sub
iret
pop
hlt
xor
xor
mov
cmp
add
jbe
cmp
mov
mov
bound
pop
push
addr16
push
inc
lcall
inc
sub
mov
mov
ficompl
or
clc
inc
pop
pop
inc
sbb
neg
xchg
test
nop
stos
insl
adc
cmpsb
adc
sub
push
jecxz
mov
sub
cmp
jb
inc
or
adc
adc
adc
dec
adc
sarb
inc
dec
addr16
cltd
sub
push
push
prefetch
push
or
in
jno
pop
insl
adc
nop
jecxz
and
test
pop
mov
push
addr16
cwtl
push
out
pop
je
jnp
push
and
aaa
jl
movswl
add
clc
ficomps
cmp
shlb
adc
fs
sub
mov
and
jp
dec
repnz
or
xchg
adc
loop
add
adc
test
adc
scas
and
xchg
je
aad
inc
jbe
icebp
push
jmp
fcmovbe
out
and
adc
jp
sar
jl
cmp
outsb
sbb
lret
imul
xchg
jo
sbb
xchg
scas
imul
test
in
arpl
xchg
xchg
push
xor
ss
sub
push
sti
lds
subb
or
pop
bound
cmp
bound
adc
outsb
sbb
aaa
push
adc
push
loopne
sbb
sbb
int
sbb
push
pop
and
mov
pop
stos
fwait
adc
shl
mov
cltd
sub
push
add
push
inc
ss
popa
pop
cltd
sub
dec
daa
sbb
sar
and
jne
sub
mov
fldenv
out
iret
sbb
and
inc
shlb
xchg
pop
movsl
addb
movsl
fs
sub
orb
leave
sti
cltd
lcall
xchg
jne
mov
add
testl
add
popf
dec
sub
xchg
movsl
jg
jge
and
ror
sbb
mov
gs
aaa
mov
rorl
addr16
cmp
jmp
inc
xor
dec
inc
or
ja
xor
loopne
mov
idivl
aad
add
sbb
jmp
pop
sub
movsb
nop
dec
jo
imul
or
ret
dec
lahf
dec
nop
cmp
jnp
test
cltd
imul
add
clc
xor
test
xor
xor
cmp
sbb
xchg
repnz
adc
cmpsb
inc
jecxz
icebp
adc
dec
lock
sbb
shll
fiadds
pop
std
inc
lds
pop
adc
inc
adc
xchg
sbbb
mov
dec
cmpsl
mov
jb
into
sub
aam
adc
mov
test
arpl
push
sub
add
nop
shl
lcall
addr16
dec
mov
jae
pop
pop
adc
and
push
sbb
jmp
iret
in
aad
orl
inc
add
mov
adc
les
and
pop
dec
adc
adc
or
sub
push
jbe
inc
jnp
push
dec
add
nop
jae,pn
or
or
clc
sbb
ds
push
fst
js
jg
sbb
inc
push
adc
fwait
mov
shrb
jmp
mov
dec
inc
jns
in
rcrl
test
cs
psubusb
jne
mov
xor
and
dec
cmp
or
push
dec
daa
inc
nop
inc
xor
std
aas
mov
nop
shlb
je,pt
dec
in
and
or
dec
push
dec
inc
rorl
test
add
push
sti
push
xchg
jno
pop
cmp
cmp
xchg
push
pop
icebp
sub
pusha
add
mov
xchg
hlt
mov
nop
test
inc
loope
bound
imul
push
or
sub
lods
adcb
pop
inc
pop
jns
adc
or
push
jo
sti
loop
cwtl
les
and
sbb
push
sti
fs
mov
add
push
daa
fwait
and
cmpsl
pop
out
mov
push
lock
adc
jecxz
cmp
mov
jecxz
sub
lods
xchg
sub
nop
js
jo
mov
xor
dec
or
mov
repz
enter
jnp
mov
jo
ljmp
add
jle
push
shlb
push
jns
mov
xchg
cmp
leave
mov
add
sub
xchg
dec
enter
jno
sub
inc
fisubl
sti
xor
jmp
jle
push
pop
adc
ja
addr16
sub
xor
nop
imul
mov
das
jge
xchg
test
ja
push
pop
cwtl
push
sub
out
adc
imul
sbb
sub
int
mov
dec
ror
cltd
imul
xorb
sahf
int3
inc
aas
clc
inc
sbb
incb
les
nop
shll
xchg
xlat
inc
sti
in
pop
and
mov
rorl
add
out
nop
push
cmp
push
mov
scas
dec
outsb
dec
sub
or
jno
push
pop
mov
adc
mov
push
sbb
mov
or
aaa
leave
rcrb
sbb
sub
shrl
movsl
push
cmp
idivb
and
daa
push
dec
xor
cmp
out
int
icebp
or
or
test
sti
inc
lods
ficoml
xor
in
repnz
imul
cmp
push
sbb
filds
and
sbb
fwait
sub
es
adc
les
and
or
jns
inc
pop
lcall
dec
mov
xlat
cmp
lea
push
pop
mov
daa
and
and
add
lcall
push
xchg
xchg
adcb
jae
icebp
les
pop
and
jb
lods
jae
lcall
icebp
sub
dec
cs
stc
cli
push
loopne
and
dec
lock
js
mov
in
jecxz
les
insb
and
fsts
sar
incl
cmp
pop
insl
push
sbb
cmp
push
test
pop
mov
inc
inc
sub
and
pop
ret
adc
cli
cmp
mov
xchg
das
xchg
adc
ds
and
rclb
sbb
subb
mov
arpl
mov
in
or
sub
mov
addr16
sahf
icebp
mov
bound
cmp
mov
or
enter
sub
pop
jmp
mov
xchg
rorl
xorb
push
push
ret
shrb
aaa
xchg
iret
push
sahf
jecxz
or
add
mov
mov
xor
cmpsl
pop
and
inc
adc
enter
mov
dec
jns
or
int
mov
dec
xor
push
adc
dec
lods
sbb
xchg
leave
js
cli
add
fs
sar
inc
xchg
test
adc
les
ret
inc
out
sub
sbb
xchg
sbb
xchg
push
xor
mov
cmp
sub
sbb
pop
lcall
push
and
pop
cmp
lea
pop
mov
imul
pop
adc
lcall
push
inc
sbb
mov
sbb
inc
adc
or
pop
cmp
mov
sub
xor
add
xor
pop
aaa
dec
push
stos
mov
les
outsl
adc
jecxz
test
inc
adc
test
lea
jne
mov
adc
nop
mov
enter
enter
jl
adc
and
pusha
imul
nop
inc
int
mov
push
and
dec
jnp
gs
test
shlb
sbb
sub
or
out
mov
movsb
mov
and
jmp
adc
js
push
testl
jns
xchg
mul
in
push
ja
test
imull
dec
ja
fwait
dec
sub
mov
mov
enter
push
adc
jno
xor
cli
stc
inc
int
ficoml
xor
outsb
mov
adc
das
es
popa
push
inc
icebp
inc
js
adcb
jnp
dec
xchg
mov
das
jp
lret
aad
dec
adc
or
aad
test
dec
aas
sub
inc
jno
add
push
sti
cli
pop
cmp
push
or
dec
jo
cmpsl
hlt
mov
mov
cwtl
and
cmpb
adc
xchg
loop
inc
into
cmp
adc
adc
mov
in
aaa
xchg
dec
dec
hlt
jnp
jecxz
ds
and
jno
lahf
imul
in
insl
das
and
stos
xorb
sub
inc
clc
pop
ret
sub
sarl
orb
sarl
mov
sbb
xchg
into
jecxz
pop
sbb
test
add
inc
add
pop
gs
aad
cmc
adc
test
mov
pop
inc
xor
or
rolb
sbb
adc
or
cmp
mov
clc
xchg
cld
push
inc
inc
stos
jns
imull
gs
shrb
in
mov
adc
dec
rorb
jae
dec
xlat
or
inc
iret
jae
fisubrs
dec
repz
loopne
lds
sub
push
sbbb
movb
shl
mov
inc
pop
inc
fidivrl
inc
addl
cmp
dec
push
sti
mov
lds
aam
inc
jnp
aaa
dec
pop
add
pop
mov
and
sbb
fisubl
fwait
xchg
pop
decl
dec
aam
inc
pushl
fadd
clc
lret
dec
cmp
cmpsl
xor
movsb
jmp
inc
lds
and
push
inc
or
hlt
lds
es
cvttps2pi
adc
adc
test
popl
pushf
sub
xchg
jecxz
adc
pop
mov
ljmp
mov
pop
jnp
test
data16
fsubs
cltd
inc
in
sarl
dec
clc
les
mov
movsl
scas
xor
jge
push
aaa
add
insb
push
jbe
je
in
xor
mov
fs
test
mov
lods
xor
movsl
push
out
push
push
xchg
roll
xor
adcl
cld
fistpll
jg,pn
scas
cwtl
pop
dec
ja
shlw
jg
cmp
addr16
or
stc
or
fistl
sbb
movsl
sub
push
mov
xchg
dec
icebp
mov
dec
in
push
inc
xor
sbb
das
inc
cli
xchg
jo
adc
xchg
fs
mov
mov
xchg
sbb
gs
sub
sub
push
mov
jb
push
jno
sbb
cmp
push
mov
push
add
and
push
mov
push
dec
and
stos
push
pop
push
push
cmp
leave
test
in
dec
fwait
cmp
cmpsl
les
sub
xchg
sbb
data16
mov
clc
pop
mov
sbb
sub
pop
mov
sub
cmp
dec
das
sbb
sbb
push
pop
adc
adc
sbb
or
mov
pop
or
adc
rorb
inc
fildl
xor
lock
dec
sbb
lock
push
movsb
mov
dec
sub
and
jl
sub
xchg
pop
mov
sbb
lods
push
xor
and
xchg
push
cltd
pop
or
lahf
mov
sbb
xchg
pop
sub
inc
test
lock
mov
lcall
or
mull
mov
fwait
enter
cmc
push
daa
pusha
fstps
dec
mov
push
add
push
scas
sbb
sti
sbbb
push
dec
inc
push
mov
pop
push
pop
enter
std
and
inc
aas
test
adc
sub
pop
adc
jnp
fbld
jmp
lock
je
movsb
add
jnp
inc
test
cmpsl
shrl
dec
xorl
nop
xor
sbb
dec
xchg
cltd
push
imul
inc
push
orl
cmp
adc
add
push
fs
pop
and
rorl
xchg
push
hlt
xchg
xchg
add
or
or
mov
or
and
jle
cmp
mov
aas
cmp
push
rcll
ss
and
pop
and
sbb
lcall
jb
jo
xchg
loopne
mov
test
int3
dec
fwait
mov
jnp
dec
and
pop
pop
or
adc
in
dec
inc
divl
xchg
mov
test
adc
insb
sub
sbb
test
cmp
movsl
mov
in
sub
add
adc
mov
frstor
ljmp
movsl
lock
rol
pop
mov
ret
cmp
sub
xchg
sbb
cmpsl
xor
dec
jecxz
lret
nop
or
jg
daa
pop
inc
sbb
or
movsl
bound
inc
mov
shr
cmc
dec
fisubrs
cmp
dec
pop
jl
rcll
andb
inc
sub
mov
imul
sti
sbb
je
addr16
inc
negl
cs
jae
mov
xchg
lret
mov
adc
dec
mov
pop
enter
cmp
test
pop
xchg
jbe
cli
jl
jmp
mov
ficomps
clc
push
lahf
mov
dec
xor
jg
add
sbb
les
mov
mov
cmpsl
sub
push
adc
loopne
push
xor
adc
out
add
sub
aaa
pop
dec
mov
jbe
sbb
mov
cs
and
movsl
adc
sbb
xor
mov
cmp
popa
and
and
xchg
cltd
pop
lock
pop
push
stos
scas
pop
nop
gs
xlat
xorb
rcll
sahf
push
and
adc
mov
mov
mov
jmp
fadds
pop
push
xchg
daa
inc
inc
sti
daa
std
jmp
ss
pop
xor
or
push
push
cmp
addr16
cs
test
and
sbb
es
test
test
pushf
dec
loop
xchg
ljmp
fs
xchg
sahf
pusha
inc
sar
sbb
cmp
sub
xor
cmp
lds
lods
clc
mov
and
push
fistpll
testl
jo
pop
js
sti
and
push
leave
or
in
std
jecxz
push
outsl
daa
dec
jne
xor
dec
pusha
mov
loope
push
jge
fisttps
imul
pushf
push
fwait
dec
xor
fisubrs
push
dec
mov
push
jns
or
pusha
cltd
test
adc
addr16
adc
imul
js
sbb
pusha
xchg
push
sub
pop
fdivrl
hlt
or
or
icebp
mov
sti
push
out
jg
xchg
xchg
dec
sti
pop
int
movups
push
mov
sbb
mull
stc
inc
stos
cwtl
push
or
sbb
mov
in
xchg
jnp
adc
rorl
iret
clc
adc
jnp
push
fsubrs
cwtl
jb
mov
aam
flds
inc
sar
jecxz
dec
push
xor
stos
arpl
ja
pop
and
jb
fstpt
subl
push
mov
push
xchg
mov
ss
add
cltd
inc
out
fwait
add
cmpsl
popl
and
dec
fildl
sbb
jno
dec
aam
ret
sbb
in
out
out
push
popf
gs
loop
lods
clc
dec
enter
and
shrl
and
mov
cmp
adc
xchg
pop
mov
push
gs
cs
sti
mov
push
pop
add
jo
sti
mov
enter
test
leave
jmp
insl
or
push
and
push
lret
std
das
std
xchg
xchg
in
xor
aaa
into
in
and
cltd
divb
pop
inc
shr
subb
ds
lret
adc
cmp
fwait
adc
pop
or
cwtl
adc
lsl
add
adc
loopne
jbe
enter
jg
rcrb
fnstcw
or
xchg
mov
lods
adc
push
mov
dec
mov
sub
scas
clc
or
push
movb
outsb
out
daa
lods
mov
cli
or
aad
pop
in
subl
sub
xor
adc
in
inc
dec
push
and
xor
dec
mov
popa
rorb
pop
adc
xor
add
inc
jp
dec
mov
inc
rcrb
add
jb
and
push
icebp
dec
in
sbb
push
fdivl
mov
push
sbb
aam
and
cmc
and
dec
add
shrb
clc
xchg
in
sti
stos
pop
rorb
adc
movsl
add
and
add
enter
inc
scas
mov
inc
iret
ret
or
mov
and
aad
push
dec
jmp
imul
rcr
ret
stos
adc
test
dec
mov
clc
pop
das
push
lds
xchg
test
push
pop
xor
jae
test
sbb
icebp
xlat
xor
mov
sub
dec
push
and
ret
pusha
sub
adc
leave
pop
in
mov
movsl
pop
fsubrl
adc
add
cmp
jo
cmpsb
dec
xchg
lcall
scas
sbb
mov
test
clc
push
test
xor
cs
inc
jmp
rcrl
enter
ret
adc
lods
andb
ds
in
cmc
cs
and
xchg
in
jmp
and
inc
cmp
adc
lcall
push
and
jecxz
pop
out
dec
sub
push
lcall
add
shlb
push
shlb
popa
inc
pop
and
dec
test
inc
or
popf
sub
adc
out
enter
lock
ss
adc
push
test
mov
sti
pop
mov
and
scas
mov
dec
cmp
jb
sbb
xor
xchg
pusha
ret
daa
push
jo
shr
adc
adc
shl
pop
dec
sbb
inc
shr
adc
aaa
xchg
jmp
inc
jge
mov
lret
mull
or
jle
sub
sbb
nop
lds
pop
pop
adc
aaa
sub
nop
shrb
lcall
pop
jl
add
sbb
mov
hlt
push
fs
mov
imul
imul
or
mov
cmc
pop
and
sub
jne
jl
xor
cwtl
pop
gs
cmp
and
mov
nop
lock
and
push
pop
data16
inc
pop
dec
dec
dec
shl
push
aam
addr16
add
cs
inc
adc
std
cmp
jmp
lcall
mov
scas
sub
cmp
add
pop
int
roll
in
or
mov
mov
aad
clc
or
sbb
icebp
shrl
fisttps
adc
pusha
dec
jge
mov
xchg
dec
movsb
dec
and
pop
sbb
adc
jbe
sub
addr16
ss
notl
adc
mov
or
add
inc
mov
rcrl
or
ret
push
fstps
mov
imul
adc
mov
push
aaa
arpl
sub
inc
mov
pop
adc
and
adc
xor
lahf
xchg
adc
cs
push
pop
imul
or
push
sti
mov
pop
pop
adc
adc
adc
arpl
arpl
lods
cmp
mov
ds
and
adc
push
mov
xchg
dec
add
cwtl
cli
pop
hlt
inc
ret
inc
add
fmull
mov
mov
pop
add
enter
cmpsw
or
stc
push
aas
cwtl
push
mov
cmp
push
inc
push
popa
sbb
fdivr
push
mov
add
clc
into
jnp
adc
or
das
adc
mov
xor
sti
enter
arpl
sti
cmp
mov
loop
test
and
clc
pop
xchg
cmp
stos
adc
sti
xor
fisubs
sti
and
adc
sub
add
clc
repz
mov
dec
mov
sti
adc
fildl
add
jp
out
push
shrb
call
pop
sbb
outsl
mov
insb
push
adc
test
test
jp
bound
inc
aas
pop
mov
xor
sub
pop
push
mov
or
or
dec
dec
dec
test
adc
jecxz
call
jb
outsl
subl
dec
and
xlat
es
adc
or
xor
shlb
mov
pusha
imul
sbbl
popa
adc
inc
push
sti
lea
jge
dec
fisttps
and
aas
ret
cmp
dec
inc
or
inc
and
mov
aad
adc
inc
cmp
or
data16
pushf
mov
out
imul
cmp
int3
and
loopne
xorb
jb
icebp
and
clc
and
add
shr
dec
data16
add
adc
inc
jge
inc
ss
push
pop
inc
adcl
jge
ljmp
pop
push
gs
mov
and
mov
sbb
cs
int
mov
jbe
nop
outsl
lcall
les
test
test
pop
inc
push
int3
pusha
jmp
xchg
push
ljmp
sti
inc
jae
insl
push
imul
pop
out
push
mov
adc
adc
xchg
or
adc
adc
jmp
leave
cli
pop
lret
lahf
pop
and
testb
adc
and
movsb
push
out
imul
xor
insb
pop
cmpb
stc
sbb
adc
outsl
mov
stc
add
andb
cli
test
add
sbb
cmp
cwtl
outsb
xlat
sbb
adc
inc
shrb
mov
jecxz
andb
ret
popa
jecxz
sbb
sub
aad
insb
sbbb
insb
je
xchg
shlb
xor
jno
mov
insb
xchg
jbe
stc
xor
sbb
xchg
and
out
cld
xor
jl
dec
adc
jae
push
inc
out
sbb
push
daa
xchg
xor
in
ficoml
jp
nop
and
loop
repnz
adc
and
rcll
cltd
xor
fwait
mov
rcll
sub
push
cli
jne
xchg
and
repz
aad
movsl
lods
adc
call
mov
mov
jle
shrb
pop
pop
out
test
fwait
lret
imul
push
sbb
insl
sbb
cltd
jl
push
and
repnz
lods
sbb
push
repz
loop
mov
jmp
cmp
mov
push
adc
cmc
and
outsl
les
jp
mov
insl
push
mov
mov
int3
adc
pop
cmp
inc
or
addr16
push
call
aam
xchg
pop
jmp
push
sub
aaa
dec
push
popw
xor
sub
mov
andb
shlb
and
pop
sub
popa
int3
push
mov
push
pop
sub
adc
dec
and
inc
inc
or
jns
fists
bound
inc
ret
inc
pop
mov
roll
pop
jmp
aam
lret
cli
and
xchg
pop
dec
lret
inc
and
sub
adc
mov
push
push
adc
jmp
and
add
mov
das
and
stos
add
out
or
popa
adc
mov
cs
fsts
or
popa
push
icebp
test
pand
movsl
ret
sarl
mov
sbb
or
in
lret
scas
jns
mov
pop
sbb
orl
popa
test
call
inc
adc
mov
pop
inc
pop
sbb
test
adc
push
daa
xchg
and
gs
mov
in
clc
dec
out
pop
cmp
pop
push
cmp
imul
fwait
inc
nop
pop
dec
or
out
in
lret
mov
mov
adc
ret
mov
inc
mov
fs
push
push
imul
stos
xor
leave
ret
or
inc
jo
stos
xor
dec
add
mov
jns
cmpsb
cmp
sub
lret
dec
add
lret
mov
pop
jns
pop
sub
dec
sbb
add
popf
cmp
inc
mov
repnz
cmpxchg
mov
lcall
mov
dec
gs
scas
ss
ds
orb
aaa
rcll
mov
cltd
push
xor
out
adc
sub
out
dec
and
jmp
or
lock
fnsetpm(287
dec
arpl
fdivr
in
push
add
mov
push
cwtl
mov
dec
fs
sbbb
add
dec
sub
aaa
sbb
jns
jbe
xchg
or
dec
inc
inc
jmp
sbb
sub
pop
out
mov
and
bound
push
lret
or
or
or
adc
pusha
lret
or
ja
fwait
add
arpl
std
clc
push
push
add
push
sub
insb
cltd
repnz
daa
insb
adc
add
aam
mov
or
push
adc
or
or
scas
out
clc
ja
push
repz
push
inc
lret
mov
cs
add
sub
fadd
xchg
jnp
dec
inc
cwtl
imul
sbb
sub
add
adc
lods
mov
fcoms
jecxz
ljmp
fmull
test
fisubl
cltd
mov
inc
pop
dec
sbb
xchg
lock
nop
jle
dec
ljmp
lret
addr16
iret
adc
or
daa
push
mov
adc
mov
in
jo
pop
out
out
and
mov
ds
mov
push
mov
jmp
sub
adc
xor
xor
dec
fcoml
hlt
add
mov
mov
sub
sbb
mov
sbb
sbb
sbb
xor
sub
movd
mov
push
inc
push
and
add
fcompl
nop
cld
adc
adcl
dec
sbb
cltd
add
imul
fdivs
fdivrs
dec
push
pop
cmp
aas
and
jp
xchg
and
in
ret
mov
aaa
mov
loope
sbb
xchg
add
adc
pop
iret
and
jmp
and
in
gs
add
sbb
imul
sub
cmp
loopne
in
add
xchg
aam
inc
sbb
popa
pop
mov
xor
mov
adc
repz
adc
or
xor
cltd
icebp
sub
cld
ja
adc
or
pop
nop
fbstp
inc
fimull
sarb
inc
mov
andl
inc
push
push
sbb
jg
lahf
inc
xchg
outsl
mov
jg
adc
popf
negl
sti
mov
mov
mov
pop
lods
out
dec
movsb
test
mov
js
icebp
fs
or
dec
jecxz
les
nop
or
fs
xor
push
movsb
push
mov
or
sahf
and
shrb
and
in
cmp
push
out
in
icebp
inc
xchg
and
lret
jecxz
xor
mov
adc
les
dec
jnp
fwait
enter
fcoml
inc
cmp
gs
mov
or
jnp
cwtl
and
mov
push
cld
xchg
jle
lahf
sub
dec
lods
loop
lret
scas
inc
inc
push
pop
jl
pop
sbb
nopl
inc
aaa
aas
mov
adc
xchg
pcmpeqb
adc
mov
dec
add
dec
sbb
sahf
cwtl
push
and
jae
jnp
or
lahf
dec
mov
adc
adc
push
adc
mov
scas
ror
mov
lret
pop
dec
xor
mov
dec
sbb
jecxz
and
and
outsl
in
cmp
mov
push
pop
shr
insl
push
popf
or
sub
sub
daa
pop
mov
dec
cmc
and
adc
and
jns
sti
add
cli
mov
test
push
jecxz
jl
pop
cld
or
aaa
sub
repnz
test
gs
test
stos
cmpsb
ret
into
dec
jmp
jo
iret
repz
jge
in
xchg
clc
push
mov
xchg
shll
out
add
and
mov
jnp
insb
lock
sti
push
and
insl
daa
sti
imul
fcoms
enter
daa
pop
shlb
mov
push
push
adc
popf
push
xor
and
pop
adc
mov
mov
xor
pop
or
cmpsl
pop
fidivs
inc
cmp
out
mov
outsb
in
lea
aam
fbstp
fisttps
jle
int3
outsb
out
pop
in
lea
cld
cmp
and
jl
inc
shlb
rcl
xor
stc
fisubs
mov
and
shl
movsb
rorl
cmpsl
cld
inc
xchg
xchg
mov
dec
outsb
ja
push
fs
jns
dec
mov
dec
in
dec
jo
jo
mov
sahf
or
pushf
adc
dec
dec
xchg
pop
aaa
xor
adc
push
adc
popf
data16
mov
pop
out
mov
jns
xchg
fbstp
cmpsb
and
or
pop
jge
nop
repnz
push
bound
popf
jmp
adc
mov
mov
pop
adc
adc
add
or
push
xchg
xchg
push
cmp
sub
and
sub
pop
jo
or
jecxz
lahf
sub
pop
and
jmp
pop
xor
dec
clc
adc
in
movsl
bound
or
mov
sbb
sub
mov
in
sub
inc
fstl
popf
sub
xchg
pop
push
adc
imul
jmp
dec
cmpsb
call
xlat
xor
sahf
mov
or
das
seta
sbb
std
pusha
mov
mov
int3
ja
cmp
xchg
jle
fsubl
inc
pop
fildll
mov
add
scas
sahf
push
int
out
aad
setle
adc
xchg
andl
ljmp
sub
xchg
dec
subb
xchg
jne
imul
das
adc
push
aaa
jp
jmp
xor
pop
sub
push
dec
add
xchg
adc
mov
mov
cmp
mov
aaa
ds
fprem
fcomp
pusha
jmp
or
inc
js
xor
or
inc
scas
in
lahf
loopne
or
jp
rcrb
outsl
sub
pop
pop
or
sti
cmp
movb
pop
xor
sahf
pop
movsl
xor
subl
mov
sbb
sbb
lcall
fcmovnu
xchg
stc
lret
pop
or
and
sub
imul
fs
cwtl
in
xchg
int
mov
xchg
and
sub
and
jnp
pushf
dec
push
cld
dec
test
mov
mov
inc
loopne
push
dec
adc
jns
pop
adc
lods
and
shlb
lret
mov
jnp
xorl
dec
fidivrs
bound
cs
push
sbb
adc
decl
jo
pop
xor
arpl
outsl
stos
add
add
jecxz
cs
cld
push
outsl
in
inc
adc
clc
shlb
cld
xchg
das
jnp
lods
jle
sub
inc
push
or
fs
mov
stos
sub
pushf
orl
adc
sbb
shlb
pop
pop
sbb
js
dec
dec
cwtl
lahf
rcr
lahf
int3
add
fwait
pop
pop
cmpsb
fnstcw
push
sahf
or
mov
cmpb
mov
iret
clc
cltd
arpl
xchg
or
pop
cs
test
test
push
inc
xor
aas
and
aaa
inc
sysret
mov
adc
and
xor
pop
mov
dec
icebp
inc
jae
inc
jg
mov
nop
push
mov
sbbl
subb
cltd
jmp
or
nop
or
xorl
pop
cltd
xchg
xchg
or
scas
mov
adc
sub
jbe
and
mov
addb
into
nop
mov
fwait
jno
mov
jbe
lods
push
sbb
hlt
cmp
jb
sub
adcb
xor
adc
or
cmp
jmp
xor
rorl
aas
jl
mov
cwtl
rcll
xchg
scas
sarb
mov
in
xor
mov
test
andl
dec
cmp
xor
pop
cmp
cmp
iret
sub
jb
jnp
inc
int3
pushf
bound
push
sbbb
sti
out
shrb
inc
cmpsb
aas
and
pop
rcrb
or
push
push
rcl
adc
add
adc
and
adc
test
loop
inc
outsl
repz
cmp
insl
lea
sub
daa
in
and
fbld
dec
pop
push
adc
jne
mov
xor
sub
movsl
pop
adc
or
mov
lret
jbe
cwtl
roll
lret
mov
subl
pop
aaa
inc
aam
xchg
fldt
popa
pop
and
ret
outsw
xorb
in
ret
mov
in
push
adc
adc
out
and
fnstenv
xor
fisttpl
mov
adc
xchg
push
and
mov
aas
nop
push
scas
push
in
daa
movsb
or
adc
rcr
insb
aas
sub
pop
aam
cmpsl
jg
cmp
or
cwtl
or
or
pop
dec
mov
mov
mov
xchg
imul
cmc
lods
mov
jge
cmp
cmp
mov
and
icebp
jge
cltd
adc
xchg
fwait
adc
mov
add
adc
jmp
add
add
in
mov
pop
jbe
les
les
push
add
gs
clc
mov
aas
dec
std
fcoms
sti
daa
dec
ret
mov
subl
sar
loope
sbb
pop
idivl
popf
loopne
sar
pop
out
leave
outsb
and
sbb
sti
xor
adc
cmpsb
bound
push
in
nop
pop
icebp
or
shll
pop
sahf
push
sbb
pop
add
cltd
push
sub
xor
mov
add
stc
pop
shr
sbb
sub
xor
or
fcompl
or
or
sbb
inc
xchg
cmpsl
sub
inc
xchg
sub
xchg
mov
aas
sti
inc
cli
push
cmp
pusha
mov
cmp
test
pop
adc
loop
inc
enter
add
add
add
xchg
adc
subb
dec
mov
ret
sub
sbb
imul
gs
sbb
jmp
jecxz
mov
lret
adc
test
sbb
xor
mov
fsubl
dec
xchg
mov
mov
push
sbb
or
ss
jbe
and
or
mov
fiaddl
xchg
pusha
push
sbb
xchg
icebp
cmp
push
jecxz
lcall
mov
sti
jge
xor
jecxz
lret
jge
xchg
jne
cmp
xor
fwait
mov
pop
arpl
mov
jo
mov
mov
jae
push
or
jb
cld
or
or
or
adc
push
mov
shl
inc
data16
ljmp
adc
imul
aas
stos
or
scas
dec
mov
push
lahf
inc
mov
lcall
and
test
dec
or
lret
push
jmp
push
or
ljmp
pop
mov
pop
mov
xchg
jl
sub
xor
lret
and
arpl
adc
jg
adc
push
pop
aad
or
inc
jecxz
xchg
mov
clc
or
xchg
jle
mov
add
or
lret
adc
clc
push
ds
xor
xor
cli
in
call
sbb
out
loopne
jecxz
ja
jl
push
pop
loopne
adc
popa
xor
loope
jecxz
pop
adc
cwtl
push
aad
rorl
lret
inc
sub
outsl
adc
int3
or
inc
outsl
add
inc
fildl
orb
xor
adc
gs
cmp
cli
sub
nop
mov
jge
pop
add
test
push
movsb
rolb
je
lods
in
nopl
or
andps
cmpsl
mov
in
sbb
inc
ret
lret
inc
enter
nop
bswap
or
sbb
mov
pop
push
mov
dec
dec
push
mov
mov
sub
xchg
dec
push
dec
jl
push
mov
or
jecxz
outsb
mov
imul
sbb
sub
pop
inc
cltd
adc
pusha
repz
jg
jne
int
aaa
ljmp
xor
adc
dec
adc
mov
push
into
mov
daa
fbstp
xor
pop
mov
jbe
mov
les
or
clc
sbb
dec
repnz
and
cmp
jnp
hlt
arpl
inc
daa
fwait
inc
cmpsb
gs
push
addl
cmpb
cmpsl
movsb
sub
in
imul
xorl
inc
adc
dec
jns
jno
fmull
xor
jle
cmp
push
flds
cmp
mov
sbb
inc
mov
push
or
xchg
dec
movsb
push
xchg
jns
adc
and
and
movsl
repnz
mov
out
mov
in
movsl
or
je
leave
shrb
loopne
mov
inc
ret
inc
cmpsl
or
je
jns
inc
and
add
push
loope
test
dec
push
ds
pop
adc
rolb
adc
and
rcll
or
dec
xchg
mov
jno
dec
sbb
sbb
jp
add
scas
rolb
pop
loop
dec
aaa
or
pop
mov
inc
adc
push
repnz
sbb
inc
dec
loop
xorb
imul
xor
mov
sub
imul
nop
leave
dec
insb
sarb
xor
add
sub
xor
sbb
or
dec
sbb
clc
pop
inc
jmp
add
shll
sub
xchg
rol
xchg
enter
loope
xchg
out
les
add
sub
flds
sbb
push
cmp
push
roll
ret
loopne
adc
and
xchg
adc
push
sti
lock
jmp
cmp
mov
arpl
pop
cmp
add
inc
pop
cs
int
jmp
sbb
push
pusha
dec
nop
lret
in
fsubrs
xlat
cwtl
jb
push
sbb
fldenv
enter
std
popa
repz
add
gs
or
sub
sahf
imul
sbb
dec
aas
dec
bound
pop
xchg
pusha
sbb
loopw
ret
lock
in
psrld
xchg
aad
lcall
gs
sbb
jmp
dec
and
fs
shlb
dec
lahf
xor
jne
les
and
sbbb
dec
outsl
xchg
orb
xchg
outsl
les
fisubrl
mov
movsb
lret
and
cmp
push
cmpsb
repz
jne
or
mov
pusha
mov
cli
call
jbe
dec
sub
xor
inc
mov
jnp
dec
push
xlat
inc
xchg
mov
push
sarb
popf
out
xchg
push
imul
daa
mov
out
jbe
pop
jmp
clc
add
enter
adc
jns
adc
push
cmp
and
sbb
jp
xor
repnz
add
or
hlt
adc
arpl
sbb
push
outsb
fnstsw
push
push
cli
js
out
clc
dec
cli
repz
jmp
maxps
aam
ds
mov
lret
and
mov
jmp
mov
add
inc
icebp
add
sub
sbb
push
inc
mov
das
cwtl
je
inc
dec
cmp
mov
sbb
shrb
xor
dec
pop
cwtl
add
mov
jne
movsl
ret
push
sbb
jle
mov
mov
pop
testb
pop
mov
lods
sbb
test
in
ja
inc
sbb
mov
ret
inc
sub
lods
outsl
aam
cmp
imul
sahf
xchg
orb
adc
sbb
mov
inc
imul
push
addr16
sbb
in
out
out
stc
mov
or
and
notb
cmp
jnp
and
and
inc
sub
aaa
scas
gs
popf
scas
jg
xchg
dec
mov
pop
mov
adc
mov
icebp
clc
inc
push
ret
push
pop
mov
sub
imul
and
xor
pop
insb
adc
movsb
mov
pusha
push
push
scas
push
test
cmp
fiadds
enter
sub
sahf
leave
in
jecxz
out
lods
daa
inc
adc
pop
ss
imul
mov
mov
push
sbb
add
add
lret
mov
in
sbb
xor
lea
push
xchg
int
inc
imulb
test
pusha
mov
dec
shl
pop
fs
and
jmp
out
mov
pop
mov
dec
dec
dec
insl
mov
das
jl
mov
sub
adc
cld
mov
loope
sti
xor
hlt
aas
mov
add
and
outsl
movsl
sbb
leave
push
pop
adc
push
push
adc
mov
xor
aas
lcall
sahf
sub
jbe
pop
xchg
cmpsb
lods
inc
rorb
clc
sbb
xchg
mov
jg
push
adc
and
aam
fidivl
push
stos
inc
lea
and
lret
cltd
movsb
pop
mov
ret
fcmovu
les
pop
mov
arpl
inc
sbb
lock
xlat
cld
ret
aad
sub
mov
ljmp
dec
inc
mov
jecxz
add
xor
cmp
mov
sub
dec
or
pop
fdivs
je
xchg
rcl
jbe
cmp
aam
je
rcrb
loop
add
cmpsb
std
cmp
ret
jnp
pop
xchg
lock
les
xor
mov
ljmp
mov
and
pop
aam
stos
or
mov
outsb
sbb
cmp
nop
mov
and
mov
pop
mov
mov
dec
sbb
mov
xor
xchg
rorb
or
xor
sti
xchg
pop
sub
sub
mov
or
shl
push
mov
xchg
movsb
and
add
pop
cltd
clc
lret
mov
push
lcall
jge
das
add
addr16
sbb
jae
test
repnz
aam
dec
aad
in
add
mov
adc
sti
lret
sbb
mov
addr16
inc
leave
dec
push
dec
adc
mov
and
in
inc
adc
add
lahf
test
mov
jae
xchg
xor
adc
in
lds
xchg
pop
hlt
das
jo
je
inc
outsl
mov
adc
and
imul
into
or
movsb
sub
jae
movsl
push
adc
clc
aas
dec
adc
jmp
sub
out
sbb
xchg
cmp
pop
sahf
and
gs
dec
in
mov
jmp
inc
inc
xor
adc
das
pop
mov
inc
stos
ja
aaa
and
adc
clc
xor
xor
inc
and
sbb
mov
imul
insl
sbb
mov
lds
sub
aad
scas
es
stos
imul
in
sahf
scas
ljmp
int3
fcomi
sub
inc
jecxz
adc
faddp
push
setp
sahf
mov
xor
mov
sbb
and
mov
add
sahf
in
in
test
pop
and
and
rclb
out
sub
xor
xor
inc
sub
cmp
push
cmp
sahf
sbb
and
mov
xlat
add
xchg
push
inc
mov
fmuls
inc
js
jmp
mov
dec
lret
cli
jnp
sbb
jbe
addl
mov
sarb
arpl
rolb
nop
out
and
ret
cmpsb
scas
mov
or
popl
ljmp
lods
cmp
push
pusha
outsb
stos
movsl
dec
xchg
sub
jnp
loop
xor
mov
sub
xor
xchg
bound
mov
fldl
pop
fcompl
jnp
fwait
push
mov
lret
mov
or
lret
sti
xor
push
mov
push
sbb
cs
dec
ret
popa
sub
pop
jmp
dec
mov
xchg
pextrw
outsb
jp
pop
xor
cli
int
add
flds
mov
sub
rcrb
adc
jecxz
pop
mov
insl
inc
inc
je
into
inc
and
jae
shr
dec
pop
in
addr16
push
icebp
mov
push
pop
mov
and
push
jns
lds
xor
lock
or
daa
test
or
mov
adc
sbb
mov
stc
clc
ret
cwtl
cmp
stos
sub
add
nop
cmp
jb
mov
leave
adc
nop
sar
push
mov
mov
lock
sti
cli
stc
loope
fdivr
leave
xchg
inc
sub
jns
mov
lret
data16
adc
je
push
psubw
pusha
push
cmp
adc
mov
jns
jnp
mov
mov
aad
int3
pop
mov
sbb
push
outsl
mov
xchg
dec
inc
es
adc
push
xor
push
xor
sub
js
pop
cmpsb
and
sti
jae
xor
aad
test
enter
push
pushf
mov
icebp
add
testl
fs
repz
ret
out
xchg
sarl
iret
fwait
popa
lds
sbb
mov
push
enter
xchg
xor
and
ja
push
mov
push
push
fbld
fs
aam
and
cmp
add
mov
sub
mov
lret
xor
sbb
mov
push
fdivl
inc
and
and
cmp
sbb
cmp
loop
std
adc
add
adc
shrb
insb
out
and
addr16
jg
in
es
add
sti
xchg
lret
pushf
cmpsl
dec
pop
mov
jle
data16
stos
push
jle
jp
stos
sub
es
sbb
or
sahf
cmpsl
adc
mov
sub
pop
enter
or
stc
jle
arpl
in
cld
push
or
pop
outsb
push
cmp
lahf
mov
das
fisttpll
iret
or
xchg
pop
xchg
and
repnz
dec
ficoml
push
inc
sub
stc
jb
cs
scas
fdivrs
xchg
pop
xchg
or
cwtl
jecxz
lcall
addr16
sub
leave
repz
cmp
movsb
xor
mov
aad
addr16
out
dec
addl
movsl
push
pop
push
and
jb
dec
sbb
pop
pop
in
mov
xchg
and
mov
push
push
cmpsl
data16
gs
xor
xor
in
jnp
pop
ds
bound
jnp
pop
pushf
dec
adc
loope
mov
xchg
add
add
popa
lds
ss
lcall
out
cmp
inc
cmp
push
mov
adc
fadds
or
les
push
cmp
add
lods
idiv
insl
xchg
cmp
out
out
ret
psrld
cmp
sbb
jns
and
sub
fldt
and
inc
push
lea
lret
pop
push
and
lods
subl
movsl
mov
test
jmp
je
rcrb
ljmp
lret
fists
mov
pop
arpl
mov
adc
and
shrb
inc
xchg
or
std
push
sbb
fisubrl
repnz
sbb
sub
enter
andl
adc
aaa
mov
cmp
cmp
das
fiadds
pop
addl
mov
sahf
and
mov
xchg
pop
push
jno
add
push
in
push
loopne
or
sub
clc
dec
das
xor
fiaddl
xor
dec
pop
out
out
mov
outsw
push
sub
sbb
lret
ret
cli
pop
push
cmp
xchg
cli
pop
xchg
rol
inc
inc
out
pop
les
mov
aaa
inc
fstps
and
dec
push
mov
shrb
decl
out
lea
mov
daa
enter
jg
sbb
cmp
mov
leave
scas
es
je
and
inc
enter
jno
addr16
or
sbb
aas
mov
aad
push
shlb
jecxz
adc
mov
pop
aas
pop
xchg
pop
mov
inc
mov
cmpsb
pop
or
fbstp
mov
xlat
inc
mov
bound
imul
gs
lcall
sbb
adc
stos
cld
rcll
dec
enter
lock
xchg
adc
pop
pop
clc
sbb
push
jge
adc
push
mov
xchg
inc
and
jmp
jo
pop
lcall
push
sbb
hlt
mov
in
dec
xor
pop
in
push
rcrl
es
sahf
jl
fs
inc
pusha
add
sahf
jb
cmpsl
subb
pop
pop
push
inc
inc
sarb
inc
sbb
test
sub
imul
inc
adc
faddp
add
ret
mov
mov
sti
push
and
jns
jmp
daa
mov
adc
nopl
inc
pop
jns
mov
pop
pop
lods
mov
jbe
arpl
inc
cmp
or
mov
shlb
push
mov
repz
sub
pop
fs
and
pop
mov
stc
sbb
repnz
jecxz
cs
push
or
jnp
jb
aaa
mov
pop
mov
lahf
lds
fs
xchg
test
out
cmp
add
outsb
mov
mov
xchg
shrb
cmp
push
cli
lods
aaa
ljmp
push
xchg
notl
pop
sbb
sbb
lcall
ds
iret
call
enter
les
subb
and
push
inc
clc
sub
mov
es
add
cmp
inc
mov
nop
rorb
mov
xor
sub
xchg
jo
popf
xor
test
repz
mov
lods
gs
inc
fists
mov
out
dec
test
push
jmp
push
sbbl
sub
mov
leave
repz
cmp
adc
bound
xchg
sbb
dec
out
push
adc
pop
add
sbb
add
add
mov
xchg
pop
push
inc
jns
fistpl
lcall
jnp
std
test
cmp
lods
inc
movsl
fsts
inc
and
clc
gs
sar
pop
sub
mov
je
jmp
cmpsb
loopne
pop
int
jp
xor
dec
ret
scas
rcll
fidivrs
xor
push
and
fisubs
sbb
imul
push
push
xor
jle
adc
mov
dec
orl
cli
push
cmp
pop
test
scas
arpl
and
int3
adc
xchg
cwtl
dec
shr
addr16
ljmp
cltd
inc
in
jb
mov
add
int3
add
test
clc
jns
and
xchg
sbb
push
repnz
enter
or
mov
sub
shlb
aas
jae
xlat
clc
adc
sub
jae
adc
adc
shll
adc
daa
pop
js
pop
cmpsb
fildll
imul
lahf
adc
pop
push
and
scas
int3
out
orb
jo
push
cmp
sub
pop
out
subl
or
sbb
mov
ljmp
adc
sahf
dec
sbb
fisttps
cli
dec
adc
in
lock
mov
leave
xchg
addr16
adc
jns
push
or
jge
xchg
push
fs
data16
ljmp
popa
sti
push
xor
out
push
sbb
and
loope
stc
pop
mov
inc
cmc
fwait
sti
or
imul
and
adcl
cld
xor
jl
out
daa
outsb
fisttps
sub
mov
out
push
sbb
mov
mov
and
movl
cmp
je
mov
or
repnz
inc
add
stos
fisubs
testl
ret
fwait
pop
and
fldt
lods
ss
and
or
fcoml
test
ficomps
out
and
jle
dec
inc
fistl
leave
fs
test
push
dec
dec
repnz
and
add
out
lcall
mov
and
push
sti
outsl
lret
or
adc
scas
cld
jle
pusha
xchg
out
pusha
adc
adc
cli
xor
add
arpl
fucom
cmp
adc
xor
cli
sub
mov
gs
out
dec
and
inc
lret
adc
shlb
pop
pop
xor
xchg
sbb
mov
add
sahf
imul
clc
xchg
sarb
outsl
push
push
push
push
add
pusha
xchg
test
adc
sub
inc
dec
das
and
dec
or
push
out
inc
mov
test
sbb
push
and
mov
mov
loopne
inc
loopne
pop
inc
mov
jg
idivb
fimull
cmp
pushf
pop
imul
adc
stc
dec
sahf
mov
cmp
out
jg
pop
xlat
xor
out
scas
int
and
or
push
les
jns
jle
mov
cmp
stc
addl
jge
add
push
push
les
lret
xchg
adc
pop
inc
cmp
nop
cmp
adc
sbb
sbb
jmp
sahf
jle
inc
aas
scas
je
stos
aaa
mov
ljmp
cmp
ds
or
mov
sub
xchg
inc
xor
jmp
or
inc
cmp
adc
mov
mov
lock
adc
fwait
inc
sbb
pop
push
lret
sbb
add
lcall
xchg
mov
xchg
enter
enter
arpl
mov
js,pn
rcll
dec
adc
cmp
stos
pop
shrb
pusha
cmp
ret
adc
inc
test
push
sub
arpl
xlat
pop
push
nop
js
lcall
mov
lea
pop
js
inc
xor
stc
sbb
stos
movsb
xchg
xchg
jbe
sti
cmp
pushf
shll
cli
dec
inc
xor
repz
movsl
add
flds
sbb
dec
repnz
leave
das
fnstcw
adc
and
push
popf
rcr
add
xor
adc
add
or
pop
push
nop
stc
pop
in
xchg
push
sbb
movsb
dec
ret
scas
sub
push
push
or
ret
xchg
fildl
jnp
imull
out
push
push
ds
sub
test
mov
jmp
sub
xor
or
cmp
inc
push
push
pop
sub
sbb
int3
jl
or
pusha
dec
test
stc
in
imul
inc
mov
xor
push
lods
jl
lcall
iret
or
xchg
cltd
aaa
daa
into
jg
fwait
pop
xchg
adc
lahf
test
or
add
nop
fs
push
xor
ret
daa
push
arpl
xor
mov
cmpsb
pop
cltd
fs
sar
adc
fwait
inc
sub
xchg
adc
lods
pop
daa
loopne
push
mov
dec
mov
or
push
cmpsb
adc
sahf
movsb
jnp
imul
ljmp
and
dec
inc
sbb
cs
shl
dec
jbe
xor
into
sbb
data16
data16
daa
push
adc
lea
sub
lret
call
fwait
add
enter
jg
out
nop
cmpsl
cwtl
stc
push
mov
jge
test
cmp
dec
lock
dec
not
mov
rol
or
add
xchg
jmp
pop
sarb
fwait
dec
mov
loop
inc
or
mov
mov
or
sbb
fildl
mov
or
push
rcl
jl
fwait
movsb
enter
fnstsw
cmpsb
cs
sbb
stos
push
adc
jb
pop
inc
jge
and
pop
orl
je
push
sbb
andl
adc
dec
ds
mov
sbb
ret
cmc
add
dec
mov
add
daa
stc
fnsave
mov
in
movsl
daa
jb
and
mov
xorb
inc
aam
inc
sti
jnp
push
or
xchg
iret
mov
mov
enter
bound
push
mov
test
mov
and
or
adc
lods
jnp
adc
and
add
cltd
add
push
mov
cmp
inc
xchg
xchg
fcoms
aaa
in
mov
lcall
mov
mov
xchg
jns
push
pop
push
inc
popf
inc
dec
dec
jge
xchg
xor
mov
push
sub
pop
add
inc
cltd
pop
shl
inc
push
dec
inc
sti
dec
mov
xor
rcll
sub
sub
bnd
sti
pop
xchg
mov
inc
imul
cld
xchg
mov
sub
mov
inc
add
ljmp
out
out
lock
in
lcall
rcr
inc
clc
push
repz
xor
xchg
adc
nop
adc
jbe
in
sbb
pusha
aaa
xchg
scas
xchg
repnz
cmpsb
and
mov
dec
pop
adcl
stos
hlt
jnp
push
sub
mov
out
xor
sub
xchg
mov
adc
xchg
ror
push
cmp
fiaddl
inc
xchg
add
xchg
icebp
test
sub
mov
adc
mov
push
clc
ljmp
sub
xor
leave
adc
inc
stc
jecxz
cmp
sub
das
or
and
sub
es
cmpsl
dec
xor
daa
sbb
data16
dec
adc
push
in
mov
xchg
fucomi
xchg
adc
or
cmpsl
bound
jo
dec
es
outsb
dec
xrelease
push
inc
xchg
and
lds
dec
movsl
or
clc
notl
inc
jp
mov
adc
mov
stos
pop
mov
stos
popa
shll
cmp
divb
das
outsl
jl
ret
lcall
hlt
int
xor
pop
daa
ret
pop
icebp
add
pop
shrb
jl
cmp
cli
sub
push
pusha
fadds
and
xchg
js
dec
iret
fsubp
sbb
xor
clc
ds
inc
mov
repnz
adc
inc
dec
mov
or
jae
test
shll
cwtl
in
xor
movsb
jno
lcall
ret
and
push
jge
push
out
pop
rcr
sub
sub
dec
out
inc
inc
xor
mov
inc
adc
pop
ret
ss
ficompl
mov
iret
nop
inc
cmp
daa
inc
mov
decl
dec
mov
ficomps
mov
inc
add
sbb
test
adc
or
sbb
xchg
sahf
sub
jne
stc
or
push
push
pop
pop
push
mov
cmpsl
jbe
sbb
and
addr16
dec
fsubp
lcall
test
out
sbb
dec
sub
lret
lods
jmp
popf
shl
push
es
les
stos
cmpsl
mov
in
into
sahf
and
push
xchg
xor
jnp
push
xlat
jb
ds
sbb
mov
add
rcrb
outsb
pop
dec
xchg
je
push
mov
or
sbb
in
add
pop
inc
icebp
in
lds
jne
jle
ja
pop
cmp
pop
xchg
lods
out
sbb
push
pusha
jns
popf
xor
cmpb
add
xor
jmp
inc
add
pop
aaa
push
xchg
mov
cltd
jnp
lods
clc
std
jne
or
inc
adc
pop
adc
jecxz
stc
xor
movl
sub
mov
or
sub
pop
out
jle
dec
popa
movsl
daa
jle
xor
cmp
pop
fldenv
repz
stos
or
ret
sub
sbb
xchg
pop
scas
and
jnp
movsb
movlps
adc
sarl
mov
ficoms
mov
fwait
fwait
fsubrl
xchg
rcll
aaa
scas
jo
mull
mov
xchg
cmc
sbb
je
ljmp
jecxz
sub
loope
push
inc
cli
and
pop
lods
sub
sub
outsb
inc
iret
into
nop
xor
pushf
stos
aam
push
xor
lret
sbb
pop
push
aam
cmpsl
enter
push
enter
pop
fnstcw
aam
mov
adcl
push
sub
fcmovbe
jmp
mov
adc
sbb
cld
test
pop
sub
pop
int3
addl
and
daa
add
jb
push
inc
out
and
ret
lods
xchg
loop
push
jno
sub
mov
pop
push
push
popa
adc
jg
xor
imul
mov
adc
das
or
add
jb
sbb
sub
sbb
push
mov
nop
sbb
lret
adc
sub
imull
dec
mov
lods
jmp
mov
lret
and
iret
jo
ret
push
stc
sbb
push
jmp
nop
cmpsl
cwtl
jno
pop
inc
pop
insb
lods
repz
out
pop
aam
mov
in
push
jns
mov
jg
decl
xor
shl
fnsave
int
dec
push
adc
call
or
jmp
mov
out
dec
adc
leave
call
sbb
out
imul
and
outsb
icebp
fisttpl
sub
lret
rorb
pop
imul
enter
sub
pop
xchg
xchg
repz
aas
ret
xchg
xchg
leave
mov
dec
mull
je
adc
aaa
mov
scas
mov
sahf
enter
es
outsl
jb
adcb
xor
cld
and
cmpsl
imul
subl
dec
repz
dec
pop
jmp
pop
aam
icebp
mov
xchg
enter
and
ja
pop
stos
rcr
pop
dec
test
pop
pop
ret
add
pop
test
or
mov
decl
sbb
mov
clc
push
jne
repnz
rorl
addr16
mov
adc
repnz
shll
je
dec
fmul
test
negb
jmp
nop
push
push
popf
or
out
dec
mov
mov
xchg
and
insl
dec
pop
inc
cmp
shlb
inc
scas
xor
cmp
pop
inc
adc
ret
mov
nop
stc
jns
mov
jno
imul
enter
adc
pop
mov
int3
pop
dec
and
adc
xlat
sti
movsb
imul
jno
sub
or
decl
push
sub
mov
pop
and
mov
dec
dec
add
sub
insb
stos
pop
rclb
dec
scas
adc
sub
lret
lret
pop
nop
into
xchg
scas
scas
xchg
adc
push
cmc
addr16
dec
mov
std
pop
es
cmp
jb
cmpsl
pushf
aam
xchg
mov
cwtl
stos
and
cld
ljmp
sbb
lahf
and
sub
push
lret
fxch
out
inc
mov
ret
push
and
ror
sbb
inc
or
sahf
fs
cld
inc
jmp
ret
pop
jl
ret
cmp
sbb
sub
adc
sbb
push
sahf
adc
sbb
mov
adc
push
sbb
push
push
jmp
and
test
and
insl
nop
cwtl
jmp
sahf
push
push
xchg
or
clc
push
xchg
daa
insb
xchg
cmpsl
and
dec
int3
push
das
popf
nop
lahf
fidivrl
push
lcall
add
mov
pop
and
in
ljmp
xor
scas
or
nop
jmp
inc
adc
dec
xor
test
dec
sub
ret
jecxz
inc
mov
fistpl
inc
push
cmp
inc
adc
cli
jle
dec
xchg
pop
dec
inc
and
or
adc
sub
fildll
mov
cwtl
outsl
lock
push
ds
adc
mov
ret
push
stos
mov
mov
out
push
pop
fstps
sub
sub
nop
sub
lret
pushf
popa
aas
pop
bswap
push
xchg
gs
test
popa
or
push
pop
stos
or
xor
sub
push
int3
cmp
dec
pop
inc
or
or
test
gs
push
pop
imul
js
jle
sub
ret
clc
lds
inc
out
cmc
adc
sub
fldcw
movsl
cmp
inc
sbb
ret
xchg
pop
adc
mov
mov
or
cli
scas
arpl
adc
addr16
xchg
sub
cs
xor
or
rcrl
scas
je
or
and
add
mov
dec
adc
add
loope
fsubrs
ss
loop
mov
add
sbb
popa
or
out
ja
mov
inc
imull
mov
or
adc
loop
push
addr16
jecxz
cs
jnp
lret
or
adc
lcall
adc
pop
movsl
mov
mov
subl
data16
xchg
inc
rclb
inc
xlat
mov
or
aas
mov
iret
call
scas
and
add
dec
push
jle
shrl
repz
enter
enter
fsub
stos
aam
xor
std
in
mov
cs
push
test
push
jae
and
mov
dec
cli
inc
jae
mov
and
pushf
and
cmp
adc
repnz
push
add
inc
scas
sahf
arpl
ljmp
sbb
jl
cmpsb
adc
or
subl
dec
pop
and
mov
push
cmp
xor
push
push
test
cwtl
outsl
hlt
sahf
jns
arpl
add
push
lods
mov
jle
sub
sbb
or
mov
loop
push
test
out
and
mov
mov
xor
adcb
div
inc
adc
loop
sbb
adc
aad
mov
add
clc
rcr
aad
outsl
fs
xor
imul
out
or
and
xchg
loopne
cmp
inc
pop
pushf
dec
lret
lcall
stc
push
adc
mov
sub
add
and
nop
mov
adc
loopne
pop
mov
scas
push
add
insb
hlt
adc
callw
sahf
pop
test
repnz
mov
sub
sti
sbb
nop
adc
xchg
sub
sub
test
shl
pop
pop
daa
gs
fnstcw
pop
pop
dec
mov
ss
push
and
sub
mov
xchg
das
sub
shlb
mov
lcall
and
aaa
jns
jl
dec
aad
jb
and
popf
and
pop
inc
mov
inc
cmp
pop
push
xor
push
xchg
jne
add
int3
mov
imul
pop
sbb
sub
nop
dec
stc
push
or
in
scas
and
sub
fisubs
or
xor
jge
aas
les
cmpsb
popa
faddl
gs
mov
pusha
inc
movsb
lds
pop
xchg
les
sbbl
lods
inc
movsl
sub
popa
daa
outsl
repnz
and
add
ss
divl
push
add
add
stos
daa
pop
cmpl
ljmp
pop
sahf
push
sbb
test
insb
stos
push
jle
inc
jnp
imul
push
and
xchg
adc
adc
dec
aad
sub
mov
sub
xor
jno
popa
adc
xor
xchg
mov
jae
pusha
dec
sub
mov
insl
sub
xor
sub
sub
cmc
pop
cs
repnz
push
int3
xchg
mov
cmc
mov
fstpt
sub
pusha
jp
fisubs
les
cmp
loopne
adc
fcomps
imul
cmp
clc
in
int
bound
rcrb
dec
pop
les
pop
or
sub
movsl
and
push
inc
pop
cmpsl
in
sti
bound
mov
jp
cltd
mov
test
es
popf
movsb
shr
sahf
mov
sti
cltd
aas
cmp
mov
lahf
mov
push
imul
insb
imul
mov
sbbb
dec
add
fldt
xchg
daa
aam
int
jp
xchg
or
gs
sbb
sti
sub
scas
adc
jbe
nop
mov
aad
sub
test
mov
fnclex
clc
mov
push
inc
sub
movsb
in
mov
rolb
or
xor
mov
icebp
inc
fcomi
jmp
dec
jo
mov
or
add
std
loop
push
push
sub
xchg
lahf
push
mov
push
stos
push
lea
adc
sub
pop
adc
dec
mov
pop
and
sti
pop
cld
push
dec
test
je
jp
ret
das
fadds
loopne
stos
jmp
cmp
outsl
fs
repz
cmpsb
shll
cmp
push
iret
lcall
xlat
jmp
dec
jl
push
dec
movsl
sbb
pop
mov
aaa
xchg
and
pop
aaa
outsb
scas
dec
jp
xchg
enter
push
adc
out
push
test
jnp
jecxz
adc
repnz
sahf
xchg
sbb
mov
ja
mov
pop
push
mov
subl
cmp
xlat
repnz
loopne
xchg
je
dec
cld
rcr
pushf
lock
xlat
push
mov
out
mov
fmuls
out
data16
clc
inc
sub
jg
ja
fdivp
out
popf
xchg
push
roll
xchg
xchg
icebp
popf
cmp
mov
inc
inc
adc
mov
mov
and
cmp
jmp
push
add
add
shlb
rorl
adc
test
xchg
mov
or
fmuls
adc
in
mov
mov
or
push
mov
js
mov
scas
js
or
leave
les
and
and
scas
incl
lds
mov
sub
cli
in
adc
test
xor
out
cs
nop
es
inc
sub
sbb
push
shlb
cs
mov
and
mov
xchg
push
out
cmp
pop
push
xchg
push
pop
icebp
movsb
adc
xchg
cwtl
pop
pop
sub
xor
lret
gs
aam
xchg
shrb
sub
das
lcall
fnstsw
inc
sti
jbe
inc
lds
xchg
dec
push
inc
mov
mov
xchg
das
adc
xor
in
cmp
ljmp
pusha
sub
divl
dec
and
sub
data16
fdivl
inc
js
adc
and
out
popf
shlb
inc
sub
xchg
fs
jg
sbb
mov
imul
or
nop
outsl
rcr
cmp
or
and
xchg
sub
push
pop
ja
adcb
cmp
pop
out
push
mov
popa
lahf
xor
jns
daa
out
ljmp
dec
push
jl
out
pop
pop
adc
mov
nop
cltd
cmp
incl
test
sub
inc
add
stos
dec
xchg
xchg
nop
xor
sti
push
cli
jmp
sub
sub
daa
movq
add
rclb
sub
mov
test
std
cmp
mov
inc
lcall
inc
xchg
jae
loop
dec
inc
xor
outsb
or
mov
dec
loope
mov
clc
dec
dec
fldcw
mov
pop
int3
and
dec
sub
inc
ljmp
or
cmp
cli
lods
popa
dec
mov
inc
mov
mov
dec
push
pop
lret
and
cmpsl
daa
dec
mov
xchg
dec
fucom
add
dec
out
ja
out
inc
cli
push
push
xchg
rolb
or
jmp
subb
add
inc
nop
sub
sar
lahf
mov
mov
aas
mov
imul
xor
jg
push
popa
pop
jns
cwtl
rorl
push
sbb
loopne
jno
test
xor
push
and
lods
ds
call
fdivl
inc
jns
mov
cmp
sti
ficomps
sbb
inc
clc
pusha
pop
pop
sbb
sbb
stc
mov
je
andnps
gs
mov
out
jg
push
sbb
xchg
rolb
sbb
sti
or
aam
aam
push
ds
jmp
jmp
cmpsb
mov
and
outsl
push
cwtl
sqrtps
or
std
sahf
or
inc
sar
xor
or
sbb
test
jns
mov
xchg
test
ret
xchg
add
cmp
mov
and
clc
aas
test
fbld
sti
mov
mov
pushf
fs
mov
or
mov
test
fdivrp
movsb
pop
aaa
add
inc
push
mov
mov
push
lea
ret
fs
add
sub
xchg
inc
aaa
adc
cmp
mov
sti
or
sub
xchg
push
lods
imul
xchg
fdivl
pop
jmp
lods
fldt
movsb
outsb
dec
pop
cltd
jns
leave
aam
out
sub
test
push
pop
inc
fs
add
pop
and
mov
xchg
in
and
clc
sub
xchg
xchg
xchg
cmp
adc
enter
mov
xchg
sbb
enter
jo
pop
push
dec
cmp
leave
mulb
mov
cli
lcall
xlat
das
pushf
push
xchg
notb
fwait
mov
fistpl
in
lods
and
daa
clc
add
cmp
out
jmp
sub
cmc
sahf
aas
notb
popf
and
dec
adc
xor
aam
ljmp
mov
nop
dec
jno
jmp
mov
aas
test
xchg
test
and
stc
mov
push
ljmp
clc
inc
sbb
aam
mov
adc
cmp
adc
jne
mov
int
xor
sbb
sbb
sub
xchg
xchg
outsb
lahf
push
in
and
outsl
jg
je
push
pop
jne
mov
inc
cmp
xchg
in
mov
inc
ss
cwtl
loop
inc
stos
dec
jne
imul
mov
jp
xchg
dec
in
lahf
jns
pand
xor
into
sub
inc
in
jmp
xchg
adc
scas
enter
imul
data16
inc
inc
sbb
sub
or
inc
pop
addl
push
dec
movsl
cmp
mov
shr
or
mov
sbb
popf
loopne
aam
jge
mov
xor
and
dec
mov
ljmp
mov
ljmp
fnstsw
fidivs
popa
lcall
addr16
adc
mov
imul
data16
inc
popa
inc
push
sbb
xor
shlb
cmpsl
imul
cltd
inc
add
fwait
add
leave
pop
int3
inc
add
dec
popf
movsl
popf
aam
push
or
sahf
imull
inc
incl
mov
pop
sbb
mov
push
ljmp
ret
and
pop
ja
popa
inc
pushf
dec
sbb
cmp
out
inc
dec
cwtl
negb
add
cli
aaa
mov
dec
loop
jbe
dec
jp
outsb
push
cli
xchg
sub
ja
mov
inc
sub
cltd
pop
jae
fisubl
push
inc
pop
or
and
push
pop
pop
adc
sbb
xchg
int
cmp
adc
xorb
shl
pushf
or
or
aaa
pop
mov
or
lahf
adc
cltd
inc
setae
adc
fwait
inc
pop
and
mov
and
enter
mov
mov
gs
repnz
test
pusha
push
movsb
mov
adc
or
adc
imul
out
push
sub
lods
adc
cli
mov
xchg
push
pushf
lods
imulb
inc
test
xchg
rorl
jecxz
nop
test
das
imul
repz
xchg
rorl
loopne
ljmp
aas
push
ficompl
fwait
xchg
or
pop
scas
pop
lock
inc
jmp
dec
add
clc
cmp
shr
cmp
lea
pop
movsb
adc
sub
inc
clc
rorb
sub
or
pusha
shlb
mov
push
add
das
sub
and
push
push
ja
adc
shl
xor
sub
inc
mov
jno
lds
sub
pop
rclb
repz
jae
sbb
and
fs
clc
es
add
pop
xchg
gs
adc
push
lahf
xchg
ficompl
and
adc
adc
inc
add
sbb
xor
jb
pop
inc
mov
les
lahf
adc
inc
xchg
xchg
insb
inc
xor
lahf
jns
lods
rcll
dec
in
pop
adc
dec
aaa
sti
fcompl
push
fldl
nop
xchg
fisttpll
gs
in
mov
lcall
adc
js
repnz
pop
jmp
lret
push
aaa
out
test
cli
push
test
das
shll
cmpsl
mov
fstpl
cli
loop
lods
stc
fisttps
stc
add
push
mov
fstl
sbb
out
out
push
inc
cli
mov
xchg
lods
xchg
xchg
cli
out
fiaddl
fiaddl
push
jbe
mov
pop
pop
nop
push
push
lods
jnp
inc
add
test
dec
sub
sbb
push
mov
fimuls
cli
dec
jl
scas
jle
ds
cmp
test
fldt
push
cmp
notl
inc
cli
int
mov
pop
pop
push
sbb
decb
sbb
sbb
ljmp
add
scas
mov
adc
jbe
push
inc
xchg
cmpsb
int3
sub
or
enter
rclb
ljmp
inc
adc
pop
xor
push
adc
xchg
sbb
imul
xchg
mov
imul
imul
dec
daa
leave
jge
popa
in
lahf
mov
or
pusha
fcoms
or
pop
repnz
jb
pop
jns
aas
adc
sti
mov
mov
ror
xchg
lcall
mov
mov
push
and
push
cli
and
orl
arpl
adc
inc
sbb
pop
push
adc
in
pop
mov
sbb
jmp
lret
push
lock
rcr
loopne
fisttps
pop
mov
popf
xchg
add
cmp
push
mov
js
icebp
or
nop
pop
lods
into
mov
sti
dec
arpl
dec
stos
jae
in
pop
mov
mov
add
adc
xor
add
adc
pop
adc
sbb
cld
scas
pmovmskb
cli
cmp
imul
fmuls
cmp
and
cwtl
stos
enter
dec
shl
cmpb
mov
mov
testl
sbb
lret
xor
pop
aad
lock
adc
jnp
leave
dec
cmp
and
mov
mov
lock
jmp
sti
inc
xor
mov
icebp
dec
push
or
stc
bound
push
mov
insl
psadbw
nop
jecxz
loope
out
pop
clc
pop
dec
mov
xlat
jecxz
mov
ljmp
in
addr16
or
xchg
dec
mov
ljmp
adc
mov
inc
xor
sahf
testl
pusha
cmpsl
addr16
popf
jae
lret
leave
or
jp
mov
xchg
mov
into
mov
xchg
or
icebp
mov
cltd
cmpb
inc
movsb
mov
xchg
outsb
xchg
sbb
push
scas
cs
lahf
fcmovu
sbb
nop
ljmp
jmp
adc
fwait
stos
xchg
js
inc
xchg
lcall
or
lds
aas
sti
or
pop
das
test
test
add
adc
xchg
bound
sahf
or
push
push
hlt
mov
jle
adc
sahf
xchg
xchg
aaa
adc
inc
jmp
scas
out
jae
jmp
xchg
mov
xor
mov
mov
sahf
rcrl
push
nop
call
sbb
pop
cli
stos
dec
sbb
sahf
push
inc
jbe
scas
or
in
or
sbb
or
xchg
fucomip
ljmp
sbb
js
jnp
push
and
scas
mov
pop
cwtl
push
pushf
sbb
js
out
xchg
cmp
les
loope
add
sbb
lods
inc
cli
adc
inc
mov
sahf
inc
add
movsl
clc
lods
mov
push
adc
inc
xor
sub
lret
or
adc
popa
js
sbb
or
and
cli
mov
lahf
mov
and
dec
into
xor
sahf
mov
addr16
leave
sbb
iret
mov
nop
mov
nop
inc
adc
inc
sbb
and
or
clc
push
jg
jmp
and
push
adc
mov
jae
imull
repz
daa
das
xchg
xchg
leave
and
dec
push
adc
cmpsl
dec
adc
or
imul
loop
xchg
ficomps
sbb
and
seto
push
hlt
or
add
rcll
mov
les
es
pushf
xor
and
adc
sbb
adcl
xor
dec
xor
cli
lcall
leave
xor
xchg
and
mov
imulb
test
stos
xor
in
inc
cmp
dec
nop
in
or
cli
shld
cmpsl
ret
rolb
dec
lods
aad
push
adc
push
jp
sub
out
push
mov
insb
popa
and
mov
ret
sbb
mov
xchg
push
repz
add
pushl
adc
cltd
movsl
or
int3
xchg
insb
dec
mov
sub
xor
mov
or
repnz
mov
lods
add
cmp
dec
pop
insb
test
dec
sub
lcall
and
sbb
lea
addr16
mov
in
shlb
or
mov
dec
push
dec
fbld
dec
jno
cmp
dec
mov
mov
inc
or
push
aam
xor
nop
ret
icebp
clc
dec
push
push
cs
xchg
push
mov
data16
add
adc
mov
xchg
mov
ficompl
inc
cmp
inc
pop
or
xchg
push
mov
add
mov
adc
test
or
fsubl
and
bound
cli
add
jb,pt
cltd
pusha
aad
shll
out
in
aad
xor
push
and
mov
pop
adc
adc
je
cmp
frndint
xchg
add
pop
popf
mov
jno
sub
and
stos
fs
scas
rcl
xchg
push
or
and
xor
mov
xchg
ret
sub
fs
mov
or
inc
and
mov
xchg
adc
insl
leave
adc
out
xor
int3
leave
and
or
pop
adc
lods
dec
jecxz
xor
sbb
unpckhps
gs
sbb
xchg
ret
cmp
or
xor
and
push
in
stos
xchg
sub
shlb
clc
xor
push
adc
dec
decl
dec
mov
mov
cld
and
cli
orb
test
mov
adc
or
shrl
dec
xor
dec
add
push
aam
dec
and
sub
dec
or
and
rcrl
or
sbb
sahf
and
xchg
push
and
add
adc
outsl
test
cmp
jne
test
xchg
push
xchg
adc
clc
or
or
jge
push
fisttpll
repnz
push
cltd
dec
in
sub
icebp
in
adc
sbb
adc
adc
lods
or
les
insl
gs
ret
adc
ficompl
jbe
pop
xchg
xor
mov
mov
pop
and
inc
lcall
or
and
inc
xchg
sti
arpl
mov
add
sub
shlb
int
or
xchg
pop
jnp
inc
ljmp
lods
sub
push
jmp
cmp
outsl
in
pusha
mov
ficompl
cmp
and
push
and
xlat
mov
sub
add
repnz
leave
add
or
jo
mov
inc
cmp
sub
lea
mov
and
jecxz
adc
ud0
scas
xor
xchg
sti
dec
int
mov
push
sbb
pop
cmp
adc
stos
push
fs
adc
clc
and
inc
orl
xchg
mov
sbb
mov
xchg
xchg
iret
lcall
xchg
and
outsl
lock
adc
dec
mov
dec
push
or
dec
imul
pop
pop
std
sahf
inc
or
daa
test
sbb
xchg
addr16
loop
pop
adc
mov
inc
addr16
and
cmp
cmp
test
pop
or
xchg
shl
mov
adc
inc
out
mov
cmp
cli
push
xlat
test
cwtl
push
and
push
adc
sbb
inc
dec
fmuls
adc
add
push
mov
lea
xchg
lods
and
cli
push
loop
out
add
notb
or
shll
ljmp
jge
push
pop
add
adc
or
cmovae
pop
dec
movsb
bound
arpl
enter
or
add
jecxz
data16
jbe
negl
adc
cmp
in
xlat
sbb
adc
aas
adc
adc
adc
sbb
iret
or
mov
adc
mov
shl
mov
lret
or
mov
bswap
out
dec
das
clc
pmaxub
loope
std
cmpsl
fists
jecxz
cltd
inc
jg
mov
sbb
aam
mov
dec
clc
dec
testl
lock
lret
inc
imul
insl
xor
fists
sbb
dec
in
lea
sub
sub
push
rcrb
nop
and
mov
xlat
out
sub
sbb
lods
out
lahf
xorb
pop
fcoml
out
and
mov
lock
inc
mov
push
cwtl
dec
add
popa
fisttpl
and
in
inc
incl
or
lret
push
jg
repz
stc
iret
push
mov
sti
inc
mov
ret
push
xchg
inc
push
add
out
mov
jb
push
loope
sub
xchg
or
or
sbb
push
inc
das
loopne
adc
divb
dec
dec
lods
xchg
xor
adc
fstp
mov
test
sbb
test
addr16
xchg
imul
push
push
repnz
aam
jb
ja
fadd
adc
pop
popf
pop
aaa
dec
fld
lods
lds
dec
adc
xor
hlt
gs
leave
sub
adc
cmp
inc
out
addr16
push
xor
mov
inc
lahf
filds
mov
stos
jge
sbb
sbb
xchg
out
loope
pop
cmpsl
das
sbb
fs
fcoms
push
aaa
xchg
add
jmp
cmp
out
push
push
repnz
add
loopne
bswap
push
jae
push
popa
in
cmp
or
dec
push
rcrl
imul
push
adc
stos
dec
fildll
xor
mov
popf
pusha
add
jbe
dec
mov
dec
sub
cmp
adc
pop
data16
pushw
dec
adc
mov
jbe
mov
imull
pop
cld
out
push
jnp
dec
push
xor
js
and
fwait
push
xor
xchg
ds
pop
dec
bound
clc
xchg
jns
out
lea
pusha
pop
pusha
lock
sbb
inc
cmp
adcl
push
test
cmp
lahf
shl
mov
jb
adc
or
pop
xor
dec
push
hlt
xchg
int
mov
lret
sahf
jmp
sub
push
mov
aaa
xorl
orb
mov
fwait
inc
psubb
and
lcall
cmpsl
jne
adc
mov
adc
pop
ja
adc
and
push
rorb
add
test
sar
adc
pop
adc
jne
mov
imul
aaa
dec
out
ret
dec
dec
nop
pop
push
and
enter
fnstenv
pop
mov
mov
sub
insl
cmc
push
lret
test
xchg
inc
mov
test
pop
and
lret
or
add
fwait
xchg
cs
sti
and
cmp
and
cmp
push
add
cltd
push
xorb
sbb
fmull
stc
and
mov
and
jle
sub
push
inc
popa
cmp
pop
stos
inc
daa
mov
adc
mov
cmp
push
cmp
sti
add
cmp
mov
pop
push
mov
in
lahf
pop
loopne
test
and
sbb
add
adc
sbb
and
out
push
and
imul
and
ficoml
mov
adc
fs
xorl
and
xchg
bts
inc
cwtl
clc
add
int3
sbb
add
add
adc
jg
mov
sub
or
and
pop
not
or
add
inc
adc
orl
cmpsl
xchg
and
pop
sbb
test
inc
inc
movhps
std
inc
out
adc
cs
imul
stos
mov
jl
sbb
push
sbb
add
daa
cltd
sahf
add
fwait
lahf
push
out
andb
or
sahf
xchg
ds
or
adc
adc
mov
adc
int3
das
lcall
pop
pop
add
inc
add
aad
push
pop
mov
ret
mov
ja
rcr
out
out
addb
cwtl
stc
dec
subl
or
pop
add
sub
or
adcb
cmp
xor
push
sbb
sti
jmp
xor
ja
inc
out
sbb
or
sbb
nop
mov
jge
loop
adcb
push
addr16
sub
lock
adc
adc
cltd
xchg
dec
fcoms
jae
sub
sub
stos
dec
pop
xchg
shlb
dec
ds
inc
xchg
adc
xor
test
push
sti
gs
dec
push
xchg
insb
xchg
xchg
push
jg
testb
fstpt
adc
sub
mov
jb
add
sbb
xchg
inc
xchg
cmp
inc
imul
jecxz
lret
sub
jbe
cs
ret
mov
lock
pusha
int3
inc
mov
push
out
adc
push
jmp
outsl
lret
daa
fcoml
jl
pusha
mov
jge
adc
popf
sbb
out
loopne
pop
mov
mov
imul
sbb
lret
xlat
sbb
loopne
sbb
fisubs
out
pop
lret
inc
push
mov
aad
inc
clc
jp
inc
push
movsl
jns
mov
cmp
mov
and
jb
push
cmp
mov
xchg
xchg
inc
cmp
pop
repnz
and
jge
inc
inc
add
daa
adc
fists
push
int3
call
mov
fs
mov
dec
lcall
aaa
sub
sub
pop
add
clc
loopne
dec
jne
lcall
jo
push
dec
ficoms
popa
xchg
or
pop
dec
daa
sbb
cmp
popa
add
xor
aad
dec
or
les
and
daa
rcrl
pause
mov
sub
nop
pop
movsb
mov
cmp
and
imul
sbb
test
arpl
imul
inc
in
jecxz
mov
jmp
adc
jae
push
mov
push
leave
addr16
cmova
dec
imul
out
xchg
push
xchg
out
mov
mov
fwait
movsl
data16
push
inc
shrl
mov
test
mov
add
dec
jns
pop
lcall
or
out
adc
and
xchg
pop
xchg
mov
fcompl
pop
lods
xchg
pop
jno
arpl
loopne
or
pop
and
jle
inc
jge
mov
aas
fwait
aas
dec
mov
clc
inc
inc
or
dec
pop
xchg
fldcw
adc
push
xchg
rclb
xchg
gs
jne
inc
mov
or
jnp
push
int
mov
lcall
cmpsb
inc
xchg
mov
out
push
cmp
xchg
int3
push
xchg
nop
and
sbbl
xchg
idiv
push
adc
stos
hlt
mov
rorb
xchg
in
dec
xor
aaa
dec
jns
cmp
xchg
shr
adc
push
pop
sub
jl
rcrb
sub
mov
add
xchg
andl
rol
popa
push
xchg
mov
or
bnd
push
sub
push
into
pop
daa
sbb
jae
jg
outsb
lret
or
ret
xor
mov
xchg
jne
scas
fs
ret
mov
ss
mov
rorl
dec
xchg
call
sahf
inc
push
xchg
idivl
jecxz
xchg
je
fadds
into
add
sbb
and
or
cmp
sarb
aam
aaa
xchg
push
sti
das
inc
dec
sti
mov
mov
lea
getsec
jns
cmp
cmc
insb
lock
fcoml
in
and
add
cli
mov
mov
test
pop
adc
or
xchg
ja
test
mov
scas
je
sahf
pop
xchg
pop
add
inc
mov
push
inc
icebp
or
cmp
or
add
pop
sbb
fs
and
das
lcall
hlt
fstpt
push
adc
add
xchg
cli
mov
or
pop
into
sub
dec
push
and
adc
daa
push
cmp
adc
ljmp
int3
push
movl
mov
and
pop
inc
shlb
or
addl
adc
mov
xchg
shr
das
repnz
pop
test
scas
popa
loope
sbb
mov
shl
aad
push
test
call
data16
inc
jns
fwait
jl
push
ljmp
jbe
idivb
mov
popa
sub
xor
xor
jge
sub
or
push
sahf
fisttps
sbb
std
clc
or
das
fadds
int3
or
pusha
leave
or
test
outsb
xor
sbb
sahf
pop
out
mov
fisubl
nop
stc
jo
xchg
or
mov
pop
inc
mov
das
data16
xchg
xchg
cmc
jb
stos
cmp
and
sub
fildl
jbe
xchg
inc
xor
adc
ret
jne
clc
jl
fldcw
and
jge
dec
cmpb
mov
stos
xchg
push
sub
nop
or
sbb
cmc
stos
dec
stc
mov
sbb
mov
lods
cwtl
jg
pop
add
jbe
lcall
addr16
ds
adc
sbb
in
pop
lcall
mov
pop
shlb
jge
cmc
movsl
test
out
ljmp
fistpll
sti
sub
push
jmp
add
fwait
and
stos
dec
scas
and
sub
shrb
adc
xor
inc
icebp
iret
lds
sbb
int3
movsb
mulb
loop
xor
sub
loop
jmp
rclb
shl
push
push
add
pushf
sbb
shr
ret
add
mov
hlt
cli
dec
xchg
mov
xor
cli
mov
stos
sbb
arpl
subps
inc
sti
es
pop
pop
mov
mov
fdivs
icebp
mov
adc
les
and
xchg
adc
xchg
and
mov
jg
xchg
stos
test
addr16
dec
push
fwait
jae
loope
or
outsl
fisubl
or
xchg
adc
xchg
fs
dec
mov
test
cmp
add
out
outsb
inc
cmpb
mov
out
popf
jp
std
ds
pop
arpl
pop
sub
cltd
insl
push
fwait
push
and
and
mov
loopne
test
shrl
pop
das
sbb
add
sub
and
add
xchg
mov
cltd
xchg
or
sbb
jne
aam
fdivrp
adc
and
sbb
movsb
mov
clc
add
ds
repnz
mov
sbb
cmp
aas
testl
jb
daa
pop
sbb
xor
call
or
in
lods
xchg
mov
imul
push
sub
pop
inc
subl
sub
push
clc
cltd
jle
xor
xchg
inc
fdivrs
and
push
add
adc
sbb
std
adc
rcll
fwait
adc
cltd
in
test
jnp
lret
fcoml
dec
aam
in
jmp
or
movsb
add
pop
lret
andb
pop
aad
loop
inc
pushf
insl
popa
aas
push
into
or
jmp
test
or
movsl
adcb
mov
rorl
mov
dec
mov
cmp
sub
or
bound
clc
outsb
faddp
xor
inc
mov
pop
or
stos
and
sti
push
dec
xor
rcrb
pusha
and
pop
xchg
frstor
ja
jae
pushf
xchg
or
jo
test
or
addr16
mov
and
push
lret
adc
jl
test
cli
and
mov
pop
mov
mov
jbe
push
mov
out
and
rcrl
arpl
dec
lock
lcall
jecxz
xchg
jno
mov
pop
fldt
mov
pop
shrl
jecxz
sbb
icebp
xchg
jp
fwait
jecxz
ljmp
enter
sub
bound
xor
insb
sahf
xchg
sbb
loop
ret
jb
lock
add
or
pop
dec
mov
jbe
pop
sbb
ret
pop
mov
bound
ret
xor
jge
roll
jno
or
adc
aad
sbb
addr16
mov
les
mov
ret
sub
push
xlat
gs
rclb
fsubl
pop
xlat
push
ret
test
jp
imulb
pop
cmp
dec
pop
jecxz
insb
inc
pop
sbbl
push
sub
or
daa
push
sarl
gs
aad
mov
jno
and
rcr
sub
push
test
xchg
pop
in
xor
insl
loop
adc
add
jle
fisubs
sbb
mov
dec
xor
push
xchg
pop
xchg
push
leave
insb
pop
pop
adc
push
scas
adc
push
icebp
cli
jbe
fimull
lods
push
out
movsl
xor
sub
mov
xchg
dec
and
es
adc
and
inc
dec
fwait
add
inc
sarl
add
rcll
mov
std
loope
pop
or
dec
adc
mov
jbe
push
or
pop
xor
sub
and
insb
repnz
xor
push
or
movsb
push
xchg
stos
pop
cmpsl
push
sti
bound
push
fs
jno
pop
shlb
fs
pop
or
scas
mov
test
cmp
jl
gs
sub
mov
xchg
shll
dec
lods
xor
lea
shll
sti
sub
dec
adc
rcpps
xor
pop
mov
fldt
jns
push
pop
dec
jmp
lock
pop
cwtl
shrb
jae
xor
jo
cli
arpl
pop
dec
lret
mov
xchg
dec
aas
lock
sbb
inc
clc
xor
xchg
cli
mov
loopne
gs
stos
popf
shl
xor
inc
adc
xlat
xor
xor
sub
inc
lods
mov
mov
mov
xchg
dec
rcl
out
int3
and
jns
int
cmp
or
enter
cmp
clc
and
out
adc
mov
jecxz
pop
pop
adc
jge
adc
pop
sub
lock
filds
mov
pop
popf
loope
iret
imul
mov
pop
mov
cmp
in
fwait
mov
adc
les
xchg
out
push
adc
mov
push
gs
or
sub
adc
daa
and
cmp
sbb
push
ds
jne
adc
in
xor
adc
sbb
lret
mov
or
in
adc
sbb
cmpsl
mov
fiadds
push
gs
in
xor
imul
mov
clc
pop
les
pop
sbb
pop
mov
aam
out
xor
loope
or
daa
add
aam
cmp
outsl
leave
sbb
test
aam
std
mov
das
push
and
add
je
loope
sbb
jg
sub
push
std
sub
xchg
jno
shrl
add
mov
mov
idiv
fldenv
call
sub
jns
aad
xlat
dec
clc
mov
xchg
sbb
aaa
clc
or
mov
loopne,pt
mov
les
loopne
sbb
xorb
insb
adc
adc
inc
stos
cltd
idivl
sahf
mov
and
sub
cvtpi2ps
pop
adc
xor
or
pop
adc
loop
iret
aaa
in
lcall
xchg
sbb
mov
adc
or
mov
mov
mov
and
aaa
sbb
cwtl
pop
xor
push
mov
pop
mov
test
push
sbb
pop
cli
lea
mov
fistpl
mov
add
dec
sarb
xor
ret
je
pushf
repnz
stc
popa
xor
inc
or
inc
nop
lcall
cmp
adc
lret
mov
fs
inc
jp
xchg
cwtl
jp
insb
push
ljmp
sti
lcall
mov
orb
cmpb
jb
add
sbb
pushf
cmp
lods
out
xchg
xchg
stos
xor
push
and
adc
push
pop
pop
adc
int
adc
stos
xor
or
orb
fcmove
adc
mov
push
sbb
add
adc
dec
sub
jg
out
adc
xlat
dec
sar
dec
pusha
add
pop
in
or
rcll
and
sbb
mov
or
push
push
imul
push
imul
add
cmp
out
in
sub
addr16
test
sti
cmp
int
into
std
cltd
jno
push
inc
mov
jmp
lea
pop
mov
adc
sbb
push
pop
adc
repz
dec
add
adc
xor
or
jg
movsb
mov
test
cmp
fstps
mov
dec
jbe
clc
pop
or
pop
mov
dec
push
xor
adc
and
mov
or
inc
adc
push
dec
xlat
xor
jo
mov
push
les
out
mov
or
test
repnz
cmc
xor
hlt
and
add
ss
xchg
fimull
push
dec
leave
or
mov
xchg
and
sbb
cmpsl
lcall
mov
movsb
cmpsl
iret
decl
inc
add
pop
inc
arpl
adc
roll
xchg
rcl
jp
xor
pop
push
sti
pop
popa
imul
cwtl
mov
mov
sar
pop
sti
pushf
pop
mov
les
stc
mov
cmp
adc
leave
or
sbb
jl
sti
dec
adc
mov
mov
sarl
mov
nop
int3
mov
dec
adc
daa
adc
fs
getsec
mov
inc
daa
xchg
mul
ffreep
push
sub
les
pop
mov
nop
pop
movsb
xor
nop
ja
or
adc
xor
xchg
cmc
orb
jnp
sub
mov
push
push
out
out
push
jnp
lds
pop
push
leave
sub
repz
scas
leave
and
fildl
sub
mov
imul
sub
add
mov
cmp
aaa
in
dec
cli
dec
adc
imul
sub
push
fldl
adc
adc
xchg
jge
add
nop
sbb
cmc
xchg
or
lds
pushf
repz
inc
nop
fnstenv
inc
movhps
cli
sbb
adc
and
adc
jle
mov
dec
dec
ja
enter
data16
inc
lret
mov
ja
jnp
pop
sbb
push
mov
dec
push
pop
out
push
add
cli
lods
adc
movl
and
insl
xchg
inc
adc
andl
mov
clc
sub
xlat
lods
adcb
frstor
mov
jge
sbbl
and
fwait
mov
inc
push
jg
arpl
sbb
jo
rep
movsb
test
jno
das
and
stos
test
inc
push
cmp
inc
mov
jno
xor
jecxz
data16
inc
adc
nop
rcr
lods
or
or
push
jecxz
push
lea
or
cli
insl
mov
xor
pop
sub
fstl
sbb
push
mov
jne
cmp
cs
shl
sbb
adc
clc
sbb
adc
mov
xlat
lcall
ret
or
sbb
leave
xor
inc
sbb
jns
and
pop
dec
xor
xchg
clc
dec
nop
pop
sub
or
or
sub
cli
sbb
test
sub
cld
mov
rcrl
and
add
rorl
and
cmc
fiaddl
or
lock
dec
test
inc
les
add
pop
xor
and
dec
sub
repz
push
push
adc
inc
sbb
addr16
and
cmp
inc
lods
sub
das
sub
jbe
add
or
jle
fcmovne
movsl
lock
xchg
in
mov
pushf
or
push
jae
pop
ficomps
pop
test
pop
lahf
dec
clc
cld
xchg
adc
iret
inc
adc
xor
bound
xlat
mov
jmp
stc
mov
adc
adc
adc
sub
ffreep
es
push
inc
lock
sub
adc
xor
and
dec
ret
fistps
movsb
shll
xor
insb
sbb
cmp
inc
out
outsl
cwtl
rclb
lods
jl
popa
push
das
data16
jmp
adc
mov
and
jge
nop
jmp
mov
mov
cltd
in
or
repnz
ret
lock
in
lcall
mov
push
pop
les
icebp
add
adc
pop
movsl
lods
xchg
jmp
cs
mov
push
inc
out
nop
jmp
data16
arpl
and
adc
pop
scas
fisubl
rclb
into
pop
jg
or
lock
sub
cmpsl
rolb
inc
scas
xor
xchg
mov
xor
jg,pt
lcall
lods
push
cltd
fisttpll
repnz
xchg
dec
xchg
mov
cmp
lret
jnp
sbb
inc
adc
cwtl
add
addl
adc
fsubp
and
in
in
mov
pop
jns
mov
fwait
scas
pop
xchg
or
xor
dec
pop
xchg
ljmp
pop
xor
push
sub
into
bound
dec
push
and
aas
enter
xchg
mov
test
movsl
xor
xor
mov
fsub
sar
cltd
jmp
nop
aam
pop
xor
enter
test
bound
jg
xchg
mov
repz
sbb
xchg
inc
sbb
std
nop
sti
int
sub
lret
inc
adc
or
pop
xchg
adc
jmp
inc
sti
or
and
mov
dec
mov
mull
push
push
mov
rcll
insl
adc
fs
cmp
mov
push
jle
into
dec
jecxz
mov
dec
out
dec
xor
testl
inc
lret
jnp
mov
adc
xchg
cwtl
popf
or
imul
jmp
mov
add
push
clc
cmpsl
sub
shlb
repz
andb
stc
ja
in
adc
push
clc
movsb
out
out
adc
push
mov
pop
or
sub
stos
lahf
ret
pushf
int
outsb
call
loop
dec
mov
repnz
fists
mov
lahf
gs
es
xchg
les
in
movsb
jl
xor
test
dec
adc
dec
push
adcl
sbb
in
add
pop
push
stos
cmp
popf
out
fincstp
arpl
movsb
cmp
ljmp
clc
aam
cltd
push
push
dec
sbb
data16
and
and
ljmp
jmp
or
or
cs
adc
std
shll
mov
jmp
xor
movsb
jb
je
cld
cli
push
or
or
add
clc
jmp
sbb
aas
dec
mov
pop
scas
loop
jle
xchg
or
xchg
xor
jo
stos
mov
sub
jg
sub
jp
les
jmp
fisttpll
std
sbb
sub
mov
repnz
fsubrs
inc
push
xchg
loopne
test
or
mov
test
sbb
mov
cmp
pop
xchg
mov
pop
data16
mov
xor
pop
les
cmp
pushf
xchg
jnp
bound
dec
scas
xchg
in
and
test
das
outsl
cmp
jmp
cmp
aad
movsl
inc
cmpsl
ja
cmp
pop
push
faddp
dec
adc
sbbl
xchg
mov
ja
dec
mov
jno
ljmp
setnp
fs
out
sbb
xor
jl
or
xor
inc
and
xchg
jo
mov
or
jb
push
adc
push
sahf
xchg
sub
rcl
arpl
ret
adc
add
ja
decl
bnd
or
stos
push
and
cs
mov
adc
and
or
xor
jg
pop
aas
clc
mov
movsl
insl
jg
jnp
inc
pop
adc
mov
jns
mov
aad
and
clc
pop
fucom
fs
lcall
in
daa
adc
xchg
ja
mov
mov
test
mov
inc
push
push
dec
sub
fldt
icebp
pop
pop
stc
xchg
add
adc
clc
sbb
jno
dec
sarl
pop
inc
jns
data16
sbb
or
aad
sbb
mov
fstpt
fs
fistpll
lea
push
test
adc
and
add
rcrb
jl
dec
gs
outsl
pop
lahf
push
sub
js
nopl
and
bnd
jl
inc
pop
clc
sub
mov
mov
ljmp
jp
xchg
test
sarl
and
or
arpl
jecxz
pop
call
test
add
xor
jge
clc
or
scas
sub
in
divl
adc
pusha
out
or
xor
pop
lods
xchg
jnp
and
and
or
add
xchg
add
or
sti
push
push
repz
dec
int3
cs
push
jne
cmp
push
daa
jg
bts
in
mov
sti
or
push
stos
stos
xor
fstps
pop
push
add
xchg
sub
jle
push
pop
cltd
in
imul
insl
gs
test
fidivl
cltd
cmp
adc
imul
das
stc
and
xor
inc
push
cltd
inc
aaa
repz
movsb
mov
push
sbb
aad
in
shll
jno
test
outsl
pop
mov
repnz
dec
xchg
movsb
add
jno
pop
or
and
xchg
pop
mov
imul
mov
das
sti
push
test
lahf
stc
jmp
sti
ficoms
mov
jne
pusha
or
test
in
mov
xchg
mov
fstpl
adc
add
xchg
inc
mov
mov
push
adcb
push
mov
xchg
sbb
push
xchg
xor
and
jle
dec
sub
or
mov
mov
jae
sub
pop
push
or
jne
test
inc
jg
cmc
es
pop
shrl
rcl
pop
mov
mov
sbb
int3
ss
pop
adc
or
insb
sbb
dec
fadd
cmp
and
movsl
pop
push
and
push
pop
in
push
outsl
xchg
jb
jge
add
xor
decl
insl
xchg
shrl
mov
push
jge
sti
and
jmp
mov
adc
adc
addl
int3
push
sbb
xchg
adc
xchg
mov
inc
int
xor
sbb
sub
test
das
aam
sti
jne
sti
loopne
aaa
xchg
inc
scas
dec
in
jbe
shrb
pusha
lret
xchg
das
shrb
fstl
lods
xchg
cmp
cmc
cmp
and
push
aad
addr16
xor
mov
dec
aaa
cmp
or
cmp
cmp
scas
fs
enter
ja
lret
pop
sbb
stos
daa
fildll
out
fcoms
mov
aad
and
icebp
outsl
jg
push
xor
mov
das
sti
inc
adc
dec
add
push
adc
mov
dec
add
jmp
sub
pop
jns
adc
cli
pop
dec
jb
jns
jns
jae
cs
adc
pop
sbb
mov
rcll
aaa
jecxz
dec
daa
and
clc
aaa
imul
and
pushf
in
notb
lds
xor
add
cmp
and
inc
rolb
repnz
mov
lock
lea
into
inc
sahf
pop
sbb
xchg
mov
in
insl
xchg
xchg
cltd
xor
inc
in
stos
out
pop
and
test
stos
jne
cmpsb
xchg
sbb
test
push
add
popf
cmc
test
sarb
adc
leave
fildll
fs
leave
adc
sarl
rcl
orl
adc
push
or
data16
jb
sbb
mov
repnz
in
cs
xor
out
dec
rclb
lahf
scas
inc
int3
sti
or
scas
iret
loopne
xor
xchg
and
or
sahf
fs
fsubrs
sub
scas
push
dec
ljmp
dec
push
xor
aas
roll
in
iret
dec
dec
add
pushaw
xor
sub
sbb
push
imul
sbb
xor
mov
sbb
movntps
push
insb
mov
dec
stos
sub
lcall
xchg
cld
mov
lret
sti
pushf
arpl
imull
arpl
mov
and
inc
jg
jge
and
jmp
ret
lcall
add
leave
sti
popa
xchg
and
cmc
mov
jns
mov
dec
test
fdivl
lea
lret
cld
out
sti
notb
xchg
and
push
leave
loope
repz
sub
and
pop
data16
add
sti
scas
int
inc
pop
and
adc
nop
add
mov
mov
or
adc
wrmsr
cmpsl
std
inc
sub
ss
nop
test
lea
insb
jbe
mov
jb
sbb
or
xchg
sub
mov
pop
testl
dec
jns
sbb
repz
nop
inc
cmp
int
sub
stos
sub
scas
je
pop
divl
add
mull
movsl
and
rcr
out
test
cltd
sub
mov
xchg
icebp
adc
imul
adc
dec
sub
adc
pushl
stos
clc
mov
pusha
mov
cmp
fs
pop
xor
mov
mov
add
aad
test
or
sbb
or
int3
fimuls
sub
outsb
scas
adc
mov
pop
test
inc
outsl
and
movsl
cs
xchg
int
cmpsb
adc
inc
adc
sbb
xchg
mov
or
jne
sub
cmc
inc
adc
and
jmp
sub
jnp
cs
out
inc
cmp
push
xor
lret
adc
jg
subl
push
dec
xor
shlb
fistpl
mov
sbb
jns
adc
fidivrs
jl
cs
adc
xchg
popf
push
cmp
jecxz
dec
mov
test
sbb
pop
adc
out
frstor
pop
gs
int
sub
adc
add
scas
jg
push
pop
scas
cld
sub
pop
inc
inc
mov
mov
in
data16
lods
jle
cmp
aas
orb
mov
mov
sbb
dec
sub
pop
clc
xchg
ljmp
cmp
dec
pop
dec
dec
fcmovbe
pop
stc
sbb
inc
lret
cmc
ja
sbbb
inc
inc
jae
xchg
sbb
sti
das
pop
and
add
and
mov
xchg
pop
cmp
cmpsb
data16
sbb
into
out
pop
jle
jecxz
int3
jmp
and
jecxz
pop
add
int3
gs
xor
inc
adc
lods
mov
int3
cmp
stos
test
jg,pt
adc
or
outsl
xor
xchg
or
aas
imul
movl
outsl
push
sub
dec
lock
scas
add
adc
sti
cmp
xor
mov
sarl
jl
xchg
jmp
cmp
inc
sar
rorl
ret
mov
xchg
das
into
fucomip
push
xchg
cmp
cld
sub
inc
addr16
clc
push
mov
mov
mov
pop
les
incl
repz
or
and
andnps
sbb
scas
pop
dec
and
adc
jne
sbb
xchg
inc
pop
testb
repz
or
out
lock
or
sti
bound
mov
pop
aam
adc
mov
push
push
sbb
roll
inc
int3
pusha
xor
xchg
jecxz
push
inc
aam
lea
xchg
push
push
sbb
mov
lahf
add
rcrb
jne
cmp
outsb
mov
jno
jge
fstl
jno
sub
pop
pop
dec
xor
push
fwait
int
xchg
das
pop
jo
pop
mov
jg
mov
xor
sbb
or
mov
sahf
andb
movsl
xchg
sti
or
int3
fstps
inc
aam
xor
lret
pop
test
rcrl
inc
mov
push
lcall
jno
dec
dec
inc
sbb
inc
mov
push
or
push
inc
outsl
repz
mov
aaa
and
outsb
je
xor
sub
addr16
mov
loope
outsb
mov
das
repz
sub
pop
add
and
mov
insl
cmp
mov
add
mov
cli
push
gs
shl
jns
inc
mov
outsb
lret
inc
shlb
mov
pop
mov
sbb
in
pop
xchg
fistps
and
xchg
xor
cmp
movsl
jae
xlat
out
xchg
inc
sti
mov
mov
stos
inc
mov
es
fcompl
cmpsl
imul
ljmp
mov
push
aad
pop
std
pop
and
mov
pop
mov
fcoml
and
nop
push
test
or
xchg
and
dec
pop
push
mov
shr
jae
dec
push
stos
ficoms
adc
movsb
rclb
push
xchg
aaa
sbb
sbb
xor
adc
and
push
in
fs
out
jecxz
adc
fsubr
loop
dec
jo
inc
sti
cld
xchg
in
fldcw
adc
add
iret
stos
jge
outsl
mov
mov
divb
test
cmp
aas
xchg
pop
daa
adc
aas
xlat
ljmp
addr16
jmp
mov
xchg
ret
cmpsl
lret
fildll
gs
push
jnp
mov
rorb
icebp
out
fsubrl
xor
in
gs
aaa
push
adc
scas
lods
push
lahf
push
or
dec
pop
cmpsl
sbb
mov
push
inc
adc
jnp
int3
mov
xchg
pop
movsb
adc
into
sub
adc
or
mov
fs
lcall
sti
cmp
sbb
xor
popa
add
push
xor
xchg
popa
mov
cmpsb
daa
cmpl
repz
dec
fdivrl
aaa
mov
xchg
icebp
in
cs
pop
pause
inc
xchg
push
lds
mov
ret
pop
adc
cmp
sbb
ret
cli
adc
or
iret
inc
push
iret
xlat
test
and
sub
addr16
iret
mov
pop
jnp
scas
cwtl
pop
jae
adc
pop
dec
idiv
xor
sub
loop
sbb
push
and
lds
test
lret
sub
pop
inc
pop
leave
pop
mov
cmp
mov
dec
sahf
clc
pusha
ljmp
sarb
testb
push
inc
fbld
inc
jae
push
repz
andb
aas
fs
pop
cmp
mov
dec
cmp
fs
xchg
adc
insl
pop
jmp
xor
sub
and
and
repz
dec
xor
adc
xor
and
sahf
jbe
cmpsl
shl
mov
xor
testb
daa
fildll
sub
das
fbstp
sbb
lret
repz
movsl
jne
add
into
out
push
lahf
fcoml
adc
add
push
pop
mov
xor
push
inc
xchg
mov
cs
xchg
push
mov
in
pop
sub
lods
bound
xchg
dec
xchg
inc
add
push
fwait
out
adc
mov
cli
sub
push
mov
cmp
adc
into
or
nop
ljmp
popf
push
push
mov
xchg
shl
push
das
enter
jnp
das
in
sahf
or
mov
lret
push
stos
adc
addl
lcall
sbb
or
xor
or
test
dec
mov
and
stos
aaa
pop
push
daa
hlt
daa
cmp
int3
xor
inc
call
test
jp
lcall
pop
cltd
push
add
je
scas
lock
shll
and
iret
and
in
adc
sub
cmpb
ret
shlb
popf
inc
xor
loope
adc
mov
pop
cli
std
lret
mov
cwtl
test
cmp
xchg
adc
aad
push
inc
push
out
sbb
call
xchg
daa
lahf
xchg
rorb
jg
and
or
scas
frstor
fldt
xor
adc
push
stos
adc
pop
add
sahf
or
xchg
lcall
jnp
adc
mov
xchg
pop
int3
adc
fs
lret
aaa
inc
cmc
ss
or
dec
test
sbb
fnstcw
pop
pop
jecxz
mov
movsl
lock
mov
cmpl
iret
imul
mov
add
sti
xchg
lock
aam
mov
push
xor
repnz
mov
or
loopne
fildl
jp
fcoms
dec
scas
lahf
mov
cwtl
lock
mov
sahf
xlat
mov
ja
das
adc
xlat
arpl
and
sahf
ss
or
sub
icebp
mov
lret
ja
cmp
aaa
imul
imul
dec
inc
jns
call
xchg
sbb
mov
inc
sti
aas
add
pop
adc
jo
mov
jb
sti
popf
ja
push
pop
cmp
lcall
dec
xor
push
sarl
add
adc
mov
and
dec
pop
lahf
sbbl
pop
incb
adc
sub
nop
test
int
xor
divb
sti
pushf
aam
test
xor
pop
ret
inc
dec
arpl
out
leave
jg
inc
adc
in
test
cs
jge
adc
lret
sti
xlat
mov
push
mov
mov
add
jle
mov
aaa
dec
clc
inc
jnp
push
sub
and
lcall
sub
pusha
dec
cwtl
fstl
add
xchg
inc
lahf
popa
push
sti
fs
sub
adc
lcall
test
adc
or
cld
cli
pop
xchg
jge
nop
push
fwait
sbb
sub
popa
push
pop
das
mov
movsl
fucomi
push
add
aad
push
jg
pop
ja
push
aad
lock
jne
aam
leave
adc
int
mov
push
pop
inc
ret
and
std
push
js
pop
pop
cli
add
insb
or
lea
in
in
mov
rcrl
jecxz
xor
cmp
cs
sub
mov
cwtl
sbb
adc
push
add
mov
jb
in
es
mov
xchg
xor
inc
xorb
xor
cli
je
mov
jo
sbb
adc
adc
pop
and
mov
jns
or
icebp
sbb
sbb
inc
sbb
adc
ficompl
xchg
inc
dec
loop
sub
inc
or
nop
popf
shll
push
pop
dec
out
mov
in
mov
pop
mov
or
mov
mov
sub
in
inc
in
jnp
adc
out
lret
pusha
add
lret
pop
les
cmp
ret
push
sub
insl
ljmp
jnp
sbb
enter
icebp
cs
cmp
cmp
pop
adc
mov
sub
push
mov
aas
push
repnz
testb
addr16
sti
push
clc
jne
addb
sub
pushl
or
inc
push
popf
je
enter
sbb
push
dec
push
and
nopl
xchg
rcl
xor
or
aad
sbb
pop
addr16
adc
and
pop
scas
test
push
loopne
xlat
shr
jmp
and
lds
sbb
mov
or
jae
dec
and
outsb
inc
fwait
mov
addr16
lds
and
leave
or
lahf
mov
jmp
out
mov
jno
push
add
xor
loop
xchg
mov
in
lds
jb
pop
lret
cmpsl
nop
xor
mov
and
cmc
lahf
lods
fcompl
add
pop
adc
mov
push
jae
mov
and
add
std
pop
pop
and
decl
adc
or
cmp
mov
adc
lcall
or
testl
sahf
adc
out
xor
cmpsb
shrb
xor
mov
push
xchg
test
adc
clc
popf
jns
jnp
mov
scas
jne
adc
out
jp
and
popf
addr16
jecxz
sahf
mov
and
add
push
outsb
scas
xchg
push
repnz
out
push
pop
fwait
dec
in
inc
jmp
xor
and
das
ja
adc
leave
add
mov
mov
sahf
test
sbb
xchg
mov
arpl
cmp
add
mov
mov
sbb
pop
adc
std
dec
mov
rcll
fcompl
or
outsb
or
inc
movsb
pop
mov
stos
pop
dec
ljmp
or
and
jmp
inc
lds
lret
sbb
and
imul
ja
add
out
ss
xor
mov
int3
stos
xchg
dec
jbe
test
cmp
sti
mov
pop
dec
cs
mull
sahf
inc
jg
sti
fisubs
pop
pop
mov
mov
adc
mov
sbb
sti
xor
cmc
lret
aam
push
adc
push
ret
les
xchg
pop
sub
jmp
or
mov
fwait
rol
test
pop
fists
clc
bound
and
pop
add
xchg
or
dec
orb
dec
xchg
and
push
movsb
inc
sahf
cmp
test
and
orl
mov
call
mov
nop
out
dec
clc
add
push
out
sarl
and
loop
add
lcall
lock
xchg
lret
lds
mov
jmp
lods
bound
push
xlat
dec
sub
or
xchg
pop
sub
sub
sub
push
sub
jl
xor
stos
mov
iret
adc
hlt
add
push
ret
add
aas
loop
rolb
jg
inc
std
jbe
adc
fsts
xor
je
jecxz
push
aaa
pop
imul
xchg
test
nop
add
xor
xchg
cli
dec
insb
into
dec
sub
lahf
inc
pusha
sbb
inc
aas
cmp
mov
push
mov
mov
imul
in
scas
mov
clc
fnstcw
jnp
pop
imul
pop
xchg
pop
loop
pop
fst
fsubs
xchg
aam
fwait
lahf
ret
jbe
in
or
add
cmp
stc
hlt
adc
jecxz
mov
mov
nop
xchg
jge
rcll
stos
cltd
scas
add
jne
xchg
jae
nop
imul
aam
data16
ds
in
xlat
fucom
jbe
aam
in
lcall
xchg
rcrl
pop
jmp
mov
in
lods
jo
push
mov
mov
aad
jl
dec
jmp
mov
popf
adc
imul
sub
cld
fldl
lss
loop
das
adc
dec
gs
inc
pop
mov
cmp
mov
fildll
orl
dec
hlt
add
sti
out
sbb
dec
jno
sub
sbb
push
xor
jae
xchg
pop
ret
ss
lock
or
sbb
sahf
pop
adc
outsl
jg
or
cld
xchg
shr
push
ljmp
xor
cmp
adc
fwait
jge
xor
inc
loope
arpl
dec
jbe
xor
stos
xor
and
iret
adc
sub
push
cmp
aam
push
pop
or
mov
js
fstps
adcb
cmc
or
mov
pop
push
sbb
jmp
sub
dec
mov
jle
push
leave
mov
push
lahf
arpl
stos
mov
dec
jmp
out
xorl
dec
push
je
shlb
in
sub
push
xchg
decb
push
push
adc
xor
jae
mov
xchg
je
les
stos
test
mov
and
ds
or
ljmp
cli
dec
lds
pop
mov
pop
sbb
mov
insb
push
pusha
mov
fcom
test
clc
repnz
das
xchg
fs
in
lds
mov
in
inc
jae
mov
imul
mov
xchg
jge
cwtl
int3
les
pushf
sti
push
cmpl
mov
fistps
pop
comiss
push
or
inc
adc
cmpsl
subb
out
pop
mov
mov
dec
xchg
pop
sub
outsb
xchg
daa
dec
push
cltd
xchg
in
js
aas
movsl
push
in
popl
fs
xor
sub
out
daa
inc
pop
add
fbstp
lock
sbb
xchg
popa
bound
in
push
mov
insb
mov
xor
loope
xor
out
sbb
pop
cmp
aam
test
lods
inc
mov
in
inc
decl
add
or
mov
xor
jbe
adc
sbb
das
cmp
inc
dec
ljmp
mov
scas
loope
lods
add
add
ja
dec
cmpsl
sub
out
mov
mov
mov
dec
scas
sti
inc
movsl
push
dec
push
adc
inc
dec
sti
add
cmc
xor
xor
sti
cli
movsb
push
dec
popf
jne
push
and
add
aas
popf
inc
jge
data16
cmp
cmpsl
into
in
lret
sub
scas
jecxz
or
or
dec
dec
sub
ficoms
jbe
sbb
pop
fimuls
out
adc
and
cmp
test
les
nop
sti
leave
jo
pop
or
cwtl
cmpsb
and
push
lret
in
and
cmp
std
sti
dec
cmp
inc
fs
enter
add
or
sbb
pop
and
js
stos
fs
pop
and
pusha
loope
mov
test
lods
xchg
mov
jg
jp
pop
adc
shlb
xchg
fs
fbstp
inc
pop
jbe
out
mov
push
sbb
test
fs
sub
xchg
daa
call
scas
cmp
xchg
xlat
jns
andb
pop
inc
out
gs
mulb
jle
inc
adc
dec
stos
xor
jecxz
cvtdq2ps
sbb
mov
ljmp
incb
mov
add
sub
movsb
pop
xchg
push
add
lret
fstp
add
jp
or
cmp
bound
or
test
out
mov
adc
ret
jae
mov
test
dec
inc
sbb
addr16
jnp
xor
pop
xchg
and
mov
fsts
push
xor
ret
sbb
imul
push
push
mov
xor
jmp
fwait
sbb
nop
movsl
pop
mov
orb
push
gs
pop
and
jmp
out
add
mov
and
outsl
mov
and
repz
pop
fistl
aas
mov
mov
mov
mov
les
loop
jle
mov
int3
movsl
jo
lahf
enter
xchg
aad
inc
pop
add
jo
add
add
and
in
sub
arpl
jmp
sbb
dec
sbb
loope
gs
pop
fidivrl
push
push
and
mov
mov
xchg
fdivs
jecxz
test
push
push
pop
and
mov
in
inc
call
sbb
lods
inc
mov
call
leave
pop
pop
adcb
and
daa
add
pop
insb
add
add
popf
push
push
lods
loopne
insb
pusha
test
enter
jmp
xor
lahf
mov
pop
or
fiaddl
leave
pop
xchg
add
roll
je
sbb
pop
push
dec
cmpsb
xlat
adc
adc
popa
loope
adc
bound
adc
mov
adc
jo
push
inc
mov
addr16
or
adc
adc
into
or
jl
sbb
xchg
dec
into
loop
or
push
and
dec
inc
dec
aaa
dec
push
in
cmpsl
xacquire
popf
push
sub
stos
mov
cmpsl
fmull
cwtl
jecxz
sti
xor
dec
mov
mov
dec
lahf
nop
in
fld
pop
fs
insb
stos
sbbb
xchg
mov
and
push
push
or
adc
mov
adc
push
inc
pop
push
stc
or
mov
inc
addb
sbb
push
mov
add
cmp
roll
outsl
add
clc
push
mov
enter
cwtl
mov
xchg
imul
pop
jnp
xchg
cmpsl
mov
push
shrl
orl
and
inc
push
inc
mov
push
cmpsb
push
push
jnp
mov
inc
imul
inc
les
gs
cli
mov
jns
jle
imul
cld
daa
data16
inc
cltd
inc
pop
out
ja
jae
inc
push
je
inc
rcll
pop
pop
inc
or
sub
popa
xchg
aam
fcmovbe
and
test
jle
fst
cli
shll
sahf
and
enter
outsb
and
xlat
stos
imul
adc
movsb
push
movsl
adcb
imul
dec
scas
lods
or
sbb
push
negb
dec
sbb
call
adc
mov
push
xchg
xlat
rcrb
sbb
and
xlat
mov
nop
inc
out
sbb
add
jl
pop
sbb
mov
test
pcmpgtb
xor
pop
mov
mov
push
xor
je
mov
mov
jnp
in
lcall
insl
inc
aas
test
clc
in
inc
and
and
and
sahf
aas
daa
jbe
notl
xchg
jno,pt
cli
adc
add
sbb
rcll
rol
imul
divl
fbld
pop
pop
sbb
sbb
inc
sub
and
addr16
push
sbb
or
jmp
mov
test
inc
dec
fisubrl
test
or
lea
cmp
dec
test
jmp
cmp
mov
pop
adc
add
daa
or
inc
inc
cmp
sbb
clc
iret
dec
xor
roll
xchg
or
aaa
sub
jne
pop
add
adc
sub
ljmp
enter
add
or
mov
xchg
mov
jp
adc
dec
sub
xchg
push
inc
dec
jmp
cmp
jnp
ljmp
push
nop
push
jg
push
mov
and
scas
mov
adc
inc
jmp
jb
movsb
xor
dec
xor
scas
lret
shll
add
sub
aad
movsb
sbb
dec
jp
rol
and
fcmovnb
bound
inc
fbstp
cmpb
enter
pop
jmp
dec
add
out
mov
or
loop
inc
mov
jl
ds
mov
adc
pop
imul
sub
sti
dec
cmp
std
lret
jg
pop
pop
mov
xchg
pop
fstps
out
movsb
jno
add
outsl
mov
dec
popf
xchg
hlt
out
push
inc
add
shl
push
lahf
cltd
cmp
pop
stos
mov
lods
aaa
in
in
in
lods
testb
sub
pop
mov
push
xchg
lahf
xchg
sub
in
mov
sar
out
out
xchg
cmpsl
sti
sti
out
out
daa
pop
iret
nop
cmpsl
cwtl
into
lock
mov
sbb
out
or
adc
mov
sbb
stos
cmp
adc
loopne
mov
xchg
xlat
mov
in
ljmp
jae
push
pop
dec
test
xchg
icebp
je
and
clc
cmp
pop
jns
and
inc
xor
or
jle
out
pop
scas
daa
mov
notb
ret
pop
adc
or
das
mov
movsl
out
addr16
and
rclb
lods
jg
movsb
and
add
jne
out
aam
call
or
clc
xor
in
lock
test
lcall
nop
add
pop
sbb
inc
popf
iret
jo
adc
sub
pusha
push
fldt
cld
pop
fs
jae
jbe
sub
aad
out
xlat
mov
int3
iret
sbb
pop
clc
inc
sub
sti
ret
cltd
dec
clc
xchg
fwait
mov
dec
push
in
or
inc
push
fldcw
add
scas
sub
repz
sub
xchg
mov
dec
fs
mov
sbb
adc
dec
and
das
sti
jp
mov
mov
stc
mov
in
mov
mov
push
jbe
pop
mov
popa
imulb
shrb
rcrb
je
leave
and
call
sarb
adc
rcrb
sub
mov
mov
adc
xor
mov
sti
sub
pop
mov
sti
loopne
in
scas
hlt
stos
bound
and
test
test
push
cs
adc
xor
inc
clc
sti
lret
cwtl
out
cmp
push
jl
out
mov
dec
xor
adc
adc
jl
xlat
mull
sarl
sahf
push
lcall
test
and
xlat
mov
bound
push
xchg
pop
lcall
inc
cmp
pop
cmp
jl
imul
test
lods
push
inc
aaa
dec
ret
sbb
imul
xor
lods
stos
or
cmp
call
jbe
in
nop
frstor
inc
mov
mov
in
and
xchg
xchg
mov
in
cmc
pop
mov
inc
cwtl
pop
hlt
cld
or
hlt
xchg
jmp
pop
add
xor
fistpl
adc
cmp
std
pop
in
mov
pop
in
jecxz
shll
jnp
or
imul
ret
mov
jns
lahf
fisubl
push
mov
adc
ss
int3
stc
scas
jne
out
iret
call
mov
adc
lds
popf
inc
push
push
fsubrs
adc
jmp
bound
mov
jae
mov
jne
inc
dec
pop
mov
pop
ja
xor
les
ljmp
daa
clc
sbb
sbb
jle
jno
data16
sub
daa
push
clc
push
xchg
cs
adc
imul
fistpl
mov
les
pushf
mov
jns
add
clc
or
sub
or
xchg
xor
add
or
ja
mov
mov
push
pop
call
lea
outsb
loopne
fs
mov
mov
insl
ret
xchg
sub
scas
fsubs
lahf
mov
xchg
mov
fsubrl
inc
adc
adc
cmp
stos
mov
insb
and
or
or
popa
addr16
nop
pop
and
movlps
adc
inc
pop
and
push
xor
adc
or
cmp
adc
mov
xor
adc
xchg
or
mov
lret
xchg
fnstsw
cwtl
xor
mov
out
nop
shr
pop
fwait
add
jg
in
in
xor
xor
pop
inc
scas
fnstsw
sbb
or
lret
xchg
fcmovu
and
fstps
mov
dec
adc
push
sti
xor
cltd
mov
sub
jge
idivl
outsl
out
mov
jb
xchg
sti
icebp
loopne
enter
inc
loope
xchg
and
bound
ja
cli
lret
jp
into
sahf
out
gs
fistpll
jl
pop
fsubrl
xor
call
sbb
ljmp
xchg
popf
dec
outsl
xor
jg
xor
or
inc
cmc
xchg
xchg
leave
jmp
stos
cs
loop
jg
in
or
xchg
or
add
ss
insb
xor
xchg
ljmp
sub
pop
cmc
jmp
push
fcoml
hlt
and
lret
outsb
adc
ficoml
xchg
add
and
iret
mov
dec
mov
or
push
xor
inc
repnz
dec
in
mov
pop
gs
inc
das
das
dec
mov
lret
xor
jmp
jle
pop
xlat
movsb
sbb
cli
cwtl
mov
dec
pop
or
and
imul
cmp
cmp
test
xlat
dec
out
push
mov
push
and
dec
adc
jmp
mov
mov
cli
and
in
mov
and
je
arpl
push
xchg
pop
gs
inc
mov
icebp
adc
stos
sub
dec
xor
popa
pop
mov
or
cwtl
push
mov
adc
std
xchg
andb
pop
stc
dec
or
pop
js
and
stc
sub
xor
mov
in
sub
out
loop
repz
cmp
cs
insl
add
arpl
sbb
in
sbb
inc
fstpl
fwait
sub
stos
xchg
xchg
inc
cwtl
jl
mov
test
movsb
imul
gs
ljmp
in
das
cltd
or
inc
add
test
mov
xchg
scas
push
decb
in
xor
popa
jae
xor
or
into
std
out
push
enter
jecxz
and
mov
sbb
dec
push
ljmp
fxch
sub
pusha
pop
jne
movsl
add
xchg
and
lods
fmull
call
lds
call
or
outsl
aas
mov
inc
sub
push
push
mov
mov
xor
inc
add
lcall
out
das
mov
cmp
xchg
jmp
jnp
inc
push
mov
and
dec
push
cli
into
mov
pusha
push
cmp
xor
shl
sub
jp
jp
fistl
mov
pop
icebp
xchg
and
dec
jp
jne
sbb
or
sub
adc
xor
pop
inc
je
mov
pop
mov
sbb
in
jmp
pop
addr16
mov
ss
jge
lock
push
sti
cmp
aad
cmpsb
dec
adc
inc
cmpsl
sub
out
repnz
sub
sbb
xor
push
xor
add
or
fimuls
cmp
loopne
shlb
add
fcomps
movsb
adc
sti
dec
lahf
addr16
sub
push
xchg
pop
sub
push
xor
test
cld
out
mov
xchg
mov
sub
scas
adc
mov
enter
mov
mov
ficoml
and
testl
jnp
loope
popf
fldcw
fmulp
rcrl
jg
stc
push
mov
shl
daa
fidivrs
jo
xlat
sbb
in
cmp
les
sahf
adc
mul
cmpsb
ds
mov
xor
and
push
inc
sub
sbb
adc
stos
xor
add
ret
std
push
mov
idivb
inc
push
push
or
mov
adc
fcoml
scas
sub
mov
mov
pushl
or
cli
int
call
dec
inc
add
adc
xor
and
lds
mov
aam
dec
lods
je
jmp
loope
insb
or
popa
addr16
nop
pop
gs
add
push
and
pop
xchg
div
loope
das
mov
jmp
fists
das
clc
sti
mov
sti
in
cmpsl
xchg
mov
decb
or
mov
clc
xor
xchg
pop
fisubl
add
mov
adc
mov
mov
cs
adc
jne
subl
adc
leave
aad
cmp
xor
pop
xchg
sti
rcll
aas
fnstenv
rorl
adc
mov
enter
sub
inc
inc
adc
adc
fs
or
fs
adc
clc
sub
mov
push
ss
frstor
and
mov
lods
xchg
and
pop
stos
data16
test
or
ds
adc
push
xor
push
sbb
push
mov
push
push
repz
fiadds
push
add
add
out
ret
adc
lock
ss
bound
xchg
push
pop
nop
fcomi
push
stos
mov
in
jmp
mov
icebp
jno
xor
xor
aad
or
jmp
mov
mov
into
adc
jns
adc
in
out
nop
sub
adc
int3
fstl
dec
nop
pop
xchg
test
nop
enter
and
sbb
das
or
das
in
clc
dec
jecxz
popf
dec
add
dec
adc
xor
outsl
cmp
sub
cmp
shrb
push
adc
mov
rorb
jmp
push
lret
dec
add
lret
add
lret
cld
sbb
in
cmp
push
out
and
movsl
mov
stc
das
pop
cmp
adc
lcall
inc
pop
add
mov
mov
cld
test
sub
pushf
adc
mov
pop
adcb
xor
stc
add
mov
stos
das
lcall
and
movsl
rcrb
mov
ret
jbe
jp
pop
push
jbe
sbb
stos
aam
xchg
jle
hlt
jae
inc
add
and
inc
fwait
push
sti
jge
movsb
fcmovu
js
shr
into
out
cltd
lock
xor
xor
ljmp
mov
inc
sbb
stos
xor
jecxz
arpl
mov
lret
adc
adcl
sti
and
xchg
mov
push
adc
rorb
jo
daa
push
repnz
jbe
pop
sub
inc
cltd
xor
add
sub
fisttps
mov
and
shlb
adc
mov
pop
sub
mov
fnstsw
scas
sbb
arpl
clc
sbbl
in
fadds
sub
imul
negb
add
gs
inc
dec
shr
pushl
jecxz
xchg
clc
mov
sbb
mov
aad
xor
pusha
lcall
leave
jge
cmpsb
daa
insb
jbe
ljmp
pop
inc
test
xchg
es
mov
sub
push
adc
sub
in
and
dec
push
shrb
dec
jae
clc
outsl
cmpsb
mov
push
es
ds
dec
lret
ja
imul
xchg
inc
pop
dec
jge
test
add
jae
inc
decl
or
pop
mov
jecxz
pop
mov
inc
lods
insb
inc
sub
mov
aad
sub
stos
xor
add
nop
sub
and
popf
mov
pop
mov
sarb
inc
iret
add
pop
mov
adc
adc
add
xor
adc
subl
jnp
jg
xchg
pop
push
insl
xchg
and
mov
mov
adc
xchg
cmp
and
xchg
xchg
inc
jecxz
out
sub
push
sahf
aad
add
cmp
in
daa
xchg
adc
imull
mov
pop
cmp
lock
mov
lret
xchg
scas
and
sti
stos
fstpl
ret
dec
addb
cmp
push
nop
movsl
jle
pop
or
jle
fsubl
push
setne
push
inc
out
ret
out
cmp
inc
mov
inc
adc
inc
bound
enter
pop
jmp
mov
and
push
stos
dec
pop
jl
pop
stos
mov
icebp
push
dec
inc
mov
icebp
pop
push
jo
decl
mov
dec
mov
mulb
popf
mov
sub
pop
sti
or
lahf
incb
jae
and
aam
mov
jns
leave
clc
xor
sbb
negl
jecxz
adc
enter
push
loopne
cmp
or
add
xchg
sbb
dec
or
mov
pop
sbb
sti
das
push
jle
insl
in
ljmp
pop
repnz
jo
mov
neg
inc
fsubr
jb
pop
cli
je
sub
mov
das
xchg
cmp
arpl
add
xchg
repnz
shr
out
mov
push
adc
dec
pop
mov
lods
out
fs
mov
jg
adc
pop
bound
js
dec
loop
daa
xor
aad
xor
mov
mov
out
and
cli
test
in
sub
jne
mov
or
rcrb
push
adc
rcl
inc
fcomps
mov
dec
sbb
je
fninit
idiv
jl
imul
adc
lahf
iret
repnz
mov
mov
stc
xchg
mov
repz
mov
or
mov
and
mov
stc
adc
cmpsb
ljmp
adc
rorl
adc
jne
leave
dec
cmp
add
or
jo
mov
dec
and
adc
test
lods
xchg
mov
enter
mov
add
arpl
xor
mov
xchg
push
lock
pop
stc
add
dec
fbstp
in
out
mov
mov
pop
scas
enter
cmpsl
sub
inc
push
sbb
adc
jp
scas
les
mov
das
cs
push
jns
sti
push
push
push
pop
adc
test
push
mov
mov
push
cmpsb
and
lds
add
je
xchg
xor
jns
sub
mov
ret
adc
push
adc
shl
mov
or
addr16
sti
je
popf
pop
ror
adc
test
and
lret
movsl
adc
lahf
mov
rcrb
jo
test
adc
fisubrl
dec
lcall
or
xchg
mov
rcll
mov
mov
pop
popa
sbb
lahf
mov
movsb
jns
test
cmp
xor
mov
das
clc
pop
pop
dec
mov
aad
pop
in
lret
lret
lods
xchg
add
mov
fs
loopne
add
rorb
mov
sub
aad
sub
clc
sbb
ja
lea
inc
cmp
and
lahf
adc
xchg
add
mov
adc
xor
aaa
xorb
out
or
xor
xor
test
and
clc
adc
mov
daa
pusha
aaa
hlt
test
or
dec
rcll
xchg
adc
xor
push
inc
mov
aaa
push
fs
inc
inc
sub
inc
push
jae
sti
mov
mov
push
push
adc
mov
popf
or
or
rorb
adc
cmpsb
ret
add
mov
fistpl
mov
nop
jmp
outsb
jecxz
cmp
sub
in
adc
mov
test
sbb
sub
cmpsl
adc
xor
xor
insb
shrb
push
shrl
push
jp
dec
push
inc
sahf
movsb
push
xor
dec
ret
lcall
push
cltd
mov
and
xchg
and
push
sub
cmp
rcll
shlb
push
adc
outsl
enter
lcall
jle
or
cltd
out
xor
mov
outsl
pop
mov
roll
push
lret
push
cmpsl
sub
lcall
aam
pusha
std
insb
sbb
pop
sbb
dec
xor
hlt
mov
outsl
adc
and
inc
sbb
push
gs
popa
or
addb
adc
add
dec
mov
cs
rcrb
mov
sub
sbb
sbb
cmp
and
les
sub
test
mov
imul
or
lret
push
insb
jg
adc
cwtl
inc
pop
inc
xchg
xor
push
repnz
daa
dec
shrl
int3
push
or
seto
adcb
stos
ja
sbb
sbb
les
fyl2xp1
pop
lea
adc
insl
or
adc
mov
clc
push
cmpsl
cmp
adc
sub
insb
cmpsl
cmp
enter
movsl
mov
test
adc
scas
and
adc
mov
testl
sbb
outsl
dec
addr16
xchg
pop
xor
pop
adc
jle
and
sub
aad
pop
add
mov
insl
jo
leave
sahf
inc
cmp
pop
xchg
outsl
or
jb
mov
das
or
push
cwtl
adc
mov
add
mov
jmp
loopne
mov
out
daa
sub
insb
or
jmp
andb
xor
lods
js
lcall
adc
scas
loop
inc
xchg
clc
push
pop
and
fisttpl
inc
pop
and
xchg
stc
or
adc
bound
adc
push
and
mov
jb
dec
outsl
sbb
jae
fiadds
mov
pop
sub
cmp
cmp
ret
sub
cwtl
sub
sub
adc
push
mov
pop
fcoms
cli
mov
inc
mov
push
adc
jb
sub
pop
push
mov
xchg
dec
mov
pop
popa
inc
push
inc
mov
cwtl
push
daa
xchg
shl
dec
xor
pop
in
adc
clc
cmp
outsl
or
and
jl
and
repz
push
mov
out
xor
rorb
jo
pop
jnp
imul
jne
mov
in
pop
inc
jb
ljmp
fldt
xchg
xor
adc
push
popa
jle
in
or
jns
jns
mov
push
movsb
cltd
pop
lahf
faddl
sub
inc
adc
sub
nop
mov
xor
and
push
push
repz
imul
mov
adc
xor
fisttpl
xchg
fisttpl
dec
push
dec
push
rcrl
sub
fildll
add
pop
test
rclb
mulb
add
jb
pop
nop
pop
and
nop
aas
mov
push
pop
nop
pop
and
mov
pop
pop
inc
or
cmp
sub
cmp
xchg
enter
enter
cmp
mov
repnz
add
jb
pop
nop
and
cmp
cmpl
and
pop
nop
sub
push
nop
test
das
adcl
or
outsb
das
and
push
and
pop
pop
cmp
sub
and
pop
and
jns
add
xchg
das
and
pop
adc
pop
mov
rolb
nop
mov
jae
pop
sbb
test
ja
pop
in
das
and
sub
push
jns
add
cmp
or
arpl
sub
sbb
sub
pop
jno
add
cmp
or
outsl
adc
enter
push
sbb
jns
and
and
pop
inc
fwait
and
push
mov
and
jns
or
mov
xacquire
push
sbb
inc
pop
loop
sbb
sbb
test
xor
cmp
das
and
adc
mov
inc
xor
dec
jns
or
adc
scas
std
xchg
pusha
xchg
push
adc
call
fnsave
cltd
lea
stos
jb
and
adcb
mov
in
or
add
lcall
push
lea
aaa
and
mov
or
ss
daa
push
nop
mov
sub
inc
fldcw
add
inc
push
lea
xor
nop
pop
jns
nop
inc
adc
fwait
mov
xor
dec
faddl
mov
lods
mov
add
insb
ja
sbb
jnp
sbb
jg
imul
addr16
insb
imul
and
inc
add
stc
bound
xchg
mov
xor
xchg
sbb
lahf
mov
xchg
roll
mov
xchg
enter
insb
mov
out
sbb
mov
jge
mov
or
mov
rorl
and
xor
sub
pop
scas
lcall
jmp
mov
xchg
scas
push
in
cmp
arpl
inc
and
mov
or
push
and
mov
test
cmp
xor
xchg
mov
mov
cmp
xor
adc
or
mov
cmp
jecxz
leave
sub
push
adc
add
pop
push
and
mov
xchg
and
movsb
push
adc
adc
xchg
adc
cmp
inc
jae
add
or
sub
sub
fcoml
adc
xor
cmp
int3
jl
push
sbb
fistl
pop
adc
dec
clc
sub
fwait
add
add
sti
shrb
rolb
pushf
nop
sub
mov
ret
xor
jnp
sahf
inc
fbld
pop
mov
imul
mov
sub
jo
mov
rolb
jnp
cmp
inc
insb
adcl
sarl
xor
jmp
push
and
sub
jp
insb
jmp
js
pusha
and
outsl
aaa
test
and
fwait
sbb
and
push
fwait
daa
aad
je
gs
add
clc
sbb
mov
aam
lret
and
mov
les
xor
push
enter
mov
mov
pop
aaa
or
inc
adc
lods
imul
lcall
push
sbb
sbb
lea
pop
mov
cltd
push
jo
stc
fildl
jae
pop
push
jmp
push
xchg
decl
sbb
sbb
cmc
adc
nop
push
push
adc
cld
test
enter
hlt
or
adc
pop
push
sub
gs
jns
mov
pop
in
sub
and
inc
add
add
or
enter
jmp
inc
push
adc
or
xor
push
loop
add
jb
xchg
pop
nop
cmp
or
cmp
and
add
movsb
das
and
out
sbb
test
aas
or
add
and
inc
inc
adc
push
mov
pop
nop
cmp
inc
xchg
cmpsb
repz
lds
cltd
add
decl
es
out
xchg
mov
inc
ljmp
stc
push
dec
xor
cvtps2pi
insb
cmp
and
insb
loop
insb
jno
jmp
and
mov
lds
cs
popa
jo
adc
adcl
add
or
add
push
cmpsl
aas
xor
jns
faddl
shll
inc
dec
sti
lods
sbb
nop
add
ret
jns
sbb
or
idivl
push
adc
and
sub
sub
xor
popa
sub
mov
xor
or
add
lret
or
and
add
lock
jns
xchg
loope
dec
mov
pop
xchg
fwait
sbb
enter
mov
mov
mov
orl
call
gs
sti
loop
xchg
clc
mov
mov
inc
jp
or
in
jne
cmpl
in
mov
ljmp
mov
xchg
test
sub
sbb
adc
pop
int3
and
scas
jb
ret
popa
lea
ds
mov
bswap
cltd
mov
mov
cmp
ret
imul
stc
cmp
xchg
in
iret
jne
dec
hlt
dec
lcall
push
lret
mov
std
inc
dec
lods
mov
push
push
adc
push
gs
faddl
adc
lret
and
dec
sahf
inc
idivb
ret
inc
rcr
or
add
sub
push
pop
cld
inc
stos
or
xchg
mov
sub
sbb
sbb
push
pop
mov
leave
mov
loop
or
inc
push
sti
gs
mov
or
fdivl
in
outsl
sub
sbb
inc
mov
sub
or
inc
loop
mov
adc
aad
push
sbb
lock
xchg
mov
dec
lahf
xchg
push
movl
lret
enter
fxtract
test
push
and
sti
jbe
sub
pop
pop
cmp
cs
push
mov
pusha
adc
ror
inc
and
add
adc
sbb
pop
aaa
clc
loopne
cwtl
add
adcl
adc
mov
pusha
loope
ror
xor
inc
cmp
xor
sahf
lock
lods
cmp
fidivs
jae
cld
xor
aas
leave
repnz
fistpll
add
repnz
and
dec
sbb
fucomip
popa
dec
push
iret
and
mov
mov
or
jns
in
sbb
fildl
push
mov
inc
cmp
dec
sub
fs
aaa
and
enter
dec
dec
pop
mov
dec
mov
rcr
xchg
lods
and
dec
insl
addr16
or
addr16
pop
and
xchg
dec
push
sub
jno
ljmp
test
lret
xor
push
adc
and
mov
push
iret
sbb
pop
idiv
mov
and
mov
sti
movsb
or
jl
leave
test
lret
test
or
in
xor
jnp
adc
bound
pop
add
in
push
inc
cmp
bsr
ret
incl
and
adc
call
lret
jmp
pushf
add
pop
insb
jno
push
mov
adc
ret
xor
or
fstps
or
add
inc
rclb
repz
sbb
mov
pop
sti
repnz
out
test
lock
inc
imul
jmp
sbb
shlb
jle
mov
daa
js
ret
mov
fisttps
and
movsl
aad
int3
add
sub
cmpsl
pop
dec
lret
test
adc
lret
jge
test
inc
psrlw
aas
icebp
and
nop
push
sub
mov
push
nop
test
sbb
das
dec
nop
adc
mov
xchg
jns
pop
sahf
pop
fwait
repnz
ret
sub
mov
push
aad
inc
pop
adc
mov
xchg
xlat
jno
dec
push
pop
xor
flds
cmp
das
out
ja
xor
adc
push
dec
fwait
mov
dec
jecxz
sub
pop
and
adc
push
pop
adc
cmp
inc
popa
pop
data16
xchg
jle
adc
mov
sti
or
mov
dec
jmp
push
adc
mov
popf
jp
outsb
mov
mov
shll
pop
and
and
mov
pop
pop
xchg
lcall
inc
fsubrl
sub
inc
mov
cmpb
and
rorl
xchg
fiadds
adc
push
and
adc
in
jmp
mov
jecxz
mov
or
xchg
mov
inc
adc
xchg
mov
xor
mov
push
and
dec
ret
inc
cmp
pop
sub
xor
pop
pop
daa
es
nop
sub
push
pop
outsl
push
bswap
sub
push
mov
push
lret
cld
push
jb
adc
pop
cmp
inc
jecxz
popa
nop
pop
pcmpgtd
jns
xor
xchg
xchg
cmc
jb
dec
push
test
lods
xor
les
das
dec
leave
mov
push
into
push
dec
stos
mov
xor
mov
sub
lret
adc
adc
xor
inc
sub
lret
adc
mov
sarl
cmp
pop
pop
mov
push
jo
and
test
or
xchg
inc
mov
test
daa
test
mov
xor
push
dec
push
push
and
fidivl
repz
repz
mov
sub
mov
pop
add
jo,pt
and
lcall
inc
push
sbb
test
bound
jb
bound
sbb
std
cltd
adc
or
and
mov
adc
add
jnp
arpl
int3
cmpsl
scas
dec
xchg
out
gs
inc
out
mov
fldpi
lcall
cmp
cmp
call
imul
mov
add
data16
jmp
mov
sbb
test
jg
in
out
ja
mov
sub
pop
pushf
adc
dec
cli
insb
inc
outsl
pop
inc
loop
xchg
scas
test
or
int
and
and
mov
js
push
adcl
addr16
js
pushf
sbb
jecxz
dec
and
jecxz
ljmp
pushf
xchg
lods
push
jg
ja
test
les
outsl
arpl
aam
jnp
cld
sub
test
pop
pop
mov
or
sub
std
filds
out
sbb
push
adc
out
cwtl
js
aas
xchg
lock
adc
jbe
xchg
or
outsb
mov
xor
xchg
jle
iret
dec
adc
dec
into
adc
pop
or
jns
sbb
and
adc
sub
clc
xchg
pop
adcl
sub
xor
shl
filds
cmp
in
sub
mov
mov
in
fs
adc
and
aas
ret
xor
or
pusha
cwtl
pop
adc
adc
cmp
lods
incb
cld
cmc
sub
std
pop
sbb
in
xor
xchg
mov
pusha
pop
sbb
out
popa
jecxz
mov
lahf
xchg
push
scas
arpl
cmc
gs
fcoml
jmp
push
pop
fsts
addr16
ffreep
loopne
jb
pop
clc
mov
cltd
inc
ret
pop
lret
idivb
in
push
outsl
add
push
and
ljmp
cli
xchg
out
and
shlb
nop
push
orb
jbe
js
pusha
cltd
jmp
sbb
add
add
mov
sbb
insb
movq
and
bound
pop
vpunpckhqdq
das
hlt
fcos
cmp
and
mov
and
leave
adc
shll
push
jns
or
adc
adc
add
fidivrs
mov
mov
adcl
loop
inc
add
and
sbb
xchg
cs
mov
jnp
xchg
dec
push
sub
sub
out
jp
dec
out
je
out
mov
jnp
xlat
into
pop
adc
inc
add
data16
mov
fbstp
mov
jns
and
xchg
sti
dec
leave
aad
xchg
sti
out
testl
loope
cmp
mov
fs
stos
mov
mov
subb
rolb
ja
jl
popf
lcall
adc
xor
das
arpl
or
mov
iret
stos
sahf
or
lret
test
xchg
ss
andb
lahf
xchg
rcrb
mov
outsb
rclb
test
cmp
sti
and
call
mov
xchg
test
dec
xchg
in
and
xchg
fwait
jbe
les
call
dec
aaa
xchg
pop
outsl
cmp
lcall
mov
adc
jmp
xor
pop
adc
push
inc
xor
inc
jno
xorl
sbb
cs
xlat
fstl
jl
push
jp
sub
cmp
jmp
sub
in
push
rol
clc
dec
cwtl
pop
outsb
inc
xchg
cld
pop
pop
imul
popf
pop
jmp
lds
cwtl
negl
mov
or
hlt
push
das
mov
inc
das
push
push
out
xchg
xor
ds
mov
cltd
dec
adc
mov
xor
cld
popa
hlt
cli
and
pop
pusha
push
mov
lcall
nop
fs
ljmp
pop
ljmp
mov
and
adc
and
lcall
jmp
cmp
push
add
pop
bound
pop
das
push
sbb
pop
dec
aas
lret
xlat
pop
cmc
jns
and
sub
push
mov
data16
out
or
stos
adc
addr16
fldcw
add
icebp
out
mov
mov
sbb
nop
add
and
push
jmp
push
cli
push
mov
dec
dec
pop
out
xor
push
imul
ret
push
gs
add
add
stc
inc
fnstenv
loope
pop
push
inc
int
out
fistl
test
add
mov
adc
rorl
daa
jle
pop
pop
xchg
movsl
inc
das
lods
scas
aam
pop
ret
in
addr16
mov
jmp
imul
mov
xchg
aad
cmpsl
das
push
push
ret
sbb
addr16
or
in
fmuls
aas
sar
ljmp
lahf
aas
js
cli
sub
ret
pop
sub
sbb
jp
pop
gs
nop
cmp
out
pop
adc
cmpsl
clc
inc
sar
int
xor
or
push
mov
push
inc
lods
stc
cmp
push
les
cmp
pop
sbb
cmpsl
cmpsl
adc
fstpt
pop
cltd
or
mov
mov
out
jb
rcll
mov
and
pushl
mov
inc
xor
add
ficompl
mov
push
cs
ljmp
xchg
inc
adc
fnstsw
mov
xlat
stc
and
cmpsl
sahf
outsb
xchg
inc
popa
sbb
and
pop
cli
in
pop
aaa
sahf
mov
push
mov
andb
or
add
test
mov
lds
and
push
das
std
sbb
and
clc
dec
cltd
les
xchg
mov
sub
or
ds
xor
xor
adc
cmp
aas
std
or
xchg
mov
das
jno
inc
cli
inc
adc
fs
or
ljmp
daa
movsl
mov
or
rcrb
setbe
xlat
push
dec
loop
cmp
or
scas
push
or
sub
pop
leave
out
fldenv
dec
adc
jge
and
test
push
stc
pop
push
inc
push
aas
and
nop
frstor
sbb
push
xchg
and
and
jnp
and
clc
add
daa
or
repnz
repnz
inc
pop
sar
and
bnd
push
and
and
and
orl
xor
jae
jl
fbstp
stc
and
adc
repz
jno
jg
ficoml
or
clc
loop
in
push
ficomps
popf
subl
sbb
jl
push
mov
sbbb
popf
push
or
in
jnp
int
pop
xor
xlat
bound
and
inc
push
sbb
jnp
xor
sub
mov
data16
in
and
cltd
and
fwait
std
sub
sbb
sub
cli
dec
popa
dec
push
pop
ror
sub
repz
sbb
je
push
scas
sarl
in
dec
xchg
xor
and
xor
push
cli
or
cmp
adc
sbb
jae
xchg
je
jno
daa
hlt
inc
adc
rcr
in
mov
and
xor
sbb
fwait
sub
dec
sbb
xlat
xor
iret
lahf
lock
pop
jl,pt
and
inc
sbb
xor
lahf
aaa
add
sub
inc
test
dec
and
pusha
mull
jbe
mov
sbb
clc
and
xchg
dec
mov
pop
pop
cmp
arpl
mov
dec
push
in
gs
enter
pop
inc
add
sbb
lahf
add
jg
mov
jbe
inc
cmp
mov
ja
into
xchg
outsb
xor
sub
clc
inc
repz
cli
outsl
pushf
mov
shl
std
xor
lods
aad
adc
inc
repz
enter
mov
bound
clc
ja
shlb
pop
gs
adc
addb
es
iret
clc
insb
jl
cltd
adc
mov
sub
cltd
add
mov
mov
roll
xchg
and
fwait
adc
sbb
hlt
nop
int3
or
outsl
sbb
stc
mov
xor
or
shll
arpl
xchg
ret
cmp
xchg
dec
call
xor
adcl
push
cmp
clc
lret
mov
lods
xor
fildl
sti
pop
in
int3
sahf
lahf
xchg
push
cmp
cmp
adc
xchg
jl
mov
push
xor
in
movsl
mov
rdpmc
inc
cmp
sub
inc
rorl
and
inc
push
jne
dec
fs
leave
jmp
cmp
stos
xor
cwtl
jecxz
sub
fisttpll
daa
jecxz
adc
sub
jmp
inc
or
and
push
push
add
push
scas
pop
mov
mov
ss
dec
insb
in
mov
inc
mov
push
sti
mov
and
shrl
and
lahf
lods
es
jmp
push
jmp
push
adc
ss
imull
out
int3
sbb
mov
dec
jmp
jmp
and
std
and
cld
and
inc
enter
jno
and
nop
loopne
or
lcall
mov
lods
outsb
adc
cmp
xlat
enter
ret
mov
adc
insb
inc
sub
or
inc
lods
js
lods
pop
xchg
lret
dec
aaa
cmpsl
pop
movsb
mov
ds
adc
cli
mov
test
jecxz
loop
xchg
sti
pop
js
frstor
jecxz
leave
addr16
popl
pop
popf
or
mov
inc
repz
push
rcl
mov
xchg
mov
mov
and
dec
cmpsb
mov
outsb
mov
xlat
test
lea
lock
cltd
mov
mov
sbb
mov
adc
xchg
cli
mov
pmullw
ds
adc
adc
pop
xor
sub
and
lock
imul
push
push
adc
aas
adc
push
insb
pop
dec
xor
fwait
jmp
dec
mov
dec
imul
daa
jg
xchg
xchg
cmp
push
xor
jnp
in
dec
seto
sti
cltd
fwait
xchg
int3
gs
lret
adc
cli
xchg
lret
cs
and
cmp
inc
fs
push
inc
orl
inc
and
sarb
mov
xor
pop
and
dec
roll
and
clc
push
lcall
jmp
mov
out
sar
dec
or
inc
and
sbb
jmp
test
fxch
sub
ret
or
rol
cmp
jle
sbb
and
rcrl
rcr
add
xchg
fucomi
call
mov
leave
inc
popa
and
mov
push
dec
leave
ljmp
xorl
and
and
push
mov
or
push
inc
push
aad
cli
pop
inc
pusha
lock
insb
cmp
push
cmp
and
imul
push
stos
adc
push
movsb
or
shll
ds
sub
loopne
mov
sub
clc
cmp
sbb
sti
or
lods
ret
fmull
in
jle
lds
xchg
mov
insl
movsb
xor
xchg
enter
test
pop
mov
mov
mov
popa
notl
xchg
xorb
inc
cmp
cmpsb
sbb
mov
inc
mull
leave
jae
inc
sbb
mov
je
std
xor
dec
hlt
cmpsb
les
fdivrs
jno
jmp
cli
lret
pop
adc
jge
outsl
push
dec
lcall
into
cmp
out
sub
lret
inc
sub
or
adc
adc
testb
fwait
or
addb
popa
push
out
and
push
int3
push
mov
sbb
xchg
adc
ret
pop
adc
adc
sti
adc
pop
lock
push
loopne
cmpsb
rorl
mov
das
shr
jge
and
sbb
or
cs
mov
xor
xchg
pop
addr16
mov
mov
cmp
lea
push
sti
xchg
push
in
mov
imul
cmp
lret
cs
sub
aas
xchg
jg
mov
or
sbb
and
pop
inc
sub
cmp
test
and
movsl
ja
adc
test
sahf
push
sbb
cmc
sbb
or
mov
lock
jo
pop
mov
test
cmp
jecxz
add
xchg
mov
lret
out
nop
sbb
jecxz
adc
pop
orl
lods
sbb
rorl
lods
jle
push
or
loop
jl
and
icebp
mov
neg
fidivrl
call
adc
push
dec
jl
call
out
xchg
inc
in
push
scas
pop
mov
fisttpl
xchg
push
push
je
mov
andnps
ret
add
addr16
push
xchg
outsl
sbb
test
stc
dec
xor
pop
pusha
daa
mov
int3
mov
mov
sahf
popa
push
scas
or
push
push
loop
aas
xor
arpl
int
pop
xor
push
mov
aaa
test
push
sahf
xor
xchg
je
jnp
and
xlat
mov
test
push
pop
jno
push
mov
mov
jo
add
ret
cs
mov
out
sahf
push
push
xor
sub
adc
mov
dec
sbb
xlat
fs
mov
push
ret
push
scas
inc
mov
jno
adc
sahf
mov
mov
mov
movsl
push
sbb
xchg
rcll
or
gs
mov
mov
paddb
inc
dec
call
popf
jne
incl
subb
jmp
sub
sbb
xchg
ficoml
and
push
clc
cli
inc
popf
in
xor
and
lcall
sbb
arpl
mov
test
and
insl
xchg
sub
in
stos
jno
orb
cwtl
dec
cltd
push
mov
adc
repnz
pop
mov
and
mov
shrb
mov
int3
sub
test
mov
inc
mov
popa
out
outsb
cmp
mov
mov
dec
adc
adc
pop
out
test
adc
or
repz
cwtl
push
sbb
jo
inc
adc
push
ficomps
inc
xchg
hlt
cmpsl
pop
xchg
add
int
cmp
or
clc
dec
cli
pop
mov
aam
push
or
mov
xor
movsb
adc
addr16
stos
cmpsl
mov
sti
fdivrl
push
adc
scas
mov
cmpsl
xor
mov
adc
dec
adc
fwait
movsb
mov
sub
sub
cli
sbb
xchg
push
sbb
inc
add
stos
in
pop
jp
and
mov
inc
repnz
dec
cli
add
les
sbb
push
dec
push
inc
jmp
jne
sbb
push
scas
pmaxub
fstps
and
adc
push
into
cli
sbb
and
cwtl
and
pop
mov
sahf
and
stc
jnp
jns
mov
sbb
xchg
ljmp
sti
repz
sub
gs
sbb
and
and
aad
pop
icebp
or
push
enter
popa
clc
pusha
dec
and
mov
js
jne
inc
adc
or
and
lcall
jns
arpl
adc
adcl
sub
cli
inc
xchg
mov
sub
push
dec
pop
cmp
sub
xchg
dec
adc
xchg
inc
push
mov
pop
push
addr16
fdivr
inc
pop
push
jo
clc
sub
inc
mov
jns
adc
pop
in
nop
sub
outsl
xor
sub
sub
mov
add
sub
sbb
mov
or
pop
sub
sub
pop
clc
or
popa
or
sbb
cli
pop
adc
dec
stc
daa
insl
gs
sub
inc
in
jne
in
fsts
adc
test
adc
adc
lock
add
lea
nop
sti
cmp
jns
dec
outsb
scas
pushf
test
xchg
movsl
xchg
psubd
or
sub
pop
outsl
out
cmp
mov
mov
adc
leave
or
jns
adc
mov
pop
mov
mov
cli
ret
movsb
adc
cltd
push
pop
aas
lods
mov
mov
xchg
mov
xchg
lea
nop
sub
leave
in
jge
int3
cmpsl
adc
push
inc
clc
pop
xlat
test
dec
rcll
xor
push
mov
js
test
mov
xor
and
jb
pop
add
sbb
out
les
sub
add
adc
adc
test
mull
ss
cltd
dec
jge
test
shlb
or
add
pop
out
xor
adc
sbb
or
adc
mov
pop
xchg
push
or
adc
sbb
sbb
and
push
sbb
enter
add
pushf
add
push
sbb
int3
push
add
xor
mov
daa
std
lcall
or
jmp
push
adc
scas
sti
pop
sti
sub
xchg
add
mov
insb
sub
pusha
jg
int
out
xchg
call
lahf
mov
es
sbb
fs
outsl
cltd
repnz
sub
add
clc
test
and
jg
dec
sub
mov
jge
adc
push
mov
xor
sub
adc
je
jecxz
sar
mov
test
dec
jno
aam
test
push
jmp
rcll
icebp
das
inc
adc
xchg
push
jmp
gs
and
xor
sub
dec
adc
and
fcmovu
push
xchg
int3
in
loop
rorl
mov
jns
inc
jbe
fldcw
pop
ret
jb
sbb
daa
sub
inc
sbb
cmp
cmp
repz
mov
sbb
pop
adc
and
lar
jecxz
jle
mov
lcall
or
push
adc
incl
xchg
mov
mov
sbb
push
cli
jmp
mov
jmp
jl
xchg
adc
ja
jb
push
cli
scas
or
repz
xchg
or
push
dec
cli
inc
mov
loop
push
push
inc
insb
sbb
cli
popa
in
fmull
lret
jae
repz
jno
pop
cmp
mov
aaa
lods
jne
ret
into
sbb
jns,pn
cli
out
adc
jne
xchg
jmp
inc
imul
lahf
roll
mov
nop
and
sbb
adc
jb
jmp
cli
movsl
adc
adc
orb
cmp
push
lea
sbb
mov
xchg
ljmp
and
xor
xor
cmp
push
hlt
adc
mov
sahf
mov
in
andl
mov
dec
sub
xchg
imul
adc
fsubl
scas
dec
imul
sub
xchg
stos
rcll
jnp
lods
add
adc
adc
adc
sbb
xchg
push
lods
inc
mov
and
push
mov
pop
fsts
into
inc
mov
push
jnp
dec
adc
sbb
and
mov
out
cmc
pop
lds
and
and
pop
jmp
out
std
outsl
dec
daa
clc
adc
lock
and
push
aam
scas
lods
test
mov
in
sub
jmp
mov
cltd
jge
in
es
sbb
cmp
sbb
sbb
xor
xor
push
add
aad
add
adc
aas
adc
adc
push
inc
adc
sbb
mov
or
mov
jl
dec
push
popf
jp
popf
pop
mov
pop
das
mov
lret
aam
out
and
lahf
mov
sub
mov
sbb
pop
sbb
daa
xchg
pushf
shll
push
mov
jle
xchg
xor
mov
sub
mov
aam
imul
loop
push
stc
sbb
dec
sahf
jmp
lods
aam
cmpsl
sub
lods
out
dec
push
sti
sbb
xchg
scas
scas
add
push
xchg
cmpsl
mov
xchg
jno
mulb
daa
and
in
outsb
inc
adc
jae
aam
jmp
dec
test
sub
adc
cmp
cld
sbb
stc
adc
push
sbb
and
add
adc
pop
jbe
dec
mov
push
push
and
jnp
adc
inc
push
sbb
dec
inc
push
lds
xchg
lea
out
mov
jl
sbb
pop
sbb
lea
sahf
inc
sbb
fwait
cmp
mov
mov
jne
hlt
in
adc
and
hlt
xchg
in
inc
dec
aaa
push
ja
pop
sub
push
mov
in
cs
outsb
push
jne
dec
push
sbb
pop
push
icebp
mov
push
adc
in
popf
fnsave
aas
loopne
scas
sbb
nop
idiv
sbb
inc
enter
pop
or
cli
movsb
pop
and
lods
and
popf
xor
jnp
jns
movsb
frstor
aas
mov
insb
icebp
sarl
jle
hlt
mov
lret
jg
jne
jecxz
mov
outsb
shlb
mov
mov
aas
fs
or
inc
std
mov
adc
mov
pop
inc
sbb
lret
ja
insl
xor
xor
pushl
xchg
lea
add
bound
fidivl
inc
fcoml
shl
loopne
iret
jne
aam
push
decb
push
inc
in
sbb
pop
daa
lret
jne
cmc
sbb
bswap
xor
ss
jbe
inc
push
in
xchg
jmp
pop
adc
std
outsl
xor
xor
repz
movsb
push
mov
push
cmc
imul
cmc
data16
dec
mov
sahf
push
imul
mov
cwtl
movsl
pop
xchg
add
xor
sub
pop
loope
push
das
or
ficoml
mov
setg
iret
addr16
sete
pop
xchg
jno
aaa
sbb
sub
insb
mov
push
clc
push
enter
shlb
add
mov
push
and
adc
xor
or
lret
inc
or
sti
in
dec
cwtl
imull
xor
fcoms
addr16
or
sub
sub
fimuls
clc
sbb
add
fisubrl
sbb
inc
cli
pop
subl
add
push
mov
rorb
push
adc
mov
clc
out
popa
je
sbb
adc
cltd
jmp
lret
adc
cmp
les
insb
ficoml
pushf
mov
xor
jle
ds
out
repnz
cwtl
lret
enter
mov
cmp
in
or
in
push
addr16
cmp
lock
icebp
nop
adc
dec
sub
shl
enter
adc
inc
jbe
adc
std
xchg
sbb
decl
add
outsb
fbstp
test
insb
call
cld
ret
outsb
pop
jp
xchg
divl
ficoms
inc
cli
and
scas
jmp
xchg
loop
cmp
sbb
and
xchg
dec
push
enter
repz
pusha
mov
or
inc
sbb
push
imul
xchg
mov
push
sub
roll
mov
and
test
fsts
dec
push
sti
add
in
insb
insb
push
adc
xchg
outsb
mov
lahf
and
pop
dec
fldl2e
shlb
pop
test
jg
popf
sub
xor
cs
lods
or
enter
sub
rorb
lods
pop
divl
repnz
in
inc
cli
push
jle
inc
ret
popa
push
lods
sub
insb
xor
cmp
cmp
inc
add
ret
xchg
or
lret
mov
lret
int
mov
call
nop
push
sub
cs
std
push
aaa
cwtl
mov
fists
mov
sti
je
jecxz
pop
and
or
mov
cmp
aas
mov
dec
dec
shlb
jg
mov
pop
je
lods
fisttpl
pop
shr
gs
sbb
sahf
or
sahf
cmpsb
scas
cmp
sub
dec
xor
pusha
lcall
cli
out
psrld
pop
outsl
in
inc
iret
fildl
add
sahf
inc
push
dec
rcll
fucomi
adc
pusha
xlat
jmp
jo
scas
inc
xchg
xchg
movsb
insl
inc
and
in
xor
pop
xchg
and
cwtl
ss
push
push
push
dec
jecxz
lds
push
out
les
mov
mov
pop
movsl
ds
les
stc
sub
stc
in
sub
sub
push
mov
lcall
test
lcall
clc
ret
pop
or
insb
dec
xor
or
and
mov
lods
cld
ret
jle
test
dec
lret
clc
mov
inc
sbb
dec
dec
movsl
adc
test
push
cld
nop
rcr
or
jb
std
std
scas
negb
inc
fs
or
cmp
mov
xchg
fcmovb
or
in
push
and
cltd
pop
std
in
outsb
std
dec
and
mov
mov
mov
outsl
daa
add
xor
xlat
cltd
adc
shrb
fists
clc
and
push
jecxz
and
xchg
ret
enter
sbb
adc
stos
and
scas
repz
fdivl
scas
movsb
mov
dec
stc
add
push
cli
pop
push
cli
sub
daa
cmp
xchg
inc
jg
repz
icebp
adc
xchg
sti
pop
stc
das
adc
scas
cltd
nop
or
clc
les
out
add
jmp
insl
xchg
sti
and
ljmp
pop
jecxz
inc
out
popf
adc
sahf
aad
mov
mov
call
xchg
inc
loopne
lahf
imul
rcrb
sti
js
pop
sbb
in
mov
or
ja
mov
and
pop
mov
cmp
sub
in
xchg
dec
popf
mov
add
lcall
sub
push
jnp
cs
mov
mov
movb
lahf
inc
pop
add
push
pop
cltd
inc
daa
xor
dec
or
sti
jo
mov
jle
xlat
cwtl
jne
ficoms
fnstenv
test
pop
int
int
xchg
stos
lret
push
arpl
lea
and
scas
stc
xchg
push
or
pop
and
popa
movsb
iret
idivb
ljmp
mov
imul
mov
dec
inc
dec
and
mov
mov
or
neg
jns
scas
cmp
ds
inc
mov
or
aam
dec
rcrl
pop
or
push
fsubr
push
in
add
push
pop
imul
lahf
jle
imulb
sbb
adc
in
sbb
push
mov
call
adc
stos
adc
xor
scas
ss
scas
ret
dec
mov
sub
jp
out
lret
or
cmp
mov
jge
cmc
aas
mov
sub
mov
pop
xchg
sub
cld
or
aas
mov
pushf
mov
xor
jb
xlat
movsl
les
xor
aas
je
inc
xchg
aad
lahf
ret
mov
mulps
pop
pop
cli
das
cld
inc
jo
cli
fsubp
mov
loop
sub
pop
repnz
mov
outsl
mov
cmpsb
inc
sub
lahf
push
imul
adc
lods
jns
mov
adc
sahf
push
xlat
daa
repz
adc
lcall
addr16
or
xor
push
inc
jns
incl
jne
daa
shlb
insl
pusha
mov
adc
cli
in
mov
mov
mov
mov
and
inc
push
add
fldt
mov
xor
adc
ret
in
inc
mov
mov
test
inc
bnd
push
cmp
fimull
outsb
scas
dec
mov
scas
repz
arpl
rcll
mov
repnz
ja
arpl
xchg
inc
xchg
dec
addr16
sbb
cmp
and
xor
xchg
bt
mov
jge
dec
insl
xchg
sahf
in
mov
mov
sub
stos
mov
lret
insl
cli
in
cs
push
repz
push
js
fwait
in
and
jnp
pop
ror
decl
adc
mov
add
jns
aad
jb
xchg
pop
icebp
mov
in
sub
pop
mov
xlat
fs
decb
cmp
push
mov
and
sub
cmpsl
or
push
testl
popa
sbb
mov
cld
test
add
in
popf
jne
xchg
pop
adc
push
xchg
mov
pop
pushw
jnp
mov
inc
popa
mov
cmp
ljmp
and
push
mov
js
shrb
sub
dec
inc
and
ret
or
and
mov
lods
adc
sti
and
mov
cmp
cmp
sbb
xorb
fimuls
xchg
sub
pusha
popf
pop
jae
popa
sti
int3
cmp
sbb
push
dec
xor
hlt
mov
push
sub
iret
xor
inc
test
pusha
lcall
mov
inc
shl
frstpm(287
mov
in
xchg
pop
scas
jb
sbb
loopne
clc
pop
dec
lds
or
xchg
jne
mov
lods
xlat
test
sub
pop
lret
cmpsl
pop
xchg
inc
lods
cmp
icebp
adc
stos
mov
pop
push
cltd
or
aam
gs
cmp
mov
jp
mov
and
subb
gs
push
or
es
cmovle
sbb
out
xor
cmp
and
mov
jge
je
xor
ss
cmp
scas
popf
jle
bound
faddl
inc
lcall
adc
testb
jmp
enter
jge
out
cmp
push
aas
nop
ljmp
add
push
pop
sbb
sbb
shr
adc
add
mov
adc
popfw
cld
lock
dec
cmpsl
push
inc
xchg
fcompl
fsts
iret
lods
scas
daa
jns
sbb
lock
icebp
and
or
sahf
pop
xchg
cltd
pop
in
popf
mov
mov
inc
imul
sbb
lods
fisubrl
pop
dec
inc
inc
outsl
and
jns
mov
adc
inc
mov
pop
mov
add
mov
scas
leave
mov
xor
mov
and
push
icebp
adc
and
subl
push
jg
nop
mov
sahf
inc
jne
movsl
or
outsl
mov
pop
dec
jae
inc
cmp
mov
mov
inc
sbbb
inc
popf
shrb
sub
add
gs
mov
sbb
es
add
shlb
pop
xchg
mov
push
int
addl
push
mov
push
ja
and
or
mov
jmp
call
ja
loopne
sti
cmpsl
adc
std
inc
test
lret
sti
bound
inc
cmc
mov
or
out
pusha
inc
stos
sub
mov
sti
daa
mov
push
dec
movsb
inc
outsb
repnz
adc
xchg
in
repnz
jno
jb
test
sub
ds
je
jmp
cmp
sti
dec
test
out
nop
jmp
mov
lahf
shlb
or
mov
push
and
cltd
push
sbb
andb
jbe
pop
and
mov
push
and
test
sub
mov
push
scas
ja
aam
xchg
lods
xchg
adc
rorb
mov
push
pop
pop
or
sti
mov
inc
daa
adc
adcb
jl
mov
inc
movsl
cmp
push
and
adc
sub
orb
sbb
sub
mov
ret
aas
xchg
in
sbb
or
add
lahf
mov
mov
inc
sbb
and
mov
and
into
sbb
insl
jno
jp
movsl
mov
sti
adc
test
xchg
cmp
je
push
inc
jnp
test
stos
xchg
sti
jo,pn
mov
mov
cld
out
cwtl
add
pop
or
push
or
lods
jnp
andl
sub
inc
push
sti
push
daa
in
or
and
nop
add
pop
sbb
pop
sbb
xor
aaa
or
xchg
and
nop
dec
sti
divl
repz
or
xchg
and
nop
fcmovnb
add
push
js
and
nop
bswap
xor
cmp
aas
or
xchg
and
nop
das
enter
xor
pop
or
xchg
and
dec
enter
xor
jg
arpl
nop
outsl
enter
xor
xchg
and
fs
mov
xchg
and
xlat
xor
sbb
or
xchg
and
nop
iret
enter
xor
sbb
or
test
xchg
jg
aaa
and
nop
sbb
pop
add
pop
sbb
or
xchg
jnp
inc
cmp
aas
nop
and
daa
sub
das
sbb
push
xchg
and
inc
enter
xor
jae
ja
inc
jnp
jg
arpl
imul
sbb
fwait
and
mov
sbb
mov
enter
xor
inc
xor
sbb
out
xor
out
jecxz
incl
nop
repz
xor
sbb
or
xchg
and
nop
ror
scas
scas
lcall
movsb
pop
adc
xchg
loopne
dec
insb
dec
push
mov
mov
jne
sbb
mov
xchg
sbb
xchg
scas
aaa
mov
pop
cmp
cmp
test
jge
movsb
push
aam
mov
out
daa
xchg
lods
pop
or
ffree
sub
sbb
pop
ficoms
out
stos
and
mov
xchg
jbe
sub
movsb
cmp
out
stc
push
je
mov
sbb
test
inc
push
mov
jp
xchg
aas
sti
scas
lods
mov
out
movsl
sarb
mov
pusha
sub
test
or
xchg
pop
test
bound
shl
popf
subb
mov
icebp
insl
outsl
imul
js
add
sti
and
mov
and
shrb
hlt
stos
mov
in
mov
cmp
adc
fisttpll
dec
and
mov
mov
jo
dec
mov
scas
movsl
cmp
push
daa
je
imul
popf
push
mov
sub
lcall
xchg
xor
lea
pop
int3
negb
lods
push
daa
pop
push
repnz
cmp
rolb
shlb
jbe
aam
mov
imul
inc
outsb
scas
dec
jmp
xchg
clc
pop
je
dec
adc
dec
lock
stos
sub
push
addr16
mov
or
mov
shlb
jmp
out
insl
mov
pop
xlat
ss
or
testl
push
cli
inc
add
iret
add
sti
mov
or
xchg
in
lahf
xchg
call
inc
xor
pop
jl
adc
mov
imul
sbb
dec
cmp
push
aad
adc
stos
mov
xor
test
nop
xor
rcrl
shll
xchg
jo
xor
sbb
jo
pop
dec
inc
add
inc
inc
stos
and
lods
repz
outsb
cli
jecxz
xchg
stos
xor
dec
inc
xchg
sar
mov
inc
imul
outsb
rcrl
sbb
cli
mov
mov
andl
dec
insb
sbb
cmp
movsl
repnz
and
add
sub
cmp
push
nop
and
pop
xchg
mov
jns
pop
outsb
or
jne
loop
sub
adc
inc
sahf
outsl
repnz
test
adc
xchg
cvttps2pi
lods
popf
sub
pusha
pop
mov
shll
icebp
lret
or
add
add
pop
or
sbb
or
ja
add
or
mov
pop
xchg
ljmp
aam
jp
jae
jmp
in
scas
mov
test
push
sbbl
not
mov
sub
xlat
mov
sbb
push
push
cs
push
sbb
push
or
jecxz
mov
movsl
iret
mov
mov
popf
ret
fadd
call
pusha
mov
in
jbe
sub
repnz
idivl
jbe
jae
in
sbb
outsl
or
clc
adc
jae
lea
add
mov
sub
and
xor
vorps
mov
shrl
das
cmp
add
mov
out
loop
scas
xlat
adcb
aam
add
jmp
pop
cli
mov
lret
sbb
mov
push
testl
fwait
pop
dec
shrl
mov
gs
outsb
movsl
dec
mov
cltd
test
jbe
cld
adc
lods
pop
or
fs
bound
cmp
sbbb
mov
sbb
cmc
dec
xor
es
mov
push
in
push
flds
xchg
sbb
mov
shrb
mulb
test
push
pop
test
adc
loope
adc
daa
fbstp
inc
xor
cmp
inc
adc
popf
and
inc
ret
ror
or
inc
gs
inc
pop
mov
sti
stos
xchg
and
push
adc
and
mov
mov
test
jne
mov
mov
mov
push
mov
mov
pop
cmp
jb
add
cmp
jae
push
pop
ret
xor
ret
mov
mov
add
ret
push
mov
push
push
mov
mov
mov
rep
pop
pop
pop
ret
push
mov
push
xor
mov
mov
rep
pop
pop
ret
mov
mov
mov
add
xor
dec
jne
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
popa
arpl
jbe
xor
xor
xor
xor
xor
cmp
dec
outsl
popa
fs
inc
jb
outsl
jb
add
inc
outsl
jne
and
je
insb
outsl
popa
and
popa
insl
imul
and
jb
jb
and
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
add
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmp
add
jmp
ret
call
call
mov
sub
mov
call
call
call
call
mov
movl
add
pushl
ret
ret
push
push
push
call
mov
mov
push
push
call
push
push
mov
call
pop
mov
pop
ret
push
push
push
push
push
push
call
mov
mov
push
push
call
push
push
push
call
add
push
push
push
call
pop
pop
ret
sub
push
push
push
xor
pushl
mov
call
mov
pop
mov
movzwl
lea
movzwl
dec
test
jle
push
cmp
mov
je
cmp
je
testb
je
testb
jne
push
push
push
call
add
test
je
cmp
je
movl
push
push
push
call
add
test
jne
mov
push
push
pushl
push
call
cmpl
mov
je
mov
mov
sub
push
mov
add
add
push
push
call
mov
add
test
je
push
push
push
push
call
mov
pushl
add
mov
push
push
jmp
mov
pushl
add
push
push
call
add
mov
add
push
push
call
pop
cmp
pop
je
mov
push
push
push
call
add
push
push
push
call
cmpl
je
cmpl
je
push
pushl
call
pop
pop
push
push
push
call
add
xor
jmp
add
movzwl
incl
dec
cmp
jl
pop
pop
pop
pop
add
ret
mov
sub
push
xor
cmp
push
je
mov
cmp
lea
je
push
push
mov
add
push
call
cmp
mov
jne
push
push
push
push
call
add
add
xor
cmp
jne
pop
pop
pop
pop
add
ret
mov
cmp
jne
mov
mov
mov
add
add
mov
test
je
test
je
and
mov
movzwl
push
pushl
call
test
mov
jne
pushl
push
push
push
jmp
mov
add
add
push
mov
pushl
call
test
mov
jne
push
pushl
push
push
call
add
mov
add
mov
add
jmp
push
mov
sub
push
push
push
andl
movl
andl
andl
mov
movzwl
mov
movzwl
add
mov
mov
add
mov
mov
add
mov
andl
jmp
mov
inc
mov
mov
cmp
jge
mov
mov
shr
and
test
je
mov
mov
and
add
mov
mov
mov
and
add
mov
mov
movzwl
mov
movzwl
add
mov
mov
add
mov
mov
add
mov
andl
jmp
mov
inc
mov
mov
cmp
jge
mov
mov
shr
and
test
je
mov
mov
and
add
mov
mov
mov
and
add
mov
mov
movzwl
mov
movzwl
add
mov
mov
add
mov
mov
add
mov
andl
jmp
mov
inc
mov
mov
cmp
jge
mov
mov
and
test
jne
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
subl
cmpl
je
subl
cmpl
je
subl
cmpl
je
subl
cmpl
je
jmp
cmpl
je
jmp
andl
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
movzwl
mov
imul
mov
movzwl
cmp
jne
mov
sub
mov
mov
sub
mov
mov
pushl
mov
add
push
mov
mov
add
push
call
add
mov
inc
mov
jmp
jmp
cmpl
je
mov
sub
mov
mov
sub
mov
mov
add
mov
andl
jmp
cmpl
jae
mov
sub
mov
mov
sub
mov
mov
pushl
mov
add
push
mov
mov
add
push
call
add
mov
inc
mov
jmp
cmpl
je
jmp
mov
sub
mov
mov
sub
mov
mov
pushl
mov
add
push
mov
mov
add
push
call
add
mov
add
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
pop
pop
pop
leave
ret
push
mov
push
pushl
call
cmpl
pop
je
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
push
pushl
call
pushl
pushl
call
add
cmpl
push
push
push
movl
je
mov
mov
mov
mov
test
mov
je
mov
test
je
push
push
pushl
call
add
jmp
pop
pop
pop
leave
ret
push
push
push
push
push
pushl
call
mov
mov
mov
pop
sub
lea
je
test
je
cmpl
je
mov
mov
sub
shr
je
test
lea
jbe
mov
movzwl
mov
and
cmp
jne
and
add
add
add
mov
movzwl
mov
and
cmp
jne
and
add
add
mov
shr
add
mov
movzwl
mov
and
cmp
jne
and
add
add
add
mov
inc
inc
decl
jne
add
cmpl
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
push
call
mov
mov
sub
je
dec
je
dec
jne
pushl
pushl
push
push
call
add
jmp
movzwl
pushl
push
push
jmp
pushl
push
push
call
add
push
push
push
push
call
push
push
push
call
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
cmp
add
add
add
add
cmp
add
add
add
adc
movsb
cmp
add
cmp
add
adc
int3
cmp
add
cmp
add
cmp
add
add
add
add
cmp
add
add
add
add
je
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
jge
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
jae
addr16
outsl
js
add
imul
push
inc
push
xor
cs
insb
add
pusha
cmp
adc
mov
or
orl
